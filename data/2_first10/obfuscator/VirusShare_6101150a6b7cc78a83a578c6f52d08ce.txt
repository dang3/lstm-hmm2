push
call
xchg
ljmp
cmp
lock
mov
cmp
adc
lock
pop
fmull
out
aad
mov
mov
sub
mov
pop
stc
adc
roll
lahf
popf
adc
lcall
loop
orb
test
push
add
sub
roll
jne
popf
jg
mov
xchg
addl
movsb
push
loopne
pop
int3
sub
mov
lahf
shrl
cltd
ja
jp
mov
fcom
cwtl
roll
sub
sbb
sbb
sbbl
xor
mov
add
rclb
push
sti
or
mov
mov
lcall
dec
adc
push
das
pop
data16
sub
je
ficoms
mov
jne
in
fbld
push
mov
shll
adc
mov
mov
mov
enter
shr
sbb
sbb
and
imul
pop
movsb
sub
leave
adc
shll
rolb
cmp
fimull
call
pop
push
insl
cltd
dec
rol
pop
xchg
pop
fs
int3
mov
sub
pop
inc
mov
cmpl
call
ds
outsb
aad
jns
fisttps
push
lods
adc
sbb
out
jb
in
sahf
ud1
dec
ds
lahf
sbb
mov
sub
pop
rclb
sbb
mov
mov
sbb
pop
sbb
fwait
repz
cmp
mov
clc
mov
fistps
mov
mov
test
out
mov
adc
test
aas
popf
cmc
cmpsl
insb
push
test
int3
adc
and
mov
shr
add
xor
push
sti
ret
pop
js
mov
pop
dec
int
icebp
ljmp
lahf
mov
push
push
movsb
sbb
cli
subl
cmpsl
into
mov
push
fldcw
inc
es
mov
fadd
xchg
push
mov
or
and
push
sar
mov
and
mov
sub
sub
adc
scas
inc
cmp
test
xchg
and
cmp
sbb
inc
fimull
popl
stc
je
data16
sti
sub
mov
push
std
in
mov
enter
loop
fisttps
mov
out
out
roll
lods
hlt
shrl
in
jp
xchg
xbegin
call
push
addl
ret
and
cmpsl
cld
push
lret
and
inc
add
test
movsb
push
mov
adc
or
movsl
or
adc
jge
out
ja
ds
mov
ljmp
hlt
cmp
gs
mov
ror
lcall
out
sub
xchg
push
mov
lcall
sub
jge
mov
mov
xchg
add
cltd
cmpsl
loopne
xchg
leave
adc
xchg
lock
mov
push
xchg
fcmovnb
jmp
mov
adc
test
out
aaa
loop
mov
push
sbb
push
push
cwtl
test
cli
add
mov
cltd
sbb
insb
gs
cs
insb
add
jbe
imul
jns
or
std
jb
pop
xchg
and
or
dec
pusha
jnp
inc
cmp
mov
push
outsl
popf
cld
push
xlat
shlb
sbb
pusha
outsl
cltd
dec
cmp
inc
xchg
mov
push
enter
mov
jp
jae
shl
scas
sbb
xchg
fdivl
nop
adc
sub
imul
pushf
adc
dec
push
or
cmpsl
nop
aad
inc
jl
decl
pop
mov
subl
xchg
imul
add
dec
rcl
add
shl
rol
pusha
mov
bt
clc
bt
shr
pusha
call
lea
je
rol
lea
jmp
enter
mov
mov
mov
sub
imul
xchg
sub
dec
rcll
cwtl
add
daa
in
cltd
vcvttpd2dqy
shll
in
ficoml
mov
cltd
shlb
stc
ret
bound
addl
xor
sub
in
dec
mov
mov
add
xor
and
shll
push
unpcklps
out
mov
fbstp
rorl
mov
imul
shrb
test
mov
fs
xlat
dec
push
lcall
or
xchg
inc
in
fidivrs
jg
das
xlat
repnz
push
adc
inc
loopne
jmp
lods
int3
das
stos
mov
mov
sbb
mov
sahf
cmp
xchg
pop
dec
mov
cmp
outsb
mov
xchg
dec
inc
out
pushf
orb
cmp
gs
cmpsb
addb
jno
push
pop
push
cmp
pop
mov
fs
outsl
mov
and
mov
ror
call
pop
test
pop
inc
ret
cmp
orl
in
cmpl
fbld
mov
mov
mov
push
lock
xor
ja
pushw
pop
adc
mov
jmp
mov
lret
push
cmp
sbb
push
sbb
lcall
in
divl
and
and
adcl
pop
leave
and
add
mov
xor
movsl
pop
xchg
rclb
pusha
out
lcall
cmpl
out
negl
dec
rorl
out
and
xor
jmp
in
subl
mov
jmp
inc
push
push
sbb
lods
ds
rcrl
enter
inc
cld
call
negb
sub
add
mov
add
xchg
into
aad
push
mov
ret
movsl
test
repz
imul
out
loope
xor
idiv
into
xor
jmp
mov
pop
jbe
push
repnz
stos
mov
and
cs
mov
mov
pop
cmc
pop
xchg
sbb
pop
xor
std
jp
sbb
fs
and
xor
mov
sub
ja
fst
mov
xlat
push
sbb
cli
push
xchg
cltd
xor
cmp
std
sahf
mov
adc
sbb
rcrl
movsb
fnsave
and
cmp
insb
outsl
and
ss
add
and
bt
ror
pushf
jmp
loopne
xchg
je
lds
movsb
in
aas
roll
cld
imul
inc
scas
push
call
mov
int3
sub
mov
out
daa
test
adc
or
outsb
aad
mov
gs
jb
das
push
pop
sub
nop
aas
adc
clc
inc
cmpsl
ror
jbe
cmpxchg
xchg
fs
mov
cmp
scas
fwait
call
cmp
pop
div
cltd
cld
xor
mov
xlat
and
xchg
sbb
pushf
imul
movb
cmp
mov
test
jmp
jmp
setnp
movsbw
lea
push
pushf
jmp
sub
pusha
jmp
movw
movl
call
rorb
int
mov
nop
cld
cli
rcrl
mov
inc
gs
xchg
sub
stos
xchg
or
jmp
insl
in
inc
sub
loope
sub
add
xor
enter
stc
divb
push
outsl
xchg
fcoms
inc
into
xor
test
mov
adc
mov
out
test
adc
push
fs
jmp
xchg
imul
adc
xchg
inc
mov
jbe
das
orb
imull
push
inc
int
insb
cmp
mov
jae
out
lret
in
pusha
bound
jno
sar
push
xchg
pop
js
popf
rclb
scas
cwtl
push
into
mov
outsb
xchg
inc
push
mov
rclb
jnp
jmp
add
movsl
les
faddl
mov
fiadds
es
dec
fnstenv
es
cmp
cmp
push
cld
dec
mov
rol
int3
mov
xchg
cmp
xor
setge
mov
cmp
pushf
test
inc
in
mov
scas
fisttps
loopne
and
fidivs
cltd
mov
cmp
pop
in
lret
cwtl
cwtl
outsb
cmp
sbb
lret
push
repz
inc
enter
sub
mov
push
mov
ds
push
pop
fidivs
mov
add
sbb
in
jae
test
repnz
loop
sbb
jo
mov
cmc
test
adc
bound
lret
ss
insb
pop
sbb
and
cld
ret
xor
clc
addr16
fs
sbb
imul
mov
adc
subb
mov
and
out
jbe
pop
xchg
pop
popf
lods
iret
pop
add
xor
and
int
dec
ljmp
pop
inc
mov
iret
stos
inc
sub
mov
dec
mov
xor
je
adc
repz
mov
jb
fsubr
shrb
mov
test
test
push
or
mov
dec
dec
pop
cmp
into
fiadds
or
mov
jo
push
and
addr16
cmc
lds
mov
push
or
sbb
rorb
lret
bound
xchg
arpl
inc
js
xchg
es
in
int3
lcall
cmpsl
push
addr16
daa
inc
das
mov
add
out
popa
mov
ret
cmpsl
inc
jno
jnp
push
ret
andl
sbb
cmp
and
movsb
mov
cs
inc
mov
scas
mov
pop
imul
and
sbb
or
pushf
jmp
pop
je
push
xchg
push
mov
mov
sub
push
nop
lds
jnp
sahf
xlat
fistpll
add
adc
sarl
xor
add
shlb
daa
mov
popf
sub
jae
push
sbb
icebp
jo
push
sbb
adc
out
xchg
xchg
movl
fdiv
xchg
inc
sarb
pop
jbe
or
andb
rorl
cmp
jns
push
out
lock
hlt
imul
lret
out
rcrb
mov
fisubl
ljmp
ss
out
inc
and
in
dec
add
sub
loopne
adc
inc
sub
ds
imul
ja
sub
pop
dec
sbb
adc
push
push
add
cmp
adcl
cmp
pop
jge
ret
jne
stos
mov
adc
adc
or
cmp
push
fwait
xchg
cmp
jne
push
jnp
call
out
fdivrl
push
adc
roll
inc
inc
mov
cmp
mov
test
push
bnd
cmpsl
and
loope
jp
dec
add
or
clc
and
mov
stc
icebp
shlb
push
jno
std
xchg
mov
cmp
push
out
jns
xchg
jmp
jl
push
in
imul
iret
pop
adc
call
jb
stos
scas
flds
pop
enter
push
mov
sub
lret
arpl
bound
test
mov
mov
stos
int3
bound
pop
sbb
int3
cmp
and
fdivrs
and
cli
mov
mov
repnz
xchg
jnp
pop
mov
fcmovnbe
sbb
sbb
inc
mov
mov
mov
and
jmp
lea
jae
test
jmp
movb
lea
jae
test
cmp
jmp
lea
je
cmp
sub
call
xchg
dec
inc
cmp
mov
ficoms
inc
lcall
stc
call
hlt
mulb
popf
mov
and
pop
xor
aad
sub
add
pop
push
les
add
ds
mov
popf
lock
cmpsb
movl
adc
cwtl
fiadds
xchg
xchg
lock
leave
mov
adcb
rclb
call
call
ret
push
inc
aam
xor
push
ror
jl
xor
xchg
iret
imul
xchg
add
push
xchg
xchg
and
inc
mov
sub
cmp
stos
mov
cmp
jae
mov
lock
sbb
sbb
or
movsb
sbb
iret
andl
and
imul
hlt
and
mov
and
jae
in
in
lret
sub
in
or
mov
push
pop
out
jle
push
popa
into
xlat
or
lret
nop
and
mov
mov
test
icebp
pop
inc
sub
mov
loopne
out
xlat
jmp
pop
movsl
out
jle
les
xlat
dec
das
and
mul
hlt
sub
rcrl
sub
xchg
das
and
imul
stc
clc
jmp
call
insl
mov
movsl
mov
adc
jge
adc
xchg
jge
xchg
push
mov
sub
orb
jmp
jle
stos
out
mov
cmpsl
outsb
stos
in
xchg
and
mov
outsb
inc
cld
loop
cmovnp
sbb
mov
sub
inc
and
mov
dec
lock
xlat
fcoml
pop
xor
scas
inc
sbb
mov
add
mov
lret
aad
pop
cmc
outsb
cltd
push
jmp
loopne
fcompl
dec
dec
fldl
imul
add
insb
and
pushf
mov
movb
pushl
ret
pushl
push
lea
jb
mov
pushf
pusha
pusha
pushf
lea
jmp
jmp
dec
push
mov
call
repnz
call
inc
cmp
ds
loop
and
xor
popf
sbb
adc
les
scas
testl
pop
jl
nop
jl
inc
out
mov
add
js
mov
or
push
or
inc
lock
hlt
mov
mov
out
hlt
sub
mov
shrl
cmp
jb
xor
iret
sahf
lods
loop
fwait
iret
aad
mov
pop
pop
jb
aad
movsl
push
imul
rcrl
nop
scas
mov
ret
lods
lea
jae
mov
xchg
push
mov
jmp
pop
insl
enter
xor
mov
mov
mov
stc
and
insb
push
addb
outsl
outsl
inc
fsubs
add
adcb
inc
and
outsl
xchg
sbb
mov
jg
lock
jle
test
popf
insl
cmpsb
dec
cld
push
or
sbb
stos
ret
cmp
imul
xorb
test
js
lock
lods
pop
push
cmp
pop
jnp
stos
ss
rolb
out
loopne
sbb
and
cs
imul
xchg
mov
pop
push
pop
movsl
decl
xchg
jb
or
movb
mov
inc
imul
out
cmpsl
sbb
sarl
xchg
popf
mov
mov
pusha
inc
scas
mov
mov
cli
dec
xchg
pop
js
repz
push
test
cmp
mov
cmovns
rcrb
sbb
mov
push
mov
add
je
mov
roll
push
cmp
sub
xchg
fcmovnbe
add
xchg
cmp
negb
sub
add
aam
xlat
jo
fwait
divb
and
imul
imul
arpl
inc
pop
out
bound
xlat
je
mov
mov
fcoms
rcrb
mov
sbb
cwtl
jle
in
lahf
push
push
shl
xchg
stc
cld
xchg
mov
mov
xchg
pop
push
sbb
test
mov
mov
sub
rolb
leave
repnz
push
jmp
test
test
xor
call
pusha
ret
jecxz
dec
shl
daa
sub
lds
stos
jns
mov
into
sbb
in
pop
xor
mov
cmp
stos
and
ror
add
lret
rcll
arpl
movsb
and
mov
lods
pop
add
cmp
mov
inc
sbb
sbb
fwait
jns
movsl
inc
cs
or
xor
popa
jl
xor
cltd
ja
inc
repz
or
lods
mov
push
aas
bound
cmp
lds
lahf
or
inc
pusha
jecxz
ss
push
cmp
push
xchg
jbe
pop
cmp
out
xchg
mov
divb
aad
loop
xor
test
lods
pushf
out
sub
mov
push
pop
lds
lea
and
add
push
popa
jae
popa
outsb
addr16
jo
add
test
sub
xor
push
lea
call
push
pushf
pushf
lea
jmp
test
pop
in
push
outsl
lret
push
loopne
push
sbb
dec
mov
popa
sbb
push
sahf
adc
into
jne
inc
jl
movsb
movsl
andl
push
add
popf
mov
ljmp
dec
pop
xchg
jb
inc
jae
push
jmp
mov
sti
jp
syscall
inc
xlat
push
in
cmp
nop
filds
enter
sti
stos
dec
stos
xchg
push
and
js
push
mov
hlt
jo
ljmp
cmp
push
mov
in
sub
cld
jno
cmp
lods
lods
movl
add
fwait
or
scas
nop
xor
cltd
test
popa
add
int3
lods
shlb
jne
jp
mov
scas
lea
mov
jp
out
pop
sub
or
test
aas
and
fcoms
ja
inc
or
lahf
outsb
mov
insl
push
idivl
out
mov
or
xor
shrb
mov
mov
mov
xorb
mov
push
mov
imul
mov
leave
sub
test
mov
jb
jecxz
and
out
int
sbb
hlt
mov
loopne
xchg
mov
or
aaa
les
std
inc
hlt
inc
mov
add
andb
inc
add
ret
push
jae
pop
icebp
mov
outsb
rcll
dec
push
mov
mov
sbb
insb
inc
adc
mov
mov
mov
negl
adcl
loop
daa
adcb
jmp
and
sub
repnz
pop
mov
push
adc
and
add
rorb
jo
fstps
clc
popa
pop
mov
xchg
iret
dec
int3
mov
cld
push
les
push
jo
xlat
in
mov
xchg
lods
loop
pop
insl
pop
adc
push
xchg
aaa
imul
xchg
mov
add
es
test
std
mov
repnz
mov
mov
shrl
sub
fwait
mov
push
add
inc
gs
jo
outsb
inc
imul
add
fucomi
or
add
nop
fdivl
loope
cwtl
jne
jne
and
mov
movsl
dec
inc
test
push
mov
push
push
xor
push
xlat
jne
adc
cltd
scas
pop
std
mov
cmp
rolb
aad
pop
or
fimuls
push
mov
testb
movl
push
inc
arpl
shr
xchg
loopne
sub
mov
je
jns
iret
xchg
sub
lahf
cmp
lret
repnz
inc
mov
jl
sbb
and
jnp
inc
pop
in
js
cltd
das
imul
push
dec
xor
cs
insb
add
or
cmp
pop
pop
lahf
dec
popa
repnz
inc
loopne
jp
inc
xlat
lcall
jmp
pop
inc
mov
pop
call
dec
and
xor
gs
sub
add
pop
adc
inc
dec
stos
mulb
lret
sbb
sbb
fwait
sbb
push
insl
xorl
dec
nop
test
or
mov
outsl
pop
fs
iret
ss
jo
test
int
jb
pop
add
in
inc
dec
adc
xchg
jecxz
xor
enter
lea
ja
not
jmp
call
mov
lret
in
daa
rolb
clc
mov
decb
loope
int
jns
daa
divb
inc
push
in
or
and
fs
divl
aad
inc
mov
or
mov
push
les
fistl
sbb
pop
cmp
ret
add
xor
jno
adc
mov
mov
push
out
jge
mov
xchg
sub
inc
adc
jo
out
mov
mov
lods
mov
int
ret
jle
out
fs
js
imul
adc
xchg
mov
add
and
sub
test
bswap
add
call
pushf
pushf
pusha
movl
push
jmp
mov
call
mov
sar
shr
add
dec
bt
sbb
mov
stc
test
jmp
cmc
push
xchg
push
sti
or
int3
orb
inc
inc
sbb
xor
roll
or
ljmp
inc
lret
adc
xchg
push
outsl
cs
or
lret
dec
push
ret
inc
or
push
hlt
ds
xchg
mov
push
rcr
adc
push
clc
cld
cwtl
dec
pop
mov
test
aam
mov
ljmp
jb
cmpl
pop
test
sbb
enter
imul
mov
and
aaa
jne
push
fsts
push
lds
in
test
scas
fcmove
pushf
mov
jl
cmp
es
int3
cmp
mov
cli
xor
in
pop
in
loop
stc
out
cmp
icebp
dec
fisttpl
adc
in
ss
cld
pop
dec
mov
dec
cmp
mov
pop
cmpsl
enter
jle
imul
add
test
cmp
outsb
imul
rorb
inc
cmp
adc
push
push
sbb
or
mov
push
pop
push
jb
leave
mov
pop
into
in
cmpsl
sub
movsl
nop
in
sbb
pop
insl
sbb
testb
stc
xbegin
add
mov
cmp
jl
cmpl
mov
test
test
dec
rclb
pushf
lret
les
dec
clc
shll
popa
loope
xchg
lahf
in
out
and
sti
orb
ds
pop
add
nop
pop
push
jnp
or
fisubrl
int3
dec
jae
outsl
cli
stos
xchg
dec
sub
xor
jmp
fwait
dec
pushf
jns
repz
adc
adc
fs
das
mov
jno,pn
sbb
dec
test
dec
dec
mov
mov
xor
shlb
stc
in
and
mov
imul
mov
sub
lret
js
stos
inc
adc
test
or
add
mov
jo
cs
addl
stos
imul
cmp
pushf
jmp
mov
nop
bound
inc
jne
jecxz
in
lea
std
in
jae
mov
inc
jg
decl
aaa
outsb
daa
cwtl
mov
clc
add
repz
sub
adc
ss
negl
push
iret
mov
scas
icebp
adcb
or
jmp
mov
movsb
nop
dec
int3
add
rcrl
push
xor
pop
mov
ficoms
sbb
imul
test
lahf
aas
gs
cmc
or
xor
dec
dec
mov
cmp
xor
lcall
cwtl
es
pop
pop
iret
jle
dec
mov
or
das
jo
mov
push
sub
and
xchg
cs
push
mov
cmp
cwtl
es
mov
dec
mov
out
sbb
mov
popf
cmpl
push
hlt
xchg
lds
lret
das
mov
fcoms
mov
and
das
lret
add
aas
adc
dec
enter
iret
mov
or
add
and
lret
sbb
mov
divb
out
ja
add
sub
js
jp
fsubl
pop
pop
mov
dec
pop
lahf
bound
mov
and
mov
adc
aam
pushf
imul
mov
jmp
adc
or
sti
and
xchg
mov
insb
mov
cmc
pusha
bound
test
xchg
incl
cmp
mov
adc
roll
movsb
loop
popf
jno
cmp
dec
ficoml
jle
add
push
call
add
and
cmp
push
jae
push
jge
shl
dec
les
negb
repz
mov
into
sbb
or
mov
shrb
pop
mov
sbb
sbb
rcrl
jecxz
iret
jbe
insl
lods
divl
std
pop
and
stos
dec
fwait
xor
mov
dec
sub
sub
cld
jae
inc
aaa
out
mov
adc
mov
and
adc
jg
outsl
adc
arpl
jns
mov
outsb
push
out
test
pop
or
das
lcall
push
jnp
xchg
pop
mov
jl
test
xchg
xchg
or
xchg
xchg
xchg
fnstcw
cmp
xchg
push
pop
dec
inc
pop
out
jecxz
mov
mov
lds
shrl
into
dec
pop
or
inc
aaa
cs
pop
pop
sbb
push
add
mov
adc
mov
in
cmpsb
push
add
fisubl
pushl
aaa
dec
lea
loope
mov
arpl
repz
sbb
ljmp
sbb
les
dec
xchg
popa
pop
imul
cmp
bound
pop
push
icebp
scas
sysexit
sahf
jg
sbb
mov
sahf
pop
rcr
mov
out
sbb
ret
jmp
sbb
sub
and
in
push
ret
mov
push
sahf
push
in
inc
addb
cmc
test
inc
bound
mov
mov
adc
ss
fcoml
jnp
add
cwtl
les
imul
push
xor
imul
add
push
pusha
pushf
adc
mov
pushl
ret
lods
inc
add
pop
lcall
cmc
mov
enter
or
test
outsl
xchg
les
sti
fimull
sbb
pop
loope
cmp
out
inc
ror
xchg
into
add
scas
mov
loopne
xor
pop
push
enter
lret
lods
mov
imul
xchg
inc
mov
push
push
cmp
subl
push
mov
lods
xchg
out
lret
jge
cmp
sar
lret
insl
cld
or
js
xor
add
and
mov
fsts
push
fisubs
lods
popf
fsubrl
sbb
xchg
jg
repz
push
lret
je
mov
jne
int3
dec
imulb
sti
fucomi
in
xchg
push
mov
setle
inc
lahf
jbe
xchg
inc
add
mov
mov
clc
jle
jae
pop
int3
mov
nop
jns
dec
into
leave
test
push
fbld
push
jns
fsub
lods
cmp
xor
lcall
mov
shlb
fcomps
mov
fstpt
mov
mov
gs
jge
and
mov
or
mov
push
add
lea
adc
rclb
push
sbb
int3
mov
mov
int
inc
loope
fbstp
ss
push
int
test
rcll
add
movsb
mov
sbb
mov
xchg
out
lock
scas
fidivl
pop
test
adc
and
xchg
imul
mov
inc
aaa
inc
adc
in
cmp
sub
dec
cmp
pop
xchg
ljmp
mov
test
addr16
xchg
sub
lods
int
ds
std
xchg
mov
jmp
les
mov
xor
bound
fs
push
push
pop
or
inc
fisttpll
insl
mov
and
dec
xlat
adc
jmp
cmp
in
jge
cld
notl
hlt
out
iret
jne
ss
xchg
mov
scas
mov
stos
jnp
out
subl
loope
xchg
cmpsl
cld
je
mov
jo
movsb
xchg
jle
lock
aam
mov
mov
insl
mov
dec
mov
outsb
lcall
sarb
mov
testl
adc
shll
jge
xrelease
cmp
in
push
pop
pop
cld
mov
xchg
mov
add
and
xor
jge
clc
ds
jmp
ljmp
adc
and
lcall
add
into
fdivr
jae
and
xchg
call
mov
dec
sbb
cmpsb
lds
cmc
jle
and
sbb
fwait
hlt
dec
cmc
test
or
movsl
add
mov
lcall
stc
mov
sub
mov
pop
xlat
shl
xchg
sbb
xorb
jno
add
inc
pop
into
jge
adc
shrb
mov
and
call
daa
cmp
sbb
inc
dec
jl
adc
add
scas
scas
addr16
push
jns,pn
inc
xchg
sub
lcall
sub
add
and
mov
daa
sub
pop
jecxz
lock
jo
jo
out
pop
aam
add
jnp
or
punpckldq
inc
push
mov
mov
imul
test
and
xor
mov
setns
sbb
mov
jmp
sbb
fsubr
dec
jns
lock
gs
sub
mov
dec
aam
adc
add
mov
addr16
fcoml
push
test
pushf
cmp
push
add
shlb
inc
inc
mov
rcl
inc
and
dec
cmc
cmp
jns
stos
cmp
ds
lret
pop
mov
or
or
idivl
cmp
jbe
shrl
and
mov
sarl
test
and
mov
push
or
xchg
ret
and
lods
imul
call
lea
jae
cmc
test
xor
jmp
andb
fidivl
sbb
mov
dec
xchg
fwait
ss
sub
sub
movsl
inc
add
sets
xchg
jl
xchg
repnz
cs
push
cs
fwait
xchg
lret
sub
outsb
in
mov
std
and
pusha
cltd
push
push
or
fs
adc
push
inc
or
mov
iret
mov
movsl
fwait
push
imul
in
adc
xchg
fs
xchg
lcall
imul
add
mov
je
lea
jne
adc
btc
mov
btc
sub
shr
mov
stc
sub
stc
pushl
bt
call
cmp
pushf
bt
cmp
pusha
jmp
pushl
jmp
lea
jb
bt
jmp
jmp
pop
xlat
test
push
ja
xchg
test
ja
aad
xor
add
fs
sub
sarl
cmpsl
dec
sub
out
in
pop
roll
int3
rcrl
mov
sbb
cmpsb
inc
dec
pop
add
adc
xor
mov
push
lds
mov
jl
lcall
and
cmp
xchg
dec
imul
xchg
out
nop
shr
stos
push
xor
mov
push
lcall
mov
pop
cmpb
stos
dec
fs
add
pop
movl
lods
sbb
mov
cvtps2pd
mov
jp
test
loop
xor
je
insb
in
into
scas
dec
sbb
jo
cli
ss
es
push
aam
ficoms
notl
and
jnp
mov
xchg
or
aam
xlat
mov
nop
dec
cmp
int
jl
pop
push
xor
dec
cs
xchg
jno
loop
mov
pop
jg
xchg
xor
pushf
push
and
push
leave
xchg
xlat
dec
jae
ret
fimuls
int
ja
lods
lea
mov
mov
insl
or
ret
inc
jno
js
xor
arpl
stos
adc
and
stos
cli
aam
sti
rolb
stc
pop
pushf
rcr
mov
insb
mov
and
shr
mov
push
pushf
lea
je
jmp
pushf
pusha
inc
fnstcw
jns
cli
scas
pop
sbbb
pop
mov
push
jge
sub
xchg
xor
cmpsb
or
add
push
cmp
cmp
xor
cmp
mov
mov
data16
push
jb
cmp
aad
jl
inc
pop
lahf
rcr
icebp
pop
js
inc
out
sbb
fnstcw
xorl
push
jno
das
imul
ja
not
not
push
mov
pushf
setno
pushf
mov
xchg
not
mov
lea
call
dec
dec
inc
inc
push
push
xor
cs
insb
add
mov
rcrb
sub
cmp
pusha
cmp
pushl
popl
movw
mov
pushf
cmp
pushf
lea
ja
call
ror
movb
neg
jmp
and
mov
insl
inc
pop
stos
mov
daa
fisubl
dec
mov
jb
fldt
dec
testb
xchg
mov
sti
inc
into
xchg
dec
adc
jb
mov
test
ja
mov
ja
adc
lahf
ljmp
xlat
mov
popf
outsb
nop
xchg
rcr
pop
adc
loope
add
jecxz
push
pushf
lahf
jbe
jge
hlt
mov
pop
adc
imul
fcomps
mov
push
mov
add
jns
push
pop
arpl
sbb
xor
pop
jmp
xchg
imul
sti
mov
cmpsl
lea
push
add
sub
or
lret
mov
out
and
fdivs
mov
mov
movb
imul
idivl
loopne
xor
add
adc
cmp
vsubsd
ss
shl
mov
mov
fisttps
lods
dec
leave
fbld
fisubrl
xchg
stc
repz
inc
push
mov
cmpb
cmp
imul
lret
js
sub
and
aad
fbld
flds
repz
inc
mov
addb
outsl
shr
addl
cmp
sbb
fsubs
mov
dec
negb
lea
popa
shlb
ds
or
loop
pop
cltd
adc
jecxz
xlat
div
jne
loope
jno
jbe
xchg
pop
fnstenv
ret
jo,pn
daa
std
imul
jns
or
push
clc
add
dec
pop
and
dec
outsl
enter
addl
in
call
push
cltd
pop
mov
dec
in
xor
push
data16
push
and
mov
jecxz
dec
jmp
mov
sbb
jns
into
sbb
nop
mul
jno
out
pop
mov
out
mov
adc
adc
mov
inc
pop
push
imul
daa
shl
stos
sbb
inc
cltd
adc
loopne
jne
xchg
jne
pop
xchg
dec
movsb
push
clc
adc
pusha
mov
inc
lock
dec
loopne
push
insb
push
repnz
pop
out
and
addr16
addb
int
int
lea
pushf
bound
pop
add
std
push
push
enter
loop
repz
lods
das
and
cmp
push
rcll
shlb
imul
add
mov
dec
nop
jbe
mov
jae
jb,pn
and
fwait
cltd
cmp
repnz
jp
jp
mov
pusha
lds
int3
inc
pushf
sub
sub
mov
shr
leave
lcall
decb
insl
mov
push
xchg
int3
mov
repz
aad
aam
sbb
aad
add
dec
in
mov
nop
lahf
bound
shll
mov
sahf
sbb
or
cmc
lcall
subb
rcll
xlat
jecxz
mov
mov
mov
mov
outsl
hlt
enter
setp
nop
push
imul
add
xchg
pop
cld
push
xchg
mov
das
mov
push
jbe
and
test
imul
mov
cmp
push
imull
stc
xchg
adc
xor
loopne
inc
jle
mov
lret
push
xchg
adc
dec
cmpsl
mov
jno
enter
scas
cmc
je
mov
mov
jge
mov
je
and
sub
mov
pop
xchg
sub
cmc
jb
mov
push
sub
repnz
sub
cwtl
je
xor
stos
xor
loopne
mov
sbb
sbb
and
neg
jecxz
pop
lret
js
pop
shlb
xchg
or
adc
dec
das
decb
js
sub
cmc
hlt
test
cs
icebp
sahf
dec
leave
inc
sarb
add
mov
cwtl
jg
shrl
adc
cmpps
hlt
popa
in
push
fwait
out
mov
sub
scas
insl
xor
push
cltd
into
mulb
mov
lret
push
testl
pop
sbb
pushf
mov
decl
dec
inc
xor
mov
mov
dec
test
mov
loop
iret
test
and
jg
xchg
in
ret
out
daa
mov
loop
xchg
popa
adc
leave
pusha
xor
imul
movsl
push
loope
and
sbb
bound
jg
mov
jno
adc
xchg
mov
add
insl
pop
nop
bound
in
or
xor
mov
mov
out
les
lock
iret
dec
stc
mov
xlat
stos
or
pop
nop
pop
in
add
xor
lods
sub
adc
push
or
xor
push
xor
mov
scas
sub
pusha
sub
test
movsl
insl
mov
xchg
add
pop
dec
cli
jg
and
in
scas
pop
je
pop
clc
fstpt
imul
push
cmc
sbb
mov
pushf
pusha
and
jmp
xchg
or
cmpsl
inc
mov
cmp
push
stos
add
sub
dec
sbb
jmp
cmpsb
jp
sti
push
jge
stos
xchg
aaa
cltd
jg
imul
jp
bound
mov
insb
sub
insl
pop
push
ffreep
pop
lock
lock
orb
outsb
cmp
cwtl
push
in
int3
sub
fiaddl
movsl
cmpsl
notl
ds
dec
repnz
push
neg
adc
scas
outsb
scas
cli
xchg
push
sub
mov
mov
push
xchg
popf
push
scas
loop
ljmp
inc
pushf
mov
pushf
push
bt
test
jmp
mov
insl
bound
mov
aas
pop
sub
mov
cli
mov
jg
nop
dec
adc
shrl
lods
repz
jmp
lcall
add
xchg
push
fiaddl
out
sub
loop
inc
cmp
in
cmp
inc
stc
dec
cmpl
inc
outsl
js
insb
and
or
dec
xchg
add
xchg
mov
fistps
cmp
je
mov
jg
sbb
pop
dec
dec
mov
aas
dec
into
shll
dec
cmp
cmp
lods
pop
xlat
movsb
pop
rcrl
push
or
dec
stos
ss
push
cmp
cmp
inc
sub
int
fdivs
rclb
sahf
adc
push
pop
sbb
dec
aam
dec
and
dec
dec
dec
sbb
inc
push
fwait
and
cmp
cmp
xchg
flds
cwtl
sbb
jbe
sarb
adc
xor
int
shll
jl
pop
mov
cmp
rcrb
cwtl
push
mov
xor
hlt
lcall
push
push
into
dec
push
mov
std
hlt
ss
psubsw
xor
and
inc
xchg
out
cmp
push
cs
dec
sti
dec
mov
enter
mov
jmp
push
cmp
dec
sub
sub
dec
sbb
out
loop
sub
inc
lcall
and
jnp
adc
pop
cmp
jp
dec
jbe
mov
or
cmp
mov
mov
adc
test
int3
pop
adc
pusha
cmp
arpl
les
inc
fcompl
sti
xor
dec
in
cmp
mov
fisubrl
aad
imul
and
shlb
stos
sbb
insb
cmp
fs
in
dec
pop
fcomps
and
xchg
and
add
int3
mov
xor
dec
pop
mov
pop
push
cmp
add
xchg
cmp
add
lods
sbb
push
inc
inc
sbb
pop
pop
cmp
pop
inc
jp
lcall
cwtl
vmulsd
sahf
mov
jnp
lcall
stos
mov
scas
stos
fcmovnu
sbb
rcr
int
adc
sub
sbb
lcall
or
sbb
dec
imul
mov
pop
push
clc
sub
pushl
add
mov
and
xor
add
mov
push
xchg
insl
mov
or
mov
in
leave
stos
sbb
jmp
fnstenv
lret
mov
pop
cmp
ljmp
hlt
mov
enter
lods
bound
mov
rcrl
out
mov
xor
or
test
dec
lods
xor
mov
out
sub
add
dec
fucomi
push
push
movsl
aad
or
inc
fsts
mov
cmp
add
or
jo
mov
dec
aas
cmp
or
xchg
push
dec
aas
dec
dec
cmp
or
pop
pusha
icebp
xor
cmp
jmp
sub
lds
jl
or
mov
cli
pop
mov
dec
xchg
xchg
dec
hlt
push
out
mov
mov
mov
mov
mov
fwait
popf
shll
jb
sub
push
lret
jl
data16
and
fwait
lds
mov
daa
movsb
ficompl
leave
xor
xor
or
lods
loope
insl
cld
sahf
stos
add
lods
cmp
jmp
push
fimuls
xor
or
sbb
lock
dec
js
fdivrs
std
fistps
or
pop
xchg
or
or
or
lret
scas
cmp
sub
stos
mov
dec
mov
or
and
lret
imul
je
imul
mov
std
cmp
cmp
stos
lds
push
cmp
dec
jo
fidivrl
mov
adc
push
or
cli
lret
fnstsw
popf
lahf
jl
cmp
mov
das
mov
mov
scas
or
mov
imul
pop
loopne
pop
push
jae
enter
pop
adc
imul
mov
push
inc
fwait
adc
out
sti
cmp
test
jno
push
sbb
imul
and
jle
cmpsb
pop
adc
lcall
xor
sbb
add
popf
or
std
lret
enter
fisubl
mov
imul
cmc
sub
push
pop
push
mov
cmp
fs
jnp
bound
insl
xlat
mov
lcall
push
pop
iret
xchg
incb
dec
cmp
adc
jl
dec
jbe
sarl
cmp
ret
xor
dec
cmp
sarl
pop
mov
dec
sbb
pop
sahf
add
jnp
jnp
xlat
ret
push
jmp
xchg
jmp
jmp
jmp
jmp
out
arpl
out
xchg
cmpsl
push
xor
in
lock
push
lock
jecxz
add
push
or
mov
fdivl
dec
cmp
or
or
sbb
pop
rcll
sbb
mov
pop
iret
imul
stc
sbb
xchg
fsubs
fcomps
fsubrs
and
jge
cmp
push
mov
test
jns
inc
inc
push
push
pop
pusha
push
push
inc
add
data16
rcll
out
insb
xchg
mov
pop
imul
xor
inc
dec
pop
xchg
cmp
loop
daa
sbb
push
loopne
leave
call
dec
sub
mov
push
imul
roll
push
lods
cmp
pop
push
call
out
popl
cmp
cmc
push
jp
popa
lods
rcrb
cmp
lods
in
adcl
int3
add
jmp
imul
andb
jl
mov
push
pusha
out
outsl
cmp
or
test
jo
and
mov
repnz
imul
mov
insb
xor
jns
imul
cmp
vmwrite
mov
xchg
ss
call
aas
fwait
out
js
or
movsb
insb
pop
out
lods
nop
lcall
fwait
in
shrl
and
cmp
lret
fsubrs
fwait
xlat
sbb
xor
cmp
pop
fcmovb
pop
adc
xlat
pop
cltd
or
aaa
push
xchg
sub
stos
adc
adc
lret
sbb
mov
xchg
jg
lret
daa
lcall
movsb
mov
add
pop
mov
xchg
xchg
and
lock
ret
mov
sub
mov
cmp
test
xor
insl
jge
jno
sub
mov
mov
cmp
add
cmpl
push
xor
and
pop
xchg
clc
sbb
push
int3
insl
nop
lods
lds
xor
adc
cmp
fcomps
xchg
cltd
push
sub
arpl
sbb
jnp
lea
jmp
jge
movsb
mov
cmp
sbb
dec
call
repz
fidivrl
leave
cmp
and
arpl
cld
pusha
or
popa
enter
mov
insl
clc
sti
xchg
sub
cltd
imul
je
popa
ret
fcomps
lret
push
fsincos
test
sub
pop
daa
jno
jge
rcrl
insl
mov
aaa
cmp
repz
lds
enter
lret
lea
jp
push
mov
add
push
push
sti
lret
cmp
jp
mov
cmp
jns
xor
cmp
fmull
iret
xchg
cmp
jno
sti
gs
mov
rol
jmp
push
mov
mov
push
cmpsb
mov
jae
stos
pop
fiadds
mov
adc
aaa
or
mov
lret
imull
push
jnp
or
pop
and
inc
lds
sbb
aad
push
and
or
xor
and
sbb
ljmp
mov
cmpsb
call
push
mov
jmp
add
data16
lcall
idivb
gs
lret
pop
testb
xor
push
sbb
sahf
aad
adc
aas
fmul
dec
sahf
mov
nopl
or
or
push
nop
fcmovnu
or
lock
push
clc
cmp
js
jecxz
jge
imul
pop
xor
pop
scas
pop
xchg
cltd
pop
xchg
imul
xor
pop
cmp
or
sbbl
es
add
adc
push
movsb
sarb
push
or
mov
sub
mov
push
mov
jge
jnp
xlat
inc
and
xchg
dec
shll
dec
lcall
pop
and
sub
push
jo
lods
sbb
sub
dec
rorb
xlat
fisttps
push
dec
pop
mov
xor
test
inc
adcb
adc
inc
inc
push
pop
sub
fidivs
dec
mov
sbb
pusha
sbb
push
or
jg
ret
adc
push
gs
and
jmp
sub
aam
sub
add
xor
inc
fwait
ret
fimuls
jecxz
sbb
mov
sti
call
mov
lret
fwait
push
or
sahf
jno
sbb
sbb
std
test
mov
loopne
mov
scas
or
cs
nop
nop
hlt
leave
pop
or
cmp
nop
imul
lods
test
negl
pop
rorl
je
lock
fs
and
fstpt
mov
lcall
mov
lahf
mov
add
add
fisttps
cs
loopne
and
icebp
fisubl
push
push
sahf
jnp
lret
sbb
rep
xchg
dec
pop
inc
movsl
mov
neg
sub
into
mov
pop
cmpsb
cli
fldt
es
or
cmp
mov
mov
sub
sub
sub
sbb
push
or
jg
add
jae,pt
inc
lahf
jns
mov
leave
pop
loopne
inc
xor
lret
loopne
out
mov
mov
inc
ljmp
sub
movb
aas
push
push
btc
movsl
mov
inc
lds
arpl
dec
push
jnp
jle
dec
stc
inc
lcall
sahf
data16
cmp
scas
aam
sbbl
dec
test
mov
stos
inc
jp
and
inc
sub
ret
or
lcall
jb
stos
inc
mov
cmpsb
inc
imul
mov
repnz
test
dec
cmp
stos
adc
fdivs
push
movsl
aas
push
sbb
inc
adc
sub
out
sahf
cwtl
inc
cmpsb
lret
dec
dec
test
pop
ljmp
sub
rcll
push
fistl
lret
aaa
pop
push
in
subl
in
add
and
adc
mov
mov
jns
jg
and
call
sarb
test
cli
inc
xchg
test
xor
aad
xchg
push
pop
mov
leavew
xchg
push
mov
fcmovu
aaa
xchg
xchg
jae
add
shll
dec
inc
daa
cmp
lret
sbb
and
ret
push
inc
adc
dec
or
cmp
or
sarl
mov
sti
rclb
push
lret
inc
dec
repz
mov
stos
cmpsb
out
jge
jmp
orl
in
jnp
pop
cmp
inc
dec
mov
add
call
pop
dec
mov
cmp
sahf
xchg
cmpsb
pop
sahf
xor
iret
xchg
stos
pop
sub
and
test
fstps
dec
sbb
cwtl
sub
jmp
cmp
iret
jecxz
or
xor
dec
xor
push
push
ss
lret
cmp
inc
push
dec
roll
push
dec
ss
adc
ret
sbb
and
mov
jecxz
fstpt
cmp
cmp
dec
sub
hlt
repnz
push
push
mov
dec
push
rcll
dec
dec
mov
dec
adc
push
inc
sarl
cmp
fxch
xor
jmp
dec
sub
sub
sbb
and
sub
and
cmp
dec
sbb
pop
lret
adc
push
adc
jp
or
lret
add
stos
push
add
mov
sti
adc
lret
idivl
ljmp
or
jmp
sbb
out
sub
jecxz
cmp
dec
fistl
pop
lret
xlat
cmp
rcl
jnp
iret
mov
lret
adc
dec
ret
jmp
mov
cmp
mov
sbb
sub
scas
adc
lret
stos
cmp
cmpsl
lcall
lahf
lret
js
fwait
push
mov
xchg
dec
cwtl
xchg
ss
lret
mov
roll
call
xchg
or
ror
lret
mov
stos
cmpsb
mov
mov
jp
jb
or
pop
cmp
and
and
inc
pop
xor
add
push
adc
adc
and
into
inc
ljmp
out
jg
ret
outsl
cltd
pop
xlat
out
lret
iret
fcomip
pop
sti
xor
out
stos
xchg
rcrl
xchg
mov
fwait
ja
cmpsl
ds
mov
inc
mov
scas
rclb
pop
sti
div
out
jmp
jecxz
xlat
ror
ja
adc
lret
xchg
jp
mov
dec
xlat
outsl
push
pop
addb
mov
sti
or
repz
sti
xor
out
loope
mov
or
push
dec
cmp
cmp
sbb
xor
adc
xor
inc
fistpl
notl
pop
push
stos
push
push
and
and
adc
scas
enter
jecxz
mov
sbb
sub
sbb
jg
adc
push
push
aam
xlat
xor
adc
cmp
sti
testl
es
iret
add
inc
notl
xlat
inc
add
shlb
inc
sti
cmp
out
inc
repz
negl
xor
out
adc
jmp
push
cvtps2pd
jb
leave
push
jecxz
iret
xchg
push
jl
xor
xor
sbb
ror
or
ror
or
mov
lret
pop
push
cmp
push
jg
push
fnsave
pop
mov
mov
xlat
cmpsl
lret
xchg
mov
hlt
mov
jg
mov
cmpsl
je
sub
flds
mov
bound
xchg
repz
imul
lahf
aad
sti
ljmp
fwait
or
mov
xchg
pop
dec
inc
xchg
lea
popf
push
xor
repnz
xchg
xchg
jmp
mov
mov
jnp
xor
out
int3
ja
mov
add
adc
mov
push
inc
imul
cmpsl
push
xchg
push
addr16
arpl
pop
popa
lret
or
push
xor
inc
out
jmp
dec
stos
sbb
fsub
movsl
push
cmp
je
push
dec
pop
insb
mov
inc
aas
add
sti
orb
fbld
idivl
pop
sub
jg
mov
push
pop
repz
daa
call
sub
lret
out
xor
and
push
imul
das
or
iret
test
inc
dec
daa
xlat
and
push
negl
sti
fists
inc
notl
test
pop
add
adc
mov
out
lret
pop
stos
mov
adc
sbb
rcll
and
repz
or
sti
sbb
mov
push
testl
cli
shl
ds
div
fcmovnu
je
sub
inc
push
mov
out
enter
ljmp
mov
or
xor
ficomps
mov
dec
fisubrl
mov
push
push
adc
xchg
lret
jg
cmpsl
mov
cmp
add
xchg
sbb
pop
je
push
ret
push
inc
mov
dec
mov
int
mov
mov
xchg
dec
scas
xchg
xor
pop
cmp
cmpsb
and
push
sbb
jg
jnp
push
cwtl
sahf
pop
pop
sbb
cmp
xchg
cwtl
xchg
sub
mov
xchg
ret
lahf
push
inc
sbbb
jle
cmpb
add
or
push
mov
test
cmp
sti
jbe
sbb
iret
jg
outsb
or
xor
inc
mov
push
fwait
xor
cmp
xor
pop
pop
sbb
fisttpll
fstl
fucomi
pop
dec
inc
mov
das
push
xlat
sti
xor
cmp
xor
push
lret
inc
ja
inc
movups
fists
idivl
mov
mov
jg
mov
mov
mov
lret
enter
sbb
ss
xchg
cmp
xor
push
cmp
aas
cs
out
push
xchg
es
repz
sti
xchg
jmp
sahf
and
cwtl
push
xor
fistl
adc
adc
xchg
sub
inc
addl
je
out
cmp
addb
or
push
xchg
and
cmp
add
out
jg
push
std
pop
stc
xor
sbb
dec
mov
fwait
sbb
and
push
aad
pop
dec
inc
jmp
push
xlat
out
inc
in
adc
push
scas
loope
sbb
xchg
sti
dec
fstps
sbb
pop
leave
cmp
fcmovnb
push
repz
arpl
imul
leave
pop
inc
xchg
push
adcl
xor
inc
stos
aam
pop
adc
scas
adcl
mov
sbb
or
out
mov
push
pop
xor
mov
sub
out
push
xchg
jmp
pop
inc
sti
xlat
jmp
lret
mov
test
imul
test
or
nop
mov
mov
jns
xor
mov
fwait
add
enter
rorl
stos
inc
dec
xlat
cmp
sbb
push
sub
jmp
dec
insl
and
fildl
push
divl
sbb
gs
xchg
sub
lahf
ss
sub
mov
push
sub
shrl
push
and
push
push
pop
dec
mov
cmp
inc
aam
cmpl
xlat
xor
jp
sub
inc
cmp
inc
and
and
sub
sbb
adc
jp
adc
pop
and
or
push
hlt
mov
mov
dec
adc
mov
sub
pop
and
push
clc
adc
xchg
dec
adc
and
cmp
lret
dec
testl
push
mov
cmpsl
sbb
xchg
xlat
xchg
out
cmp
test
repz
iret
jmp
iret
call
xchg
mul
fmuls
dec
loopne
jmp
out
ss
faddl
sti
mov
cli
jmp
push
ror
add
iret
push
pop
loope
adc
push
dec
enter
xchg
sub
pop
inc
cmpb
push
mov
lods
aad
out
push
iret
jg
test
movsl
sbb
mov
sbb
mov
mov
cmp
lret
cmp
mov
add
push
inc
mov
rorl
adcl
test
cmp
sbb
ljmp
add
fldl
out
push
nop
repz
pop
psubq
je
pop
jmp
push
add
cmp
mov
push
push
andl
fwait
mov
push
push
stos
nop
scas
add
lahf
xlat
mov
out
jg
shll
pop
and
fs
mov
pusha
test
cmp
xlat
loope
dec
out
repz
and
push
and
and
loope
dec
fstpt
cmp
scas
push
xlat
idiv
dec
pop
roll
push
xchg
jg
sahf
inc
jnp
push
popa
adc
xorl
xor
sbb
pop
xor
sub
es
imull
and
cmp
sub
xchg
xor
push
sub
scas
inc
push
sbb
sbb
rclb
or
adc
je
aad
push
hlt
xchg
sub
mov
and
ret
imul
into
jg
mov
and
push
mov
adc
scas
push
xlat
fwait
inc
testl
repz
cwtl
repz
push
cmp
jmp
push
bound
test
mov
or
xor
jnp
push
mov
push
cmp
and
mov
mov
sub
jg
iret
bound
lds
lret
out
mov
mov
push
or
push
add
fwait
push
mov
and
push
xchg
fistpll
or
lret
mov
push
mov
dec
repz
inc
pop
jmp
in
mov
jp
stos
in
popl
fists
test
mov
xlat
push
sub
out
lds
repz
mov
fstl
sti
test
inc
inc
stc
mov
mov
push
fistps
enter
sub
test
adc
mov
push
jnp
dec
in
mov
add
push
jg
push
hlt
jg
inc
outsl
push
lahf
sti
lret
mov
imul
arpl
bswap
push
sub
cmpsl
mov
sub
push
xor
jnp
dec
movsl
sbb
push
inc
dec
push
xor
out
lret
inc
lret
lock
mov
cmpsl
ja
adc
adc
mov
sbb
lcall
out
xor
imul
cwtl
jmp
fmuls
push
inc
lahf
dec
xorl
jp
push
push
rclb
clc
and
xor
xchg
lcall
jp
push
xorl
add
daa
das
stc
outsl
dec
fwait
or
repz
push
dec
cmp
mov
mov
dec
mov
fistps
and
dec
cmpsl
out
sub
mov
dec
mov
scas
jae
sbb
dec
sti
cmp
mov
iret
and
push
inc
jg
fbld
push
sbb
xor
xor
xor
mov
jl
and
inc
jecxz
jo
stc
out
repz
push
out
sbb
xor
inc
or
roll
lcall
aam
adc
sbb
sub
call
cli
sbb
fwait
cmp
repz
pop
sbb
or
mov
dec
xchg
xor
dec
dec
stos
sub
mov
cmp
les
or
fwait
or
fistl
xchg
and
or
les
mov
pop
xchg
inc
jmp
test
sub
fwait
and
mov
or
push
inc
mov
stos
dec
repz
sbb
int
mov
test
es
ljmp
cmpsl
dec
fildll
testl
out
pop
mov
and
clc
stos
jnp
add
adc
mov
cmp
outsb
lret
jns
jecxz
rorl
sub
dec
rol
add
movsb
sarl
sub
mov
dec
repz
cmp
mov
push
cmpsl
dec
mov
and
or
ret
inc
fadds
cli
cmp
jg
fwait
daa
mov
rorb
popa
lcall
lahf
pop
xor
xchg
cmpsl
shrb
mov
cmp
mov
sbb
cmp
adc
sbb
rcr
sub
push
jp
mov
out
clc
mov
sub
lahf
add
cmp
sbb
mov
mov
sbb
inc
dec
cmp
dec
add
add
orl
jne
sbb
push
ds
sub
enter
cli
jo
push
sbb
fistpll
lahf
notb
and
rcrl
push
icebp
inc
mov
repz
repnz
mov
loope
ret
cmp
inc
sbb
cmp
and
pop
pop
inc
mov
cwtl
xchg
inc
ret
dec
pop
out
cmp
jecxz
cmp
ret
inc
fwait
sbb
lock
mov
ljmp
out
loop
mov
pop
jns
mov
subl
push
push
xor
xor
cmp
ret
arpl
sarl
adc
dec
mov
cmp
scas
cmp
repnz
ficoms
mov
inc
dec
shrb
mov
scas
leave
sbb
imul
xor
dec
fld
dec
imul
cmp
fldenv
out
add
call
shll
sbb
stc
lock
sbb
cltd
sub
cmpsl
sti
cmp
mov
sbb
pop
popf
es
mov
or
dec
repnz
mov
push
mov
mov
int
ret
sbb
lret
repz
xor
cltd
push
xchg
mov
repz
loopne,pt
adcb
inc
xlat
shll
jecxz
pop
xor
ret
pop
fildll
adc
pushf
ss
dec
cmp
rep
ret
ss
shrb
pop
add
idivl
out
lcall
jo
and
push
scas
push
adc
inc
mov
add
fisubl
sarb
sub
idiv
adc
cmp
loop
cltd
sub
inc
adc
cltd
sti
in
mov
dec
stc
inc
mov
stos
cmp
xchg
sbb
stos
push
inc
jae
cmpsb
fisubrs
inc
fbstp
mov
pop
sbb
pop
adc
jb
or
out
sub
mov
cmp
dec
loope
or
mov
imul
jno
mov
and
out
leave
repz
mov
mov
out
push
fcom
add
fstps
test
push
lcall
xchg
and
or
scas
js
jp
bound
pop
xor
sub
cmp
or
sbb
jns
sbb
mov
or
jne
cmpsl
or
adc
fiaddl
xor
cmp
imul
xor
test
dec
adcb
adc
ret
lret
pop
stos
pop
scas
mov
xor
cwtl
arpl
imull
or
sarl
scas
jp
inc
int
adc
push
addl
cli
jle
sub
dec
enter
cmp
cmp
mov
jbe
jb
inc
cmp
negl
mov
mov
subl
cltd
cwtl
push
fsts
shlb
imul
loop
mov
shll
fmull
stc
cmp
fstpt
mov
ljmp
aaa
push
cld
mov
adc
jmp
leave
dec
dec
ss
pop
stos
fidivl
out
inc
popf
xchg
jae
sub
aam
push
cmp
xchg
je
add
dec
outsl
sbb
or
push
xchg
xor
das
dec
sub
sub
xchg
add
cmc
lret
sbb
push
or
xor
sub
addr16
rcl
push
sub
mov
sub
out
add
xchg
sub
jp,pt
add
notl
lock
int
ljmp
jmp
or
lret
jnp
dec
shl
fists
repz
cmpl
push
lock
xchg
sti
xchg
jmp
dec
push
sbb
lcall
cli
dec
sarl
xchg
pop
loope
dec
xor
push
leave
fwait
dec
cmp
fistpl
cmp
jns
js
mov
lods
sahf
stc
test
adc
dec
add
xor
xor
xlat
repnz
enter
xor
mov
pop
and
push
lret
repnz
mov
inc
push
orb
daa
mov
dec
mov
dec
and
addb
cmpsl
mov
cs
xor
popf
lock
pop
push
xor
xorb
cmp
and
aam
rcrl
push
pop
lret
cs
mov
mov
test
fnstcw
xor
stos
or
iret
sbb
jae
shl
push
xchg
xor
lcall
mov
cmp
mov
ljmp
out
repnz
dec
imul
dec
sub
push
dec
fwait
or
jns
mov
test
lock
adc
inc
fnstcw
mov
xchg
cmp
push
dec
fwait
jo
jno
xchg
pop
pop
adc
xor
mov
cwtl
subl
lret
sub
and
pop
fcmovnb
fidivrl
and
add
jnp
outsl
push
push
bound
push
dec
xorl
sub
shl
push
stc
add
fwait
sub
cmp
mov
sbb
fstpt
daa
lahf
jne
mov
call
and
add
sub
push
das
repz
inc
sub
cltd
fstpt
dec
mov
add
and
fwait
push
rorb
push
cwtl
bound
push
mov
xor
cli
or
xor
stos
add
pusha
pusha
xchg
lret
leave
inc
xchg
lcall
std
push
lret
lcall
test
and
mov
push
mov
mov
push
dec
mov
stc
push
test
sarl
cmp
sbb
cmc
push
add
xor
xlat
fwait
cmp
leave
jmp
mov
or
stos
pop
cmpsl
xor
ret
xor
sbb
xchg
imul
pop
jecxz
xor
xor
ss
dec
dec
stos
loope
mov
mov
mov
stc
lret
mov
jmp
leave
out
jmp
and
or
inc
mov
imul
push
andl
out
push
mov
inc
icebp
leave
daa
xor
mov
jmp
dec
xchg
pop
mov
ss
xlat
jmp
or
adc
out
add
xchg
and
jmp
mov
repz
mov
pop
pop
cmp
loop
stc
dec
sbb
cltd
xor
out
mov
pop
inc
adc
push
bound
add
aaa
rol
xchg
shrb
or
sbb
xor
mov
mov
dec
jmp
and
mov
jb
mov
mov
pop
iret
mov
fwait
sbb
pop
jmp
adc
mov
adcl
mov
cmp
xchg
nop
jb
sbb
xor
pop
or
push
test
and
stos
or
bound
jae
clc
cmpsl
js
stc
mov
pop
jp
xor
jns
pop
sbb
sbb
pop
xor
fldcw
subl
aam
idivl
dec
jb
repz
fiaddl
sbb
rcll
fwait
or
xchg
inc
shl
push
dec
sub
addb
push
ljmp
xor
js
arpl
aad
dec
stc
dec
dec
mov
pop
sub
repnz
jnp
mov
dec
lret
xchg
inc
shrl
shl
push
ret
test
pop
rorl
inc
fists
jo
dec
sub
cmp
inc
push
or
push
inc
imul
push
test
cmp
xlat
add
sub
adcl
and
lret
xchg
ret
and
lds
out
out
mov
stc
mov
and
push
lret
push
divl
add
adc
popa
mov
fwait
sub
add
addr16
adc
lret
pop
flds
out
inc
adc
roll
fcmovnu
cmp
mov
stos
mov
xor
add
enter
dec
movsl
push
adc
mov
sbb
lret
jmp
and
mov
mov
sarl
or
or
xchg
push
mov
rcr
leave
sbb
or
stos
cli
or
mov
test
test
dec
adc
sub
arpl
cmpsb
or
cmp
iret
xor
and
adc
xchg
push
or
mov
repz
sub
cmp
sbb
out
lret
fdivrs
mov
rcr
mov
lock
xor
mov
cmp
xor
xor
mov
push
cwtl
iret
sbb
and
subb
mov
inc
test
sub
sti
popf
push
rcll
test
out
xor
sarl
inc
or
cmp
cmp
jmp
jno
adc
cltd
push
adc
xchg
sub
jg
mov
inc
add
add
adc
sub
lcall
dec
cmp
adc
mov
sti
cmpsl
mov
cs
mov
mov
test
loope
xchg
xor
or
and
rclb
dec
push
or
sub
imul
adc
push
stos
arpl
adc
js
sub
subb
dec
loope
inc
ss
xor
dec
pop
inc
push
ljmp
mov
sbb
sbb
je
and
inc
sub
jecxz
sbb
stos
sub
sub
cmpsl
sbb
jecxz
stos
loop
xchg
repz
repz
xchg
push
rclb
jmp
xor
sbb
fwait
inc
pop
inc
xchg
mov
mov
push
jb
cmp
into
jnp
xor
lahf
mov
je
aaa
push
lahf
add
sbb
mov
mov
pop
ret
stos
test
or
sbb
incl
mov
xor
repz
icebp
jno
adc
push
xor
dec
lcall
fistps
stos
stos
rolb
inc
pop
sti
cmp
popa
sub
dec
mov
xor
xchg
mov
and
pop
test
insb
push
xor
mov
call
sti
xor
push
rclb
sbb
inc
and
inc
add
cmp
push
mov
xchg
push
jno
sti
push
push
adc
dec
jo
dec
push
test
mov
cmpsb
out
test
xor
inc
jnp
push
test
loope
js
shlb
icebp
stc
mov
xor
mov
out
arpl
out
test
ljmp
lcall
dec
sti
cmp
fisttps
add
fnstcw
push
inc
cmp
lahf
xorb
stc
sbb
push
jnp
scas
xor
dec
dec
das
push
out
push
adc
cmp
sub
mov
sti
imul
js
add
test
dec
jmp
add
rorl
jmp
mov
cmp
push
and
pop
daa
dec
jp
cmp
jg
shrl
fistpll
jnp
jmp
sbb
jg
repz
les
jmp
test
sub
fwait
xor
ret
idivb
xlat
sub
lret
xor
xchg
adc
mov
xchg
mov
dec
sbb
sbb
mov
shl
iret
dec
shrb
dec
mov
sub
adc
inc
jo
jae
or
push
dec
imul
pop
pop
repz
dec
inc
out
stos
adc
test
ljmp
dec
insb
enter
push
xor
lret
adc
sti
add
xchg
fistpl
dec
cltd
add
sub
and
pop
adc
jmp
dec
roll
mov
add
sub
bound
adc
sub
rcr
loopne
push
andl
sbb
jo
sti
lahf
push
cmp
lret
mov
sbb
lret
std
test
test
das
add
mov
push
imul
or
add
rcll
cli
dec
dec
xchg
pop
mov
pop
fistpl
adc
addr16
sub
mov
test
sub
inc
popa
fsubrs
loop
mov
xor
inc
mov
mov
adc
sbb
cmp
dec
jb
and
pop
sbb
adc
roll
and
cltd
leave
mov
cmp
fisubrl
mov
cmp
fldt
stos
fwait
lds
cwtl
inc
add
rorb
or
loopne
pop
inc
cmp
xor
fcmovnbe
or
add
sbb
imul
jecxz
and
stos
test
mov
jns
mov
jmp
mov
repnz
or
dec
xor
lret
lahf
and
push
mov
mov
dec
jns
sub
mov
jns
icebp
imul
inc
icebp
nop
and
pop
cli
adc
xlat
ljmp
xchg
leave
lret
push
rcr
ret
xchg
sarl
xor
mov
std
es
ja
das
cmp
xchg
fwait
mov
mov
cmp
push
stos
adc
dec
jmp
pusha
lds
add
ficomps
sbb
jp
sub
shlb
mov
adc
dec
push
jo
in
sti
lret
adc
bound
leave
cmpsl
jecxz
jne
and
cwtl
add
or
call
stos
aad
lret
inc
cmp
xor
sub
popa
adc
sub
sub
dec
or
mov
sbb
and
cmp
adc
stos
and
sub
cltd
xor
lahf
sbb
rcl
mov
mov
sub
les
sbb
dec
mov
ret
jecxz
mov
loopne
or
aaa
imul
push
icebp
jmp
push
leave
inc
stos
fs
push
mov
ror
adc
in
mov
jnp
aam
div
out
enter
push
mov
add
lcall
jns
rorl
repz
sarb
mov
jns,pn
jns
mov
clc
nop
mov
adc
cmp
sub
mov
adc
dec
addb
mov
push
clc
push
hlt
aam
jmp
jmp
sub
mov
mov
rolb
mov
mov
imul
xchg
sbb
push
in
mov
subb
imul
adc
jns
mov
sub
stos
repnz
add
dec
cli
or
lahf
lock
xor
xchg
test
adc
cmc
bound
dec
out
and
lret
sub
and
mov
mov
bound
adc
add
jns
sbb
push
and
enter
or
fcmovb
cmp
scas
and
clc
clc
cmp
jno
add
repnz
js
fbstp
stc
push
imul
subl
pop
adc
lcall
sbbl
das
sarb
test
sub
and
mov
push
ror
orb
and
imul
dec
jno
inc
adc
or
or
dec
leave
popa
cld
mov
and
or
mov
xor
dec
leave
repnz
pop
lahf
iret
jns
scas
push
inc
repnz
dec
mov
xlat
sub
iret
dec
add
fwait
testb
mov
xchg
mov
mov
mov
sbb
aaa
add
inc
mov
lahf
pop
out
stos
pop
js
cwtl
mov
xchg
stc
nop
cltd
mov
test
scas
mov
sti
xor
cmpsb
jmp
mov
dec
jae
das
jmp
loope
lahf
adc
inc
out
ficoml
cmpsl
mov
push
adc
mov
xchg
or
stos
mov
and
jp
cmpsl
mov
jno
mov
cli
mov
mov
cmp
lret
out
or
inc
je
or
nop
shl
push
lahf
shr
cmp
cmpsb
add
fistl
inc
pop
addl
fwait
jg
inc
pop
ja
fisttps
sti
or
mov
lret
inc
mov
xlat
in
xchg
jp
test
rorb
and
repnz
sbb
lock
loopne
iret
inc
leave
js
xchg
insl
out
dec
idivl
or
mov
and
pop
inc
adc
jge
adc
bound
or
inc
add
subl
xor
sti
xor
ffree
iret
mov
cmp
out
scas
inc
shlb
shlb
call
cmp
mov
mov
sbb
pop
inc
xchg
and
sub
inc
adc
xor
push
adc
and
xchg
add
xchg
xorl
inc
shll
notl
sarl
mov
add
scas
dec
mov
push
loopne
pop
xlat
xlat
negl
and
xor
in
adc
or
adc
dec
xchg
sbb
pop
iret
mov
scas
adc
jg
sub
mov
dec
out
imul
sbb
repnz
xchg
out
add
inc
scas
int3
dec
cmp
add
aaa
es
and
nop
cmpsl
adc
add
into
mov
cmpsl
and
incb
and
or
inc
and
sub
sub
sub
add
out
jecxz
rcll
inc
or
fildl
xor
sbb
sub
inc
dec
push
xchg
push
jmp
jg
and
adc
aad
push
out
adc
inc
sbb
cltd
sub
cmpsl
inc
xchg
jp
and
lret
dec
cmp
inc
sbb
cmp
loopne
xor
dec
push
imul
nop
sbb
jmp
jns
inc
fmuls
scas
ljmp
mov
popa
sub
adc
imul
and
je
cmp
fwait
sub
mov
add
pop
jmp
adc
mov
sbb
out
cli
add
mov
mov
inc
sbb
mov
sub
nop
test
sahf
fs
sub
notl
mov
int
mov
dec
mov
dec
pop
and
iret
mov
sub
inc
roll
iret
and
jno
pop
cmp
fnstcw
idivl
mov
sbb
lret
outsb
dec
xchg
xchg
sub
iret
dec
inc
hlt
fcmovnbe
push
cmpl
stos
sarl
push
adcl
or
mov
adc
addr16
sub
adc
bound
add
ja
and
dec
das
in
fstps
adc
jb
out
sub
cmpsl
mov
and
xchg
iret
mov
or
rcrb
aad
dec
jae
and
imul
jno
notl
mov
push
and
cltd
push
dec
add
push
leave
pop
iret
sub
jg
out
sbb
dec
mov
cmpsl
loop
cmp
call
sub
cmp
add
xor
repz
repz
repz
subl
rolb
mov
out
xchg
fdivrs
movsb
xlat
cmp
mov
add
mov
mov
sub
sbb
vmovsldup
jnp
sti
in
xor
cmp
stos
rcll
sti
adc
and
sbb
sbb
pop
dec
jecxz
inc
add
daa
mov
or
cmp
push
sub
xchg
lcall
enter
dec
inc
push
mov
aad
dec
inc
sub
popf
lcall
inc
daa
cmp
jno
mov
cwtl
rcrb
lret
xor
cmp
fucomp
push
xchg
mov
adc
sub
adc
clc
jp
jmp
fucom
iret
mov
add
je
dec
xchg
inc
out
dec
mov
mov
inc
or
scas
loopne
mov
dec
cmpsb
jmp
jge
dec
out
xor
adc
sub
push
mov
sub
mov
push
rcrl
bnd
mov
or
or
sbb
stos
cmp
scas
jo
stc
fcmovu
test
mov
in
jg
mov
rorb
hlt
mov
or
push
add
cmpsl
mov
or
stos
cmp
sahf
push
pop
popa
or
sarl
mov
lret
sti
adc
outsb
mov
adc
jne
xlat
enter
add
jmp
jnp
xor
push
popa
repnz
push
lret
outsl
dec
test
dec
jb
loope
xchg
jp
push
out
fcoms
push
movsb
adc
adc
roll
xor
xchg
ret
add
mov
or
test
testb
dec
cwtl
call
cmp
or
or
mov
arpl
add
fmulp
icebp
shrl
mov
stos
adcb
lret
test
fistl
shrb
inc
stos
ss
add
stc
push
pop
fbstp
mov
repnz
inc
cwtl
xchg
scas
dec
xor
loope
add
or
xchg
icebp
stos
pop
push
cmp
dec
shl
das
or
in
and
mov
cmp
mov
xchg
test
sbb
pop
orl
mov
negl
mov
xlat
fadds
xlat
xchg
jo
mov
out
mov
sub
mov
push
popf
or
xchg
sub
inc
xorl
push
mov
xor
lret
and
xchg
mov
sub
push
sti
and
daa
sbb
cmpsb
jbe
sub
inc
push
jb
add
cmp
push
dec
xor
xor
ja
add
adc
fadds
xchg
nop
std
mov
dec
es
negl
sbb
cmp
push
hlt
xor
xorb
mov
cmp
daa
mov
sbb
das
push
ret
xor
sahf
pop
out
xor
shll
aam
cmp
jnp
fistl
cmp
popf
shr
sti
push
shll
orl
jle
jbe
xor
ror
dec
jb
ss
xchg
lret
mov
mov
stos
cmp
push
mov
lret
cmpsb
ss
into
xor
xchg
in
push
lret
cmp
cmp
ss
push
pop
push
dec
mov
mov
sbb
imul
cmp
jecxz
lahf
pop
dec
mov
popf
es
xchg
insl
xor
sub
fcom
imul
cld
shrl
push
sbb
imul
fmull
das
sbbl
inc
test
xor
sbb
sbb
xchg
cli
aam
imul
jmp
push
add
sub
aaa
dec
cmp
push
add
mov
cmpsb
xchg
xchg
out
popl
cli
xor
mov
ret
sbb
and
adc
xor
lods
lcall
cmp
push
sbb
cmp
jp
lcall
push
sbb
cmp
jnp
fwait
adc
push
sbb
cmp
adc
cwtl
cmp
push
mov
or
sbb
sub
cmp
dec
push
pop
shrl
jns
ss
adc
push
stc
rcrl
dec
cmp
jp
lcall
sarl
dec
imul
sub
rcr
mov
adc
jns
test
dec
push
ss
push
jmp
sub
push
ss
cmp
shll
dec
dec
dec
ss
adc
aas
cmp
push
aaa
shll
dec
das
sub
daa
adc
lret
pop
cmp
push
pop
rcll
dec
ud2
ss
adc
lret
cmp
push
imulb
jmp
std
xchg
divb
sub
lcall
mov
xchg
adcb
lret
jp
jbe
jb
fimull
rcll
lahf
push
push
enter
cmp
sub
je
cmp
nop
lahf
push
push
enter
push
cmpsl
xor
push
mov
dec
dec
adc
mov
xchg
fldt
xchg
clc
inc
xchg
lcall
fwait
xchg
ja
imul
cmp
sbb
xchg
mov
push
push
xchg
nop
xchg
mov
jge
loope
aam
popf
lcall
mov
mov
in
outsb
inc
addr16
push
loope
aam
push
inc
flds
sub
data16
jnp
jg
aas
or
push
mov
mov
xlat
loopne
add
and
inc
xlat
popa
xlat
adc
cmp
shl
cmc
cmp
jmp
and
dec
add
pop
cmp
enter
ja
jmp
and
pop
iret
and
daa
cmp
enter
ja
jmp
and
aas
iret
inc
push
inc
cmp
xchg
cmp
push
push
int
and
adc
wbinvd
scas
or
mov
sbb
aas
cmp
push
daa
data16
aaa
inc
xor
xacquire
pop
adc
push
xor
inc
aad
insl
mov
shrl
add
ljmp
xlat
xchg
mov
mov
cs
xor
lods
push
mov
jmp
mov
mov
push
andb
cli
test
pop
or
hlt
fwait
stos
jns
adc
nop
push
push
inc
sbb
jmp
or
cmp
sbb
mov
xchg
xchg
leave
ss
daa
aas
mov
fs
mov
jg
fistpl
xchg
adc
ret
sbb
cli
fs
jnp
push
shr
dec
jo
ss
js
cmp
push
fcom
jl
sbb
lret
leave
cmp
dec
push
ss
adc
cmp
pushf
dec
jnp
cmp
push
movsb
adc
push
lods
sarl
dec
mov
ss
imul
dec
fdivs
mov
dec
cltd
les
jmp
cmp
push
dec
rcl
dec
stos
aam
dec
adc
lret
fstpt
fcoml
sub
loopne
test
dec
in
ss
cmp
lock
clc
adc
cld
cmp
add
or
pop
adc
cltd
adc
push
sub
sbb
ljmp
push
mov
sub
call
sbb
cmp
imul
inc
sbb
inc
adc
push
dec
sbb
cli
xlat
push
sub
adc
imul
lret
mov
shll
adc
test
dec
insl
cmp
push
jno
sub
cltd
ss
sub
jge
cli
push
adc
mov
sbb
lea
test
xchg
push
mov
xchg
dec
sbb
sbb
call
cwtl
call
adc
aam
sbb
adc
loope
shlb
mov
xor
sti
fwait
stos
insl
nop
dec
sbb
jge
inc
int3
adc
jp
shrb
xchg
pop
fnstenv
mov
test
dec
cmpsl
sub
pop
fldenv
repnz
in
popa
rcll
cmpsl
mov
loop
xchg
sbb
mov
sbb
cltd
iret
pop
insb
add
push
sbb
subb
insb
cmp
ja
pop
or
cltd
fs
fs
mov
push
pop
sbb
mov
xchg
loope
ljmp
push
jo
push
fistl
test
stos
xor
xchg
xor
lret
bound
or
lock
aaa
sub
loope
xor
loope
pop
cmp
or
sub
in
mov
or
fnstcw
add
jo
sub
leave
add
pop
ficompl
adc
sbb
add
orb
shrl
xchg
mov
insb
add
jnp
int3
lcall
stc
adc
xchg
or
jb
sbb
add
cli
leave
mov
adc
stos
nop
adc
dec
cmp
jns
imul
push
imul
or
mov
xchg
xlat
sti
iret
or
sbb
cwtl
adc
push
sbb
insb
or
mov
imul
insb
or
jl
aas
or
stos
xchg
mov
shl
fisubl
adc
sbb
imul
pusha
in
xor
jecxz
out
lods
or
stc
leave
pop
out
dec
movsl
xchg
insl
xor
and
repnz
push
dec
xchg
or
sub
mov
lock
xchg
mov
sub
or
sub
jp
inc
clc
and
push
push
inc
sbb
sub
mov
sub
mov
sbbl
ret
add
imul
cmc
cmp
sub
lret
sub
cmp
rcll
mov
cmp
or
pop
xchg
cwtl
dec
insb
aad
int
sbb
test
pop
and
lods
cltd
test
mov
fstpt
inc
mov
int
inc
or
sub
adc
sub
loop
push
and
fistpl
mov
stos
fsubrl
mov
cmc
or
sbb
repnz
or
je
and
xor
jle
in
inc
fldt
lea
cmp
ret
lret
cmp
xchg
cmp
enter
enter
enter
cmp
fistl
jp
jecxz
icebp
xor
push
fistpl
sti
or
jnp
test
jmp
leave
test
daa
cmp
xchg
xchg
jo
or
and
xchg
shrl
jmp
add
or
mov
mov
inc
shll
or
sbb
jb
jno
xor
cld
jl
mov
jno
mov
xchg
xor
dec
mov
push
jge
mov
aaa
xchg
push
sbb
mov
cmp
xchg
scas
mov
push
pop
push
push
in
fcmove
lods
dec
out
cmp
ret
hlt
mov
aam
inc
pop
cmp
aaa
inc
int3
xor
lds
mov
dec
xchg
pop
fimull
mov
xlat
in
call
pop
fwait
sub
or
mov
or
mov
jno
mov
or
insb
or
fdivs
fldt
jae
xchg
cmp
mov
sub
xor
mov
cmp
out
jmp
adc
push
add
jl
mov
push
xchg
pop
push
push
adcb
rorb
and
imul
js
push
or
sub
subl
imul
inc
lret
pop
div
dec
cmp
adc
lret
out
loop
fimull
shlb
push
ss
mov
xor
push
sub
pop
dec
jnp
ss
dec
and
dec
cmp
pop
movsb
sub
test
imull
sti
xor
mov
sbb
jmp
cmp
sub
stos
add
mov
inc
jge
daa
xor
dec
pop
add
mov
fcmovu
lret
sbb
sahf
test
mov
mov
add
frstpm(287
fwait
xor
aaa
nop
add
xor
xchg
mov
push
cmp
push
cmp
loop
cwtl
cmp
mov
cmp
mov
sbb
iret
cmp
sbb
pop
push
cltd
jle
mov
fstps
jmp
add
cmp
dec
sbb
cmp
cmp
cmp
pop
pop
pop
push
sbb
cli
fwait
xor
or
pop
xchg
add
dec
fwait
mov
xchg
fstpt
ret
test
int
xchg
adc
xchg
jnp
mov
sbb
mov
fistl
pop
leave
cltd
sti
loop
sbb
sbb
sbb
push
mov
mov
gs
aad
sub
lea
xlat
insl
inc
push
cmp
add
push
sub
mov
sbb
sbb
addr16
sbb
dec
adc
fwait
imul
sahf
jmp
add
jnp
pop
cmp
xchg
adc
pop
mov
xor
aad
cmp
jge
mov
xlat
sbb
sbb
icebp
lcall
lea
mov
iret
pop
iret
pop
fcmovnu
dec
pop
mov
lods
pop
cmp
push
jno
sbb
sahf
ret
mov
in
jb
into
mov
xor
cli
pop
cmp
enter
sub
cld
mov
push
idivl
mov
data16
popa
out
sbb
xor
inc
ja
daa
nop
aam
lea
bound
or
adc
mov
inc
or
sbb
stos
fimull
orb
xor
mov
mov
repnz
out
jl
or
push
cmp
pop
sub
mov
push
xor
sub
dec
cmp
aad
inc
sti
notl
add
das
faddl
leave
xor
dec
mov
call
xor
mov
orl
sub
push
dec
adc
cmp
push
cmc
mov
scas
mov
cmp
jae
dec
bnd
lea
xlat
jnp
lret
mov
arpl
sub
aas
movsb
rorl
push
mov
xlat
test
jge
push
sbb
mov
dec
cmp
stc
xor
mov
xor
imul
cmp
mov
stos
xor
cwtl
inc
or
mov
imul
adc
xor
mov
push
stos
ror
pop
push
xor
test
jl
lock
inc
mov
dec
popf
push
xor
cmpsb
jp
or
dec
and
insl
ljmp
push
cld
mov
test
emms
mov
cli
pop
sub
jp
outsl
ds
ret
or
xchg
mov
sbb
test
mov
inc
stos
mov
push
jmp
mov
sbb
cmp
push
mov
jo
pop
test
rolb
xchg
mov
mov
or
mov
sbb
ror
mov
popa
pop
pop
lea
add
jg
insl
add
movsb
lret
add
shrb
jb
xor
pop
nop
imul
mov
dec
adc
xor
or
icebp
pushf
cwtl
sbb
aad
add
stos
mov
int3
xor
sbb
lret
sub
sbb
cmp
mov
lret
push
xchg
mov
stos
js
inc
inc
sbb
out
cmp
daa
sahf
fistl
add
sub
inc
in
repz
adc
mov
sbb
xor
pop
xor
popf
aaa
mov
dec
mov
test
jns
cmpl
jo
leave
xor
sbb
mov
lds
ret
mov
sbb
fiaddl
mov
lods
inc
cli
sbb
push
adc
push
movsb
mov
add
mov
sub
cmp
pop
rcrl
and
repz
fstps
rcrl
xor
mov
sub
popf
mov
cmpb
rorl
sbb
loopne
jnp
sub
enter
shrl
shrb
int
push
sarl
je
cmpl
lahf
mov
dec
mov
sarl
jb
test
or
aad
pop
sbb
push
or
pop
push
mov
xchg
inc
sbb
ret
aas
mov
adc
jnp
repz
cltd
adc
xor
icebp
push
test
mov
mov
sub
pop
add
ret
repnz
out
cmp
fildl
xlat
lcall
mov
lea
cmp
adc
inc
mov
mov
je
inc
xor
cmc
mov
jg
inc
mov
stos
mov
dec
fxch
cmp
or
xlat
jp
jp
adc
mov
jns
call
inc
shll
mov
add
int3
rorb
mov
add
or
cwtl
add
mov
and
imul
push
ret
ret
cwtl
sbb
inc
negb
stc
enter
shrl
and
jmp
push
mov
jl
mov
cmp
xor
jb
push
ret
stos
sub
dec
mov
xor
xor
dec
iret
jo
sub
fldenv
mov
mov
jmp
dec
jae
or
push
addb
mov
mov
and
pop
cmp
psadbw
mov
mov
xor
test
xchg
fs
cmpsl
adc
jns
sub
mov
int3
nop
repnz
sub
stos
mov
cmp
sub
and
sbb
pop
or
mov
fwait
jae
iret
xor
xchg
call
pop
nop
xor
aaa
adc
sbb
hlt
fbstp
ret
jnp
adc
xlat
aaa
fdivrs
xor
sub
adc
dec
scas
mov
xchg
push
jecxz
fidivs
stos
pop
lahf
mov
jns
addr16
daa
getsec
inc
mov
hlt
stos
or
outsb
jg
or
scas
cmp
and
mov
fucomip
aas
inc
or
cmp
sbb
xchg
mov
pop
pop
mov
cmp
xchg
into
mov
jmp
pop
addr16
push
jl
pop
fcmovnbe
dec
dec
push
rorb
aas
cmp
xor
sub
and
sbb
adc
or
add
cli
cmpsl
div
bound
cmpsl
push
jb
cmp
mov
jg
ja
lahf
jp
sbb
imul
dec
sarl
fisubrl
loope
ret
inc
popa
or
test
mov
sbbl
mov
xchg
aaa
testl
mov
xor
jnp
jbe
lcall
rorb
lcall
mov
shll
stos
dec
arpl
jb
cmp
lret
sahf
xchg
fcmovnu
jbe
iret
push
pop
pop
cmp
dec
push
adc
fisttpll
pop
jbe
mov
push
adc
xchg
push
cltd
adc
fwait
or
xchg
xlat
and
ljmp
xchg
dec
into
fimuls
lock
daa
insl
xchg
rolb
dec
cmp
daa
cmp
push
xchg
lret
aaa
xor
pop
aaa
or
clc
or
and
xchg
shrb
ret
popa
jb
add
std
push
or
sbb
jnp
aam
or
and
xor
sub
xlat
test
dec
push
dec
fdivrs
fmuls
outsb
repnz
sbb
add
jns
and
mov
sti
dec
or
fwait
sbb
xchg
test
call
push
mov
mov
jp
mov
sbb
pop
lds
mov
mov
xor
push
push
jl
pushf
push
mov
fwait
lds
sti
mov
test
or
fldt
rcll
int3
pop
int
movsl
dec
leave
jg
push
or
dec
gs
cmp
pop
cmp
pop
in
inc
sbb
cmp
xchg
pushf
lds
outsl
fwait
int
lds
fisttpl
cmp
into
loope
add
leave
imul
je
xchg
in
cmp
test
pop
cltd
orb
dec
aam
cmc
out
inc
pop
mov
xor
jns
mov
pop
xor
push
jle
jp
lea
dec
orl
inc
aad
sbb
int3
pop
dec
cmp
ret
or
inc
rcrl
pop
mov
mov
cmp
mov
mov
xor
pop
push
in
mov
adc
sbb
adc
cld
and
jl
pop
jg
mov
push
sub
xchg
sbb
faddl
jmp
dec
fsubr
dec
dec
adc
jno
xor
mov
dec
push
popa
test
faddl
mov
xlat
aas
dec
sbb
scas
test
aad
fsubrs
dec
xor
or
aam
mov
or
pcmpeqd
mov
stos
rorb
fistpll
out
into
xchg
in
push
scas
dec
pop
test
jmp
idivb
mov
jae
cmpsb
repnz
shr
push
lods
jp
sub
rolb
mov
fs
sbb
inc
scas
xchg
and
sbb
mov
leave
xchg
mov
dec
jbe
loop
mov
pop
adc
mov
jbe
jae
fwait
xchg
lea
aas
fsubrs
sbb
inc
push
neg
xor
adc
xchg
ret
or
mov
push
fwait
and
cmpsb
mov
pop
arpl
lds
or
cmove
fistpl
xchg
jbe
mov
pop
cli
xchg
pop
data16
fdiv
pop
loop
cmp
mov
pop
sbbb
xor
outsl
jecxz
xchg
dec
sbb
sbb
shl
ds
mov
inc
sbb
mov
lahf
mov
pop
aad
pop
rcpps
mov
add
xchg
or
lcall
stos
js
cltd
push
jge
pop
into
mov
pushf
mov
cmp
xor
lret
xchg
mov
sbb
mov
arpl
push
sbbl
pop
aaa
iret
fwait
test
cmpsl
jmp
sbb
hlt
inc
sbb
or
push
fisubrs
inc
cli
mov
jb
dec
mov
inc
pop
nop
sbb
test
dec
jbe
mov
adc
push
inc
clc
lods
jae
imul
jne
mov
stc
jmp
inc
inc
das
sub
sbb
jmp
bound
aad
mov
cmp
mov
mov
dec
or
adc
and
push
daa
pop
dec
pop
sub
sbb
cmpsl
fucomi
inc
push
mov
inc
fisubs
into
push
imul
push
fsubs
xchg
cmp
aas
pop
pop
mov
lret
scas
pop
in
mov
lahf
into
mov
mov
and
lds
mov
pop
setp
jg
sbb
shll
jecxz
fldt
aaa
cmpsb
jp
add
fwait
loopne
lret
lods
pop
mov
sbb
jecxz
push
fisttpl
mov
xor
out
addr16
pop
mov
sbb
cmp
mov
cmp
rorb
cs
sahf
xchg
lret
pop
jp
jnp
cmp
push
mov
jge
push
pop
enter
dec
or
call
mov
jecxz
xchg
cmp
sub
adc
jo
lds
xchg
and
cwtl
ss
mov
inc
mov
cmp
sbb
repz
mov
cmpsb
xchg
cmp
cli
push
fistpl
adc
lret
cmpl
push
mulb
push
mov
jp
mov
mov
xor
icebp
mov
push
jbe
icebp
push
add
or
iret
and
pushf
mov
ss
dec
push
cmpsb
loopne
sbb
dec
sub
inc
mov
pop
nop
inc
push
xchg
cmp
cltd
mov
push
dec
bound
pop
dec
push
jbe
sahf
cmp
push
nopl
mov
xchg
lret
into
push
shufps
sti
or
xchg
sbb
scas
cmp
mov
adc
sbb
mov
inc
nop
push
xchg
push
cwtl
iret
add
ljmp
cmp
lret
fnsave
insb
out
mov
mov
xor
sbb
mov
dec
mov
jbe
pop
sbb
mov
pop
lret
nop
sub
pop
mov
shl
pop
xchg
cmp
daa
sbbb
xlat
jb
dec
push
inc
xorb
mov
sbb
fisttpl
movsl
stos
mov
mov
xor
leave
dec
sbb
test
lcall
fwait
sbb
lock
push
std
fcmovnb
add
lcall
shl
push
clc
adc
push
mov
jnp
lret
cmpsb
shlb
lahf
fistl
fstpt
jb
fimuls
lret
mov
mov
jae
sub
mov
adc
lcall
scas
sbb
sub
mov
pop
mov
sti
out
mov
mov
mov
lret
xchg
xor
push
out
mov
inc
fistpl
pop
jne
fcmovb
cmp
xchg
mov
cmpsl
pop
cmpl
adc
sbb
jmp
dec
sbb
pop
lcall
cmp
ret
lret
push
add
negl
add
cmp
scas
sbb
xchg
dec
std
cmc
cmp
out
pop
jmp
fildl
testl
mov
and
sahf
jmp
mov
mov
cmp
or
push
icebp
leave
dec
fcmovnb
cmp
jle
adc
aas
flds
mov
pop
fiadds
popf
dec
les
push
dec
mov
ret
cmp
imul
xor
adc
lret
sbb
rorb
pop
ss
lcall
rorl
pop
imul
adc
push
mov
jmp
sti
adc
sub
rcr
js
inc
cwtl
dec
fwait
mov
clc
lret
sub
dec
push
jns
test
jmp
add
enter
dec
cmovl
rorl
sti
inc
ss
inc
lret
xor
cmp
sub
cmp
xor
xor
lret
add
imul
sub
sbb
or
adc
rorl
xlat
jmp
rcrl
push
iret
dec
or
mov
adc
setae
cmc
sub
sar
cmpsb
lcall
inc
cmc
fwait
pop
ljmp
fcmovne
dec
or
cmp
push
mov
loope
push
aad
xor
lcall
and
and
sti
cmp
pop
push
push
dec
cmp
adc
dec
pop
ficoml
enter
xor
fdivrl
push
aad
fwait
push
fst
fsubrs
pop
bound
mov
lock
fcmovnu
cmp
push
pusha
cmp
xchg
test
fwait
lret
adc
repz
hlt
mov
sbb
inc
xor
loop
outsl
pop
fisubrs
xlat
xchg
lcall
or
bound
ficomps
shr
out
dec
xchg
add
dec
cmp
dec
and
push
jbe
sbb
push
enter
ds
dec
xchg
sbb
fadds
or
and
mov
push
pop
aam
sbb
sbb
and
mov
rol
cmp
xchg
sub
xchg
shl
mov
adc
sarl
dec
sti
sbb
notl
es
repz
cltd
cmp
push
jp
jmp
sbb
push
fwait
shll
fldt
cwtl
outsb
push
cltd
pop
sub
xlat
mov
or
dec
jb
push
add
pop
xor
pop
call
ret
xchg
and
fmuls
pop
or
orl
testl
jp
pop
dec
push
or
jno
inc
push
addr16
xchg
push
xor
fsts
cmp
shl
sbb
or
cwtl
xor
and
mov
cwtl
sub
adc
mov
push
jns
leave
clc
xchg
ret
pop
imul
lret
jmp
or
or
xlat
dec
sub
ss
adc
push
mov
sbb
test
inc
enter
fmul
adc
call
dec
sub
ss
cmp
add
pop
push
jmp
jns
negl
lret
sti
cmp
push
add
stc
inc
jmp
sarl
sub
iret
sarl
dec
lret
dec
xor
jne
js
xchg
pushf
pop
rcrb
push
sbb
imul
subb
xchg
push
push
mov
dec
divb
push
lcall
add
pusha
pop
dec
xchg
push
jns
push
xor
roll
rclb
lret
nop
dec
and
shll
mov
cmp
push
rcll
rolb
rcll
push
lret
aas
cmp
push
ret
dec
icebp
xchg
ss
adc
lret
lods
dec
inc
test
xor
mov
arpl
mov
xor
push
lret
mov
mov
dec
jo
pop
andl
push
inc
shl
dec
xchg
adc
cld
adc
xor
push
cmp
fiaddl
cmp
inc
fwait
cmpsb
sbb
mov
push
jmp
adc
mov
cmovs
mov
cmp
test
inc
mov
push
xlat
push
bound
pop
or
push
xchg
push
mov
pop
mov
push
in
imul
and
jne
cwtl
jmp
pop
pop
or
cmp
fcoms
mov
insb
repz
fisubs
nop
dec
inc
fcmovnu
push
and
jno
nop/reserved
push
adc
lods
pop
mov
ud2
popf
ljmp
jmp
sbb
ljmp
jmp
push
sub
or
and
rorb
jle
add
mov
nop
sbb
lahf
lret
daa
pop
stos
or
push
ss
dec
dec
cmp
push
mov
adc
lret
fstpt
pop
xor
ret
in
add
push
pop
sub
inc
jnp
push
cmp
cmp
sub
sbb
sbb
lret
mov
or
pop
add
add
fldt
popa
negl
pop
xor
sbb
movsb
sub
into
push
or
loope
test
in
js
pop
out
mov
arpl
push
dec
and
mov
loope
je
jmp
adc
sbb
imul
fistpll
pop
sahf
inc
fsubrs
pop
mov
xor
push
pop
imul
jl
lcall
loopne
in
insb
lods
bound
pop
or
nop
mov
dec
push
pop
ret
dec
mov
mov
dec
jo
lods
mov
aam
pop
jb
sbb
push
pop
and
mov
inc
data16
ljmp
xchg
fwait
xorb
enter
outsl
xchg
xchg
movsb
punpcklwd
out
inc
fstpl
loope,pn
bnd
pop
rcrl
sub
adc
clc
out
ss
mov
sbb
pop
sarl
ftst
pop
mov
std
push
adc
dec
mov
xchg
sub
push
insb
push
pop
xchg
addr16
int
dec
inc
js
repnz
fcompl
es
mov
dec
pop
or
cli
jge
adc
iret
dec
aas
out
cmp
pop
pop
roll
gs
lods
pop
imul
pop
add
dec
dec
adc
sub
out
pop
aam
dec
popa
or
shlb
outsl
xchg
or
icebp
popf
fsub
mov
inc
movsl
jecxz
sbb
inc
pop
shrb
outsl
xchg
jb,pn
pop
pop
notb
dec
xchg
punpckhdq
insl
cld
mov
popa
adc
insb
dec
fdivrl
lds
mov
test
push
pop
sbb
pop
arpl
outsb
inc
sub
or
pop
push
push
shlb
divl
dec
xchg
pop
pop
test
jnp
aas
jnp
jns
fs
outsl
call
out
xchg
mov
cwtl
inc
dec
pop
inc
push
cmp
cmc
xchg
push
mov
adc
fcoms
bnd
ds
pop
sbb
lock
roll
xchg
adc
adc
dec
idivb
sbb
orl
scas
cltd
push
testb
pop
loopne
data16
mov
mov
imul
dec
sar
and
sarb
dec
push
popf
inc
or
pop
ljmp
in
sar
iret
dec
jmp
and
inc
sub
lahf
dec
pop
and
sub
mov
ja
inc
dec
dec
std
cmp
inc
stc
aaa
or
jmp
das
or
jnp
mov
in
daa
or
inc
lcall
inc
push
xchg
fstpl
jne
les
sbb
mov
adc
jmp
imul
push
and
xor
sbb
jp
adc
pop
jbe
xchg
fdivs
mov
mov
loop
iret
mov
inc
sub
bound
pop
ja
mov
lret
rorb
push
ficomps
jmp
dec
sbb
ds
sbb
xor
cmp
inc
cmp
sbb
pop
std
stos
jge
dec
inc
pusha
aas
or
xchg
xor
aaa
or
push
add
scas
jbe
and
sbb
add
pop
fnstsw
dec
add
fdivs
aam
lcall
sti
lcall
out
ror
sbb
repz
in
pop
lahf
stos
xchg
xchg
add
or
aaa
cmp
dec
jg
pop
aas
stos
inc
dec
cmp
lcall
lcall
out
mov
jnp
mov
scas
mov
stos
push
sub
or
outsl
rcl
mov
xor
fidivrl
mov
mov
xchg
jae
repz
adc
rcr
dec
cmp
lret
jnp
shlb
fwait
mov
jnp
cmpsb
xlat
daa
and
and
or
xchg
leave
mov
and
jmp
outsl
adc
int
adc
pop
or
mov
sub
mov
adc
fstl
xchg
jo
xor
push
mov
and
mov
inc
sahf
mov
aaa
lcall
or
sti
in
jnp
es
ja
dec
mov
das
mov
lea
add
scas
xlat
sbb
xchg
push
xchg
sbb
cmp
adc
bt
push
test
fadds
and
sub
cmp
xor
cwtl
pop
pusha
sbb
scas
pop
sub
bsf
xchg
mov
setae
xadd
bt
mov
rol
add
or
shr
pushf
dec
pusha
mov
sub
pusha
adc
sar
add
jmp
and
inc
add
int3
mull
mov
cli
mov
stos
ror
xchg
sahf
lcall
add
xor
inc
repnz
out
or
sub
xlat
addr16
adcl
push
lahf
mov
hlt
jge
jg
ficoml
xlat
out
and
data16
in
mov
xor
or
int3
jnp
push
xchg
mov
lods
addb
push
lret
xchg
ror
cmpsl
nop
adc
lea
sub
scas
or
stos
adc
jae
repz
mov
xchg
mov
scas
and
xor
pushf
lea
jmp
call
call
pop
jle
in
orb
je
pop
dec
pop
shlb
push
xchg
dec
cmp
mov
fwait
shrb
icebp
sbb
std
pmaddwd
popf
clc
jbe
outsl
test
lods
out
stos
cmpsb
outsl
cs
out
pusha
loop
dec
addl
cmp
or
cwtl
in
xor
fwait
xchg
jae
xor
xorb
ds
push
or
ja
repnz
mov
lret
xor
shrl
xor
pop
movl
call
call
arpl
jmp
mov
inc
push
aam
xlat
adc
out
popa
pop
pop
mov
in
mov
cmc
lcall
ds
xchg
jae
sub
inc
mov
fs
mov
aas
popa
sbbb
call
loope
push
loopne
push
arpl
out
mov
inc
push
imul
adc
gs
in
xchg
or
xchg
cwtl
das
movsl
imul
push
push
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
and
mov
sbb
or
pusha
pusha
add
movb
movb
call
add
cmc
ror
mov
jmp
pusha
pushf
pushf
mov
setb
call
push
scas
aas
cld
clc
insb
cmpl
aaa
fdivl
mov
adc
enter
xchg
or
sbb
mov
ljmp
xchg
lret
sub
and
mov
pushf
fidivs
sbb
fmuls
leave
add
pop
adc
mov
icebp
pop
mov
inc
les
stc
jno
mov
jbe
xchg
ljmp
or
xorl
and
addl
ljmp
xchg
xor
pop
je
xchg
loopne
pop
daa
push
pop
xor
or
xchg
decb
pop
movsl
in
and
pusha
jp
and
ja
fwait
lea
inc
roll
jp
bound
jns
sub
cmp
mov
mov
clc
cmpsb
mov
jns
dec
inc
adc
jo
pop
loope
outsb
mov
dec
mov
cmp
adc
sbbl
push
lods
push
jbe
call
loope
lock
fs
cmp
es
dec
adc
test
bsr
cmp
pushf
mov
push
bt
jmp
pusha
test
call
popa
push
jns
push
and
ret
loopne
je
mov
leave
xchg
sbb
sub
xchg
mov
jecxz
clc
and
dec
imul
scas
andb
add
or
dec
push
mov
arpl
sbb
mov
stc
fiaddl
lret
js
dec
dec
xchg
andl
mov
push
out
xchg
jae
ds
std
or
sub
leave
lahf
lahf
pop
imul
lahf
ljmp
lds
popf
dec
adc
mov
mov
jl
out
cwtl
mov
jbe
aam
dec
por
xor
lods
cmp
aas
dec
mov
aad
sbb
cmp
sub
aad
adc
mov
aaa
gs
out
cmp
mov
pop
push
sti
push
movsb
mov
aam
adcl
fwait
sub
fwait
pop
or
jne
add
ret
mov
aaa
sbb
stos
aam
lcall
in
add
cld
xor
mov
inc
movsb
push
fiaddl
test
add
push
sub
lahf
sub
or
dec
shlb
call
mov
mov
inc
into
movsl
dec
adc
or
push
xchg
cli
dec
inc
ljmp
nop
push
ljmp
sub
loop
shlb
mov
adc
jo
add
inc
sub
cmp
inc
scas
xchg
pop
sbb
fs
jb
clc
pushf
stc
test
cmp
mov
lea
jae
cmc
jmp
pop
out
inc
dec
push
lcall
and
mov
cmc
xor
mov
jnp
es
mov
mov
inc
adc
std
fcoml
scas
fidivrl
mov
arpl
xchg
sub
push
add
sub
inc
test
jmp
xchg
shrl
mov
int
push
and
icebp
push
dec
outsl
hlt
jnp
ja
push
push
push
imul
xor
bt
mov
call
pushf
pushl
jmp
sub
cmp
stos
insl
dec
lret
dec
mov
repz
jae
out
xchg
cmpsl
mov
sar
xor
fildl
mov
repz
out
mov
fsubrs
int
dec
fwait
hlt
ja
mov
shll
repz
adc
pushl
pop
adc
push
lret
pop
and
xchg
cmpsl
fstps
rcll
add
lock
test
rorl
mov
inc
sub
and
pop
and
aaa
xchg
mov
mov
lea
jmp
fisttpl
inc
and
inc
dec
xor
pushf
jge
and
addr16
jmp
cmp
ud1
lret
inc
cli
mov
lcall
inc
arpl
pushf
mov
cmc
inc
jle
fwait
pop
cmp
add
push
jmp
inc
loop
es
out
std
xchg
xchg
sbb
ficoml
or
and
sahf
mov
and
lret
jp
outsb
cltd
lods
inc
leave
jg
je
arpl
addr16
adc
sub
adc
jecxz
aam
xor
add
mov
pop
pop
out
insb
cwtl
das
fdivrl
jb
arpl
dec
sahf
ljmp
dec
xchg
xchg
inc
hlt
xchg
mov
enter
sbb
pop
and
inc
push
cs
push
sub
in
jo
cmp
sbb
xchg
jmp
cmp
scas
pop
adc
mov
mov
fnsetpm(287
cmp
jo
sbb
mov
adc
dec
stc
jb
push
add
imul
push
iret
xchg
cs
jns
or
int3
ds
push
cwtl
mov
cmpsb
cmp
pop
pop
adc
pushl
mov
ret
in
das
dec
xchg
xchg
aam
inc
xor
dec
cmp
xor
das
dec
bound
push
pop
inc
fldcw
sub
dec
and
ret
jecxz
xchg
out
cli
shrb
xor
movzwl
movzbl
mov
stc
call
cmpsl
and
nop
test
scas
jle
cmc
mov
add
pop
push
nop
lods
cmp
in
enter
push
mov
and
adc
testl
xor
lret
lods
test
in
scas
fs
and
mov
insl
xchg
or
sbb
jg
sahf
pop
xor
sahf
mov
jge
xlat
lods
add
lret
clc
aam
das
add
shl
lcall
test
popa
jmp
movsb
negb
sbb
cmpl
sbb
add
test
mov
add
insb
push
push
lea
jmp
pusha
lea
ja
pusha
mov
dec
not
inc
call
mov
push
mov
pusha
lea
jmp
lods
out
test
push
fcmovbe
popl
add
cwtl
clc
sbbl
pop
leave
push
les
jb
lret
std
jl
add
mov
fdivrs
fnstenv
or
lret
fcmovu
xlat
sub
js
movsl
inc
jge
cli
jns
push
adc
and
mov
sub
xchg
test
mov
pop
das
or
lods
clc
rorb
push
sub
daa
imul
push
mov
movl
movb
lea
je
bt
stc
stc
stc
cmp
call
mov
fidivs
sar
jecxz
push
fstp
jo
in
pusha
das
sub
pushf
sub
fwait
xchg
lret
in
cs
mov
inc
push
xor
sub
bound
mov
mov
cltd
pop
push
adc
loopne
out
inc
scas
add
sub
rolb
and
and
sbb
dec
in
jnp
xlat
lret
xchg
push
rclb
imul
sbb
sti
add
fmuls
aam
cmp
push
cmp
das
adc
in
enter
cmpb
cmp
push
sahf
cmp
cmp
mov
mov
lea
je
clc
cmc
bt
cmp
pusha
lea
je
pusha
pushf
push
lea
jmp
lea
jne
call
bsf
mov
jmp
adc
mov
or
mov
and
popaw
or
xor
aas
clc
push
fcompl
loope
mov
mov
dec
into
fsubr
pushf
mov
jecxz
imul
std
fs
fistps
setp
dec
push
lret
repz
lods
outsl
pop
jno
add
sbb
mov
decb
sub
xor
mov
dec
dec
sub
cld
stc
pusha
in
pop
outsl
or
mov
fwait
aam
cld
mov
insb
pusha
jmp
dec
movl
dec
jno
push
xchg
ret
into
mov
test
lock
inc
incb
stc
psllw
bound
into
jg
std
sbb
and
ss
push
es
popa
out
xchg
mov
out
mov
dec
ret
imul
loopne
or
iret
ja
stos
rcrb
mov
movsl
stos
pop
loop
push
xchg
clc
adc
gs
adc
out
iret
pop
imul
jb
adc
push
jno
lods
and
inc
mov
rcrb
pop
fimull
ret
loopne
jns
fwait
les
sub
outsl
mov
and
mov
xchg
pop
cmp
fisubl
and
xchg
and
stos
xchg
imul
sub
mov
aad
addr16
test
add
fsubl
lods
push
imul
mov
push
jle
mov
push
frstor
mov
dec
daa
mov
mov
sub
push
lret
pop
scas
mov
aad
bound
sub
lret
out
loope
les
jecxz
testb
push
imul
sbb
sub
lods
push
into
repz
jl
cmp
movsl
aas
int3
loop
adc
cltd
dec
mov
cmp
xor
out
mov
gs
and
or
jge
jnp
bound
icebp
movsb
cmp
jp
jbe
dec
push
dec
rcr
mov
jne
sbb
imul
xor
addr16
mov
aaa
cmpsl
popa
ds
jecxz
daa
clc
xor
test
add
sub
loop
pop
lods
pop
inc
repz
stc
mov
jecxz
ss
daa
inc
iret
or
aad
out
push
ds
xchg
sahf
adc
inc
mov
push
in
or
dec
jecxz
shll
push
cmpsl
pop
stos
sbb
mov
cmp
outsl
insb
xor
cs
insb
add
call
insl
fcoms
dec
inc
xchg
inc
add
ret
sahf
out
add
dec
push
iret
and
mov
subb
xchg
mov
mov
movsb
add
test
nop
mov
rolb
sbb
xlat
movsb
and
lcall
jo
xchg
xor
and
movsb
inc
jo
mov
loope
adc
pop
adc
lahf
movsb
sub
sub
cwtl
mov
loope
pop
add
lds
dec
fxch
or
leave
dec
popa
lea
mov
jbe
push
inc
aas
pop
movsl
jb
cmpsb
dec
test
mov
aad
mov
movsl
ret
leave
dec
bound
jne
inc
fcompl
das
loopne
int
add
ss
stos
lret
in
lock
insl
push
xchg
pop
cmc
adc
mov
mov
gs
mov
mov
stc
xchg
mov
aas
sub
or
orl
add
cltd
ret
not
pushf
mov
push
inc
pushl
pushl
mov
lea
pushf
pusha
lea
call
pushf
adc
call
shl
pushf
sub
call
add
push
gs
jo
outsb
dec
gs
js
add
xor
add
pusha
mov
pushf
lea
jmp
push
pop
dec
sbb
cs
xor
mov
sbb
inc
fwait
mov
sub
push
lcall
inc
sbb
mov
js
out
inc
push
in
mov
mov
dec
dec
dec
mov
lcall
cmp
sub
ds
sbb
jnp
inc
mov
dec
xor
in
cmp
dec
popf
fwait
cmp
ja
mov
outsl
mov
sbb
fwait
dec
fsts
inc
cmp
cs
out
push
or
dec
aam
sbb
inc
or
xchg
cmpb
int
cmp
add
xor
lods
jae
out
pop
or
dec
xchg
push
jae
fisubrl
lret
mov
enter
mov
push
lret
sbb
dec
sub
push
dec
jne
pushf
xorl
mov
fmuls
push
pop
mov
push
push
inc
push
lods
push
negb
movsl
ret
loop
rorl
push
and
sub
push
xlat
ret
mov
xor
dec
paddsw
inc
nop
popf
nop
lods
data16
push
pushw
jmp
cmp
ss
mov
aaa
mov
popa
lea
xlat
andl
sbb
xor
jns
inc
std
push
cwtl
sbb
loope
leave
cmp
xlat
lock
fistpl
mov
or
addb
and
lret
sbb
int3
mov
fisttps
cli
inc
dec
mov
cmp
cmp
je
cmp
fildll
sbb
inc
sub
inc
jns
ja
fwait
mov
jb
and
adc
js
mov
ret
inc
ret
pop
fwait
push
or
xor
push
out
pop
pop
divb
xchg
out
js
pop
jb
in
jns
pop
outsl
push
push
and
inc
mov
fcoms
dec
clc
ss
mov
xchg
jmp
lret
sbb
adc
mov
push
pop
mov
dec
pop
sbb
or
test
cmp
push
add
xor
notb
push
and
sbb
xor
or
aam
jbe
inc
dec
insb
mov
pop
jp
or
ds
xor
daa
sti
xor
jp
rdtsc
js
dec
les
mov
cmpsb
xchg
out
sbb
aad
sarl
adc
xlat
inc
les
push
cli
imul
sub
mulb
pop
or
xchg
xlat
ss
mov
dec
jmp
and
mov
xchg
inc
push
je
jne
push
int
push
push
ljmp
mov
out
push
js
outsl
dec
xor
mov
clc
cli
push
pop
fisttps
ss
outsl
cmp
shl
popa
sbb
insb
xchg
dec
cmp
xor
mov
pop
inc
in
cmp
push
dec
iret
data16
out
jmp
push
cs
xor
inc
sub
pop
in
lods
rorl
mov
mov
out
pop
dec
jle
inc
dec
mov
push
in
xchg
sbb
int
push
insb
aad
xorb
cmp
outsb
sbb
mov
idivb
pop
add
or
jbe
pop
jo
xlat
xchg
and
rcrl
jns
or
hlt
add
addr16
sti
add
inc
aaa
push
add
xchg
push
test
pop
xchg
cmp
jno
mov
push
xchg
dec
popf
xchg
mov
ja
imul
mov
hlt
ljmp
dec
and
xchg
repnz
clc
jg
xchg
clc
mov
std
repz
mov
ret
mov
pop
sub
pop
mov
push
push
dec
jns
adc
sbb
xchg
cs
jno
pusha
bound
mov
mov
push
fistl
mov
pop
ret
aas
enter
fcomps
sbb
sbb
lods
and
dec
and
dec
pusha
xlat
fs
push
into
and
hlt
or
xchg
sub
xlat
push
pop
fwait
push
mov
xlat
push
aad
out
movlps
js
sbb
scas
adc
adc
push
aam
into
sub
xlat
loop
movsl
idivb
mov
xchg
lret
pop
in
or
mov
jne
mov
lret
add
cmp
cmc
mov
fwait
idivb
inc
mov
faddp
lods
stos
fildll
cli
imulb
fcomi
adc
aaa
out
inc
mov
loop
mov
cmp
clc
jae
dec
leave
out
cmp
test
jmp
mov
mov
sbb
jns
dec
int
lcall
jno
jnp
fstpt
xchg
and
mov
cwtl
dec
test
xchg
push
out
js
sti
jne
loop
mov
bnd
push
les
aas
ja
or
xchg
out
xchg
roll
xor
cmc
roll
mov
xchg
add
ja,pt
fs
imul
lock
sarl
jmp
sbb
cmp
xchg
adcl
mov
dec
dec
shll
or
ret
inc
dec
dec
jp
and
mov
out
dec
insb
ss
insl
sti
jbe
dec
adc
inc
push
mov
and
xchg
js
cmp
push
cs
xchg
lcall
push
push
sbb
adc
mov
inc
xor
repz
shll
cltd
enter
jmp
outsb
lretw
cmp
jle
push
push
pop
mov
adc
insb
mov
mov
pop
fldcw
lret
pop
cmp
xchg
lret
aaa
sub
js
mov
xchg
das
cltd
jnp
xchg
lcall
add
in
push
cwtl
jo
pushf
sahf
es
adc
dec
inc
sbb
sbb
pop
inc
test
cli
sbb
sahf
mov
mov
lahf
stos
js
dec
es
sbb
jnp
push
dec
mov
pop
sbbb
sahf
repnz
ja
xor
call
inc
ss
inc
js
insl
or
ja
jmp
push
mov
mov
cwtl
xchg
mov
adc
mov
int
fs
cmp
adc
aaa
mov
push
jmp
popf
jne
cmp
aaa
and
lods
fisttpl
ds
jae
js
sbb
jns
push
push
xor
push
jl
jne
xchg
mov
pop
adc
sbb
add
mov
mov
cmpsb
inc
cmp
enter
mov
add
stc
ret
cmpsb
leave
mov
fsubrp
ret
cs
xor
xchg
cmp
sub
push
mov
add
loop
cmp
shll
xchg
and
inc
push
mov
imul
int3
orb
xchg
test
lcall
xor
out
cmp
mov
ret
stos
popa
rcll
jl
xlat
mov
leave
loopne
pop
pop
mov
rcr
imul
push
cmp
call
dec
jnp
inc
dec
jo
xchg
js
xchg
sub
mov
js
dec
push
sbb
insl
cld
clc
xlat
push
add
jle
lea
clc
xor
scas
nop
lret
jnp
scas
xchg
and
rol
push
sub
jns
adc
fidivs
add
inc
sarb
jle
cli
mov
pop
or
fidivs
sbb
mov
fisttpll
in
cmp
add
cmpsl
jae
pop
jnp
xchg
cmpsb
iret
jge
pop
push
adc
mov
cwtl
notl
test
scas
divl
or
loop
cwtl
and
subb
enter
cwtl
pusha
dec
das
test
loopne
fdiv
leave
sub
pop
lret
sbb
add
cli
push
jno
sbb
mov
push
sub
cmp
aam
std
xchg
jb
aas
imul
js
rcrb
ret
mov
sar
mov
iret
pushf
ret
lret
scas
mov
lds
ror
sti
mov
sub
mov
subb
jbe
shrl
push
add
jmp
repnz
lock
sbb
call
sbb
fwait
movsl
add
xlat
lret
sti
aas
ret
adc
add
cli
mov
scas
jmp
inc
cmp
pusha
xlat
mov
dec
es
stos
jp
out
mov
stos
dec
daa
pop
push
lret
push
mov
fidivrs
jno
hlt
lds
cli
repz
iret
loopne
rclb
stc
pop
stos
outsl
scas
push
int3
mov
into
mov
xchg
pop
sbb
into
test
fistpll
cwtl
shrb
push
cmp
mov
mov
in
dec
test
popf
jge
fists
sahf
inc
aad
xor
mov
mov
stos
pop
pop
jecxz
sbb
mov
les
and
lret
pop
mov
fisubrl
dec
pop
mov
notb
hlt
aaa
xchg
mov
mov
dec
cli
es
aad
cmp
bound
fstps
cmp
cli
or
loop
jnp
xor
outsl
insl
pop
fwait
bound
aad
call
cmp
xchg
iret
lret
jne
mov
pop
dec
les
xlat
jp
inc
mov
test
sarb
push
push
adc
in
ret
xchg
das
jmp
test
xor
mov
rorb
fidivs
aaa
cltd
mov
xchg
add
mov
lret
mov
jae
adc
cmp
jp
sarl
sbb
inc
int
mov
icebp
and
xchg
mov
call
popa
ss
xor
xor
sbb
and
fimuls
loop
xchg
inc
push
push
push
push
mov
sub
xchg
sbb
add
xchg
jmp
mov
and
mov
add
div
cmp
imul
add
add
mov
fnstcw
inc
sub
xchg
sbb
sbb
jmp
mov
inc
cwtl
sub
mov
adc
pop
and
or
lock
sbb
imul
jb
test
mov
dec
shl
mov
clc
inc
push
inc
push
adcb
dec
mov
pushaw
ret
push
pop
sub
fsubl
mov
lret
sub
pop
js
jbe
cmp
pop
jmp
push
jecxz
stc
add
aaa
adc
in
push
ss
ljmp
sbb
pop
jge
ds
lods
sbb
repz
inc
xchg
mov
int
push
in
inc
in
sub
call
sti
push
mov
add
notb
ss
push
and
and
pop
cmpsl
je
xchg
mov
sbb
dec
sti
outsl
pop
dec
adc
cmp
sub
and
push
fsubrp
lock
out
push
cs
aaa
push
xchg
and
mov
push
pop
lods
inc
inc
mov
into
push
inc
xchg
xchg
fyl2x
pmaxsw
stos
or
push
xchg
push
mov
or
adc
add
cmp
mov
adc
pop
xor
dec
jo
sub
xchg
addr16
sbb
in
bnd
adc
dec
xor
js
mov
dec
repnz
pop
popf
movsl
pop
sahf
adc
push
mov
lret
clc
loopne
orl
in
inc
xacquire
out
repnz
adc
or
les
or
adc
shl
and
push
inc
inc
shll
push
shrb
out
xchg
mov
subl
dec
mov
sbb
jecxz
xlat
idivb
xchg
out
inc
push
das
and
imul
cli
push
js
push
jl
jno
sub
fsqrt
jecxz
dec
sub
mov
cli
mov
inc
cmp
ss
xchg
into
es
jp
sub
mov
cmp
push
adcb
jge
jecxz
in
xorl
rcl
icebp
dec
rolb
out
dec
inc
add
int3
dec
cmp
out
out
add
or
and
nop
test
cmp
inc
js
jns
mov
jns
adc
pop
outsb
idivl
mov
or
add
mov
inc
xorl
or
mov
sbb
or
in
xor
xlat
sbb
xor
cmp
insl
cmp
mov
inc
in
pop
pop
lock
pop
jb
icebp
and
fcomps
mov
jecxz
or
push
jbe
pop
or
dec
pop
inc
xor
mov
xchg
das
lret
lahf
lret
mov
add
xchg
jbe
jmp
or
xor
jae
add
mov
cld
adc
pop
aam
and
loopne
mov
or
mov
lds
push
mov
or
iret
or
jb
xlat
out
or
or
testb
cmp
sete
and
cvttps2pi
mov
jl
xchg
sub
cmp
cmp
add
test
stos
mov
xor
rolb
jle
mov
xlat
sbb
bound
shlb
add
js
jecxz
aam
mul
push
adc
add
lea
jbe
sti
fstl
cs
mov
inc
add
adc
lods
mov
pop
pop
jecxz
addr16
mov
push
outsl
fmull
dec
pop
add
mov
out
xlat
sbb
sbb
fildl
bound
mov
xor
mov
push
push
dec
sbb
sbb
xchg
or
dec
js
fldt
jnp
xchg
insb
pop
pop
xchg
mov
jb
jmp
add
xchg
sahf
imul
aam
pop
push
xor
stc
xor
pop
jns
xor
jbe
and
xor
sbb
pop
mov
out
outsl
or
mov
movsb
sahf
push
hlt
and
push
push
pop
or
adc
dec
sub
dec
xor
enter
inc
lods
xchg
pop
cmc
add
mov
dec
mov
dec
cwtl
or
dec
rcrb
adc
mov
push
in
mov
dec
imul
jge
push
mov
test
cli
inc
and
mov
xor
jb
shrb
mov
xor
scas
inc
call
push
fdivrs
clc
fsubrs
ret
lret
enter
daa
jle
sar
lcall
sbb
inc
shrb
adc
push
adc
addr16
inc
sbb
pushf
push
sub
out
or
push
loop
sub
cmp
rclb
repz
gs
dec
pop
leave
cmpl
fstl
into
sub
push
sbb
jle
stc
cmp
sbb
push
es
sbb
cmp
xor
das
scas
or
das
test
mov
lahf
cmp
psrlq
xor
adc
ret
push
add
lret
or
das
enter
or
xchg
jmp
or
imul
mov
sahf
push
xlat
push
xor
sbbb
ret
inc
in
add
mov
mov
add
and
jae
sbb
jle
push
push
shlb
add
ss
in
push
adc
add
test
add
addr16
aaa
in
fildll
mov
pusha
addr16
mov
aam
cmp
fdivrs
enter
cmp
jge
enter
sbb
aas
mov
aad
fs
dec
and
push
fidivrs
and
cwtl
adc
in
inc
pop
cwtl
icebp
sti
jmp
inc
dec
cmp
wbinvd
stos
aas
aas
mov
lea
xor
outsl
test
xchg
lahf
inc
inc
push
insl
inc
jecxz
xor
jns
jmp
out
out
push
jne
sub
jb
inc
mov
jle
nop
sbb
dec
pop
inc
cmpsl
xchg
outsl
sbb
dec
filds
outsl
pushf
mov
fistpll
push
gs
daa
or
sub
mov
mov
xor
sbb
dec
inc
fnsave
add
xor
mov
mov
sub
cmp
mov
enter
dec
ret
dec
out
or
inc
sbb
xlat
shlb
les
ljmp
es
ljmp
push
fimull
pop
xchg
mov
clc
add
jg
iret
mov
enter
dec
push
jo
pop
or
sbb
push
mov
ja
shrb
push
add
pop
sbb
dec
adc
dec
mov
pop
cmp
inc
push
or
push
or
lods
push
fmulp
or
mov
inc
pop
sbb
pop
jno
inc
pop
mov
xor
iret
lret
lcall
add
sub
sub
jge
xor
xor
lcall
cmp
xlat
jmp
loop
push
mov
sbb
sub
sub
pop
sub
jns
aam
sub
arpl
ds
push
aas
mov
cmp
add
cmp
fistps
sub
lahf
xchg
repnz
push
xor
mov
pusha
sbb
sub
sbb
adc
rorl
sarl
xchg
sbb
insl
arpl
adc
jne
push
sub
pusha
lcall
sub
inc
add
sbb
mov
jmp
xor
lock
xchg
addr16
imulb
das
xchg
sti
dec
data16
jecxz
inc
jb
or
and
negl
inc
addr16
sbb
xchg
lret
roll
dec
xor
imul
popf
mov
imul
ror
adc
mov
mov
in
std
imul
sbb
mov
fists
leave
mov
sub
push
add
dec
imul
repz
fs
mov
push
and
pop
outsb
and
outsl
jl
adcl
jg
mov
lea
or
fistpll
or
jl
sbbl
outsl
inc
push
mov
imul
outsl
aaa
lcall
inc
cli
cmp
jae
iret
sbb
cmp
fs
not
jle
mov
jae
mov
add
mov
out
push
inc
jnp
pop
inc
dec
jecxz
imul
add
scas
xchg
jecxz
mov
dec
inc
push
ja
fistl
jns
jns
inc
ja
test
jg
add
jb
push
aam
popf
xor
imul
xor
stos
xchg
fwait
dec
ja
sbb
xor
pop
adc
call
mov
push
icebp
adc
cmp
js
push
inc
sbb
jb
cwtl
push
dec
push
jnp
test
mov
push
or
jnp
inc
mov
adc
pop
mov
stos
aas
imul
test
bound
sbb
ficoml
xchg
jg
outsb
push
mov
inc
sarl
loop
dec
jg
mov
mov
xor
add
mov
cli
cmpl
fmull
and
into
add
daa
sti
sahf
mov
jmp
out
movsb
xchg
push
in
jg
adc
adc
icebp
repz
test
aas
pop
jp
int
dec
xorl
xchg
ror
sbb
inc
andl
push
sub
xor
leave
stc
jb
mov
adc
cmp
adc
sbb
mov
hlt
loope
jmp
test
call
sbb
or
push
fcompl
insb
xchg
add
mov
or
xchg
cmp
adc
jo
sbb
inc
xchg
cmc
xchg
adc
stos
mov
repnz
inc
dec
mov
jnp
bnd
cmpsl
jle
test
loopne
mov
arpl
cmp
xor
sub
sub
inc
push
cwtl
rcl
nop
mov
sub
imul
clc
insl
xchg
sub
movl
inc
sub
cltd
mov
cmp
pop
sar
mov
push
fmulp
insb
sub
xor
pop
push
pop
sbb
mov
dec
cli
push
test
jnp
ficoms
dec
cmp
mov
pop
mov
sub
xchg
rolb
aaa
loopne
loop
cmp
aas
lret
jnp
call
jmp
and
dec
in
mov
or
add
ret
push
mov
cwtl
bound
inc
sarb
popl
cmp
push
jecxz
sarl
out
mov
movsb
xchg
cwtl
adc
xchg
or
and
push
ret
stc
pop
jle
jnp
test
pop
add
push
dec
mov
out
sbb
mov
hlt
mov
dec
sbb
stos
fucomip
shll
xlat
mov
sub
cmp
cmp
xchg
sub
mov
ja
cmp
cmp
bnd
cmp
xor
sub
aas
in
xchg
push
and
mov
fbstp
ja
pop
and
jns
xor
push
xchg
daa
fbld
lahf
outsl
sbb
dec
out
stos
cmp
mov
icebp
mov
mov
adc
jge
push
shlb
cmp
cmp
fucom
dec
dec
add
cli
in
sub
outsl
mov
pop
mov
imulb
rcrb
cwtl
mov
mov
fwait
pop
icebp
stos
add
leave
mov
aas
iret
mov
jno
into
lcall
xlat
test
fwait
ret
mov
dec
xchg
inc
test
inc
fnsetpm(287
out
or
sti
enter
xchg
loopne
sub
popa
iret
and
mov
mov
test
idiv
mov
aad
cltd
and
and
adc
mov
lea
mov
decl
push
pop
cmp
sbb
lahf
and
mov
orl
out
sub
stc
mov
add
test
adc
fwait
jns
out
mov
mov
icebp
pop
fstl
out
lea
push
sar
shrb
das
adc
enter
cmp
loop
sbb
xor
sbb
rcrl
insb
sbb
call
sbb
lds
mov
dec
les
dec
mov
outsl
cmpsl
dec
mov
sbbb
stos
cli
ds
int3
cmp
xchg
sbb
xchg
sbb
aam
mov
ja
add
sbb
jns
push
fbld
pop
rcrb
sub
xchg
outsb
xchg
mov
stos
sub
fsubrs
inc
call
sbb
sbb
push
roll
cmp
mov
sbb
sti
cmp
mov
cmovnp
adc
mov
stos
sbb
pop
and
inc
mov
inc
xchg
movsl
roll
pop
hlt
mov
mov
inc
fildll
dec
sub
or
cmp
sub
roll
inc
data16
jmp
rcrl
loopne
jnp
add
cltd
mov
scas
fnsave
fidivs
test
inc
xchg
lea
adc
sbb
scas
xor
js
shlb
add
sub
jmp
jns
scas
mov
mov
dec
xor
into
pop
add
jl
jle
add
ret
in
aas
scas
mov
sbb
cmp
mov
lcall
repz
sahf
dec
mov
xlat
add
cmp
aas
sbb
roll
inc
mov
movsl
dec
xlat
and
xchg
lock
scas
mov
shrb
cmp
rcl
fldt
test
mov
adc
in
adc
sub
andb
into
fdivrs
imul
push
repnz
sbb
push
or
xchg
sbb
and
jb
sbb
mov
lds
push
mov
or
or
mov
and
push
xchg
push
or
sbb
movsl
testb
mov
sti
imul
sbb
fdivs
mov
popa
xchg
mov
fcmovne
adc
mov
and
orb
jle
and
in
xor
mov
sti
call
push
hlt
push
inc
jns
xor
outsl
mov
xlat
mov
test
dec
sbb
mov
push
dec
mov
hlt
mov
div
push
mov
xchg
in
out
cmp
inc
idivb
movsb
call
call
jnp
icebp
movl
outsl
pop
sub
daa
test
xchg
jae
inc
faddp
stos
mov
push
rcrl
and
sub
leave
leave
movsl
dec
cld
rorb
data16
cmp
dec
mov
out
push
cwtl
sbb
sub
mov
mov
or
and
lods
sub
rorl
call
cmp
test
mov
andb
ja
adc
xlat
cmpsl
cmp
hlt
vpavgw
js
iret
lret
pop
scas
sub
xlat
outsb
mov
jp
loop
mov
mov
fs
sbb
jbe
aam
mov
sbb
pop
add
mov
divb
std
test
dec
pop
jns
iret
xchg
adc
repz
lret
mov
add
inc
mov
shl
xchg
aad
pop
or
loope
mov
mov
push
loope
jns
out
xor
lret
and
mov
push
mov
fmul
adc
mov
dec
inc
jns
fwait
rcrl
in
mov
daa
movsl
enter
testb
inc
mov
cmp
cmpb
enter
pop
adc
sbb
cmp
je
movsl
lahf
dec
mov
inc
orl
clts
shrb
out
cmova
and
lret
sub
hlt
jle
test
fbld
out
enter
or
xchg
ret
pop
roll
aam
mov
pop
rorl
mov
add
cmp
xchg
xlat
call
or
cmp
dec
in
inc
mov
mov
insl
mov
mov
enter
mov
cmp
dec
imul
enter
enter
ja
data16
add
sbb
mov
dec
sbb
cltd
xchg
sub
push
sbb
xchg
push
jl
cmp
shld
out
dec
xlat
out
fcmovnb
mov
and
outsl
iret
fstpt
lds
push
fcmovnu
std
cmp
out
fucomi
pop
sub
mov
notb
cmp
fbstp
sub
leave
xchg
push
fcomip
test
fists
addb
inc
mov
adc
push
mov
jns
push
xchg
sahf
cmpsb
pop
pusha
inc
movsl
mov
repnz
out
xor
xchg
cmp
xor
mov
test
xchg
sub
mov
inc
cmp
jbe
mov
cmpl
cmc
mov
ds
jecxz
xchg
mov
push
daa
or
dec
fisubs
nop
cld
cli
adc
js
cwtl
sub
push
push
sbb
mov
adc
push
cmp
or
cmp
sbb
xchg
jbe
leave
out
adc
inc
adc
push
inc
ss
mov
movsb
out
addr16
movsb
xchg
rcl
out
pop
sub
insb
les
jns
sub
lss
sbb
pop
imull
fisubrs
gs
enter
push
test
sbb
out
mov
mov
iret
sbb
sbb
jmp
jmp
fstpl
or
push
or
jmp
nop
xchg
xchg
pushf
add
sti
nop
pusha
lds
dec
add
clc
enter
xchg
xor
mov
inc
mov
test
cmp
lret
test
add
out
inc
iret
stos
cmp
jge
and
push
cld
sti
inc
flds
cmp
out
mov
xchg
inc
jns
cmp
stc
mov
int3
hlt
add
jnp
sub
pop
jle
cmp
mov
movsl
xor
mov
mov
popf
aad
sub
leave
into
add
push
dec
aad
add
dec
jns
inc
repz
imul
test
cmp
hlt
test
push
pop
repz
cmp
mov
mov
sub
cli
repz
hlt
dec
pusha
sahf
insb
stos
mov
mov
xchg
pop
jns
push
pop
xor
mov
mov
adc
xchg
fcoms
and
jae
mov
mull
addl
or
push
imul
stc
push
lea
iret
loope
js
lods
jne
pop
cmp
test
in
insb
xlat
js
cmp
add
test
adc
jb
aam
cmp
ss
sti
xchg
jmp
leave
mov
push
sub
adc
addr16
stc
sti
loope
pop
pop
orl
adc
adc
outsb
cmp
out
daa
arpl
sub
pop
shll
xor
dec
mov
sbb
stos
in
sti
xor
adc
addl
xchg
loope
xchg
sbb
sub
loope
cmp
xor
lods
pop
and
lcall
mov
mov
xchg
loopne
sub
outsl
pop
inc
adc
std
adc
add
daa
mov
add
sti
jle
xchg
xlat
jge
mov
pop
add
push
adc
add
sub
adc
dec
jle
stos
rcrb
fdiv
test
insb
add
xor
xchg
icebp
test
nop
inc
add
adc
icebp
shl
aad
add
add
sbb
dec
jb
iret
jecxz
cli
data16
insl
pop
inc
push
dec
add
sbb
and
scas
cli
das
outsl
adcl
add
arpl
outsl
adc
pushf
dec
testl
aam
or
jnp
or
ss
cmp
ret
int
cmp
xor
imulb
divb
jbe
adc
iret
incb
mov
rcll
fwait
mov
dec
jl
xchg
orb
cmp
cld
or
stos
mov
xor
or
lahf
add
add
enter
ja
inc
or
cmpsl
aas
xchg
je
out
outsb
dec
jmp
dec
cs
incb
adc
lods
sarb
js
or
mov
fmuls
insb
push
daa
in
inc
fcom
in
jle
push
sbb
mov
stos
jmp
pop
lret
inc
sahf
push
and
mov
sbb
iret
test
aas
repz
mov
jae
push
jbe
sbb
adc
icebp
lret
mov
adc
enter
xchg
scas
dec
xor
daa
clc
xchg
or
movsb
sbb
ds
lret
cmp
mov
out
data16
xlat
arpl
cmp
out
das
rcl
dec
xlat
adc
pop
inc
ret
insl
mov
add
pusha
sbb
pusha
das
mov
and
aam
jmp
ljmp
test
pop
rcll
pop
adc
fisubrl
iret
addr16
pop
shl
sbb
pop
dec
push
adc
mov
xchg
sbb
nop
aaa
imul
push
adc
imul
adc
dec
dec
enter
jae
movsl
adc
lret
std
cmp
push
push
test
sbbl
push
jbe
push
mov
ss
jp
testb
xor
shll
mov
jnp
shrl
imul
sub
in
call
push
movsb
mov
fdivr
and
enter
sub
jl
bound
and
inc
push
mov
cmpsb
sub
call
jl
loopne
sub
stc
jl
push
enter
sbb
sub
sbb
mov
stos
in
jl
loope
popf
sbb
dec
outsb
sub
adc
adc
nop
push
jl
dec
das
icebp
xor
test
xor
adc
sub
fcoms
mov
cmp
or
xor
jno
xor
xchg
call
cmp
hlt
fdivr
ljmp
outsl
xor
icebp
mov
cmp
sar
iret
mov
test
inc
xor
adc
mulb
lcall
add
cltd
adc
imul
push
sbb
dec
push
imul
cmp
adc
rclb
cmp
jecxz
mov
xor
into
rolb
xor
add
lcall
xor
xchg
ss
sbb
mov
mov
cs
xor
jp
jge
inc
cwtl
cmp
pop
mov
jp
pop
fdivrs
cmpsb
xor
call
out
cs
push
xchg
int
popf
sbb
pop
ljmp
mov
pusha
test
xor
dec
ret
scas
jl
cld
push
xlat
sti
js
push
lock
pop
mov
cmp
xor
cmp
dec
test
xor
lds
mov
pushf
fidivrs
cmp
push
mov
add
outsb
mov
dec
dec
aaa
sbb
mov
andl
xchg
int3
cmp
inc
sbb
inc
sahf
hlt
adc
shll
dec
mov
cmp
xchg
and
and
push
adc
jecxz
mov
inc
sti
inc
loop
adc
mov
dec
dec
loop
mov
hlt
xchg
adc
pop
mov
mov
inc
lret
cltd
add
mov
mov
adc
arpl
or
sbb
jmp
cmpsl
mov
addl
mov
addr16
test
inc
nop
test
xor
push
aaa
push
int
faddl
push
test
mov
pop
inc
or
lcall
cmp
inc
ror
dec
ljmp
push
pop
push
inc
cmp
pop
repz
repz
into
repz
push
rcl
inc
jmp
sti
roll
xchg
mov
pop
xor
stos
jge
inc
xchg
leave
inc
jecxz
sbb
push
cmp
push
inc
cmp
movsl
mov
insb
sti
dec
sub
enter
rol
adc
push
js
leave
jo
jns
sarl
sub
dec
cmovnp
sbb
dec
sti
mov
inc
mov
mov
rcl
cli
fidivrl
lcall
lret
ja
mov
or
inc
dec
shrl
sub
jmp
cltd
popa
xchg
dec
push
jbe
call
jnp
sub
push
dec
hlt
mov
rcrb
add
stos
dec
imul
ds
lahf
cmpsb
sub
inc
mov
jmp
or
dec
or
aad
dec
pop
cmp
shll
mov
dec
inc
movsb
sti
push
xchg
ja
adcl
mov
inc
xor
mov
xchg
lods
repnz
push
mov
add
adc
rcrb
dec
ja
aad
repnz
mov
xchg
dec
cmp
fidivs
lods
rep
mov
xchg
fsubrl
push
jl
add
inc
dec
mov
in
cmp
pop
add
and
sbb
clc
test
push
push
enter
cmpsl
iret
jbe
rcrb
out
sbb
mov
sbb
sub
xchg
inc
mov
jns
jne
pop
insl
fcomp
pop
pop
or
mov
inc
addl
inc
sbb
push
test
cltd
fs
xor
stc
out
and
fdiv
orb
push
aas
iret
and
int
cld
incl
popf
testl
dec
in
lahf
fstl
std
aam
ficomps
sbb
bsr
sbb
pop
lret
pop
insl
xchg
add
in
adc
adc
push
inc
mov
dec
insb
xchg
pop
push
outsl
push
sbb
repz
cmp
adc
jmp
mov
sub
lcall
jp
mov
jg
lret
lret
sub
inc
dec
ljmp
push
push
cmp
pop
clc
pop
jle
mov
inc
or
adc
dec
inc
sbb
add
pop
lret
inc
jns
rol
pop
sub
push
push
pop
sbb
push
jae
xor
jbe
push
dec
lret
sub
jl
ss
dec
inc
imul
cmp
xor
sti
sub
cmp
lret
push
out
or
dec
push
xchg
pop
cmp
and
mov
sub
inc
scas
adc
inc
xor
xchg
mov
inc
xor
outsb
std
cmc
xor
adc
mov
push
adc
push
or
ljmp
add
ret
and
mov
dec
jg
push
sbb
sub
popa
fisubs
repz
add
and
in
sti
out
sub
xor
testl
jecxz
lea
and
fisubrs
jl
loop
mov
filds
or
cs
or
xor
fimuls
mov
add
mov
jbe
mov
mov
int
sbb
lods
std
mov
out
iret
pop
push
loop
data16
aas
cs
push
jle
pop
fwait
ret
mov
xlat
dec
lea
dec
insl
mov
xor
sti
cmp
jmp
jnp
inc
xor
fidivrs
jge
xchg
mov
or
mov
inc
mov
out
and
sub
cmp
cmp
xlat
insl
ss
inc
ja
xor
andb
add
push
push
lahf
mov
adc
and
ret
in
jne
dec
or
push
inc
push
mov
in
test
mov
push
xorl
lahf
add
jp
sub
push
mov
aam
and
sarb
ja
sub
push
jb
popw
bswap
push
ret
loop
out
dec
popfw
jle
jbe
fistl
inc
push
cmp
sbb
cmpsl
mov
in
dec
lahf
mov
dec
fistpl
push
mov
mov
mov
xchg
push
push
dec
inc
cli
addr16
jmp
push
mov
data16
or
dec
jo
or
inc
and
outsl
sub
lock
rcl
imull
pop
lcall
aaa
repz
and
mov
dec
jp
dec
sbb
push
rcrb
sub
sbb
mov
pop
notb
push
aas
xor
pop
pop
xchg
cmp
adc
xchg
sbb
xor
cs
inc
arpl
in
fidivl
mov
aad
sbb
daa
adc
pop
add
sub
push
cmp
push
pop
aaa
subb
sti
sbb
push
xor
push
lret
or
cmp
xlat
mov
lods
and
jmp
xor
iret
cmc
outsl
cwtl
push
movsb
fdivrs
clc
sub
xchg
push
and
scas
inc
cli
sub
pop
inc
outsl
fidivl
mov
cmc
ja
scas
outsl
aas
jl
xchg
rorl
inc
lea
dec
inc
sbbb
jmp
loop
jnp
mov
in
fimull
xchg
sbb
je
ljmp
lret
adc
sub
sysret
mov
cmp
add
sub
outsb
fldt
outsl
cmp
sub
mov
stos
test
xchg
fwait
jl
out
pop
iret
inc
sbb
mov
cmp
enter
push
inc
adc
ss
icebp
sti
int
outsl
imul
into
mov
push
mov
pop
subb
inc
mov
or
and
addr16
loope
cs
adc
jb
inc
dec
hlt
shrl
jmp
pop
dec
lods
push
aad
adc
fsubrl
fiadds
cmp
sbb
jl
push
xor
dec
or
sbb
in
add
sub
cmc
jae
or
movsl
fsub
scas
fwait
lock
rorl
out
insl
pop
nop
test
mov
xchg
xlat
mov
cmp
mov
xor
int3
and
pushw
in
dec
xlat
pop
testl
inc
cmc
fnstenv
jo
push
mov
int
mov
cmp
push
hlt
mov
push
stos
add
into
enter
clc
sti
mov
mov
push
js
sbb
sub
push
adc
fistps
mov
and
sub
jp
dec
stc
pop
sub
sub
jb
jle
dec
mov
cmp
push
lds
xor
cmp
mov
mov
lcall
out
xchg
cmp
push
dec
sbb
cmp
dec
scas
xor
aas
sbb
adc
lret
sbb
sbb
adc
xlat
out
dec
add
ljmp
push
stos
push
jl
add
adc
ss
push
rorl
sti
loop
and
add
fistpl
dec
adc
sub
cli
xor
ss
mov
sbb
nop
push
or
xor
sti
adc
cmp
mov
pop
pop
inc
inc
fmull
xor
stos
ret
push
movsb
mov
pop
inc
mov
cld
or
ret
xor
loope
push
fcmovnu
ss
aad
idivl
fwait
les
mov
xchg
sub
cmpsl
xchg
lret
mov
cmp
jns
inc
sbb
xor
adcb
shlb
or
jp
sub
fidivl
push
pop
fisttpl
xor
movsb
push
mov
jo
xchg
test
js
sub
imul
bound
cs
cmp
sub
xor
or
pminub
cmp
and
pop
add
cmp
and
cs
aaa
js
add
lods
or
or
cmp
or
mov
pop
mov
leave
or
mov
sti
jl
out
andb
dec
stos
pop
mov
jnp
mov
mov
inc
cld
cmp
xchg
sbb
pop
dec
std
cmc
dec
je
mov
sbb
inc
cmp
lret
sub
jne
stos
pop
dec
in
pop
push
xor
push
cmp
mov
push
repz
cmp
cmp
aam
xor
or
cmp
cmp
sub
loope
insl
mov
sti
or
push
lods
push
mov
sti
idivb
insb
orl
scas
xchg
fistl
je
sbb
mov
dec
outsb
es
mov
sbb
dec
jmp
xchg
mov
add
test
dec
push
push
sub
in
xor
xchg
out
pusha
cmp
int
adc
and
lret
lahf
dec
jns
cmp
sbb
dec
mov
movsb
fildl
sub
adc
das
adc
repz
jnp
rep
adc
dec
ja
dec
data16
push
mov
cs
push
jb
cs
lds
cmp
and
push
mov
cmp
inc
cmp
mov
push
aam
cmp
cmpsb
in
icebp
pusha
xchg
int
mov
pop
cmp
mov
adc
sbb
and
dec
aam
test
out
push
push
ret
js
push
add
xor
push
or
mov
push
xor
out
mov
inc
test
clc
mov
mov
mov
cs
cmp
inc
cmp
dec
inc
sbb
inc
push
inc
outsl
mov
out
pop
jns
lahf
loope
dec
xchg
mov
imul
ret
punpcklbw
add
xchg
or
mov
movsb
sub
cwtl
adc
xlat
fwait
fs
adc
jns
mov
pop
loop
cmp
pop
mov
pop
sub
push
xor
add
test
and
and
jns
dec
stos
adc
cmp
out
mov
xor
dec
xchg
fsubr
jp
mov
dec
sti
fwait
pop
jp
lods
aam
pop
push
xchg
loop
in
ljmp
xor
mov
mov
mov
push
aad
xor
push
or
in
pop
sub
lods
adc
inc
mov
inc
jae
mov
adc
jmp
cmp
and
inc
dec
lret
pusha
inc
inc
sub
jbe
or
push
cmp
push
repz
push
fnsave
fsub
xor
push
icebp
ficompl
sti
shlb
add
jbe
jecxz
mov
fiadds
test
push
mov
pop
xor
dec
mov
clc
data16
and
sub
mov
dec
xor
bound
sub
push
aaa
pop
aad
mov
xbegin
aad
nop
xchg
pop
ss
fcmovnu
mov
bound
gs
mov
inc
lds
outsl
or
jae
fiaddl
fimuls
imul
sti
add
adc
es
push
adc
adc
rclb
sbb
jnp
and
and
lea
push
sbb
adcb
mov
xor
push
jae
jb
or
push
dec
push
xlat
ss
dec
lret
sub
inc
repnz
pop
xchg
add
cmp
adc
dec
clc
fisubrs
mov
sub
sub
inc
inc
xchg
xor
jecxz
sbb
enter
cmovge
pop
out
das
adc
clc
cmp
pop
sub
adc
adc
sbb
mov
movsb
nop
aas
stos
xor
xor
mov
adc
jns
inc
sbb
dec
jmp
xchg
out
cmp
nop
jne
or
cmp
pop
lret
sub
mov
cwtl
dec
cmp
mov
xor
pusha
xor
inc
mov
adc
cmp
pop
test
mov
xlat
rorl
nop
ja
clc
scas
xchg
int3
fwait
push
pop
outsb
insl
sub
cli
std
xchg
dec
sbb
push
je
xlat
push
sbb
fimull
xchg
xor
mov
sar
sub
mov
cmp
xchg
sti
push
cmp
js
cltd
sub
pop
sar
jmp
dec
lret
dec
inc
aas
mov
sbb
xor
pusha
sub
cmp
adc
nop
fcmovne
inc
cmp
scas
dec
pop
push
mov
push
sbb
das
push
data16
std
jg
clc
pop
das
arpl
dec
xlat
es
mov
inc
in
sub
clc
inc
or
xchg
adc
sbb
leave
or
push
mov
dec
jg
pop
push
cwtl
outsl
mov
jp
push
pop
dec
push
lds
or
je
bound
pop
sbb
idivb
lods
sub
sbb
pop
cmp
lds
or
sahf
adc
dec
mov
fimuls
leave
jns
fnstsw
lcall
pop
loop
ret
dec
mov
testb
sbb
fwait
lret
dec
mov
loope
and
push
jmp
js
add
push
cmp
adc
mov
imul
adc
mov
sub
stos
push
ds
jns
sbb
sub
sub
hlt
aam
repz
jecxz
fistpll
cltd
dec
sbb
dec
lcall
mov
fidivrs
xor
xchg
stos
mov
stos
mov
mov
mov
or
test
inc
cmc
mov
sbb
cmp
inc
cmpsl
xchg
jmp
and
push
xor
fwait
add
push
pop
mov
ljmp
lcall
dec
mov
jecxz
rorl
inc
jmp
mov
scas
mov
cmp
ja
scas
rcrl
dec
xor
mov
or
sbb
cld
aad
std
adc
pop
cltd
fldt
std
mov
insb
scas
push
dec
jmp
dec
mov
aad
mov
or
sub
mov
popa
ficoml
mov
and
pop
dec
mov
insb
fldl
push
loop
push
fistl
dec
push
xor
test
bound
inc
hlt
xor
and
cmp
loop
or
cmp
jnp
enter
lods
daa
aas
adc
xor
push
jno
inc
pop
imul
push
cmc
mov
stos
fwait
loop
mov
fdivrl
inc
mov
cs
jp
daa
scas
dec
mov
decb
dec
inc
mov
lret
push
pop
subl
sbb
lret
imul
jg
cltd
push
sub
imul
xor
sarb
mov
or
lcall
sbb
ret
cs
cmp
in
mov
sub
mov
incl
xor
lcall
dec
clc
sbb
adc
pop
jns
es
inc
cmpl
es
and
sbb
loop
mov
out
cli
mov
dec
call
mov
dec
popf
cmpsb
mov
bound
flds
aas
lret
xchg
inc
daa
cmp
dec
dec
movsb
sbb
or
and
sbb
xchg
or
cltd
loop
sbb
clc
out
or
sub
imulb
fwait
iret
fidivrl
pop
pop
jns
pop
sbb
pusha
and
jle
dec
push
fmul
mov
shrb
pop
cmp
push
mov
jge
inc
xlat
pop
add
sbb
xlat
add
inc
add
out
pop
cmp
fwait
dec
lcall
sbb
dec
arpl
sub
ret
xlat
mov
and
sbb
cltd
pop
cmp
stc
push
adc
insb
dec
rorb
je
fimuls
hlt
add
mov
sahf
sbb
mov
das
fsubl
lods
mov
lea
pop
push
jne
outsl
outsb
fisubrl
dec
gs
hlt
sbb
dec
inc
sub
jns
xchg
cmpsl
or
sub
sti
stc
and
push
cmp
pop
mov
pop
adc
pop
dec
orl
lret
push
inc
fisttpl
sbb
adc
dec
es
sub
sub
inc
sub
xchg
jno
iret
maxps
inc
sahf
fisttpl
push
mov
ds
sub
cli
pop
dec
jmp
test
imul
push
pop
mov
xchg
sarl
movsb
mov
sbb
push
sbb
add
mov
stos
push
cmp
ret
ret
sahf
ret
mov
dec
push
pop
or
shrb
dec
pop
arpl
lods
sub
mov
cmp
addl
xlat
imul
les
lcall
call
mov
fistpll
xchg
jno
enter
mov
icebp
jecxz
fisubs
mov
push
fsubrl
sub
mov
call
call
cld
addr16
fdivrs
pop
xchg
ljmp
cmp
mov
sahf
jae
cmp
inc
and
daa
pop
or
sbb
cmp
add
add
xor
sbb
enter
lcall
adc
mov
int3
aam
loope
pop
pusha
and
mov
popa
gs
sub
ja
jge
dec
call
or
xchg
cs
lret
mov
mov
sub
pop
sub
leave
filds
data16
cmp
out
cmp
pop
lret
pop
out
inc
sbb
in
xchg
lcall
adc
adc
popa
and
sbb
dec
xchg
jnp
add
push
inc
sub
div
adc
push
inc
pop
push
mov
xor
jecxz
push
xchg
inc
xchg
push
sti
imul
xchg
sbbl
sub
in
or
lret
pop
cld
sub
sub
xor
sbb
sub
pop
fidivl
adc
adc
dec
push
pusha
stc
jo
jle
or
mov
popa
cmpsw
inc
in
inc
ss
mov
sub
xchg
rorl
aas
sti
push
sub
jbe
outsl
dec
jp
mov
fistps
xor
pop
or
lods
sti
ror
scas
and
xchg
sbb
cmp
fnstenv
push
dec
js
xchg
leave
or
adc
in
jecxz
and
popa
in
add
sbb
mov
inc
jb
pop
insl
mov
idivl
mov
dec
sti
push
pusha
xchg
incb
or
mov
daa
dec
in
adc
xchg
in
xor
add
jp
mov
xchg
adc
stos
ret
stos
pop
sub
push
aad
lods
and
mov
sbb
sub
dec
out
sbb
cmpl
stc
cs
sar
mov
mov
dec
mov
lret
lods
sahf
mov
push
cmp
icebp
movsl
cmp
push
sti
dec
inc
jns
iret
xor
adc
je
cmp
outsl
inc
mov
dec
rcr
cmp
add
jns
jle
insb
cmp
cmpsl
leave
dec
cmp
dec
scas
jg
dec
push
xchg
xor
aaa
aad
xchg
push
push
cmp
push
xlat
add
adcl
into
dec
pop
inc
and
mov
add
cmp
outsl
lret
loopne
or
xor
xor
js
push
sbb
push
cmp
add
mov
lahf
and
daa
cmp
mov
push
mov
aas
pop
fbstp
out
std
out
cmp
cmp
in
xchg
fldt
pop
mov
dec
mov
movaps
add
cmp
adc
push
jl
test
dec
insb
xor
cmp
shll
mov
lods
fildl
xlat
mull
and
mov
xor
mov
xchg
push
mov
cwtl
and
cmc
mov
cmp
xchg
xor
cmpsl
lret
cmp
or
inc
imul
ret
jge
inc
stos
in
sti
pop
xor
pop
mov
in
fimull
add
mov
mov
or
lods
fidivrl
idivb
jecxz
mov
aaa
push
ja
subl
movsb
mov
lods
hlt
jge
fistpll
out
adc
movl
mov
cmp
sti
adc
pop
sub
adc
cltd
inc
push
sarb
enter
push
mov
push
inc
cmp
aas
aaa
sub
in
add
ror
dec
ret
mov
and
and
add
adc
stc
inc
xchg
hlt
or
fcmovne
xorl
mov
pop
lret
inc
mov
adc
jmp
or
cmp
ja
lret
lcall
or
loop
cmp
sbb
xor
popl
outsb
sub
xchg
outsl
mov
xchg
or
cmp
xor
pop
xchg
inc
sbb
lcall
mov
sub
dec
pop
cmp
mov
xchg
ljmp
stc
sub
add
sub
dec
dec
add
lret
popa
idiv
or
test
jl
pop
adc
ret
mov
and
xchg
sub
rolb
pop
lret
lods
xlat
cmp
lret
inc
inc
xchg
dec
xchg
lods
jnp
sub
sub
or
dec
mov
shl
cs
cmp
or
leave
push
rol
ret
mov
xor
fnstcw
cmp
sub
scas
es
jmp
mov
push
xchg
inc
fcmovne
add
mov
xor
or
xchg
ret
xor
cwtl
stc
out
adc
les
dec
dec
cmp
xchg
sub
dec
jl
rcr
sub
mov
repnz
sbb
imul
sbb
cli
or
popf
mov
jmp
jp
or
mov
ds
dec
lods
jae
dec
cltd
repz
adc
out
adc
pop
or
mov
xchg
and
pop
sub
das
adc
sub
sub
pop
jl
mov
andb
and
xor
xor
cwtl
cmc
mov
xchg
adc
cmp
movsl
adc
sub
icebp
lock
or
sub
repz
sub
push
cmp
hlt
mov
lahf
pop
mov
outsl
scas
cmp
cltd
dec
sbb
cmp
testb
cld
cmp
repz
pop
and
sub
add
dec
or
inc
xor
mov
jno
pop
adc
test
add
data16
stos
mov
scas
push
push
arpl
cmp
jecxz
fildll
loop
out
fimuls
cmp
sub
mov
lds
push
mov
adc
or
push
cmpsl
jo
or
clc
test
decb
or
push
fmuls
mov
sbb
and
rcrl
pop
and
ret
out
stc
or
test
ss
lcall
adc
xor
add
es
pop
arpl
test
push
ljmp
cltd
inc
call
xchg
clc
sbb
adc
or
testb
subb
inc
push
cmp
inc
xchg
inc
xor
pop
mov
lcall
int3
inc
call
lcall
pop
xor
and
xor
cmp
and
mov
jb
sub
adc
xchg
and
adc
lods
dec
mov
stc
ss
push
push
pop
fdivp
pop
mov
mov
jle
add
adc
jns
inc
dec
std
jb
cwtl
pop
nop
jnp
sti
and
mov
das
lahf
inc
sub
cwtl
inc
pusha
mov
jo
push
sub
inc
sub
jl
adc
inc
cmp
dec
mov
test
hlt
leave
xor
push
cmp
push
cmp
lods
inc
call
sbb
inc
push
mov
adc
sbb
iret
pop
cmp
push
sub
pop
and
in
test
or
rcrl
out
jle
cmp
adc
je
push
adc
xor
pop
mov
jle
das
mov
push
cmp
out
test
ljmp
adc
movb
jne
pop
push
cmp
bound
or
push
lret
push
mov
mov
lar
pop
iret
xor
aaa
adc
cmp
sub
sbb
jecxz
dec
loopne
sub
mov
push
dec
lret
sbb
cmp
insb
dec
loop
inc
les
je
inc
xlat
xor
cs
jnp
push
sarb
inc
adc
cltd
add
idivl
jmp
cmp
push
dec
lcall
dec
dec
shl
leave
ficompl
sub
aad
sbb
lods
outsb
sub
lret
sub
jae
lret
sahf
jbe
jg
mov
xorl
jbe
inc
out
mov
les
repz
fs
or
xchg
adc
xchg
out
lods
pop
cld
hlt
cli
xor
or
cltd
stos
aam
dec
data16
dec
in
or
addr16
mov
insl
ret
push
out
into
inc
push
fisubl
xor
xchg
mov
pop
sub
test
mov
sub
rcrl
and
repnz
ss
iret
mov
pop
add
shll
dec
out
mov
rol
add
shrl
sub
adc
sbb
mov
or
dec
out
dec
lods
mov
pop
int
sbb
cli
sub
andl
mov
es
out
adc
dec
fildl
loop
orb
test
and
push
and
dec
adc
loop
jmp
hlt
cmp
dec
xor
mov
lcall
mov
inc
mov
cmp
pop
mov
pop
imul
fdivrs
mov
pop
addr16
adc
jne
cld
sbb
dec
inc
aam
ss
xchg
cmp
enter
inc
jge
adc
ss
sbb
xchg
icebp
fucom
pusha
js
popa
push
adc
and
in
inc
jl
jl
or
adc
adc
mov
fcmovbe
addr16
dec
mov
sbb
inc
sbb
push
nop
cmp
cmp
xlat
addr16
dec
cwtl
cltd
shll
dec
or
adc
mov
adc
dec
pop
jmp
out
js
add
dec
xchg
sub
pop
cmp
ss
aam
fsubr
cltd
mov
and
xchg
or
fsubrs
pop
mov
sbb
lods
mov
jns
xchg
cltd
or
pop
push
mov
and
cltd
out
lahf
dec
std
inc
rorl
addl
adc
or
adc
das
add
stos
repz
adc
lods
icebp
inc
pop
stos
push
inc
sti
hlt
test
mov
lds
dec
ljmp
mov
xor
aam
out
mov
xor
out
aas
jle
inc
flds
negl
fnsave
push
sub
mov
adc
mov
mov
xchg
xor
fucom
jno
push
out
das
int
sub
divb
sbb
mov
movsb
push
outsl
dec
xchg
xlat
outsl
push
sbb
dec
dec
jnp
fisubl
mov
cmp
cld
and
mov
jle
inc
mov
sub
ljmp
ss
fdivs
mov
cmp
es
adc
sbb
or
sbb
push
cli
mov
push
sbb
ret
sbb
out
imul
aad
in
pop
movsl
testl
cmp
add
xchg
push
imul
popa
xor
and
pop
sub
mov
cmp
lret
and
pop
mov
popa
sbb
outsl
and
pusha
dec
mov
scas
and
sbb
inc
pop
and
aad
clc
testb
push
pop
and
idivl
stos
mov
stc
shll
mov
push
sbb
add
cmp
and
xor
and
das
cmp
fisttpll
mov
mov
gs
iret
jecxz
xor
test
and
adc
inc
mov
add
lods
add
outsb
mov
shll
pop
loopne
sub
rcll
or
push
lds
xchg
cmp
cmp
xchg
stos
mov
fwait
jo
rcr
pop
inc
scas
inc
pop
dec
mov
fs
dec
push
push
js
pushf
add
loop
cmp
out
sbb
xor
stc
std
pop
xchg
and
fisubs
sbb
leave
xchg
mov
sbb
sti
push
xchg
repz
add
ret
mov
sbb
inc
imul
test
dec
mov
push
pop
dec
outsl
sbb
sub
xor
jp
sbb
outsl
pop
adc
ja
push
adc
sbb
adc
sahf
mov
push
pop
dec
arpl
out
fimull
adc
in
lds
fldt
pop
jge
sti
stc
sbb
pop
dec
mov
or
imul
fildl
or
sub
arpl
lret
sti
pop
mov
cmp
outsl
cmp
imulb
xchg
dec
sub
lret
ss
loopne
jg
enter
bound
rorl
sub
or
sbb
inc
push
inc
and
adc
push
inc
sbb
sub
in
ss
mov
push
icebp
sbb
das
push
xor
fsts
push
pusha
incl
and
rcrl
sbb
mov
hlt
es
loopne
add
pop
dec
pop
and
jnp
sbb
pop
mov
fstpt
dec
insl
fstp
inc
sub
in
dec
repnz
addl
scas
inc
in
mov
xchg
insb
rcrl
int
pop
js
pusha
mov
ss
or
popf
loope
sub
insb
mov
ja
dec
std
xchg
mov
fs
mov
dec
pop
lahf
inc
cmpsl
shll
jg
sbb
sbb
gs
imul
popa
and
jp,pt
adc
mov
dec
pop
push
sbb
lcall
je
mov
sbb
out
jl
insl
push
cld
jmp
out
mov
les
cwtl
lock
add
mov
mov
rcrl
xor
sub
out
mov
mov
dec
jns
je
out
cmc
sub
aad
pop
cmp
cmp
cmp
cmpsb
and
lret
dec
clc
jmp
add
sub
mov
sar
pop
xor
jns
popa
scas
push
sub
scas
mov
ficoml
and
shrl
xor
loopne
adc
je
pop
xchg
mov
jno
jmp
pop
push
mov
inc
ss
xchg
sti
ljmp
scas
mov
lahf
add
pop
mov
mov
sti
pop
adc
add
insl
adc
or
faddp
jg
mov
cmp
shl
jne
enter
addr16
es
arpl
inc
lods
lret
ss
fisttps
xor
or
pop
fiadds
out
push
call
mov
bswap
movsb
mov
sub
in
sbb
dec
es
xlat
mov
adc
notb
and
out
imul
lods
and
pop
jecxz
inc
insb
dec
xor
cmp
shll
xchg
jno
pop
test
nop
aas
push
or
dec
jecxz
jmp
xchg
xchg
lods
push
push
loopne
es
pop
or
aaa
pop
test
jecxz
push
mov
aam
or
xlat
loop
js
dec
dec
mov
decl
jg
loope
push
lret
ss
adc
imul
or
xchg
mov
jo
mov
xchg
add
push
clc
mov
mov
ja
cmp
shrb
jmp
mov
popa
mov
jg
or
mov
arpl
add
inc
lret
lock
mov
daa
out
jnp
dec
lret
lods
pop
div
fmulp
cmpsl
adc
pop
push
js
sub
jl
test
test
adc
mov
sub
adc
pop
or
cmp
mov
dec
movsl
mov
fldt
test
xorb
cmp
in
and
adc
lret
or
mov
movsl
ret
xchg
aaa
mov
sbb
inc
push
xor
adc
cmp
int
fldt
pop
push
cmc
ss
jns
bound
fimuls
xchg
mov
sbb
das
dec
hlt
sub
cmp
popf
cli
fcmovb
push
sbb
movsl
pop
jno
out
cmpsl
int3
lcall
mov
mov
fistpl
loop
decl
cmp
aam
das
test
add
lahf
cmp
leave
push
sbb
mov
dec
addb
jnp
add
xchg
cmp
pop
adc
sarb
mov
and
scas
fwait
cmp
xor
lcall
pop
and
repz
divb
inc
dec
add
arpl
rcll
mov
jnp
and
push
sbb
imul
stos
xlat
cs
neg
lods
jnp
sub
inc
popa
loop
pop
jnp
jle
push
xor
dec
jne
dec
xchg
fistl
inc
push
stos
xor
jno
push
dec
jae
jb
idivl
and
ljmp
cmp
test
mov
pop
pop
jns
inc
scas
xchg
lcall
xor
pop
incb
cmc
out
sti
fs
xchg
xor
daa
out
sub
mov
iret
mov
lret
inc
cmpsl
iret
or
jb
push
sbb
sub
dec
mov
add
or
xor
mov
mov
divl
jae
sbb
dec
je
jle
mov
jmp
mov
outsl
insl
or
fiaddl
testl
or
sbb
jmp
or
fs
out
jecxz
adc
nop
dec
es
sub
bound
xor
push
sub
push
loope
je
aaa
xor
loopne
xor
mov
push
dec
hlt
pop
adc
pop
lahf
rorb
sti
sub
aad
imul
loop
push
sahf
inc
dec
movsb
out
mov
fs
dec
sbb
mov
movsl
push
dec
dec
mov
sbb
and
lret
mov
mov
or
out
sub
sbb
cmp
mov
imul
out
dec
dec
push
fisttpll
imul
clc
mov
push
icebp
inc
mov
add
outsl
sbb
aas
adc
inc
push
jnp
and
xor
into
negb
pop
add
push
cmp
dec
loope
and
and
push
test
inc
push
xlat
jnp
pop
repz
adc
shlb
lret
jmp
and
adc
bound
sbb
xor
pusha
jecxz
adc
testl
pop
sbb
dec
test
fwait
push
and
test
add
sbb
mov
jbe
pop
jmp
sti
flds
jae
cmpsb
dec
lahf
aad
negl
pop
adc
add
fmuls
or
cmp
jmp
mov
pop
int3
dec
jp
aam
std
pop
cmp
sub
add
rorl
xchg
cwtl
mov
test
outsl
sub
sbb
or
ficompl
jmp
shrl
jne
sub
jnp
adc
sbb
xchg
pop
icebp
and
out
insl
das
aas
pop
mov
ret
push
inc
mov
inc
adc
cmpsl
jl
jmp
sbb
dec
inc
lods
sub
sbb
xlat
xchg
cmc
cmp
cmp
dec
andl
ljmp
dec
mov
aas
lods
mov
aaa
notb
outsl
repnz
mov
xchg
push
sti
mov
data16
sti
movsl
shll
aad
jno
xor
cmp
push
add
cmp
jmp
cltd
jno
lret
incb
push
or
lahf
test
inc
movsb
stc
adc
notb
cmpsb
sbb
xor
xlat
mov
jg
cmp
fsubl
sbbl
jmp
lcall
das
or
test
push
sbb
shlb
xor
inc
pop
xchg
xchg
out
adc
jne
repnz
mov
xlat
ss
js
sbb
dec
mov
dec
dec
fistl
js
ficoms
subl
xchg
cwtl
push
aaa
dec
icebp
enter
js,pt
dec
mov
pop
push
or
cmp
sahf
bound
mov
cmp
cwtl
push
ljmp
fwait
sbb
ret
mov
scas
dec
fstpt
shrb
jmp
lret
or
cmpl
sbb
mov
cmp
cwtl
arpl
xchg
fs
mov
inc
lcall
dec
mov
test
lods
das
xor
push
jb
dec
lcall
fsubl
repz
adc
sub
ds
jnp
push
hlt
xor
imul
sbb
fs
clc
mov
sub
roll
lahf
pop
xchg
mov
mov
sbb
sub
scas
pop
stos
pop
lret
nop
mov
sub
fwait
sbb
add
mov
jecxz
jnp
or
imul
movsl
std
sbb
jns
xor
mov
pop
pop
xchg
iret
push
ja
dec
push
cmp
push
xlat
sub
jns
xlat
sbb
movsl
cmp
dec
rcll
mov
sub
test
nop
sub
dec
sbb
stos
fbstp
cld
das
push
out
mov
fisubrs
std
icebp
xchg
ljmp
lock
dec
ja
xor
mov
push
lret
push
inc
inc
sarb
push
sarb
mov
add
xor
sbb
rcrl
dec
xchg
cwtl
ret
or
aas
push
iret
ljmp
dec
and
jg
es
lea
jnp
dec
inc
jno
idivl
sub
xor
inc
sub
or
jo
sbb
mov
dec
outsl
stc
fisttpll
sbb
movsb
xchg
fnstsw
mov
push
das
or
js
lcall
cmp
push
lret
dec
ljmp
jp
js
ss
cmp
lods
aaa
and
xchg
bound
xor
movsl
sub
test
jns
and
sti
fwait
pusha
das
sub
mov
ret
and
jnp
insl
je
test
dec
pop
mov
jp
dec
push
jo
cmpsb
imul
scas
push
pop
pop
add
das
dec
mov
ljmp
mov
push
dec
or
push
das
jbe
xor
fcomip
push
or
push
imul
jecxz
add
jns
out
and
or
push
jnp
mov
sbb
xchg
popl
mov
lret
adc
pop
lahf
and
mov
inc
lds
mov
inc
lcall
mov
inc
xchg
jnp
fisttps
and
lock
cmp
mov
sbb
xlat
and
sbb
lret
lods
stc
push
cmp
cltd
and
xor
fldt
cmp
adc
dec
mov
xor
mov
iret
add
inc
sahf
nop
aam
push
pop
pop
add
inc
adc
adc
fdivrl
and
dec
jl
sbb
xchg
dec
mov
ss
adc
add
or
push
mov
clc
outsl
sarl
push
inc
inc
test
pop
pop
idivb
adc
lods
sbb
lret
jp
xor
sbb
popa
and
xchg
mov
mov
fwait
and
pop
aam
dec
cld
dec
es
jno
inc
mov
xor
pop
in
pop
push
jo
pop
lcall
loope
int3
out
loop
lahf
mov
mov
movsl
mov
sbb
cmp
sub
sub
shrb
lcall
pop
aam
or
and
leave
jmp
dec
jmp
sub
cmp
push
inc
scas
cmp
aam
push
out
sbb
sbb
add
xor
ds
mov
cmp
iret
sbb
jl
push
xor
lret
aam
or
dec
inc
dec
cmp
scas
xchg
inc
cmp
or
xor
sub
movsb
add
addl
push
out
loop
stos
lods
xor
and
adc
ret
aad
imul
xlat
insl
inc
pop
popa
and
pushl
dec
pop
xchg
sbb
clts
scas
cmp
test
inc
fisubl
fisubrs
mov
mov
cli
rcll
mov
fwait
pop
sti
mov
lods
or
mov
push
pop
rcrb
into
ljmp
aaa
sbb
pop
pop
mov
scas
push
fwait
cmp
push
mov
push
jnp
repz
inc
in
cmp
in
sub
xlat
div
and
pop
fstpt
ret
ret
jle
fisttpll
scas
adc
jecxz
outsl
mov
jle
ja
imul
or
dec
xlat
ficoml
lds
adc
dec
mov
add
les
adc
fwait
and
push
push
cli
fadds
dec
lahf
adc
xlat
test
scas
sub
or
mov
lret
jae
test
pop
bound
and
sbb
pop
inc
cmc
mov
push
ss
ss
xchg
sbb
sbb
jae
pop
fiaddl
sbb
push
sbb
cmp
inc
insb
stos
bound
dec
sub
sbb
lcall
adc
push
jb
xor
loope
pop
adc
dec
add
add
mov
testl
xor
bound
xchg
inc
add
fimull
mov
and
fwait
xor
outsl
sub
xchg
ja
jmp
adc
movb
movsb
rorb
xor
mulb
sbb
mov
mov
das
jns
cmp
dec
or
or
mov
into
push
push
cvtdq2ps
add
sbb
out
incl
mov
sahf
jnp
mov
cltd
dec
sub
sti
adc
ret
dec
movsb
xor
mov
sub
sub
fwait
push
push
insb
dec
out
xchg
and
imul
ljmp
mov
aad
or
jle
loope
cld
repz
pop
add
sub
jge
gs
out
mov
and
xor
scas
hlt
pusha
into
test
jnp
dec
dec
and
pop
mov
cmp
pop
in
mov
xchg
inc
lcall
or
mov
mov
mov
jbe
aam
aas
add
mov
mov
xchg
or
sub
cmp
sbb
stos
movb
push
jl
adc
push
ud2
sbb
push
out
adc
scas
and
dec
adc
sbb
mov
xchg
and
inc
ret
mov
pop
cmp
cmp
mov
mov
cmp
push
pop
cmp
cmc
aad
push
rcr
mov
lods
push
push
push
movsl
stos
sub
xchg
xchg
mov
cmp
and
hlt
lods
adc
sub
adc
and
xor
mov
or
dec
out
cld
sahf
cwtl
sub
and
rcrl
push
xchg
push
pop
xchg
les
dec
or
mov
pop
push
cli
sti
mov
pop
mov
fwait
push
js
sub
or
mov
mov
or
dec
decl
fwait
dec
add
adc
xor
xchg
mov
xchg
mov
pop
jnp
add
pop
xor
push
mov
fnstenv
sbb
fcmovnb
lds
sbb
rorl
jmp
popa
xor
dec
cld
push
cmp
call
dec
jmp
ja
push
push
inc
lods
stos
add
cmp
stc
jge
test
sbb
xchg
fidivrl
jge
mov
mov
decb
pop
out
subl
pop
cmp
repnz
fcomi
or
push
loope
xor
mov
add
shll
jmp
dec
rcll
repnz
fwait
test
cmp
sub
call
jmp
lods
cmp
in
xchg
push
xchg
pop
sti
mov
cmp
or
sub
out
xor
sub
sub
sub
push
fistl
dec
sbb
cmp
mov
inc
or
adc
aad
int3
scas
xor
ljmp
cli
faddp
push
xchg
scas
lret
mov
lcall
jne
push
add
out
ss
loop
mov
add
push
int
and
iret
rcll
cmp
loopne
cmova
insl
mov
mov
loop
inc
and
outsb
int
out
pop
cmpsl
add
inc
sti
insl
popa
addl
mov
scas
push
scas
and
xor
sti
incb
or
cmp
jae
fsts
or
ljmp
inc
mov
inc
int
pop
mov
cmp
mov
xchg
in
cmp
pop
mov
cmp
pusha
in
xchg
psrad
sbb
push
xor
shr
dec
imul
and
mov
push
and
mov
mov
ss
cld
rorl
dec
inc
cmp
mov
push
cmp
insl
enter
push
enter
pushf
sub
ret
cmp
and
pop
pop
rsm
push
fildll
dec
inc
ja
jp
push
cs
outsb
lcall
test
lret
add
pop
das
pop
inc
aaa
sub
jmp
adc
sub
xor
imul
pop
cmc
bound
jg
aas
push
sub
loop
push
mov
mov
fwait
push
and
adc
out
push
push
imul
fistpll
xchg
push
fwait
imul
das
scas
push
ret
mov
sub
dec
cmovns
dec
cs
fidivrs
dec
mov
into
lret
iret
push
mov
and
jmp
push
aaa
rcrb
lock
sti
jge
inc
das
stos
inc
cmp
ljmp
dec
rclb
fdivrl
pop
xchg
adc
test
xchg
ret
pop
pop
pop
pop
inc
sub
sbb
inc
and
aas
and
push
add
das
push
cmc
and
call
inc
push
test
xor
jns
and
pop
inc
data16
or
cmp
in
inc
dec
cwtl
clc
jle
or
repz
pop
xor
pop
divl
push
aam
sbb
cwtl
inc
mov
pop
cmp
inc
imul
xlat
loopne
push
jmp
mov
cmovge
xlat
push
lods
push
xchg
sarb
shrl
shll
jb
sbb
addr16
out
cwtl
xchg
push
and
mov
pop
push
mov
nop
mov
imul
repz
aad
bound
pop
sub
push
push
sbb
subb
cs
sub
jecxz
push
out
adc
das
mov
stc
dec
sbb
dec
aas
repnz
jecxz
out
ss
mov
or
mov
insb
cmpsl
clc
call
adc
xlat
add
outsl
mov
sub
push
sbb
or
inc
pop
mov
sbb
dec
in
or
fimull
mov
cmp
out
iret
dec
pop
adc
pop
adc
or
and
mov
ret
xchg
inc
decl
movb
xchg
test
inc
mov
dec
adc
das
mov
xor
add
or
lret
sti
mov
jnp
pop
enter
or
pop
or
pusha
inc
adc
clc
cmp
mov
stos
lret
mov
sbb
push
push
rorb
out
xchg
xchg
lcall
lret
ficoml
aaa
dec
test
jno
mov
das
in
lret
mov
cli
mov
inc
xchg
cltd
fs
ds
icebp
sub
sub
adc
gs
jae
lods
push
mov
mov
or
repnz
and
shrl
add
stos
scas
jp
mov
leave
push
and
mov
xor
sarl
es
daa
sbb
cmpb
or
cmpsb
ss
inc
adc
inc
or
xchg
sbb
mov
jns
sub
pop
popa
outsb
or
dec
and
test
nop
pop
pushf
fdivrs
jp
pop
sti
cli
pop
mov
add
mov
loopne
ds
dec
xor
pop
aam
cmpsb
xor
call
cmp
lret
sub
addr16
jge
gs
lret
cmp
fmuls
mov
out
pop
pop
mov
adc
inc
mov
flds
dec
cmp
int
dec
push
or
push
leave
pop
ficompl
xor
ljmp
or
cmp
inc
pop
dec
testl
addr16
insl
cmp
or
xchg
dec
or
mov
xchg
jle
mov
adcl
push
emms
xor
jae
cmp
jae
xchg
lods
cmp
sbb
and
jb
xor
lods
sbb
out
fdivrl
clc
pop
fucomip
mov
icebp
fisubrs
xor
xor
stc
outsb
sub
sti
cmp
repnz
sbb
nop
ret
sub
insl
and
orb
mov
hlt
mov
cmp
and
mov
mov
test
fidivl
pop
hlt
jmp
rcr
cmpsl
inc
cmpsb
call
push
stos
dec
lds
shrl
std
mov
repz
sti
jl
daa
hlt
push
jnp
repnz
mov
ds
add
pop
sbb
int3
xor
enter
mov
lfs
xchg
mov
sti
dec
xor
pop
mov
cli
jg
iret
fmull
repnz
mov
rcll
test
push
es
sub
imull
dec
sub
xor
inc
inc
and
mov
jmp
sub
adcb
lahf
cmc
adc
xor
lock
mov
dec
or
push
xor
xor
mov
fwait
mov
or
add
std
out
ss
cwtl
or
adc
insb
xchg
cwtl
js
sbb
inc
mov
lea
cmc
xor
pop
fistl
and
adc
inc
mov
xchg
imul
add
xchg
mov
add
sub
mov
adc
aam
int3
fcoms
sub
push
adc
push
push
sbb
add
faddl
or
fisttpl
cwtl
aaa
mov
out
scas
stos
lods
aaa
pop
xchg
jnp
and
xchg
push
pop
sbb
sbb
push
ret
sti
adc
jle
dec
pusha
mov
adc
inc
movsl
mov
xlat
icebp
cmc
mov
out
mov
mov
sbb
push
sbbl
jno
and
add
mov
fdivl
mov
fistps
lret
cs
scas
push
lods
push
lahf
xchg
scas
xor
jle
out
xor
mov
inc
movntps
push
jp
xor
fcom
dec
adc
std
jns
inc
mov
or
lds
dec
repz
inc
jns
ret
icebp
cmp
mov
cmp
push
adc
stc
scas
lcall
in
sub
xchg
sub
test
push
and
adc
pop
out
aad
dec
scas
in
pop
add
adc
jnp
add
es
es
andl
mov
fisttpl
inc
pop
push
gs
xor
mov
ljmp
mov
or
push
jnp
adc
mov
xchg
adc
jnp
adc
jmp
sbb
pop
mov
jmp
addr16
pop
mov
shlb
fnstsw
add
and
sub
lds
push
fdivl
mov
stos
insl
add
mov
movsl
shlb
and
rorl
pop
loope
add
pop
push
xor
inc
mov
stos
dec
ficoml
push
aad
push
es
xchg
dec
cmp
lret
aas
jmp
inc
lret
mov
gs
add
push
adc
mov
jne
lret
test
cltd
sub
adcb
cmpsl
inc
ss
cmp
sub
fists
push
clc
mov
mov
icebp
jle
out
scas
movsl
push
sub
pop
or
neg
xchg
lret
xor
inc
sub
dec
mov
pop
inc
push
pop
cmp
push
dec
bound
cwtl
xor
sub
mov
jmp
fwait
xchg
push
ja
adc
out
rclb
inc
mov
or
cs
mov
test
mov
insb
rorl
lahf
push
shrb
lahf
jl
cmp
inc
mov
or
pop
sbb
jl
loop
mov
sbb
aam
cmp
cmp
lcall
mov
sbb
test
test
loop
xchg
mov
lret
inc
divl
stos
scas
bound
xchg
cmp
lods
sub
iret
xchg
mov
std
adc
jmp
into
push
shrl
loop
inc
adc
push
cmp
push
fdivrs
aad
inc
testl
sbb
mov
ss
dec
lret
adc
cltd
pop
push
inc
pop
mov
mov
pop
iret
sub
out
mov
lret
scas
adc
ss
mov
inc
lret
loope
adc
mov
add
push
sbb
push
hlt
pusha
dec
mov
or
dec
adc
fsts
lods
mov
lds
fists
in
imul
push
push
mov
shll
call
xchg
mov
testl
inc
ljmp
mov
fldpi
mov
mov
push
xchg
rorl
inc
push
scas
mov
test
mov
imul
xor
aaa
xor
test
ja
movsb
sarl
data16
dec
lret
dec
fiadds
push
sbb
jp
push
push
jnp
sbb
adc
jae
int3
pop
push
jbe
aaa
xor
or
adc
jae
lds
mov
jnp
jb
xlat
and
xchg
pop
fidivrs
ret
mov
add
fistpl
mov
loopne
js
je
stos
xor
cmp
mov
aas
popa
dec
sbb
lret
mov
inc
stc
cs
sbb
iret
sbb
test
ret
int
mov
inc
add
enter
or
lcall
rcrl
insl
inc
adcb
loop
jmp
xchg
xor
sbb
arpl
lret
jo
or
or
rcll
andl
out
cmpsl
push
adc
outsl
stos
pop
adc
push
xor
test
mov
push
ret
mov
cmc
inc
inc
mov
add
inc
shrl
cmp
pop
jp
or
sbb
add
xor
cmc
outsl
cmp
movsb
add
cmc
data16
mov
adc
das
fmuls
mov
lret
add
mov
push
cmp
adc
jp
push
add
xor
xor
or
mov
test
ss
sbb
mov
xchg
pop
adc
mov
mov
pusha
outsb
test
cmc
sub
ret
js
outsl
aad
mov
iret
and
sub
insb
mov
xchg
dec
xor
mov
pop
std
ret
mov
rorb
jp
or
adc
xor
mov
push
jmp
cmp
lods
xor
std
or
call
sbb
dec
add
push
hlt
jnp
pop
lock
mov
aaa
adc
std
cmp
push
rorl
cmpsl
push
ficoml
mov
push
jp
mov
jo
fs
mov
mov
hlt
dec
sbb
jb
in
jecxz
jmp
push
xchg
dec
jbe
bound
es
lcall
or
pop
daa
cltd
xlat
sub
mov
out
les
les
movsl
nop
xchg
out
call
mov
mov
incb
dec
cmp
in
mov
sub
pop
out
repnz
jbe
hlt
adc
cmp
add
aad
inc
inc
dec
sti
or
xor
cmp
mov
in
push
jecxz
cmp
hlt
xchg
mov
mov
xchg
dec
jmp
inc
lcall
testb
fmull
repz
gs
mov
insl
ss
or
das
mov
pop
rclb
pop
sarl
dec
lret
xchg
add
ss
xor
jmp
sbb
test
les
hlt
adcb
adc
icebp
fwait
ret
dec
adc
jnp
or
jmp
jg
or
sti
adc
push
cmp
enter
sti
int3
push
xor
lahf
pusha
push
js
test
cmp
mov
xor
sub
pop
roll
ficompl
insl
pop
hlt
push
mov
sbbl
fsubl
mov
or
jne
fiaddl
jmp
inc
dec
dec
fisttpl
mov
push
jno
dec
pop
xchg
loop
mov
sbb
jae
iret
xchg
ficoml
pop
mov
leave
test
cmp
sub
jns
xchg
or
mov
loopne
pop
cs
cmpsl
das
ljmp
adc
flds
push
ficoml
sbb
or
cli
fwait
popf
outsb
pop
adc
mov
test
adc
mov
jae
in
sbb
jmp
push
sub
sub
and
cmp
daa
jns
rcl
mov
ret
lods
ret
xchg
insb
sbb
sti
xchg
add
popf
and
mov
test
add
mov
or
bound
add
enter
mov
mov
rol
shr
jg
push
xchg
xlat
dec
add
sub
lds
mov
push
sbb
cmp
push
sub
mov
imul
gs
imul
xchg
mov
pop
in
ss
test
int
daa
jns
inc
test
xchg
ss
fnstenv
mov
push
xchg
arpl
push
ja
adc
sbb
jns
ds
xlat
cmpsb
hlt
jnp
cmp
push
repz
xor
incb
mov
cli
je
inc
pop
pop
sbb
or
and
int
movsb
cmp
jbe
ljmp
ficoml
sub
fxch
xchg
aam
sub
sbb
xlat
mov
sub
cmc
cmp
fildl
dec
mov
or
cmpsl
or
aad
mov
inc
pusha
push
aaa
icebp
xchg
pop
dec
push
test
pop
lcall
aaa
jg
xlat
cmp
data16
movsb
push
cmp
sbb
mov
fwait
adc
pop
rclb
out
add
add
rcrb
pop
leave
xchg
sbb
xchg
lret
outsl
mov
cmp
out
popf
xor
push
inc
test
dec
and
inc
test
add
stos
pop
sbb
adc
jnp
inc
or
adc
mov
mov
fcompl
aas
and
ljmp
sub
and
xchg
stos
dec
pop
add
cmp
dec
shr
and
mov
out
fdivs
out
pop
jle
jno
xchg
push
out
pop
sub
sti
in
jne
lds
hlt
lods
cmp
dec
mov
add
jecxz
jle
sbbb
add
ret
int3
inc
in
xchg
jmp
sbb
add
adc
sbb
mov
sti
dec
pop
shll
rclb
int3
inc
leave
repz
mov
lret
inc
dec
xlat
mov
jae
rolb
stos
ss
push
sbb
push
cmp
mov
xorb
out
dec
scas
inc
and
jno
inc
dec
idivl
or
push
or
outsl
dec
dec
cmp
imul
add
repnz
sbb
cmp
or
dec
mov
jnp
data16
sti
popa
addl
xchg
mov
add
jb
and
xor
notl
or
push
jns
dec
pop
cwtl
lret
sbb
mov
mov
lret
sbb
jge
mov
dec
jae
lret
bound
ss
out
loop
fildl
sub
xor
cs
sub
icebp
lcall
aas
loop
out
adc
fisttpll
sbb
testl
aaa
jmp
pusha
repnz
out
inc
adc
add
mov
sbb
dec
outsl
xchg
push
dec
jl
mov
sbb
jnp
sbb
add
jbe
pushl
pop
negb
cmp
push
push
or
mov
fstl
xor
stc
lret
xor
add
sbb
repz
xor
pusha
test
imulb
lret
popf
xchg
mov
or
push
sub
dec
fstpt
dec
lret
lods
addr16
cmpsb
sub
xor
lods
and
sbb
xchg
sbb
inc
stc
stos
and
dec
fistl
push
cmp
shll
dec
mov
sub
sbb
fcoml
pop
jae
pop
pop
and
mov
sub
gs
test
or
es
jae
mull
xor
dec
mov
sbb
cmp
sbb
ss
and
add
pop
cli
sbb
cmp
mov
mov
jge
pusha
lds
mov
inc
lcall
orb
push
divl
pop
adc
inc
dec
cmp
xor
pop
repz
sub
inc
cmp
scas
imul
enter
leave
jbe
test
loop
negl
sub
mov
dec
push
roll
dec
ret
jg
scas
adc
cmp
dec
out
ss
adc
lret
cmpsb
cmp
push
pop
out
mov
fbstp
jns
and
sbb
stos
push
sub
in
mov
jbe
jbe
in
mov
loope
xchg
push
mov
cmpsl
stc
adc
jo
testb
push
xor
mov
pop
iret
sbb
imul
mov
adc
xchg
push
popa
outsb
pop
sub
adc
adc
or
inc
or
dec
mov
cli
enter
jmp
mov
push
mov
test
or
adc
shll
or
sbb
push
cmp
imul
call
or
mov
pop
movsl
add
cmp
sbb
lcall
dec
xor
adc
test
and
mov
jp
push
pop
enter
cltd
dec
jo
fsubrs
fnstcw
cwtl
push
push
and
dec
ds
and
mov
ss
clc
mov
shrl
loop
push
xchg
jp
add
out
push
dec
test
xchg
popa
dec
pop
pushf
adc
pop
xchg
inc
clc
push
xchg
push
inc
cmp
sbb
pop
inc
inc
imul
sub
inc
jb
lcall
out
repz
test
and
add
mov
insl
sbb
rcr
shr
ret
xlat
lds
jnp
stos
jns
jmp
cmp
adc
aad
das
and
push
or
xchg
push
cld
aas
mov
jle
aaa
mov
push
popf
inc
mov
fstp
dec
fisubs
shlb
push
cmp
xchg
into
cmp
sub
sub
mov
or
and
push
push
jns
jecxz
fdivrs
test
add
jns
bswap
fwait
lods
pinsrw
xchg
jmp
dec
scas
clc
cmp
cmpsl
push
outsl
data16
adc
push
je
stc
jmp
fstpt
xchg
sahf
adc
xor
or
test
mov
jge
jecxz
push
fisubl
and
sbb
xchg
repz
inc
ficoms
decb
xor
dec
bound
sub
pop
and
mov
and
and
adc
push
stc
mov
push
fdivrs
mov
push
into
or
xor
jns
lds
sub
popf
cmp
lds
js
loope
push
mov
test
popa
mov
dec
add
xchg
sbb
dec
mov
jb
dec
cltd
xchg
rorl
dec
lret
call
push
mov
dec
push
or
and
lret
roll
sub
xchg
or
cmpsb
ds
add
jp
mov
sbb
mov
outsl
cmp
imul
cmp
sub
pop
bound
dec
ret
dec
inc
jnp
iret
and
mov
push
sub
mov
fisubrl
inc
inc
pushf
lds
push
call
cmp
dec
lcall
cmp
xor
daa
push
sbb
int
jae
jp
mov
xchg
jl
inc
lcall
adc
pop
leave
in
inc
shll
xor
mov
into
adc
add
push
mov
mov
ss
fwait
jns
push
inc
ja
sub
in
stc
push
xor
clc
into
xchg
and
in
imul
mov
faddl
insl
shr
popf
push
pop
and
hlt
xor
jae
imul
sti
fldl
arpl
pusha
clc
insb
shrl
sbb
pop
in
adc
sub
daa
adc
sub
pop
jb
lahf
cli
push
sbb
dec
fisttpll
clc
sbb
sahf
pop
pop
pop
and
add
scas
arpl
aas
jnp
decl
adc
fnsave
mov
mov
adc
orb
xor
dec
cmp
xor
sti
xchg
sbb
outsl
xchg
sbb
popf
imul
inc
or
outsl
jo
pop
ds
mov
dec
sbb
mov
shr
adc
testl
sub
fistl
add
cmpb
sub
or
push
fcomi
shll
pushf
movups
fwait
sbb
xor
in
mov
dec
add
dec
xlat
cli
mov
inc
push
mov
ds
je
sub
jbe
mov
mov
pop
dec
mov
jle
loopne
xlat
mov
jge
test
xor
or
mov
or
lea
mov
mov
sub
mov
dec
sbb
std
repz
stc
add
test
cmpl
mov
cmp
out
xchg
js
sbb
test
fstpt
aad
sbb
mov
cmp
add
xor
dec
mov
lods
or
ss
mov
fisttpl
cltd
sbb
shll
popf
dec
dec
inc
pop
loope
stos
dec
mov
sbb
or
mov
sub
and
lret
sbb
test
jmp
dec
or
or
cmp
jmp
jecxz
cli
std
popa
or
clc
xchg
cmp
mov
push
out
jne
sbb
aas
pop
pop
jns
ljmp
jp
je
mov
repnz
adc
push
mov
mov
push
cmc
jl
xlat
pop
dec
jno
cmp
xor
out
fisttpl
dec
cli
push
mov
jmp
mov
ja
cmp
lcall
stos
adc
das
aaa
es
adc
sbb
in
adc
fmulp
add
cli
cmc
stos
aaa
das
mov
mov
sbb
mov
push
sahf
ss
sti
or
movsl
push
outsb
cmp
inc
and
leave
roll
jmp
bound
aas
mov
inc
lret
mov
inc
jmp
cmc
sbb
add
add
push
fwait
cld
rol
aaa
mov
mov
inc
sti
mov
mov
inc
sbb
test
loopne
imul
mov
xorl
add
dec
std
push
inc
inc
sbb
stc
inc
std
in
xchg
xchg
lret
cli
ret
dec
imul
lcall
mov
mov
xchg
push
jne
xchg
movsl
mov
inc
mov
dec
or
or
add
insl
lret
subl
xorl
pop
ja
dec
dec
sbb
add
cmp
enter
lret
pop
iret
push
iret
jge
lods
add
sub
cld
add
mov
scas
dec
inc
mov
stos
negb
push
dec
xchg
daa
and
push
cmp
jle
mov
mov
sarb
xchg
dec
dec
mov
or
movsl
add
mov
add
imul
mov
xchg
push
fcmovu
xor
mov
cmpb
lds
movsl
sbb
imul
xchg
adc
dec
imul
pop
xchg
xchg
push
lret
roll
mov
mov
insb
mov
or
shll
sbb
loop
adc
lods
and
lea
nop
xor
fnstcw
mov
dec
out
adc
sub
mov
aam
dec
push
testl
adc
iret
and
or
test
pusha
inc
clc
mov
xchg
ret
push
inc
fnstenv
inc
mov
sarb
jnp
pop
out
das
sbb
shrb
lcall
das
push
mov
dec
movswl
popa
dec
dec
cs
adc
es
and
push
daa
rclb
andl
scas
fs
pop
pop
lret
inc
mov
cli
push
pop
xor
cmp
aam
push
out
stos
sub
and
ret
ljmp
movsl
adc
test
lcall
mov
test
ret
push
aam
inc
sub
push
fwait
cwtl
mov
lahf
cltd
cmp
hlt
add
enter
cmp
lea
jl
push
cmc
test
bound
outsl
push
out
mov
sti
je
sbb
bound
js
pop
mov
mov
cmp
sub
js
push
movsl
cmp
cmp
sbb
andl
stos
push
add
arpl
mov
cmp
cmp
push
mov
xchg
xchg
inc
jle
dec
iret
jp
push
pop
sbb
xor
in
sbb
cmp
sysret
jo
movsb
repnz
xchg
xor
or
sbb
sub
es
inc
lret
dec
pop
and
push
cwtl
outsl
test
lds
cmp
repnz
xor
sub
gs
push
xchg
cmp
mov
cmp
and
cltd
aaa
out
add
rcr
gs
inc
loopne
mov
xchg
cmp
iret
das
mov
inc
push
cmp
iret
sbb
push
je
iret
inc
cmp
pushf
sti
mov
popf
fsts
das
inc
push
fldt
outsl
and
out
cmp
into
adc
jne
psllq
ljmp
push
mov
dec
sbb
add
test
cli
aaa
int3
pop
or
sbb
inc
cli
mov
push
mov
into
data16
dec
push
das
jae
testl
push
ja
mov
adc
cltd
faddl
inc
stc
cs
sbb
out
xor
repz
jo
pop
cs
push
or
imul
dec
sub
cmp
outsb
dec
stos
lods
xchg
shl
push
inc
sub
je
push
adc
xchg
and
dec
inc
dec
in
or
xchg
ja
adc
xchg
lds
int
add
mov
mov
fwait
lret
jmp
xchg
mov
dec
mov
mov
and
pop
lret
jl
jecxz
xor
lods
xor
ret
sti
enter
or
into
jmp
ret
decl
mov
cld
fcmovnbe
sub
lods
into
repz
pop
jbe
mov
mov
aad
call
cmp
enter
lods
pop
cmp
xor
sub
pop
nop
mov
test
stos
mov
push
jne
ja
dec
mov
into
or
arpl
and
mov
lea
adc
stc
jae
nop
cld
ja
fnstenv
inc
jmp
hlt
xchg
pusha
scas
xchg
xor
cmp
mov
push
sub
cmp
rolb
adc
push
mov
lods
xor
adc
stos
mov
mov
das
adc
jp
scas
and
adc
int
mov
lahf
fldt
cmpsl
sbbl
das
cmpsb
out
adc
xor
dec
mov
adc
mov
mov
mov
add
jae
jecxz
xor
mov
inc
lods
adc
je
popa
mov
inc
xchg
fwait
loope
cli
inc
cmp
ds
push
dec
jecxz
inc
push
push
add
pop
inc
or
out
lods
imul
pop
jno
mov
mov
add
lahf
test
pmaxsw
mov
mov
push
push
inc
dec
sbb
sbb
jl
out
aad
aaa
adc
mov
sbb
imul
ljmp
mov
lods
xor
pusha
xchg
lds
push
inc
imul
mov
out
sti
jns
push
lret
int
ret
pop
adc
pop
add
sub
mov
mov
mov
scas
sbb
pop
adc
rsqrtps
into
pusha
add
outsb
mov
in
repnz
popa
mov
add
jge
aaa
lret
in
xor
mov
mov
adc
mov
lret
fildl
adc
mov
jmp
sarl
cmp
sarb
negl
arpl
sbb
push
dec
int3
jmp
inc
repz
inc
add
fstps
push
cmpl
xchg
push
shll
js
addr16
adc
push
push
mov
in
jne
push
scas
inc
dec
sub
arpl
jmp
icebp
in
sbbb
lods
fwait
imul
xchg
and
jb
inc
jne
aam
lods
outsl
jge
sbb
jns
ds
rol
mov
fsubrp
sub
repz
pop
mov
outsl
es
fistpll
cmp
dec
xchg
sub
or
jno
mov
jmp
push
ss
xchg
std
fisttpll
insl
mov
cmp
jne
mov
dec
daa
cmp
out
repnz
xor
dec
fwait
dec
sub
movsb
xchg
movsl
mov
push
mov
mov
cmpsb
dec
jp
scas
dec
mov
mov
inc
pop
hlt
adc
sub
dec
adc
mov
in
pop
ss
popa
movsl
sub
cmp
jns
inc
lods
sub
xor
xchg
in
push
enter
inc
cmp
mov
sub
imul
pushf
jp
mov
out
pop
ja
pop
popa
es
icebp
add
sub
or
ds
ficoms
pop
push
jl
inc
mov
add
outsl
shl
sub
test
mov
fistl
std
mov
cmp
push
fidivs
aas
xor
insl
fmull
lret
jmp
dec
push
mov
jle
pop
xor
or
out
inc
or
scas
sbb
cmp
mov
jecxz
in
in
cltd
jnp
sub
int3
adc
leave
ds
adc
pusha
incl
jne
aad
jmp
inc
cmp
jo
jmp
xor
lods
lds
sbb
push
sbb
push
push
sarl
push
shlb
incb
pop
mov
jle
jns
jb
xlat
pop
dec
cmp
inc
xor
lea
push
ficoml
aas
sbb
lock
fistl
mov
xchg
lcall
dec
adcl
xchg
sub
in
scas
xchg
fimull
aad
mov
dec
mov
popf
icebp
repnz
ja
jae
inc
cmpb
andl
mov
mov
push
std
outsb
fwait
shr
stos
pop
xchg
adc
std
mov
xchg
mov
scas
lea
fwait
cltd
fninit
push
ds
fists
pop
xlat
jecxz
fwait
sub
aas
mov
sarb
dec
sbb
or
mov
push
sub
lcall
jp
mov
andb
sar
sbb
lea
aam
mov
mov
mov
movsb
movsl
in
out
das
mov
pop
cmpl
dec
mov
iret
incl
push
sbb
pop
mov
inc
jnp
mov
push
testb
fwait
adc
xchg
lock
es
repnz
sub
cld
andl
mov
add
sbb
lret
call
les
fnstenv
xor
es
jle
push
xchg
add
xchg
imul
and
xchg
add
mov
xchg
xor
fidivrs
lds
cltd
testb
andl
repnz
test
mov
mov
fldt
push
mov
cltd
add
sarb
jg
scas
roll
repnz
ret
adc
jns
push
aad
cmpsb
xchg
sub
loopne
sti
fstpl
aad
fstpt
jnp
aad
mov
push
fnstcw
pop
push
lods
mov
dec
cmp
inc
loope
lea
aam
jecxz
stos
sbb
jae
cwtl
mov
jnp
jmp
movsb
push
sahf
stos
aam
mov
mov
mov
mov
insb
in
imul
fucomp
xchg
filds
sti
inc
pushf
gs
scas
fiaddl
pop
ljmp
js
sbb
inc
in
out
sub
test
inc
pop
sbb
popl
dec
cld
stos
xor
xchg
fimull
stos
sub
cmp
pop
sbb
fstl
fnstcw
mov
ja
push
or
sahf
mov
cmp
mov
add
xor
push
xchg
and
sahf
fwait
mov
cs
out
lret
xor
jne
fisttpl
pop
sub
jae
test
out
outsl
fs
jge
push
lahf
sub
dec
inc
cmp
sti
sbb
pusha
dec
aas
movsb
or
mov
sahf
sbb
int3
dec
shrl
mov
push
movsb
add
jmp
pop
sti
rolb
lock
or
xor
xchg
iret
ret
pop
imulb
je
stos
rcl
add
add
in
nop
cmp
mov
orb
das
mov
or
or
inc
sbb
vmovapd
pop
cmpsl
mov
inc
adc
pop
lret
shl
out
pop
scas
loop
stos
xchg
or
mov
mov
ds
rorb
push
sub
scas
cmpsb
pop
cmp
mov
or
mov
jb
out
out
jnp
push
in
pop
pushf
xchg
push
lret
outsl
mov
pop
adc
cmpsl
mulb
jns
jnp
call
jb
loop
cmp
cmpsl
cli
sbb
cmpsb
fld
mov
lret
add
fsubrl
dec
out
cwtl
stc
push
sub
push
jg
fidivrl
dec
sbb
jno
out
imull
inc
dec
mov
add
out
sub
dec
pop
cmc
inc
push
push
icebp
adc
sub
push
cmp
scas
lret
push
cmp
fsubs
mov
aad
rcrb
mov
aas
mov
mov
mov
sbb
jl
mov
jmp
stos
pop
mov
xor
dec
cmc
or
adc
sti
cmp
pop
add
cmpsl
out
push
mov
fdivs
pusha
cmp
jno
jl
xor
sbb
test
loop
and
sbb
cmp
xor
lret
cli
cmp
jb
mov
add
push
mov
aaa
dec
dec
mov
dec
in
xchg
sbb
sahf
je
mov
mov
or
mov
or
cmpl
xor
movsb
pop
xchg
adc
inc
cmpsl
jbe
test
dec
out
xlat
jmp
add
jg
ret
cld
or
sarb
into
scas
fidivrl
lcall
mov
repz
stos
xchg
cmpsb
dec
xor
fisubrl
mov
jbe
add
aaa
clc
mov
pop
and
inc
cli
mov
cmp
jg
add
pusha
jle
leave
sbb
insl
mov
inc
dec
jmp
cmp
lret
sbb
jg
loope
hlt
pop
lcall
jle
pop
fsts
lahf
in
pop
jmp
ja
mov
cmpsl
shrb
sbb
jge,pn
cmpsb
mov
sbb
inc
cmp
inc
imul
jnp
leave
sub
es
pop
ror
fsts
dec
push
push
outsl
xor
xlat
mov
mov
rorl
xchg
xor
fbstp
or
jnp
stos
aas
rcrl
adc
ficoml
cmc
aaa
push
int3
mov
popf
xor
gs
mov
mov
jp
sbb
add
or
clc
addr16
fstpt
jp
and
jmp
roll
js
rcl
jmp
cmp
ret
loop
loope
adc
sbb
xor
je
cmp
adcl
js
outsb
ret
insb
cmp
inc
sbb
lea
jle
xchg
sub
ror
lahf
pop
push
pop
dec
mov
push
sbb
jle
pop
sbb
enter
and
dec
mov
out
jle
enter
sub
or
pusha
and
xor
sahf
or
mov
pop
lret
xchg
popa
ret
inc
fstpt
add
or
adc
adc
sti
or
pop
cli
cmp
sbb
mov
cli
pop
gs
mov
dec
or
mov
je
fwait
loopne
xchg
xchg
shlb
lret
stos
cmp
dec
negb
push
pop
cmpb
pop
nop
xchg
out
lcall
rorl
rcll
lahf
push
push
aaa
sti
fidivrl
ljmp
lcall
mov
push
adc
sbb
mov
mov
mov
arpl
mov
adc
lcall
inc
mov
sbb
stos
push
cmp
ss
imul
popf
ja
xor
cltd
fistpl
iret
leave
jbe
ficomps
or
sub
xor
sbb
orb
fildll
mov
pop
pop
imul
inc
or
cmp
xchg
jmp
add
pop
xlat
mov
adc
aas
pop
cmp
adc
pop
sbb
mov
das
mov
lret
adc
and
jno
test
mov
xchg
lahf
fmuls
into
inc
pop
icebp
xchg
das
movsb
lcall
adc
je
push
jmp
test
push
mov
ds
add
cltd
or
pop
push
adcb
mov
adc
inc
cmp
sbb
loopne
adc
and
xor
xor
dec
sarl
sbb
sub
ljmp
arpl
lods
xor
mov
mov
dec
test
loop
push
xchg
pop
sub
xchg
mov
dec
fcmovnu
cmovge
ljmp
pop
or
or
mov
and
pop
aad
add
xor
repz
or
rclb
inc
mov
jno
in
sti
xor
push
arpl
xor
mov
imul
xor
push
imul
ficoms
mov
xchg
adc
and
xor
xor
je
jne
xor
xor
inc
mov
mov
jns
imul
and
push
push
sub
fcoms
out
push
test
int
adc
adc
sahf
xchg
push
xor
pop
in
testl
xchg
lcall
loope
sbb
or
shll
in
ja
pop
xchg
mov
aas
push
repz
xchg
mov
lods
int3
and
bndstx
cmp
inc
add
cmpsl
push
or
pop
leave
mov
or
fcmovnu
xor
inc
imul
andl
nop
cwtl
enter
dec
mov
mov
loop
out
sbb
insl
iret
je
pusha
in
adc
pop
sbb
fcomip
xor
addl
add
test
mov
sbb
icebp
aad
lds
je
pop
and
push
gs
das
push
aaa
push
pop
add
fwait
mov
cwtl
inc
add
js
xchg
pop
sbb
dec
mov
dec
in
mov
lods
fcmovne
lahf
sub
out
jmp
xchg
test
xor
or
aaa
pop
push
pushf
inc
test
dec
adc
movl
push
mov
adc
jl
outsb
jmp
xor
iret
pop
jae
sbb
mov
mov
push
hlt
jge
leave
or
fldl
add
addr16
inc
mov
inc
cmpsl
imulb
mov
ljmp
dec
popf
or
andb
sbb
aaa
das
mov
jbe
xchg
out
mov
add
add
adc
or
sub
xchg
daa
jmp
jo
mov
cld
jne
adc
push
dec
add
mov
xor
mov
es
xchg
pop
leave
leave
fdivrs
enter
pop
adc
ljmp
arpl
arpl
push
cmpsl
lret
stos
pop
push
dec
lea
mov
adc
add
xchg
xchg
dec
add
xchg
gs
cli
push
sub
stos
or
or
and
push
and
mov
ljmp
cmpsb
fimull
notl
inc
lcall
out
xor
add
push
jmp
xchg
out
xchg
mov
sbb
decb
push
pop
add
leave
jp
dec
pop
dec
or
mov
lds
add
movsb
adcb
sbb
shll
dec
mov
jmp
cmp
and
mov
and
lcall
inc
clc
inc
push
hlt
sub
imul
fcmovb
call
pop
sub
fcmovnu
dec
dec
sbb
mov
out
adc
adc
cvtdq2ps
mov
fadds
xchg
push
dec
xchg
push
mov
scas
xor
out
inc
xchg
adcl
movsl
and
fistl
roll
xchg
push
iret
aaa
out
fnstcw
mov
stos
or
and
cmp
dec
mov
mov
aas
sub
xchg
and
pop
or
testb
xchg
sbb
sub
cmp
dec
rclb
rcr
jmp
pop
push
sahf
xchg
push
fnstcw
mov
inc
add
jecxz
rcrb
shlb
aad
fcmovnbe
call
cmp
push
mov
pop
inc
leave
daa
sbb
cwtl
dec
bound
xchg
sub
sub
pop
sti
lea
mov
jb
or
xor
aas
fidivrl
sbb
sbb
push
nop
dec
mov
sbb
std
sub
mov
aaa
pop
dec
bound
mov
mov
loop
pop
push
es
add
mov
pusha
je
cmp
push
sbb
sbb
bound
sub
cmpsl
lcall
jp
bound
call
adc
lret
cwtl
mov
dec
ficoml
sub
mov
cli
mov
cld
push
xor
and
mov
mov
push
insl
aas
mov
sub
out
or
lahf
lret
sbb
mov
cmpsl
aad
and
jle
add
ficoms
sti
xchg
icebp
dec
mov
cmp
sub
shlb
dec
sub
out
test
push
xor
shr
loopne
inc
dec
xchg
fildl
push
ss
sti
xor
jp
push
xor
add
mov
xchg
icebp
and
jae
dec
xchg
push
mov
push
jae
in
mov
mov
mov
ja
sarl
je
mov
int3
dec
scas
xchg
pop
stc
dec
xchg
mov
ret
bound
and
xchg
xchg
ss
fwait
xchg
test
in
js
inc
adc
add
lods
pop
sub
jo
push
fldt
inc
aam
add
jnp
hlt
xchg
mov
pop
sar
clc
mov
iret
fs
aad
pusha
notl
or
outsl
scas
leave
mov
sbb
adc
test
mov
lahf
xor
sbb
xchg
shll
sub
sub
dec
adc
jle
outsl
jmp
addr16
outsl
mov
inc
xchg
lahf
pop
in
sar
int
push
dec
fidivs
dec
daa
sbb
cli
ss
mov
hlt
aas
add
cmpsl
jmp
rep
xchg
or
jo
cmp
cmp
jle
sti
adc
lret
rorl
mov
sar
mov
push
add
xor
int
repnz
test
dec
ret
sbb
enter
mov
pop
cwtl
dec
pusha
xor
sbb
enter
push
mov
pop
aam
pop
mov
roll
loop
dec
divl
and
cmp
sub
pop
pop
mov
fwait
lret
or
js
sti
inc
adc
out
cmpl
nop
sti
roll
xor
sahf
orb
cmp
add
shlb
pop
jno
or
mov
lods
dec
inc
cwtl
sarl
add
push
sbb
add
sub
clc
stos
daa
pop
jae
lock
adc
pushf
fstl
cmpsl
and
nop
loopne,pt
fistl
cmp
jno
mov
adc
pop
sti
in
mov
pop
sbb
mov
dec
add
jbe
xchg
xor
and
mov
sub
add
push
in
mov
mov
test
sub
in
cmp
add
pop
fs
push
mov
cld
ja
sti
push
into
outsb
ljmp
sbb
dec
lcall
cmpsl
repnz
scas
xchg
and
dec
pop
adc
sti
jns
add
jl
mov
mov
or
ficoml
push
mov
rolb
push
mov
cmp
sbb
jns,pn
push
ficomps
insb
fistps
jecxz
ljmp
xchg
lods
sbb
dec
ja
jb
int
es
andb
xchg
mov
mov
adc
push
or
js
jl
test
cmp
jmp
shrb
adc
movsb
scas
mov
sub
loop
xchg
movsb
cmc
repz
add
jno
xchg
addr16
add
or
mov
mov
push
add
add
sahf
mov
push
dec
dec
mov
sub
adc
pop
mov
inc
ret
sti
cs
lcall
cmp
jp
loopne
or
out
mov
cmp
adc
jno
popa
lods
xor
leave
sbb
push
xor
dec
dec
rclb
mov
and
mov
push
mov
jmp
push
dec
mov
mov
pop
and
sbb
and
xchg
xchg
mov
scas
push
cmp
ss
mov
push
shrb
repz
data16
comiss
fcompl
pop
dec
aam
push
sub
push
adc
mov
push
das
xchg
and
dec
sbb
cli
pop
cmp
add
fcomps
or
js
inc
push
xchg
in
mov
jle
aaa
pusha
xlat
cmp
pushf
ljmp
les
std
add
stos
and
mov
rclb
ljmp
or
scas
add
stc
jbe
add
imul
js
cld
lcall
inc
cmp
add
mov
std
out
inc
mov
ss
inc
cld
in
mov
jbe
xor
ret
in
into
adc
sbb
popf
pop
dec
push
pusha
dec
sbb
inc
or
push
dec
push
dec
bound
call
out
jge
adc
lcall
mov
sbb
sbb
mov
xor
out
cmp
test
lcall
xchg
in
insb
pop
xor
adc
das
dec
fisubrl
mov
sub
cwtl
sub
mov
pop
sbb
cs
loopne
mov
cmp
rclb
dec
cmpl
popf
mov
mov
cli
divl
mov
fnstcw
xorb
xlat
jnp
sbb
cmp
insb
xor
xor
pop
fldt
sub
movl
lods
test
pop
sahf
repz
mov
loop
adc
lods
sti
pop
adc
xlat
cmc
fildll
sar
mov
xor
dec
loope
nop
repnz
or
ss
dec
dec
push
test
ja
not
push
mov
mov
loopne
aaa
or
or
fst
ss
or
ljmp
jecxz
ret
xlat
cmp
lods
aam
sub
iret
leave
cmp
leave
sarb
ja
sub
xchg
xor
outsb
jnp
lret
dec
jge
adc
mov
je
push
cmp
and
sbb
sub
sub
mov
inc
divb
inc
inc
nop
sub
xchg
pushf
and
test
repz
pop
cmp
shll
orl
sub
pop
xchg
fldenv
out
mov
sbb
in
dec
loop
xor
add
add
add
dec
pop
xlat
roll
dec
mov
cmp
and
push
or
add
insl
inc
cmpsb
mov
ficoml
out
lods
xlat
je
out
les
xchg
or
rcrl
sar
enter
cs
leave
and
pop
cmp
pop
adc
cmp
cmp
push
xor
sbb
bound
xchg
mov
nop
enter
and
jnp
cmp
push
push
or
push
sti
jmp
stc
xchg
aas
cwtl
and
lret
sahf
rcll
sbb
adc
mov
push
cli
push
pop
xchg
lods
scas
mov
sbb
daa
hlt
lea
rolb
lods
xchg
jle
std
cwtl
xor
test
sbb
mov
mov
push
dec
jne
sbb
pusha
mov
dec
sbb
push
sbb
xor
into
push
pop
xor
jecxz
andl
in
sbb
or
jb
adc
mov
in
xchg
xor
aas
mov
data16
pop
cmp
xchg
fidivrl
xchg
inc
cmpsb
cmp
jge
pop
pusha
aas
pop
outsl
es
ret
jno
xor
fs
sti
cmp
aaa
sbb
jmp
out
dec
cmp
inc
or
cmp
sahf
add
sarb
mov
push
jne
pop
fisttpl
inc
xor
or
add
cmp
xor
dec
orl
inc
iret
push
divb
adc
pop
xor
push
adc
mov
lahf
inc
push
add
xchg
enter
jo
mov
imul
sbb
dec
adc
cltd
push
enter
mov
imul
pop
lods
adc
bound
sbb
fs
cmpsl
dec
pushw
popa
fcoms
loopne
adc
dec
dec
ret
cltd
xlat
leave
push
mov
cld
push
xor
int
aad
push
sub
cmp
addl
and
jne
imul
dec
cli
insb
sarl
jmp
dec
sbb
push
out
cmp
outsl
mov
ss
cs
xchg
sbb
cli
push
sub
mov
testb
cmp
cs
in
push
leave
sti
pop
lds
fwait
mov
dec
outsl
pop
fsubrl
imul
pop
pop
pop
iret
sbb
push
test
les
popf
sti
cmpsl
jle
outsb
cmovo
shl
outsl
loope
xchg
mov
pop
cmp
xor
shrb
sbb
scas
lgs
add
rcrb
cmp
aad
stos
pop
lret
jno
je
or
add
int
lret
add
push
push
xchg
and
inc
sbb
xchg
inc
aas
outsl
insb
push
mov
xchg
adc
jl
nop
aad
pop
mov
pop
lods
mov
inc
sub
ret
push
ss
clc
xchg
xor
pop
jl
out
pop
sti
movsb
iret
je
sbb
aad
pop
inc
xchg
inc
inc
fs
enter
cmp
int
push
dec
inc
pop
adc
out
out
mov
mov
ja
cmp
xor
adc
out
loop
pushf
pop
lods
or
pusha
aas
repnz
scas
sbb
sub
or
cli
ss
jp
add
shlb
sbb
jge
jno
pop
mov
or
or
adc
add
mov
insb
sbb
jbe
dec
out
mov
cli
cmp
mov
iret
mov
add
mov
es
repz
cmp
test
lcall
cmp
stos
insb
jb
cmc
jle
adc
cli
lods
adc
popa
adc
cmpb
aad
sub
inc
int
push
aad
adc
insl
fisubs
cs
inc
ss
adc
cmp
cli
cwtl
pop
int
mov
cmp
inc
iret
repnz
cmp
add
mov
jns
ljmp
lret
lcall
dec
imul
fcmovnb
cmp
mov
xor
xchg
leave
fisttps
xorb
cmp
dec
inc
lret
push
inc
mov
adc
dec
dec
push
cmp
iret
or
stc
cmp
dec
fsts
jl
test
sub
dec
imul
pop
int
dec
inc
cmp
sub
cmp
adc
cmp
clc
aad
call
push
enter
mov
js
rcrl
je
jno
ljmp
jmp
pop
orl
xchg
pop
lahf
lods
cmp
add
xlat
pop
mov
sbb
jnp
xlat
inc
cmp
xchg
cmp
or
mov
outsl
movsb
sbb
xor
lret
int
dec
cmp
shl
and
cwtl
scas
mov
std
sbb
mov
je
in
inc
mov
popf
xor
pcmpgtb
inc
and
mov
xlat
je
mov
cli
pushf
xor
sub
ds
imulb
fidivrs
pop
or
pop
dec
mov
sbb
sysret
repz
push
jmp
mov
test
repnz
clc
inc
fdiv
and
jecxz
lahf
mov
mov
xchg
pop
sti
jge
ljmp
aad
mov
add
jg
jmp
out
popf
stc
lods
lock
cmp
xchg
mov
cmpl
int
cs
adc
pop
sbb
mov
jge
fistps
and
inc
mov
mov
mov
push
jne
or
rcrl
push
sub
mov
lcall
sbb
pop
loop
pop
imul
test
sub
cmp
fistl
mov
aas
mov
xor
jecxz
scas
xor
pop
push
dec
div
pop
xchg
and
loopne
adc
cmpb
xchg
push
xor
dec
adc
enter
divl
cld
shrl
imulb
mov
dec
lcall
stos
xor
mov
xor
mov
add
cmp
sbb
cli
push
lcall
add
dec
mov
mov
pop
leave
outsb
sbb
adc
and
es
out
and
mov
adc
lret
pop
push
push
cmp
or
ret
jb
in
xor
lret
dec
es
mov
jmp
dec
ja
dec
rcll
inc
pop
pop
xchg
sti
ret
adc
repz
mov
rcr
fnstsw
stos
leave
adc
push
iret
sub
pop
int3
sti
xchg
mov
lock
cltd
jle
addr16
sub
pop
adc
lods
lret
or
inc
cmp
push
push
jnp
in
fs
mov
lock
xchg
mov
inc
cmp
cmpsl
fdivl
lds
pop
ss
xchg
fldt
imul
lret
lret
pop
pop
hlt
dec
cmp
xor
js
or
out
xchg
cmp
repnz
inc
lock
jmp
mov
hlt
negl
sub
adc
or
mov
dec
stos
in
mov
pop
loope
shrl
repz
xor
repnz
lret
sub
mov
repz
fsubrs
and
decb
mov
jnp
sbb
bound
testl
adc
sub
aas
jmp
psubb
ljmp
push
nop
cli
dec
add
fcmove
pop
mov
xchg
js
add
shlb
test
sti
lret
stos
jmp
mov
xchg
jae
aaa
adc
ficompl
pop
lret
inc
mov
xlat
push
fisubrs
mov
sbb
dec
aad
test
and
popf
stos
outsl
popa
or
sbb
xor
aam
push
cli
popa
lret
clc
inc
dec
flds
mov
cmp
movsl
data16
imul
add
popa
ss
es
sbb
xor
push
testl
and
ret
sahf
std
and
push
xor
mov
shlb
xchg
adc
xor
cmp
push
jne
xchg
mov
adc
mov
xchg
mov
pop
sub
das
cmp
mov
out
mov
cmp
aad
or
iret
sbb
fwait
ja
loopne
fnstenv
shrl
lods
xor
ss
pop
xchg
ja
lahf
jecxz
xor
scas
push
insl
scas
jg
shrb
mov
stos
outsl
xchg
cld
pop
cmp
data16
gs
clc
sar
mov
imul
fistl
xor
lret
add
movlps
stc
loop
mov
stos
or
mov
mov
xor
mov
mov
push
inc
mov
addr16
scas
adc
rcr
push
jmp
test
sub
ret
mov
jl
push
ss
cli
sub
out
iret
push
les
cld
test
inc
pop
pop
pop
dec
and
xchg
inc
iret
inc
mov
shlb
xchg
inc
pushf
xchg
sti
jmp
dec
push
push
dec
repz
aas
dec
dec
mov
popl
pop
cmp
cmp
sbb
stos
icebp
test
xor
repz
daa
addr16
sbb
lret
cmp
dec
add
mov
aaa
stos
add
sub
out
jge
cmp
push
cli
or
push
jo
cmpsl
pop
xchg
push
nop
lea
jnp
pop
push
adc
cmp
dec
add
fidivrl
pop
rol
push
and
dec
mov
aad
or
lods
shlb
incb
sub
and
sbbb
mov
imul
js
gs
fnstcw
mov
lret
inc
mov
dec
sub
adc
mov
push
mov
aas
stos
and
pop
xlat
fnstsw
sbb
lods
or
or
das
call
sub
cld
xor
xor
loopne
sti
pop
leave
jge
sub
and
sub
scas
push
mov
adc
inc
pop
mov
addr16
pop
mov
sbb
sbb
sub
fidivl
add
mov
jno
push
scas
mov
dec
push
andl
cmp
push
mov
push
inc
out
fdivrs
add
mov
dec
mov
out
add
test
sbb
fwait
adc
fwait
sbb
or
xchg
adc
jle
pushf
rcll
cmp
mov
dec
mov
sarl
dec
sbb
out
adc
pop
mov
pop
jns
fdivrp
inc
orb
fs
mov
pop
incl
inc
dec
or
or
cmp
xchg
adc
stc
push
inc
insl
push
std
iret
pop
ret
dec
xchg
add
int
push
inc
sub
cmp
mov
cmp
lock
cmp
fdivs
enter
out
mov
dec
js
or
es
insb
xchg
cmp
sub
mov
add
dec
sti
int
jmp
mov
push
stos
xlat
fwait
sbb
inc
imul
jo
or
pop
cmp
dec
aad
cmp
sbb
push
ret
sbb
test
sar
adc
inc
fcmovbe
lret
pop
add
cmp
adc
xor
push
jp
or
push
push
pop
rorl
cmp
or
iret
cmp
lret
or
cmp
inc
iret
xchg
or
cmp
orl
sbb
repz
mov
aad
sbb
pop
mov
inc
cltd
shl
mov
xchg
imul
cmp
sub
sbb
or
cmp
lret
enter
test
or
iret
mov
js
push
dec
mov
sub
sbb
cmp
sti
inc
push
jmp
fistpl
lret
cmp
adc
cmp
inc
imul
sbb
cmp
rcrl
xchg
or
sbb
add
push
cli
xlat
ljmp
shlb
dec
push
mov
jp
push
lret
dec
adc
cmp
sub
inc
push
or
stc
sbb
cmp
shlb
xchg
shrl
xor
sbb
nop
lods
cltd
nop
and
movsb
sub
dec
in
scas
mov
clc
inc
ljmp
sbb
popa
inc
dec
push
sub
sbb
xlat
lcall
stc
test
dec
rcll
imul
jns
sbb
and
fdivs
and
cmp
dec
xor
mov
xlat
pop
jae
stc
and
mov
add
mov
dec
fstps
repz
mov
roll
jmp
push
cs
stc
cmpsl
loope
jbe
test
xchg
dec
add
xchg
xchg
dec
push
lret
mov
lret
and
pop
js
lret
rolb
shl
or
cmp
lret
in
pop
jge
dec
incl
data16
inc
mov
and
movsb
fwait
mov
lock
in
pop
mov
inc
adc
jg
je
lahf
mov
inc
jmp
cwtl
fsubrs
mov
push
sbb
mov
das
jno
fimull
jne
out
sbb
sub
call
je
cmp
xor
push
push
cwtl
mov
sbb
sbb
sysret
mov
enter
popa
dec
pop
mov
roll
add
shlb
fstpl
dec
mov
decb
imul
or
repnz
or
and
pop
mov
pop
sbb
lret
cmp
leave
jl
mov
mov
pop
mov
xlat
jns
sbb
jl
pop
adc
lcall
inc
push
inc
or
iret
imul
jl
cs
push
rcr
fsubrs
ljmp
add
add
push
fwait
push
fidivl
testl
xor
ja
in
or
aaa
push
sub
push
mov
mov
dec
iret
mov
ss
jno
aas
xlat
cmc
sbb
adc
jecxz
pop
xor
or
or
xchg
mov
stos
cli
and
or
inc
sbb
mov
mov
cmp
xchg
test
dec
mov
outsl
mov
mov
or
xchg
stos
mov
aam
push
jge
imul
inc
dec
cs
clc
cmpsl
mov
add
xchg
cmc
mov
outsl
cmp
inc
sbb
push
rorb
jp
sub
or
xchg
push
call
xor
mov
add
int
repnz
sub
stos
or
mov
sub
sbbb
adc
xchg
cli
jle
mov
fcomps
jge
inc
xor
or
sbb
jnp
push
mov
xor
xlat
ja
sahf
shll
sbb
jae
sub
pop
push
mov
data16
fadds
cmp
fsubs
cmp
cli
xor
jp
mov
in
push
dec
mov
inc
mov
das
mov
arpl
in
ret
popa
ja
jns
out
mov
sbb
jle
mov
lahf
jne
xchg
dec
loopne
mov
xchg
mov
and
lds
inc
pop
clc
dec
ss
std
leave
aas
sub
or
sbb
cmpsl
scas
xchg
inc
movsl
cmp
jle
dec
stos
mov
push
pop
popa
sub
push
add
mov
inc
insb
bound
aas
dec
sub
pusha
cltd
mov
inc
xor
push
adc
rcrb
xor
mov
cld
lea
cltd
sbb
cwtl
add
pop
sbb
adc
sti
leave
cmp
sbb
sti
dec
sub
lahf
sysret
aaa
inc
inc
dec
mov
loop
pop
sbb
push
inc
das
and
dec
int
xchg
inc
or
cmp
lcall
mov
adc
pop
movsl
inc
aam
xor
jbe
mov
add
out
cmp
sub
xor
jnp
lret
arpl
dec
or
fadds
in
or
xchg
sub
mov
push
aas
lods
fldl
fldl2e
mov
gs
mov
test
mul
xchg
jmp
je
push
mov
mov
fcom
fistpl
xchg
subb
test
push
cld
clc
inc
sub
clc
inc
push
mov
imul
pop
fnsave
sbb
xchg
ljmp
popa
xchg
pop
and
push
mov
fildl
or
cmpsb
xchg
inc
iret
pop
int3
notl
scas
iret
inc
subb
rolb
shrb
mov
adcb
out
imul
adc
sub
mov
lea
arpl
adc
std
adc
fisubrs
cmpsl
js
add
lret
or
adc
imul
push
sbb
or
xchg
xor
stos
stos
cs
popa
dec
std
pop
push
mov
mov
adc
mov
inc
arpl
movsl
add
movsl
ret
add
cmpsl
dec
adc
aam
mul
out
loopne
sahf
inc
dec
mov
mov
or
loope
icebp
and
add
push
adc
push
ja
test
dec
mov
hlt
dec
outsl
stos
fidivl
test
adc
push
and
adcl
inc
dec
lods
ljmp
xchg
cmpb
imul
popa
int
sbb
xchg
mov
sti
test
dec
sti
cmp
inc
push
test
dec
push
sub
bndldx
push
stos
imul
into
cmp
rorb
push
xchg
das
mov
fs
jb
xor
cmp
jae
incl
or
sbb
decb
xor
test
hlt
cmp
add
push
pop
inc
rorl
dec
mov
sahf
dec
mul
cmp
addb
cs
out
aas
gs
pop
loop
or
and
sbb
sbb
and
cmp
sbb
add
or
outsb
push
dec
xlat
push
and
fnstenv
add
mov
filds
int
sub
dec
mov
fldt
jns
cs
mov
sbb
roll
sub
repz
xchg
pop
xor
mov
das
loope
jle
cmp
mov
adc
mov
push
xlat
fisttps
add
pmulhw
and
mov
sti
dec
xor
push
stos
adc
scas
jno
xchg
xchg
sbb
mov
scas
lds
mov
out
test
jl
push
aad
jg
mov
push
xchg
push
out
inc
cmp
or
push
mov
loopne
outsb
gs
jle
add
sbb
cmp
pop
push
jnp
mov
pop
hlt
dec
cmp
cmp
int
adc
les
addr16
cmp
jo
mov
mov
sub
out
jae
or
xchg
jae
out
mov
push
cmp
dec
and
lods
pop
lods
loop
icebp
or
sbb
inc
adc
or
jno
sti
dec
jge
iret
out
or
jno
pop
orb
push
bound
ss
push
sbb
pop
fistpll
sub
lcall
loop
fwait
sbb
dec
push
outsl
nop
xchg
cwtl
push
sti
push
inc
int
shlb
sub
int
jne
push
mov
and
sbb
push
cli
loope
sbb
mov
fcmovnbe
dec
repnz
jb
sti
and
mov
pop
push
mov
aaa
sbb
xor
xor
add
push
test
or
pusha
in
dec
or
lods
mov
inc
mov
and
in
push
aad
xor
outsl
or
xchg
call
neg
daa
adc
dec
mov
inc
iret
ss
ss
call
adc
sbb
es
nop
out
gs
and
push
popf
sub
mov
out
int3
sub
cmp
rolb
mov
adc
pop
imul
into
sub
stos
xor
in
test
sbb
sub
jo
dec
inc
idiv
in
dec
lods
add
pop
mov
inc
incb
mov
test
sub
jbe
lahf
push
dec
fimuls
idivw
aad
mov
mov
jmp
stos
dec
popf
pop
stos
dec
xor
fmul
outsb
sub
sub
mov
jl
inc
test
scas
mov
push
push
mov
adc
dec
mov
and
aam
pop
cmp
cmp
push
scas
pusha
pop
clc
xor
fdivr
xor
fldenv
jnp
or
xor
adc
mov
or
add
js
icebp
dec
insb
cwtl
dec
pop
xor
adc
jne
or
add
dec
int
cmp
push
lahf
or
cmp
mov
aaa
mov
and
movsb
stos
xor
mov
fcoms
mov
mov
cmp
aaa
aad
xor
out
test
test
push
mov
ljmp
fsubrl
mov
cmp
push
inc
adc
sti
mov
aaa
es
add
pop
lret
sub
ss
add
mov
inc
and
pop
sub
outsl
push
dec
xor
jmp
sub
sub
or
and
insb
or
fsubl
dec
cs
adc
push
or
sarl
sub
xlat
sbb
mov
cwtl
div
add
mov
notl
movsb
data16
dec
pop
inc
mov
push
loop
jp
imul
out
and
pop
add
xor
inc
mov
jo
in
into
inc
inc
shrl
outsb
fsts
dec
fs
ret
mov
jl
jnp
ret
sbb
pop
xlat
popa
hlt
adcl
das
mov
in
cmc
stos
xor
rolb
cs
addl
pop
xchg
pop
dec
inc
dec
adc
add
adc
or
cmp
mov
and
fsubrs
arpl
sbb
mov
pop
or
std
push
sbb
push
and
sub
xlat
scas
xchg
jecxz
mov
aad
popf
sahf
hlt
pop
xchg
mov
sarl
arpl
adc
pop
in
cmp
call
adc
gs
scas
xchg
and
jne
jae
jg
scas
sti
xchg
adc
sahf
add
fnstenv
sti
add
sub
xchg
sbb
push
mov
mov
pop
aad
or
pop
jb
push
inc
out
jle
add
dec
fldcw
es
xchg
test
and
mov
push
stos
push
push
add
push
pop
jbe
xchg
sbb
aam
sbb
pop
sbb
subb
ja
dec
ret
rcll
inc
pop
jge
cmp
mov
iret
loop
mov
pop
jmp
or
jnp
aam
sub
xor
test
jecxz
dec
inc
imul
leave
cmp
vmwrite
cltd
push
dec
outsl
or
cmpsl
ja
pop
dec
scas
ss
push
dec
stos
je
pop
mov
pop
imul
js
ljmp
lcall
mov
and
sub
js
jmp
bound
xchg
ja
sti
push
xchg
push
mov
mov
imul
lods
add
in
pushf
mov
inc
jge
cmp
dec
cmpsl
and
cld
add
cmc
adc
divb
dec
sbb
ficoml
dec
adc
bnd
pop
loope
mov
fsubrs
aas
fnstenv
fsin
fadds
fisubrl
fwait
pop
jne
pop
dec
add
aad
inc
xchg
cmp
test
inc
jb
adc
in
sub
mov
fwait
sub
pop
mov
scas
mov
dec
cmp
sub
pop
sbb
cmp
iret
aaa
mov
xchg
pop
jbe
cmp
cmp
dec
or
out
dec
push
fcmovne
repz
sub
jle
scas
mov
into
test
mov
add
incb
dec
adc
adc
xchg
clc
adc
leave
or
and
inc
jns
das
lods
stos
mov
xchg
jb
cmp
push
lods
push
rolb
not
cmp
leave
jl
push
or
inc
adc
inc
lods
outsb
jmp
xchg
popa
dec
dec
enter
xor
push
inc
movsb
sbb
or
shrl
inc
adc
dec
xor
adc
lret
mov
aaa
mov
cli
adc
ror
lahf
jne
mov
cmp
add
sbb
pop
and
aaa
xchg
pop
lret
outsl
test
xchg
pop
xchg
xchg
ljmp
push
cmp
jns
lret
fldt
addr16
repnz
das
pop
push
repz
mov
push
lock
dec
popa
rorb
fistl
push
pop
lods
in
addr16
adc
stos
dec
mov
mov
rclb
and
cmpsl
ficoms
mov
jnp
hlt
cmp
imul
dec
pop
aad
leave
push
or
pop
dec
movsl
out
xchg
sbb
stos
lock
fldt
cmp
hlt
jg
push
mov
sti
mov
adcl
mov
lods
lret
dec
push
dec
add
shll
cmp
loop
pop
sub
gs
dec
lret
test
inc
cmp
cmp
in
fidivrs
ret
outsb
and
outsl
push
data16
mov
jns
adc
cmp
cwtl
jb
push
fnsetpm(287
pusha
lret
mov
enter
mov
jbe
aam
mov
lods
dec
dec
into
imul
pushf
xor
dec
lret
jg
mov
mov
mov
or
daa
mov
es
pop
mov
imul
jg
xchg
lock
and
or
sub
xor
loope
jns
push
popl
bound
and
sub
cmpsl
cwtl
insb
hlt
popa
in
sbbb
inc
cs
inc
lods
in
sub
dec
sbb
mov
jl
fiadds
mov
outsl
rcrl
xchg
iret
xchg
sub
sub
xchg
cs
fsincos
cmp
rclb
movsb
pop
pop
mov
inc
in
mov
cmp
push
lods
cmp
fs
out
int
pop
adc
mov
lods
hlt
es
sub
xchg
adc
fwait
movsb
inc
mov
cltd
jnp
ss
int3
insb
dec
jno
daa
ss
and
fstpl
test
adc
iret
aad
cmc
cli
push
lahf
fwait
dec
rol
pop
xor
mov
xlat
mov
loopne
sahf
xor
cmp
pop
mov
mov
inc
pop
ss
xor
mov
test
adc
lea
test
mov
cmp
xor
movl
mov
jmp
mov
pop
xchg
outsl
add
pop
add
mov
fwait
rcll
shrl
mov
lods
mov
add
sbb
xchg
mov
daa
sbb
adc
xchg
sbb
pop
push
pop
inc
fs
pop
sub
inc
popf
rcll
js,pt
mov
cmpsb
pop
addb
mov
and
xor
popa
xchg
pop
pop
sti
aad
pop
push
jns
jecxz
xchg
add
mov
adc
mov
imul
jo
fs
jmp
hlt
pusha
addr16
daa
push
adc
lahf
push
mov
push
mov
into
mov
mov
mov
mov
fistl
xchg
arpl
int3
push
and
filds
in
cli
insb
mov
ficomps
jne
loope
mov
dec
cmp
negl
out
hlt
pop
adc
push
push
rolb
jle
pop
jae,pn
test
lods
das
std
mov
mov
sahf
push
mov
sub
sub
push
int
sbb
enter
cs
aam
pop
pop
popa
fstpt
adc
scas
fsubrs
fwait
adc
stos
add
pushf
and
sub
sbb
mov
sbb
xor
faddp
repz
rcr
inc
inc
loope
dec
or
inc
dec
dec
int3
pop
pop
lds
cmc
test
xchg
sub
sbb
sub
cmp
jbe
push
sub
hlt
dec
jb
cmp
aas
mov
or
shlb
sarb
lds
sub
adc
das
cmp
dec
hlt
adc
testb
add
xchg
mov
test
or
bound
aas
push
loopne
and
dec
inc
mov
sub
xchg
lret
cwtl
xor
enter
test
subl
mov
jle
hlt
push
push
cs
or
dec
shll
test
ror
incb
sub
loopne
imul
mov
add
lods
ror
jmp
push
cmpsb
sahf
roll
popf
ret
xor
and
cmc
and
xlat
mov
sti
cmp
jo
repnz
jp
push
sbb
xchg
push
mov
xor
sub
sbb
js
and
insb
push
add
xchg
or
xchg
dec
notb
adc
mov
cmp
test
fwait
xchg
rcll
scas
push
addl
scas
in
and
inc
out
mov
imul
shll
push
pusha
mov
out
es
sub
mov
cmp
sbb
sti
fsubrp
push
add
out
lods
or
sarl
push
cmc
call
sbb
inc
pop
fidivrs
mov
leave
pop
orl
iret
pop
sbb
and
lcall
jp
pop
mov
addr16
mov
dec
lods
cmp
push
xor
clc
jns
mov
pop
or
jle
pop
loop
pop
mov
push
cltd
mov
das
and
mov
and
inc
ds
aam
xor
subb
inc
push
jecxz
gs
xor
inc
sub
fdiv
xchg
pop
ret
pop
inc
lods
xchg
push
push
add
ljmp
fistl
call
notl
jmp
xlat
mov
add
push
jo
cmp
cmp
or
cltd
loope
and
sub
dec
dec
out
or
mov
ds
cmp
sbb
nop
lcall
outsl
nop
stc
xchg
mov
add
and
fisttpl
mov
xor
push
aas
inc
mov
sub
in
jecxz
loope
push
adc
cmp
inc
fcmovnbe
test
jnp
shr
shll
sub
push
fcmovbe
inc
sbb
rcrl
mov
jbe
dec
cmp
repz
sbb
insb
fldt
xor
inc
stos
pop
scas
test
pop
push
xchg
dec
sub
mov
sbb
or
stc
sti
jmp
push
out
cs
cltd
lcall
xchg
dec
idivl
sub
inc
push
sbb
or
fistl
push
adc
inc
push
nop
icebp
or
dec
inc
fistl
cmp
lret
mov
cwtl
sub
mov
mov
hlt
sbb
inc
stc
testl
or
or
inc
sti
imul
sub
cmp
inc
dec
sub
jecxz
push
cld
mov
sbb
lret
xchg
pusha
lea
lcall
xor
cltd
cs
je
push
fiaddl
dec
inc
cmp
jns
jecxz
lret
sbb
jecxz
sbb
cs
es
call
cmp
cmp
jbe
push
mov
push
orl
mov
stc
inc
sbb
arpl
pop
aam
test
popa
push
loopne
sbb
leave
test
test
mov
sbb
stos
lods
and
pushl
xchg
fistpl
push
cs
xlat
jg
insb
jg
bound
cs
pop
pushl
outsb
sbb
inc
shrl
fisttps
cmp
xchg
sub
mov
inc
mov
mov
or
lds
xor
sti
pop
xchg
xlat
out
adc
jmp
pusha
lcall
rclb
mov
sbb
mov
inc
stos
jmp
repnz
add
and
iret
ficompl
lcall
mov
adc
cmp
or
popa
inc
aas
sub
adc
mov
adc
adc
xchg
orl
mov
cmp
and
inc
sub
stc
jmp
roll
iret
dec
push
sub
fcmovne
lcall
ja
jmp
push
repz
cmp
cmp
loopne
mov
aas
inc
xlat
xchg
cmp
popf
ljmp
sbb
orb
jno
inc
or
mov
xor
into
xlat
es
jnp
dec
sahf
repz
into
dec
xchg
leave
lret
xchg
dec
xor
sbb
clc
push
push
mov
and
push
call
sub
fistpl
popa
rcr
incb
aaa
mov
mov
xor
testb
jo
sbb
inc
movsb
cli
mov
pop
mov
inc
jnp
push
pop
in
fisttpll
dec
je
xor
sbb
pop
add
jg
loop
xor
lcall
shlb
addr16
mov
pandn
es
lds
mov
lods
cmp
xlat
cmp
pop
jns
mov
fisubs
mov
mov
hlt
sbb
xchg
xchg
or
cmp
outsl
test
cmp
push
adc
sti
imul
ds
sub
xlat
ljmp
jo
shrl
fwait
adc
cmp
xlat
filds
fstp
mov
scas
es
fistl
mov
cld
stos
sbb
sahf
mov
mov
mov
inc
jo
rcll
cmp
inc
xlat
adc
jne
sub
jnp
push
push
mov
push
xlat
popa
dec
test
mov
jnp
mov
pop
adc
movl
push
add
push
jnp
fwait
mov
add
int
lahf
das
inc
mov
lcall
outsl
push
push
pusha
inc
clc
add
push
mov
mov
stos
mov
aaa
mov
fcoml
cmp
cwtl
ror
pop
addb
inc
mov
xor
mov
mov
clc
mov
mov
sti
lret
mov
lea
aas
push
mov
vmovapd
mov
mov
xor
xor
mov
dec
dec
xlat
jnp
jle
test
pop
ljmp
sub
mov
loop
cmp
push
cmp
fs
jne
xor
aas
ja
and
or
xlat
mov
cmp
lahf
stc
or
cltd
lds
les
xor
mov
pop
outsl
mov
mov
scas
cmp
fcoml
js
mulb
lret
insb
sarb
xchg
push
jnp
xchg
fwait
shrb
xchg
mov
and
lret
test
and
inc
daa
cmp
mov
xor
and
sbb
xor
xor
sbb
mov
cmp
push
mov
dec
dec
inc
inc
lahf
js
inc
mov
idiv
sbb
adc
jecxz
push
pop
dec
push
insl
mov
inc
inc
je
sub
bound
xlat
sahf
jnp
setns
add
fistpl
xor
or
and
push
imul
sbb
test
andl
fcmovb
pop
dec
mov
add
loope
cmp
mov
jo
test
mov
cmp
movsb
fs
jno
inc
sahf
notl
mov
push
add
mov
fidivrs
sub
dec
cmp
sbb
xchg
pop
add
popa
stos
xor
mov
enter
push
cmpsl
or
pushf
cmc
xchg
mov
adc
in
subl
push
or
adc
inc
imul
sub
lret
sub
cmp
cmp
jnp
cmp
mov
cmp
icebp
sti
adc
pop
out
roll
leave
mov
cmp
adc
jle
std
ret
xchg
mov
sbb
lds
cmp
int3
mov
add
cmp
and
push
fists
js
push
mov
loopne
loop
pop
mov
push
ljmp
push
xor
inc
fsubs
dec
or
xchg
adc
cwtl
mov
mul
jnp
popa
jnp
jecxz,pn
aas
xor
push
bound
jne
addl
imul
scas
mov
pop
xor
loope
das
cmp
xlat
add
xlat
jge
mov
jp
dec
out
es
das
gs
lret
jp
cli
mov
cld
test
jbe
dec
mov
inc
sub
mov
xor
mov
je
mov
inc
jle
sbb
jg
mov
inc
cmpsl
rolb
scas
or
sbb
sub
cwtl
push
xchg
repz
pusha
test
or
dec
xchg
push
lahf
mov
mov
fldl
icebp
mov
mov
and
sbb
lods
mov
clc
movsl
lcall
push
enter
cmp
lcall
fisubrl
shll
or
decb
decb
fstl
push
outsb
jecxz
addl
daa
sbb
inc
outsl
dec
mov
icebp
hlt
sub
pop
shr
es
sub
push
xor
fcmovnbe
aas
sub
pop
sub
dec
inc
cmp
mov
loopne
and
push
sti
sub
enter
ficomps
or
sub
mov
jo
adc
bound
cmpl
add
add
mov
or
in
aam
and
jnp
push
shlb
mov
fistps
out
ljmp
xchg
shl
fstpt
bound
popf
pop
inc
pop
cs
xchg
fisttpll
sbb
pop
lea
pop
xchg
mov
dec
ret
inc
rclb
xchg
inc
inc
or
mov
repz
xchg
leave
mov
push
adc
popf
stos
inc
mov
inc
pop
xor
in
dec
ret
mov
push
cmp
call
fisttpl
xor
or
dec
push
sarb
inc
pop
fmul
cmc
pop
xchg
dec
add
adc
iret
inc
dec
dec
sub
jmp
lahf
cmp
std
js,pn
lods
inc
cwtl
xor
or
mov
push
push
adc
les
mov
push
mov
je
push
pop
ret
cmp
adc
jae
idivl
pop
bound
cmp
fsts
leave
lret
mov
jb
mov
cmp
sbb
adc
leave
out
adc
mov
jp
pop
fildl
dec
scas
push
int3
lods
adc
clc
or
es
sbb
mov
adc
push
jns
sbb
or
push
mov
mov
cmp
mov
push
into
jmp
stos
data16
push
add
cmc
push
xor
cld
inc
mov
movb
adc
cwtl
ja
sbb
dec
and
je
mov
lret
inc
jnp
orb
xlat
jg
mov
mov
jns
add
push
in
pusha
in
shlb
out
fcos
or
lods
fistpl
inc
pop
pop
pushf
or
sub
push
mov
out
das
repz
loopne
notb
inc
sbb
sub
jge
imul
cmpsl
dec
jbe
fisttpll
push
pop
sub
cld
loop
push
icebp
add
inc
sbb
xor
mov
ljmp
push
call
pop
lcall
test
inc
lea
jnp
ficoms
add
xchg
repnz
test
fwait
scas
je
es
cmp
sbb
imul
mov
pop
imul
scas
test
cmpsl
pop
mov
sbb
loope
pop
sbb
add
call
inc
leave
xchg
cmp
lea
add
mull
inc
cwtl
sbb
lods
mov
inc
mov
push
jmp
cmp
fistl
pop
pop
popf
cmp
pushf
insb
jnp
push
negl
aad
out
adc
push
adc
sub
rorl
cmp
push
sarl
int
dec
xchg
dec
inc
dec
movsl
mov
adc
xor
ss
mov
imul
dec
lods
dec
sbb
roll
dec
in
mov
jns
inc
sbb
sub
lahf
xchg
je
pop
xchg
adc
xor
mov
mov
lret
shll
dec
mov
cmp
lods
push
push
adc
stc
pop
ja
jbe
out
rcrb
hlt
pop
cmp
test
lock
mov
sti
sub
inc
xchg
cmc
inc
shlb
xchg
xchg
rorb
notb
aas
jmp
cmp
or
int
xchg
aad
ja
and
ljmp
dec
iret
mov
inc
cmp
xorl
add
dec
imul
lret
movl
pop
inc
mov
mov
mov
lcall
movsb
cs
sub
mov
jmp
or
sub
dec
hlt
into
outsb
mov
adc
or
adc
pop
adc
pop
push
jne
xor
lods
dec
popa
cltd
mov
mov
mov
outsb
push
clc
and
push
or
ljmp
jl
out
or
lret
in
fdivr
xlat
gs
xor
add
lea
jnp
push
dec
xor
mov
add
std
sub
punpcklwd
xor
or
jmp
popf
inc
mov
inc
xlat
cmp
sbb
loop
popa
sbb
xchg
std
pusha
mov
insl
cmp
cwtl
push
pushf
inc
pop
mov
out
fbld
xor
cmpsb
push
push
push
adc
mov
es
sbb
xchg
aam
mov
dec
push
movsb
adc
inc
adc
push
inc
sbb
lods
add
call
mov
xor
scas
ljmp
pop
cmp
jp
and
mov
das
fiadds
imul
sub
and
xorl
stc
mov
lret
fnstcw
sub
sub
push
push
in
pop
scas
sbb
sbb
je
mov
loope
sbb
jmp
mov
divb
add
aad
push
jmp
mov
popf
mov
add
sbb
inc
or
sub
repz
inc
stc
bound
jge
stc
xchg
ret
push
pop
and
test
sub
push
cmp
pop
mov
loop
fisubrs
and
stos
ficomps
sbb
shll
out
test
ret
mov
sbb
ror
adc
sub
and
push
std
sarb
inc
not
call
jbe
ret
mov
mov
push
push
decl
lahf
fmuls
xchg
lods
in
push
push
mov
mov
mov
outsl
fstpt
outsl
jl
loop
sub
js
notl
out
mov
jns
inc
push
enter
loope
adc
cmp
or
or
jmp
and
mov
cmp
aam
stc
call
jns
dec
mov
dec
push
test
pop
lods
dec
adc
mov
mov
xchg
mov
mov
test
adc
sub
outsb
cmp
sbb
popf
imul
inc
ja
dec
roll
and
out
repz
iret
jecxz
push
push
cmp
shlb
gs
rcrb
dec
das
imul
ss
test
lret
fcomps
xchg
stos
out
mov
xor
add
and
dec
inc
inc
push
or
gs
cmp
sti
rcrl
push
dec
or
mov
sbb
insl
push
push
dec
adc
hlt
cmp
inc
and
jg
mov
test
lret
push
dec
adc
lods
or
sub
repnz
and
lds
fldenv
test
bound
or
pop
shlb
in
inc
push
xor
mov
mov
popa
push
in
pop
lret
imul
mov
xchg
mov
mov
mov
and
adc
sbb
inc
ljmp
sub
das
jle
fmulp
js
mov
mov
repnz
xor
mov
xor
jae
mov
jae
loope
mov
cmp
dec
stos
ss
xadd
sbbl
xchg
lcall
inc
sub
fmulp
repz
sub
dec
sub
pop
xchg
into
add
aad
pop
cmpsl
and
add
fs
test
stc
xor
or
pop
push
mov
dec
xchg
rclb
mov
inc
sbb
inc
movsl
xchg
testl
imul
or
and
lcall
xor
sbb
sahf
das
mov
clc
addb
mov
pop
xlat
es
dec
push
dec
lods
jg
sub
mov
sbb
push
cli
jmp
cmp
mov
fadds
xchg
xor
andb
mov
pop
cmp
dec
popa
push
and
and
lea
xchg
sar
adc
adc
cmp
xlat
or
mov
movsb
div
adc
or
adc
loop
rcr
lret
xchg
cmp
movlps
pop
xchg
cwtl
ljmp
ss
cmpsl
aas
adc
sti
push
push
repnz
addr16
push
push
lret
cmp
adc
rol
pop
mov
add
push
lods
loop
push
cltd
jbe
mov
aaa
push
mov
out
fwait
test
xchg
dec
fwait
pop
movsw
cmp
cmp
mov
fcmovnb
adc
sbb
xor
xor
lret
and
stos
leave
inc
leave
fdivrp
cmp
xchg
push
popf
add
int
andl
inc
insl
cmp
adc
scas
push
push
fs
jp
lcall
inc
jle
pushf
mov
js
insb
leave
in
sub
or
iret
je
les
mov
sub
sub
jle
rorl
xlat
push
sbb
xor
sahf
scas
or
xor
push
adc
or
mov
lods
or
mov
mov
mov
add
movsb
in
add
ds
mov
push
lods
cs
into
adc
adc
mov
sub
in
jae
jecxz
inc
popa
jo
mov
js
cmp
xchg
dec
mov
push
inc
cld
jno
pop
inc
cli
push
xor
pusha
ret
add
int3
and
jns
xchg
sahf
inc
popa
push
push
add
jle
pop
movsb
mov
stc
dec
push
das
sbb
xor
repz
testl
jne
dec
icebp
add
cmpsl
cltd
cltd
das
cmp
pop
mov
js
pop
sti
or
mov
stc
mov
mov
lods
test
leave
xor
js
push
je
or
mov
jg
loopne
xchg
out
cli
cmp
icebp
fisubl
jg
sti
dec
loop
jnp
arpl
xor
push
and
mov
sahf
lret
mov
lods
push
call
loopne
mulb
xchg
shrl
mov
pop
jg
pusha
mov
adc
pushf
es
push
adc
adc
clc
lret
cmp
jp
shll
fnstsw
std
add
stos
es
pop
push
rcpps
cmp
mov
sarl
mov
aas
aas
push
imul
stc
and
sahf
sti
mov
das
push
insb
push
cmp
stos
lea
adc
pop
lret
adc
pop
pop
inc
fisubrs
sarl
in
jp
aas
xlat
scas
aaa
je
out
mov
imul
repnz
sbb
lods
int
adcb
inc
mov
aas
repz
adc
dec
sbb
inc
push
mov
fidivs
cwtl
pop
sub
inc
leave
fidivrs
fnstsw
cmp
vmwrite
rcrl
test
aaa
lds
ss
sbb
mov
js
cs
in
sti
cmp
fcomi
sti
das
inc
jp
mov
mov
pop
pusha
sbb
and
cmpb
pop
sbb
comiss
hlt
pop
fisttps
int3
repz
pop
dec
pop
pop
sub
push
loope
push
mov
pop
cmp
lret
pushf
xchg
hlt
loop
cmpsl
outsl
add
bound
sbb
testb
or
pop
sub
xor
dec
rolb
push
test
in
leave
repnz
fsincos
outsl
mull
aam
dec
cmp
pop
pop
rclb
mov
sahf
hlt
ret
mov
sbb
xor
sub
sbb
loopne
push
pop
jns
subb
mov
dec
mov
mov
or
cmp
sbb
shrb
loopne
jne
fistl
push
mov
sub
push
lds
sarb
cmp
aad
lret
clc
dec
adc
out
adc
ds
cld
adc
push
aaa
inc
ret
in
js
lahf
jne
sbb
ss
add
ror
mov
mov
sbb
cltd
mov
xchg
fldt
xchg
scas
movsb
popa
cmp
cmp
or
outsl
xor
fwait
icebp
out
jns
xlat
in
scas
dec
dec
xchg
inc
test
aad
dec
sti
mov
popf
or
into
cmp
imul
ret
imul
int
sub
mov
negb
test
filds
cmp
mov
mov
adc
loop
cltd
push
dec
push
scas
mov
inc
dec
dec
push
dec
xchg
daa
fwait
test
ds
cmp
lock
or
jnp
or
jmp
mov
sti
push
bound
mov
cmp
cmp
xchg
or
and
pusha
push
push
pop
cmp
mov
xor
ljmp
fstps
sbb
xlat
pop
pop
xor
add
sub
mov
push
jmp
cmpsl
stos
aad
jg
add
mov
cmp
jno
add
mov
sahf
push
dec
or
xchg
notl
xchg
jns
mov
mov
dec
out
push
push
in
push
data16
add
rdmsr
cs
or
js
cltd
or
scas
lock
and
mov
mov
inc
sbb
jae
xor
movsl
inc
daa
aad
adcb
leave
pop
out
jb
out
pop
push
iret
or
gs
imul
mov
stc
xor
shll
lods
cmp
or
inc
outsl
pushf
push
loope
push
js
mov
fcomp
xchg
leave
inc
cmp
sub
je
shrl
and
rcr
inc
dec
lea
sbb
out
xchg
dec
or
mov
mov
add
mov
xchg
mov
ficoml
dec
gs
pushf
scas
fidivl
pop
jg
das
pop
rolb
sarl
lret
cmp
mov
add
ret
lahf
mov
bound
pusha
scas
call
aaa
lcall
sbb
ljmp
mov
or
xor
xchg
add
mov
lahf
stc
movsb
jg
sub
adc
mov
jecxz
mov
repz
xlat
pop
mov
jo
xchg
dec
rcpps
andb
mov
xor
push
insl
sub
push
rol
mov
add
mov
cmpsb
pusha
xchg
add
out
jle
xchg
and
cmp
loop
repnz
mov
adc
adc
pusha
insb
sub
cmp
sub
fwait
ljmp
cmp
cmpsb
in
adc
in
push
gs
sbb
popa
cmp
pop
pop
mov
das
repz
dec
lcallw
xlat
jno
jp
out
call
rcll
fwait
xchg
jnp
arpl
mov
push
xor
fs
arpl
lret
std
xchg
out
add
mov
inc
jbe
xchg
or
xchg
ror
inc
sbb
push
insb
push
inc
pop
adc
dec
repnz
add
pop
fucomi
or
ja
enter
fisubl
inc
inc
fs
inc
inc
dec
pusha
addl
fistpll
lock
shrb
inc
xchg
sti
lahf
mov
add
lret
sub
xor
cmp
fwait
cltd
in
mov
mov
push
dec
sbb
push
add
push
loope
mov
je
xor
test
mov
xor
cmp
ljmp
xchg
insl
push
mov
cs
cmp
lods
cmp
cmpsl
jne
and
in
leave
sub
test
lcall
cld
cmp
mov
cli
adc
inc
and
xchg
xor
dec
clc
outsl
out
xor
or
lret
stos
sub
cmp
dec
inc
pop
push
inc
pop
fnsave
fwait
adc
xchg
mov
loop
shr
xchg
push
cmpsl
ljmp
push
or
add
add
pop
dec
imul
wrmsr
push
inc
mov
test
movsl
pushf
dec
pop
adc
call
xchg
pop
and
je
dec
inc
and
fwait
mov
and
jbe
pop
sub
or
cmp
jne
xchg
mov
pop
jp
icebp
cs
jl
push
or
lcall
xchg
mov
sbb
adc
movsb
adc
push
lcall
fs
push
stos
adc
add
pop
jmp
push
or
pop
cmp
out
ficomps
mov
cs
jmp
cli
mov
in
lahf
mov
out
sub
mov
xor
fldt
xchg
jno
xchg
adc
movsb
lcall
aaa
xor
pop
inc
mov
loopne
int
jbe
cmp
sbb
pusha
and
fsubl
les
ss
xchg
test
cmpsb
inc
mov
std
popf
call
repz
sbb
jge
push
jle
leave
stos
aas
dec
push
in
cwtl
stos
shrl
pop
jmp
mov
mov
test
gs
inc
arpl
movsl
mov
sub
cld
out
and
or
pop
lods
enter
dec
dec
cli
sbb
jnp
dec
addb
mov
xchg
mov
xchg
xorb
mov
add
mov
push
sub
aam
fnstenv
mov
insl
cmp
outsl
inc
jne
cmp
xor
enter
mov
sbb
jmp
add
cwtl
movl
jo
and
test
mov
mov
aaa
cmp
pop
mov
pusha
divl
int3
dec
imul
xchg
adc
mov
div
cmpsl
aam
and
jmp
insl
inc
mov
out
cltd
fimuls
lret
fistps
jo
xchg
jno
divb
xor
cmp
push
cltd
jo
sbb
push
mov
sbb
rorl
cs
jecxz
and
jb
xchg
cmp
inc
mov
push
or
xchg
imul
fwait
sub
aam
rcrb
cmpsl
sbb
sarb
or
xchg
lods
stc
pop
cmpsl
or
pushf
clc
jle
lret
lret
shrb
push
arpl
xchg
add
push
repnz
mov
sbb
sbb
dec
std
push
ja
mov
popl
push
clc
mov
pop
mov
and
xor
mov
add
xchg
inc
imul
test
fdivrs
add
fsubrs
sahf
mov
mov
xchg
xlat
xlat
mov
dec
stc
cmp
pop
jnp
fstps
push
mov
sbb
pop
fists
add
push
pop
jl
pop
rclb
sub
sti
jmp
dec
cmpsl
push
ss
cltd
jle
inc
sub
call
inc
shlb
out
cmp
mov
mov
hlt
lahf
inc
cwtl
mov
out
jno
sub
cmp
dec
xor
test
jns
leave
dec
xchg
stos
inc
nop
das
ss
aam
sar
push
cltd
inc
inc
clc
into
dec
xor
xchg
test
scas
fwait
adc
adc
pop
add
dec
jmp
leave
jg
adc
movl
mov
pop
mov
mov
leave
pushf
pop
rorb
cmp
inc
push
outsl
lock
out
ss
cmc
lods
out
gs
dec
ljmp
pop
adc
xchg
addr16
outsl
ficomps
in
das
jnp
sti
and
add
fisubl
pop
hlt
data16
std
lret
icebp
adc
xor
dec
imul
xchg
push
jp
fisttps
enter
inc
dec
push
sbb
out
cmc
pop
dec
cs
bnd
fwait
mov
jbe
xor
test
xchg
push
insb
cmpsl
push
stos
adc
mov
mov
adc
jne
aam
cli
mov
cmp
mov
fstpt
push
aas
jb
adc
in
dec
stc
push
adc
in
jmp
dec
dec
inc
in
xlat
sbb
add
pop
cmp
jp
adc
call
adc
cld
fstl
mov
jle
movsl
push
ljmp
pop
lret
xchg
pop
jnp
sub
mov
std
sub
cmp
icebp
or
or
fcomps
pop
sarl
call
mov
in
mov
cmp
cmc
mov
aam
cmp
repz
pop
inc
mov
daa
aam
gs
pop
pop
lea
pop
pop
push
arpl
inc
je
pop
sti
nop
pop
mov
out
pop
pop
dec
xchg
jo
inc
mov
outsl
out
movups
mov
jmp
sbb
or
cwtl
shlb
inc
dec
js
or
dec
fidivs
inc
jb
jl
push
xchg
sub
mov
pop
adc
inc
jmp
dec
fwait
inc
mov
daa
mov
mov
jl
adc
xor
or
loopne
adc
and
xchg
je
dec
xchg
cs
sbb
xchg
mov
push
push
mov
pop
fisubrl
and
or
cs
sub
test
scas
sahf
and
dec
dec
xor
pop
lret
nop
fmul
mov
imull
fdiv
stos
adc
and
pop
test
les
push
or
jb
jmp
pop
pop
jae
gs
sub
insl
push
xchg
stc
or
shll
js
stc
xchg
icebp
daa
stos
andb
mov
sti
inc
mov
aas
adcb
enter
adc
popa
xor
xlat
repz
inc
out
ret
subb
sbb
inc
jnp
ret
xchg
rorl
iret
inc
lods
cmp
call
or
mov
rol
test
out
dec
and
lods
jbe
and
add
jno
dec
mov
mov
movsl
frstpm(287
cmc
rcr
std
mov
jmp
mov
lahf
jp
inc
xor
in
pop
xor
ret
jo
mov
clc
dec
cs
es
mov
sub
ja
push
fcomps
test
push
and
nop
mov
fwait
adc
push
pop
xchg
and
ds
fnstsw
and
mov
bnd
aam
ds
or
loop
push
adc
add
fxch
cmp
andb
std
jg
xor
and
cmp
sbb
jle
jp
jp
sti
pop
push
push
fildl
imul
ss
dec
out
cltd
ss
or
ss
fnstcw
ds
cmp
in
mov
dec
movl
lret
push
sub
mov
lods
or
jb
fiadds
pop
mov
push
or
mov
outsb
jmp
and
scas
shrl
sbb
sbb
jmp
dec
lret
lcall
pusha
sbb
imul
lcall
dec
sub
fwait
xchg
int
shlb
sbb
les
cld
call
das
dec
ret
fnstcw
jnp
xchg
pop
mov
mov
fcomps
push
xor
push
jne
outsl
call
fisttps
push
adc
jl
fiaddl
sub
popf
push
xor
jecxz
sub
sub
mov
bts
inc
sar
xlat
xchg
mov
adc
inc
jb
call
in
jb
stos
js
cwtl
cmp
xchg
jae
sbb
cmc
mov
pushf
fwait
push
inc
cwtl
cs
out
pop
sbb
xor
in
and
jp
xor
push
imull
mov
mov
call
dec
pop
pop
cmc
cwtl
inc
push
push
mov
dec
leave
lods
mov
add
lods
pop
xor
xchg
push
push
sbb
push
jo
jg
dec
xlat
enter
cmp
inc
cmp
bound
jne
dec
fistpl
pop
or
movsl
push
mov
mov
shrb
jno
jg
rolb
mov
dec
sub
sbb
mov
dec
divl
push
cltd
daa
mov
imul
xchg
jb
pop
test
jne
sbb
in
and
jp
data16
pop
lods
sbb
outsb
inc
andb
pop
into
xchg
adc
adc
sti
jp
adc
pop
test
cmpsl
pushf
and
mov
repz
adc
jo
lahf
xchg
mov
mov
int
std
dec
cli
xor
dec
inc
sub
nop
mull
add
mov
push
dec
sbb
mov
aad
cli
cmp
les
pop
mov
mov
es
popa
inc
lahf
cld
test
add
mov
sub
mov
push
test
imul
fidivs
xor
jo
add
insb
lcall
mov
sub
or
outsb
fldcw
stc
das
arpl
xor
sti
fldcw
lahf
mov
inc
mov
adc
push
adc
idiv
hlt
adc
cmp
mov
add
cltd
js
push
push
lret
fwait
mov
test
push
xchg
sub
repz
and
cmp
rol
push
pop
xchg
cmp
or
pop
push
sbb
in
cmp
or
jno
sub
and
jns
decl
cmpsl
jp
lds
in
hlt
push
mov
and
sbb
iret
inc
das
ret
divl
jp
jns
mov
movsb
sub
mov
jne
push
dec
shll
int
ljmp
xlat
xchg
pop
and
pop
push
push
or
aam
or
xchg
adc
xor
std
ficoms
in
lretw
outsb
cmp
jle
popf
mov
mov
ss
or
push
cmp
mov
xchg
mov
dec
inc
cmp
ds
std
ljmp
bound
jmp
fwait
cli
cmp
and
lret
sbb
jb
iret
cmp
or
jmp
jne
sub
out
mov
js
mov
iret
and
out
cltd
xchg
mov
fldt
jmp
loope
outsb
lds
push
test
dec
bound
cmp
xchg
call
mov
int3
lcall
lods
imul
dec
jb
into
sub
cmp
and
xchg
push
divb
sub
jle
test
mov
xor
cmc
cmc
rorl
mov
testl
sub
cmp
rclb
fs
loopne
and
adc
mov
cwtl
adc
lret
hlt
cmp
je
fcomp
jl
stc
adcb
and
jae
pop
cmp
ja
push
sub
shr
mov
sub
or
lahf
xor
insl
out
lds
jns
adc
mov
and
add
pop
cld
inc
loopne
sbb
push
adc
inc
mov
xchg
push
sahf
out
sahf
dec
enter
gs
flds
cwtl
ror
or
in
out
ss
sbb
mov
incb
cwtl
xchg
xchg
aam
jle
jle
pop
and
stos
cmp
js
sbb
push
dec
mov
cmp
es
xor
or
add
mov
xchg
lret
testb
ljmp
shl
es
xlat
movsl
ja
aaa
ret
mov
xchg
lahf
out
jnp
jns
add
fwait
or
mov
push
fucomi
ficoml
faddp
mov
xlat
mov
jl
ljmp
cld
loop
cmp
ret
fisubs
mov
xor
hlt
pop
neg
xor
adc
lret
cmpl
cmp
push
ss
inc
xchg
movsl
cmpsl
fwait
loop
adc
cmp
repnz
push
mov
decl
mov
pop
mov
fstl
mov
lahf
xchg
mov
fsubp
outsb
fwait
push
or
push
cmp
pop
push
adc
test
mov
paddusb
pushf
xchg
and
rclb
xchg
je
add
cmp
sbb
mov
fistpl
loopne
xchg
and
jecxz
imul
dec
mov
stos
ja
add
adc
xchg
adc
inc
xlat
jl
dec
cmp
inc
pop
arpl
jbe
xor
fs
sti
lret
pop
mov
jl
dec
xor
push
pminsw
popf
sbb
adcl
cmp
cld
jns
dec
insb
aad
es
xchg
adc
xchg
loope
dec
in
das
push
or
or
pop
dec
adc
gs
rep
push
sbb
rcll
fwait
push
leave
pop
stos
cwtl
aam
or
dec
adc
cmc
inc
push
movsl
push
push
push
les
push
adc
sbb
cmp
xchg
adc
mov
and
loope
xlat
sub
push
mov
sub
push
inc
ja
mov
stos
popa
pop
sarl
sub
mov
xor
loop
sub
sbb
and
push
in
repnz
repz
or
push
cs
dec
push
enter
scas
pop
fisttpl
pop
loop
push
or
ror
cmc
ljmp
or
pop
repz
pop
aas
cmpsb
xlat
hlt
cmp
das
jmp
das
cmp
fwait
cmp
pop
dec
subl
das
insl
aaa
mov
dec
inc
xchg
das
les
jae
mov
sbb
inc
xchg
ss
mov
cwtl
fs
add
shlb
sbb
sub
sbb
adc
jnp
mov
stos
lret
addr16
dec
loop
pop
inc
pop
lsl
stos
inc
add
cmp
lret
or
push
jmp
test
movsl
or
test
fidivs
sahf
xlat
cmpsl
das
in
add
je
mov
cld
out
cltd
shr
push
pop
xor
fwait
hlt
jecxz
xor
push
pop
iret
insl
cmp
dec
int
cld
cmp
xor
in
or
and
dec
cs
pop
adc
push
xchg
jae
ret
pop
jmp
sub
cmp
rcll
fimuls
adc
add
adc
sub
add
loopne
cli
mov
insl
pop
fxch
cwtl
xlat
mov
mov
js
mov
rep
into
pop
shlb
xor
push
sub
clc
pusha
scas
push
out
jo
jmp
mov
push
or
pop
inc
sub
xchg
sbbb
add
ror
int3
testl
repz
mov
movsl
arpl
pop
add
aam
sub
xchg
jmp
rorl
repz
pop
popf
mov
xlat
jp
dec
push
out
sub
scas
lea
and
push
in
mov
adc
push
jle
add
push
sbb
sub
dec
test
lods
mov
fisttpl
mov
mov
bound
lcall
xchg
cs
dec
insb
pop
pop
int
cmp
cmp
or
cld
add
adc
fmull
mov
aam
push
lds
mov
mov
outsb
aad
sbb
fcmovne
mov
in
dec
dec
pop
int3
adc
dec
jne
imul
adc
lret
dec
adc
jnp
lret
cs
imul
jae
dec
push
shrb
push
pop
push
imul
negb
inc
ret
mov
mov
add
push
lcall
out
pusha
aaa
bound
sbb
cmp
xchg
adc
bound
fldt
sbb
adc
es
push
cmp
shr
insb
mov
mov
mov
jmp
fcmovnb
mov
in
mov
insb
add
pop
or
or
pushf
aas
test
push
and
and
sarl
xor
filds
push
cmp
iret
or
fwait
push
cmpsl
aaa
and
jnp
enter
adc
pusha
mov
mov
lods
sbb
pop
mov
pop
movsb
out
rcll
adc
aaa
out
inc
jno
ret
mov
sti
dec
sub
or
test
lcall
adc
mov
enter
or
enter
cmp
testl
push
ja
push
jmp
dec
jne
inc
jnp
cmp
sbb
into
sti
es
dec
pusha
sbb
fcmovnbe
xchg
jae
pop
lret
lret
push
in
mov
sbb
testb
dec
jo
rolb
xor
cmc
repnz
ss
xchg
inc
imul
movsb
int3
outsb
xor
mov
test
lcall
fistl
adc
mov
sub
mov
dec
mov
pop
scas
adc
mov
xor
adc
fs
push
cmp
cmp
xchg
xor
mov
add
sbbb
pop
add
lods
lock
pusha
xor
push
inc
lock
cld
xlat
push
cli
xchg
pop
mov
loopne
lret
xchg
stc
enter
std
clc
pop
popl
ljmp
cmp
sahf
loope
mov
test
imul
rcll
stc
add
std
shll
fcomps
aam
inc
pop
stos
pop
popf
enter
fcmovnu
rolb
xorb
cwtl
mov
xchg
pushf
int
lods
add
pop
sbb
adcb
pop
push
popa
xor
or
iret
xchg
mov
and
add
rcrb
in
loop
pop
add
pusha
xor
push
sti
mov
cmp
push
add
out
or
pusha
push
mov
ss
or
push
mov
mov
sub
outsb
adc
adc
sbb
pop
aaa
sbb
loope
movsl
xor
iret
mov
lods
mov
or
ss
mov
xor
stos
outsl
mov
je
or
xchg
dec
push
in
int3
push
leave
dec
aam
jno
into
inc
enter
pop
dec
fldenv
pavgw
mov
subl
push
sbb
xor
roll
mov
cmp
rclb
xor
cltd
pop
dec
repnz
pop
dec
push
push
adc
xchg
mov
outsb
sub
mov
stos
lcall
xlat
mov
dec
les
jle
stos
xchg
rcll
sbb
ss
sbb
jmp
push
cmp
jmp
in
mov
clc
rcrb
xchg
arpl
inc
fisubl
xchg
shr
jns
aad
jmp
ja
jnp
dec
push
lods
call
dec
pop
ror
rorl
sub
xor
push
pop
xor
lahf
lret
sbb
lock
jp
fldl
and
adc
push
mov
subl
mov
sbb
mov
fwait
sub
mov
sub
bound
fwait
add
push
outsl
adc
cs
adc
push
cwtl
je
pop
adc
inc
mov
dec
mov
cmp
in
test
fmul
and
jl
inc
out
fsubp
xchg
mov
inc
enter
fcomps
pushf
adc
jns
and
or
out
fstl
out
hlt
pshufw
clc
xchg
jnp
mov
jo
dec
mov
ret
adc
int3
cmp
out
jns
movsl
mov
jne
pop
push
cmp
and
outsl
movsl
fdivs
cmp
icebp
adc
shll
shrl
pop
out
pop
xchg
push
adc
loope
jno
xchg
mov
sti
mov
sbb
add
or
jns
mov
cld
call
cmp
xchg
mov
loop
dec
adc
mov
mov
jbe
add
or
es
adc
sti
ret
dec
fstpl
lret
stc
pop
and
mov
loop
into
pop
mov
jmp
fistl
xchg
add
or
outsb
clc
push
enter
fldcw
iret
sar
push
mov
cld
push
jnp
lods
ret
cmpsb
cmp
popf
mov
ds
cld
sub
pop
fildl
repz
inc
pop
mov
xor
jge
adc
inc
dec
lods
neg
cmc
sar
jmp
insb
outsl
rcrl
push
mov
mov
bound
cmp
pop
adc
sub
jmp
and
sbb
fmul
outsl
xor
mov
lds
sub
mov
mov
jg
or
leave
adc
das
pop
inc
adc
add
push
cmp
dec
cmp
push
or
movl
repnz
inc
and
in
jo
push
jecxz
jmp
adc
cmp
mov
flds
das
es
or
dec
clc
stos
sbb
mov
lea
popa
ja
mov
mov
mov
fisttpl
mov
mov
ss
sub
lcallw
dec
add
adc
inc
jbe
call
aam
push
fwait
dec
test
pop
and
sbb
sbb
mov
cmp
lods
inc
adc
add
adc
rcll
push
in
xchg
cmp
push
inc
lcall
jb
xor
js
inc
mov
scas
or
mov
xchg
cmp
push
dec
cwtl
inc
sbbb
leave
fdivl
cmp
jno
or
stos
xchg
ljmp
cld
push
adc
daa
aam
push
sub
pop
lods
and
popa
pop
dec
mov
out
in
cmp
sub
or
push
shll
push
insb
nop
mov
inc
in
data16
xor
inc
or
push
or
adc
pop
je
fnstcw
mov
mov
stos
scas
or
push
xchg
pop
sarb
fwait
pop
mov
inc
out
mov
mov
mov
pop
pop
mov
jg
in
mov
jo
loope
nop
ss
push
pop
mov
xor
xor
dec
mov
cmc
xor
and
inc
fidivs
push
add
sbb
add
lahf
leave
push
cs
or
xor
dec
add
xlat
jecxz
mov
mov
sbb
lret
std
cltd
xchg
xor
mov
test
ss
aam
cmp
mov
loop
scas
pusha
bswap
adc
mov
mov
adc
push
xor
mov
repz
or
sbb
xchg
out
imul
js
or
pop
mov
sub
push
jnp
cmpsl
mov
inc
and
xlat
insl
and
cmp
push
inc
push
jnp
xchg
in
add
es
mov
mov
xchg
repnz
sub
fadds
aad
adc
add
stos
mov
das
mov
dec
out
stc
mov
dec
mov
adc
sub
cmpsl
faddp
mov
mov
xchg
movsb
cmp
adc
dec
loop
outsl
or
dec
sahf
sub
xchg
orb
cmp
cmp
mov
out
rolb
or
mov
and
cs
aad
cmp
add
pop
and
arpl
mov
pusha
mov
jmp
mov
inc
test
pushf
imul
mov
sbb
subb
cs
fwait
dec
mov
mov
or
into
repnz
dec
js
daa
add
pop
adc
xor
adc
pop
jecxz
jg
add
push
shrl
imul
fs
jbe
out
jnp
sbb
mov
dec
inc
xchg
mov
or
mov
cmp
subl
push
mov
pop
lods
adcb
mov
add
pop
mov
jl
xchg
out
ret
iret
in
lret
out
xor
cmpsb
push
aas
ss
mov
push
fsts
mov
cmp
rolb
jnp
adc
fs
cs
jp
xchg
rclb
ss
push
outsl
sbb
in
ds
or
mov
fwait
push
or
imul
fadd
fistl
dec
jnp
dec
mov
mov
fldt
adc
call
pusha
dec
or
nop
adc
cmpsl
mov
lock
lods
dec
aad
ret
mov
xor
sbb
or
push
push
xchg
push
shll
push
adc
push
lcall
dec
push
mov
add
sbb
xchg
and
insb
push
mov
adc
dec
adc
and
addr16
adc
mov
cmp
push
shll
sbb
aad
adc
xor
mov
dec
mov
xor
mov
xor
subl
sbb
add
jmp
dec
pop
outsl
stos
sbb
scas
cmc
mov
cmpsb
dec
icebp
js
in
sbb
adc
imul
push
add
mov
stos
xor
mov
add
cmp
pushl
lret
loope
mov
pop
sbb
mov
xor
js
incl
xor
in
test
sub
into
in
in
dec
cli
iret
mov
sbb
xchg
sbb
movsl
add
add
add
leave
in
aad
push
shll
test
cmp
in
in
xchg
sub
sbb
push
int
mov
xor
xor
dec
ja
push
push
or
cli
xchg
ljmp
iret
jae
push
push
xchg
aad
sub
iret
mov
jmp
push
stos
jbe
jmp
sbb
pop
adc
jecxz
sarb
jnp
mov
iret
lds
cmpsl
lret
negb
push
addl
cmp
sarl
mov
in
stc
adc
xor
icebp
das
test
pop
push
ret
xor
lock
mov
cmp
xchg
pushf
jnp
fs
test
pop
xor
pop
dec
rcrl
int
outsb
or
sti
jno
xchg
mov
adc
xor
cmp
push
inc
movsb
xchg
cltd
adc
mov
jl
jnp
dec
jbe
rclb
leave
sarl
dec
imul
in
aaa
shll
dec
test
pop
mov
jae
popa
fcoms
push
outsl
insb
fdivs
not
sub
inc
repnz
dec
or
xchg
mov
adc
shll
adc
pop
sbb
pop
add
arpl
push
out
scas
and
fildl
hlt
inc
xor
dec
inc
mov
and
mov
pop
aad
push
jecxz
xor
push
jg
add
and
test
sub
cld
sub
jg
adc
xchg
push
cs
pop
sub
cld
xchg
ja
push
rcr
sub
add
sub
add
sbb
ljmp
push
mov
push
pushf
movsl
add
jns
jge
pop
nop
sbb
add
lret
mov
jns
and
leave
mov
hlt
mov
sub
sub
or
out
popf
sub
jb
xlat
testb
inc
mov
inc
xchg
scas
es
lds
push
sbb
mov
dec
cmp
sbb
test
ret
sub
cmc
dec
rorb
push
js
mov
lods
mov
xorl
mov
icebp
stos
lahf
nop
popa
jb
movsl
incb
and
sti
hlt
leave
orl
aaa
push
sub
mov
sub
or
in
pusha
fdivl
push
pcmpgtd
inc
jo
js
inc
sbb
sbb
loop
xchg
sub
pop
mov
jge
vpmacssdqh
fildl
out
jnp
push
push
stos
xchg
cmp
sbb
bound
push
aam
cmp
dec
cmp
lret
mov
popa
jbe
outsl
sub
xor
push
pop
fdivrs
fiaddl
add
popa
pop
fwait
jae
xlat
inc
xchg
inc
mov
into
pop
stos
pushf
cmp
mov
mov
add
adc
das
inc
lods
and
sub
sbb
lea
stos
adc
das
mov
sub
jl
call
xchg
xor
add
lret
lret
xchg
imull
lcall
lds
pop
loope
sbb
mov
arpl
pushf
dec
imul
jmp
es
push
ss
push
fldt
add
out
fiadds
cmp
xlat
xchg
push
cmp
inc
inc
mov
sub
or
js
push
push
push
bound
and
lahf
cld
push
xor
sub
inc
mov
mov
pop
jbe
dec
cmp
mov
fisubrl
push
out
test
ljmp
inc
ja
insl
stos
out
push
mov
cmp
mov
mov
inc
loop
fwait
int3
jns
adc
sub
das
mov
lret
addr16
mov
stos
inc
push
lods
xor
sbb
jp
xlat
cmc
hlt
push
cmp
adc
sbb
sti
ds
bound
shrl
out
push
or
shrl
sbb
out
pop
adc
mov
xor
lret
in
sbb
jecxz
or
inc
sbb
imulb
fistpll
dec
or
xor
popf
xor
ret
fs
mov
inc
mov
es
push
mov
cmp
shll
subb
gs
lcall
jnp
insl
jmp
std
cmp
adc
dec
pop
or
push
pop
lahf
or
ret
outsl
xlat
push
call
hlt
mov
push
enter
hlt
rolb
fwait
jo
leave
cmp
loope
in
test
fldpi
or
inc
sub
pop
add
jmp
out
out
das
loopne
or
sub
out
mov
xchg
or
sbb
inc
inc
push
mov
ffreep
in
stos
push
scas
mov
ds
shlb
fldl2t
mov
xchg
loopne
jecxz
inc
xchg
mov
enter
movsb
xor
std
pop
in
adc
pop
pushl
push
fimull
int3
loop
and
insl
pop
and
fldcw
das
rcl
add
cmp
pop
push
out
bndstx
aad
clc
mov
dec
mov
into
xchg
repz
sbb
es
or
mov
mov
cmp
cmp
and
js
xor
pop
rcll
dec
sbb
leave
jl
mov
rorl
inc
or
inc
and
mov
xor
and
popf
mov
xlat
pop
or
notl
out
jg
mov
mov
mov
jo
mov
mov
inc
popa
adc
rcll
cmp
fst
push
ret
cwtl
aad
out
mov
repz
inc
lret
jle
scas
js
jnp
sar
push
cltd
push
lret
in
cli
pop
lret
icebp
sub
push
sub
pop
jmp
xor
bound
inc
fwait
sti
push
pop
cltd
in
jp
mov
fisubs
jecxz
push
popf
inc
out
aad
sub
cmp
adcb
ss
inc
mov
sbb
jge
xchg
jp
or
xor
jo
xlat
adc
mov
mov
sbb
sub
lret
cmpsl
aad
sbb
adc
clc
and
lahf
dec
push
mov
xchg
push
mov
dec
imul
mov
push
loopne
scas
pop
je
add
inc
ja
stos
lods
out
imul
pop
push
add
dec
stos
outsl
xor
ret
mov
mov
xor
aas
pop
dec
lods
sbb
in
jnp
xor
xor
push
sahf
inc
jle
sahf
and
mov
dec
add
xor
and
pop
stos
sbb
sub
idivb
or
push
cld
es
daa
test
cmp
lcall
mov
test
pop
mov
je
xchg
pop
fwait
push
push
imul
mov
push
sub
scas
inc
dec
cmc
mov
inc
adc
cli
leave
mov
jmp
push
adc
pushf
fimull
cmpsl
dec
or
mov
xlat
mov
ret
adc
adc
lret
or
aas
fldenv
sbb
ja
dec
lret
pop
pop
cmp
sarl
fistpll
jns
cmp
mov
in
mov
aaa
test
add
sub
mov
add
adc
lcall
roll
sub
xor
sub
test
xor
push
dec
pop
cmp
lcall
lcall
scas
adc
xor
and
in
rclb
push
pop
and
push
or
ficompl
or
xor
adc
cltd
inc
cli
scas
adc
adc
mov
push
aam
lds
fildl
jb
jmp
aas
mov
adc
pusha
dec
nop
mov
inc
lods
xchg
fwait
std
or
push
push
leave
or
jmp
mov
mov
jno
ret
xchg
dec
ret
and
leave
inc
pop
cmp
cmpsb
fistpl
cwtl
in
ja
inc
decl
and
lods
xchg
mov
pusha
lock
mov
jnp
inc
leave
lea
xor
dec
inc
and
sbbb
cwtl
inc
jne
cmc
and
stos
das
adc
ss
push
xlat
inc
push
sbb
dec
mov
push
mov
or
push
mov
lret
clc
mov
sbb
je
mov
repz
push
xchg
mov
pusha
dec
xor
fisttpl
cltd
push
das
lcall
cmp
fldt
push
std
xor
in
add
adc
xchg
cmp
mov
jg
push
out
sub
inc
inc
pop
and
shll
loopne
sbb
dec
test
fldenv
pop
lea
sub
lret
cmp
daa
and
fmull
pop
mov
ud2
or
fcoml
or
sbb
pusha
popf
sbb
pop
dec
ljmp
sbb
push
or
sahf
sub
mov
and
pop
push
mov
lahf
mov
and
sti
jg
sbb
inc
testb
enter
pop
les
dec
mov
jo
mov
xor
jle
ficomps
mov
xor
jl
pop
fwait
and
addr16
inc
dec
inc
jb
ret
imul
cmpsl
lret
out
add
jnp
mov
xchg
test
dec
popa
out
stos
mov
xor
lret
fs
fadd
mov
jmp
or
push
pop
lret
daa
jge
mov
cli
dec
mov
lret
mov
popf
cli
enter
loop
push
rcrb
inc
mov
dec
add
dec
and
pop
cmp
adc
xlat
xor
xchg
sbb
scas
dec
mov
insl
popf
fwait
pop
scas
js
pop
add
js
std
loop
adc
cmp
mov
outsl
sbb
hlt
cmp
dec
roll
xlat
in
bound
loop
divl
into
mov
daa
call
xchg
cmp
adc
lcall
fnsave
xor
cld
nop
std
pop
xchg
insl
push
add
pop
sti
mov
sub
pop
fwait
ret
add
sbb
dec
test
adc
or
pop
push
int
fwait
or
pushf
repz
cmp
sti
and
sbb
push
adc
das
mov
jns
sti
add
mov
sbb
pop
xchg
or
cmp
popf
xor
arpl
and
adc
add
mov
and
insl
sbb
in
dec
mov
mov
lahf
in
imul
popf
xor
rcr
or
jns
sub
aam
fldt
data16
incb
repz
stos
pop
and
xchg
sbb
dec
pusha
imul
and
jmp
js
das
mov
cs
push
sub
or
inc
xchg
mov
std
and
fucomi
sub
fisubl
xor
pop
movl
sbb
shll
test
cmp
shll
dec
lock
inc
xor
out
xchg
daa
dec
scas
dec
ss
adc
sbb
mov
xor
mov
jb
mov
adc
scas
mov
push
imul
imull
stos
jne
xor
and
pop
push
mov
loop
loop
testb
add
loop
sbb
cmp
ljmp
lods
js
outsb
mov
jge
pop
mov
or
adc
cmp
mov
call
adc
and
cmp
in
xchg
jmp
inc
push
adc
push
mov
mov
test
and
cmp
push
xchg
jle
lock
shrb
ss
iret
mov
cmp
fdivrs
add
dec
pop
mov
pop
xlat
jecxz
dec
cmp
das
xchg
dec
arpl
rolb
std
pop
sbb
imul
sub
xor
ficoml
xor
adc
cmp
dec
mov
ss
and
lret
ret
push
sbb
lds
sbb
lahf
mov
sub
xor
jnp
pop
es
pusha
movb
jno
fnsave
add
scas
jge
xor
add
daa
stc
or
inc
xor
push
adc
inc
inc
cmp
dec
imul
inc
sbb
mov
xor
lds
dec
dec
xchg
hlt
cmp
sub
fmulp
xor
add
paddd
js
nop
mov
in
sbb
mov
push
in
sahf
aad
xor
inc
inc
movsl
pop
shlb
hlt
mov
fcomps
cli
or
stc
int3
and
mov
xor
pop
push
outsl
or
inc
inc
loope
dec
repnz
inc
or
xchg
dec
inc
sbb
jg
sbb
shl
lret
mov
and
data16
adc
jecxz
aad
mov
cltd
sub
fnstenv
mov
das
mov
shr
dec
lret
inc
mov
dec
mov
cli
push
jns
adc
sbb
mov
dec
add
out
push
aas
adc
or
xchg
stos
or
roll
adc
hlt
orb
push
sbb
movsb
mov
loopne
add
aas
hlt
sbb
push
and
add
jnp
icebp
sbb
sbb
xlat
gs
xlat
imul
inc
xlat
aad
lahf
adc
adc
subb
jno
pop
pusha
shl
popf
ret
pusha
hlt
mov
jo
dec
push
rclb
rcr
cli
cmp
lds
pop
aas
dec
cs
test
stc
pop
mov
in
out
or
or
out
test
sarl
in
leave
movntps
fisttpl
shlb
add
stc
pop
je
sbb
cmp
jnp
xor
add
sbb
or
out
sub
mov
and
xchg
pop
std
adc
push
rcl
pusha
subb
jmp
sbb
pop
lcall
leave
sti
cmp
and
jp
mov
jg
scas
push
mov
dec
cs
inc
cmp
pop
and
lds
lods
icebp
push
jnp
lcall
ds
inc
in
in
lcall
adc
sbb
fs
push
and
cwtl
xlat
mov
pop
arpl
xor
push
insb
clc
mov
pop
add
sub
cmpsl
push
sbb
pushf
rorl
xchg
jns
aad
mov
mov
mov
dec
scas
pop
sbb
imul
adc
pop
test
shl
jmp
repnz
cs
ss
add
and
aaa
inc
scas
jnp
push
cld
fwait
jecxz
mov
or
push
sub
dec
icebp
xchg
pop
je
dec
jmp
movsb
push
sub
add
mov
aad
xlat
ret
clc
inc
mov
inc
or
push
lds
popa
sbb
lret
xchg
fdiv
call
clc
sbb
push
xor
sub
imul
xor
call
leave
inc
jns
mov
cmp
inc
or
xor
outsl
or
sub
movsb
scas
movsl
sbb
sbb
ficoms
jge
push
out
popf
push
add
xor
in
fisttpl
xchg
std
xor
gs
call
sub
inc
sub
pop
jae
pop
test
fstpt
fists
stos
dec
scas
fstpt
push
inc
or
shlb
pop
mov
lods
adc
or
rorl
xor
push
inc
mov
cmp
sub
lret
popa
mov
lret
fcoml
cmp
sarl
not
aad
inc
out
shrl
cmp
mov
pushw
cltd
in
roll
out
or
adc
fdivrs
nop
lock
mov
push
rorl
pop
fwait
lods
mov
dec
pop
jl
xor
ret
dec
pop
xor
loop
push
daa
push
mov
pop
std
fnstenv
jb
pop
lret
pop
jge
das
fs
cmp
ja
int
mov
testb
adc
mov
push
sub
out
mov
sti
mov
pop
push
inc
add
dec
lock
cld
les
sbb
cmp
xchg
mov
cli
ficomps
lea
fwait
cwtl
addr16
int3
lds
stc
mov
fildll
leave
and
loopne
dec
outsb
xchg
imul
ss
sub
aaa
cli
jbe
adc
ja
xor
out
sub
movsl
xchg
adc
pop
inc
pop
lods
mov
cmp
dec
jne
pop
lcall
lea
cli
xchg
cmpsl
mov
mov
lret
mov
fdivrl
fwait
or
cmp
or
push
aaa
imul
fidivl
xlat
es
mov
pop
jb
int3
shlb
faddl
mov
out
inc
sti
divb
ss
pop
cli
cli
adc
call
sbb
push
inc
lahf
ret
es
mov
ljmp
mov
push
mov
clc
adc
out
push
repnz
pusha
mov
aaa
pop
out
rorb
sub
nop
pop
cmc
adc
lea
loop
aaa
test
shr
scas
je
mov
es
andl
cli
and
aaa
sbb
in
jge
sbb
sbb
add
adc
out
and
adcb
imul
xchg
lret
imul
sub
pop
xchg
jle
cli
dec
xchg
xor
cmpl
inc
add
pop
pop
cltd
sbb
rorl
fildl
sbb
sbb
addb
rcll
imul
push
imul
pop
dec
dec
jle
xchg
xchg
and
jecxz
das
adc
lods
mov
xor
clc
scas
cmpsb
xlat
roll
sbb
xor
adc
lret
add
mov
in
pop
decb
and
xor
dec
dec
cs
popa
cmp
mov
xor
push
je
call
out
rclb
sbb
stos
cmp
sar
test
imul
pop
dec
mov
iret
inc
mov
xor
add
jp
dec
jmp
xor
pop
fcmove
cli
push
mov
sbb
lods
xor
hlt
cli
adc
imul
nop
xlat
lea
popa
lods
xor
sub
adc
cmp
pop
inc
jle
ss
out
xor
xor
inc
adc
call
fisttpl
iret
imul
xchg
std
fld
iret
mov
sbb
out
pop
sbb
leave
mov
out
dec
xor
push
adc
mov
xor
adc
mov
pop
cs
pop
call
xor
scas
incb
pop
fisubrs
xlat
jmp
sbb
into
movb
mov
out
rcl
adc
mov
aaa
cmp
leave
pusha
ret
pop
or
add
lods
mov
jp
jge
xlat
insb
insb
jno
dec
sarb
push
shrl
jmp
dec
addr16
jp
lret
mov
inc
xchg
xchg
lods
scas
fnstcw
xor
or
lahf
pop
inc
push
fidivs
incl
sbb
movsl
push
add
cmc
popa
mov
xor
popl
mov
loop
jno
iret
and
or
cmp
mov
rcl
fcoms
rol
sbb
or
call
out
cwtl
scas
xchg
stc
push
ficompl
mov
bswap
mov
or
cmp
cmp
dec
ljmp
lahf
lea
outsl
and
push
icebp
adc
repnz
add
lret
pop
cmp
jnp
imul
stos
jne
mov
pop
cs
icebp
jl
and
dec
ret
inc
das
stc
dec
mov
add
xor
lahf
hlt
dec
test
sti
jbe
xor
jo
ljmp
push
sbb
mov
rcll
mov
mov
adc
jle
xchg
mov
inc
pop
es
into
inc
jmp
cmova
push
cmp
adc
loope
paddsw
imul
movsl
mov
sub
mov
out
cmc
mov
adc
mov
andl
xor
sbb
sub
jae
xor
test
dec
push
lea
lds
sbb
gs
jnp
sub
ljmp
pushf
rorl
sbb
push
jmp
jo
push
int
mov
or
js
lds
bound
fwait
pop
push
mov
push
push
and
xor
mov
jle
push
xchg
ss
inc
add
fucomip
scas
inc
adc
xor
adc
test
out
adc
inc
sub
lret
into
in
lahf
cltd
xor
clc
xchg
inc
and
in
lds
and
mov
cwtl
dec
dec
dec
sub
cmp
jl
aas
or
sbb
inc
push
sub
out
ds
rcrl
dec
loopne
pushf
inc
aaa
push
stos
jg
push
sub
xchg
inc
add
mov
sahf
ljmp
inc
or
pop
adc
mov
rorl
test
jae
xor
push
mov
mov
mov
fyl2xp1
in
out
mov
ja
mov
cmp
pop
shll
les
jbe
push
xor
sbb
adc
pop
addl
or
push
lock
push
out
aaa
inc
dec
sub
stc
or
fldl
leave
jge
gs
push
and
dec
pop
loope
test
std
mov
fildll
sbb
bound
xor
pop
lahf
cld
push
pop
stos
pop
dec
inc
push
pusha
dec
aam
je
and
ljmp
sbb
jne
and
in
data16
sti
pushf
std
test
test
int3
inc
stos
shrb
mov
iret
popa
loop
in
mov
scas
cmp
call
pop
push
add
add
jae
ljmp
jl
movsl
int
das
fiaddl
insl
das
push
mov
out
mov
mov
push
outsb
and
cs
adc
adc
pushl
test
inc
hlt
xor
loop
in
loop
mov
adc
pop
imul
push
pop
sub
mov
movl
fimuls
lahf
mov
insl
cs
pop
lahf
jne
sub
adc
sbb
pop
dec
mov
gs
sbb
cs
fisubs
dec
clc
add
sbb
or
decl
cmp
nop
pop
inc
hlt
outsl
decl
cs
cmpsl
sub
lahf
lret
stos
dec
dec
inc
cmp
pop
xchg
aam
sbb
mov
adc
out
jl
jl
fwait
mov
push
sti
adc
sbb
sbb
iret
jge
jecxz
mull
clc
xor
sbb
xchg
push
stos
pop
xor
imul
inc
test
xchg
cmp
in
mov
sub
mov
or
dec
das
enter
jb
and
imul
pop
adc
into
fnstsw
outsl
mov
cmpsl
push
into
xor
pop
or
pop
jno
test
clc
outsb
icebp
mov
xlat
fwait
mov
ficomps
fmull
mov
loopne
or
lods
movsl
mov
adc
test
test
ljmp
xchg
hlt
loop
out
mov
push
push
or
mov
mov
dec
ss
cs
jle
test
push
stos
icebp
in
or
imul
dec
gs
cvttps2pi
cmp
inc
cwtl
nop
popf
jmp
push
pop
mov
cmp
add
lods
cltd
cmp
insl
aas
inc
mov
cmpsl
mov
or
pop
loop
shrb
cmp
xchg
mov
aas
jl
ss
push
xor
xchg
rcrl
inc
adc
or
loop
inc
mov
out
jbe
adc
and
mov
in
sub
icebp
stc
and
cmp
stos
cs
dec
scas
jmp
enter
mov
or
mov
adc
pusha
mov
inc
sbb
inc
hlt
cmp
dec
and
pop
xchg
stos
not
pop
adc
in
mov
xchg
pop
ficompl
mov
lahf
mov
mov
aam
xchg
jmp
dec
aas
repnz
into
cltd
or
push
fstps
or
rcr
pop
fcmovnbe
hlt
jo
inc
xchg
push
adc
cmc
push
out
mov
iret
jecxz
push
dec
xor
dec
cmp
pop
sti
rcrl
call
jne
inc
mov
andb
dec
push
add
cmc
out
pop
mov
adc
test
or
push
pop
pop
gs
sub
outsl
popa
mov
inc
arpl
jno
xor
pop
xor
pop
xchg
adc
dec
mov
sub
or
roll
push
outsb
enter
dec
dec
adc
and
push
ficomps
push
jb
dec
inc
cs
mov
fs
sbb
test
mov
xchg
dec
shlb
xchg
out
stos
ret
push
fstl
cmp
inc
nop
cwtl
add
in
lods
mov
aas
decb
jmp
in
add
sbb
adc
xchg
hlt
sti
or
cmpsl
mov
sti
push
dec
icebp
shlb
or
xor
popw
fwait
cmp
adc
or
mov
add
mov
int
std
add
mov
and
mov
pop
mov
movl
out
dec
mov
shll
jecxz
pop
cmc
in
les
test
xlat
stc
jbe
add
jl
jge
cmp
sbb
mov
or
pop
mov
gs
dec
mov
cld
nop
out
roll
ds
in
pop
push
push
scas
ret
and
add
out
mov
pop
je
movb
les
sbb
andb
pop
movzbl
ds
dec
fiaddl
jns
repnz
cmp
adc
loopne
mov
or
or
xchg
add
inc
lret
and
cs
mov
sub
xchg
mov
out
fs
jl
addb
dec
fwait
cmp
sub
shrb
pusha
jl
or
adc
xchg
mov
incb
push
sbb
add
dec
add
push
push
xchg
sti
and
insl
cmpsl
ss
dec
mov
in
dec
add
pusha
cli
popa
fnsave
shlb
fldenv
daa
push
movupd
jle
arpl
jle
aad
sub
hlt
dec
leave
xchg
add
popa
mov
std
sub
fimull
or
cmc
sbb
in
vxorps
push
outsb
sub
in
jbe
sub
std
fisubl
mov
int
mov
or
push
stos
inc
leave
sbb
dec
out
pop
repnz
jecxz
ret
or
jb
dec
lods
mov
cmp
cmpb
add
mov
mov
iret
mov
lcall
decl
cmp
fcmovnb
jno
setb
ljmp
daa
push
sbb
jp
popf
pop
jnp
sub
mull
push
xchg
mov
mov
ljmp
hlt
pop
xchg
inc
mov
sbb
cmp
cmp
fstpt
adc
xor
sbb
scas
push
cld
sti
or
xor
jle
push
push
or
or
push
pushf
push
xchg
fcomp
mulb
jo
out
into
test
jnp
xchg
push
test
std
js
ljmp
push
mov
inc
inc
scas
sbb
push
fwait
mov
jg
jle
inc
cmp
dec
cltd
insb
rcrl
out
pop
fisubs
mov
andb
fiadds
enter
dec
push
mov
adc
sbb
mov
adc
sbb
jmp
aad
and
lea
mov
jbe
dec
mov
movsl
push
jle
fisubl
push
out
outsl
clc
bound
sub
psrad
lret
das
inc
das
aaa
push
add
aad
loopne
jne
loope
cli
xchg
mov
sti
or
ficompl
stos
mov
xchg
xor
cmpsl
sub
pusha
adc
test
arpl
push
xchg
push
or
jb
sbb
cmpsl
jb
xchg
xorl
sub
lahf
dec
mov
divl
mov
inc
hlt
xor
loop
lods
jle
out
adc
cmpsl
sbb
cld
adc
pusha
mov
nop
inc
arpl
inc
popfw
mov
loopne
fisttpl
xor
mov
je
ljmp
or
mov
call
adc
push
incl
int
or
sbb
jle
xchg
adc
fisttpl
repz
sbb
insb
dec
adc
loope
mov
and
mov
adc
int
jb
cli
xchg
xor
fs
jo
scas
pushf
sub
pop
addr16
pop
outsl
insb
lret
stc
sub
stos
lret
pop
mov
paddw
xchg
inc
adc
xchg
inc
mov
stos
push
stc
pop
out
mov
cmp
bndstx
mov
mov
push
mov
push
xor
insl
mov
sbb
mov
pusha
xor
gs
clc
jl
mov
popa
jp
icebp
aam
mov
and
scas
lea
sbb
out
shll
pop
jl
ljmp
jbe
mov
add
mov
mov
mov
push
cmp
xchg
jmp
sti
sbb
clc
push
int3
dec
icebp
mov
mov
mov
sub
sub
outsb
popf
mov
fcomps
rorl
lret
add
fisttpll
popa
mov
push
std
jle
push
test
mov
ja
popf
adc
sbb
cmp
rorl
jnp
add
movsb
cmp
mov
jge
xlat
mov
mov
ret
clc
inc
cmpsl
call
divl
inc
pushf
lds
mov
in
pushf
jno
ret
pop
xlat
lods
ss
pop
xchg
fiaddl
cmp
sti
xor
sbb
dec
sub
into
dec
inc
xchg
cmc
std
push
pop
xchg
fisubs
mov
popa
sub
or
sbb
mov
xlat
xchg
xor
push
xor
lods
popa
sahf
mov
sbb
jo
mov
mov
imul
scas
mov
sbb
aas
outsb
or
add
lods
push
pusha
stos
mov
pop
pop
sarl
push
divl
std
cmp
push
jmp
rclb
je
and
pop
xor
sub
sub
pop
jne
sbb
out
and
adc
jbe
js
stc
adc
dec
mov
dec
cli
ljmp
push
aaa
inc
pop
dec
lcall
cmpsl
sbb
jae
jl
xchg
mov
iret
mov
cmpsb
fildl
mov
mov
jmp
clc
ret
or
movsl
add
sub
ss
arpl
jb
cwtl
xor
pop
scas
out
push
in
push
mov
pop
dec
fistpl
push
xor
lods
cltd
mov
int
xchg
cmp
sbb
push
inc
or
push
clc
jle
popf
mov
cmp
sub
xlat
xchg
out
mov
mov
pop
shl
mov
jle
adc
push
or
out
ss
pop
xchg
mov
daa
call
sub
sti
jmp
cli
or
jno
cmp
pop
ss
adc
adc
jle
fisubrl
sbb
loope
cmpsl
mov
cmc
pusha
or
mov
iret
lret
dec
addr16
xchg
sti
cmp
jle
adc
orb
add
inc
mov
jb
push
ljmp
sbb
push
shr
xchg
mov
int
daa
push
scas
push
lret
cs
call
pop
xor
push
jns
loopne
push
sub
xlat
xor
mov
sub
scas
or
repnz
clc
and
mov
sarb
sbb
mov
push
add
rclb
xchg
sub
pop
sarl
leave
jecxz
add
dec
loop
cltd
inc
dec
gs
push
out
mov
mov
fisubrs
mov
cmp
xor
cmp
in
fcompl
cltd
add
shll
movsl
sbb
repz
mov
movsb
cmp
incb
adc
xor
das
or
sub
pop
xlat
jae
movhps
or
cmpsb
loopne
aad
call
fcmovnu
jno
sub
stos
pop
rol
mov
leave
popa
aas
xlat
lret
push
cs
test
pusha
adc
pop
mov
push
add
xlat
cmp
andb
push
fidivs
sbb
cli
mov
inc
movsb
adc
fs
adc
add
push
in
push
dec
xchg
adc
int3
dec
or
inc
push
or
imul
fstpl
push
pop
dec
cmc
push
arpl
mov
in
mov
xchg
xor
mov
mov
xor
mov
xor
lods
or
sbb
adc
stc
adc
cmp
sub
pop
mov
rcr
sub
lcall
cmp
sahf
mov
shlb
push
xor
insl
push
mov
mov
inc
aaa
cmp
push
push
push
cmp
xor
cmp
adc
inc
fnstenv
xor
sub
fs
pop
push
in
or
add
gs
nop
pop
pop
ss
sbb
test
insl
mov
xor
jg
and
or
cmp
jno
add
cmpsb
pop
jnp
testl
dec
jle
fstps
sub
shl
out
inc
out
dec
jmp
insb
lret
push
inc
jmp
leave
adc
loopne
adc
hlt
cwtl
std
adc
mov
adc
lret
mov
jp
mov
push
leave
cmp
sti
outsl
or
xchg
mov
inc
sub
jo
xor
push
inc
sahf
push
adc
or
xchg
dec
ds
enter
aad
lahf
xor
sub
mov
mov
mov
stos
dec
sbb
or
mov
pop
lods
adc
fsubrs
push
aas
shrl
out
das
inc
test
shll
ficomps
xchg
pop
cmp
les
pushf
mov
pop
jbe
mov
xor
mov
inc
repz
sbb
jecxz
sub
mov
jg
dec
mov
out
xchg
lcall
inc
cmp
leave
filds
bound
lcall
pop
inc
inc
xor
adc
ret
pop
arpl
dec
insb
fwait
push
push
xor
out
pop
push
sbb
mov
pusha
popf
xor
or
sub
cmp
icebp
lods
and
inc
xchg
sbb
daa
loope
ret
in
xchg
jp
lahf
mov
ret
mov
mov
sbb
mov
push
adc
pop
xor
sahf
fldln2
idivl
out
outsl
add
dec
hlt
or
push
dec
cmp
inc
std
jns
sti
push
insl
call
dec
shlb
test
adc
ret
rcrl
xor
adc
inc
push
mov
rol
loope
cwtl
cmp
aaa
push
push
or
negl
xchg
jno
ljmp
test
fs
notl
push
cmp
lds
movsl
fistl
ss
push
loope
push
aam
cwtl
dec
inc
xchg
pop
xchg
ret
inc
xchg
jb
pushf
xor
jnp
sub
or
loop
cmp
jmp
fstpt
negl
sub
jnp
and
pop
and
bound
sub
xchg
fldl
mov
dec
jno
xchg
scas
adc
fisttps
jb
push
jecxz
rcll
lock
in
mov
gs
cmovb
mov
xor
ljmp
add
test
sub
mov
roll
xor
ror
je
stos
mov
and
dec
sub
lods
push
int3
fisttpl
dec
push
or
stos
in
int
test
pop
or
subl
push
mov
dec
push
mov
mov
sub
orl
mov
cmp
aaa
mov
jnp
mov
adc
in
pop
ret
cmp
or
add
test
popf
sbb
dec
cld
xor
push
and
cltd
mov
sbb
or
inc
adc
int3
jle
push
test
test
cmp
test
xor
xchg
sub
rorb
or
es
movsl
movl
mov
xchg
inc
pusha
mov
test
jbe
adc
jo
dec
pop
xor
mov
pop
and
std
lar
and
jo
icebp
lret
jne
mov
movsl
xor
sub
call
or
mov
jo
test
mov
and
pushl
mov
lcall
jg
inc
scas
addr16
add
sub
push
xchg
mov
mov
dec
jo
jg
cmc
push
ret
jno
pop
shl
aaa
pop
xchg
inc
dec
xor
xchg
jl
stos
rcll
jne
loopne
sbb
jge
pop
pop
xchg
mov
mov
pop
pop
push
jne
jo
mov
dec
ss
inc
adc
sbb
dec
mov
rcr
jmp
cmp
lahf
inc
mov
mov
outsb
sub
rorl
xor
adc
lahf
pushf
fidivrs
or
aaa
es
jbe
push
mov
cmc
sbbl
xor
jb
roll
sbb
lods
cmp
pop
movsl
dec
stos
jae
push
or
int
jb
test
mov
sub
ret
repnz
xchg
cmp
mov
aam
cmp
pop
push
push
inc
push
stc
es
dec
push
adcl
pop
pushl
lret
pushf
push
out
mov
adc
push
cmp
mov
in
pop
push
sub
mov
or
xchg
adc
or
inc
test
xor
lcall
mov
cmp
xor
outsl
mov
jns
cmp
gs
ss
fstl
inc
xor
sub
fistpll
add
cltd
fucomi
ds
pop
or
int
sub
jecxz
xlat
int
xor
inc
leave
loope
push
leave
mov
xor
adc
pop
in
dec
mov
divl
jne
or
adc
dec
repz
sub
xor
xlat
adc
mov
lds
pop
repz
mov
or
rcll
and
push
and
imul
xchg
sub
or
js
loop
xor
sub
xchg
std
xchg
pop
icebp
push
mov
test
mov
add
push
jge
stos
das
fdivrp
sbb
mov
movsb
mov
fmuls
fiaddl
aam
cmpsb
test
xlat
lods
inc
xor
movsl
adc
cs
xchg
mov
movsb
jle
xorb
mov
sbb
incl
add
push
push
fidivs
jo
mov
mov
cwtl
js
aam
dec
stos
in
aas
or
cmp
push
fcoms
rcll
out
fwait
or
dec
jne
int
jp
cmp
push
mov
repnz
hlt
mov
sub
movl
test
loope
push
lret
sub
or
xchg
cli
dec
cmc
fwait
stos
cltd
out
je
add
xchg
cmovp
ss
scas
inc
cmp
lcall
stos
mov
inc
cmpsl
das
data16
fisubs
mov
cld
bound
sbb
lahf
cli
push
push
addr16
in
jecxz
mov
mov
or
aas
dec
inc
xor
stos
mov
sub
sub
ficoml
test
lahf
stos
cmc
mov
sbb
sbb
ret
jp
mov
ficoml
scas
js
cwtl
mov
push
es
jg
push
sub
and
push
and
adc
mov
push
dec
jl
jbe
jae
pushf
mov
or
and
ret
push
push
pop
fwait
jecxz
js
adc
jge
mov
pop
daa
mov
adc
fs
std
insb
inc
xchg
scas
nop
adc
push
bound
cmp
cmp
fistpl
xchg
jb
shrl
inc
cmp
push
scas
pusha
sub
mov
mov
push
mov
and
cmp
push
dec
or
out
aas
mov
mov
jmp
or
mov
mov
int
clc
sbb
sub
pop
les
mov
sub
fwait
add
push
test
push
jmp
jl
iret
movsb
lcall
cmp
insl
xchg
mov
or
sub
mov
jno
sub
cwtl
dec
xchg
pop
pop
adc
rcrl
dec
mov
xor
adc
sbb
xor
lods
jmp
pop
mov
inc
and
xor
sbb
test
inc
dec
notl
dec
or
sub
mov
bnd
sub
sti
sbb
lods
iret
cmp
sbb
pop
mov
fsubp
shr
inc
lcall
cmp
lea
add
ret
movsl
xor
bound
push
nop
sbb
add
pop
cmp
repz
mov
xor
push
dec
cmc
sub
mov
int
movsb
mov
das
push
cmp
loope
fxch
cmpsl
push
cmp
shlb
daa
adc
and
xor
jnp
adc
cs
inc
lret
mov
out
shrl
lods
es
push
lock
add
cmp
pop
xor
dec
jnp
cmp
mov
idiv
inc
xchg
dec
lods
rolb
mov
int
loopne
sub
cmp
dec
sub
dec
sub
xlat
lea
iret
and
dec
mov
rclb
jo
arpl
mov
int3
adc
pop
ss
push
insb
or
jecxz
cmp
aam
sbb
xor
and
mov
push
inc
and
or
push
push
jecxz
out
lcall
pop
sbb
fidivl
adc
pop
test
scas
fsubrs
dec
mov
iret
mov
lret
fnsave
dec
mov
dec
sqrtps
leave
ficoms
jmp
inc
add
sbb
lret
sahf
int
push
mov
cmpsb
add
fcomps
std
mov
push
dec
sub
and
and
movaps
xlat
sbb
lret
test
adc
mov
aaa
cli
dec
pop
cmp
das
mov
mov
addl
sti
pop
push
into
daa
mov
add
gs
cmp
popa
or
adc
data16
mov
xchg
xor
jno
mov
dec
mov
push
and
in
stc
mov
pop
and
lcall
inc
sub
sbb
jmp
pop
xchg
lods
fcoml
sub
mov
js
jae
cmp
and
fimull
cmp
push
jl
pop
js
pop
mov
das
push
cltd
cmp
xchg
test
sbb
dec
mov
inc
in
lea
enter
fsubs
sub
push
shlb
sbb
jno
cmp
pop
test
fcoms
and
mov
pop
mov
inc
mov
push
cmp
pop
push
jb
cmp
es
xchg
or
pop
clc
mov
mov
xchg
out
adc
test
cwtl
lret
dec
or
inc
pop
cmp
cmp
jmp
mov
xor
inc
inc
xchg
mov
cmp
cmp
pop
mov
mov
dec
push
and
mov
fbstp
inc
mov
adc
inc
push
push
stc
rclb
cmp
movsb
cltd
addr16
lods
jae
scas
push
jp
dec
inc
mov
ja
mov
mov
imul
mov
pop
mov
inc
or
pop
dec
mov
pop
xchg
sahf
pop
or
inc
push
icebp
jle
xor
out
enter
call
mov
xchg
cs
push
push
sbb
lret
fiadds
push
or
sbb
sbb
inc
daa
mov
popa
lock
rol
xchg
adc
dec
cs
ja
imul
into
jmp
test
cmp
or
sbb
cli
or
jnp
mov
push
add
pop
dec
sti
or
sbb
imull
mov
aaa
cs
orl
fildll
mov
push
xchg
adc
mov
negb
pop
xchg
xor
fucomi
sbbb
xlat
or
repz
xlat
push
dec
lcall
mov
outsb
jle
dec
lea
push
es
jle
mov
sbb
inc
push
int
pop
sbb
mov
pop
pop
repnz
adc
add
mov
sub
aaa
pop
pop
sub
xchg
out
leave
cmpsl
rcll
xchg
leave
pop
cmp
cmp
push
fstpt
cmp
dec
arpl
daa
push
jbe
ljmp
jns
or
leave
pop
or
stc
sub
adc
mov
jmp
pop
gs
inc
imul
and
out
sbb
push
test
pop
pop
cmc
sbb
cmp
aam
jns
or
sti
sub
xchg
test
adc
jle
mov
js
rorb
pop
sbb
and
adc
bound
mov
jmp
mov
xchg
aam
add
sub
sub
push
push
dec
xor
add
cs
outsl
cld
push
ficomps
lahf
pop
cmp
outsl
xchg
pop
into
or
mov
mov
or
xchg
in
je
adc
pop
xchg
sbb
and
lret
xchg
shr
dec
and
pop
jne
sbb
inc
sbb
xlat
dec
shll
xchg
inc
bound
cmp
jl
das
fldt
xchg
loope
addr16
add
addr16
movsb
xchg
push
hlt
add
jg
in
pop
push
mov
call
push
mov
pop
or
aaa
mov
data16
pop
fsubrs
xor
cmp
ret
ficoml
jle
push
addl
div
adc
insb
addr16
add
lcall
leave
jnp
inc
inc
adc
jmp
pop
mov
rcr
cmpsb
xchg
shlb
lods
mov
mov
ss
test
test
icebp
test
cwtl
or
inc
mov
or
mov
jns
cmp
xor
pop
fwait
cs
gs
xor
push
xor
in
jnp
rcll
les
ret
cmp
iret
cmp
mov
jb
das
lcall
popf
and
fildll
test
xlat
dec
fstpl
sub
mov
loopne
adc
xchg
jbe
push
cmp
push
fisttpl
cmc
insl
jl
out
mov
paddw
insb
pusha
xor
inc
jne
rcll
outsl
cmp
ss
xor
mov
pop
pop
clc
cmp
xchg
cmp
pop
pop
jnp
xchg
aaa
pop
stos
xor
push
xchg
inc
jae
adc
dec
and
cmp
fistl
mov
sub
xchg
aas
and
popf
lock
pop
hlt
test
inc
jp
addr16
jp
xchg
jp
cltd
mov
push
mov
fadds
xor
adc
sbb
call
in
mov
adc
xchg
mov
pop
cs
cmc
push
scas
les
xchg
test
xchg
out
hlt
fdivr
inc
xorb
xchg
lods
dec
out
push
add
in
inc
inc
decb
inc
xor
mov
xchg
stc
adc
push
sbb
rcrl
es
gs
sub
mov
lock
sub
inc
rcrl
xlat
cmp
out
fldenv
mov
lret
dec
loopne
add
sbb
xor
xchg
mov
imul
or
gs
scas
mov
mov
sahf
mov
mov
push
mov
gs
push
add
pusha
and
xlat
cmp
mov
pusha
mov
inc
adc
mov
mov
lahf
shrl
mov
popf
xchg
sarl
xlat
popa
sbb
sub
xor
call
inc
xchg
dec
sbb
sub
cmp
mov
inc
xchg
cmc
rorb
push
cmpsb
sbb
dec
lret
dec
pop
adc
imul
cmpsb
mov
ss
xor
in
addb
pop
imul
jmp
sub
cmp
sbb
mov
sub
data16
pop
sub
mov
push
push
sub
gs
fstps
xor
aam
mov
sub
fidivrl
or
cli
aas
lret
outsb
add
addr16
rcl
xor
out
cli
sbb
sbbb
push
das
xchg
nop
or
push
or
push
mulb
es
out
lods
enter
jg
pop
loopne
xchg
sti
out
sbb
push
repz
pop
pop
and
push
movl
jecxz
jno
mov
or
mov
add
dec
pushf
xor
fstpt
cmpsl
sbb
cmp
cmp
iret
sub
pop
mov
scas
jmp
xor
movsb
bound
loope
and
inc
xchg
pop
orl
inc
mov
insl
push
pop
dec
idivb
cmp
inc
movsb
mov
sub
fs
jle
push
pop
lods
scas
cmp
mov
pop
je
imul
cwtl
pop
lcall
inc
shl
ss
fidivs
outsl
insl
push
sbb
mov
dec
ljmp
shll
and
mov
xchg
or
mov
dec
xor
xchg
pop
dec
sub
shr
or
into
clc
sti
mov
sbb
add
dec
xor
ret
test
xor
push
push
sub
mov
iret
addr16
push
pop
push
pop
sbb
jnp
bound
and
cmpsl
cmp
mov
cmc
xchg
xchg
sbb
sub
dec
pop
inc
dec
pop
push
lods
js
mov
ljmp
push
lret
or
rcr
adc
cmp
ds
push
or
mov
inc
cmpb
jae
addl
sub
adc
bound
cmp
mov
ss
xor
out
jnp
adc
xchg
repz
fdivr
xchg
xchg
push
and
jbe
pushw
or
push
push
movsb
hlt
mov
adc
cmp
int
jnp
movsl
mov
bound
jge
inc
or
enter
mov
lods
dec
sbb
jno
outsb
adc
pop
icebp
insb
lahf
mov
jmp
fists
stos
push
mov
fisttpl
xchg
mov
xor
bound
and
pop
inc
inc
loop
and
mov
add
arpl
xchg
jmp
sbb
adc
paddd
loop
sub
stos
xchg
aad
iret
jnp
add
sub
sti
or
sbb
push
imul
inc
cmp
sub
ret
xchg
lods
mov
or
mov
into
inc
mov
sbb
shll
pusha
add
cmp
insl
push
mov
sbb
cmpsl
inc
pop
loop
xchg
mov
sbb
lock
das
mov
push
pusha
sbb
scas
pop
add
push
cli
jle
dec
pop
dec
aaa
lods
pushf
cli
imul
repnz
cmp
cmp
aad
inc
xchg
jae
lods
cmp
cltd
bound
jne
fistl
mov
pushf
movsb
or
mov
imul
sub
flds
dec
dec
fsubs
pop
dec
xchg
pop
mov
sbb
sti
jmp
pop
sbb
cmp
bnd
mov
mov
testb
inc
daa
psubusw
bound
inc
push
pop
pop
inc
push
ds
outsl
xor
ja
bound
ss
lods
nop
bound
repnz
insl
pop
test
jp
ret
pop
cli
sub
or
cmp
adc
ja
sub
arpl
enter
movl
jle
pop
or
dec
and
push
or
lock
xor
sbb
sub
cmp
xchg
add
enter
jbe
lahf
jl
mov
jmp
xorl
es
aas
fs
loope
fisttpl
loop
mov
sub
fs
sub
sub
inc
stos
xlat
xor
cs
jmp
push
xchg
dec
fsubrp
pop
sarb
mov
mov
fimull
fdivr
pop
icebp
mov
cmp
addr16
mov
data16
mov
sub
maskmovq
std
xchg
addr16
mov
dec
adc
mov
loop
sub
bound
cmpsl
ljmp
sbb
mov
imul
mov
cmp
push
xor
lock
mov
imul
add
push
mov
pop
jb
dec
addb
fstl
fiaddl
pop
adc
dec
daa
dec
lcall
stos
sahf
push
aaa
inc
add
adc
mov
xor
jno
sub
stc
dec
rorb
push
push
pop
adc
push
mov
jno
rcrl
sbb
jl
sub
jecxz
fwait
pusha
xchg
add
divl
les
por
imul
or
mov
push
lea
popa
dec
mov
lods
ss
pop
sub
inc
or
pop
xor
cmp
roll
dec
sub
rcrl
dec
mov
or
adc
dec
mov
cld
xchg
ljmp
adc
pusha
push
ja
fstpt
fimull
xchg
or
lods
sbb
iret
jnp
sub
cmp
sub
xchg
or
sbb
cmp
sub
fidivs
popa
ret
push
negb
mov
sbb
mov
fidivl
iret
mov
out
cmpsl
or
aas
out
scas
inc
fildl
shr
pop
xlat
xor
dec
add
lret
rcrb
xchg
push
lahf
xchg
sti
inc
or
rcr
mov
push
sbb
pop
push
in
push
inc
mov
push
push
aaa
ficompl
jg
sbb
sub
push
mov
lcall
inc
pop
dec
add
jo
fidivl
loop
lahf
push
pusha
jle
add
outsb
fldcw
fists
mov
inc
fldenv
inc
out
dec
cmp
push
jns
dec
dec
mov
or
mov
pop
mov
repz
adc
push
xchg
inc
add
mov
inc
cs
aam
sub
insb
icebp
or
pop
add
sti
stc
adc
adc
pop
push
ja
push
xor
push
imul
mov
mov
ss
loop
out
mov
pop
push
cwtl
lods
inc
int
cmp
mov
jnp
stos
andb
ret
iret
addr16
fldl
mov
mov
outsl
push
outsl
nop
mov
push
test
jecxz
imul
ss
cli
xchg
jno
xor
movsb
cmp
sbb
popa
or
aad
mov
or
xorps
ss
mov
pop
cmc
mov
adc
inc
js
xchg
mov
mov
lret
jle
and
fiadds
mov
out
aad
add
push
scas
sub
inc
jo
loopne
hlt
repz
dec
hlt
sbb
inc
xchg
xor
call
mov
fsub
add
scas
push
pop
aam
add
push
xchg
nop
lea
adc
lds
xlat
imul
scas
cltd
cli
lods
jbe
subb
das
cmp
aam
sbb
inc
pop
or
test
rclb
push
loop
push
cmpsl
dec
mov
push
pop
mov
xor
dec
aaa
pop
repnz
lcall
lcall
push
sub
cld
sbb
inc
sbb
jmp
cmp
arpl
add
sub
fidivrs
cmp
fisubrl
xor
inc
out
xor
ret
mov
inc
push
add
out
pop
dec
add
xchg
mov
xchg
xor
test
cvtdq2ps
lcallw
cmpsl
std
dec
xor
inc
jp
or
mov
lret
pop
lds
jecxz
aaa
pop
fdiv
sub
sub
xchg
incl
mov
pop
lcall
aad
xchg
dec
adc
push
fwait
pop
push
test
mov
lds
sbb
or
mov
mov
jmp
cmovl
clc
mov
mov
sub
icebp
stc
fcoms
das
and
adc
xchg
leave
sbb
push
cltd
nop
cmp
jnp
addr16
xchg
xlat
ja
mov
mov
xor
push
popa
mov
xchg
out
dec
xchg
sbb
fistpll
imulb
pop
movsb
jno
fwait
lret
rcr
inc
dec
sbb
loope
out
dec
and
xor
push
pop
je
mov
xor
xchg
and
xor
gs
xchg
imul
fistpl
dec
stos
mov
mov
addr16
push
add
dec
adc
imull
xor
lahf
adc
neg
adc
or
xor
sbbl
sub
addr16
mov
cwtl
sbb
outsl
jl
pop
pusha
nop
mov
pop
cmpsl
lret
sarb
jge
fildll
inc
cmp
add
fdivs
add
gs
pop
pop
iret
cmp
es
xchg
pop
into
add
cmp
lods
ret
xchg
or
adc
sbb
pusha
pop
mov
jno
test
rcrl
push
push
scas
jg
inc
adc
shrb
addl
mov
push
pop
outsl
ds
imul
stos
jb
pop
lret
je
mov
add
iret
lods
and
idivl
dec
add
rol
xor
pop
leave
push
ljmp
mov
mov
dec
inc
jo
popa
es
outsl
fs
jns
loop
adc
xchg
mov
movsl
mov
mov
sti
pop
comiss
push
inc
hlt
cmp
push
pop
xlat
cli
repnz
push
push
xor
test
mov
xchg
fmull
mov
test
cmp
sbb
adcb
and
out
psubb
mov
jge
out
popa
loop
mov
rolb
leave
ja
mov
mov
mov
sub
into
push
enter
fst
ss
pop
pop
rcrb
repnz
push
pop
aad
rorl
pop
lods
adc
push
xchg
cmp
cmp
sbb
out
pop
cmp
inc
jmp
push
cmc
sbb
or
or
popa
mov
mov
xchg
cmp
jecxz
addb
and
mov
jo
mov
push
mov
cmpsb
inc
test
lahf
int
mov
dec
and
xor
and
jbe
aaa
nop
xor
cmp
mov
dec
jmp
idivl
call
es
push
cmc
jl
icebp
jmp
push
pusha
movsl
mov
js
out
add
lods
pop
cltd
sbb
and
js
ds
xor
and
inc
sbb
daa
jae
cwtl
loope
xchg
insb
pop
push
out
bound
pop
pop
xor
mov
inc
sahf
add
dec
aaa
xchg
pop
inc
mov
std
mov
and
adc
iret
xor
xor
cmpsb
sbb
std
xchg
lds
lcall
iret
inc
daa
sub
lods
negl
inc
fwait
cmp
push
mov
pop
mov
cli
lock
pop
xchg
push
mov
bnd
push
dec
cmp
es
rclb
xchg
rclb
cli
push
jecxz
sbb
mov
dec
lret
out
jmp
dec
js
xor
sbb
sbb
and
test
daa
xor
callw
clc
lcall
cmc
cmc
fistpl
push
sbb
cld
push
clc
es
pop
or
sub
shl
dec
rcrl
mov
js
mov
das
xor
push
outsl
mov
mov
data16
loopne
lock
dec
decb
rcl
xor
fwait
jmp
sbb
push
pop
mov
aas
pop
clc
mov
add
es
ss
push
std
inc
pop
mov
dec
mov
adc
adc
push
mov
fs
sub
sbb
jns
sbb
inc
mov
cmp
fwait
mov
inc
push
pop
stc
es
fnstenv
lret
dec
mov
dec
cmp
fistps
jno
clc
insb
mov
mov
mov
or
iret
jle
imul
rclb
jbe
bound
sbb
push
sbb
adc
pushf
inc
inc
mov
pop
cmc
cs
outsb
fildll
cmp
lds
adc
jmp
loope
inc
punpckhbw
in
test
mov
cmp
out
adc
or
outsl
popl
sub
pop
dec
js
cmpsl
mov
fbstp
imull
adc
aaa
sub
sbb
shl
data16
fdivrs
fistl
pop
jo
xchg
cmpsl
xchg
mov
xor
mov
js
mov
sbb
mov
cli
pop
jle
mov
pop
loope
dec
pop
cs
lret
push
dec
or
adc
ss
mov
cs
dec
out
loopne
push
mov
data16
add
les
sub
sbb
xor
loop
nop
jae
stos
stc
pop
neg
or
fs
bound
or
mov
jb
xor
sbb
pop
sbb
lock
mov
test
push
pop
push
daa
filds
cmp
pusha
xor
mov
fisttpl
outsl
fiadds
and
cmp
xor
dec
fdivl
or
test
push
fmul
and
fstpt
sub
mov
sbb
arpl
dec
popa
addr16
or
cld
orb
clc
and
es
adc
or
mov
icebp
dec
inc
rorl
cmpsl
js
bound
shll
push
push
sub
clc
scas
xchg
push
mov
sti
mov
fistpl
cmpsb
add
mov
pushf
enter
repz
inc
popa
lret
cmp
mov
icebp
pop
mov
dec
scas
sbb
psubsw
lods
dec
sub
popa
fs
xor
packuswb
lret
cmp
push
xchg
popa
out
call
push
mov
jns
jg
in
add
mov
aas
notb
pop
inc
inc
sahf
lea
fbstp
adc
sub
repnz
scas
sub
out
les
push
in
and
cmp
cmc
push
in
lds
pop
sbb
mov
jns
dec
mov
and
mov
into
fdivs
cmp
adc
icebp
fsubrs
loop
push
adc
mov
sub
xchg
push
shll
sub
fwait
aaa
jno
cmpsb
inc
loop
xlat
and
jmp
sbb
test
mov
and
mov
in
outsl
cmp
mov
cli
mov
inc
dec
push
rorb
mov
sbb
cmp
mov
add
out
les
cmp
mov
push
inc
cli
mov
adc
push
rcrl
pop
leave
ds
add
sub
xchg
pusha
clc
adc
fwait
rcrl
cmp
ss
cwtl
or
push
mov
jno
dec
dec
cld
dec
fcmovnb
sbb
xor
sbb
lret
fimull
hlt
or
push
cli
xchg
mov
xor
cltd
inc
stos
movsb
or
cmpsl
adc
mov
mov
insl
adc
or
sub
aas
jl
add
icebp
mov
popf
xchg
push
fisttpl
sti
adc
sbb
cmp
inc
jo
arpl
or
push
adc
in
adc
pop
fbld
ljmp
dec
cltd
imul
and
cltd
neg
push
aam
std
push
jno
cmp
add
icebp
enter
fidivl
je
push
inc
cli
iret
dec
jnp
data16
mov
mov
cli
push
lret
rolb
dec
cli
fstpt
xchg
das
sbb
inc
pop
mov
jnp
outsl
jne
mov
aas
xchg
and
cmc
dec
mov
ret
xor
mov
push
or
daa
xor
scas
add
dec
mov
sub
loop
push
xchg
aas
ficomps
repz
inc
pop
mov
xor
push
dec
push
in
mov
std
add
iret
pop
loop
jb
pop
mov
or
or
mov
xchg
mov
ds
dec
pushw
cli
sub
xorb
stos
scas
cltd
xchg
mov
pop
push
pop
sti
xchg
and
ds
aas
dec
lret
and
dec
ja
xlat
xchg
or
sub
mov
test
push
add
push
gs
lret
out
sbb
shll
mov
sbb
jo
jb
jmp
xchg
decb
ret
jp
pop
es
push
ficomps
adc
pusha
enterw
push
push
ja
or
fcoml
xor
sti
mov
ret
clc
test
xor
add
imul
clc
or
fldenv
mov
int
sbb
ficomps
stos
inc
bound
jns
cmp
sbb
das
das
add
xchg
xchg
pop
gs
inc
jb
xor
fisubl
jns
cmp
ss
xor
repnz
bound
pop
cmp
pop
or
vunpcklpd
subl
insb
inc
stc
jle
cmp
sti
and
xchg
jns
cmp
inc
sbb
pslld
or
push
pop
xchg
sbb
cmp
cli
lret
lcall
stos
aaa
loopne
xchg
cmpsl
and
inc
sahf
mov
sbb
sti
ja
push
lods
outsb
pop
sbb
mov
cmc
sbb
in
out
mov
aam
mov
mov
punpckhbw
xchg
cld
js
aaa
push
jl
mov
add
ss
data16
subb
sub
cmp
incb
or
xor
shl
lods
fwait
mov
sub
rcll
pop
data16
or
lods
popf
xchg
add
add
insl
nop
and
push
pop
xor
fimuls
jg
or
cwtl
fidivl
sarl
cmp
mov
pop
orl
ss
xlat
sub
sub
push
push
mov
sub
push
loop
xchg
pop
xchg
je
push
adc
xor
cmpsl
push
push
fwait
inc
mov
jb
ljmp
push
jg
daa
push
fsubr
cli
dec
add
mov
adc
test
inc
pusha
and
dec
es
enter
or
das
mov
add
jecxz
xor
pop
mov
dec
test
mov
arpl
cltd
pop
popa
inc
dec
out
push
xor
sti
mov
mov
pop
into
dec
xor
sbb
lcall
sub
dec
nop
test
mov
and
pop
in
inc
daa
jbe
xor
test
xor
ja
cmp
into
pop
dec
mov
mov
ds
scas
jecxz
das
dec
mov
pop
mov
jmp
je
inc
das
mov
sbb
int3
push
inc
add
dec
push
pop
pop
roll
inc
je
mov
sub
mov
pop
jmpw
stos
mov
cwtl
lcall
nop
cli
cmp
negb
aam
cld
loopne
mov
stc
imul
xor
pop
int
push
jno
movsl
pop
pop
cmp
dec
xor
call
movsl
xor
add
push
pop
movsb
test
add
ror
das
fsin
jecxz
out
incl
dec
rolb
nop
test
rcll
loopne
fsubrp
push
loopne
sbb
sbb
les
inc
arpl
iret
out
sub
in
sub
mov
or
xor
dec
inc
es
test
lds
std
lret
mov
stc
jp
stc
ret
jmp
sub
not
lods
xchg
fcom
outsl
cmp
lds
arpl
in
pop
or
push
rorb
sub
jnp
mov
sbb
into
rcrl
push
mov
jns
mov
mov
jmp
pop
sub
cs
fistl
adc
mov
popa
sub
jns
and
xor
das
push
scas
adc
icebp
push
dec
mov
mov
cmp
sbb
adc
cs
cmp
in
mov
enter
cmp
jae
xchg
lcall
je
bound
das
mov
daa
enter
sub
jb
pop
sub
in
mov
push
mov
add
jne
dec
inc
idiv
mov
mov
dec
ja
mov
repz
ds
sbb
sub
adc
mov
add
add
jne
addr16
adc
cmc
fdivs
leave
scas
sbb
fistl
or
pop
dec
inc
loopne
xchg
xlat
pop
mov
mov
ret
testl
cli
ret
add
sbb
call
stos
dec
jno
xchg
std
scas
hlt
cli
pop
mov
mov
add
jecxz
mov
xchg
stc
nop
cld
mov
int
and
ds
das
inc
dec
inc
leave
mov
shlb
inc
addl
aaa
pop
call
leave
add
enter
adcb
mov
xchg
jle
dec
dec
or
ss
sti
mov
fcom
mov
cmp
fcomps
xchg
test
cmp
jecxz
dec
cmp
stos
cmp
cmp
pop
mov
xlat
adc
push
test
push
loope
imul
loope
hlt
sbb
imul
ljmp
and
rorl
and
mov
aam
inc
inc
pusha
dec
jae
mov
xchg
scas
adc
loop
dec
ret
lcall
fwait
das
mov
lds
int
cld
sub
ss
pusha
push
push
jns
sbb
ficomps
sub
std
push
jns
leave
fistl
dec
fcomip
or
add
fcmovne
sub
xchg
jne,pn
sbb
gs
xchg
cmp
pop
fstpl
push
xchg
sub
outsl
push
aam
daa
mov
and
stos
adc
pop
imul
dec
push
jle
fiadds
add
jae
daa
stos
insb
cmp
add
jl
pop
out
jecxz
lds
push
and
cmp
and
dec
dec
xchg
dec
cli
push
jge
aas
inc
cmp
push
mov
sub
inc
jmp
arpl
sub
adc
push
dec
mov
or
ja
cmp
int
dec
cmp
xor
xchg
out
sub
shl
imul
mov
xor
adc
arpl
pop
jae
scas
adc
jge
sbb
jecxz
pop
mulb
and
leave
sbb
xchg
incb
pop
fwait
sbb
rorl
and
or
jp
ja
dec
ljmp
and
ffreep
rcl
outsb
dec
mov
mov
rep
push
inc
and
dec
mov
sbb
cwtl
pop
inc
rcrl
push
jns
popa
add
mov
pop
mov
ss
xchg
pop
mov
shrl
inc
pop
pop
lea
sbb
ds
cmc
xchg
mov
adc
sub
jbe,pn
sub
pop
cmp
out
jl
cwtl
pop
mov
and
hlt
nop
and
popf
inc
mov
xchg
adc
xor
ljmp
shlb
xchg
add
mov
jb
iret
out
push
outsl
or
or
aaa
cld
sti
xor
sbb
in
dec
xor
dec
push
pop
sub
aad
or
adc
mov
dec
xor
push
sti
jge,pt
and
je
adc
adc
add
mov
cli
popa
cmp
mov
cmp
inc
or
mov
ljmp
push
clc
mov
out
dec
lods
int
and
mov
mov
call
push
pop
xchg
mov
sbb
sub
idiv
adc
pop
out
mov
imul
bound
mov
ds
mov
adc
xor
fisttpl
insb
div
lahf
cwtl
loope
pop
jmp
je
xchg
push
xchg
stc
adc
add
or
or
xchg
sbb
cltd
mov
std
push
lret
dec
arpl
repnz
xchg
leave
imul
out
pandn
fsubp
std
xchg
adc
into
xchg
sbb
add
dec
jl
stos
add
inc
bound
sub
dec
mov
push
cmpsb
nop
adc
fdivp
shlb
out
es
cltd
inc
das
push
dec
imul
dec
outsb
or
mov
dec
fldt
addr16
push
dec
xor
sbb
imul
arpl
xchg
lods
and
adc
std
push
mov
lods
or
inc
ss
dec
ja
mov
sbbl
sbb
in
mul
cmp
sbbb
sti
pop
aaa
ljmp
cltd
fwait
cmp
inc
and
lds
xchg
aam
aad
call
push
shl
out
xchg
andb
js
add
adc
shll
fisubrl
xchg
xlat
imul
fidivrl
sub
push
push
pop
adc
sub
jecxz
inc
push
adc
bnd
xor
and
inc
bound
adc
popa
paddsw
push
dec
sti
lods
les
cmp
cmpsb
fsts
popa
punpckhwd
rorl
enter
push
fimull
add
sub
mov
inc
push
inc
mov
enter
sbb
add
aam
arpl
xchg
adc
jbe
push
mov
push
inc
leave
std
add
mov
xor
mov
ficoml
fcomps
pop
sbb
arpl
ss
cmc
out
or
ss
mov
jo
inc
movsb
bound
mov
or
mov
adc
add
mov
adc
mov
jge
mov
mov
push
in
scas
dec
mov
add
ret
shrl
jo
or
jecxz
sub
addl
cmp
ljmp
rcrl
fs
push
mov
push
xor
test
outsl
dec
pop
sub
das
stos
mov
dec
cmp
ss
xchg
daa
add
jecxz
mov
push
cmc
imul
and
repnz
rcr
push
data16
sub
stos
fisttpl
sbb
clc
imul
sbb
mov
push
and
mov
mov
pop
mov
sub
cmpl
mov
arpl
or
movsl
lds
mov
adc
popf
call
and
fdivp
inc
add
xchg
inc
and
dec
adc
sbb
lret
sub
aad
ljmp
jno
mov
scas
xchg
jmp
lea
jbe
lods
jmp
dec
pop
xor
push
pop
lret
xor
pop
and
stc
mov
leave
inc
ret
mov
sub
test
loop
out
push
movsl
or
sub
loop
aaa
lds
dec
shll
pop
ds
bound
lods
xor
and
pushf
cmovg
inc
push
mov
repnz
xor
mov
mov
adc
add
lret
sbb
sbb
xchg
inc
push
mov
jp
xchg
shll
int3
test
adc
xchg
imul
sub
addb
outsl
sub
inc
inc
sbb
cltd
clc
mov
mov
push
push
nop
mov
sbb
loop
mov
mov
cmp
dec
mov
mov
inc
mov
leave
dec
popf
xor
gs
xchg
stos
scas
xor
xchg
adc
sub
xchg
dec
lods
push
jecxz,pt
popa
xor
mov
lret
imul
ret
sbb
mov
jg
xchg
cmp
mov
ret
mov
clc
xchg
mov
mov
adc
inc
outsl
mov
into
jge
pop
ja
adc
pop
pop
ret
sub
or
add
pushf
int
xor
dec
fdivs
sub
xchg
dec
imul
add
or
cmp
std
fldcw
dec
pop
inc
cmp
aaa
push
mov
or
in
aad
pop
movsb
icebp
jbe
push
rcrl
sub
adc
data16
mov
jnp
mov
and
pop
int
mov
add
pop
scas
jo
bswap
add
push
stos
fwait
add
aaa
bound
push
data16
add
enter
test
scas
mov
test
mov
hlt
fld
jb
cmpsl
imul
pop
notl
cmp
iret
sub
sbb
push
mov
insl
imul
stos
sti
mov
xor
dec
jl
cmpps
and
mov
sbb
jmp
inc
icebp
jns
hlt
adc
mov
sub
iret
dec
fidivrs
into
xchg
push
cmp
xchg
xchg
pop
pop
adc
ljmp
in
mov
stc
ret
mov
aad
or
mov
das
movsb
or
ss
icebp
mov
or
pop
das
imul
push
xchg
jns
lods
ja,pn
inc
leave
sub
clc
xor
test
sarb
sarl
or
aad
mull
iret
xlat
mov
call
insb
arpl
jmp
es
add
pop
jl
imul
sahf
push
push
dec
sti
mov
decb
inc
adc
pop
cmp
scas
dec
push
push
dec
jno
loop
cmc
ss
push
push
lds
inc
mov
add
xor
pop
or
aaa
cmp
fdivrl
or
xchg
fwait
stc
xchg
bound
lret
stos
pop
mov
jae
mov
addr16
dec
inc
xchg
sbb
adc
sbb
mov
push
jo
xor
rolb
es
dec
jg
ret
lods
jb
inc
inc
mov
mov
push
or
mov
fldt
jp
pop
dec
mulb
dec
das
mov
sub
testl
cwtl
mov
pop
adc
mov
cmpb
test
iret
jno
adc
or
xlat
mov
push
pop
clc
or
xchg
enter
inc
sub
cmp
fisttpl
jp
mov
push
lahf
jb
adc
gs
jb
ljmp
fisubrl
dec
mov
or
push
mov
mov
push
mov
mov
clc
stos
cmp
aam
jle
jmp
ror
subl
ror
mov
cmc
jmp
add
shlb
mov
aam
sub
push
xlat
dec
jge
sbb
sub
sub
fisttpll
popa
and
jne
xchg
sbb
test
sbb
push
push
dec
outsb
push
mov
mov
dec
push
les
rcrl
cmp
mov
dec
add
push
sub
mov
sbb
lods
repz
jg
das
stos
sub
es
mov
aaa
gs
gs
loop
xor
and
iret
add
mov
rorb
adc
fcmovb
push
addr16
sbb
push
inc
adcb
adc
sbb
lahf
stos
sbb
das
arpl
xchg
or
popf
hlt
cmp
jnp
add
out
pop
mov
fwait
add
xor
ss
out
pop
inc
mov
fsub
imul
dec
das
lds
xchg
mov
sub
adc
rcrb
cmp
sti
jbe
lret
imul
out
or
lods
movsl
cli
fstp
xchg
jnp
sti
iret
loop
mov
aad
sahf
adc
or
sti
and
sbbb
xchg
or
rorl
pop
imul
pop
lret
nop
or
adc
jo
ret
xchg
loope
dec
xor
add
jne
out
push
inc
sbb
aaa
cmp
bound
xor
sysenter
cmp
cmp
mov
sub
pop
shlb
cmp
jmp
inc
int3
pushf
dec
jecxz
bound
dec
pop
pushf
aas
in
pop
cmp
test
pop
mov
cmpsl
cmc
in
push
aaa
daa
es
push
fs
add
jno
lods
in
imul
adc
movsb
ds
cmp
pop
xor
pusha
sub
and
jle
outsl
dec
jp
aad
inc
mov
xchg
push
mov
dec
in
dec
mov
xor
pop
stos
inc
inc
insl
or
mov
ret
test
adc
fisubrs
dec
mov
sub
cmp
sbb
mov
jne
mov
dec
mov
mov
jno
sti
pop
xchg
lcall
dec
pop
push
sti
imul
mov
add
dec
jl
jmp
dec
bound
cmp
movsb
fdivrs
dec
rcrl
cmp
aad
add
xchg
and
aam
mov
cmp
sbb
pop
and
jae
or
fldenv
sti
xchg
pop
lahf
pop
inc
out
ja
adc
add
mov
and
jno
xchg
xor
bound
and
imul
mov
outsl
mov
pop
in
pop
subl
inc
in
rcrb
insl
jmp
dec
outsl
push
bound
jg,pn
lret
sub
mov
add
testl
movsl
mov
and
int
inc
fisttpl
push
dec
cmp
pop
xor
jno
nop
bound
sub
pop
pop
in
addr16
adc
inc
stos
dec
rcrl
sub
sbb
adc
cmp
adc
sbb
mov
sarl
xchg
sbb
loopne
int
adc
cmp
inc
stos
mov
add
js
push
xchg
mov
or
outsl
push
sub
or
adc
leave
movsb
in
cmc
dec
cmp
xor
stos
xchg
push
sbb
xor
xchg
inc
loop
pop
daa
mov
pop
xor
pop
dec
dec
inc
or
movsb
in
sub
pop
pop
stos
test
or
dec
test
orb
popa
xchg
jmp
push
push
sbb
out
cwtl
adcb
test
or
mov
jp
cmp
sub
pop
loop
orl
jo
mov
inc
or
jae
mov
or
movsb
cmp
push
aam
loop
pop
mov
mov
cmp
mov
lret
out
dec
push
lods
data16
lds
inc
popa
cmp
xor
and
movsl
push
cmp
lods
mov
sbb
cmp
call
and
or
push
and
rolb
rolb
lea
add
test
or
adc
xchg
push
sbb
mov
xor
outsl
dec
dec
lahf
mov
aaa
cld
in
fistpl
pop
sbb
push
repz
aad
mov
cs
cmpsb
pop
add
inc
or
push
dec
cmp
pop
cli
dec
add
aad
mov
test
xchg
divb
or
adc
mov
push
sbb
in
cmp
sbb
pop
sub
ljmp
pop
mov
adc
mov
mov
jecxz
ljmp
imul
pop
je
xlat
xchg
sbb
pop
aam
pop
repz
setge
outsl
loopne
repnz
fdivl
dec
lahf
adc
and
xchg
fs
repz
in
mov
xor
add
dec
push
pusha
xchg
mov
clc
rorb
push
das
dec
outsl
je
cmpsl
mov
bound
xor
add
or
mov
insl
sub
ret
inc
cmp
sti
stos
sub
cli
xor
ljmp
js
inc
test
aad
ficomps
subps
in
hlt
xchg
test
adc
out
mov
psubw
jp
mov
mov
add
pop
mov
das
mov
cs
mov
and
push
aad
fistl
adc
inc
mov
test
mov
negl
jecxz
xor
and
pop
sbb
fbstp
xchg
lahf
negb
cmp
push
pusha
test
mov
cs
nop
adc
mov
cld
es
mov
sbb
push
jno
negl
mov
out
xchg
pop
sti
fstpl
ja
push
pusha
test
or
xor
lock
mov
mov
sti
add
xchg
addr16
repz
lods
arpl
fstpl
lcall
inc
jne
cli
sub
sub
or
int3
sbb
push
xchg
fcmovbe
shrl
arpl
lds
lahf
sub
add
out
clc
mov
pop
movsb
cwtl
stc
stos
test
xor
inc
pcmpgtw
js
lock
xor
and
ret
bound
sub
ret
ret
push
daa
movsb
xor
adc
flds
push
ret
loopne
dec
fsubrs
cmp
and
aam
push
inc
mov
lock
idivl
mov
icebp
pushf
shr
cmpsb
mov
loop
sbb
inc
dec
mov
jns
icebp
mov
push
mov
add
add
lahf
pop
iret
cltd
lret
cltd
xchg
jge
aaa
pop
fs
popa
cltd
cs
dec
jle
or
ficoms
leave
inc
cmp
cs
sub
outsl
in
xchg
or
lods
jmp
or
jl
out
insb
xor
inc
insl
adc
jp
or
ret
clc
or
lods
repz
clc
xchg
dec
js
jns
out
mov
mov
clc
adc
cmp
ja
xlat
mov
mov
into
xchg
cmp
pop
xlat
shlb
push
mov
adc
lods
das
repnz
add
xor
es
enter
clc
ret
dec
add
in
cltd
pop
clc
pop
mov
pop
adc
xchg
repnz
xchg
or
insb
push
daa
ret
and
insb
es
outsl
aas
mov
lahf
jmp
pop
adc
mov
insl
adc
or
sti
mov
sahf
rcrl
xchg
test
stc
mov
dec
hlt
movsb
arpl
fistl
notl
pop
pusha
ret
sbb
push
mov
mov
xor
add
lahf
pop
push
cwtl
adc
imul
shlb
cmp
push
sti
inc
iret
push
out
mov
cmpsb
gs
mov
dec
out
mov
cmc
in
lahf
pop
xchg
adc
mov
cwtl
push
adc
pop
jp
das
pushf
sub
ss
movsl
add
lods
mov
cmpsl
cld
sbb
adc
mov
dec
push
pop
cwtl
sub
and
and
or
ss
sbb
push
jno
lret
sbb
xlat
cmp
mov
pop
pop
mov
inc
inc
sub
ljmp
mov
cmp
rcrb
adc
cmp
lds
stos
cmp
mov
adc
cmp
jp
dec
inc
leave
sub
pop
push
rcll
cli
push
sub
test
test
push
xor
ss
or
iret
jnp
mov
dec
dec
notl
jmp
int3
mov
aas
in
add
xor
in
cmpsl
outsl
jl
loope
lret
adcl
sub
add
inc
cltd
mov
rep
jle
sub
pop
iret
xchg
cmc
mov
fisubs
xchg
push
mov
cmp
and
ja
mov
lahf
pop
subb
js
xor
mov
mov
push
cmpsb
pop
cmp
jmp
mov
xchg
loop
dec
lret
hlt
insl
dec
stos
jge
icebp
cmp
fwait
jb
andb
fidivl
or
xor
sbb
mov
scas
movsb
stc
xor
push
jns
pop
xor
inc
stos
cltd
inc
mov
sbb
inc
sbb
adc
and
cmp
dec
xlat
and
or
inc
dec
mov
repz
add
inc
inc
enter
dec
pop
testl
loopne
xlat
jnp
add
fwait
mov
pushf
dec
jo
sbb
lahf
shlb
mov
cmp
divl
xor
add
sub
xlat
dec
cli
stos
mov
adc
xchg
adc
out
loop
jle
sub
mov
mov
repz
aam
in
das
aas
shll
outsb
lcall
jno
xchg
lods
jae
xchg
or
jnp
lea
add
adc
inc
shl
and
imul
inc
push
sbb
js
lcall
xor
jae
mov
ret
xchg
jbe
mov
xor
or
mov
mov
ljmp
push
jmp
stc
aam
and
jmp
pop
out
jo
or
insl
imul
aam
arpl
jnp
jo
aaa
js
in
dec
cmpsl
push
imul
push
lods
xor
outsb
pop
loopne
push
inc
pop
ret
push
je
aad
iret
mov
cld
mov
mov
sbb
push
scas
scas
sbb
and
push
mov
or
stc
test
ret
cmpsb
stos
out
ret
xlat
dec
es
cli
mov
xor
popa
pop
cmp
sub
inc
ja
sbb
and
cmp
mov
pop
lock
lret
xlat
add
outsb
xlat
movsl
dec
jmp
fwait
pop
mov
add
insb
fcmovbe
push
rclb
adc
cmpb
notb
es
ret
push
lods
pop
add
or
iret
inc
iret
dec
mov
mov
xchg
lahf
sub
or
enter
add
jo
fidivl
xchg
daa
xchg
pusha
xor
subl
mov
and
rcrb
pop
stos
lods
rcrb
xlat
js
or
aaa
sbb
pop
push
push
bound
mov
fwait
aaa
or
fsubs
ja
aas
lahf
lea
and
sahf
cmp
xor
xor
add
cwtl
dec
adc
dec
scas
lods
adc
addb
call
pop
or
lcall
rep
js
in
loop
mov
cmp
add
mov
aas
mov
dec
push
sbb
mov
fisubrl
push
adc
imul
pop
xor
fcoms
push
jnp
push
sti
sbb
adc
add
and
xchg
mov
ljmp
sbb
lock
pusha
loope
push
inc
sbb
into
xor
mov
xor
xchg
xchg
push
adc
dec
mov
dec
adc
xchg
cmc
xchg
lods
cmp
fcmove
rclb
in
popa
stc
hlt
les
cmp
push
push
xchg
pop
xor
leave
test
and
mov
call
mov
cli
out
and
sbb
insl
mov
test
mov
test
dec
mov
sbb
clc
aam
push
pop
push
lods
push
jnp
mov
ficoms
cmp
jbe
add
push
mov
xchg
push
rcrb
aas
dec
hlt
mov
pop
gs
xor
int
enter
sub
jb
lcall
insb
xor
add
mov
push
test
pop
addb
or
jb
push
hlt
js
jns
mov
push
int
ljmp
leave
sbb
or
fiadds
fwait
arpl
sub
sub
xor
cmp
or
add
pop
test
out
sti
es
push
adcb
push
gs
sti
or
jno
mov
mov
sbb
inc
cwtl
lcall
dec
sub
add
and
mov
or
repnz
adc
mov
loop
inc
sub
mov
push
sbb
cmp
outsb
fisttpll
mov
push
jp
xor
sbb
jns
push
lods
bound
dec
push
sub
das
pop
pop
cmp
inc
shl
push
sti
sbb
repz
inc
dec
cli
pop
cwtl
js
pop
sbb
ljmp
dec
lock
cmp
mov
jnp
paddusw
mov
inc
xor
and
adc
dec
stos
dec
std
inc
mov
or
shlb
adc
cmp
mov
sbb
push
sarb
xchg
ss
dec
sub
xchg
les
xchg
lods
mov
cmp
mov
jnp
dec
xchg
mov
push
inc
pop
clc
ss
and
cmp
sub
es
pop
js
jle
sahf
dec
clc
xor
mov
pop
std
jnp
aam
jp
mov
push
xchg
inc
movsb
dec
dec
xchg
es
push
mov
or
xor
fstpt
add
pop
pop
in
dec
mov
fwait
ss
sub
ficoml
shrb
and
pop
lret
xchg
test
and
xchg
jmp
mov
dec
das
xor
fstps
jns
xchg
mov
mov
scas
rcrl
cmc
nop
cmc
mov
or
add
pop
jl
lock
std
mov
cmpb
mov
ja
push
mov
pop
xor
cmc
fisubrs
dec
adc
cmp
xor
jbe
jp
popa
dec
in
out
push
cs
ret
cmp
inc
arpl
movups
das
and
lock
mov
in
sbb
pop
add
aas
or
dec
jns
xor
mov
inc
push
ljmp
sub
cmp
xlat
mov
xor
xchg
fldln2
leave
pop
outsl
jmp
pop
fsts
ret
cmp
cld
in
xor
sti
push
rclb
sbb
adc
pop
out
les
adc
add
cmpsb
cmp
xchg
xor
mov
mov
in
or
pop
ss
pop
stos
pop
push
jns
sahf
dec
mov
adc
inc
mov
lret
jmp
pop
inc
ret
mov
fwait
inc
add
stos
cmc
rorl
sub
sbb
shrb
push
movsb
mov
mov
xor
call
add
out
mov
hlt
stos
inc
xchg
lods
mov
mov
push
pop
out
vmulpd
out
dec
push
movlps
cltd
mov
mov
pop
or
jb
fimull
xor
push
inc
out
or
mov
pop
or
shll
mov
xlat
decl
jp
inc
adc
imul
stc
inc
pop
push
dec
ja
out
nop
or
dec
xor
mov
inc
insl
xlat
das
insl
xor
mov
out
shrb
push
inc
jae
out
hlt
out
out
cmc
faddp
cltd
sub
add
add
cld
xor
pop
js
rcrl
push
nop
imul
test
mov
fwait
dec
xor
pop
scas
and
cli
sub
push
aaa
lret
xor
das
scas
fsubl
dec
cmc
fucomi
pop
mov
out
sbbb
enter
daa
idivl
and
or
mov
pop
mov
and
pop
mov
mov
xor
stos
adc
adc
xchg
xchg
shrl
pop
dec
pop
xlat
xchg
xchg
mov
clc
mov
addr16
dec
je
bound
scas
es
add
pop
cmp
xchg
aaa
sbb
out
in
stos
add
mov
loop
add
aaa
mov
adc
iret
push
xchg
lea
mov
mov
or
dec
or
adc
pop
ja
imul
je
lds
sbb
adc
insl
mov
pushf
jmp
mov
push
jp
js
xor
dec
xor
cmp
ficomps
gs
adc
mov
add
jnp
pop
add
mov
pop
or
mov
mov
dec
dec
lret
sbb
cmp
data16
and
inc
repnz
stos
adc
pop
jp
pop
call
dec
std
mov
xor
mov
mov
test
dec
fs
shrl
fwait
dec
gs
dec
mov
mov
pop
movsl
sbb
dec
xor
jo
push
mov
ljmp
jl
repz
push
pusha
repnz
imul
mov
inc
sbb
inc
cmp
cmp
mov
mov
lods
jp
pop
insl
mov
pop
lret
fistl
out
sub
in
shlb
nop
std
lahf
adc
leave
es
jno
call
pop
pop
adc
dec
lret
pop
cmp
bound
inc
int
fistpll
pop
movsb
xchg
xor
andb
mov
push
pop
cmp
aad
push
push
cmc
sbb
cs
jns
daa
rclb
lods
test
gs
inc
pop
rclb
mov
pusha
pop
dec
fcompl
mov
outsl
lods
into
lds
aam
or
inc
lods
pop
push
dec
inc
cmp
std
or
gs
adc
push
lods
push
mov
cmpsl
pop
pop
xchg
xlat
dec
cli
mov
sbb
mov
adc
fcmovnb
lcall
btc
sbb
cmp
fs
jnp
fimuls
aam
test
sbb
ss
retw
sbb
iret
sbb
xchg
xchg
add
es
sbb
sti
dec
mov
lock
xor
jmp
shrl
mov
out
aam
and
adc
bound
jo
imulb
push
in
or
sarl
stos
imul
mov
outsb
movsb
repz
jl
roll
or
add
pop
imul
in
fildll
mov
mov
lret
sub
ljmp
pop
sarl
pop
mov
orb
push
inc
repz
xchg
mov
in
clc
and
subl
dec
xchg
push
pop
out
jmp
mov
outsb
shll
fdivrl
inc
in
inc
mov
stos
jg
and
insb
sbb
jl
iret
sbb
jp,pt
xorb
std
inc
mov
add
mov
mov
adc
inc
inc
push
mov
lods
call
cmpsl
leave
repnz
xchg
ss
je
insl
push
daa
pushf
mov
push
cmp
ja
or
adc
xor
and
es
je
push
xchg
jecxz
pop
hlt
dec
rcrb
repz
add
mov
imul
inc
mov
pusha
jnp
xorb
int
jo
sbb
xchg
adc
or
push
inc
jl
mov
shll
cmp
sub
cmp
mov
or
enter
dec
inc
and
sbb
xor
imul
iret
sbb
mov
mov
out
pop
scas
or
adc
test
sub
xchg
push
sub
mov
add
insl
leave
mov
xchg
sub
data16
out
or
test
in
adc
popa
dec
push
pminub
ret
nop
fisttpl
pop
pop
push
mov
ficoml
leave
dec
jb
add
and
push
pusha
into
sbb
mov
jmp
popf
sbb
xor
cmpl
adc
or
fnstsw
jns
sbbl
sub
add
fistpll
dec
jl
cli
push
cmc
cmp
fldt
cmp
xchg
fwait
int3
fcomps
fs
lock
xor
inc
cmp
xor
call
icebp
dec
std
inc
dec
gs
jle
push
out
sbb
fidivrs
mov
enter
push
push
pop
inc
adc
mov
pop
mov
loopne
jecxz
add
nop
divb
inc
mov
sbb
dec
mov
loop
cmp
pop
cwtl
fcmovnb
imul
lret
pop
lock
repz
adc
scas
repz
shll
test
inc
cmp
sti
xchg
push
loop
xchg
pop
outsl
sbb
xchg
movsl
sbb
aad
dec
sbb
pusha
cmc
mov
out
int3
adc
push
dec
lahf
nop
mov
mov
sub
or
sti
sbb
cmp
inc
fistpll
mov
push
cwtl
inc
lea
mov
fcomp
mov
dec
lret
sub
jg
mov
xchg
and
leave
nop
push
orb
and
test
mov
jno
sub
loop
xor
or
xchg
mov
jecxz
add
pop
lcall
cltd
jb
fisttps
stos
pop
jne
adc
mov
fldt
mov
lret
fidivs
popa
jecxz
bound
in
divl
xor
cmp
lret
test
push
int3
and
and
testl
or
mov
rcrb
sub
and
mov
lret
or
lods
das
fwait
popf
ficoms
add
inc
xchg
or
cld
fidivrs
pusha
sbb
xor
hlt
or
test
ficoms
mov
mov
xor
pop
shll
jno
cmp
or
fidivs
pop
ljmp
sbb
mov
cld
imul
lret
dec
cli
dec
lock
or
xor
ds
mov
or
cmp
xchg
jecxz
cmp
inc
dec
or
arpl
ret
add
loop
js
rcl
and
dec
adc
inc
fs
sub
pop
jnp,pn
stos
ds
mov
jmp
cltd
sti
out
inc
clc
xchg
cmp
inc
fstpt
and
subps
sbb
fidivl
pop
pop
push
and
lcall
arpl
mov
mov
xchg
sub
add
cmp
inc
std
cmp
fcmove
adc
xchg
push
jmp
stos
fdivrp
xor
and
pop
call
or
cmp
ficoms
das
and
pop
push
movq
push
repnz
mov
cmpsl
dec
pushf
sbb
push
aas
dec
pop
xlat
mov
dec
and
mov
cli
xchg
xchg
out
int
xchg
adc
dec
js
push
sbb
inc
hlt
xor
xchg
orb
sub
push
push
pop
pop
ret
cmp
pushf
xor
xchg
mov
out
shlb
fdivp
cmp
imul
jo
jb
xor
imul
ss
ret
lock
push
add
add
jmp
in
adc
xor
sbb
cli
pushf
push
insl
xchg
pop
rcrl
mov
lahf
mov
push
andl
dec
push
mov
jl
xchg
xchg
pop
fldt
fcoms
xor
xor
dec
mov
cmp
arpl
gs
mov
jecxz
in
adc
jb
jo
cltd
dec
std
push
mov
out
jnp
scas
or
pop
or
js
jmp
in
or
mov
dec
movsl
jecxz
sti
adc
sbb
jle
mov
inc
cld
jo
pop
cmp
test
das
push
insl
mov
adc
jbe
inc
inc
cld
add
xor
pop
mov
add
adc
push
pop
or
enter
or
pop
pop
jbe
gs
in
loope
mov
mov
cmpl
in
mov
lods
iret
jmp
fcmovbe
mov
lcall
in
mov
mov
ficoms
fidivrs
mov
das
mov
stos
lcall
mov
pop
mov
mov
sbb
pop
pop
dec
adc
out
dec
flds
inc
xor
or
aam
jl
adc
add
or
dec
mov
cltd
ja
fildl
shll
lret
rsm
jae
rorb
addr16
scas
loop
orl
cmp
xor
push
int
out
je
shll
lods
xor
xchg
imul
and
adc
sub
mov
cmp
xchg
dec
inc
clc
sbb
cmp
sbb
cmpsl
sbb
pop
pushf
mov
ret
pop
ret
add
sub
dec
je
push
lcall
pop
stos
int
out
add
dec
pop
push
xchg
push
xchg
sbb
rcrl
inc
ret
xchg
dec
mull
ljmp
or
sbb
divl
in
stos
les
mov
mov
cmp
add
mov
sbb
inc
or
cmp
sub
mov
enter
lahf
cmp
ss
cmp
push
add
je
push
cmpsl
pop
int
das
ss
out
aam
jae
or
cmpl
aam
sub
dec
fwait
sub
dec
out
popa
ss
cmp
jg
dec
cli
test
popf
enter
div
and
cmp
push
sbb
or
sub
in
mov
pop
shrb
mov
mov
sbbl
sub
push
cli
ljmp
sub
je
adc
mov
adc
imul
icebp
mov
out
lds
cmp
loop
insb
add
cli
mov
jmp
loopne
hlt
pop
jmp
and
nop
and
cmpb
loope
and
sub
push
int3
jno
leave
scas
mov
outsb
ret
push
sub
les
add
or
outsl
fdivrl
sar
push
add
je
add
stos
shlb
mov
push
mov
int
mov
lahf
lds
sahf
insl
cmpsl
and
fbld
aaa
push
lret
popf
adc
xchg
lods
dec
mov
stc
sub
lcall
mov
stc
cwtl
scas
cmc
mov
ret
adc
sarl
push
mov
lahf
jb
pop
aas
cwtl
mov
mov
ficomps
sbb
or
dec
push
pop
cmp
mov
xorb
sbb
xor
and
push
movsb
daa
outsl
inc
and
mov
inc
sub
sub
decb
pop
es
sub
dec
push
inc
sar
orps
ljmp
mov
sbb
mov
lahf
cmp
dec
cmc
mov
sti
jecxz
inc
cmp
fldcw
aaa
or
pop
cmp
push
jo
adc
mov
pop
fiaddl
sbb
out
xchg
adc
popf
fistpll
inc
es
out
out
movb
mov
insb
fstps
xchg
and
push
cmp
aas
xchg
lds
imul
mov
push
push
pushf
es
pop
dec
or
lahf
sbb
scas
xlat
pop
push
mov
ficompl
mov
add
xlat
push
and
ss
aaa
xor
mov
xchg
xor
xchg
push
test
lahf
mov
pop
lea
push
xor
jmp
js
mov
fistpll
sbb
or
shll
push
jo
push
mov
es
pop
ret
mov
sub
fldenv
shlb
fwait
cmp
loop
push
add
jle
add
sbb
cli
testb
sbb
cmp
subl
clc
dec
xor
pop
jo
xchg
aaa
daa
clc
xor
leave
loope
out
dec
lret
xchg
clc
mov
mov
dec
mov
push
clc
dec
sub
dec
lret
dec
mov
xchg
enter
scas
pop
dec
aas
xchg
sub
inc
pop
rorl
jg
xor
nop
je
add
lcall
xor
jnp
inc
jle
mov
dec
inc
cmp
in
sbb
and
lods
iret
addr16
jl
outsb
ljmp
std
dec
loopne
xlat
outsb
push
adc
cmp
enter
sbb
aaa
lcall
xlat
push
xchg
lret
sbb
je
xchg
movsb
mov
adc
xchg
mov
fdivrs
cmp
sbb
mov
loop
xchg
or
mov
sub
xor
lds
cmp
dec
fwait
cmp
or
or
jne
out
mov
call
xlat
mov
sbb
adc
mov
xor
in
xor
mov
add
cmp
xor
mov
pop
fwait
add
pop
cmp
inc
cmp
and
push
repz
outsl
pushfw
push
pop
xchg
dec
sub
push
aam
add
add
mov
add
sahf
adc
fwait
rcr
jecxz
inc
push
xchg
fbld
push
xchg
xor
dec
sahf
enter
lods
cmp
lea
or
aas
lods
test
outsl
insb
ss
es
mov
add
lsl
jg
sti
test
sub
outsl
sti
mov
repnz
sbb
ficoml
pop
mov
xchg
loop
cmp
ja
lock
push
cmp
dec
paddb
das
push
movsl
pop
mov
sbb
loopne
push
adc
ret
push
mov
inc
cmp
cmp
inc
pop
and
icebp
xor
neg
pop
pop
pushf
adc
lcall
rcll
xchg
mov
cmpb
push
std
add
in
sbbb
cmp
xor
sub
cmp
sbb
mul
rclb
jp
scas
jle
daa
sbb
aad
sbb
sbb
outsl
xor
inc
cmpsl
pusha
leave
in
dec
rcl
mov
clc
mov
cmp
add
je
pop
sbb
push
mov
or
mov
test
fdiv
dec
sbb
out
add
insl
sub
cli
fwait
stc
adc
push
mov
or
mov
mov
dec
cs
mov
mov
cmp
out
test
mov
test
inc
xlat
incb
sbb
and
adc
ss
int3
sbb
pop
cmp
lahf
js
push
lcall
ja
clc
ret
mov
cmp
fwait
xor
push
rcrb
pop
pop
leave
push
std
mov
xor
jb
fildl
clc
sbb
xor
stos
cs
mov
int
mov
push
mov
rcrl
lods
mov
sub
aas
xchg
cmp
loope
jle
es
dec
push
jns
xchg
adc
push
out
jnp
pop
aas
sbb
test
or
inc
enter
adc
lret
inc
ss
pusha
js
xchg
fs
mov
xor
repnz
xchg
jnp
inc
loop
out
inc
jbe
xchg
popa
push
pop
xchg
arpl
push
sbb
imul
inc
jmp
mov
ljmp
lahf
fsts
gs
ljmp
add
es
sahf
js
lock
pop
outsl
or
push
jmp
xchg
pop
xor
jns
xor
push
inc
mov
sub
or
sarb
leave
mov
lock
inc
shll
add
sub
inc
adc
sbb
insb
jmp
enter
inc
jge
xor
sub
fistpl
mov
inc
leave
mov
push
or
outsl
sub
pop
fsubrs
push
leave
jno
or
inc
jp
dec
arpl
bound
sti
stos
push
xor
mov
dec
fstpt
loope
push
adc
dec
adc
or
jns
jle
cmpsb
cmp
outsl
fs
cmc
jo
jecxz
sbb
sbb
sahf
ss
into
bound
jl
jb
bound
pop
mov
add
leave
mov
imul
push
lahf
or
push
pop
popa
jge
jo
or
mov
dec
aaa
pusha
xor
cmp
xor
inc
mov
dec
loop
int3
lcall
jb
xchg
sbb
and
popf
xchg
ljmp
in
mov
bound
pop
fcompl
xor
lret
xchg
cmp
sbb
scas
cld
outsl
adc
sub
lret
jp
jae
cltd
and
andl
jp
dec
push
pop
cs
add
mov
dec
pop
cmp
cmp
cltd
xchg
scas
sbb
sbb
adc
clc
adcl
mov
inc
or
lea
or
imul
cld
push
xchg
sub
lods
sbb
leave
insb
es
stos
lret
and
imull
in
lcall
loopne
add
cwtl
es
inc
push
addr16
jbe
je
cwtl
and
inc
idivl
lahf
or
push
cmp
jmp
iret
add
xor
pop
xchg
pop
push
jb
add
and
call
or
insb
adc
int3
mov
xor
xorl
mov
xor
adc
add
test
ret
divb
test
fisttpl
dec
sub
popa
inc
adc
pop
jle
or
lahf
insb
addr16
xchg
pop
fisttpl
dec
out
movsl
dec
push
mov
ss
nop
inc
pop
sbb
sub
lods
dec
pop
loope
pop
mov
test
je
xchg
lods
testl
cltd
cmp
jnp
jo
sub
pop
jb
ficomps
or
pushf
std
cli
pop
das
dec
shrb
dec
fbstp
lods
sub
pop
dec
shlb
popa
push
mov
push
lods
sbb
xchg
xor
adc
mov
push
jle
pcmpgtd
imul
cmp
pop
insb
das
clc
add
out
or
push
hlt
incl
outsb
in
movsl
repnz
cwtl
mov
mov
jb
jmp
out
fwait
or
push
jae
mov
or
cmpsb
scas
ljmp
adc
test
js
rcrb
leave
lret
ret
dec
das
dec
cmp
mov
pop
stc
xchg
sbb
inc
mov
imul
lret
pop
and
out
sbb
push
outsl
sbb
jae
iret
inc
sbb
inc
lret
out
pop
inc
and
test
push
push
mov
arpl
hlt
pop
dec
mov
add
pop
pushf
rcrb
jl
cwtl
sbb
mov
jmp
adc
adcl
lods
cmc
roll
sbb
mov
add
sbb
mov
call
stos
mov
lahf
outsl
add
push
push
pushf
push
es
xchg
gs
ret
mov
mov
xor
add
mov
mov
mov
lods
inc
insb
ljmp
loop
cmp
cmp
ficomps
pop
das
add
cs
loope
cwtl
ret
popa
push
jl
ss
lcall
fnstcw
pop
inc
adc
fdivrl
and
loopne
jge
lret
xchg
ficomps
mov
loop
pop
test
dec
cmp
push
imul
mov
decb
rolb
lahf
sub
jge
lahf
lret
sbb
mov
pop
jo
addr16
pop
sub
mov
cmp
adc
cmp
repz
arpl
arpl
fldl
out
xor
out
jecxz
push
dec
push
fcomps
ret
scas
test
xchg
and
int
mov
mov
shlb
sbb
dec
push
add
cmp
or
inc
push
adc
std
dec
imul
xchg
lcall
cmp
adc
cmpl
push
xor
loopne
mov
push
aas
xor
fiaddl
push
ret
dec
cmp
xchg
sahf
dec
xor
pop
cmp
inc
jmp
dec
xor
mov
insb
js
pusha
fdivs
xchg
xchg
es
test
insb
jb
adc
adc
lcall
inc
xchg
lcall
addl
xor
and
inc
scas
xchg
aas
mov
cwtl
in
inc
outsl
mov
jo
and
mov
repnz
mov
mov
pop
jecxz
rcrb
inc
js,pt
mov
cmp
pop
stos
aaa
dec
xor
repz
outsb
mov
cmp
popf
inc
sarb
dec
cmp
mov
scas
sbb
iret
outsb
xchg
das
inc
js
cmp
outsb
xchg
xor
xchg
fsts
inc
pop
bound
mov
xor
fisubrl
aas
andb
dec
push
imul
sub
out
push
jo
mov
bound
ljmp
or
imul
sub
xor
adc
or
cwtl
jge
arpl
cmp
mov
pop
and
push
outsl
sbb
mov
push
pop
jmp
stc
icebp
fistpl
xor
aaa
push
sahf
xchg
cmp
cmp
lea
fldt
and
cmp
clc
mov
inc
jmp
jo
dec
push
sub
jnp
shlb
ret
cmp
cmp
cmp
inc
cld
aaa
lcall
sbb
cmp
sbb
jle
adc
xlat
bound
imul
mov
inc
jle
mov
xchg
dec
cmp
aad
mov
cmpsb
fcmovnu
or
insb
nop
push
sbb
cmp
cmp
std
pop
mov
pop
jmp
out
mov
cld
jnp
pop
int3
dec
adc
pop
lea
lcall
add
in
jbe
clc
sub
lods
xchg
mov
dec
sbb
fcoms
sbb
xchg
inc
ljmp
divl
mov
hlt
sub
and
inc
inc
jp
or
xchg
ljmp
and
das
inc
lea
mov
fsts
mov
sahf
push
iret
arpl
add
std
mov
push
stc
inc
or
rcrl
lcall
pop
sbb
mov
or
push
push
mov
lahf
jl
dec
data16
call
xchg
popa
jmp
inc
test
repnz
jge
inc
jae
mov
insb
jb
add
stos
or
ficompl
cmp
mov
sbb
xchg
jle
inc
jae
cmp
dec
xchg
daa
sbb
pop
adc
cld
insb
sub
aad
sarl
mov
bound
fdiv
test
add
data16
inc
sti
fucomi
pop
fcmovne
push
mov
cmp
andl
xchg
fisttpl
add
or
inc
sub
cmp
fstpl
outsl
adc
mov
mov
xor
push
pop
test
mov
xchg
dec
push
and
fcoml
mov
lret
pop
add
fistps
adc
popf
les
shr
stos
cmp
xor
sbb
dec
push
dec
mov
jns
out
add
or
fwait
adc
inc
sbb
sub
sbb
or
lret
inc
jp
dec
out
xorl
test
or
adcb
pop
push
jnp
or
mov
out
std
mov
repz
loop
lods
sub
outsb
dec
mov
out
mov
mov
xchg
cmp
das
pop
mov
mov
sbb
sub
push
mov
sub
jle
jle
mov
or
cmp
fdivrs
mov
mov
sbb
lock
cmp
sbb
adc
pop
xor
dec
pop
repnz
xor
out
fiaddl
ss
sbb
adc
aam
add
push
int3
dec
push
or
daa
popf
cwtl
jge
xchg
sbb
sub
dec
sti
out
jno
jge
movsl
imul
and
xor
iret
clc
sbb
loop
test
cmp
mov
mov
mov
outsl
or
or
mov
sbb
pop
mov
push
cmp
lret
movl
adc
outsl
clc
mov
lret
mov
out
mov
jae
sbb
dec
fsubrl
mov
inc
ss
xchg
scas
push
pop
pop
add
lret
push
rclb
daa
out
inc
dec
and
adc
or
or
mov
cmp
and
mov
sbb
cmp
inc
mov
dec
je
or
jb
sub
fistpl
int
or
cmc
mov
stos
xor
dec
push
cmp
push
lret
rcll
aam
outsl
insb
aaa
fldt
and
stc
mov
sub
les
xor
adc
push
pop
jbe
out
sahf
mov
cmp
push
js
sbb
pop
repz
mov
pop
mov
lock
or
jnp
adc
stos
sbbl
mov
dec
jl
pop
sub
pop
out
and
sub
mov
es
cmpsb
pop
testl
cld
mov
cmp
add
push
add
xchg
icebp
jae
push
pop
add
pop
es
push
inc
xchg
and
mov
jp
cli
movaps
pop
xchg
sti
xchg
cltd
enter
mov
lds
into
xchg
into
lret
sbb
jle
add
inc
aas
aad
or
sub
outsb
inc
xlat
push
cmp
pop
incl
jecxz
or
stos
movb
dec
sbb
mov
mov
enter
in
add
adc
loopne
bnd
popf
adc
sub
insb
inc
or
pop
cmp
cmp
dec
push
lret
xchg
mov
jle
arpl
push
mov
dec
mov
pushf
mov
pushf
cltd
scas
pop
adc
into
xchg
jmp
and
push
add
sbb
movsl
jbe
cmp
fdivs
je
mov
cmp
sub
and
inc
add
or
ljmp
sub
and
ja
dec
push
xchg
mov
ficoml
mov
imul
fisubrl
fidivrs
pop
addr16
adcb
mov
mov
es
inc
rol
imul
push
dec
inc
cmp
rcrl
outsl
ficoms
dec
mov
ret
std
sub
add
pop
push
and
fnstcw
cld
cmpsl
leave
fstpt
jns
cli
sbb
in
je
cwtl
adc
in
in
imul
pop
popa
lds
lahf
mov
push
and
es
imul
pop
fs
xchg
leave
push
fisubrs
jae
add
std
mov
cmp
push
cmpsl
dec
pop
dec
adc
fucomp
sub
repnz
cmp
xor
cmp
pop
ds
mov
lret
decl
dec
mov
cmc
cltd
sbbb
in
push
push
outsl
push
mov
test
stos
push
push
pop
xorb
mov
shlb
test
xlat
popa
fucomi
jge
lods
data16
or
jo
leave
aad
and
push
cmp
sti
pop
loopne
xor
dec
jae
mov
mov
movsl
idivb
adcb
xorl
push
cmp
dec
push
mov
or
xchg
add
adc
inc
ja
loop
je
jae
loop
push
repz
mov
push
cmp
xor
fbstp
pop
adc
jecxz
push
popf
dec
enter
or
movsl
add
push
mov
jb
mov
outsl
dec
xor
aas
inc
xor
lret
cwtl
dec
pop
dec
imul
cmp
clc
sarl
dec
add
add
pop
popf
outsl
xor
mov
push
xor
cmp
inc
xchg
subl
and
pop
aam
mov
cltd
mov
inc
js
rcrb
sbb
cli
and
mov
ds
cmpsb
fisubrs
sbb
imul
push
xchg
test
lock
bound
xchg
mov
cmp
jge
jl
adc
aam
sbbb
add
mov
cmp
scas
dec
mov
testb
in
pusha
jl
jg
pop
cmpsb
sub
movaps
xor
push
pop
ss
sub
out
sbbb
loope
xor
stos
insl
aad
fcmovne
daa
int
lods
sbb
aas
sub
insl
xchg
or
inc
jecxz
xchg
inc
out
xor
and
sub
or
stos
jae
cmp
dec
dec
clc
ret
dec
sbb
sub
inc
inc
xchg
imul
mov
inc
or
repz
mov
cmp
pop
je
fldt
jb
mov
push
jecxz
push
mov
and
repnz
jmp
jp
fmuls
sub
or
xchg
xor
pushl
xchg
loop
xchg
and
adc
daa
pop
jns
jmp
cmp
xor
sbb
ss
cmpsb
sub
pop
sub
scas
dec
outsl
cmp
pop
sbb
adc
stc
and
cmp
bound
subl
add
filds
scas
adcl
das
mov
arpl
adc
pop
push
jb
push
inc
xchg
insb
push
dec
jl
mov
xlat
jns
push
cmp
cs
es
push
sub
dec
dec
cmp
pop
xchg
aad
xor
ja
mov
cmove
repnz
cmp
mov
addb
sbb
outsb
inc
cmp
cmp
cmp
dec
pop
sub
int
inc
in
fs
test
test
out
pop
mov
in
cmp
test
arpl
scas
std
inc
aad
cmp
das
mov
pop
leave
in
aad
lret
sbb
pop
sub
or
aas
push
sbb
pop
push
pop
or
inc
xorb
stos
lods
imull
pop
int
dec
xchg
dec
inc
inc
fwait
mov
inc
imul
iret
jge
movsb
mov
mov
xor
push
dec
test
cld
inc
mov
es
shrl
fidivrs
adc
add
lcall
test
jmp
add
sub
adc
scas
inc
mov
sbb
xchg
mov
xor
lret
lret
push
stos
aad
scas
jns
ss
adc
out
bound
or
push
sbb
push
jecxz
mov
cwtl
mov
push
mov
mov
stos
repz
sub
fwait
xchg
push
loop
rclb
mov
sahf
or
mov
add
mov
mov
lret
in
lods
fisttpl
inc
lret
push
orb
xor
mov
movsl
and
lret
inc
cwtl
or
mov
mov
jo
xchg
notb
mov
cmp
inc
sbb
sub
cwtl
pop
sbb
and
int3
push
add
stos
push
int3
xchg
xchg
mov
call
xlat
std
xor
ss
push
aas
xchg
fwait
adc
jl
jg
sbb
mov
lahf
call
push
mov
cltd
cmp
orb
or
xchg
sbb
das
gs
dec
xor
adc
mov
cmc
sbb
pop
shrb
jle
xor
stc
aam
and
sbb
push
imul
mov
mov
lock
pusha
pusha
xchg
add
cli
dec
daa
xchg
rclb
andl
mov
movsl
lahf
insl
mov
xchg
ficoml
dec
or
sub
sbb
sub
shlb
pusha
xchg
or
mov
scas
out
das
xor
xor
jno
loop
ja
inc
mov
and
data16
push
dec
pop
cmp
scas
imul
xor
nop
outsl
sub
push
movsl
lcall
dec
jnp
sbb
inc
jb
aam
shr
std
loopne
ja
ret
jnp
adc
pop
aad
call
std
jne
test
lds
outsl
push
rclb
cmp
push
iret
les
add
xchg
or
cmp
and
and
rcrl
into
or
idivl
lret
leave
mov
lret
or
int
inc
pushf
orb
cmp
fldt
loopne
faddp
push
sub
je
push
sti
ss
sbb
cld
rcrl
ljmp
push
pop
in
leave
outsl
jmp
jns
push
lret
xor
adcl
imul
imul
push
aaa
xor
stos
mov
mov
sub
popa
jno
ss
and
adc
cmp
sub
pop
pop
inc
pop
rol
jge
cmp
jecxz
pusha
out
ret
popf
outsb
and
clc
fmuls
inc
cwtl
jge
sub
push
aam
out
jmp
xlat
mov
shlb
adc
sub
jns
cmp
push
jo
add
adc
imul
daa
cli
cmpsb
cmpsl
out
outsb
aad
pop
insb
sub
dec
cmp
xor
addl
sbb
push
pusha
sub
mov
repnz
mov
mov
jmp
cwtl
sub
roll
fbld
fisttps
out
and
mov
pop
movsl
inc
sbb
inc
ja
popa
adc
dec
jle
mov
icebp
sub
pusha
leave
popa
push
adc
and
inc
add
jge
mov
mov
arpl
dec
jl
sbb
and
xchg
outsl
sbb
std
push
xor
adc
mov
pop
aam
outsl
lahf
ja
and
or
outsb
mov
fldt
add
pop
sub
dec
add
int3
jle
dec
cmp
es
lret
lret
int
imull
adc
push
pop
adc
test
sbb
pop
mov
sbb
in
sahf
dec
jb
rolb
mov
imul
and
loopne
dec
dec
pop
sti
push
int3
inc
movsb
roll
add
xchg
sarl
mov
mov
les
push
sub
hlt
outsl
inc
fcompl
movsl
mov
faddl
rol
insb
xchg
cmp
mov
dec
xor
fcompl
or
xchg
push
mov
pop
negb
cmpsl
jne
or
std
add
dec
mov
out
imul
es
scas
sti
loopne
and
ja
mov
cmp
lret
sub
inc
aas
lods
cmp
adc
and
mov
ljmp
idivl
adc
cs
cmp
xor
mov
bound
jns
inc
push
and
test
mov
mov
outsl
nop
mov
imul
push
xchg
test
push
mov
lea
les
aaa
or
or
cld
adc
outsb
ljmp
mov
mov
mov
and
mov
mov
cmc
adc
jo
mov
in
xor
jb
pop
sub
push
mov
ss
divl
dec
push
dec
cmp
add
mov
test
aaa
out
xchg
mov
sbb
sbb
fistpll
push
dec
push
outsl
and
push
push
push
push
xor
xchg
xchg
std
adc
push
out
mov
mov
push
dec
sbb
ror
sbb
stos
cmp
notb
jae
cmpsb
jne
cli
lods
test
mov
push
pushf
ret
imull
cmp
test
ss
jnp
dec
dec
xor
and
cmp
mov
outsl
fdivl
xor
and
or
push
shlb
push
aaa
push
inc
cmp
inc
fs
mov
sub
fs
fldt
sub
adc
cltd
fwait
inc
sub
xor
mov
cmp
dec
or
or
inc
out
lret
stc
jmp
sbb
inc
or
xlat
add
stos
ret
sbb
arpl
lock
inc
or
pop
xchg
push
jae
push
pop
and
insl
js
cmp
daa
push
int
mov
or
ss
adc
movl
cs
dec
push
cwtl
scas
and
cmp
ss
jecxz
mov
bound
gs
xchg
lcall
xor
ss
xchg
sub
sbb
mov
fwait
mov
sbb
sbbb
xor
aaa
sub
push
cs
daa
jnp
cmp
or
pop
mov
and
scas
sbb
sbb
pop
push
fmull
aad
aaa
xor
loop
sub
push
shlb
mov
xlat
insb
mov
roll
testb
lds
scas
or
jae
stc
adc
out
mull
clc
movsb
sub
int3
mov
inc
jle
fnstcw
add
or
rclb
fdivrl
dec
fstpt
push
push
and
lret
movsb
jb
or
push
and
or
enter
lret
add
dec
jnp
fiadds
dec
ret
aaa
push
lahf
test
dec
dec
outsl
insb
rcl
adc
ja
mov
notl
fdivl
ret
mov
jp
add
iret
dec
mov
add
or
mov
out
or
shll
or
adc
push
subl
test
je
lahf
aad
or
mov
mov
mov
mov
push
dec
cmp
push
jg
arpl
js
loopne
pop
or
fisttps
lahf
pop
dec
fistpl
pop
lods
xchg
sbb
dec
pop
mov
test
testl
adc
cmp
adc
cmp
sub
testl
movsl
inc
mov
xchg
xchg
cs
cmpb
shll
aas
pop
jbe
lods
inc
sbb
jo
iret
mov
mov
adc
repz
jne
mov
push
adc
jno
lret
loope
cltd
add
mov
push
inc
lahf
vmovups
xor
cmp
push
mov
inc
popa
fs
jl
push
jo
in
out
sbb
add
ljmp
sbb
cmp
pop
jo
pop
imul
fistps
movsl
xchg
stos
or
mov
inc
insb
lahf
jl
xor
pop
pop
aaa
jmp
das
lods
mov
fistl
mov
pop
pop
sub
lcall
jbe
cli
cmp
jmp
std
jo
jo
lahf
rcll
pop
mov
xchg
dec
inc
imul
shll
das
pushf
add
adc
pusha
cmc
xor
gs
pop
jle
mov
push
pop
mov
cmp
pop
ja
inc
dec
push
sbb
mov
loopne
sub
daa
mov
lcall
lods
push
popa
xchg
xchg
loop
gs
pop
dec
pop
or
xchg
adc
shlb
push
imul
popf
xor
imul
sbb
icebp
scas
loop
or
out
xlat
orl
push
and
loop
pop
dec
or
dec
cli
gs
add
andb
imul
outsl
or
mov
or
aas
push
pop
inc
jmp
mov
sbb
pop
sbb
mov
or
mov
xor
adc
add
cs
mov
pop
pop
mov
out
fdivr
and
cmp
lcall
pop
nop
jle
mov
and
mov
bound
in
loop
or
xor
adc
and
push
or
out
or
jp
mov
je
sub
xchg
xchg
push
out
mov
pop
add
data16
cli
xchg
cmc
push
mov
arpl
mov
add
rorb
push
je
mov
cs
mov
repnz
mov
test
fnstcw
cmp
fisubrl
push
add
pop
scas
shlb
jl
outsl
cmp
mov
mov
pop
decl
push
jmp
sub
pop
pop
xor
adc
dec
ret
xor
add
pop
mov
lcall
rep
mov
mov
mov
mov
sbb
pop
lods
cmp
push
cmp
cmp
xor
dec
add
dec
ds
stos
mov
dec
pushf
xchg
cmp
das
iret
arpl
push
mov
xor
jno
cmp
das
inc
fdivr
ficompl
lret
cld
test
sbb
push
push
inc
out
jg
pop
mov
imul
lret
loop
mov
popa
push
cs
sarb
adc
or
jo
push
mov
xchg
pop
adc
dec
loop
add
fisttpll
sub
shl
dec
in
fwait
jp
daa
das
push
push
push
stc
and
mov
adc
lds
push
push
enter
jns
in
fiaddl
sub
inc
pop
adc
inc
sub
jmp
ja
and
aas
xorl
adc
push
pop
xchg
push
xor
adc
cmpsb
inc
xor
mov
cmp
pop
repz
push
push
sti
sbb
mov
push
or
xchg
clc
dec
lods
xor
sbbl
int
sahf
sub
mov
mull
xchg
adc
mov
mov
dec
mov
xor
shrb
push
lcall
mov
hlt
ds
cmp
mov
sub
add
cmp
dec
aas
dec
cmp
xor
lods
cli
xchg
pop
inc
adc
mov
arpl
mov
cwtl
imul
cmp
sti
sub
fsubr
clc
xor
or
adc
pop
imul
insl
pop
xchg
inc
mov
push
bound
out
leave
cmp
or
test
dec
mov
fistpll
aam
imul
fsub
lock
inc
mov
adc
mov
out
ss
push
outsl
sub
jns
fldl
hlt
mov
inc
aas
xchg
fs
out
fcmovne
dec
pop
push
rorb
es
mov
mov
push
and
xchg
xor
repz
inc
test
adc
das
xchg
ret
sub
mov
sub
xchg
imul
jg
test
mov
sti
outsl
mov
call
dec
jmp
iret
push
loop
loopne
ficomps
sbb
roll
pop
dec
jl,pn
mov
pop
mov
push
jo
mov
jmp
push
xlat
mov
prefetcht2
xlat
mov
add
icebp
mov
lcall
mov
inc
loopne
cltd
cmp
or
cmp
sub
add
mov
daa
imul
out
and
pop
pop
loope
push
cs
jp
or
aaa
lock
out
ja
cvttps2pi
pop
das
loop
pop
cltd
mov
lock
and
daa
ss
rcrb
sub
xor
mov
cmp
data16
xor
shl
pusha
or
aas
sbb
mov
pop
push
push
mov
jle
jne
xor
cmp
sub
pop
dec
ds
jns
add
jg
das
lock
pop
sbb
dec
or
add
ss
pop
adc
mov
sbb
inc
xorb
pushf
sti
jecxz
enter
gs
ds
jp
lds
push
dec
jns
push
sbb
inc
and
push
lcall
cmp
iret
jge
cltd
mov
mov
pusha
lock
sbb
sbb
adc
nop
or
aad
dec
push
rorb
scas
pop
mov
lret
xchg
adc
jne
pop
data16
xlat
sti
xlat
sbb
jmp
jne
hlt
xor
call
mov
repz
mov
or
idiv
push
imul
testb
aas
xor
movsb
cmp
std
mov
mov
mov
int
sbb
es
xchg
fiadds
cli
shll
push
inc
fwait
inc
cmpsl
popf
jmp
mov
test
mov
inc
push
out
pop
pop
mov
dec
adc
inc
ljmp
inc
loop
sbb
mov
out
push
gs
shrb
addr16
test
xor
sbb
sub
aaa
xchg
test
arpl
movsl
repz
fistl
fcoms
sbb
sub
cmc
pop
jb
imul
negl
int
or
adc
lret
dec
dec
addr16
mov
daa
sub
add
cmp
xchg
js
add
gs
cmp
leave
adc
dec
xchg
xlat
les
imul
sub
imul
fcmovnb
pop
dec
jo
mov
ret
xchg
btsl
leave
add
es
jae
lcall
and
xchg
and
mov
test
mov
fs
mov
fimuls
and
adc
decb
rorb
and
setle
shlb
jnp
mov
loop
and
or
mov
jae
out
adc
dec
cwtl
add
gs
test
test
mov
pusha
adc
pop
test
mov
pusha
int3
pop
ss
pminub
test
push
fbld
and
push
mov
sbb
inc
outsb
out
fs
ljmp
push
loope
sbb
cmp
fisttpl
pand
cmp
cwtl
stos
sbb
rorl
xor
ror
sarb
cwtl
shrl
push
outsb
pop
xlat
sub
push
cmc
js
push
inc
mov
sbb
popf
pop
dec
mov
mov
add
lea
pop
inc
xchg
push
mov
rcrl
test
xor
loop
out
fists
int3
fistl
pop
jo
and
xor
ja
movhps
xor
mov
jl
jb
ds
jbe
adc
divl
stos
dec
hlt
adc
daa
leave
pusha
cwtl
mov
lret
add
movsl
pop
sub
or
ret
sub
cltd
inc
es
sub
push
jmp
pop
mov
ss
jmp
sub
test
sbb
dec
lds
cmp
pop
pop
lahf
les
add
test
scas
out
call
or
push
icebp
inc
daa
clc
mov
fucomi
scas
int3
les
iret
xor
xlat
push
mov
push
aad
push
jne
sbb
bound
repz
jo
inc
mov
sub
push
pop
popa
cwtl
push
sbb
icebp
pop
lods
sub
je
mov
int3
dec
add
out
gs
add
lock
xchg
pop
inc
hlt
jns
fistl
dec
leave
sbb
jge
cmp
sub
insl
mov
mov
cmp
or
xor
or
pop
adc
add
negl
aas
psrlq
mov
daa
ret
xchg
frstor
insl
arpl
xor
in
jbe
and
sbb
rcrl
add
and
aad
cmp
std
xor
pop
rcr
int
pop
stos
and
stos
jecxz
mov
imul
pop
out
loope
mov
sbb
out
aas
ljmp
push
jae
dec
pop
bound
insb
pushf
jo
mov
ja
jmp
mov
inc
mov
jl
ret
sbb
cmp
repz
pop
inc
or
push
inc
cmp
sbb
xchg
or
das
or
mov
inc
jmp
push
test
inc
xchg
inc
ret
lods
shlb
fcmovu
ljmp
mov
pop
cmp
stc
dec
mov
mov
inc
mov
ja
mov
sti
xchg
fimuls
push
jge
arpl
out
push
mov
shl
xor
testl
add
cmp
mov
sub
mov
mov
sbb
add
or
or
out
xchg
stc
and
or
adc
mov
adc
faddl
sbb
xor
sbb
mov
sbb
dec
or
fwait
ds
cmp
push
add
in
adc
push
sub
clc
sti
push
cmp
mov
shlb
xchg
or
or
sbb
cmp
cmp
mov
je
mov
sbb
inc
mov
or
dec
mov
sub
dec
mov
push
xlat
mov
adc
inc
mov
cmp
pop
pop
mov
loop
mov
push
je
adc
iret
push
xchg
testb
mov
mov
outsl
movsb
push
fsts
rcrl
mov
mov
mov
dec
cmpsl
mov
stos
mov
scas
mov
inc
mov
dec
mov
lods
dec
mov
mov
cmp
mov
inc
mov
inc
mov
inc
mov
inc
mov
mov
iret
push
jnp
xchg
sub
push
inc
mov
pop
in
sub
or
out
mov
sbb
sbb
sbb
adc
pop
dec
cltd
repz
gs
mov
inc
loop
bound
push
dec
aad
dec
loop
repz
jnp
rcrl
mov
inc
out
lcall
push
cmpsl
mov
and
cmpsl
add
sub
dec
and
mov
cmp
test
iret
sub
and
sbb
push
sbb
or
xor
add
repz
inc
and
xchg
push
mov
rcr
fmuls
ret
fcmovne
sbb
sbb
cmp
stos
lods
inc
repnz
cwtl
push
push
add
sbb
leave
sbb
push
and
lds
xor
dec
add
mov
mov
push
add
push
xchg
pop
or
sbb
xor
sbb
sub
dec
jae
push
pop
and
negb
jmp
add
sbb
stc
test
movsl
lret
xlat
jns
jb
pop
enter
subb
in
push
mov
jns
aad
out
push
push
pop
dec
mov
shrl
test
pop
jp
shlb
or
cmp
mov
inc
ljmp
push
push
sub
mov
xchg
inc
testl
mov
dec
stc
pop
or
es
or
jmp
sub
xor
fildl
jnp
xor
lcall
pusha
push
fldenv
sahf
mov
fwait
test
popa
cmpsl
xchg
fisttps
sbb
dec
mov
adc
imul
mov
iret
jg
in
pop
jecxz
call
jle
cmp
into
stc
lahf
mov
pop
add
mov
cltd
mov
daa
add
sti
and
push
dec
movsb
mov
cmp
pop
outsb
das
pop
mov
in
mov
repnz
mov
mov
loopne
insl
pop
pop
lock
cwtl
lahf
pop
mov
sub
out
adc
pop
xchg
inc
jle
push
std
sti
popa
es
mov
adc
inc
push
mov
in
movb
js
pop
cmp
das
dec
jno
lock
mov
hlt
fisubrs
sub
adc
insl
in
iret
add
mov
jp
xor
jne
inc
mov
push
insl
es
pop
jnp
shrl
add
pushf
lds
stos
mov
jno
dec
xchg
mov
leave
imul
inc
inc
push
lret
or
mov
fimuls
mov
popf
add
add
mov
pop
das
loop
inc
add
mov
xchg
lods
jecxz
mov
pop
dec
mov
into
pop
cmp
dec
sub
ret
xor
mov
adc
adc
daa
stos
insb
into
or
arpl
jmp
bnd
rcrl
incl
add
popf
mov
test
add
push
int3
fists
scas
xchg
push
outsl
sub
nop
inc
inc
cs
pextrw
adc
aas
or
jne
sarl
mov
jnp
stc
adc
cmp
das
xlat
lock
dec
xor
inc
adc
sbb
enter
xchg
pop
and
mov
add
sbb
js
cli
push
fwait
push
push
fidivrl
cmp
pop
mov
pusha
xchg
repz
xchg
adc
mov
arpl
inc
jne
push
xor
cmc
jl
je
adc
loopne
push
lock
inc
aas
or
mov
scas
mov
pop
cmpsb
dec
add
fwait
push
jns
dec
push
mov
lcall
sti
mov
push
sub
popf
sbb
addl
insl
sbb
jnp
adc
sub
adc
jo
xor
fs
adc
xchg
lret
add
dec
push
cli
mov
cltd
push
jmp
outsl
cwtl
sbb
push
jne
mov
jmp
push
xor
das
mov
cmovb
or
sub
jno
and
jns
cwtl
and
in
cmc
imul
rcrl
rcll
imul
or
fisubrl
cli
ja
push
inc
bound
add
outsl
imul
ss
lds
sbb
mov
lods
fistpl
aad
and
and
inc
mov
push
xchg
int3
jmp
cmp
cld
cmpsb
push
stos
fwait
xor
ljmp
adc
add
push
sub
das
lods
xchg
out
pop
xchg
dec
fcmove
fisttps
js
xlat
ret
outsl
popf
and
repz
cmc
imul
push
cwtl
jo
fistpll
mov
arpl
adc
push
cli
fwait
lods
xor
loopne
imul
pop
stos
adc
es
outsl
dec
clc
movsl
or
or
push
pushl
test
hlt
inc
fwait
pop
xchg
sbb
cmp
inc
push
inc
in
xchg
xchg
cli
add
sub
cmp
ficoms
push
add
mov
ss
out
pushf
comiss
push
xchg
idivb
jmp
xor
outsl
hlt
pop
fninit
repnz
push
mov
fisubs
clc
cmp
dec
cmpsb
push
mov
push
sbb
xchg
shrb
mov
xor
add
push
cwtl
mov
xchg
adc
ljmp
ficoml
mov
jecxz
cli
dec
sarl
xor
sub
cmp
sub
mov
jnp
mov
add
or
or
jle
pop
xchg
stos
ret
mov
adc
je
fst
cmp
push
push
sbb
repz
mov
push
add
nop
lods
in
add
inc
pushf
sti
dec
fstpl
mov
loope
cmp
cwtl
xor
imul
pop
ja
adc
mov
lret
adc
mov
xor
lods
lcall
mov
xor
xchg
fcmovb
lret
test
xchg
sbb
jae
xchg
dec
xor
sbb
popf
les
pop
ds
inc
addr16
xchg
out
jl
clc
mov
xchg
xchg
mov
sbbl
add
ja
adc
add
pop
push
mov
lahf
add
ss
jle
fwait
outsl
dec
cli
mov
js
pop
sub
insb
imull
cmp
repnz
xor
xlat
jg
arpl
dec
leave
xlat
push
cwtl
pop
mov
pop
mov
jp
adc
pop
jns
push
cmpsb
add
mov
xchg
xchg
jae
mov
xrelease
mov
mov
jmp
jns
inc
sub
cmovs
out
call
inc
pop
dec
ss
test
jae
cmpl
jl
das
pusha
push
xchg
pusha
sbb
ret
pusha
jg
xchg
outsl
pop
loop
inc
push
inc
fcmovnu
in
sti
jmp
imul
int3
cs
lds
and
fucomp
loope
push
pushf
lcall
cltd
out
mov
fwait
cwtl
gs
fs
add
push
adc
fistl
mov
shl
inc
test
ret
rcrb
ficomps
mov
out
loop
stos
sbb
sti
inc
jmp
mov
sub
imul
jle
dec
fwait
sub
adc
jp
pushf
rdmsr
ret
or
push
and
add
jge
push
sbb
push
sub
cmp
pusha
push
addr16
jns
cmp
icebp
data16
call
gs
jae
bound
dec
mov
aaa
pop
mov
sbbb
je
sbb
mov
and
adc
sbb
out
cmp
test
insb
repnz
aad
jmp
add
js
aad
aas
and
mov
xlat
sub
xchg
pop
imul
xchg
push
or
sub
or
enter
fcoms
and
cmp
inc
dec
mov
aas
pushf
push
mov
loopne
mov
dec
lret
pop
mov
in
orl
arpl
push
testl
dec
icebp
jmp
push
add
dec
push
mov
stos
bound
cmpsb
xor
mov
push
movl
mov
cltd
xor
mov
pop
cmp
ret
stos
mov
push
popl
and
jnp
jno
sbb
push
cmp
adc
lahf
sbb
mov
xchg
loop
adc
in
loop
jbe
jmp
cmpsb
inc
lret
jnp
ljmp
pop
inc
push
dec
pop
sbb
push
push
push
mov
xchg
ficoml
push
xchg
fwait
aad
dec
repnz
cmp
es
sub
std
add
xchg
stos
fbstp
cld
cmpsb
push
push
sbb
push
stos
dec
repnz
mov
out
fmuls
jle
push
xchg
jb,pn
fiaddl
xchg
and
jl
xor
mov
aaa
mov
sti
cmp
loop
add
sub
inc
pop
jnp
xchg
ret
add
jg
lods
push
xchg
jge
fldcw
inc
repz
xchg
icebp
das
sbbb
ljmp
xchg
jbe
jno
push
sbb
mov
or
inc
fcoms
mov
gs
shll
inc
stos
adc
xor
pop
xchg
inc
xor
sbb
pop
imul
adc
inc
mov
sbb
or
pop
imul
mov
jb
push
bnd
ja
das
and
movsl
xor
jl
daa
cmpsl
xchg
xor
xchg
push
sub
or
and
sbb
sbb
pop
divl
scas
push
mov
hlt
addb
lcall
scas
dec
inc
insl
movsb
dec
xchg
pop
idivl
ss
sub
ss
icebp
imul
add
cmp
dec
ss
and
push
bts
and
sbb
push
mov
scas
sub
mov
mov
iret
mov
fs
mov
enter
repz
xchg
push
push
dec
inc
cltd
pusha
icebp
mov
incb
int3
fucom
inc
fildl
push
sub
lret
int
aad
inc
dec
dec
xor
sbb
iret
jae
cmp
dec
push
bound
je
sbb
stos
iret
push
xor
popf
fisubrs
jp
mov
fstps
mov
push
add
mov
and
inc
mov
outsl
sbb
fstps
and
rorl
sbb
incb
inc
jg
fucomp
xorb
int
or
shr
sbb
dec
bound
lret
and
adc
jge
jae
pushf
repz
adc
xor
out
adc
jbe
mov
cmp
jbe
pop
icebp
out
imul
pushf
rcr
cmp
mov
aas
js
sub
add
iret
scas
nop
mov
jmp
int
pop
adc
mov
xchg
jg
or
lea
jp
adc
lret
adc
lods
nop
sub
jg
and
sub
sbb
sub
stos
das
dec
adc
push
dec
add
pop
xor
clc
bound
cmp
sub
jne
stc
mov
scas
inc
add
push
adc
pop
test
test
jmp
pop
cmp
sbb
mov
cmpl
repnz
cmc
ljmp
cmp
mov
push
jnp
xchg
and
mov
jb
pop
lret
stos
push
popa
shrl
shll
je
and
xor
mov
test
inc
sti
inc
out
insb
cli
mov
jg
inc
jne
xchg
cs
cld
mov
jge
out
xchg
inc
mov
dec
bound
inc
push
sbb
dec
or
push
pop
inc
outsl
push
fnstenv
mov
dec
cmp
inc
adc
sti
idivl
fimuls
mov
movsb
pop
jns
imul
ljmp
mov
mov
xor
ss
jmp
add
es
xchg
outsb
dec
dec
in
xchg
stos
add
out
xor
mov
or
pop
pop
xchg
lds
push
mov
lcall
fildll
test
jecxz
xor
or
cld
sbb
xchg
push
mov
lret
fstpl
or
mov
iret
aas
stos
fdivs
adc
popf
ss
push
fisttpll
sbb
mov
jecxz
fimuls
adc
dec
cmpsl
dec
notb
call
xlat
jecxz
fdivr
int
jnp
or
rcrb
mov
pop
xor
clc
add
adc
xchg
icebp
clc
int
cld
xchg
pop
out
xor
mov
jmp
jle
inc
rolb
lock
das
xchg
fwait
repnz
clc
dec
stos
mov
das
cmp
jmp
or
push
push
or
jge
xlat
lods
cmpsl
pop
mov
adc
adc
lret
outsl
and
addr16
lock
add
js
dec
pop
scas
mov
xchg
add
jg
rcrb
mov
ret
add
mov
fcom
cmp
cmp
xchg
ss
lcall
add
xchg
insb
repz
jge
push
inc
push
push
sbb
jbe
dec
mov
dec
push
nop
jne
fwait
push
ja
adc
mov
enter
lahf
inc
fidivrl
jns
cltd
lret
movsb
aas
sbb
push
imul
repz
mov
sbb
adc
nop
xor
xor
int3
sub
xchg
push
xor
hlt
sbb
in
mov
mov
pop
fs
cmpsl
sbb
rolb
lock
push
push
iret
sbb
sti
pop
push
inc
ret
sbb
mov
mov
mov
sarb
leave
jae
cmp
testl
jmp
mov
fldt
aam
push
jbe
xchg
mov
adc
cmp
and
fistl
lods
add
repz
xchg
fcmovu
movsl
mov
fildl
and
in
jae
mov
sub
dec
mov
inc
adc
and
push
xchg
sbb
adc
and
lret
sub
call
mov
adc
push
or
jo
into
and
dec
aaa
test
pop
fwait
mov
add
push
out
push
cs
stos
test
adc
data16
movl
xchg
mov
mov
cltd
or
jmp
mov
push
cwtl
sub
scas
sbb
or
fsts
push
push
mov
mov
sbbl
or
and
and
nop
in
or
push
xor
aam
shrl
inc
mov
lods
cs
pop
and
sti
add
pop
fsubrp
les
lahf
jl
mov
jle
test
inc
and
mov
call
and
test
fstpt
jecxz
xchg
in
adc
insl
sub
not
xchg
lahf
cmp
mov
sbb
xor
cltd
mov
inc
add
test
pop
pop
push
dec
adc
or
das
ret
imul
loope
dec
aaa
adc
test
pop
inc
xchg
add
stc
aad
ret
inc
out
cld
cmpsl
sub
push
push
sub
adc
jo
loopne
mov
sub
negb
inc
adc
outsl
push
dec
les
ret
add
sbb
pop
out
inc
or
pop
sub
dec
iret
in
negl
xchg
cmp
test
inc
mov
xchg
mov
inc
mov
mov
xor
pop
xor
cmp
add
mov
stc
cmpsl
clc
pop
leave
push
push
aad
mov
sbb
and
call
sub
jecxz
adc
fimull
dec
aas
jbe
push
loop
faddl
push
sbb
or
testb
lods
lret
popf
mov
lahf
cli
aam
xchg
arpl
adc
testb
push
ret
push
inc
outsb
iret
test
adc
sbb
adc
jbe
dec
enter
mov
rcll
out
aad
scas
lea
ret
leave
hlt
shl
dec
cmp
xchg
inc
sbb
cs
inc
pop
cmp
fldt
sbb
mov
sub
dec
stc
lret
insb
mov
pop
jl
sbb
mov
testl
cmp
mov
jb
add
or
jle
les
ss
cmp
fistpl
sbb
adc
and
sbb
sbb
push
test
jno
jge
popf
cmpsl
ljmp
pop
dec
imul
mov
sbb
inc
shl
push
xor
cmp
rclb
and
push
outsl
xchg
sbb
ja
dec
sti
pop
or
cvtps2pi
shlb
sbb
xor
insl
lret
popf
jo
testb
es
sti
dec
pop
xor
stos
cmp
fcompl
cmp
push
mov
jp
mov
ja
sbb
sub
sub
pop
cmp
inc
lods
cwtl
jb
ss
ss
fsubs
leave
cmpb
ljmp
dec
shlb
lahf
es
popf
lret
test
push
cmp
sti
cmp
adc
jns
fmull
cmp
leave
js
int3
jno
add
lret
sarb
mov
xchg
leave
xchg
scas
dec
sbb
movl
sbb
or
pop
or
adc
popa
and
dec
jmp
jb
dec
sub
or
out
push
inc
stos
fdivl
xchg
push
stos
jb
stos
or
mov
js
pop
mov
pop
pushf
shr
cmp
mov
mov
inc
and
or
pop
xchg
rcll
fsubs
icebp
add
ret
xchg
sbb
xchg
jo
std
mov
leave
stc
jmp
push
adc
repz
outsl
pop
fisttpl
test
xor
rorl
stc
movsb
fists
fcmovnu
lock
lods
loope
rcrb
jnp
fidivrs
aas
jg
das
cmp
adc
sarl
cmp
inc
fstps
mov
push
mov
stos
mov
cmp
arpl
cmc
dec
fwait
sbb
jbe
or
mov
sahf
js
or
or
repz
fists
jae
dec
cs
or
fstp
jmp
pop
aad
sbb
in
fimull
pop
and
xchg
mov
jnp
cmp
pop
sub
stos
sbb
sbb
pop
sbb
out
test
adc
push
push
mov
lret
decb
aas
jmp
and
jo
test
cmp
out
inc
dec
dec
xor
pushf
je
sub
xchg
loopne
fmul
lock
sub
out
pop
push
add
sti
jmp
js
cs
and
jo
xor
add
sub
jmp
add
mov
adc
imul
in
or
xchg
shrb
sub
rcrb
add
jl
mov
jmp
or
roll
adc
pop
sbb
and
push
xor
fwait
out
sbbl
push
inc
aad
dec
xor
sbb
fsubrs
fwait
cmp
insl
movsb
xor
push
cmp
stos
cs
and
cmp
dec
mov
jmp
cmp
mov
and
mov
lahf
mov
cmp
test
dec
dec
pop
mov
adc
dec
mov
mov
jecxz
adc
outsl
inc
mov
hlt
push
stos
add
mov
outsb
pop
pop
push
lods
out
ja
cmp
xchg
outsb
pop
jo
sbb
rcll
sbb
jle
adc
push
mov
jg
xor
sub
cmp
inc
add
insl
cmp
sbbl
jb
mov
sbb
jmp
and
test
nop
test
ss
aam
enter
bound
sti
cmp
xor
pop
dec
jo
in
adc
icebp
or
das
js
and
insb
lds
popf
dec
xchg
mov
sbb
adc
addl
xchg
mov
jge
xor
rcr
inc
loopne
nop
lea
inc
cmp
push
shrl
cmp
inc
dec
jp
mov
adc
ljmp
mov
movsl
pop
test
scas
push
sbb
mov
jno
sbb
jbe
mov
mov
adc
popf
leave
js
inc
es
outsl
je
push
sbb
add
lods
dec
das
lret
stos
outsl
inc
adc
push
inc
xlat
mov
push
leave
outsl
in
sti
sub
add
dec
js
mul
cmp
mov
rorl
call
pop
imul
dec
push
sbb
inc
or
jg
insl
sbb
or
mov
add
call
cmp
and
adcb
imul
jl
dec
in
in
jb
fdivrs
sbb
dec
and
mov
repz
dec
into
xchg
cmp
out
sbb
mov
pop
pop
inc
sub
push
mov
dec
mov
cltd
mov
cld
mov
cmp
ret
cs
pop
jb
int
adc
dec
lahf
inc
push
lret
and
mov
cmpsl
mov
fidivs
jno
fisubrl
pop
mov
pop
negb
or
jb
mov
xor
pusha
dec
xlat
fwait
jns
arpl
aam
lahf
imul
xchg
cmp
add
mov
in
dec
add
pop
idivb
pushf
test
or
xor
add
xlat
imul
adc
fs
and
std
ret
cmp
scas
push
fdivp
jl
sarl
jg
mov
push
push
mov
rolb
icebp
sbb
fwait
mov
repz
aaa
stos
pop
fwait
pop
xchg
lahf
cmpsb
add
scas
lods
dec
repz
imul
mov
cld
xor
dec
inc
jne
decl
addr16
popa
jp
pop
or
jb
push
xor
mov
or
pop
cmp
and
lds
test
add
pop
sarl
mov
or
std
fildl
pop
cmovbe
ljmp
fsubl
mov
fiaddl
sub
fwait
mov
add
push
push
in
std
xor
je
fwait
sub
hlt
std
call
xchg
push
in
inc
push
movsb
lods
dec
aaa
pushf
push
cmp
xor
insl
jecxz
dec
leave
inc
push
xor
mov
jle
xchg
outsl
enter
imul
rcll
or
xchg
loopne
sbb
inc
xchg
xor
lods
push
fsub
jae
mov
sub
push
jmp
loop
pushf
push
sub
gs
ss
cmp
addb
pop
fnstenv
or
test
sbb
push
dec
dec
mov
push
or
mov
ja
std
out
fwait
shrl
jecxz
cli
xchg
repnz
xchg
jnp
sbb
les
adc
in
jnp
push
xor
push
iret
fwait
push
mov
mov
outsb
sub
imul
ret
dec
mov
sbb
ss
and
aaa
daa
dec
mov
cmp
mov
adc
push
sub
pop
out
inc
add
pop
in
xor
sub
adc
aam
clc
jo
es
sub
jne
jb
imul
mov
mov
mulb
aaa
mov
mov
mov
mov
and
shl
mov
xor
ret
push
lret
jno
mov
ja
or
xor
mov
xor
xchg
cmc
fs
mov
jg
jbe
mov
mov
mov
adc
sub
mov
push
dec
push
sub
sub
dec
xor
sbb
cmp
sbb
pop
cmp
in
out
loopne
dec
mov
movsl
mov
adc
cmp
repnz
mov
mov
in
ret
cmp
mov
mov
cltd
arpl
cmp
insl
lret
xchg
les
pop
xor
les
add
mov
mov
idivb
pop
lea
cmp
cs
xchg
mov
je
in
es
dec
scas
jmp
adc
sbb
movsb
fisubrl
xor
pop
fidivs
xchg
xor
sub
and
outsb
cli
adc
aaa
stos
jnp
mov
dec
xchg
lcall
jmp
lods
sub
sarl
inc
push
lock
lods
jp
dec
push
adc
dec
neg
outsl
mov
or
xchg
sbb
mov
addb
ret
jl
xchg
mov
fldt
sbbb
dec
shll
in
test
outsl
xor
cmp
ret
iret
fstps
xor
cli
mov
mov
jno
outsb
fidivl
mov
add
sbb
cmc
pop
sbb
pop
imul
pop
orb
rcrb
cmp
aaa
ss
mov
push
rolb
shrb
pushf
mov
add
xchg
cmp
out
dec
or
popa
std
push
sbb
les
xor
xor
mov
cmc
cmp
adc
mov
int
ror
es
lcall
push
xchg
out
dec
push
dec
or
fildl
test
sbb
hlt
pop
fidivl
das
pop
inc
lcall
dec
mov
pop
inc
pop
inc
aas
mov
ss
cmp
xchg
jno
inc
ret
pop
sbb
pop
fstl
or
pop
inc
xchg
lcall
push
xchg
xchg
iret
ljmp
sub
xor
cmp
lods
fisttps
and
inc
sbb
ljmp
mov
inc
mov
xor
pop
add
sub
dec
std
xchg
push
std
mov
ficoml
fwait
adc
mov
jae
jecxz
ret
xorb
sbb
add
sbb
mov
scas
rclb
aad
inc
mov
jbe
stos
hlt
inc
and
add
mov
mov
or
add
push
sbb
data16
or
inc
out
dec
sub
fidivrl
xchg
rcl
dec
pop
fadds
imul
das
pop
outsl
lret
sbb
mov
mov
push
inc
dec
int3
gs
test
adc
lret
stos
pop
mulb
outsl
pop
mov
test
adc
dec
ja
aas
insl
inc
out
cmpsb
in
imul
insb
add
xchg
xor
arpl
add
es
sbb
and
xchg
repnz
out
mov
fistpl
fwait
and
xchg
xor
stos
xor
jns
test
mov
or
jne
mov
ss
test
push
cmp
adc
push
or
sbb
rcrb
arpl
or
clc
nop
push
sarl
adc
jns
cmp
mov
push
std
insl
ss
mov
jb
sbb
mov
out
iret
sub
xor
xlat
out
adc
in
pop
add
lcall
into
sub
bound
cltd
mov
mov
pop
add
mov
sbbl
mov
movb
jle
sub
cwtl
shr
rcrb
loopne
ljmp
leave
fidivs
fmuls
inc
pop
imul
jle
loop
pop
push
pop
push
push
imul
addb
cltd
jbe
sahf
mov
fcoms
lret
orb
cmp
jecxz
xchg
pop
jp
cmpsb
les
lods
mov
mov
dec
xchg
pop
js
lods
mov
ficomps
adc
push
mov
sbb
lods
push
sbb
xchg
jne
clc
shl
fsubrl
subl
loop
adc
adc
lahf
xlat
sti
cmp
adc
push
test
setl
aaa
inc
gs
cmp
pusha
pop
cli
jp
fisttpll
in
mov
ret
push
lahf
mov
xor
cmc
aam
js
into
xor
bound
popf
pop
pusha
push
push
push
push
push
int
sahf
out
addr16
cmp
sbb
dec
dec
mov
sbb
nop
fsubrs
xchg
pop
fistpll
inc
jns
mov
cmc
add
fistl
fstpl
cli
sbb
xchg
cmp
imul
lods
mov
clc
repnz
mov
xor
sarb
pop
jnp
or
mov
mov
scas
pusha
lret
fwait
sbb
imul
andl
jp
xchg
mov
fldl2e
imul
arpl
cmp
stos
jo
mov
jnp,pn
mov
fmulp
jae
dec
shll
pushf
pop
repz
mov
mov
outsl
add
lods
shrl
adc
add
dec
or
stos
push
push
pop
lock
mov
mov
cmc
icebp
sbb
scas
push
sub
inc
sbb
decb
mov
inc
gs
sbb
and
dec
subb
fisttpll
out
pop
rcl
enter
pop
push
mov
sub
mov
mov
jl
mov
mov
mov
and
mov
xlat
cli
sahf
dec
xchg
dec
mov
jne
pushf
rcrl
pop
enter
sbb
in
push
jmp
stc
dec
sbb
mov
sbb
adc
add
aam
cmp
jne
pop
adc
mov
sbb
sahf
js
add
push
aaa
js
mov
mov
pop
push
inc
dec
dec
fwait
outsb
mov
xchg
stc
xor
or
dec
inc
stos
mov
std
pop
aas
mov
fldcw
arpl
nopl
inc
pop
fisttpl
rcll
cmp
mov
mov
jmp
jmp
daa
lret
outsb
push
jno
inc
cs
sub
jae
pop
clc
lock
and
das
loop
dec
outsb
sub
mov
das
ficoml
mov
mov
repz
dec
pushf
mov
fucomi
orl
cmp
xor
ficompl
fmuls
insl
xchg
mov
lret
add
int3
push
mov
pusha
adc
cmp
out
ss
jnp
std
pushf
ss
shrb
add
out
lahf
sub
push
mov
jge
lods
out
mov
push
mov
ljmp
ja
ret
rcr
rclb
jnp
add
aad
add
bound
push
adc
out
inc
lea
loope
outsl
sub
xor
negl
das
lods
adc
xor
lret
sbb
scas
add
add
sti
inc
testb
ljmp
xlat
push
pop
repz
cli
lret
lcall
aaa
jmp
mul
popa
push
and
cmp
jae
in
add
and
dec
fimull
add
jbe
stc
ljmp
lods
ss
dec
mov
cmp
icebp
push
lcall
mov
hlt
daa
dec
imul
cmpsl
jmp
xchg
fidivrl
test
adc
in
ja
push
loope
sti
rcrl
aaa
dec
add
inc
cmp
cmpsb
and
push
cli
mov
and
out
mov
das
xor
sub
xchg
imul
cmp
sbb
xor
loop
sbb
dec
adc
repnz
dec
pop
adc
jns
test
dec
in
mov
data16
fldl
insb
mov
ret
sbb
shll
andl
cmp
xor
fnsave
or
cmp
add
jo
orb
xor
std
pusha
mov
sbb
mov
mov
dec
jns
or
sbb
lcall
mov
cltd
rcr
mov
push
int
mov
or
std
adc
sbb
jne
jecxz
ds
pop
add
add
fimull
xor
lods
shll
jne
mov
mov
movsl
cltd
push
test
mov
sbb
xchg
lea
xchg
xor
inc
cmp
pop
xchg
stos
sub
push
sbb
in
daa
mov
cmpsb
call
cmp
xor
dec
cmovnp
lret
cmp
dec
fidivrs
fdivrp
and
sbb
xor
xchg
add
xchg
int3
dec
mov
in
sub
orl
sti
mov
mov
mov
xchg
fwait
test
push
push
pop
jbe
jae
cmp
mov
or
leave
and
sbb
push
sub
sbb
pop
xchg
pop
jl
or
pop
add
enter
out
push
leave
sub
inc
mov
and
pop
jnp
loop
les
cli
sahf
leave
and
popf
shrb
fs
sbb
call
and
fscale
lret
rorl
add
mov
sub
std
pop
dec
int
push
or
jp
cmp
je
push
jle
mov
mov
sbb
stc
inc
pop
push
pop
or
push
or
mov
jnp
ret
mov
cmp
shlb
or
test
xchg
lods
xor
ret
push
fidivrl
mov
jne
lods
cmpsb
sub
mov
and
jmp
addr16
dec
stos
shlb
push
andb
mov
mov
rcrl
sbb
pop
fs
pop
aaa
and
and
inc
cmp
cmp
in
jg
fldenv
pop
pop
add
ss
rol
adc
paddd
sbbl
mov
popf
mov
aaa
icebp
outsb
xor
fidivrl
inc
pop
std
fnstsw
insb
push
add
and
lahf
sub
stos
mov
mov
sub
push
addl
movsb
adc
scas
and
inc
cmpsl
ja
outsb
mov
xor
stos
adc
std
addb
das
mov
out
xlat
outsb
test
sbb
push
shlb
xchg
xchg
arpl
mov
popa
lret
lds
jb
mov
xacquire
pop
jmp
sarl
fcoms
cmp
push
and
fcmovne
sti
or
test
push
js
stc
fmull
cli
and
xor
and
out
xchg
mov
aas
enter
adcl
dec
sub
or
rorl
mov
jbe
push
mov
cmp
movl
xchg
call
fistpl
aam
ret
push
dec
lahf
dec
xchg
or
sbb
cmp
adc
dec
xchg
mov
cmc
and
adc
jl
cmc
jo
cli
mov
push
jge
das
fisttpll
loopne
jb
push
in
sahf
bound
dec
xor
sub
js
rcll
xor
jnp
stos
adc
in
test
pop
jnp
adc
ret
or
data16
scas
mov
test
or
cmp
mov
inc
mov
cmp
cmpb
push
adc
jecxz
pop
es
inc
lcall
lret
push
inc
push
pop
int3
cmp
in
jecxz
sti
cmp
in
or
push
jns
jecxz
push
ds
cmp
dec
lret
lods
mov
add
data16
lds
shl
hlt
fcoml
add
iret
add
lret
movb
jp
jl
jmp
outsl
jnp
adc
jne
test
pop
mov
popf
and
sub
push
repnz
ss
stc
fistpl
mov
pop
cmpsb
sub
ss
sarb
or
cltd
std
cwtl
adc
mov
test
loopne
push
jae
xchg
push
js
add
lods
inc
dec
add
ret
or
nop
xchg
ss
pusha
add
pop
sub
data16
inc
xor
nop
popa
inc
sub
cmpl
push
push
lods
shll
add
adc
xlat
daa
jmp
mov
inc
int3
or
ss
enter
or
add
orb
xor
inc
xor
pop
adc
jne
add
mov
cmp
aaa
jnp
inc
fdivs
xchg
cmpb
cmp
aaa
outsl
mov
ljmp
je
or
mov
aad
dec
pop
push
or
push
jnp,pn
dec
dec
arpl
js
sbb
pop
or
sub
sub
jmp
das
fidivl
push
add
aas
push
out
fstps
jmp
xchg
push
stos
fldcw
fs
repz
sbb
es
pop
inc
push
inc
mov
xor
fldt
jge
out
xor
push
dec
sub
push
dec
cmp
jns
xchg
jo
movsb
test
inc
sub
rorl
pop
imul
push
or
fcmovnbe
inc
dec
pop
addr16
pop
lods
xchg
mov
mov
inc
inc
cmp
mov
xlat
lar
lar
adc
lret
mov
sti
jae
jmp
cmpsl
loopne
xchg
mov
fwait
xor
mov
clc
pop
ljmp
jae
or
jmp
lret
mov
push
das
dec
cs
push
sub
lcall
lods
call
jb
or
jbe
sub
inc
cwtl
cs
mov
dec
cmp
cltd
mov
std
stos
aam
or
dec
inc
pushf
or
sub
out
xor
rcll
pop
loop
and
inc
mov
testl
xchg
dec
pop
xchg
add
xchg
fcoms
sub
notl
lds
sub
xorb
or
inc
stos
pop
lds
sub
sbb
aaa
cmc
test
sarb
and
push
dec
mov
push
scas
jmp
stc
fistl
es
out
loopne
fsubs
jp
aaa
mov
or
nop
negl
in
sub
sbb
lcall
mov
es
fs
push
mov
shlb
cmp
pusha
mov
arpl
iret
push
or
sbb
shrl
push
jmp
and
adc
mov
stos
dec
call
inc
sub
mov
insb
enter
sub
mov
and
lahf
jnp
mov
push
push
or
mov
popl
movsb
imul
ret
add
ss
pop
xor
mov
jb
clc
daa
lret
mov
lcall
cmp
iret
arpl
dec
sub
jb
sbb
mov
pop
jl
aam
push
cmc
sbb
push
xor
sbb
aam
and
sub
push
mov
rcr
pmaxub
lods
lret
and
daa
out
mov
cmp
dec
or
aas
dec
dec
pop
jne
ds
sub
mov
mov
cmovl
sub
pop
mov
jle
subl
cmp
roll
rep
cmp
push
mov
cmpsl
sub
sub
add
pop
sub
inc
dec
mov
cmp
or
out
stos
mov
lods
js
sub
or
stos
inc
push
out
scas
push
push
daa
push
dec
pop
fs
imul
popa
rcll
jmp
fstps
jo
add
test
dec
cmp
push
cwtl
lret
gs
bound
lods
out
push
mov
dec
xor
int3
call
sub
das
push
insb
inc
adc
shr
mov
fisttpl
cmp
mov
pop
jl
int
dec
sub
dec
mov
dec
loope
xor
mov
gs
lret
std
inc
cmp
mov
stos
mov
xchg
and
and
or
pop
jne
and
cmp
adc
lds
dec
insb
pop
sbb
fwait
rorb
movb
sub
add
mov
stos
pop
adc
xchg
jns
sbb
imul
fisubs
sub
mov
mov
lds
mov
add
lcall
dec
push
and
or
adc
and
or
lock
and
mov
jmp
clc
sbb
mov
mov
clc
movhps
inc
cmp
mov
or
daa
or
scas
pop
addr16
out
movsb
inc
jno
ljmp
adcb
xor
out
iret
push
sbb
scas
notl
loop
mov
sub
repnz
mov
cmpsb
xchg
jp
stos
lcall
mov
pop
addr16
dec
stos
rorb
ljmp
cmp
js
in
sub
jl
test
rclb
sbb
mov
sbb
and
xor
pop
adc
mov
push
mov
sub
aad
push
mov
fidivs
fistl
ss
jecxz
fildll
in
cmp
sub
push
jae
lret
pop
cmp
cmp
push
divl
fstpt
sbb
jo
and
or
xchg
mov
lea
hlt
idiv
cmp
and
scas
aaa
in
xchg
jg
ljmp
mov
mov
out
mov
call
or
repz
add
push
outsb
ljmp
cmp
cmpsl
inc
pop
mov
and
enter
mov
stos
insb
shlb
shlb
sti
mov
dec
pop
push
jno
mov
adc
xor
dec
decl
jae
push
cs
add
lock
mov
inc
ret
pop
sbb
sti
push
xchg
lods
jg
xchg
mov
aam
fwait
lahf
jne
inc
inc
pop
mov
dec
cmp
adc
lret
std
outsl
ds
inc
addr16
int3
jnp
cmp
aaa
shll
and
int3
xlat
aam
mov
ljmp
cmp
sbb
btsl
test
outsl
cmp
out
adc
in
xor
mov
es
adc
imul
xchg
mov
js
jge
pop
sbb
mov
inc
or
sub
mov
jno
lods
mov
lcall
sbb
xor
stos
mov
sbb
dec
adc
xor
movsl
dec
movsb
jne
jo
fsubrs
xchg
stc
outsb
outsb
adc
aas
lcall
dec
sbb
adcb
jmp
pop
repz
imul
adc
jbe
push
fwait
add
mov
pop
out
lret
add
idiv
xchg
adc
cmp
cmp
push
aam
aam
pop
or
jnp
sbb
cmpsl
mov
je
sub
xchg
std
and
mov
mov
daa
fcmovnu
sbb
pop
xchg
inc
dec
outsl
or
pop
adc
sbb
sti
add
int
mov
push
xchg
jmp
cli
mov
aad
jge
icebp
push
jo
cmp
cmpsl
push
pop
popl
int
mov
xlat
cmp
icebp
mov
push
pop
pop
addr16
jl
std
lret
out
fsubl
dec
fcoms
push
rolb
or
sub
sub
and
jmp
rcll
mov
hlt
sub
jbe
icebp
in
iret
mov
xor
outsl
mov
xchg
pop
push
ret
pop
out
pop
addb
fcomi
pop
and
inc
pop
sbb
sub
and
pushf
sbb
xchg
aad
sbb
adc
out
xlat
imul
and
hlt
movsb
negl
xor
add
loope
mov
dec
fstpt
pop
inc
or
mov
jge
cmp
xchg
fists
out
jmp
cmp
test
roll
and
insb
inc
mov
mov
out
cmp
mov
hlt
mov
or
xchg
arpl
out
sbb
icebp
sbb
lret
adcb
mov
push
or
push
mov
push
sti
rcl
sbb
adc
test
mov
in
ss
pop
sub
pop
icebp
pop
push
clc
sbb
pop
dec
clc
sub
fnsave
enter
mov
mov
xor
pop
out
sarb
testb
ret
mov
sub
adcl
mov
fmul
cmp
mov
fnstcw
cltd
xchg
ss
jno
sub
out
mov
mov
mov
mov
mov
mov
pop
cmc
jb
pop
xchg
aaa
imul
pushl
dec
jno
sub
lock
cmp
mov
cmp
bound
pop
dec
xchg
sub
pop
jecxz
mov
xchg
mov
sti
cmp
into
and
cmp
sbb
shl
xlat
cmp
pop
push
xor
mov
aaa
mov
sbb
mov
lret
mov
add
mov
sbb
mov
movsb
dec
pop
rorl
lret
lret
mov
sbb
xchg
cmp
incl
test
test
fstl
jmp
pop
lret
fwait
dec
cmp
cmp
aaa
lods
pop
pop
insb
fisubrl
mov
js
movsl
sbbb
out
pop
push
inc
or
ja
aas
and
inc
ds
cmp
add
add
out
sbb
pushf
loopne
pop
lret
inc
jo
popf
xor
sub
cmp
push
xor
aad
loopne
adc
aaa
cmpsb
cld
lcall
and
push
push
mov
mov
jecxz
rcll
adc
pop
ficompl
push
xor
cmp
add
cld
sbb
or
ss
outsb
call
dec
jp
jle
sub
pop
jl
pop
fmul
das
mov
push
into
push
sbb
ror
les
sub
hlt
fisubs
loopne
push
imul
jbe
jmp
iret
out
cmp
add
aaa
jmp
mov
mov
jb
sti
stos
cmovl
cmp
std
mov
xor
adc
ljmp
fldt
repz
and
or
pop
test
mov
inc
push
xchg
push
stos
imul
rcrl
loop
es
sbb
ljmp
mov
push
dec
dec
shll
push
mov
mov
ljmp
push
das
mov
lea
pop
mov
in
pop
out
scas
adc
mov
dec
imul
cmpsl
xor
fsub
ss
jae
jp
data16
mov
jno
popa
mov
sbb
sti
pusha
ljmp
fwait
pushf
ss
mov
outsb
pop
jnp
lods
push
in
mov
insl
push
adc
in
shlb
xor
sub
addr16
or
ret
pop
push
das
jno
fistl
pop
adc
adc
adc
loop
inc
sub
mov
sbb
mov
inc
pop
iret
fsts
xlat
pop
imul
jg
dec
xchg
xchg
mov
stos
mov
ret
add
sbb
jge
clc
jecxz
gs
ret
inc
or
cmc
sbb
push
notl
add
rcll
sub
push
inc
cmp
and
scas
je
enter
xor
xlat
int3
rol
lret
dec
mov
ss
jbe
gs
dec
test
mov
inc
fcoml
sbb
cld
pop
mov
inc
xor
sub
es
xor
dec
ljmp
add
jmp
adc
pusha
xchg
lahf
test
in
or
cli
xchg
jmp
inc
xchg
pop
mov
mov
jmp
adc
add
dec
shll
rclb
iret
fstpt
cmp
adc
cmp
ret
mov
stos
pop
xchg
adc
and
lret
xor
pop
mov
jmp
inc
and
xchg
sarb
fldt
lods
outsb
xlat
cmc
outsl
ljmp
leave
sti
mov
out
jnp
dec
push
jmp
clc
mov
push
pop
dec
pop
and
mov
iret
rcrl
decb
sub
pop
jge
cmp
fcompl
fisubl
adc
mov
inc
sub
std
add
dec
iret
sbb
outsl
adc
or
xor
pop
sbb
lods
lds
xlat
iret
adc
sbb
dec
inc
aas
sbb
mov
daa
dec
jae
dec
xor
xchg
cmp
dec
xchg
cmp
xchg
push
xor
pop
fnstenv
inc
inc
cmp
outsl
push
pop
cmp
push
xchg
xor
push
sbb
mov
or
sbb
xlat
ss
imul
das
mov
pop
jnp
cmp
mov
xchg
out
sub
or
dec
xchg
imul
push
add
adc
xor
mov
push
jmp
adcb
sbb
jmp
ds
inc
les
sbbb
stos
fcmovnb
adc
lock
cwtl
ljmp
xchg
adc
fcoml
fidivl
jns
push
or
mov
mov
push
rolb
mov
adc
or
sub
jno
rcr
jge
lea
cmp
xchg
aaa
cmp
pop
cmp
es
adc
pusha
sub
sbb
cli
mov
in
jmp
and
adc
lock
or
das
jne
adc
add
sub
sarb
dec
xlat
in
test
aaa
xchg
int
incb
out
dec
js
fmul
cmp
cld
xlat
mov
or
mov
test
movsb
pop
lret
fisubrs
popa
jnp
mov
adc
xchg
xor
inc
xchg
repnz
lret
adc
cmp
imul
xchg
xchg
pop
cmp
cli
sbb
mov
repnz
test
pushf
je
xchg
xlat
js
mov
nop
dec
mov
adc
outsb
jge
and
iret
adc
test
push
pop
jb
repnz
rcr
and
or
sbb
dec
iret
std
mov
hlt
inc
popa
lods
daa
jb
into
adc
shr
adc
cmp
dec
pop
test
lea
and
jnp
sarb
out
cwtl
jb
lahf
push
add
mov
jmp
sub
pushf
int
sarb
push
adc
scas
in
pop
adc
popa
ljmp
push
mov
outsl
inc
sbb
pop
out
pop
lock
pop
lret
dec
popa
mov
stc
sub
lret
cmp
rcl
adc
adc
cmp
adc
mov
xorb
jge
and
adc
les
ss
add
adc
inc
and
out
testl
aaa
add
mov
rorl
fidivs
dec
imul
test
or
xor
repnz
fimuls
movsl
gs
pop
lock
loop
adcl
cmp
scas
nop
fxch
sub
or
data16
outsl
pushf
xor
and
push
push
pcmpgtd
inc
cmp
cmp
test
pop
cmp
test
adc
adc
inc
mov
sub
xor
repz
mov
add
push
or
mov
push
arpl
lds
jbe
xchg
inc
test
dec
clc
push
inc
lcall
sub
adc
sub
inc
mov
dec
cltd
mov
mov
inc
sti
bnd
imul
xchg
testb
mov
xor
aas
outsl
je
mov
mov
or
jl
sbb
or
adc
stc
cmc
fildll
std
sysenter
jecxz
mov
push
stos
cmp
lret
mov
sub
xor
inc
xor
stos
or
ljmp
roll
dec
fwait
xlat
stos
scas
inc
orb
in
imulb
gs
push
sbb
std
cs
aaa
fcoml
pop
lods
sub
adc
dec
cmp
out
lahf
mov
leave
mov
insb
cmp
xlat
repnz
ss
sbb
dec
adc
jp
out
xor
and
xchg
stc
jmp
adc
cmp
xchg
out
insb
adc
xchg
xor
dec
mov
fcompl
arpl
and
nop
mov
cmc
push
repnz
andl
cld
mov
inc
xchg
push
out
jno
mov
stc
rcrb
shll
enter
mov
or
js
pop
jae
or
out
mov
retw
mov
or
sbb
xor
ljmp
inc
pop
mov
cmp
mov
stos
xor
dec
out
adc
push
push
outsl
fmuls
enter
xchg
xchg
sub
xchg
lcall
enter
std
mov
mov
mov
jl
mov
dec
adc
jne
xor
xlat
mov
ds
ss
sbb
and
fisubrs
jmp
xor
push
into
jecxz
in
sub
mov
cmp
adc
add
or
cli
adc
pop
dec
adc
stos
jbe
cmp
dec
inc
or
repnz
push
and
dec
pop
sub
ficoml
loop
inc
mov
mov
mov
stos
fwait
inc
cmp
sti
cmc
lahf
leave
and
push
cmp
sub
dec
stos
fwait
lahf
bound
das
fildl
mov
fdivs
insb
mov
sbb
bound
ljmp
inc
mov
mov
mov
dec
cmp
push
lret
jb
ret
mov
xor
mov
xchg
dec
movsb
jnp
addb
bound
push
ja
adc
lea
cld
repnz
jmp
int3
movsl
aaa
mov
add
sub
lret
lret
ss
jns
sbb
jp
inc
lcall
test
push
push
inc
sbb
sbb
ficoml
cltd
mov
shr
ret
iret
das
dec
and
lret
inc
jmp
and
lahf
jnp
and
xchg
sub
pop
mov
pop
push
xor
lcall
xor
in
xchg
sbb
xor
in
sub
bound
push
icebp
add
std
ja
push
mov
dec
push
adc
test
lret
pop
or
loop
xor
pop
mov
sub
dec
jmp
test
stos
xor
xor
popf
mov
leave
cltd
add
sti
aad
push
mov
movl
and
jg
out
push
addr16
or
and
aaa
test
jl
adc
mov
mov
and
outsl
dec
mov
pop
fsts
xchg
sub
mov
inc
mov
sbb
xchg
out
pusha
fcmovnbe
ss
dec
shrb
mov
or
jmp
test
addr16
sub
xchg
ds
pop
xchg
popf
fildl
out
jnp
sub
xchg
inc
loop
movsb
stc
lods
dec
add
dec
push
mov
xchg
lret
stos
pop
fcmovb
jg
inc
pop
push
adc
and
insl
cs
jl
lret
xor
les
cmp
sub
aad
lods
sbb
pop
or
mov
xchg
pop
cmpsl
shrl
mov
lahf
mov
cmpsl
ficompl
pop
lcall
lret
mov
xor
adc
dec
lret
mov
pop
xchg
ret
orl
jl
jbe
add
mov
out
test
dec
cmp
lods
mull
adc
pop
ret
jp
push
out
outsl
xchg
dec
test
push
mov
adc
inc
or
pop
in
cmpsb
cmp
xor
lods
push
mov
aaa
test
mov
mov
outsb
cmc
add
inc
mov
adc
mov
sbb
cmp
rcpps
es
sti
lcall
adc
sub
pop
mov
in
mov
xor
rorb
sbb
arpl
test
stos
dec
out
outsl
dec
decb
push
jo
ljmp
push
jb
in
mov
cmp
adc
adc
cmp
or
lock
adc
adc
mov
jo
test
mov
movl
lret
mov
sarl
jnp
mov
dec
dec
mov
xor
or
andb
ljmp
mov
sbb
iret
shrl
js
sbb
xchg
xchg
mov
jp
dec
out
jbe
add
cmp
inc
xor
cmp
ljmp
out
movsl
pop
icebp
test
push
std
hlt
shrl
mov
and
sub
ja
cmpsl
idivl
sub
adc
inc
fldt
push
movsl
lcall
int
mov
lock
dec
push
fsubrl
lods
roll
mov
sub
sti
imul
xor
data16
push
pop
jp
dec
cmovp
insb
loope
out
jbe
pop
cmpsl
cltd
mov
aad
pop
std
leave
je
ret
dec
lds
add
adc
enter
int3
hlt
loop
mov
jbe
cmp
fisubrl
mov
xor
cli
push
pop
or
and
xlat
loop
test
jb
in
and
xor
inc
cli
mov
or
loope
inc
mov
inc
mov
clc
fnstcw
add
push
sbb
xor
adc
cli
sarl
arpl
add
hlt
out
fcmovu
in
mov
ljmp
pop
js
fsubr
sub
mov
dec
fsubp
mov
jg
lods
imul
inc
dec
pop
mov
lsl
pop
insb
xchg
dec
xchg
sbb
fs
orb
xor
dec
jl
aam
xchg
ss
xor
repnz
movsb
mov
sub
int3
xchg
enter
inc
push
cltd
sbb
cmp
mov
add
lret
repz
push
stos
mov
les
xor
jb
mov
push
mov
sub
out
push
rcrb
sbb
push
cld
in
mov
jg
jo
push
cmp
push
lods
sbb
xlat
adc
gs
lret
pop
out
push
decb
sti
inc
mov
fmulp
mov
por
out
sub
xlat
jmp
jge
and
lods
sti
cltd
push
or
mov
mov
out
sbb
push
jbe
mov
push
mov
add
mov
adc
fscale
sub
fldz
cltd
pop
mov
orl
fs
int
jnp
push
adc
xchg
lcall
sti
shl
pop
inc
mov
cmp
mov
push
xor
movsl
add
lods
popa
sbb
loopne
decb
out
or
jl
loope
and
or
sti
push
jb
push
das
or
and
jg
adc
fiadds
adcb
xchg
xchg
dec
ret
popa
aad
leave
pmaddwd
leave
out
into
ljmp
mov
outsb
push
jge
cmp
fwait
stos
fildll
cld
and
lcall
outsl
nop
cwtl
adc
nop
jecxz
and
jmp
div
test
xor
out
xchg
add
push
push
pusha
sti
push
cmpsb
mov
xor
lea
outsb
fisttpll
adc
xor
movsb
jo
test
pop
repz
mov
call
mov
daa
and
push
or
lret
inc
xor
ja
xchg
ret
daa
jp
push
adc
lods
push
pop
push
in
clc
pop
enter
pop
sub
shrb
mov
mov
stos
adc
mov
sbb
sub
push
mov
call
clc
jg
outsb
or
ds
lret
sbb
iret
mov
inc
stos
movsl
fisttpl
sarl
push
roll
les
decl
add
lret
xor
inc
add
lods
popf
or
loop
mov
outsb
mov
or
pop
lahf
mov
lods
push
inc
cmp
push
and
pop
xchg
jae
jb
or
mov
xchg
cmp
push
mov
jmp
outsl
data16
sti
and
adc
push
gs
jle
or
adc
xchg
cmc
dec
mov
mov
and
adc
pop
and
hlt
dec
mov
hlt
xchg
fnsave
scas
inc
lods
push
or
hlt
jo
shrb
push
mov
fsubp
pop
idiv
xchg
stos
mov
repz
xchg
stos
repnz
pushf
add
fsincos
push
and
mov
jmp
mov
daa
das
sarl
dec
ljmp
push
mov
stos
xchg
jmp
xchg
pop
jmp
mov
pop
push
xchg
dec
mov
adc
aam
mov
xor
cld
insl
iret
mov
adc
mov
push
faddl
lcall
mov
inc
jle
adc
aam
leave
jo
ret
paddw
call
mov
pusha
xchg
cmpsl
push
lds
jp
js
add
jg
ljmp
out
pop
pop
mov
push
ficomps
push
cld
int3
push
mov
clc
int
insb
fldcw
dec
js
lds
sub
xchg
and
lods
jb
outsl
add
cs
out
cmpb
or
pop
dec
sbb
cltd
adc
stc
roll
sbbl
mov
xchg
xchg
out
mov
popa
push
ljmp
mov
push
inc
xchg
aaa
mov
sbb
mov
jmp
leave
enter
popa
push
pop
or
mov
push
pop
xor
call
imulb
adc
mov
cmp
inc
or
dec
pop
outsl
push
mov
push
inc
adc
pop
scas
aaa
test
add
xchg
adc
adc
jb
in
cmp
dec
fsubrl
and
dec
aaa
and
push
push
cs
mov
fstpl
scas
xor
sbb
mov
movsb
fs
fs
add
insb
push
movsl
fwait
xor
imul
test
bound
and
ljmp
xor
sbb
mov
aam
xor
jae
jbe
lret
in
push
iret
sbb
pop
nop
or
mov
mov
insb
mov
xlat
mov
xor
cmp
push
cmp
lock
sub
cwtl
lahf
outsl
test
leave
rcrl
das
push
cwtl
fadds
add
inc
sub
out
imul
iret
popa
mov
pusha
xor
popl
jg
jbe
cwtl
ret
das
adc
in
mov
shr
jnp
es
out
lds
push
dec
jmp
sbb
pushf
daa
xchg
jne
pop
jl
pop
cli
sub
test
cmp
push
jo
add
dec
inc
pop
mov
xorl
pop
dec
adc
mov
cmp
mov
popa
sbb
nop
push
dec
outsb
inc
pop
inc
mov
out
jnp
xchg
aaa
cmp
pop
lahf
add
roll
fisubrs
sti
push
shlb
sqrtps
sub
sti
xchg
lahf
pop
pop
sbb
mov
push
add
mov
dec
clc
call
or
mov
sub
std
xor
sbb
mov
and
call
fwait
sarl
ljmp
sub
sbb
cmp
sub
jbe
icebp
pop
js
mov
add
mov
test
inc
or
sti
into
xor
sub
leave
mov
push
or
cmp
xor
jle
ret
insb
mov
adc
or
xor
scas
pop
scas
or
adc
sarl
xchg
xchg
in
fcoms
daa
add
enter
outsb
sub
mov
push
cmp
pop
shrl
hlt
pop
jnp
sarb
fnsave
pop
mov
cmpsl
sbb
xor
insl
jg
outsb
loop
fidivrl
push
sub
xchg
push
pop
dec
lret
ficoms
loop
mov
adc
sub
or
rcll
pop
jl
mov
call
mov
or
adc
push
mov
ja
dec
ficoms
xchg
in
data16
stos
fcmovbe
xor
popf
mov
jnp
inc
xlat
push
or
inc
xor
mov
subl
dec
int3
or
mov
pop
and
sbb
cmp
pop
test
push
jns
fs
and
dec
and
out
cwtl
adc
adcl
push
inc
fs
push
push
cmp
loope
inc
je
cmp
sti
cmp
jl
xor
cmp
ss
sub
mov
sub
mov
and
nop
sub
in
loopne
dec
xchg
mov
aas
lcall
rcrl
iret
aad
fidivrs
data16
shlb
dec
call
cmp
or
add
gs
lds
fldcw
mulb
jp
mov
cmp
lahf
iret
cmp
and
mov
fisubs
sti
lods
push
xchg
add
cltd
jge
sub
adc
ss
adc
lods
es
cltd
push
repz
mov
ret
pusha
pop
leave
aad
mov
fcmovbe
inc
testl
data16
sbb
sub
scas
ljmp
adc
imul
cmp
sub
xor
pusha
mov
dec
add
cs
jmp
test
jns
jno
popf
iret
pushf
dec
out
adc
cmp
jo
sar
nop
lods
mov
push
ficompl
into
xor
jp
mov
pop
cli
jnp
es
push
cwtl
mov
outsl
inc
push
loop
out
out
jecxz
call
push
aaa
fldcw
pop
bound
out
fwait
imul
daa
xor
out
into
cwtl
xchg
enter
mov
dec
pop
adc
inc
andb
bound
ja
pop
xor
cmp
inc
push
push
lods
inc
jno
adc
and
push
or
inc
mov
iret
adc
xorb
push
sbb
xor
sub
orb
and
cmc
test
jp
mov
adc
pop
mov
and
popf
fwait
and
pusha
cmp
cmp
push
jg
fwait
mov
mov
pop
push
cmpsb
scas
cmp
fldcw
in
mov
cmpsb
jnp
mov
jl
out
adcb
iret
je
les
mov
jmp
pop
ret
or
add
mov
aas
mov
and
out
mov
shll
iret
fiadds
mov
int3
or
int3
mov
imul
nop
jle
sti
out
loopne
adc
push
push
mov
lcall
flds
mov
xor
adc
mov
sarb
int
mov
lock
cmp
adc
in
sahf
imul
sbb
sbb
aaa
fwait
cmpsb
or
or
orb
xchg
shl
test
or
mov
cli
and
and
push
cli
add
sbb
dec
and
inc
push
sub
ret
push
cmp
xor
pop
cmpb
push
vandps
ljmp
lret
adc
and
adc
add
jle
xchg
addps
ja
inc
pop
and
scas
test
mov
inc
dec
dec
xor
xchg
pop
inc
imul
mov
pop
cmp
addr16
js
ljmp
dec
dec
sbb
aad
xchg
pop
pop
mov
adc
sbb
cmp
sbb
movsb
out
dec
lods
mov
dec
adc
scas
fldenv
enter
icebp
adc
push
call
push
sub
add
fsub
dec
add
orb
xchg
or
jmp
add
dec
xor
out
push
out
adc
lret
test
jno
inc
cld
lret
es
adc
mov
pusha
pop
sub
xlat
fistl
mov
cmp
inc
cmpsb
scas
idivl
lahf
mov
into
sbb
gs
neg
fwait
mov
bound
es
lahf
mov
lret
lret
aas
jp
fs
push
sbb
inc
xchg
movsl
or
jmp
fnsave
push
inc
lahf
mov
icebp
sbb
jo
movsb
rorl
fs
sbb
push
cs
mov
loopne
jmp
in
movsb
mov
dec
das
inc
aaa
decb
push
sbb
dec
in
repz
pop
insl
adc
mov
cmp
or
mov
fs
cwtl
xlat
addb
test
and
mov
shlb
jle
jbe
mov
sub
inc
cmp
lahf
out
jecxz
or
mov
lock
cwtl
jo
xor
dec
mov
sarb
pop
adc
dec
aad
push
push
jae
out
pop
rcrb
add
test
rcrl
pop
hlt
or
xchg
out
mov
mov
jge
dec
jp
dec
pop
jb
add
fwait
sbb
jge
cmp
lahf
add
es
dec
mov
xchg
test
mov
xchg
dec
or
jns
lods
mov
inc
sub
sbb
add
nop
push
or
addr16
xor
enter
aam
dec
add
xchg
mov
sub
lds
dec
sbb
xor
enter
adc
call
es
mov
or
mov
arpl
aas
fwait
inc
cmp
sub
paddq
or
xor
fisubrl
mov
inc
imul
into
call
cmp
mov
dec
push
cmpsb
pop
data16
mov
pop
add
jnp
xchg
cld
mov
lret
dec
jl
push
push
shlb
aam
push
push
lahf
stos
sbb
fwait
or
mov
sub
push
sarb
xchg
sub
sub
sti
pop
orb
fidivs
push
sbb
fs
xchg
push
sbb
sub
mov
adc
push
aaa
push
xor
cmp
sub
jp
push
jo
xlat
or
cmp
xor
popa
outsl
insl
xor
cwtl
fcmovbe
es
pop
xchg
cli
ss
je
or
ret
xor
imul
xchg
dec
jecxz
jno
dec
jmp
pop
jl
lods
sbb
jne
xchg
cmp
jg
adc
daa
mov
rcl
or
mov
es
inc
cmp
pop
fwait
pop
cmp
dec
xchg
pusha
in
and
sub
sbb
xor
pop
addr16
sti
mov
mov
adc
mov
mull
ljmp
dec
dec
xchg
xor
lret
adc
xor
sub
xchg
jbe
and
push
aam
mov
push
adc
dec
xor
insl
movsl
mov
daa
ljmp
push
loope
insb
repz
incb
stos
cmc
push
rorl
push
or
jp
inc
pop
outsl
cmp
fnsave
rorl
int3
adc
and
jp
mov
adc
or
inc
mov
stos
sub
mov
lret
subb
data16
inc
mov
shrb
jnp
jmp
lret
and
es
aad
leave
idivl
sbb
clc
adc
mov
js
mov
cmp
js
adc
xchg
xor
out
xor
fcmovb
mov
sbb
xor
pop
dec
or
pushf
mov
lret
sub
fmuls
push
cmp
and
fdivl
call
aad
sbb
int3
mov
loop
test
fadds
imul
xor
loop
xor
outsb
or
sub
loope
mov
inc
adc
mov
dec
jbe
cmp
clc
pop
xchg
jnp
fsts
aaa
je
adc
mov
cli
in
mov
pop
mov
add
cwtl
mov
pop
mov
sub
daa
add
mov
xor
data16
jg
xor
stc
xor
aam
lods
mov
sbb
mov
ss
adc
shrl
mov
sub
out
mov
push
push
ljmp
xor
push
scas
sar
fwait
mov
js
xor
sbb
add
and
addr16
xchg
push
sbb
and
lds
adc
cli
xor
sti
xchg
inc
jmp
lock
xor
movsb
outsl
test
andb
aad
sub
mov
imul
sbb
inc
test
popa
clc
lret
push
cli
mov
inc
lods
mov
fidivrs
fsub
ljmp
pmulhuw
xor
add
push
cmp
jp
xchg
inc
cmc
imul
insb
xchg
xor
mov
xor
add
jmp
sbb
test
add
and
adc
cwtl
adc
adc
jge
and
cmp
ljmp
mov
push
lahf
push
out
fadds
loope
aad
out
je
push
dec
dec
xor
lret
insl
fildll
pop
xor
add
inc
jmp
and
in
popf
repnz
mov
fimull
test
adc
lods
jns
mov
xor
imul
mov
inc
xchg
sbb
sub
push
jbe
push
xchg
xor
cmp
dec
inc
test
push
jmp
dec
hlt
mov
sbb
cmp
push
daa
fcomps
sub
xor
or
pop
idiv
sub
sbb
add
add
adc
add
loop
mov
leave
inc
push
dec
popa
adc
arpl
or
test
cmp
sub
or
push
or
mov
or
mov
lret
cld
mov
pushf
xchg
orl
fdivrp
mov
mov
inc
xor
outsl
push
cmp
push
out
pop
mov
ss
sbb
movsl
mov
pop
mov
mov
repz
adc
inc
lret
ljmp
xor
jns
xchg
sti
sahf
add
cmp
cmp
pop
dec
and
xchg
rcll
or
out
or
lahf
adc
test
shll
cmp
psubd
testl
push
mov
mov
je
js
jo
scas
jns
or
mov
mov
lcall
sub
sub
xchg
fcoml
ficoms
push
leave
cltd
sbb
cmp
and
cs
cmc
sbb
sub
fcmovnbe
es
or
mov
sbb
mov
ret
pop
push
sbb
xchg
js
fwait
pop
imul
cmpsl
outsl
lock
das
and
popa
in
push
fimuls
dec
push
push
xchg
fimuls
adc
pusha
inc
mov
sbb
adc
sub
or
or
ret
out
xchg
mov
into
nop
mov
mov
lret
dec
mov
dec
sub
popf
push
test
punpcklbw
sub
shlb
jnp
daa
and
fildll
insb
or
je
xchg
les
mov
sub
or
push
sub
cwtl
daa
fxch
clc
or
adc
repz
cld
xor
ficoml
test
sbb
jnp
xchg
mov
outsl
dec
cli
cmp
sbb
xchg
dec
or
mov
xchg
xchg
pusha
out
push
call
stos
mov
xchg
jbe
fistpl
adc
cmp
push
push
clc
sbb
dec
or
mov
fchs
fwait
jp
push
dec
mov
jmp
cltd
push
xor
push
fldt
bound
or
pop
outsl
std
cmp
push
pop
sbb
mov
or
loopne
add
into
cmp
cmpsl
rol
xor
loop
sbb
cmp
pop
lret
inc
ret
inc
pop
dec
mov
and
mov
cmp
cltd
test
xor
out
adc
jo
js
out
stos
cltd
cmp
push
mov
mov
sub
sbb
mov
nop
add
test
cmp
pop
sbb
sub
sbbl
sti
jbe
scas
imul
sbb
or
mov
xchg
mov
scas
das
ja
out
dec
sbb
jmp
sub
inc
outsb
sti
jne
inc
pusha
cwtl
cltd
adc
int
icebp
cmp
cmp
or
push
push
push
sub
add
sti
mov
inc
mov
sub
pop
sti
inc
popf
rcll
jnp
fsubs
test
mov
cmp
jp
mov
pop
stos
fnstcw
mov
dec
mov
stos
testb
pop
pop
call
lret
fisubrl
sbb
lods
mov
adc
mov
mov
adc
jno
loope
mov
mov
adc
mov
shl
push
dec
movsl
neg
adc
imul
daa
or
mov
pop
arpl
aam
in
bound
aaa
ss
push
add
sbb
cmp
rol
dec
in
gs
dec
or
insl
cmp
subb
arpl
xchg
xor
loope
pop
dec
push
imul
xchg
sub
sub
jns
xor
je
std
mov
test
cld
or
daa
call
ret
cld
dec
mov
ljmp
xor
xor
into
add
movsb
jnp
mov
push
xchg
out
dec
and
xchg
push
lahf
cmp
dec
aaa
fs
jmp
xor
xchg
subps
and
jo
in
sti
or
xchg
sub
push
roll
jmp
and
int3
add
pop
mov
out
fwait
lods
test
gs
mov
mov
pop
sbb
nop
pop
mov
sub
or
and
ret
sbb
enter
jp
sbb
sti
aad
in
or
xor
sbb
xchg
adc
fmull
push
rcrl
push
lods
push
and
push
cltd
dec
inc
je
sbb
repnz
mov
push
jmp
cmp
and
ret
inc
ss
push
push
push
and
inc
mov
inc
sbb
cs
andb
outsl
jnp
cmpsb
sbb
mov
dec
cmp
mov
fdivp
cmp
dec
out
xchg
add
dec
cmp
mov
adc
mov
sbb
iret
cmpsl
cmp
mov
sub
out
ja
fbld
mov
sbb
cmp
jecxz
imul
dec
jl
repnz
mov
in
add
mov
and
push
lea
adc
cs
aam
mov
pop
pop
arpl
aam
test
repz
adc
leave
pop
lods
lods
mov
mov
jno
add
mov
rcl
jg
xor
mov
xor
sti
pop
sub
mov
jg
or
into
dec
lods
scas
stc
cmp
sub
idivl
les
push
jge
jmp
outsl
and
dec
insb
das
mov
stos
xor
xor
int
xchg
sub
adc
or
std
jns
into
int
and
ret
movsl
cmp
push
xchg
movhps
rcrl
dec
xor
push
outsl
adc
lcall
call
sar
mov
ljmp
adc
inc
dec
dec
popa
test
or
push
and
mov
adc
call
jae
xor
pop
pop
popa
sbb
push
xor
mov
movsl
inc
adc
ds
cmpsb
or
lea
cs
and
pop
mov
push
popa
push
xchg
add
cmp
or
unpcklps
adc
dec
mov
add
sbb
push
pop
lret
or
rclb
mov
inc
inc
add
cwtl
mov
xchg
jge
mov
pop
arpl
jmp
lahf
addr16
outsl
in
pusha
inc
orl
xchg
stc
mov
stc
mov
outsl
pop
pop
sbb
xor
push
push
push
mov
imul
imul
imul
xchg
mov
rclb
and
xchg
mov
inc
jb
inc
dec
fcoms
jae
pop
std
mov
mov
cs
cmp
xor
aad
pop
inc
call
cmp
add
push
xchg
in
mov
stc
xor
pusha
lret
push
insl
xchg
mov
fdiv
sub
lea
int3
dec
scas
hlt
iret
fldt
sub
pop
popf
jmp
cmpl
bound
sub
add
int3
mov
cmp
sub
out
pop
loopne
std
xchg
mov
xchg
xor
xor
sbb
scas
loope
sbb
in
and
icebp
sbb
dec
cltd
jns
xor
ss
stos
inc
xor
jb
mov
xorl
or
push
out
test
xlat
xchg
fisubrs
test
ret
cmp
cmpsb
notl
add
out
push
xor
dec
sbb
pextrw
outsb
xchg
fdivs
xor
or
sbb
enter
out
fwait
mov
push
into
mov
mov
pop
std
negb
push
adc
jnp
mov
enter
lahf
mov
and
sub
rcll
je
fwait
insb
ss
cmp
sbb
pop
push
mov
xor
fadds
mov
push
cmc
out
mov
dec
ja
das
lods
push
sti
xchg
push
sbb
pop
push
cli
pop
incb
sbb
pop
dec
mov
cmp
loopne
mov
ret
outsl
ficomps
or
jo
dec
pop
call
xchg
js
loop
xchg
mov
fldt
test
dec
mov
insb
mov
add
jecxz
rolb
push
jne
mov
fucomp
sbb
inc
scas
je
lret
enter
and
enter
int
jle
push
fildl
mov
arpl
ds
popf
mov
hlt
dec
fldcw
jb
cs
ret
jl
inc
pop
iret
jmp
push
xlat
sbb
fwait
idivb
pop
nop
sbb
fwait
in
sbb
in
dec
add
dec
lret
pop
add
mov
xlat
sub
cmp
sub
jns
and
or
scas
sbb
ficomps
inc
ja
cmp
or
adc
mov
dec
inc
das
dec
pop
aaa
xchg
sub
mov
mov
out
sbb
push
repnz
jle
push
push
pop
mov
out
ja
mov
das
aam
push
or
xor
pop
clc
and
mov
incb
push
dec
xor
jnp
fimuls
decb
fs
xor
pop
rclb
rolb
pop
dec
sub
lret
aaa
add
sbb
ss
aad
jg
mov
inc
xor
dec
inc
mov
fwait
nop
or
cs
lods
and
jb
stc
mov
mov
and
mov
pop
lods
add
mov
dec
add
cs
inc
sbb
clc
inc
or
mov
call
notl
or
or
mov
push
sbb
cmp
dec
push
jnp
mov
nop
mov
xor
push
inc
pop
sbb
bound
fisttpll
jnp
decb
stc
push
xor
mov
jb
ss
pop
xor
sub
dec
xor
xor
cmp
pop
dec
push
adcl
push
jno
mov
mov
mov
push
cmpl
popf
pop
push
mov
push
push
repnz
outsb
aas
test
jmp
cmp
or
ja
cmp
xor
loope
fldcw
dec
adc
dec
bound
sub
out
lahf
dec
xchg
pop
roll
sbb
inc
shll
pop
cmp
mov
loop
dec
mov
mov
mov
xor
arpl
mov
out
and
loop
xchg
pop
mov
or
jmp
and
mov
push
pop
mov
dec
mov
push
scas
inc
es
aaa
adc
add
mov
push
arpl
or
mov
mov
push
imulb
sub
stos
xor
mov
test
xor
es
popf
js
rcrl
lods
pop
push
pop
in
pop
mov
adc
inc
mov
inc
ds
sbb
out
pop
mov
lods
adc
ret
sbb
ss
cmp
fsubrs
sbb
pop
push
jb
cmp
push
loope
js
sbb
sti
inc
es
jp
in
mov
mov
push
popf
cmpl
inc
dec
rcll
lods
jo
sti
jmp
pop
mov
xchg
insl
dec
cmp
mov
and
add
test
mov
push
mov
jnp
scas
cmp
fildl
jo
sub
das
mov
cmp
das
or
testb
push
jp
inc
pop
adc
jl
leave
ja
jb
lahf
lock
imul
aaa
jl
icebp
jnp
mov
daa
movl
rcrb
push
xchg
push
jae
cltd
icebp
in
push
sub
in
jmp
mov
push
insl
push
inc
aas
sbb
xor
add
sbb
mov
fsubrp
out
sub
dec
sub
or
push
or
jae
les
sti
pop
stc
pop
fwait
in
push
adc
mov
dec
addb
dec
das
jo
mov
cmp
pop
ja
movsb
bound
inc
fldl
sti
fistpl
ss
or
fisubrs
xor
dec
lahf
mov
cli
inc
sbb
sbb
test
daa
push
stos
outsb
push
out
mov
fsubrl
scas
sbb
pop
and
xor
jl
imul
cwtl
in
push
bound
dec
push
mov
sbb
fcmovnbe
mov
jmp
push
enter
push
lods
xchg
add
leave
ret
inc
and
cmp
mov
dec
lock
pop
ret
xchg
fstp
add
std
pop
call
xor
insb
nop
pop
outsl
lods
add
arpl
pop
mov
sti
add
sub
popa
lods
xor
rcl
aad
out
jp
jo
testb
jge
out
lret
mov
push
push
test
mov
fs
js
inc
in
jnp
gs
lods
cs
push
mov
shl
mov
sbb
faddp
add
or
loope
mov
leave
in
mov
xorb
adc
das
sbb
mov
mov
dec
js
pop
mov
jb
jl
xchg
xor
mov
push
insl
pop
xor
dec
dec
sub
or
lret
das
sbb
mov
clc
sbb
push
lds
sbb
jl
push
jecxz
addl
dec
xor
addl
clc
outsl
sbb
or
scas
sub
cmpsl
xor
cmp
pop
push
loop
ret
jmp
cwtl
insb
aad
je
inc
mov
cli
push
adc
mov
iret
inc
ja
mov
fisttps
sub
clc
sub
dec
lods
push
aam
cmpsb
jnp
je
sysret
mov
stos
dec
jnp
shrb
js
dec
insb
sbb
xchg
mov
push
inc
xchg
rorb
or
out
pop
test
sbb
lods
lret
sbb
loope
push
jecxz
inc
into
adc
push
or
cmp
imul
push
js
jp
cmp
lea
push
mov
sbb
dec
ss
adc
or
mov
in
js
mov
pop
dec
sbb
sbb
repz
xchg
adc
xchg
fbld
popa
xchg
lods
cmp
call
sub
js
ret
or
push
inc
cmp
or
cmp
cltd
shrb
outsb
loopne
mov
xchg
dec
fwait
xchg
inc
pmaxub
push
add
ss
mov
popa
adc
je
inc
les
sbbl
dec
inc
jl
add
jl
test
push
loop
inc
imul
xchg
cltd
loop
movl
jo
data16
rcrl
sar
jl
rcrb
js
repnz
mov
arpl
pop
aad
sbb
add
mov
sub
mov
mov
stos
cmp
mov
mov
mov
das
repz
mov
sbb
cli
cwtl
data16
mov
subb
cmp
pand
mov
mov
mov
aaa
sub
mov
shll
push
mov
stos
orb
mov
xor
int3
inc
ret
stos
xchg
xchg
test
lods
mov
test
mov
cmp
out
cmp
adc
cmp
fldt
xchg
ja
test
sub
aas
add
push
push
pushf
adc
and
sbb
pop
mov
dec
scas
and
or
push
add
sbb
push
xchg
push
pop
mov
push
lods
or
xor
add
ret
das
push
push
adc
mov
or
gs
pop
cmp
mov
data16
lods
outsl
adc
and
xor
mov
cmp
test
sahf
fisubs
testb
pop
mov
stos
pop
and
xor
hlt
shlb
outsb
popf
cmp
fisubs
lahf
xchg
cltd
adc
nop
lret
xor
negb
inc
mov
test
mov
inc
xor
push
int
ss
jl
les
mov
imulb
scas
test
insl
jae
pop
sub
out
add
call
jno
aam
cmpsl
dec
mov
enterw
fdivl
push
cmpb
cmpsl
cmp
fs
aad
fidivrl
mov
rolb
aaa
fbld
repnz
shrl
mov
pop
sbb
mov
dec
ret
bound
aad
and
mov
cmp
adc
sub
fmul
and
insl
sbb
mov
leave
lods
mov
loope
or
inc
jno
in
add
push
lahf
adc
cmp
push
jns
sti
jnp
pop
shlb
pop
aad
push
add
cmpsl
or
roll
push
sbb
push
lahf
mov
cmpsb
push
test
das
sti
dec
stos
push
cmp
xor
adc
pop
xlat
ss
imul
push
jnp
mov
bound
lret
sti
add
lret
ror
mov
in
jp
adc
in
pop
loopne
mov
inc
addl
pop
fbld
dec
push
dec
cmp
inc
mov
jecxz
mov
cmp
xlat
mov
dec
das
fwait
mov
add
int
lret
pop
sbb
movsb
leave
xchg
inc
rcrl
sbb
mov
add
js
inc
ja
mov
or
imul
test
sub
pop
nop
push
or
test
dec
sbb
push
sub
inc
adc
std
out
xor
lods
inc
icebp
fidivrl
push
aam
cmp
repz
dec
leave
jmp
add
stos
inc
mov
sbb
mov
rol
add
pop
sbb
sbb
in
mov
push
pop
and
add
push
jo
inc
jle
mov
mov
test
stc
jae
les
sbb
enter
cltd
scas
fisubrs
sti
repnz
test
jo
lret
pop
inc
add
cli
lods
mov
dec
sbb
push
push
outsl
add
int3
ja
add
mov
lods
push
xchg
sub
add
mov
mov
int3
fdivrs
test
inc
enter
push
dec
mov
mov
ja
sbb
dec
xchg
clc
dec
movl
push
stos
shrl
xor
or
ss
dec
movsl
push
pop
lret
inc
cmp
lods
sub
adc
pop
je
mov
pop
movsl
xchg
repz
clc
and
shrl
adc
fldt
int
lret
sti
inc
cli
pop
mov
mov
jg
xor
pop
push
lock
icebp
aas
ss
in
inc
mov
cmovs
lret
sbb
or
jbe
scas
cmp
push
jmp
sbb
add
in
icebp
mov
xor
push
adc
data16
inc
xor
mov
xchg
sub
cltd
loope
mov
mov
out
or
fisttpl
ret
or
xor
cmp
mov
adc
jmp
pop
sbb
pop
fsubrp
addr16
add
or
push
add
dec
pop
mov
lret
cmp
xor
mov
aam
repz
out
jle
lret
dec
jmp
mov
les
xchg
cmp
xchg
js
andb
mov
xchg
das
and
add
jl
insb
xor
cltd
sarb
dec
mov
jo
outsl
push
sub
roll
loopne
dec
dec
jne
stos
push
xchg
inc
ss
xchg
rcr
int
add
and
jns
std
in
sahf
dec
vmwrite
ss
sbb
lods
mov
daa
test
and
jl
das
call
pop
adc
jecxz
sub
fcoms
inc
aaa
xchg
xor
dec
sbb
push
cmp
sub
cltd
mov
and
ss
aas
adc
aad
adc
adc
xchg
mov
es
dec
mov
or
add
in
or
push
dec
cmp
adc
mov
mov
ret
cli
movl
shlb
sub
ss
mov
fcom
mov
sarb
cmp
test
pop
fmuls
aam
ret
sub
jmp
js
mov
mov
push
cld
jne
xchg
or
fwait
pop
repnz
push
rcll
xor
cmp
adc
out
imul
shll
cmp
rcrl
sub
adc
in
and
lods
mov
fimuls
and
iret
sub
sbb
rcrl
mov
decl
add
mov
mov
cmc
dec
ljmp
rcll
sbb
dec
or
imul
std
sbb
xchg
xor
xchg
ss
fs
mov
adc
ja
xor
cli
mov
data16
mov
cmp
push
dec
inc
and
cmp
cli
dec
xlat
inc
fdivl
xchg
xlat
xchg
xchg
add
fidivl
jne
sbb
xlat
pop
inc
adc
repz
stos
mov
sub
cs
dec
dec
dec
mov
js
mov
jg
loopne
and
mov
nop
ss
adc
je
sub
mov
sbb
lock
cwtl
mov
es
pop
lcall
gs
nop
repnz
add
sub
mov
mov
fcoms
mov
pop
repz
cs
in
mov
mov
inc
mov
clc
mov
cmp
jge
mov
pusha
push
mov
mov
mov
mov
cmp
shrb
roll
lock
dec
sbb
movsl
and
inc
fs
jae
adc
insl
mov
pop
dec
cwtl
nop
rcll
icebp
daa
push
add
mov
ljmp
ds
sbb
dec
add
or
pop
push
mov
add
mov
cmp
mov
insb
dec
fimuls
cmp
pushl
iret
mov
push
mov
enter
adc
and
roll
imul
dec
adc
aad
out
mov
lret
sbb
repz
inc
or
cmpb
lret
cld
aas
add
cmp
mov
iret
inc
lods
inc
push
leave
in
push
popa
xchg
push
ja
imul
push
repz
xchg
jbe
incl
js
loope
pusha
lods
or
xchg
mov
jp
dec
rcrb
mov
shl
out
mov
ficompl
cld
or
inc
insl
inc
add
mov
jl
xchg
fildl
xor
add
mov
repnz
popf
in
mov
ret
push
mov
mov
push
push
push
inc
fwait
inc
call
shl
push
inc
fidivrs
nop
jmp
stc
xchg
xchg
or
or
or
adc
mov
adc
xor
xor
adc
loop
pop
incb
and
adc
hlt
std
jmp
js
dec
popa
movsb
mov
fwait
in
push
lock
mov
xchg
out
fwait
sub
ss
adc
inc
insb
cmp
push
fnstcw
cmp
in
sti
mov
mov
mov
inc
cmp
mov
iret
push
jns
xor
mov
int3
mov
hlt
ljmp
stos
enter
mov
pop
adc
clc
cli
or
es
lahf
xchg
xor
mov
lcall
ljmp
in
test
or
outsb
fildl
pop
pop
shl
fwait
adc
sbb
lock
sti
mov
fst
push
nop
or
lahf
mov
scas
mov
inc
push
xor
ja
adc
bound
jmp
cwtl
adc
popa
mov
xor
cmp
js
test
adc
lcall
fisttpl
mov
inc
cmp
adc
pop
mov
dec
insl
cmp
pop
bound
sub
dec
mov
xor
fs
out
and
aas
lcall
xchg
cld
mov
lret
push
jle
addl
jle
sbb
insl
pop
dec
orl
js
pop
ja
lret
scas
ss
add
fnsave
mov
outsb
pop
cmp
stc
dec
mov
push
sbb
push
pop
int3
xchg
cli
mov
push
mov
fistpl
out
imul
or
add
bound
xchg
mov
sbb
xchg
fistl
sbb
adc
add
and
pop
mov
ds
sub
push
shll
pop
call
sbb
push
fildll
fs
dec
bound
popa
pop
pop
mov
dec
std
or
and
jo
add
test
fiaddl
repz
mov
outsb
xlat
push
xor
cwtl
jb
adc
insl
cld
xor
add
cmc
push
xchg
pop
sbb
cmp
incl
dec
jns
inc
lods
test
xchg
jns
repnz
lea
adc
jb
push
inc
push
xchg
cmp
xor
jns
cmpsl
fincstp
arpl
mov
jb
ret
pop
inc
xor
mov
pop
add
shrl
std
pushf
dec
rcrl
jge
jmp
inc
mov
push
fs
jl
cld
or
inc
push
cmp
dec
cwtl
rolb
sbb
outsl
pop
xor
cmp
hlt
xor
movsb
inc
out
loop
cmpsb
add
bound
jle
ret
shlb
ficomps
ret
sub
pop
mov
outsl
test
std
mov
fsubrp
fldcw
sahf
inc
mov
insb
mov
cld
jae
mov
dec
ficompl
aaa
pop
and
movhps
sti
mov
bnd
std
lods
cmp
das
movsb
mov
xchg
rorl
xchg
jp
int3
inc
dec
push
gs
sbb
mov
inc
les
mov
rcl
push
and
ja
daa
xchg
psrlq
and
and
cltd
mov
sbb
scas
jo
dec
sti
xchg
xor
das
xor
pop
cwtl
pop
adc
movsl
mov
ss
pop
inc
cli
mov
decl
and
mov
xor
inc
mov
push
stos
adc
mov
lods
mov
out
aas
inc
mov
pop
scas
mov
inc
rcll
dec
xor
mov
je
xor
mov
xor
pop
xchg
mov
fwait
xchg
cli
lret
mov
cli
xor
bound
out
mov
pusha
es
jae
add
cmp
dec
scas
or
inc
and
push
xchg
imul
insl
fsts
dec
pop
roll
mov
jo
jge
in
mov
xor
xchg
jl
and
push
sti
or
dec
xor
xor
mov
sub
dec
dec
fwait
out
mov
push
lret
dec
cmp
jmp
pop
or
addr16
add
inc
fcompl
mov
into
push
adc
dec
call
sub
push
aas
cmp
gs
out
adc
pop
xchg
push
sarl
pusha
sub
dec
aam
mov
add
cmpsl
lods
pop
fstp
push
sahf
push
pop
dec
mov
push
cli
mov
lds
lods
sub
sub
jmp
int
cmpsl
adc
xor
pop
sbb
jbe
repz
bound
daa
xor
adc
fdivrl
rorl
lahf
pop
fwait
mov
test
pushl
pop
pushf
jge
cld
ljmp
sti
pop
fwait
mov
loop
lret
cmpsl
in
or
mov
iret
push
cld
and
sbb
mov
mov
mul
push
cs
das
or
jb
jae
out
iret
rol
cmp
dec
dec
inc
cmp
mov
scas
sub
xlat
ljmp
jns
cmp
or
mov
sub
scas
cmp
adc
popl
sahf
aaa
aad
or
adc
and
fldcw
lock
jle
sbb
or
mov
sub
add
xchg
xchg
xlat
fwait
dec
cmp
sahf
xchg
fwait
test
jb
push
push
psllw
add
lret
mov
popa
push
es
outsl
push
bound
aaa
jb
movsb
je
imul
data16
add
outsl
sbb
jecxz
cli
dec
sub
dec
or
adc
cs
stos
cs
push
repz
add
mov
mov
xor
add
aaa
push
ficomps
repz
pop
movl
addr16
ds
dec
pop
dec
xlat
jo
sbb
mov
lods
xor
dec
out
fdivrs
stc
aaa
push
cmp
outsb
mov
adc
dec
cmpsb
pop
dec
mov
jnp
inc
aaa
push
decb
outsl
mov
sbb
inc
cmp
iret
lods
cmp
das
fstpt
mov
jecxz
in
fistpl
inc
push
aad
push
add
fsubrl
in
push
repnz
mov
and
add
mov
fcoml
in
fld
mov
cwtl
enter
lahf
in
repz
in
jle
pop
shll
and
ljmp
outsl
dec
adc
cmp
ret
push
stos
in
xor
pop
xchg
sbb
or
xorl
arpl
push
and
adc
sbb
ret
data16
gs
sbb
and
add
push
push
adc
inc
sti
cwtl
mov
mov
mov
mov
popa
faddp
xchg
lods
push
sbb
pusha
leave
sub
das
sub
dec
dec
out
lret
pop
pusha
and
adc
push
ret
pop
lock
adc
mov
cmp
pusha
xor
adc
mov
pop
mov
rcl
jge
add
cmp
ss
pop
pop
dec
dec
xchg
xor
fwait
jne
xlat
xor
mov
push
fcmovnbe
dec
dec
or
outsb
push
sub
add
imull
jae
repnz
pop
xor
sub
stc
and
mov
das
lock
imul
mov
and
lods
lret
ficomps
xor
sbb
cmpsl
aad
das
xchg
adc
pushf
xor
cmp
push
fadd
scas
mov
movb
cltd
sub
jns
aad
inc
fwait
mov
and
js
ret
call
repnz
push
mov
xor
mov
test
in
adc
pop
and
mov
lds
aas
mov
mov
jne
dec
push
lods
ret
sub
inc
jns
int
out
cmp
outsl
inc
sahf
in
sub
cmp
mov
cwtl
sub
cmp
xor
mov
pop
aas
clc
roll
aas
pop
fistps
inc
inc
ljmp
or
leave
adc
xor
mov
ljmp
xchg
mov
push
pextrw
cltd
clc
inc
mov
into
or
gs
shlb
mov
sub
aas
fdecstp
cmp
aad
cli
sbb
fcmovnu
push
adcl
sub
xlat
leave
sbb
cmp
lret
cltd
sbb
xor
pop
sbb
cmp
mov
out
inc
imul
sbb
pop
inc
dec
inc
dec
cmp
sub
mov
js
ljmpw
call
xor
lret
push
dec
jo
xchg
fsts
dec
ds
cvtdq2ps
mov
adc
inc
or
fabs
movl
or
scas
sahf
insb
xlat
gs
lock
add
insb
ret
ret
repz
sbb
pop
aaa
mov
inc
or
xlat
fistpll
add
ss
jp
testl
stos
incb
stc
sub
popa
lods
cmpsl
lret
clc
iret
sub
jmp
ret
aas
icebp
push
repz
scas
xor
scas
gs
sti
pop
cmp
sbb
and
xor
clc
xchg
inc
and
lock
pop
in
out
call
sbb
mov
push
inc
mov
xchg
in
inc
sub
mov
pushf
mov
sbb
mov
mov
cwtl
fwait
dec
nop
ss
ja
or
cmp
in
das
cmp
cmp
push
add
pop
jnp
ss
repz
add
or
xor
cmp
pop
fsts
rcrl
test
xor
outsl
in
cmp
dec
cmpsl
push
test
dec
addr16
push
mov
mov
cmp
cltd
cmpsl
and
push
cmp
inc
sti
fdivl
jne
sub
ss
jmp
cmp
cs
mov
cmc
fdivr
mov
jbe
popf
add
shrl
repz
adc
add
or
movsl
push
cli
divb
rcrl
dec
push
xchg
ds
sbb
std
in
gs
xchg
rcrl
dec
dec
xor
or
mov
sub
push
xchg
lods
xchg
xlat
sub
mov
sarl
push
xor
outsb
inc
movsl
rcl
ret
or
xchg
test
fsubrl
jbe
mov
loop
fisttps
mov
cmp
dec
xchg
pop
aaa
mov
push
cmp
or
dec
loopne
or
sarb
hlt
lahf
sti
mov
pop
in
inc
in
pushf
xor
add
fwait
or
or
lcall
pop
lods
mulb
jg
sbb
nop
loop
add
fstps
or
sarl
push
sarl
les
sahf
sbb
dec
jne
out
mov
and
pop
xor
jno
jbe
xchg
mov
call
xchg
test
stc
ss
shr
add
movsl
bound
dec
rol
mov
clc
stos
aas
clc
idivb
ja
nop
pop
mov
cmp
jns
mov
push
xor
xor
pop
cmp
shll
and
dec
test
dec
pop
shlb
shll
or
in
push
sub
gs
call
daa
dec
xor
mov
xchg
lret
leave
aaa
adc
das
push
loop
in
ret
dec
push
dec
mov
push
in
imul
inc
popa
dec
shrb
cmpsl
cmp
xor
pop
xlat
popa
or
mov
aaa
loopne
movsl
sub
std
xor
xor
fadds
aad
outsb
scas
jns
and
or
push
fsubp
fsubrp
mov
imul
lret
push
clc
lock
inc
add
push
or
mov
clc
lods
push
cmpsl
pop
push
mov
enter
inc
cmp
adc
dec
or
lods
xchg
mov
in
xchg
or
mov
mov
jp
cmp
mov
cli
scas
mov
inc
sub
jl
mov
jmp
xchg
repnz
push
pusha
push
mov
fnstcw
mov
cmc
jl
jge
push
mov
and
je
dec
xchg
and
rorb
dec
icebp
ret
xor
sbb
sbb
shlb
fiaddl
adcb
flds
and
push
add
rcr
cmp
lret
cmp
push
jb
jecxz
jo
cmp
xor
mov
int3
scas
js
cmpsl
bound
in
push
add
sub
mov
std
cld
stc
ret
push
lcall
pop
jle
lods
fisttpll
arpl
rcll
dec
inc
test
push
add
adc
stos
inc
psrlw
inc
sub
psubd
insl
adc
xor
test
imul
xlat
push
inc
add
adc
add
or
jne
lea
rol
pop
sub
pop
insb
mov
lcall
ret
clc
mov
inc
jne
arpl
mov
cwtl
inc
add
decb
dec
out
push
clc
gs
call
cld
cmpsl
std
inc
sahf
lret
int
mov
add
pop
mov
ja
cs
add
push
cmpb
stos
outsb
aad
test
rorl
or
inc
mov
xor
nop
inc
add
imul
adc
adc
xor
jb
rorb
lret
jne
xor
lds
push
lods
mov
adc
ret
lahf
add
in
sbb
fiadds
movsb
jno
mov
ds
sbb
pop
sub
sub
adc
lods
scas
adc
jmp
push
mov
dec
scas
mov
aaa
jl
mov
push
jns
stc
mov
mov
fisttpl
xchg
mov
imul
iret
or
arpl
jne
push
or
jo
pop
push
jg
mov
push
ret
dec
loop
sbb
popa
stos
lock
dec
mov
pop
inc
hlt
mov
dec
incb
push
ja
notl
dec
ret
mov
add
pop
dec
sub
ss
icebp
inc
fs
pop
or
adc
sbb
outsb
mov
movsl
ffree
sti
jmp
pop
data16
add
push
aaa
dec
push
sbb
xlat
cmp
push
push
xor
imul
cmp
xorb
pop
ficomps
pop
imul
adc
dec
or
jno
clc
scas
imul
in
lcall
mov
xor
sub
adc
data16
cli
mov
xchg
pop
iret
inc
or
ss
or
and
nop
pop
jecxz
arpl
testl
mov
pusha
push
mov
xchg
mov
adc
mov
and
dec
dec
inc
repnz
aam
pop
scas
nop
or
push
sbb
dec
mov
das
cmp
hlt
sub
xorb
mov
add
mov
add
cmp
arpl
mov
pop
cmp
jmp
negl
xor
inc
mov
cmp
sbb
jl
fisttpll
mov
jno
cmp
adcl
cmp
insl
push
fldl
pusha
pushf
or
pop
or
or
pop
fcmovnbe
jg
outsl
dec
pusha
lea
inc
lahf
clc
mov
adcl
ja
cmp
pop
adc
ret
dec
push
push
sbb
mov
xor
or
dec
sbb
lds
aaa
cmpsl
or
les
leave
cmp
or
stc
ljmp
dec
sub
push
mov
mov
inc
push
sbb
inc
sbb
fisubs
sub
mov
jbe
mov
and
dec
cmp
lock
arpl
iret
sti
pop
sub
sbb
cwtl
adc
divl
mov
push
pusha
out
pop
dec
adc
fstpt
or
xchg
jns
mov
enter
es
lods
push
sub
lcall
pop
loop
testb
jecxz
fsincos
inc
push
fst
inc
stos
sbb
push
inc
or
ss
or
aaa
mov
xor
cmp
je
cmp
or
lcall
add
xor
pop
fs
dec
and
xchg
sbb
jg
rcrl
mov
push
int3
mov
ss
sbb
dec
push
insb
int
push
cltd
rorl
popf
insl
lret
inc
lret
push
inc
inc
xor
insl
inc
lea
fists
push
loop
fdiv
mov
xor
push
xlat
xor
and
repnz
cli
daa
push
xor
push
and
push
push
inc
mov
cmp
addr16
xchg
lods
test
call
aas
mov
fildll
and
add
jno
sbb
push
negb
xor
mov
scas
loop
popa
and
jl
jne
cmp
aaa
inc
cmp
and
xchg
jecxz
sbb
inc
or
sti
ret
fildl
lret
xor
rolb
inc
popf
or
adc
push
mov
popa
dec
icebp
and
nop
cmpsl
mov
cmpsl
cmp
cmpsb
push
xchg
dec
add
push
popf
imul
fxch
or
pop
dec
adc
and
inc
movsl
out
outsl
pop
outsl
xor
cmp
push
mov
cmp
sbb
sub
push
ss
xor
push
inc
shlb
inc
pop
pop
mov
jns
lods
into
sbb
mov
cmpsl
add
or
push
es
dec
mov
add
push
iret
outsl
or
aas
mov
push
ss
fldcw
cli
xor
push
nop
call
jle
sbb
cmp
jge
or
cltd
pop
add
loop
inc
ljmp
sub
sub
xchg
inc
jp
int
xor
cmp
je
ja
int
lret
lret
pop
lods
pushf
fsubrs
xchg
pop
xchg
xor
imul
push
xchg
outsl
ss
sub
iret
hlt
xor
adc
fsub
scas
push
cmp
mov
or
mov
adc
jnp
imul
lods
xorl
sbb
es
push
and
imul
cs
sub
adc
xor
or
xchg
xor
xor
cmpsl
cmp
adc
sbb
stos
in
cmp
add
push
int
in
scas
fidivrs
inc
cmp
ljmp
or
or
inc
ret
aad
push
cmp
loopne
dec
in
mov
push
mov
scas
push
fstpt
cmpsl
mov
jbe
icebp
mov
aas
or
inc
test
loop
outsb
mov
rclb
push
dec
mov
or
enter
xor
xor
aaa
sub
pop
ret
fs
xchg
or
outsl
fmul
stos
mov
push
adc
test
lods
arpl
xchg
or
add
cld
jne
push
lds
xor
add
adc
cmp
xor
fsts
dec
adc
jb
adc
loop
adc
xchg
mov
push
mov
fmull
jnp
dec
sub
cmp
outsl
push
fisubl
mov
out
cmpsb
sbb
aaa
xor
xor
pop
xor
and
add
pop
cmp
icebp
out
fsubrl
fwait
xor
xor
popa
shll
dec
sbb
xchg
add
xchg
dec
rclb
shrb
adc
lock
ja
push
aas
xor
loopne
lods
out
out
push
xor
and
adc
stos
sbb
cltd
push
xor
push
mov
adc
push
cmp
aaa
rclb
push
dec
clc
fwait
notb
mov
dec
cmp
ss
ficoml
inc
or
aad
pop
mov
add
lret
mov
inc
insl
out
mov
mov
dec
pop
cmc
mov
xlat
dec
popa
push
loopne
push
popa
mov
add
aaa
dec
sbb
push
jno
shll
push
mov
mov
jp
sbb
xor
cmp
push
loop
subl
xchg
dec
push
inc
inc
add
out
push
xchg
stos
dec
push
xchg
mov
mov
cmp
push
inc
into
ss
mov
add
pop
mov
in
dec
cmp
cmp
or
sub
push
ret
push
mov
clc
sbb
lods
mov
and
push
dec
mov
add
and
je
sub
dec
lods
bound
push
xor
push
push
imul
bound
sbb
shr
push
call
or
cwtl
lahf
adc
xor
rcrb
pop
xor
push
push
ret
cmp
cmc
int3
dec
fwait
testl
cmp
dec
cmp
repnz
dec
scas
inc
add
repz
dec
cmp
js
inc
out
sub
or
dec
inc
fwait
mov
bound
jae
push
sub
dec
push
cmp
jnp
mulb
add
movsb
xchg
mov
gs
cmp
movsb
cmp
push
pop
je
lret
adc
in
cmp
sub
cli
dec
pop
clc
in
fs
xchg
data16
cmp
aaa
hlt
in
or
and
stos
xchg
inc
ret
sub
and
call
xchg
mov
leave
aaa
sbb
or
addb
xchg
pop
cmp
adc
dec
cmp
mov
call
add
or
add
sbb
lods
inc
imul
les
xchg
lods
sub
outsl
push
ljmp
sub
or
dec
mov
xchg
aaa
lret
repz
push
jp
xor
sti
mov
mov
push
inc
sbb
jmp
push
dec
mov
daa
outsb
jns
inc
mov
adc
mov
or
and
movsl
ret
jecxz
cmp
insl
js
inc
ret
dec
fs
mov
imul
fadds
and
pusha
xlat
mov
fldt
push
clc
rcrl
arpl
popa
mov
pop
xlat
mov
mulb
xor
jecxz
cmp
aas
aas
fucomi
sub
arpl
iret
out
sti
adc
or
mov
aam
inc
push
pcmpgtb
std
add
les
adc
fcmovnbe
jns
ss
adc
inc
pop
jl
dec
ljmp
dec
inc
fsubrs
pop
lahf
push
xchg
out
jnp
pop
xchg
pop
jle
mov
mov
enter
insl
leave
adc
repnz
inc
xor
lahf
lods
cmpsl
add
adc
popa
sbb
das
jecxz
stc
pop
ss
lret
mov
andb
pop
aaa
or
mov
xchg
sbb
inc
cmp
mov
lds
call
mov
loop
shrl
mov
shll
sarb
jnp
mov
sbb
daa
das
mov
add
sub
pop
iret
adc
adc
int3
push
mov
xchg
fisubrs
std
pushf
push
push
add
xchg
or
das
dec
add
xor
cmp
push
mov
mov
rcr
in
adc
cmp
adc
mov
jb
sub
jecxz
cmpsb
and
mov
xor
mov
sbb
mov
stc
and
lea
and
xchg
mov
ret
jge
cmp
push
sub
out
int
in
or
adc
mov
inc
push
cli
adc
fcmovbe
adc
pusha
pop
cmp
add
out
shl
test
or
inc
jle
push
mov
fisubrl
mov
call
jecxz
aam
jo
jnp
bound
push
jo
pop
dec
push
fistpl
xchg
mov
cmp
xor
cwtl
inc
mov
jnp
mov
ret
loop
jns
add
mov
das
or
mov
cmpsl
adc
ret
pop
pop
sbbl
jmp
insb
icebp
fld
adc
xchg
dec
xchg
mov
and
dec
mov
cmp
xchg
xor
xlat
sti
mov
cwtl
ret
mov
rorb
mov
aaa
out
aas
sub
mov
cltd
xchg
add
push
dec
imul
pusha
pop
inc
lods
and
xchg
dec
or
test
or
mov
adc
aas
sub
insl
jmp
cmc
cld
lcall
dec
mov
push
mov
sbb
incl
mov
pop
loop
mov
adc
rcrl
push
push
stos
sbb
call
nop
inc
add
ss
sbb
xor
jg
stc
fs
fdivr
out
pop
jmp
shl
mov
sbb
sbb
fsubrl
adc
xor
fwait
sbb
data16
push
xchg
mov
es
push
inc
cs
jno
es
test
rorl
xchg
and
fidivrs
inc
ja
fisttps
pop
add
pop
xlat
xchg
es
movsb
in
pushf
imul
push
cmp
ljmp
lds
mov
pop
bound
cmpb
mov
mov
jmp
jns
dec
adcl
shrl
mov
inc
fildl
xchg
sub
adc
and
repnz
lock
into
inc
cmp
lods
cmpb
std
loopne
xlat
cli
test
stc
subb
inc
ret
cltd
or
xor
fucomi
mov
in
add
loop
test
sub
dec
mov
or
ds
add
sbb
lahf
push
fidivrl
idivl
pop
lahf
sub
btc
imull
mov
test
mov
cwtl
push
mov
dec
dec
stc
call
push
jns
xor
aad
mov
add
sbb
sbb
push
jo
dec
rclb
je
add
pop
adc
push
fdiv
les
mov
xor
adc
sub
fdivs
pop
dec
addr16
outsl
pusha
shl
mov
into
lahf
mov
test
dec
aam
xchg
mov
mov
loop
add
push
inc
cmp
cmp
sub
mov
xchg
fwait
xchg
outsb
mov
outsb
stos
adc
inc
cli
es
push
xchg
mov
inc
jae
push
xor
in
cwtl
inc
lock
rorb
das
adc
adc
fwait
das
add
mov
scas
jae
adc
aaa
xchg
adc
xchg
mov
push
push
push
sbb
test
mov
imulb
dec
scas
sub
cwtl
mov
fs
cli
es
fisttpl
push
cmp
dec
jl
xor
in
xorl
out
mov
cmp
cmc
cmp
pop
mov
lcall
sbb
scas
std
sub
jns
dec
and
jo
mov
push
mov
adc
sbb
and
scas
cmpsl
subl
dec
lods
dec
or
data16
pop
push
sbb
sbb
inc
sti
mov
push
pop
and
cs
enter
int3
inc
pop
dec
hlt
decl
pusha
fisttps
inc
xor
fcmovne
cmp
jb
loop
inc
fstpt
scas
inc
cmp
cmp
cmp
lods
mov
xor
push
fucomi
nop
outsl
or
inc
dec
divl
dec
dec
leave
jmp
cmp
push
sbb
jns
mov
fsubrs
xchg
fwait
push
pop
cli
fsubrs
adc
negl
adc
in
lret
sbb
pop
cmc
cmpsl
jl
xorb
sti
pop
add
jb
cmp
cmp
xchg
mov
lcall
fstpt
shll
or
mov
xor
add
out
mov
xor
xor
arpl
pusha
xchg
jle
lds
xchg
sti
xor
sub
pop
inc
roll
js
es
xor
loopne
or
cmp
xchg
pusha
int
push
into
int
push
and
sti
hlt
lods
iret
mov
dec
adc
pop
xchg
jecxz
scas
jo
fistl
in
and
iret
mov
xchg
movsb
push
add
orl
push
outsl
push
mov
mov
mov
test
push
dec
negb
repz
out
mov
push
repnz
or
push
leave
pop
mov
js
daa
add
pushf
pop
sub
aas
dec
adc
loop
addb
adc
mov
stos
adc
mov
icebp
fcmovnbe
pop
pop
lcall
mov
add
xchg
jne
sub
push
sub
cmp
inc
repz
push
pop
sub
pop
repnz
mov
loop
rcr
dec
jno
push
dec
imul
cmp
cmpsb
sbb
sti
sbb
mov
pop
mov
out
mov
loop
pop
mov
mov
out
jb
xor
insb
adc
out
enter
mov
pop
jno
xchg
cs
xor
xchg
cmp
jecxz
xchg
loop
xchg
pop
dec
cmp
adc
mov
add
test
out
fsub
enter
jns
push
dec
sti
adc
icebp
decl
inc
js
mull
push
ljmp
mov
push
nop
rol
inc
inc
inc
fsin
leave
pop
cmp
ret
inc
cmp
fnstsw
push
loop
shr
mov
mov
mov
div
mov
sbb
inc
sarb
push
sbb
xor
lods
or
sub
dec
movq
pop
imul
xorl
lods
cmp
xchg
sarb
lods
push
lea
push
repz
fisubl
push
sbb
ss
aam
mov
cmp
jecxz
push
scas
fs
jle
inc
stos
cs
cmp
inc
ret
shlw
enter
mov
fnstsw
repz
sub
call
inc
mov
aad
adc
mov
stc
push
lahf
shll
adc
push
jecxz
dec
testl
add
mov
jns
push
data16
mov
sub
lcall
cmp
dec
dec
xchg
cmp
movsb
xor
adc
mov
mov
iret
aad
in
or
stos
and
dec
sub
xchg
fsubrs
push
mov
xor
pop
lret
outsb
pop
add
loopne
mov
mov
cmp
test
push
fildll
cmc
xchg
shlb
mov
popf
pop
push
cmc
fisubrl
lret
iret
cs
dec
cltd
jp
jle
push
or
hlt
push
push
cmpsb
pop
sbb
lahf
inc
sbb
xchg
push
mov
add
stos
test
adc
mov
aad
or
sub
movsl
fstpl
xchg
mov
pop
inc
ja
jmp
cmp
pop
push
pop
es
cmp
pop
loope
inc
pop
or
jae
popa
mov
add
mov
mov
or
sbb
nop
imul
sti
cmp
sbb
lea
cmp
dec
cli
fisubs
pop
mov
sbb
cmp
jbe
aad
mov
push
sub
sbb
cs
sbb
gs
fs
dec
mov
dec
pop
adc
fst
dec
push
stos
lock
test
xor
daa
fcoms
push
mov
data16
dec
es
cmp
mov
jnp
repnz
cmp
sbb
sub
mov
jp
inc
adc
inc
sbb
adc
cwtl
and
jb
lahf
and
mov
fiaddl
dec
cwtl
cmp
inc
and
mov
dec
adc
mov
mov
fdivrs
add
push
lods
pop
inc
ljmp
sub
inc
test
xchg
cmp
sbb
push
inc
mov
sbb
mov
add
sbb
jo
pop
xchg
inc
stos
lods
pushf
hlt
and
sub
pop
push
push
sub
stos
in
ss
xchg
sti
in
sbb
inc
filds
push
cmp
mov
dec
xor
push
adc
popa
pop
mov
and
add
sarl
sub
fld
or
insl
push
xor
adc
push
dec
jp
mov
xor
inc
xor
cmp
sbb
mov
scas
mov
popa
movsl
cmpsl
push
addb
or
mov
xor
divl
pop
test
gs
mov
mov
stos
ljmp
ljmp
aas
add
add
iret
sub
dec
pop
pop
dec
ja
pop
lahf
sbb
push
fnsave
sub
lahf
pop
sub
push
push
push
scas
je
xlat
mov
pop
xchg
cmp
es
jo
inc
cmp
stos
and
push
cmp
and
dec
testb
test
mov
sarb
sub
mov
cmc
xor
out
pushf
pop
jnp
repnz
inc
cmp
iret
push
les
push
xchg
dec
pop
inc
sbb
sub
jp
mov
pop
pop
sub
orl
iret
aam
adc
pop
cmp
add
inc
mov
cmc
shrb
dec
rcrl
jl
jg
cld
adc
add
sub
lcall
sbb
int3
adc
dec
dec
fbstp
lock
jecxz
jae
clc
shl
outsl
stos
dec
fiaddl
mov
insb
mov
xor
dec
jo
ss
xchg
stos
xor
jl
jmp
fwait
xchg
fs
ljmp
fistps
test
push
pushf
cmp
fsubrs
dec
insb
xor
cmp
inc
inc
outsl
mov
mov
inc
ds
cmp
sub
aad
adc
sbb
inc
fwait
push
mov
xlat
iret
aad
sbb
push
push
adc
inc
fs
loope
jb
hlt
dec
dec
fcmovb
nop
mov
hlt
incb
clc
stc
pop
mov
cld
dec
nop
cmp
mov
jo
nop
xor
dec
cmp
push
pop
or
ss
js
dec
adc
push
cmp
fildl
xchg
out
pop
sbb
adc
jbe
sub
ss
ljmp
push
aaa
clc
test
push
sbb
lsl
bound
sbb
dec
and
in
xor
mov
xchg
stc
fs
or
sub
insb
iret
lret
mov
sbb
push
and
sarl
push
adc
lret
pop
mov
mov
lret
andnps
pop
fsubl
test
mov
pop
sbb
mov
movsb
xor
push
inc
jns
cmp
jecxz
cmp
cmp
out
cltd
xchg
sub
mov
lret
clc
iret
nop
lret
lods
xchg
adc
gs
lea
pop
adc
push
xor
push
sbb
insl
fdivl
iret
or
push
pop
pop
repnz
cmp
push
and
jne
pop
jl
insl
je
lods
shll
cmc
pop
pop
mov
sbbl
push
dec
dec
push
insl
inc
inc
in
dec
out
lahf
add
mov
pusha
mov
lret
add
repnz
add
ljmp
push
push
xor
sbb
andb
ljmp
push
rcl
ja
and
push
add
add
cmp
cmp
test
xor
push
dec
push
into
adc
mov
add
shlb
rol
mov
repz
xchg
mov
sahf
jo
xchg
sti
jne
cmp
jg
sbb
and
dec
aaa
bound
stos
int
fistl
mov
popa
or
jne
and
rorl
or
inc
jo
lds
imul
cli
cmp
xor
roll
int3
mov
cmp
add
rcrl
mov
lret
sbb
push
ret
je
sarl
iret
rcr
xor
push
sahf
mov
adc
cltd
sub
inc
cmc
insb
push
clc
sarl
and
sub
insb
inc
mov
popa
add
sbb
pop
sbb
cmp
leave
push
sub
ja
pop
cmp
mov
aad
dec
lret
pop
clc
les
shl
sub
test
adcb
cmp
push
lret
sub
leave
int
or
ss
cli
push
arpl
rcl
in
test
dec
sbb
fimull
insb
mov
cld
enter
jbe
mov
sub
sbb
sbb
int3
cld
lret
push
lcall
popa
cmp
stos
cmp
or
pop
push
xor
ffree
mov
das
loop
outsl
xchg
js
sbb
cltd
sbb
test
mov
sub
fisubrl
insl
cmp
xchg
js
sbb
xchg
and
or
std
js
aaa
cmpsb
dec
lcall
push
xor
or
stc
sub
jo
jnp
in
out
mov
jp
rcl
popf
jno
mov
dec
in
pop
xorl
cwtl
les
icebp
jecxz
xchg
cld
pandn
fwait
pushf
or
inc
mov
push
jae
imul
inc
out
pop
dec
rcll
sbb
xchg
pop
sub
ja
sbb
hlt
xchg
mov
fcomps
test
ja
ljmp
rcl
fildl
inc
sub
fistpll
rcr
dec
dec
xor
fcoms
dec
mov
pop
dec
mov
push
inc
mov
test
dec
mov
push
loopne
cmp
sahf
adc
fisttpl
mov
inc
mov
xor
inc
lret
fisttpl
ja
push
mov
std
sbb
cmp
xor
xchg
fcmovbe
mov
test
xor
dec
adc
sbb
push
in
dec
mov
testb
outsl
sbb
push
mov
mov
push
jl
sbb
adc
pushf
outsb
sub
sub
push
mov
mov
sub
std
dec
or
pushf
int3
insl
lret
ret
fwait
pop
cmp
pushf
pop
cmpsl
mov
out
xor
es
clc
xchg
adc
mov
push
mov
inc
rcll
xor
sub
xor
stc
jmp
xor
bound
dec
fstpt
inc
psrlq
dec
sti
or
mov
xor
sbb
scas
or
stos
cmp
mov
push
int
out
xor
pushw
loope
pop
inc
xchg
pushf
and
adc
push
and
in
mov
das
xchg
push
push
bound
jl
xchg
fnsetpm(287
aam
jge
pop
and
nop
mov
xchg
sub
repnz
insl
adc
stos
mov
mov
scas
outsb
mov
jmp
lods
fildl
inc
push
rolb
sub
movsb
bound
push
into
sti
dec
lock
jge
int3
mov
das
sarl
inc
cli
fistl
ficomps
int3
lods
xor
loop
xor
hlt
lds
inc
mov
bound
out
jb
and
int3
mov
jp
clc
scas
sbb
fisubrs
loop
repz
insb
fwait
shrb
std
fcompl
cmp
lods
ss
mov
pop
sub
mov
lods
and
call
jbe
rclb
or
jb
fcomps
cmp
mov
mov
nop
xor
mov
and
pop
sbb
in
xlat
rcll
test
loopne
cld
xchg
or
and
in
arpl
sbb
arpl
arpl
je
repnz
push
cmp
adc
dec
dec
ja
pop
popa
js
xchg
inc
jne
xlat
dec
scas
cmp
mov
sub
xchg
jle
stos
adc
add
sub
push
leave
scas
inc
cmpsl
fimull
sbb
rcrl
pop
xor
jnp
pop
fwait
pusha
icebp
lods
mov
adc
and
orl
lods
sub
cmp
add
les
push
push
ds
je
out
call
dec
xor
push
imul
out
xor
leave
push
in
aaa
dec
or
push
pop
mov
nop
dec
push
mov
divl
mov
ss
xchg
mov
dec
sub
inc
adc
sti
mov
scas
push
jo
xchg
and
shlb
fnstenv
sti
dec
in
imul
xchg
jb
mov
mov
sti
outsl
test
dec
dec
xchg
push
dec
cli
fmull
dec
inc
in
ja
rorb
xor
ljmp
pop
es
cmp
clts
das
ja
sub
mov
xchg
cltd
cmp
add
in
cltd
push
lret
or
daa
insl
sub
es
jle
push
test
stc
pop
mov
ss
fwait
push
outsl
xchg
cmp
xlat
push
bound
jb
cmp
pop
mov
jno
je
and
sbb
flds
adc
cmp
mov
fsubp
cmp
outsb
test
mov
pop
int3
leave
out
sbb
or
push
dec
sub
mov
or
cmp
jg
mov
add
xchg
in
sbb
es
mov
sbb
push
mov
sti
test
imul
pop
push
fildl
imul
shrl
mov
aad
iret
or
sbb
loop
mov
mov
xor
xchg
or
jl
adc
push
data16
out
adc
rcr
std
aad
pop
xor
out
test
xor
ljmp
pop
xchg
xor
push
dec
aad
jae
pushf
dec
shlb
rcr
xor
xchg
mov
fwait
or
paddusw
xor
sti
push
aad
lods
int
cli
pusha
in
mov
inc
jae
movsb
cld
adc
and
dec
sbb
adc
adc
push
jl
jns
insl
loope
jae
cmp
and
or
pop
ss
insb
sbb
js
and
inc
bound
les
jo
jg
mov
call
and
cwtl
outsl
jo
add
enter
popf
push
mov
fs
push
cmp
inc
ljmp
ud2
adc
jns
pop
jle
out
cli
push
repz
or
jns
mov
jge
and
daa
iret
cmc
mov
mov
cwtl
sbb
lret
jmp
push
mov
adc
daa
stos
and
inc
cmc
cmpb
adc
scas
div
movsl
shl
ret
sbbb
pop
cwtl
mov
nop
add
scas
cmc
inc
xor
ss
stc
fdivs
sub
pop
shlb
mov
es
mov
ds
push
jo
xor
or
cmp
sbb
enter
mov
add
out
mov
lret
inc
sbb
mull
pop
repz
dec
push
mov
in
movsb
push
inc
test
bound
call
xor
or
repnz
cmp
push
enter
pop
subl
out
fdiv
mull
and
es
sub
test
adc
jg
or
inc
xor
jnp
subl
adc
jle
push
insb
hlt
cmc
xor
mov
cmpsl
daa
fcomps
imul
jl
cmp
cmpsl
push
push
lods
sbb
out
dec
lret
fcoml
sbb
xor
cmc
or
stc
and
fs
cli
ret
orb
int
push
inc
add
outsb
lea
add
adc
cmp
pop
rclb
das
pop
cwtl
or
mov
push
adc
push
inc
cli
and
push
insl
sub
sbb
pushf
pop
ss
lret
push
call
and
jmp
xlat
xor
inc
inc
fwait
negb
ss
cmp
rolb
inc
dec
mov
movsl
or
xor
dec
cltd
bound
cmp
pusha
inc
sub
push
sbb
push
dec
pop
push
inc
inc
push
repz
pop
hlt
bound
test
jno
cmp
jp
stos
sub
ds
jecxz
pop
xchg
dec
fucomi
push
jno
or
sarb
lods
push
xor
adcb
cli
aas
mov
andb
sub
loop
fwait
test
insb
adcb
in
pop
mov
gs
scas
push
mov
or
repz
sbb
xchg
xchg
dec
mov
dec
inc
dec
lea
mov
cmp
dec
test
sbb
mov
stos
adc
fistpll
enter
ds
outsl
dec
jns
or
enter
dec
repnz
scas
inc
cmp
push
cld
bound
adc
dec
push
push
mov
sbb
stc
add
and
cli
pusha
sub
xor
and
pop
dec
sub
xorl
sbb
loope
lahf
loopne
sub
fnsave
rclb
dec
lods
and
mov
stos
lods
int3
or
cmp
jns
fdivs
cld
shlb
add
mov
xchg
or
pop
lret
clc
mov
push
xchg
iret
add
sbb
cli
sbb
iret
mov
in
sbb
lcall
push
add
lock
push
pushf
mov
adc
mov
ja
scas
imul
pop
orps
bound
cmp
jp
sbb
push
cmpsl
ljmp
xchg
push
lret
fidivrl
adc
push
xchg
dec
repnz
enter
scas
cmp
sti
cmp
push
dec
dec
cmp
adc
cmp
sbb
dec
mov
adc
jecxz
push
sub
sti
mov
sarl
adc
xor
icebp
jbe
jmp
ss
sbb
cwtl
push
sub
mov
mov
cmp
jbe
jmp
ss
iret
leave
push
and
ror
fcoms
jmp
dec
rcrl
lret
nop
pop
fistl
ss
pop
or
sti
dec
adc
fwait
push
sbb
or
mov
xchg
sub
lret
adc
and
jb
sub
cmovp
roll
rorb
pop
lcall
xor
mov
scas
fdivp
fistl
sub
or
mov
adc
cmp
pop
mov
push
es
ljmp
xlat
mov
sar
pop
mov
sbb
add
inc
adc
mov
xlat
stos
cmp
sub
adc
hlt
sbb
cmp
xlat
stos
bndldx
xchg
test
push
push
adc
sub
inc
xlat
imul
xlat
push
cmp
dec
add
das
inc
dec
cmpsb
xlat
cwtl
sbb
cmp
mov
jns
aaa
jg
sbb
mov
push
jg
arpl
push
xlat
dec
sbb
cmp
push
xor
or
push
adc
dec
dec
pop
sbb
and
in
adc
sub
inc
xlat
sub
dec
sbb
dec
dec
not
mov
push
add
lahf
shrd
out
sahf
mov
iret
or
pusha
push
stos
popl
mov
mov
inc
lds
shl
dec
push
es
lret
inc
xor
mov
and
sbb
mov
jnp
mov
mov
sbb
mov
stc
xor
push
loop
mov
mov
jmp
push
xchg
std
mov
mov
sti
js,pn
in
xor
mov
jne
jnp
lock
inc
sbb
push
outsl
cmp
sbb
test
out
sub
insb
out
dec
cmpsl
lods
jmp
cltd
and
pop
cltd
add
cs
scas
mov
daa
rclb
and
inc
add
add
stos
outsl
ret
jmp
jmp
mov
push
xchg
jae
ret
xor
mov
sub
jae
jecxz
andb
mov
push
dec
pop
mov
pop
pop
adc
or
sbb
and
mov
pusha
mov
sbb
ss
cmp
out
jns
add
adc
cltd
fdivs
pop
xchg
adc
push
sub
insl
pop
cmp
rcrb
xorb
pusha
add
fildll
cs
andps
pop
mov
ror
shr
mov
add
xchg
mov
rolb
in
push
icebp
sbb
pop
mov
in
aaa
sub
lods
cmpsl
xchg
mov
xchg
cmp
jl
dec
and
ss
pop
or
jecxz
jmp
xlat
pop
shl
icebp
addr16
pop
lret
cmp
cmpsl
jnp
push
pop
add
jmp
or
test
lds
mov
xlat
sub
mov
imul
sbb
push
aaa
fiaddl
push
push
faddl
pop
jecxz
mov
ret
inc
cs
xor
mov
stos
dec
leave
mov
jo
nop
mov
sbb
ret
fisubs
dec
in
push
mov
adc
fistps
mov
mov
lock
ret
mov
sub
enter
les
andl
dec
mov
push
push
leave
mov
push
fwait
sub
fstl
sbb
inc
fwait
cmp
add
cmp
cmp
xchg
mov
dec
imul
scas
mov
sbb
iret
cmp
cmp
pushf
adc
mov
sti
ficomps
rdmsr
push
adc
xchg
mov
xchg
add
and
loop
scas
mov
add
mov
iret
push
stos
call
sbb
leave
adc
xor
pop
sti
sub
pop
push
je
add
decl
insl
cmp
shl
je
pop
mov
mov
std
fimuls
int
insb
add
jnp
lcall
sbb
mov
int
es
jecxz
cmp
stos
lret
mov
adc
fisttpl
and
cmp
jmp
xor
cs
mov
sub
adc
ja
pop
enter
movl
xor
push
arpl
hlt
imul
test
aaa
mov
ja
sub
mov
xchg
pop
push
lret
dec
pop
push
pop
add
sbb
arpl
jmp
ljmp
add
and
icebp
push
pop
jge
int3
pop
mov
pop
or
pop
push
ds
mov
cmpsl
sub
mov
lret
imul
or
inc
dec
iret
rcrb
jmp
mov
cmp
dec
add
mov
fmulp
sub
jnp
jl
imul
sbb
pop
adc
idivb
int
lret
and
out
out
sbb
mov
or
dec
fwait
jbe
je
fdivrl
xor
inc
ret
retw
iret
pushf
add
inc
leave
sub
inc
inc
call
cmp
push
outsl
ds
mov
fcoms
cmpsl
mov
ja
enter
inc
mov
dec
lret
lods
xor
jp
jbe
sub
cwtl
mov
cmp
jg
imul
lods
rcrb
cltd
dec
loope
xor
mov
add
rcl
js
push
jno
cli
pop
xchg
or
add
aad
or
fwait
lahf
mov
std
fs
cmp
out
inc
xor
mov
inc
loop
xlat
cwtl
test
adc
cmp
mov
or
adc
outsl
sbb
xor
adc
lcall
xor
dec
out
js
subb
roll
cmc
mov
cwtl
cmc
or
pop
pop
inc
push
aas
push
dec
lret
rorb
orl
cmp
cmp
dec
jae
je
imul
mov
add
push
push
mov
adc
or
fxch
dec
xchg
lods
cltd
sti
push
jae
rcll
lret
cmc
into
xchg
dec
adc
or
mov
dec
jns
mov
lret
sbb
jbe
sahf
mov
jns
cmpsl
adc
and
adc
adc
sbb
ss
xor
pop
js
inc
ds
fisubl
xchg
xor
in
adc
les
sbb
out
mov
ret
xchg
sub
pushf
addr16
pushf
sbb
push
aad
outsl
jns
dec
dec
inc
push
cmpsl
pop
mov
stos
pop
add
xchg
xor
cltd
rclb
stos
pop
pusha
jecxz
jbe,pn
movsb
pop
pop
movl
push
fstpl
jl
pop
pop
or
mov
lahf
or
ds
adc
fucomi
and
out
pop
imul
out
or
in
movsl
or
and
lods
or
fisttpl
mov
sub
adc
xlat
jne
add
add
inc
je
out
xlat
mov
mov
cli
add
nop
sbb
mov
add
sbb
xor
sbb
rcll
push
dec
aas
push
sar
pop
or
mov
repz
sbb
es
lea
and
test
enter
adc
xchg
into
lods
and
mov
jp
jnp
jl
fldl
cmp
jnp
xchg
push
sti
inc
add
imul
cmp
cmp
clc
test
repz
xor
es
pop
dec
ss
mov
mov
mov
enter
cmc
sarl
aaa
jmp
test
mov
add
js
sbb
cmpsl
jne
repnz
sub
xor
jnp
arpl
mov
ret
cmp
sbb
mov
mov
mov
bound
or
cmp
ss
or
sub
js
or
dec
mov
xor
dec
repnz
cvtpi2ps
push
sti
or
add
mov
mulb
sbb
jmp
sub
lods
or
mov
dec
sbb
sbb
mov
sub
xchg
add
ss
mov
sub
jge
mov
mov
addl
inc
inc
pop
in
add
bound
data16
pop
jne
sub
mov
or
es
cmpsb
mov
dec
fwait
dec
and
scas
fs
popf
sub
dec
dec
ss
push
ficompl
mov
pop
dec
js
lret
or
inc
test
lahf
dec
decb
dec
sbb
and
pusha
aas
jmp
xchg
jnp
sbb
jns
cltd
ret
pop
jl
push
push
jnp
sbb
cmp
mov
mov
ds
mov
cmp
cmp
jp
xlat
lcall
jl
lahf
mov
into
xor
test
int
cltd
sbb
in
mov
sbb
add
add
xor
sarl
dec
aaa
imul
sti
add
xor
sti
sahf
push
sbb
sbb
dec
imul
mov
cmp
repnz
xchg
push
sub
ss
mov
sahf
inc
lahf
or
call
pop
mov
cmp
mov
js
xlat
sbb
out
ss
sub
xchg
inc
fistl
cmp
mov
and
imul
in
pop
jmp
mov
es
sbb
pop
xchg
insb
xor
cmp
xor
lcall
push
repz
mul
jp
cltd
mov
mov
jnp
out
sub
sbb
mov
inc
push
add
pop
cmp
adc
cmp
adc
out
xorb
push
in
popf
sbb
xchg
cmp
inc
sbb
pop
fistpl
push
lahf
fs
lock
in
jo
mov
push
cmc
mov
jo
mov
sbb
cmp
mov
js
addr16
or
pusha
lcall
pop
fwait
push
jnp
sti
scas
add
loop
adc
ret
std
enter
dec
adc
and
add
adc
jp
push
xchg
orb
push
incl
dec
or
clc
sbb
outsl
movsb
add
mov
adc
jo
xchg
sahf
add
push
jbe
in
jge
sbb
sub
out
sbb
loop
add
pop
int
ficompl
cli
in
sbb
jnp
mov
test
xor
dec
sub
out
xchg
push
sub
sbb
ret
lcall
lcall
ret
mov
push
arpl
dec
jno
fwait
sti
jle
pop
cwtl
lods
mov
sbb
jno
xor
push
fwait
ss
push
rcr
leave
mov
call
push
mov
fstpt
bound
mov
mov
insl
int3
mov
sub
imul
adc
inc
or
pop
out
add
mov
jb
movsl
and
sbb
sub
decl
mov
out
fnstenv
inc
push
sbb
push
sub
inc
sbb
push
or
fsubrl
daa
insb
xor
xor
pop
pushf
mov
xor
inc
por
jg
mov
andl
adc
jmp
pop
jge
ret
cmp
sbb
jl
xor
sub
sub
repnz
rcrb
xchg
pop
sti
cmp
inc
stos
lahf
mov
mov
out
or
fwait
jnp,pn
cmc
xlat
dec
cmp
adc
cmp
jo
fwait
jno
aad
mov
fwait
mov
test
push
or
cmp
movsl
rcl
fisttpl
sarb
xchg
cltd
push
test
add
dec
mov
inc
stc
fisttpll
test
sar
and
clc
add
sbb
jnp
sbb
call
call
dec
lret
fcoms
mov
sub
dec
fcmovne
clts
out
adc
sbb
mov
pushf
cmc
addr16
or
mov
dec
fldl
inc
movsl
inc
mov
test
mov
arpl
cmp
data16
fmul
xchg
test
sti
dec
jmp
insb
sub
dec
es
add
sbb
sbb
and
pop
push
sbb
imul
fisubrs
lahf
out
mov
push
or
fldt
xchg
adc
sub
and
rcll
xor
add
out
loopne
int3
aam
pusha
pop
sub
adc
sbb
insl
and
and
mov
js
shl
jecxz
cmp
adcl
arpl
mov
bound
cmp
cmp
sub
icebp
sub
dec
mov
cmp
sub
push
cli
stos
xlat
pop
and
lods
movq
cli
mov
je
sub
sub
fstpt
gs
mov
jno
std
ss
in
lahf
pop
inc
pop
mov
xor
dec
mov
mov
jno
das
mov
cmp
loop
stos
xor
or
aad
adc
ss
shrl
jmp
in
push
mov
jo
lcall
inc
cmp
idiv
push
shrb
fiadds
leave
sbb
mov
cld
mull
jb
push
adc
cmp
sub
fs
add
xor
mov
sahf
inc
pop
je
mov
ret
mov
lret
push
lock
pop
lds
pop
ss
xchg
jnp
inc
dec
js
adc
popf
movsl
and
jo
and
pop
lret
pushf
inc
or
lret
xor
and
outsb
sbb
lea
xor
mov
or
mov
pop
out
out
mov
imul
jmp
lods
lcall
in
jnp
pop
sbb
mov
xlat
mov
in
mov
imul
inc
adc
mov
mov
cmp
add
sbb
mov
mov
test
movsb
scas
shrl
push
stos
mov
inc
jl
lcall
mov
add
lcall
cli
sub
inc
mov
xorb
or
hlt
push
dec
dec
sbb
cltd
dec
cmc
jl
sub
cmp
out
xchg
dec
cmp
scas
movsb
jecxz
pop
and
clc
int
and
pop
ljmp
into
jg
xchg
fstps
outsl
aaa
cwtl
adc
xchg
pop
lahf
nop
mov
loopne
mov
fiaddl
lahf
jle
push
icebp
stos
das
push
cs
pop
adc
jecxz
hlt
adc
js
dec
loop
mov
mov
das
cmp
jmp
outsl
cmpsb
cld
insl
leave
int
ss
or
sarl
jae
gs
xchg
mov
call
cmpsl
jle
push
inc
add
lret
jmp
xlat
push
ret
cmp
push
and
sbb
cmp
nop
push
out
or
jmp
das
pushf
jb
pushf
int3
jnp
add
hlt
adc
lret
aam
rorb
cmp
movl
add
test
in
xor
xchg
ja
enter
pop
pop
pushf
sbb
mov
gs
out
ss
es
mov
rolb
push
clc
loopne
popf
js
xchg
inc
adcl
sbb
arpl
mov
push
xchg
dec
or
out
mov
xor
xchg
cld
cwtl
cmpsl
out
adc
xchg
inc
sbb
loope
aaa
data16
ss
sbb
and
fstps
mov
lods
pop
mov
inc
in
icebp
mov
gs
leave
or
or
inc
js
dec
scas
pushf
ds
mov
cmp
push
sahf
aam
rcll
jl
add
jo
and
xchg
dec
push
adc
pop
sbb
bound
lahf
push
adc
push
mov
or
cmp
push
ljmp
xor
mov
mov
sbb
cld
xchg
fs
push
xchg
cmp
fildl
je
roll
scas
pop
push
xor
fwait
push
insb
inc
shlb
shrl
xchg
add
mov
sahf
push
push
movsb
or
cld
sub
add
insb
in
outsb
jns
push
jnp
pop
jecxz
lcall
pushf
mov
jne
inc
cs
iret
jbe
mov
or
ljmp
insl
clc
dec
sti
loopne
mov
or
ljmp
adc
mov
es
iret
push
rorb
test
ds
or
shrb
shr
push
repnz
xchg
fadd
and
inc
fdivr
gs
int
je
sbb
mov
stos
pushf
sub
cmp
dec
inc
sub
jbe
adc
xor
insl
int
dec
shl
scas
add
xchg
xor
mov
xlat
xchg
dec
and
sbb
arpl
adc
mov
stc
shrb
out
or
pop
or
cmp
xor
and
mov
cmpsb
int3
cwtl
xchg
xor
mov
jns
xor
add
mov
pop
sbb
fcmovnb
inc
lea
out
mov
jmp
pop
xchg
pop
cmp
insl
and
rcrl
mov
add
fs
push
testb
bound
leave
xchg
int3
fsts
pop
neg
jbe
sarl
xor
movl
test
or
sub
call
jns
xor
dec
popa
lret
leave
xchg
pop
mov
xor
pop
sub
cmp
adc
sarb
in
or
repnz
imul
xchg
aas
add
scas
add
in
push
out
push
fsts
and
clc
pop
fsub
outsb
adc
pop
xor
xchg
sub
dec
sarl
out
fcom
mov
push
out
xor
mov
pop
je
les
rcr
sbb
cmp
call
test
sbb
dec
out
lea
xor
adc
arpl
xchg
mov
sub
mov
mov
and
sbb
decl
fs
fdivrs
and
fisubs
and
sub
lret
mov
cmp
sub
adc
stos
bound
aad
stc
pop
aam
push
sbb
mov
rorl
push
cmp
mov
std
jle
mov
mov
cmp
cmp
test
mov
sbb
and
mov
push
lret
xchg
jbe
call
xchg
ss
pop
mov
xor
dec
ljmp
xor
and
std
jb
xchg
fwait
pop
cmp
in
nop
das
mov
into
roll
sbb
pop
jnp
test
xor
imul
pop
in
stos
inc
out
xor
movb
cmpsl
inc
jl
pop
pusha
push
pop
mov
push
pusha
push
adc
ficompl
scas
loop
pop
popf
mov
push
mov
xor
clc
push
push
in
mov
xor
add
cmp
jns
int3
loop
popa
jp
add
dec
js
loopne
and
ror
push
dec
sbb
mov
popf
fnstenv
pop
imulb
xchg
repz
inc
loop
rolb
inc
lret
jl
or
lods
testl
cmp
or
mov
sub
adc
add
or
lcall
jne
cmpsl
fdivrp
fwait
lcall
adc
int
dec
lds
shrl
ret
mov
fidivs
push
dec
js
inc
and
or
xchg
cmp
mov
xor
mov
xchg
cmpb
shlb
scas
bound
push
jle
rcr
gs
push
out
mov
ss
movsb
cltd
arpl
adc
dec
xor
push
and
jne
mov
fdivrs
outsl
fiadds
das
add
xchg
adc
jmp
into
or
dec
iret
push
cmp
fdivrl
dec
or
lcall
pop
lds
mov
in
into
push
aas
push
outsl
push
jb
mov
dec
lods
or
push
and
xchg
push
js
subb
push
nop
push
add
and
pop
lods
sub
shlb
push
lods
pop
aam
inc
loope
outsb
jg
mov
adc
sub
inc
ja
jl
push
fdivrs
lods
add
lret
cmp
imul
push
aas
int
or
mov
mov
or
js
pop
cmp
adcb
daa
popa
std
add
cli
push
addl
cli
push
jl
xor
or
pusha
sub
push
in
dec
mov
rol
adc
out
mov
test
popf
cltd
in
dec
and
inc
jo
hlt
or
mov
add
jns
ret
pop
jo
stc
pop
cmp
loop
stos
lahf
mov
dec
sbb
out
scas
adc
mov
lret
stos
jle
fmulp
fbstp
push
shll
mov
subb
xor
xor
test
fs
mov
mov
dec
xchg
mov
mov
loop
sub
pusha
mov
mov
sbb
dec
mov
insb
sbb
push
xchg
push
clc
or
es
pop
fwait
inc
mov
lcall
mov
cltd
les
data16
mov
sbb
lock
gs
add
enter
cmp
fistl
jns
sub
aaa
fnstenv
dec
cmp
fistps
or
jno
pop
adc
lret
sti
add
cmpsl
mov
push
loop
lcall
aad
rorb
mov
xor
xchg
lret
mov
insb
push
stos
ficomps
ss
fsubr
out
mov
fidivl
sbb
fldt
fwait
es
fdivp
loop
mov
repnz
pop
dec
and
and
fdivrl
and
lea
loop
mulb
mov
js
imul
mov
ret
bnd
stos
mov
pop
and
pop
inc
mov
pop
adc
js
out
sub
inc
cmp
mov
sahf
adc
pop
clc
inc
jns
cmp
pop
pop
clc
push
ds
test
xor
shlb
movsb
cmpsl
fdivrs
pop
sbb
jne
aad
out
add
push
pop
clc
push
dec
test
cmpsl
lcall
shlb
add
shrb
out
into
das
pop
cltd
dec
cmp
mov
pop
repz
push
pop
fmull
rorl
repz
cld
test
jae
and
rorl
cmp
fiaddl
ljmp
pop
mov
ljmp
int
inc
mov
mov
in
cwtl
ja
insb
xchg
cmp
fsubrs
outsb
lods
ret
adc
push
pop
xlat
in
clc
pop
sbb
sbb
push
fwait
pop
and
hlt
or
in
inc
lods
adc
or
jne
mov
xor
mov
mov
pushf
aaa
add
shll
insl
xchg
cmp
xchg
pop
mov
sbb
test
inc
stc
dec
xlat
enter
mov
cmp
mov
push
or
shrl
ja
mov
lahf
shlb
pop
bound
outsl
mov
std
loop
mov
loope
nop
sub
pop
mov
adc
incb
cmp
push
imul
mov
inc
cmp
lods
xor
loop
cmp
mov
bound
addr16
shl
or
xorb
fistpl
testb
hlt
lcall
push
sub
ja
cmp
test
lea
ljmp
les
je
lret
insb
adc
incb
push
push
testb
pop
mov
sbb
neg
outsl
mov
shll
xor
pop
push
fidivrs
stos
hlt
ss
and
cli
push
mov
scas
fisttpl
mov
mov
mov
xor
xor
add
xchg
adc
pop
jb
cmp
mov
fs
and
jp
jl
xchg
mov
mov
push
pop
mov
pushf
mov
sub
fs
ret
adc
cmp
mov
call
stc
adc
test
es
push
mov
sub
test
lods
orb
add
xor
int
inc
lds
mov
xor
cmp
inc
fmull
clc
push
imul
fildll
lds
imul
jnp
inc
adc
sahf
push
sbb
ret
test
mov
dec
das
dec
sbb
mov
pop
push
inc
ja
lods
adc
out
mov
jp
std
jle
repz
popf
shlb
fdivp
iret
push
and
das
test
fadds
out
xor
dec
sbb
pop
push
mov
stos
mov
call
mov
enter
mov
xor
or
pop
pop
mov
jno
movsb
sub
jo
imul
leave
jle
or
insb
adc
dec
sbb
lds
aam
xor
xor
inc
ret
imul
xlat
fwait
dec
push
popl
push
insb
ja
imul
fists
and
inc
outsl
jo
jecxz
cmc
movsl
fimull
or
xor
push
call
pop
lds
push
push
lret
loop
insl
xor
lahf
fcoms
cwtl
dec
dec
fldenv
inc
stos
bound
test
add
sbb
insl
mov
push
mov
cmpsb
sbb
adc
push
adc
xchg
or
xchg
adc
sub
bound
movsl
jp
xor
les
add
mov
sub
push
add
xor
ja
rorl
mov
sbb
mov
imul
push
fs
dec
push
sub
xchg
mov
dec
ret
imul
push
cltd
jg
add
mov
push
test
or
aad
cli
inc
sbb
pop
push
rorl
jnp
sbb
bound
nop
inc
outsl
adc
jg
subl
xor
inc
enter
rcr
inc
adcl
dec
mov
push
pushf
aam
add
sbb
cwtl
jns
dec
mov
test
adc
movsb
neg
iret
dec
cli
add
test
pop
nop
arpl
xor
ret
ret
adc
jecxz
pop
xchg
cmp
lock
adc
sub
or
add
mov
out
into
mov
cmpsl
cmp
cmp
nop
clc
out
pop
cs
mov
jnp
inc
push
cwtl
fisttpl
mov
sbb
out
inc
outsb
cs
ljmp
dec
stc
fcom
hlt
or
xchg
pushf
mov
xchg
pop
enter
xchg
cli
mov
push
cmp
push
in
js
das
jmp
mov
subb
std
data16
or
fucomi
push
stc
sbb
push
sbb
mov
push
jnp
lock
sbb
sub
inc
cmp
pushl
es
push
stos
ss
shlb
sub
rcrl
fwait
rcr
fsubr
sbb
cli
icebp
mov
pop
mov
lahf
enter
nop
in
jns
inc
cmp
call
and
pop
xchg
push
push
mov
sbb
nop
or
movsb
and
mov
lret
subps
mov
inc
imul
cmc
loope
push
outsl
mul
pop
inc
dec
cmp
cmp
ds
lods
cs
mov
and
shrl
jo
sbb
add
aam
sub
pop
dec
shrl
cmp
mov
push
mov
mov
mov
and
xchg
sbb
imul
mov
sbb
sub
imul
mov
insb
movsb
mov
fistpl
bound
push
loope
mov
pop
fdivrs
je
xchg
cmp
outsb
das
cli
jne
sub
xchg
das
sub
push
mov
stc
push
ret
mov
mov
in
pop
mov
iret
fcmovnbe
cmp
loopne
aaa
in
push
scas
xor
mov
popl
loope
and
mov
test
aaa
sub
push
cltd
push
outsb
mov
add
cmp
lods
ljmp
mov
lret
cli
lret
and
in
dec
or
test
jge
xor
dec
or
dec
mov
aaa
into
xchg
outsl
ja
aas
xor
or
movsl
jb
push
cmp
xchg
add
mov
mov
cld
sub
mov
add
push
fdivr
mov
or
xchg
mov
cli
jl
fdivs
mov
int
orb
cld
aas
cli
popa
sub
sub
xchg
push
push
mov
inc
adc
cli
mov
cmp
push
cmp
xor
adc
inc
fisttps
mov
jae
lods
or
andb
rcrb
sub
xchg
jns
pop
lock
mov
stos
push
sbb
ja
jnp
pop
insb
jmp
sysenter
cmp
sbb
sbb
inc
push
dec
mov
sahf
imull
pop
mov
dec
pusha
xchg
fistpl
je
adc
or
fstps
lret
idivl
sbb
inc
arpl
dec
jmp
or
das
and
nop
mov
pop
mov
sahf
xchg
inc
out
clc
popa
fwait
icebp
mov
sub
sbb
sbb
inc
sbb
popf
adcb
addr16
stc
mov
lea
rolb
addr16
sub
sub
mov
cli
pop
add
insb
xor
ds
adc
xchg
push
inc
dec
arpl
xchg
imul
push
push
outsl
cmp
fsubl
test
or
bound
fidivs
ret
xor
lcall
mov
mov
push
mov
mov
pop
cmp
les
loope
sub
pop
sbb
roll
cwtl
ljmp
aas
aaa
push
and
ljmp
inc
leave
aad
adc
stos
sub
mov
mov
mov
clc
and
cwtl
aaa
cmpsl
pop
lods
sbb
outsb
mov
je
mov
add
ljmp
adc
xor
jmp
dec
aaa
test
je
ret
in
int
adc
outsl
dec
mov
add
lcall
stc
dec
mov
or
pop
mov
add
xlat
sub
ss
sti
or
iret
and
mov
xor
popf
push
jae
xor
inc
mov
cld
adc
inc
aaa
push
xchg
addr16
pop
popa
cmc
lock
add
mov
sub
scas
xor
inc
or
pop
or
adc
jl
pop
xlat
lcall
sbb
pusha
xlat
mov
cmp
adc
lods
inc
out
sbb
xor
ljmp
mov
and
out
add
fldt
xchg
lcall
sub
jnp
jmp
sub
sub
scas
clc
sbb
mov
lret
pshufw
test
clc
outsl
inc
lcall
and
stc
repz
adc
dec
into
push
xchg
mov
adc
jl
and
xor
mov
aam
sarl
push
aaa
sub
cmp
sbb
insb
rcrl
xlat
dec
popa
xor
dec
mov
cld
pop
push
adc
arpl
clc
pop
ss
mov
sbb
sbb
leave
testb
xchg
fildl
push
orb
pusha
in
xchg
cmpb
push
pop
dec
pushf
fisubs
jecxz
add
arpl
fs
adc
sub
and
stos
push
sbb
sti
outsl
pop
dec
data16
push
pop
out
dec
sub
dec
inc
mov
movsl
jo
sub
js
xor
mov
push
lahf
lret
and
and
xor
dec
sub
xor
push
mov
stc
jae
fistl
sbb
nop
and
cmp
add
add
dec
or
in
adc
xchg
sbb
mov
xchg
fistpll
call
adc
mov
jmp
jecxz
xor
movsb
icebp
mov
or
and
cmp
sarl
cmp
dec
insb
pusha
fsts
push
stos
jb
xchg
lret
loop
lods
or
fwait
dec
loop
mov
cmpsl
lcall
das
xchg
push
out
out
das
push
std
push
outsl
pusha
inc
clc
xchg
pushf
push
fisubrs
dec
push
pop
mov
ss
outsb
or
add
pop
test
dec
loopne
jae
loopne
hlt
in
call
cwtl
inc
sbb
pop
sub
adc
ficompl
mov
pop
je
aas
andl
xlat
sbb
bound
add
xchg
sbb
mov
les
rorl
push
pop
xchg
rorb
dec
sbb
jge
dec
scas
push
mov
add
xchg
cld
fwait
adc
ljmp
adc
bound
ss
add
mov
outsb
xor
ljmp
sbb
lods
rcll
in
xor
dec
bound
mov
lret
js
test
xchg
aam
mov
leave
xchg
je
hlt
or
adc
push
out
or
pop
lods
lods
dec
fxtract
push
and
imul
aaa
adc
cmp
xchg
mov
loopne
sub
bound
dec
dec
aas
adc
pusha
push
mov
jae
nop
ret
and
sbb
in
pop
dec
add
popa
sub
les
push
addl
cmp
mov
stos
fdiv
and
fildl
sbb
push
sub
bound
fmuls
ss
nop
dec
push
pop
test
push
fwait
jmp
mov
lock
out
inc
hlt
dec
xor
rclb
sti
adc
scas
loopne
jno
lahf
xchg
aaa
xor
cmp
rclb
inc
sub
pop
xor
fwait
addr16
pop
push
inc
adc
jp
inc
add
fimull
es
push
cmpsb
adc
fildll
push
or
faddl
aas
pop
adc
mov
dec
mov
mov
scas
pop
rcrb
fsubrs
sbb
adc
mov
add
scas
fs
mov
cmp
cmp
pop
test
xchg
cmp
cmpsl
data16
add
lods
sbb
pop
clc
movnti
and
pushf
sbb
push
cmp
movsb
mov
jmp
aaa
dec
lods
or
mov
and
xor
mov
daa
movl
addr16
cmp
adc
adc
das
mov
or
lret
and
data16
push
xchg
dec
dec
cmp
je
xchg
std
or
pop
dec
or
stc
inc
sub
jg
mov
stos
lahf
outsl
je
fsubs
pop
pop
xlat
incb
xchg
xor
mov
das
or
fstpt
mov
fdivp
or
into
pop
mov
bound
jbe
xlat
push
icebp
push
xchg
aaa
mov
fstl
jbe
cmpb
or
inc
leave
or
lods
push
lods
sub
movsl
push
repz
add
gs
xchg
movsl
dec
xchg
mov
sub
and
popf
loopne
sbb
xchg
movsb
out
cmp
rcl
pop
xlat
mov
out
cmpb
push
inc
imul
out
push
es
push
push
push
les
lret
mov
cmpsl
dec
push
enter
cs
xchg
insb
repz
jnp
xor
pushf
push
andb
mov
lahf
aaa
add
movsl
sbb
pushl
fstl
sbb
or
cmp
dec
cmc
aad
push
mov
jl
pop
lahf
shrb
push
sbb
dec
ret
repz
out
adc
mov
add
lods
adc
jmp
fdivrs
pop
cmp
jnp
push
aaa
jge
jnp
scas
int
push
popa
xchg
lahf
cltd
pop
sub
arpl
mov
sub
and
cmp
cmp
mov
sbb
push
imul
scas
push
scas
bound
adc
mov
xchg
adc
add
jnp
ret
mov
xor
pushf
jne
dec
mov
mov
int3
cmpsl
das
mov
inc
or
xchg
lds
fwait
xor
ja
sbb
repz
shrl
dec
push
xor
sbb
popa
mov
xchg
lret
daa
xchg
cmc
movups
dec
or
adc
xor
sbb
cwtl
cs
pop
mov
icebp
push
push
sub
ja
stos
mov
fwait
movsb
js
inc
add
idivl
mov
jp
das
xchg
aad
rcll
dec
add
clc
mov
jb
stos
sbb
push
cmc
and
adc
lret
dec
dec
aas
fwait
xor
leave
sbb
jl
add
scas
test
and
jbe
lahf
cli
dec
cmpsl
adc
inc
ljmp
rep
jmp
subl
mov
sbb
sbb
adc
aad
cmp
cli
jl
dec
pusha
pop
das
cld
xchg
hlt
mov
js
das
xlat
jnp
push
add
fnsave
push
test
mov
outsl
mov
lret
mov
inc
leave
xor
mov
lds
xchg
cmp
jne
sbb
aas
rcll
inc
sar
adc
xor
push
or
cmp
popa
mov
mov
jb
inc
sub
clc
mov
adc
es
inc
mov
dec
mov
inc
pop
pop
inc
insb
adcl
enter
lret
aas
nop/reserved
orb
jp
sbb
mov
and
xor
inc
pop
adc
sahf
mov
dec
and
adc
lcall
jle
sbb
pop
decl
xor
push
adc
mov
sbb
or
inc
and
lret
pop
push
pop
sbb
lds
push
sbb
xlat
mov
pop
sahf
sbb
cmp
aas
xor
pop
fxch
mov
rcrl
les
dec
in
mov
jp
or
xor
xchg
popa
pop
nop
inc
fisubrs
push
pop
and
pop
cmp
cmp
inc
xor
push
jno
das
dec
inc
pop
test
dec
sbb
push
sti
xor
inc
lret
xor
mov
jecxz
les
incl
aas
sbb
mov
mov
sub
mov
push
cs
mov
fdivl
sbbb
pop
pop
xchg
dec
xchg
dec
and
or
mov
sub
inc
jns
loopne
xor
or
jmp
xor
lcall
dec
shlb
dec
cmp
fs
add
scas
push
mov
lret
or
leave
pop
lret
in
push
dec
mov
mov
push
xchg
cmp
add
jo
pop
xor
mov
inc
cmp
fcoms
dec
push
add
scas
das
xlat
pop
repz
pusha
fs
and
repnz
xor
lds
and
outsb
testb
insb
decb
ret
mov
outsl
jae
sar
pop
inc
mov
push
in
dec
js
ss
movsb
cmp
add
pop
mov
out
pop
rorl
push
cs
and
fadds
sub
push
cltd
mov
jp
adc
les
adc
adc
and
cs
mov
dec
test
popa
loope
cwtl
sti
mov
or
shrl
pop
xor
inc
cmp
sarl
push
jp
gs
fsubrs
adcl
pop
and
cmp
outsl
sbb
pop
sbb
rolb
xlat
fidivrs
shll
mov
iret
mov
pop
fstpl
cmp
push
xchg
push
insl
fwait
sub
dec
in
imul
sub
push
or
jle
mov
push
pusha
fldt
adc
or
pop
stos
sahf
rcll
popa
outsb
sti
or
sbb
test
adc
out
adc
mov
out
mov
lcall
xor
ficomps
adc
add
sbb
jb
clc
pop
xor
adc
insl
sub
dec
pushf
outsl
lods
imul
rcrl
dec
push
fldt
sbb
sbb
jne
jle
lret
inc
mov
pop
xchg
add
dec
cmp
and
inc
mov
fbld
or
inc
ror
inc
xchg
bound
sub
sti
ja
sti
mov
or
inc
dec
xchg
and
adc
lret
adc
das
divb
dec
pop
mov
int
mov
mov
pop
lahf
push
mov
xchg
scas
xor
mov
adc
add
push
sub
push
push
ds
sub
push
lret
add
inc
out
mov
pop
jnp
lret
fwait
lods
mov
out
pop
and
ret
out
add
xchg
repz
lret
xchg
dec
and
lods
and
and
pop
cwtl
repnz
mov
xor
outsl
push
mov
add
fldenv
adc
lods
fbld
sbb
sbb
cltd
push
iret
cmp
popf
decl
lret
cmp
add
aad
inc
cmpsl
into
jg
insb
lahf
or
bound
xchg
push
cmp
and
add
dec
out
and
cmp
ret
cli
mov
adc
xlat
aaa
out
xor
cmc
cmp
cld
std
sti
dec
or
push
insb
and
cmpsb
cmp
outsl
adc
inc
imul
adc
add
adc
stc
mov
jb
jno
adc
mov
mov
mov
push
pop
inc
sub
loop
into
cli
ss
orl
push
mov
popa
inc
mov
cmp
jmp
test
mov
mov
cmp
pop
cmpsl
fbstp
cmp
jl
lods
aaa
sub
xchg
add
das
inc
mov
nop
ss
adc
xchg
push
mov
xchg
fistps
xor
and
ljmp
lock
cltd
push
and
icebp
adc
sbb
daa
or
stc
sbb
cmp
ljmp
and
add
daa
sub
or
add
mov
dec
dec
dec
mov
and
pusha
mov
and
fists
or
mov
ficomps
orb
jo
sub
and
cmp
fcoms
repz
pop
out
push
jmp
or
popf
test
xchg
or
in
or
mov
jle
pop
push
adc
test
inc
lret
jle
jle
call
cmp
sub
or
out
xor
inc
outsb
xor
push
hlt
dec
movsb
fdivrl
bound
push
xor
mov
and
mov
pop
addb
outsl
cwtl
int3
adc
scas
mov
sahf
scas
fimuls
pop
jb
addl
inc
rcrb
xchg
pushf
lret
sbb
sbb
adc
outsb
dec
lods
out
imul
inc
stos
pop
jo
cmp
mov
jp
push
cmp
xor
ret
pusha
inc
xor
dec
ficoml
fs
xor
dec
xchg
fcomi
or
ror
or
dec
int3
push
cwtl
shll
call
gs
pop
jle
stos
xchg
inc
mov
mov
jle
pop
inc
sbb
mov
sub
jnp,pt
xlat
pop
cmp
lods
mov
in
dec
adc
ljmp
je
in
xchg
dec
pop
jno
push
push
roll
mov
xchg
mov
cmp
xchg
push
mov
push
ds
sbb
mov
int3
push
outsl
js
lcall
shrb
add
xor
cmp
pop
pop
mov
int
cmovne
jno
mov
shl
cli
adc
shlb
dec
sub
roll
xlat
sbb
cmp
dec
mov
push
nop
or
cmp
ret
sbb
inc
xchg
mov
xor
lcall
icebp
sti
push
cltd
inc
and
xchg
xchg
mov
or
insl
or
ljmp
rclb
dec
loope
fiadds
pop
inc
test
xor
pop
adc
adc
mov
cmp
pop
and
fstl
cmp
loope
adc
lret
xor
bound
bound
dec
test
mov
rorb
xchg
adc
out
and
push
icebp
shr
sbb
js
cmpsl
test
pop
adc
inc
stc
stc
ss
rol
xchg
fcomps
out
xchg
lret
in
xchg
pop
out
jbe
xor
pop
std
pop
rcrl
pop
push
mov
xchg
fsubp
sub
mov
movsb
adcb
xchg
lea
jl
mov
add
loop
bound
dec
cltd
inc
or
stos
es
orb
loop
dec
or
mov
push
cmp
xchg
mov
adc
mov
dec
test
sbb
sub
mov
out
add
pop
vmovdqu
lahf
fmuls
addr16
adc
cmp
push
subl
inc
int3
mov
push
arpl
pusha
dec
arpl
and
leave
pushl
subps
ja
stc
mov
hlt
pop
inc
ljmp
sub
lret
icebp
in
sbb
sti
push
loop
insb
btc
cmp
ror
xor
add
cmc
dec
aas
or
pusha
fisubrs
xor
pmuludq
xor
cmp
subb
jb
xor
cmp
popa
mov
add
fucomp
fidivs
add
dec
dec
dec
out
enter
mov
in
push
fsts
push
aad
xorl
shrb
dec
mov
push
pusha
inc
or
dec
cs
sbb
and
ds
push
jns
ljmp
inc
xor
sti
bound
subb
jne
fistpl
sbb
lea
nop
xadd
push
xor
jl
pop
cli
fbstp
add
jp
sbb
adc
inc
js
sub
ret
vpsubd
fwait
push
pop
push
dec
sub
lret
and
dec
dec
cmp
push
xchg
adc
sarl
cmp
loopne
enter
jmp
test
and
add
add
fcmovu
mov
pop
cwtl
xchg
ss
and
aaa
ret
jp
mov
xchg
mov
pop
mov
stc
daa
adc
aas
sub
jmp
jmp
inc
push
mov
and
inc
ds
leave
rclb
aas
cmp
xchg
repnz
imul
fisubrs
out
fs
mov
xchg
cmp
loop
mov
sbb
push
in
mov
xor
add
idivl
lcall
test
into
pop
cmpsb
imul
and
push
pusha
pop
sub
data16
enter
jecxz
inc
push
sbb
pop
push
inc
es
push
dec
aam
je
pop
add
xchg
mov
dec
rcl
fistl
nop
mov
jno
test
cmp
mov
cwtl
fs
loop
fnstenv
dec
dec
cmp
dec
push
sti
lahf
pop
mov
das
mov
das
xor
mov
nop
sub
shll
push
pop
je
jmp
cmpsb
pop
sbb
gs
cmp
xchg
mov
addb
pop
rol
or
xor
aas
addr16
inc
mov
inc
sub
cmp
ljmp
fdivr
push
cmpb
add
and
sbb
mov
pop
cmp
out
clc
inc
movsb
xchg
cwtl
push
shll
rorb
in
dec
or
lret
xor
ljmp
push
mov
mov
pop
push
jmp
mov
dec
fistl
mov
mov
sbb
leave
dec
cmp
push
cmp
fisttpll
lea
inc
dec
sbb
xlat
or
jmp
repz
loope
sbb
and
popf
aam
sti
lahf
pop
push
rcrb
push
xchg
add
ja
adc
test
mov
push
roll
repz
inc
js
leave
and
stc
das
mov
cmp
jbe
sub
adc
fistps
and
jp
push
jmp
push
insl
repnz
cld
adc
mov
sbb
and
or
aas
pop
sbb
leave
cwtl
xor
dec
inc
dec
mov
imul
std
xor
fdivl
pop
or
cltd
inc
jae
cmp
in
pop
push
add
add
adc
cli
decl
cs
sti
dec
cmc
push
imul
dec
cmp
cwtl
stc
out
data16
push
or
jg
push
xorb
fimuls
ud1
ret
addl
test
xchg
xchg
pop
arpl
cmp
and
loop
sbbl
dec
iret
stos
iret
fstpl
dec
sbb
cmp
mov
jae
fcomi
fldl
je
pop
xor
jo
aad
sbb
add
xchg
xlat
or
je
stos
fadds
xchg
dec
jecxz
fisttps
stos
sub
add
leave
mov
ss
pop
mov
jg
xor
and
cld
adc
pop
adc
or
int3
stos
outsl
dec
dec
sbb
es
ret
scas
or
mov
adc
dec
mov
in
movsb
push
sub
stos
addr16
hlt
inc
movsb
out
add
es
repnz
cmp
stos
sbb
into
inc
push
lret
xchg
sbb
sbb
aaa
xchg
iret
dec
add
insl
aaa
fistps
sahf
push
push
rclb
outsl
adc
pop
in
and
adc
sbb
dec
sti
dec
je
mov
mov
mov
cltd
mov
push
xchg
fistps
add
insl
shrb
bound
sti
pop
mov
push
insb
push
loopne
leave
sub
inc
pop
push
rolb
jmp
in
shll
iret
dec
jno
jne
or
dec
pop
xchg
dec
dec
push
dec
add
xor
dec
mov
sbb
cmp
ss
das
inc
xchg
or
xchg
sbb
or
movsb
adc
cwtl
lcall
push
xchg
arpl
dec
adc
sbb
sbb
rcll
std
fldl2e
orl
push
je
xor
sbb
outsl
add
fwait
xlat
dec
sub
mov
mov
decb
out
jne
mov
dec
sbb
sbb
mov
inc
adc
xchg
or
stos
loop
adc
push
xor
lahf
pop
pop
pop
jmp
xor
jnp
push
cmp
rolb
add
fdivrs
cmp
repnz
movsb
and
test
das
lcall
jl
fxch
pop
cmp
add
sub
in
rcrl
fistl
loop
dec
arpl
xchg
xchg
add
stos
test
pcmpgtb
or
adc
cmp
jno
testl
mov
lahf
mov
in
add
adc
mov
loop
push
pop
lcall
push
xor
lret
clc
cmp
shrl
xchg
sub
aaa
xchg
xor
cmp
inc
push
sbb
loope
rcr
push
loopne
push
push
sbb
cwtl
cmp
sbb
push
pop
cmp
sub
and
pop
and
arpl
sbb
pop
pop
mov
dec
iret
dec
cmpsl
push
sub
jo
xchg
imul
sbb
es
mov
scas
and
cwtl
inc
out
test
stos
outsb
and
cli
ss
push
fwait
mov
sbb
sti
arpl
das
push
and
cmp
lret
subl
cmpsl
mov
mov
inc
aaa
adc
cld
pop
mov
xchg
out
dec
out
pop
sub
inc
push
lds
pop
jg
push
push
rcrb
out
push
push
into
push
add
cltd
or
mov
cmp
repnz
push
xlat
stc
sbb
lods
or
por
inc
mov
das
jmp
sahf
movsw
mov
mov
outsb
jae
aaa
idiv
mov
pushl
adc
mov
fsubs
int
and
sbb
aas
or
into
mov
dec
movaps
jecxz
lret
sti
cmp
fistl
adc
nop
es
outsb
mov
adc
in
clc
sub
lret
aad
cmp
notl
pop
outsb
push
popa
sbb
arpl
mov
aaa
jbe
push
sbb
xchg
add
clc
lds
xchg
clc
jbe
push
imul
push
inc
jl
sbb
sbb
push
jo
out
inc
ss
sub
cmp
decb
add
fldcw
pop
sbb
shrl
mov
scas
vdivss
imul
pop
cmp
xchg
insl
ss
xor
fists
mov
mov
sub
dec
add
mov
or
xor
stos
jb
push
sar
or
shll
push
push
lret
dec
jl
xor
dec
dec
imul
sarl
mov
roll
mov
or
dec
jmp
xor
outsl
adc
push
push
jl
mov
lahf
dec
or
hlt
fldl
push
pop
test
lret
push
cmp
mov
push
cmp
dec
jmp
lahf
inc
ss
xchg
sbb
add
dec
dec
insb
mov
push
push
outsl
decl
mov
movsb
lret
push
les
aad
xchg
mov
mov
ja
sbb
mov
sti
jns
jp
pop
in
mov
mov
aas
lret
cmp
mov
or
cmp
sub
inc
push
sbb
inc
mov
fistpl
push
push
testb
mov
cmp
je
aam
add
and
lahf
rorl
mov
fsubl
pop
cli
pop
jp
mov
ss
xor
fbld
and
aam
dec
mov
lock
jbe
lock
mov
popf
out
addr16
dec
jno
cmp
sti
incb
xor
mov
pop
cmp
mov
mov
rep
lret
nop
aam
mov
pop
ret
and
inc
sbb
mov
xlat
xor
dec
xchg
gs
out
dec
std
jbe
xor
xor
mov
fidivl
push
cmpsl
xor
inc
push
inc
ja
sti
xor
adc
jae
fistpl
and
es
mov
jmp
xor
xor
insb
dec
cmp
or
jnp
lds
subb
mov
mov
jmp
push
push
cmp
cmp
or
jge
sbb
mov
mov
jnp
rcrb
ret
inc
in
fwait
clc
mov
ficomps
das
xor
fadds
arpl
ficomps
jbe
jge
adc
and
jecxz
daa
push
dec
mov
mov
inc
dec
lods
cmp
inc
imul
xlat
ds
xor
leave
test
imull
add
movsl
dec
fidivrl
push
add
out
cs
das
or
aas
rcrl
loopne
mov
dec
add
cmp
mov
inc
aad
dec
pusha
add
bound
or
or
repnz
or
add
jo
nop
mov
sbb
jo
ljmp
jne
movsl
call
inc
fistpl
bound
xor
sub
out
or
xor
das
fisubrl
jnp
push
negb
pusha
stc
fildl
adc
mov
mov
adc
ljmp
push
xchg
pop
push
bound
add
lahf
cli
mov
sbb
xchg
aam
es
pop
ss
push
xor
fwait
rclb
testl
pop
cli
inc
adc
pop
popf
stos
mov
pop
push
sti
mov
push
mov
lahf
das
fsubrp
outsb
ret
push
dec
sbb
jae
repz
cltd
jo
pop
loope
adc
pop
dec
add
xchg
fisttpll
push
cmp
pop
xor
inc
pop
imull
sbb
hlt
dec
lods
push
in
ss
in
or
mov
ljmp
pop
sbb
push
js
pop
shr
mov
push
cmp
adc
addb
decb
jmp
test
stc
test
jmp
sbb
inc
jno
push
dec
cmc
or
js
mov
xlat
push
sarb
adc
sub
imul
and
rolb
bound
dec
add
lods
jecxz
xchg
sub
pop
dec
sbb
jmp
jle
add
push
inc
cmp
ret
xor
and
mov
insl
or
cltd
scas
sbb
mov
mov
das
inc
jns
inc
mov
hlt
sub
pop
inc
pushf
pop
mov
test
fcoml
xchg
xchg
or
cwtl
mov
mov
sti
or
in
cmp
dec
add
xor
push
orl
vminpd
adc
inc
or
loopne
pavgw
jbe
xchg
pop
test
adc
sub
cmp
xor
push
pop
sub
push
and
mov
dec
sti
sbb
fnstsw
adc
add
div
das
int3
pop
xor
cmpsl
xor
test
mov
lea
mov
inc
pop
cli
cmp
stos
add
adc
inc
cmp
cs
cmpsl
push
sub
cltd
and
and
jno
lods
sahf
int3
mov
loop
fcoms
arpl
inc
popa
sub
jno
xor
out
loopne
cwtl
cmp
ljmp
sbb
mov
mov
outsb
mov
push
out
sub
pop
inc
shrb
cmp
xchg
imul
jae
dec
add
cltd
push
sub
sbb
cwtl
inc
push
test
push
cmp
cltd
sub
xlat
pop
rorl
mov
dec
sbb
mov
es
imul
xor
js
aas
sbb
sbb
mov
scas
rcll
adc
movsb
insl
int3
push
mov
xchg
and
xor
ret
outsl
bound
lods
and
mov
daa
xchg
subb
fisubrs
or
shlb
pop
push
lret
out
jmp
xor
enter
dec
push
pop
fdivr
mov
adc
pop
mov
jge
jns
add
fadds
mov
inc
xlat
pusha
dec
adc
sub
ret
sub
ja
jp
mov
addb
mov
push
dec
cmp
mov
test
inc
xchg
push
call
jns
je
cmp
mov
arpl
lret
ret
mov
or
push
jle
repz
or
scas
repz
xor
in
lods
jle
sub
cmp
sub
or
sub
lcall
ficoml
fwait
lods
push
pusha
dec
shll
dec
push
push
sbb
sbb
cmp
out
push
das
out
rcrl
adc
mov
adc
xchg
imul
pop
xor
xor
nop
dec
loope
lret
stc
push
idivl
sbb
lret
stos
rcrl
addb
mov
dec
cmp
incb
push
sbb
lods
jnp
inc
xchg
inc
adc
fisttpl
sbb
sub
inc
pusha
pop
testl
mov
pop
pop
sbb
dec
dec
fldt
pop
cmp
lahf
shr
sub
pop
xor
loop
jp
cli
in
push
orb
sar
rcll
sbb
pop
sub
pusha
and
popa
addb
pop
fiaddl
add
pusha
and
dec
fmuls
xchg
imul
xchg
fstpl
stc
fsts
adc
fildl
cmp
or
push
aam
xchg
mov
imul
enter
push
insb
push
adcb
add
std
bound
popf
ljmp
pusha
lret
pop
std
add
mov
ret
mov
pop
mov
cmp
cmp
or
mov
cmp
pop
sbb
stc
pop
cmp
daa
dec
decb
inc
orb
mov
lret
inc
xor
dec
sub
scas
aam
dec
ss
cmp
inc
test
icebp
call
inc
xlat
or
inc
cld
push
incb
das
and
cmp
jecxz
icebp
push
lods
and
jl
lahf
mov
pop
gs
inc
gs
mov
ss
cli
lea
jl
sub
mov
and
sbb
in
cwtl
cld
cld
and
sbb
das
pshufw
push
notb
sub
int
xchg
sbb
adc
js
mov
pop
or
daa
sub
or
or
push
lret
add
subb
ss
push
mov
jle
ss
add
push
cs
pushf
inc
add
dec
jle
stos
pop
dec
push
add
mov
rcrl
jl
dec
aaa
pop
or
mov
jae
xor
dec
and
cmc
dec
jmp
mov
outsl
test
push
imul
andb
mov
repz
lret
aas
and
lret
adc
outsl
mov
mov
lods
push
mov
push
add
rcrl
jmp
or
add
call
jnp
add
idiv
mov
ss
lea
mov
js
clc
xchg
xor
add
sub
jno
loop
sub
into
aas
mov
jbe
add
lods
mov
adc
jg
dec
push
add
jge
mov
mov
lret
xchg
rorl
repz
or
mov
loop
nop
add
adc
jle
mov
or
xchg
add
jmp
jmp
sbb
and
sub
mov
rorb
mov
inc
jno
mov
adc
iret
pop
lods
mov
es
sbb
pop
movl
dec
and
lods
test
lret
hlt
scas
movsb
pop
adc
dec
push
sbb
aas
mov
in
push
loop
and
inc
cmp
pcmpeqd
xlat
in
jbe
adc
dec
xor
or
jmp
ss
clc
dec
push
icebp
iret
ljmp
adc
fdivs
inc
scas
out
xor
adc
lea
int3
rolb
push
sbb
pop
les
mov
mov
idiv
insl
pop
pop
cmp
sub
pop
mov
repz
mov
fwait
imul
dec
inc
add
xchg
push
pop
sbb
adc
stos
sub
popa
jnp
dec
add
movsl
push
pop
int3
cmc
cmpb
ljmp
cmp
adc
sti
or
xchg
sarl
xchg
fwait
sahf
cmp
mov
mov
sub
pusha
sbb
mov
xchg
sbb
data16
jo
mov
pop
fdivs
push
pushf
sbb
addr16
sbb
jge
sub
imul
sbb
jge
loop
pop
adc
cmp
mov
or
bound
cli
add
iret
outsb
cmp
dec
ret
and
pushf
mov
xchg
push
fistps
or
leave
sub
sub
xchg
xor
jmp
inc
es
sub
adc
push
mov
sub
stc
inc
js
icebp
add
aam
lcall
pop
mov
bound
or
xchg
cmp
pushf
lcall
push
adc
cmp
stos
xchg
sbb
mov
iret
ret
enter
lret
sbb
lcall
mov
fmull
sub
aam
jmp
loop
xchg
adc
cmp
data16
nop
popa
mov
jo
imulb
clc
push
adc
out
jle
xchg
mov
mov
les
pop
cmp
ficompl
push
ss
mov
sub
or
enter
movsl
mov
in
xchg
ficoml
das
dec
cmp
sbb
decl
pop
lds
fiaddl
mov
mov
xchg
dec
inc
cli
int3
aas
and
shrl
jns
jo
cmp
insl
pop
dec
cwtl
jecxz
mov
lods
sti
int3
ja
dec
lahf
stos
sbb
dec
dec
or
fldl
inc
xchg
add
mov
sbb
stos
xorb
out
lret
clc
adc
test
inc
ficoml
mov
jp
sbb
js
xor
xor
cli
icebp
and
ja
fcmovnu
cli
dec
jb
push
adcb
add
daa
cs
push
xorb
rcll
ljmp
pop
ja
loop
sti
cmpsl
mov
push
pop
pop
mov
rol
mov
repz
cs
shlb
xchg
stc
and
mov
push
sub
mov
pop
ficoms
sbb
cld
mull
pop
cwtl
cltd
fisttpll
xlat
sbb
mov
xor
inc
sbb
sub
loope
mov
dec
cmp
outsb
outsb
sub
sub
std
dec
outsb
xchg
mov
inc
lret
fimuls
jne
sub
inc
ja
pop
xchg
mov
fildl
mov
lret
je
mov
mov
hlt
sbb
xor
sahf
ret
popa
cmp
ljmp
xchg
mov
ljmp
jne
rclb
push
lahf
cmp
cs
into
or
stos
xchg
sub
add
repz
int3
inc
dec
cs
add
push
xor
lods
and
maxps
and
push
adc
fldenv
and
cli
xchg
or
inc
scas
jbe
xor
call
cmp
or
dec
lods
inc
jne
jecxz
test
jb
mov
je
adc
mov
xor
push
inc
dec
popf
arpl
test
and
sti
mov
mov
push
sbb
lock
int
adc
mov
mov
cld
sbb
pop
push
ss
in
and
cmpsl
imul
add
pop
aas
inc
scas
sbb
shlb
mov
push
and
xchg
xor
sbb
pop
cld
cmp
mov
add
pop
lret
out
add
test
mov
and
pop
lret
pop
fmuls
and
es
pop
call
sbb
xor
jmp
fisubrl
and
push
fstps
or
fcmovnbe
mov
sbb
fstpl
sbb
fchs
rcrl
fwait
aad
sahf
xchg
push
cmp
jle
adc
and
pop
inc
out
mov
sub
aaa
sbb
movsl
dec
xchg
shr
aaa
testl
sti
ss
in
rcll
xchg
lret
xchg
das
xlat
int
sbbl
imul
mov
ret
inc
pop
jb
lret
mov
ret
ret
cmp
dec
adc
xor
xor
pop
aaa
inc
rcrl
inc
frstor
adc
adc
xor
push
jge
mov
aas
pop
daa
iret
das
push
or
lock
and
pop
movsl
ret
or
adc
stos
jns
mov
cltd
ss
test
loope
sbb
lds
mov
xchg
test
divb
test
pop
mov
fwait
pop
or
stos
xchg
loop
push
push
test
adc
pop
cmp
bound
movl
adc
mov
dec
sub
and
inc
sub
das
out
xchg
aas
xor
mov
in
sbb
xor
xchg
sbb
lods
mov
js
fstps
or
scas
dec
sbb
mov
cmpsl
adc
or
sbbl
sbb
push
mov
or
loope
add
orb
push
dec
popa
jnp
or
mov
pop
push
popa
mov
xor
lods
push
adc
sarb
inc
pop
pop
sub
es
lret
dec
dec
pop
in
data16
mov
int
stos
xchg
inc
aas
js
loope,pn
popa
adc
or
fldcw
fcmovne
inc
rorb
adc
or
lcall
popa
add
jg
push
mov
and
push
and
cli
scas
cmpsl
aas
jnp
cli
lret
sarl
imul
cmp
out
out
inc
pusha
push
jns
es
rcrl
inc
int3
inc
mov
aaa
clc
fisttpl
or
cs
out
fisttpll
or
aad
jnp
sub
push
lret
cmc
sbb
test
and
movsl
fildl
mov
cli
adc
inc
sbb
jo
imul
pop
push
mov
jno
add
sbb
ja
or
rcrl
add
jge
mov
xlat
daa
pop
inc
pop
sub
dec
mov
xor
pop
fadds
fldt
fildll
cmp
mov
leave
shlb
cld
adc
or
cmpsl
outsl
sbb
mov
pop
je
ss
scas
call
push
inc
out
fistl
mov
xchg
mov
icebp
add
scas
repz
mov
fbld
push
pushf
cmp
scas
mov
hlt
ja
stos
sub
jmp
mov
push
pusha
rep
movsb
add
or
daa
mov
stos
mov
bound
pop
ret
nop
dec
stc
sbb
mov
xlat
mov
push
subb
mov
mov
mov
xchg
xrelease
repnz
push
xor
imul
xchg
in
inc
das
mov
int3
mov
push
dec
pop
mov
dec
xchg
or
js
sbb
repnz
fsubrp
or
shlb
adc
dec
and
pop
pop
dec
outsl
push
inc
fwait
xchg
jmp
jne
loope
std
push
dec
pop
je
jnp
stc
and
jbe
ret
setle
jmp
xchg
dec
jmp
inc
out
and
xchg
fs
jge
sub
pop
jo
pop
cmp
scas
arpl
dec
sbb
sub
adc
fdiv
pop
xor
sub
lahf
inc
lret
push
rclb
cmp
in
push
lea
sub
xchg
pop
sarl
adc
xor
add
dec
sbb
or
leave
lds
sbb
xchg
in
lods
ficomps
sbb
fisttpll
popl
hlt
mov
or
mov
aaa
adc
mov
xor
mov
ficoms
xchg
pop
mov
enter
cmp
push
cmp
addl
pop
lds
aam
jno
inc
add
nop
adc
adc
jne
popf
into
add
adc
add
push
and
push
addb
mov
xchg
xchg
stc
cmpsl
pop
inc
addb
jmp
xor
imul
ds
hlt
popa
add
sub
jb
ss
sbb
imul
jmp
or
mov
icebp
or
inc
mov
jae
pusha
aaa
mov
test
pop
adc
add
push
out
dec
xchg
icebp
cld
jns
and
insl
stos
ljmp
xor
push
into
xchg
in
ljmp
enter
dec
sbb
fidivs
pop
outsb
xchg
stos
lahf
stos
sti
mov
push
loope
sub
lock
js
and
mov
dec
add
or
cli
cwtd
fsubp
nop
jo
mov
and
inc
pushf
ljmp
adc
and
sbb
sub
mov
stos
mov
cltd
sbb
lds
xchg
mov
or
inc
dec
adc
xor
adc
sub
ret
mov
data16
mov
out
xchg
and
mov
popa
cli
sahf
fldcw
imul
imul
addr16
fs
mov
call
push
xor
out
cmp
jmp
cmp
inc
mov
push
lahf
xor
mov
push
and
cwtl
iret
dec
and
xchg
pop
or
dec
enter
bound
sub
rcl
or
das
sbb
popa
push
aas
sub
dec
das
sbb
dec
stos
jnp
out
or
fcmovne
jno
repnz
or
mov
pop
sbb
pop
lcall
cmp
popf
nop
sub
mulb
inc
loope
xchg
push
fwait
iret
nop
pop
mov
push
sbb
xchg
int
enter
xor
lret
or
mov
xchg
pop
icebp
sbb
fistps
mov
insb
mov
mov
mov
sub
dec
inc
push
inc
jmp
jns
iret
push
les
lods
lea
aad
dec
aaa
rcrl
insl
ss
sbb
cmpxchg
pop
imul
push
jnp
or
sbb
sbb
sahf
xor
sbbb
fidivrl
jle
push
fdivrs
sub
adcb
cmpsl
add
testl
sti
stos
mov
or
push
cmp
ljmp
mov
cmp
int
inc
sub
dec
xorl
imul
daa
or
sub
mov
pushf
xchg
jbe
bound
je
sbb
lret
fildl
stos
push
xchg
into
fwait
bound
cmpsl
imul
notl
inc
outsl
add
data16
dec
mov
sub
ljmp
dec
incb
pop
add
pop
outsb
adc
and
push
jo
icebp
rcll
push
pop
adc
dec
ljmp
mov
cltd
dec
mov
jbe
cmp
push
insl
je
stc
fistl
mov
movsl
jmp
push
loopne
cmp
flds
jb
enter
jnp
inc
xor
inc
mov
xchg
mov
jg
out
sbb
sbb
cmc
dec
outsl
bswap
push
rcll
or
cmp
add
stc
mov
ret
jns
mov
xchg
sti
jnp
push
ss
outsl
or
popf
adcb
int3
data16
repnz
popf
sub
mov
cwtl
dec
test
insl
adc
pop
insb
fdivrs
mov
loop
out
cli
jno
and
rclb
xor
push
ss
push
cmpsl
pop
dec
lfs
push
out
push
stos
lahf
adc
sbb
daa
clc
or
xor
test
shr
sub
mov
adc
dec
xor
clc
jecxz
lock
scas
std
fwait
test
or
loop
mov
cmp
aad
inc
mov
imul
stc
rorl
xor
push
push
aaa
cmp
sbb
inc
and
fmuls
adc
fists
es
mov
inc
sti
inc
jbe
dec
out
push
ss
out
movsb
pop
test
xchg
jge
pop
mov
je
lds
and
mov
daa
or
jne
xlat
je
adc
into
xchg
add
pop
adc
es
fistpl
jno
dec
popf
sub
mov
cmp
leave
push
xchg
hlt
clc
cmp
push
or
cmp
xor
jle
xor
mov
fistpl
lret
xor
fwait
data16
mov
lods
adc
jle
out
sbb
mov
push
xchg
lret
dec
or
jmp
inc
das
adc
in
xchg
repnz
cmp
cmp
add
ud0
out
mov
or
ss
lret
cmp
mov
scas
int3
sbb
sub
mov
lss
sbb
pop
lods
mov
xchg
nop
mov
pop
jbe
lahf
inc
aam
lods
lahf
pusha
aaa
push
inc
pop
cltd
xchg
pop
rcl
adc
mov
sub
or
loope
adc
inc
int3
cmpsb
xchg
sbb
scas
fimuls
scas
adc
jmp
cld
rorl
jmp
inc
pop
lret
cwtl
sbb
out
jle
mov
das
sub
int
leave
xchg
jo
call
mov
pop
std
sti
shlb
das
sub
adc
mov
je
aas
mov
lds
out
test
jmp
ds
loop
pop
out
shr
loope
lods
cld
cmpsl
ss
mulb
shll
addb
fldenv
aam
lahf
loop
sbb
in
sbb
dec
xchg
std
mov
icebp
arpl
test
lea
sbb
sbb
xchg
test
pop
mov
cltd
shll
in
scas
ret
jnp
push
int
jp
iret
incl
sbb
mov
fisttpl
cmp
adc
fisttpl
mov
push
dec
adc
dec
xor
push
push
xchg
add
loop
push
mov
mov
xor
add
cltd
sarb
cwtl
test
sti
dec
jnp,pt
push
out
aad
hlt
jg
daa
mov
test
out
mov
cmpsl
mov
shrb
jmp
inc
ret
mov
xor
sbb
hlt
insb
mov
mov
std
rcrl
repz
xchg
or
popf
sub
fstl
or
sbb
cmp
in
test
dec
mov
jb
xchg
add
lds
repnz
dec
into
in
xor
push
or
imul
inc
lcall
sarl
push
aas
adcl
dec
in
push
adc
les
dec
pop
lods
stos
data16
cmp
push
lods
mov
mov
cmp
xor
inc
scas
and
xchg
incb
add
adc
xchg
jp
mov
fdivs
scas
lods
fcmovnb
mov
out
ret
aas
mov
push
scas
inc
xchg
jno
xor
imul
add
in
sbb
inc
mov
fistl
cmp
add
push
fcmovnbe
mov
adc
jmp
mov
push
mull
ljmp
ljmp
out
rorb
inc
scas
lret
fwait
out
cmp
mov
lea
jp
or
subl
outsb
xor
push
pop
sub
sbb
pop
inc
mov
loop
pop
je
dec
sbb
xchg
lock
xchg
pusha
ret
ja
sti
xor
push
push
roll
sub
dec
cli
push
mov
test
pop
xor
test
mov
mov
add
lds
fidivrs
mov
cmp
lcall
mov
dec
add
add
out
cmpsb
mov
loop
gs
stos
mov
icebp
fcmovu
jo
loopne
mov
adc
or
hlt
dec
push
jp
fcoms
addr16
cmc
inc
les
jl
ret
lahf
sbb
addl
scas
xchg
and
rorl
clc
mov
add
mov
mov
xlat
mov
mov
push
xchg
mov
aaa
sub
push
jns
xchg
fwait
mov
loop
test
cmp
ret
ds
pushf
or
ds
xor
sbb
mov
mov
pop
scas
push
xor
dec
cmp
ja
pop
fs
pop
mov
pop
mov
inc
mov
jmp
xchg
xor
inc
cmp
cli
sbb
xor
cmp
xchg
or
sbb
leave
shrl
arpl
pop
popf
std
cld
imul
jnp
pop
jns,pn
xchg
fildll
sarl
xchg
sbb
push
xchg
int
add
imul
mov
mov
mov
inc
pop
sub
fwait
pop
inc
mov
push
sub
inc
push
in
in
mov
lods
std
orb
push
sti
mov
inc
inc
jnp
and
xchg
xchg
int
sarl
jo
mov
pusha
xchg
ficoms
xchg
jmp
add
inc
in
pop
mov
imull
lahf
fwait
out
mov
lds
hlt
movsl
cmp
arpl
add
fnsave
sbb
push
mov
sub
sub
xchg
dec
pusha
mov
mov
pop
dec
lret
ja
sub
outsl
mov
insb
lret
dec
cltd
and
ret
imul
mov
dec
inc
push
dec
jo
bound
add
clc
fldenv
dec
adc
popa
nop
mov
outsl
add
dec
cli
stc
fldt
mov
outsl
sub
adc
xchg
es
es
cmp
not
mov
arpl
sbb
mov
cmovo
dec
nop
mov
lret
pop
jo
lret
pop
dec
push
jge
xorb
das
ds
sbb
int3
insl
mov
push
lahf
cmp
cmp
xlat
gs
lods
fdivrs
or
jo
sbb
sahf
ljmp
push
int3
sbb
adc
dec
xchg
add
test
or
mov
mov
cmp
or
cmp
ss
xor
or
xchg
pop
int
jp
ja
sbb
ss
dec
or
test
cmp
mov
xchg
pop
aad
mov
or
aaa
jmp
pop
test
cwtl
jo
ds
je
lret
lods
fs
sbb
lret
lret
inc
stos
xchg
imul
or
and
test
push
inc
sbb
rcrb
mov
sub
into
jmp
xor
mov
sub
mov
mov
bound
sti
call
mov
push
out
mov
dec
add
jno
and
mov
pop
inc
sbb
mov
daa
cld
out
sbb
dec
lret
jmp
lods
loop
ljmp
xchg
scas
cmp
pop
dec
or
mov
or
cmp
cmpsb
inc
shll
sbb
fwait
cmpsl
cmp
mov
or
les
jns
cld
jne
daa
iret
pop
test
outsl
dec
bound
shlb
call
in
mov
xchg
inc
outsl
cmp
or
pop
les
push
adc
mov
and
dec
add
mov
test
scas
out
movl
push
fstl
or
push
mov
imul
inc
pop
jg
xor
adc
lahf
rcrl
lea
adc
jns
fisubl
dec
pop
sbb
imul
lret
pop
jmp
xchg
addr16
dec
imul
inc
stos
pop
xor
testl
mov
or
mov
out
mov
stc
sub
sbb
test
add
xchg
andl
cli
sti
inc
pop
push
mov
shrl
popa
mov
pushf
mov
in
xlat
ja
fucom
aad
insb
xor
sub
mov
push
cmp
ret
fisubl
or
jnp
orb
insb
cmpb
dec
lock
sti
pop
nop
loopne
mov
in
sub
cmp
push
fimull
jo
shll
pop
cmp
cmp
or
fisubrs
daa
lret
adc
cmp
test
or
loope
imul
jecxz
nop
lock
push
fisubrs
dec
shl
adc
rolb
ss
pop
test
inc
jmp
pop
pop
xor
or
push
mov
and
mov
mov
sbb
pop
sub
fwait
push
pop
push
mov
cmpsb
jmp
dec
cmp
lret
pop
xchg
ja
bnd
xor
call
xchg
bound
daa
push
pop
ret
pop
mov
ljmp
cmpsl
mov
adc
cli
pop
adc
pop
ja
mov
frstor
rcl
cmp
stos
cmp
cs
or
mov
add
xor
in
xor
xchg
lods
dec
cmpsb
xor
shrl
mov
and
loopne
lds
dec
ficomps
xor
fildl
dec
pop
and
mov
mov
ljmp
and
push
insb
push
sub
xor
je
adc
cmp
dec
nop
lods
push
lret
jmp
iret
dec
xchg
pop
or
mov
push
sub
mov
and
dec
inc
adc
aas
movsb
adc
inc
jo
cmpsl
push
pusha
test
push
adc
rorb
or
ljmp
fsubl
rcrb
lret
dec
mov
hlt
jae
cs
fs
or
sub
mov
mov
lods
pop
sub
inc
lcall
push
in
inc
push
js
mov
sub
adc
lea
fs
mov
xor
pop
push
mov
fwait
or
lods
cmp
mov
cmp
add
mov
out
lock
push
push
jbe
mov
or
xchg
aam
and
inc
mov
cli
and
dec
xor
test
pop
jecxz
xor
fwait
lahf
inc
arpl
sbb
iret
mov
subl
mov
add
jge
ret
mov
mov
sub
sub
bound
pop
ljmp
cwtl
cmp
sub
jp
out
sbb
cmp
jmp
mov
add
mov
inc
sbb
ss
lret
popa
addr16
arpl
fisttpl
mov
mov
sbb
xchg
stos
inc
dec
push
sahf
cmp
inc
and
mov
dec
loop
dec
pop
sbb
out
adc
or
sbb
lahf
add
push
jmp
jne
fdivrp
test
jo
rcl
mov
mov
test
int
and
movsb
ret
xor
pusha
dec
outsl
push
mov
cs
push
enter
xor
scas
xchg
or
lods
out
push
xor
pop
inc
dec
out
pop
push
rcrb
xor
lods
inc
insb
sbb
cli
stc
outsb
cmp
test
pop
sbb
and
scas
lock
xchg
and
pop
mov
test
or
fcomp
lcall
pop
rcr
and
shl
inc
stc
or
pop
sbb
es
cmp
mov
cmp
cmp
adc
xor
clc
bound
push
push
mov
mov
xchg
in
push
mov
xchg
repz
push
insb
fwait
cld
xlat
in
inc
adc
fdiv
ss
add
dec
call
push
imul
sbb
loopne
fmuls
out
insl
xchg
push
imulb
push
sbb
es
ret
xchg
jno
sub
mov
iret
cmp
test
push
ljmp
cmp
dec
dec
sbb
sub
xchg
mov
aaa
mov
or
dec
add
ss
mov
push
or
fcomps
hlt
pop
mov
sbbl
inc
push
jns
and
inc
or
jno
lock
repnz
enter
pop
mov
mov
sbb
xchg
pushf
and
mov
inc
jmp
imul
dec
adc
repnz
push
or
xor
inc
jne
inc
mov
repnz
mov
es
hlt
sahf
insb
jmp
fistl
ljmp
cmc
cmc
aaa
pop
mov
xor
pop
movlps
pop
int
ljmp
lea
or
pusha
ss
pop
push
mov
and
insb
xchg
pop
mov
cmp
add
bound
fistpl
sub
test
mov
test
cli
outsl
mov
outsl
push
movsl
jns
daa
or
pop
jnp
jb
ss
cmp
imul
xchg
inc
cli
push
int
mov
adc
mov
icebp
in
scas
dec
in
pop
sti
and
andb
cmp
lock
std
fildl
add
xor
jp
movsl
lret
inc
mov
adc
jmp
mov
add
fwait
pop
pop
and
loop
xor
mov
pop
sbb
movsl
push
repz
sbb
mov
cmpsl
push
mov
jecxz
imul
adc
hlt
jle
cmp
sbb
jle
addr16
lahf
cmp
jb
jg
adc
shlb
fwait
xlat
or
lods
pop
lahf
xchg
xlat
fsubp
push
insb
imul
or
xor
push
xlat
mov
movb
jnp
sbb
orl
mov
mov
fs
enter
loope
imul
dec
insb
sbb
pop
push
ljmp
push
outsl
xor
add
xor
rcl
mov
das
popa
movsbl
pop
mov
retw
mov
dec
stos
loop
icebp
das
jmp
push
fwait
out
outsl
xor
std
pop
jo
iret
add
daa
cmc
pop
movsl
mov
out
fimuls
xor
enter
mov
sbb
fidivrs
rolb
rcrb
daa
fistpl
dec
mov
sbb
loop
cmp
inc
or
scas
pop
fs
mov
pop
into
enter
nop
in
je
arpl
sti
icebp
jmp
data16
shrl
xchg
mov
mov
aam
push
mov
pop
gs
fistl
mov
std
movsl
aam
loop
adc
dec
add
ret
sbb
jne
mov
pop
or
ss
push
adc
out
adc
lret
xor
dec
repnz
jmp
or
or
inc
sub
cmp
mov
mov
cltd
pop
sub
cltd
dec
fcmove
sbb
xchg
ret
mov
cs
xor
stos
sahf
repnz
mov
inc
mov
sub
pop
dec
sub
xor
push
fs
or
xor
push
jb
push
mov
out
popa
xchg
daa
stos
data16
push
push
imul
adc
sub
mov
in
pop
sbb
mov
outsl
lock
push
testl
push
cli
dec
pusha
es
enter
js
mov
mov
mov
stos
dec
pusha
cmp
lahf
sbb
or
and
stos
gs
ds
xchg
in
lods
or
gs
mov
jmp
xor
xchg
shl
mov
mov
push
movsb
push
adc
gs
and
sbb
add
cs
scas
shlb
mov
addl
and
and
or
mull
pop
mov
stos
dec
push
xorl
jg
sbb
xlat
xchg
pop
xchg
add
jmp
in
pop
les
adc
sti
inc
cmp
dec
cmp
cli
xchg
push
mov
mov
in
pop
popa
sbb
pop
xchg
fiaddl
push
dec
push
jns
mov
adc
nop
aam
fstpt
mov
mov
lcall
mov
scas
mov
adc
stos
sbb
xchg
stos
push
idiv
aas
lahf
xor
fiadds
mov
lret
xor
xor
mov
sti
mov
xchg
data16
pop
add
dec
lods
push
lods
xor
add
cwtl
les
lock
sti
add
iret
cmp
ljmp
out
int
movsl
mov
push
inc
jnp
cmp
inc
push
fcmovb
outsb
fcom
push
adc
repnz
jno
mov
mov
inc
ret
jmp
std
push
repnz
mov
dec
and
dec
adc
adc
jg
cmp
bound
pop
leave
jno
aas
sar
es
imul
mov
pop
or
mov
add
adc
aad
xchg
pop
aam
mov
jno
pop
daa
dec
adc
fstpt
push
dec
sub
push
insl
push
iret
cmc
ret
add
imul
xchg
mov
dec
or
inc
fistpl
test
xchg
cmp
add
sbb
test
ss
add
lret
shrl
push
into
mov
das
bound
inc
pusha
rcl
clc
lret
push
fsubp
sbb
nop
sbb
lock
outsl
cld
je
lret
adc
pop
inc
push
xchg
sbb
mov
pop
or
sbb
jge
out
cmp
enter
inc
sbb
xor
mov
and
mov
mov
inc
insb
cmp
mul
inc
cmp
xchg
sbb
outsl
pop
pop
popl
cltd
sub
or
xlat
and
sti
das
adc
repz
lahf
or
clc
loope
fcomps
adc
adc
or
lret
push
sbb
shr
in
js
inc
and
mov
arpl
lock
cmp
inc
cli
xor
cmp
decl
loope
pop
cmp
xchg
mov
or
popa
adc
fisubs
pop
dec
imul
js
and
repnz
in
lods
inc
daa
push
pusha
jecxz
or
lods
cmp
stos
sub
push
scas
sub
test
mov
sarl
dec
call
push
xor
addr16
cmpsb
and
mov
cmp
push
jno
in
movsb
xchg
mov
push
mov
rorl
push
jb
arpl
lret
rcll
adc
int3
dec
in
cmp
dec
nop
out
xlat
xchg
sbb
sarl
ss
test
les
xchg
loope
adc
hlt
push
add
lret
orb
pop
jno
cmp
jp
and
shrb
lcall
adc
dec
lds
imul
and
add
imul
cwtl
inc
dec
mov
adc
jne
jecxz
aaa
add
jne
adc
xchg
in
or
aad
cmp
xchg
negl
arpl
and
lcall
inc
call
add
test
repnz
dec
cwtl
les
mov
pop
ss
jmp
rorl
out
sbb
push
or
inc
sbb
mov
outsl
inc
sbb
pop
sbb
xor
orb
ljmp
add
popa
shrb
xor
decl
mov
pop
fsubl
sbb
and
push
push
dec
lods
or
mov
sar
add
sti
es
std
mov
jg
out
sbb
aas
enter
aad
leave
add
enter
pmullw
out
xchg
and
mov
cmp
pop
addr16
mov
dec
shl
std
adc
dec
push
cmp
sub
cmp
out
and
scas
es
pop
scas
add
pop
jo
add
les
inc
mov
dec
bound
sti
push
hlt
stos
scas
fs
adc
dec
ljmp
mov
cmpsb
or
adc
mov
sub
loopne
mov
nopl
inc
add
sbb
xlat
movsl
mov
or
adc
cmpsl
xchg
ljmp
and
dec
mov
pop
xor
pop
mov
inc
dec
nop
mov
mov
sbb
push
cmp
outsl
cmp
sarl
sub
pop
das
inc
jnp
stos
cmp
rorb
jno
lcall
ret
push
out
fdivs
inc
enter
cmp
xorl
jge
addr16
clc
mov
mov
in
clc
data16
mov
std
cwtl
pop
mov
xor
xchg
xor
fdivrs
loopne
or
std
je
stos
and
mov
cmpb
dec
movsb
push
cs
fldt
mov
jecxz
loopne
or
or
cmpsb
or
sahf
hlt
pop
outsb
sub
jle
and
setge
sbb
add
dec
fcomi
mov
add
pop
sbb
dec
lcall
daa
mov
cmp
popf
idivb
into
adc
lcall
sbb
inc
dec
dec
clc
adc
and
inc
or
push
sbb
mov
and
add
pop
iret
repnz
out
mov
fimull
stos
sbb
shll
sbb
shr
mov
jle
inc
push
jo
add
sbb
bound
aam
mov
dec
dec
lret
add
adc
sbbl
mov
fdiv
adc
pop
and
pop
loopne
jns
adc
das
add
ljmp
psubusw
dec
fcmovb
scas
nop
mov
stos
sbb
fwait
mov
xchg
mov
dec
add
add
push
ficomps
in
jno
and
dec
inc
cmp
ficompl
ljmp
jmp
lret
hlt
out
outsl
clc
out
push
roll
pop
lcall
cmp
dec
sbb
mov
insb
test
jmp
outsl
xchg
ss
divl
jl
pop
fimuls
mov
mov
jo
jmp
dec
push
int3
jns
in
pop
mov
adc
scas
lcall
dec
mov
xor
push
push
mov
fwait
push
aam
sbb
xor
or
xchg
decb
push
inc
or
cmc
into
stos
movsb
jl
call
jo
lret
xlat
xor
lcall
sbb
cltd
insb
faddl
mov
mov
jae
out
adc
push
fidivl
cmpsb
push
clc
bound
mov
adc
stos
in
cltd
mov
jae
cld
dec
dec
jnp
mov
xor
pop
bound
xor
scas
pushf
jp
push
es
mov
mov
xor
cmp
or
ss
mov
mov
loopne
out
inc
fldt
loop
cltd
cmpl
add
testb
jae
stos
rorl
fcmovnb
adc
adcb
aas
ds
imul
push
gs
adc
repnz
xorl
adc
push
dec
and
dec
dec
jno
stos
cld
mov
rcrl
mov
pusha
mov
push
xor
or
shl
jge
mov
and
sub
mov
xor
ss
stos
not
mov
push
push
jo
jl
mov
mov
das
mov
sub
pusha
xor
pop
loopne
aam
xor
xchg
loop
emms
add
pop
xchg
pop
test
shrl
ljmp
fdivp
cmp
mov
mov
inc
sub
and
xor
sub
add
outsb
das
cmp
rol
dec
jle
loopne
xlat
std
adc
imul
fadd
push
sti
push
lods
jmp
jge
xchg
imul
cmp
adc
dec
loop
push
cltd
cwtl
adc
incl
push
push
mov
dec
nop
aas
shrb
sbb
pop
stc
pop
aad
test
cmp
lcall
cmp
jecxz
arpl
mov
lods
dec
out
aas
test
xor
or
arpl
in
jmp
ljmp
add
push
mov
xchg
jg
xchg
mov
add
sbb
inc
cmp
and
push
cmc
lret
dec
test
push
sbb
icebp
or
call
push
loop
inc
outsl
rclb
mov
dec
fiadds
pop
push
imul
in
cmp
xchg
xchg
lret
data16
dec
mov
push
cwtl
mov
mov
push
shl
xlat
arpl
add
sar
sarw
push
cmp
in
iret
jne
shrb
sub
outsl
and
lods
int3
or
mov
pop
pop
nop
mov
jnp
ss
out
cmpsl
mov
dec
lds
ja
mov
jo
sbb
push
xchg
cli
xchg
dec
inc
stos
jo
mov
xlat
xchg
cmp
xchg
push
roll
lret
push
xchg
fcoml
add
int3
mov
mov
pusha
push
fisubl
jp
sbb
data16
xor
sbb
pushf
push
xor
jne
stos
mov
push
stos
adc
and
jae
test
mov
test
jp
ss
adc
push
jbe
dec
inc
out
fcompl
adc
shll
xor
inc
bound
add
push
xchg
addr16
sbb
adc
popa
aas
lds
sarl
fwait
ret
scas
cmp
xor
popf
dec
out
jno
sub
lods
jne
es
dec
movsl
mov
insb
mov
or
and
push
mov
sbb
adc
cmp
repz
sbb
lods
jnp
sbbl
repnz
rcr
jbe
je
sub
lea
rolb
add
dec
es
or
pop
add
pop
gs
cwtl
lock
insb
and
dec
adc
pop
cmpsl
mov
cmp
mov
pop
cmc
xor
out
fildll
inc
imul
jl
inc
sbb
sbb
out
mov
push
dec
fwait
das
push
stos
and
sbb
mov
mov
cwtl
enter
xor
mov
xchg
aad
dec
xor
add
sbb
das
nop
lods
imulb
push
lods
dec
loopne
or
cmp
fs
jecxz
cmp
pop
pop
adc
mulb
lret
insl
je
ret
cld
mov
pop
xchg
push
test
or
inc
adc
pop
mov
pop
xchg
mov
xchg
jmp
test
push
aam
test
lret
cltd
adc
bound
gs
sub
or
and
inc
inc
pop
adcb
notl
sti
fdivrs
fdivl
jo
jbe
lret
sti
es
mov
mov
cmp
mov
mov
xchg
lcall
push
dec
sbb
flds
mov
outsl
repnz
aaa
test
adc
mov
cwtl
sbb
jmp
adc
pop
aaa
jnp
sbb
push
cmp
xor
mov
and
adc
or
nop
and
jecxz
sbb
jnp
mov
and
fistps
pop
push
insb
popf
jp
xor
xor
js
xor
push
jnp
inc
or
sti
rorl
insl
and
sub
cmp
fldt
xchg
testl
scas
lods
xlat
mov
in
stos
jo
fwait
cmp
scas
ljmp
shlb
pop
in
arpl
mov
ljmp
out
and
adc
and
outsb
int
xchg
mov
cmp
lret
jae
push
inc
pop
dec
sbbb
mov
pop
mov
and
inc
pop
cmp
dec
jp
popf
int
adc
adc
xchg
sub
sub
js
push
arpl
loop
mov
mov
mov
popa
sar
fwait
jl
lcall
out
add
loope
cmp
xchg
nop
or
push
sti
shr
jg
sbb
or
adc
jl
fidivrs
pop
dec
cmp
aaa
fs
aaa
stos
dec
std
jbe
lods
or
adc
adc
enter
mov
pusha
xor
ret
es
ja
and
lcall
mov
inc
out
xchg
lods
ljmp
mov
mov
dec
aam
je
sub
stos
std
js
mov
xorb
adc
adc
jbe
pusha
dec
movsb
imul
cmc
push
daa
imul
xor
dec
or
shl
stos
int
out
sbb
xchg
adc
adc
push
pop
jecxz
outsb
sub
loopne
lret
dec
aaa
inc
mov
cmp
cli
pop
test
add
test
mov
dec
pop
pop
shll
inc
movsb
rcrl
sbb
or
jmp
push
sbbb
out
add
push
lods
dec
xchg
imul
push
sahf
adc
jmp
imul
pop
adc
test
cli
adc
dec
push
push
adc
push
ss
dec
xor
or
jno
mov
xchg
ret
cltd
cs
sti
xchg
fwait
dec
sub
push
pusha
sbb
sub
cmp
outsl
jo
pop
mov
lret
mov
push
jmp
sbb
sub
xor
cs
pushf
les
nop
sub
or
mov
inc
lcall
add
dec
lds
dec
xor
inc
lods
es
mov
fstpt
push
add
xlat
or
cltd
xor
lcall
sbb
adc
push
rorb
enter
jns
faddl
fcmove
pop
ret
jns
outsl
hlt
insb
fstp
aaa
jle
insl
je
jbe
flds
add
je
in
sti
or
jnp
xchg
pushf
cmc
adc
mov
sbbb
xor
pop
lcall
sbb
push
and
jnp
xor
inc
ss
mov
sub
dec
in
inc
loope
adc
int
out
loopne
push
ss
popa
inc
in
testl
lret
mov
mov
xchg
xor
jae
or
pop
or
sbb
push
scas
sbb
add
jnp
pop
pop
xchg
cmp
movaps
xor
ret
xor
mov
push
test
pop
jo
mov
fcmovnbe
test
push
lds
orb
jle
sub
cli
mov
ss
fstpt
in
dec
pusha
pop
mov
mov
testb
inc
lret
nop
testl
adc
mov
push
hlt
cltd
push
xor
aad
in
dec
mov
jmp
stc
fldcw
sbb
fdecstp
fsts
add
ss
dec
jge
mov
test
gs
insb
or
pop
lret
aas
test
lds
mov
cmpsl
pop
adc
insb
dec
mov
mov
push
jmp
mov
div
jg
loop
xor
insb
cmp
add
or
addr16
shlb
push
int
lgdtl
mov
cmp
popa
cmc
xor
pop
rcrb
jno
ja
std
add
test
insb
jle
xchg
fs
add
jl
cwtl
movsl
ret
out
cmp
pop
cltd
cmp
mov
cmp
cmpsl
push
push
inc
mov
test
sbb
cwtl
inc
mov
fisttps
push
das
daa
xchg
pop
fwait
cs
mov
mov
lock
or
dec
dec
sub
in
push
test
lret
pop
mov
gs
hlt
or
imul
inc
popa
mov
nop
push
mov
dec
adc
mov
lods
dec
cmp
mov
insb
adc
pop
jbe
lds
push
pop
fldenv
push
sbb
adc
push
adc
sub
popa
lahf
cli
stc
rcrl
dec
add
pusha
mov
xlat
sbb
dec
push
iret
insb
or
xchg
add
mov
ljmp
cwtl
mov
xchg
popa
mov
dec
mov
xor
inc
mov
test
inc
mov
push
xchg
icebp
pusha
pop
sub
loopne
sbb
stc
movsl
ret
mov
or
fistpl
ret
add
ficoml
mov
cmp
outsl
das
mov
mov
std
pop
addr16
cltd
ss
in
dec
aam
lcall
mov
or
mul
push
sub
movsb
xorb
lret
stos
xor
push
dec
push
push
push
mov
inc
rolb
push
or
dec
inc
ret
lcall
inc
adc
xor
pop
xchg
xchg
lods
or
test
xchg
je
mov
sbb
adc
sti
inc
inc
orb
ret
nop
leave
push
sub
lcall
mov
scas
cmp
push
cs
mov
fadds
pop
xor
cmp
inc
xorl
jno
je
add
adcl
push
jno
mov
lods
iret
mov
clc
adc
pusha
jmp
cmp
adc
xchg
mov
mov
push
mov
outsl
mov
ljmp
test
push
test
lock
dec
jmp
push
test
aam
nop
outsb
xlat
mov
mull
xchg
push
or
jle
repz
test
adc
inc
out
in
test
pop
lret
sbb
sbb
lret
lods
mov
adc
pop
inc
cltd
inc
adc
pop
orl
push
mov
sbb
rorl
loope
fimuls
cmp
fcom
ss
mov
pop
pop
mov
jle
mov
dec
sbb
stos
mov
pop
mov
mov
pop
cmp
mov
loopne
popa
outsb
xchg
pop
out
dec
stos
mov
cmp
xchg
movsb
fistpl
aam
mov
xchg
je
mov
sarl
dec
int
jo
xor
jmp
dec
mov
popf
fcompl
pop
es
jmp
push
cmp
dec
jmp
ljmp
adc
dec
mov
mov
and
adc
pusha
mov
stos
xor
pop
pop
leave
gs
pop
cmp
inc
imul
push
cli
pop
cmp
lods
sub
icebp
mov
pop
dec
rep
push
xorw
scas
adc
adc
sti
ljmp
push
xchg
adc
outsl
sbb
xchg
scas
jl
cs
jne
fisttpll
and
insl
fldcw
lods
dec
pop
bound
pop
popa
pusha
dec
mov
and
test
das
sbb
jge
fisttpl
lods
shlb
jmp
xchg
iretw
mov
mov
and
pop
gs
lods
insl
mov
and
stos
xchg
cmc
fisubrs
adc
pop
insb
pop
add
sub
inc
inc
ss
pop
sti
xchg
mov
jp
in
cmp
and
out
dec
sub
sbb
sbb
lret
sbb
loop
rcrl
mov
pushf
jns
xor
fwait
pop
push
xchg
push
stc
insb
stos
je
adcl
push
dec
jne
inc
jns
lods
jge
out
cli
and
jnp,pt
test
pop
add
pushf
ret
push
cmp
adc
mov
cmp
adc
cmpsl
sub
lret
xchg
xor
fdivrp
scas
je
fnstenv
jmp
push
outsb
imul
jb
aaa
stos
cmp
or
repz
fbstp
clc
dec
insb
js
call
adcb
repnz
mov
iret
xchg
daa
es
cmp
dec
push
inc
ss
mov
dec
js
sub
jns
jmp
mov
inc
xlat
lds
and
cmp
cld
jp
and
daa
xchg
jl
fsubrs
out
mov
out
daa
xchg
test
js
inc
das
push
movsb
mov
ss
jmp
pop
or
push
rorl
fistl
dec
test
dec
pop
ljmp
pop
cmc
inc
or
jmp
test
sbb
imul
cmc
out
jg
mov
inc
imul
adc
es
push
lret
ljmp
pop
add
scas
pushf
add
and
imul
inc
lock
mov
ljmp
add
fstpl
sbb
bound
lcall
aas
les
mov
adc
ds
xor
sub
bound
fcomp
ret
sbb
push
push
subb
ret
adc
dec
aad
jmp
push
add
sbb
or
sbb
scas
xchg
negb
js
and
and
dec
inc
xor
or
ret
pop
sbb
jp
inc
mov
push
iret
mov
sbb
test
pop
pop
pop
dec
mov
das
cli
push
lock
or
das
inc
and
ret
xchg
js
adc
pop
orl
sbb
jae
pop
inc
or
ret
cmp
das
push
cmp
out
xchg
pop
or
xchg
cltd
mov
fstpt
jno
cmp
stos
push
adc
add
cmp
cli
fs
sbb
scas
nop
aad
sub
ficompl
jo
es
sbb
pop
jae
and
add
ret
pop
and
inc
jge
add
pusha
out
scas
sub
cmp
push
ss
push
out
add
add
clc
out
sbb
sarl
dec
bound
aam
mov
xchg
cmp
mov
jl
inc
aam
xchg
outsl
lcall
test
mov
ret
and
and
sbb
push
cmp
std
dec
xchg
ljmp
inc
xor
fs
dec
cli
dec
pushf
hlt
pop
ret
in
and
mov
addr16
call
dec
scas
pusha
addr16
xchg
and
jns
pop
enter
icebp
in
jns
add
sub
jbe
inc
pop
jge
xchg
leave
or
cmp
pop
test
add
ds
shrl
lods
bound
loop
mov
pop
lods
inc
fldt
std
cli
inc
ss
repnz
in
fmull
sbb
lret
push
cs
sti
nop
xlat
cmp
mov
or
stos
nop
outsl
loop
mov
dec
push
jl
pop
sbb
or
scas
inc
sbb
adc
roll
jl
pop
js
xor
loopne
push
dec
and
mov
pop
sub
ja
or
in
das
pop
xor
cwtl
cmp
sti
jl
call
loopne
das
jb
sbb
test
pop
outsb
adc
lods
cmp
jnp
inc
out
push
mov
lret
les
push
push
bound
shlb
xor
mov
loop
out
add
add
dec
insl
xor
cmp
jle
ret
test
test
out
xchg
push
xor
pusha
push
lret
mov
fnstenv
mov
nop
pop
inc
or
js
jg
insb
xchg
cmp
out
push
inc
mov
xor
xor
sbb
mov
scas
push
outsl
sub
aas
add
js
adc
inc
out
xor
lods
or
inc
jecxz
inc
push
cmp
sbb
bound
jl
je
inc
hlt
xor
ja
push
out
lret
and
cmp
or
adc
inc
cwtl
xor
mov
push
sub
roll
adc
push
push
sbb
sbb
scas
lock
dec
out
dec
push
adc
sahf
xchg
cmp
nop
cmp
inc
ss
imul
lds
or
stos
adc
fnstenv
jns
xor
add
inc
cmp
push
out
push
clc
pop
cmp
rol
lret
push
cmp
dec
repnz
aad
xchg
mov
in
je
imul
push
pop
shlb
popf
loopne
xchg
xor
dec
mov
popf
and
sub
movsb
mov
sub
xchg
xor
dec
cmpsl
xor
mov
pop
addr16
mov
stc
aaa
gs
je
popa
imul
das
xchg
pop
or
das
adc
mov
inc
xor
xchg
ffreep
std
clc
je
fistl
aam
aad
insb
mov
loopne
mov
mov
fs
andl
fnstsw
jl
mov
hlt
cld
fstpl
adc
jmp
mov
push
or
loop
pop
outsl
sbb
and
cmp
push
maxps
cmp
and
shl
push
mov
inc
es
lcall
add
repnz
fsts
lds
xor
mov
dec
aaa
inc
gs
stos
mov
pop
fcmovbe
jbe
mov
sbb
gs
aam
cli
outsl
imul
ficoml
dec
outsl
xchg
cmp
sub
fadds
mov
xor
xchg
cmp
xor
or
inc
jle
addr16
and
imul
std
add
sar
push
mov
jle
mov
pop
mov
psrlq
roll
push
add
popf
cmp
sbb
xchg
dec
push
stos
push
fisubrl
ffreep
lcall
out
sbb
push
adc
xor
add
or
jnp
inc
adc
add
imulb
call
mov
mov
push
fs
lcall
aas
sti
lret
xchg
pushf
mov
mov
imulb
jns
mov
ss
ficoms
cmp
inc
mov
sbb
and
cmpsb
mov
mov
inc
mov
addb
ss
cmp
cltd
jae
push
jno
xor
xchg
fimull
fwait
outsl
cwtl
mov
adc
sub
push
scas
mov
jmp
das
inc
ljmp
pop
mov
fisttpl
mov
in
push
std
dec
daa
mov
iret
sub
mov
in
sbb
iret
dec
lods
jo
sbb
and
das
test
push
jmp
dec
mov
mov
jmp
pop
xor
xchg
dec
xchg
adc
sub
bound
incb
xlat
stos
ja
mov
jle
in
sbb
arpl
sub
or
insb
adc
mov
lds
adc
dec
jmp
arpl
cmp
adc
int3
fcom
cmp
pop
hlt
cwtl
jbe
xor
xor
fwait
or
shll
sbb
jecxz
cmp
out
sub
cmpb
cmpsb
push
clc
mov
sahf
push
fstl
jp
mov
shll
lods
mov
pop
mov
jae
es
fildl
fmull
and
push
pop
dec
jp
pop
movsl
mov
das
xor
push
xchg
jg
pop
or
adc
in
cmp
test
jbe
sbb
dec
ss
je
inc
repz
dec
and
insl
adc
push
inc
fs
shlb
rorb
dec
mov
inc
push
loopne
jae
xchg
bound
sub
jbe
or
and
xchg
lahf
dec
xor
push
outsl
and
push
mov
push
add
adc
push
popf
outsb
aam
pop
mov
mov
mov
jp
cmp
pop
in
fdiv
inc
pop
iret
xchg
dec
jbe
andb
pop
push
loopne
jle
insl
push
push
lds
insl
arpl
popf
rcrl
ficompl
shlb
dec
pusha
pop
mov
bound
ret
and
and
xchg
mov
pop
or
push
sbb
mov
ds
and
fadds
mov
lods
repnz
xor
fadds
pop
popf
outsl
mov
mov
inc
cmpsl
mov
scas
aam
xorb
xchg
test
stos
mov
into
imul
pop
mov
popf
push
loopne
out
mov
push
popf
inc
je
xchg
jbe
sbb
jno
sti
push
movsl
lods
push
imul
movsb
push
sbb
pop
pop
sub
pop
jns
push
shl
xchg
adc
pop
inc
inc
dec
inc
loop
lahf
je
ret
add
mov
sbb
and
psraw
outsl
movsl
push
mov
xchg
sub
xlat
dec
lods
xor
rcrl
das
ffree
adc
dec
mov
sbb
in
mov
pop
clc
or
jo
and
das
xchg
loope
xchg
push
ljmp
dec
mov
repnz
dec
sub
adc
pop
call
inc
jo
insl
push
mov
mov
xor
ret
test
inc
xchg
incl
sbb
sub
mov
dec
sub
sub
pusha
inc
and
jg
fidivs
xor
jae
and
add
push
aas
fists
push
lock
and
push
shl
addr16
fidivrs
paddq
mov
dec
mov
jns
dec
ret
pusha
inc
jecxz
fiadds
dec
pop
dec
pop
dec
xor
sub
sarb
es
xor
rol
jle
rorl
xchg
cli
jb
mov
pop
insb
xor
jp
out
imul
repnz
movsb
movsl
int
mov
mov
or
inc
andb
mov
cmp
inc
add
bound
aas
dec
into
or
inc
sub
mov
sar
ret
xor
sbb
pop
sbb
ljmp
adc
adc
jp
ss
aaa
jge
int
les
fcos
int3
lcall
mov
xchg
fs
ja
mov
jmp
test
sub
cltd
add
ret
iret
cwtl
or
je
adc
lds
sub
data16
test
ret
testl
xor
ljmp
inc
mov
test
out
cmp
xchg
cmp
inc
enter
push
movb
sbb
sbb
dec
cmp
xor
sbb
lods
sbb
pop
jb
test
xor
sbb
fdivrs
lret
jecxz
imul
mov
push
inc
stos
pop
hlt
pop
scas
sbb
jo
test
xchg
movsbl
cmc
ljmp
pop
inc
cmp
or
xor
sbb
adc
mov
sbb
decl
dec
xorb
jle
push
sub
arpl
fsincos
pusha
aam
cs
push
dec
xor
xchg
cmp
push
fwait
xchg
xchg
ret
stos
mov
ss
xchg
iret
xchg
fwait
in
std
cli
scas
pop
sbb
sbb
jbe
lods
leave
int3
pop
in
cmpsb
inc
push
in
xlat
leave
pop
mov
jbe
fcmovbe
jmp
scas
das
adc
ljmp
push
test
cmp
dec
mov
or
push
dec
inc
mov
das
ljmp
sbb
divl
xor
testb
leave
xchg
int
jl
mov
shlb
fistpl
jns
add
aam
dec
imul
jmp
cltd
das
mov
sbb
sub
mov
dec
push
sub
sub
aam
jmp
mov
inc
ret
xchg
mov
rclb
pop
inc
push
rolb
je
mov
ret
imul
mov
add
fstpt
fsubr
cmp
dec
push
lret
pusha
dec
fdivl
inc
fwait
cmpb
stos
push
sbb
cmp
dec
dec
lock
inc
mov
push
popa
xchg
imul
lahf
push
dec
dec
push
ficoml
ret
xchg
clc
in
pop
mov
pop
pop
mov
imul
xchg
ss
push
fildl
es
notb
dec
imul
inc
aaa
lcall
movl
mov
jo
pop
stos
fldenv
das
les
scas
dec
mov
sti
repnz
popl
jb
jns
jnp
adc
dec
imul
dec
xchg
adc
sub
and
jae
mov
push
repz
stos
push
pop
lea
xchg
or
test
adc
lret
jo
adc
mov
adc
or
aaa
sti
xor
xor
ss
pop
or
es
inc
mov
sbb
push
fcomps
push
insb
stos
imul
mov
fcomps
lret
mov
sub
cmp
xchg
or
ret
scas
adc
fldt
pop
xchg
pusha
jp
scas
sbb
push
idivb
sbb
mov
icebp
leave
call
aad
dec
cmpsb
es
dec
subl
outsb
mov
or
and
pop
jne
or
cmpsl
outsl
jae
add
imul
jae
dec
rolb
pop
sbb
lcall
jmp
je
test
or
shll
jnp
or
sub
js
das
pop
cmp
lcall
push
test
fcompl
pop
bound
test
nop
push
gs
mov
dec
cmp
mov
xchg
cli
sub
pop
and
adc
or
cmp
pushf
cwtl
sbb
xor
jl
popa
jecxz
mov
add
mov
dec
cmp
inc
bound
andl
out
xor
movsl
push
cmpsl
sbb
add
jl
dec
dec
mov
jae
adc
hlt
leave
lods
comiss
pusha
aaa
push
or
dec
lods
enter
inc
loop
aas
push
loop
aam
jbe
fcoms
jnp
not
imul
out
clc
jge
js,pn
sbb
cmpb
aad
aad
daa
jmp
movsb
add
push
lock
mov
mov
imul
out
out
pop
aas
xor
sbb
cmp
cmp
sub
adc
lahf
inc
cltd
lock
xor
sbb
xorb
arpl
push
aam
push
cmp
xchg
push
fildl
dec
ficompl
xor
pop
cmp
mov
jecxz
mov
and
mov
mov
mov
inc
mov
imull
pop
push
orl
cltd
mov
stos
inc
push
stos
pop
cmp
jmp
scas
sbb
cwtl
sbb
subl
sti
sbbl
imul
sub
js
inc
scas
mov
jno
add
mov
stos
sti
and
movsl
push
jmp
mov
jne
sub
sub
stc
jno
mov
xchg
mov
xor
or
sbb
aad
std
repz
pop
fisubrl
dec
test
gs
xchg
or
psubq
jecxz
fdivl
ret
sbb
sbb
lahf
fisttpl
mov
icebp
sahf
in
test
hlt
dec
sbb
orb
or
mov
int3
pop
xrelease
out
dec
push
iret
lods
imulb
lea
dec
dec
pop
cmp
in
lods
sarl
enter
dec
mov
into
pop
stc
lods
mov
lea
out
xchg
xor
inc
sbb
sub
adc
leave
and
cli
xchg
into
inc
scas
mov
and
add
jns
in
insb
stos
push
or
in
or
popa
sub
in
out
clc
sti
loop
mov
jne
xchg
or
pop
dec
addr16
stos
xchg
or
gs
aas
out
xchg
scas
addr16
test
sbb
inc
shrl
jp
ret
jl
pop
imul
repz
mov
push
fstpt
pop
dec
jnp
es
mov
cld
insb
hlt
mov
mov
negb
scas
fstps
inc
imul
sub
mov
mov
inc
fcmovb
out
cmp
imul
loop
jo
push
cmp
dec
arpl
and
mov
dec
or
std
in
nop
jno
out
cmp
or
sbb
mov
jmp
mov
inc
push
stos
je
mov
arpl
add
leave
jp
xor
fisttpl
jmp
cmp
cmp
push
dec
sbb
fildl
cmp
mov
dec
loop
cmp
orb
sub
mov
test
add
in
aad
mov
in
inc
and
std
in
jne
int3
sbb
out
fwait
bound
cs
jb
lea
sbb
adc
mov
xor
or
pop
xchg
bound
mov
imul
adc
push
clc
mov
push
int
xor
daa
icebp
stos
iret
sti
sub
out
enter
lret
push
lret
in
xor
jecxz
pop
lea
cmc
clc
xchg
sub
or
icebp
sti
addr16
pop
push
sub
test
out
imul
sbb
lret
ss
adc
sbb
int3
shll
sbb
scas
add
mull
cmp
or
push
cmp
cli
jg
inc
mov
cli
lock
les
add
mov
cmp
sbb
dec
bound
jnp
mov
cmp
cwtl
roll
lret
iret
shlb
test
test
popf
mov
arpl
nop
sbb
inc
xlat
jnp
imul
fwait
sub
mov
inc
jnp
or
aaa
sbb
mov
jnp
add
mov
xor
xchg
int
sbb
shll
sbb
stos
cmp
fstpt
fwait
pop
pop
pushw
lret
sti
sbb
pushf
test
add
fidivl
mov
inc
dec
stos
sub
xchg
test
ja
daa
push
ss
jp
sbbl
rorb
orb
inc
pop
inc
das
fsubs
mov
sub
movsl
pop
fstpt
add
adc
ret
adc
sbb
mov
pop
push
ljmp
sub
sub
loope
lahf
lret
adc
adc
cmp
add
aaa
nop
sub
fcmovnu
sbb
inc
test
jbe
add
rclb
sub
es
mov
xor
pop
dec
and
add
add
dec
scas
sub
push
xchg
js
or
jns
scas
loopne
mov
xor
insb
cmp
out
lret
lock
mov
leave
cs
mov
pop
jl
jmp
sbb
and
sub
mov
xchg
js
sbb
icebp
sub
cmp
aaa
ds
mov
stc
fdivs
stos
repz
mov
je
mov
jge
mov
jmp
sbb
fcmovu
sbb
std
cltd
pop
pop
jmp
or
adc
sub
mov
sbb
mov
and
fisttpl
mov
adc
sub
push
or
jge
mov
mov
and
mov
push
lods
sbb
ficomps
popa
fnsave
cmp
sbb
mov
adc
mov
xchg
cmp
sbb
fisttpl
inc
inc
pop
cmp
subl
fdivrs
xor
or
pop
cmp
adc
fbld
je
mov
shrb
or
into
add
inc
hlt
add
stos
mov
out
sbb
mov
hlt
rcr
xchg
inc
inc
lret
sub
aam
adc
or
hlt
xlat
sub
sub
add
sbb
add
out
mov
and
xchg
dec
or
cmpsl
xchg
xlat
or
repz
in
cmc
fsubrl
jns
cmp
ss
sub
mov
and
cli
cmp
ja
dec
out
test
jmp
inc
mov
and
je
shlb
sahf
dec
jo
test
xchg
or
sub
mov
or
fs
push
or
pop
cmp
mov
out
lods
mov
std
in
mov
mov
inc
sbb
push
cmpsl
mov
lods
dec
cltd
lret
sarb
inc
fdivrp
mov
push
dec
in
lret
mov
fildl
add
pop
push
inc
xchg
pop
cmp
leave
inc
fcmovu
std
mov
xchg
movsl
add
jp
clc
xor
int3
push
sbb
sbb
fidivrl
cmp
fxch
pop
lret
sub
ljmp
xchg
add
rcr
mov
add
loopne
xor
hlt
mov
dec
out
jne
stos
sbb
and
sti
inc
jb
mov
pop
xchg
clc
push
xlat
fwait
mov
jp
mov
add
das
fldenv
lret
pusha
mov
dec
roll
jge
xor
fistl
cwtl
cli
fwait
cmp
test
insb
push
add
xor
fldz
sar
fdivs
adc
adc
cmp
sti
lret
or
pop
cmpsb
mov
aas
and
aad
push
gs
lods
pop
mov
movl
stos
mov
mov
mov
lret
insb
rolb
pop
pop
subl
stos
and
cli
frstpm(287
sbb
lods
cmp
sar
fsts
or
jge
adc
pop
mov
fsqrt
fimull
fdivp
lds
ss
dec
sub
stos
addl
insl
sbb
addl
sarb
insb
mov
shrl
cmp
mov
jbe
mov
push
mov
dec
or
rorb
sub
jge
test
jae
data16
jmp
adcl
arpl
iret
sbb
repnz
or
aam
adc
mov
or
lds
sub
scas
clc
loop
divb
xchg
cmp
sti
cmp
mov
mov
sti
jbe
mov
aad
dec
sub
mov
add
mulps
inc
mov
push
rorl
ljmp
mov
cmpsb
clc
sbb
inc
mov
nop
imul
mov
sub
adc
inc
jae
pusha
ljmp
flds
leave
inc
lret
pcmpeqw
cmc
cmpsl
mov
ftst
sbb
out
xchg
sub
scas
lret
sti
dec
call
sub
sbb
cmp
dec
popf
test
sbb
lds
xor
cmp
ss
sub
shrl
mov
jmp
sub
sbb
push
in
xchg
cmp
fsts
cld
pop
loop
pop
mov
ret
fildl
pop
mov
icebp
ss
shlb
sub
push
es
xor
dec
adc
cs
pop
push
fistps
lahf
scas
mov
push
scas
sbb
inc
adc
dec
inc
dec
and
fsubs
scas
mov
pop
sti
cltd
pop
inc
stos
jge,pn
inc
xor
fldcw
gs
xor
loope
sbb
and
mov
fldt
test
mov
test
jp
mov
inc
mov
ds
mov
adc
inc
mov
xchg
dec
dec
lret
inc
adc
jb
test
repz
stos
lcall
sti
adc
pop
inc
mov
loop
jb
lahf
pop
sbb
ja
pop
mov
sub
push
pop
cld
push
sub
push
push
or
stc
fdivr
js
divl
push
fcomps
xor
or
jle
pusha
in
jo
cmp
fistl
mov
js
cwtl
cmp
xchg
lahf
ja
xor
push
inc
adc
mov
push
sbb
ret
pusha
add
dec
pop
mov
leave
lahf
fistpl
dec
jg
sub
xor
rcrl
jmp
pop
jne
or
and
push
dec
sub
dec
mov
fs
jge
shll
mov
cmp
sbb
adc
pop
jmp
movsb
fistpl
cmp
xor
aaa
repnz
adc
cmp
cli
xchg
xor
mov
and
add
push
pushf
mov
dec
adc
data16
fwait
enter
pop
ret
daa
cmp
shl
pushf
scas
mov
push
mov
mov
mov
stos
aad
loope
stc
adc
mov
mov
jno
mov
xchg
in
movsl
lret
jbe
mov
lret
ss
scas
sbb
fistpl
je
imul
inc
pusha
push
xchg
mov
rclb
jecxz
stos
mov
inc
and
sub
sbb
push
in
inc
xchg
pop
jmp
lods
mov
dec
fcmovnbe
cmp
sub
fsts
mov
fcomps
cmpxchg
or
dec
add
add
pushf
es
cli
adc
ljmp
ret
out
pop
dec
or
xor
dec
sahf
imul
push
inc
test
push
cwtl
xchg
xor
jbe
adc
sub
push
add
out
outsl
sub
xchg
in
sarl
xor
cmpb
adc
fists
mov
xchg
add
ljmp
mov
mov
mov
or
arpl
and
imul
add
mov
xor
fadds
daa
mov
fcoml
cmp
adc
mov
sbb
and
xor
ss
repnz
out
cli
push
sbb
xlat
and
imul
jle
cmpsb
cli
lret
inc
push
push
cmp
dec
mov
test
dec
ds
dec
fs
push
jno
and
aaa
cmpsb
mov
cmp
sbb
pop
sub
add
je
jmp
xchg
adc
loope
leave
lock
sbb
std
scas
jmp
lret
lock
pop
pop
cmp
mov
mov
cmp
cmp
jns
push
test
aas
push
icebp
out
ljmp
stc
mov
call
sub
cmp
dec
ficoms
xor
push
cltd
push
pop
lahf
mov
push
fnstenv
stc
xor
sub
dec
push
cwtd
test
xor
mov
jae
arpl
jb
ja
adc
ror
push
sbb
hlt
es
push
hlt
mov
sbb
push
fimuls
sti
xor
out
jl
xchg
test
icebp
outsl
sbb
mov
lods
jns
push
cmp
cmp
ss
push
push
xor
cmp
add
push
mov
fnstsw
testl
sbb
xchg
adc
xlat
or
roll
fcomi
dec
inc
push
dec
push
rcl
pop
adc
jo
push
inc
sbb
mov
adc
adc
pop
std
ret
add
shll
mov
jle
test
imul
xchg
add
sti
cmp
stos
repz
pop
dec
popa
cmp
and
es
and
pop
adc
push
dec
ljmp
popa
sub
in
rcll
std
fdivr
dec
ss
outsl
loop
pop
jmp
mov
aaa
mov
push
pop
cmp
and
lahf
mov
aad
sub
xor
clc
test
aad
adc
pop
sbb
sahf
xor
xor
rorl
jmp
fldt
push
push
xor
push
sub
mov
add
fwait
stc
mov
jns
sbb
test
xchg
mov
dec
popf
mov
pop
dec
fidivrl
xor
mov
mov
mov
sarl
enter
das
fstpt
mov
jecxz
leave
cltd
js
mov
add
hlt
lods
add
arpl
sub
xchg
push
dec
cs
outsl
jnp
je
idivl
scas
push
scas
or
mov
imul
jbe
sbb
stc
push
xchg
sahf
cwtl
add
out
mov
pop
push
daa
mov
add
sbb
cmp
mov
js
inc
sub
push
cs
fisubrs
sahf
lods
int
rolb
jnp
test
outsl
das
test
push
shrb
scas
xchg
inc
push
imul
add
jno
sbb
test
movsb
mov
pop
push
pop
mov
dec
sub
adc
incb
cmc
out
sti
fs
xchg
stc
and
testb
pop
mov
push
and
inc
mov
inc
cmpsl
inc
insb
lea
mov
sub
adc
stc
mov
jp
cmp
mov
out
testl
sbb
fldcw
insl
jb
mov
add
pop
sbb
movsl
sbb
cld
lcall
mov
and
jmp
repnz
es
lahf
xchg
push
je
out
mov
shll
out
lret
dec
add
stos
and
mov
xchg
jae
pop
insl
jge
fiaddl
cmp
pushf
loopne
mov
fs
jl
pop
iret
adc
sbb
pop
ds
cld
dec
and
mov
xor
inc
mov
sbb
arpl
rep
dec
dec
xlat
jl
sbb
sbb
push
push
mov
sbb
sbb
frstor
mov
sbb
pop
xchg
inc
sbb
sub
cs
and
lcall
mov
dec
push
mov
popf
aad
outsl
mov
subb
cmp
adc
pop
iret
fidivrl
pushf
add
popf
cs
lahf
fsubrl
jmp
fmull
jle
shr
or
adc
sub
dec
mov
mov
and
outsb
cmpsb
test
xor
jge
cltd
inc
leave
cs
psllq
sbb
in
adc
imul
xchg
sbb
int
jne
lret
xchg
mov
pop
aam
popf
push
xchg
sbb
subb
dec
sbb
lock
mov
sbb
gs
outsl
xchg
pushf
xchg
mov
push
jmp
ret
test
rorl
sub
cmp
push
push
mov
and
jmp
jnp
bound
xor
sbb
push
daa
adc
add
push
popf
out
add
outsl
fsub
mov
inc
inc
btcl
push
adcb
data16
jmp
imul
mov
je
aad
mov
xor
adc
push
fidivrl
jg
mov
leave
pop
adc
mov
lret
out
cmc
es
sarb
out
sub
jmp
xchg
sti
push
jecxz
inc
cmp
sbb
lret
sti
in
jl
pop
mov
repnz
out
arpl
idiv
and
inc
adc
fistl
sbb
pop
push
enter
jg
push
hlt
ljmp
aas
test
rcl
dec
adc
iret
inc
sbb
push
pop
push
aam
fstpt
cli
loop
cmp
fnstenv
adc
loopne
in
mov
test
or
pop
js,pn
js
lods
std
lret
scas
sbb
ficoml
sub
dec
push
dec
add
cmp
dec
dec
pop
mov
adc
and
adc
push
add
xor
in
fcmovbe
jnp
in
ss
icebp
ficomps
ds
clc
push
dec
mov
pop
decb
jb
mov
pop
lahf
adc
outsl
add
loopne
push
lret
adc
nop
pop
shl
jmp
decb
pop
sbb
pop
sbb
fwait
adc
and
sti
addr16
ja
ss
adc
push
mov
or
push
lds
sbb
jp
push
mov
mov
mov
mov
mov
mov
mov
imul
sub
out
ret
dec
xchg
lcall
jns
fsts
loope
test
sub
ret
jge
cmp
push
stos
sub
outsl
outsb
push
lahf
inc
mov
stos
inc
cmp
push
shrb
xchg
mov
out
fwait
mov
cmpsl
fistpl
adc
and
enter
adc
cmp
mov
push
mov
in
sbb
pop
sub
sub
cmp
ret
jb
push
add
sub
pop
fmuls
repz
dec
fs
mov
roll
cld
inc
outsb
cmp
xor
and
sti
sbbb
push
push
and
mov
lahf
call
lea
mov
xor
dec
sub
xchg
or
add
adc
dec
add
clc
jp
ds
sbb
lods
pop
sub
sub
or
std
enter
cmp
mov
mov
sbb
jle
cmp
mov
adc
sbb
cmc
mov
ljmp
mov
xchg
fcmovnu
add
pushf
std
adc
bound
push
jp
insb
out
nop
ja
incl
push
push
mov
inc
mov
adc
sub
add
pop
shlb
mov
mov
sbb
adc
mov
xor
mov
inc
mov
insl
pop
out
mov
lret
inc
ljmp
lds
faddl
mov
cli
movsb
addb
lret
cmc
fidivs
xlat
les
daa
mov
dec
mov
lock
popa
mov
ss
add
enter
pop
dec
xor
nop
sahf
fstpt
or
cmp
icebp
or
jno
mov
insl
pop
dec
xor
xchg
and
jns
rcrb
mov
lret
adc
xchg
mov
sti
jns
loopne
rol
mov
lods
lods
sub
sbb
mov
add
mov
les
outsl
cmp
add
adc
negl
mov
adc
jnp
movsl
sarb
lods
inc
icebp
cltd
fldcw
lret
fsubrl
and
sti
cmp
adc
loope
fmuls
jmp
mov
notb
pop
pop
lret
and
lods
inc
push
xchg
xchg
inc
ret
mov
jmp
mov
mov
ljmp
cld
adc
adc
push
push
adc
sahf
push
mov
lock
in
in
pop
dec
pop
cmp
mov
jo
xlat
lcall
std
iret
xchg
pusha
jle
jbe
push
inc
or
fcoms
add
es
mov
mov
outsl
inc
cltd
or
sbb
movsl
in
mov
hlt
sub
sbb
popl
insl
iret
add
dec
and
mov
lods
inc
shl
cmp
add
sahf
rolb
ds
ljmp
loop
inc
shlb
ss
dec
leave
lock
fiadds
int3
xchg
loope
shrl
add
pusha
std
xor
sbb
outsl
sbb
push
fsub
cmp
pop
imul
fisubs
sbb
or
push
loope
imul
dec
add
repz
xor
lcall
add
push
mov
mov
xchg
in
scas
std
pop
sub
xchg
inc
ret
cmp
dec
popf
jecxz
xor
scas
mov
pusha
div
hlt
fstpt
out
inc
pop
or
mov
xor
xor
pop
lret
pop
loope
mov
sbb
sbb
xchg
mov
popf
rolb
cs
pushf
sbb
cld
mov
add
jnp
lds
or
test
cmp
mov
cli
scas
dec
and
lea
inc
pop
or
pshufw
lea
jbe
nop
or
mov
pop
jl,pt
xchg
adc
pop
pop
dec
pop
adc
call
cwtl
negl
test
inc
inc
shlb
out
bound
daa
mov
dec
mov
popf
cmc
shll
dec
fwait
push
inc
mov
xor
mov
mov
cmp
lods
clc
ja
cmp
mov
shrb
inc
std
nop
mov
out
adc
xlat
sub
sbb
outsb
xchg
nop
jb
cmp
out
lods
jne
jnp
lcall
jp
add
pop
mov
push
test
stos
dec
fisttpl
fstl
mov
add
xor
cmpsb
and
xor
add
push
mov
lret
push
cmp
or
cwtl
bound
mov
sbb
dec
mov
xor
xor
addr16
sbb
sbb
call
arpl
xchg
fcomps
inc
xchg
leave
ss
push
pop
cmp
movb
sbb
mov
dec
cmp
lgs
fwait
mov
push
outsl
aas
mov
or
popa
sub
xlat
fldl
lret
push
pop
pop
jns
icebp
mov
aad
roll
rol
xchg
dec
sub
icebp
aad
cmp
es
lods
out
gs
gs
mov
xor
sub
mov
dec
push
out
loope
mov
pushf
mov
out
push
mov
stos
mov
push
xor
or
mov
adc
or
addr16
mov
les
sbb
pop
jns
ret
and
pushf
xor
cmp
adc
aaa
inc
mov
dec
ds
or
push
add
lcall
and
sbb
jno
push
mov
sbb
pop
mov
mov
push
imul
subb
xor
arpl
mov
cwtl
clc
in
fildl
sbb
adc
mov
fistl
cmp
mov
add
inc
cmp
aaa
and
sbb
sti
xor
push
push
aaa
push
aam
push
jl
mov
mov
pop
fstps
mov
adc
nop
pop
arpl
enter
mov
test
cwtl
push
push
sbb
cmp
jb
jle
dec
popa
arpl
xor
inc
mov
cmp
or
mov
or
xor
out
or
sbb
lret
pop
lret
adc
sub
mov
inc
jmp
sub
cmp
pop
test
inc
inc
mov
test
imul
mov
cmc
fwait
mov
nop
test
sbb
in
mov
mov
ss
sbb
pop
add
js
cmp
mov
jae
stc
sub
sbb
mov
and
push
sahf
add
fcoms
test
jmp
repz
loope
ljmp
mov
ds
jno
inc
and
sub
inc
imul
cmp
int
mov
pop
xchg
xchg
jp
push
jnp
aas
cmp
stc
insb
xor
ss
push
mov
push
lcall
leave
xchg
cmp
pop
mov
fsin
imul
mov
and
dec
inc
mov
shrl
lret
mov
icebp
xchg
cmp
pushf
sbb
es
push
test
pop
or
adc
cli
xor
and
or
and
pop
mov
add
and
ss
cmc
cmp
mov
inc
pusha
pop
fwait
sbb
xor
inc
and
stos
cwtl
dec
fistl
cld
lea
jnp
sub
aad
test
push
mov
std
test
add
dec
cmpsl
inc
xor
or
push
rcrl
and
mov
adc
es
jae
fwait
outsl
lea
imul
lcall
test
iret
cmp
sbb
adc
aad
xor
adc
xlat
ljmp
stos
data16
dec
push
iret
cmp
jns
xchg
bound
out
ss
mov
shl
test
dec
xchg
les
das
inc
stos
popa
cltd
pop
out
nop
iret
sub
icebp
pop
pop
dec
fcoms
sbb
sbb
movntq
xchg
js
pop
ss
cs
mov
xchg
aaa
inc
rcrl
sbb
enter
pop
push
ds
xchg
ret
adc
and
xchg
ja
js
xchg
das
adc
push
lods
jge
pop
adc
ja
dec
push
sbb
test
pop
out
fimuls
sbb
ret
pop
pop
cld
stos
cmp
push
adc
lret
scas
movlps
pop
add
stos
out
mov
jp
sbb
jle
in
adc
aaa
pop
lcall
dec
push
cs
add
jl
mov
sbb
pop
scas
inc
fcoms
dec
add
inc
daa
mov
pop
sub
sub
xlat
xor
pop
inc
xorl
inc
lret
cmp
enter
sub
inc
ret
adc
mov
add
mov
jp
push
sbb
mov
adc
xchg
les
imul
test
clc
lret
bound
sub
mov
mov
pop
jge
mov
sub
xchg
and
clc
js
sbb
pop
pop
dec
cs
jo
loop
data16
push
xor
arpl
dec
xlat
sahf
push
enter
into
push
cmp
incb
fcomp
jb
cld
imul
pop
inc
inc
cmp
cmp
fxch
incb
sti
mov
repz
pop
std
cmp
mov
xor
test
enter
and
dec
push
inc
sbb
call
add
pop
imull
sbb
mov
icebp
dec
aas
cmp
cmp
mov
sbb
pop
xor
cltd
and
inc
mov
dec
and
es
mov
xchg
mov
dec
into
cs
outsl
fdivl
dec
enter
ds
nop
or
push
and
dec
push
sbb
pop
mov
and
mov
shlb
adc
lret
rcrl
jmp
xlat
cmp
push
jmp
xchg
ds
xlat
push
faddl
dec
test
arpl
cltd
adc
mov
testl
mov
push
adc
es
ljmp
jl
cltd
push
bound
pop
addr16
addb
push
mov
and
pop
mov
cs
adc
adc
cmpsl
inc
insl
cli
mov
pusha
aad
xor
pop
push
sub
test
inc
fstp
arpl
or
lods
ret
push
fdivrp
xor
add
out
push
xchg
imul
test
data16
and
fstl
ss
sub
jnp
inc
dec
testl
or
int
test
mov
fwait
dec
or
cmp
lcall
mov
loop
cmp
add
push
xlat
fdivl
popa
push
and
xchg
out
mov
insb
xchg
sbb
test
sbb
aaa
xor
inc
sahf
jno
mov
cmpsb
cmp
stc
adc
test
push
pop
into
sub
dec
dec
jnp
imul
push
xor
mov
mov
jl
adc
pop
adc
sbb
or
ja
es
push
lret
nop
loope
stc
sub
imul
sbb
ljmp
mov
rcll
xchg
cmp
aad
in
pop
mov
mov
inc
movsb
dec
hlt
xchg
pusha
add
out
inc
cs
ds
inc
or
pop
or
cmp
pop
lret
xchg
adc
push
mov
mov
push
jno
int3
mov
jae
outsl
and
mov
pusha
jnp
dec
and
sbb
test
mov
xchg
sbb
dec
stos
mov
addr16
mov
stos
dec
cmpsb
xchg
pushf
mov
movsw
scas
stos
mov
mov
xor
mov
cmp
aas
xchg
xor
adc
andb
test
xlat
fistl
jae
test
xor
mov
mov
mov
popf
bound
lods
mov
xchg
inc
rorb
cmpb
xchg
stos
mov
sub
mov
push
dec
xor
cmc
call
dec
push
push
js
inc
dec
fwait
mov
push
sbb
pop
aaa
cmp
movsl
iret
hlt
add
inc
insb
push
mov
addb
in
fcompl
lcall
es
arpl
xor
inc
xchg
repz
xor
pop
sbbl
or
xchg
xchg
pop
ret
jmp
inc
adc
clc
jae
fcmovnb
bound
xchg
hlt
popl
dec
arpl
push
jge
xchg
sbb
cltd
loope
pop
cmpsl
push
or
adc
mov
mov
inc
pop
mov
jecxz
xor
dec
push
sbb
xchg
mov
incb
iret
icebp
test
cli
data16
mov
push
or
lret
pop
in
fs
jbe
inc
inc
xor
mov
mov
sub
and
icebp
outsl
inc
cwtl
xor
lods
lock
mov
jmp
jmp
pop
xchg
or
in
mov
pop
push
jl
mov
or
push
outsl
or
push
popf
sub
cmc
and
cld
lods
adc
pusha
inc
xor
mov
pusha
sub
dec
cwtl
incb
lds
mov
pusha
jae
add
mov
stos
gs
fisttps
sub
xchg
test
repz
cmp
mov
js
test
lea
repz
xor
insb
push
scas
ljmp
jle
lods
scas
loopne
rcll
xor
dec
sbb
xorl
jp
fisttpll
xlat
mov
adc
lret
dec
or
push
dec
test
rorb
pop
dec
jnp
popa
cmp
fdivr
sti
cltd
test
cmp
or
leave
push
mov
mov
jo
outsl
cmp
cs
ljmp
mov
xor
adc
or
mov
and
jl
rcll
aaa
outsb
lret
repz
xor
gs
jg
lea
push
fimull
ffreep
or
push
jmp
cs
out
or
loop
push
insb
push
dec
int3
pop
sub
dec
mov
fisubl
jmp
sti
aas
cmp
cs
insb
pop
sbb
sub
clc
add
fsub
xor
xchg
cmp
out
and
fwait
inc
out
pop
xchg
stos
dec
sti
in
jmp
dec
dec
jp
jl
dec
sub
jb
push
xorb
pop
loopne
aaa
push
fxch
lock
repz
adc
ret
jp
std
xchg
popf
das
mov
pop
sbb
js
xor
cltd
pop
inc
inc
gs
cwtl
ds
out
mov
pop
push
divl
ja
aas
shlb
add
je
fistpl
dec
cmp
rcrl
push
lods
dec
push
dec
icebp
push
sub
sub
sbb
testl
lods
es
mov
xor
addr16
or
jp
push
inc
xor
addr16
cmp
xor
lods
repz
iret
outsl
les
adc
ss
xor
sub
mov
fistpl
push
fisubrs
popa
stos
das
adc
pop
pusha
jg
jno
or
jp
lcall
rcrb
pop
dec
mov
jl
cmpb
test
jb
std
adc
fisubrs
adc
fimuls
mov
pop
inc
fisttps
add
push
dec
pop
xor
decl
pusha
dec
aaa
out
test
lods
test
cltd
xchg
or
enter
xor
push
mov
jg
inc
inc
lret
push
xor
adc
and
inc
mov
push
jo
cs
cltd
scas
or
cmp
fisubs
sti
insl
mov
inc
mov
scas
ficoms
mov
sub
inc
pavgw
sbb
push
test
sti
repnz
lods
addr16
inc
sti
pop
push
sub
ja
pop
adc
or
sub
or
adc
scas
pop
or
test
adc
aas
mov
push
nop
adc
imul
stos
mov
insb
cmc
sbb
or
nop
lret
inc
pop
int3
stc
pop
scas
scas
pop
comiss
sbb
xchg
fidivrl
icebp
sub
mov
loopne
dec
mov
pop
repnz
addr16
pop
jmp
push
stos
sbb
xchg
lret
jecxz
dec
mov
pop
sbb
jnp
dec
cmp
push
sbb
push
cli
mov
mov
and
fwait
adc
cwtl
lahf
cmp
fs
sbb
jg
hlt
stc
cmp
mov
jno
jae
mov
adcb
pop
int
cmp
push
push
bound
cmp
leave
insl
mov
add
inc
in
insl
xor
aas
push
jbe
cmp
pop
loopne
push
mov
mov
push
dec
dec
cmp
push
mov
xchg
xor
xor
sbb
or
and
jmp
or
jns
movsl
pop
sbb
or
aad
sub
sbb
xor
sbb
and
aad
sbb
jmp
sbb
fld
enter
movsb
adc
jle,pn
js
jnp
sti
mov
dec
icebp
sbb
mov
xchg
js
aad
nop
or
fcomps
jae
mov
sbb
mov
dec
mov
sbb
testl
mov
push
xor
daa
jo
adcl
mov
sub
dec
js
and
xchg
mov
in
cmpsb
cmpsl
shlb
shl
pop
push
mov
sub
mov
mov
inc
lods
bound
aad
js
test
and
mov
sub
pushf
mov
add
loop
cmp
and
int3
stos
loope
test
in
mov
das
scas
sbb
mov
adc
push
sub
in
jnp
inc
lret
add
loop
jg
xchg
lret
mov
stc
and
ret
dec
bnd
test
pushf
mov
push
popf
pop
add
aad
in
mov
sub
fists
aaa
sbb
inc
enter
xchg
sti
cmp
or
cmp
lahf
lods
pop
cli
add
adc
sbb
xor
xchg
inc
pop
daa
shll
adc
js
cwtl
inc
dec
jmp
jg
mov
mov
dec
mov
adc
mov
ds
fs
out
fsubrl
sbb
repnz
mov
sbb
in
icebp
pop
mov
fs
and
xchg
fwait
pop
gs
push
ljmp
out
xor
fiadds
adc
jle
xor
fcomps
adc
add
imul
cmpsb
sbb
dec
xor
jg
pop
xchg
cltd
add
insl
imul
insb
xchg
dec
lods
cmp
mov
push
adc
adc
pusha
cmp
jnp
jg
sbb
fnstcw
andb
mov
pop
cmp
addr16
icebp
pop
mov
inc
cmp
fwait
out
js
inc
cmp
push
and
jge
mov
cmp
mov
mov
shl
fs
stos
pushf
sbb
add
lea
dec
fisubrs
jg
jge
pop
push
cmpsl
push
push
bound
add
cmp
jno
mov
movsb
divb
js
es
ror
pop
and
xchg
xor
clc
xor
cmc
lret
mov
cmpsb
js
dec
jmp
push
daa
fsubrl
jb
sbb
cmp
mov
stos
gs
mov
test
cmp
or
cld
pop
adc
jne
xor
arpl
mov
imul
adc
jge
push
out
fsts
jge
dec
add
iret
fisttpl
mov
pop
movsb
jge
jge
rcr
sub
stc
ss
fdivp
xchg
pop
jo
scas
lea
das
test
mov
int
add
pusha
mov
lcall
out
inc
in
mov
jmp
sub
scas
lods
dec
das
cmp
jmp
sbb
mov
sbb
sbb
arpl
sti
xor
loopne
loope
scas
popf
nop
xchg
in
data16
insb
xchg
xchg
in
adc
pop
mov
dec
cmp
sarb
dec
cmp
jle
ljmp
push
add
shll
addr16
inc
out
shr
cmp
imul
jle
mov
scas
cwtl
mov
dec
lods
add
movsl
int
cmp
adc
or
lret
aas
cs
dec
and
and
cs
add
pop
mov
cmp
xchg
sub
icebp
cwtl
or
or
test
xor
adc
fmull
adc
or
inc
mov
jnp
mov
stos
add
movsb
lods
sub
ret
push
push
pop
lods
cmc
cmp
jno
data16
xchg
push
addl
fidivs
fimull
loop
sub
cs
and
adc
add
adc
fsubl
shr
jnp
mov
cmp
cmp
pop
aam
jge
inc
rcrb
push
fistps
stos
cmp
mov
cli
mov
cltd
arpl
sbb
push
mov
int3
or
sbb
hlt
pop
cmp
pop
xor
sbb
jmp
ret
scas
je
std
sub
mov
mov
mov
leave
ds
repz
cmpl
cmp
repnz
cmp
in
and
cmp
inc
or
sub
loopne
movl
out
je
in
inc
sbb
pop
sub
adc
rorb
hlt
test
cmc
mov
and
call
jnp
repz
adc
mov
mov
pop
ljmp
repz
jle
inc
mov
fldl
cmpsl
dec
and
adc
rclb
scas
push
push
aas
ds
push
mov
out
push
pushf
xor
stos
pop
xchg
mov
repnz
pop
jle
inc
daa
jbe
movsb
cs
sbb
mov
mov
dec
xchg
pop
outsl
outsl
pusha
ret
out
pop
and
pop
and
mov
dec
loopne
cmp
inc
jnp
sub
xchg
popf
mov
pop
ja
mov
scas
in
sbb
adc
inc
sbb
and
jl
dec
adc
fs
std
repnz
and
repz
lods
cs
sbb
test
pop
mov
sub
stc
ficoms
cwtl
xchg
xor
and
add
mov
sbb
incb
mov
fisttpl
stc
xchg
daa
mov
mov
jae
mov
mov
in
lods
inc
iret
push
jmp
sub
or
lods
cmpsl
sti
pop
sbb
dec
dec
pop
dec
add
leave
jbe
xor
push
data16
ds
popa
negb
shlb
xchg
or
mov
inc
mov
mov
adc
lret
das
add
cmp
rcrl
mov
scas
add
shll
rcr
inc
in
outsl
pop
subb
pop
fstpt
mov
mov
inc
pop
push
cmp
mov
and
cmp
cmp
repnz
popf
mov
data16
fs
jp
pop
fstl
xor
movsl
or
cwtl
mov
or
add
inc
dec
or
jmp
jle
stc
push
push
push
orb
out
inc
ja
scas
adc
cmpb
add
jae
mov
ss
mov
push
mov
push
iret
cmpsl
xor
adc
stc
fnstcw
sahf
orl
dec
scas
clc
jmp
lret
adc
or
mov
add
sbb
adc
dec
lcall
inc
das
xor
mov
pop
es
out
rcr
cmp
push
xlat
mov
sub
es
adc
push
shl
cmp
icebp
cmpsl
das
ds
xchg
and
and
add
fsubrs
pop
movb
push
mov
cmc
jge
dec
or
inc
in
inc
fisubrs
decb
xchg
cmp
push
hlt
fmull
imul
testb
cmp
mov
cmp
loop
xor
stc
movb
movb
mov
scas
and
ss
mov
stos
mov
push
shr
jmp
cmp
out
mov
cmp
pop
imulb
xchg
fisubrs
pop
loope
xor
rclb
mov
shl
fdiv
sbb
sbb
sbb
nop
cmc
cli
test
cmpsl
lret
notl
test
pop
mov
outsl
dec
and
push
push
push
xor
das
xchg
int
mov
cmp
push
xor
movsb
mul
inc
mov
ss
push
scas
mov
push
mov
mov
pop
aas
jle
filds
add
bound
push
js
mov
mov
fldt
ret
jecxz
or
jp
adc
cmp
test
cmpsl
and
pop
movsl
dec
jmp
mov
cmpl
sub
and
add
call
les
mov
add
inc
cltd
mov
mov
test
ja
arpl
imul
ljmp
jbe
or
adc
cmp
test
mov
mov
mov
ret
mov
loope
jecxz
xor
out
cwtl
jl
adcb
repnz
cli
or
inc
cld
js
lods
xchg
pop
cmp
mov
add
mov
pop
push
cmp
aaa
dec
arpl
push
adc
inc
outsl
in
ja
dec
pop
lcall
fistl
lds
lahf
adc
fisttps
sar
pop
std
ficomps
movb
std
mov
outsb
cmp
inc
cmp
cmp
mov
imul
mov
fcoml
sbb
mov
mov
icebp
and
push
jge
das
nop
pop
push
repz
mov
cmp
loope
mov
xor
add
push
outsl
lods
mov
aam
push
test
sti
pop
divl
inc
jae
scas
xor
sbb
cwtl
mov
mov
js
loop
mov
push
and
sbb
and
out
mov
adc
inc
jns
insb
rcrl
insb
mov
fs
push
jbe
pop
xchg
adc
fisubrs
sub
jge
addr16
mov
mov
mov
add
out
pop
adc
popa
mov
fsubrs
xchg
mov
push
fsub
cmp
inc
fdivp
cmp
cmp
sti
xchg
repnz
faddp
add
jmp
hlt
sbb
xlat
scas
movsb
cmp
inc
xchg
sti
out
mov
movsl
xchg
cld
dec
mov
adc
out
cmpsl
pop
inc
lret
jo
fmull
in
jle
fwait
bts
ds
clc
mov
jg
rclb
cmp
es
aad
scas
or
mov
aas
cmpsb
pop
jae
fistl
jbe
xor
mov
add
push
pop
xchg
mov
mov
fildl
add
mov
pop
xor
pop
mov
and
push
cmp
dec
fcomps
jle
mov
jge
fcomi
cmp
push
xor
aam
jmp
fisubrs
stos
mov
mov
pop
cwtl
fcoml
jmp
cwtl
xor
insb
rorb
dec
in
mov
dec
and
jmp
hlt
fcoml
sub
lahf
popf
sbb
jne
ret
pop
hlt
inc
sbb
push
test
mov
or
jne
test
mov
sub
add
push
push
fcmovnbe
je
loop
lds
mov
or
testb
jno
cltd
xchg
aam
loopne
bound
fwait
dec
sub
mov
mov
cmp
repnz
repz
cmp
push
in
or
and
jo
mov
je
dec
imul
mov
mov
xchg
add
mov
or
jp
lret
pop
xor
lods
outsl
mov
push
xchg
popa
inc
inc
nop
sub
sarl
mov
das
mov
push
fldenv
mov
xchg
repnz
in
arpl
cmp
dec
xchg
push
or
and
stos
sbb
lods
and
fistl
or
jmp
stos
stos
mov
mov
sub
sbb
add
pop
lea
push
fnstenv
pop
jge
scas
out
or
and
lods
inc
pop
fnstenv
inc
add
dec
dec
insb
loope
adc
bnd
cltd
mov
pop
xlat
int3
cmp
dec
inc
push
push
rorb
and
mov
cmp
and
mov
je
sbb
test
ds
cmp
jb
rcl
pop
sbbl
lcall
mov
outsl
pop
outsl
popl
dec
mov
xor
xchg
dec
pop
xor
mov
cmp
dec
mov
pop
jp
scas
sub
xor
sbb
add
jmp
xor
xor
nop
mov
jg
dec
sbb
pop
mov
mov
push
xchg
jg
fldt
pop
insb
and
jg
push
xor
divl
shrl
fwait
inc
cli
push
mov
sbb
mov
jmp
outsb
dec
inc
push
mov
aam
imul
lret
shr
or
mov
mov
adc
fiadds
dec
sarb
cmp
imul
pop
mov
das
scas
popa
fwait
cwtl
fwait
dec
cwtl
mov
jp
adc
orb
sarb
pop
xor
xor
push
inc
inc
dec
sub
push
mov
mov
push
lods
adc
pop
push
insl
xchg
push
push
jl,pn
add
lods
add
sub
mov
jnp
repnz
inc
push
push
repnz
sbb
xchg
inc
outsl
js
mov
dec
push
sqrtps
and
mov
mov
subb
scas
sbb
insl
inc
push
jo
fmull
xchg
push
xor
mov
les
pusha
sub
xchg
popa
and
jmp
adc
pop
or
cmp
nop
xchg
sub
or
jo
sbb
or
xor
mov
pop
pop
lret
push
ljmp
movsb
push
push
adc
aaa
or
scas
inc
fmul
loope
mov
fs
ja
push
xchg
dec
mov
outsl
fdivrl
xchg
pop
pop
xchg
dec
sbb
ljmp
jb
popa
daa
xlat
into
movsb
popa
sub
ret
mov
mov
xor
push
je
sbb
ds
xor
sbb
bound
push
and
dec
aad
out
ret
lods
out
negb
and
push
mov
dec
sti
shrl
push
push
aas
aaa
mov
aad
jmp
mov
int
cmc
push
jne
adc
xchg
jb
mov
mov
dec
nop
mov
push
add
test
pop
push
add
stos
mov
sub
stos
imul
and
push
sar
cmp
sbb
cwtl
mov
movsb
test
mov
lret
inc
or
rorb
fisubrl
mov
mov
das
in
iret
repnz
into
jle
data16
xchg
add
fsubr
jne
dec
dec
fwait
mov
stc
xor
push
fs
das
inc
sub
adc
ss
insl
pop
mov
adc
lcall
lds
inc
cs
inc
push
sti
dec
xor
push
jae
cmp
dec
movaps
fdivl
sub
add
cmpsl
sar
dec
popf
push
aas
push
js
fists
pop
cmp
data16
xor
adc
decb
test
test
jns
or
jo
shlb
ret
mov
sbb
pop
in
xor
dec
pop
dec
outsl
in
dec
dec
inc
std
in
sub
mov
jp
jp
xchg
aas
dec
mov
pop
in
sti
lahf
sbb
and
push
jmp
or
aas
push
xchg
adc
popl
in
repz
jb
pop
lahf
sbb
adc
push
xchg
lods
add
idivb
push
mov
nop
pushf
and
adc
adc
xor
fiadds
sub
cmp
out
dec
cmp
idiv
xor
adc
cmc
or
xchg
adc
mov
push
push
movsb
sti
dec
fs
dec
cmp
push
inc
xchg
pop
cs
lcall
sbb
dec
add
inc
cmp
push
popf
arpl
mov
inc
cwtl
mov
add
arpl
imul
fwait
push
xchg
aad
pop
mov
cmpsl
insl
pop
push
xchg
aad
push
add
jne
icebp
lcall
jns
xchg
mov
out
ficoms
inc
and
push
lock
mov
xchg
mov
pop
inc
jnp
add
xchg
int3
aam
sub
idivl
lds
ret
jle
cld
icebp
sbb
int3
ss
and
mov
sub
fsub
call
pop
popa
sti
lret
shrl
fisubs
cmp
pop
sub
pusha
or
ds
push
jmp
adc
test
mov
in
jne
xor
and
jns
mov
sub
add
pop
xchg
jbe
decl
fbld
add
pop
jecxz
inc
cmp
sbbb
mov
mov
push
insb
insl
fstpt
pop
int3
jae
fidivs
cmp
sub
iret
out
lods
das
push
cmp
lods
sbb
int3
xchg
mov
sub
push
fists
iret
sub
cs
outsb
adc
incl
test
daa
jmp
out
mov
sub
outsb
and
mov
adc
push
adc
sub
jns
dec
inc
sbb
inc
dec
fisubs
ret
pop
inc
aad
mov
inc
mov
cmp
lret
xlat
xor
xor
adc
rcrl
add
dec
ljmp
mov
sti
dec
sbb
mov
inc
ret
cli
xor
mov
inc
dec
iret
sahf
or
xchg
in
imul
push
les
fstpt
xor
sbb
scas
ss
jb
inc
jmp
sub
mov
sub
dec
lsl
inc
ret
mov
mov
mov
lret
dec
lret
fstl
pusha
sub
jp
dec
push
mov
mov
pop
dec
aam
push
cmp
in
stos
mov
mov
pop
sub
jle
ret
loopne
sub
cwtl
adc
push
cmpsb
jo
int3
push
mov
movsl
mov
push
or
pop
insb
pop
pop
cmp
adc
add
fmull
das
in
or
mov
add
dec
roll
push
scas
cltd
add
outsl
mov
dec
pop
mov
cmp
lds
in
sbb
add
dec
cmpsb
pushf
push
adc
mov
into
in
cmp
sbb
icebp
push
xor
and
adc
push
xor
lods
dec
arpl
mov
sub
mov
add
sub
xchg
flds
sub
or
cmp
cwtl
inc
inc
rcl
inc
cmp
push
sbb
lahf
cmpsl
mov
xchg
stos
lock
or
dec
cmp
cmp
jl
cltd
lahf
inc
int
lret
js
mov
enter
mov
fcmovnbe
in
imull
jg
shrb
out
cmp
aaa
aas
or
push
jmp
xlat
in
push
mov
jne
jb
xchg
push
adc
fs
cmp
and
xchg
pop
in
fwait
sbb
mov
cmc
test
pop
adc
ss
scas
xor
pop
mov
xor
faddp
sbb
int3
out
sub
mov
mov
mov
test
bound
out
cmp
loopne
inc
adc
in
push
lds
test
mov
xchg
test
jmp
or
adcb
fisubrs
or
rcrb
add
cltd
data16
rorb
lahf
gs
jecxz
ss
or
inc
fistpl
lods
mov
xor
dec
inc
dec
sbb
pop
ds
or
pop
cmovbe
mov
xchg
imul
stos
inc
dec
inc
xor
mov
cmp
inc
sbb
cmp
sbb
leave
pop
pop
gs
mov
dec
push
pop
adc
push
inc
cmc
inc
std
call
xchg
pop
xchg
pushf
lcall
mov
adc
mov
sub
es
sub
inc
xor
adc
and
sub
in
test
pop
into
pusha
repnz
test
sti
sbb
jae
xorb
mov
stos
aaa
cmp
mov
cmpsb
add
out
dec
push
adc
and
inc
sub
ss
cmpsb
push
pop
xor
xor
jg
scas
push
test
dec
dec
add
adc
aas
out
cmp
pop
mov
cmpsl
cmp
fcom
cmpsl
aaa
jo
das
add
inc
repnz
jns
repnz
outsb
pop
stc
xor
dec
cmp
lahf
lret
in
sbb
test
int
inc
sbb
inc
pop
sbb
mov
inc
pop
fwait
loopne
mov
add
aas
inc
xlat
xlat
mov
inc
fistpl
sti
pop
jp
mov
mov
pop
cmpsl
jl
adc
sbb
xor
jle
mov
jae
jmp
xchg
scas
inc
dec
aam
or
mov
jo
shl
filds
xchg
pop
scas
push
loop
sub
pusha
movsl
adc
addr16
mov
or
mov
xor
cmp
insb
stos
test
out
adc
xchg
rorb
imul
pusha
int3
xor
pop
cmp
or
or
mov
xlat
sarb
jbe
add
popf
mov
jge
lea
sbb
outsl
dec
or
jmp
fsubs
inc
fldcw
pop
mov
mov
dec
xor
push
dec
sbb
add
mov
sub
mov
mov
out
xor
mov
stc
sub
add
sub
sahf
sbb
dec
aad
push
push
add
sbb
das
adc
push
add
fdivp
insb
mov
repz
mov
ljmp
or
inc
cmp
je
jo
mov
push
jnp
sub
xchg
mov
cmp
sbb
out
fistl
orb
out
sbb
lahf
rorb
sub
lret
or
inc
or
cmp
xlat
mov
add
addr16
xchg
sbb
sbb
sub
push
fsts
push
xor
mov
cmpb
mov
xor
cmpsl
inc
mov
push
test
cmp
or
fmuls
cli
cli
xchg
xor
addr16
jb
pop
push
fmulp
fs
imul
imul
cmpsl
ss
cmc
jo
xor
dec
xchg
adc
add
add
xor
ss
dec
adc
out
jl
cmc
fildll
je
aaa
cld
sbb
mov
cs
mov
or
or
push
sti
cmp
ficompl
mov
fcmovb
push
aam
dec
and
lret
mov
icebp
mov
aaa
shll
sbb
adc
out
sbb
xchg
pusha
or
add
fidivrs
test
inc
sub
aad
sbb
dec
dec
jb
dec
add
cmp
and
orl
pop
repz
push
mov
xor
push
inc
cmp
cmp
jbe
push
add
es
xchg
sbb
rorb
add
divb
adc
push
sub
dec
or
adc
stos
mov
adc
and
mov
lahf
data16
pushf
xchg
orl
fildl
arpl
jl
leave
imul
or
or
or
lock
out
xchg
xorl
sub
in
sti
gs
fisubrs
adc
add
or
adc
repz
xlat
jo
sub
sub
testb
push
adc
mov
inc
sbb
ror
dec
lcall
xchg
xchg
cltd
jle
xlat
rorl
mov
or
jnp
add
bound
jnp
or
es
lret
mov
inc
xor
inc
inc
cld
popa
out
inc
leave
jne
and
add
loope
aad
mov
mov
sbb
pop
jae
mov
and
sbb
ds
flds
push
loopne
movsl
fmulp
sub
pop
sbb
call
les
dec
jno
inc
sbb
mov
cmpsl
ffree
dec
rolb
push
loopne
in
and
push
jbe
fwait
lret
or
or
pop
cmp
out
adc
cltd
inc
mov
push
ret
cmp
pop
pop
push
mov
cld
sub
cmp
push
nop
sbb
mov
sti
mov
sbb
xchg
incb
push
mov
add
pop
test
cltd
std
sbb
dec
push
dec
adc
xchg
scas
or
sbb
push
das
or
movsl
je
mov
popa
popf
je
xchg
jmp
iret
xchg
and
sbb
mov
leave
aam
add
or
pop
out
or
xchg
dec
insb
pop
xor
adc
movsl
inc
addl
mov
or
lds
cltd
mov
inc
and
or
ficoms
xchg
dec
sub
jno
cmp
add
xchg
lcall
pop
lods
cmp
sbb
lock
mov
inc
xor
inc
or
mov
add
aad
pop
mov
adc
mov
popl
fimull
mov
add
popa
and
insb
jo
fstpt
std
cwtl
div
jns
sbb
or
pusha
xor
jnp
scas
mov
mov
xor
mov
rclb
repnz
add
sub
imul
stos
add
lea
ss
dec
fistl
sbb
pop
push
mov
aaa
adc
mov
or
or
inc
pop
add
cmp
pushf
mov
pop
orb
loopne
sbb
and
sub
or
faddp
mov
dec
push
add
mov
jmp
and
or
inc
xor
push
fiaddl
or
xchg
aam
xchg
idivl
add
shl
out
fsubr
loopne
add
lds
movsb
imul
add
mov
push
lret
fistl
iret
xlat
fistl
pop
lret
mov
lret
mov
mov
sub
pop
test
pusha
and
imul
adc
sbb
pop
or
ss
push
or
dec
mov
pop
shr
movhlps
shll
push
dec
pop
outsl
ljmp
push
pusha
and
dec
stos
mov
mov
fistpll
enter
pop
cmp
xor
mov
dec
stos
dec
mov
cmpsl
sub
mov
icebp
clc
stos
lcall
and
sbb
cs
stos
imul
scas
push
or
stos
inc
imul
xchg
out
jns
mov
je
mov
flds
ja
jecxz
ljmp
fidivs
imul
lcall
add
pop
sbb
fs
cwtl
movsl
mov
mov
jecxz
pushf
lret
or
push
andl
dec
or
repnz
lret
jnp
mov
push
dec
lret
xor
test
xor
fcmovnu
or
insl
fs
push
push
push
dec
arpl
adc
jg
add
outsb
add
dec
or
inc
jle
push
mov
sub
push
add
inc
sbb
clc
inc
or
inc
sti
sti
inc
or
aam
inc
lret
lcall
cmp
sub
lcall
adc
mov
and
lods
adc
or
dec
in
or
sub
pusha
arpl
sbbl
dec
mov
xchg
mov
push
icebp
cmp
imul
inc
je
fsubr
adc
xchg
dec
xor
aaa
out
adc
xor
ficoml
shlb
iret
orl
mov
pusha
out
adc
xchg
push
call
adc
dec
cmp
cmp
rclb
push
fs
shlb
push
orl
dec
xchg
leave
mov
out
xchg
push
push
insb
push
cld
mov
mov
push
enter
enter
cmp
sbb
mov
jmp
pusha
cmpsl
pusha
or
leave
xor
push
add
aad
mov
push
and
lods
sbb
fisttpll
cmpsb
sub
mov
dec
mov
jne
add
popf
push
aaa
rdpmc
into
sub
pusha
mov
dec
or
add
jge,pn
inc
aas
or
xchg
push
mov
pop
or
cmp
jmp
out
in
test
xchg
dec
mov
push
mov
inc
xor
fists
push
lea
inc
lds
jne
add
cmp
mov
mov
push
sbb
adc
xchg
push
jnp
mulps
lods
mov
jb
popa
xchg
in
jae
sbb
push
and
push
adc
rcr
repz
inc
in
sbb
inc
or
dec
xor
push
cmc
xchg
xor
xchg
lds
and
imul
push
adc
negl
add
cmp
jne
pop
sarb
jge
call
jne
jnp
sbb
or
fsubrl
pop
and
jno
shrb
pushf
int3
and
xchg
mov
pop
inc
pop
or
cli
sub
ljmp
add
sbb
jl
mov
inc
mov
jp
inc
mov
sbb
add
test
cmc
sbb
add
push
rol
faddl
fsubrl
pop
cmp
pop
push
stc
mov
cmp
sub
mov
test
lods
rorb
in
cmp
andps
stos
ret
sbb
hlt
and
dec
lret
iret
test
je
cmp
jle
sti
out
in
roll
inc
loopne
movsb
sbb
sub
cmp
xchg
cli
sti
ljmp
push
cmp
cmp
stos
xor
lcall
aad
push
cmp
cmp
les
test
cmp
sub
test
cmp
dec
jnp
dec
mov
cmp
imul
mov
cmp
sarl
clc
cmp
call
sub
jns
xchg
inc
lcall
dec
xchg
cmp
popf
push
mov
xchg
movsl
ljmp
js
push
fcmovnb
inc
sub
sbb
inc
push
adc
pop
sti
sub
inc
xlat
inc
cld
or
sub
pop
mov
xchg
mov
sbb
mov
cmpsb
mov
lods
mov
cmp
or
cld
fwait
mov
dec
mov
stc
das
push
rorb
adc
cli
jnp
jo
out
cmpsl
mov
mov
sbb
or
inc
test
mov
adc
leave
jmp
pop
fsubl
jnp
cs
lcall
int
push
pop
pop
or
jno
cmp
mov
cmp
cwtl
push
das
mov
movsb
rclb
shrl
lds
push
fwait
andb
aad
mov
add
pop
jns
mov
dec
sbb
or
icebp
jmp
or
lcall
xchg
scas
pop
adc
loop
ss
pushf
xlat
xchg
dec
out
or
inc
mov
inc
and
insl
rclb
fwait
xchg
and
pushf
or
mov
cs
les
in
roll
sub
add
adc
inc
mov
cmp
pusha
mov
cs
test
adc
mov
xchg
loop
mov
js
inc
aam
sub
mov
sbb
sbb
je
roll
push
push
adc
repz
lret
daa
lret
sub
int
and
push
pushf
add
pop
mov
push
ret
dec
inc
and
push
pop
fistl
das
pop
xor
mov
xchg
add
jp
push
cli
repz
xchg
cli
or
push
add
and
pop
mov
out
sbb
lret
push
rorb
sub
add
add
dec
xor
sbb
cmp
push
icebp
test
or
loopne
loopne
lret
sbb
xchg
cli
and
sbb
lcall
mov
xchg
inc
popf
sub
jbe
xor
sbb
mov
int
imul
xchg
dec
inc
jns
rorl
test
pop
fdivr
mov
popf
mov
push
xchg
or
xchg
das
xor
dec
xchg
add
cwtl
pop
jo
push
xorb
dec
stos
repnz
jmp
dec
jle
sub
mov
pop
cmp
fdivrs
lahf
mov
nop
pop
out
fwait
cs
push
add
pushf
dec
test
popf
lea
rcr
jge
icebp
dec
sbb
rep
pop
ss
addb
xchg
dec
int3
sbb
neg
pop
or
or
mov
repz
cwtl
pmaxub
push
adc
xor
orb
mov
lock
push
pop
sti
pop
dec
push
or
adc
add
sbb
cmp
fwait
mov
in
cmp
scas
xor
outsl
call
ret
lcall
mov
mov
and
outsb
int
or
and
pop
push
lea
cmp
sbb
dec
mov
adc
fstpt
push
adc
lret
out
pop
xchg
loope
lret
lret
mov
cmp
and
inc
aaa
jg
cmp
or
adc
pushl
cli
pop
cmpsl
adc
enter
jl
add
xchg
cmp
xor
movb
cltd
and
adc
in
or
icebp
lods
rolb
push
aaa
aam
ja
stc
out
pop
lahf
cli
xchg
popf
xor
fldl
fwait
mov
add
xor
mov
inc
mov
lret
or
xor
jl
cmc
sub
inc
mov
es
lret
adc
jmp
pop
mov
scas
pop
xlat
xchg
lret
push
sbb
movsl
mov
cmp
lret
and
pop
cmp
xor
cs
jns
inc
pop
pop
stc
imul
cs
es
xchg
loope
dec
mov
ret
dec
lret
push
cli
pop
adc
xlat
enter
and
pop
mov
mov
mov
aas
xchg
stos
xchg
mov
push
pop
stos
and
dec
and
cmp
xor
adc
into
loope
ret
mov
movsl
sub
mov
push
stos
sub
dec
pop
ret
add
adc
mov
push
fldenv
dec
adc
lock
add
add
ljmp
pop
dec
push
jl
rorl
cli
sbb
movsl
inc
add
and
xor
inc
add
sbb
enter
pop
sub
pop
adc
xor
or
adcl
repnz
lret
xchg
in
nop
xor
dec
mov
mov
in
push
jmp
lods
decl
mov
cmp
xor
mov
adc
cmp
xchg
fisubs
ficoms
call
cwtl
iret
mov
lods
out
stos
ljmp
stos
jns
cli
shrb
test
or
dec
movsb
push
les
mov
xlat
pop
dec
icebp
test
outsb
sub
xchg
jp
add
roll
into
stos
mov
rorb
cmpsl
xor
pop
xchg
imul
loopne
pop
sbb
xlat
sbb
inc
lea
or
pop
or
pushf
or
sbb
sti
jbe
outsb
push
mov
fcompp
imul
leave
jns
stc
call
lret
shl
dec
out
mov
push
icebp
adc
insb
scas
rorl
pop
bound
push
xchg
adc
scas
jo
aaa
jmp
or
fucomi
mov
mov
pop
or
les
mov
adc
mov
sub
mov
cmpsl
pop
xlat
inc
pop
pop
or
mov
cli
inc
dec
out
jl
loopne
cltd
inc
dec
mov
inc
or
sub
cmc
rcrb
fdivp
sarl
cmp
ret
jae
repz
adc
mov
adc
mov
jle
mov
add
xchg
cmp
sub
mov
adc
ret
xor
bound
ret
fimull
fwait
mov
mov
xchg
pop
push
inc
fstps
jns
or
adc
fneni(8087
sub
mov
inc
mov
mov
mov
inc
mov
aad
push
call
mov
cmp
dec
cmp
xlat
mov
das
es
imul
cwtl
xor
cs
dec
push
xchg
sahf
lret
and
mov
fwait
cmp
adc
ljmp
nop
pop
push
adcb
int3
xor
ljmp
cli
ss
jne
push
inc
cmp
cmp
xchg
js
pop
aad
push
sar
roll
pop
xchg
push
sti
sub
sbb
insb
jmp
push
mov
int
mov
lahf
adc
and
mov
lahf
fs
adc
and
pop
or
das
jg
aaa
int3
xor
push
xor
mov
mov
in
pop
mov
mov
inc
into
mov
sbb
mov
xchg
sbb
mov
or
sub
jmp
mov
add
dec
pop
sub
mov
inc
xor
and
mov
popa
xor
hlt
sbb
sub
outsl
inc
bound
gs
xchg
jno
es
cmp
in
xchg
cmp
and
scas
mov
xor
adc
dec
cmp
sub
or
and
scas
xor
add
push
xor
xchg
jecxz
fs
stos
dec
sub
lods
cs
cld
add
push
stos
push
cs
push
into
or
push
dec
fdivs
or
xchg
inc
das
jno
lea
adc
mov
and
xchg
outsl
xchg
add
mov
scas
je
or
stc
adc
and
out
add
fs
push
inc
xor
sbb
push
das
std
pop
sub
ficoms
push
jge
pushl
fidivl
lcall
push
xor
sarb
shll
adc
dec
icebp
and
pop
xor
inc
inc
push
dec
fldt
fdivr
dec
cmp
mov
dec
inc
add
imul
shrb
stos
sbbl
cld
sbb
hlt
pop
xchg
pop
aas
out
sub
sbb
xor
and
add
mov
dec
mov
or
dec
insb
mov
pop
rcrl
add
mov
add
andl
mov
flds
nop
push
sbb
repnz
pushf
jl
mov
aad
std
jl
xor
stos
sbb
das
in
xor
rclb
add
repnz
pop
adc
stos
outsb
xor
hlt
inc
xor
mov
hlt
mov
pop
sbb
stos
mov
pop
imul
int
movsl
scas
jns
cmp
dec
or
jo
jl
aaa
mov
dec
data16
mov
add
js
push
decb
fists
sbb
or
xor
jg
sti
adc
pushf
push
or
ja
sbb
mov
pop
outsb
or
das
cld
dec
xchg
xor
clc
ss
lods
xor
imul
push
pop
cmp
dec
out
jl
enter
in
je
or
lcall
sub
mov
stos
aaa
incb
add
aam
stos
adc
fidivs
sbb
sub
jl
das
inc
xchg
lods
sbb
outsb
adc
inc
popa
cltd
push
push
stos
push
push
jbe
sub
mov
sbb
dec
mov
jne
mov
xchg
fwait
add
lret
xor
push
push
pop
dec
adc
adc
push
adc
pop
movsb
cmp
mov
icebp
dec
pop
dec
cmp
ja
jns
adc
sbb
popw
incb
cmp
cmp
bound
inc
in
jo
pop
cmp
jp
lret
fisubl
push
es
fst
leave
push
mov
sbb
rcrl
aad
pop
add
les
enter
or
or
cwtl
ss
outsb
jnp
pop
xor
dec
das
out
xchg
lods
fcmovnb
fidivrl
jl
xor
lret
mov
adc
and
adc
mov
enter
and
push
dec
inc
incl
push
adc
xchg
dec
xor
in
fistl
iret
mov
cmp
stos
pop
lcall
or
imul
xor
add
bnd
xlat
sub
decb
lds
inc
stos
inc
stos
xor
jnp
xchg
xchg
or
jno
jl
or
adc
sbb
lret
cmp
inc
ficomps
scas
xor
xchg
jno
mov
jnp
xlat
stos
scas
push
bound
stos
arpl
rcrl
dec
sbb
lods
xlat
loope
xchg
dec
stos
inc
cltd
push
or
pop
out
mov
pop
sub
lret
pop
inc
dec
sub
out
or
stc
xchg
les
adc
lahf
lret
repz
or
shrl
das
movaps
cmp
and
mov
adc
das
and
and
xor
fidivrs
xor
loopne
rcrb
xchg
adc
aas
orb
loop
out
stc
pop
mov
xchg
aas
mov
mov
lcall
fisubs
into
adcb
pop
adc
das
add
fs
or
push
lret
test
clc
mov
inc
jle
mov
sbb
aaa
mov
rcl
pusha
mov
and
cmpsl
or
xchg
das
dec
xor
xchg
call
fildl
lret
mov
lahf
xor
push
bound
dec
ja
fmuls
aaa
xchg
mov
adc
data16
sub
out
inc
das
dec
test
imul
adc
incl
sbb
adc
aam
divl
dec
insl
mov
pop
shlb
enter
stc
lds
pop
sbb
enter
cmp
push
lods
shr
push
sbb
push
and
dec
mov
in
inc
and
sbb
outsl
push
cs
mov
cli
adc
mov
sub
adc
dec
and
push
cli
dec
adc
xlat
daa
pop
ljmp
xchg
stos
negl
mov
mov
hlt
faddp
out
pop
nop
adc
or
xlat
sti
cmp
dec
fisubrs
loop
cmp
leave
pmaxub
adc
clc
add
adc
dec
je
scas
xchg
insl
and
clc
adc
fildl
fld
hlt
sbb
mov
inc
popa
cmpxchg
cs
bswap
push
dec
push
inc
fnstenv
push
add
in
mov
aam
cmpsb
sbb
inc
test
sbb
mov
call
dec
lods
sbb
sub
add
loopne
add
add
add
inc
cmpsl
mov
xor
fs
test
iret
inc
pop
mov
outsl
xorl
adc
sbb
and
or
pop
xchg
mov
add
dec
mov
xchg
mov
and
mov
sbb
mov
and
pop
push
add
sub
mov
fisubs
ret
adc
pop
add
sub
rcrb
inc
sbb
or
sbb
lahf
inc
adc
xchg
scas
xor
loope
push
lock
sarb
xlat
push
inc
xor
or
stos
daa
pusha
dec
mov
stos
jns
add
mov
repz
push
nop
fincstp
ss
into
xchg
cmp
xorb
and
mov
imul
clc
cs
adc
ret
add
jmp
and
in
ja
push
imul
jae
out
sbbl
mov
pop
fwait
sub
pop
mov
repz
inc
sbbb
lods
dec
mov
and
adc
dec
xor
cli
inc
dec
std
loop
ss
fisubrs
ja
xchg
jge
inc
xor
notl
fiadds
or
pop
insl
stc
or
push
cmpsl
xchg
xchg
xor
dec
push
mov
mov
inc
mov
jnp
mov
rcrl
pop
loopne
lahf
fdivrl
sahf
sbb
das
adc
subl
jno
cmp
push
testl
mov
push
jecxz
sarl
xchg
loop
mulb
sbb
xchg
mov
xchg
cmp
ret
or
adc
out
inc
lahf
mov
fcoms
fbstp
cmp
inc
stos
cltd
and
test
xor
and
test
sbb
mov
repz
mov
out
data16
cmc
dec
dec
xor
pop
jmp
mov
xor
lock
rcl
fs
jo
bt
pop
mov
sbb
ud0
xchg
fmul
fimull
imul
sti
imul
sbb
lcall
outsl
and
mov
repnz
and
sub
dec
and
imul
pop
jle
into
and
dec
xchg
push
mov
push
pop
cmpsb
inc
push
push
jb
sub
or
mov
shl
push
fisubl
addr16
cmp
pop
cltd
lret
stos
sub
mov
aaa
xor
pushl
movl
or
and
pop
es
push
pop
dec
mov
cmp
xor
pop
mov
sub
add
std
dec
xchg
push
cli
xor
xor
mov
inc
push
lret
push
inc
call
and
xchg
ret
dec
sbb
imul
pop
cmp
cmp
push
ds
mov
out
hlt
pop
dec
mov
xchg
aad
dec
jns
aam
push
repz
fidivrl
add
and
mov
xor
bound
xchg
dec
jmp
xchg
xchg
or
sbb
cmp
sub
dec
pop
scas
aas
push
dec
jp
inc
insl
pop
shrb
clc
in
out
inc
push
mov
add
cwtl
and
jno
sarl
jb
cmp
sbb
mov
jb
sub
xchg
pop
xchg
ret
sbb
outsb
ds
adc
xlat
out
cltd
push
pop
mov
loop
sub
push
adc
sbb
sub
leave
jb
rorl
int3
jge
js
mov
lret
jl
mov
and
jne
out
outsl
mov
mov
out
aam
mov
inc
sub
das
bound
jmp
dec
sbb
or
xor
lods
cmpsb
pop
fistl
dec
sti
dec
push
pop
inc
sbb
in
aam
orb
mov
sbb
sti
outsl
adc
push
inc
iret
jle
mov
jle
cltd
fs
es
pop
addr16
cmp
mov
cmpsb
pop
mov
cmc
sbb
jl
scas
jecxz
daa
rcrl
cmp
sub
xchg
push
aaa
jp
or
pushf
sti
scas
pop
imul
push
mov
cmp
jmp
in
ss
and
in
inc
ficoml
out
pop
push
push
hlt
fadd
jecxz
ja
fistl
push
clc
push
in
cli
sbb
mov
das
add
sti
in
call
repnz
loope
shll
cmp
sbb
push
lods
or
fstpt
testl
loopne
sbb
mov
inc
dec
ds
pop
mov
inc
into
or
lret
push
adc
sub
sahf
cmp
ret
add
call
fstps
inc
outsb
mov
pop
push
inc
pop
mov
or
jae
cli
cmc
imulb
xor
movb
lret
pop
sti
fists
pop
pop
popa
test
add
es
cmc
mov
imul
pusha
popa
test
adc
jecxz
or
fisttps
cmp
xlat
lret
cmp
cmc
nop
jl
adc
xchg
mov
cwtl
nop
push
sti
ss
jmp
mov
push
adc
dec
sub
dec
pop
xchg
or
sbb
jecxz
mov
sbb
cmp
and
dec
out
mov
mov
aad
into
dec
fdivrl
call
dec
les
and
inc
sub
js
pop
jns
pop
mov
jnp
testl
pushf
sub
cmp
cwtl
dec
xor
push
dec
dec
inc
inc
cmp
imul
adc
fldenv
inc
adc
cmp
cli
xor
adc
inc
in
sub
jae
outsl
add
andb
push
xchg
mov
jl
jp
cmpsb
cmp
adc
stos
dec
iret
dec
lret
iret
xchg
ret
aam
cmp
push
leave
mov
call
mov
rorb
fistl
push
pop
xor
mov
cmp
pop
je
lret
rcrl
shll
or
xor
lret
mov
pop
ja
xchg
pop
xchg
in
pop
call
test
sub
pusha
mov
pop
inc
xor
popf
cli
inc
and
and
lret
mov
xor
fsubrs
xor
cmp
loop
xchg
xor
xchg
fsubs
dec
pop
in
cmp
enter
mov
je
push
jmp
cli
jns
icebp
dec
in
push
xor
aad
mov
xchg
sub
test
ds
push
enter
push
enter
push
enter
and
fsubs
mov
push
mov
jmp
mov
loop,pt
add
pop
xor
inc
jns
sub
sbb
cmp
pop
push
filds
enter
aad
arpl
mov
cmp
cmpsl
ljmp
add
xor
push
in
call
icebp
dec
push
pop
iret
or
scas
xlat
mov
shrb
pop
xchg
inc
sti
push
or
sbb
sbb
fsub
out
and
xchg
xor
jecxz
call
adcb
mov
push
xor
mov
clc
lcall
add
ret
cwtl
in
adc
shlb
jecxz
pop
aad
add
insb
fldcw
into
mov
sarb
testl
stos
pop
mov
sbb
cmp
sub
and
fdivp
and
sub
mov
es
inc
jb
mov
cmp
mov
aad
pop
hlt
or
mov
sti
insb
es
pop
decb
or
cmp
inc
mov
mov
push
sbb
jnp
arpl
or
push
gs
sub
dec
stos
roll
xor
push
pushf
std
jl
lret
jge
adc
idivl
mov
cmp
fwait
adc
fwait
pusha
cmpb
repz
mov
mov
enter
sti
fwait
push
cwtl
mov
mov
jbe
aas
push
sbb
dec
pop
ret
cmp
inc
or
addb
pop
adc
int
mov
fstpt
mov
aaa
imulb
push
cmp
xlat
jo
xchg
mov
mov
fcmovnbe
es
fisttpl
cmp
bound
rclb
push
jnp
mov
popa
dec
daa
push
imul
mov
cmpsl
mov
push
sbb
loope
or
lret
pop
hlt
or
lret
jp
inc
lahf
cmp
sub
icebp
loope
cltd
mov
jmp
mov
mov
js
mov
sbb
sbb
sub
push
dec
xchg
pop
lcall
mov
dec
lret
jbe
adc
inc
dec
das
loop
sbb
sub
je
xchg
out
leave
or
adc
sub
ss
repz
into
mov
adc
cld
mov
pop
sub
jg
jnp
add
orl
bound
mov
mov
js
sbb
mov
sti
fwait
mov
add
outsl
dec
int
out
pop
fisubrs
lret
push
and
cmp
clc
imulb
inc
sbb
add
fwait
mov
cmc
pop
lods
or
out
lret
xchg
mov
inc
pop
push
cmp
out
aaa
mov
push
and
call
xor
xchg
add
lods
addl
mov
mov
jg
out
xor
inc
add
push
lds
in
cmc
lcall
mov
cmp
xchg
or
sbb
lods
xor
orb
and
cmpsl
jo
add
mov
pop
sbb
stc
or
test
or
lret
cwtl
lret
imul
rolb
mov
aas
add
adc
jp
pop
mov
or
cs
push
subb
repnz
or
add
add
or
sahf
inc
dec
mov
or
gs
lock
insl
adc
outsb
or
xchg
cmp
cwtl
loop
mov
sub
pop
ficoms
mov
jl
js
jmp
add
inc
push
cmpsl
lods
add
push
push
fisttpl
xchg
into
jmp
ret
xchg
sahf
int
xchg
orb
iret
push
arpl
dec
mov
add
pop
xlat
sbb
jb
add
sub
cwtl
leave
out
lcall
pop
or
mov
add
fisubrl
je
in
jmp
xlat
stos
inc
mov
nop
or
jmp
jns
ret
mov
pop
ss
cwtl
adc
push
sub
mov
cmpsl
sbb
in
loop
cmp
inc
push
addb
sbb
jbe
rcrb
rcrb
int
xchg
ds
push
xor
sarl
mov
xchg
push
xor
dec
nop
xor
or
xchg
fildl
add
sub
or
mov
fsubrs
fs
lods
push
inc
mov
mov
and
xor
or
lret
lods
xchg
sub
mov
xchg
mov
cltd
iret
adc
mov
xor
and
ljmp
jbe
xor
xor
loop
mov
aad
dec
xor
imul
pop
pop
push
test
xlat
cmp
adc
sbb
mov
stos
sbb
pop
push
and
out
xchg
pop
fsts
adc
insl
dec
lods
and
lret
xchg
sbb
pop
push
jecxz
xor
lods
in
pop
inc
jmp
lret
std
arpl
mov
enter
dec
mov
scas
test
cmp
pop
in
jns
xor
addb
inc
mov
test
xchg
push
dec
sarb
push
push
mov
and
sub
dec
bound
add
cmp
dec
fstpt
cmp
stos
push
xor
sbb
inc
imul
iret
inc
xchg
dec
dec
and
lahf
test
enter
inc
stos
cld
adc
pop
cmpsb
sub
pop
jmp
fldt
test
sbb
sub
mov
lahf
jns
rcrl
arpl
push
out
dec
sbb
cbtw
mov
lods
mov
divl
xor
movsl
xorb
adc
dec
jnp
dec
pop
add
mov
aaa
test
jne
mov
arpl
xchg
test
sbb
cwtl
jns
daa
aam
cmp
lret
cmp
imul
jmp
cmc
jns
aaa
sahf
ljmp
test
mov
enter
scas
lret
xor
shrl
xor
sbb
push
popa
int
mov
in
lods
mov
je
loopne
faddl
push
sbb
bound
push
aad
cmp
mov
fidivrs
int
and
adc
push
aas
inc
or
stos
stos
adc
adc
mov
cmpsb
cmpsl
xchg
fucomi
push
xchg
mov
jl
hlt
mov
js
and
adc
lock
adc
dec
js
cmpb
inc
cmpsl
push
loope
or
push
push
scas
es
xlat
js
out
lret
pusha
lea
adc
sbb
adc
daa
dec
mov
push
xchg
adc
sbb
mov
dec
inc
push
bound
sub
add
or
jp
ss
fimuls
mov
jbe
popa
stc
pop
stos
decl
bound
add
push
incb
pusha
push
stc
mov
and
xchg
enter
jl
shll
imul
cmp
lcall
pushf
cmpsb
push
ss
pop
dec
and
jmp
subb
sub
pop
ss
lods
jns
stc
fisubs
sub
gs
sbb
xchg
fsts
pop
xor
fs
mov
movsb
lock
or
cld
adc
or
mov
sbb
in
xchg
outsb
fiaddl
or
lahf
into
sbb
mov
jg
daa
lods
ja
push
jne
push
ret
das
mov
add
pop
lcall
movsl
aam
sbb
cmp
ljmp
cmp
cmpsb
stos
popf
push
stos
sub
pop
sarl
divl
sbb
mov
jae
adc
js
outsl
shll
mov
adc
xor
leave
sbb
jmp
dec
in
or
test
test
std
repz
ja
dec
xchg
mov
and
adc
cld
ret
pop
xor
and
sub
add
loop
scas
cmp
dec
xchg
clc
mov
mov
lahf
mov
mov
cmp
aaa
scas
das
js
sub
fistpl
pop
inc
push
jns
xchg
dec
push
out
aad
addr16
jnp
cmp
filds
or
lds
jns
fnstsw
jno
imul
xor
adc
and
adc
dec
sub
and
inc
lret
pop
jecxz
dec
js
dec
inc
cmp
push
jbe
or
repnz
push
test
pusha
mov
dec
or
xorb
mov
and
push
dec
add
or
leave
sbb
mov
cltd
push
mov
sbb
jecxz
push
cmp
and
add
and
fcoml
jg
xchg
lds
nop
icebp
inc
cmc
sub
add
mov
xor
xlat
fisttpl
xchg
xor
push
js
push
xchg
push
outsb
cmpsb
sbb
push
mov
push
xor
push
stos
lcall
data16
dec
dec
cmp
notl
jae
add
divl
cmp
bound
subb
sub
dec
mov
push
cmp
adc
jnp
ficoml
pop
adc
dec
nop
shl
lods
adc
mov
push
mov
ficomps
sbb
scas
das
scas
and
outsl
and
add
sub
or
sbb
push
dec
pop
sbb
lods
les
out
es
scas
in
jb
ljmp
cli
push
pop
loop
and
hlt
add
xchg
dec
ficoms
inc
or
jp
and
ss
mov
cmc
inc
push
push
xor
jle
lcall
push
fildl
mov
lock
lret
and
mov
lds
inc
dec
mulb
xchg
jns
subl
movsb
xor
dec
cmpsl
dec
les
idivb
ficoms
sub
dec
mov
push
jle
mov
lcall
mov
shr
les
mov
test
mov
sbb
mov
pop
push
test
ffreep
add
mov
je
scas
mov
push
sbb
cld
add
pop
data16
rcrl
int3
fistpl
das
pop
or
es
ror
sub
into
cmp
jns
xlat
cmp
std
scas
shrl
xchg
and
cwtl
aas
lret
or
xchg
out
xchg
arpl
jecxz
cld
adcl
mov
xchg
sahf
dec
or
scas
mov
dec
movsb
idiv
jmp
dec
shrb
pop
jge
dec
mov
sbb
rcr
jns
ficoml
mov
js
dec
pop
sbb
inc
cmp
xchg
inc
dec
push
cmpsl
or
aad
xorl
negl
dec
iret
cmp
xor
cld
push
pop
scas
clc
sub
push
dec
adc
add
adc
aaa
fistpl
negl
stos
loop,pn
push
xchg
dec
testb
ss
cs
mov
or
adc
insl
add
jbe
and
dec
cmpsb
aaa
or
int
pop
jnp
jecxz
negl
mov
ret
lahf
cmp
mov
into
scas
adc
inc
iret
jns
lcall
hlt
rcrl
cli
stos
push
add
lahf
push
mov
mov
test
push
push
push
pop
out
call
jo
mov
adc
push
int
repz
js
mov
sbb
lds
stc
cmp
sbb
xchg
xchg
fstpt
dec
imul
mov
sti
pop
enter
mov
mov
notb
clc
outsl
mov
mov
pop
mov
popf
into
push
dec
mov
mov
add
push
das
adc
jns
hlt
mov
loop
ja
xor
cmp
push
mov
xchg
mov
jg
adc
jle
imul
pop
xchg
repnz
push
mov
dec
sub
mov
jno
xchg
cmp
xor
shr
xchg
push
sbb
and
mov
out
xchg
dec
popa
jne
add
and
cltd
mov
loop
fs
adc
push
jbe
pop
sub
testl
dec
lret
mul
dec
push
rep
dec
cmpsl
xor
pop
js
push
or
push
xchg
pop
mov
out
and
dec
inc
lods
shll
js
leave
sub
mov
sbb
mov
push
adc
add
dec
sbb
negl
push
mov
pop
hlt
jb
sti
mov
iret
xchg
dec
out
inc
sbb
mov
aas
push
inc
jb
mov
dec
aad
fsubs
sub
inc
xchg
xchg
ret
add
or
jmp
push
mov
lret
imul
xor
adcb
cmp
sub
outsl
sub
or
cmp
mov
inc
xlat
mov
sbb
mov
adc
lret
sbb
dec
jnp
and
mov
inc
push
xor
test
xor
sbb
lret
inc
mov
or
adc
cmp
push
push
movsb
or
dec
subb
outsb
dec
add
dec
cs
rol
mov
clc
sbb
push
pop
lcall
jl
adc
std
lret
js
pushf
es
mov
xor
mov
xor
jnp
loope
push
movsb
shrl
or
ja
mov
inc
hlt
mov
cmp
ds
and
daa
js
fwait
incb
hlt
and
jnp
push
xor
mov
lret
js
sbb
adc
dec
shrl
mov
adc
adc
or
jno
into
dec
push
test
xchg
sub
lea
inc
repnz
dec
aaa
xor
lret
jnp
cmp
lcall
mov
sti
mov
paddsb
sbb
les
call
enter
out
xchg
es
aas
lahf
adc
pop
inc
shr
mov
popf
inc
mov
xchg
lcall
push
imul
add
lds
push
xchg
int3
in
shl
fistpl
movl
push
pop
cli
rorb
sti
leave
dec
push
or
xor
cmpsl
sbb
inc
and
icebp
je
and
cmpxchg
clc
jle
shll
jbe
inc
add
adc
fsubp
out
sbb
dec
mov
cmp
ret
loope
lret
mov
out
jp
ljmp
lods
loopne
sbb
ja
mov
ss
cmp
xchg
mov
push
jmp
fwait
orb
jmp
adc
cmc
add
jle
sbb
cmp
fistpll
sbb
inc
xor
pop
push
and
push
push
inc
inc
or
jmp
push
xor
stos
xor
push
mov
aaa
ljmp
push
add
add
add
mov
cmp
sbb
lahf
pop
dec
cmp
add
stos
daa
adc
outsb
push
ficoms
fs
fldt
movlps
lahf
fwait
inc
outsl
inc
js
sbb
fimuls
xchg
dec
cbtw
or
pop
jbe
or
mov
xor
loop
sbb
sub
pop
test
cmp
mov
and
lds
aas
mov
in
push
mov
adc
lret
xlat
pop
mov
dec
push
fistpl
sbb
sahf
mov
test
ljmp
jae
push
and
pop
cmp
into
out
mov
loop
out
fdiv
pop
lcall
cmp
xor
and
push
push
mov
push
cs
imul
or
sbb
push
pop
inc
mov
mov
xchg
jnp
lock
sbb
pop
adc
loop
and
lahf
pop
nop
jae
push
mov
push
xchg
mov
and
movlps
sbb
adc
cs
ljmp
dec
in
sub
sti
gs
imul
leave
and
pop
roll
rcl
sbb
dec
aas
or
mov
fildll
push
pop
shlb
cmp
and
adc
sub
jle
jnp
rcr
mov
and
addl
dec
add
pop
mov
jae
fisttpl
mov
cwtl
jecxz
cmpsb
adc
dec
lods
push
filds
or
dec
daa
pop
cli
out
mov
fstpt
xchg
xor
cwtl
loopne
stc
popa
sub
push
push
call
outsb
mov
fnstcw
inc
sub
sub
or
cmp
sbb
inc
pop
add
and
addb
clc
in
push
enter
fwait
lahf
pop
dec
fsubr
sub
push
dec
call
and
sub
cmp
and
lods
stos
mov
mov
xchg
inc
mov
lcall
jl
clc
inc
sub
aas
in
push
fwait
mov
jle
adc
ds
mov
fistl
sti
push
mov
sbb
sub
mov
jecxz
add
test
sub
or
cmp
cmp
aas
lods
adc
popa
push
les
push
push
jl
out
adcb
iret
cwtl
xlat
popa
push
fsubrl
mov
inc
js
xor
or
inc
ds
decl
add
nop
cmp
jge
loope
ret
push
cmp
pop
jg
adc
pop
jno
mov
mov
into
cmp
dec
sbb
adc
or
prefetchw
lcall
repz
cld
push
test
das
sub
insb
pop
push
jno
aaa
mov
lods
xchg
cmp
pop
jge
xchg
fdivr
or
call
loop
jo
addr16
mov
xchg
cli
fisttpl
sub
mov
pop
push
cwtl
adcl
leave
pushf
fstps
dec
arpl
cmp
pop
pop
jo
mov
fsts
inc
dec
lds
inc
rcll
cmp
xorb
jbe
push
ds
repnz
adc
add
fsubs
test
sub
mov
shlb
xlat
std
cld
neg
xchg
bound
iret
jl
jge
loope
or
xor
sub
inc
fcompl
or
leave
adc
bound
dec
mov
mov
sbb
push
aas
push
pop
pop
ficompl
popf
stc
call
ficomps
jns
mov
cmp
add
es
xorb
leave
ss
or
fiaddl
dec
mov
push
mov
pop
adc
and
es
push
cmp
and
add
loope
fnstenv
scas
inc
pusha
inc
scas
mov
out
loopne
dec
inc
hlt
cmp
cmp
mov
and
out
std
pop
jns
out
std
jno
mov
out
mov
push
enter
dec
pop
inc
pop
add
ss
bound
xchg
loop
jl
fimuls
addr16
stc
or
cmp
repnz
sbb
pop
xor
cwtl
cmc
xchg
and
int
in
cmp
cmp
bound
xchg
fidivrl
ljmp
gs
sub
sub
sbb
nop
gs
adc
mov
xor
sub
out
xor
xor
ret
adc
ss
cmpsl
lock
push
and
cli
aad
scas
out
ss
lret
data16
pop
sbb
xor
inc
stos
push
test
dec
test
dec
incb
pusha
xor
inc
sbb
cmp
lret
stc
scas
stc
inc
inc
jmp
inc
leave
xlat
cmp
dec
pop
cmp
imul
mov
dec
sbb
cmp
sbb
sub
jmp
sbb
cmp
es
sub
call
add
rcrl
mov
mov
mov
add
outsl
mov
add
outsb
sarl
scas
filds
cmpsb
fisttpl
je
nop
lahf
pusha
add
rcll
mov
mov
xchg
mov
and
fildll
imul
xlat
icebp
xor
lret
sbb
push
push
rorb
xorl
or
jbe
cmp
jno
pop
adc
and
xchg
sbbl
or
xor
xlat
orb
jecxz
bswap
sub
out
mov
xchg
aaa
es
mov
fsubrl
sahf
lss
out
add
and
loope
push
mov
push
adc
pop
jb
sub
push
inc
es
mov
mov
mov
xor
jmp
outsb
sahf
cmp
xorl
mov
cmpsl
jb
pop
fcom
scas
test
mov
ja
mov
cmp
cmc
jl
test
stos
mov
pop
pop
in
aad
sub
dec
in
mov
mov
in
aaa
push
push
mov
sub
stos
fisttpll
dec
adc
pop
into
outsl
mov
inc
or
lret
xlat
inc
mov
outsb
inc
shrl
hlt
mov
or
mov
fisttpl
mov
jnp
jb
jge
xchg
push
sbb
jmp
js
xor
ljmp
push
in
std
xchg
push
pop
int
out
cmp
and
sbb
mov
sbb
xchg
sbb
push
cmp
or
cmp
and
mull
loop
insl
jg
mov
cmc
xchg
mov
inc
cwtl
dec
loop
sbb
jp
push
add
loopnew
scas
mov
inc
jno
mov
loop
mov
scas
rorl
pop
enter
int3
sbbb
jno
dec
sbb
les
notl
jmp
pushf
arpl
dec
dec
pop
push
jge
mov
push
int3
push
in
push
loop
neg
mov
pushl
add
push
or
scas
ret
dec
adc
cmp
ret
ss
cld
aaa
fidivs
sbb
mov
adc
mov
ret
dec
ljmp
cmp
sbb
dec
add
sbb
lahf
lods
mov
or
test
sbb
fs
je
pop
dec
mov
cmp
fs
pop
xchg
xor
pop
jle
adc
dec
es
pop
enter
cmp
push
pop
lods
ljmp
mov
das
and
mov
pop
mov
inc
lahf
push
and
mov
sarl
sub
adc
ss
pop
push
out
inc
inc
cltd
inc
lret
sub
dec
sub
dec
in
and
dec
fwait
dec
rcrl
andb
movsb
and
sub
into
in
fcmovb
adc
push
inc
mov
rol
mov
inc
into
lahf
dec
inc
dec
inc
sbb
int3
fsub
add
push
in
movsb
enter
nop
xor
jmp
jnp
pop
cwtl
xchg
dec
sub
test
mov
and
push
pop
repnz
dec
pop
mov
cli
mov
sub
cwtl
iret
lods
lret
push
push
push
mov
xlat
imull
jmp
or
leave
imul
pusha
cmc
loop
imul
notb
dec
or
mov
xchg
push
rorl
inc
adc
xor
fcomps
dec
add
and
adc
les
adc
xlat
sub
or
sbb
out
sub
cmp
adc
into
pop
fwait
push
mov
push
add
mov
push
pop
ror
inc
cwtl
pop
dec
jecxz
inc
stc
push
dec
cmp
mov
pop
xchg
cld
mov
es
jmp
scas
js
hlt
scas
shr
jae
dec
out
fnstcw
mov
sbb
shr
test
cltd
cmp
repz
leave
push
sub
repnz
fnstcw
fisubs
inc
jg
xchg
dec
adc
dec
out
or
adc
xor
cmp
inc
ret
sbb
pop
fimull
push
lret
lods
stos
adc
fldl
or
nop
mov
imul
dec
xchg
push
dec
and
adc
xchg
xor
loopne
xor
lcall
pop
mov
jge
lret
es
mov
dec
pop
xor
int
stos
dec
popa
icebp
leave
std
dec
imul
mov
jl
pop
jbe
pop
cli
addb
mov
repz
lsl
mov
cs
mov
sbb
xor
pop
add
into
push
out
inc
sbb
adc
jmp
cltd
inc
pop
sub
sbb
pop
scas
bts
dec
jp
pop
loope
xchg
icebp
add
push
cmp
shlb
xchg
pop
push
inc
add
xchg
xor
fildl
push
sub
sbb
mov
loop
add
call
fldl
mull
add
jmp
scas
jb
dec
test
sbb
sub
loop
sub
cmc
outsl
or
jne
xchg
push
xor
sbb
sbb
adc
lret
dec
mov
push
pop
cwtl
aad
loope
mov
je
push
test
mov
icebp
cmp
lock
cli
pop
lahf
mov
cmp
xlat
mov
sbb
and
movsb
add
cmp
xchg
mov
lock
shrb
xchg
out
xor
sub
enter
ljmp
add
push
out
dec
stos
pusha
imul
cmpsl
enter
movsl
movsl
sbb
dec
enter
movsb
sub
xor
pop
insl
addr16
mov
leave
xor
out
fstps
jbe
adc
push
pop
push
int3
adc
lea
das
cmpsw
mov
out
sbb
xchg
xchg
mov
popl
jecxz
or
or
xor
loop
inc
push
mov
stos
sbb
pop
and
cmpb
fidivrs
and
fbstp
stos
or
xor
xchg
sub
cli
jbe
stos
xchg
dec
unpcklps
bound
adc
dec
adc
lds
dec
lahf
ficompl
dec
rclb
add
gs
into
push
cwtl
sub
mov
loope
lahf
shlb
xlat
mov
sub
sbb
ss
lcall
jg
xchg
ret
cli
cmp
out
in
sub
pop
cmc
sti
cmp
mov
fucom
lcall
pop
addr16
fs
cld
das
inc
sbb
mov
sub
add
mov
pop
out
mov
stos
jnp
pop
cmpsb
cmp
add
cmpl
cmp
int
sbb
jne
xor
out
gs
popa
js
pusha
hlt
loope
sub
sbb
scas
cmp
xrelease
mov
aad
sub
pop
mov
test
lds
data16
out
fucomi
daa
flds
sbb
push
xor
movups
out
in
or
adc
leave
push
xchg
sub
push
xlat
cwtl
ret
add
inc
push
cwtl
popl
push
add
adc
jae
lret
jge
je
dec
fdivrs
dec
ljmp
pop
fwait
jle
xor
cmc
fsubrs
js
add
out
fildl
dec
add
lret
xchg
or
push
jnp
fwait
dec
js
mov
or
mov
cld
ds
scas
sub
shll
inc
adc
or
sbb
adc
or
mov
jle
push
mov
push
add
pop
mov
ljmp
sub
cld
adc
rol
dec
ret
mov
lock
push
sub
dec
xchg
dec
push
ja
jp
sahf
push
and
pop
imul
cmpl
cmp
cmpb
outsb
inc
add
jmp
push
push
dec
sbb
push
pusha
inc
push
into
test
cs
sbb
sbb
outsl
out
xchg
xor
notb
repnz
fnstcw
dec
push
fwait
inc
ja
push
lods
out
cmp
gs
test
neg
in
andb
pop
aad
inc
ret
xchg
pop
push
push
inc
pop
sbb
and
mov
imul
sub
jo
lds
xorl
sbb
bound
lret
inc
sbb
inc
fisttpl
mov
sbb
lahf
shll
insb
fistpl
mov
fisttpl
outsl
arpl
jbe
outsl
mov
clc
push
js
pop
aam
arpl
xchg
pop
cmp
mov
sub
and
fimuls
dec
fidivrl
loop
and
jg
lret
cs
mov
inc
jmp
repz
adc
loop
cmp
cli
xchg
xchg
push
jecxz
or
mov
sub
push
dec
sbb
testl
addr16
xlat
movsl
or
mov
fistpl
enter
repnz
push
cli
fsts
adc
push
lods
sbb
pushf
push
stos
push
xor
jae
sub
add
cmp
es
mov
sub
adc
sbb
jne
add
cmpsl
out
push
push
in
imul
adc
push
cltd
sbb
out
js
cld
mov
xor
push
and
dec
dec
sbb
mov
jb
push
xchg
aad
out
mov
jns
leave
mov
xor
push
or
xor
out
ljmp
or
sbb
cmp
cmp
insl
mov
mov
jmp
pushf
call
sti
or
cmpsl
ljmp
sbb
bound
mov
mov
jno
cmp
mov
dec
sbb
movsb
repz
sbb
fldl2e
fdivrs
jl
mov
and
std
inc
cwtl
ss
pop
sbb
push
pusha
dec
leave
gs
adc
ret
sbb
jmp
daa
mov
jno
adc
dec
pop
mov
xor
sbb
dec
mov
adc
push
nop
and
mov
popf
push
jns
inc
popf
push
lds
xlat
movsb
push
adc
out
aad
xchg
lret
jge
stos
xchg
pusha
xchg
pop
jl
iret
inc
sti
stos
sub
xor
fnstcw
inc
clc
in
adc
and
cld
jl
iret
lret
sbb
sti
les
push
shrb
xor
pop
jmp
jl
clc
icebp
js
sarb
xchg
shll
lahf
or
dec
aas
lahf
push
pop
sbb
leave
mov
adc
or
mov
add
mov
in
xlat
xlat
repnz
out
lea
sbb
and
leave
mov
mov
sbb
mov
sti
xlat
insb
xor
inc
sbb
or
adc
dec
pop
xchg
adc
in
inc
and
test
repnz
sbb
clc
jns
sub
and
mov
aaa
pop
andb
cmp
sahf
js
fs
pushf
loop
xchg
nop
sbb
or
pop
insb
and
lods
xchg
xchg
repnz
call
adc
fiaddl
js
xchg
aas
sub
push
mov
and
inc
loope
cmp
into
frstor
cmp
fidivrs
adc
push
dec
cmp
pop
aam
packsswb
ds
mov
mov
dec
sub
std
cmp
pusha
jg
cmc
adc
jle
and
sbbb
add
or
pop
out
rol
orb
xor
fisubs
jmp
fwait
in
push
loope
stos
mov
jp
sub
xlat
cmc
xchg
push
adc
imul
jge
jnp
call
inc
xchg
leave
cmp
sub
pushf
sub
dec
mov
or
inc
adc
mov
fidivs
lret
inc
sbb
pop
dec
sub
cmpsb
jbe
push
add
test
jno
cli
mov
dec
lret
repnz
or
imul
xor
push
inc
pop
adc
lods
push
mov
cli
aas
pop
loop
inc
adc
jns
cmp
cmp
push
adc
push
aaa
ret
leave
mov
adc
push
jae
cmp
or
jl
loopne
sub
jmp
cli
arpl
pop
pop
int
mov
mov
inc
shr
push
mov
inc
test
or
jp
and
jns
push
mov
sarb
xor
lret
cmp
pop
divl
add
xchg
mov
sbb
nop
pop
shll
stos
ss
or
pop
dec
repnz
int
push
fwait
mov
mov
ja
jge
imull
fdivrs
mov
mov
jle
cmp
dec
and
mov
or
mov
repnz
push
xchg
test
pop
jnp
sti
lahf
les
inc
sub
notl
push
cmc
mov
pop
or
aas
mov
xchg
and
pop
fwait
mov
or
ss
mov
or
cmp
xorl
and
jecxz
cs
add
in
rorl
push
push
pusha
xor
outsl
sub
test
lcall
adc
xchg
das
insl
dec
movaps
das
loopne
xlat
xor
movaps
dec
dec
lods
data16
imul
out
lcall
cwtl
cmp
mov
xor
ja
sbb
mov
sbb
sbb
jnp
pusha
pop
fsubrl
in
filds
cli
sti
out
pop
loope
mov
xchg
out
cmp
jmp
repz
pop
leave
pop
cmp
sub
aaa
xor
imulb
push
flds
adc
jge
adc
lds
sub
call
mov
mov
fmul
push
repz
xor
push
cmp
lret
mov
mov
aas
dec
push
test
xor
out
inc
rorl
xchg
lods
push
lods
scas
insl
mov
sub
repz
and
push
in
pop
fcmovb
mov
arpl
and
popa
negl
insb
pop
pop
pop
inc
test
aad
sbbb
ljmp
mov
std
adc
push
push
jge
inc
mov
xchg
aam
data16
xlat
ljmp
lcall
mov
ret
push
or
push
addb
mov
cmp
mov
adc
push
cmpsl
lcall
in
pop
mov
cmp
mov
mov
loopne
or
je
insl
lahf
cld
shll
out
cld
sarl
fs
aad
lcall
cwtl
xor
aaa
xchg
sahf
inc
repnz
pop
out
or
sahf
dec
sub
cltd
mov
std
mov
xor
clc
ss
push
pop
cmp
ljmp
and
cmpsl
or
outsb
aad
cltd
aaa
shrl
ret
aas
pop
sbb
mov
dec
loope
adc
push
mov
xor
or
mov
sub
pop
push
jge
loop
test
push
cmp
mov
cmp
scas
xchg
mov
sub
dec
in
sub
out
hlt
sti
sbb
lods
bnd
mov
jae
test
mov
mov
adc
xchg
inc
mov
mov
cmpsb
int3
pushl
cltd
shrb
pop
mov
into
or
test
cmp
subb
cmp
decb
pop
rcr
pop
mov
or
mov
and
adc
je
adc
popf
xor
mov
imul
push
inc
mov
nop
inc
cs
cmpsl
jmp
add
add
push
sub
dec
inc
adc
popa
xor
mov
dec
pop
dec
push
push
inc
lret
push
repnz
jecxz
dec
mov
fucomp
jecxz
adc
ja
sub
mov
jecxz
pop
lds
mov
push
mov
push
jnp
jnp
imul
dec
or
sbb
and
cmp
in
popa
aas
loope
cmp
test
lret
sub
negl
inc
or
dec
fdivrs
enter
addr16
cmp
outsl
inc
jb
cmp
or
aaa
leave
cmp
ds
jmp
cltd
shl
pop
lret
jle
ss
bswap
inc
pop
mov
xor
sub
mov
lods
sub
mov
rolb
sub
push
fildll
cmc
sbb
test
jge
add
sub
sti
ja
push
cs
aaa
dec
das
cmpb
jmp
or
add
xor
xor
movsl
sub
sub
push
cmp
cld
mov
insb
inc
lret
pop
push
jb
lret
lcall
jg
xchg
mov
jae
cmp
push
lret
add
lds
pop
jl
inc
mov
xchg
dec
sub
dec
movsb
jb
loop
adc
mov
inc
cwtl
mov
lret
cmp
mov
add
es
ret
lods
jnp
sbb
loopne
mov
adc
inc
cli
filds
xor
shl
adc
kmovw
fmuls
loop
int
pop
hlt
in
idivl
or
sbb
divb
dec
mov
mov
pop
sub
call
cmpsl
shlb
test
nop
sti
fbstp
bound
inc
sub
pop
or
cwtl
inc
lcall
push
imul
dec
cmp
or
sub
xor
pop
in
pop
mov
cmc
mov
mov
fcom
adc
or
cli
adc
pop
cmc
mov
loopne
pop
pop
mov
int3
jg
add
mov
cmovp
lret
movsb
mov
fldcw
enter
int
movl
jp
sbb
jle
xchg
mov
ss
mov
call
sbb
ljmp
push
jnp
repz
dec
inc
jo
adc
pop
jnp
lods
leave
test
enter
das
hlt
ficompl
pop
aam
or
and
jmp
mov
or
ljmp
das
jns
jnp
notb
jnp
inc
xchg
aas
out
sbb
push
push
xor
push
add
sub
movsb
aad
sub
mov
outsl
loop
shlb
clc
cmp
outsl
inc
sbb
jge
dec
cmp
filds
pop
adc
mov
cmp
das
mov
mov
or
fwait
test
negl
adc
adc
xchg
sbb
das
sbb
fstpl
xor
sub
loope
arpl
iret
xchg
or
aad
icebp
mov
ss
les
jl
xor
pop
mov
sub
xchg
test
cltd
or
dec
test
jmp
daa
sub
add
popa
sets
aas
dec
sahf
dec
xchg
lods
je
xor
ret
jne
divb
scas
jecxz
in
repnz
nop
dec
mov
das
xchg
lods
adc
cmp
popf
inc
stc
insl
lahf
adcl
repz
sbb
outsl
inc
dec
cmpsb
xor
ret
dec
xor
xchg
dec
xlat
xor
cmp
dec
es
sub
arpl
push
in
push
cmpsl
mov
rolb
arpl
push
sub
push
pop
bound
ficomps
popf
scas
or
xor
jmp
imulb
xchg
xor
dec
sub
fistl
push
js
clc
pop
xor
js
cmp
pusha
and
aaa
jp
cld
popw
sbb
ret
and
int
xor
and
outsl
clc
imul
sbb
add
sbb
or
adc
sub
bound
add
leave
mull
inc
sbb
add
mov
out
and
test
sub
mov
adc
mov
repnz
out
in
pop
leave
xchg
or
adc
fsubs
dec
add
out
dec
inc
jne
adc
push
xor
xorb
mov
call
roll
xor
aaa
lret
push
xchg
push
jmp
push
add
push
jecxz
cmp
pop
dec
jo
mov
push
scas
fs
out
push
in
lods
test
and
test
lock
cmp
push
add
movsl
xchg
jecxz
arpl
das
inc
data16
sbb
out
sbb
outsb
fildl
jmp
push
sbb
lret
test
pop
mov
aad
dec
adc
push
adc
sbb
dec
mov
stos
mov
outsl
lret
fcoms
cmp
pop
loopne
iret
push
sbb
fstpt
add
xchg
push
jg
clc
mov
js
sbb
adc
mov
sub
mov
push
xchg
sub
inc
sbb
mov
push
in
mov
dec
aam
jmp
xchg
mov
mov
cmp
cmp
or
ja
setp
pop
xchg
cmc
pop
sahf
fistps
das
imul
scas
jl
es
in
push
fmuls
out
aas
add
sbb
push
aam
mov
inc
mov
cmp
popf
sub
ss
lret
mov
mov
sbb
or
push
mov
rcrl
repz
jp
es
fsubrp
inc
mov
stos
cwtl
inc
pop
dec
mov
sub
ss
iret
sub
dec
inc
pop
sti
mov
into
dec
or
insb
push
inc
lods
movsl
mov
test
mov
mov
jnp
jmp
ret
mov
xor
xchg
xchg
mov
sahf
fildl
outsl
faddl
push
dec
mov
push
pop
xor
es
imul
push
pop
lret
cmp
dec
push
lds
ljmp
dec
es
sub
std
rcrb
les
mov
ja
cmp
data16
arpl
cmp
loopne
insl
sub
enter
lret
cmp
mov
ss
sub
lret
mov
dec
push
jge
mov
dec
or
bound
dec
push
test
pop
cld
adc
cli
dec
dec
or
dec
out
out
cltd
loopne
and
or
push
fs
jecxz
mov
xor
jbe
fstpt
sub
mov
adc
mov
adc
fdivs
stos
jl
addr16
popf
pop
lock
and
bound
dec
sub
lret
aam
cmp
sbb
cwtl
xor
pushf
std
mov
jo
lahf
or
lea
sbb
jo
or
dec
mov
dec
js
stos
andb
popa
sub
cli
adc
cmpb
bound
dec
rclb
pop
in
lds
std
arpl
lods
add
xor
mov
or
addl
daa
in
pop
mov
testb
or
xor
push
or
sbb
imul
xchg
xlat
push
aas
outsl
insb
xchg
int3
pop
mov
sub
loop
jle
or
ffreep
or
and
xchg
jnp
sbb
lret
mov
adc
lcall
push
loopne
shll
out
nop
adc
cmp
xor
clc
scas
jmp
cmp
cmpsb
out
stos
mov
daa
pop
sub
add
cmp
daa
jmp
xadd
push
outsb
sbb
cs
lcall
jge
inc
mov
inc
daa
dec
mov
lds
repz
xchg
push
test
call
fcompl
es
adc
cmp
sbb
sbb
push
ds
sti
xor
xor
push
lods
dec
inc
dec
sti
push
mov
arpl
cmp
push
stos
insl
push
lods
xor
add
cli
push
out
lods
and
push
frstor
mov
aam
cmp
xchg
dec
mov
sbb
dec
sub
or
cs
push
ss
fimull
jle
mov
and
dec
repz
arpl
fldt
sbb
dec
pop
or
xor
add
rcr
mov
mov
dec
cs
cmp
cmpsb
in
pop
adc
enter
or
jmp
leave
mov
bound
pop
pop
sbb
cs
popf
jecxz
jno
in
xor
jbe
pop
rcll
xor
in
xor
sub
shll
and
shll
mov
lcall
loop
dec
lods
or
adc
jb
mov
mov
dec
outsl
dec
fucomi
mov
and
adc
scas
mov
mov
cs
dec
cli
sbb
add
divl
bound
test
adc
enter
pop
xchg
dec
jae
mov
nop
lcall
vpcmov
cmp
push
jp
mov
and
jnp
cs
xchg
sub
jns
cmc
xchg
sub
out
xor
pop
hlt
cltd
pop
and
adc
pop
leave
lods
or
hlt
inc
call
or
pop
nop
pop
js
pop
loop
add
ljmp
sti
leave
lret
lret
mov
std
into
sbb
lcall
incb
fdivrp
xor
adc
inc
push
xchg
or
pop
idiv
xchg
and
push
jmp
daa
xchg
mov
mov
xor
dec
cmp
push
lods
dec
cmp
sbbl
sti
repz
js
cmp
jmp
lret
mov
sti
xchg
cmc
dec
sub
dec
xchg
sbb
mov
ficoms
xchg
mov
sti
push
fnstenv
cmp
insb
icebp
nop
mov
stos
push
pop
dec
cmp
rorb
sub
jl
xor
xchg
dec
ljmp
loop
jne
inc
push
inc
rep
push
mov
jmp
xchg
sbb
icebp
arpl
mov
jnp
dec
fcompp
cwtl
mov
or
jp
in
inc
and
cltd
addr16
pop
mov
jp
push
mov
mov
out
in
inc
lods
ss
lret
cs
icebp
ja
fsub
push
lods
sbb
cs
or
out
aas
dec
xchg
mov
jbe
inc
jne
xchg
insb
pop
dec
pop
mov
xchg
fildll
lcall
cmp
push
inc
icebp
adc
scas
cli
adc
fidivs
push
jb
jl
and
pusha
dec
mov
je
xor
arpl
outsl
bound
push
cmpsl
dec
fxch
cltd
pop
mov
sbb
pop
or
add
das
shll
pop
pop
mov
mov
mov
test
pop
pop
add
push
and
insb
push
lret
mov
lods
and
sbb
sbb
bound
cmpb
pop
mov
aaa
cmp
add
stos
int3
adc
cmp
sbb
xchg
fldenv
sub
lods
into
and
ss
inc
inc
test
sti
std
nop
arpl
data16
sbb
fildl
mov
mov
ss
insb
mov
pop
mov
and
mov
adc
push
push
jle
scas
push
fidivl
pop
or
ljmp
push
and
and
mov
xlat
mov
cmp
sti
xor
pop
repz
mov
std
adc
das
repnz
int
mov
aam
mov
cltd
imull
loope
jnp
call
dec
lea
push
adc
cmpsl
cmp
imul
addr16
leave
adc
mov
jns
cmp
and
cmp
outsl
sbb
dec
jl
xchg
cmc
add
mov
add
and
mov
jno
inc
adcb
sub
sbb
add
stc
loope
inc
js
cmp
inc
cli
fsubs
std
fdivl
inc
pop
cmp
mov
or
outsl
ljmp
sarb
dec
popf
mov
out
dec
ja
xchg
dec
dec
cwtl
dec
lret
inc
call
dec
fstpt
dec
lahf
mov
adc
jle
jnp
adc
jmp
jne
mov
xlat
sbb
scas
or
shll
or
es
mov
jb
je
clc
adc
mov
imul
cmpsl
aas
mov
mov
or
adc
and
sub
stos
cmp
std
sub
mov
sub
ja
cmp
add
aaa
sbb
sub
mov
cltd
pop
sti
jnp
dec
popa
inc
leave
addr16
push
mov
inc
cwtl
cli
es
adc
adc
movb
leave
rcr
ja
das
ljmp
nop
shlb
sbb
jo
fisttpl
dec
dec
fldcw
add
mov
mov
and
jns
pop
dec
sbb
mov
lds
stos
xchg
sub
and
xor
dec
and
push
out
xchg
rol
ret
or
loop
cmp
push
pop
dec
loopne
dec
add
dec
movsl
dec
sub
js
roll
or
cmp
shlb
or
aam
sub
mov
decb
rclb
or
aad
and
ss
dec
mov
jo
enter
imul
mov
cs
in
cltd
lods
inc
test
in
dec
or
aam
ja
rorb
daa
cmp
inc
mov
dec
stos
jb
sub
add
push
scas
mov
add
xchg
dec
inc
test
mov
jns
mov
outsb
add
sub
idiv
jns
ds
cmp
inc
adc
sbb
adc
loop
iret
notb
movsb
dec
out
jp
roll
xor
push
xchg
push
jmp
cmp
or
push
xor
sub
jp
push
mov
adc
aam
adc
pop
jge
dec
push
xor
jo
cmpb
es
sbb
mov
test
xchg
aas
cmp
loope
or
push
sbb
push
jl
decb
ds
sbbl
adc
jnp
lahf
xor
lret
push
sub
or
aad
inc
mov
sub
push
push
aas
je
cmp
add
push
adc
stos
jnp
push
dec
xchg
bound
sub
sub
pop
cmp
int
ja
call
inc
sti
mov
pop
daa
imul
lods
loope
dec
mov
popa
ret
dec
push
or
xor
or
xchg
lret
jle
ljmp
sub
xchg
and
sub
and
mov
dec
xchg
inc
std
cmp
and
cmp
inc
adc
daa
sbb
and
sub
inc
and
pop
cmpsl
lahf
xor
bound
sti
mov
inc
shrl
mov
and
mov
cmp
push
movsb
jl
stc
in
ds
call
hlt
mov
sub
or
fnstcw
fcoms
loopne
call
jecxz
sub
push
js
or
jmp
inc
and
or
inc
pushl
ljmp
mov
cwtl
std
pop
lds
or
imul
popl
rcrl
push
dec
mov
adc
or
cmp
dec
bts
rol
adcb
lret
cmp
sub
sub
jl
mov
hlt
pop
inc
call
cmp
xor
fcoms
pop
push
fs
int3
shr
jo
and
cmp
xorb
mov
sub
sub
dec
mov
mov
mov
stos
ret
xorl
mov
push
ffree
or
ljmp
and
cmpsl
jns
sbb
int
leave
insl
je
pop
add
sub
push
mov
mov
dec
xchg
pop
loop
mov
push
rclb
or
test
or
stos
pushf
pop
ret
pop
xor
cmp
sub
cwtl
inc
mov
aad
inc
idiv
or
add
test
dec
mov
aam
stos
dec
test
dec
mov
pop
pop
lcall
pop
lahf
mov
push
das
fs
mov
sbb
cmp
sub
mov
rcrl
fisttpl
jnp
cmp
test
xchg
mov
bound
sar
call
cli
cmp
inc
dec
fiadds
mov
sub
jmp
mov
adc
fs
ret
jns
dec
fnstsw
lods
fiadds
cmp
push
dec
shll
push
dec
sub
jmp
xor
and
or
or
mov
imul
jnp
fsubs
sbb
outsl
xor
cli
dec
sub
push
dec
mov
roll
or
dec
push
test
aam
lahf
ficompl
ja
cmp
adc
loope
mov
jecxz
cmp
int3
mov
mov
iret
std
sub
sbb
lcall
mov
dec
mov
jmp
popf
xor
cmp
leave
xor
es
inc
xchg
jnp
mov
dec
pop
jae
out
xchg
dec
es
mov
sbb
xchg
cmpsb
jle
gs
cmp
or
inc
dec
stos
xlat
mov
fiaddl
das
das
daa
cwtl
adc
push
xchg
bound
inc
loop
movsl
addr16
rorl
leave
nop
dec
sahf
mov
pop
pop
jg
adc
repz
mov
cmp
pop
xlat
das
cmp
cli
es
pop
sub
push
and
adc
add
xor
push
cs
sbb
jmp
adc
test
mov
or
jmp
mov
mov
inc
fwait
mov
push
sbb
popf
push
aaa
lock
or
mov
sub
repnz
mov
dec
or
cmpsl
mov
mov
dec
pop
pop
dec
iret
or
cld
xlat
sbb
inc
mov
or
inc
movsl
pop
mov
adc
int
push
in
xchg
pop
xor
cmp
xchg
xor
ds
in
clc
in
mov
inc
inc
dec
aam
cmp
mov
add
clc
adc
out
inc
dec
xlat
test
shld
mov
mov
cmp
enter
cmp
stos
dec
dec
push
aaa
fmull
shrb
add
adc
test
rcl
rorl
in
ds
mov
inc
push
cmp
dec
dec
or
xchg
icebp
xor
cmp
rolb
mov
mov
push
push
inc
adc
xor
dec
enter
ret
push
and
adc
ret
cli
imul
lods
out
pop
enter
push
xor
mov
inc
lret
iret
jg
sub
xlat
and
in
cmc
or
xchg
sbb
push
and
xchg
mov
push
aad
or
pop
in
sahf
int
adc
test
inc
xchg
mov
push
cmp
sub
cmp
lods
sub
cmpsb
push
cmp
adc
stc
out
ljmp
mov
sti
lret
clc
push
jecxz
xor
add
fcomp
pop
push
addl
mov
push
inc
leave
cmp
stc
adc
pop
pop
aaa
push
mov
pop
loopne
mov
lods
sbb
dec
fcmovb
jo
jne
push
lcall
mov
dec
icebp
mov
lret
loope
xchg
push
mov
shll
pop
and
or
mov
in
iret
sbb
ret
aad
cmp
stos
dec
sub
ret
test
std
aad
movsb
mov
push
ss
jnp
aam
test
mov
mov
cwtl
in
push
icebp
jg
inc
and
jmp
push
iret
xor
sbb
pushf
pop
imul
cwtl
out
dec
add
inc
das
outsl
xchg
sub
push
push
scas
ja
mov
dec
roll
mov
scas
mov
xchg
xchg
lock
repz
test
push
xchg
mov
fadds
movsl
adc
sub
sbb
pop
es
push
sar
lcall
mov
cwtl
push
push
mov
and
aam
sub
loop
jecxz
xchg
lahf
clc
adc
pop
imul
push
sub
mov
rorl
fs
das
rcrl
dec
xlat
out
mov
pusha
xor
add
adc
jns
aam
movsl
push
mov
fistpll
cmp
add
cltd
aaa
ret
mov
insl
sub
xor
dec
sbb
fsubs
dec
sbb
pop
dec
leave
dec
push
fisubs
leave
cmp
adc
or
pop
rcrl
arpl
adc
add
xor
popf
pop
push
daa
rolb
sub
mov
jo
jb
push
loop
inc
cmp
rcr
push
xor
mov
cltd
pop
push
inc
pusha
jmp
dec
in
jg
bound
add
sbb
inc
xchg
inc
push
mov
add
lret
xchg
and
cmp
jne
lret
jae
xor
dec
sbb
mov
cmp
pusha
pusha
inc
push
inc
ljmp
add
rcll
sub
cmp
popf
js
adc
std
incb
in
testl
mov
loop
call
jbe
push
adc
bound
dec
cmp
xchg
pushf
ret
call
mov
aam
scas
sbbb
int3
mov
divb
xchg
adc
mov
push
popa
fidivrl
add
enter
mulb
cmpsb
cmpsl
gs
shrb
sub
mov
cmp
inc
sbb
xor
jle
out
or
fimull
xchg
sti
pop
fs
cmp
out
aaa
imul
test
jne
mov
jmp
adc
outsl
insb
dec
rorb
ss
inc
loop
out
and
xor
pop
jg
sbb
dec
sti
adc
mov
fcmovnbe
repnz
mov
imul
jns
cmp
rcrl
dec
aaa
pop
xchg
jl
lods
cwtl
popa
pop
adc
movsb
pop
shll
or
cwtl
iret
loop
leave
xchg
mov
xor
or
movsl
pushf
gs
lods
xchg
popf
std
lea
adc
test
xor
push
lds
sub
or
cwtl
xor
mov
adc
or
jmp
dec
mov
sbb
pop
sti
rcrl
inc
ja
sub
cmp
xchg
rcrb
sti
loop
shlb
push
bound
rclw
mov
sbb
xor
lret
add
cmpsl
adc
and
test
andb
cld
push
je
scas
jmp
mov
repnz
jne
adc
ds
jno
pop
sbb
and
sbb
adcl
cmp
mov
sahf
pop
adc
add
add
lea
sbb
push
and
lea
out
push
outsl
mov
xor
mov
pop
xor
push
fnstcw
cwtl
nop
ffree
mov
fwait
cs
lock
daa
popa
shl
roll
and
in
push
mov
dec
mov
dec
addb
mov
inc
outsb
aaa
mov
mov
fst
stos
mov
shll
mov
mov
dec
xchg
cld
lret
push
xchg
cld
repz
pusha
pop
or
dec
pop
mov
adc
shll
jl
inc
shll
dec
or
xor
in
aas
dec
pop
push
dec
xchg
ret
sti
dec
cmp
orb
xchg
inc
mov
scas
jnp
dec
inc
mov
push
pop
es
xor
jnp
leave
lret
xor
cmpb
sbb
ja
jmp
js
std
or
jecxz
popa
iret
xchg
push
add
jl
xor
push
push
cmp
mov
mov
ret
inc
mov
mov
xor
aad
xchg
mov
bswap
fdivrs
pop
shr
out
sbb
mov
sbb
pop
leave
jo
push
cmp
arpl
mov
mov
sub
push
cmp
lds
sbb
sub
sbb
jle
sbb
push
cltd
and
push
dec
mov
xchg
adc
neg
jecxz
and
push
or
insb
push
xlat
ss
pop
and
loop
sub
lret
push
push
mov
hlt
es
push
inc
pop
stos
mov
jbe
cmc
lods
xchg
push
xor
shll
xchg
loop
dec
movsb
push
cmp
dec
adcb
cmp
sahf
push
xor
adc
mov
icebp
adc
pop
or
inc
push
or
mov
jb
scas
dec
pop
inc
jecxz
inc
pop
out
or
xchg
xchg
out
test
ss
lods
adc
fs
data16
aaa
iret
repz
je
mov
jp
shlb
aad
call
repz
push
dec
out
jp
dec
inc
mov
scas
xchg
add
push
cmp
cltd
push
lret
jmp
repz
add
add
cltd
mov
repnz
mov
mov
inc
jmp
jecxz
addb
xlat
or
sub
pop
mov
lret
dec
sti
mov
mov
add
xor
pop
ret
xchg
or
lods
sub
lret
out
cmp
or
stc
dec
outsl
hlt
xchg
ja
cmp
or
arpl
sbb
data16
sbb
je
xchg
insb
xor
xchg
jecxz
movsb
daa
inc
jae
lahf
xor
test
rcrb
les
ja
xchg
dec
sub
sbb
mov
sbb
cmpb
sti
lret
clc
add
mov
push
cmpsb
popf
stos
int
jmp
or
cltd
xor
xor
or
andl
add
cld
inc
call
pop
mov
dec
sbb
mov
in
push
pop
and
lods
or
mov
ret
sub
aaa
xchg
addr16
jae
xchg
xchg
movsl
xchg
add
test
dec
fsubr
outsb
mov
lret
xor
pushl
arpl
mov
mov
nop
ja
cmp
pusha
cmp
xor
jmp
add
imul
test
sub
daa
enter
xor
dec
rorl
mov
dec
mov
nop
lods
shll
inc
sbb
sbb
stos
ss
lahf
pop
push
jo
add
sbb
xchg
pop
and
dec
xor
and
int
leave
xchg
xor
pop
mov
push
in
or
andl
and
pop
jle
fstpt
imul
jne
add
gs
cmp
and
jecxz
inc
rolb
or
pop
dec
inc
das
mov
aaa
lock
cmp
mov
in
aas
loop
push
inc
add
pop
cmp
jecxz
fsub
ljmp
xor
pop
mov
push
dec
push
out
ss
lea
xchg
scas
lret
sbb
pop
inc
int3
xchg
imul
mov
sub
es
cmp
xor
mov
xchg
sbb
push
jae
pop
mov
jge
test
push
mov
int
out
inc
sbb
lods
scas
pusha
mov
fmuls
jbe
nop
arpl
jns
mov
test
jge
add
xor
addr16
ss
in
aas
sti
inc
sub
paddd
cltd
adc
add
das
jecxz
mov
in
cmp
js
dec
pop
jp
mov
jbe
ja
xchg
cli
or
push
and
push
lret
add
sbb
cli
inc
jle
push
sbb
mov
mov
rcr
out
out
inc
in
fimuls
fsubrl
fistps
pop
sub
sbb
mov
xchg
pop
jno
data16
lret
mov
push
or
in
or
sbbb
mov
pop
psrlw
jp
dec
dec
fidivrs
mov
push
mov
sub
pop
addr16
out
xchg
add
loopne,pn
jle
dec
ja
mov
adc
push
xor
out
inc
idiv
cmp
insl
addr16
jmp
sbb
jnp
xchg
into
stos
inc
xchg
mov
mov
sti
cmp
mov
jbe
addl
movl
xadd
dec
lcall
mov
dec
movsl
nop
pop
mov
adc
jo
or
aaa
xchg
rcrl
lods
xlat
inc
fistps
dec
addb
dec
ret
or
and
mov
inc
lods
and
jg
mov
js
loop
inc
repnz
cmpsl
mov
imul
mov
and
into
push
mov
dec
leave
jns
dec
pop
popf
mov
shlb
jno
fwait
mov
jg
outsl
repnz
dec
insb
imul
push
xchg
sbb
stc
mov
cmp
mov
out
out
jle
xlat
icebp
das
ret
xchg
add
inc
lret
std
and
sub
das
jns
xor
lods
sub
cmp
mov
adc
ret
cmp
dec
sub
pop
xchg
or
imul
out
lretw
xor
inc
mov
mov
push
cmp
cmp
adc
fs
adcl
int3
mov
clc
loop
or
mov
push
cmp
push
add
lods
test
sub
push
xchg
jp
pushf
addr16
adc
out
and
in
mov
fmull
jns
movl
cli
jnp
clc
ret
outsb
inc
test
sbb
pop
xor
xlat
and
dec
addb
sbb
imul
mov
or
leave
cwtl
xlat
jb
inc
mov
ret
xchg
sti
fstpl
mov
push
mov
cwtl
pop
fwait
xchg
jmp
mov
xchg
or
cs
cs
inc
push
mov
pop
ss
out
cmp
dec
cmp
popa
rep
and
push
dec
pop
and
clc
adc
push
sub
jl
movsl
pop
lods
loopne
inc
loopne
xor
cmc
mov
loop
dec
cmp
sbb
insb
cmovns
das
aam
loopne
push
and
ret
ja
pop
xchg
mov
pop
dec
xchg
in
jns
inc
mov
in
add
stc
dec
fdivrs
fwait
jnp
sub
sub
xchg
adc
clc
add
add
lea
popf
add
out
in
lds
rcrl
in
or
daa
cwtl
and
inc
rorl
scas
fs
in
sbb
xchg
fimuls
pushf
scas
lock
cmp
sbb
pop
in
das
bndldx
mov
jmp
ret
or
inc
out
sub
dec
pop
mov
shll
fstpt
in
push
adc
dec
and
inc
loope
fldt
xor
xchg
sahf
or
std
idiv
mov
add
jnp
leave
mov
cs
and
xlat
mov
lea
add
cmp
xor
push
stos
mov
cmc
lods
mov
aam
xor
sbb
fildl
dec
iret
scas
loop
mov
mov
or
jns
mov
sti
push
bnd
pop
sbb
es
mov
xlat
lods
fcomps
daa
outsl
mov
inc
jge
leave
call
sub
mov
inc
mov
xchg
testl
lret
xlat
lds
pusha
push
fisttpll
or
ficoms
add
adc
lret
rcrl
aaa
jecxz
cmpb
sti
cmc
pop
or
lahf
xchg
pop
or
xor
shl
push
movsb
rcrb
inc
push
sub
fs
stos
push
cmp
jae
cmp
addr16
xor
fstl
jecxz
push
sbb
sbb
push
xchg
push
xchg
dec
mov
push
cmpsl
rorb
enter
imul
dec
push
movsb
jno
ja
fstpt
in
push
jns
pop
pusha
mov
loopne
sbb
cmp
fldt
lods
mov
inc
ds
jb
dec
mov
icebp
and
xor
jmp
dec
xchg
mov
fildl
xor
adc
fidivl
push
xor
aas
xor
cmp
jge
mov
push
xchg
lock
mov
leave
sub
aaa
cmp
mov
imul
lret
add
xor
dec
pop
cmp
and
cmp
gs
rclb
into
xchg
dec
xchg
cli
loop
pop
cwtl
ljmp
or
test
sbb
adc
sub
cmp
mov
or
adc
jnp
or
sti
or
imul
movsb
mov
or
iret
inc
aad
add
add
mov
sub
pop
mov
adc
cld
sbb
xor
add
aaa
fiaddl
jmp
sbb
pusha
out
mov
mov
jge
xchg
leave
fdivrl
jle
outsl
adc
cmpsb
xor
jns
cmc
adc
enter
adc
scas
sarb
and
insb
outsb
sub
iret
repnz
cmp
inc
cs
xor
nopl
jge
inc
popa
xchg
pop
sub
rcrl
mov
push
inc
in
inc
lret
sub
jb
jle
or
add
xor
mov
pusha
sti
jns
jp
out
mov
xlat
fidivrs
or
outsb
xchg
push
or
push
mov
cmpsl
loopne
mov
xor
cmc
jno
data16
mov
mov
bound
fildll
lods
add
push
mov
jno
stc
lahf
dec
adc
popa
ret
imul
rcl
add
cli
roll
and
lods
enter
es
mov
repnz
out
mov
cmp
test
adc
sub
adc
or
push
call
inc
fdivrl
push
idivl
dec
xor
cmp
adc
adc
lret
test
jmp
pop
ffree
idivl
xor
sbb
xchg
adc
jno
stc
les
int
leave
jle
lea
jb
sahf
mov
inc
mov
xchg
arpl
leave
fs
pop
fadd
and
subb
adc
or
xor
adc
movsl
ds
fwait
xchg
call
aad
fyl2x
adc
pop
xchg
push
dec
test
aas
and
fs
sar
je
inc
pop
dec
imul
inc
pop
push
jns
test
pop
or
mov
cltd
mov
fwait
xlat
dec
mov
icebp
testb
and
add
or
inc
dec
dec
fldt
imul
in
rorb
jns
loope
fidivrs
or
in
out
or
shl
mov
test
cltd
or
iret
rorl
insb
inc
enter
jns
xor
test
push
imul
or
out
push
sarb
hlt
imul
push
cmp
pop
lods
pop
fstps
adc
cmpb
cmp
je
mov
lret
imul
mov
add
cmp
sub
ja
aam
xor
jmp
dec
hlt
xchg
mov
je
mov
xchg
fcoms
pop
stos
ret
dec
mov
and
lret
sub
into
out
mov
aas
xlat
out
mov
dec
repnz
or
mov
orb
sbb
loopne
jns
aam
inc
sbb
cmp
test
cmp
aad
push
sub
sbbl
addr16
sbbl
mov
sub
inc
sub
dec
das
jns
test
xlat
mov
sub
adc
in
cwtl
xchg
dec
adcb
idivb
je
push
add
mov
pop
mov
push
pushf
rcrl
sub
jl
or
clc
xor
mov
scas
dec
pop
xor
cmp
jl
incl
pop
cmpsl
adc
addr16
and
sbb
sbb
out
mov
xor
and
push
cmp
mov
mov
push
call
dec
xor
dec
mov
or
pop
ja
out
clc
mov
fsub
xchg
adc
and
inc
ljmp
or
push
jmp
and
cmp
and
popa
fucom
mov
xchg
mov
push
and
xor
int
shll
mov
cmp
inc
mov
gs
ffreep
inc
out
cld
sti
mov
pop
frstor
xchg
mov
jg
leave
shll
into
sti
cli
mov
int
push
stos
pop
icebp
or
fadds
push
js
es
mov
scas
sti
lods
mov
inc
mov
cmpsb
fiadds
adc
push
push
divb
push
lea
out
adc
or
test
std
arpl
out
lret
mov
mov
call
cmp
mov
jnp
jecxz
pop
adc
dec
xor
xchg
sbb
es
xchg
pop
fldt
xor
dec
mov
or
dec
loope
mov
push
add
test
add
mov
xchg
ss
dec
sub
push
mov
xor
fisubrl
aas
mov
mov
jl
cs
or
loop
popf
mov
daa
push
pop
push
fwait
adc
mov
add
add
in
adc
mov
fildl
aaa
mov
repz
repz
iret
sub
lret
push
push
lods
lcall
xor
or
sub
lods
inc
xor
or
sub
ficomps
sub
push
rolb
js
inc
orb
movsb
negl
pop
inc
sbb
aaa
mov
mov
mov
jae
pusha
xor
sbb
pop
sub
add
data16
pusha
in
jne
pop
js
clc
repz
push
in
or
cmpl
mov
xor
xlat
xor
lret
icebp
push
sbb
adc
stos
test
mov
scas
or
decb
lods
push
es
lods
je
pop
or
sub
xor
ret
dec
addb
push
enter
mov
sbb
ss
cmp
test
addl
mov
aam
push
pop
mov
or
repz
mov
fs
dec
stos
push
ret
ret
out
xchg
xor
loopne
fistpl
sub
sub
adc
add
repz
outsb
rolb
cli
mov
mov
xchg
mov
cmp
out
ja
or
js
mov
sbb
jecxz
mov
in
push
imul
std
cmp
nop
fistps
fs
jb
lcall
pop
imul
sbb
fabs
mov
mov
mov
or
push
push
xchg
mov
mov
ja
xor
sbb
adc
jns
repnz
pop
jae
bswap
push
fsub
cltd
cli
div
ds
lret
jmp
cmp
or
sbb
aas
pop
inc
mov
shrl
pop
pop
push
shlb
ss
rorb
mov
or
cmp
and
mov
lock
out
mov
or
and
pop
rorl
pop
cmp
mov
aad
test
inc
ja
aam
sar
pop
jge
lds
ss
jae
push
push
xchg
test
enter
adc
adc
add
mov
jmp
fsubr
fildl
aaa
xor
popa
sub
jmp
inc
fistpl
cmp
mov
js
push
frstor
js
loope
dec
jmp
push
popl
xchg
sbb
sub
es
mov
js
cltd
or
stc
sub
xchg
adc
jmp
test
cmp
fisttpl
add
push
dec
fadd
test
cmp
aas
lods
cmpsb
daa
xor
push
mov
xchg
push
jmp
jge
sarb
push
add
stos
aam
xchg
jmp
scas
sti
add
lret
scas
arpl
cmp
shll
jle
fsubp
icebp
xchg
pop
sbb
push
pusha
jp
push
mov
inc
pop
imul
dec
and
and
inc
outsl
cmp
bound
lahf
xchg
int
xchg
sarl
nop
addb
inc
ss
sub
mov
test
sbbb
dec
xorl
ja
mov
xor
adc
pop
fcoml
add
rorb
jl
stc
inc
or
test
pusha
mov
sbb
in
dec
pop
das
mov
mov
ljmp
xor
or
repz
mov
pop
mov
mov
sub
dec
dec
push
dec
pop
adc
shlb
or
sub
dec
lret
jmp
aaa
xor
jbe
xor
mov
xorb
cmove
push
cs
mov
xlat
xor
das
std
inc
dec
push
push
scas
sub
out
mov
mov
pop
loop
xchg
dec
push
push
bound
cmpl
push
add
sub
fwait
xor
xor
dec
push
cmp
inc
lods
adc
fbld
dec
push
popf
outsl
jp
push
push
pop
in
sbb
jmp
jle
and
cmp
aas
inc
stos
cmpb
adc
xor
in
dec
xor
adc
cmp
jb
into
in
stc
ljmp
fwait
dec
fs
dec
xchg
jl
fs
hlt
adc
pop
std
xlat
sti
pop
adc
cmc
xchg
add
mov
std
aad
cmc
scas
inc
push
xor
inc
rorb
mov
sti
dec
cmp
jmp
sub
sbb
sub
add
lock
mov
jno
mov
and
ficomps
stos
push
push
into
and
inc
and
xchg
stos
jl
mov
jae
sub
push
aad
push
xor
fmuls
adc
cmp
stc
dec
insl
cmp
xchg
cmpsb
add
ss
nop
notl
adc
jne
push
aas
lods
pop
sbbb
pop
mov
cmp
and
jnp
sub
xchg
enter
sub
pop
jecxz
dec
inc
mov
pushl
xor
pop
clc
insl
inc
movsb
pusha
pop
vcmpps
mov
and
outsl
sub
inc
cmp
in
shrl
divb
mov
lods
dec
jne
xchg
sbb
xchg
adcb
insl
adc
lea
and
cmc
pop
push
sbb
sti
add
push
shr
and
pop
ja
loope
pop
lods
scas
adc
sub
push
test
in
inc
sub
pavgw
pop
mov
add
push
pushw
scas
gs
shll
sbb
inc
fs
mov
imul
dec
ret
sbb
je
xchg
es
jns
jne
mov
cs
push
cmp
mov
mov
pop
arpl
subb
or
cltd
rorl
dec
mov
xchg
rclb
sub
lods
xorb
inc
cmp
mov
inc
adc
scas
pusha
cld
fcomip
sbb
cmp
mov
inc
xchg
dec
pop
std
lcall
push
filds
adc
jl
push
xchg
ss
mov
sub
dec
aas
clc
fisttpl
jno
das
mov
test
xchg
jmp
and
jmp
in
xchg
fs
int3
pop
inc
jl
cmc
xchg
stc
sbb
repz
pop
or
xchg
lods
mov
xorb
sbb
cwtl
mov
push
rol
adc
pop
jle
sbb
sti
testb
inc
pop
xlat
lock
sub
pop
xor
rcrl
sbb
rorb
or
jbe
out
inc
sti
add
lods
push
subl
sbb
mov
push
sti
pop
xor
lods
setne
popf
xchg
push
cmp
push
mov
shlb
sub
out
and
mov
jne
fisubs
jne
sbb
dec
cmp
mov
push
jp
xor
das
cmp
push
mov
jge
jg
je
sub
push
aam
imul
cmp
mov
xchg
popa
jecxz
mov
fistl
dec
mull
es
pop
sbb
adc
rol
fwait
sub
xor
pop
iret
cli
adc
arpl
jne
shrb
popf
hlt
adc
out
stos
adc
stos
push
ret
orb
sbb
xchg
sbb
lret
and
aas
repz
test
dec
enter
adc
lret
dec
cmp
cli
lret
and
es
xchg
adc
mov
adc
mov
js
push
shrl
es
std
in
sub
repz
js
xor
stos
push
pop
and
sub
jle
adc
jmp
sub
adc
leave
andl
es
xchg
sbb
leave
jmp
and
enter
dec
lret
jl
ret
mov
mov
dec
je
scas
sbb
cmpps
xor
xchg
out
call
fadd
and
outsb
aas
stc
fisttpl
leave
sub
or
mov
sbb
mov
mov
popf
push
inc
repnz
mov
ret
ljmp
adc
dec
cmp
mov
inc
jmp
rcll
mov
or
push
rcrl
mov
sub
adc
adc
cli
fistpl
cmp
call
jns
cmpl
enter
jns
rcpps
pushf
stc
daa
sub
pop
sub
sub
cmp
push
sub
push
jl
xchg
push
and
or
lock
dec
insb
xor
clc
sub
dec
push
pop
xor
cmpb
lcall
mov
aas
outsl
je
xchg
nop
jns
pop
inc
imul
call
test
or
call
mov
int3
adc
mov
ja
inc
or
sbb
sub
push
cmp
mov
stc
sub
xor
add
jnp
adc
outsb
adc
pop
pop
inc
inc
cmpsl
inc
jl
dec
lcall
xlat
cmpsl
mov
decl
jmp
fisubrs
pop
sti
sbb
aad
retw
sti
pop
cwtl
jo
dec
int3
dec
pushf
push
movsl
pop
mov
jle
xor
dec
pop
ret
sti
and
xor
les
cmp
cmp
jge
jbe
xchg
adc
fucomi
pop
je
mov
xor
mov
sbb
je
fbstp
loopne
push
mov
cmp
mov
and
idivb
out
jnp
fcmovnb
adc
loop
movsb
sbb
aaa
push
rclb
addr16
xor
mov
sub
sar
mov
in
out
popf
lds
push
in
outsb
pop
out
aas
xchg
or
repnz
mov
cmc
je
sbb
pop
daa
sbb
push
xchg
jecxz
inc
ss
or
leave
jp
sub
push
dec
or
inc
cmpsl
movsb
or
jmp
mov
xor
dec
movl
imul
cmp
mov
mov
inc
sbb
and
xchg
fisubs
ss
dec
fs
ret
test
sub
stc
dec
mov
aaa
inc
out
or
fildl
lods
ljmp
mov
and
xchg
addr16
das
jae
aaa
xchg
sbb
dec
xor
mov
outsl
sbb
xor
and
stos
loop
jo
into
cmp
daa
cmp
push
bound
inc
dec
sbb
push
nop
add
xchg
mov
dec
mov
mov
jl
notb
adc
sti
scas
mov
cmp
push
lods
in
test
push
fiaddl
inc
leave
adc
push
lret
sar
icebp
nop
sbb
xchg
imul
stos
pop
mov
mov
dec
mov
test
std
mov
cwtl
mov
adc
fisttps
inc
aas
out
test
imull
mov
movntq
xchg
aaa
push
sbb
jae
aad
movl
call
scas
clc
mov
ds
cvttps2pi
call
es
adc
mov
fcmovnbe
cltd
xor
sub
xchg
cs
fistpl
imul
dec
push
fdivrs
mov
cmp
xor
ja
add
xor
loopne
divb
fwait
repz
mov
lret
xchg
outsl
xchg
dec
out
ds
inc
pop
aad
add
outsb
sbb
sbb
mov
inc
scas
xlat
push
mov
adc
lods
xor
pop
sbb
rcrb
ss
sti
jle
incb
push
js
mov
inc
add
push
and
xchg
cmp
repnz
sbb
cwtl
cmp
jae
mov
pop
fbstp
mov
lret
fstpl
add
xor
int
sti
mov
dec
adc
xchg
pop
mov
xlat
ret
xchg
mov
pop
push
repz
pop
xor
std
movl
mov
mov
jae
jno
or
andl
in
es
pop
mov
into
mov
loop
bound
push
push
jo
pop
out
push
loop
mov
pop
addr16
ficoms
push
jle
test
or
scas
push
outsl
push
xchg
jmp
inc
push
jle
scas
mov
jmp
xchg
lret
jo
jp
jecxz
add
sub
filds
out
mov
xor
pop
adc
dec
jge
andb
cmpsb
push
pop
sbb
js
hlt
cmp
xchg
mov
inc
sbb
sub
div
and
sbb
cmp
nop
repnz
adc
or
sbb
cmpsl
dec
in
cmp
cmp
leave
xchg
subb
push
je
in
cmp
cmp
lods
mov
sub
dec
pop
jne
adc
shll
ror
xor
xor
dec
push
idivb
pop
xchg
sti
mov
aad
scas
add
xor
int
dec
sub
push
pop
out
xor
mov
mov
lret
mov
in
push
fsubrs
pusha
add
or
xor
hlt
xchg
adc
cmp
xchg
movsb
sub
pop
out
push
int3
sbb
loopne
sub
pop
in
jl
jns
mov
dec
xchg
pop
or
sbb
dec
push
aam
push
adc
or
and
shlb
pop
ljmp
cs
push
sbbl
sbb
sbb
sbb
cs
add
call
lods
add
xchg
lods
pusha
pop
lcall
inc
jo
mov
lds
mov
addr16
or
mov
aam
ds
mov
jl
push
sti
push
push
mov
fisttpll
xor
out
loope
das
adc
std
mov
mov
roll
add
dec
and
push
and
sub
rclb
mov
push
rorb
mov
in
loopne
adc
push
adc
mov
fisttpl
js
std
pop
pop
orb
pop
pop
mov
cmp
adc
out
push
mov
jmp
test
ja
sub
mov
sub
cmp
ss
lcall
les
scas
add
inc
mov
stos
xadd
test
cmp
lsl
adc
push
mov
xchg
push
dec
test
insb
jl
xchg
cmp
jnp
sub
sub
inc
aad
xor
fldt
ficoms
push
push
adc
mov
push
daa
movsl
mov
jnp
jecxz
sub
sti
mov
push
iret
dec
fsubrl
push
mov
test
aas
shr
push
mov
and
push
jmp
aas
sbb
std
enter
adc
roll
add
js
test
testb
jecxz
inc
outsl
jl
lahf
sbb
add
sbb
cmp
ds
test
jmp
fcomi
sti
or
sbb
stc
dec
mov
push
out
add
fwait
pushf
sbb
push
jl
pop
xor
fs
aas
jnp
jl
xor
mov
orb
vmulsd
push
sar
or
mov
push
sub
js
ds
sbb
jecxz
add
xchg
adc
cmp
es
pop
stc
inc
ljmp
inc
xchg
inc
in
sbb
mov
lods
xchg
ret
xor
cmc
jl
mov
test
bound
scas
lret
push
movsb
outsl
ss
adc
inc
push
xorl
cmp
data16
fcoms
cmp
lods
dec
mov
cli
iret
sbb
adc
es
inc
inc
inc
sti
inc
fdiv
les
pop
std
cs
xchg
mov
push
mov
cwtl
mov
out
pop
adc
inc
xor
xchg
dec
dec
push
xchg
mov
cs
dec
jmp
add
add
cli
or
xchg
pop
sarl
cmpsb
cmc
dec
insl
ss
inc
ljmp
dec
or
fs
call
in
xor
ljmp
xchg
push
jecxz
cmp
mov
push
mov
adc
insb
lcall
pop
sbb
inc
cli
xor
mov
xor
mov
cs
add
add
sbb
test
lods
mov
lods
mull
sub
pop
cmp
ljmp
and
loop
and
mov
repnz
packuswb
cs
lret
int3
push
or
stc
fistpl
and
in
ror
push
adc
in
jmp
dec
lods
outsl
rolb
or
xor
jae
aaa
xchg
ljmp
imul
mov
in
pop
imul
inc
addb
out
mov
repz
pop
push
imul
xchg
mov
push
enter
pusha
push
jmp
es
cli
and
add
leave
adc
mov
lret
cld
iret
jno
dec
sbb
cwtl
sti
jmp
ret
add
out
inc
cmp
jge
mov
jb
int
test
jmp
sub
test
in
pop
leave
mov
aaa
mov
pop
std
pop
mov
or
jge
les
or
pusha
xor
sub
sbb
sub
inc
pusha
push
push
js
test
in
push
fadd
xchg
lods
pop
ljmp
push
xor
loopne
loope
xor
stc
sub
jno
mov
jmp
xchg
or
frstor
ret
test
sub
rcll
insl
push
adc
sub
pop
pop
mov
jp
lret
loopne
imul
in
adc
add
adc
dec
repnz
pop
mov
sub
or
or
out
jg
or
mov
push
cmp
dec
pop
cmp
dec
pop
test
push
popa
outsl
fsub
data16
xchg
and
fistl
cli
mov
cli
xor
adc
inc
clc
inc
ds
fwait
dec
mov
test
or
rcrl
or
repnz
ja
cmpsl
adc
mov
mov
pop
lahf
mov
cmp
pop
push
imul
mov
jo
pop
jl
cmp
rcll
inc
ja
rcrl
ret
call
ds
inc
xchg
stos
repnz
jp
push
clc
outsl
cmp
stc
xor
fsts
xor
ss
lods
jnp
mov
pop
lcall
adc
icebp
xchg
pop
adc
sbb
in
mov
inc
cmp
stc
add
xchg
sti
ja
xchg
adc
inc
pop
xor
push
rorl
fcomps
or
inc
fistpl
push
iret
nop
xor
jo
or
dec
repnz
xchg
clc
xchg
dec
xor
paddd
pop
repnz
or
cmp
push
mov
notl
jno
scas
in
xchg
in
adc
or
mov
test
arpl
jle
clc
xorb
inc
jnp
sub
testb
or
mov
enter
push
dec
mov
pop
mov
cmpsl
inc
pop
data16
xchg
clc
pop
mov
loopne,pn
lods
or
xchg
or
mov
movsl
call
lods
adcb
arpl
andb
std
lea
sub
xlat
pop
dec
dec
iret
mov
xor
ss
jp
aad
mov
aaa
push
lds
add
inc
dec
adc
pop
mov
rsqrtps
ret
shr
xchg
push
mov
pop
movsbl
dec
int3
lods
aaa
das
sbb
notl
cli
pop
cli
lahf
or
aaa
ss
test
xchg
adc
push
int
cmp
add
xchg
popa
mov
shrb
sub
cmp
std
mov
sbb
loop
push
es
stos
dec
lcall
adc
sub
mov
aas
jnp
dec
cmp
stos
push
imul
xor
push
push
dec
xor
sbb
jp
bound
lret
pop
jmp
out
aas
lods
jp
xchg
fidivrl
into
dec
mov
and
or
fdivl
aaa
das
jns
xor
mov
lret
push
add
subl
adc
jnp
mov
sbb
xabort
cli
imul
push
pushf
scas
int
xor
push
mov
lea
fdivs
jnp
or
fstpl
outsl
inc
rcr
add
shr
mov
adc
lret
loop
xlat
lret
sarb
repnz
or
fcomps
cli
dec
cmp
sbb
lods
inc
es
mov
enter
xchg
rclb
dec
mov
adc
sub
std
insl
xchg
les
scas
add
add
imul
int
jae
add
jo
js
orb
dec
imul
xchg
pop
outsl
dec
xchg
fwait
cli
mov
leave
and
or
adc
dec
or
lret
cmc
push
ds
out
into
push
sub
cmp
sub
mov
lds
cli
andb
imul
ds
add
pop
scas
sbb
sti
out
inc
jmp
imul
jb
fcoml
lcall
fadd
sbb
push
push
mov
movsl
iret
les
jg
sub
xor
outsl
mov
lods
aad
xchg
dec
jno
jle
push
add
mov
cmp
fadd
out
push
inc
aaa
push
pop
cld
movsb
std
mov
push
jmp
or
sti
mov
push
clc
aas
int3
movl
stc
or
lds
cmp
mov
dec
cwtl
inc
enter
mov
cmpsb
pusha
push
scas
cmpsb
flds
aad
and
jl
sub
jmp
push
push
sarb
sbb
fwait
jle
xor
sbb
xchg
add
inc
sbb
push
mov
pop
out
lret
ret
push
je
push
and
jae
add
movsb
lods
cmp
daa
sub
mov
mov
je
popf
sub
fcmovne
mov
cmp
pop
push
test
jae
nop
lret
icebp
out
pusha
push
negl
xor
idivb
sub
dec
cmc
adc
dec
aas
loop
loope
aam
stos
sbb
sbb
push
negl
sub
push
xor
loop
fcom
mov
stos
repz
fcompl
cmp
push
imul
ss
dec
mov
inc
mov
xor
mov
sarb
cmpsb
sti
pop
mov
jns
fadds
mov
mov
pop
inc
mov
sub
xor
sub
or
ljmp
fsubs
stc
xor
imul
lods
push
dec
ja
sub
int3
or
sub
push
adc
test
mov
xchg
ret
shlb
xor
dec
out
sbb
or
dec
movsb
adc
sbb
jae
sub
xor
push
repz
mov
sub
sbb
sub
mov
lods
xchg
lret
dec
ljmp
inc
cs
sbb
cmpsl
adc
lretw
fildl
sub
dec
push
pop
cli
cs
inc
sub
push
fcompl
mov
aas
sub
mov
cmpsl
add
lods
sbb
mov
scas
adc
jo
cmp
sbb
xor
inc
mov
xor
jns
cmc
and
or
xor
mov
xor
stos
or
xor
mov
xor
xchg
cmp
jae
idivb
jl
fisttps
aas
sub
xor
arpl
sti
jae
and
and
cwtl
es
add
xchg
dec
pop
sbbb
inc
inc
dec
push
inc
inc
jnp
roll
cltd
inc
test
cmp
pop
jg
cmp
cli
mov
rclb
xchg
mov
mov
in
xor
or
sbb
xchg
mov
xchg
push
cmc
data16
push
lret
xchg
test
dec
mov
pop
orl
sbb
dec
andb
and
or
mulb
push
std
push
inc
enter
cmp
ss
pop
cmp
sbb
or
cld
and
test
test
xor
jae
xchg
or
cmp
test
jnp
jo
xchg
xlat
mov
sbb
adc
mov
lcall
inc
scas
mov
aad
sbb
test
jg
bound
dec
rcrb
jno
fisubs
pop
pop
pop
sbb
xor
mov
adc
xor
and
outsl
mov
cmp
fisubs
push
mov
xor
pushl
in
testb
push
lea
sub
scas
jb
repnz
int
pop
subb
ljmp
xchg
or
lods
outsl
jge
mov
add
cltd
ror
scas
xlat
push
sub
out
cmpsl
add
mov
decb
pop
xchg
ss
fisttpl
pop
mov
iret
fs
fcmovu
push
cmp
pop
sbb
dec
test
mov
sub
loopne
mov
lea
jl
rclb
mov
mov
cmp
cli
and
push
inc
sbb
or
mov
mov
dec
addr16
mov
hlt
xchg
ret
push
ror
xor
or
sti
addr16
fwait
ja
sbb
out
cmp
mov
adc
sub
push
fcomi
enter
and
jg
das
inc
sahf
imul
div
cwtl
sub
pop
push
dec
mov
aad
dec
adc
add
sahf
cmc
mov
inc
dec
dec
sub
ficomps
js
and
dec
push
imul
mov
sti
je
testb
mov
mov
mov
idivb
fwait
int3
sub
pop
xor
mov
push
push
div
loopne
cwtl
push
push
inc
sub
arpl
dec
data16
xlat
lods
cmp
pop
inc
insl
pop
jae
dec
dec
fistps
ss
repz
jmp
sub
out
adc
jns
das
test
mov
mov
mov
xchg
pop
cs
and
adc
add
cmp
stos
hlt
inc
pop
or
dec
mov
lods
int
repnz
stos
xchg
inc
ret
aad
dec
fnsave
push
mov
xchg
nop
lahf
mov
imul
add
addb
fnstsw
mov
mov
loop
fsubrs
les
pop
arpl
sub
inc
sbb
sahf
jae
sti
mov
jbe
sbb
test
ret
add
jg
mov
jle
jnp
js
cmp
dec
aaa
inc
xchg
inc
notl
andb
mov
das
fldt
enter
mov
cld
enter
repnz
es
sbb
into
dec
int
daa
jnp
cmp
mov
adc
xchg
jmp
adc
nop/reserved
xor
not
adc
pop
sbb
insl
push
cmp
mov
repnz
sbb
and
int
shr
fstp
pop
mov
leave
out
mov
inc
mov
stos
push
mov
sti
and
xorl
xor
repz
cwtl
dec
lods
adc
xchg
jo
fistpll
es
xchg
mov
aam
outsl
push
data16
imul
scas
loop
pusha
or
pop
mov
in
scas
bound
sub
push
bound
aad
adc
xchg
std
mov
outsl
mov
int
push
stos
xchg
sti
pop
mov
loop
add
sub
outsl
and
sbb
cmc
fsubrp
imulb
adc
pop
push
jo
add
aas
inc
cmp
mov
pop
fst
cwtl
fwait
mov
mov
push
push
xlat
xchg
sbb
rcll
mov
cmp
mov
dec
push
fcomps
mov
dec
or
mov
mov
lcall
addps
test
mov
data16
adc
mov
cmp
jecxz
decl
mov
mov
xor
cmp
aas
inc
cmp
sahf
mull
sub
mov
push
push
rorb
or
xorl
jmp
cmp
aad
sub
add
sub
sbb
cmpsb
leave
mov
cltd
dec
ja
push
jl
mov
pop
add
fxch
lret
dec
mov
fs
ret
lret
iret
push
leave
mov
lods
repnz
and
rcr
lret
lods
aam
mov
sti
mov
clc
outsl
pop
sub
loope
pop
xchg
mov
sbb
add
cmp
lds
out
adc
mov
fildll
add
cld
jnp
lcall
or
pushf
hlt
sbb
xchg
ja
rcll
lds
inc
cmp
aas
fistl
adc
jmp
sbb
or
es
pushf
dec
xchg
bswap
sbb
cmpsl
clc
lods
sbb
fwait
cmp
rorb
lret
aaa
jno
lock
jo
xchg
out
ret
pop
pusha
inc
mov
stc
pop
jae
movsl
fimuls
leave
mov
push
and
rcll
aas
adc
aad
and
in
out
sbb
xor
sbb
negl
push
xchg
push
pop
pop
cmp
jnp
outsl
and
rolb
std
lcall
ss
pop
xor
sub
xlat
addb
lods
xor
pop
push
dec
jae
mov
popa
rclb
lret
mov
mov
loop
sbb
adc
mov
xor
mov
push
arpl
xchg
jmp
push
cli
orb
pop
adc
sbb
push
push
sbb
add
jo
cmp
add
in
pop
inc
mov
std
hlt
mov
sub
popa
inc
push
sub
and
or
pop
xlat
lret
cmp
mov
push
popl
lods
push
out
cmp
sub
xor
in
ficomps
dec
js
mov
leave
add
cmp
dec
ss
cmp
pop
push
xchg
sub
mull
pop
out
xchg
out
add
fwait
adc
imul
sbb
rcrl
mov
adc
in
lods
imul
stc
lock
adc
fisttps
inc
sbb
add
lods
push
mov
push
rcll
inc
cmp
mov
rcrl
mov
fildl
dec
pop
inc
imul
loop
jecxz
roll
mov
les
insb
xchg
repz
fcoml
dec
pop
xchg
ja
adcb
loopne
cmp
decl
cmp
cmp
dec
pop
and
sti
push
mov
inc
dec
xchg
mov
scas
add
push
pop
movsb
push
addr16
pop
dec
sub
cmp
and
dec
add
stos
jl
scas
lods
jnp
sbb
out
lret
mov
mov
cmpsl
arpl
mov
ss
mov
in
stc
fisubrs
lods
jecxz
mov
pop
sbb
push
into
jp
repz
dec
or
sub
lret
rcrl
cmp
mov
sarl
jg
test
orb
in
stc
insl
mov
pop
imul
xlat
push
push
dec
sbb
dec
mov
ja
test
push
jnp
xor
or
in
adc
in
jnp
sub
addr16
push
mov
lahf
ss
ss
out
pop
fsubs
xchg
push
mov
add
dec
jo
pop
iret
mov
jae
dec
dec
xor
fstpt
xchg
fiaddl
out
mov
shl
neg
dec
push
push
sub
mov
pop
into
lret
mov
adc
xor
repz
mov
push
outsl
xor
cld
jns
movsb
loop
rcrb
pop
inc
xchg
lahf
or
iret
ud1
fsubp
fnstenv
pop
add
jmp
pop
gs
fmuls
jecxz
mov
and
adc
out
push
testb
jbe
adc
icebp
mov
outsb
hlt
cmp
in
sub
in
incl
arpl
or
loopne
dec
clc
xor
push
repz
push
rolb
stos
es
xor
jns
loop
fwait
xor
inc
push
test
nop
icebp
mov
clc
push
fwait
lods
negl
es
mov
test
ret
mov
dec
decl
inc
xchg
mov
push
cmp
inc
arpl
popa
fcmovnbe
pop
pop
sbb
xchg
dec
jo
push
dec
fdivs
sahf
or
sbb
push
jns
sbb
adc
mov
inc
out
mov
pop
cmp
jbe
rcrl
push
stos
cmp
inc
ljmp
dec
outsb
xlat
mov
inc
dec
in
sahf
sub
adc
fbld
jle
shl
lea
cmp
inc
das
xchg
punpckhdq
dec
test
jecxz
lods
and
pop
insb
cmpsl
cmpsb
lcall
inc
jmp
cmpsb
add
mov
sbb
or
sysenter
lret
xor
fbstp
xchg
lret
xor
outsl
xchg
sbb
inc
imul
xor
or
cmp
ss
sub
decl
mov
leave
fisttpl
lret
dec
or
mov
inc
out
push
rorl
pop
cmp
sub
shrb
add
sbb
cs
cli
iret
cmp
sbb
jmp
cmp
mov
and
js
stc
pop
mov
sub
dec
pop
adc
or
pop
inc
xor
popf
dec
jmp
xchg
mov
cmc
xor
cmpsl
mov
xchg
jecxz
or
cmp
repz
adc
xchg
push
mov
pop
xchg
les
push
rcll
push
data16
fwait
push
pop
jle
pop
inc
xchg
mov
cmp
roll
mov
js
loopne
xchg
lret
push
andb
dec
inc
sarl
jge
mov
and
js
sahf
mov
ficoms
fcoml
jnp
hlt
in
jae
jmp
pushf
adc
jmp
and
popf
cmp
add
outsl
dec
mov
dec
pop
fadds
fcmove
mov
xchg
xchg
hlt
je
cld
xchg
sub
jle
mov
push
imul
sub
dec
push
je
setb
push
sbb
mov
cmpsl
cmp
pushf
adc
fwait
dec
adc
dec
adc
adc
test
pop
push
xorb
cmp
mov
xor
pop
gs
or
sub
stos
orl
sub
sub
loopne
mov
pusha
imul
dec
push
sub
ds
outsb
or
adcb
dec
push
js
bound
sbb
jo
xchg
push
pop
es
pop
mov
cmpsb
frstor
cmp
dec
leave
xlat
pop
adc
das
inc
fmuls
mov
outsl
lods
pop
mov
fnstcw
out
cmpsl
popf
rclb
into
ja
jmp
adc
decb
dec
rcll
sti
pop
dec
dec
pushf
mov
outsb
lds
negb
cmp
aaa
dec
pop
into
nop
dec
jg
inc
enter
and
jo
lods
push
adc
mov
jmp
sarl
add
xor
pop
lods
in
inc
cmp
mov
mov
aad
lea
shll
fisttpl
pop
pop
cmp
imul
notb
push
repnz
sub
mov
xchg
mov
push
xchg
jns
lret
ss
or
aaa
or
fcomps
in
mov
xorb
scas
dec
pop
pop
bound
mov
mov
ss
test
jne
cltd
gs
dec
xorb
inc
pop
cmp
pop
jmp
fdivs
jbe
dec
nop
and
jns
push
aam
outsl
cwtl
push
scas
adc
xchg
jns
rclb
inc
mov
leave
fisubl
pop
or
adc
rep
dec
mov
jmp
mov
pop
mov
pop
sbb
push
cs
jmp
fistl
inc
inc
pop
dec
dec
dec
mov
fwait
mov
cmp
scas
or
roll
stc
push
aam
dec
movsl
mov
lods
sbb
or
loope
sbb
xchg
xchg
sti
sub
cmp
movsl
xchg
scas
pop
imul
dec
fildl
sbb
std
sub
test
inc
test
jg,pt
xor
jle
movsl
sub
imulb
repnz
aad
out
inc
pop
out
xorb
ret
mov
add
loope
sti
mov
addr16
scas
dec
lods
fucom
xor
decb
ret
pop
mov
outsl
inc
stc
sahf
xlat
testb
call
call
mov
sbb
sbb
lods
jne
and
ljmp
or
sbb
pushf
xor
adc
popf
cs
adcl
push
les
or
ret
mov
lods
mov
sbb
or
mov
loope
push
popf
pop
push
cs
inc
jle
faddp
xchg
rcrl
cmp
ljmp
adc
or
sbb
pop
and
movsb
cltd
or
outsl
mov
xchg
push
jae
cs
ljmp
sbb
mov
subl
int
aaa
inc
sbb
dec
mov
aas
leave
jle
test
addr16
xor
xor
stos
sbb
pop
cmp
dec
daa
xor
sti
addr16
mov
cmc
fiadds
gs
mov
mov
and
arpl
fldz
repnz
mov
xchg
mov
je
push
xor
inc
mov
fs
mov
jecxz
push
dec
mov
cmpsl
leave
lret
rcrl
and
enter
stc
dec
jns
cmp
inc
xchg
cmp
adc
adc
aas
xchg
mov
and
fldt
sbb
out
pop
or
dec
nop
add
sbb
push
mov
cmpsl
cmp
inc
add
mov
popa
cmp
dec
inc
test
mov
dec
push
xchg
mov
inc
nop
hlt
inc
push
and
bound
es
mov
xor
jle
scas
cmp
aad
push
jns
ss
cs
ficoms
ljmp
mov
xchg
fsubrp
mov
cmp
jo
movsb
and
pop
jb
sbb
jp
lret
xlat
fs
out
nop
adc
lret
push
cmp
dec
ljmp
cs
adcb
add
dec
sbb
or
rcrl
ficompl
mov
sub
fidivl
int3
pop
out
xor
aad
pop
lods
aaa
mov
shl
sub
lea
imul
push
xor
dec
xchg
xchg
or
xor
and
sub
mov
add
daa
sar
popa
loop
in
stos
fisttpl
fs
fs
push
mov
jne
pusha
aad
es
push
adc
repz
shrl
xchg
repnz
jl
mov
out
cmp
aas
sbb
aaa
xchg
adc
jno
mov
sbb
test
movl
imul
sbb
mov
add
sub
imul
test
popf
or
cmp
push
dec
inc
sbbb
mov
jg
jnp
adcl
fistpll
xchg
test
test
test
dec
cmpsl
andb
sbb
fwait
dec
sub
add
cmp
in
lahf
mov
fdivs
sti
loopne
inc
fldenv
fbld
xchg
mov
out
sub
push
mov
jecxz
xor
sub
loope
aam
inc
xlat
sub
cmp
jae
jmp
cmp
pop
push
sbb
js
inc
iret
mov
mov
and
push
add
xor
mov
jg
sysenter
pop
dec
xchg
adc
add
jnp
or
in
sub
loope
dec
xor
inc
inc
jns
rol
xchg
inc
inc
or
dec
clc
addb
dec
mov
pop
jl
mul
out
xor
test
rcrl
pusha
xchg
fiaddl
je
push
xchg
mov
and
xchg
ret
in
cmc
arpl
or
sbb
stos
xchg
xor
and
repz
fs
sbb
ret
ss
insb
ss
jecxz
lods
daa
imulb
cmp
mov
xor
sahf
cmp
cmpsl
mov
nop
lds
cs
cltd
aaa
or
xor
adc
imulb
mull
jne
inc
cmp
adcb
fwait
mov
sbb
sbb
shr
lret
adc
mov
dec
mov
lcall
adcl
sub
push
pusha
mov
cltd
jno
loope
mov
outsl
mov
mov
or
push
cmpsl
dec
mov
mov
cmp
bound
xor
js
push
in
out
or
test
pop
sbb
mov
loop
adc
rol
mov
ss
popa
adc
mov
adc
sbb
pop
and
xor
outsl
adc
sub
push
aam
push
bound
dec
popa
stc
lret
popa
addr16
out
push
dec
inc
fsubrl
push
insb
repnz
lret
mov
and
mov
jecxz
stc
dec
in
lods
loop
sbb
sbb
and
or
dec
cmp
push
pop
inc
cmp
push
fninit
addr16
inc
sbb
and
adc
adc
mov
outsl
xor
ss
adc
mov
add
adc
shrd
enter
rclb
cmp
and
mov
inc
pop
ret
ja
sbb
push
mov
inc
jno
mov
xchg
pop
mov
fwait
xchg
xor
push
and
sahf
rolb
push
fdivs
addr16
inc
dec
roll
jp
dec
adc
adc
sbb
or
inc
mov
and
sbb
imul
inc
pusha
repz
loop
cmp
cwtl
movl
push
shll
dec
orl
adc
adc
fldenv
icebp
out
add
fcompl
add
cwtl
imulb
ss
adc
and
popf
pop
dec
loope
push
jns
dec
ja
mov
inc
testb
or
pop
stc
jl
jecxz
dec
sbb
adc
adc
std
iret
stc
inc
dec
mov
fs
lcall
mov
ss
sub
inc
mov
ss
cwtl
mov
pop
popa
clc
inc
idivb
repnz
push
fsubs
in
aad
mov
int
jmp
sti
aaa
xor
repnz
daa
daa
xchg
fs
push
push
add
dec
ret
sarl
call
inc
fwait
pop
cld
loope
inc
xchg
lock
sbb
cmp
int
sbb
push
cmpsb
icebp
bound
or
scas
lcall
push
or
cmp
cmp
cmp
dec
dec
xor
push
pop
xor
pop
mov
daa
in
or
push
fmul
inc
pop
mov
sub
and
pop
int3
mov
lods
dec
mov
inc
add
xor
dec
mov
mov
cmp
inc
addr16
insl
adc
xchg
mov
dec
cmp
pop
std
and
sti
repz
movl
inc
mov
sti
push
cmp
dec
cs
or
push
cld
sub
inc
inc
inc
ljmp
sbb
stos
sub
dec
mov
mov
push
shll
es
and
cmp
test
negl
sbb
push
clc
sub
das
push
repz
ss
or
ljmp
push
inc
mov
xchg
xor
cs
cs
fmulp
mov
mov
inc
push
fldt
push
dec
in
cmpsl
dec
mov
jl
adc
xchg
or
sbb
cmp
mov
push
push
aad
into
fidivl
mov
inc
jae
daa
mov
xchg
add
xor
call
add
cmp
jl
mov
jmp
push
mov
push
in
lret
inc
push
adc
xor
pop
sub
push
cmp
ja
jecxz
pop
test
int3
inc
adc
xchg
nop
scas
inc
cltd
adc
mov
push
pop
adc
loop
test
dec
stos
pop
cld
adcl
mov
xchg
cld
ret
xchg
iret
jae
pop
sbb
loopne
add
dec
ja
mov
push
ljmp
or
push
jo
push
mov
subb
sbb
xchg
mov
imul
cmpb
mov
scas
popa
stos
add
out
ret
dec
sub
sbb
cld
in
int3
cld
loope
jb
jmp
jmp
sahf
cmc
cld
cmp
mov
fcmovne
addr16
data16
mov
pusha
xor
xchg
mov
cmp
fcomps
inc
mov
jecxz
mov
movl
cmp
xor
push
mov
fldt
jns
adc
std
adc
test
mov
jnp
cli
lods
xor
outsl
sbb
adc
cmp
sub
adc
dec
test
dec
push
mov
cmp
dec
push
imul
loopne
pop
cmp
and
pop
lret
push
push
rcll
ds
and
jge
dec
add
adc
loopne
jle
adc
jnp
dec
mov
pusha
ljmp
push
push
or
bound
and
je
lahf
push
sub
outsl
mov
bound
add
xchg
jl
les
outsl
jl
sub
lret
loope
dec
imul
mov
xchg
inc
jl
sbb
fcmovu
pushf
cmp
lods
push
dec
pop
cmp
push
and
mov
es
cmc
inc
loopne
int3
sub
add
dec
arpl
les
pop
and
sbb
sub
jbe
pop
dec
dec
insb
dec
push
pop
xchg
dec
pop
mov
rol
sbb
dec
test
test
stos
psubd
jae
mov
imul
cmpb
dec
repz
out
aam
das
lcall
rorl
pop
rorb
mov
inc
pop
adc
mov
inc
jns
xchg
xor
aas
fs
or
or
xchg
cmp
cmpsb
pop
jnp
and
roll
lock
mov
mov
add
xchg
idiv
subl
mov
fdivrl
pop
adc
push
jnp
repnz
pop
sarb
imul
and
push
xor
repz
mov
xchg
cmpsl
inc
push
dec
or
pop
mov
in
sub
das
or
add
outsl
repz
xor
adc
stos
roll
lret
push
dec
sbb
sbb
fdivp
js
sbb
or
xchg
popa
lret
es
or
in
ficomps
push
inc
jb
cmp
fstpt
pop
push
jnp
xchg
movsb
push
divl
mov
icebp
and
lods
aaa
sbb
mov
sbb
orb
add
or
push
out
sbb
dec
push
xor
cli
jnp
mov
stos
jmp
mov
sub
test
jnp
sbb
pop
ja
push
mov
imul
loope
mov
push
pop
mov
xchg
inc
cwtl
add
or
js
loop
dec
pop
xor
xchg
push
ret
dec
dec
loope
lret
xchg
movl
sbb
jp
lret
and
int
int
mov
cs
xchg
mov
xor
data16
mov
scas
sbb
int3
cmp
push
repz
test
pop
aad
jle
data16
dec
mov
jge
xlat
mov
adcb
fcoms
testb
push
lret
leave
loop
movsl
add
xor
sbb
movsb
fistps
push
addr16
ret
xchg
xchg
cmpsl
ja
push
rorb
out
sbb
jmp
cmpsb
mov
int3
and
insl
xchg
push
jo
test
adc
mov
stc
cli
cmp
sub
fcomp
push
pop
or
cmp
pop
aam
push
cmp
pop
imulb
imul
lret
sbb
iret
and
outsl
mov
int3
mov
and
movsb
imul
lds
shlb
adc
mov
mov
pop
or
or
dec
dec
lret
cmc
push
mov
mov
xchg
fprem1
stos
fisubrs
xchg
mov
shll
or
aad
fistl
movsl
inc
add
call
mov
sub
or
and
in
dec
sbb
lods
mov
xor
cwtl
jmp
sbb
daa
inc
cmpsb
pop
sti
jge
jecxz
mov
call
nop
xor
lret
sahf
pop
shlb
add
push
aam
jb
sbb
pop
cmp
dec
mov
cmc
movsb
loopne
cld
test
cmp
fwait
imul
orb
jecxz
jecxz
cmp
or
mov
test
cltd
push
pop
adcb
dec
pushl
test
jecxz
in
jae
xor
mov
and
sbb
mov
and
pop
je
mov
xor
push
stos
movsb
jg
cmp
dec
sbb
pop
pop
push
fdivrl
push
add
and
pop
mov
mov
rcll
out
cmpsb
push
jecxz
jb
je
jns
sbb
out
ss
cs
push
lahf
jb
mov
sub
pop
sbb
shlb
mov
fisttpll
jns
leave
sbb
addb
add
xor
jo
xchg
inc
sbb
dec
sbb
xor
das
push
fcoms
xor
mov
add
pop
addr16
sti
gs
leave
adc
pop
out
sub
arpl
xor
xor
push
or
arpl
cs
cmp
es
push
cs
bound
sarb
xor
push
xor
push
mov
add
sbb
inc
daa
sub
push
ret
mul
sbb
cld
cmp
inc
push
das
inc
push
sbb
dec
inc
jbe
push
loop
das
jbe
jl
adc
lret
and
arpl
in
or
and
movsb
out
push
es
or
mov
dec
int3
mov
mov
pop
pop
or
lds
stos
and
sbb
movsl
dec
sbb
rep
arpl
add
in
sub
fwait
pop
fcmovbe
add
lret
insb
negl
dec
pop
outsb
mov
call
stc
dec
push
xor
fwait
mov
hlt
cmpsl
mov
sti
mov
repnz
aas
push
fs
popf
adc
in
cmp
ja
adc
xor
int
jle
je
outsl
into
mov
lahf
add
test
lods
ljmp
pusha
push
aad
mov
jl
sbb
pop
jo
add
imul
cwtl
loop
mov
mov
rolw
inc
xchg
pusha
movsl
out
push
mov
ffreep
mov
adc
adc
jge
xchg
push
test
data16
inc
xchg
stos
and
ret
and
sub
and
adc
mov
sahf
adc
or
adc
out
xchg
repz
lret
mov
inc
lea
mov
xchg
lret
cmpsl
loop
pop
push
inc
inc
inc
lcall
das
hlt
xor
and
fists
xor
adcb
cmpsl
mov
or
repz
loopne
cmp
repnz
mov
mov
fdivs
out
xchg
sub
loop
and
or
addb
mov
outsl
outsl
ss
pop
int3
cmp
xchg
inc
push
dec
hlt
movsb
aaa
adc
in
in
cld
sahf
jb
push
push
xchg
push
or
rorl
xor
xor
stc
jecxz
xchg
out
mov
jle
inc
ret
repnz
adc
hlt
mov
add
dec
lret
mov
mull
ljmp
in
push
dec
xchg
or
mov
das
push
dec
mov
push
std
cmp
popf
or
lds
adcb
loopne
jl
lock
outsl
push
push
cmp
xor
aam
movsb
jp
cwtl
push
dec
push
fwait
repz
call
pop
stos
lock
and
es
jns
fildll
xchg
add
pop
test
orb
dec
mov
lret
rolb
mov
repnz
into
pop
pop
jb
inc
xchg
cs
ljmp
push
pusha
lea
dec
ret
or
ss
loop
mov
imul
xor
jae
lea
sub
push
je
cmp
cld
bound
push
test
cli
dec
pop
dec
clc
dec
dec
sbb
mov
mov
shll
fs
mov
inc
pushf
stos
enter
dec
sub
mov
int
movsb
inc
push
add
lods
addb
outsl
mov
lods
hlt
movsl
inc
inc
cmp
inc
pop
mov
rorb
mov
inc
mov
cmpsl
dec
xor
dec
int
mov
mov
pop
or
gs
and
pop
out
pop
aaa
push
cmp
fbstp
sti
cmp
out
jnp
fidivrs
ss
aaa
cld
test
fsubrl
fsubrs
nop
add
or
out
hlt
cmpsb
add
cs
aam
jno
cs
in
jle
das
test
dec
mov
fwait
jmp
hlt
stos
xor
shlb
mov
adc
pushf
cmc
popa
jb
mov
inc
inc
sub
push
adc
inc
jns
and
pop
pop
push
imul
leave
cmp
adc
stc
lock
mov
fadds
stos
dec
push
lods
adc
mov
repnz
repz
xchg
sub
jecxz
dec
outsl
fcomp
stos
add
xor
sub
cs
xor
mov
or
test
xor
aas
lods
jo
or
fdivp
cmp
dec
sti
jb
jo
sbb
pop
loop,pn
cmpsb
xor
xor
inc
stos
lahf
push
mov
adc
out
xlat
sub
jns
sahf
mov
cmp
lods
pop
push
adc
nop
or
dec
sbbb
add
adc
sbb
mov
cmp
ja
or
xchg
in
or
mov
and
cmpsb
cld
sub
pop
push
xchg
in
out
in
daa
xlat
xchg
iret
adc
xchg
push
mov
lods
jmp
push
sub
inc
adc
imul
vpmuldq
mov
add
mov
jge
stos
cli
jno
fidivl
xchg
dec
cli
jmp
dec
inc
add
lock
sbb
mov
out
cld
cmp
xor
mov
sbb
fwait
leave
xlat
mov
fnstsw
jmp
sbb
xchg
or
sahf
stos
outsl
roll
dec
repnz
and
iret
dec
mov
push
sbb
test
mov
xlat
xor
stc
mov
stc
push
xchg
sub
scas
xchg
or
inc
push
mov
addb
cmpsl
lock
lcall
mov
sbb
inc
cli
mov
sti
enter
dec
push
mov
adc
pusha
sbb
popf
fistpl
push
add
jmp
sti
xchg
xchg
inc
inc
idiv
dec
dec
stos
negl
dec
jp
sbb
mov
lods
dec
in
mov
pop
jbe
insb
leave
loope
scas
or
test
std
lcall
adc
lods
lods
loope
or
and
sub
nop
test
mov
mov
pop
mov
cli
dec
mov
pop
push
xlat
push
dec
sub
jno
push
cmp
sbb
sbb
in
or
fwait
sbb
adc
rcrb
fiadds
loop
insl
ret
mov
orl
xchg
mov
mov
iret
sbb
inc
fisubl
mov
dec
gs
pop
mov
aaa
xor
sbb
insb
push
push
dec
mov
pushl
pushf
or
pop
cli
cltd
rorb
pusha
jp
iret
push
mov
fistpll
and
lds
add
fnstsw
dec
inc
dec
lods
fistl
add
xor
pop
push
sub
inc
push
fldt
dec
and
addr16
push
sub
dec
cmp
int3
lods
repz
mov
in
and
jecxz
pop
or
fcomps
sbb
dec
push
or
jbe
cmp
shl
aaa
aam
mov
xlat
sbb
outsb
mov
dec
inc
adc
cmp
adc
or
adc
paddd
dec
js
ja
fmuls
pop
sbbl
sbb
jl
push
push
pushf
dec
cli
push
mov
insl
aam
mov
adc
aaa
addl
xor
cmp
push
sub
insb
movsb
and
xor
ss
inc
xlat
add
stos
enter
cmp
or
ror
add
lods
adc
xor
xor
mov
cmp
mov
pop
jmp
fstl
mov
mov
mov
jns
mov
sub
mov
xor
jl
xor
jno
clc
add
into
lcall
repz
insb
mov
or
mov
sbb
and
sbb
sarl
fdivs
push
mov
cmp
fwait
cmp
push
je
mov
sti
mov
cs
sub
push
sub
mov
mov
cmp
lods
mov
pushf
or
push
mov
jnp
mov
mov
lock
mov
cmc
xor
lock
aam
sub
ds
xor
pop
jl
movsb
sub
add
push
movsb
pop
sub
mulb
sbb
cmp
jmp
fsubs
ljmp
ud2
dec
mov
or
xor
dec
nop
sbb
and
ss
adc
push
and
scas
push
dec
ficoml
push
jecxz
cmpsb
nop
jmp
loopne
or
out
push
sti
cmp
xchg
jge
cltd
mov
mov
cmp
sti
stos
lods
pop
xor
adc
mov
adc
sub
ljmp
xor
decl
lods
push
or
fsubrp
add
fnstenv
jo
push
add
aam
mov
adc
out
mov
and
mov
clc
dec
in
push
lret
sub
out
push
hlt
mov
mov
pop
lcall
add
mov
mov
inc
dec
mov
testb
jmp
dec
pop
mov
jle
sub
xchg
adc
xlat
adc
ret
cmp
push
mov
arpl
cmp
jae
mov
outsl
inc
xor
xchg
fs
cwtl
cltd
add
icebp
sbb
stc
out
jp
je
adc
cli
dec
xor
adc
fnstenv
inc
pusha
vcmpneq_osss
pop
stos
clc
das
mov
stc
pusha
jno
push
mov
sahf
or
mov
imul
pop
sbb
fwait
mov
jns
pop
jno
lret
cmp
sub
xchg
leave
je
or
dec
lods
pop
cmp
or
mov
sbb
mov
adc
dec
das
pusha
or
sub
jle
test
push
daa
decb
in
adc
and
inc
loopne
sub
mov
dec
inc
fwait
push
repz
lods
pop
mov
stc
into
sub
sbb
and
or
popa
sahf
test
fdiv
in
mov
add
int
js
ret
popa
sbb
sub
push
mov
sti
push
subl
pusha
jnp
stos
ret
and
mov
rcrb
jle
xchg
xchg
test
add
ljmp
iret
jnp
xor
in
lret
cmpsl
sbb
in
lds
adc
decl
out
cmpsl
ljmp
mov
xchg
mov
out
mov
testl
sbb
das
mov
sub
cltd
add
nop
jecxz
es
loope
shlb
dec
jg
jb
push
and
push
jmp
dec
out
mov
mov
mov
push
and
stc
sbb
xchg
jb
add
sbb
and
cmp
push
testl
cmp
mov
sbb
fdivrp
pusha
lods
lcall
xor
jge
and
pusha
out
negl
inc
xchg
xchg
mov
outsb
ret
cs
cmp
lods
adc
movsl
or
adc
andl
das
push
mov
jmp
rorl
in
cli
push
and
dec
mov
imull
sbb
pop
sbb
mov
dec
mov
das
xchg
push
mov
pop
outsb
shlb
sub
sbb
data16
jmp
jecxz
mov
mov
cmp
mov
and
shlb
fsubp
push
jmp
pop
mul
push
daa
xchg
lods
sbbl
enter
jne
mov
cmpps
test
sub
pop
add
fsubp
mov
xor
clc
sub
test
sub
in
les
fsubrp
test
lret
mov
dec
dec
pop
sbb
inc
xchg
mov
xor
mov
inc
mov
je
pop
push
jmp
jns
mov
jb
xor
xorl
mov
hlt
push
test
das
cmp
fcomi
in
roll
sti
stos
mov
pop
es
cmp
inc
jmp
int
dec
daa
call
mov
jbe
add
or
adc
sub
mov
repz
sbb
mov
cmp
in
or
pop
mov
fdivrl
test
fwait
push
pop
cwtl
inc
and
pop
xchg
dec
xor
inc
movsb
js
sub
add
mov
or
notb
movsl
sub
outsl
imul
fstpt
xchg
and
out
adc
mov
add
arpl
loop
cli
inc
jg
xor
mov
aas
mov
lret
mov
add
inc
sbb
sbb
mov
call
push
cmp
stc
inc
pop
dec
cltd
push
jp
xor
jmp
dec
repnz
mov
loop
mov
xor
xchg
sub
scas
das
fbld
lock
inc
fs
leave
sbb
aad
jp
sub
push
dec
fdivrs
or
sub
repz
sub
outsb
mov
inc
pop
inc
aad
cmp
mov
sub
mov
add
sarl
sub
and
xor
lcall
insb
adc
dec
pop
jo
dec
inc
jp
sub
cltd
stos
xor
sti
adc
and
and
leave
movsb
sub
test
add
xchg
jnp
push
leave
sbb
aam
jp
sub
test
adc
pop
stos
mov
loop
lock
and
lret
and
insl
fildll
mov
inc
or
leave
cmp
sbb
jp
shrl
mov
sbb
aad
jo
sarl
sbb
xchg
push
pop
xor
push
in
jmp
add
and
es
mov
sbb
jnp
scas
or
rorl
xchg
in
xor
clc
xchg
xor
xor
sub
cmp
in
add
sarb
imul
cmp
push
aad
dec
in
xlat
insb
pusha
jecxz
dec
iret
shlb
push
test
sbb
sbb
imul
jp
pusha
push
lret
adc
mov
mov
cli
ss
mov
pop
jl
xor
pop
fsubs
add
sub
mov
inc
sbb
out
dec
mov
nop
pop
jns
jmp
lcall
sbb
iret
mov
jecxz
or
repz
xchg
stos
imul
inc
subl
or
mov
sar
pop
pop
mov
int3
and
scas
clc
jle
add
inc
xor
cmp
or
or
rcl
repz
sub
mov
sbb
xor
sub
xchg
or
jno
mov
clc
lods
sarl
aad
xchg
xor
push
sub
jnp
pop
mov
dec
int
sub
pop
push
fisubrl
push
adc
aad
clc
ss
sub
adc
xchg
pop
adc
call
xchg
enter
loope
jmp
cmpsl
dec
out
add
mov
push
add
fsub
xor
fucomp
std
sub
in
imul
push
inc
fbld
clc
test
imul
dec
bound
push
lret
pop
imul
jo
xor
dec
inc
adc
stc
ret
sti
out
sub
mov
push
mov
mov
fwait
repnz
icebp
loop
cmc
pusha
outsl
dec
xchg
sub
mov
je
mov
push
and
popa
cmp
sarl
sub
sub
sti
sbb
leave
inc
bound
xor
lods
sbb
inc
inc
ss
mov
cmp
jns
lret
test
sahf
xchg
jno
test
push
insl
lret
mov
and
jae
pop
dec
hlt
mov
push
int
adcl
xchg
in
cmc
add
dec
jmp
inc
lahf
xlat
or
loop
fisubrl
add
xchg
mov
int3
cmp
arpl
ficomps
cmp
push
js,pn
inc
loopne
fstl
adc
adc
and
incb
sbb
mov
inc
mov
scas
xchg
aam
mov
xchg
test
pop
pop
mov
xchg
dec
sbb
and
xor
es
aad
push
sahf
clc
insb
sbb
or
jmp
sub
jns
pop
fdiv
test
pushf
adc
cs
dec
pop
gs
adc
inc
test
push
and
mov
jecxz
lods
cmp
in
dec
mov
arpl
dec
js
sub
push
fst
rorl
mov
mov
imull
incb
add
jns
lahf
test
push
cmp
sbb
dec
mov
xchg
js
mov
ja
fisubrs
aad
pop
lds
sbb
dec
int3
inc
sbb
out
out
push
jmp
xchg
or
or
loope
lahf
call
adc
fcoml
sub
std
jns
ja
mov
ss
dec
xchg
iret
jg
roll
dec
subl
fstpl
sbb
arpl
adc
dec
dec
pop
cmp
in
or
imul
push
add
inc
lret
cmp
lods
pop
push
jge
lcall
int
cmpl
aam
es
jb
scas
cltd
sti
loopne
and
mov
push
les
pop
adc
lret
or
cld
test
xor
dec
lcall
sbb
std
mov
cmc
mov
nop
imul
ret
in
out
les
or
popa
ds
fisttps
cmp
push
popf
sub
push
fs
decb
and
sbb
popf
fs
mov
push
jnp
dec
jnp
addr16
cld
dec
adc
ret
sar
and
js
lret
dec
sbb
insb
mov
std
pop
adc
aaa
dec
repz
es
ret
mov
pop
jo
jle
cs
cmpsb
and
dec
scas
sbb
std
add
inc
in
mov
data16
cmp
fmull
dec
or
dec
dec
ds
inc
cs
idivb
ret
xor
inc
mov
adc
mov
lods
mov
shrl
in
push
adc
cmp
xchg
dec
and
pop
add
sbb
pop
dec
sub
push
adc
lret
aas
into
inc
mov
or
loopne
mov
adc
stos
mov
addb
stc
les
sub
lea
mov
xor
inc
aas
push
xor
adc
sarl
neg
pop
sti
pop
fildl
mov
mov
mov
stos
fisttps
fisttps
stos
mov
test
sbb
sub
mov
mov
add
pop
sbb
xor
mov
jp
sub
mov
mov
fisubrl
lea
pushf
cmp
loopne
notb
fildll
mov
out
into
mov
mov
dec
sti
inc
sub
adc
pop
cld
cli
lahf
test
push
mov
outsl
push
dec
xor
popa
mov
dec
cli
jecxz
shrl
pop
icebp
sbb
rolb
add
shll
adc
jp
fildll
lcall
lods
mov
ja
test
mov
sub
dec
adc
jnp
sub
imul
iret
in
xchg
or
cmpsl
inc
scas
int3
xor
cbtw
fs
push
sti
push
mov
popf
inc
cmp
jnp
sbb
aas
xchg
int
push
outsb
dec
add
gs
outsl
idivb
lret
pop
data16
sub
js
push
addl
sub
push
outsb
sub
js
shll
pop
aam
mov
push
loop
lods
fucomip
aaa
push
lods
add
pop
cmc
sysret
xchg
jge
push
push
mov
lds
xchg
or
lock
aaa
pop
mov
jo
xchg
xchg
pusha
push
data16
dec
inc
add
pop
bound
ljmp
mov
add
xor
sbb
mov
sub
push
pop
hlt
ret
mov
popa
add
sti
cwtl
inc
out
mov
aas
arpl
cmc
xor
loopne
and
in
gs
mov
incl
pusha
push
aas
ret
cs
inc
cmp
mov
push
mov
lods
and
xchg
jge
mov
pop
jp
sbb
jbe
and
inc
fisttpll
ret
fs
sub
roll
lods
cmp
xor
mov
push
sbb
xor
fwait
mov
neg
enter
push
add
lcall
mov
bound
outsl
push
popf
mov
mov
pop
bound
sub
push
xchg
repz
mov
aas
xor
dec
cwtl
lds
mov
sbb
mov
lods
cmp
lods
aaa
repz
lahf
mov
pop
leave
pop
jg
cwtl
cmp
inc
scas
jl
cld
mov
lcall
mov
add
jmp
mov
ss
or
cmp
inc
adc
lcall
mov
xchg
pop
jae
mov
inc
cmpsl
incl
mov
mov
mov
sub
or
aaa
or
xor
adc
bound
loop
push
or
mov
pop
xor
cld
lret
inc
push
clc
and
pop
stos
sbb
lret
fdivrs
or
adc
repnz
or
sub
fdivrs
loop
jne
push
mov
pop
pop
xchg
pop
cmc
stos
xchg
mov
daa
or
aas
leave
cmpsb
push
mov
loopne
push
pop
push
adc
push
xor
jae
and
dec
fsts
sub
push
lcall
dec
pop
mov
iret
insb
xchg
or
xchg
stc
push
test
mov
cmpsb
aad
insl
lahf
xchg
push
pusha
in
bnd
xchg
cltd
nopl
xor
mov
pop
jmp
xchg
mov
pushf
mov
xor
cmp
push
cs
or
rcr
fnstsw
rcrl
subb
add
cmp
int
push
fstpt
shll
or
aad
cmp
or
not
or
push
hlt
shll
pop
ret
stos
jecxz
or
sub
mov
and
adc
notb
fmuls
pop
stos
cmpsb
inc
in
mov
xchg
inc
popa
cs
iret
mov
lods
std
and
xchg
xchg
das
xchg
inc
sub
cli
xor
mov
pop
jnp
push
or
lods
ret
jae
mov
addl
and
cmp
aam
in
inc
mov
cs
fsubrl
rcrb
or
cmp
aas
iret
lea
push
lods
repz
sbb
inc
or
mov
aaa
adc
mov
xchg
cmp
dec
aaa
adc
mov
pop
into
lcall
mov
jnp
sub
sbb
ss
das
jno
mov
adc
sub
and
lahf
xchg
loope
shrl
and
push
inc
push
js
mov
bound
sbb
aaa
or
sbb
mov
out
push
loop
push
je
pop
push
inc
jne
cmp
out
fimuls
jns
popf
shlb
stos
pop
push
ja
fimull
mov
rcr
ja
sub
cmc
xchg
mov
xor
pop
iret
sbb
fwait
jae
sbb
add
sbb
lods
adc
mov
add
icebp
jae
scas
dec
fidivs
es
in
test
lret
sbb
add
xor
dec
dec
out
and
inc
add
mov
sbb
jg
pop
jbe
int
js
repz
jge
cmp
lahf
cli
sbb
push
sbb
dec
scas
insl
sti
add
ss
mov
mov
jle
pop
stc
or
add
push
lods
sub
cmp
push
sbb
je
dec
iret
pop
dec
call
mov
loope
inc
test
pushf
dec
decl
out
dec
iret
push
push
xchg
mov
pushl
pop
add
das
pop
xchg
or
push
jae
jns
mov
sub
adc
imul
arpl
scas
adc
inc
lret
aad
and
call
cs
aas
icebp
sbb
push
adc
sti
stc
and
xor
cs
xor
imul
mov
cmp
pop
aaa
sub
ss
sahf
fldt
jge
ja
inc
pop
ficoml
mov
dec
dec
arpl
jb
cmp
lods
sarl
push
mov
jg
jns
sub
idivb
or
data16
sbb
sub
clc
and
jecxz
and
inc
adc
mov
mov
push
or
popf
xor
mov
lahf
jbe
dec
fdivrs
pop
cwtl
lods
fistpl
insl
ss
outsl
fsubl
or
inc
es
out
pop
shlb
inc
dec
insl
clc
jae
daa
or
adc
xchg
sbb
inc
dec
rclb
mov
nop
lret
out
mov
jmp
jl
mov
ljmp
ja
push
add
imul
xor
in
push
push
or
es
cmp
into
daa
aas
cld
pop
jmp
mov
mov
adc
fs
mov
mov
mov
mov
dec
mov
inc
es
adc
mov
xor
xchg
xchg
addr16
xor
stos
cmp
add
cmp
xor
jmp
cs
aaa
cld
sbb
sub
scas
pop
push
dec
push
mov
sbb
xor
dec
and
clc
mov
adc
ljmp
in
cmp
ret
inc
push
dec
je
mov
outsb
xchg
cmp
pop
jbe
adc
lods
and
mov
xor
stos
sahf
sbb
push
loop
push
lods
sbb
sahf
sbb
sub
cmp
mov
sbb
mov
or
adc
in
insb
mov
mov
out
or
sar
out
xchg
fucomp
dec
sbb
inc
and
sbb
fdiv
jmp
adc
andl
push
fbld
sub
sti
adc
cmp
notl
scas
sbb
das
js
pop
or
mov
sbb
nop
scas
loope
loope
fdivr
inc
pusha
dec
inc
dec
fdivs
push
pushf
sbb
sbb
mov
xor
push
dec
icebp
movsl
ficoms
and
fisubrs
into
adc
lret
aam
xchg
es
je
mov
add
sub
adc
pop
bound
dec
xor
dec
mov
repnz
push
sarb
xchg
fcmovnu
mov
or
pop
lret
xor
dec
jl
xlat
ljmp
mov
lods
mov
or
pop
xlat
fisttps
jns
lret
inc
xlat
testb
dec
lret
mov
shrd
sub
repnz
sub
xchg
adc
std
or
std
mov
test
push
in
scas
xchg
push
insb
scas
dec
andl
das
loop
loopne
push
mov
hlt
sbb
jg
add
and
mov
sbb
or
int
jmp
push
jmp
sti
sub
add
mov
sub
ret
leave
icebp
pop
xchg
inc
or
fcoms
scas
mov
push
shlb
cmpsl
std
sarb
and
imul
lret
xchg
sbb
xor
mov
lret
jne
fcmove
adc
cmpsb
loop
adc
lcall
xchg
aaa
xor
or
cmp
daa
sbb
push
jns
mov
addr16
enterw
fcmovbe
movsb
xor
aas
mov
jle
or
cmp
mov
mov
jne
mov
adc
dec
fwait
jp
cwtl
pop
in
lock
aad
bound
or
roll
cmp
mov
les
sbb
mov
sub
cltd
xchg
mov
pop
xchg
data16
or
fwait
ljmp
repz
dec
leave
cmp
pusha
cmp
dec
sub
sbbb
fnstcw
dec
pusha
adc
jp
pushl
sub
or
cli
scas
mov
sub
mov
pop
dec
dec
dec
and
adc
pop
mov
or
pushf
cmpsl
dec
xor
adcb
fwait
outsl
inc
xor
orb
fs
psrld
addr16
lds
inc
or
lret
in
xor
cmpsl
pop
cmp
decl
negb
dec
aaa
mov
sub
sub
mov
lcall
in
sub
or
aad
mov
cmp
movsb
iret
jne
sbb
jns
or
out
sti
xchg
mov
cs
cmp
rorb
adc
lods
jmp
lods
movsb
cmp
pop
and
jmp
fwait
mov
ss
mov
div
fcomip
fnstsw
in
or
or
popf
push
xchg
sbb
scas
ss
in
mov
mov
sahf
push
ss
push
dec
xor
arpl
or
loopne
mov
sbb
shrl
sti
mov
xor
or
xchg
stos
fisubrs
ja
cld
mov
pop
jo
aaa
sub
and
fisttpl
sub
inc
adc
jl
dec
or
xor
stc
inc
pushaw
jae
dec
add
bound
mov
cs
rcrl
inc
inc
scas
stc
push
sbb
mov
mov
iret
ljmp
sbb
jnp
ss
sub
xlat
sub
inc
xor
and
inc
stos
dec
add
inc
div
or
inc
ret
xchg
cmpsb
adc
inc
jb
loop
and
jbe
movsb
jg
cmp
outsl
pop
repz
mov
xchg
xchg
pop
dec
rorl
rcrl
lret
inc
cmp
sub
mov
push
cmp
movl
or
sub
sbb
push
xor
mov
fcom
xor
es
inc
xor
jg
js
jbe
ja
xor
push
push
xchg
xchg
push
inc
dec
es
outsb
arpl
rep
out
movsb
inc
adc
jl
sarl
cmp
ret
inc
cmp
push
dec
es
dec
arpl
dec
mov
sbb
mov
shl
incb
inc
lods
fstps
jns
lret
mov
repz
pop
xor
add
dec
push
mov
daa
inc
push
xchg
xor
ret
fwait
adc
ss
sbb
mov
and
xchg
jae
icebp
inc
repz
jae
je
movb
mov
lods
lods
push
and
shrl
inc
inc
add
dec
mov
sar
lods
and
aaa
outsl
xchg
mov
and
dec
dec
sbb
dec
aaa
dec
jnp,pt
hlt
push
push
repnz
es
cmp
jmp
fildll
push
mov
sub
xor
out
or
sub
adc
lcall
aas
sub
push
cmp
subb
cmp
dec
cmpsl
jecxz
pop
xchg
cmp
pop
mov
inc
sub
mov
sub
adc
fidivs
xchg
push
ret
insl
adc
sbb
loope
and
xchg
fcmovne
xor
sarb
sub
cmp
pop
xchg
dec
das
jno
icebp
mov
adc
xlat
sbb
decl
test
mov
data16
in
mov
cld
dec
es
ljmp
inc
scas
dec
inc
pop
push
inc
stos
ljmp
push
inc
and
popf
outsl
push
sub
inc
pop
or
dec
hlt
add
push
inc
or
pop
xchg
and
addb
notb
fdivrp
enter
sub
fisttpl
js
sub
push
sbb
scas
adc
dec
sti
push
jmp
pop
movsb
or
pop
ss
dec
fwait
sbb
jo
jo
mov
inc
fstpl
xchg
jp
jmp
mov
jmp
sbb
mov
pop
in
adc
ljmp
ret
outsl
jecxz
xchg
sub
cmp
pop
and
fisubrs
fistl
mov
rclb
ret
lods
xlat
ljmp
shll
in
stos
cmp
sub
in
xchg
dec
fwait
mov
movl
sarl
mov
mov
lods
sub
sbb
es
jnp
mov
add
ljmp
or
cmpsl
loop
adc
xchg
shrl
mov
nop
stos
cmp
mov
jb
and
inc
outsl
jle
mov
xchg
sahf
fwait
jbe
inc
push
dec
rorb
pop
outsb
das
dec
subb
mov
mov
dec
ror
mov
pop
ja
rclb
xlat
sbb
shl
shll
rcl
and
sub
push
cld
leave
aas
sbb
pop
rclb
push
imull
out
ficoml
mov
mov
inc
pop
jle
fimull
mov
add
xchg
jmp
sbb
dec
mov
pusha
cmp
popf
xor
cwtl
xchg
push
enter
mov
dec
mov
lods
add
inc
aad
xor
fcom
xchg
xor
sbb
test
or
push
push
and
aad
movsb
jne
cmpsl
data16
inc
fs
xor
adc
ljmp
inc
ljmp
fldcw
mov
lahf
pop
test
dec
outsl
cmp
mov
pop
push
out
fiaddl
cmp
cmc
dec
cwtl
out
push
rcrb
test
mov
xchg
xor
mov
mov
jnp
mov
add
xchg
scas
aad
mov
xor
ret
xor
xor
dec
in
fcmovnbe
in
and
lock
adc
add
push
outsl
mov
or
sbb
and
rclb
sbb
mov
xchg
inc
shll
mov
cmp
mov
bnd
fisttps
je
and
aaa
mov
or
loope
ja
cwtl
cld
and
push
lods
fwait
mov
sub
xchg
adc
push
sbb
shl
pop
pop
push
jbe
out
pop
sbb
push
fldt
pop
jnp
cmp
cmp
pushf
lret
cmp
ds
jno
aad
sub
mov
pop
push
mov
xor
cmp
xor
sbb
xchg
sbb
xor
pop
mov
mov
xchg
adc
and
lahf
outsl
adc
hlt
cmpsl
and
out
cmp
push
jno
out
loop
js
ds
jle
lods
std
rcrl
cmp
je
xor
cwtl
sbb
adcl
stc
jnp
push
cmp
inc
xchg
pop
inc
lret
insb
dec
ret
fildl
mov
jl
mov
rcr
push
add
bound
stc
mov
sti
fisttpl
cmp
mov
fsubrs
fsts
je
cwtl
push
mov
sbb
and
pop
push
ja
dec
addb
imul
mov
mov
xchg
cmp
inc
inc
push
and
mov
js
inc
cwtl
push
mov
popf
inc
mov
dec
daa
or
mov
pop
ret
icebp
cmc
push
jp
fsts
outsl
data16
adc
inc
adcl
mov
stos
push
ss
mov
mov
push
mov
mov
sub
push
and
pop
call
lods
mov
jle
mov
mov
sarb
lret
adc
push
cmc
out
lods
cmp
idivb
pushf
mov
cli
cld
rcll
or
jne
adc
mov
lcall
and
cmp
push
sub
jns
add
cmp
repz
push
cmc
ret
jmp
push
in
jecxz
idivb
ds
push
adc
mov
jg
cmp
mov
ja
js
outsl
lods
nop
jmp
pop
iret
fwait
inc
aas
and
or
pop
or
mov
les
sub
std
test
std
insb
insl
es
add
into
notb
adc
andb
rcrl
sbb
es
rorl
and
xor
push
xor
cmc
xchg
idivl
es
mov
xlat
es
ja
cmp
rorl
adc
sub
lods
xor
call
xor
mov
and
dec
jl
arpl
and
mov
mov
outsl
mov
dec
in
xchg
loop
outsl
jge
sbb
lods
jl
leave
mov
xor
dec
rorl
pop
stc
test
dec
lods
sbb
or
sbb
popa
inc
jl
bound
adc
ja
loop
cli
sbb
dec
cltd
data16
jmp
pop
xchg
xor
aad
not
mov
pop
fwait
xor
cmp
lret
push
lods
pop
mov
mov
mov
xchg
mov
pop
outsl
dec
cwtl
xchg
mov
adc
adc
movsb
scas
xor
inc
jbe
lret
or
fxch
add
mov
aas
ficoml
pop
sub
or
push
sti
lahf
adcb
push
dec
scas
cmp
push
push
sbb
aas
inc
aam
lods
fimull
push
icebp
dec
inc
or
cwtl
jle
or
mov
xchg
popa
jae
in
mov
sti
and
mov
sub
jle
dec
addb
stos
testl
out
pop
imul
ret
aas
or
lods
cmp
imul
scas
gs
icebp
and
sahf
add
adc
popf
mov
ror
jle
adc
push
sti
out
pop
xor
shl
sub
sbb
mov
push
pop
bound
push
jno
movnti
sti
or
ljmpw
scas
aas
pop
insb
sti
fldt
xor
jge
dec
dec
xor
fistl
pop
outsb
fcoms
mov
xchg
adc
repnz
sub
ds
cmp
lret
inc
or
inc
dec
jno
aam
inc
je
cmp
inc
call
mov
inc
aaa
std
fisubrl
xor
inc
cmp
fbld
shl
mov
scas
in
xor
dec
inc
or
shrl
push
pop
sbb
push
les
insb
adc
cld
push
cmp
clc
mov
fisubs
jl
push
cs
popa
fisubrs
push
sbb
ja
pop
jecxz
push
push
cmp
fistps
push
add
pop
mov
adc
sub
mov
stos
fistl
jle
mov
inc
xor
fsubs
sbb
clc
push
xor
les
xchg
bound
mov
and
xor
mov
dec
mov
sub
addr16
mov
xchg
mov
in
jno
das
cmp
xchg
inc
sbb
lahf
mov
cmpsb
push
cli
and
xor
adc
cmp
cli
and
cvtdq2ps
mov
cmp
stos
rcrl
and
inc
jecxz
adc
jl
rcrl
push
inc
insl
pop
mov
add
xchg
sub
enter
outsb
loop
pushf
sub
in
xor
adc
notl
add
jge
push
sti
cwtl
out
dec
ret
rolb
pop
push
cmpsl
mov
dec
aaa
fildl
pop
and
fs
or
js
mov
aaa
push
cmpsb
sbb
xor
fildl
int3
rolb
jnp
sub
xchg
xchg
cmp
push
xor
hlt
xor
inc
cmp
push
dec
pop
mov
cmp
cmp
bound
mov
jo
in
cmp
pop
cs
lcall
sti
adc
or
mov
addr16
mov
sbb
add
pop
arpl
in
nop
push
inc
js
iret
js
icebp
mulb
daa
mov
sbb
mov
movsb
cli
stos
int
scas
lcall
xor
js
and
mov
xor
or
or
lods
add
or
pop
adc
jns
lret
xor
ss
sub
adc
sti
pop
cmpsl
adc
inc
inc
push
aas
in
xor
mov
mov
cmc
fisttpl
mov
jg
cmp
stos
pop
rcrl
fcomps
or
adc
dec
movsl
sub
sbb
mov
push
cmc
repz
mov
add
xchg
add
shlb
mov
jg
js
add
cmp
imul
inc
mov
xor
fwait
dec
pop
lret
call
lods
sarb
rcl
cmp
xor
xchg
or
xchg
inc
cmp
fisttpl
xor
mov
inc
mov
and
mov
cli
push
cmp
pop
jbe
mov
fisubl
sub
lods
push
fldenv
xlat
xor
sub
pop
cld
pop
cmc
lods
push
or
ljmp
lods
fdivs
sub
xor
out
dec
pop
imull
inc
loope
or
push
xor
cmp
or
fsts
cmpsl
xchg
adc
xor
adc
lret
inc
jl
enter
inc
mov
fsubrs
enter
cmc
adc
std
imul
dec
mov
sbb
adc
add
mov
or
shrb
ja
jg
adc
sub
and
cmp
sti
lods
popf
popf
scas
mov
inc
aaa
add
in
sub
aam
pop
pop
xchg
add
dec
inc
and
pop
xlat
inc
push
fstcw
repnz
movsl
or
xor
push
ret
and
leave
cmpsl
lods
or
fldt
scas
sbb
push
shrl
fldt
scas
jo
inc
cwtl
xchg
sub
add
push
mov
pop
xchg
xor
add
repnz
mov
xor
xchg
fwait
jnp
js
xor
cwtl
push
push
outsl
cmp
xchg
xor
jp
xchg
testl
out
pop
mov
add
pop
inc
imul
arpl
cs
mov
test
adc
mov
test
repz
and
mov
aaa
notb
testb
sbb
mov
div
cmp
les
aas
enter
dec
cltd
mov
mov
int3
sub
aaa
dec
jp
rcll
sbb
inc
movsl
lods
sub
test
cltd
dec
js
fstpl
sbb
push
fldenv
imul
sti
gs
xlat
popa
adc
out
enter
or
test
arpl
cmp
xlat
pop
int3
fldl
movsb
das
xchg
cmc
mov
jmp
cmpsb
ljmp
std
loop
xlat
jg
pop
in
sbb
mov
out
dec
and
mov
push
pop
push
mov
cmpb
jl
aad
popf
fcmovnbe
ss
enter
push
or
in
outsl
mov
movsb
cmp
inc
daa
in
fs
mov
push
cs
outsl
addr16
jle
push
sub
adc
dec
cld
les
inc
data16
rcrb
ja
bound
cmp
jge
rorb
cmpsl
out
test
cs
pop
xchg
ja
sbb
dec
or
nop
sub
out
pop
adc
push
or
jo
stc
and
cmp
imul
and
mov
mov
pop
stos
sbbb
sub
ss
out
shl
imul
jb
loop
test
out
out
ljmp
or
das
inc
push
adc
and
mov
in
stc
lret
dec
mov
push
mov
cmp
out
or
jns
sub
bound
add
ljmp
sub
ljmp
adc
xor
dec
sbb
cmp
inc
insl
pop
or
push
pop
xor
fisttpl
pop
and
xchg
out
push
ret
cmp
xchg
xor
inc
ljmp
ss
cwtl
repz
mov
gs
push
sahf
int
fbstp
push
push
imul
mov
push
or
push
imul
iret
outsb
xor
mov
pop
xor
dec
ficomps
mov
je
inc
inc
and
sti
adc
or
pop
sbb
into
mov
xor
mov
pop
and
or
push
pop
movups
xchg
leave
mov
out
pushf
rcr
aam
xor
push
fstl
cli
and
push
repnz
ret
xor
mov
sbb
out
inc
aas
jnp
xchg
inc
fld1
jle
rol
mov
add
loope
dec
dec
xchg
stc
cld
xor
adc
pop
gs
stc
push
sbb
jl
in
jmp
xchg
mov
hlt
mov
shlb
cwtl
cs
sbb
sub
cmp
mov
sahf
in
lret
insb
dec
inc
test
adcl
mov
andb
push
enter
nop
and
jns
test
leave
mov
cli
adc
sbb
pop
adc
xchg
and
and
dec
sub
mov
and
push
loope
ss
mov
ficoms
mov
xor
lods
popa
adcb
ss
int
dec
pop
lret
xor
stos
cmp
xor
jle
stc
xorl
dec
pop
fcomi
call
pop
shrl
es
clc
cmp
xor
dec
push
stc
pop
lock
add
test
movsl
add
and
mov
inc
and
cmp
sbb
mov
ss
adc
lcall
inc
testl
xor
loop
xor
dec
push
imul
inc
pushl
adc
xor
popa
repz
dec
ficomps
dec
insb
and
arpl
and
mov
fnsave
aaa
sbb
stos
sub
pusha
cmp
fisubrl
inc
mov
iret
push
push
popa
dec
xor
fildl
cwtl
lods
mov
shl
mov
stos
jg
jle
cmp
xchg
lock
aam
test
rcrb
pop
xchg
cwtl
pop
pop
pop
rcrb
xor
imul
jecxz
shll
cmp
psllw
pusha
repz
jp
in
dec
aas
movsb
lret
fcompl
cli
dec
sahf
mov
mov
or
outsb
push
push
sbb
les
jl
mov
push
push
shrb
and
push
nop
dec
push
loop
dec
push
call
enter
push
dec
fidivs
inc
out
and
stos
push
fcmovne
xchg
js
xchg
and
jnp
xor
in
incb
or
jns
mov
xlat
push
sub
lret
stc
test
andb
mov
push
jb
or
loope
push
cmpsl
xchg
cmp
inc
sub
inc
xlat
sbb
ret
scas
xchg
das
xlat
pop
jnp
dec
mov
push
dec
jae
mov
lahf
mov
add
adc
xor
lods
cmpsl
mov
stos
ljmp
adc
call
add
add
loop
lcall
cs
xchg
mov
popf
iret
lcall
mov
inc
mov
rclb
gs
fisttpll
adc
xor
movl
jg
sub
xchg
stc
mov
mov
cmp
mov
sub
cmp
stc
cmc
sarl
inc
xchg
call
sbb
sbb
adc
mov
sbb
stc
cmp
sbb
mov
xor
adc
adc
rcr
aaa
add
inc
pop
cmp
sub
fs
cmp
int
push
loop
inc
movb
popl
cli
adc
popa
std
xchg
or
outsl
xchg
mov
stos
scas
lods
xor
mov
mov
jns
rol
dec
sub
sub
pop
pop
loop
mov
jp
xchg
cmc
mov
movsb
stc
loop
dec
movsl
pop
fcoml
ss
insb
fwait
mov
dec
xchg
repz
mov
mov
mov
jnp
sahf
loop
lahf
pop
outsl
dec
jae
sbb
xorl
push
xchg
inc
xor
imulb
push
inc
mov
lods
sbb
stc
inc
cmpsl
mov
jmp
inc
inc
mov
outsb
push
sahf
pop
out
xor
mov
fistpl
xor
sub
out
fidivrs
stos
andl
sbb
je
cmpl
jae
mov
push
lods
cmp
jle
xlat
fwait
adc
scas
nop
jmp
xor
push
pusha
dec
lea
test
jmp
ficoms
cmp
xor
cs
fistps
dec
cmc
push
dec
sbb
dec
mov
pusha
inc
mov
sbb
packuswb
cmc
cmp
xchg
dec
push
test
repz
addr16
ds
xchg
bound
cmp
fisubrl
shr
push
je
pop
add
and
sub
ficompl
sbb
mov
push
or
cmp
stos
xchg
das
sub
test
mov
pop
fcoms
sub
push
mov
xor
out
jbe
or
imul
or
ret
sbb
dec
cmp
mov
ja
push
lds
pop
push
mov
xchg
push
inc
lret
test
xor
ficoml
xchg
adc
shlb
push
xor
inc
enter
push
and
repz
push
pushf
das
xor
enter
adc
pop
arpl
fdivp
popf
sbb
mov
mov
pop
ljmp
pop
cmp
mov
frstor
push
jne
paddsw
out
cwtl
sahf
xchg
push
jns
movntpd
dec
pop
mov
cld
sbb
xor
test
mov
fiaddl
pop
adc
dec
sbb
push
cmp
adc
les
inc
cwtl
xchg
lret
enter
ss
mov
or
xlat
ja
insl
imul
push
arpl
xchg
repz
push
inc
sbb
xchg
inc
mov
xchg
add
jae
sbbb
pop
stos
push
mov
imul
pop
leave
and
xlat
testb
test
bound
insl
leave
sbb
lock
es
sbb
loopne
cli
push
xchg
ljmp
push
jl
aad
inc
mov
and
xacquire
mov
adc
bound
or
xor
lods
sbb
cmc
shlb
sub
pop
xor
push
sub
mov
push
mov
aam
jle
pop
xor
leave
clc
or
inc
lcall
cmp
arpl
ffree
sbb
outsb
inc
in
jl
or
test
dec
add
add
scas
lods
fwait
cmp
inc
idivl
call
sti
adc
adc
das
sub
arpl
test
mov
addb
ficomps
outsb
lods
inc
mov
scas
xlat
test
rcrb
mov
out
pop
xor
rolb
mov
sub
mov
sbb
clc
xchg
mov
fdivp
je
sub
sbb
cmp
push
pop
mov
into
xor
add
pop
xlat
movsl
mov
shll
test
out
enter
sub
sbb
ja
bound
negb
out
out
xchg
lea
jno
xchg
xor
xchg
dec
scas
scas
lahf
sub
cmc
sar
or
add
dec
sbb
dec
decb
fmul
adc
cli
jecxz
fs
aaa
inc
inc
inc
or
lods
inc
push
mov
xlat
sub
jle
push
sbb
mov
int
fdivrl
cld
and
push
dec
or
aam
adc
and
jl
inc
fldt
lret
inc
dec
sub
test
lea
mov
or
push
scas
cmp
mov
leave
js
lods
add
inc
or
jae
call
sti
imul
xor
ror
out
ss
data16
adc
pop
out
imul
add
data16
pop
loop
nopl
inc
sub
fwait
inc
xor
jge
repz
mov
fwait
in
mov
add
mov
loop
dec
ss
push
ds
mov
pop
pushl
fwait
outsl
push
js,pn
push
adc
mov
xor
ds
pop
pop
lock
or
mov
dec
xor
inc
sub
pop
fmul
fsubr
inc
movsb
fadds
xor
lret
insb
cmp
mov
das
sahf
cltd
sbb
outsl
push
aam
sbb
sub
push
imul
mov
mov
mov
inc
fbstp
ja
dec
mov
inc
repz
pop
jnp
dec
sbbb
lods
loop
dec
and
loopne
pop
mov
xchg
push
or
mov
mov
iret
loope
imull
adc
aaa
sbb
and
arpl
or
or
pop
push
cs
cmp
xchg
inc
lods
mov
pusha
sub
sub
pop
pop
cmp
in
lods
sti
jmp
cli
shll
sub
stos
ret
xor
push
sbb
fisubrs
imul
add
pop
repz
and
pop
dec
or
jno
aas
arpl
and
push
popa
and
xlat
cmpsl
inc
mov
cmp
dec
mov
lods
cmpsl
jmp
or
mov
int3
jl
scas
mov
cmp
ja
adc
pushf
mov
ljmp
sub
mov
popf
and
fs
or
int3
jo
inc
inc
aam
mov
clc
mov
lahf
loop
negl
fwait
loopne
and
xor
pusha
and
mov
cld
push
lret
pushf
push
loop
fcom
push
pusha
sbb
sbb
mov
xchg
or
clc
ljmp
jl
inc
cmp
mov
ret
and
fstl
bound
lcall
aam
push
nop
imul
mov
cmp
inc
jns
out
pop
pop
dec
fisttpl
mov
bound
pusha
orl
cmp
lods
xor
push
push
add
fiadds
sbb
fimuls
jns
add
mov
sbb
ss
out
cwtl
dec
inc
sub
and
xchg
addr16
sub
outsl
in
test
xchg
fwait
adc
ss
sbbb
hlt
xchg
outsb
enter
cld
repz
rolb
mov
dec
dec
mov
jns
inc
dec
rolb
jge
push
xchg
cmp
lret
cmp
mov
xlat
inc
test
inc
insl
xchg
pop
outsl
xor
inc
jg
push
loopne
inc
cmp
jnp
inc
adc
sbb
push
mov
scas
xor
adc
sub
daa
enter
rcrl
xchg
dec
pop
popf
dec
inc
cmp
xor
xor
rorw
inc
pop
push
xchg
jl
shr
jp
sbbl
dec
sti
iret
in
in
mov
inc
dec
pop
jno
es
mov
out
pop
cmpl
jp
or
dec
push
in
pop
push
jmp
mov
cmp
pop
cltd
and
mov
jnp
or
push
push
sahf
jmp
mov
push
lds
lret
adc
jne
dec
insb
inc
sbb
int
pop
nop
xor
and
push
std
mov
mov
dec
leave
xor
pop
push
bound
xor
bound
in
adc
mov
loop
dec
adc
push
push
pop
jmp
jb
bound
arpl
cmp
inc
dec
daa
sti
sbb
std
pop
insb
or
sub
pop
push
pop
push
cwtl
push
fistpl
scas
or
xor
jp
push
jg
mov
xchg
imul
data16
fildl
mov
fs
stc
dec
or
push
and
inc
mov
xor
xchg
sub
or
orl
add
arpl
adc
aas
pop
jecxz
jae
arpl
int
sti
insl
sbb
cmp
sarb
pop
sbb
movb
sub
outsl
inc
aad
mov
arpl
fs
lret
aam
jo
mov
push
lods
out
jmp
sahf
and
lret
mov
add
cmpsl
int
insb
push
lahf
push
arpl
inc
push
inc
aad
iret
jge
cmp
daa
adc
fstpl
xlat
out
mov
dec
fistpl
cmp
sub
pop
xchg
mov
insl
imul
int3
sbb
pop
std
test
and
adc
popf
ljmp
mov
fisubl
jae
add
xchg
ret
inc
cmp
push
es
sub
call
std
loopne
jne
jecxz
es
das
fistpl
mov
push
cld
mov
in
push
mov
and
adc
xchg
test
and
xor
dec
cmp
inc
push
mov
push
push
mov
fistps
fldt
inc
leave
inc
dec
sbb
add
push
mov
mov
stc
sbb
xchg
stc
pop
inc
inc
sbb
dec
out
testb
test
fidivl
mov
and
scas
cltd
xlat
sbb
dec
ss
push
lds
inc
mov
mov
mov
fldcw
pop
sti
lock
push
xor
or
cs
and
scas
pop
imul
out
mov
int
push
add
add
adcb
or
aas
jae
and
out
aad
sbb
aad
scas
push
or
cli
int
inc
lods
sub
and
sahf
sub
cmp
repz
pop
fstpt
je
leave
insl
dec
jmp
das
out
jns
fwait
sahf
push
jecxz
xchg
ficompl
cmp
sub
add
xor
fnstenv
js
scas
imul
or
notl
mov
dec
movb
sub
cltd
adc
and
shll
out
aad
pop
jbe
mov
mov
lods
fcmove
imul
sbb
or
push
pop
dec
jns
mov
fs
cmovg
ret
mov
stc
loop
inc
mov
lea
pop
xchg
in
xchg
mov
cmp
dec
push
inc
ja
dec
pop
inc
lcall
fs
xor
test
dec
cmp
ror
lret
adc
mov
xor
jl
out
das
clc
cmp
in
and
pop
mov
popl
ret
push
xchg
fisttpl
dec
lods
clc
jge
inc
mov
out
mov
movsl
icebp
shl
andb
sub
out
push
inc
or
inc
mov
sbb
jle
fstpt
repnz
sti
sub
xor
and
iret
mov
ret
jnp
sbb
dec
cmc
adc
jmp
dec
xchg
xchg
add
xor
arpl
lret
push
iret
lods
or
or
roll
sub
cli
mov
and
inc
nop
in
sub
add
cwtl
sarl
mov
mov
push
or
mov
sub
jbe
xor
xlat
arpl
lods
in
push
aam
movsl
nop
dec
cmp
push
jno
inc
mov
dec
sbb
cli
add
imul
data16
xor
sbb
pop
dec
loop
cmp
jge
cmp
bound
add
repz
in
or
cmpb
pop
nop
xor
mov
push
pop
adc
or
addr16
mov
mov
sarb
sbb
test
cltd
enter
cld
jae
sbb
dec
lret
pushf
enter
sub
sbb
or
mov
jmp
dec
adc
incl
aaa
inc
fldenv
mov
or
adc
sbb
jp
push
js
and
dec
pop
push
dec
jae
jmp
jl
icebp
outsl
sti
push
outsl
pop
jmp
and
cmp
push
dec
fs
push
push
je
xor
and
leave
push
mov
inc
xchg
lret
cmp
orl
sbb
bound
dec
mov
mov
ss
sub
push
cmp
or
data16
push
xchg
test
mov
sub
fwait
int
je
pop
adc
ficoms
xor
scas
imul
ljmp
mov
push
push
cli
mov
or
cmp
jns
lahf
sbb
ljmp
xchg
xor
popa
dec
or
push
push
inc
popf
push
lret
mov
adc
sbb
mov
out
cwtl
inc
insl
xchg
and
jmp
cwtl
adc
push
insl
insl
adc
xchg
in
jg
mov
idiv
adc
std
xor
mov
cld
roll
xor
inc
movl
dec
inc
mov
arpl
rcrb
mov
push
mov
flds
push
cmp
out
xor
adc
sarb
pop
mov
sbb
js
adc
test
sbb
int
xor
push
xchg
sbb
or
and
fcmovbe
adc
cmova
jge
push
dec
or
add
repnz
xlat
stc
lods
js
nop
bound
movsb
inc
stc
out
cwtl
dec
jbe
sbb
jae
cmp
test
sub
cmpsb
push
bound
or
inc
sbb
adc
fidivs
mov
mov
lret
sub
cli
adc
push
outsl
sub
jl
gs
sbb
sub
fistpl
push
push
in
add
cmp
adc
pop
scas
rol
add
gs
ror
filds
rcll
sbb
add
xchg
sub
loop
pusha
outsl
ljmp
lods
daa
fisubl
mov
out
repnz
roll
outsb
xchg
stc
enter
push
jl
xlat
roll
jno
cmp
popa
sub
push
jbe
imul
js
lods
mov
es
repnz
sti
fiadds
or
push
inc
push
loop
sbb
adc
sbb
cmc
idivb
ffreep
rcr
jecxz
jg
mov
cmp
xor
pop
or
ret
or
jnp
inc
pop
pusha
dec
data16
dec
jl
jnp
add
jmp
lods
or
push
imul
mov
dec
pop
loop
sar
or
lea
leave
or
mov
and
leave
ja
cmc
add
push
lahf
sti
in
pushf
dec
push
pusha
mov
ficoms
mov
test
ficoms
dec
loop
cmc
mov
outsb
int
cmp
loop
imul
inc
scas
nop
repnz
inc
push
loop
dec
in
push
out
or
rorb
and
mov
adc
mov
leave
xlat
sbb
js
outsl
push
pop
mov
in
push
lock
movsl
out
sbb
add
or
popa
fwait
mov
xor
inc
leave
jo
xor
mov
xlat
ret
and
cmp
cld
inc
pushf
ja
mov
sub
out
lret
sbb
dec
mov
test
sbb
sub
std
scas
dec
or
shrb
xor
iret
and
xchg
iret
mov
cmp
adc
pop
dec
dec
inc
mov
mov
lds
negb
xchg
outsl
fsubrl
sbb
pop
hlt
scas
inc
call
jg
lods
mov
jae
pop
mov
jbe
shl
sub
sbb
hlt
fwait
std
pop
mov
sahf
xchg
xor
jg
fwait
sub
insl
outsl
lods
mov
push
push
lret
insb
push
pop
call
push
sub
xor
add
cmpsl
jl
jae
ret
mov
xor
negb
adc
test
adc
and
jle
leave
rcr
adc
dec
mov
cli
pop
das
sub
notb
outsl
clc
pop
pop
scas
xlat
or
xor
jp
adc
sti
inc
sub
lret
or
neg
fyl2xp1
mov
cmp
mov
add
pop
pop
xchg
sbb
cmpsb
or
jle
dec
mov
shll
pop
or
jl
roll
mov
xor
mov
pop
sbb
or
es
xchg
xor
pop
pop
lods
and
mov
fidivrl
fildl
sti
stos
mov
in
test
push
mov
repz
stos
leave
sub
lcall
ror
inc
sub
xor
dec
push
add
outsl
xor
or
push
inc
inc
fwait
inc
in
pusha
cmp
dec
pop
push
movsb
inc
sbb
add
inc
fwait
repnz
pop
insl
inc
xchg
push
call
pop
cli
rcrb
lods
test
mov
push
dec
cwtl
adc
mov
imul
pushf
and
xchg
cli
in
aam
testb
jmp
adc
dec
add
push
sbbl
repnz
into
cmp
inc
lock
out
pop
or
repz
sub
cltd
xchg
lock
mov
ret
inc
pop
pop
cmp
pop
cmp
pushf
push
fidivl
mov
sub
popa
lods
pop
jge
insb
fnstcw
mov
jae
fstpt
fwait
imul
outsl
fimull
and
adc
cli
inc
xor
ret
lods
lret
push
adc
cld
xchg
push
add
cmpsl
cmp
jl
mov
leave
dec
dec
and
xor
lods
fildll
sub
fstps
cmp
sub
sub
ss
cmp
icebp
sbb
xor
add
push
xor
rol
ljmp
cmp
scas
mov
or
push
add
mov
sarb
xchg
cmp
arpl
ret
adc
mov
test
out
cwtl
mov
pop
dec
int3
movsl
add
cwtl
out
js
add
xchg
sub
pop
xor
leave
test
into
inc
stos
aam
xchg
out
clc
xor
and
xchg
mov
inc
scas
xchg
adc
xlat
arpl
cli
mov
mov
or
pop
sub
pop
sbb
lahf
add
inc
sub
jnp
bound
and
lret
or
pop
jns
xor
imul
in
ss
fldt
aas
add
or
sbb
sbb
adc
xlat
or
xchg
cmp
outsl
mov
lock
cltd
push
nop
int3
and
ja
jmp
scas
int3
dec
add
popw
aad
lahf
xor
repz
lea
push
cmp
mov
outsl
pop
mul
adc
out
push
mov
inc
mov
stos
cmpsb
mov
in
jp
mov
adc
pop
arpl
sub
es
dec
fstpt
inc
popf
inc
pop
sbb
rcr
mov
xchg
shll
xor
sub
in
jae
jno
xchg
ficompl
xor
cmp
movsl
xor
sub
sarb
xchg
popf
xchg
xchg
cmp
dec
add
sti
mov
jp
in
inc
shlb
adc
dec
aaa
pop
nop
push
push
sbb
dec
pop
inc
or
adc
cli
xchg
add
mov
sub
adc
pop
jmp
notb
ljmp
push
push
popf
jbe
enter
adc
shll
aaa
scas
sahf
dec
pushl
or
clc
out
or
in
popa
inc
mov
out
and
mov
mov
add
dec
cmp
xor
lds
mov
xlat
jmp
cmp
cmp
jmp
dec
dec
sub
or
xor
xor
add
gs
cmp
stos
imul
insb
rolb
fdivl
in
leave
jb
jns
push
repnz
shll
cwtl
mov
fildl
pop
enter
push
pop
sbb
iret
cmp
mov
xor
xor
dec
add
lods
mov
fisttps
mov
push
push
pop
pushf
out
subb
inc
ja
cmp
xchg
mov
xchg
jae
in
jae
jecxz
roll
lret
scas
mov
das
iret
and
adc
push
pop
xchg
in
in
cmp
cli
lods
mov
adc
cwtl
push
lds
add
xor
stos
fwait
mov
pop
dec
sbb
and
push
sti
cmp
adc
into
jmp
sub
nop
push
rclb
jo
jp
jp
jge
add
shll
test
div
in
or
pop
stos
xlat
fs
add
pop
xorl
lods
and
xchg
iret
inc
lahf
gs
cmp
testl
repnz
jb
xor
mov
ja
mov
push
pop
and
call
mov
dec
mov
mov
call
daa
fnstcw
pop
or
inc
lret
push
inc
mov
pushf
dec
loop
movsb
cmp
call
fdivs
es
pop
pusha
sub
xor
dec
in
inc
lret
lret
push
cmp
xchg
fsubs
cmpb
dec
ss
or
xlat
pop
xor
push
cli
pop
mov
jns
xchg
xchg
push
in
or
lock
pop
insl
in
je
lea
mov
xchg
dec
jo
ljmp
cmp
xor
sub
push
repz
das
fmull
das
out
and
or
mov
mov
jmp
jl
subl
or
pop
sub
rclb
or
xor
adc
cmp
pop
mov
movsl
cbtw
push
bound
cmp
adc
cli
ja
mov
insl
sbb
push
pusha
mov
push
mov
mov
lods
pop
cmp
adc
mov
or
jmp
jbe
xchg
jg
fsubp
dec
dec
leave
test
mov
xchg
pop
or
add
pusha
and
dec
cmp
or
testl
cmp
push
jmp
sbb
fwait
jge
sarl
inc
pop
scas
sub
fidivrl
pop
jns
push
ss
cmp
test
xor
mov
fistpl
push
or
inc
pop
mov
sub
pop
and
pop
push
inc
push
xor
insb
lods
test
add
dec
adc
mov
call
ds
daa
cmp
int3
fidivs
xchg
mov
notb
sub
adc
lods
das
sar
inc
outsl
shll
je
pop
sti
bound
test
notl
lret
or
hlt
push
dec
rcrl
std
add
cmp
adc
fistpll
lods
je
mov
sub
fimuls
in
adc
enter
into
pop
jne
ds
int
sbb
jo
loopne
aas
mov
aaa
xor
dec
fbld
es
mov
movl
sahf
adc
aad
jae
add
movsl
push
inc
push
cmp
cli
adcl
mov
push
pop
jge
scas
sub
fnstenv
aam
mov
and
lret
mov
dec
jo
adc
fiadds
mov
imul
pop
pop
inc
enter
cmp
lods
adc
out
dec
es
xor
dec
mov
adc
push
cmpsb
inc
pop
and
sbb
xor
xor
pop
shll
or
iret
xor
rcl
sbb
inc
add
aad
pop
adc
add
daa
fwait
outsb
sub
pop
jnp
inc
loopne
lods
aam
mov
mov
aad
push
or
inc
sahf
mov
sub
push
mov
push
out
push
xchg
shlb
inc
add
in
xchg
repnz
mov
mov
mov
sbb
loopne
mov
lods
xor
lds
or
out
pop
shl
lahf
lret
dec
mov
xor
jl
push
sub
popf
xchg
dec
push
push
mov
push
fsubrs
mov
push
mov
dec
inc
pop
cmc
xor
dec
pop
or
ss
je
sub
and
mov
or
inc
dec
inc
adc
sti
push
insb
sub
xor
lea
lahf
aam
scas
adc
push
adc
jmp
les
inc
dec
rcrl
lds
cmp
mov
inc
hlt
sti
mov
inc
mov
xchg
or
inc
imull
adc
push
clc
or
pop
jle
mov
movsl
add
or
fildll
inc
or
flds
insb
test
inc
scas
fdivp
test
push
cwtl
movsl
hlt
cmpl
or
push
push
scas
ficomps
xchg
divl
xor
out
repz
movl
pop
fwait
aaa
jmp
cmp
ss
mov
xchg
xchg
adc
scas
dec
aad
add
dec
push
cltd
das
mov
movsb
sbb
in
mov
das
push
sbb
pop
jo
sbb
adc
frstor
or
icebp
sub
andb
jne
adc
inc
xchg
repnz
mov
js
ret
cmp
adc
push
cmp
pop
rclb
les
mov
ja
xor
push
sbb
xchg
cli
jge
jno
dec
test
jnp
outsl
xor
and
in
mov
popa
cmpxchg
jg
push
sub
pushl
or
push
dec
xor
cmp
pop
jno
lret
and
fdiv
aaa
jp
jp
jle
andb
dec
subb
mov
mov
sub
xchg
fidivrs
cmp
popa
mov
adc
mov
loop
adcb
jae
sub
and
out
int3
mov
cmpsb
sbb
repnz
mov
cmp
add
cmp
pop
and
or
dec
inc
sub
adcb
ljmp
lds
das
pop
ret
push
cmpb
repnz
loopne
jne
inc
sbb
pop
sbb
ss
repnz
mov
inc
addb
test
dec
sahf
je
or
dec
mov
mov
adc
or
fists
pop
fwait
mov
lods
or
inc
cmc
lret
add
fs
ret
sub
movsb
pop
cmp
sub
popa
test
push
rcll
mov
decb
inc
enter
les
rclb
sarl
lods
adc
insb
inc
pushf
pop
mov
stos
sbb
nop
dec
push
cmpsl
lods
mov
and
mov
sub
adc
xor
jl
add
iret
aam
idivl
fisttpl
dec
fwait
mov
scas
ret
push
jb
outsb
pop
jg
mov
test
pop
jl
scas
pop
ds
mov
lods
inc
std
decl
mov
jle
mov
mov
mov
mov
stos
mov
inc
fstpl
inc
mov
inc
or
pop
ja
aam
sbb
push
cs
mov
pop
sbb
sub
cmp
cwtl
or
and
pop
jo
scas
xor
mov
imul
clc
andps
clc
sbb
mov
ret
sub
pop
pop
xchg
fmul
enter
mov
lods
jle,pt
jge
sub
mov
cmpsb
dec
add
push
pop
cmp
push
add
mov
fiadds
fidivs
or
pop
loopne
movsl
push
dec
jmp
pop
in
sub
mov
xchg
or
push
rcl
add
out
pop
mov
adcl
push
mov
rol
fiaddl
cwtl
imul
inc
xor
push
lds
rcr
jle
add
or
xor
lock
pop
sub
arpl
cmp
adc
fwait
pop
je
es
dec
stos
push
mov
xchg
sbb
adc
cmp
dec
pop
ret
pusha
fdivs
cmp
lret
sub
js
sti
dec
loop
pand
sub
fwait
xchg
adc
cmpsb
dec
jne
fwait
pop
into
inc
xor
inc
or
ss
daa
das
test
jmp
xor
jno
mov
js
push
xlat
xor
xchg
cltd
sti
ret
es
push
jb
lcall
dec
pop
add
movsl
sbb
fs
lret
mov
rol
jae
jae
xor
stos
xchg
lret
add
loop
sub
mov
test
and
fisttps
dec
add
dec
jae
adc
dec
xchg
inc
mov
or
lret
stc
push
lret
cs
dec
pop
mov
inc
sbb
imul
cmpsb
sti
adc
flds
clc
popf
push
cmp
scas
pop
pop
jns
mov
das
dec
pop
push
add
cmpsb
mov
dec
daa
mov
push
sub
sub
jmp
pop
push
ret
ret
divb
mov
ljmp
insb
adc
cmp
jecxz
sarb
cmp
roll
icebp
scas
push
pop
sub
push
xor
mov
push
addr16
push
or
stc
cmp
jl
hlt
jnp
sbb
sbb
mov
xchg
addr16
xor
test
stc
leave
movsb
aas
mov
rorb
out
inc
mov
inc
dec
mov
cltd
dec
mov
lods
and
jg
cmpsb
mov
cs
sarl
jo
cli
cmp
inc
outsl
and
pop
enter
hlt
xchg
lods
cmpl
outsl
or
popa
movsl
dec
outsl
pop
cmpl
mov
jmp
lcall
fisubl
mov
data16
insl
sbb
adc
ljmp
sbb
sub
dec
push
add
push
dec
dec
or
mov
cmp
dec
mov
imul
out
ret
mov
lret
dec
aam
xlat
adcl
dec
push
xor
inc
gs
mov
adc
dec
pop
mov
xor
xorb
ret
dec
and
ss
xchg
mov
sahf
aad
iret
call
push
and
mov
pop
push
cmp
adc
sbb
xchg
fisubrs
mov
repnz
insl
xor
cmpsb
sbb
mov
fstl
pop
sbbb
or
leave
testl
pop
adc
mov
inc
stc
jno
xor
out
push
ja
sbbl
or
add
fsubs
mov
push
push
xor
push
pop
mov
dec
aaa
inc
sti
add
mov
inc
or
dec
dec
add
xor
mov
pop
and
xor
test
sbb
mov
scas
and
sti
int3
inc
pop
jo
adc
xor
push
rorb
inc
cmp
inc
push
push
cmpsl
jge
cli
lds
testb
loopne
ss
inc
push
outsl
adc
cli
sbb
mov
dec
mov
sarb
and
popa
push
cmpsl
mov
add
dec
les
xchg
fs
stc
test
dec
iret
sub
aaa
arpl
ret
popl
dec
outsb
aam
repz
popf
dec
dec
mov
adc
mov
stc
dec
pop
inc
fcmovne
hlt
jae
inc
mov
fldcw
pop
cmp
in
mov
pop
add
inc
ss
jp
or
test
lods
mov
or
adc
aas
cmp
sub
hlt
lods
pop
sbb
fmuls
nop
iret
mov
pop
add
lcall
mov
mov
lods
and
push
repz
or
bound
add
ss
out
xlat
stc
and
int
into
sbb
pop
mov
mov
cld
enter
aam
pushf
fwait
push
jns
ficompl
dec
sbb
mov
adc
mov
or
pop
xchg
jg
clc
cmpb
pusha
bound
sbb
out
xchg
jecxz
xchg
daa
push
inc
out
push
fldcw
mov
adc
les
je
adc
sbb
pop
pop
fmulp
mov
cwtl
sbb
and
xor
add
jo
add
outsl
sbb
and
mov
push
add
jp
pop
js
jl
mov
data16
jle
add
dec
loop
imul
inc
adc
mov
xlat
outsl
push
dec
cmpsb
mov
add
add
pop
testb
mov
dec
jno
jae
insb
in
outsl
or
adc
push
lods
and
inc
scas
mov
nop
dec
push
mov
pop
jl
outsl
cmp
sbb
repz
rclb
jbe
data16
or
inc
data16
lahf
js
adc
bound
lahf
push
insb
push
and
pop
dec
leave
lock
or
mov
js
lcall
popl
sub
imul
add
js
mov
sub
pop
lret
lods
sbb
imul
and
xlat
adc
bound
ja
push
cli
mov
push
jecxz
inc
mov
pop
je
xor
addr16
imul
ret
aam
pop
push
mov
ret
dec
jmp
sarb
xor
cli
push
mov
xor
sbb
add
gs
jmp
cmp
add
cmpsl
mov
mov
adc
imul
cmp
push
test
cmp
dec
mov
mov
in
sbb
xchg
mov
push
push
cmp
xor
hlt
adc
ret
mov
mov
js
jnp
lcall
dec
mov
out
sbb
scas
mov
ds
std
inc
cmpsl
sbb
dec
or
js
adc
push
cmp
inc
mov
iret
adc
faddp
cmpsl
or
cmp
sbb
cmpsl
mov
mov
adc
ret
sbb
inc
adc
adc
popf
push
sarb
or
lcall
push
loop
stos
fistl
negl
sub
outsl
sahf
test
mov
sbb
pop
mov
push
mov
jle
lods
das
mov
mov
mov
lods
inc
bound
jge
jge
dec
sub
mov
int3
test
inc
cli
in
mov
push
add
mov
or
lods
lock
movsb
jecxz
mov
ret
sub
inc
and
sbb
add
lret
sarl
loop
test
cmc
push
rcrb
dec
mov
shrb
push
fistl
push
xor
test
loopne
pop
insb
shl
or
pop
inc
pop
jnp
push
outsb
pusha
in
cs
xchg
add
xorl
jg
dec
arpl
mov
rcrb
es
jl
push
scas
jo
or
fcoms
push
add
cs
or
and
jae
cmp
and
popa
inc
and
pop
cmp
ss
inc
push
cmp
mov
pop
nop
dec
in
ret
mov
test
adcb
or
in
dec
loop
adc
xchg
dec
mov
jno
mov
or
insb
fisubrs
fwait
inc
cmp
inc
push
jns
lret
leave
xor
daa
in
js
das
insl
cld
push
or
cld
xchg
dec
mov
test
sub
push
cld
fnstenv
rclb
lcall
dec
mov
mov
jnp
inc
xchg
lcall
jo
mov
cs
fdivrs
test
ss
push
push
cmp
sti
bound
push
dec
push
and
mov
inc
je
pop
xor
ja
add
lahf
lods
xchg
ret
sub
and
sbb
pop
fstl
pop
clc
adc
cmp
pop
or
inc
lret
push
fldcw
or
push
sbb
mov
pop
mov
mov
into
dec
xchg
aad
test
push
iret
and
sbb
ret
adc
imul
and
cmp
fistpl
lret
aad
jae
mov
push
jo
cli
pop
xor
sub
inc
jp
mov
and
scas
cmp
push
inc
xchg
sbb
rorb
or
cltd
mov
popl
xchg
sbb
fiaddl
out
jmp
pop
test
sub
shlb
sbb
gs
ficoms
test
test
inc
repz
pop
sub
mov
lods
inc
dec
inc
dec
pop
dec
dec
popa
mov
fyl2xp1
mov
xlat
sub
jge
in
inc
cmpsb
out
xchg
sar
aaa
pop
adc
xor
loopne
xor
adc
sahf
mov
or
test
xlat
addr16
add
orb
dec
pop
mov
cs
xchg
in
dec
and
and
daa
cwtl
insb
and
pop
inc
push
outsl
jnp
popa
loope
sbbl
mov
jbe
mov
mov
out
out
lock
jmp
gs
cmp
or
mov
jbe
fst
mov
lcall
add
inc
dec
push
shrl
sbb
mov
cmpl
lcall
fcmovnbe
add
mov
fucom
push
faddl
int3
mov
xchg
adc
ja
loope
mov
out
inc
insb
aad
lods
cmp
dec
repnz
pop
mov
call
notb
dec
test
dec
mov
sub
mov
sub
adc
addr16
push
lahf
int3
or
shrl
dec
dec
int
jle
pop
leave
cmp
nop
lds
je
cmp
pusha
mov
jp
nop
and
mov
sub
adc
sti
enter
push
and
dec
sbb
setns
fstps
inc
aam
mov
dec
stos
aaa
andb
test
rorb
mov
dec
stc
sbb
mov
sub
das
mov
push
arpl
std
ficomps
idivb
mov
fisubrs
mov
jmp
jno
dec
jns
rcrb
sub
mov
xor
ss
add
or
dec
pop
lret
mov
push
std
lods
cmp
sub
sbb
lcall
ud0
ljmp
ljmp
mov
dec
dec
adc
lcall
sti
mov
mov
mov
rolb
sti
cmp
repnz
mov
push
les
mov
sub
leave
dec
mov
jne
push
ss
pop
dec
dec
enter
adc
fcompl
ss
or
dec
or
sbb
sub
adc
arpl
inc
or
movl
sbb
adc
popf
jmp
lahf
call
pusha
fildl
inc
pop
pop
lods
cmpsl
sbb
jge
fs
ja
adc
xor
into
inc
cmp
jl
sub
es
sub
xorl
sub
std
inc
in
js
out
xchg
cmc
cmp
sbbb
mov
call
in
adcb
mov
lahf
outsb
dec
movb
icebp
push
mov
sub
insl
jmp
cld
sub
mov
jmp
movsb
push
addr16
adc
lods
vpxor
bound
pushl
jmp
mov
pop
inc
jo
pusha
fisubrs
sbb
sub
sub
imul
sti
mov
enter
sbbl
and
and
popf
data16
dec
outsl
insb
xchg
sub
std
or
mov
xchg
push
int
mov
sub
cwtl
cmp
push
test
aam
mov
addl
pop
fdivs
mov
or
jmp
aam
and
or
cmp
sbb
and
loop
das
sbb
cmp
dec
aas
mov
push
rorb
stc
je
lret
cwtl
loop
sbb
loopne
loopne
lods
jb
test
test
lock
and
cmpb
pop
rcrl
repnz
jbe
addr16
fimull
push
mov
test
lods
xchg
pop
fadds
sbb
mov
fwait
scas
inc
ret
cld
xchg
outsl
mov
cli
pop
lea
inc
out
sbb
cmp
mov
dec
jno
push
mov
sbb
jp
mov
mov
push
dec
test
or
xor
movsb
sub
dec
fisubrs
hlt
hlt
cmp
jmp
sub
test
cmpb
dec
stos
clc
push
rorl
sub
insl
inc
imul
and
nop
sub
mov
sub
xor
repz
adc
mov
sarl
or
pop
xchg
lcall
and
ss
mov
das
pop
leave
and
fadds
lods
sub
push
push
popf
cmp
aaa
push
fdivrs
pop
sub
add
xlat
mov
xor
mov
pusha
rcll
fldt
mov
jge
cmp
mov
xchg
push
inc
cmp
inc
adc
push
inc
xchg
test
shr
mov
add
xor
mov
mov
dec
sbb
jae
test
enter
mov
mov
or
cmp
bound
mov
inc
lds
fadd
add
std
mov
fwait
cmp
int
pop
xor
xchg
cmp
pop
rcr
dec
and
js
sbb
dec
cmp
xlat
adc
xchg
pushf
and
mov
or
sub
test
push
fiadds
adc
ret
fisttpll
xchg
inc
popf
cwtl
dec
lret
push
xlat
cmp
mov
or
mov
inc
aam
or
pop
jmp
sub
cmp
mov
dec
mov
or
inc
lret
inc
cmp
adc
sti
loop
push
enter
dec
dec
mov
push
add
fcmovnb
xor
push
pop
rclb
push
dec
xor
sub
and
dec
push
insl
add
popa
mov
xchg
cmp
xchg
add
vdivps
adc
cmp
sbb
loopne
lahf
clc
repnz
scas
test
cs
inc
mov
or
dec
push
mov
mov
cmp
call
push
icebp
sahf
dec
mov
mov
sbb
imul
xchg
jecxz
sbb
pop
repz
mov
or
adc
incl
cld
push
cwtl
push
adc
hlt
adc
or
add
js
in
push
sub
mov
jo
js
dec
mov
mov
inc
mov
jno
cli
jle
out
mov
mov
xlat
lret
jns
cmp
mov
or
push
sarl
test
xorl
cli
in
dec
jb
mov
pop
adc
testb
or
xchg
cld
mov
lods
imul
aam
add
stos
xorl
das
out
jnp
push
negl
push
jecxz
lahf
scas
dec
push
inc
or
sub
fstpt
jnp
dec
push
fcomps
fxam
out
flds
mov
dec
iret
mov
and
cmp
mov
xor
mov
mov
push
mov
inc
or
add
mov
call
pusha
pop
stos
or
sbb
inc
fs
xchg
adc
pusha
adc
add
fnsave
push
roll
sub
push
mov
mov
adc
fs
sahf
mov
int3
push
cli
enter
pop
sti
mov
in
ljmp
lods
xor
mov
inc
push
arpl
rorl
add
xchg
sub
push
lret
sub
ss
sbb
call
dec
lods
call
push
sti
add
xor
loope
icebp
enter
loope
xor
mov
aam
out
sbb
jns
mov
jp
mov
mov
mov
in
cmp
inc
lret
or
lret
ljmp
mov
jns
push
aas
mov
in
mov
sbb
dec
cli
imul
jo
sbb
cmp
pop
xlat
fwait
push
push
sti
lret
xchg
sahf
xlat
cli
sbb
adc
jl
sub
aam
jge
cld
ficoml
xchg
repz
pop
in
adc
lcall
idivl
sbb
inc
hlt
push
cmp
mov
or
mov
sti
mov
push
out
adc
xlat
cltd
adc
sub
mov
sbb
dec
into
dec
sbb
testl
orb
aad
fwait
xchg
in
insl
jp
in
jae
dec
dec
call
addr16
lds
cld
push
addr16
hlt
cmp
data16
push
and
push
int3
push
jns
mov
lea
adc
in
mov
add
sbb
adc
pop
pop
dec
cld
push
rorb
jno
cmp
mov
and
mov
mov
pop
push
dec
jmp
adc
add
mov
clc
int
cli
jge
cmpsb
loope
or
ret
dec
sbb
jo
mov
fldcw
xor
icebp
jae
adc
stc
sbb
aam
enter
lods
faddl
repz
ret
enter
jp
mov
mov
mov
aam
lret
scas
mov
sbb
mov
sahf
adc
cmp
lods
ss
out
and
test
add
xor
push
mov
push
stc
cld
das
and
xchg
sub
xchg
clc
or
stos
adc
add
dec
cmp
aas
out
jge
xor
stos
mov
xchg
cmp
shll
adc
and
scas
cmp
lods
nop
test
insl
pop
fbld
sbb
sub
sbb
pop
xor
jecxz
ja
sub
cltd
sbb
movsl
das
pop
xlat
fistl
lea
arpl
les
mov
jle
push
es
inc
repnz
fnsave
or
dec
xchg
sbb
sub
out
fdivp
fisubrl
dec
je
dec
jge
cmp
mov
dec
cmp
lret
mov
push
and
cli
adc
ret
aas
dec
hlt
icebp
or
or
gs
sub
js
mov
adc
cmpsl
jl
mov
cmp
push
stos
cs
enter
and
das
jns
add
add
aas
outsl
dec
ret
push
lods
scas
xchg
xor
jae
outsl
cmpsl
cmp
out
leave
cmpsl
test
jp
push
out
jmp
ljmp
jp
iret
subl
lods
adc
je
mov
sbb
popf
lret
xchg
aad
insb
and
mov
lret
fidivs
bound
push
xchg
pusha
sbbl
ret
scas
push
mov
repz
daa
jae
ret
xorb
movsb
daa
popf
arpl
test
cmp
cmp
pop
sbb
inc
pop
and
push
adc
ret
dec
roll
xchg
std
push
dec
jecxz
jnp
bound
fildl
shl
xor
push
lcall
jl
filds
inc
xor
push
hlt
push
iret
es
dec
pop
inc
mov
sbb
push
sbb
adc
inc
mov
outsb
inc
jp
cmp
inc
adc
jno
int
cmp
dec
adc
popf
ret
movsb
cmp
or
mov
pop
aad
jmp
ret
lods
xlat
in
xor
inc
iret
lret
subl
pop
cli
loopne
ror
mov
inc
push
or
xlat
xchg
cmp
nop
adcl
mov
adc
xchg
push
push
repz
std
lret
xchg
and
pop
sub
inc
iret
add
xchg
push
mov
out
clc
iret
lea
xlat
mov
mov
mov
inc
push
dec
cmp
dec
not
jmp
aaa
divb
movsb
ror
mov
mov
lret
adc
jb
call
mov
pop
sti
dec
sti
jns
lock
mov
xchg
movsl
and
out
inc
mov
push
pop
mov
xor
or
sbb
test
pop
int3
xor
xlat
test
int
js
adcl
pop
dec
pop
es
es
pop
test
mov
sbb
add
and
jge
insl
lahf
mov
and
push
test
pop
push
sbb
enter
or
xchg
lret
add
mov
mov
ss
fistpll
jg
push
or
not
push
mov
sub
test
pop
fdivrs
rcrb
jns
mov
pop
xchg
movq
popf
das
mov
stc
xchg
ret
cmp
lods
mov
or
mov
out
movlps
popa
cmp
sub
inc
aaa
outsl
pop
xrelease
and
xor
shll
push
ss
dec
push
push
sub
xor
pop
lret
xorb
dec
or
mov
test
in
add
jbe
repz
dec
lea
and
cmp
sbb
sbb
dec
lods
push
sub
fcoml
mov
ja
cmp
rol
fimuls
sahf
mov
rcll
sbb
testl
jo
in
mov
mov
mov
dec
jp
jns
ds
pusha
pop
sbb
repz
cmpsl
das
or
xlat
dec
in
fbstp
mov
adc
adcl
ret
cld
and
pusha
pop
fldl
add
mov
dec
test
xchg
imul
in
lcall
sbb
jb
push
adc
dec
push
cmp
xchg
dec
data16
mov
pusha
adc
lret
sbb
rolb
pusha
jb
add
ss
and
inc
pop
mov
push
lods
aaa
sub
inc
es
je
loop
push
mov
notb
es
pop
repz
jp
sbb
xchg
xchg
mov
push
adc
mov
sub
xchg
repz
aad
push
adcb
mov
xchg
push
sub
jo
clc
ret
bound
pop
mov
idivb
sub
dec
mov
or
outsl
sbb
push
cmpsl
or
mov
ret
movsl
les
fimuls
ror
lods
push
mov
ret
iret
push
xchg
pop
fisttpl
call
pop
cmp
push
imul
fs
and
fisttpl
icebp
push
pop
xor
cwtl
dec
outsl
push
cmc
xchg
enter
test
mov
addr16
sbb
pop
adc
das
dec
mov
mov
push
xlat
push
xchg
decb
push
aaa
push
push
shrb
sbb
cwtl
cmpsb
pusha
or
mov
xor
ss
push
repz
dec
mov
add
mov
jl
decl
aaa
scas
adc
pop
pop
push
dec
push
push
lods
mov
sbb
push
dec
mov
fistpll
sti
lret
xor
xchg
lods
mov
out
mov
xchg
jno
aaa
ds
xchg
repnz
jbe
xchg
aad
add
push
inc
adc
mov
cmp
ja
in
pop
dec
sbb
insb
loop
lds
movsl
pop
pop
scas
test
ficoms
add
add
mov
ss
sub
sbb
mov
mov
push
inc
mov
mov
aaa
or
and
lds
repz
mov
dec
ret
xchg
sub
inc
pop
sub
mov
mov
jo
fcompl
idivb
enter
dec
jp
mov
rcrl
popa
jae
lods
push
shlb
xchg
shrl
mov
pop
lret
mov
xlat
sbb
mov
pop
xor
div
adc
cmp
cli
dec
pushl
mov
fsubs
xchg
jl
cs
notl
cmp
push
sbb
pop
lret
lret
xchg
jns
sbb
rcll
sbb
negl
sbb
repnz
mov
xor
mov
push
pop
and
or
mov
push
xchg
cmp
int
jnp
pop
mov
sbb
jns
add
cmp
dec
inc
inc
lods
popf
push
push
sahf
or
push
ss
lret
pop
inc
fidivrs
clc
and
sbb
pop
aad
cmp
shll
mov
mov
sbb
mov
xchg
pusha
rcll
inc
cmp
cmp
mov
shrl
pop
pop
ficompl
sub
xor
push
push
mov
or
imul
decb
dec
push
push
enter
add
mov
aam
xchg
bound
stos
jg
fisttps
xchg
test
js
and
or
jg
dec
decl
sti
vandpd
inc
outsl
sub
sbb
dec
ss
icebp
adc
sahf
call
sti
sub
jg
mov
xor
dec
cmpb
out
arpl
je
bsr
std
gs
or
loope
push
cli
cmp
dec
inc
sbb
mov
sbb
aad
inc
in
cmp
mov
ljmp
sarb
cli
nop
cld
das
jno
or
xchg
push
fs
dec
bswap
int
ret
add
adc
fnsave
mov
jo
or
fisttpll
inc
cmp
push
aas
dec
stos
xor
outsb
dec
adc
popf
dec
pop
sub
gs
adc
mov
adc
sub
js
pop
jnp
jnp
in
mov
outsl
cmp
cmpl
xchg
rcll
lahf
aad
mov
add
cs
rclb
inc
xchg
adc
add
push
fs
clc
cmp
sub
es
mov
mov
dec
mov
inc
sti
rol
sbb
jne
dec
sub
xlat
dec
sub
adc
add
dec
inc
es
iret
mov
xor
push
fs
movaps
stos
dec
cmp
adc
dec
arpl
adc
ficompl
inc
inc
pop
sti
add
in
jle
dec
jno
dec
adc
insb
pop
popl
das
test
insb
mov
xor
imul
fs
je
pop
adcl
and
es
push
les
jg
cmpsb
js
push
sbbb
cmp
outsb
mov
orl
dec
adc
and
sub
mov
xor
aad
mov
mul
outsl
push
dec
rorl
out
fnsave
and
es
sbb
pusha
cmp
or
outsl
sbb
fistpl
adc
cwtl
or
push
xor
inc
xor
xchg
lods
add
or
je
xchg
mov
pop
sbb
aaa
adc
loop
xor
fnstsw
inc
mov
xor
movsl
fs
mov
mov
dec
fwait
push
add
enter
push
mov
pusha
dec
es
push
sbb
dec
add
mov
das
cmp
pop
daa
shrl
fmull
mov
and
push
js
loop
shr
mov
cs
cmpsl
sub
sub
mov
data16
dec
push
sbb
jmp
test
push
daa
or
lret
in
dec
pop
outsl
mov
sub
psrld
jmp
mov
sbb
repz
pop
popa
pop
lods
push
outsl
dec
bound
cmp
fwait
pop
add
lea
aaa
push
push
rorb
sbb
test
sub
mov
and
adc
cmp
jnp
adc
jle
sub
cmp
dec
int
out
and
bound
xor
insb
and
fstp
mov
add
test
sbb
add
xlat
ds
jle
lods
out
xchg
cmp
lret
pushl
repz
outsl
xor
test
fwait
scas
rcrb
lret
jge
insl
ja
pop
jns
xchg
inc
adc
push
enter
jle
fstpl
xchg
out
data16
adc
rcrb
nop
icebp
adc
into
mov
mov
push
cmp
dec
cs
mov
cmp
sub
push
cld
and
addl
sti
jns
outsb
mov
and
bound
comiss
mov
pop
jno
and
insb
mov
pop
add
fldenv
push
sbb
adc
loop
subb
mov
xchg
mov
dec
push
and
sub
dec
mov
mov
cmpsl
cs
scas
es
cmp
adcl
bound
dec
mov
xor
xor
push
das
lods
sub
push
and
es
push
mov
mov
mov
adc
mov
or
and
and
dec
scas
push
out
sbb
add
jne
cmp
sub
pop
push
inc
mov
sti
push
cmp
loopne
sbb
addr16
or
push
mov
cli
lods
mov
clc
add
sbb
cld
push
jl
push
mov
iret
or
bound
add
xchg
jmp
repz
test
or
pop
sub
pop
sub
mov
add
mov
les
cwtl
push
out
mov
push
lcall
xchg
sahf
std
and
je
or
popa
mov
lret
movsl
sub
xor
and
mov
xchg
mov
push
dec
outsb
inc
push
adc
and
sub
fstpl
test
push
outsl
push
ja
dec
inc
lock
sbb
repz
jle
aam
inc
mov
ja
loop
test
mov
sub
cld
lds
pop
int3
fnstenv
cmpsl
sub
mov
jmp
xchg
in
mov
out
fisubs
add
push
or
or
adc
ss
sbb
jge
fs
dec
mov
xor
loope
or
in
adc
cmp
aaa
mov
lret
movb
lret
mov
xor
inc
fnstenv
lahf
pop
lret
rcll
std
push
lods
and
sub
in
sbb
loop
js
icebp
add
clc
in
sbb
cmp
mov
mov
mov
adc
mov
repz
xor
lahf
shrb
cmpsb
call
daa
loop
inc
sub
add
xor
fwait
mov
test
ds
jo
aad
clc
incl
sub
insl
jns
cmp
sub
ljmp
das
add
and
mov
pusha
xchg
outsb
or
jbe
lcall
lret
inc
xorb
jb
mov
lahf
cwtl
push
mov
popf
mov
add
mov
xchg
push
xchg
cmp
jno
mov
out
dec
lods
stos
dec
jle
aaa
sbb
cmp
and
rcrb
incl
push
dec
aam
jnp
adc
popa
les
rcr
xchg
outsl
mov
loop
hlt
mov
dec
inc
xchg
gs
adc
jecxz
stc
bswap
or
in
aaa
adc
or
fcoms
mov
lcall
sub
das
ljmp
xor
push
cmp
mov
sti
jns
divb
adc
lods
lock
aam
pop
out
sbb
or
and
sbb
xor
mov
shlb
and
jmp
or
push
dec
inc
in
mov
cwtl
aaa
sub
push
enter
jl
in
es
scas
inc
inc
jnp
lods
xchg
jg
cmpb
das
ret
lahf
jne
dec
sbb
xor
int3
mov
jnp
xor
ret
mov
push
test
xchg
xchg
sbb
sub
sub
gs
rcll
dec
mov
push
ret
negl
jge
add
mov
fmulp
shrl
nop
jp
aam
in
cmpsb
push
jns
pop
ret
cs
dec
sub
or
mov
lret
pop
jg
fildll
lods
sbb
leave
arpl
int
cmp
sbb
sub
clc
lret
je
pop
adc
dec
enter
jo
pop
sbb
fimull
jo
xor
adc
cli
jmp
mov
mov
dec
or
push
insb
aam
leave
adc
inc
lds
xchg
inc
or
pop
pop
shll
adc
sub
mov
sti
xor
mov
jae
call
xchg
pop
inc
cmp
cmp
hlt
scas
jno
jmp
inc
cmpsb
or
xor
jns
push
arpl
mov
adc
adc
sub
cwtl
or
test
mov
daa
sub
pop
pop
sub
sub
jnp
pop
inc
dec
ss
add
inc
push
mov
fwait
mov
sbb
std
data16
inc
es
sub
cmp
mov
outsl
dec
pop
cmp
popa
pop
jmp
cmpsb
mov
es
mov
enter
mov
in
or
mov
das
in
lock
mov
mov
push
push
sbb
dec
or
lret
ljmp
or
mov
sbb
mov
lds
or
and
cmp
dec
pop
mov
adc
jmp
jl
pop
adc
test
frstor
sbb
jns
in
mov
lret
jg
adc
sbb
and
adc
dec
mov
fisubl
pop
jmp
xor
repz
aas
cmpb
xchg
mov
dec
lock
arpl
mov
or
sub
call
jns
lret
cmpb
clc
mov
lret
out
outsl
xchg
or
pop
mov
jg
sbb
xor
lret
iret
xor
addb
movsl
dec
pop
push
mov
xchg
jno
adc
aaa
lods
jo
dec
lea
lret
pop
lds
movl
inc
add
pop
bound
imul
mov
mov
ss
sbb
cmp
cmp
hlt
arpl
inc
and
lret
daa
je
cmpsl
xor
in
sbb
xlat
inc
bound
and
push
xor
stos
mov
sbb
jge
es
xchg
jb
and
popa
cld
xor
lods
out
or
sbb
stos
imul
fisttpll
ss
loop
rclb
mov
cmp
sbb
xor
cld
push
cmpsb
jle
sbb
enter
lret
bound
jns
mov
cmp
cli
sub
inc
or
inc
xor
int
dec
pushf
sbb
cmp
cld
xor
sbb
sbb
add
inc
adc
or
into
leave
mov
imul
into
xchg
add
dec
push
mov
popf
xor
addb
cmp
das
into
xchg
xchg
jmp
and
fcmovnu
push
adc
inc
cltd
repz
push
ret
out
mov
dec
jns
pop
dec
fldl
mov
pop
mov
test
push
jne
pop
dec
call
sub
adc
xlat
enter
sahf
lea
fdiv
push
or
cmp
mov
outsl
inc
jmp
xor
test
cmp
aam
maskmovq
negl
cli
popf
lcall
mov
rcl
cmp
mov
shll
cmp
cmp
adc
outsb
pop
mov
in
lret
pop
push
mov
repnz
dec
ljmp
inc
roll
sbb
mov
cmp
mov
mov
outsl
push
nop
add
xor
ja
adc
pop
jmp
lods
or
mov
mov
in
lret
xchg
sbb
xchg
jo
push
fld
push
fstpt
jge
mov
add
cmp
and
xchg
or
cmp
lods
mov
stos
jp
xor
aaa
pusha
push
cmpsl
popa
repnz
test
sbb
adc
sbb
lea
mov
cmpsl
out
and
lahf
insb
rolb
popf
rsqrtps
fnstsw
lds
cmovb
inc
adcb
xor
leave
pusha
adc
cmp
xchg
xchg
xlat
outsb
or
negb
lds
dec
fadds
jle
xchg
sbb
cmpsl
cmpsb
sbb
es
test
loop
pusha
imul
pop
or
es
daa
pop
mov
jle
xor
dec
ss
push
fsubrs
jle
jns
xor
lods
sub
insl
lret
stos
imul
adc
jmp
jg
push
bound
push
inc
mov
sub
adc
orb
add
pop
lret
jl
push
sti
xchg
shrb
stos
xor
in
jmp
insb
shrl
mov
xchg
fldt
in
es
insb
pop
hlt
enter
adc
mov
sub
inc
adc
nop
icebp
dec
xchg
inc
mov
movsb
mov
call
push
xor
int
push
ss
adc
pop
test
push
bnd
inc
nop
pusha
mov
push
push
xor
or
mov
arpl
lcall
cmp
push
xor
mov
dec
pop
jne
ror
idiv
cmp
sbb
icebp
mov
mov
fistpl
ret
dec
das
imul
imul
mov
jno
stc
xchg
rorb
or
inc
cmp
mov
sbb
xor
out
xlat
and
pop
es
lret
pop
vpcmpgtd
lods
repnz
mov
cmp
sbb
adc
inc
outsl
push
sub
fisttps
jne
add
mov
in
or
sub
cmp
push
fwait
xchg
mov
loopne
out
or
shrl
mov
push
insb
repnz
test
pop
adc
and
cmp
scas
lahf
cmp
ss
push
mov
or
hlt
mov
pop
negl
cld
cld
repnz
adc
cmp
cwtl
ret
xchg
imul
or
sub
sub
cmpsl
inc
test
lcall
jno
movsl
xlat
das
loop
out
dec
les
sub
out
sti
or
add
dec
imull
sbb
popf
inc
stos
aaa
stos
js
dec
xlat
pushw
xchg
aas
xor
or
xor
pusha
cld
xchg
push
add
mov
xlat
or
xor
dec
mov
mov
fscale
arpl
sub
sbb
push
mov
aad
cmp
xchg
lret
pushf
push
pop
outsl
cwtl
mov
mul
mov
stos
fwait
xor
inc
sbb
mov
int
or
push
cmpsb
pop
ss
hlt
mov
ss
jle
stc
stc
ds
clc
mov
cmp
mov
mov
push
and
jnp
mov
mov
pop
mov
add
bnd
cmpsl
dec
imul
xchg
and
pop
mov
fldt
fisubs
loop
pop
rcrb
mov
pop
xlat
and
add
sbb
mov
repz
dec
mov
mov
dec
lods
jle
fsubp
int3
inc
mov
pop
bound
dec
push
lahf
mov
or
out
dec
cmp
add
flds
dec
cmpsb
les
lcall
xchg
mov
cmp
add
xor
jnp
stc
in
xchg
inc
dec
dec
push
mov
sub
sbb
cmp
sarl
iret
and
sub
mov
lcall
pop
cs
add
cmpsb
imul
shlb
jns
dec
negb
pushf
loopne
mul
or
inc
mov
loopne
xchg
or
loopne
ljmp
or
mov
leave
push
mov
jg
cmp
je
inc
pop
adc
loopne
ret
push
xor
roll
mov
adc
push
mov
imul
aad
xchg
cmp
and
es
push
adc
daa
dec
bound
lahf
push
mov
dec
aaa
push
mov
mov
jnp
pusha
in
jge
xlat
jmp
mov
mov
mov
sub
dec
movl
movsl
inc
push
cmc
adc
pushl
in
adc
cmp
fs
dec
xor
adc
jae
nop
xor
xchg
mov
jns
sahf
mov
lret
push
cmp
icebp
xor
cmp
repz
sbb
cmpsl
testb
jbe
jg
and
inc
out
sbb
movsl
push
adc
pop
mov
repnz
and
jne
adc
push
mov
cmp
lds
shll
fwait
idivl
pop
mov
sub
rclb
dec
rcrb
cmc
xor
add
mov
out
mov
push
push
cmp
cmp
scas
ss
add
lods
pop
mov
daa
or
cmp
in
pop
mov
repz
xor
adc
loop
inc
out
mov
xchg
mov
or
cmc
fisubs
push
ljmp
pop
mov
and
mov
cmp
jge
stos
cmpsb
mov
mov
lcall
or
or
mov
js
pop
aas
push
pop
xchg
fcmovnbe
sbb
sbb
xlat
jg
cmp
mov
xchg
clc
sub
aaa
ds
repz
mov
cli
out
add
inc
push
lods
mov
mov
test
jae
mov
loopne
mov
push
fdiv
aas
xor
or
push
xor
mov
mov
idiv
sub
movsl
sbb
xor
sbb
pop
mov
js
test
pop
fcmovnbe
mov
pop
pop
jp
adc
addr16
fwait
mov
lcall
stc
jge
fldenv
aas
mov
ficoml
daa
sbb
push
mov
sbb
lahf
push
jbe
sub
dec
iret
lcall
cmpb
sub
add
lea
cmpsl
in
cmp
lea
loop
lock
insb
prefetch
addr16
pop
dec
pop
fistpl
add
js
inc
sahf
dec
ss
sbbl
repnz
mov
push
sub
add
bound
xlat
push
aas
cs
pop
lret
xor
out
leave
mov
sti
mov
lods
jp
adc
dec
sub
or
shrl
inc
jle
or
adc
shlb
lods
loop
adc
mov
js
lods
rcr
ret
add
mov
mov
sahf
inc
or
imul
add
pop
push
jnp
push
into
add
xor
popa
mov
leave
sub
stos
lret
in
or
decb
mov
pusha
insl
dec
mov
or
nop
mov
or
push
ja
or
scas
dec
cld
sti
adc
push
in
inc
mov
int
adc
loop
mov
ss
stos
push
das
jns
fisubs
inc
pop
sbb
jg
and
jp
arpl
jmp
push
dec
mov
adc
repnz
enter
xchg
orb
faddl
popf
jbe
cmc
fsubrs
mov
push
adc
xor
mov
ret
mov
sbb
or
stos
fwait
sub
dec
sub
lcall
ljmp
cwtl
lods
and
or
rcrl
push
add
cmp
fcoms
hlt
push
xor
push
lret
fs
or
or
sub
push
cmp
stos
mov
mov
ds
cld
push
arpl
in
outsb
mov
cmc
add
sahf
xor
sub
pushf
and
pusha
scas
xchg
jo
inc
inc
sub
call
aam
or
xor
into
cmp
pusha
in
add
cmp
jbe
jp
out
add
shll
fcmovnb
xor
jle
insb
inc
mov
mov
testl
shrb
xlat
ja
sub
das
and
movb
jmp
cmpsl
mov
xchg
xchg
mov
jnp
or
testl
imul
mov
sub
out
add
xchg
cmpb
fwait
outsl
sub
fistps
mov
movd
dec
loop
lcall
jns
sti
shr
addr16
lahf
jg
cli
test
or
mov
in
loop
aaa
cld
push
jl
lahf
cmp
in
dec
adc
lahf
cltd
cli
les
cli
faddp
and
fbld
jl
sbb
mov
subl
jle
jb
inc
and
fidivrs
xor
fistl
mov
fsubp
jmp
cmp
paddd
hlt
cmpsl
adc
cld
mov
and
aad
mov
cltd
lods
inc
push
inc
movsl
push
push
clc
mov
dec
mov
scas
shrl
xor
test
add
push
add
or
jmp
pusha
inc
test
mov
es
mov
push
pop
mov
inc
push
loop
xor
mov
xchg
jmp
sub
xor
inc
xchg
sub
sbb
pusha
xlat
shrb
adcl
cmp
divl
lahf
or
adcb
test
je
add
mov
add
xchg
adc
adc
inc
pusha
out
pop
sub
xor
inc
xchg
cmpsl
cs
jmp
fs
push
cmp
pop
punpckldq
mov
xor
dec
push
orb
cmp
loop
das
clc
pop
lds
loop
rcll
lret
xchg
shll
jbe
xor
notb
stos
fdivs
or
cli
pop
test
outsl
repz
scas
jl
call
inc
sbb
mov
jmp
fstpl
push
push
ret
add
sbb
dec
icebp
add
sbb
sti
or
cltd
pop
fnsave
call
popa
aas
inc
xchg
pop
lcall
lret
shrl
loop
mov
adc
sub
push
adc
push
daa
sub
adc
repnz
iret
mov
lea
orl
daa
jp
mov
bound
jne
inc
lahf
push
adc
pop
or
jmp
cltd
mov
lods
or
xorl
roll
push
in
xchg
pop
inc
jmp
mov
lods
cwtl
add
test
in
cmp
mov
or
fucomi
dec
and
jne
out
loop
fnsave
aam
lds
mov
inc
arpl
adc
stos
sbb
jmp
adc
mov
aaa
fldcw
cmp
xor
or
sbb
out
jnp
or
loopne
sub
lret
inc
xchg
mov
inc
leave
push
add
xchg
ds
adc
push
jbe
lret
loopne
mov
es
dec
pop
add
shll
inc
inc
int
clc
cmp
sub
in
repz
inc
sub
sti
dec
mov
lods
pop
imulb
inc
std
pop
xorb
or
cltd
inc
jb
mov
xor
cmp
cmpsl
repnz
repz
movl
sti
cs
fidivl
fimull
repnz
popa
bswap
jmp
mov
and
push
inc
pop
insl
xchg
out
das
sub
aad
mov
subb
adc
fmuls
mov
xchg
test
sub
cwtl
fisttpl
pusha
inc
mov
aas
movlps
je
mov
mov
mov
cld
jp
pop
jnp
cmp
ja
stos
inc
sbb
sar
or
jns
dec
in
fisttpl
nop
push
lods
rclb
testl
sub
test
pusha
lahf
adc
push
outsb
pop
sbb
dec
cwtl
adc
mov
shll
fsubrp
pop
mov
dec
mov
dec
mov
sbb
xor
add
inc
outsl
ljmp
push
test
cltd
sub
dec
dec
push
pop
ficomps
btcl
cmpsb
clc
or
xchg
shrb
mov
test
add
adc
mov
iret
push
dec
outsb
mov
pop
outsl
in
push
dec
dec
sti
data16
cmovs
andb
xchg
or
sub
push
out
lods
inc
ss
gs
lahf
out
xchg
xor
and
xor
inc
pusha
sbb
clc
out
dec
sbb
es
add
add
incl
imul
jns
stos
push
mov
scas
rclb
push
insb
les
sti
pop
cmp
sbb
cmp
pop
and
test
and
mov
sbb
pop
lahf
xor
ss
pop
mov
ljmp
ja
ss
inc
jmp
and
xchg
rcrb
jae
mov
dec
adc
add
mov
mov
pop
jae
mov
scas
xchg
xor
pop
cmp
push
iret
pop
fstpt
mov
dec
popf
sub
out
outsl
cmp
push
jl
scas
cmp
les
cmp
mov
dec
xchg
pop
sub
lahf
and
push
data16
push
lret
mov
and
stos
fimull
jbe
jno
xlat
outsl
xor
mov
mov
push
or
mov
mov
mov
cmp
incl
mov
cltd
cmp
cmp
adc
ret
xchg
pop
dec
pop
mov
cli
adc
les
jmp
mov
dec
test
sbb
mov
in
popw
fmuls
pop
dec
xchg
outsl
or
mov
iret
jbe
data16
push
sub
jae
mov
cmp
pop
lret
cwtl
or
sbb
ds
loopne
sahf
cmp
xchg
sbb
sahf
jg
mov
and
enter
js
xchg
mov
lahf
add
aaa
iret
dec
and
push
cwtl
adc
test
and
pop
mov
lods
std
ljmp
jge
lret
imul
mov
imul
and
or
call
or
jnp
scas
pop
movnti
pop
das
adc
jns
push
call
jmp
dec
fcoms
mov
add
mov
and
popf
xor
out
pop
mov
negl
pop
add
sbb
mov
add
je
jmp
mov
mov
xor
and
xchg
stos
mov
iret
outsl
push
jge
or
mov
rcll
jle
sbb
and
mov
or
inc
nop
xchg
push
or
jno
cmc
pop
pop
dec
or
in
add
movsb
arpl
xor
pop
xor
mov
pop
lcall
push
sbb
lods
outsl
dec
testb
test
lcall
ss
or
sub
xchg
xlat
lods
xor
adc
dec
add
push
lods
jle
add
xchg
daa
cmp
lds
jl
loope
sub
jge
lahf
test
sbb
mov
sbbl
xchg
lret
ret
int3
adc
pop
adc
fsubs
lds
das
sbb
jge
adc
in
lahf
xor
pop
inc
cld
scas
xor
mov
cmp
pop
push
inc
adc
mov
adc
push
sahf
or
shll
fisttpl
jmp
cmp
imul
nop
xor
mov
or
cmp
aas
not
leave
inc
sbb
mov
loope
fldcw
scas
jmp
dec
cmp
stos
imull
xor
or
cmc
mov
or
cmp
jecxz
cmp
mov
nop
mov
mov
add
ss
ja
stos
outsb
mov
jb
inc
ja
jae
int3
jae
mov
gs
sbb
cmc
fwait
add
pop
mov
sbb
clc
fisttpll
xor
push
jnp
cvtps2pi
pop
repnz
scas
sub
mov
dec
xchg
cmp
cld
movsb
fadd
mov
and
das
pop
mov
and
js
inc
fs
mov
xor
ret
sbb
jge
rcrl
inc
cmp
lcall
mov
mov
out
into
push
jns
push
xor
mov
cs
inc
jmp
xor
mov
jmp
lods
ss
rolb
int
out
stc
scas
cltd
inc
mov
dec
push
inc
mov
je
mov
add
sbbl
sub
mov
xchg
mov
jnp
and
add
rclb
mov
into
sbb
xor
in
mov
or
push
aaa
xchg
xchg
shrl
sti
dec
stos
nop
mov
sub
cmpsb
xchg
sbb
inc
rcrl
mov
adc
sarl
dec
inc
push
push
std
lods
xchg
mov
push
and
dec
leave
sbb
cli
std
xor
jmp
jg
inc
push
pop
pop
mov
jle
xchg
rcl
mov
and
or
lret
dec
cld
jp
add
ffree
pop
lods
ficomps
inc
cmp
mov
mov
ud0
rcl
fidivl
out
xchg
iret
loope
and
push
in
dec
repnz
mov
test
pop
cwtl
or
ja
and
jecxz
iret
sbb
lods
xor
mov
out
mov
orb
sti
add
test
stos
sbb
pop
xor
data16
sti
hlt
inc
mov
mov
vmovlps
xchg
mov
adc
loop
inc
pop
jnp
mov
xor
test
enter
push
out
cmp
cmpsl
or
popa
shlb
std
lahf
rdpmc
bound
adc
push
sbb
sbb
in
mov
push
push
pop
cmp
or
and
insl
adc
aaa
popa
mov
scas
sbb
pop
inc
adc
ret
sbb
push
inc
lods
adc
add
fcmovnu
push
cmpsb
inc
mov
lret
enter
inc
jns
mov
repnz
mov
mov
dec
rorb
lcall
adc
loop
lcall
sub
test
adc
mov
jns
push
int3
push
mov
inc
and
pop
imul
cli
mov
cmp
testb
addl
mov
outsl
paddsw
dec
es
pusha
aaa
push
sbb
je
push
pusha
int
xchg
sub
sbb
jle
dec
das
movsl
mov
data16
mov
lahf
jecxz
out
jno
pusha
lods
pop
cli
jle
mov
sub
scas
sbb
sub
adcb
xor
xchg
nop
add
add
xor
cld
adc
mov
imul
mov
ja
scas
sub
jge
xchg
gs
pop
push
rcrl
jb
sbb
adc
xchg
add
cmp
test
dec
fldcw
das
testb
and
pop
push
sub
dec
push
data16
cld
aas
mov
notl
mov
jg
xchg
ret
ret
dec
test
sarb
push
mov
cs
fwait
lahf
int
sub
cmpsl
pop
add
sbbb
inc
sbb
dec
mov
ror
sbb
xchg
out
andb
dec
scas
imul
call
mov
js
shll
lock
sti
mov
or
shr
stc
jnp
sbb
xor
pop
int3
add
add
inc
dec
insb
pusha
xlat
bound
mov
xchg
jl
cmc
into
cmpsl
das
sbb
mov
add
test
mov
imul
dec
sub
mov
inc
lods
std
xor
bound
sbb
sbb
mov
test
mov
pop
mov
nop
clc
out
shr
push
jl
push
int
sahf
adc
pusha
mov
je
ljmp
pusha
sti
dec
outsl
dec
rcr
stos
jmp
mov
adc
xor
nop
adc
gs
xorl
jle
or
lods
lret
pop
lahf
push
outsl
inc
inc
jle
xor
ror
imul
rclb
or
mov
int
dec
sbb
xchg
cmp
xchg
sbb
pop
sub
lret
ret
cmc
insb
xchg
mov
sti
or
pusha
fdivrp
mov
popa
pop
nop
and
stos
adc
sbb
mov
adc
dec
adc
mov
jmp
lods
lods
pop
in
shrb
xor
adc
mov
aam
xchg
pop
jno
out
hlt
xor
xchg
addr16
adc
dec
jno
lods
mov
inc
test
add
mov
in
dec
inc
shrl
jne
xchg
aam
out
or
lret
into
sub
out
pop
pop
js
popl
sbb
mov
xor
and
movsl
xor
addr16
xorb
sbb
mov
and
xor
push
mov
sub
xor
in
jnp
adc
xchg
ss
mov
adc
jae
fmulp
out
push
dec
add
adc
xlat
pop
aam
lret
shlb
fsubs
or
cmpsl
push
fidivs
inc
pop
jp,pn
add
data16
push
cmp
ds
je
mov
cmp
ret
jo
aaa
dec
scas
pop
inc
les
mov
fwait
xor
mov
push
aaa
sub
push
sub
movsl
loop
rcll
mov
mov
in
lods
pop
or
test
fisubrl
movl
bound
push
in
shll
lods
jnp
mov
sub
or
outsb
lods
std
mov
push
sbb
mov
popa
mov
es
divl
cmc
lahf
mov
inc
cs
or
mov
jmp
cmp
cmp
pop
stos
ds
mov
cmp
mov
and
push
daa
fsts
push
sbbb
outsl
clc
ret
sub
cli
pop
mov
cmp
xor
xor
inc
lods
add
adc
or
adc
and
push
xor
cli
mov
mov
out
psllw
cmp
pop
fildl
cs
loop
je
data16
lods
clc
cwtl
out
cmc
mov
mov
lcall
mov
jmp
sub
jecxz
stc
dec
sbb
pusha
loopne
adc
fsubs
scas
mov
sahf
adc
leave
dec
je
push
iret
cmp
and
inc
xchg
sbb
out
bound
sti
call
loopne
mov
sub
pop
lcall
jne
adc
pop
jno
std
ja
push
hlt
mov
cltd
outsl
xor
cmp
xor
outsl
cmp
pop
jg
lret
and
pop
rcr
adc
push
or
lea
aad
and
add
loop
xor
jl
mov
mov
imul
ret
pop
ss
cmp
pop
jne
jb
mov
cltd
dec
mov
dec
mov
jnp
repz
sbb
mov
out
dec
daa
call
insl
jno
cmp
subl
sub
lahf
xchg
inc
cltd
add
mov
xor
das
rclb
jl
add
inc
mov
jmp
xor
pop
xchg
mov
xlat
sarb
push
gs
push
adc
loopne
das
movl
sbb
dec
cmp
mov
mov
adc
movsb
add
and
dec
out
pop
dec
ljmp
xor
mov
test
mov
out
dec
cmpsl
or
pop
pop
ret
in
ljmp
dec
inc
fwait
aaa
icebp
repz
rorb
popf
or
pop
push
imul
in
mov
jmp
test
or
or
mov
std
mov
xor
cld
push
pop
pop
stc
xor
pop
mov
add
fwait
dec
xor
sti
lods
dec
mov
out
cmpsl
bnd
ljmp
out
sbb
mov
xchg
scas
xchg
adc
leave
lods
popl
mov
inc
ror
mov
cmp
fisttpll
sub
xor
sbb
and
mov
lar
cmpsb
jg
mov
shrb
inc
mov
fadd
ljmp
sbb
loopne
lret
pop
out
inc
cmp
enter
push
jle
loope
ljmp
cmp
sub
jns
push
jns
pop
neg
xchg
iret
sub
inc
pop
test
pop
xor
fdivrs
mov
sti
push
popa
sbb
out
sbb
stc
js
ret
or
ja
cmp
sbb
out
int3
imul
jb
and
mov
xor
jl
out
outsb
dec
sbb
push
test
xchg
ret
and
dec
repnz
je
mov
or
pop
inc
push
pop
sti
jl
xlat
lahf
adc
nop
fists
push
push
mov
fiaddl
sqrtps
and
rclb
add
das
xchg
sub
mov
cwtl
mov
orb
jnp
cmpsl
out
call
out
cmpsb
cmp
mov
ds
mov
cmc
pop
loop
fcmovne
out
pop
repz
sub
pop
dec
xlat
jge
dec
and
push
nop
xlat
inc
outsl
ss
mov
nop
add
ss
fcmovnu
std
jb
jp
ret
sbb
scas
mov
ret
dec
dec
scas
pop
inc
mov
push
sub
jmp
mov
sbb
lds
adc
push
mov
shl
dec
sub
pop
inc
cmp
mov
mov
inc
fistpl
ret
push
xchg
mov
js
dec
out
xchg
jns
lock
inc
dec
mov
or
mov
notl
or
cmpsb
fistl
fs
push
dec
or
push
or
aad
push
cmp
cmp
push
xlat
pop
sbb
xlat
dec
or
out
xchg
and
pop
mov
data16
divl
pop
dec
or
pop
notl
repz
push
or
mov
enter
mov
dec
sbb
mov
stos
xchg
sti
fwait
inc
js
jo
outsl
stc
dec
lret
sub
jge
insl
mov
dec
lods
iret
cmp
pop
aaa
sbb
mov
push
and
lahf
push
fdiv
and
in
scas
lret
scas
hlt
inc
or
lds
test
dec
pop
addr16
dec
arpl
push
arpl
mov
sub
pop
mov
sbb
dec
mov
lds
jb
jne
imulb
sbb
sbb
sub
aaa
mov
cmp
call
dec
rcll
jo
and
sub
js
xor
add
push
movsl
push
into
into
cwtl
hlt
fldt
gs
lcall
pop
xchg
adc
sbb
arpl
arpl
sbb
das
push
dec
xchg
mov
inc
inc
mov
scas
ds
adc
popf
fistl
pop
addr16
dec
dec
cmp
iret
pop
dec
jnp
mov
adc
sarb
enter
test
cltd
adc
out
rcrl
test
shrb
mov
mov
mov
inc
rcrb
inc
jns
add
inc
repz
orl
aaa
fisttpll
mov
jp
mov
dec
cmp
push
mov
mov
mov
and
adc
lret
shrb
cmp
shrl
dec
lahf
jp
pop
xor
xchg
sbb
xchg
and
cmpsl
repz
cmpsl
mov
fldenv
mov
jecxz
add
repnz
pop
stos
add
insb
in
jae
dec
sbb
into
cmp
or
out
push
sub
inc
adc
aaa
pop
sti
arpl
lahf
sbb
shll
aad
mov
adc
or
push
mov
iret
mov
and
add
and
push
adc
or
es
fcmovnbe
mov
fdivrp
aaa
push
or
dec
lds
xlat
jp
lods
mov
mov
cs
pop
pop
adc
shlb
cwtl
pop
xchg
mov
aaa
stos
jl
sub
rcll
mov
and
sub
push
inc
and
pop
fiadds
fistpl
pop
leave
pop
jmp
fistpl
xor
cmp
lea
xor
aam
inc
hlt
bound
inc
mov
jns
nop
mov
push
test
push
pop
jl
bound
adc
lret
repnz
jmp
aam
sbb
jl
and
mov
push
pusha
jmp
lret
sub
lahf
jge
sub
fwait
jge
mov
push
js
and
sbb
sub
inc
ds
sub
push
xlat
dec
gs
mov
test
cltd
jmp
outsb
push
add
pop
pop
mov
inc
jae
test
xchg
xlat
mov
pop
je
std
nop
mov
pop
es
out
adc
stos
mov
lret
aas
mov
sub
adc
add
js
clc
js
loopne
sbb
adc
pop
int3
in
or
mov
mov
pop
ret
xchg
xor
xor
mov
js
scas
nop
mov
je
pop
mov
or
inc
fiadds
dec
push
lret
add
push
cs
lret
pop
aad
jbe
push
jns
xchg
ljmp
xor
cmp
scas
int3
sub
inc
mov
dec
cmp
stos
xor
xor
dec
scas
and
jl
push
mov
xor
fiadds
dec
stos
dec
and
mov
decb
shll
and
xchg
aad
bnd
aas
mov
mov
mov
mov
sub
imull
sbb
gs
lds
jo
imull
push
push
loop
jo
sub
pop
push
fisttpl
lods
dec
fs
ss
jae
push
jle
sub
mov
adcb
add
stc
adcl
aad
pop
xchg
lods
jp
pusha
push
jge
into
fisttpl
sbb
jmp
pop
shrd
lds
cmp
imul
shl
dec
cmp
and
iret
stc
jmp
fisubl
std
insb
in
mov
sub
jp
inc
test
repz
mov
inc
pop
and
push
inc
adc
movsl
mov
scas
fisttps
das
adc
test
push
fisttpl
icebp
mov
movsb
shrb
push
pop
mov
movsl
add
sbb
inc
sub
sti
or
sti
cwtl
and
cs
cli
mov
out
iret
or
imul
pop
mov
fcmovnu
hlt
add
scas
test
lds
hlt
ja
mov
fdivs
or
push
sub
cmp
jle
jecxz
add
pop
arpl
mov
cmc
xchg
pop
fwait
nop
push
adc
or
or
stos
or
lea
fldt
xor
sbb
xor
or
fwait
rcr
sti
mov
pop
sub
arpl
fstpt
inc
adc
sbb
inc
mov
or
jae
xchg
mov
fists
ja
mov
test
shll
lods
fisttps
sti
js
popf
mov
xor
in
lds
pusha
push
xlat
add
jp
lods
mov
sarb
sarl
mov
lcall
bound
cs
repnz
aam
xor
xor
mov
sbb
insl
lret
enter
adc
popf
test
mov
fcoms
xchg
jo
je
cmp
movl
push
sbb
in
adc
sub
xor
xchg
push
fdivl
dec
fidivl
mov
xchg
imul
cmpsl
mov
fdivs
jo
push
cmp
inc
insl
cltd
ds
inc
movsl
dec
rcll
flds
call
mov
les
inc
imul
cwtl
cmp
pop
daa
sub
jns
jmp
inc
pop
and
jle
sbb
mov
mov
pop
add
pop
cwtl
jns
xchg
pop
and
adcb
lcall
jnp
fiadds
sub
push
xor
daa
sbb
loop
cmp
arpl
adc
shrb
pop
jae
aaa
xchg
jmp
inc
sti
mov
ret
jno
lahf
push
mov
add
fs
pop
dec
pop
and
pop
sbb
icebp
inc
add
or
mov
lahf
fbld
ret
sbbl
and
movsb
cs
or
jmp
ss
mov
shlb
movsb
sub
pop
lret
pop
sti
maskmovq
cmp
stos
inc
leave
xchg
push
iret
imull
mov
pop
cmp
lahf
or
mov
mov
cmp
or
roll
xchg
sti
push
mov
aaa
push
inc
rcrb
in
insb
bound
xchg
mov
push
outsb
cmp
js
pop
xchg
adc
mov
push
add
fidivs
xchg
jge
sub
call
mov
pop
mov
jge
adc
xchg
mov
insb
add
cmp
adc
sti
mov
adc
cmpl
sbb
adc
sahf
dec
push
mov
inc
sub
loopne
sub
aaa
pop
out
ja
push
lcall
aas
dec
stc
mov
sub
xor
ss
fwait
mov
mov
sub
xor
bound
idivl
adc
imul
dec
out
lret
aad
movsb
jge
jns
mov
pop
jle
mov
cmp
stc
or
gs
repz
and
lret
and
lds
cld
stos
push
dec
ljmp
sbb
scas
sbb
aad
fimuls
xor
cli
xor
lods
loope
inc
mov
fs
or
or
jp
data16
cmp
sbb
scas
pop
aaa
or
stos
push
pop
jp
ja
ljmp
shrb
mov
lcall
mov
dec
das
ret
dec
cwtl
movsb
add
stos
test
sti
sbb
dec
movsl
jbe,pn
jmp
into
push
aam
fs
cmp
jle
inc
mov
scas
xchg
aam
pop
and
ja
cmp
and
sub
lcall
arpl
aad
lahf
outsl
test
push
fidivl
jmp
in
fdivrs
sarb
and
sub
enter
pop
adc
xor
out
push
cld
jg
inc
jno
adc
push
and
cs
pop
in
in
mov
dec
and
fwait
xchg
orb
jnp
mov
ficomps
ja
sbb
fisttpl
xor
adc
pop
sbb
xchg
js
or
lret
xchg
sub
lret
push
mov
ss
notl
inc
movsl
mov
push
sti
pop
lods
loop
pop
dec
dec
outsl
cmp
fnsave
pop
cld
mov
mov
lods
mov
ret
mov
sbb
in
and
enter
aad
lahf
test
pop
mov
popa
or
and
jns
add
adc
lret
dec
pop
add
fs
loope
rorl
push
jne
jo
mov
fadds
add
jne
sub
loopne
inc
or
repz
or
cmpl
xchg
pop
add
cld
mov
shlb
xchg
fisttpl
mov
push
cmp
xchg
popa
mov
pop
ss
fcomi
push
mov
push
adc
xlat
pop
daa
popf
push
pop
stos
jae
lcall
loop
mov
out
ret
push
xchg
inc
jo
cltd
mov
movsb
ret
push
add
push
dec
add
mov
adc
inc
pop
or
or
adc
mov
mov
push
not
push
scas
dec
mov
cmpsl
out
icebp
mov
and
cmp
rcr
in
pop
mov
pop
bound
stos
mov
xchg
bound
pop
xlat
ret
or
push
loope
aam
dec
sahf
js
add
mov
das
mul
loope
repnz
xor
pop
push
addr16
jno
pop
xchg
mov
and
pop
ja
fwait
mov
adc
out
loop
lcall
mov
xlat
lret
out
or
lods
nop
push
clc
dec
insl
imul
idivb
sub
lds
fistpl
cwtl
mov
out
adc
fcomps
sbb
adc
xor
int
mov
or
sub
aas
fisubs
arpl
lea
sub
sub
sub
aam
les
es
and
and
dec
cmp
push
bound
or
xchg
into
xchg
mov
inc
and
sub
dec
jns
shll
sti
inc
or
dec
adc
inc
xchg
popa
mov
xor
rcrl
mov
inc
push
inc
and
pop
ss
mov
cmpsb
jo
add
mov
aas
aaa
ds
lds
clc
dec
aam
mov
arpl
pop
and
in
bound
cmp
xchg
pop
int
lcall
adc
push
push
pop
xchg
jge
sti
dec
sbb
mov
sbb
jge
cli
fcomp
mov
pop
mov
inc
xchg
inc
test
pop
pause
cmc
out
testl
idivb
leave
scas
dec
jmp
enter
repz
or
pop
adc
mov
cmp
mov
xchg
jecxz
mov
or
adc
cmp
sbbb
lds
int
push
inc
add
push
cmp
push
inc
push
jo
lods
stos
sbb
orb
ficoms
sbb
pop
pop
loop
push
xor
sub
pop
dec
push
sbb
ficoms
aaa
add
dec
arpl
loope
cmp
inc
inc
idivl
mov
and
sti
stos
jne
fstp
dec
hlt
test
popa
cmp
jle
cmpl
mov
out
dec
sub
add
mov
xchg
xchg
adc
cli
push
jp
adc
inc
stos
and
lcall
sub
jb
inc
xlat
cmp
dec
iret
out
movsl
pop
inc
sbb
lods
sub
dec
pop
sub
cmp
nop
pop
push
movsl
xor
movsb
lods
loop
cmp
dec
fwait
scas
and
inc
mov
jo
imul
mov
fildl
mov
or
sbb
mov
das
repz
push
push
and
ficompl
out
inc
lods
js
or
mov
mov
loope
leave
jge
sbb
xor
mov
inc
add
sahf
jne
inc
lods
cmp
xchg
imul
out
jno
push
cmp
or
movsl
xor
xlat
pop
mov
leave
repnz
jnp
cmp
cmp
pop
or
xchg
mov
xor
xchg
mov
pop
mov
in
add
pop
shl
lret
cmpsl
jge
movb
mov
dec
or
and
adc
ret
mov
or
lock
cmp
or
adc
sbb
fldt
push
ret
cmc
xor
mov
sti
and
notl
mov
pop
cmp
mov
hlt
shlb
cli
adc
xchg
rolb
fwait
pop
cli
jns
fisubs
sbb
pop
je
dec
mov
xor
add
mov
outsb
or
adc
leave
cmpsb
pop
pop
push
mov
mov
lret
ja
cs
leave
or
popf
lds
xchg
std
sub
mov
stc
jns
scas
inc
test
push
hlt
xchg
ret
sub
or
cmp
push
and
movsb
gs
outsl
call
ficompl
xchg
pop
in
lds
repnz
and
js
and
push
js
inc
scas
cmp
push
mov
out
sbb
mov
sub
cs
jg
lods
cmc
bound
jg
xchg
push
push
iret
sub
clc
dec
les
in
inc
jae
mov
ja
push
out
pop
mov
call
or
sub
jns
push
inc
fistpl
mov
sbb
pop
sbb
cli
or
sbb
inc
std
test
cmpsb
mov
ss
faddl
ja
push
jae
push
pop
mov
insl
sub
jns
sbb
add
push
sbb
fstpt
mov
sti
xlat
push
xchg
loop
mov
fisubrs
pop
pop
out
jp
dec
jnp
xchg
inc
and
sbb
mov
mov
das
dec
pop
shll
cs
inc
or
push
jns
xorb
adc
jge
mov
leave
pop
arpl
rcll
xor
mov
lahf
mov
scas
adc
push
pop
ja
adc
in
sbb
jb
sub
pop
adc
mov
inc
mov
cld
sbbl
jmp
push
pop
inc
cmp
pop
cmp
in
mov
pop
inc
mov
adc
sbb
cmp
jns
imul
lret
mov
mov
js
jge
xchg
sar
fistl
lods
or
xlat
pop
pop
imul
bound
push
xchg
push
xchg
in
cmp
aad
jae
pop
shl
test
filds
popa
inc
mov
pop
add
int
xchg
add
jns
sub
dec
fnstenv
inc
gs
dec
dec
in
adcb
call
or
fstps
xchg
or
mov
inc
stos
xor
jl
movsl
push
and
incl
mov
push
add
out
js
dec
fcmovnbe
adc
dec
cld
xor
xor
adc
shr
push
jl
movsl
mov
incl
ss
jno
jg
sbb
pusha
in
cmc
dec
or
les
scas
imul
sub
sbb
lock
add
dec
xor
mov
sbb
sub
mov
in
xchg
ret
pop
push
fdivr
lea
cltd
mov
jl
pop
mov
loopne
sub
out
ret
xor
sbb
mov
dec
lcall
jp
test
lods
dec
adc
mov
push
xchg
mov
mov
fisttpl
and
lret
out
lods
loop
push
mov
sahf
mov
xor
sub
sbb
and
iret
test
outsb
faddl
jbe
adc
dec
adc
mulb
adcb
xor
std
stc
ljmp
hlt
sbb
addr16
dec
aas
add
mov
mov
dec
stc
cmp
cli
push
xchg
cmp
dec
inc
adc
sbb
mov
xor
int
ss
inc
cmp
sbb
cmp
cmp
jle
test
loop
es
aad
cli
pop
inc
dec
add
mov
test
dec
sub
cmp
xchg
xor
add
dec
std
inc
inc
aaa
xchg
dec
mov
mov
call
scas
add
gs
sbb
mov
in
popl
adc
je
cmp
or
jns
and
sbb
pop
xchg
pushf
add
cltd
insl
push
mov
ret
push
cmp
adc
xlat
dec
adc
pop
ss
jno
in
rclb
adc
test
adc
pop
cltd
cmc
or
test
inc
pop
ret
es
inc
jno
jecxz
ficoms
in
js
jl
cltd
ja
cltd
mov
push
xchg
jg
jmp
jno
push
inc
ss
cmp
ja
fimuls
loop
pop
xor
push
sbb
and
cmp
pop
cmp
and
sbbb
gs
scas
clc
dec
testb
mov
xchg
jmp
cwtl
sbb
inc
sbb
adc
xor
dec
push
xorps
es
mov
jmp
jbe
or
decl
iret
sub
or
pop
dec
neg
inc
insb
add
pop
dec
subb
or
loope
mov
popa
arpl
popa
pop
imul
mov
adc
ja
fbld
callw
pushf
lcall
pusha
inc
sti
jl
adc
and
enter
mov
mov
sub
ret
fldt
push
pop
fsubrs
jno
jle
pop
out
pop
sub
and
loopne
mov
or
stos
lret
adc
fwait
sbb
mov
adc
or
jnp
fstp
and
add
inc
test
dec
dec
sub
push
cmp
mov
fstl
enter
fsubrl
lret
sbb
dec
xlat
jmp
push
into
mov
jae
and
sbb
into
fdivs
sub
jl
cs
jp
pop
hlt
movsb
jbe
lret
rol
jmp
and
dec
inc
mov
outsl
aam
and
jbe
mov
mov
push
in
lret
lret
dec
cli
mov
inc
lods
cmp
xor
cmp
lods
xlat
cmp
sbb
cmp
ds
push
pop
jmp
xchg
in
inc
ss
jl
mov
jbe
sbb
jl
sbb
mov
ja
xchg
push
sarl
out
jmp
loopne
sbb
in
adc
mov
das
cmpsb
test
das
rolb
es
aaa
sub
std
xor
fwait
nop
mov
sub
shll
xchg
fwait
imul
std
bound
or
cltd
jns
dec
pop
mov
repnz
sub
add
jge
mov
negl
mov
mov
mov
push
mov
cmp
dec
and
movsl
into
xor
and
jo
adc
inc
out
push
cwtl
sahf
pop
inc
rcrl
das
xchg
mov
sahf
outsl
jecxz
xor
lret
lret
add
into
rclb
and
imull
cmp
cli
test
xchg
cmpsb
sbbb
enter
jp
pop
cld
mov
rorl
lcall
mov
xor
sub
sbb
insb
test
rcl
xor
mov
loop
add
popf
xchg
in
mov
decb
inc
in
adcb
outsl
sbb
sub
add
inc
scas
and
mov
sbb
dec
das
subb
push
inc
outsl
cmc
arpl
sbb
fcoml
mov
fisttpll
movsb
mov
mov
jge
inc
arpl
jae
ja
cld
fwait
push
pop
add
aam
mov
or
outsb
mov
adc
mov
mov
dec
jne
lret
mov
fisttps
ds
cmpsl
mov
and
mov
jno
idivl
jae
repz
int3
rol
cld
push
pop
js
inc
add
sub
das
loopne
call
dec
mov
inc
push
sub
xor
out
xchg
out
adc
inc
or
sbb
imul
xchg
aad
out
enter
or
push
rcrl
out
arpl
ret
or
cmpsl
mov
pop
adc
push
test
lret
das
int3
dec
sbb
ja
add
mov
push
out
insb
push
sti
xchg
je
mov
and
lahf
sub
je
stos
addl
cs
pop
pop
add
xor
pop
stos
lds
or
push
xchg
test
jno
lds
pop
stos
mov
in
cmp
scas
pop
iret
cmp
pop
sbb
sub
or
imul
cmp
mov
cld
mov
hlt
push
mov
js
mov
sub
sbb
mov
pop
mov
add
imul
jg
gs
push
lret
mov
or
popa
insl
stos
pop
or
push
mov
mov
out
sbb
outsb
pop
rorb
outsl
int
data16
stos
fisttpl
push
ljmp
adc
cwtl
scas
push
or
mov
dec
xor
into
iret
mov
or
das
or
idivl
iret
add
cmpsb
subb
xor
mov
or
cwtl
or
repz
lahf
xchg
fnsave
loope
cmp
cmp
dec
lods
iret
or
dec
inc
jg
or
fistl
add
mov
jb
and
insb
leave
pop
sbb
adc
mov
jl
add
lret
mov
push
je
and
and
pop
dec
jns
rcl
inc
test
mov
cmp
shlb
cmp
push
jp
jnp
push
inc
or
jmp
dec
movsl
mov
jp
testb
bound
or
xlat
push
enter
jmp
or
xchg
ret
mov
rorb
ja
das
mov
dec
cmp
movsl
outsb
jmp
xchg
jmp
xor
adc
push
repnz
push
imul
mov
cwtl
push
sbb
aad
out
call
ret
fisttpl
nop
jg
sub
mov
sti
dec
aas
sub
ret
adc
jecxz
stos
sub
je
adc
lahf
stos
dec
rorb
cmp
nop
sbb
test
in
push
int3
jb
mov
out
push
mov
push
dec
sarl
xchg
jp
mov
xor
or
sub
dec
jle
jmp
cmp
mov
push
pusha
fimuls
sti
jns
sbb
and
pop
js
sbb
and
cmp
push
pop
or
into
push
out
push
jo
push
inc
sbb
mov
inc
sub
mov
push
mov
ds
xchg
repz
repnz
cmpsl
mov
xor
cmp
jp
mov
xchg
jns
popl
mov
inc
and
bound
mov
sbb
push
insb
dec
dec
add
cmc
push
out
and
add
inc
push
inc
and
push
adc
mov
jle
sub
cmp
ss
out
or
into
xlat
mov
pusha
loop
cmp
ja
pushf
call
fdivrp
pop
lahf
dec
jecxz
cmp
sub
sbb
lret
vpmacssdql
orl
lret
ss
push
push
sbb
dec
les
mov
stos
es
lcall
push
or
xchg
mov
jns
repnz
shll
std
divb
incb
pop
cmp
pop
dec
mov
jecxz
popl
dec
dec
and
loope
loop
inc
mov
xor
outsb
push
jae
add
popa
ret
jge
cmp
adc
stos
adc
stc
mov
jo
outsl
jb
bound
mov
jnp
das
sbb
cltd
cmpsb
ja
add
daa
aaa
mov
dec
jle
outsl
cmp
xchg
fldt
xchg
cmp
cmp
data16
add
dec
push
mov
mov
mov
sbbl
mov
fistl
or
cmp
mov
xchg
js
mov
out
into
cmp
and
stos
mov
add
xor
jnp
sbb
fistpl
bound
mov
ffreep
mov
and
push
lods
or
movsl
rcll
enter
mov
fmull
vandps
jmp
adc
ljmp
dec
mov
push
sti
sarb
scas
jo
xor
test
ljmp
inc
xchg
inc
js
xchg
daa
fwait
jle
sub
pop
jle
scas
out
jbe
rcrb
aam
imul
push
out
outsl
clc
jle
scas
xchg
movsb
or
lds
addr16
pop
dec
dec
jl
xor
push
mov
dec
mov
mov
sub
jb
repz
pop
jp
xlat
sub
cmc
adc
pop
mov
mov
xlat
push
leave
aad
mov
dec
push
test
bound
outsl
mov
ret
inc
xor
cmp
repz
or
andl
jnp
pop
xor
mov
fldl2e
push
push
xor
stos
out
dec
mov
ds
loop
pop
jno
shrb
cmpb
sti
and
ja
mov
lods
sbbb
add
loop
inc
xchg
outsl
add
xchg
negl
lods
mov
pop
jg
jle
out
mov
stos
cld
jae
out
xchg
mov
adc
sub
ss
out
push
out
xchg
dec
pop
dec
imul
xor
es
and
dec
cmp
xchg
xor
dec
andb
or
mov
repz
mov
sub
loop
mov
dec
push
dec
cmp
repz
aaa
xor
xlat
ret
xlat
sti
js
xchg
fcoml
dec
push
pop
xor
sub
or
mov
lods
fcomi
decb
lods
lcall
mov
js
hlt
data16
inc
xor
enter
mov
mov
das
sbb
sub
add
fstl
xchg
pop
push
es
pusha
mov
cli
dec
or
mov
adcl
scas
test
inc
mov
jge
xor
stos
dec
adc
inc
dec
cltd
mov
cmp
xor
inc
dec
jecxz
addr16
push
fstpl
xlat
movsl
xor
or
iret
test
xchg
ret
scas
loope
shrl
sub
sub
mov
pop
rcrb
dec
notb
lret
insl
mov
xor
into
mov
mov
shrb
shrl
test
stos
xor
ss
or
pop
fistpll
fld1
xor
sub
jge
mov
xor
add
decb
adc
push
daa
jbe
dec
mov
cmpsb
or
imul
adc
addr16
rol
mov
out
jp
inc
cmp
mov
js,pn
mov
int
pusha
adc
call
or
add
repz
movsl
inc
out
hlt
push
cmpsb
mov
ficoml
cs
insb
cmpsl
inc
jmp
lods
add
inc
cld
jle
cmpsl
jle
jp
lock
push
adc
adc
sub
mov
sub
sub
mov
cltd
and
ret
pusha
fisttpl
ret
loop
push
mov
insb
and
sbb
cld
add
mov
out
cmp
stos
or
mov
testb
decb
xchg
xor
mov
enter
jle
outsl
nopl
repnz
mov
push
ret
jl
push
sub
dec
cmp
add
sbb
mov
sub
xchg
cltd
loopne
clc
cmpsb
nop
fildl
mov
dec
mov
mulb
dec
inc
push
jle
cmp
out
subb
cli
div
jecxz
push
pop
or
add
jl
mov
lret
repnz
sti
and
mov
aad
ljmp
fdivl
fisttps
fstpt
lods
sub
mov
repnz
jmp
shrl
jo
or
cmp
jecxz
ds
sbb
push
cli
into
jmp
lcall
jae
sbb
sub
mov
pusha
pop
shll
rorb
bound
scas
sub
icebp
jmp
out
scas
or
jg
roll
aad
xchg
xor
repnz
and
out
push
je
adc
mov
test
es
popf
fisubrs
pusha
xor
dec
push
mov
loopne
push
xor
lock
and
popf
push
loope
add
js
lahf
leave
xchg
cmpsb
rorl
cltd
fistpl
jg
fsubs
fisttpll
push
push
dec
push
pop
ljmp
lods
dec
ss
adc
fwait
cmpsl
dec
xor
js
adc
push
sub
in
lahf
sti
fsubp
jl
outsl
roll
lret
mov
dec
rcrb
sbb
mov
xchg
inc
xchg
adc
fisubrl
mov
scas
push
or
fisttpl
dec
adc
outsl
and
ljmp
push
sub
cmp
add
or
lret
lcall
shlb
ja
sub
jmp
es
xor
xor
xchg
jmp
aaa
je
jle
bound
add
lods
adc
sbb
xor
pusha
gs
jle
push
sub
mov
and
in
mov
out
inc
cld
sub
push
leave
cmp
sub
ror
push
inc
fcmovu
gs
into
add
sub
xchg
aam
fsts
in
gs
add
dec
ficoms
int3
dec
cmpsl
xor
add
xchg
mov
jns
pushf
cmp
insb
or
xchg
adcb
movl
pop
sti
sbb
sub
repz
xchg
lock
push
lods
mov
inc
test
scas
add
ja
add
outsl
test
sbb
mov
or
js
test
xor
push
add
mov
adc
movsb
xchg
cmp
jl
sarl
push
sbbb
sti
pop
inc
mov
push
into
xor
mov
lods
xor
insb
dec
arpl
jge
jb
decl
mov
dec
xchg
mov
cwtl
shlb
or
adc
sbb
dec
jle
dec
xchg
fwait
add
jp
xrelease
push
and
push
sarb
setle
mov
pushf
or
and
cmp
adcl
push
scas
adc
mov
aam
pop
daa
cmp
in
xor
outsb
out
mov
outsl
in
and
xchg
cmp
xor
lods
adc
pop
test
sbb
xor
push
mov
push
vshufps
jge
out
lret
pop
in
movsb
fadds
mov
mov
sti
push
or
xchg
pusha
pop
mov
or
cmpsl
and
cmp
sbb
xor
popf
popa
cld
adc
dec
jae
pop
mov
sahf
adc
int3
lahf
outsl
pusha
jo
push
push
dec
sub
ficompl
cs
dec
xchg
adc
mov
dec
les
std
dec
jecxz
out
xchg
push
mov
dec
dec
imul
push
lahf
test
and
popa
fldenv
mov
xlat
add
xchg
dec
sbb
cmpsl
push
mov
dec
mov
pop
mov
ss
leave
or
cmpl
cmpsl
add
loope
mov
push
fcmovu
pop
lds
mov
dec
in
mov
sbb
mov
iret
sub
mov
out
sub
add
xchg
es
aad
call
aad
adc
add
aaa
inc
push
sbb
and
rorl
push
xor
dec
mov
push
aaa
xor
out
icebp
lock
xchg
loope
lds
or
leave
mov
icebp
repz
out
addr16
push
mov
idivl
mulb
mov
pop
std
ja
mov
std
cmp
loopne
pop
sbb
or
xor
sbbl
pop
lahf
jmp
add
leave
cmpsl
dec
sbb
add
push
inc
in
addr16
jbe
fsubrp
mov
or
or
lods
scas
int
sub
dec
in
scas
data16
aad
sbb
sbb
mov
push
ljmp
jnp
outsb
leave
ret
cmpsl
mov
dec
adc
scas
test
das
dec
cmc
add
in
pop
dec
pusha
jnp
mov
test
sbb
xchg
aas
push
imul
push
jp
aam
cwtl
repnz
fisubl
pop
inc
dec
mov
cmp
or
pop
lret
mov
testl
mov
dec
clc
pop
aad
adcl
dec
call
arpl
or
lds
sub
dec
or
xor
dec
sahf
pop
jno
mov
pusha
jmp
shlb
push
inc
cmp
aas
lods
push
jno
push
dec
mov
cmp
mov
and
cmp
out
xor
cmp
lods
es
scas
outsl
push
pop
fs
popf
dec
aaa
mov
into
lea
clc
into
mov
cmp
aad
mov
shrl
mov
fsts
mov
scas
mov
adc
and
jns
and
dec
push
xchg
orl
xor
add
or
fdivr
mov
inc
mov
push
movb
dec
lret
mov
mov
fs
loop
xor
mov
or
cmp
add
fisubs
mov
addl
push
dec
psubq
imul
pop
mov
mov
xchg
sbb
jmp
cmpsb
out
in
dec
jns
es
rcll
in
lcall
and
lret
jl
xor
mov
sub
add
jp
inc
fidivrl
mov
in
popf
sbb
inc
int3
sub
sub
sti
in
add
sbb
bound
das
dec
mov
mov
pop
push
stc
clc
mov
and
sbb
dec
pop
cmp
and
fnstsw
xor
mov
cmpb
sti
sbb
mov
dec
cmp
jg
or
loope
adc
jp
push
std
cli
sbb
sub
mov
aaa
fs
jl
mov
or
mov
push
int3
jp
mov
cmp
pop
repz
bound
ss
outsl
add
outsb
icebp
dec
adc
popa
stc
fwait
test
call
jp
pop
push
rol
sbb
lcall
xor
jmp
loopne
sarb
dec
cmc
xlat
jle
addr16
inc
mov
jne
lock
out
in
pop
fsubs
lock
shlb
push
mov
inc
adc
mov
loopne
fidivs
adc
mov
sbb
sti
leave
dec
cwtl
mov
imul
mov
pop
xor
je
dec
sub
std
lods
fnstcw
sub
aas
push
inc
cmp
sbb
cmp
js
into
adc
mov
lret
test
lret
adc
mov
popf
cmp
adc
xchg
cmp
mov
daa
sbb
ljmp
cmc
and
jae
aaa
jmp
andl
sbb
xchg
cld
mov
pusha
sbb
sbb
adc
sub
mov
jp
fisubl
into
dec
or
cmp
int
mov
mov
cmp
xor
aas
cld
mov
sarb
shrb
cmp
enter
push
mov
ret
or
enter
mov
push
in
xor
lods
jmp
adc
xchg
sbb
adc
das
pop
xchg
bound
push
fcoms
push
or
fcmovne
or
add
scas
jge,pn
mov
cltd
pmulhw
mov
push
push
pop
dec
cmp
sub
cwtl
faddl
mov
add
addr16
mov
pop
mov
clc
fisttpl
mov
mov
xchg
insb
mov
sbb
push
ret
sti
lea
jp
pusha
ror
fld
pusha
and
adc
insb
js
push
aaa
bound
xor
mov
ficomps
push
cmp
push
adc
ss
jb
pop
jge
aaa
inc
aad
dec
sbb
insl
or
mov
inc
sbb
dec
ds
mov
xor
lods
cmp
fnstsw
dec
loop
xchg
jno
pusha
adc
mov
mov
les
xor
fisubrs
push
mov
pop
lret
cmpb
fs
stc
cs
jmp
push
xchg
xchg
ret
rol
cmpsl
pop
xchg
std
loop
les
sbbb
dec
sub
aaa
mov
xor
and
add
or
push
inc
sti
data16
mov
and
push
mov
jle
lock
stc
fildll
outsl
inc
xor
sbb
in
outsb
out
jae
ljmp
outsl
adc
and
pop
xor
push
jne
adc
into
sbb
lock
inc
stos
arpl
mov
pop
cmpsb
nop
and
mov
int
pop
aaa
jo
dec
hlt
insb
xchg
pop
jne
orb
outsb
cmp
cmp
add
inc
or
gs
mov
testb
xlat
nop
cltd
xor
sub
lods
jo
sarb
js
out
out
adc
repnz
call
push
mov
jg
icebp
sahf
lahf
cmp
mov
enter
iret
dec
xchg
cmp
xlat
jnp
jp
mul
xor
jle
les
lds
or
adc
jbe
ljmp
pushf
cmp
mov
arpl
loopne
test
je
mov
icebp
loop
mov
push
jns
lods
adc
ret
ljmp
xchg
mov
xchg
in
out
inc
ret
les
mov
or
add
lods
clc
push
ljmp
rorl
jge
push
cmp
cld
aaa
scas
and
xor
scas
adc
xchg
xchg
cli
xchg
sub
lret
mov
cmp
hlt
adc
inc
shll
test
lods
xlat
push
cwtl
test
inc
shl
addl
out
xchg
adc
xor
xchg
inc
clc
xchg
push
cmp
push
mov
aas
push
or
nop
enter
and
or
dec
test
jg
inc
in
xor
xchg
fdivs
mov
lret
dec
mov
divb
orl
or
loop
pop
cmpsl
shll
pop
popf
xchg
adcb
sarb
sarb
fildl
rorl
jg
bound
xor
xor
std
xlat
inc
inc
cmp
shll
add
mov
push
and
mov
mov
fstpl
cmp
mov
mov
xchg
repnz
shll
cli
sub
cmp
inc
aad
adc
dec
insl
test
adcb
xor
subb
test
cmpsl
push
ret
sbb
jne
or
push
push
push
mov
mov
or
push
addr16
lret
mov
sbb
dec
add
xor
jo
bound
mov
sbb
add
jae
sub
sti
lahf
leave
mov
xchg
or
movsl
or
sub
dec
xchg
mov
in
or
cmp
and
enter
das
idivl
stos
mov
je
insb
xchg
insb
ret
pop
cmpl
adc
aas
fwait
mov
mov
imul
xchg
sub
dec
push
sub
mov
cmp
mov
xchg
dec
push
xlat
jns
push
mov
pop
stos
loop
xor
arpl
std
lret
out
inc
sbb
out
mov
or
jp
lcall
xor
outsb
dec
jg
mov
cmp
or
add
addb
add
xorl
pop
gs
stos
pop
bound
mov
fwait
data16
stos
cmp
pop
insl
push
repz
inc
out
sti
inc
mov
push
negl
shlb
ret
sti
dec
adcb
mov
jle
jl
cmp
adcb
dec
xchg
inc
lods
pushf
sub
jb
mov
stos
dec
dec
pop
clc
iret
mov
push
stos
add
add
inc
fistps
inc
mov
in
ucomiss
or
mov
outsb
cmpl
in
push
mov
cmp
cmpsb
add
lahf
push
dec
jno
sub
mov
jnp
mov
push
and
xchg
mov
inc
cmp
mov
push
sub
fucomip
dec
rorl
xlat
push
sbb
push
imul
and
lods
inc
mov
dec
lret
xor
sbb
loop
sbb
ss
pusha
xor
sbb
sbb
xchg
cli
xchg
mov
fists
repz
mov
jnp
mov
pop
jmp
inc
inc
pop
pop
shll
das
test
enterw
xchg
dec
fcmovnu
fcomps
mov
lret
jmp
add
adc
xchg
clc
or
dec
gs
mov
addr16
dec
shufps
jg
std
nop
in
pop
lods
pop
call
adc
mov
mov
xchg
loop
rorb
jle
mov
call
lods
inc
ret
cmp
ds
cmp
stos
mov
shr
cmp
std
in
test
inc
xchg
lcall
test
sbb
lret
testl
data16
pop
loope
sub
enter
adc
xor
iret
add
fistpl
sbb
mov
cld
mov
push
mov
mov
fcoml
out
jnp
xlat
sbb
ror
rcr
xchg
jnp
add
out
jge
inc
or
ss
lods
dec
ljmp
inc
lock
jl
pop
mov
hlt
xchg
sbb
inc
cli
fimuls
cmp
insl
sbb
mov
mov
push
fwait
jnp
lret
fwait
lcall
xlat
pushf
xchg
andl
jmp
repnz
and
mov
pop
loop
pusha
idiv
cmp
lahf
jmp
cmp
mov
ret
mov
stos
or
cwtl
out
sarb
leave
inc
mov
sbb
push
inc
and
stc
aad
inc
dec
pop
or
lret
sub
xchg
mov
lods
rol
push
pop
jne
dec
out
xor
movsl
shlb
pusha
xlat
and
rolb
inc
aas
cmp
jns
mov
insl
mov
mov
sbb
lahf
jns
nop
sbb
loop
sbb
addb
jbe
shll
mov
pop
push
cmp
inc
test
cmp
dec
pop
imul
or
fcmovbe
dec
pop
ss
cmp
mov
into
add
pop
popa
mov
out
loope
xlat
push
or
pop
xchg
push
or
outsl
outsl
push
mov
outsb
es
xor
loop
dec
dec
fistpll
je
xchg
jmp
adc
lret
shrl
mov
sub
sti
cwtl
aaa
push
mov
xor
mov
jns
lods
fstl
dec
aaa
int
mov
inc
adc
xor
mov
mov
xchg
ds
fstpt
jmp
xlat
cmp
jns
mov
stc
addb
pop
sub
dec
test
cmp
push
pusha
adc
out
mov
sub
xor
mov
push
cmp
imul
or
pop
adc
dec
push
pop
lods
fnstenv
neg
and
daa
xor
jnp
sub
mov
push
popa
dec
setg
imulb
sbb
mov
sti
push
inc
mov
nop
adc
dec
enter
stos
xor
fdivr
orb
dec
call
xchg
adc
jnp
movsb
mov
mov
mov
sbb
call
cmp
fildl
pop
lret
mov
sbb
sub
sbb
dec
pop
cmp
jae
adc
mov
or
jg
sti
adc
repz
pop
xchg
mov
out
aaa
lods
mov
push
xor
push
sarl
add
inc
sbb
mov
mov
add
adc
lahf
cmp
and
lcall
nop
mov
js
sub
cltd
jg
leave
or
sar
nop
aaa
jmp
sbbb
loop
popf
cltd
sbb
or
or
lret
inc
lods
and
repz
dec
jmp
sbb
jnp
decl
add
out
shrl
sbb
inc
testb
sub
jl
jnp
jl
stos
leave
push
clc
ja
cmp
or
and
push
fists
jbe
pop
lcall
pop
mov
cmpsl
and
or
add
pop
adc
inc
jo
inc
adc
shrl
and
lahf
pop
sbb
jge
lock
adc
lods
inc
fsts
je
repz
adc
mov
add
inc
cmpsl
or
jo
shlb
jns
and
xlat
dec
mov
xor
push
call
pavgb
neg
popa
add
gs
cs
aam
test
mov
push
in
hlt
repnz
adc
adc
cs
ja
lds
pop
mov
push
lods
rcr
jae
fucomip
hlt
push
imul
aaa
mov
cmc
out
cmp
movsb
xor
push
xor
jbe
xor
add
push
clc
into
pusha
fimuls
lret
pop
cmp
mov
mov
insl
mov
loop
add
mov
push
xor
mov
inc
lret
xor
add
push
in
adc
lea
mov
aaa
cmpsw
adc
mov
mov
lret
roll
xchg
cmp
test
mov
pop
or
or
js
inc
and
fistpl
inc
and
jmp
inc
sahf
sbb
imul
imul
mov
lret
adc
bound
outsl
fs
push
cmpb
fildl
outsl
pushf
fwait
out
mov
pop
cmp
aas
clc
or
push
push
cmp
std
or
fstpt
xchg
std
inc
push
fcoms
mov
cwtl
stos
pop
pop
adc
std
sbb
clc
bswap
or
cmp
mov
dec
fs
and
das
sahf
out
loop
xchg
fwait
imul
push
loop
fmul
je
pop
mov
je
loop
inc
sbb
loopne
fisttps
dec
push
aam
outsl
jne
or
ss
in
sub
outsl
bound
push
es
aas
popa
pop
pop
shll
adc
mov
shlb
jmp
testb
mov
add
cmp
out
out
pop
iret
outsl
outsl
loop
data16
jl
stc
sbb
lret
stc
sub
les
mov
clc
pusha
jno
sub
std
arpl
cmp
pop
mov
jp
lret
fidivs
adc
xchg
vmulps
xchg
mov
inc
cmpsl
and
ljmp
scas
push
dec
mov
cmpsb
stc
insl
pushw
cmp
cmpsl
cltd
cli
mov
in
cmpsl
lcall
mov
adc
shrl
mov
loopne
mov
sub
fisttpll
ds
and
jg
xor
or
outsb
icebp
pop
addr16
dec
popf
orb
dec
lret
insb
pop
into
repnz
push
adc
ljmp
repnz
inc
idivl
jne
popf
pop
dec
sahf
test
ss
sbb
lds
or
les
sti
xor
pop
stos
cmp
hlt
fiadds
mov
push
mov
addb
pop
pop
cwtl
das
sbb
dec
je
mov
mov
cli
jno
aaa
lods
mov
int3
enter
inc
cmpsl
dec
dec
push
xor
outsb
jmp
cld
mov
xchg
mov
and
mov
mov
add
mov
mov
cmp
sti
pop
mov
dec
ds
sbb
rcrl
addr16
jmp
mov
xor
rol
lods
add
imull
mov
jecxz
pushl
ds
inc
xlat
popl
lods
fimuls
mov
pop
sub
and
outsl
cmpsl
adc
dec
jle
inc
inc
jmp
ljmp
mov
cmp
xor
adc
mov
jg,pn
fwait
mov
mov
lcall
lahf
mov
mov
lret
mov
add
jne
adc
fs
in
jae
add
jo
aas
out
and
push
dec
jns
shrl
lahf
fnsave
arpl
lret
subb
out
pop
xlat
in
mov
pop
xchg
mov
pop
rcr
orl
mov
ja
lds
mov
int
xor
push
dec
push
loopne
xchg
push
sbb
dec
cmpsb
or
xor
xchg
push
sub
ss
jge
add
xchg
mov
mov
daa
test
rcrl
mov
xchg
push
push
loop
hlt
jbe
data16
bound
and
add
jp
and
bound
pop
js
clc
jmp
enter
fnsave
in
rcrb
adc
xchg
in
xchg
stos
push
mov
ret
xchg
sbb
inc
test
adc
mov
mov
ret
xchg
mov
iret
pop
lcall
pop
gs
sub
sub
dec
adc
inc
jns
push
loopne
cmpsb
int
inc
xor
xchg
repnz
add
or
adc
dec
jne
ds
adc
cmp
xor
sbb
or
popa
mov
fnstsw
dec
push
mov
repz
push
and
dec
jns
shll
add
jle
jmp
stc
xchg
mov
sub
aad
mov
test
adc
push
sbb
mov
out
jg
xor
adc
mov
push
jo
dec
dec
sbb
pop
adc
ret
adc
xor
lds
idivb
cmpsl
xchg
or
sbb
and
dec
mov
cmp
outsl
and
jp
mov
dec
cmp
fcmovu
std
mov
push
or
lret
orl
sub
push
lret
jg
adc
pop
lcall
adc
mov
loope
cmp
push
sub
nop
jno
insb
inc
cmc
inc
mov
lcall
leave
jns
gs
lret
arpl
test
jp
inc
cmp
jp
lods
outsl
xchg
cld
scas
jns
cmp
test
sub
mov
aaa
je
stc
ror
sbb
sub
insl
pop
outsl
cmp
sub
sub
aas
dec
mov
jne
mov
sub
mov
and
mov
push
or
adc
stc
fidivrl
fdivl
cmp
pop
sbb
pop
addb
xchg
jbe
xor
cmp
xchg
sub
mov
cmpsl
adc
lret
sub
sbb
clc
pop
dec
sbb
cmp
repnz
loop
dec
mov
out
lahf
es
cli
push
out
sbb
inc
xor
pusha
dec
pop
shll
adc
imul
insb
dec
cmpsl
sub
fiadds
cli
outsl
cmp
ss
ss
lock
and
xor
xchg
mov
sub
call
sbb
inc
dec
scas
sub
xchg
or
fwait
mov
stos
sbb
pop
or
xor
sub
push
push
fwait
xor
std
lcall
ljmp
mov
push
int
mov
fldcw
js
pop
or
out
call
sbb
jns
js
or
mov
push
xor
je
inc
dec
push
sub
mov
add
es
push
ljmp
mov
inc
inc
lret
xchg
sub
xchg
adc
sub
xor
int
xchg
stc
mov
push
xchg
xchg
scas
xchg
sub
imul
mov
mov
imul
clc
xchg
inc
or
jle
dec
stos
sub
outsl
mov
and
dec
imul
lcall
adc
xchg
sbb
sub
dec
je
mov
pop
dec
sbb
sub
jl
mov
and
xor
jl
insb
cltd
add
fstpt
test
mov
sbb
sbb
jb
xchg
or
adc
loop
cmp
ljmp
mov
mov
mov
dec
jnp
jns
adc
sbb
or
fldt
jmp
push
fnstsw
fs
mov
sahf
sbb
loop
lret
iret
push
add
xor
bound
cmpl
xor
mov
stos
fstpt
fisttps
push
ss
pop
leave
mov
adc
cmp
ret
push
pop
sbb
mov
lds
ss
ficomps
or
jne
jmp
mov
sbb
and
pop
or
mov
fld
adc
loop
test
dec
lds
int
jbe
test
mov
dec
insb
cwtl
sub
fs
inc
mov
ss
cmp
cmp
xorb
js
or
adc
mov
fidivl
pop
fildl
js
mov
imul
rcll
xchg
push
jecxz
stos
pop
pop
adc
loop
xchg
xchg
out
insb
addb
fdivrs
xor
repz
inc
jae
jp
push
fmul
sbb
push
push
xchg
cs
mov
scas
or
out
lock
ss
pop
iret
aad
dec
push
scas
or
cmp
push
ss
or
dec
sti
mov
mov
data16
loopne
push
shll
inc
imul
jl
lahf
mov
xor
in
push
fnsave
sub
cwtl
lods
loop
xchg
push
xor
jae
pop
ss
sub
mov
xchg
jns
push
imul
popf
ss
pop
in
mov
push
xchg
sbb
jle
and
aad
push
xor
and
fs
pop
ret
xor
adc
hlt
test
lock
pop
jnp
xchg
daa
test
inc
inc
int
in
out
dec
lret
nop
test
jnp
mov
dec
xlat
movsl
push
lcall
push
mov
xchg
roll
shl
out
sub
mov
push
mov
and
fdiv
dec
int
xlat
and
cmp
mov
mov
or
cs
inc
bound
adc
ret
inc
dec
das
and
push
popf
sub
stc
push
xor
sbb
sbb
pop
push
sarb
dec
xor
and
or
dec
or
cli
out
sbb
pop
dec
sub
cmp
mov
sub
push
loop
mov
fidivrl
xchg
cmp
mov
mov
lea
pop
mov
mov
psraw
jnp
cmp
sbb
mov
imul
dec
ficomps
dec
pop
sbb
inc
aad
fs
mov
inc
lock
imul
mov
lcall
pop
nop
pop
iret
cmp
mov
sbbb
mov
call
fstpt
mov
xor
mov
cmp
inc
mov
lret
add
fnstenv
inc
adc
xor
inc
inc
mov
and
xor
sarl
ret
insl
test
adc
fdivrs
inc
mov
in
enter
loop
test
or
insb
xor
fiadds
test
push
out
lret
rorl
fsubr
mov
mov
es
and
mov
shlb
rolb
or
dec
pop
inc
inc
xor
pop
jae
inc
sub
outsb
lret
add
xor
out
repnz
mov
add
ret
clc
inc
dec
jns
mov
adc
mov
fucomi
push
gs
add
xor
cmp
push
cmovl
sbb
sub
sahf
out
jo
jle
or
test
inc
pop
inc
pop
icebp
and
sbbb
popa
addr16
jl
ds
push
mov
fisttpl
and
sarl
dec
insb
pushf
mov
or
mov
fists
pop
movsl
jp
inc
push
sub
cltd
ret
and
inc
pop
push
mov
je
add
mov
inc
repnz
push
pop
mov
fabs
fwait
mov
loop
inc
out
rcr
mov
and
cltd
xor
fwait
ja
loop
sub
adc
lahf
movb
js
xor
xor
sub
out
cld
in
stc
add
adc
cld
negb
mov
nop
or
mov
rol
and
lea
adc
sbb
stc
mov
inc
cmp
jns
push
fimuls
dec
stos
adc
and
inc
arpl
ss
or
testl
ss
sub
ss
sub
ss
sub
test
dec
dec
sti
fadds
jmp
inc
dec
fistpl
dec
lret
leave
inc
cli
mov
cmp
cmpsb
out
mov
nop
mov
mov
xchg
dec
and
mov
scas
mov
and
popf
inc
shrb
jo
data16
xor
pop
cmp
or
clc
in
sub
cmp
cmp
mov
test
insb
cltd
ret
jge
pop
push
cli
mov
sbb
notl
sub
jge
out
sub
ja
pusha
arpl
stos
xchg
mov
out
mov
and
dec
mov
xor
cltd
cmp
xchg
mov
adc
ds
adc
loop
mov
mov
iret
mov
mov
push
inc
js
mov
xchg
sbb
enter
pop
iret
push
fildll
fidivl
mov
shll
cmp
sti
fstps
stos
inc
xor
cli
sbb
rcll
rol
sti
and
xchg
mov
adc
mov
fildll
fwait
stos
xor
mov
fisubrl
mov
jnp
adc
test
pop
xor
into
jns
das
shrb
fldcw
xor
pop
sub
cmp
cwtl
sbb
cmp
in
dec
fidivs
sbb
pop
mov
call
dec
pop
xor
or
adc
pop
aam
push
pop
jae
xlat
aam
idiv
outsl
test
mull
pop
push
mov
inc
dec
sbb
sti
scas
dec
lret
push
ss
sub
xchg
cmp
pop
xchg
pop
xchg
adc
loopne,pt
stc
ret
ret
cmp
fimull
out
mov
mov
int3
mov
xor
sbb
pusha
out
sub
sti
ret
push
fidivrs
cs
sbb
lods
out
insl
inc
mov
cmc
mov
outsl
mov
push
mov
rcr
xchg
movsb
mov
loope
pop
ja
mov
xchg
ljmp
mov
push
adc
fiaddl
ja
stc
repnz
pop
shrl
outsl
mov
sub
xchg
cmp
outsb
pop
pusha
adc
mov
dec
push
sbb
lods
mov
inc
jp
jp
decb
xor
stc
cmpsl
mov
das
outsl
xor
pop
cmp
sbb
mov
pop
push
outsb
pop
loopne
jno
push
push
cmp
dec
cld
das
test
enter
cwtl
push
js
fldl
xchg
test
es
sub
test
out
iret
pop
pop
rcll
dec
cmpb
inc
hlt
sbb
inc
push
sbb
in
fs
je
ss
adc
sbb
movsl
fldcw
sbb
push
mov
mov
mov
pusha
pop
cwtl
pop
inc
test
mov
into
scas
xchg
xchg
pop
lods
cs
pop
in
dec
dec
cmp
sbb
enter
mov
pop
lods
mov
unpcklps
mov
sbb
lods
add
les
adc
in
mov
inc
mov
mov
out
fcomps
push
pop
ljmp
jo
sbb
xor
push
push
es
fidivl
sar
inc
sbb
movsl
sbb
cmp
stos
cmp
sub
sbb
xchg
ficompl
or
pushf
mov
aas
sub
mov
out
mov
jo
scas
push
add
stc
movb
jnp
popa
mov
dec
xchg
fcmove
lret
test
sbb
pushf
jl
dec
mov
push
cli
push
cli
imul
cld
stos
push
fwait
lods
lret
roll
jle
dec
dec
xlat
and
cmp
enter
or
inc
jae
mov
pop
stos
repnz
or
cmp
js
sbb
mov
stos
daa
sub
adc
or
fwait
sbb
lock
cmp
addb
cmp
es
into
jmp
cmp
or
pop
xor
mov
lret
push
cltd
daa
popa
adc
mov
xchg
imul
sbb
push
dec
ss
xchg
push
mov
jge
inc
mov
cs
mov
pop
icebp
sbb
fistl
xchg
stc
out
jmp
dec
xor
mov
test
inc
std
pop
xchg
stc
sbb
subb
mov
mov
mov
cmp
sub
insb
adc
xor
ljmp
rorl
mov
jle
pop
es
sub
xchg
push
sahf
movsb
in
mov
mov
fisubrl
inc
test
stos
out
mov
das
xor
add
pop
dec
add
pusha
sub
daa
inc
push
sarb
cmp
and
mov
scas
scas
xchg
test
in
ja
pop
push
sbb
inc
test
movsl
movsb
scas
je
xchg
mov
cmp
cwtl
jns
mov
lret
rorl
cmc
movsl
or
mov
sub
mov
lock
sbb
sub
and
jbe
cli
sahf
mov
aad
repz
mov
mov
mov
xchg
adc
jne
mov
sub
ss
sbb
jle
pop
repnz
or
jb
fidivrl
outsl
lods
subl
xlat
mov
sub
adc
jmp
xor
sbb
and
mov
pop
mov
xor
add
stc
cmc
dec
pop
mov
movsl
pusha
lahf
lock
leave
mov
add
inc
cmp
inc
ficompl
jb
pop
sarl
aas
js
xchg
push
adc
divl
lahf
sub
pop
sbb
es
mov
pop
rcrl
imul
dec
mov
repz
daa
jecxz
inc
pop
filds
js
cltd
add
loope
addr16
ret
fs
push
rorl
cmp
sub
divb
dec
adc
jge
out
mov
mov
jbe
push
adc
mov
cmc
lods
or
jns
fmull
ficoms
test
or
rorb
imul
es
push
cmpsl
mov
jecxz
pushf
cmp
adc
fdivrl
cmpsl
js
insl
cmp
jnp
fwait
pop
mov
dec
cmp
rcrl
test
aad
jae
sbb
push
push
inc
or
jo
inc
jo
dec
cmp
insb
idivl
lret
dec
loopne
jl
sub
jecxz
push
jbe
push
mov
in
mov
jp
xchg
out
mov
dec
mov
adc
popf
add
sub
lret
loopne
fstpl
mov
dec
jbe
ret
repz
sub
addr16
fisubrs
xor
jle
es
js
xor
or
cmp
mov
mov
inc
fwait
sub
jbe
xchg
in
inc
add
xchg
loop
rorb
into
xor
mov
xchg
ljmp
scas
dec
sub
fldcw
inc
imul
fidivrl
daa
enter
cmp
cmc
xchg
fwait
mov
pop
insl
outsb
inc
cmpsl
mov
inc
dec
jns
dec
pop
fisubrs
adc
or
inc
mov
mov
xlat
push
movsl
mov
sub
xor
adc
notb
cmp
sbb
sbb
or
stos
xlat
jbe
lods
loopne
ss
icebp
fstpt
in
xchg
test
pop
jno
sub
adc
and
adc
jnp
xchg
lret
cmp
inc
pop
push
lcall
push
ret
jb
add
pushf
push
cmpsl
testl
push
iret
xchg
mov
inc
or
js
ret
push
pop
cmp
shll
ss
sub
popa
ficompl
cld
jno
add
movsb
test
mov
sbb
fidivrl
cltd
cmp
out
sbb
ja
xor
jb
shrb
dec
data16
clc
push
test
imul
xchg
sub
cmp
test
and
das
pop
es
fidivl
dec
push
push
call
arpl
xchg
mov
pop
add
lret
cltd
sbb
scas
pop
pop
mov
mov
xor
sub
mov
push
sarl
xlat
js
mov
mov
mov
cmp
mov
sbb
movsl
jne
out
xor
daa
out
and
lcall
negb
imul
dec
adc
cmp
xchg
stos
push
sbb
cs
sbb
cmp
xchg
icebp
dec
sbb
xlat
dec
jae
jmp
mov
orl
jg
andl
mov
push
mov
in
mov
or
scas
or
fisttps
mov
xchg
xor
lds
pop
movsb
arpl
cmp
clc
jns
aaa
push
mov
dec
sbb
repz
call
push
movsl
cmp
inc
stos
out
fisubrl
mov
mov
scas
fiadds
jp
mov
push
scas
lods
out
mov
adc
popf
or
inc
popw
cwtl
hlt
lds
mov
cmpsb
pop
fisubrs
addr16
jle
lret
fwait
lret
outsl
dec
mov
push
lock
ror
dec
cmpsb
cwtl
sbb
mov
movsl
mov
stc
mov
bound
xchg
xor
test
rolb
push
mov
mov
js
lret
or
fisubs
push
pop
or
dec
aam
cld
int3
adc
add
dec
imul
outsl
mov
adc
mov
xorl
ljmp
mov
sahf
inc
xor
jmp
dec
add
sbb
push
xchg
daa
imul
pop
divb
sti
sbb
repnz
or
push
sbb
xor
jb
mov
and
arpl
add
pop
jbe
fld
mov
and
mov
jb
push
push
adc
cmp
push
adc
data16
mov
in
xlat
sub
and
rcll
pop
call
add
add
fnstcw
js
or
sbb
mov
adc
rcll
dec
inc
or
cmp
dec
ret
or
xor
ret
dec
inc
loope
sahf
fsubr
mov
or
dec
movlps
xor
lock
rep
mov
jmp
inc
stos
lcall
dec
jle
adc
xor
sub
sbb
add
and
add
das
xchg
xor
xor
fs
test
lods
cli
push
push
sub
cmp
lods
lret
imul
fisttpl
repnz
push
lods
ret
adc
push
arpl
cmp
mov
cmp
add
or
je
cmp
adc
jl
xchg
and
adc
sub
dec
add
dec
xchg
mov
addr16
or
sub
sbb
jno
mov
decl
inc
xlat
inc
add
sub
sbb
dec
stc
cltd
mov
jne
jnp
dec
les
pop
into
xchg
xchg
cld
xor
mov
fwait
add
in
adcb
cmpl
ret
pop
push
orl
repnz
call
jp
insb
xor
xor
dec
xor
pop
je
sti
in
adc
xor
repnz
add
pop
push
dec
dec
and
xor
sub
sub
push
out
ss
insb
add
or
mov
adc
enter
ss
xor
pusha
push
mov
cmp
pop
sub
jae
mov
dec
ds
aaa
sub
mov
xchg
add
jns
pop
subl
adc
jno
sub
jecxz
pop
and
push
subl
das
inc
nop
dec
pop
xor
mov
mov
movsl
stc
cwtl
jo
sub
push
sbb
add
xor
ret
cmp
xchg
dec
clc
and
pop
and
mov
loope
sti
adc
dec
push
pop
push
fiadds
inc
or
sub
daa
mov
push
push
inc
mov
push
xor
pop
mov
out
xorl
xchg
and
mov
jl
sub
outsl
adc
push
shll
bound
ds
dec
pop
jle
filds
pop
pushf
xor
bound
xchg
scas
or
cmc
lret
or
popf
rorb
mov
enter
sbb
sbb
xor
dec
sti
mov
popa
adc
lods
in
in
and
mov
cmpsb
mov
out
cmp
icebp
ret
scas
out
clc
jecxz
jg
jmp
push
add
pop
dec
sbb
dec
mov
int
inc
mov
mov
mov
insl
jnp
bound
and
xor
aas
inc
fdivs
adc
testl
jb
adc
rolb
push
sti
popf
testl
ret
jo
xchg
das
or
dec
xor
add
mov
cmp
push
or
mov
shll
inc
stos
pop
pushf
in
mov
in
jecxz
adc
cmp
ljmp
int
and
lret
push
fs
sbb
push
insb
or
dec
es
dec
loopne
push
jle
or
int3
sbb
sti
push
iret
in
in
mov
mov
dec
sbb
and
pop
pop
jg
inc
cmp
aam
rorb
pop
arpl
enter
in
push
pop
lcall
inc
das
xlat
xchg
or
mov
stos
loop
leave
fcompl
or
lods
xchg
test
dec
push
fildl
xor
cmp
mov
test
dec
lcall
hlt
cmpsl
sbb
mov
iret
sub
into
pop
pop
xlat
mov
lahf
ljmp
lret
mov
jle
loope
lahf
cli
sbb
call
shrl
mov
adc
test
adc
lret
hlt
outsl
mov
lods
test
lds
jns
adc
inc
push
sti
sbb
xor
retw
sbb
dec
push
shll
jb
push
push
push
cmpsl
push
fwait
lods
je
sbb
inc
sbb
pop
out
cmp
mov
or
xor
stos
jecxz
aas
dec
dec
sbb
add
sbb
mov
popf
adc
lods
stos
push
push
cmp
sbb
adc
sub
in
vpackuswb
and
ret
dec
xchg
js,pn
js
rcrl
jne
lahf
mov
inc
aaa
sub
push
pushf
cmc
mov
cmc
xchg
sub
cmp
sub
dec
imul
dec
and
cmp
lds
lods
mov
sub
ja
dec
adc
loop
mov
and
fwait
bound
stc
pop
stc
cmp
jo
or
add
mov
push
insl
push
xchg
sub
mov
or
dec
mov
test
js
or
mov
sbb
in
movsb
dec
dec
push
test
fmull
popf
adc
insl
inc
in
push
jge
rorl
loop
rorb
inc
and
rolb
jno
stc
pusha
or
jbe
jmp
imul
fwait
cwtl
ja
js
outsl
loop
cmp
scas
test
push
lods
cmpsl
mov
push
fwait
add
dec
dec
pop
ficomps
leave
xlat
ss
pop
jecxz
dec
ja
js
rol
or
inc
adc
sbb
sub
sub
dec
lods
mov
xorb
and
addr16
lds
dec
xor
pop
lcall
mov
and
inc
and
cmp
cmp
lret
in
fistl
xchg
push
adc
lock
fxch
xchg
mov
pop
dec
cld
inc
dec
fdivrp
xchg
adc
jae,pt
sbb
mov
shrl
sbb
sbb
mov
pop
bound
mov
pop
pusha
aas
es
adc
sbb
xor
adc
jge
pop
jl
jb
xor
popf
or
xor
jle
or
jns
int
mov
in
xchg
jo
pop
ja
ret
ss
cltd
es
mov
cmpb
cmpsl
ret
lods
sbb
inc
lcall
int
dec
iret
push
dec
add
jp
cmpsb
and
cs
jle
rcll
out
adcb
push
pop
xor
adc
pop
xchg
test
jle
mov
outsl
aam
xchg
jl
sbb
mov
mov
push
inc
cmp
repnz
testb
sti
scas
xor
aam
pop
and
aad
cmp
das
daa
mov
cs
sub
out
adc
cli
sub
bound
mov
test
or
xchg
or
pop
sti
mov
mov
mov
pop
pop
subb
aas
scas
mov
jns
dec
jb
pop
push
aad
shlb
xor
fiadds
mov
outsl
mov
jb
add
dec
sbb
dec
pop
arpl
adc
pusha
cli
pop
adc
pop
xlat
popf
std
fisubs
xchg
sbbl
mov
sub
and
push
lret
into
ret
push
fwait
dec
mov
jne
cld
punpckhwd
xor
pop
xor
mov
jnp
ret
lret
xor
inc
cmp
sub
jnp
push
in
cli
lock
cmp
mov
or
sbb
mov
sub
mov
lock
mov
sbb
stos
adc
jns
mov
mov
fnstsw
loopne
cmp
mov
stc
sub
inc
lahf
loop
scas
out
push
cmp
jo
sbb
mov
adc
testb
inc
test
push
xlat
jae
pop
or
pop
xsha256
cmpsb
adc
add
pushf
pop
bound
xchg
add
test
sub
jne
push
jnp
push
or
xlat
xor
test
xchg
mov
lret
push
push
fldenv
jmp
add
movsb
inc
das
mov
cmp
pop
mov
pop
cmp
sub
test
xchg
or
ja
cmp
out
xchg
pop
rcrb
pop
loopne
es
push
lods
lock
cmp
and
ja
jne
leave
testb
movlhps
dec
mov
std
test
or
std
cwtl
push
push
fldt
xchg
sbb
test
push
inc
stos
jno
out
mov
sub
pop
mov
stos
js
jns
xor
xchg
iret
fistl
mov
xchg
push
mov
cmp
mov
sbb
mov
push
fildl
sub
inc
lcall
popa
add
push
fcmovnbe
mov
ds
push
and
mov
aas
outsb
mov
pop
or
pop
sbb
dec
sti
jno
add
jbe
je
sub
cwtl
add
cmpl
leave
push
inc
mov
popa
iret
int3
cltd
push
jo
sbb
mov
cmp
xlat
in
sti
insl
xor
jp
jns
aad
loopne
push
pop
or
dec
outsb
dec
mov
shrl
sbb
cmc
cmp
inc
pop
sub
iret
pop
dec
dec
ljmp
push
pop
dec
push
sti
mov
pop
lret
sbb
adc
push
jmp
cmp
push
mov
dec
sub
sbb
jnp
repnz
lcall
sub
xchg
jno
js
ljmp
dec
xchg
test
xchg
fisttpl
cmp
loopne
movsl
fdivs
jno
daa
mov
notl
cld
popf
xor
imul
adc
loopne
cmp
adc
enter
sbb
pop
pop
gs
std
pop
fnstcw
dec
xlat
in
addr16
jle
jb
dec
pop
xlat
minps
or
stos
dec
loopne
fs
add
or
push
mov
adc
stos
adc
gs
fisttps
cwtl
dec
popf
stc
out
jmp
mov
std
dec
cmp
and
cmp
or
jns
fistpl
mov
dec
shll
decl
mov
rcrl
mov
dec
stc
xchg
mov
push
js
mov
fwait
lret
mov
cwtl
adc
xchg
jnp
cmp
jecxz
stos
lcall
or
scas
scas
xchg
jmp
int3
fdivl
cltd
in
xchg
scas
ficoml
imul
fstpt
repz
sub
lcall
xor
xor
mov
das
add
mov
sbb
das
xchg
movsl
lock
mov
push
dec
gs
sti
pop
dec
cld
out
cmp
leave
aad
mov
fcmovnb
sbb
cli
int3
sub
fldcw
rcrl
sbb
add
pop
sbb
sbb
mov
mov
add
dec
mov
test
sub
mov
jecxz
and
xlat
mov
mov
mov
lods
mov
dec
add
fdivs
sti
jne
shlb
jmp
add
clc
jmp
sbb
jge
into
xchg
subl
jo
test
in
xor
cli
pop
aad
or
sub
push
sbb
mov
pop
sub
sbb
outsl
lcall
sbb
ret
repnz
sti
cmp
push
and
sbb
mov
fimull
mov
xchg
sbb
cmp
je
js
mov
sub
xor
jmp
sti
dec
cmp
out
lea
sbb
mov
in
xchg
ljmp
in
jae
dec
jp
adc
insl
iret
cmp
pop
dec
sbb
test
lds
enter
xchg
rcrl
push
sbb
je
cli
push
sbb
xchg
mov
sti
dec
ss
cmp
lret
jmp
call
fstps
fdivrs
testl
mov
outsl
das
dec
push
pop
scas
mov
cltd
mov
cmp
repz
fistl
pusha
adc
iret
cwtl
dec
scas
jbe
sbb
test
cmp
add
cmp
xlat
call
adc
fadds
mov
pop
mov
fimull
and
push
lret
push
cmp
cmp
jbe
cwtl
sbb
cmp
movsb
mov
cmp
sbb
add
dec
xlat
std
test
sub
stos
shrl
cltd
dec
or
ja
fdivrs
adc
testl
jmp
adc
cli
jecxz
pusha
sti
std
lcall
xlat
loopne
leave
cmp
dec
dec
popa
xchg
dec
or
lret
loope
shrl
xchg
cmp
bound
pop
add
cmp
xlat
loop
js
ss
arpl
lret
fsts
sub
dec
cltd
jns
lret
ds
inc
cmp
cmp
nop
ds
mov
repz
pop
loopne
add
adc
stos
cmp
dec
cmp
dec
lods
push
or
pop
cli
scas
cmp
mov
pop
mov
jp
stc
test
lcall
xchg
inc
lcall
pop
ficoml
cmp
repnz
mov
mov
daa
sbb
cltd
adc
sbb
enter
push
jecxz
jae
adc
iret
adc
xor
fwait
xor
fcmovbe
fadds
stc
mov
fwait
adc
and
into
mov
xlat
mov
cwtl
stc
fidivs
cmp
cltd
fimull
sub
push
xlat
cmp
add
fcmovnu
sub
add
sub
or
daa
out
jb
addl
inc
rcll
push
sbb
lods
adc
and
cmp
lock
call
mov
inc
dec
dec
push
push
enter
fstpt
or
js
mov
mov
inc
sbb
cmp
pop
lcall
fwait
pop
stc
cmp
inc
sbb
cmp
adc
sbb
mov
cmpl
pushf
sti
sub
and
fstpt
pop
pop
jnp
xchg
inc
sbb
cmp
pop
fidivrl
add
mov
cmp
jmp
cltd
push
stos
shll
dec
cmp
inc
insb
xlat
push
sbb
push
xor
fnstenv
or
fistpl
xchg
dec
cmp
xor
xor
or
pop
aad
mov
out
sbb
add
out
and
lcall
add
sub
or
cmp
clc
dec
jno
call
sbb
fcmovnbe
dec
ret
incl
out
cmpsb
mov
and
xor
push
jae
ljmp
jecxz
dec
dec
sbb
cmp
pop
cmp
lds
sbb
xor
repnz
and
imul
dec
fnstcw
cmp
dec
dec
mov
cmp
dec
push
repnz
test
adc
scas
shll
sbb
inc
mov
dec
and
rorb
jp
xlat
or
lock
xchg
stos
cld
dec
out
mov
push
jo
mov
add
xchg
adc
jecxz
cmp
sub
adc
mov
cmp
and
sti
fwait
adc
sti
lret
add
ficomps
cltd
sti
popa
inc
popf
loope
scas
dec
movsl
lds
mov
mov
clc
push
jnp
add
cltd
in
or
sti
dec
and
mov
sbb
stos
sub
loope
adc
or
pop
jnp
sbb
clc
repnz
pop
inc
sti
jecxz
nop
fsts
xlat
pusha
sbb
cmp
dec
sbb
loopne
sbb
aam
popa
gs
pop
cmp
loope
fcmovnbe
pop
fcoms
or
rcl
iret
push
stos
add
out
xchg
mov
and
fisubrs
xchg
cwtl
jmp
incl
cmp
xor
adc
dec
sub
cmp
fsubr
mov
and
push
push
dec
xchg
cmp
xchg
sahf
jmp
and
dec
aad
sbb
repnz
test
jmp
sbb
mov
js
outsb
imul
sub
sbb
or
mov
sbb
mov
fwait
lret
adc
or
shl
cli
push
ds
adc
pop
lret
push
ds
je
dec
mov
out
stos
xchg
and
mov
cltd
cwtl
aad
ja
aam
xor
jns
lcall
pop
cmp
push
adc
fcmovbe
imul
jbe
mov
icebp
jg
mov
adc
je
or
fnstenv
jno
adc
sbb
xlat
adc
lahf
inc
gs
pushf
fnsave
inc
push
aam
js
or
or
bound
aad
repz
sbb
xchg
push
dec
pop
repz
sbb
jbe
cmp
js
mov
pop
pop
mov
sub
in
sub
adc
es
xor
outsl
xchg
mov
shr
xlat
mov
add
jecxz,pt
aam
push
sbb
sbb
xchg
pop
inc
cmp
add
cmp
fdivrs
or
sbb
jg
jo
loope
adc
cmp
jns
or
mov
cli
pop
dec
lcall
xchg
pop
push
jnp
adc
sub
imul
fistpl
bound
lret
mov
pop
sti
js
xchg
sbb
arpl
fistl
dec
fwait
dec
notl
push
mov
lret
add
lret
dec
add
push
jg
jmp
cmp
push
inc
push
mull
dec
cmp
cmp
lret
cmp
rcr
add
jge
js
cmp
and
add
xlat
add
or
push
int
and
adc
in
sbb
dec
sti
add
dec
mov
inc
sarl
mov
pop
enter
imul
xor
push
cmp
cmp
mov
sub
jge
mov
iret
sbb
cmpsb
cmp
insb
inc
stc
cmp
mov
dec
dec
outsl
push
push
jo
xchg
sub
pusha
lret
out
cmp
dec
mov
icebp
xor
push
lea
rorl
xor
sbb
cmp
xchg
std
idiv
sub
adc
bswap
stc
pop
dec
daa
add
mov
data16
cmp
cmp
das
xor
cwtl
cli
je
or
sbb
mov
dec
int3
sbb
cmp
add
xlat
jmp
add
adc
cmc
mov
cld
adc
xor
add
adc
seto
es
xchg
jl
push
mov
push
jg
or
pop
dec
mov
mov
imull
fs
add
push
je
js
in
add
dec
sarl
push
push
mov
pushf
cwtl
fcmovnu
mov
jns
clc
push
ja
mov
fsts
adc
cwtl
cmp
and
fidivrl
insl
pop
jno
jnp
cmp
dec
and
push
cmpsl
cmp
cmp
je
cmp
jle
sti
mov
dec
sbb
popf
mov
cmp
push
clc
hlt
roll
mov
dec
loopne
xor
out
ficompl
lcall
jle
rcrl
shll
loop
cwtl
inc
pop
cmpsl
repnz
jp
jae
rclb
pop
or
cmp
mov
mov
jle
cmp
and
mov
sbb
notl
sub
sarl
sbb
shrb
sarl
dec
sub
xor
clc
adc
fiadds
fwait
xor
ja
xlat
and
xchg
fwait
push
in
adc
out
add
xchg
inc
dec
scas
dec
sar
iret
lret
fucomi
xlat
pop
out
pusha
mov
sub
shll
inc
push
cwtl
adc
lcall
aam
xor
xorb
outsb
push
sahf
dec
cs
ja
inc
sbb
xor
pop
push
cmp
lret
inc
mov
pop
rcrl
xlat
pop
in
inc
jae
adc
pop
sub
aad
mov
fistl
adc
negl
fldt
mov
mov
sbb
pop
mov
or
cmp
cmp
stc
inc
push
loopne
jecxz
pop
xchg
pop
jp
mov
sar
adc
xor
sbb
fisttpl
jge
dec
loope
mov
das
out
xchg
addr16
sbb
cmp
xor
cwtl
or
fcmovne
sbb
fistpl
xchg
ret
pop
je
xor
push
jecxz
xchg
adc
jo
cltd
adc
cli
dec
lds
sbb
adc
insb
xlat
dec
sbb
dec
mov
rorl
fsubrl
pop
dec
dec
sub
push
push
mov
jg
mov
mov
in
sarl
lret
cmp
dec
push
call
sti
pusha
xor
sub
or
push
rcrl
adc
sub
dec
dec
or
dec
jae
push
dec
push
sub
adc
add
xlat
and
rcr
push
add
push
inc
loope
aam
aas
jns
mov
mov
push
inc
cmp
cli
rclb
cmp
adc
stc
mov
outsb
push
inc
loope
aam
stos
jns
cwtl
sbb
and
cli
lock
sbb
cli
mov
inc
loope
int3
cmp
ret
dec
adc
adc
push
test
jmp
cltd
bound
sbb
mov
bound
sbb
jmp
sbb
cmp
cmp
mov
push
xlat
dec
sbb
mov
mov
imul
pop
jmp
jp
mov
push
mov
into
and
stos
dec
lret
aas
mov
cmp
dec
scas
mov
dec
jmp
dec
loope
xchg
cli
adc
cli
lcall
sbb
mov
adc
inc
xlat
ret
shll
and
push
pop
in
clc
shll
mov
dec
test
add
xlat
andb
sub
xchg
push
mov
sub
cmp
jmp
xor
rcrb
cmp
cmp
and
mov
mov
xchg
sub
shrb
cmc
popf
aaa
clc
cmp
mov
adc
sub
int3
das
sbb
loopne
cmp
sbb
popa
mov
lock
js
lret
sbb
out
clc
in
sbb
gs
sbb
jb
pushf
push
sbb
jecxz
push
das
xlat
fwait
jmp
adc
dec
loopne
sub
pop
cmp
and
jp
push
fstpt
xor
jo
pop
add
pop
dec
js
cmp
mov
or
mov
fsubs
xchg
pop
adc
sub
dec
pusha
jp
icebp
mov
add
adc
cmp
aas
pop
imul
call
push
inc
repz
push
outsb
clc
jo
mov
push
test
inc
stos
sti
daa
fdivr
cmpsb
into
addr16
jbe
xor
mov
lea
jl
adc
sbb
ds
mov
adc
mov
fs
lcall
dec
js
cli
adc
cmpl
cltd
les
mov
out
jns
js
and
outsl
pop
fisubrl
adc
rorb
out
mov
inc
mov
rcrl
jp
inc
cltd
xchg
insb
push
fwait
and
std
sar
int3
mov
mov
adc
cmpsl
add
std
scas
inc
sbb
mov
dec
jnp
outsl
adc
jge
mov
js
sub
stos
mov
sub
stos
ret
pop
scas
adc
jns
xchg
and
fwait
xlat
sbb
call
cmp
cmp
fsts
cmp
loopne
cmpsb
pop
adc
aaa
mov
add
pop
lods
mov
cmp
add
sub
xlat
js
adcb
imul
sbbl
jnp
xor
fmuls
rcrl
mov
adc
jo
sbb
cmp
mov
jo
adc
dec
push
loopne
lock
push
jnp
popa
jo
sbb
xor
clc
jns
pop
add
gs
dec
mov
jp
lret
inc
mov
fistpl
lcall
ret
xlat
mov
dec
jns
loopne
jp
sti
arpl
pop
jnp
sbb
push
test
dec
xlat
sub
or
mov
cmc
push
xchg
mov
push
fs
ja
pop
push
or
ret
cmp
mov
inc
mov
xchg
dec
adc
rep
or
lcall
and
je
mov
cmp
sub
push
and
or
lods
ss
sub
sub
dec
fidivrs
jecxz
aad
and
pop
or
repz
jns
fmuls
and
fcmovnbe
or
cwtl
push
mov
fstps
jp
mov
dec
pop
cli
add
cmp
adc
dec
mov
aad
push
adc
fnstcw
and
jae
jl
cmp
cwtl
dec
push
and
hlt
aas
add
cmp
cmp
lret
fstps
pop
xlat
cmp
adc
mov
mov
repnz
pop
repz
inc
sti
and
loope
dec
cmp
ret
xor
fcmovne
pop
mov
fistpl
and
xor
cmc
ret
cld
xchg
mov
rcrb
fiaddl
pop
mov
dec
popa
cmp
xor
divb
cmp
adc
add
ficompl
daa
xor
incl
ljmp
iret
imul
push
jge
mov
or
cmp
inc
repnz
or
sti
xor
test
xchg
adc
cmp
xor
imul
push
mov
movb
sbb
call
clc
dec
fwait
bound
fcmovnbe
sbb
sbb
push
jnp
cli
clc
or
int3
pop
lcall
cmp
fst
sub
xchg
jbe
push
inc
iret
imul
movsl
arpl
fildl
sub
cmp
mov
xlat
aam
xor
mov
mov
mov
mov
cmp
aas
mov
cmp
cmp
ljmp
push
push
fcoms
int
sbb
mov
testl
inc
dec
push
pushf
adc
or
inc
push
jge
int
mov
es
dec
and
mov
repz
add
push
scas
adc
sti
mov
xlat
mov
ficompl
pop
imul
sub
mov
jo
jge
pop
inc
aad
inc
lahf
cmpsl
mov
add
leave
inc
shl
dec
jmp
jae
pop
pop
fistpl
dec
push
loope
test
stos
insb
ficoml
inc
jp
sbb
fwait
and
cwtl
push
insb
cmp
fisubs
push
mov
push
ja
or
sbb
sub
sbb
push
jno
rorl
nop
mov
mov
cli
cmpb
adcb
cmp
inc
mov
hlt
sbb
sub
mov
add
xchg
jmp
sub
repz
jb
and
cli
in
loope
fisttps
fidivrs
cwtl
repnz
fistpl
jl
add
imul
xor
fistpl
addl
inc
jecxz
and
dec
test
fistl
pop
mov
cwtl
movsl
cltd
and
jo
or
andl
jl
cmp
add
lcall
dec
cmp
pop
adc
push
lcall
mov
sti
outsb
loop
sub
int3
pusha
dec
push
or
js
je
rolb
jnp
inc
sarb
mov
out
fcmovne
pop
xor
jns
mov
mov
adc
xor
ud1
jns
fstps
xchg
sbb
test
dec
cmp
sbb
mov
mov
pushf
fimull
mov
lods
rcrl
adc
sub
flds
or
cmp
outsl
nop
xchg
sbb
dec
sub
fistl
stos
mov
adc
int
or
dec
cmp
cmp
mov
inc
xor
mov
xor
sbb
iret
adc
adc
sbb
jo
mov
outsl
addr16
cltd
stc
lods
stos
push
cmp
scas
push
pop
xor
push
out
cmp
add
mov
call
mov
lock
xchg
sub
movsb
sti
or
push
cmp
mov
mul
and
mov
stos
clc
test
shr
test
mov
lcall
dec
loope
pusha
dec
pop
insb
xor
adc
lret
mov
mov
mov
push
cmp
dec
cltd
mov
ja
jmp
jmp
jns
dec
and
xlat
fcmovu
cwtl
cmp
enter
push
call
or
jns
push
fiaddl
cmp
cli
dec
and
pop
or
xlat
mov
ds
mov
lds
fdivrs
mov
mov
sbb
pop
add
ret
je
std
xlat
out
jnp
xlat
jg
lret
lock
shl
dec
fisttpl
and
mov
mov
sbb
xor
lods
mov
mov
dec
push
cmp
test
pusha
lret
subb
not
add
xor
push
cli
push
mov
pusha
cs
dec
cmp
sti
imul
mov
pop
cmp
mov
pop
lret
adc
or
inc
pop
sbb
addl
push
dec
xchg
sbb
divl
sbb
or
pop
sbb
jl
jp
cmc
mov
aam
fcompl
pop
push
leave
jl
cmp
stos
notl
pop
adc
cmp
jl
push
sbb
pop
sub
inc
mov
xlat
jmp
xor
andb
dec
fsts
or
xchg
sbb
sub
cmp
cmp
pop
iret
jnp
sub
or
push
xlat
mov
pop
sub
adcb
xchg
nop
xchg
pop
jbe
xlat
les
fistl
dec
add
dec
aad
pop
cmp
cmp
lcall
rcr
cmp
je
or
pop
mov
mov
push
out
mov
xchg
xchg
andb
ret
sub
jmp
out
cmp
mov
mov
push
nop
or
jo
pusha
jmp
jl
mov
add
xlat
or
lret
jns
sti
cmp
sub
std
jmp
sub
sub
roll
push
xor
dec
ljmp
je
cmpb
push
cmp
cmp
sbb
rcr
scas
out
lea
pop
sub
jnp
dec
testb
adc
mov
fsubrs
mov
add
cwtl
mov
adc
pop
push
repz
add
fxch
cmp
jns
sti
xlat
popa
mov
ss
or
dec
cmp
in
mov
test
outsb
jecxz
sbb
ret
stos
mov
push
or
test
leave
negl
dec
outsl
and
stos
sub
cmp
sbb
xlat
fmuls
fcmovne
shlb
dec
lret
ror
sahf
xchg
or
ret
jge
jb
xlat
xchg
sbb
cmp
or
cmp
cmp
ficoms
mov
mov
push
dec
cmp
or
add
pop
cmp
mov
cmp
mov
insl
enter
nop
scas
stc
cmp
push
mov
cmpsl
xchg
jns
mov
divb
push
test
stos
dec
fcmovne
pop
aad
inc
adc
cli
imul
pop
push
jnp
or
add
mov
ficompl
xchg
xchg
ficoms
cmp
inc
sbb
cmp
dec
push
clc
xlat
or
mov
mov
idivl
fxch
pop
sbb
jae
imul
dec
ret
stos
jmp
pop
adc
cmp
pusha
enter
jo
sbb
enter
and
jp
inc
add
js
xor
stc
cmp
sbb
mov
mov
mov
sbb
add
sub
rorl
mov
xor
orb
push
pop
or
sti
test
fildl
fstps
push
jno
pop
cltd
push
or
repz
add
sti
outsl
js
sub
out
or
or
xchg
xor
cmp
or
cmp
or
dec
or
seta
or
adc
or
adc
aam
or
and
bound
sub
jno
mov
push
fwait
xlat
ror
sar
adc
sub
jb
jmp
or
jp
mov
sbb
out
jns
push
xlat
repnz
cmp
sub
xor
inc
cltd
sbb
mov
mov
mov
dec
add
lret
sarl
jnp
adc
lcall
rclb
ljmp
jp
fs
shr
mov
sbb
xor
pop
jo
jns
cmp
stos
mov
ss
les
push
mov
ret
fisubrl
dec
sbb
cvtpi2ps
adc
lret
jnp
fcoms
sbb
shlb
cmp
fwait
or
gs
mov
cmp
dec
pop
rcll
mov
add
mov
or
mov
xor
inc
sbb
clc
cmp
aam
mov
mov
mov
xor
mov
push
sbb
add
or
sahf
out
push
sti
addr16
cmp
sub
mov
dec
sbb
out
dec
mov
mov
leave
jne
or
movsb
cmp
pop
adc
adc
jp
or
fdivs
jecxz
ret
cmp
out
and
or
add
es
mov
ljmp
adc
mov
pop
cmp
inc
leave
or
add
dec
push
mov
inc
adc
or
cmp
testb
jo
xor
pop
cmp
or
sbb
js
fstpt
ss
push
jmp
fcom
fucomi
adc
dec
cmp
sbbb
clc
ss
cli
adc
pop
xlat
fadds
loopne
inc
and
cwtl
or
xor
or
xor
mov
pop
fildll
rclb
push
add
repz
inc
sub
xchg
pop
or
add
xor
orl
pop
inc
adc
cmp
inc
sub
pop
and
inc
or
xor
test
xor
jecxz
rcrl
sbb
mov
dec
outsb
ljmp
sub
cmp
sub
jns
stos
sbb
jnp
add
and
or
dec
rcrb
jnp
adc
cmp
and
mov
fcomps
jne
fsincos
cmp
lds
sbb
lods
jnp,pt
mov
ljmp
fwait
mov
pop
sub
lds
mov
ja
add
dec
mov
adc
add
push
sti
ret
mov
ss
push
lcall
or
in
test
sub
sub
dec
mov
mov
int3
add
add
pop
or
dec
push
mov
sbb
notl
sti
mov
or
stos
dec
add
repz
adc
stos
mov
xlat
fcomp
and
fwait
int3
subl
out
adc
shr
stos
les
adc
rcl
pop
jnp
sub
jno,pn
adc
xor
sub
sti
jmp
lock
sbb
js
pop
roll
push
imul
push
rorb
loope
inc
mov
cmp
adc
push
cmpsl
xchg
adc
sub
dec
loop
adc
push
or
out
xor
aas
add
mov
mov
xlat
pop
mov
pop
sub
push
mov
jecxz
pusha
in
lret
nop
repz
sbb
pusha
pop
sbb
inc
adc
or
dec
push
jp
xor
fldcw
inc
popa
xlat
js
xchg
or
inc
mov
fldt
cltd
pop
dec
or
jp
cmp
push
fcoms
mov
in
or
mov
inc
clc
sbb
add
inc
leave
pop
addr16
inc
inc
sbb
jl
inc
pop
sbb
pop
stos
mov
xlat
mov
dec
repz
cmp
fisttpl
fildll
in
mov
pop
jge
pop
sbb
in
sub
inc
sub
aad
pop
cmp
inc
cmp
rcrl
add
fninit
shl
lds
dec
fstpl
mov
or
jmp
mov
xchg
add
pop
rol
gs
in
lds
lcall
inc
maxps
dec
mov
xchg
testb
aad
mov
test
or
xlat
aaa
loope
repz
out
ljmp
dec
add
cmp
repz
cli
iret
adc
hlt
sbb
jae
scas
xchg
jge
imul
cmp
or
and
add
sub
lret
xchg
inc
cmc
pop
push
fwait
sbb
ss
or
dec
fwait
add
cmp
ss
cmp
sub
sar
sub
dec
pop
cmp
dec
stc
shl
xchg
cwtl
cmp
mov
cmp
xlat
ja
jp
dec
mov
fsqrt
cmpsl
js
in
lahf
stc
rcrl
xchg
sti
fdivrs
js
jl
inc
mov
cli
mov
das
push
pop
stc
pop
push
cwtl
not
push
pop
lea
jmp
jl
jecxz
outsl
and
imul
lds
mov
push
ficompl
in
dec
sbb
subb
mov
iret
push
sti
sbb
test
push
pop
jmp
mov
fs
dec
das
inc
ja
or
push
enter
call
push
push
push
add
mov
xchg
adc
mov
xor
lret
cmp
xchg
rcll
lea
push
adc
sub
xor
sahf
mov
stos
cli
xor
fcmovb
in
mov
mov
enter
cli
mov
cmp
lcall
xchg
jecxz
xchg
mov
nop
rcrb
cmp
xchg
sbb
stc
mov
dec
xorl
mov
mov
pop
pop
dec
sub
mov
lahf
jnp
mov
sub
pop
in
mov
cltd
push
rcrl
xor
lcall
daa
dec
mov
mov
into
js
scas
cli
cwtl
aas
or
adc
fmuls
mov
add
inc
and
mov
jne
add
fcmovnu
subl
inc
dec
xchg
lods
inc
xor
or
or
mov
push
cld
jnp
mov
aad
nop
jl
pop
fs
mov
adc
mov
pushf
adc
inc
mov
pop
rcll
in
pop
das
or
push
sti
or
inc
pop
pop
xorb
imul
and
pop
jae
imul
push
inc
mov
test
je
sbb
xor
push
dec
ret
ret
cmpsb
cmpsb
sarb
jg
add
mov
pop
mov
jp
clc
test
addr16
mov
into
or
lcall
add
add
jmp
cltd
outsl
add
aaa
adc
fcompl
es
sbb
imul
lea
ja
cmc
stc
bt
pusha
imul
test
movw
pusha
add
mov
lea
jmp
add
sahf
jmp
das
cmp
test
cltd
cwtl
int
les
inc
sbb
mov
cs
adc
push
imul
dec
imul
test
bound
lds
les
xchg
mov
popa
xor
jecxz
mov
inc
in
jmp
data16
in
adc
mov
sbb
hlt
imul
movsbw
pushf
mov
pusha
mov
push
pusha
jmp
cmc
sub
jmp
lea
jne
stc
shld
adc
add
mov
stc
bt
sub
btc
cmp
lea
mov
mov
pusha
sub
test
stc
pushl
popl
cmp
cmc
cmp
movb
cmp
call
aad
pop
xor
or
pusha
testb
sti
mov
fnstenv
push
pusha
mov
xor
fbld
jne
mov
sarb
cmp
push
mov
push
xor
test
lea
lea
out
into
pop
insl
xorl
sub
loop
pop
xchg
movsl
adc
add
and
mov
sbb
js
inc
push
pop
cmp
dec
jl
cmp
cmp
jp
sub
sub
shr
mov
cmp
lods
jb
xor
fadds
push
or
popf
outsl
pushf
sub
loopne
or
in
sahf
popf
sub
int3
push
popf
mov
out
pop
cmp
sbb
adc
cs
mov
pop
add
enter
xchg
aaa
stos
insb
pushf
pop
aad
push
push
sub
mov
movsl
into
dec
inc
neg
aas
stos
imul
mov
das
inc
test
popf
cmpsl
lods
arpl
jns
popf
xor
lods
rol
out
mov
or
push
xor
add
push
mov
xor
f2xm1
add
dec
testl
or
leave
sti
jp
mov
cmp
and
ljmp
cmovo
in
xchg
cmp
sbb
cltd
mov
push
int
mov
pop
xor
inc
xchg
adc
rorl
mov
sub
add
fucomip
cltd
mov
jg
xor
xor
rcpps
sbb
jbe
sbbl
adc
loop
xor
loope
mov
testb
push
cld
cld
sbb
dec
push
mov
std
add
faddl
enter
jmp
int
movsl
test
push
movsb
jb
or
jle
and
jp
and
adc
outsb
push
jg
dec
push
pop
out
sub
inc
cli
xor
push
cmp
jle
fwait
out
lret
dec
mov
add
test
or
pop
test
adc
cli
inc
enter
ret
inc
setns
push
inc
inc
ror
lea
jbe
rol
shl
sub
jmp
pusha
mov
dec
popf
fiadds
imul
mov
pusha
iret
adc
pop
mov
in
js
pop
push
jge
pop
or
mov
std
adc
mov
loopne
mov
cld
sahf
lds
bound
decl
jb
shrl
repz
ljmp
mov
mov
mov
lods
rclb
pop
nop
ficompl
addr16
push
das
call
test
dec
insb
out
lahf
outsb
rcrl
loope
loope
imul
rcl
adc
sub
mov
test
xor
mov
inc
inc
shr
mov
pusha
test
clc
mov
test
neg
call
pushl
mov
pushf
pushl
pushl
lea
call
pusha
mov
pushf
movb
lea
jmp
arpl
fs
xor
cs
insb
add
test
into
and
rorl
lea
dec
push
insb
xchg
pushf
das
xchg
add
jbe
xchg
sub
out
push
outsl
xor
sbb
xchg
loop
mov
adc
push
xchg
fidivrs
fwait
dec
aaa
pop
loope
pop
dec
sti
stos
sbbl
cmc
adc
xchg
test
test
push
fs
imul
lea
je
clc
pusha
cmc
call
enter
shrl
jnp
or
dec
xadd
insl
or
aad
pop
and
push
or
jbe
pop
xchg
mov
fdivrl
out
insl
fildl
fcompl
sbb
roll
push
jmp
fdivr
xor
shlb
xlat
sub
and
inc
nop
aam
inc
les
cs
test
and
pop
packsswb
jg
cli
and
movsl
pushf
jo
sbb
lfs
aaa
shrl
insl
das
push
pop
push
mov
in
pop
fildll
sqrtps
fwait
aad
xchg
jmp
adc
loopne
jnp
in
cs
addr16
dec
xchg
pop
jno
je
jg
int
jae
push
imul
bswap
ficoml
mov
mov
pop
arpl
mov
imul
inc
inc
call
popf
lret
cmp
jno
jae
out
jo
inc
adc
xchg
aad
jmp
aam
call
jnp
outsl
pusha
test
mov
sub
fimuls
sbb
addr16
xor
ficomps
mov
js
bound
jp
aad
sub
adc
cli
and
cli
icebp
and
sub
push
xor
dec
sbb
ror
popa
imul
mov
cli
test
adc
mov
inc
fdivrl
mov
loope
xchg
lret
sub
push
push
and
lock
pop
les
call
out
mov
jns
into
pop
in
dec
ljmp
sbb
adc
fildl
push
aam
popl
add
adc
pop
orb
in
dec
inc
aad
popf
jns
push
pop
ljmp
cli
subb
in
push
pop
out
or
push
mov
leave
lahf
cli
mov
idivl
shlb
sbb
inc
lods
adc
shrb
shrb
repnz
and
leave
cmovl
sub
add
xor
dec
xor
sbb
jns
data16
cmp
test
inc
cmpsb
js
fs
mov
pop
test
shl
call
sbb
sbb
or
jle
js
push
iret
and
idivl
je
xchg
dec
je
pushf
xchg
xchg
out
out
popf
leave
je
xchg
jecxz
jnp
inc
cmpl
mov
and
mov
mov
hlt
add
aaa
ljmp
icebp
imul
imul
out
ja
imul
es
int3
mov
jle
push
cmp
lahf
cmp
push
cmp
test
imul
lea
call
pushf
pusha
push
mov
pushf
mov
lea
jmp
add
inc
gs
outsl
fs
gs
imul
add
mov
push
sub
cmc
push
sti
jp
test
mov
bnd
xor
gs
xor
insl
fisubrs
aad
cmp
mov
cmc
leave
mov
int
rcll
xchg
mov
leave
mov
aad
pop
lock
std
loope
ss
jg
pop
sbb
sub
aaa
out
xor
mov
or
jge
js
aad
jb
cmpsl
mov
hlt
lret
aam
pop
jo
mov
sub
pop
ljmp
imul
pushf
mov
neg
mov
inc
bt
rol
jmp
push
lock
std
std
test
imul
jnp
lret
cs
and
pop
shll
xor
iret
mov
in
mov
inc
aam
push
lret
add
out
and
test
or
jmp
dec
push
movsb
inc
test
in
xchg
push
push
mov
fildl
andb
jmp
pop
fimull
fs
call
cmc
bt
cmp
jmp
shrd
push
rcl
neg
aaa
sbb
mov
not
sub
sar
ror
aad
or
push
aam
push
sbb
cmc
das
push
jmp
loop
cmp
jnp
fwait
sub
ss
mov
jno
das
sbb
test
loope
xchg
xchg
sub
and
inc
dec
repz
int3
cmpsl
push
fmulp
inc
pop
mov
ret
aas
les
not
lahf
jecxz
sbb
xchg
adc
clc
sub
outsb
int3
cmp
sub
sbb
ret
mov
cmpsb
inc
xchg
imul
adc
xchg
popf
sahf
fwait
cld
clc
or
push
imul
repz
es
cmp
or
out
jl
push
lds
dec
push
int
adc
xchg
fnstcw
mov
in
push
mov
lret
mov
dec
adc
stos
sbb
fisubrl
xchg
push
mov
pop
xchg
cwtl
xchg
xor
es
sti
pop
sub
sub
shrb
mov
mov
dec
mov
imul
push
scas
shrl
scas
cmpsl
icebp
xor
popf
add
inc
xchg
in
cld
imul
rcr
repnz
inc
out
hlt
inc
scas
jae
aam
leave
inc
sub
movsb
pushf
lea
je
shrd
inc
not
dec
add
not
dec
sub
cmp
bsr
shr
push
lea
mov
and
cmp
add
bt
bsf
mov
add
neg
stc
call
cli
out
xor
hlt
fiaddl
frstor
mov
jle
push
fbstp
xchg
das
fwait
cmp
out
loope
sbb
inc
xor
stc
test
sarb
jne
pop
nop
std
mov
mov
adc
jge
dec
popf
cltd
pusha
mov
cs
in
mov
rcrl
push
testb
dec
fidivrl
rcrb
rcrb
and
int
sub
shrb
xor
inc
or
push
ljmp
xor
popa
cli
dec
lock
add
jmp
out
mov
mov
daa
aam
cwtl
and
pop
push
and
iret
cmp
in
mov
lock
fwait
por
out
inc
jne
push
jbe
shlb
mov
adc
cwtl
push
or
xchg
cwtl
jae
mov
ret
or
lods
fildll
imul
xchg
out
or
sbb
lock
enter
ret
div
movsb
lcall
pop
jecxz
cs
ds
push
jo
outsl
push
xor
jp
out
pop
loopne
add
lock
dec
sarl
mulb
inc
mov
call
xchg
cwtl
jo
add
pop
ss
cltd
cmc
into
out
inc
sbbb
cmp
out
inc
add
jg
xor
pop
les
mov
xlat
sbb
repnz
bt
mov
neg
setl
mov
stc
repnz
push
pusha
lea
jne
bswap
cwtl
bswap
movb
pushf
mov
movb
pushf
mov
pusha
lea
call
jmp
lea
loope
gs
jg
inc
xchg
mov
xchg
adcb
pushl
adc
ja
adc
xchg
xor
ja
ljmp
into
xor
add
dec
cmp
shll
jg
mov
mov
inc
and
sbb
sub
sbb
dec
mov
sub
and
lea
jne
not
push
pop
movb
jmp
ds
cmpsb
fdivl
inc
lods
push
bound
jb
decb
test
jg
xchg
and
pop
mov
jbe
movsl
sbb
arpl
call
and
scas
clc
outsl
xor
jnp
leave
push
adc
rorl
jl
sti
push
loopne
lahf
cs
jl
mov
std
cmp
je
mov
int
cs
movsl
jmp
inc
fidivrl
mov
and
bound
ljmp
insl
sti
jnp
mov
xlat
faddl
cwtl
push
push
cwtl
lea
pushl
pusha
push
movl
push
call
mov
test
call
push
cmp
pushf
movw
lea
ja
cmc
imul
push
movb
movb
pushf
add
pushl
lea
jmp
jmp
add
push
dec
inc
gs
jo
arpl
insb
inc
outsl
insb
fs
popa
je
inc
add
leave
pusha
movl
pushf
lea
jmp
pop
xor
pusha
shr
jmp
push
inc
add
xor
xchg
neg
lea
sar
mov
sub
mov
stc
push
pushl
xchg
dec
mov
cmp
sub
call
add
cmc
mov
fs
adc
or
stos
push
cltd
pop
lds
outsb
pop
sbb
test
cs
mov
xchg
sbb
push
and
lods
repz
push
mov
sub
xchg
jmp
dec
add
arpl
popa
and
cli
iret
lret
mov
into
xchg
test
stos
jno
lods
dec
enter
fildl
push
out
ds
xchg
loop
ljmp
jl
mov
outsb
leave
sbb
jle
sub
out
loop
in
fiaddl
mov
stos
push
pop
ret
sbb
leave
mov
test
mov
xchg
mov
mov
jmp
lret
inc
sub
icebp
cs
mov
stos
roll
xlat
cmpsb
outsb
out
and
in
cltd
xchg
popf
push
test
inc
data16
lcall
pop
xchg
mov
sub
xchg
fmuls
cwtl
and
fs
call
in
jecxz
inc
push
imul
add
pop
lea
push
or
cmp
das
imul
xlat
mov
push
aad
lcall
insb
sub
hlt
scas
addr16
cwtl
xchg
int
xlat
bound
js
or
arpl
push
mov
jne
pop
insl
paddusw
repz
add
imull
adc
lret
xchg
ss
je
lret
or
cmpsl
mov
jp
cmp
arpl
push
mov
mov
inc
jmp
fwait
pop
jl
cmp
xor
stos
je
nop
rcr
movsb
push
inc
sub
es
pop
and
fadds
fstps
imul
adc
xchg
pop
lahf
call
push
cli
fisttpll
fldcw
push
add
jmp
aaa
inc
rcr
mov
ss
aad
je
stos
imul
inc
adc
xor
and
mov
jecxz
jo
int3
add
sbb
mov
push
shr
mov
pop
enter
repz
je
and
fsubrl
dec
mov
imul
movsb
pusha
aam
and
sbb
enter
pop
js
xchg
fcompl
jns
dec
cmp
loop
bound
shll
cmp
mov
xchg
push
dec
enter
sbbl
sbb
sub
addr16
xlat
filds
pop
rorb
push
loope
cmp
sbb
pop
adc
aam
push
cmc
sub
push
hlt
fwait
mov
xor
mov
sahf
sbb
jmp
cld
aad
inc
std
mov
repz
mov
add
out
ret
cli
aad
inc
mov
dec
xor
xchg
add
adc
xor
stos
jns
xlat
xchg
xchg
pop
loop
xchg
cmpsb
xor
xchg
repz
stos
pop
push
dec
addb
pop
in
shlb
adc
and
push
in
loope
mov
adc
imul
insb
push
int
loope
inc
scas
dec
cmp
add
popf
mov
add
sbb
push
repz
adc
xchg
inc
add
out
mov
push
aad
imul
bswap
pushf
pusha
pushf
mov
movzbw
mov
mov
lea
mov
jmp
stos
not
call
les
nopl
loopne
mov
mov
outsl
jge
movzwl
push
pop
jae
and
arpl
and
xor
xlat
fs
aam
dec
divl
jno
or
inc
mov
mov
stos
imul
xor
dec
and
fcoms
xchg
outsl
inc
ret
push
jecxz
adc
arpl
lea
pop
add
push
sti
test
out
sarl
imul
xchg
jl
inc
imul
cmpsb
inc
jge
add
jge
fstps
out
test
lock
sbb
mov
call
out
cs
xor
mov
aad
adc
pop
rcrb
xor
ja
cli
or
push
aaa
int
jle
fdivs
dec
adc
mov
mov
je
add
jo
testl
cmpsl
mov
xor
xchg
lods
pop
jbe
sbb
push
cmp
sbb
cmpsl
call
push
push
lahf
fwait
pop
adc
or
ljmp
or
aad
movsl
mov
mov
fidivrs
nop
pusha
movl
jmp
add
jmp
dec
nop
mov
jp
mov
jnp
movsl
into
sbb
dec
neg
mov
push
cmpsl
mov
xor
cmp
lahf
pop
push
loop
test
and
mull
inc
cmp
pop
not
scas
adc
lcall
fwait
arpl
outsl
orb
dec
mov
mov
out
add
iret
jne
cs
outsb
loope
arpl
and
jnp
jl
hlt
pop
fmuls
arpl
lcall
fistl
jb
mov
push
pushf
push
add
sub
cmp
jmp
mov
adc
mov
aaa
inc
loop,pn
jg
addr16
jo
and
imul
repnz
pop
aaa
ret
mov
inc
je
rcl
popa
push
xchg
sahf
or
mov
add
aas
popa
lock
repnz
aad
adc
jge
into
jo
mov
sub
in
xor
cwtl
pop
icebp
pop
popa
imul
adc
dec
ljmp
popa
dec
cwtl
in
out
testb
push
sbb
xor
mov
scas
ja
aad
and
bound
mov
push
sub
adc
cmp
mov
cmpsl
push
sbb
jbe
in
clc
add
pusha
dec
in
xchg
xor
push
out
negb
xor
adc
push
mov
and
mov
jmp
incl
loopne
arpl
dec
clc
movb
movw
lea
jmp
fwait
inc
and
and
lea
mov
fisubrs
cmpl
in
add
popa
jp
adc
jecxz
mov
lods
push
cmpsb
shll
cmp
add
xor
es
xlat
cwtl
cmp
rorb
ficompl
pop
jl
dec
dec
push
mov
mov
clc
fnstcw
ss
jns
mov
and
imul
sub
adc
push
mov
dec
push
into
test
inc
addl
jp
cmc
sub
sub
fisttps
test
ja
xor
cmc
sub
rol
neg
sub
bt
add
call
mov
ss
inc
push
es
mov
mov
ret
and
sbb
adc
ljmp
push
xchg
ret
pop
cmp
mov
pop
rep
ret
xchg
cli
sbb
pop
mov
mov
in
fldl
mov
arpl
outsb
mov
nop
mov
sub
scas
cmp
push
clc
push
ror
bt
cmp
neg
push
movb
movw
inc
pushf
rol
stc
cmc
sub
pusha
jmp
lahf
cmp
sbb
pop
mov
rorb
addr16
popf
pop
jge
cwtl
cmp
sub
jmp
pop
mov
cmp
push
cli
mov
repz
inc
xchg
orb
ljmp
jg
movsl
mov
pop
push
dec
xchg
icebp
arpl
ret
mov
add
arpl
orb
fwait
popa
push
add
dec
sub
cs
dec
aaa
inc
mov
cmpsb
xchg
sbb
adc
es
addr16
imul
jge
cltd
sbb
repz
cmp
cmpsl
cmp
in
mov
mov
and
lret
rolb
in
pop
dec
dec
jbe
outsb
stos
xor
leave
jg
or
sbb
icebp
mov
jne
out
fiaddl
push
mov
lret
push
and
or
or
xor
or
loop
movsb
sbb
fsubrs
stos
loopne
or
pop
mov
repnz
jmp
sub
fsubrs
std
and
pop
aad
jl
push
sub
jae
mov
imul
cli
cmp
nop
xchg
scas
and
sbb
enter
mov
inc
lds
jb
loop
test
lret
and
mov
daa
add
mov
mov
loope
sub
inc
call
mov
iret
add
push
pop
les
lahf
scas
addr16
push
lea
sbb
or
dec
repnz
fcomip
cmpsb
mov
iret
sub
adc
or
jb
mov
fidivl
and
lds
mov
scas
sbb
sbb
lds
sahf
jnp
mov
push
in
hlt
das
inc
dec
sub
adcb
lcall
sarl
in
xor
jecxz
test
jmp
add
shll
adc
dec
xchg
cld
jo
push
mov
roll
or
adc
xlat
nop
dec
fiaddl
pushf
lahf
pop
fsubs
adc
pop
imul
movsl
jl
inc
pop
lahf
mov
push
out
imul
add
mov
add
add
and
add
add
or
add
ret
push
das
add
add
add
add
add
shll
add
add
push
ja
add
add
add
das
add
add
add
or
add
add
add
and
add
add
cmp
add
add
add
add
add
add
add
add
addb
add
repz
and
add
add
ds
sbb
add
add
movsb
jns
add
mov
add
push
das
add
push
add
mov
add
add
add
btc
aaa
xchg
mov
and
mov
jmp
lds
data16
push
inc
lods
and
pop
sub
mov
xchg
add
lcall
jp
or
out
and
sbb
or
fnstcw
mov
adc
pop
dec
int3
xor
loop
jmp
aam
jl
xchg
imul
sbb
add
sbbb
fdivs
hlt
shlb
stos
mov
sbb
jbe
or
ret
insb
loop
adc
orb
xor
jg
rcrl
addb
cs
gs
in
inc
mov
sbb
and
sub
test
insb
mov
push
push
mov
imulb
pop
cwtl
cmp
jmp
sbb
scas
xor
dec
ret
or
ss
pop
out
xchg
test
loope
add
jo
in
daa
dec
faddl
cmp
outsl
in
add
add
cli
push
or
inc
or
lret
ja
bound
in
adc
jge
outsl
pushl
xchg
lods
push
add
test
daa
push
sbb
fistl
leave
repz
rcr
subl
push
sbb
sub
pop
mov
adc
pop
loopne
cmp
ret
insb
jbe
scas
cmp
hlt
pop
dec
cmp
adc
mov
fs
xchg
jge
sub
fcoml
popf
mov
sub
adc
ret
xchg
mov
add
rcrb
insl
inc
sbb
into
jnp
imul
and
std
fldl
into
lcall
jns
out
sub
adc
xchg
or
repnz
lock
fcoml
js
dec
aas
aad
cwtl
je
push
and
int3
imul
mov
xchg
loope
dec
lods
lods
mov
dec
shlb
movsl
push
pop
lahf
scas
daa
mov
cwtl
xchg
or
aas
pop
cmpsb
inc
lahf
pop
out
push
sbb
mov
js
cmc
xchg
mov
inc
imul
pusha
push
lea
jne
movzbw
xor
rcr
mov
cmc
add
adc
mov
mov
bt
clc
call
call
jmp
mov
jbe
and
mov
mov
or
cs
xchg
gs
lods
sbb
sbb
call
add
popa
xchg
fprem1
mov
in
movsl
rolb
xor
cmova
incl
lds
pop
fisubl
sbb
insb
pusha
je
xor
push
dec
sbb
aas
je
shr
mov
sub
lods
ss
push
mov
jle
jl
adc
pushf
fbstp
fs
and
sbb
nop
bound
mov
inc
cmpsb
sub
data16
repnz
sub
fnsave
enter
sbb
into
xchg
and
dec
stos
pop
jno
pop
mov
sbb
xchg
xor
mov
mov
outsl
inc
xchg
cs
xchg
fiaddl
es
sub
in
adc
and
inc
mov
pushf
pushf
push
pushf
pushl
ret
pushf
jmp
sbb
test
cs
ret
add
scas
cmp
add
lcall
xchg
or
inc
pop
sahf
jge
sbb
push
and
fldt
sbb
in
int
orb
xchg
inc
rorb
jmp
push
and
pop
mov
jne
mov
xchg
loopne
sets
cmpsb
scas
and
push
andnps
or
add
jb
mov
inc
pop
hlt
fldcw
call
sub
mov
movb
lea
jne
call
int
mov
cmp
add
dec
fcos
roll
dec
lcall
rdtsc
add
fcoml
inc
mov
mov
aas
imul
dec
testb
mov
add
sub
jae
cmpsb
stc
fimuls
cmp
fimuls
fcmove
es
aaa
sub
xchg
out
cmp
in
sub
push
lret
xor
cs
push
pop
hlt
nop
incb
fistpll
cmp
dec
cmp
jbe
int
pop
dec
xchg
icebp
sbb
sub
sbb
dec
ja
sahf
ret
xlat
popf
mov
xor
mov
loopne
cmpb
xchg
inc
loopne
mov
test
data16
add
xchg
les
cwtl
jg
push
add
sub
mov
sti
inc
ljmpw
push
add
add
inc
cmc
hlt
lret
iret
push
sbb
rcll
and
dec
scas
imul
stos
push
mov
dec
ret
mov
inc
jecxz
push
test
sti
lret
and
mov
push
outsb
adc
fdivs
inc
stos
out
add
sar
cmp
jbe
movsl
mov
add
pusha
imul
jbe
adc
jecxz
jns
mov
cmp
jle
xchg
shlb
mov
push
lret
sub
mov
sahf
push
xchg
add
in
mov
mov
aam
iret
rcrl
xor
jmp
in
push
popf
lock
int3
mov
movsl
das
outsl
jmp
dec
in
test
pop
scas
stc
in
sbb
jle
pop
nop
imul
jmp
lods
xchg
aas
jg
cmp
fbstp
cld
push
leave
mulb
push
movsl
out
xchg
mov
xchg
push
inc
lock
inc
jne
test
aam
fwait
and
xchg
movsb
test
popf
mov
test
bound
sbb
mov
fidivrl
cmpsl
mov
mov
rcll
iret
imul
iret
sbb
xchg
and
outsb
icebp
and
bound
invd
mov
icebp
inc
test
iret
loopne
dec
push
and
sbb
lret
inc
pop
aas
xchg
das
test
ljmp
hlt
pop
jno
loop
jae
out
sbb
enter
xchg
mov
pop
divps
mov
mov
int
pop
movsl
aam
inc
in
test
mov
inc
pushf
fiaddl
mov
orl
cli
lahf
xchg
pop
fadd
pop
lods
mov
mov
aam
cwtl
inc
and
das
inc
inc
mov
cmp
cs
mov
inc
sub
sub
leave
push
rclb
and
jb
jmp
call
mov
cwtl
pop
lea
add
imul
fstpl
into
aaa
jne
and
and
sbb
push
es
jg
xchg
pop
fidivrs
cmpsl
mov
jne
fwait
xor
or
lods
jne
and
arpl
mov
jae
mov
xchg
mov
push
and
andb
leave
imul
mov
and
pushf
jecxz
mov
shr
les
in
push
das
mov
addb
xchg
or
xor
movsl
ficompl
cmpsl
mov
popa
fcoml
push
test
out
sub
xor
xor
inc
jecxz
or
or
mov
mov
mov
fcmovbe
lahf
dec
out
pop
mov
ret
pop
fdivrs
dec
leave
inc
enter
mov
in
fadds
ret
pop
into
dec
pusha
xchg
psubsb
enter
mov
sbb
cmpsb
int3
pop
pop
in
int
leave
add
aad
xor
int
std
in
lods
cvtps2pd
add
xorl
mov
jmp
mov
add
incb
add
mov
daa
pop
sti
mov
int
fistl
lcall
cltd
mov
xchg
push
fimuls
icebp
inc
dec
and
lret
insb
sbbb
add
mov
adc
aas
cwtl
mov
mov
mov
mov
pusha
mov
xor
js
cs
jno
add
shlb
inc
push
cmp
scas
adc
pop
adc
push
into
and
cld
imul
rcll
mov
popf
cmpsl
outsl
in
test
cmp
cmp
cmp
or
pop
outsl
push
xor
ret
lods
xor
cmp
push
mov
bound
addb
adc
mov
movsl
add
in
adc
mov
fcmove
sub
outsb
xchg
xchg
fs
in
imul
and
sub
bswap
or
btr
inc
lea
add
stc
bsr
sar
rcr
mov
call
jmp
jmp
call
dec
push
ret
jne
mov
and
fstps
mov
mov
mov
dec
punpckldq
mov
stc
xchg
std
adc
xchg
mov
mov
loope
mov
sahf
cmp
je
daa
mov
mov
inc
in
mov
popf
cmpsb
jl
dec
into
push
xchg
mov
jle
and
pop
lock
call
xchg
cmp
aad
out
xchg
adcl
rclb
cmp
and
push
rol
cltd
push
fisttpll
cmp
inc
xor
aaa
lock
mov
push
rorl
jno
xorl
jle
mov
cwtl
push
divb
data16
mov
int
adc
xor
jge
outsb
mov
pop
xor
and
adc
imul
inc
loop
push
pop
ds
dec
mov
ds
jne
pop
out
sub
sub
gs
mov
repnz
adc
jmp
stos
jg
pusha
pushf
mov
push
imul
mov
pop
push
lahf
dec
push
mov
pop
xlat
je
clc
mov
xchg
inc
sbb
mov
into
sbb
xlat
mov
inc
fidivrs
scas
imul
leave
mov
or
loopne
rorl
and
jmp
xor
scas
in
and
sbb
imul
jnp
in
test
out
data16
pop
subb
pop
and
and
inc
sbb
cld
out
inc
leave
cmpsl
jo
adc
sbb
cmp
dec
sub
xchg
cmpsl
loope
sub
xchg
mov
sbb
mov
fildl
test
adc
rolb
and
mov
or
mov
inc
xor
mov
movsb
sbb
imul
xchg
jge
xor
popf
gs
or
xchg
mov
out
xchg
loopne
jb
int
inc
cmp
xor
daa
add
cmp
push
icebp
mov
sarl
mov
outsl
adc
mov
mov
call
sub
das
int
in
ljmp
ja
xchg
pusha
inc
cs
sahf
data16
adc
fwait
pop
or
cmp
fstpl
decl
fs
not
imul
adc
outsb
pop
xor
imul
in
xchg
stc
jmp
ja
scas
rolb
xchg
jg
mov
insb
les
repz
jg
pop
push
inc
mov
gs
vorps
inc
arpl
ror
pop
xor
adc
ds
sahf
xchg
push
stc
cmpsl
sbb
repnz
cmp
lds
cltd
roll
dec
add
mov
movsl
pop
pop
mov
inc
jb
sub
dec
cld
cli
cmc
fisubl
xchg
mov
jle
fistl
push
sarb
roll
sbb
imul
adc
sub
push
add
push
jmp
mov
lock
push
repz
mov
dec
xchg
fadd
aas
mov
inc
pop
lods
adc
mov
adc
addr16
jnp
sbb
outsb
pushf
mov
cltd
push
insl
ficompl
jmp
out
lods
dec
imul
icebp
in
push
imul
test
pop
xor
icebp
xor
pop
pop
cld
pop
sbb
lock
inc
sbb
sub
mov
in
jmp
pop
sub
jne
shl
jno
mov
in
cld
and
and
or
cmc
imul
in
stc
pusha
and
lods
or
inc
cs
xor
add
push
test
stos
je
sub
mov
sub
std
mov
inc
mov
fidivrl
scas
scas
adc
mov
sub
xor
cmp
shl
xchg
mov
add
inc
and
pop
or
imul
testb
sbb
clc
add
push
mov
jp
adc
cli
mov
xor
xchg
push
leave
inc
insl
inc
mov
sbb
negl
jl
repnz
nop
test
cmp
popa
mov
adc
inc
fdivrs
in
dec
test
pop
jg
mov
xchg
pop
mov
scas
xor
add
and
arpl
test
out
out
xchg
stos
adc
ds
pusha
mov
repz
push
lret
sub
pop
sub
jb
test
mov
add
mov
mov
in
mov
lock
mov
cwtl
pop
loop
repz
xor
mov
aaa
cs
imul
jp
orb
rcrb
in
fdivs
test
mov
in
mov
mov
mov
cwtl
mov
inc
into
pop
pop
push
imul
push
call
stc
stc
jle
pop
ds
out
inc
or
lahf
shll
mov
lcall
cmpsl
lods
dec
into
push
jle
stos
pop
add
mov
fxch
cltd
fcoms
lods
mov
call
loope
in
sbb
inc
xchg
adc
out
in
ljmp
in
add
in
mov
lret
xor
cli
mov
and
std
xor
rcrl
hlt
mov
pop
out
inc
inc
out
pushf
sub
fstpt
mov
rclb
inc
pop
pop
fdivrl
cmpsl
add
pop
test
mov
cli
lret
int
pop
push
jb
ja
pop
fildl
adc
aad
clc
xchg
lods
dec
xchg
or
mov
xor
sbb
pop
inc
xchg
and
cmpsl
in
adc
out
xchg
orb
push
lcall
mov
fstps
lock
adc
hlt
pushf
es
mov
pop
pop
mov
xlat
xor
pop
xchg
clc
dec
xchg
test
stos
fcompl
xchg
jg
jno
sub
pop
ficompl
mov
mov
cmp
mov
push
mov
jae
mov
aaa
in
jbe
add
xor
cmpsb
jns
sarb
cmp
nop
fildll
xchg
sbb
mov
dec
scas
mov
in
mov
dec
xchg
cmc
pop
in
stc
outsb
push
xor
cwtl
xchg
mov
adcl
hlt
cltd
lea
add
push
gs
arpl
push
arpl
lea
jae
call
mov
pusha
pushf
lea
je
pusha
cmp
push
lea
je
pushf
lea
jmp
lret
cmp
cmp
out
inc
aam
clc
sub
mov
jmp
xor
ja
jno
dec
icebp
cmp
into
jge
jno
inc
cld
repnz
lods
or
fcoms
xchg
xchg
lret
xor
je
hlt
push
jge
or
outsl
inc
outsl
jo
popa
jae
jl
cs
icebp
cmpsb
popf
sub
fldl
jl
or
push
sub
icebp
mov
or
inc
mov
sub
and
fsts
test
adc
cltd
out
add
adc
mov
xor
stc
movsb
imul
jae
jb
dec
dec
push
ds
mov
or
ret
cs
and
shlb
decl
test
addb
jl
pop
xor
sub
es
test
mov
xor
out
and
cmp
lcall
sbb
adc
jns
and
or
mov
dec
jg
cld
pop
mov
dec
jne
sbb
lcall
pushf
cmpsb
fisttpl
mov
pop
js
jno
cmpsb
lahf
inc
cli
inc
popf
int
test
fildl
arpl
addr16
xor
subb
testb
pusha
mov
cmp
fdivs
add
mov
call
call
jo
into
rcl
leave
enter
lock
rol
inc
ror
adc
call
les
test
jae
adc
inc
add
imul
jbe
push
sub
negb
cmpsl
sar
test
shlb
stc
iret
in
pop
es
outsb
mov
rclb
stos
les
or
aam
inc
and
add
inc
jae
pop
rorl
inc
inc
mov
fwait
clc
inc
dec
jo
stos
mov
or
mov
fldl
xor
data16
pop
out
push
and
cmpsb
inc
into
mov
mov
jns
shll
loopne
sti
inc
mov
sub
sbb
shll
fsubrs
mov
pusha
test
test
bt
cmpb
pushf
pushf
lea
jne
or
xor
sar
bswap
shld
mov
neg
stc
add
rol
mov
test
cmc
clc
test
pushf
jmp
cmp
jmp
push
faddl
int
sbbl
dec
clc
in
inc
push
or
cld
or
psubb
inc
fwait
shrb
xchg
movsl
aaa
les
or
mov
xchg
lock
mov
into
push
sbb
es
loope
cmp
jge
mov
push
repz
and
push
mulb
add
scas
adc
ljmp
fidivl
sti
jmp
pop
xchg
push
mov
outsb
add
test
pusha
jnp
ds
scas
idivb
sub
dec
je
dec
in
std
xor
dec
lea
fildl
add
sti
mov
das
cs
push
lahf
scas
pop
dec
popf
aam
xchg
pushf
les
pop
aad
fcmovb
lahf
pop
int
mov
aas
ret
cld
and
in
and
or
adc
bound
pop
fcmovbe
scas
inc
imul
popf
push
pop
int
and
sbb
in
sbb
enter
pushf
xor
jae
adc
mov
inc
int3
test
popa
mov
and
mov
bound
pusha
mov
add
inc
fsubrs
or
addl
shlb
and
adc
jo
mov
jge
mov
sbb
insb
test
repz
jbe
push
mov
sub
cmp
in
pop
scas
mov
ficoms
sahf
pop
lret
sbb
das
lods
sbb
rcrb
jle
push
scas
sti
roll
fs
sbb
xchg
cmpsl
inc
lods
jb
shl
scas
lods
xchg
jg
test
fidivrl
and
shll
aaa
out
jle
xchg
mov
pop
mov
int3
mov
jmp
inc
repz
or
enter
sub
dec
daa
imul
dec
jle
in
and
stos
push
jnp
jae
jl
and
scas
jbe
imul
arpl
or
cs
sbb
in
int3
add
ret
das
pop
pop
mov
mov
nop
push
and
test
push
xchg
nop
push
les
or
movsl
mov
and
pop
outsl
add
loop
mov
imull
cmpsb
pop
adc
cmpb
mov
inc
xor
sarl
popa
es
shrb
jl
subb
jb
fdivr
mov
inc
cmp
push
insb
pop
mov
fwait
and
ja
push
cmc
pop
mov
pop
repnz
insl
ja
sub
push
sub
cld
aas
sbb
enter
mov
pop
adc
fstps
addr16
imul
pop
daa
pop
cs
popa
int
jno
lock
scas
repnz
jns
dec
ja
lea
jns
cwtl
in
jnp
lcall
inc
inc
orb
insl
lret
mov
jmp
mov
shl
into
test
ljmp
xchg
cmp
add
xor
and
inc
xlat
dec
sbb
pusha
out
enter
int
xor
rcrl
adc
pop
test
inc
das
cmp
sub
jg
loope
fisttps
sbb
leave
add
xchg
mov
imul
xor
repz
cmpsl
inc
in
lods
pop
ret
or
in
mov
movsb
mov
pop
aam
sbb
repnz
jns
push
mov
sbb
mov
add
popa
or
imul
arpl
pop
out
jno
js
push
xchg
leave
mov
dec
call
add
inc
xchg
xor
push
ret
sub
xchg
push
cmp
adc
inc
xchg
mov
out
sbb
js
mov
nop
sub
mov
xor
push
sarl
pop
addb
xchg
shl
je
scas
push
scas
mov
icebp
xor
jg
lods
fldl
cwtl
mov
sbb
push
ret
mov
fwait
aaa
sub
adcb
push
faddl
push
sub
mov
stc
sub
fimull
stc
push
lods
cmpsl
dec
pop
in
cltd
es
jb
in
push
fistpll
inc
mov
addr16
aad
stos
xor
or
imul
pop
lret
mov
mov
mov
dec
push
leave
or
mov
mov
scas
cmp
lea
fisttpl
dec
test
mov
mov
mov
adc
pop
lret
mov
cmc
pop
hlt
dec
sub
ret
add
adc
mov
ljmp
rorb
mov
dec
push
pop
add
mov
leave
adc
or
sti
xor
shlb
push
push
push
popa
lret
jbe
adc
shll
call
test
and
mov
cmp
arpl
mov
stc
repz
cld
stos
mov
leave
jnp
cmpb
lea
out
mov
jle
lret
sahf
das
es
mov
xchg
pcmpeqd
sub
aam
rolb
les
push
jbe
cltd
imul
mov
lret
inc
adc
cld
mov
jge
push
jnp
jb
pop
testb
aad
adc
adc
pop
add
ret
nop
or
ret
pop
enter
pop
mov
pop
icebp
cwtl
stos
rol
int3
xor
pop
cmp
xlat
stc
sub
xchg
sti
cmp
sti
or
push
or
jae
sbb
cmpsb
pop
jb
cli
sub
pop
or
jp
inc
hlt
cwtl
pushf
inc
in
insl
stos
mov
scas
test
ret
stos
inc
dec
or
jmp
int
or
xchg
xchg
push
imul
sbb
int
icebp
xor
pop
mov
push
jp
push
jle
daa
lret
pop
xchg
dec
sub
in
mov
mov
cld
stc
aad
cmp
sbb
jns
xchg
sbb
gs
xchg
xor
push
or
inc
out
mov
xor
inc
jmp
sbbb
leave
mov
mov
mov
inc
notl
mov
ret
addl
int
lahf
pop
cs
out
adcb
and
dec
and
outsb
adc
pop
lock
xchg
aam
stc
nop
fnstsw
je
nop
add
lds
and
mov
das
stos
mov
push
cmp
rorl
data16
pop
mov
or
mov
and
test
and
mov
pushf
mov
cmp
cmpsl
cmp
cli
push
sbb
jno
testl
adc
mov
sub
push
mov
andl
shl
dec
shrb
adc
aas
jo
xor
add
fld
push
push
repz
inc
outsb
repnz
fst
pop
in
lret
fsts
mov
add
stos
push
imul
mov
and
cmp
or
loopne
les
lret
sbb
addr16
iret
mov
push
ss
mov
mov
mov
ret
push
fucom
add
adc
mov
mov
cmp
push
test
shl
pop
pop
pop
xchg
jbe
mov
lods
sahf
cmpsl
push
mov
fadds
movsl
mov
scas
add
mov
pop
add
pop
jge
mov
jge
or
mov
pusha
inc
dec
and
and
pop
movsb
jp
call
mov
push
cmp
int
fnsave
lods
adc
in
add
inc
fldenv
int
aad
adc
xchg
fistpl
jae
push
jbe
jmp
or
jge
out
fs
rorl
ficompl
pop
repz
push
add
rcr
in
mov
fwait
sub
mov
mov
or
mulb
lret
jno
rcrb
mov
fwait
mov
xlat
xor
or
xchg
in
dec
jbe
int3
and
cmc
xchg
dec
sbb
mov
xorb
arpl
jg
jae
push
bound
jg
xchg
sbb
lcall
and
jb
mov
inc
push
pop
fnsave
fsubl
cmp
out
push
lock
je
inc
sub
mov
std
fwait
js
int3
loope
jp
cmc
pushf
dec
mov
dec
pushf
push
movsb
repnz
les
adc
insl
adc
loope
into
stc
dec
mov
push
adc
sbb
lds
test
lods
into
jo
sti
jge
stos
cmp
push
and
xchg
jp
push
div
cld
mov
and
lods
sub
and
dec
lods
dec
dec
negl
dec
dec
arpl
adc
mov
push
mov
test
add
test
pop
jb
push
push
pop
ret
adc
scas
pop
mov
jnp
ror
aaa
fdivrl
fstps
xor
pop
fists
mov
in
es
daa
lret
fs
lret
popa
repnz
push
add
loopne
mov
cmp
sub
test
xor
push
cmp
push
test
or
xor
lock
fs
lods
xchg
push
mov
lret
mov
dec
lret
push
xchg
and
pop
lods
iret
stos
or
adc
pop
leave
and
test
addb
test
imul
sub
cmc
fstpt
dec
mov
nop
es
shlb
mov
or
push
xor
shlb
ljmp
cmpsb
sub
imul
mov
loop
mov
leave
into
pop
xchg
cwtl
popl
ret
in
or
mov
mov
mov
fdivrl
xor
scas
adcl
lret
pushw
jl
out
mov
push
lahf
add
aas
mov
jmp
mov
out
adc
adc
stc
and
fstpl
inc
ss
ficoml
dec
xchg
out
adc
clc
mov
adc
adc
data16
push
inc
sub
insl
or
push
cmp
mov
inc
adc
xor
in
jmp
mov
test
clc
push
imul
out
movsl
mov
ret
movsl
stos
push
stc
mov
lcall
rcl
pop
jle
inc
xchg
notb
and
out
les
xor
push
cli
and
cmp
push
clc
mov
dec
call
rcrl
outsl
or
and
xchg
xor
fisubs
rcl
and
pop
jg
inc
imul
xchg
push
inc
jns
movsb
push
movsb
movsl
lret
and
fnstcw
std
dec
popa
push
inc
out
hlt
mov
cmp
mov
mov
add
inc
bound
test
push
jns
xchg
fistpll
sub
pop
cld
inc
rorb
sub
scas
test
mulb
sub
lea
loope
jmp
mov
lock
pop
cwtl
pop
add
pop
pop
xor
fwait
rclb
mov
lcall
xchg
out
adc
outsl
aad
sub
arpl
into
femms
ljmp
in
fs
mov
shrl
pop
xchg
cs
ljmp
and
push
sub
sub
imul
bound
xchg
sub
inc
je
ljmp
mov
cmp
jmp
fcmovu
dec
cltd
push
aas
scas
mov
imul
popa
aaa
std
jge
sahf
dec
repz
ficoms
iret
out
fs
les
arpl
gs
movsl
and
sub
scas
sbb
dec
inc
cmp
jecxz
fs
clc
mov
push
jno
jbe
pusha
pop
in
or
jl
repnz
adc
push
rorl
in
popf
cmc
out
cmp
std
adc
pop
scas
jno
mov
and
lods
add
repnz
fildl
out
jp
cmc
sub
adc
icebp
and
adc
push
test
shl
sub
xchg
pop
clc
cwtl
sahf
sub
and
out
cmc
jbe
inc
in
push
push
out
je
mov
xor
outsl
hlt
mov
js
inc
out
dec
in
rep
mov
insl
out
das
loope
cmpb
pop
mov
lcall
test
dec
xor
dec
fmull
jge
jp
pop
in
gs
xor
cmpl
fwait
fstps
ss
mov
test
adc
daa
pop
jecxz
xchg
inc
mov
int3
mov
adc
and
jecxz
and
das
aam
cmpl
je
bound
adc
jo
and
imul
fiadds
add
push
dec
xlat
add
cwtl
xchg
out
popa
aaa
rorl
pop
cwtl
cmp
les
arpl
cs
call
ret
shll
inc
sub
or
popf
add
stos
and
sub
icebp
les
ret
and
cld
adc
mov
out
cmp
imul
testl
inc
mov
mov
aad
les
into
mov
mov
add
int3
jo
inc
data16
inc
roll
fdivs
and
lahf
rcrl
and
push
jb
adc
les
adc
das
sti
sub
ds
mov
in
sbb
jne
ret
loop
or
jo
out
lahf
inc
testl
stos
fucomp
jae
jnp
fcomps
popf
inc
test
or
dec
jo
ds
imul
jle
fdivrs
mov
iret
mov
pusha
add
or
and
fstpl
mov
in
sbb
leave
imul
xor
cli
test
dec
xor
mov
add
mov
shlb
push
lcall
mov
enter
xor
fsubs
jmp
dec
push
out
loop
pop
popa
cmp
sti
int3
jle
test
sti
dec
shlb
cwtl
push
xchg
jns
push
std
repnz
jecxz
and
cmp
andl
fdivl
les
out
lcall
pusha
cmpb
add
pop
cmp
mov
mov
imul
pop
imul
out
lcall
inc
insl
out
mov
sbb
rcr
stos
mov
aas
xor
insl
sub
inc
fdivs
push
mov
cltd
dec
lahf
mov
xor
loope
out
lret
loopne
jnp
cs
iret
or
pusha
rorb
pop
cmp
jmp
inc
pop
test
test
adc
div
push
add
fldl
mov
adc
push
push
pop
add
and
aaa
imul
push
imul
repz
lahf
pop
fimuls
push
dec
or
loope
imul
mov
fcmovu
jnp
dec
mov
cltd
mov
xchg
pop
inc
movsl
pop
in
pop
xor
sub
inc
fld
and
dec
repnz
jmp
mov
sbb
adc
lock
push
inc
in
repz
pop
sahf
add
add
icebp
adc
add
pop
xchg
sub
add
mov
fs
jg
jae
lcall
sbb
sti
and
mov
loop
aam
int
scas
mov
dec
adc
fiadds
jb
mov
repz
in
ds
jmp
testl
insl
shl
sahf
xor
adc
sbb
adc
insb
pusha
cmc
movsl
dec
std
mov
dec
inc
out
cmc
fs
mov
sbb
or
in
xchg
movsb
addr16
arpl
dec
loopne
in
sub
mov
pop
insl
sahf
sub
adc
repnz
mov
popa
pop
xor
sub
mov
inc
add
xlat
clc
mov
mov
push
fidivs
test
pop
dec
and
mov
negb
mov
mov
mov
stc
aam
clc
and
pop
add
popl
push
les
cmp
les
xor
push
shr
dec
repz
adc
pop
cs
fcom
sbb
test
lds
stc
dec
push
shrl
dec
xchg
sbb
pop
sbb
inc
jge
insl
push
movsb
sub
or
loopne
cmpsl
push
lret
in
daa
sub
testb
in
clc
mov
cmpsl
lock
mov
mov
dec
jb
adc
pop
into
stos
xor
add
pop
in
xlat
ja
movsl
push
cld
sahf
shlb
lods
and
imul
dec
hlt
enter
lcall
mov
std
add
out
push
repz
cmp
faddl
nop
repz
popa
iret
out
movsb
cmp
cmc
and
mov
fs
mov
fs
mov
int3
xchg
cmp
movsb
aad
push
es
or
sbb
fbstp
jne
out
mov
pop
mov
dec
jnp
out
cltd
cmp
mov
enter
fldl
push
cltd
out
mov
add
xor
mov
xchg
adc
xchg
jo
mov
cmp
data16
out
cs
inc
sub
addr16
pop
inc
movsl
fcmove
test
dec
outsb
inc
div
xchg
loopne
dec
lods
dec
xchg
dec
push
shll
pop
jle
cmp
popa
pushf
push
insb
adc
jo
xchg
sub
and
fwait
stc
out
aam
dec
aam
xchg
mov
mov
test
mov
adc
addb
sbb
pop
aam
cmp
loopne
fldcw
fidivl
dec
push
insb
add
or
ret
ret
ljmp
clc
push
stc
sbb
xor
test
pushf
sub
and
xor
xchg
iret
or
mov
lods
stos
add
cmp
leave
xlat
and
in
fadd
and
insb
fcomi
pop
sahf
or
add
mov
call
xchg
aas
jp
stc
sub
adc
neg
jne
ljmp
inc
or
in
xchg
bound
decl
add
mov
outsl
mov
push
jne
les
ret
mov
insl
sbb
xchg
mov
add
repz
inc
mov
das
push
insb
pop
jl
jo
pushf
xchg
push
das
sbb
inc
jo
xcrypt-ctr
cmpsl
fdivrl
sub
iret
xor
arpl
mov
xor
pop
aad
es
xchg
negl
pop
lcall
cmpsb
lods
iret
movzwl
ficompl
push
xchg
cmp
push
mov
pop
frstor
and
cltd
pop
mov
pop
js
mov
xchg
clc
in
jg
movsb
sarl
adc
lret
xchg
pop
lcall
fisttps
jg
in
jmp
arpl
inc
out
call
cmp
outsb
mov
jge
mov
mov
subb
pop
jge
in
mov
daa
jb
ja
xor
dec
loop
pop
pop
lds
out
negb
add
adc
int
inc
mov
xor
lock
mov
insb
arpl
sub
push
call
xchg
ljmp
orb
mov
ret
outsb
ret
outsl
pop
out
je
cld
mov
enter
push
rorb
daa
std
ret
sbb
scas
lea
or
out
movsb
cs
add
adc
dec
jmp
cltd
lret
lahf
jbe
jbe
pop
loop
je
cltd
xchg
jb
out
mov
mov
aas
add
ret
test
sbb
bound
dec
in
push
enter
sub
mov
cmp
scas
pusha
stos
ss
call
es
popa
int3
push
mov
pcmpeqw
mov
or
dec
lret
insb
pop
mov
scas
aad
pop
adc
inc
jge
cmp
data16
loop
cmp
push
arpl
test
inc
push
sti
jg
cmpsb
push
xor
mov
jno
xor
mov
xlat
sub
pop
andb
xchg
push
push
mov
xchg
inc
or
xchg
sbb
cmc
mov
mov
mov
and
and
lock
lock
add
pop
pop
iret
jp
jle
daa
mov
mov
addl
sar
mov
add
pop
jnp
mov
pop
outsb
loope
xor
es
jg
mov
stc
xchg
movsl
mov
push
cmp
loop
push
in
out
lock
jge
mov
pmaxub
pop
add
negb
test
shrl
jnp
pop
sbb
xor
xlat
or
cltd
in
mov
push
and
pop
jno
lahf
int
push
icebp
mov
lock
push
pop
adc
pop
fwait
pushf
cmp
imul
iret
jge
pushf
lea
ficoms
xor
sbb
add
jmp
rolb
outsb
mov
jo
xorl
ja
mov
data16
inc
in
jns
add
cmpsb
pusha
shrb
out
xor
in
in
jno
mov
mov
iret
or
jns
lock
xchg
lcall
inc
xor
stc
sbb
add
lret
repnz
shlb
clc
out
fnstcw
add
leave
jmp
sub
cmp
cwtl
inc
ror
mov
xlat
dec
add
ss
outsl
aaa
lods
ret
mov
mov
out
add
addb
mov
mov
sub
mov
xchg
inc
data16
mov
xchg
adc
and
orb
jg
enter
mov
pop
mov
jnp
jp
fildll
push
sahf
sbbl
push
and
jns
push
push
mov
int
in
add
orl
sub
add
mov
aaa
jp
push
pop
insl
and
push
cmpsb
inc
xchg
ret
mov
dec
mov
cmp
jb
fdivrs
jg
lahf
pcmpgtw
pop
jo
inc
sub
jns
mov
addl
inc
shll
sbb
mov
out
mov
repnz
cmp
nop
loope
inc
fcomp
bound
mov
dec
ret
dec
jecxz
xor
rcrl
dec
sti
adc
out
push
shlb
pop
jge
add
in
gs
movsl
and
jns
rcl
popa
orl
jmp
test
dec
out
outsl
xchg
std
mov
hlt
mov
sahf
insb
push
xor
cs
imul
pusha
incb
movsb
jp
cmp
test
mov
xlat
daa
push
fstpt
lret
dec
loopne
out
stos
lock
es
lret
fldcw
mov
add
jae
sti
adcl
insl
jmp
int
cmc
jp
icebp
inc
and
and
push
inc
repz
cmp
add
lahf
and
loope
jb
ficompl
movsl
cmpsb
inc
jg
inc
dec
into
repnz
popf
das
and
xlat
and
cwtl
sub
int3
shlb
lods
mov
xchg
push
loop
dec
call
fs
in
roll
push
int3
jno
cld
sahf
dec
cmc
sahf
xchg
mov
loopne
mov
xchg
cmp
cwtl
je
mov
add
dec
in
mov
addr16
push
xor
sbb
dec
and
or
jmp
pop
fcompl
shll
cli
in
ror
jo
and
cmp
stos
test
stos
rcll
lock
subb
ss
inc
mov
daa
into
outsb
mov
sbb
and
into
cmp
std
lods
push
add
ljmp
lock
adc
xchg
clc
rclb
inc
je
mov
cmp
mov
xchg
add
add
mov
push
sbb
cmp
pop
test
fadds
repnz
fndisi(8087
pop
pop
xorl
and
bound
mov
push
add
out
es
push
push
jne
idivb
adc
ljmp
jp
lahf
hlt
dec
ret
fstp
jmp
movsb
test
icebp
out
push
mov
test
add
orb
lds
and
jge
jns
and
xor
push
push
mov
rorb
sub
out
push
mov
ss
adc
lret
add
push
shll
test
mov
cmp
mov
and
or
js
xor
sbb
sub
shlb
movsl
orl
sahf
aad
adc
out
xor
hlt
sbb
andl
sub
dec
adc
cld
shl
sub
mov
and
ss
mov
dec
movsl
sbb
xor
lcall
push
das
inc
mov
sub
addb
out
js
or
xchg
stos
loop
and
addr16
inc
sahf
jp
push
test
dec
push
cmp
pop
cs
in
sub
adc
jo
ljmp
out
xchg
out
sbb
xchg
aaa
ffreep
push
mov
outsl
sub
fnstcw
add
int
shl
sti
stc
lcall
mov
jmp
ret
pop
sbb
into
test
add
fwait
mull
rolb
dec
jno
outsl
dec
inc
daa
std
xor
mov
adc
jae
sub
adc
push
or
cmp
or
xchg
jge
cmc
mov
ret
pop
adc
add
mov
rclb
dec
ljmp
inc
xor
js
std
pop
add
cmpb
xor
enter
cmp
cmpsb
pop
divl
call
xchg
mov
mov
mov
push
add
push
sub
cli
lcall
mov
mov
leave
lahf
cltd
lret
sub
and
mov
iret
gs
sbb
inc
sbb
xor
hlt
xchg
gs
sbb
shl
loopne
cmp
inc
movsb
mov
sbb
jecxz
les
into
and
adc
xor
lahf
and
mov
fidivrs
movb
xlat
adc
pop
xor
dec
pop
fsubp
test
jno
jno
mov
sbb
inc
out
test
stos
fdivl
dec
pop
pushf
adc
int3
pop
push
call
imul
mov
xor
and
sub
pop
pop
cmpsl
loopne
xor
mov
arpl
mov
sti
or
lock
push
mov
test
push
jnp
idivl
adc
mov
dec
jmp
rolb
pop
out
out
cmpsl
imul
push
mov
mov
dec
push
jl
test
lock
xor
scas
js
inc
addl
sbb
pop
lods
iret
mov
push
rorb
movsl
cmp
push
cli
cmpb
pop
push
les
jae
fsts
enter
imull
pushf
cmp
nop
push
push
push
enter
sahf
push
mov
and
idivl
xor
fstps
inc
mov
dec
mov
sub
adc
cmp
aad
adc
mov
push
pop
mov
test
icebp
int
lods
adc
lcall
jp
inc
jp
scas
mov
fiadds
cltd
jle
xchg
sub
add
mov
ss
mov
adc
sbb
pop
dec
repz
add
std
adc
int
pop
or
out
jbe
add
mov
mov
loopne
adc
in
popf
inc
out
rorb
popf
les
loope
jae
test
mov
adc
cmp
push
and
mov
jbe
cld
xchg
and
stos
dec
jnp
pop
sub
lahf
scas
jle
sub
sub
dec
pop
imul
shll
push
xchg
mov
insl
fcmovnb
cmp
xchg
push
movsl
mov
negb
flds
mov
cmp
xchg
inc
jmp
std
pop
das
xchg
push
fcoml
or
add
or
gs
cltd
mov
aam
test
mov
sbb
cmc
nop
test
mov
pushf
pop
fdiv
imul
addr16
jnp
mov
mov
lret
out
lods
pop
mov
scas
or
pop
testl
dec
pop
mov
mov
rol
lock
jno
or
dec
subl
xor
mov
dec
repz
fs
pop
popa
enter
push
dec
fsubs
mov
ljmp
cmp
cmp
sub
push
imul
and
adc
pop
aas
enter
cmp
loopne
nop
pop
into
fisubs
imul
out
imul
push
lods
call
inc
jbe
repz
cwtl
cld
push
inc
inc
in
lret
shlb
or
dec
lahf
dec
xchg
testb
cmp
and
mov
or
lret
cmpb
outsb
pcmpgtd
cs
cs
adc
sarb
dec
leave
in
sub
call
xchg
test
dec
sbb
xor
xor
je
jae
pop
leave
mov
aam
xlat
dec
mov
aaa
and
je
inc
mov
cltd
or
and
or
sub
jl
sub
add
or
je
ficomps
jo
pop
and
push
jbe,pn
flds
sub
in
push
jg
add
nop
sub
aam
cmp
jg
mov
jo
movsb
mov
jecxz
add
xchg
test
pop
ja
pushf
jl
mov
mov
add
lcall
mov
dec
jb
or
jb
ds
add
add
ljmp
mov
imul
in
loop
orb
or
lahf
push
sbb
xor
std
xchg
lods
lds
pop
cmp
in
add
fdivl
lock
pop
inc
adc
gs
rcl
pop
hlt
ret
xor
mov
xchg
dec
pop
int
nop
jno
and
pop
adc
push
pop
cmp
or
adc
mov
mov
adc
je
andl
movsb
ljmp
out
int3
add
jbe
or
addl
out
jg
inc
into
sbb
fildll
rcrl
push
fnstenv
pop
mov
fists
fwait
mov
repz
into
jae
xor
lods
insb
cli
and
dec
jecxz
sbb
mov
mov
push
pop
and
mov
cmp
popa
aaa
push
pop
sub
xlat
xor
pushf
xchg
daa
popf
sub
sub
jae
lock
cwtl
cmp
xor
xchg
testb
shlb
cmpsl
pop
push
jne
xchg
std
rcll
imul
xchg
loope
jge
sti
xor
insl
ja
loop
sbbb
mov
fwait
mov
pop
lcall
push
icebp
pop
pusha
sub
push
xchg
dec
leave
fistps
cwtl
outsb
or
dec
inc
loop
leave
and
inc
gs
cwtl
in
and
in
sbb
xlat
pop
dec
arpl
add
jns
das
lea
sbb
push
mov
jmp
push
xchg
jle
ret
js
sub
or
loopne
xchg
imul
xchg
insb
xchg
or
pop
xchg
icebp
pushf
clc
shll
inc
mov
or
jecxz
mov
notl
jne
pushf
subb
lds
hlt
imul
test
adc
and
ror
cmp
mulb
mov
cmp
test
hlt
sahf
jge
mov
mov
loop
inc
adc
ds
push
sub
push
or
daa
jge
jnp
cmp
loop
sbb
loop
negb
imul
mov
aam
lret
xchg
adc
lods
mov
jge
jo
fdivl
pusha
mov
hlt
insl
cmp
and
test
xor
mov
out
jb
cmp
xchg
iret
sub
pop
cs
xor
cli
or
push
out
sub
mov
les
es
jbe
push
mov
lea
cmc
fiaddl
cmpsb
je
xor
push
fnstsw
in
add
pop
movsb
imul
jp
xlat
push
insb
jnp
mov
test
mov
push
clc
das
imul
mov
test
scas
mov
ljmp
es
adc
xor
fadds
mov
fists
arpl
ret
sub
cmc
fists
pop
out
sti
popa
pop
push
cmp
push
pop
jnp
lods
xchg
ds
cmp
aam
push
inc
test
sbb
jns
sarb
inc
mov
mov
jbe
xchg
jb
movsb
xor
pop
fildl
cs
lock
sbb
lods
scas
cmp
pusha
push
movb
lea
ja
stc
jmp
lea
dec
mov
gs
icebp
sarl
mov
push
andl
xor
jmp
ja
fdivrl
sbb
sub
sarl
add
or
inc
je
mov
adc
push
fsubl
fmuls
shll
arpl
and
outsl
shll
mov
in
pop
mov
and
jb
imul
add
pop
push
jb
arpl
outsl
jne
gs
jbe
outsb
je
dec
bts
mov
stc
bt
cmpb
call
inc
inc
push
inc
push
dec
xor
cs
insb
add
std
scas
add
pop
insl
fmuls
aaa
add
push
fildll
cmpsl
push
adcl
addr16
sub
movsb
ss
xlat
js
mov
rclb
jns
addr16
pop
lret
gs
movsl
and
mov
jmp
push
gs
push
jne
xchg
pop
aaa
call
mov
cmp
leave
mov
jbe
sbb
out
jp
xor
imul
hlt
imul
mov
loop
inc
int3
out
clc
inc
sahf
or
loopne
or
incl
scas
push
cmpsl
xor
dec
add
mov
scas
test
stos
and
add
inc
in
sbbl
mov
push
mov
pop
in
or
dec
sub
lret
cs
shr
loop
add
gs
dec
iret
adc
adc
pushf
or
sbb
out
pop
jnp
stos
jl
cltd
imul
movb
push
not
pushfw
popw
ror
clc
mov
pusha
jmp
push
call
xchg
and
mov
push
lods
jle
ljmp
jge
loope
mov
shrb
arpl
mov
scas
or
mov
jne
sbb
xchg
shll
loop
cltd
jecxz
cmp
mov
enter
loopne
es
call
bound
sahf
pusha
imul
arpl
fstps
xchg
jle
xlat
mov
dec
adc
inc
adc
aas
sub
aaa
pop
sbb
mov
addr16
dec
inc
mov
or
mull
cmp
ja
cmp
gs
sbb
daa
nop
jno
sarl
dec
xlat
dec
add
sbb
out
sub
enter
or
mov
pop
xor
pop
sbbl
push
addb
xor
mov
fstpt
xor
jl
or
movsl
pop
daa
jne
push
mov
cmp
or
iret
cmp
add
or
sub
scas
xchg
pop
fcompl
mov
cmp
push
push
imul
add
inc
cwtl
and
imul
push
dec
dec
dec
dec
inc
push
cs
insb
add
ljmp
cli
sub
hlt
lock
push
fidivs
sahf
inc
sti
xchg
push
cli
adc
cmpsl
pop
paddsb
push
icebp
enter
dec
fnstcw
dec
dec
dec
lahf
in
inc
cmp
mov
dec
push
out
push
aam
sahf
loope
lret
cld
pop
arpl
mov
jg
fwait
jge
dec
jge
inc
pop
cmp
nop
leave
arpl
negb
push
int3
cmc
dec
push
jmp
repnz
pushf
mov
pushf
lea
jne
shl
adc
sbb
mov
btr
movzbl
push
shrd
sub
sub
lea
shl
lea
bt
pushl
sub
test
pushl
popl
stc
bt
cmp
call
fidivrl
fwait
add
mov
in
mov
int
and
movsl
jnp
pop
inc
popf
pop
lods
mov
mov
sub
subb
pop
lock
lcall
addr16
out
stc
and
cmp
ss
and
enter
pushf
nop
push
int
sbb
cmpsl
es
out
sub
and
push
sbb
sub
and
mov
loopne
cmp
cld
mov
nopl
mov
and
test
pushw
popfw
call
pusha
pusha
lea
jb
pushf
push
mov
pushf
pushl
ret
add
dec
outsb
je
jb
gs
outsl
outsb
outsb
arpl
pusha
movl
call
cmp
sub
and
stc
popa
scas
pop
fistpl
pop
mov
fisubl
in
jp
and
or
pop
ret
push
mov
sbb
pop
fcompl
mov
sub
inc
pop
mov
out
movsl
and
mov
inc
in
add
in
mov
mov
fisubrs
mov
nop
add
adc
rorl
and
inc
or
push
mov
jns
and
lods
and
outsb
sub
dec
pusha
jge
push
lds
in
xchg
mov
jmp
mov
jne
loopne
ljmp
or
popf
ds
cmc
gs
push
imul
jne
xchg
fsubr
dec
int
dec
aas
pop
lcall
cwtl
or
aas
repnz
mov
xor
out
cmp
inc
dec
and
imul
pop
gs
cmpsl
in
mov
repnz
vmread
adc
jb
sbb
push
popa
repz
scas
pop
xchg
dec
inc
aad
or
cmpsl
xor
push
movsb
push
dec
mov
jno
daa
cmp
iret
xchg
sub
push
pushf
xchg
and
jnp
test
shlb
and
popf
push
cld
out
jge
dec
cli
leave
xchg
out
idivl
and
push
bt
cmpb
pusha
push
push
lea
jne
shld
rcr
mov
cmp
pusha
pushf
add
push
stc
bt
jmp
mov
push
mov
movw
lea
jmp
and
jae
movsl
dec
pop
aaa
sahf
jne
je
jo
hlt
fmuls
aas
pop
jmp
call
inc
adc
out
xchg
test
jae
fxch
inc
jp
sub
lds
repz
aad
loop
push
adc
pop
or
lods
adc
add
pop
sti
cmpsl
insl
xorl
sbb
adc
dec
in
lea
popa
xor
imul
or
pusha
stos
jle
inc
add
dec
lods
add
ret
lock
loopne
cs
js
cld
push
sbb
popa
les
mov
les
push
sbbb
lds
push
test
pop
sbb
imul
xor
cld
aaa
add
add
lods
cmpl
xor
mov
addr16
jle
test
dec
ss
and
aaa
dec
repnz
mov
adc
dec
faddl
fwait
xorb
jle
dec
je
fisubrl
ss
jbe
push
xor
imul
push
movw
jmp
add
mov
pushf
cmpb
pusha
lea
jne
movsbw
shl
call
fs
in
xorl
mov
cmpsb
leave
pop
loope
divb
outsb
out
lahf
xor
ss
jle
enter
and
lods
push
hlt
xchg
push
cli
push
and
in
push
inc
sub
in
jnp
nop
cmp
cmp
jl
jmp
push
dec
testl
shrb
jb
mov
leave
outsb
inc
mov
iret
rol
int3
mov
push
adc
imul
call
push
pushf
call
add
mov
xor
or
shl
and
pop
lret
mov
enter
nop
rolb
mov
jbe
or
inc
pop
das
pop
rcll
xchg
and
jo
sbb
pop
xor
mov
xlat
xchg
std
clc
or
push
sti
pop
adcl
mov
faddl
lahf
pop
inc
xlat
int
insb
mov
fdivl
push
jae
fistpll
mov
and
lea
fs
sbb
or
dec
rcll
fs
sub
inc
or
imul
lea
jno
push
push
pushf
push
pushf
pushl
ret
add
insl
imul
jae
je
lea
call
jmp
mov
pusha
push
pushf
pushl
ret
inc
inc
dec
xor
cs
insb
add
test
ds
xchg
lret
mov
rorb
xor
xchg
xchg
push
not
or
jmp
andl
test
dec
mov
dec
mov
add
and
addr16
xchg
mov
mov
movsb
sbb
stos
je
xor
inc
add
cmp
cmp
daa
pop
stc
imul
pop
lods
sbb
xchg
sbb
inc
nop
lea
jb
push
insb
addr16
sbb
xchg
inc
xor
push
outsb
test
and
aaa
in
shrb
iret
fiadds
xor
popl
cmpsl
pushf
and
and
mov
mov
xchg
cwtl
mov
aas
fbstp
jmp
movsb
adc
dec
push
lcall
xchg
int
xchg
stos
pop
add
in
lcall
imul
pusha
lea
je
sar
pushf
not
sub
btr
rcl
dec
rol
mov
btr
pushl
not
mov
or
shld
shr
pop
mov
movb
jmp
lea
jne
push
pushf
mov
mov
jmp
lods
pushf
mov
not
pushf
movb
pushl
dec
pushf
rol
test
add
pushf
mov
call
sti
ja
mov
imul
lcall
out
sbb
pop
call
inc
test
mov
inc
outsb
xor
jge
cmpsb
and
test
test
aas
pop
idivb
outsl
in
mov
fimuls
jle
aas
std
dec
sbb
ljmp
jl
lds
leave
aam
fisubrl
movsl
dec
call
mov
jg
adc
fimull
inc
push
sub
imul
test
decl
mov
push
sbbl
imul
shrl
ja
jno
icebp
gs
push
call
pop
dec
xor
test
jmp
ret
add
ljmp
nop
pop
mov
lods
loope
dec
in
pop
cmp
loop
sahf
jns
mov
or
adc
inc
call
inc
pop
and
pop
hlt
sub
stos
or
gs
xchg
xchg
mov
sub
pop
and
pop
sbb
push
jp
sbb
mov
cli
aaa
xlat
xchg
xor
jne
fmuls
jle
out
jne
bound
mov
int
pop
xor
scas
stc
jo
mov
add
add
xlat
repz
test
aam
fcoms
adc
lret
or
out
push
xor
loop
cmpsl
lods
in
mov
cmp
mov
push
int3
cwtl
and
stos
loope
cmpsl
outsl
xor
lods
les
mov
sbb
fmul
xor
sub
movsb
int
in
into
inc
lret
in
addb
dec
fcomip
add
sbb
in
jl
in
or
repnz
mov
aas
in
mov
fldl
ficomps
push
andl
sbb
insb
mov
sub
jae
sbb
shll
test
ds
xchg
popf
add
jnp
pop
cmp
je
aas
push
mov
or
push
fidivs
dec
or
xor
sub
orl
les
cs
dec
mov
lret
faddl
fstp
cwtl
mov
push
sub
dec
xchg
loope
and
add
push
or
jns
scas
dec
cltd
push
jl
outsb
lods
je
adc
inc
xchg
lcall
std
ljmp
sbb
push
int3
adc
outsl
pop
pushf
fists
or
imul
sbb
in
xchg
or
jmp
push
int3
xchg
dec
pextrw
inc
inc
sbb
enter
scas
pop
jp
lahf
push
jp
mov
or
sbb
mov
sub
add
cs
nop
stos
push
dec
jne
lret
push
pop
icebp
gs
adc
xchg
pop
inc
outsl
add
jmp
cwtl
ret
stc
push
dec
xchg
arpl
mov
mov
or
sub
push
push
push
mov
decl
adc
jge
jle
data16
lds
sub
cld
xchg
cmp
add
push
aad
movsb
testl
mov
pusha
sub
ss
test
je
mov
jmp
lods
subl
sarl
mov
xlat
or
or
repnz
jae
mov
idivb
repnz
mov
inc
out
push
cmc
pop
jl
mov
popf
mov
mov
adc
imul
lods
adc
cmp
imul
xchg
leave
jmp
std
dec
scas
scas
xchg
push
movsb
cwtl
hlt
arpl
sub
xchg
lods
or
mov
mov
mov
push
dec
cmc
pushf
xchg
push
in
mov
jecxz
xchg
stc
pop
push
loope
aam
inc
adcb
je
add
mov
orl
rorb
ja
dec
push
add
sub
in
dec
xchg
loopne
iret
lods
xchg
sahf
movsl
rcrb
adc
mov
pop
push
jo
sub
hlt
ds
xor
cmpsl
jle
cmpps
xor
push
push
xchg
pop
mov
aas
pop
lret
mov
cmpsl
test
ret
mov
inc
aam
adc
addr16
fs
sub
lret
cmp
push
imul
stc
neg
pushl
cmp
movl
cmp
cmp
lea
bswap
lea
lea
cwtl
movzbw
pushf
mov
pushf
lea
ja
pusha
push
pushl
lea
jb
jne
push
test
mov
cmpb
lea
jns
pusha
lea
jne
neg
or
pusha
bt
mov
push
add
test
clc
movzwl
add
rol
push
cmp
mov
stc
pusha
pusha
movb
add
test
test
push
jmp
push
dec
inc
dec
dec
xor
cs
insb
add
mov
push
mov
sbb
push
jnp
mov
bound
out
cli
daa
stos
aaa
test
cmp
and
mov
cli
js
mov
jb
mov
dec
add
mov
sbb
cmp
pop
mov
ror
call
movsl
push
lea
aaa
arpl
loope
mov
or
loopne
inc
jecxz
insl
adc
push
aaa
insl
mov
mov
mov
imul
jp
das
mov
jo
rcrl
and
cmp
mov
test
pop
iret
push
push
das
and
loop
rcrb
movsb
adc
lods
mov
and
mov
rcrl
cmp
cld
xor
sti
lods
aam
stc
sbb
mov
xorb
mov
sub
mov
cmc
cmc
scas
es
mov
add
add
xorl
mov
add
or
cld
out
pop
jae
mov
popa
push
cmp
cs
dec
push
xchg
les
movsb
add
push
gs
insb
jbe
xabort
xor
jge
test
nop
dec
xchg
testl
adc
fldcw
std
pushf
pop
sub
popa
fnsave
mov
les
sarb
test
sub
adc
lea
ja
stc
jmp
stc
stc
or
test
lret
and
mov
xchg
sbb
cmpl
adc
sub
xchg
out
imul
pop
subb
mov
lcall
jg
ds
or
movsb
pop
cwtl
xchg
pop
fwait
shlb
jge
imul
mov
sbb
add
ss
and
sbb
push
mov
dec
mov
loope
sbb
mov
stos
shrl
sub
into
dec
rorb
sarl
or
cs
mov
or
dec
jo
add
xor
cli
ljmp
lret
dec
arpl
cmp
mov
fisttpll
add
pop
jbe
adcl
and
addr16
cli
int
ljmp
add
mov
iret
aam
jne
cwtl
mov
lods
push
lods
or
cmp
aas
mov
inc
cmp
mov
jnp
or
movsb
dec
adc
test
cmp
mov
cwtl
pop
lret
sbb
adc
lea
bound
sub
sub
jmp
ret
inc
cmp
mov
mov
les
cmp
test
jmp
adc
dec
mov
and
movsl
repnz
lahf
stc
dec
and
and
int3
push
aas
pop
add
popf
jl
jl
xor
fldl
lahf
outsl
std
testb
dec
cltd
comiss
jecxz
adc
ror
pushf
bound
mov
divb
lahf
dec
jle
ss
add
xchg
sarl
sub
in
inc
mov
pushf
lea
je
push
cmp
lea
jp
push
lea
je
cmc
clc
cmp
pusha
pusha
lea
je
pushf
pushf
pusha
mov
lea
jmp
mov
not
mov
pushf
pusha
pushf
pushl
ret
neg
cmc
shrd
adc
mov
clc
pushf
and
stc
add
push
pushf
mov
pushf
lea
jmp
jo
out
mov
cli
popa
test
or
out
lds
test
sarb
insb
push
jb
insb
adc
sub
clc
subl
push
push
ret
shll
cwtl
xlat
mov
clc
sub
pop
shl
push
cmpsl
mov
adc
pusha
mov
or
cs
jnp
or
push
pushf
and
or
push
test
ret
pop
rclb
jo
aam
push
dec
jns
push
cld
in
jmp
pop
push
call
es
add
fs
sbb
pop
push
adc
imul
dec
jmp
loope
xchg
adc
mov
cli
push
mov
pop
out
aam
negb
adc
pusha
inc
lret
mov
test
jecxz
mov
xchg
sub
or
jecxz
xchg
dec
cmp
lock
repnz
fistl
jbe
or
ret
test
aad
insb
pop
repnz
int3
mov
push
sbb
sub
imul
sub
jae
dec
adc
dec
or
aad
add
outsb
and
push
cmpb
out
dec
loop
ljmp
aaa
pusha
insb
insl
ret
pop
aas
pop
cmpsl
sbb
loope
test
add
hlt
adc
rorb
cmpsl
cmp
in
sahf
xor
cmp
dec
lock
jmp
loopne
loopne
xchg
xor
or
adc
sub
jle
cltd
cmp
ja
cmp
imul
cmp
inc
and
sbb
sub
push
notl
mov
jbe
pushf
test
add
jecxz
add
icebp
repnz
xchg
mov
imul
mov
popa
dec
loopne
cli
pop
or
pop
push
test
pop
aas
cli
mov
shll
push
inc
pushf
shlb
daa
or
sub
pop
or
push
adc
lea
push
pushf
pushl
ret
hlt
xor
test
cmc
pusha
or
adc
dec
jg
out
mov
jge
mov
cmp
aas
pop
xchg
inc
jge
xchg
xchg
jp
and
decb
js
andb
jbe
jmp
daa
addr16
inc
loopne
sub
lds
mov
cwtl
jmp
imul
and
push
inc
repz
mov
sub
loope
adc
enter
mov
dec
pop
mov
inc
pop
mov
jmp
inc
push
pop
testl
xlat
inc
and
test
pop
decl
jno
push
imul
mov
pop
adc
out
pop
rorb
daa
fdivrs
mov
cmpsb
frstor
stos
fdiv
movsl
and
inc
bound
adc
add
push
int3
cld
imulb
inc
push
mov
aaa
mov
mov
fistpll
pop
add
mov
ljmp
xor
xchg
leave
daa
xor
fnstenv
pop
xchg
setp
or
daa
and
xorb
add
inc
adc
push
imul
inc
mulb
xchg
xor
cmp
mov
mov
jno
xor
das
or
and
mov
lcall
sbb
loopne
sbb
imul
mov
and
cmp
mov
fcoml
ja
and
pop
test
sbb
mov
jmp
sub
divb
mov
imul
imul
test
bt
add
cmc
push
pushl
clc
mov
neg
pusha
rcl
mov
stc
pushl
stc
cmc
cmp
push
push
lea
jbe
pusha
call
jno
and
in
lods
pop
push
cs
test
lock
shlb
xor
fsub
xchg
daa
les
leave
lods
mov
inc
dec
insl
push
dec
loopne
out
fs
fldl
dec
in
aaa
or
xchg
xchg
loope
push
pop
jbe
loop
fidivrl
adc
inc
lods
clc
xor
jg
and
and
aam
sub
int
sub
add
cmp
sub
bsf
add
sbb
pushf
mov
bt
bts
add
add
movsbl
btc
ror
pop
movl
bsr
sar
mov
lea
pusha
clc
cmc
cmp
pusha
push
lea
jbe
lea
jmp
add
pop
lock
ret
xor
fcmove
and
in
mov
mov
jge
aam
xor
mov
xlat
std
pop
insl
push
xchg
cltd
aad
sub
cmp
pop
rclb
es
loopne
mov
aam
mov
in
sub
jns
jecxz
repz
push
mov
mov
roll
lret
add
jnp
repz
mov
cld
sbbl
dec
data16
jnp
hlt
mov
xor
lock
and
adc
int3
xor
pop
ficompl
dec
jmp
addl
sub
cmp
call
dec
cmp
push
fucompp
ret
ss
jge
fstpt
cmp
cmp
fwait
test
lret
mov
and
ret
sbb
rcr
push
or
mov
adc
inc
dec
stc
notl
adc
insl
das
mov
mov
push
mov
pop
xor
dec
test
and
inc
lods
or
les
int3
int3
inc
adc
inc
pop
mov
cmp
loop
dec
mov
iret
mov
test
js
jo
inc
int
jae
dec
inc
outsl
mov
sub
cmp
clc
jmp
aam
inc
pusha
push
add
sahf
or
je
dec
lods
mov
sub
inc
xchg
ret
dec
imul
cs
mov
mov
mov
push
icebp
in
or
fisubs
in
sbb
jmp
sbb
xlat
mov
imul
pop
pop
adc
addr16
add
cmp
fldl
mov
sahf
cs
fstpt
mov
gs
mov
ds
inc
inc
mov
inc
pusha
cmp
adc
sub
aad
mov
add
aam
js
sbb
xlat
adc
dec
pop
mov
pop
jmp
enter
popa
inc
sub
dec
in
cmp
mov
xor
imul
mov
enter
testb
jnp
xchg
pop
sbb
sub
lods
fcmovnb
inc
pop
js
mov
and
adc
push
cli
clc
push
test
pop
dec
nop
xor
rclb
dec
dec
cs
pop
mov
adcb
leave
sub
sbb
dec
mov
ss
mov
lret
cmp
push
pop
mov
add
adc
sub
pop
daa
mov
sub
ss
leave
sbb
lods
out
ror
loope
shrl
sarl
or
sbb
lock
mov
xchg
xor
xor
cmp
insb
jb
cli
cmpxchg
dec
add
sub
pop
fildl
or
ss
jmp
push
cwtl
cmp
xchg
pop
push
test
js
add
or
cmp
fisubrs
ljmp
fiaddl
lcall
in
mov
aaa
jmp
dec
mov
and
shll
jnp
test
push
adc
and
scas
mov
aas
cmp
cmpsb
xor
mov
xchg
xchg
sbb
dec
add
sbb
cmc
and
and
lds
xchg
inc
jbe
fimull
mov
fsts
ss
sbb
push
fcmovb
andl
or
pop
das
fwait
mov
xor
dec
xor
and
push
dec
pop
cmpsb
test
mov
mov
push
das
sbb
aam
push
sub
add
in
xlat
outsl
bound
xchg
cmp
je
mov
jl
fcmovnu
xor
mov
sub
jbe
dec
mov
xor
cmp
sbb
int3
call
xor
aas
mov
xor
fbstp
pop
mov
arpl
roll
dec
mov
xchg
mov
sti
inc
mov
lods
stos
mov
jg
out
sti
jg
xorl
lods
and
or
pop
sbb
inc
mov
bound
or
addl
mov
inc
and
es
or
gs
divl
dec
xchg
cmp
push
jmp
or
aam
enter
cmp
dec
aas
dec
lret
push
les
shl
aaa
or
mov
mov
sbb
outsb
out
sub
push
sarb
ret
pop
lret
lods
jns
jo
pop
adc
adc
xchg
fimull
cmp
sbb
mov
adc
xor
or
fwait
mov
daa
orb
mov
dec
sub
ljmp
push
or
adc
decl
es
aaa
add
mov
inc
jle
xchg
mov
cmp
sub
enter
shrb
sti
cmp
stc
mov
fisubl
repz
pop
pushf
push
iret
sbb
push
mov
pushl
out
or
adc
mov
or
xor
adc
je
popa
sub
pop
adc
jb
pusha
inc
fisttpl
cmp
sbb
pop
adc
push
jmp
cmpsb
dec
xchg
pop
jo
sub
jmp
imulb
fdivr
jne
ja
leave
adc
mov
mov
hlt
imull
cmp
inc
decl
cmp
jecxz
mov
push
aam
and
mov
push
daa
xchg
inc
fdivrl
cmp
stos
inc
sbb
lret
js
dec
sbb
lock
adc
lret
or
pop
mov
fisubrl
push
cmp
mov
mov
repz
dec
pop
stc
mov
negl
cmp
and
aaa
sub
aas
loop
dec
adc
add
inc
add
out
fwait
mov
xor
jecxz
fcmovnu
cmpsb
inc
sti
pop
stos
cmp
jmp
in
push
fwait
jnp
jno
cltd
aas
outsl
test
add
push
movsl
adc
xchg
into
inc
push
mov
inc
lret
inc
xchg
jmp
aaa
adc
add
push
sbb
mov
mov
sbb
out
push
test
pop
mov
cwtl
mov
pop
push
lock
mov
insb
nop
pop
ja
xchg
mov
xchg
movsb
xor
or
or
cmpsl
xchg
ljmp
inc
push
btsl
js
shl
dec
sbb
dec
jmp
js
jecxz
ss
imul
dec
stos
mov
fldcw
sbb
mov
adc
xor
cmp
pop
and
or
or
mov
fwait
dec
jno
pop
and
ja
and
stc
mov
dec
xor
lret
cmpl
fcmovbe
leave
cmpsl
leave
sbb
push
mov
dec
jmp
dec
inc
pop
repnz
mov
sub
clc
xchg
fprem1
loope
xlat
je
mov
adc
mov
fisubl
das
out
pop
push
xor
add
nop
es
or
cmp
loopne
jbe
test
xchg
pop
xchg
sbb
lahf
xchg
adc
ds
stc
mov
cmp
je
pusha
stos
cmc
mov
call
mov
divl
and
ss
push
cmc
insl
or
dec
xor
add
fcomip
and
adc
sti
pushf
pop
push
mov
mov
or
sbb
dec
insb
aam
push
nop
in
hlt
inc
and
or
fistpl
xchg
mulb
repz
xchg
es
insb
outsl
adcb
cmp
inc
mov
out
pop
push
cmp
jecxz
jae
loope
icebp
inc
ret
inc
iret
mov
test
or
jo
leave
lret
push
pop
inc
mov
into
cltd
xchg
fstpt
xor
movb
inc
and
pop
sub
mov
push
push
inc
adc
decb
shlb
sbb
push
jl
rcrb
adc
mov
out
imul
pop
adc
pusha
xor
arpl
clc
repnz
mov
push
lret
jmp
shlb
mov
pop
ret
das
or
sub
vandps
jp
dec
mov
or
jo
pop
pop
into
mov
jl
add
stos
add
stos
inc
pusha
ret
fimuls
ficoml
mov
mov
dec
xchg
out
dec
fs
mov
sub
inc
and
jae
divb
test
mov
mov
mov
fdivrs
mov
push
data16
inc
dec
adc
cwtl
fidivrl
or
or
push
mov
pop
sbb
iret
mov
xor
jg
aaa
rclb
inc
insb
xor
mov
ss
inc
xor
sub
fwait
mov
fmuls
shr
push
ror
dec
stc
push
aam
out
call
pop
jecxz
and
cmp
xor
daa
fcmove
pop
mov
jmp
in
mov
sti
iret
pop
ljmp
add
xor
sbb
in
shll
jmp
rolb
jmp
test
ret
nop
jmp
jmp
enter
inc
out
outsl
fcmovnb
aam
xchg
cmp
add
clc
mov
cs
or
sbb
hlt
ss
and
mov
inc
mov
stc
int
jo
xlat
test
mov
cmp
add
sbb
add
cmc
mov
adc
push
inc
and
leave
lret
mov
jae
adc
pop
inc
out
iret
lock
mov
push
xchg
sub
in
shlb
stos
out
mov
mov
and
bound
loopne
incl
dec
xor
xchg
mov
dec
mov
lret
adc
push
iret
adc
test
js
jo
std
ss
pop
push
push
fidivrl
sbb
add
mov
filds
test
cmp
jge
cwtl
sbb
inc
jmp
fcompl
mov
pop
sbb
rorb
inc
mov
xor
inc
sub
or
cltd
mov
sub
fnsave
out
mov
sub
sub
cli
stos
sub
xor
cmc
add
test
negb
xchg
pop
hlt
in
mov
subb
or
aam
mov
cmp
dec
cmp
icebp
pop
cmp
stos
push
ljmp
rorb
mov
dec
icebp
push
push
data16
xor
scas
sbb
add
and
imul
daa
rcrl
cmc
ret
ficompl
ja
addb
mov
mov
shll
cmp
mov
jne
jecxz
inc
mov
data16
xor
ss
cmp
pop
je
pop
sbb
sbb
mov
inc
movsl
xor
lods
cmp
cmp
inc
mov
push
addb
pop
mov
fstpl
dec
xor
and
stos
sti
push
dec
mov
and
or
dec
orb
pop
jnp
mov
sahf
or
mov
pushl
or
hlt
movsb
sbb
fs
es
ret
inc
cmp
test
push
sbb
pop
gs
jl
imul
arpl
mov
sbb
sti
cmp
std
cmp
int
push
mov
add
mov
les
mov
inc
js
pusha
test
ss
sbb
xchg
push
xor
push
lahf
or
int3
out
jb
call
pop
inc
js
mov
mov
dec
mov
cmc
pop
lods
cltd
mov
test
sbb
xchg
pop
decl
ss
nop
push
cmp
pop
ret
xchg
xor
adc
push
push
repz
sarl
sub
jno
push
or
jg
xor
push
xor
sbb
movsl
mov
push
or
pop
dec
mov
mov
inc
lds
pop
lahf
mov
mov
scas
mov
dec
add
scas
out
pop
flds
adc
cmpsl
dec
imul
xor
lret
mov
mov
cltd
push
xor
push
push
movsb
sti
pop
pop
dec
adc
cmp
iret
sub
mov
dec
outsl
fldenv
mov
movsl
shlb
inc
cltd
cmp
ficomps
jg
mov
lcall
xor
sbb
je
mov
cmp
cmpsl
or
and
mov
xor
xchg
sahf
dec
sbb
mov
js
inc
movl
cmp
cmp
cwtl
sahf
sbbb
aas
pop
es
movsl
jnp
xorl
pop
xchg
int
pushf
nop
jle
cmp
test
out
inc
pop
sub
lods
or
jmp
rcrb
es
pop
ret
mov
add
js
js
pop
out
fmull
pop
imul
imul
dec
push
cmp
cmp
imul
and
ss
xor
adc
out
jmp
nop
cmp
icebp
cltd
push
xchg
sbb
add
dec
dec
sub
xor
aad
cmp
or
xor
mov
fadds
mov
xchg
sbb
mov
jl
adc
inc
dec
mov
test
and
ss
mov
add
add
in
sbb
fsts
adc
ficoml
fwait
lea
fcomi
inc
addb
dec
daa
push
push
mov
cmp
sbb
enter
inc
cmp
fwait
mov
stos
pop
jbe
xor
jne
mov
repz
push
clc
hlt
sbb
jp
push
dec
mov
pop
popa
inc
push
dec
dec
jmp
adc
iret
stos
imul
std
popa
mov
out
stos
lods
push
fistl
scas
adc
sub
leave
fimuls
mov
cs
loop
sbb
dec
jmp
fwait
cmc
divl
bswap
repz
stos
into
and
movsl
dec
sub
jmp
mov
cmp
movsl
test
adc
add
fisubrl
or
in
adc
push
xor
sub
add
mov
and
mov
xor
insl
pushf
mov
xchg
mov
jmp
inc
sub
into
add
fcmove
mov
ds
sbb
pop
pop
cwtl
xchg
jo
aam
and
mov
sbb
fcmove
sarl
push
dec
es
pop
ret
mov
mov
push
push
popf
cmc
ss
dec
dec
jne
xor
xchg
aad
jmp
out
jmp
sbb
lods
pop
repnz
xor
sub
jo
cvtps2pd
arpl
cmp
or
hlt
dec
push
fisubs
push
fdivs
mov
mov
sbb
test
add
push
sti
sbb
inc
pop
mov
sarl
inc
xor
xchg
orl
std
dec
je
mov
mov
fisttps
nop
push
sub
ds
cmpsl
pop
cmc
lret
sub
test
addb
push
into
negb
inc
xor
pop
push
rcll
xor
mov
imul
inc
pop
out
mov
outsb
jno
push
jns
sub
test
sub
mov
xor
mov
imul
mov
xchg
mov
arpl
stos
dec
sbb
sbb
dec
in
or
stos
mov
xchg
xchg
and
aaa
int3
fwait
clc
jae
mov
mov
dec
add
cmp
pushf
adc
stc
pop
mov
leave
mov
adc
mov
adcb
lahf
push
insl
jnp
mov
cmp
enter
push
adc
not
test
and
std
ret
jo
mov
loopne
ret
push
pop
xorb
add
jnp
movsb
test
dec
cmp
xchg
mov
or
cmp
dec
ficoml
and
stc
outsb
fistpll
std
movsl
sub
mov
xchg
lret
fstpt
adc
aaa
or
aam
sub
sarb
outsl
shl
fcomi
fs
and
mov
enter
and
inc
aad
mov
mov
adcl
enter
mov
fs
pop
rcl
jmp
dec
clc
push
mov
add
lock
ss
dec
je
push
adc
pop
push
dec
enter
fwait
ret
loope
xchg
fisubrl
xchg
or
bound
stos
ret
pop
cmp
pusha
sbb
pop
or
ds
sub
mov
dec
out
inc
jb
dec
sub
add
pop
imul
add
sbbb
fs
aad
fidivl
ret
xchg
cmpsl
das
mov
add
adc
or
add
pushf
adc
shl
jne
sub
cltd
sahf
decb
push
shrl
push
das
js
lret
shlb
xchg
push
jge
pop
int
mov
sub
add
icebp
movsb
and
push
aam
js
sbb
mov
dec
or
xchg
enter
fisubrl
mov
sub
fwait
pop
leave
shr
ljmp
xor
out
das
aam
mov
pushf
adc
pop
inc
cwtl
sbb
push
lock
stc
inc
pop
inc
add
orb
sub
je
push
fwait
test
or
dec
cmc
adc
imul
int3
aas
cmp
iret
push
jb
lret
mov
adc
fldl
xchg
pop
xchg
mov
loopne
pop
js
clc
ja
mov
enter
dec
pusha
mov
andb
mov
cmp
out
add
xor
shlb
or
cld
decl
sbb
ret
sub
popf
dec
cmpsl
mov
mov
push
test
mov
in
cmpsl
sahf
add
test
jle
dec
cmp
pop
mov
push
sbb
enter
dec
imul
mov
stc
dec
cmp
mov
inc
mov
popa
in
mov
mov
cmp
mov
mov
stc
pop
sbb
js
cs
push
lret
cmc
xchg
subl
mov
jae
pop
adc
test
dec
mov
shll
imul
loope
int
rcr
je
push
pusha
fs
lahf
addr16
lods
mov
cmp
fs
add
sti
call
pusha
fimull
inc
fdivrs
cmp
loop
mov
in
dec
mov
pslld
enter
inc
push
dec
mov
mov
jae
adc
loope
out
popa
icebp
cmp
ret
ss
adc
btc
push
addr16
or
cmp
popf
dec
xchg
push
ficoml
sbb
aaa
or
icebp
mov
sub
xor
add
adc
stos
xlat
cs
pop
jg
add
imul
fs
pop
pusha
ss
mov
cmp
jo
or
pop
mov
inc
loope
sbb
mov
stos
mov
or
jp
dec
adc
mov
push
sbb
imull
xor
adc
loop
lret
inc
mov
pop
add
sub
xor
push
push
popa
dec
lock
fnstenv
mov
push
jle
mov
pop
movsb
addr16
flds
and
mov
adc
mov
mov
push
mov
xorb
shll
cmp
add
jo
fcmove
into
add
xor
add
sti
out
push
pop
and
test
scas
dec
mov
sbb
sbb
pop
and
pop
or
fcmovnu
push
cltd
xchg
imul
xchg
inc
lods
mov
jne
in
mov
loopne
cmp
or
shlb
mov
stc
pop
mov
icebp
cmp
in
in
or
je
push
jae
mov
adc
push
push
pop
lods
cmp
mov
aad
cli
sbb
pop
hlt
pop
mov
push
std
adc
dec
push
mov
mov
mov
mov
xchg
pop
pop
push
mov
or
adc
mov
je
shll
push
hlt
cli
rolb
inc
loope
or
adc
out
cli
std
idivb
sub
xor
test
mov
pop
add
rclb
pushf
rcll
je
push
jl
orl
dec
mov
xor
xor
mov
leave
test
dec
mov
xchg
fdivrs
sbb
idivb
inc
inc
xchg
je
cmp
jnp
pop
rclb
aam
addr16
sti
lea
mov
adcl
das
dec
fisttps
mov
enter
or
notb
imul
jnp
inc
jg
cwtl
xchg
icebp
scas
aaa
jae
mov
ljmp
out
xor
sbb
fwait
sar
or
xor
int
cmp
add
inc
sti
std
fcom
push
mov
pop
push
or
cmp
fwait
sar
rcr
dec
xor
push
aaa
test
push
adc
pop
js
movsb
xor
mov
xor
dec
dec
out
dec
inc
inc
int3
cmp
orb
sub
ficoml
std
adc
cs
call
aad
push
adc
enter
js
insb
cmp
push
dec
push
cmp
mov
or
or
mov
clc
dec
orl
mov
mov
test
cmp
outsb
sbb
mov
cwtl
xchg
sbb
sbb
pop
sbb
stos
xchg
adc
sbb
into
xchg
sbb
adc
dec
in
lcall
jb
cmp
dec
mov
lcall
cmp
sti
pop
jne
rclb
in
push
in
push
cmp
mov
xchg
add
leave
sub
stos
shlb
adc
mov
jmp
leave
imul
imull
int
leave
mov
stos
mov
jp
cmp
notl
xor
xchg
stos
push
add
push
or
leave
or
shr
inc
jnp
xlat
mov
fnstcw
dec
mov
mov
xlat
push
mov
lret
cmp
sub
cmp
fwait
inc
mov
sub
xor
mov
and
jns
fistpl
jmp
int3
mov
sub
je
repz
mov
cmp
call
shl
mov
xchg
dec
mov
out
mov
mov
lret
pop
pop
cmp
xchg
cmp
xlat
or
test
lds
mov
xor
and
dec
lret
sbb
flds
ret
stos
cmp
cmp
mov
or
push
rorl
pop
and
sbb
test
ss
js
jg
lret
inc
lcall
adc
mov
cwtl
mov
xlat
imul
ja
dec
cmp
sbb
lret
jp
jns
pop
into
icebp
dec
dec
fistpl
stc
push
sbb
test
adc
fcmovnu
pop
push
stc
mov
jnp
fldcw
sbb
inc
cmp
ljmp
dec
jmp
lgs
push
pop
dec
mov
push
cmp
mov
enter
pop
cmpsl
and
inc
mov
mov
out
push
imul
or
add
cmpb
out
push
les
cmp
mov
adc
nop
rorb
or
test
cmp
mov
test
push
in
mov
mov
fildll
jb
pop
inc
fcomp
ja
mov
shrl
rolb
mov
daa
mov
jns
mov
dec
mov
adc
int
mov
sub
into
jmp
mov
sbb
push
pop
ds
pop
inc
dec
push
ret
cwtl
ds
and
or
adc
pop
jg
shrb
fiaddl
jmp
stc
mov
mov
mov
lods
dec
stc
js
sbb
add
mov
les
fadds
push
mov
stos
add
jmp
lahf
rcll
or
inc
sbb
xchg
shlb
fs
jb
stos
das
xor
popf
rol
jmp
mov
pop
cs
push
ja
jl
or
dec
sbb
sbb
call
js
pop
dec
and
xor
lret
repnz
sub
pop
cmp
lea
sahf
lods
dec
movsl
push
mov
test
aam
xor
xor
xchg
call
adc
mov
xor
pop
lds
push
mov
imul
or
xchg
sbb
inc
fstpt
test
js
dec
or
mov
sbb
inc
mov
cmp
dec
push
sbb
ds
lahf
push
dec
and
mov
jnp
or
and
dec
push
out
cmp
mov
jns
dec
imul
mov
or
sub
sahf
mov
fldt
push
push
sbb
push
mov
stos
push
push
es
mov
or
addr16
movsb
sub
dec
aas
adc
adc
test
push
sub
and
or
fsubl
popf
dec
jns
mov
fnsetpm(287
mov
insb
dec
outsl
out
out
wrmsr
adc
mov
sub
adc
pop
in
lcall
mov
sbb
imul
push
imul
sbb
es
rcll
daa
inc
lea
inc
nop
xor
push
ret
hlt
sbb
scas
pop
push
jns
aaa
push
push
mov
outsl
stos
jl
mov
fimull
into
lods
xor
cmpsl
cmp
sub
sbb
cmp
adcl
mov
fbstp
push
pop
mov
xor
push
cmpsl
imul
int
pop
inc
push
mov
or
out
clc
les
dec
sbb
cmpb
xchg
adc
lret
adc
jg
xor
cltd
movsl
sub
stos
rorb
mov
mov
stos
xor
popa
add
mov
pop
call
sarl
dec
mov
imul
cmp
and
mov
into
decb
fiaddl
push
daa
dec
adc
jmp
sbb
fwait
cmp
mov
mov
push
mov
subb
ds
test
cmp
mov
inc
or
jg
insb
adc
push
add
stos
pop
and
shll
data16
dec
and
sbb
cmp
cmp
adc
insl
es
andb
cmpl
icebp
pop
xor
fldl
rcr
and
push
adc
repz
add
mov
mov
ss
out
mov
xchg
dec
sbb
mov
mov
sar
inc
and
imul
pop
pushf
push
xor
shr
mov
mov
push
mov
aaa
jp
sub
push
push
cmp
fidivrs
movsb
mov
imul
lret
cmpb
dec
and
jb
pop
sbb
dec
cli
jns
mov
out
testb
repz
insl
pop
fcompl
add
mov
mov
xchg
loopne
dec
mov
xor
dec
mov
pushf
stos
stc
mov
inc
xor
fs
aaa
inc
aam
movsb
jp
gs
lock
push
mov
rsm
xchg
stc
cmp
hlt
pop
rcl
fistpl
push
cmpsl
pop
pop
adc
les
push
cmp
dec
out
jbe
mov
xchg
mov
dec
cmp
push
cmpsl
sbb
sub
xchg
pop
inc
pop
out
sub
pop
sbb
cmp
and
xor
stc
add
mov
jmp
fadds
push
and
jle
imul
sub
lret
push
sub
repnz
xchg
mov
xor
les
cmp
dec
mov
ret
in
out
aas
fistl
push
int
sti
adc
jmp
fistl
in
mov
cli
sbb
stc
std
and
es
inc
adc
in
jl
sbb
fucomi
cli
stc
dec
sbb
loopne
jo
pop
add
and
fisubs
rclb
clc
inc
mov
pop
jmp
stc
in
sub
loope
lods
cltd
roll
cmp
call
sbb
out
adc
sbb
cmc
adc
repz
xchg
pop
push
mov
jle
push
push
add
lcall
xchg
adc
lods
inc
mov
jns
popf
loope
rcr
scas
out
fld
testb
mov
sub
out
sti
fwait
push
mov
or
jno
fisubrl
jnp
clc
xchg
inc
mov
ljmp
adc
dec
call
or
jnp
xchg
or
je
ss
shll
sbb
cmp
inc
adcl
cmp
adc
push
adc
lret
lock
pop
or
jge
les
push
int
dec
loopne
fwait
pop
ljmp
outsb
add
aam
int3
mov
xor
cmp
test
mov
dec
hlt
pop
push
repz
scas
out
mov
inc
lret
push
add
or
push
add
sub
rcll
jnp
pop
loope
repz
in
xor
mov
sahf
dec
test
inc
fidivs
sub
pusha
stos
xchg
out
add
or
xor
push
adc
dec
sub
push
dec
shl
jbe
cmp
adc
fisubrs
sbb
fwait
jg
sti
adc
sti
iret
or
cmp
and
inc
push
jno,pt
xor
sub
mov
and
xor
cmp
pop
xchg
fstpt
mov
movsl
out
shlb
mov
mov
nop
push
cmp
aad
popf
mov
xchg
pop
rclb
dec
dec
lods
mov
adc
jns
xor
ss
mov
adc
lahf
cltd
fdivp
cltd
mov
fiadds
insb
xor
paddusw
rcrb
adc
movsb
xchg
std
fldt
stc
sbb
imul
xor
mov
inc
stc
mov
fsqrt
hlt
mov
lcall
mov
fidivs
call
hlt
or
sbb
incl
push
mov
inc
dec
jmp
insl
or
push
adc
enter
cmp
clc
ret
adc
ss
fwait
xchg
scas
adc
sbb
mov
inc
xchg
lret
sub
test
fiaddl
inc
sarl
das
adc
pop
cmp
ja
mov
sti
pop
mov
les
push
stos
dec
add
inc
pusha
xor
mov
xor
sbb
mov
mov
gs
push
test
sub
stos
jo
mov
sub
jno
fwait
outsb
xor
mov
into
aad
sub
jnp
mov
pop
push
ljmp
mov
stc
fnsave
cmp
xor
mov
pop
xchg
inc
cs
dec
push
xor
push
cwtl
pop
jle
popa
xchg
and
xchg
mov
inc
outsb
push
mov
fisttps
inc
jg
xlat
pop
add
sbb
in
mov
pop
andl
adc
or
adc
adc
cmp
xor
jb
add
testl
cmovs
pushw
mov
xchg
xor
mov
sub
loop
imul
xchg
add
mov
stos
mov
adc
mov
insl
and
or
fprem1
lret
pop
sbb
imul
dec
std
inc
jno
xor
sbb
mov
imul
xchg
cmp
mov
cmp
mov
push
mov
lret
add
push
sub
addl
stos
es
sbb
pop
sbb
fldcw
loop
pop
pop
cmpsl
icebp
loopne
sti
mov
add
lret
adc
adc
mov
out
pop
jnp
movl
xor
lea
imul
inc
enter
push
mov
mov
rcl
dec
testb
orb
dec
jb
aad
daa
aas
out
adc
loopne
sub
xchg
sti
cmp
sbb
mov
test
leave
cmp
out
push
cmp
js
loope
sahf
lds
push
dec
mov
sbb
and
or
fld
mov
jnp
add
fdivs
sub
xor
mov
shlb
clc
xchg
ds
mov
daa
ljmp
sti
cmpsl
pop
into
push
cld
xor
sbb
pop
push
sub
arpl
in
in
jl
std
stc
jmp
mov
jo
mov
cld
arpl
or
call
inc
ror
cli
xchg
bound
sti
scas
lods
jns
mov
das
mov
hlt
pop
stc
pop
cmp
mov
adc
stc
adc
jp
inc
shr
and
push
in
mov
popa
fdiv
mov
fld
push
mov
test
add
push
orl
cmp
sub
shlb
push
inc
mov
ret
in
popf
jmp
lret
sub
mov
push
xorb
ljmp
sbb
push
loopne
dec
xorl
push
push
adc
shll
inc
sbb
dec
enter
sub
xchg
sub
arpl
roll
loope
out
and
and
adc
enter
pop
cmp
dec
pop
add
in
aaa
adc
pop
jbe
andl
jno
mov
or
fwait
das
jae
add
xchg
ljmp
ja
sbb
jp
sbb
mov
adc
or
out
addr16
arpl
or
imul
or
call
cmpsl
lret
or
or
sbb
shlb
push
lahf
sbb
xchg
lock
mov
inc
jmp
push
xor
rcrl
popf
mov
mov
jo
pop
pop
jnp
and
jmp
lock
xor
mov
mov
fidivs
mov
push
pop
int
call
repnz
mov
les
mov
mov
ljmp
enter
mov
in
pop
push
push
into
lret
or
and
add
jns
lahf
lret
lret
daa
ret
inc
shr
inc
les
scas
stos
dec
dec
psubsw
ja
mov
jmp
stc
dec
call
clc
sbb
cs
icebp
push
fwait
jo
add
jne
adc
xchg
mov
cli
cs
flds
jns
xor
sub
dec
dec
or
sti
testl
push
mov
xchg
mov
mov
je
cmp
push
in
add
dec
pop
popa
sbb
loop
adc
adc
enter
push
fcmovbe
in
and
jmp
mov
push
cmp
cmc
movsb
dec
xor
stc
add
rcr
ficoms
test
dec
dec
dec
xor
add
arpl
jl
dec
pop
imul
mov
push
dec
add
dec
sub
mov
adc
xor
aad
push
and
xor
lret
dec
jle
ss
cmc
nop
lret
push
xchg
imull
mov
stc
cmp
mov
add
lea
or
scas
dec
and
insb
sbb
mov
loop
push
into
lahf
mov
push
mov
dec
loop
sub
xchg
dec
shl
loopne
push
cmp
sub
add
pushf
pop
cmp
orb
cmp
xchg
push
mov
mov
add
or
insb
das
add
icebp
ret
sub
pop
mov
cmp
in
jns
mov
pushl
cwtl
and
gs
or
mov
jmp
pop
push
pop
stc
fdivrl
jns
jnp
add
call
cli
adc
insl
xor
cs
sub
repz
fistps
stos
and
mov
pushf
sbb
imul
lods
adc
and
lret
pop
fwait
inc
int3
out
enter
test
iret
daa
dec
push
sbb
inc
xor
sbbl
pop
and
xchg
push
sbb
add
jnp
push
das
jbe
loop
jae
sahf
xchg
in
add
dec
jae
xchg
push
hlt
cmc
or
fcmovne
sarl
push
pusha
dec
cmp
push
mov
jp
das
xor
mov
jp
xchg
jno
push
xor
shrl
dec
xchg
imul
push
jmp
push
inc
adc
mov
adcl
es
fadd
popf
push
jl
pop
jmp
xor
jb
sti
stos
mov
add
pop
xor
sub
ret
push
sub
inc
xchg
in
push
mov
fisubrl
cmp
or
inc
add
aas
int3
andl
bts
jle
jbe
clc
sbb
xor
pop
inc
inc
loop
pop
imul
push
pop
pop
pop
dec
in
mov
sbb
lods
add
fiaddl
xchg
cmc
ret
aaa
pop
push
mov
dec
pop
add
and
pop
inc
repz
or
mov
push
push
ljmp
pop
xor
cmp
sti
mov
movsl
icebp
adc
sti
mov
dec
mov
fwait
in
jmp
dec
inc
out
pop
out
mov
jbe
arpl
cmpsl
into
sbb
mov
dec
mov
jae
ss
jp
nopl
jno
addb
and
mov
ja
fistl
hlt
jmp
mov
sahf
jbe
push
or
sti
sbb
jmp
pop
and
xchg
inc
cmp
jecxz
adc
out
mov
mov
sbb
add
jo
fbstp
test
mov
gs
das
and
fwait
xor
pop
cmp
jno
pop
popf
inc
or
lods
xor
andb
jo
fstps
sbb
adc
xor
push
mov
negl
push
loope
das
fwait
les
jo
stos
movsl
jae
jb
in
nop
pop
mov
mov
cs
mov
mov
test
aaa
mov
mov
fidivrl
adc
int
mov
ja
push
adc
clc
stos
adc
jnp
lret
jmp
mov
or
adc
sub
lahf
sbb
std
aaa
lock
popf
loop
mov
lds
mov
xchg
jmp
sbb
push
aad
jo
addb
enter
xchg
or
aaa
or
imul
loopne
testl
sub
fadd
mov
mov
outsl
lock
rolb
push
pop
push
ficomps
mov
pop
jbe
incl
dec
dec
lahf
and
and
rclb
jnp
cmp
repz
sti
bound
dec
inc
jmp
xchg
dec
cmp
sbb
rcrl
sbb
mov
cmp
dec
enter
xor
addl
and
pop
mov
cs
popa
and
sub
or
outsb
or
push
dec
shl
and
sbb
mov
fcmovne
dec
and
lds
jmp
cmpsb
or
or
mov
aaa
cld
or
sbb
jmp
jnp
add
sub
test
stc
jecxz
mov
mov
cmc
or
fwait
sbb
mov
xorl
aas
leave
mov
jns
lret
sub
das
into
push
mov
lods
aad
mov
sbb
push
daa
sti
ud0
fstps
lahf
cwtl
pop
aad
out
insb
or
sub
xchg
mov
push
pop
dec
dec
push
cmp
jmp
mov
mov
mov
mov
cmp
mov
jl
jno
jp
and
fbld
sub
push
xor
jb
sub
jmp
loope
sub
cmpsb
jae
mov
insb
das
cltd
stc
and
cmpsb
inc
repz
mov
xchg
mov
jns
mov
pop
jge
mov
pop
push
inc
jmp
mov
pusha
cltd
add
jge
shll
arpl
push
fdiv
iret
testb
pop
stc
xchg
dec
push
pusha
xor
ljmp
inc
mov
add
inc
pop
ret
sbb
stos
mov
sbb
fndisi(8087
sbb
daa
in
push
ud0
ret
int
xorl
mov
ljmp
negl
mov
mov
add
xor
jno
push
sarl
xorb
push
outsl
cld
pop
mov
pmulhw
push
in
push
adc
pop
and
jo
add
stc
push
cli
imul
or
icebp
mov
xor
inc
push
outsl
int3
dec
iret
loopne
in
mov
pop
int3
shll
mov
rorb
adc
nopl
mov
test
lret
add
cli
push
icebp
pop
adc
iret
jns
sub
aaa
shll
sbb
dec
ja
cmpsl
sbb
jmp
push
inc
popa
push
xor
push
push
lcall
das
clc
dec
cmpsb
in
adcl
mov
pop
fldl
cltd
notl
adc
dec
cmpb
add
mov
dec
lods
mov
test
mov
cwtl
ret
add
mov
or
lock
pop
test
or
dec
pop
xchg
hlt
push
xchg
mov
test
push
sbb
dec
adc
fidivl
adc
faddp
inc
sub
mov
mov
out
push
xor
adc
and
sbb
push
or
jmp
decl
pop
push
rorl
jnp
fisttpll
repnz
lds
pusha
das
adc
mov
dec
push
scas
ret
sti
mov
sub
xor
ss
fisubl
mov
sbb
or
jbe
jns
lds
out
test
shll
gs
or
or
mov
fwait
mov
mov
push
pop
or
ljmp
ss
sub
cmp
or
xchg
cmpb
jecxz
jl
push
xlat
mov
loopne
jno
sub
lret
cmp
adc
mov
xor
mov
ss
sub
mov
cmp
mov
fdivl
aam
mov
scas
int3
cmp
outsb
shrl
cli
adc
cs
dec
addl
pushf
shll
sbb
xor
mov
dec
sub
inc
and
movl
push
push
int
xor
push
push
lcall
cs
lods
xchg
in
push
sbb
das
push
adc
mov
dec
pop
mov
xor
inc
mov
or
leave
sbb
mov
sbb
aaa
sarb
fistl
adcb
xchg
bound
jle
mov
in
ljmp
mov
ss
mov
sbb
mov
enter
fisttpll
dec
aad
push
dec
inc
pop
add
ss
sbbl
daa
loope
pop
and
cmp
sbb
pop
sbb
or
fucom
in
xorl
ret
sbb
test
push
pop
dec
das
jg
lock
ljmp
setl
imul
aad
repz
sub
fucomip
mov
dec
popf
cmp
push
push
cli
into
or
and
xchg
xor
dec
xlat
mov
mov
insl
outsb
enter
lret
cld
and
cmpsb
je
sbb
push
add
dec
xor
repz
xor
lock
and
mov
cmp
cmpb
dec
iret
lahf
or
pop
loop
stos
fs
repz
lahf
or
pop
out
push
adc
pusha
lods
xchg
mov
mov
dec
stos
pop
mov
lret
add
pop
pusha
loopne
stos
mov
jg
neg
out
fstps
stc
add
mov
xchg
enter
push
inc
subb
jge
lret
fs
sbb
ljmp
aad
jmp
fcompl
leave
loop
frstpm(287
mov
jne
jmp
insb
sbb
icebp
in
outsb
cmp
shl
lcall
lret
rcll
int
dec
push
inc
add
cltd
jge
inc
js
pop
jnp
pop
loopne
pop
stc
jl
jns
ret
push
push
sub
call
jmp
test
rcll
jnp
and
adc
scas
or
push
dec
xor
in
stos
dec
inc
add
jo
dec
pop
test
mov
imul
push
dec
mov
subl
sarb
in
cwtl
ficoml
aam
mov
and
scas
jp
aaa
fwait
enter
mov
test
cmp
jbe
dec
sub
and
icebp
mov
ljmp
test
jnp
iret
ss
ds
dec
lahf
les
dec
xchg
ss
fildl
mov
cli
sbb
sub
jns
xchg
test
idivb
mov
cmp
popf
in
jmp
sti
and
sbb
mov
mov
mov
xor
mov
push
decb
popa
sub
jmp
push
or
into
sti
and
aam
push
dec
roll
mov
icebp
lahf
pop
jg
pop
aad
movlps
fisubrs
jle
out
in
cmp
rorb
movb
pop
sbb
sbb
jne
loopne
inc
fwait
outsl
popa
fwait
mov
push
add
xchg
cltd
mov
xor
cmp
jns
lahf
add
xchg
and
sub
and
xchg
add
sub
xchg
push
adc
les
sahf
xchg
aas
cs
andl
popa
or
lds
dec
pop
jge
bound
movsb
std
hlt
js
inc
cwtl
jne
outsb
stc
cs
sbbb
inc
mov
lret
sbb
shll
mov
movsl
mov
cmp
gs
das
fstps
add
addr16
mov
test
sti
lret
lods
hlt
jl
push
inc
push
and
daa
into
mov
mov
or
out
out
mov
js
jmp
das
sub
inc
dec
adcb
ljmp
stos
sti
repz
adc
adc
sysenter
mov
mov
dec
stos
dec
roll
sbb
push
add
and
movsl
xchg
test
xchg
call
jecxz
fwait
fwait
xor
pop
mov
sbb
rcr
and
pushl
push
dec
ss
int
push
mov
mov
loope
jno
cmpsl
outsb
xor
or
push
das
call
fsubrl
imul
sarb
rcr
movb
inc
mov
loope
push
lea
pusha
repnz
push
movaps
xchg
pop
cmp
in
mov
sub
jb
push
add
xor
push
mov
push
popf
or
pop
insl
nop
jne
pop
sbb
dec
push
xor
lea
cmpsb
ss
xor
mov
popf
xor
mov
or
js
es
ljmp
and
test
pushf
sarl
insl
push
negb
push
push
add
loop
mov
into
fldcw
mov
cmp
pmaxsw
insl
cli
jbe
pop
pop
mov
int3
push
inc
add
imul
lret
rorl
sub
popa
int
cli
outsl
xchg
push
iret
psubusb
push
out
pop
mov
mov
aas
decl
popf
inc
es
inc
xor
xlat
xchg
xchg
xlat
push
mov
jnp
cmpsb
insb
mov
sub
push
imul
int3
mov
movsl
xor
push
pop
subl
cmp
xchg
push
mov
or
fstp
shrb
fcmovnu
sbb
dec
add
arpl
inc
xchg
das
pop
xorl
mov
lock
fcmovb
sub
out
add
xor
and
test
add
adc
mov
push
adc
les
rcrb
dec
out
out
add
push
pop
loop
adc
arpl
sbb
lret
mov
mov
adc
dec
outsl
push
dec
dec
xchg
iret
je
pop
rorl
mov
cmp
mov
frstpm(287
add
adc
lret
mov
in
jnp
outsl
xor
sub
sbb
pop
fidivrl
xor
imul
fstps
gs
loope
cmp
adc
push
mov
jmp
pop
adc
pop
ja
out
mov
outsb
sahf
jecxz
lahf
idivl
mov
ds
movsl
xor
adc
jns
inc
into
scas
push
mov
idivb
mov
xchg
mov
lea
sub
jmp
push
fidivl
in
std
es
xchg
sub
ficompl
loope
dec
imul
mov
pop
cwtl
xor
jmp
cmp
repnz
push
jno
mov
adc
jns
lahf
pusha
shlb
cld
mov
sub
dec
sub
push
pop
push
jg
xor
scas
and
sbb
loope
mov
push
clc
rcll
xor
repnz
xor
sub
mov
push
dec
repnz
push
call
aas
das
pop
or
mov
ss
pop
std
dec
mov
xor
inc
les
subb
int3
test
popa
fidivrl
mov
popa
js
dec
popa
ficompl
fsubl
ja
mov
fildll
cmp
sbb
adc
mov
orl
pop
jo
lahf
mov
movhps
sbb
nop
inc
sarl
lods
mov
adc
stc
inc
dec
mov
jb
dec
es
in
sahf
push
cli
xchg
sub
and
push
ret
push
pop
imul
lods
call
mov
cmp
xchg
jecxz
mov
arpl
inc
mov
pop
dec
call
inc
and
jge
ficoml
and
dec
push
js
xor
jne
inc
mov
pop
push
cmp
nop
jno
push
mov
push
or
pop
push
lods
adc
enter
xor
pop
cmpsl
fldenv
sahf
mov
add
push
mov
fmuls
mov
shl
and
or
mov
push
das
sub
dec
hlt
sub
cmp
xor
or
and
jae
or
or
frstpm(287
stos
mov
testb
mov
ficoml
dec
mov
jl
cmp
dec
jnp
repz
das
cwtl
xor
movsl
add
mov
xchg
sti
fwait
add
mov
out
std
sbb
push
loop
aas
push
clc
inc
fwait
les
mov
bound
loope
es
xor
sub
daa
sub
xlat
sti
sbb
in
gs
or
xor
adc
ror
inc
add
divl
clc
in
adc
bound
loop
call
shrb
fstpt
mov
stos
not
fnstenv
stos
stc
xchg
sub
lret
inc
dec
int
and
lods
lahf
in
cli
fisubl
popf
stc
lahf
adc
sub
push
push
out
inc
mov
inc
jnp
pop
jo
js
xor
icebp
push
adc
and
loope
popa
pop
mov
adc
mov
data16
mov
sub
iret
lcall
repnz
pop
xchg
fistps
xor
dec
jbe
pusha
lret
cs
aad
aam
pop
fwait
sbb
jle
ja
push
push
jge
cmc
adc
cmc
std
or
lds
xchg
pop
jae
sub
pusha
push
mov
mov
and
ret
sbb
test
fadds
jae
cmp
mov
frstor
sub
jnp
fisubl
dec
push
sbbl
cmp
arpl
icebp
xchg
pop
lahf
or
adc
js
cmp
or
std
lods
adc
cwtl
out
mov
push
and
shll
dec
push
mov
mov
xlat
mov
or
std
pop
rclb
dec
inc
dec
aam
xchg
pop
jno
sbb
aas
xor
xor
add
mov
loopne
sahf
fidivrs
xor
mov
sub
in
dec
push
dec
mov
mov
es
les
or
outsl
aaa
sub
in
std
inc
fcomip
lret
ret
rolb
sbb
jg
mov
adc
orl
pop
mov
in
rcll
and
jae
pushf
inc
add
cltd
movsl
mov
dec
xchg
xchg
jb
lahf
jmp
and
ljmp
mov
decb
imul
fistpl
shl
insl
sbb
pop
mov
fsubl
dec
scas
shrl
mov
mov
push
dec
in
dec
movsl
mov
inc
int
aaa
add
dec
add
push
rcl
cmp
test
mov
dec
xorb
fistpl
jns
das
push
dec
lcall
iret
aas
pop
sub
xor
and
imul
rcrb
das
adc
cmp
inc
sahf
pushf
in
aaa
in
clc
pop
popa
jle
dec
shl
mov
sub
dec
jp
xor
xchg
ljmp
loope
sbb
add
fidivl
mov
lea
repnz
adc
sub
mov
nop
stc
fimull
test
jmp
stc
cmp
fwait
rorl
iret
loopne
outsb
cmp
push
dec
xchg
fwait
adc
jns
cltd
cmp
pop
sbb
inc
push
mov
js
fcom
dec
popa
dec
std
inc
lds
dec
cmp
ss
into
sbbl
push
push
rorb
loop
dec
imul
aam
and
sbb
add
xor
mov
cmp
jle
mov
sbb
test
cwtl
lds
lret
add
xchg
fidivl
pusha
mov
movb
aad
sub
xor
jmp
sbb
mov
jbe
adc
dec
sbb
andb
push
sub
fs
dec
dec
out
hlt
lcall
shll
sub
aad
pop
inc
ret
notb
popf
lret
imul
mov
cmpsl
or
cli
test
inc
dec
arpl
gs
sbb
push
ficoml
insl
mov
push
mov
mov
cmpb
bound
dec
mov
xor
mov
xchg
cli
fisttps
or
push
sti
push
jmp
pop
or
jle
test
add
dec
cs
enter
clc
inc
mov
lock
mov
orb
push
sub
or
movsl
and
ret
or
mov
push
add
xor
cmp
jns
sub
jbe
mov
and
bound
and
add
ret
ds
sbb
sbb
dec
bnd
sbb
lock
aaa
mov
cmp
rolb
add
sbb
sar
fstpl
adc
ljmp
sbb
mov
insl
call
lock
xchg
and
iret
mov
sbb
es
sub
outsl
lahf
cltd
rclb
or
xchg
cltd
out
rorb
or
adc
push
fcmovne
fwait
icebp
and
dec
adc
sbb
les
cmp
repnz
rorl
bound
mov
fisubrl
xchg
xchg
pop
in
pop
lods
xor
stos
cmp
xorl
fs
fisttpl
in
xlat
xor
xchg
adc
std
imul
nop
ds
outsl
outsb
sub
push
sub
push
or
cmc
mov
xchg
aaa
ljmp
popa
xor
jne
xchg
js
push
cmp
mov
add
pop
mov
mov
push
pop
lahf
jo
xor
mov
daa
push
or
cmpsb
mov
mov
mov
adc
stos
push
or
jmp
inc
inc
adcb
and
sbb
jl
fwait
sbb
cld
and
mov
pop
sarl
out
or
loopne
sahf
cmp
lret
xlat
xor
adc
mov
mov
cwtl
pop
clc
push
inc
mov
xor
push
mov
dec
xorl
inc
xchg
loop
adc
aaa
movsb
sti
sub
pop
gs
ss
leave
push
pcmpeqw
loope
adc
mov
popa
add
dec
mov
inc
cmp
sub
fucomp
sbb
cmp
inc
pop
push
xor
inc
loope
push
adc
add
mov
mov
and
and
loopne
stos
std
inc
xchg
nop
mov
sbb
ljmp
xor
push
lds
das
aas
xor
cmp
add
inc
sbb
jmp
js
das
pop
adc
cmp
xchg
dec
cs
jge
es
mov
pop
ret
mov
dec
hlt
gs
dec
ljmp
push
sub
xor
pop
dec
in
mov
cltd
fsts
sub
push
in
dec
mov
idivb
sub
xor
adc
dec
test
insb
inc
mov
in
push
push
push
mov
mov
adcb
sub
jle
jns
or
pop
mov
test
ljmp
stos
jns
sbb
dec
add
arpl
dec
pop
in
lahf
iret
mov
dec
loop
sub
push
ljmp
lret
dec
push
popf
sbb
movsl
xor
rolb
pop
adc
movsl
cmp
xchg
lds
xchg
outsb
and
cmp
sbbb
mov
inc
ja
fisubrl
outsb
mov
imulb
inc
adc
pop
in
dec
cwtl
xor
nop
clc
jmp
je
rcrb
es
mov
jns
or
rorb
fadds
std
pop
xlat
ret
add
cld
sbbl
mov
mov
add
or
mov
out
imul
adcl
jge
or
aad
mov
dec
movsl
nop
lock
push
cmp
mov
xchg
mov
lods
cmp
adc
dec
fs
xchg
sub
and
push
popa
sub
adc
sbb
cmpsl
fidivrl
popf
test
pop
and
mov
fmuls
cmp
jno
fcompp
inc
cs
mov
sti
fildl
sbb
std
insl
fimuls
and
pop
mov
js
iret
sbb
sbb
cmpl
or
push
dec
cwtl
mov
loopne
mov
shrl
pop
pop
or
add
mulb
dec
ljmp
add
movsl
or
jo
out
adc
adc
fwait
xchg
pop
filds
pop
sub
shlb
stos
adc
lret
pop
in
mov
adc
push
cs
jne
pop
mov
and
shlb
fsubs
test
inc
pop
xchg
lret
nop
pop
pop
std
adc
cmp
jle
inc
insl
xchg
cmp
loop
negl
ljmp
sbb
lret
pop
mov
dec
or
or
sbb
ja
xor
inc
sub
pop
pop
jns
int
subb
nop
xor
or
rcrb
inc
or
das
dec
pop
pop
cltd
stc
daa
lods
and
loop
repnz
roll
in
mov
test
lret
js
aas
lcall
inc
repnz
clc
mov
sub
rorb
pop
xchg
push
and
jb
scas
sub
lret
lods
or
xchg
pushl
cmpl
mov
mov
push
xlat
cmp
or
inc
sub
inc
or
jns
pusha
idiv
push
stc
mov
or
je
jmp
lcall
xchg
out
push
bound
cmp
clc
scas
inc
popf
push
jb
sbb
dec
daa
jbe
or
adc
mov
jae
pop
lret
cmpsl
nop
dec
test
es
ds
xchg
and
ret
hlt
mov
pushf
stos
cltd
ss
dec
inc
je
cmp
outsl
or
repz
dec
push
fimuls
stc
movsb
adc
mov
xor
outsb
jb
pop
or
fdivr
loopne
mulb
dec
scas
dec
ficoms
mov
mov
inc
pop
jbe
mov
mov
arpl
ss
lods
dec
adc
mov
add
sub
inc
dec
jecxz
push
or
in
push
daa
fs
dec
add
push
ss
adc
xor
repz
mov
fisttpl
mov
sbb
jbe
add
popa
dec
cmpsl
orl
stos
xchg
ds
cmp
cwtl
fidivs
jne
push
scas
mov
mov
movl
pop
adc
subl
stos
icebp
dec
les
outsl
cmp
mov
cwtl
inc
cmp
mov
mov
rcrl
popf
sub
or
pop
fxch
pop
sub
pop
gs
mov
clc
fidivrl
push
addb
dec
nop
jne
mov
push
jg
jmp
fucomi
adc
pop
push
inc
ss
call
push
mov
cmp
lret
sbb
stos
add
adcl
sbb
pop
pop
adc
jno
push
jle
repnz
outsb
mov
xor
lock
int
sbb
or
fnstcw
mov
mov
hlt
lret
ret
or
icebp
sbb
cs
fsubrl
aas
ss
pop
cli
adc
xchg
push
xor
ljmp
xorb
xor
push
jecxz
loopne
mov
icebp
into
add
mov
mov
jmp
sti
or
stos
fcoms
ljmp
mov
repnz
std
mov
push
je
sub
scas
nop
stos
shlb
xchg
push
divb
fsubl
bound
lahf
or
push
cmp
jns
inc
push
inc
or
pushf
mulb
lahf
pushf
je
inc
outsl
pop
cmpl
scas
add
rcrb
sbb
and
mov
test
nop
push
leave
sbb
js
sbb
mov
sarb
jp
repnz
lds
mov
testb
test
ds
je
mov
mov
fdivrl
testb
arpl
or
in
mov
inc
cmp
or
xor
sbb
outsb
dec
sbb
push
stos
frstpm(287
inc
mov
cmp
aas
das
test
cmpsb
or
aaa
iret
ss
adc
or
push
mov
cltd
aaa
sbb
jne
decb
jns
mov
frstor
or
inc
lds
cli
out
aam
test
bound
push
stc
xchg
dec
xchg
fisubrs
xchg
stc
push
jge
adc
movd
xchg
mov
stc
jbe
add
ss
adc
fisttpl
add
adc
imul
pop
test
push
lea
mov
xor
leave
repz
xchg
fsubrp
pop
test
jnp
sub
inc
mov
mov
cwtl
jmp
mov
push
mov
cmp
decb
xchg
or
bound
fiadds
and
popa
jecxz
sub
and
insl
rol
xor
push
movsl
arpl
pop
sub
sub
dec
fistl
in
dec
popa
fidivrl
iret
xchg
pop
jo
pop
lods
mov
mov
nop
insl
and
push
aad
out
loop
ss
adc
call
cmpsl
clc
jns
cmp
adc
push
cltd
mov
cmp
pop
pop
mov
pop
jmp
push
divb
cltd
inc
ds
outsb
outsb
sbb
or
movsb
mov
xor
add
dec
sub
jno
jnp
dec
shrl
fistps
and
test
or
sub
mov
outsb
stos
sub
cmp
jp
sub
fildl
sbb
aaa
sbb
popa
or
and
pop
mov
xor
dec
jl
push
cmp
in
ss
leave
inc
push
out
imul
stos
xor
cmp
aam
stos
enter
jl
push
xchg
shll
and
mov
push
icebp
in
iret
mov
out
and
rolb
sti
mov
inc
mov
popa
add
ljmp
lods
mov
sub
push
fwait
mov
fimull
in
adc
dec
aad
inc
cmpsl
fcoms
push
push
cltd
xor
cmp
rclb
sti
fwait
push
mov
pop
jmp
nop
addr16
xchg
and
cmpsl
pop
arpl
inc
ja
push
int
xlat
or
adc
scas
mov
in
xchg
sarl
xor
fcmovnb
push
pop
int3
adc
loop
dec
cmc
sbb
mov
fstpt
ljmp
repnz
idivl
push
mov
imul
mov
add
and
sub
mov
xchg
cmpsl
lret
or
sub
pop
fcomps
jmp
lret
push
data16
fnstsw
push
mov
xchg
nop
fwait
stc
faddl
jl
pop
sub
add
popa
movsl
jae
or
mov
jl
or
jns
push
sbb
push
ljmp
xchg
jo
cli
fld
push
xchg
fwait
js
shll
cmp
mov
or
xor
push
pop
xchg
mov
xchg
jae
je
push
or
lahf
jg
jecxz
fadd
mov
inc
xor
push
sbb
outsb
xor
or
mov
cmp
jle
jbe
loope
push
add
adcl
fldln2
adc
mov
roll
push
jo
push
std
enter
in
testb
nop
cli
es
jge
cli
push
scas
inc
cmp
shlb
fcmovb
dec
xor
lret
push
lcall
sbb
sbb
jmp
push
enter
mov
inc
shl
enter
xchg
ret
mov
hlt
xor
fadds
push
int3
idivl
mov
repnz
xchg
sbb
mov
jmp
fidivrl
mov
pop
push
out
jp
and
adc
lahf
stc
bound
out
cmp
xchg
sbb
bound
xor
xor
sbb
add
sti
xchg
lds
push
stos
and
mov
insb
xchg
fisttpll
mov
adc
ficompl
pop
popa
add
data16
adc
pop
mov
xchg
arpl
enter
xor
repnz
movsb
pop
int3
jnp
push
shll
setns
xorb
add
mov
sub
xchg
leave
push
mov
cmc
ret
sbb
push
xchg
cmc
xor
jmp
or
stc
and
rcrb
gs
mov
cs
lock
cmpsl
int
dec
and
out
std
jge
hlt
arpl
mov
mov
jno
cmp
ja
or
or
bound
cltd
stc
push
mov
jb
in
fidivs
scas
jbe
adc
rorl
xchg
xor
xor
push
outsb
or
add
mov
fcoml
mov
enter
test
or
push
roll
iret
dec
adc
unpckhps
ret
sbb
in
jb
push
mov
cmp
cmp
pop
lahf
or
pop
lcall
sti
in
sbb
mov
push
lahf
ss
sbb
out
sbb
push
mov
sbb
sub
rep
pop
xchg
stos
imul
jmp
push
aad
cli
mov
ds
outsb
or
sbb
xor
or
dec
ss
int
push
pop
adc
xor
push
ds
mov
mov
cmp
cmp
imul
mov
sub
mov
fdivl
sahf
fst
ds
rcr
dec
and
ds
pop
pop
int
mov
push
dec
in
push
lret
push
jl
sbb
repnz
fstl
mov
mov
pop
xchg
addr16
pop
adc
bound
add
lods
or
mov
or
xchg
push
adc
mov
mov
popa
pop
stos
scas
mov
sbb
mov
xor
ret
mov
repz
stos
dec
sub
mov
int3
imul
cltd
adc
cmp
jbe
fcoml
data16
stos
loopne
mov
ss
iret
pop
mov
cmp
pop
scas
movsb
outsl
mov
test
adc
jns
push
mov
in
jne
mov
add
mov
pop
adc
repz
dec
andb
push
jnp
les
int3
leave
out
leave
inc
mov
mov
jne
sub
cs
adc
or
psllw
stc
popa
xor
enter
lahf
movsb
lcall
js
xor
jae
in
lcall
shrb
pop
inc
imul
popf
add
mov
xor
cmp
lret
lcall
jnp
jmp
movsl
idiv
cs
into
sti
lahf
sbb
adc
xchg
into
mov
cs
fmuls
mov
push
ss
mov
test
test
and
insl
sub
fisubs
pop
xchg
jp
dec
push
adc
xor
ds
pop
push
mov
gs
aaa
add
mov
fsubrl
popf
pop
add
lock
mov
cmp
popa
pop
out
es
xor
push
xor
cwtl
cmp
dec
dec
cmpsl
fcmovnu
add
mov
sahf
add
add
fistl
xor
dec
pop
ds
aas
pop
push
inc
xor
sub
sti
adc
adc
dec
mov
movsl
lea
std
lret
jno
mov
mov
std
sbb
dec
mov
jnp
sbb
cmp
fcmove
mov
push
enter
or
mov
popf
cmpsl
ret
notb
or
in
xlat
sub
shlb
adc
imul
lret
xorl
jno
call
add
fidivrl
dec
mov
xorl
adc
das
jl
push
mov
insl
sub
push
aam
ficompl
mov
mov
adc
mov
pop
je
lret
nop
xchg
fnstcw
mov
jns
jne
aas
pop
xor
mov
inc
cltd
sub
js
mov
dec
fdivl
mov
cmpsl
cli
ds
mov
dec
jbe
mov
pusha
loope
xlat
sbb
pop
in
repnz
jne
cmp
cmp
mov
xchg
cli
jo
stos
dec
jecxz
push
mov
add
mov
divl
inc
test
loop
es
call
push
pop
insb
push
xor
cli
or
pop
movsb
outsb
jb
mov
adc
xchg
fisubl
add
jge
xor
jne
mov
dec
cli
push
addr16
jno
cmc
shr
and
mov
aaa
dec
int3
mov
mov
imul
imul
loop
cmp
scas
repnz
js
aaa
pop
sub
hlt
ldmxcsr
jmp
ja
les
insl
or
popa
push
mov
xor
imul
push
adc
out
roll
not
imul
sub
add
sbb
pop
add
fdivrp
rolb
in
int3
es
pop
pop
adc
adcb
psubsw
stc
sub
dec
pop
lds
add
jp
adc
mov
fidivrl
lock
mov
cmp
add
or
lret
and
xor
shrb
xor
fucomip
lret
pop
fstpt
mov
xchg
mov
mov
divl
js
cltd
mov
dec
pop
sub
mov
movsb
xchg
popa
pop
sub
mov
popl
push
sub
in
mull
and
mov
testl
sbb
mov
ss
or
cld
push
mov
jb
cmp
adc
add
int
pop
mov
sbb
hlt
orl
sbb
sbb
cmp
and
insb
fisubl
xchg
mov
dec
inc
loop
rcrb
int
adc
rcr
sub
es
lahf
lret
dec
jno
push
add
adc
mov
adc
mov
push
mov
xchg
mov
mov
ljmp
rclb
sbb
sti
mov
pusha
xchg
pop
pop
and
mov
push
or
ret
movsb
pop
cmp
xor
cld
hlt
push
add
cmp
gs
xor
cmpsl
ret
je
loopne
mov
ret
jp
mov
pop
dec
lret
xchg
dec
sub
test
divb
jmp
mov
mov
in
push
push
push
xor
mov
incb
lock
sub
or
fiaddl
mov
dec
sub
jp
test
mov
fiaddl
jge
out
addr16
outsl
mov
sub
jle
cmc
fistpll
xor
jmp
or
cld
jno
inc
mov
dec
inc
ja
add
jne
std
cwtl
push
dec
adc
push
jecxz
add
push
fcmovnb
sbb
pop
mov
and
or
mov
mull
or
sub
add
mov
push
mov
popl
cmp
fwait
dec
std
es
pop
or
stos
or
fdivr
repz
cmp
inc
mov
adc
shrb
shlb
shr
push
ficompl
inc
aas
lods
loop
mov
in
cmp
cli
rclb
xor
pop
scas
stc
mov
ss
dec
das
rorl
pop
sub
outsb
dec
sti
mov
jl
mov
outsl
xor
dec
push
lret
negl
addr16
xor
sbb
out
add
clc
xor
notb
enter
mov
cmp
dec
sbb
xchg
xchg
jl
mov
test
cs
and
sarl
aam
nop
cmp
pop
stos
in
ljmp
or
lahf
push
fidivrl
in
jle
clc
mov
imul
sub
das
rol
lahf
ljmp
mov
mov
scas
bswap
cmc
mov
inc
es
push
cs
sahf
and
adc
inc
sbb
mov
popa
cmp
pop
negb
inc
or
jmp
mov
ret
or
ss
sbb
out
sub
mov
mov
sahf
ffree
aas
pop
cld
test
jns
fisubl
mov
sbb
sub
dec
push
dec
push
inc
sbb
xchg
aam
movsl
lds
mov
lods
xlat
mov
pop
sti
inc
inc
xor
push
icebp
push
sbb
fcomi
lods
mov
sahf
sub
mov
lods
lea
jnp
shl
int
leave
rolb
lods
add
repz
ds
pop
pop
out
cmpsl
push
inc
gs
pop
stc
lods
mov
mov
pop
roll
out
popa
sbb
std
xchg
mov
clc
sub
imul
push
nop
sub
sbb
adc
pop
in
in
rclb
andb
push
fisubs
fidivrl
mov
in
push
sub
mov
push
aaa
mov
cmpsl
hlt
bound
jns
sti
pop
mov
cs
sahf
xchg
dec
leave
mov
pop
pop
inc
mov
pop
movsb
rol
mov
pop
mov
in
lahf
std
add
fstps
sbbl
out
adc
movsb
mov
jae
xchg
sarl
lahf
decb
mov
mov
scas
cld
dec
adc
dec
inc
mov
cmp
xor
orb
sub
dec
or
lret
or
gs
adc
ss
sbb
cmp
fwait
sbb
xchg
ret
inc
clc
push
and
xchg
inc
inc
and
cmp
pop
push
dec
cmp
shrb
sub
int3
push
insb
hlt
ss
xor
adc
out
add
insl
negb
or
xor
std
sbb
pushf
aam
jo
xor
push
push
inc
and
xor
jns
lcall
popl
cmp
or
insb
fidivrs
int3
pop
aaa
arpl
pop
mov
mov
cs
cmp
scas
adc
mov
push
jl
loopne
mov
pop
lahf
jle
scas
push
mov
icebp
cmpsl
pop
xor
or
aad
mov
stos
sub
popa
lret
out
aas
shl
mov
popa
push
pop
mov
or
push
fnstcw
xchg
arpl
mov
mov
jns
jb
add
jo
xor
xor
mov
fcoml
xchg
or
mov
jp
push
sti
fcomps
cli
sub
or
ja
add
dec
pop
xor
adc
mov
mov
nop
push
cld
dec
add
mov
dec
clc
out
mov
call
stos
aam
or
decl
pop
xor
lcall
ja
outsl
cmp
rcr
sbb
jne
mov
sti
sub
hlt
ficompl
jl
iret
aaa
pushf
into
sbb
pop
ret
divb
imul
stos
push
xchg
mov
dec
icebp
inc
test
add
push
pop
mov
lcall
push
inc
loop
cmpsl
push
dec
xor
push
push
jbe
push
jb
cmp
fnstsw
loopne
cmpsl
shrb
pop
adc
mov
jecxz
jnp
pminub
lret
sbb
cs
xchg
hlt
pop
sub
mov
cmpsb
dec
imul
adc
in
jne
mulps
cltd
xor
enter
pop
push
daa
adc
bound
jmp
xchg
in
call
mov
flds
gs
int
mov
scas
adc
ret
cmp
enter
xchg
cmp
adc
je
or
ficoml
cmp
inc
clc
jb
ljmp
mov
insl
push
xor
arpl
mov
inc
sub
in
xor
subl
dec
jp
push
mov
call
out
inc
sbb
mov
or
fisttpl
and
inc
cmp
sub
mov
mov
popa
fadds
dec
sbb
inc
pop
pop
test
cmp
das
test
sti
mov
enter
inc
dec
adc
sub
out
jl
mov
insl
rol
lret
popf
adc
mov
es
mov
lcall
sbb
jns
push
cmp
movhps
mov
or
shr
pop
and
dec
out
addr16
addl
pop
movl
pop
dec
dec
jb
gs
jo
mov
clc
sbb
fiadds
cli
xchg
outsb
cwtl
pop
cmp
or
mov
push
push
jns
push
push
dec
pop
sub
mov
xchg
nop
ss
sbb
aad
stc
leave
xor
adc
or
jno
mov
icebp
cmpsb
aaa
aad
jle
dec
inc
push
push
cmp
cltd
lahf
jnp
and
sbb
rcll
jno
stos
inc
fisubrs
data16
adc
pop
clc
xlat
test
xor
cs
push
inc
push
mov
xor
jmp
xchg
mov
or
fwait
or
mov
cmp
stos
xchg
sti
jae
add
mov
push
adc
das
rcr
push
lock
fiaddl
mov
adc
fstpt
stc
jmp
pop
insl
cmpsl
stos
sbb
das
repz
leave
sbb
movsb
cld
jl
subb
fwait
sub
fs
jns
aas
push
dec
or
xchg
mov
mov
cmp
push
sti
scas
sbb
and
sbb
pop
push
sti
arpl
push
ljmp
ficoms
push
push
or
or
add
test
in
ss
iret
lds
add
bound
in
xor
inc
jecxz
xchg
mov
adc
sti
xchg
sbb
inc
out
pop
push
std
ja
jo
lcall
popa
jmp
mov
sbb
xchg
orb
pop
add
push
insl
mov
mov
jmp
add
fistpl
sbb
sub
xor
lret
mov
push
dec
adc
and
jg
dec
dec
in
dec
loopne
mov
jle
icebp
aam
leave
adc
sbb
sbb
sub
or
cmp
iret
mov
cmp
dec
les
sub
sbb
dec
in
aad
pop
push
xchg
jge
sbb
arpl
push
test
adc
mov
jmp
sbb
popf
pop
das
jb
jle
xchg
lret
imul
sbb
mov
xchg
xchg
push
push
inc
fsubrs
sti
stc
sub
sbb
sarl
push
mov
mov
or
dec
or
or
gs
out
imul
es
mov
push
mov
pop
push
xor
out
mov
or
aad
inc
cmpsl
ss
fidivl
push
adc
sbb
sahf
adc
push
dec
cmp
sbb
rcll
std
repnz
pusha
pop
xor
push
fldcw
int3
stos
cwtl
mov
js
clc
out
fisubl
in
sti
adc
mov
mov
nop
cmp
pop
test
leave
mov
mov
call
mov
sbb
sub
rclb
mov
lock
sbb
xchg
or
stc
int3
sbb
jno
out
mov
stos
jge
mov
xchg
or
cltd
stos
mov
sbb
aad
repz
mov
add
mov
jns
call
mov
fwait
jb
ja
pop
pop
jbe
push
mov
bound
sbb
fistl
or
push
bound
mov
mov
dec
mov
sbbb
gs
cmpsl
ljmp
fwait
xchg
mov
mov
xchg
jmp
mov
push
xor
adc
ss
add
push
mov
mov
nop
dec
cs
stos
mov
jge
xchg
mov
icebp
inc
cli
call
repz
push
adc
dec
test
xchg
inc
sti
mov
pop
mov
aaa
out
ret
out
inc
into
cs
pop
cs
sub
sbb
sbb
adc
ss
pop
sbb
sbb
daa
inc
inc
pop
and
cld
test
push
push
movsl
jecxz
adc
imul
mov
movsb
rcl
jp
outsl
xchg
jo
sahf
sub
out
jge
sahf
xor
and
cmpsb
repnz
jp
call
repnz
fisubrl
insl
inc
cmp
sbb
loop
ds
jmp
fistl
test
mov
adcl
mov
adc
pop
sbb
sti
fildll
jns
mov
xor
mov
adc
out
js
aad
jo
adc
sub
int
mov
inc
ljmp
test
or
test
adc
jo
push
and
sbb
fisubrl
fildl
pop
cld
inc
jno
push
mov
sub
repz
dec
dec
lahf
int3
inc
lret
mov
ljmp
inc
pop
fstpt
ret
pop
jns
pushf
and
shr
cld
push
jbe
and
hlt
ss
in
sub
inc
jp
mov
in
sub
inc
push
es
shll
aas
pop
add
rorb
dec
xchg
push
leave
popf
xlat
mov
jo
cmp
mov
pushf
pusha
jns
cmp
in
dec
cmp
sbb
mov
ss
dec
cli
mov
xor
adc
xchg
sbb
xor
dec
push
mov
mov
js
mov
pop
jo
adcl
xchg
aas
iret
mov
mov
ss
sbb
cwtl
sub
sbb
mov
cmpsb
ficoms
push
xchg
pushf
xchg
mov
mov
push
push
ss
push
stos
dec
or
pusha
pop
pop
shll
push
and
sar
fnstenv
adc
cmp
std
inc
jno
cmpsl
or
cmp
test
adc
push
sti
rcll
mov
and
mov
repnz
repz
int
push
jne
mov
ret
mov
iret
rcrl
lods
icebp
mov
out
cmp
fs
loopne
xor
mov
push
enter
outsl
dec
xor
pop
fiaddl
sbb
fisttpll
testl
push
push
fidivl
cmp
test
adc
mov
test
pushaw
rorl
mov
imulb
out
in
mov
pusha
insb
adc
out
inc
mov
lret
sub
sbb
push
mov
jno
hlt
inc
shrb
cmpsl
add
icebp
out
mov
dec
adc
mov
cmpsl
loopne
mov
imul
movsl
adc
test
or
dec
push
pushf
adcl
imul
fs
jg
sarl
fldt
inc
cmp
es
mov
pop
fdivp
push
mov
ret
push
int3
pop
cmc
mov
push
icebp
push
sbb
ss
cltd
jle
inc
lahf
mov
int3
pop
or
fcoml
insb
pop
shrl
sub
push
jl
inc
cmp
push
mov
xchg
fisttpl
stc
arpl
rcrb
sbbl
icebp
leave
push
ret
dec
inc
out
pop
imul
addr16
fwait
cmpsl
data16
jb
sub
or
xchg
adc
cmp
dec
cltd
scas
xchg
xor
and
fidivs
mov
cmc
js
xor
enter
sub
fwait
adc
jno
xor
mull
mov
mov
sbb
sbb
fldt
ss
adc
pop
hlt
mov
mov
test
add
sub
fwait
cmpsb
adc
addl
inc
addl
mov
fcmovb
in
stos
pop
mov
jmp
mov
sbb
fistps
or
mov
mov
push
dec
jmp
push
mov
jle
push
sub
add
push
inc
push
mov
out
xor
addb
aaa
xor
mov
jmp
mov
dec
test
add
lret
cmc
cltd
into
fsub
js
stc
push
dec
test
fwait
js
ficomps
das
xchg
sbb
shr
jnp
xchg
repnz
dec
push
out
dec
lahf
pushf
aaa
inc
cmp
ljmp
leave
aas
in
push
mov
jecxz
testb
xchg
dec
out
out
mov
mov
sub
mov
inc
jae
out
jecxz
jae
and
push
imul
mov
adc
xor
adc
loop
iret
mov
sbb
adc
adc
arpl
mov
shll
sbb
dec
test
or
add
jbe
inc
cmp
es
lds
or
and
push
nop
mov
lahf
jbe
inc
ja
pushf
xor
das
or
insl
ret
jb
inc
jb
add
ret
jmp
mov
hlt
fstpl
mov
testl
sub
jl
shlb
pop
dec
xchg
shld
sub
mov
fcomi
in
xor
scas
xorb
ds
loop
ljmp
mov
fidivrl
mov
stc
shl
jle
or
xchg
and
mov
in
cs
pop
and
adc
test
decl
pop
dec
sti
sub
sub
mov
sti
enter
and
cmp
mov
mov
or
lahf
repz
inc
nop
or
rorb
dec
add
das
data16
xchg
mov
dec
stc
aas
adc
je
inc
aam
test
dec
ffree
adc
mov
mov
aad
jo
or
fwait
push
stos
mov
or
lock
push
mov
sbb
sub
push
enter
bnd
lds
mov
mov
loopne
jb
mov
xchg
fcmovne
fwait
divb
inc
sub
or
xor
in
push
hlt
gs
std
repz
into
pop
dec
data16
repnz
push
mov
adc
push
xchg
or
in
sub
cmpsl
notb
je
jo
jle
jb
sti
mov
or
adc
xchg
xlat
loopne
pop
sti
fstpt
xchg
mov
andb
mov
push
adc
mov
daa
ror
mov
in
cltd
xchg
in
jb
jno
fcomps
addb
add
mov
mov
ffreep
jo
mov
fcmovnu
push
enter
lret
inc
jmp
pop
mov
push
xor
push
scas
lcall
dec
fwait
cmp
sbb
neg
test
mov
cs
sbb
fwait
push
push
lahf
aam
add
pop
mov
lret
test
adc
icebp
push
jp
xor
mov
loop
aam
scas
jb
jecxz
adc
mov
jne
mov
jbe
insb
es
jnp
xor
jl
or
pop
cmp
nop
push
lahf
cld
fwait
cmpsb
dec
add
fimull
or
pusha
xlat
int
inc
pop
cmp
ja
cmpb
decl
sbb
cmp
dec
in
jle
mov
adc
lahf
in
xor
std
add
data16
jge
and
loop
mov
mov
lods
mov
xor
mov
xchg
imul
jmp
pop
adc
xor
xchg
idivb
inc
pop
mov
pop
fucom
fadd
add
std
repnz
pop
loop
push
call
pop
dec
into
aam
lods
int
test
push
jmp
sbb
mov
add
negb
push
mov
pop
popa
pop
push
mov
cmp
bound
xlat
mov
pop
mov
out
mov
ficoml
dec
ds
out
mov
mov
negb
xor
mov
mov
push
out
push
mov
inc
or
enter
sub
mov
xchg
mov
add
ret
cld
dec
adc
mov
xchg
or
mov
push
mov
sub
pop
mov
aam
dec
cli
lods
mov
push
push
subl
cmp
or
mov
ficomps
mov
sub
out
imul
lea
in
jmp
xchg
dec
dec
jbe
imul
jg
push
cmp
push
data16
dec
sbb
jnp
add
test
sbb
gs
sub
sub
or
enter
mov
or
loop
mov
push
incb
mov
pop
xor
or
and
lods
jne
mov
mov
arpl
cmp
adc
mov
jb
cli
mov
subb
xor
add
cmp
cmp
adc
int
sbbl
mov
fadds
pusha
or
aad
loop
push
mov
pop
xchg
or
mov
xchg
mov
dec
jle
xchg
mov
pop
push
ret
jmp
jo
scas
push
rcll
add
xchg
mov
jecxz
sbb
xor
sbb
adc
sub
cmp
inc
adc
mov
cmc
out
jg
sub
and
dec
mov
cmpl
les
and
mov
cmp
pop
push
gs
or
test
pop
cmp
lret
imul
jle
mov
pop
jp
and
js
daa
inc
adc
out
mov
incb
xchg
insb
xchg
xor
mov
pop
dec
sub
fidivs
fistpl
mov
fstps
js
subb
xor
ret
dec
or
or
push
pop
imul
mov
push
es
pop
dec
sbb
jb
xor
mov
adc
jnp
mov
push
cli
lret
add
and
cld
push
xchg
sbb
adc
jg
mov
mov
ffree
dec
insl
ret
push
lret
daa
dec
lret
inc
das
sbb
lret
xor
cmpsl
psubw
repnz
lds
lahf
pop
push
sbb
add
jno
pushf
pop
pop
mov
push
fwait
pop
fnstcw
cmp
xor
pop
adc
idivl
mov
mov
stos
pop
gs
pop
jns
or
test
cmp
repnz
push
jae
rorl
fsubrl
adc
fcomps
cwtl
lods
inc
nop
adc
jb
outsb
jmp
dec
ss
cmp
add
push
or
mov
push
mov
in
mov
leave
xor
test
ds
push
pop
pop
pop
in
mov
imul
push
fdivrs
xor
in
repnz
je
test
mov
enter
outsl
testb
dec
ror
jg
js
cmp
in
xor
icebp
xchg
adc
mov
push
inc
adc
popa
sbb
fnstsw
arpl
jg
jns
xor
mov
mov
sbb
push
int
adc
imul
cwtl
inc
mov
rorb
adc
jb
sbb
fscale
push
dec
popf
jge
cs
mov
sbb
add
jo
cli
cmp
fs
dec
add
cltd
fildll
sub
in
lcall
test
cwtl
das
sub
cmpsl
adc
sbb
cs
push
cmpsb
inc
mov
adc
mov
js
xor
xchg
push
inc
pop
xor
cli
repnz
push
push
inc
inc
add
lods
daa
rorb
cltd
push
pop
lret
mov
pop
in
sub
push
sahf
sub
ds
cli
cmc
add
int3
push
mov
nop
out
pusha
or
jl
mov
push
xor
mov
mov
sbb
ss
pusha
in
call
jl
lahf
mov
in
mov
call
int
jno
rorb
inc
push
pop
jg
testl
jno
aas
das
fldenv
cmp
jo
data16
xlat
push
cli
sub
jbe
push
sbb
mov
mov
pop
ret
xchg
sub
and
pop
ss
movsb
xchg
mov
ljmp
sbb
xor
std
jl
stos
and
mov
shll
mov
dec
mov
lds
adc
fstpl
dec
dec
out
sbb
lods
inc
mov
lock
popa
sbb
jns
sahf
lret
cmpsl
pushf
pop
push
popa
nop
mov
xchg
rol
add
or
ss
cmp
dec
mov
push
mov
jns
pop
aaa
mov
movsl
push
stc
and
push
mov
rorb
push
bound
jge
cmp
mov
jo
inc
iret
mov
pop
ds
pusha
add
insb
loopne
stc
test
mov
mov
xchg
sub
mov
mov
mov
dec
or
mov
stos
sbb
fwait
lods
and
pop
jmp
inc
lods
incl
lcall
gs
add
xor
movsl
cltd
push
mul
sub
js
mov
mov
int3
xchg
mov
iret
jge
cmp
push
mov
in
and
je
in
std
dec
jns
nop
ja
fidivl
data16
iret
cmp
clc
mov
push
mov
xor
xchg
mov
cmp
loope
loope
sub
rep
dec
jmp
mov
pusha
jno
sub
into
mov
cmp
xor
popa
jo
pop
jmp
pop
jmp
sbb
xlat
dec
push
sub
je
lods
sahf
cmp
pop
jl
clc
rol
out
mov
mulb
outsl
cltd
sbb
jle
push
in
aaa
jne
inc
cmp
and
xor
push
inc
test
lahf
mov
out
xor
or
stc
mov
push
jl
add
insl
add
sti
jnp
rolb
add
xchg
cmpb
out
cmp
loop
call
sbb
push
xor
rol
roll
push
loope
fisubrl
aam
ss
int3
mov
stc
popa
push
mov
enter
daa
cmp
fistpl
mov
xchg
mov
jge
cs
or
out
mov
dec
push
mov
and
sub
or
xchg
adc
xor
mov
mov
cld
and
std
lcall
mov
push
sbb
js
fidivl
lcall
sub
lret
loope
pop
dec
fnclex
dec
jl
xchg
or
shll
lret
clc
aad
mov
decl
push
add
push
sub
push
aas
hlt
ss
inc
std
sub
sub
repnz
or
aaa
pop
es
stos
mov
into
inc
sti
xorl
sbb
jmp
fwait
ss
xchg
xchg
mov
scas
jge
or
mov
ret
sbb
mov
push
xchg
call
sub
mov
movb
shrl
data16
or
out
scas
iret
mov
sub
push
outsb
or
push
es
jmp
sub
rorl
ret
stos
int3
dec
cmpsl
fimull
cmp
push
scas
adc
test
inc
cmp
and
jl
dec
movsl
xchg
jne
jns
ja
push
lret
out
dec
mov
pop
popa
xchg
clc
imul
sub
add
push
addb
xchg
clc
cmp
test
adc
fcomip
fimull
scas
out
movsb
popf
rcl
mov
data16
xor
nop
xor
mov
loopne
pop
jno,pn
mov
xchg
das
xchg
push
dec
or
push
push
outsb
fidivrl
adc
add
mov
sbb
mov
pop
out
dec
jns
mov
xor
mov
inc
cs
scas
pop
add
pusha
scas
cmp
dec
fcoml
mov
lods
mov
js
xchg
cmp
leave
mov
xor
sub
in
jnp
adc
or
idivl
push
xor
fstps
mov
push
mov
jl
sahf
mov
flds
jmp
lahf
adc
dec
mov
xchg
lock
das
push
pop
push
ror
sbb
in
sbb
test
mov
lods
iret
lea
jns
rorb
cmpsl
xor
testl
outsb
jno
lea
aaa
cmp
fdivp
ret
fwait
push
push
xor
jne
jae
push
or
push
cmpsl
jmp
movsl
loopne
fstps
call
dec
lret
jae
out
jmp
inc
xchg
xchg
mov
cmp
in
push
mov
mov
or
lds
xor
mov
pop
ret
aaa
rolb
cmp
mov
jnp
push
pop
mov
scas
fcmovne
popa
cwtl
mov
inc
pop
ja
icebp
push
sbb
mov
mov
xchg
sub
or
mov
lods
push
cwtl
jp
movsl
sti
jle
jns
and
inc
xor
lret
dec
and
xchg
sti
cmp
xchg
clc
jl
push
sub
es
pop
scas
mov
sbb
inc
insb
cli
es
xchg
jecxz
bound
ljmp
cmp
imul
ficoms
jae
ret
jne
mov
inc
popa
movswl
or
push
cld
cmc
lods
jo
mov
ljmp
pop
jno
movsl
xchg
xor
xor
cmp
out
pop
sub
mov
xor
out
fnstenv
dec
inc
sbb
sub
ss
clc
pop
cmc
dec
mov
gs
je
dec
pop
jns
mov
mov
add
repnz
negb
or
mov
fildll
test
mov
in
jae
lret
ds
into
fists
cmpsb
mov
enter
ja
mov
jb
fisttpll
adc
xchg
jne
and
lds
mov
je
dec
push
pop
push
push
push
fistpl
add
pop
not
push
add
push
insb
cs
jmp
adc
pop
stos
push
or
mov
pop
mov
jne
cmpsl
movsb
push
or
jae
push
mov
or
pop
xchg
mov
sbb
cmp
jne
push
lock
ds
jbe
jae
movsb
cs
mov
add
xor
mov
cltd
mov
mov
fldt
icebp
rolb
xchg
cmp
mov
fsubl
aas
scas
jmp
shll
stos
cltd
es
lret
jnp
xor
test
fsubrp
icebp
push
mov
inc
es
adc
lds
xchg
or
aad
adc
cmp
sbb
mov
pop
mov
dec
and
lahf
sbb
mov
sub
jno
lahf
insl
dec
cmp
lret
es
inc
push
or
rorb
stos
push
sub
xlat
or
out
push
mov
shrb
mov
add
xchg
push
inc
or
mov
cli
ret
sub
pop
hlt
repnz
cs
lcall
inc
mov
push
add
jns
xchg
fcoms
sbb
popf
lahf
loopne
or
into
pop
imul
ficompl
push
or
mov
sbb
jl
mov
stc
pop
repz
jnp
mov
cmp
insb
fcomps
ljmp
pop
jns
je
sub
mov
rorl
es
stos
rorb
mov
lods
test
push
popa
sarb
in
mov
out
test
ret
dec
jmp
push
push
adc
dec
adc
or
or
fimull
sbb
movsb
daa
sub
mov
xchg
cmp
andb
or
fadd
push
adc
add
add
inc
xor
dec
push
ja
jo
xchg
sbb
cmp
repnz
cmp
adc
jge
push
rorb
or
add
cmpsl
hlt
ja
or
inc
test
push
pop
pop
xor
out
repz
pop
ljmp
roll
mov
ds
insl
sub
das
test
mov
punpckhbw
lcall
mov
ret
negl
sbb
jne
ret
or
pop
mov
cmp
sti
mov
adc
pop
aas
pusha
nop
xchg
mov
mov
mov
outsl
lret
xchg
fs
mov
pushf
xlat
adc
or
es
test
push
jecxz
dec
cs
add
dec
xchg
push
aad
cs
stc
jno
sbbl
scas
orb
dec
test
cmp
sub
jle
dec
jo
mov
data16
mov
gs
dec
xchg
enter
loope
inc
add
add
out
outsl
add
pop
or
adc
dec
mov
test
loop
jnp
xchg
fcoml
xor
bound
fucomp
adc
scas
push
scas
pop
dec
push
xchg
push
shrl
pop
jge
jmp
sub
adc
sbb
aaa
rorl
or
xor
and
sub
sbb
shll
dec
and
mov
incl
mov
jne
fisubrl
cmp
fstps
cmpsl
test
or
lock
dec
fbld
sub
cmp
jno
dec
push
loope
mov
adc
sub
aad
or
inc
push
mov
push
push
add
dec
inc
and
movsb
orb
repz
dec
xchg
push
push
mov
testl
push
sub
push
mov
sbb
inc
fidivrl
jns
mov
ficoms
es
imulb
mov
idiv
xorb
xchg
fwait
pop
adc
and
hlt
shll
mov
jno
push
xchg
dec
xor
fistl
add
cmp
inc
jae
add
dec
popa
mov
dec
loop
test
les
ret
jae
xor
nop
sub
lock
sbb
inc
flds
dec
push
in
inc
fdivs
icebp
cmpsl
loop
cmp
push
fstpt
mov
dec
and
scas
jns,pn
adc
dec
add
repnz
inc
nop
dec
xor
fiadds
mov
out
xchg
add
xchg
lods
jns
xlat
xor
rcl
inc
sbb
mov
xor
fidivrl
call
cmp
call
fisubrs
call
clc
adc
xorps
stc
les
mov
jmp
and
lods
dec
popf
push
lea
das
jns
push
shll
mov
mov
std
sub
mov
imul
xor
add
inc
ljmp
mov
lahf
mov
sbb
arpl
psubsw
cmpsl
mov
jns
rol
pop
jl
ljmp
ret
push
call
mov
and
push
popf
dec
pop
mov
push
pop
or
add
adc
inc
in
jnp
sub
mov
and
pop
sub
mov
sbb
stos
fnstsw
sbb
pop
icebp
repnz
nop
or
lahf
nop
push
sub
jns
fsub
sti
or
xor
repnz
pop
lret
shlb
push
jno
gs
aas
ss
add
ja
rcll
in
js,pn
dec
cmp
lret
add
call
mov
fstl
sahf
cs
sbb
mov
pop
inc
mov
fiadds
in
ficomps
mov
mov
inc
orl
rcrb
loop
cmpsl
jae
fisubl
pop
jns
cmp
pcmpgtb
pop
push
inc
and
jb
test
jge
jnp
ds
stos
insb
mov
pop
mov
lock
or
inc
sbb
xor
test
loopne
fimuls
mov
imul
ficompl
fnstsw
cmp
ss
sbb
cltd
shll
lock
push
push
icebp
je
into
fisubrl
jmp
movsl
lds
cltd
iret
pop
test
std
mov
dec
stos
lds
out
pop
jo
xchg
jbe
mov
jne
in
push
ss
test
push
or
push
mov
push
enter
sub
std
xchg
jnp
lods
addb
lret
js
xchg
push
push
sub
inc
mov
add
pop
in
aad
daa
push
dec
dec
mov
sbb
cli
aaa
outsb
or
sbb
adc
adc
aam
push
jb
mov
das
movsb
push
push
mov
sbb
and
inc
loope
int3
pop
mov
xchg
xchg
or
fldcw
jmp
lcall
divl
cmp
add
dec
and
sub
mov
movsl
test
push
out
dec
or
push
push
xor
push
lock
mov
push
mov
aam
xchg
push
lahf
jmp
sbb
fnstsw
xchg
test
mov
mov
mov
xchg
movsl
call
push
mov
mov
mov
push
mov
lret
loopne
or
and
mov
jno
or
or
xchg
lsl
mov
mov
xor
push
push
gs
pop
cwtl
test
dec
ss
sbb
xor
mov
and
mov
mov
adc
dec
lahf
mov
lahf
dec
bound
lock
push
adc
rol
mov
adc
in
cmp
or
movsl
push
pop
popa
mov
add
jl
gs
push
mov
pop
aaa
sti
insb
xchg
add
addb
fnsave
mov
sbb
dec
flds
lds
or
mov
movsb
imul
xlat
dec
mov
popa
xchg
mov
movsl
mov
xor
or
mov
mov
sbb
mov
pop
in
jp
and
imul
mov
jb
in
sbb
xchg
inc
cmp
pcmpeqw
or
cmpsl
stos
je
sbb
stos
xchg
push
bswap
outsl
sbb
pop
shrb
dec
sbb
sbb
stos
mov
push
loopne
fidivrl
fidivrl
stos
int3
xor
mov
mov
sub
mov
push
enter
js
jns
push
pushf
ss
mov
out
cmpsl
mov
push
xchg
scas
fstpt
jb
mov
xorb
in
and
mov
jmp
adc
mov
or
dec
adc
loopne
push
scas
mov
jmp
pop
pop
cmp
sub
loop
aas
call
sub
movsb
movsl
xor
std
imul
cs
hlt
xor
dec
adc
push
es
mov
sarb
insl
push
cmp
adc
mov
lcall
xor
mov
loopne
adc
add
inc
sub
ljmp
push
ret
rolb
pop
and
mov
xorl
sbbb
mov
loop
xchg
cmp
mov
sbb
pop
jnp
sub
fistpl
add
mov
adc
popa
adc
fs
sar
mov
cmp
les
ss
push
addr16
cmp
xor
inc
add
fidivrs
mov
mov
adc
fcmovnu
jmp
jl
push
xor
shrl
mov
in
xor
fildl
in
mov
push
inc
and
push
js
stc
repnz
xor
cwtl
loop
inc
pop
das
pop
jne
dec
test
into
mov
mov
loopne
ret
sub
nop
xor
mov
inc
push
pop
inc
gs
subb
jns
mov
ret
ds
sub
sbb
mov
mov
into
sbb
fidivrs
sbb
adc
jp
inc
fs
push
xchg
or
in
imul
push
inc
or
data16
adc
pop
aaa
ret
sbb
mov
pop
out
in
and
sub
sti
cs
filds
cmp
mov
mov
mul
enter
stos
stos
ja
mov
insl
lret
adc
xchg
sub
inc
mov
outsb
or
lret
imul
test
jne
pop
imul
mov
std
sub
je
xor
inc
and
push
push
idivb
sbb
lods
out
insb
int3
clc
mov
sbb
jp
sub
dec
out
ss
cmp
ja
mov
push
push
mov
xor
fstpt
mov
pop
mov
nop
push
mov
mov
sbb
jl
je
xchg
outsb
cwtl
shrb
sbb
mov
out
jle
fisttpl
fidivs
aas
cmp
lret
mov
push
dec
inc
outsb
mov
xchg
mov
cltd
lret
cmp
dec
pop
int
and
pop
ret
ss
adc
jmp
push
insl
les
scas
sbb
mov
out
inc
add
lcall
repnz
stc
into
add
cld
test
fbstp
sti
sbb
mov
or
sbb
arpl
int
cwtl
xchg
pop
push
sbb
xorb
ss
je
cmp
ds
je
pop
gs
mov
or
xchg
mov
sub
cld
mov
movsl
sub
mov
dec
lds
enter
add
imul
je
push
cmp
in
cmp
mov
mov
mov
leave
push
test
cwtl
scas
lea
leave
aam
adc
jge
push
dec
int3
call
popa
mov
mov
push
sbb
cmp
xchg
inc
jno
mov
cmp
add
jge
gs
mov
stc
inc
pop
cli
mov
std
xor
xor
adc
xor
xor
xchg
lcall
mov
cmpsl
addr16
xor
adc
mov
jbe
bound
push
cld
sub
fstl
ficoml
inc
jne
pop
loop
aaa
repnz
mov
push
mov
push
push
mov
leave
mov
cmc
xor
push
mov
cmovo
cltd
adc
aad
adc
or
in
leave
cltd
and
scas
out
jl
jg
add
out
xorb
mov
jmp
pop
ret
imul
lea
gs
jle
mov
mov
daa
adc
xor
pop
push
hlt
jns
cmpsl
sub
xchg
cmp
frstor
adc
repnz
int3
xchg
push
mov
sbb
jns
or
pop
int3
imul
mov
add
adc
fwait
adc
jge
push
sbb
adc
push
jmp
adc
pop
orb
pop
es
jmp
push
mov
fnsave
or
sbb
mov
popa
icebp
add
pop
sbb
push
xchg
fidivrl
mov
mov
sbb
ret
mov
stos
push
push
popf
cmp
inc
push
mov
fwait
cmp
push
scas
dec
push
xchg
jmp
xchg
in
mov
loopne
adc
out
jae
sbb
jmp
jb
outsb
cmp
mov
jno
jp
std
pmuludq
out
cmovbe
mov
int
mov
decb
jne
in
repz
sub
loop
mov
xchg
lahf
cmpsb
or
add
push
lcall
fstl
add
mov
jnp
push
mov
or
test
cltd
push
shlb
push
xor
adc
sub
jp
sbb
sbb
test
push
sbb
push
fstpt
ret
xchg
add
outsb
pop
movsl
and
or
cmp
cmp
cld
push
dec
pusha
addr16
arpl
mov
mov
arpl
xchg
jmp
mov
aas
dec
push
mov
dec
jge
jne
int3
orb
cmp
dec
sbb
aas
jne
fstl
mov
mov
rcr
imul
dec
pop
nop
mov
jge
fistpll
stc
adc
dec
fadds
push
push
cmp
call
hlt
xor
xor
add
mov
push
jno
jne
int3
inc
inc
ficompl
popa
mov
sbb
xchg
mov
or
xorl
adc
fidivrs
sbbl
std
mov
jnp
cmp
ss
or
rorl
or
jmp
int3
insl
fld
jbe
push
mov
jb
ffree
popa
fimuls
jno
mov
pop
loopne
dec
test
das
fcmovb
adc
push
bound
test
jo
jne
pop
aaa
flds
jne
add
mov
inc
mov
mov
call
pop
adc
lock
push
addb
inc
add
repnz
hlt
sti
mov
sahf
sahf
xchg
ret
into
pop
push
scas
or
push
stc
fstpl
push
sub
cli
jmp
xchg
push
xor
iret
pusha
pusha
pop
xor
mov
scas
pop
icebp
in
mov
push
xlat
and
lret
out
jae
fcoml
push
cltd
add
jno
cmpsb
adcb
fidivs
rol
mov
fisttpll
pushf
pop
xchg
loopne
div
ja
int
stc
xor
bound
add
xchg
imul
cmp
mov
or
fwait
and
xchg
push
pop
idivb
rclb
inc
mov
mov
jae
repz
mov
fdivrl
hlt
pop
xor
sbb
bound
test
into
insb
ret
imulb
ret
ret
rcrb
cmp
pop
jae
stos
add
fstl
mov
adc
sbb
or
aad
push
mov
lcall
pushf
lods
mov
or
inc
cltd
sbb
add
or
inc
test
lret
push
lahf
jo
mov
outsb
popa
sahf
inc
inc
mov
pop
mov
stc
insl
add
enter
xor
int3
dec
out
push
inc
clc
mov
ret
cs
loopne
xor
out
mov
push
pop
sbb
inc
pop
addb
movsb
leave
and
or
imul
inc
pop
push
test
in
lcall
jns
adc
ljmp
fistl
jbe
jnp
add
into
stos
adc
pop
je
mov
movsl
inc
sub
cs
loop
lea
ret
sub
dec
mov
aad
lods
ss
pop
add
inc
adc
iret
mov
loop
inc
fnstcw
imull
lock
jmp
sbb
adc
repnz
sub
jl
cmp
mov
adc
mov
xor
cmp
inc
cmp
jno
mov
mov
jb
mov
add
inc
pop
ja
test
lret
push
movsl
pushf
icebp
and
sarl
sbb
jnp
push
mov
push
push
lock
iret
xor
mov
mov
jno
sti
dec
cld
sti
xchg
mov
cmpsl
jmp
loop
ficompl
dec
xlat
mov
ficomps
xor
mov
test
push
ss
inc
push
jb
nop
mov
or
mov
aam
aam
bound
mov
push
dec
aaa
xchg
inc
aad
scas
dec
cmp
outsl
mov
std
out
sub
inc
fwait
sbb
hlt
xchg
pcmpeqb
loope
int
cmp
add
xchg
jns
dec
sahf
mov
cld
cmp
pop
out
sbb
jge
jecxz
in
cmp
stos
sub
push
cmpsb
or
jb
fstp
pop
ret
pop
sbb
adcb
cwtl
subb
loope
sub
xchg
mov
arpl
call
sub
ljmp
outsb
dec
add
push
daa
inc
and
xor
fisubl
out
mov
fwait
je
xor
fwait
cltd
adc
loop
std
jo
lcall
insl
orl
xor
cli
and
jl
or
push
pop
inc
mov
sbb
or
sub
dec
cmp
or
fs
sbb
push
mov
stc
sbb
dec
ss
aas
adc
xor
lahf
xchg
adcl
xchg
daa
cmpsl
inc
sbb
mov
adc
and
lahf
out
pop
inc
add
imul
addr16
push
in
sbb
adc
sbb
or
push
test
mov
call
cmp
sbb
sub
add
cmpsl
inc
lea
cmc
movl
xchg
aad
mov
or
dec
repnz
rcl
mov
mov
fs
movsl
popl
ja
nop
jecxz
in
sub
inc
xlat
inc
lcall
mov
push
mov
insl
cmp
push
movsl
sub
shl
and
push
paddsw
pop
inc
dec
daa
xor
and
lods
xchg
loopne
pop
imul
das
scas
cmp
mov
inc
dec
pop
mov
and
in
mov
mov
push
loop
rolb
test
jmp
aad
xchg
pop
out
push
fstpt
mov
mov
push
xchg
out
sub
fucomi
mov
xchg
pop
pop
repz
lret
xor
popf
cmp
adcl
in
test
mov
outsl
cmp
adc
pushf
es
pop
adc
sub
and
stos
or
dec
cmp
dec
dec
int
sub
sbb
mov
cli
das
push
loop
mov
fldl
movsl
outsl
mov
sti
mov
jge
gs
xor
dec
fcoms
std
mov
push
movsl
xchg
mov
mov
mov
push
lret
cmp
pusha
pop
mov
lret
cwtl
or
ret
fwait
addb
jno
cld
cltd
xor
pop
and
lahf
sub
sbb
dec
pop
or
vmread
es
jmp
adc
dec
enter
fsubs
scas
and
fiaddl
lock
mov
jb
cmp
es
in
fs
mov
adc
popa
xor
ficompl
jmp
fwait
mov
push
int
inc
pop
xor
pop
xchg
outsb
movsl
jp
loope
cmc
sbb
insl
mov
mov
inc
das
xor
lds
stc
push
js
or
jne
jnp
add
pop
mov
pop
xchg
jmp
popa
out
fcomip
insb
dec
enter
test
lahf
sub
push
push
push
push
insl
xlat
mov
xchg
je
cmp
xchg
mov
arpl
and
inc
sarl
dec
das
mov
mov
loop
repnz
xchg
outsb
pop
push
mov
outsl
jmp
aaa
pop
cmp
mov
cli
fiaddl
movsl
xchg
jecxz
rol
and
push
push
mov
test
lods
inc
push
nop
ret
xchg
test
divl
leave
dec
and
jnp
adc
test
cmp
push
fidivs
ss
mov
rcrb
lock
icebp
xlat
ss
push
out
mov
cld
notl
mov
add
xchg
ficompl
in
mov
insl
fwait
scas
mov
daa
insb
dec
push
movsl
jle
pop
out
and
dec
test
lods
add
dec
inc
mov
sbb
out
addr16
test
sub
push
cld
aam
imul
adc
mov
mov
mov
or
cltd
inc
movsb
add
mov
push
inc
push
sub
or
jl
dec
ja
mov
es
pop
mov
sub
cmp
xor
pop
dec
cmc
andb
cmp
pop
pop
test
mov
jmp
out
hlt
mov
mov
shlb
ljmp
push
add
xor
sbb
adc
jnp
add
cmp
xor
stos
mov
cwtl
fdivrp
hlt
and
mov
dec
movsl
das
xchg
fs
push
adc
cmp
repz
popw
outsb
inc
jg
jne
adc
leave
fisubrl
mov
sub
xchg
xor
dec
movsb
test
pop
mov
mov
loopne
mov
cmp
sbb
dec
sbb
mov
add
cmp
jne
mov
in
add
mov
mov
sub
mov
adc
stos
cld
adc
xchg
imul
fldcw
cltd
adc
mov
inc
add
jae
sbb
shrb
pop
lret
sbb
fidivs
loope
mov
fiadds
mov
imul
mov
test
cmc
push
fdivp
or
adc
movsw
pop
inc
sbb
inc
je
mov
repz
jno
leave
adc
dec
cmpsb
jbe
pop
cmpsb
mov
cmc
int3
jno
mov
adc
pop
mov
out
mov
or
mov
mov
je
dec
shll
pop
inc
je
sub
or
adc
icebp
dec
rcr
es
xchg
clc
inc
xchg
xor
sub
insb
data16
stos
icebp
dec
cmp
mov
cmp
sbb
repz
jmp
push
and
repnz
in
xchg
mov
add
pop
or
lods
mov
lds
sar
pop
push
mov
mov
inc
xchg
leave
sbb
mov
das
add
cmp
adc
mov
adc
clc
ss
movsb
clc
sub
mov
mov
sub
push
mov
inc
pop
mov
xchg
inc
inc
fs
xchg
outsb
lret
stos
dec
mov
sarb
je
mov
push
sub
fidivrl
cltd
loope
sbb
inc
mov
lret
sub
cmp
cmpsl
call
push
and
ja
push
inc
pop
ror
jle
inc
jne
push
inc
jp
dec
sbb
es
and
mov
lods
cld
ficoml
mov
into
lret
scas
out
insl
imul
nop
pushf
pushf
movsl
and
lret
add
pop
es
in
dec
sbb
aaa
fwait
mov
nop
test
jl
cmp
sub
notb
lcall
cmp
fadds
sub
pop
fwait
inc
in
adc
lea
push
shll
sbb
or
push
sub
sub
cmp
xchg
out
mov
cmp
mov
fcmovb
add
xchg
mov
pop
jp
in
data16
mov
inc
mov
inc
adcl
push
pop
dec
or
test
and
cmp
adc
mov
cmp
popf
jle
xchg
shrb
test
rorl
repz
int
xor
xlat
mov
fs
pop
mov
or
icebp
jns
test
in
mov
fisubrs
sub
sbb
lock
inc
mov
pop
stc
push
popf
js
std
mov
data16
nop
xor
and
cmp
adc
aas
imul
sbb
test
mov
mov
es
insl
mov
mov
xor
mov
add
pop
push
mov
pop
xchg
jno
rcrb
aaa
bound
int3
xor
xchg
movsb
roll
sub
dec
ja
shl
push
xchg
sub
outsb
pop
mov
push
cltd
push
mov
or
fcoml
je
adc
mov
sbb
scas
ffree
mov
pop
pop
inc
dec
out
and
in
mov
cmp
sahf
divb
sub
ret
sbb
jns
addl
cli
xor
mov
fcompl
dec
push
add
and
dec
ret
cmp
dec
cmp
hlt
jo
pop
leave
pop
ja
mov
mov
jecxz
jg
xlat
pop
lds
mov
xchg
or
pop
popa
cwtl
sbb
inc
sub
pushf
ss
or
movsl
std
inc
fs
pop
mov
push
jne
arpl
shll
or
pusha
pop
ret
mov
dec
dec
inc
dec
cld
or
jl
cli
pop
mov
inc
mov
leave
dec
jo
mov
test
insl
gs
sbbl
sbb
mov
cmc
adc
test
dec
cltd
xor
xor
je
push
dec
mov
js
xor
jecxz
push
xchg
sub
mov
cmp
and
xor
fisttpl
fwait
loope
push
dec
xor
insb
add
repz
sub
cmc
pushf
js
stos
mov
cld
pop
aas
push
jmp
lods
ss
push
mov
repnz
dec
pop
sub
aad
pop
xchg
or
and
out
cs
ret
shll
push
mov
adc
testl
movsb
rclb
mov
push
add
mov
inc
mov
clc
std
lcall
mov
mov
inc
jns
test
add
add
and
iret
movsl
fbstp
adc
orl
cmp
dec
and
and
test
pop
inc
lret
mov
cwtl
pop
pop
insb
adc
arpl
out
sbb
iret
out
aaa
out
dec
or
xchg
imull
dec
pop
aad
jmp
cwtl
cmp
dec
jno
jecxz
push
dec
mov
pop
cwtl
jns
push
dec
pop
in
pop
mov
icebp
into
pop
sahf
cmp
pop
inc
jge
or
ljmp
cmc
or
pop
sub
bound
fldl2e
iret
adc
push
jae
stos
push
cmpb
cmp
mov
pop
push
and
aaa
lods
mov
testb
sub
sub
daa
ss
stos
xchg
sbb
mov
mov
pop
test
xchg
cmp
push
or
jg
sbb
push
add
jb
lahf
ss
addr16
fwait
add
js
push
dec
sbb
pop
jno
push
aad
pop
push
push
sbb
cmp
cmp
push
mov
pop
add
arpl
push
pop
xchg
add
mov
add
jns
out
fmuls
xor
pushf
inc
jg
adc
inc
in
insl
jg
inc
pushf
adc
shlb
movsl
insb
inc
lret
in
add
je
mov
das
enter
adc
repz
mov
and
push
jmp
std
dec
and
movl
lock
or
mov
jnp
adc
adc
pop
loope
dec
fistpl
cmp
mov
push
jmp
addr16
les
arpl
cmp
pop
mov
mul
cmpsl
or
mov
push
jp
pop
xchg
fimull
mov
call
mov
push
mov
xor
or
mov
xchg
ss
adc
or
pop
xchg
mov
dec
out
fs
lret
ds
mov
insb
and
nop
imul
or
sbb
cmpb
push
pusha
adc
cmp
testl
shll
ja
in
mov
pop
push
mov
xchg
das
and
cmp
mov
pop
cltd
adc
out
dec
jmp
sub
push
mov
in
pop
xor
mov
and
add
jecxz
leave
shrl
pop
stc
jge
outsl
rcrb
xchg
xor
jae
xchg
scas
out
xor
das
cmp
mov
pop
pusha
lret
push
cld
sbb
sti
xchg
xlat
and
mov
jmp
fistps
push
cmc
mov
xchg
scas
clc
sub
sbb
je
out
enter
psrlw
rclb
nop
in
pop
and
scas
dec
add
leave
jp
pop
ret
sbb
dec
push
pop
lds
test
or
dec
or
xorl
mov
mov
je
insl
xchg
sti
sbb
xor
dec
fisubrs
movsl
lahf
lret
dec
idivl
mov
ds
pop
adc
lock
sar
xchg
ds
adc
jno
push
inc
cmp
test
xor
push
dec
mov
ds
cmp
pushw
sub
lret
cli
repnz
cmp
jae
jmp
ret
push
jle
mov
sbb
vmovaps
movsl
and
dec
mov
push
or
lods
ds
mov
inc
rcrl
push
gs
sti
mov
push
pop
jne
lock
add
jle
incl
jae
mov
cli
mov
xchg
aam
mov
ds
inc
mov
incl
je
fisubs
cmp
repz
pushf
fstpt
mov
mov
xor
xchg
xchg
mov
mov
sub
mov
insb
inc
mov
loope
iret
xchg
or
ds
jae
arpl
fsubrp
push
and
lea
push
mov
jnp
xlat
sbb
andl
nop
sub
xchg
aaa
adc
sbb
orb
inc
enter
xchg
fs
xchg
fistl
jmp
mov
pop
rcrb
out
imul
movsb
push
mov
inc
mov
adcl
pop
jno
nop
fildll
xor
negl
push
movsb
aas
pop
cwtl
sbb
mov
and
mov
adc
xor
mov
push
loope
pop
or
dec
fidivl
fmulp
jmp
dec
dec
mov
bound
pop
sub
in
dec
cmp
vmwrite
mov
mov
outsl
push
jns
jle
incb
pop
cs
push
pop
icebp
cli
adc
cmp
sub
lods
push
daa
push
cmp
sub
loope
mov
ds
add
push
popa
mov
or
lret
cmp
adc
std
pop
lcall
test
fwait
mov
add
pushf
inc
sbb
xchg
cli
or
int3
or
mov
add
arpl
pop
mov
outsl
lret
sub
sub
inc
stc
gs
cwtl
leave
lods
adc
lods
rcll
push
cmc
jb
bound
rcl
andl
dec
loop
loope
es
cmp
ds
cmp
or
movsb
add
jb
arpl
divb
mov
pushf
aaa
xchg
xlat
mov
jne
xchg
popa
mov
nop
sahf
xor
adc
loope
bnd
in
out
icebp
vmwrite
pop
stc
add
mov
arpl
out
fs
mov
jecxz
xchg
push
dec
dec
pop
adc
lods
adc
jns
in
loop
cmp
js
shrl
xor
cmp
xor
and
mov
sub
fsubrs
push
or
pop
mov
testw
scas
int3
testb
popf
xor
lock
xor
mov
mov
or
sub
pop
jmp
add
loopne
pop
test
and
ja
sub
cmc
aas
xor
jne
xchg
mov
out
add
jmp
cmp
rolb
mov
cmpsl
arpl
inc
sti
in
sub
add
dec
pop
dec
pop
sbb
int3
jg
or
sbbl
inc
out
or
adc
mov
mov
inc
ljmp
pop
pop
mov
adc
jnp
mov
stos
cmp
or
fcmovb
adc
or
jno
mov
aas
mov
mov
dec
or
ffree
xorl
jmp
lret
fdivl
dec
out
inc
out
dec
push
popa
daa
call
jne
stc
addr16
sub
sbb
iret
fistpl
dec
cs
xlat
out
sub
je
pop
pop
mov
mov
mov
pushf
pcmpgtd
cmp
inc
ljmp
idivl
fmulp
jge
das
lea
pop
xchg
pop
ds
mov
push
push
cmc
hlt
imulb
and
inc
mov
test
outsl
sub
std
push
xchg
pop
add
jge
lret
inc
mov
adc
aaa
jo
jle
add
lcall
and
or
mov
inc
push
rcrl
ret
push
insb
jge
cmpsl
xchg
sti
sbb
shr
dec
ficoms
add
nop
popf
add
or
jns
cmp
push
jmp
fstps
loop
xchg
pop
sub
cld
mov
out
push
jno
adc
xor
add
xchg
aam
pop
test
popa
xlat
mov
adc
sub
add
mov
add
sbb
repnz
adc
jne
int3
jno
push
push
fwait
andl
addr16
das
push
stc
inc
shlb
mov
fcompl
push
insl
sub
in
data16
cmp
ss
test
pop
mov
sub
push
adc
mov
das
jae
pop
fildll
fwait
mov
dec
rcrl
fadd
add
aaa
ss
jae
dec
jge
gs
mov
add
inc
scas
aaa
adc
test
fwait
in
mov
push
and
inc
sbb
outsl
shll
rclb
jno
sbb
adc
leave
push
sub
or
pop
fbstp
pop
orb
fimuls
and
mov
in
or
lahf
or
xor
mov
xlat
out
push
xchg
cwtl
outsb
movsb
mov
stc
adc
mov
add
lods
or
cmp
inc
das
pop
jne
in
hlt
xchg
jnp
lahf
lock
fnstsw
pop
addb
pop
sub
add
rolb
int
mov
ss
push
loop
cmp
inc
shll
dec
insb
fwait
stc
ds
sub
mov
rcrl
ds
sub
jge
cmp
sbb
jo
into
in
sub
adc
icebp
jmp
stos
repnz
pop
ljmp
push
shll
mov
sti
adc
jnp
mov
pop
addr16
call
jno
fadds
pop
adc
sahf
xor
dec
out
sub
mov
aam
mov
lret
pop
test
mov
mov
mov
gs
into
xchg
mov
rcrb
das
xchg
dec
rclb
xchg
xchg
out
sub
test
ret
or
fistps
testb
gs
inc
cmp
xchg
jmp
mov
mov
push
cmpsl
iret
add
cmpsl
sub
mov
sbb
mov
sbb
cmp
rolb
and
pop
xchg
nop
daa
or
popf
inc
test
bound
aas
or
lods
in
jecxz
mov
push
cmpsb
pop
aaa
stc
das
pusha
xor
jge
inc
xor
sub
cwtl
jbe
xor
sbb
loope
mov
int
sbb
dec
test
sub
fstpl
mov
mov
rorb
jge
test
insl
xchg
dec
xor
jne
add
inc
sahf
aaa
mov
push
clc
sbbb
scas
nop
push
js
das
or
mov
mov
stc
push
inc
add
ret
xchg
bound
adc
imul
test
mov
pusha
inc
sub
out
leave
test
daa
test
lea
push
push
leave
movsb
jae
cmp
pop
cltd
mov
sub
das
adc
inc
cmc
aad
mov
into
fisubl
xchg
repnz
or
cli
movswl
insb
ficompl
sbb
inc
gs
adc
fcmovne
jp
sub
jae
lock
sbb
dec
ret
mov
pop
insl
jle
mov
pop
movnti
lret
cmp
in
inc
cs
fsts
sub
inc
aad
icebp
jb
cmc
pop
sbb
mov
or
fcmovnb
cmp
nop
jmp
aas
mov
mov
out
sbb
mov
mov
mov
and
cli
inc
cmpsl
dec
es
and
jge
notl
pop
loop
rclb
ljmp
in
xchg
cld
jle
fdivl
nop
xor
adc
mov
in
pop
sti
mov
xchg
push
mov
push
roll
fiaddl
popf
sub
mov
xor
or
cs
pop
push
sarl
xchg
xor
scas
aas
movsl
cmpsb
mov
ss
int
push
adc
mov
inc
mov
int3
test
pop
stos
mov
cmp
inc
add
gs
push
adc
sub
mov
xchg
shll
ret
je
pop
sub
mov
mov
sub
movsl
fistpl
sbb
push
jne
dec
std
and
leave
out
xor
lcall
jnp
cmpsb
mov
gs
cmc
mov
insb
push
daa
push
adc
pop
cmpsb
push
adc
xlat
std
je
mov
jle
and
jno
push
test
cmp
fisubl
shll
js
clc
pop
lods
fimull
sbb
bound
pop
fnstcw
fisubrl
inc
repz
xor
in
stos
push
pop
cmp
fdivp
fstpt
mov
sbb
test
aam
xor
ljmp
adcl
popa
inc
mov
mov
adc
arpl
xchg
push
cmp
jnp
xlat
and
shlb
mov
pop
mov
testb
aam
lea
jecxz
add
clc
or
cmpsl
sbb
jl
push
adc
ficoml
pop
sub
out
sti
pop
jle
xor
push
mov
shl
pop
clc
fs
lahf
push
shll
repz
push
sub
test
jmp
sti
cmc
push
adc
fcom
push
adc
fs
out
mov
pop
pop
mov
push
mov
mov
sbbb
notl
stos
std
jo
xor
leave
xor
fimuls
sbb
jmp
in
sub
ss
lret
cltd
hlt
add
nop
inc
push
je
scas
arpl
cmp
or
out
sbb
arpl
mov
lock
add
outsl
adc
lret
mov
lahf
cmpsb
mov
lea
js
add
in
mov
nop
cmp
mov
sbb
sbb
add
dec
inc
sub
xchg
mov
pop
ss
mov
adc
sbb
cmp
inc
add
jo
cmp
and
inc
adc
cmp
es
aam
fisubl
scas
mov
aam
cmc
jb
jle
jns,pn
pusha
je
inc
cwtl
adc
or
inc
ffreep
jle
fistpl
mov
push
push
push
mov
rcll
mov
dec
mov
pop
jmp
xchg
push
dec
add
mov
inc
add
adc
movsl
stos
mov
dec
test
mov
pop
mov
jno
mov
push
movsb
cmp
jp
pop
fisubrl
icebp
insl
sti
adc
xor
mov
fwait
stos
mov
mov
sub
mov
sbb
jmp
push
rcll
in
fstpt
das
pop
stos
adc
je
cmp
xchg
jg
es
into
xor
dec
cmp
sbb
in
sbb
jecxz
add
movsb
scas
test
loopne
xchg
rcrl
push
cmp
cli
ret
mov
pop
lods
js
lds
or
aaa
or
sbb
sub
xchg
scas
scas
fwait
ljmp
add
ret
loopne
imul
fidivrl
fists
and
es
pop
mov
mov
mov
lock
nop
mov
mov
jno
aam
xchg
arpl
mov
mov
cmp
mov
loopne
add
pop
int
push
loope
mov
push
roll
fdivrs
mov
mov
sub
repnz
fnstenv
mov
mov
icebp
mov
test
inc
ss
test
adc
lret
pop
jmp
jge
ljmp
das
sub
pop
add
xchg
jmp
adc
cmc
mov
fwait
xchg
cs
int3
pop
jnp
sub
lcall
or
rcrl
in
jae
scas
rorb
push
add
xchg
or
fwait
lods
lea
sti
lods
and
mov
mov
daa
dec
aaa
cmp
call
inc
pop
inc
pop
sbb
mov
mov
stc
das
adc
jmp
sub
jns
mov
and
mov
ss
pop
aaa
test
lahf
dec
pop
pop
insl
adc
adc
out
fs
mov
mov
out
jnp
pop
shr
sbb
fstpl
testb
adc
insl
loop
loopne
mov
mov
sbb
incl
in
cltd
pop
sbb
repnz
jle
ja
jno
push
stos
rcr
repz
lods
push
sarl
add
into
sub
jno
adc
sbb
rcrb
mov
mov
push
mov
push
mov
lahf
mov
push
pop
cmpb
ljmp
jle
dec
ljmp
lods
iret
sub
and
inc
out
lret
jno
inc
dec
cmp
mov
addr16
dec
in
aas
inc
adc
paddsb
mov
dec
adc
loope
adc
or
push
add
stos
fdivl
aaa
jbe
fbld
cmp
enter
cli
rorl
mov
imul
jnp
hlt
sub
or
mov
rcll
add
in
mov
push
les
shrl
sbb
lahf
stc
and
clc
xlat
fstps
jl
shl
daa
mov
lret
in
jp
mov
adc
and
ja
hlt
stc
stos
or
lea
fsts
mov
sbb
stc
jns
decl
mov
jmp
imul
sti
fidivs
loope
insl
jmp
movb
cmc
pop
mov
fdivr
jb
aad
adc
mov
gs
dec
lcall
div
mov
inc
cmp
push
sbb
sub
xchg
sub
and
push
es
into
ds
scas
and
sub
imul
sti
pop
dec
dec
mov
repnz
dec
sbb
dec
cli
push
push
outsb
or
lock
sar
cmpsl
adc
cmp
pop
daa
jnp
sbb
in
add
or
or
add
stc
push
push
in
sbb
sarb
dec
out
inc
stos
stos
jo
sub
xor
inc
push
jl
inc
inc
mov
aad
xchg
outsl
adc
or
mov
sbb
pop
add
das
lods
push
adcb
dec
sbb
std
int
adc
push
mov
add
js
pop
mov
adc
cmp
mov
push
mov
pop
vaddpd
loop
movsl
jbe
mov
lret
and
nop
test
jne
movsl
xchg
push
loop
mov
enter
fdivp
mov
pop
mov
das
sti
sbb
cmp
icebp
clc
xchg
xor
incl
mov
test
sbb
in
js
cmp
sahf
loop
shll
mov
dec
push
pusha
jg
cld
mov
or
or
ret
push
test
dec
addb
push
sbb
fwait
mov
das
push
cli
loopne
sub
addl
jae
mov
or
jbe
mov
dec
sbb
xor
fmull
mov
pop
jp
popa
xchg
mov
cmc
push
or
shll
sti
lods
aas
xchg
in
icebp
cmp
cld
adc
mov
add
mov
xor
movsb
push
mov
insb
mov
add
sbb
mov
popa
adc
xchg
or
pop
mov
imul
xchg
jno
lods
lret
ss
xchg
sub
andl
dec
add
popa
loope
cli
test
add
push
lret
into
jns
fidivl
je
mov
addr16
std
push
lret
negb
sbb
jg
in
push
fisttpl
ljmp
loop
push
loop
sbb
pop
jno
push
pop
outsb
jnp
cmp
jle
push
sub
cmc
fcmovnu
push
sarb
mov
popa
lret
fdivs
mov
xor
push
jge
in
sub
sbb
out
rcll
je
or
jo
xor
inc
mov
rol
nop
jmp
cmp
jae
aas
lea
jmp
insl
adc
push
fisubs
aas
fisttps
xchg
inc
add
pusha
cld
loop
push
xchg
xchg
inc
nop
mov
cmp
xchg
ljmp
test
pop
test
and
fmull
mov
dec
std
out
jo
push
push
pop
inc
pushl
push
push
pop
mov
aas
xchg
cmp
sbb
fs
jp
cwtl
xchg
lock
mov
inc
outsl
push
mov
mov
xchg
insb
std
jbe
mov
fistpl
test
mov
mov
sbb
loop
stos
pop
xor
jo
shrl
push
jbe
jge
push
std
dec
shrl
dec
adc
sti
popa
or
leave
pop
mov
cmpsl
test
movl
push
cs
mov
mov
pushf
mov
fndisi(8087
add
lret
cmp
mov
mul
adc
aaa
out
je
sbb
rcll
rorb
cltd
dec
ds
push
or
fisttps
leave
pop
or
xor
add
or
pop
pop
andb
movsl
inc
movsb
jno
es
adc
or
inc
test
adc
push
jne
lock
cmc
lahf
add
or
nop
push
divb
sbb
call
mov
roll
addr16
lahf
pop
adc
push
div
shll
leave
xor
xor
int3
mov
out
dec
loop
mov
and
ret
inc
sbb
mov
cmp
sbb
jp
in
jl
lret
dec
push
pop
arpl
pop
and
pop
cltd
pop
movsb
pop
mov
sub
mov
pop
jmp
pop
cmp
xor
std
mov
pop
mov
aam
and
or
or
sbb
pop
dec
jne
in
add
cmpb
dec
pop
gs
aam
arpl
dec
pop
mov
push
pop
or
ror
add
iret
pop
push
je
dec
mov
sbb
lods
imul
fidivl
and
lds
sar
ja
adc
xor
lock
adc
cmp
sahf
ljmp
push
fucom
cli
repnz
pop
ret
sbb
fnstcw
stos
adc
rclb
xor
dec
mov
nop
add
mov
ret
cmp
je
aaa
mov
fcomps
jns
push
stos
lds
mov
pop
sub
adc
xchg
lcall
fs
cmp
lret
dec
mov
jmp
mov
mov
adc
and
idivb
pop
cwtl
in
pop
adc
dec
xor
pusha
das
inc
pop
push
in
mov
rcll
sbb
pop
hlt
daa
imul
jle
loope
shl
dec
mov
aas
push
xor
dec
inc
incb
rorl
adc
dec
cmp
and
sbb
lods
xchg
and
xchg
lret
cmpsl
mov
xchg
push
or
ret
out
pushf
xchg
cmp
adcl
or
xchg
xchg
mov
test
inc
sub
mov
xor
in
jge
out
fldl
and
lahf
bound
mov
mov
xor
pusha
hlt
pop
aad
out
push
imul
test
in
and
pop
pop
xor
sub
mov
stc
clc
imul
adc
sbb
xor
popf
rcrl
ret
aaa
std
sbb
fisttpll
shr
mov
and
loope
sbbb
hlt
cmp
mov
jns
push
cmp
xor
add
xchg
int3
dec
lods
std
jbe
cs
mov
ror
adcb
jnp
mov
or
insl
xchg
cltd
stos
mov
lahf
cmpsl
nopl
jle
mov
pop
lcall
push
flds
cmp
pop
sarl
aam
imul
arpl
push
aas
adc
mov
add
pop
xor
stc
xor
mov
mov
lahf
shr
stos
hlt
aaa
sbb
xor
test
push
mov
sub
cmp
pop
pushf
lret
or
xchg
xor
mov
adc
xor
outsl
sbb
rcrl
call
jns
push
int
mov
mov
jecxz
fs
push
movsl
loop
mov
enter
mov
into
and
inc
dec
push
iret
pop
pop
sbb
or
fdecstp
lods
aad
incb
xchg
insl
nop
mov
dec
aad
cmp
and
pop
ret
outsl
push
sub
ljmp
cmp
xor
add
pop
push
cmp
nop
scas
outsb
inc
insl
sbb
and
xchg
es
cmp
xchg
je
sbb
je
pop
mov
push
push
std
cmc
nop
dec
mov
stos
mov
lods
lret
inc
lods
test
dec
ret
fwait
mov
jl
mov
xorb
shl
mov
mov
fcoms
dec
adc
fwait
and
insl
imul
std
stos
lds
or
mov
push
push
jp
mov
and
cmp
push
inc
dec
cmp
dec
push
test
cwtl
xor
lret
mov
pop
repz
lock
dec
mov
sub
dec
imul
pop
push
sarl
outsl
sub
xchg
push
scas
add
mov
jg
cli
cmp
and
push
mov
js
aam
mov
popf
push
fimuls
xor
decl
mov
sub
loop
cld
push
in
cwtl
mov
mov
mov
and
fsubs
pop
shlb
mov
ret
lds
dec
jne
or
js
cli
adc
repnz
jno
lods
push
xchg
mov
mov
push
mov
addr16
xchg
and
fidivl
or
jecxz
ljmp
mov
push
xchg
mov
loopne
ss
or
mov
sbb
xchg
pop
popf
fmuls
pop
sbb
pop
sbb
pop
push
push
pop
adc
out
cmp
rcrl
pop
mov
mov
fdivp
pop
sub
adc
xchg
test
mov
add
dec
lahf
xor
add
dec
jne
dec
pop
pushf
xchg
xchg
pop
mov
cmp
xor
sbb
popf
sub
sub
cmc
cmp
aam
cmp
jne
iret
scas
in
clc
or
jno
sahf
mov
sub
adc
jnp
nop
sbb
pop
enter
sbb
rorb
sub
jmp
adc
mov
sub
jne
filds
scas
pop
dec
mov
pop
cmp
mov
ret
loopne
cltd
aas
or
mov
dec
rorl
xchg
pop
pop
shl
ss
mov
adcb
pop
sbb
mov
notb
fs
push
push
cs
mov
push
pop
dec
mov
or
mov
push
gs
dec
mov
mov
popa
repnz
cmp
mov
fs
das
ss
das
insb
pop
jnp
fisubs
divl
xchg
outsl
jns
in
sub
lods
cmpsl
mov
pop
fdivs
or
fdivs
rclb
ret
stos
dec
pop
ficomps
sub
add
add
insb
ss
ss
jle
in
loopne
cld
ss
test
xchg
sub
cmp
repz
xor
jmp
dec
mov
jmp
inc
jbe
lds
sub
or
xor
test
dec
out
leave
push
pop
push
mov
dec
xchg
push
es
jae
add
enter
sbb
mov
ss
das
cmp
add
add
mov
leave
mov
imul
jne
test
cmp
mov
jb
subl
hlt
leave
fcoms
lock
xor
jnp
inc
iret
jecxz
dec
cltd
das
mov
int
fisubrl
lahf
push
pop
loopne
or
dec
mov
out
lds
fwait
daa
ss
sbb
pop
arpl
pop
jl
xor
lcall
jb
loop
ss
jno
lret
popf
scas
xor
pop
mov
sbb
mov
je
push
insl
xchg
jno
in
lahf
jne
push
mov
jae
andb
mov
pop
add
in
mov
sub
xor
add
es
insl
add
leave
nop
inc
jp
pop
and
mov
aaa
cld
push
scas
mov
out
mov
rcrb
xor
movl
repz
or
or
jns
cmp
push
pop
ret
adc
mov
jb,pn
scas
dec
lret
mov
push
in
mov
fimull
js
test
mov
pop
mov
js
fdivrp
push
sub
out
insl
sbb
cmc
or
aam
pop
mov
je
sub
adc
cmpsb
outsb
mov
jo
mov
push
pop
dec
ficompl
mov
inc
push
stos
add
cmc
push
and
shl
movsb
sbb
jp
and
cli
stc
xor
aas
add
aaa
add
aaa
mov
xor
fidivrs
mov
arpl
sbbb
dec
push
xor
sbb
add
pop
inc
imul
aam
cmp
inc
pop
cltd
jge
push
lea
sbb
les
lock
lods
call
mov
loop
add
aad
fwait
ja
pop
pop
xchg
xchg
loopne
cmp
jns
and
xor
adc
popf
pop
es
loop
adc
and
in
arpl
sub
sub
ss
mov
outsb
rclb
xor
into
xor
mov
std
cmp
cmp
adc
test
jnp
fcompl
sub
jmp
jnp
xor
push
pop
mulb
xor
movsb
jne
jecxz
inc
jg
insb
mov
pop
lret
pop
repz
int
mov
push
cmpl
idivl
ret
xor
lods
xor
mov
lret
push
inc
popl
insl
cmp
pop
push
mov
jp
lea
mov
mov
in
mov
out
dec
das
cltd
mov
ljmp
pop
sub
mov
mov
test
sbb
and
dec
mov
cmpsb
and
js
xor
lret
sbb
mov
pop
cli
mov
jmp
lock
stc
es
imul
mov
cmp
add
je
add
mov
cmpl
xchg
pop
ror
push
mov
mov
jae
in
xor
das
aas
push
adc
dec
mov
je
and
pop
pop
sub
mov
dec
std
out
rorl
xchg
inc
inc
icebp
mov
mov
cli
jne
testl
sbb
ljmp
inc
shr
shr
jnp
fnsave
adc
adc
movsb
mov
inc
xor
ficompl
ja
das
mov
sbb
xor
js
rcrb
add
pop
mov
cltd
inc
adc
mov
xchg
jg,pn
mov
and
inc
pop
push
mov
insb
fsubrp
in
fs
mov
cmp
je
lock
add
inc
pop
lcall
out
ret
inc
addl
sbb
mov
addb
and
adc
add
addr16
mov
test
testb
daa
rcl
cmp
push
cmp
insb
mov
pop
rorl
pop
adc
dec
add
push
pop
stos
mov
fisttpll
push
leave
data16
xor
xchg
sub
and
incb
sbb
cmp
addr16
cmp
sbb
mov
push
lahf
iret
daa
dec
es
mov
mov
fstl
mov
or
out
push
cwtl
repz
inc
add
je
test
push
mov
sub
aaa
test
sub
pop
push
enter
imul
in
in
adc
adc
into
add
jp
iret
rolb
cmp
clc
pop
lods
stc
lret
sbb
cltd
add
adc
mov
icebp
xor
fcoml
insb
xchg
int
add
mov
in
sub
xor
add
xchg
ss
jae
mov
push
and
sub
jns
pop
lcall
inc
lret
imul
cmp
pop
test
insb
fildl
mov
movsl
xchg
add
jle
or
add
loopne
inc
insl
mov
dec
add
push
test
mov
out
inc
dec
cld
jno
xorb
out
inc
mov
fstpt
mov
dec
xchg
inc
mov
mov
pop
mov
adc
std
pop
mov
cmp
mov
rorb
sbb
repz
int3
daa
cmp
and
loope
push
mov
or
or
jnp
sbb
mov
cltd
xchg
push
jnp
inc
fsubrl
push
outsl
aad
je
inc
pushf
cmp
stos
leave
jno
repnz
xchg
push
popa
in
sub
or
xchg
sub
pop
mov
sbb
adc
ljmp
cmp
jmp
aam
ret
daa
scas
jbe
fstps
push
sub
jne
negl
sahf
std
mov
call
idivb
push
push
push
out
ficoml
fidivrl
xchg
xchg
mov
loope
sarb
cltd
fs
pop
add
bnd
sahf
in
jb
sbb
and
mov
or
mov
fwait
or
mov
add
sbb
mov
push
cmp
rolb
pop
pop
push
in
mov
je
inc
adc
cmpsl
leave
inc
push
data16
cmc
pop
mov
fs
lea
add
fmull
add
push
negl
std
es
lods
fwait
cli
sub
inc
pop
es
xor
sub
movsb
jmp
daa
lret
stc
ficompl
jne
dec
adc
daa
std
sbb
push
jle
mov
jp
jmp
sub
loop
cmp
je
push
gs
ficoml
out
es
mov
mov
mov
mov
pushf
sub
hlt
mov
fsubs
jle
sbb
pop
aad
or
incl
dec
fsts
jp,pt
imul
or
push
push
rcrb
cmpsb
ja
inc
mov
fdivrl
adc
fs
sarb
adc
mov
movsb
ss
mov
clc
imul
inc
shll
lcall
out
push
sub
jp
fwait
es
ds
xchg
xor
inc
pop
mov
or
cmp
ja
lcall
jecxz
xor
sub
jg
xchg
sub
stc
lret
xlat
pop
push
jmp
inc
add
jns
or
cmpsl
sbb
ja
es
sahf
pop
movsl
mov
test
xchg
rorl
dec
es
and
mov
cmp
or
insb
loop
test
fcoms
adc
mov
mov
pop
xchg
xchg
push
movl
jmp
cmc
cmp
xchg
xchg
lret
mov
js
dec
jmp
repnz
jp
push
fldenv
sbb
out
lods
stos
outsb
mov
ss
inc
adc
insl
in
sbb
stos
dec
add
sbb
push
call
lds
mov
pop
arpl
icebp
xor
popf
clc
cs
dec
or
adc
ljmp
dec
push
jne
sub
nop
mov
pop
or
mov
fcmove
sub
outsb
jae
push
pop
testl
sbb
mov
push
fnstcw
enter
xorl
cld
icebp
dec
out
int
push
mov
or
xor
sbb
icebp
fcmovne
lcall
loope
xlat
popf
pop
jns
inc
cli
test
jae
push
out
aam
or
notb
mov
jbe
pop
xor
lret
stos
nop
adc
push
sarl
sub
enter
addr16
adc
dec
pop
data16
test
sbb
mov
inc
sbb
into
jle
aad
ljmp
push
cld
aad
mov
and
jno
icebp
jno
shl
loop
adc
shlb
add
cmpsl
test
scas
dec
xchg
adc
and
sub
std
fldt
mov
dec
push
adc
xchg
js
mov
imul
cmpsl
jo
add
inc
fxtract
pop
or
push
mov
cld
cwtl
hlt
fnsave
push
and
xchg
std
push
jno
out
mov
daa
loop
sub
dec
lods
dec
mov
sar
into
jl
mov
lods
dec
pop
out
test
or
pop
std
inc
mov
cmp
ss
push
mov
push
mov
in
aaa
fwait
or
adc
dec
dec
dec
sti
push
mov
adc
or
repz
mov
push
out
xor
mov
lods
xor
aas
sub
mov
inc
enter
out
push
jmp
test
arpl
dec
movsl
std
mov
sbb
jne
jnp
lods
push
stos
mov
cmp
cmc
push
push
fstpl
scas
push
or
cld
lret
xlat
je
das
add
test
xor
xor
push
cmp
out
aam
pop
testl
repz
fdiv
mov
sahf
mov
or
test
dec
sub
cmc
fimull
mov
xor
movsl
pop
or
clc
mov
ss
and
ds
push
sbb
mov
aaa
or
jb
daa
mov
mov
fcoms
mov
push
xchg
sti
cmp
cltd
add
or
pop
test
mov
adc
jns
inc
push
test
push
push
mov
cmp
mov
pop
add
imul
cmpsl
xchg
xlat
or
rorb
inc
das
mov
test
adc
orb
sahf
nop
xchg
mov
mov
arpl
fdivp
adc
adc
push
lock
push
xor
repnz
and
xorl
pushl
test
fstpl
xchg
push
test
seta
xor
repnz
push
xor
mov
cmp
js
cmc
int3
je
cmpsl
arpl
jg
xchg
pushl
push
mov
adc
mov
lahf
inc
test
in
mov
rorb
mov
inc
adc
popf
sbb
mov
cmp
je
rorl
mov
sbb
mov
mov
scas
andl
cltd
mov
stc
pop
push
add
cmpsl
xchg
mov
out
jne
das
mov
jle
xor
stos
push
or
in
jle
cwtl
jns
mov
std
xchg
enter
sbb
mov
and
stc
adc
sbb
mov
pop
mov
jmp
mov
sub
in
xchg
mov
gs
lahf
or
sub
and
sub
repnz
nop
sbb
and
xor
les
mulb
scas
leave
pop
adc
test
jge
shl
das
inc
jmp
fwait
push
mov
lods
adc
xor
adc
dec
enter
mov
and
ficoms
cmp
push
mov
mov
cmp
add
std
or
das
jg,pn
je
lret
stc
lock
pop
icebp
or
pusha
data16
mov
inc
pop
jp
outsb
sbb
mov
lcall
mov
push
sub
mov
lcall
fisubrs
dec
mov
jns
dec
inc
sub
iret
push
mov
push
test
iret
repnz
adc
sti
push
mov
adc
jge
pop
incl
out
rcrb
out
pop
inc
mov
pop
mov
xlat
fidivs
cs
into
mov
imul
shll
addr16
mov
lret
lret
push
push
dec
cs
lock
test
mov
nop
xor
stos
mov
and
add
sbb
jle
das
jo
addl
cli
stos
inc
fdivs
movsl
push
nop
jno
cld
mov
out
fstpl
sub
sub
les
repnz
sbb
ljmp
stc
movsb
shlb
das
cmp
mov
mov
add
dec
pop
std
push
cmc
fninit
sub
aas
fcomps
cmpsl
push
inc
add
cmc
lock
mov
push
cs
push
nop
stos
jnp
pop
xor
out
sub
pop
sbb
ss
sar
adc
and
or
xor
repz
sbb
mov
sub
lods
lock
lahf
loope
mov
out
movl
push
sub
jae
sub
test
lret
cwtl
jne
push
pop
dec
add
pop
cltd
dec
fidivl
sbb
ud0
popf
jno
lds
rolb
insl
sbb
mov
fidivrl
pop
jnp
movsb
jge
xor
mov
jnp
loope
nop
xchg
jecxz
xchg
in
jnp
fistpl
sti
push
pop
je
dec
and
sub
insl
xchg
sbb
das
hlt
sub
rcr
ss
lcall
out
out
test
mov
sarl
imul
cmp
sbb
pop
testb
enter
jne
dec
and
add
jmp
adcl
test
cld
xor
loop
bound
inc
lret
mov
repnz
cld
mov
mov
mov
pop
and
jmp
sub
push
fwait
pop
test
push
int
repz
pop
out
enter
fwait
push
mov
dec
fwait
dec
rcl
pusha
mov
xor
xor
xchg
repz
and
mov
pop
dec
mov
mov
or
xor
fiaddl
cwtl
jge
and
ss
rcr
push
add
adcb
xor
into
jl
loopne
enter
xchg
outsl
add
push
sub
adc
dec
in
lock
push
xor
mov
sub
sub
notb
dec
pop
push
lret
daa
cmp
fwait
push
mov
jb
int3
pop
ror
jae
jl
dec
or
loopne
gs
sbb
out
aam
ja
stos
adc
jb
dec
mov
adc
jns
sub
mov
pop
xor
jge
negb
fidivl
dec
xchg
xor
ss
pop
mov
inc
jne
and
orb
mov
fwait
cmp
xor
push
dec
je
xlat
lods
add
orb
add
cmp
cmp
add
xchg
mov
jmp
test
rcrl
adc
cmp
data16
mov
sub
mov
rorl
xchg
sub
mov
shlb
stc
inc
pop
xor
sub
inc
xlat
mov
out
jmp
mov
je
fwait
xor
jns
push
mov
pop
movsb
sti
or
adc
jmp
out
pushf
and
or
xchg
jg
mov
sbb
add
mov
clc
dec
repnz
adc
outsb
scas
jl
cli
sub
jnp
lods
inc
ss
ds
popa
ret
add
jbe
cmpsl
hlt
push
and
mov
mov
push
std
in
or
js
sbb
mov
mov
mov
lahf
pushf
cmpsl
subl
movsb
je
sub
pop
inc
mov
test
push
leave
mov
push
cmp
adc
mov
push
sub
fwait
jmp
mov
mov
xchg
push
push
pop
in
inc
pop
jno
fnstcw
add
mov
cmp
mov
incl
sbb
in
test
aam
arpl
aas
stos
mov
imul
pop
cmp
and
fs
mov
mov
insl
fwait
lock
outsb
mov
neg
nop
inc
fisttpll
sbb
fcmovnu
int
nop
jle
icebp
pop
xorb
sbb
rclb
ret
pop
adcl
ds
call
clc
jp
leave
dec
dec
and
pop
lea
cmp
mov
or
and
push
es
add
sbb
push
pop
jmp
inc
push
test
sub
mov
sub
aad
icebp
mov
sub
imul
and
mov
mov
and
js
cmp
sbb
ja
pop
notb
sub
jne
push
mov
dec
pusha
sub
ljmp
or
dec
movb
lds
xchg
jmp
fidivl
fstpl
js
dec
xchg
dec
lahf
data16
mov
loopne
ja
cmp
cmc
add
inc
push
adc
cmp
rcl
clc
and
bsr
and
lahf
rclb
orb
fistpl
movsb
call
ja
mov
rolb
mov
sub
xor
mov
fdivl
push
pop
cmp
and
sub
push
pusha
add
or
dec
inc
push
pop
fsts
mov
or
jge
xor
pop
lret
mov
dec
in
fcoms
mov
mov
add
mov
dec
mov
insb
dec
dec
mov
lds
mov
adc
inc
fwait
push
cmc
xor
mov
gs
fnstsw
mov
inc
es
dec
mov
or
popf
xorb
mov
inc
push
mov
mov
jo
out
mov
sbb
jae
imull
sbb
test
add
push
lods
fwait
mov
pop
es
inc
jmp
les
ds
imul
mov
xor
cwtd
pop
mov
xor
cld
mov
push
jge
cwtl
xor
fnstcw
fdivl
jge
pushl
pop
or
fnstsw
xchg
mov
cmpb
in
xor
xchg
jb
xor
add
mov
test
pop
popa
dec
xor
mov
jp
jo
jo
sbb
imul
je
stos
sub
aas
adc
jle
cld
mov
shrb
pop
paddq
push
mov
int
das
fnstcw
fdivrs
add
push
ljmp
jbe
or
push
and
mov
sti
loope
inc
in
stos
mov
repnz
ss
xchg
sub
insb
sub
cmp
add
dec
dec
pop
mov
mov
repnz
and
mov
push
push
pop
mov
imul
ds
sbb
enter
lret
mov
popf
mov
xor
cmp
pop
ljmp
popl
int
push
dec
popa
pop
adc
loope
mov
fnsave
icebp
push
sub
sub
fsubs
mov
or
jecxz
push
rolb
sub
sub
in
sbbb
xor
out
jge
cmpsb
repnz
push
sbb
fsub
adc
popf
adc
jnp
loopne
pop
mov
xchg
in
cltd
xor
jo
pop
fidivs
sub
mov
sbb
adc
mov
jne
cmp
xchg
sub
stos
mov
push
imul
push
sbb
jl
daa
mov
ss
fnsave
sbb
cwtl
push
in
fwait
mov
jmp
fistl
cmpsl
insb
mov
mov
inc
dec
or
rorb
or
pop
lahf
xor
decb
pop
xchg
or
inc
or
jecxz
jmp
jne
dec
out
sub
pop
jnp
in
xor
or
dec
cmp
pusha
mov
sbb
cmpsb
orb
or
out
pop
decl
cmc
push
imul
adc
mov
xor
sub
cmc
test
loopne
jmp
cmpsb
in
ficoms
testb
in
es
cmp
shll
bnd
repnz
mov
sub
lods
cmp
lret
push
and
jo
mov
mov
xor
push
js
lret
insb
mov
jmp
fsubrl
aad
lahf
pavgb
loope
rcr
push
pushf
xchg
cld
dec
sub
jnp
mov
shl
lods
pop
shl
aas
push
push
cmpsb
dec
cwtl
incl
xor
mov
pop
cmpsl
rcrl
sbb
fistpll
mov
mov
add
adc
xchg
cmp
or
dec
out
in
int
push
pop
xlat
mov
dec
lcall
mov
dec
loope
ret
cmpsl
mov
cmp
push
fstsw
or
pop
insl
lret
inc
les
adc
popf
lea
movl
jnp
ljmp
dec
xor
add
imul
into
jnp
scas
adc
lsl
adc
lods
cs
xor
sbb
mov
roll
ret
mov
jmp
mov
push
out
insl
icebp
loopne
cmp
loop
push
out
in
xchg
test
sbb
icebp
mov
pand
dec
mov
shlb
xchg
popf
lret
xor
lods
in
arpl
add
jmp
cmc
adc
jbe
adc
enter
in
mulb
iret
cmpsl
in
cwtl
test
jns
out
add
sti
in
pushf
sbb
test
mov
sahf
call
mov
adc
inc
into
mov
pop
jae
das
add
lods
dec
or
cmc
shrb
adc
lock
inc
test
addl
mov
push
enter
mov
repnz
pop
adc
jae
rcrb
xchg
out
and
push
test
pop
stos
test
cmp
mov
pop
stc
cmpsb
mov
loop
mov
dec
repz
idivb
bound
push
or
fiaddl
jne
sbb
popa
nop
add
mov
int3
jg
stc
aaa
inc
mov
jbe
cmpsl
outsb
aad
jne
mov
ficoms
mov
pop
xor
insb
in
pop
fwait
xor
test
sti
mov
or
aaa
mov
aad
add
pop
fwait
insl
mov
push
mov
loope
orl
jecxz
int
lret
mov
in
inc
dec
add
and
loopne
in
mov
xor
fildl
dec
cwtl
icebp
push
dec
andb
hlt
mov
mov
jmp
popfw
xor
dec
fstps
sub
jle
xlat
xchg
mov
inc
jae
xor
roll
or
call
out
clc
and
push
adc
xor
ficoms
ret
pop
dec
stos
add
cs
nop
mov
push
mov
sarl
xlat
mov
pop
mov
pop
pusha
aas
fsubs
sbb
jns
adc
xor
cwtl
pop
push
js
sub
stc
dec
mov
lea
arpl
pop
in
xor
xchg
sub
sub
adc
mov
cmpsl
sbb
push
das
rclb
in
dec
sub
pop
roll
dec
mov
cmpsl
adc
add
ficomps
sub
xchg
jecxz
ficoms
xchg
pop
aam
nop
mov
pop
jnp
adc
enter
fistpll
sahf
or
sub
and
add
jno
sub
std
pop
je
pop
xchg
and
mov
add
gs
mov
pop
psubb
sub
adc
pop
dec
mov
cs
stos
aaa
shlb
adc
lods
mov
aaa
mov
xchg
sub
shlb
enter
sbb
mov
and
sub
mov
add
fsubrs
adc
mov
out
inc
sub
sar
je
mov
test
mov
sub
push
aaa
sbb
sub
aam
mov
mov
push
loopne
xchg
mov
in
push
adc
cli
addb
lcall
int3
das
fdivrl
lahf
cs
fistpll
cmc
inc
bound
xor
insl
je
lahf
sub
sbb
add
cmp
pusha
mov
loopne
lahf
cmpsb
pop
and
std
nop
mov
fisttpl
and
mov
ficoms
jge
je
jbe
inc
cld
cmp
xor
push
jl
mov
and
ss
sbb
xor
subl
popa
mov
mov
push
lds
mov
mov
mov
cmp
aam
repnz
pop
push
xchg
sub
mov
ds
mov
mov
das
gs
push
mov
add
mov
aad
dec
mov
mov
xor
push
add
push
pop
jnp
lds
in
outsb
lcall
fwait
pop
or
cmp
int3
push
mov
adc
or
fisubl
loopne
adc
dec
xor
movsb
xor
or
mov
dec
cmp
mov
sub
mov
fwait
mov
and
sbb
jb
sub
push
test
mov
mov
lret
xchg
aam
mov
mov
adc
pop
cs
or
push
mov
xor
push
lahf
jl
fcoml
add
mov
xor
sbb
or
cwtl
add
add
sub
mov
sarl
push
cmp
or
and
xor
std
cmp
pop
inc
lcall
test
cltd
clc
cmp
jae
pop
and
jp
inc
jo
frstor
adc
jo
or
test
aaa
stc
add
jns
fnclex
mov
out
add
outsl
ret
sti
ljmp
pushf
stos
jmp
push
pop
mov
fdiv
call
xchg
cmp
dec
push
stc
and
fiaddl
mov
scas
dec
dec
cmp
push
xor
out
add
xchg
lods
in
mov
mov
rclb
fidivrs
ss
dec
mov
or
xlat
pop
enter
lds
jl
pop
rcrb
cmp
aaa
pop
mov
sbb
inc
lahf
repnz
adc
sbb
adc
pop
mov
pop
jle
pop
jl
xor
in
mov
shlb
inc
adc
adc
xor
shr
mov
mov
or
pushf
clc
lods
out
cltd
lahf
jmp
fs
dec
jns
pop
push
mov
lret
lcall
and
mov
lods
dec
jo
repz
sarl
adc
clc
scas
std
sub
cmpsl
in
dec
ret
pusha
and
sbb
dec
add
add
ljmp
stos
push
fldenv
sbb
pop
mov
mov
push
loope
cmp
xchg
xchg
es
insb
pop
inc
aad
jmp
sar
fnsave
sub
dec
lahf
jne
pusha
stc
icebp
ficoms
dec
data16
adc
pop
cmp
sbb
push
fwait
cwtl
in
push
lock
mov
xor
or
lret
aaa
fwait
pop
xor
std
sarl
loopne
adc
enter
adc
fs
fimuls
push
inc
aaa
movsl
in
mov
adcb
fwait
in
aad
sahf
clc
xchg
adc
mov
aad
dec
dec
push
adc
cs
mov
add
lods
pusha
dec
cmpsl
mov
push
ja
pop
cmp
mov
jbe
pop
sub
mov
push
adc
mov
lods
mov
imul
inc
repnz
bound
test
push
pop
pop
ds
adc
jmp
cli
shll
ja
pop
data16
sub
pop
icebp
or
mov
in
xor
sbb
pop
je
stc
adc
in
adc
pop
das
dec
out
mov
std
aam
sub
pop
insl
sub
and
popf
stos
out
dec
xchg
or
sti
add
fcompl
push
or
xor
and
stc
sti
movsl
pop
add
mov
icebp
inc
cs
adc
or
jl
xlat
ss
add
xor
nop
idiv
jge
leave
enter
in
jno
std
or
inc
int
sub
lahf
or
inc
jg
lock
jge
sub
mov
out
push
ds
xor
inc
push
fidivs
popl
mov
insl
fcomps
sbb
adc
xor
push
or
add
xchg
stos
push
repz
int
jp
mov
dec
xlat
fwait
add
mov
ret
mov
sbb
nop
mov
jns
push
ljmp
push
mov
adc
stos
addb
xor
add
cmp
shlb
xor
pop
std
dec
pusha
imul
cmp
aam
lahf
lret
cs
scas
out
shll
sbb
lcall
es
push
push
dec
mov
movsl
jbe
sbb
sub
subl
repnz
in
pop
fistpl
pop
insl
in
sbb
repz
cmpsl
add
inc
push
fiadds
mov
rcll
sarb
pop
pusha
mov
push
pop
pushf
mov
push
inc
xor
retw
mov
bound
stc
or
mov
sbb
stos
jge
sub
mov
loop
in
pop
mov
add
or
sbbb
push
outsb
dec
xlat
or
lods
ljmp
lcall
jb
jmp
sub
or
pop
inc
cmpsl
lret
pop
nop
popa
jnp
or
rolb
sub
and
pushf
sub
out
mov
pop
fidivl
gs
add
pop
dec
fidivrl
lds
add
int
xchg
nop
fcoml
push
les
test
add
and
test
mov
xchg
das
adc
or
mov
xchg
jnp
rsm
fistl
jne
xor
out
filds
push
outsb
testb
call
fadds
or
mov
ret
xchg
mov
scas
pop
mov
xor
xchg
orb
stos
or
push
mov
out
push
push
enter
fnstenv
mov
adc
mov
orb
ret
clc
dec
mov
sub
pop
push
cli
mov
inc
loop
add
cwtl
sub
xchg
call
jne
dec
mov
cmp
scas
push
xchg
inc
cld
scas
into
jle
pop
je
mov
scas
in
mov
movb
stos
or
sti
add
insl
sub
jle,pt
cmp
mov
mov
in
insb
lret
sbb
popa
out
jo
fistl
orl
test
push
jmp
add
mov
jmp
add
jo
pop
xchg
sub
and
xor
shlb
shll
cmp
jge
jnp
addl
mov
xor
xchg
push
jno
inc
pop
cmpsl
sub
sub
or
push
mov
imul
inc
ret
or
fimull
int3
and
or
outsl
sarl
xchg
enter
pop
es
les
in
mov
cmp
xchg
arpl
out
push
push
jae
lods
lret
lea
pop
xor
adc
mov
jg
dec
or
jmp
out
push
push
jb
xor
les
and
cmpl
jne
mov
dec
cmp
ss
and
mov
sub
pop
ljmp
sub
mov
pop
aad
lahf
int
sub
pop
fstpt
std
push
cltd
aas
ret
mov
adc
jle
out
mov
ljmp
leave
push
cmpsl
jbe
dec
ljmp
push
sti
mov
fnstcw
or
call
dec
push
jns
bound
pop
cmpl
movsb
dec
das
pop
xor
add
filds
push
ljmp
mov
sub
fsts
out
repnz
push
adc
lahf
sub
daa
es
cmc
adc
cld
inc
xor
push
cmp
sbb
sbb
inc
push
dec
push
add
push
out
test
dec
cmp
test
adc
leave
in
dec
xchg
pop
pop
rcll
imul
stc
mov
inc
or
in
mov
sub
inc
jnp
jmp
jle
push
jmp
insb
jnp
out
mov
inc
std
cmp
and
pop
lods
lret
mov
fisubl
repnz
xlat
psubsw
int
jmp
pop
add
adc
push
mov
int
iret
out
scas
dec
mov
mov
push
mov
ja
mov
push
mov
fisubrs
cwtl
fdivrl
cmc
inc
dec
in
xchg
xlat
stos
xor
cmp
mov
xor
cli
cld
mov
jb
jge
loope
popa
sti
inc
rcrb
mov
sub
ss
xor
rcrb
call
call
and
fistps
icebp
xchg
lret
mov
jb
ret
jb
mov
or
xor
sbb
or
mov
das
out
cmp
addb
stc
xchg
jmp
sti
xchg
repnz
je
sarl
inc
dec
dec
mov
adc
imul
lahf
nop
cmpsb
jae
in
cmp
adc
adc
pop
sub
inc
pop
in
std
loope
and
mov
sbb
mov
jns
mov
lret
sbb
insb
subb
das
jns
jb
fwait
pop
idivb
mov
inc
xlat
dec
fld
pop
insb
decb
cmp
push
xor
push
cmc
and
or
cmpsb
fstpl
out
pop
sub
push
insb
cld
sbb
push
movsl
adc
sub
mov
sub
push
jg
lods
lock
cmpsl
pop
and
push
add
adc
shlb
movsl
fs
pop
mov
mov
fidivrs
aas
es
data16
fcmovne
inc
stos
jno
fucom
decb
jmp
inc
add
xor
cmpsl
adc
jb
mov
fcomps
sbb
sbbb
push
xor
jns
lods
fwait
and
jno
iret
sbb
or
sti
mov
pushf
cmpsl
pop
sbb
ljmp
in
or
bound
sahf
mov
ficomps
jnp
mov
inc
movsl
and
jmp
pop
repnz
mov
jp,pt
fisubrl
sbb
gs
mov
std
mov
and
sub
addr16
or
adc
dec
push
sub
scas
dec
pop
test
mov
cwtl
adc
rcrl
xchg
icebp
pop
mov
push
sarb
mov
mov
xchg
jge
roll
popf
cmp
aaa
data16
inc
imul
insb
adc
xor
xor
sub
adc
or
int
lret
repnz
ss
jo
in
cmp
cmpsb
pop
jnp
mov
lods
mov
jb
shlb
sbb
test
xchg
push
addl
push
movsl
inc
jnp
inc
adc
mov
dec
mov
loope
ds
and
sbb
repnz
xchg
out
adc
jbe
inc
aad
pop
or
cs
cli
xor
jl
mov
lcall
mov
pop
test
scas
fsts
hlt
cmp
add
das
outsb
sub
incl
pop
test
rorl
push
into
adc
clc
jg
mov
jmp
lahf
jmp
jno
fs
sti
loopne
cmp
inc
dec
mov
inc
mov
cmp
add
xor
sbb
jae
lods
mov
shrb
adc
inc
push
std
pusha
sbbl
jle
push
or
jp
jo
add
push
test
das
inc
sbb
mov
sarb
mov
test
test
cmpsb
xchg
jae
sahf
inc
mov
mov
sub
xchg
in
mov
dec
fwait
cmp
push
push
xor
imul
pop
loope
or
jns
add
xor
push
test
jmp
mov
cmp
add
push
add
stc
scas
jnp
push
cmpsl
inc
cli
ficoms
test
adc
jne
sub
dec
fisubl
dec
pop
rcrl
insb
lret
dec
stos
test
ss
ficompl
fstl
insl
daa
orb
jl
xor
jg
jne
and
popf
mov
adc
mov
imul
push
int3
mov
repz
divb
ficoml
or
mov
js
dec
popa
xchg
and
cmp
aad
or
adcl
int3
push
inc
dec
mov
pop
sbb
cmpb
mov
add
sti
testb
stos
cmp
fisttpll
fimuls
push
xor
out
inc
or
mov
mov
in
mov
outsb
mov
lret
sti
add
mov
cmpsl
sbb
in
sub
xor
cmp
mov
rcrl
jl
jbe
dec
jmp
adc
mov
add
push
sub
jne
pop
lret
xor
ja
or
mov
cmc
and
jnp
mov
call
cltd
lret
jmp
or
sahf
xchg
fistpl
lea
fnsave
pop
stos
mov
dec
scas
xor
push
outsl
cmpb
pop
sub
cmp
cld
mov
xor
xor
pop
sahf
mov
adc
scas
popa
frstor
jmp
xchg
cmpsb
fxch
stc
jp
sti
sbb
mov
in
pop
mov
mov
and
jmp
add
insl
mov
leave
inc
or
aad
ljmp
test
stc
sbb
dec
sbb
jns
cmp
pushl
mov
out
fisubs
mov
or
daa
in
jmp
rolb
push
push
mov
lahf
push
lret
ret
lret
dec
jl
mov
imul
pop
std
adc
js
and
sarl
lock
sub
std
jge
iret
adc
cmp
mov
enter
mov
xchg
cmpsb
sub
pop
repz
inc
dec
adc
loop
inc
xor
xor
lods
ss
lret
pop
mov
mov
pop
in
test
ss
mov
xchg
sbb
mov
mov
mov
js
bound
adc
loope
xor
ret
rcrb
rcrb
dec
fadds
dec
mov
ljmp
xchg
add
sti
jns
imul
lahf
fists
fwait
je
push
xchg
inc
jp
sbb
outsb
test
and
test
push
add
cmp
mov
cld
pop
add
pop
xchg
cmpsl
pop
pop
xor
sbb
aam
iret
mov
adc
cwtl
jmp
lods
sbb
jl
nop
pop
cmpsl
mov
fwait
jle
out
ret
push
idiv
insb
cmp
jmp
xchg
mov
sub
dec
mov
and
jle
imul
pushf
add
outsl
xchg
xchg
fstpl
mov
fimull
lock
mov
pop
mov
lret
sti
fldl
dec
dec
out
pushf
xor
into
mov
xor
frstor
adc
inc
mov
add
xchg
inc
xchg
jns
dec
mov
aaa
sbb
sub
test
fdivl
mov
arpl
sbb
stos
push
call
repz
jno
jge
adc
std
push
add
add
xchg
sub
jbe
mov
fsubrs
inc
push
or
in
xchg
out
movsb
lcall
mov
std
xor
aad
cmp
mov
lods
and
jecxz
fwait
xor
xor
sarl
lret
aas
xor
xchg
xchg
and
lcall
nopl
stos
pop
aaa
cmpsb
repz
inc
mov
xchg
and
aam
stos
adc
cli
xchg
or
nop
outsl
pop
js
mov
inc
out
mov
cli
fcomp
cmp
lock
adc
adc
cmpsb
addr16
fwait
and
nop
xchg
adc
das
mov
push
mov
das
dec
stos
rorb
cmp
pop
xchg
scas
fldl2t
jnp
das
push
adc
mov
push
sbb
cmpb
lods
imul
xchg
lret
sub
inc
sar
lods
lcall
shrl
out
lds
dec
xor
xchg
sub
sub
and
xor
mov
fsubs
or
dec
xchg
and
jmp
cld
lcall
xchg
add
xlat
adc
jae
cli
pop
stc
std
jo
movups
push
std
and
stos
adc
push
xlat
test
out
sahf
mov
fisubl
inc
dec
push
sub
or
mov
pop
mov
aad
sbb
lahf
pop
rcl
movsb
push
push
adc
cmpsl
fisttpl
testb
lcall
mov
or
inc
push
incl
call
arpl
ss
mov
dec
inc
adc
sub
inc
inc
mov
js
push
adc
fs
or
jno
cmpsl
stos
ret
dec
insl
inc
fstp
daa
mov
pop
mov
lcall
add
ljmp
test
lcall
push
fwait
add
pop
pusha
lcall
push
fcmove
sub
imul
push
mov
jno
push
push
inc
test
outsb
andl
movsl
push
and
repnz
mov
push
push
push
sbb
pop
imulb
and
sub
out
mov
out
insb
mov
jae
inc
enter
ja
lahf
jno
mov
insl
fidivrs
xor
xchg
enter
fdiv
lret
sub
xchg
sub
cld
ss
lods
nop
lods
aaa
pop
inc
or
mov
adc
ficomps
pop
js
test
hlt
cwtl
jecxz
add
lods
sbb
or
mov
mov
lods
adc
enterw
pop
push
sbb
ss
addb
lods
leave
adc
std
jno
jno
nop
mov
mov
xchg
inc
mov
jae
adc
and
std
andb
ja
xor
movsl
lret
loop
cmc
adc
insb
xor
lahf
jmp
out
sbb
sbb
and
movsl
jecxz
daa
popf
roll
xor
pop
cmp
push
lea
je
ss
inc
cmp
popa
and
out
loopne
popa
pop
push
popa
jnp
push
mov
mov
cmp
loopne
or
out
push
repz
clc
push
faddp
out
adc
cmp
mov
fwait
pop
mov
fimull
mov
add
cmpsb
xor
ret
cmp
adc
xchg
jle
xchg
cmp
push
out
push
xchg
hlt
std
test
mov
xor
mulb
pop
cmp
ss
ret
cli
jnp
arpl
hlt
jns
sbb
and
push
dec
and
xchg
or
ja
mov
and
mov
sahf
xor
les
and
push
pop
addb
aad
dec
inc
jno
pop
filds
push
mov
cmp
mov
xor
das
mov
mov
movsb
mov
add
cwtl
mov
mov
bound
fistl
pop
mov
push
std
bound
pop
push
incb
dec
xchg
shll
pop
fistpl
sbb
and
jecxz
jle
sahf
mov
fmulp
sbb
test
xchg
mov
push
add
ror
jle
push
xchg
ret
push
fidivrl
mov
popf
adc
aas
inc
popa
mov
in
adc
addb
adc
shll
insb
inc
lods
mov
jne
push
jb
pop
iret
xor
xor
add
icebp
mull
xor
adc
lcall
shll
push
pop
sbb
push
mov
aaa
jb
enter
sbb
fidivs
jbe
cmp
divb
mov
fs
mov
mov
dec
push
xchg
fwait
sar
push
cmp
out
and
mov
insl
addl
cmp
xchg
loop
adc
pop
stc
repnz
inc
jmp
inc
sub
andb
and
mov
mov
push
add
pop
sahf
sbb
cmp
pop
fwait
daa
lods
mov
test
cmc
dec
and
fdivr
inc
push
das
aam
push
inc
in
sbb
or
mov
cld
pop
mov
xchg
lods
xchg
rcl
std
mov
jecxz
adc
xchg
pop
cld
push
jns
dec
inc
movsb
das
xchg
insb
xchg
pushf
and
dec
movsl
and
pop
pop
mov
test
lds
push
adc
inc
imul
cmp
lds
repnz
xchg
mov
dec
ss
fisubl
pop
pop
jmp
add
sahf
push
sbb
in
mov
mov
pop
xchg
je
out
jmp
push
scas
std
rcll
in
adc
xor
cmp
loopne
movsl
jbe
cmp
mov
test
in
shll
mov
and
shrl
fs
mov
enter
push
inc
pop
sbb
add
xchg
out
std
mov
sub
imul
cmp
aad
inc
mov
adc
or
mov
mov
je
shll
prefetcht2
daa
xchg
cld
mov
repz
pop
add
xlat
gs
out
out
mov
pop
aas
adc
pop
dec
xchg
jl
push
xorl
dec
cmpsl
lods
push
jno
push
mov
pop
mov
cmp
push
cli
movsl
fwait
jmp
cmp
sbb
mov
jnp
mov
daa
jnp
or
push
lods
loope
arpl
adc
pop
pop
add
push
push
jns
push
data16
and
fsubrp
jno
clc
or
or
popa
cld
sbb
mov
xchg
mov
cmp
mov
notl
dec
pop
jo
ret
jb
lret
jl
mov
pop
cmp
gs
repz
sub
push
jo
push
and
jno
push
call
lahf
je
jo
dec
mov
std
bound
push
jae
pop
sub
insb
int
add
repz
loop
mov
pop
push
cltd
fildll
push
sbb
pop
jl
mov
aad
cmpsl
or
xor
xor
icebp
mov
jmp
clc
mov
sbb
lret
sbb
out
imul
insb
add
rorl
stc
push
jmp
je,pt
pop
mov
in
mov
and
sbb
rclb
xor
movsb
nopl
aaa
insl
cmc
xchg
dec
fs
and
in
dec
leave
and
ljmp
rcr
pop
lret
stc
movsl
mov
mov
xor
das
sbb
jp
dec
ror
stos
repnz
pop
and
je
sbb
mulb
pusha
ret
cmp
cmp
push
add
cld
or
xor
pop
popa
xor
xchg
pop
adc
mov
fdivrs
pop
xchg
es
cmc
fsubl
mov
adc
in
ret
pusha
mull
rcll
push
sub
xchg
sbb
popa
push
push
mov
push
mov
in
ja
test
xchg
xor
je
or
adc
stc
fcmovnb
in
ljmp
adc
jo
xchg
jge
hlt
jo
lret
lea
daa
mov
negb
sub
cld
jne
or
push
xorb
xchg
test
push
sub
outsl
inc
mov
mov
or
mov
lods
push
or
test
xchg
and
adc
lock
call
push
daa
outsb
shrb
push
push
pop
xchg
nop
cli
fistpl
cmp
inc
das
add
lret
fcmovbe
out
pop
fldenv
stos
jno
lock
mov
add
shll
pop
adc
js
loop
lret
dec
xor
mov
dec
mov
sti
fisubs
shll
and
out
cs
inc
orb
dec
pop
sub
xchg
stos
ss
lods
mov
cmp
icebp
dec
pop
inc
iret
jp
mov
mov
xor
jl
pop
aam
push
jge
out
adc
xchg
sbb
dec
mov
test
jge
lcall
cmp
movb
iret
jp
mulb
popf
nop
ljmp
mov
fs
adc
pop
cli
xor
jno
loop
push
mov
add
add
stos
push
add
jae
in
stc
or
lock
mov
adc
orb
fcmovne
in
sbb
adc
in
dec
mov
movsl
push
mov
mov
fsubrs
ret
out
ret
mov
int3
and
add
fmull
dec
xchg
jb
mov
aaa
jns
sbb
jb
cmp
pop
lret
in
inc
stos
test
cmpsl
and
sub
push
scas
inc
cltd
adc
pop
pushf
jnp,pn
popf
mov
in
mov
decl
mov
dec
int3
pop
mov
lock
mov
adc
or
sbb
mov
clc
imul
dec
aas
and
adc
xchg
adc
cwtl
push
or
add
shrb
test
std
outsl
sub
aas
push
sahf
cmp
cli
and
or
pop
lret
pop
vpackssdw
dec
sub
or
cmp
adc
je
inc
mov
jno
icebp
mov
fwait
and
push
push
ds
cmpsb
stos
cli
or
dec
dec
aam
fucom
and
lea
insb
xchg
loop
xchg
dec
fimull
push
mov
incb
mov
or
in
and
aaa
clc
sub
jmp
mov
movsl
adc
pop
scas
daa
test
pushf
js
mov
addr16
sbb
inc
imul
out
jmp
and
cli
xchg
fldcw
mov
or
lea
jmp
aaa
jle
mov
ss
inc
mov
mov
and
mov
mov
fildl
andl
xchg
js
push
mov
cmp
pop
mov
push
call
mov
adc
cmpsb
dec
fdivs
xchg
inc
pop
cmp
cmp
xchg
xchg
cmpsl
pop
and
es
mov
adc
add
pop
or
jno
push
or
lret
mov
xchg
mov
or
xchg
mov
rorl
fs
imull
sub
jb
loopne
in
push
pop
lods
data16
in
mov
cmc
fs
fwait
je
dec
popf
xchg
and
shll
test
cmp
ljmp
sbb
lfs
push
push
dec
les
repnz
ret
mov
xchg
jg
dec
bound
test
test
xchg
adc
cmp
add
pushf
sub
sbb
pop
xlat
pop
cld
in
fs
outsl
dec
dec
cmovl
push
fsubr
lock
cmpsl
scas
mov
jg
sbb
and
movsb
inc
sub
jno
jno
frstor
mov
nop
mov
and
inc
push
repz
fidivrl
fistl
repz
mull
mov
das
jbe
lret
or
add
adc
sbb
sbb
shrb
inc
incb
das
insl
mov
jle
xor
lods
dec
xor
js
xorb
fimull
aad
mov
mov
cli
push
test
adc
push
dec
rcr
add
movsl
xlat
clc
mov
shll
adc
int
sub
lret
inc
orb
jne
leave
adc
sbb
adcb
pop
ret
cmp
hlt
sbb
sub
pop
mov
cld
xchg
mov
enter
mov
mov
leave
inc
sbb
xor
and
mov
inc
cmp
pop
inc
jmp
mov
scas
adc
insb
sub
cmpsl
sub
pop
orb
ret
imul
pop
cmpsb
or
jbe
xchg
jo
sub
pop
lods
test
push
dec
pop
mov
dec
jmp
cli
inc
xchg
fwait
jge
mov
push
mov
fiaddl
xchg
lret
push
inc
jns
or
mov
mov
lods
lret
xor
sbb
pushf
add
into
push
push
mov
lret
push
cmp
imul
cmpsl
cmp
pop
push
adc
add
push
push
subb
ss
mov
mov
shrl
mov
mov
or
fstpl
add
insb
imul
inc
mov
rolb
or
nop
mov
adc
dec
and
jne
fst
repz
mov
mov
ret
jle
cmp
lds
cli
jns
dec
aas
xchg
es
dec
mov
stos
out
xor
fisubrl
inc
sarl
ret
outsb
push
add
stos
and
adc
dec
add
dec
test
sbb
push
xchg
mov
in
pop
adc
sbb
mov
or
inc
roll
roll
dec
fs
dec
add
xlat
mov
fiadds
push
sub
leave
or
testb
sbb
jg
xor
bound
cmp
std
imul
cmp
sub
xor
and
push
lock
jle
jno
sub
into
pop
jns
pushf
cmp
pusha
push
loope
push
xor
inc
fucomp
push
adc
int
inc
mov
mov
fimuls
orb
xchg
push
fnsave
es
add
mov
rcrb
lret
sub
pop
mov
pop
push
lea
sbb
and
xchg
jg
and
push
dec
push
pop
in
mov
adc
enter
fldt
sbb
int
mov
inc
add
std
jp
fnstsw
sub
das
dec
mov
xchg
and
sahf
test
mov
xor
or
loopne
jle
xor
jns
dec
mov
or
aas
push
pop
ljmp
enter
mov
add
imul
stos
push
in
mov
enter
and
fiadds
les
and
pop
mov
mov
and
adc
in
insb
mov
sub
cmp
cmp
je
add
add
push
mov
sub
js
or
mov
mov
xor
push
lahf
push
xchg
cmp
pop
lahf
cmp
rcll
popa
xor
aas
pop
mov
loope
scas
js
inc
sahf
cmpsb
pop
outsl
gs
iret
rcr
xor
sub
lahf
addps
addr16
test
rcr
sub
aad
dec
stos
jae
inc
leave
outsb
sub
or
push
push
stos
sub
add
mov
int3
pop
push
sbb
add
lods
cmp
mov
push
ret
arpl
pop
fists
jno
xor
and
mov
movsb
pop
mov
sbbb
gs
adc
inc
push
xor
sub
sbb
push
push
pop
and
pushl
out
jl
loop
push
into
jge
test
shlb
outsb
sub
adc
mov
pop
jmp
sbb
adc
mov
cmp
or
cmpsb
repz
out
adc
xchg
jle
into
lcall
out
mov
imul
inc
jnp
rorb
test
jge
addr16
jne
adc
xor
pop
popf
sub
sbb
ljmp
cltd
push
mov
sub
cmovo
mov
xchg
test
lcall
push
push
push
xor
inc
daa
push
test
rorl
and
add
inc
insl
movsl
adc
pop
push
in
fdivrp
push
dec
mov
mov
mov
insl
mov
adc
mov
test
int3
lds
shll
scas
lock
mov
pop
out
mov
jp
icebp
jg
cwtl
nop
cmpsl
xchg
cmp
test
adc
sub
int3
cmc
lret
cld
cmpsl
fstl
rorl
mov
icebp
mov
add
adc
loope
sbb
fidivs
imul
idivl
lcall
xor
ljmp
adc
and
movsl
stos
push
fsts
cmc
pusha
inc
mov
bound
sti
add
inc
fistps
cmp
dec
test
mov
jne
lret
or
test
add
sub
addl
movsl
ret
lcall
mov
jbe
pop
subl
adcl
jg
lahf
pop
sbb
push
int3
lret
std
insl
lcall
gs
pop
loop
push
bound
mov
lea
test
dec
jns
xchg
int
stos
mov
idivl
lahf
aad
pop
cmp
dec
and
jg
sbb
or
push
test
aam
mov
xor
or
or
add
mov
loop
imul
mov
pop
cmp
mov
pop
cmpsl
aas
cmp
in
push
arpl
scas
gs
jnp
aas
sarl
je
shlb
inc
cmpl
jo
push
xor
dec
xchg
gs
cmp
sub
cmp
or
fbld
ss
xchg
aad
xor
dec
or
cmpsb
cmp
fwait
and
movsl
flds
cmp
hlt
jb
jmp
repz
mov
in
or
stos
cmovns
icebp
push
lret
test
add
psubsw
outsl
xchg
lahf
cli
inc
aaa
ficoml
mov
fisubrs
fs
and
sbb
bound
test
test
std
pop
sarl
movsl
ds
daa
push
out
ss
xor
fnstenv
es
cwtl
test
mov
adc
mov
add
out
mov
test
sub
movsl
lret
or
push
push
jns
cmp
xchg
pop
out
mov
shrb
inc
adc
xchg
push
stc
xor
jne
sbb
push
inc
adc
mov
pusha
outsl
imul
mov
sbb
push
mov
lea
sub
outsl
xor
jbe
test
insb
jnp
mov
push
pop
and
add
fs
dec
mov
mov
jo
test
ljmp
shrb
cmp
stos
cli
data16
pop
mov
mov
roll
jmp
ficompl
ljmp
in
bound
sti
mov
add
cmp
pop
popa
mov
sbb
adc
inc
adc
sub
call
sti
iret
cmp
mov
adc
and
push
add
pop
push
jmp
xor
pusha
sbb
mov
rol
je
add
xor
loop
mov
jnp
sahf
push
and
lds
or
leave
lcall
xchg
jo
test
outsb
or
das
in
pop
dec
xchg
xor
leave
mov
mov
arpl
pop
rcr
push
push
mull
scas
mov
popa
mov
inc
jne
inc
pop
inc
inc
adc
mov
aaa
jle
leave
dec
jle
clc
xor
xor
sub
mov
mov
xchg
adc
lods
adc
pop
xor
pop
mov
xchg
cmpsl
ret
dec
fstps
xlat
pop
repnz
gs
xor
pop
xlat
sti
push
mov
pop
sub
jbe
mov
mov
push
imul
cmpsb
push
and
xchg
imul
inc
fs
mov
xchg
enter
pusha
adc
lods
and
mov
dec
xchg
loope
out
fs
ss
fstpl
ss
fcmovnu
dec
jno
popf
mov
repnz
sub
pop
cmpb
int
or
lahf
js
int
pop
mov
mov
std
pop
xor
push
lock
sub
jae
or
cltd
pop
loopne
rcrl
scas
stos
mov
cmp
xlat
std
out
or
bnd
mov
mov
lods
xor
imul
cli
pop
out
outsb
mov
gs
add
movsb
sbb
shlb
inc
xchg
xor
push
outsl
ja
mov
fisubrs
jp
push
inc
ljmp
rcrb
xchg
cli
jbe
mov
rol
das
test
cvttps2pi
jno
fiadds
les
sbb
jecxz
add
jne
push
cmp
xorb
mov
push
mov
push
ja
loop
icebp
xchg
jmp
pop
pop
xchg
and
cwtl
es
cltd
test
jl
arpl
loopne
push
scas
sbb
add
xchg
cmp
or
push
sbb
add
js
adc
test
push
rsqrtps
push
sbbb
mov
sub
sbb
leave
stc
inc
mov
lret
cltd
jae
fistpll
ss
push
xchg
cmp
lahf
ret
inc
xor
xchg
pushl
imul
mov
sub
push
xor
jb
push
lods
in
lahf
push
sbb
lret
sub
jl
jns
jp
pusha
push
and
aaa
and
fisubrl
jns
rcr
fs
adc
jmp
mulb
jp
insb
jo
mov
pop
sbb
mov
adc
mov
ds
dec
pop
rcrl
lret
cmp
pop
cmpsl
dec
icebp
gs
pop
scas
sub
pop
mov
jno
sbb
sub
sub
xchg
insb
ficoml
pop
hlt
xchg
pop
pusha
lahf
lds
lods
adc
cmp
push
mov
inc
inc
pop
adc
push
xor
sbb
xchg
ds
dec
xchg
es
add
pop
sub
push
loop
pop
pushf
lret
adc
xchg
ja
test
pop
es
inc
dec
addr16
mov
scas
add
push
push
mov
mov
scas
mov
int
pop
mov
popf
sbb
xor
and
sbb
iret
adc
cwtl
jl
push
fidivrl
stc
test
push
fcompl
scas
cmp
sahf
mov
shrl
mov
lea
sbb
stc
jns
dec
mov
pop
mov
mov
xchg
push
and
mov
pusha
fdivrp
push
add
sbb
dec
sbb
push
jnp
sar
adc
or
or
lret
cmovns
fnstsw
push
sbb
pop
jae
jle
das
fldcw
sbb
sbb
aad
daa
inc
push
cmpsl
pop
popf
inc
lret
enter
jecxz
jmp
mov
mov
sbb
sub
jno
in
push
add
mov
test
icebp
sub
pushf
and
add
jnp
sti
jge
mov
clc
movsl
sbb
cmp
jae
xchg
mov
fistl
fidivl
test
push
dec
inc
adc
popa
enter
rcll
lods
cmp
daa
adc
mov
dec
lods
arpl
dec
mov
bound
lahf
icebp
add
jl
mov
mov
je
inc
jns
adc
adc
sub
cmp
pop
mov
push
xor
ss
sbb
jecxz
mov
sub
push
cli
loop
in
dec
addb
sub
popa
clc
adc
hlt
dec
mov
xchg
das
cmp
cmp
cmp
popf
call
inc
es
mov
fisubrs
pop
xor
jmp
and
jnp
pop
sub
lods
lret
test
cmp
gs
adc
cli
xor
mov
aaa
out
push
stos
jmp
ljmp
jb,pn
cmpsl
in
lock
adc
mov
pop
sbb
hlt
movlps
mov
xlat
shlb
ds
mov
mov
mov
pushf
or
test
movaps
and
mov
push
jmp
mov
mov
xor
into
stc
dec
xor
adc
cmp
and
add
sub
mov
je
inc
scas
nop
and
sbb
jns
mov
sub
movsl
ret
adc
ficomps
mov
mov
or
cmpsl
xchg
sbb
jns
into
push
aad
js
jmp
out
sub
pop
lds
rcrb
divb
xor
dec
in
jno
aad
pop
sbb
lret
inc
hlt
jge
jmp
cmp
sub
cmp
xor
mov
in
scas
js
ss
out
stc
fildll
add
mov
mov
push
cli
das
jmp
test
adc
adcb
pop
daa
xlat
fldt
fidivrl
xor
sbb
push
mov
mov
rorb
cmp
dec
mov
cmpsl
xor
jmp
std
enter
das
pop
or
jae
mov
push
es
test
mov
test
mov
aam
aam
push
js
and
jecxz
add
mov
gs
pusha
mov
pop
lret
xor
sbb
call
orl
js
sub
mov
in
push
imul
lret
jle
sbb
rcl
frstor
cmpsl
or
xor
xor
enter
std
adc
pop
mov
mov
ds
rcr
inc
mov
in
fcos
jmp
xlat
ret
sbb
xchg
sbb
ljmp
mov
push
adc
and
popf
sbb
dec
push
cmp
es
orl
jno
jb
aas
pusha
fwait
rep
xor
and
and
movsb
adc
mov
adc
xchg
int
push
sahf
mov
jge
xor
aaa
mov
xchg
or
jmp
and
lret
pop
pop
sub
nop
mov
pop
mov
into
add
cmp
ds
in
cld
lahf
cs
adc
xchg
loop
fisubrs
das
mov
mov
push
inc
sub
lahf
push
imul
gs
pop
test
pop
icebp
cmpb
lods
aad
loopne
leave
mov
adc
push
push
lahf
pushf
shrb
xchg
mov
and
pop
loop
push
sub
lods
stos
pusha
lret
push
ljmp
lea
test
push
dec
cwtl
sbb
sub
push
shlb
jae
push
or
das
add
loopne
xor
sahf
push
stos
outsb
xor
lods
lds
xor
or
mov
movsb
movsl
or
and
insl
push
pop
ss
sahf
imul
aaa
data16
adc
test
popa
ljmp
fldl
mov
or
xlat
inc
mov
mov
add
xchg
testb
pop
or
popf
mov
mov
push
push
rorb
xchg
push
inc
jmp
sahf
js
lea
adc
mov
mov
cmc
adc
inc
pop
orl
pusha
fstpt
ret
out
dec
and
imul
fiadds
mov
sbb
sbb
sub
mov
xor
sbb
add
dec
sbb
ds
out
jg
sub
outsb
fwait
and
into
fsubr
iret
sti
fld1
cmpsl
adc
ljmp
int3
dec
or
and
jnp
mov
jns
dec
icebp
or
push
mov
mov
jne
insb
aaa
sbb
add
mov
js
push
fwait
lret
fs
inc
or
or
cmp
or
pushf
lret
xor
aad
mov
mov
xchg
sti
jno
xchg
fdivrs
fnstenv
pop
pop
mov
dec
mov
mov
pushf
push
pop
mov
shl
das
aas
push
cmp
jns
dec
dec
xor
mov
push
cld
jmp
pop
sbbb
xlat
idivl
sbb
loope
add
pusha
cmovnp
xor
xchg
mov
mov
incl
in
fs
out
pop
sbb
aaa
mov
bound
push
cmpsl
sub
or
sbb
enter
mov
iret
push
stos
movsl
std
or
xchg
jbe
negb
xor
mov
and
js
lret
or
mov
jae
test
test
js
fwait
mov
out
insl
dec
mov
cld
fwait
aas
dec
xor
pop
xor
cwtl
dec
lahf
je
xlat
lahf
jae
add
push
mov
pusha
adc
ds
xchg
mov
push
inc
ss
adc
pop
cld
cli
lret
aam
icebp
sbb
inc
adc
cmpsl
addr16
push
xor
ja
inc
add
pop
ds
shrl
sbb
add
or
ss
in
popa
mov
out
push
cmp
sub
pop
cmp
sbb
negl
bound
pop
push
inc
or
outsl
pop
xor
js
fimull
dec
push
mov
enter
jno
inc
fwait
scas
insl
lcall
push
repnz
int3
push
mov
push
and
stos
pop
adc
jmp
call
sbb
aas
out
out
imul
in
pushf
adc
iret
ss
ljmp
jnp,pn
xor
out
outsb
push
in
inc
fldenv
cmpsl
push
sahf
das
cmp
mov
xor
loop
hlt
xor
rcr
arpl
sarl
les
stos
lret
sbb
jp
xchg
jp
ret
jp
xchg
cmp
loopne
out
fldt
mov
xor
mov
imul
sahf
repnz
adc
xchg
call
xchg
mov
sbb
cmp
addr16
dec
pusha
pop
cmpsl
fdivl
enter
mov
jmp
sub
sub
pop
xor
fcmove
jmp
and
enter
push
scas
adc
shl
sub
push
mov
cmp
inc
loopne
inc
rolb
or
out
push
or
inc
scas
mov
push
mov
std
lret
sub
mov
ret
push
adc
pop
mov
and
jns
adc
push
jle
sar
out
or
mov
xchg
roll
or
or
pop
xchg
nop
sub
push
vpaddd
jnp
push
mov
cltd
and
pop
fidivrs
out
pusha
push
pop
sbb
dec
sub
cs
xchg
mov
jl
fcoml
dec
std
hlt
add
je
xor
pop
sbb
in
pop
int
push
divb
adc
xchg
out
push
dec
sbb
push
add
icebp
pop
push
jns
rcll
gs
inc
cmp
pushf
mov
cmpb
xchg
cmp
lock
push
mov
mov
mov
jne
jne
mov
es
add
jo
test
push
cmpsl
inc
push
shrb
mov
push
in
fildll
stc
sbb
mov
dec
imul
push
inc
pop
lret
cltd
scas
lret
add
mov
icebp
mov
in
lea
mov
sbb
or
js
mov
dec
in
call
inc
pop
xor
xor
mov
fidivs
dec
jmp
out
mov
inc
jno
mov
or
subb
push
jnp
incl
sub
aad
fxch
in
int3
in
jmp
rcrl
pop
lods
xchg
orb
mov
cmpxchg
fnstcw
dec
push
push
inc
xchg
push
push
add
adc
subl
jge
outsb
lods
imul
inc
mov
mov
out
aad
mov
pop
mov
xchg
dec
jmp
adc
cmp
add
pop
inc
cmpsb
inc
mov
and
lods
pop
dec
xor
xor
sti
popa
or
test
xchg
push
xor
xor
dec
pop
pop
das
cmp
xor
add
push
sub
adc
push
add
test
push
loopne
inc
mov
ss
andl
inc
rcll
loop
ss
addr16
mov
dec
jecxz
mov
push
test
xlat
push
scas
sbb
add
icebp
mov
mov
test
clc
jcxz
xor
push
jb,pt
js
xchg
mov
gs
std
push
dec
sbb
outsl
jne
push
pop
cmp
mov
pushf
sub
mov
sbb
ret
pop
jle
test
daa
rcrl
stc
push
adc
sar
mov
fnstsw
cli
add
fistl
cmpb
lods
mov
js
gs
mov
push
pop
mov
ret
sti
sbb
ja
and
mov
mov
shll
push
mov
test
lahf
and
mov
ret
subb
sub
ss
pop
icebp
ficompl
pop
push
pop
pusha
mov
out
xlat
stos
pop
mov
push
sub
cmp
push
or
xor
out
mov
mov
mov
mov
push
dec
mov
inc
std
push
hlt
push
pop
sbb
loope
xor
in
divl
lahf
loopne
shrb
jl
jmp
xchg
stc
subb
lcall
repz
xor
fucomip
adc
and
inc
dec
sub
jg
orl
fcoml
xchg
and
shlb
xor
sbb
frstor
adc
push
stos
pop
mov
shr
insl
call
xor
mov
pop
sub
pop
dec
pop
adc
ja
push
mov
mov
inc
cmp
or
xchg
push
jecxz
sbb
dec
sahf
movsl
adc
stos
stos
mov
xchg
dec
push
mov
pop
enter
dec
inc
sbb
and
lea
mov
les
mov
notl
mov
hlt
push
adc
mov
mov
fs
cmp
xchg
aaa
cmp
rcrb
je
inc
stc
pop
les
ds
aam
mov
dec
mov
sar
sub
pop
mov
xor
iret
adc
sbb
dec
pop
push
cmp
je
sub
mov
imul
scas
mov
xchg
out
subl
in
pop
and
adc
sbb
pop
punpcklwd
imul
je
sub
cmp
jns
out
ficomps
adc
mov
adc
add
push
shr
sbb
hlt
leave
add
in
lods
shll
jmp
arpl
jecxz
push
xor
or
sub
cld
push
push
sub
cmpsb
mov
inc
out
cwtl
aas
pop
dec
arpl
cmp
mov
lahf
jle
test
sbb
or
jl
in
push
and
pop
scas
addl
loop
lret
xchg
mov
repz
test
dec
add
pop
lds
ja
mov
nop
push
sub
dec
cmpsl
sub
mov
ret
sbb
cld
cmpsb
clc
sti
dec
mov
out
pop
cli
repz
sbb
and
vmwrite
das
in
sbb
lcall
jno
lahf
or
in
push
stc
jns
adc
sbb
cltd
jb
ret
jae
aas
sub
xor
ljmp
push
pop
mov
mul
rclb
je
mov
fmulp
sub
push
sti
mov
push
dec
adc
pop
jecxz
cmp
cmpsl
sbb
ja
xchg
arpl
loop
mov
sahf
loop
xor
dec
xorl
add
cli
sbb
ss
xor
inc
dec
mov
and
out
fs
cmpsl
adc
add
or
push
stos
cmpb
gs
mov
repz
cmc
xchg
cli
jb
inc
add
inc
xlat
dec
pop
cltd
or
mov
das
imul
mov
adc
mov
movsl
push
mov
lret
stos
gs
mov
cmp
mov
scas
adc
mov
xor
xchg
xchg
pop
dec
ja
adc
popa
hlt
shl
cmp
repnz
fcomps
pop
mov
mov
rcrl
test
aaa
push
and
dec
mov
inc
rclb
sub
add
leave
icebp
inc
fidivs
sub
pop
outsb
cmp
fs
lods
pusha
insb
push
xor
inc
sub
repz
inc
ljmp
fldt
test
xchg
in
call
repz
cmp
sub
stos
dec
fidivs
sbb
shll
cmp
movsl
pop
scas
push
clc
sub
gs
das
cld
enter
fidivrs
lret
stos
int
ret
fwait
repnz
add
mov
subl
inc
imulb
add
es
pop
in
call
mov
dec
push
in
pop
int3
aas
jmp
mov
fwait
clc
add
lahf
mov
push
movl
mov
cmp
dec
xchg
jo
or
sub
adc
loope
mov
sub
adc
pop
mov
lock
inc
cld
dec
cmc
cmp
pop
mov
xor
aas
push
scas
jne
f2xm1
stc
pop
mov
dec
add
ds
mov
mov
pop
push
scas
pop
jle
stc
sub
stos
fcmovnu
and
xchg
imul
sbb
or
lea
xchg
push
sub
dec
fldl
iret
xlat
xchg
inc
mov
insb
rorl
test
add
testb
jae
pop
popf
adc
insb
mov
jg
faddl
pop
stc
cli
nop
ret
in
das
sbb
mov
pop
push
push
push
push
mov
scas
pop
lret
rcll
mov
popf
pusha
xchg
inc
sub
call
cwtl
lods
movsb
jns
pusha
out
cmpsl
imul
mov
xchg
sub
cltd
xor
fs
xchg
fstenv
dec
push
cmpsb
sub
fisubrl
push
lock
xchg
jge
lods
icebp
repz
aam
cs
jle
add
jb
push
mov
cltd
nop
repnz
cs
dec
or
fldenv
inc
mov
aaa
test
divb
lahf
xor
mov
rorb
pop
mov
jns
lcall
repnz
fldl
lods
es
fwait
inc
pop
mov
push
out
subl
and
sbb
mov
fidivrl
pop
push
fimuls
pop
scas
insl
mov
jmp
imul
lret
sub
loope
ret
lods
dec
mov
mov
sub
and
cmp
int
shrb
xchg
fwait
insl
mov
sbb
lods
popa
xchg
lods
mov
mov
pop
out
jno
outsb
adc
xchg
inc
icebp
sbb
push
mov
insl
xor
ljmp
out
out
jp
ljmp
pop
xor
fnstenv
aad
mov
add
push
cmp
xchg
shlb
mov
xchg
fs
call
add
mov
pop
mov
jns
mov
aas
mov
cmp
jb
lcall
cmc
add
mov
or
pop
and
mov
mov
push
ret
das
jne
or
test
test
in
or
adc
xor
add
mov
jb
sub
mov
jle
mov
in
adc
dec
outsb
mov
call
push
jae
fimull
mov
push
fs
test
loopne
pop
adc
ds
jnp
lds
in
mov
test
sbb
ret
fwait
and
mov
mov
jmp
sub
mov
push
in
daa
rclb
outsb
add
in
add
or
das
xlat
int
stos
mov
cld
scas
das
hlt
out
pop
mov
xchg
sub
gs
hlt
or
mov
add
mov
xchg
dec
mov
xorl
in
into
dec
add
shl
dec
dec
ret
inc
mov
rcrb
icebp
cwtl
test
data16
xchg
push
stos
mov
dec
sub
addr16
ds
push
add
ja
sub
xchg
pop
push
xor
pop
sbb
or
std
add
push
sti
xchg
mov
xor
aad
lea
xor
hlt
imul
pop
adc
sbb
dec
mov
xchg
jp
xor
mov
test
mov
loope
push
mov
icebp
shr
test
es
pop
jge
adc
cmpsb
fildl
pop
mov
jns
popf
sub
orl
pop
imul
dec
mov
adc
movsl
stos
mov
lods
scas
mov
xor
push
fistpll
pushf
push
lods
sbb
mov
jecxz
cld
icebp
std
jl
gs
imul
mov
cld
sti
gs
inc
jmp
fs
cmc
leave
xchg
pop
int3
mov
add
jl
cmp
mov
movsb
dec
adc
cs
pop
mov
pop
loop
adc
stos
mov
fs
je
cli
fwait
inc
dec
cmp
xchg
enter
pop
xchg
lret
jbe
ret
adc
mov
lea
jne
sbb
fwait
and
insb
jp
dec
push
xor
mov
jg
popf
loopne
aam
cltd
lds
popa
and
and
mov
adc
cwtl
cmp
dec
or
lods
adc
lea
in
fimull
mov
jge
in
pop
adc
adc
push
xchg
iret
sbb
das
cmc
push
jnp
fucomi
mov
adc
popf
cltd
sahf
push
scas
bound
pop
dec
mov
into
lods
shlb
jg
lahf
or
mov
ficompl
push
bnd
sahf
inc
repz
sbb
cltd
push
stos
xchg
mov
rcll
add
lods
mov
fstps
sub
lock
mov
xchg
pop
das
shl
out
cmp
dec
and
or
test
add
arpl
add
pop
fdivrs
in
push
mov
lods
xchg
repnz
or
in
imul
push
adc
sub
iret
hlt
loop
into
jmp
dec
jns
or
fiadds
xor
mov
insl
push
sub
push
sbb
and
pop
ret
loopne
das
adc
stc
das
inc
or
push
sbb
leave
dec
dec
pop
push
insb
jno
bound
mov
mov
leave
jne
or
mov
add
pop
and
movsb
mov
push
jo
fdivl
jnp
stc
sub
insb
fidivl
jl
cmp
push
int
ja
mov
sbb
lret
sbb
dec
push
std
jbe
sbb
mov
cmpsl
sti
dec
je
mov
jecxz
mov
fwait
sub
stc
jns
jb
inc
ljmp
pop
outsb
jnp
mov
sahf
int3
rep
testl
aaa
aad
movsb
dec
xchg
push
sbbb
xchg
mov
fwait
mov
pop
dec
jmp
into
and
aaa
dec
jno
or
and
test
or
cmp
or
adc
mov
cmp
inc
jl
sub
cli
jo
mov
inc
insl
call
popf
dec
or
ljmp
stc
nop
loope
notl
xchg
xor
jnp
mov
lret
in
dec
sahf
xchg
clc
add
js
adc
insl
adc
push
leave
testb
adc
push
xchg
or
adc
subb
ret
pop
lods
sti
mov
mov
push
adc
add
fimuls
mov
xor
lods
ss
fwait
cs
and
jmp
test
push
xchg
jl
xchg
outsb
push
fcmovb
insb
xor
cmp
sbb
ja
sbb
cli
cmp
add
mov
adc
push
add
lret
sbb
xchg
adc
leave
loop
addb
cmp
loope
outsl
or
and
ror
adc
push
mov
push
lahf
loopne
adc
add
xchg
mov
mov
xchg
fisubrl
int
push
cmp
pusha
pushl
cltd
movsb
aad
inc
jle
pop
inc
pop
or
aas
cs
movsl
xchg
push
fwait
add
sarl
push
jl
push
mov
pop
pushf
push
sbb
cmp
mov
rolb
adcb
les
xor
sub
cwtl
add
jno
cmp
fstl
movsb
fcomps
inc
cmp
std
mov
loop
jns
das
cwtl
lahf
aas
lcall
es
adc
adc
jns
pop
jg
pop
add
pop
loope
jbe
jmp
sub
xchg
add
mov
lcall
inc
dec
je
pop
pop
rorb
popf
or
pusha
push
lds
xor
push
int
sbb
pop
mov
dec
adc
loop
push
adc
notb
fisubs
dec
mov
scas
out
push
inc
mov
loop
iret
inc
mov
fildll
repz
xrelease
push
adc
into
lcall
xchg
cmpsl
mov
leave
adc
loop
leave
add
insl
inc
mov
adc
jbe
ja
jecxz
in
or
mov
orb
mov
cmpsl
cmp
jno
sub
popf
and
mov
adc
mov
dec
mov
loop
mov
cmp
popa
or
add
sbb
jl
loope
xor
mov
pop
aam
sbb
lret
xor
adcl
jp
ds
inc
test
adc
imul
xor
xchg
adc
add
lea
or
mov
and
pop
adc
test
lds
rclb
ljmp
mov
xor
mov
xor
das
mov
clc
push
in
dec
popa
push
es
jl
outsl
push
aam
addr16
pop
mov
std
bnd
mov
aaa
add
cmpsl
adc
mov
inc
mov
push
aaa
xchg
test
adc
mov
in
mov
mov
cwtl
ja
popf
fiadds
inc
xchg
pop
sub
xchg
push
or
ds
or
fadds
sub
mov
mov
mov
fs
add
js
lods
adc
sub
lods
mov
cmp
je
sbb
pop
push
mov
push
adc
add
xchg
or
and
jnp
stos
fldl
push
fs
jl
movsb
cmp
xor
stos
aam
loopne
add
fstpt
aaa
jno
in
lret
insb
fidivrl
jl
cltd
inc
test
out
xchg
dec
inc
ds
dec
aam
xchg
sbb
dec
pop
cli
add
stc
es
xor
cmp
jns
div
loopne
xchg
cmp
push
das
jbe
mov
insl
shlw
scas
pop
enter
adc
push
push
add
xor
sbb
push
inc
ffreep
popa
pop
jle
testb
cmc
jge
mov
jp
fsubp
push
sbb
mov
pusha
adc
mov
sub
sub
mov
in
mov
outsl
adc
leave
cli
ficoms
out
rcr
mov
das
jo
jl
pop
or
pop
leave
inc
push
scas
dec
stos
or
cmp
sbb
jecxz
sbb
mov
push
push
jno
ss
insl
push
jns
adc
mov
mov
out
test
dec
bound
sbb
mov
jne
pop
add
mov
jbe
cmp
mov
pop
adc
repnz
fimull
jnp
push
ss
inc
jns,pt
or
xchg
xchg
test
xchg
jmp
jp
rolb
orl
push
mov
push
pushf
adc
xchg
mov
fld
pop
lods
xchg
shl
scas
jl
pop
mov
mov
idiv
pop
add
rep
push
or
xorps
sbb
inc
cs
jns
adc
xor
les
hlt
outsb
leave
mov
loopne
pusha
fsubl
test
mov
sbb
xor
pop
lahf
shrl
pop
cli
mov
cmpsl
sbb
popf
scas
and
xor
push
jb
push
inc
adc
dec
jmp
or
mov
test
push
mov
add
out
add
or
inc
mov
iret
push
mov
fisttpll
dec
pop
xchg
jb
dec
xor
push
pushf
jns
mov
mov
lods
and
iret
mov
andl
inc
nop
push
out
jns
mov
mov
adc
das
fiaddl
cmpl
jne
ss
cmp
jecxz
mov
adc
lret
lock
push
test
sbb
mov
in
repz
int3
neg
mov
adc
ret
jl
sbb
pop
fistpll
stc
cmpsl
xchg
pop
cltd
loope
mov
fst
cs
cmpsb
pop
inc
inc
jle
insb
rorl
das
inc
jno
xchg
in
adc
push
push
dec
mov
mov
jp
popa
pop
sarb
cmp
clc
insl
push
stos
push
outsl
fldt
lahf
loopne
cmpsl
or
ss
cmp
mov
pop
sub
xor
mov
lock
in
je
and
jg
ja
lahf
pusha
frstpm(287
mov
fcompl
mov
divl
push
add
popf
leave
sub
into
cmp
xor
movsl
pop
and
mov
imul
ds
add
cmpsl
mov
sahf
xchg
mov
shll
hlt
test
sbb
test
sarb
cmp
ficomps
movsb
stc
pop
leave
fisttpl
popa
xorl
or
jno
lods
xchg
jmp
xchg
cmp
gs
ljmp
mov
test
addr16
adc
mov
push
inc
test
fs
xchg
imulb
cmp
mov
jmp
mov
data16
test
inc
mov
fistl
inc
imul
out
xchg
sarb
lahf
jno
pop
dec
and
xchg
jbe
sbb
je
adc
and
scas
inc
in
dec
sarl
lahf
fsubrs
and
js
and
jb
mov
cwtl
outsb
lret
daa
lcall
cld
xchg
jo
pusha
mov
mov
mov
sti
cmp
fs
mov
stc
fcoms
pop
leave
rcll
fs
push
bound
mov
jne
mov
pop
mov
push
cltd
frstor
xchg
push
or
cmp
pusha
push
mov
outsb
hlt
test
jge
sbbb
mov
push
dec
cmp
push
cltd
iret
inc
ljmp
jp
xchg
mov
je
push
xor
jno
xchg
add
push
scas
aam
jmp
jle
mov
xor
cld
add
stos
jp
sti
jne
or
xor
ss
faddl
sbb
sub
and
dec
push
push
inc
subl
sub
fucomi
xor
mov
adc
lods
adc
pop
adc
test
mov
sub
cltd
jge
mov
je
inc
sub
pop
addr16
sub
add
in
cmp
pop
jg
aam
in
mov
hlt
test
pop
lcall
xchg
cwtl
lcall
sbb
pop
and
push
xchg
je
pusha
andb
mov
sub
jns
push
mov
or
call
fisubrl
mov
movsb
movsl
mov
push
fwait
or
mov
arpl
pop
rcrl
pop
mov
je
lret
dec
dec
out
or
mov
popf
fsubrl
std
inc
insl
add
xchg
cmpsl
out
cli
je
cs
dec
and
pop
fidivrl
fistps
mov
ret
inc
clc
pop
xchg
lret
or
or
cwtl
gs
mov
xor
aad
icebp
ljmp
push
in
xor
repnz
add
push
add
popf
mov
fucom
jne
loope
enter
jge
or
push
or
push
pop
mov
xchg
movsl
jmp
sbb
adc
jp
sbb
adc
jecxz
fisttpl
sbb
inc
xchg
inc
mov
adc
jl
clc
cmp
out
add
jmp
sbb
pop
and
into
or
pop
js
cmc
cmpsb
sbb
jo
pop
mov
dec
or
test
sbb
dec
mov
cld
inc
sub
enter
loopne
outsl
pop
rcrl
mov
or
xchg
sbb
adc
adc
cltd
push
pop
daa
shlb
sbb
or
pop
xor
mov
int
fwait
pop
dec
in
mov
dec
mov
insb
cwtl
mov
push
and
fmull
jp
lods
mov
push
jns
lret
mov
sbb
popa
xchg
mov
adc
pop
cmp
add
jge
xchg
pop
cmp
ss
dec
pop
out
sub
cmp
lahf
adc
mov
aam
mov
mov
mov
int
ret
mov
fcomps
dec
mov
hlt
jae
inc
dec
cmp
mov
in
sbb
xchg
movsb
incl
sti
mul
pop
mov
mov
ds
int3
or
adc
pop
jns
shl
and
xchg
adc
adc
pop
fnstcw
xor
in
adc
jne
push
pushf
stos
mov
rorb
imul
divl
xchg
les
popa
add
aas
mov
loope
cmp
xor
and
push
jb
xchg
or
pop
lret
xchg
stos
sub
inc
mov
jno
xchg
push
push
mov
mov
cmp
jne
cltd
pop
push
mov
test
dec
add
or
mov
add
fnsave
and
or
popa
mov
lods
xchg
and
inc
mov
test
jno
test
xchg
xchg
mov
adc
das
lods
adc
stc
mov
sar
push
in
jg
cwtl
or
stos
mov
adc
jo
dec
cli
outsb
mov
cmp
push
jno
and
cli
sahf
add
fiaddl
cmp
mov
xchg
cmp
hlt
rorb
xor
test
sbb
push
pop
aam
cmp
dec
test
jo
xchg
popf
xchg
adc
imul
stos
push
push
js
jp,pn
dec
sbb
lahf
mov
dec
mov
mov
push
xor
lcall
push
cmp
outsl
cmp
push
testb
xorl
ljmp
ds
sbb
mov
xchg
enter
add
pop
decb
ds
mov
cmp
stos
in
sbb
dec
aas
dec
mov
pop
mov
lock
addl
add
std
mov
pop
mov
pusha
mov
push
sbb
jo
mov
jl
dec
mov
add
mov
scas
add
scas
out
aad
mov
pop
pop
mov
dec
push
test
ja
add
loop
lcall
push
sub
sbb
jns
push
in
add
xchg
mov
sub
test
hlt
cmpsl
mov
pushf
sbb
push
add
dec
js
mov
and
or
cltd
pop
xchg
jae
ret
add
jne
dec
jecxz
jno
pop
pop
into
pop
cli
jno
rol
aas
jne
dec
sbb
push
outsb
leave
testl
or
sub
and
push
jg
jns
mov
sbb
dec
fildl
fs
jmp
pop
jp
mov
mov
sub
jae
stos
jae
xor
mov
jl
xor
xchg
mov
scas
cmp
push
cmp
push
pop
mov
daa
push
or
xchg
fmulp
xor
adc
adc
lahf
pop
aad
mov
sti
mov
mov
cmp
push
mov
sti
mov
ret
adc
adc
sbb
push
sahf
xchg
sbb
push
add
inc
jns
push
xor
mov
adc
add
xor
data16
loop
inc
shlb
xchg
push
push
hlt
repnz
pop
sti
clc
inc
enter
mov
push
test
add
movsb
pop
lods
cwtl
testl
push
xor
cmpsl
pop
pop
data16
std
call
jmp
adc
adc
pop
xchg
push
push
stc
push
jmp
icebp
pop
ret
leave
mov
mov
ds
jp
popf
adc
fcmovbe
popf
sub
jg
push
ficomps
rcr
adc
cwtl
ret
imul
cmpsl
push
leave
lret
mov
push
xchg
lods
sub
rclb
push
cmp
fisubrl
jb
fistl
lret
out
adc
mov
sbb
rolb
loop
mov
push
pushf
test
mul
mov
out
jae
jp
jb
nop
and
cmp
push
rol
adc
ss
stc
pop
loop
lds
sub
dec
sub
fcmovu
xor
pop
sbb
xorl
inc
mov
cmp
push
aad
rorb
out
pusha
sub
std
xchg
push
mov
push
sub
icebp
leave
sbb
dec
sub
pop
push
pop
stos
mov
ret
jl
mov
popf
lcall
cmp
or
dec
mov
lahf
sub
jmp
push
pop
loop
mov
rorl
es
aaa
stos
cmp
inc
jbe
xor
mov
rcll
mov
shll
fwait
gs
dec
mov
in
out
pop
sub
lock
cli
test
adcb
jno
aas
cmp
push
mov
add
mov
test
mov
outsb
loop
or
cs
or
popa
in
mov
mov
loop
cmpsl
xchg
aaa
pop
cmpb
pop
jno
mov
or
push
sbb
dec
rcr
int
fsubrs
xor
loope
sbb
lret
and
incl
mov
test
dec
mov
cs
mov
popf
test
aaa
inc
fwait
loop
cmp
xchg
insl
cmpsl
imul
mov
jae
roll
cmp
mov
mov
push
clc
dec
mov
mov
in
sbb
adc
mov
sbb
sub
js
imul
pop
push
fdivp
push
pop
jne
sub
gs
lret
popf
filds
jle
adc
jecxz
push
adcl
lock
push
cmp
or
mov
and
pop
sbb
lcall
fs
xchg
pop
out
cmc
mov
mov
divb
inc
in
push
and
sbb
cmc
int
fisubl
cmpsl
mov
add
sub
das
inc
outsl
adc
mov
and
cs
es
mov
std
pop
xchg
rorb
movsl
mov
in
jns
jmp
lods
sub
xor
dec
cmp
dec
lods
insb
push
iret
mov
mov
imul
sub
pusha
aaa
mov
push
filds
out
mov
into
xchg
jge
sbb
ss
inc
or
test
insb
jno
jp
pop
push
push
jb
faddp
dec
cmc
bound
mov
in
sbb
mov
lahf
sbb
movsb
lahf
jle
stos
push
xor
and
and
rcrl
jno
mov
adc
pop
and
sub
test
in
xor
cmp
stos
jmp
dec
lods
sub
jmp
aaa
push
ds
pop
pop
gs
dec
jno
push
push
leave
mov
jnp
add
mov
andb
outsb
stos
test
sbbb
rol
insl
jo
std
sub
pop
pop
popa
jmp
mov
or
pop
cwtl
jle
adc
mov
mov
sub
icebp
test
loopne
lret
push
lods
ret
jne
movsl
pusha
add
inc
cltd
mov
and
push
jnp
pop
insl
ja
dec
pop
push
push
mov
mov
stc
aam
mov
loopne
xchg
ss
int3
mov
subl
jo
pop
cmp
push
or
xor
bound
push
jmp
fcoml
jl
sub
cmp
gs
push
adc
pop
mov
ljmp
xor
adc
pop
pop
xor
pop
xor
and
bound
leave
mov
stos
xchg
andl
cmp
mov
int
lcall
js
dec
pop
mov
ret
pushl
cli
leave
mov
or
add
mov
call
adc
xchg
pop
push
dec
scas
cld
push
fcompl
jmp
fcoms
repnz
push
dec
stos
pop
cwtl
cmp
out
fldt
jmp
adc
gs
into
jns
push
scas
cwtl
jae
pop
sar
sub
mov
cld
push
hlt
cmp
divl
enter
push
rcrb
insl
or
test
adc
aas
mov
lahf
test
test
loop
adc
fidivrl
xor
fidivs
pusha
mov
sub
or
sbb
das
test
and
ss
sbb
jo
push
test
mov
pop
fldcw
dec
xor
insl
insb
adc
lods
dec
in
dec
jge
out
add
dec
push
je
adc
pushf
shll
and
xchg
dec
jmp
ret
out
and
xor
push
pop
and
inc
inc
scas
jmp
dec
inc
xchg
sahf
jl
add
das
dec
fsubr
adc
in
das
push
xlat
xor
mov
jmp
or
jge
sub
int
dec
fisubrs
xchg
fdivrs
pusha
xchg
pop
adc
jg
mov
dec
push
repz
mov
cwtl
inc
dec
xorb
rclb
dec
mov
jg
pop
add
xor
ljmp
mov
adc
dec
movsl
sub
pop
ljmp
add
pop
push
stos
xor
xchg
mov
jbe
xchg
cmp
cld
mov
outsl
pop
out
xor
pop
hlt
popf
test
ficomps
or
sbb
cmp
sbb
loope
nop
cmp
sub
mov
lret
and
in
mov
nop
mov
sub
pop
fdivp
pop
mov
sbb
sub
es
ds
mov
movsl
fcoms
cmp
mov
movsb
or
test
xchg
adc
scas
repnz
shlb
mov
pop
cld
js
push
ret
xchg
adc
enter
data16
mov
lods
fldl2e
and
mov
stc
lods
sub
ret
sbb
mov
xchg
jnp
rcl
ja
sbb
sbb
ljmp
pop
cltd
mov
call
pushf
adc
shl
test
adc
mov
roll
test
dec
dec
lea
and
nop
in
in
rcr
jge
das
adc
fwait
outsb
leave
add
lcall
and
lods
loop
mov
push
or
inc
stos
cmp
icebp
dec
lods
and
xor
test
xchg
pushl
hlt
lcall
xchg
fadd
pop
jns
mov
aam
adc
push
xor
fstpt
jmp
add
std
bound
mov
mov
repz
push
shlb
push
mov
mov
or
lret
jno
mov
icebp
mov
jb
shrl
lock
insb
inc
cmp
adc
push
aam
mov
cld
fdiv
mov
pop
cmp
in
adc
push
int
int
mov
xor
mov
sbb
mov
bound
insl
push
fdiv
stos
dec
adc
popa
lret
mov
sbb
rclb
cmp
negl
jle
jge
jle
test
popf
das
inc
jne
xorl
nop
mov
popa
lahf
gs
or
or
pop
push
xor
mov
fldl
add
rcll
cs
xchg
push
loope
pushf
cmp
sbb
jns
push
mov
ret
sub
mov
loop
ret
mov
cmpsl
pop
loop
pop
xchg
test
loopne
scas
push
and
subb
repnz
dec
dec
mov
dec
cwtl
icebp
test
pop
jne
leave
push
mov
xor
mov
jge
push
xor
adc
xchg
mov
ss
xchg
adc
fs
pop
xor
jo
nop
jle
js
adc
loopne
mov
mov
fimuls
in
push
and
adc
movsb
pop
push
or
ljmp
push
jbe
mov
daa
xor
dec
sub
test
push
mov
test
test
xchg
xchg
jno
dec
cmp
in
mov
pop
stc
adc
dec
hlt
sbb
xchg
sbb
mov
mov
ret
dec
out
pop
mov
jecxz
insl
orb
lret
std
pop
cmp
or
xchg
cmp
nop
testb
jo
mov
inc
xchg
in
push
sbb
push
mov
lea
mov
add
movsl
mov
iret
movsb
jno
lock
dec
xchg
sahf
lret
std
xor
cld
js
or
sbb
add
jle
or
pushf
fs
mov
or
xor
cs
idivl
xor
cmp
stos
mov
pop
xchg
sbb
bound
add
in
mov
lock
add
xchg
scas
mov
rolb
and
jno
fbstp
popa
nop
sub
pop
clc
cli
or
adc
mov
or
sar
sub
popa
fs
movsl
mov
push
mov
lret
or
loope
dec
mov
push
mov
movsb
sbb
cs
xchg
orb
cmp
fsubr
fidivs
idiv
mov
xchg
push
adc
lret
jbe
test
push
or
lret
pop
cmpsb
addr16
or
pop
scas
mov
mov
adc
shr
pop
mov
dec
insl
push
popf
adc
lods
push
mov
lock
ficompl
in
rolb
sbb
sbb
dec
mov
sbb
xor
add
imul
xor
pop
jns
xchg
add
pusha
sub
mov
jl
test
fs
out
push
dec
test
enter
in
jae
lret
mov
test
mov
arpl
jmp
fs
mov
mov
leave
movsb
push
nop
mov
sub
lds
mov
leave
dec
std
and
mov
sbb
dec
sub
pop
call
push
scas
jns
add
adc
icebp
call
ds
mov
mov
mov
ja
xor
or
fidivl
push
adc
sti
mov
sbb
mov
jmp
xor
mov
cmpsl
jl
sarl
insl
adc
jmp
das
add
add
mov
pusha
addps
sub
mov
cmpsb
sbb
xor
add
movsb
inc
push
shrl
cmpsl
nop
add
fdivl
jo
ljmp
arpl
rcrb
mov
pusha
xor
cmp
adc
lahf
test
mov
jg
pop
mov
je
mov
push
push
fs
cmpl
shll
xchg
sub
imul
mov
pop
lret
pop
paddd
sarl
dec
sar
xchg
cmp
lods
das
push
pushf
sbb
stos
imul
cmovne
xchg
leave
dec
push
pop
ret
xorb
cli
imull
push
sbb
pop
mov
jne
xchg
sbb
sbb
or
leave
mov
xchg
pop
stos
mov
repnz
loope
sub
mov
out
dec
adc
sbb
xlat
cmp
adc
jl
xchg
cmp
and
jl
cld
jno
into
pop
and
mov
daa
pop
dec
xchg
cli
or
cmp
pop
pop
fs
add
ljmp
xchg
ss
scas
mov
jge
out
mov
mov
push
push
xchg
shl
mov
mov
pop
sbb
loopne
aaa
ljmp
and
add
sbb
stc
pop
sub
sbb
data16
mov
cmp
je
or
mov
paddsb
sub
mov
sub
loopne
mov
push
cmp
pop
xlat
adc
shlb
sbb
sub
mov
mov
pushl
fs
lret
cmpsb
pop
shl
add
insl
pushf
xor
aas
adc
repz
aaa
clc
lcall
xor
ret
fwait
xor
and
int3
es
stos
cmp
adc
sbb
icebp
mov
fldcw
cwtl
push
mov
cmp
data16
outsb
popa
loop
jecxz
xchg
mov
out
adc
loopne
out
inc
or
add
iret
imul
adc
xchg
loopne
xor
fiaddl
mov
add
lret
push
loop
icebp
add
inc
cmp
lahf
gs
fbld
les
and
shlb
pop
rcrl
mov
mov
rol
loopne
dec
xor
pusha
push
add
test
mov
jns
fs
icebp
pop
xor
pop
movsl
sub
add
nop
push
xor
lock
sbb
push
dec
jne
cs
inc
pop
orl
repz
xlat
shrb
xchg
les
mov
mov
js
shlb
jl
addr16
xor
jl
mov
vmovdqu
xchg
pop
iret
mov
es
adc
mov
out
je
and
mov
adc
mov
mov
pop
push
lret
imul
loope
mov
stos
adc
bound
push
in
add
iret
pandn
inc
mov
xchg
pop
mov
or
mov
dec
cli
add
jmp
add
stc
int3
sub
or
nop
lds
cmp
push
mov
or
adc
push
and
or
pop
mov
xor
gs
ss
in
pop
enter
lahf
dec
repnz
mov
in
xor
dec
xchg
mov
inc
lahf
or
test
sbb
add
ljmp
leave
popf
movsl
int
or
in
leave
dec
into
fiadds
out
lock
incl
jne
xor
inc
or
mov
fnstsw
cld
sbb
movsb
in
cmp
cmp
push
mov
aad
fwait
loop
xor
mov
imul
mov
sbb
fcmovbe
xchg
xchg
fwait
inc
das
mov
sbb
insl
mov
das
pop
push
jmp
dec
sbb
mov
das
mov
aam
pop
test
hlt
repnz
xchg
push
dec
mov
add
push
push
test
gs
fcoml
pop
int
nop
rclb
mov
jp
pop
dec
fdivl
fidivrs
sbb
mov
xor
lods
mov
add
cmc
inc
movsb
cmp
pop
rcll
fnstsw
rclb
shl
cs
pop
icebp
mov
outsb
mov
gs
add
xchg
icebp
dec
out
mov
sarb
sbb
fadd
mov
out
sbb
jo
fdivs
and
add
xchg
sub
push
mov
xor
ficompl
mov
mov
divl
enter
or
ja
aam
popa
or
cmc
jmp
test
ss
lret
sub
jg
int
inc
push
dec
xchg
js
push
das
mov
add
sbb
jge
bound
aam
es
fstps
mov
nop
mov
sarl
lret
xchg
js
mov
mov
adc
je
mov
lahf
or
mov
sub
hlt
shll
out
pop
lret
and
lret
ss
lret
mov
call
xor
pop
ret
fsubl
push
sub
bound
inc
sub
mov
enterw
push
xchg
or
pusha
stc
jne
lcall
sub
mov
ss
sbb
cli
cmp
jns
pop
stc
cmc
js
cmp
je
stc
or
aad
add
leave
adc
fisubrl
mov
and
dec
jnp
aas
sti
sbb
or
push
adc
mov
sbb
pusha
imul
mov
out
aaa
mov
push
inc
adc
sbb
in
test
sub
cmp
mov
fwait
jnp
out
dec
cmp
adc
ja
push
pop
mov
mov
mov
in
push
or
xchg
and
cmc
mov
add
jecxz
aas
stc
sbb
cmp
hlt
and
jnp
lds
pop
xlat
mov
mov
or
adc
stos
xor
aad
xor
hlt
les
mov
jae
xchg
inc
mov
scas
mov
mov
sub
xor
xor
jo
dec
ljmp
sahf
out
int3
incb
aas
jmp
test
daa
enter
out
xchg
inc
pop
in
movsb
inc
cmp
jl
cli
mov
add
imul
xchg
mov
add
mul
sbb
xor
fwait
cli
cmp
mov
sbb
add
mov
notl
mov
and
jae
mov
stc
dec
es
inc
loope
lcall
stos
mov
push
inc
push
sub
add
sbb
test
bound
dec
jb
sbb
xchg
in
gs
fildl
adc
xchg
inc
xlat
popf
adc
xchg
out
nop
lods
push
enter
aas
ja
orb
andb
ret
or
and
sbb
xor
jmp
mov
dec
jo
cmp
mov
dec
pop
jmp
lods
push
shll
xor
mov
mov
xchg
imul
xor
popf
fisubrl
xor
sahf
xchg
lods
andl
pop
int
pop
je
jmp
push
ret
pop
mov
adc
add
push
sbb
out
ret
jo
mov
sub
lahf
xor
xor
in
hlt
arpl
mov
pop
mov
and
pop
push
es
and
pushf
in
add
fcmovb
repnz
adc
adc
testb
fdivp
cmp
jge
loop
cmp
pop
pop
cmpsb
xor
push
es
and
mov
pop
pop
pushf
clc
not
cmpsb
jbe
push
jmp
xchg
adc
sbb
and
sarl
pop
scas
add
xor
insb
xor
xchg
mov
mov
adc
sbb
sbb
in
pop
and
pop
stc
inc
in
imul
mov
jmp
pop
nop
xor
dec
xchg
pop
sarl
testl
mov
arpl
cmpsb
push
stc
inc
inc
inc
jae
xchg
pop
nop
lea
int
or
adc
ret
mov
pop
jge
xor
hlt
push
fiaddl
mov
dec
es
dec
jne
aaa
loop
loop
or
shl
mov
fiadds
fstl
pop
xchg
and
sbb
mov
mov
mov
dec
ds
daa
sbb
xchg
xchg
pop
xlat
cmp
rorl
sti
popa
je
imul
enter
pop
mov
fisubs
mov
lods
mov
or
test
loope
dec
dec
js
cs
sub
push
stos
jp
jmp
mov
push
dec
mov
adc
lret
mov
mov
jno
jle
cs
ja
in
inc
push
adc
pop
jno
aas
dec
xlat
sbb
insl
and
lret
xchg
add
mov
fcomi
adc
call
mov
mov
pop
leave
xorl
sar
andl
int3
lods
xor
lret
pop
enter
mov
vmread
push
ljmp
mov
sub
cld
inc
cmpsl
jns
aam
sub
xor
test
sbbb
pop
fcmovnbe
adc
popa
hlt
adc
push
sub
cli
adc
mov
xchg
add
popf
dec
push
std
inc
sbbb
loop
dec
pop
push
pushl
call
mov
inc
mov
add
pop
xorb
push
pop
add
or
out
and
test
popa
into
out
test
out
arpl
aam
xchg
loope
mov
sbb
mov
sub
mov
shrb
sahf
pop
fstps
bnd
gs
inc
mov
mov
addr16
pop
shll
cmp
mov
rorb
push
loop
mov
mov
fs
adc
or
dec
add
dec
lods
ret
push
jb
push
mov
loop
xor
dec
icebp
aaa
cmpb
add
pop
enter
mov
iret
aad
mov
sbb
inc
xchg
cmp
aas
sub
and
fdiv
shrb
xchg
dec
push
stos
add
cmp
je
sbb
aad
lock
pop
adc
mov
push
pushf
sub
int
dec
insl
jge
orb
in
push
jl
jnp
std
mov
ficomps
push
aaa
repz
sbb
fsubr
test
scas
jg
push
ret
fsubl
push
iret
call
aaa
nop
dec
sbb
jl
fldl
jb
mov
sub
daa
sbb
xchg
loopne
sbb
mov
and
ljmp
fisubrl
daa
inc
dec
mov
cs
mov
add
cmp
ja
add
mov
add
je
mov
sub
push
in
lret
outsb
push
movl
dec
pop
mov
pop
push
fidivrs
push
inc
enter
adc
daa
pop
adc
or
cmp
call
ss
add
push
aaa
fwait
mov
fbld
lret
mov
jl
adc
push
stos
fidivrl
xor
mov
fisttpll
std
bound
shlb
inc
xor
pop
pop
sti
xorl
loopne
aam
pop
xor
sbb
or
xor
pop
add
pop
and
dec
cmc
nop
shrb
sarb
sub
ss
fdivrl
shl
pop
push
icebp
mov
in
repz
mov
cmp
dec
das
mov
cmpsl
xorb
daa
sub
inc
outsb
adc
mov
call
popf
cltd
inc
cmp
sbb
mov
add
add
test
or
fwait
sbb
das
dec
mov
push
loop
xchg
jmp
adc
fldl2e
stos
mov
cmp
fstpt
das
lret
sti
fnsave
shr
pop
sub
cwtl
enter
jl
mov
and
push
dec
sbb
jb
outsl
push
dec
mov
and
xor
cmp
rcrl
imul
mov
xor
push
sbb
or
cmp
or
mov
jmp
pop
int3
or
push
pop
out
adc
popa
out
adc
in
iret
pop
aaa
mov
roll
adc
fidivs
cmp
xor
mov
jge
sbb
or
andb
scas
dec
and
test
cltd
negl
ja
sub
sti
lahf
fsubr
mov
iret
mov
aaa
bound
adc
fcomps
in
mov
in
sbb
dec
sub
das
cmp
xchg
jmp
sbb
pusha
jp
mov
in
mov
pop
mov
jno
in
xor
or
or
dec
out
mov
mov
es
imul
lock
call
outsl
fstl
andb
andb
mov
dec
mov
or
xor
aaa
pop
icebp
ljmp
and
mov
inc
aas
jns
enter
out
and
sub
add
adc
adc
sub
repnz
or
or
xchg
mov
sahf
int3
dec
scas
cmp
jp
sub
fldenv
mov
cmp
fsts
call
movsb
cmp
mov
fiaddl
xchg
push
ss
xchg
out
mov
and
retw
ja
jae
das
js
push
mov
pop
jbe
fidivrs
orb
sbb
xor
or
ret
push
sbb
scas
or
push
pop
fidivrs
in
xor
shlb
iret
cmp
test
dec
out
insb
dec
mov
lods
xor
loop
test
mov
insb
sbb
inc
sub
icebp
pop
mov
dec
sub
add
or
push
mov
inc
pop
sbb
lock
push
sub
sbb
dec
or
pop
mov
dec
ret
mov
arpl
clc
notl
mov
dec
gs
jb
or
lods
push
pop
inc
adc
pop
sbb
insl
push
push
xor
arpl
sbb
cmp
repnz
loope
pushf
lahf
in
adc
sti
scas
cmp
fisubrl
lea
jmp
sbb
or
mov
mov
mov
mov
outsl
push
sbb
mov
out
add
jmp
das
pop
xchg
push
nop
pop
mov
dec
ljmp
clc
dec
sub
or
popf
mov
testl
cmp
mov
xchg
outsl
leave
inc
pop
movl
add
pushf
repz
xchg
mov
mov
ss
sub
add
cs
xor
jo
hlt
inc
loop
push
sahf
popf
jne
out
cmp
jns
mov
mov
aam
ss
mov
cs
les
mov
cmp
pop
pop
push
push
js
data16
adc
movsl
leave
out
inc
cwtl
jb
incb
std
or
push
in
int
stc
aas
mov
xor
cld
sahf
iret
sub
inc
adc
jno
xchg
adc
lcall
jns
or
cwtl
sbb
sti
mov
fmulp
mov
jne
push
incl
adc
cmpsl
jg
xor
cs
outsl
pop
cltd
jno
pop
push
imul
ret
movl
inc
push
jno
mov
and
mov
xchg
mov
add
hlt
iret
pop
sbb
fwait
ljmp
negb
ss
pushf
xchg
adc
and
jmp
sub
orb
incb
mov
pop
lahf
adc
add
aaa
lods
les
pop
fisubrs
push
cmp
or
pmaxsw
cmp
cltd
inc
xchg
bound
mov
mov
lock
push
aas
cmp
outsl
sub
lcall
nop
pop
xchg
push
or
push
pop
sbbb
sahf
and
xor
xlat
adc
test
pop
or
ljmp
jb
jo
pop
in
xchg
or
cmpsb
js
push
jno
js
aam
inc
pop
or
insb
shlb
cmp
ja
push
add
dec
out
jno
test
pop
movsl
dec
sbb
popa
xor
adc
fidivl
mov
jl
test
jle
mov
or
xlat
pop
jns
push
dec
add
imul
aad
sbbb
imul
in
jb
mov
adcb
adc
mov
add
dec
add
scas
dec
in
sbb
inc
in
iret
rcll
stos
js
mov
dec
mov
push
inc
jmp
push
jbe
xor
or
mov
fidivrs
mov
and
add
sbb
imul
push
push
ret
loope
mov
clc
lcall
aam
xor
pop
pop
jae
fisubs
sbbb
cld
mov
clc
rcrl
jecxz
sbb
push
lock
push
and
xchg
push
fwait
repz
stc
lods
sub
pop
iret
hlt
dec
jmp
inc
sub
push
jmp
mov
xchg
inc
sub
dec
mov
xchg
sbb
xchg
cmp
pusha
ljmp
fimuls
stos
cld
stos
test
cmp
inc
lret
jnp
lret
gs
fwait
aad
sbb
std
movsl
arpl
mov
shll
mov
mov
mov
pop
or
loop
call
cs
and
sbbl
jge
or
loope
mov
xlat
add
pushf
push
insl
lret
dec
outsb
popa
int3
jbe
sbb
daa
mov
inc
test
cmc
popf
leave
addr16
cltd
ret
and
cli
mov
pop
pushf
lods
sbb
gs
fldz
push
xor
stc
pop
and
mov
leave
sbb
fwait
test
leave
cmp
mov
mov
add
inc
inc
push
and
popf
in
or
pusha
inc
sub
pop
insb
mov
aad
sbb
push
addr16
mov
mov
xor
in
loop
pop
std
mov
mov
mov
mov
mov
jge
fstpl
fdivrl
in
hlt
pop
lods
sub
cli
aam
sbbb
dec
jo
frstor
mov
test
notb
mov
mov
or
jns
rolb
inc
stc
inc
pop
cmp
jnp
enter
lea
imul
clc
lahf
fwait
dec
jnp
ret
lcall
xchg
xor
cmp
inc
sub
mov
or
sbb
mov
bound
into
mov
xor
aad
ret
popf
sti
mov
stos
sbb
test
push
xchg
movsl
sub
cltd
sahf
xchg
or
jl
in
std
movsl
jle
inc
jl
sbb
inc
inc
xor
in
or
xor
imul
adc
repnz
pop
ret
or
sbb
es
fsubl
mov
stos
sub
pop
add
aas
push
sti
jne
sub
mov
pop
xchg
rcrb
das
pop
mov
std
jmp
sbb
lods
mov
sti
fisubrs
push
sub
callw
ss
test
mov
jecxz
and
fnstsw
cwtl
ficomps
and
sbb
leave
scas
push
xor
rolb
popf
shl
mov
or
jecxz
lods
mov
mov
inc
push
ljmp
inc
aaa
pop
pop
dec
push
pusha
mov
nop
pop
aas
add
iret
std
cmp
push
stos
and
inc
popa
add
xor
jbe
add
pop
xor
jmp
test
jge
enter
sysret
push
test
or
cli
dec
imul
insl
pop
stc
mov
or
cltd
int
lret
dec
outsl
xor
push
bound
and
nop
imul
inc
cmpsl
cmp
mov
xor
sbb
xor
dec
enter
push
sahf
xchg
lahf
out
popa
sbb
pop
es
mov
pop
xor
dec
jns
xchg
fstl
mov
jmp
add
inc
add
cs
cld
inc
sbb
ss
dec
fidivrs
adc
insb
xor
cmp
mov
add
mov
stos
fnstenv
movsl
or
mov
leave
cli
sbb
jl
mov
pop
mov
in
sub
fwait
inc
push
adc
inc
stc
icebp
sti
push
inc
and
jecxz
jmp
lahf
pop
out
cmp
pop
sbb
enter
int
xchg
test
push
idivb
dec
ja
xchg
and
cmp
int
dec
and
outsb
push
push
in
data16
sub
sub
cmpsb
cld
mov
xchg
pop
outsb
ret
sbb
mov
lret
jnp
mov
mov
bound
mov
sti
loopne
jecxz
jo
repnz
dec
or
sub
xchg
dec
popa
xor
cs
lods
push
popa
mov
dec
sbb
fadds
xchg
mov
add
cltd
xlat
jl
cli
sbb
mov
nop
add
insb
or
gs
adc
popf
mov
shl
cltd
out
lret
pop
dec
cli
in
and
jns
xor
stos
sub
xchg
push
cwtl
mov
lret
adc
pusha
jecxz
jns
pop
xor
inc
xchg
dec
mov
call
je
xchg
in
or
inc
or
fadd
cwtl
sbb
fsub
pop
roll
fcmovu
sti
repnz
fwait
mov
ljmp
mov
je
inc
pop
mov
das
sub
out
adc
add
jne
add
xor
sub
push
es
push
jo
mov
jg
fsubl
pusha
xchg
mov
pop
sub
push
hlt
pop
xor
insl
mov
add
inc
mov
xor
leave
negl
cmp
outsl
inc
xor
int
adc
fisubl
mov
hlt
gs
adc
xchg
mov
stos
fidivrl
fisubrs
jle
stos
andb
leave
fists
loopne
es
js
push
cmp
cmpb
rolb
jbe
or
pusha
jne
add
jl
dec
sbb
inc
xchg
adc
clc
sub
fwait
test
lret
dec
mov
test
sub
mov
mov
leave
std
repnz
movl
jle
inc
sub
mov
movsl
jle
sti
push
divb
push
mov
or
xor
fnstcw
xor
add
out
xor
lahf
in
pop
cs
hlt
lods
jbe
roll
sub
sub
mov
mov
mov
and
xchg
inc
notl
cli
sbbb
add
repz
fisubs
aaa
jae
pop
pop
mov
xchg
mov
cmp
cwtl
fstpl
or
mov
mov
push
fcoms
bound
jl
inc
repz
lret
jno
pop
jne
enter
jbe
orb
hlt
cltd
sbb
lea
pop
xor
stc
mov
cmp
bound
mov
push
sub
out
fisttpll
mov
jmp
dec
push
lods
cmp
push
cmp
adc
lea
jb
inc
add
dec
sub
mov
push
sbb
aad
mov
es
pop
aaa
xlat
cli
and
xor
lret
xchg
mov
pushf
sbb
add
pop
icebp
cmp
pop
lds
popa
xor
inc
in
mov
add
jecxz
mov
sbb
and
jb
sbb
ljmp
aam
cmp
adc
mov
jns
stc
mov
rcl
cmp
jne
js
xchg
cmp
cmpsb
ss
int
pop
mov
xorb
mov
aam
sub
lcall
pop
ficoms
lret
mov
push
pop
test
push
out
pop
lret
sub
loop
push
pushf
sbb
loop
das
add
add
dec
or
mov
mov
adc
es
lcall
stc
stos
in
es
push
lock
popa
xchg
xchg
fwait
nop
adc
mov
mov
or
lods
gs
fs
pop
adc
sti
mov
popf
inc
out
or
mov
pop
je
xor
cmpb
js
mov
mov
jno
mov
inc
je
or
je
ret
fucomi
stc
dec
ljmp
mov
sub
cmc
cmp
pop
pop
dec
mov
mov
ret
gs
sbb
ficompl
dec
int3
push
or
int3
aaa
js
fidivl
arpl
jmp
lock
xchg
inc
lret
in
sbb
popf
das
or
add
mov
pusha
pop
das
fdivp
daa
pop
jb
mov
packssdw
in
sub
jns
jo
fwait
jmp
inc
xor
std
sbb
jae
add
cmp
inc
add
mov
cltd
outsb
jne
cmpsl
mov
and
xor
pop
cmp
push
insl
pop
or
add
inc
sbb
mov
je
std
push
xor
pop
shr
cmp
lret
mov
cmp
pop
pop
push
add
shl
aaa
fiadds
js
lahf
adc
xchg
call
add
je
clc
cmp
jg
cmpb
cwtl
frstor
or
pusha
stc
cs
mov
push
loope
push
aas
out
lds
add
popa
inc
pop
pop
rolb
sahf
insl
fldenv
dec
das
xchg
mov
jp
mov
mull
lea
nop
push
movsb
adc
inc
pop
fldcw
in
adc
push
mov
xchg
xchg
jb
mov
and
pop
sahf
pop
xchg
mov
xorb
mov
in
stos
cmp
js
cmp
cmp
loop
and
pop
add
xor
adc
aas
dec
ret
andl
push
bnd
add
push
pop
or
loop
popa
cmp
mov
adc
lods
or
and
or
out
inc
adc
and
scas
sahf
test
push
mov
and
in
sbbl
into
scas
or
push
xor
sub
or
add
mov
stos
test
mov
jmp
jmp
mov
or
repz
sbb
mov
jo
add
adc
lods
or
shrb
lds
pop
pop
push
test
pop
stos
es
in
cmp
xorl
das
popa
es
jbe
or
sbb
pop
adc
push
out
jmp
out
jmp
dec
scas
adc
je
adc
aaa
mov
push
push
cmp
outsb
or
test
sbb
mov
xor
lock
mov
insb
inc
mov
stos
push
mov
inc
xor
cmp
sbb
fcompp
xchg
dec
pop
mov
outsb
leave
mov
dec
pusha
inc
mov
hlt
jecxz
dec
ficompl
inc
adc
repz
lds
ret
push
cmp
mov
lock
repnz
adc
add
xlat
mov
and
out
lsl
jne
lods
xor
mov
sub
jg
pop
lret
xchg
xchg
pop
es
inc
pop
jl
insl
call
pusha
pop
or
insl
push
xchg
cld
cmc
pop
stos
aad
pop
loope
out
pop
and
mov
js
mov
sbb
jl
cmp
and
cli
icebp
gs
cmp
and
es
dec
dec
xor
arpl
or
sbb
or
frstor
push
call
push
mov
ljmp
loop
mov
ret
cmp
sti
popa
sub
push
adc
popf
ficoml
je
and
movsl
int3
or
mov
mov
jmp
sti
pop
and
sbb
popa
add
or
adc
arpl
sbb
push
fdivrs
arpl
in
movb
xchg
sub
mov
push
xchg
cld
shl
jmp
out
jno
sahf
test
stos
call
xchg
lret
shrl
push
lret
and
lea
jns
or
in
addr16
push
push
mov
rolb
inc
lret
mov
sub
sub
out
push
push
and
pop
push
or
or
mov
mov
pop
sbb
mov
jge
cli
sbb
cmp
pop
sti
xchg
or
xor
enter
lods
push
loopne
fs
or
mov
movsl
scas
mov
les
mov
sub
cvttps2pi
test
in
dec
imul
cmp
lret
push
ss
fcompl
adc
push
fcompl
inc
jmp
sub
adc
add
sub
mov
pop
cltd
push
cmp
jmp
stos
mov
sub
adc
mov
arpl
mov
js
jo
lret
push
cltd
dec
sub
sub
mov
add
flds
aad
adc
inc
out
notb
adc
stc
dec
mov
push
loopne
mov
or
gs
push
std
push
lahf
jne
xor
or
sub
loope
les
std
or
mov
jo
mov
xchg
mov
test
imul
loopne
cli
js
mov
js
and
push
test
hlt
sarb
jmp
stc
std
adc
jo
push
fwait
dec
mov
test
mov
and
mov
jle
int3
sbb
and
test
and
cmp
xchg
leave
xchg
xlat
dec
lds
push
or
fs
sbb
cli
popa
mov
xor
inc
cmp
adc
cli
hlt
push
push
dec
out
insl
jo
inc
sub
adc
or
popa
sub
mov
xor
sbb
out
les
js
js
mov
push
push
shlb
adc
sub
fcmove
lahf
test
xchg
or
push
lcall
pusha
cmpsb
pop
dec
mov
pop
xchg
das
scas
xchg
mov
enter
xchg
mov
xchg
cmpsb
sbb
repz
mov
mov
or
xor
repnz
mov
std
adc
mov
push
outsb
int3
xor
cmp
cmpsl
jle
lods
dec
les
fidivl
aas
mov
jge
cmpl
ret
push
into
sti
adc
mov
fsubrp
sbb
sbb
dec
repz
jnp
mov
loop
mov
aad
xlat
popa
cmpsl
mov
mov
sub
das
imul
imul
into
mov
or
pushf
fsubrs
adc
push
fidivrl
lcall
addl
push
lret
dec
lods
and
inc
xchg
es
lds
cmp
jecxz
ret
test
stc
mov
mov
pop
stc
or
fs
xlat
popf
mov
test
or
imul
int
mov
add
xor
invd
mov
and
jns
jno
test
fidivs
rclb
sbb
or
or
adc
add
lret
adc
mov
cmc
jmp
xchg
mov
mov
pop
pop
in
pop
push
cmp
stos
inc
stos
sbb
jmp
push
xor
insl
cltd
adc
loop
cmp
bound
inc
push
xchg
in
dec
pop
ja
sbb
xchg
mov
fwait
xor
or
es
sub
sti
rorb
popa
push
push
mov
jns
or
insl
js
fnstsw
xchg
mov
mov
aas
fsubrs
das
hlt
push
sar
sub
sarb
inc
xor
adc
cwtl
xor
lods
adc
scas
std
je
adc
mov
mov
loope
xor
mov
sbb
mov
das
and
mov
sub
mov
jae
cs
pushf
decb
sbb
add
cmp
mov
int
or
clc
mov
fcmovnb
push
jno
cmp
es
je
aaa
push
sub
leave
push
add
aam
data16
jg
nop
aaa
push
negb
arpl
sub
ss
push
sahf
inc
xchg
ffree
sahf
or
jl
rclb
sub
cmp
inc
faddl
mov
mov
xchg
imul
cmpb
daa
mov
daa
sbb
adc
jmp
lods
sub
dec
out
inc
mov
out
sarb
xor
xchg
mov
mov
daa
ja
add
fs
je
or
das
sub
push
mov
mov
ret
outsb
out
sar
sbb
out
mov
mov
test
xor
insb
mov
std
cwtl
repz
xchg
jmp
pushf
lahf
ljmp
cmp
dec
dec
xchg
xor
sub
adc
push
push
sbb
dec
jge
fdivrl
or
and
mov
sub
pop
mov
sbb
dec
fists
mov
jmp
aaa
push
mov
mov
das
fs
jae
mov
sbb
or
lock
loopne
mov
imul
xlat
mov
gs
outsl
out
test
xchg
jbe
push
fstpt
ss
cltd
int3
popa
call
pop
mov
and
mov
fs
icebp
jp
call
nop
into
jle
sub
jns
enter
cmp
stc
and
das
push
in
pop
mov
add
in
cmp
mov
mov
xor
std
adc
stos
fwait
push
xor
mov
jb
cltd
fisttpl
cmp
cmp
and
add
jmp
or
cmc
fwait
pusha
jns
pop
loop
push
in
mov
xchg
mov
dec
jmp
insl
inc
xchg
mov
sbb
outsl
lods
out
loopne
inc
add
fistl
pop
dec
push
orb
pushf
jg
xor
negb
das
push
repz
add
dec
push
push
cwtl
pop
rcrl
sysenter
fmull
mov
cmp
sbb
mov
mov
and
and
mov
pop
xchg
cs
jl
bound
ss
out
or
mul
test
pop
and
ds
gs
into
dec
shlb
mov
add
js
push
cltd
loope
leave
subl
cli
inc
loope
dec
repz
pop
popf
cmp
xor
sub
cmp
sub
pop
xor
outsl
mov
out
xchg
lcall
pop
les
xchg
mov
jne
and
std
loop
lds
aad
ljmp
mov
jns
xchg
mov
outsb
dec
imul
adc
jne
lret
push
mov
mov
push
mov
hlt
inc
cmpsb
out
dec
jns
gs
mov
inc
mov
imul
aas
testb
add
rorl
in
or
repz
pop
ret
jns
fs
orl
inc
js
or
mov
mov
xchg
dec
rolb
rcrl
sbb
in
clc
push
pop
movsl
lahf
mov
mov
fisttps
cwtl
mov
adc
std
sti
sarb
mov
test
js
in
mov
icebp
lahf
les
clc
mov
mov
loope
nop
dec
scas
adc
sub
daa
shll
sbbl
insb
in
mov
xor
insl
jo
dec
in
and
movsl
mov
sti
push
or
notl
adc
fwait
and
mov
mov
mov
lcall
out
into
shlb
roll
addl
push
sub
mov
dec
stos
repnz
sub
or
outsl
xchg
push
push
scas
cmp
dec
pop
jle
aad
or
sarb
xor
dec
pop
inc
jecxz
jns
jecxz
pop
mov
loop
xor
dec
cltd
mov
lcall
inc
cmp
insb
jae
push
xor
sub
icebp
mov
push
lock
xchg
jge
ja
mov
jmp
mov
scas
sbb
loope
arpl
data16
xchg
mov
lds
xchg
aam
lods
push
mov
xor
or
mov
jae
out
leave
add
mov
inc
scas
loop
mov
fcomi
dec
xor
xchg
in
sub
in
push
cmp
xor
adc
out
scas
jo
mov
mov
mov
adc
bound
add
push
andl
lahf
jl
fcmovnb
jmp
push
cltd
lcall
and
repnz
pop
cmp
testl
gs
sbb
lock
std
xchg
pop
shlb
adc
jle
xor
xor
xchg
fstl
mov
scas
in
lahf
lret
cli
xchg
mov
dec
ds
mov
or
push
loope
pop
mov
cmc
xchg
add
or
jo
jnp
sbb
jno
sub
pop
push
shlb
pop
dec
adc
adc
mov
mov
pop
push
gs
lahf
pop
or
movsb
movups
pop
add
sbb
push
daa
std
push
adc
cmp
inc
push
mov
pop
jge
jge
adc
subb
in
in
aas
push
jno
aad
inc
fwait
mov
pusha
jle
pop
mov
xor
into
arpl
jmp
pop
sbbb
add
pop
cmp
adc
mov
cwtl
push
bound
jns
xor
insl
call
iret
push
pop
ss
cmp
fcomp
loop
pop
mov
mov
mov
sbbb
jne
xor
nop
mov
mov
or
jle
pusha
lahf
ret
fistps
cwtl
push
inc
mov
jns
lds
jge
pop
push
out
add
dec
jno
jns
xchg
sub
dec
lcall
add
sbb
cmp
add
and
mov
dec
sub
add
mov
and
dec
xchg
sub
mov
sub
dec
pop
inc
movsb
mov
shrl
xlat
xchg
mov
mov
mov
xor
les
inc
jae
cmpsb
loope
std
gs
ret
and
xchg
lahf
iret
cmp
xor
jecxz
pop
jmp
mov
pushf
jo
lret
cmp
les
adc
xchg
fstps
cmp
repz
in
fstpt
das
ss
fiadds
aad
pop
mov
add
push
std
nop
ss
jne
mov
cmp
or
and
dec
fistpll
mov
sbb
sbb
mov
and
sbb
jns
fimull
mov
les
pop
loopne
gs
xor
mov
mov
sub
ret
inc
mov
dec
xor
and
fwait
mov
adc
cmp
xchg
inc
dec
fsub
cmc
jl
xor
mov
mov
mov
into
mov
push
mov
sbb
mov
cmpsl
es
mov
das
lret
dec
out
push
stc
mov
cwtl
xchg
scas
mov
leave
or
push
xchg
rclb
loop
sub
adc
fdivl
std
dec
mov
in
inc
outsl
jnp
sbb
out
stos
rorb
mov
pop
jmp
mov
in
mov
xchg
fstp
movsl
mov
insb
or
xchg
push
in
xor
push
fcomps
rcr
mov
mov
ficoms
leave
mov
xor
mov
dec
std
dec
mov
dec
fidivrl
lods
push
mov
fsubp
lret
das
push
out
dec
std
dec
rol
loop
enter
in
sahf
mov
test
xchg
push
pop
leave
fnsave
mov
in
push
mov
aaa
pop
mov
das
jae
add
mov
loopne
popa
push
or
scas
cltd
push
mov
fists
lods
cmp
mov
ljmp
test
loop
stc
out
and
pop
movb
mov
xchg
mov
push
in
dec
std
mov
sbb
sbb
jne
and
lods
cmp
inc
mov
and
xor
bnd
xchg
lods
out
sahf
pop
jns
mov
pop
imul
incb
mov
fisttpll
cmpb
addr16
movq
out
xor
mov
loopne
aaa
cli
xlat
imul
outsl
call
test
ss
cmp
pop
lret
mov
jne
add
cmc
cmpsl
scas
movsb
inc
call
dec
cmp
inc
jmp
scas
jnp
imul
ja
loopne
pop
mov
mov
push
jns
imul
sub
jae
clc
cmpsl
movlps
dec
jno
stos
test
sbb
pop
pop
es
pop
cli
ja
sub
cmpsb
inc
and
xor
fldl
pop
xor
es
sub
dec
sti
inc
aas
push
or
or
int3
fstp
sbb
add
shrb
imul
pop
cmp
popa
ds
pop
lods
mov
push
dec
mov
ds
mov
gs
push
ss
mov
push
lret
add
fidivrl
push
mov
jle
lret
push
dec
sahf
cs
fwait
pop
push
mov
add
jmp
mov
inc
fistps
rcrl
or
pushl
and
xor
outsl
fs
cmp
add
ljmp
and
gs
pop
push
testb
inc
fcomps
scas
fwait
pop
out
push
es
ss
mov
mov
sbb
mov
cmpsb
fcoms
movsl
sbb
cwtl
and
js
mov
xor
icebp
lea
pop
hlt
xor
adc
cmp
popa
hlt
pop
jmp
dec
bound
or
cmp
aaa
push
jmp
mov
movb
or
mov
enter
dec
in
dec
ss
add
not
push
mov
and
pop
sbb
mov
sbb
pop
je
jl
sbb
out
sub
ret
lret
pop
lahf
inc
pop
sub
and
xchg
inc
jmp
test
fldl
xor
mov
mov
adc
and
movsl
fdivrl
pop
sbb
adc
mov
retw
insb
repz
loop
ret
lods
in
pop
pop
inc
jo
nop
loopne
adc
ficompl
insl
in
pop
vpbroadcastmw2d
xor
aaa
xchg
push
pop
mov
jp
std
xchg
push
outsb
mov
push
inc
mov
sahf
shll
addr16
les
or
cmp
test
pop
sbb
jle
and
mov
add
in
decl
xor
xchg
scas
or
mov
iret
fstpl
cmp
pop
sub
pop
shlb
ret
mov
out
xchg
in
popw
cmp
sbb
xchg
push
popf
jge
lahf
fisubrl
cltd
pop
insb
popa
ret
sub
adc
inc
sbb
and
pop
cmc
inc
adc
xor
popa
es
ficoms
leave
pop
push
sbb
jecxz
adc
popf
or
mov
inc
bound
jmp
cmp
gs
mov
leave
push
add
mov
mov
xchg
stc
int3
sbbb
ret
mov
jns
dec
aas
aam
xor
loop
mov
rorb
sub
sbb
mov
add
xchg
dec
scas
sti
in
andl
sbb
push
cli
and
adc
sub
stos
aaa
mov
add
lods
test
add
jl
push
or
stc
xor
mov
mov
scas
add
push
and
pusha
jb
cs
add
or
sbb
leave
pop
into
stos
adc
jle
test
xchg
lret
dec
or
mov
xor
pop
or
pop
dec
mov
adc
cwtl
cli
mov
push
cmp
jno
fs
xchg
dec
mov
xchg
jno
js
sub
lahf
loopne
repnz
jmp
xor
sub
xor
dec
sbb
pop
mov
inc
jne
jo
lcall
test
fstpl
or
adc
mov
cmpsl
mov
mov
mulb
out
lods
roll
cltd
ficoms
aas
pop
mov
pop
popf
pop
fldl
in
jg
ljmp
jae
dec
mov
pop
push
dec
dec
jne
mov
jo
xchg
push
adc
push
add
dec
insb
lcall
pop
mov
push
call
insl
jns
add
sbb
mov
mov
lcall
call
pop
out
and
les
pop
sub
adc
xlat
pop
mov
repnz
fsts
cmp
cs
aad
mov
push
cli
jp
lret
das
mov
pop
sub
add
mov
arpl
mov
or
dec
movl
out
sub
int
fbld
in
push
xchg
fldcw
lods
mov
pop
xchg
adc
dec
sub
xor
pop
movsl
cwtl
pop
sbb
adcb
ljmp
shll
xor
or
push
mov
mul
mov
mov
cmc
insl
push
int
xor
bnd
shlb
xchg
imul
jno
jg
or
sbb
imul
dec
hlt
fidivrs
das
cli
push
mov
ficompl
outsb
mov
data16
cmp
stos
mov
sbb
ja
cmc
dec
sbb
mov
outsl
pop
add
xor
mov
dec
cmpl
jge
push
mov
enter
pop
cmpsl
xor
ret
dec
sbb
gs
mov
lods
shr
or
mov
add
les
test
pusha
cld
out
popa
or
mov
pop
das
mov
cmp
lahf
loope
add
xchg
dec
mov
in
hlt
mov
js
mov
cmp
pop
push
mov
sub
jg
mov
jns
jnp
popf
push
xchg
rol
or
adc
inc
mov
das
xlat
test
rcr
data16
fmull
mov
inc
popf
sbb
sub
cmp
and
frstor
leave
enter
lcall
out
addr16
pop
addr16
sahf
cli
xchg
push
mov
test
add
pop
inc
je
and
popf
xor
jle
push
inc
popa
jg
mov
inc
mov
lahf
decb
enter
mov
xchg
xchg
push
push
jmp
pop
insb
pop
es
test
cs
inc
sub
cmp
ss
push
stc
jnp
cmpl
jmp
or
mov
cmp
mov
mov
mov
or
sti
mov
pop
xchg
ljmp
mov
mov
sub
jnp
or
daa
cmp
iret
mov
nop
dec
in
imul
inc
lea
jg
push
and
mov
fdecstp
negb
adc
mov
sahf
or
add
insb
ss
popf
mov
adc
loopne
push
adc
or
aas
sub
push
imul
gs
sbb
push
lahf
xlat
mov
movsl
or
ret
das
push
jo
insl
mov
cmp
lea
fcoml
mov
cld
sub
push
pop
mov
call
je
ss
cmp
popa
jle
stos
pop
lea
mov
cmp
enter
outsb
imul
adc
pop
xchg
daa
fcmovu
sti
sbb
cmp
push
fcomp
pop
inc
mov
push
insl
rol
jae
imul
and
jo
sbb
movsl
inc
dec
mov
inc
add
add
aam
ljmp
shll
stos
inc
cmpsl
sbb
fstpl
lret
cmp
jnp
mov
aas
mov
ljmp
insl
xlat
js
bound
add
pushf
shl
sbb
dec
shll
scas
push
int
mov
mov
je
sbb
push
mov
mov
lcall
int3
and
std
pop
cmc
add
xchg
push
or
pop
push
in
jb
mov
sub
rorb
enter
inc
and
or
pop
movsb
push
and
aas
adc
out
xchg
cs
mov
in
pop
mov
jae
sub
add
fwait
out
mov
xchg
mov
add
and
mov
pop
insb
push
pushf
adc
shrb
jmp
or
mov
out
scas
add
das
jmp
outsl
pop
jb
in
pop
sub
push
in
rcrb
mov
dec
sbb
mov
push
lret
sbb
cmp
cmp
xchg
jae
cwtl
call
dec
bound
je
pusha
mov
orb
lret
loopne
aad
cs
out
insl
push
aaa
cmp
dec
inc
dec
or
push
sbb
mov
loopne
pop
push
mov
dec
sbbl
jno
sbb
je
jo
push
mov
mov
clc
or
test
adc
inc
mov
xor
adc
cmp
mov
push
cmp
push
sti
jle
out
xor
adc
mov
cmp
out
mov
mov
insb
xchg
pop
fldcw
stos
pop
add
cmp
inc
fidivrl
out
push
mov
xor
pop
sbb
je
fidivl
mov
mov
sbb
inc
idiv
pop
cmp
nop
adc
roll
mov
stos
out
mov
out
push
int3
cld
icebp
xchg
ror
and
mov
mov
cmp
dec
sarl
pop
cld
lcall
mov
or
popa
test
push
sub
or
sbb
mov
scas
pusha
or
out
adc
movsb
push
jnp
imul
xor
or
cli
pop
add
movsb
mov
cmp
bound
das
call
lcall
add
pop
mov
xchg
cmp
sub
idivb
jp
js
dec
orl
jle
push
add
in
sbb
mov
dec
fwait
mov
adc
cmp
pop
movsl
cmpsb
xor
sti
nop
test
sub
adc
xor
leave
lock
ret
sub
repz
insb
cpuid
mov
or
loopne
xchg
mov
cltd
sub
inc
out
dec
jg
push
add
mov
inc
cmp
inc
clc
lods
mov
out
out
frstor
push
lds
movsl
mov
jnp
lret
es
pop
xor
xchg
sub
sub
dec
mov
notb
mov
lcall
xchg
dec
lods
pop
pop
mov
or
mov
aaa
jnp
loopne
leave
mov
jo
sbb
jge
xor
push
pop
xchg
insl
xbegin
ficoms
and
mov
fisubrl
dec
adc
lods
lret
lods
xor
dec
mov
in
add
mov
add
dec
fdivl
mov
mov
sub
xor
bound
or
std
xchg
xor
mov
adc
lret
ficoml
add
or
or
push
pop
shll
xchg
adc
jl
scas
sahf
int3
push
pop
pusha
pop
in
mov
shll
mov
cmp
dec
jae
scas
xor
push
lds
push
inc
call
pop
cmp
loop
jno
and
mov
mov
jb
and
outsb
pop
jo
insb
and
jnp
bound
jmp
fidivrs
mov
xchg
xor
bound
ss
pop
mov
bound
inc
mov
jmp
popf
lret
test
popf
sub
aad
out
call
int
xor
and
pop
lds
lret
or
inc
ss
out
or
sbb
shlb
mov
leave
in
xor
popa
adc
shlb
sarl
add
mov
xchg
cmp
dec
aas
xor
and
jmp
rorb
hlt
lds
loop
adc
sub
xchg
fisttpll
dec
ss
jo
dec
jnp
fidivrs
push
jecxz
repz
stc
das
add
gs
dec
sbb
adc
fsubrs
aaa
ss
jecxz
push
subb
jp
adc
mov
sbb
in
mov
addr16
pop
adc
xor
mov
lret
xor
xor
dec
pusha
pop
loopne
scas
add
sub
or
ds
mov
ret
aam
movhps
pop
lds
loop
es
jge
movsb
mov
xor
sbb
negl
sarb
test
movsl
xchg
sub
lret
jno
arpl
and
jb
inc
int3
xchg
pop
das
inc
mov
mov
fcomi
adc
sbb
jns
fdiv
mov
lret
call
sub
or
jo
int3
mov
scas
mov
xor
push
mov
fidivs
push
repnz
pop
bound
pop
test
cmc
fs
mov
push
adc
push
xchg
cmc
jecxz
push
mov
push
inc
push
pusha
loopne
in
mov
cmpsl
xchg
cwtl
fiadds
pushf
mov
add
dec
test
jae
fs
test
xor
mov
imul
test
xchg
cmp
jge
or
mov
pushf
sbb
stos
test
pop
mov
push
pop
jb
test
or
mov
andb
fldt
xchg
mov
sbb
popf
mov
inc
xchg
sbb
adc
xlat
sbb
sub
imul
popa
dec
push
mov
incb
push
push
lret
syscall
and
or
ss
add
lods
xlat
mov
sbb
fs
pop
cmp
cmp
jmp
or
add
push
push
test
pop
mov
jnp
pop
jno
add
pushf
and
jns
push
stc
jns
inc
pop
jmp
shll
lcall
jmp
mov
or
cli
xchg
outsl
mov
popf
adcb
sub
jo
dec
cmp
add
add
xchg
fwait
lods
sbb
adc
scas
cmp
or
ficompl
add
sbb
xchg
cmp
push
inc
or
jmp
sbb
and
push
pop
jp
clc
and
jno
out
adc
jne
sbb
test
and
out
lea
mov
and
inc
sub
cmpsl
dec
dec
dec
pushf
mov
sub
mov
mov
xor
pop
popa
pop
mov
shlb
notl
sahf
and
mov
inc
ss
pandn
mov
add
dec
adc
add
jo
das
ret
inc
lahf
test
arpl
fsts
or
adc
adc
fmul
push
lcall
pusha
decb
xchg
pop
xchg
arpl
andb
xor
mov
aas
xchg
das
xor
out
out
push
popa
hlt
or
jno
cmpsb
out
cld
pop
push
push
push
adc
out
inc
pop
cltd
dec
push
divl
call
cmp
cmp
cmp
fwait
loope
aaa
jle
fstpt
ljmp
rorl
xor
in
xchg
lea
xor
pop
in
xor
xor
fucompp
mov
pop
sbb
pop
sbb
add
cmp
sbb
orb
xor
in
cmp
push
cli
jecxz
mov
sub
push
cs
mov
dec
and
aam
ret
jmp
in
mov
jp
cmp
adc
xchg
insl
xor
imul
mov
mov
sub
daa
push
adc
pop
nop
mov
sbb
imul
sahf
subb
and
fnstenv
xor
stos
mov
out
push
es
and
or
mov
jae
stos
pop
pop
lds
mov
insl
hlt
add
lds
shrl
xor
lea
repnz
out
mov
mov
xor
mov
pop
add
popa
cld
push
adc
int
sahf
popf
stc
mov
mov
jns
pusha
push
add
fildll
psubsw
dec
mov
xchg
dec
test
dec
sti
shl
adc
mov
jb
or
inc
push
lods
jmp
pop
inc
push
cmpl
xor
xor
cwtl
int3
jge
xchg
scas
loopne
inc
adc
inc
dec
lods
push
dec
and
adc
test
push
adc
popf
xchg
out
int3
outsb
lret
cwtl
mov
fistpl
popa
jl
sbb
or
jne
and
sahf
ja
jbe
xchg
jl
and
repz
cs
sbb
pop
mulps
shrl
fistps
or
arpl
imul
and
add
sub
inc
movsl
paddd
rorl
das
xlat
loope
mov
pop
fistl
xlat
insl
push
xor
repnz
or
jno
push
pop
jmp
xor
or
scas
push
mov
pop
sbb
aam
inc
or
ficoms
jne
dec
iret
stos
jns
sarl
jno
addr16
dec
mov
add
les
aas
dec
test
ret
mov
and
mov
cmp
pop
hlt
dec
popa
imul
jp
leave
adc
shl
cmp
pop
aaa
ljmp
repz
mov
mov
roll
cmp
and
cmp
mov
rol
cmp
pop
mov
idivl
jnp
inc
xor
add
mov
iret
loopne
stos
imul
sti
ja
mov
pusha
dec
movl
std
push
icebp
mov
add
test
cmp
jns
jae
or
mov
add
test
mov
pop
mov
lock
test
sub
mov
sbb
imul
mov
sub
leave
xchg
fisubrs
fsts
mov
cs
imul
add
xchg
lds
mov
dec
xor
aaa
cmp
lock
ja
sbb
xlat
xchg
add
ss
sub
sub
mov
cmp
in
pop
jl
add
jmp
test
into
push
fdivp
and
xchg
mov
loop
ss
or
fidivl
ret
mov
add
cmpl
or
jne
xlat
jo
push
addr16
pop
loop
adc
inc
sbb
sbb
sbb
cmp
test
pusha
enter
das
insb
push
cmp
imul
ljmp
cs
lret
lock
xor
xchg
dec
and
lods
adc
xor
xchg
jmp
ss
call
cli
fisubl
push
pushf
xor
sub
nop
lahf
pusha
pop
or
push
cld
roll
add
mov
pop
aam
rcll
xchg
cmp
imul
mov
sar
dec
mov
adc
jae
fistl
repnz
fadds
enter
jl
ret
mov
sbb
subb
aad
stos
out
or
sbb
in
lret
xor
nop
mov
aaa
rcrl
pop
sti
xchg
rolb
mov
das
call
enter
pop
out
and
pop
daa
loope
lcall
mov
cmp
adc
mov
les
loop
jo
imul
loop
mov
pop
and
jmp
xchg
ficoml
rcrb
sbb
cmpsb
aas
stc
sbb
xchg
pop
test
rcll
je
jb
outsb
lods
into
movsl
cmp
mov
cli
dec
cmpb
or
sbb
or
int3
sub
pop
inc
xor
xchg
or
fisubl
push
pop
cmp
jmp
sub
mov
je
xchg
push
rep
adc
fdivrl
cli
xor
nop
inc
inc
dec
filds
mov
adc
aad
ss
and
mov
inc
aam
bound
fimuls
mov
or
je
jg
mov
daa
push
cmp
jmp
cmp
in
inc
mov
jmp
insl
mov
inc
or
sbb
test
mov
out
xor
jae
mov
es
enter
fs
popa
mov
mov
pop
xchg
pop
repnz
mov
jbe
adc
hlt
in
add
subl
mov
sarl
cwtl
cwtl
mov
mov
push
movsb
out
sub
dec
incl
or
test
mov
les
xchg
pop
movlps
js
inc
cwtl
enter
je
push
ret
leave
and
lea
lahf
xchg
call
icebp
pop
dec
sbb
scas
mov
xor
or
mov
jo
cmp
mov
adc
xor
xor
mov
cmp
mov
inc
testb
out
ficoms
sbb
jmp
aas
je
sbb
int3
mov
es
scas
jecxz
enter
ret
adc
mov
insl
push
cs
test
inc
fcmovnu
imul
push
xor
scas
je
or
xor
add
cmp
scas
fs
decl
ss
cmpsl
cli
mulb
cld
adc
lret
sbb
cmpsl
pop
jnp
mov
ss
lahf
lret
fbstp
sub
jne
and
aaa
adcb
jo
push
bound
lahf
sbb
jno
sbb
inc
jl
adc
push
mov
rcl
dec
movsl
sub
jb
xlat
sbb
cld
pusha
into
pop
cmp
pop
or
jno
add
or
xchg
mov
and
lcall
jl
mov
lret
and
add
or
mov
xchg
fwait
js
scas
cmp
pop
and
cmp
mov
lcall
test
in
jmp
push
inc
and
outsl
xor
sar
cmc
add
mov
pop
cmp
or
sub
into
outsb
jbe
clc
sub
push
mov
mov
jp
test
fidivrs
stos
mov
mov
mov
stc
aam
inc
dec
jne
andb
ss
ljmp
pop
cmp
lds
sub
adc
inc
and
pop
pop
cwtl
lahf
or
inc
lods
les
mov
pushf
je
sub
xor
lock
cli
fucom
ja
xor
push
cmp
dec
sub
popa
mov
adc
shrb
gs
ljmp
push
orb
ljmp
cli
je
shll
pop
xchg
mov
enter
pop
inc
xchg
and
cs
add
cwtl
sub
cmp
paddw
dec
mov
sbb
pop
lahf
adc
mov
pop
cld
stos
mov
into
push
lea
sbb
ficompl
movsb
cmp
pop
dec
cli
es
jns
push
std
pushw
cmc
or
popa
movsl
pop
repnz
adc
sbb
jae
add
dec
mov
leave
pop
jl
aaa
xor
xor
bound
gs
dec
es
cmp
add
adcl
mov
inc
or
aas
jp
std
mov
cmp
dec
mov
push
push
popa
sub
mov
mov
inc
jb
idivl
fbstp
xchg
lcall
xlat
in
mov
mov
call
in
popf
inc
sbb
mov
pop
pushf
lret
xchg
xor
xor
push
imul
push
jno
dec
movsb
pop
fisubs
cwtl
jmp
mov
pop
cwtl
inc
pushl
sbb
in
out
mov
inc
cltd
jno
push
sub
sub
mov
xor
xchg
cmpsl
mov
je
das
or
fmuls
inc
sbb
add
push
add
jb
pop
xor
jl
jns
and
arpl
mov
push
pop
sub
or
mov
sub
cltd
pusha
lahf
sub
ss
scas
push
push
and
test
fcmovnb
push
stc
xchg
cmpsl
outsl
popw
std
inc
or
enter
ss
shrl
jae
js
mov
out
pop
call
leave
adc
sbb
cmp
dec
sub
lock
pop
ljmp
jo
add
push
in
xchg
xor
push
push
mov
pop
pop
cmp
mov
jns
dec
jnp
mov
xor
pop
push
sub
shll
sbb
sub
mov
push
xor
mov
sub
xor
adc
or
lcall
mov
push
mov
inc
cli
repnz
pop
push
mov
mov
fadd
das
add
cld
mov
cmpb
out
push
or
lahf
fcmovu
mov
hlt
mov
jno
out
lods
mov
jnp
sbb
sub
lcall
bound
cmp
mov
mov
sahf
sbb
in
pusha
ds
aas
sub
pop
mov
cld
lret
pushf
add
das
pop
xchg
jne
jl
jb
or
jo
and
je
and
ss
inc
dec
cmp
lock
cmpl
aaa
xchg
xor
xchg
lahf
mov
jg
shlb
jbe
test
stos
rcrl
xchg
sarl
push
leave
stos
ljmp
sbb
idivb
push
mov
mov
ficoms
add
sti
cld
mov
scas
mov
popa
adcl
cmp
mov
push
lds
mov
rcrl
jno
push
jecxz
lds
jae
leave
xchg
sbb
lret
pop
mov
mov
pop
mov
xchg
int
call
xor
sbb
mov
fdivrs
inc
mov
push
inc
shrl
pop
shrl
cmp
stc
ds
or
rdmsr
push
inc
mov
pop
dec
sbb
push
es
movsb
mov
inc
mov
ret
adc
es
xchg
push
adc
je
test
movsl
fisubrl
sub
movsl
adc
push
out
mov
ret
sub
and
ja
ret
sub
xchg
rclb
mov
sub
pop
mov
lods
mov
adc
lds
cmc
xchg
add
cwtl
xor
jmp
dec
push
cmpsl
ss
stos
jae
lret
mov
movsb
loope
inc
push
and
pop
sub
inc
idivl
cld
shr
in
lcall
fs
mov
and
mov
repnz
mov
sub
ljmp
out
leave
movsl
cmpb
jns
ss
cli
in
adc
gs
pop
insb
sbb
mov
js
lahf
jge
fs
and
jg
dec
ret
out
fisubs
jns
lcall
pop
and
loop
shll
scas
inc
jbe
ficomps
mov
adc
ret
inc
ret
inc
loop
ja
push
dec
adc
mov
sbb
push
mov
jmp
push
adc
xor
out
leave
pop
xor
enter
std
jns
mov
cmp
sbb
shlb
cmc
push
cmpsl
rcll
mov
test
cmp
adc
out
and
jno
pop
sahf
jmp
stc
cmp
adc
ficoml
add
jne
sbb
sbb
push
cli
adc
lret
dec
mov
test
loop
push
jmp
or
ret
addr16
adc
xlat
sbb
nop
sbb
sbb
imul
xor
aam
stos
or
ljmp
ja
cmp
out
ss
or
jnp
nop
mov
sti
insb
jl
push
aaa
loop
cmp
and
nop
pop
aam
cs
sub
sbb
pop
ficoml
inc
mov
xchg
fcomps
ljmp
xor
mov
mov
dec
adcb
mov
xor
jo
les
sub
xor
scas
int3
bound
mov
fisubrs
xchg
inc
mov
out
and
jo
movsl
mov
jmp
pop
and
test
iret
das
icebp
call
add
dec
dec
shll
mov
xor
add
notl
adc
aas
inc
and
pop
or
xor
sub
outsl
pop
add
test
gs
test
stos
xchg
mov
cmpsb
sarl
inc
inc
rcrl
sub
daa
ret
adc
call
mov
bound
xor
dec
shlb
cwtl
mov
cmc
add
mov
sti
xor
fidivrl
sbb
dec
and
mov
sub
in
hlt
adc
pop
ficompl
push
sub
nop
lahf
jecxz
inc
sahf
mov
enter
out
dec
aad
or
dec
subb
das
fsubp
mov
cmp
push
gs
ja
sub
iret
adc
add
popf
fistl
cmp
inc
stos
adc
out
and
out
lods
inc
adc
xchg
lods
dec
push
orb
cld
aam
xchg
fsubs
lods
inc
pop
push
and
xor
fsub
cmp
sbb
inc
cmpsl
push
sbb
cmpsb
and
hlt
xor
xor
jmp
mov
lea
adc
lret
repnz
mov
sti
gs
sub
fiadds
mov
jne
cvtdq2ps
das
mov
push
stc
jns
mov
dec
push
clc
lcall
mov
stos
jmp
mov
sahf
pop
adc
test
xlat
loopne
or
xor
pop
push
mov
sbb
pop
adc
in
mov
or
fninit
and
in
fists
mov
stos
test
mov
mov
xchg
adc
test
or
data16
test
ss
mov
jp
inc
dec
mov
das
mov
loope
into
mov
push
xchg
cld
sub
cmp
and
sarb
in
mov
mov
or
es
or
lahf
dec
push
flds
and
inc
mov
mov
dec
jmp
fwait
popa
sbb
dec
cmc
popf
ret
inc
pop
int3
nop
push
out
jnp
cwtl
pop
cmpsl
jg
aaa
lds
mov
rcrl
dec
xlat
shll
leave
adc
pop
pushf
xchg
stos
imul
mov
xchg
aad
lcall
adc
xor
rcrb
mov
mov
faddl
std
mov
stc
sbb
fucomi
cld
inc
daa
loop
mov
jecxz
sbb
fdivrl
mov
sub
push
xchg
fwait
ret
mov
dec
loope
popf
push
push
lret
push
stos
dec
add
lcall
sbb
adc
push
rorb
aaa
and
pop
jmp
gs
pop
mov
outsb
rcrb
loope
stc
mov
inc
and
repz
mov
sub
out
dec
dec
mov
sub
or
test
rcrl
test
aas
dec
rcr
and
cs
subb
sarb
pop
push
add
stos
mov
xchg
add
out
idiv
mov
and
mov
test
addr16
and
es
and
out
inc
jns
out
push
repnz
std
test
xor
dec
xchg
lods
pop
mov
push
imul
dec
fimuls
adc
push
cmp
or
inc
mov
dec
in
lods
inc
divb
push
mov
cmp
scas
in
mov
test
mov
dec
nop
pushf
cmp
clc
xor
sub
pusha
mov
aam
mov
adc
in
jae
jle
mov
mov
int3
fdivrl
stos
inc
test
push
xor
mov
dec
leave
mov
pop
and
popa
cmpsl
into
jae
push
cs
shlb
cmp
push
ss
dec
jns
sbb
pop
jne
or
adc
mov
push
gs
jmp
cmp
add
loopne
xor
ficompl
mov
lret
sbb
dec
hlt
addr16
dec
push
popa
xor
lods
add
in
pusha
jl
xor
xchg
xchg
or
push
icebp
add
jl
or
sbb
push
jno
cmp
cmp
xor
dec
repz
pop
sbb
push
dec
les
jmp
dec
jne
push
call
xchg
cs
sbb
xchg
and
jns
adc
inc
fwait
imul
enter
xor
or
or
test
jle
mov
mov
mov
ret
cmpsl
loop
fsubl
cs
call
cmp
lret
lock
cmp
sub
ljmp
and
pusha
cmp
sbb
pop
adcb
sub
xor
mov
jmp
inc
add
test
sub
push
cltd
mov
jae
std
push
push
cwtl
xor
push
mov
das
insl
xchg
mov
jle
nop
adc
push
shlb
jbe
cmp
mov
xor
outsb
repz
push
cmc
push
hlt
xchg
inc
test
and
repnz
jno
daa
orb
jae
addps
pop
cli
jns
xchg
imul
icebp
jbe
stc
pop
sub
fwait
mov
push
cmp
inc
das
mov
fwait
mov
popf
lcall
js
push
sub
gs
cmp
enter
das
jmp
mov
push
fs
push
lods
mov
pop
xlat
cli
cmpsl
dec
xchg
loop
mov
jmp
std
mov
cmp
ds
jno
pop
scas
mov
mov
and
leave
mov
je
fmuls
ficoml
mov
push
jmp
daa
dec
fwait
pusha
cmpsl
push
jmp
inc
call
add
call
addr16
and
push
sub
cmp
cltd
mov
cmp
sbb
mov
or
stc
outsb
dec
xor
xchg
xorl
jb
mov
ja
pop
add
lock
or
push
mov
test
and
pop
mov
push
ret
sbbb
in
mov
push
sar
mov
mov
cmc
leave
mov
lret
add
sbb
pop
aas
pop
xchg
pop
dec
ds
pop
push
sub
inc
mov
cwtl
movsl
mov
mull
push
mov
pop
jne
fs
inc
icebp
dec
sarl
push
or
dec
daa
nop
mov
fwait
or
add
fisttps
sub
mov
xor
fwait
rolb
pop
loope
aaa
and
dec
sub
cmp
lds
sbb
shr
ret
arpl
cmp
repnz
sub
imul
push
dec
daa
popa
or
es
push
pop
jns
mov
push
frstpm(287
xchg
and
sahf
scas
sbb
inc
sub
fidivrs
mov
lahf
shrl
mov
in
cmp
sbb
cld
fmuls
das
repnz
rorl
jmp
mov
in
popa
lahf
idivb
xchg
jo
xchg
jns
xor
sbb
or
insl
cmp
adc
scas
lahf
cmc
inc
ret
jae,pt
jmp
sub
pop
mov
jns
mov
bound
sbb
es
xor
mov
sahf
out
mov
sti
jo
idivb
mov
dec
mov
hlt
push
iret
lahf
jb
pusha
insl
adc
pop
dec
das
push
pop
ficoml
sub
sub
cltd
gs
ljmp
out
push
dec
add
sub
aam
test
pop
dec
sbb
mov
divb
lret
fmull
iret
pusha
pushf
adc
mov
add
pop
mov
mov
push
mov
jmp
add
sub
mov
enter
out
fdiv
jne
jmp
movsl
addb
movsb
inc
dec
lds
lahf
jne
pop
adc
stos
jo
xchg
and
or
mov
inc
nop
in
lock
cmp
or
gs
sbb
mov
pop
pushf
mov
mov
mov
push
fstpt
gs
repnz
ja
cld
ljmp
xchg
insb
push
lcall
adc
xchg
lods
mov
or
popa
das
mov
or
inc
cmpsb
lods
or
pop
idivl
sbb
push
shl
movb
fidivrl
xor
fidivrl
mov
pop
jno
mov
inc
jge
mov
mov
out
jns
pop
cmp
test
scas
pop
sbb
fidivl
es
outsl
lods
rcr
mov
sub
cli
dec
mov
mov
mov
jb
es
shlb
pop
ficompl
cmc
mov
stos
jge
inc
lods
push
dec
dec
cld
pop
inc
in
mov
hlt
aam
loop
adc
outsb
mov
pop
pop
dec
in
fsubrs
das
int3
das
sbb
sbb
pusha
into
fidivrl
or
or
aam
mov
jbe
push
fdiv
rcr
jge
sbb
test
out
pushf
mov
js
mov
mov
mov
sub
enter
imul
nop
mov
nop
vcmpps
add
adc
les
cmc
imul
out
in
std
push
sbb
cli
imul
inc
and
mov
sbb
stos
push
dec
mov
scas
test
push
sti
mov
cmp
jg
repz
mov
add
mov
cmpsl
pop
add
or
mov
xchg
movsb
xchg
fidivrs
shr
lret
rcrb
xor
xchg
cmc
dec
js
xor
repnz
adc
inc
imul
mov
inc
mov
andnps
jno
xchg
xchg
mov
cmpsl
fcmovbe
dec
mov
mov
or
inc
outsl
sbb
cli
add
push
dec
cli
push
or
cmpsl
mov
jg
dec
dec
fdivrl
mov
dec
out
icebp
push
int3
mov
aaa
dec
into
daa
lahf
lods
xchg
mov
add
mov
repz
push
fidivrl
mov
mov
xlat
and
add
or
ficoml
das
adcb
aaa
dec
add
pop
mov
mov
xchg
add
ret
cmpsl
mov
cmpsl
jns
jns
out
pop
out
sub
xor
mov
adc
push
mov
xor
push
lea
cmp
cmp
loop
arpl
pushf
popa
mov
leave
xor
out
mov
insl
push
pusha
in
cli
mov
dec
xchg
xor
cmp
pop
inc
pushf
es
push
mov
lcall
out
or
mov
ds
mov
or
pop
es
dec
js
mov
fstl
sub
sahf
mov
ss
dec
pop
mov
inc
sbb
fwait
mull
in
js
and
sub
pop
cmp
adc
jmp
pop
jecxz
and
push
imul
pop
insl
add
test
push
push
jbe
cld
out
stos
movsl
pop
stos
cli
hlt
aaa
dec
fucomi
shl
or
pop
in
pop
or
out
daa
fsts
xor
mov
and
dec
shlb
push
add
fildll
cmpsl
sub
lret
mov
pop
out
imul
push
mov
mov
jmp
pop
mov
inc
xchg
cs
lret
fcmovnu
daa
rcrb
mov
fsubrp
icebp
stos
or
mov
lea
or
lahf
add
out
sahf
adc
psubsb
and
dec
add
pop
jns
flds
mov
lcall
sub
sub
outsb
scas
dec
mov
repnz
and
push
dec
loope
into
mov
adc
xchg
cs
or
loopne
pop
xlat
mov
xchg
xor
fstp
dec
scas
sub
sbb
aaa
out
fcmove
insl
cmpsb
fwait
mov
cmp
push
push
jmp
sub
pop
xchg
daa
pop
push
adc
test
lods
dec
popf
nop
pop
xor
mov
xchg
push
cld
adc
add
mov
dec
lcall
jnp
mov
mov
stos
pop
push
mov
into
repnz
stos
fcmovnu
loop
mov
ljmp
jno
mov
lods
stos
cltd
ret
jl
imulb
loop
imul
ss
push
cltd
pop
dec
add
out
fistl
and
push
loop
push
mov
cmp
ss
gs
popf
adc
in
mov
jnp
arpl
aam
pop
shl
jbe
fidivrs
stos
mov
mov
shll
jo
cld
dec
gs
mov
fisttpl
xor
sbb
sub
lahf
sbb
mov
adc
das
xor
adc
shl
push
push
pmullw
xor
fwait
sti
xchg
cmp
push
inc
mov
in
rcrl
sbb
and
cs
fs
cli
mov
imul
or
mov
std
enter
jmp
dec
repz
push
mov
sbb
sbb
or
dec
in
sub
loope
xor
pop
adc
mov
sar
test
ficoms
aaa
pop
ret
sub
adc
stos
push
add
sbb
lods
lret
sti
jb
icebp
mov
repnz
lds
aam
dec
jae
insb
clc
push
sub
in
or
mov
inc
jo
outsl
popa
mov
subb
sub
enter
fwait
sbbb
xchg
lcall
movsl
inc
or
and
xor
add
cmc
mov
les
test
fincstp
inc
push
push
and
adc
xorb
jno
lods
mov
adc
sub
fs
mov
aam
mov
jae
dec
mov
mov
test
loopne
lcall
popf
fs
mov
rolb
jl
data16
imulb
popa
adc
sbb
ss
pop
and
bound
mov
mov
xor
inc
repz
fimull
insl
mov
pop
inc
jl
lret
add
fmuls
cmp
mov
sbb
incl
push
push
push
dec
mov
jp
cmp
mov
sbb
and
pop
int3
clc
fildl
mov
dec
popf
out
in
push
xlat
and
dec
pushf
mov
inc
andb
dec
test
addr16
pop
or
ljmp
cli
xchg
push
mov
cmp
cmpsl
mov
mov
xlat
mov
ja
or
call
repz
cmc
and
fwait
cmp
or
loopne
xlat
push
xchg
fimuls
cltd
add
mov
or
push
mov
xor
iret
sbb
fistl
push
ret
xor
lods
cwtl
iret
stc
repnz
cli
data16
movsl
add
push
movsl
daa
mov
testb
jmp
ds
jecxz
in
and
cmp
xor
mov
lret
jns
or
cmp
sbb
dec
push
xchg
clc
insl
cmp
dec
xchg
aas
sub
mov
fnstcw
scas
stos
ja
xchg
insl
inc
cmp
jge
inc
pop
jo
in
xchg
and
in
mov
data16
or
jge
or
popf
xchg
xchg
in
cmp
xchg
inc
cmpsl
or
or
mov
lahf
data16
jnp
stc
xchg
sbb
pop
mov
push
sub
iret
jns
and
fsubrs
insb
aaa
xlat
lret
ljmp
push
mov
insb
dec
adc
or
xor
mov
or
call
mov
aad
into
lock
and
xchg
add
in
leave
mov
pop
movsl
loop
mov
or
cmp
ds
rol
cmc
add
mov
mov
ret
movl
lods
fiadds
mov
into
jo
jmp
mov
xor
cmp
mov
xor
adc
cmp
jl
add
jmp
jae
mov
leave
sbb
sbb
ret
cmp
sbb
inc
mov
or
xor
jmp
jp
repz
fdecstp
mov
and
mov
jecxz
sub
lret
inc
gs
movsl
add
stc
mov
mov
cmp
cmp
dec
sub
pop
xchg
dec
shlb
inc
dec
add
dec
divl
inc
enter
sub
cmp
aaa
jne
push
stos
fimuls
jmp
cmc
jb
scas
lret
or
lods
mov
cmp
fwait
pop
jo
cwtl
push
loope
jmp
pop
aaa
ffree
adc
or
push
push
push
jbe
cmp
repz
dec
mov
push
mov
and
xor
cmpsl
dec
fists
xchg
sbb
lcall
mov
push
pop
and
xchg
lret
dec
dec
test
cmp
enter
shr
cmc
or
xchg
arpl
push
pushf
sub
mov
scas
push
test
shrl
out
movsb
push
pop
mov
push
pop
mov
xchg
pop
lret
pop
or
inc
and
je
adc
mov
inc
aaa
dec
mov
rcrb
jno
pop
cmc
push
das
inc
lods
pusha
repnz
sbb
push
jne
xchg
inc
push
call
or
jecxz
cmpb
xor
bound
es
or
add
mov
or
test
dec
ficoml
inc
push
or
mov
or
testb
adc
cmpxchg
jg
out
pushf
sbb
xor
adc
pop
add
inc
or
cli
xchg
repnz
pop
sub
cltd
jg
xchg
xchg
add
xchg
nop
pushw
push
push
pop
inc
mov
mov
popl
xchg
es
jmp
xor
xor
push
fdivrs
sub
xor
stc
inc
xchg
inc
pop
sbb
jns
in
outsb
push
lock
add
mov
push
sbb
adcb
adc
js
xchg
insl
jl
test
test
stc
push
pop
xorl
fsubl
push
mov
pop
or
rorl
shll
and
jns
insl
stc
jmp
xchg
jle
cld
cmp
nop
xchg
jne
outsb
add
jecxz
pop
sbb
and
fbstp
gs
pop
dec
push
fwait
mov
sub
dec
adc
push
mov
xchg
lea
leave
cld
cs
pop
jo
mov
dec
ljmp
leave
pop
xchg
adc
clc
pop
mov
in
sub
and
test
rorl
xchg
pop
fwait
leave
jns
mov
mov
dec
pop
adc
lock
jge
push
call
enter
pop
xor
fnstsw
pop
cmpb
mulb
and
xor
arpl
ret
addb
jno
sbb
sub
mov
sti
xor
push
out
jno
call
jns
lahf
or
sub
or
adc
in
arpl
sub
mov
mov
add
pop
outsb
pop
enter
pop
sub
mov
mov
and
sub
and
shll
popa
cmpsl
popa
xor
jle
and
mov
sub
xchg
sbb
push
push
dec
lds
sarb
jmp
sub
arpl
add
and
loop
push
xor
lret
sub
adc
cmp
fistl
pusha
sub
pop
pop
lret
repnz
test
jg
cmp
cmpb
int
out
adc
leave
fildl
mov
pop
adc
insl
adc
dec
clc
cmp
ficompl
mov
pop
mov
outsb
arpl
lods
shlb
mov
jbe
lds
adc
hlt
out
xor
sti
in
sti
mov
and
sti
sub
fidivl
dec
outsl
jae
jo
addb
push
shll
cmc
inc
mov
jle
icebp
dec
cwtl
rcll
pushf
adc
rcrb
push
call
push
push
and
rcl
mov
lret
into
lcall
bound
cmp
enter
or
enter
xor
pop
inc
fnstsw
push
push
xorl
push
push
ret
lea
xchg
sub
data16
jmp
or
mov
xor
cmc
ret
sbb
lahf
mov
sbb
xor
adc
sub
or
insb
out
fidivrs
stos
lcall
push
addb
inc
pop
mov
jl
sbb
jl
es
arpl
test
mov
lods
les
or
test
jno
loopne
shl
mov
mov
into
loop
shrl
orb
push
test
add
std
jbe
push
imul
lcall
lret
push
ljmp
lods
and
or
aam
mov
lods
stos
int3
int
or
dec
mov
add
cmp
mov
aam
xchg
pop
repnz
pop
jnp
sbb
xor
inc
or
xor
mov
out
mov
mov
mov
adc
shr
ret
and
sbb
mov
movsl
push
xor
add
shl
ljmp
lock
xchg
sub
movsb
sub
sbb
cmp
cld
pushf
mov
inc
mov
pop
fwait
stc
adc
adc
push
add
out
xchg
mov
test
je
test
xchg
push
int
out
mov
fdiv
jge
inc
sarl
sbb
bnd
lcall
pop
test
xchg
es
bound
push
inc
mov
push
stos
lods
push
ds
pop
push
dec
sti
mov
icebp
and
sub
pop
jle
lret
leave
mov
out
popa
and
cmp
xor
cld
loop
out
sub
push
rclb
in
xlat
lcall
mov
or
push
mov
nop
insb
add
mov
test
mov
xchg
rorb
add
scas
mov
push
mov
lahf
shlb
ljmp
les
push
paddq
xor
aad
scas
lret
out
es
mov
add
ss
iret
nop
test
jno
sbb
inc
inc
add
xchg
aam
mov
xchg
inc
push
adcl
mov
aas
add
loopne
mov
mov
mov
push
shll
hlt
dec
lods
rclb
aas
notb
cltd
push
sub
sub
xor
cmpsl
jno
add
mov
scas
push
cmp
lods
sub
xchg
jmp
cmpsl
ja
cmpsl
mov
icebp
push
mov
aaa
mov
dec
clc
adc
icebp
mov
insb
dec
push
sub
dec
fwait
aad
lcall
lods
mov
cmp
incl
insb
enter
sbb
pop
jmp
scas
js
aam
test
out
xchg
jge
push
mov
pop
into
xchg
add
popf
jns
pop
sbbb
inc
add
fldenv
dec
shll
jp
outsb
mov
std
mov
xor
adc
arpl
sub
mov
xorb
ljmp
fldenv
ja
sbb
sbb
inc
and
mov
rol
in
iret
test
cli
aam
or
and
aam
xchg
mov
mov
sub
icebp
pop
stc
dec
add
ss
add
pop
lret
or
outsl
mov
push
cmp
sub
lret
or
dec
out
cmp
adc
xor
rorb
pop
cmovnp
xor
fwait
sbb
jno
je
aas
dec
fists
mov
inc
add
or
notb
cmpsl
push
cwtl
mov
xor
dec
push
dec
mov
jo
xchg
scas
sbb
sbb
mov
cmc
clc
iret
fwait
jb
pop
add
xchg
mov
jo
inc
mov
push
adc
fldt
xor
add
cmpsb
inc
or
xor
ljmp
sahf
enter
xor
inc
out
mov
stos
inc
ds
sahf
fidivl
and
pop
fsubrs
push
js
xchg
loop
mov
mov
pop
lock
pop
stos
mov
xor
cld
rclb
add
mov
xchg
xor
pop
fdivrl
adc
pop
lds
cmp
popf
and
fcmovbe
mov
push
jmp
mov
adc
jmp
xor
push
cmp
push
inc
aad
clc
std
ds
jb
movsb
stos
repnz
in
mov
pop
fidivrs
mov
insb
jle
out
insb
pusha
sub
lret
adc
scas
pop
stc
jbe
cltd
aaa
xor
pop
xchg
push
add
pop
insl
cs
out
aaa
sbb
fcomps
nop
push
es
pop
mov
xchg
in
imul
ds
daa
lods
call
inc
push
pop
push
fidivrs
sbb
loopne
jns
cs
jle
cld
fsubrl
loop
push
sbb
mov
push
ret
and
mov
popa
mov
add
std
xor
fdivp
sar
and
sar
loopne
fmull
sub
mov
stc
cmp
add
jmp
lods
add
xchg
bound
mov
xchg
pop
enter
aam
pop
adc
lahf
pop
xchg
in
inc
mov
xchg
insb
in
cmpsb
rclb
orb
jno
xchg
and
jl
add
xorl
cmpsl
pusha
pop
xchg
adc
ljmp
mov
test
cli
push
xor
add
mov
lahf
sub
mov
mov
sub
mov
and
and
aam
lahf
add
and
mov
xor
in
mov
pop
xor
sub
inc
xchg
dec
lock
add
stc
shrb
jg
dec
mov
ficoml
fidivrl
push
cmp
jnp
inc
call
fnstsw
jmp
add
test
mov
std
call
nop
and
or
lock
cmp
xor
mov
lds
adc
roll
mov
int3
mov
mov
jns
lock
push
fwait
in
mov
cld
loope
ret
push
mov
out
mov
leave
and
mov
aas
fwait
or
or
sub
pop
sarl
movsb
sahf
mov
cld
hlt
or
mov
jge
fcoml
lock
adc
sarl
inc
pop
dec
ja
out
and
iret
push
sti
xor
pop
mov
jns
daa
stos
cmp
adc
xchg
sub
xor
mov
stc
dec
mov
mov
and
mov
xchg
cmp
pop
jge
mov
out
cs
jb
mov
es
jb
cmp
hlt
daa
jo
loop
insb
movlps
mov
push
das
pushf
add
ficoms
xlat
movsl
cmc
and
xchg
mov
fsubl
popa
fmuls
das
sahf
fwait
push
mov
imul
hlt
ss
sub
mov
ds
or
fsts
decl
push
pop
dec
mov
sbb
cld
cmp
fs
push
out
lock
daa
ss
pop
sbb
popf
mov
stos
cwtl
pop
cmp
faddp
add
push
cmc
lods
jns
pop
jl
shrb
sub
loop
test
xor
dec
mov
icebp
sbb
pop
mov
mov
mov
inc
gs
dec
inc
out
test
sti
sbb
adc
push
jecxz
leave
popf
xchg
lods
sub
or
lret
test
push
insb
pop
inc
test
pop
sub
push
jl
in
stc
shll
imul
lahf
cmp
push
cmp
imull
jle
inc
jmp
push
sbb
out
adc
push
divl
clc
enter
dec
mov
les
mov
adcb
jecxz
xor
push
lods
xchg
sub
cmpsl
out
or
xor
insl
push
jp
orb
inc
adc
jo
mov
mov
stos
or
movsb
stos
dec
xchg
fisubrl
cmp
test
icebp
ds
dec
mov
push
arpl
push
stos
fstl
push
adc
ds
jns
iret
pop
lock
xchg
ret
dec
mov
into
push
cmp
stos
or
sub
mov
or
dec
out
lret
adc
push
push
mov
iret
or
ret
dec
sbb
test
mov
xchg
dec
sub
or
jg
cmp
into
inc
adc
gs
fiaddl
adcb
sub
aaa
sarb
inc
lret
jecxz
mov
jge
lock
cmp
ficoml
js
notb
je
or
pop
push
jb
rorb
push
pop
fdivrl
leave
insb
lods
fwait
mov
lret
pop
int
mov
test
pushf
push
fisubl
push
dec
dec
aas
lret
sub
fisttpll
pusha
mov
cmp
jno
pop
ds
fidivs
cmp
aaa
add
in
jecxz
push
push
addb
ss
aas
insb
xchg
lea
dec
xchg
pop
push
insl
rclb
in
sub
repz
push
cmp
xor
sub
pusha
add
je
repnz
cmp
andb
xchg
xchg
push
xor
dec
arpl
lods
lock
xchg
aaa
fsubs
add
pop
adc
lret
or
jb
mov
je
pusha
jge
in
iret
out
lock
fidivrl
sub
pop
decl
roll
out
int3
xchg
push
sub
pop
ret
pop
test
mov
mov
cmpsl
dec
pusha
mov
decl
daa
mov
sub
in
out
fldcw
mov
fstpl
stos
pop
fwait
dec
mov
mov
add
mov
xchg
divl
cmc
sti
in
lret
shr
lea
ficoms
adc
out
jns
push
aad
mov
or
sbb
adc
out
out
jecxz
mov
cmp
mov
cli
mov
xchg
sub
addr16
enter
sub
or
ret
adc
js
cmp
fcomps
or
push
push
ja
dec
sub
or
jo
add
pop
jecxz
and
nop
cmp
jno
mov
jle
jge
pop
leave
pop
bound
dec
pushaw
sub
fiaddl
jle
insb
mov
and
pmullw
push
fadds
mov
cmp
inc
repnz
sub
xchg
xor
pop
lret
imul
insl
cmc
xchg
pop
pop
or
fwait
lret
mov
ficoml
mov
fwait
dec
mov
inc
inc
mov
pop
shl
imul
mov
mov
xchg
pop
sub
fstp
dec
in
jns
mov
dec
sarl
mov
int
sbb
les
shrb
js
lcall
movsl
dec
pusha
rcpps
pop
icebp
add
fimull
pushf
inc
mov
and
ficoms
xchg
addr16
in
insl
fidivrs
xor
flds
pop
mov
ds
enter
aam
pop
or
jle
sbb
xchg
dec
xor
and
fwait
stc
sbb
les
lret
hlt
push
inc
mov
rep
mov
dec
iret
pop
paddb
popa
nop
sub
mov
aad
in
jb
iret
mov
add
adc
cltd
pop
fdivrs
leave
xor
add
jp
xchg
cmp
jbe
sub
xor
cwtl
pop
add
sahf
aas
dec
shrb
push
sub
out
divl
xor
cmc
cmp
sbb
insl
movsb
icebp
outsl
shlb
mov
inc
and
dec
jo
or
jne
add
and
sbb
ret
xchg
sub
pop
jns
stc
mov
cmp
xchg
dec
push
out
mov
test
adc
jge
rol
out
jl
stos
repnz
adc
leave
das
imul
jmp
adc
sarb
pushf
pop
adc
je
pop
mov
imul
mov
and
mov
pushf
js
xchg
mov
mov
lahf
je
add
movsl
xchg
dec
sti
in
jge
lock
mov
or
cs
add
sbb
mov
jo
jle
mov
das
stos
call
es
cmp
or
pop
dec
mov
mov
dec
mov
push
roll
sahf
shlb
mov
mov
mov
cmp
cmp
insb
inc
sub
arpl
pop
idiv
pop
mov
lods
sti
test
sbb
mov
in
ret
mov
rcr
mov
push
push
stc
outsb
pop
in
or
dec
mov
push
das
cld
shlb
jo
jns
mov
shrb
mov
dec
mov
xchg
and
es
adc
push
cs
mov
or
xor
mov
cltd
in
inc
test
inc
ret
mov
ljmp
pushf
adc
popa
fisttpl
iret
movb
movsb
aaa
pop
test
adc
jae
ror
push
mov
sub
push
data16
pop
cmp
xchg
sub
loope
pusha
dec
jg
fwait
cs
inc
jno
xor
insb
sti
or
aad
jp
gs
jb
ret
call
pop
pop
push
push
inc
dec
mov
addb
das
sbb
and
mov
pop
loop
xchg
insl
sub
in
dec
pop
cmp
loope
in
fidivrs
dec
mov
outsl
dec
mov
test
or
rcl
call
scas
fnsave
dec
inc
push
adc
jns
mov
push
mov
das
popa
or
lods
orl
rcl
cmp
test
pop
rolb
inc
xor
fs
xchg
icebp
pop
xchg
jns
dec
movsl
pop
cmp
in
lahf
add
outsb
icebp
lds
adcb
loop
shll
push
pop
sti
pop
ja
aaa
or
cmpsb
stos
mov
bound
rcrb
fimuls
mov
shll
popa
mov
ret
pop
mulb
inc
incl
outsl
cmp
jbe
sub
cmp
inc
push
repz
xor
insl
jae
push
mov
mov
xchg
or
sub
inc
mov
or
popf
mov
leave
repnz
xor
xorb
test
mov
cmpsl
push
cmp
sbb
sbb
imul
or
cmp
xor
outsl
lods
imul
inc
ljmp
xchg
push
sub
int3
stc
scas
cmp
gs
add
ss
sbb
cmc
inc
xchg
fwait
mov
lret
lcall
in
data16
or
mov
sub
cmp
daa
sub
daa
adc
add
jno
sbb
sbb
xor
sbb
es
fcoms
fidivl
push
mov
cltd
and
mov
lods
dec
sbb
sbb
inc
dec
jns
xchg
pop
mov
fsubp
push
adc
pop
test
jle
cmc
mov
push
mov
mov
cmp
mov
mov
loopne
dec
jmp
movsb
jge
dec
mov
int3
xchg
or
cmp
inc
mov
ret
lods
sub
lcall
xor
jl
int3
stos
pop
inc
dec
sub
or
xchg
mov
cmpsl
in
push
daa
inc
orl
sub
jmp
push
out
lds
fwait
jno
stos
scas
adc
pushf
dec
pop
test
xchg
stos
pop
push
push
xchg
xor
mov
xlat
mov
sub
or
shrb
push
mov
test
sbb
in
xor
jmp
rcrb
mov
repnz
dec
jne
mov
or
mul
imul
rcr
pop
insl
jo
sbb
mov
aas
xor
insb
sahf
js
inc
inc
sbb
jge
movsl
add
mov
xor
mov
push
cmpsl
ss
or
movsl
and
mov
loop
aaa
out
out
xchg
les
negl
outsl
popf
mov
mov
mov
push
jmp
lds
mov
jmp
xchg
dec
fstl
jo
shll
sbb
orb
dec
mov
dec
adc
insb
fwait
sahf
cmp
popa
cmpsl
ja
subb
xchg
fidivrs
ret
faddp
pop
test
subl
push
sbb
mov
adc
test
test
fisubrl
cli
add
inc
add
test
out
mov
push
ja
xor
test
mov
inc
sub
sub
clc
pop
popa
jmp
xchg
repz
adc
insl
mov
pop
mov
push
cltd
inc
ret
test
adc
dec
sub
pop
mov
arpl
mov
sbb
out
cltd
loopne
jecxz
mov
lods
lds
adc
adc
test
xor
sbb
outsb
mov
mov
pop
popa
leave
sub
lret
push
or
aaa
test
pop
pop
cmp
movsb
xchg
test
es
cmc
or
jle
or
add
popa
dec
mov
pop
pop
fildl
cltd
mov
mov
push
popa
hlt
cs
outsb
dec
sti
pop
orb
std
cmp
je
enter
cld
fdivr
sub
push
or
pop
xchg
push
jno
sbb
dec
lcall
push
adc
push
xor
data16
mov
mov
call
cmp
mov
fisubrs
call
dec
pop
push
pushf
mov
clc
pop
push
movsb
mov
sub
incb
lea
out
pop
cmpsl
or
jae
inc
in
cmp
iret
jae
jnp
flds
push
mov
xchg
pop
jmp
in
sti
mov
loope
inc
fcompp
dec
sub
daa
sub
cwtl
adc
ljmp
lahf
sarb
sbb
pop
jl
push
ret
cmp
out
mov
or
jecxz
jns
aad
jae
cltd
push
mov
sti
ret
cmp
ds
data16
outsl
cs
mov
out
sub
mov
mov
mov
fwait
jmp
cmp
dec
nop
or
jns
mov
scas
gs
pop
mov
adc
xchg
dec
inc
pusha
cmp
sbb
jl
inc
jae
pop
xor
mov
and
adc
jnp
pop
add
xchg
mov
jno
incl
cli
push
ret
adc
nop
inc
pop
pop
mov
psrlw
pop
stos
sbb
dec
addl
adc
mov
or
popf
cs
and
mov
out
jmp
fiaddl
mov
mov
bound
xor
mov
push
insl
push
inc
inc
ret
mov
sahf
push
into
sbb
push
arpl
sub
or
xchg
mov
dec
sbb
shrb
js
mov
nop
pop
adc
mov
mull
inc
or
jg
andl
or
pop
xor
or
fcoml
sub
or
jb
lret
stc
fisttpl
test
sbb
adcb
jmp
mov
mov
int3
and
mov
daa
das
xchg
xorb
rcrb
out
xchg
pop
xchg
stos
inc
pushf
mov
xchg
out
ret
cmp
xor
addr16
fiaddl
inc
ljmp
xor
push
cmpsl
mov
mov
pop
mov
leave
xchg
cmpsl
fcmovb
lea
xchg
push
lods
mov
mov
rcrl
mov
lret
sarl
out
jg
test
push
or
inc
bound
adc
insl
cmp
jge
clc
push
cmp
sahf
pop
hlt
lcall
mov
call
insb
aas
sub
or
push
adc
scas
movsl
and
mov
xchg
xor
outsb
pop
mov
push
mov
pop
enter
mov
fdivr
daa
popa
push
sbb
ret
mov
dec
ret
xchg
arpl
std
sbbl
loop
shrl
inc
std
ds
lods
sub
inc
les
add
add
dec
dec
mov
fwait
lock
mov
ja
enter
jmp
insl
ret
ljmp
js
in
xchg
and
std
push
test
aas
pop
hlt
xor
adc
sub
mov
pop
pushf
jne
lea
cmp
jg
and
xlat
sbb
out
and
int3
xchg
mov
icebp
mov
or
push
fs
adc
inc
sarl
push
xor
dec
fidivrs
or
in
mov
mov
pop
das
in
mov
inc
lret
loop
scas
sbb
das
xchg
int3
sub
jne
testl
xchg
dec
imul
xchg
pop
mov
inc
jns
aam
cwtl
mov
pop
dec
add
mov
iret
mov
bound
cmp
popa
push
push
pop
lret
pop
ficoms
cmp
std
pop
jmp
push
inc
cmp
jno
ficomps
adcl
popf
orl
add
test
mov
xor
xor
fnstenv
add
cmp
out
mov
inc
ficompl
mov
sub
adc
and
fcoml
or
push
notrack
mov
push
xchg
cmp
pop
mov
aaa
mov
movl
mov
rcr
repnz
or
dec
mov
fisubrl
insb
ret
and
xchg
xchg
adc
pop
mov
or
fists
imul
push
sub
stos
out
push
jns
xchg
pop
aas
int
jp
fimull
ficomps
xchg
stos
mov
jnp
adc
mov
and
fldt
xlat
adc
sbb
xchg
dec
push
push
lock
pop
jnp
adc
jno
roll
ss
imul
scas
nop
xchg
adc
jmp
divb
cs
ss
pop
into
sub
shrb
mov
mov
cwtl
xchg
dec
xchg
sub
test
mov
jnp
fsub
pop
sbb
and
adc
or
cmp
jne
dec
orb
sub
mov
cmp
jl
daa
fld
arpl
or
jne
adc
or
cmc
sbb
sbb
xor
mov
cmc
pop
aam
or
movsl
repnz
jnp
cmp
mov
sbb
sub
sub
rsqrtps
mov
mov
mov
pop
lea
inc
push
ljmp
fisubl
jmp
test
insb
add
dec
pop
stc
adcl
pop
loopne
pop
mov
mov
call
mov
mov
push
push
or
jb
cltd
es
xor
mov
js
loopne
mov
negl
jb
dec
xor
mov
imul
mov
rolb
scas
out
cltd
push
add
mov
pop
cld
mov
xor
enter
pop
and
dec
push
pop
mov
stc
dec
outsb
lcall
ficoml
jae
cmp
repz
mov
out
and
fwait
xor
mov
call
and
pop
or
in
daa
pop
mov
enter
mov
xchg
mov
dec
add
add
insl
test
pop
mov
adc
outsb
mov
pusha
gs
dec
jo
push
and
insl
xor
test
xor
out
mov
adc
add
sub
bound
leave
js
sbb
push
lahf
mov
call
fisttpl
xlat
xchg
or
xor
lods
pop
xchg
cs
test
sub
sti
loopne
ficompl
jg
sbb
jle
or
insb
or
repnz
xor
inc
push
int3
ret
jl
imul
arpl
in
lds
rorb
mov
cli
lea
jns
popf
cmpsl
mov
ljmp
jno
cs
dec
jb
js
xchg
test
aam
jle
cmc
push
sbb
lret
pop
notl
jg
out
xor
dec
mov
insb
pop
lds
mov
and
aad
ret
movsl
mul
testb
push
pop
jne
fisttpl
or
inc
int
sbb
pop
loopne
pushf
or
dec
mov
cmpsl
lcall
insl
mov
push
mov
xchg
dec
push
dec
xor
pop
mov
gs
out
push
push
inc
repnz
repnz
lods
loop
add
or
pop
push
sub
dec
xchg
cmp
xchg
inc
mov
push
test
jbe
lret
or
nop
mov
fwait
aam
pop
mov
xor
sub
neg
icebp
fldenv
in
popa
sub
adcl
out
cld
sbb
in
or
mov
adc
nop
js
ss
cwtl
pop
loopne
call
add
or
and
push
mov
push
movl
jecxz
add
and
rorb
push
add
popf
sbb
fstps
andl
insl
dec
out
cmp
in
test
push
aam
mov
push
push
call
lret
push
add
cmp
inc
std
pop
aaa
aad
dec
mov
push
lds
push
ja
scas
add
lods
mov
lods
sub
pop
fstpt
push
cwtl
mov
mov
mov
popa
pop
dec
pop
add
aas
and
pop
mov
and
push
ljmp
insb
es
pop
test
jo
mov
or
jl
mov
lock
fisubl
btr
cs
and
lds
lahf
insb
xor
fstp
hlt
jns
xchg
or
addl
fisubl
cmp
cmc
mov
test
pop
inc
mov
xor
push
or
or
push
mov
add
mov
and
add
pop
adc
mov
imul
fmuls
or
mov
xchg
dec
dec
mov
mov
mov
sub
mov
xor
mov
outsl
pop
xor
shrl
in
stos
movsb
gs
cmp
roll
lods
xchg
stos
sahf
jne
xor
popa
pusha
jl
dec
iret
sub
and
in
fldcw
stos
int3
cmp
jns
mov
idiv
sbbb
pop
jp
mov
cmpl
cmp
insb
lods
mov
cmc
loopne
inc
jns
iret
mov
sti
xchg
push
fidivs
push
xchg
aas
inc
pop
jbe
insb
mov
fiaddl
push
jmp
mov
popf
xor
push
pop
xor
sub
or
push
mov
imul
mov
pop
mov
imul
je
mov
addr16
pop
cs
xchg
xor
mov
shrb
in
add
push
out
sub
add
inc
jne
mov
jno
dec
mov
pop
stos
jno
adcl
js
int
movsl
notb
aaa
mov
jae
sub
jns
or
pop
test
or
or
imul
pop
pop
pop
mov
push
mov
mov
js
cmp
pop
icebp
push
push
adc
xchg
dec
in
mov
add
iret
mov
inc
pop
int3
scas
rol
and
pushf
inc
dec
sub
movsl
push
mov
jle
movsb
mov
cmp
lea
scas
lods
inc
repnz
fwait
jmp
mov
mov
add
add
mov
dec
fidivs
mov
cld
xor
sysenter
mov
nop
or
lret
or
sbb
lret
xchg
inc
push
mov
jmp
fstps
jge
cmp
pusha
xor
call
cmp
dec
ss
fldenv
jp
sub
mov
cmp
outsl
adc
rclb
push
loop
pop
pop
pop
xchg
lds
fisubrs
xorl
ficompl
and
dec
or
mov
int
xchg
stc
fstl
sub
mov
mov
mov
xor
mov
mov
xchg
mov
xchg
daa
cmp
cmp
jl
xor
cltd
mov
adc
mov
ss
jae
push
aaa
add
movsb
or
or
cmp
std
mov
popa
jns
mov
add
sbb
cwtl
insb
imul
adc
mov
daa
mov
std
js
icebp
jmp
jno
hlt
inc
outsb
lea
shlb
pop
iret
add
mov
movsl
fwait
sbb
imul
pop
inc
test
movsb
sbbb
fidivrs
fistps
fisttpl
lret
and
xchg
lcall
ficoml
xor
ljmp
sub
mov
add
inc
cmp
pop
lret
dec
or
cmp
popa
fisubrl
lock
pop
dec
divl
mov
sub
lods
es
cmp
imul
cld
les
pop
cmpsl
inc
arpl
mov
std
and
sbb
and
mov
repnz
cmp
or
xchg
mov
push
fstp
lods
cli
jns
cmp
push
adc
call
mov
mov
lret
fildl
add
test
jge
xor
rolb
mov
adc
xor
mov
mov
lock
dec
popa
push
xchg
fsubrs
out
hlt
xor
aam
or
jns
lods
inc
xchg
nop
and
ds
ret
mov
fs
cld
lahf
lods
int3
adc
mov
mov
xor
xor
xchg
jmp
xor
dec
push
imul
fnstenv
sbb
pop
inc
mov
aaa
lods
dec
pop
sub
stc
in
push
lret
fcmovne
mov
cmp
xchg
mov
xchg
dec
mov
cmp
sbb
cmpsb
xchg
hlt
iret
aaa
sub
loopne
mov
imul
adc
js
push
fcompl
sbb
cmp
ficoms
cli
in
xchg
or
fildl
mov
cmp
sbb
test
sub
stc
aad
aam
mov
sbb
stc
add
imul
int
push
pop
cmp
add
xor
inc
std
outsl
sti
dec
leave
fisubrl
stos
sub
mov
mov
lods
jl
mov
repnz
mov
ficompl
mov
add
xor
nop
jecxz
mov
push
push
pop
cld
sbbl
sbb
mov
idiv
jo
js
stc
lahf
xchg
outsl
and
sub
jb
push
pushl
fwait
xchg
in
adc
mov
loope
scas
imul
icebp
test
jo
push
in
push
mov
aaa
je
and
test
clc
loop
sbb
out
out
popl
push
mov
iret
mov
in
or
sbb
push
out
imul
rclb
sub
call
aaa
imul
repz
hlt
arpl
mov
sub
lods
push
es
jbe
les
pop
repnz
sbbb
push
mov
lods
fs
adc
jmp
js
lret
bndstx
add
inc
sub
test
js
psubusw
push
mov
xchg
mov
inc
pop
push
mov
jne
aaa
rcrl
inc
lea
xchg
push
out
pmuludq
clc
mov
mov
sbb
arpl
push
test
jg
jns
xchg
xor
in
fstl
hlt
in
xor
test
ret
pop
push
xor
pop
bound
rcr
pop
lods
adc
mov
xchg
pop
push
dec
mov
push
insl
mov
xchg
mov
adc
sub
add
adc
cs
dec
sbb
aam
test
mov
test
xor
mov
fbld
lret
fwait
mov
push
xchg
cmpsb
push
mov
jae
mov
lret
adc
adc
push
or
sbb
lods
push
sbb
mov
test
pop
imul
mov
xchg
xor
mov
popa
leave
adc
test
cmp
pop
inc
cmp
cmp
adc
data16
push
mov
insb
data16
adc
add
inc
das
dec
lods
xchg
rcll
jns
xchg
push
test
xchg
adc
sbb
lods
repz
jmp
shlb
adc
pop
lcall
aas
sbb
add
sbb
pop
mov
lret
push
sahf
mov
sub
sbb
lds
mov
xchg
xchg
mov
dec
pop
imul
and
push
rcll
xchg
adc
loop
mov
or
clc
mov
gs
jmp
jo
xchg
mov
mov
inc
adc
fisubrl
jle
out
stc
xor
jo
mov
js
es
fildl
pushf
outsl
sub
inc
xchg
les
pop
push
push
out
jns
jno
jle
xchg
cltd
mov
jae
xlat
stos
mov
aaa
or
inc
push
fwait
mov
jbe
dec
cmp
divl
push
or
dec
jb
pop
sub
mov
add
testb
xchg
fcoml
mov
hlt
ss
mov
gs
mov
mov
imul
out
mov
sarl
xor
and
sbb
xchg
pop
cs
mov
jnp
lret
insl
mov
gs
pop
sahf
or
je
xor
sub
sbb
sub
push
lods
outsb
mov
jge
adcb
adc
inc
dec
out
push
push
jno
movsl
enter
xchg
sti
ss
or
rcrb
das
jl
lea
inc
test
mov
mov
or
lahf
mov
pusha
dec
jno
pusha
xchg
mov
dec
push
aas
filds
mov
in
lret
xor
mov
xchg
iret
dec
pop
cmpsl
stos
dec
cltd
pop
repz
jne
sub
adc
test
or
lret
cs
jle,pt
fidivl
sbb
ja
test
daa
cmpsl
notb
push
push
push
inc
int3
jbe
adc
aaa
mov
rcrl
xor
push
add
jo
sbbb
enter
mov
mov
mov
movsb
jl
ljmp
xchg
dec
push
inc
std
sahf
inc
jno
pop
xchg
xchg
adc
push
mov
jb
jmp
addb
insl
ja
scas
fnstcw
push
hlt
fistl
sub
xchg
fstpl
mov
adc
dec
sbb
aam
shl
mov
std
lods
xchg
jne
add
cmp
fldenv
dec
xchg
pushl
cmc
lods
das
cmc
popa
mov
fnstcw
xchg
rcll
dec
fbld
aaa
cmp
sbb
shll
dec
xor
mov
xor
pop
loopne
aas
mov
sbb
test
xor
cld
hlt
push
sub
or
dec
cmc
cmp
pop
push
mov
mov
push
das
xor
mov
jge
ja
mov
jmp
jno
out
mov
and
aam
push
jbe
cld
inc
push
mov
scas
sub
out
cld
cld
sub
mov
inc
je
xor
fs
mov
sub
pop
loopne
pop
push
cld
pop
nop
js
int3
dec
push
sub
cmc
pusha
add
loop
aad
jae
mov
pop
pop
test
inc
mov
adc
nop
pop
stc
call
add
xlat
dec
mov
lret
xlat
jmp
mov
mov
xchg
mov
cmp
call
stos
xlat
push
pop
xor
jns
and
pop
es
jle
push
push
cs
or
aam
adc
mov
xchg
and
fiaddl
mov
cli
cmp
popf
insl
das
mov
cmp
jg
popa
and
fisttpl
inc
mov
and
lret
xorl
sbb
sbb
or
xchg
ss
jl
sub
fistl
loop
pop
scas
mov
jne
mov
inc
or
jne
adc
scas
pushf
xor
pop
mov
jae
scas
int
lret
sbb
int3
jle
pushf
f2xm1
loope
loope
sbb
jb
js
add
mov
adc
jb
flds
out
push
sub
iret
arpl
enter
sub
cld
aad
orl
negl
lret
dec
fwait
mov
pop
xchg
ret
and
add
jno
shrl
jns
sub
das
add
pop
das
mov
pushf
ss
rorl
mov
js
mov
mov
jmp
cmpsl
scas
adcb
fsubrp
fbld
sbb
fsubl
fcmovnbe
push
cmpb
mov
xchg
loop
insb
push
clc
repnz
xchg
cmc
pminsw
mov
pop
push
jo
pop
xchg
pop
cmp
mov
inc
mov
mov
sar
lahf
sub
cltd
pop
shrl
or
mov
data16
insl
push
add
hlt
out
mov
lods
and
pop
pop
dec
cmc
sarl
ret
scas
insl
and
adc
fdivl
jl
mov
xor
movsl
sub
sub
js
sarb
adc
pop
lock
sbb
test
sub
adc
sub
jmp
shl
mov
cmp
dec
xrelease
xor
cwtl
mov
ss
fiadds
xor
mov
and
inc
jmp
gs
daa
or
push
add
mov
push
icebp
pop
pushf
mov
mov
add
stos
inc
scas
and
push
dec
jmp
sbb
roll
pextrw
jg
push
xchg
lcall
loop
test
fdivr
jge
insl
pop
out
loopne
mov
inc
rorl
pminub
mov
jbe
sbb
inc
or
lods
int
sub
or
fs
sbb
pop
rorb
sbb
push
dec
andl
sbb
es
jge
mov
pushf
sti
loopne
icebp
sahf
jo
or
pop
push
pop
dec
cmp
jmp
jnp
lcall
push
in
sti
push
imul
fs
or
sub
mov
in
cli
cli
fstl
int
push
pop
js
jbe
jge
ret
fdivp
add
mov
mov
sub
mov
dec
lahf
cmp
jecxz
adc
inc
cs
sub
stc
fldl
rorb
cs
je
sub
xchg
inc
pop
push
xchg
repz
mov
mov
into
adc
inc
mov
jns
adc
mov
movsl
push
pop
mov
movsl
fs
rcl
xlat
xor
jge
mov
imul
pusha
lods
imul
xchg
rcll
push
xor
mov
in
shll
push
jb
icebp
jno
add
mov
call
pop
and
lahf
aam
sbb
pop
jo
cld
rorl
call
nop
in
inc
out
mov
fidivrl
xchg
imul
sub
adcl
cltd
inc
rorl
lret
inc
jl
in
dec
out
xor
mov
mov
pop
mov
sbb
les
bnd
pop
clc
fimuls
mov
das
stc
sub
int
cmpb
push
cld
dec
lahf
popf
mov
outsl
test
fcoml
enter
lods
dec
jne
int
xor
aas
or
jl
adc
test
jne
jmp
xchg
test
imul
mov
aaa
cmc
ljmp
cmp
sbb
lahf
and
cld
sbb
mov
das
sbb
in
outsb
mov
dec
pop
mov
dec
and
jae
xchg
adc
movl
mov
xor
or
jl
into
mov
loope
mov
xor
mov
xor
jl
xchg
push
add
int3
jge
inc
std
dec
ljmp
or
mov
cmp
jne
push
mov
jne
test
xor
jo
arpl
cwtl
sahf
fldl
push
jo
ds
fildl
movb
iret
and
clc
pop
adc
jmp
int
testb
mov
sub
cli
mov
data16
mov
dec
jae
cmpsl
sbb
lds
es
sub
xor
test
sti
out
fwait
mov
xchg
hlt
fstpt
mov
repnz
repz
insl
enter
outsl
rcpps
rcrb
cmp
sar
pushf
mov
popl
sbbl
adc
add
ljmp
jp
mov
sahf
xor
jo
sbb
test
push
mov
lahf
pop
mov
add
cmp
sbb
in
and
or
sbb
das
clc
js
daa
mov
pop
faddl
insl
mov
xchg
mov
subl
cs
cmp
sti
mov
mov
popf
js
dec
mov
sbb
mov
pop
adc
mov
sahf
sar
pop
dec
sub
adc
push
push
fucomi
cmp
jno
cmp
dec
fdiv
mov
test
cvtps2pi
push
sbb
fisubrs
or
mov
popa
add
lret
loope
pop
pop
push
shll
jne
push
lret
shlb
mov
jno
das
push
stc
xchg
notl
sahf
movsl
pop
fidivs
mov
cmp
mov
cmp
jno
push
mov
dec
jge
cli
subl
xchg
adc
add
xor
jle
stc
xchg
sbb
inc
push
inc
roll
cld
loopne
sub
xor
mov
dec
inc
ljmp
inc
in
ss
pop
notb
jmp
jnp
xchg
ret
movups
xorl
inc
lock
dec
mov
test
in
push
pop
adcb
loop
and
sbb
mov
inc
mov
movsb
sti
xor
je
testb
dec
add
orb
mov
sbb
pop
mov
imul
fsts
sbb
arpl
pop
mov
ret
icebp
cmc
lret
dec
pop
mov
fxch
mov
inc
rolb
mov
xlat
push
cmp
sbb
js
out
repz
push
fnstenv
icebp
data16
sub
cmp
mov
cmp
ss
sahf
fisubs
icebp
pop
fdivs
sub
lahf
shrl
in
movsl
stos
mov
mov
dec
push
dec
cmc
lcall
cmpsb
popf
jbe
add
rorl
jg
jmp
dec
ds
sbb
mov
rcl
xchg
push
push
repz
stos
leave
mov
sbb
pusha
mov
out
scas
mov
jle
push
fimull
lds
repz
dec
sbb
fnstcw
out
aaa
enter
aad
mov
pop
mov
mov
xchg
and
inc
cltd
sub
xor
idivl
push
add
push
outsl
out
scas
pop
cmp
add
jg,pn
push
popf
mov
pop
popf
sbb
cs
push
adc
ret
adc
out
fidivrs
xchg
out
push
pop
add
mov
adc
test
pop
push
mov
xchg
pusha
mov
mov
std
subl
push
cmp
rcl
xchg
icebp
scas
or
or
add
dec
mov
andps
dec
popf
std
xchg
sbb
popa
sbb
xlat
xchg
inc
iret
fwait
mov
push
jmp
pusha
sbb
adc
cmp
jg
fidivs
push
xchg
hlt
pop
imul
in
mov
mov
adcb
cmp
orb
push
insl
and
xor
mov
mov
push
fildl
cwtl
push
das
inc
jns
push
out
flds
in
sbb
adc
test
xor
add
mov
or
xor
pop
pop
inc
cmpb
and
sub
mov
enter
into
shll
sbb
lods
loop
add
xchg
pop
push
jmp
mov
out
cmpsb
sbb
and
mov
mov
sti
ljmp
sbb
rclb
aam
push
nop
repnz
and
int
and
cltd
mov
es
idivl
add
ss
jmp
push
lods
push
cmp
and
mov
in
dec
pushf
mov
xchg
cmp
test
mov
in
add
test
xor
jnp
mov
ljmp
push
dec
pop
les
dec
arpl
mov
xor
or
insb
adc
hlt
jg
movsl
push
popa
loop
test
sti
cmp
lcall
push
hlt
repz
iret
jo
mov
pop
cmp
mov
adc
mov
mov
cmp
dec
rorb
int3
xor
lcall
nop
pop
adc
shlb
lods
in
mov
cmp
inc
add
sqrtps
dec
xchg
mull
outsl
cmp
or
sub
sbb
xchg
scas
in
int3
xorb
inc
inc
push
decb
dec
pop
cmp
gs
or
xor
xchg
adc
das
sbb
sbb
inc
testb
mov
adc
cmp
push
std
mov
aaa
mov
fiadds
stc
xor
jbe
dec
sub
cli
push
insl
test
int
inc
dec
jecxz
mov
dec
adc
repnz
pop
arpl
mov
aaa
dec
jae
mov
outsb
shld
add
fmul
cmp
mov
fnstenv
mov
outsl
sbbb
xchg
mov
sub
lock
fcmove
fs
xchg
je
stos
lret
call
fmul
pop
push
mov
out
mov
mov
stc
push
jbe
xchg
push
sahf
mov
fisubrs
aaa
or
sbb
roll
out
mov
pop
mov
test
xchg
push
insb
cwtl
and
shrl
adc
xlat
pop
xor
mov
ficompl
leave
add
sbb
out
jge
dec
negb
fs
lahf
rcrl
in
das
mov
jg
push
int3
imul
lods
repnz
stos
fbld
pusha
stos
mov
das
cwtl
lret
test
mov
ret
and
pop
stos
gs
dec
xchg
lods
push
push
sub
push
mov
sahf
lret
mov
dec
jle
es
in
pusha
add
dec
pop
es
movb
pop
leave
inc
scas
je
cli
and
jg
pop
stos
or
sbb
scas
mov
dec
adc
test
pop
and
rol
in
or
cmp
mov
xor
jmp
hlt
and
jge
jne
out
sub
pop
out
xchg
sub
jge
lcall
jmp
sbb
add
xchg
sub
mov
adc
cmp
add
jp
xlat
arpl
jmp
jmp
js
cs
mov
imul
or
rcrl
dec
cmp
pop
dec
sub
xor
jo
sub
test
xchg
xor
push
std
mov
cmc
xlat
mov
mov
cli
pop
push
add
jo
cmp
inc
push
dec
daa
lahf
mov
push
xchg
and
xor
mov
inc
pop
adc
pusha
dec
push
mov
je
xchg
out
mov
movsl
dec
mov
test
inc
mov
stos
push
xor
mov
fs
push
cs
inc
popf
sbb
jnp
and
test
push
cltd
xchg
out
hlt
sub
and
inc
push
cmc
jmp
push
jmp
jns
sub
or
stos
jp
pushl
sbb
push
rcl
add
mov
out
push
imul
fisttpll
fsubp
mov
mov
into
jge
xlat
imul
adc
xor
inc
mov
xchg
mov
or
dec
enter
push
aas
xor
js
insl
mov
pop
dec
and
add
sub
adc
mov
loope
cmp
test
fs
mov
push
rclb
inc
or
pop
imul
pop
or
mov
pop
and
cmp
xchg
push
in
insb
mov
xor
aam
cli
mov
clc
dec
mov
jg
add
ret
mov
movsb
pop
cwtl
aam
jb
cmp
push
mov
mov
out
ljmp
sbb
cmp
call
cltd
fcomps
rcll
pop
push
loop
mov
insl
sbb
in
fs
ror
stos
add
lods
fldcw
or
pop
dec
pop
mov
pop
repz
lahf
or
push
push
sub
ljmp
repnz
xor
or
insb
mov
mov
mov
xor
popa
pop
sbb
adc
icebp
out
pop
xchg
dec
lcall
or
cmc
dec
popl
lret
fdivl
pop
dec
cld
mov
test
push
jns
daa
addb
sub
mov
ss
mov
lahf
int
push
mov
xchg
loop
pushf
push
adc
mov
cmpsl
sbb
es
cmpsl
fiadds
insb
cmpsl
dec
sahf
adc
pop
xchg
mov
and
rcll
insl
jnp
outsb
and
leave
pop
dec
dec
inc
femms
push
icebp
add
xchg
jp
and
mov
push
pop
rolb
mov
xor
sbb
fldenv
xor
ret
push
push
nop
scas
or
loop,pn
sbb
cmp
xchg
mov
pop
call
inc
and
fisttpl
sub
cmp
push
cmp
shr
test
stos
fidivs
mov
fs
in
dec
or
cmp
insl
jae
cmp
cs
mov
jp
das
add
bound
mov
cltd
xchg
mov
and
push
hlt
cld
rorb
pop
bound
mov
push
mov
or
imulb
lock
pop
gs
cmp
mov
rcll
inc
add
add
push
xchg
fidivrl
and
insl
out
pop
mov
test
cmp
sbb
sub
imul
mul
loope
cmp
mov
or
sub
mov
sub
sbb
mov
andb
mov
push
xor
orb
mov
xchg
mov
jno
xorb
cmpxchg8b
inc
dec
lods
xchg
ficompl
popa
imul
dec
stos
orb
pop
inc
fisubs
jmp
lods
jmp
cmpsl
adc
mov
inc
je
pop
mov
cltd
mov
icebp
xlat
data16
cmp
icebp
xor
pop
and
pop
mov
pop
clc
cmp
mov
fisubl
pop
jl,pt
fiadds
scas
adc
inc
ret
adc
xor
and
mul
mov
cmp
cld
xor
push
inc
xor
jl
xchg
shrl
imul
in
hlt
dec
mov
rclb
gs
jns
out
cmpsl
inc
out
adc
push
aam
sbb
cmp
aad
pop
insl
xchg
aaa
sbb
mov
xlat
lock
lret
scas
jne
push
test
mov
lret
push
pop
xchg
cltd
aad
ja
es
les
mov
add
inc
in
jge
push
mov
push
mov
xorl
adc
pushl
xchg
push
call
fwait
jae
cmp
mov
xchg
ds
daa
add
jle
cmp
pusha
jge
aad
xor
mov
test
mov
sbb
out
pushf
pop
mov
mov
out
sub
scas
imul
pop
inc
mov
mov
nop
lret
mov
adc
xor
lret
outsl
insb
rcrb
scas
add
push
cmp
dec
lock
insl
xor
inc
mov
pusha
mov
xchg
in
daa
mov
xor
lret
lock
and
push
cwtl
lods
es
push
inc
mov
adc
in
mov
mov
ja
pop
rclb
cs
hlt
lahf
je
aas
ficoms
inc
pop
outsb
rorl
pop
fs
enter
or
mov
rcll
and
add
jb
push
xor
add
pop
stc
adc
stos
lods
shl
and
inc
add
pop
sbb
loop,pt
test
fdiv
mov
pop
inc
sbb
pop
pop
shl
xor
pusha
jge
dec
jne
loopne
rorb
pop
loop
xchg
cwtl
mov
push
mov
mov
xor
xchg
cmpb
testl
cmc
add
ss
out
pop
mov
sbb
in
and
ficoms
inc
lods
pop
or
aas
xor
outsb
xchg
and
dec
jno
sbb
es
inc
stos
shrb
rclb
orb
push
add
sbb
mov
adc
fstl
pop
cmp
sbb
xchg
mov
push
pusha
in
std
fucom
add
int3
xchg
cltd
lahf
or
mov
xchg
mov
icebp
dec
pop
ret
test
inc
test
out
fwait
jo
shrb
mov
rcll
repz
adc
testl
xorl
mov
outsb
lods
pop
and
mov
xchg
mov
mov
adc
push
fwait
iret
mov
xor
mov
xchg
jne
or
dec
adc
out
dec
cmc
fsubl
mov
sub
lods
sar
cmp
lods
rcl
push
xor
dec
push
sbb
dec
lds
mov
js
rcll
ret
cli
aad
enter
jle
stos
cmpb
jmp
mov
gs
subb
and
mov
lods
sub
shlb
aaa
push
xlat
cmpsl
lds
jl
push
fstl
inc
mov
int
sub
add
dec
mov
cmp
pop
mov
sbb
pop
daa
test
add
stos
push
repz
or
outsb
lret
jne
inc
mov
fs
daa
add
pop
mov
mov
push
push
and
adc
cwtl
popa
stos
shlb
jno
xchg
push
repnz
adc
dec
mov
addr16
mov
stc
add
movsl
loop
push
mov
inc
pop
leave
cltd
cld
ja
mov
adc
sub
ror
dec
adc
xchg
adc
mov
inc
adc
in
xor
ja
or
and
add
je
adc
movsb
popf
inc
pusha
or
jle
mov
outsl
push
pop
mov
mov
aaa
cmp
into
mov
sbb
mov
adc
maskmovq
notl
sub
enter
mov
out
lods
es
test
sahf
xor
xor
lds
insb
mov
and
pop
inc
loop
adc
and
sub
or
mov
sbb
lahf
mov
add
sarl
lds
mov
js
insb
mov
jle
pop
push
xor
add
mov
push
pop
movsl
test
cmp
nop
fnstsw
push
out
add
mov
lods
xchg
cwtl
sbb
inc
mov
xchg
lret
jo
loop
bound
sbb
js
mov
mov
sub
repnz
fisubl
repz
in
je
fs
ds
insl
mov
and
sbb
pop
and
sub
sub
dec
lea
sub
inc
sbb
cmp
add
fadd
insl
aad
stc
cmp
adc
push
repnz
sub
xor
cmp
movzwl
or
push
fsubs
adc
enter
loope
mov
or
or
clc
sbb
es
sbb
xor
push
mov
cs
jns
test
add
inc
bound
movsl
xchg
int
fistpl
jno
push
cmpsl
push
aam
aam
mov
shlb
lret
insb
andb
push
mov
dec
sbb
cli
leave
fisubs
add
inc
push
push
jns
sti
inc
push
negb
movsl
mov
jne
and
mov
std
iret
push
mov
test
xchg
push
jno
inc
xor
and
xchg
push
fimuls
fnstsw
add
cwtl
sub
scas
ds
xor
mov
sbb
jne
xor
add
push
test
shlb
cwtl
fwait
insl
push
cltd
movsl
fmuls
das
jo
lods
insl
lcall
cmpl
mov
dec
mov
popf
xchg
push
cltd
pop
icebp
jp
cmpsl
mov
dec
cmp
or
movsb
out
and
push
cli
pop
clc
popa
add
test
cmp
dec
pusha
mov
mov
sbb
arpl
imul
xor
pop
jns
pusha
inc
push
mov
fdivp
ds
ss
rclb
sbb
mov
or
mov
jns
cmp
mov
in
push
ja
fs
std
repnz
push
xor
jmp
mov
mov
popa
mov
sbb
jp
ja
adc
adc
pop
mov
jnp
sbbb
or
pop
adc
jge
in
rol
cmp
push
mov
pushl
out
sahf
pusha
xchg
sbb
lret
mov
shrb
mov
mov
in
cmc
fiaddl
or
pop
mov
test
inc
icebp
sahf
pop
push
mov
stc
pop
outsb
cmpsl
call
aaa
mov
popf
dec
aas
fistl
xchg
pop
sbb
pop
sub
sbb
jns
shrb
pop
fldt
lea
repnz
mov
dec
insl
fnstcw
xor
out
test
lods
cmpsl
mov
xlat
popl
xchg
xchg
and
loop
and
mov
mov
jns
cmp
adc
inc
addr16
shll
push
lock
jno
aam
mov
das
nop
es
test
es
pop
xor
dec
ljmp
pop
call
daa
and
and
pop
fcmovnb
lea
and
ficompl
inc
pop
nop
cmp
and
aaa
mov
or
ret
xor
jmp
push
les
rolb
rorb
mov
adc
imul
inc
mov
sub
mov
pop
pop
dec
das
clc
sub
fs
fs
push
test
jo
addr16
test
movsb
cltd
jbe
jns
jbe
stos
popf
xchg
inc
or
sbb
fsubl
mov
nop
jp
jne
roll
pop
rcrl
adc
mov
sub
push
mov
push
and
fstpt
mov
mov
imul
in
adc
lock
cmp
mov
in
je
xchg
xchg
js
cmp
and
orl
lock
clc
or
sbb
shll
push
jbe
pop
mov
cmp
std
cld
sbb
into
pop
mov
hlt
pusha
das
cs
xchg
add
or
pop
add
cmp
lret
sbb
sbb
testl
out
lock
fmull
sub
in
cmp
mov
dec
incl
inc
mov
sarb
mov
adc
pusha
sbb
sbbb
push
mov
pop
or
pop
sbb
fwait
mov
and
pop
icebp
insb
push
push
adc
test
or
adc
insb
xor
fstl
sbbl
push
pushf
in
or
add
js
cmc
jno
mov
pop
push
dec
rclb
mov
lods
xchg
dec
dec
push
lahf
movsb
sbb
cs
dec
mov
add
sub
and
mov
fs
ret
pop
adc
jno
imul
div
jmp
pop
mov
shlb
out
push
push
mov
mov
into
push
dec
inc
lods
jns
test
add
mov
out
iret
push
xor
mov
pushf
jecxz
movl
pop
ljmp
rorb
mov
repnz
sub
jno
std
sub
pusha
movsl
arpl
lods
daa
xchg
dec
mov
sub
push
cld
or
je
std
mov
or
call
ja
cmp
stc
cltd
push
mov
sti
rol
pop
push
dec
mov
xchg
cltd
inc
xor
push
fdivrs
das
lods
dec
cmp
repnz
mov
rclb
test
pop
dec
mov
call
adc
loopne
shrl
leave
push
sub
sti
mov
incl
outsb
jecxz
or
or
xchg
rcrb
sbb
orb
push
pop
dec
call
inc
dec
mov
push
cmpsl
arpl
pop
mov
xlat
test
mov
cmc
sub
mov
jmp
xchg
cmp
pop
int3
xchg
lock
pop
fs
add
jg
inc
mov
lods
call
mov
or
das
push
sbb
mov
add
dec
pop
and
fldenv
shl
push
pushl
adc
jle
push
popf
jle
addr16
ret
gs
or
add
mov
adc
lcall
cmp
stos
scas
push
sbb
call
bound
lock
out
pushw
aad
and
push
pop
mov
ljmp
lock
pop
cmp
add
mov
push
push
mov
dec
inc
add
cmp
pushf
pop
mov
or
loop
and
xchg
and
stos
lahf
or
or
xor
sbb
and
mov
push
sbb
aas
imul
inc
push
cmp
jne
cmp
cwtl
ficoms
cmp
popa
adc
mov
or
stc
push
jne
das
adc
cmp
mov
insl
add
xor
mov
lds
dec
mov
dec
mov
imul
fwait
jne
sub
xchg
popa
loop
incb
dec
add
rcll
and
aas
push
pop
test
sub
sbb
fnstsw
fwait
roll
cmpsb
xor
cmp
test
fiadds
jo
cmp
sbb
xchg
in
aaa
mov
sub
jo
int3
lahf
movsb
and
dec
adc
dec
jo
sbb
fcomps
push
pop
xor
jg
adc
in
out
popf
inc
test
imul
jle
sub
stc
sar
sub
inc
xchg
aam
fsubs
sti
push
cmp
fwait
sub
lds
jge
mov
inc
movsl
push
cmp
es
cltd
xchg
mov
scas
xchg
mov
mov
pop
insb
or
mov
dec
es
into
add
adc
xchg
xchg
push
or
in
js
pop
popf
fwait
cmpsb
mov
xchg
ljmp
jns
mov
jl
push
mov
dec
push
cmpsb
mov
jnp
jb
pop
std
xor
sbb
int
imull
sbb
loop
pop
lret
pop
test
inc
mov
mov
shll
adc
and
mov
adc
mov
outsb
or
fistl
mov
adc
cmpsb
je
mov
clc
jmp
xchg
xlat
ret
pop
mov
jle
mov
push
stc
cli
mov
mov
sub
adc
mov
out
fs
pop
ret
test
cmpl
and
mov
inc
mov
push
push
xlat
mov
mov
jg
xchg
push
pop
dec
push
inc
pusha
pusha
pusha
xor
outsb
sbb
loope
dec
hlt
dec
inc
pushf
cmp
mov
jno
ds
sbbl
dec
jle
jb
or
loopne
mov
enter
cmp
dec
xchg
rol
pop
or
les
sub
int
xor
xor
add
lahf
sub
je
lods
jnp
ja
jecxz
push
lret
or
popf
call
jle
dec
or
ljmp
lret
lods
sub
rep
xor
stc
ljmp
dec
sbb
cmp
lahf
sbb
sbb
sarb
fdivrs
nop
mov
xchg
cmp
dec
mov
jle
int
xchg
lods
dec
fcmovb
cltd
dec
mov
std
pop
jo
sub
repz
adc
mov
mov
mov
jne
push
jecxz
insl
jo
and
sub
cld
ret
push
testl
in
pop
ss
imul
push
and
jno
and
sti
gs
std
pusha
or
mov
dec
cmp
fdivl
dec
movsb
sub
insl
cmpsl
loop
sub
add
out
or
call
aam
xlat
push
aaa
shlb
daa
fildl
add
fbstp
push
popa
xchg
and
jns
xor
insl
jl
xor
ret
or
adc
jne
or
arpl
fisttpl
or
pop
pop
rolb
mov
in
mov
mov
sub
xchg
adc
dec
cmp
mov
dec
cmp
or
mov
in
mov
and
rcll
push
xlat
xchg
dec
jo
sbb
mov
jnp
loope
push
aaa
jns
mov
jno
cmc
mov
push
js
cmpsl
sahf
mov
pop
push
jge
xchg
mov
xchg
ja
loop
add
xrelease
popa
or
cmpsl
add
in
fcmovne
push
mov
xchg
sub
lds
push
icebp
adc
fisubl
add
cmp
ds
dec
add
leave
lret
sbb
jmp
imul
sub
in
adc
fcomp
punpckhdq
dec
lahf
fldt
ljmp
mov
push
cmp
push
mov
pop
cs
lds
testb
jbe
jg
bound
mov
incl
cmc
xor
sub
lret
add
fwait
popf
lret
mov
hlt
sub
cmp
mov
push
das
or
sub
lea
test
popf
pop
sbb
mov
sub
mov
es
push
xor
push
pop
scas
dec
imul
push
out
ficomps
mov
dec
cmp
push
add
stos
popa
pop
jl
or
cmc
or
mov
psubw
dec
lods
inc
push
mov
jmp
mov
xor
jno
mov
addr16
js
gs
fnstsw
insl
dec
jp
jno
clc
mov
in
pushf
push
jle
insl
andl
sbb
and
dec
push
stos
add
test
or
xchg
and
inc
xor
cmp
imul
aad
mov
shlb
ret
cmp
mov
xor
mov
rcrb
ja
nop
pop
bound
xchg
sahf
test
dec
pushf
xor
data16
loop
jge
ficomps
nop
mov
pop
cmc
push
inc
and
lcall
fwait
clc
dec
mov
sti
cld
loope
xchg
cmc
dec
jmp
fstpt
push
add
dec
add
xor
sbb
sbb
icebp
mov
jg
test
push
mov
repnz
out
repnz
pop
push
xchg
and
iret
jno
fcomps
pop
push
fstpl
sti
mov
mov
fistpll
fidivrl
rcrb
inc
push
mov
push
mov
fidivs
jp
mov
mov
mov
push
add
push
xor
lds
inc
sti
mov
arpl
loope
enter
loopne
xor
push
mov
stos
sbb
test
sub
mov
js
or
jl
in
sbb
les
add
lods
and
test
rcrb
jle
int3
fimull
cmp
arpl
test
dec
ret
and
dec
jne
ja
hlt
testb
leave
arpl
jne
das
inc
flds
or
adc
add
icebp
jnp
mov
add
jle
fisubrs
xor
cltd
push
sub
push
lds
dec
jl
icebp
sub
lahf
mov
faddl
mov
or
addr16
cli
mov
push
jns
pop
jno
or
cmp
lcall
jmp
cld
or
in
mov
mov
or
mov
inc
xor
add
in
into
sbb
icebp
inc
loop
imul
in
stos
loop
push
mov
mov
fcmovu
loopne
aad
jo
lret
adc
iret
sbb
lahf
jp
dec
adc
cmp
in
pop
leave
add
divb
inc
pop
xor
xchg
lds
mov
leave
or
adc
add
pop
xor
push
xor
subb
movsl
sarb
add
dec
mov
sub
sbb
lds
push
mov
adc
popa
dec
mov
inc
pop
fistpl
or
loope
lds
sub
cmp
aaa
xor
shl
push
ficoml
add
nop
sar
mov
popa
add
mov
inc
addr16
xor
mov
adc
mov
in
lret
pop
sbb
sbb
dec
dec
cmp
cli
pop
push
xchg
pop
sbb
sbb
ds
or
mov
and
xchg
adcl
cwtl
mov
xor
std
add
xchg
pop
sti
andl
adc
mov
dec
push
xor
sbb
and
sbb
cmp
decl
xor
push
mov
cli
inc
rolb
dec
push
ljmp
fucompp
add
fnsave
push
hlt
imul
mov
inc
mov
divb
lods
and
xchg
in
or
push
movsl
pop
mov
mov
loope
cs
add
pop
lock
cmp
jge
xchg
push
mov
jmp
adc
loope
pop
xchg
sub
pop
jmp
mov
dec
sbb
movsb
lcall
xor
clc
js
inc
sti
cmp
insb
mov
xchg
bound
ret
and
aaa
xchg
jle
rcrb
into
fnsave
gs
ljmp
arpl
push
sub
das
decb
push
cmp
jns
xchg
mov
jne
mov
mov
inc
jmp
inc
inc
jl
aad
sbb
inc
das
sbb
mov
adc
add
fs
jbe
mov
mov
mov
insb
fists
sbb
mov
pushl
out
jns
push
mov
pop
pop
cmp
and
insl
sub
lods
repz
pop
ja
push
nop
mov
mov
scas
test
lds
filds
inc
pop
sbb
or
ficompl
aam
mov
dec
cwtl
push
sub
push
pop
add
push
push
sbb
push
je
jno
stc
mov
cltd
popa
mov
sbb
test
and
movsl
in
cmp
cwtl
aaa
daa
out
xor
dec
mov
in
repnz
pop
mov
sarl
lahf
push
jmp
sub
iret
test
test
es
pop
xor
xchg
xchg
push
sti
and
xchg
mov
lahf
cmp
in
pushf
inc
mov
dec
pop
cmp
aad
and
leave
fidivs
push
pop
jae
mov
lret
xchg
adc
cmp
jno
lret
xchg
mov
inc
cmp
sub
lret
movsl
mov
xchg
mov
test
cmpsl
fwait
push
lcall
rcrl
push
mov
xor
add
mov
sbb
xchg
pop
dec
xor
out
sti
cs
pop
das
movsl
rclw
and
js
mov
into
shll
push
ss
sub
xor
test
mov
sub
lods
shrl
bound
nop
cwtl
das
xchg
jo
cmc
mov
push
inc
adc
rol
mov
test
fisttpl
in
and
jmp
bound
fadd
adc
cmp
insl
or
sar
icebp
cwtl
inc
sahf
in
divb
mov
xchg
popa
shll
mov
orl
xchg
mov
hlt
test
sub
das
lods
call
pop
lea
loope
aad
mov
es
imul
roll
and
push
dec
mov
sbb
mov
jecxz
dec
add
lods
add
std
push
jecxz
lock
cs
xchg
xlat
ficomps
rcrb
jne
mov
pop
orps
pop
nop
sub
nop
clc
push
fidivrl
scas
jne
add
xor
mov
iret
cltd
fsubrl
cmpsl
xlat
inc
enter
mov
lea
in
aas
pop
or
es
dec
push
jmp
pop
sub
test
mov
push
mov
roll
incl
enter
or
push
sbb
push
test
jecxz
sub
out
sbb
pop
adc
mov
das
push
sbb
ds
cmpl
dec
sub
stc
sbb
mov
adcb
cmp
push
push
fs
xchg
lahf
push
push
pop
test
fstpt
adcl
popa
pop
mov
rol
ja
aad
mov
and
jmp
mov
ret
out
in
das
push
xchg
inc
xor
cmp
bound
psubsb
pop
cmc
ljmp
sti
mov
mov
add
xlat
imul
std
divb
mov
lahf
mov
test
cmpsb
nop
scas
test
sti
ljmp
push
js
mov
dec
mov
xlat
cmp
or
scas
adc
test
xchg
jle
scas
loop
pop
mov
pop
adc
or
pusha
add
push
sbb
push
test
mov
sub
sahf
cltd
shrb
test
lea
insl
sbb
dec
and
dec
or
test
push
aad
lcall
sbb
cmpsl
push
and
cmp
add
xor
cld
xlat
jb
pop
xor
mov
sbb
pusha
fidivrl
mov
ds
mov
sub
rclb
sbb
add
iret
pop
sbb
and
test
pop
out
int
jns
push
mov
jge
pop
xchg
arpl
fisttpl
or
cs
pop
inc
ficompl
mov
cvttps2pi
pop
movb
mov
jmp
js
lret
xchg
pusha
adcl
fwait
mov
cmpl
aad
mov
mov
iret
stc
imul
or
mov
push
fcompl
push
pusha
mov
lret
into
xchg
sub
and
inc
stos
sbb
pop
shrb
maskmovq
sbb
mov
movsb
ret
mov
cmp
out
mov
xor
xor
pushf
and
mov
jmp
mov
adc
push
out
inc
mov
lahf
xchg
mov
leave
mov
mov
push
das
in
cmp
cld
pop
mov
inc
or
inc
or
or
addb
push
mov
cmp
ljmp
cmp
cmp
out
nopl
mov
inc
mov
cmc
ss
loop
rorb
dec
imull
mov
or
sub
xorl
loop
mov
sbb
fists
jns
aaa
jle
pop
inc
mov
mov
rorb
cmp
mov
test
icebp
push
loopne
push
mov
pop
push
mov
scas
adc
aaa
gs
nop
sbb
xor
or
sub
inc
inc
cmp
mov
lds
push
dec
sub
mov
lahf
dec
or
gs
jno
inc
ficoms
or
cmp
add
lret
ficompl
sbb
shrb
imul
subb
and
xlat
mov
test
fmull
sbb
mov
jp
aas
ffree
xlat
fwait
jae
jmp
push
lret
inc
push
mov
stos
pop
and
and
test
nop
ljmp
pop
sti
mov
stc
jle
pop
in
inc
lahf
sbb
and
dec
orb
dec
js
pop
and
addl
gs
cmp
pop
insb
pop
ds
mov
fadds
jmp
push
in
stos
repnz
fnsave
mov
rcrb
cwtl
jmp
negb
fidivrl
in
insb
das
add
mov
subl
jae
and
fcmovnu
push
popf
pusha
jne
ret
in
divb
jl
test
push
xchg
push
pop
cmp
mov
xor
call
int3
fdivs
jne
and
fcmovb
rcrl
add
sub
mov
daa
cmp
out
xor
je
cmp
in
adc
inc
xchg
fwait
ret
jns
std
add
fbstp
xor
adc
mov
jle
jp
inc
loop
cld
ret
dec
sbb
lcall
stc
or
xlat
out
sahf
hlt
lret
push
test
mov
fwait
dec
sub
into
mov
or
push
sbb
arpl
jl
aaa
mov
stos
xor
sub
in
daa
ret
cli
jmp
lahf
stc
negb
in
sahf
dec
test
test
je
ja
push
sub
pusha
or
cmp
push
jecxz
idiv
and
aam
pop
mov
sbb
xchg
and
push
pop
adc
jnp
inc
gs
lods
lret
pop
leave
adc
mov
cmp
add
push
lods
or
mov
ret
xor
fcmove
imul
lods
fwait
jl
mov
shl
jbe
daa
dec
dec
and
sbb
es
enter
ret
push
sub
movsl
loop
mov
fldcw
adc
ret
dec
mov
pop
ds
shl
add
repz
jmp
mov
mov
push
xchg
mov
mov
and
sbb
bound
xchg
sbb
push
mov
fs
test
dec
add
es
mov
sbb
inc
ja
jbe
adc
cmpsl
xlat
push
add
push
dec
mov
loop
xchg
push
aam
add
repnz
jno
push
fimull
mov
mov
lret
xor
mov
xchg
loop
test
das
dec
scas
sysenter
sbbl
test
out
sbb
push
mov
pusha
mov
push
ret
lcall
fstpt
stc
std
pop
call
push
mov
cwtl
pop
cltd
add
fiadds
pop
imull
in
add
cmp
mov
mov
and
push
inc
mov
xor
rclb
mov
hlt
dec
dec
xchg
push
test
je
mov
sbbb
push
dec
sbb
mov
das
enter
stc
pop
or
push
std
call
lahf
cwtl
mov
dec
dec
inc
jne
ljmp
mov
xchg
mov
mov
popf
push
mov
popf
nop
into
dec
mov
mov
push
outsl
adc
inc
dec
std
mov
sbb
fmulp
push
adc
fnstenv
inc
or
xchg
mov
mov
sbb
popf
xchg
shrl
sar
mov
inc
sbb
jae
addr16
scas
adc
nop
aaa
dec
rcrl
xabort
movsl
fninit
mov
mov
dec
jle
imul
daa
pusha
insl
xor
or
lahf
aaa
mov
ret
pop
push
into
outsl
mov
mov
push
or
dec
pusha
rep
shrb
adc
jno
jo
push
movsb
push
dec
lahf
sbb
popf
pushf
fwait
imul
xchg
or
loopne
and
pop
jns
sub
lahf
icebp
dec
jb
shlb
pop
es
mov
ret
pop
mov
jo
scas
mov
int
lds
test
pushf
mov
or
scas
add
sbb
pop
jne
outsl
jns
loopne
fidivrs
xchg
popa
sub
dec
in
inc
and
dec
xor
xchg
sub
nop
jae
jnp
push
mov
or
stc
pop
adc
adc
push
les
rorl
movsb
pusha
pushf
xchg
xchg
incb
xchg
vcvtps2pd
add
sub
jne
jecxz
rclb
mov
jns
jo,pn
dec
pop
sub
mov
out
jge
sbb
jmp
mov
cmpsb
xlat
add
adc
push
movsl
ds
mov
sub
push
fisttpl
lods
int3
add
sub
mov
lahf
add
insb
rolb
dec
andb
mov
mov
pop
subl
stos
jno
add
popa
mov
mov
mov
or
jmp
int3
mov
adc
mov
incb
lret
mov
push
xor
sbb
cmp
ficompl
cli
mov
ss
cmp
sbb
pop
or
repnz
mov
pop
loop
xchg
hlt
xlat
stos
pop
jmp
cmpsb
add
xor
mov
ret
fs
jb
std
out
inc
xor
push
xor
imul
in
in
cmpsb
dec
adc
xchg
add
fcomps
int
repnz
mov
fsubr
add
xchg
loop
mov
jl
fisttpll
out
fdivl
mov
hlt
movsl
dec
mov
xor
lahf
sub
push
or
xor
dec
out
leave
add
movsb
imul
add
or
sbb
cmp
sbbb
popa
mov
fisubrl
jb
and
rcrb
sti
inc
in
mov
in
das
clc
testb
stos
fistpll
mov
mov
insl
jecxz
pop
gs
lret
inc
jno
sub
mov
in
negl
ds
jge
mov
or
rolb
fnstcw
sbb
xorl
mov
ljmp
aas
mov
pop
sahf
mov
je
mov
sbb
pop
mov
push
popl
push
dec
and
cs
lahf
jo
insb
fisubrl
ss
shlb
arpl
rorb
lods
cltd
xchg
ljmp
jge
add
add
mov
cmpsl
ljmp
mov
inc
add
xlat
sbb
loop
mov
es
push
lock
ss
addb
pusha
pop
rclb
cmp
test
mov
iret
push
pop
repz
repnz
clc
call
cmp
outsb
inc
pop
pushf
lret
pop
push
in
or
cld
clc
inc
test
into
movsb
xor
mov
and
in
fldcw
imul
fimull
pop
push
push
push
xor
leave
jae
sarb
sbb
add
test
leave
out
mov
or
repnz
jb
sbb
pop
mov
pop
test
pop
pop
std
in
pop
sbb
and
mov
lods
cmc
cmp
xchg
stc
push
xchg
or
aaa
xchg
jle
xchg
push
cltd
push
push
push
jo
xor
mov
shl
int3
xor
and
mov
pusha
xchg
loop
test
in
push
jb
in
mov
aaa
fisttps
popa
stos
inc
jnp
out
mov
aam
jne
mov
std
pop
repnz
pop
push
adc
adc
sbb
es
cmpsl
sti
fcomps
cmp
popa
adc
xchg
out
sub
pop
mov
sub
jb
mov
fldcw
repz
mov
icebp
adc
adc
pop
pop
mov
enter
mov
test
adc
jle
mov
pop
pop
mull
push
sub
add
lret
sti
insl
mov
or
xchg
mov
test
pop
mov
push
adc
or
cmp
xor
cltd
xchg
lcall
ficompl
js
cmp
insb
adc
jl
adc
leave
xchg
arpl
and
das
punpckldq
sbb
ficomps
cmp
inc
cmpsl
dec
call
out
push
pushl
test
xlat
loop
je
jl
push
mov
nop
aaa
loope
sti
jmp
test
mov
and
stos
cmp
lcall
std
adc
add
aaa
popf
movsb
dec
fidivl
lahf
or
push
repnz
test
pusha
mov
cmp
push
mov
and
sbb
in
pop
fldl
adc
mov
loop
xchg
fldenv
imul
push
mov
mov
push
pop
inc
push
stos
jno
inc
pop
nop
adc
mov
aas
mov
lds
movsb
cmpsl
jmp
repnz
gs
jae
inc
push
adc
push
add
dec
out
push
hlt
jbe
mov
cmp
adc
sub
or
mov
dec
out
or
xor
mov
loope
ret
mov
xor
inc
mov
out
test
movsb
jecxz
jg
or
sbbb
mov
loope
enter
stc
mov
es
push
lods
bound
in
cmc
push
dec
xor
push
ss
stc
fstp
dec
mov
mov
adc
jns
push
mov
mull
mov
cmp
pop
jbe
arpl
jmp
ljmp
push
push
mov
inc
add
mov
cmp
add
je
pop
sub
mov
fildl
insb
sbb
mov
std
add
add
idiv
lods
fwait
aas
adc
pop
aaa
arpl
xchg
pop
nop
imul
push
rcrl
sbbl
cmp
push
push
inc
pop
and
pop
lret
inc
ffree
adc
stc
loop
imul
notl
mov
loope
aaa
daa
mov
es
mov
mov
push
stc
subl
mov
insl
jnp
dec
lock
jle
push
push
pop
sub
jae
rorb
test
pop
leave
jle
dec
sub
mov
cmp
insl
mov
mov
fcmovu
mov
clc
dec
xchg
mov
mov
adc
jns
arpl
sahf
arpl
or
mov
ss
cli
sbb
cmp
lock
xorb
and
mov
inc
sti
mov
test
pop
push
or
push
pop
inc
mov
inc
sub
pop
je
cmpsl
jns,pn
in
shl
out
movsb
sub
sub
mov
fdivrl
cltd
or
dec
negb
or
sbb
scas
push
add
in
xchg
gs
test
popa
add
dec
mov
out
mov
cmp
repnz
std
shlb
or
mov
fsubl
dec
push
pusha
cmp
cmp
sub
sbb
pop
test
lock
addr16
pop
das
pop
mov
add
jns
cltd
mov
sti
dec
jne
jae
mov
jl
jne
das
mov
lods
stos
movsb
fisttpl
inc
cmp
jg
sub
bound
mov
ds
js
add
sub
lret
cmp
xlat
xor
add
sbb
xor
test
scas
and
imull
xchg
xor
or
xchg
mov
ss
aaa
popa
jecxz
cs
and
nop
adc
insb
sub
mov
ljmp
jge
pop
lcall
push
xchg
fildll
mov
sub
out
cmp
and
mov
fsubl
inc
pop
pop
cltd
bound
adc
mov
mov
sub
mov
ljmp
sub
adc
ficoms
mov
pop
sbb
mov
and
push
jbe
pop
jns
mov
insb
cmpsl
sahf
or
sbb
mov
cli
into
call
bound
dec
inc
mov
sbb
xchg
sbb
push
repz
aaa
in
jle
mov
dec
incl
lods
and
in
iret
stc
cmovle
ret
mov
mov
cmp
pushf
in
movsl
add
mov
fimuls
jb
push
es
xchg
sar
mov
mov
fsts
xor
scas
sub
xlat
lcall
dec
imul
repnz
sbb
xchg
sub
push
mov
pop
ds
test
sbb
loop
jno
pop
xchg
or
sub
ss
or
in
dec
jmp
fistpl
jmp
cmc
int
push
mov
and
sbb
mov
popf
mov
dec
pop
adc
jne
fisubrl
in
push
outsb
cmp
xor
xchg
cs
adc
shlb
aad
push
jmp
push
nop
xor
pop
das
xchg
xchg
adc
pop
scas
mov
out
mov
mov
push
lcall
popa
js
jg
or
mov
add
mov
cmp
cmp
test
jno
lahf
fisttps
leave
cmp
pushf
in
jb
jbe
sti
mov
pop
cld
xor
mov
lret
jo
fs
mov
cs
xchg
lret
inc
iret
rcll
inc
test
sbb
ss
xchg
and
jo
and
xchg
loope
jae
cld
cs
and
scas
loopne
fnsave
cmp
jmp
mov
movl
jbe
adc
jmp
mov
jp
or
sub
out
sbbb
jns
sbb
outsl
mov
dec
add
gs
add
cmp
push
adc
pop
mov
lahf
int3
addb
data16
push
bound
pop
dec
jo
mov
lcall
imul
push
pop
stos
pop
ja
test
push
cmpsl
and
dec
rcl
cmp
mov
pop
fwait
mov
mov
movsl
movsb
xor
mov
mov
sub
ret
int3
das
lea
pop
lret
leave
out
les
push
test
test
dec
adc
ljmp
pop
sub
loope
out
movsb
push
movsl
scas
add
cmp
pop
scas
pop
sti
mov
push
loop
xorb
es
cwtl
mov
imul
aas
sub
leave
xchg
add
cmp
clc
sti
ja
push
xor
dec
inc
push
sarl
int
sbb
adc
jge
stos
pop
mov
cld
inc
jno
and
jno
xor
pop
mov
jge
xchg
jge
cld
fdiv
push
inc
loop
nop
adc
xor
fwait
insl
xchg
xlat
push
scas
dec
outsb
xchg
push
xchg
mov
push
sub
sub
mov
cmc
scas
js
dec
or
xchg
ret
mov
mov
stos
es
int3
es
xchg
out
xchg
jno
ret
inc
mov
fistps
dec
xchg
or
in
xor
mov
repnz
in
cmp
push
cmp
cmp
mov
aaa
dec
pushf
sub
jecxz
add
pop
mov
test
xor
dec
cmp
add
lds
scas
nop
push
jmp
add
fcoml
lods
or
icebp
xor
gs
ja
ret
movsl
sbb
and
xor
loope
repnz
andb
daa
movsl
jecxz
mov
or
lret
stos
adc
lock
push
testb
xchg
jae
lret
imul
test
pop
push
clc
push
outsl
sub
push
xchg
in
addr16
cmp
js
in
sbb
mov
xor
mov
repnz
std
nop
inc
cli
mov
push
mov
mov
pop
js
and
flds
mov
dec
add
dec
and
lahf
ljmp
adc
xchg
push
jne
sbb
jge
insl
arpl
mov
subl
mov
popa
pop
xor
mov
push
pop
pop
add
jae
add
out
dec
sub
sbb
movsb
mov
hlt
push
or
and
add
sbb
pop
or
lahf
push
cmp
xchg
jo
mov
sub
test
pop
mov
out
pusha
lret
adc
push
cmp
cmp
sbb
mov
mov
sbb
insb
sar
sub
inc
sub
cmp
xor
ret
jp
arpl
pop
es
and
push
call
in
testl
mov
adc
mov
call
cmpsl
push
dec
test
xchg
mov
popf
adc
mov
inc
xchg
jnp
insb
jb
subl
or
xlat
je
adc
aaa
js
adc
daa
imul
out
xchg
sti
sub
sbb
sub
jne
sarb
dec
dec
aas
push
dec
lock
mov
call
sahf
cmpsb
mov
lahf
sbb
cmp
std
jno
fiadds
fiadds
cmp
stos
or
push
add
sbb
leave
stc
loop
sbb
jno
inc
leave
rolb
or
jnp
es
mov
mov
jp
pop
xorb
fnsave
es
fs
sbb
add
adc
aad
inc
mov
pusha
shlb
lods
fchs
mov
mov
cmp
jl
inc
int3
clc
mov
lock
insl
jo
fimuls
divb
sbb
inc
add
dec
je
sub
jae
sti
add
fldcw
push
arpl
jnp
cltd
push
pop
cli
pop
fs
mov
gs
das
pop
aaa
pop
sbb
and
jno
jns
popa
jmp
addb
sar
sub
inc
fstpt
push
lret
movsl
pusha
pop
outsl
mov
pop
fimull
jb
sbb
inc
pop
loop
test
push
insl
bound
repnz
cmpsl
into
push
jo
sbb
sub
xlat
test
jle
cmpb
push
xor
pushf
xchg
inc
sub
dec
movsl
push
js
in
push
dec
popf
sar
jnp,pn
xor
add
cmpsl
jno
call
imul
movsb
add
xchg
mov
sbb
jns
pop
test
repz
and
jmp
out
outsb
dec
popf
sub
or
ss
jb
jge
mov
inc
push
pop
lods
xchg
sub
mov
ljmp
stos
add
and
loopne
push
push
shrb
out
das
jno
in
pushf
add
xchg
into
or
or
mov
loop
imul
pop
mov
daa
sbb
rcrb
mov
int
cmp
push
lahf
xchg
lea
movq
push
cmp
xchg
in
test
loopne
mov
mov
dec
mov
rcll
rcrb
push
mov
fcoml
mov
sbb
rcll
jp
push
adc
inc
sub
jmp
mov
inc
sub
or
sbb
aam
or
mov
xchg
movsb
test
aaa
jge
push
icebp
mov
push
fdiv
adc
jg
sub
insb
ss
stos
mov
pop
mov
fnstenv
pop
std
fadds
jg
mov
paddw
mov
adc
fidivrl
shl
jecxz
adc
loop
and
and
shrb
and
adcb
stos
xor
lds
mov
mov
scas
out
xor
or
in
cmp
imul
fadds
imul
jg
pop
pop
xlat
gs
pop
fwait
lods
mov
mov
out
std
xlat
in
shll
xor
loopw
ret
data16
bound
jmp
lds
xchg
flds
adc
mov
clc
mov
xchg
lods
test
arpl
sub
sub
leave
pop
stos
pushf
call
xchg
cmp
test
xor
jne
bound
xchg
push
fwait
mov
dec
fstp
push
adc
ss
adc
mov
mov
inc
cmpb
and
sub
push
filds
imul
cwtl
push
repnz
mov
ret
or
cmp
xor
xchg
push
jns
xlat
pop
dec
xchg
jno
fstpl
mov
shll
mov
cmp
pop
lods
inc
push
mov
pushl
jg
in
adc
in
js
adc
mov
jbe
testl
pop
add
fs
icebp
mov
aas
sub
xchg
push
mov
nop
loop
sar
fldcw
ds
and
or
sbb
xor
mulb
inc
xor
and
call
push
dec
adc
scas
push
movsl
jne
pushf
ja
cli
jne
adc
mov
adc
stos
add
sub
dec
mov
xor
mov
popa
test
add
stos
imul
mov
xor
mov
pop
mov
xor
inc
push
jnp
or
test
clc
sbb
pop
and
jne
adc
das
inc
and
fidivrs
cmp
mov
push
mov
test
mov
sti
dec
mov
mov
fisubrl
test
jne
in
mov
inc
gs
int
popa
in
cmp
or
xor
jb
popa
in
dec
icebp
adc
stos
mov
sub
or
fldcw
sbb
cs
js
dec
out
cld
pop
jbe
jno
cmp
and
xor
or
xor
mov
push
pop
pop
dec
mov
push
push
scas
faddl
popa
daa
push
int3
cld
jb
fidivl
ret
dec
adc
push
add
pop
or
fucom
fdivp
popf
in
lods
fistps
insl
rcrb
js
ret
mov
inc
lret
cli
and
insl
ss
xor
mov
js
jge
add
and
fistpll
icebp
lods
sub
popf
insl
movsb
and
cltd
jbe
or
or
popa
mov
lret
imul
data16
push
fistpl
test
cmp
mov
fiaddl
es
rcll
pusha
imul
xor
mov
mulb
mov
dec
lock
movb
dec
fstps
xchg
pusha
mul
sub
or
dec
mov
sbb
inc
jne
shrb
sub
adc
ss
test
jmp
cmp
or
sbb
push
mov
cmp
push
ss
pop
jl
in
stos
movsb
xor
mov
mov
jmp
push
sbb
xchg
scas
pop
mov
addr16
pop
cmc
xchg
cmp
xchg
inc
pushf
inc
xlat
mov
or
fcomps
cmpsl
ss
inc
inc
movsl
jno
cli
dec
ficomps
mov
xor
pusha
fisubrs
dec
cmovnp
inc
mov
mov
dec
push
add
pop
push
dec
cs
jmp
mov
pop
addr16
inc
out
sbb
ds
xchg
xor
xor
mov
pop
push
sbb
cmp
sub
add
jge
dec
cmpsl
push
mov
xor
outsl
fiaddl
dec
or
scas
jmp
xorb
mov
inc
pusha
fsubs
jl
mov
sbb
std
test
and
or
movsl
ds
fimuls
jnp
add
scas
or
cmp
pop
mov
ss
sbb
nop
es
xchg
shrb
mov
mov
fs
push
push
stos
mov
xor
add
int
mov
in
dec
lods
rorb
jecxz
test
repnz
insb
lret
and
in
jg
cmp
xchg
cmc
cmp
jge
cmp
sbb
insl
pop
or
pushf
out
dec
ds
xorb
lods
dec
imul
xchg
imul
add
jb
ret
mov
in
mov
xor
imul
loop
test
fs
movsl
loop
pop
push
pushf
push
cmpsb
adc
sbb
adc
mov
fistl
addl
mov
jg
pop
out
adc
test
xchg
pop
mov
inc
mov
xchg
mov
inc
fisubrl
jmp
xadd
and
add
loop
aaa
cmp
mov
lret
sub
xchg
cli
pop
mov
jns
add
push
jne
lcall
inc
or
pop
and
mov
sub
fstl
mov
mov
xchg
test
sbb
and
imul
dec
add
push
sub
dec
sub
push
pop
mov
push
sahf
cs
xchg
inc
js
push
push
leave
adc
jae
lcall
sbb
dec
pop
xor
pop
or
stos
inc
pop
pop
push
andl
xlat
mov
xor
lds
lods
mov
or
hlt
jb
push
fldz
xor
add
rclb
jl
pop
xchg
pop
jge
rcll
test
mov
fisubrl
rolw
shll
add
adc
das
pusha
pop
xor
adc
pop
movsl
repz
or
pop
pop
cmpsb
cwtl
jbe
sub
mov
add
cmp
adc
cmp
test
fsts
or
ljmp
movsl
xor
and
lret
mov
sbb
imul
fstpt
decb
sbbb
es
adc
xor
jle
and
cmp
sub
icebp
daa
aam
pop
dec
xor
cvtps2pd
stos
cli
rcr
pop
inc
dec
dec
in
mov
test
outsb
imul
fs
xor
out
mov
sbb
inc
insl
xor
arpl
dec
mov
or
sbb
outsl
mov
or
enter
fcoml
test
rcrb
mov
xor
sub
sbb
push
or
lods
decl
or
inc
pop
xchg
xchg
lea
shr
xchg
shrb
sub
mov
shlb
jmp
call
out
sbb
cmp
scas
fisubrs
les
or
mov
pop
cmp
push
lahf
sub
aam
xchg
sub
dec
add
out
mov
fldenv
jo
in
imul
ret
push
pop
movsl
cmp
and
push
jns
ljmp
mov
testb
cmp
dec
jo
repnz
adc
jae
jge
sbb
inc
sub
mov
pop
jne
ret
add
inc
mov
mov
mov
fsubrp
sbb
idiv
ss
inc
mov
fisubrs
inc
fisubs
sbb
xor
shr
gs
push
incl
stc
add
pop
ss
dec
mov
jno
repz
or
pop
neg
sub
mov
push
aaa
adc
cltd
mov
lea
stc
inc
sbb
mov
jb
lahf
out
aaa
xchg
lock
shr
das
cmp
xchg
imul
cmp
rcr
mov
sub
fwait
mov
out
cs
mov
ret
sbb
sbb
mov
pop
test
sub
or
cmp
mov
fcoms
loop
aad
rcr
jnp
pop
mov
pushf
fnsave
xor
mov
stc
sub
lcall
insb
push
lret
cs
rclb
lret
xor
aas
push
sbb
mov
xor
flds
mov
pop
je
lods
test
and
cmp
mov
xchg
jbe,pt
or
pop
or
inc
mov
or
ret
mov
cmp
or
dec
jns
ss
je
stos
and
jge
sbb
es
insb
sub
dec
mov
test
adc
mov
enter
dec
pop
test
mov
fwait
lahf
mov
lcall
adc
repnz
mov
jb
pop
pop
fistl
insb
imul
inc
jno
cmpb
xchg
mov
lods
mov
adc
sbbb
mov
ret
fnstsw
lahf
cwtl
cmpsb
pop
mov
ss
mov
push
or
or
adc
mov
sbb
or
std
cld
shl
xchg
sub
pop
dec
and
imul
insl
or
pop
mov
mov
mov
in
xor
aad
sbb
icebp
int
mov
jae
push
ljmpw
xchg
lods
adc
lret
out
dec
dec
ret
mov
insb
rcr
sbb
add
jp
xor
fists
pop
jp
adc
sbb
lahf
push
and
jno
xor
dec
mov
cmp
repnz
enter
dec
mov
test
call
mov
push
leave
sub
xlat
dec
or
jo
xchg
push
mov
or
cmp
popa
lods
push
push
scas
out
cmpsl
pop
int
sbb
mov
fcmovne
fmuls
enter
adc
fnstcw
pop
adc
pop
sbb
in
push
sub
cmp
add
mov
testl
dec
mov
out
cmpb
pop
sub
insb
cmp
xchg
mov
rcll
push
mov
addr16
imul
sti
push
clc
shrb
jmp
cmpsl
repz
mov
arpl
popa
xor
sti
ror
sbb
and
enter
stos
dec
jl
xchg
adc
inc
ljmp
mov
jecxz
inc
push
test
fstpl
les
ret
mov
mov
xor
lds
cmp
xchg
mov
ret
jae
or
test
sub
lret
push
sub
adc
push
loopne
xchg
inc
lods
mov
or
scas
lahf
push
add
mov
subb
mov
lods
mov
jge
xor
xchg
sub
lods
add
push
lods
mov
adc
inc
mov
cmp
adc
cli
fnstcw
repnz
lahf
jo
mov
push
sarl
inc
inc
test
adc
xor
jnp
mov
fistps
or
mov
sbb
mov
add
pop
or
xchg
mov
mov
sub
cmp
mov
ret
sbb
mov
lret
and
fldcw
fcomp
sbb
clc
mov
dec
in
mov
pop
or
mov
int
xchg
push
and
mov
mov
fisubl
add
pop
pop
ret
stc
add
mov
loope
pop
lret
xor
inc
jl
mov
inc
popa
stos
cli
push
pop
sbb
inc
je
sub
add
inc
gs
loop
and
xor
inc
in
push
sub
in
mov
scas
push
fcomp
pand
negb
movl
sbb
and
mov
push
xlat
mov
push
and
into
push
bound
popa
arpl
jecxz
in
and
jnp
inc
ret
xor
popa
sqrtps
push
cmpsl
mov
add
mov
arpl
popf
dec
popa
shlb
lods
mov
lret
fwait
inc
stos
sub
cmp
in
sarb
stc
or
fsubrs
push
adc
sbb
pop
mov
lret
int3
and
push
aad
jae
sbb
sbb
orl
ja
xchg
in
adc
push
mov
lahf
dec
or
orb
dec
outsb
adc
xor
in
rcrl
push
loop
fcoms
inc
iret
pop
movsb
sbb
aaa
add
mov
inc
das
roll
adc
das
push
mov
sti
out
or
add
out
shlb
jae
imul
mov
xor
hlt
es
xor
push
adc
addb
cli
int
push
stc
pop
aaa
sti
push
repnz
mov
sbb
test
cli
call
push
cmp
dec
mov
fs
mov
pop
sub
dec
fstpt
jp
push
cmp
jno
imul
and
cmp
mov
arpl
and
fwait
xchg
mov
pop
sbb
andb
les
lods
ret
sub
je
lds
jno
lock
xchg
push
enter
jge
mov
rep
aas
mov
mov
xchg
stc
jg
subl
out
ja
and
or
sbb
xchg
jmp
jno
ds
fucomip
cli
add
ss
in
aam
imul
stc
and
jmp
xor
nop
cli
pop
adc
out
in
mov
movsb
leave
push
bound
in
mov
cli
mov
or
orb
pop
cli
mov
add
std
adc
movsl
pop
scas
inc
inc
cwtl
clc
mov
mov
mov
or
lods
jp
adc
sub
mov
mov
cmp
dec
and
andb
mov
shl
daa
add
outsb
cmpsl
pop
pop
hlt
cwtl
pop
sub
je
pop
cwtl
popf
and
pop
mulb
add
or
into
repz
mov
lahf
pop
stc
pop
mov
or
mov
dec
add
sbbl
sub
push
enter
cmpsl
inc
fimull
out
addl
loop
lea
jl
mov
sbb
mov
test
sbb
mov
or
jl
and
fcmovnbe
mov
jmp
add
and
in
movsl
stc
mov
fisttpl
and
mov
ret
sub
mov
movsl
pop
test
mov
xor
mov
popf
adc
out
sbb
scas
xchg
stos
inc
mov
decb
sahf
push
mov
dec
jne
ficoml
pop
xchg
imul
pushl
insl
sbb
inc
sahf
ds
mov
push
pop
mov
push
add
push
test
push
push
es
cmp
xchg
jmp
sub
and
cmpsl
lret
and
mov
lods
loope
adc
dec
mov
xchg
mov
ret
scas
mov
ret
mov
out
pop
mov
pop
lods
insl
test
or
int
cmpsb
adc
fimuls
xorb
cmp
mov
cli
movl
jmp
mov
xor
lods
ss
or
jae
sbb
mov
nop
call
testb
test
loope
ja
pop
pushf
xchg
sub
xchg
test
xor
push
mov
add
sbb
test
in
fisubl
push
movsl
cwtl
jbe
dec
and
mov
mov
fwait
mov
sub
or
and
xchg
lods
int
sub
and
pusha
out
inc
das
out
insb
mov
fiadds
add
fwait
push
dec
pop
and
loopne
js
fdivl
mov
sbb
jl
adc
add
dec
lods
adc
bound
stos
xchg
add
sub
adc
push
leave
mov
cmp
xlat
test
fadds
lods
nop
jbe
mov
cld
aad
mov
pop
mov
in
adc
jmp
cmpsb
fwait
sub
movsl
loopne
fmulp
mov
add
jb
test
add
and
jg
pop
pop
stos
mov
cmp
lea
mov
mov
xchg
add
push
and
lds
aas
xchg
ss
jne
sub
jo
mov
sbb
push
cmc
xlat
gs
adc
mov
pop
mov
fisubs
popa
mov
and
movsb
jp
adc
out
mov
sahf
mov
in
mov
jp
insb
sbb
out
jecxz
add
sbb
mov
xchg
sub
push
push
daa
enter
cltd
fisttpl
sbb
adc
sbb
add
xchg
xor
xchg
sbb
mov
sbb
cmp
add
dec
pushf
fsubrs
dec
mov
jns
inc
adc
xor
adc
insb
out
mov
push
jo
mov
jnp
add
bound
and
mov
ret
aad
fidivrl
sbbl
dec
cmp
loopne
imul
or
inc
and
mov
and
pop
fstl
mov
mov
imul
out
xor
popa
xor
gs
or
add
add
dec
sbb
or
push
pop
loop
in
rcrb
stc
mov
std
pop
jmp
cmp
mov
fldl
pop
pushf
cmp
xor
clc
push
cmpsl
and
mov
mov
mov
push
mov
add
sub
jmp
imulb
out
test
sbb
xchg
and
insl
inc
js
test
mov
scas
mov
dec
hlt
fisubs
into
sub
push
shrl
pop
dec
mov
jecxz
cmp
sbb
mov
test
inc
push
sub
int3
mov
adc
lcall
scas
and
fcmovnu
xchg
sti
call
inc
inc
sbb
into
dec
lds
and
lock
ss
cmp
jne
pop
sub
lods
mov
das
popa
fists
dec
xor
or
or
jle
repnz
sbb
fnsave
dec
pop
push
loop
dec
mov
sub
ss
push
aam
push
aas
sbb
push
ret
xor
lret
shll
dec
or
push
lcall
loope
cmpsb
cmp
dec
sbb
imul
push
jp
lods
xchg
jno
push
pop
push
stos
fiaddl
push
add
mov
fistps
inc
imul
in
mov
leave
dec
or
push
cli
cmp
mov
je
inc
and
dec
jns
sub
mov
out
mov
xchg
ljmp
sub
inc
lahf
adc
pop
add
adc
enter
xchg
out
mov
fstpt
jmp
xchg
into
pop
nop
cmpsl
xchg
cmp
pop
fwait
dec
cmp
xchg
mov
outsb
xor
pop
pop
mov
inc
mov
movsb
xor
imul
xor
push
mov
sti
aas
cmp
icebp
mov
pop
leave
mov
sub
dec
fs
in
scas
push
mov
lods
loop
sub
es
mov
inc
daa
movb
loop
and
jmp
jae
repnz
cmp
ret
int3
xorb
out
pop
lds
daa
push
lods
jne
stos
ficomps
sbb
xor
inc
clc
sub
push
xchg
mov
sub
add
xchg
nop
jns
dec
cmp
std
or
dec
fdivr
dec
mov
pushf
fs
repnz
pop
fwait
aam
hlt
xor
inc
cmp
insl
sub
push
jmp
repz
pop
cmpsl
cld
std
add
pop
pop
inc
cmp
jne
cmpb
pop
xchg
push
add
dec
fidivl
lret
push
cli
push
aaa
jnp
sti
fidivl
xorl
test
lods
lcall
mov
shrl
pop
pop
mov
sti
sbb
and
ret
pop
nop
pop
xor
pop
add
pop
add
or
test
cmp
popa
sti
sub
cli
jns
mov
cs
mov
inc
in
push
inc
test
mov
add
test
sub
shlb
pop
fs
je
test
adc
call
push
dec
insb
repz
loopne
dec
cltd
mov
mov
insb
fiaddl
cld
mov
scas
sbb
mov
mov
mov
inc
mov
or
les
push
sbb
sbb
jmp
pop
mov
mov
mov
gs
ja
sbb
in
fst
loopne
jmp
inc
scas
ja
hlt
mov
cld
insl
movsb
or
mov
adc
mov
push
fnstenv
jae
or
sbb
pop
jno
adcb
xchg
pop
inc
mov
aas
ds
mov
sub
jmp
pop
xchg
test
xor
ds
push
pop
xchg
pop
popa
decl
test
pop
fidivs
movsb
xor
pushf
lret
push
mov
dec
or
movsb
inc
in
outsl
push
sti
mov
jb
in
push
sbb
inc
lds
cmp
adc
insb
fsub
mov
xchg
dec
mov
cmp
mov
jne
and
test
push
push
cmpsl
xchg
enter
mov
mov
aaa
lods
or
jl
mov
gs
fistpl
cmpl
fwait
popa
sbb
gs
popf
mov
pop
jbe
mov
push
dec
loop
popa
mov
mov
icebp
fidivrs
mov
inc
pop
out
nop
stos
cmpsb
jae
push
cmpsl
mov
ror
push
add
mov
jns
add
daa
lods
jecxz
sarl
pop
or
jl
push
stos
inc
inc
ss
push
xchg
clc
mov
repz
push
jo
jb
mov
mov
gs
pop
cmc
fcompl
cmpsb
pshuflw
rclb
stos
ret
jb
sar
pop
rolb
pop
cmp
inc
jbe
lock
dec
mov
mov
mov
scas
and
fcoms
adc
dec
push
addb
jp
xchg
ss
test
adc
add
insl
add
adc
and
pop
push
xor
sbb
mov
sub
xchg
movsl
jge
xchg
lods
add
mov
push
popa
dec
xchg
jno
mov
and
icebp
xchg
push
and
mov
fidivrl
clc
fs
or
sbb
cltd
sarb
adc
cmpsb
mov
or
mov
pop
lret
ret
mov
pop
shrl
ss
hlt
add
loopne
shlb
lods
mov
pop
test
adc
xor
test
cmc
out
or
mov
clc
out
divl
sti
insl
cld
ficoms
sbb
lcall
add
rolb
negl
jecxz
std
add
dec
mov
mov
movsb
int
mov
pop
dec
ret
shrl
jl
adc
dec
bound
sub
fisttpl
cwtl
shlb
ljmp
jne
and
inc
dec
lahf
mov
add
aas
mov
int
jecxz
jmp
mov
mov
mov
out
stos
mov
and
xchg
mov
pop
pop
or
es
pop
lret
fisttpll
mov
mov
pusha
sub
mov
mov
adc
idiv
pand
push
or
inc
jne
jp
xchg
cmp
das
aas
nop
push
insb
cmp
mov
mov
sub
aam
push
dec
repz
dec
incl
fidivs
cmp
ret
mov
xchg
pop
rorb
sbb
gs
loopne
in
enter
jnp
cmp
fistps
sti
int3
push
jg
jb
pop
pusha
jp
xor
pop
lret
xchg
pop
mov
sbb
add
mov
jb
xor
mov
lods
mov
inc
cmp
or
push
pop
clc
cli
cmpsl
xor
mov
jecxz
adc
mov
hlt
push
adc
push
mov
dec
out
in
push
inc
lock
add
adc
lahf
lods
push
and
mov
data16
bnd
add
insb
jns
pop
add
loopne
loope
pop
insl
lock
jl
out
push
jmp
mov
xor
sub
mov
popa
inc
sub
hlt
mov
adc
jle
ja
lret
mov
mov
xor
pop
test
or
dec
jb
mov
add
stos
xor
fstpl
out
cmpsl
cmp
out
repnz
add
xchg
ds
cmc
mov
jmp
jae
lea
fwait
mov
and
fimull
mov
mov
daa
inc
call
repz
mov
add
fwait
clc
mov
enter
imul
jnp
lods
adc
imul
xchg
daa
dec
xor
mov
xor
insl
jge
jb
aad
rcrb
shrb
mov
jmp
inc
pop
cmp
jg
sub
mov
fisttpll
and
adc
fadds
popa
mov
aad
mov
mov
pop
test
and
hlt
fldl
call
push
dec
movsb
push
mov
std
jno
and
adc
in
pop
inc
jae
mov
cmp
sub
popa
mov
push
dec
cmp
fidivrs
das
or
fidivrs
shll
dec
inc
cmp
adc
sub
cs
or
sbb
fyl2x
xor
sarb
aas
into
leave
cmp
mov
push
mov
ljmp
inc
and
lahf
jl
sbb
mov
and
mov
pop
add
push
sti
leave
mov
scas
mov
aas
push
rorl
cmp
and
xor
add
sahf
push
pop
lret
jl
inc
xchg
scas
xlat
adc
and
mov
push
sbb
jo
mov
jno
mov
cmp
leave
sarl
fdivr
enter
pusha
idiv
cltd
mov
ret
dec
mov
cld
ret
dec
mov
scas
repnz
jo
out
xchg
xor
sub
pop
xor
mov
rcrb
xchg
movsl
mov
jne
cld
in
adc
in
inc
aaa
out
fldl2t
pop
movsl
sar
cmc
adc
cmp
add
or
into
nop
insl
inc
push
out
ret
scas
clc
popa
sti
icebp
fists
enter
dec
add
mov
mov
mov
sbb
int3
xchg
jne
xchg
push
out
sub
mov
decl
cwtl
movsl
bnd
loopne
pusha
pop
lods
inc
hlt
gs
mov
jb
pop
mov
cld
cmp
cmp
adc
add
cmpsb
pop
rcrl
ljmp
mov
jae
mov
jbe
push
mov
jecxz
xor
cmpsb
jmp
icebp
loop
fwait
inc
cmpl
leave
pop
mov
mov
insl
cmpsl
jns
or
popa
lods
mov
imul
mov
jg
mov
movsl
mov
and
xchg
mov
xor
jg
fimull
insb
int
or
mov
push
sbbb
xchg
push
pushf
das
cmp
mov
in
xchg
lods
add
shlb
sahf
xor
jb
test
outsb
dec
push
inc
outsb
jne
mov
adc
outsb
rorb
fidivrl
stos
adcb
adc
jmp
andb
mov
imul
das
add
inc
mov
insl
cmp
in
cmp
hlt
mov
xor
sbb
movsb
addb
mov
das
cmp
enter
fs
call
push
mov
dec
xorl
adc
dec
jbe
push
cmp
push
stos
sub
jb
jecxz
inc
sub
cs
jl
loopne
xchg
sbb
mov
dec
lea
shrl
ss
push
push
scas
imul
sub
sub
cmp
icebp
xor
inc
out
mov
scas
out
inc
leave
cmp
pop
je
lret
ljmp
adc
mov
aam
push
mov
repz
in
or
dec
cmpsb
xchg
test
test
adc
mov
push
jnp
es
mov
push
push
ss
lahf
dec
jnp
cmc
inc
xor
mov
add
or
leave
lret
mov
jmp
xchg
iret
push
xorb
and
js
jge
or
cwtl
push
std
xor
call
push
xor
aam
outsb
dec
insb
pusha
xor
scas
mov
add
jmp
xlat
aad
shll
and
pop
push
mov
hlt
icebp
and
cpuid
push
dec
lret
inc
push
lcall
lret
add
sub
popf
cs
mov
pop
sbb
lret
mov
mov
xor
mov
cs
or
cmp
pop
xor
std
mov
xor
iret
insl
rol
popf
lock
xor
repnz
adc
xor
add
pushf
fidivl
inc
test
loop
ss
push
sbb
lods
push
mov
mov
insl
repnz
movsl
mov
or
add
push
and
sub
or
lods
mov
push
lahf
xor
and
push
stos
insb
in
lret
stos
test
cltd
movsl
dec
sbb
xchg
push
pop
ffree
xor
loop
sbb
dec
cltd
jmp
mov
jge
push
pop
cmpsb
std
add
in
fidivrs
loope
mov
adc
xor
imul
jno
or
push
and
sub
outsb
mov
lahf
dec
lret
mov
test
jnp
fwait
imul
cmp
and
fs
outsb
and
fwait
lahf
push
std
pop
call
mov
mov
mov
lret
or
in
mov
test
mov
push
xor
cmp
scas
xor
xor
sahf
dec
iret
xchg
test
popf
out
jl
inc
dec
xlat
mov
mov
pop
sbb
shlb
dec
mov
imul
and
roll
mov
leave
mov
adc
mov
xlat
pusha
mov
push
mov
push
addb
jo
xchg
mov
pminub
sbb
mov
add
lret
pop
sub
push
out
push
cmp
or
fstps
jmp
std
mov
mov
sbb
push
lock
adc
leavew
in
dec
pop
sbb
jno
cmp
xchg
pop
and
adc
sbb
jbe
stos
mov
int3
push
mov
outsb
aad
pop
adc
fimull
ss
mov
pop
xor
mov
xor
cmp
mov
mov
nop
aad
inc
xchg
or
mov
sbb
lods
mov
sub
cmp
test
add
dec
mov
mov
mov
in
sbb
repnz
dec
dec
ss
fwait
and
into
iret
ret
lahf
and
ss
sub
mov
mov
popa
fiaddl
pop
cmp
pop
xor
dec
cmp
pop
mov
jno
mov
stc
mov
data16
push
cmp
test
testl
xchg
sub
fs
pop
icebp
cld
adc
cmp
xor
sub
shlb
xor
push
lock
mov
inc
scas
mov
dec
jb
cmp
shll
xor
arpl
test
jle
sub
inc
cmp
jl
addr16
adc
loope
ss
pop
jbe
mov
pop
mov
push
mov
or
dec
sub
inc
sbbb
mov
mov
mov
aaa
rcrl
cs
dec
xor
jg
and
jae
loopne
dec
aad
adc
jmp
and
mov
out
or
in
fisttpl
das
clc
call
outsl
cltd
fs
cmc
mov
push
scas
aas
xor
shrb
add
arpl
mov
fsubr
pusha
mov
hlt
pop
mov
push
popf
loop
push
lcall
sbb
xchg
push
adc
inc
aaa
out
fcoml
mov
xchg
mov
or
xchg
je
repnz
push
das
cli
push
inc
popa
shrl
lcall
fisttpl
fwait
pop
repnz
enter
mov
mov
repnz
and
mov
xor
push
or
push
or
lds
in
and
push
in
dec
lods
inc
aam
jle
jbe
rdmsr
xor
loopne
sub
xchg
mov
arpl
mov
test
scas
dec
aaa
sub
mov
xchg
and
popf
lcall
comiss
xor
shlb
in
andl
jnp
xchg
test
stos
lcall
fs
outsb
sub
add
jne
jns
insb
out
pop
fwait
mov
insl
and
mov
in
testl
mov
ss
dec
movsl
xchg
xor
sbbb
pop
je
lahf
loopne
sub
mov
push
dec
data16
mov
xor
push
fimull
pop
fs
inc
push
sti
aas
out
out
sbb
jp
das
lods
jl
repz
popf
sub
ret
adc
int3
call
inc
int
or
cmp
jmp
mov
cmp
mov
mov
lods
xor
pop
jmp
jle
pop
push
inc
pop
test
add
es
out
mov
lods
les
adc
in
lret
xor
inc
rcrl
addb
fcmovnu
push
mov
inc
jmp
bound
and
mov
fidivl
sbb
sub
movl
pop
add
sub
pop
ljmp
mov
gs
popa
sbb
cmc
outsb
mov
push
in
ljmp
inc
push
add
stc
sub
mov
push
xor
jae
fistpll
mov
mov
push
subb
pop
push
jne
out
xchg
xor
loop
sub
mov
xor
out
xor
dec
lret
adc
ss
mov
xchg
insb
sub
mov
fldcw
jl
inc
popa
out
adc
fadds
xor
sbb
out
xchg
in
out
imul
xor
ljmp
aas
lds
mov
inc
jl
pop
shl
out
cmp
xor
push
mov
pop
movsl
cmc
stos
or
or
xlat
push
insl
pop
loop
hlt
fwait
adc
jbe
gs
jns
adc
dec
stos
mov
sar
pop
and
dec
mov
mov
rcrl
xchg
in
sub
dec
mov
out
jo
or
sbb
mov
loop
es
cmp
rcr
cli
add
add
xchg
addl
mov
cmp
push
stos
loope
inc
add
mov
adc
clc
sub
mov
popf
mov
jns
mov
mov
mov
fstps
mov
inc
sbb
lds
fisttpl
pop
push
cltd
in
fs
push
fsubrs
gs
loope
rcll
bound
xor
sbb
ret
push
mov
out
ds
xor
pop
stc
inc
mov
into
imul
jno
inc
loopne
inc
adc
repz
sub
mov
filds
or
popl
mov
aaa
lcall
mov
mov
or
fs
and
dec
push
aas
or
out
push
or
pusha
push
lods
loopne
into
lods
adcl
fmull
fldl
scas
mov
jnp
fidivl
or
xchg
aaa
jns
mov
out
test
jnp
int3
mov
pop
insl
mov
mov
mov
fisubrs
xchg
scas
mov
sbb
sub
mov
sbb
fisubrs
adc
aas
rcrw
rclb
fisubs
ds
mov
dec
lock
std
lret
rolb
sbbl
insb
mov
sub
sbb
cwtl
sub
je
inc
cli
lret
fidivs
pop
cmp
sub
xor
dec
add
fists
xchg
out
fbld
cmp
pop
rcrb
inc
jne
clc
or
jecxz
xlat
orb
bound
sub
arpl
jne
mov
cmp
lds
int
inc
mov
inc
pop
and
jo
pop
cli
and
mov
scas
scas
scas
shll
jg
jle
jg
arpl
add
xchg
adc
aam
outsl
mov
mov
pop
movsb
dec
pop
adc
push
shlb
jo
loop
rorb
out
xchg
sbb
dec
lods
subl
sub
fmuls
int
sbb
sub
movsl
lods
mov
xchg
pop
fcomi
xor
ja
fcmovu
dec
nop
cmc
stos
inc
push
aad
scas
adc
test
push
and
xchg
pop
adc
cmp
repnz
adcb
lahf
or
adcb
push
mov
ds
xorb
pop
icebp
sub
mov
sub
pop
mov
or
sub
repnz
cmp
jnp
lods
repnz
pop
xor
fisubs
jnp
test
push
ljmp
pop
mov
xchg
push
repz
mov
push
mov
inc
adc
in
jae
shll
and
loop
pushl
or
mov
jns
xchg
and
xacquire
pusha
mov
pop
jns
lds
inc
dec
out
mov
fs
pushf
sbb
adc
popa
or
mov
shlb
mov
jno
xchg
cmc
cmp
out
cmpsl
inc
mov
pop
adc
sub
sub
mov
fdivl
adc
movsb
in
mov
mov
sbb
jmp
gs
xor
push
pushf
fs
frstpm(287
es
out
int
outsb
adc
xchg
pop
jecxz
and
xor
inc
mov
loope
lods
fidivrl
mov
out
push
arpl
insl
je
jnp
cmp
jg
mov
fcomi
dec
jno
sub
adc
idivb
xlat
adc
adc
lea
fnstcw
subb
sub
sar
sub
icebp
push
xchg
mov
xchg
fucomip
ljmp
ret
mov
push
pop
stc
dec
xchg
mov
mov
ljmp
fsubr
mov
out
xor
ja
mov
ss
mov
fwait
mov
pusha
rcl
mov
mov
sub
mov
mov
mov
mov
les
cwtl
push
popa
xchg
movsl
pop
mov
ljmp
imul
bound
fldl
xchg
mov
jnp
das
xlat
or
pop
mov
dec
mov
or
bound
mov
inc
imul
sub
out
test
mov
movsl
adc
movsb
cmp
adc
inc
fwait
ret
dec
loopne
pop
shll
xchg
cmp
popa
xor
jmp
lds
cmp
add
cltd
or
or
dec
pop
xchg
out
jns
mov
sub
orb
fcomps
xchg
sbb
mov
cmpsb
push
cmp
cs
es
inc
xorl
sub
cld
xchg
add
popf
test
pop
andb
js
stc
cmp
mov
add
mov
pusha
cmp
add
mov
enter
adc
sarl
pop
notb
fisubrs
dec
in
sbb
je
lahf
fs
and
inc
js
enter
sub
hlt
sub
lds
cmp
xchg
xor
fldln2
sbb
lods
lock
cmpsl
fsubrl
test
mov
cmp
addb
sub
cmp
cli
arpl
adc
leave
addr16
xchg
lret
sbbb
test
push
sbbl
push
jnp
lahf
sub
test
ret
or
jb
fld
filds
sarl
cltd
xchg
and
mov
pop
xor
mov
adc
cwtl
pop
cltd
rclb
out
dec
mov
lcall
arpl
fwait
sbb
repz
push
lret
adc
pop
adc
mov
fidivs
sahf
sbb
repnz
das
adc
imul
ret
out
pop
add
dec
ret
iret
push
insl
mov
je
inc
test
add
adc
xor
lods
push
dec
inc
xor
mov
jp
dec
jp
gs
or
sti
xchg
ljmp
jo
jbe
aaa
bound
sbb
sbb
lds
jl
out
loopne
enter
add
test
mov
mul
cmc
mov
xchg
stos
es
ss
mov
xor
das
sub
repnz
push
pop
pop
xchg
add
enter
jns
popa
cmpsl
sbb
ss
pushl
sub
les
cmp
sbb
lret
mov
push
jbe
push
mov
loopne
sbb
out
loopne
out
shlb
adc
dec
fisubl
sbb
test
sub
mov
xchg
clc
cmp
lock
ficoml
sub
mov
or
adc
pop
adc
sub
mov
add
shr
and
jne
add
insl
xchg
sub
inc
lock
insl
rcrl
stos
add
jp
push
mov
xor
pop
das
mov
jb
popf
mov
cmc
and
dec
adc
clc
scas
jmp
arpl
pop
inc
dec
xchg
push
mov
mov
hlt
icebp
lret
dec
mov
dec
shll
jmp
dec
mov
jo
pop
jmp
cmpsl
push
cmpsb
stc
inc
lods
lods
nop
mov
rcrb
shlb
ficoml
pop
ss
bound
inc
pop
and
sti
push
sub
push
or
mov
ss
test
add
pushf
jle
outsl
sbb
testl
mov
cmc
sub
cld
adc
stc
mov
loopne
aam
xchg
or
into
adc
or
jnp
leave
aam
ss
sbb
jo
lcall
pop
fistps
xor
scas
adc
xchg
aas
mov
add
xor
int
movsl
popl
mov
push
push
inc
mov
jne
xchg
sbb
or
xor
sbb
push
or
xor
jge
sub
clc
mov
ds
jecxz
adc
mov
add
sbb
pop
jg
push
dec
mov
fimuls
lds
mov
sbb
adc
pop
hlt
mov
cs
loopne
push
ds
push
sbb
or
pushf
stc
pop
push
sbb
sub
add
mov
loop
outsl
jge
imul
jo
mov
or
jmp
sub
faddl
lds
sub
push
mov
pop
cmp
sbb
dec
pop
xchg
stc
mov
orb
ja
decb
pop
mov
sbb
and
imul
xor
mov
sub
and
int3
sbb
inc
jne
dec
rclb
loope
nop
movsl
jge
ficoml
jmp
mov
loop
mov
lds
mull
fs
pop
inc
inc
shll
cmp
dec
subl
add
mov
xchg
jl
mov
or
dec
roll
pop
lods
popa
js
mov
inc
push
scas
adc
or
xchg
push
adc
dec
lcall
fs
xor
inc
jns
push
inc
test
sarl
xor
sub
test
and
jnp
cli
rcll
mov
sub
test
adc
add
aam
imul
and
stos
orb
lods
mov
sub
jecxz
xor
add
xor
and
rolb
cmpsl
and
rcrl
mov
repnz
in
cs
pop
sbb
adc
jle
mov
cmp
in
in
mov
adc
int
fwait
mov
lods
jae
out
dec
fisubrs
les
and
das
mov
rol
sub
repnz
fs
push
add
mov
or
or
mov
pop
add
push
movsl
stc
pop
sarb
ss
pop
push
pop
jns
mov
in
sbb
jno
cwtl
pop
jg
adc
add
lods
rorl
loopne
lds
jle
mov
mov
adc
lea
std
js
icebp
add
adc
mov
push
pop
mov
outsl
sbb
loop
es
cmp
xor
pop
mov
das
mov
jle
sti
fwait
jns
jmp
pushf
test
jns
das
int
sub
movsb
test
sbb
repnz
iret
pop
xchg
pop
lea
adc
mov
push
popf
cld
lret
mov
sub
gs
aas
das
dec
mov
lcall
pop
lret
in
mov
pusha
xor
pop
mov
cmp
mov
dec
fstpl
scas
icebp
pop
cli
mov
stos
sub
and
fwait
cld
xor
mov
adc
stc
mov
mov
stos
inc
pop
sbb
bound
jns
sub
adc
xchg
xor
stc
cmpsb
ljmp
jbe
sbb
out
jmp
dec
aad
out
sbb
jmp
jmp
in
mov
fistpl
cmp
data16
mov
movsb
repz
lret
insl
inc
or
jo
fst
idivl
pop
sub
lds
out
lods
fxtract
out
test
mov
sbb
dec
mov
jge
pop
test
xor
jmp
pop
pusha
insl
mov
dec
xor
dec
pop
shrl
sub
rep
ret
mov
lea
mov
pop
sub
adc
mov
adc
inc
loop
sbb
pop
leave
push
sub
ret
push
mov
fildll
mov
cmp
stc
or
loopne
mov
imul
adc
enter
ds
repnz
movsl
cwtl
dec
sub
imul
bound
adc
idivb
ficompl
xchg
jle
jns
dec
aas
push
jg
mov
mov
in
gs
and
rcrb
neg
cmpsb
sub
xor
push
cld
mov
arpl
cmc
rcrl
js
push
pushf
test
xor
dec
mov
out
es
jno
pop
aaa
ja
leave
jge
adc
dec
lcall
dec
push
sub
gs
rorl
dec
stos
pop
mov
stc
jbe
imul
shlb
enter
stc
mov
jbe
std
inc
mov
or
sub
dec
xchg
pop
popa
add
sub
in
sub
ror
enter
fildl
orl
lret
mov
cmp
subl
jg
ss
adc
ja
pop
pop
jnp
scas
dec
or
decl
ds
xchg
pushf
sti
pop
data16
inc
cmp
lock
and
pop
mov
in
test
dec
fisttps
or
sbb
xor
loop
bnd
xchg
xchg
gs
jae
bound
push
jp
das
out
sbb
fwait
jle
push
enter
les
cmp
out
in
mov
sbb
insl
testl
arpl
sbb
jge
lret
clc
adc
out
push
fwait
inc
sbb
lcall
ss
jae
ljmp
cmp
pop
lods
pop
mov
addb
loope
push
sbb
push
jno
repz
sbb
rcrb
in
cld
ret
jp
sbb
rorb
movsb
xlat
xor
push
mov
jp
js
sbb
push
and
lret
lahf
push
ljmp
out
push
jmp
push
pop
xlat
jns
les
xchg
push
in
pop
mov
jmp
out
sub
mov
dec
add
push
mov
jp
js
sub
or
jno
cmp
aad
js
orl
leave
xor
pop
stos
mov
ficompl
out
adc
js
push
xchg
and
add
mov
and
imull
and
out
jecxz
gs
push
jmp
mov
fwait
sti
adc
push
jo
xchg
adc
es
add
cwtl
fwait
test
std
decb
jb
les
scas
mov
imul
bound
js
outsl
jge
or
addr16
cmp
add
push
or
jmp
popa
fwait
mov
pop
je
adc
pop
idivl
or
mov
pop
pop
lods
cmp
mov
stos
xchg
add
jmp
xor
icebp
push
jle
call
and
adc
push
cs
clc
pop
or
sub
add
lahf
lret
jo
jo
lcall
or
push
mov
inc
xchg
enter
fnstcw
jns
add
push
lret
adcb
shll
shr
test
mov
mov
ret
xor
shlb
decl
sbb
xchg
jae
jle
add
pop
inc
cmp
repnz
outsb
imul
test
mov
pop
push
in
out
jle,pn
es
mov
and
and
aas
cmp
and
pop
test
xchg
adc
pop
add
cltd
pop
push
insb
dec
dec
mov
pop
enter
loop
mov
or
lods
fidivrl
sub
dec
ds
pop
lahf
int
xor
push
push
push
sub
call
ss
jp
cmc
sub
adc
adc
sarb
cli
sbb
push
inc
rol
sbb
mov
push
aas
inc
mov
cli
mov
inc
out
push
xchg
push
sub
inc
add
popa
push
lds
lods
cli
or
cmp
pop
pop
std
jns
mov
cli
cmp
cltd
fcmovbe
adc
roll
mov
fisttpll
add
in
push
jmp
push
lock
aad
jge
jns
or
bound
adc
mov
insb
lret
movsl
imul
sub
or
movsl
leave
cli
mov
mov
cwtl
mov
mov
lcall
addl
popa
mov
lret
sarl
into
lcall
sbb
mov
add
pop
mov
mov
test
fs
ss
jl
ret
mov
cld
lds
enter
movb
mov
rcll
aam
adcl
sbb
cltd
xchg
fistpl
and
incb
fucom
cli
aam
push
lret
mov
das
scas
adc
push
and
cmp
cmp
mov
sbb
gs
fs
jg
sahf
pop
and
adcb
adc
leave
xchg
adc
and
rolb
int
hlt
mov
in
push
jl
mov
mov
out
cs
decb
add
sub
cmp
cld
popa
movsb
xor
fmul
insl
or
out
or
jae
outsb
bound
pop
pop
mov
sbbl
vpmulhw
sbbb
push
call
in
adc
cmp
sub
lcall
push
lahf
dec
fimuls
outsb
lahf
cmp
popa
mov
sub
inc
xchg
mov
or
test
inc
mov
outsb
cmp
mov
jmp
or
and
test
jmp
mov
ja
mov
cwtl
je
sbb
pop
jp
movsb
dec
fnstenv
out
or
mov
mov
cmp
mov
add
or
jmp
fnstsw
movsl
xchg
sub
and
stos
es
adc
and
or
lods
push
lret
sub
lahf
jo
out
movsl
or
adc
mov
xchg
es
mov
cmp
push
cltd
aad
repnz
rcl
or
fisubrs
adc
cmp
jns
push
fs
out
pop
jns
loop
lahf
ret
mov
lock
lahf
cltd
push
repnz
fimull
fildl
adc
xor
dec
push
pushf
test
cld
scas
dec
jno,pn
or
out
pop
fwait
pop
mov
fnstsw
jg
es
sbb
stc
vucomisd
jecxz
shl
sbb
mov
xor
femms
shlb
jno
out
or
hlt
and
pop
sahf
sbb
enter
pop
mov
inc
sbb
fwait
jl
jae
sub
loopne
sub
xchg
xor
xchg
imul
ds
fwait
and
test
rcrb
jecxz
dec
xchg
adc
cmp
jns
nop
xchg
dec
jnp
js
movsb
mov
sub
repz
or
push
fcmovbe
stc
inc
dec
gs
adc
sbb
lods
das
cmpsl
popf
cmp
and
ret
xlat
outsl
shlb
pop
lea
lds
and
mov
dec
adc
shll
xchg
dec
or
or
adcb
jmp
pcmpeqb
push
jno
lods
dec
ds
inc
cmp
adc
sbb
movsl
cmpsl
sahf
add
outsb
nop
xor
shll
mov
sbb
push
dec
mov
mov
sbb
nop
xchg
xlat
sub
std
jp
cmpsl
jl
sbb
xchg
cltd
fnstenv
cmp
and
sbb
mov
dec
sub
je
into
loopne
aas
int3
mov
xchg
cmpsl
adc
lcall
lods
or
sarl
aad
scas
jmp
mov
popa
push
cmp
add
nop
int
add
aaa
js
push
movsb
mov
mov
sahf
mov
ret
add
int3
shlb
xor
mov
sub
dec
jmp
testb
xor
inc
jle
adc
out
shrl
cli
sub
mov
jle
jg
ljmp
dec
xor
fstps
mov
ficompl
push
inc
or
mov
inc
inc
sbb
sbb
aad
scas
fs
cmp
enter
fwait
test
cs
or
mov
data16
dec
sub
mov
das
negl
arpl
cwtl
jnp
pop
lods
xlat
xchg
pop
sub
jl
or
pop
or
push
daa
xor
mov
js
pop
pop
jo
cmpb
dec
cwtl
or
outsl
pop
add
mov
daa
pushf
bound
mov
xorl
aaa
int
cmp
or
xchg
les
push
dec
mov
xchg
fisttpl
aas
sbb
sub
mov
or
pop
push
mov
inc
add
fimuls
sub
or
repnz
xchg
mov
cmpsl
add
fnstenv
repnz
cltd
sbb
xor
mov
imul
xor
adc
add
dec
xlat
mov
mov
cltd
xchg
jns
fidivrs
inc
xchg
jbe
lods
dec
fcoms
fs
dec
mov
leave
fidivrl
ret
je
mov
xchg
pop
push
call
scas
rcr
cmp
insb
movsl
lcall
fwait
and
dec
cmpsl
add
push
jnp
cs
cmp
jge
mov
or
add
or
jl
inc
movsb
lods
clc
mov
imul
mov
dec
popa
cmpl
push
jb
dec
xor
jmp
jne
xor
jl
movsb
dec
fwait
mov
je
sbb
add
push
rcl
jl
movsb
cmp
push
ss
xorb
enter
push
aaa
xchg
cmp
xchg
pop
cmp
push
orb
subl
pop
sub
jecxz
pop
xchg
enter
int
pusha
dec
sub
inc
scas
cs
mov
jl
mov
cli
jp
shrl
push
faddp
cmc
mov
or
mov
divl
rcrl
sbb
lock
in
cli
ficoml
cmp
movaps
into
adc
iret
ficompl
leave
add
mov
fimuls
dec
mov
in
mov
xchg
gs
mov
cli
sahf
inc
jnp
mov
mov
cmp
hlt
push
hlt
es
sub
stc
sbb
cmp
fstps
lret
xchg
pop
shrb
pop
aam
mov
push
xlat
popf
clc
stos
out
add
mov
fldl2e
jmp
add
inc
pop
inc
push
jp
aaa
xorl
int
mov
popa
popa
test
cmp
mov
pop
dec
mov
mov
adc
jno
pusha
cmp
and
xchg
push
dec
adcl
ss
andb
mov
cmp
fmulp
cmp
mov
mov
mov
cmc
filds
pop
mov
pop
ss
clc
mov
and
cmpsb
stc
out
gs
jno
in
rol
fwait
push
sub
lahf
jne
dec
mov
pop
out
roll
lods
test
mov
xor
fs
pop
push
jno
sbb
lret
icebp
sti
pop
cmp
sbb
xchg
rorb
xchg
cmp
ss
xchg
xor
das
push
jp
mov
insb
lahf
inc
lods
pop
lds
mov
sbb
mov
push
mov
mov
pop
stc
fnstsw
clc
or
inc
sarb
dec
mov
inc
adc
jo
int3
adc
test
and
jae
arpl
adc
jnp
dec
test
das
popf
lret
ret
adc
loope
xchg
pop
lret
je
mov
outsl
add
mov
xor
sbb
test
inc
js
cmp
movsl
clc
dec
cmpsl
xlat
sbb
lods
gs
loope
or
cli
push
adc
data16
add
xor
cwtl
mov
push
js
xchg
mov
adc
stc
fwait
das
sub
cmp
adc
les
inc
mov
fcoml
dec
cwtl
lock
pushf
mov
adc
sub
and
or
mov
fnsave
cmpsb
outsb
xchg
adc
xor
jb
cmp
xchg
sbb
aam
add
jbe
ljmp
cmp
push
cmp
add
fcmovnb
dec
mov
mov
jl
rcrb
push
int3
loopne
adc
mov
fidivrl
into
push
push
sbb
jo
imul
in
inc
stos
xchg
scas
jle
pop
repnz
mov
jp
jge
adc
cmpsb
arpl
stc
cmc
mov
mov
dec
mov
shlb
movsl
cmp
jns
repnz
fsubs
jmp
xchg
pop
cmp
js
jbe
andl
mov
cmp
ljmp
cmp
xlat
pusha
dec
nop
push
ja
sub
fcompl
pop
ja
fwait
push
dec
mov
adc
movsl
jle
pop
dec
and
mov
shr
xchg
pop
test
adc
fisttpll
cmp
mov
ss
mov
stc
xor
mov
jbe
and
int3
xchg
mov
sub
mov
sub
add
pop
adc
pop
and
in
sbb
xor
fcoml
jns
clc
arpl
sub
std
dec
pop
mov
cwtl
inc
iret
adc
dec
sti
lods
xchg
and
mov
lret
out
adc
mov
cld
inc
adc
decb
push
test
leave
sub
scas
test
std
test
fstpt
xchg
cli
movsb
mov
xor
xchg
xchg
aas
popf
xlat
out
dec
cli
push
mov
mov
cld
sbb
jmp
mov
xor
into
aam
sti
movsl
inc
je
xchg
sub
push
insb
xor
cmpsl
fnstenv
loope
sub
pop
jno
add
xor
fstpt
pop
xor
xchg
lahf
sub
push
mov
adc
dec
dec
loop
jns
mull
test
xchg
jo
sub
rclb
outsl
dec
and
rolb
cmpsl
add
push
loop
divb
push
cmpsb
mov
xorb
dec
xchg
sarl
fisubs
pushf
cli
aad
js
inc
mov
out
add
cmc
push
bound
insl
sahf
cmpsb
jb
fnsave
aad
das
arpl
sub
push
fnstsw
xchg
jg
aas
or
out
or
fmulp
cmp
aas
cltd
jns
cli
bound
call
mov
push
mov
loopne
sbb
inc
push
pop
adc
mov
out
xor
cmp
dec
movl
pop
addr16
daa
adc
ljmp
pop
xlat
ja
in
test
adcl
es
mov
push
mov
clc
xchg
or
mov
sbb
xchg
dec
pop
xor
ljmp
xchg
fidivl
sbb
and
das
movsl
pop
dec
dec
sub
outsb
rcr
push
jnp
sub
pop
js
sub
lret
lds
test
fstpt
test
adc
push
sub
flds
or
or
jno
aam
dec
imul
call
mov
mov
push
jmp
ficoml
outsl
adc
test
ljmp
inc
or
out
pop
lret
or
ret
inc
jmp
dec
or
shl
stc
mov
xor
sahf
xorb
jb
inc
mov
dec
or
jo
fdivl
out
jge
push
add
sub
enter
dec
mov
mov
xor
push
ss
sahf
add
cmc
push
outsb
sahf
cmc
jle
lods
sub
nop
stos
mov
push
jge
mov
fdivr
jge
aad
sarb
xchg
hlt
add
cmp
pop
cmc
addr16
sbb
fildl
ss
jmp
repz
js
mov
pushf
mov
mov
lods
mov
adc
mov
imul
movsb
push
out
das
leave
es
cmp
pop
js
das
push
imull
dec
cld
mov
jnp
sub
jo
out
imul
inc
pop
ficomps
pop
andl
stos
ret
imul
mov
jnp
fs
das
cltd
insl
cmp
xor
push
mov
hlt
std
adc
xchg
push
pop
xchg
jno
xor
jle
outsl
jns
pop
adc
mov
daa
pop
xor
jb
outsb
rol
imul
daa
cwtl
cmp
sub
mov
cmpsb
and
dec
cmp
fisubl
out
mov
movsl
push
mov
mov
xchg
mov
sub
add
jmp
adc
and
dec
into
ja
div
inc
mov
subl
mov
psubsb
push
outsl
faddl
stc
inc
lcall
ss
lret
mov
js
lock
or
cmp
in
push
add
adc
and
jecxz
cmc
dec
xor
int3
cs
inc
jbe
push
xchg
shld
js
or
mov
movl
pop
test
mov
not
shrl
or
rorb
jne
pop
mov
insl
cmp
sub
mov
insb
mov
add
imul
lret
inc
inc
movsb
add
push
in
sbb
cmpb
repnz
lret
push
sbb
iret
mov
rol
xor
pushf
call
jb
loop
push
adc
inc
and
push
cld
sbb
shlb
or
xor
adc
jb
jb
dec
gs
mov
pop
outsb
jge
das
inc
sbb
aaa
out
and
fnsave
imul
dec
and
das
mov
cld
inc
xchg
pop
es
pushf
mov
fisttpl
xor
mov
stos
adc
mov
mov
scas
movsl
ss
and
mov
push
sti
loop
mov
cmc
jno
lds
into
or
popf
imul
out
insb
push
push
jg
test
stc
jl
push
cli
mov
movl
xchg
pop
adc
out
adc
adc
pop
push
fldl
leave
inc
out
ss
ret
daa
xchg
fildl
fsubrs
sub
pop
inc
js
or
addr16
push
jle
es
call
jle
iret
lahf
imull
pop
sbb
dec
mov
add
xor
xlat
cmp
mov
mov
dec
dec
dec
lahf
mov
or
gs
xor
cmp
call
jno
or
sbb
ljmp
sub
ficoms
loope
test
mov
popf
mov
and
add
xor
in
or
sbb
out
das
mov
mov
xor
sub
call
loopne
mov
js
pusha
sbb
movsl
out
jle
xchg
cs
sub
sbb
pop
nop
mov
pop
scas
cmp
ficomps
adc
js
lret
jl
pop
dec
cltd
fisttpl
cmp
mov
popa
loopne
push
xlat
je
mov
out
xor
cmpsl
mov
test
das
push
lret
lock
mov
out
cmp
mov
jns
mov
out
pop
int
sub
push
inc
cmp
push
jg
pop
lock
add
inc
cmp
sbb
fcoms
xor
push
scas
roll
test
cmp
mov
fsubl
mov
subl
adc
jle
mov
pop
fdivp
jnp
mov
add
add
pusha
adc
aam
loopne
aam
fisubs
vrsqrtss
push
aad
xor
fisubl
imul
xor
shr
scas
or
mov
lock
mov
popl
gs
xor
adc
add
pop
jo
lahf
test
dec
pop
xchg
dec
xchg
mov
sbb
into
gs
xchg
outsl
pop
push
in
adc
imul
xor
xor
dec
mov
sub
movsl
fldt
jle
add
xor
sbb
inc
jle
in
mov
push
hlt
fcom
sbbl
add
insb
mov
icebp
mull
test
fstl
cmpsl
shrl
test
imul
mov
xlat
daa
xor
psrlq
xor
stc
fdecstp
pop
mov
mov
into
mov
cltd
jl
fisubrs
sbb
xor
mov
nop
pop
xor
pop
sub
sub
jmp
das
stos
pop
jb
adc
stc
mov
clc
push
add
movsb
and
dec
xchg
adc
gs
insb
pop
xchg
lods
ljmp
push
sbb
not
pop
and
mov
jns
xchg
mov
stos
mov
scas
sbb
inc
xor
jne
rolb
pop
sbb
jb
xor
dec
inc
pushf
xchg
mov
sbb
popa
push
mov
and
pop
pop
iret
icebp
mov
loopne
test
pop
call
xor
int
and
lea
js
and
rcrb
xor
mov
cli
and
push
dec
lahf
cmp
lods
cmp
xchg
pop
jle
mov
test
sbbl
and
mov
inc
cmp
inc
adc
adc
inc
mov
jl
sbb
xor
lea
out
jle
sti
ret
mov
negb
mov
fdivrl
push
or
jnp
xor
mov
pop
test
mov
dec
nop
xor
mov
int
scas
and
mov
cmp
jno
or
jg
das
sbb
scas
mov
arpl
xor
mov
popf
fldt
mov
addr16
testb
cmp
xor
adc
repnz
push
ja
mov
jmp
test
jmp
xor
mov
bound
mov
mov
nop
jnp
stos
int
sbb
inc
aad
ss
pop
rcll
pop
xchg
adc
mov
sub
sarl
shrl
outsb
fwait
adc
out
ds
pop
faddl
movb
pusha
inc
mov
mov
popa
loop
mov
ja
mov
lret
gs
mov
lods
and
jl
in
fiadds
pop
je
push
sub
jp
mov
out
ret
jle
sbb
out
lds
rorl
add
mov
sub
hlt
dec
push
popa
and
loope
lret
sbb
mov
cld
fiaddl
lret
fsubs
adc
outsl
mov
js
xchg
cmc
fidivrl
inc
inc
ficomps
lret
data16
xchg
outsl
fstpl
pop
mov
ss
ret
mov
push
mov
movsl
mov
sbb
sbb
push
mov
loop
jecxz
outsb
xchg
inc
pop
inc
call
pop
and
push
ret
xchg
bound
dec
push
faddp
mov
pop
es
add
arpl
mov
stos
hlt
mov
daa
js
jb
cltd
xchg
sbb
loope
mov
sbb
pusha
dec
enter
faddl
shrl
stos
jns
mov
dec
add
sub
sahf
cmc
xchg
dec
adc
mov
push
add
fdivl
iret
xchg
fstpt
mov
pop
mov
lock
mov
or
mov
adc
out
cmp
mov
or
jb
bound
ds
out
xor
mov
out
fxam
std
stos
push
push
sahf
pop
pop
js
mov
mov
mov
push
fidivl
cmp
orb
std
pop
aas
std
je
cmpsl
mov
xchg
mov
or
jp
and
imul
lods
or
mov
jmp
mov
test
inc
or
dec
loopne
fildl
adc
xlat
sbb
dec
call
cmp
xor
jmp
lcall
cmp
popf
xchg
push
or
mov
outsl
iret
dec
cmpb
cltd
cmp
mov
mov
xchg
pop
fwait
xor
insl
pop
call
mov
jmp
lods
add
add
fsts
bound
lahf
mov
in
and
lcall
inc
out
push
fstpt
sar
mov
ja
push
push
sahf
pop
push
lods
mov
mov
ss
push
sub
cmp
xor
jmp
enter
adc
xchg
sbb
scas
call
stc
leave
lahf
popf
push
sub
into
jb
mov
call
and
or
pop
mov
mov
lock
jns
js
xor
lock
bound
and
jbe
fistpl
movsb
mov
ret
xor
xor
fldt
xor
mov
ds
call
mov
imul
lret
xchg
cmp
mov
or
mov
inc
fcom
test
inc
push
mov
aaa
add
push
into
ss
dec
rcr
push
stos
mov
addr16
adc
push
mov
mov
pop
addb
pop
or
jae
mov
inc
rcr
cmp
clc
jbe
outsl
cmpsl
adc
sbb
fisubrs
ss
mov
mov
fisubl
leave
xor
sub
cwtl
xor
xchg
fisttps
pop
mov
ss
mov
add
push
sbb
cltd
sbb
push
popa
cmp
xor
xorb
cs
cmpsl
push
fisttpl
jno
mov
add
pop
dec
pop
stc
xor
and
clc
sti
push
mov
adc
sbb
inc
add
xchg
fistpll
pop
out
xchg
pop
or
jmp
pop
xchg
push
inc
mov
popa
pop
popa
movsl
and
sbb
mov
sbb
pusha
js
cmp
mov
pop
xor
xchg
xchg
inc
out
jmp
idivl
xor
or
sbb
lea
xchg
xchg
dec
and
ss
pop
mov
sub
sbbb
mov
or
sbb
add
dec
sub
jnp
jmp
cmp
dec
stc
icebp
divl
push
adc
sarl
add
push
scas
jb
ror
sub
adc
outsl
add
sbb
pop
push
aad
sbb
add
ret
popa
js
ret
mov
add
test
test
sub
lret
sbb
fcomps
packsswb
sub
push
lahf
cmp
mov
ljmp
push
inc
arpl
iret
push
dec
scas
pop
aaa
data16
xchg
jbe
pop
into
mov
std
cmp
ucomiss
add
mov
inc
stos
mov
pop
sub
cmp
inc
scas
pop
mov
mov
xor
mov
ss
or
js
adc
popf
or
sbbb
outsl
int3
add
and
sbb
sbb
lock
jo
xorl
cld
sahf
inc
mov
adc
pop
mov
lahf
dec
dec
fucom
cmpl
add
popa
sbb
test
inc
sbb
call
insb
cwtl
inc
inc
repnz
cmp
ljmp
movl
das
inc
mov
mov
add
shrl
clc
insl
cltd
into
mov
jle
mov
lods
adc
jg
mov
rcrl
adc
movd
lods
or
lcall
mov
pop
stos
jns
mov
pop
jg
cmp
sub
cmpsl
lret
sbb
mov
test
sbb
pop
aam
test
jp
mov
sahf
mov
pop
pop
lods
test
xor
or
movsb
bound
test
xor
jb
sub
cmp
mov
lret
es
xor
jle
out
out
aad
mov
rcrl
xchg
das
adc
insb
aaa
insl
cmp
or
setle
movsl
lcall
mov
adc
mov
inc
add
ret
addr16
fwait
dec
xchg
sbb
sub
cmp
pushl
pushf
cmp
pop
std
mov
dec
lods
sub
sub
out
pop
jecxz
arpl
ljmp
test
xor
into
shlb
push
dec
in
inc
sub
mov
pop
leave
adc
sbb
adcl
call
sbb
inc
mov
mov
stc
stc
mov
fnsave
jns
jo
adc
pushf
push
jno
inc
sub
jae
test
pop
jmp
arpl
mov
mov
movsb
leave
cs
shll
imul
sub
iret
sbb
repnz
add
jmp
bound
fcmovne
mov
mov
and
movsl
dec
std
subl
jnp
push
pop
mov
adc
sbb
pop
add
push
scas
push
push
loopne
lahf
movsl
in
sub
add
sbb
or
mov
adc
test
xor
insb
mov
sahf
andb
push
test
mov
push
test
mov
inc
dec
pusha
pop
mov
mov
cmpsw
pop
bnd
repnz
or
mov
mov
mov
addr16
shrl
std
divb
mov
pop
outsl
inc
adc
xchg
jmp
xor
mov
jl
cmpb
push
mov
outsl
lods
mov
xor
xor
fwait
xchg
or
push
aaa
cltd
pop
dec
and
ss
stc
push
sbb
cli
cmp
xor
jle
jae
insb
outsb
push
inc
cmpsl
jae
lret
es
jmp
test
jo
inc
mov
xorb
sub
and
mov
mov
jmp
mov
sahf
gs
mov
aad
fwait
mov
shlb
lret
popa
lret
and
mov
outsl
popa
test
leave
es
xchg
xchg
lahf
fwait
adc
in
add
decl
pop
addr16
test
add
jmp
lds
or
cwtl
xchg
pop
movsb
mov
xchg
pop
icebp
mov
and
xor
pop
fwait
leave
dec
mov
insb
addr16
fcoms
mov
cmp
pop
fcmovnu
stos
out
add
movl
das
sub
adc
ss
adc
mov
jb
push
jmp
mov
inc
mov
jnp
or
cld
imulb
mov
cmp
pop
and
sub
xor
jns
pop
js
nop
sar
jne
cld
aaa
dec
jmp
pop
jl
std
or
pop
test
jle
std
inc
mov
push
scas
fdivrl
mov
dec
lcall
or
fwait
testl
adc
adc
push
jle
xchg
xchg
xchg
cli
stos
pop
test
xchg
xor
mov
pop
nop
pop
movsl
cbtw
push
sbb
xor
sbbl
mov
dec
push
ljmp
lea
jne
mov
xor
jno
or
inc
mov
xor
adc
mov
pop
cmc
add
push
cwtl
pop
ss
test
mov
inc
jmp
cmp
add
push
xor
jmpw
mov
div
adc
dec
ficompl
cmp
cmp
ret
icebp
mov
cmpsl
pop
xlat
das
adc
insb
enter
mov
mov
pop
lods
sbb
push
mov
in
mov
sbb
daa
lahf
hlt
push
cmp
mov
jno
test
mov
inc
fcoml
popf
mov
cmp
add
jns
push
imul
xchg
movl
sub
fwait
or
sbb
out
sub
jp
mov
pop
lret
mov
cli
inc
test
divb
push
push
add
ja
pusha
adc
pop
pop
xlat
es
push
pop
js
xor
test
bound
addr16
cs
push
into
pop
pop
add
push
fimuls
mov
xchg
je
xchg
aam
pop
push
pop
push
pop
xchg
or
pop
rorl
dec
ret
add
jne
adc
and
mov
jne
stos
pop
popa
dec
jo
dec
addr16
mov
in
xchg
push
mov
test
in
dec
dec
mov
or
pop
imull
fimuls
enter
sub
fsubrp
in
mov
imul
test
ljmp
push
lahf
add
jle
dec
add
mov
lcall
cmpsl
ds
or
stos
rcrl
loopne
and
dec
cmp
jmp
jae
pop
adc
push
or
sbb
enter
sub
fsts
lcall
hlt
cmp
sub
stc
ret
aas
push
test
test
out
aad
mov
gs
xchg
inc
mov
or
cmp
add
jno
pop
add
pop
mov
mov
add
fstps
sub
dec
mov
pop
std
sbb
jg
cmpsb
mov
inc
pusha
repz
inc
add
xor
insb
mov
imul
lods
push
adc
fs
subb
jmp
lahf
or
mov
adc
mov
lea
push
add
repnz
adc
add
xor
cmp
lock
outsb
pop
push
in
stc
jp
add
jnp
rcrb
lods
mov
pushf
or
test
fdivrs
inc
sbb
xchg
add
sbb
insb
sub
sbb
arpl
call
hlt
ljmp
out
aaa
rclb
mov
push
cmp
enter
scas
dec
jl
stos
in
push
xor
iret
pop
dec
xchg
xchg
push
ja
xchg
sub
dec
xor
inc
lret
bound
adc
shrb
call
pop
pop
fdivrs
in
dec
dec
dec
xchg
add
ret
dec
sbb
xor
sti
mov
pop
popf
add
dec
fwait
sbb
jno
pop
inc
daa
xor
fisubl
jae
ss
insl
shll
mov
or
push
mov
mov
cmp
fwait
je
mov
inc
cmova
add
lods
jae
btr
inc
mov
test
or
das
push
inc
cld
jnp
mov
sub
jnp
or
popa
fwait
add
pop
mov
xorl
jb
and
dec
repz
sbb
mov
adc
int
adc
fs
mov
adc
mov
sub
jmp
inc
inc
sbb
repz
mov
push
cmp
mov
cs
lret
add
nop
mov
xchg
mov
mov
sbb
mov
insb
enter
adc
outsb
dec
mov
test
pop
jne
ss
or
push
sub
cmp
mov
mov
pop
pop
fdivrs
jmp
sbb
inc
mov
pop
xchg
xchg
gs
in
sbb
cmp
xor
dec
in
mov
lods
add
pushf
es
cmp
sbb
push
hlt
into
mov
sbb
add
hlt
es
es
ds
add
mov
cltd
cmp
pusha
and
add
ja
movsb
out
test
fwait
insl
xor
mov
les
inc
add
mov
sub
hlt
and
pop
movsb
scas
inc
push
bound
jle
addl
dec
mov
jmp
xchg
mov
fldenv
lcall
pop
adc
les
mov
jae
jne
negl
pop
das
out
cmp
mulb
pop
sbb
jbe
and
dec
xor
in
adc
mov
xor
adc
test
std
xchg
sub
fwait
mov
sarl
and
movsb
push
push
push
cmc
mov
fisttpl
jmp
sbb
pop
fidivrs
push
and
das
bound
test
or
icebp
and
cmp
push
sub
xor
add
push
ljmp
jno
xlat
stos
sbb
and
mov
ss
xchg
ficoml
jnp
pop
fbstp
mov
inc
scas
fcos
test
sub
pusha
add
push
fwait
adc
and
cmp
add
test
jmp
insl
push
mov
popf
scas
dec
push
pop
mov
xchg
add
jp
adc
or
push
mov
movsl
addb
shr
xor
mov
xlat
push
mov
hlt
ss
aaa
inc
lret
mov
mov
bsr
jle
int
lret
jne
sub
add
es
inc
sub
cmc
stos
fstpl
or
pop
inc
sub
mov
jg
mov
popf
inc
stc
xor
dec
rclb
push
int3
fdivl
xchg
lods
orl
jno
jne
outsl
or
fists
pusha
in
push
pop
sbb
or
ljmp
xor
imulb
mov
xchg
data16
pop
adc
enter
push
rcl
shrb
std
cmp
jmp
xor
push
mov
ja
sbb
xchg
dec
loope
arpl
mov
test
fisubl
mov
pop
mov
shrl
xor
push
test
xor
dec
pushf
enter
mov
test
pop
push
sub
jb
das
leave
xchg
fsubrl
mov
outsl
in
fstpt
pop
dec
add
or
gs
in
cmp
les
push
mov
lret
pop
lods
sbbl
cmp
push
daa
in
mov
jg
out
gs
out
cli
push
xor
xchg
mov
jbe
xchg
call
lock
scas
xor
gs
push
out
pop
fisttpl
push
add
cltd
sub
mov
loopne
hlt
mov
push
push
out
fistl
jmp
mov
inc
xor
cmp
sub
jp
dec
cld
lods
ss
mov
ss
popf
sti
loop
inc
jns
mov
dec
push
or
out
enter
sbb
fldl
lds
xor
aad
fcoml
lds
out
and
pusha
xchg
in
dec
les
icebp
dec
pop
mov
sub
test
mov
xor
pop
cmp
mov
xchg
xchg
or
pop
imul
popa
into
int
xchg
mov
xor
idivb
jl
fimuls
in
mov
xchg
sub
mov
fwait
das
cmp
push
in
adc
fadds
pop
jno
aaa
push
sbb
adc
add
push
int3
ds
push
enter
aaa
fidivrs
in
xor
xchg
adc
dec
stos
push
sbb
and
inc
jmp
adc
das
aad
notb
stc
test
xchg
jl
dec
das
pusha
xor
lock
mov
xchg
mov
je
or
dec
xor
push
mov
fs
sub
daa
pop
inc
mov
jno
sbb
sub
dec
sub
jo
add
inc
fwait
xchg
add
xor
ret
inc
mov
ljmp
aas
stos
adc
xchg
leave
inc
movsl
das
add
mov
int
adc
push
xchg
aad
sub
sbb
push
mov
pop
mov
sarb
bound
fisubl
pop
mov
mov
fisttpll
cli
mov
das
mov
lock
lahf
jle
push
aaa
mov
in
outsl
stc
jno
sbb
in
and
jns
push
dec
lock
sub
lods
push
dec
inc
xor
dec
pop
gs
mov
push
fcmovne
sbb
sti
hlt
sub
lcall
sbb
cld
nop
dec
ret
lsl
jmp
outsb
or
out
test
mov
mov
je
pop
enter
mov
fsub
xor
jae
ret
mov
inc
pusha
inc
shr
arpl
enter
mov
test
mov
and
out
ss
xor
sbb
arpl
jae
jecxz
test
lcall
stos
clc
cmpb
insl
loopne
and
lahf
xchg
and
lret
jp
imul
out
push
dec
mov
sub
das
push
add
scas
das
cmp
mov
js
lock
loop
stos
xor
lcall
loop
push
sbb
push
push
ss
rorl
or
aam
push
or
inc
cmpl
test
dec
lds
dec
gs
fidivl
mov
push
mov
adc
mov
test
dec
mov
push
jns
mov
test
js
loopne
rcrl
stos
aaa
mov
out
out
fadds
rcrb
jle
sub
push
push
xrelease
push
int3
mov
es
pusha
hlt
dec
mov
inc
lcall
jnp
jo
sbb
shll
cmp
bt
push
call
js
jns
imul
mov
adc
sub
sub
orb
xchg
jno
cmpl
mov
jo
add
sbb
sub
push
jno
popa
cmpsl
stos
and
xchg
cmp
xchg
fdivrs
and
sbb
dec
add
cmp
popa
cmp
dec
decl
jne
add
minps
mov
mov
pop
adc
popf
sub
mov
jns
stc
dec
mov
xlat
mov
sahf
mov
stos
sub
pop
cmpsl
hlt
ljmp
push
addr16
cld
dec
fstpl
mov
addl
sub
andb
xchg
dec
mov
mov
insb
ss
cmp
and
or
mov
dec
fcoml
or
jb
sbb
add
xchg
xor
or
mov
mov
arpl
loope,pt
cmp
sub
lods
mov
jne
rorl
xchg
out
xchg
adc
pop
cmp
add
add
pop
xchg
jns
pop
or
cld
movd
test
dec
and
cmpsl
add
lcall
out
insl
and
loop
push
sub
shlb
or
mov
push
cmp
xor
mov
je
mov
dec
dec
lahf
and
mov
push
ljmp
arpl
and
or
dec
xor
xchg
jae
les
add
mov
cmp
inc
sbb
and
adc
and
jno
xchg
shrl
mov
cmp
ret
mov
add
fnstenv
call
mov
adc
fstpt
cmpsl
push
pushf
decb
test
in
and
sub
scas
ljmp
test
out
mov
jo
mov
fwait
pop
out
subl
aas
mov
mov
jmp
fnstcw
push
lret
pop
mov
mov
rorl
repnz
arpl
cmp
rcrb
mov
adc
int3
jb
xchg
mov
push
iret
adc
ljmp
repnz
cmc
test
and
jne
mov
imulb
andb
adc
sti
dec
cld
sub
cmc
jge
ss
ud0
lods
popaw
jns
ficomps
frstor
sub
or
ljmp
xchg
fidivrl
adc
cwtl
outsl
cltd
push
sub
das
rcrb
mov
xor
or
sarl
mov
mov
jp
andb
lock
sbb
adc
ss
mov
jb
nop
arpl
and
popf
adc
jno
test
xor
dec
xchg
xchg
cmp
aaa
xor
scas
pop
stc
popf
sbb
mov
imul
std
or
and
xchg
in
push
js
xor
scas
pusha
cmc
lods
sti
pop
aad
inc
inc
sub
aaa
out
and
mov
sbb
fs
sub
push
mov
mov
and
fstl
jne
dec
gs
ss
and
je
sub
sahf
sti
push
dec
insb
test
push
cmpsb
pcmpgtd
xor
ljmp
mov
int3
movsb
mov
push
jmp
xor
jae
mov
inc
outsb
lahf
adc
idivl
dec
dec
test
lret
push
mov
dec
ret
stos
jo
pop
cmp
push
pop
mov
pop
icebp
jmp
mov
mulb
das
xchg
add
mov
or
test
cmp
rep
cmpsl
push
xchg
fisttpl
mov
cmp
mov
shrl
stos
stc
pop
sbb
addr16
aad
mov
cli
cmp
ja
xor
and
pop
das
mov
sbb
add
cmp
loopne
es
mov
je
in
test
jno
xor
data16
jle
bound
pshufw
sub
xor
adcb
pop
mov
leave
insl
testb
lret
test
loop
inc
cmp
imul
in
aas
sub
sub
mov
leave
data16
fxch
push
ficompl
mov
in
adc
fnsave
int3
dec
mov
mov
sub
lahf
test
jp
or
add
rclb
in
andl
cli
jmp
popf
lret
dec
sub
sbb
xchg
mov
lock
pusha
push
push
scas
sub
lcall
inc
xor
pushf
mov
jno
push
dec
ljmp
in
test
mov
shl
outsl
rcr
dec
mov
mov
jg
and
scas
in
or
pushf
jns
or
fwait
cmp
mov
jne
pop
call
dec
test
sbb
mov
les
cmc
fnstcw
sub
adc
and
push
orl
clc
daa
add
out
mov
xchg
cmpsb
in
pushf
mov
mov
cmp
pop
xor
leave
push
cli
push
cmp
and
jmp
xor
or
sub
mov
dec
pop
cltd
inc
ss
xchg
mov
mov
pop
xor
adc
jmp
orb
cltd
imul
mov
int
mov
fmull
movsl
lcall
sbbb
or
loope
nop
lods
adc
or
or
xchg
push
pop
lods
xor
fldt
and
mov
push
push
xchg
int
pop
bound
push
rcrb
and
cwtl
inc
aam
loopne
popa
or
movsl
ja
or
push
out
sti
xlat
sub
es
pop
cwtl
lods
leave
daa
cmp
adc
pop
std
call
push
dec
daa
leave
jno
adc
jecxz
sub
addb
jne
inc
imul
imul
es
and
rolb
test
and
xorl
add
ret
stc
sbb
or
jno
pushf
inc
aad
adc
lods
insb
inc
test
cltd
stc
mov
mov
imul
lret
cli
lods
inc
adc
mov
push
imul
mov
movsl
pusha
test
add
sub
inc
daa
test
mov
inc
xorb
sahf
jnp
xchg
pop
jmp
mov
shlb
pop
movsb
stc
das
adc
xchg
dec
xor
mov
add
inc
dec
mov
push
inc
cmpsb
ljmp
sbb
pop
cmpsb
pop
aas
push
stc
mov
bound
fmuls
fwait
xor
inc
aam
sti
jo
jae
in
pusha
mov
adcl
sub
pop
scas
dec
outsl
pop
add
or
jg
adc
mov
jns
sub
movsl
push
aas
xchg
mov
pop
jmp
stc
push
repz
mov
add
pop
push
adc
pop
jae
test
pop
inc
lds
test
ss
hlt
insb
or
inc
or
lods
in
adc
aad
out
jecxz
stos
push
xchg
xlat
and
ret
out
out
insb
dec
lods
cmp
pop
aaa
int
outsl
adc
or
push
pop
push
jne
xchg
xor
in
inc
jne
push
add
div
mov
jb
adc
imul
dec
dec
adc
sbbb
and
jb
dec
das
test
xor
adc
or
mov
or
lret
add
mov
mov
sbb
mov
cs
out
testl
sub
popa
testl
mov
sbb
cpuid
clc
into
mov
add
mov
dec
adc
xor
pop
shll
out
mov
or
incl
es
insb
mov
mov
jge
push
lods
mov
mov
mov
lock
in
fstpt
in
adc
sub
out
in
out
rcrl
push
in
cmp
insl
mov
jo
fisubrl
repz
pushf
fwait
mov
fldcw
in
daa
jnp
xor
rorl
les
mov
leave
ret
cmp
bound
fidivrl
sbb
ds
sbb
out
repnz
adc
and
out
jne
push
es
std
mov
jmp
and
and
push
aaa
add
test
xor
iret
mov
out
lahf
popa
loop
or
add
mov
sub
rolb
repnz
dec
adc
rcrb
adc
add
push
pusha
outsb
mov
dec
push
mov
cs
add
aad
repz
mov
roll
mov
adc
xchg
into
jmp
in
mov
fxch
push
stos
fs
ret
xchg
dec
or
mov
mov
fwait
jecxz
repnz
push
aas
push
cltd
das
std
jb
mov
mov
mov
pop
ss
xor
mov
cmpsl
in
dec
xchg
pop
sbb
xor
imul
lcall
fdivr
test
cmp
jle
jae
cltd
cmp
xor
test
shlb
adc
xor
lcall
xchg
pop
mov
std
mov
pusha
push
pop
std
mov
push
dec
pop
dec
fisttpll
cmpsl
dec
ficompl
lods
add
pop
dec
pop
sub
xor
sub
hlt
or
cli
shlb
gs
mov
mov
dec
fsubrl
xor
ficoml
sbb
jo
sarb
insl
mov
push
das
pusha
cmc
xchg
jbe
push
stc
cmp
jns
mov
jb
mov
add
fwait
mov
dec
mov
mov
ret
jae
adc
std
adc
adc
mov
jecxz
or
jg
xlat
push
or
xlat
fidivrl
adc
pushf
das
add
dec
mov
push
mov
or
outsl
nop
pop
pop
jmp
mov
lods
jo
or
cmpsb
sbb
jbe
mov
ret
ljmp
das
pop
mov
dec
mov
mov
push
mov
in
ja
aaa
scas
or
mov
jae
xchg
add
jo
xchg
das
add
jg
lock
cmpsl
mov
insb
pop
jge
push
mov
std
scas
add
or
and
xor
dec
mov
inc
push
mov
pop
or
pop
cmp
jle
jb
xor
jecxz
lods
sbb
test
popf
mov
sbb
out
test
mov
dec
lret
insb
fstpl
dec
and
lahf
scas
dec
adc
adc
xchg
out
fildl
xchg
scas
mov
sti
adc
arpl
repnz
adc
daa
in
adc
stos
add
adc
test
adc
mov
jmp
jnp
loop
jl
lods
ficompl
in
xchg
push
add
and
mov
sti
pop
xchg
add
movsb
xor
je
adc
xchg
cwtl
fidivl
cmpsb
rolb
mov
mov
cltd
mov
jp
mov
ja
shl
cmp
mov
xor
and
adc
daa
popa
adc
dec
dec
loope
adc
loop
adc
mov
hlt
mov
scas
leave
lods
pop
imul
sbb
adc
aaa
jmp
das
xorl
fdivr
fmulp
sar
mov
inc
dec
adc
rcrb
stc
push
jno
sarb
mov
insl
push
pop
insb
sub
shll
jle
in
or
adc
out
fs
inc
mov
pop
nop
jge
mov
addr16
pop
sbb
xor
pop
sahf
rcll
cs
lods
dec
ds
mov
movsl
mov
fsubrp
pop
popa
ret
mov
mov
mov
scas
lret
dec
jmp
fwait
lock
movsb
fisttpll
push
clc
mov
iret
mov
enter
push
in
fstpl
push
flds
push
imul
icebp
cmpsl
xchg
push
mov
fidivs
mov
call
shl
nop
mov
ds
imul
lahf
and
push
sti
das
leave
clc
cs
in
fcmovb
mov
shlb
fdivr
push
gs
mov
pop
jl
push
pop
mov
clc
jb
scas
cmp
data16
lock
sub
out
push
adc
mov
jnp
push
xchg
and
sbb
pop
shll
and
adc
pop
lds
icebp
lods
sub
aas
nop
pop
or
jno
jmp
int3
sbb
mov
add
daa
insl
loop
mov
je
dec
add
add
inc
fisubrl
jae
cmp
incb
mov
cld
adc
push
loop
mov
pop
jbe
fidivrs
pop
or
in
mov
adc
sbb
pop
fnstenv
int
adc
in
mov
jbe
xor
mov
rcll
stos
lret
push
aam
mov
jp
repnz
cmp
fwait
in
sbb
flds
movsb
lahf
sub
lock
ret
sbb
lret
mov
mov
lock
inc
push
cmp
or
mov
inc
xor
das
xchg
aas
adc
jb
fstpl
adcl
fiaddl
sbb
stc
addr16
jae
push
dec
je
into
scas
or
leave
cmp
test
shlb
pop
sub
es
mov
mov
insl
mov
push
sub
cmp
int
shlb
inc
fwait
mov
cmp
pop
pop
jne
std
mov
std
lods
roll
pop
lds
mov
mov
add
insb
ficompl
leave
ret
arpl
jo
mov
imul
test
add
ret
sbb
and
or
push
mov
dec
add
pushf
xor
push
push
jle
and
das
push
sbb
cmpsb
lcall
sahf
dec
jl
mov
lods
lods
sbb
mov
lahf
sub
inc
fildl
mov
sub
pop
push
inc
push
fildll
cmove
insb
adc
inc
in
sti
outsb
sub
fwait
pushf
or
test
pop
or
in
insl
dec
es
push
iret
mov
lahf
popa
xchg
insb
mov
and
ja
into
xchg
dec
push
add
aaa
test
cltd
jge
enter
jmp
mov
fwait
add
dec
pop
es
repnz
xchg
popa
mov
ret
dec
sub
xorl
sti
std
add
out
clc
in
fistps
mov
and
mov
rcr
in
mov
pop
out
jae
push
popa
std
mov
cmpsb
mov
das
imul
fxch
jp
push
push
inc
lret
cs
lret
les
push
mov
add
xchg
sbb
and
jg
inc
daa
pop
cli
data16
sti
test
add
loop
es
jle
xorl
cld
sahf
shlb
or
xchg
into
stos
imul
push
add
cmp
push
xchg
mov
lret
dec
jge
sbb
loopne
push
in
and
sub
adc
cmc
inc
jbe
sti
mov
xor
cmovnp
and
sub
mov
mov
pause
std
sbb
mov
jne
jecxz
push
xchg
add
daa
jbe
shrb
mov
cmpsl
mov
adc
gs
sbb
xchg
loop
jae
test
pusha
jg
rol
loop
cmp
mov
ds
or
xor
add
ret
pop
lods
fldcw
rcll
rcr
cld
or
xchg
mov
insl
push
js
gs
fisubl
jae
ret
sti
and
and
aas
inc
mov
sbb
sub
repz
or
add
pusha
mov
pop
or
shrb
lds
sub
cmp
loope
fs
jle
out
lahf
mov
mov
ss
lods
xor
or
fwait
test
gs
ljmp
xchg
xchg
jbe
and
aas
repnz
mov
js
pop
sbb
cmp
in
lods
mov
jge
stos
arpl
pop
mov
mov
or
push
ss
cwtl
gs
lret
in
mov
cmp
push
adc
cld
sbb
xchg
or
scas
jne
jle
lret
jae
sti
mov
imul
pop
leave
mov
pop
lret
mov
pusha
push
mov
pop
xchg
lods
pop
push
lods
jge
mov
loop
dec
fwait
lret
mov
ss
inc
xchg
mov
fdivrs
dec
xlat
xor
imul
rcrl
ljmp
or
loop
pop
pop
mov
jne
xchg
repnz
adc
inc
adc
std
sarl
sub
mov
sbb
popf
mov
and
dec
dec
adcl
push
push
dec
xor
stc
push
adc
fwait
xor
subl
fistpll
jne
lods
jmp
test
mov
cmp
shll
mov
sub
fldpi
sbbl
ret
outsl
inc
xor
stc
inc
mov
fidivl
popf
pop
jne
cmp
decb
inc
test
lods
xchg
test
push
and
mov
or
fstps
jb
adc
or
ljmp
mov
pushfw
add
cmp
and
pushf
xchg
test
ficompl
enter
mov
mov
pushf
rcll
adc
int3
push
push
mov
or
lods
and
repnz
jl
mov
mov
aad
or
mov
jo
add
push
inc
mov
popf
shll
mov
pop
pushf
add
lods
and
mov
bound
mov
lods
clc
pop
dec
ret
hlt
jle
jb
pusha
xchg
adc
mov
cmp
stc
xor
push
addb
pop
stc
imull
add
mov
push
add
add
in
push
pushf
loopne
rorb
cmpsl
incl
out
or
mov
inc
push
hlt
cmpl
xor
dec
or
inc
lcall
andb
xlat
push
sub
cwtl
cmpsl
add
ja
xor
xchg
jo
fidivrs
sbb
stos
cwtl
lret
movsb
movsl
cmp
dec
adc
pushf
shlb
std
ds
aas
jne
adc
fdivrp
imul
or
cmp
fwait
mov
sbb
lcall
mov
push
imul
daa
popa
xchg
idivb
jg
jo
mov
sub
jnp
adcb
fiadds
jo
push
mov
gs
sbbb
adc
jb
imul
ds
xchg
neg
dec
test
or
xor
mov
int3
adc
sbb
pmullw
dec
out
das
or
es
in
mov
mov
mov
push
popf
mov
or
mov
les
scas
mov
out
mov
pop
test
enter
push
xor
aaa
shrl
lahf
dec
cmp
js
fcomp
loop
or
jecxz
pushf
mov
sarb
cmp
lods
fs
nop
notb
mov
lea
cmp
mov
loope
cmp
lea
jmp
xor
jge
adc
lahf
daa
adc
jl
jo
mov
mov
push
pop
ret
push
push
lock
lds
lcall
call
loopne
sub
and
add
adc
jecxz
fidivrl
jp
sub
lfs
sub
test
cwtl
ret
sarl
jns
rcll
stc
pop
mov
add
pusha
or
and
inc
xchg
add
xor
leave
dec
ss
loope
insl
and
bnd
mov
mov
stos
xor
shlb
pop
pop
or
repnz
xchg
cmc
dec
scas
fwait
adc
mov
out
adc
ret
mov
les
xchg
push
jle
lds
lods
dec
jbe
sbb
xchg
mov
stos
ss
rcrl
adc
div
adc
cmpsb
lods
dec
lock
mov
push
xlat
inc
mov
xor
inc
es
sbb
rorl
gs
jae
out
dec
xor
stc
leave
lds
shl
repz
ljmp
test
sub
xchg
lds
push
ds
pop
dec
mov
cmp
mov
cmp
adc
mov
cmp
scas
cmpsl
and
stc
adc
stos
lahf
fildl
in
push
xor
mov
cmp
leave
ficoms
and
out
rorl
xlat
in
sbb
dec
mov
sub
inc
jnp
in
cmp
add
scas
lahf
add
mov
insb
jle
sbb
shrb
and
fdivrs
rolb
pop
mov
bound
xor
sub
cwtl
mov
sub
xchg
xor
imul
fstpl
je
push
mov
sbb
inc
ss
xor
and
fimull
xor
es
or
xor
mov
out
daa
jg
call
loopne
cmp
add
cmovo
aas
adc
sub
ds
mov
hlt
jno
pop
rorl
jl
xorb
cmc
add
push
mov
repz
ljmp
popf
xor
push
jge
iret
insb
movsb
mov
cwtl
or
int
call
hlt
jnp
xchg
fisttps
dec
cmp
insl
cs
js
mov
sbb
pop
cs
jae
mul
push
int3
dec
insl
out
ret
fsub
push
cmp
cmp
fwait
jnp
fwait
sets
test
sbb
xchg
ja
mov
int3
out
in
aaa
pusha
or
loop
xor
jno
push
pop
mov
push
fldl
es
jmp
data16
adc
lds
inc
dec
pop
sbbb
pop
push
rorl
fs
aam
lds
ror
mov
add
pmaxsw
fists
or
clc
xor
mov
dec
inc
pushf
sbb
fistps
mov
cs
adc
mov
sbb
int3
pop
fisubrl
fdivrl
push
enter
sti
xchg
add
and
dec
dec
repnz
mov
jmp
push
aas
in
xor
int3
arpl
fiaddl
fcomps
es
mov
sub
gs
sbb
pop
xchg
jo
loopne
mov
adc
mov
jbe
dec
pop
add
xchg
xchg
daa
mov
mov
push
jmp
aam
add
cmp
inc
pop
inc
imul
xchg
adc
inc
xorl
adc
das
pusha
jmp
xor
pusha
pop
cmp
fisubrl
mov
add
xchg
aad
mov
sti
mov
inc
mov
insb
sbb
sbb
push
mov
movsl
jo
out
pop
pop
push
shrb
sbb
sti
adc
xchg
xchg
sbb
jae
xchg
pop
lcall
jno
sti
jmp
sbb
push
mov
clc
and
lahf
movsb
push
fs
sub
jmp
or
jo
aad
adc
cli
nop
mov
inc
cmpsb
les
leave
mov
or
push
adc
leave
insl
cwtl
xchg
bound
std
xchg
sub
loop
sbb
mov
in
shl
and
sbb
jno
mov
dec
rclb
mov
cs
test
and
call
pop
repnz
cltd
pushf
and
and
or
fidivrs
mov
jae
sub
lret
mov
and
into
call
dec
loope
xor
mov
push
cmp
or
dec
out
pop
pop
jl
out
push
bound
dec
pop
pop
jns
setp
push
int
mov
adcl
popf
push
xor
pop
adc
xor
outsb
test
and
and
sub
sub
inc
mov
fistpl
pop
mov
subb
push
out
stos
push
sbb
clc
nop
or
stc
adc
movsl
movsb
jp
xor
inc
push
dec
movb
add
cld
fisubrl
adc
xchg
dec
je
lea
repz
adc
pop
mov
sub
movsl
push
push
cmp
push
lret
ljmp
inc
pop
fistps
cmp
addr16
sbb
out
lock
xchg
add
or
subb
test
add
enter
mov
gs
sahf
mov
xchg
pop
es
dec
add
loop
mov
fcoml
cs
cmpsl
les
leave
lret
or
mov
shll
daa
cmp
mov
cmpsl
mov
xacquire
adc
jle
arpl
repz
sub
sbb
xchg
sbb
mov
fnstsw
cwtl
inc
test
jl
push
jl
jmp
clc
fwait
pop
into
mov
ficoml
add
push
pusha
xchg
xor
push
xchg
mov
ds
std
rorb
movsb
mov
addl
inc
mov
sbb
xlat
or
rcrl
pop
ss
arpl
sbb
pop
pop
js
inc
dec
jg
ds
xor
fistpl
clc
push
cmp
cmc
fstl
cmp
insl
bswap
sub
leave
loopne
inc
cmp
in
addr16
xor
in
jge
movsl
movsl
xchg
mov
mov
sbb
mov
ljmp
xchg
mov
movsb
bound
cwtl
sbbb
mov
out
jg
mov
xchg
push
or
call
hlt
sbb
pop
push
add
sbb
ret
loop
mov
inc
shrl
mov
movsb
or
adc
in
aaa
mov
sti
shlb
jge
insl
xor
fistpll
sbb
pop
cld
push
push
push
jb
or
aas
jmp
push
mov
mov
lods
cmp
daa
mov
das
test
adc
mov
sbb
and
xchg
mov
cmpsb
fmull
cmc
xchg
pop
adc
sub
push
rolb
retw
ds
cmp
imul
test
mov
pop
pop
jmp
sti
cmpsl
fnstsw
sti
insl
sbb
xor
push
jb
push
and
loop
pop
mov
loope
sub
das
dec
hlt
jno
lods
adc
mov
jp
dec
inc
sbb
dec
jns
lods
or
popf
cmpsb
dec
jmp
int3
or
mov
jmp
pop
es
or
jmp
pushf
movl
dec
add
push
test
mov
or
in
mov
mov
lahf
inc
mov
push
jmp
adc
xchg
cmp
add
adc
sub
mov
push
mov
mov
inc
test
in
sbb
or
cs
pop
adc
ja
enter
mov
add
and
testl
jl
addb
inc
sbb
cmp
data16
jge
cmp
stos
popa
ljmp
inc
or
insl
loop
mov
xor
mov
or
push
adc
movsl
pop
mov
xchg
ret
repz
enter
iret
pop
pop
dec
mov
dec
mov
enter
in
mov
sbbb
xor
mov
and
xor
lahf
lods
lret
sbb
insl
int
pop
cmpl
sete
push
test
aas
jp
inc
jae
fcomps
jbe
or
hlt
je
lret
stos
pop
push
add
jno
jl
pop
mov
nop
mov
repnz
inc
leave
mov
sbb
imul
cmp
sbb
ud1
or
push
jns
out
sbb
jb
sub
sub
xor
adc
or
mov
cld
jns
xor
ficoms
adc
gs
push
popf
pop
sub
jmp
inc
mov
insb
es
insb
mov
push
inc
inc
sub
add
mov
lds
mov
ljmp
adc
dec
out
int
mov
sub
nop
cmp
dec
fisubl
push
out
out
inc
or
aam
cs
lea
sbb
ret
lea
push
call
sub
scas
ja
pop
ds
shlb
pushf
push
outsb
pop
adc
push
push
mov
aaa
adc
mov
fidivrs
aaa
cmpsb
pop
sbb
sbb
in
sbb
aas
dec
sub
adc
adc
js
int3
imul
mov
lea
imul
pop
lret
jno
inc
lret
test
jbe
mov
lret
into
add
mov
mov
cmp
enter
mov
dec
js
and
pop
loope
mov
mov
push
movsl
push
ss
insl
aad
ret
push
aaa
popf
jecxz
clc
sbb
in
and
mov
in
inc
jno
std
data16
lods
jg
xchg
pushf
adc
arpl
dec
xor
add
pop
adc
std
dec
sbb
mov
lret
xorb
xlat
push
shlb
add
in
rol
push
subb
jns
jg
je
call
push
in
cmp
pop
sub
mov
push
stos
das
cltd
insb
cmp
jl
adc
movsl
mov
sub
mov
mov
pop
mov
cmp
push
pop
sbb
xchg
out
lods
ficomps
popf
xchg
and
push
mov
shll
cld
lret
out
xor
ljmpw
add
addl
pusha
rcrb
fldcw
fdivrl
sbb
pushf
shrl
adc
out
jbe
mov
data16
mov
push
test
lods
mov
adc
addb
jns
xor
dec
push
adc
jge
and
mov
ss
dec
loope
cli
jbe
enter
enter
jbe
push
pushf
mov
cmp
dec
leave
test
mov
add
movsb
in
jne
test
rcrl
xchg
mov
push
jo
cmc
sub
inc
and
push
fcoms
insl
out
in
out
lret
jmp
jne
add
mov
rcrl
loopne
gs
mov
mov
push
pop
sub
popa
pop
adc
ficoms
xchg
bound
daa
insl
pop
push
sbb
mov
out
aad
cmp
orb
cltd
rcrl
stos
sub
sbb
fnstenv
jge
les
sbb
dec
lea
inc
sbb
sub
mov
or
fstpt
add
dec
mov
inc
push
stc
int
bound
or
fisubl
data16
test
jmp
mov
cmc
dec
pop
mov
test
mov
adc
mov
dec
dec
mov
xor
mov
pusha
cli
dec
jmp
adc
jno
push
nop
or
mov
es
shll
xlat
push
popa
sbb
es
jecxz
arpl
mov
sub
hlt
lret
sbb
adc
mov
mov
movsb
ret
movsl
fs
lcall
lea
add
pop
or
xor
mov
ret
dec
or
rcrb
sbb
dec
popa
or
jmp
lret
leave
sbb
lock
xlat
test
fcoml
inc
or
or
lcall
adc
pop
push
mov
jle
data16
mov
insb
sar
adc
adc
nop
jbe
aad
mov
mov
jae
nop
pop
push
jb
or
mov
xor
mov
cmp
pop
scas
mov
push
jno
mov
push
movsl
add
pop
repz
jge
dec
xchg
int3
out
mov
mov
testl
push
xor
jno
adc
mov
push
scas
jne
push
cs
dec
jle
mov
mov
pop
pop
dec
xor
pop
or
aad
std
add
shlb
xchg
xor
fmulp
xchg
dec
popa
mov
push
ss
mov
jno
jge
in
sbb
mov
je
push
mov
hlt
and
movsb
scas
mov
add
adc
push
test
inc
rcrl
lods
add
loop
mov
mov
clc
pop
repz
mov
adc
mov
cwtl
sub
fidivs
cs
pop
decb
stos
das
pop
mov
inc
xor
pop
subb
rcll
aam
lods
mov
mov
loop
push
int3
ds
adc
jmp
cmc
or
pop
cltd
mov
pop
rcrl
jae
cmp
jmp
xor
fbstp
sbb
mov
ret
mov
mov
in
mov
fs
jg
pop
mov
pop
push
jmp
out
mov
mov
and
daa
dec
fimull
mov
inc
gs
mov
cltd
aas
dec
or
lcall
ljmp
mov
dec
pop
pusha
xlat
in
mov
sahf
add
test
or
ret
arpl
cmp
outsb
pop
std
in
popa
adc
mov
cmp
jl
aaa
scas
inc
add
int
in
xchg
cmp
loope
sub
sahf
sub
xor
dec
pusha
mov
daa
je
mov
lret
addr16
mov
orb
in
es
test
mov
mov
add
mov
pushf
call
mov
cmpsl
xor
mov
mov
mov
jmp
ss
out
sti
lahf
mov
imul
xchg
mov
cmp
dec
outsb
mov
mov
push
sahf
data16
inc
sub
lcall
push
cmc
mov
jp
xchg
sub
insb
fisubl
imul
mov
mov
imulb
adcl
clc
sbb
pop
and
cltd
lods
sti
sub
mov
popf
test
push
imulb
mov
outsb
xlat
adc
pop
mov
pop
leave
mov
int3
pop
mov
mov
and
fsubrl
mov
bound
js
inc
test
imul
sahf
mov
xchg
jb
jmp
lahf
pop
pop
and
ffree
daa
pop
sub
cmpsl
outsl
sbb
sbb
mov
inc
push
cltd
imul
rorl
cli
mov
jns
xor
cld
les
gs
jge
aam
sbbb
adc
in
fidivrs
adc
cmp
repnz
stc
push
mov
fs
add
sbb
sbb
dec
aaa
lret
call
add
mov
gs
mov
ret
jmp
js
xor
movsb
dec
es
pop
mov
jno
outsb
clc
push
mov
ds
rcr
sti
ficoms
xchg
scas
test
dec
mov
pop
jl
sub
push
js
pusha
popf
and
mov
pop
fstpt
xchg
push
stc
bnd
inc
or
sub
sbb
mov
loopne
mov
push
dec
or
and
test
loopne
xor
xlat
aaa
stos
push
jmp
sub
mov
xchg
mov
add
mov
push
int
cltd
push
fimuls
lods
add
jecxz
hlt
push
dec
faddl
xchg
fs
and
inc
adc
inc
or
addr16
daa
add
negb
pop
pop
repnz
std
fnclex
sbb
shrl
mov
je
pushf
clc
sub
mov
cmp
in
lds
fsts
mov
add
xchg
dec
lahf
sbb
imul
and
xchg
lock
jns
xchg
sbb
popa
shll
and
xor
add
lods
shrl
fdivrs
aaa
add
outsb
push
into
insl
jnp
pop
je
or
ds
or
sbb
jae
fsubs
test
aad
dec
adc
jge
cmp
lcall
fs
out
sti
or
and
es
stos
ss
push
insl
outsb
lret
mov
xchg
jnp
add
mov
aad
bound
xchg
aas
xor
or
mov
cltd
ja
add
popa
js
mov
mov
fwait
and
insl
fisubrs
cmp
adc
fwait
mov
sub
push
clc
ret
xlat
fmull
or
push
dec
mov
mov
daa
imul
add
jns
pop
mov
aam
xchg
sbb
pop
add
rcrb
jb
adc
push
mov
inc
cmpsb
adc
push
mov
lcall
testb
xor
lock
roll
pop
jg
insb
cmpsl
or
pop
int
mov
subl
subb
xchg
push
movsl
sbb
jb
adc
and
mov
out
lahf
add
ss
lods
sub
test
jle
adc
testl
fnstsw
pusha
or
idiv
test
repnz
divw
sub
mov
sub
add
cmp
jmp
push
dec
data16
mov
inc
mov
ret
shl
cli
mov
aam
nop
push
jbe
push
sbb
lock
mov
insb
roll
dec
sbb
xchg
push
dec
xchg
mov
daa
mov
push
int3
pop
insl
push
repz
xor
popa
lea
cs
bound
roll
add
stos
mov
or
enter
gs
mov
xlat
loop
out
push
xchg
or
pop
test
sub
lret
xchg
bound
inc
mov
xor
pop
or
ljmp
stos
imul
dec
jae
cmc
icebp
sub
fidivrl
pushl
jmp
push
sbbb
jo
adc
std
cld
add
adc
sti
mov
cmp
pause
stc
test
sti
pusha
ljmp
std
xchg
dec
sub
out
mov
movsl
mov
push
mov
xor
ret
pop
push
cs
cmp
testl
mov
inc
push
ds
adc
xchg
cli
sbb
inc
mov
add
push
sbbb
adc
pop
push
test
cmp
push
mov
adc
repz
cld
imulb
pop
inc
insb
popl
fiaddl
push
add
fcmovnbe
mov
mov
xor
and
or
test
mov
xor
pop
cmp
push
pushf
lret
push
sub
shl
jl
cld
cmp
sbb
jle
pop
popa
into
adc
mov
das
add
cmpsl
outsl
inc
loop
sbb
pop
push
rcrb
dec
xor
pushl
ss
or
inc
sbb
cmpsl
cmp
pop
nop
mov
fidivrl
jmp
inc
push
mov
push
arpl
push
stos
fimuls
push
mov
pop
in
sti
inc
adc
gs
mov
push
push
sub
mov
push
fidivl
xor
inc
and
dec
and
fs
stos
mov
dec
out
add
pop
mov
xchg
mov
adcl
jecxz
sqrtps
bound
out
sbb
jmp
dec
sar
or
pop
enter
jb
clc
lahf
cmp
sub
xchg
dec
bound
lods
jle
call
ljmp
push
leave
mov
mov
lods
shlb
jl
arpl
and
cvttps2pi
sub
push
mov
mov
xor
out
out
lds
sarb
xchg
sbb
mov
enter
push
outsb
lret
and
mov
ficomps
cmpsl
adc
std
mov
das
cmp
stos
fs
xor
leave
mov
or
mov
jp
cmp
mov
sahf
out
int3
mov
loopne
lret
test
inc
xor
jp
loope
movsl
ret
pop
adc
mov
lret
sub
dec
lock
mov
loop
lahf
or
cmp
cmp
mov
and
test
rcr
jle
fistpl
bound
scas
test
fcoml
mov
fistpll
xorb
decb
idivb
jo
les
mov
sub
nop
js
dec
fidivrl
and
cmp
adc
lea
sahf
add
dec
cmp
mov
mov
in
mov
ret
pop
pmulhuw
xchg
testl
fdivrp
shlb
mov
lret
inc
sub
push
push
movsb
add
adc
mov
aam
push
dec
int
or
lods
sub
mov
out
sub
push
dec
sbb
bound
xor
adc
popa
pshufw
popa
jmp
je
adc
insb
rol
mov
dec
es
mov
lea
pop
mov
out
cmp
shl
inc
lods
and
and
out
pop
cld
or
push
push
inc
cmp
ss
repz
fisubs
jb
aad
lods
cmp
rolb
call
rcrl
clc
sub
push
ss
lretw
je
out
pop
lds
stos
outsb
mov
fdivr
call
in
push
mov
mov
cmp
pop
xor
and
dec
mov
mov
rcr
sub
std
dec
mov
sub
dec
push
inc
out
sbb
jb
push
mov
test
add
scas
lods
mov
test
pop
movsb
or
pusha
add
pop
aad
jns
dec
sub
mov
aad
xor
cmp
shll
jle
xchg
inc
mov
sbb
mov
mov
inc
testb
jg
daa
loope
push
cmp
add
lea
popf
and
das
xor
adc
cld
sbb
fwait
clc
mov
mov
cld
addr16
and
pop
sbb
cs
andb
add
dec
nop
cli
adc
cltd
out
ds
jle
fwait
xlat
sahf
repz
sub
aam
addb
fiaddl
push
pop
test
fidivrs
rcll
enter
leave
fstps
cmpsl
or
xor
subb
sub
xor
int3
and
mov
fwait
insb
and
addl
stc
add
add
insb
push
lahf
adc
add
jnp
fidivl
mov
testl
popf
mov
mov
cmp
xorb
lock
adc
pusha
xchg
jnp
jl
pop
cmpl
int3
cmp
jp
mov
xor
sub
cmc
nop
push
rol
mov
push
mov
ja
mov
sahf
sub
xchg
lret
pop
cld
and
repnz
leave
xor
js
jb
adc
xchg
push
fsubr
xchg
aaa
aad
negb
into
xchg
push
outsb
mov
jle
adc
ror
rorb
push
mov
adc
outsb
push
xor
push
in
push
and
dec
test
fidivl
and
jb
pop
subl
subb
clc
mov
mov
out
sbb
sbb
jno
xor
mov
test
inc
gs
pop
mov
shlb
cmp
pop
nop
mov
sbb
push
mov
jbe
cs
cmpb
arpl
jno
sbb
xor
mov
scas
fldl
enter
sub
out
xchg
je
cmp
or
sub
mov
inc
aam
sbb
adc
dec
mov
lods
cmc
xchg
mov
mov
adc
xchg
mov
dec
push
jbe
inc
cli
xchg
or
shl
sti
mov
cmp
mov
inc
jb
nop
lods
push
fadds
icebp
gs
int
inc
mov
test
leave
fwait
popa
inc
dec
nop
push
loopne
jo
scas
js
push
xchg
ficomps
movsb
sub
cwtl
out
aam
xchg
mov
adc
mov
mov
out
loope
fsts
xor
mov
and
cmp
dec
pushf
pop
mulb
in
sbb
sub
jb
cmp
mov
out
lods
pop
sahf
loopne
mov
mov
dec
sbb
sub
outsb
jne
mov
or
mov
jno
jecxz
sub
jge
lods
jmp
scas
push
push
push
fcoms
mov
push
push
lea
and
movsb
sbb
dec
jl
clc
inc
lret
movsl
jno
jecxz
sbb
and
jle
sar
jg
add
dec
fldl
js
sub
inc
jecxz
pop
daa
mov
and
push
adc
cmpsl
adc
mov
mov
xchg
mov
dec
push
sub
fcmovnu
fldcw
aas
out
fcmovnu
xchg
mov
test
sbb
add
push
add
out
cld
mov
cmp
jmp
sahf
ss
je
inc
push
xchg
xor
mov
repnz
cmpsb
adc
inc
pop
comiss
pop
orb
pop
dec
cmp
repnz
cmp
push
jle
xchg
stos
lret
ds
pop
pop
xor
repz
test
xchg
add
xor
sbb
xorl
xor
inc
mov
mov
movsl
movsb
adc
clc
aaa
xor
jl
lahf
mov
jnp
sbb
jmp
gs
jl
mov
pop
jge
jmp
push
add
sbb
jl
xor
xchg
xor
mov
dec
fnstsw
dec
mull
iret
mov
sbb
mov
out
and
outsl
push
cwtl
dec
sti
cli
ds
add
mov
aad
popa
sub
push
add
data16
xchg
psubd
push
pop
sub
movsl
ret
out
pop
loop
mov
insl
pushf
movsl
push
xor
hlt
ret
iret
mov
mov
mov
mov
pushf
cwtl
push
add
sahf
xchg
inc
pushw
pop
or
xor
jmp
aam
mov
lret
mov
shl
inc
in
inc
mov
cmp
adc
sub
pusha
add
cmp
rcr
mov
xor
push
or
jns
xchg
pop
push
or
data16
push
mov
mov
lahf
jmp
in
mov
xchg
fistpl
push
cmp
fnstsw
out
dec
pop
test
jnp
xor
fsts
cs
mov
loop
push
mov
sub
inc
scas
mov
mov
add
sbb
popf
dec
jmp
call
sub
mov
xchg
mov
sub
fidivrl
add
mov
scas
les
repnz
xor
mov
shll
sub
mov
xchg
rcrl
xor
mov
lret
sbb
mov
jb
pop
jmp
lods
int3
mov
xchg
cmp
cmc
test
and
adc
mov
ss
dec
adc
fisubrl
push
das
fsubs
or
mov
fildl
setne
scas
mov
lods
ja
inc
adc
icebp
xchg
jle
mov
popa
pop
out
inc
leave
mov
add
cli
sbb
jnp
rolb
add
mov
popf
xor
insb
scas
add
cmp
scas
ficompl
dec
cmc
pop
push
push
sbb
xchg
add
lret
mov
ficoms
fsqrt
add
mov
lods
ja
push
adc
addb
sbb
fisttpl
dec
clc
std
jp
sarl
rclb
sub
aam
xchg
dec
rclb
mov
sub
sbb
push
icebp
mov
inc
out
stc
mov
stos
push
xchg
push
pop
add
iret
mov
in
sub
and
cld
sbb
mov
sbb
jbe
clc
mov
std
bound
ss
fs
ror
mov
shl
ja
push
cmc
lcall
jl
mov
xor
dec
mov
loop
sbb
test
cmp
movsl
cltd
pop
lock
adcl
jmp
mov
adc
mov
add
pusha
ja
xor
or
push
imul
push
mov
ds
cltd
sbb
mov
clc
sti
pop
lea
das
cmp
pop
mov
cmp
leave
jle
jnp
mov
roll
adc
std
adc
aam
pushf
cmp
jmp
push
mov
test
mov
jns
inc
aas
ficoml
mov
call
lock
mov
cmp
test
in
jae
pop
ficompl
mov
inc
scas
sub
xchg
jnp
test
sub
and
lret
xor
pusha
mov
sbb
mov
movsb
cli
das
popa
orb
mov
test
movb
pop
loop
dec
fcompl
pop
jmp
lcall
mov
or
lahf
mov
add
mov
jg
lods
pop
mov
push
or
xchg
shlb
jp
mov
mov
xor
nop
jp
loope
vorps
lret
ljmp
enter
outsb
mov
pusha
ja
lahf
xor
inc
dec
push
in
push
mov
xor
stc
out
mov
test
fcmovu
es
dec
jo
mov
sarb
fldcw
push
mov
icebp
pop
mov
jno
push
stc
mov
or
popa
lock
push
mov
push
pop
xchg
cmp
shlb
aas
push
sbb
jo
cmp
push
push
or
adc
jnp
mov
or
cmc
sub
dec
dec
in
dec
stc
pop
jns
cmp
mov
dec
pop
mov
jo
lret
daa
das
push
xor
inc
jge
add
ljmp
add
js
rcll
lret
inc
cmp
push
add
mov
mov
and
jno
stc
notb
xchg
loope
loop
adc
rolb
add
je
test
dec
js
mov
lock
and
mov
push
sub
xchg
ret
pop
xchg
dec
inc
mov
loop
mov
fidivrs
adc
pop
push
aad
adc
sbb
in
jns
mov
loop
test
testb
int3
in
push
dec
mov
add
sub
and
cwtl
adc
mov
jne
mov
fildll
andl
clc
mov
push
stos
sbbb
scas
inc
xor
jne
push
cmp
push
loope
sub
sbb
cmp
aaa
jno
nop
jge
dec
fstpt
sub
std
and
je
enter
mov
loop
popa
mov
cmp
pop
push
aaa
push
cli
aaa
sub
push
out
dec
inc
mov
mov
pop
or
cmp
gs
adc
adc
pop
add
push
pop
sbb
push
je
loop
mov
add
cli
scas
and
xlat
sbb
adcb
xchg
pushf
das
dec
mov
cmp
push
jmp
add
js
ss
add
adc
push
mov
or
sbbl
les
mov
aaa
ret
adc
mov
sti
adc
fists
adc
cmpsb
ret
popf
sti
loop
xchg
or
pop
jge,pt
and
sub
adc
les
shll
enter
mov
outsb
dec
pop
fnstcw
xor
stos
popf
pop
or
push
dec
incb
aas
add
xchg
mov
jbe
lahf
xor
mov
push
dec
or
sbbb
mov
pop
xchg
cmc
sbb
pop
jl
inc
mul
cli
jl
fnstsw
or
add
or
sbb
mov
xor
pop
out
or
push
rcll
test
adc
dec
cmp
cs
popa
call
cmp
in
and
xorb
mov
inc
or
push
mov
mov
xchg
das
imul
xchg
shr
push
cltd
leave
mov
xchg
cli
aas
sub
adc
imul
sbb
dec
ja
fiaddl
xchg
xlat
cmpsb
mov
xchg
sub
jmp
cltd
add
sub
shrb
mov
adc
push
cs
xchg
push
orl
sbb
outsb
ss
mov
mov
sbb
stos
mov
xor
cmpsb
ljmp
xor
mov
outsb
xchg
xchg
lahf
pop
mov
push
inc
sub
cltd
sti
std
pusha
jle
dec
sbb
repnz
add
lds
insb
sub
ljmp
mov
dec
dec
cltd
cmpsl
sub
jl
out
pop
push
mov
cmc
or
add
cli
nop
shl
in
cmpsb
outsl
jb
or
stc
inc
inc
pop
out
push
xchg
mov
pop
inc
mov
cmp
mov
sub
xchg
adc
or
jl
inc
adc
mov
or
mov
cmpl
outsb
mov
out
sbb
and
jno
ret
popa
rcrb
push
test
out
test
rcrl
mov
lea
push
call
add
int
into
jns
ja
xchg
test
jle
fdivl
push
test
add
je
enter
test
bound
jbe
mov
mov
pushf
clc
into
mov
das
lcall
int3
nop
shrl
mov
out
add
dec
mov
jmp
jb
mov
mov
inc
push
jns
xchg
cltd
fnstcw
outsl
out
sub
push
shll
or
xor
xchg
cmp
fxam
xchg
mov
mov
mov
fisttps
nop
dec
jl
adc
pop
lea
test
stc
arpl
cmp
lret
fwait
lds
loop
inc
ss
xor
leave
inc
es
cltd
xchg
lahf
mov
xchg
xchg
push
or
subb
and
sbb
xchg
js
pushf
cmpsl
add
stos
mov
add
mov
add
inc
cmpsl
ret
std
pop
or
xchg
mov
ss
add
push
xchg
test
fcmovu
dec
mov
lret
lds
cmp
sub
dec
inc
adc
das
clc
sbb
push
outsb
cmp
inc
js
dec
cs
mov
dec
inc
adc
stos
pop
int3
rorl
mov
dec
or
inc
jecxz
fisubrl
movl
cmp
xor
movsb
cmc
aaa
cmp
aad
mov
ss
repnz
xchg
lea
gs
xor
push
sbbl
sbb
sbb
cmp
js
out
dec
cltd
out
loop
sub
mov
mov
mov
xchg
addr16
mov
jns
repz
movb
push
adc
add
lods
cmp
xor
scas
cld
jecxz
cwtl
sub
mov
xchg
xor
mov
mov
in
pushaw
repnz
sub
shr
sub
jle
pop
adc
or
stc
shlb
pusha
jne
mov
mov
test
clc
push
das
jb
lods
cmp
fists
xchg
mov
outsl
sub
add
dec
mov
mov
pop
mov
arpl
popa
les
in
lock
or
inc
sahf
test
push
test
jb
add
gs
adc
add
push
ret
adc
jno
lods
popl
fs
add
sub
mov
pusha
movups
jmp
pop
iret
int3
push
daa
dec
fwait
sahf
pop
in
push
push
nop
push
in
pusha
scas
jb
pop
push
shlb
xor
adc
dec
cmpsl
mov
mov
jo
popa
sarl
addl
jmp
xlat
mov
jmp
cs
mov
es
jae
dec
je
loope
inc
out
xchg
add
xor
and
cwtl
pop
lock
dec
fidivl
cmp
push
out
pop
rclb
mov
rolb
and
das
popf
xchg
lods
sub
mov
das
cmp
sbb
xchg
pop
imul
jne
or
decl
push
or
or
aam
loop
pop
add
xor
sub
ss
sti
sub
mov
mov
pop
dec
xchg
ret
pop
rolb
ja
cli
inc
cs
xchg
xchg
pop
dec
test
lahf
mov
mov
imul
jne
pop
cli
adc
mov
dec
bound
repz
xorl
xchg
in
mov
lahf
and
shl
jns
pop
ja
stos
jp
inc
das
xchg
lcall
pop
sbbb
adc
ret
call
mov
mov
mov
xor
inc
inc
loope
dec
cld
push
in
scas
mov
ret
aas
movsl
add
clc
xor
mov
push
sarb
hlt
das
dec
mov
adc
mov
out
or
mov
into
je
adc
cmp
mov
lods
jo
gs
xor
out
pop
dec
imull
mov
jmp
xor
ss
mov
lods
xchg
jbe
pushf
push
push
ss
pusha
data16
adc
addr16
push
xor
and
xchg
cmp
movsl
fstp
adc
pop
jecxz
repz
add
rclb
mov
mov
test
shlb
mov
and
jl
fstpt
or
adcb
mov
push
xchg
xchg
sub
data16
cmp
scas
lods
shrb
daa
jno
mov
dec
repz
mov
sub
gs
test
xlat
dec
dec
cmp
mov
es
adc
lret
xor
mov
fs
lea
push
dec
ljmp
arpl
mov
xchg
xchg
xchg
cmp
cmp
int
xchg
jns
out
loopne
addr16
jnp
loop
test
pop
mov
ficoms
imul
sub
push
pop
mov
bound
test
repz
les
test
sbb
stos
jnp
dec
pop
movnti
sbb
mov
movsl
or
data16
jp
sbb
insl
das
nop
or
cmp
push
fs
jmp
cmp
es
inc
push
push
mov
pop
xor
and
mov
cmpsb
pusha
cmp
and
daa
mov
xor
addb
xor
mov
push
xchg
sbb
mov
sub
xchg
mov
in
aam
sbb
push
jnp
in
in
jbe
xor
dec
push
cmp
inc
mov
std
push
jae
mov
ds
or
xor
and
mov
xor
adc
mov
out
clc
sub
leave
cltd
jae
aaa
add
sahf
push
cli
jo
mov
mov
lret
in
adc
cli
sub
mov
in
xchg
mov
sbb
inc
push
and
shll
sahf
sbb
sub
stc
jns
adc
js
sbb
dec
addl
mov
movsl
in
dec
lret
loop
inc
pushf
mov
cwtl
into
pop
in
pushf
leave
or
xor
ficoms
pop
inc
xor
xor
outsl
cmp
add
ret
dec
fimull
push
es
xor
ja
bound
xchg
cmp
sti
dec
mov
insl
sub
adc
jae
test
inc
xchg
fwait
sub
dec
stos
sub
pop
pop
mov
push
std
add
jmp
pop
or
shll
adc
and
flds
roll
cld
stc
jnp
in
pop
push
sti
push
lods
xor
int
cmp
les
inc
inc
addr16
push
inc
pop
test
rorb
out
mov
pop
sub
xlat
fidivs
sbb
outsl
jno
cmp
mov
jne
mov
ret
mov
mov
cli
popa
mov
jo
pop
mov
outsb
pusha
adc
jge
shl
int3
push
decl
dec
sbb
shrl
mov
or
mov
pop
shrl
lahf
fwait
sbb
adc
gs
mov
mov
pop
xchg
dec
sub
insb
test
scas
sub
pop
dec
add
push
repnz
int
mov
inc
mov
lret
sub
js
into
pop
mov
jb
iret
jbe
outsb
clc
push
cmp
cmp
push
cmp
xor
leave
hlt
or
rol
test
mov
out
rolb
insl
mov
pop
stos
sti
mov
sub
adc
pop
fidivrl
xor
fs
out
movsb
sub
add
rcl
adc
cmp
pop
lahf
lods
cmc
mov
mov
insb
dec
push
rcrl
jmp
fcmovnb
pop
mov
push
mov
in
mov
rcr
dec
adcb
inc
fadds
repnz
fs
loopne
push
pop
xchg
pop
popl
test
cwtl
dec
dec
imul
lods
mov
xor
sub
jge
int
pop
lret
jl
cmp
mov
shl
sub
pop
sub
xchg
test
pop
call
add
sub
cmc
xor
movsb
aam
dec
insb
cmp
fimull
or
outsl
mov
sti
ficoms
imul
mov
add
pushf
pop
xor
fcoms
inc
add
and
inc
aaa
das
test
mov
inc
or
xor
dec
add
xor
pop
push
jno
scas
push
mov
dec
push
add
aad
stos
mov
push
xor
mov
sbb
and
lret
xor
mov
aad
push
adc
mov
movsb
sbb
jmp
pop
aas
sub
aaa
add
iret
pop
sbb
or
repnz
sbb
daa
sub
fs
dec
mov
jno
sub
cli
push
add
xor
rclb
out
rorb
lahf
popa
lcall
inc
jmp
outsb
shrb
xorb
rorl
bound
inc
pop
inc
mov
cwtl
nop
add
insb
jmp
in
xor
push
mov
outsb
or
movsl
jl
das
mov
mov
adc
push
movsl
movsl
sar
or
dec
std
dec
jnp
sti
leave
call
loope
mov
mov
pop
mov
mov
loop
loopew
ret
in
addr16
inc
jbe
sbb
sbb
add
dec
fsubrl
mov
jb
jns
or
cld
je
inc
dec
aas
inc
xchg
jmp
scas
jbe
push
fwait
mov
cli
jl
orl
and
insb
inc
sub
lods
adc
and
sbb
mov
fmuls
sbb
loop
gs
sub
or
mov
sub
cmpsl
daa
repnz
sub
ds
or
xchg
adc
lock
sub
adc
ds
ds
sbb
jne
std
shll
ss
sti
mov
jns
inc
int3
sti
mov
popa
repz
push
jne
rorb
fwait
jmp
or
sti
adc
push
and
fsubr
mov
mov
and
aam
aaa
pop
arpl
fiadds
jecxz
or
add
jbe
cmp
sbb
jmp
or
ss
loopne
loop
inc
movsb
jbe
loop
mov
lcall
scas
jno
das
or
jg
mov
jae
push
pop
cmp
push
adc
adc
loop
xlat
fildll
mov
into
mov
test
mov
ds
ljmp
dec
pop
pop
fwait
add
adc
add
push
push
mov
enter
pop
add
push
fiaddl
push
in
aaa
adc
mov
push
rorb
mov
pop
pop
fildl
cmc
pop
rorb
dec
frstor
push
add
sub
lea
mov
mov
xchg
push
adc
inc
ds
dec
fucom
ds
push
push
or
pop
dec
fsubp
das
or
in
sbb
mov
out
div
mov
cmp
and
lcall
inc
adc
orb
mov
inc
scas
cmp
sub
sti
cmp
fstl
fs
test
and
xlat
mov
push
ja
jb
out
xor
xchg
mov
addl
add
jno
sub
insb
mov
pop
addb
xchg
push
xor
inc
dec
pop
popf
inc
jo
or
push
out
or
cmp
fwait
inc
mov
popa
adc
xor
xchg
sub
test
cltd
adc
in
pop
stos
mov
pop
cmp
xor
mov
outsl
xrelease
outsb
adc
lret
ret
lcall
xchg
xor
repnz
mov
push
pop
adc
push
add
inc
cmc
insb
mov
stos
shlb
roll
mov
mov
lahf
add
ret
add
jno
inc
xor
aam
in
fwait
xchg
jb
sbb
mov
dec
clc
inc
mov
repnz
cmc
inc
cmc
jmp
clc
mov
cli
add
jnp
sarb
testl
adc
push
fldt
cmc
push
fndisi(8087
ja
mov
test
push
mov
jp
arpl
lcall
sbb
sbb
frstor
jb
aad
test
inc
cmp
pop
inc
mov
dec
sub
outsb
mov
jbe
in
xor
add
mov
xchg
push
sarb
mov
aam
jns
pop
mov
xor
add
aam
movd
mov
adc
jnp
ret
xchg
std
shr
fs
dec
imul
pop
cmp
lock
js
addr16
mov
or
das
cmp
and
adc
sbb
add
out
or
mov
mov
pop
mov
mov
rclb
dec
xor
insl
add
pop
fs
data16
mov
cmp
xor
lods
cmp
xchg
cld
lret
inc
add
nop
pop
lret
mov
test
mov
pop
cmp
jmp
or
sti
add
or
mov
xchg
lea
or
or
rclb
push
in
lds
lods
xor
cmp
cmpsb
inc
or
push
mov
cs
int3
jl
rcl
dec
lods
push
mov
repnz
sbb
fisttps
dec
add
pop
daa
loope
jnp
inc
sbb
stc
jne
jp
mov
inc
sbb
jb
clc
xchg
xor
out
aaa
les
bound
lea
mov
stos
push
jae
add
mov
inc
push
movsl
inc
ficoms
in
mov
test
mov
mov
mov
out
xchg
cmove
aaa
imul
jae
sbb
push
pop
fstpt
outsb
add
sbb
mov
mov
mov
pop
filds
repnz
outsl
dec
fidivl
mov
jb
lret
mov
mov
test
and
jnp
adc
adc
mov
mov
mov
xor
enter
repnz
xor
testl
pushf
mov
sub
shlb
adc
sbb
test
cmc
mov
pusha
sub
pop
dec
mov
hlt
negb
sbb
cld
nop
xchg
cmp
in
push
push
cwtl
fs
mov
pushf
ja
pop
xchg
cli
fidivs
rorb
sbb
add
mov
mov
lea
pop
xor
push
outsl
js
fwait
adc
xchg
mov
movsl
dec
mov
mov
loop
adc
mov
sub
push
js
push
fcoml
xchg
or
mov
das
push
mov
cld
pop
push
add
dec
jl
sub
add
fsubs
cmp
rolb
xor
jns
xchg
push
push
adc
push
pop
sub
leave
mov
mov
mov
pop
pop
mov
mov
jne
adc
add
dec
popf
xchg
mov
cmc
les
jo
mov
mov
sti
jb
leave
xor
add
and
cmp
pop
ja
fisubl
add
mov
sti
xorl
loop
xor
push
sti
lret
xchg
sbb
pop
jg
fwait
int
cmp
or
mov
das
pushl
xor
push
inc
shrb
push
or
pop
xchg
or
jp
adc
into
xlat
xchg
out
das
fldt
jg
jns
push
jl
aad
and
dec
mov
xor
sub
mov
xor
pop
es
fsubs
sbb
outsb
xor
pusha
adc
cld
fldt
mov
xchg
jle
insb
insl
mov
push
inc
sub
mov
dec
outsb
adcb
cmp
push
in
cs
push
sti
shll
jmp
inc
cmc
jb
ret
cli
sbb
push
ud1
fisttpll
imul
jl
and
les
push
sbb
stc
adc
jns
pusha
push
fwait
push
test
and
ret
cld
jns
push
mov
das
mov
mov
push
sub
bnd
ss
cmp
mov
je
insb
loope
adc
xor
mov
jp
sti
xor
test
cmp
push
pusha
andb
ffree
fidivs
pop
push
out
push
outsl
push
ja
jge
mov
mov
inc
loopne
sub
adcl
insb
mov
jnp
pushf
mov
fs
ret
clc
or
mov
inc
cmpsb
lock
mov
rorl
mov
dec
insb
inc
shl
push
test
add
stos
jecxz
add
pop
and
xchg
pop
data16
lcall
adc
cmc
test
cmpsb
xchg
push
mov
inc
sbb
or
mov
mov
pop
sbb
dec
push
pop
lret
cmp
idivl
std
add
fs
and
jge
jge
cmovne
fldl
scas
test
ficoms
insb
pop
mov
inc
mov
dec
mov
icebp
pushf
out
xchg
or
rorl
or
insb
es
inc
pop
mov
out
movsb
add
mov
mov
jle
shlb
flds
or
mov
sub
mov
sarl
std
call
mov
cmp
mov
sti
push
sbb
mov
mov
sub
lcall
pop
test
inc
pusha
mov
vmread
loop
mov
out
fisubrs
mov
movb
gs
sbb
movsb
add
data16
sub
imul
mov
dec
pop
cmp
repnz
jmp
lcall
sub
test
sbb
fucom
xchg
jmp
ja
mov
es
sarl
cld
push
aas
or
and
sarl
jp
add
push
add
daa
clc
dec
leave
cmp
in
dec
xor
xchg
fidivl
jle
inc
xor
lcall
mov
add
popf
lods
xor
or
cld
push
jno
insl
lahf
mov
jno
mov
pop
push
cmp
add
jmp
mov
jle
pop
lahf
gs
call
insb
fildl
movsb
pop
aaa
jne
mov
pop
sub
gs
jg
cmp
cwtl
dec
arpl
arpl
out
xor
das
pop
inc
add
out
adc
imul
popf
movl
add
jmp
pop
add
jge
sti
out
lret
mov
test
or
insl
imul
and
orb
push
mov
mov
imul
sub
or
jmp
stc
gs
notb
cmpsl
mov
pop
test
sub
mov
and
or
add
pop
shll
mov
ss
test
jno
fdivp
push
xor
mov
cmpsb
push
test
imul
sub
sbb
xor
and
arpl
or
mov
stc
sub
sub
cmpsl
test
inc
adc
sbb
addr16
cmp
ss
loopne
push
sub
cmp
addr16
xchg
fistps
fwait
inc
mov
popa
mov
fstpt
fidivs
sti
add
fisubrl
ss
jns
adc
aaa
rcrl
sbb
xchg
jmp
pop
pusha
test
jno
fidivl
cmpsl
xor
jnp
rcl
dec
xchg
leave
jno
mov
mov
ficoms
mov
mov
xor
aam
xchg
test
sub
dec
lret
pop
sub
cmp
mov
adc
arpl
add
dec
xorl
or
inc
ret
mov
test
mov
stc
adc
fiaddl
stos
mov
notl
sbb
pusha
xchg
adc
cmp
sub
cmp
test
mov
arpl
das
sti
shrl
xchg
push
push
push
ficompl
cmp
mov
cs
inc
push
fstpl
hlt
rorb
add
mov
dec
mov
sbb
fstpt
mov
sub
dec
in
mov
jmp
add
ss
jp
fnsave
lret
cs
fcmovb
int3
lret
mov
and
or
jns
push
loop
out
stos
in
cmc
inc
adc
ss
jp
lret
pusha
cmc
adc
xchg
mov
adc
mov
adc
ror
mov
popf
shlb
data16
js
test
pop
adc
enter
inc
mov
xor
sbb
sti
jmp
jmp
mov
mov
push
pop
cwtl
push
data16
xor
adc
aam
cmp
or
jns
popa
push
mov
jmp
and
daa
stos
xor
sub
out
and
sub
push
xchg
sysenter
das
push
pop
es
add
aas
sbb
cmp
dec
mov
mov
dec
rclb
mov
sub
sbb
adc
ret
cmpsb
or
cmc
mov
push
xchg
sub
data16
cmp
push
mov
mov
out
fsubrl
out
push
fildl
cmp
lods
push
addl
dec
add
data16
arpl
lret
xor
cs
inc
jmp
jmp
mov
cmpsl
adcl
cmp
sbb
pop
pop
negl
xchg
push
sbb
mov
add
sbb
mov
fldcw
jg
jne
mov
popf
mov
dec
icebp
incb
push
push
jmp
xor
out
mov
dec
jge
jmp
pop
mov
fscale
cmp
sbb
cmp
leave
sub
orl
and
mov
lds
arpl
in
outsl
push
mov
cmp
jbe
inc
add
enter
sub
loop,pn
aaa
bound
mov
adc
xchg
push
insb
lods
ljmp
mov
lahf
addr16
mov
inc
sub
mov
mov
xchg
hlt
mov
xor
sub
jmp
xor
xchg
loop
pop
mov
mov
call
fldcw
lods
mov
rclb
je
cli
mov
ret
out
add
and
lds
stos
jne
test
mov
sub
push
mov
pop
sbb
insl
inc
mov
mov
int
cmp
mov
das
push
and
lods
jmp
adc
out
adc
fdivl
jle
cmp
imul
lret
sub
adc
push
jnp
orl
fisttpl
push
jl
icebp
lds
data16
mov
xchg
mov
jns
mov
repnz
ljmp
clc
imul
lahf
sub
pop
je
sub
test
sbb
fisubrl
jne
jp
jno
in
aaa
ss
out
xor
xchg
cli
cmp
lahf
data16
adc
mov
adc
adc
xchg
pop
fisttpl
mov
jno
adc
adcl
rolb
push
mov
lea
mov
loope
lret
lea
loopne
sahf
fidivrs
clc
mov
fisttpll
fwait
jnp
or
data16
inc
das
test
xor
xor
in
push
adc
sahf
fs
iret
fcmovu
lods
push
cmp
insl
mov
imul
and
ss
sub
test
and
fildll
popa
mov
ret
adc
jbe
jae
addr16
sub
loop
adc
insl
enter
mov
scas
mov
ret
jnp
cmp
ficompl
add
push
mov
push
cmc
adc
cltd
add
adc
mov
outsl
pop
je
pop
add
or
ss
mov
call
divb
fnstcw
repz
stos
es
movsl
mov
xchg
mov
std
or
movsb
mov
not
dec
sub
clc
fistl
push
or
inc
add
jge
cmpsl
sub
push
xor
or
cmpsb
out
ret
ficompl
mov
xor
jno
and
pusha
pop
enter
or
cmp
lock
ret
sbb
push
dec
jle
push
jmp
test
js
in
arpl
add
mov
or
xor
jl
adc
sbbb
pushf
adcb
mov
int3
xchg
inc
fists
pop
xchg
mov
push
out
in
neg
push
xchg
mov
mov
mov
xchg
push
pop
push
sub
xor
inc
mov
filds
adc
jo
jl
mov
pop
pop
cmp
push
lahf
mov
inc
push
pop
sbb
std
enter
into
sbb
or
popf
lods
ja
cmp
push
mov
jle
pop
push
mov
lock
or
xor
pop
es
add
cmpsl
xor
das
shrl
pop
out
cli
or
mov
xor
cltd
sarl
adc
fsubr
decb
repnz
test
icebp
jmp
icebp
cltd
pop
cmc
jl
fidivrl
inc
sahf
dec
popa
cmp
lahf
pop
icebp
lock
test
mov
lret
pop
pop
jl
shlb
das
sarl
jno
push
outsb
imul
push
inc
xor
sarb
test
fcomi
rsqrtps
dec
mov
sub
lock
push
scas
ret
inc
sub
sti
loop
jmp
pop
ljmp
fisubl
jge
out
sbb
xchg
xchg
mov
xchg
mov
sbb
push
add
xchg
pop
fidivrl
sahf
out
cld
adc
ljmp
lahf
cmpsl
data16
cltd
mov
add
pmulhuw
cwtl
fsubs
inc
cmp
mov
dec
test
ret
dec
pushl
mov
mov
adc
mov
sti
pop
push
dec
out
or
insl
push
cld
and
test
jns
rorl
add
inc
or
repz
fisubl
aad
jns
push
jno
fwait
aaa
fsubrl
xchg
sti
cmp
sbb
sbb
jae
stc
in
push
cmp
xchg
arpl
cmp
xor
mov
jbe
fnsave
add
xor
sbb
mov
pop
js
das
stos
je
or
inc
stos
sbb
push
cs
int3
mov
bnd
jnp
fcoml
add
mov
add
dec
mov
into
adc
or
mov
shlb
or
jb
jmp
inc
mov
cmpsl
or
cld
add
cltd
imul
mov
mov
jmp
in
insl
inc
fucomp
aas
mov
or
jns
add
aam
xchg
add
cmp
hlt
adc
popa
mov
xchg
das
add
iret
inc
pop
mov
dec
and
sbb
mov
sub
test
mov
popa
std
int
inc
sbb
out
dec
sbb
icebp
sbb
adc
mov
jno
repnz
adc
pop
pop
inc
jmp
pop
loopne
into
cmp
dec
rcrl
cmp
cmpsl
xchg
fildl
fidivrs
cmp
mov
mov
imul
or
cmpsl
hlt
js
add
and
outsb
mov
cld
fwait
arpl
scas
stos
loop
adc
xor
adc
pop
in
cmp
add
fsubrl
jmp
push
dec
lretw
jle
std
lret
outsl
pop
popa
jns
mov
sbbb
sbb
adc
pop
xchg
in
mov
fmul
das
imull
data16
ja
cmp
mov
and
xchg
jmp
jmp
lcall
mov
inc
lcall
jne
fwait
xor
cmp
pop
mov
fbstp
ficoml
outsl
xchg
or
adc
mov
mov
mov
adc
pop
cli
inc
cmp
pop
sub
movsl
dec
jns
adc
inc
fst
mov
push
mull
xlat
sub
and
xor
cmp
outsl
or
adc
lret
popa
or
cltd
mov
sbb
or
mov
cmpsl
adc
adc
sbb
pop
jmp
mov
mov
ret
repnz
or
subl
mov
ret
adcb
clc
out
popf
cmp
cmp
and
insl
outsb
pop
jb
mov
mov
sbb
sbb
xchg
mov
repnz
inc
cmp
ljmp
stc
xor
dec
orb
out
movsl
stos
add
inc
sub
out
js
pop
add
loopne
cmp
and
imul
mov
push
dec
std
mov
push
pop
mov
stos
cmpsb
jmp
xchg
mov
test
cs
jo
adc
je
rcrl
enter
adc
push
fildl
movsb
push
inc
inc
add
js
fsubr
pop
in
sub
dec
mov
out
mov
dec
xor
mov
push
jo
adc
and
fisttpll
loop
rolb
cltd
mov
pusha
sub
or
sti
pop
decl
test
jl
push
test
mov
xchg
or
cmp
aam
add
sbb
movaps
loop
nop
in
mov
xor
cltd
jecxz
mov
fsubs
mov
dec
gs
mov
xlat
stos
repz
cmc
adc
jns
inc
cmp
lods
clc
fcompl
or
push
jmp
sti
mov
in
insb
fs
imul
cmp
jb
xchg
mov
mov
mov
arpl
shrb
ds
dec
and
jnp
imul
jns
xchg
fs
cmpsl
stos
insl
lret
int
fwait
jb
mov
sub
and
push
fnstcw
loop
in
repnz
and
cmp
sbb
adc
cmp
ljmp
fbld
das
adc
call
loope
scas
mov
pop
push
in
sub
mov
mov
mov
pop
fwait
sbb
lock
and
negl
lret
movsb
lret
cmp
jge
pop
mov
or
jg
jge
shll
sub
dec
daa
or
push
xor
pop
sbb
xchg
fstps
mov
fisubs
push
inc
cmp
push
flds
lods
jmp
lea
push
mov
and
mov
mov
sub
pusha
rcrl
or
mov
push
jl
ss
mov
movsl
fiadds
push
pop
inc
mov
inc
mov
pop
outsb
ficoms
fwait
int
imul
mov
popa
mov
pop
js
test
call
dec
out
std
mov
sbb
mov
cmc
xor
in
das
scas
jns
pop
test
pusha
sbb
insb
cmp
inc
out
rorb
loop,pn
int3
or
xor
inc
adc
push
jb
jge
sub
mov
pop
out
sarl
out
pop
sbb
popa
repz
xor
mov
mov
fld1
cmp
sbb
pop
es
test
mov
les
add
push
adc
mov
push
sbb
cs
xchg
push
fisubrs
adc
shrb
inc
add
xor
push
aam
and
mov
cmpsb
sbb
popa
pop
repz
lock
jne
pop
mov
sbb
loop
sbb
mov
dec
call
jae
lahf
std
fs
int
mov
adc
inc
mov
mov
mov
xchg
sahf
adc
pop
mov
adc
mov
fiaddl
jb
adc
sarl
stos
mov
inc
fdivr
das
xor
jno
and
adc
add
cmc
push
dec
test
adc
jno
stos
inc
inc
ljmp
cmp
pushl
dec
aas
ud2
xchg
pop
leave
lcall
sub
cmpsl
mov
test
pop
jns
mov
fildl
bound
xchg
sbb
inc
roll
push
adcb
pop
bswap
popa
or
mov
ljmp
sub
lods
out
fimuls
test
shlb
jb
inc
push
mov
mov
imul
lds
mov
sbbb
jle
lea
xlat
das
inc
push
jns
mov
cwtl
lret
fwait
aad
cmpsl
sub
mov
adc
filds
lock
sub
mov
shrl
push
in
insb
ficomps
outsl
enter
pop
mov
or
dec
jns
dec
mov
lret
pop
cmp
fcoms
movb
pop
mov
gs
xchg
push
inc
add
clc
test
aas
or
in
and
js
es
ds
fldenv
push
or
sub
andb
jle
xor
pop
nop
jns
stc
mov
leave
test
gs
and
jecxz
sbbl
cmp
cmpsl
sbb
pushf
jl
testl
fstps
mov
add
lds
push
sub
in
outsl
push
mov
pop
mov
ror
or
mov
test
mov
add
push
enter
stc
xchg
mov
xchg
push
cmpsb
in
jae
lds
mov
mov
mov
loop
adc
fwait
inc
or
call
and
out
push
cmpsl
dec
aaa
je
ds
cmp
or
dec
jnp
nop
xor
fcomp
shr
jle
pop
fsubrs
in
ljmp
sbb
and
rol
or
out
xor
mov
scas
push
lret
xor
test
add
jns
mov
testb
jle
add
fisubrs
sub
loop
push
cli
sub
xchg
scas
pop
lds
js
repnz
cmp
push
ret
mov
mov
or
imul
xchg
je
testl
cltd
mov
or
inc
scas
push
xor
fmull
push
mov
push
sub
inc
push
imul
test
das
cmp
mov
and
test
test
mov
jne
sbb
mov
cwtl
xchg
mov
jno
inc
mov
mov
xchg
out
fsubs
push
and
dec
jb
cmp
or
sbb
add
shll
push
shrl
xor
mov
repnz
add
xchg
sar
mov
lahf
mov
mov
push
mov
call
add
mov
and
repz
mov
xor
fwait
push
sbb
cmp
dec
into
std
enter
arpl
mov
xchg
mov
inc
dec
add
insb
mov
mov
lods
ss
rolb
and
fdivrs
int3
push
jo
std
fisubrs
ds
mov
std
andb
stc
cmc
pusha
scas
test
jge
outsb
push
xor
pop
ss
fsubr
std
jecxz
mov
sub
adcb
decl
in
into
dec
cmp
rcrl
xor
cld
lock
je
sahf
lret
sbb
xor
test
push
pop
mov
js
fcmovnb
mov
cmc
adc
adc
std
fwait
sub
xor
movsl
repz
stos
sub
mov
cmp
lcall
push
stos
mov
lahf
movsl
shl
mov
mov
mov
or
testb
leave
cmp
pop
dec
mov
insl
dec
fs
cs
jbe
sub
push
lret
add
cs
adc
xchg
bound
lods
sbb
jns
inc
or
sbb
enter
lock
cmpb
std
sub
inc
cmp
rol
mov
in
add
gs
push
arpl
rcr
mov
cmp
push
ljmp
mov
cmp
enter
inc
ljmp
xchg
or
mov
dec
mov
jo
pop
mov
cld
mov
push
sti
cmpsb
pop
push
inc
mov
xchg
aas
test
sbb
mov
sub
cwtl
xor
jmp
mov
xchg
lock
cmp
cli
dec
xchg
das
jno
aad
lahf
or
out
fisubl
imul
pop
js
call
jb
mov
inc
pop
clc
shr
or
dec
mov
pusha
pop
push
lret
lods
lcall
lods
ud0
leave
mov
inc
jnp
push
enter
xor
ret
and
xchg
js
mov
xor
lcall
cmp
adc
hlt
jle
std
mov
sub
movups
mov
inc
lds
fsubl
std
ljmp
insl
sub
cmc
inc
mov
mov
push
mov
mov
mov
out
add
push
out
bound
ds
dec
lea
insl
fwait
pop
sbb
hlt
icebp
outsl
push
jl
outsb
fcmove
ret
mov
ja
je
push
mov
cld
push
in
xchg
mov
movsl
ljmp
pop
and
sbb
shlb
test
add
xchg
inc
mov
stc
adc
test
push
icebp
repz
add
xchg
xchg
mov
rclb
or
mov
pop
inc
xchg
pop
lahf
xor
pop
lret
test
pop
sbb
or
scas
xor
nop
jo
mov
notb
outsl
push
sub
cs
dec
gs
pop
push
fstpt
jae
mov
push
in
ljmp
outsl
and
cmc
data16
bound
xchg
mov
mov
dec
in
xchg
jbe
jle
in
jno
mov
stc
sbb
pop
push
push
add
add
push
xchg
outsb
mov
inc
jae
cmp
js
test
popf
jg
sbb
or
insl
lea
inc
push
mov
ja
lret
push
aam
fsubrl
aam
mov
add
mov
sub
cmp
push
xor
fimull
pusha
xchg
pop
nop
pusha
adc
fcmovb
cs
pop
test
and
mov
xchg
push
idivl
out
cmpsl
fsubrs
adc
mov
pop
sub
in
or
notl
out
int
and
cltd
mov
xlat
loope
dec
xchg
jne
aaa
add
enterw
add
jno
std
pop
sbbl
adc
jecxz
lcall
jne
dec
adc
lock
lahf
jnp
sub
xchg
repnz
cmpsb
inc
das
mov
lahf
push
leave
pop
and
fcompl
sub
cmp
dec
cmc
adc
push
xchg
fdivl
dec
mov
mov
mov
ret
cmp
dec
pushf
push
jle
mov
sahf
cmpsl
loop
rol
in
mov
pusha
xchg
push
lret
dec
clc
popa
roll
std
mov
pop
pop
sarb
out
xchg
or
cmpb
nop
dec
jmp
or
push
leave
lds
cmp
xor
sahf
add
dec
dec
orl
jno
mov
sbb
lahf
add
rcll
sub
dec
call
dec
adc
mov
sbb
insb
mov
cmp
add
or
or
inc
push
fisubrl
push
call
lods
push
sub
cli
scas
or
dec
lea
aaa
dec
mov
lods
stc
or
adc
sub
sub
xlat
add
add
clc
or
sti
int
cli
sub
fsubl
cwtl
nop
cmpl
scas
lds
and
nop
sbb
dec
loopne
adc
cmpl
cli
add
dec
popa
cld
lods
mov
hlt
mov
iret
je
lock
in
outsl
popa
cld
inc
dec
loop
rolb
sbb
and
jmp
cmc
sub
cltd
push
cmp
xor
mov
sub
xchg
andb
aas
and
mov
sub
cmp
mov
sbb
jl
setnp
dec
xor
mov
ss
jo
push
mov
mov
stc
jmp
or
push
xchg
mov
xchg
jbe
push
sbb
aam
fisttpll
dec
xor
pop
sub
icebp
fidivs
mov
mov
jnp
mov
les
jmp
cmp
cmp
lock
rcll
lcall
sti
jmp
shlb
ljmp
push
ja
pop
or
icebp
cs
or
pop
call
cld
je
add
adc
cmp
dec
mov
pop
inc
jne
push
or
push
jnp
add
lods
lahf
dec
xor
xorb
pop
add
imul
cmc
mov
dec
dec
pop
in
jb
mov
inc
incl
rcrl
movsl
or
call
xchg
das
call
cmp
in
mov
sub
repnz
push
out
arpl
and
mov
dec
sbb
mov
pop
adc
sbb
mov
mov
mov
add
and
adc
stos
add
sbb
lret
dec
cmp
sub
jg
mov
mov
out
je
cs
out
xchg
sbb
mov
mov
mov
jbe
lahf
xor
outsl
insb
xchg
jl
popf
mov
pushw
les
les
jne
loope
pop
xor
cmp
shrl
rclb
adc
stos
mov
loopne
insb
mov
push
adc
dec
mov
push
jbe
fistpl
pop
test
lods
clc
cmp
push
lar
pop
jnp
pop
test
jp
popf
insl
mov
add
repz
fstps
std
xchg
in
clc
xor
jbe
cmp
in
jbe
dec
out
js
fnstsw
ret
or
mov
mov
xor
ja
jecxz
inc
sub
push
pop
inc
inc
add
mov
aas
or
fisttpl
sbb
insb
dec
aam
call
add
fldt
cmp
mov
lret
cmp
push
xor
nop
push
imul
aas
jge
push
mov
outsl
push
xchg
mov
sbb
jl
frstor
cmp
aaa
push
jl
inc
iret
sahf
push
cmp
aas
fidivs
lea
pop
sbb
mov
rcr
mov
jecxz
or
adc
pop
and
cmp
dec
scas
sbb
or
sbbb
push
aad
pop
pop
gs
mov
jb
mov
popf
mov
daa
inc
push
pop
ljmp
push
rorl
pop
adc
in
push
sbb
mov
clts
ret
scas
sbb
xchg
je
and
push
scas
add
hlt
add
leave
sbb
xchg
dec
push
popa
sbb
jns
push
cmp
je
pop
sbb
jge
lahf
ss
inc
pop
lret
out
mov
jmp
or
pop
stc
fimull
cmp
std
ljmp
jno
aam
pop
rcll
int3
xor
ss
out
mov
cwtl
inc
stos
mov
mov
sbbb
xchg
sub
arpl
mov
pop
and
xor
jp
jne
xor
dec
jo
push
push
sub
mov
sbb
ret
out
aaa
xchg
das
shl
jle
pop
cmp
sahf
imul
add
sbb
xor
sti
mov
inc
out
add
mov
test
es
xlat
outsl
mov
test
lret
push
subb
out
jae
mov
push
adc
fimull
fisubrl
dec
js
mov
clc
dec
outsl
pop
rcr
cmpsb
sub
jle
push
mov
jmp
ret
scas
sub
divb
adc
ret
push
pop
push
or
into
mov
pop
jmp
adc
and
mov
jno
sbbb
data16
hlt
pusha
faddp
ds
sub
fstp
loop
dec
and
sbb
xchg
outsl
mov
or
popf
dec
mov
mov
jg
xchg
inc
lret
jbe
decl
xor
cmp
mov
cli
lret
pop
lret
fstpt
mov
imul
adc
xchg
cmpl
shlb
jmp
sub
fimull
adc
push
ss
sub
ds
lcall
imul
inc
insl
sbb
add
inc
pusha
pop
jle
push
mov
or
jo
stos
sbb
stos
jmp
jl
jo
adc
sub
push
xchg
loop
loop
push
popa
push
push
pop
fcom
xlat
dec
jmp
inc
jp
sbb
ds
in
dec
adc
push
jle
pop
pop
data16
popa
add
jge
in
andl
push
cwtl
pop
mov
popa
mov
mov
xchg
icebp
inc
repnz
mulb
sub
mov
imul
sub
add
fdivl
inc
jns
int
dec
out
out
loope
cmpsl
xchg
push
clc
cmp
xor
outsl
test
adc
mov
mov
jg
aaa
loopne
adcl
xchg
je
jne
push
push
pop
push
in
xor
insl
dec
inc
adc
lret
push
adc
mov
mov
xchg
mov
out
or
pop
dec
movl
lret
mov
add
shlb
push
jae
mov
cmp
cld
lock
cmpl
xchg
add
insb
mov
fistpl
add
repz
xor
pop
fwait
sub
pop
cmc
out
sbb
fistl
das
aas
repnz
cmp
loopne
in
push
push
adc
je
or
cld
lock
adc
jecxz
push
pop
pop
adc
adc
dec
sub
mov
sarb
xchg
xor
lods
sub
shll
pop
movsb
dec
outsl
nop
loopne
adc
je
rcrl
outsb
imulb
mov
shrl
mov
adc
pop
mov
jmp
das
fldcw
sahf
xor
loopne
mov
cwtl
cmpb
cmp
jno
lea
fadds
outsb
test
pop
es
xor
dec
push
pop
cmp
push
in
sarb
shrb
push
js
and
ljmp
pop
loop
lea
push
mov
xor
jbe
sub
cmpsl
fwait
mov
mov
movsl
test
mov
xor
enter
pop
xor
pop
mov
rcrb
loope
cltd
xor
push
lahf
lock
in
inc
je
xor
lods
add
shll
dec
or
jge
inc
insl
mov
movsl
andl
lcall
cmp
adc
pushf
xchg
mov
dec
push
pop
and
test
xor
fldenv
popf
push
add
sub
inc
ds
jg
stos
es
push
ret
bound
xchg
dec
sub
fsts
decl
pop
mov
data16
pop
lret
dec
adc
or
and
add
icebp
add
jmp
pop
dec
enter
addl
jns,pn
dec
add
and
inc
xor
inc
cwtl
dec
sub
daa
push
push
stos
cld
adc
jmp
dec
stos
mov
inc
aad
sbb
loop
adc
push
cmp
dec
cmp
dec
cmpsl
adc
ljmp
push
sub
and
fidivrl
xor
mov
jmp
mov
ficomps
fs
in
addr16
pushf
and
pop
sarb
or
fisubrs
inc
cmc
aaa
or
add
pop
cmp
cli
jns
arpl
add
mov
jp
pop
xor
xor
jmp
inc
xchg
adc
std
std
mov
test
xor
mov
pop
mov
insb
mov
bound
jnp
pusha
aaa
and
and
jmp
jnp
int
outsb
mov
cmp
shl
jbe
fisubl
xchg
hlt
jnp
lock
jns
push
xchg
int3
jne
leave
cmc
push
push
das
insb
lahf
cwtl
adc
sbb
fsub
icebp
sbb
sbb
and
ficoml
adc
fdivl
mov
sub
subb
jmp
inc
mov
jns
xor
das
lock
jge
bound
cmp
fmull
ss
cmpb
lret
rorb
lahf
imul
fwait
repz
jne
xor
adc
mov
in
adcb
test
fcomp
lret
testb
cmp
das
leave
push
mov
fs
xor
outsl
cmp
mov
mov
rcl
sbb
je
cmpsl
ficoms
jl
insl
mov
testl
pop
pushf
or
movups
mov
fs
dec
mov
loop
dec
ljmp
icebp
pushf
mov
cs
dec
rclb
or
dec
push
pop
das
decl
sarl
subb
adc
call
mov
sub
pop
dec
test
push
lods
xor
push
jle
test
and
mov
fsubr
mov
in
jo
sarb
addr16
repnz
stos
test
pop
jno
enter
fadds
inc
aaa
in
cli
push
rcll
sub
mov
dec
pop
pop
push
fstp
das
sbb
jbe
sbb
push
cmp
jbe
jp
mov
gs
mov
pop
add
pop
sarb
cld
divl
outsb
das
bound
mov
subb
xor
fs
data16
add
push
sti
sub
pop
outsb
mov
push
sub
push
mov
push
pop
jae
inc
pusha
into
repnz
lahf
mov
icebp
push
ret
lods
outsl
lret
testl
repz
pop
test
push
clc
adc
into
pop
rorl
aam
addb
inc
fwait
ss
rcll
sbb
pop
dec
cmpsl
cmp
xor
outsb
int3
and
or
mov
push
or
lret
hlt
loope
xchg
push
fwait
add
daa
xchg
bound
mov
mov
mov
lods
push
push
pop
inc
repz
fidivrl
xor
pop
sbb
push
fs
pop
das
mov
mov
jle
outsb
pop
xorl
shll
out
lahf
repz
mov
insl
pop
decb
push
mov
mov
mov
sub
stos
push
pushf
cmp
adc
cs
pop
add
es
fidivs
dec
xchg
orb
cmp
inc
adc
lahf
cmp
mov
mull
adc
xor
fmull
xchg
xchg
les
iret
mov
xchg
fwait
sahf
adcb
jns
movsb
inc
int
xor
sub
xchg
xchg
int
leave
fists
repnz
adc
in
leave
xchg
scas
lret
arpl
adc
mov
dec
int
sbb
pop
mov
cli
je
or
mov
push
adc
jl
pop
cmp
insb
adc
xchg
push
sbb
jo
mov
push
or
filds
cmp
ficompl
jl
xchg
jns
mov
stos
shr
lods
cmpsl
addr16
loop
int3
das
or
fcmovne
mov
sub
fisttpll
popf
sub
mov
cmp
ret
xchg
lds
data16
mov
sub
mov
lods
and
or
pop
es
and
fucomi
popa
in
stos
insb
repz
dec
lret
clc
fisubrs
stc
push
das
pop
mov
push
stos
imul
nop
jbe
add
cmp
cli
mov
rcrl
sbb
in
adc
jle
cmp
or
jb
test
xor
mov
pop
jae
jmp
loop
push
xor
loop
mov
sbb
ja
fstps
movsl
stc
mov
push
xor
sbb
fldenv
cwtl
imulb
xor
dec
aas
and
inc
je
mov
rcrb
das
sbb
loop
lahf
outsb
sbb
enter
jb
mov
xor
push
cltd
sub
das
pop
adc
xchg
sbb
jle
out
push
mov
dec
jl
xchg
inc
mov
pop
mov
add
pop
ss
cli
xchg
push
or
aas
jns
ss
push
push
aad
jl
and
cmc
inc
aaa
mov
xchg
sti
lods
mov
rcrb
xor
neg
xor
pop
push
out
sahf
xchg
and
pop
xor
push
push
cmp
pop
adc
push
pop
rcrb
push
sub
mov
mov
adc
push
inc
adc
push
push
mov
and
adc
es
loopne
or
mov
lahf
dec
mov
jo
ljmp
add
fwait
xchg
pop
pop
rorl
addl
sbb
notl
jno
jne
dec
mov
xor
test
sahf
jne
push
mov
repnz
cmp
adc
lea
sbb
inc
dec
jns
aad
pop
aad
adc
sbb
mov
sti
sub
cmp
imul
or
sbb
add
gs
xor
dec
pushf
mov
insl
nop
and
mov
inc
mov
movsb
insb
mov
ret
and
and
pop
xor
out
cwtl
add
or
inc
mov
mov
mov
mov
mov
fcomps
cmp
sub
sbb
dec
test
inc
or
repnz
int3
js
insb
outsb
sbb
dec
and
adc
dec
iret
sub
sub
mov
rolb
push
mov
addb
mull
jbe
aad
sbb
adc
fsts
xor
xor
addr16
ss
repz
lahf
or
mov
mov
mov
repnz
test
fdivrl
xor
lret
mov
aas
sbb
dec
insl
lret
dec
pop
mov
sbb
and
and
enter
dec
aam
and
sub
js
cmp
stos
popf
hlt
and
hlt
jl
mov
aam
std
xor
test
aas
iret
xor
jnp
add
or
inc
adc
adc
mov
rclb
insl
xchg
fldenv
dec
or
adc
pop
ret
add
adc
jne
sbb
pop
sbb
pop
sarl
inc
icebp
lahf
jo
fimuls
sub
mov
rclb
cmp
pop
fstpl
mov
mov
xor
push
mov
imul
mov
and
frstpm(287
and
lahf
add
faddl
mov
add
add
ret
jmp
es
ds
loop
lods
stc
ds
loopne
loope
push
and
lods
pop
lds
sbb
or
xor
mov
test
fs
ret
cmp
sbb
jne
jge
pop
rorl
push
rclb
outsl
out
push
pop
jle
cmpsl
mov
mov
mov
mov
daa
repnz
mov
aam
inc
orb
enter
repz
sbb
hlt
sub
movsb
mov
xor
in
es
stc
push
insb
jno
sarb
repnz
pusha
add
jle
imul
push
xlat
std
pop
aam
lock
jno
push
data16
fcmovnu
mov
inc
sahf
mov
mov
and
push
inc
xor
addr16
loopne
push
mov
push
daa
popa
mov
in
cmp
sub
xchg
xor
xor
mov
das
movl
push
push
or
jge
jo
push
dec
out
add
fimuls
imulb
push
mov
pop
outsl
xchg
in
sbb
or
cs
leave
sbb
ss
xchg
cwtl
inc
cmp
cltd
mov
rorb
adc
push
jno
jbe
scas
sbb
gs
aas
mov
adc
pushf
shr
daa
imul
jmp
or
jl
pop
divb
clc
inc
jns
xor
xchg
cmp
and
xchg
roll
pop
xor
xor
mov
movsw
loop
or
popa
cmc
in
int
dec
pop
repz
mov
push
dec
popf
push
sbb
adc
add
stos
mov
fsin
mov
pop
sub
inc
inc
mov
cmp
ret
mov
stos
aaa
stc
jbe
insl
sarl
js
pop
and
cs
repnz
gs
sbb
and
pop
mov
std
inc
insl
dec
lods
aaa
aaa
mov
cmp
inc
cmp
mov
fnstsw
mov
cmp
xchg
mov
or
push
je
pusha
mov
jl
cmp
mov
sub
pop
cmp
nop
and
in
data16
pop
cmp
pop
xchg
scas
popa
ret
jp
jge
cmpsb
inc
jle
xlat
cmpsl
adc
xchg
pop
push
fmul
push
inc
ret
push
push
xor
lock
sbb
fstl
lret
or
repnz
test
mov
add
mov
andl
bound
xchg
inc
sub
sbb
mov
mov
adc
lds
mov
sub
sub
cmp
lret
jns
push
add
xchg
fwait
bound
inc
mov
push
int
fmulp
pop
push
mov
testb
sbb
lds
push
cmp
and
cmp
dec
rcll
sbb
inc
xchg
xchg
inc
mov
sti
and
xlat
xchg
push
ret
dec
int3
and
pusha
and
or
int3
pop
mov
in
popf
int3
int
mov
mov
scas
js
rorl
sbb
mov
xor
jle
sub
xor
cli
in
mov
pop
pop
jbe
insl
arpl
mov
faddl
push
popa
mov
lea
push
pop
or
ljmp
push
sbb
out
cmp
xchg
ds
fcmovne
cmp
popa
push
sahf
lret
aad
adc
sbb
addr16
mov
lret
loope
xlat
push
int
fsubs
jae
adc
cmp
insl
aad
pop
pop
mov
adc
jo
pop
dec
rcl
xchg
lahf
and
cmp
pop
inc
mov
sbb
or
mov
imul
repz
ljmp
add
cmp
in
and
push
shl
mov
movsb
pop
insb
popa
mull
stc
mov
sarb
mul
leave
imul
iret
jne
fistps
adc
loopne
push
jb
cs
xchg
xor
mov
ljmp
xorb
insb
or
mov
inc
xor
iret
enter
and
mov
fistpll
mov
imul
pop
je
outsb
js
inc
fstl
loop
xlat
sbb
xor
jno
lods
roll
lahf
cmp
sub
dec
stc
cmp
cmp
xor
imul
and
outsl
insl
xchg
fidivs
mov
or
dec
incl
add
orb
push
loope
jbe
and
cmpsl
pop
push
inc
pop
mov
jnp
sub
jns
pushf
dec
sti
je
sbb
adc
cmpb
dec
fidivl
insl
mov
mov
ret
jle
popa
pop
ss
pop
dec
inc
push
sbb
add
mov
push
push
lods
push
mov
outsb
cld
sbb
outsl
push
jbe
aaa
lock
in
push
pop
ljmp
aaa
imul
jmp
or
jle
loopne
andl
sbb
jge
mov
out
jae
mov
jo
mov
mov
push
xchg
push
out
push
das
shll
rcr
inc
mov
mov
inc
popa
lock
cmp
in
pop
shl
aas
aam
lcall
sbb
in
lods
mov
ljmp
push
dec
bound
lret
push
pop
fcmovu
stos
add
rep
add
adc
sti
inc
ffreep
ds
mov
mov
inc
xor
cmp
jnp
fildl
jno
loopne
jne
add
xor
imul
pop
mov
fcmovu
lret
xor
stos
popf
int3
sbb
xchg
jg
rcrb
cmp
ja
mov
dec
scas
mov
push
or
mov
rcll
ss
into
sub
mov
add
imul
mov
out
push
std
stos
mov
popa
mov
pop
or
sub
loop
outsl
outsb
in
push
inc
fcomp
mov
mov
test
ss
das
in
xchg
add
repz
pop
ds
jnp
mov
lcall
adc
pop
or
add
inc
pop
lock
pop
popa
mov
mov
lock
punpcklwd
in
jbe
mov
dec
mov
int
jb
cmp
add
or
dec
xor
or
push
dec
les
scas
btl
cmpsl
mov
mov
mov
rol
inc
aas
mov
mov
xlat
mov
xchg
push
push
ss
inc
jbe
sbb
lock
ret
or
mov
fnstsw
jmp
pop
pop
inc
cmpsb
jno
fcmovnbe
adc
gs
jp
aad
les
push
lret
add
push
add
cmp
xchg
jge
xchg
shlb
mov
ljmp
mov
lds
or
inc
pop
lret
pusha
mov
adc
lret
jns
adc
mov
das
add
push
dec
inc
shr
inc
or
jo
xchg
sbb
mov
insb
test
pop
cli
repnz
shrl
or
movl
cmp
cmpsl
push
sub
lahf
or
mov
mov
rcl
dec
ss
aaa
in
sti
push
mov
mov
mov
adc
push
sbb
gs
cld
cltd
ds
fstps
add
xor
mov
mov
inc
xchg
adc
outsb
jns
mov
mov
cmp
movsl
test
int
add
xorb
arpl
shr
sbb
cmc
pop
sbb
adc
enter
mov
jp
je
fstpl
sub
ret
mov
pop
cs
pusha
cwtl
dec
sbb
push
test
inc
add
sbb
pop
fcoml
xchg
push
push
popf
jns
sub
push
mov
xchg
add
adc
jmp
mov
and
imul
and
cmpsl
ret
fwait
popf
pop
lods
jle
psubusb
aad
cmp
sbb
rclb
outsl
ret
mov
cli
and
mov
fisubs
gs
out
cmp
adc
pusha
cmove
das
movsl
mov
icebp
mov
push
loopne
jge,pn
fisubrl
fsubl
lcall
pop
mov
std
std
push
lret
xchg
shll
ss
cmp
fstpt
hlt
mov
sub
shr
mov
cwtl
adc
gs
stos
xor
inc
decb
mov
pop
sbb
cs
jge
bound
js
gs
mov
rcr
sub
fs
shrl
loope
pop
jns
addr16
std
ret
aad
inc
aam
lret
out
jbe
jns
dec
sbb
pop
int
lret
fisttpl
add
mov
test
mov
push
mov
mov
mov
push
mov
aas
inc
shrb
test
fcmovnu
dec
mov
daa
inc
dec
jb
xchg
sbb
cmpl
mov
and
fs
xor
faddl
pop
pop
mov
adc
iret
nop
ss
lods
clc
fiaddl
shrb
lahf
ret
loopne
aam
cmp
mov
test
mov
ss
mov
lock
mov
enter
mov
sub
and
cmpl
mov
or
lret
mov
pusha
push
xchg
subb
dec
scas
inc
out
and
pop
and
pop
and
jp
clc
cmpsl
stos
nop
mov
fwait
bnd
adc
cmpsl
cmp
inc
xchg
out
leave
add
xchg
or
fiadds
sub
add
pop
lret
lcall
int
cmp
cmp
pop
dec
xor
jo
test
dec
cmp
sub
shl
and
jno
orl
test
xor
sar
mov
stos
mov
cwtl
cmpsl
sbb
das
mov
insb
mov
pusha
xchg
jle
fs
push
sbb
imul
bnd
adc
add
add
sub
xchg
inc
mov
xchg
pop
ficompl
xchg
pusha
mov
sub
jb
int
adc
jae
pop
lret
pop
mov
test
in
dec
loope
push
dec
scas
jmp
hlt
fcmovbe
lret
xor
nop
add
or
or
dec
or
sbb
aas
mov
pop
pop
sub
rcl
cmp
test
and
or
mov
mov
gs
push
lcall
dec
insl
icebp
push
mov
mov
push
cltd
jmp
jle
push
mov
fstl
lock
daa
loopne
mov
test
mov
mov
adc
cmp
and
mov
rcrl
aas
mov
repnz
les
mov
lahf
mov
loope
mov
iret
sub
xchg
stos
stos
xchg
es
mov
fs
jmp
lcall
rcrb
jmp
lahf
or
jno
insb
arpl
pop
cs
push
jl
mov
hlt
adc
jl
and
fbld
sub
sti
inc
mov
out
out
sbb
repnz
dec
xchg
mov
inc
shlb
mov
pusha
fildl
cmp
sub
mov
xor
pop
push
in
je
stos
aaa
sbb
mov
je
xchg
outsl
add
ja
sub
icebp
or
and
jae
adc
pop
gs
xchg
cld
push
cmc
enter
out
sub
pop
vpsubd
fnstcw
pop
xchg
mov
pushf
je
cmp
fcmovbe
jne
or
call
pop
push
loopne
fwait
mov
jl
flds
mov
rolb
dec
out
xor
lods
sbb
mov
jmp
ret
add
in
sub
xor
mov
push
cs
mov
dec
inc
mov
sub
jp
sub
mov
push
mov
or
jp
pop
sarl
dec
jmp
std
je
mov
add
test
out
ret
sbb
push
jge
outsb
xchg
push
xchg
lock
fmull
imul
out
sbb
data16
movsb
or
xchg
jbe
cwtl
dec
mov
mov
pop
loope
xor
sbb
jnp
sub
mov
pusha
sbb
pop
jl
cmp
movsl
mov
stos
cmpsb
inc
icebp
inc
fndisi(8087
xchg
push
mov
dec
cmp
pushf
cmpsl
adc
rcrb
mov
mov
mov
andb
or
repnz
stos
mov
jmp
sub
push
xlat
jo
std
ljmp
cmp
cmpsl
cld
mov
inc
jmp
xchg
jecxz
mov
std
mov
mov
xor
sbb
pop
push
mov
jbe
inc
pop
out
cmc
std
xchg
xchg
fldt
xchg
sub
sbb
xchg
lret
jmp
push
lods
mov
xor
mov
dec
fsub
push
or
lahf
mov
nop
push
inc
dec
popf
fdivrl
and
pusha
movsb
inc
push
mov
loop
in
insb
sbb
xchg
punpckldq
ret
popf
adc
or
stos
add
cmp
sub
xchg
ret
insb
inc
cmpsb
repz
fidivrs
fidivs
pushf
add
in
test
insl
push
loope
test
mov
xor
and
loope
jne
xchg
mov
jne
sub
xchg
jp
stc
jns
pop
jns
cmp
cmovne
daa
jno
xchg
and
or
gs
pusha
daa
jg
decl
mov
mov
call
lret
cwtl
mov
imul
mov
daa
add
mov
jmp
out
xchg
aaa
test
nop
daa
fstp
fbstp
loopne
dec
mov
movsl
push
rorl
add
push
arpl
push
xor
add
sbb
jae
pop
xor
inc
repnz
dec
in
add
fwait
rcr
outsl
lret
sbb
in
jl
xchg
add
or
lret
stos
sub
pop
lcall
sub
sub
sub
fwait
test
lock
stos
pushf
fs
sub
ss
movsb
ficomps
jle
out
add
push
inc
jne
mov
add
lahf
mov
inc
pop
mov
pop
cltd
adc
or
jle,pt
cmpsl
add
sub
jbe
fwait
les
xchg
insb
lret
jg
push
cli
xchg
test
aaa
dec
fisubs
xchg
dec
sub
mov
pop
jnp
popf
popa
jo
mov
xor
pushf
sarb
dec
jb
repnz
xor
mov
mov
out
inc
ficoml
sbbl
lods
mov
arpl
xchg
in
jns
ficomps
push
mov
cmp
popf
push
sub
jnp
mov
cli
scas
jne
test
push
add
push
test
dec
jno
dec
add
xor
popa
roll
rcrb
adcb
lcall
inc
icebp
ror
mov
sbb
insl
sub
es
cmp
push
cmp
adc
sub
mov
ja
add
pop
test
add
loop
notb
ret
dec
jmp
lret
cwtl
es
mov
mov
jmp
ss
lret
mov
ficoms
mov
xor
xchg
xchg
pop
movsl
jmp
out
cs
jg
pop
push
mov
mov
xor
lds
pop
xchg
lret
js
arpl
adc
sti
jecxz
xchg
adc
lods
shlb
pop
adc
xor
mov
sbb
mov
inc
push
pop
fstpl
data16
mov
cmp
cmp
inc
mov
push
jns
rcr
cs
pop
mov
mov
pop
or
adc
adc
pop
push
pop
daa
test
dec
cmp
das
sbb
ficompl
stos
pop
dec
in
mov
test
fdivrs
xlat
rcrb
fistpl
lret
adc
and
lock
mov
out
sbb
push
ja
lock
pop
int
mov
xor
jae
imul
xchg
arpl
stos
push
sbb
movsl
into
push
adc
inc
xchg
sbb
push
mov
fbstp
fcmovu
push
inc
jno
pop
test
adc
out
lret
mov
in
dec
movsb
mov
into
jno
lret
scas
mov
sbb
jle
push
ds
lcall
daa
out
or
sub
or
mov
cmp
clc
ss
test
sbb
sbb
xlat
mov
fidivl
out
jb
push
mov
xlat
scas
repz
jle
jne
dec
adcl
dec
jg
ljmp
jp
test
das
pop
sbb
pop
mov
cmp
scas
mov
popa
sti
pop
stos
arpl
adc
and
imul
dec
cmp
out
bound
adc
negl
in
cmpsl
hlt
adc
fnsetpm(287
pop
cmpsb
jg
mov
sti
mov
xlat
or
in
lods
repnz
lcall
xlat
cmc
sbbb
shlb
pop
fisubl
mov
push
out
xchg
inc
mov
popf
push
lret
or
cli
mov
inc
pop
rorl
xor
mov
and
in
sub
sub
jmp
or
rorb
repnz
out
movsl
aam
sbb
jo
sbb
std
dec
sti
mov
insl
push
out
push
gs
pop
mov
adc
lcall
add
pop
push
out
jns
xchg
imul
fnstsw
nop
jle
mov
or
xor
jns
inc
cld
or
hlt
sbb
or
mov
cli
push
movsl
fwait
dec
sbb
out
mov
fistps
decl
mov
sbb
push
lahf
dec
out
inc
call
cmp
push
js
aaa
loope
je
inc
int
sbb
xchg
loope
dec
fwait
cmp
and
mov
loopne
popa
mov
call
filds
mov
adc
bound
iret
mov
fistpl
cmp
es
fnstsw
and
sbb
sbb
jge
lods
push
fwait
mov
sbb
roll
std
dec
inc
pop
adc
ret
mov
popa
ret
dec
iret
adc
lods
jo
leave
xchg
inc
sub
clc
mov
xchg
mov
cwtl
aad
or
repnz
mov
loop
inc
xor
jnp
xor
pop
cmp
sbb
cld
adc
mov
ss
mov
test
subl
aam
pusha
adc
dec
mov
cs
lods
nop
aad
sbb
popf
stos
out
sbb
mov
lock
mov
mov
mov
lret
and
jns
adc
or
and
adc
mov
cmpsl
xchg
incl
sub
loop
pop
es
leave
push
pusha
cmpsl
test
ljmp
lahf
rcll
cmp
push
mov
or
int3
mov
data16
xchg
cmp
ret
push
repz
xchg
pusha
pop
cmp
cli
dec
es
jo
bound
sbb
loop
cmp
pop
sbbb
sub
xchg
iret
xor
insl
sbb
shrb
push
movsb
repz
fstps
xchg
call
or
mov
jge
ret
xor
xchg
jl
addr16
lret
mov
subb
lcall
jns
add
test
xchg
popa
stos
mov
xor
lods
pop
add
sbb
mov
mov
pop
mov
in
and
imul
insb
sub
xchg
adc
pop
out
stos
add
xor
pop
inc
outsl
push
loope
loop
popf
fstpt
sbb
push
ljmp
es
add
enter
sbb
pusha
testb
push
dec
mov
mov
je
outsb
pop
xor
mov
das
jmp
nop
sbb
or
xchg
push
flds
in
and
cmp
adc
sub
fldenv
fiadds
mov
lahf
loop
repnz
mov
mov
lret
popf
cli
insl
aad
test
iret
sub
pop
repnz
or
jp
divl
repnz
cmp
mov
xchg
decb
fidivl
and
aas
out
adc
lods
ljmp
ss
sub
pop
mov
push
push
loopne
pop
xchg
aaa
scas
fdivrl
xor
push
sbb
jg
sbb
push
and
aam
and
mov
push
or
cli
dec
pop
int3
sbb
pop
add
loope
jle
outsl
push
pop
in
adc
inc
push
mov
iret
inc
movsl
adc
xchg
jo
jb
sbb
cltd
pop
imul
or
pop
and
cmc
fcos
call
insl
pushw
push
mov
jle
and
add
mov
pop
pop
xchg
fldt
adc
xchg
lock
out
addr16
jne
mov
cltd
mov
or
popa
stos
clc
sbbb
mulb
pop
mov
xchg
mov
pmulhw
stc
mov
pop
cld
lea
jle
xchg
fnstsw
icebp
jg
out
ss
jnp
and
sti
testb
addb
mov
pusha
bound
int
das
or
pop
push
mov
cltd
mov
jle
mov
es
xlat
nop
mov
add
insb
jno
adc
js
inc
cs
arpl
dec
scas
mov
imul
lahf
in
add
xor
inc
les
pop
loop
test
inc
fwait
movaps
mov
or
lahf
sbb
jg
in
mov
push
pop
inc
mov
ss
fs
mov
aam
mov
jno
jo
outsb
orb
test
sbb
xor
lods
jb
mov
nop
xor
add
hlt
push
mov
int3
jno
pushf
or
daa
scas
bndstx
inc
lahf
or
or
das
test
jmp
sub
sbb
mov
fs
inc
xor
dec
fstp
hlt
or
add
xchg
sti
movsl
mov
mov
addr16
push
addr16
outsb
xchg
lret
cli
mov
clc
pop
sar
jnp
sub
sbbb
inc
push
outsl
pop
ss
xchg
cltd
aaa
in
cmp
ljmp
mov
enter
insb
pop
pop
daa
push
mov
sbb
push
pop
fidivrs
mov
mov
fnstcw
xor
sbb
pop
pop
inc
xor
adc
xchg
sbb
js
xlat
jmp
cmp
popf
or
in
outsl
insl
ljmp
pop
mov
or
divb
xor
in
push
fldcw
cmpsl
incl
clc
std
repnz
ret
out
dec
adc
jge
stos
dec
mov
fimuls
inc
test
pop
test
jecxz
in
jo
push
lods
scas
xchg
adc
lock
mov
mov
lahf
adc
pop
enter
bound
adc
arpl
outsl
mov
jg
ja
sar
lahf
push
sbb
popf
fstps
iret
outsb
mov
push
xor
arpl
test
mov
push
inc
adc
pop
xorl
std
loope
cs
std
dec
clc
insl
imul
jecxz
addr16
out
scas
iret
mov
jo
pop
aaa
lcall
outsl
and
imul
jnp
shrb
sub
or
ret
mov
shl
xchg
sub
adc
lret
icebp
sbb
test
push
lret
add
mov
fsubrs
mov
into
mov
aaa
loopne
add
mov
push
fisubrs
stos
orb
repz
scas
push
mov
mov
addr16
or
pop
iret
sub
push
nop
data16
sbb
icebp
insl
jg
je
ss
sbb
jns
sub
mov
lahf
push
insl
pop
xchg
add
cs
and
dec
push
push
mov
push
lock
das
cmpsb
mov
and
fstps
push
push
sub
and
push
es
xor
decb
xchg
dec
sub
enter
cmpb
in
dec
pop
xor
mov
mov
sbb
mov
xor
push
add
xor
xchg
sub
push
aaa
mov
jle
test
jmp
cmp
cmp
fwait
pop
pusha
repnz
pop
jge
sub
stc
push
out
mov
pop
or
xchg
mov
adc
shrb
pop
std
inc
js
adc
adc
jl
stc
jno
fisttps
add
sub
sbb
cmpsl
pop
nop
jns
or
mov
push
lea
mov
movsb
mov
out
test
outsl
mov
or
fwait
push
xchg
sub
cmp
xor
mov
sbb
xor
mov
lret
pop
dec
jge
xchg
jle
cmp
xchg
test
add
xor
sti
je
data16
inc
inc
mov
clc
mov
mov
lahf
out
dec
shll
mov
or
mov
xor
repz
cwtl
rcll
and
push
pop
sbb
idiv
mov
push
dec
inc
inc
jecxz
ljmp
push
sbb
movsl
fcomps
mov
pop
adc
add
jno
pop
sub
pushf
das
testl
mov
loop
mov
aad
pop
xchg
add
iret
pop
mov
jo
loop
shr
pop
stos
dec
in
xchg
imul
adc
xchg
icebp
cmpsb
loope
sbb
sbbb
nop
gs
jb
mov
pop
cmpsl
pop
es
jecxz
sahf
mov
iret
sti
mov
insl
sbb
fcompl
fstpt
jge
or
jns,pn
adc
arpl
lock
pop
in
lea
xor
pop
cmc
push
fimuls
xor
push
movsl
test
sbb
xor
shll
insl
mov
sbb
sbb
dec
dec
fsubl
xlat
cmp
mov
sbb
sbb
imul
pusha
cmp
leave
loop
je
hlt
bound
add
inc
push
and
pop
nop
add
push
dec
pop
mov
pop
das
bound
cmp
aas
push
repnz
mov
adc
cs
or
pop
pop
mov
xor
lea
jecxz
pop
mov
mov
jns
adc
add
gs
xchg
sbb
pusha
mov
fwait
ret
push
push
xor
lods
inc
clc
mov
lret
xchg
pusha
lahf
lds
or
mov
fdivrl
mov
jns
data16
mov
arpl
dec
iret
and
xchg
pop
pop
mov
aas
dec
sub
push
push
imul
arpl
inc
data16
js
mov
ficoml
clc
in
add
mov
push
das
xchg
ficoml
mov
dec
mov
jg
fsts
movsb
mov
pusha
xor
jnp
dec
jb
fisubs
mov
aad
mov
xor
inc
mov
push
push
mov
cld
cmp
and
jmp
cmp
pop
fists
sub
add
or
sub
xor
call
push
sbb
mov
sbb
and
outsb
jb
pop
ret
imul
xor
cli
mov
or
ja
push
fcomp
pop
js
xchg
es
mov
stos
test
in
pop
and
das
jns
dec
out
jle
out
push
imul
sti
cmpsl
adc
jmp
adc
mov
mov
sbb
push
push
lret
rorl
push
pop
add
cli
addr16
out
jle
mov
pop
fimull
mov
adc
inc
cmp
xchg
orb
or
and
inc
jns
sbb
cs
jmp
pop
pusha
and
mov
pop
inc
dec
cmp
test
aas
jl
imulb
xchg
and
xchg
push
sub
cmc
pop
jbe
push
dec
bound
cli
mov
jge
or
add
cmp
cmpsb
insl
xlat
jle
shll
and
arpl
push
scas
mov
jmp
std
mov
sbb
mov
das
jg
pop
insl
addr16
out
mov
or
popf
aas
xchg
xor
mov
and
mov
popa
mov
shll
iret
adc
sbb
mov
aad
es
das
push
out
pop
outsb
mov
adc
sahf
mov
inc
enter
jnp
push
cs
xchg
mov
fidivs
push
jo
xchg
xor
scas
ds
push
test
push
mov
pop
mov
hlt
pusha
fdivrp
mov
mov
adc
outsl
pop
lods
lcall
dec
stc
clc
aas
ljmp
es
out
pslld
push
pop
call
cmp
jno
outsb
or
push
and
jle
xchg
das
faddp
jbe
ficoml
or
mov
or
adc
pusha
dec
mov
mov
pusha
add
add
insb
lahf
jo
jns
xorl
fwait
int
cmp
pop
cmpsl
idiv
mov
dec
call
fwait
add
das
nop
and
mov
jae
ja
push
popa
jg
pop
lret
mov
repnz
mov
mov
push
push
mov
sbb
sti
or
decb
cs
stos
ret
nop
and
xor
push
cmp
imul
dec
cmpsl
mov
js
and
nop
add
cmp
lods
movl
pop
adc
or
fcomi
pop
dec
mov
shlb
and
ja
or
mov
mov
mov
lea
test
mov
lret
adc
cmpsl
push
inc
mov
ficomps
mov
jnp
test
std
mov
bound
pop
insl
dec
xor
inc
ss
std
mov
add
jp
shll
dec
ss
popf
je
das
mov
ja
cs
or
pop
icebp
mov
jne
loopne
push
mov
sahf
arpl
out
xlat
dec
notl
push
out
adc
push
inc
cld
push
or
xlat
js
dec
sarb
push
cmp
jno
jne
or
pop
dec
or
or
pop
dec
loope
mov
movsb
ljmp
fcoml
testl
popa
inc
imul
sbb
not
adc
out
xor
fmuls
je
pop
mov
or
scas
je
push
rcll
in
sbb
jecxz
outsl
mov
and
cld
fwait
out
dec
adc
or
mov
das
fwait
shlb
sub
xchg
dec
inc
fidivs
jp
and
jo
sbb
scas
sbb
and
jns
daa
in
and
jp
jno
fwait
scas
inc
fidivrs
xchg
fdivrp
adc
sub
pop
ss
outsb
mov
mov
cmpsb
loop
pop
inc
or
mov
push
add
pop
lret
xchg
mov
sahf
cs
rclb
dec
adc
mov
dec
ss
cmp
mov
popl
inc
adc
lods
clc
xchg
mov
dec
out
aaa
ds
or
or
mov
stc
mov
popa
je
jno
loope
shlb
xchg
jecxz
adc
test
fisttpll
mov
sbb
jo
scas
sub
lret
push
pop
sahf
mov
jbe
pop
lock
mov
push
jl
aaa
mov
or
push
xor
cmc
cmp
fadd
xchg
push
cmp
fldcw
ficompl
ficoms
lea
adc
js
mov
jl
cli
loopne
les
decb
pop
push
ss
das
adc
mov
adc
test
cli
inc
sub
fisubl
push
mov
mov
mov
jo
out
adc
mov
in
sbb
mov
scas
lret
icebp
jno
js
dec
fstps
mov
pop
xor
shlb
adc
mov
push
into
adc
xchg
xchg
push
lods
out
leave
push
dec
jno
pop
push
cmpsl
and
shlb
ficomps
mov
lahf
mov
xlat
ss
incl
test
push
icebp
inc
scas
xlat
pusha
outsb
mov
push
cmp
cmp
mov
cld
adc
mov
adc
push
lcall
test
mov
push
pop
iret
in
std
popa
fildl
ret
sbb
adc
cmp
add
sarl
div
push
adc
sub
testl
out
cld
repnz
fnstcw
dec
ret
mov
push
pop
push
xor
les
or
pop
inc
mov
cs
out
lcall
or
lcall
mov
stos
or
fndisi(8087
jo
in
sbb
mov
mov
or
pusha
jmp
pop
ja
adc
lret
out
and
dec
cmp
mov
outsl
es
jne
xor
lds
dec
mov
fisubs
inc
or
xchg
hlt
sarb
add
fcoml
xor
fwait
inc
xchg
addr16
out
insl
sbb
push
cmpsl
jo
pop
adc
out
mov
mov
dec
mov
das
ds
inc
or
das
and
xor
push
mov
mov
or
sub
std
hlt
icebp
dec
mov
pop
orl
jno
push
jo
movsl
push
frstpm(287
or
jbe
fs
nop
sub
jmp
adc
jg
xchg
int
sub
xor
fwait
insb
nop
outsl
das
pusha
sub
sub
adc
js
imul
xchg
subb
fs
adc
jns
adc
cmp
repnz
mov
add
jnp
shl
fs
adc
xor
pop
cmpsl
jae
xchg
xor
int
mov
scas
mov
dec
pop
ss
push
mov
ret
add
dec
lods
lods
fcmovne
rolb
je
daa
mov
lahf
ja
test
out
fbld
push
mov
sbb
mov
outsb
add
cmp
fidivrs
adc
in
js
scas
stos
dec
pop
mov
mov
lods
lds
fs
mov
lret
out
dec
cld
cmpsl
insl
jb
cmp
pop
push
ljmp
testb
test
repz
xchg
xchg
ret
into
sbb
rcrb
lds
pushf
lret
cli
popf
js
sbb
push
push
jl
out
repz
sub
dec
out
or
jmp
and
adc
dec
cld
lahf
mov
das
pushf
repnz
or
sahf
xor
pop
sbb
add
in
scas
int
pop
mov
aas
cld
ss
or
or
jl
clc
ficompl
push
jns
jp
push
arpl
add
cmp
cmp
mov
mov
sub
mov
lock
js
lock
out
stos
mov
sbb
jne
dec
mov
mov
adc
adc
mov
xchg
arpl
xchg
and
out
sub
xlat
js
in
pop
aam
inc
rolb
lds
std
mov
lods
cmp
cmp
xchg
decb
pop
mov
sbb
inc
cmp
mov
pushf
sub
sbb
mov
sbb
lret
jne
dec
mov
push
pop
sbb
cli
test
fwait
jae
mov
jl
rorl
jns
and
shl
rorl
dec
dec
inc
cld
popf
mov
rcr
jmp
cmpl
les
dec
fdivs
into
pop
cli
pop
pop
push
sbb
sbb
ret
push
mov
loopne
lret
scas
pop
mov
push
out
sbb
dec
popa
ret
ljmp
loope
add
inc
fsubs
fistpll
push
or
jg
pop
mov
push
adc
mov
andl
mov
cmpsl
cmp
sbb
xchg
pop
cmpsl
lret
xchg
dec
pop
mov
mov
mov
outsb
hlt
mov
dec
or
loopne
pop
call
in
cmp
and
add
shlb
mov
xor
cmp
sub
je
sbb
je
push
dec
inc
fimuls
add
lret
aas
xor
push
ret
mov
dec
dec
xorb
mov
mov
imul
mov
mov
outsb
jmp
mov
dec
push
call
jge
push
push
jmp
mov
mov
inc
sbb
arpl
cmp
mov
pop
sub
imul
enter
ljmp
popf
aad
mov
cli
pandn
inc
cmp
pop
stc
hlt
lcall
andl
in
aaa
in
repnz
push
xchg
xchg
xor
test
or
cli
js
fstp
pop
mov
push
cmp
sub
cmp
xor
shll
or
sub
bound
jmp
adc
insb
push
or
xchg
js
push
movsl
jp
or
mov
cmpsl
jmp
mov
mov
or
or
hlt
enter
sub
push
inc
leave
pop
add
test
xorb
xor
sub
mov
shlb
repnz
arpl
jns
mov
mov
cmc
icebp
in
lahf
or
js
sti
push
and
mov
cmpsl
pop
adc
cmp
pop
pop
mov
mov
loop
cmp
sbb
lock
lahf
cmp
push
cmp
mov
sub
or
insl
push
adc
movsl
mov
sub
int
mov
and
popa
xchg
popa
mov
or
lock
push
inc
xlat
ss
frstor
push
xor
mov
xlat
lcall
pop
pop
into
mov
cltd
arpl
sub
xor
inc
in
xor
ds
lcall
mov
adc
sbb
lret
dec
insl
xchg
and
fistpll
lds
testb
sarl
xchg
movb
mov
pushf
cmp
add
shl
daa
cwtl
and
jnp
push
fucomi
pop
jne
jb
xor
adc
pusha
stc
icebp
xchg
adc
mov
out
jecxz
mov
out
outsl
movsb
sub
xlat
push
sbb
test
rcrl
and
adc
popa
cmp
imul
cmp
mov
jbe
mov
aas
mov
and
shrl
fildl
mov
movsb
loop
shlb
cmp
loop
shll
xor
add
mov
push
or
imul
mov
inc
ds
xchg
movb
xchg
cmpl
pop
ss
ret
sub
jae
or
inc
test
mov
pop
lods
cmpsb
insb
mov
cltd
out
sbb
xor
push
push
xchg
mov
movsl
pop
fnstcw
gs
xchg
mov
xor
add
mov
ss
fistps
mov
aaa
lods
or
adc
pop
jo
cmp
cmp
mov
es
cmpsl
btr
cmp
fucomi
icebp
test
cmp
adc
out
les
cmpsl
fwait
out
pushf
and
lods
push
fsubs
push
in
repnz
xchg
psubusb
insl
sub
mov
push
adc
adc
push
cmp
lahf
loop
mov
std
testl
push
fcomps
loope
aas
mov
mov
aas
xor
add
sbb
xchg
sbb
push
stos
orl
mov
mov
sub
nop
in
loope
cs
sub
lahf
xchg
mov
cmp
xrelease
ficomps
pop
push
ss
sti
mov
mov
imul
adc
test
cmp
adc
jb
repz
test
mov
into
stos
fsubs
push
jmp
aad
pop
xchg
xchg
and
and
adc
cmp
mov
inc
adc
xlat
jo
mov
negb
pop
sbb
out
cwtl
sub
inc
cmp
enter
or
gs
mov
or
pop
add
inc
jb
scas
mov
jns
and
xchg
mov
or
shl
mov
mov
adc
adc
movsl
cmp
nop
pop
sub
jnp
loop
bnd
ret
loopne
mov
sub
dec
push
inc
test
cs
enter
sub
sub
lret
jno
cmp
pusha
je
leave
pop
incl
inc
lcall
dec
adc
push
cwtl
xchg
sub
or
sbb
jle
adcl
aad
pushf
push
mov
scas
xchg
scas
pop
sub
and
jl
inc
sub
mov
xor
ja
repnz
repnz
je
xchg
push
cmp
sub
sbb
mov
fwait
push
mov
rclb
outsb
clc
ficomps
pop
fldenv
inc
sub
fwait
push
in
add
ficoms
pop
scas
dec
int3
pop
rcr
imul
push
mov
push
fisubrs
or
out
les
aad
loop
lret
outsb
aaa
sahf
pop
mov
std
adc
cmp
jo
xor
test
push
mov
call
add
sbb
mov
sub
les
les
pop
nop
fstps
ficoms
mov
add
adc
lahf
test
outsl
push
mov
mov
sbb
out
or
pop
dec
ds
lcall
adcl
roll
pop
imul
cmpsl
inc
mov
sub
fidivrl
lcall
mov
in
sub
loopne
or
and
gs
mov
test
xor
lret
jmp
test
mov
or
mov
fstl
mov
mov
movsb
gs
pop
add
pop
incl
jne
cmpsl
or
sbb
inc
xchg
inc
jmp
ficoms
mov
push
loop
pop
ror
fimuls
cmp
fmull
out
leave
mull
push
dec
inc
stc
mov
jo
test
popa
ss
mov
adc
pop
ljmp
outsl
loop
dec
push
adc
cmc
shlb
adc
cltd
pop
cld
sti
xor
repz
add
jg
pop
sbb
mov
mov
es
popf
and
mov
sub
mov
sti
in
pop
loope
or
adc
stos
scas
jg
lcall
daa
scas
fadd
pop
in
mov
mov
popa
int3
mov
sahf
fildl
loopne
scas
aam
hlt
mov
mov
xor
mov
pop
lret
nop
incb
sub
inc
insb
mov
xor
mov
pop
mov
in
add
add
or
test
subb
imulb
mov
xor
jno
or
fsubrl
cmp
pop
add
decb
xchg
popf
lea
fstpt
xor
xor
adc
ficompl
sub
pop
push
dec
mov
cmp
cmc
push
and
stos
mov
sbb
adc
cli
push
data16
pushf
out
inc
mov
aad
adc
daa
push
xor
mov
mov
sub
push
jae
adc
or
push
pop
mov
pop
mov
pop
aad
popa
adc
mov
mov
test
jb
mov
or
inc
clc
gs
sub
repz
cmp
push
push
mov
frstor
sub
sti
and
push
sbb
mov
adcb
or
sub
push
lret
or
sub
sub
adc
pop
les
sbb
inc
cmpsl
repnz
jp
push
dec
mov
mov
and
push
pop
mov
jns
or
jno
test
mov
mov
jns
das
inc
mov
sbb
sub
ficoml
jmp
call
and
xor
sbb
mov
into
sbb
and
adc
cwtl
pusha
insl
xchg
xor
mov
in
push
imul
xchg
idivb
push
jmp
sbb
in
xor
adcb
bound
testb
repz
pop
ret
mull
loop
fisttpl
mov
cmp
fildl
dec
dec
cmp
movsl
sbb
js
pop
sarb
xchg
push
xchg
and
cwtl
ficoms
mov
rcrb
jb
fildl
out
xor
mov
cmp
mov
push
lea
ss
push
and
rdpmc
adc
mov
sbb
fdivp
lret
push
cmpb
mov
ficompl
or
scas
jmp
mov
cmpsl
pop
sti
inc
addr16
adc
mov
mov
adc
pop
mov
xchg
aas
popa
xor
mov
pushf
repnz
mov
xchg
mov
rcrb
punpckhbw
pusha
and
xchg
jp
mov
sub
fs
leave
loop
pop
daa
mov
jg
inc
aaa
pop
sbb
mov
mov
jl
xor
xchg
mov
jmp
mov
call
dec
adc
imul
popf
fildl
xor
or
test
lock
dec
ja
cmpsb
jo
popa
add
aad
mov
leave
inc
leave
push
mov
movsb
dec
push
in
fwait
or
pushf
sbb
push
jbe
inc
mov
push
fisttpl
cld
mov
test
sub
movsb
sbb
cmpsl
or
mov
fcoml
jo
xchg
pop
fwait
leave
je
mov
repz
xor
add
ljmp
add
adc
sbb
divb
jb
pushf
inc
mov
test
outsl
fnsave
jns
mov
sbb
mov
dec
nop
add
xor
pop
sub
cmp
cmp
sub
mov
popf
or
sub
jmp
lret
or
lods
mov
fcmovne
inc
inc
xlat
test
cmp
mov
data16
pop
gs
lret
sbb
pushf
pop
in
adc
jae
sub
int3
push
inc
dec
lock
jp
cld
push
cs
inc
adc
mov
cmp
popa
sti
lea
xchg
ret
push
pusha
ss
cmp
loope
sbb
gs
sbb
lods
sub
repz
test
xor
and
jmp
fwait
movsb
jno
icebp
lods
xchg
aas
js
xor
and
mov
inc
add
cli
popa
lcall
or
sbb
mov
lock
imul
shll
mov
fstp
leave
fs
lods
pop
clc
xchg
jmp
dec
and
pop
add
jmp
mov
subl
movsb
cs
mov
lods
mov
cltd
xchg
mov
cmp
lock
call
dec
pusha
xchg
test
stos
xor
jo
pop
sub
jmp
testb
dec
xor
pop
xor
insl
sub
pop
popa
out
addb
sbb
jb
mov
mov
or
add
sbb
sbb
push
sub
pop
fs
lock
cmc
xlat
pop
mov
movsb
sbb
ljmp
jno
cmp
push
add
and
mov
xor
push
in
dec
jns
out
je
mov
xor
stos
ja
mov
mov
push
mov
dec
call
cld
add
test
push
repz
flds
out
leave
dec
cmpsl
add
push
imul
cs
das
sub
xor
in
scas
rolb
fiaddl
les
cmp
xor
pop
or
cli
ss
and
jno
xor
mov
adc
repnz
sbb
pop
jmp
and
cmp
push
mov
push
inc
pop
gs
xchg
mov
loop
jb
or
clc
sbb
and
xchg
scas
xor
jl
fcomi
jno
push
push
pop
xlat
pop
pop
dec
jl
push
pop
add
out
push
push
int3
dec
xchg
cmpsb
xor
data16
clts
mov
xchg
lods
dec
mov
and
movsl
cmpsb
or
xorl
negb
popa
dec
mov
push
mov
cmp
fisttpll
mov
rcll
popa
adc
js
dec
xchg
xchg
sbb
pushf
sbb
dec
imul
shlb
shrd
js
fnstenv
je
test
push
or
scas
hlt
repz
test
add
icebp
cmp
jg
mov
or
bnd
sbb
pop
mov
push
pusha
mov
adc
jmp
sub
jmp
pop
lcall
lods
mov
icebp
pop
xor
das
leave
cmp
adc
jb
and
mov
pop
mov
mov
cmp
xchg
adc
fs
lds
imul
leave
mov
das
lcall
or
aaa
fdivr
sbb
aam
ffree
out
dec
push
sbb
or
mov
sbb
ds
loop
out
jo
mov
shrl
or
push
cli
dec
add
pop
cmpsl
jb
inc
lock
sub
mov
pop
dec
das
loop
sub
rclb
pop
leave
orl
inc
pop
xlat
adc
cld
sarl
lcall
jl
inc
fstpl
inc
pop
inc
outsl
sub
mov
mov
in
orb
and
push
sub
pop
stos
cmpsl
stc
lock
push
mov
jne
mov
stc
outsb
sub
enter
xor
js
ror
push
add
mov
push
mov
cld
inc
lods
mov
adc
mov
xchg
add
jle
dec
dec
mov
dec
cmc
icebp
inc
push
insl
xor
mov
push
pop
lds
decl
push
jbe
fwait
mov
ds
into
push
iret
xor
pop
fbstp
sbb
pop
js
xchg
lret
aaa
xor
jge
or
xchg
subb
out
sbb
sub
out
mov
fwait
lret
inc
sbb
mov
lea
rorl
cwtl
push
push
movzwl
push
sub
fs
cli
scas
sub
cmpsl
loop
jne
rcr
push
mov
jmp
stos
in
push
cmp
mov
pop
xchg
pop
mov
mov
outsb
jb
ret
push
mov
pop
sub
xor
sti
xchg
pusha
pop
enter
xlat
xchg
shrl
mov
cmp
cmp
ss
leave
xor
sbb
jmp
push
fistpll
gs
lahf
jae
add
out
sub
dec
adc
test
cmpsl
or
xor
sub
inc
ja
out
fildl
jmp
pop
inc
sbb
sbb
xchg
js
sub
insl
xchg
inc
dec
and
test
pop
fisubrl
mov
sbb
jns
add
xor
dec
lea
stos
adc
sub
pop
stc
jl
lahf
pop
ljmp
xor
inc
shlb
cld
pop
pop
lods
and
mov
inc
std
xchg
sti
mov
push
ss
dec
lock
sub
loopne
mov
push
gs
add
das
push
rclb
or
cmpsl
push
scas
addr16
movsb
fdivs
inc
pop
test
pop
and
jge
movsb
cwtl
push
jecxz
inc
mov
into
fwait
das
ret
push
push
sub
ror
push
push
adc
pop
and
dec
pop
pop
loope
rcrl
and
inc
sahf
lahf
fcoms
movsl
stos
sbb
push
sarl
sbb
xor
pop
dec
sbb
es
sub
out
sti
xlat
cmc
pop
iret
and
sbb
sbbb
pop
sub
adc
ljmp
insl
je
test
dec
xlat
fcomps
movsb
pop
adc
out
cmp
std
sbb
in
fstl
add
and
jnp
pop
push
add
gs
jg
sbb
xor
lret
es
push
xchg
xor
and
stc
lea
mov
push
dec
pop
sahf
jbe
pop
sti
push
stc
fdivrp
stos
cwtl
push
xor
pushf
sub
fists
push
inc
icebp
dec
adc
test
cmp
inc
add
mov
jl
int3
cmp
xchg
jnp
push
dec
ret
pop
dec
loopne
enter
sub
in
jp
dec
hlt
inc
daa
pop
lods
sub
es
out
push
push
dec
and
mov
clc
pop
xchg
sub
inc
sbb
xor
rclb
pop
std
and
adc
jae
cmp
pop
iret
sub
jg
dec
pop
adc
inc
fildl
push
push
sbb
hlt
js
push
xorb
xchg
fcmovnb
fstpt
jne
bound
stos
dec
xlat
add
cmp
xchg
leave
push
jbe
or
sahf
dec
push
cmp
cmp
dec
es
leave
shrb
mov
stos
repnz
test
inc
xor
or
movsb
cmp
sti
cli
sti
pop
jp
or
into
int
and
scas
rcrl
mov
dec
mov
jecxz,pn
sub
adc
enter
test
push
cwtl
insl
pop
sub
ret
dec
mov
pop
jecxz
neg
pop
pop
inc
push
cmp
xchg
hlt
pop
loope
je
in
fcompl
xchg
loop
dec
test
adc
sbb
push
cmpl
or
jae
or
dec
mov
out
dec
test
cmp
cmp
sub
sub
or
arpl
dec
enter
dec
xor
pop
xchg
sbb
dec
int
pop
jnp
cmpsl
sahf
and
cmp
aad
sti
sub
jmp
sub
scas
pop
je
sbb
arpl
push
cmp
and
fildll
in
xchg
or
push
lcall
dec
cs
pop
dec
aam
xchg
mov
cwtl
mov
fldt
push
cmp
pop
mov
dec
xchg
das
movsl
ret
dec
ja
sbb
push
les
aad
in
dec
dec
fdivr
jle
ljmp
sbb
out
push
frstor
mov
rorl
sub
nop
pop
or
pop
jno
pop
lret
and
dec
adc
sbb
push
stc
pushf
pop
mov
dec
mov
push
fisttps
sbb
dec
dec
gs
push
xor
xchg
dec
movsl
fadds
icebp
test
aaa
and
mov
pop
mov
sub
ud1
stos
and
and
scas
xchg
mov
neg
jae
add
sbb
add
add
js
dec
sbb
fwait
xlat
fs
jg
ret
xchg
push
dec
je
pop
dec
xchg
icebp
mov
fistl
xor
cmp
lcall
push
sbb
aad
push
aaa
scas
cmp
push
mov
mov
mov
fcomps
push
push
or
pop
cmp
hlt
sbb
mov
or
adc
push
test
push
lret
dec
cld
mov
push
imul
dec
push
sbb
mov
sbb
jmp
movsl
sbb
mov
push
sti
push
pop
sub
aas
stc
dec
mov
sub
adc
mov
js
or
scas
pop
jmp
push
cli
dec
testb
sti
mov
inc
fwait
jmp
pop
jg
cmp
adc
and
add
iret
jmp
dec
sti
mov
xlat
push
fld
lods
inc
push
inc
inc
cmp
lds
hlt
jecxz
mov
scas
sti
and
cmc
jmp
xlat
push
pop
inc
mov
xor
xor
std
mov
into
push
cmp
je
test
pop
inc
rcr
sub
ret
and
int3
xchg
push
pop
es
xor
mov
push
cmpsl
movsl
cmp
lret
push
or
dec
mov
or
inc
scas
aam
push
dec
sub
cmc
fsubrs
mov
cltd
cmp
out
cmp
shll
inc
jle
jnp
push
pop
insl
xor
pop
fneni(8087
notb
lret
mov
jo
and
sub
mov
sbb
mov
pop
sbb
add
dec
pop
jl
pop
fbld
rorb
and
into
inc
push
sub
push
fdivrs
sub
push
loope
mov
lret
test
dec
inc
popf
nop
dec
cmpsb
or
xchg
push
mov
inc
dec
sub
add
into
scas
dec
faddl
test
sub
jmp
fbstp
pop
push
out
dec
dec
pusha
inc
fisttpl
lret
cmp
xchg
daa
in
ror
sbb
movsb
jbe
push
pop
cwtl
and
push
dec
and
mov
icebp
sbb
pop
fistl
hlt
sub
jle
push
or
sub
mov
js
push
stos
lock
enter
sti
push
dec
cli
jnp
adc
lods
push
inc
mov
cmp
sbb
sbb
jle
mov
push
sbb
add
mov
push
sbb
icebp
fldt
push
sub
push
sbb
pop
fs
jg
adc
sub
mov
push
scas
or
dec
sbb
or
push
pop
xor
sbb
mov
mov
clc
inc
test
fstps
fcmovnu
loop
push
cmp
adc
js
mov
filds
pop
cmp
add
jl
push
jns
dec
push
jnp
mov
cli
push
fimull
movsl
pop
mov
pop
dec
xor
mov
out
push
insb
and
stos
mov
fnstcw
sbb
fs
aas
xchg
cwtl
push
inc
xor
pop
push
or
push
and
jl
sub
mov
push
stos
xchg
push
mov
arpl
or
cwtl
sub
push
inc
push
or
mov
jmp
sbb
rcrl
inc
cmp
dec
dec
sub
sbb
push
jle
out
pop
push
sahf
dec
cmp
pop
cmp
jo
dec
repz
pop
xchg
pop
test
xchg
mov
sub
mov
sbb
xchg
lahf
push
sub
push
cwtl
scas
mov
popa
xchg
dec
pop
mov
in
xor
pop
cmpsl
sub
or
xor
cli
cwtl
cwtl
push
push
mov
adc
fisubrl
jge
stos
mov
insb
sarb
pop
pop
xchg
imul
and
sbb
es
push
fdivrs
jae
sbbl
jmp
gs
dec
mov
sub
je
push
insb
jecxz
addr16
pop
pop
push
js
lock
repnz
and
cmp
mov
pop
lods
sbb
aaa
rcrb
mov
or
stc
loop
cmp
mov
or
fwait
xchg
out
lds
leave
fidivl
mov
icebp
dec
fstpt
push
lea
or
aas
add
push
jnp
bound
lret
xor
push
inc
xchg
sti
mov
sub
pushf
insb
frstor
inc
mov
xor
pop
mov
rcrb
xor
sbb
pop
out
sub
into
in
pop
add
sbb
out
push
jmp
dec
pop
or
mov
pop
cmp
popf
sbb
pop
cltd
arpl
sbb
sub
cltd
or
mov
pusha
lods
pop
mov
xor
cltd
insb
cmp
jae
lret
fisttpl
ljmp
pop
je
inc
mov
aam
ficoml
lock
mov
push
cmp
fdivrs
adc
data16
inc
inc
sbb
cmp
mov
ja
scas
sbb
sbb
cltd
mov
call
std
push
adc
shlb
xor
cmp
mov
push
pop
aas
and
mov
mov
sti
int
add
push
sub
cmp
sbb
xchg
repnz
pop
cmpsb
pop
pop
sub
mov
cmp
cmp
push
cmp
jge
hlt
pop
sbb
mov
sub
jne
cmp
sub
cwtl
cmp
sbb
xchg
int3
pop
cli
push
dec
sub
leave
dec
or
rcrl
mov
lea
test
shrb
pop
sbb
mov
sub
inc
cmp
or
and
mov
xor
xchg
lret
fildl
fnstcw
jmp
cmc
sub
nop
enter
sbb
leave
sti
fldt
movl
adc
push
ficompl
push
fstpt
push
cmp
add
xchg
sub
lcall
pop
adc
pop
and
loope
inc
mov
notb
ljmp
xor
imul
sub
xchg
cmc
xor
mov
cmp
mov
or
jecxz
xchg
adc
xor
mov
lcall
push
iret
fsts
mov
sbb
test
cmp
sbbl
mov
enter
and
add
xorb
dec
and
cmp
xor
mov
hlt
arpl
std
cltd
mov
negl
inc
push
lret
xchg
xor
loop
mov
adc
data16
pandn
or
xchg
push
repz
jmp
inc
cmp
fnstenv
push
movsl
cwtl
insb
fistpl
imul
mov
cmp
sbb
loope
loope
inc
and
or
insb
sub
push
stos
cmp
addr16
xchg
cmp
movsl
pop
cmp
cmc
sub
aam
jbe
dec
mov
adc
and
icebp
sub
sarl
pop
out
cmc
push
cmp
push
sub
mov
fildl
ljmp
xchg
jno
mov
in
sbb
test
mov
lds
out
push
outsl
sub
sub
mov
xor
or
enter
out
into
xchg
lds
gs
xor
pop
enter
aad
nop
cmp
pop
mov
cld
sbb
sub
xchg
xor
pop
sbb
dec
jbe
filds
sbb
sbb
mov
jle
ds
cwtl
push
fcomip
push
inc
in
aam
dec
clc
rolb
hlt
lret
sbb
sub
jo
pop
pop
movsb
pushf
dec
sbb
cmc
hlt
into
dec
xlat
negl
and
lret
aaa
dec
les
cmp
imul
pop
cld
mov
pushf
cwtl
mov
fldt
xor
jo
xchg
adc
lcall
push
mov
push
or
jo
push
lcall
sub
ss
jbe
arpl
dec
cmp
fildl
mov
dec
cmp
adc
ror
sbb
mov
mov
fcomps
sbb
pop
xchg
adc
add
or
imul
xchg
std
dec
sbb
leave
jns
testl
bound
pop
adc
dec
or
add
sbb
cwtl
sub
loop
dec
fsts
das
push
cli
mov
aad
push
push
test
loopne
sbb
pop
jg
sbb
pop
cmp
daa
jns
pop
dec
pop
cmp
xor
negl
sbb
push
pop
push
out
dec
pushf
sub
dec
into
push
xchg
cmp
mov
loopne
ret
mov
inc
mov
pop
jg
pushf
mov
xchg
test
test
and
in
xchg
dec
inc
dec
or
dec
dec
sub
add
and
mov
into
rcll
mulb
mov
jp
sbb
enter
cmpsl
loope
xor
sub
ret
or
pop
icebp
imul
push
in
xchg
js
dec
and
add
jnp
sbb
dec
cwtl
movsb
sbb
inc
push
sbb
push
xlat
dec
inc
push
int
push
dec
inc
adc
in
mov
aad
imul
jne
fcomps
addr16
lret
or
cwtl
add
stc
int
pop
ja
in
sbb
outsl
and
sbb
rolb
mov
dec
sbbl
push
in
and
sub
lcall
sbb
adc
dec
aas
gs
inc
ret
out
mov
sbb
adc
adc
sub
push
pop
insb
inc
inc
sbb
jg
jecxz
jnp
dec
lahf
pop
xchg
shrl
bound
and
je
aaa
in
push
pop
adc
andb
aad
test
cmp
xchg
pop
dec
arpl
dec
xor
fst
push
mov
cmpsl
or
mov
or
mov
xchg
fisttpl
shlb
mov
enter
mov
pop
pop
and
loop
pop
out
pop
xchg
test
push
mov
xor
fnsetpm(287
insl
stos
or
cmpsl
mov
push
cld
adc
fstl
push
inc
fwait
mov
mov
imul
mov
test
mov
js
lods
xor
enter
dec
mov
dec
movsb
test
push
es
inc
sarb
insl
push
inc
cltd
dec
dec
push
add
js
cmp
int
les
cmp
mov
and
inc
pop
and
jae
xor
sub
mov
into
andl
jp
dec
mov
mov
bound
dec
addr16
sub
push
jmp
cmovg
xor
push
repz
mov
aam
lret
es
movsb
xor
mov
cmp
push
ljmp
or
pop
mov
push
movsb
cwtl
xchg
adc
mov
addr16
sbb
pop
push
js
adc
cwtl
xorl
bound
cmp
mov
push
cmc
or
shlb
push
or
pop
push
sbb
ret
fistl
pusha
mov
rorl
int3
and
xchg
pop
jge
sti
xchg
in
xor
pop
push
pop
js
movsb
sbb
leave
push
add
stos
dec
sahf
popa
jne
and
repz
cmp
or
sbb
dec
cmp
fidivs
imul
xchg
push
sbb
pop
inc
sub
xlat
jnp
xor
mov
mov
insb
fdivrs
pusha
adc
loopne
inc
dec
adc
js
sub
adc
jne
push
shll
and
mov
repz
push
cli
mov
pop
mov
cmp
stc
push
clc
in
js
adc
popa
xchg
inc
sbb
hlt
xor
cli
inc
dec
out
adc
cmp
xchg
pop
outsl
add
sbb
push
jne
pop
jle
pop
or
xor
push
sub
leave
adc
stc
jmp
sahf
mov
movsl
dec
jns
repnz
jp
mov
pop
xor
cmp
lret
in
mov
js
push
sbb
sahf
push
push
sbb
xor
sub
push
and
adc
aad
divb
push
cmp
pop
cwtl
ljmp
xchg
dec
cmp
or
push
mov
cmp
push
sbb
jnp
cli
push
stc
xchg
int3
xchg
mov
notb
icebp
xor
sub
psubb
sub
xchg
xor
aaa
sbb
iret
sub
pop
fcmovnu
sub
push
sbbb
dec
mov
add
les
dec
dec
inc
fidivrs
enter
jo
xchg
decl
mov
dec
popf
or
sub
push
clc
and
mov
pop
jl
aas
data16
pop
cmp
pop
notb
adc
adc
pop
push
sub
xchg
add
out
shrl
out
mov
hlt
push
cmp
xchg
adc
mov
pop
cmp
lret
or
sub
dec
push
rcll
mov
lret
push
jmp
mov
jb
pop
dec
dec
xor
or
sti
mov
sbb
sub
jmp
jo
mov
add
stc
pop
sti
mov
adcl
adc
daa
fsubr
or
push
jns
in
dec
cmp
pop
aaa
loop
push
push
or
sub
insb
dec
sbb
cmpsl
push
je
lds
jl
insb
sbb
sbb
add
cmp
pop
insb
pop
vcvttps2dq
xchg
dec
shrd
adc
mov
pop
cmp
ljmp
dec
mov
dec
pop
inc
cmp
out
push
sbb
push
ljmp
rclb
or
pop
dec
sbb
mov
mov
push
data16
dec
sub
or
push
and
shlb
inc
xor
insb
pop
mov
and
jmp
lea
dec
push
inc
mulb
je
pop
fsts
sub
inc
out
cmp
jne
stos
cltd
push
iret
xchg
test
mov
mov
push
xor
dec
add
test
jmp
pop
add
push
mov
xchg
fsub
mov
pop
sub
negl
mov
lahf
jmp
ror
dec
imul
push
into
push
push
cmpsb
and
sub
lcall
insl
or
xchg
mov
nop
lcall
dec
dec
push
xchg
sub
cmp
ljmp
mov
adc
jo
xchg
and
in
pop
mov
sbb
inc
add
add
cmp
xchg
mov
sbb
cmpsb
outsl
sub
cmp
cli
lahf
jbe
push
jp
push
xor
or
hlt
pushf
mov
jne
imul
push
pop
pusha
pop
out
sbb
aaa
fildl
movsb
fstpt
fidivrl
and
sub
in
sbb
sahf
cwtl
mov
mov
loop
sbb
lods
lods
add
cld
mov
dec
mov
inc
gs
jbe
jecxz
mov
inc
mov
sub
pop
lock
call
add
or
icebp
pop
incb
inc
rorb
ret
xor
xchg
mov
inc
sbb
pop
dec
pop
dec
jb
ljmp
xor
test
push
scas
fdivrp
shl
sbb
xchg
xor
lcall
lods
mov
mov
js
pop
nop
adcb
jmp
in
sahf
adc
pushf
hlt
push
add
out
dec
jnp
mov
push
mov
pop
xchg
lods
pop
cmp
xchg
dec
idivb
pop
loop
dec
inc
pop
xlat
adc
cs
movsb
inc
add
cmp
cwtl
scas
pop
loop
and
adc
push
icebp
jg
jae
in
pop
sbb
xor
insl
notb
xlat
add
stos
adc
divl
faddp
rcrb
mov
jo
sbb
push
loope
add
mov
mov
sbb
loopne
pop
dec
adcl
js
sbbl
dec
fs
movsl
aas
pop
fldenv
int
in
xor
pop
pop
inc
adc
lcall
in
inc
jns
sub
cmpl
mov
fstpl
cmp
dec
fnstenv
push
pop
or
in
dec
aas
repz
int3
pop
test
add
outsb
popa
lds
test
mov
insb
sub
dec
out
mov
gs
imul
movsl
xor
movsb
clc
popa
stc
inc
xchg
jp
js
inc
aas
add
pop
sub
jp
or
lock
or
lahf
mov
or
or
add
pop
mov
xchg
push
aad
fists
push
dec
mov
pop
mulb
sub
divl
push
lock
nop
mov
out
popf
push
push
lcall
jae
test
or
and
sbb
mov
fistpl
mov
sbb
aaa
loopne
mov
and
pop
lret
mov
sub
mov
mov
pop
mov
aaa
test
pop
ljmp
movsl
aad
aam
mov
inc
ret
daa
inc
out
pop
cmp
cmc
mov
daa
inc
xchg
jbe
fidivs
loop
pop
push
sbb
sbbl
negl
loop
push
dec
mov
add
pop
mov
sar
adc
mov
aaa
loopne
push
sub
adc
lock
jnp
or
aaa
pop
scas
js
cmp
xchg
pop
mov
sahf
adc
mov
cs
sbb
ljmp
jnp
es
test
sub
ficompl
fisubrl
inc
jmp
ret
mov
gs
xchg
xchg
cli
xchg
lret
or
in
imul
xchg
fstps
jo
add
lea
add
rcll
inc
hlt
mov
movsl
add
xchg
push
arpl
xor
out
fimuls
cmp
sbb
push
or
and
rol
and
cld
imul
mov
inc
dec
sbb
mov
cltd
sub
jge
sub
ret
mov
jg
movsl
mov
pop
cmp
loopne
orb
hlt
fsubs
cmp
cmp
imul
nop
lods
mov
ret
jl
pop
loopne
push
mov
fidivs
out
stc
dec
and
jnp
popf
repnz
pop
xchg
and
imul
data16
mov
xchg
out
pop
stos
test
fnstcw
or
xorb
cmp
sbb
mov
gs
xchg
roll
jmp
dec
lock
sub
out
cs
and
jne
dec
mov
sbb
pusha
ficomps
jno
jg
fs
xchg
xor
gs
xor
push
pop
lods
orb
push
subb
add
mov
pop
cmpsb
xor
mov
lods
mov
jae
and
mov
mov
out
dec
inc
mov
lea
xchg
lret
notb
inc
fisubs
push
sub
inc
cmc
push
pop
sbb
xor
pusha
add
mov
mov
dec
mov
pop
popa
dec
push
inc
adc
pop
mov
ja
or
sbb
daa
insb
xor
pop
pusha
jle
lods
loope,pn
bound
cmp
aaa
sub
sbb
or
lods
shrb
mov
cmpsb
mov
xchg
mov
out
cmp
nop
sbb
data16
rclb
adc
loopne
aas
mov
hlt
xchg
data16
sub
cmp
icebp
cltd
push
push
sbb
fcmovnb
es
aad
mov
dec
hlt
jnp
sar
call
dec
aad
mov
xor
int3
pop
cltd
movsl
pminub
frstor
cmpsl
or
inc
push
data16
mov
dec
sbb
xchg
cmp
fldl
fidivs
push
sbb
les
gs
cmp
cld
enter
bound
data16
sub
es
pop
lds
pop
jge
das
jecxz
ss
jns
cmp
dec
shlb
fdivr
push
jmp
cmp
aaa
ja
dec
add
pusha
hlt
and
insb
add
xor
xchg
or
std
cmp
add
sbb
jno
lahf
daa
inc
mov
mov
stos
sbb
and
jne
xor
inc
push
dec
sub
stc
inc
insl
test
mov
mov
mov
loopne
dec
shlb
jle
int3
mov
iret
cs
repnz
add
aaa
jo
mov
mov
and
fcmovnb
mov
sbb
je
pop
aas
jmp
inc
or
call
test
dec
jne
shr
and
sti
stos
xchg
sub
cmc
cmp
aad
in
jge
outsb
imul
das
xchg
mov
clc
dec
add
movsb
mov
lds
outsl
pop
adc
jb
ljmp
mov
mov
sbb
sub
fldt
jne
mov
repz
mov
pop
ret
cmp
fcompl
inc
xchg
mov
jge
int
das
jns
push
push
cmp
inc
cmp
fucompp
pop
jo
mov
mov
or
fistpl
push
mov
mov
sbb
or
cmp
fs
hlt
sub
mov
xor
dec
sbb
aad
test
xor
adc
pop
stos
and
pop
inc
xchg
or
cld
std
fwait
popa
xlat
pop
cmp
fwait
lods
in
in
xor
xchg
sub
lock
pop
leave
jnp
xor
add
mov
pop
movsb
xor
or
add
jno
pop
pop
fnop
xor
sbb
ficomps
scas
mov
sti
ret
lds
push
pop
mov
mulb
movsb
mov
test
cli
bndstx
lods
cmp
xor
loop
test
mov
add
scas
gs
add
stos
mov
out
pop
cltd
xor
push
icebp
or
aad
lret
sti
fsubr
lcall
mov
sbb
cli
idivl
inc
ficompl
adc
dec
std
mov
cmp
sub
cltd
lcall
rolb
cmpsl
dec
add
popa
bound
call
jmp
test
movsl
jl
pop
mov
fcmove
mov
dec
dec
add
lock
jmp
ret
dec
rcrl
repnz
inc
jp
add
mov
sbb
inc
lret
sbb
cmp
lret
mov
xor
insl
mov
jno
add
ror
push
fadds
sub
push
testb
xchg
cltd
arpl
in
out
mov
repnz
and
sbb
incl
xor
lret
testb
fcoml
jle
popa
dec
jns
xchg
push
std
xor
lods
add
pushf
call
adc
cmp
clc
add
mov
mov
lock
rcrl
lret
or
std
pop
notl
sbb
sbb
push
jmp
inc
nop
jno
pop
mov
mov
mov
xchg
scas
nop
xchg
dec
mov
jno
shll
pop
cmpsl
dec
insb
mov
or
into
jle
xchg
inc
mov
ss
sbb
inc
rorl
inc
dec
pop
nop
ret
jo
and
xor
aas
push
push
ficompl
rclb
jae
loope
fnsave
mov
adc
in
gs
mov
jmp
addr16
mov
mov
fisubl
lock
adc
test
std
movsb
ffree
jg
push
andb
mov
enter
inc
mov
jecxz
cmp
cli
cli
cmp
mov
mov
dec
in
inc
pop
mov
imul
push
ss
test
hlt
and
inc
mov
cmp
mov
sub
sub
add
clc
inc
loope
push
into
ss
pop
sbb
fidivrl
xor
mov
cmp
jg
fwait
test
fldenv
cld
jmp
sti
jae
dec
ret
jmp
adc
sbb
bound
je
xor
xor
cmp
imul
mov
jns
jno
mov
pusha
add
das
pop
xchg
xchg
sub
mov
in
xchg
lret
out
and
push
xor
mov
aaa
push
leave
lahf
mov
out
orb
loop
mov
and
dec
andl
mov
push
arpl
mov
scas
sub
pusha
jb
dec
movsl
adcb
xor
push
dec
lfs
push
cli
in
subl
syscall
and
push
mov
cmc
jnp
sub
incl
mov
fldt
and
insb
leave
cmp
xor
mov
popf
mov
push
sti
popa
mov
add
xchg
or
push
xor
sbb
add
fs
jl
push
jnp
pop
je
lea
ljmp
xlat
jle
sub
mov
ret
sbb
mov
sbb
cmp
pop
pusha
and
push
aaa
bound
sbb
dec
sbb
pop
adc
movsl
std
jbe
add
xor
xchg
popf
cmp
out
jnp
inc
mov
mov
pop
aam
in
push
lds
xchg
jnp
adc
sub
or
lock
sbb
pop
pop
es
sub
insb
das
mov
jno
push
mov
jmp
ds
xor
mov
sarb
pop
xor
xor
mov
xchg
or
dec
cmp
mov
int3
cmpsl
dec
mov
xor
jle
pop
push
scas
or
xchg
shlb
lret
jno
std
pop
sub
ss
mov
jmp
sbb
dec
gs
mov
xorb
test
or
loop
sub
mov
pop
loopne
add
mov
loop
jne
add
push
in
fwait
jge
lds
push
push
loop
repz
or
mov
mov
and
dec
mov
imul
popa
lods
inc
mov
popa
xchg
leave
cmc
subb
mov
movsb
dec
pusha
pop
loopne
movsl
jb
out
mov
pop
dec
cmp
jmp
pop
mov
sbb
insl
inc
fucomip
mov
out
fwait
lret
cmp
arpl
into
stos
adc
xchg
sbb
xchg
stos
movsl
xor
in
cmpsb
pop
ds
andl
bound
or
or
sub
jns
shrl
xchg
addr16
call
pusha
add
mov
stos
xor
neg
xchg
mov
loop
inc
jmp
jmp
inc
dec
dec
pop
es
movsl
jle
sbb
xchg
xor
mov
ds
imul
outsb
xlat
mov
mov
inc
popa
insb
xor
js
movsl
add
dec
and
mov
leave
fists
lods
pop
imul
bound
cld
lds
popa
xchg
cld
inc
xchg
imul
jmp
mov
push
ret
mov
mov
push
cmc
cmc
inc
push
sub
adc
mov
popa
add
mov
jl
cmpsb
mov
stc
sub
mov
lods
jg
pop
xchg
out
xor
sub
hlt
and
pushf
xchg
xor
loop
mov
movsb
jmp
xbegin
ret
aam
and
les
js
jl
repz
into
repnz
into
adc
cs
mov
mov
lret
pop
mov
clc
and
or
mov
cmp
jo
add
mov
aaa
fisubs
sbb
out
cmpsl
jb
xchg
or
pop
add
pop
imul
aad
xchg
bound
flds
jbe
fwait
stos
jnp
jbe
bound
call
inc
sbb
mov
and
stos
fs
mov
push
popf
mov
in
add
out
and
das
add
push
rcrb
pop
xchg
mov
out
in
insb
and
or
lods
out
pusha
stc
cmp
mov
adc
leave
push
repnz
rcrl
add
push
pop
push
mov
stc
cltd
dec
lahf
mov
sbb
inc
lret
xchg
push
cltd
add
push
in
add
mov
push
mov
loop
add
cli
adc
cmpl
repz
mov
cmpsl
pop
int3
movsl
cs
push
push
jl
scas
or
mov
mov
sbb
or
lret
ss
or
add
dec
scas
in
push
adc
out
push
mov
loope
mov
das
mov
adc
push
xchg
add
push
pop
lret
lahf
adc
add
icebp
pushf
xor
mov
cmpsl
mov
subb
idivb
call
movb
mov
xor
xchg
cmp
repz
leave
jl
push
sub
push
mov
xchg
add
pop
sbb
dec
inc
pop
in
mov
push
pop
mov
inc
push
sbbl
ja
mov
mov
enter
inc
push
push
lods
stc
movsb
mov
push
adc
mov
sbb
das
lcall
popf
adc
fistpl
dec
mov
std
xchg
pushf
rcrl
mov
sbb
sub
jecxz
sbb
xor
cmp
cmpsl
add
push
pushf
jns
repnz
leave
dec
imul
rcll
or
pop
orb
sahf
xchg
pop
dec
push
cli
dec
pop
faddp
pop
movsl
push
lods
test
adc
std
mov
scas
js
add
pop
cwtl
test
xchg
lret
and
outsb
out
popf
mov
jl
fs
cmp
dec
fwait
xor
jno
jle
fstl
cmp
fildl
dec
dec
not
popa
ja
scas
hlt
or
aad
push
or
std
lds
xor
je
daa
jae
add
pop
and
arpl
push
adc
ds
cs
scas
lret
scas
into
cmpsl
lret
andb
xlat
das
mov
fistpll
or
sti
mov
mov
adc
lock
sub
mov
movsl
loopne
or
gs
lcall
mov
and
int3
mov
fs
mov
stc
and
dec
dec
imul
ljmp
and
sub
cmp
sub
in
je
loopne
adc
push
je
sbb
enter
pop
stos
pusha
mov
js
push
adc
push
std
notb
xchg
cld
mov
lret
pop
push
push
rcrb
mov
js
and
mov
popa
push
adc
pop
rolb
sub
xchg
sub
dec
cwtl
popa
rolb
bound
mov
push
push
cmp
jg
lret
jl
stos
jae
mov
mov
adc
fildl
xchg
loopne
scas
test
mov
lcall
jg
popa
je
mov
push
pop
mov
jl,pn
dec
dec
sub
cmp
pusha
insb
and
lcall
ja
std
fs
movsb
mov
sub
mov
or
mov
call
rcr
cmpsb
out
movsl
inc
and
jp
sbb
jae
xor
loope
adc
call
loop
lret
jl
xlat
sbb
cltd
movl
js
orl
jmp
add
push
imul
mov
sbb
mov
lea
jne
cs
jg,pt
cltd
and
cld
mov
adc
xor
xlat
lock
mov
cmpsl
sti
test
xchg
jo
repnz
jl
dec
adc
loop
push
jns
push
ja
frstor
dec
push
sbb
push
cli
jmp
mov
pusha
cli
sahf
dec
mov
mov
fidivl
or
in
push
mov
cmp
sbb
adc
mov
pop
cmp
fdivrp
xor
testb
push
dec
mov
mov
sub
arpl
or
int
dec
fildll
cs
add
imul
push
cli
xchg
out
cli
xchg
mov
ds
pop
fistps
cld
dec
adc
mov
hlt
ss
xchg
pop
push
dec
xchg
ret
das
ljmp
xchg
sahf
pop
and
dec
fwait
jle
lahf
cmp
orb
push
jb
jnp
cmp
add
in
push
lock
push
pushf
or
push
lahf
adc
jns
pop
stos
lahf
add
mov
outsb
sti
jecxz
lods
add
mov
add
mov
adc
cmp
mov
fwait
pop
cwtl
push
data16
popf
inc
push
hlt
jge
dec
pop
rcrl
mov
cli
adc
sub
adc
aam
addr16
out
aaa
xchg
mov
adcb
jg
sbb
ror
not
mov
fstpt
sbb
pop
daa
and
pop
jnp
cmpl
fistps
jns
xor
mov
mov
stos
js
adc
mov
cld
rclb
out
push
icebp
movb
mov
lahf
sbb
sbb
fbstp
jnp
notb
sub
lret
aaa
sarb
mov
sub
pop
fbstp
mov
test
pop
stos
in
cmpb
and
mov
outsl
sub
add
push
enter
push
mov
jae
cmpsb
sbb
fmuls
pop
stos
loop
xor
mov
ret
mov
mov
aad
xor
pop
fnstcw
imul
xor
or
loop
inc
push
mov
inc
add
cli
push
mov
pop
push
mov
testl
cld
enter
outsl
data16
mov
dec
xchg
inc
push
gs
fimuls
mov
daa
aam
imul
dec
mov
xchg
xlat
or
repnz
iret
fs
push
sbb
or
dec
and
sub
scas
loope
lret
negb
mov
mov
jmp
cmc
insb
add
sbb
inc
fldcw
pmulhw
cmp
fs
ljmp
xchg
mov
bound
loopne
push
push
test
jecxz
fcompl
xchg
sbb
in
cwtl
out
or
into
or
sbb
aad
arpl
lods
fwait
jl
lret
cs
and
sub
jle
lcall
ljmp
push
jge
aad
in
add
jno
fidivl
inc
push
or
aam
mov
push
js
mov
jne
fcomps
push
and
add
in
mov
stos
or
rclb
sbb
js
or
or
test
cmp
aam
ljmp
xor
cli
xor
lods
dec
jge
es
pop
jb
xchg
into
scas
sub
mov
push
dec
mov
sub
push
test
scas
sbb
push
sbb
sarl
xor
mov
roll
push
aaa
fwait
mov
jle
lcall
add
mov
rcrl
and
xchg
outsb
xchg
mov
scas
mov
fs
dec
mov
mov
sub
pop
js
outsb
dec
repz
jns
add
arpl
or
xorl
or
shll
cmpb
mulb
sti
dec
xor
mov
test
add
gs
and
fmul
xchg
sti
into
mov
xchg
sub
vmwrite
test
inc
test
dec
sbb
lahf
jmp
insb
cs
mov
xchg
ret
nop
mov
mov
sbb
loop
dec
add
outsb
repnz
jne
mov
jl
lods
dec
pop
test
sbb
and
mov
sbb
shlb
add
lock
loope
out
pushf
sbb
jnp
scas
psubd
lods
mov
and
sbb
fdivrs
sti
es
or
out
imul
fwait
adc
fistl
add
cmp
cwtl
mov
push
std
cmp
dec
stc
xor
dec
data16
sbb
dec
test
push
sar
or
pop
adc
stos
mov
hlt
in
mov
sub
dec
pop
out
add
mov
testl
mov
pop
loopne
and
sub
andl
push
popf
mov
dec
cmc
out
cltd
xchg
icebp
addl
enter
out
adc
inc
fldcw
test
loop
fs
jg
ret
adc
fisttps
mov
fstpl
xorb
fstps
movsb
inc
imull
or
sub
aad
subb
insb
mov
mov
xchg
cmp
and
jns
mov
mov
pushf
pusha
loopne
mov
mov
lret
dec
add
mov
pop
cmp
mov
push
iret
mov
xchg
inc
add
pop
ficompl
pop
jae
sub
xlat
lret
cmp
test
stos
es
inc
dec
call
sub
cld
mov
jns
test
aam
movsb
cli
jp
push
mov
pop
pusha
mov
xchg
mov
or
jbe
add
xchg
dec
fwait
shl
outsb
andl
cmp
ror
insb
jmp
xor
sbb
adc
add
pusha
mov
shlb
repz
jo
fisttpl
jb
or
mov
sub
or
adc
push
or
xor
data16
insb
mov
or
jae
hlt
xor
or
outsl
mov
mov
fwait
cmp
sub
push
das
movsb
jmp
dec
fnsave
mov
sti
ficompl
mov
push
sub
hlt
daa
jp
xor
lock
dec
iret
jo
in
push
add
shlb
sub
jae
xchg
push
ds
cmovnp
fistpl
fwait
dec
out
mov
pop
push
mov
xchg
aaa
fistl
adc
xchg
adc
dec
sbb
jle
not
mov
out
adc
lret
mov
fwait
lret
add
flds
sub
shl
and
pop
mov
repz
ficompl
jl
push
nop
or
push
pop
and
pusha
lods
insl
shlb
sub
inc
sahf
leave
das
pop
xchg
sti
int
addr16
inc
ficoms
cltd
les
adc
in
fsubrs
push
and
das
dec
ret
mov
mov
adc
bound
cmp
lahf
xchg
orps
cltd
stos
cmpsl
xlat
gs
rorb
sbb
pop
js
jmp
mov
push
xor
aaa
rcrl
dec
mov
mov
jno
shr
lcall
xchg
jle
arpl
popa
mov
das
sbb
sub
lahf
or
lahf
sbb
js
cltd
fadds
fcmovb
sbb
mov
push
stos
in
mov
cmovnp
xchg
das
lods
jbe
gs
sub
stos
cmpsl
push
repz
push
es
mov
cmp
stos
mov
mov
jecxz
mov
sub
dec
sti
sbb
pop
stos
sbb
pop
jge
push
mov
out
test
pminub
dec
mov
lods
shll
mov
inc
sub
xor
pop
es
mov
sbb
and
or
js,pn
es
adc
stos
test
jno
sub
outsl
pop
out
push
push
pop
out
add
mov
shl
xor
inc
arpl
sub
pusha
popa
fisubs
mov
push
add
cs
and
fiadds
lahf
inc
aaa
push
mov
lea
xor
jmp
loop,pn
sub
inc
push
loop
lcall
aam
fs
cmp
lods
jge
stos
sub
dec
mov
mov
fidivl
pop
in
insl
jae
sbb
lods
cmp
sub
or
adc
pop
xlat
mov
imulb
xchg
or
lea
ss
push
xor
add
ss
pop
insb
shll
std
mov
sub
aaa
test
pop
cwtl
int3
mov
sub
std
pop
fsubrl
xor
out
rcll
lret
jp
push
cmp
loop
in
dec
xor
lea
add
push
sbb
jnp
movsl
mov
lahf
jno
mov
arpl
mov
jecxz
fstl
xor
aam
mov
xor
cmp
mov
popf
fsubl
lcall
dec
push
mov
push
rolb
ljmp
jmp
mov
in
sbbl
and
mov
lods
dec
mov
pop
js
pop
popa
scas
inc
push
fidivs
flds
xchg
stos
lahf
cltd
addl
sti
inc
push
fisttpl
idivl
pop
test
adc
scas
lahf
add
pop
test
dec
add
lds
movsl
pop
repnz
imul
out
fidivrs
bswap
stc
stos
shll
mov
sub
dec
test
pusha
pop
orb
mov
rorb
xor
aam
adc
mov
popa
sub
scas
cli
push
xlat
pop
jecxz
sbb
lahf
xlat
and
push
std
outsb
or
dec
das
xchg
mov
mov
push
xor
nop
insb
test
fwait
cs
adc
add
out
push
cmp
or
dec
fidivl
xchg
jg
cmp
enter
or
daa
push
mov
mov
pop
and
push
rorl
pushf
mov
std
sarb
jmp
fwait
mov
ret
or
fimuls
pop
jne
pop
stos
xor
and
mov
xor
pop
and
pop
and
cmp
push
inc
dec
mov
imul
out
lock
insl
mov
decb
push
sbb
lock
jbe
cmpsl
movsb
inc
inc
mov
jne
lods
and
sarl
sarl
lahf
lahf
cmp
fisubrl
xchg
andb
lcall
and
lcall
orl
push
cmp
ret
xor
jl
push
mov
pop
xor
xchg
fs
sbb
xor
pop
adc
cmovp
dec
test
imul
out
xor
aad
xor
std
insl
cmpsl
or
test
mov
pop
jmp
xchg
sahf
pop
outsl
lret
insl
mov
lret
jl
cmp
jb
jno
add
in
sbb
inc
lahf
push
add
mov
scas
jne
dec
push
jl
movsb
inc
dec
dec
jb
imul
je
jae
adc
pop
je
sub
mov
push
pop
aam
call
xor
push
fisubrl
repnz
inc
int
xlat
push
jae
or
sub
test
add
pop
popa
cmp
sbb
stc
jns
ficoms
mov
add
mov
popf
xor
pop
lods
xor
mov
cmc
pop
ss
add
inc
xchg
push
ficoms
pop
mov
mov
push
push
push
sbb
cld
shl
add
les
ficoms
and
rcrb
movsb
jecxz
pop
fsubl
push
out
sbb
test
insb
mov
fs
fstpl
in
mov
mov
cmpsl
push
sbb
dec
xchg
movsl
push
int3
fbstp
lds
jle
mov
cmp
or
jae
pop
sub
mov
mov
cmp
enter
lahf
pop
push
ficoml
sub
adc
dec
scas
in
in
sub
sbb
xchg
aas
mov
enter
pop
dec
or
xchg
andb
ret
rcr
cmp
cmp
fnstcw
xor
imul
out
and
sbb
ficoms
in
cmp
sahf
mov
lahf
cmpl
xor
jmp
leave
and
sub
dec
pop
pop
jmp
stc
enter
repz
jle
iret
jl
fidivrs
dec
fs
lahf
enter
xor
pop
data16
sbb
popf
push
xchg
push
xor
pop
jo
rcl
sub
mov
mov
in
aam
xor
xchg
cmpsb
push
and
jle
push
fs
sbb
xchg
daa
fwait
push
xlat
mov
mov
adc
pop
outsb
mov
fsubr
add
and
jns
inc
sbb
xchg
and
fmull
lcall
loope
data16
cmp
xor
and
cmp
mov
pop
fwait
shlb
mov
mov
mov
out
or
shlb
cld
icebp
xor
pushl
int
into
mov
mov
lret
dec
pop
sbb
xor
sub
jb
jp
es
jo
leave
jl
pop
shr
xchg
adc
imul
mov
lock
mov
pop
lock
mov
pop
mov
cs
rcrb
imul
mov
pop
pop
jle
or
inc
fs
adc
mov
repnz
mov
mov
test
cmp
stos
push
jmp
jns
call
push
test
je
add
adc
into
lret
movsl
pusha
xlat
repnz
mov
xlat
fs
cs
stos
sub
and
fdivs
xor
jne,pt
scas
mov
in
ss
mov
jle
pushf
pusha
sub
xor
dec
sti
or
test
sarl
push
adc
ss
adc
outsl
out
insb
test
jmp
jno
add
out
out
jl
in
add
lods
and
inc
sub
cmp
cli
push
cli
dec
or
lods
shlb
cmp
and
push
cmp
adc
cmp
xor
in
push
outsl
add
mov
push
sbb
sbbl
rcrb
jb
push
les
imul
xorb
xor
movl
cmpsl
int
aad
mov
int
fnstenv
mov
mov
add
xchg
mov
roll
xchg
fs
jle
xor
mov
mov
std
push
dec
lret
out
xor
int
xchg
xchg
ds
les
adc
jno
xlat
testl
or
and
rcrl
or
sub
xor
cmc
icebp
ss
cmp
aam
outsb
add
cli
in
fisttpll
out
aam
imul
push
pop
addr16
push
mov
sbb
jne
jns
repnz
gs
fistps
pop
xor
mov
jl
ror
test
push
inc
mov
ja
or
push
pop
adc
sbb
sub
in
jns
das
sbb
mov
jo
into
aaa
movsb
sub
pop
or
xchg
dec
cmp
popf
shll
mov
outsb
ss
xor
shll
jne
adc
sbb
lcall
sbb
and
dec
mov
cli
xor
jl
add
sub
inc
add
rol
aad
pop
and
or
pop
subb
ljmp
stc
out
lahf
jmp
mov
jle
out
scas
inc
cmpsb
jmp
xchg
sub
adc
cmp
addb
nop
and
pop
ror
stos
mov
adc
dec
mov
outsb
insb
mov
add
cmp
sbb
jno
movsb
inc
sbb
sbb
std
dec
loop
push
fwait
cmp
pusha
fs
adc
sub
adc
fcoml
mov
int3
inc
jmp
dec
cmpsl
mov
sbb
push
jp
hlt
notb
mov
jl
jmp
mov
ljmp
lock
ss
add
fldl
iret
fisubrl
jns
xor
xor
adc
lea
jmp
popa
adc
cmp
sbb
adcb
cwtl
stos
addr16
mov
push
or
leave
mov
jge
jns
out
dec
pop
ds
sub
sbb
xchg
movsl
std
jb
adc
inc
sbb
clc
mov
fidivs
or
aas
push
or
aaa
mov
cmp
pop
pushf
es
xlat
mov
mov
cli
adc
xchg
aas
or
jl
lret
sar
fsubrl
cmp
adc
mov
lods
cmpsb
mov
fstpt
popf
cwtl
push
les
mov
xlat
stos
shl
and
jno
cvtdq2ps
jmp
ljmp
cld
fwait
jno
mov
rcr
mov
fimuls
pop
pop
mov
aas
out
repnz
mov
mov
test
push
jns
push
pop
lds
lcall
sahf
shrd
mov
sub
pushf
into
ljmp
adc
jle
lret
lahf
xchg
add
mov
sbb
mov
or
cli
jle
cmp
stc
ds
lock
sbbl
sbb
mov
jmp
sub
and
mov
mov
xor
mov
stos
mov
insl
jg
nop
test
movq
cld
adc
movsl
dec
arpl
pushf
rcll
push
scas
test
ret
add
mov
sar
pushf
imul
je
xor
ret
xchg
fcmovnbe
in
fdivl
inc
mov
mov
sub
or
adc
popa
adc
sti
dec
sbb
sbb
push
jno
xchg
fstps
test
in
xor
adc
sti
xchg
inc
push
mov
mov
hlt
xlat
das
popa
xor
sub
push
ud0
push
mov
push
jge
and
cli
sbb
int
cmp
pop
std
cld
dec
adc
aas
arpl
sub
xlat
loop
je
mov
ss
jmp
xchg
or
data16
call
mov
pop
jb
add
mov
aad
icebp
ret
mov
lods
add
or
xchg
xchg
add
sub
mov
jne
push
jmp
xor
sub
fwait
mov
cld
adc
mov
xchg
stos
push
aam
stc
lods
or
inc
xor
push
nop
fdivl
sub
sbb
mov
lcall
mov
xlat
out
or
ror
inc
or
test
pop
test
mov
mov
jge
jno
inc
add
aad
xor
mov
or
rcr
push
fucomp
cltd
pop
add
popa
imul
add
lods
sub
push
sub
shl
cmp
jl
test
xor
fcoml
dec
mov
mov
push
hlt
bound
adc
fistl
and
test
and
aam
or
stos
sbb
in
pop
loope
xor
or
stc
lock
add
add
xor
test
imul
loopne
sub
sti
mov
sub
insb
fildl
mov
mov
cwtl
mov
mov
cltd
pop
mov
inc
nop
sti
repz
repnz
jmp
dec
pop
dec
mov
inc
or
std
gs
or
mov
sbbl
mov
jbe
jae
pop
cli
adc
sahf
pop
fdivp
pop
mov
std
push
or
add
notb
in
aaa
sub
js
jl
outsl
mov
pop
dec
sahf
and
adc
inc
jno
xlat
pop
sub
mov
inc
adc
nop
sbb
loop
aam
sti
mov
jp
es
aas
lahf
xor
iret
insl
dec
pop
lret
call
lret
lock
adc
loop
out
jmp
out
inc
or
lock
or
aaa
xchg
push
cmpsl
mov
pop
mov
cmpsb
xchg
push
iret
mov
pop
sub
cmp
scas
mov
orb
jno
call
push
mov
xchg
fs
add
lods
arpl
jae
enter
pop
mov
mov
add
icebp
xor
and
cld
test
mov
push
lcall
icebp
sub
out
xor
push
ja
mov
outsl
mov
arpl
xchg
mov
insl
incl
mov
rcll
iret
dec
in
cmpsl
fistps
iret
test
pusha
inc
pop
or
pop
mov
jns
idivl
ja
dec
cmp
jns
sbb
loopne
into
sti
xchg
xor
js
sub
inc
pop
lods
cmp
je
or
mov
push
enter
popf
fwait
dec
repnz
movsl
dec
jne
roll
fwait
pop
dec
dec
ja
mov
es
cld
ror
mov
jle
insb
and
fs
jmp
mov
xor
inc
bound
mov
xchg
jno
mov
push
dec
mov
fnstsw
mov
aaa
call
jnp
fstpt
jle
push
nop
inc
flds
sub
push
cmp
les
or
cld
jae
dec
mov
cmp
xchg
xchg
sti
pop
dec
xor
loop
xor
mov
sub
sub
inc
pop
add
andps
add
mov
pop
or
rclb
xor
mov
mov
dec
imul
cmp
lret
sub
inc
xchg
sbb
push
jo,pn
rorl
in
inc
fisubrl
pop
mov
stos
adc
addr16
cmpsl
mov
xchg
aas
cmpsl
jne
addb
movsl
int
sbb
push
add
mov
cs
or
fwait
pop
dec
push
insl
fwait
and
jne
es
cmp
and
xchg
cmp
pop
scas
call
mov
xchg
xor
cmpsl
lret
add
mov
add
lahf
push
push
sahf
movsb
push
push
push
mov
add
inc
in
pop
ret
jmp
andl
fistps
pushf
pop
insl
push
push
stc
insl
add
mov
jnp
out
aaa
mov
movsb
scas
mov
pop
dec
and
loope
add
subl
push
sub
push
mov
fwait
dec
cmp
cmp
mov
mov
rcll
repnz
jge
mov
or
xchg
or
lods
inc
mov
stc
dec
pop
adc
sub
fs
xchg
push
push
jo
push
mov
add
jmp
mov
fs
jmp
mov
add
and
or
fcomp
jmp
fstpt
inc
xor
cwtl
or
insl
sub
or
scas
and
mov
shlb
xor
mov
sarl
and
jg
inc
imul
mov
adc
ror
jle
or
leave
cmp
sti
adcb
cmc
es
mov
cmp
dec
in
in
mov
insl
mov
xor
push
jecxz
mov
cli
push
and
or
mov
xor
imul
xor
mov
pop
adc
ja
popa
stos
insb
lods
dec
mov
add
lods
xchg
or
stc
pop
mov
sbb
mov
push
xorl
cld
insl
imul
sbb
adc
xchg
fstp
sbb
and
add
pop
ds
pop
jno
data16
or
pop
loop
and
ds
mov
add
outsl
jns
aad
mov
nop
adc
nop
fsubrl
lahf
dec
pop
adc
sti
sub
jge
add
sub
xchg
dec
pop
dec
decl
in
popa
movsl
fbstp
mov
push
mov
addr16
pop
in
and
popa
das
cli
or
xchg
cmp
dec
add
mov
pop
jb
das
repz
sub
dec
fsubrs
sub
jae
jno
cmpsb
pop
push
test
pop
shr
inc
inc
push
xchg
psubw
sbb
jns
dec
mov
mov
mov
aad
ss
std
jns
outsb
pushf
pop
adc
jp
imul
cmp
jp
push
popa
mov
mov
xchg
mov
jmp
sarl
cmp
lea
mov
cwtl
jae
add
lahf
jns
fnstcw
dec
int
rcll
and
add
sbb
popf
fmul
jmp
loop
xchg
scas
xchg
sbb
adc
pop
call
mulb
jecxz
push
mov
push
ret
adc
jo
mov
mov
mov
xchg
mov
outsl
pop
cmp
xor
addr16
mov
pop
mov
leave
cmp
scas
cmp
pop
push
or
pop
dec
push
rcll
add
xor
fcomps
push
sub
lret
js
les
lcall
mov
push
push
xchg
mov
fsubl
jge
jnp
add
addb
cmc
jnp
sti
or
xchg
xlat
xchg
dec
lds
sub
in
es
in
adc
stc
into
cld
out
adc
and
xlat
pop
lea
dec
mov
push
rorb
sub
xor
inc
jns
fidivrs
fwait
les
push
pushf
xor
or
jmp
in
loop
and
sub
rorb
adc
jle
or
lret
xor
mov
push
jg
ja
push
js
fwait
xor
xlat
xor
mov
in
cmp
sbb
mov
hlt
and
out
mov
sbb
push
aas
push
lret
xchg
mov
fs
mov
push
into
ret
jmp
mov
inc
int3
int3
mov
in
ja
subl
xor
push
mov
jecxz
jmp
or
pop
pushf
mov
pop
push
add
adc
out
in
cs
xor
adc
pop
add
mov
sub
add
aad
add
pop
push
ror
mov
mov
nop
fwait
test
sbb
mov
loope
in
sbb
mov
daa
or
pop
nop
cmp
aad
test
sbb
in
jmp
dec
mov
xlat
jecxz
lock
in
jmp
mov
loopne
cmp
lcall
std
dec
push
jne
pop
dec
adc
or
sti
test
inc
mov
insb
add
mov
test
sub
sub
or
fisubrl
lret
xchg
and
jo
je
pop
dec
mov
mov
mov
aam
push
adc
mov
mov
outsl
in
js
cmpsl
and
stos
or
fs
mov
mov
jl
fnstcw
push
js
dec
sub
movsl
fisubl
pop
lret
ljmp
jp
inc
stos
in
dec
dec
stc
sub
mov
mov
in
in
pop
pop
and
js
cmp
lcall
outsl
and
mov
stos
inc
cmpsl
add
nop
pop
popa
add
lcall
pusha
ret
popa
out
mov
stc
daa
mov
lahf
loope
push
sahf
jb
mov
cmpsl
mov
push
xchg
cwtl
mov
adc
enter
xchg
push
mov
mov
shrb
mov
add
dec
cmp
and
xchg
jae
ficomps
jns
outsb
push
dec
jl
ret
sbb
lods
add
repnz
xor
inc
inc
insl
mov
ljmp
add
inc
pop
push
push
pop
sahf
fmul
push
push
in
cmp
sub
sbb
cs
in
jo
bound
push
cld
ret
gs
stos
ss
pop
inc
xlat
add
pop
sbb
shll
repnz
pop
inc
adc
loop
sbb
or
xlat
pop
mov
les
inc
push
cmp
xchg
ljmp
lret
aaa
or
mov
ret
enter
imul
lea
xchg
mov
dec
ret
mov
and
test
nop
mov
mov
push
mov
or
mov
xchg
pop
test
and
jmp
js
jmp
addl
or
mov
sub
pop
mov
push
jno
loop
loop,pt
push
add
jge
dec
pop
jns
loop
xorb
popa
enter
mov
shlb
lods
call
sbb
mov
pop
pop
int3
cs
jge
push
mov
xor
or
sets
pop
adc
ljmp
cs
add
mov
popa
dec
cmp
pop
mov
scas
xchg
inc
jmp
jae
pop
rol
loop
dec
jl
fidivrl
shlb
mov
imul
mov
cld
subl
mov
mov
and
popf
call
fsubrp
jo
out
mov
imul
and
fidivrl
movsl
push
or
mov
test
out
add
push
inc
jmp
dec
pop
dec
adc
xchg
pop
jns
sub
ja
rol
jae
mov
insl
leave
mov
cmp
push
stc
xchg
out
jae
xor
or
jg
and
repnz
lahf
sub
je
mov
aad
mov
lds
out
xor
or
sbb
or
sbb
stc
test
movsl
mov
push
adc
jp
test
pop
sbb
push
stc
inc
push
add
pop
jmp
clc
nop
push
das
std
dec
adc
mov
inc
inc
jno
pop
cwtl
int
aaa
adc
cmp
ret
test
jo
sbbb
cltd
cltd
ss
and
mov
outsb
xchg
push
clc
cmp
add
jno
pop
push
mov
ds
cmpsl
scas
bound
jl
xchg
mov
sbb
sbb
sbb
testb
scas
mov
pop
pop
xchg
dec
mov
push
jnp
insb
and
jns
mov
addr16
call
inc
cmp
stos
imul
loopne
ret
xchg
jmp
sub
addr16
xlat
pushf
fldt
popf
push
add
cmp
fimull
xchg
ss
cs
cmp
mov
jg
push
sub
pop
mov
push
mov
mov
outsb
cltd
js
pop
negl
outsl
mov
adc
sub
shl
push
pop
mov
iret
pop
lret
repnz
fwait
sbb
insb
adc
repz
std
add
pushf
call
shl
mov
push
xor
xchg
jp
or
cmpsb
das
pushf
call
xchg
pop
and
push
aad
sub
fsubrs
lds
push
xchg
mull
sbb
mov
movsl
fldt
into
add
pop
call
and
push
mov
add
jecxz
jbe
popa
xor
pop
imul
mov
sub
mov
popf
inc
mov
mov
cmp
fsincos
xor
dec
test
rol
das
jns
pushf
sbb
or
add
push
pusha
push
shrb
xor
cmp
mov
movsb
inc
cs
ret
mov
fnstenvs
adc
ficompl
lahf
ficoms
push
dec
xchg
mov
jp
rcrb
repnz
inc
loope
fwait
mov
test
push
jae
popf
ficompl
aas
pop
aad
pop
mov
xchg
repnz
outsb
out
mov
popa
adcb
mov
and
push
jmp
negb
cmpsl
into
popf
test
pop
mov
push
sub
or
pop
pop
mov
jge
jle
fxch
jno
daa
sbb
popf
cmp
mov
push
stos
fildl
lods
cmp
jnp
ss
decb
pop
sub
mov
jbe
dec
pop
enter
out
lods
cmpsl
jo
push
bound
lret
cmpsb
gs
daa
rclb
mov
jb
mov
lods
jns
xor
inc
ljmp
xchg
mov
xor
jl
adc
nop
ficoml
mov
lods
cmp
shrb
jno
pop
and
dec
xor
outsb
dec
adc
arpl
mov
es
push
jae
xor
mov
pop
rclb
xchg
aas
scas
mov
scas
outsb
aad
arpl
mov
cmpsl
outsl
push
clts
jge
ljmp
repnz
mov
lods
popa
xchg
js
push
sub
dec
incl
xchg
subb
cld
jmp
dec
sub
push
popa
fidivl
ds
inc
push
push
xor
push
testb
arpl
lret
push
bound
jl
jnp
mov
shlb
sub
popa
xchg
sub
dec
mov
mov
inc
cmp
cmpsb
out
cmp
pop
xchg
inc
insb
shr
pop
mov
mov
xor
rclb
das
mov
js
jo
mov
jne
fistpl
shll
add
jg
ret
cwtl
and
dec
adcl
insl
jnp
mov
pop
fnsave
mov
add
push
cs
cltd
icebp
ss
ret
fisubrs
pop
cmp
sub
movsl
hlt
pop
stc
rolb
repnz
push
xor
pop
cli
add
icebp
adc
repnz
fldl
loop
push
es
mov
xchg
dec
or
sbb
pop
push
clc
nop
jne
mov
cld
repz
jl
sbb
rorb
lods
xor
inc
dec
xor
mov
insl
cmp
cmp
lods
inc
scas
mov
dec
cmpb
jl
stos
push
jmp
negl
mov
jmp
mov
ret
jno
stc
dec
test
mov
jae
push
loope
clc
xchg
push
xchg
sub
sbb
cs
sbb
pusha
mov
cmp
cmc
out
adc
psubsw
or
sub
mov
jb
cmp
adc
jp
mov
cs
mov
mov
imul
dec
push
cmp
xlat
xor
xchg
push
mov
push
sbb
cli
js
xchg
pop
pop
jb
loop
mov
into
sbb
shrb
rcrb
imul
jmp
lods
test
mov
cmp
insb
arpl
sub
pop
mov
push
out
sahf
fbld
cmp
pop
movsl
sub
in
adc
jnp
or
adc
dec
xor
movsl
mov
aam
dec
lds
adc
mov
pop
mov
cmp
pop
movsb
outsl
cwtl
mov
sbb
inc
jo
inc
sub
and
lret
cmp
hlt
loop
sar
pop
popf
out
sbb
dec
movsl
push
mov
jmp
dec
mov
xor
pop
inc
push
xchg
sbb
mov
adc
inc
std
decb
js
imul
aad
mov
push
push
add
test
sarl
std
add
leave
or
xor
shll
sub
adc
stc
inc
xchg
das
push
sbb
fidivs
pop
fwait
mov
cli
jmp
xlat
lahf
or
dec
in
add
sub
int
dec
lret
jmp
inc
cmp
stos
add
mov
fldl
xchg
fldl
or
or
cmp
add
or
in
scas
test
or
sub
cmp
push
jnp
dec
das
sub
or
loopne
and
fwait
cltd
pop
jns
int3
jecxz
pop
fimuls
cwtl
or
inc
sub
dec
pusha
rorl
pop
inc
fistpll
jns
sbb
int
out
and
add
popa
lret
push
popf
cmpsb
mov
aas
dec
or
pop
inc
pop
mov
mov
test
ret
sub
lods
push
clc
adcl
push
clc
mov
and
cmp
ror
xchg
jae
movsb
or
in
inc
add
push
popf
ss
xchg
jnp
fimull
scas
roll
add
xor
std
pop
rolb
and
pop
roll
dec
inc
mov
push
dec
or
jne
push
mov
adc
lea
xchg
movsl
and
xlat
lods
stos
stos
inc
stos
dec
xchg
dec
push
jno
loopne
xor
or
xchg
sub
mov
repz
pop
mov
jns
or
xor
jns
mov
mov
mov
arpl
imul
int
test
pop
dec
mov
insl
ss
jle
dec
xor
add
xchg
push
movsl
movsb
inc
lahf
pushfw
adc
repz
mov
cld
ljmp
push
jbe
call
pop
mov
mov
adc
jmp
je
push
sbb
stc
insl
ljmp
sbb
inc
add
bound
into
add
clc
cli
sbb
in
fildll
add
fs
pop
movsl
mov
add
push
lea
fiaddl
inc
in
sbb
arpl
ljmp
and
sbb
fstps
push
nop
imul
push
push
sbb
cld
add
mov
adc
sub
jmp
or
add
call
popf
jae
adc
mov
xor
sub
rorl
pusha
stc
sub
mov
repnz
cwtl
dec
ja
xchg
fdivrs
test
rol
mov
sub
mov
icebp
jne
cmp
ss
bound
add
dec
mov
mov
or
mov
aaa
fucomi
add
mov
sbb
subb
pop
jmp
mov
rorl
mov
add
mov
xor
xchg
jmp
mov
iret
leave
addr16
test
add
xchg
ds
sub
xchg
popf
push
scas
pop
jmp
push
cli
test
movsl
add
rorl
loope
ss
test
xchg
lahf
push
push
jae
pop
xchg
sub
int
mov
arpl
inc
push
ja
insb
out
push
lock
jecxz
clc
inc
mov
shrl
aas
imul
push
pop
das
sub
out
js
loop
jns
add
mov
in
inc
and
or
arpl
cs
data16
test
ss
cwtl
sbb
outsb
jl
sub
jg
fldcw
scas
push
pusha
jecxz
pop
mov
sub
fs
dec
pop
cli
push
pop
fiaddl
std
mov
and
or
lret
inc
cwtl
lods
sar
and
pushf
or
adc
fildl
mov
fdiv
or
mov
pop
mov
jne
jns
mov
addr16
jge
xor
push
mov
test
pop
pop
fisttps
std
add
mov
je
fidivl
adc
pop
xchg
xlat
mov
push
xchg
sbb
insb
imul
popa
xchg
mov
lea
mov
shl
xor
mov
imul
std
xchg
xchg
sub
stos
cmp
push
loope
out
pop
or
stos
add
jno
inc
push
pop
sub
pop
or
sub
pusha
test
dec
cltd
clc
std
inc
xchg
sar
adc
int3
dec
and
mov
popa
js
lahf
sbb
divl
stos
jge
jl
decl
mov
pop
mov
add
jnp
repnz
cmp
dec
xor
test
mov
ficoml
cld
inc
inc
testl
pop
sbb
fisubrs
or
xor
mov
push
mov
rcr
cs
cltd
fnstcw
xchg
mov
sub
mov
add
inc
incb
pop
pop
cs
push
loop
popf
jg
hlt
pop
sub
adc
loope
sahf
es
inc
mov
sbb
mov
daa
push
cltd
and
dec
mov
rorl
movsl
pop
loop
adc
adc
xchg
cmp
or
sub
daa
roll
lods
shlb
pop
idivl
mov
ljmp
pop
cs
arpl
std
mov
inc
cmp
incl
cmpsl
mov
xchg
fdivrl
mov
xor
stos
adc
xor
xchg
sti
mov
pop
std
pop
mov
or
push
adc
rcll
mov
adc
in
scas
jns
adc
cmp
dec
add
fdivrs
push
sbb
pop
mov
mov
insb
or
mov
mov
xor
mov
push
xor
enter
dec
dec
inc
jecxz
push
ret
dec
std
push
icebp
cli
or
push
ds
movsb
mov
mov
push
mov
jmp
jl
fmull
rcll
dec
call
mov
mov
mov
rclb
icebp
fsubs
aad
fstpt
xchg
jecxz
fimull
jbe
pushl
jmp
pop
pushf
ret
mov
push
jno
pop
scas
test
lods
xchg
pop
subl
or
adc
xchg
cltd
movsl
mov
pusha
mov
pop
xor
jae
pushf
xor
xor
repz
push
mov
pop
ljmp
shrl
fcmovu
cmpsb
scas
jp
lahf
mov
in
and
push
lcall
hlt
sub
push
fdivs
adc
icebp
cmp
fwait
xchg
scas
xchg
push
in
push
dec
push
paddd
rcrl
les
cmpsl
mov
cmp
push
sub
lea
pop
dec
loope
sbb
sbb
arpl
xchg
inc
inc
shll
decl
repnz
les
push
push
or
mov
inc
js
dec
pushl
popf
sub
jnp
mov
or
pop
int3
test
sbb
data16
push
das
out
sbb
frstor
push
dec
and
or
pushf
mov
inc
push
push
ficoms
ret
test
xchg
push
jbe
mov
in
or
popa
rcll
lahf
lods
out
ss
dec
lret
lahf
rcrb
repz
adc
mov
mov
add
stc
push
movsl
test
mov
pop
loop
stos
xor
in
xchg
in
scas
aad
inc
ficoml
mov
int3
jne
cli
insl
and
cmc
test
dec
xor
push
inc
and
pop
push
or
mov
jg
dec
push
pop
out
xchg
fucomi
xor
aad
addr16
test
andl
cmc
add
mov
pop
int
gs
add
mov
mov
xchg
fcomi
or
push
pop
sbb
add
aad
mov
data16
pop
mov
lahf
xor
dec
jp
std
pusha
out
enter
leave
and
pop
aad
xor
clc
mov
pop
mov
mov
mov
aad
jae
mov
test
stos
outsl
movsl
notl
enter
pop
jns
or
hlt
xchg
insl
outsb
outsb
xchg
ret
or
lret
lock
loop
mov
loop
adc
into
fidivs
adc
ds
or
sbbl
inc
adc
sbb
sbb
mov
adc
cmp
sbb
mov
mov
dec
repz
insl
jo
bswap
mov
pop
cwtl
jnp
jns
test
imul
push
and
rol
cmpsl
test
dec
jns
add
ret
dec
mov
scas
pop
mov
out
adc
mov
sub
ror
int3
cmpsl
fldl
testl
or
sbb
insl
js
adc
pop
cmpsl
cwtl
test
aaa
testl
loop
dec
push
xlat
sti
pop
fstpt
pop
ret
orb
mov
lahf
xchg
into
mov
mov
fucomi
push
in
adc
popf
jo,pn
cmp
add
nop
xchg
ja
and
je
pop
mov
ljmp
pop
sub
mov
inc
inc
push
add
fcmove
sub
mov
loop
bound
pop
jl
pop
or
out
jp
jns
mov
lock
xchg
arpl
fs
fwait
jmp
icebp
mov
xchg
je
scas
je
push
inc
mov
or
roll
je
inc
inc
pop
inc
push
or
push
mov
in
test
ret
lock
add
gs
xchg
dec
mov
lret
mov
mov
mov
or
mov
cmc
iret
mov
shrl
push
and
inc
add
mov
add
xchg
insl
enter
sub
lock
insl
int
or
add
loop
faddp
xchg
fisttpl
cltd
repz
mov
mov
cmp
mov
mov
dec
adc
mov
decl
push
push
mov
sub
cwtl
mov
call
ja
jns
out
dec
mov
xor
mov
std
push
pop
andb
test
or
in
je
cmp
decb
pusha
aas
les
add
or
dec
jo
imull
fimuls
mov
cmp
xor
gs
divb
fiadds
std
add
out
adc
ficompl
mov
sub
call
pop
xor
loope
popa
adc
imul
mov
out
in
dec
adc
addr16
adc
int
scas
dec
das
and
push
lods
lods
lcall
mov
movaps
sbb
push
push
fidivrl
movups
xchg
mov
push
dec
sub
mov
pop
dec
fldt
lods
ss
scas
fadd
mov
rcrl
mov
and
sub
popf
and
jne
pop
push
pop
pop
call
adc
push
cmp
adc
adc
add
adc
aad
xlat
cmp
xor
mov
cwtl
cltd
sub
js
sbb
fiadds
mov
sub
insl
dec
mov
xchg
popa
xchg
xlat
xchg
inc
xlat
test
data16
or
cmp
idivl
or
sbb
mov
mov
push
mov
xor
add
add
xchg
fisttps
dec
or
aas
or
popa
call
adc
xchg
push
mov
movsl
mov
sub
cli
sbb
mov
ret
dec
arpl
imul
xor
ret
and
sti
jns
ds
stos
push
or
sub
rcrl
mov
scas
int
out
enterw
movsb
bound
pushf
mov
xor
insl
push
scas
jns
cmp
add
add
push
pushf
call
sub
mov
sbb
and
jo
nop
pop
inc
adc
mov
loop
sbb
dec
jnp
xchg
push
jno
fisubrl
scas
cmp
stos
sbb
ss
mul
sti
mov
test
lahf
mov
ret
fisubrl
cmpsb
pmaxub
push
sti
ss
les
hlt
ret
idiv
mov
jle
aaa
std
ret
test
push
inc
stos
sahf
mov
stos
pop
or
mov
test
push
push
pop
push
xchg
sub
lock
mov
mov
dec
or
pop
testb
or
fcmovb
sub
adc
dec
dec
push
jbe
jecxz
adc
cwtl
push
ret
xor
sub
cltd
jmp
mov
xor
and
pop
rorb
cmpb
push
pushf
cltd
sbb
les
mov
jae
sub
mov
das
xor
shrb
mov
cs
jbe
xor
sbb
push
cmpb
call
mov
lret
cmpsb
mov
sti
push
enter
loop
int
iret
int
sbb
fldl
pop
aaa
es
loopne
xor
sbb
aad
mov
mov
leave
mov
push
imul
jle
fwait
test
sti
mov
rorl
cmovg
dec
xchg
mov
xor
adc
add
sbb
imul
adc
sbb
inc
jmp
or
xor
and
and
in
inc
jbe
mov
loopne
fistpll
jnp
xor
loope
adc
dec
mov
jle
xor
add
sub
mov
bnd
push
jle
or
pop
hlt
pushf
jp,pn
push
jp
daa
sti
lock
enter
gs
sbb
sbb
push
mov
mov
in
out
call
xor
das
dec
cld
mov
jnp
fwait
mov
jo
adc
clc
lds
in
es
jmp
dec
fdiv
adc
adc
mov
ficomps
mov
out
into
std
xchg
pop
mov
gs
dec
push
push
pop
mov
sbb
xor
insb
and
mov
xor
mov
xchg
test
xchg
adc
jmp
adc
outsb
add
int3
fcom
call
aam
scas
andl
or
push
xchg
mov
ljmp
push
loopne
mov
cmp
xchg
xor
mov
jno
and
shrb
repnz
pop
add
daa
call
xor
mov
das
pop
notb
out
and
imul
std
push
std
cmp
out
xor
sbb
mov
push
pop
push
pop
mov
stos
xchg
das
int
inc
lods
fwait
dec
sbb
cmp
jns
pop
inc
sub
push
sub
rcr
add
jno
jecxz
adc
or
into
outsb
cmp
jnp
imul
mov
in
sub
pop
push
mov
cmp
fmull
test
push
fmul
or
ja
decb
daa
add
sub
push
aas
jo
gs
mov
mov
adc
mov
mov
adc
xchg
lods
enter
clc
pop
jbe
addr16
mov
loop
jo
mov
add
dec
leave
mov
push
pushf
enter
popf
mov
dec
jae
cmp
inc
sbb
test
idivb
ret
orb
movsb
mov
mov
mov
and
in
dec
add
fldt
lret
pop
les
dec
xchg
sub
aas
scas
cs
jmp
mov
sarb
jnp
pop
push
jns
cmp
cmp
fwait
out
cs
loop
push
je
je
sub
fildll
xor
jne
insb
pusha
add
mov
dec
cmp
dec
repz
jns
popa
mov
insl
pop
sub
xor
or
dec
mov
jmp
or
pop
fidivrs
repnz
ja
stos
lods
cld
call
and
mov
test
xchg
mov
sbb
jae
inc
sub
lahf
movsl
cld
das
das
sbb
test
jp
xchg
xchg
fnstenv
push
mov
xchg
mov
and
dec
ss
into
shll
sarl
imul
xchg
cld
jno
lcall
test
ss
mov
pop
shlb
pop
xor
sub
push
sbb
fstl
lods
sbb
jb
sbb
xchg
jne
je,pt
into
ret
addr16
xchg
mov
sbb
pop
andb
sbb
or
pop
mov
jl
cmp
mov
xlat
inc
nop
mov
push
sub
and
je
add
pop
insb
xchg
mov
cld
outsb
popa
fldt
xlat
fnstenv
fisttpll
and
shlb
and
sub
cmp
inc
xor
add
pop
imulb
call
mov
xchg
xchg
in
push
decl
xchg
push
iret
call
mov
push
dec
jae
xchg
jmp
mov
jnp
mov
in
mov
scas
pop
insb
xchg
cltd
push
dec
xchg
or
movsw
lock
lahf
mov
sti
into
jo
ja
sbb
push
adcl
pop
inc
push
mov
pop
sbb
mov
push
add
add
popa
fwait
daa
dec
ficomps
push
add
push
xchg
mov
mov
pop
bound
dec
mov
mov
or
and
mov
lock
add
cmp
int3
ljmp
jmp
int3
lahf
ds
jmp
ss
and
fucomp
xorl
insb
int3
sarb
sub
dec
push
movsb
xchg
adc
push
int
sbb
pop
insl
or
xchg
icebp
or
stos
cmp
jo
test
push
repnz
lods
jne
mov
mov
jbe
loop
xor
or
pop
mov
fbstp
pop
fstpt
std
push
in
fsubr
and
xor
pop
pusha
jbe
sbb
pop
fiadds
std
cli
dec
loop
mov
xor
test
sti
adc
popa
int
mov
push
or
sub
stc
or
mov
or
add
push
cmp
jmp
sti
mov
punpckhdq
sub
mov
dec
rcrb
stos
lds
es
mov
jecxz
movsl
mov
enter
pop
jecxz
add
insl
mulb
mov
and
lea
dec
jbe
insb
decl
cltd
mov
nop
jmp
and
mov
fdivl
aam
xor
outsl
dec
shll
int
pop
loope
aad
or
daa
stos
pop
int
fiadds
out
push
push
pusha
mov
lea
out
cmp
mov
push
je
push
jns
fcoml
mov
jae
cmp
jne
jno
xor
divb
mov
leave
pop
and
jae
mov
repnz
out
add
lds
mov
add
movsl
cld
xor
pop
inc
fcmovne
add
sbb
mov
dec
sub
xor
mov
dec
dec
push
test
pop
sub
sub
dec
out
fiaddl
cmp
divl
push
jmp
lahf
mov
pop
dec
lods
adc
nop
mov
fdivr
dec
pop
inc
mov
clc
jns
push
xor
pop
sub
mov
push
push
cmc
sbb
or
pop
jb
pop
inc
cmp
mov
or
push
mov
out
cld
xlat
sub
pop
std
aaa
mov
lds
repnz
or
add
mov
and
jns
mov
in
mov
sbb
push
outsl
cmpsl
nop
xchg
add
shl
pusha
dec
cmp
pop
pusha
mov
sub
mov
xchg
sub
outsb
or
mov
fldcw
sbb
push
mov
xchg
sbb
jo
rcrl
je
aad
js
xor
xor
std
pop
jnp
mov
pop
out
dec
sub
xor
push
sbb
mov
xchg
mov
popf
inc
and
dec
mov
faddl
mov
js
dec
mov
mov
sub
mov
jbe
cmpsl
push
cmp
adc
pop
clts
fdiv
xor
sub
sbb
sbb
pusha
lret
out
movsl
mov
xchg
mov
dec
es
fdivrl
mov
mov
push
out
add
xchg
sbb
push
in
fildll
mov
enter
pushf
cmp
mov
iret
inc
add
out
push
or
enter
pop
dec
ljmp
or
adc
sub
xchg
cltd
fwait
jnp
jns
cmp
inc
and
les
mov
scas
add
xor
push
adc
pop
add
aaa
jle
adc
mov
mov
mov
jle
lods
jae
mov
pop
sbbb
mov
jg
pop
repnz
mov
mov
mov
sbb
sarl
mov
loopne
cmp
or
movb
cmp
test
cs
shrl
cmp
mov
cmp
inc
inc
fstps
test
mov
arpl
adc
xor
and
adc
out
push
outsb
dec
jae
dec
repnz
loop
lret
nop
mov
mov
fwait
adc
movsl
mov
jae
addr16
jecxz
adc
aad
ja
push
push
fs
stos
or
clc
dec
cwtl
mov
inc
xchg
aas
dec
cs
mov
jbe
popf
in
add
cmp
push
cmp
cs
pop
mov
xchg
jp
pop
mov
sbb
push
ret
hlt
in
push
call
fs
cwtl
test
test
nop
dec
ljmp
fadds
pop
mov
mov
sbb
cmc
dec
mov
pop
and
pop
cmp
cltd
push
out
mull
divl
sahf
jecxz
or
stos
mov
dec
loop
mov
push
dec
pop
loop
popa
adc
shrb
bound
push
push
cmp
or
mov
add
sub
or
imul
mulb
xchg
nop
sarb
lret
arpl
test
xor
add
outsb
divb
xchg
dec
jb
es
aam
inc
fs
dec
rcrl
mov
xorl
inc
daa
loope
mov
fdivs
jl
lahf
shr
jbe
dec
pusha
mov
xor
repnz
jge
addb
in
stos
push
in
mov
repnz
fmul
jnp
or
stos
inc
xchg
push
cs
pop
int3
mov
cli
pop
dec
popa
in
cmp
mov
into
movsl
or
iret
fwait
out
pusha
cs
dec
or
sbb
pop
mov
aaa
imul
fiaddl
cmpl
outsl
mov
mov
inc
jo
cli
push
jnp
nop
xor
cld
std
pop
mov
movsl
enter
seta
cltd
scas
in
jbe
sbb
push
stos
sbbl
pop
jmp
and
cmpsb
scas
and
mov
out
mov
xchg
fsub
mov
pusha
sti
mov
xlat
std
stc
fs
mov
fnstenv
and
add
xchg
xchg
adc
sub
cmpsb
ljmp
pop
push
cmpb
add
lds
insl
adc
lret
jmp
sub
push
push
sub
lcall
cs
bound
fs
leave
mov
rcr
decb
in
dec
dec
popf
sbbl
ret
adc
arpl
mov
or
jnp
pop
scas
mov
sbb
mov
jge
mov
aas
adc
fwait
out
jp
in
push
pop
pop
test
sub
and
bound
mov
push
in
cmp
jae
pop
mov
stos
sub
sbb
movsb
in
jb
mov
add
dec
aam
mov
mov
sbb
shl
leave
sbb
mov
jbe
dec
ficompl
mov
jmp
mov
push
mov
sub
popa
push
lahf
stos
push
xchg
ror
out
jle
sub
pop
in
pop
sub
mov
repz
cwtl
adc
mov
daa
int
xchg
jae
inc
insl
inc
cmp
or
jl
scas
sub
clc
fstps
mov
out
push
cwtl
inc
nop
xor
xor
dec
push
sahf
mov
subb
test
inc
into
outsl
popa
mov
out
xlat
cmpsl
xchg
clc
insl
stos
fbld
pop
lods
stos
repz
jne
xchg
dec
push
lods
sbb
ss
fdivs
aas
in
fwait
cmp
leave
xor
scas
and
jp
pop
sub
stos
xchg
push
and
ja
imul
mov
xchg
inc
data16
and
outsb
pop
adc
mov
mov
adc
pop
mov
leave
inc
pop
jmp
popa
add
mov
pop
shll
repnz
jo
fwait
sti
test
mov
pop
scas
jge
add
dec
xor
push
shll
cmpsl
aad
shll
sub
inc
popf
sbb
cmp
xor
mov
mov
lcall
data16
adc
fucomi
mov
test
ss
mov
fsubrs
or
fistpl
cld
pop
je
stos
bound
cmp
mov
pop
mov
dec
jmp
mov
scas
popa
xchg
mov
iret
cmp
pop
sti
jae
gs
lahf
test
icebp
push
pop
mov
sub
and
sub
lods
jecxz
xchg
int
bound
rcrb
mov
mov
or
mov
imul
adc
lods
jns
pop
xchg
cltd
stc
fnstsw
add
mov
mov
sub
mov
nop
mov
int3
aas
jno
pop
movsl
sahf
mov
mov
insb
iret
sub
adc
xor
lret
mov
and
cmpsb
imul
mov
push
inc
dec
rorb
cmp
aam
sbb
inc
cld
popf
or
mov
add
aas
mov
pop
pop
aam
push
mov
pushf
sbb
imul
sarl
sbb
and
mov
sub
push
sub
fcompl
or
mov
add
hlt
cmp
cmp
add
in
cltd
add
fcomi
xchg
mov
mov
sbb
push
cld
movsb
add
cld
mov
mov
xchg
push
gs
sub
js
inc
xchg
push
inc
bound
addr16
cltd
fldenv
or
in
lds
stc
repz
inc
add
or
dec
repz
in
repnz
fisubl
test
jp
jbe
or
sbb
fadd
jbe
in
test
xor
ljmp
mov
inc
mul
or
pop
dec
push
jno
sub
test
imulb
inc
and
icebp
inc
pop
mov
jle
jle
sbb
loop
mov
aaa
lret
mov
cmpsl
push
pop
sub
xchg
hlt
test
mov
je
mov
cld
and
xchg
mov
push
stos
mov
and
adc
insl
adc
xor
movl
fwait
mov
stc
decl
mov
xor
lcall
mov
add
je
sbb
pushf
jae
push
dec
lahf
or
jg
jg
ret
mov
and
scas
add
aas
sbb
daa
sti
xchg
jno
xor
ds
ret
adc
stos
adc
push
or
cltd
mov
adc
movsl
xorb
stc
cmp
sbb
mov
pop
loope
mov
xor
xor
push
addr16
cltd
aad
add
sbb
lahf
mov
call
xchg
dec
xchg
dec
fs
ss
cld
jbe
icebp
fwait
out
jl
mov
pop
add
push
adc
lock
lret
mov
enter
pop
pop
push
pop
pusha
mov
push
sarb
xchg
lret
loopne
adc
mov
and
adc
fwait
mov
mov
fdivrs
jb
push
movsl
inc
push
adc
xorb
stc
clc
mov
loop
cld
andb
sub
test
xor
dec
fcompl
call
pop
js
jae
or
and
data16
jl
mov
sub
or
cwtl
scas
shrl
jnp
jmp
fbld
sub
xchg
or
jbe
mov
dec
xor
insl
sarl
pop
xchg
mov
iret
mov
fidivrs
invd
dec
out
inc
jle
pop
test
mov
bound
shl
std
adc
xchg
lret
and
pop
sti
jmp
sub
add
arpl
ljmp
call
loope
inc
and
mov
mov
movsl
push
jmp
lods
pop
dec
sbb
jmp
mov
xor
jg
rolb
std
cli
xchg
pop
or
pop
not
pop
mov
xchg
cltd
dec
jae
pusha
insb
jg
push
xchg
stos
std
jle
mov
ret
mov
addb
pop
aas
xor
test
ss
call
dec
insl
push
stos
push
iret
aam
pop
cld
add
insl
push
mov
jbe
mov
adc
adc
or
sarb
inc
sub
mov
dec
in
sub
dec
fisttpl
jmp
and
jge
aas
pop
es
pop
out
int3
pop
push
and
mov
xchg
pop
repnz
push
mov
mov
iret
push
cs
and
rcrl
loopne
lea
insb
pop
mov
aaa
fidivl
int3
mov
dec
jle
aam
decl
mov
mov
popf
cs
push
mov
xchg
jmp
ja
mov
inc
push
xor
jb
mov
cs
push
cld
bswap
xor
pop
or
jmp
lds
aas
jbe
sub
mov
jecxz
xchg
icebp
clc
adc
jle
push
cmp
lcall
mov
shlb
add
lods
pop
mov
push
jns
xor
xor
pop
pop
pop
test
xchg
lret
add
xchg
je
pop
popa
jnp
or
lcall
pusha
insl
es
add
fdivl
mov
ja
mov
or
push
bound
lret
adc
enter
sbb
and
inc
in
mov
sti
jmp
in
fistl
sub
loope
mov
les
popf
leave
cltd
dec
mov
xchg
jmp
std
xchg
mov
adcb
mov
adc
sub
fs
add
movsl
orb
adc
punpcklbw
fisttpl
sbb
ret
repnz
aas
mov
cmp
mov
push
cli
cmp
push
jle
push
popf
addr16
repnz
jmp
mov
dec
add
popf
mov
mov
inc
mov
ss
inc
nop
popf
nop
pusha
cmp
jo
out
shl
and
stos
adc
sbb
movsl
jg
mov
sub
jns
jmp
mov
aaa
xorl
outsl
ljmp
mov
out
pop
mov
sub
push
mov
inc
fwait
mov
pop
sub
stos
and
jns
cs
push
inc
sub
fidivl
shl
cs
not
or
sbb
mov
aaa
sbb
push
pushf
xchg
push
mov
movsl
rolb
test
js
outsl
and
mov
les
test
dec
int3
pushf
push
inc
ret
dec
insb
sub
leave
pop
add
add
test
sub
jae
mov
scas
sbb
push
dec
pop
cwtl
xchg
add
cmc
test
push
cmp
roll
nop
call
or
or
push
les
or
jmp
in
fwait
pop
outsl
dec
sbb
pushf
mov
loop
pop
adcb
mov
jbe
dec
mov
cmp
mov
into
sub
aad
jecxz
mov
and
mov
shlb
mov
sbb
icebp
cs
cmp
mov
es
push
fwait
subb
sub
jmp
dec
cmp
mov
pop
insl
test
out
std
test
adc
and
dec
push
and
lods
xchg
or
lcall
js
push
xorl
jle
jno
xchg
stos
rcrb
mov
and
jbe
jg
jl
fisttps
loopne
ret
push
cwtl
es
out
insb
std
cld
jns
mov
cmc
jns
cs
mov
xchg
pop
nop
cld
pop
pusha
jns
test
push
dec
add
cmp
das
push
sub
mov
cs
sbb
push
add
dec
mov
sbb
add
dec
int3
jl
sbb
push
js
adc
and
hlt
outsb
inc
mov
sbb
inc
cmp
sar
and
in
sbb
add
jbe
jns
dec
nop
ss
or
mov
push
das
pop
popf
dec
mov
hlt
scas
mov
push
xchg
dec
scas
sub
jp
or
push
push
mov
push
cli
jp
ds
adc
or
mov
mov
sbb
imul
popf
cld
and
test
mov
and
inc
mov
jmp
lods
mov
add
sbb
dec
add
xchg
insb
adc
jmp
sub
push
and
adc
stos
xchg
pop
push
lahf
cmpsl
arpl
jo
std
jmp
sarl
loop
pop
inc
or
xchg
mov
push
pop
btc
mov
lret
push
aam
pop
arpl
and
adc
stc
sbb
gs
pop
insl
add
jns
inc
adc
xchg
push
cmp
js
cmpsl
repz
push
dec
dec
ret
dec
mov
jl
sub
hlt
xor
sub
sub
mov
shll
stc
add
cmp
mov
out
nop
cmp
sbb
nop
jns
sbb
pusha
adc
sub
mov
pop
pop
lea
xchg
mov
fidivl
or
cli
dec
push
cld
stc
xor
jo
shll
fadd
mov
pop
jo
xor
mov
lahf
push
push
clc
sub
lret
jmp
mov
or
std
aaa
orb
xchg
push
imul
mov
pop
orl
ljmp
mov
mov
shll
inc
xchg
dec
xor
cmp
mov
mov
in
adc
stos
mov
orl
mov
sarb
ljmp
push
aad
cs
cmp
mov
dec
mov
cmp
fwait
rolb
sub
add
cmp
es
add
mov
repnz
jo
sub
sbb
mov
push
sub
popf
movsb
leave
push
sbb
cmp
ljmp
enter
fs
mov
ds
gs
cs
xor
out
add
test
xor
icebp
test
out
sti
adc
jne
dec
cs
inc
push
loope
mov
gs
shr
sbb
pop
sti
sbb
mov
sarl
push
inc
dec
pop
mov
mov
pop
sbb
pop
outsb
jns
ss
add
nop
and
xchg
fwait
cmp
in
int
push
loop
add
lods
mov
fwait
or
in
jb
orb
idivl
sub
shr
imul
cli
ret
std
pop
cmc
das
test
popf
cmpsb
outsl
add
inc
leave
push
mov
dec
mov
in
mov
fisubrs
add
mov
rol
out
in
mov
movb
adc
sti
xor
push
lahf
and
ss
cld
sbb
adc
mov
loope
stc
popf
xchg
xor
stos
xor
pushf
mov
hlt
arpl
mov
scas
out
sbb
mov
out
mov
pop
sub
mov
jae
mov
lods
pop
inc
push
out
test
into
outsl
out
or
add
andl
shrb
ja
mov
lods
movsl
in
movsb
test
and
dec
mov
shlb
adc
xorb
push
shll
mov
andb
push
adc
mov
and
sbb
xor
fimull
add
repnz
test
mov
test
stos
dec
fisubrl
mov
out
sbb
enter
pop
mov
push
out
pop
mov
inc
in
shlb
xchg
stos
ficomps
push
addr16
lock
mov
aad
mov
push
pop
roll
mov
popf
mov
jae
lret
xchg
adc
imull
aam
fnsetpm(287
sti
aam
repnz
andl
addr16
stc
pushf
adc
mov
inc
pop
mov
pop
rorb
mov
cmpsb
cld
cmp
or
mov
sub
outsl
or
out
nop
fidivrl
pop
leave
loope
mov
fists
or
push
lret
in
mov
dec
das
fsubs
cmc
push
pop
dec
or
add
and
std
fisubrl
out
mov
cmp
or
mov
mov
xor
mov
mov
pop
mov
notb
add
fsubrs
loope,pt
mov
aad
test
fidivs
hlt
pop
addr16
mov
push
sbb
out
xchg
pop
in
leave
jecxz
or
add
jns
outsl
popa
sub
stos
or
jg
ljmp
fisubrs
pusha
pop
adcl
fidivrs
dec
adc
jge
repz
les
out
inc
mov
roll
jnp
pop
sbb
mov
je
loop
in
movsl
adc
add
mov
mov
sbb
push
xor
std
pop
jne
fcomps
ret
jbe
adc
inc
dec
mov
lcall
fsts
sub
in
cmp
in
mov
inc
divl
out
xchg
pop
mov
or
stos
cmp
stos
push
prefetch
pop
popf
and
lea
jl
loop
pushf
cwtl
jno
repnz
adc
sub
lret
or
fstl
mov
xor
cmp
adc
fs
inc
mov
sbb
and
or
and
mov
xor
add
push
mov
or
mov
es
or
add
test
mov
cld
inc
push
mov
mov
inc
mov
ljmp
xor
insb
lret
lahf
adc
sbb
cmp
je
imul
ret
xchg
lcall
jne
out
cmp
dec
shlb
add
push
jbe
lahf
sti
nop
in
in
gs
pop
push
or
jg
loop
inc
movsb
decl
aaa
js
sub
sbb
js
or
xor
mov
std
sub
push
add
mov
bound
add
dec
jo
mov
pop
pop
decb
mov
push
cmp
xor
out
scas
movsb
das
or
in
insb
pop
and
inc
sub
addr16
out
pop
jb
sub
and
psubusb
sarl
sahf
jno
fs
pop
cmp
sbb
push
sbb
repnz
cmpsl
sbb
adc
arpl
or
sbb
mov
jae
jne
push
outsl
adc
jo
add
out
mov
andl
cmpsb
push
xchg
popf
add
or
imul
addr16
mov
call
int3
gs
orl
ss
or
nop
mov
push
adc
out
call
push
dec
repnz
jno
mov
jge
js
add
xchg
repnz
sbb
cs
lods
sbb
cmpsb
sbb
negb
dec
mov
lods
xchg
stc
outsl
aad
mov
mov
mov
mov
fisubl
xchg
mov
push
sub
arpl
dec
mov
shll
add
dec
jecxz
cld
mov
mov
fidivl
in
push
fmul
out
lahf
pop
fwait
mov
ret
adcb
mov
pop
jbe
lretw
dec
pop
xlat
inc
das
mov
jnp
inc
pop
push
xchg
pop
ja
push
push
sbb
fdiv
idivb
xor
and
lcall
stc
test
dec
push
adcb
das
cmp
ficompl
push
negb
das
aaa
das
sbb
and
mov
adc
or
sbb
ljmp
aas
ss
or
fldcw
nop
adc
and
enter
test
sahf
sbb
iret
in
sbb
fs
lret
out
mov
test
pop
pop
pop
pop
int
das
xchg
sub
imul
mov
push
mov
sub
stc
xchg
std
repnz
lods
push
mov
mov
push
ljmp
adc
adc
cltd
mov
mov
jp
sub
fs
outsl
dec
mov
pop
xchg
std
push
sub
sahf
sbb
bound
call
or
in
sub
scas
push
sub
add
aam
ljmp
jnp
popa
inc
jnp
push
or
mov
xor
ret
and
push
pop
orl
mov
xor
inc
jg
fstl
push
and
jbe
xchg
xchg
and
jns
pop
pop
fdivs
mov
fcomp
aas
dec
loope
ds
sti
dec
pop
push
xchg
and
aaa
int
insb
lds
sahf
xchg
sbb
push
pusha
jecxz
sbb
shrb
mov
push
cltd
lahf
cmp
popf
jns
adc
cld
pop
add
mov
insb
mov
aam
bound
sbb
and
jns
je
out
cwtl
popf
cld
or
addr16
push
cmp
adcl
inc
mov
fstpt
int
or
or
lahf
dec
inc
shrl
mov
mov
fs
pop
add
pushf
sbb
mov
dec
test
test
sbb
sbb
in
jmp
mov
mov
fisttpl
ja
lods
mov
jmp
push
cs
loopne
popa
loop
rcr
cld
mov
les
cmp
insl
push
jae,pn
fs
xor
into
pushf
xchg
push
pop
add
mov
sbb
xchg
xor
fcoml
mov
dec
add
add
mov
jbe
push
pusha
in
test
adc
les
data16
adc
sub
mov
xchg
test
xchg
lds
in
xor
cmp
lahf
and
fs
test
cmp
cli
sbb
sub
pop
jle
cli
repz
lret
ljmp
mov
dec
sbb
das
mov
mov
fnstcw
add
test
adc
mov
jp
jne
lods
cs
gs
lods
add
xor
pop
cmp
leave
testb
jp
test
dec
xchg
iret
popa
arpl
inc
add
or
mov
jno
sbb
movl
mov
jecxz
pop
cli
clc
imul
mov
mov
adc
cli
loop
xor
inc
pop
sub
std
or
cmp
push
sub
aas
pop
lea
sti
pop
in
push
ljmp
scas
std
shufps
mov
push
add
inc
shll
pop
inc
insl
in
aaa
and
movsl
mov
loope
push
mov
push
test
out
xor
push
mov
jns
fwait
int
xchg
aas
andb
sub
sub
cmp
and
mov
pop
iret
lahf
pop
or
or
mov
out
aad
and
lahf
pop
sub
popa
fstpl
dec
ret
add
jl
lds
xor
aaa
aam
push
test
push
imul
add
jns
inc
push
jo
outsb
mov
cmovp
cmp
sbb
push
jge
and
add
fidivrs
dec
adc
jno
mov
push
in
sub
stos
mov
lock
sub
sub
enter
lods
sub
or
sbb
and
or
ljmp
pop
adc
in
aad
divb
xor
std
xchg
out
enterw
rep
xchg
pop
popf
repnz
mov
push
dec
mov
inc
jecxz
cltd
mov
mov
adc
mov
dec
negb
nop
imul
push
test
adc
sub
mov
inc
jo
or
out
sbbb
mov
cs
fidivs
xchg
lahf
cmp
adc
push
sbbb
xor
xor
aam
shl
mov
mov
mov
mov
or
sbb
cwtl
or
std
sbb
mov
fisttpll
jmp
icebp
sub
out
repz
xor
or
pushf
lea
and
dec
daa
sbb
adc
insb
jg
ja
pushf
stos
dec
shlb
sub
dec
int3
push
mov
mov
lds
movsb
fs
jle
fmul
push
xlat
mov
push
xor
mov
mov
stos
lcall
cmc
stos
push
or
adc
adc
pop
mov
cltd
mov
xchg
push
push
adc
xchg
dec
mov
push
loope
inc
in
inc
jns
pop
pop
stos
mov
adc
push
sbb
aad
lock
ss
add
negb
popf
and
roll
cltd
add
jp
xchg
jo
push
repz
xchg
aad
pop
lret
loope
add
mov
cmpsl
cmp
addb
rolb
adc
icebp
and
mov
pop
imul
mov
fmull
rcl
push
outsl
and
xchg
shll
adc
inc
pop
fs
jge
sbbb
out
push
sub
sarl
sar
stc
or
jo
push
popa
sub
mov
mov
xor
out
sti
jo
out
inc
xchg
cmp
int
popf
lds
ljmp
imul
jp
pop
push
sub
push
loop
loop
mov
push
faddl
leave
dec
mov
or
fadds
jmp
loopne
ja
push
fcoms
jno
pop
fdivs
dec
sbb
testb
ss
or
add
or
pop
sbb
mov
and
mov
dec
ljmp
xor
pop
adcl
loopne
popf
rolb
fidivrl
cmp
mov
inc
insb
mov
lret
dec
pop
xlat
mov
adc
pop
add
dec
insl
push
lds
cmc
pop
dec
fdivrl
repz
test
xor
iret
inc
inc
mov
xor
or
daa
xchg
xor
dec
gs
xchg
test
pop
or
mov
cli
sti
repz
add
push
loopne
les
lock
or
adc
out
adc
test
cmp
xchg
mov
pushf
mov
push
movsb
dec
mov
ljmp
push
fidivrl
pop
popf
adc
push
dec
jl
imul
xchg
pushf
mov
fidivrl
lods
les
cmpsl
cwtl
loop
test
push
insl
mov
fistpl
mov
and
sub
inc
cmc
out
loop
mov
jp
push
rclb
xor
sti
mov
push
pop
jno
loop
test
push
mov
push
gs
push
sti
cmp
hlt
pop
sbbl
dec
jmp
jge
mov
mov
jae
sub
push
lahf
push
subl
sbb
cmpsb
push
mov
sbb
movsl
mov
dec
pop
imul
repnz
test
inc
mov
cmp
fisubrs
sub
jmp
adc
lock
rorl
aaa
and
push
rcrl
cmp
mov
fs
cld
sti
scas
inc
lcall
xchg
push
stos
mov
cs
xchg
xchg
and
loop
pop
push
mov
je
shll
mov
mov
fbstp
add
dec
push
mov
std
adc
push
lahf
dec
call
adc
cli
lcall
or
je
add
cmp
aaa
rol
push
cltd
lfs
xor
fwait
jmp
fwait
sarl
sti
daa
ficompl
mov
inc
mov
mov
jb
std
call
das
pop
jge
add
orl
push
mov
pop
mov
int3
lcall
adc
xchg
xor
xchg
jae
mov
jno
ljmp
psubsw
stos
sbb
in
frstpm(287
cmovnp
out
xchg
pop
std
dec
and
in
insl
inc
rcr
aad
shll
lds
xor
pusha
pushf
mov
push
xchg
sub
enter
mov
inc
cmp
mov
pop
add
sbb
xor
dec
mov
add
xchg
pop
lcall
push
test
insb
call
fnstcw
push
adc
sbb
adc
mov
add
mov
test
pop
mov
jp
sub
mov
cmpsl
or
arpl
movsb
shlb
cmp
jne
mov
leave
cmp
shll
divl
fs
and
adc
fmull
imul
movsl
aad
test
dec
popa
mov
rclb
out
push
ficompl
sbb
loopne
aam
sarl
sbb
mov
mov
jno
sahf
jmp
adc
xchg
mov
negl
jnp
popa
loope
adc
add
sub
insb
sub
fwait
out
movsb
in
int3
test
sbbl
jnp
sar
xchg
addr16
sti
sbb
push
out
je
dec
inc
xor
gs
movl
rcll
ret
add
jbe
fidivrs
cs
and
pop
mov
adc
out
mov
or
fnstenv
jno
xor
push
mov
andb
rorb
stos
mov
std
add
popa
dec
hlt
insl
testb
aad
mov
mov
outsl
arpl
rorb
lahf
std
mov
sarl
stos
dec
adcb
sbb
dec
mov
mov
or
popa
cmp
ljmp
insl
xchg
loopne
out
pushf
add
js
inc
pop
sbb
pop
add
test
insb
jg
inc
cs
fstl
push
popa
gs
pushl
stos
mov
aad
ret
mov
fnstenv
sbb
add
mov
daa
xor
aam
idivb
hlt
pop
cmp
ljmp
jmp
push
fisubrs
cli
fwait
dec
adc
or
out
int
sub
pop
add
cmpb
mov
ret
mov
cld
cltd
mov
xchg
xor
divps
jb
mov
sbb
push
add
dec
in
lods
popa
mov
or
sub
adc
test
je
cmp
mov
insb
cmp
insb
aaa
data16
outsb
js
leave
sub
arpl
ja
sub
xchg
out
lods
xor
pop
and
test
add
movsl
lret
aad
sbb
push
sbb
into
mov
mov
push
jecxz
outsb
imul
pop
es
outsl
fwait
outsl
movsl
mov
test
sub
int
pop
pop
sbb
ljmp
insl
jge
ss
les
loopne
or
jl
bound
imul
sub
jns
or
movsl
sbb
dec
mov
cld
adc
sbb
adc
sub
or
pop
loop
lcall
add
sbb
push
jno
mov
shll
xchg
sahf
push
ja
jne
push
jno
xor
mov
pop
nop
dec
mov
sub
dec
lock
xchg
scas
inc
inc
mov
cmp
mov
xorb
push
cmp
push
sub
mov
sahf
pop
loope
mov
jo
adc
cmp
mov
and
mov
jns
mov
xor
clc
push
roll
mov
movsb
sbbl
inc
xchg
imul
dec
cmpsl
fs
bound
gs
cmp
shll
mov
jo
xor
add
xchg
inc
push
sbb
xor
mov
jle
cld
adc
and
sarl
jle
pushf
jle
cmp
jp
push
fldenv
bound
mov
or
jb
jae
or
cs
pop
inc
lods
mov
and
fstps
loop
in
inc
arpl
mov
jb
xchg
push
jp
popf
insl
loop
sub
dec
push
add
xor
dec
adc
out
pop
mov
cmp
rcr
jo
add
pushf
aad
jmp
mov
pop
fldt
mov
and
adc
pusha
and
xchg
xchg
repz
inc
je
leave
jno
add
leave
and
stos
in
cld
inc
fistpl
or
movsb
fisubs
jbe
mov
inc
inc
bound
popa
fwait
jecxz
call
lret
negb
repnz
nop
pop
and
hlt
in
pop
sbb
xchg
out
add
ljmp
divl
dec
lcall
dec
aaa
and
jne
fs
push
enter
xchg
rolb
adc
push
pop
pusha
pop
leave
imull
dec
pop
mov
pop
adc
pushf
mov
nop
shll
fisubrs
imul
das
add
ret
mov
aam
sbb
push
outsl
mov
mov
cmp
scas
xor
into
ss
out
lods
gs
mov
test
or
es
fmulp
jnp
cmp
mov
mov
and
add
cs
std
dec
insl
shll
mov
into
push
dec
ret
movsb
xor
push
popf
aaa
jns
push
or
lods
fidivrs
bound
enter
fadd
sbb
scas
push
xor
lcall
fucomi
push
les
scas
jo
pop
push
add
pop
push
mov
lahf
xchg
jne
mov
ja
arpl
push
and
mov
cld
stos
xchg
pop
add
cmp
add
repnz
rolb
xchg
mull
imul
jnp
add
sbb
fsts
inc
inc
mov
fstl
mov
pop
sbb
push
ljmp
mov
pop
loope
xchg
adc
pop
ss
hlt
and
cs
jb
popf
cmp
adc
add
int3
popa
mov
mov
mov
rorb
sbb
jo
not
adc
inc
stos
inc
rorb
sbb
push
stc
push
push
aaa
push
sahf
sti
sbb
adc
aam
push
insb
or
mov
out
pusha
xlat
ljmp
lret
nop
ljmp
jbe
xchg
jae
mov
popa
mov
movsl
mov
adc
add
dec
inc
cmp
out
pop
cmc
cltd
adc
test
mov
cltd
sub
push
adc
insl
in
jb
pop
int
mov
gs
es
jp
xor
insl
jmp
repnz
sti
pop
int3
cmp
push
push
rcrl
cld
insb
pop
dec
cmp
adc
adc
shll
mov
sub
jae
je
sub
mov
loope
pusha
and
xchg
add
xor
pop
pop
xchg
mov
rol
adc
xchg
mov
mov
cs
push
fsubrs
cmp
movsb
dec
jle
mov
xor
xor
movsl
xchg
ja
sbb
mov
lds
or
jno
das
adc
daa
test
pop
sahf
dec
loopne
scas
lods
rcr
mov
jp
cmovb
push
das
mov
mov
les
xorl
movaps
or
fdivp
sub
mov
jns
xchg
lds
mov
in
cmpb
mov
jb
adc
jb
mov
lds
out
mov
push
inc
cwtl
insl
stc
cmp
xchg
push
inc
jmp
dec
pop
aaa
mov
pusha
mov
lahf
adc
mov
xchg
in
mov
mov
sub
pushf
cli
das
cmp
sbb
mov
and
cmpsl
popa
pushf
in
push
cmp
shrl
negl
cltd
daa
cmpsl
adc
push
jecxz
fmul
icebp
jge
repnz
cli
jne
insb
jecxz
sub
add
push
jmp
xor
dec
inc
xor
sub
pushf
mov
lret
and
in
inc
mov
int3
lcall
mov
dec
mov
cmpb
fcom
notb
in
das
jne
enter
fiaddl
adc
insb
mov
add
add
push
es
sub
aam
sbb
sub
jne
mov
leave
adc
nop
push
sub
mov
inc
fisubl
jns
cmc
fld
xchg
and
rorl
add
adc
jo
subl
mov
test
inc
pop
push
js
aad
jp
lahf
pop
lods
mov
in
mov
hlt
xchg
pop
outsl
or
mov
mov
adc
jle
mov
mov
mov
adc
xor
cmp
jne
push
mov
aam
mov
sti
adc
mov
loop
pop
imul
lods
inc
push
inc
pop
sbb
sahf
stos
or
repz
into
dec
ljmp
add
xor
scas
xorl
rol
imul
mov
mov
cmc
dec
push
xorl
inc
cli
imul
sub
and
add
sbbl
test
jns
inc
loop
push
test
mov
adc
sub
dec
push
adc
sbb
mov
stc
in
sub
jle
or
adc
mov
sarl
aad
sbb
dec
add
sbb
or
int
and
pop
addl
mov
inc
xor
loope
xchg
adc
pushf
fs
mov
stc
push
xchg
popf
sbbl
xchg
scas
jbe
adc
xchg
orb
sub
jge
mov
xor
data16
mov
and
test
add
pop
dec
mov
jae
dec
inc
sbb
push
xorb
xor
inc
movsb
ss
adc
std
xchg
shr
lods
xchg
stos
xor
mov
aad
fwait
push
sbb
lret
mov
mov
les
mov
mov
xor
pop
fcoml
cmp
loope
ss
sbb
pop
adc
pop
pop
mov
clc
or
shr
sbbl
iret
loop
sbb
pop
mov
loop
mov
sub
xchg
mov
lds
jmp
mov
aaa
addr16
jmp
ret
or
jne
aad
icebp
lods
hlt
repnz
pop
cli
fstl
push
mov
lds
inc
jmp
pop
fs
sub
sub
mov
in
and
xor
dec
adc
icebp
mov
scas
push
lcall
push
icebp
xchg
jbe
jae
adcb
mov
stc
lahf
mov
dec
jmp
scas
lods
mov
repnz
enter
pushf
sub
pop
pop
lret
mov
call
pop
xchg
mov
jb
int3
lret
insb
sbb
scas
jle
jno
inc
jmp
cmp
add
pop
shll
and
mov
js
sub
daa
insb
icebp
stc
push
jns
xchg
repz
xor
push
xor
adc
push
cmpsl
push
mov
outsl
mov
xor
mov
mov
std
shll
cmc
pop
stc
sbb
lcall
out
xchg
and
jle
shll
roll
clc
pop
dec
inc
pusha
sarl
or
test
inc
and
test
sub
into
arpl
pop
mov
mov
movsl
or
into
popf
xchg
push
sbb
add
sbb
call
jnp
sub
sub
push
lahf
mov
xchg
mov
jne
das
insb
mov
jmp
inc
mov
loope
cmpsb
mov
stc
cmpsl
mov
pop
js
and
jl
mov
adc
rcrb
mov
add
insl
stos
nop
fs
pop
sbb
mov
adc
cli
pop
sub
fnsave
mov
addb
lcall
sbb
adc
xchg
sub
pop
gs
js
mov
insb
or
jl
add
lock
cltd
sti
adc
fistps
mov
mov
outsb
mov
and
out
cmpsb
cmpsb
aas
lret
cmp
sbb
mov
sbb
push
call
lret
ljmp
test
or
shlb
sub
test
inc
sub
cmc
cs
out
in
in
repz
decb
insl
stc
in
nop
push
pop
mov
xlat
and
fwait
mov
push
add
push
cltd
cltd
push
jmp
sahf
push
lahf
mov
popf
jg
mov
in
pop
cld
cld
lea
sbb
out
dec
sbb
jne
subl
gs
movsb
inc
xor
or
jns
xor
ds
push
sbb
pusha
sbb
cmovnp
jns
arpl
sub
adc
pop
gs
lea
das
or
ds
xor
cld
pop
xchg
pop
std
rorl
and
add
inc
push
dec
mov
cld
outsb
push
lods
push
sbb
adc
mov
mov
lcall
dec
mov
mov
mov
xor
mov
push
repnz
in
mov
nop
push
gs
imul
lock
cmpsl
vpmaxub
call
jbe
dec
fstpl
xor
push
push
movsl
pop
cmp
inc
push
sbbb
out
push
pusha
inc
adcl
je
das
push
mov
bnd
sbb
xchg
repnz
call
jp
xor
and
cmp
push
jmp
stc
and
sahf
lret
push
mov
mov
cwtl
in
stos
ds
popa
lcall
cltd
fbld
xchg
out
mov
jmp
cmpsb
mov
sbb
mov
xchg
outsb
add
imul
mov
sar
sub
sbb
xchg
popf
test
es
or
fcmovbe
fmull
sahf
mov
sub
dec
cs
rcrb
popa
push
and
ljmp
popf
inc
push
call
mov
pop
mov
lods
and
cmp
out
inc
sbb
add
pushf
cmp
and
mov
mov
int
mov
sarl
sub
outsb
add
sub
or
pop
mov
aaa
in
in
cmp
test
push
cmc
push
sti
cli
sti
mov
sub
pop
hlt
insl
lahf
and
fsubr
push
mov
mov
pop
jo
dec
mov
dec
add
add
xchg
insl
xlat
lcall
xchg
add
nop
bnd
inc
div
push
cs
lahf
lea
sbb
add
cmp
es
and
dec
cld
mov
insl
imul
sub
cmpsl
stc
ljmp
loopne
fwait
es
lahf
and
stc
sti
inc
mov
ss
or
and
adc
sbb
lds
pop
push
or
xor
inc
sbb
mov
ret
dec
mov
mov
ja
into
dec
insl
inc
js
das
insb
sub
aaa
add
pop
pop
xor
sbb
nop
add
or
xor
adc
ficoms
mov
xor
adc
test
leave
jmp
insl
dec
jmp
andl
inc
and
xchg
ds
push
popa
dec
add
xor
outsl
jp
leave
add
mov
adc
cld
fadd
dec
repnz
dec
or
dec
int
arpl
arpl
std
out
inc
jmp
inc
daa
add
push
iret
sub
inc
pop
cmc
mov
mov
cltd
push
pop
in
pop
jns
jo
xchg
test
mov
or
pop
adc
add
fmulp
xor
es
stc
adc
loop
outsb
and
gs
inc
sub
out
mov
mov
mov
fidivl
movsb
mov
movsl
cmp
cmp
fisubrs
imul
or
lock
decb
fidivrl
fbstp
xchg
pop
jle
fidivs
arpl
sbb
int3
cli
sub
cmc
in
push
xchg
mov
mov
jae
ficompl
lods
adc
jns
inc
jmp
lods
rolb
cmp
stos
cmp
sbb
rorl
sarl
mov
fchs
popf
mov
hlt
dec
sti
in
adc
inc
das
test
aas
pop
in
adc
lcall
sub
mov
icebp
mov
mov
out
push
cmpsb
cli
ja
fisubrs
cmp
or
adc
jbe
jmp
add
fstpt
hlt
mov
dec
and
dec
frstor
les
or
rolb
out
dec
sbb
push
mov
jecxz
cld
stos
pop
ds
jmp
lock
scas
repz
push
scas
xchg
lods
mov
inc
lahf
jp
pop
or
push
xchg
mov
sbb
xchg
cmp
cmp
in
push
mov
stos
pop
fcompl
adc
xor
scas
call
push
pop
xchg
cmp
cmp
movsl
xchg
push
mov
xchg
lods
mov
adc
lcall
inc
xor
cmp
and
dec
dec
sbb
adc
mov
movsl
popf
add
mov
or
pop
lea
mov
xchg
push
or
pop
dec
and
mov
mov
cmpsb
adc
fdivrl
jbe
fisubs
mov
out
aaa
cli
jae
jo
push
xor
xchg
xchg
push
fstpt
addr16
nop
mov
les
icebp
mov
test
es
inc
lret
pusha
out
cmp
or
or
outsb
push
dec
daa
push
xor
sub
inc
add
mov
das
data16
mov
aam
je
push
insl
ja
pop
push
sbb
push
xchg
adc
jmp
sub
cmp
pushf
fs
lds
loope
in
shl
mov
bound
push
lock
lods
enter
sbb
repnz
push
mov
icebp
cmp
xor
stos
jno
adcl
xor
sbb
repnz
andb
mov
imul
lods
inc
jecxz
pushf
push
mov
cwtl
cmp
mov
mov
mov
push
movsb
pop
inc
scas
jp
pusha
repz
cli
ds
addl
inc
in
pop
inc
repnz
lods
mov
mov
fmull
jg
jns
cld
mov
mov
outsb
xor
seto
push
mov
jb
popf
inc
lcall
sahf
inc
imul
dec
sti
jae
add
mov
imul
mov
mov
cmpsl
mov
ficompl
aad
adc
pop
push
lods
pop
pusha
fsincos
call
xlat
jmp
pop
ret
cmpsl
lret
push
mov
in
fisubrl
outsl
movsl
leave
push
dec
rol
pop
mov
pusha
aaa
mov
mov
jnp
jle
mov
mov
sub
aam
sbb
scas
dec
add
add
clc
push
mov
std
xor
in
das
or
inc
and
cmp
je
mov
mov
jbe
xchg
mov
shrl
sbb
popa
xlat
stc
mov
mov
loop
fidivrs
xchg
loope
jbe
pop
ss
bound
adc
dec
out
jle
mov
xchg
aam
push
ss
test
fsubrp
es
adc
mov
stos
std
adc
js
loop
insl
mov
add
sahf
jle
adc
sbb
mov
push
mov
lret
or
enter
jno
xor
push
data16
or
pop
xlat
fistps
out
mov
out
cld
stos
inc
xchg
sbb
mov
outsl
sub
mov
dec
out
jne
outsl
les
in
xor
test
inc
sub
mov
pop
ret
arpl
mov
aam
loopne
es
repz
shrb
push
add
jnp
sbb
test
sbb
jmp
jmp
sbb
pop
sar
cs
and
add
les
mov
cmpsb
mov
xor
jb
movsb
daa
negl
jne
in
push
bound
es
fldl
icebp
insl
popf
loop
jmp
mov
mov
cltd
inc
mov
cmp
cmp
xor
cmp
test
mov
jo
push
sbb
lret
out
jb
push
in
pop
mov
sub
roll
test
fmul
xor
insl
add
lea
adc
insb
xchg
xor
fdivrs
call
sti
ss
adc
mov
movsl
or
or
punpckhwd
jo
pop
xor
loop
lods
subl
inc
mov
gs
push
insb
ja
incb
mov
mov
mov
sbb
xor
cmp
ret
cmp
int3
adc
jns
in
hlt
and
mov
cmpsl
and
cmp
cmp
lcall
cld
xchg
rcl
or
subl
add
xchg
das
sbb
xor
pop
cmpb
dec
je
sub
push
sbb
xor
jmp
iret
nop
sahf
jge
dec
xor
adc
push
pop
call
enter
jecxz
dec
stc
inc
jno
cmp
adc
mov
jg
movsb
push
das
push
and
mov
dec
push
xor
shl
add
jo
ret
sub
shrl
jae
mov
dec
dec
and
add
mov
push
imul
dec
rorb
sub
mov
xchg
repz
sti
int
pop
mov
mov
sub
xor
dec
lock
lds
dec
or
into
insb
xor
lods
jg
das
fcoml
hlt
inc
fiaddl
mov
pop
inc
mov
sbb
sub
icebp
and
mov
sub
mov
mov
test
pop
fs
lret
mov
pop
dec
repnz
inc
addl
cmp
dec
dec
inc
adc
sub
add
andnps
sbb
or
mov
addb
pop
jmp
jmp
outsb
int3
xchg
push
and
bound
push
popf
nop
fstl
mov
cli
inc
push
imul
cmp
rcrb
inc
push
jecxz
xor
mov
sub
jae
ja
jno
jecxz
das
fbstp
aaa
mov
call
rolb
cld
js
cld
push
jmp
cmpsb
adc
sub
mov
mov
push
gs
sti
imulb
mov
adc
repz
xchg
orb
pop
cmp
jne
push
push
xchg
dec
mov
pop
idivb
inc
sbb
adc
xor
mov
cmp
sbb
shll
push
xlat
push
or
dec
sub
adc
cmp
enter
pop
lock
sbb
out
or
fcmovbe
inc
push
mov
pop
cmp
iret
inc
lret
notl
pop
sub
loopne
pop
push
adc
scas
push
xchg
mov
call
paddsb
dec
mov
arpl
pop
push
sbb
loop
dec
mov
and
jge
mov
add
in
and
cltd
xchg
jp
xor
mov
sbb
das
xchg
cmpsl
lock
jmp
sub
and
imul
dec
or
outsl
dec
push
movsl
fs
pushf
xchg
repnz
or
or
ficompl
gs
pushl
rol
notb
sub
jne
pop
xor
adc
outsb
push
stos
les
mov
clc
push
pop
jmp
fidivl
jne
mov
push
imul
fstl
xchg
iret
aad
mov
daa
mov
subb
or
xor
insb
xchg
cmp
imul
or
mov
mov
cmp
xlat
jmp
bound
xchg
test
cmp
repz
xor
pusha
jns
dec
stos
adc
mov
outsl
bnd
les
js
out
fadds
cmp
lods
xchg
addr16
add
clc
jmp
add
mov
sub
ret
dec
pop
dec
xor
jno
aad
dec
sub
fistl
inc
std
fdivr
pop
fistpl
in
incl
xchg
dec
xchg
cmp
jb
enter
and
ficoms
aad
adc
fs
dec
xchg
jne
out
jno
pop
inc
dec
movb
mov
popf
lods
add
lods
xchg
push
shl
sbb
adc
loop
adc
xchg
sub
adc
ljmp
adc
cli
js
loop
imul
xor
cmp
jnp
push
cmc
rcrl
mov
ja
jp
jp
adc
jmp
mov
push
adc
lcall
inc
pop
test
adc
jne
jle
xor
jl
mov
shlb
inc
jl
arpl
out
shll
ss
mov
xor
mov
inc
mov
or
out
rolb
mov
xchg
dec
adc
hlt
loope
mov
xchg
dec
pusha
cmp
sub
sub
pusha
das
aad
pop
mov
and
fnstcw
adc
mov
mov
int
dec
mov
mov
mov
inc
or
addr16
mov
push
loopne
xor
pop
adc
push
adc
jno
out
into
push
or
rclb
or
inc
mov
pop
lahf
cmp
mov
cmp
vmwrite
push
mov
push
loopne
daa
lcall
lea
decl
and
adc
data16
mov
push
movsl
push
fiadds
jno
xor
add
cld
xchg
ficompl
mov
mov
insl
mov
fucompp
les
inc
or
lahf
les
cmpsl
sbb
pusha
enter
jb
adc
add
sub
dec
fildl
cli
sbb
fidivs
iret
xor
mov
pop
mov
enter
inc
int3
popa
fists
aam
push
fs
pop
ret
dec
repnz
nop
sub
push
mov
sbb
mov
sub
push
fcmovb
pop
fwait
sarb
outsl
jns
sti
jge
lahf
das
es
stos
cli
inc
pop
mov
pusha
xchg
in
mov
xchg
mov
enter
fidivs
xor
mov
and
aaa
sub
fneni(8087
enter
pusha
movsb
in
add
rcrb
sub
mov
mov
push
inc
test
push
int3
pop
sbb
loop
or
pusha
sbb
sub
ret
test
fs
mov
and
sub
cltd
adc
and
jb
incb
sbb
cmp
push
cmc
sbb
fnstsw
add
mov
dec
jo
push
add
sbb
shlb
mov
out
xor
push
std
or
jnp
lods
test
push
cmp
push
pop
fistpl
call
inc
out
lds
mov
stc
ficompl
xchg
pop
mov
mov
fwait
pop
rcll
in
icebp
insb
stos
aad
sbb
lret
push
lret
imul
dec
pusha
call
cmpb
push
inc
out
jb
gs
mov
movsb
sub
xchg
mov
sti
std
pop
outsb
stc
sbb
lahf
hlt
bound
push
mov
add
sub
idivb
sub
cmc
das
mov
or
push
lret
push
sub
sbb
push
pop
daa
cli
and
inc
movsb
je
popa
mov
sub
inc
sub
push
outsl
mov
dec
inc
test
fs
mov
sarl
jg
fsubrl
scas
jge
pushf
lcall
cld
xchg
pop
mov
mov
add
aas
xchg
mov
ljmp
mov
xchg
mov
xchg
xor
sbb
cwtl
add
loop
stos
lcall
pop
out
inc
inc
mov
mov
stos
insl
clc
dec
loopne
xor
movsl
rcrl
sbb
jbe
sbb
adcb
es
mov
or
in
adc
sbbl
out
idivb
insb
sub
fdivrl
mov
test
jecxz
inc
xchg
movsl
fs
pop
ds
sub
dec
daa
in
jmp
xorb
rcrl
andl
mov
rcrl
fmuls
out
loop
arpl
imul
cmp
aam
sub
aaa
jp
mov
das
mov
sub
ds
add
sti
mov
into
std
xor
lret
into
pop
mov
icebp
pop
cmp
fiaddl
mov
pushl
sub
and
sub
mov
int3
xchg
in
adc
daa
pusha
ljmp
jo
in
nop
jae
xlat
mov
mov
pop
cmp
enter
orb
jmp
mov
mov
mov
dec
xor
stos
push
pop
loop
pop
test
fcoml
out
and
test
shr
push
xorl
int3
dec
and
mov
adc
mov
out
jns
call
std
xchg
nop
mov
jl
fwait
mov
es
or
push
add
mov
dec
mov
repnz
push
push
lock
cmp
cld
fwait
es
adc
lock
jb
push
add
mov
insl
adcb
pop
mov
orl
outsl
sbb
dec
ret
jnp
nop
dec
mov
cmpsl
mov
jmp
addb
adc
call
psrlw
mov
mov
adc
jbe
sub
jge
mov
dec
arpl
notl
jmp
cmp
mov
das
pop
leave
pushl
xchg
testl
add
jae
testb
mov
cs
lds
scas
mov
xchg
xor
out
roll
in
mov
insb
sub
insl
fiaddl
gs
inc
push
pop
jl
mov
cltd
fstl
mov
sbb
sbb
mov
dec
aad
fisubrs
mov
jne
fsubrl
or
dec
lahf
outsb
out
fs
or
jno
push
mov
pop
test
inc
call
mov
fidivl
fwait
sbb
dec
xchg
lahf
movsl
test
out
scas
pop
ds
aaa
mov
xor
inc
nop
fisubrl
xlat
mov
add
pushf
int3
add
add
les
fldl
push
sbb
test
fisttpll
cmp
lock
ds
mov
pop
sub
or
pop
pop
or
pusha
aas
sub
iret
es
pop
xlat
shll
pop
das
pop
or
adcl
sbb
mov
lahf
jecxz
in
pop
xor
pop
sbb
stc
pop
movsb
fsubl
imul
cmpsl
inc
pop
add
mov
jg
jle
push
xor
xchg
adc
push
mov
out
fisubs
pop
jo
fisubs
add
fiaddl
stc
xor
gs
cmp
nop
cmpsl
xchg
mov
jge
mov
inc
lahf
pop
xchg
adcb
std
pusha
loop
loop
cmp
cmpsl
xchg
jo
push
cmp
mov
or
loop
inc
mov
pusha
adc
jle
mov
repz
les
insl
std
cmpsb
dec
movsl
push
ja
xchg
jnp
repnz
sub
shrb
mov
pop
xchg
cs
je
test
jmp
pusha
rorl
pop
ljmp
adc
fs
popf
pop
pop
fld
and
aam
or
sbb
std
sbb
xchg
pop
push
movb
push
rcrl
call
dec
push
cltd
cs
popa
xchg
inc
dec
sahf
out
jo
sbb
pop
pop
ret
sub
int
jecxz
pop
or
mov
jno
jae
adc
push
pop
lret
gs
or
outsl
leave
xchg
int3
fisubl
fs
sub
jne
das
sbbb
call
xor
scas
xchg
mov
adc
js
insb
scas
call
cmp
or
adc
nop
insb
dec
testl
lahf
arpl
insl
dec
pop
jl,pt
sbb
xor
fdivrs
jge
sbb
jne
push
jmp
sbb
int3
push
sti
cmp
xor
mov
sub
int3
and
dec
push
gs
jb,pn
fwait
ss
lods
pop
loope
xor
fistl
mov
pusha
xor
popa
push
pop
rorl
data16
mov
pushf
pop
cmp
jne
loop
inc
stos
inc
dec
dec
std
shr
sbb
out
pop
dec
jb
dec
add
sbb
and
jp
fs
cmp
sub
adc
out
cmp
rolb
mov
pop
cmp
jle
adc
and
or
jl
mov
dec
adc
gs
sub
cmp
lret
push
fcomip
jle
hlt
cmpsl
mov
test
inc
insb
std
inc
mov
in
mov
mov
xchg
cmp
dec
inc
mov
inc
sahf
sbb
imul
pop
iret
dec
nop
mov
xor
loop
lret
mov
repnz
das
adc
push
or
dec
iret
mov
inc
xchg
mov
addr16
adc
arpl
ja
lods
pop
bound
mov
add
pop
aam
in
stos
jb
jae
push
push
cld
notb
iret
pop
imul
icebp
jne
sub
push
adc
scas
cmp
lods
rcrb
cwtl
xchg
sbb
into
adc
fiadds
inc
insl
mov
jo
inc
sub
push
cmpsl
pusha
test
mov
lcall
dec
mov
in
adc
push
pop
pop
xchg
pop
add
jg
ljmp
shll
mov
sbb
cltd
out
fldcw
stos
inc
mov
dec
jo
jae
sbb
xor
cmp
and
xor
in
or
fsubrs
and
ds
pop
mov
add
sbb
dec
stc
or
stos
pop
inc
push
sub
pop
inc
mov
movsb
into
push
dec
push
lea
rol
inc
dec
mov
subl
jmp
pusha
or
aaa
out
mov
fsubrp
sub
mov
dec
lea
movsb
inc
stc
das
insb
sub
and
mov
out
fsubrl
decl
or
int
push
xor
cmc
fs
inc
sub
mov
roll
iret
inc
bound
lret
lret
xlat
inc
loopne
out
dec
dec
push
repnz
xchg
xor
addr16
push
loopne
push
test
sti
stos
mov
sahf
movsb
pop
imul
xor
ljmp
xchg
idivl
sub
imul
test
sub
mov
fcom
jo
pop
sbb
sub
sub
mov
shl
insb
jb
out
mov
mov
arpl
mov
out
fistl
int
adc
cwtl
dec
jmp
sbb
or
fldenv
sub
pop
mov
cli
outsb
jns
stc
mov
addl
push
stos
push
bound
stos
fdivl
cmp
dec
push
adc
lahf
filds
jge
std
add
push
cmp
stos
mov
fsubrs
enter
mov
adc
cmp
jno
shll
js
push
in
mov
mov
cmpsl
cmp
outsb
mov
mov
orb
fs
cmp
adc
imul
pop
rol
fstpl
icebp
sbb
in
loope
pop
mov
push
fstpt
mov
sub
dec
cltd
cltd
icebp
inc
mov
fists
in
fidivrs
push
mov
test
js
loop
jo
pop
rolb
test
jbe
mov
and
cmp
cld
adc
hlt
mov
mov
jne
adc
xor
cltd
stos
mov
dec
lea
pop
push
movsl
cmp
lods
fldt
mov
add
jo
push
mov
lock
adc
das
adc
stos
jl
test
adc
jae
jmp
fwait
jnp
fstps
inc
mov
leave
sahf
in
push
jmp
sbb
jnp
cmpsl
fidivl
das
sub
adc
je
mov
movd
arpl
pop
push
xchg
xchg
and
gs
and
inc
fldcw
int3
push
inc
ud0
cmp
test
inc
addr16
pop
sbb
mov
and
movsb
stos
dec
ja
inc
sbb
sub
das
ds
push
mov
test
cmp
js
pop
repnz
sub
push
pop
mov
stos
movsl
cmp
dec
sbbl
cld
stc
insb
dec
and
ds
mov
pop
rcl
pop
pop
test
pop
loopne
stos
jno
xor
outsl
loopne
xchg
pop
data16
push
aas
orb
adc
xor
cmp
and
jmp
aam
sbb
push
adc
add
popa
xchg
add
sti
mov
sub
test
jg
add
mov
pop
xor
ljmp
add
push
and
push
xchg
xor
mov
and
in
ss
rorl
inc
xor
add
lock
lds
fimull
outsb
inc
dec
repnz
dec
pop
aaa
aad
enter
inc
outsb
lret
sti
push
pop
xor
jl
add
movsl
call
orps
mov
lds
pop
xchg
mov
out
int3
mov
or
in
lods
sbb
mov
sub
vrcpss
shlb
arpl
lock
shrl
xchg
test
cld
mov
stos
push
mov
sbb
shll
cmp
fcoml
ss
inc
mov
lds
add
in
outsl
and
pop
pusha
call
mov
cmp
or
adcl
testb
decb
add
call
xchg
cmpsb
sti
jmp
dec
inc
mov
xor
pusha
sub
mov
xchg
or
sub
fiaddl
ficoms
repz
pop
or
cmpsb
mov
xchg
sti
inc
fadd
push
fisttpll
cmp
stc
fiaddl
mov
mov
outsl
mov
ret
push
imul
mov
je
cmc
xchg
jle
ret
add
bound
jl
sub
mov
xor
mov
fdivrp
movsb
call
jecxz
loope
js
imul
xchg
dec
shr
add
stc
mov
inc
sbb
push
fsubrs
fucomp
pop
lret
xchg
adc
enter
push
mov
pop
mov
add
insb
inc
or
dec
mov
std
sbb
sbb
dec
xor
sbb
repnz
cmc
mov
pop
imul
jno
mov
add
test
inc
dec
test
mov
in
aaa
ficoms
addr16
cmp
sub
xchg
jmp
enter
pop
sbb
mov
adc
and
cs
sarb
movb
in
xor
jmp
lea
xchg
xor
mov
sub
jns
add
sbb
test
adc
push
frstor
mov
jae
cmc
cmp
aam
stos
ret
push
mov
fucom
test
inc
jno
imul
loopne
inc
pop
xor
pushf
dec
inc
dec
push
pop
int3
xchg
push
lea
mov
loop
in
inc
inc
mov
push
repz
add
pop
mov
imul
or
mov
inc
pop
sub
ds
std
add
jo
stc
cmp
push
sub
stos
test
mov
xchg
mov
pop
repnz
imul
xor
fs
lea
jbe
adc
add
and
adc
mov
leave
fnstenv
testb
and
dec
push
fisubs
adc
push
or
sub
adc
mov
add
stos
out
movlps
sbb
push
js
lcall
jecxz
dec
jecxz
iret
loope
xchg
adc
add
push
inc
pop
js
test
lds
ret
fldenv
decb
jge
mov
cmp
and
jb
clc
insl
push
imul
jle
lock
rcll
jmp
mov
stos
xor
inc
rol
dec
cs
or
rclb
and
movsb
jns
jno
dec
sti
test
inc
adc
cld
jg
and
jbe
or
clc
xor
outsb
sbb
lds
out
call
in
mov
or
and
pop
nop
test
popf
sarb
testb
xchg
mov
cwtl
cld
inc
ja
fidivs
pushf
nop
mov
es
cmp
js
vhsubpd
mov
or
pusha
ds
ficompl
enter
ret
rcr
jne
and
adc
mov
test
cmc
mov
sti
ret
push
xchg
fwait
addr16
jbe
fildl
sahf
push
test
jg
mov
repz
push
testb
sub
add
in
mov
lcall
gs
iret
fsubl
es
inc
dec
stc
notl
mov
repnz
dec
xchg
lea
jae
push
xor
mov
js
imul
push
cwtl
adc
bound
pop
cmp
xchg
cmp
jne
sbb
clc
jmp
insl
cmp
aas
dec
shlb
mov
out
lcall
popa
xchg
sbb
out
pop
cs
sbb
inc
imul
aad
jge
or
pop
mov
mov
fidivrl
out
xchg
ljmp
movsl
movsb
ljmp
jp
pop
dec
jle
imul
lcall
xchg
movsl
xchg
pop
aas
add
aad
ss
rol
pusha
fs
pop
xchg
pop
ss
test
xor
xchg
push
xchg
pusha
mov
int
test
and
xchg
rcr
aad
cld
mov
cmp
jg
pop
int
xor
les
bound
xor
and
xchg
nop
loop
in
or
icebp
arpl
jmp
mov
jge
out
lods
test
xchg
mov
dec
push
inc
in
fisubs
mov
nop
and
insl
inc
popf
rsm
pop
call
mov
leave
xor
rol
cmp
add
je
imul
adc
data16
lret
jmp
or
fcomip
jecxz
in
pop
inc
enter
dec
mov
inc
scas
push
setge
or
mov
jnp
add
iret
mov
stos
sub
jae
mov
push
mov
fistps
adc
push
jl
das
mov
sbb
inc
cmpsl
lret
sub
pop
js
sub
add
inc
mov
repnz
dec
sub
or
sub
cmp
pop
je
lret
pop
gs
ds
cld
ss
adc
xchg
pop
push
mov
mov
dec
ds
and
adc
inc
sbb
inc
mov
push
push
sub
test
scas
inc
mov
inc
aam
scas
mov
jnp
addr16
cltd
int
cmovo
inc
imulb
dec
cmp
push
adc
sar
dec
fcoml
div
mov
test
jle
xchg
pop
in
js
outsl
int3
jp
xlat
add
sub
outsl
mov
insl
or
dec
xlat
adc
adc
test
sbb
xchg
xor
pop
call
jg
and
aaa
sbb
dec
ficompl
jmp
lds
aas
or
aaa
test
ficoml
push
sbb
es
imul
das
jmp
lahf
push
dec
addb
stos
mov
fwait
lret
adc
pop
adc
loopne
jmp
push
pop
xchg
cld
mov
les
dec
lret
sbb
or
nop
jno
mov
enter
movsb
xlat
push
sbb
mov
mov
ja
lds
dec
cmp
loop
push
fidivrs
cli
leave
lds
sahf
sub
pop
repnz
mov
fs
in
xchg
aaa
sub
leave
mov
movsl
sub
shlb
rorl
pop
fucomip
xor
decb
or
cmp
cmp
lahf
test
mov
sbb
in
bound
jge
inc
and
mov
sarb
insb
lahf
je
ja
jmp
fisubrl
test
cmp
nop
push
les
lds
jnp
cmp
test
cltd
mov
jmp
or
sub
mov
dec
mov
jns
sub
dec
mov
bound
insb
das
loop
dec
cmc
lods
sub
fcompl
jb
outsb
mov
xchg
rorb
in
fistps
adc
push
loopne
fnsave
mov
aaa
mov
fmulp
xchg
push
add
push
icebp
stc
ss
lea
lahf
jle
lods
jp
adc
adc
fisttpl
leave
pop
add
stos
call
mov
and
mov
cmp
lahf
fstl
push
lret
cltd
adc
shlb
addb
cmp
mov
repnz
test
mov
adc
fs
xor
ret
lods
pop
dec
push
fsubp
cmp
pop
mov
clc
inc
dec
mov
push
or
repnz
mov
and
insl
xchg
mov
xor
fs
and
repnz
pop
xor
ffreep
pop
cli
jo
add
inc
adc
inc
dec
loope
jns
nop
inc
xchg
jmp
add
and
push
test
pop
test
lret
pop
leave
aas
mov
std
or
mov
jns
sub
and
jne
inc
cmpsl
cmp
mov
jbe
mov
mov
pop
imul
xchg
adc
push
push
mov
jmp
es
and
add
hlt
sbb
ret
cmc
dec
int
pop
or
jns
das
pop
ret
movl
push
and
in
outsl
xchg
sub
imul
push
cmpb
inc
xchg
add
push
sub
fwait
inc
insb
add
pusha
or
pop
or
xor
test
sbb
add
out
adc
mov
enter
pop
push
push
in
mov
and
dec
add
sub
adc
aaa
cmp
stos
mov
aas
jne
inc
mov
ficoml
es
jnp
adc
jns
shlb
wbinvd
push
jge
nop
and
sub
or
cmp
pop
xchg
cltd
mov
ss
push
popf
pusha
jge
push
outsl
leave
xchg
jle
mov
xchg
dec
loopne
push
pop
cmpl
pop
add
or
inc
fcoms
scas
add
je
xor
sub
cmc
pop
mov
stc
mov
inc
push
loop
fstpl
dec
sbb
fs
sub
sbb
daa
push
adc
cmp
mov
dec
mov
jno
into
pop
sti
or
push
dec
shll
pop
xor
xchg
xor
gs
mov
mov
pop
js
mov
and
cmpsl
mov
xlat
and
add
and
cs
call
addb
push
lods
xorb
mov
std
sbb
jp
movsb
mov
out
dec
int
push
lds
shrb
add
mov
mov
push
mov
movsl
xor
cld
sbb
mov
arpl
popa
mov
mov
idiv
mov
mov
inc
jb
je
repnz
sub
sbb
sub
notb
jp
mov
repz
js
or
ret
mov
fdivrs
mov
cwtl
ljmp
in
pusha
fcmovnbe
mov
lahf
pop
pusha
das
hlt
jnp
into
stc
jns
xor
pop
cmp
gs
bound
push
inc
outsl
and
rclb
lock
cltd
dec
dec
add
das
mov
mov
push
pop
stos
mov
xor
roll
mov
outsl
dec
pop
mov
xchg
imull
sbb
mov
cwtl
inc
pusha
inc
std
mov
ljmp
xor
testl
add
cmp
sub
mov
or
decl
inc
daa
xchg
or
pop
divb
outsb
sbb
jmp
aam
dec
cltd
mov
push
imul
js
sub
xor
dec
pop
dec
xchg
cmpsl
ret
xor
sub
fmulp
xor
repnz
pop
pop
mov
or
sbb
fwait
sub
xlat
dec
cmp
nop
das
dec
cltd
push
std
cld
je
sub
mov
test
pop
das
and
dec
mov
cmpsl
dec
jle
push
mov
dec
or
or
test
ja
lret
and
cmp
inc
test
sub
insb
add
mov
pop
fs
push
pop
mov
insb
push
mov
inc
test
jb
bound
jns
dec
and
xchg
push
pop
mov
mov
mov
cld
sbb
cmp
mov
movl
movsl
lret
xchg
mov
dec
add
lcall
orb
lret
mov
stc
cmp
movntq
test
xchg
mov
lods
cmp
mov
xor
inc
or
adc
add
jnp
repz
pop
movsl
lock
loop
cli
stos
fs
push
mov
adc
stos
lret
gs
jle,pn
dec
shll
dec
xor
mov
mov
push
cwtl
mov
xchg
adc
mov
cs
xchg
jmp
imul
mov
hlt
xor
outsb
cmp
mov
jno
test
fs
mov
stc
negb
iret
xor
sbb
cli
mov
cmp
pop
fidivrl
adc
popf
aas
adc
xchg
stos
dec
cmc
fwait
out
stos
mov
mov
mov
fdivl
cmp
repz
pop
out
add
cld
add
add
and
movsb
dec
sbb
xor
cmp
pushf
inc
adc
pusha
dec
mov
lods
push
cmpsl
xor
outsl
xlat
adc
push
and
inc
xor
aaa
jne
cs
inc
cmp
sbb
imul
mov
fwait
das
fs
push
dec
jge
testl
imul
push
or
dec
mov
xor
xor
movlps
rolb
lods
mov
push
dec
inc
xchg
lret
insb
cmp
add
std
test
pop
sub
sub
adc
or
xchg
sub
lahf
loopne
push
in
push
sbb
xor
int
push
orl
adc
sbb
fisubs
lock
sbb
cmpsb
mov
fiadds
lret
fsubp
in
push
push
cmc
pop
sub
fmul
insl
stos
fstpt
in
negl
mov
pop
and
cmp
jge
xor
sarb
jmp
add
mov
jbe
sbbb
stos
mov
repnz
jb
jecxz
clc
or
dec
mov
ja
xchg
mov
push
pop
outsb
adc
pop
aad
lods
push
pop
dec
gs
adc
call
sub
and
inc
mov
and
inc
jno
rol
jl
xor
add
in
nop
adc
outsl
stos
dec
daa
push
lods
lods
jmp
push
adc
jmp
cld
popa
das
xchg
cwtl
and
jbe
popf
sbb
jmp
add
pop
mov
imul
sarb
dec
mov
popf
jns
add
imul
mov
fdivrl
popa
fisubs
push
mov
inc
icebp
into
incl
or
subb
push
cmp
jnp
testl
arpl
sbb
mov
outsb
xchg
mov
outsb
std
lret
call
xlat
fadd
xchg
pop
mov
inc
cs
gs
out
mov
xor
and
jp
mov
sbb
mov
int3
data16
rorl
add
pop
ficoms
or
loope
outsb
cmp
xchg
hlt
lret
sbb
pusha
stc
out
sarb
pop
popf
lds
in
adc
sub
mov
push
add
pop
repnz
push
or
xchg
sbb
loope
inc
popa
shlb
push
and
mov
rcl
mov
jnp
out
mov
ljmp
push
in
dec
cmpsl
sub
cmc
lret
mov
mov
popf
mov
lods
clc
push
mov
and
jg
data16
mov
and
xor
cli
mov
pop
xor
lock
mov
sbb
fisttpll
arpl
repnz
sub
pop
inc
lret
fsubrs
jle
xchg
adc
pop
push
imul
sub
mov
push
mov
mov
mov
jns
sbb
js
cs
inc
mov
mov
cmp
pop
xorl
pop
mov
sbb
ret
stos
gs
jno,pn
hlt
mov
inc
mov
lcall
cmp
cmp
gs
mov
lds
dec
or
xlat
cmp
rclb
mov
shl
mov
lods
adc
popa
inc
sub
xlat
push
aam
dec
dec
add
stc
mov
cmp
int
dec
outsl
jge
imul
lock
sub
mov
push
jns
add
dec
fimull
sbb
or
clc
sbb
mov
sub
cmp
cmpl
jo
fdivp
popa
xchg
fidivrl
mov
int
mov
stos
sti
xorb
test
xchg
xor
dec
jns
dec
or
dec
syscall
shll
mov
movsl
clc
lret
mov
fdivp
xchg
mov
cmpsl
das
shrb
test
add
cmpsl
sbb
mov
adcb
lret
push
js
data16
jecxz
mul
pop
imul
setnp
xchg
or
rorl
jge
push
jmp
xchg
jno
in
jmp
les
nop
jns
pop
scas
fnstcw
mov
adc
je
fs
mov
adc
adc
sarl
push
es
dec
rclb
lcall
push
jecxz
cmp
cmp
inc
std
or
es
out
mov
push
pushf
les
incb
loop
out
stos
mov
pushf
rorl
aad
dec
xchg
xor
jno
cld
push
mov
test
xchg
clc
push
sti
lds
adc
fcomip
sbb
imulb
xchg
sbb
xor
test
pop
out
pop
mov
into
fnstcw
stos
push
sbb
sub
mov
enter
mov
hlt
int
xor
jg
je
fstpt
loope
xchg
pusha
pop
push
sbb
adcb
pop
int3
sub
pop
push
bound
mov
mov
xchg
mov
outsl
sahf
push
out
ficoms
inc
insb
fstpt
inc
and
xor
mov
cmp
insl
dec
sub
sarl
lcall
adc
nop
std
adc
lock
in
jp
lretw
dec
incb
xchg
mov
pop
xchg
dec
pushf
add
xor
repnz
adc
out
es
pop
sbb
pushf
push
test
push
cli
pop
sbbb
sbb
jle
xchg
testl
cmp
pop
or
stc
xor
jg
out
pop
dec
xchg
aaa
mov
jo
out
dec
adc
pop
in
fcomi
pop
sbb
sbb
pop
push
mov
popl
test
fnstcw
sub
in
cmp
jmp
into
mov
js
repnz
mov
sub
leave
fwait
std
icebp
pop
mov
hlt
ret
inc
jl
pop
sbb
jge
adcb
push
inc
pop
add
cmp
rorb
ja
mov
into
mov
test
movb
mov
es
ror
mov
or
sub
test
pop
gs
inc
das
xor
mov
sahf
mov
xchg
in
and
sti
cmp
leave
imul
mov
jo
adc
fwait
shrb
lahf
lods
lret
sbb
aam
xor
push
bound
scas
sbb
lahf
add
xor
test
int
hlt
and
sub
pop
rolb
gs
xor
dec
mov
repz
hlt
push
adc
push
push
test
movsb
or
cmp
jae
fucom
sub
adc
mov
jae
push
or
sub
mov
int
xchg
shl
inc
mov
pop
mov
adc
loop
cwtl
stos
pusha
sub
and
imul
es
test
stc
dec
or
push
cmp
mov
int
fwait
xchg
and
lret
push
addr16
xor
xorps
mov
mov
leave
jl
outsl
sbb
cmp
push
mov
out
dec
xor
push
fiadds
lcall
jno
xchg
mov
add
call
lds
movsb
inc
pop
mov
push
lock
mov
fidivl
cld
stos
jp
aas
cmc
mov
sub
mov
out
xor
sub
cli
pop
paddw
cmp
dec
gs
jns
mov
jb
sub
push
pusha
sub
push
mov
std
push
jp
clc
rcr
add
std
mov
das
in
mov
ja
cs
sbb
xchg
push
cmp
or
mov
ficomps
fidivl
mov
or
pop
sub
mov
std
insl
jne
cmp
in
mov
test
sbb
mov
mov
mov
push
lds
fidivrl
cmc
ret
fcmovne
gs
mov
push
push
push
inc
pop
mov
cmp
xchg
stos
sbb
cmpsl
sub
dec
nop
mov
or
out
lods
mov
push
shll
sub
add
and
mov
jge
repnz
sbb
jle
sbb
push
mov
cs
addr16
xlat
adc
mov
push
int
jl
ljmp
pop
mov
mov
cwtl
shl
and
add
jnp
pop
sbb
dec
in
xchg
sub
mov
sti
pop
push
push
xchg
adc
sub
mov
cmpsl
sti
out
sub
cmpsl
push
roll
adc
mov
pop
add
lret
pop
imul
fsubl
fucomp
jmp
adc
outsb
mov
notb
pushf
push
push
pop
insl
mov
add
cld
hlt
dec
pop
or
dec
mov
ss
dec
cmc
add
loop
icebp
pop
or
xor
in
push
aam
pop
push
fsts
add
leave
test
sbb
cli
dec
jle
or
insb
cmc
sub
and
ficomps
cmp
loope
mov
inc
cld
lods
pop
jp
jle
in
sbb
xor
and
bound
jns
mov
sub
cmp
mov
cmp
fmull
jmp
es
pop
adc
es
adc
adc
pop
sbb
push
idiv
adc
das
xchg
mov
mov
iret
out
test
inc
lea
sub
stos
ret
sub
or
cmp
out
sub
sub
aam
sub
call
cli
jno
enter
int
lahf
push
pusha
pop
push
adc
fs
mov
inc
dec
push
ret
pop
loope
adc
xchg
add
xor
insb
aad
neg
inc
mov
pushf
dec
add
mov
in
xorb
sarb
pop
imul
adcl
mov
or
pop
fcmovnu
cmp
pop
push
xor
jl
lret
aaa
cmp
pop
adc
pop
fsts
pop
cmp
fs
and
mov
test
cmpsl
xorl
inc
shll
nop
sub
rorb
daa
pop
or
cmp
dec
sub
jg
mov
sbb
cmpsl
cwtl
testl
pushf
ss
mov
cltd
orb
div
xchg
cmc
js
rcrl
jg
xor
lock
lock
mov
addl
repz
mov
mov
mov
cld
loopne
dec
xchg
cmp
insb
cs
sub
scas
cltd
cmp
or
inc
dec
leave
fldcw
pop
mov
lahf
sub
shll
mov
movsl
mov
adc
enter
xchg
sub
cmpsl
mov
insl
ja
mov
dec
adc
inc
add
jne
sbb
dec
inc
movsb
stc
popa
into
sub
sbb
data16
and
rcll
or
movsl
lods
inc
adc
les
sbb
out
fidivl
out
pop
mov
and
pop
push
mov
outsb
cmpsl
cwtl
imul
dec
and
cwtl
ficomps
clc
out
shlb
pusha
jb
mov
add
test
push
pop
inc
ds
jns
sbb
inc
adcb
push
mov
in
sub
xor
outsb
roll
push
sbb
enter
mov
jo
mov
mov
lock
sbb
mov
sbb
cld
out
rclb
jnp
mov
aaa
cmp
int3
xchg
jle
subl
lock
sbb
aaa
test
push
lret
and
sub
pop
sbb
lock
lods
and
rolb
ja
or
pop
sub
ficomps
push
andl
or
adc
shlb
push
loop
inc
lret
push
xor
sarl
and
fisubrs
sub
iret
cmp
push
mov
repnz
jp
push
jo
imul
stc
shl
fidivrl
push
test
sbb
outsl
cld
pop
and
add
xor
idivl
mov
adc
bound
addb
mov
pop
xor
pop
mov
push
cmp
pop
lahf
sbb
inc
push
jo
sub
ret
sub
cwtl
xchg
dec
mov
jae
mov
shrb
jge
jno
jbe
push
mov
stc
and
ret
xor
arpl
xor
aam
jae
ja
pop
sub
mov
neg
pop
push
inc
push
and
in
loop
sbb
xchg
aad
adc
xor
and
into
aad
sbb
les
hlt
dec
mov
mov
push
dec
xchg
sahf
lock
popf
push
mov
cmp
repnz
sub
addr16
bound
inc
shl
mov
stos
mov
jmp
add
test
aam
cmp
mov
xchg
mov
sub
and
dec
jae
mov
inc
pop
cmpsb
imul
jae
dec
pushl
lret
cmp
cld
jno
cmp
inc
sti
dec
stc
mov
pushf
lret
mov
gs
mov
iretw
sar
loop
push
hlt
inc
lahf
ss
mov
xchg
out
les
mov
cmp
stc
lea
sub
inc
jno
add
mov
addr16
ss
jl
cmp
aam
out
or
daa
loopne
push
js
sysret
and
sub
in
lods
inc
aaa
jo
jno
sub
fwait
or
lds
es
or
cmpl
push
sub
or
and
or
push
mov
xor
sub
adc
xchg
lret
movl
pop
mov
lods
sub
xor
add
sbb
dec
mov
movsl
mov
fdivp
cmp
push
pop
mov
loopne
push
icebp
mov
aaa
sbb
mov
inc
mov
xor
mov
jbe
lds
loopne
sbb
je
and
in
adc
jo
cmp
jo
dec
mov
int3
push
jb
mov
dec
inc
xchg
test
sub
hlt
cmp
jne
jae
xchg
mov
ljmp
test
cli
or
push
pop
mov
dec
jle
xchg
pushfw
sub
movsb
push
cwtl
jae
xchg
int3
cmp
cli
jns
in
mov
bnd
jne
out
mov
push
sti
push
jge
pop
fwait
jp
ret
imul
push
adc
insb
sub
es
jb
cld
cmp
xor
stos
leave
sub
arpl
repz
add
mov
je
dec
movb
mov
sahf
cmc
and
jbe
imul
pop
repnz
jns
add
push
jno
pop
pop
mov
enter
mov
mov
je
jo
movsb
jnp
xlat
in
in
lret
adc
cli
mov
mov
jno
mov
adc
mov
push
xchg
mov
mov
xchg
inc
lcall
mov
fistpl
sub
call
adc
jns
mov
loope
pop
mov
sub
ret
and
or
pop
jb
popf
mov
popf
int3
pop
mov
mull
icebp
xor
mov
sbb
inc
mov
popfw
fnstsw
scas
lods
std
xchg
in
xlat
adc
out
cmpsl
dec
pop
jmp
fwait
push
cmp
mov
jle
out
mov
fcmovu
cli
pop
sbb
push
xchg
or
lds
adc
lcall
popf
pop
add
push
fwait
aad
mov
nop
daa
adc
fisubrs
xor
jecxz
loopne
movsl
cmp
imul
cwtl
mov
jns
inc
xchg
mov
idivl
add
inc
fwait
mov
dec
in
insl
and
mov
repz
loopne
dec
cmp
pusha
popa
jmp
lods
shlb
adc
mov
scas
sbb
xchg
dec
test
pop
add
mov
cltd
sarl
xor
xchg
pushf
push
int
mov
adcb
xchg
jle
cmp
pop
sub
inc
test
popa
pop
add
mov
push
mov
mov
jb
xchg
enter
push
invd
push
inc
lea
pop
push
nop
add
xor
mov
ficomps
inc
add
loop
cmpb
xchg
push
jne
mov
cld
pusha
pop
gs
cmpsl
sub
mov
add
and
stos
mov
loopne
pop
out
mov
sub
or
test
lahf
jbe
cs
xchg
pop
push
pop
cmp
je
or
mov
push
cwtl
pusha
xor
dec
and
hlt
fisubrl
or
cmp
cltd
jb
pop
pop
mov
sbb
dec
sub
jns
push
js
cmpsl
cmp
cmp
out
gs
xor
dec
or
mov
cmpsl
push
outsl
sbb
adc
bound
lods
clc
popa
jmp
xchg
popa
fincstp
cmp
xchg
mov
sbb
pop
inc
lret
adc
imul
loope
test
xor
mov
jnp
sbb
add
mov
lcall
pusha
in
mov
les
daa
ret
and
inc
mov
mov
or
mov
in
icebp
repz
inc
pop
clc
mov
or
negb
cli
leave
movsb
leave
fldenv
jne
adc
xor
dec
pop
cltd
inc
dec
pop
gs
dec
pop
cmp
push
sbb
enter
movsb
push
outsb
push
pushf
mov
insb
decb
mov
addr16
mov
out
xlat
test
push
push
daa
int
lods
xchg
lea
adc
adc
sub
mov
xchg
call
ja
inc
mov
int3
sahf
dec
mov
jle
insl
mov
jge
fldcw
and
cmp
repz
ds
mov
mov
rolb
or
fucomi
or
jmp
cmp
xchg
xor
sub
sbb
inc
xor
mov
push
push
addb
in
in
lret
mov
aas
jp
out
iret
push
insb
lds
mov
mov
popa
rcl
testb
fisubrl
loop
lret
frstor
dec
dec
mov
inc
in
cmc
fidivrs
scas
or
rcrb
int
or
jmp
rol
fistl
les
mov
sub
xor
sub
sub
mov
je
rcrl
lahf
inc
pop
pop
out
leave
lods
adc
das
or
lods
xor
lcall
push
in
fcoms
add
mov
or
stc
pop
push
jl
ret
mov
jb
outsb
and
in
fstpt
cmc
adc
or
jle
stc
aas
lcall
pop
test
push
pop
lret
lods
or
pop
inc
pop
movsb
add
pop
add
fldl
push
out
push
aam
adc
lret
add
push
test
jecxz
mov
adc
jb
lahf
sbb
ljmp
or
cmpsb
stos
mov
add
dec
push
cmp
dec
push
mov
int3
inc
shl
gs
and
and
imul
or
dec
js
fadds
push
mov
sti
mov
or
and
jmp
jg
std
or
fwait
xchg
or
adc
dec
xchg
dec
aam
sbb
ror
imul
add
or
and
jp
adc
fucom
into
add
sub
mov
push
popw
rcrl
pop
cmp
cmp
flds
fisubrs
pushf
movb
mov
shrl
push
fsubs
cli
xchg
adc
mov
cwtl
add
fiaddl
insb
jae
dec
jp
mov
mov
push
pop
push
cmp
push
push
push
movsb
push
cmp
dec
fwait
add
lods
mov
mov
pop
insb
es
adc
cmpsl
jb
mov
pop
lret
cwtl
xor
add
imul
insl
fcmovb
xor
push
ds
pop
jne
adc
shlb
pop
lods
pop
clc
cmp
repnz
rcl
out
cmp
pop
test
in
push
leave
mov
sbb
dec
ss
jns
div
clc
repz
and
lcall
add
int
notb
dec
push
cmpsl
add
repnz
push
aaa
or
adc
xor
fisubrs
jns
mov
jne
cmp
js
cs
jmp
fisubrs
dec
cmp
sub
cld
xor
lock
repz
jno
and
rolb
sub
xor
and
push
cmp
pop
cmp
sbb
in
std
xor
jmp
fildl
jecxz
pop
sub
jns
lea
push
inc
mov
mov
push
or
cmpsl
movsl
jae
add
mov
dec
ljmp
sahf
lret
leave
or
mov
fcmove
cltd
and
sbb
mov
adc
aam
add
mov
or
mov
cltd
cli
cmpsl
cwtl
sub
jg
mov
sub
daa
std
pop
loop
f2xm1
mov
xchg
and
mov
and
mov
mov
sub
push
mov
sbb
sbb
sub
mov
in
lock
xor
lahf
and
mov
in
push
add
fmuls
nop
mov
cli
mov
dec
jb
adc
pop
inc
fistps
mov
out
std
fs
mov
movsl
repz
push
scas
lods
mov
pop
adcb
insl
imul
in
xor
loopne
leave
insl
shrb
ror
mov
jmp
pop
into
sub
std
add
adc
sub
jnp
mov
jne
das
cltd
popa
push
mov
jmp
sbb
and
int
std
push
imul
stc
sbb
jmp
icebp
cltd
fidivs
loopne
push
cmp
lock
push
push
jp
stc
scas
and
sarl
rcll
outsb
test
insb
push
add
jo
ss
jns
pop
dec
imul
shll
dec
mov
fdivrl
mov
out
sub
loopne
sbb
xor
scas
xchg
inc
adc
fwait
mov
fdiv
imul
or
fs
test
repnz
xor
mov
enter
aad
adc
decb
out
movsl
dec
sub
xor
and
jge
sar
sarb
fimull
aas
popa
outsb
adc
repz
or
xor
pop
iret
out
pop
pop
aaa
cmc
mov
xchg
ret
sbb
jmp
sub
mov
jbe
push
rcll
and
cmp
xorl
xchg
jp
xchg
dec
imul
dec
movsb
inc
adc
pop
shl
push
sub
lds
sbb
or
push
mov
pop
shl
scas
or
mov
jmp
xor
fisubrs
add
cmc
fwait
xor
mov
adc
cmp
roll
or
add
imul
fstps
xor
pop
and
push
mov
test
xchg
mov
cmp
rcrb
addl
rclb
mov
push
xchg
imul
stos
push
pop
mov
xor
out
icebp
cli
pop
jno
gs
mov
movl
pop
mov
call
lahf
les
mov
fsubl
mov
std
cld
pusha
push
fisttps
push
push
mov
popf
mov
sub
dec
dec
das
popf
aad
test
xor
fistps
into
fwait
sub
out
dec
push
mov
inc
add
jno
pop
sub
nop
lea
jne
sbb
das
gs
lcall
ss
aaa
dec
adc
and
cmp
insl
mov
push
sbb
xchg
push
pop
mov
cmp
adcl
mov
xlat
loopne
sub
out
sub
cs
rcll
jns
mov
aas
orl
popf
cmp
pop
add
rorl
pop
mov
js
fistl
fdivrl
lahf
popa
lret
pop
push
cmp
sbb
mov
and
cmp
loop
mov
push
fdivrp
or
xlat
andb
inc
lds
inc
jno
cld
mov
xchg
sbb
clc
xchg
call
jecxz
mov
iret
dec
and
aad
leave
cwtl
js
jo
xor
sbb
test
dec
pop
enter
or
jno
flds
rcrl
and
pop
inc
push
fs
aaa
fs
div
inc
insl
and
js
cmp
jb
xor
jecxz
xor
sub
shll
aam
decb
es
sti
and
in
out
fdivrs
insl
add
loopne
loop
lea
adc
mov
mov
iret
push
sbb
jp
addb
insb
std
pop
ret
fs
sbb
dec
fiadds
push
loop
add
enter
push
lea
stos
add
testl
in
xchg
and
ret
shll
jns
stos
int
sbb
test
inc
cltd
int3
adc
pavgw
or
addr16
mov
xchg
in
push
mov
insl
jmp
lcall
adc
arpl
jp
lds
mov
xchg
jno
enter
test
orb
sbb
mov
inc
mov
xor
xor
add
jb
and
ret
inc
push
add
xchg
or
aaa
sub
mov
adc
je
sub
aam
dec
ret
insb
inc
loopne
mov
sahf
sub
cmpsb
decl
add
mov
push
out
jl
out
cmp
out
dec
jge
sbb
mov
or
cli
jns
lahf
xchg
jb
fstps
dec
cmp
aam
push
cwtl
in
pop
push
cwtl
push
inc
inc
fbld
sub
lcall
cmp
sub
xchg
ficompl
pop
or
or
pop
sbb
jne
or
adc
cmp
gs
adc
dec
lahf
out
dec
inc
add
fcmovne
push
flds
aad
stc
cmp
nop
inc
cltd
test
and
push
mov
sbb
adc
or
imul
xor
pop
rsqrtps
jge
outsb
mov
adc
ss
cli
sbb
add
js
dec
std
loop
pop
push
xor
repnz
push
imul
or
push
inc
sbb
dec
lods
inc
mov
jae
enter
jbe
clc
scas
outsl
cmp
push
inc
jne
das
push
fiaddl
sbb
cmpsb
bt
pop
lods
mov
daa
test
fistl
add
jle
pop
in
xchg
fildll
jne
mov
addr16
xlat
adc
mov
jo
or
dec
sbb
pop
sub
and
int
lcall
pop
adc
or
jp
push
dec
pop
sub
dec
fucomip
xchg
divb
test
aaa
mov
jns
out
aad
pop
enter
lods
and
mov
push
dec
stos
out
sbb
or
pusha
mov
jle
shrl
popa
fisubs
out
out
jbe
pop
cmp
stos
mov
cmpsl
mov
mov
fs
xchg
pop
xor
push
jl
out
add
mov
mov
out
pop
push
aaa
pop
jmp
xor
sarl
add
sti
jmp
lods
xchg
sub
adc
jmp
and
mov
inc
fwait
cwtl
adc
popa
hlt
jb
fcompl
jmp
loope
jle
push
cmp
mov
pop
xchg
xchg
insl
repz
mov
sbb
les
nop
mov
insb
sbbb
int
sub
mov
fimuls
shrl
push
mov
or
cwtl
pop
lods
sbb
jmp
das
mov
sub
push
cs
hlt
subb
adc
xchg
mov
nop
push
loopne
jns
mov
mov
loope
cmpsl
repnz
es
pop
enter
mov
sarb
mov
stos
lds
stos
adc
add
mov
aam
jbe
mov
test
jae
rcrb
insl
adc
sub
incb
imul
std
mov
jae
sub
pushf
nop
int3
adcb
out
pop
cmpsb
movswl
pop
movsb
push
cmp
dec
ficompl
xor
push
or
add
add
out
push
mov
je
xor
out
loopne
xor
mov
rol
push
sti
sub
mov
sbb
pop
pop
mov
mov
push
das
xchg
out
pop
sub
push
mov
add
lahf
imul
in
push
sub
inc
dec
cmp
xor
or
cmp
mov
sarl
xor
fldt
sar
dec
test
pop
ss
pop
or
jle
add
push
mov
outsb
push
pop
adc
das
cwtl
shrl
fdivrs
pop
mov
fxch
pop
mov
xchg
pop
fisubrl
mov
ss
dec
stc
cmp
pop
sbb
pop
inc
cmp
pop
inc
clc
test
std
imulb
jle
bound
cmpsl
sbb
fwait
mov
repz
cld
or
cmp
dec
jbe
add
std
add
lahf
jno
or
imul
jg
inc
cld
mov
add
scas
mov
mov
dec
fiadds
pop
mov
pop
jns
outsb
test
or
xchg
cmp
mov
jbe
pop
iret
ljmp
inc
test
fbstp
std
enter
rcr
shll
or
popf
outsb
sahf
dec
mov
push
cmp
mov
cld
sbb
dec
sbb
add
mov
xor
push
sbb
or
clc
subb
into
cmp
push
dec
dec
test
int
sbb
jae
aas
mov
pop
jo
jno
fisttpl
cmp
pushf
sub
mov
js
pop
and
dec
mov
sahf
icebp
pop
mov
fcmovb
add
or
mov
sbb
mov
loop
mov
jo
aaa
or
test
sub
outsb
mov
push
cmp
add
dec
jae
testl
dec
jne
pop
jmp
adc
fistl
mov
mov
jnp
adc
je
cmp
jo
test
stos
or
mov
mov
sbb
pop
sub
push
and
sbb
xor
pop
pop
adc
xchg
imul
xchg
dec
cmp
dec
inc
out
adc
roll
xor
xor
mov
int
shlb
jg
insb
outsl
pop
adc
mov
cli
packsswb
test
fwait
xchg
mov
bnd
jae
adc
push
sbb
sbb
loopne
mov
push
stos
test
je
clc
sbb
test
ss
dec
jae
ret
and
int
repz
mov
add
xor
in
mov
pop
push
shll
pop
sbb
sbb
mov
fmull
push
add
add
mov
pop
adc
neg
cmpsl
pop
les
xchg
out
sti
pop
cmp
mov
dec
stc
pop
xchg
add
mov
loopne
aas
sbb
add
fsts
sbb
add
imul
jo
scas
mov
repnz
sbb
stos
xchg
jnp
popa
stos
push
inc
inc
lods
inc
cs
sahf
inc
push
lods
mov
popa
js
ret
adc
push
or
mov
sti
imul
fs
pop
leave
push
popf
fistl
es
sub
xlat
xchg
stos
hlt
in
sub
rcr
or
add
lret
insl
dec
shll
scas
sub
jle
popa
jge
xchg
dec
mov
inc
out
adc
lock
cld
sub
pop
mov
jecxz
pop
push
bound
push
mov
inc
imulb
icebp
pop
jl
out
adc
mov
pop
stc
mov
jmp
mov
jbe
mov
fucom
add
fidivl
pop
sbb
xchg
and
dec
rclb
movsb
cmp
adc
lods
pop
js
inc
sbb
test
xor
and
inc
cmp
jl
imul
cmp
fcoms
mov
ficompl
popa
cmp
loope
aaa
sbb
das
sub
mov
inc
in
xor
lock
fistl
cmp
jge
lret
adc
insb
rolb
mov
lods
mov
mov
push
jb
adc
pop
mov
aad
sbb
fisttpl
xchg
push
push
add
xorl
pusha
out
push
xor
cmpsb
adc
adc
movsl
xchg
or
leave
adc
sbb
mov
push
imul
cmp
fisubrs
mov
addr16
daa
into
inc
mov
jne
outsl
popa
push
jnp
inc
in
sub
repnz
cmp
daa
jge
not
fidivrs
mov
push
std
mov
cmpsb
pop
int
rcll
mov
xor
lahf
inc
lcall
movl
cmpsl
daa
push
or
and
fwait
mov
lcall
je
pop
repz
dec
clc
lods
sbb
lock
ljmp
or
je
push
leave
pop
jecxz
popf
and
dec
cs
outsb
sub
xchg
ret
mov
out
pusha
lret
shlb
xor
popa
push
sub
fdivrs
pop
push
das
sub
or
das
dec
mov
outsl
pushf
jl
movb
pop
std
cli
or
add
std
sbb
add
sbb
xchg
bound
cmc
inc
push
movsb
inc
lret
adc
fstpt
sarb
pop
sbb
movb
push
xchg
arpl
cwtl
xchg
lahf
orl
pop
pop
sbb
push
mov
mov
sarb
pop
or
scas
jns
lods
adc
inc
mov
shll
jno
jmp
or
imul
and
pop
sti
xchg
inc
test
mov
mov
xchg
repnz
ficompl
daa
loop
flds
sub
jge
outsl
mov
add
xchg
subb
or
enter
pop
repnz
jae
fcmovnu
out
es
fwait
lret
xor
inc
pop
pop
mov
cld
lret
sbb
mov
jmp
and
cmpsl
xchg
sub
hlt
push
push
pop
js
sti
sbbb
jns
fimull
adc
sbb
cld
xor
sti
mov
add
or
test
sub
ljmp
xchg
fcmove
push
sbb
fstps
or
rorl
fidivrl
jge
mov
test
repnz
cmp
mov
mov
xchg
inc
negl
ficompl
and
and
dec
push
in
dec
jmp
xchg
inc
jmp
jne
adc
gs
pop
movsl
xor
pop
nop
inc
in
testb
jb
sbb
inc
bound
inc
adc
fdivrp
into
jo
cwtl
dec
sti
sbb
subb
out
mov
sbb
movsl
out
enter
mov
mov
fdivr
and
imul
sbb
inc
gs
and
mov
sarb
xor
inc
mov
rcll
int3
push
rorl
jge
dec
sbb
das
rcll
jb
mov
fisubrl
mov
push
xlat
movsl
insb
and
mov
push
pushf
stc
test
mov
pop
frstor
push
outsl
cmp
sbb
inc
xchg
mov
repnz
loopne
xchg
cltd
ds
movb
jmp
movb
jne
add
es
jle
dec
cmp
loop
adc
inc
sub
xor
xor
rolb
fisubrs
gs
data16
icebp
enter
or
xor
push
cmc
sbb
mov
std
das
shlb
mov
xchg
cmp
pushf
jnp
xor
fsubp
subl
mov
repnz
pop
inc
cltd
das
dec
pop
fstpt
mov
push
sahf
or
gs
bnd
jg
call
scas
xchg
jge
shl
mov
je
test
xchg
push
adcb
jg
push
jecxz
adc
hlt
lahf
cmpsl
idivb
loop
and
mov
jge
sub
imul
cld
rcr
int
adcl
push
mov
push
stos
xchg
adc
pop
fwait
jle
inc
sbb
ss
jge
add
imul
xchg
mov
in
repnz
mov
ss
push
mov
push
sbb
adc
cmc
insb
push
sbb
adcl
and
mov
addr16
mov
mov
cltd
in
sub
cmpb
mov
add
sbb
mul
stos
sub
cmp
mov
and
and
mov
fstps
aas
ss
jmp
or
dec
mov
stc
inc
xor
mov
in
push
sbb
clc
jmp
pop
xor
inc
test
arpl
sub
jge
aam
dec
lret
sbb
scas
jge
pop
lods
ficoml
xchg
std
or
mov
lds
dec
jno
andl
sti
cmpsb
sub
jne
rcr
push
shll
loopne
fmuls
jns
adc
gs
adc
fs
xor
push
cmp
jmp
push
push
lret
adc
mov
push
pusha
sbb
fneni(8087
fdivs
or
inc
retw
push
add
dec
movb
adc
pop
xor
cmp
jl
push
push
pop
cld
in
mov
mov
mov
adc
nop
and
and
in
lret
dec
sbb
jb
xchg
fwait
stc
dec
sub
jae
pop
mov
xor
dec
cmp
mov
int
mov
cs
mov
xchg
aad
subl
push
xchg
cmp
jl
hlt
in
dec
das
xor
dec
mov
insb
sbb
jne
sbb
or
adc
pop
cmp
jnp
sub
push
fbstp
prefetch
or
jnp
es
lahf
mov
nop
mov
fstps
inc
inc
pop
neg
push
mov
getsec
insl
lea
mov
mov
in
adc
insl
cld
cli
fildll
adc
sti
sub
ret
scas
int3
cmp
dec
imul
xor
push
lcall
lahf
lret
int
in
mov
add
cmp
icebp
pop
fs
mov
adc
xlat
imul
std
lods
xchg
test
mov
cmc
inc
adc
int
fwait
retw
mov
hlt
das
cmpsl
add
cmp
add
shl
jecxz
xchg
fcomps
ds
test
aam
popf
enter
dec
pop
sub
xchg
subb
mov
shlb
xor
jae
mov
cs
cmp
imul
mov
cltd
pop
popf
fidivl
repnz
dec
xchg
add
ffreep
cmp
imul
mov
mov
stc
add
in
jnp
adc
mov
in
fdivrp
xchg
lret
push
mov
adc
xchg
mov
push
lea
pop
xor
or
int
cmpl
mov
ja
dec
adc
iret
out
sbb
leave
add
mov
pop
movsb
mov
pop
movsb
sbb
fists
xlat
mov
xchg
call
mov
jle
lea
and
push
or
fisubrs
pop
pushf
imul
fldenv
mov
cmp
ljmp
movsl
sbb
sub
dec
or
rcll
mov
push
sub
enter
cmp
lods
jo
addps
add
dec
ret
pushf
or
add
mov
jne
or
adc
sub
pushf
mov
rcrb
rorl
jl
mov
lahf
fisubrl
fstl
dec
dec
mov
sysret
mov
mov
push
lret
fisubl
enter
out
cmp
in
or
fstps
inc
js
mov
shrb
inc
cmp
mov
push
ret
shr
jmp
les
jb
add
mov
lret
mov
movsl
fistps
jmp
arpl
and
inc
aaa
push
into
aam
stos
sbb
and
inc
cli
pop
movsb
lret
pusha
pop
in
adc
jb
repz
das
out
stos
cltd
loopne
imul
push
nop
outsl
or
pop
push
xor
outsl
pop
mov
ds
or
pop
jmp
jno
outsb
sbb
nop
pop
iret
dec
jg
sub
fstps
out
sbb
pop
int
mov
or
sarl
cmp
test
bound
cmc
daa
int3
dec
shlb
mov
mov
mov
inc
mov
test
xchg
lret
sub
ljmp
mov
stos
sub
or
xchg
push
jmp
jae
dec
scas
loop
pop
sub
jg
popa
call
jnp
mov
fsubs
and
cmp
js
push
mov
ds
sbb
sbb
cmp
out
xchg
fisttpll
mov
mov
movl
lds
pop
push
int
sub
dec
sub
nop
sbb
test
int3
mov
and
mov
mov
adc
mov
inc
es
adc
pmulhw
fucomip
pop
popa
cmp
dec
fisttpll
pop
xchg
pop
pusha
std
orb
stc
pop
cmc
outsl
leave
lahf
push
sbb
adcb
lahf
dec
mov
dec
in
mov
idiv
dec
cmp
add
xor
ss
mov
adc
xchg
sbb
add
clc
add
and
push
xor
movsb
cmc
fidivrl
and
pop
dec
add
mov
mov
jmp
mov
fwait
stos
enter
cmpsl
mov
clc
jge
mov
or
cmp
inc
sar
daa
sub
jle
push
pop
xchg
xchg
sub
adc
mov
pop
pop
pop
mov
dec
mov
add
dec
jecxz
fsubrl
sti
mov
push
stos
jbe
push
mov
cmpsb
inc
add
pop
arpl
fxtract
outsl
cmp
divb
lcallw
insb
push
int
stos
or
mov
push
add
daa
nop
jne
loop
mov
inc
or
mov
inc
daa
inc
inc
or
jo
inc
or
popa
ss
outsl
insl
xchg
or
inc
jmp
inc
inc
mov
popf
es
and
sti
popa
mov
scas
mov
and
les
xchg
xchg
arpl
inc
scas
mov
sbbl
sub
mov
mov
data16
mov
out
jmp
ficompl
lods
or
mov
into
sub
mov
add
push
popf
or
cmp
mov
into
sub
lods
adc
push
dec
or
jge
inc
jns
clc
mov
adc
pop
cmp
jmp
push
jbe
mov
mov
push
orb
inc
psubsw
nop
sbb
dec
mov
jns
cmp
mov
sahf
cmp
das
lret
mov
jge
pop
lret
jb
fs
inc
pop
push
loope
out
mov
leave
int
cmp
push
mov
xchg
packsswb
repnz
call
loop
adc
mov
dec
xor
divb
mov
fstpt
int3
andl
sbb
jl
dec
or
adc
pop
xor
xor
mov
ret
adc
psllq
jmp
xor
lret
sub
fucomp
int
frndint
add
inc
xchg
pop
mov
fmul
xor
inc
call
xor
cmp
sbb
vpacksswb
xchg
cli
mov
into
pop
cmp
imul
imul
fldenv
push
or
aad
insl
adc
pop
mov
fcoml
aam
xchg
mov
mov
mov
xchg
test
lahf
stos
out
mov
cmp
mov
cmp
dec
cmp
mov
jg
pop
stos
mov
adc
int
mov
jmp
popa
imul
js
sbb
cmp
fsubrl
fnsave
ret
imul
pop
subl
popf
cmp
fucomp
cwtl
push
sub
out
jmp
ja
and
cmc
imul
dec
jne
push
lret
mov
sub
pop
jl
sub
xor
dec
aaa
add
mov
push
pop
lret
cld
mov
repz
mov
mov
scas
dec
ss
ds
mov
iret
inc
in
jecxz
ss
int3
xchg
stos
mov
sbb
fmull
shll
inc
or
jne
xor
bnd
cmp
dec
adc
mov
mov
jp
lahf
mov
jo
pop
icebp
movsl
lret
clc
icebp
repnz
negb
scas
idiv
mov
xor
je
sbb
lret
mov
or
mov
mov
push
mov
or
jbe
push
mov
nop
pandn
out
push
das
cli
xorl
push
sub
mov
inc
adc
mov
and
sar
sub
ficoml
pinsrw
sbb
fidivs
lock
mov
or
push
xchg
sbbl
clc
clc
std
sbb
pop
cltd
lahf
mov
ss
mov
pusha
cmp
stos
jle
std
out
xchg
pop
push
es
sub
out
cs
adc
jns
rcrl
ljmp
mov
cld
or
dec
dec
mov
and
icebp
imul
frstor
aaa
rcrb
pop
sbb
insb
jg
insl
mov
sub
aas
mov
xchg
xor
or
cmp
jmp
mov
jnp
das
xchg
mov
cmc
enter
dec
push
add
push
or
faddp
rcll
insl
push
xchg
loopne,pt
mov
sub
sbb
popa
adc
dec
dec
pop
push
fisubs
adc
addb
ret
xor
stos
mov
jmp
sbb
insl
pop
mov
arpl
cmp
sbb
mov
into
call
inc
xor
adc
jle
jp
mov
cmp
pop
je
mov
notb
xchg
lret
lods
fldt
bound
mov
cmp
dec
or
mov
xor
andl
push
rorb
fwait
sbb
je
mov
pop
rolb
fiaddl
dec
sub
das
dec
cld
xor
sub
out
cmp
mov
insb
sahf
or
popa
cmpl
dec
xchg
in
sbb
jp
push
leave
sbb
jns
aaa
sub
xor
stos
out
fidivrs
mov
adc
cli
lods
test
js
or
repz
adc
or
cltd
mov
inc
mov
lahf
cli
orb
cmp
mov
int3
pop
mov
je
ja
leave
jg
push
fistps
push
ljmp
and
aam
or
in
mov
pop
mov
imul
rolb
aam
xor
xor
adc
ret
pop
repnz
jge
or
out
mov
fisttps
roll
ret
aas
sub
cmp
repnz
cwtl
push
lea
jno
aaa
pop
ror
cli
fildll
insl
jp
call
por
loop
sahf
inc
push
mov
cmp
in
xlat
outsl
icebp
aaa
fildll
adc
nop
mov
or
loope
ss
dec
push
call
and
jmp
pop
xchg
xchg
xor
scas
ja
mov
pop
jge
inc
fstps
hlt
pop
pop
xchg
inc
mov
mov
cld
arpl
mov
xchg
scas
imul
ljmp
xor
jo
sub
mov
push
jae
lea
or
mov
je
fucomi
push
lods
fisubs
sbb
loop
mov
shll
add
hlt
dec
sbb
inc
test
shlb
mov
scas
dec
addr16
pop
xchg
cmp
call
mov
mov
dec
sub
popa
mov
or
inc
data16
outsb
jns
xchg
pop
inc
cli
dec
sahf
push
lret
jmp
popf
push
xor
sbb
jge
add
lock
cmpsl
or
imul
add
js
sub
dec
cmp
xor
cmp
pusha
rcl
popa
nop
xor
adc
jae
enter
and
pop
cs
mov
mov
cli
or
mov
nop
mov
clc
mov
es
or
dec
mov
or
sub
push
les
pop
rorl
lods
mov
ljmp
ret
mov
inc
cli
pop
and
pop
lods
cmpl
dec
inc
sbb
out
shl
jno
mov
pop
jae
call
sbb
std
pop
popa
mov
out
and
imul
push
or
xchg
add
fsubrs
sub
inc
xor
sub
shr
mov
dec
fwait
daa
adc
add
mov
sti
or
fcoml
or
mov
cltd
lds
sbb
push
aad
in
cmp
sbb
mov
daa
enter
test
and
andl
ret
rolb
push
stos
sub
sub
imulb
add
out
lods
mov
jae
add
mov
ljmp
pop
push
sub
add
stos
dec
frstor
inc
push
aaa
sub
cli
aam
dec
adc
in
xchg
sub
mov
negb
stc
or
in
cltd
dec
loop
test
mov
sub
push
loope
pop
mov
nop
mov
inc
push
sbb
add
jge
push
fistpll
jae
fsubrl
cld
push
adc
dec
inc
jmp
cmp
mov
mov
xchg
lahf
add
inc
sub
rcl
scas
add
stos
push
loope
xchg
push
xor
shrl
mov
sti
lahf
pop
pop
push
jmp
mov
jbe
std
dec
add
rorb
or
add
movsl
jbe
pop
cwtl
pop
add
test
fcmove
sbb
inc
mov
push
jbe
push
scas
push
lods
rcl
adc
jo
pusha
test
and
cmp
xchg
pop
repnz
cmpsl
outsb
xchg
hlt
inc
imul
sbb
cmp
orb
jmp
pop
adc
test
and
stc
pand
pop
sti
xchg
adc
xchg
cltd
cld
xor
add
dec
insb
fmul
pop
test
daa
lahf
push
xchg
mov
sub
mov
xchg
or
cmp
mov
mov
lcall
fiadds
lcall
pop
outsl
les
sahf
out
jns
dec
mov
gs
scas
mov
in
das
add
rolb
push
mov
sbb
das
shll
stc
ficompl
or
cmp
pop
iret
ja
xchg
and
inc
mov
xor
loop
shrb
or
jecxz
pop
outsb
jns
int3
mov
mov
mov
mov
mov
hlt
xor
dec
jo
mov
jg
cmpsl
mov
call
push
fs
fidivrl
int3
sti
cmp
mov
ret
out
mov
jl
and
push
mov
and
int
adc
cld
in
int3
ss
in
cld
cmp
add
out
pop
cmp
sbb
hlt
ds
mov
hlt
xorb
mov
dec
out
inc
adc
push
inc
fnstcw
push
xchg
dec
push
inc
aaa
sbb
dec
popf
mov
add
and
or
xchg
adc
aad
push
add
repz
inc
xchg
pusha
addr16
adc
sub
push
inc
cmc
pop
mov
cmpsl
sub
sub
push
mov
pop
int3
add
stos
cmp
loop
pop
lahf
stc
push
xor
push
cvtps2pd
clc
int
lods
mov
dec
in
xorl
nop
add
jno
ficomps
cmp
mov
std
loop
adc
rorl
mov
pop
sbb
out
mov
mov
mov
xor
sbb
xor
pop
mov
scas
fcoml
mov
cmpsb
inc
or
push
movsl
add
sahf
add
insb
pop
dec
xor
sbb
push
lds
sbb
js
adc
dec
test
or
ret
sub
ja
pop
fbld
fdiv
jmp
or
js
es
adc
or
mov
mov
mov
mov
adc
sti
cwtl
fsubs
enter
ja
inc
jmp
sub
loopne
mov
cmpsb
loop
inc
mov
jmp
add
mov
jle
xchg
mov
mov
jns
mov
mov
sbb
adc
add
sub
mov
or
jne
mov
xor
mov
push
fcomps
gs
nop
mov
sarb
call
movsb
push
pusha
fistl
aad
mov
xor
repz
cmp
mov
movsl
popa
sqrtps
sbb
xor
das
adc
add
das
pop
or
push
loope
arpl
sbb
push
leave
sub
cmp
lahf
out
mov
bound
in
lret
mov
push
push
mov
pop
jae,pn
andb
adc
jne
jg
rclb
ja
dec
and
scas
leavew
add
or
adc
push
push
hlt
pop
std
inc
movsb
imulb
mov
jge
cmp
out
pop
jmp
cmp
lods
test
jg
pop
mov
and
gs
jle
nop
fisubl
out
jns
xor
gs
testb
adc
xchg
push
sbb
xchg
mov
mov
xchg
push
inc
dec
je
enter
xor
pop
int3
add
inc
mov
arpl
ja
insl
push
das
mov
pop
xor
push
mov
and
jle
pop
out
mov
sub
lret
fcompl
inc
imul
mov
test
xchg
jge
sbb
fmull
rcr
inc
lahf
push
sub
mov
push
out
insl
or
stc
cli
jns
pop
int3
mov
imul
stos
adc
add
fldt
cwtl
mov
inc
cmp
ret
add
cld
mov
or
adc
adc
jmp
dec
jo
lret
mov
fimull
mov
jecxz
repnz
fcmove
in
fwait
mov
pop
lahf
sub
sbb
bound
mov
ret
repnz
pop
fwait
repz
lds
adc
fneni(8087
aad
mov
std
dec
adc
lret
xor
lret
jg
and
bound
repz
push
bound
jmp
out
sub
jle
loopne
lret
int3
sbb
jecxz
and
inc
ffreep
xor
loop
mov
fimull
shll
std
xchg
sub
popa
adc
cmpb
xchg
xor
movsl
sub
rcrl
outsb
sub
out
or
push
sub
mov
xor
mov
loop
mov
in
rcr
dec
inc
adc
mov
pop
jne
ret
xor
loope
pop
mov
sbb
insl
xlat
iret
or
adc
insb
jmp
into
popa
cmc
adc
cltd
psubsb
pop
xor
call
xchg
mov
xor
inc
mov
call
and
mov
scas
std
add
sub
sbb
imul
or
divl
xor
pop
ror
add
out
pop
ljmp
stos
add
add
sub
pop
aas
lock
push
cmp
test
and
mov
fstpt
stos
mov
mov
and
fs
and
stos
aad
inc
arpl
aaa
pop
sbb
es
add
lds
jl
and
fidivrs
stos
push
aad
or
dec
lock
sub
mov
add
into
mov
push
cld
inc
inc
pop
add
mov
pop
cmp
popa
xchg
jge
out
mov
push
movsl
or
int3
in
pop
cmp
subb
imul
arpl
mov
repnz
jmp
fimuls
inc
mov
xor
movsl
repnz
adc
fimuls
dec
je
pushf
rcrb
cld
ds
push
mov
push
or
dec
push
sbb
outsl
popa
in
cmp
mov
inc
arpl
pop
push
push
adc
inc
mov
outsb
dec
ss
pop
mov
xchg
movsb
push
iret
lods
xor
fsubrl
cltd
xchg
push
pop
sub
jb
cli
mov
lods
xor
sub
mov
push
cltd
scas
es
into
imul
test
jb
loope
enter
jno
push
aad
and
cmpsl
imul
daa
sub
inc
sbb
sbb
mov
dec
leave
mov
sbb
sti
add
mov
mov
adc
gs
or
xchg
dec
sbb
add
aam
outsl
sbbb
jno
xor
data16
sti
or
andl
adc
inc
add
sbb
push
dec
or
inc
jne
gs
shrl
pop
bound
sahf
es
repnz
xor
fcmovu
repz
or
data16
outsb
je
or
adc
jne
dec
sbb
jle
adc
lods
inc
movsl
mov
ss
pop
int
xchg
mov
xchg
pop
in
in
jae
xchg
mov
ja
mov
mov
mov
pop
xchg
mov
fbld
test
jg
push
mov
pop
mov
pop
sub
cmpsb
std
sbb
or
sbb
pop
pop
pop
xor
popa
jnp
mov
adc
jmp
jb
xlat
push
gs
lret
in
mov
and
push
cmp
je
adc
inc
pushf
push
movsb
mov
pop
sarb
aad
mov
pop
insb
std
xchg
cmp
pop
shl
pop
stos
cmp
or
aaa
out
or
or
sbb
mov
test
cmpsl
ficompl
sti
cmpb
outsb
outsl
lds
push
push
movl
or
fistpl
dec
scas
or
pop
and
mov
or
mov
or
lret
push
pusha
mov
fwait
mov
imul
jmp
insb
lds
or
jnp
movsl
out
mov
ret
sbb
insb
cmp
dec
cwtl
inc
push
push
std
data16
xor
insb
cmp
mov
jae
mov
lahf
push
jns
sub
jle
adc
into
lcall
inc
arpl
push
or
push
fcoms
mov
sub
pop
push
sbb
adc
stos
notb
push
mov
adc
fcmovu
and
mov
fsubl
lock
mov
in
icebp
or
push
cs
mulb
jl
sub
push
nop
fbstp
jle
mov
xor
add
jbe
sti
sub
mov
dec
mov
lods
pushf
in
xchg
mov
push
test
sub
jb
test
test
cmp
mov
xlat
push
xor
push
lahf
imul
ljmp
ljmp
jl
lods
nop
mov
and
mov
jo
in
sahf
rorl
insb
inc
je
leave
lods
adc
enter
inc
dec
movsb
sahf
cs
fcomps
pusha
mov
imull
pop
insl
adc
jno
inc
xor
mov
das
jp
mov
adc
push
mov
mov
and
xchg
sti
mov
jne
jnp
mov
daa
push
xor
test
ror
lahf
dec
ficomps
ret
loope
pusha
mov
out
lods
int
sbb
mov
jo
xor
push
rep
sbb
lea
cmp
js
rcrb
sbb
dec
lock
cwtl
stos
mov
lcall
jo
fadds
or
cmp
mov
pop
xlat
ja
outsl
fcomps
push
rep
sub
fmuls
sbb
cmp
adc
jg
jae
outsl
insb
pop
jp
cmp
jae
ja
fnstenv
and
addr16
and
dec
in
push
dec
pop
sbb
enter
pop
pop
in
das
loop
push
ja
repz
xchg
andl
mov
loope
cld
jae
outsl
les
xor
ja
sbb
andl
push
and
imul
xchg
pop
push
scas
fldenv
xchg
fsubs
xor
jno
push
xchg
mov
mov
int3
mov
jnp
dec
sub
push
sbb
sbb
adc
dec
add
ja
xchg
mov
cltd
pop
push
xchg
orl
imul
xchg
push
dec
jg
xor
std
jnp
gs
jmp
ja
dec
icebp
jae
outsl
mov
addr16
xchg
jmp
arpl
in
mov
sbb
xchg
sub
in
fisttps
call
addw
movsl
jg
jnp
xor
cmp
jae
imul
push
or
xor
xchg
xchg
xchg
adc
cmp
mov
mov
xchg
xchg
ds
push
mov
cmp
jmp
xchg
in
out
loope
cmp
xor
jl
adc
pop
push
in
jnp
aad
mov
cmp
shrb
ds
addr16
adc
xor
ficompl
mov
xchg
mov
xchg
xchg
cmp
xchg
orl
aas
sub
dec
jg
xor
jmp
ja
ds
or
jmp
mov
jae
dec
mov
stc
push
sbbb
sbb
int3
enter
bswap
xor
and
les
adcl
cmp
es
and
int
fs
aaa
jae
sbb
jae
outsl
icebp
adc
mov
je
ja
pop
leave
pop
ret
cwtl
pop
push
adc
jg
pusha
enter
stos
jae
push
mov
cmp
mov
jmp
jnp
push
cmc
jae
outsl
jns
add
std
xchg
outsl
fs
mull
arpl
sbb
fwait
dec
mov
insb
push
sub
testb
in
cmp
ja
mov
push
xor
enter
jbe
jno
sbb
pop
mov
fyl2xp1
test
ret
lds
cmp
pop
mov
incl
sbb
push
adcl
call
inc
ja
add
cmp
imul
and
lcall
fwait
cld
xchg
inc
ja
jae
sbb
mov
xchg
jae
ret
adc
ja
jae
icebp
test
push
push
addr16
out
ds
arpl
mov
sbb
sub
mov
ljmp
cli
xchg
pop
and
and
mov
push
pop
aad
xchg
mov
jg
adc
and
sub
outsl
or
dec
rcr
aaa
xor
stos
mov
jmp
arpl
in
idivl
sbb
cmp
and
sbb
mov
add
sbb
pop
fcmovbe
pusha
idivl
xor
xchg
or
jmp
addr16
arpl
jp
fidivrl
push
fwait
gs
movsb
out
xchg
lret
cmp
push
mov
push
push
in
je
idivb
icebp
ret
jnp
dec
bound
fldlg2
outsl
cmpsb
dec
imul
mov
cwtl
sti
dec
das
fwait
xchg
sbb
xchg
test
call
and
sbb
jno
loopne
roll
outsl
subl
jg
jnp
mov
repz
lcall
sub
imul
out
and
mov
test
scas
pop
push
sbb
fwait
call
xchg
shr
cmp
repnz
cmp
xchg
stc
mov
push
icebp
xchg
andl
xchg
dec
and
add
mov
jae
adc
and
and
loope
imul
lret
loopw
push
vpsrlq
cli
lods
ja
dec
xor
xchg
rcll
xchg
imul
rol
xchg
mov
int3
test
fildl
jnp
out
and
ja
pop
jae
outsl
scas
enter
iret
arpl
dec
cmp
jmp
xor
scas
out
push
xor
xor
ja
hlt
and
fildll
inc
mov
or
int
cltd
test
nop
out
jae
mov
mov
arpl
adc
jnp
rcrl
xchg
push
push
in
jno
iret
cvtps2pi
pusha
dec
xchg
sub
lret
sbb
sub
ja
dec
repz
ljmp
mov
notb
push
popl
pop
mov
push
xchg
sub
xlat
shrb
jg
cmp
mov
mov
push
dec
jmp
ds
aas
xlat
pop
imul
aam
jmp
mov
outsl
xor
pop
aam
lret
adc
enter
ss
sbb
fildll
xchg
dec
and
jae
aaa
mov
or
push
sub
cltd
imul
mov
stc
arpl
lret
mov
ficoml
and
xchg
sub
and
xlat
dec
mov
xchg
sbb
jg
jno
test
mov
in
lea
sub
push
js
jmp
imul
jbe
xchg
arpl
cmp
lcall
lcall
ror
adc
ljmp
sarb
cmc
sar
or
outsl
push
in
out
loopne
mov
ds
lods
shr
pop
dec
dec
aas
ficoml
mov
sub
adc
dec
arpl
adc
sbb
leave
and
inc
stos
fsubr
xchg
in
cmp
arpl
xor
cmp
negl
adc
shrb
fstl
xchg
lret
jle
jmp
mov
stc
sub
push
cld
jo
pop
mov
sub
jnp
rclb
jae
xor
xchg
push
cltd
or
push
dec
arpl
outsb
or
shrl
inc
in
sbb
iret
and
imul
aas
and
push
jnp
cmp
adc
push
cmp
mov
fisubl
jns
adc
cmp
pop
mov
sbb
fwait
pop
repz
ficoml
pusha
pop
xchg
test
cmp
jnp
mov
pop
jae
stos
xchg
adc
mov
cmp
imul
add
addr16
and
arpl
pop
mov
jb
mov
fldt
xchg
jnp
xchg
lret
xor
mov
or
cmp
xchg
mov
cmp
mov
loope
push
and
addr16
and
fisttpll
pop
enter
fcomps
loop
std
les
sbb
xor
add
and
adc
push
cs
imul
or
xchg
call
mov
jb
cmp
imul
push
mov
mov
rcr
fsubrs
dec
jmp
fwait
jnp
or
add
and
add
push
xchg
enter
test
ja
jp
mov
lds
mov
and
outsl
sub
inc
fcmovu
out
addr16
mov
adc
ret
out
or
jmp
in
cwtl
test
sub
jmp
jae
outsl
mov
cltd
mov
add
mov
ja
stc
ret
mov
loopne
test
addr16
xor
xchg
mov
dec
cmp
fwait
adc
or
stc
mov
adc
rolb
jmp
jns
mov
and
xchg
and
cltd
pop
out
iret
outsl
push
xor
xlat
addr16
iret
jb
pop
sbb
adc
idiv
enter
fucomp
fists
ja
jae
and
out
pop
xor
out
xchg
sub
jg
in
push
sahf
jnp
ja
cmp
jae
mov
xor
arpl
mov
daa
daa
sti
inc
fcomi
sub
ljmp
fdiv
or
mov
xor
sbb
inc
fcoms
adc
jnp
jae
outsl
mov
jae
sbb
outsl
imul
ret
imul
dec
xlat
xor
imul
pop
jp
ljmp
xchg
imul
add
add
and
popf
ss
or
dec
stc
popa
enter
cmp
jmp
outsl
mov
imul
addr16
arpl
mov
sbb
ret
aad
ja
xorb
out
adc
xchg
xchg
jb
fldpi
jecxz
mov
orl
das
jg
xor
push
dec
ja
jae
outsl
cmpsl
jno
lock
cwtl
mov
imul
cmp
push
pop
out
pop
lret
sub
push
clc
xchg
test
push
stc
jp
mov
cmp
push
fistl
sub
adc
and
lea
ja
jmp
arpl
pop
fs
fcmove
imul
xchg
insl
les
lret
adc
jnp
ja
jae
mov
sbb
adc
aas
mov
imul
mov
xor
lcall
pop
jb
leave
fimull
fwait
dec
pop
mov
xchg
fisttpll
lock
xor
jg
jnp
enter
out
lcall
js
adc
push
loopne
insb
clc
lret
out
mov
arpl
push
enter
cltd
das
neg
dec
push
fwait
push
enter
pop
dec
dec
xchg
pop
negb
jecxz
scas
enter
adc
dec
std
xorl
pop
push
jnp
outsl
nop
add
cmc
in
dec
adc
dec
sbb
shrb
xchg
push
mov
xlat
mov
imul
push
sbb
ja
pop
pop
jae
outsl
mov
xchg
sbb
sti
addr16
in
out
push
xchg
arpl
push
pop
jnp
ret
and
xchg
mov
fmuls
xchg
out
or
xlat
mov
dec
adc
sbb
jnp
ja
lret
pop
xor
addr16
aad
xchg
mov
notl
mov
fimull
mov
icebp
sbb
pop
dec
inc
mov
pop
adc
jmp
std
jge
test
shll
std
outsl
fadds
jmp
arpl
pop
cltd
adc
sti
mov
xchg
sahf
das
icebp
push
cmp
xchg
mov
pop
cltd
push
xchg
jo
nop
xor
insb
aam
jnp
and
ja
xor
sub
or
cmpsb
mov
scas
outsl
xor
adc
stc
ret
imul
xchg
inc
or
adc
sti
inc
fwait
xchg
test
and
int3
dec
xchg
iret
andl
ja
shll
push
sub
ja
stos
lock
outsl
loopne
or
imul
and
loop
dec
test
aad
call
push
and
or
ja
jae
outsl
cwtl
sub
xchg
mov
lcall
and
ret
push
mov
aaa
jge
cmp
ja
jae
sub
imul
insb
mov
call
lret
mov
iret
lret
mov
cs
cmpsb
subl
ja
cmp
fsubrs
cmp
push
mov
dec
sub
mov
sub
xor
ss
add
xchg
cmp
and
jle
mov
pop
sbb
cltd
enter
inc
lret
jg
fstps
mov
cmpsl
inc
sbb
incb
push
or
lods
cwtl
call
aas
xorb
mov
fcomps
pop
and
pop
mov
fimull
shrl
adc
push
pop
mov
ljmp
ja
imul
outsl
outsb
sub
xor
dec
dec
roll
mov
lret
repz
pushf
fwait
and
dec
adc
ljmp
dec
lahf
mov
mov
or
mov
xchg
rol
ja
ds
clc
mov
idivl
jb
cmp
clc
fwait
repz
aad
lock
sub
push
test
sbb
test
mov
lret
or
cltd
sub
popa
nop
inc
sarb
fdivr
stos
loope
add
sub
addr16
flds
arpl
pop
ljmp
xchg
ficoml
cmc
cwtl
or
xchg
xor
push
pop
lcall
inc
push
loopne
jg
jnp
ja
adc
inc
mov
cmp
imul
pop
fsubrs
or
mov
loop
mov
inc
mov
fldt
mov
mov
lock
xor
xchg
and
and
dec
xchg
jae
push
mov
pop
call
outsl
dec
sub
mov
arpl
mov
mov
fisubrl
xchg
or
add
mov
cmp
gs
sbb
or
mov
rclb
jg
cmp
xor
push
arpl
lret
ja
cmpsl
jp
arpl
es
mov
sbb
adc
push
lods
fcoms
mov
lret
or
jg
das
or
lret
pop
lcall
outsl
pop
jae
ret
cmpsl
shlb
test
and
arpl
xchg
xchg
push
leave
pop
fistpl
mov
inc
xchg
dec
mov
xchg
xor
and
into
and
and
xor
xchg
incl
pop
adc
out
ja
push
mov
mov
and
push
adc
bnd
mov
and
dec
leave
fpatan
fwait
dec
fwait
xor
shrl
pop
imul
jecxz
fcompl
or
enter
in
inc
push
ja
sbb
mov
add
inc
sub
cmp
pop
jp
xor
fldcw
jp
outsb
xchg
popf
mov
inc
jbe
and
cmp
xorl
jg
xor
or
xlat
ja
mov
outsl
jmp
xchg
dec
and
and
addr16
and
jg
xor
das
enter
out
add
jae
xchg
mov
mov
pop
adc
enter
jmp
in
dec
fstpt
fnstenv
cli
ja
cmpsl
push
ds
int3
mov
mov
dec
push
jnp
fists
ret
xor
push
mov
movsl
pop
call
enter
push
adc
mov
push
dec
jnp
ja
jae
cmp
outsl
or
imul
mov
ret
dec
imul
outsl
rcrb
xchg
lret
mov
aad
sub
push
inc
andl
lcall
jae
fst
fisubs
in
inc
cmp
sbb
sbb
cmpsl
pop
cmp
leave
push
push
xchg
iret
xor
nop
jae
xor
xchg
dec
imul
mov
in
ds
outsl
push
fstpt
xor
xchg
inc
sub
enter
push
mov
fsqrt
mov
insb
dec
push
xchg
push
cwtl
fsts
jg
ret
mov
mov
jae
xor
outsl
xor
out
jns
xchg
mov
xchg
jp
aaa
add
ja
lret
insl
bound
dec
fmul
fcmove
jae
dec
jno
outsl
mov
imul
in
push
and
xor
out
sti
cmp
fwait
ljmp
mov
xchg
xchg
das
fcom
nop
mov
scas
jnp
xor
jmp
fwait
imul
aaa
sar
stc
repnz
xchg
and
and
xor
xchg
ljmp
arpl
xor
ret
dec
xchg
or
stos
das
pop
xor
mov
insb
push
inc
test
scas
addr16
pop
aaa
xchg
arpl
and
pop
fstpl
out
and
sbb
adc
fnstenv
sti
xchg
cmpsl
popa
sbb
xchg
xor
dec
aad
mov
cli
sub
jae
outsl
aam
out
jne
dec
sub
sub
test
jae
cmc
aam
nop
lcall
sbb
cmp
xor
jns
pop
jg
ret
mov
ja
in
test
push
dec
addr16
jo
ja
shll
jg
push
pop
clc
adc
cmpsl
stc
jl
rclb
mov
ljmp
cvtpi2ps
shlb
dec
orb
ret
es
mov
inc
lcall
sub
sbb
mov
mov
and
dec
and
or
call
ja
lds
outsl
and
lock
shlb
insl
push
daa
arpl
mov
out
dec
add
push
jmp
dec
xchg
mov
jae
ja
out
inc
outsl
sub
mov
xchg
jnp
in
ja
enter
fcoml
xor
out
cmpb
dec
cwtl
shrl
cli
cmp
sahf
jp
mov
outsl
and
dec
adc
add
sbb
inc
jae
dec
and
mov
cmp
adc
jp
xchg
arpl
push
sub
xor
repz
and
imul
inc
add
imul
inc
in
dec
or
mov
add
cmp
dec
adc
inc
mov
inc
xlat
xchg
inc
jmp
sub
or
pop
ja
mov
mov
jg
xor
ja
pop
loopne
jae
shrb
push
imul
inc
jns
ja
mov
push
xchg
sarl
cmp
dec
and
dec
pop
js
jb
dec
cli
xchg
pop
xchg
das
enter
push
or
jb
dec
xchg
jae
test
jae
and
fsubrs
jl
sbb
push
and
sahf
sbb
stc
mov
xchg
mov
jmp
mov
ret
dec
or
adc
stc
pop
pop
aaa
and
mov
inc
imul
arpl
std
out
fwait
cmp
cmp
mov
xor
mov
rorb
mov
aas
fmul
pop
fcomps
in
notl
shrl
dec
xor
shll
sub
xchg
nop
aam
dec
xor
and
hlt
cli
mov
push
cvtpi2ps
mov
mov
jae
mov
das
mov
inc
jmp
stos
xor
fwait
lret
cwtl
ret
jnp
inc
icebp
push
aaa
mov
cli
xchg
das
xchg
push
lret
xchg
xchg
jg
mov
sub
icebp
ja
mov
test
push
and
imul
dec
das
pop
and
jmp
lcall
mov
push
aaa
in
int3
fcmovnu
jae
in
cwtl
or
jnp
mov
inc
xor
fiadds
adc
cmpsb
dec
ret
jae
push
cmp
xchg
outsl
push
stc
cmp
ds
or
hlt
leave
loop
sub
pop
pop
test
push
dec
jp
cwtl
xchg
mov
jmp
pop
dec
jg
enter
lahf
ja
pop
inc
jae
outsl
pop
imul
andl
push
fwait
cmp
cwtl
push
xor
and
pop
mov
xchg
cmp
xchg
jb
fsubr
in
in
add
fptan
xor
jns
or
pop
jbe
cmp
pop
jmp
aaa
fwait
popf
test
pop
pop
rorl
divb
jae
out
mov
fcomps
mov
sbb
mulb
jecxz
dec
cmp
test
cmp
test
enter
mov
xor
and
jae
and
nop
push
popf
mov
push
in
pop
pop
and
shr
call
pushf
add
je
cmp
push
pusha
call
dec
negl
aam
push
pop
popa
in
cld
pop
cwtl
repnz
pop
repz
lods
push
push
cli
stc
loopne
in
shlb
xchg
xor
xor
jno
or
dec
and
and
daa
dec
push
sbb
pop
cmc
mov
std
lods
push
dec
inc
js
mov
stos
pop
xchg
jnp
mov
andb
arpl
pop
add
arpl
and
rolb
les
andl
sbb
push
das
add
lret
aam
add
imul
pop
and
arpl
out
pop
add
ja
jno
push
popf
fnstenv
inc
pusha
and
mov
xor
in
insb
arpl
jb
mov
pop
int
jb
and
xor
xor
loopne
outsb
push
movsl
mov
inc
scas
xchg
jmp
mov
cmpb
mov
mov
in
add
mov
fdiv
jne
mov
ret
lods
mov
ret
das
push
sbb
pushf
lea
jne
xadd
pushf
clc
mov
bt
bts
sub
adc
rol
lea
sub
stc
stc
bt
jmp
lea
call
call
pushf
pushf
jmp
or
or
xchg
or
pop
scas
add
xchg
jge
test
fdivrs
jnp
sbb
xor
sub
jecxz
aam
je
outsl
add
outsb
insl
outsl
mov
jmp
cmp
fsubs
sub
ljmp
leave
cwtl
pop
xor
loop
or
cmpb
das
fdivl
insl
arpl
sbb
xchg
lds
test
cli
xlat
inc
push
imul
popf
subl
mov
out
push
sub
loopne
cmp
pop
or
mov
sub
lds
negl
xor
testl
pusha
xchg
ret
lahf
lret
test
divb
stos
mov
add
shlb
mov
pop
dec
out
test
mov
xor
stos
xchg
lods
sbb
jns
jmp
xlat
dec
fndisi(8087
sub
loope
js
dec
add
jae
repnz
out
and
jo
ja
inc
xorl
cmp
mov
ret
sbb
mov
sub
push
cwtl
add
popf
cmovg
stos
sbb
add
daa
mov
pop
insb
sub
cwtl
push
hlt
xchg
stos
lahf
push
jnp
fwait
imul
or
jecxz
fxch
data16
test
jp
stc
movsb
ja
clc
pop
mov
mov
lret
in
in
mov
pop
sar
cmp
stos
sbb
mov
cli
add
jecxz
mov
push
stc
and
imul
leave
addr16
int
pop
leave
inc
sub
test
push
filds
pusha
int3
cmp
push
out
mov
add
mov
movsb
nop
pop
inc
sub
mov
cmp
jmp
mov
mov
gs
insl
mov
repnz
icebp
call
xor
rcrb
xchg
pop
pop
sub
sarb
dec
test
inc
jbe
dec
sbb
das
push
jp
fiaddl
and
es
and
pushf
movl
pushf
mov
movw
lea
jmp
movb
mov
pushl
mov
push
movl
pushl
ret
movb
lea
jae
pusha
cmp
pushf
movb
pushf
push
lea
jae
jmp
test
push
pop
xchg
mov
test
jecxz
cmpb
add
adc
out
fldl
test
pop
cli
adc
sbb
mov
add
pop
aam
or
inc
cmp
aam
out
pop
jnp
sbb
daa
mov
jae
xor
mov
rcrb
pop
sub
jne
pop
rcrb
mov
pop
xchg
push
in
add
fs
jmp
mov
and
fmuls
clc
fwait
inc
xchg
cwtl
or
and
je
mov
xor
adcb
out
and
lcall
int3
dec
lock
mov
lds
cltd
les
xor
jns
xchg
mov
and
mov
stc
imul
sbb
lea
cmpsl
insb
inc
mov
jp
lock
mov
add
or
jp
and
inc
xlat
imul
cmp
dec
push
jl
fistpll
add
cmpb
mov
inc
lock
add
andb
cs
bound
cmp
pop
xor
or
cmp
insb
andl
inc
mov
jae
daa
enter
cmpl
rcrl
int
stc
xor
enter
pop
iret
rorb
rcrl
mov
sbb
add
aas
out
dec
push
adc
dec
sub
inc
sbb
mov
or
mov
inc
push
push
lret
push
iret
fisubl
das
push
repz
dec
sahf
xor
inc
mov
out
fmull
jb
mov
mov
in
xchg
es
std
int3
dec
mov
jmp
cmp
sbb
out
std
adc
iret
sub
inc
mov
fwait
call
hlt
sbb
fsubrs
cmc
enter
xchg
rcll
cmpsl
fidivrs
and
cli
mov
aas
repz
pop
and
mov
rcr
cmc
sar
bsf
mov
clc
jmp
fcmovnu
es
dec
mov
loop
mov
sub
sub
int
test
mov
push
cmp
cmp
loopne
push
lods
xchg
push
dec
das
ret
int3
jns
pop
mov
test
add
ret
leave
adcl
inc
cmpsb
mov
loope
push
lahf
push
or
in
out
fldt
adc
add
add
pop
dec
inc
andb
test
lret
in
mov
add
test
mov
or
pop
or
mov
std
movsb
lods
adc
cmpsb
sbb
movsl
mov
sar
xchg
rclb
push
xor
aad
push
mov
xchg
sbb
jl
shr
push
sbb
movsl
push
jl
and
pop
xlat
in
inc
enter
rol
pop
fidivrs
arpl
mov
pop
jns
dec
loopne
das
pop
sub
or
fwait
adc
adc
lret
add
les
mov
imul
pop
fiaddl
cmpsl
mov
push
aas
pop
insl
cli
out
mov
orb
mov
ljmp
push
test
and
aaa
lods
popf
push
lret
mov
xor
lea
pop
xchg
sbb
mov
adc
aas
out
cli
push
inc
adc
push
pop
fsubrs
jmp
dec
cmpsl
ss
add
out
js
mov
fcomi
mov
shlb
das
pop
jne
jp
movsb
sbb
jnp
aam
lods
adc
into
dec
push
jle
mov
add
pop
and
jb
sbb
pushf
inc
add
inc
xor
mov
data16
out
dec
outsb
sbb
adc
stos
adcb
lea
inc
add
mov
cmp
clc
fadd
jae
inc
out
mov
pop
ja
ss
mov
sbb
fists
cmp
imul
sbb
std
test
pushl
sub
xor
adcb
inc
push
scas
testl
sahf
mov
xor
leave
imul
add
xchg
lret
cmp
sbb
and
js
daa
jl
outsb
pop
repnz
xchg
aaa
mov
jbe
enter
cmp
aam
add
mov
imul
or
pusha
fisttps
rcrl
clc
scas
mov
or
mov
das
pop
xchg
xchg
test
lods
repnz
das
sbb
jbe
insb
fldcw
enter
lds
xor
loope
push
mov
js
push
cmpsl
push
js
jne
iret
inc
andl
dec
mov
xchg
fwait
xchg
test
mov
push
leave
jno
add
pop
adc
push
dec
lods
or
clc
scas
cwtl
xchg
adc
xchg
ja
mov
adc
push
xchg
popa
es
ljmp
fmuls
jno
subl
mov
sub
cwtl
fists
lds
xor
or
and
int
jne
mov
jns
insb
cmp
inc
int
inc
addb
add
stos
cmp
stos
mov
ret
dec
mov
or
sub
xorb
push
push
push
xlat
fs
insl
loope
dec
out
mov
dec
mov
add
fcoml
pop
jno
daa
cmpb
outsl
fwait
lods
int
out
imul
stos
jnp
cs
mov
xchg
xor
je
xor
stos
jecxz
xchg
jecxz
pushf
and
mov
mov
sub
out
xchg
cmp
scas
subb
jae
insb
stos
or
rolb
mov
push
in
mov
mov
cmp
inc
adc
scas
dec
sbb
imul
rcl
ss
ljmp
jmp
sarb
repz
sbb
negl
pusha
mov
sar
mov
push
push
pop
lods
cmp
aad
mov
mov
fs
fs
dec
xchg
mov
sarb
xor
rorl
daa
mov
dec
xchg
jmp
pop
push
fimull
pushf
add
adcl
mov
pop
ret
mov
rorl
pushl
jo
sti
call
mov
pop
aas
fidivs
addr16
xor
mov
sbb
les
mov
mov
mov
leave
jo
dec
sbb
jg
jge
add
sub
in
and
jle
jbe
push
and
insb
sbb
negb
mov
and
lock
jecxz
or
xor
mov
sub
mov
test
stc
jp
dec
push
mov
and
mov
mov
cmp
or
mov
das
pop
test
xorb
aam
subl
inc
dec
sbb
cwtl
pop
cmp
push
adc
nop
jnp
xchg
jg
inc
movsb
shr
sbb
xor
mov
fdivl
fs
mov
xchg
add
in
push
push
add
je,pt
out
int3
ljmp
pop
enter
adc
sub
adc
addb
ret
icebp
add
pusha
cs
jb
in
sub
jne
pop
sub
inc
pop
pop
mov
call
enter
inc
cmpsl
sub
lods
dec
jge
rcll
clc
out
adc
nop
jge
jae
imul
xor
movb
shl
mov
lea
rcl
stc
add
pusha
or
shl
mov
cmp
call
pushf
rep
pop
lea
movw
mov
pushf
lea
jmp
jl
jo
lcall
sub
cwtl
xor
push
xorb
gs
popf
movsl
mov
pop
jns
fisttpll
and
jns
jae
or
mov
pop
outsb
push
mov
jmp
mov
fisubrl
stc
js
push
xchg
insl
push
or
cmpl
outsb
mov
or
pop
xor
imul
or
arpl
cmp
mov
and
inc
repnz
dec
adc
cmp
cli
mov
add
ret
push
mov
cwtl
cs
lahf
inc
cltd
jbe
mov
lds
xchg
adc
neg
movsb
scas
lods
ss
adc
aaa
imul
imul
aam
ret
mov
mov
loop
and
xchg
sti
cmpsb
outsb
repz
push
xchg
push
push
pop
test
imul
adc
loop
or
add
fmulp
pop
jge
pop
mov
outsb
lcall
mov
data16
mov
add
dec
lret
jge
and
shr
inc
out
pop
enter
xor
xchg
sub
or
std
and
sti
cmp
out
repnz
outsb
imul
je
loop
push
xchg
push
ret
cmp
repnz
shr
push
hlt
aaa
pop
mov
push
loopne
test
xchg
push
jg
aad
jns
add
fisubs
scas
xor
nop
sub
xor
subb
int3
cwtl
cmpsl
imul
arpl
mov
fadds
sbb
xchg
test
es
cmp
jns
sbb
push
push
stc
pusha
pop
xchg
cwtl
and
enter
mov
js
arpl
cwtl
xor
imul
lret
iret
icebp
push
shll
pusha
sarl
in
aad
loopne
or
inc
sbb
outsb
in
jns
adc
clc
repz
cmp
xchg
es
fcomps
push
jnp
push
xor
movl
test
xor
loope
lahf
pop
imulb
push
dec
aad
test
addl
adcb
xor
imul
lea
je
pusha
cmp
add
pusha
bt
sub
jno
cmp
call
cmp
push
jmp
movw
cmpb
jmp
pushl
dec
test
pushf
shl
setg
push
lods
mov
lea
jg
cmc
push
ror
movb
lea
jbe
test
push
neg
pusha
pushf
lea
js
inc
pusha
pushl
call
pushf
jmp
add
dec
mov
cltd
jecxz
mov
in
xor
cli
xchg
fistpll
or
push
jns
mov
mov
adc
aaa
pop
fidivrs
lret
mov
loopne
jl
sbbl
mov
out
sub
pop
fs
movsb
mov
aas
in
mov
fs
or
lahf
jmp
push
cmp
jnp
and
xchg
jl
hlt
sub
stc
mov
sbb
loopne
cltd
or
ret
jg
mov
imul
push
mov
iret
push
inc
gs
dec
negb
xorl
cli
push
cmp
rorl
adc
lahf
jbe
push
mov
or
mov
add
lahf
jg
mov
pop
xchg
cli
out
push
adc
mov
pop
xor
sahf
popf
test
inc
push
loop
outsl
lds
mov
loope
dec
lods
fists
cmp
scas
movsl
cs
dec
jne
fs
iret
pop
and
or
jge
pop
ljmp
mov
lods
stos
jecxz
dec
test
jp
add
scas
jge
add
jmp
and
outsb
cmc
ljmp
test
aas
mov
push
call
inc
out
test
dec
push
clc
xchg
pop
ss
push
mov
fs
adc
cmp
sub
loopne
lcall
sub
mov
je
aaa
ja
shrb
mov
loop
aaa
inc
push
push
out
std
xor
insb
jbe
jecxz
xchg
push
mov
jg
xchg
je
push
xlat
cmpsl
lret
xor
xlat
mov
push
sbb
fs
xor
sbb
mov
sbb
add
jns
jl
push
sub
jno
stos
push
xor
ffreep
fistpl
xchg
scas
gs
push
std
mov
ss
mov
sub
pop
add
cwtl
push
js
xchg
jle
push
mov
test
mov
mov
test
sub
imul
aas
sbb
sbb
mov
ljmp
mov
cltd
pop
mov
test
insb
mov
in
pop
out
jp
and
pop
pusha
jmp
test
lods
movsb
jne
icebp
push
cmp
jae
lahf
or
repz
call
or
repnz
push
pop
movsl
and
add
stos
sub
not
and
xlat
fsubl
js
adc
mov
push
and
mov
cmp
cmp
xchg
add
adc
xchg
imul
and
mov
xor
mov
cmc
xorb
mov
out
lcall
inc
and
sub
das
adc
and
pushf
repnz
mov
xor
sbb
ss
out
pop
sbb
mov
std
lret
sarl
cmp
xchg
mov
cltd
daa
mov
rcr
xchg
adc
sub
jns
sub
mov
setns
cmp
pusha
jae
in
aam
int3
xor
outsl
jmp
cmpsl
lret
and
movsb
dec
mov
adc
ret
adc
xor
fsubs
ret
test
inc
mov
lods
movsl
mov
jne
push
mov
adc
mov
sarl
sub
arpl
fcoml
add
hlt
xchg
scas
subb
inc
or
popf
cwtl
and
icebp
ret
mov
sbb
mov
fisubrl
test
xchg
lds
xlat
xchg
mov
sbb
mov
xchg
loopne
cltd
xor
pop
notb
lock
movsb
imul
mov
cmove
es
notl
add
movsl
ret
mov
jle
fdivr
xchg
movsb
push
outsb
push
arpl
xchg
adc
pushf
sbb
shrb
out
sub
sub
inc
pop
sub
test
lock
rclb
push
rolb
fldenv
sbb
cmpsl
push
bound
adc
je
cwtl
fs
mov
gs
sbb
fsubl
cmp
jnp
neg
out
or
lods
push
or
test
push
mov
filds
notb
lea
movsb
dec
arpl
gs
jne
inc
rcrb
add
and
mov
or
int
loopne
cmp
dec
mov
mov
xor
add
and
add
bound
adc
add
scas
push
fstpl
push
cld
jo
das
imul
into
pushf
inc
pop
pop
call
fprem
xchg
jo
cmp
sbb
lcall
in
add
inc
dec
xor
ds
adc
divl
dec
add
repz
push
inc
fldl
inc
int3
jno
cmp
iret
imul
dec
and
push
pop
fdivs
mov
loopne
inc
or
adc
mov
outsl
inc
mov
xchg
sahf
pop
mov
pop
loope
mov
jl
cmp
enter
fldl
xchg
add
dec
addr16
imull
inc
adc
ret
jne
or
divps
or
pushf
sbb
mov
dec
std
popa
dec
int
popa
loopne
cmc
xchg
mov
lods
clc
mov
sub
outsb
rcl
fabs
imul
mov
mov
xlat
jnp
cmpl
push
cld
jb
std
cmpb
cltd
or
mov
in
clc
add
sahf
ja
loop
push
sbb
movsb
sub
in
imul
movsl
xchg
adc
out
lcall
int3
icebp
lods
loop
jecxz
mov
or
mov
inc
cwtl
pusha
cmp
jecxz
dec
add
jecxz
cmc
repnz
mov
push
lcall
scas
xchg
pop
cmp
jl
hlt
or
out
adc
mov
fwait
mov
in
pop
pop
xorl
xchg
repz
push
ljmp
xor
push
nop
stc
aas
pop
push
ds
subl
adc
imul
mov
xlat
mov
out
ljmp
fistpll
xchg
inc
pop
and
insb
cmp
xchg
mov
and
lock
jne
addb
sbb
subl
jbe
mov
mov
cmc
mov
cld
loope
dec
dec
int
ss
imul
inc
inc
push
add
add
jae
std
ja
mov
inc
pop
les
xlat
cmp
pop
mov
repnz
dec
pop
mov
mov
hlt
jle
mov
pop
mov
mov
outsb
xor
sub
add
fisttpll
mov
mov
fs
loop
dec
fisubl
or
inc
sub
mov
fldl
jg
clc
lret
mov
mov
adc
ds
mov
ret
push
mov
std
aad
shll
scas
push
jmp
jno
sub
iret
sbb
icebp
stos
push
lcall
test
enter
popf
sub
in
das
mov
adc
xchg
outsb
pop
dec
mov
clc
imul
in
shr
pop
ljmp
xchg
jg
call
push
jns
mov
loopne
addb
ret
test
push
ret
mov
mov
repnz
sub
fisttpl
mov
rcrl
and
insl
ss
pusha
xchg
insb
cmp
and
cmp
je
pop
jae
pop
xorb
dec
xchg
pop
dec
jmp
sbb
in
cmp
inc
imul
mov
les
je
fstpt
xor
inc
mov
sti
sbb
xor
and
jno
jbe
hlt
and
inc
mov
aad
cli
daa
mov
popf
sbb
push
or
lret
sbb
ror
stos
repnz
and
imul
in
lock
test
xor
xor
popa
lods
fs
mov
push
or
leave
test
jmp
das
imul
jne
shrl
inc
lea
imull
rcl
add
ret
out
sub
jns
aam
inc
dec
sub
sub
aas
inc
cmpb
mov
dec
pop
mov
pop
push
jl
mov
das
imul
popf
inc
xchg
shrl
faddp
add
sub
push
cld
ds
out
or
clc
cmp
and
loope
and
mov
ss
mov
mov
xor
sub
sub
adc
scas
lret
push
jno
cmp
or
movsb
jmp
cli
sbb
sbb
in
cltd
mov
lods
push
sbb
and
mov
out
andb
test
out
fsubs
repnz
aad
shrl
insb
inc
lret
mov
jns
add
sbb
nop
shlb
test
push
mov
sub
pop
repz
push
push
and
das
xchg
lret
je
bound
loopne
shll
mov
and
gs
mov
adc
inc
test
inc
xor
pop
dec
loopne
arpl
mov
sbb
fsts
dec
sti
push
xchg
loop
cli
fldenv
mov
ljmp
lods
daa
adc
cltd
sub
lock
jbe
jle
and
rcll
in
mov
cmp
stos
sar
clc
xchg
or
and
cmp
inc
ror
sub
fmuls
mov
dec
repz
sbb
push
cmp
pop
loopne
pop
jp
addr16
cmp
push
lcall
rol
push
sbb
sbb
push
out
mov
repz
mov
sub
pop
jb
lret
daa
ret
add
jb
add
shrl
out
and
jae
popl
js
loope
clc
test
sub
adcl
in
stc
sub
out
dec
inc
dec
loop
or
sbb
stos
in
pop
mov
enter
stos
mov
fwait
and
sbb
push
jmp
rcll
push
add
cmpl
jnp
jecxz
cmp
int3
fcomps
xchg
ret
aam
inc
and
mov
insb
fldenv
push
popf
cs
in
add
js
loope
add
fcmovb
into
aam
pop
inc
mov
subb
addr16
xchg
das
out
jmp
mov
frstor
stos
out
add
dec
pop
cs
filds
in
dec
push
cltd
or
sbb
and
dec
or
das
fs
ret
lock
imulb
jo
push
xchg
insl
xchg
add
sub
pop
xlat
push
add
das
outsb
outsb
clc
xchg
mov
add
add
and
add
add
or
add
ret
push
das
add
add
add
add
add
shll
add
add
push
ja
add
add
add
das
add
add
add
or
add
add
add
and
add
add
cmp
add
add
add
add
add
add
add
add
addb
add
repz
and
add
add
ds
sbb
add
add
movsb
jns
add
mov
add
push
das
add
push
add
mov
add
add
add
movsb
lea
lea
pop
call
mov
or
rcrb
nop
movl
pop
add
test
pop
in
mov
imul
jnp
dec
aas
stos
jmp
in
mov
enter
inc
cmpsb
jno
test
es
dec
lea
out
jge
sar
adc
lahf
push
add
and
cld
mov
inc
pop
arpl
sbb
push
cmp
lcall
push
into
mov
outsb
loop
sar
and
sub
jmp
pop
in
scas
stos
sub
pop
lock
jbe
push
stos
insl
cwtl
inc
and
test
clc
mov
std
mov
scas
xlat
fs
and
hlt
aad
xchg
pop
xor
xchg
js
xchg
rcll
pop
jnp
jnp
or
cli
mov
xchg
sahf
aad
xlat
xchg
rorb
outsl
jne
or
je
inc
adc
jg
add
lods
jno
pop
out
adc
jl
jno
inc
shlb
push
mov
inc
pop
xor
lods
lret
pop
cmc
push
test
out
ljmp
push
pushf
lea
jae
jmp
push
pop
mov
inc
bound
cmp
scas
xor
push
stos
lahf
mov
mov
xchg
inc
test
push
movsb
sub
cwtl
or
or
sbb
imul
add
xchg
cli
or
pop
pushw
fwait
and
mov
push
clc
bt
pusha
mov
sbb
rol
mov
test
bt
sub
pushf
call
xchg
and
mov
mov
mov
sub
fcmovnbe
add
mov
hlt
xchg
ret
ret
mov
cli
outsl
and
dec
bndstx
aaa
or
inc
adc
in
dec
sub
and
jmp
call
dec
das
push
mov
xor
test
inc
daa
mov
fcmovnbe
mov
mov
cmp
jmp
adc
inc
dec
cmp
mov
ja
dec
imul
out
sub
aas
pop
jmp
stos
jmp
mov
mov
add
mov
subl
lret
repz
lret
mov
ljmp
fistl
push
jp
xchg
int3
int
lcall
daa
xor
aad
cmc
mov
ret
push
dec
ss
push
in
sbb
lret
inc
sub
pop
sbb
daa
sbb
lds
push
addr16
cmp
xlat
sti
fcmovnu
ret
inc
push
stos
push
xor
dec
sub
xor
adcb
rcrl
lret
pop
sbb
sub
jp
lcall
xchg
push
fs
rcrl
push
cltd
sahf
dec
sti
cmp
mov
xlat
xlat
sti
fistpl
sbb
push
fidivrs
sahf
mov
rcrl
fistps
idiv
push
add
jo
cmp
push
pop
mov
pop
mov
push
add
cwtl
rorl
negl
sbb
sub
out
cmp
cmp
pop
stos
xor
imul
mov
push
test
aam
dec
jnp
xlat
pop
sbb
dec
push
pop
iret
pop
push
cmp
ret
xor
fbld
punpckhbw
aaa
or
mov
xlat
nop
fmul
pop
sub
negl
fisttps
push
sub
jecxz
jmp
sti
adc
fisttpll
push
xor
dec
or
sub
push
testl
and
pop
jecxz
dec
fists
xlat
mov
xor
pop
sbb
cmp
cwtl
and
rcl
push
js
sbb
fcmovb
dec
std
cmp
nop
push
mov
or
outsl
dec
pop
js
pop
cmp
jp
sub
xlat
pop
lret
adc
mov
pop
ja
sub
sbb
fprem1
outsl
push
dec
mov
xor
dec
jp
stos
je,pt
push
cs
xchg
pop
xor
push
cmp
ss
or
mov
sub
les
cltd
dec
neg
shlb
inc
pop
mov
sbb
or
sbb
xor
adc
sbb
cmp
push
push
mov
cmp
cmp
sbb
or
push
pop
test
inc
inc
clc
insb
outsb
out
push
pop
inc
cli
push
pop
push
jge
dec
jns
aam
xchg
dec
sbb
jl
sbb
pop
pop
int
mov
mov
fwait
pusha
outsl
aas
sbb
push
lahf
icebp
cmp
lahf
lahf
add
push
lret
cmc
jae
imul
cmp
enter
into
push
cmp
mov
mov
jp
adc
cmp
pop
push
cmp
ds
fstpt
mov
cmc
cmp
push
push
test
in
scas
push
sub
cmp
aam
jne
movsl
and
pop
sub
int
sahf
testl
pop
mov
in
outsb
cmp
ret
or
bound
fs
mov
push
inc
sub
inc
push
daa
or
push
mov
jnp
jle
add
or
out
dec
or
jp
push
mov
leave
pop
or
mov
dec
xor
mov
pop
cwtl
add
dec
mov
cmp
dec
sarl
insl
push
inc
mov
push
cmp
aam
outsb
aam
jnp
dec
sbb
enter
cmp
popa
add
insl
call
repz
fdivrs
sti
movsb
xor
pushf
add
arpl
arpl
repz
sti
adc
test
sbb
loopne
push
loopne
push
lock
sti
aad
mov
or
cmp
push
sub
cld
in
mov
cltd
lock
aad
fs
cli
xchg
sub
mov
cwtl
negb
cmp
adc
sub
cli
dec
fs
adc
xlat
mov
cmp
xor
and
sti
cmp
cmp
cwtl
cmpb
das
lock
xchg
int
aad
fidivrl
push
sub
pop
jl
pop
add
inc
call
stos
cltd
in
dec
cmp
jl
aaa
ds
or
rcrb
stc
cmp
aam
jmp
and
jp
push
and
sbb
push
cwtl
or
adc
cmp
xchg
pop
push
cwtl
aas
stos
cmp
mov
xor
scas
cmpl
sub
adcl
cmp
fdivs
leave
mov
mov
imul
push
adc
dec
shl
xor
leave
lret
and
pop
jle
orb
shrl
mov
jns
push
dec
test
cmp
adc
cmp
sub
jl
cli
subb
or
cmp
mov
aas
fistpl
xor
repz
sbb
insl
cmp
hlt
jl
push
jb
lret
pop
jnp
cmp
or
jl
out
cmp
cld
cmp
cmp
xchg
lret
xchg
sbb
sub
or
outsb
aaa
fnsave
jge
adc
sbb
mov
cmp
inc
test
sbb
push
cmp
inc
ret
pop
jmp
cmp
pop
inc
shrl
push
push
cmp
xchg
sahf
pop
xlat
cmp
fdivrs
inc
cmp
lret
sub
adc
out
cltd
sub
out
lret
mov
sbb
stc
repz
repz
dec
or
xor
pop
mov
push
stos
add
mov
push
repz
pop
scas
and
cmp
sbb
adc
and
mov
cmp
imull
mov
fdivs
sub
xor
adc
jecxz
sbb
ljmp
daa
pop
shl
pop
cmp
cmp
dec
push
fwait
mov
cmp
nop
mov
lock
mov
pop
cwtl
push
testl
push
or
in
adc
cwtl
mov
mov
mov
push
sbb
scas
jp
fxch
cmpsb
cmp
push
shrb
scas
cmp
js
jge
cwtl
icebp
dec
add
dec
cwtl
xchg
es
sbb
jp
rorl
in
mov
in
or
fs
jp
mov
or
jp
dec
add
cmp
fldenv
cmp
repz
inc
mov
sub
adc
mov
pop
cmp
fildl
fwait
adc
cmc
push
or
push
xchg
jmp
add
and
and
cmp
sub
ljmp
fsubs
sbb
xor
ds
push
add
inc
and
nop
push
idivl
adc
stc
dec
xchg
adc
xchg
xor
dec
adcl
cmp
pop
xchg
mov
stc
jns
into
scas
icebp
out
mov
inc
cmp
out
xlat
test
cmp
xchg
cmp
test
jae
xchg
imul
dec
lret
pop
cmp
mov
xchg
negb
or
xchg
rcl
sub
and
mov
sub
mov
sub
inc
sub
mov
xor
add
push
lret
sbb
fsub
cli
fistl
jne
xchg
xlat
push
fldt
adc
and
and
inc
jae
ja
clc
mulps
add
stos
cmp
sub
dec
das
inc
fisubl
mov
push
ljmp
clc
lcall
dec
sbb
cmp
mov
fidivl
cs
pop
lds
sbb
aaa
cmp
xchg
cmp
cmp
jmp
rclb
imulb
pop
lahf
mov
pop
push
daa
jmp
rol
mov
divl
inc
mov
ja
sbb
pop
inc
repz
test
pop
mov
pop
xor
lret
mov
mov
aad
ret
jmp
push
insl
or
jp
dec
sbb
jmp
or
iret
mov
aaa
or
pop
jp
and
ret
inc
mov
jmp
add
shrb
sbb
lcall
mov
cmp
and
dec
push
aaa
add
fidivrs
dec
enter
add
push
rcll
inc
push
jo
in
ret
cli
out
mov
stos
add
or
sub
sbb
cmp
push
inc
xor
inc
out
push
jp
push
ss
js
cmp
cmp
mov
sti
mov
fcmovu
pop
xor
cmp
adc
das
pop
testb
fwait
sarb
pop
dec
jmp
sbb
lret
cmp
jmp
and
xor
pop
ret
jnp
adc
dec
mov
stos
mov
mov
ss
or
inc
ds
lcall
or
imulb
xchg
jnp
mov
cmp
cmpsl
pop
sub
flds
mov
push
dec
jg
or
mov
inc
inc
mov
outsl
push
lcall
stc
popa
mov
in
inc
mov
mov
jmp
cmp
jae
scas
add
or
lret
stos
xor
pop
adc
popa
stc
das
fadd
mov
ja
dec
stos
loope
iret
dec
lea
dec
imul
fwait
adc
movb
mov
out
lods
or
push
pop
push
stos
stos
test
jmp
mov
dec
ficoml
and
sub
or
in
and
pop
sub
scas
mov
fisttpll
mov
or
push
or
clc
nop
mov
stos
inc
daa
arpl
cltd
xchg
imul
fcomi
jp
mov
ret
out
xchg
push
pop
jbe
sub
daa
lret
pop
das
cmp
test
out
shrb
dec
ljmp
add
dec
mov
mov
imul
sub
cmp
sbb
das
mov
shr
cmc
sbb
das
ljmp
pop
leave
jns
gs
out
lret
lret
pop
lret
loop
push
testb
pop
notl
cs
stos
jns
fcoms
xor
icebp
out
aaa
xor
arpl
lds
lahf
adc
xlat
out
dec
fisttpl
adc
scas
inc
sti
push
cld
lret
jb
aaa
fdivrp
sti
jmp
fcmovu
std
xor
loop
cmpsl
stc
mov
mov
loop
sub
or
fwait
jns
aas
imulb
sbb
xor
mov
lods
inc
jecxz
or
shrl
test
mov
jmp
xlat
pop
cmpsb
pop
xor
inc
lret
rcll
inc
jnp
add
sub
xchg
cmp
aad
push
cltd
addr16
cmp
es
scas
or
push
xor
pop
decl
std
outsb
or
or
pop
sbb
cmp
or
dec
and
cmp
pop
mov
aam
jae
pop
jb
inc
arpl
mov
sbb
lcall
mov
inc
leave
ss
xor
leave
jmp
inc
jg
enter
mov
pop
mov
push
daa
pop
mov
sbb
mov
push
pop
jmp
sbb
add
push
fwait
mov
movzwl
jne
sbb
imul
pop
jnp
xchg
adc
ret
enter
and
mov
cli
inc
pop
sbb
data16
lcall
std
sbb
pop
add
ss
shlb
scas
mov
leave
adc
and
pop
movsl
and
mov
inc
add
lahf
cwtl
mov
cmp
and
sub
lds
hlt
sarl
jnp
mov
cmp
sar
inc
mov
stos
push
jae
mov
fsts
iret
out
mov
sbb
adc
mov
mov
dec
jnp
xlat
cmpsb
push
into
scas
mov
sub
and
negl
loope
mov
stos
std
push
xchg
jns
sbb
add
inc
cmpsl
and
scas
adc
lret
adc
cmp
sahf
push
mov
push
sarl
ja
sbb
add
mov
jnp
stc
and
lret
jnp
imul
jmp
pop
xlat
push
cmp
cmp
mov
stos
enter
iret
jecxz
dec
push
xchg
inc
psraw
dec
jge
inc
flds
jo
cmpl
fistl
stos
inc
sti
dec
and
dec
push
xchg
repnz
sbb
mov
leave
aad
mov
dec
lret
dec
sbb
ss
push
dec
xchg
pop
push
je
cmp
hlt
scas
sub
aam
mov
dec
cmp
dec
cmp
and
mov
lret
push
xor
mov
push
out
lahf
call
mov
dec
ljmp
jo
xchg
das
mov
sbb
jo
stos
xchg
stc
add
jmp
orb
mov
nop
out
adc
mov
fisubs
adc
mov
dec
aaa
cwtl
dec
and
cltd
and
mov
mov
ljmp
jb
or
mov
jmp
xor
mov
push
push
mov
dec
inc
lret
jae
adc
fcmovne
push
mov
mov
fadd
cmp
xchg
stc
push
cltd
mov
or
rol
pop
sub
add
sbb
push
pop
std
fisubs
fwait
adc
push
testl
push
pushf
jl
add
mov
push
bound
lahf
push
into
push
push
and
jnp
addl
jmp
dec
sbb
jp
mov
sti
jno
lea
in
sti
fnstenv
or
les
xor
or
cmp
aad
push
fstpt
xor
push
jmp
mov
inc
sbb
and
bound
mov
rep
jnp
fistps
mov
scas
xor
or
mov
mov
and
lahf
or
lret
lret
imul
cmp
dec
xchg
push
mov
adc
push
mov
fidivl
cmp
fs
jns
nop
lret
lret
sbb
pop
jbe
stc
sbb
lods
jae
pop
lret
loop
and
sub
pusha
cmpsb
cmp
cmp
cmp
aas
sbb
push
mov
xor
out
mov
mov
ret
fidivl
sub
cli
add
mov
mov
mov
stos
sub
push
stc
jle
rcrb
push
rcll
sub
xor
repz
sbb
adc
loopne
repz
pop
mov
call
mov
ljmp
or
pop
test
pop
shrl
jne
push
ljmp
imul
shll
lret
mov
push
pop
mov
sbb
sub
fcmovne
scas
inc
cli
push
mov
or
xchg
cmp
push
or
je
sub
out
mov
sub
mulb
fcmovbe
pop
imul
cmp
adc
sbb
mov
lea
push
cmp
into
rclb
cmc
fistpll
shlb
inc
push
sbb
push
loop
sti
loope
cmp
stos
loop
repz
push
stc
imul
or
jns
lret
sarb
sub
push
shl
bound
out
pushf
es
stos
rcrl
jmp
ret
flds
mov
adc
clc
clc
xchg
icebp
stc
popa
sarl
xor
out
repz
inc
or
loope
inc
dec
out
cmp
pop
add
xchg
jno
sbb
fwait
test
fadds
out
inc
mov
insb
stc
mov
sti
xchg
mov
pandn
mov
rolb
xchg
aam
pop
fucomip
mov
add
cmp
push
dec
inc
mov
sbb
adc
jmp
inc
adc
xchg
leave
flds
inc
cmp
ret
arpl
push
fmuls
sbb
sbb
sub
rcl
adc
pop
adc
jecxz
or
adc
xchg
xchg
xor
or
add
arpl
rolb
ret
dec
mov
xor
inc
stc
and
fwait
mov
adc
scas
or
mov
sti
cmp
add
jns
js
sti
aaa
mov
inc
add
cli
jp
sti
add
mov
rcr
in
lcall
dec
mov
pop
jno
pop
or
aaa
ret
sbb
enter
sbb
xor
mov
dec
xor
push
out
adc
jmp
fsubr
sbb
sbb
push
stos
jp
xor
add
sti
pop
cltd
xor
sbb
or
xchg
pop
lods
and
push
cs
inc
and
jecxz
and
cmc
dec
ret
arpl
xchg
mov
es
xor
jb
lock
inc
xchg
clc
xor
fcmovb
xchg
push
push
or
stos
mov
mov
lahf
adc
add
insb
cs
cmp
mov
push
loop
xor
xor
or
mov
mov
xorb
fwait
xlat
mov
roll
stos
pop
sub
pop
and
cmpsb
mov
xor
aad
inc
sub
adc
mov
cltd
cmp
aaa
and
cli
int3
daa
xor
sbb
pop
xor
push
lret
lds
mov
sub
sahf
sub
sbb
fidivs
adc
jne
jmp
cwtl
sbb
xor
ljmp
aad
es
cwtl
popf
inc
xlat
pop
popa
hlt
jp
xor
scas
in
imul
mov
mov
dec
add
lds
rep
jg
push
mov
iret
adc
mov
fwait
mov
xchg
pop
ja,pn
adc
imulb
dec
sti
push
ljmp
add
dec
outsl
arpl
inc
jb
gs
inc
lcall
mov
cmpsl
dec
adc
aaa
xchg
mov
out
sarb
adc
pop
jecxz
scas
xchg
xchg
ds
cmp
in
xchg
sbb
or
ret
and
jle
mov
mov
into
pushf
xor
xchg
test
inc
jl
movsb
sub
and
popa
jge
rorb
xor
dec
in
pop
dec
mov
push
inc
xchg
mov
imul
test
sub
sub
dec
pop
xchg
push
pop
int
mov
fs
or
jl
idiv
sub
push
call
mov
pop
in
dec
jo
mov
negl
les
dec
fsts
add
sbb
or
dec
xor
xchg
out
nop
add
mov
sub
cmp
aam
sbb
stos
fdivs
cmpb
in
mov
movsb
cwtl
aas
cmp
mov
movups
mov
lea
inc
into
cmp
push
into
shrl
fisubl
aaa
arpl
movsb
adc
dec
movsb
leave
sub
subl
push
and
cmp
mov
sbb
cmp
lcall
xchg
mov
fwait
imul
mov
ficomps
icebp
ja
cwtl
push
sahf
push
xor
out
dec
xchg
repz
addr16
test
jp
out
jns
xor
in
push
pusha
test
and
lods
add
dec
push
mov
inc
adc
push
inc
iret
js
sahf
mov
xchg
push
push
imul
mov
jecxz
shl
fs
and
xorb
jae
xor
movsb
pop
out
pop
mov
lods
fwait
sbb
movsl
ret
or
pop
xchg
push
push
sub
insb
adc
cmp
sub
mov
scas
mov
or
movsl
mov
fucom
cmpsl
loopne
inc
sub
stos
mov
leave
add
pop
adc
pop
add
mov
in
sbb
jl
inc
jmp
lods
les
scas
dec
jp
fistps
add
inc
imul
and
sub
mov
xchg
jae
and
fsubs
sbb
fiadds
ds
icebp
std
mov
in
ret
jns
in
xchg
jnp
mov
xor
jmp
shll
rclb
xchg
ret
and
and
addr16
movsb
call
jne
cmpsb
mov
enter
jae
outsl
int
pop
mov
cli
cmc
out
sarl
sub
cmc
pusha
inc
cmp
out
mov
xchg
push
jecxz
and
and
mov
iret
nop
call
mov
jbe
in
fcoms
push
loopne
sub
mov
dec
and
mulb
xor
push
hlt
xchg
shl
lret
sahf
dec
icebp
xor
pop
mov
mov
xor
push
popf
or
lret
daa
mov
enter
stos
subb
lock
jmp
push
nop
outsb
cmp
add
adc
dec
sbb
push
pop
cmpl
xchg
mov
es
and
add
aam
loop
rorl
aam
cmp
les
int3
cmp
jmp
sbb
test
push
mov
cmpsb
fdivs
and
mov
cmp
cmpl
jns
push
jbe
movb
das
xchg
jl
fdivr
into
test
sbb
fsubp
push
xor
int
jge
sub
add
push
inc
sbb
push
subb
repz
or
pop
lret
dec
adc
pop
repnz
sarl
out
lds
mov
mov
mov
mov
cltd
and
movsb
add
imul
loopne
xchg
inc
inc
test
int
jl
inc
xor
adc
sub
sti
add
dec
mov
sbb
pop
dec
inc
outsl
xor
gs
add
or
inc
xor
imull
outsl
mov
out
add
fs
push
push
push
mov
dec
or
adc
mov
sbb
inc
dec
add
sub
push
insb
stos
jns
lcall
inc
sub
sbb
call
nop
scas
mov
in
das
mov
shlb
cmp
pushf
push
lea
jmp
into
sub
in
pop
es
fsub
pop
jecxz
mov
cld
cltd
inc
iret
cmp
xchg
fwait
dec
lahf
scas
push
ss
sbb
adc
xor
lahf
pusha
sbb
mov
outsb
or
push
fs
jl
jb
push
xchg
leave
xor
out
aaa
je
das
mov
fcomps
in
push
jmp
lods
lock
sbb
mov
inc
inc
cmp
negl
popf
insb
push
and
cs
loop
xor
loopne
loop
aas
mov
pop
mov
lods
mov
test
add
add
jb
jnp
fdivrs
adc
xchg
or
cmp
mov
rorl
xchg
add
pop
jmp
and
jnp
out
and
sar
fwait
mov
xchg
out
jg
jge
call
arpl
test
xor
and
pop
loop
mov
pop
stos
dec
cmp
insl
pushf
hlt
jae
mov
add
dec
pop
ret
loopne
mov
out
notl
repz
fsubs
nop
shrl
movsl
sbb
adc
inc
lock
mov
sbb
imul
or
inc
in
inc
dec
out
sbb
push
loopne
in
scas
adc
jle
dec
xor
ficoml
push
sub
xchg
mov
mov
lds
mov
add
mov
push
out
pop
push
sub
mov
jmp
or
outsl
pop
lds
jmp
xor
jno
repz
push
sub
test
imul
push
or
pusha
jmp
icebp
stc
and
add
xor
xchg
pop
in
sbb
sti
mov
jo
sti
iret
xlat
jno
sbbl
xor
gs
jb
fstpt
mov
fisubl
inc
cmp
pop
lods
mov
xchg
movsb
out
ret
fnstenv
cmp
cmp
mov
mov
aas
xor
in
jge
lods
out
and
dec
jl
enter
jb
dec
mulb
adc
or
popa
mov
or
mov
bound
outsl
push
js
scas
dec
ljmp
adc
xlat
mov
testb
push
xchg
test
imul
rolb
add
leave
inc
hlt
xchg
sahf
mov
add
sub
sbb
cmp
adc
mov
pop
inc
rorl
jno
mull
rclb
pop
cmp
data16
pusha
lcall
imul
scas
std
push
pusha
push
xchg
loopne
mov
mov
cmp
jmp
mov
jmp
and
mov
cmp
sarb
lcall
jne
and
pop
jne
cmpsb
lds
xchg
jge
arpl
pusha
sub
sbb
pop
sub
dec
or
pop
mov
jecxz
cmp
jns
xchg
mov
in
mov
inc
shll
pop
push
out
test
mov
adc
mov
rorl
adc
imul
and
mov
or
inc
and
adc
pop
add
and
xlat
rclb
adc
mov
imul
loope
and
pop
xor
adc
sbb
cwtl
pusha
xchg
fidivs
lret
in
out
orb
pop
push
cmpsb
mov
inc
insl
inc
dec
into
in
ss
stos
sbb
jge
das
mov
xchg
sbb
jg
add
pushf
lea
ja
not
inc
inc
inc
dec
cmc
sar
xchg
movsbw
aad
mov
neg
call
inc
pop
lcall
jp
ds
xchg
jmp
repnz
push
cmpsb
lahf
imul
pop
das
jns
shl
shll
xchg
push
bound
test
push
stos
mov
cmc
das
aaa
insl
mov
dec
sub
mov
xchg
addl
lds
or
push
sbb
push
sbb
xchg
cmp
mov
aas
fldenv
iret
sub
out
leave
imul
insl
cmp
push
ss
mov
xor
mov
or
jecxz
dec
ret
ret
pusha
lahf
loop
inc
lea
daa
sub
dec
adc
cmc
stc
sti
ret
popl
and
pushf
cli
xor
jbe
daa
outsl
stos
andb
leave
dec
nop
push
dec
mov
cli
or
lock
ret
nop
push
and
mov
xchg
adc
jle
daa
push
lock
das
mov
sbb
pop
xor
cmp
push
jle
cmp
movsl
pop
dec
addb
push
shrb
mov
or
push
out
and
pop
push
push
push
loop
lock
popa
jns
pop
loop
mov
jp
or
add
add
add
enter
jo
test
dec
mov
xchg
pop
inc
bound
dec
aad
jecxz
movsl
dec
call
repz
das
sahf
sbb
in
sti
in
jb
cmp
imul
rcr
mov
shl
push
btc
shl
and
push
cmp
shl
sub
push
or
pusha
rcl
mov
sar
rcl
mov
xadd
jmp
cld
cmp
hlt
pushf
cwtl
inc
repz
and
and
mov
jns
mov
shlb
cwtl
pop
mov
sarl
adcl
in
fsub
lcall
cmp
adc
aam
sti
cli
xchg
call
inc
jp
xchg
clc
and
hlt
xor
cld
push
dec
mov
cmp
iret
adc
cmp
negl
pop
jns
xor
sub
nop
das
push
xchg
lcall
scas
mov
mov
xchg
mov
call
pop
imul
call
shrb
into
xchg
fnstsw
lret
cltd
jecxz
lahf
in
in
push
dec
jno
mov
xchg
fimuls
scas
adc
xor
jnp
std
add
sbb
pop
cmpsl
sub
mov
xchg
ret
sbb
das
mov
jne
cld
xchg
adc
adc
pop
sarl
add
fdivr
inc
adc
jo
push
sbb
inc
and
xor
push
dec
push
mov
jno
cltd
rorl
das
jp
imul
addr16
cmp
or
pushf
add
lcall
cmp
dec
in
dec
test
into
loope
push
dec
xchg
xchg
xchg
hlt
addr16
scas
xchg
mov
sub
sbbl
clc
std
push
cmp
sub
add
add
loope
lds
ss
dec
imul
push
and
je
jmp
cmp
notl
not
test
aad
in
mov
pop
dec
sub
cmp
in
hlt
ja
inc
xchg
insb
dec
dec
xchg
in
or
push
dec
xchg
push
adc
xchg
testb
add
xchg
jo
push
fistpl
mov
aaa
jae
aaa
fimull
adc
and
arpl
cmp
outsw
xorb
jno
clc
xchg
outsl
sub
push
cwtl
insl
or
cltd
into
scas
mov
imul
testl
call
pushf
sti
test
jl
mov
adc
pop
jecxz
xchg
ljmp
lahf
out
and
sub
shrl
or
adc
cltd
mov
addr16
fstl
fisubl
mov
push
bound
rcrb
pop
roll
xor
dec
aam
or
cmp
jo
push
jae
push
xchg
xchg
lods
or
and
loope
das
xchg
push
jp
imul
iret
ljmp
inc
dec
sub
push
cmp
jae
sub
leave
dec
icebp
sti
pusha
cltd
aas
lods
and
nop
mov
sub
or
pushf
icebp
into
or
dec
or
mov
pop
jge
test
inc
fmull
adc
xchg
lea
sub
pop
adc
cltd
sbb
scas
or
cmc
fs
push
outsl
lcall
ret
push
jle
das
xchg
or
or
sbbl
or
call
add
shl
stos
sbb
push
mov
dec
rcr
ret
cmp
mov
pusha
cmp
jmp
icebp
push
xor
das
es
loopne
pop
mov
mov
fistpl
loope
dec
inc
jno
in
mov
icebp
mov
push
outsl
sub
push
fbstp
xor
mov
mov
add
fidivs
aam
test
xor
loope
mov
loope
mov
inc
sub
ss
push
loope
stos
rolb
fdivs
testl
cs
cli
in
in
push
xchg
insl
and
push
shlb
pop
imul
hlt
sti
fdivrs
subb
or
add
and
addr16
mov
dec
inc
ds
loope
sbb
loop
loop
add
mov
cmp
and
jmp
ret
pushf
sbb
rorb
jl
mov
sbb
mov
stos
inc
in
dec
fwait
sub
scas
and
notl
subl
push
add
cmpsb
in
aaa
mov
icebp
nop/reserved
idiv
adc
adc
das
xchg
outsl
stc
dec
pushf
lea
call
pushf
call
and
pop
mov
aas
jp
orl
out
lods
ret
lea
dec
jmp
inc
out
push
nop
jmp
dec
sbb
pop
mov
rol
xor
shll
mov
inc
cwtl
cli
popa
and
cmp
ret
cwtl
xchg
mov
hlt
dec
fs
mov
push
xchg
inc
cwtl
pop
push
and
jg
ljmp
pop
mov
loop
lahf
ss
xor
pop
xor
mov
mov
pop
sub
ja
movsb
test
gs
xor
imul
xchg
outsl
movsl
ret
fwait
xchg
pushf
fwait
mov
mov
shrl
in
or
mov
pop
push
std
or
jmp
jmp
sti
clc
lret
mov
jns
lods
jne
div
xchg
fldenv
pop
push
sti
loop
out
dec
les
dec
xlat
mov
out
loop
ss
cmp
lret
scas
insb
cmpsb
cli
lock
lods
outsb
push
out
dec
cmpsb
test
inc
adc
in
cmp
hlt
and
sbb
sbb
insb
icebp
pop
add
xchg
jno
xchg
je
sbb
push
stc
ret
cmp
adc
rorl
inc
lock
push
arpl
mov
mov
xchg
leave
test
sub
arpl
fdiv
push
jg
pop
inc
movsb
ljmp
shrl
fisttps
cmp
xlat
adc
mov
push
or
pop
or
mov
lret
clc
add
dec
in
xchg
psubsb
xchg
aad
arpl
dec
jg
fs
imul
jnp
rol
insb
mov
pop
mov
add
mov
mov
stc
test
push
ss
in
push
xor
cmp
mov
push
xchg
jae
sbb
push
dec
div
mov
mov
stos
jnp
sub
inc
testb
mov
mov
jl
test
dec
mov
sub
dec
jecxz
mov
cltd
push
es
pop
stos
ds
inc
jne
mov
das
xchg
xchg
push
jns
xor
popf
repz
rcll
push
push
enter
jb
in
bound
cmp
xchg
les
cltd
mov
sub
iret
sbb
hlt
or
bound
push
inc
out
loopne
je
xor
mov
or
pop
inc
mov
jne
mov
roll
or
jmp
daa
xchg
in
adc
push
out
lcall
jecxz
repnz
decl
lahf
fcoms
jmp
cmpsl
imul
orb
sub
subl
adc
xor
mov
xor
add
shrb
mov
sub
popl
xchg
mov
lock
add
lret
fs
mov
les
popf
arpl
inc
outsb
fldt
or
ret
sub
lds
jo
adc
lds
test
ss
and
out
xchg
sarb
xlat
xchg
push
mov
ja
pop
jno
cmp
cmp
fwait
imul
jg
adc
cli
push
sub
push
dec
mov
and
push
pop
enter
scas
loopne
fistpl
clc
cmp
movsb
or
ss
iret
push
sub
hlt
cld
cmp
sbb
lahf
jle
xor
push
adc
push
scas
push
adc
pop
lds
dec
or
jle
mov
pop
movsb
sub
inc
add
jnp
sbb
arpl
data16
adc
jp
arpl
imul
icebp
clc
test
sets
cmp
negl
push
jno
inc
add
and
mov
aad
nop
adc
sub
jb
xchg
hlt
xchg
fidivrl
mov
add
dec
orl
cmpsl
jge
dec
inc
mov
into
mov
inc
xor
add
push
aam
test
pop
xchg
pop
out
negl
lods
jb
cltd
shlb
jl
mov
xchg
sbb
and
ret
dec
je
push
leave
cltd
xchg
sub
and
xchg
stos
stos
push
pop
pop
outsb
je
lret
ljmp
repz
jle
es
xchg
and
imulb
push
shll
arpl
cli
xor
repnz
pop
mov
pop
aaa
sbb
add
mov
rorb
push
push
inc
mov
cltd
mov
dec
sbb
dec
pop
lods
call
dec
push
sub
mov
repnz
or
and
imul
push
rorl
mov
dec
push
rorb
rorb
add
adc
or
ret
sahf
inc
mov
pusha
sbb
hlt
sahf
lret
in
jo
pop
adc
jbe
push
or
or
sbb
fadds
jle
arpl
call
insl
call
mov
cs
adc
dec
mov
addr16
dec
sbb
pushf
clc
xchg
pop
or
fwait
pop
sbb
das
cwtl
je
ja
lahf
adc
push
add
arpl
into
xlat
stos
add
mov
xor
push
mov
sub
test
sub
push
jg
cwtl
inc
test
bound
push
imul
push
hlt
imul
cmp
aam
bound
xchg
cs
mov
hlt
mov
pop
test
in
xchg
pop
test
addl
aaa
dec
rcrl
xchg
jecxz
xchg
jae
dec
fistps
mov
sub
leave
xchg
out
mov
push
mov
fldcw
adc
pushf
sbb
icebp
ja
fstpt
ret
insb
push
pop
int3
cmpsl
enter
sbb
sub
xor
push
add
imul
js
mov
cmp
sub
add
pop
pop
lds
push
cld
arpl
outsb
ss
sbb
or
mov
adc
stos
ja
add
xor
sub
inc
testl
cs
pop
inc
mov
data16
bound
ret
in
lods
and
push
push
pop
imul
shr
clc
mov
movsb
outsl
arpl
shrl
lcall
rclb
add
and
mov
adc
shlb
adc
cmpsb
push
les
xor
and
and
sahf
arpl
notl
adc
idivb
loopne
repz
dec
out
sti
loopne
addr16
push
sbb
fdiv
hlt
js
jb
mov
aas
and
test
clc
cli
jns
sub
adcb
dec
notb
jns
adc
popf
sbbl
jmp
mov
mov
add
fnsave
dec
mov
out
fcmovne
stos
mov
jns
xor
repnz
inc
add
and
mov
sub
sbb
stos
adc
bound
cli
push
xchg
cld
and
and
aam
cwtl
jnp
or
jp
mov
aad
outsb
test
xor
fdivrp
lahf
add
roll
jae
cmp
ja
pop
sub
mov
lcall
lret
pop
jnp
push
lret
mov
mov
xchg
rolb
mov
pop
sti
adc
pop
dec
mov
out
aad
pop
xor
adc
jo
fnstcw
sbb
sub
mov
jne
jl
fs
jne
clc
mov
sar
not
sub
bswap
call
mov
and
in
fcoml
push
xchg
inc
out
insb
sbbl
push
popf
out
mov
out
xor
out
ret
mov
loopne
and
pop
xor
cmc
movsb
xor
scas
or
pushf
pop
jp
imul
jnp
test
xchg
call
or
xchg
xchg
inc
shlb
fcmovnb
std
in
std
inc
mov
mov
xlat
mov
xor
arpl
addb
push
stc
jg
lods
insl
data16
mov
ds
add
testb
in
adc
mov
jg
shrb
xor
sti
pop
inc
sub
sarb
jle
cmpsb
loopne
in
mov
shlb
mov
cmovo
jge
ffree
mov
in
shrl
lret
jno
dec
int3
lret
inc
mov
jp
xchg
popa
adcl
push
pop
fcmovne
xor
or
cli
cmp
mov
test
mov
push
popf
sbb
sti
fisubrs
jmp
dec
add
add
mov
in
fnstcw
jmp
cwtl
ret
lods
sti
ret
lods
test
dec
popa
rcll
add
push
ffreep
push
xchg
xor
test
lods
lea
mov
mulb
jmp
sbb
mov
sti
pop
scas
shlb
push
test
test
push
mov
adc
int3
loop
insb
popa
xorl
cmpsb
sub
xchg
add
and
pop
outsl
out
ficompl
push
arpl
sar
test
outsb
or
cmpsl
cmpsl
or
movsl
imul
repnz
aaa
addr16
cmp
cmp
ficoms
pop
mov
push
hlt
ret
dec
outsb
jmp
popf
cmp
mov
test
js
push
loope
lds
outsb
repz
xchg
xchg
shll
adc
sahf
repnz
out
adc
sub
mov
inc
xchg
mov
scas
and
repz
rorb
pusha
imul
mov
pop
cmp
pop
and
add
push
dec
imul
js
orl
aam
cmpsl
jecxz
lret
out
in
mov
inc
lds
fisubl
xchg
add
cld
mov
mov
or
out
test
addl
dec
or
and
mov
and
repz
rcr
movsb
jg
sub
dec
fdivrl
adcl
hlt
mov
dec
xor
pusha
or
mov
mov
inc
int
pop
push
repz
inc
jnp
mov
mov
xlat
cld
inc
jecxz
movsw
daa
push
mov
imul
mov
pushf
pushf
pushl
ret
sub
insl
mov
repz
test
lea
in
xchg
das
insl
int
jae
lcall
repz
push
jl
movsl
sahf
and
imul
adc
adc
and
mov
dec
loop
pop
pop
hlt
jb
pmuludq
sub
inc
shlb
jl
xchg
mov
movsl
sub
xchg
mov
ja
in
xor
imul
jmp
inc
stc
rol
clc
test
bt
call
movzwl
lea
mov
call
dec
adc
cs
fsub
sbb
xor
shl
inc
js
pop
arpl
cmp
push
out
push
adc
movsb
mov
dec
mov
pop
cmp
mov
ds
js
adc
in
sbb
les
adc
cmp
lret
lds
stos
jg
je
aad
test
mov
aaa
mov
and
cltd
in
pop
cmp
fwait
sub
add
ret
fs
mov
cmp
push
adc
adc
and
add
das
lahf
mov
adcl
sub
lods
pop
lea
les
lea
test
pop
jge
mov
push
adc
loope
adcb
pavgw
pop
in
mov
fisttpll
fcompl
sbbb
cmp
cs
cmp
xchg
call
sahf
fcmovnbe
arpl
fs
ret
sub
out
push
outsb
incb
dec
lods
test
push
and
sub
mov
mov
call
or
cmc
xor
mov
bound
das
or
cmp
sub
repnz
add
dec
fildll
movsl
mov
test
shrl
sub
orl
scas
xchg
pop
inc
popa
out
mov
es
rcl
push
inc
rol
in
jno
pop
aad
arpl
or
cmp
hlt
outsl
jno
cli
fsubs
sub
or
and
gs
cmpsl
insl
imul
xor
mov
xlat
imul
loope
int3
push
or
outsl
jb
push
push
je
dec
repz
call
clc
mov
pop
sub
inc
cli
mov
stc
sbb
cmp
push
mov
cli
adc
and
pop
imul
or
lret
pop
or
bound
xchg
sbb
dec
xchg
hlt
bound
mov
scas
adc
pop
lock
xchg
add
popa
inc
mov
test
mov
jns
dec
inc
jo
repz
ljmp
imul
jecxz
cwtl
int3
push
inc
pushf
fistpll
inc
jae
nop
dec
call
xor
sarl
in
or
and
mov
cmp
fcoml
and
mul
arpl
testl
add
dec
fucomp
xor
enter
xchg
roll
sub
mov
fcompp
jmp
mov
stc
imul
bound
adc
pop
jno
push
push
dec
loopne
test
mov
mov
push
daa
into
jle
cmpb
mov
loope
test
mov
adc
aaa
xor
sub
mov
movsl
dec
insb
cli
insb
xor
add
in
out
ficomps
mov
test
add
aas
jg
or
sbb
fcompl
cmp
in
popf
fwait
add
dec
or
lahf
adc
rol
test
imul
jb
shlb
sahf
repz
imul
sbb
jg
push
mov
jbe
pop
addb
outsb
leave
popa
lahf
push
jmp
pop
cld
mov
xor
lahf
lcall
cmpsl
out
add
faddl
addr16
xchg
add
cmp
in
daa
cltd
jne
pop
xor
cmc
mov
pop
sti
and
lods
pop
xor
adc
push
add
pop
popf
xor
jnp
aaa
inc
and
stc
paddd
dec
test
insl
das
out
sbb
mov
cmp
xchg
negl
lock
jg
adc
lahf
mov
pop
inc
push
add
add
cmpb
cmp
rol
xchg
mov
inc
ret
sub
movsl
iret
push
dec
and
subl
mov
imul
and
shlb
add
lds
sub
mov
push
mov
mov
mov
jo
sub
sub
hlt
syscall
inc
loopne
clc
jnp
popf
arpl
mov
xor
inc
sub
aas
jecxz
js
pop
fwait
pop
cli
push
jae
add
mov
push
and
add
add
lods
add
jp
dec
sub
push
les
mov
sub
mov
mov
adc
sbb
orw
dec
fistl
cmp
cmp
dec
jge
je
cmp
clc
out
pop
repz
cld
sarb
inc
dec
xorb
mov
xor
aas
imul
add
inc
outsl
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
movb
lea
jae
pusha
lea
jmp
dec
push
fs
sub
arpl
cmp
mov
jecxz
repz
push
mov
insb
or
and
and
rcr
push
scas
in
into
in
add
movsl
es
cmp
insl
sub
sub
rcll
jb
add
add
mov
dec
xlat
sbb
and
mov
add
in
xchg
pop
outsb
push
mov
xchg
daa
roll
movsl
test
sbb
xchg
iret
iret
xchg
pop
int3
loopne
test
mov
xor
mov
mov
jmp
imul
jmp
pushf
push
call
jmp
call
fidivrs
mov
mov
stc
sbb
cmp
pushf
or
insl
flds
out
dec
movsl
shl
andl
mov
mov
mov
into
test
arpl
mov
or
andb
push
mov
fcompl
int3
loop
sub
mov
push
mov
clc
shrb
push
mov
xor
lods
xor
mov
jbe
sbb
lret
xchg
dec
xor
sbb
into
pop
push
imul
jp
int
inc
pop
mov
inc
dec
xor
in
fisubs
adc
push
xor
fildll
ror
lea
xor
loopne
jnp
outsl
push
mov
shl
loop
pop
jle
push
rorl
jmp
jb
sbb
jnp
data16
xor
test
xor
xchg
cld
in
jae
sub
xor
push
sub
or
call
test
cmp
icebp
fbld
hlt
adc
lcall
out
in
sub
out
jne
stc
test
mov
movsl
fcmovne
out
xor
aas
ds
mov
jns
cmp
add
nop
mov
jne
sub
into
cmp
sub
jns
pop
nop
outsl
gs
cmp
aad
inc
loope
popa
inc
cwtl
xchg
xchg
inc
pop
popf
adc
fs
and
cmp
jns
push
jmp
lods
push
lret
xchg
out
imul
xchg
cmp
gs
sbbl
test
xchg
in
xchg
mov
xchg
or
sub
jne
hlt
cmpsl
cs
rcr
xchg
stos
jecxz
jl
inc
iret
fwait
sti
or
lea
jl
and
ds
sub
shrb
push
jne
out
cmp
xor
js
dec
scas
test
add
int3
hlt
sahf
mov
clc
and
xor
dec
fwait
dec
push
das
cmpsb
sub
jmp
lea
ja
pusha
imul
cmc
cmp
add
mov
lea
jmp
movl
lea
jne
shl
shl
mov
rcr
pusha
sub
and
adc
bts
pusha
lea
cmc
stc
stc
sub
jmp
lea
call
jmp
xor
out
flds
lock
into
cmp
mov
push
movsb
adc
jne
dec
push
loopne
mov
dec
repnz
out
outsl
loope
in
xchg
mov
sub
dec
out
outsl
in
jl
leave
adc
dec
push
ret
in
or
adc
imul
or
aas
ss
add
punpckldq
lea
push
dec
int3
mov
jge
cmp
into
dec
push
fiadds
fnstenv
or
negb
pusha
inc
sbb
pushf
ljmp
jne
add
adc
xor
out
mov
sbb
and
aad
mov
cwtl
push
in
xor
mov
shlb
mov
imul
inc
leave
jecxz
mov
lcall
cmp
jb
xchg
add
mov
push
punpcklbw
fmuls
fdivr
inc
xor
pop
jo
jmp
arpl
data16
ret
shll
inc
shlb
imul
adc
into
sub
imul
call
lret
or
fdivs
or
cltd
dec
or
sbbb
shll
adc
sub
lea
fwait
mov
icebp
and
mov
icebp
in
or
xchg
rcll
cs
ja
dec
mov
jge
test
sub
cmp
popa
add
pop
push
popf
ret
push
inc
push
fistl
add
movsl
or
fdiv
pusha
add
mov
and
inc
inc
addb
das
test
push
cmp
mov
lds
xchg
movsb
mov
outsb
cltd
and
jo
pop
inc
push
es
repnz
jnp
shlb
loopne
dec
mov
test
and
dec
testb
add
adc
lret
dec
sub
ljmp
les
outsl
imul
iret
pop
mov
fwait
es
sub
mov
outsb
mov
sahf
jge
add
sbb
xchg
jmp
xor
pop
outsb
xor
movsb
pop
in
sbb
fldt
jae
push
fwait
xchg
and
je
jo
int3
stos
jns
das
jo
inc
push
lea
testl
ds
fwait
ljmp
out
test
dec
rolb
cwtl
mov
and
push
add
imul
subb
or
mov
pop
jb
xchg
jne
gs
jne
and
inc
imull
mov
dec
inc
outsb
icebp
nop
pop
fdivs
xchg
cmp
lahf
or
sub
jno
rcrl
add
push
pop
out
movsb
ficoms
loopne
mov
stos
int3
cld
aad
sub
sbb
mov
mov
mov
movsl
mov
sti
pop
mov
xor
loope
or
bound
scas
into
outsl
imul
sbb
cmc
mov
mov
stos
xor
leave
dec
fs
dec
and
adc
push
adc
outsl
orl
adc
mov
repz
rorl
xor
sbb
mov
loop
cmpsl
jb
ljmp
push
neg
dec
test
adc
pusha
sub
imul
loope
popf
mov
inc
jmp
fidivl
sbb
shll
pop
sahf
jnp
test
ja
or
mov
stos
mov
loop
add
outsb
lods
sub
daa
ljmp
mov
jne
sub
ja
cmc
push
cmp
gs
and
cmp
pop
ret
xchg
ret
shlb
mov
or
pop
mov
dec
data16
push
add
cwtl
add
out
push
pop
cmp
das
cs
jl
and
add
dec
loop
loope
fmulp
out
adc
sahf
sbbb
mov
movsl
aaa
dec
mov
fstl
and
mov
cli
xor
pop
xor
cltd
fwait
call
sahf
ret
cli
sbbl
or
xchg
and
mov
sub
lock
repz
fistl
mov
mov
push
mov
imul
fmuls
repz
push
movsl
cli
out
mov
or
loopne
test
mov
jae
mov
inc
aad
lods
dec
das
movl
fwait
aam
sub
cld
xor
push
dec
in
cmc
movsl
into
jbe
imul
pushf
mov
push
call
int
sti
xor
dec
cli
sbb
int3
scas
push
pop
inc
hlt
popf
xchg
mov
negl
insl
jb
dec
ja
add
or
js
rolb
int
pusha
fwait
mov
jecxz
ret
std
add
out
lahf
arpl
pop
out
xor
jl
jle
adc
inc
jae
cmp
aaa
aad
loop
fimuls
imul
jge
sub
test
lock
into
ret
lods
or
scas
push
dec
adc
call
sub
mov
fldt
dec
imulb
popf
sbb
mov
fldt
or
pop
jle
and
lret
cmp
mov
das
sub
xchg
add
out
nop
lea
sbb
push
sbb
sahf
idivb
inc
outsb
ds
mov
pop
pusha
out
mov
mov
int
push
aaa
dec
sahf
jge
jo
fcompl
adcb
mov
ss
add
mov
lods
clc
orb
and
lea
je
stc
test
cmc
sub
pusha
jmp
setg
rol
inc
neg
sub
setbe
pushf
jmp
lea
jne
not
lea
movsbw
movb
jmp
inc
mov
sar
xor
xchg
pop
movsbw
movzbw
push
pushf
mov
lea
mov
jmp
pusha
int
inc
dec
insl
fidivrl
mov
fcomps
sub
xchg
xchg
adc
xor
pop
pop
pop
adc
lods
dec
imul
fidivrs
mov
add
xchg
cmp
neg
xor
xor
inc
ja
pop
and
push
sahf
jge
into
cmpsl
or
je
out
lds
call
sbb
xchg
add
outsl
test
xchg
cltd
mov
sub
ss
push
inc
jne
xchg
ljmp
xchg
pop
imul
pushf
pushl
popl
test
clc
cmp
cmp
mov
lea
ja
sbb
adc
sub
rcl
add
shl
mov
ror
mov
test
stc
test
cmc
repnz
push
mov
push
pushf
lea
jne
movzbl
movzbw
cwtl
not
movb
movzbl
call
stc
shl
mov
repnz
mov
sahf
fbld
jae
dec
xor
xor
push
shl
fs
loop
cs
pop
and
dec
stc
mov
pop
jmp
out
xorl
iret
xchg
nop
ss
ror
pop
popf
inc
dec
jecxz
cmc
jae
ds
leave
lcall
lahf
insl
lods
adc
stc
outsl
pop
inc
or
sub
popa
pop
sarl
xlat
cmp
xor
rorb
mov
imul
jns
es
xchg
shl
jbe
lods
imul
test
lret
pop
add
add
out
loop
lret
outsl
pop
scas
and
mov
inc
and
xchg
jo
jbe
xchg
mov
shll
fidivl
pushf
adc
sbb
rclb
addr16
ja
mov
mov
xor
dec
adc
inc
repnz
cltd
push
or
mov
stc
int3
jle
stos
data16
scas
int3
jo
popf
add
andl
fdivl
or
fisttpll
gs
psadbw
pop
lret
imul
push
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
cld
xchg
bound
jbe
in
xchg
in
xlat
stos
jnp
jb
push
lea
movsb
flds
xchg
xchg
test
stc
inc
aaa
push
lock
jnp
xchg
fsub
jo
pushf
lds
roll
push
loop
ds
pop
add
sbbl
xchg
into
lcall
popa
mov
cmp
test
popf
stc
sbb
mov
sbb
imul
push
sub
mov
loope
dec
enter
imul
insl
push
setbe
fisttpl
pop
fsubrs
jge
and
xchg
lods
xchg
xor
push
jle
or
pop
push
add
dec
stos
mulb
dec
adc
cmp
clc
and
inc
nop
xchg
xor
sbb
inc
xor
jecxz
inc
sbb
adc
dec
and
insb
inc
dec
sti
xchg
icebp
fnsave
jl
pop
daa
mov
xchg
inc
enter
das
mov
mov
js
je
jb
arpl
jae
les
adcl
mov
dec
pop
ja
ror
mov
sub
cmpsb
jg
cmpsb
jecxz
push
mov
sub
rcrb
mov
scas
insl
repnz
xor
push
addb
xor
fwait
arpl
aas
dec
jmp
cmp
mov
mov
or
push
cmpsl
mov
sub
sbb
adc
pop
dec
gs
jb
imul
lea
call
jmp
mov
stc
cmp
push
call
aam
movsb
mov
addr16
insb
jbe
sub
lea
lcall
xchg
ret
mov
dec
daa
mov
gs
add
cltd
ret
repnz
xchg
mov
pop
jle
cltd
mov
test
xchg
popl
inc
and
cli
rcll
mov
xchg
iret
out
and
cwtl
mov
sahf
sbb
icebp
push
je
shl
add
insl
cmc
mov
cld
jns
outsl
cmpb
mov
iret
popa
lea
fcoms
int3
and
jp
in
dec
lcall
cmp
jl
and
leave
bound
out
out
mov
stc
repnz
rcrb
mov
mov
insl
sbb
and
test
add
sbb
mov
cmpsl
ret
stc
dec
scas
sub
loop
push
outsl
ret
icebp
lcall
sti
add
sub
jb
xor
cmp
insl
ficompl
mov
sbb
dec
jecxz
pop
addb
xor
sti
xor
jae
mov
adc
push
outsl
pop
add
loop
pcmpeqw
ljmp
pushf
loopne
cmp
cwtl
iret
mov
cmp
aaa
xchg
adc
mul
mov
jmp
leave
outsb
imul
push
dec
dec
push
push
dec
dec
dec
cs
push
push
add
lock
dec
pushf
cmp
jle
rcrl
push
dec
xchg
mov
fimull
pop
cmpsb
or
xor
fldenv
dec
loop
pop
clc
push
jecxz
jae
mov
sub
out
test
scas
in
cmp
sub
dec
ds
jp
cmp
push
mov
lea
mov
lea
sub
in
adc
push
in
aad
cli
lret
in
xchg
cwtl
shlb
mov
inc
jmp
xchg
imul
mov
fmull
das
mov
pop
mov
mov
lock
ret
mov
pop
lahf
push
inc
in
pop
aaa
in
rcrl
and
sub
cmc
cmp
mov
push
dec
arpl
jl
xchg
data16
lahf
fsubrs
pop
adc
lret
mov
call
aas
jno
aaa
shll
arpl
pop
int
add
or
icebp
mov
cwtl
lds
push
int3
shlb
aam
mov
test
pop
nop
xchg
dec
ret
dec
or
add
sahf
mov
stos
mov
fldl
pop
xchg
mov
mov
mov
mov
iret
xor
xchg
ja
jmp
mov
push
subl
enter
outsl
test
push
scas
xor
std
aad
gs
arpl
xor
insl
test
mov
cwtl
pushw
push
rep
movsbw
lea
mov
mov
pushl
lea
jmp
pushf
pusha
lea
je
bt
or
jmp
bt
clc
cmp
cmc
sub
clc
cmp
jmp
jmp
nop
sub
mov
gs
push
lds
and
adc
stos
jae
call
add
dec
jmp
push
in
das
adc
xchg
lds
pushf
ret
xchg
add
mov
mov
xor
or
mov
icebp
adc
and
mov
gs
and
sbb
clc
cmpsl
and
rcrb
mov
push
outsb
stc
pop
jae
jge
ret
and
gs
fcmovb
rolb
dec
pop
movsb
cmp
mov
xor
cmc
std
notb
loope
stos
ret
push
dec
pop
dec
mov
fsubr
lret
adc
and
push
arpl
jbe
adc
push
add
insb
dec
imul
mov
inc
jns
or
jae
rcll
icebp
loope
push
std
out
inc
cmp
enter
test
leave
mov
sahf
mov
xchg
or
sti
xlat
cmpb
fmul
test
incb
sbb
mov
jl
cmpsb
pushf
xchg
push
mov
imul
cwtl
push
movsb
jl
mov
mov
in
mov
popl
cwtl
xor
xchg
push
lcall
cwtl
gs
loope
push
fisubrl
mov
push
js
arpl
inc
mov
sbb
xchg
pushf
jb
out
and
rcrb
scas
mov
dec
movsl
mov
pushf
negb
cmc
movsb
or
cmp
pop
arpl
ret
inc
pop
fsubrl
mov
xlat
sbb
les
pop
std
jns
mov
fadd
mov
push
add
mov
js
outsl
pop
xor
add
fiaddl
rcll
and
sbb
rcr
mov
xor
mov
out
out
push
rclb
inc
in
movl
adc
push
add
xor
scas
push
or
movsb
scas
mov
outsb
fwait
sbb
gs
mov
mov
xor
xor
xor
mov
jno
nopl
pop
cmpb
stos
icebp
ljmp
test
das
inc
dec
mov
mov
negb
cmpsb
xor
leave
add
pushf
cld
and
sbb
dec
arpl
loope
jne
push
xlat
xlat
mov
and
stc
cmp
mov
out
xor
dec
scas
sbbl
mov
ds
add
mov
jmp
cmc
shl
cld
pop
pop
xlat
or
xor
cmp
xchg
xchg
dec
sub
sar
add
popa
mov
pop
lcall
add
xor
in
or
and
push
pusha
mov
add
scas
xchg
int3
sub
jg
out
je
imul
call
mov
jne
movsbw
pop
pushf
pushf
pushl
ret
mov
call
mov
xor
orl
nop
mov
rol
jnp
lea
cmp
testb
jmp
lods
push
inc
xor
sub
xor
ds
or
sub
rorb
imul
xorl
jl
mov
pop
cmpsb
test
cmp
outsl
jp
fstl
sbbb
add
into
lods
div
cmp
fiaddl
inc
fbld
mov
fnsetpm(287
dec
fdivl
sbb
push
xor
mov
or
das
mov
js
jae
or
cmpsb
mov
outsb
xchg
stc
xor
cmc
mov
jl
add
pushf
lds
jmp
xchg
adc
int3
xchg
ja
xor
popf
add
push
push
sbb
cwtl
jg
xor
js
les
shll
fiadds
cmpsl
push
enter
adc
push
test
in
inc
js
push
out
dec
add
jl
pop
inc
shrb
pop
and
rorl
test
mov
mov
ss
and
shl
xchg
in
jne
dec
push
imul
mov
and
pop
inc
aaa
inc
lret
pop
sub
xor
and
sub
in
cmp
incl
dec
xchg
popf
push
inc
loopne
sbb
addr16
sbb
stc
pop
sub
nop
ss
and
push
cmp
iret
or
repz
jmp
pushl
mov
mov
jmp
adc
mov
aaa
xorl
enter
mov
daa
fstpt
pop
dec
push
mov
adc
lea
scas
arpl
lds
xor
jmp
or
sbb
and
arpl
inc
adc
leave
pop
adc
push
aam
pop
mov
test
fbstp
js
push
pushf
dec
loop
iret
lret
dec
xchg
movsl
out
sbb
in
sub
inc
js
jo
ds
imul
rol
jmp
and
dec
mov
push
lret
pop
mov
sbb
dec
push
adcb
leave
aad
sbb
mov
dec
sbb
mov
adc
shr
sbb
mov
mov
repnz
push
mov
shll
mov
enter
jmp
sbb
adc
aaa
sbb
ja
mov
sub
mov
cmpsb
lahf
or
imul
pushf
lea
jne
add
bsr
or
not
xor
neg
daa
mov
mov
push
add
clc
setg
or
cmp
mov
clc
test
test
pushf
movb
call
add
dec
outsl
popa
fs
imul
add
mov
outsl
fsubrl
out
push
icebp
pop
push
sbb
cmpl
idivl
fwait
or
test
mov
cmp
dec
jmp
enter
fildll
xchg
jns
cs
push
inc
test
xor
fmuls
and
mov
push
andl
sbbb
popf
mov
popa
test
xchg
jnp
ja
and
cmpsl
add
add
in
push
leave
mov
mov
popa
lea
cld
cmpsl
adc
in
xchg
arpl
mov
test
movsl
sbb
mov
sub
and
sub
mov
ljmp
enter
push
push
inc
mov
mov
imul
sbb
stos
mov
scas
les
xchg
imul
push
dec
imul
jl
inc
and
xchg
mov
js
lea
mov
cwtl
ret
stos
punpckhdq
pop
leave
hlt
lret
ja
dec
pop
int3
in
imul
mov
sub
sub
mov
cmp
add
test
add
cmp
imul
inc
sahf
test
sbb
dec
pop
adcb
pop
in
pop
lahf
sbb
fdiv
adc
sub
mov
out
or
push
psrlq
mov
loopne
mov
mov
add
test
jns
in
dec
adc
cmp
ds
je
pop
popa
push
cmp
and
cmpsb
repnz
xchg
xchg
sub
imul
imul
and
push
pusha
jmp
into
sbb
das
test
jl
outsl
lea
out
movsb
jo
cmp
cmpsb
mov
ss
push
popf
push
aam
sbb
mov
push
xor
mov
jle
rcrb
dec
pop
ds
lcall
ja
mov
hlt
mov
lock
fs
inc
adc
sbb
lea
cmp
push
les
cmp
mov
fmull
and
repz
push
xchg
xchg
and
mov
xor
je
adcb
das
mov
inc
sbb
data16
push
loopne
xchg
or
push
and
or
aad
dec
push
vmovntpd
cmpsb
out
out
xchg
ljmp
sbb
xchg
jg
ret
and
decl
xor
loope
inc
push
iret
xorb
ficoms
aaa
jno
push
jp
or
insb
and
sbbb
mov
xor
pop
or
cwtl
pop
inc
sbb
enter
cmpsb
in
jnp
or
push
sbb
push
shl
and
mov
mov
imul
xchg
mov
jp
or
test
repnz
cmp
add
mov
mov
xchg
add
gs
jg
std
test
out
mov
jno
pop
cmc
loope
and
dec
mov
cmc
dec
mov
insl
lret
add
jne
movsl
jo
mov
or
xchg
sbb
nop
xchg
lods
cli
inc
lods
mov
xchg
push
adc
mov
dec
das
pop
out
imul
loopne
rolb
mov
loopne
into
adc
fidivrl
dec
jnp
sub
ljmp
and
mov
loop
jae
pop
add
stos
int
out
add
dec
ljmp
and
enter
push
in
pop
add
ficomps
pop
adc
scas
lret
sub
icebp
lea
loop
adc
push
inc
mov
sbb
psubq
fiadds
adc
sti
movzbw
add
jmp
sub
push
clc
cmp
push
call
pop
push
loop
inc
sub
pop
push
dec
mov
cli
sbb
cmp
ljmp
subb
mov
push
mov
orl
fadds
andl
add
sahf
hlt
imul
shll
sbb
cmc
test
loope
loop
or
inc
sahf
test
cmp
movsb
out
test
cmp
inc
adc
sbb
sarb
sub
pushl
movw
pushf
movb
lea
call
bt
test
jmp
xchg
loop
aas
test
pop
lods
cwtl
mov
fdiv
inc
inc
shrb
cmc
inc
imull
xchg
mov
in
call
push
and
jns
dec
maskmovq
idivl
inc
decb
push
stos
lds
out
fbstp
mov
stos
lcall
mov
lds
pop
push
test
xchg
in
jecxz
inc
sbb
test
cmp
dec
test
jge
shr
mov
lret
pusha
and
mov
imul
scas
test
stos
nop
test
pop
cmp
mov
xorl
lods
lahf
inc
fwait
pop
sbb
add
jae
sub
push
sub
cs
pop
ror
xchg
cli
and
ja
xchg
mov
add
loope
jmp
sbb
cmpsl
mov
rcr
sbb
aam
or
or
and
and
xchg
std
sub
sarl
jp
int3
jns
jae
add
or
cltd
add
in
or
mov
imull
das
shll
pushf
movsb
out
les
pop
ja
int3
cmpsl
mov
or
loope
add
cmp
mov
in
xchg
lea
jb
mov
ljmp
lds
movsb
mov
shrl
inc
in
andb
push
pushl
and
xchg
fmuls
mov
andb
sbb
pop
inc
sbb
pushf
fmul
popa
out
sti
mov
dec
inc
pusha
mov
mov
das
ret
fwait
push
cmp
cmp
push
lea
jae
pushf
cmp
pushl
lea
jae
call
sub
cld
mov
shll
sbb
clc
in
data16
and
lret
mov
sbb
pop
rorb
lcall
daa
sahf
ss
call
jb
cmp
xchg
pusha
int3
adc
outsl
sub
sub
ljmp
test
aam
mov
pop
lcall
movsb
mov
daa
dec
add
imul
cmp
out
jp
sbb
jo
xor
add
lock
jecxz
cmpsl
sub
cmpsl
shrl
ret
pop
call
insl
inc
jbe
mov
pop
dec
inc
and
xchg
int
scas
jne
or
aas
out
outsl
cs
dec
push
mov
out
pop
out
push
cmc
jns
out
test
test
call
add
add
test
sahf
rcr
jns
gs
cmpsl
movl
daa
sbb
outsl
mov
data16
and
sub
hlt
sub
stos
fwait
loopne
and
inc
push
sbb
inc
jmp
std
pushf
arpl
fisubl
fdivl
mov
xor
push
popf
in
es
adc
in
inc
insl
fsubl
push
adc
xchg
and
xchg
pop
test
sarl
push
mov
adc
push
cmp
xchg
in
mov
cs
or
movsl
lret
fistps
ds
jecxz
mov
cs
sub
les
call
pushf
mov
bt
sub
jmp
push
test
xor
add
jnp
sbb
int
mov
je
nop
test
or
lcall
push
ds
rcll
inc
dec
add
aam
testb
mov
sbb
jecxz
lods
arpl
sbb
pop
ret
shl
stos
ficoml
sbb
pop
jno
jno
sub
dec
test
dec
sub
and
cmp
les
out
sti
jmp
sub
sti
clc
rcr
clc
push
rcr
aad
adc
mov
cmp
test
call
call
pushf
pusha
movb
lea
jae
call
push
xor
inc
sbb
jne
mov
js
and
mov
in
push
mov
adc
pop
xchg
or
rorl
test
xchg
pop
xlat
test
and
xchg
lock
adc
stos
cmp
xchg
cmp
lods
lock
or
addb
mov
push
jo
mov
jge
xor
dec
jnp
xorb
mov
or
mov
into
add
leave
jbe
lretw
adc
pop
or
aaa
adc
jne
sti
or
and
cmpsb
adc
movsl
mov
pop
jnp
sbb
lods
stc
stc
pop
fidivrl
pop
inc
insb
inc
pop
mov
fwait
push
loope
test
mov
incb
int3
dec
push
inc
aam
mov
mov
shll
inc
mov
mov
cmp
ret
sub
shlb
sbb
popf
aad
push
jecxz
test
pop
mull
push
pop
jp
mov
addr16
push
jns
mov
dec
mov
fstl
sub
movl
pusha
pushl
pushl
pushf
lea
jmp
pop
gs
shl
xor
cld
insl
mov
fs
lahf
jl
daa
push
xor
xchg
lods
aam
leave
rcrb
ret
mov
xchg
xchg
lcall
xchg
lods
cltd
adc
dec
fsub
push
push
mov
add
dec
cmp
xchg
fldenv
lret
dec
stos
insl
test
cmp
es
dec
enter
cmp
sahf
lods
mov
pop
mov
sub
pushf
pop
clc
add
aas
push
inc
addr16
je
mov
imul
lahf
jbe
mov
dec
or
mov
shrb
ret
cmp
xchg
dec
xor
xchg
in
sarl
and
push
mov
mov
mov
pop
lds
cmp
add
cli
mov
xor
addr16
inc
scas
add
call
scas
out
push
xchg
ljmp
imul
push
pushf
adc
jle
sub
push
in
leave
sbb
out
and
jnp
imul
add
jne
cmpsl
adc
outsb
js
xchg
push
shrb
sub
orl
add
xchg
pop
mov
jbe
add
jge
jbe
adc
movsl
adc
add
sbb
in
addl
jne
popa
lock
cmp
movsl
push
lcall
imul
mov
repnz
pushf
imull
call
xor
rorb
cmp
push
cwtl
inc
lods
pop
in
xchg
fbstp
jmp
jnp
imul
sti
inc
add
sub
pop
mov
or
arpl
dec
push
cmp
and
cli
xchg
or
movsl
sarl
roll
mov
repnz
loopne
xor
jg
test
int
mov
stos
mov
in
push
rcll
data16
push
push
add
or
mov
int3
xchg
xor
pop
xchg
or
inc
sbb
test
cmp
pushf
push
and
mov
jl
imul
insl
sahf
fsubrl
je
nop
and
pop
sahf
xor
fs
or
adcl
inc
iret
icebp
dec
or
mov
adc
push
mov
pop
repz
roll
sub
jp
xchg
in
popa
sar
dec
and
fcmovnbe
and
bound
lods
mov
xchg
into
inc
jbe
adc
jnp
jno
cmp
sub
pop
inc
rorb
loop
jl
pusha
aam
popa
sub
or
leave
jb
in
jo
xlat
mov
mov
test
xchg
fstl
and
aas
push
inc
js
ja
fs
imul
into
cmp
mov
fldt
xchg
stc
or
ficoms
jecxz
mov
or
or
or
xor
lcall
pop
ljmp
jns
inc
jmp
sub
xchg
sub
fs
and
jge
and
adc
xchg
iret
out
rcrl
pop
insb
or
push
sbb
inc
sbb
mov
in
fwait
xchg
dec
aaa
imul
icebp
push
sahf
fdivrp
mov
popf
call
nop
push
bound
ja
das
leave
add
xor
sub
cmp
jl
mov
jle
ljmp
cmp
outsl
push
aas
xchg
push
or
sub
sbb
xlat
sub
testb
xchg
leave
jo
mov
cltd
mov
aam
dec
mov
xor
lods
cmp
mov
frstor
dec
pop
into
mov
shlb
notb
xlat
je
mov
or
sbb
rorl
fsubl
notb
xchg
pushf
jae
imul
inc
adc
scas
sub
sbb
ja
or
push
psubw
push
mov
xchg
or
stos
xor
mov
pushf
pop
mov
notb
lret
xchg
pop
out
imull
sbb
xor
aas
fwait
sahf
inc
repnz
sbb
gs
jmp
add
sbb
mov
adc
dec
jb
pop
int3
stc
cmp
xor
cmp
jp
call
jmp
pushf
lea
jle
je
bt
pusha
or
mov
push
lea
je
shl
xor
cwtl
mov
inc
or
mov
stc
or
and
shr
inc
shld
clc
mov
test
cmc
or
pushf
pushf
pushf
pushl
lea
je
neg
add
pushf
neg
add
call
out
push
dec
loopne
inc
in
faddl
mov
scas
push
adc
push
test
mov
mov
jl
cltd
add
jo
inc
popf
test
test
push
pop
and
lcall
sbb
mov
mov
lods
adc
lret
bound
or
and
outsl
push
roll
adc
mov
insb
lret
hlt
push
xchg
jo
sahf
mov
mov
add
mov
inc
imul
imul
inc
imul
jne
je
and
and
jae
jo
outsl
addr16
insl
and
jae
bound
outsb
and
outsb
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outsb
daa
je
ja
jb
and
jns
outsl
jb
add
idiv
pusha
bt
cmp
jmp
cmpsl
ds
leave
dec
jg
sti
lahf
dec
push
mov
xor
insb
std
lret
mov
sbb
nop
test
or
scas
pop
subl
mov
rcl
push
into
lcall
mov
mov
or
and
inc
cld
cmp
lea
ret
mov
leave
lds
ret
insb
xor
sub
addr16
das
hlt
lret
sub
into
jmp
push
sarb
xor
fimull
int
adc
xchg
inc
lret
outsl
inc
outsl
jle
inc
push
insl
mov
andl
movb
popa
pop
popf
addr16
out
fbld
ja
cmc
cs
xchg
and
subb
test
outsl
int
lcall
mov
jp
rcrl
gs
imul
xor
sbb
ds
sub
popa
lret
push
jae
push
clc
adc
xor
lea
into
cmp
ljmp
fnstenv
repnz
orl
in
push
and
mov
in
xchg
mov
jb
xor
lods
mov
xor
aam
arpl
dec
imul
movl
pushf
lea
jmp
lea
je
push
add
pushf
bt
push
cmp
cmp
push
pushf
pushf
pusha
lea
jb
pusha
cmp
call
pusha
lea
je
neg
cmp
rol
mov
clc
test
add
pushf
call
call
inc
xchg
mov
cmp
int3
rcll
cmp
add
dec
out
sub
pmaxub
rclb
es
xor
out
stos
jns
or
push
xor
into
repnz
mov
jmp
xor
mov
aam
std
sbb
insb
push
pop
mov
xchg
insb
shr
outsb
imul
xor
pop
hlt
jmp
insb
jmp
adc
cmp
int3
dec
loopne
mov
mov
xorb
sbb
fwait
pop
mov
dec
cli
push
jb
rcl
je
mov
popa
les
insl
mov
aas
xchg
mov
mov
mov
pop
cltd
push
arpl
aam
cmpsl
push
mov
mov
cmp
jge
bsr
btr
xor
call
and
lahf
test
sub
jg
dec
cmp
or
sahf
je
jnp
fmull
mov
sbb
mov
add
iret
fwait
jno
jne
pop
sub
mov
loopne
or
sbb
pop
lods
cmpl
test
leave
xchg
push
xcrypt-ofb
cmpsl
sub
jnp
xor
inc
push
es
cmpsb
push
int
das
iret
sbb
les
xor
or
add
test
xchg
test
cmp
pop
jo
pop
mov
cs
jnp
jo
adc
pop
or
pop
add
sbb
ret
inc
pop
xchg
xchg
xchg
ds
lock
inc
jnp
cwtl
pushf
les
dec
in
push
or
push
mov
and
outsl
xor
cmp
call
pop
sar
jne
cmc
fimull
mov
imul
pushf
lea
jae
lea
neg
shrd
rcl
mov
bts
mov
shr
mov
stc
adc
bsf
mov
stc
push
sub
stc
call
mov
clc
cmpb
jmp
or
mov
rcrb
leave
daa
pop
subl
das
dec
in
mov
pop
pusha
mov
shrb
jne
adc
jae
mov
cld
std
ficomps
les
insb
cli
jnp
or
pop
mov
mov
push
push
in
popa
jo
sub
hlt
sbb
mov
aas
cmp
outsb
or
in
orb
jecxz
addr16
jl
jmp
ja
imul
lret
sub
js
jnp
les
cmc
jecxz
je
xor
sub
mov
hlt
pushl
push
les
arpl
dec
out
mov
cmp
jb
shl
or
jo
call
jo
stc
insb
stc
data16
xchg
pop
daa
popf
jne
jg
les
test
shll
mov
cmp
push
scas
sub
jbe
lahf
cmp
jmp
imulb
roll
mov
xchg
scas
push
xor
pop
cmp
pop
clc
les
dec
mov
in
test
mov
bound
cmp
xor
jmp
xor
sub
pop
or
mov
out
push
mov
jle
add
std
mov
pop
mov
dec
ss
outsb
dec
sub
jo
jle
adc
xchg
pushf
or
inc
sub
test
mov
mov
pop
adc
roll
mov
xchg
fnstenv
in
mov
shlb
cmp
aas
xchg
sub
xchg
loop
test
movsb
popa
add
and
xchg
dec
int
pushf
adc
mov
pusha
add
mov
testl
lea
idivl
rorl
jae
mov
add
xchg
in
or
inc
mov
xchg
popf
mov
repnz
add
test
mov
lcall
pushf
aaa
enter
and
int3
and
rclb
inc
sti
adc
int3
mov
pop
in
mov
push
lcall
push
xchg
mov
dec
push
push
fistpl
sbb
adc
xlat
pusha
push
and
out
pop
sbb
lds
clc
jp
inc
and
rcll
or
pop
xlat
adc
xchg
jae
sub
aad
inc
jae
pop
notb
fwait
rcrl
xchg
pop
xor
loop
push
loopne
mov
out
cmpsb
fnstsw
clc
jmp
xor
jns
dec
or
test
and
rcr
mov
or
pop
in
mov
mov
xor
les
fidivs
inc
sbb
mov
adc
push
in
lea
test
in
daa
xchg
je
ret
cmp
aas
repnz
outsl
push
sbb
movsl
cmc
fcomp
inc
push
inc
fmull
cmp
mov
loope
push
pop
xor
mov
cmpsl
xchg
enter
shl
dec
loope
pop
jle
push
push
addr16
or
jg
pop
xchg
fisttpl
imul
lea
lods
mov
inc
mov
xchg
add
jle
mov
cmpsl
fldenv
icebp
and
fwait
jo
push
cmc
bound
sub
mul
pop
mov
mov
lcall
cmpsl
cmp
pusha
and
dec
out
bnd
or
in
jp
sub
pop
xchg
jecxz
sbbb
popf
rcrl
mov
cwtl
sahf
push
cmpsl
xor
fiaddl
push
pop
pop
adc
mov
mov
aas
mov
jbe
pop
inc
mov
fimuls
mov
add
pop
inc
cmp
ss
pop
pop
or
out
mov
fwait
mov
lods
pop
daa
and
xor
cmp
imul
pop
into
lds
jnp
mov
xchg
xor
lock
insl
xlat
mov
pop
or
adc
jecxz
cmp
pop
mov
cltd
cmpsl
xor
icebp
cmc
shrb
js
in
mov
mov
pop
xchg
add
or
rcl
pop
fisubrs
sbb
out
dec
sti
inc
cmc
addr16
lcall
movsl
scas
jb
sbb
push
mov
lods
sbb
lea
sbb
pop
les
add
cmp
dec
arpl
jp
xor
add
cmp
hlt
lds
pop
fidivrl
orl
insb
in
adc
fcomps
pop
sahf
cmp
pop
ss
out
mov
pop
imul
and
subl
pop
push
pop
jnp
sbb
nopl
dec
out
mov
cmp
leave
pop
jne
loopne
adc
and
lods
lret
inc
test
shrb
in
pop
lcall
pop
orb
iret
pop
std
or
dec
mov
daa
sub
aam
xor
cmpsl
scas
pop
add
and
sub
adc
jle
pop
xchg
loope
or
addr16
addr16
xchg
dec
sbb
cmc
dec
mov
sbb
test
sti
pop
sub
adc
mov
sub
push
fiaddl
dec
jle
ja
pop
pop
ret
movsb
jecxz
in
loopne
in
std
pop
mov
add
add
mov
dec
mov
add
pop
mov
push
ficompl
inc
sarl
dec
push
adc
lahf
sub
mov
mov
inc
loop
out
imul
mov
and
sbb
dec
sub
rcrb
out
insl
ja
mov
pop
xor
in
jnp
dec
lahf
in
xor
mov
cwtl
mov
cmpsl
pop
inc
fwait
inc
lret
xchg
sub
movsb
jnp
sbb
jb
inc
add
inc
ljmp
sbb
cmp
push
adc
jl
andl
les
mov
mov
cmp
out
pop
mov
dec
int3
aas
inc
dec
imul
clc
mov
fistpll
cmp
add
sbb
jmp
in
sub
mov
ret
or
rcrl
shll
inc
bound
dec
insb
sti
xor
xchg
mov
mov
out
mov
push
fldcw
enter
ret
fsubs
fstps
sbb
sti
aas
divl
sub
clc
leave
dec
fistps
test
pop
xchg
aam
insl
and
inc
push
dec
jg
xor
sbbb
data16
in
pop
loop
mov
pop
dec
add
push
lret
les
stos
dec
xchg
add
pop
xlat
fnstcw
push
loop
and
mov
sbb
push
jecxz
rorb
testl
xor
mov
or
sbb
pop
movsl
fsts
in
xlat
inc
sbb
pop
divl
das
or
sahf
or
dec
inc
sbb
add
aam
int
sub
sub
mov
loop
jle
sahf
pop
and
mov
inc
mov
xchg
cltd
test
iret
push
mov
or
pop
int3
pop
add
jge
jne
fnstenv
xchg
loop
mov
ffree
push
adcb
dec
cmpsb
or
sub
cli
pop
and
jge
cmp
cmp
loopne
adcl
push
xchg
mov
jno
aad
adc
mov
ja
in
xor
add
loop
fistps
into
xchg
bound
push
dec
dec
lcall
test
push
add
xchg
push
or
mov
inc
mov
pop
mov
mov
addl
sbb
sub
mov
jmp
clc
cmpsl
arpl
pop
lret
inc
mov
jge
outsl
sbb
pop
loop
scas
movsl
insb
test
jnp
jo
stos
mov
in
mov
mov
ja
mov
scas
dec
out
xlat
dec
pop
add
negl
mov
movsb
leave
pop
and
push
push
scas
cmp
mov
mov
mov
pop
adc
xorl
stos
pop
jmp
xor
cmp
push
cmp
cmp
push
mov
repnz
ficoml
pop
mull
dec
push
lret
pop
adc
enter
pop
xor
loopne
ja
push
push
mov
in
mov
jbe
and
sti
mov
loope
aas
js
push
xchg
xchg
cmp
inc
xor
xor
jne
jae
pop
call
adc
pushf
fiaddl
lock
inc
out
loopne
sub
jnp
xor
shrb
div
mov
and
fwait
adc
xor
enter
test
syscall
dec
scas
pop
aam
sub
js
cmp
add
fmuls
fcompl
mov
lock
push
pop
aas
insl
test
mov
stc
imul
movsl
jge
pop
xlat
cwtl
push
outsl
mov
jp
adc
shlb
loopne
pop
xor
scas
jge
or
mov
repz
stos
push
cmpsb
jp
pop
push
cs
movb
loopne
dec
enter
mov
shll
js
adc
pop
push
pop
popa
inc
fisubs
and
incb
pusha
int3
sub
test
adc
ja
in
jp
test
xor
mov
fs
adc
mov
push
sbb
pop
sbb
scas
sub
mov
or
sahf
push
lret
das
mov
aaa
dec
cli
dec
mov
sub
bound
push
mov
xchg
and
jns
mov
or
mov
xchg
or
inc
jmp
or
pop
test
xor
jo
mov
ljmp
mov
pop
mov
lcall
pop
cli
repnz
fisttps
lret
xchg
out
jne
sbb
adc
xchg
rol
loope
xor
jge
je
pop
cmp
out
push
jnp
inc
and
stos
push
push
dec
sbb
lcall
cmp
push
cmpsl
fwait
sbb
mov
adc
jp
or
cmp
orb
ss
js
outsb
shrl
bound
pop
adc
push
cmp
dec
rorl
inc
inc
ss
lret
cmp
push
shrl
dec
and
push
adc
lret
push
cmp
push
push
rorl
dec
push
add
std
adc
lret
cmc
cmp
push
in
shr
dec
in
fstl
fxch
aad
rcll
int
leave
dec
mov
cmp
dec
movsl
mov
lret
xchg
cmp
dec
test
lret
jne
jno
insl
shrl
xor
rclb
rorl
jmp
xchg
dec
rcrl
dec
mov
push
lret
in
cltd
push
popa
shll
adcb
push
adc
xlat
cmp
dec
mov
push
lret
in
rcll
roll
cld
mov
push
and
sarl
xchg
push
inc
rorl
dec
jle
inc
adc
lret
aad
mov
jno
xor
test
sub
push
out
mov
das
cmp
push
rcll
icebp
adc
push
hlt
shll
pop
add
add
mov
mov
jle
inc
jp
jae
mov
cmpsb
and
mov
aaa
mov
out
popa
jp
adc
push
mov
mov
or
mov
stos
mov
mov
into
mov
sbb
aaa
mov
mov
or
stos
mov
xchg
cpuid
pop
mov
and
inc
lret
sbb
push
out
xchg
mov
pop
add
adc
mov
in
cmp
push
sahf
cmp
int
xchg
xchg
push
pop
mov
pop
fmull
dec
mov
into
or
jecxz
mov
iret
lea
scas
sahf
lcall
xchg
pop
lcall
pop
notb
add
jle
ret
in
jae
sbb
xorb
push
xchg
dec
lods
repz
mov
jbe
mov
shll
cmpsb
sbb
popl
xchg
add
mov
int3
div
or
and
inc
add
mov
inc
jp
aaa
mov
hlt
push
push
mov
jbe
enter
xchg
icebp
nop
mov
push
ljmp
or
jecxz
dec
sub
and
ficompl
sahf
mov
push
dec
or
sbb
push
outsb
sub
leave
inc
mov
movsl
das
dec
push
or
jl
inc
push
das
jbe
and
lods
shll
lret
xor
in
mov
sahf
push
stos
cmovp
sub
mov
mov
and
or
mov
sub
stos
in
mull
daa
cld
shr
sub
movntps
sbb
xchg
adc
sbb
inc
add
punpckhwd
or
mov
mov
mov
mov
xor
mov
sbb
cmc
insl
daa
jb
fnstcw
dec
out
jns
or
pop
push
mov
dec
push
push
or
dec
leave
pop
cmpsl
xchg
push
mov
dec
sbb
pop
jmp
cmp
cmp
test
pop
jne
or
xor
inc
pop
stos
lret
lret
or
fwait
hlt
push
imul
sbb
dec
jmp
mov
dec
sbb
push
cmp
jmp
or
pop
xchg
inc
sbb
cmp
aas
push
cmp
xlat
push
xchg
sbb
sbb
push
stos
xor
cmp
popf
adc
jns
jns,pt
nop
lds
cltd
jbe
sub
xchg
jp
pop
es
sbbl
sub
dec
rorb
mov
in
ficoml
inc
sbbl
enter
aam
inc
and
sbb
lret
ja
xchg
mov
sbb
xorl
pusha
mov
into
and
into
xchg
test
sbb
mov
push
cltd
loope
adc
std
dec
pop
jmp
cltd
cmc
lret
in
sbb
shll
je
xlat
cltd
sbb
ror
dec
leave
shr
xchg
adc
xchg
lret
lcall
xchg
aaa
and
push
icebp
add
ret
sbb
je
mov
fnstsw
xchg
inc
iret
sbbl
ja
jbe
cmpl
int
dec
fwait
jbe
insb
pop
xchg
hlt
mov
jl
pop
gs
scas
dec
call
inc
pop
push
sbb
adc
jg
ja
xchg
in
mov
xchg
mov
cmp
sub
xor
das
mov
fwait
xchg
mov
inc
jae
xorl
js
pushf
inc
sub
hlt
lret
mov
mov
push
inc
push
pop
lea
jmp
popf
pop
xor
mov
jg
ds
decl
sti
xor
fistps
fdivrs
insl
lds
lret
and
push
add
cmp
jp
int
orl
stos
fwait
ljmp
add
xchg
out
xor
mov
repz
ja
sub
xchg
mov
dec
push
popf
sub
inc
cmp
cli
sbb
lret
jns
dec
sub
sbb
rcr
jae
testb
sbb
cwtl
aaa
sbb
in
outsl
push
js
loop
out
scas
fmuls
push
ss
inc
aaa
pop
fcompl
fsubrs
mov
dec
pop
pop
push
dec
mov
cmp
push
inc
sub
stc
fucomi
mov
sti
push
fistl
sti
shlb
sbb
jnp
ret
in
out
iret
enter
shll
into
xchg
aaa
fsubs
popa
or
jmp
stc
push
pop
shlb
pop
aaa
mov
cld
sub
in
cli
and
sbb
sti
call
cmp
or
aaa
sbb
inc
lcall
fimull
jle
repz
push
jnp
dec
jnp
aas
adc
jbe
sub
mov
sbb
pop
mov
je
mov
imul
xor
imul
lds
js
sub
jns
movsl
sbb
sub
imul
xor
jg
subb
int
lret
test
adc
pop
call
xor
decl
sbb
sub
inc
lret
iret
push
mov
outsb
xor
lcall
cmp
ror
stos
sbb
lock
ds
jl
or
test
jb,pt
bound
mov
mov
into
dec
cltd
mov
pop
push
xchg
sbb
dec
jb
mov
add
xchg
iret
pushf
xchg
mov
orl
dec
sahf
cmpsb
pop
shlb
mov
cmpsb
stos
push
mov
out
pusha
lods
mov
or
js
mov
push
negl
xor
fsts
fadd
fwait
xlat
lret
cwtl
dec
ficompl
sbb
cltd
pop
adc
mov
aaa
xor
mov
in
pop
add
and
adc
not
inc
xchg
test
cmpl
push
add
mov
scas
cmc
push
ss
cmpsl
ljmp
adc
pop
lods
jns
pop
add
test
rolb
dec
insl
or
lods
cltd
and
je
or
sbb
mov
pop
daa
inc
imul
ja
cmp
setle
mov
push
daa
repnz
cmp
aas
pop
jmp
jns
jp
push
xor
mov
jno
pop
mov
pop
xor
mov
lcall
mov
or
push
in
dec
dec
pop
sets
mov
dec
mov
push
inc
push
mov
lahf
sti
dec
adc
imull
or
mov
inc
xor
repz
cmp
sbb
shlb
shll
add
dec
fildl
into
mov
sbb
sub
inc
add
push
sub
xlat
sub
mov
sbb
mov
or
sbb
fcmovb
nop
sti
dec
sbb
add
or
leave
mov
scas
lock
cmp
lret
cwtl
scas
sub
inc
ret
lods
dec
test
cmp
daa
cmp
and
dec
mov
dec
mov
scas
repz
push
or
jns
into
push
mov
leave
or
dec
enter
mov
mov
lret
lcall
pop
cmpsb
mov
mov
out
sub
flds
sbb
push
or
pop
mov
cli
xchg
fists
ret
stos
dec
mov
xor
clc
aad
lcall
pop
mov
pop
add
ficoml
bound
jmp
sbb
mov
stos
mov
cmp
ljmp
and
cmp
inc
add
mov
adc
dec
sbb
push
cs
lret
jmp
dec
mov
xchg
testl
mov
decl
mov
jns
mov
push
adc
mov
ret
mov
adc
sub
inc
xor
or
lahf
ficompl
or
or
jbe
cmpsb
adc
into
mov
pusha
decb
int
jne
dec
jne
cmp
pop
pop
cmp
add
mov
ret
push
fildl
mov
xor
add
mov
ficoms
jle
jnp
sbb
push
mov
jns
into
dec
push
xchg
sbb
inc
daa
nop
rol
arpl
fidivrs
test
flds
add
pop
inc
cmp
into
cmp
push
lret
xor
or
fld1
into
sti
imul
cmp
push
fistl
mov
or
and
pop
cld
xor
aas
fwait
icebp
lcall
and
ret
out
pop
mov
xor
or
pop
mov
leave
mov
cwtl
inc
fcmovnu
sub
mov
push
sbb
mov
fwait
mov
push
aam
fisubrl
fwait
rcll
or
gs
sbb
lret
fidivrl
pop
jno
ret
add
cmp
loopne
mov
xor
sbb
sti
pop
fisttpl
xor
mov
je
push
insl
mov
push
jle
mov
mov
popf
cmp
push
dec
aam
enter
loop
sub
fs
sbb
mov
dec
imull
es
mov
fs
inc
sbb
mov
push
cltd
cmp
repnz
pusha
fadd
xlat
aas
sub
cmp
iret
sbb
cs
pop
mov
cwtl
inc
addb
leave
inc
adc
push
out
push
jmp
jne
xor
and
sbb
leave
loope
bndstx
cmp
lcall
sub
inc
cmp
sarb
mov
sub
push
xchg
testb
inc
xor
andnps
cltd
sub
fwait
mov
mov
lcall
dec
xlat
jg
xchg
push
mov
aad
test
mov
push
mov
cmc
inc
adc
in
inc
mov
mov
xchg
xchg
bound
lods
cmp
jmp
and
inc
mov
dec
out
pop
or
sbb
dec
dec
cltd
lods
cltd
cmp
aam
divb
cli
xlat
lcall
sbb
xchg
data16
sbb
aaa
pusha
push
xchg
push
push
xor
rcl
ljmp
add
sub
sub
mov
or
inc
lods
and
scas
insb
inc
mov
ss
sub
sub
dec
aad
addb
sbb
xchg
leave
xchg
inc
sub
add
adc
ljmp
inc
pop
mov
in
aad
lods
xor
mov
and
stc
fcos
lock
cltd
mov
mov
sti
push
pop
lcall
or
push
add
inc
sub
mov
pusha
dec
int
dec
shr
stos
aad
dec
repnz
inc
inc
push
sub
pop
jns
pop
cmovs
incb
fidivs
enter
adc
cmp
mov
adc
fwait
or
dec
adc
addr16
jbe
cmp
call
sbb
add
sub
sub
add
push
xchg
xor
in
dec
pop
mov
inc
mov
or
dec
or
dec
or
adc
jmp
xchg
pop
inc
in
out
mov
out
or
push
or
and
push
shrl
mov
xor
test
loope
outsl
inc
clc
mov
xchg
inc
dec
lods
clc
add
xor
pop
insl
aas
js
int
and
int3
repz
ja
andb
add
sub
sti
lcall
sbb
and
shlb
inc
mov
fnstenv
cmp
fcmovbe
adc
cmp
cli
dec
jnp
adcl
sbb
incb
mov
push
popf
pop
cmc
outsl
and
ret
cmovns
pop
lods
cmp
mov
out
sbb
test
ret
cs
push
or
push
int
inc
movsl
mov
or
inc
and
or
inc
lret
mov
lcall
jmp
push
jl
negl
jnp
in
adc
cmp
xor
pushf
dec
adc
lret
xor
scas
sub
jmp
push
and
stos
and
mov
push
push
dec
xchg
push
jg
mov
es
adc
inc
ret
dec
and
inc
inc
inc
xor
push
mov
fildl
es
jns
rcr
ret
or
push
rcll
lds
add
push
jnp
cli
dec
and
push
fisubrl
push
lds
push
push
ds
enter
add
adc
sub
in
dec
test
cmp
dec
jecxz
mov
adc
fstpt
pushf
adc
cs
fstpl
push
andnps
fsubs
jge
inc
cs
xor
sbb
inc
push
je
push
jnp
dec
mov
mov
sub
pop
lret
ljmp
jno
ljmp
sub
or
vmulsd
test
pop
stos
xor
cmp
sub
cmp
dec
outsl
jl
add
in
sbb
lret
loope
dec
imul
mov
xchg
mov
sbb
cltd
shll
mov
cli
lods
push
xor
cmp
es
stc
test
and
mov
cmp
xchg
xchg
sub
shll
cs
push
enter
sub
xor
shll
cmp
and
dec
dec
insb
dec
push
pop
jne
aad
inc
or
in
xor
popa
push
fdivp
jg
icebp
jbe
aas
mov
fidivrs
fldt
xchg
cmp
ljmp
std
jp
dec
pop
push
xchg
rcrb
xchg
cmc
xor
ret
rclb
ret
push
pusha
idivl
lods
mov
cmp
rclb
cs
push
pop
pop
xor
dec
mov
jae
or
dec
sub
inc
push
lods
mov
lea
mov
ret
outsl
mov
push
xor
rcrl
shrl
push
jnp
mov
pop
sub
testb
pop
or
pop
jo
sarl
outsl
dec
movb
push
adc
pop
loope
sub
in
mov
fs
lcall
mov
ss
sub
jecxz
lret
push
adc
rcll
xor
ror
mov
gs
push
ds
add
lret
and
test
push
int
fldt
pusha
jnp
daa
mov
sbb
push
jmp
roll
cmp
add
dec
dec
sti
cld
inc
sarl
mov
fwait
aaa
loope
inc
xchg
lock
sbb
cmp
int
sbb
shl
icebp
sti
xor
dec
xlat
adc
xchg
push
shrb
cmp
dec
and
sub
ss
fisttpll
pop
mov
jnp
xchg
sbb
pop
imul
cmp
sbb
sbb
dec
fwait
ret
pop
out
stos
jecxz
xor
sub
add
and
sub
push
add
dec
adc
pop
xor
push
sti
cmp
mov
xor
jg
xchg
xchg
and
cmp
aaa
das
ret
dec
sti
dec
daa
loope
rcr
sbb
stos
mov
popa
xchg
cmp
cmp
gs
cs
or
push
mov
adc
inc
ljmp
jl
dec
stos
orb
ficoml
data16
xor
es
push
lods
lret
cmp
and
adc
or
sub
das
inc
or
dec
ss
inc
inc
ljmp
rcll
mov
js
leave
cs
pop
add
addr16
mov
aaa
inc
fildl
jmp
sbb
push
cmpsb
dec
cmpsl
dec
or
daa
sbb
cmp
aaa
push
or
dec
push
push
aad
test
mov
pop
imul
push
push
ss
sub
lret
push
test
push
lods
mov
hlt
adc
cmp
mov
jmp
push
repz
sub
lea
aaa
dec
mov
pop
xchg
sbb
ret
xchg
scas
dec
test
and
or
xchg
nop
scas
inc
push
fwait
mov
fstl
inc
sbb
add
pop
nop
mov
andl
cmp
cmp
mov
jns
dec
jae
sbb
and
sub
mov
ljmp
sbb
enter
rorl
xchg
mov
imul
cmpb
mov
scas
popa
stos
add
xor
sbb
lods
sub
insl
cmp
adc
insl
stos
sbb
lods
push
pop
pop
xchg
out
imul
mov
push
jae
pop
ret
daa
xacquire
cmp
or
push
jbe
out
cmp
and
leave
inc
push
xchg
xchg
jns
adc
mov
es
mov
cmp
aas
adc
sub
repz
gs
inc
mov
dec
stos
inc
ficoml
push
mov
orl
pop
mov
test
xor
xor
dec
xchg
and
mov
or
in
pop
mov
xor
push
cmp
dec
stos
fstpt
fcoms
divl
mov
bound
cmp
pop
dec
pusha
sbb
lods
aaa
sub
inc
addr16
sbb
sub
add
add
adc
outsl
pop
mov
stos
jmp
fisubrs
fwait
sub
cmp
outsb
and
jo
loop
testl
mov
push
sbb
cmp
xor
mov
or
test
nop
inc
das
imulb
pop
dec
mov
bound
or
or
rcrb
mov
sbb
cs
stos
sbb
xchg
adc
aad
imulb
lds
out
rcrb
pop
xchg
test
mov
data16
sbb
daa
adc
stc
and
pop
aad
out
hlt
push
out
es
adc
pop
adcl
mov
push
out
add
or
push
and
push
inc
lods
mov
sbb
lret
and
inc
hlt
pop
mov
subl
xchg
test
fst
mov
jmp
mov
sti
sub
cwtl
lret
imul
notb
leave
in
jb
cmp
add
sbb
sub
pop
xchg
repz
sub
dec
outsl
add
out
call
test
sub
cmp
mov
rcl
cld
mov
sti
xchg
leave
dec
or
cmpsl
arpl
cmc
pop
or
or
fdiv
lret
or
dec
or
cwtl
fnstcw
mov
pop
imulb
imul
inc
mov
dec
jns
jnp
dec
fs
mov
push
push
stc
sbb
dec
movsl
cwtl
into
mov
mov
mov
bound
xchg
lret
cmp
push
scas
fistl
dec
inc
add
push
repnz
fisubrs
add
jbe
test
pop
mov
loop,pn
roll
fsts
push
sbb
xchg
dec
stc
imul
sbb
push
pusha
inc
xchg
sbb
push
lret
push
dec
cmp
sub
je
rol
mov
dec
out
mov
scas
imul
cwtl
fidivs
lds
mov
xor
xor
cmp
dec
pop
push
or
cmp
mov
rclb
nop
stos
adc
pop
push
dec
arpl
sbb
xor
rcr
data16
addr16
arpl
fsubp
or
leave
xorb
sahf
mov
cmc
stos
mov
push
xor
dec
xor
pop
mov
dec
test
dec
gs
sbb
xor
ss
pop
enter
jle
cltd
mov
bound
xchg
cwtl
xchg
in
jne
fadds
sbb
mov
fcmovnu
push
cs
cmp
jle
fnstenv
inc
pop
push
adc
adc
or
or
sub
sbb
ja
bound
lods
cmp
cmc
shrb
das
cmp
sahf
push
push
outsl
xchg
adc
pusha
mov
icebp
inc
push
pop
mov
das
sub
sub
adc
xchg
iret
sub
sub
das
sub
mov
or
inc
test
mov
adc
cld
push
jmp
clc
fwait
jl
adc
cmp
pop
in
loop
daa
cwtl
fucomi
and
mov
lods
addr16
pop
push
lret
test
mov
idivl
mov
nop
cmc
popa
enter
mov
inc
cmc
sub
pop
inc
lods
pop
push
addr16
movntq
fs
inc
adc
fcoms
clc
or
movsb
hlt
icebp
call
pop
push
inc
clc
mov
dec
sub
call
sub
mov
enter
jae
mov
sbbl
icebp
lret
cmp
dec
fwait
xor
std
push
imul
mov
xor
xchg
les
out
jae
xor
inc
sub
jmp
dec
xchg
mov
aaa
adc
dec
aad
cmp
xchg
adc
sub
cs
jg
cmpsb
mov
scas
push
mull
add
adc
lret
lods
movsl
sub
mov
mov
fistl
sti
loop
and
xchg
popf
sbb
push
cmp
dec
mov
lret
cwtl
dec
xor
jae
sub
push
outsl
es
pop
out
test
sbb
jl
dec
and
mov
push
mov
outsl
sbb
xchg
bound
popl
mov
push
pop
push
mov
pop
iret
push
enter
lea
sbb
lods
and
and
xor
cmp
push
sbb
xor
adc
cmp
aas
fwait
into
mov
imul
loopne
adc
sub
mov
jl
mov
adc
scas
ret
in
fcomp
dec
ret
inc
jnp
push
and
adc
mov
lret
fcoms
pop
xor
inc
push
mov
lret
sub
ss
sti
subl
stos
fs
push
push
push
idivl
mov
pop
push
clc
imulb
sub
dec
xchg
xorb
loope
adc
adc
stc
dec
lods
ja
mov
pop
cld
fwait
push
addr16
inc
mov
xor
xlat
testb
lret
or
sti
fcmovnu
cmpsb
xchg
ss
sbb
lods
push
xchg
pop
data16
adc
pushf
or
pop
lret
out
addl
push
loopne
rcrl
xchg
test
lods
mov
sbb
mov
push
push
rorb
loope
mov
gs
pop
push
pop
mov
outsl
cmp
pop
push
dec
cmp
addb
or
dec
cmp
xchg
push
xchg
push
cmp
cmp
sbb
lds
cmp
dec
sub
xlat
lds
test
adc
adc
dec
daa
shl
rorl
pop
test
push
sbb
dec
xor
stos
or
xchg
adc
dec
insl
sub
lods
push
lods
fisttpll
cli
jmp
mov
or
sub
push
mov
sub
rcll
stc
jge
pusha
xchg
inc
sti
mov
pop
jns
jbe
fs
mov
push
sub
cmpsl
leave
icebp
into
add
rorl
and
pushl
and
loopne
sbb
jns
mov
popa
xlat
cmp
adc
cmp
xchg
les
pop
push
or
in
or
repnz
sbb
add
dec
pushf
daa
aas
pushf
cmp
xchg
movb
pop
jmp
popa
fwait
sbb
dec
inc
pop
test
pop
cs
xchg
mov
xor
or
ret
fisttpl
es
mov
jne
xor
outsl
push
jle
scas
pop
cmp
imul
aaa
pop
lods
sub
xchg
pop
jnp
push
jne
cltd
pop
mov
sbb
sub
mov
mov
xlat
outsb
xor
es
fnstenv
fstl
jno
cmp
sbb
scas
add
adc
lret
lret
mov
mov
dec
ljmp
lcall
add
dec
cmp
or
mov
fistl
jmp
adcl
cmp
sub
or
pop
lcall
lret
lods
aaa
add
ret
fists
divl
repnz
sti
sub
nop
push
outsb
fildll
xchg
xchg
or
jb
jle
pop
imul
std
popa
dec
adcl
adc
cmp
add
sar
jne
jle
daa
sbb
dec
mov
inc
jecxz
pusha
xorb
sbb
jp
mov
or
ret
pushf
stc
je
xchg
pop
mov
lds
cmp
jno
out
mov
stos
sub
cmp
and
stc
cmc
pop
sbb
cmp
dec
push
out
iret
adc
sbb
mov
mov
lret
inc
xor
es
push
jno
mov
sub
roll
lret
xchg
inc
inc
aas
inc
repz
pop
sub
xor
ss
push
imul
sbb
enter
cmc
adc
cmp
test
ss
cmp
mov
push
push
cmp
dec
cwtl
enter
pop
or
sub
xor
ss
add
imul
fldt
leave
loope
sub
jo
adc
leave
movsl
and
mov
mov
and
inc
enter
fistpl
ret
icebp
cwtl
or
inc
je
scas
cmp
ret
jnp
lret
pop
imul
dec
xlat
outsl
jno
xchg
and
addr16
cmp
sbb
mov
mov
popf
push
inc
repnz
imul
mov
pop
lret
enter
mov
push
aaa
idiv
jmp
cmp
sti
mov
or
cmp
sbb
sub
leave
cmp
jno
dec
cs
loope
add
fwait
and
shll
inc
ljmp
cmp
sbb
and
jns
mov
testl
xor
bswap
js
or
pop
and
fbld
jle
add
xchg
push
dec
std
jecxz
bound
sbb
lods
pusha
cs
and
push
fwait
xor
xor
xor
mov
inc
mov
sbb
cmpsl
cmpsb
enter
daa
or
sub
in
add
mov
pusha
jb
jb
and
dec
or
lret
nop
push
dec
jle
xor
loop
testl
dec
fisubrs
insb
and
cli
leave
or
xlat
fbstp
fidivl
decl
cltd
or
fisttpl
jo
cmp
push
inc
sti
aaa
push
orl
dec
mov
inc
mov
gs
rorl
mov
aad
imul
push
mov
fwait
sbb
test
sub
sbb
enter
ret
cli
iret
cmp
sbb
es
xchg
cmp
mov
mov
xchg
lock
or
pusha
xor
addb
xor
aaa
pop
or
xchg
frstor
int
xor
mov
sub
jns
add
sub
int3
pop
pusha
in
mov
fnstcw
lcall
popa
aas
pop
xchg
les
push
rcll
push
callw
jecxz
jle
dec
ds
ja
stc
cmpb
subb
cmp
mov
pop
outsl
lods
sbb
lret
push
sub
out
sub
js
jge
mov
add
in
xchg
lahf
push
adc
adc
sub
cmpsb
jne
fwait
push
es
pop
cmpsl
out
dec
lea
lret
sub
fnstcw
push
fcomps
or
jl
shrl
push
jnp
call
adc
or
movsb
sub
pop
inc
dec
push
int3
jg
add
push
xor
xchg
cli
dec
ret
sub
xchg
pop
lock
bound
dec
push
aam
dec
xchg
out
shrl
cmp
shlb
mov
push
cs
push
jnp
imul
mov
mov
inc
repz
pusha
pop
lcall
sbb
pop
stos
cmp
lsl
xor
sub
addr16
xchg
push
push
cwtl
pop
sub
xchg
cmp
inc
jnp
movnti
fldt
xor
ficoms
adc
mov
push
in
mov
jnp
shrl
push
dec
sti
in
dec
or
iret
out
fsubrl
push
mov
je
jae
mov
inc
xor
cltd
psubd
hlt
leave
xchg
jl
mov
jo
cli
cmp
mov
ret
fwait
clc
aaa
sarb
mov
xor
addr16
daa
pop
es
cmpsl
flds
mov
scas
cmp
dec
repz
pop
dec
sbb
movsl
push
repnz
loope
loop
fldt
in
and
or
sub
and
ss
movsl
dec
js
pop
fbld
imul
mov
cmp
cmp
or
pop
xchg
scas
sbb
xchg
lods
xor
mov
sar
push
loopne
adc
mov
scas
jbe
push
pushf
lcall
push
push
inc
sub
fldenv
dec
cwtl
and
adcb
and
sbb
rorb
jmp
imul
icebp
add
dec
int
adc
cs
pop
xchg
jo
xor
dec
mov
repnz
int3
outsl
in
mov
dec
fcmovnu
mov
insl
cmp
in
dec
sub
jl
xlat
ljmp
mov
lods
push
es
mov
jns
xchg
xlat
inc
inc
sbb
dec
movsb
into
push
or
dec
cmp
jae
inc
mov
repnz
pop
add
adc
or
out
add
std
mov
test
push
insb
dec
lds
cmp
loopne
push
cs
sbb
stos
adc
add
mov
and
or
popa
ja
pop
fisttpl
xlat
jmp
pop
sub
xlat
or
dec
xchg
icebp
inc
xchg
pop
lods
es
fdivs
ret
sub
xchg
fscale
icebp
jbe
mov
and
imul
lret
xchg
sbb
mov
cltd
push
sub
ljmp
cmpsb
loop
adc
lcall
xchg
aaa
xor
or
cmp
daa
sbb
push
jns
mov
addr16
enterw
fcmovbe
movsb
xor
aas
mov
jle
or
cmp
mov
mov
jne
sbb
dec
fwait
dec
cmp
insb
cmp
jl
aad
in
add
call
and
xchg
sub
sbb
dec
cmp
shll
enter
pop
pop
add
cmp
sbb
sbb
sbb
cmp
cli
xlat
pusha
cmp
sub
xchg
pop
jbe
pop
mov
pop
pusha
adc
jp
pop
pop
stos
mov
jmp
lcall
jae
and
andb
mov
pop
or
dec
mov
mov
dec
dec
sub
pop
mov
or
sbb
mov
mov
pop
and
xor
iret
adc
or
lahf
cmc
setne
addr16
lds
jecxz
inc
shll
xchg
and
push
cmpsl
fwait
pushw
dec
aam
cwtl
iret
call
jecxz
jno
sbb
sbb
int3
sbb
mov
push
adc
sbb
outsl
faddl
push
mov
mov
pusha
jmp
sbb
or
out
sti
xchg
mov
cs
cmp
rorb
adc
outsb
cmp
pop
mov
pop
lods
movsb
cmp
pop
and
jmp
fwait
mov
ss
mov
insb
lock
idivb
xor
dec
push
mov
pop
ljmp
mov
out
jge
imul
fsubr
aaa
sub
or
or
data16
or
lcall
ret
fistps
sub
dec
sti
mov
mov
dec
lds
aas
outsl
mov
push
ja
cld
mov
pop
data16
fidivl
sub
and
fistpl
fiadds
push
dec
adc
cs
dec
or
scas
xchg
fbstp
pusha
or
mov
cmc
shll
cli
xor
mov
dec
cmp
scas
push
inc
sbb
mov
cmp
iret
ljmp
sbb
jnp
jb
test
mov
pop
ja
or
adc
xchg
push
inc
divl
cmpsl
mov
adc
jb
das
cmp
ss
movsb
icebp
repz
fisubrl
fnstenv
fld
call
pop
out
shrl
and
pop
inc
push
pusha
xlat
sub
mov
push
xchg
std
fdivrl
gs
or
xchg
pop
and
sub
sbb
lahf
add
fcom
xchg
pop
outsb
adc
mov
imul
js
dec
xchg
sub
xor
push
push
push
xchg
push
or
push
dec
es
rep
out
movsb
jp
adc
cmpb
cmp
lcall
cli
dec
xor
rorb
mov
mov
cltd
fwait
push
out
sbb
sub
pop
outsl
lret
cmp
in
sbb
fstpt
or
adc
xor
inc
dec
mov
fildl
punpckhwd
sbb
xchg
adc
sub
and
fildl
bound
in
dec
dec
rcll
pop
xchg
aam
decb
in
xchg
dec
lret
sbb
dec
dec
dec
stc
jnp
mov
push
push
xor
fwait
icebp
dec
cmp
sub
aaa
xor
mov
mov
add
dec
lcall
mov
mov
inc
pop
es
pushf
push
add
jle
mov
add
cmp
test
sbb
sbbb
add
mov
cmp
pop
xchg
daa
push
add
push
cmp
fsts
sub
inc
jno
ficomps
jae
inc
xor
adc
dec
jae
imul
dec
icebp
cmp
sub
jno
arpl
and
xor
dec
jno
icebp
pop
mov
adc
sbb
ret
test
pop
pop
movhps
push
and
lods
out
fldt
jl
adc
jge
sub
in
mov
inc
pop
dec
mov
cs
mov
mov
decb
sbb
outsl
repz
xchg
enter
cmpsb
int
cmp
or
jmp
pop
cmp
xor
inc
inc
in
xchg
xor
leave
arpl
mov
push
mov
sar
and
test
daa
lods
lahf
movsb
jne
pusha
jns
dec
fs
sbb
in
xor
adc
xchg
cmp
push
push
fs
rcr
push
cli
add
mov
mov
fiaddl
pcmpgtd
cmp
cmp
cmovs
test
lods
call
test
inc
decb
pusha
test
loop
mov
push
mov
es
adc
jbe
push
ja
cltd
push
dec
dec
push
daa
push
int
jmp
fisttpl
ss
mov
cltd
sbb
dec
and
push
aaa
push
push
inc
mov
movsb
pop
test
jne
or
out
sbb
and
jno
ja
sbb
or
jb
rclb
xor
dec
sbb
adc
das
loop
repz
js
cmp
or
or
push
lods
fwait
jecxz
pushf
push
inc
in
xchg
bound
sbb
dec
mov
xchg
stc
ret
push
fcomi
cmp
jo
pushf
cmp
loopne
jns
adc
outsl
stc
lds
sbb
mov
mov
lret
orb
push
xchg
addb
xchg
jl
jge
pop
mov
mov
xchg
mov
shlb
mov
outsl
nop
xchg
fildl
xor
and
mov
and
scas
push
jecxz
push
loop
js
dec
dec
jnp
and
push
cmpsb
jl
scas
cmp
push
je
mov
sbb
inc
adc
sbb
stc
cmp
push
js
rcll
insb
lret
ret
pop
frstpm(287
cmp
xchg
pop
xor
shll
cmp
frstor
bound
inc
and
fisttpl
cmp
scas
inc
dec
mov
jno
sub
outsl
je
jo
jae
sbb
clc
push
sub
dec
addb
cmovs
sub
mov
insl
adc
sub
inc
push
and
ret
js
inc
fldcw
mov
cs
dec
push
inc
daa
or
mov
mov
rol
mov
jp
stos
shrl
js
adc
xorl
fimull
stos
or
and
cmp
add
push
in
lahf
push
jl
loop
testl
mov
call
mov
dec
in
fwait
scas
jb
sbb
push
jle
push
outsl
push
pusha
adc
push
jbe
test
mov
jbe
push
pushf
mov
xor
add
add
mov
cltd
dec
jns
ljmp
stos
js
add
or
adc
bound
add
add
cmp
repz
push
cmc
ret
jmp
jl
xor
jecxz
push
or
cmp
xchg
ss
inc
inc
mov
jg
cmp
js
outsl
lods
nop
push
jmp
pop
iret
fiaddl
sub
mov
mov
sub
inc
or
arpl
lods
mov
rorb
cmp
xchg
or
lock
subb
clc
mov
or
es
mov
lds
addr16
sbb
add
dec
xchg
pop
xor
cmc
jne
lret
es
mov
dec
cmp
rcll
adc
dec
and
cmp
xor
cmpsl
mov
push
dec
jl
pop
arpl
mov
jnp
mov
mov
dec
in
xchg
loop
jecxz
push
dec
dec
inc
lods
jl
leave
mov
adc
add
cmp
cmp
test
sub
cs
aam
dec
rcpps
xchg
js
jl
bound
adc
pop
and
loop
cli
dec
dec
test
bnd
jp
mov
divl
xchg
cmp
aaa
push
lods
fwait
mov
mov
mov
xchg
mov
mov
cwtl
test
lcall
adc
jns
scas
xor
push
mov
mov
push
push
fucompp
xchg
mov
lret
add
sub
idivl
pop
add
mov
mov
lcall
repz
cmpsl
pop
sbb
mov
rcll
mov
sti
dec
cmc
roll
dec
and
inc
dec
jo
js
cwtl
dec
sub
cwtl
lea
inc
xchg
sbb
dec
mov
subb
lcall
mov
dec
or
fildl
xchg
pop
dec
int3
pusha
rorb
lahf
sbb
or
lock
adc
stos
shll
fstl
stos
hlt
loop
popf
add
mull
jp
cmp
and
inc
enter
push
jecxz
sub
inc
cmp
lods
sti
push
shl
ret
dec
roll
and
sub
adc
dec
mov
test
or
adc
xchg
xchg
inc
leave
dec
aad
stc
mov
push
xor
add
nop
je
mov
mov
sub
aas
in
call
call
jl
jp
pop
mov
cmp
fstpt
sbb
test
and
test
jle
shll
xor
dec
mov
lret
mov
aad
mov
outsb
dec
es
sbb
out
jmp
mov
xor
push
addr16
push
dec
push
jns
or
pop
cmp
mov
pop
xchg
jae
fistl
je
push
mov
add
sub
icebp
cmp
dec
mov
sahf
pop
or
lods
dec
or
push
inc
dec
imulb
mov
lret
push
sbb
dec
dec
mov
std
mov
push
or
dec
inc
xchg
cmp
repz
pop
adc
xor
push
ss
das
inc
dec
pop
shrl
sbb
add
xchg
fwait
cli
mov
repnz
repz
es
dec
mov
pop
les
xor
add
mov
cmp
or
inc
arpl
pop
lret
scas
lahf
sti
or
out
xor
jp
inc
daa
mov
aaa
testl
loopne
cmp
push
or
mov
dec
mov
test
outsb
out
loope
lods
aad
xchg
xchg
jg
les
inc
out
pop
pop
inc
loope
out
jnp
pop
jmp
sub
sbb
sti
mov
inc
shlb
dec
jmp
xor
mov
or
mov
dec
out
cltd
loop
xor
sarb
lods
push
rcll
push
test
stc
cmp
shl
cmp
lea
ja
or
xor
notl
mov
movsl
test
out
jmp
inc
sti
fistl
xlat
aaa
mov
outsl
call
cli
xor
jb
mov
lret
je
lret
or
pop
dec
inc
fcmovnbe
lcall
outsl
inc
jmp
dec
out
in
xor
fdivrs
jg
imull
dec
dec
call
or
inc
pop
leave
xchg
adc
xchg
sbb
mov
pmulhuw
mov
mov
cli
daa
test
nop
xor
sti
rcrl
cs
pop
push
clc
outsl
jl
mov
lea
jmp
xchg
outsl
inc
add
lret
mov
aas
push
mov
cmp
add
dec
orl
mov
fsubrs
adc
mov
lea
movb
enter
pop
jmp
dec
xor
lods
inc
sub
mov
add
fistl
sbb
ljmp
fimull
and
lcall
xchg
aaa
lcall
sbb
std
stos
out
das
sbb
push
mov
aad
or
stos
arpl
loop
add
in
push
add
rcll
jmp
stos
xor
or
add
int
jg
lret
lret
mov
jmp
inc
aad
push
mov
mov
mov
out
mov
lret
sbb
pop
push
sub
lahf
cmpsl
imul
push
pop
mov
mov
int3
call
push
jo
xor
lret
lods
sub
adc
xchg
dec
aaa
subb
leave
ficoml
adc
cmp
aad
mov
adc
cwtl
mov
pop
cmp
xchg
push
xchg
pop
cmp
cli
divb
jb
jb
lahf
mov
test
xchg
adc
cmp
lea
mov
call
mov
mov
mov
out
mov
adc
adc
in
pop
sub
cmp
dec
lods
dec
mov
jne
fsubp
cmp
dec
addr16
inc
xchg
adc
popf
dec
jb
push
roll
mov
adc
push
push
ljmp
loop
mov
push
dec
jmp
lahf
daa
xor
cli
fistl
fdivs
lods
mov
or
js
sbb
cmp
xor
mov
cmp
sub
xor
push
in
jmp
repz
sbb
inc
cmp
push
dec
pop
sbb
pmuludq
push
push
inc
insb
arpl
daa
xchg
fwait
lods
ret
cmp
stos
dec
adc
fimull
adc
jle
xor
lods
adc
cmp
je
es
and
pusha
mov
xor
and
cwtl
mov
jg
dec
push
roll
dec
xchg
clc
mov
sub
pop
xchg
cmp
sbb
fisubrl
xchg
cli
sub
call
sub
xor
mov
pop
out
cmp
out
cmp
or
ret
stos
xor
lret
jmp
or
sub
dec
dec
push
xchg
cmp
xor
xchg
fidivrl
xor
push
pop
xor
pop
lods
sbb
daa
lea
call
fcoml
daa
js
sti
arpl
pop
xor
and
fsubs
repz
sbb
xor
lret
test
rorl
cld
mov
pop
movsb
neg
mov
dec
xor
and
jmp
pop
pop
out
cmp
xchg
in
sub
jae
sub
xor
ret
dec
sbb
lahf
enter
mov
lret
adc
dec
sbb
dec
pop
addb
xor
mov
out
fcomps
sub
push
push
add
push
push
imull
mov
into
fsubs
push
out
mov
ljmp
push
roll
or
push
mov
sbb
xor
inc
dec
call
push
sbb
xor
lret
lods
mov
adc
push
jbe
add
inc
sbb
and
nop
cs
shll
outsl
mov
imul
testb
pop
cli
and
mov
imul
mov
mov
nop
stos
push
imul
fldt
push
mov
pop
cmp
adc
pop
jmp
sbb
popa
out
jp
adc
dec
cmpsl
xchg
lods
lret
and
addr16
or
jae
data16
sub
dec
pop
push
fs
fsubrs
imul
jnp
mov
jnp
mov
fisubrs
fsubrl
pop
lods
add
aas
cs
nop
js
xor
dec
mov
or
in
sub
jge
push
repnz
push
mov
pop
fwait
out
js
xchg
inc
mov
rclb
dec
js
and
stc
cld
xor
adc
pop
rorl
fidivl
mov
sbb
imul
fisttpll
cwtl
xchg
cs
sahf
mov
mov
in
mov
pop
xchg
outsl
push
xor
dec
mov
mov
loope
mov
enter
mov
and
pop
sub
test
push
ljmp
in
inc
or
xor
cwtl
mov
hlt
clc
add
ds
lods
push
cmp
push
or
mov
in
adc
pop
xchg
mov
cwtl
out
lret
inc
dec
push
xchg
and
ljmp
adcb
cs
loop
pop
rorb
sahf
mov
sbb
and
inc
sti
lods
sbb
sahf
sbb
sub
cmp
cmp
push
sub
sbb
mov
imul
rcll
lock
mov
out
add
xchg
ficoms
mov
repnz
aad
pop
push
cmc
xchg
pop
push
add
pop
outsl
fsub
data16
ja
adc
dec
lret
lret
js
push
xor
iret
inc
xchg
fcmovb
and
xor
push
rcl
cli
mov
dec
sbb
and
into
jmp
push
lods
nop
or
mov
push
mov
pop
xchg
cmp
dec
movsb
xor
dec
jl
enter
cmc
cmpl
xor
aam
or
dec
sbb
aam
push
pusha
popf
not
mov
push
push
mov
adcl
xor
cmp
push
jns
sub
cmpb
mov
sbb
repz
mov
jnp
cmp
repnz
mov
xor
ror
jns
adc
test
push
mov
shll
dec
cmp
ss
adc
and
jmp
dec
sbb
sub
sti
push
rcl
mov
cli
adc
push
xchg
inc
xor
jae
test
xor
orb
xor
and
jnp
dec
aas
sub
push
push
mov
sbb
or
dec
sbb
daa
popf
add
fwait
mov
cmp
fistpl
into
cmp
dec
mov
adc
sbb
cmp
and
outsb
pop
dec
pop
daa
mov
adc
adc
shrb
mov
cmpsl
mov
jmp
mov
push
mov
pop
dec
xor
lcall
mov
mov
jnp
jmp
lret
cmp
xorb
mov
jbe
pop
repz
pop
fidivrl
add
jp
mov
in
int3
and
scas
xchg
ja
and
lcall
xlat
lret
nop
add
xor
lret
repz
pop
lret
jg
frstor
push
xorb
fwait
xor
call
mov
int
xchg
pop
cmpsb
mov
pop
jecxz
loop
xchg
emms
sbb
add
stos
jnp
sahf
jmp
mov
fcmovb
sbb
stos
mov
mov
sub
outsl
test
jmp
lods
pop
adc
repz
stos
jb
pushf
shrl
rcll
mov
rorb
call
inc
iret
sbb
scas
lret
sbb
mov
ror
aam
repnz
lock
arpl
jnp
xchg
cmp
sub
inc
sbb
sub
jecxz
ffreep
dec
jle
dec
dec
ret
cmp
push
aas
mov
xchg
outsb
mov
xchg
sbb
cmpsb
fwait
mov
cmp
xchg
mov
lret
loopne
pop
or
inc
fldcw
fimull
aas
jae
lcall
mov
jae
es
add
dec
dec
stos
out
xor
jbe
cmp
jbe
cmp
push
push
dec
jmp
cmpsb
rolb
incb
fs
sub
insb
lcall
sbb
cld
adc
lret
sbb
dec
cmp
imul
into
dec
mov
lret
xchg
xor
repnz
cmp
cli
fisttpl
push
sub
cmp
xchg
jbe
dec
pop
fldt
mov
cmp
lret
dec
inc
dec
popa
xor
mov
dec
inc
dec
jo
or
xchg
ss
cmp
cmp
jnp
push
mov
dec
cmpsb
inc
popl
cltd
xor
xor
sar
xor
mov
xor
push
xor
ret
mov
dec
jp
mov
xchg
mov
lds
sbb
cli
arpl
fcomip
dec
xor
arpl
xor
dec
fimuls
lds
divl
mov
jbe
sarb
lcall
das
inc
adc
aad
push
scas
gs
popa
push
mov
icebp
lret
out
insl
mov
cs
pop
mov
inc
popa
push
icebp
icebp
pop
loopne
pushf
addr16
push
push
push
push
mov
das
inc
aaa
inc
ds
jno
nop
daa
lret
adc
lea
xorb
mov
xor
inc
dec
sahf
jnp
jb
mov
mov
add
mov
mov
push
push
mov
fsub
push
or
dec
jl
ror
adc
sbb
or
pop
push
scas
or
sbb
and
out
test
mov
jnp
xchg
mov
scas
xlat
mov
add
mov
repz
adc
dec
inc
lret
adc
seto
leave
add
fildl
aaa
ficomps
or
lcall
ljmp
adc
pushf
dec
and
flds
sahf
and
push
popf
jl
push
arpl
sub
cmp
mov
test
or
mov
jmp
loopne
inc
dec
fidivl
sti
shll
ret
xor
lods
push
xor
mov
test
inc
mov
mov
push
and
adc
es
in
or
popf
shl
sub
add
or
fucomp
shrl
imul
mov
mov
decl
stc
sbbb
or
stos
sbb
fdivs
add
repz
pop
push
pop
inc
daa
inc
sub
fnstcw
stc
sub
addr16
push
imul
lcall
cmpsb
jle
push
dec
inc
aam
lods
shrb
mov
mulps
cmp
imul
scas
inc
add
sub
movsl
shll
rcrb
scas
inc
fmulp
lcall
mov
mov
cmpsl
dec
push
loope
cmp
xlat
lret
pop
xor
or
sbb
sub
xchg
fwait
xor
rcrl
xor
negl
fistl
cmpb
push
cmpsb
mull
xor
adc
lret
pop
cmp
dec
sbb
lret
adc
sbb
rorl
ret
fwait
and
push
push
fmuls
adc
xchg
jmp
jmp
jmp
jmp
out
and
push
sbb
dec
cs
push
gs
xor
inc
xchg
movl
inc
xchg
movsb
aas
adc
xchg
cmc
mov
or
mov
xchg
fwait
pop
aaa
mov
pop
ja
mov
push
or
jno
es
nop
rdpmc
lcall
xchg
push
aam
lret
hlt
inc
std
lcall
enter
sti
push
or
mov
pop
jecxz
mov
xlat
xor
dec
xlat
or
mov
sbb
push
dec
mov
fs
int3
and
sub
lahf
iret
stos
les
dec
push
stos
cmp
cmp
out
or
push
sbb
dec
aaa
setns
jnp
pop
mov
xor
cmp
add
xchg
fildl
xchg
mov
pop
jne
or
fcmovnbe
add
sbb
pop
push
daa
gs
push
mov
in
iret
jmp
adc
lret
xor
dec
fldcw
fistl
sbb
dec
adc
fsts
or
mov
sti
push
imul
dec
or
cmp
push
out
adc
lret
jmp
push
jp
stos
dec
jbe
ss
sub
push
sarl
adc
in
mov
repnz
mov
inc
pop
sub
cmp
push
dec
cmp
jbe
adc
ja
sbb
push
enter
sbb
nop
push
jecxz
or
push
push
dec
bswap
leave
and
push
jbe
xlat
sti
rol
fcompl
cmp
lds
cmp
fsubrs
pop
bound
mov
lock
fnstsw
push
cmp
ja
sbb
fwait
les
ficoml
aad
xor
inc
jmp
lock
pop
fimuls
push
or
push
xchg
aad
sti
sub
aas
mov
jnp
xchg
adc
mov
push
jmp
push
xor
inc
fildl
ja
push
out
add
push
xchg
dec
dec
cmc
cmp
sti
lret
inc
cmp
inc
shll
cmp
ss
xor
wrmsr
jmp
sub
add
imul
sbb
sbb
mov
sti
xlat
les
dec
jmp
rorl
cmp
fidivl
imulb
stos
xchg
sti
cmpsb
lret
fstpt
lcall
inc
fwait
xor
les
cmp
fisttpl
dec
sarl
push
mov
loope
sbb
mov
iret
mov
and
lret
sti
cmp
sub
push
insb
push
dec
or
push
mov
scas
dec
mov
push
xlat
dec
jb
rcll
push
push
cmp
pop
inc
push
stos
push
push
inc
jo
imul
or
sarl
dec
dec
aas
push
pusha
jnp
push
popf
dec
mov
push
xor
adc
push
enter
or
ss
adc
push
jmp
sbb
sub
cmp
dec
cmp
push
jp
mov
lret
or
sub
push
mov
mov
cmp
dec
mov
xchg
enter
adc
cmc
notb
in
mov
fcomi
mov
rcrb
stos
sti
lahf
cwtl
xchg
call
pop
sub
sbb
pop
inc
stos
xor
test
mov
jmp
dec
jecxz
repnz
std
sub
adc
aam
xor
and
mov
cmp
add
mov
nop
ss
pop
lahf
xor
adc
sbb
cmp
and
pop
sbb
cli
or
mov
lcall
fwait
test
inc
rorb
sub
mov
cmp
push
mov
fwait
cmp
xchg
cwtl
pop
cmp
dec
das
shl
mov
lcall
jmp
out
and
inc
and
inc
sti
mov
pusha
ds
push
cmpsl
imul
mov
dec
stos
sub
ljmp
mov
fdivrs
lret
or
and
ret
aaa
sbb
fwait
lret
mov
sti
sub
dec
aaa
cmpsb
and
sub
out
dec
lcall
or
and
lret
xor
std
xor
stos
dec
xor
into
shrl
lcall
cmc
loope
stc
xlat
jle
cmp
cmp
pop
push
push
pop
add
pop
ljmp
sbbl
sub
lds
xchg
ljmp
inc
push
xchg
sti
jae
arpl
push
cwtl
mov
mov
sbb
mov
cmp
mov
dec
mov
pop
ja
imul
mov
mov
jno
sub
sub
mov
cmp
sbbb
xor
mov
xchg
push
pop
or
pop
or
xchg
and
mov
dec
push
test
mov
add
fistl
mov
shrl
mov
lcall
ja
mov
fucomi
sahf
xlat
jnp
into
lret
mov
aaa
fcomi
imul
adc
test
iret
fldpi
pxor
mov
fnstcw
fistl
add
push
lret
scas
xor
in
aam
dec
in
sub
sbb
cmp
fldt
daa
movsb
mov
pop
xor
push
inc
or
pop
push
pop
lods
dec
jp
leave
cmp
push
and
push
ret
jle
sbb
cmp
jle
push
xor
cmp
pop
js
ds
cmp
cwtl
cmp
pop
sbb
push
jge
pusha
outsb
inc
dec
add
mov
inc
push
cli
je
inc
sbb
push
mov
jg
xor
and
icebp
xlat
cmp
push
jb
pop
pop
imul
mov
enter
fdivrl
push
xchg
mov
ret
dec
dec
dec
sahf
mov
pop
cmc
std
sbb
into
xor
pop
dec
mov
idivl
fildl
pop
xor
push
shlb
pop
adc
ja
fwait
xor
xor
fbstp
push
bound
bound
bound
stc
lds
bound
bound
xchg
xor
out
out
lea
or
into
mov
insb
mov
cwtl
add
jmp
pop
mov
icebp
mov
jae
outsl
cmp
shlb
pop
je
dec
mov
and
and
add
push
int3
out
mov
mov
sub
adc
push
mov
sbb
push
fsubrs
push
cmp
sbb
mov
arpl
pop
pop
in
pop
int
gs
dec
pop
or
pop
je
pop
and
jg
and
and
pop
ficomps
sbbb
dec
or
push
dec
int
lea
int3
jns
and
ja
enter
test
cwtl
in
mov
js
push
enter
test
cwtl
inc
mov
js
push
pop
outsl
and
adc
jb
push
js
ja
mov
dec
addr16
pop
and
sbb
test
arpl
push
add
mov
sbb
pop
mov
iret
pop
xor
pushf
int
mov
inc
ja
mov
imul
pop
arpl
pop
loop
inc
pop
push
pop
cmc
pop
aad
xchg
pop
cmp
pop
lock
rcrb
and
and
sbb
pop
ss
stc
sbb
sub
aaa
fimuls
or
bound
cmp
mov
insl
mov
aam
add
or
push
mov
xchg
mov
dec
push
xlat
ja
mov
lcall
enter
xchg
jae
outsl
shrb
lcall
pop
xchg
inc
sub
xor
and
inc
js
push
jae
outsl
pop
imul
scas
arpl
pop
icebp
pop
popf
pop
test
pop
inc
pop
sbb
and
jae
and
and
push
inc
je
je
je
je
je
js
outsl
xchg
mov
aas
cmp
scas
jb
push
bound
bound
imul
jecxz
fnstsw
addr16
fstpt
lret
mov
fwait
dec
mov
sbb
cmp
nop
jo
adc
xor
fwait
aam
mov
xchg
outsb
je
je
je
je
je
je
je
je
je
js
pop
xchg
fisttpl
stos
jb
push
in
xchg
pop
into
dec
jb
adc
mov
jp
jb
push
in
mov
mov
mov
cmp
je
je
je
je
je
je
je
mov
push
nop
jmp
jg
in
imul
sbb
sub
xlat
cmpb
arpl
pop
aaa
pop
test
push
frstor
fisttpll
ffree
cmp
mov
or
imul
stos
adc
dec
mov
xchg
adc
int3
je
js
addr16
sub
cwtl
out
hlt
xchg
outsl
mov
xchg
adc
std
je
js
arpl
xchg
jmp
pop
xchg
dec
out
lds
dec
mov
sbb
xchg
ror
mov
cwtl
dec
ja
xor
adc
loope
jecxz
fldl
mov
xor
mov
adc
pop
loopne
enter
test
cwtl
mov
ss
push
adc
jge
fs
ja
jecxz
xchg
mov
mov
inc
push
nop
popa
js
ja
enter
test
cwtl
jle
data16
push
jae
clc
cmp
mov
mov
sbb
lret
push
bound
bound
add
enter
test
cwtl
bound
imul
outsl
sbb
addr16
inc
pop
fcomps
pop
test
cwtl
pop
mov
orb
pop
aaa
dec
or
enter
test
loop
cltd
test
fistpl
std
xlat
lret
xor
ja
or
inc
lcall
cmpb
jnp
mov
fldt
cmp
or
jb
daa
imul
or
clc
mov
push
sub
imul
sbb
push
mov
cli
dec
push
xchg
mov
jmp
lret
jb
push
imulb
pop
lret
pop
dec
and
es
adc
xchg
fisubl
lcall
rcrb
repz
sbb
stc
je
je
je
je
je
je
je
mov
push
cmp
push
clc
push
enter
test
cwtl
push
push
cmp
aas
int3
mov
imul
dec
mov
nop
test
lcall
jge
and
lcall
mov
sbb
cmp
pushf
rep
dec
push
dec
mov
addb
inc
ficoml
dec
xor
sbb
cmp
ds
adc
mov
loope
sbb
mov
pusha
sbbl
scas
xor
dec
ret
filds
adc
or
sub
mov
dec
lds
xchg
jnp
inc
cmp
or
mov
repz
push
pop
or
pop
lcall
lcall
or
and
pop
icebp
sbb
sti
push
and
xor
cs
sbb
cld
fwait
xchg
mov
adc
add
popf
adc
mov
mov
enter
cmp
jge
xor
xor
dec
andb
loop
xor
xor
or
mov
lock
iret
sub
xchg
sbb
mov
loopne
scas
mov
lods
clc
push
mov
xor
cmp
or
push
cld
cld
jo
pop
jmp
pop
sub
push
jle
jmp
in
jns
dec
adc
push
dec
sub
sbb
inc
lret
cwtl
cmp
cs
push
loop
sahf
popa
iret
jecxz
xlat
xor
dec
cli
pop
push
into
clc
dec
rcrb
cmp
imul
imul
arpl
cld
fwait
cmc
test
in
or
sahf
sub
adc
push
xchg
fmuls
js
jle
sbb
cmp
mov
cmp
adc
lcall
push
fnstcw
pop
xor
jns
cmp
cmp
xchg
loop
ret
and
fwait
xchg
sbb
cmp
and
cmp
push
fimull
adc
dec
sbb
rcll
dec
pop
lret
adc
cmp
inc
cmp
fcmovnbe
push
inc
jnp
fsts
fcmovnbe
adc
inc
dec
or
cmp
push
adc
cltd
dec
or
notl
fmul
repz
out
sbb
cmp
jmp
mov
mov
cmp
cli
xchg
xchg
xor
lcall
mov
icebp
pop
ret
pop
iret
sahf
jns
xchg
scas
sbb
lods
loop
mov
cli
icebp
xor
sti
sbb
push
pop
xlat
pop
je
sbb
fisubl
lcall
fnstcw
enter
pop
je
sbb
fsubs
cwtl
jl
xor
xlat
sbb
cmp
sbb
sbb
gs
push
lcall
mov
sti
xlat
cltd
je
sbb
sbb
fcoms
xor
dec
fwait
nop
pop
fistps
sbb
ds
pop
je
sbb
fldenv
cltd
nop
pop
fistps
sbb
ds
dec
sub
sbb
sbb
push
or
fwait
test
mov
rcrl
popf
dec
enter
cmp
add
mov
sbb
xlat
mov
cwtl
lahf
imul
xchg
push
cli
xchg
cmp
cmp
push
cmp
xchg
dec
push
lcall
cwtl
jg
cmp
adc
jae
js
jecxz
sbb
mov
pop
fstpl
push
push
inc
dec
imul
jns
rorb
scas
fidivl
pop
push
mov
push
mov
jecxz
mov
sbb
or
dec
mov
xor
aam
xchg
cltd
xlat
dec
add
stc
fldt
sub
jb
fwait
dec
pop
xor
cli
dec
sbb
das
sbb
fwait
pop
sbb
dec
xchg
dec
jnp
pop
repnz
xor
out
fistpl
or
push
rcrb
js
sub
pop
fisttpl
dec
sbb
or
stos
jns,pt
fimuls
adc
dec
imul
mov
cli
mov
sbb
cmp
test
clc
fwait
cli
stos
ret
das
sbb
pop
mov
lret
nop
jp
dec
sub
cmp
sbb
xchg
pop
out
sbb
or
cltd
push
xor
and
cli
out
loop
cwtl
mov
xchg
sub
xlat
mov
aaa
daa
pop
aaa
push
jl
inc
add
push
or
jae
sbb
out
adc
sbb
inc
test
fidivrl
insb
push
int
pop
scas
xor
pop
push
jecxz
mov
mov
arpl
lcall
lds
icebp
cmp
xor
cmp
add
fcompl
popf
mov
inc
pop
mov
cmp
aad
pop
sbb
imul
add
push
pop
fmuls
es
push
psrad
jge
mov
adcb
or
push
pop
js
cmp
xor
pop
fwait
sti
sbb
js
popf
loop
adc
sbb
cmp
adc
enter
mov
sbb
sub
mov
or
jp
pushf
sarl
mov
sbb
repz
cmp
cmp
cwtl
dec
jno
inc
scas
xor
pop
or
dec
ss
rcrl
fistps
sbb
cli
sbb
inc
ret
fiaddl
sbbb
mov
mov
push
push
sbb
adc
mov
push
out
dec
jmp
sub
mov
xor
adc
xor
and
pop
mov
xchg
jnp
cmp
js
xor
movsb
push
dec
sbb
or
sbb
mov
sbb
dec
pop
or
repz
pop
and
cmp
push
aas
fbstp
xchg
cmp
xor
dec
mov
inc
addr16
mov
and
inc
add
rcll
or
mov
cmp
xor
and
dec
cmp
jo
jae
fcmovnbe
push
or
mov
fwait
loopne
outsl
mov
mov
out
sbb
fstps
xor
pop
xchg
cmp
cmpb
shrb
dec
mov
lret
pop
sahf
xchg
pop
dec
mov
rcrl
mov
sub
lcall
mov
add
sbb
sbb
mov
sbb
sbb
ret
mov
cwtl
mov
jns
xchg
mov
sbb
jae
xchg
jle
push
cmp
cmp
fdivl
cmp
idivl
sti
daa
jmp
das
int
sti
mov
ficoms
sti
dec
mov
cmpsl
sti
lret
dec
mov
sti
faddl
pop
adc
adc
cmc
aad
pop
mov
push
inc
sahf
lret
loop
sti
orb
in
push
or
cmpsb
not
fwait
not
stos
lock
outsl
xchg
call
xchg
and
push
xchg
adc
xchg
and
cwtl
out
rcr
lret
mov
add
repz
xchg
xchg
imul
mov
adc
fcmovu
mov
mov
sbb
fwait
mov
mov
and
and
or
adc
pop
sbb
sahf
inc
pop
inc
jne
leave
pop
or
cwtl
mov
dec
xorb
push
sti
inc
aas
ja
dec
mov
sti
pop
adc
imul
inc
jp
pop
shll
mov
mov
mov
sti
in
mov
push
out
daa
push
lcall
jg
fnsave
xor
or
sti
or
mov
and
daa
fwait
leave
mov
adc
sti
push
mov
sub
fidivl
in
in
rcrl
mov
adc
fbld
cli
fcmovne
mov
cmpb
push
jne
xchg
add
sbb
push
addb
mov
fwait
mov
adc
adc
add
sbb
testl
adc
call
pop
lea
sbb
or
insl
sbb
cmp
das
mov
sti
pop
pop
pop
jnp
stos
int
pop
testb
jae
xorl
cmp
mov
mov
sub
enter
jle
bound
movsb
cs
xor
lret
push
loop
inc
dec
xor
stc
enter
das
jns
mov
dec
mov
adc
push
mov
sub
mulb
cmpsb
mov
adc
pusha
jae
or
mov
mov
xor
pop
lods
cli
add
dec
fiaddl
repnz
and
cmp
stc
arpl
push
dec
mov
jle
repz
jl
fldt
mov
mov
imul
ficompl
or
dec
lods
sub
rcl
dec
fucomi
dec
jle
cwtl
adcb
mov
pop
popf
popf
mov
sbb
jecxz
mov
cmp
cwtl
adc
cmp
test
jp
dec
mov
xor
pop
push
or
inc
mov
fwait
jnp
fldt
dec
jno
and
pop
cmp
dec
adc
jae
dec
sahf
sub
in
push
fadds
sub
cli
lods
cltd
inc
mov
pop
enter
sbb
fistpl
xchg
pop
pop
ljmp
sub
cmp
mov
sbb
mov
jg
and
add
xor
sbb
push
xchg
dec
mov
int3
jnp
sub
mov
fwait
or
cmp
mov
stos
lahf
aad
jecxz
loope
adc
add
aas
mov
in
cs
mov
andb
push
cmp
adc
pop
fsub
stos
fwait
sbb
rol
push
sub
imul
jnp
fucomi
sti
iret
stos
cmp
mov
add
inc
add
sub
jg
push
sbb
sahf
mov
decb
xor
lock
jno
sub
test
push
mov
and
fistl
andl
mov
sub
xchg
imul
push
mov
stos
cli
or
xor
cmp
xor
add
mov
or
lret
mov
sti
adc
in
jne
mov
jecxz
leave
adc
pop
loope
loope
add
dec
jmp
dec
stos
mov
sub
push
xlat
lock
and
pop
fisttpl
sub
stos
jne
fwait
mov
jmp
xor
cmp
jnp
mov
adc
and
jnp
lahf
xchg
inc
leave
pmulhw
dec
inc
xchg
jmp
enter
lret
mov
ds
fwait
lahf
push
mov
jnp
add
jg
mov
sti
lret
sub
inc
ljmp
mov
out
repz
lret
xchg
jecxz
div
mov
mov
dec
mov
dec
or
mov
lret
cmp
push
fwait
jp
and
adc
or
and
xlat
aad
cli
rol
pop
call
stos
lcall
ds
mov
dec
mov
sub
push
sti
or
stos
jmp
aam
and
popf
jl
jae
iret
push
sbb
xchg
cmp
iret
sub
pop
sub
xchg
out
lret
xlat
cmp
lea
push
pop
movsl
or
aad
stos
jp
cmp
adc
dec
jns
pop
ja
sbbl
push
jmp
add
mov
fisubl
lret
or
adc
push
pop
mov
addr16
call
mov
sub
cmpl
outsb
push
pop
push
or
pusha
lcall
sbb
mov
sbb
pop
dec
or
mov
dec
xchg
lret
xor
pop
pop
jg
sbb
nop
jnp
mov
inc
push
pop
sti
sub
cld
outsl
lret
pop
test
in
fistpl
inc
xor
cmp
in
inc
push
mov
ss
dec
cmp
sbb
in
xor
aas
mov
cmp
dec
jmp
mov
fldenv
roll
dec
sub
jl
push
add
dec
outsb
pop
dec
in
push
ret
or
adc
pusha
lret
insl
daa
lea
jp
inc
sbb
dec
push
mov
push
sbb
aad
lcall
mov
jae
mov
cwtl
test
iret
lcall
stos
push
and
push
outsb
dec
scas
mov
cmp
jae
push
jge
pop
xor
push
sbb
push
sub
not
xchg
mov
sbb
out
bound
iret
push
pop
cmp
pop
mov
mov
imul
push
out
dec
pop
nop
mov
cmp
test
push
sbb
dec
push
fistpl
push
and
jp
jl
pop
inc
jnp
sbb
sbb
and
cli
jecxz
sahf
cmp
mov
push
in
loopne
mov
and
fwait
cmp
dec
lahf
cmp
fs
test
sbb
sbb
stc
shlb
je
sbb
repz
sbb
fbld
push
je
mov
sti
pop
inc
fisttpl
adc
out
xchg
cmp
push
push
jp
xor
xchg
clc
shll
jnp
dec
sbb
pop
or
lahf
fwait
inc
rcrb
stc
jecxz
mov
stos
xor
in
inc
jo
icebp
lret
cmp
push
sbb
or
call
and
cltd
inc
aam
sti
jp
mov
jno
rcr
adc
mov
jbe
sub
push
pushf
push
push
pop
fwait
sbb
je
mov
or
xor
addr16
jnp
or
fcomps
jae
jecxz
fstpt
xchg
enter
adc
jbe
mov
int3
sbb
adc
mov
pop
sub
sub
or
sbb
fidivrl
cmp
mov
cmp
stos
xor
xorb
push
mov
out
or
in
xor
and
sbb
jecxz
cmpsb
mov
lcall
push
cwtl
jecxz
int3
dec
nop
inc
mov
into
inc
jmp
sbb
sub
lahf
jnp
dec
dec
movsl
test
stos
dec
imul
in
inc
sub
sbb
pop
out
cmp
sbb
cmp
aad
and
jg
jge
andb
mov
insl
lcall
push
dec
test
mov
fistps
pop
movsl
dec
and
ret
fisubrl
sub
ljmp
inc
icebp
aaa
push
xchg
push
imul
cltd
or
sbb
enter
daa
test
adc
xor
mov
ret
in
add
adc
mov
pop
out
sbb
cmpsb
sahf
sub
aaa
lret
sub
mov
inc
cmp
dec
adc
test
xor
adc
fcomp
subb
cltd
and
sbb
dec
arpl
sarl
aam
repnz
sub
or
pop
adc
sbb
movsb
cmp
sbb
out
jp
mov
je
mov
adc
in
dec
in
xchg
test
mov
sbb
mov
outsl
in
push
stos
dec
js
push
sahf
xchg
cmp
into
lcall
sub
jp,pn
mov
cli
pop
and
pop
lods
outsb
ja
fsubr
or
jecxz,pn
sti
and
addb
mov
repnz
stc
adc
enter
out
mov
sub
leave
cmp
out
add
test
mov
mov
or
mov
clc
inc
jmp
and
repnz
decl
dec
cmp
stos
mov
out
fwait
cmp
pop
dec
ficompl
lret
ljmp
pop
movsl
sub
mov
cmp
lahf
fidivrl
inc
repz
aam
repnz
cmp
add
jecxz
adc
ja
push
test
adcb
and
push
test
in
sub
jecxz
or
sti
mov
cmp
mov
sbb
fisttps
inc
outsl
dec
dec
fldt
cwtl
pop
jecxz
stos
or
lret
subb
lret
sbb
jecxz
ljmp
aad
incl
mov
cmp
sbb
dec
hlt
jl
sar
popf
mov
stos
cmp
ret
out
dec
ljmp
and
push
out
xor
jnp
jno
cltd
pop
addr16
mov
out
pop
sbb
ljmp
fcoms
fwait
out
ret
and
jg
push
lret
pusha
lret
shll
add
adc
mov
push
popa
cmp
into
outsl
mov
jns
and
lret
lret
mov
cwtl
fstpt
push
adc
fldt
adc
or
pop
or
es
fwait
in
dec
shrb
xor
repz
add
jnp
inc
sbbb
pushf
xor
imul
dec
sub
into
mov
lcall
sarl
cltd
push
mov
dec
push
sbb
lods
pop
add
stos
jne
jp
aas
aam
enter
inc
and
dec
xchg
push
push
call
cmp
jnp
lret
fwait
push
inc
fcmovb
add
orl
xchg
jmp
cli
ljmp
cmp
sbb
lret
stos
mov
js
push
mov
imul
jp
push
imul
xlat
fs
nop
sub
sbb
and
and
ds
movsb
and
dec
sub
sub
stc
lods
cltd
rcrb
cmp
iret
dec
or
arpl
jp
inc
push
cmp
loop
sbb
je
leave
cmp
push
push
test
shrb
cmpsl
jne
int
popf
jmp
mov
sarb
fcmovnu
mov
push
xchg
fwait
push
jg
lock
jmp
mov
jl
xchg
enter
sbb
sbb
sbb
out
inc
stc
jb
mov
arpl
aad
mov
cmpsl
xor
cmpsl
pop
xor
pop
fsubrs
jnp
xchg
sbb
inc
mov
push
jp
fiaddl
cli
inc
cmp
cmp
adc
xor
roll
pop
xor
dec
stos
jecxz
out
fisubrl
sub
sub
mov
lcall
test
sub
pop
mov
or
sbb
shll
dec
and
sub
sub
mov
cmp
lret
inc
cld
or
or
and
test
add
sbb
mov
cmc
sbb
cmp
arpl
dec
sti
faddl
or
xor
lret
adc
out
add
das
xor
push
push
jnp
aam
sbb
clc
or
fisttpl
scas
xlat
mov
iret
jnp
jge
mov
es
or
mov
cmp
cli
rclb
rcrl
lcall
and
xor
scas
cmp
bound
lret
imul
add
pop
push
ljmp
jb
mov
pop
xchg
and
mov
xlat
sbb
push
ret
jns
push
dec
or
sub
pop
and
pop
sub
push
jnp
dec
cmp
pop
or
loopne
cmpsl
dec
cmpsl
mov
fcmove
orl
pop
jo
ss
mov
sub
mov
push
and
inc
mov
jp
cmp
subb
inc
cmp
xchg
sbb
popl
iret
int
push
stos
push
call
pop
dec
aam
ljmp
pop
lcall
mov
shlb
push
inc
cmp
stos
sub
mov
pop
cmp
sbb
mov
movsl
xor
and
cmp
lods
cmp
test
jle
lret
or
scas
fcomps
or
xchg
clc
and
testb
sti
fsts
push
ret
lret
xor
fwait
push
cmp
movsl
dec
sar
test
lcall
sub
dec
or
lock
and
mov
inc
push
cmpsb
pop
or
jmp
mov
divl
push
cmp
push
fnsave
xor
fcmovnb
mov
ret
out
adc
sub
cmp
push
mov
jno
mov
mov
cmp
rclb
or
sub
lret
aad
movsl
js
fwait
cwtl
test
js
xor
sub
lcall
sar
daa
rcr
mov
jns
push
dec
dec
pop
mov
push
in
mov
loop
aas
rolb
stc
adc
mov
ljmp
lcall
inc
sub
mov
mov
mov
loope
xor
daa
mov
and
sti
mov
loope
sub
and
fwait
lcall
add
push
ljmp
fimull
inc
out
cltd
add
add
sbb
xorl
clc
dec
fcmovne
or
push
cmpb
jnp
mov
xor
add
orl
movsl
sbb
add
adc
dec
jmp
mov
lret
xchg
jmp
sti
mov
lcall
es
es
repz
push
cmp
aas
out
add
sub
sbb
jp
mov
pop
cmp
sbb
stos
dec
sub
ljmp
mov
int
test
fsubl
push
cmpsb
xchg
or
mov
push
jbe
sahf
ljmp
xor
repz
pop
add
fcmovnu
in
mov
mov
ljmp
sbb
add
clc
push
sub
xchg
clc
pop
divl
jnp
imul
outsb
push
jmp
jno
sahf
cltd
push
aad
add
in
sbb
stos
jle
lods
stos
jge
sub
adc
out
int3
repnz
adc
or
sbb
hlt
lret
stos
out
inc
pop
mov
test
lret
lret
mov
stos
and
jecxz
cmp
dec
push
scas
fnstenv
mov
andl
or
adc
in
or
push
add
mov
pop
leave
xor
sti
ss
call
cmp
mov
adc
out
or
or
and
subb
cmp
es
shrb
mov
or
je
leave
dec
repnz
ljmp
cmp
sbb
sub
imul
jecxz
dec
fsubrl
cmp
int3
pop
scas
sbb
movsl
pop
pop
lds
cmp
cli
xchg
sub
aas
shl
dec
pushf
ljmp
shll
and
ret
jecxz
mov
pop
stos
popa
rcr
mov
dec
inc
fs
cmp
int3
aaa
push
mov
xchg
push
aam
xchg
dec
mov
push
jp
lods
xchg
mov
in
stc
insl
jae
insb
mov
sub
push
cmp
and
lret
into
push
fnstcw
cltd
inc
mov
xor
adc
xchg
insb
aas
cmp
add
ss
jp
stc
jg
mov
sbb
or
aaa
jbe
mul
lahf
or
mov
addl
fisttpl
sub
pop
addr16
sbb
ljmp
sub
cmp
cmp
mov
cmp
lret
ljmp
and
sub
mov
sarb
dec
push
adc
dec
rclb
inc
inc
xor
rcr
dec
insb
leave
mov
mov
inc
push
movsl
fwait
ljmp
jnp
mov
lcall
push
cmp
loop
jecxz
jnp
cli
fwait
cmpsl
jmp
out
sbb
inc
js
int3
dec
add
pusha
dec
sbb
inc
or
and
out
pop
leave
mov
mov
adcl
sbb
cli
fisubrl
lahf
scas
add
adc
out
repz
cmp
dec
sti
mov
mov
mov
sbb
in
lret
hlt
or
sahf
bound
aad
sarl
fisubrs
pop
inc
xchg
cmp
adc
jmp
adc
inc
cmpb
pop
into
xchg
repnz
shl
les
adc
dec
xor
aad
mov
push
fidivl
cli
out
add
pop
jo
adc
sbb
push
or
jmp
adc
pop
push
inc
and
sbb
or
stos
xor
xor
add
loope
rorl
xchg
movsl
and
inc
xchg
adc
inc
pusha
xor
pusha
push
pusha
or
sti
inc
adc
mov
adc
pop
es
cmpsl
xchg
popf
and
fcoml
inc
fdivl
pusha
pop
pop
adc
push
arpl
sti
adc
dec
mov
lahf
xchg
xchg
aas
jge
jl
adcb
pop
pop
xor
addb
mov
or
jns
or
xor
leave
sbb
and
movsl
sbb
fwait
lea
adcl
push
sbb
cmp
fsubrs
adc
cmc
dec
enter
leave
or
xchg
mov
xchg
jge
outsl
adc
push
and
adc
pop
pop
jns
or
imul
and
adc
mov
out
gs
es
mov
mov
icebp
adc
adc
repz
loope
xlat
inc
lret
mov
cmpsl
adc
jge
imul
xor
push
sub
push
inc
add
testl
mov
pop
lahf
dec
xchg
xchg
xchg
ja
pop
pop
dec
pop
inc
pop
xor
or
out
fnstenv
mov
pop
xchg
fsts
sub
pop
sbb
dec
sti
icebp
lcall
rcrl
xchg
xchg
and
xchg
pop
repz
adc
in
xlat
xchg
enter
scas
enter
test
jns
xchg
test
pusha
xor
or
sbb
push
pop
xchg
rcll
push
es
sbb
add
gs
push
xchg
inc
xchg
sub
mov
pop
std
and
jmp
add
pop
lds
xchg
test
add
sbb
and
js,pn
lcall
xor
cmpsb
and
pop
dec
jns
xchg
imul
pop
imul
mov
sbb
xchg
rcrl
or
adc
push
and
inc
jne
dec
mov
fs
fldt
mov
pop
xchg
or
pop
adc
pop
xor
pop
adc
aad
dec
divl
pop
adc
inc
leave
sub
push
jg
sti
push
fcmovbe
xchg
pop
in
es
push
dec
cltd
xchg
lea
jge
ret
pop
dec
pop
inc
pop
cmp
pop
push
sub
and
or
pop
adc
xchg
sbbl
fmull
ds
mov
out
xchg
cmc
sbb
or
inc
sub
pop
push
ljmp
xchg
and
or
fnstsw
adc
es
cmp
mov
push
inc
jno
mov
fs
fbstp
pop
aad
out
and
push
add
or
cmp
push
adc
es
adcl
pop
xlat
pop
jmp
ljmp
pop
pop
sub
and
or
xchg
or
sub
fbld
aad
shlb
mov
pop
nop
xor
cmp
inc
adc
or
or
adc
push
jmp
xor
out
jg
push
pop
pop
sub
es
adc
add
adc
adc
fstps
pop
add
push
dec
jne
add
push
in
sbb
rcrb
fistpl
push
jb
jecxz
jp
lcall
push
mov
mov
out
and
jae
pop
push
xchg
jns
arpl
adc
ja
push
js
or
inc
push
inc
mov
dec
es
sub
fisttps
or
lret
rcll
insb
insb
jo
push
mov
pusha
xor
loopne
lock
sbb
jae
bound
push
jo
insl
fildll
cltd
push
outsl
idivl
add
aas
fs
pop
push
stc
cmp
inc
insl
add
fimull
outsl
jns
gs
dec
sbb
ss
pop
jno
pop
dec
adc
insl
lock
push
inc
movsb
adc
gs
pop
arpl
jp
inc
fists
dec
data16
pop
jb
incb
insl
cmp
scas
sti
jno
dec
outsl
or
push
loopne
pop
adcl
xchg
xor
pop
jbe
pop
outsl
mov
in
push
rorb
outsb
sbb
hlt
push
fists
pop
jmp
mov
jmp
inc
popf
mov
lcall
shrl
or
jp
movsb
cmpsb
call
pop
in
aas
pop
in
add
dec
pop
andl
pop
xor
popf
aaa
sti
pop
jg
cli
xor
xchg
bound
pop
cmp
dec
aaa
pop
rcl
add
mov
int3
pop
rol
xlat
test
int
jecxz
mov
mov
or
add
sub
mov
mov
cmp
jae
jmp
adc
jecxz
and
xchg
dec
dec
add
ljmp
pop
test
pop
adc
icebp
bound
jno
mov
adc
sar
subl
and
dec
hlt
loope
mov
cmp
mov
rcr
js
push
dec
sbb
jns
add
push
mov
out
pop
pop
inc
in
std
hlt
test
inc
pop
subl
cli
or
ret
add
gs
xor
and
shrb
push
sub
push
ja
push
repnz
mov
fs
out
enter
int
mov
enter
push
bound
dec
insl
mov
sbb
clc
pop
push
fcomi
xchg
gs
mull
shll
push
lock
jp
push
lret
cmp
push
push
data16
pop
push
mov
xchg
push
pop
fisubl
xchg
pop
or
mov
shll
pop
loope
adcl
adc
push
test
adc
fcom
mov
int
mov
data16
or
jl
fldenv
pop
mov
cmp
pop
inc
pop
inc
cmp
xor
aas
ss
inc
jnp
add
mov
pop
mov
rcrl
rclb
iret
pop
cmp
mov
sti
pop
mov
or
cmc
or
add
test
loope
fldcw
push
roll
xor
cmpsl
cmp
pop
adc
icebp
inc
or
cmp
mov
sub
sarb
sahf
pop
xchg
call
xorl
jno
sub
rorb
push
jne
pop
icebp
push
dec
lods
pop
inc
sub
and
push
mov
push
cltd
jbe
mov
dec
add
pop
inc
push
jmp
push
push
adc
test
repz
repnz
pop
xchg
jne
mov
ljmp
les
sbb
push
dec
fucomip
jl
loope
jnp
dec
pop
int
sub
stos
adc
xorl
sbb
lcall
dec
test
fsubrs
add
push
or
mov
ficoml
push
pop
lods
pop
iret
sbb
push
test
sub
push
xor
int
dec
xchg
nop
jle
pop
pavgw
mov
push
jae
pop
mov
daa
add
sub
mov
cmp
sbb
inc
push
in
sub
sub
test
aam
ljmp
pop
mov
and
cmp
add
insb
adc
mov
roll
je
orl
imul
outsl
dec
arpl
dec
ss
and
daa
je
lret
jb
xchg
push
mov
test
ljmp
mov
fistpl
and
pop
pop
xor
pop
test
push
jno
cmp
pop
mov
sbb
stc
inc
jmp
cwtl
loop
into
mov
arpl
loope
cmp
fisttpll
jmp
pop
ds
add
out
sub
push
add
loopne
mov
addr16
cmp
mov
js
jmp
mov
sbb
cli
sbb
stos
xor
lods
fidivl
cmpsl
add
ret
call
bound
fiadds
xchg
scas
mov
imul
pop
iret
mov
movsb
pop
adc
sbb
loopne
xlat
loop
out
pop
or
not
jae
pop
bound
adc
lds
or
push
ret
xor
pop
mov
loope
scas
pop
add
push
mov
cmpl
xor
fstpl
xor
dec
js
xchg
inc
pop
add
adc
mov
into
cmp
pop
sahf
sahf
scas
stos
nop
pop
ja
jmp
and
mov
fucom
cltd
mov
adc
pop
mov
xor
ret
ss
movsb
into
or
hlt
aad
push
lcall
or
pop
scas
fldl
loopne
aam
icebp
in
push
dec
add
add
mov
mov
add
jmp
and
ret
mov
es
cmp
negl
addr16
scas
or
sbb
or
iret
sub
loope
pop
pop
mov
dec
popf
pop
hlt
inc
je
and
and
inc
add
leave
fcom
sbb
or
push
jb
mov
fisubs
inc
jno
jg
push
jge
rorb
xchg
sbb
nop
pop
adc
lcall
sbb
or
adc
lea
jmp
pop
inc
pop
rolb
xchg
push
adc
out
xorl
ret
loope
push
sbb
cmp
icebp
sbb
lds
cmp
stos
jecxz
cltd
btc
pop
sbb
rclb
fisttps
pop
mov
push
inc
add
or
or
and
arpl
pop
sbb
or
lcall
add
push
divl
enter
js
or
and
pop
aam
roll
add
jo
das
xchg
jbe
pop
or
or
stc
dec
cmp
loope
xchg
rcrl
or
push
stc
add
aas
std
gs
sarl
cmp
mov
pop
dec
add
push
push
cmpsb
sbb
jg
inc
mov
jp
mov
pop
pop
jno
cmpb
cmp
mov
pop
mov
mov
leave
xor
and
dec
xchg
vmread
std
pop
dec
mov
mov
loop
out
faddl
add
push
repnz
add
and
in
mov
pop
pop
pop
iret
jecxz
inc
xor
repnz
or
out
and
xor
xor
dec
adc
and
jecxz
and
cs
dec
fbld
add
shr
sbb
in
shl
xor
out
add
adc
dec
and
clc
mov
in
movhps
pop
and
dec
adc
inc
rcll
jle
jb
stos
or
out
pop
sub
adc
or
push
cmp
push
rorl
movsl
mov
outsb
sbb
repz
xchg
pop
loope
or
lret
jb
pop
pop
out
aaa
or
sub
es
xor
sub
sbb
pop
cmp
clc
idivl
xchg
xor
dec
mov
dec
es
sub
loop
push
imul
and
aaa
push
xor
inc
jb
insb
inc
lcall
sub
imul
and
das
push
loope
jecxz
pop
inc
in
and
push
imul
dec
inc
inc
pop
or
sbb
pop
cmc
adc
test
fisubl
pop
adc
cmp
add
lcall
iret
or
and
jb
in
xor
dec
cmp
push
mov
cmp
mov
popa
jg
gs
and
frstor
pop
fdivrl
sub
imul
je
push
jnp
mov
movsl
sbb
xchg
adc
jl
and
test
cmp
mov
loope
sub
dec
in
pop
out
push
popf
test
push
stos
pop
jo
lods
or
imul
bound
push
xchg
push
orb
outsb
dec
in
mov
shl
mov
sbb
ja
and
push
sbb
in
xorb
subl
fcoms
pop
and
add
addr16
pop
repz
cmpb
jp
jg
dec
and
movsl
mov
movsb
loope
push
outsl
adc
or
arpl
xlat
push
sbb
mov
daa
fisttps
call
or
mov
pop
test
jbe
inc
std
xor
call
dec
fmuls
cmp
jo
pop
jno
and
or
dec
inc
jns
loope
icebp
and
into
test
pushf
pop
mov
mov
orb
pop
jg
mov
icebp
xorl
mov
inc
cmp
pop
in
fs
test
pop
xchg
cmp
in
sbb
notl
ficoml
mov
movsb
fstps
mov
lcall
inc
ret
cmpsb
rcrl
test
pop
mov
push
pop
xchg
loope
pop
cmp
xor
xchg
pushf
and
cmp
mov
jns
xor
adc
xchg
aam
pop
xchg
movsb
lods
imul
mov
pushf
stos
rcrb
xchg
lea
addr16
lods
pop
jb
iret
dec
scas
cmp
sbb
lods
outsl
mov
loop
nop
adc
sbbl
loope
movsl
std
in
mov
vmovddup
pop
and
mov
mov
lret
ds
into
push
mov
fwait
aaa
lods
pop
addr16
xor
push
add
stos
pop
enter
test
lds
adc
pop
ficompl
and
sbb
sbb
aad
shll
in
sbb
loope
mov
push
mov
testl
in
xchg
mov
imul
jecxz
lret
movsb
push
cmpsl
or
xchg
fstpl
sbb
fdivs
enter
ljmp
out
addr16
or
xor
pop
loope
push
in
jge
dec
in
or
fxch
ljmp
jmp
pop
ret
in
sti
jns
pusha
addb
jno
fucomp
lea
or
insb
pop
cmc
lods
adc
cltd
mov
mov
pop
jecxz
hlt
cld
cmp
sahf
repnz
in
std
mov
cli
incb
pop
fcmovnbe
add
roll
cmp
ss
insb
pop
shrl
sub
push
inc
pop
pusha
movsb
imul
sub
push
adc
clc
gs
dec
divl
cmp
sub
cmp
push
cltd
pop
inc
add
data16
push
dec
pop
das
xor
adc
pop
in
negl
pop
xchg
xchg
lcall
jg
pop
rcrb
sub
pop
push
or
pop
inc
ss
scas
mov
shll
adc
pop
push
jg
push
push
mov
cmp
xchg
das
sub
outsl
pop
add
lahf
inc
ds
dec
fldl
rol
lods
xchg
pop
adc
or
mov
pop
fs
pop
pop
xor
lcall
push
mov
add
out
lock
sarb
pop
lahf
mov
cmp
xor
or
int3
xchg
mov
cmp
out
mov
hlt
icebp
sub
out
filds
filds
xchg
pop
cltd
xor
xor
fistpll
pop
dec
pop
dec
add
cli
aad
stos
or
ds
scas
int
or
es
sbb
cli
icebp
call
xchg
dec
add
cmp
xor
int
das
pop
pop
jge
xor
push
dec
outsb
jmp
mov
push
xor
ljmp
bound
pop
pop
xchg
data16
dec
add
push
aam
popa
ret
pop
out
adc
jp
outsl
std
add
cli
sub
cmpl
popa
pop
pop
dec
adc
mov
movsb
jge
add
aam
pop
sahf
popa
jnp
test
push
lcall
add
pop
out
sbb
pop
dec
mov
pop
bound
mov
popa
jle
pop
pop
lods
aad
rcrb
adc
int
pop
fs
pop
sbb
or
inc
fsubrs
add
push
cmp
mov
xor
arpl
ljmp
push
movsl
jge
mov
cltd
xchg
xlat
test
mov
out
pop
pop
jecxz
or
push
add
andl
mov
in
cmc
pop
leave
inc
inc
lret
mov
pop
xchg
popf
test
add
repz
mov
jno
insl
cmp
add
pop
pop
cs
repnz
or
mov
add
fmul
popl
xor
and
inc
mov
jb
pushf
add
in
pop
orb
loopne
jge
lds
push
push
es
stc
js
repnz
in
pop
push
pop
es
insl
push
imul
pop
or
mov
pop
out
sbb
mov
cli
mov
pop
pop
imul
xor
test
pop
movsl
lods
mov
pop
cmpsl
cmp
sbb
xchg
leave
inc
push
push
jno
outsl
outsb
mov
pop
adc
es
test
mov
ret
mov
vpacksswb
in
sub
pusha
push
inc
rorl
pop
jo
inc
or
nop
mov
push
les
loopne
out
std
add
and
fistpl
sbb
inc
inc
inc
sbb
pop
addr16
mov
or
mov
push
jmp
pop
cltd
icebp
insb
sub
out
jae
pop
bound
enter
sbb
inc
mov
sub
outsb
inc
or
maskmovq
fsubs
pop
jg
pop
pop
aam
push
xor
call
imul
orb
pop
pop
ss
rdmsr
sbb
lahf
pop
or
mov
stc
aas
add
pop
sbb
inc
jo
lret
sysret
add
xchg
pop
adc
pop
dec
mov
es
fstpt
pop
add
cmp
pop
sbb
cmp
pop
test
addr16
leave
arpl
lods
pop
cltd
loopne
push
call
fsts
push
pop
push
add
add
jl
lds
mov
add
cli
cwtl
cmp
push
push
add
aad
mov
cmpsb
cmc
popa
and
testl
mov
addr16
outsl
int3
jge
movsb
pop
aas
shll
pop
lret
std
pop
xor
mov
xchg
sbb
inc
pop
xor
add
cwtl
inc
pop
fwait
xchg
mov
inc
pop
dec
in
or
ljmp
rcrl
add
or
rcrb
outsb
dec
outsl
push
cmp
in
or
xor
sub
andl
adc
cmp
ret
cmp
pop
adc
js
mov
addr16
push
push
xor
pop
jae
push
pop
dec
xor
aam
lds
loope
cmp
xor
add
mov
push
jecxz
xor
xor
pop
dec
nop
pusha
into
cmpsl
inc
adc
pop
bound
cmp
inc
or
cwtl
lret
pusha
in
dec
mov
roll
sbb
sub
adc
pop
pop
pop
push
insb
out
push
bound
out
xlat
dec
xor
pop
push
imul
push
pop
sub
or
and
inc
pop
imul
addr16
rcrl
sub
lods
push
jb
xor
pop
leave
addr16
lds
mov
pop
pop
inc
outsb
push
sbb
xor
jns
sbb
sbb
xor
popa
pop
push
pop
addr16
movl
mov
stc
push
mov
shrb
fs
fcoms
add
pop
mov
pop
in
popa
push
cltd
jae
xchg
stos
cld
add
mov
call
pop
gs
cmp
push
cs
pusha
fmuls
dec
and
adc
or
push
int3
sub
test
jne
inc
mov
push
xchg
mov
xchg
and
add
insb
push
repz
ret
cmp
stos
pop
stc
jmp
jo
dec
dec
popa
or
int
fmuls
sbb
cmp
mov
inc
pop
cld
jecxz
fstps
sbb
aaa
aas
stc
and
or
xor
mov
dec
imul
aaa
insl
pop
adc
mov
mov
stos
cmpsb
mov
bound
jne
pop
mov
enter
push
mov
push
push
push
stos
enter
pop
or
mov
push
mov
loop
jns
sbb
enter
cwtl
xchg
inc
push
mov
pop
aad
cltd
cmpsb
enter
js
cwtl
cld
pop
xor
jp
and
mov
push
jmp
mov
loopne
pop
mov
add
pop
scas
stos
iret
fidivs
lret
movsb
sub
popa
dec
fists
mov
pop
rolb
stos
mov
scas
dec
aas
jo
hlt
ficompl
mov
fistl
pop
pop
sbb
or
jnp
push
ds
mov
stos
cmpsb
outsl
stos
push
pop
or
dec
mov
pop
pushf
addr16
lds
add
push
xchg
jne
repnz
pop
jb
into
arpl
repz
jmp
xor
sub
shll
jae
pop
jno
hlt
call
pop
cld
in
and
pop
or
loop
or
test
adc
and
sbb
loope
inc
fadd
or
mov
lods
push
adc
loop
or
rorl
cmpsl
popa
inc
pushf
mov
sbb
scas
or
sub
push
je
jne
addl
or
gs
cltd
or
and
mov
adc
pop
jle
xchg
add
aad
or
popa
stc
adc
inc
cmp
sub
addr16
or
cmp
loop
shufps
cmp
mov
das
push
mov
or
aaa
mov
xchg
ds
js
adc
rcrl
lret
icebp
xorb
jno
out
pop
sub
fucom
xor
sub
mov
cmp
jb
popf
movsl
pop
das
adc
xchg
and
inc
cmp
rcll
leave
es
maxps
or
sub
dec
jmp
sub
dec
fnstenv
dec
inc
cmp
leave
or
jl
jl
jl
jl
lcall
or
adc
loopne
sbb
jp
pop
push
jge
test
mov
adc
outsb
add
js,pt
inc
inc
inc
push
dec
jmp
push
jns
dec
or
test
push
pop
dec
dec
push
cmovbe
ficomps
mov
adc
popa
out
pop
jno
sbb
outsb
jne
push
mov
pop
ret
bound
inc
pop
gs
pop
mov
xchg
push
push
jl
pop
ret
loopw
or
and
or
inc
sbb
push
cmp
add
cmp
movsl
and
outsl
adc
mov
xor
mov
or
add
mov
les
imul
test
jmp
cmp
pop
dec
cwtl
pop
pop
ret
pop
fldenv
xchg
pop
stc
fisubrs
fcomip
mov
imul
mov
outsl
jl
push
mov
xchg
pop
jns
push
xchg
enter
xchg
add
xchg
cli
jle
xchg
ret
fwait
sarl
mov
mov
jmp
jle
dec
mov
or
iret
pop
adc
dec
sbb
or
int
xor
and
adcl
push
adc
inc
out
push
sbb
dec
sbb
andb
push
and
test
or
xor
push
stos
mov
data16
or
xchg
push
js
in
pop
push
icebp
jg
jne
test
pop
push
jp
test
sub
loop
inc
pop
and
rclb
xchg
imul
or
cltd
in
pop
popf
or
jno
adc
xchg
jecxz
jns
ljmp
mov
out
mov
negl
xchg
cmpsb
pop
std
push
je
sbb
pusha
adcb
nop
les
push
mov
mov
pop
xchg
in
ljmp
xchg
test
mov
jnp
cmp
stos
js
popf
and
xchg
popa
cmc
cltd
lahf
cmp
or
lods
bound
mov
pop
jb
pop
sub
mov
mov
mov
mov
pop
scas
test
cmp
cmp
mov
pop
sub
adc
sbb
sub
push
pop
push
mov
int
jecxz
ret
mov
les
sbb
pop
or
mov
and
shrl
mov
xchg
enter
iret
or
out
loop
rcl
loope
pop
dec
rolb
sub
fisttpl
add
fstps
int
into
sbb
outsl
xor
xor
test
and
ret
xchg
push
es
js
sbb
ficoms
fld
loopne
push
push
dec
jmp
aam
sbb
adc
loop
aad
jo
fdivrs
pop
lock
sbb
add
fsubr
or
fsubr
mov
pop
in
cmp
jae
vpaddsw
jecxz
out
sbb
lcall
in
repz
or
and
pop
xor
stc
or
cld
ret
icebp
pop
pop
xchg
ss
popl
push
ljmp
sbb
inc
adc
or
int3
pop
add
mov
cmp
inc
sub
pop
cmpsl
mov
pop
pop
insb
add
lods
adc
xchg
test
sub
aaa
pop
inc
test
rcr
xchg
push
push
mov
mov
fndisi(8087
adc
adc
jb
pop
ss
aaa
and
ds
leave
int
int3
pop
lret
mov
adc
gs
cmp
push
mov
or
mov
out
dec
cmc
in
fildll
popa
arpl
outsl
fucomi
or
cmp
cli
and
xor
idivl
pop
std
loope
cmp
add
mov
mov
add
pop
inc
and
repnz
pop
aas
sub
jbe
pop
xor
xchg
or
pop
mov
idiv
pop
in
lret
and
mov
pop
cmp
add
push
inc
push
pop
sarl
enter
sbb
push
cmc
cli
int
int3
mov
stc
add
push
cmp
jp
addb
pop
add
lret
in
out
std
insl
negl
hlt
fprem
inc
push
push
jnp
orl
jno
inc
ds
add
pop
cltd
cld
clc
in
pop
push
push
pop
jg
orl
cmpb
addl
and
sti
pop
cmpsl
and
mov
jns
xchg
add
in
idiv
cwtl
cltd
pop
xchg
xor
daa
add
push
js
mov
mov
mov
int3
xor
mov
in
repz
add
pop
mov
ret
or
out
jns
sbb
pop
cli
sbb
push
pop
fidivrl
mov
or
cmp
hlt
adc
out
in
jo
mov
jmp
push
sub
jl
push
pop
pushf
insl
dec
inc
in
inc
mov
lds
incl
faddl
fidivrl
xchg
push
andb
pop
xorl
clc
es
std
add
jp
pop
rorb
lret
or
insl
outsl
es
call
mov
enter
mov
aad
or
pop
xor
adc
and
and
sbb
push
inc
lcall
sbb
mov
mov
inc
dec
jl
or
and
sub
sbb
inc
push
add
pushf
lahf
add
pop
es
sbb
adc
sub
stc
or
push
sub
into
cld
mov
pop
sbb
sbb
pop
mov
cmp
push
inc
or
mov
test
or
movsl
dec
addl
xor
adc
mov
jg
jecxz
bound
xchg
push
sbbb
dec
mov
sbb
xchg
pop
subl
xor
dec
and
or
fstps
pop
sbb
push
je
jmp
push
and
sar
or
pop
pop
inc
les
cmp
pop
sbb
pop
icebp
shll
push
push
pop
push
out
lret
rcrb
push
dec
je
pop
sub
hlt
pop
jnp
rorb
mov
stc
into
out
dec
mov
pop
push
inc
pop
das
push
fimull
xchg
push
push
push
sbb
pop
cmp
pop
and
or
sub
outsb
dec
pop
and
xchg
push
clc
addl
sarb
pop
push
ficoms
pop
pushf
add
or
mov
jns
pop
inc
test
pop
sbb
cltd
cmp
push
push
sbb
xor
sti
cmp
cs
adc
jecxz
cmp
push
dec
inc
pop
xchg
adc
or
push
inc
or
jle
dec
icebp
movsl
dec
loope
and
push
dec
cmp
push
or
xor
or
stc
pop
add
dec
mov
push
jne
inc
popa
ds
sub
mov
push
push
jb
cltd
mov
cmp
ja
lret
pop
push
sbb
test
int
jno
clc
push
sbb
sbb
sbb
aam
mov
pop
and
mov
push
je
mov
mov
sbbb
jns
push
sbb
dec
push
fs
adc
shlb
sbb
leave
addr16
mov
add
xlat
bound
ficoml
jmp
and
icebp
mov
mov
push
sub
stc
sbb
not
xor
repnz
std
cmp
sbb
inc
out
sbb
pop
test
aam
jb
fcompl
imul
loop
aas
fwait
mov
pop
mov
cmp
xor
inc
lods
and
scas
xor
lcall
jecxz
mov
dec
or
lods
mov
pop
stos
stos
add
mov
jno
push
scas
pop
sarb
mov
imul
in
pop
roll
lcall
jmp
rorl
aam
or
shll
fsubs
fstps
data16
adc
imul
dec
out
fucomip
jo
enter
aad
jo
in
push
pop
loope
lock
pop
and
mov
push
hlt
mov
push
dec
repz
loop
repnz
pop
in
clc
cmp
hlt
jbe
cmc
mov
data16
xor
cmp
lds
rclb
and
mov
xor
or
and
stos
pop
icebp
les
add
and
sbb
dec
push
jb
jmp
imul
dec
or
fwait
pop
hlt
mov
dec
es
dec
push
jp
mov
sarl
ds
cwtl
or
and
and
push
inc
cmp
push
mov
jecxz
lret
dec
pushf
and
xor
sbb
inc
loope
mov
popf
stos
xchg
mov
dec
shl
mov
dec
arpl
movsl
pop
dec
mov
mov
fstp
out
icebp
adc
xchg
mov
cmpsb
inc
lds
mov
pop
adc
and
cli
mov
cld
mov
rorl
inc
pop
pop
xchg
fs
ja
mov
lcall
sarb
in
jp
sub
and
inc
sbb
adc
loope
sbbb
jb
lea
rorb
jp
enter
fcomps
sub
inc
orl
sub
sub
pop
ljmp
add
or
fs
dec
pop
imul
push
ja
sub
shll
sbb
xor
cmp
or
jge
and
add
and
and
inc
sbb
add
cmp
pop
mov
push
orb
cmp
and
cmp
sbb
cld
test
pop
push
sbb
shll
pop
pop
push
jle
add
mov
popa
cld
push
adc
push
jns
pop
bound
push
inc
aas
ds
sub
inc
popa
xor
or
mov
inc
inc
push
sbbb
dec
inc
cmp
std
sub
mov
sub
jno
pop
je
pop
inc
dec
fldenv
and
cmp
sub
pop
cli
daa
pop
mov
and
pop
pop
cmp
push
mov
leave
or
jo
xor
add
jno
and
leave
cmp
sbb
xorl
pop
dec
dec
sbb
dec
daa
inc
push
aam
lods
gs
pop
add
test
dec
ret
inc
inc
push
imul
out
mov
xchg
jbe
pop
mov
outsl
mov
nop
pop
pop
scas
push
sub
or
popa
pop
call
xor
out
jb
pop
push
into
in
jns
xchg
jp
fstpt
rcr
cmc
int3
inc
cmp
sub
adc
inc
pop
cmp
popf
push
pop
cmp
mov
add
aas
push
lcall
xchg
inc
cwtl
mov
int3
pop
jnp
mov
fdivr
push
imul
fwait
ja
pop
add
jl
mov
add
sub
add
or
dec
xor
dec
movsl
pop
mov
sbb
call
cwtl
jno
pop
mov
sbb
outsb
mov
add
out
pop
cmc
fxch
sbb
dec
push
fcomps
fistps
stos
jbe
pop
or
cmp
clc
xorb
pop
or
inc
sub
daa
xchg
cmp
fsubl
add
xchg
test
fwait
pop
xchg
jbe
cmp
adc
sub
xchg
pop
and
inc
mov
sub
dec
xchg
xchg
sbb
ljmp
mov
add
popf
mov
xor
jge
cmc
sub
fadds
cmpsb
mov
outsb
dec
test
add
sarl
fldt
lods
fdecstp
sbb
pop
out
out
fisubl
or
xorl
into
add
cltd
cwtl
add
pop
cwtl
pop
cmp
pop
lea
lret
enter
sub
add
loopne
je
cld
ret
push
and
push
pop
xchg
mov
push
push
jl
cmpb
arpl
pop
mov
add
pop
pushf
mov
fistpll
add
xorl
or
pop
adc
rcrb
push
mov
add
jae
lret
jecxz
xor
pop
push
rolb
push
fdivrs
fmull
and
sti
scas
pop
icebp
fwait
mov
cld
push
cmp
add
shll
stos
negl
jle,pn
outsb
sub
cli
xchg
add
add
lret
jno
loope
mov
adc
int
pop
stc
jbe
dec
add
sbb
sbb
pop
adc
pop
cltd
mov
imul
incl
jg
out
loopne
fcomps
mov
pop
push
or
mov
js
mov
pop
test
add
dec
and
add
js
cmp
pop
add
scas
cmpsl
mov
pop
dec
xchg
clc
fildl
pop
mov
shl
pop
rcll
add
xor
fwait
cld
pop
cmp
rol
jns
out
fs
gs
cmp
dec
or
stc
xchg
dec
nop
jae
pop
add
int
xchg
into
push
jbe
pop
fdivl
add
inc
ds
stos
adc
pusha
pop
movsb
scas
pop
mov
pop
cmp
imul
aaa
scas
or
cmp
push
sbb
mov
or
push
repz
cmpl
add
ficoml
jmp
stc
pop
mov
fimuls
enter
sbb
aam
sbb
sbb
add
push
xor
jmp
cmp
outsl
stc
rcrl
rcr
or
imul
pop
and
sbb
faddl
testb
push
adc
jge
pop
dec
cmpsb
xchg
pop
inc
cwtl
js
mov
xor
das
dec
mov
addr16
aam
xor
push
pop
loopne
sub
adc
sbb
dec
add
adc
or
pop
cmpsl
mov
pop
daa
or
xchg
lcall
ss
dec
outsl
insb
jns
mov
or
out
cmp
or
nop
adc
iret
push
pop
dec
dec
mov
dec
pop
in
pop
sub
add
pop
jns
dec
addb
fst
mov
bound
sub
add
std
inc
adc
fnsave
pusha
js
push
push
xadd
ss
negb
or
ja
lock
pop
sbb
dec
inc
add
jmp
cmpsl
pop
int3
and
mov
ljmp
fstps
dec
jne
pop
sarl
aam
pop
ret
lcall
icebp
outsl
cmp
rorb
or
repnz
push
rcrb
aam
inc
cs
cli
mov
pop
xor
fists
leave
int3
or
fdivs
ja
push
push
test
fsubs
cwtl
pop
sbb
out
push
dec
fucom
aas
push
dec
test
adc
jle
out
outsl
idivb
pop
add
cmpsb
adc
lret
jg
mov
sub
stc
mov
in
xor
add
pop
push
mov
fildll
arpl
xchg
lret
jno
sbbl
add
in
sub
pop
mov
pop
and
add
jmp
mov
icebp
push
adc
dec
test
fidivrl
ffree
lret
shll
pop
xchg
andb
pop
ds
test
cltd
or
nop
pop
pop
popa
jae
out
mov
add
pop
cmpsb
and
mov
jnp
sbb
xor
pop
cmp
or
ja
and
adc
lcall
mov
add
ss
shrl
stos
mov
mov
icebp
dec
and
xchg
iret
fwait
les
sub
pop
pop
jmp
dec
lahf
xlat
fisubrl
popa
pop
xor
jge
lret
sbb
pop
mov
or
movlps
cs
pop
mov
xlat
pop
mov
into
sbb
inc
sub
lock
push
pop
pop
add
pop
aam
mov
push
jo
inc
sti
outsl
icebp
rcrl
pop
es
sub
pop
mov
nop
outsl
ret
and
xchg
cwtl
sbb
pop
sahf
cmp
adc
pop
push
shll
fmull
negl
cmc
lods
add
outsl
add
mov
push
jge
movzwl
xor
jmp
pop
xchg
mov
mov
and
mov
adc
cs
sbb
jle
cmp
jg
cmp
insl
mov
xchg
mov
sub
sub
js
pop
lods
sti
loopne
adc
push
pop
add
dec
xchg
cmp
pop
sbb
xor
push
or
ficompl
or
repnz
mov
jmp
jae
or
jns
das
push
lret
fwait
dec
push
xor
outsl
shll
cmp
push
pop
mov
add
push
dec
aam
xor
pop
sub
cmp
lods
xchg
cmpsl
in
adc
js
add
push
cmp
mov
push
sbb
fwait
sub
pop
fildl
lcall
cld
pop
xchg
imul
pusha
dec
push
jecxz
jmp
orl
cmpsb
sbb
sbb
ds
rcr
add
data16
pop
stc
mov
or
push
pop
pop
lock
scas
shll
adc
sti
clc
pop
mov
mov
jbe
pop
scas
loopne
mov
mov
sub
mov
fcmove
adc
jb
pop
and
pop
imul
scas
mov
or
adc
mov
fwait
mov
and
scas
je
aad
stc
xor
hlt
int
loope
mov
icebp
xchg
lds
loop
pop
push
rol
ret
pop
pop
fwait
pop
shrl
mov
jmp
mov
pop
and
dec
adc
and
pop
add
rcrb
or
pop
mov
and
pop
add
add
lods
inc
loope
and
sub
xor
mov
repz
push
push
inc
or
test
inc
out
ret
adc
sub
pop
pop
mov
xor
shrl
mov
cmpsl
aad
bound
push
jp
push
pop
mov
shrb
push
jns
pop
mov
xor
jge
mov
hlt
call
lcall
testb
xchg
add
sub
pop
ds
mov
push
pop
push
pop
and
addl
pushf
cmp
cmpsl
mov
push
push
ja
daa
pop
test
enter
mov
cmp
adc
cmp
stc
fistps
mov
lret
movb
push
shrb
xchg
into
idiv
in
adc
pop
add
cld
sub
inc
or
push
dec
xchg
subl
cmp
sub
inc
popa
add
nop
mov
mov
pop
cmpsl
adc
sbb
sub
mov
cmp
add
cmpsb
mov
xorl
data16
frstor
mov
fadds
lcall
mov
xchg
pop
lds
push
pop
fisttps
xor
cltd
aas
aam
cmpl
cmp
lock
mov
sti
cmp
stos
fstpl
inc
pop
aas
xchg
int
sbb
js
enter
and
push
mov
cmp
sbb
nop
push
push
mov
pop
inc
in
comiss
xorb
add
rcrl
mov
cli
pushl
cld
push
inc
push
cmpsl
andl
push
sbb
pusha
and
pop
cmp
pop
push
lret
pop
sbbl
xor
decl
es
sub
add
dec
mov
in
push
hlt
dec
sbb
fcomps
mov
cmp
aam
xchg
mov
daa
scas
push
sbb
jo
and
js
pop
leave
xor
or
rcrb
pop
push
inc
pop
popf
fsts
dec
es
adc
clc
fwait
cmp
pop
pmaddwd
xor
in
pop
mov
mulb
mov
push
arpl
lods
repz
popf
jnp
add
or
sbb
bound
pop
cmp
dec
movsb
push
popa
adc
ds
std
adc
pushf
imul
leave
xor
imul
lcall
sbbb
pop
flds
in
cli
jnp
lcall
fdivp
add
push
push
jne
pop
pop
shrl
inc
outsl
push
rcrb
ret
mov
or
sti
icebp
jl
pop
stos
xchg
xor
or
faddp
cmp
xchg
pop
push
cmpsl
push
mov
pop
fbld
mov
mov
in
inc
pushf
pop
pop
pop
pop
dec
or
mov
pop
popa
sbb
mov
inc
js
pop
add
jbe
pop
and
outsl
cmpsl
and
fcompl
mov
das
nop
adc
pop
sti
inc
xchg
ljmp
mov
ss
adcb
xor
sar
lret
js
add
pop
rclb
pop
fs
addl
mov
std
or
and
cs
mov
roll
pop
fildl
fcoms
stos
or
test
shlb
movsl
jle
jg
add
das
insb
inc
fcom
mov
cmp
fidivrl
sbb
ror
mov
adc
sub
xor
adc
sarl
fwait
mov
lcall
sahf
stc
cmpsb
int
inc
dec
pop
or
mov
add
and
inc
xchg
or
push
subb
adc
fs
sbb
imul
fmuls
or
loop
fdivl
jbe
js
pop
ss
ret
lods
ja
mov
pop
into
cs
xorl
mov
inc
fidivrl
xor
push
mov
or
inc
enter
enter
jge
cs
rclb
adc
roll
mov
test
pop
add
mov
add
pop
pop
xchg
pop
mov
arpl
sub
or
sbb
push
pop
test
push
inc
ficoml
inc
mov
ljmp
dec
sub
push
jmp
popf
sub
or
pop
loopne
sahf
cmpsb
pop
xlat
sbb
push
stc
ljmp
aam
fsubrs
outsb
pop
inc
shl
mov
or
loop
cmp
les
xchg
dec
sbb
sarl
iret
dec
negl
test
xor
in
addr16
pop
ss
iret
add
pop
mov
pop
jmp
inc
or
pop
cmp
sbbl
mov
and
jns
or
sbb
out
vcvtsd2ss
pop
sub
pop
xor
xor
xchg
rcrl
sahf
pop
jno
icebp
scas
pop
mov
cli
stos
adc
xor
mov
inc
pop
leave
cmp
cmp
cli
js
xor
test
dec
sub
pop
shll
mov
sarl
pop
out
add
adc
addr16
rorl
sbb
out
xorb
mov
pop
dec
lcall
in
mov
mov
adc
outsl
cmp
pop
sub
jns
push
pop
es
arpl
addr16
fstl
cli
inc
pop
inc
movsl
and
add
add
rorl
cli
inc
mov
ljmp
in
fistpl
inc
icebp
mov
pop
sub
mov
add
loope
mov
pop
or
mov
push
pop
add
sbb
jbe
pop
cmc
fisttpl
jbe
cmp
inc
push
and
adc
jb
push
add
and
push
cmp
cltd
cmp
jl
call
and
pop
and
and
mov
sbb
or
mov
jecxz
aam
repz
pop
dec
leave
loope
or
push
pop
stos
and
ja
sarl
dec
test
cmp
js
lret
or
pop
sub
cli
cs
mov
pop
push
lods
add
pop
jmp
sub
inc
pop
loope
and
sbb
push
stos
scas
cmpsl
lret
push
mov
xchg
jb
inc
xchg
mov
pop
push
pop
adcl
test
andb
imul
pop
call
loope
adc
outsb
jne
and
cmc
lea
mov
pop
les
pop
insl
mov
scas
fcompl
stc
and
pop
mov
mov
xor
lret
add
rcrl
jl
push
addr16
jmp
test
pop
popa
pop
mov
xor
pop
mov
lret
sub
mov
and
mov
imul
pop
push
outsl
popa
add
rcrb
jmp
loope
push
push
jo
xorl
fwait
inc
or
jne
test
pop
idivl
pop
push
dec
stc
push
xchg
sub
loopne
lock
je
sti
or
xor
cmp
jne
xchg
call
incl
pop
xlat
xor
hlt
aam
inc
add
push
inc
mov
pop
lea
int3
xchg
mov
and
pop
push
dec
xchg
jecxz
and
pop
in
int3
in
cmpsl
scas
stc
fwait
enter
enter
movsl
icebp
popf
push
cmp
les
repnz
mov
mov
addr16
pop
in
cltd
xor
dec
push
leave
cmp
mov
scas
negl
lds
xor
pop
cld
mov
dec
mov
cmp
sbb
sbb
mov
jge
fwait
jl
iret
mov
dec
lret
pop
xchg
movb
jns
enter
insb
mov
sub
movsl
xchg
pop
clc
add
adc
ljmp
std
shl
xchg
pop
outsb
adc
and
or
sbb
pop
das
sbb
jmp
cld
and
int3
or
test
lcall
pop
jge
fwait
push
cmp
iret
gs
sub
mov
jb
fdivl
mov
jbe
pop
cltd
add
fwait
xchg
pop
sub
mov
dec
fists
xlat
enter
pop
mov
lcall
xchg
cli
pop
or
push
stos
xor
jle
cmp
fwait
mov
sbb
iret
jge
or
xchg
xor
pop
loopne
xor
test
add
pop
fstl
and
pop
push
loop
pushf
or
int
push
pop
push
cmp
jmp
gs
pop
imul
mov
loopne
cmpsb
jns
sbb
adc
addr16
pusha
jmp
lods
mov
lret
add
call
pop
cmpsb
pop
add
inc
mov
pop
stc
push
adc
shrl
pop
sbb
mov
pop
ficoms
test
es
cmp
scas
movsb
jo
mov
dec
sti
fadds
pop
outsb
adc
xchg
cmp
fdiv
int
lea
pop
sub
push
pop
btc
mov
sub
je
and
cmp
lret
insl
cmp
push
faddl
addr16
ret
add
mov
out
test
sub
sbb
movsl
pop
clc
pop
jno
outsl
in
dec
hlt
cwtl
push
jle
stos
cmp
adc
sub
addl
into
pop
mov
imul
sub
pop
ja
or
cmp
cld
inc
pop
mov
sarl
mov
jl
push
cmp
out
push
push
push
mov
enter
pop
hlt
xor
add
fisubrl
lods
fcompl
jne
test
sbb
lock
fisttpl
add
pop
mov
loope
and
add
dec
aaa
rcll
sbbl
std
pop
leave
and
int3
inc
dec
xchg
mov
mov
mov
out
clc
loope
xor
sbb
cmp
push
in
cmp
pusha
pop
add
or
xlat
mov
adc
lock
mov
pushf
dec
in
add
dec
lahf
sbb
push
repz
movsb
sbb
pop
mov
ror
or
mov
stos
jle
and
mov
ja
cltd
outsb
push
jmp
pusha
dec
pop
jns
in
popa
pop
or
lcall
add
fidivs
enter
stos
add
decb
test
adc
scas
movsl
int3
arpl
xchg
out
pop
push
imul
test
cli
or
nop
cmp
mov
out
jbe
je
jmp
fisttpll
cmp
xchg
int
cmp
mov
xor
hlt
mov
mov
jle
pop
sbb
pop
les
or
push
and
dec
orl
popa
fwait
dec
popa
pop
adc
jge
bound
sub
sub
mov
filds
icebp
xchg
adc
push
leave
cmp
mov
data16
pop
push
and
mov
pop
jmp
lret
cmp
pop
sub
dec
inc
pop
inc
sub
pop
loopne
test
sub
in
mov
dec
ret
sub
pop
adc
mov
inc
cmp
cmp
sub
rcrl
std
cs
insl
or
int3
add
dec
adc
jecxz
xchg
hlt
pop
sar
lods
fcoms
mov
je
add
arpl
pop
nop
cld
ljmp
push
sub
rcll
or
popa
stos
pop
sbb
shll
rcrl
imul
push
call
clc
and
sahf
pop
test
popa
iret
or
mov
int
pop
add
fadd
and
push
or
mov
mov
jo
out
addl
pushf
clc
pop
aam
fimull
push
ret
or
push
pop
lock
ret
stos
sbb
pushf
pop
push
call
cli
cmpsb
pop
aas
mov
inc
mov
push
loop
lods
cmp
add
mov
dec
cmp
mov
mov
ja
cltd
ljmp
xor
sbb
out
mov
pop
inc
pop
dec
mov
mov
test
notb
pop
cmp
add
dec
js
shrl
lds
mov
lea
lret
fsubrl
push
cmc
cld
inc
sbb
out
dec
adc
cmp
jae
adc
aas
sbb
pop
inc
shrb
loope
add
push
hlt
pop
mov
clc
xor
pop
mov
mov
push
pop
add
cli
mov
mov
add
je
imull
sub
jp
jmp
sub
sahf
pop
icebp
rclb
push
daa
jne
pop
insl
mov
fldcw
mov
lds
ja
and
pop
sbb
popf
and
int
or
push
icebp
pop
or
pop
fwait
stos
pop
cmpsl
mov
jecxz
jbe
jl
sub
enter
push
inc
pop
movl
loope
outsl
xor
pop
add
push
and
add
mov
std
rcrb
add
inc
xchg
pop
aad
fstps
rclb
cmpsl
or
call
sarl
jbe
xor
jle
lods
push
dec
sbb
cmp
mov
gs
add
imull
dec
fcmovbe
push
cmp
or
fwait
inc
lcall
dec
cmpsb
popa
sti
incl
mov
cmp
jb
and
push
sbb
js
das
fistl
mov
rcrb
pop
mov
pop
add
xlat
cmp
fildll
ss
dec
cmp
pop
sahf
push
mov
inc
dec
outsl
inc
ret
stc
outsb
pop
fisubrl
sbb
enter
mov
jp
pop
mov
and
fwait
pop
ficoml
ret
xchg
scas
sub
xor
sbb
sub
mov
push
pop
xchg
or
xorl
pop
mov
jbe
pop
push
push
gs
sub
cwtl
mov
mov
dec
xorb
sbb
push
popf
dec
pop
mulb
out
pop
loope
andl
jns
aam
push
pop
negb
lock
shll
clc
mov
arpl
cmp
out
or
mov
clc
add
mov
push
sbb
xor
cmc
cmp
mov
sbb
pop
mov
inc
inc
sbb
pop
mov
loope
and
mov
cmc
pop
or
outsl
sub
repnz
in
pop
aas
add
lea
rclb
incb
add
jecxz
out
jnp
jg
pop
sub
inc
jo
xchg
pop
mov
jno
sub
outsl
and
inc
cwtl
rcrb
mov
xchg
fmuls
xor
sbb
push
push
lcall
mov
push
incb
stos
int
sbb
or
test
xor
mov
xchg
lret
or
pop
mov
mov
dec
pop
out
add
dec
ficoml
fisttpll
or
out
inc
imul
pop
loope
call
sub
pushf
pop
repz
test
push
sahf
add
xor
lret
lret
add
std
loop
lea
pop
rcrb
movl
cld
mov
stc
and
test
pop
pushf
adc
pop
addr16
cmp
pop
clc
add
cld
and
call
test
daa
cmpsl
sbb
scas
filds
pop
cmp
lods
pop
mov
pushf
loop
jp
sbb
cmp
sbb
push
xchg
lret
push
int3
and
dec
xchg
add
pop
sub
add
mov
pushf
and
cltd
pop
mov
pop
das
int
xor
adc
addr16
pop
pop
mov
pop
aas
repnz
icebp
add
gs
inc
mov
cwtl
cmp
lods
sbb
test
ret
xchg
push
repz
mov
add
or
shrl
stos
lcall
mov
ljmp
xor
push
and
fildll
ss
pusha
mov
dec
cmpsb
cmpsl
inc
and
dec
jl
aaa
mov
out
mov
cmp
cmp
pop
dec
loop
into
fadd
lcall
arpl
fprem
add
popa
push
cli
push
mov
dec
mov
cmp
push
cmp
daa
add
sbb
push
jle
sti
mov
mov
mov
test
xor
clc
inc
or
je
sbb
mov
test
mov
pop
ret
mull
movb
fcoms
pop
pop
or
xor
cli
jl
add
shlb
pop
cmc
push
xor
jns
rcrl
adc
mov
cmp
xchg
ret
popf
push
testl
pop
and
sbb
add
pop
out
mov
jbe
shr
lcall
and
pop
loopne
aam
fstps
pmaddwd
imul
pop
orl
jmp
push
and
dec
into
push
ficompl
pop
pop
xor
or
pop
mov
and
or
jmp
js
pop
mov
jmp
pop
push
xor
lock
sbb
jl
cmp
jge
bound
push
sti
push
jg
in
stos
pop
pop
stc
into
add
fdivrp
fistps
push
out
mov
aas
pusha
pop
sub
imul
pop
mov
dec
pop
test
inc
sub
pop
call
xchg
dec
xchg
mov
mov
or
add
enter
add
xchg
mov
aad
pop
orb
xor
outsl
popf
jge
ja
add
mov
pop
push
cmpsb
loop
jp
add
pop
or
stos
js
icebp
mov
enter
sub
call
xchg
add
inc
in
pop
mov
cmp
pop
pop
int
push
jge
push
mov
sub
or
jnp
jno
sbb
inc
xlat
or
mov
xor
pop
loopne
add
mov
mov
push
adcl
sbb
in
pop
lret
add
aas
mov
dec
sub
cmp
jae
ss
add
cmp
int
loopne
pop
or
or
pop
xlat
sub
mov
in
pop
mov
ljmp
push
divb
rcrb
sarb
lods
jmp
mov
xchg
push
pop
loope
push
jne
cli
daa
sbb
xchg
jmp
ds
aaa
pop
jle
popa
ret
clc
pop
movsb
pop
xchg
arpl
nop
adc
add
adc
or
fdiv
add
les
cmpb
cmp
bound
sbb
adc
push
push
shl
aas
fiaddl
test
arpl
jg
ljmp
fildl
cmp
pop
fcoml
dec
or
in
sbb
test
inc
int
out
aaa
rol
out
pop
andl
call
push
mov
adc
jns
and
popa
cmp
cmp
add
mov
push
sub
pop
inc
xchg
leave
icebp
stos
aaa
cwtl
or
add
mov
adc
cmp
mov
jl
daa
cld
dec
out
sbb
sbb
inc
call
lcall
sbb
test
sbb
pop
dec
imul
in
filds
sbb
inc
fcmovb
mov
pop
jmp
dec
lcall
mov
lock
mov
ja
adc
pop
pop
add
jp
sahf
push
clc
pop
out
add
hlt
pop
js
add
push
pusha
cld
pop
cs
into
mov
push
jno
lea
inc
cmp
mov
lcall
pop
hlt
mov
pop
sbb
mov
jb
popa
pop
imul
iret
dec
cmp
xchg
adc
pop
popa
mov
dec
xchg
mov
xchg
mov
cmp
mov
rcll
aaa
loope
cmp
ficoml
jle
cmp
lock
jecxz
sbb
scas
test
outsb
mov
fld
pop
xor
pop
mov
les
pop
rcrb
outsl
addr16
push
mov
lock
jbe
pop
cmpsb
pop
into
cmc
jnp
cmp
stc
jae
xchg
mov
fsubrl
arpl
and
mov
nop
sbb
in
notb
inc
pop
push
into
and
push
cmpsl
bound
out
sbb
gs
aas
fstps
or
rcrl
add
xchg
mov
hlt
cwtl
pop
pop
jb
lock
jo
add
pop
add
jl
fnsave
fcomps
xchg
pop
or
push
push
nop
mov
add
movsl
mov
pop
push
sbb
imul
cwtl
scas
aas
mov
in
push
mov
add
mov
adcl
hlt
pop
push
add
push
inc
jle
sahf
repz
or
xchg
cli
pop
movsb
xchg
xchg
cltd
xchg
cmpsb
pop
dec
insl
ljmp
dec
pop
jb
cmp
icebp
cld
stos
pop
pop
sub
adc
sub
add
shll
sub
je
pop
push
sbb
inc
orb
sbb
pop
mov
lret
add
imul
sub
and
int
mov
pop
cmp
std
adc
outsb
sub
push
fcoms
cltd
mov
add
push
cmp
subb
shll
push
jo
outsb
pop
movsl
popa
pop
add
inc
jle
pop
loope
fldl
mov
pushf
idivb
fistl
push
push
mov
cwtl
data16
pop
jne
pop
jmp
test
pop
or
adc
push
add
imul
pop
mov
sbb
repnz
popa
pop
movsl
add
cwtl
sbbb
cmp
call
xchg
shlb
xchg
inc
pop
push
push
fld
movb
idivl
mov
ds
jne
xchg
gs
insb
or
xchg
popa
cwtl
shll
mov
jge
and
cli
jmp
jo
insb
pop
push
stc
adc
dec
or
lcall
in
mov
or
jbe
inc
push
std
insl
loopne
out
ret
fadds
pop
push
sbb
xor
jecxz
push
in
movsb
cmpsl
push
cmp
jmp
cmp
iret
add
dec
andb
jae
js
rep
xchg
pop
cmpsl
pop
sbb
lcall
sub
fstpt
fcoml
jo
movsb
cmp
or
int
fs
aad
outsl
mov
pop
jb
cmc
lock
test
mov
inc
cmpsl
stc
adcl
add
imul
pop
pusha
cmp
lcall
jge
add
xor
sbb
mov
enter
or
sub
jo
and
push
mov
mov
inc
mov
fstps
scas
sbb
stc
push
pop
in
cmpsl
loope
pop
or
mov
sti
fnstsw
pop
xchg
ficompl
or
test
xchg
das
mov
sbb
dec
jne
pop
cmc
dec
popa
inc
pop
lret
stc
add
or
ret
std
sbb
sbb
pop
fs
jb
dec
pop
cltd
data16
icebp
ret
pop
xchg
dec
or
ja
dec
pop
add
add
jb
xchg
push
inc
cmp
ss
hlt
insb
fwait
jl
ljmp
fdiv
in
out
pushf
jle
adc
pop
push
jae
adc
in
adcb
sbb
test
fcomi
sub
mov
stos
cmpsl
mov
xor
pushf
mov
call
fidivs
ljmp
mov
cs
pop
repz
repnz
add
addr16
loopne
xor
adc
pop
xor
cld
pop
lcall
mov
mov
add
cmp
mov
push
mov
push
sbb
mov
inc
addb
lds
negl
jbe
out
pop
insb
outsl
stc
pusha
scas
fmull
jmp
mov
add
cltd
and
or
sub
nop
int3
push
sbb
cmp
xchg
aad
jg
add
jb
or
adc
adc
jne
sub
mov
cltd
inc
push
mov
ljmp
xor
jmp
pop
popa
lret
js
inc
mov
sub
lods
push
add
jecxz
cmp
call
dec
xor
mov
sbb
cld
push
inc
orl
in
add
lahf
pop
pusha
or
inc
cmpsl
sub
and
pop
adc
loop
sub
mov
fisubrl
aas
pop
pop
sbb
mov
clc
or
and
xchg
lcall
mov
mov
mov
pop
jge
jl
ftst
fisubrl
pop
insb
lahf
inc
pusha
pop
push
xor
pop
hlt
inc
pop
outsb
sbb
jns
pop
nop
ds
jns
lret
insl
pop
jl
dec
icebp
pcmpeqw
shrl
pop
jbe
fistl
adc
pushf
icebp
call
mov
dec
jp
jecxz
pop
mov
pop
mov
out
loope
or
push
stos
mov
mov
inc
jo
mov
mov
cmp
jmp
adc
jb
enter
mov
out
push
sahf
cmp
pop
or
loope
pop
stos
push
pop
arpl
cmpb
and
adc
loop
fadds
loope
or
xor
pop
fldenv
lahf
sub
jnp
push
mov
cmp
sub
sbb
fiaddl
out
cmp
add
push
pushf
jo
pop
inc
stc
pop
pop
jle
rcrb
sub
mov
xchg
adc
sub
insl
addr16
sub
movsl
adc
sbb
pop
shrl
sahf
mov
rclb
pop
mov
xlat
dec
pushf
mov
push
out
fidivrl
rcr
or
sbb
add
mov
mov
push
in
stc
mov
sti
aam
add
dec
mov
fdiv
clc
cltd
inc
pop
add
mov
jle
pop
cwtl
rorb
movsl
jp
sbb
inc
scas
loopne
cmp
test
lahf
sbb
jno
or
fldl
cmp
jmp
add
ret
rorb
and
jns
pop
lret
and
push
cmp
mov
negl
lea
adcl
push
fsubl
push
mov
lret
jl
push
roll
stc
mov
pop
cmp
mov
mov
pop
js
test
sbb
xor
je
int3
add
cmp
test
or
out
or
pop
flds
pop
bound
jl
inc
push
das
add
ljmp
fdivs
pop
pop
push
adc
scas
inc
pop
sbb
adc
cmp
xor
sub
push
fldenv
add
rorb
insb
xlat
push
ficomps
cmp
push
pop
mov
jmp
xchg
jmp
in
pop
popf
insl
clc
ficoms
mov
inc
paddusw
lahf
add
pop
and
aas
hlt
stc
in
aad
jbe
loop
pop
pop
xchg
movsb
pushf
jmp
add
pop
orb
pop
clc
mov
int
scas
fcompl
fxch
jg
pop
testl
add
push
cmp
mov
mov
fcomps
add
inc
pop
test
movl
aam
imul
sbb
loop
sub
pushl
add
xor
sbb
add
xchg
mov
cmp
mov
in
jb
clc
pop
fcmovnb
push
xor
pop
pop
cmp
dec
scas
inc
test
lcall
subl
xor
jle
and
lods
xchg
add
mov
in
mov
pop
hlt
pushf
ret
cli
adc
aas
test
pop
daa
aad
mov
and
repz
jecxz
inc
xlat
inc
lods
sti
pop
dec
xor
push
pop
xor
ret
add
pop
popl
aaa
test
or
jge
cmpsb
add
js
insl
sbb
dec
ficompl
inc
test
fdivrl
pop
sbb
inc
popf
pop
add
rolb
and
sbb
fistpl
mov
and
push
push
bound
xchg
add
cmp
sub
lods
iret
push
pop
adc
push
cmpsl
icebp
sbb
sbb
fistl
inc
inc
bound
cld
sbb
imul
push
or
inc
outsl
pop
jbe
pop
std
gs
shrl
addr16
pop
cmp
subb
xlat
mov
add
pop
pop
pop
std
mov
push
jbe
xchg
xor
push
pop
cmp
xchg
push
mov
push
test
xor
and
push
repz
adc
mov
shlb
aam
aas
popa
add
in
cmp
and
inc
int3
pop
jno
jp
mov
sti
sbb
aam
pop
loope
cmp
testl
jo
out
add
gs
stc
imul
rorl
or
jp
mov
dec
insb
dec
push
sub
lods
jmp
pop
arpl
and
rolb
sbb
addr16
leave
mov
fcmovbe
popa
inc
cltd
pop
xchg
popf
or
sbb
pop
sub
or
push
cli
addr16
pop
cmovs
push
jb
cmp
push
mov
pop
outsl
add
pop
dec
outsb
stc
or
fbstp
mov
pop
pop
dec
inc
aad
sub
sub
ficoml
add
iret
pop
mov
and
cmp
xchg
lods
mov
addb
jne
xchg
ds
fucomip
add
pop
sub
cwtl
mov
xor
jg
negb
bound
pop
int3
add
mov
pop
and
and
mov
adc
sysret
inc
add
jecxz
int
loopne
sbb
cmp
pop
add
pop
mov
cmpb
push
pop
dec
insb
push
popf
test
pop
sbbl
or
lock
push
adc
cmpsl
pop
mov
ret
in
rcrb
or
dec
test
out
out
insl
and
add
push
inc
in
lock
adc
and
test
lret
cs
bound
add
xchg
out
adc
mov
inc
push
test
pop
xchg
jecxz
jb
pop
jmp
push
or
fidivrs
add
jae
add
pop
scas
dec
mov
mov
std
inc
rcll
mov
imul
aad
rep
pop
fs
lock
ds
cmp
ficompl
xorl
push
stc
and
enter
xchg
mov
push
pop
stc
clc
cmp
sbb
pop
gs
aaa
sbbb
mov
jmp
enter
cs
pop
xor
imul
pop
pop
jecxz
xor
jbe
jnp
mov
mov
call
imul
in
pop
xlat
add
mov
lds
insl
add
mov
pop
stc
cmpb
popa
sbb
sub
cmpsb
jne
adc
fisubrl
add
pop
sub
add
xor
sbb
mov
dec
adcb
xchg
rorl
icebp
mov
xchg
xchg
test
arpl
xchg
push
mov
or
mov
adcl
ss
or
testl
add
fs
mov
cmp
out
std
pop
lcall
and
fcoms
xor
push
inc
push
stos
xor
push
pop
shr
stc
incb
dec
popa
pop
lcall
pusha
shr
rolb
nop
aas
sbb
push
adc
ret
cmp
lock
addr16
pop
stos
rcrb
lods
ljmp
fdivrl
fs
pop
addl
jmp
sbb
mov
xchg
lock
push
xor
dec
cmp
push
adc
mov
pop
lret
dec
inc
stc
inc
or
mov
icebp
add
into
stos
jle
scas
ljmp
mov
gs
sbb
pop
push
push
inc
into
or
add
clc
stc
add
es
dec
pop
adc
movsb
icebp
sbb
jmp
fcmovnb
test
movsl
in
cltd
shlb
out
pop
out
rcrl
movsb
push
push
arpl
xchg
cli
push
xchg
pop
leave
cmp
mov
in
jecxz
jne
pop
cmp
mov
mov
mov
mov
adc
inc
adc
int3
sbb
bound
mov
movsb
pop
dec
xchg
sub
lea
stos
mov
inc
jo
pop
xchg
sub
adc
lods
mov
orb
sbb
pop
cmpsl
mov
sbb
jnp
pop
mov
xchg
and
jge
and
add
orb
mov
add
sarb
or
mov
dec
pop
out
push
fucomip
cmpl
or
xchg
mov
cwtl
sbbb
mov
call
loopne
mov
mov
je
push
roll
loope
out
add
aam
sbbb
xchg
sub
jae
xchg
pop
enter
mov
jg
pop
pop
pop
icebp
addr16
testb
ljmp
adc
jp
lret
mov
loope
and
pop
mov
sbb
leave
pop
daa
outsl
mov
gs
add
scas
mov
jle
repnz
rcll
sti
imul
mov
clc
movswl
cmp
sbb
jae
xor
push
ljmp
jg
xchg
mov
jne
pop
and
enter
mov
inc
adc
sub
js
notb
fimull
in
imul
add
out
add
mov
and
add
mov
add
stos
rcrl
and
xorb
jge
sbb
pop
or
pop
ficomps
jecxz
adc
icebp
pop
es
and
push
test
pop
jl
push
mov
jo
mov
cld
in
stc
mov
cmovle
xchg
loope
pop
add
jl
pop
mov
mov
mov
push
sbb
jecxz
sbb
test
mov
les
sub
sbbl
xchg
push
pop
stos
lcall
xchg
sbb
iret
push
push
sbb
push
pop
ja
rol
push
xor
mov
xor
call
iret
dec
pop
add
push
sub
pop
jmp
int
add
hlt
iret
and
push
dec
repz
jecxz
cmc
sti
pop
insb
mov
mov
loope
sbbb
mov
sar
push
out
testl
cld
rcrl
cmp
adc
pop
mov
pushf
jmp
fs
adc
aad
pop
mov
fidivl
fwait
add
or
mov
and
hlt
sub
addl
lock
add
arpl
inc
in
pop
jg
fisttps
inc
and
sbbl
sbb
insb
bnd
out
iret
mov
pop
arpl
inc
fwait
imul
int3
sbb
mov
out
leave
jle
call
add
jg
enter
shll
cs
push
mov
xchg
mov
pop
shll
cs
loopne
lret
insl
mov
xchg
aas
fcompl
jb
fldl
jno
pop
imul
xor
jge
sub
addr16
pop
jns
pop
xchg
stos
mov
push
pop
mov
jno
sub
xchg
int3
cmpl
jo
call
mov
jle
mov
out
movsb
pop
mov
js
jbe
pop
outsb
aas
push
data16
out
nop
jge
pushl
jbe
pop
clc
jnp
jno
aad
dec
dec
sub
pop
fsubrl
lahf
inc
pop
loopne
pop
insb
sub
ret
pop
mov
adc
push
pop
sbb
negb
aam
je
cmc
add
xchg
cld
jo
mov
call
pop
aaa
pop
es
test
loope
outsb
dec
loop
jns
jns
pop
mov
jno
mov
nop
pop
and
fs
mov
loopne
or
js
cltd
cs
rcrl
xor
xchg
push
dec
mov
fdiv
mov
mov
and
mov
lcall
sub
xchg
stos
dec
sub
jle
push
pop
icebp
les
dec
ja
lret
sbb
inc
mov
imul
in
hlt
xchg
inc
sbbl
inc
dec
sbb
movsb
jns
lret
xchg
xchg
inc
pop
addl
or
jo
into
add
add
mov
xchg
sti
push
ret
pop
mov
lock
push
shll
stc
pop
pop
enter
sub
inc
bound
lret
mov
push
cmp
cmp
mov
loopne
inc
jl
pop
jno
xor
stc
mov
outsb
fcomps
pop
sub
scas
out
out
pop
xor
sub
testl
dec
xchg
cmp
and
add
cmp
mov
sub
clc
inc
stos
data16
leave
pop
dec
pop
sahf
pop
lds
cmp
movsb
pop
sti
xchg
rolb
add
sahf
mov
ja
cmp
jmp
jo
lcall
test
inc
mov
arpl
mov
mov
inc
mov
addr16
test
std
cli
mov
xchg
loop
jl
add
call
cmpsl
mov
adc
negl
leave
sbb
push
test
pop
je
fs
addr16
mov
ss
or
xlat
pop
mov
adc
dec
push
jmp
cmpl
pop
inc
lea
pop
dec
add
repz
jl
fimull
cmpsb
pop
mov
xchg
fnstcw
jno
negl
mov
xor
pop
inc
adc
fdivrp
andb
pop
dec
xor
add
mov
cmp
mov
sbb
mov
pop
lods
das
pop
and
mov
xor
in
pushf
sub
pop
cltd
fs
cld
testl
xchg
mov
adc
incl
pop
push
push
pop
orb
lods
xchg
pop
iret
ljmp
pop
icebp
rcr
mov
add
pop
inc
jcxz
dec
xor
adc
call
fidivs
push
pop
xchg
adc
fcoml
cld
pop
addr16
add
inc
rcll
popa
pop
pop
push
incl
loop
jne
lock
les
neg
aam
std
imul
and
pop
pop
sbb
mov
jo
cld
xchg
push
fucomi
jbe
lret
jb
mov
ja
or
push
add
and
dec
mov
pop
cmp
movsb
loope
syscall
xchg
or
sbb
pop
xchg
mov
pop
lret
shl
test
jns
cmp
dec
or
cmc
fldcw
xor
lret
jg
sbb
lahf
sbbb
hlt
push
or
inc
pop
out
inc
pop
xchg
mov
dec
pop
cmp
pop
outsb
shll
mov
sbb
xor
and
push
adc
out
jecxz
lock
pop
push
xchg
imul
pop
push
std
enter
cwtl
pop
push
pop
clc
lret
add
repnz
jo
pop
mov
add
or
push
leave
add
mov
jg
pop
jmp
cli
cmp
pop
outsb
push
xchg
enter
and
aas
sbb
loopne
or
add
push
xlat
dec
pushf
push
mov
repz
sar
xchg
fidivrs
stc
add
inc
cmpsl
outsb
pushf
sub
int
jbe
add
adc
ret
insl
or
aas
pop
or
push
and
mov
iret
and
mov
cmc
push
xorb
push
jae
mov
jl
pop
xchg
jb
pop
pop
sub
pusha
imul
inc
pop
fidivl
cmp
outsb
sbbl
xor
iret
stc
inc
stos
imul
std
sbb
cmc
nop
pop
adc
inc
in
incl
adc
data16
bound
pop
sar
add
sub
pop
cld
cmp
and
lahf
pop
fdivrs
out
outsb
nop
mov
mov
fists
mov
pop
add
pop
add
or
sbb
push
mov
sarb
fildl
mov
sub
scas
fnstsw
cltd
sub
sbb
rcrb
rcrl
inc
fsubp
rolb
divl
daa
pop
lret
push
rorb
fistpl
add
jae
and
xor
mov
push
shr
push
testb
into
push
ja
pop
or
mov
insl
add
sub
add
cld
fisttps
or
jge
or
lret
bnd
add
imul
in
pop
negb
inc
push
mov
aam
mov
and
add
aad
pusha
inc
sbb
or
and
or
add
insb
and
loopne
pop
dec
daa
ffreep
out
loopne
pop
sub
adc
xor
cltd
adcl
fstpl
repnz
insb
loope
sbbl
fadd
cld
mov
push
in
push
int
lds
sub
adc
xor
ja
fisttpll
rorb
cmp
pop
cld
add
sbb
out
ss
inc
sar
cmp
sbb
pop
xchg
mov
xlat
scas
cwtl
sub
pop
pop
dec
mov
arpl
pop
push
push
add
add
push
sub
dec
mov
aad
add
add
out
xchg
mov
in
aaa
fldenv
xorb
fdivrl
outsb
pop
pusha
das
daa
adc
add
xor
pop
sbb
clc
pop
push
repnz
out
and
in
lret
loop
negb
and
aas
fwait
pop
jge
add
pop
xchg
outsl
out
imul
pop
cmp
pop
pop
insb
sbb
cwtl
cltd
push
push
lock
enter
or
jp
or
pop
and
fnstenv
rorl
scas
cmovge
xor
outsl
adc
mov
pop
sbb
mov
sub
and
mov
dec
add
cmp
lret
mov
das
pop
jle
mov
testl
push
rorb
mov
mov
mov
int3
sbb
dec
push
repz
fsubrl
ret
movsb
pop
add
outsl
nop
mov
push
call
inc
cli
fistpl
pop
fwait
pushf
xor
mov
adc
je
push
xor
jns
pop
out
fldcw
rcll
xor
outsl
int
out
push
aas
hlt
stos
pop
adc
cmp
icebp
adc
pop
test
movsb
lret
push
jae
rcrl
test
out
mov
ja
or
sub
xchg
jge
pop
fwait
aam
pop
daa
mov
lret
mov
pop
in
mov
inc
inc
notl
popa
cli
movsb
or
rcr
pop
in
pop
push
push
ficompl
cld
cli
in
sub
add
jg
or
fwait
sbb
or
xor
loop
test
add
pop
mov
and
ljmp
pop
aaa
xchg
xlat
ja
xor
pop
cltd
cmp
adc
cli
xchg
stos
pop
cs
idivb
mov
dec
mov
pop
clc
adc
js
add
push
scas
cli
hlt
xchg
mov
xor
dec
pop
int
push
or
pushl
pop
popa
subb
lock
shlb
adc
bound
xor
shll
dec
cwtl
pusha
pop
mov
dec
addb
out
ret
inc
cld
or
sbb
pop
lea
jne
hlt
cltd
and
inc
cli
aad
enter
dec
add
dec
push
sbb
fidivrl
adc
mov
or
sar
movsb
lock
fs
xorl
lds
pushf
pop
xor
lahf
mov
and
cwtl
pop
xchg
sub
stos
pop
pop
test
sbb
pmaddwd
pushf
pop
loope
mov
add
mov
inc
fisubrl
pop
fnsave
mov
pop
or
mov
push
ljmp
xchg
fsub
xlat
call
cmp
sub
ja
cmp
out
fwait
sti
out
jb
mov
decb
movsl
pop
push
mulb
xor
pop
and
cmpsb
pop
push
loope
mov
and
pop
pop
shlb
subl
loope
insl
pop
and
jecxz
aaa
or
aas
pop
xchg
xchg
cmc
mov
add
movsb
loop
lcall
pop
jecxz
or
mov
add
daa
pop
adc
filds
stos
or
fistl
inc
addr16
scas
pop
hlt
in
sub
push
push
outsl
cmp
subl
roll
lcall
sar
pop
mov
mov
add
push
ja
xor
pop
lods
push
cld
jg
imul
adc
push
pop
sub
push
cmc
xchg
inc
push
mov
mov
push
repz
ds
leave
fcmovne
or
rolb
add
mov
push
shlb
adcl
lret
dec
mov
pop
lods
xor
mov
push
pop
and
fbld
pop
pop
je
xchg
mov
mov
clc
jo
out
andb
adc
xor
loop
rolb
jae
xchg
enter
fsubrs
addr16
pop
leave
add
cmp
aaa
lahf
pop
scas
push
pop
xor
lcall
outsl
pop
mov
pop
rcl
ja
sbbb
stos
pop
inc
push
loope
jne
inc
sti
cld
cmp
nop
mov
jle
mov
bound
xchg
cmp
or
pop
cmpsl
cwtl
adc
add
lret
inc
out
ss
movsl
push
add
sub
popfw
lcall
dec
xchg
inc
xchg
push
gs
test
push
aad
loopne
sbb
in
aam
in
dec
into
fcoml
dec
xor
pop
data16
in
sub
mov
popa
pop
int
adc
imul
dec
testl
testb
pop
add
mov
in
pop
sub
data16
iret
popa
insb
fstps
inc
pop
loope
cmpsb
push
push
xchg
lret
fld
rcll
shr
stos
pushl
ljmp
jno
adc
loop
and
aad
push
xchg
aaa
add
pop
xchg
or
call
bound
jne
mov
pop
js
or
imul
and
in
aas
sub
repnz
fsubl
das
stos
cmc
xor
fadds
pop
or
pushl
pop
loope
xor
jecxz
push
pop
sti
shrb
mov
push
ja
push
loope
pop
sbbl
mov
or
testb
pop
jl
repz
or
lahf
push
fwait
add
clc
adc
subl
pop
test
sbb
pop
icebp
lret
jns
sub
cmp
and
mov
imul
xor
jmp
test
cltd
xchg
pop
adcb
faddl
inc
outsl
in
pop
fs
pop
sub
mov
ss
lods
pop
nop
add
mov
test
in
mov
jge
mov
pop
push
inc
fldt
lret
fiaddl
add
outsl
or
daa
rcl
std
pop
add
arpl
stc
inc
outsb
lcall
imul
push
pusha
pop
outsl
out
movb
mov
mov
or
pop
jae
lods
push
into
fldl
out
cmpsb
cmpsl
adc
mov
push
mov
cmp
cmp
loope
pusha
jbe
pop
mov
nop
pop
mulb
adc
dec
mov
out
push
aam
sbb
pop
add
popa
jno
test
adc
add
int
pop
mov
cmp
jge
add
pop
cwtl
filds
jno
dec
ja
cmp
cltd
into
sbb
repz
add
cmpsl
mov
popf
fcom
fists
popa
mov
mov
pop
push
sbb
fistpl
mov
add
xchg
ficompl
inc
sti
rcrl
add
int
xor
xchg
pop
aad
sub
in
sahf
pop
sub
dec
jle
pop
push
pop
and
sub
add
lods
xor
daa
dec
xor
inc
out
enter
popf
pop
shll
jo
pop
push
repz
fcompl
push
std
rcrl
pop
addl
pushf
cmp
fcmovne
add
cwtl
mov
push
int3
dec
mov
ljmp
push
sub
pop
jbe
pop
xorl
push
pop
add
stos
inc
xor
sub
xor
fimull
push
xchg
cmp
push
cltd
jae
dec
push
xchg
ret
cmp
jle
or
sub
dec
inc
pop
jecxz
dec
dec
mov
or
push
orl
add
mov
pop
add
test
je
or
insb
sub
test
inc
hlt
clc
pop
pop
bound
or
repz
mov
dec
lock
pop
dec
cmp
or
xor
sbb
xor
pop
sub
and
int
lret
push
jo,pn
mov
test
shll
ss
jb
cmp
movsb
lcall
push
xor
pop
shll
cld
pop
pop
sbb
sahf
les
rcll
popa
add
imulb
stc
jle
push
push
mov
popl
mov
pop
ja
out
add
inc
add
xchg
inc
jb
add
pop
and
push
repnz
enter
cld
add
cmp
imul
or
or
lods
pop
addr16
add
push
mov
pop
clc
mov
fisttpl
or
insl
lock
mov
testb
lcall
push
stos
lcall
out
fsubrs
or
sub
xchg
cmp
xchg
icebp
jo
push
ret
pop
add
cmc
cmp
pop
mov
mov
jp
stos
jb
loope
cmp
xchg
dec
push
push
imul
loop
call
mov
rolb
push
dec
add
hlt
cmp
inc
sbbb
and
jge
xlat
push
sbb
stos
lds
call
aaa
nop
dec
push
sub
adc
jo
pop
sar
mov
fcompl
cmp
hlt
or
sbbb
je
inc
iret
pop
mov
or
pushf
insb
adc
dec
push
sbb
cwtl
jle
and
or
das
adc
push
and
fnsave
stos
sub
fdivrs
imul
or
and
enter
and
addb
sbb
arpl
sbb
mov
pop
mov
cmc
add
sbb
mov
hlt
ljmp
lret
xchg
xor
std
pop
push
add
lcall
and
loope
dec
psubw
pop
push
and
in
mov
inc
xor
pop
cmp
mov
pop
ret
dec
test
rol
sub
out
add
pop
loope
xor
adc
pop
movsl
test
cmp
jne
loopne
push
pop
out
push
leave
xor
jo
enter
jp
sbb
xchg
fnstenv
push
mov
mov
mov
push
popa
ret
lcall
mov
dec
adc
icebp
fldl
add
and
fcompl
pop
pushf
js
mov
add
imul
pop
mov
dec
data16
push
add
mov
pop
push
dec
mov
pop
mov
pop
jae
lea
loop
pop
sbbb
out
mov
pop
dec
add
inc
js
icebp
incb
cmpsl
xor
mov
pop
cmp
fadds
jo
test
lods
xorl
fwait
push
push
outsl
stc
inc
add
lds
add
cmp
pop
lret
or
mov
push
ficoms
xchg
cmpsb
add
test
scas
push
push
push
xchg
fisubl
mov
dec
adc
and
aad
push
bound
mov
insl
es
not
in
movsb
push
jg
negl
lock
sub
popa
cmp
inc
mov
fcomps
add
stc
push
enter
outsb
out
addl
fnstenv
insl
cmp
repnz
pop
sub
pop
xor
push
add
sub
cs
mov
adc
daa
mov
pop
pop
test
popa
sbb
mov
dec
or
xorb
les
adc
pop
frstor
imul
data16
jmp
bound
cmp
cmp
icebp
pop
loop
add
or
cld
push
inc
add
lods
cmp
adc
xchg
fucomi
int3
xor
cmp
jg
cli
aas
lods
mov
jno
cmp
sub
outsb
sub
insb
stos
pop
sub
push
ret
pop
lret
mov
mov
imul
mov
ss
mov
dec
pop
pop
xchg
and
add
mov
cmp
cwtl
aam
cli
pop
and
pop
pop
mov
mov
jmp
push
mov
dec
or
cmp
and
pop
dec
sbb
mov
cmp
adc
mov
add
sarl
mov
nop
pop
adc
mov
add
cmp
sbbl
incl
pop
iret
cmc
call
pop
inc
xchg
add
jecxz
cli
scas
push
and
sub
pushf
push
icebp
sbb
shr
clc
ret
addr16
aad
stos
ficompl
pop
dec
out
dec
jno
xor
and
out
sbb
lcall
mov
fwait
mov
fwait
mov
and
cltd
sbb
adc
add
dec
popa
cmp
int
xor
inc
pop
xlat
push
rcll
add
jns
sbb
and
popa
inc
roll
mov
cmpsb
flds
push
pop
mov
sahf
add
ret
or
xchg
in
pop
mov
cltd
shl
pop
mov
add
fwait
imul
and
and
jmp
add
pop
pop
add
and
pop
jmp
sbb
enter
outsl
ficoml
stos
mov
pop
add
push
aaa
sbbl
les
mov
and
pop
mov
es
mov
into
fldenv
mov
fstl
icebp
inc
push
cmp
mov
cmp
pop
nop
jle
or
add
dec
cmp
xorb
cmp
es
mov
cmp
repnz
cli
movsb
int
adc
cmp
inc
and
aaa
push
jne
push
or
mov
pop
lret
fcmovb
xchg
or
xchg
testb
pop
xlat
jne
mov
add
gs
ret
and
push
add
pop
jp
cmp
pop
xchg
sbb
std
ret
mov
pop
subps
fdivrl
xchg
pop
fdivs
jmp
mov
mov
jp
push
xlat
and
jns
pop
fcomps
popa
mov
movsb
lret
push
adc
js
enter
sub
nop
pop
pop
int3
out
inc
and
pop
dec
xor
pop
cmpl
push
pop
jno
test
insl
arpl
mov
pop
int
and
push
dec
or
pop
push
mov
sti
test
pop
scas
sbbb
xor
jp
mov
xor
loop
inc
xchg
sbb
es
mov
jg
sti
jnp
int
xchg
les
cmpsl
shll
mov
pop
outsl
jns
add
jge
mov
push
xor
test
xor
mov
adc
cmp
pusha
pop
into
sbb
stos
scas
loope
and
pop
in
out
cld
out
les
jl
nop
sub
push
push
push
inc
jbe
push
pop
pop
mov
int
jge
repz
or
pop
into
mov
xlat
adc
stc
fsubl
pop
xchg
xor
leave
repz
jmp
sub
lds
mov
addb
movsb
dec
mov
cltd
loop
lods
pop
push
pusha
push
sub
pop
icebp
pop
push
fimuls
add
jnp
cli
add
stc
mov
cmp
or
dec
push
sbb
fwait
adc
lock
mov
jmp
int
add
nop
inc
dec
pop
xor
or
nop
outsb
or
fcmovnb
push
test
pop
xor
sahf
adc
xchg
add
test
test
cltd
adc
sub
pop
fdecstp
or
push
mov
out
dec
pop
jbe
xchg
int
jb
pop
or
pop
mov
adc
data16
out
xor
add
lds
xor
fwait
dec
and
jge
xchg
cmp
or
push
and
adc
dec
stos
cmpsl
adc
mov
and
xchg
leave
sub
sarl
inc
pop
pop
mov
jo
incb
fistpl
add
xor
pop
dec
cs
scas
xor
sti
das
cmp
mov
arpl
adc
in
out
imul
fsubr
sub
fnstcw
mov
mov
lcall
and
and
pop
lea
mov
pop
rcrl
les
add
and
fldl
icebp
cmp
test
lock
sub
pop
scas
std
js
mov
imul
enter
jecxz
nop
shll
lds
add
addr16
es
lret
or
adc
sbb
or
pop
ror
mov
jbe
pop
sarl
jns
cmp
icebp
test
push
in
adc
xor
aad
push
std
outsb
pusha
pop
sbb
popf
sbb
mov
or
pop
or
mov
sub
cs
jmp
add
pop
in
mov
pop
cmp
mov
push
mov
loopne
sub
and
cwtl
inc
in
out
mov
adc
pop
test
mov
pop
faddp
stos
mov
clc
in
and
and
cmc
push
ret
sbbb
push
xlat
jecxz
in
es
mov
enter
popf
xchg
pop
loope
pusha
movsb
jae
add
mov
sub
out
add
cmp
push
pop
rcrb
lods
cmp
pop
push
std
sbb
xor
mov
mov
xchg
sbb
pop
jmp
imul
incl
clc
call
or
inc
fidivrl
pop
or
pop
pop
add
cmp
iret
sbb
pop
mov
in
push
xchg
int
pop
adc
rcl
pop
test
andb
pop
pop
loop
inc
inc
sahf
push
adc
sub
xor
hlt
int3
xchg
outsb
jl
rcrl
add
repnz
sub
int
fdiv
sbb
or
iret
cmc
in
enter
pushf
cmp
pop
pop
pop
repz
fstps
inc
sub
mov
mov
pop
pop
jecxz
and
cmp
test
jle
mov
pop
cmpb
mov
sbb
mov
arpl
pop
jb
js
pop
pop
add
pop
outsl
scas
push
sbb
andl
mov
add
or
ds
rcr
pop
lods
sbb
sahf
sti
or
or
pop
ds
push
mov
test
rcr
mov
loope
mov
inc
pop
popf
lods
add
inc
stos
mov
cmp
pop
ret
xor
dec
and
xrelease
cmp
xor
nop
shr
push
xor
or
fst
stc
ss
fnstenv
pop
lea
mov
and
mov
shr
repnz
enter
and
push
movsb
fbstp
pop
sub
sarl
jb
loopne
push
insl
into
cmp
add
adc
mov
mov
jmp
ret
xor
pop
cmp
inc
mov
push
pop
jg
cmp
mov
scas
shll
inc
out
clc
mov
pop
xor
cmpsb
mov
repnz
lea
sub
push
mov
into
out
in
pop
mov
mov
imul
adc
sti
cmpsl
insb
pop
push
xor
mov
pop
daa
sub
cld
mov
in
add
jns
fistpl
loope
cmpsb
add
add
loope
inc
sbb
subl
fidivl
push
push
mov
mov
jno
and
add
mov
movsl
sbb
cmp
add
jns
icebp
sbb
dec
xor
xlat
shl
out
hlt
aaa
pop
lods
cmpsb
jecxz
dec
adc
mov
fcmove
mov
inc
cltd
mov
pop
push
inc
pop
adcb
or
adc
jle
inc
fstps
mov
cwtl
std
fstpt
lock
lahf
push
and
jle,pn
fwait
inc
loope
add
ficomps
fs
inc
fsubrs
dec
popa
cmpsb
pop
or
push
pop
icebp
push
xchg
inc
push
flds
push
enter
inc
adc
xchg
ljmp
xchg
pop
mov
xor
dec
sbb
in
push
imulb
clc
jecxz
addr16
daa
popa
fwait
cld
mov
inc
pop
decb
adc
add
das
mov
incl
cmp
das
adc
xchg
popa
xchg
pop
jno
jb
add
stos
call
pop
fcompl
repnz
cmp
push
mov
add
lea
pop
shrb
mov
frndint
fnstsw
push
pop
daa
push
xchg
xchg
cmc
xchg
les
or
xlat
loopne
cmpsb
add
inc
jae
jmp
pop
cmp
push
jne
mov
push
push
test
out
rcrb
add
mov
jmp
add
or
jl
adc
inc
sbb
sbb
lahf
and
push
mov
jb
inc
pcmpgtw
push
and
dec
sti
rcrl
imul
sahf
pop
out
and
xchg
popa
stc
cli
cs
jecxz
xchg
mov
pop
fwait
ss
xchg
pop
sbb
pusha
int3
negl
inc
popa
aas
cmp
sbb
cmp
sti
cmp
pop
and
mov
pop
shr
cmp
and
push
faddl
xlat
jmp
add
cs
pop
cmp
jo
adc
lds
adc
fisubrl
aaa
or
dec
jne
jmp
pop
das
js
cmpl
dec
jno
adc
xor
add
pop
pop
mov
andb
int3
aad
fisubl
fcoms
xor
mov
pop
sahf
pop
popa
pop
jl
rcrb
lods
in
imul
pop
add
bound
fstps
xchg
outsl
in
jmp
call
jbe
sub
test
mov
and
xchg
jb
js
movsl
pop
mov
push
enter
pop
sub
sti
pop
pop
test
and
inc
mov
shlb
pop
nop
pop
xor
pop
inc
icebp
jno
adc
xorl
pop
push
add
cmpsb
jb
push
data16
aam
lcall
pop
dec
add
addr16
and
test
addb
loope
idivb
inc
push
pop
add
cltd
cs
sbb
cwtl
stos
push
jne
aas
add
icebp
dec
je
xor
clc
and
sbb
pop
xor
push
push
stc
xchg
sahf
pop
xchg
sub
frstor
pop
jno
dec
mov
arpl
and
mov
pop
out
out
sub
mov
aaa
pop
push
xchg
jmp
cmp
dec
jecxz
pop
add
and
inc
stos
jns
mov
push
or
fiaddl
adc
in
mov
fwait
xchg
dec
aas
jg
jge
pop
mov
pop
scas
pop
fisttps
data16
jno
data16
push
sbb
pop
js
and
repnz
icebp
dec
dec
sub
add
or
pop
cmp
xchg
mov
sbbl
test
movsl
orps
or
daa
or
mov
pushf
pop
popa
orl
lods
xlat
xorl
cmp
pop
or
jecxz
mov
imul
pop
push
cmp
sbb
push
fldcw
loop
or
mov
pop
outsl
inc
les
iret
xlat
outsb
cmp
push
pop
sti
div
mov
pop
mov
inc
cli
xor
jge
pop
adc
push
icebp
push
cmp
lcall
out
xchg
hlt
xchg
pop
insl
fstps
sbb
add
inc
push
xor
push
push
cmpsl
aas
pop
mov
lods
aad
sbb
loopne
pop
sysret
dec
movsl
sub
pushf
pop
pop
mov
lahf
pop
adc
fsts
bound
pop
dec
xchg
xchg
test
pop
push
addl
imul
sub
pop
addr16
je
push
rcrl
mov
cltd
cmp
jmp
xchg
aaa
add
mov
popf
push
lahf
mov
or
jnp
push
pop
loope
push
bound
xor
pop
push
mov
out
call
cmp
jbe
mov
mov
or
mov
push
je
add
jo
fnsave
mov
imul
ljmp
push
sub
subb
mov
rcrb
notl
ja
pop
popf
cli
or
sbbl
add
hlt
call
shl
addr16
lods
xchg
jae
out
push
fstpl
out
or
inc
mov
ret
xor
pop
pop
xchg
dec
ret
push
loope
sbb
test
daa
out
arpl
inc
sbb
dec
xor
cmp
xor
out
andl
test
outsl
nop
jns
xchg
xchg
cmp
sub
mov
mov
test
push
adc
and
filds
push
or
mov
fnsave
pop
shufps
sarl
xchg
inc
mov
test
out
mov
pusha
ficomps
pop
adc
imul
ds
in
loop
push
int
mov
out
jbe
pop
pop
es
adc
nop
sub
sub
fimull
dec
push
xor
cmp
push
std
push
fdivl
push
pusha
in
cltd
xchg
ficoml
rcrb
shll
loopne
nop
mov
std
in
out
pop
movsb
cmp
cmp
lock
push
push
shrl
pop
add
movsl
inc
in
inc
pop
cmc
test
mov
and
mov
lods
mov
mov
jle
jae
ficompl
hlt
inc
pop
shrl
pop
cmp
mov
pop
icebp
add
jno
pop
test
filds
or
fbstp
fnstsw
aas
leave
popa
sbb
enter
pop
mov
cs
mov
pop
rclb
add
cmc
sub
pop
in
push
xchg
dec
cmpsb
loop
aad
mov
or
test
push
test
sbb
jae
pop
fistpl
in
das
pop
pop
dec
adc
in
les
and
ret
adc
stos
xor
mov
fldz
imulb
cs
fdivr
jbe
pop
in
out
icebp
in
fstps
cmp
cmp
shr
mov
or
cmp
add
icebp
insb
jbe
xchg
cltd
and
sbb
lcall
mov
popa
pop
fidivrs
shrl
dec
cmp
jecxz
test
push
lahf
ficoml
shll
pop
test
ret
pop
add
push
loope
jnp
fbstp
pop
mov
int3
addr16
pop
push
push
lock
test
rcrl
xor
js
add
les
xchg
dec
outsb
jp
sahf
fsubrs
pop
or
pop
je
push
stc
popa
lret
and
push
pop
les
sub
cld
int
pop
in
adc
dec
add
and
jno
hlt
add
pop
pop
mov
sbb
mov
xorb
mov
pop
js
pop
ret
enter
or
call
inc
fcmovb
ds
adc
mov
mov
pop
aam
je
arpl
mov
add
enter
sti
imul
cmp
outsl
inc
or
lock
out
dec
test
push
iret
loop
and
loopne
fmuls
pop
sub
cmp
out
stos
sub
mov
dec
cli
pop
aas
mov
nop
nop
push
std
out
jmp
push
jae
sub
pop
lahf
fdivl
rcrb
addr16
fstps
test
mov
popa
das
push
pop
push
aaa
cmpsb
daa
pop
mov
or
pop
mov
xchg
addb
int
pop
jns
in
inc
add
fs
js
addr16
faddp
add
sbb
mov
cwtl
sub
or
inc
mov
add
pop
dec
push
test
dec
push
cld
fcomps
pop
xor
shl
push
pop
sahf
into
dec
filds
cmp
add
test
jbe
pop
xchg
pop
iret
mov
pop
std
dec
inc
adc
sbb
cltd
bound
stos
stc
test
push
ds
pop
fcomps
pop
push
call
ljmp
jno
cld
scas
sbb
out
pop
xchg
push
dec
pop
jbe
add
sub
and
gs
add
shrl
std
imul
inc
or
adc
mov
jp
xchg
pop
or
nop
jno
pop
dec
jb
or
leave
stc
and
rcll
in
jmp
cmpsb
pop
pop
jg
push
sub
mov
pop
xchg
aad
pop
pop
rolb
int3
jl
push
mov
js
fstps
scas
inc
fcmovu
adc
sbb
rcrl
test
loop
xchg
pusha
and
pop
fisubl
mov
mov
jge
add
aam
mov
pop
and
adc
pop
test
push
sbb
sub
mov
pop
add
das
jl
notb
xor
packssdw
cmp
cmc
int
xor
pop
add
push
pop
inc
pop
xchg
pop
ret
inc
fnstcw
pop
push
out
orl
cmp
pop
xchg
fildll
pop
out
test
stc
sub
push
loope
lods
push
inc
jo
gs
jle
cmp
sbb
pop
pop
pop
rcr
insb
add
pushf
lds
add
addr16
push
mov
adc
pop
ret
inc
enter
js
int3
adcb
pop
loop
mov
mov
outsb
fmull
int
pop
push
pop
jecxz
mov
adc
push
mov
adc
lods
cmp
push
pop
xorl
add
rcr
insb
fists
sub
andb
push
bound
pop
adc
add
pop
inc
sub
pop
out
or
incl
fs
sbb
xor
sbb
int3
ret
pop
mov
adc
imul
fs
lds
pop
insb
je
mov
testl
sub
adc
pop
stos
pushf
mov
xchg
ret
jbe
mov
call
pop
loope
cmp
or
dec
pop
int
pop
xor
pop
inc
mov
mov
inc
xchg
adc
stc
scas
stos
add
cmp
in
adc
mov
pop
sbb
pop
or
pop
inc
inc
mov
pop
and
push
push
and
lea
rcl
loope
neg
cmp
pop
fisubrs
dec
std
sbb
cmp
scas
mov
das
xchg
mov
mov
imul
mov
inc
inc
or
xchg
fisubrl
jmp
adc
ds
outsb
fdivr
add
aam
add
pop
cmp
mov
push
and
pop
sti
adc
mov
inc
leave
pop
fisubrl
add
loop
int
jecxz
ret
mov
or
arpl
xchg
cmp
popf
outsb
enter
dec
ret
jle
cmp
jge
repnz
inc
test
aam
add
pop
mov
inc
mov
pop
sbb
pop
dec
jnp
dec
ret
sti
dec
pop
ljmp
test
insl
dec
movsb
pop
nop
sbb
mov
fmul
mov
and
cmp
fwait
push
or
pusha
xchg
adc
or
sbb
mov
add
cmp
outsb
add
insl
dec
fcompl
popa
xchg
mov
cs
fldenv
cltd
jl
jns
pop
and
cmpsb
leave
pop
jle
pop
cmc
fstpl
out
in
inc
sub
nop
pusha
rcr
pop
ret
jb
sbb
dec
and
stc
ja
js
add
xchg
fldt
pop
aaa
loope
faddl
movsb
cmp
jmp
adc
jae
loop
add
pop
mov
enter
or
outsb
mov
loope
xor
outsl
movsl
pop
fmuls
ja
pop
scas
mov
ss
dec
sarl
pop
cmp
pop
or
jo
sub
pop
jbe
jge
push
pop
mov
sbb
and
testl
pop
hlt
xchg
or
clc
cmp
lret
out
jl
mov
mov
shll
aas
cmp
flds
aam
repz
loope
xor
insb
jle
test
sbb
pop
mov
xchg
mov
add
pop
dec
pop
push
or
pop
mov
mov
cwtl
nop
sbb
enter
pop
aad
stos
scas
pop
repz
pop
jno
icebp
add
popf
pop
adc
push
stc
pop
cmc
pushf
int3
andl
icebp
fwait
inc
cmc
out
add
enter
lods
addr16
add
popa
ret
cltd
pop
jno
and
imul
or
and
pop
pop
sbb
dec
rolb
cmp
push
in
cmc
mov
dec
popf
fisubs
jecxz
mov
popa
push
sarl
cmp
cmp
mov
push
xor
clc
pop
or
cmpsl
pushf
cmp
sbb
inc
dec
xchg
fdivs
pop
pop
push
adc
sub
fdivs
ret
cmp
adc
sarb
add
hlt
pop
cmc
out
loope
sbb
mov
popa
or
jge
add
insl
xor
fwait
lock
mov
fdivs
nop
addl
and
fsubrl
hlt
popa
mov
negl
add
add
dec
pop
inc
dec
inc
scas
inc
das
popa
sbbl
fisubl
sbb
add
pop
pop
mov
mov
arpl
cmp
aas
mov
movsl
fisttpl
imul
jle
sbb
fnstcw
xchg
jle
inc
data16
inc
push
jo
mov
mov
push
push
jae
ds
push
mov
push
or
jne
das
push
pop
cmp
push
rol
sub
subl
mov
outsl
xchg
das
imull
mov
xchg
xchg
and
push
insb
pushf
dec
pop
jne
push
nop
and
sbb
into
add
and
mov
je
mov
push
arpl
fstpl
jb
sub
cmp
jns
les
loope
xchg
cmpsl
stc
sub
imul
loopne
pop
out
xchg
mov
sbb
mov
pop
ficompl
xchg
pop
dec
push
arpl
push
push
xor
aam
xchg
pop
shlb
add
jge
jb
mov
xchg
pop
sahf
test
sub
subb
pop
pusha
jne
pop
xchg
sahf
cltd
shlb
sbb
lods
mov
iret
or
scas
mov
add
in
dec
leave
pop
xor
push
andb
pop
sbb
hlt
fnstsw
cwtl
add
inc
mov
stos
pop
pop
jb
dec
sbb
imul
imul
push
insl
icebp
pop
pop
pop
cltd
inc
cmp
dec
pop
addr16
jns
mov
daa
and
jmp
lods
ret
rcl
mov
adc
pop
into
loope
in
enter
out
in
pop
aam
and
sbb
pop
scas
adc
out
and
nop
pop
popf
test
or
mov
add
rcll
data16
sbbl
imul
xchg
mov
jg
push
or
push
xorl
loope
xor
jae
mov
dec
bound
popa
xchg
lods
push
mov
aas
pop
sub
xchg
fnstenv
inc
cmp
es
outsb
adc
addr16
insb
and
or
rcl
mov
pop
fsubrp
loope
fsubr
leave
xor
fisttpll
into
push
pop
shrb
hlt
vaddsd
sbb
jge
pop
cmp
xor
fcomps
mov
mov
cmp
mov
and
pop
cmpsb
push
gs
adc
cltd
les
mov
jle
sbb
cmc
push
pop
pop
lret
jnp
jb
mov
imul
popf
jb
jno
sub
lock
cli
inc
sbb
dec
pop
xchg
add
lcall
lea
pop
mov
mov
stos
sub
fisubrl
aad
mov
xlat
sbb
shl
pop
repz
icebp
cli
jecxz
jmp
pop
mov
or
fdiv
pop
adc
jmp
in
dec
negl
out
sub
sarb
repnz
sbb
add
push
pop
arpl
arpl
push
daa
sub
stos
or
shlb
jge
imul
test
fwait
fwait
jns
pop
addl
outsb
imul
daa
xorb
mov
cltd
bound
and
or
or
push
push
sbb
mov
lret
mov
ljmp
cmc
addr16
cvtps2pd
add
sti
xchg
add
pop
ja
notb
es
into
mov
pop
in
adc
loope
or
sbb
sub
lods
inc
cltd
pop
jecxz
and
sbb
sub
out
in
mov
gs
jns
fcoms
filds
xor
imul
mov
and
loop
out
imulb
negl
es
sbb
pop
pop
jmp
add
sub
mov
or
aad
mov
mov
mov
sbb
repz
call
jecxz
jb
jge
adc
sbb
pop
dec
leave
xor
xor
push
in
clc
and
dec
push
xchg
xor
cmp
sub
xchg
inc
pop
les
push
ret
mov
rcrl
sar
sbb
mov
sahf
inc
push
dec
dec
pop
fs
xchg
cmp
popf
pop
pop
test
nop
inc
pop
bound
xchg
pop
jns
mov
out
push
pop
pop
ljmp
or
jmp
mov
dec
and
and
mov
sub
push
enter
jmp
fldcw
or
pop
and
jo,pn
dec
lcall
fmuls
outsb
jge
sub
mov
sarl
mov
cmc
mov
push
sbb
fcos
sub
iret
pop
mov
pop
pop
mov
jge
cmp
inc
imul
mov
sub
adc
pop
imul
pop
icebp
lods
mov
fistps
xchg
in
stc
mull
sub
aas
mov
xor
sbb
mov
inc
mov
pop
and
ret
pop
fistpl
enter
arpl
insl
shll
xor
inc
mov
xor
or
xchg
test
pop
jns
jge
mov
lds
sbb
outsb
pop
jb
jne
cltd
movsl
fisttpll
loopne
in
orl
pop
xor
pop
cmp
mov
addr16
jge
cmc
lods
inc
std
mov
jecxz
out
scas
idiv
pop
jmp
ffree
jmp
and
pop
fdivrp
push
iret
in
lcall
rcrl
jns
push
icebp
push
or
mov
adc
cmp
stc
dec
push
or
sub
pusha
sbb
cmp
push
das
push
dec
lcall
pop
pop
jnp
lret
dec
mov
xchg
in
push
outsl
sbb
stos
lds
pop
jmp
int
in
ja
lret
ret
sbb
pop
loop
scas
rcr
mov
test
js
or
mov
xchg
stos
pop
mov
jg
xchg
inc
xor
xchg
add
lods
icebp
idiv
inc
jno
jmp
fldt
and
cli
push
dec
jmp
aad
jo
pop
jp
or
mov
sbb
pop
fists
jne
add
push
aaa
adc
fstps
andl
cltd
or
cmp
pop
sbb
xchg
sub
pop
cmp
ret
sbbl
cmpsl
mov
push
jns
mov
lods
les
enter
in
adc
shl
sbb
sub
mov
decl
xor
mov
and
mov
pop
push
lods
push
mov
imul
pop
popl
sbb
cli
mov
push
in
jecxz
negb
jae
lea
loope
je
shr
push
xor
ljmp
imul
xchg
pop
mov
sbb
fcomps
add
ret
adc
push
jne
out
add
or
pop
ficoml
pop
mov
jae
add
push
ja
pop
stc
pop
pop
dec
dec
in
adc
nop
arpl
andl
loop
xchg
cmp
notb
jmp
rcr
mov
test
cltd
xor
mov
fisttpl
sbb
lock
in
rcrl
sub
into
jmp
pop
dec
les
or
pop
arpl
or
sbb
mov
adc
mov
in
pop
cli
adc
and
inc
sub
pop
mov
sbb
cmp
adc
dec
dec
xchg
push
mov
mov
aad
imul
lea
popa
sahf
mov
and
out
mov
jmp
cld
pop
cwtl
insl
pop
adc
daa
lock
cltd
aam
popa
fstl
pop
mov
test
in
es
lods
imul
ret
dec
push
or
push
mov
or
mov
lds
mov
loopne
xor
and
insb
pop
cmp
xchg
pop
push
push
pop
push
lret
popa
test
std
or
stc
xchg
lods
inc
pop
leave
inc
loope
ja
push
cwtl
cltd
mov
fsubs
ljmp
add
sbb
xchg
cltd
in
or
repz
vdivps
mov
jge
mov
ljmp
cld
and
icebp
mov
adc
xor
dec
or
add
int
sbb
out
les
xor
cmp
sub
or
lds
shrb
popa
loope
xchg
lock
popf
mov
cmc
mov
pop
dec
adc
int3
cmp
repz
mov
xor
mov
fdiv
fcomps
push
pop
mov
ret
and
out
stc
and
adc
mov
stos
mov
lods
jns
movsl
and
fsts
or
mov
test
adc
int
cmc
push
das
testl
loope
adc
adc
jno
xchg
pop
fisubrl
jg
cmp
mov
jno
push
dec
jecxz
xor
ljmp
mov
iret
fisubrl
dec
mov
mov
sbb
cmp
mov
in
inc
movb
sbb
inc
in
fisttpl
push
mov
pusha
mov
push
and
sbb
adc
movsb
pop
mov
and
adc
fistpll
js
cmpsl
jns
push
add
mov
xchg
mov
pop
stos
inc
push
mov
adc
movsl
mov
and
adc
ret
cltd
jmp
cmc
stc
iret
mov
popf
mov
xchg
add
data16
in
inc
and
ret
cmp
popl
cmp
adc
sbb
dec
sub
jge
mov
orl
test
or
cmp
loopne
adc
mov
mov
in
or
loop
pop
mov
mov
shrl
mov
mov
xchg
pop
repnz
fnstenv
rcl
sub
pop
hlt
adc
out
and
pop
jne
in
mov
dec
sub
pop
notb
clc
out
xor
xor
enter
jmp
mov
cmp
inc
pop
xchg
aaa
imul
gs
cli
stc
sbb
adc
and
hlt
cmp
decb
cmc
aad
test
adc
xor
imul
and
pop
and
push
std
and
jg
test
jbe
clc
jne
xchg
pop
jecxz
stc
pop
pop
jmp
push
push
jp
cli
dec
int
inc
ret
aad
andl
fdivrl
pusha
stc
sub
in
call
pop
pop
lahf
leave
xor
adcb
xchg
ret
push
lds
or
and
lret
jbe
push
pop
cltd
es
mov
icebp
push
push
dec
pop
jne
outsb
movsl
sbb
push
sbb
stos
pop
push
fcmovnb
jge
mov
jmp
fldcw
cmp
in
mov
cmpsb
call
pop
pop
lcall
pop
inc
sbb
pusha
inc
sbb
pop
cmp
mov
jmp
shll
push
cmp
aad
sub
ret
pop
inc
or
pop
dec
add
jns
cwtl
int
cs
mov
mov
push
cwtl
jno
and
cli
and
pop
pop
inc
nop
cwtl
mov
pop
xchg
popa
xchg
mov
and
push
stc
pop
pop
adc
rcrl
cmc
or
or
pop
flds
xchg
negb
mov
mov
mov
cmp
mov
or
stos
sub
stos
psubb
outsl
inc
dec
jae
jnp
pop
aaa
jno
push
pusha
in
cmpb
shlb
pop
mov
cwtl
imul
bound
sbb
shlb
jo
cli
aad
and
pop
jge
pushf
xchg
adc
popa
pop
leave
lea
shrl
test
cmc
adc
xchg
lods
ret
adc
pop
mov
divb
sub
scas
dec
mov
int
dec
jns
xchg
cli
sbb
push
popa
cmpl
adc
push
movb
mov
mov
adc
xchg
pop
xor
movsl
fimull
inc
enter
or
dec
shll
ja
jne
add
int3
mov
pop
test
jb
lds
add
jge
jne
pop
popa
mov
lea
pop
pop
lods
and
push
adc
push
in
rcll
fidivl
je
dec
push
ror
adc
pop
icebp
cmp
inc
push
hlt
daa
stc
xadd
mov
jecxz
repz
loopne
push
adc
sub
dec
jnp
mov
scas
or
xlat
or
gs
call
pop
cmc
or
pop
mov
pushf
lods
les
insl
dec
loop
sarb
adc
mov
sbb
jne
jns
mov
stc
adc
xchg
jb
ret
shlb
push
ljmp
dec
add
sbb
fs
mov
push
shr
mov
lcall
push
pop
gs
pop
push
rorb
add
sbb
adc
jl
movsl
pop
push
adc
pop
icebp
and
es
or
shlb
mov
dec
jp
lret
pop
or
std
ret
xor
push
jno
pop
xlat
push
pop
push
or
dec
sub
lods
fxch
test
mov
lcall
fistps
mov
notl
mov
pop
mov
push
inc
in
lea
mov
insl
and
popa
add
aas
mov
or
dec
ret
lea
aad
sbb
in
pop
das
out
loope
cld
mov
mov
sbb
and
dec
and
mov
or
mov
push
fdivrs
movsl
sbb
jge
jns
pop
pop
xor
lret
adc
loopne
adc
xor
cmp
out
cmp
mov
bound
lea
mov
mov
jns
cltd
or
push
mov
pop
adc
adc
mov
mov
dec
dec
cmp
xor
out
xchg
shll
mov
mov
cs
outsb
pop
fisubs
popa
in
push
dec
test
outsb
pop
xchg
push
mov
pop
rorb
sbb
xchg
adcb
popa
pop
push
stos
mov
mov
addr16
outsl
dec
mov
pop
in
cwtl
mov
lea
test
jne
loope
or
mov
xor
sbb
pop
shll
ss
or
testb
loope
es
xchg
jmp
sbb
inc
mov
jno
mov
pop
push
push
xchg
lods
fwait
jne
pop
xor
jno
ja
push
xchg
push
outsb
mov
sbb
mov
leave
lret
rcl
test
sub
xchg
cltd
pop
cmp
ja
stos
shrl
pop
cld
lea
sub
rcr
push
hlt
fdiv
fadds
int
lds
pop
bound
nop
icebp
jae
mov
pop
mov
test
mov
js
pop
or
popf
lahf
shl
pop
roll
cmp
pop
xchg
nop
push
ret
in
mov
add
xorl
mov
call
loope
pop
adc
or
mov
xor
and
xchg
sbb
push
sub
pop
jge
sub
inc
icebp
sbbb
jp
leave
fwait
or
mov
mov
shll
out
push
xor
mov
xor
xor
data16
pop
gs
cmp
sbb
inc
daa
cmp
int
pop
popa
fsubr
cmp
sub
and
adc
push
mov
xor
pop
adc
into
stc
scas
add
std
pop
std
push
lea
iret
les
pop
pop
pushf
inc
xchg
or
leave
loopne
pop
popa
test
mov
daa
push
rcrb
inc
mov
movsl
add
sarl
in
pop
jns
sbb
popa
aad
and
push
daa
lods
xor
cmp
pop
push
cld
sbb
pop
iret
stc
movsb
sub
in
int
ret
or
test
adc
pop
xor
jle
sbb
pop
call
push
stos
outsb
adc
pop
push
mov
pop
and
add
pop
xor
xchg
jb
mov
imul
sub
ljmp
sbb
add
inc
or
lods
mov
add
dec
mov
stos
pop
mov
ror
inc
mov
pop
push
arpl
pop
or
in
insl
pop
iret
jns
pop
dec
or
jnp
push
test
stos
ds
jmp
dec
imul
popa
lcall
adc
jo
mov
push
and
and
fidivrl
dec
inc
fwait
mov
fnsave
adc
pop
cwtl
or
jge
rcrl
ljmp
and
push
es
mov
sub
or
ffreep
aas
cmp
push
outsb
jo
cwtl
adc
jnp
movsl
xor
std
xchg
arpl
cmp
inc
jge
pop
cwtl
cwtl
jmp
pop
lock
pop
dec
add
sbb
ja
dec
sbb
xchg
rol
fisttpl
shlb
adc
push
stos
dec
lea
add
orb
rol
sahf
pop
in
leave
shl
arpl
pop
cmpsl
mov
push
mov
sbbb
les
mov
sub
jecxz
inc
pop
push
jo
movl
pop
stc
ja
gs
bound
mov
add
and
mov
or
push
cvtpi2ps
mov
push
dec
popa
cmpb
push
or
mov
pop
or
icebp
into
sbb
mov
shll
cli
in
mov
add
pop
mov
je
pop
inc
cmp
mov
jns
test
jge
adc
inc
jle
push
lds
xchg
jns
loope
jne
mov
or
and
cmp
push
sub
inc
cmc
sbb
inc
std
pop
into
or
aad
or
sahf
pop
jecxz
and
or
jne
test
and
scas
pop
dec
rcl
xor
mov
divl
inc
pop
jg
dec
jl
aam
pop
and
xchg
cmc
insb
cmp
push
inc
cmp
inc
jbe
bound
cmc
pop
and
stos
test
dec
sbbl
mov
push
rorb
cmp
dec
hlt
inc
stc
lret
or
push
test
or
dec
mov
cmp
icebp
in
fwait
mov
fs
cmpsl
mov
fnsave
sar
sub
rcrl
and
vmread
mov
sbb
and
in
add
cmc
push
arpl
or
or
push
push
xchg
jmp
pop
movsl
out
or
pop
pop
aam
fxch
lret
cmp
ret
mov
int
jne,pn
cmp
in
jmp
mov
out
pop
cld
xchg
jge
popf
fwait
leave
jno
repz
push
aad
xchg
movsl
mov
cmp
mov
xor
pop
mov
sbb
cwtl
roll
sbb
pop
push
xchg
cmp
shrb
pop
movsl
in
or
dec
addl
dec
test
or
adc
and
xchg
or
stos
mov
mov
fwait
lods
ret
xlat
jo
sbb
test
cmp
mov
push
stos
jnp
xchg
aam
int
clc
loop
cmp
ror
dec
xor
sub
addb
cmp
lcall
nop
adc
rcrl
pop
or
sbbb
push
dec
mov
mov
sub
lds
shl
add
mov
movnti
xchg
jne
in
push
jge
mov
pop
lods
cmp
lret
dec
rclb
or
stos
pop
or
enter
mov
imulb
mov
outsb
roll
xor
popa
inc
lds
popf
dec
or
mov
inc
lea
push
and
fidivrl
dec
mov
popf
sbb
cmpsl
sub
pop
mov
out
xor
ret
or
daa
mov
cltd
mov
fildll
sbb
je
les
fwait
jae
inc
dec
popf
es
test
call
sahf
mov
push
push
mov
out
test
movsl
lods
loope
mov
or
das
pop
adcl
cmpsb
mov
mov
data16
jb
stc
mov
push
shlb
leave
add
mov
ret
imul
cwtl
xchg
pop
test
xorl
mov
imul
lcall
es
daa
pop
sub
mov
sarl
jge
mov
mov
sub
fcmovne
rcll
jns
jo
sbb
movsl
sbb
dec
xchg
orl
fstps
jle
pop
pop
lds
iret
or
xor
std
adc
dec
push
clc
or
sub
pop
pop
mov
cwtl
pop
dec
cmpsb
fidivrl
loop
push
add
fwait
jecxz
mov
pop
fcomps
das
lret
stc
or
cmp
adc
lcall
pop
movb
int
push
push
addr16
test
dec
insl
jno
pop
mov
js
adcb
es
jecxz
inc
cltd
imul
int3
add
sub
xchg
repz
jns
push
cwtl
addl
nop
push
pop
pop
imul
inc
dec
dec
mov
jbe
xchg
jl
lea
xchg
adc
fwait
sahf
mov
xchg
pop
lea
sub
jns
push
jb
xchg
sub
xor
push
and
movl
pop
sarl
lods
xchg
pop
orl
dec
pusha
sub
int
cmp
mov
sub
mov
pop
subl
ret
push
stos
rorb
adc
xchg
xchg
test
xchg
stos
std
push
inc
lahf
fbld
mov
mov
push
lcall
sub
pop
pop
or
xchg
xorb
mov
adc
fwait
xchg
jge
sbb
push
cmpb
shlb
mov
push
xchg
dec
jo
cltd
dec
dec
in
push
sub
or
mov
ret
test
test
mov
push
ss
mov
pop
pop
andl
adc
mov
rol
pop
arpl
mov
fnstcw
adc
imul
gs
pop
les
adc
sar
cmp
mov
test
ss
sbb
mov
idivl
clc
jb
movsl
jns
cltd
cmpb
sahf
movsb
les
mov
push
loop
jno,pt
ret
in
repnz
clc
popa
fneni(8087
mov
jmp
aam
sub
imul
and
sbbl
aad
or
add
pop
xchg
inc
popa
pop
rcl
stc
aam
jecxz
movsb
outsb
scas
pop
push
dec
dec
jge
jb
xchg
push
jmp
push
in
loopne
std
cmp
cwtl
cmp
push
inc
or
cmp
int3
fsubrl
pop
loopne
hlt
add
out
and
jmp
sarb
pop
inc
testl
std
and
push
sub
sub
xor
dec
icebp
insb
add
cltd
iret
ficoms
fbstp
repz
gs
fsub
fld
aad
sub
add
test
lcall
inc
sbb
jo
popa
xor
push
aad
cmpsl
pop
pop
out
cmp
pop
cmp
xor
jecxz
pop
negb
xchg
test
outsb
int
pop
insl
and
add
or
stc
dec
jb
push
stos
push
xchg
fdivrs
push
lahf
adcl
lds
fstp
rcr
sbb
out
pop
pop
mov
aad
in
push
mov
ret
dec
pop
pop
push
stc
inc
jg
and
xchg
sbb
icebp
jne
shl
clc
push
mov
pop
fstl
add
push
jmp
and
or
test
or
dec
push
sub
mov
lret
stos
sbb
dec
cmc
pop
adc
leave
or
push
push
lret
add
lds
leave
fnstenv
out
mov
jne
lret
fwait
scas
mov
pop
lea
iret
add
lret
ficomps
fucomi
pusha
out
lds
pop
sub
repz
pop
adc
movsl
aad
loopne
std
push
pop
icebp
push
aas
add
outsb
pusha
cmp
cli
into
pop
inc
adc
xchg
ss
or
push
rorl
or
ficoml
sbb
pop
xchg
stc
push
push
pop
bound
loop
fucom
dec
jns
adc
jmp
jge
pop
imul
add
lods
cli
inc
mov
call
dec
xlat
mov
pop
adc
hlt
xor
push
test
dec
xorl
jp
jge
in
aad
pop
mov
xchg
jmp
cmp
pop
dec
mov
aad
test
pop
cmp
push
push
jno
repz
in
insb
cmp
mov
inc
and
pop
inc
inc
cmp
sbb
xor
jge
push
push
pop
cmp
sub
jge
pop
pop
sbb
mov
adc
cmpsb
mov
sub
loope
dec
pop
flds
jmp
js
stos
aad
dec
push
div
pop
cli
lret
sbb
xor
fwait
mov
stc
mov
loope
arpl
dec
mov
jne
inc
notb
dec
in
cmc
stc
pop
pushf
std
sub
gs
sbb
arpl
mov
fcompl
pop
and
in
andl
mov
aas
fldcw
rcrl
cmp
stos
push
push
push
cmp
pop
sbb
scas
dec
mov
jns
jns
xor
mov
xchg
sub
push
lcall
sbb
cli
loop
clc
test
ds
lods
push
test
cltd
mov
jnp
arpl
xchg
and
mov
mov
test
push
fldcw
push
arpl
and
pop
fadds
xor
add
push
dec
sbb
nop
rcrl
icebp
dec
lea
jmp
jecxz
jge
mov
mov
mov
out
outsl
jle
add
add
hlt
and
jbe
std
std
inc
fcomp
ret
push
mov
cltd
dec
lcall
push
push
xadd
pop
mov
andl
and
fwait
add
mov
roll
adc
std
mov
pop
test
and
push
mov
adcb
negb
or
cli
mov
inc
push
lds
std
rcrl
loop
andl
popf
iret
add
das
mov
lods
ret
icebp
push
mov
popa
shl
pop
add
subb
push
loope
adc
push
add
fsubl
push
pop
dec
mov
xor
lods
rcrl
cmp
mov
in
mov
pop
fcomps
xor
insl
jge
mov
jecxz
fwait
sbb
in
add
sub
push
mov
addr16
cmp
rcrb
push
sbb
or
popf
push
adc
and
daa
repnz
adc
pop
out
cmpsl
dec
mov
pop
popf
ss
dec
push
jne
xchg
out
or
xor
xchg
pop
pushf
sbb
mov
enter
lret
dec
dec
mov
jmp
in
and
rcl
ret
test
rclb
lds
mov
es
sbb
repz
pop
add
fsubs
adc
mov
bound
gs
dec
arpl
or
rorl
xchg
adc
add
pop
loop
loope
icebp
jmp
inc
cmc
jae
lret
pop
loop
shrl
xchg
cmp
mov
add
fdivs
fst
cmc
and
dec
dec
push
and
pop
push
mov
jecxz
xor
sbb
push
mov
push
test
popa
jl
mov
nop
mov
pushf
aaa
sub
pop
mov
dec
loop
pop
inc
nop
rorl
insl
test
dec
xor
je
jl
mov
mov
into
cltd
shll
or
aad
cmp
and
test
sbb
es
loop
xchg
push
or
icebp
sbb
lret
or
xor
xor
pop
scas
sub
jge
mov
sub
cmp
pop
test
outsb
or
jbe
pop
pop
push
fs
and
mov
mov
dec
icebp
and
sbb
popf
xor
mov
sbb
push
xlat
cmp
pop
cltd
loope
ljmp
orl
dec
std
dec
mov
aaa
dec
adc
adc
pop
sbb
push
je
push
push
xor
fidivrl
or
lcall
sbb
lea
push
adc
negl
and
cmc
dec
adcl
push
leave
mov
fdivr
and
lret
cmpsb
sub
into
pop
and
and
and
xlat
or
pop
sbb
aaa
push
add
adc
inc
lds
push
xchg
or
push
add
jns
pop
dec
lds
pop
lock
icebp
inc
cmc
and
stc
or
pop
adc
add
test
inc
xor
jno
pusha
dec
lods
or
inc
mov
or
loop
lods
sahf
cmp
push
outsb
imul
cs
inc
pop
pop
pop
inc
cmp
and
pop
mov
insl
mov
xor
or
lret
into
int
dec
pop
repnz
xchg
dec
jge
sbb
cmpsl
mov
movsb
lds
adc
orb
pop
xchg
dec
aad
xor
dec
cli
daa
inc
fcomps
imul
test
mov
fsts
and
adcl
xor
aam
inc
push
pop
mov
or
push
push
xchg
je
sbb
test
shrl
cmp
add
jne
mulb
gs
sahf
xchg
mov
xchg
aaa
xchg
pop
mov
pop
pop
jns
sub
cmc
xlat
sbb
stc
adc
mov
fstpl
pop
lods
push
push
cli
ror
push
lods
adc
repnz
fsub
or
jecxz
jno
leave
fadd
rorb
and
push
std
fadds
dec
jo
xchg
ds
insb
es
or
xor
std
popa
push
pop
mov
and
aad
daa
pop
push
fstpl
test
and
pop
mov
mov
or
mov
stc
adc
jmp
jle
mov
popf
ljmp
or
mov
loop
ret
mov
mov
test
jnp
push
mov
pop
fnstenv
sbb
cmpsl
les
pop
pop
sbbl
sub
push
pop
sahf
cmpsb
lods
sub
mov
ret
cmpsl
cmp
jecxz
insb
cmp
fsub
pushf
clc
fwait
scas
mov
dec
aas
das
xor
xchg
sub
push
pop
xor
std
xor
pop
cli
jns
inc
push
jno
push
pop
and
sub
fsubr
inc
call
pop
xor
scas
jb
push
popa
dec
pop
push
pop
xchg
jecxz
push
mov
pop
vmovmskps
sub
into
pop
fdivrs
imul
or
and
jb
xorl
mov
cmp
cli
mov
add
pop
ja
mov
andb
dec
mov
sti
add
lret
in
sbb
insl
add
pop
jns
mov
das
loope
iret
pop
jmp
pop
pop
int
cmp
cmp
movsb
pop
cs
loop
push
pop
cmp
pop
sbb
inc
stc
dec
lahf
insl
rcrb
xchg
mov
in
add
dec
mov
rorl
lods
push
stc
and
femms
inc
sub
pop
pop
int
mov
ljmp
popf
inc
icebp
cmpsl
cli
xlat
mov
std
lea
cld
pop
hlt
sub
adc
push
push
add
cmp
mov
out
stos
xchg
add
pop
push
pop
aaa
sbb
and
es
push
adc
inc
fimuls
pop
jns
mov
pop
mov
adc
out
mov
rorb
pop
or
icebp
out
mov
pop
daa
ret
mov
loope
call
leave
ss
and
pop
cmp
jp
xchg
movsb
popa
sbb
rcrb
pop
jb
js
inc
pop
adc
out
cmp
cld
cmp
xchg
and
pop
xor
and
push
std
or
lds
sbb
mov
add
data16
gs
jns
fistpll
push
sbb
cmp
repnz
out
xchg
pop
mov
pop
pop
sbb
fldl
pop
jmp
dec
lds
pop
adc
test
pop
out
xor
mov
cmp
mov
outsb
cltd
imul
sbb
test
loope
int
cmp
pop
mov
roll
push
push
pop
sahf
mov
inc
push
jno
jp
xor
pop
or
pop
mov
inc
popf
dec
push
dec
jns
or
sahf
cmp
mov
cs
andl
mov
push
mov
adc
andl
and
pop
adc
xor
pop
or
call
sub
scas
inc
jb
jge
js
pop
xchg
andl
or
inc
loope
cmp
sbb
xor
shl
mov
pop
daa
dec
idivb
cmp
stc
inc
or
fldenv
mov
inc
out
push
imul
sbb
pop
jns
push
xlat
insl
imull
testb
pop
mov
in
loop
test
dec
pop
inc
mov
andb
repnz
cmp
out
mov
sar
mov
addl
push
sbb
lods
push
test
mov
pop
ret
pop
stos
jp
fisttps
xor
pop
movsl
pop
fldenv
es
push
or
iret
shll
push
cmp
stos
stos
sub
int3
ds
jno
es
add
push
pop
popa
pop
mov
shrl
pop
movsb
pop
lods
mov
dec
stc
stos
or
jae
xchg
push
sbb
lods
pop
imul
pop
push
push
test
movsl
aas
or
xor
roll
fistpl
mov
lret
cmp
and
cmp
imul
mov
test
iret
insl
aam
pop
ret
xor
push
xchg
dec
and
sbb
test
sbb
negl
and
adc
subl
mov
push
add
jp
popf
add
addr16
out
orl
sbb
pop
push
fwait
xor
scas
xchg
sbb
pop
mov
lods
mov
mov
mov
sub
sbb
pushf
mov
mov
cmp
nop
push
pop
sar
and
jmp
cmp
mov
add
rcl
std
sbb
lea
pop
jno
inc
andps
sub
jecxz
lods
cmp
push
add
push
adc
inc
pop
inc
xchg
flds
sbb
push
inc
or
rcrl
rol
sub
pop
int
sbb
daa
sub
fstl
pop
push
mov
add
call
xchg
in
xchg
pop
test
iret
push
test
lea
adc
addr16
or
stc
setne
mov
mov
sub
cmp
jne
dec
jl
sbb
jb
or
mov
sub
aam
lcall
sbb
jp
mov
outsb
dec
dec
push
adc
dec
cmp
popa
dec
add
sbb
clc
mov
cwtl
and
xchg
jns
ret
sub
adc
xchg
add
xor
dec
mov
inc
cmp
arpl
adc
clc
rorl
ret
add
outsl
pop
in
jns
lret
and
add
and
adc
das
test
lcall
xchg
and
xchg
pop
xor
inc
xor
pop
push
add
popa
mov
jo
mov
loop
jno
sbb
dec
mov
or
adc
ds
pusha
fimull
push
and
and
push
xor
pop
inc
xor
push
adc
jns
push
xorb
cltd
int
xor
loop
inc
and
inc
push
das
rcrl
dec
pusha
aad
sub
bound
es
push
jb
pop
and
mov
sbb
jmp
push
fsubrs
or
pop
adc
std
data16
sbb
mov
outsl
cltd
lods
pop
xchg
and
mov
and
loope
jge
es
sbb
js
iret
cmp
ret
mov
std
daa
test
jp
add
mov
adc
pop
movsb
and
or
sbb
jnp
or
xchg
addl
jge
mov
jnp
mov
fcoms
xor
add
or
andl
adc
inc
and
out
inc
nop
fiadds
ja
mov
jg
std
and
jno
mov
sub
adc
or
stc
xor
add
jge
call
jg
xchg
mov
and
pop
adcb
mov
subl
sub
adc
andb
fsubrs
sarl
mov
pop
pusha
rcll
addl
inc
inc
sbb
mov
inc
bound
fsts
test
mov
mov
ds
inc
xor
add
inc
xchg
add
hlt
subl
sub
addb
repnz
mov
mov
cltd
inc
pop
xor
and
jne
icebp
lea
inc
mov
and
add
mov
fwait
jmp
stc
sahf
xor
pop
rcll
mov
cli
dec
rolb
in
and
cmp
add
dec
pop
rcrl
push
cltd
mov
mov
sub
dec
mov
and
fwait
sbb
adc
lds
std
lcall
enter
fsts
out
mov
leave
stc
or
loop
pushf
adc
adc
enter
mov
and
pop
mov
mov
lds
movsb
cmp
xchg
imul
jno
mov
inc
add
push
mov
sahf
ret
xchg
repz
dec
and
ss
mov
jge
xor
jne
cli
arpl
idivl
mov
test
dec
imul
cmp
test
pop
sahf
int3
test
lds
stos
nop
adc
roll
std
dec
push
fwait
icebp
xor
sahf
push
loope
and
xchg
push
jge
lock
sub
mov
dec
rolb
cwtl
xor
fildll
ret
imul
mov
leave
pop
mov
inc
stc
mov
jo
add
test
inc
mov
jno
pop
push
jb
adc
sub
xor
push
add
dec
and
in
pop
push
leave
pop
pop
push
fsts
mov
lret
jmp
inc
xor
adc
fistps
inc
add
in
mov
push
pop
enter
rcll
mov
cvtpi2ps
sub
dec
inc
sar
sbb
push
cmp
jno
test
push
pop
jne
jecxz
lret
dec
mov
flds
jno
jmp
pop
push
xchg
mov
mov
mov
add
add
or
bound
sbb
add
roll
das
lods
cwtl
test
or
mov
pop
push
sub
jg
imul
xor
and
push
sbb
or
jl
adc
mov
stos
xor
adc
mov
pop
test
mov
pop
enter
or
inc
mov
xor
adc
inc
into
and
shll
gs
arpl
or
push
xchg
dec
outsb
xchg
fs
inc
mov
inc
jmp
popa
data16
mov
cmpsb
add
addr16
sub
cwtl
pop
cmp
dec
in
push
xchg
frstor
pop
dec
sub
push
daa
or
push
mov
push
lcall
addr16
xor
push
or
jmp
pusha
adc
in
dec
cmp
inc
pop
loopne
and
push
mov
adc
xor
pop
fidivs
dec
adc
mov
jge
adc
sbb
pop
fmull
cmp
xor
dec
out
int
pop
or
sub
adc
icebp
xor
push
mov
mov
pop
xlat
divb
ja
in
rcr
mov
rorl
sbbl
sub
aam
test
pop
mov
jl
leave
jmp
dec
add
jno
outsb
xor
cmp
pop
adc
mov
jmp
add
push
movsl
pop
jp
and
add
arpl
ret
insl
pop
inc
adc
and
flds
cmp
adc
adc
xchg
nop
inc
inc
icebp
mov
xchg
add
push
dec
push
xor
xor
fldt
sbb
inc
push
sub
in
repz
cmc
jno
cmp
jns
pop
pop
rcrl
test
int3
aaa
es
fstps
push
aam
add
cmp
cmpsl
test
push
jle
lods
shll
pop
sbb
enter
imul
in
pop
fimuls
imul
es
test
adc
and
or
pop
sbb
imul
flds
jo
and
xchg
jmp
add
dec
adc
loop
int
xor
or
and
cmp
pop
sahf
xchg
test
push
mov
enter
pop
test
mov
dec
dec
imul
test
sbb
mov
imul
repnz
add
jb
adc
fnstenv
dec
nop
xlat
pop
jae
push
xchg
fwait
mov
pop
cmpsl
popa
cmp
add
add
xchg
fcomps
mov
sbb
and
add
cmp
pop
addr16
xlat
daa
jb
sbb
fstpl
fadds
lds
outsl
adc
sahf
push
xchg
fwait
xor
adc
pop
in
fld
adc
sahf
jecxz
sub
shrl
or
inc
pop
in
ret
add
push
pop
and
add
sbb
inc
or
xchg
xorl
sbb
add
flds
and
aaa
pop
add
cld
pop
repz
pop
fstps
adc
cmp
dec
jns
int3
rol
inc
add
sbb
jno
pop
addl
pop
push
and
inc
xchg
fsubrs
or
sbb
adc
clc
jecxz
loop
inc
outsl
js
push
or
pop
sbb
xor
fisttps
mov
shll
push
clc
ds
push
pop
xor
sarl
test
dec
xchg
outsb
ret
mov
sbb
sbb
dec
test
xchg
or
sbb
sub
jnp
dec
cmpsb
push
adc
sub
dec
movsb
sub
pusha
dec
fidivs
mov
out
test
pusha
pop
xor
xchg
lods
xchg
cmp
adc
add
mov
push
dec
in
notl
sbb
pop
mov
popa
in
pop
or
jno
mov
fs
jmp
adc
pop
or
andl
adc
dec
or
or
and
mov
ljmp
push
inc
cli
push
xchg
cmp
mov
ss
andl
sbb
daa
mov
in
jns
jo
nop
dec
xchg
dec
subl
push
movsb
pop
sbb
add
ss
sub
sti
cmp
lods
popa
and
pop
inc
dec
sub
and
or
pop
adc
arpl
push
sub
add
xor
pop
inc
cmpsb
sub
or
adc
jbe
jecxz
sub
xor
jae
xchg
sbb
shll
adc
push
pop
and
jp
dec
dec
jnp
jns
pop
aam
push
xchg
enter
add
sti
xchg
inc
dec
rcrl
and
adc
leave
dec
cmp
pop
and
mov
push
pop
sub
leave
loope
push
pop
mov
inc
push
push
sarl
inc
adc
pop
ljmp
cli
inc
jno
push
and
pop
cmp
jbe
sti
sahf
loopne
push
fiadds
popa
pop
and
sub
mov
or
rep
cwtl
adc
nop
xchg
fnstsw
push
xor
ds
cwtl
test
pop
cli
test
cmp
shl
pop
cmp
aam
mov
out
jge
aaa
pop
ds
sahf
pop
add
cmp
call
xor
push
mov
inc
rcrl
lahf
ds
add
mov
sub
icebp
push
ret
push
mov
and
push
scas
adc
jnp
adc
adcl
daa
pop
mov
sahf
push
mov
mov
adc
push
xor
inc
lds
cmp
test
cmp
rcr
pusha
pop
dec
popa
sti
pop
inc
and
icebp
sbb
cmp
sub
arpl
add
or
inc
rcrl
lods
adcl
jns
push
mov
and
push
cmp
push
dec
xor
sub
push
add
hlt
mov
jnp
adc
imul
mov
inc
fisubl
mov
pop
inc
mov
xor
pop
add
sub
mov
inc
push
test
mov
shrl
ficompl
push
and
jae
mov
daa
test
fsubrs
movsb
rclb
imul
jae
arpl
xor
popf
push
shl
fwait
sub
cmp
adc
mov
pop
inc
mov
jno
mov
test
sarb
xchg
call
cmp
je
mov
pop
sbbl
xor
push
cmp
or
jl
sbb
lods
xchg
and
loope
mov
mov
mov
dec
mov
int3
pop
and
clc
or
loopne
jno
enter
xchg
push
inc
add
jmp
adc
push
in
sbb
jae
flds
pop
lds
cltd
pop
xor
or
sbb
push
xchg
or
ficoml
sbb
or
mov
pushf
fwait
mov
mov
or
pop
int
xchg
test
loope
push
cmp
xor
lea
adc
pushf
movsl
lcall
xor
cmp
fnstenv
sub
aaa
test
pop
adc
es
xor
inc
inc
mov
inc
mov
cmp
xchg
dec
cwtl
cld
pop
xchg
andl
mov
pop
repnz
inc
ret
add
mov
es
dec
loope
shr
addl
inc
popa
dec
pop
adc
movsb
and
test
jl
sbb
push
adc
inc
prefetch
jg
cmp
arpl
sbb
cmp
jg
pop
add
cmp
pop
incl
push
cmp
push
cmp
fistps
fbstp
rclb
or
inc
jmp
or
js
insl
sbb
add
inc
lock
push
pop
xor
add
jo
xchg
pop
scas
call
or
lock
repz
cmp
ljmp
ljmp
push
jns
loop
pop
lods
jae
push
test
xor
pop
push
int
std
pop
add
adc
sbbl
jno
dec
add
mov
nop
push
or
loope
push
cs
mov
add
xor
and
xor
jecxz
popf
pop
pop
movsb
fs
push
mov
imul
stc
push
lds
jbe
pop
or
enter
mov
inc
mov
sbb
dec
mov
sbb
es
lahf
jbe
pop
sub
call
push
imul
cmp
pop
test
cwtl
sbb
add
xor
or
iret
cmp
pop
add
xor
bswap
imul
pop
addl
dec
mov
inc
mov
mov
jle
and
shrl
sbb
enter
adc
das
out
pop
fidivrs
mov
scas
outsl
lahf
pop
sbb
scas
outsb
sahf
pop
fisttpl
cmp
add
xor
pop
or
cmp
pop
in
xor
mov
jnp
inc
mov
cmp
xchg
jbe
sub
sbb
add
out
pop
push
daa
jecxz
pop
pop
stos
imul
push
pop
stos
push
pop
cmpsb
xchg
pop
push
jno
mov
pop
aad
pop
jb
jbe
sub
pop
test
and
push
mov
daa
sbb
push
rorl
inc
pop
mov
or
cmp
mov
or
or
pop
add
stc
jl
inc
les
inc
mov
subl
mov
mov
je
test
pop
scas
xchg
stc
daa
sub
bound
adc
ss
adc
pop
xor
cmp
or
adc
mov
mov
ror
inc
xchg
enter
addl
jb
jno
pop
out
data16
jns
ja
add
outsl
xor
pop
adc
test
ja
adc
pop
pushf
sub
jl
stc
push
addb
and
pop
loope
leave
xor
jp
pop
add
je
lea
pop
jno
inc
push
insl
adc
pop
jp
sbb
pop
sti
sbb
sbb
push
mov
mov
cli
das
nop
pop
filds
mov
xchg
xchg
and
in
nop
sbb
dec
push
data16
call
dec
fs
add
cmp
xor
or
sbb
push
mov
inc
mov
stos
mov
push
sbb
and
dec
jns
stc
loope
sbb
fcoms
jno
gs
push
arpl
fs
jns
ja
cmp
leave
push
mov
subb
rcll
in
test
iret
push
bound
je
or
push
outsb
cmp
jno
shll
repnz
xor
pop
test
ds
std
jae
cmc
je
nop
xchg
mov
dec
test
out
jmp
push
pusha
dec
aas
sub
clc
gs
push
inc
lock
rcrl
xorl
js
xchg
sarl
sub
lret
pusha
rcrl
lea
mov
xchg
pop
cs
jbe
jg
push
je
in
dec
sub
ja
popa
jb
js
pop
jle
adcl
inc
sahf
push
arpl
jmp
es
repz
inc
add
or
add
lea
jbe
out
pop
icebp
out
pop
lods
mov
or
sahf
adc
and
inc
out
pop
xorl
es
pushf
xchg
pop
aam
lock
test
jecxz
push
inc
push
cmc
jo
loope
pop
dec
xlat
jle
xor
lahf
push
pop
inc
neg
pop
cltd
sub
push
loope
and
and
xor
mov
mov
or
dec
into
fstps
pop
rol
pop
sbb
push
xchg
cmp
sbb
sub
pop
in
and
std
daa
adc
mov
lds
jl
inc
push
mov
dec
push
daa
sub
ret
mov
mov
fcomip
xor
inc
jno
dec
into
dec
sbb
mov
lret
xchg
sbb
inc
mov
jo
or
sti
adc
xchg
xor
xlat
mov
mov
xchg
stc
pop
roll
xchg
xchg
cli
cmp
insb
cmpsb
hlt
fdivrs
xchg
pop
or
ja
and
jno
pop
in
aaa
outsl
je
sbbb
addr16
adc
cmp
cmp
push
jmp
cltd
push
mov
fucomi
loope
outsl
outsl
lods
pop
inc
inc
push
xorl
or
push
dec
cmp
mov
cmp
cli
adc
xor
inc
pop
in
and
add
movsl
cs
sbb
and
ss
scas
fbstp
sub
pop
jmp
adc
and
pop
sti
pusha
cwtl
and
pop
sbb
add
xor
mov
sbbl
pop
pop
lods
dec
imul
xor
fdivs
sbb
rolb
inc
repz
xor
sahf
cwtl
pop
rcll
sbb
dec
lcall
push
pop
cltd
or
or
adc
push
outsl
pop
insl
gs
mov
mov
xor
sbb
push
das
inc
stc
inc
cmp
sbb
pop
sub
popa
dec
inc
dec
inc
decl
adc
and
cmp
sahf
push
push
js
fdivl
xor
dec
data16
and
pop
jae
lahf
addr16
insl
fisubl
inc
or
inc
jecxz
je
pop
bound
imul
push
push
clc
in
out
xchg
sbb
push
and
push
jb
sub
cltd
mov
mov
push
fbld
push
js
push
xor
fcoml
outsl
or
jae
pusha
inc
cmpsl
punpckhbw
jecxz
xchg
xor
pop
or
mov
mov
xchg
mov
push
jo
cmp
test
ret
mov
and
xor
push
dec
xchg
cmp
and
sub
push
fisttpl
in
jnp
sub
inc
in
fcmovnu
xor
jp
xchg
aam
cmp
dec
pop
push
mov
add
arpl
xor
push
cmp
inc
out
or
bound
mov
mov
cmpsb
pop
cltd
push
xor
pop
dec
arpl
inc
mov
je
jbe
pop
jns
lret
imul
pop
jne
pop
inc
mov
or
fnop
sbb
jecxz
movsb
xchg
pop
xor
add
jbe
pop
mov
ret
pop
push
pop
xchg
lock
pop
stos
roll
orl
arpl
sub
add
and
inc
int
adc
inc
ret
pop
push
mov
cmc
sti
and
test
call
mov
rcrb
cld
cmp
or
push
inc
int3
bound
subl
inc
nop
or
imul
insl
push
jle
pop
pop
inc
push
addb
and
pop
pop
inc
fwait
repz
mov
adc
out
sbb
push
shlb
xchg
sbb
and
pop
pop
mov
aas
stc
adc
dec
xchg
mov
adc
fstps
jno
cmpsb
sahf
fwait
jge
subb
push
arpl
clc
nop
push
lds
aaa
and
push
xchg
or
inc
cwtl
lret
shl
mov
adc
pop
push
popa
incl
sbb
push
mov
sub
pop
add
push
push
test
and
pop
xor
jge
jae
jg
push
pop
and
and
mov
rcll
test
imul
pop
loopne
imul
push
xchg
xchg
inc
scas
inc
sub
jp
sub
out
mov
dec
push
popf
mov
add
jae
ja
fsubrp
pop
bound
mov
inc
push
stc
ret
sahf
inc
fcomps
mov
sbb
mov
adc
jmp
stc
xor
rcrl
mov
rcrb
in
xchg
repz
scas
and
leave
sarb
sub
mov
push
dec
dec
jmp
mov
mov
push
sub
and
sbb
push
adc
mov
dec
in
les
js
cs
xor
jp
mov
mov
cmp
lock
lcall
pop
adcb
shrl
push
pop
mov
pop
xchg
inc
or
jle
dec
jp
inc
rorl
pop
ljmp
mov
pop
leave
or
pop
jmp
push
cmp
jmp
mov
sbb
jns
je
push
imul
jl
mov
inc
shll
pop
pop
sbb
jecxz
xchg
in
cmp
inc
sub
xor
pop
push
xchg
dec
jl
jns
add
add
sbb
push
imul
loope
inc
or
sbb
std
sub
push
pop
adc
in
jbe
jb
pop
xchg
or
inc
jb
enter
pop
cli
pop
mov
lea
mov
loope
es
push
mov
cs
or
call
imul
dec
ja
jb
pop
fwait
sub
sbb
sub
shll
sub
and
xchg
or
outsb
dec
popf
clc
and
adc
fdivrl
pop
arpl
xor
cwtl
sub
je
pop
push
dec
xchg
jae
jns
inc
inc
ret
js
test
xor
jno
insl
lods
mov
fstpt
pop
jne
ljmp
push
test
push
bnd
cs
int
pop
bound
das
repz
push
push
pop
movb
xor
cmp
mov
aad
lds
ljmp
cmp
mov
push
ja
cvtps2pd
jae
gs
inc
fwait
sbbl
enter
fildll
push
xchg
sub
sbb
lcall
sub
push
push
push
mov
ficoml
inc
mov
sbb
push
lods
stc
push
test
jns
push
mov
js
jecxz
adc
pop
push
and
je
pop
shll
repnz
or
pop
adc
nop
cmp
jb
popa
adc
fiaddl
lods
cmp
sub
jb
mov
jno
inc
scas
adc
jb
fucomip
arpl
fnstcw
loopne
xor
stos
fnstenv
cmp
push
icebp
jns
jo
popa
xor
dec
mov
pop
pop
cmp
xchg
or
sbb
jecxz
repnz
je
pop
in
pop
mov
pusha
mov
dec
inc
scas
imul
push
adcb
adc
and
fisttpl
movsl
fcoms
outsl
push
mull
bound
push
dec
inc
mov
push
dec
jo
and
fwait
xchg
pop
out
cmpsl
pusha
jmp
stc
xchg
mov
xor
es
pop
sub
xchg
test
loope
sbb
dec
push
leave
mov
or
jecxz
pop
mov
loope
mov
jp
inc
xor
xchg
xor
push
mov
gs
add
mov
or
mov
shlb
jbe
mov
push
int
or
inc
and
inc
test
scas
into
cltd
add
ja
pop
push
push
pop
mov
aad
pop
popa
pop
inc
jbe
out
fstl
xor
popf
adc
data16
xchg
adc
mov
rcrl
negl
or
sbbl
dec
and
inc
sub
mov
ss
mov
test
int3
gs
imul
and
cmpsl
push
dec
push
mov
pcmpgtd
jbe
or
std
and
sub
inc
or
adc
push
sub
imul
dec
push
cwtl
or
inc
mov
pop
and
push
inc
inc
ljmp
mov
sbb
mov
mov
xor
push
pop
fcoml
push
ss
pop
pop
outsl
jne
movsl
cmp
jp
push
xor
push
lcall
dec
xchg
das
adc
inc
and
adc
push
xor
xor
lea
and
movsb
stos
dec
shrl
mov
jnp
ja
sti
pop
ja
cmp
sub
inc
pop
outsl
mov
aad
je
jae
xchg
bound
addr16
adc
xchg
cmp
dec
jb
push
gs
jmp
aaa
pop
mov
pop
pop
ja
push
les
imul
notl
sub
ss
hlt
pusha
jp
addr16
jns
xor
fnstcw
popa
jecxz
xor
mov
mov
mov
nop
and
loopne
sub
pop
cmp
rorl
dec
add
sbb
xchg
es
lret
into
dec
xchg
push
and
insb
xor
aaa
int3
pop
stos
mov
inc
add
movsb
aad
jae
daa
add
out
pop
cld
xlat
inc
xchg
jle
lret
mov
xor
cmp
fs
and
jne
mov
pop
cmp
xlat
cmp
test
dec
je
popa
push
bound
addr16
jle
pop
addb
mov
pop
daa
sub
pop
orl
and
and
idivb
jb
pop
mov
sahf
cmpsb
pusha
addr16
fs
push
pop
pop
sbb
inc
xchg
adc
and
push
pop
cmp
sub
add
inc
pop
int
insb
sarl
cmp
pop
fld
movq
push
inc
adc
ret
lahf
dec
lds
pushl
test
aas
out
and
jmp
lret
dec
inc
push
dec
out
popf
mov
bound
insl
popa
icebp
inc
addb
aaa
ret
imul
pop
xor
sbb
sbbb
cltd
shll
push
pop
outsl
and
xor
movsl
addr16
outsb
jo
push
pop
nop
imul
pop
fwait
arpl
and
inc
addr16
fcomps
aad
aaa
pop
jb
add
outsl
sub
jne
dec
cmp
cld
adc
xchg
bound
jo
pop
inc
ds
mov
sub
xchg
je
rolb
sub
or
push
fiaddl
inc
sub
in
push
pop
aaa
pop
pop
out
subl
fwait
adc
push
add
jecxz
pop
les
int
and
pop
lds
adc
sub
sbb
testl
mov
adc
pusha
add
pop
add
xchg
dec
arpl
in
dec
in
lret
mov
sti
sub
jns
push
pop
pop
lods
adc
adc
fdivrs
and
mov
add
outsl
sarb
sbb
hlt
inc
mov
sti
cmp
in
jbe
pushf
mov
jo
mov
lods
jae
and
mov
push
fs
fdiv
xchg
push
cmp
push
or
hlt
and
ret
imul
inc
nop
sbb
jle
jle
ja
stos
pop
jp
mov
sub
call
fistl
loop
add
test
cmp
inc
movsl
clc
ja
in
movsb
jbe
xchg
push
push
adc
dec
or
and
and
jbe
push
ss
popf
pop
mov
icebp
xchg
lods
inc
lea
pop
and
mov
adc
les
cmp
push
sbb
add
cmc
sbb
pop
push
sub
sti
jp
adc
and
scas
sbb
cmp
push
nop
or
fisubl
dec
rorl
add
push
int
xchg
or
and
fdivrs
pop
mov
dec
push
cltd
pop
push
sub
pop
rol
or
cmp
jmp
cli
push
loope
sbb
add
xor
inc
push
xchg
inc
push
fistpll
sbb
imul
subl
lcall
sahf
sbb
push
repnz
inc
inc
loope
jnp
jns
icebp
cmp
sahf
sbb
pop
pop
xor
pop
inc
mov
xchg
pop
push
dec
sbbl
or
roll
stc
cmp
adc
pop
aam
flds
fmull
popa
cmp
pop
xchg
mov
mov
jg
lds
lcall
pop
sub
dec
mov
outsl
loope
aam
mov
sub
stc
cmp
push
out
popa
jl
mov
aad
mov
mov
jge
fnstcw
push
icebp
dec
pop
rorl
push
mov
xor
xchg
dec
pop
rorb
push
cmp
test
jae
pushf
loop
cmc
push
mov
and
sbb
cwtl
test
jae
push
mov
and
mov
xchg
mov
push
repz
mov
popa
push
jne
mov
sbb
mov
cmp
mov
mov
pop
push
outsl
loope
xchg
test
pop
in
inc
adc
mov
jecxz
mov
sub
mov
jns
dec
gs
imul
daa
push
mov
mov
mov
mov
pop
xchg
push
mov
cmp
movsb
scas
adc
int
lret
fisttpl
arpl
pop
and
dec
mov
jge
push
adcl
ffreep
sbb
fwait
jge
add
movsl
ja
leave
imul
fdivs
enter
mov
jmp
dec
cltd
jecxz
cmp
xchg
rcr
dec
inc
js
sbb
outsl
dec
push
pop
xor
or
push
in
or
adc
xor
push
pop
stos
gs
sbb
mov
sub
push
xchg
mov
fdivs
add
repz
fbld
cmpsl
xchg
andb
imul
jg
ljmp
dec
lret
sbb
inc
pop
movsl
adc
push
in
lret
mov
jg
push
leave
addr16
mov
mov
dec
test
mov
repz
inc
dec
inc
xor
leave
sahf
pop
cmpsb
imul
push
sub
leave
cmp
cmp
jb
dec
rcr
jmp
adc
dec
add
in
sub
popa
mov
dec
push
rclb
sbbl
rolb
sbb
roll
ficoml
stc
jmp
enter
pop
fldenv
stos
mov
movsb
xchg
pop
jnp
shll
fwait
push
jno
repnz
pop
fldt
dec
mov
add
lds
mov
or
adc
lret
sbbl
insl
in
pushf
jns
stos
mov
xor
leave
into
sbb
xor
dec
lret
cwtl
mov
mov
test
rcrb
dec
notb
lock
sbb
inc
adc
mov
mov
in
lock
rcr
flds
mov
dec
fadd
sub
cmp
test
jecxz
js
adc
jae
aaa
mov
push
clc
ljmp
inc
lods
push
shrl
cvtdq2ps
sub
cmp
loope
imul
add
cmp
pop
dec
repz
add
scas
and
lret
jecxz
fiadds
pop
ror
mov
cltd
in
jle
shll
pop
negl
es
sbb
add
aaa
add
stc
jns
sti
mull
imul
mov
mov
sub
rorl
cmp
imul
jmp
cmpb
js
test
pusha
lds
and
adc
jecxz
in
and
sbb
xor
xor
mov
push
xor
sub
sbb
ds
popa
add
cmp
cmp
mov
adc
jp
pop
sub
adc
fs
or
arpl
xor
sbb
sbb
pop
popa
pop
dec
rcll
or
push
jmp
inc
dec
and
imul
mov
adc
pop
inc
or
push
je
pop
inc
add
mov
and
pop
out
lods
cmpsl
dec
dec
mov
ret
loop
add
js
xchg
pop
xor
xor
adc
sub
adc
adc
sub
push
cltd
jmp
push
jmp
scas
xchg
outsb
sbbl
lret
jns
pop
pop
xorl
xchg
sub
push
shrl
xlat
dec
lret
ljmp
cmp
cmp
adc
sbb
xor
test
xor
sub
sub
ret
sbb
pop
ds
movsb
or
nop
pop
mov
sbb
lcall
jmp
xchg
imul
in
insb
sub
pop
mov
lret
pop
popa
push
mov
mov
jno
dec
or
sbb
adcl
mov
pop
jns
sub
jmp
sub
pop
or
push
mov
and
fisubrl
lcall
arpl
mov
call
push
add
cmp
inc
push
leave
jns
add
xor
icebp
dec
stc
lds
mov
cltd
push
inc
cmp
inc
push
outsb
fnsave
nop
jno
sub
sbb
sub
movb
push
jecxz
pop
and
sub
mov
or
fldenv
mov
cs
stos
icebp
xor
or
pop
pop
imull
pop
and
xchg
ret
xor
jne
scas
enter
xor
add
add
xchg
adcl
mov
jae
xchg
pop
inc
popa
repz
sub
fistpll
jecxz
cmp
lret
and
orb
jecxz
dec
mov
xor
cltd
and
pop
push
cmp
mov
mov
push
cmp
mov
dec
lods
xchg
jecxz
and
or
xlat
es
in
or
push
ret
sete
pop
test
push
xor
mov
sbb
xor
loop
adc
arpl
push
aam
pop
mov
jl
jl
jl
jl
jl
mov
lahf
adc
cwtl
pop
pusha
out
repnz
sub
rcrb
lds
mov
xor
shlb
jo
inc
lcall
adc
fistl
cmp
cwtl
test
inc
fs
sbb
fisttpl
pop
addr16
jne
orl
lahf
sbb
xlat
push
in
repz
push
inc
pusha
or
adc
inc
sub
jns
dec
adc
es
jae
call
mov
jno
xor
imul
adc
and
cltd
pop
pop
jecxz
icebp
pop
cld
push
mov
xchg
ja
push
pop
gs
xchg
mov
or
in
sbb
cmpsb
xchg
add
mov
loope
cli
mov
icebp
lret
fxch
dec
fdivs
ret
iret
cltd
aaa
or
mov
or
mov
jns
pushf
cltd
push
push
push
sarb
adc
add
jno
sub
mov
sub
mov
in
dec
jmp
cwtl
or
inc
inc
and
mov
test
add
dec
inc
clc
jecxz
mov
jno
sbb
inc
shl
adc
sbb
stc
dec
jns
fisubrl
lods
push
lods
nop
pop
mov
fs
flds
outsl
lret
rcrb
mov
fwait
sbb
add
pop
push
mov
adc
cmovns
xchg
or
outsb
inc
adc
cmpsb
cmp
leave
jle
adc
rcll
push
popa
inc
mov
dec
push
dec
inc
sarl
pop
daa
pop
add
loopne
addr16
outsl
adc
inc
mov
cmp
push
arpl
xor
inc
mov
inc
sbb
mov
sub
ljmp
push
sub
enter
mov
popf
popa
icebp
ret
inc
cli
mov
xchg
pop
test
cli
out
push
mov
pop
or
mov
cmc
enter
ds
inc
mov
push
push
push
ds
cmp
data16
test
or
xchg
mov
jo
ret
fstl
push
sub
or
dec
sbb
fdivs
pop
mov
jecxz
cmp
push
roll
xchg
cmp
leave
es
aam
inc
cmp
pop
movsl
mov
xchg
pop
inc
rclb
aam
icebp
push
sbb
push
lret
mov
loope
pop
les
mov
lahf
mov
and
pushf
mov
outsb
adc
adc
adc
incl
lds
pop
mov
lret
pop
dec
xlat
and
orl
mov
push
cmp
lret
add
aad
loopne
jmp
mov
mov
js
cltd
add
or
int3
cmp
cmp
sub
pop
lahf
test
xor
jecxz
push
pop
js
cltd
mov
pop
add
jns
test
fwait
cmp
aam
aad
pop
lods
inc
push
shrl
pop
test
jno
push
add
pop
jne
outsl
lods
and
cmp
in
pop
pop
mov
mov
jb
sbb
sub
or
lds
dec
stos
fstps
lahf
mov
mov
pop
adc
cmp
sub
cltd
xchg
jmp
push
push
aam
dec
fbld
xor
adcl
and
hlt
add
lods
inc
pop
pop
mov
insb
xchg
sub
jo
mov
add
push
pushf
fldl
aam
fistps
dec
xchg
cli
inc
add
cmp
adc
xchg
and
rcl
push
sub
or
in
pop
inc
push
sub
sbbb
dec
jmp
jo
stos
imul
or
push
xchg
cld
xchg
add
cmp
mov
xor
sub
or
sbb
test
push
cltd
inc
mov
cmp
push
in
js
xorl
add
lret
fucom
push
inc
pop
ss
ficoml
push
cmp
push
push
and
lret
fs
sub
orl
jecxz
mov
incl
mov
dec
shll
jp
or
pop
icebp
sbb
loop
int3
sbb
repnz
push
cld
push
in
shrb
push
mov
add
jmp
push
sbb
dec
adc
jmp
incl
jb
int
xor
fstps
fistl
push
mov
mov
add
xchg
cltd
sarb
insb
cmp
rcrl
pop
xchg
in
jae
lahf
stc
cltd
dec
pop
into
jb
push
add
xor
sub
fisttpl
ds
movsl
pop
movsl
outsl
or
or
mov
lock
xor
push
cmp
cmc
insb
sub
cmp
icebp
pop
jno
sbb
cmp
xchg
repz
pop
mov
ror
push
mov
and
data16
lcall
ret
xchg
jae
adc
iret
sbb
jns
lret
sarb
fsub
dec
data16
in
fcoml
imul
loopne
dec
inc
cmc
cs
je
fldt
pop
sbb
lea
mov
sti
stc
and
leave
mov
inc
pop
lahf
dec
lea
mov
rolb
dec
loope
in
fcomip
push
bound
push
sbb
cmc
inc
sbb
push
das
dec
cmp
fwait
sbb
bound
js
pop
dec
mov
and
and
movsb
push
mov
dec
sub
rcrb
pop
fistpl
pop
out
mov
lock
mov
push
push
sub
je
js
sub
adc
xor
cmp
push
mov
shrb
jno
jecxz
jo
pop
test
xchg
cmp
add
mov
pop
fsub
push
hlt
push
sbb
ja
pop
inc
sub
sbb
fs
jb
push
mov
cmp
cwtl
sbb
shrl
rcll
jo
sbb
imul
xchg
push
jge
mov
and
mov
mov
adc
repnz
mov
mov
cmp
lret
pushf
and
inc
mov
sub
pop
int
ds
and
icebp
popf
sbbl
and
sarl
jno
icebp
aad
inc
xchg
ds
pop
adc
roll
pushf
jns
push
fs
dec
sti
repnz
inc
std
cltd
pop
or
adc
xor
cmp
pusha
fldt
jbe
sub
lret
xchg
add
data16
imul
pop
mov
adc
es
add
pop
inc
cli
outsb
popa
lds
sbb
sub
jno
popl
sub
popa
aam
adc
dec
pop
mov
push
pop
insb
xlat
jecxz
push
lcall
cmp
mov
add
push
xorl
stc
sbb
or
mov
adc
stc
mov
sub
cmp
inc
cwtl
xchg
popf
add
jno
popa
xor
lret
inc
imul
sbb
jns
in
push
mov
frstor
xchg
pop
pop
fmul
sub
xlat
push
mov
scas
mov
rcrl
fpatan
imul
adc
pop
sbb
test
fidivl
mov
pop
mov
sub
adc
dec
fadds
fstpl
dec
lods
jno
popl
xor
fisttpl
shll
jmp
cmp
jecxz
add
pop
xor
repz
leave
and
pop
pop
pushf
sub
and
adc
fdivrs
xchg
mov
pop
push
pop
test
mov
jb
cli
pop
inc
inc
xlat
inc
xchg
add
push
cltd
lcall
adc
loope
push
push
clc
pop
pop
fisubrl
inc
pop
adc
mov
pop
test
pop
and
jecxz
movq
and
and
cltd
jbe
pop
inc
push
arpl
rolb
sub
or
jecxz
add
test
les
fsubr
sub
std
lock
cwtl
adc
and
popa
and
lds
mov
inc
filds
leave
mov
xchg
in
pop
out
jns
stos
pop
shlb
lds
fstp
out
and
pop
and
cltd
div
shl
cli
mov
pop
or
popl
xchg
cltd
mov
mov
mov
icebp
sar
popf
jmp
or
mov
movsb
sbb
sub
idivb
and
aaa
popa
dec
jmp
scas
ret
iret
dec
jmp
and
fisubs
and
lret
adc
cmp
icebp
in
dec
mov
loopew
cmpsb
pop
xchg
frstor
clc
cwtl
push
sbb
inc
lret
push
push
mov
pop
imul
inc
xorl
ret
cmp
xchg
bound
loopne
lretw
cmp
cmp
or
or
je
imul
ficompl
inc
jae
mov
rcll
mov
fdivrs
mov
adc
mov
mov
outsl
sub
xor
ljmp
icebp
in
nop
xor
cltd
dec
pop
adc
rcll
data16
cmp
mov
and
movsb
mov
sub
cmp
sbb
mov
clc
sahf
mov
repz
orb
push
icebp
cmpsb
popa
jp
push
adc
cmp
jecxz
cmp
arpl
nop
fisttpll
adc
pop
adc
pop
arpl
imul
mov
je
jl
pop
fidivrs
adc
js
xor
add
imul
inc
in
pop
cmp
stc
lock
adc
and
add
xchg
sub
pop
loope
push
mov
cmp
and
jno
lret
pop
adc
outsl
add
fs
sahf
pop
or
mov
mov
cmpl
xor
jge
adc
int
pop
repnz
lds
cli
in
xor
sub
cmp
scas
dec
daa
mov
fsub
dec
adc
inc
je
bound
jmp
inc
sub
sbb
popa
and
inc
in
fldenv
imul
xor
push
adc
xchg
rcr
push
out
and
push
shll
icebp
call
mov
int
pop
and
xor
daa
push
push
push
into
jecxz
pop
jb
sbb
aas
sbb
pop
xchg
out
adc
cmpl
sbb
mov
pop
sbb
stc
add
pop
jmp
cmp
call
cmp
push
es
jo
push
pop
dec
adc
loopne
inc
mov
add
pop
jmp
mov
add
inc
enter
cwtl
loope
bound
imul
and
daa
repnz
cmp
push
enter
push
mov
pop
fcmovu
insl
sbb
jnp
adc
and
and
adc
jo
out
cwtl
jns
imul
add
pop
cmp
repz
jno
sbb
add
xchg
inc
dec
push
test
add
pop
movsb
jmp
int
jbe
pop
xor
stc
popl
pop
jno
and
push
and
push
jg
dec
xchg
pusha
repz
pop
jne
mov
dec
pushf
or
push
mov
mov
adc
mov
notl
sahf
mov
cmp
popa
in
xchg
dec
or
ret
daa
loope
jge
orl
dec
inc
test
mov
xchg
fwait
int3
mov
leave
adc
xchg
cmp
jmp
xchg
outsl
mov
mov
or
out
iret
adc
ds
cwtl
cmp
test
rorl
aas
lret
loop
pop
inc
mov
dec
dec
mov
sbb
es
inc
sar
dec
mov
icebp
cltd
stc
mov
loope
jno
in
pop
push
lock
sub
imul
sbb
pop
lock
aad
adc
pop
mov
inc
imul
jo
mov
adc
cmp
pushf
vpsrldq
and
icebp
jle
bswap
mov
mov
sbb
imul
pop
inc
mov
xchg
movsl
cltd
andps
adcl
flds
cli
lds
pop
pop
mov
jns
repnz
cmp
mov
pushf
cmp
insl
dec
xchg
lods
loope
test
or
xor
push
lcall
or
movsb
repz
push
mov
loope
mov
jp
xor
mov
mov
push
sbbl
and
stos
sub
push
add
dec
insl
mov
xor
jo
es
add
aad
movsl
leave
add
cmp
rcrl
outsl
and
cmp
insb
sub
in
pusha
test
and
dec
imul
jecxz
add
cmp
ss
neg
adc
sub
mov
rcrb
rcrb
mov
mov
sbbl
lods
stos
cmpsb
imul
cmpsl
mov
or
fstpl
and
out
insb
out
sbb
sub
add
or
push
adc
pop
imul
clc
mov
repnz
stc
test
clc
jle
lcall
das
mov
in
jae
dec
cmp
lds
lods
fld
dec
stc
jb
pop
jl
insl
dec
push
xchg
or
popa
jecxz
ret
ficomps
or
pop
cltd
xchg
test
inc
movl
xchg
cmp
dec
pop
cli
pop
dec
pop
jno
and
test
cltd
and
addb
or
xchg
pop
push
jns
cwtl
in
dec
dec
bound
xor
rorl
in
out
adc
sti
sbb
leave
cmpsl
jns
shlb
fisubrl
fwait
mov
jno
push
pop
outsb
nop
xor
sbb
push
pop
stc
scas
cmp
mov
lods
leave
dec
cmp
pop
js
inc
add
cld
cwtl
stc
or
fsts
pop
out
leave
sarw
loope
pop
stc
cld
movsl
inc
testl
cmp
lods
xor
cmp
mov
ret
subl
test
rcrl
adcb
cs
push
and
sub
loopne
jns
std
xchg
gs
icebp
pop
shll
inc
insl
push
cmp
jno
add
pop
inc
clc
pop
cmp
add
sbb
lcall
cltd
push
pop
imul
shlb
pop
in
fldl
je
jmp
and
inc
pop
fwait
cmp
xchg
sub
pop
push
repnz
leave
jmp
jno
pop
push
cmpsl
popa
add
jge
data16
pop
mov
and
xor
es
jle
mov
pop
lock
pop
adc
mov
inc
pop
iret
lahf
imul
cmp
or
movsl
iret
pop
or
xchg
aad
push
in
cwtl
clc
pop
jmp
dec
roll
pcmpeqw
jmp
and
mov
jge
insl
mov
pop
push
mov
imul
pop
stos
mov
xchg
jbe
pop
push
rcr
or
gs
jmp
jge
stos
sbb
mov
inc
decl
cmp
icebp
inc
test
mov
dec
xchg
xchg
or
pop
jo
lret
and
sti
pop
and
inc
rol
push
mov
fdivrs
ja
fcmovnu
push
out
inc
aam
int3
insb
adc
push
js
adc
jb
push
mov
lahf
es
pop
jge
jno
addr16
inc
cmp
outsl
fs
push
sbb
and
or
or
fildll
mov
inc
es
dec
pop
mov
dec
pop
xorl
es
ss
data16
adc
jecxz
shll
mov
fneni(8087
pop
outsl
cmp
adc
dec
pop
int3
pop
jns
cmc
or
inc
jnp
imul
mov
mov
sbb
int
mov
mov
push
inc
ds
jl
sbb
sbb
loope
dec
xlat
xchg
lret
pop
mov
cmpsl
xchg
mov
jl
jl
jl
pusha
ficoml
mov
adc
or
mov
xchg
xchg
pop
fs
fs
scas
jns
pop
mov
out
fldcw
mov
jae
addr16
outsb
outsb
pop
cmp
sbb
dec
sti
cmpsl
icebp
in
push
mov
shll
cwtl
jg
xchg
jnp
insl
cwtl
pop
adc
adc
and
pop
movsb
dec
mov
lahf
inc
xchg
test
incl
add
inc
adc
ret
push
pop
sbb
pop
lods
inc
fwait
adc
or
xor
dec
dec
inc
sub
sahf
std
popa
jecxz
in
xor
push
mov
xchg
sbbl
cmp
fisttps
mov
push
movsb
or
or
dec
pop
xlat
ljmp
gs
or
sbb
jg
xor
inc
xchg
movsl
lret
icebp
ret
test
pop
jecxz
repz
and
adc
sarb
jne
and
insb
lds
fstpt
adc
pusha
xchg
shll
or
inc
cvtps2pd
adc
mov
popa
popa
push
fs
fs
fsubl
mov
leave
pop
rol
mov
lret
dec
jge
fstpl
dec
inc
pushf
cmp
mov
or
inc
leave
mov
lea
andl
pop
sbb
cmc
pop
inc
add
lcall
pop
pop
aas
sbb
movsl
pusha
mov
cmp
adc
sbb
jae
xor
cmp
push
popa
fcoms
filds
test
pop
fisttps
jp
mov
xchg
or
and
push
push
mov
sbb
dec
test
xlat
pop
jmp
mov
pop
subb
leave
and
or
pop
std
or
in
fbstp
mov
stos
xchg
popf
and
pop
pusha
inc
pusha
cmp
pop
pop
adc
mov
or
xorps
pop
ret
jmp
scas
cwtl
pop
frstor
out
pusha
mov
ficoml
sub
dec
lret
mov
push
sub
sbb
int
lret
flds
push
js
add
add
mov
sbb
rorb
fldt
jge
mov
jno
dec
mov
dec
mov
jecxz
mov
pop
enter
movsb
fwait
pop
arpl
dec
add
push
mov
pop
pop
push
lea
js
adc
pop
jg
outsb
aam
imul
lock
jns
xchg
pop
ret
add
pop
pop
push
ret
add
push
sub
add
cmp
sub
mov
dec
outsb
mov
cmp
imul
jmp
and
jl
test
cltd
jno
pop
or
sub
xchg
add
pop
mov
lret
mov
jmp
cli
or
dec
jg
or
popa
imul
and
add
dec
inc
jle
clc
pop
sbb
push
xor
filds
mov
sub
jo
or
pop
xchg
stc
mov
mov
jle
mov
loop
scas
or
fsubr
inc
pop
in
pop
repnz
movsb
mov
mov
fbstp
pop
shrb
jg
cli
ds
lret
dec
test
mov
pop
push
cltd
lahf
cmp
loopne
aam
cmp
or
cmc
sub
mov
mov
out
popa
jbe
push
dec
sub
jnp
test
shlb
lret
sub
dec
xchg
inc
into
sbb
sub
cmp
pop
pop
or
mov
jmp
shll
popa
pop
in
ds
adc
mov
xchg
xor
mov
fmull
pop
mov
sbb
push
cmp
cwtl
jp
aaa
pop
lcall
ficomps
pop
and
mov
call
pop
pop
icebp
outsl
mov
pop
aas
jne
cmp
cwtl
mov
mov
cli
cltd
cmp
popa
dec
xchg
loope
add
pop
fstps
mov
out
add
mov
leave
ljmp
mov
pop
mov
rcrl
and
pop
add
cmpsl
enter
jbe
aad
mov
pop
test
movsb
push
dec
iret
pop
adcl
xor
lods
pop
rorb
sbb
arpl
mov
mov
pop
fidivl
xchg
push
push
jno
sbb
jo
xor
out
shrl
js
hlt
xor
mov
stos
sbb
int
stc
xlat
ret
or
push
in
test
inc
cmp
rcll
mov
mov
rcrb
lret
xchg
xchg
fiaddl
sub
jmp
enter
pop
adc
sbb
cltd
cmpsl
js
pop
aam
out
test
and
inc
pop
dec
jns
outsl
mov
jo
pop
daa
enter
icebp
lret
les
stc
pushf
jle
mov
jmp
js
das
daa
pop
adc
or
add
jecxz
jb
ja
dec
sbb
and
roll
int3
pop
shrb
mov
push
or
mov
movsb
lsl
and
dec
mov
mov
pop
push
rorb
inc
pop
pop
and
es
mov
repnz
js
mov
pop
out
incb
push
add
cmp
add
add
rcrl
pop
mov
xorb
in
push
lods
xor
mov
adc
bound
loopne
push
sarl
pop
out
aaa
mov
into
repz
addr16
cmp
jmp
adc
pop
mov
and
push
mov
pop
pop
enter
pushf
ret
cmc
pop
adc
adc
sub
pop
dec
cli
xchg
test
pop
add
in
mov
ret
xchg
mov
sahf
push
sbb
aaa
sbb
cmpsb
pop
popa
gs
enter
push
faddl
cmp
pop
fcom
aad
add
push
dec
pop
mov
pop
pop
dec
pop
lret
hlt
pop
insb
or
ja
xor
fiaddl
cmp
repnz
mov
xlat
jne
sub
dec
or
add
add
xchg
jle
sub
in
pop
pushf
out
iret
jnp
pop
cmp
or
and
and
fsubrl
std
dec
jbe
es
icebp
xchg
dec
add
pop
les
xchg
and
push
pop
or
bound
or
loop
pop
mov
out
xchg
or
rolb
in
popf
or
and
fisttps
pop
mov
das
pop
into
cwtl
mov
xor
pop
pop
sbb
shll
pop
dec
push
jle
aas
arpl
inc
xchg
push
addl
std
mov
test
lock
pop
jbe
push
inc
mov
adc
adc
or
dec
lret
and
imul
jecxz
pop
pop
push
and
scas
xchg
rcrb
lods
push
bound
and
sti
pop
fcomps
pop
xchg
and
add
pop
jnp
call
add
shrl
cmp
add
pop
push
inc
inc
sahf
incl
lcall
xchg
mov
cmp
pop
or
fs
jp
lock
aaa
or
in
cmpsl
jne
arpl
mov
pop
fildl
cwtl
fsubrp
push
scas
add
movsl
jecxz
push
pop
adc
sub
push
push
repz
ficomps
incl
dec
add
test
lcall
scas
andb
add
mov
and
xchg
pop
fsts
or
test
pop
loopne
mov
and
sbb
ja
psrlw
or
filds
sbb
jp
aad
aas
or
shll
rorl
xchg
sbb
mov
sub
das
dec
mov
cmc
fsubs
test
xchg
pop
or
scas
jae
mov
pop
pushf
cmp
repnz
xchg
xchg
pop
mov
or
adc
add
lds
out
imul
xor
xor
xchg
or
add
andl
and
out
cmp
pop
jecxz
mov
inc
sbb
cmp
mov
mov
and
stc
notb
lcall
test
sub
sbbw
sbbb
jae
push
mov
sbbl
mov
xchg
jno
sub
pushl
pop
addl
pop
cmpsb
les
xor
rol
inc
jb
mov
fcompl
add
xchg
in
pop
or
add
xchg
loop
scas
aas
pop
in
test
inc
arpl
pop
out
push
leave
jmp
or
int
cmp
and
push
pop
pop
je
out
arpl
mov
and
dec
and
dec
and
fbld
aas
add
push
pop
adc
test
stc
out
push
rcll
add
mov
lahf
mov
mov
aad
or
pop
pop
adc
lods
inc
orb
incl
loope
repnz
pop
adc
push
negl
sbb
pop
dec
loopne
push
push
in
or
shr
fsts
nop
pop
icebp
adc
mov
adc
std
pop
mov
aas
cmp
pop
or
inc
xor
rcrb
int
dec
andl
pop
lret
jle
add
pop
sbb
or
push
inc
or
jnp
pop
xchg
sbb
adc
inc
lods
pop
mov
dec
jp
mov
xchg
jns
pop
inc
loopne
add
xor
mov
adc
in
pop
fnstsw
sub
xchg
xchg
push
test
cld
pop
dec
mov
pop
mov
add
imul
pop
jb
loope
xor
fcmovnb
pop
sbb
push
pop
dec
mov
sti
subl
adc
inc
in
rcrb
mov
rorl
jmp
pop
sbb
jo
fildl
lea
cmp
inc
xorl
cltd
mov
fstpt
mov
out
mov
sbb
mov
add
xchg
arpl
xchg
and
inc
pop
xchg
push
pop
into
scas
jo
pop
mov
pop
mov
sbb
les
cs
dec
cltd
test
dec
add
mov
dec
arpl
cmpsl
bound
into
push
add
jge
clc
dec
sar
orl
cli
add
filds
rcrl
in
shl
push
push
push
add
pop
shll
jnp
or
or
pop
mov
lds
pushf
xor
ficomps
adc
std
add
mov
sub
gs
andb
dec
jns
xor
jae
rcrb
cmpsl
inc
loop
or
pop
loope
add
sbbb
push
jae
add
aas
pop
cmp
out
jmp
inc
sub
stos
add
daa
xchg
pop
fwait
scas
adc
cmp
xchg
push
sub
cmp
cmp
fucomip
fdivl
aad
popa
fwait
aaa
adc
adc
inc
mov
xchg
or
nop
pop
mov
push
fistpl
lds
pusha
pop
jnp
loopne
hlt
andl
lcall
loop
sti
popa
cmc
dec
imul
cwtl
dec
sbbl
pop
ret
sbb
sbb
hlt
jb
pop
push
mov
add
cwtl
mov
xor
pop
arpl
fnstsw
push
loope
dec
pop
cmpl
or
xchg
adc
xchg
inc
scas
cltd
aaa
lcall
out
jmp
ror
popa
mov
enter
jnp
repz
out
xor
mov
and
mov
aam
sub
pop
imul
int
pop
lret
cltd
mov
mov
xchg
scas
pop
add
jne
loop
cwtl
dec
cltd
sarl
outsb
dec
pop
sub
mov
arpl
pop
add
shlb
cmp
jmp
sub
dec
sbb
gs
mov
iret
pop
imul
aas
push
or
in
adc
mov
pushl
push
pop
ret
cmp
shll
dec
mov
pop
lret
in
or
mov
sub
sbb
js
out
imul
jg
pop
add
stos
cwtl
std
cmp
sbb
call
xchg
jb
adc
js
add
jo
sub
sub
adc
fwait
xchg
popf
nop
lods
pop
lret
jl
cmc
push
push
mov
pop
push
or
pop
push
leave
loope
xchg
mov
pop
sub
mov
pop
ss
add
push
sub
push
push
rclb
test
mov
bound
cltd
fs
push
jecxz
in
push
pop
adc
and
pop
rcr
in
inc
sbb
movsb
pop
add
mov
iret
fwait
mov
adc
je
add
popa
pop
and
and
push
les
jecxz
fadd
push
pop
out
cmp
or
inc
jns
xchg
pushf
popf
mov
fcompl
es
cmp
lret
gs
sub
mov
outsl
sub
adc
sub
mov
lock
enter
cmc
xor
dec
divl
gs
add
scas
mov
je
jns
push
cmp
das
cltd
inc
pop
push
add
testb
sbbl
cmp
cmp
push
sub
jmp
mov
cmp
lods
idivb
cmp
sbb
dec
pop
mov
push
out
xchg
stos
loope
push
nop
ficoms
sub
push
shl
or
aad
pop
pop
fldenv
and
add
mov
dec
mov
and
adc
push
inc
int
sbb
pop
cmpl
jns
push
std
push
push
mov
jae
incb
sbb
outsb
in
pop
das
rorl
pop
dec
mov
mov
dec
loope
imul
into
pop
ret
inc
icebp
cmp
add
in
popf
or
repnz
pop
add
addr16
cltd
cwtl
pop
and
cmc
cmp
ds
pop
jno
adc
pop
pop
les
cli
int
ljmp
jae
mov
rcll
ds
pusha
or
testl
daa
stos
outsb
mov
aas
lock
out
pop
pusha
fadd
lods
pop
xor
in
mov
pop
sbb
pop
add
dec
push
push
aas
cltd
aam
pop
repnz
add
orl
push
xorl
mov
adc
xor
pop
sbb
sub
js
fbstp
daa
and
push
negb
dec
xor
xchg
pop
xor
outsb
inc
or
cmc
inc
pop
ret
lcall
fsts
xor
in
in
sbb
or
data16
push
cmp
loop
pop
xor
pop
add
pushf
jge
jnp
pop
out
insb
dec
int
cmp
pop
or
cmp
cmc
dec
fmuls
push
std
jmp
pop
inc
pop
cmpsl
dec
pop
cmpl
adc
lret
jecxz
call
aas
pop
subb
pop
add
in
mov
dec
push
repz
or
sbb
jb
stos
jno
pop
or
rcrl
cld
jecxz
add
icebp
pop
add
jl
adc
xchg
iret
pop
test
insl
add
js
push
in
lods
sbb
pop
decb
dec
ljmp
and
cwtl
pop
add
mov
sub
call
pop
repz
pop
mov
jecxz
pop
mov
xchg
xchg
and
fcmovb
pop
dec
in
loop
popa
cmpsb
jge
loope
bound
inc
repnz
pop
mov
test
pop
lret
adc
fbstp
pop
inc
sbb
arpl
into
add
jp
aad
pop
and
in
jne
cmp
cs
add
cwtl
and
scas
jbe
pop
adc
xor
pop
push
mov
xchg
adc
and
sti
mov
pop
rep
stos
dec
and
sbb
pop
stc
pushf
jb
leave
into
loop
jmp
sahf
push
inc
and
xchg
pop
jo
addb
dec
imul
adc
inc
inc
test
push
pusha
repnz
fsubr
ret
fdivs
and
std
or
loop
popa
dec
pop
sub
push
mov
dec
not
mov
pop
mov
test
dec
mov
rcr
xchg
std
outsb
sahf
outsl
xchg
fs
loopne
jecxz
int3
mov
fistpl
pushf
mov
shlb
cli
or
testl
lods
mov
sbb
mov
dec
add
in
dec
or
loopne
mov
add
cmc
ret
pop
sbb
out
cwtl
or
fiaddl
sub
ret
mov
pop
insl
add
loope
xchg
xor
pop
adc
mov
push
sbb
xchg
pop
fs
fucomip
mov
pop
xchg
mov
and
push
xor
fstpl
js
inc
cs
push
add
xchg
mov
xchg
sub
faddl
ja
pop
push
out
sub
mov
pop
xchg
mov
pop
dec
lret
xchg
push
push
xchg
pop
stc
shr
jl
mov
cmp
pop
mov
jne
out
nop
imul
cmp
pop
add
ds
in
nop
ret
pop
adc
inc
cmp
test
pop
push
das
pop
xlat
mov
jp
in
iret
mov
push
arpl
jne
inc
pop
add
test
pop
pusha
push
int
pop
pop
xor
jbe
jnp
sbb
push
in
out
cwtl
arpl
and
mov
insb
sbb
cmc
add
xor
add
test
adcl
dec
pop
mov
add
ljmp
jle
mov
fidivl
mov
xor
pop
jo
ljmp
dec
stc
stos
hlt
pop
outsl
aad
or
xchg
out
pop
push
and
push
pop
enter
sbb
pop
cmpsl
add
scas
xor
arpl
loope
call
jge
sbb
adc
out
fwait
jecxz
popa
mov
pop
in
xchg
inc
or
jl
cmp
cmp
adc
xlat
mov
pop
jge
nop
sbb
pop
fldl
rcrl
pop
inc
sbb
scas
pop
xchg
jge
mov
rol
cmp
icebp
and
out
fisubrl
js
xchg
pop
mov
pop
jg
gs
stc
out
pop
add
int
sub
pop
sbb
out
cmp
addr16
hlt
int3
inc
mov
lret
or
jne
jecxz
sub
pop
inc
add
adc
insb
xor
ficoml
and
mov
jmp
cwtl
test
lahf
pushw
adc
sarb
cmp
rcrl
pop
xor
jns
sbbb
repz
shrl
xchg
add
mov
sbbl
repz
data16
test
inc
jle
es
pop
push
or
sub
add
les
push
add
xchg
push
pop
test
dec
pop
pop
pop
add
fwait
and
xor
test
mov
std
cmp
fistps
mov
dec
sti
and
jnp
dec
push
push
adc
cmp
pop
and
insl
sbbl
aad
movb
pop
loope
sbb
jge
iret
fstps
cwtl
pop
xor
xchg
add
add
push
fcompl
sbb
lds
js
loope
bound
cmp
jae
mov
scas
pop
in
pusha
pop
xchg
pop
imul
jg
rcr
cmp
sbbl
push
lock
out
xor
inc
pop
loope
test
fistpl
and
subb
cmp
aad
lahf
mov
outsl
cmp
mov
push
push
pop
cwtl
push
mov
stos
pop
jge
loopne
ret
mov
roll
inc
into
rclb
cli
jecxz
dec
scas
es
add
or
sti
pop
xor
push
xchg
ret
sahf
push
add
scas
xor
fcmovbe
and
jg
cmpsb
xor
adc
int3
or
movsb
stc
mov
xchg
ss
ret
push
sub
push
lret
adc
fcoms
ss
jle
leave
repz
adc
popl
sub
push
sbb
or
fld
xchg
std
ljmp
mov
lods
insl
dec
lahf
mov
jns
sahf
pop
pop
pusha
mov
fadds
rorb
pop
movsb
cmpsb
mov
and
int
mov
add
clc
pop
enter
adc
pop
data16
mov
loope
pop
ljmp
xchg
cmp
xchg
rorb
jnp
in
or
mov
push
add
pop
pusha
cmc
mov
icebp
sbb
andl
mov
jnp
pop
pop
jge
dec
shll
sbb
pop
aad
pop
cmp
adc
xor
js
add
daa
ja
adc
jmp
or
cmp
clc
scas
into
and
xor
lret
sbb
jecxz
pop
add
loope
lods
shl
adc
out
aaa
jnp
xchg
nop
pop
sub
mov
jmp
dec
scas
xor
loop
or
in
cwtl
rcrb
imul
addr16
aas
pop
fstps
add
test
popf
test
push
stc
or
jne
pop
sbb
xor
insb
lods
or
xlat
pop
ret
cltd
mov
xchg
std
pop
or
daa
dec
bound
mov
lods
pop
push
in
or
and
mov
dec
inc
mov
pop
mov
stc
mov
iret
gs
sbb
daa
dec
pop
mov
outsb
push
adc
add
xor
test
mov
sbb
push
mov
xchg
pop
std
jns
add
pop
nop
inc
stc
inc
in
xor
jmp
add
adc
xor
popf
sbb
pop
inc
repnz
scas
pop
rcrb
mov
ret
subb
xchg
xchg
dec
iret
popa
sbb
pop
inc
jb
movsb
cmp
inc
std
pop
ror
push
mov
pop
mov
shl
jp
push
pushf
loope
fcmove
cmp
out
and
jne
negb
pop
pop
dec
aas
cmpsl
js
test
pop
cmp
xlat
add
jle
xchg
pop
pop
subb
rcrl
subl
in
popf
jno
inc
das
aad
clc
xchg
pop
mov
lea
pop
mov
fcmovbe
or
mov
fldcw
xchg
mov
xchg
pop
cmp
mov
push
pop
push
push
xor
mov
or
lahf
jb
clc
leave
pop
sarl
push
call
mov
ret
addl
gs
mov
add
mov
pusha
pop
push
mulb
jae
and
and
das
sbb
dec
push
mov
arpl
shl
pop
mov
add
scas
mov
mov
addl
xlat
test
outsb
mov
and
lds
nop
ss
sbb
pop
mov
mov
fiaddl
sbb
outsl
jp
aam
pop
push
pop
sahf
dec
fs
stc
mov
stos
sbb
imul
xchg
mov
mov
add
cmc
pop
insl
dec
icebp
or
sahf
shl
xor
pop
popa
fists
sarb
ljmp
and
xchg
jmp
arpl
jbe
frstor
xchg
cmpsb
pop
je
rcrl
pop
imul
fdivl
pop
add
inc
inc
pop
out
xor
stos
loope
add
or
adc
jne
xor
sbb
add
mov
or
repnz
add
pop
nop
jecxz
shl
mov
leave
mov
lds
test
sbb
pop
cmp
aad
mov
pop
xor
std
pop
or
icebp
mov
mov
test
add
adc
cmp
sub
push
inc
or
pop
fsubrs
mov
js
dec
pop
gs
pop
test
and
pop
cmp
push
enter
xchg
lea
js
insl
cmp
push
mov
sbb
cltd
mov
xorb
ret
dec
inc
data16
cmp
ja
fsubrl
clc
pop
add
sbb
stos
xchg
lret
hlt
cltd
fistpl
push
test
sbbl
sub
pop
lods
pop
iret
sbb
pop
mov
mov
ss
stc
addb
and
xchg
jns
das
pop
mov
mov
inc
jns
sub
lret
sti
push
pop
scas
xlat
ret
dec
cli
jl
cs
sbb
movsl
mov
pop
jmp
sti
and
out
aam
add
mov
push
cmp
adc
or
mov
data16
mov
into
pop
mov
jle
inc
cmp
pop
push
xchg
pop
and
sti
jcxz
jbe
pop
xchg
sarl
pop
mov
ret
js
pop
dec
imul
sub
shlb
pop
sub
shll
outsb
in
pop
or
xchg
sub
pop
cmp
std
dec
push
shrl
pop
iret
scas
add
dec
and
idivl
ficompl
pop
fs
add
dec
mov
pop
cli
xor
nop
pop
and
fimuls
add
pop
sbb
adc
inc
out
and
inc
test
cmpsb
or
add
cmp
jns
out
sbb
push
aaa
sahf
pop
pop
aad
push
xor
pop
bound
outsl
push
faddl
scas
pop
sub
insl
and
loop
pop
aam
decl
int3
orb
push
mov
pop
daa
mov
test
cmc
push
popa
adc
icebp
mov
sbb
jns
pop
js
loopne
cmp
stos
push
jo
pop
pop
xchg
fmuls
lcall
xchg
cs
sbb
hlt
mov
jae
add
adc
add
pop
icebp
mov
test
out
hlt
inc
pop
cmp
test
add
rclb
jae
or
jmp
cmp
jne
iret
les
daa
pop
shrb
push
pop
cltd
shll
push
sbb
cmp
cmp
popa
lret
push
pop
pop
ret
inc
inc
push
aas
out
pop
dec
jns
rcl
sub
dec
push
fwait
jns
jnp
mov
inc
sbb
jg
add
dec
stc
les
jno
mov
imul
scas
cmpl
lret
adc
adcb
pop
xor
ljmp
out
push
test
fbstp
imul
xor
mov
out
push
mov
push
fadds
mov
cld
xchg
dec
pop
pop
sub
sbb
add
mov
int
cld
gs
in
sbb
rcl
pop
dec
xchg
rcll
roll
jle
add
fiaddl
mov
mov
adc
and
loop
ret
repnz
add
mov
jmp
xor
cmp
jne
pop
xor
sub
mov
xor
add
pop
cld
dec
jae
jne
data16
push
aam
push
imulb
sbb
and
pop
sbb
mov
xchg
add
insb
pop
test
roll
sub
sbb
mov
lret
pop
and
aas
roll
jmp
adc
jmp
call
adc
dec
jne
pop
sub
pop
call
test
dec
hlt
into
xchg
roll
or
pop
mov
bound
lds
or
push
add
cmp
mov
shr
cmp
pusha
lods
mull
push
jl
arpl
adc
arpl
xor
add
xchg
pop
icebp
in
xor
gs
mov
add
clc
push
sti
addb
mov
cmp
and
pop
cmpsl
lock
mov
pop
shr
add
jne
mov
pop
add
pop
das
jmp
pop
pop
lods
pcmpeqd
sub
sti
test
xchg
pop
xchg
push
fisttpl
pop
mov
sbb
pop
shlb
push
cs
nop
inc
push
movsl
ds
popf
repz
mov
or
ljmp
xchg
mov
fbld
push
dec
es
or
pop
add
aas
pop
or
mov
jmp
aaa
and
pop
add
aam
ja
mov
inc
cwtl
les
sbb
aaa
arpl
sbb
xor
jb
xchg
inc
lret
pop
dec
sub
adc
jns
fsubrl
into
pop
add
adc
fstpt
push
xor
pop
lcall
fisubrs
sbb
pop
inc
or
sbb
ds
lods
jo
loope
fiaddl
lea
xchg
out
popa
xchg
stc
das
adc
cli
les
fbld
rcll
pop
cs
push
and
dec
or
stc
or
repnz
push
dec
arpl
clc
jns
add
insb
aad
call
mov
jae
pop
ljmp
ret
adc
test
ds
add
jb
fsub
js
pop
das
mov
lods
pop
push
sub
pop
or
idiv
or
scas
movsl
hlt
ljmp
lea
cmpsl
sub
inc
pop
or
sbbl
inc
mov
pop
jl
push
xchg
dec
out
add
pop
roll
insl
pop
pop
test
adc
pop
fldenv
inc
popf
pop
movsl
les
shll
dec
adc
pop
cmpb
mov
jl
pop
sub
scas
and
pop
sbb
jb
les
enter
jae
andl
cmp
loope
cmp
cwtl
pop
fnstenv
adc
inc
fwait
in
mov
or
push
add
mov
mov
xchg
repnz
lret
mov
inc
pop
and
outsb
cmc
outsb
jge
enter
idivw
pop
pop
aas
cltd
adc
mov
jmp
les
pop
mov
add
das
hlt
aad
sbb
push
push
jae
inc
inc
sub
negb
sub
imul
iret
jae
enter
outsl
sbb
negl
xchg
andl
mov
inc
adc
and
mov
pop
fnsave
daa
sbb
add
add
inc
inc
pop
in
mov
inc
adc
test
lret
xor
xchg
or
mov
pop
sub
xchg
cmpsl
adc
sbb
stos
arpl
mov
ljmp
lock
add
dec
inc
jmp
out
popa
pop
frstor
pop
adc
push
mov
jmp
mov
push
pop
mov
test
push
jnp
pop
loope
ss
cmp
insl
xchg
pop
movsl
sahf
inc
outsl
mov
fcomps
add
pop
xor
stos
addb
pop
not
xchg
repnz
clts
pop
ret
lahf
push
aad
add
or
es
pop
push
cmp
push
inc
dec
adc
pop
or
or
inc
jno
jne
pop
push
jge
gs
dec
or
pop
xchg
ficomps
sar
mov
pop
call
rcl
cmp
js
jnp
fldt
jne
pop
je
stos
xchg
cmp
stos
ret
cwtl
dec
aad
add
pop
mov
sub
jnp
jmp
mov
call
jecxz
add
in
aad
mov
mov
lods
lahf
js
mov
sahf
jb
fwait
leave
cmp
dec
lret
scas
test
addb
mov
add
orb
lret
loope
push
xor
dec
adc
jnp
or
push
stos
js
pop
mov
or
fimull
jp
jne
js
fwait
jnp
imul
jae
jno
pushf
test
and
std
sbb
push
imul
sub
mov
in
adc
stos
bound
or
and
dec
loope
jecxz
movsl
push
fwait
addr16
test
cmp
sbb
pop
pop
lcall
or
mov
js
adc
ljmp
dec
mov
xorb
cvtps2pi
dec
push
cmp
imul
sbb
jp
mov
sub
jecxz
fwait
adc
push
fisubl
mov
pop
add
lret
sub
jnp
push
ds
and
pop
popl
ss
pop
push
dec
pop
mov
dec
addb
mov
pop
inc
pop
jne
or
and
cmp
loope
cli
cmp
mov
cmp
dec
sbb
out
cmp
mov
mov
stos
lret
cmp
sbb
aam
sub
lcall
or
add
cmp
push
fistl
leave
mov
test
xchg
mov
paddusb
push
sub
cmp
sub
cmp
inc
mov
dec
fcmovb
outsb
push
pop
aam
es
sub
jns
jp
mov
sbb
mov
dec
lcall
dec
mov
pop
stos
insl
ljmp
sub
xor
push
jnp
xlat
pop
outsb
push
mov
cmp
enter
cli
mov
mov
push
ljmp
pop
mov
dec
fidivrs
push
clc
add
leave
jae
sahf
or
mov
dec
pop
or
shll
bound
mov
dec
cli
insl
or
push
out
jmp
push
cmp
leave
mov
mov
jp
and
lahf
pop
sbb
pop
fstpt
mov
fwait
xchg
pop
cmp
jmp
or
push
inc
aad
mov
xchg
sub
and
sti
out
jnp
jo
cmp
jp
sbb
stc
pop
lret
out
xchg
scas
dec
mov
ret
cmp
lret
dec
sbb
mov
pop
sbb
or
and
pcmpeqd
shlb
imul
dec
mov
pusha
sarb
ds
adc
adc
aaa
jmp
mov
cs
stos
push
in
sbb
sub
add
outsl
xchg
repnz
loop
pop
xlat
into
mov
dec
adc
repz
leave
pop
or
add
pop
insb
imul
cmpl
jo
dec
clc
push
pushf
dec
inc
jecxz
pop
dec
or
cmp
mov
fucomip
jp
sbb
sub
xchg
and
cmp
cmp
mov
daa
jle
out
lret
mov
rorl
fimuls
mov
push
mov
push
cmp
dec
mov
std
cmp
shl
test
lcall
ljmp
ss
ret
pop
mov
arpl
and
lret
and
jecxz
mov
sbb
lret
lahf
sub
xchg
lret
xchg
mov
aad
daa
sahf
or
adcb
jbe
jbe
jmp
repz
sarb
movsb
cmp
and
lahf
xor
nop
or
pop
mull
jmp
sbb
cmp
adc
jns
jnp
or
inc
into
fstps
push
jnp
lret
pop
adc
stc
sbb
fistl
jb
mov
shrb
test
pusha
gs
mov
stos
pop
add
jne
stos
or
sbbb
xchg
or
insl
stos
jmp
xlat
mov
push
xchg
fbstp
fidivs
js
xchg
jmp
sbb
pop
out
add
aam
mov
cmpsl
xor
xor
mov
lds
pop
fistpl
movsl
jns
mov
xor
mov
pop
add
cli
and
or
jno
push
dec
jno
sbb
mov
xchg
jb
jb
push
shlb
outsl
mov
jecxz
push
xor
dec
imul
dec
cli
push
xchg
dec
insb
or
int
xor
xchg
adc
in
iret
repz
iret
sbb
sbb
sti
xor
pop
dec
xchg
sahf
dec
lock
mov
jae
inc
add
pmaxsw
jp
inc
cmp
sub
dec
movsb
mov
fistpl
dec
mov
adcl
jecxz
jp
push
or
sbb
or
lcall
push
push
fdivrs
mov
fldt
jmp
stos
mov
int
sbb
leave
pop
or
xchg
adc
dec
push
push
cltd
stos
sbb
jge
cmp
lcall
mov
dec
mov
filds
pop
mov
cmp
jns
add
mov
js
mov
pop
pop
add
cli
jecxz
xor
int
lret
mov
push
and
sti
or
dec
mov
cmp
push
jmp
sbb
ret
mov
sbb
js
cmp
jmp
sub
xchg
sub
imul
xchg
or
dec
inc
ljmp
cmp
sub
xchg
sbb
fstpl
xor
mov
lret
jmp
ljmp
ror
sahf
rcrl
popf
mov
ret
sub
clc
sbb
xchg
test
mov
xchg
lahf
jno
fstpt
xchg
dec
pop
sub
sub
ret
jnp
jnp
sub
inc
jmp
loop
jno
cli
sbb
loopne
add
ret
data16
lret
xchg
mov
iret
mov
dec
lret
sub
inc
fwait
js
inc
xchg
lcall
stos
mov
or
adc
orl
iret
pop
pop
jne
arpl
sbb
add
mov
out
jb
cli
sarb
jge
sbb
mov
ds
jg
insb
mov
xor
cmp
out
xor
inc
or
pop
insb
xchg
inc
inc
fisubrl
sti
pushf
push
mov
fstpl
cmp
add
jecxz
adc
shr
stc
adc
pop
rcll
aad
xchg
iret
dec
pop
dec
dec
dec
pop
adc
adc
and
jmp
lahf
jns
repnz
cltd
leave
mov
fs
mov
je
sub
idiv
and
movsl
jne
stc
test
ss
stos
push
mov
mov
test
fcmovne
xor
lret
jmp
or
adc
aaa
jg
dec
popf
adc
push
orb
sbb
cmp
imul
ljmp
push
gs
les
fwait
aaa
xchg
sbb
push
mov
mov
or
outsb
fwait
stos
push
inc
subb
sub
pop
pop
sarb
cli
stos
stos
ficoml
mov
xor
sbb
divb
push
mov
cmp
jnp
mov
movb
aas
lock
push
popf
cli
mov
cmp
sub
and
adc
sbb
lret
push
mov
cmp
xchg
es
push
shr
lret
add
test
aad
test
ja
push
dec
adc
out
test
jle
in
into
push
sti
push
jno
and
push
sub
or
dec
lahf
push
aaa
cwtl
aad
leave
ja
stos
cmp
pop
sub
or
les
inc
dec
out
ret
xchg
mov
or
push
mov
fwait
sbb
lret
xor
dec
sub
outsl
clc
xchg
arpl
dec
push
lret
fisttpl
lret
and
and
lods
pop
add
dec
aas
dec
aaa
xchg
sub
stc
dec
roll
fs
lea
or
jg
mov
pop
push
push
push
inc
mov
xchg
push
sbb
dec
fwait
int3
xchg
outsb
push
mov
or
dec
lcall
cmp
mov
pop
cltd
in
push
and
out
push
loopne
xchg
mov
mov
cmp
fsubrs
cmc
jmp
imul
aad
nop
dec
mov
jl
insb
aam
push
mov
movl
lret
inc
jecxz
lret
std
dec
rorb
cmc
stos
mov
or
inc
sbb
sbb
fcmove
dec
les
jne
dec
rorl
sti
push
or
xor
stc
mov
test
push
stc
xlat
sub
stc
les
stos
pop
mov
push
adc
add
out
leave
daa
lret
push
sbb
push
adc
inc
sbb
sbb
xor
jmp
push
cmp
cli
ret
sub
cwtl
mov
test
dec
fildll
xchg
fmuls
mov
fwait
add
add
lret
cltd
test
jb
sbb
stos
dec
or
or
adc
jb
lods
cltd
or
pusha
sti
mov
stos
jp
add
sub
lcall
inc
out
mov
jp
mov
aam
pop
mov
sub
push
mov
mov
or
jnp
mov
fstpt
cmp
cmp
mov
jle
je
scas
and
pushf
es
in
push
in
test
out
cmp
pop
xlat
mov
cmp
mov
shrb
push
std
sbb
sbb
cmc
push
lahf
imul
lods
inc
shlb
or
ja
mov
movsl
push
sbb
shr
jnp
cltd
dec
gs
cltd
sub
or
insl
mov
stc
xor
mov
icebp
jle
mov
or
data16
fisubrl
dec
cmc
fs
pop
pop
js
ret
mov
mov
inc
adc
adc
mov
inc
mov
shlb
add
inc
lret
or
lcall
leave
ror
push
test
sbb
push
push
xor
xchg
and
loop
dec
lock
rolb
imul
ss
push
cmp
push
aaa
sti
xchg
mov
sbb
into
fidivrl
std
adc
cmp
dec
lret
movsl
cmc
push
repnz
aaa
pop
push
in
mov
imul
fsubrl
push
and
cmp
push
jmp
xlat
sbb
dec
mov
pusha
lds
lcall
mov
sbb
mov
cmp
fists
mov
mov
mov
ficompl
jmp
and
and
pop
pop
fwait
fwait
dec
fistl
and
or
cmp
sub
ja
push
add
xor
push
dec
dec
in
push
lret
sahf
out
and
mov
cwtl
cmp
add
repz
cmp
fdivs
and
mov
mov
or
mov
cltd
lahf
mov
lods
movsl
pop
sub
mov
sub
lahf
fiaddl
inc
push
push
imul
add
ja
xor
xor
dec
dec
outsb
daa
lret
jmp
aas
mov
int3
int
fistpl
jnp
sub
sub
cmp
mov
push
pop
fdivrp
or
test
sub
jne
jnp
sub
jnp
sbb
imul
push
jno
ss
je
out
push
push
sbb
inc
sbb
cmp
push
push
fdivl
mov
and
lret
dec
repz
sub
lret
cwtl
cmp
in
xor
mov
and
fidivs
lea
ja
sahf
push
mov
and
inc
mov
sbb
sbb
sub
adc
xor
fcmovne
outsl
push
adc
sbb
fwait
out
pop
xor
fiaddl
and
or
dec
xchg
sub
stos
xchg
out
fldt
cmp
ret
sti
dec
fwait
lcall
int3
xchg
cmpb
sbbl
stos
sbb
or
jae
add
pop
dec
daa
xchg
sub
mov
xchg
add
or
mov
sbb
call
sub
push
xorb
mov
jecxz
inc
mov
fcoml
lret
gs
jbe
into
sahf
adc
test
in
clc
jp
sub
sbb
jmp
lret
xor
sbb
jbe
mov
sahf
push
push
or
mov
js
stos
dec
mov
sub
dec
pop
enter
popa
movl
dec
cmpsb
jp
mov
jmp
stc
das
lahf
imul
int
push
fmull
pusha
mov
adc
subl
test
mov
icebp
xchg
sbb
jne
pushw
or
mov
dec
push
loop
fwait
inc
in
addr16
mov
mov
int
mov
inc
inc
sbb
jmp
popf
mov
lret
out
sbb
ds
sbb
mov
mov
mov
add
jns
out
cwtl
pop
xlat
lret
ss
into
or
or
frstor
mov
enter
stos
movsl
jmp
adcb
push
test
push
or
inc
out
jge
sbb
loop
repnz
jae
cmp
scas
mov
loop
out
mov
mov
dec
pop
imul
lret
push
xchg
aaa
xchg
aad
cmc
and
stc
lahf
xor
lcall
jle
mov
stos
test
sub
test
rorb
int
sub
mov
scas
pop
mov
fwait
mov
iret
stos
test
pop
lret
fwait
jns
or
or
xchg
jnp
push
fistpl
imul
xor
dec
sbb
shlb
mov
addr16
sub
mov
mov
fwait
sub
stc
aad
std
std
lret
lods
or
jne
add
pop
lcall
adc
xchg
mov
rorl
loope
add
and
stos
adc
jnp
mov
dec
cwtl
pop
xchg
jg
dec
add
aaa
seto
and
fisttpl
icebp
cmp
or
sbb
or
bound
ja
add
add
mov
std
jnp
mov
add
or
lea
xchg
pop
xchg
pop
mov
push
add
test
sbb
jb
ret
pop
shr
cmp
add
stos
push
or
testl
cmc
cmp
mov
in
mov
adc
test
icebp
pop
jae
xchg
mov
imul
popf
mov
dec
stos
pop
pop
test
xlat
loope
and
pop
fldcw
imul
fiaddl
xchg
cltd
into
xor
xchg
cwtl
or
mov
sub
nop
dec
pop
add
out
pop
mov
out
xchg
bound
mov
xchg
popf
or
adc
jmp
and
outsl
enter
xor
pop
maskmovq
test
mov
shrl
jl
jmp
lea
pop
sbb
or
popa
cmp
xor
rclb
mov
xchg
imul
or
or
inc
jmp
ljmp
pop
sub
inc
sub
adc
fwait
rcrl
mov
and
push
mov
pop
cltd
addl
jne
jmp
sub
mov
mov
adc
pcmpgtb
repnz
jmp
mov
dec
pop
lds
fildll
jmp
or
push
dec
mov
pop
add
movsb
jecxz
fs
push
cmp
pop
bound
pusha
jmp
dec
lods
push
imul
push
addr16
dec
xchg
cmpsb
cmp
xor
add
ljmp
jmp
dec
sub
sbb
pop
ljmp
push
pop
iret
jno
cld
push
data16
je
rcpps
xlat
or
xchg
shll
mull
push
sub
xor
fisttpll
or
inc
lea
andb
xchg
push
shll
add
and
stc
mov
rcrl
ljmp
pop
mov
popa
xor
jmp
pop
cmp
cmp
shll
mov
mov
sub
bound
sbb
scas
imul
cmp
rcrb
les
pushf
pop
fistps
mov
pop
and
scas
push
inc
pop
leave
mov
daa
xchg
jecxz
fsubs
fisttpl
push
gs
cmp
sbb
xchg
pusha
pop
pop
push
outsl
xchg
cmpsl
mov
pushf
inc
int3
mov
ret
call
inc
jae
repnz
pop
daa
pop
cmpsb
in
cmp
xor
lret
pop
mov
mov
addr16
adc
hlt
enter
pop
pop
outsb
or
mov
jns
push
ljmp
xor
cmp
cmp
or
cmpsl
scas
outsb
push
pop
lahf
rcll
mov
out
inc
adc
and
fldl2e
or
fisubs
mov
in
sub
or
enter
xor
push
and
xchg
mov
fwait
pop
ljmp
mov
outsb
dec
mov
mov
pop
es
xor
add
ljmp
ds
aaa
inc
dec
adc
pop
lcall
inc
cmp
stos
imul
and
pop
xor
int3
sub
popf
and
sbb
push
pop
subl
add
dec
in
test
push
jmp
inc
xchg
imul
pop
aad
test
stos
stos
imul
xor
roll
mov
sub
push
dec
mov
pop
imul
sbb
add
cmpsb
mov
fwait
sbb
mov
and
cmp
insl
fsubl
adc
dec
xorl
pop
add
push
or
lcall
shll
and
pop
dec
out
test
mov
lcall
pop
repnz
scas
enter
mov
xchg
pop
adc
xor
sub
push
push
fimull
pop
add
popf
pop
dec
pop
pop
xchg
xchg
or
or
fwait
pop
lea
adc
add
cmc
sti
mov
push
nop
rcrb
popf
push
jnp
mov
ret
dec
sarb
dec
pop
push
sub
leave
outsb
ljmp
sbb
mov
jmp
fdivl
ret
dec
adc
fildll
es
push
dec
dec
or
add
or
mov
imul
in
dec
push
cmp
pop
outsl
lock
pop
pop
and
push
pop
arpl
adc
pop
dec
cli
ds
pop
ret
jmp
sarb
adc
ljmp
cli
or
pop
test
push
mov
sahf
inc
and
repz
sbb
mov
jnp
push
pop
mov
sti
das
shr
js
pop
enter
repz
ret
ret
sbb
or
or
sub
shll
mov
mov
jl
xor
inc
sbb
jnp
mov
pop
mov
or
xchg
push
inc
sbb
outsb
fs
pop
pop
lcall
cmp
lahf
pop
jno
pop
jo
imul
mov
daa
stos
mov
inc
inc
in
mov
scas
lcall
sub
sub
mov
push
push
sub
adc
adc
into
test
push
pop
ljmp
cmc
pop
lods
push
cs
cltd
mov
cld
cmp
sahf
ret
pop
repz
xor
int
sub
iret
pop
mov
push
inc
fildll
loop
in
pop
xchg
dec
sub
xor
test
and
push
dec
pop
popf
sub
sbb
ljmp
push
xchg
jp
out
lds
arpl
xor
fisubrl
popf
xchg
pop
test
and
xor
push
hlt
cmp
mov
inc
cmp
leave
add
movsl
test
pop
ret
push
loop
sbb
addr16
lret
pop
aaa
mov
rorb
pop
movsl
sahf
sbb
lahf
dec
in
out
aas
imul
pop
sub
mov
dec
inc
pop
mov
pop
mov
es
pop
or
inc
testl
dec
xchg
movsl
mov
stos
lcall
aam
mov
outsl
cs
adc
jbe
mov
mov
scas
pop
jne
push
ja
ss
push
cmp
add
lcall
pop
adc
adc
push
cmpsb
mov
ljmp
imul
icebp
sub
gs
mov
sub
andb
xlat
pushf
dec
rcl
cmp
ja
mov
fwait
cltd
or
pusha
sbb
pop
push
int
inc
add
pop
push
lahf
add
sbb
test
mov
xor
or
cmp
adc
jecxz
outsb
pop
pop
adc
lahf
mov
push
insl
ret
adc
push
das
movb
or
pop
push
mov
jns
cmp
adcl
inc
or
ljmp
imul
jbe
pop
add
imul
fstpt
lahf
pushf
sub
cld
dec
aaa
addr16
or
adc
jbe
cmp
shll
in
into
aaa
mov
pop
test
lcall
cmpsb
mov
loopne
mov
pop
in
sbb
xchg
sahf
jmp
pop
cmp
adc
or
fadds
nop
dec
mov
fwait
and
pop
shll
mov
xor
pushaw
addr16
pop
in
popf
jecxz
jae
xor
or
lcall
xor
test
int3
xchg
pusha
pop
and
add
ljmp
aam
repz
lods
loope
es
fildl
add
mov
imul
xchg
shll
dec
or
adc
jbe
pop
push
test
cmc
dec
mov
jmp
orl
pop
sbb
imul
xchg
pop
mov
jbe
fsubrs
or
negb
jo
mov
push
fs
jp
adc
xchg
jmp
or
pop
xor
push
adc
pop
sti
mov
fimull
pop
jmp
push
cmp
repnz
pop
int
or
cltd
jo,pn
pop
enter
leave
sub
pusha
cmp
clc
jg
mov
pop
mov
mov
popl
and
aad
outsl
ficompl
mov
dec
or
dec
das
pop
out
pop
sti
les
fs
push
test
popf
out
mov
xchg
pop
mov
aaa
pop
push
mov
inc
or
ljmp
lcall
jbe
test
jae
inc
xchg
inc
mov
addr16
in
es
iret
pop
xchg
mov
fdivp
pusha
push
pop
or
mov
mov
mov
mov
or
inc
ljmp
pop
push
std
and
jnp
fcmovb
pop
sti
cltd
dec
or
loopne
xchg
sub
xchg
inc
pop
lahf
scas
dec
jbe
stc
mov
test
popa
test
sub
aad
or
imul
cmc
pop
aaa
dec
adc
sahf
and
aad
sarl
cltd
jbe
out
pop
test
or
mov
push
cmpl
loopne
fsqrt
in
push
add
mov
pop
aaa
test
xor
sub
popa
jp
inc
sub
push
in
test
fistpl
xor
push
cvtdq2ps
sub
insl
sbb
dec
pop
rorl
mov
ret
mov
decl
xor
ljmp
jbe
pop
pop
jnp
cmpsb
lret
mov
adc
push
inc
popa
lods
xchg
test
mov
xchg
adc
adc
imul
fstps
push
pusha
and
mov
pop
aas
fcomps
sub
mov
fnstenv
pop
mov
cltd
mov
pop
push
ss
mov
and
nop
xchg
cld
ljmp
pop
repz
mov
cmpsb
les
in
imul
add
inc
das
punpckhwd
mov
fdivs
movsb
jle
mov
jb
test
jmp
mov
and
dec
cmp
arpl
pop
es
push
notl
icebp
addps
jns
jmp
pop
popa
pop
hlt
lods
adc
mov
push
flds
ret
pop
ljmp
jbe
pop
mov
stos
mov
dec
movsl
shrb
pop
or
add
adcl
jmp
jb
pop
or
push
push
pop
pop
in
arpl
xor
pop
mov
fs
shl
pop
adc
mov
pop
cmp
pop
pop
shll
add
sub
mov
pop
cmp
notb
xchg
mov
push
lahf
insb
pop
repnz
add
adc
and
and
push
push
mov
negl
aaa
jl
test
jecxz
sahf
xchg
addr16
movsl
mov
rorl
rolb
stos
jbe
cmp
xchg
jmp
pop
add
movsl
add
repnz
pop
pop
dec
std
push
mov
ret
dec
dec
inc
pop
popf
push
pusha
pop
push
in
mov
dec
pop
xor
imul
dec
jb
or
je
inc
mov
inc
push
stos
pop
movsb
pop
mov
fiadds
pop
jmp
pop
inc
lahf
jae
dec
in
cmp
dec
lcall
sub
pop
popf
xor
fstps
sub
xor
pop
mov
push
addr16
cs
fistpl
mov
imul
pop
push
pop
ficoml
shll
adc
fs
push
cmp
pop
int3
cli
or
dec
popf
cmp
cltd
jge
pop
xchg
cltd
fcmovnbe
jno
dec
pop
ret
xor
pop
enter
push
mov
or
push
jp
pop
mov
sbb
pop
add
xor
test
push
das
stc
pop
jo
std
leave
fisubrs
dec
sbb
stos
push
adc
add
jne
xchg
je
addb
pop
jae
sub
sub
xor
ljmp
jp
dec
shl
cmp
loope
imul
jbe
xchg
inc
push
jae
sub
ds
pop
mov
mov
js
xor
mov
push
lods
movsl
fidivrs
mov
arpl
push
bound
and
cmp
loope
fcomps
mov
add
cmpsl
into
push
xor
cmp
push
inc
xchg
pop
xchg
inc
roll
or
pop
daa
jns
xlat
cli
or
jno
mov
sub
daa
pop
je
jns
loopne
and
xor
test
pop
jbe
popa
test
fsubrs
imul
mov
xor
or
scas
and
outsb
lea
xchg
popf
sub
pop
test
mov
es
push
cmp
mov
das
fmuls
jmp
cwtl
pop
outsl
decl
adc
andl
add
push
and
pop
sub
push
add
xchg
cmp
in
int
pop
rcl
sub
push
clc
cmp
hlt
pop
push
jbe
push
int
and
pop
push
daa
sbb
push
add
mov
stos
mov
push
inc
arpl
jecxz
or
fbstp
scas
fcomps
xlat
inc
vcmpss
inc
movsl
cltd
dec
mov
mov
add
in
add
test
clc
insl
sti
ja
movsl
pop
ret
mov
lret
test
and
dec
push
and
mov
shll
test
jne
pop
imul
pop
jae
pop
jns
mov
int
sub
andb
adc
arpl
je
mov
sbb
add
push
add
pop
inc
fsts
pop
sahf
jo
jmp
fs
sub
push
aaa
cwtl
or
arpl
sbbl
jl
mov
insl
and
pop
imul
out
or
fadd
pop
cld
xor
outsb
stc
cmpsb
ret
lret
mov
lods
mov
imul
in
das
jne
pop
inc
push
push
mov
pop
add
mull
mov
xchg
push
inc
imul
mov
neg
and
inc
loopne
push
xchg
mov
in
dec
pop
push
sbb
aad
jne
rcrl
imul
fxch
leave
sub
add
adc
xchg
in
inc
outsb
mov
test
push
fadds
push
push
sbb
shll
pop
lcall
test
mov
in
and
inc
pop
popa
mov
sub
ljmp
pop
add
lock
jl
pushaw
pop
ss
addb
jmp
jmp
dec
xor
jbe
jns
iret
ja
push
xor
xor
jle
cmp
add
pop
push
lcall
adc
push
mov
sbb
push
pop
push
xchg
push
adc
and
pop
inc
int3
xor
out
mov
std
jb
repz
dec
adc
cmp
fdivr
pop
sub
push
mov
out
enter
fistpl
add
xchg
push
cmp
and
and
cltd
xor
ljmp
pop
dec
mov
jp
pop
dec
cmp
add
adcb
cld
imul
clc
lds
jmp
call
ljmp
inc
push
pop
push
es
mov
or
mov
test
pop
push
aas
sub
add
pop
ljmp
daa
stc
in
cmp
std
push
mov
popf
out
mov
pop
push
pop
adc
dec
scas
xlat
pop
mov
xchg
lret
mov
fsubr
adc
xor
popa
bound
das
jbe
pop
add
mov
outsb
incb
fmuls
pop
sti
add
pop
or
jbe
sub
sub
dec
rcll
or
std
or
and
jge
cli
add
fdivl
mov
lahf
or
mov
cmp
xor
pop
rcrl
pop
and
xchg
sub
jb
xchg
pop
push
pop
mov
lcall
scas
dec
sahf
test
ja
pop
adc
push
lahf
popa
outsl
shrb
stos
push
pop
mov
xchg
lret
push
fstps
imul
sbb
jne
push
das
ds
adc
aam
test
mov
cs
leave
cli
push
sbb
push
dec
pusha
adc
das
pop
mov
xchg
mov
pop
pop
jns
mov
sub
pop
xor
sub
xchg
lret
loop
pop
pop
pushf
out
inc
sbb
add
push
shl
push
ds
inc
ljmp
lret
jl
pop
popf
push
cmpsl
sahf
int
cld
lods
jb
and
pop
push
lea
mov
lahf
jp
dec
sbb
ljmp
ss
addr16
mov
push
lcall
push
xchg
jecxz
jne
lock
pop
ret
push
jmp
mov
scas
jb
inc
push
mov
xchg
or
jp
cmp
mov
push
dec
push
jl
cmp
stos
sub
sbb
cmp
jle
lea
pop
xor
arpl
cmp
ds
imul
out
push
ljmp
js
mov
pop
ret
mov
addb
lret
sbb
daa
ljmp
pushf
pop
mov
test
jbe
in
sub
pop
cmp
inc
mov
outsb
pop
cmp
cld
or
mov
packsswb
mov
out
jbe
push
fwait
jecxz
mov
enter
fimuls
pop
jnp
in
add
jns
pop
adcb
jmp
out
pop
loop
mov
pop
xor
cmp
lcall
mov
sub
and
dec
xchg
pop
ljmp
sub
ror
xor
or
cmpsb
fsubs
mov
repnz
es
std
xchg
orl
lcall
imul
int3
dec
enter
sub
pop
cpuid
mov
insl
shlb
cmpb
pop
shl
arpl
cmp
inc
lods
int
sbb
and
push
imul
jns
cmp
subb
pop
sbb
ret
push
pop
into
or
sub
sub
dec
pop
in
mov
add
ljmp
bound
adc
sbb
jp
or
test
dec
and
ljmp
dec
lret
pop
pop
and
dec
bound
ret
mov
jmp
scas
push
sub
inc
mov
lods
int3
rcrl
pop
mov
push
xor
pop
pop
mov
inc
cmp
pop
sbb
insl
or
pop
mov
jmp
cmp
addb
jle
lds
pop
ljmp
push
pop
adc
call
jg
arpl
int3
dec
pop
dec
loopne
insl
and
add
adc
or
lods
test
mov
pop
ljmp
std
stc
movsb
pop
aam
push
jmp
pop
sbb
movsl
mov
xor
mov
push
lahf
aas
pop
daa
pop
je
push
jmp
mov
pop
imul
dec
je
inc
sahf
mov
pop
punpckldq
mov
leave
sbb
scas
mov
dec
xchg
aaa
clc
cltd
pop
adc
cmpsl
nop
push
fwait
arpl
push
ljmp
adc
cltd
cltd
icebp
daa
jmp
sub
xchg
jecxz
dec
ljmp
mov
pop
inc
scas
or
mov
lahf
int
dec
hlt
sub
test
loop
pop
add
sbb
mull
out
sub
in
or
dec
leave
mov
xchg
mov
mov
push
out
pop
add
fcomp
aad
and
rolb
pushf
fwait
je
add
mov
lea
enter
mov
mov
xorb
sbb
push
inc
xchg
pop
ret
inc
jmp
jbe
adcl
data16
fidivrs
and
stc
or
push
dec
loop
dec
ret
iret
adc
lea
inc
into
add
fadd
cmp
clc
call
lds
sahf
mov
and
sbb
int
lods
push
push
or
pop
stos
cltd
addr16
mov
daa
mov
cwtl
dec
popa
lcall
cltd
xchg
pop
ljmp
mov
fstps
ret
pop
push
mov
ds
loope
stc
push
push
cmp
xchg
push
fcmove
adc
push
imul
push
and
xor
fcoml
and
or
sub
pop
ljmp
xor
jmp
rcrl
mov
xchg
out
xor
pop
scas
outsb
push
mov
movsl
fstl
sub
pop
je
and
pop
arpl
sbb
ljmp
sbb
xor
xor
cli
xor
push
gs
int
scas
jl
aad
or
adc
cltd
leave
pop
xchg
xlat
xchg
pop
popf
inc
loope
rolb
clc
xchg
cmp
dec
push
cwtl
ficomps
js
xor
cmp
mov
out
cs
mov
add
mov
xchg
rcll
add
dec
pusha
mov
mov
arpl
cmp
insl
fdiv
sub
sbbl
xchg
pop
scas
roll
popf
sti
sub
xorl
adc
lds
push
add
and
insl
dec
cmp
xchg
adc
mov
add
xchg
pop
test
add
insl
inc
or
pop
mov
gs
clc
out
adc
pop
hlt
jne
icebp
nop
outsl
pop
dec
cmp
addl
insl
jns
pop
popa
inc
pop
inc
jno
jns
pop
dec
push
xchg
fldenv
adc
pop
repz
fsubrs
dec
data16
mov
and
xor
test
add
ficompl
pop
dec
fbld
subl
and
sub
jbe
clc
cmp
xor
pop
in
fs
pop
lods
and
leave
testl
and
pop
mov
adc
or
idivb
repz
fimull
outsl
jge
push
pop
lret
adc
adc
mov
xchg
push
pop
inc
mov
movsb
xchg
fnsave
in
pop
push
ljmp
push
fucomi
sub
xor
pop
jp
das
rcr
pop
fisubl
push
and
or
sarb
scas
inc
fdivp
push
mov
inc
push
divb
xchg
mov
add
pop
dec
scas
loope
sbb
std
stc
mov
subl
cltd
fdivs
mov
sub
dec
mov
loopne
shrl
add
mov
push
mov
xchg
shlb
pop
xchg
add
out
iret
aad
test
scas
lret
cmpsb
lahf
mov
inc
pop
movsl
je
ljmp
imul
out
pop
loope
add
dec
xchg
and
popf
push
mov
adc
fldt
pop
fistps
cmc
addr16
ficompl
add
pop
pop
pop
and
push
data16
or
fnstcw
jecxz
xchg
mov
roll
lods
xchg
push
sbb
pop
cmp
cld
jp
cmp
das
pop
stc
popf
aam
or
and
xchg
xor
pop
mov
mov
sahf
movsb
push
aam
jbe
in
push
sub
dec
xor
hlt
fwait
mov
jp
xchg
jbe
stos
pop
mov
mov
pop
pop
pop
shlb
daa
stc
mov
hlt
mov
movsl
aam
pop
repz
arpl
cmpsl
sub
insl
jmp
cli
sbb
jmp
pop
lret
cwtl
xor
or
jae
adc
in
pusha
jge
rcrl
out
push
out
pop
aam
movsl
jb
mov
sbb
stos
sbb
dec
popf
mov
orb
cmp
pop
lret
cltd
xchg
push
fnstenv
push
inc
ret
test
andl
pop
imul
inc
mov
push
inc
mov
aad
push
aam
push
cmp
mov
cltd
mov
lods
sub
pop
iret
fs
mov
sbb
jno
ja
out
pop
ljmp
mov
inc
sub
stos
adc
insl
jo
pop
cmpsl
imul
mov
pop
leave
pop
adc
imul
ss
mov
cltd
in
mov
loopne
mov
push
ljmp
xchg
in
push
leave
mov
push
adc
pop
pop
and
call
lret
push
push
sbb
pop
cmp
repnz
fxam
imul
pop
jmp
in
arpl
test
ss
daa
lcall
push
loopne
leave
pop
pop
lret
and
pop
js
data16
shrl
mov
sbb
test
adc
push
popf
sbb
xchg
dec
popa
inc
adc
fnstenv
shl
sbb
into
in
pop
sub
ljmp
fisttpl
dec
sbb
je
xor
cmp
cmp
dec
mov
cmp
ljmp
push
sub
pop
jmp
dec
xor
ljmp
jg
int3
cmp
and
dec
aad
jbe
lahf
ret
mov
jecxz
pop
pusha
pop
adc
pop
jge
xchg
ds
adc
xchg
push
mov
pop
stos
cmp
xor
fwait
cmp
jle
outsb
push
pop
lahf
pop
fiadds
cli
icebp
pop
sti
xchg
ja
sub
and
and
sbb
sub
pop
mov
bound
pop
stos
fisubl
jo
push
out
cmc
sbb
fmull
mov
pop
push
std
insb
dec
cmp
ficomps
call
xchg
jnp
pop
enter
imull
pop
pop
jns
and
fdivr
cmp
mov
or
hlt
icebp
xor
mov
jbe
push
lret
jl
ficompl
ds
lret
and
lcall
mov
js
push
push
sub
mov
pop
dec
lea
or
enter
test
adc
mov
pop
lock
fisttpll
mov
inc
inc
sub
push
nop
sbb
pop
jmp
push
mov
pop
popf
push
out
push
popa
das
movsb
rcr
fwait
pop
pop
sub
push
sti
or
lock
int3
negl
mov
xchg
in
push
jge
sarb
cmp
push
sarl
clc
pop
mov
testb
insb
js
pop
push
cmpsl
fldt
sub
sbb
dec
push
mov
cmp
inc
shr
lea
cmp
scas
mov
mov
dec
loope
and
ret
push
adc
out
pop
pop
std
or
lahf
jno
push
mov
pop
out
xchg
movsl
jmp
cmp
lret
push
jp
repz
or
xchg
pop
sbb
cmp
cltd
cli
jnp
jmp
mov
mov
fbstp
or
pop
fwait
push
je
push
inc
jno
inc
push
dec
mov
sbb
lret
sub
test
cmpl
dec
cmp
icebp
rcrb
or
jnp
xor
shlb
mov
or
fs
push
jnp
add
out
test
mov
pop
jmp
das
sub
pusha
dec
dec
push
mov
cmp
and
loope
mov
movl
jp
pop
into
inc
push
imul
or
fdivs
dec
lahf
cmp
cs
push
dec
ret
aad
aas
sub
pop
add
adc
stos
pop
cmp
or
push
fdivrs
inc
sbbb
inc
or
cmp
popf
sub
cmp
in
pop
or
xchg
mov
or
mov
cmp
pop
xor
or
clc
pop
fstps
jae
pop
stos
arpl
das
adc
jbe
sub
imul
mov
add
pop
sub
imul
pop
fwait
movsl
mov
imul
popf
ljmp
in
scas
addl
iret
mov
pop
sub
ljmp
addr16
sbb
push
jnp
cli
repnz
incb
mov
in
and
or
push
pop
jecxz
cmc
cld
cmp
xlat
dec
ss
movsl
repz
push
inc
insl
and
adc
mov
cs
jmp
push
fidivs
push
mov
divl
pop
shl
mov
push
jmp
jmp
push
pop
jmp
push
push
cmp
dec
rcrl
mov
fistps
and
in
jl
jns
dec
pushf
adc
pop
icebp
xlat
cli
xchg
ret
pop
mov
xchg
ficoms
jne
cwtl
push
push
add
dec
inc
outsl
les
pop
shrb
cmpsb
mov
mov
loope
jp
gs
push
mov
je
or
jno
pop
push
stc
stos
outsb
sbbl
pusha
cltd
cmpsb
ljmp
rolb
push
js
pop
xlat
xor
pop
dec
and
pop
adc
loopne
xor
movsl
lock
and
adc
outsl
test
pop
hlt
sbb
movsb
cmc
loopne
cltd
jmp
int3
cmp
push
xchg
cmp
push
sti
mov
push
push
cmp
into
dec
push
movsb
xchg
and
xchg
or
mov
mov
jl
dec
mov
sbb
xchg
mov
ss
shrb
ljmp
adc
jp
mov
push
cs
cmpsb
push
sarb
call
cmp
and
daa
adc
pop
pop
mov
mov
xor
std
pop
cmpsb
shr
push
xor
cli
inc
push
gs
adc
repz
test
fstl
lahf
sbb
out
mov
aaa
ficoms
dec
pop
push
fsubl
pop
push
dec
int3
daa
push
out
test
jns
fstpl
mov
cmp
ret
ljmp
lahf
push
adc
push
xchg
gs
sub
mov
sub
jmp
stos
pop
dec
mov
cmpsb
and
cld
rcrb
fidivl
add
push
jbe
and
add
pop
pop
jmp
cmp
push
jge
movsb
pop
jo
outsb
lock
dec
mov
sub
jp
mov
xchg
pushf
hlt
xchg
mov
sarl
movsl
dec
jno
and
outsb
jecxz
adc
fsubr
pop
xor
insb
push
int3
repnz
outsl
pop
push
mov
adc
mov
and
cwtl
pop
mov
push
sub
out
iret
pop
jns
xchg
dec
dec
outsb
mov
cmpsb
add
out
xor
icebp
sbb
popf
pop
jnp
js
sbb
xorb
pop
inc
jmp
xchg
hlt
insb
fwait
push
jp
stc
mov
rcrb
das
fbld
cs
test
loopne
test
adc
lret
icebp
sti
xchg
mov
pop
std
pop
adcb
push
pop
push
test
adc
push
jecxz
add
lock
popf
neg
and
scas
aad
adc
pop
dec
adc
fstpl
data16
pop
int
cmp
sbb
lods
push
pop
inc
push
testl
add
dec
subb
jge
fstpl
jmp
sub
daa
dec
and
int
push
inc
and
push
push
pop
cs
and
dec
jne
jns
push
xor
mov
jmp
adcl
arpl
pusha
pop
pusha
insb
cmc
bound
bound
or
pop
fsubs
sti
test
movsl
xchg
mov
pop
repz
sahf
pop
inc
in
pop
and
dec
faddl
push
popa
pop
jb
repz
sbbl
pop
fidivrl
inc
out
pop
pop
jae
push
maskmovq
pop
push
jno
push
pop
and
sbb
icebp
out
push
mov
xor
mov
xor
test
shll
push
pop
jmp
enter
push
outsb
pop
add
pop
test
mov
dec
mov
and
push
push
jge
fs
in
pop
fisubrl
fistl
pop
scas
pop
sub
addr16
push
outsb
fstl
test
pop
jae
or
insl
lahf
mov
lcall
jne
adc
adc
add
pusha
fidivrl
sub
testl
add
mov
imul
adcl
inc
sbb
cmp
mov
sbb
or
xchg
mov
inc
pop
push
fdivrs
pop
out
rcl
xlat
sub
sub
or
adc
popf
push
and
sbb
inc
pop
xchg
cmp
ds
shlb
movsb
outsb
stos
es
pop
and
fnsave
cltd
std
ljmp
cld
xchg
inc
cmpsb
cli
add
roll
imul
pushf
or
sbb
fwait
js
pop
xchg
cmc
xchg
adc
cmp
ror
iret
push
or
lret
clc
stos
subl
adc
mov
mov
out
arpl
mov
lcall
dec
fcoms
popa
hlt
pop
enter
cwtl
xor
rorl
pop
dec
mov
adc
jmp
aam
and
sbb
sub
mull
dec
movsb
aam
pop
aas
adc
dec
repz
adc
push
xor
sub
mov
push
enter
and
pop
pop
sub
int
icebp
mov
xor
cmp
div
push
cltd
movsb
pop
push
rcrl
data16
imul
xchg
xchg
mov
pop
lods
cmc
jecxz
sbb
xor
rcll
jle
pop
xchg
add
or
jns
insl
cmpsb
dec
imul
pop
jmp
ss
push
nop
imul
sbb
push
sbbl
lods
push
sub
ljmp
sahf
push
pop
jmp
add
sbb
dec
and
mov
pop
sbb
cltd
ss
push
pop
insl
or
xlat
sbb
sub
fldcw
mov
insb
rclb
dec
add
push
dec
push
out
cwtl
adc
pop
bnd
xchg
dec
sbbb
inc
or
test
repz
jecxz
jp
jb
gs
pop
jle
cmp
mov
cs
pop
addr16
pop
les
or
lcall
jmp
pop
cmp
xchg
jecxz
cli
dec
sub
and
jbe
adc
pop
lret
xor
pop
fistl
xchg
lock
push
lcall
xchg
pop
jecxz
sub
or
jg
cmp
outsl
sub
cltd
les
mov
pop
dec
xchg
mov
cmpsb
mov
jo
in
lds
mov
pop
push
ljmp
xchg
inc
pop
mov
sub
jmp
lret
pop
das
mov
int
cltd
mov
movsb
sbbb
xor
push
xchg
push
pop
and
sbb
loop
or
pop
fs
nop
xor
push
roll
data16
mov
nop
add
lods
pusha
adc
cmc
xchg
sub
rol
imul
in
mov
pop
mov
scas
ret
pop
lret
sahf
dec
lret
xchg
add
lea
cwtl
shlb
pop
sub
movsl
cli
or
ds
aam
fwait
out
jo
out
ja
pop
pop
push
and
push
jmp
mov
aam
das
xchg
pop
scas
sub
xchg
jle
in
nop
cmpsl
sbb
xchg
inc
mov
xchg
popf
mov
imul
movsl
arpl
sbb
mov
push
leave
int
fsubrs
pop
sub
add
mov
cmp
cmpsb
mov
sti
or
loope
xchg
test
orl
pop
stos
imul
popa
scas
mov
push
and
mov
in
or
sti
shll
outsl
mov
xchg
sub
mov
dec
sti
xor
or
cs
add
push
add
out
bound
lahf
loop
add
pop
cmp
or
and
into
movsl
pop
mov
lds
loop
mov
pop
pop
jle
push
push
in
clc
cmpsl
sbb
sahf
xchg
repnz
incl
push
pop
cmovb
pop
rorl
bound
arpl
pop
fldenv
jmp
stos
pop
pop
outsb
in
pop
addr16
pop
lret
adc
push
sbb
ss
mov
inc
xor
pop
mov
push
xor
enter
lcall
push
dec
cmp
insb
sub
mov
xlat
mov
pop
sub
call
pop
shrb
push
pop
sub
adc
lds
mov
addr16
pop
mov
insl
rolb
xor
pop
pop
inc
ljmp
negl
pop
fdivs
push
dec
jl
daa
fistps
push
pop
add
dec
popf
pop
jbe
jecxz
sbb
sub
aaa
lret
xor
cmp
jns
pop
loopne
mov
push
add
sub
fbld
imul
dec
iret
add
pcmpgtd
rorb
jmp
outsl
pop
push
movb
sub
cmp
dec
testl
test
daa
enter
pop
outsl
jb
push
lock
aaa
pop
jmp
imul
leave
inc
pop
addl
ret
ss
add
outsb
mov
imul
pop
ss
rorl
movsl
pop
sbb
add
gs
pop
inc
push
push
or
pusha
mov
ds
aaa
adc
pop
inc
xor
sbb
les
push
popa
sub
adc
mov
fldl
xchg
push
jge
lret
xchg
popf
sbb
sub
mov
lcall
ret
jl,pt
jge
pop
push
dec
add
pop
sub
mov
ret
adc
push
pop
inc
imul
dec
push
jge
xlat
out
dec
cli
pop
jns
ja
xchg
dec
dec
and
and
jnp
or
stos
xor
and
dec
addr16
xchg
fs
cltd
inc
aaa
push
ficomps
mov
in
cmpsb
jg
push
shll
cmp
pop
insl
mov
lahf
pop
push
sub
lods
jb
leave
pop
push
cmp
push
icebp
pop
jno
int3
mov
pop
cmp
adc
daa
mov
pushf
sarl
fldcw
pop
flds
rcrb
sahf
jecxz
xor
push
and
cmp
sbb
out
cmpsl
arpl
jb
fmuls
dec
jns
test
xchg
pop
mov
xchg
and
jmp
aas
inc
loopne
pop
shrl
or
pop
imul
cli
cmp
mov
push
pop
push
sub
add
addr16
dec
xor
js
dec
int
ljmp
add
lcall
repz
mov
cmp
pop
addb
outsl
push
pop
inc
push
popf
pusha
sbb
mov
ljmp
pop
movsl
and
xorl
xor
lods
dec
push
cs
xchg
lcall
pop
pop
stos
popf
and
js
jmp
es
pop
jae
imul
cmp
loope
cmp
pop
mov
rcrl
add
hlt
xchg
xor
inc
fcoml
cli
push
ljmp
daa
lock
add
push
push
les
mov
pop
jno
out
lea
push
fisubl
adc
jge
pop
mov
lcall
and
cmp
adc
clc
jg
mov
and
lea
roll
gs
jp
orb
int
mov
jae
xchg
push
push
pushl
pushf
push
in
xchg
inc
int
and
cli
es
dec
fs
pop
add
mov
sbb
xchg
sub
push
inc
pop
mov
add
pop
int3
nop
inc
mov
sub
xchg
xor
sub
mov
mov
icebp
dec
mov
and
push
stos
bnd
cltd
cmp
adc
mov
and
push
pop
fcoms
push
xchg
das
lea
sbbb
dec
xchg
stc
xor
into
mov
daa
fnstsw
movsb
xlat
loopne
sub
mov
ljmp
jo
sti
jne
call
and
sbb
mov
jmp
std
pop
adcl
push
cmp
dec
pop
nop
inc
sub
dec
adc
scas
in
sbb
jg
pop
adc
mov
arpl
jno
xor
aad
push
mov
push
or
stos
pop
sub
inc
mov
ja
stos
pop
int
mov
pushl
ljmp
and
mov
cmp
fstpt
mov
stos
das
out
pop
or
popa
dec
fistps
les
mov
push
lret
inc
jmp
lret
pop
adc
pop
xchg
aad
push
and
fimull
jmp
pop
sahf
and
add
ja
aad
push
stc
and
mov
mov
mov
mov
adc
fstpl
jle
into
pop
bound
xlat
ljmp
add
lcall
sub
outsb
xchg
dec
jns
fldenv
out
cli
pop
xor
orb
sub
sbb
mov
add
ret
in
imul
sub
jne
inc
push
arpl
ss
xchg
jl
imul
pop
cmpsl
movswl
jp
pop
pop
xor
rcrl
fs
and
daa
fldt
cmpsb
aaa
pop
lods
cltd
arpl
sbb
and
test
inc
test
jge
xor
pop
repz
xchg
daa
popa
mov
pushf
je
stos
sub
cmpsb
or
xchg
in
cli
pop
loopne
inc
inc
cltd
pop
add
rcll
mov
incb
inc
cmp
adc
mov
xlat
jmp
popf
fidivl
gs
cmp
push
xchg
sub
pop
pop
jae
mov
pop
lods
jne
push
push
dec
xchg
aam
inc
add
mov
sub
pop
lahf
pop
push
movb
jle
pop
stos
ljmp
and
push
fisubl
dec
dec
stos
mov
pop
mov
mov
repz
mov
pop
fcompl
push
xlat
sbb
jmp
pop
cmp
scas
mov
add
cltd
push
hlt
dec
pop
xlat
push
fimuls
test
push
dec
lcall
mov
pop
and
jp
pop
xchg
dec
sub
sbb
das
in
xchg
rcll
cmp
mov
das
push
pop
xchg
lcall
push
add
pop
lods
inc
pop
jno
add
mov
adcb
pop
ljmp
rcr
lock
addb
inc
scas
jmp
mov
mov
insb
cwtl
lret
pop
int
cld
call
pop
mov
xor
mov
dec
pop
shr
mov
daa
pop
pop
or
loop
inc
mov
jmp
adc
std
lcall
pop
cld
movsl
jne
inc
jmp
xor
and
push
pusha
popf
mov
pop
pop
sbb
sbb
push
pop
sbb
test
popa
cltd
pop
lods
add
mov
pop
mov
incb
jae
loopne
adc
lret
fs
xlat
outsl
pop
pop
mov
add
ret
inc
aad
mov
jecxz
push
mov
pop
xchg
sbb
push
cmp
sub
gs
push
test
adcb
daa
pushl
mov
xchg
sbbl
push
sbb
insl
out
push
inc
xor
pop
dec
andl
xchg
sub
xchg
popf
pop
cwtl
bound
pop
push
out
inc
jb
sub
dec
adc
ljmp
xchg
push
pop
dec
popa
pop
mov
imul
aam
pop
push
ljmp
inc
stos
es
mov
shl
sub
fstps
inc
ljmp
outsl
rcrl
cmpsb
lret
into
pop
out
inc
shl
jl
test
lret
sub
stos
sub
inc
pop
lds
push
and
push
mov
pop
out
xorb
and
and
dec
xor
push
imul
and
shlb
pop
popf
ds
jns
mov
fldl
gs
xchg
pop
call
test
inc
pop
int
fs
cmp
test
cltd
add
imul
pop
popf
lods
rclb
pop
rclb
jae
stc
jmp
lods
pop
pop
push
push
test
lods
lcall
cmpsl
cmp
sub
enter
mov
shll
mov
popf
dec
or
lds
cmc
fmull
dec
js
popa
rcrb
mov
mov
pop
pop
mov
movsb
mov
pop
push
cmc
pop
lcall
sub
jbe
imul
ficomps
pop
stos
jge
ljmp
rcrb
cmp
xchg
js
scas
cmp
push
sbb
mov
das
jno
inc
jg
or
addr16
lcall
push
adc
pop
cmp
outsb
sbb
mov
lods
shrb
pop
lods
push
add
cmp
cli
fildl
xor
sbb
cmp
fsubs
or
sbb
std
cmp
adc
cwtl
fnstenv
int
and
rcl
arpl
aad
push
pop
data16
mov
ss
stc
nop
pop
in
and
fwait
dec
pop
and
jne
or
pop
dec
sbb
push
push
nop
push
lret
mov
inc
adc
xor
pop
rolb
xchg
adc
arpl
stos
mov
jmp
dec
mov
inc
mov
pop
jo
and
pop
test
jl
pop
das
fidivl
daa
ja
xchg
pop
fucomp
ds
xor
pop
or
mov
rolb
pop
std
jl
adc
dec
rclb
repnz
sbb
push
imul
int3
fnstsw
sub
xchg
pop
sahf
lret
in
sbb
mov
loopne
std
pop
mov
hlt
mov
ljmp
aas
imul
and
push
push
loop
test
jae
hlt
mov
push
mov
fisubs
cwtl
push
ljmp
push
dec
outsl
pop
xor
sub
pop
fcmovnb
and
imul
xchg
cmpsb
ljmp
fsts
jb
popa
jmp
adc
sbbb
mov
fcmovne
mov
pop
cmpsl
add
daa
push
aam
pop
psadbw
ret
xor
pop
popf
xor
xchg
pop
push
aam
pop
loope
das
adc
repnz
mov
xchg
add
inc
mov
and
test
popa
cmp
ljmp
push
pushf
jb
pop
jo
fwait
adc
mov
in
pop
sub
or
and
loop
dec
pop
outsl
xchg
inc
xor
mov
pusha
pop
in
add
mov
movsb
add
pop
jmp
cltd
pop
sbbl
stc
fstp
sub
lahf
subb
dec
push
jge
test
jg
stc
aad
or
bound
and
sahf
pop
subb
push
lcall
add
inc
or
iret
inc
adc
xchg
mov
mov
in
fs
in
jb
arpl
sub
sub
fcoms
sbb
sub
in
in
pop
pushl
pop
imul
dec
mov
pusha
jecxz
test
pop
pop
sbb
mov
fdivrp
xor
push
push
jb
fbstp
insl
idivl
pop
cli
xchg
imul
pop
jg
mov
cmp
jmp
push
add
iret
iret
cmp
push
sbb
dec
mov
pop
jns
xlat
push
adc
iret
pop
pop
mov
sti
cmp
into
test
jp
sbbl
rep
xor
stos
adc
ret
inc
dec
notb
pop
push
mov
and
mov
sbb
mov
dec
stc
cmpsb
push
js
xchg
mov
mov
int3
mov
dec
test
adc
cmp
lock
cmp
not
in
loopne
pop
mov
in
sub
ss
test
ljmp
test
mov
adc
data16
mov
mov
arpl
addr16
test
and
and
mov
call
ret
adc
adc
lods
push
pop
mov
testb
lods
lret
ljmp
pop
fdivrs
dec
pop
scas
xor
rcll
sahf
mov
dec
sbb
xor
out
aad
dec
xchg
push
mov
aam
cmp
jb
pop
movsb
mov
fwait
xor
pop
insb
lret
aad
push
inc
int
pop
cmp
inc
jge
imul
add
int
pop
and
pop
inc
xchg
cmpsb
and
fbld
sahf
pop
jl
mov
inc
ret
pop
icebp
repnz
and
mov
pop
dec
and
mov
jns
lret
pop
sub
rcr
add
fadds
push
stc
inc
sahf
cmpsb
fnstcw
jbe
jmp
cmp
push
test
inc
sub
push
ds
jmp
push
mov
jecxz
inc
cmp
jo
stc
mov
push
cmp
mov
push
cmc
cmp
push
arpl
add
enter
jno
mov
out
dec
dec
in
sbbb
mov
jge
stos
pop
pop
jb
dec
ficoml
in
shlb
and
mov
ljmp
dec
pop
stos
andl
jl
fs
aaa
sbb
pop
mov
pop
hlt
out
fistpl
int3
sub
pop
pushf
xchg
mov
pop
sub
scas
inc
sbb
push
push
negl
xor
jmp
pop
pop
lret
pushf
xchg
mov
mov
and
bound
cmc
ljmp
adc
pop
push
jbe
dec
negb
pop
pop
stos
mov
or
sub
mov
mov
xchg
pop
ja
insl
pop
inc
push
imul
jecxz
ss
and
jae
or
pop
daa
cltd
pop
in
mov
inc
popa
fsubs
cltd
dec
pop
xor
test
les
mov
ljmp
xchg
inc
fimull
pop
cltd
xor
pop
or
std
scas
pop
cmp
jb
pop
push
adc
dec
fildl
add
xchg
lock
push
dec
jl
popa
negl
and
adc
enter
or
pop
or
adc
inc
fxch
adc
mov
pop
dec
shlb
inc
pop
jge
je
push
lahf
push
es
pop
lcall
ljmp
xor
inc
aas
scas
pop
sub
add
lret
mov
mov
dec
bound
in
or
push
iret
das
insl
out
call
popl
cmp
cmp
jo
loop
push
mov
push
adc
xchg
xchg
pop
clc
sub
xchg
adc
in
and
or
mov
push
mov
add
pop
bound
aas
cmp
xchg
mov
insb
pop
fisubl
jmp
out
jnp
push
pop
xor
push
pop
iret
pop
into
jp
lret
arpl
mov
push
cld
movsb
mov
stos
mov
pop
sarb
and
pop
jb
add
sbb
push
pop
mov
stos
sti
pop
inc
cwtl
lods
outsb
int
cmp
pop
xchg
popa
cli
cmc
push
and
push
pop
hlt
adc
mov
xchg
mov
jecxz
mov
xor
int
dec
cmpsl
sti
jbe
clc
cli
dec
cmp
outsb
pop
adc
aam
sub
adc
outsl
mov
push
int3
xorb
rclb
dec
push
xchg
fisubl
out
imul
ficoml
out
pushl
pop
icebp
sbb
pop
pop
imul
sbb
icebp
mov
sarb
xor
mov
stc
je
js
pop
pop
dec
lret
or
fsubrs
mov
push
pop
test
dec
aas
pusha
xor
sbb
push
cmpsl
pop
daa
pop
loopne
inc
inc
jecxz
into
inc
dec
adc
mov
sti
mov
loop
pop
or
dec
mov
imul
pop
mov
bound
dec
or
sub
fcom
push
push
dec
rcll
leave
jl
clc
pop
dec
mov
jmp
mov
in
cmp
push
mov
ljmp
push
repnz
test
jno
sub
ss
jmp
sbb
sub
mov
inc
mov
sub
mov
aas
and
dec
addr16
xor
push
cltd
gs
mov
cli
xchg
movsb
aad
iret
cwtl
push
sti
pop
xor
xor
or
cmp
scas
ljmp
xchg
xchg
outsl
lods
lea
mov
pop
pop
mov
std
ret
int
sub
pop
and
fcomps
loope
inc
xchg
fidivrs
sti
dec
inc
mov
clc
mov
sub
jns
test
add
pop
dec
jae
xor
dec
mov
mov
pop
dec
push
pop
in
shlb
push
push
cmc
sub
pop
sbb
es
pop
sbb
jbe
jmp
insl
xor
push
imul
movsb
pop
sahf
std
mov
pop
sub
xchg
xor
or
pop
imul
mov
pop
fld
jg
pop
jle
test
inc
lret
xor
add
and
cmp
jnp
out
adc
filds
pop
sub
mov
pop
and
dec
mov
sbb
push
arpl
xlat
or
pusha
jecxz
xor
push
je
jmp
dec
jbe
mov
xchg
stc
sbb
enter
repz
pop
sub
sysenter
fstps
xchg
lret
adc
mov
popf
mov
inc
inc
repz
sub
pushf
roll
pop
push
sbb
ret
pop
mov
jae
mov
pop
shll
add
pop
pushf
mov
ljmp
push
lods
inc
fiaddl
addr16
adc
push
in
jmp
std
xlat
jecxz
les
mov
ljmp
pop
adc
pop
adc
adc
stc
pop
scas
lret
icebp
es
xchg
sbb
cmpsl
adc
loope
cltd
xlat
fmull
ljmp
lret
jmp
daa
ret
cli
mov
fists
inc
pop
sahf
jecxz
js
das
push
push
inc
mov
mov
dec
ljmp
gs
daa
mov
inc
outsb
call
add
jmp
xchg
fmul
push
fldcw
adc
and
in
mov
mov
push
cmp
ret
mov
inc
pop
std
mov
outsb
out
cmp
jb
subl
pop
and
movsl
rolb
mov
inc
ss
or
mov
xchg
addb
testl
lret
mov
push
popa
pop
ret
mov
fildll
push
push
out
aad
int3
fdivs
jno
pop
scas
sub
xor
leave
test
xor
add
mov
push
xchg
pushf
movsl
pop
daa
js
hlt
xor
orl
jne
and
cmp
call
mov
or
cwtl
mov
jnp
mov
ljmp
aaa
out
fwait
movsb
inc
and
loopne
lock
jo
cmp
aad
sbb
ret
out
add
mov
mov
xor
lahf
lcall
iret
sbb
nop
fldcw
push
jae
ja
dec
pop
mov
push
pop
xor
popf
mov
ret
and
mov
call
cli
mov
rolb
pop
jne
les
stos
xor
out
xchg
mov
xchg
mov
cwtl
inc
popa
dec
cmpsl
mov
mov
xor
andb
mov
test
roll
adc
jns
and
adcl
jecxz
and
or
and
jl
std
cwtl
ss
cltd
bound
mov
cmp
jae
lea
xor
pop
xchg
inc
or
fisubl
out
decl
aas
in
mov
sbb
and
leave
pop
loope
movsl
pop
push
pusha
test
pop
adc
push
add
pop
or
xchg
jecxz
pop
sbb
rcrl
jo
aas
jno
mov
dec
sub
dec
sub
jmp
mov
pop
std
pop
mov
pop
jl
imul
pop
or
fidivrl
lahf
out
cwtl
lods
movsl
mov
fistps
mov
icebp
push
pop
xor
sbb
enter
and
mov
popl
mov
pop
mov
ret
orl
rcll
pop
popa
adc
pop
cltd
mov
aam
imul
dec
pop
add
mov
pop
mov
adc
xchg
lcall
fs
stc
pop
in
xchg
sti
mov
xor
popf
out
rorb
push
leave
push
jmp
outsb
xor
cmpsl
and
shrb
jp
andl
mov
sub
inc
add
mov
pop
jns
mov
test
sbb
mov
fmuls
jg
call
jbe
push
pop
pop
jne
popf
cmpsl
movsl
mov
inc
push
xchg
xor
sbb
lret
imul
jp
jmp
mov
push
int3
outsl
and
adc
int
push
lea
push
daa
mov
pop
sub
sub
pop
xchg
cmp
push
adc
dec
and
cmp
mov
pop
ljmp
and
dec
popf
or
pop
out
cmp
xchg
jmp
pop
or
fadds
lcall
or
mov
jl
add
push
sub
nop
cltd
cmp
ret
out
pop
arpl
bnd
cs
dec
aad
push
movsl
in
mov
xor
inc
dec
mov
cmp
mov
scas
push
mov
dec
lea
mov
pop
loop
arpl
fisubrs
cmp
cmp
xchg
aam
inc
add
cmp
inc
push
mov
pop
ljmp
and
sub
mov
lods
mov
pop
ja
rcrb
and
test
add
push
cmp
jno
ds
and
imul
inc
adc
pop
mov
shll
mov
mov
pop
xchg
test
inc
pop
xchg
jmp
or
int3
dec
gs
pop
pop
test
insl
dec
popf
xor
cltd
push
cli
and
ljmp
loop
mov
mov
std
cmp
movsl
fcompp
out
fwait
pop
jecxz
inc
or
inc
pop
outsl
mov
and
sbb
int
pop
mov
popa
leave
and
sub
in
pop
lahf
lods
push
cs
fwait
jo
xchg
or
pop
ljmp
testl
pop
repz
xor
pop
jmp
clc
xlat
pusha
sbb
pop
repz
push
pop
mov
mov
fcmovne
sub
sub
je
adc
adc
imul
int3
icebp
pop
mov
xor
rorb
cmp
mulb
pop
jae
enter
fsubr
mov
inc
hlt
and
pop
mov
xchg
xor
adc
enter
jmp
xchg
mov
test
or
push
mov
push
add
mov
xchg
popf
fildll
pop
gs
pop
pop
push
jmp
or
pop
mov
or
push
outsb
add
ja
jecxz
int3
nop
pop
inc
mov
sbb
jo
xchg
testl
movsl
xorb
cmp
sbb
xor
or
xor
sar
or
add
xchg
rorb
inc
sbb
enter
or
fstps
sub
jns
push
pop
inc
push
pop
or
lret
pop
inc
jno
push
adc
jne
insl
movsl
outsb
pop
jnp
out
mov
or
test
adc
jbe
pop
sti
out
push
xlat
cmpsl
mov
mov
jbe
dec
dec
sbb
inc
stos
pop
xchg
jnp
xchg
jge
cmp
or
aam
pop
dec
pop
pusha
loopne
and
std
scas
pop
and
mov
xchg
sbb
mov
sub
rcrb
test
hlt
clc
mov
mov
pushf
lahf
or
push
sbb
scas
dec
sub
pop
jge
push
cmpsl
in
pop
and
ljmp
mov
mov
jne
ds
in
dec
lcall
push
sbb
fstps
push
jl
push
stc
and
xor
les
mov
push
je
xchg
xchg
or
insl
insb
imul
pop
dec
cmpl
mov
rorb
pop
mov
or
jno
sbb
mov
mov
ljmp
in
fistpl
adc
cltd
stos
push
ret
mov
inc
cmp
adc
cwtl
imul
cs
jecxz
xchg
in
pop
ss
pop
adcb
cmp
sub
mov
shlb
pop
add
mov
push
xor
pop
in
jne,pn
add
mov
movl
jb
shr
jne
lret
mov
aam
loopne
mov
cld
mov
cmp
ds
pop
repnz
andb
js
cmp
pop
stc
adc
ror
std
cltd
jae
mov
lret
hlt
or
cmp
pop
mov
sub
push
pop
xor
call
mov
dec
rcrb
jmp
sub
pop
cltd
inc
imul
leave
enter
adc
popa
stos
imul
cmp
jge
adc
js
sub
push
lret
jnp
pop
push
xchg
ss
call
jbe
xlat
in
pop
lods
xchg
inc
pushf
arpl
push
or
adc
std
mov
adc
pop
dec
mov
xchg
arpl
push
imul
dec
pop
xor
aam
xor
inc
mov
jne
out
daa
sbb
cmp
ljmp
fs
pop
lea
mov
ljmp
jbe
push
or
addr16
push
pop
push
mov
push
pop
inc
cmp
nop
lods
sbb
xchg
popa
adc
sub
arpl
dec
mov
gs
mov
push
ficoml
mov
mov
or
mov
hlt
inc
shrb
push
xlat
sbb
jecxz
mov
lret
pop
call
add
sti
and
in
xchg
pop
mov
std
sahf
jl
mov
mov
jmp
fcoml
mov
in
pop
popf
pop
sub
stos
lea
jns
jb
cmp
out
mov
stc
fwait
subl
arpl
pop
inc
test
sarb
adc
rcrb
mov
insb
dec
or
test
cld
sbb
adcl
cltd
dec
sub
inc
enter
inc
ljmp
pop
fst
push
pop
push
fsts
push
push
fdivr
pop
ret
lds
mov
sti
out
movsb
xchg
in
mov
aad
xchg
lcall
push
adc
push
xchg
inc
popf
ljmp
pop
cltd
jmp
std
rcrl
mov
cmp
pop
dec
mov
cli
pop
leave
mov
loop
or
cmp
adc
push
mov
pop
cltd
cmpsl
and
pop
mov
xchg
fstl
or
sbb
push
push
jb
push
dec
cwtl
sbb
mov
add
dec
pop
lea
sti
xchg
mov
inc
pop
addl
xchg
cmp
ds
pop
push
sbb
mov
cs
lods
pop
push
lcall
pop
rorl
xchg
add
xor
sbb
clc
mov
fdivs
js
cmp
cmpsl
loopne
mov
mov
fadds
ds
sbb
scas
bound
pop
arpl
jne
dec
push
movsb
rclb
jns
pop
mov
test
rcr
mov
push
xor
push
push
in
aam
xchg
dec
movsl
inc
negl
or
inc
outsb
push
pop
mov
cli
xchg
je
cld
pop
scas
mov
xchg
add
push
jne
jae
push
sbb
sub
xor
std
adc
push
enter
mov
aad
inc
push
xlat
clc
adc
jmp
xchg
mov
pop
call
mov
sti
pop
dec
fsqrt
mov
imul
xor
popf
push
xchg
incb
and
stc
cld
es
sub
pushf
ret
ljmp
je
xor
ss
cmp
mov
cs
sbb
ds
cmp
ja
pop
out
sbb
ret
dec
pop
xchg
imul
andl
xor
and
push
xchg
pop
mov
imul
pop
mov
insl
jo
ffreep
adc
pop
push
ret
dec
and
pop
cmp
imull
in
push
data16
loopne
mov
mov
fdivrl
cmp
mov
in
repnz
ljmp
pop
mov
mov
roll
push
js
cmp
sub
insl
mov
mov
sbb
in
sbb
pop
daa
fidivrl
pushf
pop
adc
push
pop
cmpsb
jg
leave
xor
pop
out
std
jecxz
mov
test
pop
call
adc
mov
cltd
jno
in
pop
mov
rcll
mov
adc
push
imul
push
push
inc
jnp
or
adcb
mov
mov
mov
ljmp
pop
pop
xor
int3
lods
jnp
mov
sub
adc
aaa
and
rcr
or
pop
pop
pop
jb
push
mov
sub
dec
fs
in
xchg
pusha
jmp
jmp
imul
ljmp
adc
or
sub
out
dec
mov
pop
pop
push
and
mov
mov
pop
mov
ret
jb
pop
sarb
ror
and
xchg
int3
inc
cmc
mov
imul
adc
adc
inc
jle
in
dec
pop
mov
cmp
inc
call
pop
in
fcmovnu
mov
lds
mov
or
mov
mov
xchg
pop
divl
int3
mov
push
add
dec
lods
insb
pushf
fdivs
mov
cltd
pop
adc
push
popf
or
adc
pop
ss
mov
jle
push
cld
sti
jge
rcrb
arpl
fstpl
xchg
lds
in
mov
pop
xchg
lea
cmc
and
inc
pop
call
lock
bound
pop
push
sahf
imul
pop
jns
xchg
dec
lcall
mov
pop
lret
or
push
sbb
mov
push
imul
test
popf
add
push
mov
test
aaa
or
push
aam
int
loop
jns
sub
mov
popa
pop
pop
addl
pop
rcrl
push
sub
es
and
out
mov
dec
jecxz
pop
cmp
push
xchg
cli
adc
outsl
cmp
mov
imul
fstpl
xchg
dec
mov
mov
dec
sbb
insb
pop
lret
sti
push
xor
jbe
or
or
dec
push
lea
lret
pop
mov
cli
xchg
cltd
test
sub
inc
cmp
jp
mov
dec
repnz
inc
stos
ja
xor
clc
sub
js
and
shlb
add
xor
mov
mov
xchg
ret
pop
sub
xor
sbb
cmp
clc
pusha
jge
mov
sahf
sub
jbe
jnp
and
push
movsl
std
popf
xchg
pop
out
xchg
fistpl
cmp
mov
addr16
jae
push
dec
or
lcall
stc
jb
push
jmp
fnstenv
arpl
adc
jnp
xchg
decb
stc
mov
push
sbb
decl
inc
sbb
cltd
scas
jbe
out
inc
jmp
pop
inc
sub
xchg
stc
sbb
dec
jae
jmp
das
out
dec
dec
add
pop
sbb
neg
pop
hlt
mov
push
inc
pop
test
dec
lret
out
mov
mov
and
inc
pop
cmpsl
dec
cmp
and
hlt
sbb
and
repz
imul
jnp
enter
sbb
int3
sbb
pop
test
les
stos
sub
xchg
mov
ja
and
add
pop
adc
inc
mov
cmp
jmp
clc
pop
movsb
pop
and
out
xchg
gs
cltd
sbb
or
xchg
xchg
outsb
mov
bound
movsl
int
mov
das
jmp
pop
sbb
loope
mull
push
pop
shlb
call
out
gs
pop
xor
xor
pop
sbb
lods
fwait
jle
or
push
ds
and
push
cmp
int3
pop
pop
push
push
xchg
pop
popa
mov
jl
ja
push
inc
xor
jb
jg
pop
cwtl
shll
pop
xor
mov
sbb
xchg
adc
clc
pop
push
adc
loopne
sbb
mov
out
in
dec
daa
xchg
pop
int3
cmc
roll
jge
pop
add
popa
dec
gs
jecxz
mov
push
cmp
ss
push
adc
jg
cmp
pop
push
dec
inc
cltd
sub
imul
push
pop
push
jne
insl
jns
addr16
mov
fisubrl
pop
cmp
sub
pop
jbe
or
pop
ja
dec
mov
cmp
ss
mov
sub
insb
in
jmp
int3
sub
test
jbe
cld
pop
or
or
cs
ja
daa
push
movsb
call
cmpsb
mov
mov
push
popf
sarl
vpackssdw
cs
inc
fnstsw
dec
jmp
cwtl
adc
push
pop
sbb
mov
ret
pop
iret
lods
dec
xchg
movsb
enter
xor
or
cli
xchg
pop
mov
add
shr
cli
cmp
jnp
sub
push
push
inc
popa
int
pop
dec
decb
push
add
mov
and
jb
and
cmp
sbb
popa
pop
inc
jmp
daa
iret
xchg
mov
ljmp
jp
xor
mov
lea
cmp
rol
daa
stos
loopne
pop
push
lods
xchg
pop
add
punpckhbw
jns
mov
pop
lret
loop
mov
xor
cmp
adc
jo
mov
pop
mov
adc
outsl
push
ljmp
mov
adc
inc
push
xor
insl
push
gs
mov
sbb
pop
add
in
pop
daa
cmpsb
stos
call
pop
cmp
lahf
sbb
pop
fiadds
out
jnp
je
movsl
pop
cltd
das
ljmp
adc
lods
js
cmp
dec
movsb
mov
cmc
pop
pop
rcrl
push
mov
cltd
pop
sbb
test
test
pop
int3
notl
ljmp
lock
test
sti
adc
add
mov
ret
fimull
out
cmp
inc
cmpsl
pop
xchg
scas
pop
pop
cli
push
jmp
pop
xor
out
sahf
fldenv
dec
pop
lods
dec
notl
iret
mov
jbe
pop
ret
mov
daa
ds
cs
push
lds
gs
dec
popf
jecxz
and
arpl
jl
int
js
fcoms
cmp
scas
orb
mov
movsb
cmp
into
sbb
and
or
pop
pop
daa
cmc
mov
std
pop
pop
scas
dec
pop
push
dec
add
mov
push
adc
mov
pop
jbe
push
xor
push
loopne
addr16
pop
xchg
in
js
adc
or
imull
jge
xor
and
sbb
add
pop
scas
mov
dec
or
add
imul
pop
mov
adc
pop
mov
mov
xchg
mov
cmp
test
sti
leave
pop
xlat
lret
repnz
int
fstpl
popa
sbb
shrl
xchg
cmp
xchg
pop
mov
add
pop
idivl
pusha
cmpsl
leave
jo
pop
in
jbe
pushf
xchg
add
cmp
pop
iret
jne
movsl
pop
inc
cmp
push
xor
sub
push
mov
stos
sti
sub
rolb
ds
fiadds
xchg
pop
xorl
sbb
mov
push
pop
pop
out
mov
mov
cmp
adc
ret
dec
lea
or
popf
pop
roll
sub
test
sti
pop
sbb
push
fmul
sbb
mov
pop
mov
dec
or
popf
mov
shl
xchg
push
movsb
mov
data16
sbb
mov
push
jmp
jl
insb
and
jb
add
mov
jp
jmp
or
push
mov
dec
push
and
ja
add
pop
pushf
mov
mov
xchg
in
pop
jle
and
sub
add
pop
add
jmp
shrl
sti
test
or
pop
ret
nop
pop
scas
or
adc
lea
mov
sub
test
xchg
add
cwtl
pop
je
movsb
fwait
gs
ds
jmp
pop
sub
stos
iret
jle
jp
sbb
in
push
inc
ljmp
pushf
ss
repnz
mov
xor
inc
mov
fcomip
sub
adc
xlat
movsb
push
sbb
add
push
out
or
jbe
adc
xor
xchg
fldt
mov
xchg
imul
adc
pop
fsubr
cmpsb
std
pop
fcompl
shr
pop
cmp
cmp
lret
cmp
adc
in
or
adc
pop
imul
mov
push
dec
and
js
sub
mov
push
sub
sbb
xlat
pop
data16
in
dec
push
mov
jbe
xchg
jg
jns
cmpl
out
pop
lods
sub
dec
cmpsb
push
jno
pop
roll
pop
sub
adcl
sub
mov
mov
lcall
pop
daa
or
ja
test
std
movsl
adc
pop
sti
mov
xchg
or
cmp
cmpsl
imul
movsb
rorb
cld
cmc
pop
mov
lahf
adc
orb
cmp
add
mov
ja
dec
repnz
jecxz
fmulp
inc
mov
sbb
jge
dec
shrl
shll
inc
insl
jmp
or
jle
cmp
popa
bndstx
jmp
cmp
pop
repnz
pop
imul
push
pop
xor
cwtl
cmp
sub
in
ljmp
mov
pop
mov
mov
push
pop
pop
mov
in
mov
stc
out
pop
dec
push
ja
push
pushf
std
dec
daa
loopw
repz
pop
dec
pop
mov
xchg
pop
rorb
pop
mov
inc
sbb
jb
ds
fsub
popf
mov
pop
imul
add
inc
ffree
pop
mov
push
lret
mov
loopne
and
cmp
pop
xchg
mov
ss
pop
mov
in
push
add
push
add
and
pop
sub
pop
fisttpl
fiaddl
dec
cltd
in
xor
stos
int3
inc
sahf
aam
ficompl
inc
ljmp
lret
pop
xor
jnp
push
xor
insb
cmp
scas
js
shrb
pop
icebp
jecxz
int
add
cmpb
popa
jg
mov
lods
popf
dec
mov
push
xchg
or
test
stc
and
push
pushf
es
lcall
rep
daa
ret
xchg
iret
cli
mov
sbb
sub
das
push
rcl
pop
pop
push
xor
mov
pushl
ss
lcall
jne
mov
pop
pop
dec
mov
mov
push
outsl
xor
lret
xchg
or
shrl
insl
arpl
divl
pop
push
mov
sbb
orl
pop
pop
gs
xor
xor
pop
push
mov
jp
pop
mov
es
nop
sbb
insb
in
aad
adc
dec
lods
jae
push
add
hlt
popa
pop
sub
pop
stos
push
pop
mov
mov
push
adc
arpl
push
mov
out
cwtl
cltd
push
cmp
fcmovbe
adc
pop
mov
popf
mov
push
inc
dec
clc
ret
pop
mov
test
pop
movl
add
push
cwtd
stc
int3
imul
inc
arpl
xchg
adc
into
xchg
mov
pop
xor
lcall
flds
push
sbb
or
in
sbb
mov
mov
pop
xchg
sahf
je
pop
gs
popf
mov
and
pushf
test
mov
jl
shll
cwtl
mov
das
into
push
hlt
addr16
mov
or
pop
jg
pop
push
sub
mov
pop
cmp
push
rcl
xchg
inc
pop
pop
jecxz
adc
jae
int
imul
jl
cwtl
scas
mov
pop
xor
pop
mov
imul
repz
push
jg
fcompl
shrb
inc
imul
push
repnz
xor
int3
inc
adc
test
lods
pop
mov
inc
mov
imul
rcr
pop
push
mov
push
pop
xchg
add
mov
push
mov
mov
test
jbe
xchg
xor
mov
sbb
push
scas
repz
mull
mov
jno
pop
jp
mov
mov
lcall
pop
leave
or
test
inc
cmpsl
or
and
mov
int
inc
int3
pop
pop
cmpl
mov
cmp
clc
jb
mov
mov
push
cmpsl
jbe
or
xor
push
pop
or
mov
mov
xchg
xchg
xlat
push
mov
pop
or
jp
imul
sbb
jl
dec
pop
mov
inc
adc
pop
rolb
sbb
pop
push
xchg
into
push
enter
pop
dec
lds
cmp
mov
inc
shlb
add
or
out
cld
mov
ja
outsl
lret
pop
push
jge
jns
es
pop
pop
test
jl
test
pop
add
icebp
mov
dec
adc
mov
push
sti
cli
pop
xchg
lds
test
or
or
inc
sbb
jbe
rcr
idivb
push
pop
cltd
imul
loopne
mov
pop
xchg
add
ja
or
push
or
push
lret
dec
mov
sub
adc
movsb
pop
xchg
mov
push
push
fstpl
outsl
mov
push
pop
mov
jnp
sbb
scas
es
pop
faddl
sbb
add
and
insl
subb
pop
das
pop
jmp
lds
clc
ljmp
sub
push
or
mov
ficomps
dec
and
push
insl
sub
inc
popa
fsubs
imul
cli
test
adc
es
pop
out
xlat
mov
pop
xor
mov
jnp
mov
xor
adc
movsb
ja
dec
push
sbb
mov
cltd
lret
jmp
das
add
push
cmc
pop
mov
shlb
ja
pop
or
sub
nop
fsub
sbb
fadds
scas
arpl
jge
mul
pop
int3
iret
ret
cltd
add
pop
mov
ss
loope
sbb
imul
jno
mov
cmp
xor
pushf
pop
xchg
pop
subb
push
push
js
mov
pop
in
aam
pop
out
addb
adcl
in
stos
in
rorb
mov
mov
adc
xchg
dec
in
mov
outsb
in
rcrb
pop
movsl
sbb
sub
xor
dec
insb
push
mov
pop
lcall
mov
outsb
push
nop
sbb
pop
test
pop
xchg
loope
mov
mov
fnsave
push
add
pop
ljmp
jecxz
sbb
dec
push
cld
pop
mov
pop
pop
inc
jne,pn
push
inc
arpl
pushf
pop
iret
cmp
fwait
dec
es
cltd
xchg
int
or
mov
imul
cmpsl
cwtl
mov
pop
and
sbb
push
pushf
cmp
mov
push
insb
gs
and
sbb
fidivrl
stos
xor
lret
and
imul
popf
out
aam
hlt
out
mov
xchg
inc
loopne
push
push
adc
fwait
pop
imul
and
push
xchg
ss
shll
dec
rcrl
fwait
lcall
xchg
mov
dec
pop
in
int
ds
inc
dec
sbb
cmpsb
fwait
cmp
push
cmc
leave
les
dec
push
int3
loope
mov
inc
fstps
dec
addr16
xchg
push
jo
shrb
repz
daa
data16
xor
dec
lods
sbb
sbb
adc
testl
xchg
xchg
test
xchg
add
inc
mov
pop
or
mov
sbb
sub
mov
loop
xchg
xchg
sbbb
negl
inc
fbstp
cmp
push
xchg
cmpsl
and
mov
popf
mov
pop
adc
inc
mov
mov
stc
popf
pop
insl
fsubrl
adc
xchg
adc
leave
pop
movsl
pusha
lcall
push
sbb
fisttpll
popf
jb
mov
loopne
leave
imul
pop
inc
ds
jo
pusha
push
push
mov
scas
jge
test
fsts
cmp
push
mov
int3
sbb
cmp
fld
sti
outsl
and
aad
cli
sub
pop
nop
ss
mov
pop
push
lret
cmc
data16
pop
loop
push
repz
mov
in
iret
cmp
and
push
pop
gs
sbb
lods
cli
pop
mov
jbe
mov
pushf
sub
xor
xchg
js
pop
in
dec
out
or
fcomps
jmp
dec
dec
jp
pop
xor
adc
jo
outsl
jmp
dec
cltd
mov
lret
inc
enter
cmpsl
pop
push
dec
subb
and
pop
ret
sbb
cltd
lahf
pop
or
add
pop
sahf
sbb
xchg
pop
popf
lock
inc
pop
loope
lret
inc
add
pop
xchg
aam
cmc
daa
cs
sbb
xchg
and
stos
imul
pop
into
leave
push
fbld
mov
fsubrp
jo
jne
daa
bound
dec
cwtl
push
int3
pop
sbb
xchg
lds
sti
es
pushl
popf
pop
ljmp
test
int
in
leave
add
fistpl
pop
inc
jmp
dec
pop
imul
push
inc
pop
fdivrs
call
xlat
or
imul
in
jb
sbb
adc
sub
sbb
fwait
sbb
popf
jbe
inc
outsl
test
sbb
sbb
inc
movsl
and
ljmp
cmp
push
sar
add
test
cwtl
or
cmpsb
or
push
fstl
sbb
mulb
cmp
jmp
mov
adcl
mov
cmp
pop
lods
xchg
iret
sahf
rolb
dec
pop
pop
mov
push
stos
adc
ljmp
data16
pop
sub
lods
dec
xchg
mov
int
or
jecxz
movsl
insb
lret
push
xor
adc
sti
pop
pop
je
dec
mov
pop
mov
mov
lock
insb
and
mov
xchg
pop
sub
nop
mov
cmp
or
aaa
mov
sbb
pop
imul
pop
inc
ret
jecxz
push
pop
jp
cmp
and
push
mov
add
xchg
aam
cmp
sbb
xor
sub
pop
inc
cmp
mov
jo
xchg
xchg
push
sbb
cltd
push
mov
or
ret
xchg
es
mov
stos
pusha
imul
push
das
push
cltd
out
rcrb
push
js
inc
pop
push
pop
xchg
insl
cmpl
xchg
dec
pop
movsb
test
rol
sbb
sti
ffree
lahf
mov
or
ds
mov
stos
sbb
cmp
ficoms
mov
jmp
and
jns
dec
cmpsb
in
cwtl
pop
dec
pop
pushf
inc
pop
mov
dec
inc
stos
mov
rcl
mov
ffreep
mov
pop
xor
xor
sub
loopne
pop
xor
adc
inc
push
pop
or
bound
enter
ret
lret
jle
int
jp
jmp
scas
out
lods
out
lcall
aad
fstpl
mov
out
xchg
int3
fimull
adc
popf
jg
xor
shlb
jmp
out
sub
pop
or
or
clc
ds
in
pop
adc
or
cmp
rol
mov
dec
stc
ja
mov
fstpl
movsb
cmc
dec
aas
fsts
lret
lahf
daa
cmp
mov
pop
add
dec
sbb
mov
pop
or
add
mov
push
imul
rclb
ds
xchg
mov
cli
rorl
xchg
mov
and
adc
mov
rcrl
mov
mov
push
movb
inc
push
subb
repz
dec
divl
dec
and
sbb
mov
pop
sbb
scas
ss
andb
into
cmp
mov
pushf
adc
out
jge
ds
pop
rcrl
into
jb
and
push
insl
int3
adc
jbe
jnp
cmp
xchg
sbb
mov
fimull
outsl
xchg
or
jge
pop
push
fcomp
dec
outsb
mov
cltd
sarb
mov
xchg
adc
push
xchg
mov
xor
popa
lds
je
or
dec
push
sub
ret
shlb
in
fstpl
adc
jmp
xchg
loopne
and
dec
cmc
icebp
clc
mov
lahf
fbstp
negb
pop
mov
in
imul
popf
scas
das
mov
inc
and
pop
and
cmp
cli
xchg
ljmp
xchg
jbe
mov
sti
adc
pusha
insb
pop
mov
mov
inc
add
and
and
xor
pop
fmuls
mov
pop
aaa
stos
mov
push
pop
xchg
scas
and
push
out
adc
cmpsl
xchg
push
lret
mov
inc
pushf
fsubs
ljmp
lahf
pop
fidivl
in
outsb
and
mov
and
dec
pop
mov
push
ljmp
fistpl
xor
pop
push
pusha
xchg
imul
jnp
push
negl
ljmp
bound
pop
mov
test
in
pop
jmp
jle
mov
jnp
pop
testl
movsl
fisttps
pop
push
stos
loope
test
in
icebp
adc
lcall
in
mov
pop
mov
dec
sbb
fstl
or
mov
sbb
les
hlt
std
pop
mov
mov
xchg
pop
jno
loop
add
scas
pop
pop
xor
imul
leave
addr16
in
adc
negb
cwtl
xchg
daa
fisubl
cli
mov
imul
pop
shlb
sbb
mov
pop
jns
cmp
outsl
sar
in
inc
dec
push
xchg
adc
cmp
mov
pop
mov
outsl
sar
out
push
or
jl
xlat
xchg
clc
mov
jns
addr16
dec
add
or
lods
pop
pushf
pop
shll
insl
jno
mov
pop
jne
xor
cmp
inc
xchg
push
rcr
mov
xchg
sub
xchg
sbb
mov
in
cmp
pop
mov
orb
cmp
je
pop
fnstcw
or
in
pop
pop
andl
jmp
adcb
xor
jb
imul
jg
cmpsl
insl
cwtl
cltd
clc
sbb
mov
mov
rclb
insb
pop
xor
fucomi
arpl
popf
movsb
inc
push
mov
loopne
pop
jmp
pop
stc
jmp
sub
xor
insb
clc
pop
xor
mov
pusha
cwtl
sbb
xchg
fcmovnb
pop
insb
jb
pop
xlat
jmp
pop
rcrb
icebp
add
pop
rol
or
scas
arpl
pop
subl
jne
stc
out
dec
push
dec
fisttpll
adc
bound
mov
add
loope
push
pusha
and
push
sub
and
pop
jae
adc
iret
mov
lret
jge
popa
mov
stc
sub
adc
ds
inc
aad
and
dec
jle
adc
pop
lods
add
pop
in
fdivr
jl
pop
divb
pusha
adc
xchg
jmp
push
mov
ljmp
or
cmpsb
inc
nop
mov
cmpsl
das
inc
add
xchg
imul
pop
or
mov
xorl
pop
popf
std
mov
pop
iret
mov
mov
pop
mov
daa
popa
mov
adc
xor
ret
in
pop
jae
and
adc
pusha
orb
inc
add
pop
mov
push
xchg
cmp
xchg
dec
cmp
data16
pop
mov
mov
lea
push
es
push
and
mov
inc
fdivs
pop
jge
dec
dec
mulb
pop
lea
dec
push
pop
scas
or
in
adc
lods
dec
dec
negb
jmp
fsub
cmp
cwtl
test
push
adcb
xlat
dec
sbb
test
movb
leave
adc
jae
sub
jge
mov
push
sub
mov
loop
dec
push
imul
inc
nop
and
fwait
xor
xor
dec
mov
pop
jbe
push
out
subb
jmp
das
add
pop
ljmp
pop
sub
mov
and
dec
cmc
test
movsb
dec
mov
pop
movsb
xchg
push
shrd
pop
repz
scas
cmp
ret
sbb
jle
pop
mov
adc
iret
sbb
in
and
inc
ret
jmp
cmp
fisttpll
std
pop
xchg
mov
idiv
cwtl
gs
test
push
mov
jbe
enter
lods
mov
inc
or
pop
add
sub
mov
inc
push
add
rcrl
pop
pusha
into
sbb
pop
ljmp
shll
test
mov
popa
push
push
ret
push
sbb
test
lcall
jbe
sub
and
dec
inc
adc
out
cmpsl
jmp
insl
bound
sub
mov
push
jecxz
lock
int3
fucomi
cmp
xchg
xchg
pop
pop
imul
fwait
cmp
pop
xchg
and
mov
adc
roll
jp
pop
test
pop
xchg
lcall
jl
sub
shlb
jecxz
adcl
lcall
sub
pusha
push
sarl
sbb
fidivl
push
sbb
ljmp
and
lcall
rcr
pop
jmp
push
inc
cltd
aas
pop
inc
push
ret
or
shlb
and
or
mov
xor
outsl
xor
lods
enter
lret
clc
lcall
inc
test
in
cmp
inc
or
cltd
adc
nop
sub
lret
push
add
lret
jecxz
sub
cmc
mov
sbb
aaa
hlt
in
fldcw
cmp
sar
or
ljmp
push
mov
test
dec
jns
dec
mov
in
pop
push
fisubs
lods
and
insl
sub
inc
in
fldcw
dec
cmp
jge
shll
hlt
jmp
xchg
mov
jo
pushf
or
mov
pop
mov
cmp
pop
inc
mov
mov
cmp
ljmp
xor
imul
pop
pop
in
mov
pop
stos
test
push
iret
mov
jp
pop
sbb
clc
sbb
in
cmp
repz
pop
xchg
jne
cmc
pop
jns
mov
test
icebp
fs
incl
jb
adc
xchg
jmp
rcrb
dec
xchg
imul
dec
fsubl
jbe
lcall
inc
sbb
cmpsb
pop
jecxz
xchg
jmp
hlt
push
xchg
xor
lods
pop
and
and
out
jmp
xchg
sti
pushaw
and
sbb
dec
jno
cltd
mov
xor
daa
ret
pop
iret
rcll
ret
cmp
dec
pop
pop
xchg
add
sub
mov
add
pop
test
pusha
mov
aas
sbbl
adc
repnz
adcl
xchg
inc
ret
imul
fistpll
sub
mov
insl
jns
jbe
and
faddl
mov
pop
not
pop
lcall
or
jb
pop
and
cld
js
push
pop
sub
xor
data16
out
ljmp
mov
adc
push
sbb
divl
in
xchg
cmp
ret
mov
push
dec
hlt
push
sbb
dec
sub
jbe
xchg
mov
pusha
inc
push
cltd
xchg
cli
mov
mov
rcll
xchg
push
popf
push
sahf
jecxz
dec
sbb
jno
and
movsb
mov
sub
pop
leave
fsts
pop
pop
jae
ljmp
shrb
repz
add
js
pop
inc
mov
test
lock
add
mov
pop
ljmp
push
xchg
imul
movsb
adc
popa
and
insl
mov
adc
push
es
mov
xchg
pop
pop
push
jmp
mov
pop
push
cwtl
jno
call
sub
inc
pop
xorl
dec
xchg
mov
cmpsb
mov
ds
fists
push
je
repz
lret
inc
pop
xchg
jo
fwait
ds
arpl
mov
inc
push
dec
pop
cmpsb
in
aad
sarb
or
dec
mov
inc
nop
sub
xchg
pop
mov
dec
mov
pop
jno
ret
dec
ljmp
push
mov
xchg
or
push
push
ja
pop
or
lret
lcall
jle
ret
cmp
adc
arpl
in
jl
ljmp
jbe
ds
movsl
adc
push
sub
js
add
mov
xlat
cmp
imul
out
or
call
pop
jnp
ja
ror
mov
lds
imul
ret
arpl
pop
sbb
int3
mov
push
jbe
adc
test
leave
imul
ljmp
mov
cwtl
stos
pop
sub
ret
xchg
sbb
add
cmpsl
xor
cmpsl
adc
pusha
mov
pop
adc
sub
jmp
or
pop
cwtl
sub
jns
mov
in
and
addr16
lock
mov
pop
jmp
jns
sub
adc
dec
mov
test
adc
pop
push
je
jbe
mov
pop
and
lods
push
test
sarb
mov
lods
pop
ret
outsb
enter
xchg
dec
or
imul
inc
je
inc
pop
orl
ss
xor
ret
pop
inc
pop
arpl
push
jmp
mov
sub
mov
imul
jp
imul
mov
cli
and
popa
adc
push
sbb
in
pop
ja
test
in
les
inc
pop
push
ljmp
pop
xor
imul
push
mull
add
sub
pop
sahf
dec
es
and
push
sarl
imull
inc
cmp
lea
cmp
pop
sbb
push
and
out
and
pop
inc
icebp
jp
or
lret
push
cs
xchg
cmp
or
pop
popf
pop
inc
ficoml
mov
arpl
push
add
push
jbe
pop
ret
pop
aad
jmp
cmp
iret
cmpl
stc
add
dec
or
jmp
lock
mov
cmpsl
mov
inc
cs
cmp
stos
cmp
jecxz
mov
or
addl
jmp
lahf
mov
xor
cmp
push
or
jae
add
jecxz
daa
cltd
js
pop
jge
pop
cwtl
inc
dec
fwait
dec
pop
xchg
ficoml
pusha
mov
inc
cmp
ljmp
pop
cmp
sti
int3
cmc
and
sbb
pop
mov
jbe
xchg
xchg
push
jmp
bound
cmp
pop
xchg
mov
lea
pop
xchg
dec
insb
hlt
jg
add
cmpsb
xchg
sbbl
and
pop
push
xchg
pop
nop
negl
jp
sub
dec
adc
mov
pop
jmp
push
dec
sbb
jecxz
jmp
fsts
xlat
adc
enter
or
idiv
mov
daa
outsl
loopne
movsl
dec
scas
push
cld
adc
hlt
mov
ret
pop
scas
lret
sbb
jle
lret
push
popf
ret
xchg
roll
inc
push
jns
pop
sub
lret
imul
cmp
dec
sbb
iret
ljmp
or
xchg
pop
cmpsl
ds
cltd
sbb
and
fstps
mov
xor
mov
add
data16
push
sbb
push
push
int
cmp
loop
push
sub
push
mov
cmpsl
xchg
aad
dec
pop
push
sub
add
repnz
rcrb
sbb
cld
push
push
jae
loopne
mov
pop
sub
pop
mov
popl
pop
jbe
and
sbb
std
je
dec
mov
mov
cmp
or
pop
jle
mov
ljmp
into
mov
push
popf
imul
sbb
lods
mov
pop
sbb
xchg
scas
pop
sti
jp
mov
insl
imul
push
imul
dec
vsubss
fistpl
fwait
xchg
adc
jne
outsl
pop
in
imul
mov
fbld
sbb
rclb
pop
xchg
xchg
bound
decl
mov
pop
and
xchg
pop
add
mov
cmp
mov
pop
fidivrl
jecxz
push
ljmp
outsb
jmp
int
ljmp
pop
repnz
xor
adc
cmp
out
sub
pop
add
push
mov
cld
lods
insb
sahf
pop
adc
out
jb
pop
jmp
cld
mov
dec
sbb
xor
mov
jg
enter
out
mov
xchg
or
daa
pop
cmp
xchg
popf
sbb
loope
insl
jns
pop
cmp
repz
clc
pop
jg
ljmp
or
jno
mov
and
push
outsl
xlat
sub
les
out
pop
inc
xchg
stos
cli
pop
ret
xchg
and
cmc
xor
pop
jmp
pop
push
movsl
sbb
sub
mov
mov
jo
push
imul
pop
orl
sbb
cltd
inc
jno
nop
or
pushf
pop
mov
or
popa
dec
cmp
xchg
jns
fsubs
or
pop
adc
int
repz
xchg
jle
pop
sub
fucom
pop
jb
or
inc
mov
push
fsubrs
dec
sub
rcrb
dec
pop
xchg
mov
sub
adc
xor
imul
inc
movsb
rcrb
xchg
push
inc
pop
mov
xor
cs
xchg
push
pop
lods
jne
mov
mov
mov
adc
fucom
inc
cmp
adc
jmp
mov
xor
rorl
aad
mov
pop
les
mov
ljmp
xchg
into
aam
mov
jecxz
js
fstpl
xchg
data16
or
pop
pop
mov
inc
pushf
dec
scas
sub
ljmp
and
mov
xchg
lcall
mov
je
pop
jle
test
dec
nop
imul
xor
push
sbb
icebp
cmp
lret
pop
les
dec
scas
mov
jmp
cmp
sbb
daa
out
fstl
adc
sbb
push
adc
rclb
popa
imul
sub
jb
pop
rcl
ljmp
cmc
xchg
rcrl
mov
cltd
push
loopne
mov
sbb
push
jl
test
pop
dec
cltd
cli
adc
jae
repnz
dec
mov
pusha
out
imul
pop
xchg
dec
jmp
xor
loopne
jo
testl
js
or
js
mov
negl
mov
enter
in
dec
lret
sub
pop
inc
or
test
sbb
mov
sub
dec
shrl
dec
outsl
ficompl
jne
push
and
aaa
or
xor
or
pop
push
fnstcw
sub
out
stos
add
mov
jne
leave
les
mov
lds
pop
jb
pop
push
pop
out
ret
inc
push
cld
pop
orb
test
inc
jnp
inc
mov
mov
insb
pop
dec
xchg
push
iret
xlat
push
cmp
leave
pop
cwtl
sbb
imul
lods
fimull
sbb
push
xchg
xor
cmp
jmp
imul
fsub
addr16
int3
jl
stos
mov
xor
cltd
sbb
pop
adc
jge
and
pop
and
cs
arpl
jnp
pop
pop
loope
jo
xchg
push
pop
sbb
mov
jg
bound
and
and
jecxz
ja
in
aam
jecxz
mov
ds
pusha
sbb
pop
cmp
add
pop
xchg
pop
sub
xlat
cmp
jmp
cmp
push
push
jnp
inc
imul
inc
pop
xchg
out
mov
mov
ret
pop
xor
dec
or
inc
pop
push
pop
insl
loope
fnsave
mov
pushl
sbb
stc
aaa
jnp
pop
dec
sub
push
jp
scas
pop
rclb
mov
in
add
jmp
mov
cli
ret
enter
jmp
out
pusha
clc
cmp
shll
jp
loope
fstl
popa
mov
adc
pop
mov
inc
dec
pop
pusha
pop
negl
fidivrl
call
push
xchg
or
daa
pop
jne
jmp
inc
push
int3
rclb
das
push
fidivl
dec
push
xor
and
mov
pop
fistpll
bound
test
scas
adc
test
xor
pop
ljmp
pop
mov
add
clc
push
dec
test
or
mov
lcall
test
add
push
xor
adc
lret
movlps
xchg
shlb
xchg
jmp
sub
push
in
dec
je
pop
lcall
lds
sbb
pop
addb
and
add
pop
jmp
xchg
in
into
orl
jmp
push
mov
pop
out
mov
cmpsl
xchg
sub
imul
into
fcomi
ljmp
mov
or
stos
clc
lock
sahf
and
and
ret
push
sbb
mov
cmp
dec
jge
das
or
pop
addl
enter
ficompl
cmp
xchg
lret
pop
mov
mov
push
pop
pop
lods
xchg
jle
jecxz
pop
pop
push
sbb
add
add
pop
pop
lods
sbb
xchg
mov
sbb
fmul
sbb
inc
jmp
divb
rclb
pop
xchg
lea
sti
jmp
mov
mov
aas
mov
jnp
xor
push
adc
clc
add
ret
sbbl
jp
adc
outsl
and
mov
ja
std
pop
pop
mov
out
dec
call
pop
test
sbb
mov
pop
or
add
adc
xorl
xor
aad
jnp
xchg
pop
sub
xor
sub
mov
sub
test
dec
mov
pop
out
xchg
cmc
outsb
jle
in
jmp
add
jl
pop
jns
pop
mov
jle
pop
push
shll
imulb
xor
push
stos
popf
adc
leave
mov
xchg
scas
sub
dec
sarl
popf
mov
jmp
mov
sarl
jo
push
fmul
pop
in
xchg
test
inc
enter
outsl
nop
ljmp
imul
xor
aad
scas
popf
sbb
pop
dec
pop
xor
imul
mov
mov
pop
sbb
in
inc
dec
sbb
jb
pop
lods
jl
fldcw
xchg
xchg
pop
and
rcr
inc
pop
xor
pop
movsl
pop
test
xor
inc
scas
push
scas
pop
cltd
mov
cld
mov
and
jno
push
mov
pop
shlb
or
jmp
fistps
mov
mov
hlt
scas
pop
inc
cld
lahf
in
mov
fwait
std
xor
adc
pop
dec
pushf
jo
inc
jne
fsts
sbb
test
inc
sub
hlt
test
test
inc
pop
cltd
mov
mov
mov
push
mov
incb
sti
sbb
repz
insb
sub
pop
mov
jae
in
cli
mov
push
xor
js
push
or
pop
sbb
imul
dec
sub
pop
jmp
dec
test
pop
adc
pop
jne
jmp
xchg
arpl
add
inc
ljmp
hlt
gs
arpl
cli
lods
or
out
pop
inc
pop
jl
rol
fisttpl
cwtl
clc
in
mov
jmp
iret
sahf
xchg
fwait
xor
in
dec
ds
stc
mov
daa
push
sarb
xchg
pop
mov
jmp
and
int3
pop
xchg
xchg
or
push
pop
pop
add
or
dec
sbb
cli
mov
sahf
mov
mov
cwtl
out
xchg
out
jae
cmpsl
pop
mov
arpl
pop
xchg
or
cmovbe
jp
mov
or
cmp
push
clc
aaa
adc
sub
pop
je
pop
or
pop
mov
das
jns
push
xorl
push
sahf
fcmove
inc
movsl
arpl
pop
sbb
dec
cmp
clc
rcr
mov
push
pop
loope
sarl
mov
dec
ljmp
jnp
or
adc
imul
mov
inc
xchg
mov
out
jmp
dec
jns
sbb
fwait
pushl
ja
pop
arpl
push
push
dec
outsb
inc
cltd
in
movsl
cld
js
cs
and
fdivr
add
mov
push
jo
push
pop
cwtl
mov
ret
aad
jno
pop
adc
nop
cltd
jne
cmpsb
fisubrs
pop
push
pop
dec
bound
push
pop
popf
push
cmc
mov
inc
mov
imul
pop
call
or
int3
outsl
cltd
push
pop
scas
pop
mov
roll
sub
sbb
fistpl
decb
adc
pop
sahf
int
push
push
push
inc
mov
and
into
sub
sbb
xor
ljmp
dec
mov
mov
lock
clc
jno
mov
fs
dec
or
andl
negb
sbb
push
sub
jns
jno
sbb
and
es
ret
mov
pop
pop
mov
xor
add
pop
mov
out
pop
sbb
mov
std
push
add
fistl
repz
enter
insl
pop
inc
jae
jb
or
jmp
mov
dec
and
stos
mov
icebp
mov
or
xlat
cwtl
pop
xchg
push
push
mov
cmp
sbb
sbbl
xchg
pop
test
aad
lock
dec
pushf
imul
and
inc
lods
push
pushf
push
jle
movsl
mov
inc
imul
test
test
mov
and
pop
and
jo
add
pop
mov
and
ljmp
inc
xchg
push
xor
pop
arpl
push
movsl
aam
xor
pop
in
sbb
jmp
jle
lcall
in
repnz
insl
pop
push
add
pop
fcoms
add
pop
sbb
lock
in
insb
aad
dec
cli
push
mov
pop
out
dec
mov
xor
ret
mov
fldenv
jmp
bound
test
mov
xchg
fcmovnu
popf
dec
mov
insb
leave
mov
inc
jp
xchg
and
pop
test
jmp
cmp
xor
dec
and
pop
stos
or
fistps
das
into
mov
cld
mov
sub
pushf
lret
cmp
jnp
xchg
mov
pop
das
ds
lock
mov
int
mov
inc
mov
sub
cli
popa
jecxz
xchg
insl
std
rclb
dec
mov
divl
pop
adc
mov
or
pop
push
jmp
xor
lock
pop
cmp
xlat
sub
imul
xchg
pop
popa
dec
jle
shlb
mov
jmp
popa
inc
pop
loope
daa
jp
cmp
sti
stc
dec
fsubl
lea
scas
push
xor
shrl
push
jae
pop
sti
inc
inc
pop
repz
int3
push
add
xchg
mov
lods
shll
pop
test
daa
fdivr
add
pop
test
mov
mov
aam
inc
movsl
lock
cmp
pusha
push
imul
xor
and
repnz
fldcw
inc
movsb
mov
in
sub
push
mov
mov
mov
pop
aaa
mov
fisubrl
pop
or
pusha
sub
test
xchg
sub
cmp
mov
push
push
lds
or
dec
jae
pop
xor
xchg
sub
sbbb
adc
insl
push
jnp
sub
mov
daa
xchg
fists
lods
cmp
dec
or
cmp
xchg
push
js
pop
push
fdivrs
jo
ja
jle
loop
push
push
out
cmp
inc
dec
push
icebp
mov
dec
pop
sub
mov
enter
icebp
pop
faddl
add
mov
ljmp
cmp
fadds
dec
push
or
jg
or
pop
xor
loope
sti
dec
ss
shll
push
dec
cmpsb
stc
je
pop
fsts
mov
ret
jae
aam
pop
push
test
jp
jbe
pop
jmp
and
xor
adc
pop
push
repnz
pop
cli
mov
addr16
xchg
pop
jbe
rcrl
jmp
cmp
ret
pushw
test
mov
fs
sbb
jne
mov
xchg
pop
adc
out
lock
push
nop
inc
add
sahf
sbb
fucomp
push
and
push
les
out
cs
fistl
int
jecxz
xchg
pop
pop
stc
mov
or
cmpsb
pop
sti
mov
sub
pop
sar
adc
inc
cwtl
addr16
pop
imul
sbb
pop
add
pop
cmpsb
dec
andb
aas
push
ljmp
pop
inc
notb
nop
pushf
jbe
lods
inc
cmp
jns
or
dec
mov
adc
mov
pop
jnp
data16
sbb
pop
push
lcall
popf
insb
xchg
test
in
cli
xchg
push
pop
shrl
adc
push
sbb
pop
xlat
pop
ret
adcb
fstps
divl
push
xchg
mov
pop
pop
adc
bound
adc
movsb
in
jb
sbb
jecxz
push
mov
adc
jle
das
pop
inc
sbbl
in
lret
inc
xchg
stc
dec
stc
pop
jo
mov
fxch
subl
sbb
mov
inc
jnp
sti
lods
pop
insl
movsl
xchg
mov
fldenv
inc
and
push
cmp
stc
sub
shll
mov
inc
cmp
test
push
dec
mov
pop
cld
pop
inc
cltd
jne
ljmp
add
pop
dec
pop
scas
std
push
mov
fimull
orb
std
inc
mov
subl
xchg
cwtl
ss
pop
mov
in
outsl
push
mov
stc
mov
mov
add
test
movsl
ficoms
mov
sbb
vcvtsi2sdl
gs
push
pop
fwait
adc
adc
pop
ljmp
xchg
pusha
or
xchg
mov
cltd
sub
xchg
fildl
mov
imul
mov
and
pop
data16
mov
inc
cmp
pop
fisubrs
xchg
stos
xor
jp
cwtl
sbb
adc
pop
scas
sbb
pop
rclb
lret
xor
pop
pop
pop
ja
dec
jb
dec
or
leave
pop
jle
jmp
stc
pop
adc
popf
das
mov
jno
lea
mov
sahf
mov
or
lahf
adc
mov
dec
and
pop
pop
pop
pushf
cli
fiaddl
push
jbe
lret
adc
jns
pop
into
and
push
in
fs
xchg
jecxz
aam
xor
pop
pop
adc
loopne
sub
cmpsb
push
loopne
xor
shrb
dec
xchg
pop
jmp
xlat
push
movsb
cld
push
movsl
mov
clc
sbb
orb
mov
add
add
mov
adc
pop
adc
mov
dec
xor
jg
pop
add
xorb
xor
xadd
aam
xchg
pusha
mov
aad
dec
push
push
jmp
adc
pop
xchg
dec
sbbl
fwait
pusha
pop
jmp
cmpsb
push
ds
aaa
mov
lea
jg
outsb
sub
jno
pop
add
rclb
imul
xchg
cmc
cld
rcrb
imul
push
push
sub
fbstp
cmpsb
je
sarb
adc
pop
mov
cmp
pop
xchg
mov
jne
mov
repnz
mov
imul
xchg
out
push
mov
repnz
test
aad
xor
pop
push
ljmp
repnz
loope
adc
setg
sub
pop
dec
pop
scas
and
fdivr
xor
add
add
pop
xchg
or
pushf
and
and
pop
inc
les
ret
into
xchg
jbe
outsb
pusha
pop
fldt
cmp
ret
jmp
inc
xchg
cwtl
aam
dec
cmp
cli
pop
jmp
fdiv
arpl
jo
and
mov
cmc
push
std
cmpsl
pop
jmp
js
mov
movsb
push
sar
mov
pop
lcall
fdivl
mov
pop
xor
pop
mov
scas
adc
out
ljmp
js
jl
pop
std
jo
pop
insb
push
mov
pop
adc
out
in
push
pop
fimuls
call
pop
jnp
adcb
push
jo
add
pop
pop
les
shlb
sub
movsb
test
xchg
mov
jnp
dec
mov
pop
pop
imul
outsl
mov
xor
lret
mov
movzbl
cmp
jns
mov
mov
pop
ds
fwait
ret
mov
pusha
or
dec
inc
inc
add
or
mov
mov
loopne
nop
repnz
pusha
inc
rclb
addr16
cmp
test
jmp
pop
clc
jl
dec
in
or
sub
inc
adc
push
adc
jnp
pusha
pop
shrl
push
add
dec
ss
mov
cmp
repnz
hlt
adc
scas
mov
fiaddl
pop
faddl
xchg
fucomip
call
cmp
pushf
pop
mov
lock
fninit
dec
inc
les
add
mov
test
xchg
int3
pop
pop
scas
sub
xchg
adc
in
inc
jno
insb
cs
pop
arpl
jge
bound
adc
arpl
aam
xchg
jae
hlt
pop
pop
daa
mov
mov
dec
leave
loope
cltd
shl
push
pop
mov
cmp
pop
push
ja
imulb
fldenv
inc
pop
scas
imul
pop
push
std
fmul
mov
adc
fdivrs
pop
sub
test
push
inc
adc
nop
pop
adc
xchg
fs
int3
or
and
lahf
in
mov
jb
mov
cmp
imul
push
sub
js
adc
xorl
sub
ds
lahf
cmp
outsl
cmpsb
pop
clc
cltd
cmc
xchg
dec
or
popf
fisubrs
adc
pop
inc
push
mov
mov
insl
pop
or
push
out
shrb
inc
push
xchg
jno
jmp
mov
jnp
lret
jb
xchg
pop
scas
pop
arpl
push
shlb
scas
pop
dec
imul
add
sub
mov
dec
push
and
mov
hlt
cwtl
out
pop
sbb
sbbl
bound
mov
xor
test
adcl
inc
aad
xor
repnz
hlt
fs
rcr
sbb
mov
lock
jle
inc
divb
pop
inc
adc
jl
scas
pop
insb
xchg
inc
mov
aas
mov
sub
xor
push
nop
pop
jne
inc
popa
jno
lret
pop
push
dec
filds
and
mov
push
cmp
sub
aad
xchg
imul
mov
testl
in
rolb
lret
loopne
fdivrl
outsl
sub
add
popa
jns
dec
pop
insl
push
sub
fucomip
pop
pop
aaa
inc
ret
inc
rorl
xor
pop
pop
ja
test
in
inc
pop
mov
jae
sbb
iret
and
fistpl
add
pop
jl
xchg
cmpsl
adc
mov
pop
jp
mov
imul
in
clc
jns
popa
jae
dec
sub
dec
mov
push
cmp
cs
xor
sti
mov
xorb
sub
jg
push
mov
pop
pop
leave
mov
fdivs
leave
rorl
adc
pusha
ljmp
popf
xor
lods
aas
int3
mov
fimuls
pop
jmp
sub
jmp
pop
jl
rcrl
out
fbld
mov
mov
push
les
or
inc
push
mov
insb
ret
stc
ljmp
cmp
lds
popa
mov
push
or
leave
ret
pop
mov
jle
mov
mov
push
mov
or
fcmovu
push
pop
bound
add
fmuls
mov
in
stc
insb
pop
xchg
jl
popa
push
push
xor
arpl
pop
idivl
mov
cmp
movsb
fstpl
rorl
call
dec
popa
cltd
into
addr16
sub
add
mov
out
lods
and
lock
pop
int
pusha
sub
pop
lea
fldt
loope
and
inc
cmp
sub
mov
cmp
lds
xchg
movsb
adc
fnstcw
mov
pop
jmp
in
pop
bnd
pop
cmp
fidivrl
cwtl
add
dec
ljmp
pop
jg
mov
dec
test
adc
leave
les
pop
dec
sub
sahf
pop
sti
cmp
shlb
out
mov
leave
inc
test
xlat
lcall
out
movsb
pop
jp
sbbl
aas
and
pop
movsb
mov
mov
pop
pop
jmp
into
es
clc
inc
xor
pop
mov
add
outsb
loope
xor
rcrl
pusha
pop
push
scas
fcoml
addr16
pop
jmp
dec
rcr
aas
fisubrl
nop
loope
pushl
ret
cltd
daa
xchg
pop
and
mov
sub
rcl
fistl
fisubl
pop
jg
into
imul
dec
push
cmp
jmp
and
pushf
push
mov
jle
mov
jbe
mov
jmp
faddl
mov
lock
js
sbb
sbb
mov
jge
rolb
mov
push
ficoml
sub
sti
or
pop
nop
dec
pop
mov
addr16
cmc
and
outsl
stos
xchg
mov
xor
sbb
xlat
dec
dec
ljmp
cmc
push
scas
lret
adc
push
insb
pop
pop
mov
sub
sbb
xchg
test
ja
inc
xor
pop
pop
xor
ret
jns
pop
sub
dec
mov
gs
lret
sub
pop
cli
push
ljmp
fcoms
pmulhw
imul
jbe
mov
inc
jecxz
ljmp
jle,pt
iret
pop
add
jno
dec
clc
call
std
jae
push
loop
or
int
popa
hlt
scas
pop
mov
or
mov
imul
xor
scas
mov
or
pop
mov
pop
in
cmc
imul
jbe
ret
pop
push
out
inc
xorl
sahf
je
fwait
dec
test
sarl
push
aad
sub
lds
xor
mov
pushf
sbb
jnp
xor
das
jbe
jle
push
or
cmp
fcomi
dec
pop
jo
xchg
pop
pop
or
arpl
dec
mov
pop
xor
xchg
pop
adc
push
loop
mov
dec
loope
mov
or
test
cmp
push
dec
sub
push
sbb
push
mov
mov
nop
dec
and
pop
adc
jl
mov
call
cmp
and
lds
mov
mov
ret
mov
jne
cwtl
fmul
mov
sub
dec
push
pop
cltd
fsub
sbb
mov
xchg
ljmp
stos
adc
xor
in
aam
ja
pop
and
imul
fisttps
cld
push
push
out
movsb
jne
lea
lahf
outsl
pop
adc
divl
lcall
sarb
sub
fnsave
xchg
xor
mov
dec
adc
int
ja
leave
mov
cwtl
popf
in
sub
les
jnp
push
in
or
sub
adc
stc
xlat
aam
pop
and
aad
push
scas
shr
popf
pushl
dec
lds
and
push
mov
sbb
decl
pop
push
xchg
mov
lods
hlt
inc
pop
pop
ret
mov
roll
xlat
jmp
jp
xchg
out
daa
mov
ret
fs
lcall
mov
xlat
mov
in
cmpl
push
ljmp
pop
xchg
cltd
push
jmp
xchg
jnp
pop
sub
or
mov
mov
fidivl
scas
sbb
in
fcmovbe
test
mov
pop
jle
pop
mov
pop
xchg
push
enter
cs
jecxz
dec
stc
and
dec
ljmp
pushf
mov
pop
imul
enter
negb
das
mov
inc
mov
insb
add
lcall
mov
inc
imul
sub
mov
stos
mov
or
sub
push
xor
scas
xorl
js
fidivl
jg
iret
or
bound
into
or
gs
dec
mov
jmp
rorl
pop
cli
inc
jp
notl
outsb
mov
pop
jmp
inc
or
push
dec
mov
pop
std
fisubrl
xchg
test
or
fwait
cs
fsubrs
pop
rcll
rolb
imul
push
addr16
xor
cltd
rcrb
push
popf
pop
xchg
inc
fcoms
sub
sub
mov
xchg
dec
cmp
cmp
inc
xor
fstps
leave
pop
push
lahf
jmp
adc
pop
mov
hlt
jns
sti
mov
push
mov
and
ss
enter
js
pop
inc
aad
or
lret
sbb
popa
dec
push
pop
call
and
inc
jecxz
add
pop
adc
divl
xchg
popa
jns
cmp
pop
js
pop
inc
dec
push
imul
sub
push
aam
push
mov
jne
imul
dec
dec
add
insl
cmp
pop
push
jns
sbb
adc
pop
push
cs
popl
cmp
mov
adc
gs
pop
cmpb
insl
xchg
lea
in
sbbb
int
imul
dec
movsl
or
push
mov
push
dec
fadd
inc
int3
xor
fdivr
loop
jo
pop
push
adc
imul
int
push
ret
aaa
ljmp
cmp
int3
push
cs
pop
test
sub
daa
gs
pop
imul
dec
cmp
into
push
pop
ljmp
jp
adc
xchg
jg
loop
pop
cmp
sbb
stos
stos
xchg
xlat
sarb
mov
insb
sbbb
cmp
imul
icebp
pop
jl
fwait
jno
pushf
out
ficomps
push
lods
es
js
jo
ret
mov
shl
and
dec
imul
adc
jb
das
in
movsl
jle
mov
cmp
aam
push
fcomps
shlb
cld
inc
or
or
rcrl
cli
mov
scas
dec
xor
pop
shr
clc
mov
adc
cltd
push
aas
adc
mov
dec
pop
int3
pop
sub
rcrl
mov
pop
add
mov
clc
fcoms
xchg
mov
outsb
test
movsl
shll
cltd
cmp
int3
ja
and
or
pop
pop
xchg
call
fsts
loopne
xchg
bound
das
push
fstpl
je
ljmp
rclb
lcall
leave
enter
adcb
mov
mov
and
push
sbb
nop
xchg
jmp
and
std
or
aad
mov
in
test
and
xchg
jo
pop
cmpsl
add
dec
sti
jmp
fwait
xchg
mov
enter
fwait
sbb
pop
in
add
fs
pop
mov
mov
lret
pop
inc
push
push
jmp
mov
mov
jle
pop
in
in
loop
dec
fisubs
pop
or
jne
inc
pop
mov
xchg
cltd
jmp
cmp
dec
pop
mov
sub
cmp
es
in
jae
mov
ljmp
das
mov
mov
pop
addr16
out
rcrb
mov
cmpsl
jle
xorb
fdiv
shl
and
dec
xor
push
push
pop
push
cmp
adc
cmpsb
scas
stc
test
rclb
jle
test
mov
cmp
sbb
pop
cltd
lds
adc
fldt
sbb
sahf
mov
xor
sbb
lods
ret
pop
xchg
pop
inc
dec
push
shr
roll
adc
pop
aaa
push
sub
mov
jp
cltd
jns
cwtl
push
pop
dec
or
outsl
pop
pop
push
stos
int3
adc
cmpl
out
pop
fdivl
push
push
ja
push
pop
movsb
mov
movsl
testl
rorb
or
pop
jbe
pop
adc
test
jnp
std
gs
int3
and
lcall
lea
sbb
pop
mov
push
imul
inc
mov
js
pop
clc
int
leave
mov
push
sub
fstl
int
pop
push
or
loopne
pop
add
dec
sbb
adc
sub
push
inc
mov
call
ret
adc
nop
dec
mov
jp
std
fistpl
push
adc
sarb
cltd
gs
cmpsb
test
jl
pop
faddl
in
adc
xchg
and
lret
add
fbstp
popa
int3
mov
mov
in
cli
dec
es
pop
sbb
movsb
cmpsb
pop
movsl
loop
lods
sub
sub
sbb
stos
orb
fcoml
and
push
out
lea
xor
addr16
sbb
test
fistpl
pushl
aam
xor
shr
roll
push
lock
push
xchg
negl
imul
pop
pusha
nop
orb
rol
push
mov
push
mov
push
lods
pop
jns
mov
clc
rcl
pusha
pop
data16
out
jmp
add
jg
rorl
lods
and
mov
ret
or
pop
es
xchg
inc
mov
push
pop
test
fsubl
enter
or
xor
pop
ss
mov
adc
ret
jb
fnsave
movsb
or
aad
and
pop
jecxz
push
and
pop
jmp
add
push
or
and
mov
xchg
inc
and
data16
sti
fadd
mov
fsubrs
inc
sbb
sub
pop
mov
stos
lcall
push
push
jmp
pop
xchg
pop
ljmp
dec
addr16
mov
pop
xchg
mov
or
inc
fistpl
pop
mov
sbb
dec
pop
push
push
or
pop
mov
jp
addl
mov
mov
in
jg
aam
pop
dec
sbb
fidivrl
shlb
push
dec
andl
mov
push
out
jp
pop
ja
dec
sbb
push
pop
into
mov
cld
push
dec
ljmp
imul
cli
daa
insl
xchg
pop
add
shll
dec
adc
ss
xor
rcrb
roll
imul
test
cmp
adc
lret
bound
or
ljmp
sbb
mov
aad
cwtl
in
and
rcr
mov
or
pop
lret
out
jns
lods
imul
inc
adc
adc
pop
pop
loope
dec
xchg
dec
xchg
test
enter
ror
pop
popf
pop
cvttps2pi
jmp
mov
jbe
pop
dec
jge
mov
pop
push
inc
adc
pop
andl
or
imul
jns
push
hlt
dec
lods
fs
and
arpl
or
sbb
and
dec
mov
pop
testl
sarb
push
xor
mov
ficompl
dec
daa
imul
adc
pop
les
sbbl
loope
mov
movsb
repnz
mov
stos
bound
movsl
cmp
push
cmpsb
fadds
xchg
ja
mov
push
cwtl
sbb
fsubs
and
xchg
push
sbb
imul
xlat
pop
xchg
adc
test
cltd
subb
jmp
pop
xchg
ljmp
sbb
jo
push
dec
int3
das
pop
outsl
mov
dec
cmp
pusha
pop
inc
shlb
cwtl
pop
pop
dec
out
xchg
mov
push
movsl
xchg
fisubrl
pop
into
dec
push
inc
jl
inc
sbb
das
dec
rclb
les
ljmp
adc
add
inc
pop
sub
pop
sub
fwait
cmp
rorl
push
icebp
lret
lds
mov
pop
loope
cmpsb
and
ret
ljmp
push
sub
and
rorl
mov
xor
dec
dec
jb
jmp
inc
pop
pop
ss
sbb
pop
cltd
pop
rorl
dec
push
pusha
jp
cmpsb
mov
sbb
or
cmpsl
out
clc
push
inc
mov
add
push
pop
pop
jl
pop
js
and
loope
dec
pop
mov
mov
dec
rcrl
mov
or
dec
jbe
pop
in
mov
std
pop
mov
jb
rcrb
mov
daa
xlat
dec
push
pop
pop
adc
pop
fstps
mov
imul
pop
aaa
jb
and
sahf
pop
ret
inc
mov
fwait
adc
stos
xchg
stc
pop
push
inc
or
push
fcoms
lods
add
cltd
int
adc
pop
pop
push
pop
je
and
insb
pop
fsubr
jbe
sahf
data16
xor
push
lcall
xor
xor
pop
mov
mov
incl
mov
and
cmp
adc
mov
mov
jae
popa
inc
and
mov
dec
mov
inc
pop
ret
mov
jmp
push
lock
popa
cmp
xor
fsubrl
mov
stc
aas
xor
and
loopne
daa
test
pop
pop
adc
int
cld
xor
mov
imul
sti
add
cwtl
jb
or
xchg
adc
pop
popf
push
lcall
xlat
inc
mov
adc
pop
push
and
imulb
or
faddl
popa
mov
xchg
fstps
mov
inc
mov
mov
push
notl
or
add
inc
or
lea
fsubrs
sub
test
push
cld
cltd
div
pop
add
dec
add
loopne
cmp
icebp
fsubl
mov
mov
xlat
pop
pop
je
sbb
cmc
mov
push
mov
mov
add
cld
mov
dec
pop
ret
jmp
or
js
adc
xor
cmp
fnstcw
xorb
pop
fcomip
enter
inc
dec
dec
pop
mov
sbb
xchg
ljmp
inc
sub
fisttpl
push
xor
and
xchg
dec
push
jg
cmp
push
inc
xchg
pop
jmp
ds
add
hlt
xchg
lds
ljmp
cmp
dec
fsubrs
fiaddl
out
pop
inc
enter
nop
mov
jmp
popf
and
int
iret
and
or
pusha
ss
ljmp
mov
jno
inc
inc
xor
mov
mov
dec
ljmp
test
andl
orb
adc
cmp
xor
or
push
shrl
mov
movsl
mov
xchg
jbe
push
notl
clc
xor
mov
fstps
push
std
lret
sbb
gs
adc
jl
adc
jns
pop
sub
and
jge
insl
pop
add
imul
and
dec
sbb
adc
push
out
push
pop
mov
clc
mov
pusha
pop
mov
mov
lcall
and
sub
push
cmpsb
mov
mov
adc
fstps
inc
pop
sbb
int
jl
push
movsl
mov
fwait
insb
inc
popf
pop
pop
shll
out
cmpsb
mov
pop
dec
add
les
jbe
ljmp
pop
ret
adc
lods
pop
mov
cmp
mov
sbb
imul
int3
lahf
jns
pop
stos
mov
pop
loop
ljmp
rolb
inc
mov
leave
aaa
pop
stos
dec
data16
pop
fincstp
clc
imul
lcall
loopne
mov
les
inc
shlb
rol
xor
pop
sub
lds
pop
cmp
inc
pushf
adc
cltd
fstps
rclb
or
pop
xor
fldl
pop
mov
js
and
pushf
mov
pop
rorb
mov
jp
xor
or
cmp
cs
aad
xor
pop
mov
dec
jbe
pop
inc
mov
pop
mov
pusha
lcall
dec
push
popf
stos
mov
jmp
push
mov
in
fwait
xchg
pop
inc
add
jbe
gs
lds
add
mov
pop
push
fidivrl
adc
or
lret
inc
lock
pop
inc
in
mov
fsts
repnz
push
mov
outsb
dec
popf
fmulp
dec
inc
clc
aam
fcompl
xor
das
pop
jg
jp
cmpsb
mov
nop
pop
inc
mov
dec
pop
daa
repnz
add
sbb
pop
scas
ficomps
mov
jle
sbb
std
out
movsl
mov
sbb
mov
or
xchg
push
popa
mov
jne
imul
mov
sbb
or
int3
loopne
fcmovu
mov
pop
xchg
sahf
adc
adc
pop
adc
stc
aaa
xchg
mov
ljmp
mov
mov
xchg
xor
aaa
mov
hlt
and
ror
out
adc
test
add
ret
stc
xchg
sub
inc
stos
ss
out
mov
sti
je
pop
cld
push
jl
ja
xchg
pop
sbb
js
jnp
xor
push
xchg
in
jb
dec
dec
add
shlb
pop
sbb
inc
jmp
ss
dec
adc
cltd
xchg
inc
les
ljmp
push
cmpl
lds
xor
xor
inc
nop
mov
aad
xchg
mov
pop
rorb
pop
mov
mov
pop
and
int
test
cmp
jmp
bound
pop
push
pop
fists
mov
aaa
imulb
popl
repz
and
repnz
dec
imul
pop
call
xchg
sbb
push
es
mov
pop
into
inc
cwtl
dec
push
sbb
bound
aaa
out
sbb
fs
js
in
daa
push
clc
out
rorl
push
je
fdivrs
mov
lock
adc
pop
in
jl
push
popa
jg
cmp
cwtl
jecxz
xor
push
xor
sbb
cmpsb
or
nop
les
dec
xor
rcrl
jb
shrb
or
mov
jecxz
mov
pop
jbe
push
push
cld
iret
mov
pop
dec
push
in
push
mov
mov
and
imul
mov
cmp
xchg
pop
sub
ja
fwait
and
fs
mov
and
xchg
sbbb
xchg
cltd
dec
pop
inc
mov
mov
sbb
mov
ficomps
daa
xchg
ja
sbb
pop
pop
jl
push
das
pushf
leave
dec
outsb
inc
sbb
jbe
add
sahf
pop
mov
repz
push
pop
xchg
push
scas
mov
or
ds
cmp
sbb
outsl
jbe
ja
adc
jo
push
inc
rorl
stc
mov
daa
roll
pop
pop
push
dec
sub
jmp
sbbb
adcb
inc
in
sbbl
push
stos
rcrb
sub
push
or
and
pop
xchg
adc
ja
ss
push
es
push
dec
fwait
push
pop
add
imul
cwtl
in
addr16
push
pop
fstl
cmp
mov
lret
xor
dec
inc
add
xchg
jmp
int
pop
pop
dec
fs
pop
das
inc
pop
mov
jnp
add
pop
adc
xor
jno
jle
pop
jecxz
add
mov
lds
push
outsl
cld
daa
pop
dec
or
add
pop
lea
in
lods
pop
pop
push
idivl
push
in
imul
addr16
adc
cmp
rol
push
dec
pop
cltd
jp
sbb
lds
mov
sub
addr16
movsb
in
sub
mov
jmp
imul
cmp
mov
adc
dec
in
mov
cmpsl
or
adc
mul
loop
jae
sbbb
sbb
xor
adc
fs
mov
mov
rcrb
jne
pop
dec
or
jl
lcall
inc
aad
xchg
pop
and
imul
scas
sub
pushf
mov
mov
pop
mov
push
insb
cmp
lods
pop
pop
fdivl
call
sub
imul
ja
adc
and
push
leave
xchg
pop
sbb
push
ret
and
gs
jmp
xchg
in
int
cmpsl
dec
jb
jb
pop
pop
lret
in
mov
adc
xchg
add
or
ljmp
cmp
jb
addr16
lret
mov
adc
scas
orb
fcoms
and
outsl
mov
inc
orl
popa
imul
sbbl
cmp
jl
leave
fmuls
inc
adc
sub
inc
push
xrelease
mov
test
out
adc
fs
mov
and
call
push
or
jb
leave
mov
and
adc
pop
es
adc
sbb
cmc
xchg
jnp
xlat
and
jp
pop
rcll
push
cli
bound
add
mov
inc
cmp
cmp
jbe
pop
inc
jne
jnp
loope
lods
push
inc
cltd
or
out
addr16
jmp
sbb
mov
repz
ficompl
jb
or
addr16
push
cmc
adc
ss
outsb
loop
outsl
jmp
insl
lods
in
mov
jae
pop
xchg
popa
ss
test
sub
pop
mov
int3
popa
outsl
dec
mov
lahf
fdivs
sub
jg
lds
movsl
jmp
stos
inc
xchg
ds
sahf
and
xor
push
fwait
mov
lret
lret
outsb
sbbb
and
fcomi
insl
xchg
insb
and
mov
pop
aam
pop
sub
fwait
xlat
iret
push
pop
push
shll
dec
cltd
les
pop
imul
rolb
and
inc
dec
add
outsb
lahf
cmp
clc
and
and
mov
pop
ss
xor
jno
cmp
jns
adc
fidivl
mov
xor
push
mov
pop
dec
jne
inc
jns
sub
roll
les
imul
shlb
sub
jne
dec
pop
push
inc
pop
dec
inc
or
popa
jge
pop
pop
or
cmp
pusha
call
xor
and
push
pop
pop
stc
bound
fcomps
sub
or
xchg
push
or
inc
ljmp
inc
adc
sbb
enter
mov
dec
mull
loop
pop
push
inc
jmp
in
pop
pusha
cmp
mov
dec
or
jbe
xor
and
sub
ret
jle
or
pop
inc
sub
inc
outsb
adc
push
cmp
imul
xchg
pop
xor
inc
cwtl
xchg
mov
je
adc
adc
in
jbe
pop
cmp
std
add
leave
nop
bound
pop
push
xchg
lock
aas
push
test
loopw
mov
mov
pop
jne
cmp
jecxz
push
mov
icebp
in
mov
clc
mull
sub
pop
mov
mov
lea
jae
loope
ljmp
test
ret
pop
stc
je
add
into
and
and
xchg
mov
bound
mov
roll
fcomp
push
push
or
dec
mov
jp
inc
mov
cmpsl
push
sub
daa
fisubrs
data16
mov
adcb
das
sub
fmul
sub
push
adc
mov
mov
arpl
dec
testb
pop
push
dec
adc
adc
and
push
sahf
sub
sbb
push
das
out
ja
jb
imul
xchg
leave
cmp
pop
cmp
mov
clc
mov
mov
nop
fidivs
in
leave
mov
pop
out
orl
mov
add
fisubl
or
cmp
pop
das
arpl
jmp
push
je
xlat
std
cmp
bound
add
sbb
rorl
add
pop
xchg
push
mov
cmc
fadds
mov
mov
push
stos
jno
ljmp
pop
cmpsb
hlt
xlat
xor
push
and
and
cmp
lcall
pop
mov
cmpsl
sbb
mov
aas
mov
adcl
insb
xor
xor
jge
bound
fidivrl
cmp
mov
fs
jbe
jecxz
dec
xlat
call
mov
call
rcrb
mov
out
or
insb
or
push
nop
pop
fadd
and
adc
movsl
cmp
adc
mov
nop
dec
xor
xchg
xchg
adc
sbb
pop
hlt
imul
push
das
mov
cmpsl
pop
add
xor
pop
jmp
cmp
incl
daa
mov
push
mov
lea
cmp
dec
sbbb
adc
inc
jbe
or
and
cmp
adc
pushf
xchg
pop
popa
lcall
mov
enter
add
clc
dec
and
and
lods
dec
mov
out
cmp
cmp
jno
xchg
dec
jae
pop
push
lret
jg
or
lcall
pop
fisubs
jmp
pop
decl
mov
dec
mov
lret
pusha
stc
adc
dec
dec
loopne
sub
pop
in
roll
pop
inc
mov
lods
add
jle
lcall
subl
or
call
pop
lcall
int3
out
or
movsl
mov
mov
mov
xor
push
xor
cwtl
popa
lret
and
fstpl
xchg
outsl
cmpsb
pop
jbe
vpaddd
pop
fcmovne
ficompl
call
jp
jmp
call
cs
jbe
or
cmp
pop
aam
imul
push
cmp
sub
and
lcall
push
test
jo
mov
aad
sub
push
dec
mov
cwtl
cwtl
sbb
pop
call
dec
mov
bound
mov
and
cmp
insb
jbe
dec
sbb
xor
cmp
pusha
xor
jl
cmp
js
ljmp
mov
imul
aaa
sahf
inc
cmp
add
lret
ss
js
pop
jb
idivb
push
movsl
and
mov
subb
xchg
jecxz
aam
pop
std
ljmp
pop
sbb
lret
cmc
mov
or
and
mov
cltd
subl
dec
mov
dec
jge
mov
pop
das
mov
push
ljmp
mov
dec
mov
pop
rorl
ja
fs
push
test
call
push
fucomip
xchg
pusha
dec
cmp
adc
cmp
and
pop
scas
aaa
sub
mov
ret
inc
push
std
sbb
mov
daa
sbb
mov
pop
imul
push
lret
pop
movsl
mov
push
mov
mov
aaa
sbb
pop
movsb
sub
dec
sbb
mov
and
and
cld
int
dec
ficoml
loop
sub
leave
pop
arpl
bound
xchg
fwait
ret
sub
jmp
clc
pop
imul
pop
jecxz
jbe
popaw
scas
addr16
or
pop
mov
pop
test
ljmp
sbb
movsb
or
mov
shlb
lea
movsl
mov
rcll
inc
orl
lods
add
pop
fisubl
bnd
pop
pop
push
xchg
sbbl
pop
seta
add
pop
cs
add
int3
pop
test
pop
fisubs
cmpsl
repz
mov
inc
add
aad
pop
and
add
mov
insb
addr16
push
pop
adc
out
dec
adc
xor
adc
xchg
dec
orb
mov
cmc
push
pop
imul
cmpb
mov
mov
fs
jb
adc
mov
adc
cmc
cmp
adcb
repnz
jbe
or
adc
jns
out
inc
cwtl
sbb
or
jmp
sbb
push
inc
gs
jge
dec
rcrl
out
push
push
pop
lret
add
sub
enter
mov
jmp
jge
sbb
cltd
pushf
ret
stc
pop
mov
jmp
cmpsb
js
xor
push
mov
sbb
add
mov
ret
mov
sbb
push
xchg
sti
lcall
mov
push
xor
inc
mov
dec
cmp
xor
adcb
sbb
or
inc
adc
cwtl
std
mov
add
dec
cmp
dec
pop
mull
es
and
pop
mov
pop
dec
fs
fistpl
and
cmc
pop
shl
rdtsc
pop
jbe
and
sbb
sahf
jp
dec
xor
movsb
fcomps
pop
mov
mov
pop
mov
xchg
pop
pop
pop
xor
cltd
stos
shr
bound
pop
sub
sbbb
xor
pop
out
stos
repz
loopne
cmp
stos
cmpl
mov
pop
jbe
pusha
push
jns
pop
adc
data16
inc
imul
dec
ja
lea
mov
call
pop
mov
pop
adc
dec
rcrb
jns
dec
sbb
push
jle
out
daa
pop
jbe
in
imul
je
xor
dec
xor
inc
leave
adcl
js
sarl
das
xchg
fcmovb
pop
pop
jmp
xchg
jge
cmp
pop
xchg
push
fdivp
scas
inc
out
into
std
inc
addr16
das
jmp
pop
or
cmp
fsubl
adc
dec
aad
dec
jmp
pop
pop
jmp
out
sub
movsl
fldl
daa
imul
adc
sbb
cli
pushf
pop
ret
push
cltd
outsl
test
pop
ljmp
pop
jns
pop
inc
imul
xlat
mov
cmc
pop
cwtl
outsl
mov
add
imul
push
cmp
dec
dec
or
pop
ljmp
clc
adc
movsl
adc
jmp
jmp
pusha
pop
je
xor
mov
popa
jle
lods
mov
ljmp
cmp
push
ret
cli
sbb
fwait
aaa
xor
inc
jge
mov
fdivrl
repz
addr16
mov
mov
repnz
cli
mov
imul
jb
lods
fidivs
cwtl
xor
or
aam
sub
sub
dec
pop
ret
icebp
faddp
pop
in
cmpsl
nop
addr16
pop
and
adc
sub
cmp
add
jno
aad
pop
ret
bound
std
jbe
sbb
pop
pop
mov
fsubp
scas
popa
ret
loope
out
or
pop
sub
pop
outsb
mov
pop
cmpsl
push
jo
and
xor
sub
pop
ror
dec
push
jbe
pop
testl
insl
pop
adc
push
mov
jbe
cmc
pop
sbb
ss
dec
jne
dec
pop
gs
add
jno
push
ret
mov
jmp
stos
mov
add
imul
push
pop
orl
sub
mov
into
xchg
movsb
fcomp
jecxz
mov
out
cs
dec
inc
fcom
and
sub
stos
cs
cmp
jno
and
jmp
out
in
iret
add
jnp
popf
inc
dec
push
fstps
adc
cwtl
fisubs
pop
iret
pop
pusha
notl
push
push
mov
jb
inc
push
jmp
call
sub
das
add
jnp
pop
xor
pop
adc
movsl
lods
push
lds
rcr
pop
cli
xchg
pusha
sub
inc
in
mov
das
add
or
cmp
lret
pop
xor
test
sub
sbbb
sarb
dec
cmpsb
xor
cltd
int3
mov
pop
add
xchg
push
jmp
js
sbb
sti
bound
das
adc
jnp
cltd
loopne
dec
xchg
pop
stc
ds
in
cwtl
jmp
jecxz
jmp
es
or
pop
sub
ds
les
cmp
push
test
insl
pusha
lahf
push
lcall
fistl
adcb
lea
fcompl
jmp
mov
test
loopne
xlat
inc
xor
hlt
cmp
mov
pop
pop
jmp
xchg
mov
shll
xchg
imul
add
mov
rcrb
incl
add
icebp
mov
in
add
adc
popf
inc
push
pop
inc
ja
cmp
lds
xor
jg
clc
je
cmc
jecxz
imul
cmp
pop
push
pop
push
repz
jg
sub
lock
popa
movsb
sahf
cli
inc
pop
mov
inc
dec
jnp
lds
popf
xchg
xor
sub
shrb
out
dec
imul
sbb
cmp
int
sbbl
inc
push
gs
into
stos
sbb
clc
pop
sbb
dec
lret
inc
pop
sub
sub
pop
aaa
mov
pop
inc
pop
pop
imul
dec
push
pop
inc
xor
mov
cmpsl
or
jp
adc
js
or
pop
fldl
negb
pop
repnz
cld
pop
xchg
pop
mov
test
mov
loop
sbb
pop
imul
inc
cli
cltd
dec
pusha
xchg
sti
mov
push
cmp
int
mov
pop
setns
dec
pop
inc
mov
or
lea
pop
enter
jne
loope
push
fldt
add
inc
xchg
mov
call
mov
push
in
sbb
lahf
dec
lock
xchg
daa
inc
cmp
rclb
dec
or
adc
jmp
or
push
orb
mov
or
stc
fcomps
sub
test
push
das
inc
pusha
cltd
xor
xor
popf
pop
add
jne
pop
ret
fldt
or
pop
pop
pushf
mov
xor
addr16
mov
sahf
out
aas
bound
imul
lahf
pop
dec
hlt
mov
jns
pop
xchg
jmp
shl
imul
fdiv
push
pop
push
adc
pop
ss
ret
pop
fwait
mov
popf
jmp
subb
jns
pop
pop
inc
mov
pop
lcall
cmpsl
pop
mov
cmp
cmp
lcall
xor
fdivs
xchg
adc
ljmp
mov
test
sti
pop
aad
fucomp
ret
dec
outsl
cmp
inc
aaa
jb
push
dec
sub
sahf
hlt
push
or
in
push
sbb
jo
fidivl
push
out
test
dec
dec
sbb
popf
push
imul
hlt
testl
push
pop
inc
fs
jp
cmpsb
pop
inc
rcrl
dec
orl
pop
popf
ds
xor
sbb
outsl
push
sbb
mov
jp
arpl
pop
std
rcl
in
sbb
pop
pop
mov
jecxz
pop
movsb
sbb
fisttpl
push
or
ljmp
lret
pop
pop
jae
imul
jbe
repnz
test
fsubrs
adc
pop
lahf
pop
es
cmc
inc
imul
sub
lret
ds
mov
out
pop
mov
push
mov
aaa
push
xchg
pop
in
cmp
jae
or
sub
bound
adc
lds
pop
inc
sarl
int
scas
or
sub
test
ja
ljmp
fstpt
adc
pop
pop
dec
test
mov
xchg
cs
push
mov
push
sub
mov
popf
mov
xor
out
fdivl
sub
xlat
pop
xor
imul
outsl
test
mov
pop
mov
pusha
jmp
lcall
dec
movsl
dec
push
pop
sahf
push
imul
cmpsb
jbe
mov
outsl
push
pop
jecxz
jns
ljmp
pop
movsb
hlt
mov
sbb
in
jp
popf
xchg
inc
pop
mov
add
js
xor
cmp
sti
cmp
scas
aad
movsl
je
jmp
push
sub
icebp
or
cmp
or
pop
pop
xor
jne
sub
dec
or
daa
jge
pop
jae
test
push
pop
jno
idivb
pop
test
ljmp
xor
mov
push
pop
xor
arpl
xor
js
add
pop
push
xchg
and
cmp
cs
mov
in
cld
mov
mov
ja
movsb
push
xchg
data16
lret
in
imul
test
cmp
sbb
mov
pop
dec
adc
movsb
add
cmpb
pop
xor
movsl
mul
adc
pop
inc
pop
mov
std
pop
test
mov
or
int3
orl
xchg
xlat
push
dec
xchg
pop
lock
jg
pop
in
ja
pop
daa
xor
in
mov
push
pop
pop
gs
ljmp
mov
sub
pop
xor
iret
cltd
pop
xor
in
popa
and
daa
xchg
ja
cmc
pop
fstpl
movlps
push
sbb
push
pop
xlat
jae
push
stc
and
pop
repz
mov
xor
shll
pop
push
and
ss
sarb
out
sar
pop
inc
in
lahf
adc
push
ljmp
mov
imul
xchg
cmp
fidivrl
jmp
fucomi
pop
push
in
add
sbb
or
cld
jg
mov
mov
pop
into
adc
jp
sbb
push
stos
sub
stc
inc
pop
jg
jecxz
push
je
sbb
pop
testl
xorl
adc
inc
in
dec
rcrl
cmp
out
lods
mulps
add
push
jnp
sarb
xchg
mov
or
das
jb
pop
cmpsb
xor
mov
test
pop
pop
dec
shlb
in
jle
or
adc
xchg
inc
pop
sahf
adc
incb
sub
jnp
ds
xchg
ret
adc
pusha
mov
popf
pop
int
xchg
cmp
add
mov
dec
loopne
mov
pop
mov
test
lods
imulb
push
cs
dec
cmp
jnp
or
lcall
and
add
imul
jp
aas
iret
mov
push
imul
cmpsb
mov
jmp
and
ljmp
adc
xchg
mov
inc
fsubrs
dec
sahf
pop
in
and
mov
int3
lret
andl
lcall
popa
fsubrs
xchg
inc
jle,pt
mov
test
arpl
fisubrs
clc
cmp
inc
cmp
shrb
fstps
dec
ljmp
mov
mov
stos
pop
into
pop
aam
mov
xchg
or
jmp
ljmp
aaa
and
test
popf
gs
push
mov
sbb
jmp
mov
push
and
lods
pop
fcmovb
pop
out
jmp
pop
lret
orl
aas
rcrb
push
cmpsl
enter
sub
fwait
pusha
jbe
dec
xchg
pop
stos
mov
ljmp
cltd
jp
jmp
push
clc
pop
aaa
xchg
cmp
pop
and
mov
loope
sub
sarb
xor
push
mov
and
jmp
loopne
pop
movsb
scas
inc
mov
jbe
or
jle
pop
dec
in
ret
pop
xor
rorl
repz
pop
test
in
add
push
data16
sbb
push
and
push
hlt
in
pop
push
mov
test
subb
mov
mov
xor
or
test
insl
dec
jno
popa
xchg
stos
pop
jns
push
inc
jecxz
loope
pop
sbb
and
cs
or
xor
jne
mov
pop
pop
inc
nop
xor
inc
popa
dec
pop
jno
imul
pop
inc
ret
jae
mov
push
or
out
stos
push
rclb
jl
and
test
pop
in
push
xchg
cmp
jecxz
das
mov
lods
mov
pop
data16
fmuls
sub
outsb
ficompl
out
lods
cwtl
test
popa
mov
push
pop
mov
pusha
mov
arpl
fidivs
movsl
imul
push
in
inc
movl
repnz
pop
and
jmp
cmc
push
popa
jge
jecxz
push
xor
aad
arpl
pop
cmp
push
imul
gs
xlat
daa
kmovw
push
xor
pop
xchg
mov
cmc
pop
idivl
sahf
fistps
popf
push
cwtl
push
int3
dec
jmp
daa
cltd
mov
pop
sbb
adc
dec
dec
aaa
mov
rorl
jo
insb
xchg
cwtl
cltd
jle
ljmp
mov
sub
out
push
pop
sbb
repz
pop
testb
push
sbb
scas
flds
imul
shr
dec
mov
cs
dec
dec
fmulp
lahf
pop
inc
rolb
bound
and
or
imul
rcrb
cli
js
and
pop
dec
mov
jmp
mov
mov
scas
push
cmpl
js
add
mov
mov
mov
pop
popf
mov
sbb
cwtl
sub
cmp
xchg
add
fcoms
push
jl
rcll
xchg
sbb
adc
mov
jmp
cwtl
enter
or
test
jmp
cld
negb
mov
dec
sbb
mov
pusha
sub
stos
pop
pop
push
and
fadds
rolb
sbb
cmp
xor
lods
sbb
jbe
imull
or
gs
cmpsl
sub
adc
dec
pop
pushf
pop
add
pop
test
pause
xor
cld
mov
dec
call
js
push
xchg
pop
lds
hlt
mov
mov
sbb
sub
or
cmp
das
pop
stc
out
dec
mov
or
es
mov
and
stc
push
xchg
cmp
xchg
sbb
xchg
pop
pop
mov
xor
hlt
cwtl
in
xchg
sbbb
push
xchg
xor
aam
jnp
sub
repnz
pop
push
test
rcrl
and
inc
lret
xchg
jns
pop
adc
test
cltd
jns
pop
pusha
push
daa
jl
push
lock
mov
fildll
or
add
out
notb
es
test
adc
lods
lcall
adc
cltd
mov
pop
adc
push
jno
test
out
inc
addl
mov
test
imul
cltd
nop
imul
pop
jmp
fstps
jo
and
ret
mov
mov
pop
xlat
jg
dec
mov
mov
pop
cltd
push
pop
imul
enter
arpl
mov
out
push
pop
inc
pop
mov
lret
pop
subl
mov
pop
push
dec
cmp
out
outsl
negl
push
sahf
mov
and
pop
mov
or
rcrl
les
leave
fdivrs
push
add
insl
xchg
test
or
movsl
popf
ret
push
push
jno
das
sahf
push
ss
pop
adc
cmp
out
lret
sub
pop
add
mov
sarb
and
fistps
mov
inc
enter
lret
fadd
pop
mov
mov
sbb
cmp
sub
push
mov
pop
and
fistl
cmpsl
pop
push
bound
cld
pop
dec
fldcw
pop
pop
nop
push
lds
dec
and
sub
jb
cmp
jle
jg
test
xchg
imul
pop
out
shlb
dec
test
xor
adc
lea
lret
sbb
sub
push
repz
push
and
sub
sbb
pop
xlat
push
adc
outsl
cli
cmp
xchg
loop
pop
ljmp
test
sbb
fimuls
mov
cwtl
jg
roll
mov
ss
add
add
cmc
loopne
mov
adcb
or
loope
jbe
push
cltd
mov
cli
stos
push
mov
mov
lods
pop
stos
push
pusha
ret
xor
dec
mov
mov
or
fistpll
call
sub
inc
mov
cltd
pop
jno
adc
lea
xor
jbe
in
pop
inc
es
ret
addr16
testl
cmp
pop
rcrb
jle
lods
cmc
and
push
push
xchg
xchg
jnp
mov
pop
cmp
add
pop
fs
loop
sbb
or
test
test
frstor
cli
cmp
mov
sar
negb
rcrb
adcl
loop
sub
dec
jbe
jp
ds
pop
or
fsubrs
movsb
movsl
addr16
cmpsb
pop
mov
sbbl
inc
xchg
sub
fs
pop
adc
test
mov
mov
aad
les
or
stos
pop
cmp
dec
inc
push
pop
popf
out
pop
xlat
push
jns
clc
cmc
orl
sub
lods
into
fisttpl
pop
icebp
incl
in
inc
xor
mov
mov
cltd
sub
push
xor
jno
call
pop
outsl
js
jo
pop
xchg
clc
das
out
pop
lds
adc
negb
dec
enter
inc
sbb
push
pop
add
cmp
pop
ret
daa
ljmp
pusha
out
jmp
ret
xchg
pop
movsl
pop
sub
inc
leave
sahf
and
pop
or
adc
pop
clc
sbb
inc
dec
daa
push
and
ja
hlt
sub
pusha
pop
cld
outsb
movsb
mov
and
std
dec
push
lret
rorb
sub
pop
stc
dec
pop
push
jecxz
pop
test
jle
repz
ljmp
push
jmp
icebp
ja
mov
sbb
push
push
leave
cmp
outsl
pand
pop
push
popa
push
adc
cmpsl
pop
leave
and
xchg
cmp
cli
cmpsb
sbb
cltd
stc
imul
xchg
idivb
hlt
pusha
cmp
push
or
repz
ljmp
andl
ret
cmc
mov
mov
xchg
setle
pop
ss
sub
pusha
mov
push
pop
mov
mov
mov
pop
idiv
mov
pop
and
dec
adcb
push
lahf
in
sahf
fsubs
in
mov
cmpb
ret
arpl
jmp
mov
stos
loop
pop
cmp
push
pop
pop
dec
ror
pusha
cwtl
mov
pop
andb
sbbl
loopne
inc
das
jne
pop
inc
cltd
mov
fstpl
mov
cld
jbe
pop
loope
ljmp
and
inc
fnstenv
cmp
popa
pop
dec
push
ret
jecxz
adc
iret
sbb
sbb
mull
mov
jno
pop
cwtl
jne
cmpsb
push
frstor
pop
inc
imul
cmp
stos
fwait
jnp
punpckhwd
lahf
dec
mov
js
ljmp
mov
cs
dec
outsb
add
and
fimull
cld
ja
ror
popf
fisttpl
cmp
das
addr16
mov
fsubr
xor
sbb
xor
into
adc
mov
xor
movsl
jae
cld
gs
pop
mov
aaa
test
and
sbb
xchg
pop
ja
mov
dec
push
mov
aaa
insb
lret
xchg
pop
cmp
mov
fwait
pop
test
orps
sbbb
cmp
inc
ss
pop
mov
push
xchg
lea
nop
jmp
lret
pop
je
or
rclb
fsubrl
mov
pop
xor
js
in
test
pop
aad
add
mov
rorl
and
and
push
ljmp
push
push
pop
jp
mov
mov
mov
pop
pop
in
pop
and
xchg
test
js
pop
jae
cmc
js
leave
jecxz
fistps
out
test
jmp
ds
frstor
nop
pop
inc
int
adcl
or
and
xchg
xchg
xchg
test
push
adc
pop
sbbl
cs
adc
ss
and
movsb
popf
in
pop
stos
sub
cmp
pop
loop
xlat
push
fld
cmpsb
dec
test
pop
push
rcll
fdivrl
orb
mov
cwtl
out
jb
jg
je
rol
jecxz
pop
adc
push
mov
pop
stos
mov
sbb
pop
jno
cld
dec
pop
mov
mov
and
push
pop
fidivrl
mov
mov
inc
push
js
push
mov
mov
push
adc
push
and
pop
or
pop
sahf
bound
sub
add
adc
xor
fdivrs
je
dec
add
cwtl
pop
enter
mov
mov
jnp
push
sub
pop
cwtl
xchg
in
mov
lds
nop
push
sub
js
pop
push
data16
lods
sub
outsl
aam
xor
ret
fists
daa
inc
scas
fisttpl
imul
popf
and
mov
xchg
pop
ret
ds
fidivrl
lret
pop
dec
or
les
and
add
cs
fistl
or
mov
ljmp
dec
pop
mov
lods
fs
pop
jbe
xor
jbe
pop
or
pop
pop
adc
mov
inc
jb
in
lcall
bound
dec
pop
sbb
or
andps
push
push
test
cli
mov
pop
sti
insb
or
jecxz
xchg
fistps
jmp
pop
mov
xorb
fdivs
ss
into
adc
jle
dec
pop
push
push
popa
rolb
pop
pop
cld
adc
fsts
rolb
and
push
arpl
out
inc
ret
mov
lds
pushf
jno
ljmp
ljmp
pop
pop
jmp
dec
ds
sarl
jo
pop
xor
call
fnstenv
data16
arpl
pop
ss
and
jg
mov
xchg
out
mov
aas
xor
sub
clc
in
sub
add
pop
mov
jl
pop
hlt
clc
in
mov
rol
pop
sub
mov
adc
jecxz
dec
mov
jg
sub
jmp
out
inc
pop
cld
sbb
test
scas
add
push
fidivl
movsl
pop
mov
xchg
in
cmp
repnz
insl
push
cld
hlt
out
mov
jmp
in
pop
inc
xor
xor
xchg
dec
or
dec
inc
insb
adc
out
lods
lea
insb
pop
int
pop
ja
adc
mov
and
push
mull
jmp
hlt
lret
push
pop
or
or
cwtl
mov
adc
xor
xchg
fnstsw
cmp
arpl
dec
cmp
push
dec
adc
mov
mov
jne
xlat
cmp
fnsave
and
jbe
xchg
imul
jns
cmp
or
test
daa
mov
aas
imul
sub
xor
cmp
fsts
loop
fistps
fsubrs
clc
cmpsb
xor
lea
inc
pop
adc
dec
mov
add
js
fidivrl
pop
int
push
mov
push
loopne
mov
scas
pop
cmp
insl
xor
stos
jmp
pcmpgtw
dec
sub
repz
inc
push
dec
mov
dec
cmp
call
pop
je
ljmp
aam
rcl
fstpt
pop
sbb
mov
pop
popa
in
data16
popf
ljmp
imul
inc
jmp
popa
inc
dec
cmpsl
inc
dec
insb
cmp
les
jo
mov
sub
sbb
lods
adc
sbb
push
subb
shr
lret
dec
cld
xchg
pop
testb
call
cmp
ljmp
sbb
sahf
fstps
sub
fisttps
add
imul
inc
icebp
das
pop
pop
adc
push
sub
cmp
pop
or
xchg
andb
and
lcall
xor
pop
insl
or
test
leave
sarb
push
stos
add
jecxz
jmp
pop
mov
popf
icebp
sbb
outsl
pop
lods
data16
cwtl
aam
inc
cli
pop
sbb
dec
cmp
mov
mov
xchg
cli
jg
pop
adcb
mov
and
sarl
xor
sbb
lahf
inc
cvtpi2ps
bound
pop
and
cli
dec
sub
arpl
testl
loope
pop
movsl
mov
out
xchg
push
cmp
jle
dec
fistpll
inc
pop
icebp
xor
movhps
xorb
xlat
out
pop
and
jmp
push
inc
mov
insl
pop
xor
lds
sbb
push
cwtl
mov
pop
popa
test
ljmp
cwtl
imul
fbld
xchg
inc
add
sbb
or
stos
adc
cmp
jne
mov
cld
sub
cmc
xchg
ljmp
dec
pop
sub
ss
add
pop
pop
repz
cltd
and
mov
jnp
ret
pop
imul
xchg
or
or
movsb
inc
pop
push
insl
mov
lret
js
xorb
dec
pop
push
insl
push
sub
pop
jae
mov
push
pop
inc
xchg
or
push
adc
xor
add
imul
jnp
dec
pop
jns
jne
inc
test
out
pop
xor
pop
inc
xor
jnp
push
pop
sub
mov
push
cld
jle
mov
and
cmpsl
inc
sbb
aad
xlat
dec
arpl
or
cmp
pop
sub
push
cwtl
stos
inc
mov
sub
cmp
mov
adc
or
push
bound
mov
and
pushf
ljmp
pop
jbe
stos
addr16
mov
lret
loop
xchg
fs
lcall
fidivs
sub
push
inc
lods
cmp
mov
cmp
mov
jmp
stc
pop
pop
push
cltd
and
adc
call
push
sbb
sbb
sbbb
adc
or
inc
pop
inc
pop
xchg
push
ljmp
daa
pop
ret
rcrl
in
jns
pop
sbb
mov
jae
add
ljmp
cmp
pop
leave
out
pop
inc
sbb
cs
test
mov
sti
icebp
adc
jmp
repz
inc
aam
push
sub
push
pop
mov
adc
outsl
test
jecxz
push
mov
test
xchg
mov
fld1
ret
and
cwtl
idivl
pop
and
ljmp
add
mov
sub
adc
pop
mov
int
je
aaa
jge
cmc
dec
jbe
lret
cmp
sub
mov
pop
push
cmc
call
lahf
stos
jle
sbb
jmp
xchg
sbb
jl
lret
push
xor
mov
ds
mov
in
adc
test
xor
cltd
cmp
mov
push
sub
mov
mov
xchg
imul
cmp
aam
mov
sbb
cltd
lea
dec
inc
pop
and
aad
mov
jnp
adc
sahf
ficompl
push
pop
hlt
push
inc
std
dec
dec
in
xor
adc
ljmp
repz
sarl
push
mov
inc
gs
stos
loop
add
push
xor
push
cmp
aaa
mov
pop
jns
popf
fs
dec
pop
sbb
scas
ss
mov
sub
lds
lea
sahf
out
cmpsb
ljmp
jecxz
or
jbe
lods
sbb
sub
sbb
ret
in
daa
pop
ljmp
and
cli
jg
sub
pop
pop
test
dec
pusha
pop
inc
sbb
leave
sub
loopne
cmp
mov
adc
sahf
pop
mov
ret
adc
ret
subl
and
loopne
rcrb
dec
jmp
sub
aad
pop
psubsb
pop
or
popf
push
in
into
sahf
ds
xchg
pop
das
pop
sub
cs
std
adc
gs
out
inc
cwtl
ljmp
shll
adc
into
sub
fwait
pop
inc
loop
pop
or
ja
pop
jl
pop
inc
movsb
in
rcr
aad
mov
icebp
repnz
pop
cmp
dec
xchg
sbb
addps
jnp
push
hlt
bound
imul
je
imul
inc
adc
xor
mov
pop
sahf
mov
pop
fnstsw
div
or
popf
push
mov
iret
cmp
fstps
mov
int
sub
test
xor
cmp
repz
push
xchg
fsubrl
mov
test
mov
cwtl
dec
sub
jns
rolb
push
and
dec
add
sbb
test
cs
aas
xor
lcall
int3
dec
int
pop
popa
test
or
push
sub
arpl
pop
xlat
xchg
pop
push
fwait
imul
insb
sbb
in
jmp
pop
popa
pop
cltd
xor
pop
xor
jae
push
sbbl
jno
pop
int3
sarb
sbb
scas
rclb
mov
cltd
arpl
pop
orb
xor
lret
ds
sbb
sub
movsl
cwtl
pop
lea
pop
xchg
add
jne
addr16
daa
movsl
mov
or
pop
xlat
ret
gs
fcomps
sub
push
into
jmp
cmp
ljmp
pop
push
test
and
shlb
rcrb
xchg
cltd
add
out
jo
pop
sub
jae
lds
pop
pop
dec
rorb
cs
push
jecxz
mov
pop
cwtl
mov
pop
out
xor
scas
or
jae
mov
lahf
xor
inc
pop
push
add
cmp
aad
cmp
popa
pop
negl
or
sub
add
pop
xchg
adc
xchg
int
cs
fisubs
cltd
jbe
lahf
mov
sub
adc
lock
lret
jno
mov
sbb
push
add
mov
jmp
xchg
xchg
out
cmpsl
lcall
pop
pop
fs
pop
popw
and
mov
aaa
dec
in
pop
lret
scas
push
insl
mov
imul
aaa
pop
mov
cmpsb
jle
dec
ret
adc
or
and
lods
movsb
fcomps
fists
or
push
loop
sbb
pop
add
stos
add
pop
es
sub
sbb
sbb
sbb
xlat
inc
shrb
cmp
stos
lods
lret
pop
inc
aas
out
pop
xlat
adc
cmp
cmp
test
popa
pop
lods
sahf
imul
mov
pop
cmp
in
mov
mov
sub
loope
gs
or
testb
sbb
imul
scas
loopne
mov
cmp
mov
xor
sahf
pop
call
ret
or
or
push
push
clc
dec
xor
call
inc
into
cltd
xor
pop
mov
pop
push
iret
stos
sbb
push
cmp
jle
jbe
mov
lret
cmp
mov
xchg
fucom
adc
lahf
push
fists
xor
cmpsb
mov
push
push
or
mov
xchg
mov
mov
imul
mov
and
pop
ljmp
mov
pop
scas
xor
mov
out
jg
je
dec
ret
mov
aam
adc
fdivs
aam
push
daa
jmp
mov
ja
jne
pusha
in
movsl
dec
daa
pop
xchg
xchg
aad
scas
aaa
mov
sahf
or
aam
push
push
pop
lds
out
mov
int
pop
sbbl
pop
movsl
mov
lods
and
pop
mov
pop
push
pop
jmp
mov
mov
stos
pop
lds
mov
leave
add
xor
mov
jmp
push
pop
pop
mov
add
std
aad
adc
cld
xchg
xchg
pop
in
sbb
cmp
popa
lea
test
mov
dec
ljmp
inc
popf
out
adc
or
js
jp
inc
push
clc
out
jno
xchg
cmp
mov
jne
mov
push
jl
xlat
imul
cmp
xchg
adc
jbe
mov
pop
sti
push
mov
pop
sbb
cs
and
imul
inc
pop
rolb
fistps
or
aaa
mov
pop
push
bound
mov
sbb
cmp
pop
jge
adc
mov
mov
test
ss
pop
cmp
jg
mov
dec
pop
test
jp
sbb
shr
out
xchg
cwtl
and
inc
fnstcw
jbe
jmp
pop
lods
aad
adc
cld
outsb
pop
cmp
and
mov
into
cld
push
in
mov
and
xor
mov
push
lods
xchg
sbb
xchg
xchg
data16
xchg
and
pop
pop
dec
jbe
daa
mov
addr16
dec
cmp
mov
loop
cwtl
jnp
mov
push
push
fsub
inc
cmpsb
ljmp
cld
aas
xor
or
sub
xchg
pop
int
rcll
pop
lock
in
mov
fstl
mov
pop
pop
arpl
sbb
mov
add
pop
outsb
scas
pop
push
pop
mov
negb
sub
dec
aam
sub
icebp
push
xor
jbe
dec
iret
add
nop
push
mov
std
sbb
fdiv
clc
pop
xor
mov
push
mov
sarb
pop
mov
fstpt
or
jno
dec
shrb
push
ljmp
mov
jle
inc
in
pop
pause
push
test
or
adc
arpl
pop
call
xor
pop
sqrtps
sub
add
cmpsl
pop
pop
sbb
lcall
mov
xchg
jnp
ljmp
in
sub
iret
mov
imul
pop
sub
cltd
int
test
pop
mov
ljmp
mov
stc
jb
lds
mov
mov
repnz
mulb
jo
cmp
dec
push
in
pop
loope
pop
and
xchg
jle
xchg
outsb
cmp
insb
nop
jns
jo
stos
adc
pop
jmp
pop
pop
je
lahf
cltd
rcrb
cmp
incl
sbb
pop
and
inc
cmp
inc
mov
scas
cmc
sbbw
and
pop
jmp
inc
call
pop
popf
xor
jae
js
pop
jbe
lock
jmp
ror
xchg
pop
mov
pop
imul
mov
popa
jb
xor
sbb
cmc
fstps
jmp
inc
jbe
lret
and
rcr
ja
pop
jmp
xor
dec
sub
pop
push
js
push
sbb
push
call
test
pop
fsubl
pop
xlat
adc
sub
push
jbe
mov
mov
or
or
inc
sbb
dec
jns
pop
add
jmp
push
mov
push
mov
bound
jle
test
mov
dec
dec
stc
push
cltd
pop
adc
mov
negb
lds
jne
push
or
inc
sub
imul
fsubrl
subl
rclb
out
std
ljmp
push
sbb
pop
insb
add
imul
cli
ja
push
add
dec
xorb
jp
pop
jmp
lds
pop
pop
ljmp
push
pop
gs
jb
mov
inc
push
mov
mov
jns
sbb
pop
addr16
jmp
xor
push
xorb
enter
mov
mov
popf
dec
pop
dec
imul
in
pop
daa
jae
sahf
in
cld
adc
ja
adc
and
mov
cltd
imul
mov
push
jno
loop
fsubs
jle
pop
mov
jne
orb
mov
ljmp
xor
in
pop
push
xorb
mov
or
sbb
push
dec
out
mov
dec
js
jle
pop
fsubs
insb
ljmp
pop
mov
in
shrb
pop
mov
daa
mov
lds
push
push
mov
mov
xchg
push
pop
jg
adc
int3
pop
push
daa
dec
sbb
cwtl
lret
mov
adc
movsl
pop
pusha
adc
sbb
pushf
in
jns
pop
fcmovb
xor
das
xlat
adc
fwait
fs
or
test
add
in
and
insl
sub
jnp
pop
popa
and
std
mov
push
cwtl
xacquire
inc
xchg
or
pop
imul
lods
mov
dec
or
cltd
jge
ljmp
add
xchg
dec
pop
out
sub
xor
cmp
iret
hlt
lahf
data16
mov
sbb
mov
test
idivb
push
ljmp
push
cltd
jmp
mov
adc
mov
and
push
pop
lret
cli
and
adc
mov
sub
push
sbb
es
mov
lock
lret
or
jmp
aad
lods
pop
popa
xchg
pop
in
shll
popf
sub
pusha
dec
fadd
mov
push
jp
pop
pop
or
mov
dec
je
cmpsb
xor
push
xchg
sbb
pop
xchg
aas
data16
pop
or
inc
push
clc
dec
test
and
jns
pop
or
adc
dec
add
fs
pop
pop
pop
daa
js
clc
pop
lds
and
sub
sub
ja
ftst
cmp
lret
pushf
fistl
mov
xchg
jp
xorl
sbb
inc
inc
pop
mov
and
push
fisubrs
jge
ljmp
addr16
lods
pop
push
call
push
sbb
jno
outsb
mov
outsb
pop
push
mov
xchg
push
pop
clc
lcall
pop
stos
insb
inc
lock
ljmp
jns
jecxz
dec
add
xor
popa
or
lret
pop
xor
rolb
pop
mov
popf
cmp
push
cmp
jl
jns
jae
adc
mov
clc
pop
inc
cli
sbbb
cmp
out
pop
es
cmp
or
lahf
fcomp
ds
inc
cmp
push
cld
add
ss
scas
pop
hlt
lock
jl
sbb
sub
add
cmp
pusha
pop
jge
inc
push
pop
inc
pop
popa
or
jne
jb
pop
push
dec
data16
and
out
or
sub
js
pop
or
das
bound
pop
xchg
popf
cmp
bound
in
sbb
push
rorb
icebp
cmp
sub
stos
adc
xor
popf
and
out
sbb
xchg
lds
cs
notb
pop
arpl
ja
arpl
cli
jb
or
mov
dec
dec
pop
aad
enter
addb
fmuls
pop
sarb
cli
dec
push
mov
popf
clc
sub
push
jo
jle
pop
jmp
xchg
ljmp
push
jecxz
pop
xlat
xchg
inc
test
jbe
lret
in
aad
dec
aaa
add
sub
adc
mov
pop
jae
jp
inc
mov
pop
or
loope
adc
ljmp
xor
out
push
pop
jne
roll
daa
xchg
in
loopne
xchg
pop
push
adc
imul
push
inc
test
mov
xchg
lcall
arpl
adcb
xchg
mov
outsl
mov
cltd
ljmp
jmp
inc
das
test
imul
or
pop
sub
mov
adc
adcb
dec
jb
arpl
push
mov
lock
sbb
dec
jnp
jmp
fwait
cmc
test
sbb
mov
jge
mov
xchg
lods
pop
shrb
inc
lds
sbb
lods
cmp
xor
repnz
addb
imul
call
inc
dec
test
sbb
imul
std
dec
sub
cmp
subb
movb
cld
pop
push
out
out
push
pop
mov
mov
dec
mov
stos
inc
pop
insl
pop
es
jmp
sbb
pop
out
into
outsb
lret
and
imul
inc
movsl
inc
cltd
xor
push
sarb
sub
loope
cltd
dec
pop
mov
pop
icebp
pop
dec
ret
mov
jmp
pusha
or
insl
repz
leave
push
pop
pop
mov
lock
fildll
notl
cmc
adc
pop
lea
arpl
xor
cmp
mov
mov
sbb
mov
stc
iret
pop
and
sbb
mov
mov
cli
hlt
and
lcall
negl
mov
shlb
aaa
popa
dec
push
fcomps
xlat
push
das
mov
pop
repz
or
imul
lds
loope
pop
sub
rcrb
ffree
pop
jbe
add
in
dec
fdivrs
pop
xlat
jb
pop
sub
mov
imul
in
pop
mul
jae
cltd
dec
pop
les
sub
pop
add
and
jle
imul
pop
push
jns
imul
xchg
rcll
or
jg
pop
test
insb
ljmp
fwait
pop
lret
mov
cli
outsl
rcrb
sub
xchg
pop
inc
pop
loopne
mov
add
add
cmp
negl
movsb
jle
imul
mov
mov
test
int
in
das
pop
mov
test
pop
ljmp
sbb
jle
mov
cli
arpl
jmp
xchg
add
xor
cmp
in
arpl
jp
outsl
test
daa
mov
pop
out
icebp
jo
jae
pop
jp
dec
nop
jb
add
sahf
stos
insb
xchg
push
push
adc
xor
pop
test
cmp
ror
out
popa
sahf
jp
data16
lods
pop
aam
pop
test
fdivs
sbbb
movsb
inc
mull
fsubrs
shlb
lret
xchg
pop
push
int
xlat
nop
mov
out
sub
push
pop
subl
mov
cld
mov
mov
lea
cmc
pop
xchg
pop
jno
pop
inc
mov
dec
jbe
xor
pop
jge
mov
addps
ret
divb
arpl
inc
adc
push
cld
pop
lcall
in
pop
cltd
fsqrt
icebp
test
xchg
lea
push
mov
pop
sbb
icebp
insb
mov
pop
fnstenv
xor
jmp
jg
pop
inc
rcrl
xchg
stc
pusha
movsl
cmpl
lret
fstpl
test
fmuls
ss
and
test
pusha
in
je
pop
dec
fcom
pop
mov
jle
cmp
pop
dec
mov
or
clc
fsubrs
dec
dec
mov
cld
pop
jae
insl
popa
dec
inc
ljmp
or
push
es
xor
aad
dec
push
inc
pop
inc
jl
inc
xchg
repz
jp
pop
push
aad
fcomp
in
pop
and
xor
xor
gs
dec
dec
popa
or
jge
fcmove
sbb
ret
sub
das
icebp
lret
loopne
mov
out
psubsw
jge
xor
or
mov
add
fnstcw
neg
or
mov
mov
mov
sub
pop
pop
cmpsl
imul
popf
sahf
je
cmpsb
decl
movsb
pop
ljmp
inc
cmp
icebp
std
xchg
jne
pop
loope
outsb
push
adc
lods
pop
fucomip
lcall
inc
loop
out
iret
pop
adc
jno
xchg
ret
nop
popa
sbb
mov
pop
repnz
push
stc
testl
stos
das
push
mov
pop
subl
lret
sbb
inc
popw
xchg
or
adc
insl
add
out
push
int3
out
push
imull
in
sub
push
popf
jecxz
aam
test
cmpsb
cmp
xor
mov
pop
lcall
mov
cmp
pop
outsl
add
push
fistps
mov
addr16
call
sbb
aad
or
clc
mov
pop
add
xchg
ss
push
mov
xchg
push
lahf
dec
pop
and
shlb
jo
cmp
pop
lret
add
sahf
dec
rcr
clc
pop
arpl
xchg
add
cmpsb
gs
cmc
js
jne
inc
sbbl
mov
out
jle
icebp
sub
push
push
stc
add
inc
mov
call
xchg
pop
bound
inc
outsb
mov
cmp
mov
dec
stc
mov
repz
sub
pop
push
pusha
rol
cmp
xor
mov
gs
pop
in
sbb
pusha
push
imul
mov
cld
pop
and
and
cmp
cs
cltd
pushf
xchg
jp
cli
iret
jmp
dec
mov
push
jmp
jnp
rol
xor
ljmp
jo
pop
push
jmp
cmc
mov
pop
or
mov
pop
push
xchg
in
movsl
inc
push
fcmovnbe
mov
out
call
mov
pop
sub
fisubl
pusha
mov
pop
push
push
repnz
es
ljmp
push
pop
push
mov
add
pushf
add
int
imul
mov
popf
mov
or
push
cmpsl
inc
dec
mov
cli
ret
jecxz
in
and
pop
pop
aad
or
jno
cmpsb
dec
imul
cmp
inc
sbb
and
jle
pop
mov
test
fsts
repz
xchg
test
cmp
sbbb
jmp
out
pop
dec
push
dec
mov
sbb
icebp
pop
sub
rcrb
stos
sub
pop
in
adc
push
cmp
popf
test
mov
cli
xor
add
aaa
ficompl
cltd
out
pop
les
ljmp
cmpsb
mulb
repz
in
and
clc
pusha
push
sbb
mov
add
fistps
int
pop
pop
adc
jae
cltd
loopne
sarl
daa
sbb
sub
push
pusha
xor
popf
push
mov
js
frstor
adc
push
pop
std
out
test
push
outsl
mov
xchg
push
pop
inc
mov
adc
jmp
cmp
pop
sbb
gs
xchg
xchg
test
pop
loopne
pusha
ret
ss
pop
in
and
aaa
ljmp
pop
add
mov
and
pop
xchg
inc
mov
adc
in
arpl
scas
xchg
rorl
cli
sbbb
sbb
fstpl
ja
xchg
loopne
iret
pop
jmp
dec
pop
pop
push
sbb
pop
or
adc
setno
ljmp
sub
in
sub
test
sbbb
popf
pop
out
or
jl
gs
popa
xchg
pop
imul
sbb
sbb
imul
xor
mov
mov
sbb
xorl
jns
pop
mov
pop
push
push
adc
andb
mov
push
cmc
rcr
fimull
pop
or
daa
pop
jg
gs
popf
insb
cmpb
popa
mov
mov
push
pop
jb
je
or
pop
pop
ficompl
jns
or
pop
scas
fistps
cmpsl
gs
sbb
out
jecxz
pop
in
daa
cmc
push
enter
mov
sub
imul
adc
je
push
adc
shlb
sbb
sub
pop
mov
xor
mov
inc
xchg
int
xor
adc
test
jnp
or
pop
out
aaa
push
mov
adc
push
mov
jge
fildl
cmp
mov
cwtl
fldt
ljmp
in
lcall
imul
push
push
adc
outsl
fimuls
repnz
sub
mov
subb
in
adc
daa
negl
cmp
cwtl
je
push
dec
clc
inc
jmp
ljmp
outsb
rclb
adc
dec
xchg
jle
or
xchg
pop
inc
stos
jne
cltd
and
dec
pop
out
sahf
sbb
or
imul
xor
shr
mov
sub
in
pop
out
cmc
inc
jl
xor
sti
push
jp
pop
adc
in
mov
pop
jmp
xchg
roll
pop
sub
jno
mov
mov
xor
jne
mov
fidivrl
ficomps
loope
mov
popa
pop
inc
stos
push
imul
mov
push
mov
jb
push
lahf
sub
ljmp
adc
pop
iret
addl
int
es
jb
sbb
dec
xor
ret
sub
pop
xor
adc
jo
outsl
inc
fistpl
jmp
je
ljmp
fwait
add
cmp
mov
dec
imul
in
xor
ss
xchg
pop
es
pop
js
mov
cmp
imul
pop
setne
xchg
dec
push
mov
lret
fstps
push
sub
jecxz
loopne
in
add
lock
xor
mov
mov
mov
fsub
bound
inc
mov
rcrb
adc
fsubs
dec
pop
test
bound
test
dec
adcb
imul
ret
pop
or
adc
aad
mov
lock
popf
pminsw
popa
push
pop
out
or
movsb
fadd
mov
inc
pop
push
or
dec
addr16
jp
pop
clc
stc
test
or
jge
jle
pop
movsb
popa
sbb
push
in
mov
cs
mov
push
negl
out
lea
push
rcll
push
dec
test
lcall
mov
pop
jle
pop
arpl
outsl
rorl
or
push
rcrl
fcomps
mov
xchg
add
xchg
imul
fstps
push
repnz
lock
testl
jecxz
pop
lock
fwait
mov
enter
ljmp
adc
insb
clc
imul
arpl
jno
out
das
adc
add
pop
mov
test
pop
dec
fs
and
nop
sbb
jg
add
pop
lret
jnp
out
mov
sub
sahf
test
sub
pop
fstpl
xor
jge
push
push
xchg
push
mov
sbb
mov
push
xor
push
mov
push
sar
jg
aaa
sbb
sahf
sti
popa
push
pop
adc
dec
mov
pop
lods
cs
jbe
push
jae
mov
ja
imul
popa
pop
push
pusha
aam
test
adc
fistps
sbb
pop
mov
pop
hlt
xor
adc
jmp
pop
insl
mov
sbb
pop
loopne
leave
ljmp
pop
adcl
add
lcall
pop
insb
adc
cmp
xchg
pop
jmp
sub
dec
sub
mov
sbb
ljmp
mov
sub
dec
in
pop
push
add
adc
lcall
arpl
cmp
clc
fucomp
rcrl
xchg
mov
hlt
and
jmp
fcom
xchg
stc
pop
pusha
sbb
add
cwtl
xor
inc
call
inc
dec
sub
mov
push
test
jb
xor
jecxz
and
or
ds
sti
or
pop
mov
mov
aaa
push
pop
sbb
mov
pop
sti
lahf
divb
aad
xor
sub
lds
and
in
xor
out
out
popa
pop
push
adc
stc
pop
mov
pop
aam
mov
push
mov
and
inc
in
sub
aam
ret
cmp
mov
xor
mov
lea
sbb
aam
or
push
js
sub
cld
ss
push
lret
pop
sbb
mov
mov
cmp
incb
pusha
and
add
and
andl
inc
rorb
mov
xchg
movsl
pop
cld
jb
add
push
cmc
pop
sbb
imul
and
or
pop
mov
cmpsb
push
mov
and
ljmp
pop
pop
fimuls
daa
jg
sub
sbb
pop
das
jns
ja
xchg
ret
or
jecxz
pop
push
loopne
not
daa
cmp
outsb
movsb
and
sub
cwtl
push
inc
jnp
mov
pop
jno
lret
jg
daa
and
popf
add
pop
jae
mov
mov
lret
inc
add
bound
ficompl
adc
jmp
lock
ljmp
mov
mov
pop
sub
dec
ljmp
lret
imul
int
jl
or
mov
inc
push
icebp
pop
daa
jne
rcrl
xor
fdivs
cmp
xchg
mov
push
pop
clc
loop
arpl
jbe
stc
xchg
mov
inc
ja
cld
dec
in
aad
shlb
adc
pop
push
ljmp
imul
adc
sub
adcl
ljmp
cwtl
xchg
clc
aam
cmpsb
pop
sti
idivb
cli
pusha
jp
pop
mov
jbe
dec
fnstsw
inc
sbb
das
daa
ljmp
ja
negl
dec
das
or
out
mov
jecxz
mov
hlt
filds
adc
shrb
xor
xor
lcall
inc
adc
lcall
and
mov
inc
sbb
pop
cli
ss
decl
nop
add
pop
jae
lcall
jo
pop
ljmp
stos
pop
loop
push
dec
std
pop
ds
aam
xor
adc
or
sbb
stos
enter
movsl
adc
icebp
ffreep
push
das
clc
into
pop
punpckldq
sub
push
adcb
jmp
mov
push
dec
mov
mov
pop
lret
movsl
insl
sbb
mov
push
dec
pop
in
dec
sub
pop
pop
xchg
aas
adcl
push
add
pop
jae
movsl
je
add
sarl
inc
pop
jb
mov
inc
cmp
fcmove
ss
dec
jne
or
xchg
jno
and
and
test
pop
mov
push
pop
or
adc
pop
outsl
dec
xchg
rcrb
scas
fucomi
xor
xor
rcl
jg
or
repnz
cmp
push
testl
shll
daa
cltd
sahf
xlat
add
and
push
or
push
xchg
push
je
mov
xor
ljmp
shl
adc
jne
jecxz
pop
fdivrs
jno
arpl
fucompp
cmp
sub
test
xor
or
arpl
push
pop
pop
adc
test
dec
sbb
jae
lret
into
inc
fisttps
pop
and
imul
push
push
inc
pop
mov
aad
aas
dec
test
lods
inc
pop
aam
push
cmp
mov
fidivrl
pop
pusha
ds
ficomps
push
pop
ret
in
in
mov
lahf
adc
ss
daa
mov
mov
clc
fistpl
push
mov
test
aaa
jp
xchg
sub
mov
xor
fldl
into
mov
fstps
loope
lcall
daa
test
sahf
std
mov
and
repz
fs
dec
mov
imul
jb
pop
mov
pop
lret
lods
sub
bound
push
mov
jnp
mov
sub
test
pop
dec
dec
and
push
xor
divb
push
cmc
push
mov
ljmp
jmp
pop
and
jmp
pop
jb
pop
outsl
cwtl
push
cltd
cmp
sahf
push
dec
mov
cmp
lret
cwtl
sbb
pop
or
add
sub
mov
push
fsts
fistps
cltd
es
xchg
lods
sbb
pop
lock
xchg
rcll
inc
stos
imul
pop
mov
call
arpl
or
dec
adc
js
test
shl
aad
lret
pop
sbb
dec
pop
lods
mov
mov
and
jge
or
aad
leave
and
shlb
in
pop
clc
mov
pop
dec
pop
push
scas
adc
pop
pop
test
and
repnz
jnp
push
pop
test
popa
scas
int
mov
sbb
jmp
ret
lcall
in
fwait
ljmp
pop
clc
or
dec
popf
in
bound
mov
orb
addb
jo
jmp
pop
cmc
loop
or
inc
dec
pop
jge
lds
push
pop
adc
int3
pop
or
xlat
nop
pop
aad
xor
clc
cli
inc
dec
xchg
dec
aad
outsb
daa
cwtl
add
lret
imul
popf
out
cmp
pop
bound
push
ss
jmp
and
es
pushf
shl
adc
push
push
add
stos
sbb
push
dec
jb
ja
lcall
xchg
sahf
xchg
adc
adcb
in
dec
push
jg
imul
inc
adc
ljmp
cmp
in
pop
or
pop
mov
pop
imul
cmp
mov
dec
cld
leave
mov
mov
xor
sub
fbstp
push
pop
je
insl
add
mov
and
shrb
out
mov
xchg
pop
fwait
rcrl
jg
push
dec
or
mov
adc
sbb
scas
or
inc
mov
pop
sar
jecxz
push
or
inc
push
insb
lea
push
mov
fistps
add
adc
inc
imul
pop
pop
jns
or
stc
xchg
push
jb
pop
mov
adc
push
and
jecxz
fisubrl
push
mov
inc
iret
imul
cmp
xchg
ss
cmp
cltd
jge
mov
ret
dec
pop
pop
pop
push
inc
or
dec
imul
pop
dec
push
mov
stos
into
xchg
mov
in
jecxz
ljmp
js
push
andl
cmc
add
xchg
and
xchg
rorl
pop
mov
pop
subl
cli
mov
daa
cli
mov
pop
pusha
xchg
sbbl
mov
sbb
mov
dec
or
fdivrs
xchg
add
xlat
and
imul
aam
jmp
cwtl
int3
cs
dec
mul
mov
rcrb
pop
mov
clc
mov
pop
push
int3
inc
sub
repz
loop
test
pop
add
mov
push
ss
es
inc
jb
jae
push
stos
hlt
jbe
stc
insb
push
and
cmpsb
sub
daa
xchg
mov
js
adc
push
pop
jmp
shr
pop
dec
stos
test
xchg
or
push
std
jl
gs
mov
mov
or
pusha
cltd
cmp
pop
xchg
add
mov
adc
orb
in
lret
push
add
mov
cwtl
push
int
pop
mov
dec
sub
add
out
rorb
push
push
mov
and
dec
adc
jae
mov
cmp
scas
cmc
pop
iret
adc
xchg
dec
sub
lods
mov
aas
pusha
bound
jp
stos
pop
adc
cmpb
cltd
pop
sbb
test
out
cmp
popf
imul
cmp
xor
fildll
jmp
ret
jg
mov
cmp
inc
add
daa
mov
pop
out
addr16
cli
lret
push
add
pop
fbld
push
test
nop
pop
pop
jb
jno
mov
neg
ret
leave
in
and
pusha
scas
mov
sub
mov
inc
or
pop
mulb
das
ljmp
push
lret
pop
out
add
popa
lahf
cmpsb
jne
pop
ds
call
inc
pop
push
pop
addb
push
mov
dec
insl
test
dec
mov
pop
xchg
sbb
push
in
cld
bound
inc
sub
pop
mov
rcl
jns
add
mov
cltd
imul
pop
push
call
xchg
xchg
lret
push
mov
xchg
lcall
icebp
pop
mov
xor
push
push
pop
mov
add
pop
adcl
negb
mov
sbbb
add
pop
xchg
sbbw
mov
push
cwtl
xchg
movsb
pop
sti
decb
mov
std
clc
int3
jae
xor
outsl
xchg
test
into
and
mov
adc
div
imul
jp
cwtl
pop
in
mov
stc
lret
adc
in
shlb
mov
das
jecxz
adc
pop
mov
mov
sbb
jae
xchg
jne
popa
add
cli
mov
pop
jmp
test
dec
add
fcoms
pop
mov
aam
mov
cmp
in
inc
cmp
call
inc
ja
data16
pop
mov
fdivr
fcomps
rolb
subl
js
popf
pop
jbe
leave
test
cltd
lods
mov
fistpl
aad
pop
sub
push
pop
and
pop
mov
cmpsl
cmp
sbb
pop
sahf
sbb
jne,pt
dec
arpl
mov
jmp
aad
inc
cmp
jb
mov
rcrl
dec
adcb
mov
xchg
pop
jbe
fldenv
sbb
dec
dec
fdecstp
xor
cmp
inc
mov
ljmp
adc
and
out
push
jecxz
roll
ljmp
int3
js
setns
mov
dec
push
jne
dec
xor
test
pop
movsl
cmp
mov
mov
pop
lods
repz
mov
mov
mov
pop
jmp
push
mov
cmpsl
ds
ljmp
pop
fisubrs
cmp
push
mov
subb
and
je
fsubrs
test
jp
mov
mov
pop
fwait
mov
pop
movsl
stos
sahf
mov
sbb
cltd
or
adc
ljmp
pop
adc
fstpl
xor
mov
cld
sbb
mov
pop
mov
push
mov
fcmovbe
or
pop
stos
push
mov
inc
pop
data16
insb
ficoms
add
xorl
mov
or
data16
cmp
movsl
jbe
scas
fwait
inc
push
dec
pop
pusha
ja
es
mov
pop
xor
rorb
pop
gs
out
sub
inc
and
push
pop
lcall
or
imul
out
push
jmp
andl
jmp
ljmp
sti
dec
or
sub
pop
mov
sub
das
aam
icebp
xchg
lock
pop
pop
dec
xor
mov
dec
bound
jne
xor
xor
cmovge
mov
pop
scas
mov
push
mov
add
nop
dec
stc
shrl
push
adc
lds
sbb
xor
fadds
cld
pop
push
shrl
in
pop
hlt
cltd
push
es
or
pop
fstps
mov
ljmp
sbb
add
subl
sarl
inc
pop
ret
in
add
pop
jmp
lods
std
mov
test
loope
bnd
push
pop
inc
fcoml
fidivl
add
pop
mov
leave
gs
push
mov
xor
and
gs
stos
mov
fldcw
pop
cmpsb
hlt
scas
test
lods
fisttps
cmp
rcll
and
in
mov
je
pop
sub
or
faddl
adc
push
nop
fsub
mov
pop
push
mov
xchg
pop
pop
jmp
repz
pop
std
lcall
xor
lock
mov
pop
push
pushf
sub
daa
and
jb
lahf
fdivs
mov
or
test
aam
cltd
pop
mov
mov
adc
pop
dec
push
mov
xchg
dec
jmp
cld
iret
in
dec
pop
out
pop
inc
arpl
cs
ljmp
push
es
int
imul
push
or
pop
lods
push
pop
imul
push
jp
adc
std
fs
adc
sub
inc
add
enter
pop
repnz
ljmp
dec
lret
jle
stos
sbb
stos
insb
test
dec
inc
cmp
mov
sub
sbb
sbb
xor
lret
fimull
mov
mov
dec
sbb
push
mov
sbb
xor
pushf
pop
dec
inc
insl
daa
or
je
mov
jno
and
out
mov
push
adc
push
retw
mov
adc
pop
jmp
test
call
mov
cs
jmp
jns
xor
jecxz
mov
pop
dec
push
mov
popf
lock
pop
loopne
lret
mov
inc
dec
enter
pop
mov
push
std
lods
iret
les
and
ds
dec
pop
or
xor
pop
ret
ljmp
rcr
insb
ret
jmp
dec
imul
xor
pop
lahf
cmp
pop
test
das
adc
pop
xchg
cs
jns
jb
negb
mov
rep
push
add
lds
fdivrp
pop
loop
pop
out
or
mov
mov
mov
lds
ficomps
movsb
cmpsb
imul
outsl
test
test
sub
sbb
pop
add
xchg
add
jo
shlb
add
xlat
vmpsadbw
subl
mov
inc
fisubl
inc
adc
xor
mov
filds
pop
sub
in
xor
pop
dec
mov
jo
cmp
dec
into
jmp
mov
les
out
das
push
push
repz
fcomps
sub
mov
cmp
jno
cs
cwtl
sub
insb
nop
xor
cmc
pop
xchg
xorl
fwait
inc
daa
xor
hlt
lcall
add
gs
pop
imul
pop
xchg
pop
mov
vshufps
mov
jp
pop
arpl
mov
cs
rorb
subl
loopne
cltd
pop
bound
scas
pop
pop
cltd
jmp
and
loopne
push
aas
aad
cmp
xchg
jmp
popf
inc
inc
dec
pop
addl
cmp
popf
repz
push
ljmp
push
jbe
iret
adc
stos
adc
mov
jb
fcmovne
dec
mov
pop
push
shlb
bound
sahf
js
xor
inc
pop
ret
xor
mov
cld
xchg
adc
cmp
out
jmp
pop
ljmp
cld
pop
dec
or
pop
mov
popf
push
pop
pop
pop
sub
jmp
add
pop
jle
sub
dec
scas
xchg
inc
dec
jb
das
cmpsb
dec
js
dec
arpl
push
inc
mov
daa
jp
lahf
cwtl
push
cmpsl
cmp
dec
pushf
pop
into
sbb
mov
pop
cmpsb
or
mov
icebp
lret
sub
pop
int
dec
popf
stc
jge
mov
cmp
sbb
push
mov
dec
or
clc
add
add
mov
jmp
repnz
stos
pop
enter
loop
jle
fisubl
dec
push
lods
mov
cmp
fisubrs
and
mov
mov
arpl
mov
pop
dec
jb
cltd
jae
pop
pop
dec
fldl
imul
xor
fdivr
xchg
dec
inc
imul
xchg
inc
or
notl
push
sub
pop
jecxz
out
fadd
add
push
or
push
outsl
ficoms
test
cmp
scas
mov
lahf
shlb
or
in
ja
mov
pop
cld
daa
mov
hlt
cmp
xlat
repz
cltd
xor
sbb
pop
cmp
ss
cli
dec
inc
mov
insb
pop
dec
jne
enter
mov
jl
mov
dec
or
lcall
mov
cmpsb
sti
jae
ret
ja
inc
lret
ss
or
or
push
aaa
sbb
ret
ror
and
pop
jle
iret
in
imul
mov
insb
jp
xchg
jne,pn
pop
xchg
or
fsubr
add
pop
mov
cmove
outsb
mov
rclb
xlat
push
int
and
enter
push
loope
es
mov
pop
pop
inc
mov
fcompl
pop
mov
and
or
stos
jmp
dec
paddq
pop
pop
pushl
leave
addb
dec
outsb
mov
and
pop
daa
out
outsl
cmpsl
xchg
leave
fbstp
pop
stos
repz
pop
js
mov
leave
jl
and
pop
push
mov
sbb
sub
bound
fwait
in
mov
movsb
arpl
pop
stos
push
jp
xchg
lods
xor
out
cmp
jecxz
xor
pop
sub
pop
lods
repnz
fcmovnb
push
adc
jnp
mov
push
in
push
sti
pop
in
popf
xorb
mov
push
dec
or
pop
ficompl
int3
fsubs
ret
je
xchg
sbb
pop
push
or
xchg
loopne
pop
iret
mov
ss
cmp
repz
jbe
std
out
jb
adc
pop
dec
dec
dec
mov
dec
call
pop
out
daa
ja
in
loopne
cmp
cmpb
or
cmp
cli
sub
cwtl
js
pop
add
xchg
jbe
sub
pop
xlat
add
ljmp
dec
pop
pop
pop
and
mov
sbbb
inc
ficoml
add
fimuls
pop
or
jle
mov
push
push
movsb
or
mov
daa
mov
pop
lcall
add
imul
and
bound
fwait
out
bound
cmpsb
push
dec
mov
jnp
mov
fwait
pop
ljmp
rcll
inc
mov
or
mov
jnp
mov
or
push
mov
sbb
cmc
imul
dec
sbbb
or
cmp
or
jecxz
push
adc
pop
out
es
mov
xor
and
sahf
stos
pop
pop
mov
lret
jmp
out
adc
lds
pop
imul
popf
cmpsb
jmp
jb
test
add
fnsave
push
jle
adc
cwtl
pop
es
add
mov
mov
shl
arpl
pop
pop
sbb
test
pop
push
loop
xor
add
leave
jns
ja
adc
pop
push
shlb
pop
add
lret
enter
or
or
sub
mov
push
add
dec
dec
jge
jne
pop
nop
push
push
pop
and
push
ds
or
data16
push
push
jno
pop
mov
jge
pop
inc
popa
mov
mov
pushf
sbb
ljmp
and
cmpsb
incl
pop
icebp
orb
pop
in
stos
push
jnp
push
ljmp
sbbb
jl
arpl
sbb
or
imul
js
sbb
cmp
test
push
rorl
pop
je
jb
mov
pop
daa
faddl
cmpsb
pop
inc
xlat
jl
xorb
push
mov
pop
push
shrl
pop
xchg
andl
mov
addl
out
pop
push
dec
inc
sbb
jecxz
cmp
ljmp
pop
cltd
gs
jae
pusha
out
push
pop
es
mov
adc
cltd
fistpl
sub
shrb
aad
sbb
in
inc
pop
mov
std
mov
arpl
add
sahf
lahf
and
push
pop
mov
mov
aad
test
pop
xchg
pusha
es
add
sub
call
insl
push
sarb
pop
sub
negl
xlat
sbb
push
bnd
int
fisttps
push
rolb
leave
fsubr
pop
mov
sub
inc
pop
mov
out
adc
jmp
daa
inc
dec
mov
xor
push
mov
sub
mov
imul
in
push
out
sub
mov
push
pop
sbb
fcomps
jo
dec
rcl
xchg
subb
mov
or
sub
push
ficoml
pop
dec
lods
push
fsubp
pop
inc
lret
leave
je
mov
inc
pusha
jp
pop
pop
inc
in
in
ffree
aam
pop
scas
repz
fstps
or
mov
inc
push
std
add
sbb
mov
scas
pop
xchg
roll
ret
in
arpl
push
pop
push
sti
xor
fs
inc
in
loopne
fidivrl
mov
or
jbe
pop
push
xchg
pop
jne
jp
jl
or
stos
mov
pop
rorb
imul
push
orl
out
fistl
dec
push
int
cmp
pop
bound
cli
test
jnp
xchg
pop
fildl
iret
pop
in
adc
ficoms
cmp
cltd
ds
sub
pop
sarl
and
cltd
mull
or
xor
pop
sahf
xchg
lcall
or
jmp
jno
fcompl
ficompl
clc
lret
sub
jo,pn
inc
xlat
lahf
add
and
jno
push
pusha
mov
test
lcall
repnz
aas
rcr
sub
mov
ret
dec
pop
shl
cmp
ljmp
xor
xchg
js
pop
push
jg
cmp
movsl
mov
adc
imul
mov
rorb
aas
sbb
fildll
ljmp
popa
movsb
push
pop
mov
pop
inc
loope
fistps
fidivrs
sahf
mov
xor
addr16
stos
pop
fwait
jge
je
arpl
sub
jle
pop
int
push
movsl
mov
jae
popf
push
bnd
orl
mov
pop
mov
ja
mov
jge
xchg
pop
js
pop
mov
mov
mulb
lcall
add
pop
or
pop
addl
mov
sub
sbb
jae
jne
inc
bound
dec
pop
lret
push
dec
push
fcompl
in
out
ljmp
mov
pop
cmp
xchg
add
das
push
and
push
ljmp
pushf
mov
int
ja
inc
or
or
add
cmc
inc
pop
lahf
mov
pop
mov
mov
xchg
or
rcrb
fadds
dec
mov
pop
and
nop
jmp
mov
mov
aaa
dec
xorb
pop
outsl
mov
xchg
jno
sbb
aaa
clc
ret
push
sub
daa
sub
es
dec
mov
aam
sub
in
rcrb
adc
and
arpl
mov
orb
xor
rcrl
inc
jmp
mov
xchg
addr16
ljmp
xchg
fimuls
push
cmp
into
or
rorb
mov
orl
inc
test
outsl
sbb
pushf
pop
fsts
jle
adc
lods
cmp
pop
add
mov
addr16
pop
fsubrs
out
and
flds
fsubs
adc
dec
and
mov
mov
test
iret
pop
fcompl
mov
fsts
jmp
les
enter
mov
sbb
adc
divl
pop
imul
push
dec
cmc
inc
ds
push
and
mov
inc
adc
je
pop
xor
jae
mov
aad
pop
lods
mov
dec
xchg
push
xor
push
ds
test
stos
pop
mov
pop
xchg
and
pop
lds
ss
fsubrp
push
pop
sbb
movsb
jg
xchg
pop
ret
leave
sub
pop
imul
outsl
addr16
pop
xchg
std
jmp
push
out
test
subl
mov
fsubrs
lret
push
add
sub
pusha
data16
pop
xor
mov
dec
aas
mov
outsl
mov
pop
in
pop
xchg
loop
jae
sbb
jns
dec
ss
mov
adc
mov
pusha
push
ss
inc
mull
add
dec
jp
fsubr
pushf
jns
push
xchg
pop
jecxz
ss
or
mov
xor
xlat
push
fcmovb
fadd
mov
push
inc
xor
jbe
sahf
pop
aam
in
xchg
outsb
jnp
xchg
cli
lahf
mov
add
and
pop
cmpsb
cmpsl
pop
int
jecxz
std
inc
sbb
push
inc
das
mov
fcoml
and
ret
in
sbbl
loope
jg
stc
add
pop
jl
test
jle
adc
mov
ja
cmp
adc
shlb
jb
insl
stos
sub
jne
faddl
ljmp
push
dec
fisubl
pop
loop
lcall
sbbb
dec
mov
lea
loopne
jp
mov
dec
pop
popf
mov
pop
and
jmp
imul
pusha
mov
dec
negl
outsl
les
and
xchg
aam
pop
push
xor
push
adc
mov
dec
mov
out
ret
sbb
cld
add
xlat
in
or
ljmp
stos
pop
xor
add
rcll
pop
testl
mov
mov
aad
sarb
cmp
popa
mov
je
rcpps
xor
js
xlat
sbb
adc
shll
jmp
aaa
sub
das
loop
pop
push
cmp
sub
test
out
test
pop
mov
adc
pop
or
ret
cmp
subl
cwtl
mov
sti
mov
push
pop
push
mov
addr16
and
dec
in
mov
xor
loopne
adc
push
rcrl
and
xor
ds
pop
pop
pop
jmp
dec
mov
lcall
fcmove
daa
fyl2xp1
cmpsl
fmuls
hlt
jnp
xchg
popa
push
call
pop
inc
sbb
mov
sbb
stos
and
fnstcw
mov
ds
imul
int3
stos
adc
jbe
add
pusha
test
mov
pop
imul
es
loope
sarb
or
lcall
popf
mov
cmp
mov
sub
lcall
xlat
rcrl
push
dec
ljmp
jge
push
in
pop
std
rcrb
adc
fdivrp
pop
xor
push
jge
out
push
push
dec
lock
and
xchg
pop
lret
adc
call
clc
cmp
xchg
xlat
adc
mov
pop
jmp
imul
jmp
adc
scas
insl
xchg
in
ds
jmp
ljmp
loopne
pop
aaa
daa
mov
push
cwtl
test
insb
je
outsl
or
fsubp
gs
push
aad
ljmp
stc
push
jmp
xor
mov
push
int
clc
inc
pop
mov
jmp
cmp
lret
xchg
mov
inc
mov
xchg
add
pop
pop
sti
call
jo
pop
fisttps
movsb
pop
shld
ja
or
pop
sbb
xor
xchg
pop
fstps
lcall
pop
cmpsb
imulb
sbb
inc
push
sbb
sbb
pop
push
rcrb
imul
jmp
jle,pt
or
add
mov
push
repnz
xchg
out
xorb
pop
nop
push
stos
push
jns
dec
xlat
cmc
jbe
pop
imul
cld
or
or
callw
js
je
mov
pop
cmc
es
ja
ret
mov
add
popa
dec
push
fucomp
cmp
xor
decl
mov
push
xor
sbb
pop
mov
add
sub
add
movsl
and
xchg
pop
pop
cmc
out
fwait
xchg
scas
adc
sub
ljmp
pop
dec
fstps
aaa
pop
mov
adc
inc
add
xchg
fstp
mov
cwtl
pop
xor
push
mov
aas
stos
inc
jmp
or
lret
repz
mov
and
mov
and
addl
push
mul
sbb
mov
mov
shll
push
push
outsb
or
push
lods
pop
movsl
je
adc
fadd
pop
pop
jmp
adc
in
cmpsb
dec
je
pop
xor
jl
mov
rcrl
mov
push
mov
add
mov
mov
xor
push
sbbl
arpl
sbb
fwait
aad
fmul
and
dec
pop
add
adc
outsl
mov
nop
or
jmp
out
mov
lahf
inc
xor
sti
ss
repz
dec
shrb
mov
add
push
lods
pop
sahf
adc
push
pop
mov
aad
pusha
adc
mov
sub
hlt
fidivl
outsl
pop
jecxz
test
mov
out
pop
inc
xchg
into
rolb
add
mov
or
mov
cmp
mov
fistpl
push
clc
inc
aaa
mov
jae
loopne
jmp
cwtl
jb
fsts
fsubrl
pop
xchg
cltd
rclb
mov
out
jmp
jecxz
pop
idivl
xchg
outsb
out
jnp
fcomps
stc
outsl
clc
push
sti
arpl
cmp
rolb
daa
movsbl
aaa
mov
imul
insl
test
or
adc
xchg
test
cwtl
fistpl
mul
mov
pop
sarb
stos
pop
cmp
jl
pop
inc
xor
or
fistl
jnp
rorl
cld
jmp
pusha
xchg
loop
pop
pop
xor
outsb
ljmp
mov
fsubr
mov
adc
lcall
sbb
add
pop
add
sub
lods
fsub
pop
push
xor
mov
or
inc
add
imul
rclb
jnp
sbb
adc
pop
jmp
sarl
dec
pop
popf
mov
push
lock
jecxz
sbb
hlt
test
mov
pop
jl
lahf
fdivs
daa
mov
sub
cwtl
sbb
pop
aad
sar
repz
adc
popf
push
test
out
pop
cmpsb
sbb
pop
cwtl
ja
pop
pop
rcrb
jle
push
out
cmpsb
cmp
jae
and
fstpt
in
into
push
mov
std
popa
xchg
daa
mov
les
or
loop
pop
cs
ljmp
xor
aas
sbb
aaa
lcall
jnp
and
inc
pop
fdivrl
mov
aas
adc
popa
cmp
add
sbb
cmp
inc
mov
lea
pop
ljmp
or
cltd
dec
or
sbb
lock
pop
lds
inc
insl
jo
add
pusha
jge
popf
sbb
stos
cld
pop
jle
mov
xor
ret
sub
repnz
mov
xchg
int
sub
push
pop
in
test
stos
cmpsl
aad
push
lret
fists
add
pop
ljmp
mulb
and
stc
imul
xlat
pusha
out
test
mov
push
stos
lock
nop
mov
in
icebp
dec
shll
pop
push
insl
test
test
sar
jl
xchg
and
mov
mov
mov
cmpsl
jmp
mov
mov
test
pop
daa
pop
push
inc
dec
cmp
push
mov
notl
mov
pop
mov
lods
jnp
xchg
popa
cmp
pop
pop
arpl
pop
loopne
lods
add
xor
pop
fsubrl
dec
mov
aam
dec
and
jmp
sub
push
imul
mov
rclb
pop
scas
add
in
pop
inc
mov
mov
pop
mov
js
push
call
sbbl
sub
call
pop
jl
sub
pop
cmp
shll
pop
shrl
cmp
xchg
cld
arpl
push
inc
push
pop
mov
cmp
pop
push
pop
lock
insl
ljmp
shl
mov
pop
neg
add
negl
or
scas
sbb
jecxz
adc
pop
pop
or
test
xor
lahf
mov
dec
sbb
lea
inc
push
jb
ds
nop
add
jmp
sbb
sbb
int
mov
sub
mov
inc
add
pop
cltd
enter
outsb
sysenter
sbb
xor
pop
repz
loopne
jno
cwtl
pushl
inc
lods
mov
ret
cmp
pop
jmp
or
fisubl
sbb
dec
jb
push
jg
pop
imul
rclb
inc
adcb
pop
insb
xor
dec
mov
fists
sbb
sbb
shl
pop
mov
pop
fimuls
adc
dec
dec
and
pop
mov
sbb
or
pop
push
push
pusha
int3
mov
pop
pusha
std
rcrb
add
jbe
ficoml
cltd
pop
mov
or
push
test
pop
imul
xchg
les
aam
ficompl
mov
xor
in
jbe
xchg
mov
stc
xchg
std
cwtl
dec
stos
inc
int3
push
fmulp
or
add
das
inc
inc
in
push
icebp
xchg
fistps
std
out
pop
or
and
xor
gs
jnp
xorl
aam
ljmp
cmp
dec
aas
pop
cmp
inc
test
js
push
cmp
mov
movsb
test
ds
push
cmp
mov
fimull
idivb
inc
or
pop
and
orl
pop
xor
push
xor
pop
pop
sahf
pusha
pop
data16
insb
sbb
jb
js
jle
mov
dec
ss
dec
sub
push
push
cmp
enter
mov
in
repz
aaa
fxch
cmp
shl
fwait
xor
and
je
mov
mov
lds
push
cmp
cmp
aas
and
mov
dec
pusha
push
test
enter
inc
inc
lret
rorb
inc
xor
dec
cs
sbbl
jne
fs
ss
xchg
pop
shlb
add
ja
loope
in
jmp
pop
xlat
dec
addr16
add
push
pop
sbb
sub
pop
add
pop
xor
and
ss
adc
jno
sahf
mov
hlt
and
cmp
and
cmp
popa
dec
pop
gs
jno
jmp
call
loop
cmp
int3
cltd
cmc
push
add
jne
mov
pop
xchg
xor
in
push
or
hlt
cmp
aas
inc
jo
pop
jmp
push
cmc
pop
and
pop
std
popa
and
imul
jge
sbbl
mov
mov
test
cmp
mov
mov
jp
jb
push
aad
fldenv
in
jmp
popa
and
adc
ficoms
pop
icebp
push
cmp
je
mov
cmp
or
push
pop
dec
and
xchg
enter
mov
xor
pop
js
cmp
cmp
lds
outsl
int3
cwtl
pop
xor
xchg
or
adc
pop
mov
loop
sub
jne
ja
push
sub
ds
pop
push
aas
ror
xor
push
jbe
add
jno
pop
pop
inc
or
hlt
xchg
adc
jns
xor
xor
xor
dec
icebp
cmpl
mov
shll
aad
fsts
cmp
movsl
lret
lods
fidivl
mov
push
stc
scas
ds
adc
call
ficompl
mov
popa
pop
mov
in
add
xor
inc
rcl
mov
imul
lret
popa
loopne
cmp
pushf
sub
push
cmp
dec
cmp
leave
jns
cltd
sbbl
dec
mov
xor
xchg
rolb
pop
ds
or
push
xchg
mov
inc
nop
xor
cmp
pop
out
cmpsl
xor
push
jmp
clc
repz
pop
cmp
das
pop
cmp
les
inc
cmp
shll
push
cmp
mov
test
call
sti
jb
xor
pushf
and
jge
mov
pop
dec
cmp
je
add
and
xor
inc
jg
and
pop
sbb
insb
int3
jns
jle
sbbl
dec
lea
pusha
pop
pushf
pop
mov
mov
rcrb
lret
pop
aam
fimull
out
mov
cmp
add
pop
aas
push
dec
adc
adc
sub
fisubl
add
cli
dec
pop
push
es
pop
fwait
push
sub
inc
fimull
cmpl
or
cmp
dec
cmp
adc
push
dec
xor
jns
xor
ss
in
or
inc
xor
pusha
dec
les
fsubrs
mov
int3
call
cmc
test
cmp
call
adc
pop
fwait
and
and
cs
xor
ds
call
push
mov
addr16
insl
jo
and
jge
lea
icebp
jne
mov
bound
mov
sarb
mov
sti
pop
add
push
cmp
lret
jecxz
ficompl
inc
and
sub
inc
add
in
inc
lods
dec
insl
push
sub
shrb
jp
xchg
mov
pop
int3
lahf
mov
mov
mov
int3
je
je
je
mov
clc
pop
std
or
adc
and
and
lea
xor
or
cli
dec
enter
movsb
dec
dec
pop
sbb
push
outsl
push
subl
push
movsb
cmp
jno
std
mov
mov
cmp
in
dec
dec
frstor
mov
add
add
pop
push
movsl
ret
pop
adc
sbb
sub
fcompl
add
wrmsr
add
roll
sub
xor
cmp
icebp
cli
sbb
je
mov
add
xchg
mov
cmp
cmp
cmp
cmp
or
cmp
shll
repnz
sbb
dec
mov
cmp
sbb
inc
dec
dec
imul
add
cmp
lea
es
ds
jmp
push
xchg
cld
or
pop
inc
inc
daa
dec
aam
je
push
cltd
lret
in
jmp
orb
sbb
fxch
push
mov
mov
fistpl
mov
in
jmp
stos
cltd
rcrb
cmc
loop
sub
cmp
ds
loope
and
pop
scas
aas
mov
orb
mov
cmp
js
xor
dec
pop
bound
and
mov
pop
cmp
stc
push
cmp
jne
out
mov
mov
pop
les
adcl
icebp
add
push
outsb
sahf
je
jp
pop
orb
ss
inc
sub
dec
dec
push
push
dec
pop
xchg
adc
gs
imul
jne
jns
jge
orl
mov
mov
mov
mov
pop
imul
int
shl
mov
in
adc
stc
int3
pop
xor
loop
ljmp
cmp
ss
sbb
fcmovne
push
pop
cmp
inc
cmp
push
xchg
mov
fwait
inc
out
gs
inc
mov
test
pop
outsb
mov
sbb
aaa
pop
lahf
push
jmp
jp
pop
sahf
lcall
pop
sub
sbb
and
jle
test
mov
cmp
sub
push
cmp
lret
cmp
jae
mov
pop
xchg
push
push
and
jbe
and
adc
fidivl
dec
xor
lcall
or
sub
inc
test
shlb
push
ljmp
fisubrs
push
orb
cmp
inc
and
xchg
pusha
cmp
mov
stos
dec
imul
pop
jmp
cmp
inc
xchg
dec
ljmp
push
roll
xor
push
ret
daa
cmp
cmp
mov
stc
mov
push
xchg
pop
and
jb
cwtl
pop
in
jmp
ss
shll
xor
dec
cmp
push
test
xchg
cmp
popf
inc
jae
jns
adc
cmp
dec
imul
ds
aas
icebp
cmp
arpl
stc
sahf
jmp
adc
sti
push
xor
cmp
dec
int3
js
sub
in
push
and
sub
or
nop
xchg
ret
inc
fsub
adc
dec
jecxz
fstl
push
fstpl
pop
frstor
gs
imul
cli
jns
jge
ret
jp
jb
push
bound
bound
cmp
shll
les
clc
mov
adc
pop
adc
xor
addr16
xchg
inc
imul
cmp
mov
cmp
sub
ds
or
aas
addr16
fistpl
mov
adc
pop
sbb
in
jg
cltd
popf
pop
xor
jmp
sbb
xor
pop
cmp
xchg
pusha
incl
cltd
sub
xchg
mov
das
cmp
push
in
xor
jecxz
and
aam
push
icebp
aas
test
into
xchg
mov
push
jno
dec
adc
jmp
fwait
xor
jnp
dec
sub
cmp
or
fiadds
xor
into
dec
sbb
mov
inc
or
dec
push
in
roll
pop
nop
fdecstp
clc
insl
int
mov
pop
lcall
xor
jge
insb
ds
dec
xchg
stos
mov
xchg
push
mov
popa
push
or
insl
adc
mov
fdivl
push
enter
cmp
mov
dec
and
xor
movsb
dec
xor
test
or
mov
sub
dec
sub
or
lea
cmp
aas
cmpb
daa
xchg
fs
mov
pop
jmp
rclb
popa
inc
flds
aam
xor
xor
pop
jnp
pop
add
xor
ja
in
dec
arpl
jl
cmp
dec
xchg
les
cmp
pop
push
and
inc
sahf
test
mov
xchg
xchg
or
rorb
inc
pop
mov
jecxz
pop
fwait
xor
xor
ss
push
jp
xchg
pop
sahf
repnz
cmp
es
mov
adc
cli
cmp
or
pop
aas
nop
and
add
xor
fidivrl
js
jecxz
rorb
cmpsl
cmp
in
cmp
dec
sti
sbb
es
pop
and
inc
xor
out
push
fisttpll
ffreep
dec
aas
stc
xchg
adc
pop
inc
xlat
mov
pop
and
roll
aaa
xor
in
hlt
pop
or
scas
cmp
sub
and
sbb
xor
imul
repnz
xor
pop
aam
mov
sub
lcall
mov
loope
add
mov
push
imul
xchg
call
int
in
clc
pop
lds
mov
mov
mov
cmp
jge
inc
and
pop
push
icebp
pop
cmc
insb
lahf
inc
cmp
mov
or
dec
scas
xor
pop
ljmp
cli
mov
pop
sub
or
inc
cmp
flds
mov
cltd
ds
sub
pop
mov
ret
push
icebp
cmp
dec
loope
mov
cltd
in
popf
pop
incl
pop
and
mov
dec
inc
in
xor
mov
xor
xor
pop
int3
cmp
sub
cmc
sahf
mov
popf
mov
pop
and
ret
jns
pop
dec
lds
mov
pop
daa
adc
insl
pop
add
mov
xor
stos
xor
cltd
stc
pop
jne
push
icebp
lea
into
jg
fdivrs
movsl
mov
xor
call
sbb
std
shll
fst
loope
cli
mov
push
push
push
sahf
or
sbb
jmp
cmp
pop
fwait
dec
adc
or
xchg
cmp
loope
push
icebp
sbb
pop
push
mov
and
mov
bound
repnz
sti
pop
push
add
xchg
int
mov
cli
xchg
test
mov
xor
sbb
jne
push
xor
sbb
jb
mov
cmp
push
xor
popf
cwtl
pop
ds
inc
sub
inc
pop
icebp
test
jmp
pop
bound
andl
shl
les
jne
ja
jns
or
or
dec
in
mov
pop
mov
adc
dec
xor
or
xchg
cmp
xchg
adc
xor
pop
sahf
test
rcrb
push
inc
push
movsb
xchg
mov
pop
sub
mov
test
xor
jne
jns
les
adc
ret
pop
adc
jmp
inc
pop
aaa
xorl
pop
sbb
jne
ja
pop
dec
adc
addl
les
leave
adc
int
pop
dec
aad
sub
xchg
pop
sahf
xchg
pop
cltd
lahf
popf
sbb
sbb
movsl
and
ss
pop
xchg
xor
sbbl
js
sbb
cmp
arpl
das
or
and
leave
add
movsl
pop
pop
xor
or
jne
pop
cli
cmp
lods
cmp
mov
pop
lds
xlat
mov
xchg
pop
pop
push
dec
jecxz
adcl
xor
nop
inc
xchg
mov
jge
loop
adc
jno
ret
pop
add
adc
xor
jl
sbbb
ljmp
aaa
loope
frstor
inc
cmp
pop
cmp
push
je
jns
jnp
adc
lret
test
xchg
loop
aas
hlt
int3
cmc
sbb
pop
push
loopne
jecxz
je
pop
pop
xor
repnz
xchg
pop
lret
cmp
aas
outsb
push
or
bound
fwait
lret
hlt
jae
pop
in
icebp
add
mov
addps
xor
dec
push
xchg
ret
popf
inc
push
mov
pop
hlt
push
or
sbb
scas
adcl
cmp
and
aas
xor
out
sbb
or
adc
cmp
sub
mov
insl
jae
mov
xchg
inc
jae
fisttps
and
pop
sahf
dec
fisubl
popa
cmp
sub
sub
dec
sub
push
sbbl
push
das
xor
pop
dec
jae
cmp
mov
fidivs
fnstenv
mov
push
test
mov
sub
xor
push
or
sbb
push
mov
xchg
filds
push
or
ja
movsb
out
clc
mov
pop
xor
aaa
fidivrl
cmp
cmp
dec
jbe
sbbl
inc
inc
mov
xchg
push
dec
fucomp
pop
fiaddl
aaa
cmp
dec
push
sbb
aam
stc
sbb
std
clc
add
fistpl
sbb
sub
cmp
test
mov
pop
jmp
adc
xor
pop
push
ss
aaa
stos
cmp
cmp
mov
aas
xrelease
cmp
pop
and
inc
sbb
inc
rclb
fidivrl
sahf
lcall
aad
aaa
xor
mov
pop
pop
movl
pop
or
xchg
and
cmp
inc
pop
jmp
mov
aam
pop
cmp
call
cld
loope
aas
jae
shll
mov
cmp
rcr
sbb
inc
cs
dec
pop
jge
adc
or
xor
outsl
dec
or
and
test
xor
mov
cmpsl
fwait
mov
pusha
decb
inc
pop
ds
pusha
scas
add
cmp
mov
icebp
add
or
or
adc
nop
lcall
pop
call
and
cmp
sbb
repz
pop
cmp
cmp
inc
mov
or
pop
mov
sbb
push
fldcw
xor
cmp
in
loop
cwtl
icebp
lret
pop
pop
jno
add
pop
fs
movsb
bound
in
dec
fldcw
cwtl
fldt
ljmp
pop
loope
push
cmp
pop
mov
dec
sbb
dec
add
mov
cmp
mov
or
out
or
nop
pop
jno
movsb
add
cmp
pop
imul
rorb
push
hlt
jmp
push
add
maxps
mov
push
xchg
inc
mov
ja
and
subl
jmp
cmp
imul
lock
mov
dec
push
jae
mov
mov
dec
loop
xchg
icebp
xchg
add
sbbl
stc
xchg
jne
mov
aas
and
xor
cmp
sub
mov
xor
add
ret
mov
je
adc
dec
in
adc
jae
pop
cs
xor
test
pop
mov
mov
inc
sub
imul
xchg
cwtl
cmpsl
xchg
or
inc
adc
lret
dec
data16
cltd
push
xchg
cmp
mov
lahf
loopne
negb
inc
xor
xchg
xchg
shlb
les
repz
xchg
add
dec
dec
daa
ret
es
push
dec
scas
subb
or
dec
mov
add
cmpsb
pop
mov
cmp
pop
sbb
popa
ds
inc
pop
dec
das
push
mov
call
in
xchg
lahf
inc
cmp
popf
sahf
pop
pop
adc
sbbl
jne
inc
pop
jns
push
fidivrl
lock
sub
adc
and
pop
test
adc
sbb
cmp
lahf
pop
mov
cmp
les
out
or
rolb
cmp
popf
jno
xchg
push
js
ret
jmp
outsb
xor
movsb
mov
jge
pop
push
add
sbb
lret
or
lahf
xchg
cmp
adc
and
lcall
gs
cwtl
ret
pop
jmp
stc
jne
jge
jns
rcrb
jg
dec
mov
lret
in
aaa
enter
sbb
loop
sbb
pop
push
stos
sbbl
pop
iret
loopne
test
push
in
pop
cmp
inc
pop
mov
mov
movsl
pop
xor
les
xchg
mov
xor
in
ljmp
shrl
ror
dec
jno
rcrl
daa
pop
push
adc
out
mov
rcrb
loopne
push
gs
les
bnd
mov
or
dec
cs
fnsave
push
and
mov
mov
pop
lods
int
or
call
repnz
cmp
cwtl
jo
pop
push
push
sbb
daa
sub
mov
ja
ss
inc
sub
pop
dec
lret
mov
gs
in
sub
xlat
push
or
sbbb
adc
pop
or
and
inc
jmp
test
outsb
es
pop
cmc
xor
cmp
xchg
popf
jge
dec
jno
aas
xor
jb
in
pop
pop
cmp
das
xchg
popl
imul
fnstenv
mov
sbb
loopne,pt
dec
mov
xchg
pop
ss
xchg
pop
movsb
jbe
cmpsb
pop
jge
adc
mov
mov
add
in
push
inc
cmp
fadd
orl
mov
int
mov
outsb
cs
pop
std
fcompl
mov
test
cli
icebp
jbe
xchg
jmp
adc
leave
stos
pop
je
add
cmp
pop
pop
jne
pop
mov
sahf
loop
pop
cli
arpl
adc
add
fwait
icebp
adc
sbb
popa
pop
shll
jns
cltd
xchg
pop
jae
dec
sub
cmp
or
xor
das
movsl
cmp
addr16
sar
out
les
xchg
fidivrl
fcomps
stos
ds
mov
mov
pop
rcll
fbstp
sub
cmp
in
cmp
mov
dec
jnp
or
cmp
cmp
std
push
mov
dec
cwtl
mov
imul
leave
push
subl
or
das
pop
cmp
cmp
es
mov
ds
test
sbb
leave
pop
pop
and
mov
sbb
xchg
test
jp,pt
ret
mov
dec
jmp
cmp
mov
sbb
test
daa
mov
pop
out
adc
stos
cmp
push
jb
dec
cmp
insb
xchg
and
mov
fiaddl
xchg
dec
mov
and
inc
push
push
pop
in
xor
mov
roll
cmp
arpl
push
stc
pop
jmp
inc
dec
push
pop
push
into
enter
jmp
pop
aas
cmp
push
mov
and
movsl
mov
into
pop
xchg
ja
pop
mov
add
daa
sub
test
jno
pop
gs
mov
sahf
dec
clc
mov
popf
push
dec
insb
jl
in
sbb
jmp
icebp
add
fnstcw
sub
stos
test
xchg
ss
out
cmp
in
ljmp
or
jae
jne
pop
xchg
pop
push
lods
test
cld
mov
fptan
test
jbe
push
inc
sbb
rol
jle
imul
stos
dec
mov
inc
stc
cmp
mov
dec
in
mov
js
jno
imul
andl
dec
rorb
pop
add
int3
mov
push
inc
gs
xor
dec
lahf
cwtl
cmpsb
cmp
scas
inc
shrl
stos
mov
test
hlt
cmp
repnz
test
pop
dec
adc
lret
mov
pop
movsl
sbb
adc
pop
cwtl
movsb
loopne
or
push
ds
shrl
dec
cmp
or
sbb
or
fildl
and
inc
dec
add
mov
mov
in
loop
ret
or
je
icebp
sbb
xor
rcrb
add
inc
imul
dec
push
cmp
cmp
cmp
and
rcrb
imul
and
das
xor
mov
inc
ss
xor
stc
insl
inc
jmp
and
pop
loope
rorb
or
pop
sub
push
dec
imul
dec
fistl
xchg
mov
pushf
and
movsb
mov
leave
jecxz
pop
repz
and
pop
fnstcw
pushf
stc
mov
and
push
leave
xchg
addl
pop
fwait
push
cmpsb
test
repz
es
lahf
or
push
mov
adc
pop
xchg
std
loope
leave
inc
addr16
idivl
push
cmpl
test
or
inc
push
lret
sub
icebp
imul
cmp
or
xor
iret
popf
fisubrl
push
repnz
mov
pop
pop
or
xor
pop
fwait
sahf
xchg
mov
hlt
cld
icebp
pop
adc
cs
loop
cltd
jns
cli
mov
out
aad
les
js
pop
aaa
dec
in
jmp
imul
cmp
cmp
aad
push
repnz
mov
xor
sarl
sbb
pop
fwait
repz
pop
ds
pop
fists
push
roll
popf
pop
sub
mov
imul
ret
sbb
das
outsb
int3
xchg
dec
fldt
in
jmp
sub
stos
sti
sub
push
xchg
dec
push
and
fdivr
in
pop
lahf
cmp
inc
xchg
or
mov
daa
xchg
pop
and
adc
sbb
push
in
pop
pusha
stos
mov
sub
dec
jne
dec
add
icebp
pop
jge
jmp
inc
dec
pop
or
jne
shl
cmp
cmp
push
loop
ljmp
daa
pop
out
in
pop
adc
aas
inc
ds
lods
sbb
in
stos
movl
std
or
aas
mov
xchg
cld
xor
pop
sub
lret
insl
pop
dec
cmp
sub
nop
cs
xchg
mov
iret
pop
lahf
in
jmp
xor
cmp
pop
fnstcw
mov
sub
in
stc
dec
ss
fistpl
mov
jae
pop
test
add
cltd
xor
hlt
int3
icebp
inc
aaa
inc
mov
stc
fistpll
sahf
cmp
mov
and
std
popf
adc
mov
fbstp
jae
icebp
pop
mov
leave
jae
outsl
in
pop
adc
fisttpll
cmp
cmp
cmp
loop
sar
xchg
into
mov
inc
push
push
cmp
and
xchg
xchg
mov
pop
sarl
mov
pop
xchg
mov
cmp
push
inc
ds
shrb
stc
pop
xchg
repnz
add
and
jle
addr16
pop
imul
imul
push
rdpmc
je
call
movsb
push
push
nop
loop
pop
pop
or
xchg
pusha
adc
mov
loop
and
pop
rcrl
cmp
pop
cmp
daa
pop
pop
jecxz
inc
test
sbb
leave
push
out
loop
pop
jle
xchg
adc
out
push
call
sbb
dec
dec
mov
push
mov
lods
or
xor
pop
sti
adc
sub
lock
pop
loope
pop
xorl
jmp
insb
mov
adc
idivl
mov
cltd
mov
xor
dec
ret
jns
inc
std
add
sarb
adc
inc
mov
iret
dec
cmc
out
es
xchg
dec
push
icebp
sbb
push
add
xor
xchg
aaa
xor
jmp
dec
adc
jns
dec
mov
mov
pop
jmp
icebp
cmp
cmpsb
dec
stc
pusha
int3
push
js
arpl
pop
iret
pop
leave
into
dec
fcmovu
imul
pop
dec
lahf
aam
das
cmp
mov
pop
sub
jp
sub
jo
mov
and
and
push
daa
ss
inc
mov
fcmovu
pop
popa
pop
aaa
jae
pop
mov
ljmp
adc
inc
inc
mov
jne
sbb
adc
pop
dec
nop
in
cwtl
xchg
lds
ja
scas
pop
mov
add
mov
push
jl
cltd
lcall
in
lods
es
stc
mov
bound
fisttpl
cmp
or
push
bnd
xchg
test
jno
pop
out
loope
ret
dec
adcb
sbb
fadds
and
out
mov
in
or
jne
xor
cmp
or
fiaddl
cmp
jmp
adc
lret
ljmp
or
cmp
jns
jo
mov
loope
pop
aas
pop
sarb
cs
andb
inc
pop
and
test
pop
xchg
mov
or
ss
sub
push
in
pop
pop
or
adc
lds
xor
xchg
rcll
cs
pop
and
mov
ret
sbbl
or
pop
and
xchg
or
ret
fidivrl
dec
insl
lods
pop
pop
std
dec
mov
aas
fsubl
push
jns
cmp
stos
daa
dec
scas
pop
icebp
jmp
outsl
xor
pop
adc
sub
sti
or
pop
scas
inc
jp
xchg
push
fstpl
loop
mov
imul
ljmp
sbb
pop
sbbb
loop
shl
cmp
fcmove
xchg
adc
jle
jle
pop
xchg
lret
jns
push
and
dec
pop
subl
jnp
pusha
xchg
pop
test
mov
pop
ds
push
gs
jmp
sub
inc
and
pusha
inc
and
dec
cli
push
pop
fs
or
adc
test
hlt
jnp
repz
ja
adc
pop
stos
fstpl
sahf
or
ret
ret
xorb
and
push
test
test
pop
insb
jge
sub
inc
xchg
pop
mov
pop
cli
iret
sub
imul
test
sbb
pop
push
shlb
clc
pop
loop
inc
push
lret
ja
fimull
lds
stc
popf
dec
hlt
subl
pop
cmp
and
push
push
xor
icebp
shrl
in
xor
aas
cmc
pop
inc
stc
dec
std
push
rorb
test
pop
es
fwait
ja
dec
mov
push
add
scas
pop
cli
cmp
pop
mov
int3
fwait
mov
mov
push
xchg
setnp
pop
jns
rolb
pop
pop
movsb
lahf
mov
rorl
out
mov
pop
sub
push
aaa
stos
or
aas
pop
lock
sub
inc
dec
jmp
pop
mov
jg
jae
cmpsl
out
loop
test
loope
fs
pop
push
aaa
addr16
dec
out
pop
lea
cmp
in
mov
popf
push
inc
loope
ret
test
push
jl
pop
mov
popf
sub
pop
add
rcrl
mov
js
pop
add
cmp
movsl
test
pop
lret
push
xchg
in
jmp
mov
xor
insl
jp
pop
test
mov
incw
fdivl
sbb
loope
xchg
arpl
jl
pop
dec
push
cmp
cwtl
mov
addr16
pop
repnz
cli
inc
out
and
cmp
icebp
jge
xchg
sbb
sbb
pop
cmpsb
jmp
clc
sub
inc
xor
leave
cltd
pop
or
das
nop
or
test
dec
xlat
adc
sub
lahf
icebp
fcompl
stc
call
push
int
lods
and
sbb
sbb
fidivrl
movsl
outsl
in
xlat
pop
xor
add
int
sbb
inc
jp
in
es
and
cmp
ja
xchg
pop
arpl
and
or
shlb
rorl
pop
xchg
push
bound
jnp
mov
adc
pop
adc
aas
loop
pop
cmp
inc
sbb
push
lods
jns
dec
and
pop
fwait
adc
std
js
inc
cld
mov
jp
push
jp
pop
mov
dec
sahf
std
jno
inc
jae
dec
sub
outsl
inc
dec
or
cmpl
mov
cmp
inc
daa
xlat
loop
jae
pop
sub
sbb
push
aas
je
andl
in
pop
push
int3
enter
sbb
dec
sbb
push
mov
pop
shlb
fiadds
mov
sbb
inc
lret
test
ja
xor
cmp
lahf
push
inc
lds
pop
pop
shrl
in
pop
cmp
mov
mov
popf
mov
xchg
add
jl
cmp
test
pop
pop
mov
jmp
xor
arpl
jmp
fisubl
decl
pop
inc
dec
and
das
lods
or
cmp
push
and
jg
dec
jnp
push
popf
pop
std
stos
xchg
bound
cli
aad
add
in
mov
adc
icebp
orl
std
pop
cmp
pop
and
adc
cmc
pushf
pop
flds
ss
in
pop
mov
inc
sahf
test
xchg
pop
sarb
mov
mov
dec
bound
jle
sub
jecxz
inc
or
or
dec
jge
imul
fstps
sub
ja
dec
loope
mov
xor
icebp
sbb
gs
pop
repnz
mov
loope
xchg
imul
xchg
popf
pop
adc
insl
push
or
cmp
mov
jg
sbb
cli
outsb
dec
jge
inc
jbe
jp
std
subb
mov
imul
xchg
cmpsb
hlt
stos
fsubrs
mov
int
cltd
lret
mov
ficoms
dec
adc
mov
imulb
adc
jecxz
mov
pop
push
mov
ret
pop
cmp
lods
in
mov
fs
add
cwtl
xchg
adc
xchg
lods
inc
xchg
pop
repnz
mov
loope
jl
push
popa
xchg
xor
fidivrl
and
sub
test
leave
mov
popf
push
jno
lea
test
es
xor
mov
dec
pop
movsl
xchg
or
inc
sub
mov
jae
push
xchg
mov
dec
sub
inc
inc
std
outsl
mov
loop
jns
or
bound
xchg
add
cltd
mov
sub
push
pop
daa
pop
mov
push
or
pop
pop
int3
fwait
mov
push
cmp
mov
mov
imul
ktestb
pop
xor
sarb
or
pop
mov
jmp
in
in
fimull
ret
loope
xor
jmp
or
sbb
sbbl
push
mov
sub
mov
fsubrs
or
in
les
inc
std
cmp
lea
test
outsl
into
push
pop
iret
mov
jmp
and
arpl
shlb
inc
dec
jne
pop
stc
push
mov
jge
das
into
mov
push
icebp
cltd
inc
jmp
aaa
pop
pop
add
fwait
test
xchg
out
mov
jmp
cmp
test
mov
cmp
leave
fidivrl
pop
push
stos
aas
int
dec
cmp
cmp
xchg
inc
sarl
daa
pop
mov
add
inc
and
xor
ss
out
mov
sub
inc
das
test
pop
push
lods
popa
cmp
arpl
pop
pop
push
mov
pop
jmp
test
mov
adc
adc
icebp
test
sub
das
sarl
std
jb
pop
lcall
out
and
incl
pop
movsb
xor
pusha
xor
jae
jne
pop
or
mov
ret
pop
pop
push
loope
out
dec
jns
pop
jo
outsl
fiaddl
pop
xchg
fisttpll
hlt
leave
xchg
push
adc
sub
or
sub
jg
mov
lret
ds
mov
test
cwtl
hlt
pop
pop
cli
adc
loop
cmpsl
pop
fsubs
stc
push
jae
dec
dec
adc
fidivrl
push
cmp
dec
push
xor
lds
insl
mov
ds
add
cmp
filds
sub
cmp
dec
mov
sbb
dec
pop
icebp
stc
mov
pop
aad
push
cmp
sahf
dec
mov
test
int
js
pop
jge
dec
leave
daa
test
clc
and
inc
cmp
sbb
pop
adc
sub
mov
fwait
imul
popa
mov
lahf
add
push
lcall
cmc
int3
stc
fldt
xchg
pop
jmp
and
popf
adc
lcall
ret
pop
push
dec
in
pop
icebp
cmp
mov
stos
cmp
lahf
sub
movsl
in
mov
or
rcrl
fimull
cmp
or
test
movsb
lods
call
or
decb
inc
xor
mov
orl
movsb
pop
sub
or
sbb
dec
les
cli
testb
adc
subb
mov
dec
ss
dec
pop
cmp
addr16
jbe
cmpl
mov
fcomp
out
mov
xor
cmp
lods
gs
test
mov
loopne
negb
lcall
adc
sub
xchg
adc
sbb
nop
scas
test
pop
ss
mov
push
fstl
pop
lods
mov
iret
cmp
orl
ret
ljmp
pop
sub
dec
sub
pop
lahf
cmc
pop
test
pop
mov
stos
in
jnp
cmp
cmp
bnd
ljmp
sbb
loop
pop
add
pop
stc
fwait
dec
add
cmp
sbb
pop
jg
in
enter
inc
and
pop
inc
jp
jecxz
dec
cmc
daa
sti
movsl
inc
mov
mov
sbb
inc
out
pop
add
enter
std
cmovl
gs
rcr
push
push
sub
sub
pop
push
mov
sahf
jns
dec
lahf
push
adc
rcrl
arpl
test
nop
sub
push
or
cmp
cld
mov
lret
fsubs
in
push
daa
out
fsts
pop
orb
xchg
dec
jnp
ret
std
push
lea
pusha
mov
sbbl
inc
jnp
repnz
jne
pop
jp
pop
mov
and
xor
adc
fists
dec
loope
test
pop
mov
add
aaa
cmp
gs
lcall
and
jg
adc
jnp
bound
and
inc
fwait
cld
ret
xor
sar
cli
pop
add
int
jmp
cmp
jo
mov
dec
dec
cmp
sbb
stos
or
lret
ljmp
xlat
pop
and
xor
and
sbb
mov
stos
push
mov
data16
cmp
movsl
hlt
mov
popa
fdiv
mov
jae
pop
mov
ja
jne
dec
jp
lcall
xchg
push
lahf
test
test
mov
pop
movsl
mov
sub
iret
pop
xor
mov
xchg
gs
stos
test
cmp
and
mov
iret
jle
rcll
aad
divb
shr
inc
call
pop
icebp
repz
jns
mov
pop
in
lret
test
adc
dec
fwait
adc
xchg
ljmp
jg
sbb
sbb
aas
pop
push
cmp
mov
mov
mov
pop
and
pop
movsl
xchg
aad
fstps
repz
push
lcall
ja
sbb
mov
xchg
mov
test
addps
fs
nop
jne
cmpsb
xchg
mull
into
pop
mov
jno
cmc
pop
adcl
xchg
sbb
ret
dec
fyl2xp1
ja
push
pop
jae
int3
sarl
push
pop
pop
mov
shll
jmp
or
pop
out
icebp
adc
mov
push
add
mov
inc
mov
in
jg
pop
pop
cmc
lahf
stos
push
fwait
std
cmp
or
loope
mov
fbstp
addl
or
cmp
dec
fnstenv
pop
in
and
push
mov
pop
test
inc
dec
cltd
xor
leave
pop
int
xor
and
sbb
cli
stc
push
sub
dec
mov
or
mov
xor
mov
popa
pop
mov
mov
dec
push
mov
push
mov
jne
in
int
nop
or
sahf
lds
gs
call
mov
stc
das
rorb
sub
nop
pop
ficompl
popf
mov
and
xchg
inc
pop
mov
xchg
test
cmp
sahf
jecxz
movsl
or
dec
dec
lds
xor
adc
jmp
insl
ljmp
push
xor
xchg
or
dec
imul
pop
mov
dec
cmp
cmp
insl
inc
mov
sahf
stos
test
push
rcrl
out
mov
stc
movsl
mov
push
and
xchg
fnsave
xchg
icebp
cmp
lods
aad
dec
cmc
ret
push
aaa
es
push
xor
pusha
lea
mov
mov
push
or
xor
jne
and
lods
push
add
and
push
out
cmp
xchg
daa
lods
inc
pop
stc
push
or
pop
or
ja
xchg
pop
lods
xchg
lds
jno
pop
or
test
xchg
push
push
dec
sbbl
rcr
mov
jns
shrl
push
lods
dec
ffree
test
dec
push
movsl
xchg
mov
mov
push
mov
pop
sahf
xchg
test
lahf
cmc
jb
out
int
pop
cltd
rorl
and
in
dec
cwtl
lds
jg
dec
imul
push
inc
lcall
push
lea
pop
loopne
cmc
mov
js
out
add
push
jl
sbb
xchg
leave
mov
in
pop
xchg
daa
xor
ret
sub
aas
jge
es
jp
imul
jg
int3
ss
ds
adc
dec
push
shll
ret
pop
sti
loop
popa
jne
push
imul
lea
das
cs
mov
std
jecxz
test
repz
mov
pushf
mov
es
js
pop
cwtl
scas
jne
jno
mov
xchg
repz
test
push
xchg
ret
push
cltd
jbe
xor
mov
sbb
mov
leave
test
in
mov
jnp
lahf
jmp
imul
stc
xor
loope
jae
cmp
xor
push
cmc
sbb
std
and
cmp
xor
add
cmp
mov
aam
mov
ja
pop
jno
lahf
jns
jge
sbbl
fstl
les
aam
in
repz
out
cli
cs
xor
cmc
out
sbbl
lret
jbe
sbb
int
xor
test
insl
movsl
mov
cmp
sub
sbb
mov
mov
cmpsb
pop
jecxz
xor
xor
inc
push
pop
dec
cli
dec
sub
inc
pop
push
lods
pop
inc
xchg
popa
ret
or
ljmp
and
jne
push
sbbl
add
stos
or
mov
gs
mov
sahf
mov
pop
cwtl
push
mov
pop
xchg
lcall
dec
lods
or
fstpl
push
adc
cmp
jns,pn
cltd
mov
out
or
das
push
bound
test
imul
lret
push
nop
std
push
fisttpll
cmc
mov
xor
out
std
pop
movsl
fdivrs
mov
pop
jg
pop
inc
lret
xor
mov
mov
cmp
adc
mov
stc
sub
dec
aas
jecxz
lret
sub
cli
xor
cmpsl
and
pop
stc
push
outsl
adc
xor
or
lds
mov
pop
push
imul
pop
add
ret
push
leave
out
inc
ljmp
jns
pop
jmp
sub
cmpsl
fstl
sbb
push
xor
inc
lret
adc
pop
dec
ds
mov
cmc
dec
dec
addb
sub
pop
popa
in
mov
imul
andl
rcrb
sub
fistl
mov
rolb
mov
dec
fwait
push
movsb
pop
adc
aad
mov
cmp
gs
pop
jg
push
push
or
cwtl
shr
pop
jns
pop
jne
or
int3
pop
mov
xor
ds
lret
add
pop
push
jmp
icebp
mov
imul
jns
push
scas
dec
adcl
cwtl
and
xor
scas
cmp
fidivrl
mov
pop
repz
popf
pop
jns
push
sub
push
or
cmc
mov
pop
push
es
mov
dec
mov
sub
push
xchg
sub
fsts
int3
lods
jns
cmpsl
mov
ss
jae
ds
aam
mov
insl
inc
jge
fisttps
pop
lret
ds
and
scas
xlat
dec
xor
adc
pop
cmpsl
aad
mov
or
sub
jno
pop
mov
popa
jno
bound
cmpsl
pop
adc
inc
shl
imul
mov
in
dec
push
sub
adc
fstpl
mov
les
inc
mul
addr16
test
js
dec
push
or
shrb
inc
inc
pop
or
daa
dec
pop
pop
shll
jg
sbb
insl
fs
pop
jns
mov
mov
mov
test
pop
and
subl
jne
mov
test
push
jg
fld
mov
ja
adc
push
push
mov
int3
cmc
inc
in
cmp
sahf
cmp
add
cs
pop
xlat
in
push
int3
adc
pop
pop
inc
pop
icebp
into
pop
jnp
jecxz
pop
ss
lahf
gs
jge
xlat
or
cltd
sti
cs
xchg
mov
cmp
mov
sub
outsl
ret
xor
fsubl
dec
pop
mov
mov
push
scas
ret
pop
mov
or
sub
push
shlb
mov
sub
bound
sub
pop
xor
movsl
cmp
jge
jno
adc
in
pop
lods
popa
js
insl
mov
pop
dec
jns
jnp
pop
loope
xchg
mov
dec
xchg
les
aaa
or
popa
sbb
cs
pop
fidivrl
xor
pop
dec
push
aad
loop
and
es
pop
fildl
hlt
pop
mov
inc
mov
jmp
push
push
mov
fildl
cmc
pop
dec
imul
xor
in
loope
sbb
mov
xchg
inc
test
push
testb
rcll
outsl
and
jae
mov
sub
sub
dec
and
out
mov
mov
cs
pop
push
popf
pop
inc
pop
adc
in
mov
ja
ljmp
push
scas
jb
pop
inc
lret
ret
in
pop
mov
mov
cltd
inc
std
pop
pop
jne
mov
lcall
pop
mov
inc
daa
ja
fistpl
aad
test
push
cwtl
inc
mov
icebp
loop
iret
push
pop
pop
mov
popa
pop
mov
loop
pop
sub
cmp
jne
enter
pop
mov
xchg
lret
in
cmp
sub
push
pop
push
dec
pop
xchg
mov
adc
popa
rolb
sub
push
cmpsb
cld
cs
pop
mov
movsb
and
inc
mov
ja
push
pop
imul
fstps
pop
jp
jg
push
add
movsl
add
std
mov
push
pop
sub
out
xor
fyl2xp1
pop
push
jg
push
in
mov
push
adc
xor
xor
lods
sbb
cs
pop
cmp
jns
int
pop
fldenv
sub
sbb
sarl
and
cmp
or
or
and
lds
xchg
lods
imul
xor
push
subl
jns
sbb
lret
lret
pop
xor
aad
dec
sbb
dec
dec
mov
xchg
popf
lret
push
in
push
xor
jo
fcomps
popf
lds
push
jp
jle
jecxz
dec
jecxz
mov
jecxz
jmp
push
xchg
andl
test
xchg
js
repz
jb
sub
adc
xor
pop
cmp
dec
insl
pop
cmp
pop
mov
stc
movsb
shll
mov
daa
sub
mov
mov
insl
xchg
cmpsl
xchg
mov
mov
push
or
jne
sbbl
jg
dec
popa
mov
jecxz
xchg
mov
mov
gs
rorb
outsl
pop
stos
pop
adc
dec
dec
inc
shll
std
pop
cmpsb
movsl
and
mov
mov
gs
jno
ljmp
leave
mov
pop
push
cli
push
push
mov
lods
cltd
stos
pop
movsl
cwtl
xchg
ffreep
xor
cmc
pop
stos
xchg
adc
sub
add
insl
mov
push
pop
mov
fnstcw
adc
pop
test
mov
mov
sub
xchg
dec
leave
and
jnp
pop
mov
ljmp
popf
gs
jg
in
mov
filds
mov
dec
dec
sbbl
adc
cltd
fwait
fwait
jbe
sahf
push
rcrb
xchg
adc
sub
lods
mov
fucomp
cs
push
pop
push
push
push
adc
mov
gs
xchg
add
mov
insl
sar
xor
daa
and
fbstp
mov
cmc
shll
repz
xchg
push
sub
ja
mov
stos
dec
inc
test
cld
cmp
fwait
cmp
int3
xchg
sub
insl
stos
adcb
mov
mov
ljmp
mov
js
dec
orl
mov
adc
pop
and
enter
jno
pop
test
pop
in
adc
push
gs
ds
jmp
insl
push
jg
xchg
leave
popf
xchg
lods
sbbl
pop
rorl
in
and
push
push
push
or
push
sub
mov
aad
ds
test
mov
push
push
adc
mov
pop
fwait
jnp
insl
or
jge
ficoml
aaa
cmp
and
fwait
ljmp
jmp
pop
cmp
push
test
jns
stc
pop
daa
mov
sbb
xchg
push
sbb
sub
test
adc
fcompl
icebp
adc
dec
int3
push
in
jns
or
lret
popa
loop
outsl
pusha
pop
sub
ffree
jno
dec
sub
outsl
jns
pop
inc
popf
pop
and
push
cwtl
mov
push
fnstsw
lods
dec
icebp
push
cld
push
ffree
les
sarl
push
push
dec
cmp
loope
pop
lods
mov
and
out
xchg
push
push
ss
xchg
dec
dec
fwait
jle
pop
movsl
les
mov
lret
imul
pop
push
cmp
push
and
inc
fldcw
jno
dec
dec
or
mov
sub
jge
inc
sbb
ret
ss
mov
fisttps
inc
fstl
in
cli
cmc
ficoml
ds
pop
sub
xor
cmp
lods
clc
adc
cs
insb
imul
mov
pop
pop
xchg
push
loope
push
mov
int
add
arpl
jp
enter
jne
ds
lea
sbb
mov
js
pop
ror
popa
and
push
pop
dec
or
jge
pop
mov
pop
cltd
dec
mov
dec
pop
test
xor
ljmp
arpl
add
insb
aam
adc
dec
pop
or
imul
out
lcall
int3
mov
lcall
fldl
jecxz
in
addr16
add
mov
ret
mov
or
cltd
bound
in
xchg
pop
adc
aad
addr16
in
cmp
shll
adcl
test
insl
push
xchg
sbbl
aad
mov
int3
leave
cmp
inc
xor
jbe
pop
pop
inc
mov
fldenv
loope
std
fwait
nop
cmp
inc
sbb
dec
mov
cltd
outsb
test
bound
mov
and
fnstcw
imul
popa
sbb
jmp
gs
jne
test
dec
scas
push
jne
out
es
dec
icebp
pop
fistps
pop
out
jnp
out
sub
stc
mov
pop
ds
sti
mov
or
dec
xor
pop
pop
jne
jp
xor
frstor
xlat
dec
xor
pop
gs
xor
popf
fbld
mov
pop
jno
mov
dec
lds
push
roll
ret
inc
cltd
ljmp
or
jne
pop
pop
xchg
and
test
jae
lcall
out
mov
test
pop
xorw
lods
dec
mov
ja
icebp
mov
inc
xor
dec
imull
xor
push
pop
movsl
scas
das
int
in
call
out
sub
pop
mov
mov
jmp
sub
and
cmp
push
and
push
fistpl
cmp
or
sub
lcall
pop
icebp
pop
jp
fwait
jbe
jbe
push
pop
push
loope
inc
push
cs
ss
mov
jge
adc
lea
mov
repz
mov
pop
in
dec
jge
jne
leave
cmp
cwtl
rorl
push
mov
inc
dec
out
imul
inc
loope
pop
dec
test
dec
mov
push
subl
jno
pop
mov
sub
sbb
ds
pop
mov
enter
ja
inc
out
loopne
les
mov
outsl
jno
ss
outsl
inc
daa
sbb
add
or
popf
pop
and
and
pop
ja
shlb
adc
adc
test
push
push
cmc
jbe
fldl
push
mov
popf
cmp
sarl
dec
sbb
int
cmp
std
lea
orl
push
loope
adc
cmp
cwtl
popa
les
repz
sub
std
lret
pop
ds
inc
pop
jae
fwait
pop
cmp
popf
pop
shl
icebp
pop
imul
xor
shl
cmp
cwtl
subl
pop
sbb
in
mov
and
mov
lds
aad
xor
call
jecxz
cmp
rcr
pop
push
aad
stc
dec
icebp
dec
push
and
dec
fcmove
lret
lcall
dec
dec
sub
imul
pop
push
fwait
pop
push
dec
test
out
ja
stos
sub
stos
or
pop
mov
cmp
cmpsl
pop
dec
cmpsb
dec
int3
test
xchg
xor
rcrl
in
rcrl
mov
es
adc
gs
inc
movsl
jecxz
sub
mov
popf
cmc
std
int3
sbb
push
mov
pop
out
and
push
gs
ficomps
mov
imul
adc
xor
cltd
jmp
inc
mov
mov
js
es
cltd
dec
xchg
test
jne
enter
ficoml
cmp
jns
dec
popf
inc
gs
pop
mov
lods
enter
loope
push
xor
enter
mov
push
xor
xlat
lret
jecxz
pop
xor
das
pop
scas
xchg
ljmp
mov
ss
popa
and
je
sbb
cmp
inc
mov
or
daa
sbb
test
dec
cmp
lods
inc
sub
scas
adc
ss
xchg
pop
dec
mov
loope
lods
or
lds
dec
mov
sub
xchg
cmp
js
cmp
movsl
xchg
mov
pop
jmp
icebp
sbb
add
pop
mov
cmp
pop
mov
jmp
ljmp
leave
outsb
int
pop
mov
jno
mov
push
xchg
cmp
inc
jo
mov
dec
jno
pop
sub
push
xchg
rol
stc
pop
repnz
aaa
or
mov
jb
sub
adcb
xor
cld
and
xlat
sbbb
xor
cmp
pop
pop
repz
loope
jge
xchg
and
pop
lock
pop
adc
das
jno
and
jns
sub
xor
xchg
js
adc
cli
aad
and
movsb
fsubs
pop
or
fstps
pop
add
cmp
es
cmp
push
icebp
fistpl
jp
inc
imul
and
or
popf
add
jle
sbb
xor
jb
mov
sbb
lods
cmc
push
mov
jge
sub
cmp
dec
mov
dec
adc
mov
fwait
jle
pop
pop
aam
pop
dec
into
push
cmp
hlt
mov
cwtl
inc
push
mov
fidivrl
mov
inc
ja
jae
aaa
xor
jecxz,pn
mov
dec
daa
and
stos
arpl
push
push
or
or
or
adc
pop
mov
cmp
jne
inc
xlat
in
stc
ja
push
jae
insl
out
cli
popa
jmp
rolb
mov
repz
jp
pop
mov
pop
xchg
outsl
adc
lods
mov
insb
aaa
test
out
mov
push
fnstsw
dec
lahf
pop
testl
sti
es
lcall
repz
in
sub
pop
fimull
sub
jmp
int
cmp
xchg
je
sub
dec
sahf
mov
xchg
ja
int
push
sbb
or
or
add
std
dec
arpl
negl
adc
xlat
fldt
scas
cld
sbb
mov
popf
push
jecxz
jne
cmc
dec
push
push
mov
xchg
test
inc
push
fnsave
pop
mov
pop
or
sub
mov
sbb
push
cmc
decl
fimull
sti
push
cwtl
inc
pop
out
sahf
sbb
jne
ljmp
add
jg
xlat
adcl
or
inc
int
mov
pop
mov
lret
pop
out
sahf
sub
jbe
and
xchg
mov
inc
pop
push
jg
pop
mov
cmpsl
lds
fldcw
sti
xor
loope
jne
push
dec
test
aad
push
pop
lret
sub
jne
dec
mov
inc
leave
fnsave
sbb
dec
popf
and
mov
xchg
pushf
xchg
and
cmpsl
xor
ljmp
fcompl
sub
cltd
icebp
cmp
jmp
stc
jg
cmc
inc
pushf
or
xlat
ret
movsb
cmp
cmpsb
jecxz
dec
mov
pop
scas
scas
arpl
fbld
das
dec
lds
pop
xchg
lret
outsl
imul
insl
int3
in
imul
jecxz,pt
xchg
push
pop
dec
xor
pop
lea
cmp
mov
pop
imul
push
pop
es
adc
lods
or
push
imul
xchg
lret
jg
leave
mov
daa
pusha
cmc
push
stc
iret
mov
push
rcll
int
in
pop
notl
push
mov
inc
push
xchg
jmp
fisubrl
cwtl
inc
jp
cmpsb
fistpll
push
sub
sub
mov
out
aam
fcomps
sub
insb
inc
adc
push
mov
fmuls
jmp
in
loop
pop
sbb
mull
imul
mov
sbb
imul
lretw
imul
dec
jp
cli
and
int3
push
pop
gs
xor
jecxz
adc
pop
adc
jg
dec
push
fiaddl
leave
xchg
dec
stc
aad
cmc
ss
icebp
jg
jmp
pop
cwtl
mov
aad
insb
cmp
xlat
cmpsb
sbb
iret
das
dec
lret
sub
or
jp
lret
popa
cmpsl
mov
pop
and
lea
imul
mov
mov
dec
or
test
popf
push
sahf
xor
imul
cwtl
jle
inc
loope
lret
lret
jecxz
cwtl
fwait
pop
push
sbb
sub
xor
aam
scas
pop
xchg
int3
stos
dec
test
jge
mov
aam
dec
test
int
inc
dec
xchg
lock
pop
adc
jbe
cmp
in
repnz
les
aad
adc
test
mov
pop
cmpl
dec
jne
rcl
push
sub
jecxz
or
pop
add
push
dec
ss
jae
dec
pop
adc
inc
sub
pop
leave
xchg
pop
scas
inc
arpl
pop
inc
int
stc
jae
in
dec
daa
fwait
push
xor
and
mov
mov
jmp
pop
into
pop
xorl
xor
dec
out
imul
in
pop
fists
xor
pop
mov
cmp
jmp
mov
cmp
addl
xor
adc
or
push
pusha
stc
pop
mov
daa
movsl
jge
mov
pop
xchg
xlat
jae
rcrl
lret
das
jae
inc
gs
insl
aas
jno,pn
test
jmp
in
jmp
pop
sbb
push
xchg
repnz
sub
lcall
ja
es
adc
mov
push
cmp
xor
sub
xchg
cmp
jecxz
mov
xlat
mov
xor
cwtl
sbb
cmp
icebp
pop
sbb
ljmp
es
lods
adc
dec
lods
ja
inc
divl
xorb
mov
mov
push
dec
or
movsl
cwtl
sbbb
shrl
cltd
adc
pushf
adc
push
cmp
push
sub
dec
jmp
fwait
mov
mov
fistpll
ljmp
and
pop
cmc
imul
sbb
pop
jae
stc
ret
aam
add
xchg
mov
mov
jecxz
jp
das
dec
mov
rcrl
inc
mov
mov
sub
inc
push
cwtl
jecxz
dec
mov
cli
addr16
xor
jmp
ffree
xchg
xlat
dec
shll
imul
mul
mov
pop
jae
jmp
jp
sub
jg
jae
cs
xor
ljmp
cli
imul
in
cld
pop
scas
outsl
jns
add
inc
sti
lahf
stc
mov
xchg
jg
jge
sti
jnp
mov
mov
pop
call
data16
dec
inc
pop
pop
dec
cli
dec
test
test
sti
lods
cmpsl
ss
jmp
loope
es
pop
mov
mov
sub
and
ljmp
xor
push
sub
lcall
popa
out
push
sbb
sahf
stc
ds
cltd
div
dec
dec
or
inc
dec
cmp
inc
mov
push
mov
mov
mov
aad
dec
hlt
pop
mov
in
loope
push
jb
mov
or
outsl
or
sbbl
jecxz
jo
pop
mov
repnz
mov
cmp
pop
xchg
test
push
into
std
jl
sbbl
jbe
jmp
pop
loope
push
fstps
mov
sub
cmp
scas
sbb
repz
xchg
pop
xchg
push
jecxz
sub
in
xchg
pop
push
dec
and
sub
cmp
rcr
mov
pop
call
xlat
inc
push
pop
inc
test
fstl
shlb
push
or
lock
fldcw
or
rcll
out
insb
push
sbb
sbb
sti
das
mov
xchg
in
dec
mov
mov
ror
xchg
call
xchg
jmp
or
imul
in
cltd
xchg
pop
sub
es
ror
cli
pop
and
xchg
jmp
or
pusha
pop
icebp
push
add
xor
adc
pusha
and
scas
cmp
and
dec
mov
mov
movl
xchg
rcrl
sub
outsl
inc
shll
jns
popa
pop
test
pop
cwtl
adc
mov
cmp
daa
pop
arpl
mov
jecxz
jbe
mov
dec
mov
pop
shrl
cmp
jno
mov
leave
cmp
or
movsl
inc
jmp
decb
ror
out
stc
rcll
sbb
fistpl
cmc
das
leave
inc
mov
xchg
sub
js
dec
mov
pop
mov
xchg
cmp
push
sub
and
in
or
mov
add
inc
fyl2x
cmp
xchg
jp
adc
lcall
sub
fcomps
inc
ss
movb
ja
mov
jmp
mov
notl
fadds
movsl
mov
pop
mov
mov
ret
in
hlt
lret
xor
xlat
aam
mov
xchg
jecxz
out
jmp
out
je
je
je
js
icebp
sub
ss
xchg
sbb
jmp
std
and
and
sub
sub
out
and
sarb
inc
and
dec
sub
pop
insb
pop
mov
mov
outsl
mov
ja
jnp
jecxz
or
std
mov
int
lea
jl
cmpsl
cmpsl
les
dec
pop
fldt
negl
dec
mov
or
jge
xchg
mov
xchg
aaa
sbb
or
out
or
adc
or
push
mov
sbbl
sub
addb
sbb
adc
xor
ss
push
jb
pop
jns
cmp
dec
cwtl
loope
testl
lret
fldt
jne
in
mov
cmp
enter
sub
mov
ja
imul
xchg
sbb
and
push
mov
cwtl
fildll
pop
out
inc
pop
xor
or
push
inc
es
xchg
jnp
push
fimull
filds
pop
mov
fwait
pop
mov
adc
dec
xchg
lods
testb
dec
xchg
test
pop
lock
shrl
rolb
repz
xchg
sbb
mov
pop
lea
cmp
in
jmp
cmc
jne
fwait
pop
inc
mov
pop
adc
arpl
ja
adc
cmp
pop
lods
add
movsb
cmp
xor
test
jae
xchg
pop
lret
gs
mov
pop
pop
add
call
push
shl
adc
sub
mov
mov
pop
cmpsl
sbb
cs
jne
pop
lcall
push
adc
pop
in
jmp
xlat
jo
leave
imul
insl
dec
cmp
pop
mov
loopne
sbb
push
bound
stc
fadd
xor
ja
shll
nop
jg
sub
dec
pop
sbb
xor
aaa
and
xor
sbb
cmp
jge
mov
enter
jae
pop
inc
xchg
fldcw
jne
cmp
adc
sbb
daa
ds
or
subb
ljmp
pop
cmc
rcll
cmp
movsb
pop
pushf
mov
adc
xchg
dec
push
das
xor
cltd
je
jmp
je
jmp
xor
test
fistpl
aaa
mov
xchg
push
sahf
pop
mov
loop
xor
jg
pop
or
sub
es
loope
xchg
mov
push
lret
shl
cltd
mov
cltd
lods
pop
xchg
mov
inc
xchg
fs
xor
or
sub
mov
push
aaa
inc
ds
cmp
sahf
mov
pop
stos
push
pop
aas
fsubl
cli
aad
push
push
fistps
loopne
pop
imul
iret
inc
adc
orl
out
pop
or
push
inc
push
insb
cwtl
ss
cld
sbb
pop
enter
sarl
hlt
pop
sbb
inc
sub
cs
pop
lret
adc
xchg
jns
mov
jmp
dec
clc
push
jecxz
and
pop
daa
mov
mov
jae
test
dec
jge
push
lea
mov
lods
in
mov
pop
mov
xlat
push
sbb
jae
rorb
jecxz
mov
dec
adc
sti
mov
or
clc
lcall
inc
js
fstpt
cmp
lret
jl
stc
add
xchg
addb
inc
shr
pop
fnstcw
xor
or
rcll
or
mov
cmc
or
stos
sti
add
mov
into
pop
ljmp
imul
jne
nop
pop
xor
fnstsw
ret
mov
pop
cmp
fs
sahf
pop
cld
or
jne
push
adc
pop
andl
sti
or
adc
mov
jmp
out
push
sub
test
xor
xchg
add
mov
fcmove
lea
pop
idivb
xchg
mov
inc
dec
adc
mull
jp
sbb
fildll
push
pop
xor
and
xchg
pop
pop
loopne
dec
lahf
mov
gs
adc
bound
xchg
stc
dec
ja
pop
daa
cmpsl
and
jg
push
xor
fwait
pop
mov
cmp
xchg
mov
xchg
pop
lds
in
jns
and
xor
inc
cmpb
pop
jecxz
cmp
pop
in
dec
outsb
mov
lods
cs
pop
bound
ret
sub
pushf
jge,pt
fisubrl
xor
jbe
cltd
sbb
or
jns
jne
pop
pusha
sbb
imul
cmp
repz
test
jae
sub
fwait
sbb
decb
nop
out
pop
or
cmpsl
push
in
pop
dec
inc
pop
mov
jge
push
bound
pop
xchg
cwtl
movsb
hlt
mov
ret
shl
push
ficoml
adc
lea
xor
mov
es
cmc
and
pop
mov
sbb
push
lret
adc
sbb
inc
pop
into
push
push
mov
pop
stos
mov
and
ds
sahf
mov
mov
and
mov
mov
mov
xor
pop
jge
aas
enter
push
rcrl
lret
xor
jp
hlt
cld
stos
pop
sbb
outsl
jno
jecxz
ja
push
scas
or
sub
jle
repz
and
lret
imul
add
pop
mov
in
sub
pop
or
sub
mov
pop
jno
mov
ds
pop
push
gs
fcmovnb
imul
imul
leave
stc
loope
push
ljmp
xor
mov
pop
int3
mov
sbb
xchg
inc
pop
sub
movsl
xchg
sub
ss
mov
clc
in
stos
sub
add
xchg
pop
inc
cmc
js
sti
dec
adc
fimuls
idivb
xchg
sub
shl
int3
sbb
xor
fldpi
pusha
mov
jmp
hlt
jecxz
or
loopne
pop
mov
pop
cmp
xchg
jnp
dec
icebp
sti
insl
sahf
mov
pop
pop
push
add
or
ljmp
scas
test
cmp
das
clc
jne
push
xor
jo
fstl
sti
mov
cmp
pop
ja,pt
adc
xchg
andl
pop
rorl
or
gs
add
pop
pop
and
mov
daa
sub
jae
pop
mov
jno
outsb
scas
cwtl
lret
pop
adc
in
xchg
pop
out
pop
and
inc
sub
lds
sbb
cwtl
fxch
cmp
fwait
call
jne
dec
fildl
bound
test
mov
mov
push
insl
mov
imul
sub
pop
jae
gs
pop
in
arpl
aad
push
ret
pop
adc
dec
pop
jmp
adc
pusha
sbb
adc
pop
fsubp
push
inc
jle
scas
and
mov
cltd
jno
dec
imul
aaa
jns
jbe
adc
sub
and
in
pop
std
popl
push
cmp
xchg
iret
pop
xchg
jge
adc
test
dec
movsb
mov
lret
test
adc
pop
shrb
popl
push
popf
pusha
adc
jmp
pop
sahf
xchg
pop
inc
mov
jno
inc
fstps
mov
bnd
or
xor
daa
lret
icebp
jge
or
push
jnp
xorl
mov
sbb
pop
pop
mov
les
xchg
mull
dec
and
xchg
pop
mov
loop
cwtl
int3
sub
cmp
sbb
bound
jecxz
daa
and
pop
pop
out
cs
or
mov
inc
ds
loope
ret
fwait
shrb
xor
jns
jo
outsb
icebp
pop
cli
daa
popa
test
adc
xlat
pop
cld
pusha
inc
shll
lret
pop
enter
es
dec
pop
fldcw
stos
daa
fucomip
jne
add
fwait
dec
imulb
ret
les
pop
cmp
mov
inc
pop
xchg
pop
bsr
and
sub
pop
mov
adcl
ror
push
test
pop
test
mov
lea
inc
sbb
or
cmpsl
negb
dec
test
rcll
cmp
test
xor
mov
mov
les
dec
adc
addr16
jmp
pop
inc
test
iret
sub
inc
inc
movsl
rcrb
dec
inc
sbb
dec
push
xor
arpl
test
ds
les
xchg
dec
aas
shl
ljmp
jmp
inc
repz
pop
push
and
mov
test
mov
cmpsl
inc
int
jae
push
jne
ja
adc
xor
and
popa
dec
pop
shrl
add
sub
repz
jae
pusha
pop
popa
mov
lret
pop
dec
gs
add
add
cmp
mov
xchg
cmpsb
stc
cmp
inc
or
sbbb
int
test
inc
lock
or
jmp
and
adc
inc
inc
popa
push
movsl
out
pop
das
xor
gs
xchg
inc
fucomi
add
pop
xchg
cmpb
out
cmc
ss
dec
jne
dec
loopne
push
adc
int
mov
mov
lret
roll
xchg
mov
dec
jno
lock
push
or
sti
pop
ret
mov
out
xor
dec
mov
fwait
jmp
or
cmp
pop
cmc
pop
jmp
and
push
xchg
mov
dec
jne
popf
bound
push
pop
ja
pop
shlb
pop
stc
mov
or
daa
jbe
pop
inc
ds
and
jmp
pop
pop
pop
sbb
sub
pop
std
inc
pop
jo
mov
mov
push
lods
ljmp
or
stos
ds
stos
dec
int
adc
mov
mov
pop
icebp
loope
in
and
pop
jae
jne
dec
ja
lret
xor
fstp
mov
pop
xor
mov
dec
aas
xchg
mov
bound
fwait
ss
and
icebp
adc
adc
in
or
pop
into
mov
jge
push
pop
sub
lds
ret
cmp
cmp
fldz
xor
pop
and
jecxz
btc
in
sbb
mov
insl
adc
push
xchg
xchg
adc
and
scas
lcall
cmp
addb
sbb
xchg
icebp
test
xor
into
xchg
push
xor
cli
xchg
and
adc
dec
inc
sbb
cmp
negb
addb
mov
ljmp
dec
add
negl
sbb
adc
mov
fucomp
cmpsl
mov
push
cmp
addr16
int
in
fdivrs
and
mov
pop
cmp
mov
in
dec
sbb
aaa
sahf
mov
test
rolb
push
pop
inc
fcomps
mov
mov
cmp
mov
cmc
pop
xchg
xchg
adc
pop
dec
pop
jne
addr16
cmp
mov
jae
mov
out
sbb
dec
adc
push
arpl
enter
mov
pop
bnd
add
cs
pop
dec
mov
push
push
lds
imul
clc
std
pop
in
mov
inc
add
ficomps
sub
fldenv
pop
in
jmp
ljmp
sub
pop
push
mov
pop
jmp
mov
push
jne
push
sahf
fcmovne
pop
in
sub
inc
fdivs
inc
add
or
push
sbb
ret
inc
lret
mov
pop
xor
pop
push
ds
jecxz
sbbl
fstp
push
mov
mov
sub
xchg
jns
jge
imul
push
mov
loopne
pop
mov
push
pop
dec
jo
mov
and
mov
shlb
mov
mov
pop
or
or
stc
sub
lea
or
pop
pop
mov
adc
lds
dec
pop
icebp
lea
xchg
push
js
ds
inc
or
mov
popa
std
int
daa
cmp
jbe
fsubs
fidivl
pop
push
inc
dec
dec
repz
cwtl
adc
xchg
cmp
pop
push
pop
push
dec
xor
adc
mov
js
dec
jecxz
inc
jl
mov
sub
cmp
lret
cmp
pop
sub
pop
int3
cmp
add
add
adc
orb
and
fdivl
dec
lds
cmp
mov
adc
mov
orl
xlat
repnz
and
mov
cmp
jne
mov
stos
arpl
jnp
jg
cmp
sbb
cli
leave
test
push
mov
std
faddl
stos
pushf
push
xchg
mov
add
lcall
cmp
andb
xchg
fistps
add
push
and
int3
mov
inc
mov
out
sbb
push
lcall
ljmp
stos
mov
dec
xor
imull
sarb
add
pop
add
fistpl
lret
mov
sbb
jecxz
enter
mov
sahf
sbb
add
cmp
stos
mov
mov
add
dec
loopne
mov
movsl
fistpl
mov
adc
insb
test
in
dec
xlat
inc
lcall
test
jb
pop
sub
cmp
pop
or
mov
in
inc
mov
pop
dec
xchg
mov
lret
cmp
ljmp
push
or
mov
jp
pushf
pusha
push
push
mov
sti
pop
mov
lods
lcall
pop
cmp
adc
mov
pop
sub
stos
pop
cmp
jp
cmp
mov
mov
sbb
or
fistps
fucomp
cs
sub
push
pop
sbb
pop
enter
sub
dec
pop
dec
inc
fwait
xor
movb
cmp
add
jae
aas
lahf
bound
dec
iret
mov
mov
dec
mov
imul
jbe
fisttps
dec
es
and
xchg
or
push
push
insb
lcall
jmp
cli
inc
cwtl
out
outsb
or
mov
sbb
pusha
xor
push
push
push
dec
insb
dec
hlt
jmp
jmp
sub
imul
mov
jl
mov
mov
in
jp
jp
adc
pop
push
shll
dec
sbb
pop
push
mov
mov
cmp
aad
lret
pop
fidivrl
sub
sti
out
cltd
cmp
mov
pop
aas
mov
fists
mov
scas
sbb
sbb
xor
cmp
fwait
sbb
sub
cmp
lahf
sub
fcmovbe
fistpl
and
sbb
cmp
cmp
jb
iret
fmull
sahf
inc
out
mov
sub
ret
xor
fisubrl
mov
test
inc
push
imul
pop
pop
push
or
fstps
push
shrl
fistl
cmp
sti
inc
inc
xchg
out
push
cmp
push
pop
sub
cmp
dec
xchg
aaa
outsb
cmp
sub
xchg
mov
pop
or
lds
push
inc
dec
adc
pop
mov
push
and
sbb
and
dec
mov
cmpsb
mov
mov
sbb
jp
mov
xor
jb
imul
adc
mov
jecxz
xchg
mov
pop
rolb
lret
mov
xor
sub
push
pop
sbb
or
jecxz
pushf
cmp
pushf
adc
mov
jecxz
add
jecxz
xchg
fstps
fidivrl
ljmp
xor
cmp
or
jb
cmp
cmp
pop
fistpl
xchg
add
in
adc
cmp
xor
cld
lret
and
test
data16
cwtl
cltd
mov
gs
adc
stos
std
pusha
gs
imul
pop
loopne
jnp
or
pop
dec
dec
pop
stc
sub
stos
push
sti
ss
stos
fsubr
stos
mov
ffreep
les
mov
jp
add
cmp
cmpsb
cmp
mov
fdivrl
sub
dec
or
mov
movsl
mov
pop
add
sbb
mov
dec
pop
stc
pop
sub
cli
sbb
fcom
push
arpl
stos
jns
jmp
sub
lret
or
leave
push
xchg
xchg
and
xchg
iret
mov
sbb
cmp
fists
sub
ljmp
mov
sub
mov
mov
popf
fisttpl
sub
or
or
imul
pop
sbb
push
pop
stos
mov
rsqrtps
jecxz
ret
out
cmp
sub
rcrl
jnp
pusha
or
push
mov
mov
test
ret
sahf
adc
mov
and
std
leave
lahf
add
rcll
in
filds
psubusw
fs
xor
cli
aas
sub
push
lret
cli
push
add
sbb
or
roll
lret
mov
xor
dec
xchg
jnp
mov
inc
cwtl
cmpl
xor
dec
fdivl
xchg
xchg
sbb
ror
movq
les
push
xor
mov
xor
sub
add
push
pop
fs
push
movb
lret
rcll
out
and
stos
sahf
sub
stos
cmpsb
aaa
out
adc
jmp
out
xor
out
sub
push
add
xor
fnstsw
ret
jmp
pop
clc
sar
loope
sbb
loop
aad
ficoml
dec
sbb
clc
fs
jns
sub
ja
es
aad
or
lods
add
loopne
pop
in
dec
dec
mov
lds
mov
lret
sub
stos
int
sti
outsl
and
fisubs
sbb
jle
mov
pop
sarb
sti
subl
sub
cmc
or
ficoml
sub
sbb
pop
xchg
jne
sbb
mov
mov
push
pop
xor
sub
dec
in
cmp
fidivrl
push
pop
inc
push
and
ljmp
and
pusha
stos
sub
jmp
dec
push
ja
mov
add
mov
pop
daa
rorb
lahf
pushf
fwait
shlb
adc
pop
or
test
sub
notb
jecxz
mov
mov
incb
daa
in
aas
cmc
int
mov
and
fistps
jle
les
test
sti
insb
lahf
push
jmp
insb
xor
jae
sbb
or
mov
fmul
pop
inc
or
ret
lret
roll
pop
adc
fwait
push
xor
dec
fildl
xchg
cmp
push
pop
fcmovnu
mov
test
sti
shr
jp
xlat
pop
pop
cwtl
ret
ss
js
sbb
jbe
mov
inc
jmp
pop
sbb
js
jno
rcll
sti
fstpt
cltd
sbb
cmp
les
pop
xchg
in
push
mov
jnp
jns
mov
inc
adc
lds
sbb
pop
mov
and
aaa
pop
aad
test
add
and
sbb
in
cmp
icebp
pop
mov
stc
pop
push
insl
push
fsubl
adc
dec
pop
add
fcmovnu
and
stos
out
stos
mov
mov
mov
cs
xor
xor
outsl
mov
add
or
repz
sbb
lret
idiv
lret
into
mov
enter
sub
or
xchg
sbb
or
ljmp
pop
or
sub
sbb
es
or
cltd
push
sbb
leave
mov
adc
inc
lret
or
data16
dec
lret
out
xchg
mov
or
loope
popf
rolb
stc
sti
stos
adc
dec
push
sub
jg
push
enter
jp
and
in
push
cli
lret
push
pop
cmp
mov
pop
popa
inc
xchg
sbb
jmp
xor
imul
test
sub
mull
insl
sbb
orps
inc
mov
stos
mov
rcrb
push
and
dec
dec
cli
cmp
push
jno
sub
push
cs
dec
outsb
add
mov
mov
pop
cld
jp
aaa
cli
adc
out
movsb
sbb
sbb
or
lret
mov
sbb
cmp
stos
xchg
mov
add
sahf
or
lock
adc
ljmp
adc
out
stos
jo
cmp
xchg
movsl
movsb
ljmp
imul
or
xor
jp
add
sbb
dec
lret
dec
mov
sbb
jecxz
imul
mov
gs
lcall
or
dec
popa
dec
push
sbb
or
xor
aaa
xor
ss
push
xchg
mov
adc
mov
mov
sbb
dec
push
addr16
fdivl
sub
into
nop
inc
jae
xchg
xor
dec
push
mov
or
pop
stos
sbb
sub
xlat
scas
inc
push
dec
mov
inc
or
sub
sub
imul
jne
sub
dec
push
jo
sbb
xchg
lcall
ret
shlb
mov
dec
or
dec
mov
jnp
mov
cmp
les
mov
or
push
mov
stos
mov
sub
cli
inc
inc
adc
cwtl
or
repnz
scas
lods
mov
jbe
or
jo
ret
jecxz
lret
jnp
lret
fsubrl
inc
mov
jnp
pop
outsl
out
pop
add
dec
dec
pop
mov
xlat
test
mov
cmpsb
loopne
jg
sbb
cmp
or
sbb
jmp
lahf
sbb
inc
jae
and
xchg
dec
daa
lret
pop
adc
mov
fidivrl
add
pop
add
jne
jnp
rcr
dec
pushf
test
push
cmp
xor
mov
mov
sub
scas
into
aaa
mov
cli
enter
lahf
xor
loopne
mov
cmpl
sub
mov
dec
push
cli
pop
ret
sbb
test
jl
sbb
jne
sub
aas
fldt
dec
push
mov
mov
cmpsl
inc
mov
lea
cltd
pusha
aam
into
xlat
jg
mov
out
add
push
enter
out
mov
int3
cltd
ljmp
ret
mov
cmp
mov
or
xchg
lret
stc
mov
mov
mov
pop
aaa
push
push
sbb
out
ljmp
or
in
jb
xchg
repz
cmp
sahf
mov
stc
mov
addr16
in
lock
lret
insl
aaa
outsl
sub
sub
inc
sbb
jmp
test
stos
cmp
jns
jnp
and
push
call
daa
dec
mov
jno
push
cltd
push
sarb
sub
arpl
scas
sbb
cmp
and
jecxz
mov
ja
pop
cwtl
mov
shrb
lcall
scas
or
shr
mov
pop
mov
sti
mov
sbb
aaa
push
negb
xor
adc
imul
push
sti
jle
pop
mov
daa
mov
jp
daa
mov
divl
push
or
sub
pop
test
pop
jge
stos
cwtl
cmp
xchg
stc
push
ljmp
sub
imul
popf
scas
lret
pop
and
cmp
imulb
les
xchg
cwtl
cmpsb
imul
or
sbb
mov
dec
xor
or
inc
jns
adc
imul
dec
jp
or
and
lahf
out
pop
mov
sub
lcall
jb
and
dec
ret
dec
fwait
adc
fildl
and
inc
jne
push
movsb
jl
jmp
loope
jle
xchg
das
sbb
mov
ret
stos
adc
sti
push
sti
jb
xchg
xchg
cmc
lea
enter
jge
shlb
sbb
push
filds
leave
dec
cmpsb
lret
add
push
test
and
pop
push
add
dec
push
mov
lds
mov
out
pop
mov
pop
cmp
sub
cmp
push
popf
or
ret
inc
les
mov
or
jnp
jbe
pop
push
sbb
sarl
ds
scas
lahf
lea
adc
mov
ljmp
in
ret
fidivrl
pop
sti
pop
mov
jns
mov
jmp
push
push
fwait
dec
mov
fistps
bound
ficomps
add
push
stos
les
push
int3
adcb
jne
repz
imul
mov
or
sbb
and
std
xor
mov
into
mov
push
lcall
test
jae
enter
sub
stos
jg
sub
stos
xor
cli
push
mov
stos
cmp
pusha
loopne
jno
dec
or
pop
mov
mov
cli
jg
fistps
in
mov
sbb
pop
jmp
sub
lahf
lahf
negl
mov
inc
imull
mov
sbb
loopne
ret
cmp
sub
mov
stos
mov
shlb
push
into
sbb
push
stos
fsubs
sbb
dec
jae
or
mov
add
fistps
push
push
or
mov
dec
repz
mov
inc
sub
cmp
mov
ljmp
cli
test
fwait
mov
or
xor
out
xor
dec
cwtl
pop
cmp
repz
lret
xor
fistps
pop
stos
fcmovne
mov
cmp
xor
out
leave
dec
cs
mov
xchg
jae
stos
ret
ljmp
sbb
inc
repz
sbb
sbb
cmp
pop
push
pop
or
mov
stos
pop
cli
fcmove
sbb
cmp
fildl
mov
inc
pop
jmp
xorb
outsl
enter
push
pusha
or
in
dec
lahf
push
ljmp
push
sbb
xchg
insb
cmp
sub
jo
sbb
pusha
stc
ljmp
pop
jg
fwait
imul
loope
mov
pop
cmp
push
or
or
push
sub
sub
pop
fwait
cmp
xchg
stos
mov
jns
jecxz
sbb
lds
dec
repz
pop
push
inc
cmp
pop
pop
fidivrl
lcall
or
sub
jno
fisubl
mov
rorb
pop
or
jp
testb
imul
mov
add
push
or
mov
dec
insb
imul
xor
ficompl
std
pop
pop
cli
stos
sub
in
add
dec
sub
mov
add
cmpsb
sub
mov
aam
or
lcall
sti
sbb
jecxz
and
adcb
jle
sti
jecxz
aas
mov
xchg
and
rcrb
adcb
popa
push
mov
pop
into
imul
ljmp
cs
xlat
inc
dec
fwait
sbb
cmp
jle
sub
adc
inc
dec
xor
and
jbe
xor
lahf
sub
pop
and
jecxz
xor
lret
xchg
in
cmp
xor
jmp
jnp
dec
stos
sahf
mov
fcoms
ret
push
adc
das
dec
pop
insb
push
inc
sbb
imul
jnp
sbb
xchg
repz
mov
movsl
insb
mov
fsubs
jle
add
mov
ficompl
push
mov
sbb
fsubrs
cmp
stos
push
push
idivb
sbb
xchg
lods
inc
push
mov
sub
add
out
or
sub
xchg
dec
jnp
lret
push
mov
dec
loopne
imul
test
aam
fcmovbe
fisubrl
in
dec
sbb
fwait
push
adc
daa
fiaddl
sub
fldt
mov
lods
xor
pop
xchg
sub
lret
fwait
jecxz
mov
aam
out
sbb
dec
out
imul
mov
rclb
mov
dec
pop
cli
push
ffreep
add
jmp
or
jecxz
or
sbb
fldenv
pop
pop
and
cmp
das
add
loop
push
lea
icebp
sub
cmp
and
fiaddl
shll
cli
ret
cmpl
pushf
sarl
outsl
add
pop
fstl
popa
dec
add
dec
gs
or
inc
add
pop
sbb
lahf
rcrl
fcoms
test
xor
pusha
lcall
fldz
xor
andb
push
inc
movl
movsb
pop
andl
push
and
or
or
pop
adc
pop
sbb
pop
sbb
add
popa
or
and
or
fisttpl
dec
dec
xor
addr16
iret
orl
pop
mov
or
scas
mov
fisubrl
enter
sub
push
fistpl
add
in
mov
leave
dec
vhsubps
adc
loopne
daa
cmp
cmp
push
fmul
stos
imul
mov
jp
int3
add
ljmp
into
imul
dec
adc
cld
leave
pop
jno
lret
incb
mov
shl
into
sti
push
mov
mov
push
xlat
lock
ffreep
pop
test
xor
jbe
lds
jmp
aad
fcmove
movsb
cmp
dec
adc
mov
mov
mov
add
push
xchg
or
push
pop
sub
add
inc
inc
jns
fs
push
outsl
inc
sbb
and
dec
je
push
addr16
pop
iret
jae
data16
cs
adc
pop
inc
push
cld
mov
or
test
pop
shlb
jno
pop
jae
add
pop
in
leave
iret
lds
sub
sub
arpl
or
int3
pop
dec
cli
aam
sbb
mov
cmp
or
xlat
mov
fdiv
dec
pop
mov
mov
aad
push
test
fdiv
jecxz
test
inc
jge
mov
push
mov
jecxz
push
test
or
lcall
and
pusha
adc
mov
hlt
dec
push
mov
sub
ljmp
and
in
cmpsb
push
jg
loop
in
js
jle
pop
pop
sbb
mov
clc
fcmovne
pop
mov
lea
jge
sti
cmpsb
sub
ss
shr
and
mov
jo
and
inc
jmp
sti
sti
mov
pop
stos
inc
orb
pop
mov
push
push
cmpsb
inc
es
pusha
push
jecxz
clc
pop
pop
mov
lds
push
cs
ja
pop
cwtl
dec
jne
xchg
ljmp
dec
pop
mov
rcrl
dec
xor
rcr
cli
addr16
sub
jae
repz
cmp
fsubs
cmp
jmp
repnz
pop
or
fistps
not
mov
push
stos
dec
pop
add
lock
flds
sbb
ljmp
jb
sbb
jge
pop
push
sarl
adcl
loope
in
sub
inc
add
push
push
shr
sbb
push
pop
mov
mov
fcomps
inc
dec
scas
insl
rorl
mov
in
pop
loope
inc
aad
jp,pt
inc
push
push
add
sub
movsb
pop
out
mov
bnd
pop
loopne
adc
pop
pop
popa
jle
sahf
stc
xor
sub
pop
imul
rclb
xchg
test
dec
int3
pop
clc
into
leave
pusha
daa
inc
jmp
pop
shrl
repz
pop
mov
mov
push
pop
xchg
xor
dec
push
pop
dec
add
in
cmp
inc
jo
fdivrs
mov
xor
in
push
xlat
push
sbb
test
push
cld
test
jg
cmp
pop
inc
dec
enter
in
pop
pop
jmp
sti
mov
add
out
sub
cltd
ret
pop
hlt
in
shll
clc
pop
notb
push
or
add
push
dec
imul
fsubl
pop
push
test
add
mov
data16
loopne
jb
incb
jmp
sti
adcb
out
mov
ret
adc
xchg
pop
ds
jbe
push
pop
add
push
and
loopne
cmp
mov
sbb
add
or
push
lods
push
sbb
xchg
fsin
rclb
sbb
ja
lcall
push
repz
jge
stc
adc
enter
and
cmp
ret
pushf
das
jge
sub
mov
stos
pop
and
push
jp
data16
xchg
xchg
pop
mov
dec
jg
lds
and
push
xor
or
inc
mov
rorb
cmp
fs
test
dec
aas
sarb
jl
movhps
adc
add
pop
push
cs
pop
mov
pop
and
mov
push
sbb
decl
lcall
arpl
fwait
pop
xchg
shrl
repnz
rcrb
dec
inc
sub
push
push
pop
push
or
js
pop
ss
pop
popf
out
or
movsl
mov
clc
pop
outsl
jp
adc
push
addr16
sahf
add
pop
iret
and
fimull
ret
mov
push
lock
rclb
xor
fisttps
mov
mov
ficoml
movsl
in
pop
add
pop
sbb
cwtl
sarb
test
and
fists
icebp
fiaddl
inc
add
insl
mov
idivb
stos
or
add
test
pop
pop
mov
imul
pop
repz
fcomps
mov
push
pop
lret
xchg
jbe
cld
imul
push
push
test
pop
or
je
ja
and
dec
mov
fadds
mov
fidivl
decl
ljmp
cmp
sub
adc
js
pop
jno
jl
mov
cli
call
mov
dec
in
dec
xchg
lock
xchg
pop
loope
inc
jno
ror
loope
addl
cwtl
adc
adc
js
js
pop
and
push
sub
push
jle
pop
adc
pop
add
jb
insl
sysexit
xor
jno
pop
xor
ja
bound
push
popa
add
lods
bound
jmp
cmpsb
sbb
sub
mov
int3
cli
int
xor
in
lds
mov
cmp
cld
add
enter
mov
mov
repnz
fsubr
pop
icebp
mov
push
std
ret
pop
arpl
iret
lods
mov
rcrl
mov
shr
add
ret
repz
sbb
pop
xchg
leave
adc
orb
rcr
aad
lods
stos
inc
sbb
pop
shll
cmp
mov
ds
icebp
cwtl
test
add
mov
and
jnp
push
leave
mov
xlat
dec
mov
pop
popa
andl
fimull
lock
pop
mov
mov
flds
cltd
jo
loopne
fidivs
pop
into
mov
cli
mov
dec
loope
xor
ret
mov
push
mov
cmp
in
rcrl
mov
rcl
pop
mov
or
mov
iret
pop
add
pop
sbb
in
sbb
es
aad
mov
leave
jns
rol
movsl
pop
jmp
push
adc
sbb
push
out
jns
stos
pop
fmul
sarl
add
scas
mov
lcall
adc
sbb
xchg
fistpll
subl
mov
dec
xchg
sub
add
push
inc
dec
push
and
xor
arpl
cltd
enter
sbb
pop
or
into
lret
jmp
clc
push
pop
and
inc
stos
and
pop
or
adc
enter
outsl
mov
pop
bound
sub
imul
push
ljmp
cmp
imul
push
dec
inc
pop
test
sub
aad
bound
inc
dec
jne
arpl
sbb
insl
jo
adc
push
jbe
outsl
nop
add
xchg
pop
jae
int3
push
pop
inc
inc
dec
cmp
pop
repz
aad
fcmovnbe
test
pop
push
leave
in
inc
test
pop
mov
jns
sub
mov
mov
dec
lds
pop
dec
sbb
and
lret
pop
sysenter
dec
add
cmc
mov
push
mov
lret
jbe
roll
inc
pop
shll
pop
pop
inc
pop
icebp
pop
ret
stos
mov
out
cwtl
xlat
push
cmpl
fcmovb
or
pop
adc
xchg
sub
push
and
mov
fcmovnb
push
mov
and
rol
shlb
sbb
or
pop
ficoml
jmp
in
or
int3
rcrl
sbb
push
jecxz
pop
dec
and
sbbb
jae
fldt
jbe
push
pop
leave
add
push
push
push
adc
add
inc
add
pop
dec
push
pusha
dec
inc
cmp
pop
dec
adc
cmp
mov
pop
cld
mov
and
push
pop
cmpl
int
js
test
lret
pop
cmp
lea
out
mov
sbb
mov
push
sbb
fdivrs
stos
mov
movsl
enter
xor
pop
sub
mov
push
jp
insb
jge
sbb
mov
mov
cmc
mov
fimull
fninit
jno
repz
jge
stc
sbb
pop
pop
mov
jb
sub
and
add
xor
xchg
out
mov
xor
sbb
test
or
sub
dec
push
sbb
jecxz
inc
xor
pop
adc
lcall
in
lcall
andb
repnz
add
in
fiaddl
incl
add
pop
cmp
and
fs
adc
nop
xor
xchg
xor
push
or
push
adc
xor
inc
push
dec
adc
jns
xchg
cli
cmp
inc
cld
mov
stos
pop
sbbl
outsb
pusha
es
loop
rcr
daa
pop
nop
add
arpl
cs
push
and
or
or
and
push
pop
sub
scas
pop
push
pop
cmpsb
cmpb
std
jp
cs
push
adc
fwait
loop
pop
push
jo
movsb
xor
test
sub
inc
imul
pop
add
pop
sub
jns
popl
leave
in
and
and
or
mov
add
pop
sbb
fstps
imul
sbb
mov
sub
dec
shrl
pop
and
loope
addb
scas
dec
pop
testb
pop
cltd
out
xchg
popa
pop
ret
jo
icebp
pop
inc
bound
flds
pop
pop
aaa
or
pop
sbb
mov
lea
push
ret
add
es
cwtl
fdivl
xor
jnp
cvtps2pd
pop
xchg
pop
out
dec
scas
jg
out
les
loopne
ss
xchg
pop
sbb
fstl
xor
jecxz
mov
in
ficompl
pop
mov
mulb
and
and
xchg
pop
push
inc
jne
dec
notl
push
cs
test
popa
and
cmc
leave
pop
and
pop
push
orl
mov
push
and
xor
fcoms
test
pop
and
push
addr16
add
push
cs
or
int
jns
and
enter
xor
arpl
out
imul
outsb
pop
inc
loopne
sbb
mov
pop
and
in
fsubrl
adc
cmp
dec
inc
out
adc
pop
push
pop
ficoml
lods
cltd
pop
jae
and
push
inc
jo
jo
pop
push
mov
push
ret
pop
and
push
jno
pop
in
popa
jbe
push
sbb
xchg
add
adc
sbb
les
jns
fcomps
pop
or
in
add
add
pop
add
mov
dec
xchg
test
sbb
adc
mov
test
or
pushf
add
dec
jle
sbb
fidivrl
aam
and
pop
dec
adc
adc
xor
pop
inc
add
rcrb
mov
jge
cltd
sbb
xchg
sbb
and
cld
mov
or
dec
rcll
arpl
int3
xchg
aam
stos
mov
jbe
dec
cmc
inc
push
icebp
mov
fsubr
es
jmp
pusha
sbb
pop
sbb
pop
sbb
pop
sbb
rcrl
pop
int
sbb
leave
pop
and
and
popf
pushf
mov
pusha
fisubrs
fsubl
popf
fsubrl
fcompl
sub
mov
or
test
pushf
jge
xor
xor
insl
jl
jl
mov
gs
aaa
push
pop
js
and
add
gs
push
insb
insl
outsb
outsl
jno
jae
je
pop
jbe
js
jp
xchg
gs
pop
or
or
adc
or
pop
jp
cmp
adc
bound
je
xor
insl
aam
jno
cltd
jne
cmp
sub
and
sbb
sbb
sbb
aaa
xor
and
cmp
out
pop
xor
rcrl
inc
pop
imul
jae
jnp
jo
data16
sbb
xchg
stc
sbb
clc
jge
mov
std
sbb
sbb
or
cmp
dec
sbb
push
adc
sbb
fcoms
push
addl
dec
adc
movsl
mov
or
or
adc
pop
sub
push
pop
sbb
or
dec
pop
xchg
cs
bswap
sbb
and
xchg
pop
dec
sub
xor
pop
dec
and
adc
mov
adc
cmp
jne
mov
or
and
sbb
or
test
dec
adc
xor
and
jecxz
dec
and
adc
sbb
sbb
sbb
sbb
mov
adc
sbbl
sbb
sub
mov
inc
push
aam
and
and
adc
xor
test
cmpl
sub
fadds
daa
pop
cmp
sub
sub
and
jmp
xor
sbb
and
sbb
ds
and
fdivrs
cli
cmp
jns
addr16
das
dec
xor
sub
aad
or
inc
sub
repz
das
pop
loop,pt
mov
mov
in
fcoms
xor
ficompl
filds
jno
and
sbb
jns,pn
add
push
ds
sub
ds
in
rcr
sub
sub
sub
cmp
xorl
jecxz
bound
dec
cmp
sbb
or
dec
clc
xor
es
das
movsl
sub
aas
nop
cmp
iret
inc
mov
repz
jns
push
mov
and
inc
adc
and
sbb
push
or
leave
sbb
and
fisubs
inc
sbb
pop
in
sbb
mov
cmpsb
fs
inc
pop
sbb
push
mov
sbb
prefetchnta
in
push
cs
inc
dec
mov
dec
pop
lods
push
adc
dec
jl
loopne
push
mov
dec
cmp
mov
ficoml
fsts
fisubrs
sub
push
push
in
push
xchg
xor
sbb
jae
or
sbb
push
stos
jg
pop
pop
push
xchg
push
sbb
push
int
pop
or
pop
push
cmp
in
and
sbb
sub
pop
push
pop
and
scas
push
xor
ss
ljmp
sub
dec
cmp
popa
lret
push
sub
sbb
fisttpl
es
adcl
add
inc
xor
mov
pop
pop
mov
jmp
sub
pushf
pop
sbb
push
imul
mov
loop
or
insl
pop
sbb
jne
mov
and
insb
lret
jo
push
sub
dec
mov
cmp
or
push
jbe
and
xor
in
pop
js
jns
jp
adc
cmp
or
jnp
imul
sbb
and
sub
pop
cmp
jl
aad
add
push
jge
sub
in
xor
cmp
and
jg
pop
je
sbbb
sti
adc
std
pop
cmp
sbb
outsl
dec
sbb
pop
test
push
stc
or
cmp
lret
lahf
adc
push
xor
dec
fisubrl
inc
dec
cmp
ss
sub
mov
and
das
inc
mov
ss
inc
mov
aaa
fimull
mov
lea
sbb
sbb
icebp
lods
outsl
pop
xchg
push
movsb
jge
push
xchg
mov
pop
sbb
or
shlb
pop
daa
mov
ss
xchg
adcl
ja
sub
xchg
mov
pop
in
cwtl
or
adc
lcall
cltd
inc
xor
xchg
fwait
dec
pusha
aaa
scas
xchg
or
mov
popf
mov
sbb
sbb
mov
mov
pop
xchg
mov
movsb
shrb
jmp
pop
add
pop
roll
insl
pop
imul
mov
call
xor
sub
sub
hlt
fwait
xchg
adc
pop
scas
sub
movsb
fcomp
or
and
mov
in
mov
out
fwait
loop
push
sbb
pop
sbb
pop
or
mov
and
and
sbb
xor
mov
fists
hlt
daa
push
or
xor
mov
sub
out
or
pop
cmp
sub
adc
push
inc
stos
cmp
pop
arpl
sbb
inc
sbb
sbb
sbb
push
ja
imul
sbb
sub
cld
pop
in
dec
xor
sub
pop
rcrb
and
shl
mov
pop
out
cmp
stos
ret
dec
pop
les
cmp
inc
xchg
push
movlps
or
fidivrl
push
and
mov
mov
int
adc
xor
add
cmp
push
pop
rcl
or
daa
jno
rolb
ret
rcrl
xor
cmp
and
xor
push
mov
and
nop
mov
xchg
test
cwtl
pop
push
sub
rdmsr
mov
xor
push
out
sbb
adc
push
pop
cmp
repz
ljmp
xchg
cmp
xor
mov
inc
fsubl
lods
sbb
jmp
sbb
push
and
inc
and
dec
faddp
add
mulps
sbb
or
mov
pop
stos
sbb
and
dec
mov
pop
sbb
in
or
push
in
js
xchg
jl
sbb
mov
jecxz
out
inc
add
mov
cmpsl
xor
ljmp
sub
adc
adc
adc
sbb
sbb
in
subl
out
adc
and
sub
icebp
sbb
sbb
xor
dec
repnz
aaa
inc
add
and
in
jns
sub
add
dec
pop
cmp
or
divb
pop
das
in
xor
cmp
jle
or
xor
subl
xor
imul
ss
cli
adc
sar
js
jns
sbbb
xor
lea
xor
shrb
nop
ret
xchg
sub
or
pop
and
pop
fisubrl
adc
xor
add
mov
and
rclb
add
sub
sarl
pop
sbb
orb
sbb
outsl
add
aad
pop
inc
pop
push
mov
fcmovu
pop
stc
jmp
and
or
xchg
cmp
pop
icebp
adc
push
or
or
adc
stc
xor
inc
add
int
push
int3
cs
dec
adc
xchg
js
lcall
push
xor
cltd
outsl
or
mov
adc
inc
fwait
pop
pop
dec
inc
sub
sub
cmpsb
sub
sub
cmpsl
lret
xor
jb
rcrb
dec
adc
jae
sbb
and
inc
adc
pop
cmp
inc
push
faddp
repz
and
sbb
cmpsl
push
push
inc
bound
mov
inc
xor
and
mov
pop
imul
mov
adc
pop
sbb
push
push
mov
sub
daa
pop
cmp
push
and
cmpsb
adc
push
xor
or
cwtl
xchg
inc
and
inc
sub
sub
aaa
dec
push
add
and
movsl
fcmovnu
xchg
pop
sbb
das
push
push
arpl
and
xor
sbb
and
ss
sar
sbb
xor
movsb
or
and
clc
aaa
fildll
ret
das
nop
fdivrl
cmp
jne
call
or
ljmp
mov
cmc
sub
js
mov
aas
mov
push
cld
inc
or
jae
mov
inc
orb
xchg
inc
aad
sub
sub
sub
and
outsl
out
inc
es
inc
jo
lcall
inc
jecxz
lcall
adc
xor
add
lcall
mul
div
adc
sub
xchg
add
push
sbb
aaa
sub
jns
cmc
ficomps
inc
das
mov
cltd
jno
dec
sbb
adc
xor
pop
adcl
dec
push
add
pop
sbb
xor
xor
rorb
pop
sub
push
inc
incl
cs
ss
inc
test
xor
adc
cvttps2pi
and
and
jecxz
out
jg
sub
sub
or
sbb
xchg
or
ret
and
addb
cmp
and
ds
ret
jg
outsb
addps
or
xlat
push
imull
and
pop
stc
dec
xchg
sbb
aam
cltd
sbb
ds
or
pop
or
add
pop
gs
xchg
sub
mov
inc
or
push
adc
adc
xchg
pop
fiaddl
loope
jmp
and
add
sbb
pminub
cli
or
xor
cs
adc
jmp
xor
ret
cltd
jge
pop
in
popf
mov
sub
mov
lret
pop
out
out
mov
push
and
pop
push
or
push
cltd
rcrl
das
cmpsl
icebp
cmp
mov
arpl
int
push
xlat
out
pop
mov
push
lods
pop
or
pop
repz
in
and
or
cmc
xor
test
dec
push
sbbl
add
push
adc
add
pop
fistpl
lods
xchg
inc
push
cltd
leave
packssdw
pop
pop
cmp
push
orb
add
adc
dec
sbb
sbb
sub
ss
and
test
fs
pop
das
pop
test
cmpsl
sbb
or
or
in
pop
inc
xchg
jl
push
roll
and
add
lods
inc
xor
pop
jns
dec
aaa
jmp
dec
bound
popf
adc
pop
sbb
inc
add
mov
das
cwtl
jne
or
push
sub
pop
and
and
fldenv
inc
push
sub
mov
xor
cmpl
imul
scas
xchg
ret
sub
or
leave
xchg
add
cmp
adc
push
fisubrl
jecxz
cwtl
movsl
sbb
pop
stos
xor
pop
pop
or
jbe
adc
or
filds
mov
mov
movsl
sub
or
or
and
test
inc
mov
popa
xor
test
or
push
rcr
hlt
mov
cmp
jns
sub
and
adc
aam
add
mov
or
pop
pop
std
setbe
mov
lret
daa
cli
sbbl
outsl
cli
jecxz
ds
or
cs
sbb
lahf
push
or
popa
dec
or
mov
scas
notl
daa
dec
dec
icebp
xor
sbb
cwtl
es
mov
xor
pop
xchg
pop
dec
jmp
test
mov
imul
mov
dec
xor
js
push
lahf
cmp
popf
jnp
movsl
nop
cmp
fsubs
inc
orb
fsts
add
mov
sbb
sub
ficompl
icebp
pusha
cmp
popa
cmp
adc
pop
add
xchg
add
into
ss
adc
pop
sub
mov
cmp
daa
ds
mov
jbe
pop
in
sbbl
fucom
sbb
xor
add
push
cltd
sbb
sbb
lea
pop
xor
or
and
push
cmp
adc
cmp
imul
pop
sbb
les
xchg
sbb
pop
xlat
aaa
push
gs
sbb
push
and
test
imul
sbb
outsb
fistpll
push
jmp
dec
sbb
inc
dec
gs
add
pop
and
adc
dec
jmp
xor
xchg
sbb
push
sbb
mov
addr16
rcll
sbb
jno
cs
inc
jmp
xor
bsr
sbb
xchg
pop
cmc
sub
cltd
mov
inc
push
or
add
sub
lret
or
xchg
push
sbb
lds
sbb
xchg
inc
push
scas
mov
js
push
or
movsl
xchg
cltd
and
cmp
mov
mov
or
mov
roll
outsb
aam
sub
add
arpl
add
outsl
xorb
adc
dec
sub
aaa
nop
xor
cltd
mov
jno
pop
or
dec
push
arpl
testl
xor
xor
inc
test
xchg
add
add
sub
pop
fsubp
movhps
sbbl
adc
and
adc
aad
sbb
cs
fistpl
jb
add
or
push
adc
pop
lds
jecxz
setno
test
test
leave
sub
pop
fldt
std
ficompl
adc
xor
sub
sub
sub
pop
pop
aad
jns
push
sbb
fstps
sub
push
es
sub
push
push
insl
xor
push
cs
lods
add
xlat
dec
add
push
mov
jne
ja
es
adc
push
inc
sbb
xchg
and
add
insl
add
js
sbb
ret
cmp
test
in
push
int3
mov
xor
pop
jns
jae
pop
jnp
pop
pop
adc
icebp
adc
fldcw
dec
cvttps2pi
xor
xchg
and
mov
pop
mov
cltd
pop
dec
repnz
incl
xor
scas
and
mov
pop
pop
sbbl
pop
adc
push
mov
sarb
movsb
pop
xchg
mov
xorb
and
jmp
xchg
movsl
adc
push
sbb
andl
pop
xor
leave
stc
pusha
or
jecxz
mov
int3
sub
lds
pop
fildl
test
jns
pop
test
pop
push
loope
fistps
add
and
gs
xchg
inc
jns
mov
or
jecxz
adc
lea
push
xchg
pop
dec
pop
les
or
rcll
mov
mov
mov
cltd
jecxz
inc
ja
push
shrb
cmp
cmpsl
sbb
ficoml
pop
add
aad
xor
inc
pop
push
xlat
jle
pop
fisttpl
mov
push
mov
mov
mov
pop
test
hlt
add
adc
jno
mov
xlat
adc
stc
mov
jecxz
dec
xor
mov
sbb
or
insl
or
pop
push
inc
jnp
cltd
in
not
sub
and
push
pop
mov
arpl
and
add
pop
cwtl
inc
aaa
jns
gs
dec
sub
out
xor
testl
mov
jne
xor
in
cwtl
lods
jns
pop
ja
popf
mov
das
cmc
arpl
in
fcomi
sbb
mov
mov
cmp
xchg
or
push
mov
xor
stos
jns
mov
mov
cmp
or
or
adc
int3
repz
stc
mov
sbb
and
test
mov
pop
sub
aaa
lret
jge
and
push
sub
lcall
pop
push
and
fisttpl
pop
mov
imul
push
fistl
jns
js
add
sub
jae
fstl
lods
dec
adcl
xor
popl
dec
daa
jo
and
mov
push
xchg
cmp
cs
and
movsl
ret
and
fwait
adc
xchg
sub
adc
es
out
sbb
jne
mov
pop
and
xor
lahf
dec
push
jne
test
xchg
or
pop
xchg
rcrl
adc
fwait
nop
adc
mov
sbb
push
movsb
pop
xchg
insb
jno
fwait
sub
lret
push
xor
stos
cmp
icebp
and
test
pop
jge
fldl
push
push
mov
xchg
cmp
movsl
sbb
jno
aad
inc
fidivrs
sti
aas
pop
cmc
ss
pop
lods
xchg
loope
jmp
stos
das
or
mov
add
fwait
cmp
xor
andl
and
and
cltd
pop
fwait
rorl
ror
cmpsl
imul
push
pop
push
repz
das
lea
pop
or
fildl
pop
jmp
lret
imul
push
or
fstpl
cs
test
pop
mov
dec
push
push
mov
sub
xchg
xor
jae
sbb
ret
and
shll
or
fld
or
lock
leave
dec
jns
xchg
sub
out
ja
pop
xor
jbe
pop
push
cs
adc
pop
xchg
fnstcw
or
xor
pop
mov
sbb
dec
ret
fwait
in
or
test
movsl
ljmp
dec
push
add
add
and
dec
inc
xchg
push
jns
pop
pop
add
inc
xlat
test
pop
inc
adc
mov
fadds
jns
pop
sbb
pop
pop
test
icebp
es
xor
testl
or
gs
and
mov
daa
arpl
imul
pop
adc
popa
rorb
les
ret
es
sub
xchg
pop
jne
push
mov
jno
lret
jns
scas
or
imul
rorl
insl
push
clc
and
mov
sbb
sbbl
adc
stos
cmpsl
das
sahf
pop
andl
test
dec
sub
jge
and
push
add
xchg
jmp
cmp
sbb
xchg
pop
sbb
insl
adc
pop
cmp
mov
aad
je
jns
mov
mov
pop
arpl
add
adc
lods
and
daa
xchg
add
std
imul
test
mov
xor
pop
and
xor
push
cwtl
xor
mov
mov
xor
or
int
imul
push
sub
hlt
pop
pop
mov
pop
test
arpl
jb
jp
fbld
xchg
pop
adc
sti
push
xor
ficoml
mov
dec
pop
mov
pop
scas
add
lods
jo
imul
xchg
push
fistpl
mov
loop
jns
imul
imul
or
cmpsl
dec
test
popa
and
cld
xchg
mov
cltd
pop
sub
es
test
pop
orb
sbbl
insb
stos
adc
out
lea
xchg
mov
lds
xorl
int3
mov
rcrl
push
dec
pop
stos
adc
dec
sub
movsb
gs
js
or
pop
lods
bound
lods
shrb
jae
mov
push
sbb
sub
push
jecxz
es
and
popf
int3
and
pop
sub
mov
xor
push
pop
pmulhw
and
adc
add
cs
fwait
ja
push
pop
or
iret
nop
ss
sub
pop
mov
and
pop
aaa
mov
jmp
imul
xchg
jae
adc
or
sbb
pop
add
or
dec
push
adc
pop
inc
mov
enter
pop
mov
pop
rcl
pop
push
or
sub
test
iret
dec
pop
movsl
push
xor
inc
cmc
outsl
dec
inc
add
sbb
sbb
xchg
pop
mov
loope
jns
pop
mov
scas
ljmp
jmp
lds
orl
add
mov
es
stos
pop
add
mov
insl
fimuls
out
cltd
sbb
mov
jae
stc
loope
sbb
mov
adcl
imul
and
and
xchg
xchg
rcrl
dec
pop
and
jmp
clc
pop
fwait
or
adc
and
sbb
adc
and
jmp
mov
adc
insl
rdtsc
or
and
scas
and
sub
add
sbb
arpl
mov
and
cmc
inc
outsl
test
pop
mov
rcrl
pop
cmp
aaa
mov
addps
jecxz
add
pop
adc
lahf
mov
xor
cmp
mov
subl
shrl
stc
nop
push
ret
cli
xor
imull
pop
inc
adc
inc
stc
flds
and
dec
mov
pop
pop
mov
test
cmp
pop
adc
pop
ret
push
sbb
mov
in
mov
or
mov
sbb
sbb
inc
cmp
cmpsb
cs
lds
movsl
lds
ds
out
mov
dec
lret
pop
pop
inc
or
stos
adc
cmp
cmp
xor
jg
fldcw
outsl
or
pop
and
leave
inc
jp
pop
dec
fnstcw
cltd
or
int3
imul
push
sbb
pop
ret
sub
cmc
pop
cmp
mov
push
popaw
xor
insl
insb
fisttpl
push
push
jnp
pop
lret
aaa
mov
and
or
int3
mov
mov
sub
jno
xchg
and
fnstenv
pop
dec
and
adc
pop
cs
out
xchg
mov
stos
pop
bound
jae
xor
xchg
shrl
addl
and
test
jns
add
imul
mov
mov
fstl
sub
sbb
jecxz
pop
sbb
rcrl
orb
pop
xor
mov
sbb
int
mov
mov
sarl
popf
out
push
test
mov
out
xor
xchg
push
pop
es
dec
adc
addr16
dec
arpl
out
mov
stc
add
lcall
andl
sub
mov
xchg
push
rcpps
call
inc
lea
jno
fstpl
decl
mov
sbb
mov
cmp
mov
pop
adc
iret
mov
jecxz
lret
dec
or
mov
and
sbb
push
fidivrl
adc
jge
sbb
mov
pop
push
xchg
cs
pop
or
les
fcompl
sbb
lds
adc
dec
pop
push
mov
cmp
int3
pop
ljmp
sbbl
mov
add
pop
mov
mov
fwait
add
cmp
stc
dec
mov
cltd
fisubl
push
add
cmp
idiv
pcmpgtd
in
jae
push
clc
xor
ja
pop
adc
dec
jns
adc
or
and
adc
dec
inc
gs
pop
loop
aas
xchg
adc
or
pop
cmp
push
or
imul
push
xchg
imul
dec
push
fistps
mov
sub
imul
xorb
cmp
push
addl
lds
xchg
cmp
push
cwtl
test
xor
movsl
jne
pop
lods
push
adc
push
lcall
clc
pop
jbe
jae
and
pusha
pop
lea
or
adc
dec
dec
scas
pop
popf
jne
mov
push
call
mov
xchg
add
sub
pop
fildll
lret
or
add
adc
or
pop
das
icebp
int
dec
or
gs
pop
sub
or
notb
cmpsl
pop
xorl
outsl
push
sbb
xor
pop
and
enter
ss
adcl
and
cs
mov
subl
pop
fldenv
or
pusha
int3
or
int
cmc
dec
inc
mov
xor
xor
out
and
pop
sub
pop
xchg
imul
or
xchg
jmp
pop
dec
aad
and
dec
pop
test
or
pop
sarb
into
and
lods
cmpsb
pop
andl
pop
mov
pop
iret
mov
movsl
sbb
or
or
rolb
cmp
xor
dec
and
inc
push
inc
icebp
xlat
inc
arpl
sub
sbbl
leave
roll
xchg
pop
imul
push
mov
lahf
sbb
in
test
or
sub
pop
sbb
push
ret
mov
push
push
xchg
sbbl
sbb
push
and
fstpl
stc
pop
or
stc
pop
mov
jge
stos
mov
and
mov
lret
or
lods
fisttpl
push
mov
jge
sub
dec
lret
stos
inc
adc
psubw
pop
lods
mov
dec
and
mov
sub
mov
mov
cltd
jbe
pop
ss
and
popa
sbb
push
adc
adc
inc
pop
aaa
push
fwait
xor
jne
xchg
pop
sbb
adc
mov
pop
lods
and
lcall
inc
int
icebp
xchg
pop
aad
sbb
xor
jns
or
add
sbb
daa
mov
push
out
push
pop
jg
mov
push
sbb
mov
icebp
sbb
mov
insl
imul
or
mov
dec
sbb
fsub
in
aam
lds
xchg
pop
jmp
sbb
divb
sahf
stos
pop
mov
in
dec
cli
push
xchg
pop
adc
adc
pop
push
pop
lods
imul
jns
pop
cltd
xchg
sub
xchg
pop
pop
jns
push
loope
xchg
push
xor
dec
subl
adc
sbb
mov
lahf
pop
fistl
inc
push
mov
push
cmpsb
rorl
shrb
cmp
pop
es
sbb
pop
aad
push
ja
push
pop
in
mov
adc
pop
xchg
test
pop
loop
sub
mov
sti
test
pop
xor
out
mov
sbb
arpl
pop
inc
lcall
push
jge
fwait
and
fsub
cs
push
push
imul
aad
dec
testl
aad
int3
enter
fidivrl
pop
dec
push
popf
jae
leave
out
or
jne
rcr
pop
pop
or
push
lret
lods
mov
fcoms
xlat
cmp
dec
xchg
pop
or
sub
arpl
ja
inc
ret
mov
lcall
push
lret
pop
jmp
dec
rcll
lods
stc
ja
pop
inc
cmc
xor
jne
sub
or
in
lret
pop
cltd
cmpsl
jg
popf
push
arpl
sbb
sbb
out
int
imul
cmp
sub
out
faddl
insl
mov
call
mov
mov
mov
fisttps
fldl
or
in
cs
jmp
decl
dec
mov
fwait
and
inc
rcr
fmuls
mov
stos
pop
das
sbb
ds
ficomps
or
cltd
mov
pop
push
test
pop
fldcw
insl
pop
push
xchg
mov
push
pop
lds
jno
sub
xor
repnz
sbb
jmp
sbb
pop
push
jne
xchg
mov
pop
stos
stc
ds
cltd
gs
pop
mov
jns
push
repz
loop
sarl
jge
xor
out
push
mov
movsl
pop
mov
pop
lea
cmp
adc
add
out
or
sbbl
pop
sbb
and
ret
inc
jb
aaa
mov
pop
test
rcll
cmp
push
popf
xor
lds
dec
xor
dec
xchg
sbb
in
test
cltd
push
adc
push
out
movsl
test
lcall
xor
repz
and
pop
sub
sbb
pushf
pop
push
pop
mov
cmp
rcll
test
in
enter
jge
pop
call
sub
fbstp
xor
inc
xchg
sub
push
out
mov
aad
enter
out
lods
dec
or
nop
cltd
pop
imul
repz
fisubrl
sub
dec
or
dec
ss
aaa
mov
inc
sbb
std
and
out
aam
pop
adc
dec
and
xchg
mov
fstps
mov
mov
and
sbb
stos
in
sub
cli
loop
add
push
repnz
aas
inc
cwtl
push
scas
sbb
xchg
pop
mov
sbb
and
icebp
lods
ljmp
test
pop
add
cmc
mov
mov
data16
push
leave
and
das
in
adc
mov
push
aaa
mov
push
sub
mov
or
subb
mov
push
stos
push
movsl
cmp
add
dec
push
pop
dec
loop
scas
pop
dec
jns
mov
inc
xchg
jecxz
cmp
js
cmp
dec
adc
pop
adc
cmpsb
dec
push
nop
arpl
pop
push
dec
or
mov
push
daa
push
insl
xor
xor
pop
push
add
fstpt
inc
sub
push
pop
mov
push
mov
dec
sti
loop
sbb
pop
add
addps
aas
jnp
pop
stos
sbb
xchg
xor
mov
pop
mov
pop
gs
push
mov
and
and
movsb
push
jnp
inc
pop
aaa
add
movsl
aam
adc
lods
xor
lahf
pop
scas
sbb
test
cwtl
ss
adc
adc
push
std
das
jl
xchg
loopne
addr16
sub
sbb
loop
mov
xchg
ss
push
aad
xor
add
adc
add
xor
inc
push
xchg
sbb
jmp
or
pop
test
adc
movsl
and
jns
pop
add
push
cmp
lret
mull
push
adc
xchg
lods
pop
jmp
dec
jns
rdmsr
gs
repnz
js
sbb
and
fbstp
inc
pop
ds
sbb
cltd
lret
push
add
loope
sbb
js
fcomps
ljmp
into
mov
psrad
push
push
cltd
mov
and
adc
push
xlat
adc
xchg
push
mov
push
lods
adc
pop
sub
cmp
mov
cmpsl
pop
shrl
test
xor
xchg
nop/reserved
mov
std
pop
sbb
mov
push
pop
test
in
sub
sub
push
js
sub
inc
push
and
mov
cld
pusha
mov
sub
mov
push
dec
inc
aaa
pushf
sbb
pop
xor
pop
sbb
pop
dec
mov
sbb
testb
sbb
lcall
pop
add
movaps
xor
push
pop
ja
dec
std
outsb
push
gs
dec
xchg
mov
sub
pop
and
stc
fidivrl
cmp
aad
sbb
pop
push
sbb
adc
jne
sbb
or
pop
aas
xchg
dec
dec
push
nop
punpcklbw
mov
sahf
lds
cmp
jb
xor
in
or
push
das
dec
stc
pop
inc
adc
xchg
and
push
cmc
add
pop
icebp
cmpb
jecxz
addr16
or
cmp
lods
cwtl
imul
mov
fildll
mov
insb
xchg
jno
loopne
jecxz
leave
add
mov
call
push
lds
pop
push
sti
addb
mov
cmpsl
inc
cmp
lret
test
adc
stos
sub
out
xor
dec
cmp
stc
fadds
and
mov
sub
and
pop
std
loope
add
dec
bound
shrb
cwtl
sbb
jne
inc
ficompl
inc
push
aaa
fnstcw
adc
sbbl
sbb
xchg
mov
jecxz
pop
push
cs
repnz
sbb
pop
adc
adc
push
loope
add
rcrb
sub
rolb
lea
pop
and
pop
xor
inc
pop
in
lret
sub
ss
jmp
adc
fucomp
xor
setno
or
push
stc
xor
mov
mov
sub
push
dec
in
dec
and
sbb
fwait
outsb
add
cmpsb
das
push
pop
pusha
inc
lds
pop
pop
fsts
and
mov
push
repz
aad
push
test
push
pop
stc
pop
arpl
aam
aaa
xchg
mov
sub
sbb
mov
pop
mov
cvtpi2ps
lods
pop
fisttpl
sbb
jns
aad
pop
andl
jne
dec
inc
xor
stos
sbb
es
outsl
pop
and
dec
cmp
ret
mov
push
mov
ss
jae
sub
aad
mov
sbb
inc
cmpsl
push
popa
sub
mov
sbb
aas
push
pop
inc
cmp
push
push
xor
dec
lds
pop
aad
mov
mov
mov
jae
mov
pop
xor
sub
adc
in
push
mov
fldt
cli
int3
nop
pop
imul
leave
pop
sbb
daa
lahf
sub
es
outsl
sbb
and
sub
pop
loope
push
notb
popf
pop
and
pusha
sub
jno
xchg
imul
pop
pop
sti
cmp
test
mov
stos
inc
pop
pop
cmp
lea
dec
xor
inc
or
xchg
sbb
dec
mov
sbb
mov
jg
clc
push
dec
push
imul
rclb
and
pop
add
or
imul
mov
push
int
or
or
jmp
xor
mov
pusha
ds
push
ror
fmul
mov
cmp
adc
mov
jp
cmp
jecxz
and
pop
push
inc
xlat
or
in
pop
cltd
add
sub
dec
mov
jmp
js
test
pop
jo
push
mov
out
insl
or
or
orl
xchg
pop
push
lea
fs
dec
orl
mull
pop
pop
mov
mov
dec
test
sbbl
cmp
pop
cs
pop
pop
and
xchg
into
roll
mov
aam
insl
xor
push
pop
scas
jecxz
pop
dec
std
push
sbb
add
mov
push
ljmp
inc
add
or
pop
add
push
push
push
mov
xchg
sbb
or
cmp
aaa
outsb
inc
lret
adc
cmp
out
movsl
xchg
sbb
test
push
jge
fidivl
inc
sbb
xlat
stos
xchg
xchg
jnp
push
mov
leave
insl
pop
add
xchg
mov
xchg
arpl
dec
inc
jbe
gs
stos
cmp
pop
mov
es
repz
sub
and
movb
adc
fimull
std
insb
aas
pop
jecxz
testl
ret
jo
bound
pop
ljmp
push
dec
sbb
cmp
pushf
or
push
pop
fbld
sarb
or
and
jbe
fucom
js
mov
mov
sub
stos
pop
xor
jbe
xor
jecxz
pusha
add
push
gs
je
dec
fs
jnp
jae
jns
jb
imul
es
push
lret
bound
jcxz
add
mov
adc
je
pop
fs
or
cmpsw
xchg
cli
dec
pop
or
or
and
sbb
add
sub
add
push
rcl
rorl
enter
cmpb
outsb
inc
pop
mov
pusha
loop
pop
sub
pop
subl
inc
and
push
imul
mov
ljmp
dec
outsl
mov
addr16
mov
or
jnp
loopne
mov
call
inc
xor
push
mov
movsl
rcrl
pop
repz
adc
push
pop
push
mov
imul
jmp
push
rcrl
cmp
dec
inc
inc
dec
pavgb
pop
outsl
das
and
fdivl
lods
sbb
pop
arpl
mov
jns
or
rclb
ret
push
sub
or
pop
arpl
pop
sbb
mov
mov
icebp
and
inc
loope
mov
adc
push
rorl
lds
movsb
xchg
fistl
xchg
pop
sbb
pop
imul
push
fs
pop
popf
pusha
lahf
inc
pushf
ds
cmp
and
mov
pusha
pop
mov
add
es
jmp
and
inc
sub
lea
pusha
jne
fmuls
push
pop
or
outsl
push
push
adc
scas
and
je
fwait
clc
mov
popf
bound
jge
insl
pop
imul
jno
inc
or
and
fisttps
dec
hlt
dec
lods
dec
push
pusha
push
pusha
push
pusha
push
pusha
push
pusha
push
pusha
push
aam
pop
push
popf
outsl
jb
stos
xchg
je
jae
jbe
pop
cwtl
js
int3
jp
cmp
jl
push
or
adc
pop
add
ja
inc
js
mov
jnp
popa
push
fisttps
leave
mov
or
adc
sub
jns
and
pop
pop
add
xchg
or
pop
ss
data16
dec
bound
imul
sbb
push
addr16
pop
adc
sbb
xor
cmp
dec
mov
ljmp
xchg
xor
inc
xor
mov
mov
mov
push
fildll
aas
movsb
ret
lahf
sub
cwtl
push
xchg
pop
nop
jmp
mov
xor
push
push
cmp
and
push
ss
pop
xor
cmp
push
fisttps
dec
pusha
iret
dec
mov
sub
push
pop
cli
and
pop
leave
pop
in
jae
cmp
push
jp
dec
push
and
leave
push
in
jae
dec
cmp
dec
rorl
dec
xchg
dec
leave
jns
inc
jae
inc
cmp
negl
push
inc
sbbl
cmp
gs
push
js
jbe
pop
push
dec
inc
enter
mov
inc
dec
jmp
push
push
push
sub
and
sbb
push
pop
dec
ss
cmp
pop
sbb
sbb
pop
or
rcrb
xchg
fisubs
fbstp
lret
hlt
pop
xlat
mov
mov
cmp
cmp
xchg
pop
in
jo
retw
xor
lods
push
lods
js
rorb
xor
dec
push
jge
addr16
adc
imul
add
or
pop
jb
jl
mov
dec
shrb
inc
inc
pop
jmp
and
pop
shll
add
jno
adc
adc
pop
mov
and
inc
sbb
sti
mov
call
clc
xor
mulb
or
hlt
and
mov
mov
jns
mov
lock
out
pushf
xor
lock
enter
ljmp
inc
jns
mov
pop
adc
pop
push
ds
push
mov
dec
push
mov
xchg
loope
mov
mov
adc
fisubs
frstor
faddl
pusha
fistl
mov
outsl
pop
test
inc
lods
xlat
mov
fs
es
sbb
and
cmc
mov
mov
sub
dec
mov
int3
outsl
push
fxch
pop
fs
jl
jl
test
pop
xchg
inc
testl
push
push
ret
fxch
and
lcall
rcrb
xchg
mov
testb
push
cmpl
mov
mov
jecxz
mov
out
mov
mov
mov
adc
loop
lock
icebp
ret
pop
in
out
push
ret
mov
pop
or
mov
mov
sarl
xor
jecxz
add
mov
cmpsl
mov
cli
xor
pop
ret
mov
int3
jbe
imul
adc
mov
shll
fcomp
loop
pop
test
mov
sar
mov
je
mov
sarb
xor
add
fdivl
mov
jns
idivl
sahf
push
mov
int3
in
dec
imulb
in
and
sub
ljmp
aas
loope
mov
cld
xlat
mov
popa
test
mov
xchg
push
aam
or
rorl
bound
arpl
pop
xchg
mov
mov
stos
mov
pop
sbb
xlat
inc
mov
sbbl
ss
repnz
outsl
dec
pop
push
and
pop
or
sub
xchg
xchg
sti
arpl
sub
pop
or
xlat
fistps
mov
out
ss
es
cmp
dec
fistl
sub
push
dec
jns
lahf
movsl
mov
fnstcw
push
dec
push
insl
cltd
mov
and
fsubrs
push
cwtl
sbb
inc
sub
mov
mov
sti
sti
aas
int
push
cwtl
dec
inc
popa
shrb
xor
push
lock
add
mov
cmpsl
sbb
mov
push
dec
cld
xchg
cmp
jno
and
adc
mov
push
pop
adc
pop
movsl
out
ret
ljmp
repz
xor
push
mov
jecxz
int3
ret
push
mov
enter
or
mov
sbb
pop
icebp
push
pop
xchg
adc
or
rcl
repnz
jns
cmp
push
jno
es
xchg
out
cmp
pop
sar
orl
dec
stos
fsubs
pop
push
cmp
ds
mov
fisubs
or
push
pop
int
push
pop
loope
loope
inc
dec
iret
test
sbb
push
dec
cld
into
outsl
pop
fbstp
inc
test
push
int3
icebp
xor
push
cmpsl
mov
sub
out
cli
mov
push
jns
add
into
lods
cmp
test
cmpl
xchg
cmp
mov
adc
lahf
mov
and
push
mov
add
stc
lcall
pushf
lea
mov
popf
aad
mov
cmp
push
icebp
dec
fmuls
jns
cld
mov
push
xor
pop
jmp
or
lods
mov
mov
mov
pop
mov
push
in
int3
cld
pop
mov
outsb
mov
pop
roll
cwtl
and
jmp
insl
dec
sub
mov
push
pop
enter
jl
mov
pop
mov
cs
add
xor
pop
mov
pushf
inc
and
mov
rorl
and
push
cmp
or
push
aad
dec
fsubs
cs
out
pop
and
xor
mov
pop
sbb
fwait
lret
arpl
outsl
xor
cmp
xor
and
sbb
jecxz
xchg
adc
cmp
lods
int
test
movsl
in
push
dec
or
mov
lret
sti
lret
arpl
sbb
aam
in
push
not
jno
lods
dec
imul
mov
xchg
rorl
cltd
lret
or
fdivr
push
dec
ss
add
sub
mov
jae
lret
pop
test
and
mov
dec
mov
into
push
cs
push
pop
xlat
stos
xchg
mov
inc
adc
jbe
lods
adc
nop
insb
stos
daa
aas
pop
inc
cmp
lret
out
popa
gs
mov
pop
ss
loop
inc
inc
or
dec
inc
in
pop
jnp
inc
cmc
popf
pop
lds
push
out
inc
stc
dec
mov
and
sub
pop
shlb
rcll
sub
aam
in
sbb
adc
cltd
dec
mov
push
cmpsl
ja
inc
ficoml
push
pop
cmp
jb
daa
jne
or
cmp
push
loopne
hlt
push
or
pop
sub
aam
sarl
ret
pop
cld
fistps
pushf
std
dec
xchg
popa
pop
sbb
testl
shlb
mov
loop
dec
stc
push
inc
xchg
cmp
pop
inc
icebp
loope
shll
daa
gs
pop
inc
sbb
or
cltd
aas
inc
dec
pop
xchg
pusha
and
bound
add
sub
jmp
or
int
mov
sbb
xchg
cltd
push
into
int3
adc
fwait
nop
leave
push
ret
rcll
or
out
int3
fisttps
jmp
sbb
stc
cmp
adc
xchg
xchg
or
dec
jae
lea
mov
dec
dec
or
jmp
xor
inc
mov
inc
fcmovb
adc
sti
dec
insl
popa
andl
ret
sbb
call
sub
test
pop
push
cmp
jbe
sub
pop
and
pop
dec
cltd
add
test
push
orl
lods
or
push
jno
sbb
imul
fwait
sbbl
push
movsb
jo
arpl
add
inc
adc
push
stc
scas
inc
or
ds
adc
adc
and
sbb
loopne
imul
rclb
stc
roll
ret
dec
rclb
ja
jmp
jb
pop
mull
and
lea
test
call
pop
aam
int
xchg
sub
pop
test
imul
mov
push
or
adc
imul
mov
out
mov
mov
int
pop
mov
pop
leave
dec
mov
adcb
cwtl
arpl
pop
int
and
and
fcom
pop
leave
sub
pop
or
mov
push
loop
dec
cltd
or
mov
push
cmpb
sbb
ss
sub
jbe
and
les
xchg
clc
jge
nop
inc
pop
jno
and
dec
push
dec
fisttpll
popa
push
cltd
cld
fdivr
adcl
lds
push
fcomi
push
pop
pop
push
outsb
data16
rcrb
adc
or
pop
rorb
pop
or
in
xchg
push
int
pop
fsubrs
xor
cmp
add
int3
jle
insl
pusha
fnstenv
or
push
inc
dec
dec
cmp
add
bound
in
leave
pop
fsts
and
pop
idivl
cwtl
inc
mov
push
sti
hlt
mov
add
pop
outsb
test
push
popf
icebp
push
pop
jae
rcrl
arpl
stc
xchg
inc
mov
add
push
pop
jno
jl
imul
mov
jae
push
pop
xchg
fldcw
jns
inc
pop
mov
and
sbb
in
cmpl
rorl
insl
push
das
outsl
ds
mov
icebp
xor
out
push
jbe
pop
cmc
sub
push
int
xchg
sbb
jae
xchg
pop
dec
leave
loopne
push
fbstp
or
xlat
stc
push
cltd
jo
mov
pop
rolb
dec
rcll
pop
lds
fldl
sti
gs
ljmp
or
dec
ja
inc
push
insl
cmpxchg
pop
push
lds
xor
je
jne
push
dec
pop
fcmovnu
inc
xchg
lock
and
int
pop
mov
je
fistpll
inc
pop
pop
jnp
xor
faddl
xchg
inc
push
cmp
lret
xchg
sub
push
mov
adcl
cwtl
rorl
jbe
sbb
sub
pop
push
jo
arpl
mov
inc
inc
dec
in
adc
sbb
dec
dec
sbb
lcall
outsb
sub
push
cwtl
xchg
repz
pop
shrl
jg
xor
cltd
ret
push
inc
out
or
and
and
dec
push
inc
pop
push
dec
cmp
push
repz
mov
sbb
inc
loope
pop
mov
mov
gs
mov
fdivrs
loop
xor
mov
mov
hlt
pop
add
jae
bound
imul
daa
and
orl
sbb
inc
dec
inc
push
aaa
stc
cmp
sub
pop
cltd
lds
xchg
jb
je
sub
xorl
mov
hlt
movsb
es
push
stc
xor
ja
fcomp
sbb
nop
and
push
js
pop
iret
gs
lahf
push
add
dec
cmp
pop
leave
sbb
lret
add
dec
jbe
mov
clc
push
arpl
or
jg
inc
pop
jo
pop
gs
enter
cmp
mov
stos
xchg
mov
arpl
push
fcom
or
ss
test
push
nop
test
mov
pop
push
dec
sbb
cmp
sbb
and
fistl
push
filds
xchg
movsb
loope
mov
jbe
fwait
je
or
sbb
sbb
cmpsl
pop
test
loope
push
jno
pop
insb
push
ret
gs
push
add
adc
xchg
mov
xchg
fistl
pop
cmc
fisubrl
lret
aam
outsb
sub
sbb
movsl
pop
in
xchg
sbb
mov
mov
jno
pushaw
mov
addr16
call
or
pop
insb
jb
cmpsb
cmp
jae
dec
loope
loope
xchg
cmp
push
add
jp
pop
scas
out
or
cmp
test
push
stc
adc
and
leave
xchg
fbld
mov
sbb
lea
lock
gs
popa
pop
pop
pop
pop
fstl
fmull
pop
xchg
fs
fs
dec
xor
mull
or
cmc
xchg
gs
or
dec
in
rcr
int
lds
test
clc
adc
dec
std
push
add
sbb
cwtl
movups
or
xchg
push
and
push
or
gs
orb
push
or
adc
je
sbb
and
aaa
fstpl
inc
and
ss
push
dec
push
xor
pop
lcall
cmpsl
aad
outsb
and
bound
std
mov
and
jae
pop
lcall
xor
adc
jno
pop
mov
inc
xchg
fadd
sbb
push
inc
add
dec
mov
inc
push
movsl
add
xchg
and
dec
or
mov
jg
xchg
test
lret
xchg
repnz
jnp
push
mov
in
addb
mov
cmp
cmp
pop
pop
pop
into
xchg
mov
push
cltd
or
pop
push
test
sub
cmp
loope
fidivl
jg
cmp
jmp
fisttpl
adc
jecxz
test
pop
jge
inc
or
add
sbb
xchg
and
inc
lods
adc
es
iret
sbb
cmc
xchg
inc
sbb
sbb
es
pusha
sbb
cli
mov
sbb
jmp
cmpsb
jmp
int
adc
or
jl
and
dec
punpcklwd
rcll
xor
ret
push
cltd
imul
incb
push
inc
pop
add
in
add
shl
pop
adc
cmp
and
imul
mov
fistl
lret
lahf
pop
icebp
adc
push
loop
push
ljmp
cltd
or
pop
jno
popa
dec
add
push
leave
and
push
adc
pop
shld
cwtl
add
cmp
push
dec
push
push
lock
xchg
push
dec
push
fstpt
jecxz
leave
mov
cwtl
adcb
adc
pop
adc
xchg
sbb
cmp
dec
ret
fsts
pop
rcrl
je
daa
sahf
mov
push
mov
pop
cmc
lods
addr16
stc
fnstenv
pop
dec
cmpb
icebp
adc
xchg
sub
ds
add
frstor
lcall
or
add
out
sub
cmpsl
or
cmp
mov
dec
jmp
xor
xchg
push
fwait
xchg
mov
mov
mov
adc
pushf
ljmp
sbb
pop
sub
cmp
mov
dec
orl
mov
iret
js
add
cmpsl
in
or
pop
and
inc
dec
pop
xchg
jae
sbb
inc
cmpsl
lods
pushf
pushf
lret
pushf
jmp
decl
sub
dec
inc
push
push
outsl
pop
adc
xchg
iret
pusha
out
pusha
hlt
ljmp
inc
je
lahf
push
or
mov
xlat
imul
adcb
push
popa
and
jns
fimull
mov
test
cmp
or
dec
ret
leave
test
mov
push
addb
sbb
inc
jb
dec
std
and
pop
and
icebp
scas
pop
push
mov
call
mov
push
pop
adc
icebp
cmp
xchg
add
sbb
lcall
inc
sub
dec
cltd
mov
call
jo
dec
das
divps
cmpsb
pop
lock
dec
icebp
lods
or
push
and
clc
mov
inc
fdivr
stc
add
mov
fdecstp
mov
pop
ret
or
pop
push
popl
leave
mov
mov
jp
xor
and
mov
int3
pop
or
or
cltd
inc
sbb
jl
dec
cmc
arpl
cmp
pop
pop
dec
js
iret
or
repz
scas
xor
mov
pop
push
push
andb
aaa
test
pop
out
mov
mov
lods
pop
orb
jb
mov
xor
js
add
aam
jns
lcall
pop
out
mov
imul
adc
cmc
adc
adcl
ds
sbb
sbb
out
int
iret
cmp
ret
aam
add
pop
sub
sahf
push
pop
rcrl
daa
add
sbb
test
jb
add
xchg
inc
or
mov
mov
jge
pop
cli
shlb
nop
out
pop
mov
cmpsl
pop
rolb
dec
and
jnp
push
jo
loope
ljmp
xchg
test
cmp
cmp
clc
jno
jge
inc
cltd
fimuls
cld
in
jg
stos
push
inc
mov
int
repz
test
or
sbb
out
vmulsd
or
mov
rolb
inc
pop
data16
xchg
or
sbb
movsb
inc
psubsw
pop
push
jbe
addb
dec
pop
inc
in
test
push
mov
jle
cmc
out
push
pop
aas
incl
add
cmpsl
icebp
mov
cmpsb
pop
lea
pop
pop
sbb
faddl
pop
push
sub
mov
pop
subl
add
add
popa
lds
jbe
cmp
into
imul
inc
jb
or
fcomps
jno
and
add
push
cmp
cwtl
test
pop
rol
add
jecxz
pop
sbb
adc
and
lods
arpl
add
mov
in
fidivl
pop
out
xchg
and
xlat
call
and
bound
and
xor
pop
loop
lds
mov
lret
adcl
push
and
push
or
pop
add
and
std
cmp
jnp
sbb
pop
ret
push
jge
adc
xor
xchg
cld
jns
and
cmpsb
cmp
pop
test
jmp
test
lods
xchg
jmp
pop
addr16
rcr
push
nop
cmp
fs
int
push
js
pop
test
xchg
cmpb
sti
cmp
sbb
pop
fs
inc
xor
lods
ds
and
mov
cmp
pop
fadds
cmp
pop
sbb
xchg
test
or
lcall
xor
and
dec
xchg
pop
pop
cmp
fninit
cmpsb
jns
pop
mov
mov
adc
pop
mov
pop
dec
in
xor
push
push
scas
pop
aas
iret
insb
adcl
jle
jmp
call
pop
mov
push
test
add
data16
rcll
jle
pop
fbld
leave
push
fisubs
dec
push
loope
fiaddl
sbb
popa
cmp
mov
xchg
out
movsl
dec
push
js
cwtl
push
clc
rcrb
sub
lahf
dec
jno
cmp
je
pushf
imul
jp
jne
sahf
push
fstl
pop
mov
pop
push
imul
inc
sub
jp
cmp
sbb
cmp
popa
xor
sbb
mov
adc
arpl
jp
test
ss
or
jl
push
daa
test
ja
xor
pop
inc
sbb
lcall
cmp
sub
cmp
jno
push
sub
cmc
arpl
andl
sub
out
stc
sbb
or
adc
popf
pop
jb
push
mov
out
pop
pop
sbb
and
pop
push
fsubs
push
cmp
mov
lcall
push
fs
adc
test
xchg
push
xchg
sbb
jno
sub
pop
mov
and
push
xchg
jmp
inc
dec
dec
sbb
cmp
enter
pop
inc
leave
mov
and
pop
inc
cmc
push
and
pop
cmp
imul
imul
fmuls
in
push
cmp
insl
das
dec
jae
clc
and
ret
adc
push
and
es
popa
add
imul
cltd
daa
mov
pop
jno
pop
pop
movsl
cmp
pop
fs
inc
dec
popf
sub
nop
dec
push
mov
push
xor
inc
lods
call
pop
dec
jmp
aad
jno
push
pop
dec
mov
xor
loope
test
sub
cmp
dec
fcmovnb
ficompl
aaa
ret
cmp
xor
insb
test
pop
cmp
imul
and
aas
pop
insb
mov
insl
pop
sub
pop
and
stos
test
inc
inc
pop
or
jo
mov
jno
and
xorl
push
dec
push
cmp
sub
inc
pop
and
pop
and
je
mov
push
dec
xor
pusha
shll
mov
pop
andl
rolb
xor
pop
push
xor
push
pop
adc
lret
rorb
ljmp
das
lods
sub
incl
mov
flds
setp
in
stos
das
fwait
jns
out
push
dec
sbb
sub
fstpl
std
cwtl
jmp
sub
ljmp
mov
das
loopne
je
pop
cmp
inc
outsb
push
and
pop
mov
mov
stos
test
jnp
mov
movsl
mov
mov
mov
lods
ds
outsl
flds
in
sbb
mov
out
cmpb
jnp
stos
jl
and
lret
cli
stos
and
test
mov
push
jl
dec
jmp
jno
cmp
sti
fstpt
cmp
hlt
jmp
addb
or
orb
fdivrs
std
js
in
jmp
in
mov
std
cwtl
mov
sahf
mov
dec
dec
mov
xor
inc
xchg
cli
cmp
stos
imul
cmp
jne
jnp
fldt
stos
mov
sti
dec
cmp
rcrl
mov
test
and
ja
rcrb
adc
sub
imul
push
mov
push
test
mov
loopne
std
jp
and
test
xor
fcompl
mov
lret
push
pop
jl
pop
cmp
sbb
adc
xchg
or
push
cmpb
sbb
dec
jecxz
xchg
adc
sbb
out
dec
jae
xchg
lcall
mov
or
jp
cmp
ljmp
lret
sub
adc
inc
outsb
pop
int
or
jg
lcall
ds
mov
inc
cmp
fists
jp
or
mov
daa
and
out
mov
mov
into
add
inc
mov
stos
insl
jecxz
or
fisubl
push
xchg
pop
and
shrl
lcall
js
jmp
shr
nop
pop
and
incb
mov
inc
sub
adc
ja
stc
inc
pop
stos
test
sti
push
jne
lret
cmp
xchg
dec
or
push
push
stc
and
inc
ljmp
fwait
push
xchg
mov
cmp
pop
ljmp
stos
jmp
or
ds
jne
fwait
dec
imul
cmp
mul
fiaddl
xorb
lret
stos
mov
push
ret
cli
push
pushf
pop
push
lahf
and
fnsave
aad
lcall
cmpsb
xor
sub
xor
test
push
sbb
dec
pop
lcall
and
nop
aas
add
out
mov
inc
and
stos
mov
mov
dec
lahf
sub
mov
xlat
mov
movsl
add
sub
rcl
sbb
dec
xchg
cmp
or
adc
sti
mov
push
jmp
or
pop
push
arpl
mov
push
xor
jl
or
dec
and
sub
sbb
cmc
dec
dec
adc
mov
incb
cwtl
lcall
aas
and
sbb
jecxz
cmp
aas
outsl
xchg
xchg
push
call
pop
call
imul
pop
fmulp
jae
push
cld
leave
pop
inc
inc
or
les
rcrb
ror
mov
fwait
mov
sbb
cltd
popa
in
sbb
std
js
dec
dec
fnsave
xchg
add
mov
cmpsb
mov
jno
xchg
in
jae
sbb
in
mov
lods
lahf
rorb
adc
test
pop
lcall
mov
mov
jns
cmp
ret
jne
ret
test
pusha
js
jmp
sbb
into
jae
mov
jo
lcall
pushf
push
sbb
lahf
push
ljmp
mov
add
repz
cmp
ljmp
sti
sbb
adc
push
mov
add
sbb
fisttpl
jae
push
mov
mov
ds
movsl
lods
mov
and
jno
mov
pusha
fs
jle
or
pop
fucomp
aad
cmp
push
ss
test
jb
push
pop
jae
pushf
xor
and
setle
ficompl
movsl
aam
in
mov
fcmovu
ljmp
les
inc
out
lret
mov
sbb
or
cmpsl
repz
pop
sti
mov
dec
mov
add
and
xor
sbb
mov
pop
xor
adc
dec
sbb
ds
inc
shrb
xchg
daa
fstl
jg
jno
sub
pop
je
push
dec
push
jecxz
cmp
fstpt
fidivrl
jge
mov
gs
mov
shrb
lcall
mov
push
test
imul
call
out
jmp
stos
lret
xor
mov
fimull
lret
call
add
xchg
dec
xchg
xchg
movsl
sbb
cmp
adc
push
inc
xor
mov
shll
push
rcrb
xor
ror
mov
lods
jg
rcl
xor
cmp
mov
iret
cmp
or
jg
negl
rcll
jmp
push
cld
sub
sbb
pop
mov
adc
mov
mov
sub
jle
push
add
xlat
mov
mov
jns
mov
lret
ja
ficoml
or
add
cmpsb
push
cmpb
out
adc
int
pop
cltd
je
add
les
imul
loopne
add
pop
add
cmp
sbb
add
pop
and
adc
xor
adc
pop
test
sub
or
mov
inc
pop
mov
pop
imul
and
fcompl
adc
push
pop
sub
fisubl
jle
jmp
inc
or
mov
call
ja
sub
and
lret
push
stc
pop
sub
daa
sbb
fs
dec
mov
adc
jmp
and
rolb
loope
xchg
jne
push
push
jmp
addb
jbe
in
pop
sbb
pop
adc
and
ficomps
pop
mov
movsb
and
pop
or
mov
lds
jns
js
enter
mov
cmc
xchg
dec
cmp
popf
pop
add
cld
fiadds
or
jmp
jnp
addps
sub
cs
loop
jecxz
dec
ds
adc
leave
call
jmp
mov
pop
and
sbb
xchg
jo
bound
jo
or
adc
adc
pop
in
xor
cmp
inc
xor
fadds
data16
jnp
ret
loope
vmovupd
imul
or
xor
push
pop
mov
push
lods
out
and
pop
cmpsb
imul
and
jl
xor
adc
clc
pop
push
test
inc
repz
pop
dec
and
lds
inc
adc
imul
adc
andps
ljmp
outsl
mov
repnz
adc
cmp
mov
pop
mov
adc
mov
sub
mov
mov
adc
cmp
and
xchg
inc
jge
fidivrl
jecxz
or
and
cld
test
jle
lods
loop
dec
mov
mov
pop
mov
mov
sbb
mov
dec
jmp
rcrl
xor
sbb
cmp
dec
les
or
and
cmp
xchg
pop
xchg
orb
mov
cld
mov
or
fldcw
adc
int3
in
sbb
adc
add
adc
sub
push
test
pop
push
ffree
clc
xor
sarl
cmp
sbb
add
xorb
loop
lea
inc
pop
in
sub
xsave
mov
into
mov
lea
xchg
push
pop
jns
and
and
push
pop
imul
xchg
lea
mov
lret
mov
hlt
lods
test
es
push
imul
jecxz
pop
mov
cmp
test
cmc
pop
scas
lods
gs
push
inc
aaa
popf
pop
sub
push
daa
pop
add
cmp
cmp
sub
psubusb
inc
adc
std
fwait
jp
mov
cli
stc
sbb
mov
enter
and
push
mov
jnp
js
push
xchg
xor
mov
outsl
in
dec
add
lods
enter
or
push
ficompl
adc
hlt
jecxz
push
cmp
std
mov
push
pop
or
lret
push
mov
xchg
mov
imul
mov
je
push
pusha
pop
and
mov
cwtl
nop
andb
daa
ds
pop
pop
mov
testb
cli
and
das
mov
inc
adc
ficoml
cli
ds
mov
push
dec
cmc
pop
xor
cltd
jbe
imul
xchg
or
mov
andb
push
mov
xor
stos
xor
push
enter
pop
adc
ds
cmp
mov
movsl
pop
sub
and
and
push
push
imul
sub
inc
in
fdivl
lds
push
mov
push
add
test
sbb
push
stc
pop
dec
ret
rcll
adc
in
cmp
xor
aam
aaa
mov
fadds
and
cmp
xor
and
jp
sbb
or
cwtl
popf
jnp
jle
aas
push
hlt
sbb
lahf
inc
fcomp
ror
adc
stos
stos
test
cs
mov
xchg
mov
stc
push
mov
mov
pop
repz
pop
push
mov
rol
adc
pop
cmp
cwtl
or
gs
loope
mov
mov
push
pop
inc
sub
cmc
push
push
sbb
sbb
pusha
xor
xchg
fwait
std
sub
add
in
cltd
imul
xchg
lcall
shrb
mov
xchg
pop
mov
and
jbe
cmp
lret
push
or
fsubs
inc
pop
dec
mov
inc
cmp
adc
or
mov
add
jg
cmc
roll
push
xor
mov
incb
inc
std
pop
iret
push
and
in
push
stos
push
pop
test
jo
adc
fwait
daa
into
pop
mov
sub
test
jecxz
xor
pop
imul
mov
ds
ljmp
add
sbb
pop
add
pop
add
cmpsl
hlt
pop
and
ljmp
stc
cmp
mov
es
gs
pop
or
xor
xchg
pop
pop
cltd
push
xchg
dec
jb
push
inc
rol
into
add
add
adc
push
stos
call
push
add
pop
imul
mulb
xchg
inc
cmc
pushl
cmp
add
xlat
mov
mov
jle
pop
jmp
mov
loop
addr16
adc
dec
jmp
cmp
fs
daa
push
pop
and
movsl
repnz
rcr
jg
jp
out
xor
sbb
pop
cwtl
fimuls
sub
mov
in
outsl
mov
pop
stos
scas
mov
pushf
pop
sub
fs
or
in
imul
jp
pop
sub
pop
std
jg
fdiv
pop
dec
sub
push
ret
into
pop
jmp
cmc
add
pop
je
stos
xor
mov
jns
add
xor
pop
jb
mov
push
mov
sub
frstpm(287
shll
add
xor
mov
fcoms
push
or
push
lea
sti
xchg
pop
mov
push
mov
cmp
lret
push
push
or
push
or
or
cmp
sbb
cs
je
daa
das
jecxz
push
xor
or
lcall
or
jmp
out
add
push
xor
fimuls
stc
cmpsb
sub
adc
sub
test
mov
es
ficompl
ljmp
mov
pop
and
lret
xorb
imul
pop
cmpsb
or
add
mov
inc
cmp
push
imul
fbld
daa
pop
or
mov
sub
adc
dec
sbb
andl
icebp
shlb
push
push
cmpl
mov
mov
inc
fldenv
movsb
sub
pop
adc
pop
test
in
push
cld
ficompl
and
or
pop
call
cli
add
jbe
daa
add
pop
in
and
inc
add
pop
jl
addr16
push
arpl
int
push
das
fidivrs
loope
outsb
fucomp
sub
fcmovu
cmp
leave
xor
mov
pop
and
pop
pop
adc
fldt
push
ficomps
mov
push
add
and
sbb
pop
sub
arpl
cmp
fcmovbe
mov
ret
icebp
cltd
addr16
call
inc
and
pop
jge
aad
xlat
or
ret
out
push
repz
mov
out
arpl
mov
xchg
movsl
inc
data16
jb
add
mov
or
dec
jp
and
add
pop
or
pop
mov
sbb
pop
cmp
movsl
add
out
mov
sbb
or
or
ljmp
je
jmp
cmpsl
dec
xchg
xchg
ljmp
scas
inc
or
jno
xchg
inc
aam
add
fmul
or
dec
ficoml
stc
incl
sahf
cmp
movsl
test
imul
out
das
add
pop
add
outsb
int
pop
das
ds
cmp
pop
sub
imul
jmp
sub
pusha
ret
mov
jle
jno
xchg
pop
cmpl
leave
icebp
gs
int
add
addl
aas
push
mov
dec
or
mov
addb
pop
mov
xchg
negl
sbb
add
cmp
repz
and
inc
es
rorb
add
loope
std
flds
pop
add
pop
jne
into
mov
ficoms
fistps
or
jbe
orb
cmp
inc
cmc
rclb
leave
add
sbb
jb
aas
adc
jne
pop
lock
push
das
push
ret
xchg
inc
pop
pop
cwtl
mov
adc
and
flds
daa
sub
mov
cltd
mov
inc
sbb
inc
xlat
lock
fisttpll
jae
sbbb
add
aad
xchg
pop
test
int3
dec
pop
or
pop
fwait
dec
shrl
adc
stc
inc
add
lds
pop
cmp
sbb
adc
jecxz
inc
mulps
xchg
sbb
negl
and
push
add
jge
push
xchg
sbb
pusha
push
insl
sub
rcrl
push
jns
test
pop
mov
sub
jbe
xchg
pop
mov
and
pop
jne
dec
mov
enter
mov
stc
push
push
pop
jmp
mov
sbb
fcompl
cld
and
mov
jne,pn
sbb
dec
pusha
mov
mov
cmp
mov
and
lahf
repz
cltd
pop
cli
je
shll
xchg
adc
les
dec
mov
push
sub
xor
and
mov
xor
idivl
inc
pop
add
xchg
test
loop
ljmp
test
fists
push
mov
jne
push
inc
cmp
fs
mov
out
pop
push
loope
jns
pop
arpl
sub
push
lret
pop
imul
adc
dec
test
sbb
ds
ficompl
pop
jmp
add
jle
je
sbb
in
sub
dec
or
and
sub
sub
enter
in
jmp
aad
imulb
xchg
popa
pop
mov
pop
test
pop
jmp
imul
dec
ljmp
push
and
shrl
xor
push
fcomi
xchg
add
lea
add
mov
cmpsl
pop
orl
cmp
sbb
push
popf
push
mov
adc
or
orb
jno
dec
pop
pop
aaa
notl
mov
push
stos
inc
in
push
or
lcall
xorl
and
enterw
pop
and
add
xor
sub
scas
pop
xlat
mov
pop
push
cmc
or
outsb
mov
pop
push
clc
sbb
subl
push
cltd
adc
cli
bound
jae
or
mov
add
mov
in
addps
ret
fisttpll
pop
out
inc
adc
test
jbe
fucomi
jno
js
push
in
cmp
ljmp
test
and
push
jg
insl
add
test
fst
adc
mov
pop
or
test
add
xchg
clc
add
adc
cmp
pop
les
and
dec
pop
aaa
pop
and
mov
and
add
mov
pop
cltd
imul
mov
leave
xchg
mov
pop
aad
adc
push
lods
pop
inc
push
inc
roll
jmp
call
pop
add
es
andl
mov
xor
test
or
lret
xchg
or
mov
lcall
cmpl
pushl
stc
pop
inc
xor
pop
adc
daa
pop
and
or
push
ret
imul
pop
xchg
bound
mov
adc
inc
in
pop
or
mov
sbb
enter
pushf
popa
mov
push
cmp
fs
push
xchg
cltd
add
stc
stos
pop
mov
jge
sbbl
imul
into
out
fistps
adc
pop
gs
sbb
sahf
arpl
add
push
shrb
nop
xchg
js
pop
pop
cmp
addb
xlat
push
sub
jno
int3
aam
or
enter
or
pop
fwait
dec
xor
inc
xor
mov
popa
sbb
xor
lret
pop
in
dec
and
ret
dec
loop
xchg
in
adc
xorb
js
adc
mov
pusha
pop
mov
add
rclb
sub
cmp
xor
pop
push
adc
xor
and
mov
pop
pop
lret
stos
add
out
daa
fsts
xor
push
inc
ds
mov
xchg
popa
testb
cmp
rcrb
cmpsb
xor
cmp
mov
leave
add
push
sbb
pop
pop
cmp
pop
dec
push
pop
add
and
xor
insb
push
enter
idivl
add
jmp
cmc
ror
and
cmp
jne
xchg
iret
pop
add
mov
or
add
hlt
lods
inc
cs
sbb
js
pop
and
adc
adc
rcrl
test
outsl
jne
lds
arpl
pop
sbb
xchg
mov
test
pop
in
insl
fs
adc
xchg
aam
inc
sub
add
adc
mov
pop
popf
pop
je
pop
ss
pop
sub
or
pop
push
xchg
jb
dec
adc
ret
inc
push
pop
jbe
es
xchg
or
pop
add
mov
push
pop
andl
lea
ss
mov
adc
aad
jns
cwtl
sahf
idiv
cmpsb
stc
pop
imul
inc
or
inc
xchg
pop
int3
fdivrl
and
push
cmp
cli
pop
iret
dec
pop
adc
mov
dec
pop
sub
add
add
cld
pop
and
mov
adc
pop
sub
gs
inc
or
mov
jno
or
cmp
dec
push
lahf
bound
push
inc
push
sbb
pop
insb
add
iret
inc
push
jbe
mov
sbb
adc
and
jns
xor
gs
ss
test
dec
sub
adc
aas
mov
enter
sbb
lods
cmpb
mov
ljmp
pop
xchg
push
add
pop
adc
popa
pop
lods
push
jno
out
xor
ja
clc
fcomip
and
push
movsb
mov
or
xchg
cmp
xchg
mov
pop
leave
pop
mov
test
xor
loop
pop
cli
jns
adc
inc
push
adcl
push
mov
loop
dec
orb
leave
mov
pop
adc
pop
mov
jns
mov
push
dec
push
fisubrl
jae
ljmp
mov
imul
sbb
ljmp
imul
push
jbe
pop
pop
mov
cmc
jne
ljmp
or
inc
pop
mov
cmpsb
sub
sarb
roll
int3
ret
arpl
or
dec
les
leave
btcl
or
cmpsl
lcall
das
outsl
cmp
pushf
ficompl
rcll
and
sahf
push
adc
xchg
jae
push
sbb
adc
mov
or
mov
les
pop
jno
dec
adc
mov
pop
mov
push
pop
push
lods
enter
sub
mov
loopne
sub
inc
push
mov
push
shrl
jns
arpl
mov
cmp
imul
pop
imul
icebp
aaa
or
ds
push
movsb
mov
pop
push
push
scas
pop
les
sub
pop
jbe
insb
sbb
sahf
mull
xchg
xchg
pop
push
out
xor
pop
dec
or
imul
pop
int
or
es
jmp
dec
pop
dec
cmp
mov
cmp
push
ret
dec
fnsave
ret
mov
idivl
add
cmp
test
and
mov
push
addb
adc
addr16
std
xchg
pop
mov
mov
mov
pop
adc
xchg
cmp
push
into
repz
jmp
adc
pop
mov
cli
cmp
addr16
pop
imul
jb
ljmp
mov
push
arpl
dec
pop
jg
mov
cld
cli
dec
cmc
imul
cmp
mov
push
aas
movsl
inc
pop
lret
fiaddl
mov
jne
or
pop
or
cs
je
and
xor
xor
test
std
pop
inc
sub
add
pop
add
movl
jno
add
or
mov
mov
or
jge
push
add
fadds
sub
push
clc
sbb
push
pop
or
sbb
pop
daa
inc
add
pop
pop
and
jl
test
inc
pop
mov
push
addr16
pop
xlat
mov
mov
testl
inc
add
daa
addr16
mov
mov
mov
cmp
add
hlt
pop
inc
test
ljmp
enter
push
call
sbbl
or
jo
xchg
div
mov
fwait
es
dec
cli
add
test
pop
adc
sbb
mulb
inc
scas
ret
leave
pop
enter
jns
pop
lret
push
mov
pop
js
pop
orl
jg
xor
cmpsl
inc
and
leave
pushf
push
call
push
sub
sub
sub
cmp
getsec
sub
mov
pop
dec
outsb
int
sbb
xchg
fmull
push
loopne
sar
dec
loope
cmp
pushf
sti
pop
xor
push
jne
iret
and
lret
jecxz
adc
into
sub
pop
clc
add
int3
fimull
and
bnd
inc
adc
sub
addr16
cmp
push
sub
xchg
or
cmp
sub
mov
ret
inc
pushf
mov
fsubs
mov
pop
icebp
mov
jae
xchg
inc
cmpsl
jp
push
mov
call
jne
mov
sub
sub
mov
jmp
and
enter
pop
lds
cmp
mov
inc
ss
das
pop
loopne
inc
in
adc
mov
sarb
sbb
les
push
mov
cmpsb
pop
pop
mov
jns
test
inc
push
push
and
jp
and
mov
dec
js
pop
mov
sub
sub
add
sub
es
jne
or
jge
movsl
cltd
pop
push
aad
push
out
sub
adc
clc
jns
xchg
shr
lret
dec
push
aas
xor
dec
adc
repnz
push
push
push
stos
sub
cld
pop
mov
sbb
dec
mov
popa
inc
fiaddl
fsts
pop
inc
cwtl
int3
dec
jmp
pop
sbb
inc
sti
push
arpl
cs
or
or
pop
rcrl
fwait
aaa
xchg
mov
mov
push
push
xor
mov
sub
imul
jbe
jae
cwtl
push
aaa
sbb
jne
mov
inc
pop
movl
cltd
pop
fcomps
mov
pop
or
sub
xor
sub
mov
push
cmpsb
imul
mov
movsl
adc
cmp
push
ljmp
mov
jg
pop
mov
stos
dec
cli
fwait
pop
push
inc
pop
cmp
and
add
jne
push
xchg
xor
pusha
imull
leave
and
lea
stos
pop
dec
pop
adc
xchg
push
out
cmp
jle
dec
lods
cli
push
ss
pusha
cmp
adc
jb
xchg
and
push
mov
das
pop
inc
cmp
inc
ljmp
mov
adc
enter
cmp
cld
add
mulb
pop
ss
jbe
or
push
inc
add
cltd
pop
adc
adc
enter
add
mov
inc
inc
sbb
loope
mov
xchg
jle
add
push
pop
sbb
std
negb
adc
lcall
push
and
pop
push
cmp
ds
test
and
adcb
pop
test
push
mov
and
cs
bound
ljmp
arpl
jmp
loop
pop
push
je
into
jmp
and
lret
or
push
mov
adc
pop
dec
aas
push
cmpl
pop
popa
out
ds
xor
leave
cmp
iret
stc
sarb
fildl
cmovle
sbb
in
push
sbb
pusha
gs
push
adc
rclb
sub
sub
lods
outsb
out
cmp
adc
clc
push
ror
pop
pop
iret
mov
sbb
leave
or
xorl
outsl
cmpsl
mov
pushf
xor
inc
dec
mov
and
mov
lret
clc
add
lcall
and
pop
mov
mov
popa
loopne
fcoml
xchg
cli
rcll
mov
sbb
push
or
cmp
enter
lods
pop
or
not
mov
pop
sub
or
dec
lods
int
stos
push
pusha
pop
inc
sbb
outsl
cs
pop
xchg
inc
jnp
jno
and
les
push
mov
inc
sbb
push
into
bnd
xchg
test
cmp
jbe
outsl
and
inc
iret
and
xchg
or
xchg
cld
cltd
mulb
pop
pop
das
aad
in
imul
je
sub
push
and
mov
enter
adc
or
pop
or
jge
xchg
and
lret
add
imul
pop
bound
dec
enter
ljmp
mov
sub
xor
adcb
xor
pop
ds
pop
dec
mov
or
stc
out
idivb
lea
add
push
int3
sub
mov
pop
mov
aas
pop
rcpps
enter
mov
push
dec
pusha
in
cmp
cmp
into
jecxz
pushf
push
dec
js
xor
push
sbb
sbb
lds
adc
cmpsb
jmp
cmpb
dec
lret
sbb
and
xor
xchg
repz
add
or
lods
pop
insb
or
pusha
sarb
xor
imul
jmp
xor
sbb
decb
xchg
pop
lret
cld
add
jmp
dec
add
sbbb
and
mov
adc
or
aam
insl
mov
arpl
cmpsl
xor
inc
and
adc
mov
and
sub
mov
pop
movsb
pop
jno
add
pop
push
sbb
and
inc
add
pop
or
imul
pusha
add
dec
mov
nop
lods
pop
xlat
cld
loope
pop
push
sbb
adc
pop
push
mov
sbb
cmpsb
and
inc
mov
jns
push
dec
sbb
in
adc
dec
push
jecxz
pop
inc
fidivrs
xchg
pop
das
push
popa
add
pop
and
or
outsb
inc
or
shlb
movsb
es
mov
mov
shlb
hlt
data16
pop
or
push
pop
xchg
sub
add
pop
mov
mov
or
les
pop
arpl
daa
loop
push
mov
inc
mov
and
fldcw
cmp
pop
inc
mov
repnz
add
mov
jg
pop
push
pop
push
adc
push
mov
leave
les
dec
js
pop
ret
inc
mov
add
fildll
pop
mov
push
jge
and
and
fcompp
or
pop
sbb
sub
adc
lret
fildl
pop
push
mov
cltd
ret
shlb
jmp
dec
adc
data16
jge
push
leave
pop
movsb
xchg
mov
int
push
bound
and
fwait
in
cmpsb
push
add
mov
push
pop
imul
pop
lock
clc
inc
push
pop
xor
and
push
loopne
mov
pusha
sbbb
xor
mov
pop
imul
adc
lock
cmc
mov
ja
adc
dec
and
inc
pop
sbb
lea
inc
cmp
pop
inc
loop
push
dec
push
adc
and
jb
fmul
out
xchg
pop
push
adc
xor
jp
pop
pop
sub
bound
pop
and
cmp
push
pusha
sbb
push
cmp
or
mov
aam
pop
aad
dec
imul
loope
mov
hlt
stc
push
inc
cwtl
lds
xchg
mov
sub
imul
adc
lea
jmp
mov
jae
jecxz
loope
sub
push
andb
cmp
and
sbb
jns
push
es
inc
fwait
repz
dec
push
dec
lods
and
pop
push
mov
lret
adc
testl
into
dec
outsb
das
mov
icebp
rcll
push
or
and
mov
pop
insl
clc
ret
push
pop
pop
push
test
mov
jbe
pop
adc
aas
jae
mov
repz
cltd
dec
ds
xchg
jmp
sub
aaa
mov
mov
inc
push
mov
dec
jecxz
jg
mov
adc
pop
adc
scas
pop
fwait
push
nop
fildll
xchg
push
loope
sbb
xchg
jne
adc
cmp
dec
dec
test
in
push
ss
mov
xor
mov
scas
xchg
movsl
pop
push
push
adc
cmp
mov
dec
je
pop
cmp
mov
add
xchg
imul
mov
sbb
jmp
pop
cmp
enter
shlb
pop
jg
mov
pop
out
xchg
sbb
push
push
imul
xor
and
outsl
jmp
adc
and
bound
pop
cmp
ja
mov
push
aaa
xchg
mov
scas
out
mov
lock
testb
xor
push
ljmp
adc
jp
pop
decl
icebp
sub
fnstsw
mov
ljmp
mov
and
adc
pop
mov
push
mov
pop
xchg
divb
outsb
xlat
ret
and
cmc
adc
dec
adc
jmp
mov
jno
int3
inc
push
pop
in
xor
mov
shll
lret
pop
jb
sbb
fsubs
ret
mov
inc
xor
add
hlt
xor
sbb
rcl
cmp
pop
rcr
adc
pop
iret
pop
movsl
adc
in
or
je
fildll
xchg
fucom
adc
pop
pop
sbb
ret
pop
inc
xchg
shr
daa
syscall
jb
inc
xor
sbb
cmp
xchg
or
cmp
push
std
das
pop
test
pop
inc
jns
cmp
lea
jge
in
cld
in
lret
adc
cmpsb
mov
lret
xchg
inc
mov
ss
test
rclb
sti
out
inc
sbb
jecxz
push
mov
xchg
cmp
sub
int3
pop
xor
cli
or
test
in
cmpsb
xchg
and
scas
pop
call
jbe
mov
sbb
fldenv
adcl
xchg
pop
sub
sub
adc
pop
pusha
in
xchg
mov
jp,pt
subl
mulb
sbb
mov
inc
mov
push
dec
pop
xchg
stos
ss
pop
cltd
pop
and
aas
sbb
inc
in
adc
sbb
jge
shll
mov
push
push
or
pop
pusha
pop
pop
sarl
dec
adc
mov
lds
xchg
push
pop
add
into
push
fs
sub
xor
mov
jae
out
mov
stc
inc
or
xchg
push
push
jmp
arpl
mov
cmpsl
int
pop
sbb
push
and
dec
mov
jmp
and
adc
pop
cld
xchg
push
pop
ret
ret
inc
push
push
aad
or
enter
stc
out
or
pop
add
adc
scas
cmp
adc
xor
mov
dec
pop
iret
xor
pop
inc
aam
xor
fs
pop
or
mov
rolb
dec
pop
les
cltd
xor
pop
sbb
mov
lret
test
dec
push
xchg
sub
mov
add
popa
pop
lock
inc
pop
bound
dec
stos
imul
xor
ss
or
jno
lcall
add
xor
add
adc
adc
loope
leave
or
add
inc
pop
sarb
inc
push
lahf
sbb
sahf
cmpsl
ja
icebp
jb
jmp
mov
jg
and
fadds
shll
pop
pop
push
xchg
xchg
test
mov
mov
mov
push
sbb
pop
test
push
and
jp
and
mov
sbb
int
fcoms
repz
aam
adc
sbb
xor
sub
lret
mov
pop
dec
or
imul
push
pop
mov
subl
pop
test
cmp
test
mov
mov
es
cmpsb
or
loopne
movsb
gs
xor
jmp
les
sbb
mov
pop
mov
jne
cwtl
push
adc
inc
pusha
imul
push
dec
jmp
enter
and
lret
xchg
pop
fsubs
jmp
dec
pop
divl
and
lret
je
inc
pop
adc
push
pop
pop
pop
test
add
cmp
icebp
and
gs
jns
pop
pop
inc
xchg
or
push
mov
inc
pop
pop
and
stc
outsl
pusha
or
in
mov
sti
das
mov
js
test
jecxz
xor
cmp
cmp
and
in
pop
js
jmp
negb
fadds
add
or
cmpsl
fs
xor
rol
cld
pop
les
mov
add
xor
je
dec
pop
out
inc
test
dec
mov
mov
pop
sub
inc
mov
jle
mov
ljmp
pop
sub
or
inc
or
cmp
xchg
push
xchg
xchg
push
jo
cs
subb
add
sbb
scas
mov
es
dec
sub
xor
outsb
or
dec
pop
mov
sbb
pop
jnp
ljmp
fnstenv
or
add
js
sbb
sub
fdivs
pop
adc
gs
pop
out
xor
fisttps
inc
jge
and
dec
or
imul
in
xchg
push
sbb
es
test
icebp
out
js
pop
mov
or
pop
sub
nop
adc
in
jg
pop
mov
ficompl
pop
dec
fsubr
dec
movsl
pop
push
mov
inc
fcomps
pop
sarb
int
dec
push
cmp
push
jp
dec
mov
and
cmpl
test
add
mov
lds
pop
jns
pop
or
jbe
outsl
cltd
test
mov
test
pop
stos
pop
cwtl
addb
inc
jmp
outsb
or
cmovnp
out
arpl
push
mov
mov
dec
pop
clc
pop
sub
in
cmc
mov
inc
cmpsb
mov
pop
std
sub
push
push
jl
fimuls
mov
mov
pop
push
ds
jmp
cmp
int
push
dec
sbb
xor
mov
and
dec
std
fstps
js
imul
daa
mov
cmpsb
and
dec
jns
pop
push
xchg
in
mov
andl
mov
shlb
pop
push
fnsave
pusha
push
cwtl
mov
dec
mov
ficompl
and
jne
popl
cli
rorb
dec
pop
cltd
leave
jno
sahf
pushf
adc
add
repz
adc
cs
mov
mov
cwtl
and
mov
sub
ja
lds
mov
pop
dec
jae
pop
das
pop
xchg
sbb
fistl
mov
ss
loopne
dec
xchg
dec
loope
imul
jns
inc
pop
dec
add
leave
ds
push
mov
push
lcall
xor
lods
adc
xchg
adc
scas
dec
pop
rcr
mov
push
adc
lahf
and
rcrl
pop
je
adc
dec
push
out
and
pusha
stc
xor
sub
inc
ds
ficoml
int
cmp
push
pop
push
sbb
lea
and
cmp
lcall
add
add
pop
sbb
movsl
sub
mov
mov
repz
ljmp
imul
push
sbb
jne
or
jg
dec
ja
scas
dec
popa
xchg
sbb
daa
push
pop
stos
addb
jecxz
dec
xchg
pop
push
push
pop
sub
imul
xor
leave
push
xor
push
jnp
mov
arpl
push
pop
cmp
pop
repnz
shll
adc
cmp
popa
inc
xchg
shrl
adc
test
pop
push
shll
and
pop
dec
cmpsb
stos
lret
xor
test
mov
enter
sub
mov
mov
mov
jae
mov
xchg
insb
push
mov
dec
push
adc
imul
sub
cmp
pop
cmpsl
push
jo
aaa
xlat
xor
negb
push
xchg
fsubrs
push
pop
pop
push
dec
mov
mov
test
jp
leave
pop
xchg
inc
jno
arpl
lcall
cmpsl
cmp
jae
push
lea
ljmp
icebp
cwtl
mov
pop
mov
jle
dec
pop
filds
or
es
pop
cmp
xlat
sarb
lods
xor
inc
dec
push
fcompl
mov
nop
lret
add
or
ss
jmp
and
pop
fistpll
adc
ss
jne
jle
pop
test
push
dec
fisubl
push
sub
xchg
mov
push
daa
pop
jmp
push
and
ljmp
arpl
iret
and
lea
fsts
inc
addb
leave
icebp
fists
push
sahf
and
stos
pop
jnp
outsb
xor
mov
push
jno
gs
pop
insl
push
in
dec
cmp
shrb
sub
sbbb
push
jbe
xchg
xor
mov
xchg
or
push
sbb
inc
push
sbb
dec
fisubl
mov
mov
lock
pop
jmp
dec
ds
xchg
sub
aam
iret
popa
adc
sarl
pop
jg
mov
orl
insl
dec
xor
push
enter
mov
push
loope
pop
fcoms
dec
push
and
adc
inc
ds
xchg
xchg
jns
xor
addr16
fucomi
ss
int
pop
cmp
xor
pop
and
inc
insl
imul
js
stos
and
mov
cmp
add
and
jg
imul
or
jmp
cmpsb
cs
lcall
inc
and
mov
lock
pop
xchg
repz
adc
pop
xor
in
call
insb
mov
fstpt
or
add
or
adc
pop
out
push
pusha
xchg
and
mov
cmpsl
push
cld
adc
jns
icebp
nop
push
and
pop
imul
fists
sbb
lods
pop
and
mov
sbb
mov
leave
fldl
ret
push
inc
sub
fmuls
inc
loope
pop
dec
in
test
ficompl
xchg
sub
mov
outsb
test
mov
pop
xchg
leave
adcb
pop
cs
imul
shrl
mull
andl
aam
sub
stos
xchg
push
ret
jmp
iret
pop
jns
mov
push
pop
sahf
pop
icebp
mov
sub
testb
mov
aaa
sbb
fisttpll
pop
sub
cmp
add
inc
enter
pop
or
mov
pop
sbb
nop
mov
xchg
icebp
or
ljmp
or
inc
dec
inc
inc
mov
ret
dec
cmpsb
sbb
or
xchg
push
cmp
cmpsl
xor
mov
pop
pop
ljmp
lods
pop
pop
popa
jnp
arpl
push
ret
or
idivb
push
repz
aad
mov
sbb
or
pop
ss
pop
or
mov
dec
fwait
negb
push
jnp
dec
repnz
xorl
push
sub
and
cmpsb
jp
push
jne
adc
sub
sbb
mov
les
mov
lock
pop
cwtd
push
fimull
adc
push
imul
mov
sub
jne
mov
sahf
ljmp
dec
xchg
sti
jb
jne
adc
dec
and
push
push
jmp
and
pop
imul
ret
std
fnstcw
pop
cmp
mov
mov
mov
rorb
cmp
xor
mov
ficomps
pop
insb
or
cmp
inc
stos
or
pop
xor
fstpl
pop
pop
pop
out
inc
rol
jno
dec
sbbb
mov
xchg
aas
lcall
mov
adc
dec
dec
and
xor
out
pop
pop
mov
fbld
sti
jbe
xchg
xorl
pop
in
sub
sbb
pusha
stos
fstps
mov
adc
mov
pop
mov
adc
fs
mov
test
push
popa
in
adc
pop
mov
or
jmp
push
ficompl
push
push
pop
xchg
push
ljmp
scas
jle
sbb
dec
mov
jmp
cmpsb
sub
inc
jg
push
jnp
xor
inc
add
js
dec
sbb
and
mov
fs
xor
fninit
lods
mov
jl
rcrl
sub
and
pop
lret
inc
add
and
js
imul
dec
jmp
into
out
xor
mov
xchg
jo
jns
push
mov
lods
and
xchg
adc
dec
rcll
pop
or
pop
mov
push
pop
dec
sahf
arpl
ja
add
hlt
cwtd
pop
dec
adc
adc
push
lahf
inc
and
mov
jmp
lds
lea
iret
cmp
cmp
pop
loope
mov
pop
pop
jne
pop
push
add
add
cwtl
or
jno
jnp
or
adc
mov
cs
pop
pop
loope
pop
dec
cli
and
pop
dec
adc
or
sub
mov
rcrl
or
xchg
jnp
ss
inc
add
dec
fstps
push
cli
lock
push
repnz
fldcw
and
pop
and
adc
or
xchg
sub
mov
push
clc
mov
ds
nop
cwtl
cltd
pop
jnp
test
int3
std
pop
fisubrl
cmp
push
ljmp
jo
adc
pop
in
and
es
pop
jge
mov
mov
adc
movups
mov
orb
loop
lret
pop
out
clc
in
pop
inc
lock
dec
xchg
gs
add
adc
add
pop
inc
ljmp
dec
dec
xchg
push
int3
mov
dec
adcb
and
cmp
xchg
and
pop
pop
repz
pop
add
pop
sbb
mov
mov
or
add
movl
dec
push
sub
ljmp
stc
dec
pop
and
les
push
lds
mov
sub
mov
imulb
inc
cmp
inc
pop
aaa
lds
add
in
sub
sbb
adcl
pop
dec
push
and
cmpsl
push
dec
pop
ficoml
inc
imul
pop
pop
sub
and
stos
mov
test
pop
fildl
or
add
mov
jecxz
mov
cld
test
xor
insb
fidivs
loopne
jmp
loop
negb
or
pop
xor
inc
xchg
pop
and
andb
pop
jbe
std
sahf
orl
dec
iret
mov
dec
or
pop
test
xchg
pop
xchg
cmc
scas
mov
std
push
pop
or
cld
iret
pop
push
repz
and
fs
lods
dec
xor
mov
xchg
jmp
es
sbb
adc
negl
push
mov
add
adcb
xchg
mov
ds
jbe
inc
push
ja
sahf
cwtl
cltd
dec
push
int
jge
aas
push
aaa
lcall
jecxz
push
mov
ficoml
aad
test
and
jmp
dec
xchg
and
add
pop
rcrb
xor
add
jge
fcomps
push
cs
and
stc
dec
jmp
or
ds
push
test
pop
sub
data16
pop
mov
stc
adc
sahf
jae
xor
ja
and
jno
jle
push
push
pop
test
sub
test
ret
and
pop
push
push
jmp
push
dec
jne
dec
pop
fistl
mov
pop
cli
loop
mov
pop
inc
icebp
pusha
jae
push
mov
ja
andl
loop
jmp
dec
hlt
cmp
mov
pop
inc
shlb
inc
test
inc
ds
sbb
cli
pop
pop
cli
cmpsb
pop
jmp
jns
pop
mov
adc
pop
and
mov
adcb
ss
push
pop
add
mov
pop
orb
push
ja
pop
cmp
in
inc
ret
xchg
mov
push
push
pop
xchg
jno
jns
push
jo
adc
inc
pop
cmp
mov
std
sbb
mov
insb
inc
mov
cmp
cmp
pop
out
push
xor
and
mov
jecxz
les
xchg
push
or
lret
jnp
jle
shlb
xchg
add
and
add
cmp
sbb
test
adc
pop
mov
pusha
pop
shrb
clc
icebp
test
aas
das
mov
pop
push
loope
pop
push
adc
add
dec
sbb
fnstenv
cmpsl
mov
scas
gs
pop
fidivs
xlat
inc
mov
pop
or
ret
push
mov
adc
sbb
cmp
and
ret
jmp
pusha
adc
jl
mov
sub
sahf
pop
jb
inc
add
xchg
fisubrl
adc
mov
sub
mov
popa
stc
xor
rol
xor
xchg
xchg
sbb
int3
add
ss
fsts
or
jg
js
sub
dec
sub
adc
mov
js
cld
adc
xchg
ljmp
loop
test
inc
mov
pushl
sbb
es
sub
push
jb
or
cltd
add
jle
cmp
dec
pop
sub
data16
rorb
stc
sub
mov
mov
pop
mov
test
mov
ret
adc
adc
dec
push
popa
cli
lds
xor
cmp
dec
add
gs
sbb
call
cmp
dec
pop
pop
fcoms
push
cmc
nop
mov
sbb
dec
fdivl
push
pop
fnstenv
pop
mov
jo
arpl
push
mov
pop
mov
lock
sarl
lret
add
cmp
xor
dec
orb
xor
mov
bound
cmp
push
jmp
xchg
pop
mov
xchg
popa
mov
add
lret
pop
add
dec
push
sub
test
das
mov
mov
addr16
and
pop
dec
or
adc
cmp
inc
xor
insb
cwtl
dec
iret
jno
mov
adcb
pop
mov
daa
pop
jno
xchg
cmc
xchg
sarb
pop
jns
lahf
adcb
ret
inc
sub
mov
icebp
mov
sub
cmp
sbb
fcompl
jno
or
fptan
sysexit
aam
sbb
scas
xchg
cld
mov
xchg
pop
jbe
sbb
push
fcmove
arpl
xchg
fwait
and
icebp
sbb
jecxz
scas
mov
addr16
cld
mov
dec
xor
cwtl
cmc
ret
lea
or
les
mov
mov
pop
xchg
mov
shll
pop
jg
mov
push
sbb
jae
push
and
xchg
and
jnp
jmp
pop
test
sub
fisttpl
insl
jns
pop
jae
packssdw
fbld
inc
pop
inc
ja
mov
or
sbb
imul
aam
mov
cmp
pop
mov
dec
sarl
stc
xchg
sbb
mov
imul
in
pop
rorl
leave
stc
pop
cwtl
loope
xorl
cmpb
inc
push
pop
push
xor
jae
test
and
jns
xchg
adc
fcoml
cmp
xor
popw
inc
and
xchg
pop
aad
add
inc
cmp
add
jp
fnsave
outsl
cwtl
subb
push
pop
jmp
js
fildll
sub
pop
xchg
mov
cs
pop
mov
and
out
test
pop
jne
lret
mov
mov
push
ret
cli
mov
stos
jmp
push
mov
lea
fwait
nop
mov
mov
dec
std
pop
and
sahf
jl
cmp
xchg
jnp
pop
inc
test
fiaddl
fisubrl
pop
loope
sbb
adc
lds
cmp
or
in
inc
cmpsb
cmp
jns
jbe
popa
jmp
jo
xor
mov
inc
jmp
or
push
out
and
push
mov
and
fidivrl
dec
cs
adc
pop
xchg
das
mov
adc
out
les
outsl
jp
daa
out
enter
aaa
add
adc
dec
pop
push
xor
push
sbb
pop
sbb
sbb
xchg
pop
push
fldcw
mov
mov
lret
pop
push
pop
notl
cwtl
jbe
arpl
jnp
dec
mov
mov
aad
imul
cltd
imul
mov
clc
fiaddl
mov
dec
adc
and
mov
sub
xchg
pop
or
add
popf
adc
mov
and
insl
cmc
iret
inc
push
lret
adc
push
pushf
sbb
pop
gs
add
insl
pop
and
roll
in
test
call
inc
jo
es
ret
pusha
sbb
jae
mov
ss
jne
cmp
jbe
xchg
enter
or
inc
dec
mov
pop
mov
inc
push
add
mov
cmpsl
stos
pop
and
push
xchg
mov
pop
mov
pop
lret
imul
ljmp
pop
jecxz
ret
daa
xchg
mov
sar
lods
xchg
shlb
ret
and
xchg
cwtl
out
cmp
xor
pop
sbb
inc
ret
jno
pop
int
mov
out
push
jmp
or
pop
stos
lods
pop
xchg
pop
mov
je
xor
popa
cwtl
fdivrs
lret
xchg
mov
pop
or
xor
sbb
shrb
cmp
pop
dec
dec
hlt
mov
pop
repnz
inc
mov
inc
mov
popa
ss
insb
addb
adc
pop
inc
int3
stos
dec
pop
mov
and
add
or
imul
sbb
jb
jno
jmp
xchg
pushf
push
adc
or
pop
scas
sbb
incb
stos
pop
mov
iret
pop
inc
inc
popa
or
jmp
add
cmpsb
in
inc
dec
insl
sub
jbe
cmp
shrl
or
loopne
dec
sub
dec
outsl
cltd
int3
and
imul
and
in
or
stos
neg
test
sub
push
add
pop
popf
pop
in
pop
or
add
pop
cli
roll
jo
filds
push
in
pop
and
pop
test
es
cvtpi2ps
and
mov
sbb
xchg
adc
js
dec
lcall
stc
push
dec
pop
inc
insl
cmp
add
imul
dec
addr16
pop
addr16
sub
inc
pop
jg
std
cmp
and
sub
lret
pop
outsb
sbb
pop
push
push
mov
xchg
sub
jno
sub
fs
mov
imul
push
mov
jl
add
pop
mov
pop
adc
mov
cmpsb
push
and
mov
sub
in
push
push
es
pop
jge
int3
ds
ret
pop
dec
add
or
pop
xchg
xchg
pop
test
sbb
pop
or
inc
pop
enter
pushf
insb
in
or
pop
push
cmpsb
or
pop
addr16
pop
and
cmpsl
sub
and
fisubl
sarl
adc
jecxz
pop
push
pop
out
and
cmp
add
nop
push
push
enter
push
xchg
pop
push
clc
xchg
sbb
lds
test
enter
push
ret
xor
test
jno
pop
and
cmp
sub
stc
daa
hlt
out
dec
rol
add
push
xchg
imul
pop
adc
dec
sub
pop
fistpl
mov
add
pop
xchg
jp
pop
xor
push
mov
push
pop
cli
pop
ret
cmp
pop
cs
sbb
xor
mov
and
push
int
inc
adc
cmp
adc
pusha
dec
mov
jno
xchg
sar
inc
push
push
call
adc
fsts
test
idivl
orl
pop
int
mov
icebp
push
or
mov
dec
xchg
fsts
repnz
mov
imul
pop
out
fcompl
mov
loope
fisubrl
pop
sub
or
dec
adc
ja
repz
adc
pop
add
mov
les
and
dec
cmp
push
outsl
push
sbb
or
fisubl
inc
push
sbb
gs
and
adc
fisttps
mov
inc
mov
ret
mov
mov
add
push
push
jmp
pop
lcall
fcomi
add
nop
pop
arpl
pop
icebp
mov
push
or
push
cltd
cwtl
pop
jmp
adc
sub
or
sahf
inc
pop
cmc
push
das
pop
or
sub
jbe
int3
and
scas
rcrl
push
js
icebp
dec
mov
mov
xor
bound
sbbb
sub
pop
popa
jnp
pop
pop
jl
add
lock
ficoms
sbbb
add
lret
xor
cwtl
inc
push
dec
test
enter
adc
push
push
rorb
fisubrs
dec
pop
psrlq
bound
pop
cmp
or
push
pop
cmpl
sbb
mov
stos
sti
sub
xor
rcrl
mov
jp
pop
dec
add
ja
mov
lea
dec
add
lret
add
gs
push
cmp
sbb
cltd
and
add
sub
in
add
pop
mov
xchg
sub
mov
and
fmuls
adc
icebp
in
sbb
mov
out
pop
sbb
orl
aad
push
add
enter
jbe
add
js
or
or
xchg
pop
call
and
jnp
xchg
repz
mov
jl
pop
stc
ja
popf
pop
roll
push
sbb
mov
or
imul
mov
push
push
push
pop
mov
cli
sbb
adc
xchg
pop
and
lcall
repnz
shlb
or
jbe
sbb
sub
leave
dec
popf
testl
sbb
pusha
stc
pop
jecxz
enter
inc
jmp
das
pop
sub
dec
or
pop
jnp
dec
and
sub
movsb
or
rorb
xor
jo
ficompl
dec
push
dec
sub
pop
mov
mov
lds
mov
jne
pop
pop
inc
arpl
cmp
lret
mov
ret
mov
gs
fwait
adc
jbe
in
adc
imul
adc
orl
mov
and
inc
xor
push
push
mov
fbld
imul
out
pop
ljmp
xchg
bound
add
fucomi
sar
mov
ret
ret
and
and
fmul
clc
lock
adc
mov
sub
adc
pop
test
fists
pop
add
addr16
mov
inc
mov
sub
std
cmc
aad
sbb
inc
add
add
leave
add
pop
xor
cmp
pushl
mov
cmp
daa
lcall
xchg
push
aas
add
decl
inc
je
out
and
fcoms
cmp
popa
addr16
pop
dec
push
mov
outsl
dec
sbb
lahf
pop
xor
jg
jne
cmp
rcrl
addr16
jecxz,pn
inc
cmp
sbb
lods
jno
push
mov
pushf
and
push
leave
and
ja
inc
int
push
and
push
mov
rcr
inc
push
or
add
repz
stc
cltd
jp
pop
pushf
xor
sbb
les
inc
jne
mov
push
cmp
pop
dec
or
ljmp
loop
loopne
push
pop
push
pop
push
lods
aaa
repz
adc
jbe
cltd
push
mov
xor
inc
or
mov
fdivl
pusha
push
cmp
sti
mov
pop
jge
mov
insb
lret
and
sahf
cmpsl
jle
mov
jo
es
sbb
xchg
pop
pop
push
xchg
or
jp
stc
inc
int
push
pop
mov
push
les
pop
pushf
sti
push
cltd
lret
sub
cmp
pop
xor
adc
lret
or
mov
cmc
js
js
jge
adcb
pop
jmp
dec
pop
pop
outsb
mov
push
stc
jmp
jno
sahf
and
cmpsb
icebp
sub
jne
jbe
sub
js
jmp
mov
or
or
pop
jo
push
jne
mov
xchg
pop
mov
cmp
mov
incl
int
add
jg
rcrb
icebp
fcmovnbe
jno
pop
pop
dec
les
mov
pop
out
pop
inc
insl
push
pop
inc
mov
fldt
push
push
cli
push
lods
pop
sub
adc
dec
cmp
sub
dec
xor
dec
mov
cwtl
lcall
cwtl
lret
xor
adc
xor
push
mov
sub
or
mov
cmp
sub
and
cli
movsl
adc
inc
stos
jmp
rcr
in
inc
jle
jg
cmpsl
pop
mull
mov
enter
xlat
dec
pop
rclb
jo
pop
stos
push
out
mov
push
jne
inc
sahf
subb
add
movsl
scas
pop
test
rclb
outsl
leave
in
cmpsb
mov
lods
or
adc
ds
pop
jno
loope
mov
add
or
jne
repz
mov
xchg
je
sbb
xchg
jp
sbb
fists
imul
sub
sub
data16
lret
std
push
xor
xchg
cmpl
popf
mov
cmp
adc
mov
xchg
add
pop
adc
dec
pop
or
xor
or
cmpps
jecxz
lock
adc
outsb
pop
cmp
xchg
cli
cmp
nop
popf
arpl
fxch
test
icebp
sbb
testl
dec
stos
push
repz
or
pop
ficompl
pop
jmp
sahf
pop
pop
sub
bound
fnsave
mov
rcrb
xor
mov
bnd
pop
cmp
pop
push
jo
xor
mov
or
and
rcll
int3
daa
pop
or
add
jle
pop
xor
cmp
mov
pop
enter
push
mov
push
push
cmp
add
jne
js
fsubrs
inc
cmp
pop
popa
or
mov
lret
cmp
lds
mov
imul
fwait
pop
imul
dec
cmp
inc
fnstcw
add
pop
mov
xchg
cmp
push
mov
clc
mov
mov
jno
data16
pop
imul
dec
push
lahf
repz
js
ja
sbb
mov
mov
mov
adc
jnp
sub
test
dec
lods
scas
xor
popa
mov
push
mov
pop
and
out
adc
lods
push
jl
push
test
inc
inc
cli
sub
jmp
fcompl
mov
xor
pop
repnz
dec
aad
or
scas
dec
fcoml
sub
pop
in
push
push
push
imul
inc
pop
movsb
jmp
in
aam
push
pop
je
push
push
or
or
ds
loope
xlat
sti
popf
cli
ja
push
jae
sbb
stos
fnstcw
mov
leave
movsl
pop
sbb
pop
dec
add
inc
or
pop
pop
insl
mov
pop
cmpsb
ret
xor
sub
adcl
mov
in
pop
push
pop
std
add
arpl
inc
pop
xchg
pusha
inc
mov
push
jecxz
setbe
push
sub
popa
pop
loope
and
inc
ljmp
push
push
adc
shrl
or
mov
push
mov
stc
xor
flds
pop
gs
pop
inc
lea
mov
push
mov
push
dec
jbe
clc
stos
jle
inc
jmp
int3
es
nop
rorb
popf
daa
jl
pop
hlt
mov
push
shlb
push
cwtl
jge
sarl
clc
ljmp
sub
adc
aas
mov
sub
loopne
loope
hlt
pop
cmp
adc
mov
test
pop
inc
add
sbb
push
les
xchg
adc
in
gs
ret
pop
inc
in
int
add
push
pusha
push
fcoms
dec
jl
inc
imul
dec
cmc
sub
popf
add
dec
mov
hlt
aad
leave
sbb
push
mov
loope
imul
pop
repnz
or
push
ja
push
xchg
xor
pop
out
push
mov
inc
das
mov
pop
add
imul
in
sub
sti
sub
pop
mov
das
cmpsl
cmp
mov
sti
aad
adc
out
loope
in
mov
push
dec
cmc
out
stos
addps
and
pop
es
add
pop
dec
push
pop
and
rcrb
outsb
popa
or
and
or
sti
pushf
pop
xor
fwait
pop
push
cmp
push
push
xchg
sub
cltd
pop
push
jbe
stos
es
lods
push
pop
mov
stc
in
pop
pop
popa
xchg
in
xchg
dec
dec
xchg
push
inc
sub
cltd
int3
adc
push
sub
mov
or
pop
push
mov
jmp
pop
popf
test
sbb
dec
jmp
cmp
xor
dec
push
fstpt
or
mov
dec
mov
stos
pop
pop
das
xchg
or
push
loope
stc
in
fsubs
jae
jnp
and
push
lret
jne
adc
out
imul
push
mov
lea
cmp
mov
and
pop
lret
pop
fistpl
push
add
gs
dec
cs
enter
and
push
xorb
and
fwait
lods
clc
pop
ss
adc
inc
xchg
mov
aam
stc
mov
cmc
int
add
push
cmp
and
dec
add
inc
leave
aam
cmc
mov
pop
jne
push
mov
inc
pop
push
mov
pop
ret
or
pop
sbb
push
dec
push
xorb
jecxz
scas
mov
push
push
jbe
pop
cld
sbb
jl
pusha
push
add
cmp
mov
sub
fdivrp
les
cld
add
out
stos
xchg
fiaddl
push
insb
push
ret
hlt
jae
pop
jmp
scas
dec
push
dec
xor
mov
xchg
call
cmp
pop
popa
jge
push
jb
xor
mov
fnstcw
xchg
mov
inc
cmp
int3
xchg
sahf
fdivrs
inc
pop
or
mov
std
dec
dec
enter
xor
inc
test
pop
pop
sub
push
pop
stos
cmp
inc
cltd
in
in
pop
std
add
movsl
pop
adcb
pop
ss
pop
dec
and
mov
jecxz
stos
bound
mov
or
xchg
icebp
dec
sub
cmp
xlat
shlb
or
push
imul
sbb
out
out
sbb
dec
cmp
mov
pop
xchg
mov
in
dec
dec
mov
adc
sarl
pop
lea
push
sahf
insl
add
int3
fwait
js
sub
push
and
dec
fildl
pop
out
inc
inc
int3
inc
jbe
cmp
adc
cltd
push
pop
lret
jle
xchg
loop
xchg
inc
add
lahf
or
sub
pop
les
daa
inc
and
fs
sub
jns
repz
in
xchg
es
scas
fwait
push
icebp
pop
pop
dec
fmuls
pop
inc
fwait
dec
jns
cmp
lds
xchg
outsl
sub
push
inc
cli
mov
pushf
rcrb
arpl
jbe
fisttpll
lret
inc
fisubrl
mov
xchg
sbbl
cmp
imul
aad
or
push
xor
inc
dec
and
pop
iret
jmp
and
mov
test
pop
xor
inc
push
mov
rorl
ja
jmp
cmp
push
in
lahf
and
sahf
mov
movq
andb
xchg
callw
pop
fstps
loope
or
call
shrb
sbb
pop
imul
dec
ret
mov
ds
and
pop
lahf
dec
xchg
push
mov
push
push
pop
and
mov
lea
and
cmp
push
in
xor
test
idivl
or
pop
ss
jnp
gs
rcll
push
cmp
dec
and
clc
movsl
push
pop
js
sbb
aad
pop
fmull
push
dec
mov
pop
xor
sbb
sti
push
add
mov
ss
ljmp
pop
dec
std
cld
sub
incl
daa
out
mov
sbb
dec
or
adc
inc
out
popa
lods
pop
cmp
ja
jnp
ljmp
test
sbbl
mov
mov
cmp
pop
clc
cmc
stos
and
dec
inc
fisttpl
dec
mov
sub
ja
sub
aam
jne
mov
inc
jnp
addps
ds
push
pop
pop
mov
aad
cmp
jecxz
sbb
add
pop
cltd
fs
pop
fnstenv
adc
fmuls
icebp
xchg
pop
sub
out
xchg
add
xor
sub
stos
pop
int
cli
test
pop
in
inc
movl
pop
lahf
fsubl
cmpsl
push
pop
adc
pop
cmc
and
movsl
lock
mov
xchg
repz
xchg
mov
pop
pop
mov
xchg
sub
jmp
sbb
add
dec
cmpsb
inc
shll
cmp
lret
lcall
imul
clc
std
adc
pop
pusha
mov
add
pop
sub
sub
ficoml
mov
pop
jl
sahf
jg
rcll
push
pop
add
lret
lods
std
mov
push
sbb
out
data16
xor
or
pop
mov
push
pop
loop
aam
mov
fistps
mov
sub
lock
dec
push
push
xorl
cmp
push
sub
push
iret
push
cs
cwtl
adc
arpl
or
sbb
or
push
fimull
rcr
jmp
pop
cld
leave
sbb
adc
adc
test
xor
ja
pop
xor
cwtl
pop
dec
xor
sub
sti
ds
flds
ficoms
mov
jns
insl
fcomps
shrl
push
scas
cmp
shll
fldenv
cmp
and
into
pop
sbb
arpl
push
or
pop
imul
cmp
push
inc
mov
pop
sti
in
js
sub
es
xlat
push
cmpsl
adc
mov
pop
aad
xchg
fisubrs
loop
pop
jae
mov
xor
xchg
cmp
xchg
or
sbb
in
rorl
dec
lods
data16
stos
outsl
mov
pop
lds
sahf
ret
dec
add
jecxz
push
into
jns
jbe
pop
add
jmp
push
and
enter
fmuls
inc
mov
xor
cmp
cltd
jmp
loop
jbe
sahf
repnz
fnstcw
lea
add
jno
sub
mov
mov
push
sbb
aam
cmp
push
sub
xchg
sarl
stos
sbb
addb
pop
lea
sbb
dec
mov
cmpsb
test
fs
dec
decl
out
cmc
ret
pusha
divl
jecxz
or
cld
sub
adc
out
inc
pop
and
push
push
add
push
jmp
push
dec
aas
pop
mov
sbb
addr16
pop
pop
sbb
cld
push
inc
xor
pop
dec
das
ljmp
iret
pop
or
jbe
lahf
pop
and
push
sbbl
stos
mov
push
push
push
dec
adc
mov
mov
pop
or
movsb
push
test
xor
sbb
push
adc
pop
gs
shll
inc
and
xchg
mov
cmp
lret
lea
pop
adc
inc
xor
dec
popf
ret
rcl
cmp
loop
mov
lret
inc
test
mov
pusha
imul
jbe
notl
inc
cmp
lahf
ss
mov
lea
inc
call
mov
cmp
push
pop
or
mov
sub
xchg
or
call
icebp
cltd
fwait
dec
jns
xchg
xchg
jne
addb
in
mov
sub
ficomps
fwait
or
nop
pop
ds
and
cmpb
push
pop
inc
add
sbb
jo
fcomip
sti
icebp
pop
push
xchg
add
cmp
or
mov
adc
mov
push
movsl
xchg
dec
pop
inc
mov
mov
fisttpll
or
fimull
imul
andl
xchg
pop
mov
scas
push
dec
sbb
sbbb
or
mov
jp
mov
nop
fbstp
das
pop
ret
movsl
sbb
adc
dec
jp
pop
jno
xor
pop
and
cmp
add
mov
stos
add
cmp
adc
data16
pop
and
fstl
cmpsl
incl
or
or
mov
out
dec
mov
bound
jecxz
or
jecxz
cmp
or
and
lahf
ljmp
mov
popf
pop
adc
mov
int3
rep
pop
mov
inc
cli
adc
leave
mov
jg
xchg
and
push
mov
pop
xor
lcall
dec
or
repnz
xor
mov
pop
lock
sti
push
icebp
jb
or
in
repnz
mov
sbb
sarl
dec
xor
dec
xchg
xchg
loopne
sub
pop
push
push
xchg
adc
dec
dec
and
or
pop
and
lods
mov
mov
jmp
pop
cli
inc
mov
push
lds
mov
jno
ja
in
pop
inc
or
in
fmull
mov
ret
enter
cwtl
arpl
popl
adc
lods
in
stc
and
pop
jno
xchg
mov
or
push
inc
mov
in
mov
pop
test
mov
insl
inc
mov
dec
inc
xor
dec
jne
mov
mov
xor
inc
stc
mov
sbbb
cwtl
adc
push
pop
jl
rclb
dec
in
data16
pop
mov
xor
push
pop
xor
fld1
icebp
xchg
pop
in
push
jl
mov
gs
jne
jg
jle
aam
sbb
push
pop
cwtl
or
mov
adc
test
fcmovbe
inc
xchg
pop
cmp
inc
daa
icebp
push
adc
cmp
fwait
pop
repz
push
pop
es
adc
test
or
and
call
ss
mov
adcb
mov
pushf
fidivrl
mov
xor
and
pop
push
or
cmp
lds
mov
ficoml
push
in
inc
mov
in
arpl
xchg
dec
cmp
push
inc
mov
mov
dec
xor
xchg
popa
dec
mov
sahf
push
lods
pop
stc
cmp
pop
gs
lds
inc
test
ret
in
enter
pop
xchg
xchg
data16
sbb
std
lret
mov
in
xor
arpl
inc
pop
imul
sbb
push
mov
push
adc
mov
mov
pop
repnz
dec
repz
cmp
xor
mov
aas
and
lods
push
inc
stc
repnz
leave
and
push
dec
add
mov
lret
cmp
jne
scas
pushf
add
jecxz
repnz
pop
push
pop
or
mov
movsl
gs
mov
popf
lods
xchg
jae
rcrl
jnp
push
fxch
pop
imul
dec
aam
ds
pop
es
sub
testl
sbb
jg
push
fisttpl
pop
add
inc
cmp
cmp
sbb
mov
movsl
shll
cmp
sub
sbb
fistpll
xchg
pop
mov
mov
data16
test
aas
fildl
adc
scas
je
ja
push
or
loopne
push
dec
pop
rdtsc
mov
orl
mov
xchg
add
add
or
jns
pop
in
fwait
pop
leave
loop
mov
pop
xchg
fstps
lahf
mov
mov
test
adc
push
push
cmp
and
sbb
dec
xchg
sbb
pop
push
stos
lret
aam
pop
add
xchg
and
dec
pop
cmp
sbb
xchg
pop
add
cmpsb
mov
cmp
mov
sbb
lock
mov
dec
pop
test
pop
xlat
mov
cli
test
data16
fimull
pop
mov
jne
test
lods
push
dec
pop
and
mov
add
loopne
add
jmp
push
cmp
sbb
repnz
pop
mov
in
mov
pop
or
in
jge
add
imul
pop
mov
sahf
xchg
mov
dec
jne
es
out
js
dec
dec
pop
sub
out
lock
jns
push
push
cmp
sub
push
pop
dec
pop
es
daa
stc
cmp
popa
or
xor
out
jmp
jecxz
test
sub
jnp
int3
cmp
imul
idivb
pusha
xchg
pop
lds
xchg
lcall
ss
pop
mov
jp
jnp
cmp
jo
test
mov
jecxz
add
arpl
push
and
xor
mov
cld
testb
bound
ljmp
jge
divl
pop
lea
cmp
pop
test
pop
mov
mov
pop
mov
adc
dec
add
inc
jecxz
aad
insb
pop
fisttpl
mov
ret
add
pop
sbb
sub
push
adc
mov
lret
push
scas
xchg
popf
sbb
stos
loope
pop
in
jmp
pop
in
adc
add
push
adc
jbe
stc
push
or
loop
mov
jecxz
jne
and
cmp
inc
and
adc
gs
cmp
pop
sub
test
and
ds
inc
mov
dec
xor
clc
es
push
and
pop
push
popa
lea
divb
adc
xorl
inc
outsl
pop
jno
jne
sub
ljmp
xchg
jge
movsb
and
daa
dec
lea
std
xchg
pop
pop
les
stos
testb
sbb
pop
ficoms
mov
cmp
pop
push
mov
sbb
test
sbb
push
pop
shrb
sub
pop
pop
enter
push
pop
pusha
xor
lret
sub
cmp
mov
in
lret
pop
jb
xchg
pop
dec
lret
push
daa
inc
jne
mov
xor
mov
jmp
lea
fistpl
adc
xchg
cli
jmp
pop
daa
ret
out
cmp
loopne
jecxz
sbb
lret
add
fwait
pop
push
js
cmp
repnz
and
fnstsw
jbe
test
adcb
leave
pop
hlt
and
push
rcrl
lods
cld
mov
sbb
jg
mov
push
jnp
add
pop
jge
mov
aad
shll
mov
push
or
outsb
std
mov
notb
cmpb
ds
add
pop
insl
cmp
push
lods
mov
pop
stc
in
dec
outsl
aaa
pusha
mov
jbe
mov
sub
mov
inc
jae
or
xor
jbe
cmp
xorb
ret
imul
ja
loope
lods
pop
pop
pushf
push
outsb
out
xchg
cmp
je
mov
jg
push
push
jno
pop
cmpsl
mov
sbb
stos
sbb
ret
or
andb
out
sub
fstps
jmp
cltd
icebp
sub
push
adc
cmc
test
mov
sbb
dec
lods
rcl
jb
sbbb
fisubl
call
sbb
pop
int
fisubs
jg
data16
sbb
pop
sub
ljmp
sub
push
pop
push
inc
addr16
dec
fisttps
outsl
gs
hlt
mov
mov
mov
pop
pusha
push
adc
sub
and
push
imul
movsl
and
pop
or
cmpsl
and
cmp
pop
mov
jno
mov
push
push
cmp
dec
add
dec
dec
inc
fnstsw
clc
cmp
cmp
push
lret
pop
inc
cs
xchg
daa
sbb
fldenv
push
cmp
sahf
pop
mov
push
dec
clc
pop
mov
xchg
push
xchg
hlt
aad
dec
les
sub
lods
dec
lret
test
cs
daa
jecxz
fists
xchg
cwtl
iret
mov
in
jbe
pop
out
outsb
sbb
dec
pop
cltd
stos
inc
fistl
popf
lret
cmp
jmp
xlat
ficompl
dec
das
insl
mov
pop
sub
movsl
nop
xchg
test
gs
scas
mov
pop
insl
push
ljmp
push
adc
xchg
cli
ret
mov
xor
xchg
jmp
push
xchg
cmp
pop
cmp
cltd
in
out
add
rcrb
sbb
inc
fisubl
pop
inc
adc
pop
dec
fdivr
movsb
arpl
jae
xlat
pop
pop
cmp
or
dec
pop
add
pop
push
mov
gs
push
pop
imul
sub
pop
adc
pop
mov
lahf
mov
mov
pop
push
adc
lret
inc
cmp
mov
cmp
push
or
cmp
icebp
mov
fidivrl
inc
jmp
pop
and
test
stos
in
mov
lods
mull
jmp
out
sbb
insb
pop
outsl
and
dec
cwtl
movsl
mov
mov
or
test
mov
clc
or
sbb
push
scas
mov
or
adc
xchg
aad
dec
addr16
insl
push
adc
pop
jne
add
ss
test
pop
pop
divl
add
jne
pop
jmp
fs
push
pop
cmp
pop
daa
adc
xor
jecxz
aam
dec
test
sub
pop
int3
jbe
or
adc
imul
inc
and
pop
pop
jbe
and
inc
adcl
pop
shrb
dec
xor
sbb
pusha
aam
mov
pop
sub
or
imul
jno
or
mov
xor
add
es
in
pop
push
cld
adc
and
add
fistl
sbb
pop
ret
mov
jge
pop
ljmp
dec
jbe
pop
test
add
pop
mov
pop
cmp
inc
fldenv
pcmpgtd
rorb
sbbb
pop
push
adc
add
iret
rcrl
decb
mov
mov
or
pop
xchg
adc
in
repnz
pop
mov
daa
add
pop
xchg
push
xchg
sbb
and
inc
push
xlat
dec
enter
cmovae
clc
cmp
pop
and
pop
mov
add
or
pop
mov
jbe
fdivs
lods
jg
dec
xchg
arpl
push
jge
testl
inc
int
jl
jecxz
xor
mov
push
push
xchg
arpl
ret
fwait
inc
sbb
int
add
push
jle
cmp
fstpt
cmp
lods
push
inc
xchg
mov
mov
aas
fidivrl
and
cmp
test
movl
insl
mov
pop
cs
lds
aad
or
mov
xacquire
adc
pop
inc
fadd
sub
xchg
cwtl
push
pop
xor
jmp
pop
popf
loop
xor
sbb
sbb
mov
push
jmp
xchg
pop
xchg
push
pop
mov
lods
cmpsl
push
int3
push
sub
add
lds
pop
mov
gs
nop
mov
inc
inc
or
and
hlt
and
sbb
stc
xchg
jecxz
outsl
or
add
cmp
bound
add
lock
in
pop
inc
iret
jne
xor
pop
int3
dec
fstpl
push
into
and
arpl
add
pop
mov
inc
pop
push
mov
pop
pop
outsl
adc
pop
out
or
adc
or
sub
mov
test
fistps
adc
sbb
ss
pop
inc
popa
stos
jecxz
inc
pop
ljmp
insb
test
pop
mov
xor
push
inc
dec
dec
sbb
mov
xchg
popa
pop
mov
jmp
ret
jle
pop
ret
inc
test
cmp
pop
jb
push
pop
mov
outsl
mov
js
xor
mov
dec
inc
inc
mov
xchg
out
push
dec
dec
adc
add
sbb
pop
xor
mov
cltd
insb
stos
push
mov
cltd
sub
fcompl
jge
jno
jp
mov
pop
ja
dec
repz
mov
shl
sub
xchg
push
mov
enter
sub
inc
mov
push
data16
ror
mov
pop
mov
jge
jb
jmp
inc
jge
aas
aaa
addl
mov
test
js
lea
adc
cltd
push
mov
inc
stos
repnz
add
mov
dec
lea
sbb
fbld
xchg
int
mov
gs
fsts
fisttpll
cltd
xorl
out
adc
jno
mov
sub
and
stc
and
and
sti
xchg
std
popf
fsts
push
pop
push
cld
adc
pushw
adc
sub
pusha
sbb
sbb
push
and
xchg
and
mov
inc
xor
aas
sbb
inc
cmp
and
adc
arpl
dec
ja
dec
pop
or
inc
jae
xchg
mov
lds
jmp
push
cmp
mov
dec
push
mov
sbb
pop
jae
pop
imul
and
insl
mov
or
and
stos
cli
lea
cltd
or
pop
fwait
and
mov
xor
adc
inc
sbb
rcll
dec
and
xor
push
fstps
frstor
loope
in
jmp
icebp
pop
cmc
or
lea
std
adc
xor
push
nop
pop
rorl
lock
rclb
adc
inc
sbb
int3
push
mov
and
sub
mov
inc
push
arpl
xor
push
ds
cmp
pop
adc
aas
dec
pop
arpl
in
not
cwtl
pop
in
daa
insb
xor
jb
sub
dec
add
pop
sub
pop
xchg
pop
inc
repnz
push
adc
inc
cs
push
mov
and
dec
xor
or
rcrl
pop
and
pop
out
dec
and
rorl
sbbb
mov
xchg
sbb
mov
rcr
and
or
pop
jmp
test
inc
sbb
sahf
push
dec
ss
jmp
xchg
mov
gs
je
mov
les
jmp
xor
push
sahf
pop
ret
les
jbe
cltd
pop
das
lahf
add
jae
or
pop
and
fstps
cmp
sub
inc
inc
stc
cltd
pop
ret
out
rcrb
pop
dec
and
and
push
mov
test
leave
loop
mov
or
fisubrs
jnp
ficoml
lcall
push
xchg
xchg
pop
rorl
fwait
mov
ss
pushf
lret
jo
lcall
cmp
cmp
shll
and
mov
out
ds
ljmp
mov
ret
aad
push
fistps
pop
and
adc
push
ljmp
pop
mov
add
mov
mov
push
sbb
adc
dec
fisttpl
add
jmp
jne
sub
ds
cmpsb
sub
jae
pop
rcll
imul
add
and
pop
mov
clc
sub
pop
imul
dec
mov
mov
and
jp
xchg
lods
xchg
push
jnp
lea
sub
pop
pop
jge
arpl
push
insl
jg
pop
pop
push
pop
mov
ret
lcall
pop
scas
inc
xorl
jg
jae
xor
jne
xchg
push
fidivrl
sub
push
dec
cmc
pop
or
notl
popa
dec
push
cli
or
cmp
ljmp
test
mov
xchg
pop
or
jge
push
out
mov
shlb
cmp
test
fwait
imul
xchg
push
out
jl
add
push
xor
sbb
and
jecxz
lcall
loope
pop
pop
jne
aaa
sbb
sbb
gs
push
xlat
loopne
or
std
negb
das
sbb
push
add
push
mov
pop
iret
pop
dec
repnz
adc
imul
xchg
mov
mov
dec
mov
call
lods
jl
jbe
insb
pop
or
inc
cmpsl
jmp
adcb
fnstenv
fisttpll
popl
mov
xchg
push
adc
pop
mov
jmp
sbb
js
jb
ja
add
icebp
pop
jns
push
push
pop
cltd
ljmp
pop
jp
mov
xchg
lret
std
dec
inc
and
pop
cmp
sub
cmpl
inc
fsubs
std
cmp
cmp
push
push
sbb
andl
fdivrl
sbb
mov
sbb
add
inc
imul
jnp
enter
in
sbb
cmp
pop
xchg
fsubrl
or
es
pop
mov
jne
add
cli
push
fcompl
mov
clc
pop
mov
xor
mov
adc
test
sbbl
add
dec
dec
cmp
xchg
push
and
fistpl
pop
xchg
icebp
pop
mov
mov
js
adc
pop
jmp
jg
mov
insl
jle
sbb
loop
pop
xor
adc
jg
push
les
pop
push
add
gs
pop
add
cmp
jecxz
out
and
jecxz
or
addr16
pop
adc
push
icebp
inc
das
inc
push
shll
hlt
popa
mov
adc
jbe
sbb
xchg
sub
sbb
dec
jne
add
jnp
pop
daa
add
inc
cmp
push
dec
push
mov
punpckhdq
pop
movsb
test
inc
push
repnz
pop
arpl
pop
or
insl
cli
jae
push
loop
fiadds
scas
add
sub
cld
pop
fisubrl
mov
aam
push
cmpsb
pop
xchg
idivb
sbb
dec
adc
fucomip
or
int
ja
inc
pop
fs
jmp
jne
push
and
add
mov
mov
jo
jp
pop
dec
in
pop
mov
mov
pop
repnz
mov
inc
add
jns
jne
jg
in
cwtl
pop
insl
push
xchg
cmp
pop
push
jmp
inc
imul
enter
cmp
fbld
scas
push
and
push
jle
push
std
pop
lcall
inc
leave
daa
ficoms
test
adc
imulb
pop
fisubrl
push
fwait
sti
test
movsb
xchg
and
jp
lds
jb
cmp
jecxz
sti
mov
ljmp
arpl
sbbl
mov
lcall
int3
stos
pop
push
jnp
adc
mov
dec
lcall
jb
dec
fidivl
pusha
lock
sbb
adc
test
lds
fidivrl
iret
arpl
pop
dec
jns
decl
addps
repz
jb
inc
aas
cld
jecxz
and
mov
mov
mov
lds
xor
sbb
sub
xor
adc
sub
mov
das
mov
sbb
loope
pop
cmp
inc
or
aad
or
cmc
jo
bound
loope
sbbb
imul
dec
fcoms
push
xor
adc
std
pop
sbb
push
int3
pop
cmp
addr16
test
outsl
ret
loopne
fs
das
or
pop
sbb
gs
les
negb
pop
ja
push
jo
mov
and
in
jecxz
inc
es
cs
push
je
adc
repz
xchg
pop
into
jle
faddl
in
and
jge
mov
sub
and
mov
jno
push
adc
inc
pop
pop
jnp
mov
lret
cmp
jbe
test
push
jne
push
xor
lods
fwait
enter
loope
pusha
scas
test
or
lret
ret
roll
ljmp
or
mov
adc
push
jmp
and
sub
enter
or
lret
rol
xchg
jnp
lds
fistps
fisttpl
and
cmp
bound
push
and
jmp
jecxz
mov
fdiv
ficoms
pop
mov
adc
mov
push
movsb
dec
pusha
cmp
test
dec
mov
push
jmp
outsl
sbb
jmp
push
add
pusha
aaa
push
dec
and
daa
int3
adc
test
pop
js
imul
xor
push
xchg
test
imul
adc
dec
push
add
jne
sbb
add
imul
shlb
push
ds
fstpt
jae
xchg
jnp
sahf
loop
pop
pop
sub
out
loopne
clc
pop
mov
xchg
nop
and
sub
std
je
inc
cwtl
fwait
adc
aad
mov
xchg
movsl
mov
mov
add
pop
cmpsl
mov
mov
mov
jne
adc
shrb
and
jno
les
inc
leave
mov
icebp
int3
fsts
inc
adc
pushf
xchg
sbbl
inc
xchg
and
add
and
push
sbb
leave
lret
loope
stos
in
jb
aad
jmp
ja
ret
cmp
shlb
adc
shll
pop
ret
or
xchg
push
push
pop
mov
je
pop
daa
enter
rorl
push
sbb
mov
push
and
cltd
mov
dec
sbb
sbb
rcrb
sub
jg
xchg
rol
mov
pop
std
adc
mov
and
push
cli
mov
jae
pop
pop
xor
pop
xchg
adc
test
stos
sub
xchg
mov
xchg
pop
jne
out
cmc
xchg
push
mov
pop
add
jo
ret
push
aaa
lahf
xchg
lock
inc
fldcw
add
adc
sbb
or
lret
xchg
stos
dec
adc
dec
pop
rcll
mov
lcall
pop
mov
test
aas
out
ja
xor
lret
dec
cmp
lret
adc
repz
jbe
or
jb
push
jecxz
pop
pop
and
mov
daa
dec
outsb
pop
es
xchg
push
add
pop
mov
hlt
and
test
mov
pop
testl
sbbb
popa
pop
push
movsb
xor
mov
loope
addr16
add
fimull
and
or
sahf
hlt
jecxz
ljmp
push
fdivr
xor
push
pop
push
fs
aam
jg,pt
pop
xchg
pop
xor
dec
inc
mov
fmull
adcl
pop
sbb
sahf
sub
adc
lret
scas
and
das
cmc
jl
shlb
jmp
inc
and
sbb
or
fdivrs
inc
xor
mov
loope
test
sub
xchg
bound
pop
pop
das
mov
cmp
test
push
push
daa
lods
pop
mov
loopne
mov
sbb
ja
mov
mov
pusha
dec
ret
mov
sub
pop
inc
push
xor
cld
outsb
push
test
push
push
jle
jge
js
pop
inc
mov
jb
adc
cwtl
mov
push
push
into
jae
in
pop
push
dec
fimull
xchg
jle
mov
or
jbe
sbbb
cmp
add
int3
pop
pop
gs
pop
pop
flds
dec
pop
lods
aaa
inc
inc
and
scas
sub
aad
mov
fidivrs
push
ret
adc
add
push
js
xchg
push
cmp
jnp
lods
or
inc
jp
cs
pop
and
out
mov
pop
pop
mov
pop
jb
mov
push
or
pop
push
push
pop
adc
xor
notl
jns
jp
mov
mov
dec
pop
mov
cmp
add
pop
and
xchg
lock
cld
nop
pop
aad
repz
push
jmp
push
cmp
xchg
mov
and
inc
sub
out
push
add
ret
and
cwtl
loope
push
std
inc
jecxz
imul
cs
icebp
pop
ror
sbb
ja
adc
jmp
mov
ror
push
push
sarl
fcmovb
adc
cmpsb
sub
sbb
pop
jo
push
aaa
inc
outsl
xchg
repnz
and
jb
and
pop
ret
pop
add
pop
dec
pop
in
das
xchg
xchg
push
ret
popf
push
pop
adc
jmp
dec
fwait
push
mov
pop
jl
mov
negl
data16
push
pop
push
mov
out
stc
out
sbbl
add
inc
ja
lods
out
pop
push
push
and
cmp
and
je
pop
enter
or
jb
pop
pusha
orb
push
ljmp
insl
xchg
xor
mov
in
aad
push
pop
or
call
pop
push
pusha
ds
and
xor
push
call
pushf
pop
daa
das
cmp
add
ja
mov
cmp
test
test
mov
sub
roll
sbb
jo
push
pop
insl
adc
jne
and
push
jg
rorb
push
cmp
fs
lods
ret
or
jge
movsb
in
sbb
pop
lods
and
xor
xlat
and
repz
lcall
adc
dec
decb
mov
mov
xchg
pop
out
ds
pop
stos
lret
dec
push
add
add
stos
lock
add
pop
mov
ficoms
and
adc
mov
or
popa
cwtl
inc
pop
daa
mov
data16
xchg
dec
rclb
sbb
lcall
mov
addr16
sub
outsb
cmp
and
push
jmp
sub
or
add
cmp
add
sbb
and
insl
jo
mov
sbb
out
mov
adc
and
ss
lds
pop
xchg
fisubs
jl
sbb
xor
in
es
and
xlat
push
pop
imul
ja
arpl
xchg
leave
lcall
shll
inc
sub
dec
sbb
add
fsub
dec
fwait
and
leave
sub
pop
mov
aas
stos
clc
cmp
cmp
pop
push
inc
popf
pop
sbb
push
inc
int
test
pop
aaa
and
ljmp
adc
pop
icebp
stos
adc
adc
cltd
sub
sarb
lahf
icebp
jns
js
mov
call
dec
sub
daa
clc
pop
lea
inc
mov
pop
sbb
add
dec
scas
das
xchg
inc
call
sbb
js
lds
sbb
add
loopne
sbb
cmp
inc
mov
pop
jmp
ljmp
push
dec
lret
outsl
mov
dec
mov
out
mov
dec
mov
jo
pop
mov
add
in
sbb
aas
jae
int3
je
scas
les
js
mov
mov
mov
cmp
xor
sub
fmulp
inc
adc
imul
push
dec
cli
jmp
test
jo,pt
mov
addl
add
leave
mov
pop
mov
sub
cmp
test
out
and
adc
jne
rcrl
imul
into
jmp
xchg
sub
stos
pop
xchg
xor
pop
dec
clc
rcr
sub
sbb
test
pop
or
jecxz
sti
pop
adc
mov
ret
mov
fidivl
mov
js
popa
divb
pop
fiadds
ljmp
cmp
jne
pop
sub
push
notl
mov
fs
in
testb
out
mov
sub
push
pop
fisubrs
push
aam
cltd
sbb
and
test
cmp
jecxz
ljmp
pop
dec
js
sub
sbb
push
cs
jmp
xor
cmp
or
testb
cmp
out
jno
and
enter
and
icebp
cld
insb
pop
imul
mov
inc
sub
dec
test
sub
push
mov
lock
cld
pop
xchg
add
pop
mov
and
pop
aas
jb
cmp
lods
push
mov
dec
and
pop
out
pop
push
dec
push
push
push
cmp
inc
fisubl
push
sar
test
pop
cmp
xchg
adc
pop
loope
inc
in
fisubl
pop
pop
lea
hlt
adc
bound
ds
dec
push
cmp
mov
sub
sbb
xor
das
dec
push
pop
jne
push
adc
mov
lock
fldl
leave
jl
and
mov
fnstenv
ficoml
or
mov
js
dec
cmp
mov
ja
test
xchg
push
pop
cmp
movb
or
sub
push
sti
imul
lret
sub
mov
pop
stc
mov
iret
pop
addr16
adc
jecxz
out
push
or
mov
sub
xchg
xchg
mov
jmp
decb
inc
lds
sub
push
push
mov
enter
dec
and
bound
int3
test
push
jge
jl
mov
push
pop
pop
xchg
cld
popa
xor
add
lods
fimull
in
mov
insl
rcrl
push
mov
das
mov
ror
mov
lods
cmp
and
cmp
mov
mov
xor
pop
pop
repz
imul
decb
fistpl
cwtl
cmc
aam
or
lcall
lcall
pop
sbb
pop
stos
shrl
arpl
dec
push
mov
mov
pusha
xor
rorl
push
imul
pop
or
leave
or
mov
adc
test
add
sub
jae
lods
pop
push
stos
mov
in
mov
and
pop
pop
jmp
dec
aas
sbbb
lahf
and
add
stc
adc
dec
jmp
and
pop
rcl
imul
and
pusha
adc
push
nop
pop
push
cmpsb
call
push
das
in
dec
cwtl
ret
test
call
inc
movsl
push
aam
cmp
or
and
sub
pop
push
push
push
fbstp
pop
arpl
dec
adc
sub
pop
lcall
and
adc
pusha
cld
jle
arpl
cmp
bound
mov
fmuls
out
ja
xchg
lock
test
mov
repz
push
mov
pusha
bound
push
ret
dec
or
loope
fidivrl
pop
ss
add
aam
xchg
xor
and
iret
std
pusha
pop
lds
test
xchg
push
lahf
mov
jnp
or
shll
push
int3
dec
jmp
push
cmp
insb
sub
fsubp
pop
daa
inc
pop
loop
and
rorl
add
and
or
or
mov
cmp
mov
xchg
mov
inc
aam
dec
pop
and
mov
movntq
repz
push
aad
add
fbstp
xchg
ds
dec
push
rolb
lods
icebp
inc
loopne
pop
inc
dec
mov
mov
ss
add
cli
inc
test
pusha
pop
out
lods
int
push
pop
lcall
stos
sbb
sbb
dec
rorb
add
pop
fdivrl
jmp
pop
adc
mov
xor
xor
pop
mov
or
pop
push
int
cmp
ss
repnz
rcrb
out
lret
jb
xor
and
mov
mov
pop
sbb
xchg
xchg
icebp
inc
jae
pop
test
cld
inc
pop
std
test
movl
pushw
lahf
xor
push
dec
mov
xchg
imul
mov
or
or
out
jg
mov
push
mov
scas
pop
cwtl
cmpsl
and
or
mov
pop
hlt
inc
dec
lods
icebp
mov
mov
xlat
pop
ljmp
cltd
pop
jle
jmp
xchg
pop
das
xorl
pop
sbb
pusha
pop
fcmovbe
lret
subl
cmpsl
movsb
sbb
test
push
inc
pop
test
fstl
mov
rcrl
inc
jecxz
mov
addr16
out
andl
push
inc
jg
push
inc
add
xchg
mov
and
pop
mov
cwtl
fisubrl
cmp
imul
pop
rolb
and
lds
les
push
pop
dec
jl
add
lret
dec
ret
pop
iret
mov
gs
imul
ret
mov
pop
jmp
shlb
outsb
add
fidivl
jg
jns
pop
pop
dec
mov
pop
mov
lret
subl
fmull
aam
sub
xchg
push
xor
jecxz
aad
push
push
pop
fsts
cmp
inc
lret
cmp
push
add
outsb
aad
xor
xor
mov
push
movsb
mov
xchg
mov
push
add
pop
push
pop
popf
testl
pop
cmp
sub
dec
arpl
sbb
pop
cli
ja
dec
jno
out
dec
cmp
lea
jmp
cltd
lds
lods
adc
push
les
fstp
std
jnp
push
ret
sbb
xor
lahf
push
push
add
adc
push
pop
lcall
mov
pop
xor
and
xchg
mov
adc
mov
mov
cmp
inc
test
mov
sbb
jno
or
insl
subl
sbb
pop
xchg
push
cltd
stos
sbb
mov
gs
or
out
lret
xor
sbb
push
int
rcl
adc
rorb
cmc
add
jp
xchg
repnz
sbb
push
loope
mov
clc
mov
mov
lea
imul
enter
dec
add
cltd
mov
addr16
lods
stos
sub
and
sub
fistpl
pop
cmp
inc
and
xchg
int
pop
ss
sub
aad
cltd
popl
mov
lods
iret
add
mov
pop
push
or
pop
xchg
repz
cli
sbb
pop
mov
or
pop
push
inc
es
loop
cmp
mulb
jb
lea
and
dec
jl
fcmovu
adcb
jp
inc
pop
imul
pop
pop
mov
in
jp
loop
push
cltd
lods
sub
dec
push
mov
les
sub
and
sub
mov
repz
add
pop
aam
inc
decb
sub
inc
push
pop
rolb
cmp
daa
pop
xor
dec
pop
lods
dec
imul
jmp
cmc
mov
mov
rorb
inc
jmp
mov
lods
sbbb
xor
pop
and
rcll
gs
in
dec
or
sub
inc
test
pop
xchg
pop
sbb
out
pop
call
data16
adc
mov
jb
jbe
addr16
cli
xchg
pop
adc
movsb
jo
int
dec
sub
adc
cmp
dec
pop
and
in
mov
cmp
push
push
jne
push
cwtl
mov
pop
cmc
in
jae
sbb
xor
push
xor
frstor
sub
add
fsts
or
jmp
sahf
sub
pop
cmove
jb
push
adc
xlat
xor
sar
pop
and
pop
in
pop
jae
sbb
or
ss
or
imul
push
or
in
cwtl
test
dec
shlb
cli
add
pop
div
push
enter
and
or
rorl
cmp
inc
adc
outsb
mov
popf
adc
icebp
xchg
mov
fabs
add
pop
mov
and
nop
loop
xchg
rcl
push
in
xchg
je
fcmove
repz
inc
inc
pop
pop
pop
mov
cmc
mov
xor
jg
inc
dec
pop
test
xlat
cltd
add
pop
out
ret
test
pusha
cmpsl
pop
push
inc
in
or
pop
add
inc
sbb
pop
push
push
inc
cmp
aad
pop
and
pop
xor
enter
dec
push
push
dec
jmp
repz
sbb
push
mov
xchg
in
pop
jmp
sub
pop
inc
in
and
das
pop
lahf
add
pop
mov
cmp
out
xchg
xchg
lret
cmp
stos
fmul
roll
jecxz
clc
dec
pop
sub
fists
int3
pop
nop
xor
pop
jb
or
stc
pop
or
mov
bound
jne
and
imulb
pop
jecxz
shll
cmpsl
dec
inc
pop
loop
sub
push
push
push
inc
push
xor
sub
add
pop
pop
sbb
pop
push
aas
fadds
sbb
jmp
hlt
sbb
ljmp
sub
sti
or
mov
das
cwtl
pop
mov
out
jae
push
xchg
ljmp
dec
daa
repnz
in
pop
sub
outsb
scas
push
inc
mov
add
dec
ss
pop
loope
xor
mov
stc
xor
and
mov
insb
pop
adc
ret
push
sbb
int3
lods
or
ss
repz
fsts
pop
pop
imul
jmp
cmp
ss
sub
test
xchg
mov
icebp
jl
sub
scas
fnstenv
cmc
mov
loop
or
sub
shrb
aam
pop
es
sub
pop
enter
adc
nop
jb
sbb
push
gs
jmp
sub
jo
push
or
jne
testl
jl
fldl
test
cmp
push
sti
adc
daa
inc
jne
pop
push
pop
ljmp
or
filds
cmpsb
push
pop
fs
sbb
dec
cmp
mov
mov
xchg
or
push
sbb
xor
adc
push
lahf
bound
sub
flds
sti
or
pop
insb
push
cmp
mov
loop
loopne
pop
mov
sbb
sbb
mov
enter
jns
xchg
xor
dec
lea
push
outsb
push
setns
dec
pop
push
decl
insl
testl
ljmp
lahf
repnz
push
jmp
dec
cmp
movsb
adc
push
lahf
xchg
into
sbb
mov
scas
mov
ljmp
stc
movsl
pop
sub
push
inc
les
jns
mov
or
inc
xchg
cwtl
inc
pop
jecxz
shll
mov
sbb
and
sub
ja
or
and
ror
fimuls
outsb
cmp
imul
jb
push
mov
cmp
dec
ret
popa
out
cld
movsb
pop
xor
sbb
pop
enter
lahf
or
inc
push
ja
dec
fdiv
pop
pop
mov
ljmp
pop
fsubs
fldcw
dec
stc
mov
sub
pop
frstor
lret
push
push
push
or
push
mov
xlat
xor
fmuls
fnstsw
fldenv
setno
das
pop
test
jmp
bound
fstpt
push
addr16
mov
scas
stos
dec
jmp
xor
test
sbb
pop
mov
pop
gs
jge
cwtl
pop
sbb
or
mov
fwait
lods
inc
dec
or
push
xchg
clc
adc
incl
pop
or
movsl
ljmp
fistps
pop
mov
je
sbb
jo
jnp
push
pop
adc
cmp
inc
cmpsb
dec
inc
ss
cmp
pop
push
inc
or
cmc
inc
mov
jmp
xor
dec
clc
ja
cmp
inc
pop
push
mov
or
jae
mov
push
pop
inc
or
repz
popa
sahf
nop
int
jmp
pop
and
push
clc
xor
sbb
push
and
push
pop
mov
cltd
enter
cmp
pop
outsl
lea
pop
and
lcall
test
jae
push
pop
mov
mov
jle
mov
push
test
inc
mov
mov
mov
dec
sub
xchg
fmuls
or
xor
sbb
sub
sbb
dec
cmp
push
pop
repz
inc
add
xor
pop
mov
rcrl
push
pop
out
mov
fcmovb
push
jecxz
pop
xchg
add
pop
test
push
push
pop
and
fwait
xor
mov
loop
pop
mov
imul
or
in
bts
add
scas
sub
leave
lods
insb
pop
dec
fnstcw
and
pop
add
int
add
and
mov
xor
data16
pop
adc
push
jl
mov
cmp
fsubl
cmp
inc
dec
jp
pop
les
std
push
mov
pop
int3
adc
push
push
pop
test
xor
test
adcb
dec
pop
pop
mov
sub
sub
pop
jmp
repnz
or
out
adc
jecxz
push
outsl
pop
subl
xchg
push
ljmp
repz
cmp
mov
adc
sbb
or
pop
push
pop
push
xchg
push
lods
pop
jne
dec
xchg
ficomps
imul
into
inc
mov
cs
lods
or
ss
inc
test
pop
andl
jbe
jne
je
jmp
dec
and
or
mov
add
dec
jbe
mov
pop
or
jp
cmpsl
test
pop
push
jbe
or
outsb
push
inc
push
ljmp
je
or
cmc
push
mov
dec
mov
rorl
icebp
iret
pop
mov
mov
fcomps
sub
push
pop
cmp
xchg
and
dec
mov
mov
push
lcall
pop
push
test
mov
and
inc
lods
cwtl
push
cmp
pop
or
xor
sub
sub
mov
pop
pop
in
xor
jnp
add
adc
lea
push
hlt
cltd
push
fnstsw
jmp
xchg
nop
mov
pop
mov
cmp
pop
je
test
pop
mov
lea
lods
lret
dec
adc
pop
mov
ret
loopne,pt
pop
in
adc
scas
sbb
pop
inc
push
mov
pushf
adc
add
mov
inc
mov
pop
push
dec
jb
pop
push
inc
sbb
pop
jle
sub
lcall
jns
inc
xor
and
push
pop
adc
daa
add
sbbb
fidivrs
xchg
icebp
fstps
cmc
push
push
inc
lea
adc
lahf
xchg
and
xchg
add
leave
jnp
sub
inc
lret
pop
jnp
ljmp
jne
mov
stc
out
pop
bound
ficomps
add
mov
mov
pop
jnp
or
sbbb
dec
or
inc
mov
push
adc
repnz
sub
jne
pop
in
inc
cmp
dec
jae
fsts
fld
test
pop
sbb
ds
das
push
clc
jb
and
adc
pop
mov
es
movsl
jnp
push
mov
mov
pop
jle
pop
repnz
out
push
fstpl
fsubr
insb
pop
pop
cmp
lcallw
sbb
pop
mov
pop
addr16
pusha
push
pop
or
loopne
repz
or
sbb
pop
or
adc
aas
syscall
xor
jmp
pop
inc
rclb
mov
mov
or
stc
and
push
test
je
dec
pop
stos
mov
push
mov
flds
and
sub
aas
mov
dec
cmpsb
pop
in
in
sub
cli
cld
hlt
xor
inc
dec
and
push
leave
jecxz
ds
pop
pop
ret
lock
jecxz
and
adc
xchg
jae
cld
loope
ljmp
cs
mov
jmp
inc
pop
inc
pop
je
mov
leave
es
in
dec
lret
clc
hlt
add
notb
aam
fistpll
or
out
add
pop
popf
dec
loopne
ds
jns
pop
and
inc
std
sub
xor
mov
push
cltd
dec
sbb
dec
repnz
mov
fisubl
mov
in
lcall
push
repz
or
pop
and
outsb
hlt
jp
jns
pop
fwait
lcall
das
jmp
pop
sbb
aas
pop
sub
popa
xor
fistpl
push
jl
fadd
xchg
xchg
sub
and
dec
lcall
sub
push
pop
xor
sbb
nop
dec
pop
movsb
pop
aaa
insb
xchg
or
xlat
push
push
adc
test
jbe
sbb
imul
inc
or
repnz
dec
rcr
mov
push
gs
mov
imul
in
call
mov
es
mulb
pusha
lods
and
pushf
inc
pop
sub
cmc
xor
adc
daa
pop
pop
xlat
cmpsb
mov
inc
pop
mov
push
sub
pop
inc
cmpsl
mov
arpl
sub
mov
pop
loop
dec
inc
lea
cwtl
push
and
loope
lods
adc
and
inc
xor
add
push
jmp
cmpsb
dec
mov
daa
xchg
pop
movsb
push
mov
adc
lret
pop
loope
and
pop
stos
dec
and
xorl
fucomip
jg
pop
cmp
jae
pop
pop
ficoms
sbb
cltd
mov
aad
dec
pop
sbb
mov
xchg
in
xor
stos
add
les
mov
scas
out
mov
icebp
ds
push
jecxz
pop
jmp
inc
dec
in
pop
stc
pop
push
nop
xchg
rcrb
shll
mov
pop
add
jbe
jmp
in
adc
divl
adc
inc
jp
pop
in
jl
repz
insl
aad
mov
cli
rorb
out
pop
into
cmp
leave
sbb
cltd
sub
xchg
pusha
mov
pop
in
adc
and
sti
jb
ds
js
cltd
pop
ljmp
jns
lahf
aad
pop
and
pop
push
stc
aas
xchg
mov
pop
aad
lahf
dec
dec
push
rcrb
sub
mov
or
adc
sub
add
and
fnstsw
inc
pop
sbb
inc
pop
ja
add
push
cmp
sbb
fistpl
cwtl
jg
mov
les
add
pop
jp
lods
in
push
pop
test
adc
daa
pop
add
lods
pop
xor
push
rcrb
push
adcb
mov
ds
pop
pop
or
cmp
shrl
lea
pop
cmp
iret
pop
inc
lret
out
inc
dec
pop
hlt
cld
mov
sbb
or
test
sub
jmp
sbb
pop
add
mov
loope
neg
pop
rclb
test
daa
aam
frstor
pop
mov
outsb
cmp
lea
int3
jo
daa
cmp
pop
pop
pop
fisttpl
jno
loopne
inc
adc
repz
jmp
dec
inc
inc
jecxz
or
cmp
gs
pop
fs
xchg
sub
cltd
insl
jmp
dec
out
and
fwait
push
push
mov
push
pop
nop
push
pop
rcll
in
aad
aaa
pushf
ljmp
icebp
xor
mov
jmp
dec
mov
sbb
dec
loope
xchg
pop
mov
rcr
jge
inc
filds
roll
cmp
dec
cmp
inc
stos
and
cmp
pop
dec
repnz
and
add
xchg
inc
pusha
imul
test
stc
setae
mov
mov
pop
and
data16
and
sbb
and
decl
cmp
xor
clc
mov
push
push
ss
sarb
test
push
mov
dec
mov
add
fimull
pop
das
jmp
dec
ss
cmp
lods
rorb
jmp
aad
in
cmpsl
pop
pop
dec
pop
inc
arpl
test
mov
pop
jmp
pop
adc
jg
mov
and
hlt
and
inc
sbbb
int
mov
fnstenv
mov
sbb
xlat
xor
jg
insb
push
inc
insl
jge
lds
sbb
jle
xorb
inc
bound
mov
pop
xor
push
push
pusha
and
mov
sti
lods
pop
dec
decl
nop
inc
and
pusha
fdivrl
das
lahf
sbb
push
push
cmp
aad
sbb
ljmp
and
fnstenv
pop
es
cs
pop
out
pop
push
mov
mov
jb
jno
mov
mov
call
jcxz
mov
es
mov
stos
mov
aas
and
sbbb
xlat
mov
push
lods
and
cltd
push
push
cmp
sbbl
add
sbb
aaa
xor
sub
jo
and
mov
clc
xchg
ja
xor
push
insl
inc
pop
or
movb
fimuls
jo
mov
cmp
test
push
xor
mov
push
sbb
cmp
lods
mov
sub
adc
ret
xchg
pop
pop
idivl
addl
pop
adc
push
mov
pop
xchg
jns
or
mov
mov
pop
movsl
or
adc
lods
das
dec
test
sahf
dec
and
pop
aam
push
xor
xor
push
xchg
ds
push
test
pop
sub
jmp
das
dec
nop
push
pop
dec
sbb
aas
and
es
sub
out
pop
lock
jge
and
mov
inc
aad
dec
lret
pop
dec
xor
sahf
mov
cmp
cmp
and
leave
xor
out
push
push
mov
or
mov
test
mov
inc
xor
lea
enter
scas
jg
mov
xchg
xchg
jns
pop
mov
mov
inc
imul
pop
jns
xchg
cmp
and
push
insl
jecxz
stc
pop
sub
adc
push
and
sub
int3
mov
pop
sub
adc
pop
pusha
lret
sbb
imul
dec
int
push
adc
dec
pop
aam
push
lret
xchg
pop
push
in
aad
sub
xor
outsl
pop
sub
adc
push
lret
push
mov
dec
adc
fldenv
xchg
cmp
pop
ja
movsl
fstps
int
inc
cwtl
push
cmp
push
loop
or
mov
arpl
fidivrs
loope
les
jge
data16
mov
ljmp
jb
lods
mov
and
sub
mov
mov
jbe
pop
add
push
sar
cmp
and
mov
dec
add
adc
pop
push
adc
jnp
push
push
cmp
outsb
push
gs
jo
jbe
sti
inc
pusha
sbb
in
sahf
scas
fldenv
pop
lds
leave
pusha
xor
fistpll
dec
test
fwait
ret
fucomi
cwtl
sub
pop
add
cmpsl
cmp
pop
sub
femms
xor
push
sub
daa
fwait
jo
and
outsl
adc
pop
fnsave
sub
xchg
pop
push
dec
jbe
pop
int
jne
jl
mov
pop
ljmp
shrl
js
pop
inc
inc
sahf
shl
mov
pop
fimull
inc
fldcw
cmp
ss
pop
fimuls
enter
xor
ret
out
push
stos
and
add
jge
test
pop
mov
lods
inc
call
pop
jmp
xchg
adc
jp
cmpsl
pop
mov
dec
xchg
cld
add
stos
cmp
insl
mov
aaa
mov
or
rorb
add
jge
dec
pop
imul
fimuls
and
dec
in
jnp
mov
pushf
test
sbb
aad
adc
push
dec
xchg
movsb
xor
jp
pop
pop
int3
inc
jmp
dec
test
push
pusha
adc
sbb
pop
jne
popf
push
fyl2x
sub
pop
nop
mov
xor
mov
cmp
mov
daa
pop
stc
jae
stos
pop
cmpsb
adc
xchg
fldcw
mov
rcrl
pop
add
dec
jns
mov
je
mov
les
pop
push
dec
jmp
cmp
imul
mov
cmp
xor
push
and
dec
jmp
loope
xor
hlt
rorl
add
pop
in
add
lods
shlb
push
pop
testl
mov
jnp
dec
cmp
cs
and
inc
mov
push
mov
xor
or
add
sbb
xlat
ret
jle
pop
daa
jmp
bound
cwtl
cmp
jge
loop
inc
pop
adc
mov
or
test
sbb
rcr
orl
or
xor
push
pop
fbstp
pop
add
out
out
mov
ds
mov
cmp
movsl
pop
or
jmp
insb
push
mov
mov
add
mov
sub
test
add
or
pop
xchg
mov
inc
push
mov
xchg
sbb
vcvtsi2ssl
cmpl
cwtl
sub
int3
pop
jg
push
mov
pop
lahf
xchg
push
xor
push
and
in
jbe
xchg
stos
lcall
cmpl
sub
ret
arpl
sub
cmp
fwait
lcall
movsb
sub
in
jo
mov
repnz
cmp
mov
sub
fldenv
sub
adc
mov
dec
sbb
xor
fstpl
sahf
lods
rol
ljmp
into
lcall
push
incb
cmp
cld
cmp
xchg
pop
imull
iret
pop
pop
lcall
pop
sbb
scas
in
xor
out
faddl
pop
add
mov
fnstsw
addb
push
xchg
sub
jmp
xor
mov
je
push
sbb
sbbl
adcb
pop
sub
in
ds
cld
adc
les
cwtl
int
mov
adc
scas
test
jbe
mov
shl
mov
std
mov
sbb
dec
push
rcll
test
and
ljmp
andl
pop
fstpl
out
insb
hlt
pop
adc
and
cmpsb
jo
xor
sbb
xchg
repnz
sub
dec
pop
jae
add
stc
jle
pusha
pop
xchg
adc
mov
sub
dec
stc
fnstenv
lock
dec
loope
sbb
xchg
pop
rolb
mov
pop
jmp
xchg
pop
sbb
rorl
rcrb
sub
sbb
jns
mov
xchg
es
test
pop
gs
sub
movsl
inc
lret
push
mov
pop
in
pop
or
mov
pop
inc
cmp
js
pop
icebp
cmp
mov
inc
xor
adc
and
int
fucom
movsl
push
xchg
push
sbb
sbb
fcoms
mov
mov
scas
test
xor
test
sbb
xchg
jb
mov
mov
pop
adc
addr16
js
adc
inc
test
roll
lcall
mov
jg
or
out
jle
cmp
int
jge
fsts
rorl
stc
xchg
sbb
sub
jnp
jg
and
ret
mov
dec
push
das
jbe
repz
arpl
lcall
out
nop
jo
js
inc
pop
xchg
into
aas
xchg
sbb
push
xchg
xlat
and
loopne
inc
mov
push
inc
pop
int
ret
pop
repnz
test
mov
dec
jge
std
daa
rclb
fadd
jne
sbb
mov
mov
push
stc
das
enter
pop
and
xor
pop
cmp
fisttpll
jae
jnp
sbb
ficomps
mov
pop
or
mov
mov
fsubl
dec
mov
mov
fmuls
test
inc
jo
xor
scas
pop
inc
out
movsb
cmc
je
test
mov
lods
mov
pop
test
sub
cmp
mov
inc
nop
xor
mov
and
push
pop
pop
in
adc
inc
xlat
popa
mov
dec
xor
inc
out
out
mov
mov
sahf
sbb
pop
add
xchg
les
xchg
jl
cld
outsl
push
push
mov
cmp
pop
mov
mov
xchg
test
xor
add
xorb
pop
dec
jo
pop
test
ds
xor
push
js
push
push
xor
cmp
dec
or
shlb
popa
jbe
ljmp
mov
inc
push
pop
sub
cmpsl
jge
adc
leave
pop
jne
and
or
and
pushf
int3
xchg
test
push
pop
mov
and
push
jbe
fildl
fistps
mov
xchg
mul
adcb
das
mov
jle
pop
xor
jns
imul
jno
lods
mov
jae
mov
xchg
test
rcrb
adc
in
pop
shll
dec
repnz
cwtl
pop
pop
lock
je
or
sbb
ja
push
pop
inc
push
dec
test
iret
popa
push
test
sbb
jle
xor
pop
out
lahf
sbb
imul
pop
int
inc
arpl
push
out
in
inc
pop
push
push
repz
mov
repnz
shr
cltd
movsl
pushf
pop
add
add
inc
jne
jl
sub
test
jl
aaa
pop
xchg
cmp
cli
sbb
or
sub
cltd
jmp
inc
out
push
jp
add
fadd
pop
jg
or
mov
clc
loop
cld
sub
jns
fwait
insb
pop
sti
lret
lea
lcall
and
push
mov
leave
push
cmp
cmpsb
ljmp
mov
dec
jl
cs
push
sub
dec
in
pop
pop
mov
push
pop
mov
notb
es
std
jp
dec
orl
mov
pop
lds
mov
imul
inc
cmpsb
xchg
dec
mov
mov
push
pop
adc
and
and
outsl
xchg
dec
pop
pop
addr16
dec
mov
xor
out
xor
sub
xchg
sub
xchg
push
rcrl
cltd
add
cwtl
mov
pop
dec
jp
jo
pusha
insb
cmpsl
pop
inc
jg
and
and
push
out
pop
mov
pop
xor
pop
ret
or
and
pop
ja
adc
push
aam
and
pop
pop
and
add
cs
mov
ss
arpl
jl
sub
sub
or
fdivr
cs
pop
jbe
jbe
jmp
xchg
cmp
lea
fisttpl
lods
jae
dec
xor
cltd
test
dec
and
mov
bound
cmp
stc
pop
fildll
das
pop
in
xor
xchg
imul
add
lds
and
or
arpl
sbb
mov
daa
andl
adc
icebp
mov
pop
fwait
inc
fists
jle
in
pop
loop
xchg
pop
mov
sub
jmp
xor
mov
push
outsl
dec
pop
shrb
jb
pop
adc
mov
adc
ret
jecxz
jns
pop
adc
push
sbb
jbe
mov
pop
pusha
dec
daa
pop
mov
push
insb
jmp
pop
mov
cld
leave
ss
sbb
rcrb
mov
mov
pop
dec
in
push
fsts
or
mov
adcb
pop
sub
jecxz
dec
adc
jo
ret
sbb
adc
lahf
jecxz
daa
push
sub
mov
xor
mov
jecxz
push
adc
ret
pop
pop
ljmp
and
pop
mov
leave
mov
js
pop
lods
jo
das
lds
sbb
xor
add
adc
add
adc
test
imul
dec
pop
inc
inc
inc
lret
mov
xor
imul
mov
ficomps
push
sub
add
loopne
aam
jmp
xor
add
pop
pop
jbe
ret
inc
pushf
adc
cwtl
mov
fwait
pop
cmp
adc
sub
sarb
push
cmp
adc
xchg
test
lahf
xchg
and
ret
ret
lcall
lods
ficoml
mov
push
xor
xchg
mov
xlat
jmp
push
fnsave
repnz
mov
dec
mov
mov
jmp
xchg
sbbb
xor
out
js
pop
notl
insl
or
dec
xor
pop
ficoml
sbb
adc
inc
mov
pop
add
inc
pop
mov
aad
loopne
mov
pop
dec
fldenv
push
imul
stc
arpl
xor
stos
cs
push
jae
push
pop
cmp
movsl
mov
lcall
aam
push
insl
adcb
out
test
fdivrl
je
jecxz
adc
jmp
pop
fstpt
lret
dec
pop
jb
pop
push
lcall
pop
xor
or
cmp
insb
fstpt
or
adc
shlb
push
ljmp
dec
fwait
or
cwtl
test
dec
jbe
add
push
fstpl
push
cmp
mov
inc
pop
inc
pusha
lcall
gs
pop
and
inc
pop
daa
cmp
das
pop
add
push
push
imul
jmp
xchg
mov
fdivrl
addr16
mov
jmp
push
push
ja
scas
mov
and
inc
in
pop
hlt
movsb
and
pushf
imul
dec
cmp
or
lea
dec
imul
orl
adc
push
mov
int
pop
test
loopne
inc
pop
in
pop
gs
or
pop
clc
je
mov
pop
pop
mov
push
test
rcrb
ss
pop
cwtl
pop
addr16
dec
fwait
jle
or
pop
loope
dec
pusha
adc
inc
outsl
mov
jne
mov
aas
add
push
sbb
xchg
and
push
loop
popf
and
pop
sbb
cmp
imul
bnd
xchg
fisubrl
pop
shl
out
pop
andl
xor
pop
mov
sti
lcall
push
sbb
sbb
sahf
pop
sbb
push
loop
fsubs
and
inc
daa
sbb
cltd
and
adc
dec
mov
stc
pop
jge
test
mov
iret
mov
pop
pop
sub
int
xchg
adc
push
inc
add
or
pop
cmc
push
jl
lret
pop
rcll
xor
push
push
test
loop
dec
mov
test
fcoms
dec
lcall
inc
xchg
sub
mov
or
out
inc
pop
dec
cmc
fidivrl
sub
sbb
pop
mov
push
testb
sub
lret
sub
pop
xor
out
lret
mov
mov
stc
pop
mov
add
pop
test
add
or
dec
lods
pop
jmp
icebp
or
xchg
push
pop
jnp
push
or
mov
add
pop
xchg
popa
cmpsl
mov
testb
push
gs
ja
mov
sbbl
or
mov
in
sub
mov
or
movsl
cli
dec
fmuls
sbb
mov
cwtl
push
or
das
cmp
pop
out
jbe
sbb
dec
sbb
xchg
in
pop
xchg
test
jne
mov
loope
push
mov
push
pop
jl
mov
or
xchg
mov
scas
lcall
push
and
scas
inc
sahf
lcall
and
incl
lds
cmp
in
fbstp
pop
sub
gs
test
or
adc
jle
test
shr
xor
cmp
enter
testb
sub
ret
jne
loop
icebp
jg
or
mov
out
mov
loopne
pop
shrl
adc
push
jecxz
imul
pop
jno
mov
or
xchg
sbb
in
arpl
lret
movsl
adc
test
in
pop
sbb
dec
push
test
jbe
add
cmp
fldcw
dec
jns
enter
mov
andl
cmc
sbbl
mov
jae
xchg
jge
flds
inc
pop
out
push
dec
enter
adc
dec
mov
in
mov
mov
sbb
pop
jbe
test
inc
jp
pop
push
es
jmp
pop
mov
mov
pop
cwtl
into
insb
orb
imul
arpl
xchg
ljmp
fistps
out
cld
pop
sub
loopne
in
push
adc
test
jno
fsts
mov
test
lea
jl,pt
adc
cli
loop
dec
and
test
aas
xor
mov
dec
push
xchg
clc
out
dec
sub
fdivrs
shrl
dec
mov
and
push
jmp
jae
push
in
sbb
test
pop
sbb
aad
sub
push
mov
out
mov
pusha
leave
sbb
mov
fistpl
adc
mov
mov
mov
sbb
dec
adc
stos
ljmp
push
loop
or
cs
mov
pop
fstl
mov
jnp
fisubrl
stc
les
cmp
lods
jo
leave
cmc
jb
nop
mov
pop
pop
or
add
inc
or
pop
in
adc
jecxz
pop
lock
xor
sbbb
push
xlat
jg
sub
sbb
fstpl
loopne
jb
inc
add
icebp
pop
adc
ja
push
in
fst
sbb
test
adc
mull
sub
push
gs
jle
xor
std
push
inc
popf
xchg
xchg
mov
jp
fistpll
mov
pop
and
sbb
fadds
mov
dec
pop
mov
ss
fstps
mov
in
push
dec
ror
mov
cmp
outsb
add
sub
das
imul
cmp
fstpl
mov
push
mov
in
fadds
shll
jnp
cmp
addl
push
in
dec
jmp
jp
enter
lcall
inc
pop
es
push
cmpsb
ja
insb
dec
mov
cmp
sub
pop
imul
mov
lock
insb
add
aas
pop
or
fldt
jp
xchg
mov
pusha
ret
lcall
mov
decl
jmp
push
add
jns
and
imul
imul
mov
sub
sub
sbb
jae
mov
mov
fistpl
push
mov
shrb
push
cmp
stc
imul
adc
scas
jnp
subl
cwtl
pop
sub
cmp
jno
subb
cmp
xlat
je
enter
leave
andb
cltd
dec
cmp
add
negb
sub
mov
call
call
cltd
shll
cmp
pop
mov
xchg
fstl
iret
enter
adc
pop
stos
inc
out
mov
xchg
lret
daa
ss
xchg
pop
jge
push
jne
xor
test
mov
mov
xor
push
inc
aad
bound
enter
js
cmc
lahf
in
pop
xor
sub
pop
sbb
push
mov
ds
sbb
mov
fidivrs
mov
fnstenv
dec
js
mov
sbb
stc
andl
sti
jns
movsl
dec
mov
pop
out
call
jmp
jle
rorb
mov
clc
cmp
push
pop
mov
inc
pop
cwtl
arpl
sbb
mov
movl
shl
fcomps
mov
pusha
repz
xchg
insb
outsb
es
or
dec
adc
fmuls
push
stc
inc
pop
lahf
lret
adc
xchg
cltd
push
xchg
pop
aam
or
test
jg
adc
push
rdmsr
pop
imul
mov
jo
fisttps
jg
and
push
fmuls
mov
or
adc
and
sbb
mov
mov
cmp
jmp
movl
xchg
sarb
pop
sbb
jge
repz
mov
les
cmovle
mov
fnstsw
inc
or
cmp
aam
jns
sub
inc
pop
mov
dec
movsl
out
daa
jbe
push
jp
scas
adc
pop
test
pop
ret
les
pop
addb
push
jnp
lcall
sbb
daa
loope
jp
nopl
inc
mov
add
pushf
pop
je
mov
and
addl
negl
sub
into
in
push
pop
test
mov
mov
mov
jle
jmp
pop
hlt
pop
xchg
jns
push
dec
or
stos
gs
in
into
and
pop
sbb
inc
mov
add
test
jb
pop
imul
adc
lret
pusha
pop
test
cmp
pop
push
rolb
fidivl
mov
and
jne
aas
out
into
push
adc
or
imul
sub
push
pop
sub
loop
enter
cli
in
inc
add
dec
test
adc
mov
je
lret
or
sbb
add
add
in
and
ja
mov
js
incb
adc
aad
xchg
mov
push
adc
mulb
fstpl
insb
or
push
inc
sbb
pop
push
ljmp
dec
ret
jb
clc
xor
pop
inc
xor
jnp
sti
pop
movb
imul
sub
jp
mov
insb
push
sub
mov
fcomps
and
cwtl
iret
fistl
dec
pop
roll
mov
mov
push
add
push
add
rolb
mov
sbb
or
pop
dec
shl
sti
cmc
pop
sbb
pop
pop
mov
fistpl
jmp
lock
imul
jmp
lretw
dec
pop
in
inc
jmp
cltd
jl
lods
pop
sub
sbb
xchg
adc
push
in
mull
or
add
femms
xchg
xchg
pop
adc
loopne
mov
out
jae
pop
jge
inc
lret
adc
pop
ret
jecxz
popa
sbb
cli
add
jp
ret
xor
mov
jb
or
mov
inc
ljmp
dec
arpl
adc
xor
jmp
cltd
clc
roll
or
push
cmp
jp
lret
stos
and
adc
push
sub
cld
clc
push
flds
mov
push
pop
jae
mov
mov
pop
push
sub
ja
mov
mov
test
test
adc
xor
lahf
ret
jge
adcl
push
lret
inc
adc
dec
inc
cmc
push
sbb
push
pop
data16
lds
adc
movsl
dec
cs
pop
iret
mov
rcrb
xchg
and
into
inc
ret
mov
jge
aad
xor
or
jbe
daa
push
sbb
dec
sub
push
mov
cmp
push
add
pop
sahf
cmp
lods
pop
sub
out
jb
lcall
mov
mov
test
flds
mov
pop
sub
pop
ficoml
jl
inc
pop
inc
test
add
add
mov
push
pop
adcb
scas
and
mov
aad
leave
mov
pop
xchg
mov
push
stos
push
jecxz
mov
fdivrs
in
cmpsl
pop
dec
pop
push
and
xchg
dec
adc
cmp
pop
inc
or
int
ret
test
and
sbb
enter
xchg
mov
mov
sti
in
rorl
stos
or
adc
xchg
add
fistps
adc
cmp
roll
pop
mov
sub
decb
pop
mov
arpl
cltd
adc
adc
mov
adc
push
imul
imul
or
jle
pop
push
push
int3
pop
cpuid
shll
pop
pop
fdivs
xchg
aam
push
sbb
sbb
or
push
cmpsl
lcall
sbb
pop
das
in
loopne
push
pop
je
xchg
fcomps
jns
jecxz
dec
ljmp
and
push
fildl
test
mov
mov
dec
test
in
mov
rorl
push
movsl
jo
enter
and
aaa
jbe
sahf
adc
pushw
pop
mov
shll
pop
push
lret
inc
lods
in
int3
stc
dec
fnstsw
pop
or
push
movsl
mov
jnp
jbe
rclb
dec
push
mov
inc
lret
cmpb
fisubrl
test
out
mov
push
mov
add
das
pop
ss
int
in
or
pop
dec
loopne
dec
add
dec
adc
inc
push
pop
push
sbb
add
sub
adc
sub
mov
cmp
imul
dec
sbb
inc
xchg
aaa
pop
add
or
pop
les
sub
pusha
cvtdq2ps
ljmp
xchg
pop
inc
scas
pop
xchg
pop
xor
sbbl
push
add
dec
lods
daa
xor
enter
or
mov
and
jno
jne
ss
xchg
sub
jne
cmp
iret
push
xchg
cwtl
add
jne
lcall
sahf
shl
das
pop
push
ds
loop
adc
popa
xor
cs
cmpsb
pop
adc
movsb
sub
ds
adc
rorl
pop
jecxz
sbb
insb
pop
or
mov
pushf
adc
push
sbb
pop
adc
sarb
lcall
pop
rcl
and
or
ljmp
clc
jmp
inc
and
add
arpl
fucomp
jb
mov
addr16
stos
fs
movsb
ret
test
mov
jp
loope
inc
pop
xor
xchg
jne
lret
push
cs
mov
lods
inc
clc
or
push
ljmp
lcall
out
xchg
jg
adcb
sbb
jge
push
pusha
inc
or
dec
nop
dec
and
jecxz
ljmp
insl
sub
sbbl
push
nop
popf
or
add
xor
insb
pop
call
jg
sbbb
lock
mov
sbb
icebp
out
jp
stos
ret
push
repz
idivb
xchg
and
or
pop
outsl
dec
xchg
xor
movl
dec
dec
out
and
pop
icebp
dec
mov
jecxz
or
lods
nop
fwait
pop
inc
ret
mov
xchg
pop
mov
mov
mov
lcall
mov
sbb
insl
mov
jno
push
loopne
mov
data16
ret
sbb
sub
dec
in
scas
dec
lock
cwtl
jle
sub
mov
mov
dec
in
push
cwtl
xor
mov
cld
shll
dec
test
mov
inc
sub
leave
or
xchg
inc
pop
and
jle
testl
imul
push
cltd
push
sti
inc
inc
cs
cld
xchg
pop
pop
lcall
sbb
pop
sub
repz
clc
xchg
fs
mov
stos
fidivl
and
jno
cmp
add
xlat
ficoml
hlt
or
inc
inc
mov
dec
mov
push
pop
pop
mov
insb
adc
or
and
adc
aad
test
vaddsubpd
or
xor
ja
inc
das
push
push
in
adc
inc
jmp
fsubrl
xchg
addr16
pop
stc
or
jmp
push
cwtl
aaa
pop
pop
push
dec
incl
jbe
cmp
ja
shll
push
andl
psubsw
mov
sub
dec
or
jns,pt
insb
jecxz
sbb
xchg
xor
fistps
test
cmp
outsb
adc
push
adc
xchg
loopne
dec
xor
pop
push
cmpsl
push
pop
add
aam
xor
loopne
push
pop
adc
push
adc
inc
cmp
testl
mov
push
and
push
dec
pop
or
dec
adc
out
lds
loopne
leave
pop
pop
mov
xchg
or
push
dec
ja
enter
push
mov
cwtl
jb
cmp
pop
and
rcrl
stc
outsl
dec
push
sub
and
xchg
xchg
pop
xchg
and
repz
outsl
adc
or
push
mov
popf
in
sub
lahf
dec
scas
push
fs
pop
in
sub
mov
push
je
pop
pusha
mov
cwtl
inc
enter
fbstp
cmp
mov
mov
daa
in
mov
ret
xor
out
push
addr16
xor
cs
cmpsl
push
inc
adcb
mov
adc
push
pop
das
and
test
es
push
ret
lods
fidivrl
pop
xorb
pop
mov
daa
nop
xchg
push
test
sbb
out
hlt
mov
jmp
insl
sbbb
mov
or
adc
les
scas
fs
rcrl
insl
mov
pop
and
adc
pop
gs
xchg
pusha
mov
add
dec
ljmp
mov
mov
sbbb
cmp
xor
jp
cld
lret
pop
hlt
pop
in
pop
push
sahf
jl
jne
or
cmp
dec
push
in
pop
arpl
out
pop
sbb
aad
testl
lret
inc
addb
push
dec
adc
rorb
adc
sbb
mov
jecxz
jg
or
adc
xor
pop
inc
es
cwtl
fs
and
rorb
dec
xor
pop
sbb
roll
lret
leave
mov
cmp
xor
and
cwtl
cmp
cmc
lret
push
loopne
icebp
pop
stos
and
cmp
push
jns
movb
or
dec
cmp
movsb
iret
adc
inc
pop
pop
sub
mov
imul
pop
xchg
jmp
loope
add
dec
mov
test
pushf
and
jno
push
cvtps2pd
adc
push
mov
inc
push
cwtl
cmp
stc
out
add
push
test
add
fmull
lds
rclb
xor
adc
adc
cmp
or
sbb
xor
icebp
pop
push
lods
inc
dec
out
cmp
cli
cmpsb
and
in
std
cltd
sbb
pop
addps
rcrb
and
scas
int3
mov
push
inc
pop
sbb
rcr
pop
pop
mov
push
pop
xchg
mov
jnp
pop
pop
mov
push
pop
xchg
daa
ss
in
aam
mov
pop
jl
mov
pop
push
es
ljmp
cwtl
jnp
int
cmp
mov
test
ror
adc
pop
push
or
hlt
jecxz
ljmp
mov
popf
pop
lock
and
jae
mov
mov
in
jne
clc
mov
ljmp
movsb
or
pushf
jecxz
ret
outsb
pop
ret
sbb
pop
pop
and
or
cmp
sahf
mov
inc
pop
sarb
mov
bound
clc
fs
fwait
test
pop
pop
or
push
cmp
sbb
cmp
sub
inc
jg
loopne
push
mov
fists
shll
or
fiadds
pop
iret
in
roll
dec
sbb
ret
lret
xchg
mov
push
jl
cli
addb
adc
push
xchg
jne
mov
or
stos
and
cwtl
push
mov
jmp
dec
gs
insb
sub
push
stos
test
or
add
dec
inc
clc
mov
orb
aam
inc
dec
pop
pushf
cmc
cmp
testb
dec
mov
or
jmp
pop
mov
mov
les
ljmp
cs
jmp
dec
add
mov
sub
adc
and
notl
fidivrl
cmp
jp
xor
add
mov
pop
push
scas
loop
and
inc
xlat
mov
jp
pop
fisttpll
orl
or
xor
lods
dec
fstp
mov
imul
pop
mov
fisttps
jp
xor
xor
mov
ja
mov
cmp
enter
mov
out
mov
cmpsb
pop
pop
adc
inc
in
imul
jo
adc
xchg
mov
cmc
fstps
mov
push
addr16
test
sbb
mov
xor
icebp
repnz
loope
pop
loop
std
add
mov
mov
sub
mov
dec
paddd
mov
push
cwtl
sub
pop
int3
in
out
xor
push
ja
jmp
pop
xor
movb
pop
fdivrl
xchg
gs
sub
jns
xchg
inc
pop
adc
lcall
sub
xchg
push
dec
sbb
inc
sub
mov
fdivrs
ljmp
sbb
in
dec
pop
push
xor
mov
pop
aad
inc
repz
mov
xchg
arpl
jmp
es
jle
xchg
jmp
add
dec
arpl
imul
or
add
mov
shll
xchg
nop
push
stc
mov
sub
movsl
inc
pop
mov
loopne
xchg
push
pop
pop
and
cmp
push
stos
xchg
jle
cmp
ss
xchg
xor
add
in
cmp
gs
cli
cmp
ret
mov
xor
mov
fwait
adc
sub
and
xor
jne
fdivrs
add
sbb
rclb
inc
bound
add
jns
pop
cmp
stc
add
mov
xorl
xchg
pop
insl
inc
dec
sbb
mov
cmp
cmp
pop
jae
adc
mov
and
je
sbb
xchg
pop
adc
jg
pop
loope
int
enter
stc
dec
pop
cmpsb
aaa
or
pop
or
inc
xor
fsts
cmp
and
push
movsl
inc
sub
inc
loopne
pop
adc
jmp
pop
jle
cmpsb
or
and
sbb
idiv
xor
out
cmp
jnp
dec
adc
cmp
push
push
icebp
sub
dec
lds
repnz
cltd
or
es
pop
and
xchg
imul
inc
ss
int3
mov
jl
lock
xchg
data16
out
xor
bnd
mov
call
ja
lret
pop
lock
xchg
xchg
xchg
scas
adc
push
pop
mov
or
mov
xor
and
mov
test
mov
aas
cmc
fisttpl
js
cmp
jns
dec
add
sub
cmp
mov
ds
insb
jp
pop
mov
insb
xchg
or
push
jmp
inc
pop
adc
aam
in
iret
addb
loope
or
std
mov
sub
cli
das
and
cwtl
xchg
push
sbbb
ljmp
rorl
popa
sub
cmp
sbb
sbb
push
pusha
adc
sbb
lock
sahf
mov
ret
push
or
jecxz
push
cmp
pop
xchg
add
jae
or
mov
inc
cmp
mov
sub
adc
xlat
push
stos
or
jmp
test
adc
mov
loope
and
arpl
pop
push
sbb
sbb
push
test
pop
pop
push
jmp
ret
subb
lock
ljmp
fmulp
push
push
xchg
ja
or
lds
pop
or
scas
das
decb
or
adc
leave
add
pop
xchg
xchg
cli
adc
adc
mov
sbb
jns
test
test
xchg
roll
out
mov
dec
clc
sub
dec
or
xchg
in
push
xchg
insl
aas
lods
sahf
lcall
lret
test
add
adc
inc
xchg
push
pop
mov
lahf
xlat
dec
jne
fldl2t
addr16
pop
aas
hlt
add
stos
pop
cmp
xor
pushl
inc
dec
test
xchg
loop
sbb
test
xchg
arpl
pop
push
leave
cmc
inc
mov
sub
fs
movsl
mov
inc
mov
mov
dec
xchg
cs
dec
xchg
addb
pop
ja
inc
sbb
pop
insl
push
sub
and
inc
pop
dec
dec
pop
mov
xor
inc
inc
jo
xor
sbb
xchg
fs
push
xchg
inc
pop
ljmp
pop
insl
jae
and
pop
popa
pop
pop
pop
shll
xchg
dec
jbe
imul
cs
in
adc
pop
or
fidivrl
pop
or
adc
jle
cmp
mov
bound
mov
push
fwait
dec
test
inc
cwtl
std
fwait
pop
or
pop
push
adc
pop
adc
popa
adc
arpl
pop
bound
sub
dec
sahf
std
call
imul
mov
inc
xchg
insl
leave
sahf
push
pop
mov
add
jmp
js
popa
pop
dec
sub
and
lret
pop
int3
inc
xor
mov
popf
in
outsl
xchg
mov
cmpsl
or
or
in
and
pushf
cltd
movsl
or
adc
dec
jmp
stos
inc
movsb
pop
and
or
into
das
cltd
test
or
pop
data16
jge
adc
pop
push
pop
hlt
icebp
inc
data16
movsb
jo
cli
xchg
mov
or
imul
inc
xor
out
or
adc
cmp
fsubs
sbb
pop
inc
pop
inc
mov
popf
pop
or
adc
call
xor
or
loop
notl
sbb
pop
dec
in
ficoms
inc
mov
pop
jne
lds
arpl
sbb
inc
jg
test
pop
add
mov
fcoml
and
rcll
addl
xchg
and
rcl
pop
mov
pop
add
fsubrl
ja
ficompl
rcrb
sub
add
imul
mov
adc
inc
sbb
xchg
int
cmp
enter
xlat
es
cltd
dec
pop
mov
dec
push
scas
pop
lret
jns
or
push
pop
lea
into
mov
push
addb
loop
jnp
out
xor
adcl
jl
popa
or
dec
jae
mov
lret
mov
jns
cmp
jge
mov
inc
sarl
das
pusha
cltd
pop
pop
mov
daa
add
xchg
pop
test
and
and
sbb
stc
insl
sbb
pop
cli
shrb
or
mov
adc
pop
das
xor
sub
cmp
inc
pop
cmp
push
imul
imul
out
xchg
pop
inc
jg
int
jns
sub
pop
lock
mov
test
and
add
jb
pop
add
xchg
loopne
and
cli
sbb
ror
xchg
stos
sbb
dec
mov
pop
clc
mov
jecxz
push
jle
loop
pop
or
mov
ds
pop
sub
pop
dec
icebp
push
jp
push
inc
cs
adc
inc
pop
xor
push
dec
stos
cmp
movl
mov
sbb
mov
or
mov
jae
and
cmp
jo
push
lock
decl
in
add
scas
jae
sbb
rcl
nop
xchg
xchg
and
pop
cmp
xor
sub
cmp
dec
dec
dec
pop
sub
lahf
push
sbb
addl
jg
mov
mov
cwtl
sbb
pusha
sub
out
lds
jno
mov
pop
int
or
dec
pop
pop
adc
int
cmpl
mov
add
push
cs
mov
mov
and
jecxz
mov
shlb
sub
gs
jb
or
imul
sbb
push
in
jno
dec
lds
cmp
xor
pop
fdivrl
and
pop
mov
test
jae
mov
mov
lea
in
dec
pusha
mov
xor
push
push
jne
jmp
enter
adc
cmp
sbb
fnstcw
and
es
sbb
hlt
aaa
push
push
sti
push
lock
inc
sar
inc
fwait
push
ja
orl
mov
fstp
arpl
pop
imul
enter
cmp
test
jl
push
pop
mov
dec
pop
ljmp
sub
in
or
push
pop
hlt
ret
sbb
mov
daa
pop
rorb
xchg
jns
cli
les
sub
fimull
pop
push
xchg
daa
jbe
adc
jecxz
xchg
xchg
cwtl
and
cmpsb
js
stos
inc
stc
pop
mov
mov
sti
popf
mov
pop
push
orb
imul
pop
mov
aad
mov
pop
push
cmp
dec
fnstsw
jno
sub
icebp
imul
loope
out
dec
pop
test
adc
pop
xchg
ret
inc
push
loopne
xchg
les
pop
and
sbb
cwtl
pop
push
fcoml
lahf
sbbl
daa
imul
xchg
xchg
pusha
pop
movsb
dec
adc
mov
je
push
dec
arpl
or
sti
dec
add
jle
pop
in
push
pop
push
push
lods
pop
lcall
sub
mov
clc
jns
jge
xor
pop
cmpsb
cld
outsl
mov
aad
in
sub
pop
insb
pop
pop
mov
pop
std
sbb
push
stc
imul
test
dec
adc
xchg
cmp
or
push
neg
push
adc
pop
insb
xchg
ljmp
mov
das
in
xchg
dec
test
test
xchg
add
fdivs
pop
xchg
sbb
sti
in
dec
sub
push
jmp
mov
lret
imul
filds
mov
cmp
push
test
push
jnp
pop
sbb
ja
pop
xor
cmova
and
insb
stc
jmp
pop
pop
pop
lea
mov
sbb
sbb
loop
adc
mov
sbb
push
sbb
out
pushf
pusha
pop
rorb
mov
fistps
imul
dec
mov
mov
pop
cmp
scas
xchg
fdivs
pop
aam
cs
arpl
jecxz
testb
xchg
ljmp
aam
pop
dec
test
dec
pushl
mov
xchg
movsb
mov
leave
push
pop
and
pop
pop
adc
ds
fnstenv
or
mov
mov
pop
loope
les
ljmp
cli
adc
xor
pop
pop
push
jbe
bound
pop
mov
or
sbb
sub
adc
inc
push
and
lret
cmc
sbb
mov
pop
into
jbe
dec
adc
in
pop
push
or
sbb
dec
pop
jo
das
js
roll
and
add
mov
mov
bound
outsl
shrl
call
adc
jmp
mov
and
mov
mov
dec
push
jno
dec
push
mov
dec
cmp
dec
jne
add
sub
stos
pop
std
aas
mov
mov
pop
push
xor
jno
and
mov
pop
subl
lcall
imul
xchg
pop
mov
cwtl
mov
frndint
adc
add
mov
adc
xor
xchg
sub
mov
jnp
adc
jecxz
xchg
inc
ss
inc
or
adc
enter
inc
mov
dec
sub
aas
xor
stc
pop
cwtl
and
nop
or
mov
sbb
lock
cs
scas
leave
mov
dec
add
pop
inc
test
xor
loope
inc
int
sbb
fldl
push
jno
les
xor
pop
or
jns
xchg
ror
mov
add
xlat
or
pop
fiaddl
cli
mov
ss
sbb
fiadds
inc
and
add
pop
push
or
sub
adc
xchg
pop
sarb
or
dec
xor
int3
sbb
inc
cld
jnp
popf
sub
push
adc
nop
js
adc
mov
push
stos
push
mov
bound
xor
sbb
jg
fadds
inc
movsl
pop
push
push
lock
or
pop
push
or
add
add
pop
jae
sbb
xchg
bound
dec
xor
xchg
dec
dec
mov
push
js
push
sub
push
paddb
dec
pop
ss
pop
and
cmp
rcll
and
sahf
inc
cmpsb
scas
mov
mov
popa
xchg
sub
jle
pop
mov
inc
or
inc
pop
insl
dec
adc
push
rorb
add
sbbl
sbb
into
cwtl
fnstcw
push
subb
enter
imul
mov
sub
mov
add
mov
testb
bound
pop
pop
cmp
dec
pop
pop
ja
pop
and
pop
sbb
arpl
add
pop
inc
jmp
mov
imul
ss
cli
mov
je
std
jge
pop
pop
dec
mov
push
xor
pop
add
xchg
xor
loopne
pop
std
lret
sub
push
rcll
lcall
and
repz
mov
fs
stos
sub
or
jle
popf
cwtl
or
test
mov
into
pop
cli
sbb
sbb
adc
pop
mov
pop
pop
push
ret
dec
mov
sbb
inc
aad
pop
shlb
push
scas
dec
pop
decl
mov
arpl
mov
nop
xor
jo
xchg
sbb
or
fiaddl
and
test
mov
scas
inc
xor
fidivrs
and
and
enter
popa
xor
aam
mov
inc
lahf
pop
call
pop
sbb
into
mov
mov
inc
jnp
mov
jecxz
div
adc
pop
icebp
inc
and
add
push
push
mov
lea
inc
dec
aaa
cwtl
in
lret
repnz
and
cmpsl
fcoms
cmc
pop
insl
pop
adc
xor
sub
push
jnp
and
pop
addr16
pop
dec
iret
or
hlt
pop
imul
add
fwait
mov
scas
test
mov
insl
test
pop
das
sbb
jo
sbb
jo
ja
cs
push
pop
in
pop
pop
mov
push
pop
cmp
xchg
push
ret
sub
push
rcr
or
daa
and
jle
mov
xor
icebp
jno
xchg
mov
add
fldt
xchg
jle
into
xlat
ficoml
sbb
lcall
sbb
cmp
sti
and
lds
dec
pop
repz
sub
imul
sub
mov
cmp
imul
inc
jne
aaa
pop
or
pop
mov
bound
mov
outsb
daa
jecxz
into
movsb
pop
sub
push
aas
adc
pop
or
jno
push
mov
pop
fisubrl
pop
out
or
negb
notl
pop
push
imul
test
sub
pop
movsb
hlt
push
sbb
adcl
pop
jne
mov
pop
xchg
mov
jle
dec
adc
jle
dec
and
cli
mov
pop
mov
pop
xorb
mov
cmp
es
adc
sbb
test
adc
ljmp
adc
sahf
iret
js
add
fsubrp
jae
or
lahf
cmp
adc
rcrb
inc
mov
xor
ficompl
call
inc
jmp
xor
pop
rorb
mov
mov
jns
repnz
icebp
lds
mov
push
pop
or
scas
jne
pop
movsb
dec
mov
mov
lcall
enter
push
mov
xchg
pop
movsb
xor
cmc
cwtl
stos
lds
sub
adc
adc
cmp
sub
adc
mov
pop
dec
xor
lret
dec
push
or
adc
inc
inc
pop
inc
push
mov
mov
dec
mov
jl
xchg
pop
loope
mov
or
inc
pop
xor
jb
push
push
inc
pop
mov
mov
pop
xchg
mov
mov
pushf
inc
add
push
mov
fldenv
push
pop
pop
mov
or
clc
out
lcall
shll
cmpsb
adc
cld
rep
adc
pop
scas
xlat
pop
sbb
push
and
sub
mov
mov
enter
popa
sbb
fstp
mov
dec
sti
sbbb
sbb
jmp
cmpl
cmpsb
shrb
and
cwtl
fcomps
and
or
cs
pop
enter
xor
jnp
sbb
int3
inc
and
mov
pop
lds
xchg
loope
jl
or
xchg
gs
shrb
lcall
or
pop
xchg
jne
xchg
xchg
lds
adc
jmp
fdivs
and
movsb
or
mov
push
adc
addr16
jns
mov
in
pop
fimull
inc
xchg
pop
fstpl
xchg
lds
fimull
mov
adc
flds
andb
rcl
int3
push
pop
sub
mov
xor
popa
fmuls
call
adc
test
repz
push
inc
or
sub
dec
jmp
roll
cmp
adc
insb
pop
push
sti
xor
inc
cli
add
fiaddl
test
mov
push
das
lret
lcall
int3
test
in
cmpsb
xor
loope
mov
rcrb
mov
shll
test
xchg
lds
lods
pop
daa
popa
pop
insb
rcl
inc
test
dec
cmp
mov
pop
mov
add
aad
sub
test
xor
push
jo
mov
sbbb
cmc
les
mov
ficoml
jnp
sub
dec
xor
push
pop
mov
push
pop
pop
dec
xchg
test
adc
fadd
out
pop
inc
imul
pop
pop
cmp
les
push
movsb
cmp
pop
lds
sub
stc
mov
push
or
fsts
add
dec
adc
push
inc
inc
and
adc
jne
rolb
jl
pop
sbb
fidivs
push
pop
or
sub
stc
jno
or
icebp
das
sub
mov
push
pop
xchg
cmp
movsl
sahf
and
sbb
sarb
mov
filds
pusha
pop
popa
dec
icebp
fdivr
mov
cmpsl
out
and
repnz
xchg
pushl
add
loopne
mov
pop
pop
xchg
adc
cmp
js
pop
sti
les
pusha
pop
fsubr
es
push
and
jnp
adc
ds
and
and
in
les
adc
pop
cltd
sub
push
leave
pop
gs
mov
inc
cmp
dec
mov
or
fisttpl
pop
fidivrs
pop
push
dec
cvttps2pi
mov
pop
shl
ret
lcall
pop
popf
cmpsb
adc
or
jno
xor
or
ficompl
pop
pop
xchg
leave
lds
in
jns
jge
jmp
pop
xchg
xchg
in
enter
mov
inc
test
enter
mov
push
in
aaa
cmpsb
push
test
pop
push
cmp
orl
add
pop
inc
fnstenv
cmpsl
sbb
testl
inc
add
push
push
lea
movsl
inc
sub
mov
adc
push
xor
push
pop
add
xchg
adc
enter
mov
jge
fists
pusha
inc
and
rcrl
ret
popf
inc
push
test
ds
sti
cmc
pop
add
stc
cmp
arpl
rcrl
jmp
mov
pop
push
jae
dec
pop
push
dec
xchg
fistpll
dec
jne
in
pop
pop
xchg
pop
lret
xchg
jb
fstl
push
cmp
pop
pop
pop
shll
cmp
pop
mov
xchg
nop
aam
cmpsb
push
rorl
xor
movsb
sbb
fldl
dec
mov
add
mov
fnsave
lods
frstor
in
or
stos
cmpsl
inc
adc
jnp
out
sub
es
popa
cmp
xchg
aad
vmovlps
mov
xlat
scas
or
fcompl
lret
dec
fisubs
push
mov
stos
cwtl
mov
sub
call
mov
push
xchg
jmp
mov
pop
mov
and
add
sub
pop
bound
out
pop
jl
lahf
mov
add
mov
cltd
dec
repnz
sub
sti
adc
es
pop
or
push
bound
sbbl
test
sub
push
or
int
dec
sub
push
mov
add
jo
push
mov
mov
sarb
ficoml
std
lcall
mov
loope
ds
pop
mov
push
std
lret
sbb
jbe
xchg
cmpsb
negb
add
cmp
jns
pop
pop
loope
ss
inc
push
pop
mov
mov
je
sub
imul
adc
xor
out
pop
lcall
ret
pop
push
dec
fnstcw
outsb
std
push
bound
sub
fsubrs
enter
dec
sbb
and
push
push
rcrb
mov
out
lea
sbbl
dec
pop
test
add
mov
adc
inc
push
daa
pop
sub
adc
cmp
dec
lods
es
sbb
pusha
fiaddl
adc
clc
fldt
ljmp
movsl
or
shll
das
pop
pusha
cmp
adc
ret
or
sbb
dec
shl
lock
mov
mov
stc
clc
mov
push
bound
add
outsb
push
outsl
stc
add
aas
dec
add
inc
sub
and
add
jmp
in
cmp
jge
jge
flds
xchg
out
and
ret
adc
inc
push
mov
pop
lret
sbb
sbbl
dec
dec
lret
std
int3
pop
mov
pop
mov
cltd
or
hlt
lods
loopne
sbb
xor
jno
push
and
jne
imul
and
xchg
add
cmp
lret
push
gs
xchg
dec
mov
mov
in
sbb
mov
sub
pop
in
cmpl
push
pop
xor
pop
pop
adcb
xchg
js
pop
or
inc
mov
mov
and
rcll
test
jp
xor
cs
sub
add
pop
adc
xchg
cltd
les
fisttps
adc
dec
jmp
mov
sub
adc
jecxz
pop
lds
out
cmpsb
dec
daa
mov
stc
jmp
sbb
shrb
arpl
dec
adc
xchg
mov
sar
mov
mov
mov
hlt
movl
out
bswap
sbb
gs
add
jae
std
pop
aad
ds
and
shrb
pop
add
pop
adc
mov
push
nop
pop
sbb
sbb
add
push
push
inc
mov
xchg
fwait
bound
lcall
mov
pop
popl
fcomps
outsl
sub
and
pop
pop
jmp
inc
jmp
iret
inc
xor
mov
or
push
fisubl
mov
xchg
push
adc
rclb
mov
add
adc
cltd
or
out
insb
sub
pop
push
pop
push
dec
pop
or
add
xlat
cmp
cmp
test
into
mov
fdivs
ror
dec
xchg
or
cli
je
sbb
cmp
arpl
and
sbb
ret
test
mov
loopne
xor
sub
pop
imul
js
inc
push
jecxz
lret
out
imul
imul
stc
popf
fdivs
pop
pop
mov
ret
xor
mov
fistps
cmp
push
mov
mov
dec
addr16
lods
in
orb
je
mov
push
xor
push
insl
pop
adc
xchg
loop
pop
sub
test
jecxz
adc
daa
pop
xchg
sub
pop
xchg
and
cs
pop
push
lock
xchg
in
jbe
pop
jmp
bound
push
pop
cmp
dec
push
cwtl
call
add
xchg
test
ret
mov
dec
outsl
cmp
adc
lret
xlat
mov
jmp
stos
push
loope
and
repnz
pop
mov
ljmp
sbb
int
push
pop
aas
std
es
push
xlat
in
rcrl
into
outsb
add
cli
cmp
fwait
dec
adc
out
fnstcw
cmc
aad
in
lods
pop
push
pop
mov
insb
fwait
jge
cmp
mov
mov
test
push
lds
dec
jmp
dec
pop
int3
adc
js
jo
and
fistl
mov
lock
pop
dec
sub
or
pop
rorb
in
pop
push
dec
nop
lock
jno
xor
sbb
jmp
push
and
jmp
pop
sub
jp
scas
pop
test
loope
xchg
adc
lock
mov
push
push
cmp
mov
dec
leave
or
xlat
add
sbb
cmc
js
push
jecxz
subb
push
dec
test
inc
pop
pop
rclb
in
std
xor
pop
aam
pop
adc
fwait
dec
stos
test
stc
pop
popl
insb
lret
xor
inc
pop
cmp
leave
xchg
pop
mov
mov
pusha
cmpsb
notl
pop
ficompl
inc
and
xchg
imul
xor
jns
mov
jmp
insl
std
cmp
rolb
test
jne
xor
adc
mov
cmp
imul
das
pop
sahf
outsl
inc
jb
pop
fistpl
inc
pop
pop
mov
ret
lds
scas
std
jle
subl
mov
or
das
aad
pop
out
bound
outsb
and
xchg
and
xor
push
daa
addb
sbb
jo
pop
adc
sahf
mov
insb
sub
dec
xchg
ss
orl
mov
push
sti
aas
fmuls
lcall
cs
fildl
sub
es
sub
push
pop
mov
jge
gs
pop
mov
int3
lret
mov
pushf
xor
push
sbb
jge
stos
ret
stos
test
fcomps
lea
cli
sub
ljmp
sbb
out
rorl
ljmp
mov
sub
sub
xchg
push
pop
sub
push
cmp
mov
icebp
xchg
sar
insl
cmp
xor
pop
jg
pop
cwtl
xor
repnz
dec
fimuls
sub
sub
shrb
daa
add
pop
enter
imul
inc
adc
mov
pop
pop
sub
fwait
xchg
pop
call
dec
add
xchg
inc
aam
jmp
iret
adc
and
fcmovb
or
mov
stc
pop
pop
jmp
mov
add
xchg
ss
stos
mov
push
push
xor
pop
cmp
pop
pop
jecxz
mov
insb
and
cs
cmp
or
dec
push
adc
push
lcall
sub
dec
sbb
je
jno
jge
jbe
lea
xor
cmp
loope
and
or
dec
movb
jmp
push
push
xchg
sti
into
mov
sbb
mov
pop
cmp
in
adc
pop
fsts
out
xchg
and
ret
mov
insl
imul
jmp
rcll
addr16
loop
cli
jae
push
bts
test
and
and
rcr
mov
xchg
pop
lock
and
pop
mov
movsb
pop
call
mov
push
insb
or
jle
pop
jae
xchg
in
and
rolb
adc
add
adc
insl
pop
clc
pop
scas
movsb
mov
ds
pop
cmp
ss
add
cmp
aam
daa
ficomps
sub
fisttpl
mov
xor
jae
jne
cltd
lcall
das
lahf
lret
lcall
lock
mov
adc
andl
or
jns
pop
mov
mov
popf
pop
cltd
pusha
daa
jne
xchg
ja
inc
mov
push
mov
cwtl
xchg
xor
sbb
jecxz
sub
imul
push
mov
pop
mov
adc
xchg
adc
xlat
push
enter
ja
fdivs
repz
inc
fidivrl
hlt
je
int
mov
das
or
and
test
or
rcrl
pop
mov
arpl
test
xor
stos
lcall
pop
sbb
lds
dec
aaa
adc
and
jbe
pop
xchg
fstps
mov
jge
adc
cld
pop
jecxz
xor
push
or
pop
pop
pop
mov
or
loopne
cli
sbb
daa
addr16
adc
jp
aas
dec
adc
fcomps
jbe
jnp
addr16
imul
pop
mov
rcl
mov
sahf
jg
mov
add
pop
das
xlat
xor
inc
mov
push
pop
fiadds
out
mov
test
jne
out
cmpsl
jge
test
pushl
in
mulb
ficomps
dec
inc
in
scas
outsl
or
les
push
mov
and
in
mov
fdivs
xorb
adc
or
shl
jbe
pop
push
out
dec
fldt
push
jmp
mov
pop
jae
add
inc
in
movsb
fistps
les
cwtl
adc
xor
jge
fcomi
mov
dec
xor
push
incl
mov
ds
mov
sub
pusha
adc
mov
push
lcall
clc
sub
mov
dec
pusha
cli
sbb
dec
jb
cmpsl
ja
outsl
push
stos
hlt
cmp
pop
mov
icebp
movl
fldt
xchg
pushf
lods
dec
inc
std
jbe
dec
dec
lret
dec
mov
pop
inc
pop
mov
sbb
sub
dec
xor
cs
inc
jle
pop
imulb
add
mov
mov
pop
idivl
xor
fcmovu
cmp
and
pop
jge
push
fstpl
push
jecxz
push
bound
cltd
test
addps
xchg
ss
adc
push
mov
push
sub
jge
mov
mov
cmp
pop
and
add
pop
pop
xchg
sti
add
pop
lretw
rcll
cmp
sbb
cmc
mov
testb
pop
cmp
pop
test
stos
sbb
cmp
sarb
pusha
xor
lcall
add
rcrl
jb
sub
adc
jp
cmpsb
pop
loopne
sbb
inc
add
pop
sbb
int3
xchg
addr16
xor
jle
imul
inc
pop
orl
fs
imul
cmp
push
loop
inc
iret
cld
dec
and
movsl
cmc
out
mov
cmp
roll
cmpb
pop
mov
rclb
movsl
sahf
das
pop
in
dec
loope
cwtl
jecxz
pop
cmp
cmp
addr16
sahf
push
add
adcl
or
ret
in
jge
sub
in
add
and
popf
insl
fiaddl
push
adc
adc
push
int
movsl
pop
xchg
repnz
cmp
or
fcmovb
xor
aad
inc
adc
dec
add
lea
jae
cltd
mov
sbb
adc
xchg
mov
leave
lds
stos
test
imul
push
out
aas
xchg
mov
dec
ja
mov
dec
and
sbb
dec
sahf
pop
dec
rcrl
rolb
jl
aas
dec
jmp
loopne
pop
mov
pop
inc
clc
mov
shl
test
lds
inc
sub
mov
imul
pop
insl
xor
mov
sbb
inc
fsub
addr16
mov
pop
pop
pop
pop
xor
push
add
xchg
xchg
push
mov
ds
dec
scas
mov
pop
out
aas
push
push
cmpsl
pop
cmc
and
in
popa
pop
mov
and
pusha
jb
mov
arpl
rcll
fisubs
xor
pop
je
dec
sbb
jne
movsb
push
push
in
popf
lret
mov
add
mov
dec
test
xor
or
jb
rclb
mov
sarl
cs
daa
pop
repnz
lret
jmp
sub
insb
adcl
pop
sub
pusha
xchg
add
jb
dec
cmp
adc
pop
xchg
pushf
adc
cltd
push
movsl
shr
jae
xorb
and
out
or
jp
pop
ljmp
iret
pop
jae
enter
shrl
sub
subl
test
sti
mov
cmpsb
pop
add
shrb
lret
in
and
gs
cmp
rcr
cmp
lcall
into
pop
adc
ljmp
jge
mov
mov
cwtl
jne
mov
jb
push
sub
not
ror
clc
pop
les
fcmovb
arpl
cmp
jnp
test
xor
enter
xor
push
push
out
dec
addr16
cmpsl
fldenv
jno
inc
or
bound
ja
mov
xor
pop
leave
inc
xor
pushf
lds
inc
sub
sub
rorl
jns
mov
mov
sbb
repnz
pop
inc
jecxz
jle
mov
gs
mov
jno,pt
mov
pop
cltd
add
rcr
sub
pop
push
out
adc
sub
pop
orb
inc
push
daa
pop
mov
push
sbb
and
nop
dec
inc
pop
repnz
insl
lock
loope
xchg
push
outsl
jbe
lods
scas
xchg
cmc
das
fistps
cmp
lcall
std
xchg
sub
movsl
and
sub
aas
mov
aam
jne
push
mov
inc
inc
mov
hlt
clc
jge
sbb
ljmp
enter
orl
sbbl
sub
pop
out
ljmp
mov
ret
push
jmp
dec
in
cltd
in
or
out
repz
dec
adc
popf
push
mov
pop
or
cs
adc
in
push
sbb
lcall
sub
fcompl
aas
mov
push
pop
cmp
xor
push
mov
cmpsl
ds
pop
jmp
inc
xchg
dec
enter
rorb
push
sahf
mov
lahf
push
mov
imul
push
add
adc
pop
std
das
mov
loopne
mov
into
or
mov
subl
and
fadds
pop
pop
inc
push
data16
jbe
pop
ss
pop
fnstsw
stc
jmp
enter
fnstenv
cltd
fisubl
cli
mov
bound
pop
sbb
das
xor
mov
xchg
notb
adc
lahf
pop
in
enter
mov
cmp
in
and
mov
mov
adc
cli
inc
jl
in
cmp
or
push
jmp
stos
aas
dec
fucom
fcomps
add
add
in
cmp
pop
fidivs
add
adc
pop
das
mov
pop
notb
cmp
mov
mov
inc
ret
xchg
adc
xchg
test
ficomps
push
ficomps
mov
dec
imull
push
mov
mov
pop
es
push
or
push
pop
pop
push
daa
js
aam
push
pop
cmp
pop
insl
mov
mov
pop
pop
adc
add
in
scas
and
test
notb
loope
mov
mov
push
or
push
lret
mov
push
in
movsb
in
pop
sar
mov
pop
inc
push
insl
clc
adc
mov
mov
bound
pusha
adc
pop
in
dec
fcoms
scas
stc
out
clc
inc
pop
push
test
dec
inc
pop
idivl
or
push
jmp
push
cmovle
cmp
mov
adc
or
jecxz
push
fs
pop
fistpl
sbb
adc
xchg
mov
mov
sub
push
push
pop
popa
in
ret
jmp
test
fdiv
add
arpl
fbstp
pop
ja
cmpsl
and
enter
fiaddl
popa
icebp
mov
xchg
adc
ja
pop
pop
clc
mov
sbb
push
xlat
xchg
and
mov
icebp
inc
mov
fstps
or
les
shrb
pop
hlt
inc
cmp
movsl
stos
jge
sub
mov
pop
int
mov
in
inc
cmpsl
dec
scas
push
push
mov
dec
push
addr16
mov
push
mov
push
insl
popa
pop
pop
xchg
pop
test
push
movsb
rcrl
push
std
sub
int
inc
pop
lds
jns
pop
daa
mov
or
add
test
push
jmp
sbb
jbe
leave
pop
scas
jge
dec
arpl
cmp
push
pushf
mov
adc
imul
sub
push
lret
cmp
mov
xor
cwtl
pop
cmp
movsl
decl
xor
adc
inc
jmp
mov
cwtl
and
xchg
mov
and
fs
mov
and
or
mov
arpl
sbb
ret
dec
mov
push
jp
cwtl
xchg
test
jae
push
pop
roll
mov
pop
pop
xchg
or
jge
enter
add
inc
pop
cwtl
stos
mov
adc
pop
pop
dec
cmp
jbe
cmp
mov
xor
sbb
and
gs
push
pop
mov
adc
cmp
mov
cmp
not
cmpsl
icebp
dec
cmp
sbb
lcall
jns
or
and
pop
mov
hlt
lret
test
in
dec
pop
mov
pop
jecxz
xor
pop
xor
daa
pusha
xor
jno
pop
fidivl
jne
fisubrl
rcr
push
push
push
sbb
imul
es
add
mov
dec
push
ret
pop
fldcw
lret
lret
aad
aam
daa
mov
es
pop
sub
movsb
jg
mov
xchg
stos
mov
pop
ss
out
pop
out
nop
adc
dec
add
xorl
adc
pop
xor
mov
sbb
js
push
cmpsl
pop
push
or
pop
repz
mov
in
jne
js
mov
adc
mov
loope
into
icebp
sbb
xor
mov
and
xchg
data16
pop
test
push
pop
mov
or
aad
ljmp
pop
push
xchg
mov
pop
jns
or
or
ret
arpl
lea
pop
adc
push
mov
fldln2
lcall
mov
les
inc
jmp
dec
pusha
ds
fcomip
lods
dec
cwtl
or
mov
sahf
jge
pop
icebp
cmp
mov
xchg
stos
push
fstp
cltd
sub
xlat
ficoms
lods
rcrb
mov
push
push
jp
jmp
and
divl
inc
dec
mov
out
jno
inc
cmp
pop
jne
stos
mov
sub
dec
mov
pop
fstps
and
pop
cs
jecxz
sub
mov
add
push
xchg
pop
push
lods
scas
lret
pop
push
test
add
pop
adc
ja
push
inc
mov
std
or
adc
jmp
add
int3
pop
lock
jle
inc
gs
add
pop
push
das
jge
xchg
pop
push
addr16
xchg
pop
cmp
adc
cmp
sbb
imul
add
cltd
int3
xchg
sbb
fidivl
imul
xchg
lcall
jbe
roll
clc
push
and
pop
out
or
xchg
mov
add
pop
imul
pop
add
jmp
dec
inc
dec
push
int3
imul
mov
sbb
and
jl
pop
sub
jne
adc
test
pop
ss
mov
xor
lea
pop
nop
jmp
cltd
xchg
aaa
push
jb
add
cwtl
test
test
ja
push
pop
or
ds
mov
ja
push
mov
lret
or
jecxz
and
pop
movsl
inc
and
out
xor
test
jmp
test
repz
push
sbb
push
adc
pop
and
cmp
dec
push
cmp
push
mov
push
sarb
push
xchg
jne
test
adc
pop
mov
pop
sti
lods
cmp
pop
outsb
dec
pop
mov
arpl
mov
cld
xchg
es
cmp
inc
pop
pop
and
pushf
aam
push
adc
icebp
out
fsts
ss
es
ja
jmp
xor
jp
pop
sbb
xchg
and
mov
or
js
out
sbb
mov
jle
mov
sub
pop
add
and
fwait
lds
pop
xor
cli
or
sub
jb
pop
sub
or
add
cltd
bound
pop
jno
daa
rorl
in
ret
pop
cld
xchg
dec
sbb
mov
in
pop
mov
pop
js
push
loop
dec
sbb
pop
push
lock
lea
aas
sub
adc
xor
pop
sbb
orb
pop
test
push
pop
xchg
jno
in
add
arpl
and
and
jno
push
push
addl
cwtl
mov
clc
cmp
test
xor
ret
or
jg
sbb
ljmp
xchg
adc
arpl
testl
sbb
aaa
xchg
adc
pop
addr16
sahf
inc
test
push
push
jbe
cli
mov
adc
sbb
pop
imul
and
data16
dec
push
adc
fs
pop
mov
jmp
xor
pop
mov
nop
sbb
inc
inc
inc
or
les
adc
in
pop
test
xor
sbb
frstors
mov
sbb
shlb
pop
mov
popf
mov
mov
inc
mov
adc
pop
in
or
dec
cmp
inc
dec
jb
dec
inc
negb
scas
insl
inc
sbb
jge
mov
adc
clc
jae
and
ret
test
ret
jno
add
mov
and
pop
mov
and
ret
sub
and
sahf
and
orl
jno
test
sbb
pop
xor
pop
cmp
cmp
icebp
or
push
add
loopne
xchg
jecxz
repnz
in
inc
pop
mov
push
and
dec
addb
lahf
add
xchg
push
mov
sahf
xchg
dec
in
push
mov
ss
push
dec
jno
ret
or
pop
lea
pusha
cltd
sbb
xchg
xchg
mov
or
pop
and
pop
movsb
jne
gs
xchg
and
jno
popf
in
pop
mov
imul
push
cmp
fdivrp
inc
outsb
pop
fdivr
or
shr
pop
push
push
fstps
add
hlt
nop
xchg
rolb
adc
je
pop
repnz
addr16
pusha
push
push
loopne
lcall
push
push
cmp
or
xor
sbb
stos
dec
add
mov
pop
adc
fadds
pop
arpl
add
fwait
in
pop
add
scas
rcrb
mov
cltd
negb
mov
xor
cmp
inc
push
sub
cwtl
call
push
dec
pop
dec
aad
adc
pop
cs
xchg
mov
xor
movsl
pop
cmpsb
xchg
pop
xor
mulb
jb
mov
add
push
xor
sbb
lea
jns
pop
mov
in
jnp
pusha
inc
inc
bound
pop
mov
shr
pop
addr16
dec
push
shl
dec
clc
or
fwait
es
push
adc
cmp
or
enter
pusha
dec
sbb
pop
hlt
dec
mov
pop
dec
lea
insb
fistpll
scas
adc
jne
pop
js
sub
push
inc
pop
xchg
sub
fnsave
mov
push
pop
mov
add
jbe
lret
cmp
push
mov
js
mov
sub
adc
movsl
lds
pop
mov
mov
rcrb
adc
jmp
ljmp
mov
shll
push
mov
and
push
leave
jge
xor
pop
stos
outsl
jne
jl
arpl
pop
adc
sub
pusha
arpl
aam
testb
or
push
add
xchg
imul
scas
imul
or
push
scas
les
pop
lret
adcl
xchg
pop
dec
jmp
or
xor
xor
mov
and
or
push
dec
out
push
inc
and
jg
xchg
sub
cltd
dec
pop
fdivrs
int
ss
pop
pop
xor
cld
sbb
out
cmp
and
mov
mov
pop
insl
xlat
ret
pop
bound
fdivr
push
add
pop
subl
adc
adc
pop
es
jmp
mov
daa
push
pusha
pop
cmp
movsl
ret
inc
or
cmpsb
popf
addr16
jmp
sbb
add
es
mov
mov
ret
mov
stos
cmp
push
cmc
int
pop
and
or
mov
pop
inc
xchg
ljmp
push
dec
mov
cmpsb
sub
pop
xchg
xchg
mov
lahf
pusha
leave
movsl
sub
fnstsw
dec
xorb
dec
andl
or
add
push
mov
arpl
stos
and
fcmovb
mov
mov
mov
and
fsubs
push
cwtl
or
inc
sbb
std
aas
lret
enter
mov
pop
mov
jg
inc
iret
jmp
jo
pusha
stos
jnp
daa
and
jecxz
push
cmp
es
arpl
push
push
int3
loope
jg
sub
pop
data16
xor
pop
push
push
lods
mov
sbb
pop
push
addr16
xchg
xchg
flds
dec
pusha
sbb
jmp
pop
nop
fsubrl
mov
loope
mov
push
fldcw
inc
pop
jne
pop
jo
dec
pop
scas
adc
outsb
push
pop
scas
jne
jmp
xlat
xchg
adcb
jge
mov
pop
repnz
ja
mov
arpl
lods
clc
cmpsb
int3
pusha
jmp
repnz
push
adc
sbb
popf
add
mov
xchg
in
xor
and
pop
add
stos
pop
stos
repz
mov
pop
inc
stc
cltd
dec
ljmp
cmp
push
adc
push
lods
fcmovu
decl
movsb
push
pop
cmc
push
mov
cwtl
arpl
mov
mov
xor
mov
scas
push
xchg
dec
push
push
int
test
xor
xchg
lret
mov
inc
mov
sti
popf
mov
mov
sub
xchg
cwtl
pop
xchg
mov
insl
dec
dec
push
push
fs
cld
flds
dec
push
fdivrs
out
test
and
imul
adc
pushf
inc
jmp
inc
ljmp
jbe
add
pop
cs
int
leave
dec
xor
pop
mov
je
and
sbb
xor
lcall
adc
pop
gs
push
sub
jne
js
mov
cmp
xor
nop
into
push
xlat
dec
xchg
push
sbb
or
mov
dec
jp
cmpsb
imul
push
movsb
adc
or
stos
leave
enter
dec
and
popa
xchg
push
xor
fwait
stc
pop
push
jle
push
insb
inc
dec
data16
cli
cld
flds
sub
and
jg
enter
mov
roll
mul
jnp
cmpsl
cs
push
mov
fimull
sub
adc
data16
sub
pop
jmp
xchg
enter
testl
mov
dec
push
pop
pop
movsb
test
jb
cli
push
or
mov
pop
push
inc
mov
pop
add
mov
rclb
sbb
testl
jmp
xchg
push
pop
xor
mov
pop
sbb
xchg
lret
dec
push
cmpsb
mov
js
add
pop
cwtl
call
jae
bound
jecxz
or
xchg
scas
pop
imul
pop
xor
repnz
aas
adc
pop
push
adc
test
mov
mov
and
pop
push
or
jo
pop
or
xor
mov
dec
jmp
mov
pop
es
push
rol
ljmp
les
scas
lret
cmp
clc
pop
dec
push
movsb
fcoml
cmp
stos
lret
fnstcw
cltd
sbb
loope
and
pop
mov
aas
das
int
out
pusha
pop
arpl
stc
pop
or
jb
mov
mov
dec
and
fs
mov
insb
or
jg
in
pop
dec
lock
aam
cmpsl
stc
jo
lds
lds
pop
sbb
and
imul
test
xlat
push
and
or
jb
mov
pop
add
inc
sub
movsb
pop
or
inc
dec
jmp
dec
mov
fs
or
in
jmp
stos
pop
pusha
inc
repnz
or
and
es
cvtps2pd
and
push
cwtl
js
mov
insb
adc
addr16
in
push
ficompl
push
inc
lods
imul
push
dec
loop
lods
cmp
and
repz
popa
jmp
adc
int
mov
jg
inc
dec
or
std
and
add
adc
jbe
pop
xor
xor
pop
dec
cmp
sarl
dec
cs
cmp
inc
mov
sbb
mov
std
in
rep
sub
imul
push
aad
fadds
pop
icebp
push
adc
or
push
outsl
or
ret
enter
push
push
cmp
xor
dec
jg
sbb
pop
add
stos
mov
inc
jmp
pop
and
dec
out
xlat
push
inc
lds
lahf
dec
pop
cmp
or
movsl
es
pop
mov
or
lds
pop
lods
dec
ja
and
call
inc
lret
push
cmp
adc
adc
lods
push
pop
out
cmp
shll
sbbl
push
shr
inc
push
pop
ficoms
push
fistpl
jg
xchg
pusha
dec
cmp
jmp
cld
xchg
aad
pop
je
clc
int3
push
loop
push
pop
dec
pop
fisubrs
mov
pushf
lock
test
jle
test
mov
inc
sub
xchg
pop
xor
mov
ljmp
sbb
incb
or
icebp
add
in
loopne
pop
or
adc
pop
cmc
pop
pop
popa
stc
cmp
enter
jnp
iret
insb
push
pop
sub
xchg
repnz
push
stc
mov
pop
sti
jbe
cld
mov
cmp
adc
jmp
pop
ljmp
dec
pop
mov
loope
xor
dec
inc
cmc
ret
push
sbb
xchg
adc
mov
pop
int
push
testb
add
jne
andnps
adc
outsl
xor
test
add
dec
cltd
push
cmpb
std
pop
xchg
mov
inc
jae
cmc
pop
call
mov
ja
adc
ljmp
add
les
leave
cmpb
sti
xchg
mov
pop
jne
inc
mov
adc
and
add
xchg
pop
ljmp
sub
sbb
jmp
sbb
push
dec
lods
rcrl
std
sti
sahf
call
jg
cltd
out
cmpb
jbe
pop
mov
stc
insb
pusha
jns
sub
and
in
in
mov
imul
pop
mov
jns
ss
insl
push
cmp
add
es
push
jecxz
loope
sub
and
jo
push
push
adc
in
mov
ja
es
cmp
xchg
popf
int
jl
sbb
and
xor
es
pusha
aad
xchg
pop
js
push
add
mov
lods
pop
adc
and
in
mov
push
mov
js
dec
stos
pop
jne
fnstsw
lods
push
addr16
adc
pop
mov
lea
inc
sbb
sbb
daa
or
pop
dec
pop
pushf
addr16
fldenv
sbb
xor
fistpl
test
sub
pop
jae
mov
push
imul
pop
sbb
push
into
inc
mov
and
ja
add
sbb
fldcw
sub
test
xchg
or
stos
dec
jnp
jl
adc
popa
mov
xchg
sbb
cmp
fidivl
fsubr
cmp
rorl
add
pop
mov
ja
adc
mov
push
dec
inc
pop
pop
test
pop
and
jb
sbb
lods
push
mov
or
push
or
jmp
inc
and
pop
fwait
dec
sub
jp
pop
push
mov
pop
fwait
mov
xchg
movsl
push
jle
sti
outsb
dec
xchg
inc
stc
sbb
outsl
cmp
pop
je
push
daa
out
lcall
xchg
mov
sbb
xlat
and
add
inc
cwtl
jbe
aam
mov
pop
in
adc
cmp
outsl
gs
stos
cwtl
cmpsb
cmc
jmp
pop
xchg
lock
sub
pop
push
xor
scas
push
adc
jnp
cmp
cld
cli
jecxz
pop
jle
sub
dec
push
xor
jb
loop
inc
cli
lea
or
aas
test
fcoms
pop
mov
inc
cmp
pusha
mov
ds
decb
fsubrs
pop
jmp
mov
fisttps
adc
sbb
xchg
iret
cmp
mov
repnz
jp
add
clc
in
adc
rcrb
inc
pop
adc
repnz
js
cli
inc
adc
pop
sbb
mov
sub
in
lods
mov
add
movsl
lcall
add
pop
push
lret
inc
pop
fsubr
addl
addr16
addr16
mov
andb
fists
sub
push
test
and
adc
add
mov
insb
xor
aam
repnz
xlat
test
popa
jae
xor
add
pop
shll
sbb
mov
fcomps
mov
cmp
iret
pop
and
adc
adc
lds
xchg
cmp
outsb
jbe
pop
mov
mov
outsl
cmp
rorl
pushf
push
rcrb
push
mov
jne
jge
sbb
fsubr
cmp
jmp
push
mov
fnstcw
call
or
mov
or
dec
aam
fbld
sub
cwtl
out
push
sub
or
xchg
mov
sbb
mov
pop
xchg
pop
stc
mov
push
and
pop
cmp
mov
cmc
js
stc
lock
push
xchg
imul
xor
adc
daa
shll
add
jbe
or
and
iret
inc
clc
cld
pop
pop
imul
pop
cwtl
dec
idiv
pop
push
pop
mov
cmp
mov
dec
pop
or
push
push
jae
xchg
pop
push
cmpl
aad
pop
ja
add
mov
add
inc
cmp
jmp
fwait
sbb
nop
pop
inc
insl
sbb
or
inc
and
or
push
popf
arpl
or
pop
shl
aaa
and
pop
shrl
mov
loop
pop
loope
leave
mov
sar
addr16
sbb
xchg
sub
inc
or
rorb
pop
mov
std
fcompl
clc
push
rdpmc
jmp
add
mov
lcall
out
sbb
jmp
pop
stc
pop
ficompl
pop
xchg
push
loop
sub
push
jbe
in
add
pop
adc
cs
dec
fiadds
and
test
pop
push
mull
inc
sbbl
pop
icebp
xor
adc
das
and
pop
in
ja
mov
jns
mov
lock
sbb
dec
imul
pop
sbb
inc
ss
loope
sbb
pop
pop
jecxz
jg
mov
bound
fcmove
popf
sbb
dec
cli
sub
loope
pop
stc
dec
clc
mov
cmp
movsl
ret
xchg
mov
jne
pop
ficomps
or
test
sub
sbb
loope
outsl
mov
and
arpl
loopne
jns
leave
jecxz
or
mov
mov
sbb
pop
and
loopne
rolb
pop
push
stos
push
pop
imul
mov
jge
cld
cmp
out
mov
nop
sub
or
adc
pop
lods
xor
jg
aaa
pop
sub
dec
mov
push
shufps
adc
iret
divl
loop
ret
es
pop
adc
cmp
pop
pop
cmpsl
mov
or
js
mov
test
inc
jb
lea
dec
dec
lret
fmuls
inc
or
pop
ljmp
mov
add
push
inc
mov
adc
or
fisubrl
pusha
or
jge
nop
pop
pop
lcall
jo
fldcw
mov
adc
pop
int3
sub
pop
sub
inc
pusha
sar
inc
jge
add
cmp
jns
sbb
sub
jne
imul
in
jo
sub
inc
cmp
xchg
sbb
sbb
inc
mov
lahf
pop
leave
mov
aaa
scas
jne
fcompl
inc
and
lcall
fadds
and
push
push
mov
adc
pop
movsl
rol
push
jne
fildll
adc
cli
cld
xor
sbb
cmp
add
xor
push
lods
mov
icebp
pop
lea
sub
or
push
xchg
jns
lods
shll
and
jne
ds
and
dec
cwtl
repnz
call
repz
cmp
les
cmp
in
and
xchg
sbb
lcall
fistpl
in
push
in
std
push
test
pop
into
cmp
int3
popl
divl
pop
clc
pop
mov
popa
jmp
inc
pop
push
out
push
sub
add
sub
cmp
adc
fdivr
mov
test
lret
pop
sti
and
lods
xor
cltd
pop
pop
cmp
sub
sub
aas
nop
inc
inc
pop
add
and
pop
jp
mov
dec
pop
xor
pop
sbbb
fldenv
lcall
pop
jle
jmp
xchg
in
jecxz
mov
mov
in
mov
add
out
leave
sub
and
push
and
push
or
aad
adc
push
cmpsb
fidivrl
push
adc
and
xor
pop
out
dec
inc
dec
dec
stos
pop
push
jg
imul
sub
in
sub
sbb
dec
jbe
pop
insb
loopne
int3
daa
cmp
adc
out
sub
cmp
mov
inc
repnz
push
or
adc
loopne
sub
and
lea
loop
imul
pusha
jg
sub
pop
das
sbb
cwtl
into
push
xchg
push
fwait
pop
mov
pop
in
les
xchg
sbb
ret
mov
pop
pop
cli
fwait
inc
cld
pop
sub
dec
jne
cwtl
sbb
xchg
and
or
mov
shlb
add
pop
cmp
fwait
or
dec
ja
mov
imul
into
test
stc
pop
sbb
cwtl
vpmacssdql
cmp
and
add
push
pop
fists
jne
xor
fiadds
pop
lock
cmp
aad
sbb
lcall
pop
ds
fadds
les
adc
xlat
pop
scas
imul
pop
data16
push
pop
add
pop
dec
cs
cmp
xchg
sub
mov
lret
lods
pop
sbb
pop
movl
xchg
negl
mov
push
cmc
pop
push
push
shrl
add
pop
jecxz
ret
sub
adc
test
in
lock
pop
mov
addr16
aaa
mov
mov
sbb
lods
or
sbbb
add
ljmp
sub
jnp
movsb
cmp
or
add
test
flds
jne
jecxz
adc
push
stos
loopne
sbb
jge
jns
gs
pop
out
jp
jb
mov
test
push
pop
dec
mov
insb
jg
sub
push
jecxz
faddl
rolb
lret
jle
cmp
mov
outsl
pop
or
mov
jns
shll
pop
in
cld
pop
repz
pop
adc
adc
sar
cmp
pop
cmp
xor
notl
in
pop
stos
pusha
daa
inc
jnp
sub
inc
js
pop
aam
outsb
icebp
or
pop
insb
or
or
pop
sar
loop
jo
or
xchg
int
mov
push
jp
movsb
xor
lods
or
push
sahf
lcall
test
push
sub
add
pop
dec
mov
and
pop
xchg
loopne
insb
push
mov
jns
pop
leave
in
arpl
imul
add
adc
or
or
push
jno
adc
mov
inc
pop
dec
mov
push
cmp
loopne
mov
inc
test
stc
clc
pop
sahf
test
imul
add
pop
pop
push
sbb
push
mov
xor
out
adc
sti
pop
les
cltd
mov
icebp
outsl
jne
fstps
cmp
jg
sti
mov
cmpl
adc
cltd
mov
call
lret
adc
js
mov
les
daa
dec
fstpl
inc
and
jb
inc
dec
pop
dec
xchg
xchg
pop
sbbb
lods
pmuludq
popf
cld
pop
xchg
or
mov
add
ds
mov
lds
das
pop
dec
mov
loope
push
scas
add
pop
shr
mov
pop
push
push
dec
jbe
lods
inc
out
push
pop
addl
pop
cwtl
clc
mov
ss
gs
es
xor
inc
scas
pushf
lcall
std
cltd
fistl
mov
pushf
sbb
xor
repz
mov
roll
std
pusha
mov
mov
pop
js
adc
cmp
mov
insl
pop
cmp
stos
ficoml
adc
mov
ljmp
aaa
ficomps
adc
mov
sbb
out
xor
lahf
notb
or
fstpl
bound
mov
pop
pop
in
pop
jp
lds
pop
and
mov
jge
xchg
pop
and
clc
and
pop
enter
inc
sbb
jns
adc
or
into
adc
mov
jmp
mov
add
sarl
dec
mov
add
cmp
sub
mov
lcall
adc
mov
daa
push
push
add
jmp
cld
testl
inc
dec
es
mov
sbbl
dec
xor
arpl
insl
push
pop
mov
jae
movsb
mov
xchg
lds
mov
ret
insb
pop
inc
push
adc
sti
aam
imul
jns
mov
push
mov
mov
and
sbb
xor
inc
mov
add
sub
leave
loopne
pop
les
jne
andb
add
sbb
push
and
pop
jb
mov
xchg
and
mov
jb
mov
or
dec
pop
dec
fwait
push
jle
mov
adc
mov
pop
pop
inc
cmpl
xchg
dec
shlb
mov
cld
sbb
xchg
test
and
add
mul
test
cmp
or
jge
aas
stos
icebp
cwtl
mov
pop
outsl
ficompl
in
fdiv
sub
pop
repz
ss
pop
sbbl
jbe
insl
cs
es
or
imul
cmp
lods
push
mov
xor
pop
aad
test
cmp
sub
and
jns
filds
dec
xor
xor
orl
in
push
fcoms
jl
js
inc
sub
adc
sub
mov
adc
adc
add
dec
mull
xlat
jle
cltd
sbb
and
xchg
or
pop
mov
sub
xchg
xor
ret
dec
aad
lret
ds
fxch
jg
pop
rcll
mov
mov
cmp
ds
pop
out
add
pop
or
loop
adc
faddl
int3
xor
push
mov
xchg
sub
or
das
cs
pop
pop
add
or
pop
mov
adc
es
out
pop
mov
rol
inc
mov
jno
or
loope
push
jbe
or
lods
pop
pop
int3
inc
cmp
dec
push
and
jb
fsubrs
add
ja
inc
xorb
loopw
jmp
push
xchg
xor
test
inc
popf
cld
imul
xor
pop
sbb
or
push
inc
dec
outsl
inc
pop
inc
jbe
pop
imul
mov
push
ljmp
aad
leave
cwtl
mov
mov
add
mov
sub
mov
xchg
pop
daa
push
lcall
mov
es
data16
push
lds
mov
jo
data16
jmp
mov
mov
clc
repnz
mov
sbb
sub
jmp
push
pop
or
in
mov
pop
pop
fadd
cli
xchg
and
ljmp
jo
into
push
add
fstps
scas
sub
ss
xchg
pop
in
sub
add
push
dec
mov
ljmp
adc
or
and
mov
dec
dec
xor
pop
inc
repnz
cmp
mov
scas
fs
and
jge
mov
add
in
dec
popa
or
inc
fiaddl
je
pop
das
js
ds
pusha
fmull
push
sub
adc
lahf
xchg
inc
test
pop
sbb
mov
jne
or
adc
or
scas
pop
mov
ds
rolb
cmp
and
sahf
push
add
mov
in
fwait
lods
inc
xchg
dec
xor
dec
xor
pop
and
test
sar
xchg
mov
pop
sti
xor
adc
sub
pop
int
dec
jle
sub
loope
adcb
fiaddl
push
ret
jp
das
outsl
and
or
cld
sub
and
cmpsl
gs
leave
xlat
push
clc
fs
cwtl
push
and
imul
outsb
dec
stc
and
mov
icebp
push
hlt
dec
lods
orb
or
jbe
pop
stos
std
mov
and
imul
fadd
cmp
sbb
sti
jne
mov
xchg
imul
pop
inc
pop
adc
mov
jnp
push
xchg
jl
cli
ljmp
adc
mov
das
inc
pop
cmp
sbb
popa
dec
repz
out
mov
inc
pop
xchg
or
pop
pop
mov
das
xchg
pop
mov
out
adc
leave
fisubrs
push
mov
loop
sbb
dec
ja
sbb
dec
cltd
or
pusha
leave
inc
pop
xchg
cmp
and
pop
push
fadds
adcb
pop
inc
mov
and
aam
das
fldcw
push
sbb
push
movsb
adc
xchg
pop
or
ja
out
xchg
jbe
sbb
push
push
jl
adc
mov
push
xlat
daa
lock
shr
imul
out
pop
mul
push
test
pop
xchg
cmp
test
jo
mov
dec
hlt
mov
in
stos
push
pop
mov
xor
push
mov
ljmp
sti
bound
and
sub
add
fistps
xchg
cltd
inc
mov
xor
push
inc
fildll
cmp
repz
nop
fnstenv
shlb
and
es
push
fistl
jecxz
test
das
mov
pop
jg
xor
or
lret
pop
aad
push
sub
dec
sbb
pop
dec
mov
fstpt
out
syscall
jae
pop
into
leave
pushf
and
push
lret
and
push
xchg
xchg
dec
sbb
pushf
xchg
sbb
push
mov
pop
and
pop
adcb
sarb
fidivrs
imul
or
and
mov
stc
mov
mov
ficoml
cmp
test
inc
icebp
hlt
cmp
bound
ret
push
rol
jg
fisttpl
pop
cwtl
or
xchg
dec
jbe
icebp
filds
inc
inc
pop
out
into
inc
fsub
cwtl
cmpsb
push
pop
aad
jno
pop
and
push
outsb
xchg
pop
adc
cmpsb
xor
lea
pop
jno
adc
gs
dec
push
push
in
sbb
popa
hlt
push
test
or
leave
std
call
cmp
cmpl
inc
inc
and
dec
cs
test
adc
mov
pop
les
in
push
ret
mov
gs
std
xchg
push
mov
pusha
dec
adc
lds
sbb
and
pop
fwait
cmc
ficoms
adc
sahf
and
pop
xor
jle
xchg
iret
pushf
pop
jno
repz
shrb
mov
fldcw
mov
push
push
push
pop
fcomps
jmp
mov
sub
mov
imul
dec
iret
daa
pop
mov
add
or
sub
inc
ror
cmp
jl
dec
fdivrs
sbb
addl
dec
push
xor
sbb
cmp
rolb
icebp
or
push
cmp
shrl
mov
push
cli
orb
les
pop
push
sub
bound
rcrl
shll
dec
cwtl
mov
push
popf
and
adc
sub
mov
pop
jg
xchg
inc
cltd
mov
xchg
sub
bt
lds
es
pop
mov
mov
mov
pop
sub
lret
out
adc
into
xor
dec
adc
rcr
dec
inc
imul
hlt
jb
in
loop
jmp
pop
or
sub
ds
push
and
adc
pop
sbb
jmp
movsb
add
mov
out
dec
mov
cmpsb
leave
push
pop
rcrl
sti
cmp
ret
ds
cmp
aad
mov
add
pusha
pop
adc
pop
push
xor
push
sahf
cs
or
fdivs
jmp
dec
and
push
les
inc
dec
or
arpl
addb
and
pop
xchg
push
ds
jbe
push
adc
xor
or
jp
cmp
imul
and
or
sbb
or
push
pop
pop
cmpl
loop
inc
lahf
addl
mov
addb
sbb
pop
push
mov
jne
das
mov
clc
lods
push
pop
inc
lcall
subl
cmpsb
push
mov
pop
scas
mov
push
pop
mov
pusha
ret
jmp
or
dec
mov
int3
jns
in
enter
test
jmp
push
mov
dec
pop
clc
pop
daa
push
xchg
pop
inc
and
insb
cmp
push
push
xlat
cltd
cmp
jmp
mov
popa
sbb
pop
lret
or
adc
fidivl
icebp
je
jne
dec
and
xor
xor
mov
lret
or
or
push
loopne
jno
inc
or
pop
lods
out
push
cmp
and
jmp
inc
lds
pop
jecxz
push
pop
adc
cmpsb
push
dec
pop
ljmp
int
pop
add
test
fsts
pop
xor
or
das
pop
dec
inc
js
int
pusha
mov
xor
loopne
inc
pop
jg
cmp
pop
scas
jae
in
pop
add
sti
cmp
sbb
in
sbb
outsb
adc
into
cmpsl
cmp
fcomps
aam
out
test
sarb
ret
sbb
fbld
and
jmp
push
adc
pop
mov
adc
xchg
and
push
and
or
fiaddl
in
adc
dec
mulb
push
dec
cmp
inc
xchg
jno
sub
push
cmpsb
xor
negl
jmp
nop
pop
ret
in
lcall
xchg
inc
jl
das
mov
pop
test
out
push
mov
lods
call
pop
ficomps
mull
xlat
cmp
cmp
jne
jp
mov
add
repz
xchg
xchg
adc
sti
in
adc
or
dec
jne
or
fs
inc
dec
inc
test
adc
xchg
dec
pop
jmp
mov
int3
adc
hlt
and
aaa
xchg
inc
mov
lods
mov
xor
xchg
xlat
push
in
mov
pop
pop
mov
lahf
sub
sub
pop
xor
jbe
pop
pushf
adc
xchg
stc
ret
shlb
jg
cmp
ret
sub
pop
xchg
imul
cmp
mov
xchg
test
pop
mov
out
mov
fimull
lods
jnp
daa
pop
mov
jge
rcl
xor
pop
jmp
sbb
leave
and
xchg
jge
mov
pop
movsl
mov
jmp
data16
pop
sarb
mov
popa
xor
cwtl
xor
pop
add
cmp
sbb
fcomps
and
mul
pop
push
lods
out
dec
adc
popa
xchg
es
sbb
mov
pop
pop
adc
and
add
pusha
mov
mov
xor
aad
das
xchg
mov
cmp
sub
fists
mov
pop
hlt
jo
push
xor
inc
call
sbbl
sbb
fcoml
jg
dec
notb
js
dec
mov
and
push
mov
pushf
rcr
push
adc
imul
orl
adc
gs
sbb
rclb
sbb
cld
pop
jbe
inc
shll
push
inc
mov
stc
cli
mov
pop
cmp
jle
sub
xor
sub
xor
or
and
sbb
out
pop
stos
mov
inc
imul
jmp
loopne
adc
call
js
dec
push
sub
pop
gs
es
popa
mov
dec
sbb
jne
sarb
pop
movsl
or
push
dec
sti
call
mov
push
stc
mov
cmpsl
mov
ss
sub
sbb
sub
pop
pop
inc
lretw
fs
sti
and
push
xor
stos
pop
das
inc
pop
call
adc
dec
xchg
push
add
push
data16
ret
testl
add
inc
xor
insl
pop
pop
stc
and
jmp
adcl
lret
popf
pop
mov
inc
dec
push
es
jp
pop
mov
inc
aad
bound
pop
pop
out
pop
int3
call
mov
xchg
mov
cmp
adc
and
movsl
and
pop
mov
jmp
adc
push
jmp
aaa
sbb
jne
sbbb
fisttpl
cltd
sti
push
add
in
insl
pop
icebp
clc
or
jg
inc
inc
add
test
test
fldln2
bound
dec
and
push
aas
xchg
fadds
pop
or
imul
add
cmp
xchg
sbb
push
mov
xchg
dec
dec
adc
cmp
sub
add
pop
mov
sbbb
and
or
dec
and
pop
out
andnps
or
xor
push
jmp
xor
push
mov
lret
dec
sahf
pop
push
adc
lcall
roll
pop
out
dec
pop
js
dec
and
sti
es
inc
aaa
mov
adcl
pop
enter
sarb
loop
dec
pop
jl
inc
insb
dec
loopne
hlt
ja
jne
push
test
xchg
movsl
xchg
sbb
cs
cmp
cmp
and
shll
sbb
in
jl
adc
sub
stos
pop
sub
push
push
loop
test
cmp
dec
mov
clc
sbb
xor
sub
fiadds
cltd
push
fcomps
dec
and
push
cld
sahf
into
xchg
sub
cwtl
out
mov
and
pop
cwtl
fists
mov
mov
dec
pop
mull
es
pop
sahf
and
xor
cwtl
sbb
pop
and
lods
lds
pop
aad
xor
jb
cmp
pop
repz
add
push
pop
insl
mov
test
sbb
xor
icebp
and
aam
add
or
xor
inc
mov
dec
fadd
and
lea
adc
hlt
mov
mov
pop
or
dec
mov
xchg
adcb
and
xchg
rcr
or
pop
pop
loope
xchg
push
ret
adc
mov
add
in
jmp
mov
das
xlat
inc
into
outsl
or
insl
xchg
xchg
or
les
jmp
pop
cs
pop
jle
jp
ret
pop
sub
add
pop
push
dec
clc
imul
mov
add
dec
imul
pop
cmpsb
mov
cmp
push
jno
popa
dec
xchg
push
xchg
jmp
fistl
pop
aas
test
sub
pop
pop
sbb
pop
add
and
or
jnp
mov
mov
fs
movsb
scas
jns
adc
pop
ficoml
decb
sbb
fistps
cmc
pop
push
jmp
mov
mov
rcll
test
pop
xchg
shll
pop
cli
push
jne
mov
ja
xchg
push
cld
cmp
das
cs
mov
jno
or
cmp
pop
int3
pop
test
lcall
fnstsw
inc
icebp
das
push
xchg
push
fwait
inc
test
push
in
sbb
and
fisubl
pop
lret
fnsave
sbb
lods
pop
pop
adc
pop
xchg
out
pusha
fisubl
ljmp
dec
les
pop
sbb
jp
das
iret
hlt
mov
add
stos
mov
rcrb
lds
iret
notl
and
or
pop
cmc
sti
fildl
pop
rol
mov
pop
inc
dec
xor
cmpsb
mov
pop
inc
test
bound
xchg
sub
push
lea
sbb
clc
lock
dec
dec
sbb
lods
sbb
mov
sub
outsl
push
push
push
dec
ret
add
cmp
push
lret
mov
fcmovnu
xor
add
mov
jmp
pop
lds
mov
insl
in
jns
sbb
push
insl
rcr
inc
mov
and
cmp
sbb
inc
mov
testl
insb
rcrb
push
scas
mov
sbb
hlt
push
es
pop
push
push
jmp
push
mov
movsb
enter
mov
popa
pop
repz
fistpl
dec
mov
enter
jno
xchg
and
xorl
lods
adc
in
cmpsl
xchg
jnp
pop
push
inc
lea
bound
ror
aaa
sub
outsb
dec
stos
adc
pop
fisttpll
call
push
shrl
xchg
sbb
cmp
jmp
fs
dec
mov
cmp
cli
jge
ljmp
lret
roll
mov
mov
mov
cmpsl
pop
daa
mov
push
mov
ss
sub
and
enter
mov
int
xor
pop
imul
lret
pop
sbb
pop
pop
ret
cmpsl
loop
loopne
push
outsl
outsb
pop
lcall
shrb
test
xlat
pop
dec
sbb
sub
je
test
idivb
mov
pop
fdiv
cmp
xchg
pop
xchg
inc
cmova
daa
in
into
mov
shlb
jne
dec
fisttpll
push
movsl
dec
adc
jo
or
cmp
cmp
pop
es
rclb
xchg
adc
lea
js
mov
jg
push
adc
inc
scas
ret
xorb
mov
les
xchg
dec
xchg
mov
in
pop
sub
es
mov
mov
sbb
cmp
pop
nop
into
or
mov
adcl
jno
or
inc
mov
mov
outsl
inc
push
pop
pop
or
push
scas
das
leave
jl
adc
dec
and
movsb
mov
mov
pop
xchg
inc
mov
pop
adc
mov
int
jno
jmp
xor
push
jp
mov
and
arpl
enter
dec
ficoms
js
fst
pop
shll
dec
push
mov
pop
inc
les
mov
xchg
in
ficoms
cmc
xorb
jmp
icebp
movsb
dec
mov
pop
pop
dec
inc
jno
loopne
rcrb
aad
cmpb
mull
pushf
lcall
repz
xor
data16
pop
dec
test
subb
leave
into
sub
fwait
pop
in
or
insb
cmpsb
inc
test
pop
lds
loopne
and
pop
pop
xor
inc
int
pop
mov
cmp
pop
xchg
test
rcrl
in
inc
sub
dec
inc
xchg
xchg
or
fdivrs
enter
add
mov
xor
pop
lret
jno
outsl
arpl
adc
aad
leave
adc
pop
xchg
rcll
shll
stos
cmp
fnstenv
mov
call
fstl
pop
add
sbbl
sub
dec
stos
xor
adc
pop
and
inc
jns
sahf
push
inc
pop
jle
fs
add
mov
sar
pop
pop
ret
xor
jo
pop
xchg
ret
cltd
rolb
dec
inc
cmp
insb
adc
cltd
jl
pop
icebp
stos
das
les
sbb
pop
mov
ds
or
cli
sbb
jnp
pop
cwtl
and
out
xchg
inc
pop
inc
push
mov
or
mov
push
int3
popa
push
dec
push
jmp
repz
fmuls
cmpb
ljmp
jmp
or
insl
repz
test
jp
pop
enter
pop
int
icebp
imul
repnz
pop
ljmp
popf
pop
lock
test
lahf
pop
sub
xor
sub
int3
mov
fmuls
cmp
pop
test
push
xor
sub
jge
andb
insl
sub
xchg
cs
adc
inc
andl
sbb
js
iret
and
lcall
push
sub
pop
pusha
aam
adc
cmpsb
pop
int3
mov
adc
lods
leave
test
pop
into
cltd
cmp
pop
aam
out
push
in
push
mov
mov
enter
mov
lcall
aam
jne
stc
xlat
cwtl
pop
clc
xor
fucom
pop
jns
cs
pop
push
mov
add
pop
pop
aad
xchg
cld
push
mov
sbb
jne
pop
sbb
push
pop
iret
int3
add
jbe
and
andb
gs
pop
ret
push
inc
mov
arpl
push
pop
push
cltd
dec
imul
sub
rcll
add
push
loop
aad
into
sub
cwtl
pop
cmc
daa
cmp
outsb
ret
add
sub
mov
sub
sbb
andb
push
daa
pusha
pop
int
pop
push
push
xor
and
push
jns
or
push
mov
or
push
xchg
and
pop
lret
cli
dec
sbb
jmp
jno
cmp
stos
jbe
adc
fsubs
shll
les
ds
cli
mov
nop
pop
push
jb
mov
and
aas
test
dec
pop
jb
fbld
orb
testl
scas
fidivs
add
xchg
push
and
lock
fcmovu
insb
fcoms
mov
fs
cmp
sahf
pop
xchg
pop
pop
out
pop
int3
test
add
pop
outsb
add
jmp
pop
negl
sbbl
pop
dec
insl
cltd
jle
sub
lret
fisubl
dec
das
inc
dec
xchg
pop
and
mov
stc
mov
xlat
shll
mov
std
sbb
stc
push
pop
push
mov
scas
or
adc
in
push
mov
addr16
sub
pop
push
pop
pop
shl
pop
xchg
push
pop
es
lock
andl
pop
xor
repnz
xor
pop
pop
jg
push
add
daa
arpl
jns
xchg
pushf
ret
push
add
rcrl
dec
xchg
andl
mov
xor
jle
cmp
jmp
pop
push
enter
pop
ss
xchg
ret
xchg
add
inc
push
pop
xlat
ja
popf
xor
roll
mov
dec
shrl
aad
mov
mov
add
cwtl
pop
push
imul
pop
sub
cmp
mov
std
mov
ja
push
push
pop
push
jne
cmp
jbe
xchg
jg
das
mov
lods
outsl
pop
pop
stc
jecxz
push
jmp
movsl
arpl
in
pusha
jnp
push
sub
xor
xchg
fimull
mov
lret
imul
pop
push
xor
jge
add
pop
sub
adc
pop
xchg
inc
std
inc
cmc
mov
jne
les
mov
push
xchg
dec
dec
adc
add
cmp
cmc
dec
mov
add
jg
jno
roll
jb
cmp
cltd
xchg
insl
cwtl
shl
or
popa
or
test
sbb
jbe
cmp
js
stos
pop
pop
push
mov
mov
nop
cmp
loope,pt
mov
mov
xchg
xor
stos
add
in
jne
imul
andb
pop
mov
inc
cmp
hlt
add
loop
dec
pop
or
imul
push
rolb
sub
lcall
or
leave
fdivl
mov
sub
loopne
add
ficomps
divb
mov
lea
push
call
pop
out
sar
cld
test
pop
dec
insl
mov
adcb
add
imul
push
pop
popa
jmp
lret
fwait
pop
mov
pop
bound
sahf
pop
fwait
push
jecxz
jbe
ja
loop
fiadds
pop
rcll
mov
or
movsb
inc
sub
sarl
ret
push
hlt
imul
addr16
jno
dec
dec
dec
cmp
insb
lret
or
add
enter
mov
in
dec
fwait
sbb
lock
cltd
xchg
daa
call
in
leave
cmp
or
rcrb
dec
sub
rclb
and
out
xchg
test
jbe
xchg
add
xor
push
addr16
jns
aaa
imul
sti
fmul
loopne
pop
pop
jb
dec
pop
push
xchg
and
pop
sbb
setno
pop
jns
int3
fdivs
add
ror
xor
sbb
imul
pop
add
repz
das
pop
aad
andl
cwtl
pop
test
jmp
aas
pop
add
dec
add
cmp
das
ds
jae
fwait
inc
add
enter
dec
loopne
dec
mulb
daa
pop
insb
push
lods
push
push
and
in
mov
add
adc
mov
ja
xchg
pop
gs
jp
mov
pop
lods
xlat
cli
mov
push
pop
mov
sbb
xchg
fldcw
pop
pop
mov
stos
mov
and
into
xchg
sub
fs
and
push
push
test
pop
andl
or
std
ds
in
popf
pop
adc
mov
ds
add
jecxz
push
enter
mov
sbb
call
test
push
and
mov
dec
xchg
add
andl
das
rorl
test
push
push
mov
dec
xor
or
and
cmp
fucomip
pop
push
jnp
cwtl
dec
cmc
dec
data16
mov
add
jae
enter
pusha
cs
mov
push
stos
in
push
pop
das
add
push
bound
sar
pop
mov
cld
dec
pop
lods
repz
testb
sti
add
loopne
or
jmp
inc
push
das
jo
sbb
add
add
pop
add
lea
push
add
add
and
push
int3
dec
jb
adc
adc
out
cmp
pop
push
mov
jo
clc
adc
jbe
dec
inc
scas
pop
mov
inc
fwait
mov
fcomp
dec
jo
cli
push
xor
push
bound
or
mov
xchg
pop
pop
lods
cmc
inc
into
movsb
btc
pop
push
mov
scas
and
shlb
sti
stc
cmp
das
fcompl
sub
push
fbstp
pop
xor
adc
mov
imul
cmp
push
xchg
fmul
sbb
lods
shlb
lods
int
and
mov
in
cmp
dec
cmpsb
pop
xchg
adc
cmp
add
pop
jecxz
sub
pop
movsl
pusha
xchg
dec
or
mov
push
dec
add
addr16
push
dec
push
xor
fstpt
cmp
and
jno
cmpl
stc
and
push
and
adc
cwtl
adcb
push
or
fnstenv
and
jmp
ljmp
jbe
lret
lcall
iret
lods
xchg
or
mov
jae
sbb
mov
gs
inc
test
push
pushl
out
jno
mov
arpl
pop
cmp
inc
and
daa
dec
pop
adc
cmp
cmp
sti
dec
gs
pop
aam
adc
and
pop
add
pop
in
jnp
cmove
pop
push
sbb
adc
or
popa
jbe
pop
and
push
addr16
sar
pop
push
loop
fs
mov
sti
xor
sbb
or
ljmp
mov
or
xchg
les
cwtl
in
mov
shll
push
pusha
fistpll
fildl
pop
ret
push
enter
cli
push
mov
pop
xor
shll
mov
xchg
imul
movsb
icebp
daa
mov
xchg
testb
jp
pop
lret
xor
popa
or
adc
jge
mov
pop
jne
fmull
imul
push
and
js
lds
jbe
ja
mov
mov
iret
push
jo
dec
cmc
outsl
or
daa
fdivs
push
xchg
pop
dec
loop
and
sbb
test
sub
jno
xchg
mov
mov
mov
xchg
jecxz
dec
pop
mov
fiaddl
pop
jl
jbe
inc
push
stos
inc
outsb
mov
cmpsl
push
add
lds
sahf
push
or
and
inc
pop
aad
movsb
push
pop
test
pop
ja
and
cmp
lcall
or
adc
xchg
dec
mov
hlt
arpl
filds
repz
dec
xchg
and
push
and
push
jecxz
jne
push
and
rorl
pusha
pop
dec
in
cmpsb
ret
aas
and
std
sahf
pop
pop
div
call
adc
dec
cmpb
push
or
idivb
test
inc
loop
cmp
cmc
popa
push
fimuls
jg
lcall
std
cmp
and
push
call
and
cmp
pop
subl
pop
dec
sub
rcrb
push
dec
stos
fisttpl
fwait
add
push
jmp
mov
pop
ja
shll
inc
leave
insl
pop
sbb
mov
scas
lods
mov
cmp
inc
dec
mov
cmpsb
or
cmp
jmp
pop
sbb
and
xchg
sahf
adc
pop
pop
inc
cmp
mov
notb
and
or
xor
pop
inc
out
sahf
pop
addr16
call
adc
ljmp
add
xor
shlb
adc
scas
cmp
push
enter
push
or
push
jmp
pop
pop
push
and
push
sbbb
in
add
mov
ficomps
cmc
or
sub
jle
dec
out
out
mov
dec
mov
add
jecxz
pop
les
movsl
in
mov
push
pop
xchg
scas
inc
dec
into
inc
or
lret
add
inc
pop
push
dec
cmp
jns
stc
out
inc
mov
jbe
xorl
popa
or
cmovns
insl
pop
das
fstp
test
mov
dec
in
push
mov
jmp
loopne
pop
pop
push
or
jle
dec
je
jns
pop
cmc
sub
sbb
popa
inc
jmp
dec
arpl
ret
jp
sbb
mov
cmp
mov
and
stc
fdivrl
push
test
mov
and
jno
rolb
xchg
cmp
pop
scas
fs
and
jne
ficompl
xchg
jmp
pop
leave
test
pop
cmp
push
lods
mov
pop
mov
or
adc
mov
cli
les
test
pusha
and
rolb
bswap
sbb
pop
imul
cmp
mov
iret
test
push
lcall
dec
pop
mov
add
inc
mov
cmp
mov
stc
add
les
and
out
pop
xchg
push
pop
add
test
push
jmp
mov
lods
cmpsb
pop
repz
jg
dec
aaa
das
scas
push
jmp
xchg
mov
cs
mov
jbe
xchg
aam
jne
inc
adc
jmp
in
xor
dec
jbe
add
scas
adc
mov
pop
pop
nop
bound
xor
js
push
dec
inc
scas
pop
dec
sbb
lds
stos
jb
sub
pop
inc
pop
out
pop
lea
mov
fisttps
dec
cmp
ss
mov
into
or
mov
xor
push
lret
insl
insl
jbe
inc
in
sarl
pop
in
push
shrd
push
scas
out
push
fnstsw
fcomps
mov
mov
fstpl
negl
insb
out
push
pop
cmp
mov
sahf
push
and
sub
nop
mov
insb
push
clc
loop
mov
sbb
ljmp
mov
dec
pop
sub
jmp
inc
jo
mov
ja
mov
mov
cmp
mov
and
and
dec
push
rcrl
push
or
mov
dec
fs
ss
cmpsb
jnp
test
pop
mov
jae
je
pop
mov
add
sub
fsts
sbb
or
add
mov
in
xlat
ljmp
insb
or
pop
sbb
and
fsubr
pop
stos
out
cmpsb
mov
arpl
push
pop
push
out
inc
xchg
insl
fildll
pop
cmp
or
aaa
add
out
sbb
mov
pop
adc
inc
outsb
inc
push
sbb
pop
jmp
rcr
leave
pop
mov
arpl
push
push
roll
lds
jne
lods
sub
pop
or
dec
push
js
cmp
adc
push
push
fmul
pop
jmp
outsb
mov
pusha
xor
frstor
mov
push
test
mov
sbb
pop
and
ss
dec
xor
lret
jae
xchg
jb
sbb
pop
dec
rcrl
int3
mov
fcomps
xor
fbld
sbb
je
adc
jl
pop
mov
add
xchg
out
aaa
je
lds
ret
push
jbe
or
sbb
stc
inc
dec
push
lock
or
sbb
mov
stc
fimuls
pop
das
xor
cmp
mov
mov
mov
out
orl
lret
pop
push
jne
pop
leave
or
pop
popa
and
imul
ljmp
push
push
add
fcomip
ret
adc
push
cwtl
or
leave
xchg
cmp
fwait
xor
push
outsl
cmp
jne
xchg
leave
mov
into
push
mov
inc
test
scas
shll
hlt
pop
cmpsb
loopne
aas
push
add
outsl
pop
call
adc
imul
pop
pop
divl
pop
rorb
adc
stos
pop
rol
lahf
and
loope
icebp
mov
xchg
push
jge
jnp
lret
jne
inc
pop
add
repz
ljmp
mov
inc
stos
movsl
sbb
mov
xlat
mov
jne
pop
push
pushf
inc
pop
addl
lods
cmp
and
out
adc
movsb
adc
jmp
sub
fdiv
fnstenv
xor
in
cmp
fldenv
sahf
pop
orb
leave
pop
pop
pop
lret
les
out
mov
xchg
pop
enter
cmp
test
dec
imul
test
dec
pop
push
inc
push
or
mov
pop
out
pop
data16
mov
push
xchg
sahf
dec
addb
jmp
fsubrp
stc
sub
fistl
or
push
pop
pop
jbe
popa
pop
jl
addr16
push
flds
pop
mov
pop
or
xor
dec
lret
cmp
push
push
loope
or
jmp
ljmp
dec
jecxz
loope
and
ljmp
inc
dec
lock
out
pop
jno
xchg
call
push
xor
jecxz
ss
sub
mov
cmp
arpl
repz
push
js
dec
decb
push
pop
mov
stc
jge
test
pop
sti
inc
mov
leave
test
pop
rcrb
add
jbe
xchg
jae
in
push
pop
push
jle
clc
or
test
pop
or
pop
mov
pop
pop
imul
pop
in
dec
adc
daa
add
sbb
adc
and
dec
mov
rcrl
mov
outsb
inc
pop
ljmp
imul
jmp
fs
ficompl
or
sbb
cmp
jns
dec
daa
pop
push
out
and
clc
sub
mov
sbb
addr16
xchg
add
pop
push
lcall
push
imul
jbe
daa
cwtl
xor
and
jp
push
adc
mov
and
pop
scas
call
ss
cld
adcl
lds
xchg
xchg
ljmp
pop
sbb
mov
and
bound
repz
push
neg
repnz
mov
xor
flds
mov
inc
orb
add
push
mov
out
xchg
adc
xor
sbb
cmp
dec
pop
jnp
inc
sub
adc
or
sub
dec
pop
push
mov
jecxz
cmp
insl
in
sbb
pop
lods
dec
mov
mov
mov
mov
jecxz
or
pop
imul
fadd
xchg
push
fidivrl
popa
dec
into
out
cmp
jae
leave
icebp
pop
adc
mov
lds
mov
fwait
inc
pop
fs
and
outsb
int
sbb
rol
int3
pop
mov
sub
cltd
ret
jmp
add
icebp
out
or
add
addps
and
int3
pop
cltd
push
inc
mov
ficomps
xlat
adc
or
add
lcall
pop
add
mov
lock
jg
mov
inc
dec
xchg
pop
pop
mov
les
pop
mov
shrb
jne
mov
add
leave
add
sti
jmp
sbb
lea
lret
imul
xor
add
rcr
out
push
pop
or
inc
pop
push
mov
lcall
mov
add
adc
and
xor
jne
inc
ret
hlt
dec
jecxz
divl
out
mov
out
orl
inc
adc
or
cmp
sbb
pop
mov
int3
bound
mov
or
xor
jne
fcompl
pop
sarl
lret
outsl
add
nop
cmp
lret
xchg
pushf
pop
je
xchg
dec
inc
mov
nop
mov
mov
lret
xchg
or
sub
inc
pop
mov
mov
pop
bswap
pop
jp
test
dec
mov
mov
ja
lret
pop
dec
in
jns
pusha
xchg
cmp
and
pop
rclb
mov
or
or
pop
cli
jmp
les
adc
sbb
inc
or
adc
push
or
push
imul
outsb
jne
jecxz
test
pop
bound
adc
pusha
jecxz
in
mov
cmp
popf
insl
outsl
pop
fists
adc
dec
nop
dec
shll
push
test
filds
lods
ret
je
xor
dec
ja
and
lods
icebp
adc
xchg
jb
pop
sbb
subb
pop
test
push
mov
inc
pop
bound
sbb
adc
push
js
lea
std
ret
cmpl
jle
cli
movsl
enter
push
lds
mov
adc
adc
dec
leave
dec
ret
jl
push
aas
cmp
inc
mov
pop
and
imul
lcall
jno
shrl
mov
pop
addr16
xor
mov
cmp
and
push
sbb
mov
pop
pop
jge
loopne
or
xchg
push
test
mov
int
pop
xlat
inc
adc
pop
or
cltd
repnz
jge
jnp
push
pop
into
sti
pop
ret
mov
pop
and
cmp
dec
cli
pop
mov
pusha
add
fidivrs
out
dec
pop
mov
pop
push
jl
lcall
mov
cli
mov
jne
fsubr
xchg
inc
or
xchg
std
adc
add
leave
xor
mov
mov
cmp
aam
iret
cmp
and
push
inc
pop
bound
dec
and
cs
or
xchg
mov
push
addps
mov
or
stc
xor
adc
ja
inc
xchg
dec
mov
sub
lock
xor
jb
pop
inc
popf
insb
cs
jmp
lea
pop
jecxz
push
test
sbb
push
or
add
or
sbb
popa
ficoms
in
fisubrl
clc
dec
stc
push
mov
inc
test
lds
loope
adc
jne
cvtps2pd
repnz
and
and
ds
inc
jae
mov
ss
cmpsl
push
decb
imul
inc
lret
jp
dec
mov
std
mov
arpl
jge
jb
or
pop
and
xchg
mov
pushf
sub
jle
ds
dec
addb
xor
push
push
test
jle
cmp
mov
cmp
mov
inc
or
pop
add
jg
js
cmp
push
insl
push
adc
mov
adc
mov
in
xchg
lret
ja
push
call
mov
xor
pop
ret
sbb
pop
sbb
dec
out
pop
pusha
flds
adc
ret
fcoms
push
dec
cmp
leave
add
clc
sbb
jg
mov
pop
or
dec
lcall
pop
xchg
loope
stos
cmp
sbb
adc
mov
xor
pop
jle
fisttpll
clc
xor
jge
adc
lret
dec
jecxz
or
ret
xchg
or
mov
sbb
andl
pop
mov
imul
push
popa
lea
mov
out
xchg
leave
ds
push
push
or
jbe
pop
sub
sub
adc
popf
aad
cmp
push
dec
mov
dec
pop
adc
movsb
mov
xor
pop
std
pop
mull
fiaddl
lods
xchg
pop
test
pop
add
inc
mov
fiaddl
sahf
pop
add
out
jg
cli
into
orb
jecxz
mov
add
pop
add
fs
shll
dec
xchg
nop
xchg
and
fidivrs
jmp
push
jno
xchg
pop
cmpsb
gs
or
pop
cmp
add
xor
lret
xlat
add
jno
cmp
insl
je
sub
dec
pop
xor
pop
push
inc
rcll
pop
aam
lret
cmp
pop
pop
andl
cmp
bound
jbe
test
push
inc
cmp
xor
mov
xlat
pop
or
mov
outsb
std
call
imul
pop
ret
sbb
lds
sarl
rcll
dec
inc
icebp
jno
nop
pop
daa
inc
push
and
fcoml
enter
inc
mov
push
xchg
hlt
pop
sub
popa
xchg
mov
pop
subl
jne
dec
ret
add
es
ret
and
ja
inc
pop
and
xchg
cmp
mov
cmp
fwait
dec
adcb
pop
cmp
adc
fwait
push
stos
add
push
pop
shl
pop
adc
jge
ljmp
and
pop
xor
int3
cmp
jbe
int
or
and
dec
inc
cmp
test
sbbb
pop
mov
push
adc
sub
inc
xor
push
jecxz
bound
push
sub
inc
push
add
call
pop
into
xor
jg
sub
xchg
jbe
lcall
mov
mov
xchg
cmp
jbe
xchg
and
adc
mov
inc
pop
ret
orl
mov
push
mov
js
sti
xor
cmp
mov
rcrb
inc
lcall
jns
mov
aaa
and
test
dec
into
fstps
add
inc
pop
jnp
lret
pop
jle
stc
popf
pop
mov
add
mov
loop
jp
fsts
dec
fdivrs
pop
lods
fcomps
ss
jg
xlat
dec
hlt
xor
cmp
in
shll
lcall
sub
enter
fsubrs
andl
pop
out
decl
out
or
ja
jmp
icebp
or
sbb
or
pop
mov
or
pop
lcall
lods
cmp
mov
je
pop
clc
out
and
idivb
repnz
shrl
pop
stc
pop
fwait
jo
daa
jg
dec
pop
subb
lret
push
inc
xor
std
mov
mov
add
mov
aad
rcrb
jns
loopne
pushf
pop
ljmp
shll
sbb
pop
mov
and
mov
push
daa
dec
rcr
adc
fsts
lods
pop
jle
push
fistl
sbb
xlat
jl
pop
push
ror
xchg
push
cmp
push
pop
mov
insl
xchg
jg
sub
add
dec
int3
push
jmp
xchg
and
jne
ret
lret
pushf
mov
push
call
scas
push
addr16
cmp
sbb
inc
inc
sub
outsl
jo
and
pusha
mov
pop
out
cmc
ret
mov
mov
gs
pop
daa
out
push
xor
inc
fwait
addr16
jmp
sub
ret
lcall
xor
imul
cwtl
jne
pop
mov
adc
inc
sub
and
popf
pop
xchg
mov
dec
push
sub
xor
and
sbb
push
mov
fistpl
xor
pop
mov
arpl
pop
hlt
add
xchg
notb
sub
xchg
pop
in
mov
sbb
out
leave
cmp
jbe
push
pusha
sbb
cli
sub
xchg
testb
stc
jno
sbb
mov
cwtl
cli
stc
mov
sub
add
sub
pop
push
mov
rorl
inc
pop
popf
pop
pop
lcall
lock
mov
les
sub
jne
out
jo
stc
jns
adc
pop
push
mov
xchg
add
fisttpll
dec
inc
or
jmp
arpl
lods
pop
sub
fwait
inc
xchg
push
and
or
clc
and
rolb
mov
lcall
sbb
das
push
push
fpatan
daa
and
inc
ret
add
pop
fwait
mov
repz
sub
hlt
in
pushf
jne
pop
xor
dec
lret
or
sbb
push
adc
dec
jno
sbb
bound
dec
xor
cmc
jne
and
rcrl
add
and
notl
pop
shl
xchg
pop
dec
sbb
or
adc
sbbl
imul
pop
push
imul
aas
pop
adc
out
jmp
outsl
les
pop
leave
xor
sbb
std
xchg
push
fldenv
popa
aas
test
or
jg
mov
push
sbb
push
push
jnp
pop
mov
stos
sub
subl
ja
mov
cwtl
mov
pop
dec
sub
push
sbb
pop
mov
dec
stc
xchg
lret
push
jns
pop
scas
cmp
mov
iret
add
sub
imul
daa
ficomps
jae
ds
mov
pop
sub
shrb
aaa
popa
xor
rcl
in
fbld
dec
in
xor
jns
js
xchg
xchg
jne
xchg
pop
adc
sub
jl
ds
or
sbb
and
add
sahf
hlt
fldcw
push
insl
addr16
in
adc
mov
mov
les
pop
mov
jmp
pop
pop
cmp
jle
rcrb
stos
repz
sbb
pop
mov
inc
gs
cmp
ret
into
fcoml
rcll
mov
lods
stos
and
test
add
lcall
sub
push
insb
pop
inc
inc
dec
push
dec
cld
pop
mov
lods
test
pop
das
push
push
pushf
push
mov
pusha
xor
push
sbb
push
and
ds
jbe
stc
mov
push
xor
mov
and
jp
pop
mov
outsl
shr
inc
fdivs
pop
lcall
pop
push
and
pop
dec
sub
push
lcall
loop
pop
jnp
mov
pop
jb
shl
fisubs
pop
test
ss
push
inc
xor
js
add
add
out
pop
iret
fstpt
jmp
test
lods
pop
and
mul
pop
sbb
lret
adc
mov
jne
aam
pop
pop
arpl
xor
pop
out
pop
xchg
filds
pop
and
in
jae
add
mov
dec
lcall
mov
inc
add
xchg
mov
dec
mov
loop
pop
add
dec
daa
das
pop
sbb
pop
jmp
pop
xor
insb
gs
inc
cwtl
jbe
lods
push
dec
and
sub
pop
and
sub
sbb
cmp
jmp
popf
enter
pop
jle
adc
xchg
push
dec
add
xor
mov
addb
decl
into
adc
xchg
inc
mov
inc
push
sbb
fisttpl
dec
pop
jbe
in
mov
push
jb
xor
outsb
js
mov
xor
dec
jg
and
sub
std
jecxz
push
test
xor
ljmp
pop
xor
mov
pop
sahf
dec
dec
mov
pop
push
push
fldenv
lock
rol
fmuls
push
sub
stos
and
jmp
ret
pop
hlt
es
dec
rol
sbb
cs
push
xchg
push
stos
xchg
ja
loope
fsubr
pusha
les
rcrb
into
push
movsl
cltd
push
dec
push
orl
insl
push
sbbb
cwtl
adc
inc
jg
and
cmp
mov
ss
pop
in
xchg
mov
clc
and
jnp
mov
inc
dec
pop
stc
cmpsl
test
sar
jnp
imul
pop
ja
adc
push
popa
inc
pop
add
aam
mov
iret
lcall
stos
sti
add
pop
push
jecxz
negl
pop
lods
mov
fsubr
pop
dec
lock
mov
cltd
inc
jo
imul
ret
pand
into
push
pop
rolb
cli
or
pop
sbb
pop
fiaddl
jecxz
xchg
sbb
xchg
in
movsl
je
daa
dec
jbe,pt
stos
into
pop
adc
sub
cmp
ja
push
fwait
adc
adc
adc
test
sbb
dec
cmc
add
stos
pop
cli
or
xor
mov
test
xchg
sub
and
mov
inc
xchg
pushf
test
jecxz
pop
lea
push
dec
push
cmc
pop
pop
sar
pop
lods
add
adc
std
inc
aad
movsl
dec
es
dec
xchg
adc
or
clc
mov
pop
sub
pop
bound
jmp
test
xor
push
lcall
dec
add
add
jmp
popa
hlt
adc
pop
xchg
push
or
stc
bound
negl
jbe
jmp
cmp
dec
fwait
lock
sbb
in
in
pop
addb
push
shlb
ret
xchg
rcrl
adc
pop
or
rclb
pop
les
ja
mov
rcrw
in
test
loope
mov
je
push
pop
sbb
insb
enter
jbe
pusha
mov
sbb
sbb
pop
aad
mov
jnp
jbe
sahf
mov
xchg
fldl
mov
jne
int3
fstpt
pop
pop
and
or
test
adc
sub
push
xchg
pop
icebp
roll
pop
jmp
subb
or
sub
loop
pop
ljmp
into
pop
dec
rcrl
les
movsl
xchg
in
pushf
jg
pop
ret
pop
and
push
pop
or
mov
xor
cmpsb
cli
adc
cmpsl
push
popa
mulb
adc
int
xor
cmp
xchg
mov
test
inc
addps
pop
clc
sbb
ret
push
adcb
stos
inc
les
dec
push
inc
ja
push
and
pop
lcall
shlb
pop
sub
fildll
and
pop
mov
ja
mov
push
push
out
aaa
mov
sub
dec
movsl
pop
repz
mov
pop
push
push
pop
daa
in
sub
pop
dec
repnz
xchg
lcall
lahf
xchg
std
pop
push
pop
outsl
ret
pop
dec
jle
and
mov
loope
outsb
or
in
sbb
inc
or
push
mov
push
mov
movaps
dec
pop
lods
adc
mov
jnp
mov
pop
mov
addr16
lret
cmp
les
push
testl
decb
lods
sbb
pop
testl
add
das
push
test
cwtl
pop
xchg
mov
sbb
adc
push
jnp
fsubrs
jg
jle
cltd
and
cmp
fwait
xchg
icebp
and
ret
sub
pop
sub
dec
xchg
or
mov
xchg
xor
cmp
dec
cmp
gs
cmp
pusha
inc
pop
sub
cmp
lret
sub
fcoms
and
pop
jl
dec
fimuls
je
movsb
inc
mov
add
or
lcall
mov
push
xchg
inc
push
mov
dec
test
insb
imul
ss
arpl
push
pop
dec
sbb
push
fiadds
and
pop
mov
mov
xor
mov
xchg
push
xchg
ljmp
push
add
xchg
and
stc
out
and
dec
push
push
std
movlps
pushf
add
push
push
test
mov
xor
xor
cmp
dec
sti
push
pop
or
xor
pop
sub
adc
sti
mov
push
popf
je
pop
jg
data16
jge
lock
cmp
and
push
andl
sub
adc
lret
xchg
add
mov
adc
out
in
das
mov
in
push
inc
mov
fmuls
jb
mov
pop
xor
pusha
wrmsr
pop
push
mov
stc
nop
or
mov
pop
pop
cwtl
int3
push
call
in
or
lcall
data16
scas
dec
xlat
push
pop
inc
adc
fstps
cli
sub
xor
ss
cwtl
out
inc
xor
cmp
push
ds
mov
dec
jmp
pop
mov
inc
xchg
mov
lods
pop
ss
xchg
or
outsl
jmp
xchg
push
loopne
jmp
pop
js
lret
pop
loope
push
cmp
gs
xor
push
stos
lds
mov
xchg
mov
rcr
dec
lock
hlt
sub
popf
jns
int
mov
dec
insb
mov
fcoml
pop
or
lds
mov
icebp
jno
push
sbb
es
cld
xchg
sbb
jbe
jge
dec
in
inc
jmp
ret
jecxz
pusha
repnz
aas
mov
lock
dec
sbb
push
adc
jns
pop
imul
sub
bound
cmp
negl
dec
push
ljmp
call
sbb
push
pop
mov
imul
push
jp
pop
pop
in
and
dec
add
push
lret
jbe
iret
pop
mov
jl
cmp
jmp
and
pop
addr16
mov
push
lcall
insl
push
and
inc
sub
fs
fdivrs
imul
lret
js
mov
pop
jno
incb
or
sbb
imul
push
or
push
pop
mov
inc
cmp
adc
fadds
pop
inc
cltd
mov
sbb
push
push
fisubs
fadd
in
sub
imul
dec
pop
xorl
movsl
cmp
scas
pop
xor
cmp
push
sbb
mov
movsl
pop
insb
mov
es
insl
mov
pop
sub
jne
pop
test
movsb
add
or
setle
cmp
fistpll
rclb
outsl
bound
aaa
sbb
push
lcall
add
push
pop
xor
jmp
lret
mov
sub
add
mov
and
inc
cmp
pop
out
or
push
imul
xchg
dec
leave
jl
pop
das
test
jnp
xor
pop
mov
ficomps
or
out
push
push
push
mov
mov
xchg
push
push
mov
cli
fisubl
push
js
jmp
mov
clc
mov
xchg
shl
outsl
jge
pop
es
adc
mov
cmpb
xor
dec
and
sub
lahf
test
fwait
mov
xchg
cmp
or
add
orb
push
pop
out
and
xchg
daa
jmp
out
sti
mov
push
mov
sub
or
push
test
mov
cwtl
lcall
shl
rorb
aad
xchg
xchg
stc
jne
mov
xor
sub
outsb
call
jae
loop
add
inc
sub
dec
jno
lcall
pop
ja
clc
mov
inc
lock
sub
push
cmpsb
lods
xor
mov
sarl
push
and
xor
inc
es
dec
push
mov
fsubr
push
in
fs
xor
xor
pop
adc
inc
pop
jne
or
push
loope
pop
pop
lods
cmp
in
cli
sub
and
jae
clc
cltd
aaa
pop
test
jb
dec
jecxz
mov
dec
and
loop
add
inc
or
out
test
sti
hlt
enter
dec
jns
pop
inc
arpl
cmpsl
enter
loopne
sub
pop
pop
inc
and
fadd
cmp
stos
mov
xchg
mov
pop
sbb
sub
mov
andnps
popa
xor
sarb
adc
pop
mov
out
or
mov
mov
sub
pop
lcall
das
cmp
cmpsb
pop
cmp
pop
enter
pop
cmp
adc
jmp
mov
push
mov
in
push
mov
bound
jb
push
enter
sbb
js
mov
and
adc
mov
pop
push
fwait
xor
inc
pop
xchg
mov
test
mov
jns
pop
mov
dec
imul
lods
sbbl
out
dec
cmp
pop
mov
daa
imul
push
add
pop
push
pop
lods
mov
out
push
jg
cmp
or
adc
sbb
test
dec
imul
mov
jl
adc
sub
and
outsl
xor
rcrb
mov
xor
adc
cwtl
movsl
push
xchg
mov
shrl
dec
inc
dec
dec
hlt
outsl
xor
jbe
push
inc
fwait
push
add
sbb
mov
or
add
pop
jmp
pop
pop
pop
inc
push
movsl
daa
cld
jmp
insb
enter
push
pop
mov
mov
sub
jp
cmp
push
roll
xchg
mov
jno
and
pop
popa
enter
addr16
pop
in
sub
nop
btr
and
jnp
and
mov
fwait
int3
gs
stc
mov
dec
in
sbb
lods
jnp
clc
in
dec
jae
adc
popf
and
sti
lods
test
adc
cld
jle
inc
cmp
adc
jmp
cmp
mov
pop
mov
scas
cmp
adc
mov
test
stc
jle
cltd
adc
mov
push
or
or
fsubl
lret
add
sti
inc
jbe
out
les
dec
mov
mov
pop
inc
leave
sub
fstps
mov
push
jecxz
or
xor
cmp
pop
add
inc
pop
dec
push
ja
test
sbb
push
aaa
adc
in
sbb
push
aaa
dec
cltd
sub
jbe
inc
stc
and
jo
pop
dec
out
cmp
jno
bound
or
cmp
pop
js
jmp
or
add
add
or
aas
pop
dec
or
ss
test
or
dec
fldl
andl
push
lahf
jae
mov
and
xor
hlt
pusha
cwtl
out
pop
inc
lret
cwtl
cmp
cli
and
sbbl
es
mov
cltd
pop
cwtl
xchg
pop
cmp
inc
cli
adc
vrsqrtss
addl
or
lea
dec
pop
pop
in
push
mov
push
cmpsb
and
andl
sub
xchg
xor
pop
ljmp
jo
jecxz
fadds
frstor
std
mov
pop
dec
push
mov
dec
sahf
pop
jp
mov
imul
pop
sub
and
negl
popa
mov
sarl
sbb
shrl
add
push
jmp
cmp
add
sbb
cmp
push
vaddsubpd
cmp
loop
lods
sub
push
push
xchg
xlat
pop
sub
or
pop
sbb
out
inc
and
and
cld
cmp
xchg
jbe
pop
mov
loopne
in
addr16
or
dec
xchg
insl
jecxz
lret
add
adc
sbb
push
aam
cmpsl
les
jmp
sbb
imul
jge
jo
sbb
dec
arpl
notl
lods
adc
mov
pop
pop
loopne
pop
je
mov
popa
cltd
mov
pop
push
push
scas
dec
xchg
xchg
shlb
stc
and
movsb
sub
lcall
ja
fdivs
push
mov
incl
orb
fwait
mov
sbb
push
add
pop
aas
push
inc
and
adc
mov
mov
dec
cmp
or
das
cwtl
jmp
mov
mov
pop
dec
mov
jns
adc
pop
dec
xchg
push
jae
add
cmp
imul
int3
pop
adc
push
mov
mov
out
jbe
ja
aad
add
or
sub
sbb
rcll
lods
pop
subb
or
dec
loope
pop
les
jbe
push
jle
pop
pop
or
mov
pop
ret
pop
xor
xorl
jne
jbe
test
stc
adc
pop
add
mov
imul
and
movsb
in
sbb
cmpsb
ss
xor
jmp
sbb
mov
popa
pop
and
shlb
push
aad
pop
int
fimull
stc
loop
gs
inc
pop
pushf
add
call
cmp
cmp
jae
pop
mov
icebp
adc
jno
popf
pop
mov
sbbl
mov
fnstenv
pop
fstl
enter
je
mov
cmp
call
sub
and
test
mov
pop
lods
bound
dec
jge
repnz
je
mov
sarb
aad
call
loopne
adc
adcl
mov
mov
adc
xor
mov
std
stc
xchg
cld
repz
cmp
test
pop
pop
jmp
mov
jnp
enter
sti
sub
xchg
in
sbb
inc
lods
lcall
ds
in
push
stc
sub
movsl
cltd
push
popa
fnstenv
jg
pop
out
ds
in
and
push
sub
pop
js
push
inc
mov
pop
pop
dec
sbb
jecxz
fistpl
pusha
dec
shl
sub
pop
push
dec
sahf
testb
mov
mov
es
testb
sbb
or
negl
push
stos
sub
gs
mov
movsb
xchg
pop
adc
adc
mov
jmp
push
lock
cld
sbb
add
iret
pop
adc
xchg
pop
bound
mov
aad
and
ljmp
mov
xchg
cmp
pop
les
dec
ret
rcrb
sub
adc
jns
addb
sbb
fcompl
out
xchg
or
xchg
add
adc
adc
add
cs
pop
les
leave
cmp
cmp
pop
cmpsb
jecxz
sbb
pop
adc
push
shll
int3
sbb
jle
hlt
add
clc
mov
scas
fsubr
push
je
lret
and
push
push
stos
cmc
dec
pop
pop
les
sti
repnz
adc
testb
sub
std
pop
adc
int3
movsl
cld
in
pop
jae
mov
jecxz
jne
addr16
pop
jmp
repnz
sbb
xlat
add
xchg
mov
pop
push
pop
dec
les
jno
jmp
cwtl
stos
lret
mov
dec
insb
sbb
pusha
leave
dec
test
xchg
std
fmulp
sbb
jne
pop
pushf
das
adc
or
test
dec
xor
sbb
sub
mov
dec
push
push
ljmp
xchg
inc
push
mov
pop
adc
or
adc
test
add
test
mov
xor
sub
rcll
jnp
pop
fmul
push
pop
mov
pop
fistps
push
and
mov
pop
sub
int3
hlt
lds
outsb
jge
inc
pop
jo
ret
push
addr16
sarl
jns
sub
movsl
insl
sarb
data16
lds
dec
pop
jp
dec
lret
icebp
inc
push
lock
push
stc
imul
aaa
pop
lods
scas
xor
push
lret
jnp
and
pop
mov
pop
cwtl
sbb
idiv
jnp
adc
ret
std
dec
pop
pop
mov
inc
adc
dec
imul
or
cwtl
adc
mov
and
hlt
mov
loopne
xchg
pop
pop
cli
ljmp
pop
popa
pop
in
mull
inc
test
push
mov
cmpsl
xor
sub
insl
outsl
punpckhwd
ret
cmp
mov
popa
repz
adc
xchg
pop
dec
enter
or
inc
cli
xor
inc
jns
and
cli
pop
stos
sbb
pop
ljmp
xchg
sbb
xor
xor
or
pop
pop
ljmp
mov
mov
lock
daa
pop
or
int3
inc
pop
xor
in
pop
push
mov
stos
cmpsl
pop
cld
das
cmp
ss
pop
or
jl
and
mov
out
test
sbb
fistl
pop
dec
lock
icebp
cwtl
rorb
adc
mov
push
fnstcw
rolb
fsubs
xchg
pop
inc
jbe
pop
push
clc
mov
inc
xchg
pop
and
test
dec
pop
outsb
insl
movsb
aad
xor
pop
mov
and
sbbl
dec
or
movd
pop
pop
jmp
rcrl
in
push
std
test
sub
insl
addr16
ficompl
and
push
sti
xorl
pop
pop
xor
and
int
cmp
pop
adc
cmp
pop
push
xchg
pop
in
nop
jl
mov
or
pop
xchg
jmp
fldl
call
adc
inc
pop
inc
lds
outsl
pop
push
mov
sub
jg
push
and
xlat
mov
ret
shlb
inc
fcompl
mov
mov
rolb
cmp
out
pop
pop
pop
addr16
jnp
mov
std
lret
pop
test
shll
pop
cs
xor
pop
cmp
ret
ret
decl
mov
outsl
jb
push
and
test
ret
out
sbb
jne
sub
xor
inc
scas
dec
mov
lcall
or
dec
pop
push
add
sahf
jge
mov
lahf
push
pop
icebp
mov
jle
fcompl
dec
js
das
add
bound
push
dec
mov
jbe
cmp
repnz
or
ret
negl
in
pop
push
xchg
test
jae
adc
push
add
adc
andl
repz
aad
xchg
jmp
dec
cmp
cmp
lea
mov
sti
inc
pop
adc
mov
pop
pusha
dec
aas
or
mov
jo
jae
push
arpl
and
nop
dec
add
cmpb
cmc
adc
cmp
lret
mov
movsb
and
cld
rcrl
loope
adc
push
into
imulb
jae
test
pop
add
movsb
jecxz
sti
stos
mov
push
xchg
add
ret
pop
in
adc
mov
cmp
cwtl
imul
jns
jle
daa
xor
out
jl
push
mov
lret
enter
jmp
pop
mov
std
dec
or
or
aaa
ja
jmp
jle
add
sub
adc
mov
push
pop
push
cmpsb
or
push
add
enter
add
in
mov
aas
pop
sub
mov
pop
pop
jne
lods
arpl
bnd
xchg
or
mov
xor
or
push
add
inc
pop
xchg
inc
cmp
sbb
pause
pop
cvtdq2ps
xor
mov
sbb
adc
push
cmp
clc
aaa
pop
sub
test
dec
or
loop
addl
incl
loope
fisubl
cmp
adc
enter
out
xor
inc
cli
or
pop
inc
insb
inc
sbbl
xchg
inc
stc
jb
jns
xor
pop
push
dec
xchg
rolb
out
mov
sub
dec
mov
push
adc
push
push
add
idivl
mov
shll
ja
cld
gs
leave
pop
inc
dec
mov
mov
push
pop
xor
inc
xchg
adc
decb
lcall
out
xchg
pop
adc
roll
inc
push
icebp
mov
or
dec
sbb
loop
add
jecxz
and
mov
pop
dec
push
std
fwait
lds
or
xchg
sbb
in
pop
inc
fs
je
sbb
adc
rcl
arpl
lds
sub
test
adc
sbb
sbb
sub
ss
mov
sbb
lds
xchg
and
or
fcomp
jns
mov
pop
adc
clc
cld
mov
lcall
inc
ret
push
jmp
das
js
push
fmuls
add
mov
push
repnz
ret
jae
lret
test
call
add
add
sahf
fisubrs
xchg
sub
cmpsl
pop
xchg
gs
fcomps
mov
push
pop
aad
dec
test
in
or
cwtl
jno
cld
ja
adc
stos
jmp
or
push
pop
jo
mov
subb
add
cld
and
mov
jg
popa
mov
lcall
mov
mov
add
push
aam
mov
xor
jp
push
lret
xchg
sbb
scas
stc
rorb
sbb
les
jb
pop
addr16
adcl
cwtl
cmp
mov
mov
addr16
xor
pop
mov
rorb
jns
dec
push
stos
xor
clc
pop
mov
shrl
inc
pop
cmp
mov
mov
pop
cmp
imul
cmp
movsl
pop
xchg
jmp
out
pop
dec
popa
jno
and
push
cmp
fisubrl
mov
dec
push
repnz
pusha
cwtl
out
adc
cmc
adc
adc
push
rcr
or
iret
pop
dec
add
loope
testl
push
fcomps
sbbb
push
and
or
adc
fdivs
enter
gs
mov
cmp
jecxz
ds
jae
inc
xchg
xlat
push
je
inc
dec
pop
mov
pusha
cmpl
pop
repz
push
pop
sbb
mov
hlt
pop
mov
sbb
jo
pop
call
pop
imul
xchg
mov
or
mov
out
cmp
pop
jmp
insl
pop
dec
inc
or
inc
xchg
test
adc
mov
pop
push
or
xchg
push
add
and
popf
mov
xor
mov
or
lods
push
pop
pop
jl
pop
cmp
mov
ja
arpl
pop
and
dec
push
pop
mov
fcompl
roll
jmp
cmp
xchg
pop
dec
pop
pop
jl
mov
fsubs
inc
inc
mov
cwtl
mov
xlat
cld
push
dec
scas
pop
aas
cmp
lret
subl
mov
push
popa
xchg
jmp
adc
jecxz
daa
jno
cli
mov
ljmp
pop
add
cmp
pop
mov
negb
mov
insb
add
movsl
dec
jo
pop
sahf
xchg
pop
dec
push
push
sti
fcoms
aad
std
cmp
pop
xchg
adc
mov
push
inc
pop
shll
push
addr16
pop
cwtl
or
fs
mov
dec
addb
ss
pop
or
sub
fstps
into
push
xchg
jae
push
pop
imul
xor
or
push
mov
sub
ljmp
aam
es
mov
pop
adc
jmp
jnp
test
xor
pop
daa
and
in
adc
cmp
add
jmp
cmp
push
rcr
xor
adc
cmp
adc
addb
xchg
push
jae
adc
xlat
cmp
leave
and
push
mov
sarb
into
dec
pusha
fildll
or
jmp
sbb
fnstsw
sub
sub
and
add
jmp
test
inc
add
sbb
mov
cli
in
sub
fdivr
mov
add
inc
gs
pop
sbb
cmpl
cmp
es
mov
roll
sub
packuswb
stos
jp
int
ret
cmp
ror
push
and
inc
inc
jp
dec
pop
outsb
jo
mov
ja
inc
sub
enter
sbb
xor
je
pop
rol
bound
pop
sbb
cmp
shrl
xchg
sbbl
dec
cmp
dec
mov
cmpsb
push
push
sub
pop
jo
clc
fstps
dec
sbb
sahf
jecxz
inc
movsb
fsubl
pop
les
jb
xchg
push
pop
inc
adcl
in
pop
dec
mov
cmpsl
es
loop
int
or
adc
cmp
dec
pop
pop
pop
or
cmp
dec
mov
leave
dec
sbb
lcall
push
sbb
rcr
cltd
xor
sbb
jbe
push
jg
in
xchg
mov
aad
lods
repnz
es
aas
pop
outsl
cs
sti
lret
xor
mov
xchg
sub
mov
or
mov
dec
data16
sub
pop
mov
jbe
mov
in
xchg
fcmovu
cwtl
or
jg
stos
mov
enter
repz
mov
ret
cmp
pop
lds
orl
or
add
sub
js
cmp
subl
pop
dec
ss
push
stos
or
dec
scas
mov
js
and
push
or
dec
pop
aas
cli
inc
rcll
mov
enter
pop
fisttpl
xchg
loope
js
mov
cmp
adc
arpl
negb
out
ja
imul
adc
aad
xchg
xor
sbb
lock
sbb
sbb
and
fs
stos
imul
sub
push
pop
xchg
ds
pop
test
in
rcrl
mov
sub
cli
mov
mov
jae
sub
test
dec
jne
mov
out
adc
add
in
inc
pop
dec
sbb
and
xchg
clc
xchg
imul
and
mov
sub
ljmp
lcall
mov
fwait
adc
push
mov
test
mov
pop
cli
mov
cmp
cmpsb
or
xchg
mov
pop
dec
pop
incb
cltd
jbe
and
pusha
push
dec
cmp
addr16
lahf
cmp
jne
cmp
popf
sub
push
add
adc
and
pop
pop
cs
ret
dec
mov
xor
std
push
cltd
sahf
mov
mov
ret
push
dec
pop
pop
sbb
pop
xchg
mov
sub
mov
pop
idivl
lret
dec
inc
sahf
sub
inc
adc
outsl
xchg
gs
mov
lret
pop
sbb
inc
jnp
pop
shlb
sbb
mov
adc
and
pop
or
sbb
test
push
out
sub
pop
sub
xchg
sub
push
or
or
jbe
fcoms
sbb
je
mov
add
mov
cmpsb
sbb
pop
pop
jp
pop
jae
cmp
outsl
cmp
pop
xchg
jge
sbb
xor
inc
pop
sbb
cmpsb
pop
and
mov
inc
mov
inc
mov
in
fildll
test
push
test
jnp
fiaddl
pop
test
shll
rorl
push
es
test
ds
loop
or
pushf
push
jp
adc
push
push
ficoml
pop
mov
lret
leave
sub
orb
mov
inc
mov
mov
insl
mov
sub
mov
pop
mov
mov
addr16
mov
push
adc
mov
arpl
mov
push
cmc
out
mov
dec
ds
movsb
cmpsb
pop
push
scas
nop
es
pop
mov
mov
xor
ljmp
mov
clc
pop
xchg
jns
loop
dec
ja
mov
int3
mov
mov
into
pop
xchg
jmp
pop
or
jns
fdivrp
scas
clc
pop
xor
test
sub
push
sbb
xchg
int
shrl
inc
mov
decl
ja
pop
outsl
cmc
fwait
mov
sub
aam
mov
pop
mov
aas
inc
mov
dec
or
aad
dec
enter
adc
xor
dec
add
and
fimull
mov
jmp
lret
cmp
pop
pop
sahf
mov
jge
push
dec
cmp
clc
dec
and
dec
inc
inc
jbe
fcom
fstpl
into
push
push
adc
movsb
adcb
fdivs
fistpl
xor
pop
push
scas
mov
adc
add
ret
cmp
and
push
jnp
imul
out
inc
test
cmp
out
pop
xor
cwtl
jns
jb
jmp
or
pop
or
jbe
sub
pusha
pop
sbb
jb
mov
mov
repz
jge
inc
jp
pop
mov
movsl
lret
ret
pop
jbe
add
mov
dec
pop
movaps
les
adc
jne
add
inc
mov
inc
enter
sti
sub
cmp
addr16
ds
ss
cwtl
mov
loop
sbb
lret
fisubl
xor
pop
mov
dec
push
inc
jnp
pop
std
add
pop
xchg
add
clc
ja
pop
pop
and
mov
mov
adc
mov
add
dec
lods
xorb
pop
out
mov
cmp
pop
inc
pop
and
dec
leave
shrl
jbe
pop
mov
sbb
sti
mov
lcall
ljmp
stc
pusha
test
push
pop
pop
movsb
in
fisubrs
pop
pop
pushf
in
xchg
mulb
push
jne
das
cmp
xchg
popf
sahf
xchg
pop
inc
lods
cld
sbb
pop
cmp
arpl
leave
cmp
imul
pushf
sahf
fistps
cmp
cmp
adc
add
dec
add
jb
xchg
pop
mov
and
ss
sbb
cmp
xor
pop
mov
sbb
add
in
pop
mov
mov
popa
fadds
cmc
ljmp
int3
pop
pusha
imul
in
xchg
push
xor
push
dec
pop
inc
mov
pop
hlt
fldenv
adc
imul
sub
mov
sbb
gs
imul
insb
pop
pop
mov
stc
pop
jge
push
lahf
jb
mov
push
repnz
into
daa
jge
into
jo
push
int3
rcrb
mov
inc
push
cmc
xor
adc
loop
dec
jo
sbb
outsb
pop
or
pop
push
push
pop
lcall
push
push
pop
inc
ss
push
sahf
lock
popf
stos
inc
jl
fisubl
and
xchg
xchg
aas
adcl
xchg
fwait
xor
dec
jp
pop
call
rorb
mov
push
pop
and
ret
lret
xlat
xchg
cmp
pop
test
out
sbb
and
lret
out
pop
add
cmp
xor
xbegin
xchg
sub
int3
ja
pop
cwtl
rdtsc
inc
into
xchg
dec
push
fistps
sub
push
mov
or
ret
pop
pop
orb
mov
xchg
jnp
dec
inc
fiaddl
cmpb
cmp
test
sub
lcall
cmp
imul
or
aam
ds
nop
jbe
das
pop
lret
imul
fistpl
andl
push
pop
sahf
jns
cltd
mov
mov
das
push
pop
sti
es
jbe
sub
popa
sub
xchg
aaa
pop
push
dec
iret
adc
stos
sbbl
jle
outsb
dec
addb
mov
mov
or
fucomi
or
fs
pop
pop
jle
add
push
enter
mov
mov
int
cmp
jge
scas
jno
mov
pop
scas
xor
cmp
add
out
dec
cmp
sub
jae
cmp
add
in
adc
mov
bound
inc
leave
out
cmp
jbe
xchg
dec
pop
push
test
scas
fs
sub
xor
xchg
or
xchg
imul
popa
jbe
jbe
stos
sub
add
ficoms
sbb
xchg
mov
in
jae
cmpsl
loope
dec
add
xor
mov
dec
adc
adc
pop
jns
fcoms
sbb
adcb
jge
fsubrs
test
pop
cwtl
or
in
mov
dec
jge
dec
ja
xor
rcl
outsb
test
iret
mov
pushf
sbb
scas
hlt
dec
pop
enter
push
pop
add
daa
and
inc
imul
dec
mov
cmp
or
bswap
add
jb
pop
daa
mov
insb
or
ljmp
mov
sub
imul
daa
icebp
pop
mov
das
cltd
jne
and
scas
pop
iret
cli
andps
push
xchg
sub
aad
pop
enter
add
push
pop
nop
mov
jle
mov
xor
ljmp
cld
mov
mov
and
cmp
xchg
pop
mov
out
stos
mov
and
pop
xor
xor
mov
and
ss
adc
or
pop
pop
imul
push
push
icebp
insb
and
negl
dec
inc
adc
jo
pop
lds
xor
xor
pop
andl
pop
or
cmp
js
push
fwait
and
xor
mov
cwtl
imulb
sbb
pop
or
pop
test
inc
in
pop
push
xchg
pop
pop
xor
jno
pop
cmp
push
clc
notl
xor
pop
inc
cmp
cwtl
and
das
cmp
dec
dec
jno
inc
inc
icebp
jns
cwtl
cmp
or
mov
ret
push
add
dec
inc
pop
fists
daa
pop
int3
dec
pop
add
adc
gs
pop
js
imull
xor
xorb
sbb
ja
dec
inc
shr
adc
jnp
pop
sub
fwait
jle
add
adc
push
jo
and
and
ret
xlat
pop
xchg
mov
mov
cmc
adc
sti
hlt
pop
cmpsb
shr
pop
push
pop
sbb
and
in
out
cmpsl
addr16
push
fsubp
lret
fcom
mov
stc
sub
dec
jbe
xchg
xchg
dec
pop
outsb
mov
pop
push
fidivrl
pop
out
das
sub
test
add
adc
cld
inc
push
add
les
jbe
push
jae,pt
mov
lods
push
lret
push
test
pop
gs
sbb
and
sbb
movsl
pop
repnz
inc
push
pop
add
fstpl
mov
jl
cmp
out
inc
cmp
vsqrtps
cmp
int3
xchg
pop
nop
sbb
and
hlt
xchg
js
adc
pop
jne
mov
push
pop
lret
dec
repz
mov
mov
and
cmp
sub
push
sti
inc
mov
movl
mov
or
test
pop
cmp
mov
pop
ret
or
test
cmp
push
and
adc
insl
or
pop
add
fisubs
mov
sbb
loop
loopne
pop
jo
pop
in
icebp
jne
and
jmp
sub
pop
dec
jl
psubsb
mov
dec
sbb
xchg
sahf
jecxz
hlt
push
sub
jo
in
into
pop
xorl
jb
mov
inc
cs
pop
test
or
pop
push
xor
jge
push
stc
pop
fcoms
sbbb
xlat
out
or
fadd
jo
pop
dec
mov
nop
leave
ret
test
dec
inc
scas
add
and
in
or
lret
adc
ljmp
pop
xor
add
cmp
jo
out
push
clc
or
mov
leave
arpl
adc
pop
aas
lret
jmp
push
bound
ret
loopne
or
pop
ja
mov
pushf
out
cmp
dec
dec
dec
sub
stc
incb
cmp
mov
adcl
or
push
pop
cltd
lcall
add
shrl
dec
or
inc
ret
enter
ja
mov
xor
rorb
cs
lea
enter
int3
or
cmp
sbb
mov
fs
jnp
sub
mov
push
mov
pop
lcall
into
je
ret
pop
mov
xchg
rcll
adc
jb
push
add
test
fwait
movl
arpl
cmp
in
loope
stos
mov
xchg
push
mov
dec
pusha
adc
movsl
repz
inc
pop
imul
stc
ja
fistps
sbb
sub
inc
testl
out
pop
dec
dec
fisubl
pop
adc
xor
add
mov
dec
jbe
pop
push
and
fs
dec
push
faddl
mov
pop
test
push
sub
cmp
dec
dec
or
pop
cmp
pop
adc
jg
push
add
or
scas
fs
test
loopne
lods
test
or
lret
icebp
pop
dec
dec
xchg
adcb
cbtw
ljmp
dec
fdivrs
mov
pop
into
lods
sub
lcall
adc
jle
pop
push
fldz
data16
pop
cwtl
daa
pop
loop
cltd
movsl
ljmp
pop
mov
and
jecxz
test
loopne
movsb
pop
jmp
dec
pop
jge
popf
shll
cwtl
pop
insb
imul
adc
or
in
adc
pushf
mov
cmp
mov
xchg
jge
int3
addr16
push
jle
cmp
aas
cmpsl
inc
fildl
imul
fnstsw
mov
push
int
jns
ret
push
xor
dec
loopne
push
cld
jb
pop
sub
sbb
inc
push
rcr
push
add
cmp
and
jae
inc
sub
fucomi
xchg
mov
mov
adc
inc
clc
popf
add
push
xchg
fwait
nop
mov
push
movsb
clc
and
cmp
push
insb
notb
cli
sbb
xor
mov
outsl
jnp
xchg
out
jbe
push
jns
dec
addb
or
xchg
lods
pop
cmp
stos
cmp
sub
fbld
pop
les
pop
sahf
pop
xchg
mov
and
jo
pop
mov
pop
or
dec
and
sbb
push
pop
dec
adc
or
xchg
mov
jnp
mov
xchg
or
or
sbb
das
push
inc
aaa
xchg
into
pop
jl
outsb
xor
ja
neg
sub
push
xchg
dec
dec
lods
nop
rcrl
xchg
xor
rclb
aas
ds
or
and
pop
mov
rclw
pop
mov
lahf
mov
pop
xchg
aad
mov
shrb
cmpsb
inc
push
sbb
cmp
push
or
mov
jl
jb
dec
push
mov
mov
sub
or
loope
cwtl
outsb
xor
pop
out
sarl
push
push
pop
hlt
das
add
pop
xchg
shll
sub
fdiv
stos
pop
push
push
daa
pop
sub
mov
icebp
data16
dec
inc
std
aad
jno
pop
shlb
pop
shll
lea
loop
sti
lds
and
adc
or
dec
in
pop
insb
cwtl
add
jle
pop
cwtl
out
push
push
dec
mov
sub
out
mov
jecxz
arpl
ja
mov
xor
daa
fwait
enter
sbb
add
out
ds
lds
jne
sub
or
int3
jle
rol
cli
dec
ret
cmc
add
pop
mov
xchg
and
scas
adc
fiaddl
test
js
stc
cmp
xor
call
mov
cli
push
mov
clc
out
adcb
sub
mov
dec
adc
out
add
es
xor
ret
pop
dec
pop
pop
lds
scas
adc
pop
pop
add
mov
pop
lods
insb
jle
lods
test
pop
xchg
cli
pop
fists
jp
pushf
ljmp
sbb
push
sti
stc
shlb
mov
jne
xchg
decl
negl
or
push
jmp
aad
insb
cmp
leave
add
dec
sbb
pop
gs
adc
shl
imul
mov
sahf
fsubs
ja
pop
int3
dec
pop
push
cs
jg
pop
fwait
jp
dec
cmp
mov
lds
scas
inc
adc
push
pop
sbb
loope
sbb
push
xchg
push
jge
js
add
pop
inc
pusha
inc
jbe
pop
xchg
sbbb
inc
and
jmp
outsb
dec
fcomps
mov
ret
js
sub
cmc
push
push
pop
cmp
jne
sbb
movsl
jecxz
sbb
xor
sbb
push
jnp
pop
push
mov
jne
pop
test
mov
inc
inc
dec
popa
pop
leave
mov
add
js
loopne
and
push
shlb
pop
dec
pop
jmp
xor
sbb
es
adc
pop
push
push
insl
inc
pop
addl
cld
sub
or
push
dec
dec
mov
push
jmp
mov
fnsave
pushf
and
sub
jmp
and
sbb
and
and
pushf
in
clc
add
pop
push
jmp
add
leave
and
sbb
inc
repnz
stc
dec
xor
lret
jb
lds
and
or
inc
js
leave
or
mov
mov
ljmp
pop
inc
add
in
lods
sar
pop
mov
lcall
and
stos
dec
add
ret
out
arpl
pop
lea
into
xor
adc
mov
clc
popa
pop
loop
sti
or
pop
daa
sub
pop
fs
or
sub
pop
loopne
mov
pop
iret
cmp
jbe
and
loop
mov
push
mov
mov
sbb
jle
test
cmp
mov
adc
mov
mov
adc
pop
int3
jg
jecxz
or
add
inc
pop
dec
push
popl
pop
mov
jmp
pop
xor
adc
ja
add
jae
ret
jg
mov
outsb
pop
fdivrl
loope
pusha
pop
mov
cmpsb
pop
gs
push
and
sub
int
aad
flds
xor
or
xorb
out
adc
mov
ror
dec
lds
lgs
out
es
cmpb
adc
jecxz
mov
insb
dec
pop
add
lds
cmp
dec
pop
or
scas
adc
or
and
cmp
sbb
pop
in
jae
push
adc
pusha
dec
mov
jecxz
ds
fmuls
and
add
xchg
sbb
cltd
lret
fisubrl
daa
ljmp
sub
pop
xor
stos
jbe
and
and
inc
cmp
es
dec
and
pop
or
ret
push
adc
xor
push
int
dec
hlt
inc
jno
push
mov
pop
fisubrl
mov
mov
jbe
shld
xchg
dec
adc
stos
push
je
pop
sub
sbb
push
stos
sub
sbb
rorb
add
mov
in
mov
dec
pop
ss
xchg
add
fisttps
arpl
mov
inc
push
leave
cmp
pop
outsb
insb
popa
iret
rcll
sbb
push
nop
sbb
inc
pop
push
movsb
and
cwtl
push
cmp
stc
push
cmpsl
push
jnp
ljmp
aas
and
jg
je
out
add
xchg
jge
insl
adc
sub
cmp
mov
mov
js
stc
pop
dec
rcl
popa
sti
push
jmp
lods
jle
mov
push
push
adc
adc
mov
cwtl
cwtl
or
inc
sbb
fcompl
inc
jne
mov
xor
pop
sbb
dec
push
sub
xchg
xchg
push
je
push
movsb
sub
js
mov
sbb
inc
pop
mov
mov
pop
xchg
test
push
mov
dec
mov
mov
cmp
xor
push
mov
pop
mov
data16
bound
cltd
add
pop
cmp
dec
inc
add
dec
mov
icebp
movsb
adc
pop
lods
push
test
lcall
jl
cmp
cwtl
out
aaa
jmp
lods
adc
pop
push
std
xchg
scas
in
movsl
xchg
pop
lock
stos
mov
inc
adc
outsb
push
mov
shlb
pushf
mov
pop
jge
insl
mov
mov
sub
or
jge
cmpsb
pop
adc
mov
jmp
inc
sbb
adc
push
jnp
adc
loopne
sbb
enter
sbb
iret
lcall
mov
repnz
cmpxchg
push
aad
clc
sbbl
addl
test
push
aad
inc
repz
push
popa
or
pop
adc
lcall
test
outsl
adc
add
xor
inc
pop
dec
adc
or
xor
pop
shl
adc
sub
fiadds
jmp
pop
jge
js
cmpl
push
push
xchg
add
lret
test
or
jmp
sbb
pop
aad
push
pop
into
add
call
fabs
dec
sti
pop
mov
jecxz
push
out
inc
pop
pop
cmc
mov
push
push
mov
pop
push
push
movsb
push
jns
dec
mov
pop
sub
das
fisubrl
lods
loope
pop
inc
sarb
sub
mov
subb
pop
jle
testb
pop
fcoms
aaa
push
ds
cmc
out
inc
aas
or
pop
jp
or
pop
pop
jne
movsb
daa
bound
jmp
inc
cwtl
mov
add
pop
pusha
out
mov
mov
xor
xchg
mov
mov
inc
cmp
cmp
mov
adc
jns
pop
ljmp
pop
push
test
movsl
xchg
int3
aad
pop
dec
adc
lret
jle
adc
fwait
ss
xchg
push
es
pop
adc
inc
pop
cmp
iret
pop
pop
or
push
ficompl
outsb
push
cmpb
sub
or
repnz
sub
and
pop
or
aaa
frstor
out
mov
dec
ss
lea
rcrb
cmc
xchg
in
cmp
and
arpl
sti
sbb
mov
sbbb
push
imul
push
xchg
pop
sahf
inc
jno
push
pop
push
push
push
adc
icebp
xlat
inc
mov
jmp
pop
out
and
mov
in
sbb
loop
ljmp
arpl
add
dec
iret
jmp
jae
xor
cltd
xchg
pop
test
jmp
fistps
push
sub
neg
xchg
inc
pop
push
stc
cmp
jg
adc
push
subl
dec
jl
push
out
test
fnstcw
push
dec
add
stc
stos
pop
jo
daa
arpl
retw
jp
pop
pop
clc
push
sarl
in
repnz
push
dec
pop
loopne
push
xchg
dec
dec
mov
xchg
dec
push
mov
lret
cmpsl
cmp
sbb
rcll
adc
xchg
jmp
push
or
icebp
inc
lods
js
inc
mov
jne
rorl
jg
mov
cwtl
movsb
sbb
pop
leave
adc
adc
fimull
nop
stc
mov
and
jge
cmp
pop
sub
xorb
ss
aas
lret
mov
out
xchg
data16
cmpsl
xchg
push
jmp
in
jmp
mov
test
pop
and
mov
cmpsb
push
inc
imulb
fisubrl
pop
pop
cmp
push
out
pop
push
sub
or
sbb
aas
mov
jae
xchg
pop
sub
aam
pop
adc
dec
movsl
push
sti
fs
es
in
push
cmp
push
pop
or
and
gs
mov
mov
cli
lcall
push
adc
mov
cmp
or
push
push
in
test
pop
lods
push
sub
pop
mov
aas
sbb
push
xor
rcll
push
jecxz
aad
nop
fwait
xchg
mov
pop
mov
sub
adc
and
imul
pop
mov
push
adcb
jg,pt
lret
push
push
xor
fxam
mov
inc
dec
icebp
leave
pop
fdecstp
jl
push
rcll
mov
clc
clc
cli
test
push
adc
xchg
pop
mov
xlat
pop
cmp
das
fcmovb
cmp
movsl
outsb
sbb
fists
leave
pop
int
mov
out
sbb
cmp
test
or
enter
mov
dec
mov
insl
push
sbb
jg
fisubl
dec
push
addb
out
pop
xor
cmpsb
test
repnz
iret
daa
cli
push
push
pop
jp
call
pop
outsb
in
les
icebp
dec
cmp
jecxz
imul
rcr
sub
ficoml
pop
stos
inc
cwtl
ds
pop
xchg
cltd
pusha
repnz
aas
pop
or
adc
push
sbb
lcall
sub
cmpsl
scas
adcb
push
and
adc
js
rcrl
int3
add
jl
pop
loopne
mov
or
pop
sbb
pop
inc
fidivs
arpl
xor
pop
sar
xor
addr16
push
add
pop
adc
aam
and
or
sub
pop
jecxz
adc
imul
inc
cmp
test
pop
xchg
jb
scas
jmp
adc
inc
xor
sarl
call
ficompl
add
outsl
std
int
pop
imul
push
rcrl
pop
fs
test
add
sub
cmp
inc
sbb
pop
push
add
add
outsl
xchg
ljmp
push
mov
and
dec
jb
jbe
bound
pop
int3
and
pop
insb
enter
cltd
ja
adc
pop
push
or
sbb
cmp
sub
sub
in
ljmp
cmpsb
push
push
adc
sti
fisttps
push
xchg
mov
jno
pop
mov
mov
push
pushf
insb
xchg
push
mov
push
lds
pop
fsub
jl
cmp
rcll
orl
xor
jbe
pop
inc
mov
wbinvd
lds
leave
fiaddl
bound
sub
lret
cmp
push
inc
lahf
ret
cltd
out
mov
sub
or
cmp
flds
add
fstl
add
xor
pop
sbb
imul
pop
push
enter
mov
pop
or
pop
mov
adc
test
cli
mov
lds
insb
xor
mov
sub
mov
inc
int3
and
jmp
xor
mov
dec
xor
jno
xchg
lods
sub
jnp
in
das
cmc
addr16
xchg
push
or
loope
sub
push
push
mov
mov
mov
and
dec
frstor
sbb
lret
stc
out
fbld
cmp
fstpl
addr16
cmp
push
sbb
pop
and
dec
cs
push
adc
xlat
aam
mov
sbb
mov
pop
cmp
push
arpl
sbbl
out
js
pop
or
dec
movsl
aaa
pop
mov
test
lds
sbb
mov
adc
add
rcrl
mov
push
lock
jno
cli
and
xor
sbb
pop
add
mov
push
sub
pusha
dec
test
xorl
dec
adc
mov
call
mov
sub
push
fsubrs
ja
ljmp
loop
pop
pop
cmp
outsl
lcall
loope
mov
fsubrl
inc
cmpsb
popa
clc
push
mov
pusha
pop
lret
cs
pop
adc
test
jno
insl
repnz
jno
fisubrs
dec
sbb
ds
push
shlb
or
or
arpl
add
inc
mov
push
xor
dec
rcr
jnp
pop
cltd
in
add
fldcw
xchg
cltd
rcll
push
mov
cmp
cwtl
pop
cmp
jbe
dec
push
mull
push
pop
fabs
pop
fdivrl
pop
adc
sarl
sub
inc
add
in
jne
cwtl
adc
int3
fisubl
pusha
jmp
xchg
and
outsl
xor
fnstcw
pop
dec
jne
in
jge
xor
pop
out
movsl
lods
cmp
stos
ficoml
sub
adc
and
and
or
aam
push
pop
inc
cltd
and
push
push
mov
add
dec
data16
adc
jecxz
push
lods
push
rorb
cmpsb
and
mov
sbb
pop
pop
sub
xchg
xchg
and
push
fwait
adc
push
cmp
xchg
and
test
jecxz
add
xchg
pop
sbb
push
rcrb
jne
pop
mov
push
jmp
mov
lods
add
mov
or
js
cmp
jne
imul
dec
stos
push
arpl
push
pop
mov
jmp
and
or
sub
xor
pop
push
and
shrl
xchg
dec
adc
out
fisubs
lcall
and
push
xchg
cmp
xchg
iret
pop
jne
add
or
shlb
pop
push
test
stc
xchg
pop
cwtl
mov
mov
cmp
jecxz
sub
dec
outsl
adc
mov
sub
sub
pop
lret
pop
or
add
sub
in
cmpsl
in
sti
xor
pop
push
orb
jle
pop
movsl
call
mov
jbe
push
jp
push
fmuls
sbb
in
sar
mov
clc
ss
ljmp
push
lods
into
fsubrs
pop
and
fcmovnb
test
pop
cmc
pop
mov
fwait
pushf
jmp
push
mov
mov
sbb
add
pushf
pop
int
add
fnstenv
sbb
pop
not
enter
and
lcall
xor
cmp
ss
in
pop
mov
lods
outsb
push
insb
stos
in
and
test
push
dec
jmp
lds
and
mov
sub
repz
fldt
cmpsb
adc
cld
jns
orb
mov
pop
cmp
rclb
inc
cmp
pop
xchg
pop
pop
dec
and
faddl
loop
int
and
and
mov
jae
pop
sahf
clc
sub
pop
in
aaa
push
mov
mov
push
inc
xor
xchg
popa
jmp
js
scas
in
cli
sbb
jne
decl
jbe
movb
adc
gs
out
iret
mov
pop
pop
cs
pop
ja
or
lcall
mov
pop
pop
ffreep
mov
jo
push
lcall
inc
outsb
test
sbb
add
pop
leave
inc
ss
jg
pop
dec
clc
sbb
jge
or
dec
mov
push
scas
pop
cwtl
ja
pop
or
cmp
pop
adc
and
lcall
mov
into
incb
xchg
cmp
xor
es
nop
sbb
xor
dec
dec
notb
or
jae
pop
aad
xor
subb
dec
inc
fwait
push
dec
cmpsl
stc
push
rcll
pop
mov
push
inc
int3
out
dec
in
clc
mov
cmp
ds
jle
sbb
adc
mov
add
fabs
inc
cmp
pop
sti
movsb
ds
and
push
sbb
flds
mov
mov
test
jbe
pop
cmp
push
stc
push
xchg
add
xor
jge
inc
pop
iret
sub
or
pop
leave
jmp
cmpsb
jge
in
cmp
mov
aaa
inc
outsb
add
ret
adc
lcall
push
sbb
jae
ljmp
es
dec
inc
sbb
syscall
sbb
jge
adc
pop
pop
in
in
outsb
imul
xchg
jno
lret
push
fyl2xp1
mov
dec
adc
xchg
pop
fbld
cmpsl
pop
ds
pop
sub
sti
mov
pop
mov
cs
cld
mov
movsl
pop
push
dec
xchg
pop
xor
or
fists
or
adc
xor
sbb
push
mov
push
pop
push
push
in
push
pop
xchg
js
clc
out
call
mov
pop
cwtl
add
ja
pop
pop
xchg
jbe
movsl
jb
pop
push
jmp
daa
imul
add
loop
fsubr
and
divb
mov
cld
aad
test
and
xchg
add
pop
mov
cmp
sbb
adc
cmp
jo
xchg
fxch
pop
cmp
jno
fwait
lds
and
imul
dec
xchg
pop
or
flds
mov
adc
dec
insl
xlat
into
popa
in
jno
mov
jae
adc
push
sub
stc
xchg
fcoml
ja
fcoms
xor
add
lret
xchg
imul
fidivl
sbb
js
pop
add
movsl
pop
fcoms
push
pop
int
clc
inc
std
inc
xorl
inc
dec
push
out
in
pop
push
fidivrl
and
rep
lods
xchg
pop
daa
in
lock
sbb
out
push
sub
pop
add
mov
xor
adc
cmp
adc
out
outsb
xor
push
shll
cmp
lcall
clc
sti
cmp
mov
pop
popa
mov
testb
adc
lock
and
jne
push
push
add
push
in
cli
or
sarb
push
loope
pop
inc
sbb
dec
xor
push
jge
lods
repnz
dec
push
inc
jmp
pop
cmp
cwtl
fisttpll
inc
addr16
sub
pop
mov
ror
cmpsb
fiadds
sub
cltd
fidivl
fadds
push
mov
fdivrs
pop
pop
daa
jbe
addb
sub
and
add
and
pop
mov
sub
xor
pop
pop
xchg
scas
lea
dec
cmpsl
and
cmp
push
out
fcoms
icebp
dec
add
inc
sbb
dec
pop
adc
test
mov
jp
jb
and
pop
or
mov
xor
xor
pop
movsl
push
jbe
repz
mov
and
mov
fisttps
or
pop
jp
pop
dec
pop
and
mov
sahf
pop
or
mov
pop
movsb
jecxz
push
adc
jge
pop
movsl
les
jo
pop
in
imul
ja
mov
and
mov
fisttpl
adc
int
in
pop
leave
fldcw
iret
lcall
lahf
movsl
mov
jle
pop
loop
mov
push
loopne
scas
jbe
icebp
test
lret
enter
cmp
je
xchg
push
and
jecxz
inc
fs
sbb
std
sbb
out
pop
das
pop
lods
or
push
push
jmp
lock
mov
nop
mov
pop
cs
sbb
push
jmp
pop
ds
adc
fmulp
cmc
xor
mov
sbb
dec
push
and
cltd
add
pop
or
enter
or
scas
fldl
add
jge
aas
push
jmp
add
jle
fwait
pop
fucom
out
js
push
push
cmp
xor
sub
jle
cld
rcrl
into
add
cltd
sar
pop
xchg
mov
dec
add
enter
pop
loop
push
mov
pop
test
inc
mov
ret
ljmp
inc
lds
pop
ljmp
push
xorb
subl
es
jp
mov
je
pop
add
shlb
ja
push
pop
dec
mov
sahf
pop
fldl
add
pop
jmp
add
push
into
mov
jns
imul
pop
jb
xlat
adc
sbb
pop
lahf
jno
pop
out
cmp
enter
sbb
cs
xor
mov
pop
dec
xor
push
fcomip
jnp
push
sar
cmpsb
repz
pop
mov
jmp
mov
push
decl
pop
mov
xor
ret
mov
les
lods
adc
mov
xor
jmp
stos
pop
popf
pop
iret
je
push
pop
or
pop
iret
in
pop
mov
nop
or
jb
pop
inc
out
xchg
icebp
cmp
mov
lret
inc
repz
sub
notl
inc
add
push
mov
fidivl
dec
dec
adc
mov
push
pop
imulb
pop
or
jle
inc
scas
orb
mov
arpl
adc
inc
cs
les
sub
pop
loopne
jle
push
push
adc
js
pop
mov
dec
pop
or
or
jbe
cmp
pop
clc
add
ret
jnp
out
mov
pop
in
adc
mov
push
jne
xor
mov
xor
add
aaa
push
cmp
in
jmp
ds
add
cmp
jbe
fwait
sub
icebp
pop
mov
cmpl
jp
xor
inc
pop
outsl
lcall
pop
loope
imul
xchg
add
ret
sti
inc
mov
adc
push
jno
daa
sub
fdivrs
push
adc
popf
xchg
test
scas
cmpsl
rcll
fsubr
cmp
and
or
outsb
cltd
into
pop
fbstp
test
fnstcw
cmp
or
and
repnz
xchg
adc
dec
inc
int
ljmp
adc
aaa
addb
sub
inc
jb
sbb
push
jne
das
jmp
pop
push
push
enter
nop
inc
cwtl
xchg
mov
ljmp
nop
mov
xlat
dec
push
scas
jecxz
inc
sbbl
sub
jmp
adcb
fcomps
std
inc
add
pop
sub
or
xor
pop
hlt
push
lods
movsl
xchg
js
mov
cltd
pop
push
push
xchg
pop
jg
xchg
add
mov
leave
cmp
sbb
or
cmp
fbstp
lret
push
cmp
inc
cmp
dec
arpl
dec
jmp
ficompl
push
cld
daa
inc
push
cmp
fbld
cmp
or
pusha
xchg
insb
lcall
sbb
or
pop
fnstsw
cmpsb
xchg
mov
xor
pop
into
daa
inc
push
pop
mov
inc
sub
nop
cmp
xchg
js
pop
ret
xor
jnp
or
push
cmp
lea
cmp
jbe
inc
pop
mov
je
pushf
rcrl
inc
pusha
push
loope
test
aam
mov
lcall
mov
insb
adc
das
inc
pop
jne
pop
in
push
ja
push
xchg
out
cmpsb
jns
pop
sub
in
pop
dec
sti
rorb
and
push
add
stc
sbb
popa
and
cli
mov
xchg
out
pop
int3
dec
and
or
cwtl
jecxz
pop
rcll
xchg
sub
pop
sbb
mov
imul
pop
lods
ss
jmp
adc
dec
sti
stc
call
or
jmp
xchg
sbb
ss
insl
add
jno
int3
add
cmp
cmp
cmpxchg
clc
out
mov
lea
arpl
push
push
pop
push
push
rcrb
or
inc
enter
popa
sbb
outsb
pop
adc
and
sub
stc
push
dec
dec
cmp
or
pushf
cmpsl
cmp
call
xchg
xchg
cmp
jbe
add
insl
push
int3
pop
sbb
adc
xchg
and
fcmove
aad
lods
adc
iret
daa
or
jecxz
dec
lea
mov
cld
pop
popaw
jne
clc
ficomps
mov
xchg
xor
pop
xchg
ss
int3
inc
imul
pop
cli
bound
jge
xchg
inc
sbb
push
adc
fadds
ret
sub
xchg
call
add
out
jge
pop
pop
adc
mov
pop
mov
or
push
sbb
fnstsw
enter
push
mov
mov
nop
inc
ljmp
mov
repz
stos
push
dec
xlat
data16
adc
pop
mov
inc
add
sbb
cmp
daa
pop
pop
adcb
and
sub
add
or
outsb
gs
iret
jl
push
push
add
cwtl
push
or
and
or
pop
inc
stos
test
pop
xchg
mov
push
ret
sub
inc
pop
dec
dec
insl
ret
leave
sub
daa
pop
pusha
jp
mov
and
rcrl
push
cwtl
adc
pop
or
rclb
add
or
stc
je
push
mov
loop
cmp
addb
and
push
xchg
insl
ret
idivl
and
pop
repnz
shlb
xor
pop
sbb
lret
or
and
push
fdivl
into
mov
ljmp
mov
cwtl
dec
jmp
gs
fsubrl
in
imul
push
sbb
fildll
fiadds
js
pop
popf
sti
pop
sub
and
test
xchg
xchg
jns
push
pop
jecxz
push
adc
pop
fistl
pop
push
mov
jno
int
repz
fdivrs
jecxz
jbe
leave
pop
adc
adc
pop
insb
std
mov
cmp
pop
push
dec
mov
pop
pop
movb
pop
pop
push
pop
dec
aaa
dec
xor
inc
inc
iret
fmul
cmp
dec
push
sbb
sub
cmp
push
mov
add
jecxz
and
ret
push
imul
inc
sbb
cmpb
ss
push
aas
out
push
adc
scas
fnstsw
call
pop
dec
push
push
sub
sbb
mov
cwtl
insl
lds
adc
pop
sar
sub
pop
pop
stos
jo
push
mov
and
push
fisubrl
mov
jns
push
mov
jle
or
pop
jns
jg
inc
cmp
pop
cmp
inc
xchg
dec
pushf
jmp
xchg
out
test
cmpsb
inc
add
lret
xor
shll
pop
ret
cwtl
sub
inc
popa
icebp
pop
mov
and
inc
inc
jge
push
adc
outsb
mov
jecxz
push
and
jno
movsb
int3
cmc
pop
xchg
inc
jle
cwtl
aam
and
sahf
or
dec
lret
pop
push
ficoms
mov
mov
stos
dec
jecxz
pop
jo
movsl
dec
xlat
out
push
or
add
jl
push
jp
sbbb
and
int
cmp
and
mov
sbb
or
pop
fildl
enter
jge
cltd
xchg
xchg
sbb
pop
ss
test
adc
pop
fs
or
test
pop
ficomps
adc
push
cwtl
insl
pop
sub
push
mov
mov
and
adc
sbb
fs
sub
arpl
xchg
inc
in
mov
push
insb
jns
sahf
pop
mov
stc
push
jnp
adc
add
push
jo
sbb
mov
arpl
mov
adc
mov
and
in
xor
and
pop
xor
pop
adc
and
dec
sti
or
jnp
xor
inc
push
mov
fstpl
inc
jnp
xor
cmp
clc
adc
mov
add
and
imul
mov
roll
jge
adcl
pop
loope
lcall
pop
push
arpl
pop
popw
ja
das
push
sub
inc
mov
sub
xchg
push
add
or
pop
or
hlt
and
ja
mov
pusha
or
push
jmp
dec
in
pop
push
xchg
and
lods
cwtl
sbb
cmpsb
sub
jg
test
in
jns
sbb
pop
add
nop
adc
and
add
loop
sub
cmpsl
mov
and
mov
icebp
pop
ds
test
add
add
or
rol
sti
pop
add
mov
cmp
stos
out
mov
rcr
ret
xor
add
mov
cmp
push
pop
dec
dec
mov
cltd
scas
jmp
mov
push
mov
dec
or
sti
mov
sub
add
ficompl
xor
sar
fsubs
ficoml
pop
cli
add
push
pop
xchg
push
mov
adc
jae
add
jecxz
xchg
test
rcll
lret
out
scas
and
cltd
sbb
daa
imul
out
sbb
lret
orb
orb
push
pop
xlat
jl
sbbl
movsl
mov
cltd
dec
inc
lds
scas
and
pusha
cld
arpl
pop
js
enter
and
dec
sbb
jmp
adc
push
adc
add
pop
les
jb
inc
push
push
ljmp
pop
push
mov
aad
sub
mov
js
cmp
add
push
inc
sub
inc
pop
cmp
inc
xchg
sbb
ret
pop
cmpsl
xchg
mov
pop
and
push
mov
pop
lahf
adc
sub
daa
dec
pop
jle
aad
es
adc
dec
ret
pop
add
cmp
movsl
dec
pop
fcmove
out
pop
jge
mov
sbb
repnz
pop
sbb
enter
movb
cmp
pop
adc
sub
xor
mov
sbbl
sbb
pop
mov
out
hlt
jnp
cmovle
inc
jne
popf
fmuls
adc
or
out
aas
mov
and
fstl
int
shl
inc
add
test
adc
inc
rol
and
jmp
dec
or
sub
ficomps
mov
xchg
dec
js
xchg
inc
lods
pop
mov
xor
cmp
test
out
arpl
nop
xchg
add
mov
out
pop
inc
shr
or
iret
cmp
mov
cmp
scas
sbb
imulb
mov
lret
adc
in
arpl
pop
cmc
pop
jecxz
xor
fisubs
jmp
cld
push
dec
leave
push
in
add
push
adc
imulb
dec
and
js
sarl
or
pop
mov
ljmp
inc
into
jns
pop
cmc
xor
sbb
adc
pop
and
add
sbb
sbb
mov
nop
subb
cltd
ja
imul
gs
cmp
sbb
test
mov
cmp
stos
dec
leave
sbb
mov
sub
mov
shr
push
pop
push
push
or
sub
stc
pop
in
xchg
mov
sbb
mov
jmp
push
pop
sahf
pop
stos
jae
add
mov
sub
mov
jnp
or
pop
push
movsl
or
pop
imul
and
jb
jmp
xor
out
cmp
jnp
sbb
mov
jmp
cmp
sti
and
dec
pop
jge
push
out
jns
pop
mov
movsl
dec
adc
mov
pop
loopne
xor
rcrb
dec
cltd
push
sbb
add
or
aaa
scas
test
inc
pop
adc
andb
mov
sbb
fidivs
push
pop
shll
xor
and
lahf
repnz
or
repz
push
push
ljmp
das
leave
push
test
es
test
pop
jmp
or
mov
aam
dec
addr16
push
pop
xchg
ficoms
loopne
cmp
adc
inc
scas
pop
cs
mov
push
adc
pop
pop
push
mov
mov
or
pop
daa
mov
jp
sbb
pop
inc
pop
push
push
pushf
and
sub
xchg
and
aam
imul
cmp
enter
push
test
push
fildll
cmc
mulb
fcmovbe
ljmp
pop
imul
cmp
enter
jbe
je
int3
fidivs
cmp
pop
mov
sbb
mull
push
jmp
pop
and
dec
push
loopne
sti
mov
or
fildll
loope
mov
jo
std
ret
sub
jl
mov
stc
mov
ds
push
pop
dec
cltd
mov
pop
aaa
inc
pop
adc
addr16
inc
pop
push
jmp
pop
pop
xchg
xchg
mov
insl
cltd
dec
inc
mov
cwtl
fstps
push
jne
or
popf
or
jmp
adc
pop
addl
pop
push
xor
mov
fstp
or
jmp
addl
or
and
imul
pop
cld
je
mov
or
add
xchg
insl
mov
mov
jno
or
xor
push
adc
in
dec
rolb
pop
jmp
in
rcrb
jno
xchg
fstl
test
mov
sbb
cwtl
mov
sbb
bound
mov
lcall
int3
dec
ljmp
insb
xor
pop
fsubl
hlt
sub
ficomps
pop
out
dec
sub
jl
pop
dec
jns
ja
ja
adc
push
pop
xchg
gs
jae
pop
adc
dec
jg
insl
out
mov
xchg
shll
mov
mov
cmc
das
inc
adc
scas
push
sahf
xor
add
loope
pop
jg
push
inc
iret
out
icebp
pop
adc
repz
sub
loopne
in
mov
pop
sub
and
push
outsl
icebp
test
enter
inc
inc
add
sahf
imul
cmp
pop
hlt
into
cmp
adc
jbe
dec
xchg
inc
push
and
or
pushf
pop
shl
jmp
stos
test
rep
xchg
pop
pop
mov
jb
sub
clc
xchg
mov
dec
inc
test
inc
push
sbb
or
aam
dec
popa
pop
ffreep
and
pop
sbb
pop
decb
pop
push
mov
cmpsb
push
mov
push
and
int3
pop
push
sub
stos
mov
cmpsl
test
xor
or
adc
jp
mov
pop
pop
sub
xchg
fcmovbe
pop
xchg
jle
mov
add
cmp
adc
in
mov
push
and
subb
pop
cmp
lea
add
leave
jle
pop
push
cmp
xchg
pop
in
inc
push
jmp
addr16
adc
repnz
ds
pop
jecxz
cwtl
std
or
mov
mov
int
push
push
aad
sub
mov
or
push
adc
roll
es
mov
push
jecxz
lret
inc
fistps
sti
mov
stos
roll
repz
jbe
imul
lea
sar
xchg
xorl
and
stos
jecxz
es
dec
push
pop
out
or
cmp
into
sahf
rcrl
pop
insl
enter
inc
pop
in
xchg
add
pop
adc
mov
sbb
inc
aam
inc
pop
inc
mov
jg
jne
ret
inc
ljmp
in
xor
cmpsb
shlb
pusha
pop
or
into
sbb
loopne
push
sarl
add
mov
pop
stos
pop
sub
push
pop
shll
adc
pop
jmp
sti
sub
sbb
xchg
jp
push
rcrb
mov
mov
adc
mov
rcll
mov
push
leave
inc
rolb
gs
pushf
cmp
out
push
or
pop
xor
inc
mov
pop
dec
std
clc
mov
pop
add
jle
sub
das
bound
sub
out
mov
xchg
jne
and
pop
nop
xor
pop
sbb
and
gs
popf
inc
inc
fdivrs
add
pop
mov
fwait
cmp
mov
adc
inc
bound
lcall
push
sbb
push
sbb
push
push
pop
fwait
xchg
daa
or
adc
cltd
mov
mov
and
fs
sub
pop
push
inc
push
push
sub
mov
std
pop
outsl
push
add
push
lea
jne
sub
mov
add
jmp
pop
outsl
mov
test
inc
sub
add
inc
outsb
jne
sub
mov
leave
addr16
insb
add
dec
pop
int
xchg
lods
pop
add
or
jb
out
sub
cli
cmp
xor
inc
xor
sub
stos
int3
pop
fistpl
xchg
fists
xchg
pop
mov
inc
pop
pop
sub
sbb
add
sbbl
pop
mov
xor
mov
fcmovu
into
mov
cmp
or
mov
push
in
fcmovne
sbb
or
mov
outsb
out
bound
test
sub
daa
cmp
in
pop
movsl
aas
push
imul
dec
arpl
and
mov
rcrl
jmp
mov
jg
push
dec
dec
arpl
xchg
std
in
lds
cmp
push
mov
pop
or
sub
aas
push
xchg
xor
andl
dec
inc
movsl
stos
dec
inc
push
pop
imul
cmpsb
mov
dec
pop
adc
aas
int
rorl
xchg
xor
sahf
cmovnp
ja
flds
fcompl
jp
pop
sbb
cmc
mov
lea
xor
ds
lret
inc
orb
popa
stc
mov
fists
or
jbe
aam
mov
mov
pop
push
bound
insl
sub
cmp
test
popl
xchg
cs
jmp
scas
sub
fstpl
jle
xchg
test
cld
sub
sti
out
and
pop
es
xchg
pop
push
pop
loopne
ret
push
push
dec
cs
inc
imul
fcoms
in
inc
aad
push
popl
mov
cmp
mov
gs
lcall
mov
cmp
xchg
mov
pop
leave
test
pop
pop
inc
callw
push
adc
inc
sub
rcll
lahf
jmp
or
pop
cmp
aad
nop
inc
dec
test
mov
out
insb
mov
cwtl
test
mov
gs
imul
push
call
xchg
clc
pop
jmp
adc
test
outsb
andb
adc
sub
ja
lret
add
xchg
popf
dec
lds
push
outsb
inc
pop
jmp
out
popa
repnz
cltd
out
rolb
lods
jb
mov
pop
and
push
push
jp
pop
fisttps
cs
cmp
aad
in
xor
fldl
call
js
cmp
ret
mov
sbb
js
add
sub
jmp
cmp
jne
sbb
fistps
fnstsw
enter
lcall
cmp
pop
cmpsb
sahf
dec
mov
cmp
sbbb
pop
inc
loop
push
or
cmc
and
out
jne
daa
in
aam
pop
popa
sub
pushf
iretw
cmp
mov
ret
sarb
adcb
pop
push
pop
js,pn
push
mov
jne
dec
repz
push
out
pop
imul
jecxz
mov
mov
pop
cmp
sti
lock
scas
and
jbe
dec
mov
pop
sbb
cmpb
dec
xor
xchg
punpcklwd
pop
dec
in
mov
push
xchg
lods
xchg
rcrb
mov
xlat
mov
cmp
jbe
andl
mov
push
inc
mov
fmull
sub
jge
pop
mov
imul
add
jbe
insl
pop
or
sub
orb
cmovne
cmp
dec
sub
inc
jno
imul
outsl
pop
adcb
and
and
mov
repnz
das
fldenv
inc
push
xchg
xchg
pop
lock
xchg
dec
addb
leave
jge
push
add
jbe
pusha
sbb
and
popa
xor
popf
fwait
clc
negb
and
test
add
cli
mov
or
sub
es
pop
lret
adc
dec
rcrl
push
jecxz
lods
popa
or
pop
pop
fs
mov
xchg
gs
test
lret
cwtl
pop
or
push
xorl
dec
sub
cmp
sbb
and
lods
mov
adc
ret
mov
add
and
mov
push
and
bound
in
je
pop
arpl
inc
mov
push
pop
jle
loop
inc
sbb
and
adcl
dec
xor
arpl
inc
loope
push
lahf
ljmp
dec
push
sahf
outsl
mov
dec
rolb
push
dec
pop
ds
xor
loope
test
lcall
ss
dec
inc
pusha
push
push
mov
add
or
std
push
jle
adc
dec
dec
jmp
pop
mov
leave
adc
jae
jle
or
push
pop
pop
push
mov
adc
push
repnz
test
cmp
icebp
add
jecxz
xor
pop
mov
mov
jecxz
adc
inc
push
xchg
mov
pop
mov
jo,pt
xchg
mov
jb
sub
push
ljmp
clc
cmc
jns
pop
add
cmp
adc
fstps
xchg
cltd
or
inc
xchg
leave
sub
mov
sbb
mov
push
inc
inc
lea
dec
push
fcmovne
hlt
cli
loop
and
push
sahf
pop
push
adc
icebp
loope
jmp
cmp
mov
adc
mov
jg
adc
dec
jne
dec
add
sbb
lea
popa
inc
mov
outsb
sub
pop
inc
sub
mulw
out
inc
mov
cld
dec
sub
inc
loope
pop
push
pop
sub
loope
mov
cmp
mov
aaa
xchg
push
sub
fs
fidivrl
nop
mov
mov
aad
int
fisttps
sub
pop
adc
enter
mov
mov
pop
sub
push
xor
adcl
pop
xlat
mov
push
lods
in
inc
pop
lcall
or
repz
mov
pusha
jae
negl
mov
sbb
gs
sub
lahf
test
xor
and
xor
daa
jg
and
pop
mov
sub
xor
cs
sub
adc
jge
rcr
jmp
and
sbbb
push
xchg
mov
dec
mov
js
fists
dec
pop
mov
pop
or
dec
test
add
ja
push
or
cmp
pop
xor
std
gs
mov
dec
sub
lcall
xchg
lret
sbb
cmp
ret
inc
jge
push
inc
pusha
bound
sbb
dec
push
repnz
inc
pop
jmp
sarb
pop
xor
jns
aas
jmp
dec
pop
push
test
pop
pop
cwtl
int
push
inc
pop
cs
inc
fs
pop
pop
push
jns
mov
xchg
push
lret
repz
fdecstp
rclb
xlat
mov
sbb
jecxz
lret
inc
adc
and
pop
dec
insb
call
xor
shll
cmp
jns
add
pop
add
sbb
pop
shrb
aam
pop
insl
pusha
pop
ficoml
cmp
cs
movsl
dec
fcompl
fnsave
int3
add
pop
jnp
ror
rcrb
dec
pop
mov
das
gs
pop
dec
aam
xor
inc
inc
pop
faddp
cmpsb
add
movsl
pop
pop
pop
test
mulps
out
push
sub
mov
out
flds
push
pop
push
and
imul
xor
push
leave
sbb
inc
pop
mov
xchg
xor
pop
arpl
dec
adc
pop
mov
push
test
clc
cld
push
sub
pop
cmp
add
lods
out
imul
and
sti
mov
sbb
add
loopne
gs
aaa
push
adc
daa
pop
sbb
fidivs
ljmp
sub
inc
shrl
addb
js
leave
inc
movsl
mov
pop
push
push
daa
ss
cmp
popf
sub
mov
ret
xchg
pop
imul
xor
aaa
sub
fisubrs
mov
cmp
xchg
insl
lods
xchg
clc
push
adc
in
das
cmp
mov
fcompl
or
cmp
pop
dec
pop
bound
xchg
push
push
sbb
inc
adc
andl
pop
fld
fucomi
idivl
js
sbb
dec
pop
jecxz
and
popa
jmp
adc
jmp
inc
shll
sbb
daa
lock
clc
and
pop
test
pop
scas
ds
dec
xchg
jno
cwtl
repz
cmp
mov
daa
sbb
sub
and
mov
or
add
pop
mov
push
cli
and
lock
add
and
mov
je
push
pop
mov
xor
cmpsb
xchg
test
mov
inc
out
dec
pop
out
xchg
rcrl
cmp
addr16
data16
pop
cmp
mov
jae
mov
lods
dec
add
and
ja
in
sarl
sbb
lahf
adc
mov
in
push
adc
jo
dec
pop
or
adc
xchg
adc
push
cltd
sti
jecxz
pop
inc
pop
les
or
mov
or
inc
pop
fdivl
fwait
mov
xchg
cmpsb
mov
call
mov
dec
jae
jbe
sahf
push
mov
sbb
sbb
pop
inc
outsb
lahf
shll
imul
push
push
sub
out
shlb
loopne
push
add
and
push
and
sahf
jge
pop
popa
ds
shll
sbb
xchg
fdivrl
orb
sub
pop
lcall
jecxz
pop
roll
xchg
cmpl
test
push
in
and
ret
jmp
rorl
pop
dec
fidivrs
sbb
divb
pop
dec
mov
fdivs
pop
jnp
jbe
pop
enter
outsl
push
negl
jmp
or
push
jb
xchg
popa
mov
pusha
add
das
dec
and
cwtl
into
sub
pop
shlb
sbb
pop
xor
adc
push
rcrl
and
pop
mov
test
xchg
jnp
adc
insl
enter
lea
cmp
mov
into
push
pop
cld
mov
hlt
mov
jne
pop
pop
push
rorb
jp
pop
sub
xchg
cld
push
and
pop
out
shr
out
jecxz
pop
or
aas
cmp
jno
pop
adc
mov
mov
and
pop
mov
movsb
add
pop
or
ss
rorb
lea
mov
repnz
out
jbe
sahf
pop
inc
std
ljmp
mov
lcall
or
push
repnz
pop
lret
mov
lods
and
pop
jl
lcall
outsb
pop
mov
lods
fisttpl
insb
pmaddwd
loop
clc
or
lahf
mov
add
mov
xorb
push
fists
inc
dec
ss
outsb
fstpl
clc
or
dec
into
lret
loop
and
and
push
pop
das
sub
adc
adc
add
add
dec
sub
xchg
pop
or
cmp
pop
lods
adc
xchg
in
ljmp
push
dec
sbb
jne
daa
jmp
dec
sub
sub
adc
lods
fists
pop
push
xor
xchg
cld
dec
or
fwait
jbe
or
loopne
dec
push
pop
mov
jecxz
or
push
push
sbb
or
in
clc
pop
sbb
jno
pop
loope
rcrl
inc
out
push
and
faddl
mov
push
imulb
imull
sbb
add
xchg
ret
pop
sbb
pop
dec
pop
aaa
jo
into
pop
pop
jmp
insl
jno
sub
test
stos
dec
mov
pop
fsub
xchg
mov
pop
imull
sub
pusha
dec
adc
push
sarb
xchg
or
lods
out
mov
pop
jns
enter
cmp
out
ret
js
out
dec
or
adc
pop
mov
xor
jl
cltd
ffreep
push
add
xor
pushf
inc
xchg
pop
fldt
cmp
dec
jle
and
imul
and
mov
orb
jno
in
or
push
pop
pop
mov
pop
dec
push
adc
lods
pop
sub
pop
mov
cmp
pop
jle
out
je
dec
shrl
push
push
jmp
int3
stc
dec
xor
bound
sahf
xor
jo
dec
pop
leave
adcb
loopne
pop
pop
push
ror
fs
and
or
dec
sbb
leave
pop
mov
cmp
jmp
add
cmp
pop
xchg
pop
in
add
dec
pop
pop
mov
pop
push
lcall
pop
dec
fwait
jl
loope
push
aad
mov
pop
lcall
or
mov
sub
imul
mov
je
adc
outsl
cwtl
dec
pop
out
dec
dec
mov
xchg
pop
sub
pop
jo
xor
shlb
pop
cmp
adc
pop
pop
jb
sub
mov
mov
and
mov
in
jnp
cmp
out
xchg
cwtl
das
fiaddl
push
xchg
pop
andl
or
cmpsb
cs
fcompl
jnp
daa
lods
inc
jne
dec
movsl
jbe
and
mov
push
adc
push
into
std
add
and
sbb
cmp
cwtl
xor
mov
loopne
inc
pop
jge
aam
icebp
es
pop
fcompl
jle
dec
call
lock
push
dec
or
inc
jmp
cmp
adc
hlt
fstpl
xor
pop
inc
inc
loopne
out
pop
pop
pop
leave
mov
sub
mov
in
insl
pop
daa
clc
or
xlat
lcall
xchg
xchg
fnstenv
mov
cwtl
jge
pop
mov
add
xchg
jnp
sbb
pop
mov
adc
sbb
sub
lods
sub
xchg
cwtl
xchg
stc
pusha
cmpsl
pop
fs
sub
add
cs
mov
cmpsb
pop
pop
jno
and
scas
gs
stos
sbb
das
push
subl
stos
xor
ret
inc
fcomps
inc
or
add
imul
pop
adc
lret
push
inc
and
pop
insl
dec
inc
jp
and
fimull
lods
repnz
dec
jge
movb
add
pop
jp
sbb
lcall
push
sub
sbb
pop
adc
and
dec
fwait
pop
xchg
push
sub
imul
fisttpl
rcrb
jmp
pop
mov
jns
jp
pop
jne
jae
cmp
push
xlat
out
mov
pop
and
test
jg
mov
dec
and
or
gs
popf
rolb
clc
sbbl
xchg
daa
cmp
jecxz
push
xchg
les
sbb
popf
pop
test
aam
jl
out
pop
pop
xlat
ret
xchg
inc
pop
adc
sub
nop
pop
sub
mov
sbbl
jle
repnz
mov
pop
sar
mov
dec
test
cmp
cmp
fucomi
and
mov
mov
enter
dec
shll
in
dec
pop
sub
arpl
jge
push
out
repnz
pop
leave
cmp
mov
sbb
fimull
rcrl
jo
mov
pop
mov
out
gs
push
pop
cmp
loope
mov
mov
dec
cwtl
add
dec
cmp
sbb
mov
mov
jne
shrb
jecxz
pop
adc
add
roll
fimull
pop
jg
insb
and
inc
sub
inc
int3
sarb
jbe
andb
ljmp
andl
cmp
fstps
addb
sub
cmp
adc
sahf
mov
mov
cmp
mov
add
repnz
int3
pop
mov
xor
jo
pop
and
dec
add
mov
pop
push
jp
data16
mov
xor
pop
mov
cs
mov
adc
pop
subb
add
and
inc
es
pop
xor
sbb
jbe
lahf
push
mov
cs
pop
popa
and
mov
add
sbb
xchg
xor
pop
shl
adc
inc
push
out
cltd
jne
push
sarl
xchg
pop
lea
xor
sub
jne
outsb
fsubrs
lret
pop
lret
cmp
notb
add
adc
push
test
in
push
dec
push
push
pop
jno
push
pop
push
sub
mulb
rolb
mov
insl
jmp
push
and
icebp
out
mov
in
mov
data16
outsl
inc
sbb
pop
stc
adc
cmp
fimuls
xor
leave
sbbl
scas
dec
int3
cmc
mov
sbb
ret
pop
ret
insl
scas
mov
pop
mov
xlat
lcall
loope
mov
cmpsb
add
jbe
cmp
pop
pusha
cwtl
rol
mov
cmc
in
xchg
stos
mov
inc
cmpsb
or
dec
pop
xor
push
stc
pushf
or
adc
call
sub
mov
inc
sub
push
sbb
jmp
mov
pop
pop
push
mov
xor
lcall
lds
cmc
ljmp
push
push
imul
flds
dec
jbe
in
sub
inc
pushf
pop
add
push
jb
dec
add
fwait
xor
mov
test
jge
sub
mov
mov
and
lahf
xchg
sub
push
dec
insl
js
jmp
mov
test
test
add
jae
cld
cs
cmc
mov
out
and
fldcw
cmp
bound
pop
jne
outsb
pop
xor
rcrb
leave
pop
arpl
or
xchg
test
or
ja
mov
dec
jnp
sbbb
add
pop
stc
fistpl
lret
mov
cmc
pusha
or
xor
pop
push
mov
sbbb
dec
in
jecxz
pop
cwtl
roll
dec
sbb
fstps
add
sub
adc
adc
dec
in
iret
and
add
sbb
lods
popa
scas
and
in
pop
adc
push
daa
xor
cmp
das
adc
dec
and
push
and
push
arpl
pop
push
in
cmp
pop
jbe
mov
or
and
test
in
dec
inc
push
jb
das
fwait
dec
xchg
xor
lret
arpl
js
movsl
xorb
hlt
cmpsb
jns
xchg
xchg
lret
in
or
lcall
out
pop
pop
jns
mov
cmp
and
push
ficomps
xchg
adc
sbb
mov
add
push
cmp
jnp
push
mov
push
jp
test
sbb
jmp
adcb
xor
stc
nop
test
sbb
sbb
jg
and
fbstp
jo
or
xchg
push
roll
arpl
popa
pop
or
mov
cmpb
adc
xchg
sbb
sub
xchg
inc
or
js
into
fisubrl
push
imul
lahf
mov
sbbb
test
cwtl
pop
ja
or
jge
gs
push
into
and
xor
daa
pop
testl
ss
sub
push
cmp
imul
dec
sub
adc
repnz
pop
xchg
adc
cmc
cs
mov
fcoms
out
imul
cmp
sbb
daa
js
mov
fsubr
push
dec
dec
lcall
inc
jge
push
fistps
ljmp
pop
sti
inc
or
mov
xor
mov
add
lea
or
test
cld
fcoms
js
pop
and
ss
popf
add
push
ret
fldcw
mov
mov
js
stos
mov
mov
pop
movsb
aas
sbbb
sbb
ds
mov
or
inc
pop
xchg
or
bound
stc
mov
jne
jne
pop
clc
aas
ljmp
mov
shrl
fcomps
jns
mov
mov
jmp
jg
data16
jmp
mov
sub
adc
pop
je
pop
pop
cmp
stc
or
lock
push
and
pop
jbe
shrl
or
movsl
push
jne
push
pop
pop
cmovo
push
push
rclb
pop
or
adc
pop
add
daa
gs
dec
and
and
ficomps
rorb
adc
jno
pop
dec
adc
and
popf
push
roll
jns
pop
xchg
dec
add
imul
pop
daa
xor
loopne
pop
sbb
xchg
dec
pop
dec
scas
test
dec
mov
ljmp
push
or
orl
fidivrs
jge
aam
jno
sbb
cmp
cwtl
fildll
xchg
sbb
movsb
push
mov
in
jl
sbb
fisubl
adc
pop
mov
aad
sbb
jnp
jmp
push
dec
xor
pop
fwait
adc
imul
mov
mov
xor
inc
lods
pop
mov
inc
add
sub
int3
and
sahf
and
push
sbb
dec
cmp
imul
aam
fwait
mov
sub
sbb
out
cmp
cmp
xor
mov
xor
test
pop
jb
pop
daa
cmp
lods
cli
jae
adc
push
popf
pop
cmpsl
lea
xchg
add
test
pop
pop
setnp
arpl
mov
mov
leave
inc
pop
gs
mov
sub
sub
pop
or
jmp
mov
data16
cwtl
mov
mov
xchg
xor
push
push
push
addr16
loopne
enter
jbe
out
das
pushf
notl
data16
data16
sub
cld
sbb
sub
jnp
pop
leave
movnti
inc
cli
push
mov
sbbl
mov
inc
cs
adc
add
or
rclb
lods
add
lea
or
cltd
lahf
pop
xlat
mov
jbe
push
lcall
ret
push
out
sbb
inc
mov
pop
or
push
push
jmp
cwtl
aam
inc
fimull
pop
test
push
into
dec
jae
sbb
mov
pop
mov
push
shll
cmp
jmp
sbb
adc
inc
lcall
lahf
push
sbb
adc
pusha
pop
shr
repnz
xor
inc
push
xchg
cmp
daa
adc
mov
push
ret
movsb
push
imul
xchg
or
cmp
cmp
dec
iret
mov
in
das
inc
inc
xor
sbb
pop
test
cmpsl
std
pop
adc
icebp
das
pop
daa
clc
ret
ficoml
pop
cmp
les
pop
cli
add
sahf
fs
pop
dec
femms
or
nop
jecxz
pusha
sub
and
mov
push
cld
lret
daa
sub
rcrl
in
imul
push
pop
cmp
pop
out
jb
pop
adc
popa
push
push
jl
and
pusha
cmp
push
pop
sub
mov
sub
push
js
lock
jb
cltd
lcall
or
xor
in
jo
sbb
push
sbb
ficoms
inc
pop
lods
lcall
and
adc
dec
push
pusha
pop
daa
push
sbb
and
mov
sub
jmp
pop
push
push
sahf
xchg
aam
daa
sbb
loope
rclb
in
pop
mov
int
xor
sub
enter
sbb
mov
adc
out
pop
cs
cmp
sahf
fwait
xchg
arpl
xchg
ss
cli
repz
sub
in
imul
test
loope
jne
sahf
pop
mov
orb
ret
push
jle
pop
mov
ljmp
jne
sub
or
or
out
push
pop
adc
mov
pop
pop
push
mov
and
loope
cltd
pop
fsts
mov
xor
mov
stos
or
sti
jmp
adc
lea
jno
ljmp
or
inc
rcrl
dec
mov
dec
enter
jne
lcall
dec
fildl
ficoml
enter
shrb
cld
arpl
push
test
sbb
mov
jge
lahf
push
jbe
add
adc
dec
inc
push
pop
dec
push
xchg
and
outsb
mov
cwtl
arpl
add
std
push
dec
pop
sbb
sub
sub
jmp
and
cmp
and
mov
sbb
mov
lret
mov
pop
and
repz
lahf
hlt
inc
xor
out
pop
pop
jae
dec
imul
and
pop
or
sub
pusha
fcmovb
insb
jp
inc
es
popf
mov
and
imul
xchg
push
std
outsl
jbe
fcoms
in
fildll
jecxz
jbe
pop
cmp
add
xchg
add
push
push
pop
in
adc
or
lods
enter
mov
inc
pop
pop
ss
ffreep
or
xchg
mov
dec
add
cltd
mov
outsl
jecxz
ret
fists
pop
out
mov
gs
or
dec
pop
stc
xchg
shll
lret
pop
xchg
pop
scas
or
lods
cmpsl
pop
inc
ret
and
mov
rol
nop
or
mov
xchg
sbb
shlb
fcomps
cltd
dec
sahf
es
sub
push
pop
in
jns
out
xor
das
call
pop
mov
xor
dec
ret
pop
cltd
adc
test
out
jo
pop
xchg
cmp
xor
cwtl
sbb
mov
pop
popf
sti
sub
fisubs
pop
xchg
pop
fcmovnbe
cmp
pop
sub
dec
mov
push
arpl
pop
lahf
and
cmc
stc
lret
das
popa
pop
lods
jb
mov
inc
je
inc
pop
sahf
jmp
imul
xchg
xorl
push
jmp
cmp
pop
fnstsw
inc
mov
sub
dec
push
push
addl
xchg
pop
jge
loop
shrb
pop
rclb
and
or
test
rorb
fisubs
pushw
pop
add
push
insb
pop
lret
add
cmp
xor
jne
sarb
push
dec
pop
pusha
lret
lcall
cmp
fsubr
sub
imul
sub
mov
cmp
pop
push
sbb
scas
and
mov
dec
lock
jecxz
fsubr
aaa
pop
sub
andl
mov
stc
jno
mov
sub
adc
mov
decl
fists
lret
addr16
jno
cmp
mov
pop
repz
adc
pop
daa
inc
lea
pop
pop
jbe
push
push
sub
ds
dec
and
roll
pop
mov
ds
push
cmp
jno
or
pop
jmp
cs
ss
inc
adc
sbb
mov
cltd
dec
and
xchg
pop
xor
push
inc
outsb
pop
out
cmpsl
mov
pop
cmp
jg
dec
push
sub
in
daa
lcall
xor
inc
and
rclb
rcrb
subl
ss
adc
pop
loopne
mov
aaa
adc
inc
mov
lea
and
aas
lret
test
dec
aaa
pop
cmpsb
sub
pop
popf
xchg
ja,pn
sbb
inc
and
pop
idivb
mov
mov
aaa
xchg
jge
jbe
pusha
adc
jmp
cmp
es
push
dec
mov
push
fiaddl
sub
mov
ljmp
or
mov
inc
popf
dec
dec
adc
into
cmp
inc
insl
pop
add
push
dec
adc
mov
inc
push
mov
inc
inc
popf
pop
mov
jbe
mov
cmovb
lds
std
and
and
sub
jl
xor
pop
test
sbb
pop
pop
mov
push
pop
fldcw
inc
mov
pop
inc
pop
test
idivl
insb
fisttpl
jnp
cmpsl
pop
movlps
dec
pop
or
add
xchg
in
cmp
inc
loopne
fildll
dec
dec
loope
jbe
jle
pushf
sub
inc
dec
mov
mull
mov
inc
test
inc
rcrb
adc
or
xchg
add
shrb
imul
adc
and
fsts
sbb
inc
lret
pop
fiaddl
mov
sbb
and
dec
dec
mov
pop
stos
icebp
add
or
xlat
or
pop
icebp
mov
push
add
ja
in
test
ds
push
in
jns
mov
inc
xor
push
popf
imul
loopne
pop
int3
add
pop
jbe
adc
jb
mov
xchg
xor
gs
pop
push
pop
adc
ficomps
shlb
data16
fisttpl
loopne
mov
cs
clc
incb
icebp
nop
in
stos
jmp
inc
adc
mov
lret
pop
push
jg
xchg
push
jmp
cmp
jne
jl
sbb
je
addr16
pop
aas
mov
pop
pop
out
xchg
repnz
leave
jmp
adc
dec
pop
xchg
mov
adc
mov
pop
xchg
inc
inc
mov
push
mov
xchg
data16
ds
and
mov
sub
adc
inc
rcr
ret
adc
lea
cmpsl
sbb
sbb
mov
sbb
test
mov
pop
imul
jmp
loope
stos
mov
out
inc
push
push
out
in
push
pop
fs
adc
cli
cmp
xor
sbb
cmp
jmp
xchg
mov
fstpl
lods
pop
dec
sub
pop
addr16
pop
or
lds
fcoms
ret
inc
std
pop
push
pop
pop
xchg
xchg
pop
mov
and
pop
decb
repz
cwtl
fnstsw
rdmsr
xchg
push
test
loope
and
xor
ljmp
push
js
adc
cwtl
mov
cmp
ss
bound
jae
and
fstl
dec
les
pop
jp
pop
lret
or
xchg
lahf
jbe
push
jecxz
push
stc
ss
fsubr
sbb
pop
pop
enter
or
sbb
sub
int3
stos
pop
pop
sub
xor
leave
adc
sbbb
and
pop
and
dec
mov
inc
xchg
pop
push
rcr
lock
test
cltd
or
adc
bound
xchg
push
mov
ja
lods
pop
ja
shlb
es
mov
sbb
sbb
or
out
fmull
sub
push
scas
inc
pop
iret
jle
pop
ret
and
push
add
pop
mov
dec
push
pop
cmpsl
aam
fiadds
mov
sahf
shl
push
lds
fcompl
cmp
loop
sti
negb
pop
test
into
ret
mov
orl
pop
pop
mov
mov
push
mov
jne
lods
pop
dec
or
add
push
rcll
dec
jmp
in
lcall
mov
aam
mov
pop
mov
lds
dec
movl
cs
pop
sbb
push
sbb
imul
lods
scas
cmp
xchg
push
pop
xor
mov
rcrl
les
mov
dec
inc
lods
or
xchg
cwtl
inc
pop
loopne
js
jno
mov
stos
int
mov
push
sti
adc
xchg
pop
dec
inc
mov
xorb
sbb
cli
mov
sub
mov
negb
pusha
dec
xor
pop
imul
jge
loope
sbbl
mov
cmpsl
xchg
push
push
lcall
jnp
into
xor
insl
cmp
inc
and
mov
pop
push
xor
mov
xchg
lret
dec
pop
je
pusha
and
pop
imul
add
ss
sbb
mov
ja
pushf
jmp
sbb
daa
out
xchg
xor
cs
push
xchg
in
mov
stos
sti
jmp
mov
pop
rol
leave
rcrb
and
clc
adc
mov
push
sub
fbld
adc
pop
jne
rolb
roll
les
mov
add
lret
inc
js
insb
testb
addr16
pop
pop
push
push
inc
lret
cwtl
push
cmp
call
xor
pop
xchg
lret
push
xor
cmp
enter
or
or
pop
or
inc
jo
imul
addr16
push
bound
pop
je
or
mov
dec
popl
out
shlb
xchg
das
jno
notl
bound
ljmp
hlt
popa
xchg
mov
rorb
jl
dec
push
pop
add
int3
or
sti
push
testb
xor
pop
mov
addr16
push
imul
mov
jle
mov
sbb
sbb
fmull
sub
pop
adc
cmp
fimull
movsb
and
or
outsb
pop
pop
or
mov
mov
aam
fsts
and
push
pop
inc
cmp
enter
jne
daa
fs
pop
repz
push
mov
dec
push
jp
xchg
inc
sbb
cmp
int
test
negb
lds
push
push
xchg
push
lea
std
pusha
aam
idivb
idivl
enter
stos
mov
add
pop
cltd
jnp
lock
in
das
shll
loope
inc
pop
pop
push
push
adc
dec
popf
pop
insl
in
and
jle
pop
xorl
mov
inc
cwtl
mov
sbb
popa
xchg
es
add
push
sub
imul
pop
cltd
mov
push
or
push
test
dec
mov
sbb
lds
push
inc
xor
stc
dec
adc
pop
sbb
push
push
or
inc
cld
xchg
clc
push
adc
adc
cmp
test
xor
cmp
sub
mov
leave
dec
std
adc
inc
jnp
ljmp
in
pop
add
xor
out
mov
nop
ja
push
jg
push
test
cli
cmpb
sarl
xor
ds
and
push
scas
outsl
cs
jmp
xchg
cld
sbb
jo
lret
push
push
mov
pop
mov
sahf
inc
jno
xchg
cmp
jge
mov
inc
cs
ja
ret
and
pop
popf
adc
pop
pop
or
shrl
sbb
push
jmp
cmpb
sbb
sbb
fisttpll
pop
fsubrl
repnz
aaa
les
push
loope
add
dec
lods
cmpsb
sahf
mov
stc
fbld
data16
inc
out
push
cli
pop
or
xchg
sbb
out
daa
mov
fucomi
push
add
pop
adc
cmpl
gs
add
adc
pop
mov
fisubs
add
push
pop
mov
out
pusha
sbb
popf
mov
pop
mov
lds
fdiv
pop
and
shll
xchg
push
or
add
test
in
test
pop
pand
dec
sbb
in
or
sbb
jbe
dec
pop
lods
jno
jo
rcrb
mov
arpl
adc
sbbl
adc
cltd
rolb
push
rorl
mov
jne
stos
push
repnz
push
push
in
popf
pop
xchg
jnp
test
lock
fldl
pusha
xchg
pop
inc
push
add
sub
pop
sbb
mov
push
lods
in
pop
or
sbb
nop
sub
in
add
repz
pushf
cs
jnp
and
daa
cltd
arpl
mov
fwait
push
cwtl
xor
gs
push
push
xchg
mov
pop
jge
cltd
dec
std
push
pop
in
stc
pop
push
push
xchg
test
movsl
and
sub
or
das
push
adc
push
mov
ss
add
pop
aaa
call
jmp
jns
out
andb
int
or
pop
lcall
gs
adc
fidivrs
pop
pop
push
and
pop
mov
sbb
mov
push
pop
mov
adc
inc
sbb
lods
mov
ljmp
jmp
cli
je
pushf
push
and
dec
clc
inc
or
pop
mov
dec
cmc
stos
xchg
orl
mov
pop
cwtl
ja
pop
nop
add
mov
dec
xchg
fcompl
push
adc
pop
insl
sbb
jno
fstl
mov
jo
jo
push
jne
pop
push
and
dec
or
les
pop
push
out
test
pushf
lock
sub
mov
sahf
loopne
and
or
cmp
lcall
inc
mov
mov
lret
sbb
shr
pop
lock
dec
int
push
push
push
scas
or
adc
and
rorb
push
xlat
fcmovnbe
push
sub
rorl
push
jmp
lcall
pop
sub
push
adc
push
sti
adc
pop
inc
push
jo
cmp
cmp
rolb
pop
mov
dec
or
jge
sub
pop
dec
pop
mov
mov
and
jle
lds
adc
jb
jl
xor
push
pop
pushf
pop
repnz
push
push
pop
enter
sub
lods
pop
or
add
pop
cmp
lds
out
add
lret
cmpsl
arpl
sahf
pop
rorl
xor
lock
mov
cmp
test
sub
shll
inc
pusha
and
pop
fdivs
loopne
sbb
movsb
jmp
hlt
test
rclb
cmpsl
dec
inc
sbb
adc
mov
fsubrs
lds
stos
push
int
push
mov
ret
jns
test
mov
pop
pop
out
sub
cwtl
pop
repz
fwait
add
ds
pop
movsl
cli
jno
imul
or
lock
xor
enter
adcb
fisubrl
jl
pop
sub
sbbb
les
jp
test
pop
jmp
sbb
pop
dec
push
rclb
lahf
jge
xchg
xchg
inc
xlat
ljmp
cwtl
dec
jne
pop
lods
stos
testl
into
sub
pop
cmp
stos
adc
pop
enter
xchg
cmp
dec
push
sub
pop
test
sti
sbb
rolb
or
pusha
lds
lea
or
outsl
mov
pop
clc
sub
push
addr16
push
dec
stc
icebp
inc
fwait
jnp
sahf
inc
pop
pusha
pop
mov
dec
ljmp
test
test
cmp
andl
xchg
pop
ret
cmp
loop
rorl
mov
mov
pusha
ds
jno
xor
in
in
push
daa
pop
ret
cmp
sub
jmp
xchg
mov
sbb
mov
push
out
pop
lods
fmulp
paddd
xchg
imul
pop
fcomip
into
sub
stc
dec
psrlw
adcb
gs
daa
hlt
loopne
fmuls
repnz
inc
aad
mov
ret
adc
jbe
adc
cld
fldenv
shll
pop
ret
dec
aas
mov
sbb
shll
cwtl
in
pop
jno
mov
push
dec
movsb
xor
pop
jg
xlat
xor
mov
in
call
push
cmp
cwtl
stc
daa
dec
mov
jp
pop
cld
pop
imul
inc
cli
sub
leave
pop
adc
push
andps
sahf
pop
cmpb
xor
js
xchg
mov
orb
int3
adc
pop
pop
lock
daa
mov
adc
jmp
outsb
popa
cmp
sbb
test
sbbb
ss
dec
jne
and
xor
sti
stos
fs
jbe
out
fistps
sbb
jl
dec
jle
insb
push
or
pusha
mov
enter
fdivrs
xor
mov
add
pop
sub
fstpl
in
sbb
js
data16
mov
push
addr16
xchg
pop
sub
out
mov
sub
adc
mov
pop
pop
stos
pusha
push
adc
idiv
rolb
fdivr
dec
jns
adcb
pop
std
movsl
icebp
inc
lcall
outsl
push
sbb
pop
inc
mov
pop
mov
aas
jmp
std
sbb
fs
cltd
xor
jle
sbb
mov
inc
bswap
pop
pusha
cs
mov
mov
cmp
out
es
jbe
mov
or
pop
pop
push
push
sbb
mov
pop
fstl
lcall
repz
dec
xchg
sbbl
dec
out
cwtl
or
pop
or
xchg
mov
adcb
mov
pushf
push
xor
stc
xor
in
outsl
mov
ljmp
xchg
int
sbb
lods
imul
rcr
adc
mov
jle
pop
mov
push
test
nop
xchg
jns
pop
jl
sbb
inc
adc
inc
add
inc
add
add
fcomi
jno
push
xchg
pop
dec
push
xor
imul
pop
pusha
sub
pop
mov
adc
add
inc
jmp
dec
arpl
daa
into
icebp
lret
clc
pop
cmp
js
xchg
and
inc
pop
mov
cmc
test
add
ret
or
push
inc
cmp
sbb
mov
lahf
call
imul
add
mov
cltd
imul
jmp
dec
xchg
stos
cmp
fimull
ret
xchg
pop
pop
sbb
xor
js
push
cld
dec
shll
insb
pusha
movsb
jnp
les
adc
aam
pop
cltd
lret
jb
mov
cli
repnz
mov
pop
adc
in
das
pop
popf
inc
fcomps
cltd
and
push
pop
fisttps
xchg
mov
push
jecxz
mov
xchg
rcrl
cs
mov
pop
jge
in
adc
ret
jne
pop
xorl
icebp
push
aad
fcmovnb
xchg
jecxz
pop
and
cltd
pusha
pop
push
pop
mov
push
xchg
adcb
pop
jecxz
loope
inc
mov
icebp
ret
mov
jmp
in
dec
bound
fwait
enter
mov
xchg
xchg
sub
jp
js
pop
stc
arpl
ret
sbbb
mov
xor
add
jne
das
mov
data16
sti
pop
push
jb
ficoml
add
fwait
push
insl
mov
mov
shrl
jl
std
or
mov
divl
das
daa
js
pop
nop
mov
mov
push
push
pop
jg
fistpll
adc
in
movsl
push
imul
cli
xchg
xchg
pop
jo
in
mov
scas
dec
enter
ret
push
dec
jl
imul
insb
mov
jo,pn
stc
stos
pop
push
sti
movsl
iret
pop
add
dec
lcall
adc
negb
jb
push
test
gs
pop
inc
sub
adc
push
popa
fs
orl
insb
lahf
push
inc
sub
stc
and
je
daa
pop
push
dec
push
dec
dec
push
movsb
dec
mov
cmp
in
cmp
sahf
or
push
pop
aas
add
sbb
pop
pop
adc
pop
dec
jbe
add
sub
pop
mov
and
and
sar
add
and
sbb
mov
pop
lea
mov
push
sub
sbb
in
ret
pop
mov
ljmp
aaa
push
adc
rcrl
int
scas
xor
loope
sbb
push
jecxz
jle
sti
add
pop
arpl
lret
inc
lds
cmpsb
int
adc
sub
popf
pushf
repnz
sbbl
repz
jne
pop
xchg
inc
adc
cmp
push
sub
fistpll
repz
cmp
dec
sub
push
lret
lods
aad
pop
mov
jo
dec
pop
add
jmp
icebp
pop
cmp
or
dec
pop
dec
out
popf
js
jl
pop
cmpsl
push
adc
pop
adc
dec
xorb
pop
jo
out
inc
mov
fs
push
push
xor
pop
inc
and
mov
fidivs
cmp
sub
cli
mov
cmp
mov
fwait
pop
imul
add
xchg
mov
cmc
ret
mov
xchg
fistps
push
mov
cli
jge
outsl
mov
push
add
add
cmc
dec
push
push
inc
xor
test
insb
adc
leave
pop
fsubs
mov
repz
jl
xchg
push
adc
lcall
fistps
shl
mov
inc
cmc
xlat
nop
pushf
pop
ds
std
add
test
inc
jmp
arpl
jmp
or
aas
into
pop
mov
push
pop
xadd
fnstcw
pop
and
xchg
dec
in
dec
in
nop
mov
jle
ljmp
test
imul
mov
jnp
push
jg
xor
push
mov
pop
ret
jle
adc
cmp
jo
sbb
lret
push
push
dec
dec
push
rolb
int
inc
adc
xchg
stc
cmp
les
rclb
adc
push
push
pop
mov
xor
pop
sbb
or
lea
pop
push
pop
sarb
loop
stos
xchg
sarb
iret
cmp
pop
cwtl
rorl
xchg
lret
sub
inc
sbb
mov
fdivs
cmpsl
cli
xor
pop
mov
mov
and
sub
sub
pop
xchg
shr
fnsave
pop
lahf
insl
imul
or
enter
cmp
mov
mov
in
leave
loopne
fwait
or
mov
stos
popa
pop
jmp
xchg
sbb
arpl
pusha
pop
and
pop
bound
pop
ss
stos
lea
xchg
enter
lret
add
pop
add
fldl
cltd
les
push
adc
add
lea
pop
mov
or
or
sub
pop
sub
and
add
push
adc
shl
fwait
pop
mov
in
das
fnstcw
jbe
pop
mov
or
push
pop
cmp
cmp
pop
imul
notb
pop
mov
pop
ret
add
pop
out
pop
insb
test
mov
cmp
mov
bound
and
mov
aas
xchg
pop
push
dec
add
push
sbb
sbb
or
les
pusha
add
out
push
jg
pop
mov
fwait
loope
dec
leave
adc
sbb
jne
test
cmp
xor
sbb
mov
les
push
jl
fstpt
arpl
push
xchg
mov
jnp
mov
mov
inc
and
call
add
adc
out
pop
fdivr
lahf
pop
arpl
or
sbb
jae
clc
jae
imul
or
mulb
arpl
arpl
arpl
arpl
outsl
repz
jmp
fsubp
out
mov
pop
ljmp
jg
icebp
sbb
push
mov
pop
ja
mov
das
lds
pop
mov
jle
adc
stos
add
sbb
and
insl
dec
sbb
jmp
or
dec
xor
stc
scas
stos
cwtl
stos
xor
inc
dec
cli
pop
jo
pusha
dec
sbb
aam
pop
pop
dec
adc
push
mov
mov
loope
add
mov
jg
mov
push
dec
ret
insb
pop
movsb
loopne
mov
iret
incl
mov
pop
rorl
push
xor
adc
gs
clc
or
mulps
sub
pop
add
aad
mov
jmp
push
in
je
sbb
sbb
stos
add
into
mov
mov
out
dec
mov
pop
and
adc
dec
inc
shll
in
sbb
pushf
pop
push
add
mov
sar
sub
pop
sbb
pop
fildl
xchg
ljmp
or
sbb
lea
add
adc
nop
dec
orb
xor
mov
pop
xor
aaa
int
jo
pop
jbe
xchg
fcmovb
out
add
cltd
pop
push
xor
sbb
jo
xchg
popf
inc
fnstcw
test
andl
inc
cmp
hlt
in
pop
mov
pop
dec
adc
ds
fidivrl
enter
ljmp
xchg
dec
adc
mov
js
cmpsl
jo
xchg
and
dec
mov
pop
mov
sub
out
lods
mov
pop
push
push
mov
or
incl
and
add
out
lcall
ljmp
in
push
push
mov
jmp
pop
fs
push
pop
outsb
and
clc
loopne
push
mov
cli
jmp
or
add
pop
push
sti
lods
pop
mov
dec
sub
ret
pop
sub
test
ljmp
pop
adc
enter
jae
pop
push
popa
mov
sub
inc
iret
adc
pop
ficompl
jg
pop
dec
inc
fists
inc
xchg
inc
pop
aam
cmp
push
jno
xchg
dec
jbe
push
pop
xchg
adc
mov
int3
xor
mov
xchg
jne,pt
pop
mov
test
push
test
loopne
pop
xchg
daa
and
pop
test
shlb
fdivl
sahf
lds
stc
in
xor
aam
loopne
and
adc
negb
sbb
jb
data16
mov
pop
sub
push
mov
adc
xor
test
nop
dec
fstps
inc
scas
cwtl
daa
in
into
pop
push
sub
sbb
or
and
jbe
pop
push
xchg
mov
dec
sbb
sbbb
ds
add
inc
int
inc
adc
out
cmp
add
jbe
lcall
inc
insb
mov
shll
les
fmuls
sub
pop
jne
sbb
push
popa
in
jnp
cld
pop
sbb
fistpll
xlat
fwait
and
lods
pop
ljmp
cli
or
mov
rclb
dec
lods
in
dec
cwtl
insb
push
push
pop
dec
in
dec
push
mov
frstor
pop
xchg
rcl
test
add
mov
imul
scas
ds
xchg
push
adc
pushl
pop
dec
cmp
stc
pop
stos
out
or
jbe
pop
sbb
lret
mov
pusha
or
arpl
sbb
and
test
repnz
dec
ficoms
test
xchg
popa
mov
fisttpl
lea
icebp
and
push
mov
jmp
jg
adc
loopne
inc
inc
xor
push
lret
gs
cmp
loope
inc
dec
adc
lret
hlt
das
jb
pop
lds
jmp
xlat
jns
push
xor
jge
pushaw
mov
rorl
and
mov
xor
fists
push
pop
cmp
sahf
pop
push
and
pop
clc
les
sahf
pop
test
and
stos
and
or
mov
cmp
divl
mov
mov
push
jmp
movl
leave
out
or
pop
push
jns
mov
sbb
imul
push
hlt
std
mov
jae
jge
aam
sti
daa
mov
movsl
pusha
cmp
push
stos
fists
pop
ss
add
dec
les
inc
pop
pop
sub
xchg
pop
add
in
fidivl
or
jne
dec
clc
lods
mov
push
clc
push
call
pop
test
lock
pop
pop
mov
das
mov
dec
dec
mov
clc
xor
pop
mov
mov
sbb
lods
xchg
lods
cmp
xchg
and
push
or
xchg
scas
dec
xor
mov
push
adcl
insb
enter
repz
add
adc
imul
loop
data16
fstl
pop
pop
inc
dec
cmp
push
jecxz
pop
in
test
adc
mov
imul
fwait
repz
push
cmp
in
mov
push
jbe
repnz
leave
lea
inc
or
rcrl
mov
add
fwait
ret
pop
fstps
imul
xor
cmp
pop
fisttpll
mov
adc
inc
cmp
jp
std
pop
pop
xor
mov
test
inc
jbe
negb
lds
and
ret
push
pop
pop
push
push
jmp
pop
push
sbb
lock
mov
jne
addl
es
mov
ret
or
pop
movl
pusha
mov
xchg
pop
mov
push
cmpsl
jecxz
xor
test
mov
pop
cmp
xor
ja
out
mov
mov
repz
cltd
arpl
mov
or
vmovd
add
pusha
mov
fnstcw
lods
out
iret
mov
pop
or
in
adc
fstps
inc
jmp
in
jne
scas
cmp
decb
xchg
jns
lea
dec
pop
cs
and
or
xor
loope
shlb
lret
stc
push
pop
pop
fisubs
dec
push
pop
scas
cmpsl
adc
cli
imul
ljmp
lcall
pop
les
pop
mov
lods
or
mov
push
or
fisubrl
and
out
lret
dec
inc
add
push
lds
imul
icebp
js
xchg
push
push
push
inc
lahf
fdivr
sbb
gs
bound
lcall
rcrl
pop
mov
jbe
testb
cmp
and
in
dec
pop
into
pop
push
adc
inc
pop
jne
lods
xchg
xchg
mov
addl
subl
xchg
jge
es
push
inc
jle
or
inc
jne
arpl
sub
cmp
push
pcmpgtw
xor
iret
mov
stos
ret
mov
test
adc
fsts
or
dec
mov
push
pop
and
pop
popa
add
push
jbe
int
es
pop
jp
xchg
cwtl
test
popa
dec
xor
jb
sub
inc
je
insb
xchg
pop
addr16
test
lret
gs
repz
dec
arpl
insb
nop
outsl
leave
adc
jl
cmc
jbe
and
nop
adc
lcall
dec
sbb
es
dec
jne
jbe
sub
pop
data16
sub
or
xchg
aas
inc
mov
sbb
mov
jle
rcr
dec
out
popa
mov
cli
aad
or
lods
sahf
inc
ljmp
je
cmpl
aaa
mov
pop
pop
and
dec
or
adc
pop
je
out
aaa
pop
loope
jle
mov
std
sbb
cltd
fldenv
icebp
cmp
dec
sub
push
xchg
stc
shll
pop
inc
in
cmc
roll
adc
push
push
lea
aas
adc
pop
cltd
add
xchg
pop
adc
pop
aaa
push
divl
inc
mov
shll
stc
stos
adc
pop
mov
je
mov
inc
ss
pop
adc
cmp
jmp
xor
inc
dec
dec
pop
pop
daa
jne
mov
inc
push
adc
xchg
push
jmp
cwtl
pop
popa
cmc
xchg
xchg
cmpl
inc
xchg
call
push
xchg
or
inc
fnstenv
mov
cmp
loope
outsl
pop
mov
idivb
call
ficomps
xchg
jmp
sub
sub
jbe
xchg
inc
pop
fwait
add
into
push
push
xchg
jmp
mov
push
or
pop
dec
push
push
fdivrs
daa
dec
mov
push
pop
icebp
test
adc
add
pop
inc
inc
pop
in
inc
inc
xchg
xchg
imul
dec
or
pop
addl
pop
dec
pop
pop
cli
add
add
test
outsl
es
stos
fcmovu
push
pop
and
mov
pop
or
or
mov
or
addr16
rcr
sbb
popa
std
push
fisubs
sbb
add
in
mov
cmp
ret
xchg
mov
lods
jle
pusha
xchg
mov
sbb
xchg
call
sbb
fisttps
subb
and
xchg
mov
mov
push
outsb
pop
mov
dec
in
push
fnstsw
jae
sub
adc
test
subb
jo
adc
pop
repz
imul
cmp
jl
aad
mov
jmp
xchg
les
sbb
dec
and
inc
daa
jecxz
pop
rcrl
xchg
test
ss
jle
divb
fmuls
lea
pop
icebp
add
movsb
xchg
push
lret
movsl
notb
pop
sbb
js
xchg
dec
pusha
faddl
stos
push
pop
mov
fdivr
rorb
dec
cmpsb
nop
call
cmp
pop
push
sbb
movsl
jmp
xchg
pop
jno
ja
pop
out
adc
addr16
lea
mov
pop
inc
push
push
or
subl
and
dec
stc
jae
or
pop
push
adc
icebp
test
dec
pop
in
add
pop
pop
push
cwtl
push
mov
pop
add
int3
out
dec
cmpsb
pusha
mov
jno
jp
pop
je
inc
push
lds
dec
cs
inc
push
movl
adc
add
inc
jecxz
sahf
lcall
add
cmp
jno
push
popf
insb
xor
gs
or
jb
adc
movsl
push
sub
inc
dec
ud2
add
enter
pop
push
and
xor
mov
pop
dec
pop
cmp
fldt
daa
adcl
xlat
inc
adc
xor
in
sbb
fnstcw
cmp
lret
das
dec
movswl
js
pop
insb
jg
mov
push
jge
pop
adc
pusha
jne
cs
lcall
arpl
out
aas
data16
flds
outsl
addr16
cmc
fnstenv
pop
jne
nop
push
aas
xchg
sbb
push
mov
lret
test
out
aaa
push
addr16
in
cmc
mov
iret
pop
push
shr
dec
mov
xor
jne
loopne
lcall
mov
mov
aad
jmp
xlat
xchg
pop
std
pushf
pop
popaw
bound
testl
mov
push
imul
or
enter
inc
in
mov
cli
sbbb
aaa
ret
aam
movsl
cmp
pop
pop
mov
test
inc
jmp
pop
hlt
dec
loopne
pop
das
xchg
and
pop
call
pop
sbb
adc
add
cwtl
xchg
pop
or
icebp
mov
adc
dec
cltd
mov
fisubrs
sub
ja
dec
mov
jge
test
push
sub
ds
pop
test
loopne
dec
mov
xchg
xchg
push
mov
push
sub
pop
cmpsl
sub
or
mov
cmp
aad
pop
pop
out
xchg
pop
inc
jae
push
bound
mov
adc
addr16
pop
iret
pop
push
test
push
xchg
scas
pop
sub
aaa
add
mov
pop
sbb
stc
fcompl
mov
pop
xchg
hlt
jno
pop
aas
mov
je
movsl
int
pop
in
adc
dec
ljmp
adc
push
adc
cmp
rcrl
or
mov
jmp
adc
sub
pop
pop
imul
sbb
fucomi
mov
pop
adc
sub
repz
lds
sbb
icebp
and
mov
enter
cmp
push
ljmp
push
cmp
push
jae
mov
cltd
mov
xchg
fisttps
xchg
aas
mov
pop
cli
fwait
aad
mov
cmc
das
sbb
sbb
ret
outsb
fnstcw
fisubl
inc
inc
negb
xor
test
cmc
pop
mov
insl
pop
jb
add
pop
xchg
pop
sub
dec
jbe
push
and
add
mov
hlt
pop
mov
push
xor
int3
loope
test
push
jnp
pop
adc
sub
daa
add
mov
dec
jae
dec
adc
pop
loope
sub
pop
push
std
out
xor
imul
sbb
dec
adc
mov
cmp
adc
adc
jg
dec
mov
jge
pop
push
sbbl
gs
add
inc
push
ljmp
jle
jmp
cmp
cmc
jb
pop
test
mov
mov
jns
sbb
dec
ljmp
fmuls
cmp
add
pop
mov
rcr
push
aad
daa
ret
or
fsubs
ljmp
cltd
add
or
sbb
mov
pop
or
out
jecxz
cmpsb
pushl
dec
lds
leave
add
jb
dec
add
jo
pop
movsb
xorl
or
jbe
call
std
rorl
iret
push
push
pop
insb
icebp
loope
lcall
jbe
cld
fwait
xor
push
push
inc
and
jne
pop
fimuls
jns
xlat
mov
pop
mov
pop
xor
daa
int3
xor
idivb
fldl
imul
js
inc
lret
pop
push
adc
add
mov
xchg
fsubl
fmuls
pop
lods
addr16
adc
test
pop
stc
stos
jns
xchg
push
jnp
pop
mov
and
pop
push
adc
push
xor
jle
and
jg
mov
pop
add
sti
push
inc
mov
add
or
mov
cmc
es
std
sbb
bound
mov
pop
xchg
cmp
and
mov
outsl
adcl
push
xchg
pop
mov
add
arpl
adc
enter
or
xor
ds
pop
push
xor
sbb
pop
out
jnp
jns
push
sbb
pop
das
mov
cmc
aam
int
mov
daa
lea
adc
lods
cmp
and
fcmovu
or
sbb
stos
dec
or
test
stc
pop
push
ret
pop
push
cmc
sub
fisubs
or
sub
iret
adc
mov
addb
mov
sbb
push
cmp
jmp
mov
sbb
call
in
pop
push
jne
imul
dec
add
repz
cmp
or
jmp
pop
ljmp
or
int
pop
sub
or
sub
dec
aad
push
lahf
add
mov
pop
dec
fisubl
int
jge
cmp
cld
daa
hlt
lods
out
dec
in
mov
cmpsl
mov
push
aad
daa
adc
pop
or
add
cwtl
enter
movsb
into
or
in
arpl
dec
cld
stc
and
movsb
inc
sar
call
dec
insb
xchg
lods
pop
inc
mov
pop
cmpsb
icebp
xor
or
enter
pop
lcall
testl
je
andl
dec
jbe
jmp
adc
fnstsw
pop
xlat
stos
cmp
adc
inc
jns
push
hlt
and
pop
cmc
int
xor
lds
cld
xchg
inc
xchg
xchg
pop
sub
push
incb
mov
pop
jb
pop
das
mov
add
fmuls
add
lds
jecxz
adc
and
popa
inc
adc
lea
mov
ds
adc
adc
inc
mov
stc
pop
loop
adc
ljmp
xor
icebp
jl
mov
test
jno
dec
out
sub
ss
or
orl
sbb
and
jbe
punpckhwd
mov
pop
arpl
jne
pop
bound
mov
sub
loope
push
pop
mov
test
sub
mov
fcomp
pop
leave
jle
jno
push
lret
mov
adc
loopne
xor
mov
mov
sbb
stos
inc
clc
fldt
xchg
jbe
cmp
push
or
daa
es
sbb
add
pop
add
add
pop
sub
push
pop
pop
outsl
mov
pop
dec
mov
or
jecxz
pop
test
jl
int3
mov
inc
pop
fwait
adc
in
testl
adcb
outsl
mov
pop
lahf
or
cwtl
adc
insl
push
pop
jmp
mov
pop
push
xor
mov
pop
xchg
xchg
sub
fsubrl
stc
pop
fwait
pop
dec
cmp
mov
pop
add
cs
mov
insl
shlb
jnp
je
ds
xor
adc
push
iret
pop
sub
pop
mov
pop
and
pusha
fcoms
and
daa
outsb
sbb
pop
mov
dec
pop
mov
icebp
daa
jo
xchg
popf
pop
push
mov
and
cld
pop
add
or
push
pop
repnz
cmp
and
dec
pop
or
dec
mov
lock
push
adc
popl
enter
loop
add
xlat
lea
rcrb
repz
mov
cli
push
cmpb
xor
adc
ljmp
cli
or
pop
rclb
test
sbb
jno
jp
lods
xchg
int
out
and
cmp
bnd
pop
adc
pop
sub
stos
dec
daa
xor
mov
fistpl
fs
jmp
fists
test
pop
inc
cmp
stos
pop
adc
mov
pop
xor
int3
pop
xchg
jbe
stc
ficomps
adc
push
and
ss
cmp
popf
shll
jle
sbb
arpl
sbb
mov
jle
mov
movl
into
mov
ss
pop
jmp
aaa
xchg
add
aam
dec
test
cmp
inc
xchg
fcmovb
jmp
cs
jge
jae
test
pop
adc
mulb
dec
cmpsb
push
mov
int
aad
jne
adc
sbb
inc
orl
mov
pop
pop
push
add
inc
shrb
and
adc
sub
push
pop
and
or
enter
pop
mov
adc
pop
pop
mov
inc
or
push
lock
mov
xchg
jno
fmuls
rcll
clc
jae
shlb
push
lds
or
js
xor
scas
xchg
inc
mov
je
dec
ret
xchg
and
clc
call
inc
fstps
cld
add
push
cmp
scas
std
xor
mov
jne
pusha
les
pop
push
sbb
jecxz
jb
int
sub
mov
dec
mov
pop
out
xchg
dec
jmp
xor
pop
inc
mov
je
and
into
pop
rorl
aad
lods
dec
pop
sub
push
push
cmp
movsl
and
in
iret
xchg
jnp
jns
pop
mov
addr16
push
lods
adc
stos
fcmove
ret
es
push
pop
mov
mov
mov
and
mov
vpmovzxbd
ret
xor
mov
jns
pop
push
add
push
fcoml
dec
push
je
push
push
nop
and
push
std
pop
dec
mov
sub
xchg
xchg
sub
push
dec
or
jg
inc
mov
push
pop
jp,pt
sbb
lcall
mov
or
ljmp
shl
inc
and
push
or
addr16
add
inc
add
mov
dec
pop
out
in
sub
mov
jnp
pop
push
pop
mov
pop
ljmp
inc
outsl
das
and
cmp
movsb
in
sub
rclb
or
cmp
push
cmpsb
pop
cmp
fiaddl
push
xchg
push
cmp
addr16
dec
lcall
xor
and
lods
pop
dec
inc
sub
adc
in
mov
and
das
jg
jle
pop
mov
cwtl
in
mov
pop
lods
scas
push
cmc
dec
cmp
dec
pop
inc
pushl
dec
pusha
jbe
adc
xchg
xor
inc
fiadds
jp
mov
push
int
push
xchg
cmp
xchg
push
inc
or
add
inc
push
rolb
or
cli
cltd
lds
daa
or
adc
scas
mov
mov
or
out
inc
pop
xchg
push
xchg
sti
adc
dec
int3
push
push
jmp
insl
lods
pop
icebp
sbb
mov
lods
sub
inc
mov
ss
jnp
pop
lcall
jmp
mov
mov
xchg
sub
mov
push
sub
pop
mov
and
aas
in
jne
arpl
mov
and
sahf
pop
xchg
dec
mov
jns
sub
pop
sub
sbb
clc
icebp
jnp
push
dec
icebp
lahf
fisubrs
jge
xchg
sbb
or
lret
sbb
notb
stos
pop
gs
cli
flds
fadd
ret
fdivrs
adc
outsl
lret
popf
push
lock
pop
adc
fsubr
sub
inc
loopne
int
jge
push
insb
pop
dec
addps
sahf
stos
out
pop
adc
cmp
mov
jecxz
fisubl
xor
jbe
push
dec
lds
mov
jbe
adc
jns
inc
push
push
pop
scas
fsts
call
dec
mul
out
movsb
shrb
xor
inc
sbbb
fwait
clc
and
imul
cmc
adc
shr
dec
xchg
mov
push
mov
dec
xchg
xor
pop
dec
inc
int3
and
jb
insb
mov
or
inc
inc
jns
sub
xchg
sub
lret
dec
pusha
pop
or
pusha
pop
pop
insl
or
jno
jae
roll
push
lods
pop
add
add
xlat
js
inc
dec
fistl
das
cmp
rcrb
ftst
push
mov
pushf
sub
pop
jae
out
incb
mov
mov
ret
push
out
rcrb
push
xor
lcall
push
push
ja
cmpsb
inc
mov
jg
out
fwait
pop
xchg
fnstcw
pop
test
push
shlb
mov
ds
negl
test
ds
push
fdivp
faddl
inc
aas
iret
and
inc
ljmp
inc
nop
leave
cmp
mov
push
lods
xor
pop
sbb
dec
cmp
jge
jp
fistpl
add
insb
adc
lcall
test
pop
cltd
pop
mov
stos
and
popa
in
pop
pop
pusha
cmp
mov
mov
jb
jg
sbb
inc
push
pop
shlb
mov
outsb
dec
dec
mov
mov
fimull
sbb
mov
xchg
pop
jo
mov
fcmovbe
pusha
sub
addps
push
movb
sub
mov
leave
in
inc
push
mov
inc
and
push
js
pop
and
xchg
adc
mov
mov
dec
adc
push
repz
mov
cmp
mov
icebp
sarl
loop
pop
sub
imul
test
lods
ss
pop
push
jecxz
jbe
aas
pop
jnp
out
pop
add
push
dec
sbb
pop
xor
jne
lahf
push
jmp
mov
out
jge
jmp
push
sbb
enter
cmpsb
push
pop
adc
dec
cld
cmp
cmp
mov
sbb
mov
enter
mov
xor
jnp
adc
pop
add
push
out
jl
adc
sarb
cmpsl
xchg
daa
inc
lret
lea
push
mov
sbbl
push
imul
inc
jne
mov
xor
ss
gs
sbb
xor
inc
fsts
cmp
es
dec
pop
pop
sbb
xchg
movsb
outsb
adc
daa
cli
push
lods
jb
jne
imul
mov
sbb
push
lea
xor
xor
mov
jb
lods
add
cmpsl
iret
mov
adc
dec
rcrl
pop
pop
xchg
mov
orl
dec
dec
mov
pop
push
push
stc
xor
cmp
dec
sbb
inc
push
mov
cltd
jge
aam
dec
and
mov
push
mov
xor
pop
jle
test
sahf
pop
insb
lods
stc
jne
out
jnp
push
cmp
and
sti
lcall
pop
lods
test
mov
rorb
mov
sbb
stc
pop
mov
sub
mov
pop
inc
sub
lret
in
add
push
mov
jl
adc
aam
inc
movsb
pop
and
dec
and
push
std
and
pop
dec
imul
sbb
pop
out
jne
dec
xor
stc
inc
daa
loop
mov
push
push
sbb
inc
ds
adc
mov
pusha
inc
sub
arpl
pop
pop
push
mov
addr16
pop
imul
stc
and
loopne
and
adc
cmp
and
jmp
das
movsl
push
xchg
pop
stos
ret
fsubl
jbe
pop
mov
inc
icebp
sbb
pop
insl
test
or
bound
ljmp
stos
enter
push
jne
adc
sub
pop
or
mov
out
jae
adc
push
sub
call
sbb
test
daa
push
mov
jns
pop
mov
call
pop
sbb
mov
hlt
dec
cmp
mov
bound
cmp
pop
int3
ja
or
lcall
mov
jge
inc
test
rolb
out
lcall
sahf
sub
or
pop
jno
ja
adc
sub
push
pop
mov
mov
cmp
aad
push
xchg
mov
dec
jo
xchg
push
cmp
sub
mov
aad
icebp
pop
add
add
push
dec
inc
or
in
movsl
mov
sbb
lcall
pop
test
add
add
adc
xchg
mov
sub
jecxz
hlt
xor
dec
jle
pop
shrl
pop
or
sub
aas
jmp
pop
push
ret
inc
and
pop
lea
insl
push
iret
pop
rorl
sub
jecxz
gs
mov
addr16
insb
and
clc
int
sbb
mov
in
fldt
stos
mov
nop
clc
lret
pop
mov
dec
jmp
sbb
leave
jno
dec
lret
mov
dec
pop
dec
cmp
xchg
pop
mov
mov
or
sub
jb
pop
clc
call
xchg
es
jne
sbbl
xchg
pop
push
adc
xchg
inc
fsts
mov
cltd
dec
ja
or
jg
mov
mov
ss
push
dec
ficoml
aaa
cmp
sub
cmpsl
cltd
js
mov
push
adc
ret
pop
mov
xor
js
aad
xchg
sahf
and
inc
xchg
pop
pop
adc
arpl
pop
sub
mov
push
or
jg
fmul
add
pop
mov
movsl
ljmp
test
fld
mov
inc
jbe
push
push
clc
add
rclb
dec
fsubs
subl
pop
push
mov
pop
push
std
dec
insl
mov
xor
sbb
call
outsb
push
pop
movsl
testb
xchg
or
xor
sub
inc
push
mov
inc
test
sbb
xor
es
xchg
gs
test
xor
adc
pop
mov
push
fbstp
sub
add
pop
jnp
inc
and
insl
dec
inc
outsl
jmp
dec
push
push
sub
test
sti
sbb
mov
xor
out
xchg
cltd
push
xlat
insb
mov
push
and
xor
lret
rcrl
dec
adc
inc
mov
sub
enter
insb
inc
pop
aad
ds
jg
jmp
sub
jns
sbb
push
pop
push
ret
jb
adc
pop
mov
xchg
inc
adc
lea
pop
adc
loopne
or
pop
loope
or
loop
mov
jae
popf
sbb
adc
push
es
and
sbb
mov
addr16
mov
pop
repz
jmp
pop
push
fsubrp
rclb
sbb
and
sbb
pop
loop
shrl
pop
adcb
sub
inc
repnz
xor
pop
xchg
mov
pusha
jle
jae
pop
daa
dec
sbb
rolb
xor
inc
cmp
mov
pop
in
aas
sbb
inc
push
or
cmp
int
mov
push
cmpsl
mov
and
pop
xchg
dec
pop
xchg
stos
in
jmp
jne
adc
push
push
jle
cs
sbb
ss
sbb
jbe
ja
cmp
jmp
push
fbstp
repnz
das
mov
push
cld
xor
inc
dec
sub
push
add
jo
push
xchg
scas
and
fidivrs
or
lods
int3
mov
mov
jo
inc
aas
dec
push
inc
jmp
pop
sbb
cmp
pop
sub
pop
adc
fwait
mov
cmp
addr16
adc
xlat
jne
bound
pop
mov
jo
data16
add
add
pop
fistpl
hlt
call
and
add
and
lahf
push
jae
pop
test
mov
push
inc
xor
into
cs
ret
je
sub
pop
mov
sbbb
pop
mov
in
xor
and
stos
mov
int
aam
stc
ret
iret
popa
pop
pop
movsl
out
and
addb
in
dec
push
in
mov
daa
sub
push
ss
add
inc
addr16
jbe
pop
cmp
mov
sub
xchg
cli
push
test
xor
fcomip
dec
pop
pop
fisttpll
fistps
push
out
and
shlb
popf
inc
sub
out
iret
xor
push
jge
jl
ja
aad
push
es
dec
xor
mov
sub
ss
test
test
fldenv
pop
add
int
test
jbe
movsl
mov
pop
push
xor
pop
pop
mov
insl
add
inc
fs
dec
pop
push
test
mov
sub
add
dec
push
xchg
fsubrp
jo
push
rcr
cmp
dec
push
sub
xor
sbb
mov
cmpsb
lds
fstpl
or
sbb
inc
push
loope
dec
test
cmp
add
test
repnz
inc
jge
or
popf
mov
cmp
sub
call
dec
dec
imul
clc
mov
pop
ss
cmp
bnd
pop
sub
push
test
pop
jmp
dec
add
in
push
data16
sub
rcrl
or
call
pop
and
and
packuswb
push
adc
aaa
out
pop
mov
das
ja
sbb
sub
imul
out
mov
nop
pop
imulb
ljmp
into
fwait
pop
pop
xor
sub
pop
cld
repz
sbbl
sbb
cmp
mov
xchg
loop
lods
pop
xchg
jne
xor
pop
in
fbstp
jmp
push
push
mov
pop
cmp
ds
xor
or
or
adc
pop
imul
xor
pop
sbb
pusha
xchg
into
and
ret
push
pop
pop
and
pop
scas
fisttpll
push
add
push
push
pop
push
xor
sbb
and
cmp
xchg
jbe
jmp
push
mov
xor
xchg
jecxz
and
xlat
pop
push
mov
pop
aaa
mov
lret
pusha
mov
and
leave
jle
pop
mov
jbe
pop
dec
lcall
pop
pop
cmp
out
pop
bound
outsl
sub
pop
or
xchg
shll
insl
adc
sbb
pop
or
loopne
popf
imul
pop
inc
xor
push
adc
in
scas
shll
rcrb
mov
or
or
cmc
les
adc
cltd
call
pop
or
fstl
jnp
repz
push
or
mov
fisubl
dec
icebp
lret
cmp
jge
sbb
cmp
in
xchg
lahf
popf
mov
mov
fbstp
push
and
dec
dec
pop
adc
pop
or
sbb
adc
push
pop
nop
xchg
or
ret
push
push
outsl
repz
cli
loope
pop
jmp
dec
sub
into
cwtl
sbb
mov
in
cmp
mov
adc
pop
jle
fidivrs
push
xor
fsubrs
jp
mov
imul
cmp
cmpsl
sbbl
add
dec
dec
mov
cltd
ret
pop
jmp
test
and
pop
adc
imul
inc
mov
pop
cmp
push
dec
mov
mov
repz
loopne
pop
push
insl
in
add
cmc
out
and
scas
leave
and
xchg
pop
aam
xorb
jae
and
imul
ja
pop
jb
andl
lods
aam
fisubrl
pop
pop
adc
mov
pop
inc
jmp
cltd
out
pop
push
mov
addr16
or
call
or
ds
dec
dec
dec
and
daa
pushf
ret
pop
cmc
jb
mov
outsl
popf
imul
sub
bnd
sub
pop
scas
mov
inc
rol
cmc
pop
jmp
jp
pusha
test
add
aas
mov
sub
push
push
repnz
clc
mov
mov
push
inc
mov
fcomip
bound
pop
pop
and
fcom
and
pop
adc
push
into
dec
and
and
push
push
inc
sub
sbb
xchg
add
xchg
add
or
mov
add
pusha
mov
cs
dec
ror
adc
push
lcall
mov
pop
nop
imul
jecxz
lcall
cwtl
push
xchg
or
pop
jecxz
incb
andl
fstps
out
xor
pop
dec
popf
cld
and
in
test
loop
sahf
js
rcr
push
adc
stc
mov
mov
push
daa
dec
push
xbegin
dec
jl
pop
xlat
jnp
ret
fiaddl
push
into
lods
pushaw
inc
pop
and
pop
inc
mov
pop
sub
pop
xor
std
sub
sub
mov
fistpl
and
sub
jg
inc
imul
push
sub
pop
add
jo
xchg
pop
pop
in
call
inc
jns
lds
jne
sbb
mov
push
sub
popf
add
push
lods
pop
loopne
xor
arpl
jae
clc
pop
inc
cmp
push
pusha
inc
out
mov
es
mov
xchg
mov
mov
jb
sub
ja
lret
test
icebp
pop
mov
pop
leave
adc
or
push
stc
movsl
inc
pop
daa
dec
out
push
inc
ret
pop
pop
insl
adc
dec
sbb
sub
sbb
aad
and
cmp
sbb
sub
mov
orl
out
pop
mov
push
enter
or
adc
pop
iret
push
jno
cltd
shr
test
mov
fmuls
pop
push
daa
punpcklbw
outsl
add
push
lahf
fdiv
push
js
into
or
inc
add
test
mov
fadd
rcrl
gs
pop
mov
jmp
dec
inc
dec
out
lahf
loope
clc
lods
test
pop
adc
xchg
dec
xchg
fists
pop
mov
out
mov
es
fiadds
sbbl
in
pop
mov
pop
insl
push
loope
or
xor
pop
pushf
mov
push
imul
add
sub
adc
out
sub
push
or
add
pop
cmp
add
dec
pop
adc
fisttpll
cmp
push
pop
mov
mov
clc
insb
fstpl
add
push
push
adc
testl
mov
scas
fwait
clc
rcrl
cmpb
jmp
cltd
popa
sub
inc
decb
pop
leave
ret
or
imul
sub
sbb
out
pop
leave
int3
lcall
adc
or
xlat
enter
arpl
das
cmp
and
sbb
insb
int3
xor
scas
fbstp
pop
push
pop
sahf
aad
gs
and
in
rcl
dec
sti
mov
pop
and
pusha
lods
inc
sub
inc
push
pop
hlt
test
leave
sub
pop
and
es
xor
std
loope
sbb
cwtl
and
enter
inc
ljmp
test
jb
dec
nop
pop
jae
push
pop
or
cmp
lods
dec
mov
mov
jbe
mov
pop
pop
outsb
insb
adc
push
jae
jg
cmpsl
cmp
jge,pn
pop
cltd
repz
arpl
int3
push
lods
pop
cltd
adc
lret
pop
pop
mov
je
cwtl
jmp
clc
pop
dec
lcall
inc
call
and
jbe
cmp
push
jno
xor
sbb
push
shl
imul
dec
xor
pop
inc
xchg
pusha
cmp
decb
out
stos
fcomps
jge
dec
int
fld
push
lea
xchg
mov
mov
mov
sbb
test
pop
jae
and
sub
test
dec
es
mov
imul
xor
rol
data16
rcrl
cmp
sbb
mov
mov
push
icebp
jmp
lcall
js
pop
xor
imul
ss
jno
cli
pop
out
inc
lcall
fimull
add
add
insb
pop
in
ljmp
imul
inc
adc
pop
sub
es
jmp
xchg
xor
daa
jne
or
rclb
adc
fimull
push
lret
adc
pop
sub
sub
or
cmp
jne
outsl
xchg
ljmp
jmp
jns
out
pop
sbb
aam
or
int3
or
xchg
ds
jae
pop
dec
mov
popa
mov
or
scas
je
fimull
dec
adc
bound
lea
cwtl
sbbb
cmp
and
test
or
inc
jg
pop
sub
sbb
mov
xor
mov
pop
cmp
aas
pop
sbb
jbe
mov
arpl
pop
shll
stos
add
fsubl
pop
addb
or
push
sahf
push
push
leave
enter
pop
jbe
mov
test
jmp
push
and
pop
mov
addb
mov
xchg
inc
pop
test
dec
dec
addr16
cs
push
cmp
rclb
mov
cmp
mov
fiaddl
adc
jg
add
in
push
mov
push
sbb
dec
dec
aas
pop
sbb
pop
mov
xchg
dec
sub
push
push
dec
aam
cwtl
push
xor
cmp
mov
or
xchg
js
fmul
pop
call
cmp
adc
sub
cmc
cld
jo
and
das
sahf
xchg
mov
clc
fildll
jge
push
in
mov
jne
sbb
push
jmp
lea
pop
or
mov
inc
cmp
jmp
push
push
mov
rol
gs
sbb
xchg
test
pop
cmp
lods
cmpsl
bound
add
xchg
cmpsb
pop
pusha
mov
jl
pop
lock
int
inc
lods
pop
adc
push
into
inc
dec
pop
mov
push
jmp
pop
cmp
lods
pop
nop
mov
push
loopne
rcrl
les
imul
inc
inc
push
xor
dec
aaa
test
cltd
insb
ljmp
lret
pop
popa
sub
xlat
mov
pop
jmpw
cwtl
sub
mov
pushf
cmp
sbb
pop
lret
pop
adc
xor
add
in
or
cmp
mov
xchg
aaa
in
clc
pop
gs
orb
insl
mov
jge
pop
stos
stos
lock
orb
or
sbb
int3
aaa
jecxz
dec
pop
out
test
out
daa
jl
pop
test
xor
test
pop
roll
jbe
or
dec
jmp
inc
enter
pop
or
mov
pusha
pop
add
ljmp
pop
sbb
xchg
test
cmpl
scas
dec
bound
jne
sbb
and
pop
dec
push
in
mov
pop
add
pop
and
and
jmp
sahf
outsb
and
cmpsb
out
pop
std
arpl
and
mov
push
outsb
outsl
push
movsb
fldl
pop
call
xor
aaa
inc
xchg
jg
jne
loope
aad
sbb
addr16
or
push
pop
popa
adc
cmc
pop
add
pop
inc
xchg
andl
adc
fcomp
pop
xor
mov
add
scas
pop
xor
inc
push
rolb
imul
leave
cwtl
pop
sbbl
dec
inc
and
push
imul
adc
push
cmp
pop
loope
cld
dec
cmp
xchg
jo
inc
sbbl
xchg
pop
and
mov
dec
test
negl
outsl
push
cs
les
mov
jl
mov
fmul
mov
cli
lds
mov
test
dec
test
adc
sti
cmp
divb
pushf
push
push
bound
cmpsb
mov
xchg
xchg
mov
cld
and
dec
xchg
inc
aam
cmc
push
push
mov
dec
mov
xor
leave
stos
mov
mov
shlb
add
mov
xor
mov
xchg
pop
in
push
ret
jno
sub
add
pop
cmp
pop
dec
mov
sbb
cmp
jne
pop
je
sbb
adc
imul
inc
push
mov
hlt
fistps
sarl
sub
jne
lods
lcall
pop
lret
push
push
and
push
xchg
lock
repz
xchg
ret
fwait
sub
pop
push
pop
mov
sub
cmp
sub
inc
mov
mov
leave
daa
cmp
cmp
ret
xchg
sbb
pop
sbb
in
or
push
add
jb
dec
sub
adc
or
rcrl
dec
test
jnp
mov
aad
jmp
jecxz
arpl
xchg
push
mov
ret
lahf
js
inc
pop
xchg
daa
cli
fstpt
pusha
pop
int
jmp
xchg
sbb
leave
in
and
fsubrs
inc
scas
arpl
mov
pop
jle
repz
cmp
inc
add
lret
paddsb
dec
outsl
mov
jp
test
sbb
cmpsl
pop
sub
push
dec
mov
push
jg
stc
dec
imul
cs
pop
fninit
push
sbb
jnp
test
or
pop
aas
dec
inc
pop
enter
xchg
cmp
add
popa
pop
stc
pop
insl
lea
push
xchg
xchg
pop
and
xchg
aad
test
pop
jne
adc
pop
push
xchg
sbb
popf
cwtl
xor
shrl
pop
inc
int
adc
test
out
sti
ljmp
xchg
pop
lret
pop
decb
gs
mov
divl
add
cmpsb
jbe
add
fcomps
lods
test
inc
add
out
adc
adc
adcl
and
fmuls
xor
imul
jo
mov
test
ss
aad
jbe
repnz
xchg
pop
and
push
cwtl
pop
ret
ljmp
jle,pn
pop
lret
dec
mov
inc
lock
cmp
arpl
jle
fcomp
pop
or
push
fwait
sub
gs
fisubl
adc
mov
orb
pop
adc
arpl
or
fptan
movhlps
gs
pop
fiadds
pop
fnstsw
cmp
mov
xchg
sbb
and
add
dec
pop
xor
sbb
sub
rcl
lcall
jle
mov
ret
xor
repz
pop
sbb
sbb
pusha
cmp
pop
sahf
add
and
adc
pop
pop
bound
mov
pop
int
sbb
xchg
fcoms
xchg
aad
or
mov
xchg
cli
and
loope
pop
pop
mov
push
inc
pop
xor
fidivrs
dec
and
mov
or
shlb
dec
test
or
ficoml
fst
inc
into
mov
leave
push
inc
movsb
loopne
cmp
jbe,pt
cs
cs
or
pushf
xor
cwtl
andb
mov
nop
push
cmp
fisubl
outsl
mov
inc
popa
sti
sahf
jecxz
pop
push
aad
ljmp
cmp
mov
pop
jne
and
lds
pop
mov
dec
dec
mov
sbb
lret
stos
lds
or
std
xchg
mull
int
inc
dec
scas
jp
sub
mov
jle
repnz
fldl
je
pop
dec
push
push
jle
sbb
inc
pop
es
xchg
loopne
stc
lcall
insb
test
scas
and
stos
add
mov
pop
and
pop
dec
hlt
pop
adc
push
fidivl
push
xchg
xor
inc
or
fdivs
sbb
lret
std
daa
into
dec
fisubs
push
xor
pop
dec
xor
mov
mov
das
xor
pop
pop
lret
cli
adc
pop
push
sub
xor
jge
pop
js
pusha
push
mov
daa
add
pop
sarb
fsub
ret
test
jne
pop
ficoms
push
fists
inc
outsl
pop
pop
xchg
leave
jmp
sbb
repz
jne
push
xorb
data16
lods
shlb
imul
lahf
jmp
sbb
shrl
aam
rol
mov
pop
pop
and
xchg
xchg
roll
sbb
ret
pop
inc
push
jmp
popf
pop
mov
inc
pusha
mov
mov
icebp
and
pop
adc
ficomps
lea
test
ljmp
push
out
ss
dec
inc
movsl
daa
out
pop
imul
std
pop
and
test
push
pop
cmpsl
xchg
xchg
ljmp
test
into
testb
xor
mov
xchg
pop
mov
adc
mov
push
xor
es
lock
add
loop
in
lods
mov
fucomip
negb
cmp
mov
xor
sub
mov
sti
pop
inc
stc
cmp
sbb
xor
les
fistpl
daa
in
add
int
pop
jmp
dec
fstps
xchg
outsl
pop
call
pusha
xchg
pop
mov
in
mov
lds
mov
inc
jg
ret
dec
cmp
scas
dec
out
jecxz
aad
insl
push
sbb
sarl
pop
inc
sub
insb
leave
jo
lds
scas
xor
fwait
aam
jne
dec
mov
test
shlb
addr16
mov
fstp
push
or
cli
fcom
adc
lret
push
adc
cmp
pop
xor
and
std
pop
into
push
negl
xchg
pop
adc
test
repz
adc
pushf
pop
flds
in
test
stos
lahf
adc
or
cmp
and
stc
push
ficompl
sub
fidivl
ja
and
push
xor
outsl
xor
pop
push
pusha
push
insb
push
sub
outsl
adc
mov
aad
pop
dec
shrl
push
push
and
fs
popa
popf
pop
pop
test
mov
or
mov
pop
mov
ljmp
stos
mov
or
sbb
dec
mov
push
insl
mov
mov
dec
inc
xchg
out
pop
scas
nop
stos
pop
int
ret
fldcw
jmp
xor
or
stos
ret
hlt
pop
adc
push
ljmp
xchg
cwtl
add
stos
sub
stos
pop
sub
repz
mov
sub
lcall
pop
adcl
mov
xchg
pop
xchg
mov
pop
pop
jo
pop
pop
mov
push
pop
arpl
ss
jae
add
insl
xchg
jmp
pop
frstor
push
out
movaps
in
xchg
test
push
push
dec
fisubrl
mov
gs
cltd
popa
or
shrb
add
push
jbe
popf
sub
inc
mov
jbe
dec
cs
xchg
pop
cmp
mov
or
imul
jmp
arpl
jae
fsubrs
mov
xor
jbe
fnstenv
xchg
dec
std
and
sbb
or
and
push
sbb
clc
call
pop
push
inc
xchg
mov
push
fistps
icebp
pop
daa
enter
xor
push
clc
imul
fwait
arpl
fcomps
inc
fisubrl
gs
int3
pop
test
aaa
clc
adc
fsts
cmp
pop
xchg
rorl
mov
mov
pusha
push
sub
test
movups
test
cmpl
scas
mov
jmp
cmp
pop
sbb
add
pop
xchg
adc
and
sbbb
push
cmp
xchg
cmp
sub
jno
shll
jecxz
inc
add
mov
dec
or
pop
push
or
orl
js
dec
loop
int3
cmp
xor
loope
sbb
jle
jns
jmp
jb
and
mov
aad
cmp
adcb
repz
cmp
inc
sbb
mov
lock
incl
pop
mov
pusha
ss
fimull
or
pop
add
push
loop
pop
inc
sub
add
mov
jmp
jmp
aas
leave
push
fimull
mov
shlb
ljmp
cmc
iret
mov
inc
dec
jbe
insl
xchg
pop
repnz
xchg
inc
pop
or
leave
jae
shrb
xchg
cmp
xchg
stos
dec
rcrl
push
dec
jb
lock
es
mov
mov
cmp
pop
adc
sub
in
and
or
jge
xchg
fcompl
push
mov
leave
out
xorb
ljmp
push
and
push
dec
xor
pop
mov
lock
pop
pop
mov
popa
repnz
or
pop
mov
notb
leave
sub
pop
mov
inc
mov
popa
adcb
sub
add
inc
add
dec
add
mov
inc
pop
cs
push
inc
push
sub
pop
push
add
xchg
out
lds
and
inc
pop
bound
jecxz
push
in
xchg
test
sub
mov
and
and
fsts
movl
test
xor
cmpl
or
pop
cmp
mov
daa
popa
add
add
dec
mov
in
cmp
adc
pop
lcall
aam
push
jecxz
jbe
pop
mov
fbstp
pop
xchg
mov
or
in
pop
leave
ret
push
cmp
cmpsb
adc
pop
cld
pop
sbbb
adc
arpl
push
push
sbbl
inc
mov
push
fs
ss
dec
adc
orl
movsl
or
and
cli
jne
and
push
dec
insl
jno
pop
jmp
pop
sbb
fwait
push
cmp
mov
add
testl
pop
addr16
and
adc
push
pushw
jg
jmp
push
ss
repnz
lret
sbb
xchg
lock
sub
xchg
push
pop
push
pop
adc
mov
pop
std
push
sub
pop
xor
mov
add
insl
inc
push
call
flds
ret
xchg
in
sub
add
push
mov
add
jbe
ret
sub
dec
pop
mov
sbb
cmp
and
jl
andl
mov
jge
clc
pop
pop
mov
add
jbe
add
sub
sub
nop
pop
or
mull
out
addr16
mov
jl
mov
fs
notl
dec
sbb
cmp
mov
push
dec
aas
mov
sbb
mov
pop
rolb
cmp
mov
das
mov
cmp
ret
adc
push
mov
pop
aad
xlat
adc
shlb
mov
sbbb
sarb
pop
adc
add
or
dec
jmp
shrb
add
incb
cmp
inc
push
mov
pop
or
arpl
pop
cli
or
xor
pop
mov
mov
pop
gs
add
sbb
jo
jmp
xchg
pop
cmpl
in
push
sbb
pop
pop
dec
and
cli
call
std
cmp
jp
cmp
fimull
cmpsb
popa
sbb
inc
mov
sbb
and
ja
inc
pop
pop
daa
dec
jno
rorb
cmpsl
push
dec
push
sbb
mov
lea
push
sub
inc
push
jae
rorl
dec
gs
imul
jae
xor
add
jmp
inc
or
pop
sub
int3
pusha
sub
mov
inc
shr
fisttpll
shrl
push
ljmp
pop
dec
mov
js
pop
jmp
lcallw
cltd
sbb
lods
jmp
push
mov
push
add
push
cmp
xor
mov
int3
cmp
jg
sub
ret
lret
add
pop
adc
in
pop
aaa
icebp
pop
sbb
dec
dec
das
pop
and
test
inc
pop
or
leave
xchg
adc
stos
cmp
movsb
adc
sbbl
sub
aam
adc
jbe
inc
mov
mov
insb
clc
mov
sbbb
dec
fsubl
fwait
pop
ret
cmpl
out
das
push
dec
fdivr
sti
pop
outsb
aam
hlt
adc
in
push
jae
jl
xchg
out
out
adc
in
mov
jne
idivl
adc
dec
lret
mov
or
add
ja
aaa
lret
push
js
loope
lea
dec
or
or
xchg
and
mov
stos
test
mov
mov
icebp
jnp
jo
loop
xchg
mull
add
xchg
rorl
mov
push
adc
pop
dec
adc
pop
sbb
addb
scas
xor
in
into
pop
and
push
aas
dec
rcll
or
cmp
mov
sub
ljmp
adc
lret
mov
sub
movsb
pop
and
sbb
mov
xor
mov
pop
xchg
xor
cltd
or
adc
test
push
or
mov
jecxz
push
call
out
xor
add
or
lcall
insb
inc
cmp
xor
xchg
in
sarb
setne
xchg
add
jmp
cmp
shl
enter
leave
daa
arpl
std
sub
shr
sub
enter
add
jmp
aam
pop
push
stos
lds
mov
xor
testl
fisttpl
adc
stc
fisttps
jo
pop
gs
pop
sbb
push
ljmp
or
add
fistl
jecxz
jns
out
gs
js
inc
and
adc
mov
mov
or
hlt
inc
push
pop
stos
mov
pop
popa
fisttps
pop
sbb
ret
mov
push
add
in
jmp
fdivl
pop
dec
jbe
adc
rcrl
inc
pop
xor
insl
add
inc
pusha
hlt
and
or
lea
sahf
dec
jmp
mov
ret
arpl
sahf
inc
pop
xor
int3
insl
ja
cltd
lcall
iret
dec
push
or
sub
shll
fsts
cmp
test
outsl
jle
pop
add
imul
or
cli
push
xor
xor
fdivrs
or
hlt
arpl
xchg
xchg
or
notl
mov
pop
jnp
imul
push
add
icebp
inc
dec
pushl
fnstenv
dec
cltd
outsb
rcll
into
lcall
mov
mov
dec
andb
es
dec
daa
in
push
pop
ret
inc
fwait
or
push
cmp
dec
and
scas
test
sbb
pop
and
jo
jnp
xchg
sub
pop
push
jne
jo
cmpsb
imul
pop
inc
jmp
or
push
leave
sbb
push
pop
les
mov
int
push
inc
cmc
std
mov
and
mov
dec
xchg
inc
in
cwtl
rclb
pushf
cmc
adc
push
pusha
xchg
add
fwait
or
incl
lds
lret
fisubl
pop
dec
sbb
cmp
cs
dec
dec
lcall
shlb
fcomps
xchg
test
sub
aad
ja
out
mov
jbe
and
pop
cmp
jns
adc
sbb
xor
popf
sbb
pop
icebp
out
fdivs
in
das
xor
dec
cmp
push
arpl
adc
xor
leave
add
push
xchg
mov
jne
cmp
pop
and
popf
pop
sbb
ret
jecxz
pop
lret
push
sbb
push
push
sbb
add
sub
push
pop
inc
inc
push
mov
pop
mov
scas
jmp
out
test
dec
inc
stc
iret
stos
or
mov
fwait
xchg
movsb
sbb
leave
shrb
loope
xchg
lcall
shlb
test
jge
aas
add
in
mov
aad
pop
enter
add
jmp
mov
and
mov
pop
sbb
add
nop
push
push
xchg
movsb
dec
xchg
pop
inc
pop
rorb
and
popl
xchg
mov
out
cmc
pop
insl
scas
pop
mov
loop
inc
pop
inc
push
scas
stc
fwait
cwtl
shl
push
mov
xor
sbb
push
add
xor
push
mov
sbb
inc
pop
test
sbb
loop
jl
clc
xchg
in
pop
cmp
stos
gs
or
push
or
movsb
mov
adc
pop
pop
push
xor
push
pop
rolb
insl
sbb
pusha
pop
xchg
pop
adc
scas
out
daa
in
xchg
int
cmp
sbb
loopne
inc
pop
mov
in
scas
mov
nop
mov
dec
mov
insb
fwait
mov
dec
jb
xchg
scas
inc
cs
popf
push
lock
stc
pop
test
sub
idivb
pop
or
lret
inc
les
imul
mov
movsl
pop
jg
mov
jp
adc
mov
cs
mov
adc
mov
and
lock
jmp
xor
mov
or
pop
aam
subl
xor
xchg
cmp
cmp
ret
aad
rcr
scas
fmull
jecxz
jne
clc
sarl
xor
mov
jnp
push
add
sbb
dec
mov
imul
pop
push
fs
cmp
int
inc
or
mov
pop
and
and
push
lahf
lret
add
pop
dec
into
pop
movsb
data16
jbe
pop
push
sbb
push
mov
jl
push
imul
push
xor
push
mov
flds
pop
jmp
xor
mov
in
lcall
inc
and
imul
pop
leave
loope
dec
stos
adc
xchg
rcrb
rol
aas
pop
loop
cmc
cltd
cmp
jg
jecxz
mov
jle
pop
movl
sbb
scas
cmp
adc
jmp
cmpl
jae
jno
push
clc
sub
mov
pop
nop
jmp
inc
imul
pop
clc
mov
push
mov
inc
add
ret
pop
push
pop
fbstp
pusha
sub
call
adc
fucomp
es
lock
push
pop
dec
mov
xchg
or
add
sbb
pop
jmp
xor
orl
pop
push
xchg
loopne
sbb
je
out
cmp
pop
ficoml
ret
and
mov
cld
orl
iret
lods
inc
ljmp
push
fcompl
mov
andl
fisubrs
inc
pop
dec
lds
xor
adc
mov
pop
pop
sub
push
mov
lods
mov
adcb
bound
ljmp
cmpsl
aam
out
arpl
inc
cs
or
fnstsw
pop
push
dec
sub
pop
xchg
inc
daa
add
pop
sbb
adc
sbb
pop
mov
lds
push
imul
pop
cmp
dec
adc
fcomp
sbb
cmpsb
dec
lds
pop
stc
loope
xor
inc
mov
push
fistpl
sbb
shr
mov
jp
inc
push
mov
mov
and
ror
jmp
cmp
or
pusha
or
cmp
and
xor
pop
lret
and
js
pop
out
fdiv
mov
sub
or
mov
cmp
cmp
jne
mov
jg
out
ja
imul
jnp
mov
sbb
push
pop
mov
push
inc
addr16
pop
adc
sub
sub
add
mov
out
xor
pop
pop
cli
push
ljmp
mov
mov
ss
test
lods
in
pusha
pop
xchg
pop
cmpsb
inc
cwtl
mov
pop
ja
add
xor
push
adc
stc
ror
sub
fildl
sub
sahf
pop
bound
xor
inc
pop
push
int3
mov
std
test
adc
inc
jge
xchg
pop
mov
jl
roll
pop
scas
push
rorl
pop
push
mov
lods
pop
pushf
lea
mov
push
in
cli
sub
rcll
dec
or
fldl
jmp
out
xchg
pop
add
pop
sub
sti
add
add
xchg
cli
inc
pop
int
add
xchg
negb
mov
lret
sub
or
rcrb
aam
sti
mov
mov
fstps
xor
add
addl
std
cmp
jg
sahf
icebp
mov
jp
test
clc
xchg
jbe
mov
xchg
xchg
movsb
xor
popa
pop
inc
sbb
push
add
adc
or
nop
xchg
pop
in
movsl
cmp
mov
daa
xor
or
lret
mov
mov
pop
adcl
pop
dec
int3
fildl
andb
ljmp
out
je
dec
mov
push
xor
pushf
mov
xor
pop
and
inc
sub
outsb
sbb
dec
cmp
pop
dec
dec
ret
nop
mov
in
cmc
adc
aas
push
dec
push
movsl
std
sub
mov
cmpsl
jne
push
call
xor
dec
mov
mov
pop
adc
add
and
ss
mov
rcrl
inc
jecxz
iret
mov
dec
adc
or
in
cmp
maxps
rorl
sub
xor
pop
mov
sub
stos
xor
add
push
push
mov
fistps
fs
pop
dec
adc
mov
or
aad
jle
pop
xor
jo
push
fs
cmpsb
js
mov
sbb
jg
mov
pop
in
push
ret
inc
add
adc
and
xchg
sbb
cmp
mov
test
xchg
xor
pop
mov
aas
push
sub
and
push
or
imul
pop
push
fldl
mov
xchg
movsl
jp
push
int
jmp
hlt
inc
jae
sbbb
test
pop
push
mov
push
push
pop
mov
or
loop
or
push
inc
push
mov
fildl
sbb
sub
pop
enter
cmp
dec
lret
jno
jle
ret
push
sbb
mov
jl
mov
test
push
mov
in
out
mov
mov
pop
ljmp
jbe
push
loop
mov
insb
or
dec
adc
sbb
push
pop
push
stc
mov
or
push
ret
push
adc
pop
pop
aas
inc
movsb
fiaddl
push
add
in
and
testl
ljmp
ficomps
and
aaa
adc
lar
mov
xchg
cmp
cmp
xorb
inc
in
pusha
ljmp
inc
push
enter
clc
mov
pop
mov
add
pop
xchg
sub
dec
std
dec
fsubs
cmpsb
rorb
rcrl
dec
sub
lock
mov
push
dec
adc
decl
push
call
ficompl
sub
test
push
ficoml
push
sub
insl
pop
cltd
mov
jp
sbb
cmpsl
push
aas
cmp
sub
mov
jg
mov
outsb
push
push
stos
mov
sub
mov
stos
dec
pusha
aam
pop
xchg
add
pop
pop
out
shl
push
push
jne
bound
or
jge
push
out
cmp
int
jmp
jg
pop
es
hlt
sub
insl
add
sbb
lods
outsl
mov
and
xor
lret
pop
xor
fcoms
add
ja
sbb
cmp
mov
incl
pop
pop
dec
jbe
sbb
inc
or
sub
mov
call
pop
add
add
mov
mov
rcll
test
push
andl
push
movsl
sbb
call
xchg
in
nop
addr16
xchg
outsb
rcrb
sub
jp
pusha
or
enter
xchg
test
imul
hlt
pop
push
mov
nop
push
lret
or
adc
mov
adc
sbbb
xor
push
xchg
jmp
dec
pop
in
push
arpl
cmpsl
test
xor
cld
pusha
push
inc
fisttps
xor
inc
inc
clc
pop
push
imul
inc
jge
dec
les
popa
cmp
inc
xchg
and
nop
test
sub
push
xorl
popa
or
adc
add
sti
dec
cmp
pop
in
test
push
push
mov
pop
and
cmpsb
imul
mov
dec
shl
push
pop
ss
es
xlat
push
cmovl
cltd
stc
pop
cmc
cmp
jmp
std
cli
push
pop
sbb
mov
ret
and
pop
leave
sub
adc
jns
mov
mov
pop
jmp
dec
or
sbbb
mov
push
inc
and
pop
add
and
and
fistps
cmpl
jmp
jle
push
pop
xchg
es
pop
les
fildll
push
sub
adc
mov
pop
ret
and
arpl
add
es
push
pop
leave
push
shll
jmp
in
mov
mov
push
mov
xchg
js
ss
pop
adc
lea
pop
and
aad
push
rcrl
add
jo
sbb
mov
or
mov
mov
pop
mov
push
jecxz
sbb
xor
or
mov
aas
popa
mov
push
add
mov
leave
jmp
mov
imul
pop
test
sub
jmp
pop
mov
xchg
stos
mov
test
mov
mov
add
mov
or
or
pop
push
pop
fwait
add
mov
mov
and
mov
xor
orb
inc
cltd
sbb
mov
sbb
push
cmp
test
sub
jbe
mov
loope
cmp
ret
negb
push
sub
adc
push
mov
loope
scas
ja
lods
xor
in
insb
rcrl
xchg
xor
jmp
pop
jns
xchg
dec
push
rcrb
adc
std
cwtl
push
pop
dec
sahf
pop
cmp
add
jg
pop
cmp
and
mov
push
push
insl
stos
adc
and
negl
pop
sub
lds
les
mov
in
bound
lea
push
pop
cmp
cmp
dec
cmp
xchg
mov
or
mov
push
adc
jne
add
ss
arpl
push
pop
imul
jge
push
sti
pop
push
jbe
xlat
jno
in
mov
cmp
pop
inc
jmp
lea
gs
dec
fnstsw
in
pop
dec
fadd
adc
adcl
xchg
sarl
pop
fnstcw
pop
dec
ret
mov
push
sti
jge
sub
cmp
pop
adc
pop
sub
adc
dec
pop
inc
int
dec
mov
lods
mov
dec
or
add
hlt
push
insl
mov
and
sbbl
pop
cmc
movlps
pop
lahf
pop
mov
shlb
insb
add
shrl
cmp
inc
pop
je
or
sub
jno
pop
mov
push
jnp
ja
pop
mov
test
push
jne
inc
rorb
sub
orl
mov
imul
dec
in
mov
jb
pop
xorl
push
lahf
push
cwtl
pop
adc
push
inc
daa
mov
add
pushl
jp
pop
xchg
stc
imul
mov
and
mov
movsl
unpcklps
dec
std
add
or
xchg
pop
mov
push
and
in
imul
sahf
cltd
test
pop
out
pop
out
imul
ficompl
push
pop
xchg
adc
sub
mov
aam
fwait
das
push
enter
pop
in
and
lock
or
or
mov
add
fcoms
sbb
dec
enter
and
int3
pop
sub
leave
rclb
xchg
pop
or
mov
mov
sub
jecxz
mov
sarb
pop
fcoms
dec
sub
mov
and
sti
aam
lcall
or
and
dec
fld
ficomps
jge,pn
pop
and
out
iret
mov
call
ja
or
movsl
inc
insl
or
popf
cli
xchg
push
sub
xor
icebp
pop
mov
mov
adc
jmp
mov
add
and
stc
enter
imul
sub
mov
push
pop
add
xor
les
cmp
inc
and
test
pop
jle
xor
ds
pop
xor
xchg
inc
daa
jecxz
cmp
sub
lea
inc
repz
pop
mov
cmp
subl
call
addr16
sti
add
repnz
adc
dec
enter
nop
xchg
jns
adc
ret
and
push
cmp
rcll
leave
popf
pop
push
inc
mov
pop
push
lea
adc
adc
jecxz
aas
popf
dec
mov
lds
lahf
repnz
ljmp
jns
shlb
push
sbb
dec
repz
and
xchg
insb
lds
fisubrl
mov
push
inc
scas
inc
mov
decb
mov
pop
dec
mov
cmp
gs
xor
pop
sbb
pop
adc
and
jmp
dec
imul
dec
ret
pop
pop
pop
hlt
icebp
loopne
lods
or
sbb
or
push
stos
out
pop
sbb
inc
rclb
into
cmp
sbb
out
add
arpl
sbb
cwtl
pusha
cltd
out
sbb
and
andl
fldenv
mov
pop
mov
shll
sub
or
rcrl
int3
mov
aam
jne
dec
mov
jo
cmp
pop
and
adc
xor
clc
jmp
inc
outsb
xchg
dec
dec
leave
js
lcall
mov
push
call
inc
mov
ret
xchg
mov
popf
mov
xlat
inc
sub
sbb
pop
mov
cmc
jae
or
xchg
ljmp
dec
mov
addr16
pop
cmp
push
push
inc
add
sbb
rolb
cmpsl
ja
pop
pop
adc
mov
and
dec
fistps
inc
adc
pop
or
fistpl
cmpl
stos
lret
mov
sub
adc
fisttpl
pop
mov
pop
into
loop,pn
inc
xchg
lock
sbb
fs
inc
inc
test
jo
sti
stos
aaa
adc
or
les
sbb
pop
into
push
adc
mov
gs
cmpsl
add
mov
cmc
and
or
adc
and
hlt
data16
xchg
pop
sbb
push
pop
addb
loop
pop
jmp
nop
xchg
or
sbb
xor
js
adc
stos
mov
sub
fld
dec
fadds
xor
jo
shlb
fldenv
inc
or
aad
mov
cld
inc
mov
inc
push
fiaddl
push
lea
xor
sti
push
mov
sub
cmpsb
mov
or
mov
or
dec
leave
mov
movsl
rorl
add
ljmp
loopne
xor
test
and
divl
pop
cli
or
xchg
cmpsb
pop
andl
xor
sbb
outsb
in
and
or
cld
xor
lahf
jecxz
ss
pop
adc
cmp
movzwl
inc
add
jmp
movsl
in
fdivs
xor
mov
push
add
addr16
push
ret
xor
jmp
pop
dec
lds
cmp
jecxz
mov
pop
jmp
es
das
add
popa
dec
inc
mov
fwait
pop
call
xor
faddl
or
and
push
mov
adc
push
cltd
adc
pop
xor
cmp
sub
add
or
jecxz
push
mov
fsubl
pushf
cltd
mov
sub
dec
sub
mov
xor
fsubs
popa
jo
sbb
xchg
lock
pop
xchg
cmc
fbld
pop
mov
xor
jmp
jge
or
pop
pop
mov
cmpsl
and
out
jecxz
out
dec
int3
adc
push
sbbl
aad
and
icebp
inc
pop
loope
xchg
cld
sub
xor
or
lcall
pop
or
xor
test
in
js
jns
loope
push
es
pop
loopne
les
pop
cmp
push
pop
incl
xchg
pop
shlb
lods
lds
ljmp
js
xor
and
pop
cmc
mov
sbb
aam
lcall
jmp
nop
sbbl
adc
or
xor
popa
scas
jnp
cs
xchg
xor
test
test
sbbb
inc
mov
mov
loope
dec
cmp
cmp
adc
jb
xchg
push
mov
sbbl
add
les
imul
fcmovnu
das
and
cwtl
lock
repz
jp
subl
push
nop
daa
imul
jmp
sahf
lcall
lret
cmp
imul
imul
std
sbb
jbe
push
or
add
xor
imul
xchg
and
and
mov
std
dec
push
jg
jo
mov
loop
jbe
mov
sbb
push
imul
inc
movsl
push
fwait
mov
push
sbb
daa
cmp
inc
or
pop
or
lds
or
jbe
sarb
adc
or
in
daa
push
jecxz
dec
int
push
jbe
ficomps
in
add
mov
cmp
mov
mov
pop
imul
and
jbe
and
mov
cltd
sti
mov
mov
das
pop
clc
xor
lods
sbb
jp
push
add
aam
js
jbe
cmp
and
pop
inc
cltd
inc
pop
dec
pop
cmpsl
out
xor
sbb
das
in
je
pop
shll
ret
pop
lock
xchg
push
pusha
mov
test
pop
fdivs
imul
sar
dec
adc
jb
in
sub
hlt
pop
mov
pop
in
mov
dec
add
sub
movsb
pusha
cli
stos
push
push
fistpll
pop
sbb
mov
daa
lcall
jnp
enter
pop
hlt
lods
sbb
pop
cld
mov
add
or
adcl
cltd
sbb
ja
xor
aad
jnp
stc
sarl
dec
or
mov
negl
and
sub
push
sti
fwait
push
push
dec
std
or
push
adc
ja
and
gs
ss
rcrl
fdivs
aad
pusha
pop
test
push
mov
and
nop
or
mov
push
add
xchg
or
inc
xor
test
inc
jo
sbbb
mov
leave
push
imul
bound
cmp
fbld
xor
shrb
insb
das
mov
lret
jnp
dec
lcall
and
fimuls
jo
xor
or
sbbl
adc
push
xchg
imul
aaa
pop
mov
add
test
adc
ja
fstpl
or
push
sub
and
pop
xchg
into
mov
sub
pop
mov
movsl
jge
fidivrs
pop
jp
push
lods
lods
pop
mov
pop
push
subb
repz
into
xchg
or
fldl2t
test
xlat
pop
mov
je
add
push
mov
flds
sbb
pop
pop
sub
into
mov
jae
jg
stos
jl
mov
push
sahf
fsubr
arpl
and
stos
idiv
pop
cmc
jbe
mov
mov
mov
xor
test
loopne
test
pushf
cmp
jecxz
jae
pop
xor
xor
push
add
es
xor
dec
clc
shl
cs
pop
out
push
popa
push
int3
mov
ljmp
cmp
xchg
movsl
out
dec
xor
ffreep
pusha
cmp
imul
ja
bound
add
xchg
pop
sub
ljmp
mov
sub
addb
cltd
or
pop
push
daa
pop
mov
pop
and
inc
jbe
pop
aad
imul
pop
imul
push
jmp
jb
sub
stc
pop
and
add
nop
push
push
outsl
add
enter
mov
mov
inc
xor
pop
dec
push
rcl
es
sbb
cmp
imul
rorl
int3
xchg
incl
or
sbb
and
ss
push
push
mov
pop
adc
pop
and
icebp
xor
pop
mov
je
inc
cli
xor
pop
push
mov
inc
pop
pop
test
rorl
adc
cmpsl
xor
pop
sbbl
pop
daa
in
sbb
xor
pop
sbb
leave
fsubrs
mov
test
mov
pop
ret
loop
pop
dec
inc
sub
insb
loopne
push
xchg
sbbl
ret
pop
or
mov
jle
add
cli
mov
flds
das
jmp
xor
andb
push
sub
fsubrs
pop
jmp
ja
add
iret
inc
sarb
add
pop
dec
jbe
pop
pop
les
push
or
rcll
push
jmp
and
pop
testl
jecxz
pop
test
or
xor
pop
leave
scas
cmp
sti
xchg
clc
jnp
enter
inc
push
or
clc
mov
sahf
add
cmpsb
loop
pop
decl
push
addb
mov
int3
jae
adc
jmp
push
mov
pop
stos
or
pop
icebp
pop
pop
push
mov
jmp
push
cmp
jne
xchg
cwtl
push
mov
xor
into
imul
pop
add
pop
in
int
jmp
imul
pop
xchg
popf
cs
pop
sub
inc
jne
adc
arpl
pop
dec
int
cmpsl
xchg
lcall
xor
scas
scas
push
pop
ja
push
ss
add
xor
in
stos
xchg
pop
xchg
imul
mov
icebp
test
aaa
andb
repz
mov
loopne
adc
fistpl
xchg
cmc
jno
cli
inc
jmp
in
fcmovb
xchg
sbbb
and
int3
sub
xchg
xchg
pop
xor
std
jecxz
jg
inc
jmp
sbb
and
dec
clc
ljmp
in
mov
mov
fldl
repnz
xchg
aad
adc
stc
adc
imul
in
fists
aad
pop
jge
sub
pop
loope
jg
sbb
pop
xchg
mov
adc
in
rcll
pop
cmp
mov
and
dec
mov
test
lahf
sbb
push
pop
lret
loopne
dec
push
das
pusha
imul
dec
fidivrl
loop
xor
mov
cli
enter
add
in
add
es
inc
adc
add
aad
fucom
jbe
mov
pop
adc
aam
stos
sbb
mov
outsl
ja
test
pop
andl
les
mov
sub
inc
nop
pop
inc
push
mov
dec
lods
loope
cmc
loop
sbbl
add
and
iret
mov
sub
mov
lock
lcall
push
into
repnz
out
cltd
pop
sbb
lea
shlb
nop
mov
in
mov
cmpsl
jecxz
int
jne
sar
clc
jp
mov
aam
popf
lcall
sbb
int3
dec
enter
push
sbb
lahf
add
pop
inc
std
push
shll
in
hlt
outsl
push
les
or
test
mov
xor
dec
and
cmp
inc
add
mov
xor
aas
in
pop
aas
or
cmp
add
sub
and
jecxz
fstl
sahf
cmc
xchg
cld
js
jg
pop
cs
movsb
fmull
loope
pop
out
aas
lock
ret
test
mov
pop
dec
mov
movsb
mov
subb
jg
dec
je
sbb
mov
fstl
cs
push
jmp
mov
nop
mov
outsl
pop
adc
vorps
in
pushf
rolb
and
movsl
push
jmp
pop
pop
ret
aaa
mov
insl
xlat
pop
rorb
inc
fiadds
xchg
pop
or
fcomps
mov
or
sbb
shrb
pop
insl
sbb
lds
add
jecxz
mov
in
cltd
nop
jg
mov
hlt
mov
pop
or
pusha
add
ljmp
push
and
xchg
pop
out
cmp
fwait
inc
pop
in
pop
in
inc
mov
push
push
stos
mov
mov
add
sub
imul
and
adc
aas
sub
pop
loop
xchg
xor
sub
and
mov
xchg
lret
lea
inc
jo
ret
push
roll
inc
xchg
cs
pop
inc
pop
enter
xchg
cwtl
jl
pop
push
cmp
mov
inc
pop
inc
bound
jg
push
mov
sbb
pop
shrl
mov
pop
pop
jmp
lods
jmp
popa
or
mov
pusha
push
pop
lea
add
or
leave
add
hlt
das
inc
inc
xchg
adcb
fcompl
dec
and
les
sub
and
jae
add
xchg
aas
pop
sbb
xchg
jl
leave
adc
fmuls
daa
fs
popl
dec
push
sub
leave
or
pop
es
cmp
sbb
fidivrl
leave
jns
movsl
jnp
mov
adc
arpl
dec
movsb
imul
pop
xor
adc
sarb
rol
pop
adc
xor
push
sub
push
and
popf
arpl
leave
dec
in
dec
pop
sub
sbb
dec
adc
pop
pop
pop
hlt
mov
adc
or
iret
or
add
icebp
gs
shlb
jp
sbb
addr16
pop
rorl
inc
mov
pop
inc
pop
pop
sahf
and
jmp
clc
mov
push
imul
dec
mov
push
fdivrs
xchg
pop
lods
mov
aas
nop
fwait
dec
lds
and
sti
mov
je
mov
xor
sbb
lcall
jle
sbb
ds
sub
jns
inc
xor
sub
mov
dec
gs
xor
sbb
push
or
mov
or
xchg
push
outsb
rcr
ljmp
mov
inc
sbb
sub
adc
xor
cli
or
stos
imul
inc
sbb
dec
xchg
push
and
xchg
push
leave
jnp
pop
lods
adc
out
sbb
ficompl
push
pop
and
movl
pusha
adc
mov
ja
aam
cmpb
bound
popf
xor
xchg
xchg
imul
adc
add
push
pop
cmp
mov
pop
aaa
inc
sub
push
push
into
dec
cmp
stc
rcrb
cmpsb
cmp
add
xorl
test
lds
sub
sub
pop
rclb
and
les
dec
nop
push
push
fadds
jl
xchg
cmpl
stc
jg
mov
cltd
mov
insb
int
push
dec
sub
adc
ja
aas
cltd
fists
pop
stc
mov
cld
cwtl
mov
pop
in
push
mov
add
push
add
pusha
jno
in
adc
imul
dec
push
sub
and
jbe
xchg
xchg
stc
mov
scas
sub
shrb
and
dec
dec
pop
dec
out
sbb
dec
lea
sbb
mov
pop
popf
xchg
pop
inc
pop
jmp
adc
addb
gs
pop
mov
adc
popf
inc
out
das
mov
pop
lea
mov
pop
adc
pop
movl
pop
or
fmull
or
mov
add
mov
and
push
mov
mov
mov
je
scas
adc
dec
mov
jg
jmp
gs
jecxz
push
int3
out
sub
push
and
arpl
jo
test
rcll
pop
pop
jo
dec
mov
cmp
sahf
inc
fstl
pop
mov
movsb
mov
aas
mov
stc
and
dec
add
ljmp
pop
pop
movsl
pop
adc
lock
xchg
cmpsl
repz
call
mov
inc
insb
pusha
int
xchg
jmp
test
jecxz
daa
jo
jmp
stos
ljmp
test
xchg
rcll
lahf
ret
inc
pop
incl
jmp
sbb
pop
bound
inc
sub
and
pop
sbb
xchg
rcrl
mov
sub
adc
and
fdivl
rolb
dec
aad
ljmp
mov
xchg
xor
push
or
mov
inc
mov
mov
popa
ret
add
mov
imul
int
cltd
inc
movsb
loop
stos
push
adc
out
push
stc
das
sub
and
call
cs
adc
add
sbb
gs
push
flds
test
fidivl
repnz
push
sbb
jns
inc
mov
push
sbb
cmpsb
gs
inc
shlb
xchg
dec
shl
or
pop
outsl
or
addr16
and
out
xor
imul
in
add
mov
pop
xchg
push
ds
xor
pop
adc
and
jae
test
insb
inc
pop
int3
imul
fcompl
sub
jmp
pop
push
pop
sbb
pop
add
xchg
pop
daa
mov
jecxz
cmp
and
sbb
dec
fadd
test
sbb
dec
push
leave
movsb
cld
pop
loope
push
repnz
adc
imul
jbe
mov
lods
sub
lock
sub
arpl
xchg
xchg
sbb
lret
inc
jg
pop
mov
mov
jge
mov
cmp
jp
pop
mov
push
repz
adc
pop
daa
jbe
xchg
xchg
pop
pop
outsl
enter
fistl
xbegin
fldenv
mov
xchg
push
hlt
leave
xchg
jne
pushw
cmp
push
dec
add
mov
shll
pop
jmp
pop
push
cmc
rolb
pop
in
lods
lea
and
and
mov
imul
push
mov
sbb
xor
lret
fisubl
add
push
sbb
mov
xchg
and
imul
leave
int
pop
adc
mov
jno
fcmove
inc
lret
cmp
jns
pop
mov
xchg
rorl
or
cmp
pop
pop
and
loop,pn
pop
aam
fisubrs
xlat
test
jp
jmp
sbb
xchg
push
addr16
pusha
and
lock
push
jo
jecxz
push
pop
pop
mov
cmc
dec
adc
push
imul
loope
mov
cmp
in
jns
xchg
xor
pop
pop
mov
jns
inc
xchg
in
cmp
leave
push
stc
xchg
mov
dec
pop
test
jp
inc
pop
pop
in
and
xchg
push
adc
mov
jb
clc
cmc
scas
pop
jecxz
sbb
cwtl
stc
pop
cli
push
push
loop
pop
pop
pop
push
lea
pop
and
jmp
aad
cmp
inc
fmuls
xchg
cltd
ljmp
pop
inc
xchg
sub
mov
push
pop
add
and
pop
dec
xchg
loopne
shrl
xchg
dec
add
jge
pop
cmp
jmp
jno
dec
test
jae
push
das
les
or
add
lcall
aam
pop
xchg
push
pop
sahf
push
repnz
or
outsl
push
shll
fisubrs
dec
lods
leave
jbe
and
pop
dec
inc
xchg
test
cwtl
jns
arpl
pop
push
outsl
or
das
cmp
add
push
inc
xchg
xchg
dec
dec
mov
add
jge
clc
shrb
push
sbb
push
push
mov
jnp
movsl
pop
and
or
int
dec
pop
adc
cmp
and
mov
mov
pop
in
sub
cwtl
cwtl
jbe
dec
jns
cmp
pop
mov
das
movsl
pop
fs
dec
dec
mov
outsl
outsb
dec
pop
dec
xchg
inc
pop
cwtl
inc
repnz
or
xor
dec
xor
push
dec
add
in
les
inc
push
in
pop
scas
rolb
mov
jne
lock
jle
push
loope
dec
inc
mov
clc
push
xor
push
inc
mov
clc
cmp
mov
std
jno
xchg
pop
mov
inc
push
pop
push
sbb
push
sub
jbe
pop
mov
xchg
cmp
pop
ds
adc
push
pop
ud0
in
pop
xor
test
dec
sub
fldenv
or
pop
pop
fisubl
pop
add
sub
push
sbb
rcrb
mov
vandps
xor
fwait
data16
push
jo
in
dec
insl
in
inc
or
inc
lret
inc
rcll
jecxz
dec
add
lods
scas
test
cwtl
pop
jno
push
xchg
sbb
push
xor
shll
mov
push
xor
fwait
cmpps
test
pusha
xchg
jl
xor
je
in
pop
pop
mov
ret
mov
out
repnz
out
xchg
jae
aad
sbb
ds
dec
push
cmp
cltd
xor
fstps
es
fdivrl
lret
loope
mov
fstp
sub
mov
call
xor
in
std
push
and
jnp
pop
adc
dec
push
pop
lahf
sbb
mov
add
in
xor
enter
jbe
stc
cltd
inc
sub
sbb
xor
xchg
movsb
mov
dec
fadd
sub
lock
jae
jmp
mov
jne
inc
mov
xchg
mov
sub
cvtps2pd
mov
sbb
jbe
mov
lcall
mov
iret
rcll
xchg
sbb
dec
mov
push
mov
lods
fcoms
aad
in
mov
movsl
repnz
ficomps
das
mov
xor
js
sub
pop
pop
xchg
cs
push
mov
out
mov
push
ss
dec
xor
and
test
addpd
jmp
adc
adc
repz
push
arpl
add
push
ds
cld
test
add
pop
outsl
or
cmp
aad
les
mov
inc
sub
dec
cmpl
xchg
xor
cmp
rcrl
xchg
rcr
sub
push
fadds
js
fldcw
dec
xchg
or
jno
lock
daa
in
mov
or
cld
pop
cmp
xor
pop
push
sbb
push
cmp
xor
add
les
mov
test
jle
dec
sbb
loop
push
mov
pop
ret
jl
imul
loope
xchg
cmp
pop
cs
push
ss
js
fildl
xchg
icebp
mov
mov
loope
and
inc
adc
in
insb
imul
pop
lcall
mov
pop
fsubr
and
decb
cmc
lea
clc
dec
or
xor
inc
pop
rorl
popf
xor
mov
push
fidivs
mov
pop
xchg
xchg
out
pushf
push
das
inc
pop
das
sbb
ljmp
pop
jmp
enter
pop
jbe
and
sbb
xchg
jmp
outsl
mov
cmp
cmp
adc
xor
sbb
jne
shrb
mov
push
stc
jno
push
and
pop
jb
aas
xor
sub
sub
inc
cmp
ss
inc
aam
mov
push
dec
imul
add
pop
aaa
pushf
cld
lret
mov
jno
mov
pusha
rcrb
sbb
lcall
fdivrl
cmpb
fsubrs
dec
es
je
loope
inc
std
mov
xchg
jmp
dec
sbbb
or
or
pop
pop
ja
lcall
shl
dec
leave
stos
int
push
mov
mov
cmp
add
adc
fidivrs
xor
std
popf
or
push
dec
cli
xchg
call
or
xor
jb
or
int
xchg
xchg
mov
test
push
rcl
mov
rorb
and
sbb
cmp
std
cmp
sbb
mov
out
push
jg
add
lret
sub
inc
gs
push
pop
mov
pop
ja
negb
rcrb
shl
clc
fsts
cmp
addr16
push
rcrb
push
out
sti
jae,pn
pusha
stc
xor
adcl
lahf
add
push
pop
adc
pop
pop
adc
andl
arpl
push
pop
imul
pop
pop
xor
push
jl
sbb
pop
leave
add
enterw
adc
fsts
pop
cmp
insb
jg
pop
int
jge
add
js
adc
sti
dec
xor
pop
dec
xor
out
xchg
sbb
push
jmp
nop
fnstenv
cld
adc
stos
pop
out
clc
mov
and
jmp
pop
fistps
in
and
push
xchg
jne
jns
mov
fistps
pop
inc
clc
mov
xchg
pop
shrb
addr16
xchg
pop
jmp
cli
ljmp
mov
sub
dec
lahf
sub
mov
jbe
sbb
push
mov
cmp
orl
sbb
xchg
incl
or
adc
pop
popf
adc
lcall
push
hlt
xchg
inc
arpl
cwtl
shlb
js
out
loopne
adc
dec
cmp
pop
mov
cwtl
std
pop
ret
jmp
rcrl
data16
push
push
lret
mov
sub
and
pop
lret
jae
shll
sbb
adcb
jl
lea
ss
leave
mov
es
pop
pop
movb
das
cmp
lret
les
js
adc
in
adc
inc
int3
pop
js
add
mov
test
pop
scas
and
and
arpl
ds
loope
inc
mov
sub
subps
test
test
cmp
mov
jle
pop
iret
sbb
mov
cs
fadds
addr16
xor
loope
pop
dec
ja,pt
cltd
test
cmp
adcl
imul
pop
jnp
shrb
add
pop
jge
adc
clc
enter
xor
aad
pop
in
ret
adc
mov
fs
out
lret
shll
cltd
jno
pop
adc
cmp
jl
test
jle
and
mov
pop
mov
pushl
or
xchg
adc
inc
fstpl
icebp
pop
push
cmp
inc
adc
dec
sbb
mov
sub
jno
dec
or
popa
push
xor
rcrl
in
adc
inc
mov
or
ss
scas
jle
jnp
cmp
in
ljmp
push
adc
stos
cs
int3
sub
mov
jne
or
pop
xlat
icebp
cltd
fcomps
or
addr16
cmp
ds
sbb
sub
jg
enter
or
cmp
dec
fwait
pop
or
or
xor
xor
popa
push
pop
push
dec
cld
pushf
push
test
fistps
adc
je
or
sbb
push
pop
and
sub
inc
in
mov
loop
mov
inc
pop
inc
push
cmpsb
adc
lods
pop
movsl
bound
cmp
adc
insl
xchg
lret
mov
inc
pop
sti
int3
adc
push
mov
popf
push
jecxz
lds
pushf
adcl
pusha
mov
fcmovu
inc
incl
lock
sbb
add
pop
pusha
push
shrb
popa
jns
mov
push
push
mov
jp
mov
or
pusha
bound
shrl
push
ret
popf
outsl
inc
push
inc
cli
imul
imul
stc
ret
cmp
rcl
jnp
push
test
js
pop
jne
inc
mov
mov
cld
pop
xchg
scas
mov
scas
inc
cmpsb
cmp
imul
in
pop
lock
push
push
into
das
push
adc
jmp
adc
in
test
pop
aas
jecxz
lret
lcall
pusha
pop
les
iret
adc
jl
test
add
out
mov
cmpsl
js
pop
adc
jbe
sbb
filds
fiadds
push
mov
pop
sbb
je
jge
mov
push
fs
jns
push
cwtl
and
pop
cmpsb
sbb
mov
jmp
and
loopne
mov
rcr
mov
lods
jb
test
pop
imul
stos
dec
je
sub
ja
outsb
outsb
xchg
cmp
xchg
int3
rclb
push
ret
cmp
pusha
or
inc
mov
pop
daa
popa
inc
adc
xchg
bound
cmp
push
push
int3
push
fwait
pop
test
test
jle
incl
cmp
rorb
icebp
adc
or
aad
pop
lods
arpl
popa
pop
cmpsb
pop
in
fwait
mov
out
pop
aas
sub
xchg
sbbb
fucomip
andb
adc
js
loope
fwait
int
xchg
mov
mov
icebp
push
sbb
dec
inc
adc
fcmovnb
and
or
adc
movsl
pop
iret
mov
and
icebp
push
fbstp
fistl
cmp
daa
cltd
dec
mov
jb
or
jecxz
mov
or
adcb
outsl
inc
mov
pop
jle
and
xrelease
cmp
ret
lea
fstps
ds
and
cmp
dec
inc
xchg
mov
pop
dec
mov
test
arpl
sbbb
fmull
push
in
mov
addl
fwait
sbb
mov
inc
pusha
jae
in
mov
das
stc
cli
dec
xchg
or
xor
pop
inc
pop
mov
pop
frstor
add
mov
push
push
adc
sub
dec
xlat
fidivl
adc
andb
rorb
test
pop
jne
fisttps
stc
mov
inc
jmp
pop
lea
dec
push
sti
push
push
pop
int
mov
or
mov
mov
mov
push
mov
or
ret
jne
stos
stc
cmp
lods
mov
push
sub
loopne
repz
mov
loop
cmp
das
clc
ficompl
sahf
inc
popa
jne
sti
inc
adc
add
hlt
popf
adc
adc
jb
push
test
mov
mov
dec
jge
mov
pop
mov
inc
jne
sub
sub
fistps
push
push
fcomps
pop
mov
or
dec
and
shlb
ds
lret
sub
es
or
clc
or
mov
sub
jb
jnp,pn
lods
testb
fldl
cwtl
mov
push
pop
lcall
out
sbbb
sbb
sbb
pop
mov
ret
ret
idivb
rolb
fisttpl
and
int3
das
or
fsubl
dec
sub
xor
push
cmp
pop
jbe
inc
inc
cs
adcl
pusha
sub
cltd
cmp
ret
stc
xchg
lods
push
xor
push
mov
pop
or
xchg
aaa
pop
dec
js
lahf
push
test
fcomps
mov
mov
aad
test
xchg
push
je
lret
sahf
insl
pop
lock
push
das
enter
imul
inc
inc
fmul
push
or
add
in
jae
popa
ss
dec
rcll
sub
xlat
jecxz
and
pop
pop
sub
xor
jne
mov
push
pop
scas
insb
sbb
and
or
ljmp
add
sbb
cmc
sbb
xchg
in
and
pop
pop
ja
sub
aam
push
xor
cmp
xor
ds
pop
sbb
and
arpl
pop
sbb
mov
or
pop
adc
mov
lods
jmp
push
cli
cmp
mov
das
lea
pop
mov
adc
pop
pusha
stos
dec
pop
xchg
xor
pop
mov
xchg
sbb
imul
push
jp
out
push
pop
pop
inc
enter
adc
pop
cmp
repnz
inc
push
xchg
fstpl
mov
xchg
in
or
mov
push
cmp
xchg
and
fnstenv
push
cmp
pop
and
and
das
fcomp
sbb
addr16
test
stc
idivb
mov
pop
dec
fs
xor
ss
ret
push
sbb
imul
mov
ret
and
pop
inc
sahf
sti
cmpsl
mov
xor
imul
in
ss
xor
push
pop
push
mov
push
pop
mov
pop
push
in
pop
mov
pop
pop
aad
and
adc
nop
jb
dec
mov
push
adc
inc
adc
lods
xor
push
jmp
mov
push
jge
mulb
pop
sbbl
or
popf
pop
jecxz
test
and
or
dec
sbb
out
ljmp
pop
sbb
jno
mov
push
mov
pop
jg
fnsave
ja
or
jns
dec
dec
cs
pop
xchg
cmpsb
lods
mov
adc
enter
fildll
lcall
pop
or
enter
add
push
dec
pop
js
or
lcall
xor
jp
cmp
pop
arpl
fidivs
arpl
pop
in
jge
je
and
arpl
int3
cltd
xor
jo
dec
imul
fidivrs
shll
dec
rcr
rcr
push
lea
push
mov
sbb
adc
jmp
imul
xor
add
sub
mov
mov
xor
mov
mov
inc
cwtl
pop
mov
add
stos
pop
pop
xor
loopne
adc
pop
in
sub
call
jmp
ss
popa
and
push
xchg
lret
adc
pop
test
pop
bound
or
dec
push
test
cmp
in
mov
fiaddl
mov
leave
jmp
inc
in
jmp
outsl
push
pop
mov
push
xchg
jo
add
sbb
out
fstl
adc
fsub
fisubrl
adc
sub
addr16
ret
lcall
mov
movsl
xor
pop
clc
and
sub
dec
add
lods
cmp
or
bound
sbb
and
jno
pop
lea
xor
pop
lods
mov
mov
xchg
cwtl
pop
js
cmp
inc
ljmp
xor
arpl
dec
movsb
jg
xchg
cmpsl
cltd
sbb
cwtl
xchg
push
cmp
scas
xchg
bound
mov
insl
outsl
dec
stos
pop
mov
xor
add
in
mov
push
test
xor
push
jne
xor
outsl
and
pop
out
push
push
sub
xor
sbb
mov
jne
dec
pop
push
mov
ret
xchg
data16
jbe,pt
sub
adc
inc
in
or
or
xchg
or
pop
mov
loope
cmp
dec
out
or
push
notl
add
inc
push
into
inc
or
ja
sub
sub
and
xchg
push
push
push
int3
sti
cmp
push
fdivp
xor
cmp
addb
test
add
jne
add
jbe
outsl
mov
stc
or
jge
incl
repz
xchg
shlb
les
or
cmp
sbb
in
pop
inc
or
pop
jl
sbb
in
repz
cmp
mov
in
pop
mov
mov
int
mov
movsb
insb
adc
xchg
xor
push
faddl
sbb
pop
rorl
js
dec
add
and
sti
mov
cwtl
adc
push
pop
arpl
mov
movsb
stc
js
pusha
cmp
loope
jge
ficomps
insb
push
stos
shl
addr16
adc
adc
insb
push
cld
or
mov
test
inc
incl
lods
add
cmp
dec
leave
outsb
inc
pop
inc
mov
push
xor
sub
add
pop
adc
jecxz
pop
xor
imul
sarl
push
shrb
sub
daa
ret
pop
dec
js
pushl
adc
adc
outsl
lods
aas
xchg
push
push
icebp
out
insl
fbld
fstpl
inc
test
test
adc
sub
push
rcrl
iret
sbb
pop
jne
je
sbb
pop
cltd
cmp
add
adc
mov
add
inc
push
clc
mov
and
sbb
test
push
add
popa
pop
mov
inc
insl
push
dec
push
lret
mov
sbb
pop
adc
add
popa
pop
sub
mov
stc
dec
sbb
push
sub
sahf
sub
mov
arpl
das
into
pop
js
andl
sub
rdpmc
and
lds
jne
mov
xchg
cwtl
and
pusha
daa
jbe
cmp
and
adc
pop
and
sub
adc
pop
imul
sahf
int
inc
fbstp
cmp
mov
jns
sub
aam
sub
fimull
add
lahf
sbb
mov
cs
jne
jmp
mov
mov
pop
pusha
or
mulb
psubsw
loop
fs
sub
adc
jbe
add
das
xchg
pop
jp
dec
pop
adc
std
pop
mov
push
pop
mov
scas
pop
push
or
sub
pop
mov
add
adc
imul
pop
shll
or
push
scas
inc
fsts
push
xchg
pop
shll
sbbb
lcall
cli
sbb
push
outsl
pop
and
xchg
mov
loop
pop
pop
es
cmpsb
pop
xor
push
mov
push
push
imul
adc
inc
out
xchg
shrb
iret
jno
cwtl
pusha
adc
mov
fcompl
lods
sbb
xchg
mov
cmc
or
and
add
pop
cmp
test
jg
neg
and
sete
push
sbb
pop
pop
jge
rorb
dec
inc
cmp
imul
std
push
aad
pop
jecxz
cmp
xchg
push
pop
sub
imul
mov
jl
insb
lret
mov
sbb
push
cmp
lcall
and
out
cs
data16
push
jmp
adc
cs
cwtl
gs
dec
or
out
jmp
and
sbb
imul
pop
cmp
sarb
pop
ljmp
jbe
insl
push
push
aad
test
jns
pop
xorl
inc
xchg
mov
je
in
dec
jecxz
xchg
sarl
mov
xchg
std
aad
jae
gs
or
std
pop
push
js
cli
cwtl
inc
mov
push
in
pop
xchg
lcall
popf
pop
sti
push
pop
push
les
out
mov
jns
push
loop
or
cmp
pop
pop
and
sbb
pop
jg
mov
push
dec
icebp
mov
aas
pop
push
add
and
mov
pop
inc
cmpb
pop
jmp
xchg
or
cmp
fcoml
fbld
mov
fidivrl
gs
push
aaa
dec
mulb
mov
lods
jp
pop
imul
push
jmp
ja
sub
push
dec
outsb
fcoms
push
xchg
push
add
mov
lahf
daa
pop
lret
adc
and
int
cltd
sti
mov
enter
lcall
sub
inc
fists
inc
insl
pop
loope
add
into
ss
jns
in
addr16
lret
enter
test
dec
mov
ljmp
or
jnp
popf
pop
notl
pop
es
or
scas
xor
inc
cltd
dec
and
pop
jne
adc
cmp
xchg
outsl
mov
lods
int3
js
cmp
lret
mov
add
pop
mov
in
pop
std
cmpsl
cmp
xchg
pop
xchg
mov
stos
fsubp
imul
lret
xchg
addr16
ljmp
jae
std
lea
shr
ds
adc
and
inc
push
mov
pop
add
addr16
rcl
inc
cli
lock
mov
inc
pop
push
call
aaa
les
push
add
out
cmp
push
pop
movsb
sbb
sahf
cmp
loop
sbb
mov
mov
hlt
pop
into
and
push
mov
aad
sbb
push
imul
adc
cmp
cs
dec
pop
pop
inc
gs
call
fdivrp
jle
pop
hlt
orl
push
cmp
pop
cltd
pop
jmp
into
pop
lds
xor
cmp
cwtl
mov
test
push
js
out
cmp
inc
scas
aad
notb
jne
ficomps
xchg
mov
pop
xchg
pop
mov
aas
shlb
lods
dec
idivl
xor
clc
sahf
mov
pop
sbb
loop
inc
imul
inc
and
mov
fiaddl
adc
dec
or
mov
mov
sbb
sub
xchg
mov
test
push
int3
cld
fsubrs
dec
pop
mov
sub
loope
sub
jne
pop
sbb
mov
repnz
cmp
aas
push
pop
cmpb
push
jo
jne
or
lret
inc
xchg
xchg
fucomip
jle
pop
fstpl
pushf
add
pop
jl
push
data16
inc
sahf
jne
stos
push
mov
mov
mov
lret
push
scas
lods
mov
pop
mov
push
or
ja
cmp
adc
push
cli
push
outsl
push
test
jbe
pop
sbb
outsl
and
pop
incb
or
push
cmp
sbb
xor
or
sub
pop
mov
loop
bound
pop
mov
fiaddl
in
imul
cli
dec
repz
cmp
pusha
sbb
loopne
cs
inc
lock
lahf
clc
mov
jg
jnp
jecxz
sbb
aas
pushf
loopne
lock
dec
inc
imul
cmp
adc
and
sub
cli
out
jns
and
fcoml
pop
insl
test
xchg
inc
adc
adc
pop
and
mov
or
and
es
scas
push
sub
int3
sub
mov
push
popf
dec
pushf
or
adc
ljmp
enter
add
les
pop
daa
jno
repnz
mov
arpl
jecxz
test
jmp
ret
jns
pop
mov
dec
pop
ret
add
fistps
jg
xor
pop
push
stos
sub
sub
enter
xor
pop
cltd
pop
adc
mov
push
gs
subb
int3
pop
push
pop
enter
or
cs
lds
push
pop
movsl
adc
nop
mov
dec
aaa
xor
fdivrl
push
addr16
pop
subb
jno
dec
xchg
add
ret
into
jmp
xchg
jae
sbbl
in
push
out
cmp
stos
ljmp
in
lret
lcall
das
enter
xchg
lcall
pop
inc
add
pop
and
adc
push
xchg
stc
mov
xchg
mov
sahf
inc
dec
sub
and
xlat
rcrb
mov
cltd
call
xchg
shr
push
pop
lds
imul
pop
mov
pop
jmp
clc
imul
pop
adc
add
dec
repnz
roll
xor
ds
push
add
jg
mov
adc
out
push
pop
or
cmp
pop
or
fldl
xchg
loopne
dec
push
icebp
inc
pop
bound
pop
mov
pushf
das
cld
js
xlat
fcomip
push
dec
pop
rcrl
mov
mov
mov
arpl
imul
or
pop
test
int3
xchg
or
xchg
sbb
push
add
fldcw
dec
push
rclb
sahf
mov
mov
and
mov
aad
aam
dec
mov
cld
leave
arpl
push
pop
or
jmp
repnz
dec
pop
mov
cmpsb
push
xorb
cmp
cmp
xchg
adc
es
ret
fidivl
les
divb
iret
lods
data16
cmpb
push
pop
push
push
pop
add
inc
pop
xchg
jecxz
pop
pop
add
add
rcr
stos
mov
dec
lea
fildl
clc
pop
adc
push
insb
movsb
sub
jcxz
and
dec
sbb
pop
ret
xchg
fdivl
cltd
dec
xor
cmp
jno
mov
push
lea
fwait
add
inc
pop
xchg
loop
xchg
xor
sahf
xlat
clc
pop
jae
repz
sub
shrb
repnz
jae
inc
loope
pop
jle
cmpsb
mov
jnp
cs
addr16
cmp
cmp
popa
push
lret
test
dec
scas
int
adc
adc
inc
dec
jo
xchg
insl
jns
push
push
jmp
sub
aaa
pop
and
and
jecxz
xchg
sbb
xchg
sbb
mov
mov
pop
add
scas
stos
mov
hlt
es
into
sub
gs
push
push
jo
push
comiss
lcall
push
aam
pop
clc
xchg
or
pop
xorb
mov
hlt
jae
lret
aaa
enter
js
aas
pop
mov
xor
pop
push
mov
mov
scas
mov
cmp
push
pop
inc
mov
ja
mov
addr16
jae
adc
outsl
cmp
pop
xchg
cmpb
xlat
dec
pop
pop
faddl
mov
std
pop
dec
sub
nop
sub
dec
rclb
divl
bound
push
cwtl
xor
loop
sub
cltd
mov
pop
mov
xchg
sub
jne
enter
arpl
flds
clc
test
aas
push
sbb
addr16
cld
cmp
add
xchg
push
out
pop
mov
shll
xchg
into
push
pop
sub
push
cmp
daa
pop
jnp
push
orb
pop
fsubr
outsl
mov
xor
mov
adc
insl
iret
sbb
pop
adc
push
in
lods
mov
pop
mov
sub
pusha
pop
inc
dec
adc
scas
insl
dec
or
in
xor
ficoml
xchg
test
in
sbb
gs
pop
pop
fstps
addr16
fnsave
mov
pop
add
adc
mov
pop
mov
cmp
into
iret
pop
push
push
and
or
and
mov
in
xor
cmpsb
sub
cli
mov
ja
cmp
icebp
pop
notb
pop
jae
call
or
jmp
mov
sbb
fwait
and
push
imul
shrb
ds
cltd
pop
fwait
xor
lret
pop
sbb
push
jo
adc
push
pop
cmp
push
dec
dec
fs
cld
adc
mov
pop
pop
jnp
ja
inc
pop
mov
pop
cwtl
mov
jge
jp
imul
test
ja
mov
mov
jecxz
mov
pop
iret
dec
sub
cmp
jge
or
dec
cmpsb
js
jae
mov
in
cwtl
es
push
in
cmp
pop
push
leave
incb
mov
xchg
sti
xchg
dec
sbb
cmp
add
les
cmpsb
fwait
jne
pmullw
dec
jge
cmp
lds
sub
movsl
or
jns
add
cmpsb
mov
fsubr
sub
jge
cld
and
jns
sub
mov
pop
mov
sub
pop
pop
and
adc
stc
inc
subl
shlb
into
push
add
nop
pusha
jb
xchg
jbe
and
push
or
decl
pop
add
test
jns
add
adc
push
sbb
pop
inc
cmp
dec
call
pop
cmp
cltd
arpl
jmp
inc
jle
inc
jns
inc
js
adc
pop
xchg
ret
pusha
enter
iret
out
jge
jmp
mov
dec
push
stc
lret
pop
adc
gs
jmp
decb
cmp
mov
adc
cmp
push
ss
in
or
add
xor
sbb
or
and
mov
pop
push
pop
in
ror
push
pop
jne
sub
inc
and
adc
repnz
add
cwtl
pop
xchg
jge
enter
inc
adc
pop
jne
sbb
mov
stos
out
cmp
scas
adc
push
test
sbb
add
cwtl
jg
loop
cld
ljmp
pop
mov
sbb
and
gs
push
rorl
push
in
push
xor
les
jmp
out
daa
jnp
xchg
das
jno
pop
push
adc
popa
and
pop
test
mov
stos
mov
in
fcomi
sbb
add
push
add
int
add
dec
jae
popf
popa
sbb
push
sub
cmp
mov
andb
pop
dec
mov
adc
outsl
or
push
fsts
std
aam
pop
lcall
mov
leave
adc
lahf
cmpsb
push
xchg
pop
test
popa
pop
stc
jmp
shr
xchg
push
and
arpl
cltd
enter
inc
insb
xorb
int
cmp
jbe
push
pop
ds
mov
mov
insb
loope
hlt
sbb
pop
dec
inc
fsubs
push
jne
and
lds
test
pop
jmp
cld
push
dec
mov
inc
push
ret
fldenv
dec
icebp
pop
push
cmp
xchg
aas
pop
push
xor
pop
stc
jbe
addps
sub
push
and
lds
pop
ficoml
pop
sub
hlt
xchg
test
rcrl
adc
mov
xchg
xlat
push
or
inc
or
mov
mov
and
inc
dec
mov
pop
dec
adc
push
aam
sbb
in
dec
sub
or
shll
pushf
inc
sti
leave
negb
mov
psrld
stos
lret
pop
and
outsb
adc
pop
sub
adc
imul
or
mov
xchg
xchg
pop
mov
fimull
jg
or
or
aam
pop
sar
ret
mov
jno
mov
mov
fiaddl
lret
or
push
jmp
and
dec
push
pop
rorb
ret
lea
mov
lret
xor
push
push
xchg
xchg
mov
pop
push
xchg
popa
add
pop
pop
jge
outsb
rolb
cli
pop
and
rorl
test
cmp
sub
addl
je
pushf
push
insb
out
push
add
mov
jecxz
pop
mov
ljmp
imul
fnstcw
das
pop
mov
lret
lcall
nop
xor
inc
cli
jle
mov
or
imul
inc
pop
fsts
adc
adc
pop
cltd
dec
orb
fsubrp
mov
adc
cli
pop
jns
ss
xchg
lods
dec
push
stos
fstpt
test
xor
jne
pop
rcll
push
mov
adcb
dec
das
push
jmp
fstps
mov
add
and
rol
dec
test
or
sub
sbb
pop
loope
pop
cwtl
push
sub
data16
jmp
push
adc
push
jmp
dec
dec
ds
cs
cmp
adc
leave
js
pop
push
rorb
or
inc
mov
adc
pop
in
jecxz
pop
sbb
pop
pop
xor
lcall
dec
pop
daa
jg
adc
and
filds
ss
aad
mov
or
ja,pn
sub
xor
lea
xchg
dec
daa
push
pop
imul
push
into
pop
in
dec
ss
scas
adc
jmp
or
insb
rolb
mov
cmp
pop
push
jp
lds
in
stos
adc
cmp
in
daa
pop
out
mov
mov
sbb
mov
xchg
scas
xchg
jbe
mov
stos
mov
sbb
cmp
add
mov
mov
pop
arpl
ret
cmp
psubsw
aas
jo
jbe
adc
mov
mov
fnstcw
cmp
ja
lods
adc
clc
pop
xor
sbb
dec
js
mov
push
jg
pop
iret
ja
popa
pop
pusha
mov
pop
adc
and
lds
pop
ljmp
sbbl
imull
mov
mulps
sub
pop
ret
cltd
in
cmp
xor
and
add
sub
push
pop
cmp
mov
or
inc
les
lods
popf
push
iret
sbb
dec
cld
cltd
fcmove
or
sbb
pop
add
jo
dec
or
pop
adc
and
sub
push
jl
and
add
loopne
inc
inc
pop
sti
push
push
outsl
pop
jmp
lea
aam
inc
imul
jg
inc
cmp
adc
rcrl
out
dec
arpl
pop
jnp
out
dec
push
ret
pop
shrl
loope
jne
mov
dec
mov
ret
in
or
inc
adc
sub
bound
jbe
mov
dec
repnz
loop
inc
push
hlt
sbb
inc
xor
lock
arpl
jmp
jns
xabort
sti
sub
pop
pop
int
xor
pop
pop
cmp
subl
pop
stc
xchg
xchg
xor
fsubs
icebp
mov
adc
inc
and
inc
mov
add
xchg
aam
jno
gs
das
insl
push
jg
mov
pop
stos
out
push
jmp
inc
jg
and
xor
add
movsl
movsb
pop
mov
mov
pop
xchg
outsb
mov
daa
test
adc
jnp
ret
cmp
sub
pop
cld
aam
and
xchg
mov
inc
outsl
push
xor
lock
mov
shlb
jns
sub
pop
push
pop
clc
fimull
xor
lret
dec
shl
pop
cs
sub
cmp
xchg
pop
xlat
mov
pop
push
pop
bound
mov
imul
cmp
sub
pop
cmp
in
movsl
lret
push
or
add
imul
pop
sub
dec
out
jb
cmp
pop
adc
insl
rcrb
jmp
inc
jne,pn
pop
insb
cli
fwait
sub
jmp
test
xchg
iret
hlt
lea
popf
lcall
xchg
push
arpl
pop
and
add
adc
pop
ljmp
pop
push
push
and
inc
int
xchg
imul
pop
jne
scas
clc
and
add
popf
sbb
jle
mov
cs
cld
cmc
lock
pop
in
bound
pop
sbb
ljmp
fisubrs
pop
dec
mov
sbb
push
fisubl
pop
and
arpl
dec
push
aaa
pop
adc
hlt
movsb
cmpb
dec
test
push
fisubl
jmp
pop
cli
pop
pop
mov
ficoms
xchg
loope
mov
out
add
inc
xor
pop
or
or
jecxz
or
push
or
sarl
scas
pop
repnz
cmpsb
add
nop
and
push
dec
ficompl
sub
jle
add
jmp
jae
dec
pop
test
add
mov
sub
call
movsb
mov
imul
ja
pop
jbe
xchg
rolb
dec
leave
lcall
addb
mov
inc
xor
stos
sbb
mov
mov
in
aaa
stos
pop
clc
out
pop
loope
jno
xchg
test
out
sbb
insl
cmc
xchg
jp
cmp
mov
sub
mov
push
xor
mov
push
mov
ss
pop
push
daa
ljmp
test
sbb
or
sbb
inc
mov
lret
jl
mov
ficomps
pushl
imul
pop
sahf
out
dec
fwait
jno
mov
out
cmc
pop
mov
shlb
pop
pop
cmpsl
repnz
mov
mov
push
mov
cmp
pop
push
dec
dec
pop
sub
enter
aam
js
xor
aas
mov
notl
add
push
add
scas
loope
ret
or
inc
add
ret
icebp
adc
pop
mov
sub
push
pop
imul
pop
mov
lea
pop
roll
xchg
les
xchg
sbb
or
or
icebp
sub
pop
notb
jno
fldenv
push
push
inc
or
leave
push
cld
loope
adc
sbb
pop
sub
orl
adc
pop
mov
xchg
pop
and
and
addr16
mov
pop
xor
xor
mov
les
pop
popa
cwtl
push
pop
enter
rolb
push
sti
add
pop
jno
add
rorl
mov
push
or
or
lret
movsl
sbb
push
cmpl
gs
dec
pusha
notb
dec
pop
adc
pop
xor
cmpsl
push
enter
push
fsts
int
cmp
pop
hlt
dec
sbb
cmp
scas
in
cmp
rolb
sub
and
mov
pop
pusha
cld
pop
mov
rorl
sub
sbb
pop
xchg
sbb
inc
rolb
sbbl
mov
lret
sbb
sub
or
stos
roll
push
es
inc
pop
mov
jne
pusha
sbb
outsb
or
lahf
sbb
adc
arpl
push
add
ljmp
xchg
pop
push
cmp
addl
push
push
jmp
jecxz
inc
inc
pop
rclb
inc
test
dec
push
jmp
lcall
int
clc
sub
pop
jl
push
sub
fs
xchg
sbb
cs
movsl
pop
xchg
sbb
inc
lcall
pop
es
sub
fs
cmp
cmp
inc
xchg
fldt
cmp
sbb
cmp
fsubr
xchg
icebp
fdivrs
dec
arpl
pop
fidivl
pop
inc
xor
pop
sbb
popa
lods
ds
mov
pop
pushf
imul
fwait
test
adcl
inc
sub
push
lret
fcmovu
pop
sbb
cs
jno
xchg
mov
xchg
add
shll
in
and
shlb
adc
lret
lds
mov
inc
dec
push
mov
dec
sbb
cltd
jo
ljmp
inc
jbe
das
mov
cmp
mov
pop
cmpb
adc
pop
fnsave
pop
inc
inc
movsl
push
data16
xchg
rcrb
pop
xor
pop
int3
addr16
pop
sbb
or
mov
cmp
adc
push
jmp
in
add
decl
or
sbb
lret
fildl
into
imul
or
cmp
adc
ds
mov
xchg
dec
pop
sub
adc
ja
jmp
aas
jno
mov
adc
dec
xchg
mov
xlat
cld
cmp
cmp
call
and
inc
cmpsl
cmp
enter
imul
movl
stos
or
mov
pop
inc
push
adc
cmp
in
dec
pusha
xchg
and
test
aaa
or
pop
cld
aam
dec
cmpsl
push
sub
daa
les
ret
std
pop
aad
mov
addr16
xchg
inc
call
inc
sub
adcb
mov
arpl
pop
fdiv
push
out
and
lret
mov
loop
scas
leave
jae
mov
dec
jmp
imul
ljmp
pop
or
pusha
leave
xchg
nop
cmpsl
pop
int
stos
and
aad
push
insb
sub
ret
mov
addl
dec
jae
pop
sub
pop
push
pop
inc
outsl
sbb
dec
and
dec
test
fstps
or
lret
or
popa
mov
push
and
inc
pop
xchg
fs
cmpsl
add
pushw
pop
sbbb
add
dec
loope
jmp
add
or
aam
std
push
xor
push
adc
or
and
jmp
pop
sub
adc
dec
ds
movl
add
xchg
out
dec
jns
clc
jmp
sub
push
xchg
inc
pusha
mov
in
cwtl
pop
push
and
jg
popa
cmp
pop
pop
sub
lcall
leave
enter
lods
imul
mov
sti
hlt
pop
sub
daa
inc
rcll
lret
out
lret
jmp
test
or
pop
jnp
jno
mov
imul
cmp
lock
push
or
fisttpl
lret
mov
mov
pop
inc
shr
adc
jecxz
pop
cmp
popa
out
nop
fwait
dec
insl
jge
pop
ljmp
data16
push
and
sub
fisubl
insl
fsubrl
dec
pop
loope
cmp
bound
andl
xchg
andb
pop
mov
add
sbb
lahf
pop
push
and
in
xchg
rcl
lods
mov
xor
push
push
push
dec
push
sub
jnp
mov
sub
mov
jo
sub
xor
pop
sbb
mov
popa
int3
icebp
cmp
shl
rcr
aas
push
mov
js
mov
stc
jle
jns
dec
addps
dec
mov
sti
push
mov
mov
xchg
cmpsb
lea
lret
or
push
pop
daa
jg
fldenv
cmc
fnsave
dec
jae
cltd
ds
mov
xchg
shlb
push
and
int
adc
xchg
lret
push
or
fwait
sbb
aaa
sub
mov
pop
mov
fldt
imul
mov
pop
testb
or
pop
push
xchg
push
mov
leave
dec
push
inc
cmpsb
jno
gs
ficoml
pop
mov
push
lahf
lods
ja
add
popf
cmp
pop
adc
addr16
mov
ret
xor
pop
ss
add
xor
jbe
mov
pop
call
dec
sub
xchg
adc
cmpsl
pop
pop
sub
dec
jg
js
push
mov
jnp
xor
dec
jecxz
and
call
mov
jnp
sub
jmp
imul
pop
xor
in
xchg
pop
rcll
mov
into
dec
mov
push
pop
mov
aad
mov
mov
sub
xchg
pop
inc
and
cmp
mov
sub
fcompl
es
mov
int
pop
inc
add
notb
scas
pop
roll
add
mov
std
movsb
lcall
mov
push
movsl
call
inc
cmp
or
jbe
ljmp
mov
popf
xor
adc
pop
pop
adc
xorl
test
sub
adc
mov
xorl
xorb
inc
enter
inc
sti
test
cmpl
jge
push
sbb
add
js
cli
inc
rolb
and
mov
mov
pop
inc
repz
hlt
ss
cmpsb
mov
cmpsl
pop
aaa
sahf
mov
and
jge
pop
pusha
mov
icebp
dec
pop
mov
repz
mov
xor
cmp
jl
pusha
mov
xor
mov
out
cmp
jnp
dec
sbb
pop
mov
lcall
dec
adc
les
pop
in
jns
jmp
mov
mov
mov
pop
pop
jmp
les
pop
xchg
mov
mov
fsts
pop
mov
inc
mov
add
inc
push
addb
mov
jg
out
ja
outsb
sub
out
mov
adc
push
out
sub
and
push
xchg
mov
push
add
arpl
std
jnp
popf
pop
stc
sbbb
addr16
add
mov
inc
push
std
inc
addl
pop
stc
adc
inc
or
and
enter
pop
fnstcw
repnz
jns
pop
and
inc
or
jg
out
in
in
orl
mov
jmp
push
into
push
pop
popa
sahf
sub
push
or
dec
push
xchg
addr16
pop
dec
xchg
clc
pop
cmpsb
xor
in
ss
push
mov
push
jo
xor
dec
pop
push
cs
push
popf
int
pop
pop
mov
xor
dec
lret
pop
xlat
or
jecxz
jns
cmp
cmp
mov
rorl
and
cmp
xor
mov
test
pop
inc
inc
les
inc
call
in
cmp
inc
arpl
pop
xchg
jmp
lods
ljmp
mov
add
popa
dec
inc
insl
mov
popf
fs
push
push
cs
cmp
ret
data16
or
cli
lods
sbb
pop
adc
xchg
adc
add
add
ret
dec
bnd
je
add
jecxz
sbb
ret
pop
and
movsl
loope
sub
pop
adc
pop
ljmp
das
rolb
pop
inc
push
add
pop
pop
push
daa
inc
and
add
cvttps2pi
in
inc
sub
insl
out
repz
decl
mov
in
xchg
popf
push
push
xor
dec
pop
lods
adc
cmp
inc
jp
iret
push
pop
mov
add
xchg
dec
push
pop
or
add
jne
mov
pop
sbb
cmp
sub
cmp
jne
jns
jbe
pop
into
add
xchg
cmp
pop
cmp
and
flds
rclb
sub
add
pop
insb
aam
pop
test
sub
xchg
pop
xchg
sbb
les
sbb
or
lahf
push
inc
dec
xchg
push
mov
pop
or
mov
and
inc
inc
dec
psrlq
andl
inc
pop
mov
mov
push
outsl
add
push
fldenv
adc
push
pop
pop
or
sub
inc
push
rcr
fdivr
push
jecxz
xor
add
xchg
in
cmpl
jmp
aaa
sbb
aad
dec
adc
push
sub
mov
outsb
sbb
sub
cmpsl
sub
pop
jle
sub
push
stc
push
movsl
mov
dec
cs
cmp
pop
dec
sub
and
cmp
xor
adc
dec
add
mov
pop
out
das
dec
xchg
dec
push
mov
scas
jg
sbb
cmp
cmp
fisttps
dec
inc
aaa
and
add
ljmp
cmp
rcll
mov
inc
cmp
pop
push
ficoms
adc
pop
inc
sarl
int
sbb
ja
mov
sbb
pop
and
sbb
jne
leave
add
cltd
push
pop
in
xchg
aad
les
enter
sbb
mov
pusha
test
push
test
mov
js
addps
pop
pop
in
fdivs
sbb
sbb
xchg
push
xchg
pop
mov
and
pop
pop
add
and
and
xor
sbb
lds
xchg
and
push
cli
les
mov
or
jne
sti
pop
add
pop
adc
pop
and
xor
das
loope,pn
adc
call
sbb
and
pusha
dec
pop
lea
in
adc
xchg
or
cmc
or
mov
test
sub
pop
or
push
out
adc
mov
xchg
pop
fcoms
pop
sbbb
push
cltd
in
cmp
cmp
mov
fbld
sub
pop
push
sub
es
inc
pop
rorl
sbb
out
add
push
mov
cmp
pop
fiaddl
fmull
sub
cmp
fs
pop
bound
es
rcl
pop
movsl
ds
pusha
dec
jbe
and
mov
jo
addb
arpl
pop
sbb
lods
repz
stos
or
jb
pop
outsl
pop
je
mov
out
inc
push
inc
sbb
in
sub
test
adc
push
mov
xorl
lcall
push
and
cmpsb
data16
sbb
dec
dec
imul
inc
cld
std
mov
fildll
or
pop
arpl
pop
fsubl
das
push
pop
repz
mov
pop
sub
sbb
inc
aaa
mov
push
ret
or
or
pop
push
cwtl
sub
inc
pop
push
jns
decl
inc
xor
push
jae
sti
xchg
nop
mov
cmp
fisttpll
cmp
pop
sub
jecxz
cli
jns
icebp
or
jmp
stos
xchg
hlt
pop
or
add
adc
cwtl
add
pop
add
dec
pop
adc
adcl
fsub
push
pop
mov
sub
sbb
lea
add
movsb
mov
arpl
xor
lods
pop
popa
inc
push
dec
daa
mov
xchg
push
stc
dec
int
mov
mov
mov
pop
xor
inc
push
and
push
push
push
xchg
leave
loope
lods
dec
pop
pop
pmaxub
or
or
pop
adcb
es
and
adc
stc
andl
aad
sub
loop
pop
adc
xchg
mov
cmc
push
ja
jne
lcall
adc
lock
sub
xchg
repz
mov
adc
leave
pop
test
jg
mov
and
sti
sbb
lds
lret
xor
bnd
jp
pop
es
dec
insl
xchg
xchg
and
loop
mov
ret
rolb
push
pop
add
or
adc
push
or
push
bswap
inc
or
pop
adc
icebp
push
push
test
fidivl
sti
pop
jne
ds
mov
mov
iret
mov
pop
mov
pop
icebp
pop
push
pop
lods
orl
pop
stos
out
out
cltd
pop
mov
pop
lahf
push
add
pop
adc
inc
or
enter
mov
pop
and
inc
es
sub
sub
pop
dec
rcrb
daa
xor
push
cmc
insb
add
dec
push
pop
xor
xchg
int
xchg
fistpl
xchg
cmpsb
roll
out
xchg
pop
pop
inc
fs
adc
mov
jno
pop
or
cmp
sub
pop
cmp
xchg
jecxz
cltd
adc
aad
rclb
cmp
hlt
add
jo
scas
sub
mov
outsl
xor
sbb
imul
lret
xchg
sbb
push
lock
or
sub
adc
fisubrs
push
roll
js
lock
jns
arpl
add
push
sbb
or
sbb
adc
xor
cmp
mov
jae
jmp
push
pop
ret
xor
adc
pop
mov
cmp
cmp
movsl
das
sbb
cwtl
inc
jl
iret
push
imul
sub
dec
pop
shlb
ret
mov
cltd
sub
js
adc
jae
sbb
lods
ret
ds
mov
add
inc
xchg
sarl
test
adc
ret
pop
jecxz
mov
or
xchg
push
xor
mov
push
adc
dec
and
mov
stos
fisubrl
mov
push
push
push
dec
xchg
xor
insb
popf
push
movsl
cwtl
sub
cmp
int3
fs
pop
int
idivl
dec
push
test
sbb
dec
push
shlb
bnd
lret
sub
jnp
adcl
add
es
dec
pop
mov
test
and
aaa
mov
arpl
sub
clc
cmp
push
push
inc
popf
lea
add
fadds
jge
clc
daa
push
pop
mov
adc
mov
mov
adc
push
in
pusha
es
inc
sub
push
inc
sbb
push
insl
xor
push
and
shll
add
mov
addb
jne
daa
pop
jns
mov
pop
jge
out
es
out
mov
in
loope
ljmp
sbb
dec
sbb
fmull
sbb
jge
leave
pop
jp
sub
cli
lcall
and
lahf
inc
xchg
adc
jne
insl
and
aad
imul
xchg
push
mov
test
pop
popf
mov
cmp
push
jns
xor
dec
ret
mov
fisubs
mov
outsl
loop
les
xchg
out
jb
pop
pop
ljmp
mov
sub
leave
and
mov
pop
adc
imul
dec
pop
sub
loopne
xchg
jbe
cs
pop
jmp
inc
and
dec
add
lret
mov
mov
mov
cmp
jp
dec
imul
push
push
popa
jnp
add
enter
inc
inc
cmp
xor
loope
nop
dec
cmp
and
adc
mov
sub
push
or
jle
pop
sub
ret
push
mov
mov
sbb
fbld
into
mov
stc
mov
adcl
adc
mov
or
leavew
cmpsb
ficomps
mov
sub
fwait
mov
mov
jnp
pop
pop
arpl
and
xchg
xor
call
mov
dec
push
mov
inc
sarl
pop
or
and
pop
lea
dec
xchg
push
sub
inc
test
pop
mov
movl
ds
or
dec
movsl
mov
std
xor
pop
sub
shlb
scas
les
or
je
or
pop
inc
or
mov
jecxz
ss
fistps
pusha
lds
mov
jmp
mov
call
adc
fcmovbe
popf
xchg
xchg
sbb
in
adc
fdivs
repz
ret
cmpsl
adc
pop
negl
sbb
push
mov
packssdw
xchg
xchg
push
jg
lods
mov
ds
and
pop
push
cmp
int
fstpt
push
jge
lcall
sub
jne
cmp
jmp
add
and
cmp
mov
outsl
insb
pop
test
inc
pop
ret
in
jmp
push
cwtl
mov
sbb
sub
mov
adc
pop
cs
test
mov
cmp
push
mov
push
dec
mov
sbb
cwtl
fstp
inc
mov
adc
hlt
cmpsb
dec
sbbb
stos
mov
xor
sti
ret
jl
push
lds
adc
stc
ficomps
lret
jp
push
imul
cmp
adc
push
int3
mov
js
xchg
pop
out
push
mov
xchg
inc
sbb
pop
dec
and
adc
adc
mov
popa
sbb
sub
and
out
pop
cs
and
inc
pop
les
in
add
test
mov
adc
pop
push
je
or
push
lock
cltd
xlat
popf
inc
fidivl
push
pop
jmp
sbb
test
xchg
sbb
inc
arpl
or
sbb
push
inc
nop
inc
ror
je
cmp
pop
mov
pop
scas
loop
jg
push
add
and
adc
push
test
sub
add
push
inc
js
pop
adc
std
aas
adc
or
add
pop
push
or
lea
mov
cmp
add
sbb
fsubrs
testl
cld
or
or
dec
inc
xchg
jns
push
mov
pop
imul
loopne
hlt
nop
mov
jnp,pt
push
pop
rcll
pop
pop
jge
pop
xchg
push
icebp
hlt
or
test
pop
cmc
sbb
inc
pop
je
dec
push
stc
stos
out
sbb
or
inc
test
push
cmp
shll
testl
push
inc
push
mov
lret
sbb
jge
pop
push
inc
pop
mov
adc
xchg
add
or
imul
lret
push
fistl
jge
push
pop
add
cwtl
in
jne
test
sbb
xchg
repnz
adc
lret
pop
lcall
inc
sub
adc
jmp
push
pop
pop
add
ficoml
cmp
mov
rorb
enter
sbbb
mov
push
fiadds
or
sbb
clc
push
pop
pop
loope
std
push
arpl
pop
cwtl
imul
mov
cmp
push
pop
mov
sbb
jp
dec
dec
pop
les
mov
jmp
fsubr
pop
xchg
into
adc
push
gs
stc
adc
sbb
jbe
or
xor
mov
add
jmp
add
inc
jb
pop
in
mov
adc
pop
jno
lahf
mov
out
inc
push
jnp
sbb
lock
es
sbb
sub
cmc
pop
std
out
test
repnz
pop
pop
stc
mov
jmp
pop
adc
imul
js
or
cmpsl
push
pop
gs
les
rcrl
lret
pop
jae
jmp
and
jg
sahf
mov
jne
jmp
ja
push
pusha
sti
rclb
inc
cltd
and
jge
jecxz
push
cs
push
adc
mov
push
pop
inc
rolb
addb
out
jnp
mov
ja
lret
scas
dec
jp
shll
cs
pop
clc
jle
out
mov
inc
dec
or
popf
dec
lcall
jg
int
cmp
or
in
pop
dec
dec
mov
in
int3
dec
xor
pop
ss
xchg
ss
aam
in
lahf
pop
adc
icebp
cli
sub
cmp
inc
out
push
push
pop
push
adcl
andb
je
test
and
lods
and
in
sub
sub
sti
int
repz
mov
aad
mov
mov
fdivs
je
sti
ja
cltd
pop
dec
push
xchg
jge
add
pop
daa
rcr
xchg
stc
or
cmp
mov
ret
mov
pop
aad
push
es
sahf
xor
cs
andl
mov
out
cmc
push
xor
pop
sub
dec
fbstp
ficoml
jbe
test
dec
cmpsl
dec
or
dec
mov
movnti
adc
lods
cmp
add
mov
fwait
push
les
mov
push
add
aas
cmpsb
popf
mov
xor
mov
fistpl
icebp
shrl
push
add
test
and
dec
cwtl
repz
push
scas
inc
dec
js
lock
divl
inc
sbb
int3
add
inc
mov
inc
mov
pop
ljmp
mov
sti
lcall
pop
mov
xlat
rcll
add
test
push
lock
idivl
pop
popa
push
mov
mov
movsb
push
inc
pop
push
ret
and
sbb
loopne
xchg
adcb
icebp
loop
xor
pop
dec
test
adc
sub
lret
add
pop
test
mov
sub
ret
into
jbe
call
and
xor
push
mov
cli
int
jmp
and
test
mov
pop
xchg
xchg
dec
cs
inc
out
push
sub
lcall
push
xor
test
pop
xor
inc
pop
icebp
daa
and
add
cmp
aad
or
sbb
push
test
dec
pop
lcall
sbb
or
sbb
fcompl
and
adc
mov
jmp
mov
jge
jno
ds
fwait
add
fstps
ret
mov
push
jbe
negl
jne
test
bound
push
inc
mov
dec
psubb
or
adc
sub
cltd
pop
pusha
daa
sahf
lret
push
mov
mov
mov
cmc
push
jecxz
pop
daa
lock
pop
inc
pop
jl
push
jmp
jmp
int3
mov
pop
mov
jnp
lds
sbb
push
andl
dec
or
xchg
jmp
and
push
call
stc
adc
ljmp
mov
cli
out
mov
movd
pop
gs
xchg
or
pop
push
lods
enter
pop
arpl
xor
sahf
repnz
sub
mov
or
std
stos
pop
mov
scas
and
or
test
cmp
repz
ds
ficompl
dec
and
xchg
lcall
inc
fists
cmp
scas
iret
pop
adc
cmp
pop
mov
jp
ret
add
stos
popf
jno
imul
mov
cmp
push
adc
out
loop
push
bound
and
and
fld
sub
addr16
xor
sub
cmp
popf
push
adc
fildl
mov
arpl
stc
sbb
jae
xchg
addr16
sbb
jbe
scas
push
lret
cmp
inc
pop
adc
sub
mov
dec
stos
es
xor
mov
bound
popa
lds
add
rcrl
and
stos
addb
jae
xor
js
adc
cld
push
sahf
cli
ret
push
and
fiaddl
and
jo
fimull
pop
dec
ja
lock
test
mov
mov
jle
pop
ss
push
mov
push
mov
cs
mov
and
sub
lods
push
jle
pop
pusha
outsl
adc
cs
xchg
fldenv
pop
jecxz
adc
inc
pop
mov
je
movsb
cld
lret
cmp
sbb
or
fnstenv
jmp
aam
pop
push
mov
in
dec
pop
fcompl
jae
sbb
and
aaa
pop
cmp
ss
inc
aad
mov
repz
or
pop
lods
jne
xchg
mov
jp
xor
push
adc
push
out
cld
and
xlat
out
andb
mov
in
daa
adc
inc
js
xorb
sbb
stc
adc
loope
push
jo
jge
pushf
or
pop
subb
ss
inc
jecxz
lds
dec
push
fmul
sub
dec
inc
mov
add
jecxz
stc
jp
pop
or
loope
leave
jmp
es
jae
cmpsb
pop
mov
enter
sub
fdivrl
lahf
data16
es
sub
cmpsb
clc
enter
jmp
push
pop
fmuls
inc
pop
ss
jg
pop
popf
push
je
pop
ja
mov
mov
fwait
incl
jp
daa
les
int3
jno
adc
mov
push
pop
push
push
subb
loop
pop
stos
jno
push
out
nop
pop
test
sub
out
jg
mov
mov
mov
std
pop
add
dec
xchg
pop
cmpl
mov
and
inc
sub
xchg
pop
ret
inc
sbbl
push
push
fs
or
js
movsl
stos
pop
imul
cld
cltd
add
ds
push
test
and
pop
mov
in
call
jecxz
xchg
cmp
sbb
pushf
pop
push
addr16
clc
push
pop
js
pop
repnz
js
ss
out
pop
adc
dec
inc
push
mov
jno
sbb
xor
imul
sbbb
xchg
lock
dec
pop
jl
pop
stc
or
repz
push
sti
in
std
sar
rclb
loopne
sbbb
pusha
push
popa
jmp
cmp
or
fimull
jmp
pop
push
dec
pop
inc
cmc
jge
pop
mov
mov
and
test
and
pop
push
in
outsb
or
pusha
cltd
inc
ds
pop
lock
and
in
loope
jmp
lods
mov
pusha
dec
mov
inc
sbb
inc
mull
pop
jns
in
sbb
cmp
mov
adc
adc
pop
sub
dec
sbb
adc
ljmp
xor
insl
pop
mov
inc
les
sti
ret
pop
mov
or
lahf
dec
rcl
lret
inc
lock
push
cmp
lods
call
dec
es
jnp
outsb
cmp
jmp
adc
pop
adc
testl
ja
jp
and
mov
pop
push
rorb
test
pop
cmp
mov
loop
test
adc
add
pop
xor
out
and
sbb
lret
es
push
push
push
mov
lret
dec
jne
rcrb
adc
pop
das
mov
popf
enter
sti
idiv
inc
cmp
push
adc
dec
push
pop
xor
pushw
lahf
or
jmp
hlt
lcall
mov
or
xchg
push
pusha
dec
push
xchg
add
jp
pop
cmp
jbe
or
xor
fmuls
insb
xor
inc
enter
xchg
cwtl
std
adc
mov
pop
mov
vsubpd
out
xor
fistpll
pop
or
pop
cmc
add
xlat
adc
and
leave
pop
xchg
insl
pop
jbe
imul
sbb
mov
fucomip
sti
inc
pop
dec
in
or
inc
ss
ret
sub
xor
inc
insl
flds
sub
ss
ja
adc
loop
lods
fstpt
xchg
shr
sbb
push
xor
dec
or
cld
xchg
arpl
cmp
sbb
and
adc
cmc
cli
fnsetpm(287
lods
and
pop
xor
or
inc
inc
testl
and
test
outsl
cmp
push
mulb
jns
and
and
popf
sub
inc
ja
jg
pop
call
inc
add
pop
loope
ds
lahf
leave
xchg
push
pop
stos
and
imul
sub
test
xchg
ret
pop
mov
cli
cmp
or
mov
adc
jnp
pop
lret
and
xchg
add
sbb
pop
dec
lods
mov
jmp
adc
iret
dec
sbbl
jbe
inc
ja
imul
add
imul
sub
and
adc
jecxz
sbb
aas
pop
das
out
dec
leave
es
pop
xchg
lods
inc
or
icebp
dec
movsl
push
popf
int3
sbb
ror
pop
xor
cltd
mov
cmp
pop
dec
sbb
push
adc
lods
sbb
pop
cwtl
mov
adc
push
xchg
cmp
sub
int
movsb
sbb
in
pop
stc
sbb
mov
scas
xchg
mov
in
cmp
fsubs
add
pop
pop
dec
popa
rorl
jmp
pop
or
lea
out
cli
ficompl
xchg
sub
pop
cmp
adc
cmp
xor
in
pop
lret
mov
pop
or
dec
inc
dec
and
inc
push
jl
mov
push
addr16
push
fwait
lret
jge
cs
std
mov
lods
cwtl
jno
push
mov
xchg
test
dec
or
pop
mov
push
or
pop
add
out
es
mov
dec
xor
push
ret
pop
aad
sub
lret
fisubs
mov
pop
add
nop
jno
push
pop
xchg
jg
sub
jnp
int3
sbb
xor
pop
ljmp
xor
std
movsl
ja
lahf
cmp
sub
cmp
gs
sub
push
into
popa
or
arpl
sub
jecxz
adc
sub
xchg
fld
adc
insb
movsb
dec
ja
jb
out
mov
jne
into
imul
push
cmp
or
push
lahf
dec
movsl
fcmovu
enter
je
pusha
adc
or
sub
pop
movsb
sbb
jnp
in
cmp
xor
mulb
in
adc
cmpsb
roll
mov
out
shrb
add
mov
pop
test
xlat
sub
gs
inc
push
imul
pop
lahf
mov
cmpsb
pop
add
arpl
and
jmp
idiv
xor
inc
aam
push
or
sub
mov
mov
xchg
ja
fnstenv
ret
dec
pop
jo
push
and
scas
push
ds
lcall
loopne
icebp
test
or
inc
jbe
adc
sahf
inc
dec
dec
pop
stc
push
bound
pop
adc
pop
popf
lcall
pop
push
push
push
cmp
fwait
jl
xor
mov
mov
pop
out
outsl
mov
adc
mov
xchg
ja
sub
xor
fwait
ljmp
xchg
add
mov
rcll
or
and
adc
pop
test
cmp
dec
leave
add
dec
and
imul
push
loope
sbb
and
and
dec
or
and
cmpsl
push
stos
xlat
push
add
adc
push
fst
inc
pop
and
mov
pusha
in
jmp
ss
pop
inc
inc
icebp
jge
xchg
sbb
out
in
push
imul
xchg
pop
sub
jae
dec
pop
cmp
mov
xor
lock
sub
cmp
mov
pop
sub
jo
adc
xlat
dec
dec
dec
sbb
push
mov
cmp
insl
daa
push
jg
dec
repz
pop
inc
mov
loopne
rorl
cmp
xor
imull
sbb
xchg
mov
sub
outsl
std
mov
jbe
pop
inc
mov
pop
sbb
xchg
mov
mov
bound
add
sbb
mov
jne
aam
inc
cmp
pop
and
mov
jbe
sub
dec
stc
or
xlat
scas
aam
pop
mov
pop
pop
and
fiaddl
mov
lret
adc
sub
mov
push
pop
add
cmp
dec
inc
xchg
insl
pop
push
xchg
out
push
pop
inc
push
pushl
push
xor
pop
cmp
ss
js
push
xorb
push
add
movb
and
jne
das
push
sar
sub
mov
cmpsl
cmpb
test
outsl
pop
push
mov
xlat
mov
inc
dec
mov
fistps
dec
inc
aad
stos
pop
icebp
xchg
push
cmpb
xchg
fstl
daa
mov
inc
pop
lea
push
xor
jle
cmp
adc
xchg
cmp
inc
push
push
adc
cmpsb
pop
rcll
xorl
push
sub
test
mov
fidivl
test
stos
nop
ljmp
fmuls
imul
jnp
cli
lcall
pop
in
jae
inc
int3
jns,pt
xchg
sub
inc
loop
lods
data16
xor
fwait
jp
js
add
cmp
dec
mov
fwait
bound
cli
push
lods
xchg
jnp
cmp
adc
pop
mov
sbb
dec
push
push
das
xchg
int3
add
inc
mov
xor
push
ret
mov
jno
lock
ss
mov
mov
scas
int
lcall
mov
daa
stc
pop
inc
xor
adc
mov
or
xlat
pop
mov
xor
cmp
jnp
cmp
dec
jmp
sbb
pop
cs
std
ds
popa
push
xor
sbb
dec
pop
add
in
or
jbe
sbb
dec
addr16
pop
mov
adc
pop
pop
inc
into
inc
mov
cltd
fwait
push
les
pop
dec
sub
xor
mov
or
adc
je
ljmp
push
or
ret
lret
mov
arpl
cmp
repz
pop
vpminub
pop
adc
in
mov
mov
jnp
push
inc
pop
lds
xchg
cmp
imul
test
mov
xchg
js
std
xchg
ja
dec
cmp
mov
sub
and
pop
xchg
jg
rcll
mov
out
stos
or
cmp
inc
lods
pop
loopne
scas
fstl
aas
xor
imul
mov
dec
inc
hlt
inc
test
int3
add
rcrl
incb
mov
pop
repnz
aas
mov
andb
dec
test
pop
scas
dec
rcrl
cltd
pop
das
les
insl
pop
or
leave
jne
mov
pop
dec
mov
push
push
imul
pop
std
xchg
sbbl
cmp
es
fists
int3
push
pop
dec
adc
arpl
sbb
fldt
push
pop
cmpsl
gs
mov
mov
outsl
test
or
inc
or
cld
and
adc
sub
sti
je
shrb
sbb
push
mov
mov
mov
lea
mov
xchg
test
cmpl
mov
cmp
daa
mov
cmpsb
dec
lret
sbb
sub
adc
cmp
pop
sbb
je
icebp
or
push
es
rcrl
les
push
into
aas
adc
icebp
out
test
jle
aaa
mov
daa
addl
enter
adc
mov
mov
sub
or
jge
mov
pop
pop
aad
push
sub
cmp
and
jp,pt
pop
dec
add
cmp
mov
out
push
or
adc
jo
inc
imul
std
mov
add
cltd
pop
ret
xchg
int
pop
negl
xchg
mov
je
pop
lods
push
test
cwtl
mov
jecxz
mov
sbb
call
mov
dec
sbb
fmul
jns
outsl
into
fistl
mov
inc
mov
fisubrl
dec
pop
ds
ljmp
test
outsl
dec
and
cmp
je
lcall
lock
pop
mov
lods
fimull
leave
sti
lods
pop
add
pop
ja
dec
jle
xor
jge
ds
cmp
inc
cli
pop
jae
in
int
cmp
jne
pop
sub
inc
jg
int3
popa
cmp
mov
mov
dec
pop
add
push
push
add
push
clc
mov
cli
sbb
pop
fwait
lods
inc
inc
cs
inc
lahf
pop
daa
xchg
lds
mov
mov
aad
into
mov
les
pop
xchg
cmc
xchg
repz
xor
test
jmp
and
pop
mov
fists
push
xchg
mov
hlt
inc
dec
popa
jnp
in
call
xchg
mov
cld
pop
mov
xchg
ss
push
rcr
test
and
pop
jge
mov
ja
cmpsl
in
testl
mov
leave
sub
add
pop
jmp
mov
xchg
arpl
cmp
sbbl
dec
js
pop
inc
out
mov
mov
mov
jnp
faddl
test
xor
fmuls
icebp
pop
xor
push
movsl
into
lret
pop
or
jg
pop
ljmp
int3
sbb
fnstenv
xchg
xchg
dec
test
icebp
pop
stc
daa
pop
inc
or
dec
call
inc
fsubs
jl
adc
insl
pusha
pop
int3
push
inc
ret
rclb
push
pop
rcll
sub
jge
imul
mov
pop
les
out
lcall
mov
or
inc
add
jo
pop
mov
xor
in
test
fdivs
mov
lea
mov
xchg
outsb
mov
cwtl
push
pop
push
imul
adc
xchg
sub
sbb
xor
pop
and
pop
lcall
sub
adcl
pop
lret
pop
out
add
mov
push
cli
sbb
icebp
rclb
and
lret
les
sub
aad
arpl
aaa
pop
out
jae
pop
das
bound
mov
ljmp
int3
pop
mov
dec
xor
add
orl
sbb
or
fsts
xchg
xchg
pop
test
daa
decl
js
or
pop
push
inc
xor
fidivl
int
pop
push
data16
pop
sub
mov
aam
push
and
xor
js
scas
pop
sub
jbe
fisubs
test
dec
popf
adc
adc
pop
pop
in
leave
jno
mov
test
sub
sbb
mov
gs
dec
sub
shrb
mov
pop
push
lcall
cmpsb
dec
shll
pop
jae
mov
ficompl
inc
repz
pop
jp
adc
ret
pop
in
mov
fbstp
inc
cmp
mov
sbb
mov
add
int3
pop
imul
iret
mov
ss
insb
lcall
push
in
jecxz
or
ja
jnp
ss
mov
push
sarb
dec
dec
push
xor
cmpb
movb
lds
push
pop
xchg
movsb
xchg
push
dec
aaa
dec
testb
cltd
jecxz
pop
jbe
mov
xor
aas
jl
lcall
cmp
adc
add
add
and
jmp
in
push
xchg
jecxz
or
rcrl
pop
aas
jo
xchg
pop
adc
imul
popf
jmp
mov
in
divb
out
pop
cmp
sbb
test
jno
jo
pushf
pop
and
mov
mov
dec
mov
das
pop
push
sub
push
inc
push
push
mov
pop
xor
cmp
sbb
orl
push
fisubrl
pushf
pop
sub
mov
jns
sbb
jne
adc
or
inc
pop
push
imul
nop
test
jp
mov
lret
pop
cmp
jge
mov
dec
mov
add
mov
mov
cmp
or
and
add
bound
pop
gs
daa
loope
sbb
mov
push
add
sti
cmp
pop
jmp
das
pop
testl
into
mov
fwait
loopne
nop
cltd
mov
push
mov
mov
mov
cltd
jmp
mov
fcompl
jbe
xor
es
mov
lea
pop
mov
daa
aad
or
les
sbb
lock
push
pop
push
jnp
mov
pop
scas
fwait
cmpsb
add
pop
imul
aas
or
or
lea
and
adcb
test
mov
push
sbb
arpl
and
xor
jecxz
mov
dec
push
cmp
ret
cmp
inc
push
add
sti
jae
or
xlat
ror
jbe
sub
xchg
or
ret
adc
pop
adc
notl
nop
jae
repnz
notb
into
mov
mov
or
aam
jae
pop
dec
in
push
and
imul
push
cmp
add
fwait
pop
dec
test
and
ljmp
mov
mov
adc
xlat
call
dec
add
inc
insl
and
int
mov
cwtl
pop
std
push
rcrb
cmp
lret
sub
pop
jle
and
ljmp
and
dec
sub
insb
dec
xor
adc
outsl
pop
sbb
les
xchg
inc
ret
add
aas
stos
dec
cs
cmp
popa
enter
movlps
push
mov
sub
ret
mov
adc
xor
int
push
cmp
sbb
xor
pop
mov
push
push
pop
and
fmul
dec
and
lcall
sbb
pop
jmp
adcb
push
sbb
addl
jecxz
pop
fisubs
je
and
sbb
fadds
pop
mov
xor
lret
adc
outsb
test
pop
pop
dec
inc
leave
mov
mov
outsl
pop
dec
shrl
fwait
popa
rcr
fists
sub
fdivrs
or
and
adc
daa
jl
pop
push
out
clc
addr16
sti
xor
sub
mov
mov
in
and
push
ljmp
fldcw
fs
dec
pop
push
dec
or
jae
inc
test
jns
and
jle
in
lcall
xchg
outsl
pop
mov
sub
jne
push
adc
jne
jmp
lock
pusha
xchg
pop
mov
lea
stos
cmp
push
inc
sub
cmp
add
ss
test
dec
call
imul
stos
and
fucom
inc
jp
pop
popf
xchg
outsl
loopne
adc
pop
or
mov
arpl
xlat
cld
adc
xor
sbb
push
xor
add
xchg
pop
jne
push
push
jge
mov
ds
sub
cmp
and
insw
xor
js
mov
mov
hlt
loopne
jbe
inc
cmp
dec
mov
xor
inc
mov
cmp
repnz
inc
push
jae
add
ljmp
sbb
mov
pop
and
cli
inc
std
imul
ret
sbb
pop
les
dec
xor
mov
jbe
mov
outsl
gs
call
inc
pusha
pop
popf
xor
push
mov
pop
mov
fidivrl
mov
es
sbb
aad
insl
push
inc
mov
repnz
push
sub
adc
orl
loopne
test
pop
push
jge
mov
push
es
cmp
push
or
les
inc
push
ds
int
mov
xchg
pop
movl
jg
jl
idivb
pop
mov
iret
add
repz
cltd
or
sub
sbb
iret
test
dec
push
daa
or
stc
sbb
jne
mov
inc
shl
pop
inc
pop
jbe
xor
inc
pop
dec
dec
cmpl
lods
sub
xchg
mov
adc
push
mov
sbb
es
cld
aam
add
das
mov
ja
mov
mov
cmpsl
and
adc
outsl
inc
or
fidivl
mov
lret
jl
les
dec
pop
adc
dec
adc
mov
pop
or
mov
mov
add
loope
or
sbb
push
inc
hlt
sahf
iret
mov
andb
adc
dec
jbe
adc
sub
and
inc
sbb
ficoml
fs
sbb
iret
or
dec
cmp
jg
mov
pop
dec
and
push
push
pop
in
icebp
cmp
pop
lret
std
pop
pop
in
decb
roll
pop
push
adc
js
jnp
ds
inc
cltd
out
push
sub
and
movsl
sub
xlat
pop
pop
in
icebp
xchg
mov
and
sbbb
repnz
sub
and
sbbl
js
jmp
mov
cmp
add
pop
fisubl
jmp
aaa
pop
push
pusha
hlt
incl
mov
sub
mov
cmp
inc
add
popf
outsl
adc
cwtl
fsubrl
fldl
inc
fistpl
std
jle
testl
push
jmp
inc
pop
lcall
outsl
pop
std
scas
addl
push
mov
jecxz
dec
das
es
hlt
pop
fs
mov
mov
dec
and
cmp
out
push
mov
lcall
jne
inc
pop
jg
dec
sbb
pop
xchg
out
or
or
mov
lds
lcall
jns
sub
mov
sahf
test
pop
test
push
xchg
push
pop
andb
xor
jae
fdivs
addb
inc
jmp
in
mov
fidivl
mov
sbb
or
dec
sub
pop
es
pop
pop
repnz
rcrb
movsl
xor
les
pop
fadds
inc
sub
addr16
adc
mov
xchg
adc
cltd
fsubs
imul
ficoml
bound
push
into
pop
push
dec
sbb
jb
scas
js
push
cmp
sub
cli
add
fiadds
jge
ljmp
mov
lock
cmp
mov
mov
lea
push
mov
sub
mov
gs
mov
xchg
cmp
in
and
idivl
stos
gs
add
scas
dec
pop
ficoml
cwtl
aam
sbb
enter
push
inc
cmp
sbb
sti
pop
cmpsl
mov
or
leave
dec
fldenv
fists
cmp
adc
inc
mov
cmc
rcll
push
test
pop
ret
sbb
repz
cld
sub
pop
xlat
inc
dec
xchg
mov
gs
mov
test
loop
pop
inc
lret
jl
adc
push
ss
or
push
inc
je
mov
add
adcb
adc
pop
jmp
leave
mov
jnp
mov
dec
insb
xorb
pop
inc
pop
cmp
sbb
push
pop
jg
pusha
out
addr16
inc
pop
push
and
jne
mov
scas
pop
jle
loope
mov
jmp
pop
xlat
or
dec
dec
cwtl
stos
pop
mov
arpl
arpl
pop
test
push
loopne
xchg
xchg
aad
mov
jb
mov
xor
call
movsb
cmpsl
pusha
mov
inc
icebp
and
imul
jb
fbld
push
inc
pusha
push
andl
jle
push
push
adc
sub
inc
ja
loop
cmc
loopne
pop
jecxz
jne
jge
adc
mov
std
pop
pop
and
lret
test
fbstp
out
add
pop
cmp
pop
pop
in
xor
pop
add
or
sub
pop
inc
xor
xor
push
es
add
dec
cwtl
out
mov
mov
and
sti
arpl
lcall
gs
pop
jns
nop
adc
cld
adcb
sar
in
loopne
cmp
outsb
out
jne
add
cmp
pop
jg
push
scas
push
rcrl
repnz
and
ss
pop
jb
cmp
lcall
nop
stc
movsb
jmp
int
test
cs
cmp
pop
leave
sub
dec
mov
xchg
xor
or
in
or
mov
rcrb
inc
enter
sbb
hlt
push
inc
cmp
das
pop
xchg
ljmp
pop
loop
iret
out
inc
sub
sub
jne
pop
pop
dec
push
cwtl
mov
dec
lods
pop
xchg
pop
out
add
popf
fstps
cwtl
les
push
and
sbb
adc
pop
cmp
dec
roll
pop
cltd
cs
lock
gs
or
push
mov
jecxz
pop
dec
dec
lcall
push
stos
pop
ret
sarl
push
push
jns
imul
pop
pop
lds
pop
fldt
pop
in
mov
ret
jge
mov
and
push
es
mov
imul
pop
xor
icebp
pop
push
and
jo
pop
movsl
add
mov
pop
sub
icebp
push
pop
pop
add
out
lea
mov
shll
jbe
cmp
add
inc
cwtl
in
daa
mov
pop
cli
and
jmp
or
push
imul
push
sub
les
xor
lcall
test
outsl
xchg
lea
mov
add
or
scas
pop
ja
adc
pop
jecxz
pop
inc
iret
orb
test
sbb
pop
pushf
arpl
xchg
out
jne
or
cltd
add
inc
jmp
add
lahf
dec
in
sub
and
jo
and
mov
movsb
mov
lcall
push
roll
xor
pop
pop
push
popa
add
test
sub
inc
xchg
test
and
sbb
xchg
add
ds
mov
aad
mov
and
mov
cmp
pop
lret
lods
les
xchg
dec
stc
into
fists
pop
je
sahf
adc
sub
adc
sbb
or
pushf
push
pusha
mov
xor
mov
arpl
and
fidivrs
pop
fistps
fwait
loope
pop
mov
inc
lea
lods
pop
mov
daa
dec
mov
xchg
clc
jecxz
fists
shl
pop
shll
in
inc
ja
ss
xchg
lods
push
push
inc
cmp
mov
xchg
pop
or
push
ds
das
dec
addr16
add
sbb
and
and
or
jno
or
lret
fisubrl
stc
push
int3
push
pop
push
xor
mov
das
push
push
xor
push
adc
push
pop
ss
out
jns
pop
pop
sbb
popf
mov
pusha
inc
incb
or
mov
out
lret
ss
aad
xchg
fstpl
into
test
mov
pop
std
adc
add
inc
push
pusha
dec
cmp
movb
cli
iret
pop
scas
pop
pop
sub
pop
cmp
pop
gs
mov
scas
or
or
mov
sbb
jne
cs
test
push
pop
or
xor
pop
push
jmp
cmp
mov
enter
and
fists
lds
cmp
cs
cmpsb
sub
adc
inc
cld
fisubs
push
fcom
popa
shll
sub
cwtl
inc
pop
and
maxps
pop
xor
cmpsl
push
ljmp
fidivrl
aas
adc
scas
pop
mov
push
pop
cmp
pop
push
dec
ds
jb
lods
js
xchg
test
nop
mov
mov
movsl
fdivrs
pop
inc
push
jl
xchg
pushf
aam
pop
add
jne
mov
dec
inc
enter
shlb
aam
mov
pop
adcl
or
mov
push
push
jne
xor
inc
lcall
pop
add
jae
or
mov
dec
cmp
mov
sbb
loopne
pop
xchg
imul
sub
insb
in
pop
das
sub
ds
jbe
jo
lcall
pop
int
dec
xor
cmp
or
nop
dec
add
xor
jge,pn
jecxz
lds
ds
mov
sub
push
and
pop
push
repz
nop
jle
shlb
cld
in
xor
jbe
adc
mov
xchg
mov
sub
jecxz
jmp
pusha
ret
nop
xor
or
pop
fwait
dec
ret
add
lock
std
mov
pop
stos
dec
sbb
sbb
pop
cmp
addl
imul
push
ja
dec
pop
jne
cmp
pop
adc
sbb
adc
mov
or
xlat
cltd
and
adc
cmp
jecxz
sbb
cmc
out
pop
mov
or
daa
imul
adcb
pusha
dec
cltd
idivb
add
sbb
cmp
push
pop
push
adc
jmp
push
adc
aam
loope
data16
xchg
dec
icebp
jae
and
std
add
cli
imul
jl
fdivrl
int3
and
jge
arpl
push
inc
pop
sbb
cs
jb
mov
sub
cmp
fistpl
sbbb
push
mov
pop
dec
lock
in
push
xchg
roll
loope
ds
pop
adc
pop
pop
ss
inc
inc
in
fstpt
mov
jge
fstps
cwtl
push
mov
test
fcomps
inc
pop
mov
iret
ret
dec
mov
sbb
ljmp
dec
inc
mov
popa
mov
cli
lret
mov
subl
mov
or
push
jo
sub
jmp
and
inc
or
mov
push
or
dec
add
adc
out
outsl
fists
xchg
mov
jne
inc
push
pop
and
dec
daa
jle
std
pop
inc
xchg
push
call
cmp
lea
movsb
outsb
jmp
push
adc
ret
repz
nop
sbb
push
pop
pop
inc
pop
test
fs
add
push
jmp
sub
ss
inc
daa
mov
pop
push
dec
add
mov
lret
fldcw
jmp
pop
in
or
js
cmpsl
pop
pop
xlat
nop
popa
adc
mov
and
add
sbb
addr16
pop
clc
out
jae
pop
jl
fsubs
inc
insb
sub
pop
mov
jge
dec
or
push
push
pop
out
jecxz
cwtl
dec
pop
jp
pop
aam
dec
sbb
pop
sbb
inc
mov
sbb
xchg
lds
cmp
mov
and
repnz
hlt
adc
push
sbb
jne
add
int3
loopne
nop
ret
dec
and
or
xchg
dec
pop
mov
sub
sbb
pop
cs
or
xchg
jbe
notl
xchg
call
dec
cmpsl
in
adc
push
cs
enter
and
pop
shl
pop
xchg
jno
inc
push
das
dec
adc
mov
out
mov
sbb
cwtl
jp
pop
stc
mov
in
cmp
inc
pop
adc
pop
dec
std
shll
push
int
cmp
pop
pop
decl
es
rorb
ljmp
xchg
call
add
bnd
push
push
in
dec
lods
in
pop
cs
test
scas
vmovdqu
push
ret
pop
push
and
fwait
pop
pop
pop
shlb
adc
fcom
je
fs
mov
xchg
popa
push
mov
es
pop
inc
mov
sbb
cmp
enter
cwtl
xchg
and
jle
pop
mov
fisubs
xorl
push
nop
adc
push
lods
lret
add
test
ljmp
add
dec
nop
pop
popf
sub
add
sub
sbb
sbb
test
sub
or
pop
mov
pop
std
mov
mov
addr16
jbe,pt
sub
pop
gs
in
mov
mov
fstpt
pop
jbe
test
dec
adc
mov
pop
mov
scas
leave
add
sahf
dec
dec
push
adc
in
pop
jmp
mov
pop
cmp
lods
pop
enter
mov
jecxz
and
add
pusha
pop
xchg
or
xor
aas
cmpsb
jl
stos
pop
push
jbe
push
fcoms
pop
sub
test
mov
xchg
sbb
arpl
pop
jne
sbb
aad
or
push
pop
mov
movsb
mov
pop
xchg
ja
cmpl
je
adc
cmp
pop
fwait
sbb
inc
xchg
dec
xor
sahf
push
pop
addl
mov
jae
jo
sub
push
pop
dec
imul
dec
or
fs
ljmp
push
pop
fstps
sbbb
cmp
cmp
sub
std
sbb
pop
or
outsb
mov
clc
xchg
sbb
dec
stc
enter
fxsave
int3
ljmp
fstpt
pusha
fsubr
pop
test
push
mov
jge
push
ljmp
pop
push
dec
out
and
in
and
sbb
popa
aas
fisttpll
stc
add
fiaddl
std
jge
jmp
cmp
adc
popa
fidivs
or
in
pusha
mov
or
sub
lds
xlat
test
and
add
sti
fcmove
fiadds
add
inc
ja
std
pop
push
aas
outsb
mov
pop
loope
mov
xor
sub
push
adc
jbe
ljmp
jne
and
xchg
jnp
lret
pusha
mov
rep
mov
or
adc
inc
push
push
dec
loopne
cmovbe
mov
pop
inc
sub
outsl
ficompl
in
jge
push
in
mov
inc
jl
and
pop
das
sahf
cmp
push
rcl
dec
pop
push
mov
mov
push
jns
or
jecxz
jno
push
imul
mov
push
pop
inc
cmpsb
cwtl
cltd
pop
pop
xchg
inc
ds
into
xchg
pop
cmp
mov
cmp
pop
test
sub
mov
or
out
nop
inc
dec
sbb
pop
daa
xchg
outsl
jmp
rorb
pop
mov
add
pop
pop
and
mov
repz
cmp
scas
xor
sbb
pop
push
and
aaa
push
jg
push
and
pop
push
mov
je
inc
pop
push
cmp
xchg
mov
je
xchg
push
push
push
dec
arpl
dec
mov
pop
sub
pop
lret
ja
add
popl
int3
daa
pop
outsl
jp
pop
push
adc
mov
pop
push
or
cwtl
hlt
ret
cs
adc
mov
inc
test
mov
pop
lods
adc
mov
dec
jecxz
xchg
lods
xchg
mov
je
fistps
loop
dec
pop
jmp
in
lods
int
cwtl
movsl
imul
push
push
outsl
sub
scas
jb
pop
ja
arpl
lret
sub
aas
push
stos
cwtl
inc
pop
cmpsl
sahf
jp
adc
add
je
or
or
pop
jae
sub
sub
sar
pop
shl
mov
mov
pop
mov
or
lds
cmp
outsl
sbb
ficompl
sub
dec
inc
add
cmp
popa
jne
outsb
pop
xchg
ret
or
enter
jnp
add
push
mov
push
cmpb
test
add
je
and
cmp
in
push
js
jo
mov
adc
out
and
push
imul
pop
mov
add
sti
jae
or
mov
cwtl
ja
dec
jp
inc
cmp
dec
clc
loopne
xchg
ficompl
xchg
sub
arpl
cli
mov
xor
sbb
adc
test
sub
ss
pop
xchg
dec
push
mov
fbstp
aas
test
fstps
ficoml
leave
insb
movsb
jge
dec
idivl
fdivrs
push
and
jbe
cwtl
fiaddl
ljmp
aam
outsl
jmp
adc
fisttps
popa
cwtl
cli
cltd
or
pop
add
dec
inc
inc
xor
pop
mov
adc
aaa
xor
lods
dec
jne
sbb
dec
aad
xor
pop
and
mov
fstps
cmp
sbb
fistpll
dec
jle
mov
cmp
push
cmp
out
xor
inc
fildll
jge
mov
pop
sbb
dec
xchg
out
dec
mov
pop
negb
pop
mov
jno
daa
cwtl
cltd
fwait
pop
pop
adc
mov
test
fsts
adc
pop
lods
and
pushf
dec
clc
repnz
pop
xchg
ljmp
pop
repz
pop
add
flds
dec
pop
stos
data16
dec
add
jge
jae
push
pop
test
out
jg
xor
push
push
add
dec
shrl
pop
pop
sub
cmc
sub
fcmovbe
sahf
fcoms
mov
dec
hlt
pop
insb
in
lahf
cmpsl
pop
das
push
pop
test
mov
add
inc
popa
sub
ficompl
jecxz
shr
pop
leave
cmp
fisttps
nop
sar
popa
add
mov
mov
push
add
loope
dec
pop
sub
mov
pop
push
pop
fimull
cmp
jge
and
and
push
pop
mov
les
pop
mov
add
pop
pop
push
cltd
in
popa
cmp
xchg
sub
movsl
adcb
add
pop
mov
imul
sbb
xchg
ret
pop
repz
std
int3
cmp
mov
sahf
aaa
sub
push
movsl
cmp
cld
jecxz
sbb
in
xor
cmc
or
xchg
add
fwait
push
ret
and
jg
push
jnp
dec
dec
shr
bound
cmp
or
sbb
jne
sbb
jg
push
pop
cwtl
jb
add
test
add
xchg
or
jno
push
push
cmp
mov
push
out
dec
vcvtps2pd
out
pop
xchg
js
adc
dec
xor
xchg
out
cmp
add
or
mov
adc
pop
push
cltd
jg
lods
test
sub
pop
cmp
sub
add
popa
mov
mov
mov
xor
sbb
outsb
filds
jge
rcrb
ret
mov
popa
pop
xchg
sub
pop
xor
imul
jns
push
fwait
shll
cmp
arpl
dec
sbb
mov
add
test
enter
jmp
stos
push
pop
xor
push
andl
out
adc
insl
xchg
pop
stos
pop
xlat
cmpsl
fs
popf
xor
lcall
push
xor
loope
mov
sub
adc
bound
jns
sub
inc
cwtl
in
sbb
push
sbb
add
sti
pop
add
mov
inc
jmp
xchg
jae
jle
cmp
sub
xor
ss
adc
dec
and
add
jno
filds
pop
push
pop
popf
mov
mov
mov
pop
cmpsl
dec
or
out
and
xor
pop
mov
divl
lea
sbbl
imul
push
pop
aas
cmpsb
or
xchg
cwtl
adc
pop
js
and
cmp
dec
and
ja
pop
xchg
push
push
lock
js
pop
in
iret
inc
ret
mov
mov
push
jnp
or
pop
shl
dec
sbbb
dec
insl
xchg
mov
stos
pop
rcrl
inc
adc
sub
dec
repnz
adc
push
sbb
mov
mov
and
adc
adc
pop
sub
mov
or
mov
pop
test
mov
data16
les
ja
lea
mov
xor
sbbl
dec
imul
jp
pop
lea
ss
or
add
cmp
push
inc
push
sbbb
xchg
pop
push
in
dec
filds
gs
pop
test
pop
jmp
dec
push
arpl
sbb
inc
pop
push
xchg
xor
xchg
cmp
incl
inc
shrl
and
imul
test
xchg
pop
vpcmpgtb
xor
cmp
pop
shlb
sub
in
and
sub
rcrb
add
sti
sbb
pop
fimull
or
mov
pop
dec
xchg
das
ret
pop
adc
lock
sbb
mov
push
push
sub
cmpsb
icebp
js
ljmp
ja
int
pop
pop
mov
cmpsb
cmp
in
cmp
ret
ljmp
push
arpl
xchg
adc
mov
push
cmp
gs
sbb
jg
dec
push
js
pop
shll
pop
cli
inc
test
jne
jbe
jle
or
sbb
arpl
cmpl
rcr
ret
sub
and
inc
push
fcoms
xor
xchg
pop
fisubrl
jmp
out
fadds
mov
push
rcll
mov
lea
push
and
in
pop
lret
fmull
movsl
sbb
push
inc
enter
sbb
sub
scas
pop
cmc
adc
push
dec
pop
movsl
dec
mov
cmp
or
push
fwait
rolb
pop
pop
add
jno
pop
sub
lahf
fistpl
push
and
xchg
loopne
adc
adc
push
xchg
mov
mov
adc
or
push
pop
ds
sbb
loope
pop
xor
and
aad
gs
sub
mov
pop
arpl
mov
out
add
shrb
mov
xchg
inc
test
pop
roll
icebp
dec
stc
imul
pop
sub
inc
adc
scas
ss
pop
mov
mov
ja,pn
test
push
ds
mov
cmp
dec
ror
popa
fsubrs
mov
dec
pop
lock
mov
or
imul
pop
inc
push
loope
cs
adc
sbb
div
repnz
arpl
jle,pt
sti
insl
pusha
pop
inc
aaa
dec
rcll
mov
int3
mov
sbb
repz
lods
cmp
add
mov
pop
push
lcall
xor
addb
dec
jo
xchg
sbb
gs
mov
dec
sub
pop
jp
les
add
inc
pop
daa
lods
jge
aad
dec
dec
pop
dec
add
aaa
add
or
and
push
xor
pop
sbb
sbb
and
fldt
xchg
add
imul
sub
adc
pop
sub
inc
pop
leave
es
dec
pop
mov
movl
mov
jno
push
aaa
jbe
mul
test
fstpt
repz
xchg
aam
xchg
out
ret
mov
bound
fsubrs
jno
push
xchg
movsb
inc
dec
and
mov
pop
xor
das
cmp
fcoms
mov
out
jne
icebp
dec
imul
negb
cmp
jo
cmp
xor
inc
xchg
or
sub
cwtl
cmp
rcrb
push
cs
jp
or
pop
icebp
in
adc
dec
movl
testl
inc
sahf
add
jecxz
mov
mov
fcomps
mov
xchg
xor
xchg
pop
lcall
sub
fmulp
sub
out
push
stos
ret
dec
or
std
inc
lcall
movsb
or
in
xchg
jecxz
mov
cs
pop
xor
pop
mov
jb
sub
sub
cwtl
jnp
lret
cmp
fldt
pop
push
les
dec
insb
push
fisubl
add
xchg
push
sbb
arpl
adc
mov
fwait
inc
sub
dec
adc
cmp
xor
das
in
cmc
lods
pop
xchg
roll
or
or
cs
push
xchg
clc
pushf
fstpl
insl
and
and
hlt
adc
inc
iret
mov
and
adc
stc
mov
shll
repz
sbb
adc
mov
test
aas
cs
movsb
ficompl
loopne
push
dec
jmp
cmp
mov
mov
dec
jp
jo
mov
loopne
xor
call
pop
idivl
dec
imulb
mov
pop
inc
int
and
adcl
pop
jmp
sahf
lcall
bound
cli
mov
mov
mov
pop
add
gs
ja,pn
enter
adc
and
pop
or
ds
in
xchg
stos
pop
push
lret
clc
les
xchg
inc
pop
pop
push
add
dec
sbb
cmp
jbe
and
mov
pop
mov
xor
jbe
add
fidivl
sahf
cli
sbb
adc
jl
sub
fistpll
test
cs
inc
pop
sbb
adcl
lea
mov
out
daa
negb
mov
xor
rcll
fsubs
or
pop
inc
push
inc
nop
inc
mov
lock
jmp
int3
in
xor
js
jae
jo
pop
mov
pop
and
pop
push
cmp
pop
shr
adc
and
xor
add
jb
mov
dec
insl
and
xchg
addr16
pop
inc
lcall
pop
popf
xlat
xchg
mov
xor
pop
stos
xor
int3
cmp
ret
adc
or
data16
jmp
sbb
and
sub
sub
sub
mulb
sbbl
push
sub
imul
lock
pop
mov
data16
push
inc
sub
jno
jne
pop
push
pushf
adc
sbbl
sbb
sub
and
or
mov
dec
sbb
mov
lahf
mov
push
loope
dec
add
sbb
lods
jae
add
test
mov
int
dec
pop
mov
pop
sub
xor
pop
xlat
mov
iret
in
fidivs
sbb
sub
js
jge
or
pop
sub
xchg
adc
pop
or
inc
push
jno
jb
pop
pop
add
push
pop
mov
and
push
rorl
push
jnp
daa
pop
jae
xor
cs
sub
repz
mov
sbb
pop
dec
inc
imul
lea
fwait
into
push
pop
lods
cld
es
pop
fldt
dec
sbb
mov
mov
pop
or
movsb
das
ret
aam
sub
adc
pop
xchg
pushl
pop
orb
push
js
fwait
push
sti
cltd
sbb
or
push
pop
add
shrb
shll
pop
call
xchg
sub
testl
xchg
int3
sbb
pop
pop
ret
ss
jns
dec
out
pop
cmpsl
and
adc
cwtl
add
daa
pop
push
push
jmp
pop
mov
pop
xchg
add
repz
rcrl
add
test
out
adc
lret
sub
sbb
inc
mov
jge
pop
icebp
roll
pop
lcall
push
adc
fisubl
push
in
adc
in
bound
pop
inc
dec
dec
in
insb
cmpsb
decb
icebp
out
pop
push
inc
mov
mov
pop
xorl
add
xor
popa
test
mov
pushf
push
xchg
mov
pop
movsb
flds
add
mov
mov
lds
and
cmp
mov
rcrl
mov
pop
imul
inc
daa
shl
mov
cmpsl
jae
push
jmp
dec
sbb
shrb
push
pop
push
mov
mov
push
imul
sbb
idivb
pop
rorb
arpl
icebp
xchg
dec
push
aam
lock
inc
pop
dec
dec
or
mov
pop
xor
mov
les
pop
faddl
ss
cmp
aam
in
inc
cmp
int3
pop
nop
sti
xor
xorb
push
xchg
cmpsl
mov
pop
add
hlt
out
repz
xchg
fwait
jp
cli
iret
rcrb
pop
test
scas
cltd
dec
xchg
mov
cwtl
jmp
cld
outsl
dec
inc
pop
push
out
cwtl
cs
and
mov
jp
pop
jno
ljmp
out
sub
and
sub
inc
jnp
test
cld
test
lret
pop
lcall
mull
imul
loope
shlb
in
stc
xchg
cmp
pop
cli
scas
rcll
inc
xlat
sbb
hlt
jmp
mov
clc
aad
rorb
fwait
pop
jmp
adc
xchg
adc
cltd
and
mov
adc
aaa
push
jmp
sub
cmp
mov
pop
scas
mov
mov
pusha
addr16
stc
imul
call
xchg
test
fcoms
xchg
ja
cmp
jbe
pop
rorl
ret
enter
gs
sub
adc
pop
add
fstl
cmp
notl
jecxz
xchg
js
dec
mov
push
push
jbe
lods
push
xchg
pop
jl
pop
jg
mov
inc
jle
pop
push
jae
pop
mov
pop
xchg
push
push
jno
adc
pop
pushf
js
cmp
sub
inc
sub
fdivs
xor
out
loope
ja
out
sahf
rcrl
in
movsl
xchg
pop
pop
inc
push
push
in
fstpl
pop
test
dec
mov
push
inc
mov
lret
call
push
pop
push
cltd
jl
es
jp
mov
push
jmp
mov
dec
or
cmp
mov
inc
pop
lcall
sub
aam
in
pop
stos
dec
sahf
mov
ljmp
push
adc
pop
mov
outsb
adc
popf
ret
cltd
fists
xchg
mov
mov
jp
adc
ret
dec
incb
add
jae
push
movsl
mov
testb
pop
scas
pop
mov
out
and
enter
xchg
rorb
push
pop
push
push
imul
inc
xor
sub
lret
mov
and
inc
add
ss
rorl
shll
ret
loope
test
mov
push
je
xorb
cmpsl
push
mov
mov
cmp
aad
cmp
iret
rorb
shl
pop
jge
sub
pop
or
inc
mov
imul
stc
add
repnz
adc
jae
jnp
inc
jns
mov
dec
test
jl,pn
loop
lahf
sti
cmp
call
mov
lock
xchg
out
xchg
adc
mov
xor
sti
pop
in
sub
cmpl
mov
sbb
sar
adc
insl
adc
pop
mov
and
push
pop
gs
pop
push
inc
or
in
pusha
sub
sbb
jns
or
inc
roll
sbb
xor
shrl
adc
scas
jae
mov
inc
and
aaa
sbb
ja
sub
cmp
mov
sub
out
and
aam
into
in
pop
andl
sarl
lds
sarl
cmpb
jnp
xor
mov
data16
daa
and
xlat
das
and
sub
lcall
arpl
popf
dec
loope
sbb
and
data16
pop
xor
insl
inc
or
xchg
iret
in
cmp
xor
xor
ljmp
jg
pop
ja
cmpsb
xor
push
mov
cmp
pop
add
int3
pop
jo
rolb
mov
xchg
sub
sbb
mov
mov
cmpsb
je
pop
adc
out
pop
stc
dec
out
sar
cmp
cwtl
test
fisubrl
pop
and
add
lock
xor
sub
jmp
cld
sbb
mov
and
and
pop
mov
in
fcoml
lods
push
mov
mov
xor
xchg
fisttps
pop
jo
js
xlat
pop
and
dec
daa
mov
push
sahf
jae
mov
push
outsl
das
clc
mov
push
cmp
mov
jnp
lock
pop
int3
insb
std
andl
out
aad
jb
dec
pop
or
and
cli
xchg
and
in
add
bound
subb
fwait
jle
repz
sbbb
pop
mov
jbe
xor
jns
pop
inc
enter
shlb
ret
push
or
sbb
xchg
dec
xor
mov
push
into
push
mov
ljmp
sbb
cmpsl
sbb
inc
jo
and
mov
cmp
pop
daa
add
outsl
leave
mov
mov
aaa
filds
mov
and
test
arpl
pop
push
jb
pop
mov
inc
push
lcall
lds
xchg
sarl
mov
pop
mov
mov
out
xchg
xchg
insl
dec
mov
or
sub
push
aam
jne
cmp
inc
mov
sub
mov
sbb
outsl
pop
xchg
pop
pop
fistpll
aas
jne
fcmovnbe
test
xor
or
cmp
adc
sbb
test
pop
in
jg
inc
jno
adc
dec
add
out
push
and
xor
xchg
filds
jmp
jle
pop
sub
dec
orb
and
xor
add
mov
pop
ss
push
jne
xchg
sbb
jns
sarb
mov
xor
lcall
sbb
mov
pop
xor
test
add
mov
popa
push
ds
nop
xchg
scas
xchg
sti
sub
xchg
push
test
pop
test
mov
dec
pop
outsb
add
pop
imul
je
das
push
movl
add
jmp
mov
cmp
inc
pop
pop
mov
filds
test
or
push
cltd
inc
pop
jbe
mov
mov
mov
pop
lds
gs
out
int3
pop
pop
push
jno
mov
and
pop
mov
pop
sub
or
pop
add
xor
xor
add
or
mov
pop
inc
pop
fcompl
iret
inc
js
inc
add
insb
and
bound
xor
or
add
out
push
jns
sbbb
int3
xor
push
inc
cs
into
xchg
ja
loop
sub
test
out
lcall
dec
push
imul
pop
inc
ret
add
movsl
pop
xor
adc
int
ds
test
xchg
or
xorb
fdivrs
sbb
adc
push
ficoml
sub
das
sbb
mov
jecxz
les
pop
add
mov
jmp
out
xor
or
arpl
mov
je
cmp
stos
mov
adc
rorb
fdivrl
mov
inc
add
pop
jp
pop
mov
rcrl
gs
pop
push
lods
push
push
mov
push
sahf
pop
dec
jg
mov
arpl
sti
gs
fmuls
loopne
pop
sbb
dec
mov
pop
test
sub
pop
inc
adc
mov
sbb
add
xchg
ret
dec
push
imul
jp,pn
xor
int3
mov
pop
clc
icebp
rclb
pop
adc
nop
mov
mov
rcll
clc
sbbb
xchg
inc
iret
and
add
add
pop
xor
loopne
sbbb
push
cmp
inc
pop
pop
sarb
icebp
pop
movsl
stos
inc
xor
pop
jecxz
jbe
inc
push
jo
pop
mov
inc
cs
pop
inc
mov
jg
out
movsb
ljmp
fnclex
xchg
cmp
es
rol
cmpl
mov
imul
pop
inc
xlat
andl
test
xor
cmp
cs
test
sbb
and
sbbl
lods
jecxz
pop
xchg
dec
clc
and
jne
cmpb
pop
add
cli
sarb
stc
and
enter
and
inc
daa
pop
cmp
xchg
adcb
shlb
add
inc
cmp
sbb
pop
dec
inc
mov
mov
sub
mov
fsubrs
xchg
inc
push
or
cmpb
mov
in
or
sub
mov
filds
or
mov
in
out
outsl
imul
shrl
add
icebp
inc
push
jbe
dec
mov
dec
lret
nop
rcrl
sar
sub
pop
inc
pop
add
or
jbe
jo
sub
mov
mov
or
movl
push
stos
mov
cmpsb
dec
push
fimull
mov
pop
pop
jg
inc
and
pop
pusha
mov
sahf
and
jge
fldcw
jo
push
dec
fdivrs
movsb
out
mov
lret
mov
mov
mov
pop
sub
fsubp
cli
push
mov
sub
shl
out
outsl
cmp
cmpsl
adc
loope
cmc
hlt
leave
jge
add
cmp
ljmp
hlt
xor
addl
push
inc
cwtl
ret
das
pop
jb
push
or
lea
mov
and
pop
dec
pop
sar
dec
jns
pop
mov
addr16
and
aad
sub
rcrl
jne
inc
pop
pop
add
jbe
es
xchg
sbb
call
std
loop
and
dec
icebp
add
inc
shrb
jo
ljmp
scas
std
icebp
fsubrl
pop
jle
dec
cltd
mov
pop
aad
adc
inc
in
push
pop
adc
xchg
push
and
jne
or
mov
inc
aam
roll
pop
push
orb
add
mov
fbld
leave
scas
dec
pusha
imul
inc
mov
pop
mov
test
push
push
adc
cmpsb
mov
out
ficompl
push
push
dec
adc
sub
push
push
cwtl
mov
pop
pop
mov
cmp
mov
adc
push
stc
cmp
fwait
pop
icebp
pop
dec
mov
fldl
sbb
jbe
pop
rorl
add
pop
lcall
pop
sub
imul
addr16
inc
push
pop
aad
and
fldl
pop
jmp
pop
push
xchg
or
lcall
aaa
adc
xchg
or
pop
enter
sarl
jg
jecxz
mov
pop
mov
jmp
mov
pop
out
clc
push
popf
lea
rcr
add
cmp
pop
pop
std
mov
pop
repz
js
fsubrp
pusha
pop
pop
jnp
popa
xchg
inc
mov
adc
pop
jb
cmp
cmp
sbb
add
es
inc
cltd
dec
sbb
mov
push
movnti
cli
ficompl
xor
xchg
mov
ss
movsb
std
and
xchg
ja
pop
inc
fs
cs
pop
inc
pop
inc
dec
cmp
pop
mov
cmp
std
fmul
sub
addr16
pop
jno
scas
sub
pop
xchg
inc
pop
cmc
pusha
push
and
andb
xchg
inc
push
pop
out
push
notb
fsubl
sbb
xchg
dec
xchg
dec
repz
push
push
loope
add
fistl
nop
sub
leave
pop
and
cmpsb
test
les
cmp
jne
mov
jbe
mov
cmp
pop
xchg
sbb
mov
or
cmpl
cs
and
inc
mov
inc
or
sub
pop
ljmp
or
adc
sbb
jle
cld
adc
pusha
xor
lea
push
xchg
push
and
js
pop
mov
push
or
pusha
das
adcb
xchg
leave
adc
sub
push
mov
das
xor
iret
push
popa
pop
mov
loope
mov
add
pop
push
cmc
sbb
cltd
lret
aas
adcb
add
pop
push
jo
jecxz
dec
aad
pop
stos
pop
cmc
and
shl
jbe
inc
and
xchg
mov
cmp
pop
jmp
inc
sub
jns
mov
jne
dec
or
mov
cmpsl
insb
lcall
push
adc
pop
ss
imul
pop
xor
les
pop
mov
and
cmp
or
sub
fstpl
cmp
jg
arpl
fsub
cltd
sub
mov
inc
fistps
push
jae
jg
das
out
mov
pop
cmp
adc
mov
xor
and
sub
jge
push
sbb
cmpsb
mulps
jl
stos
daa
inc
adc
test
pop
push
fisttps
dec
adc
enter
test
hlt
ljmp
and
xchg
pop
ja
ds
push
xor
dec
js
repnz
sbb
mul
jo
js
sbb
push
popa
ljmp
jmp
cmp
push
fmuls
mov
add
fiaddl
stos
pop
in
dec
test
add
jo
xor
xchg
rcrl
imul
iret
mov
lods
push
pop
in
inc
dec
imul
cmp
and
xchg
sbb
insb
int
test
stc
adc
or
xor
xchg
pop
sbb
mov
popf
xchg
push
add
sbb
subb
mov
jmp
pop
push
gs
adc
mov
pop
sub
cmpb
in
xchg
pop
mov
sarb
imul
mov
or
adc
arpl
and
mov
shrb
lahf
xor
cmp
and
cmp
jmp
pop
call
pusha
adc
dec
mov
imul
pop
pop
inc
into
dec
sbb
ss
pop
push
add
movsb
pop
or
jb
pop
ret
sub
in
pop
pop
dec
push
inc
shr
dec
pop
negb
adc
push
mov
add
daa
fisttpll
sti
pop
dec
mov
arpl
fcomi
mov
push
mov
out
bnd
pop
sbb
inc
or
adc
lret
sub
pop
ljmp
in
pop
shll
adcb
pop
jg
shrb
icebp
lret
cmpsl
or
test
adc
xchg
and
pop
xchg
add
jae,pn
adc
fdivrs
dec
mul
pop
cmp
dec
lods
test
mov
push
cmpb
mov
dec
sub
pop
popf
scas
pop
stos
int3
mov
sbbb
andb
ja
mov
pop
jg
push
sbb
pop
cmpsb
stos
xchg
iret
jns
pop
mov
orb
push
fstl
movsb
fwait
movsl
hlt
pop
xor
stos
sub
stc
ja
pusha
push
push
push
dec
jne
pop
in
push
jl
out
and
dec
inc
adc
mov
xchg
mov
std
pop
addr16
jb
ljmp
and
shrl
and
pop
mov
movsb
mov
outsl
pop
test
jb
push
pusha
add
or
xchg
cmp
lcall
jg
and
mov
pop
subl
sbb
xchg
cli
cmp
ror
cmpsb
lods
sahf
iret
push
or
pop
pop
stos
in
les
fcomps
pop
dec
shrl
jne
shlb
pop
pop
loop
or
pop
ja
dec
mov
or
push
jge
data16
jecxz
lret
lret
push
push
rorb
call
sbb
adc
fidivrl
daa
mov
jo
pop
scas
or
adc
dec
sbb
mov
cld
test
sbb
in
dec
pop
roll
cs
push
insb
rol
sub
jecxz
aas
testb
jns
sbb
daa
push
pop
push
rolb
movsl
movsb
pop
cli
outsb
outsl
mov
rcrb
fidivl
into
pop
push
jns
sbb
adc
les
daa
js
add
add
cmp
mov
mov
test
add
lret
inc
push
jbe
std
sbb
dec
pop
mov
inc
insl
cmp
push
addr16
sbb
ljmp
dec
lcall
jbe
xor
pusha
mov
adc
cmpb
jno
movsl
pop
inc
fidivrs
cmp
xchg
sahf
xor
adc
scas
jp
pop
popa
loop
push
sub
adc
pop
sub
mov
pop
cwtl
xor
ja
imul
or
ds
mov
jmp
pop
movsl
cmp
repz
sbb
fsub
lret
arpl
sbb
or
inc
lret
sti
fcomps
daa
scas
movsl
aaa
xor
pop
movsb
out
clc
push
test
dec
rol
xchg
jecxz
and
adc
loop
push
lock
or
jle
push
push
mov
dec
hlt
mov
int3
movsb
stc
jmp
push
inc
or
and
pushl
js
xchg
mov
ret
addr16
sar
cmp
mov
cwtl
sub
and
pop
fwait
mov
sbb
rclb
loopne
mov
and
jecxz
inc
pop
cmp
xor
add
mov
dec
mov
fldt
je
add
mov
dec
xor
popa
shl
adc
and
jbe
fstps
int3
adc
movsb
xchg
pop
jge,pt
stos
jbe
sub
pop
xor
mov
jp
and
pop
mov
xor
je
adc
lds
pop
xor
dec
jno
dec
or
pop
arpl
daa
xchg
enter
xor
sti
dec
xchg
subl
xchg
fiadds
inc
push
addr16
or
stos
xlat
mov
pop
inc
xor
imul
sub
aas
mov
add
add
repnz
cli
push
or
dec
iret
dec
cmp
aam
out
jge
xchg
sbb
pop
mov
xor
xchg
cmp
sbb
sub
rcrl
push
inc
sbb
mov
and
dec
sbb
lret
xchg
adc
lea
lds
into
push
push
mov
mov
sub
loope
fiadds
sub
aaa
pop
dec
mov
xor
test
js
loopew
sub
push
sub
cltd
lea
pop
aad
jne
mov
sbb
xor
xchg
insb
adc
cs
add
lcall
sub
sub
xchg
xor
push
shrb
fwait
movsl
frstor
fstps
sub
outsb
mov
xor
dec
push
jl
pop
push
out
xor
fld
mov
das
cmp
add
inc
rcrb
inc
test
jbe
dec
pop
dec
ret
push
push
sub
add
jae
jno
in
adc
pop
cli
push
mov
adc
cmp
aad
adc
mov
dec
ror
lea
sbb
adc
loopne
xchg
jl
push
push
jg
xchg
mov
repz
cmp
fld1
dec
xor
js
pop
xor
push
sarb
shlb
pop
xchg
dec
push
and
dec
sub
icebp
shll
mov
fs
cmpsl
mov
jae
hlt
pop
cmpsb
lds
out
jg
pop
mov
dec
dec
mov
sub
mov
sub
pop
cmp
pop
ja
xor
inc
inc
and
sub
outsl
repnz
pop
insl
adc
in
push
push
pusha
repz
sbb
and
inc
fistps
enter
outsb
and
dec
sbb
rolb
pop
xor
adc
jbe
xor
pop
sub
in
and
mov
fcoms
dec
sbbb
push
aad
test
ret
subb
ds
pop
lods
xlat
push
sti
mov
mov
or
adc
inc
or
adc
adc
clc
and
or
and
or
inc
add
sbb
mov
adc
into
stc
adc
push
nop
add
pop
xor
inc
and
inc
jl
cwtl
clc
xor
mov
loope
pop
pop
inc
cmp
data16
out
mov
jmp
stos
mov
fldt
push
pushf
fildl
xor
mov
xlat
add
pop
ja
add
jmp
repnz
inc
stc
insl
scas
loop
sbb
ds
add
add
sbb
xor
fcmovne
arpl
int
stc
or
jbe
pop
rorl
dec
push
pop
jne
dec
jp
sarb
sub
jmp
xchg
push
test
fisubrl
cmp
imul
nop
mov
sub
xor
mov
fwait
sub
dec
pop
sub
sbb
add
mov
or
ja
cltd
stc
loop
pop
popa
sahf
push
les
addr16
ficoms
fwait
sbb
xchg
pop
loopne
push
adc
leave
adc
jo
js
jo
pop
fisubrs
setnp
xor
xor
pop
push
jb
nop
push
mov
add
add
adc
cmp
pop
pop
aam
or
mov
jmp
shl
sti
popf
or
xchg
or
int
sub
cltd
lods
jbe
cmp
push
lret
or
dec
sub
pop
or
pop
sub
test
out
sbbb
fdivrl
push
arpl
divb
mov
pop
fidivrl
lahf
pop
fldcw
out
cwtl
and
into
push
iret
sub
scas
mov
pushf
xor
pop
pop
loop
pop
mov
inc
lods
sbb
fisubl
cmp
pop
or
clc
int
inc
ds
dec
sbb
jmp
sbb
inc
sbb
cld
jmp
adc
pop
pop
inc
stos
sub
dec
shll
push
dec
add
lds
movsl
lcall
pop
cli
std
push
sarl
pop
sub
inc
loop
enter
or
fisttps
or
inc
and
lods
pop
adc
push
mov
pop
xor
pop
push
or
mov
sbbb
push
push
inc
aas
fsubrs
aam
dec
pop
push
adc
jo
xchg
pop
pusha
jecxz
xchg
add
mov
xchg
fcmovu
or
mov
push
out
or
addr16
ljmp
enter
xchg
jecxz
adc
cwtl
popa
mov
adc
movsb
cmp
and
fidivrl
xchg
cmp
clc
aaa
in
and
jo
imul
jne
pop
sbb
lret
aam
pop
int
jb
sub
and
jae
sub
or
xorl
pushf
mov
jne
pop
sbb
dec
fldcw
movsb
movsb
dec
mov
pop
and
in
es
test
dec
js
aad
adc
add
fldenv
push
jne
insl
xor
aas
mov
jmp
pop
popf
inc
pop
cmp
push
jecxz
cmpsb
repnz
testb
mov
push
add
cmp
dec
aam
aam
push
sub
mov
movsl
push
flds
xchg
sahf
pop
xor
cmp
jecxz,pn
in
add
call
cmp
or
std
imul
into
lods
cmp
adc
pop
mov
adc
push
sbb
dec
daa
cmp
lods
sub
pop
addb
icebp
test
gs
lcall
push
int
dec
arpl
shlb
ss
rcr
mov
adc
sbb
lds
add
sub
push
xor
xchg
mov
pop
outsl
push
std
dec
push
mov
xlat
push
popa
insl
cltd
fcomp
sub
mov
cmp
repz
jno
imul
sbb
mov
and
xor
jmp
mov
lds
lock
cmpsb
or
fcmovnb
push
push
in
pop
adc
lods
cmp
mov
popa
dec
add
mov
jns
out
aam
or
mov
xchg
ror
cmp
mov
sub
ja
add
int3
mov
inc
dec
scas
and
clc
sarl
sbb
add
mov
gs
ficomps
sub
inc
hlt
xchg
bound
jae
out
pusha
or
push
xchg
gs
cmpsb
xlat
movsl
cwtl
sub
pop
mov
mov
pop
inc
popa
push
or
mov
insb
jp
pusha
in
mov
mov
int
push
cmp
pop
popf
sbb
adc
pop
mov
push
mov
push
sub
xor
add
push
xchg
insb
pandn
sbb
or
xchg
cmp
or
sbb
notb
pop
subl
call
mov
mov
mov
repz
xchg
ss
sub
jp
mov
lret
mov
mov
xor
in
push
push
in
mov
pop
loope
test
sbb
and
sbb
or
push
pop
shrb
pop
fcom
call
sub
cli
pop
cwtl
or
sbbl
push
or
or
mov
push
push
call
andl
push
cwtl
fnstenv
cmp
push
xchg
test
push
aaa
nop
push
fisttps
mov
iret
test
sub
pop
and
ds
mov
in
fcomps
cmpb
sbb
jae
sub
jg
dec
adc
jp
pop
das
lcall
add
mov
jecxz
stc
or
pop
pop
adc
inc
pop
lret
outsl
cli
cmpsl
push
sar
or
sub
sti
rclb
loop
cwtl
adc
int3
sbb
mov
dec
dec
lods
dec
movsb
pop
sbb
sub
frstor
push
push
jae
movsb
pop
dec
xchg
mov
pop
sub
sbb
adc
xor
pop
or
ret
xchg
mov
and
pop
push
dec
gs
adc
imul
pop
idivl
and
add
sub
push
pop
mov
pop
dec
mov
loopne
inc
mov
ds
lods
pop
mov
sarl
cld
pop
or
call
addr16
pop
pop
lret
or
cs
cmp
lods
pusha
mov
sub
jbe
pop
dec
lea
cmp
add
jo
and
fs
xor
mov
daa
sub
jl
xor
out
push
dec
into
lahf
pop
inc
mov
pop
dec
pop
clc
add
hlt
dec
ret
lcall
mov
mov
jecxz
inc
pop
pop
and
cs
lds
xor
lcall
xchg
dec
test
and
cs
lods
xchg
or
jae
push
hlt
push
pop
popa
inc
sub
pop
jge
aaa
or
pop
ja
sbb
jns
fcmove
and
dec
jl
push
xchg
fisttpl
mov
cltd
inc
ljmp
addr16
std
adc
pop
scas
je
inc
das
adc
movsb
or
push
add
pop
int3
sub
jae
pop
xor
rcrl
sbb
mov
cmp
sbb
pop
fldenv
and
push
stos
icebp
test
iret
or
cs
mov
cmp
mov
sbb
jns
sbb
pop
cmp
push
pop
pop
idivb
dec
push
and
mov
icebp
xor
push
cwtl
jp
sbb
push
cld
sub
mov
loope
dec
notl
cwtl
pop
xchg
dec
adc
je
stos
pusha
pop
push
push
push
mov
pop
outsb
pop
sbb
push
mov
jne
mov
shrb
pop
cs
adc
out
cmp
aam
pop
jle
das
gs
push
cld
out
pop
out
push
inc
xor
pop
dec
pop
cs
pop
and
pop
imul
arpl
sbb
subl
cwtl
pop
popa
cmc
jo
push
or
pusha
ficoml
and
int3
mov
cmpsb
inc
insl
xor
ds
jns
in
fstps
stc
fisttpll
cld
sub
mov
mov
add
imul
push
outsl
ss
ret
xchg
dec
stos
rcrb
pop
arpl
dec
popf
push
pop
movsb
jne
push
lods
push
or
fstps
pop
cmp
jle
lods
pop
pop
inc
push
push
stos
xor
sub
pop
jne
xchg
je
push
sbb
jp
sbb
cmp
jno
les
insb
icebp
loop
pop
xchg
push
dec
test
cmp
mov
push
sbb
jmp
pop
je
push
dec
or
pop
xor
adc
jecxz
push
add
dec
fmuls
in
sub
add
xorl
hlt
fstpl
fcompl
cmp
fsts
pop
pop
xchg
rcll
repz
inc
cmpsl
test
or
sbb
mov
test
dec
dec
xchg
leave
xchg
pop
lcall
test
fstpt
jg
fwait
gs
addr16
push
cwtl
sbb
pop
frstor
push
mov
jecxz
sbb
mov
cld
jmp
leave
pop
testl
mov
pop
js
or
lcall
sbb
movsb
cltd
cmc
dec
mov
pop
push
mov
aad
inc
dec
sub
push
or
arpl
pop
push
icebp
adc
filds
sbb
fsubs
pop
sarl
je
adc
or
dec
push
inc
ljmp
sbb
dec
push
std
push
inc
pop
mov
pop
sbb
bound
adc
add
push
inc
inc
pop
dec
xor
mov
add
in
pop
cs
push
pop
add
xorl
int3
jae
add
rol
cs
mov
jge
sub
sbb
pop
push
cmp
push
sub
fldcw
shl
xor
adc
into
pop
in
test
jmp
add
out
mov
fstl
into
push
ljmp
xchg
xor
adc
sbb
cmp
out
movsl
xchg
int3
out
and
int
roll
subb
fwait
push
pop
push
in
daa
cmp
inc
xor
dec
or
ljmp
jo
test
loope
stc
cwtl
sbb
sub
hlt
sub
xchg
xor
mov
pushf
sti
sahf
dec
and
sub
push
cmp
imul
dec
iret
dec
inc
xchg
fdivp
mov
pop
call
inc
shll
stc
sub
int3
and
int
lds
push
loopne
sbb
xchg
ret
jns
pop
inc
sbb
sub
ljmp
hlt
test
enter
aad
scas
pop
cmp
push
or
es
push
pop
loope
and
sub
inc
pop
dec
jne
xor
pop
or
movsb
sbb
gs
rorb
icebp
xchg
leave
mov
fdiv
stos
jecxz
pop
pop
pop
dec
inc
lock
jle
push
xor
in
shl
add
cltd
dec
jp
pop
mov
and
daa
repz
pop
cmp
add
mov
jmp
out
stc
loopne
push
push
in
mov
cwtl
cmp
ljmp
lret
mov
xor
pop
adc
ret
adc
add
ret
sub
mov
jecxz
pop
sbb
cs
in
xor
pop
or
mov
lcall
int3
or
out
gs
mov
popf
cmp
jmp
in
loop
push
ret
or
in
adc
jmp
cs
test
jl
das
fstpl
inc
push
pop
test
push
mov
lret
lahf
and
jnp
pop
fiaddl
and
adc
push
aam
push
add
mov
dec
aas
imul
cmp
hlt
push
inc
in
icebp
aaa
pop
add
pop
jp
adc
jge
adc
fwait
or
pop
shr
xchg
pop
jp
int
add
mov
pop
stc
or
rorb
testl
inc
xchg
hlt
test
fwait
inc
repz
pop
je
mov
or
popa
ljmp
pop
xor
sbb
mov
and
or
loope
dec
imul
pop
xor
stos
inc
mov
nop
adc
test
ret
push
xchg
pop
ret
mov
pop
mov
xlat
and
dec
and
jmp
fbstp
push
jecxz
mov
in
pop
cltd
add
and
push
cmc
jb
pop
dec
sbb
imulb
jns
push
pop
or
retw
adc
outsb
call
loopne
in
push
jge
push
int3
pop
addr16
adc
pop
sahf
pop
rep
cli
xor
mov
xchg
jecxz
lahf
adcb
adc
fwait
xlat
fwait
cmp
insb
push
mov
cld
mov
lcall
sbb
or
lahf
movl
rorb
lds
inc
mov
sub
fwait
pop
pop
pop
jbe
jmp
roll
add
fstp
pop
dec
js
int
das
dec
inc
pop
push
inc
pusha
xorb
adcl
scas
jb
lret
inc
add
add
int
mov
push
or
inc
and
dec
or
mov
inc
out
pop
push
fisttpl
outsb
and
dec
in
inc
arpl
adc
jbe
and
pop
fcoml
pop
jmp
cld
insb
out
jbe
orb
icebp
add
jg
jmp
jle
jp
xchg
js
imul
hlt
pop
cmp
mov
int3
add
jae
or
imul
mov
lods
add
inc
push
dec
fnsave
or
in
cli
push
pop
push
xor
push
sub
cmpl
ficomps
push
imul
imul
out
jae
or
inc
lock
in
and
pop
add
and
sub
or
pop
fwait
negl
mov
push
testb
hlt
pop
lods
js
mov
ljmp
sbb
pop
mov
pushf
jnp
add
gs
pop
add
push
into
mov
clc
push
orb
cmp
adc
stc
pop
pop
dec
mov
lds
fcmovb
mov
cmp
adcl
push
test
shlb
or
stc
xor
mov
imul
lcall
bound
mov
mov
in
xor
pop
push
jle
pop
jns
outsb
std
mov
in
in
and
andb
pop
jno
test
test
mov
pop
mov
ret
and
push
mov
sbb
xchg
add
nop
cld
pop
jle
sbb
xchg
and
xchg
push
in
js
shll
outsl
pop
sub
mov
mov
add
pop
in
outsb
sub
pop
clc
ljmp
rorb
push
add
or
addl
pop
xchg
insb
xor
ds
enter
shrb
pop
jne
xor
sbb
xchg
fstpl
and
ret
add
loope
sbb
or
lret
adc
ficomps
pop
shlb
mov
push
test
fidivrs
sti
test
lahf
cmpsl
pop
sub
sbb
imul
inc
jns
or
test
xor
mov
ret
daa
in
rcrb
fcomp
inc
test
sbb
imul
je
cmp
sbbb
jmp
xchg
and
nop
adc
outsb
push
cmp
cwtl
jmp
mov
pop
inc
add
adc
mov
cmp
cli
lcall
rcrl
add
sbb
and
cmp
adc
lods
aam
and
pop
mov
int3
inc
shl
js
lret
mov
and
mov
and
cltd
jnp
jnp
sub
fldt
pop
mov
inc
rclb
lcall
fnstenv
dec
add
push
icebp
repz
sbb
cmc
imul
push
xorl
add
pusha
xor
pop
test
push
jbe
or
push
push
stc
jne
mov
cmp
push
adc
cltd
mov
push
pop
fwait
addr16
pop
leave
adc
test
pop
std
sbb
les
mov
mov
pop
cmp
dec
push
xchg
out
pop
inc
lea
inc
sbb
int
aaa
fstpt
adcb
pop
xchg
dec
xchg
sbb
mov
pop
lock
and
xchg
jbe
or
lahf
push
add
in
and
jns
mov
mov
pop
pop
rolb
data16
or
adc
loopne
pop
sbbl
inc
cmp
pop
jmp
dec
mov
mov
adc
xlat
lea
sbb
mov
xor
pop
push
add
pusha
rolb
pop
jns
or
dec
adc
cwtl
loop
lret
pop
fists
dec
push
pop
leave
mov
adc
pusha
lds
mov
push
sub
scas
jo
inc
inc
sub
fbstp
add
ljmp
push
dec
push
sarl
inc
push
ljmp
cltd
icebp
lret
pop
push
or
shrb
dec
adc
lcall
add
adc
andb
cwtl
or
sbb
sub
test
lret
jmp
clc
loop
inc
mov
ret
das
mov
pop
nop
in
xchg
in
lock
adc
mov
sbb
jp
pop
pop
jbe
fwait
mov
fiaddl
cmp
imul
in
xchg
pop
mov
in
pop
or
sub
xor
jle
pop
inc
pop
sbb
ret
pop
cmp
aas
add
cmp
pop
jno
jecxz
push
pop
shll
push
push
or
addb
loop
jbe
cmpb
fcomip
inc
std
pop
insl
orb
pop
aaa
cmp
sti
scas
mov
int3
stc
cwtl
enter
cs
pop
cmpsl
clc
push
add
push
mov
push
call
std
push
sub
inc
sahf
fst
pop
insb
push
pop
pop
imul
rorl
push
pop
xchg
lcall
push
adcb
push
pop
pop
bound
aad
mov
ret
sbb
push
cli
ja
pop
rolb
adc
enter
aam
ret
adc
push
sub
inc
and
inc
or
fiaddl
pop
lods
fidivrs
enter
pop
dec
fadds
pavgw
cmp
lock
jp
sbb
gs
stc
leave
jns
mov
cmp
jg
cmp
jecxz
ss
sbb
adc
xchg
jb
jmp
sbb
and
ret
sub
in
cmp
inc
orb
pop
sub
add
add
lret
pop
dec
sub
daa
inc
sub
arpl
and
pop
clc
lods
pop
arpl
pop
pop
pop
shll
push
jge
pop
lret
jno
jp
stc
aad
cmp
movsl
xchg
inc
sti
lods
ret
push
dec
mov
sarl
push
arpl
mov
mov
pop
out
repnz
out
add
stos
adc
push
jb
mov
lret
pop
or
xor
sbbb
adc
ret
cmp
cli
push
cmp
or
int3
stc
fadds
ljmp
jmp
xor
pop
add
cmp
ljmp
fwait
jns
jecxz
adc
xchg
mov
mov
leave
std
arpl
pop
insl
or
sbb
test
or
das
and
in
xor
pop
push
leave
stc
gs
cmp
es
inc
enter
stos
aaa
adc
ja
or
inc
addr16
sbb
xor
js
jbe
sub
cltd
pop
cmp
or
test
ljmp
pop
and
xchg
pop
jle
sti
les
inc
push
jge
xchg
inc
or
pop
mov
adc
lods
pop
cs
or
sbb
pop
pop
lcall
test
pop
xor
lods
aas
xor
es
pop
inc
aad
push
adc
test
pop
movsb
adc
inc
or
in
bts
lret
dec
pop
push
jmp
lcall
jmp
lea
or
in
pop
outsl
cwtl
dec
push
pop
std
sub
add
jne
test
pop
nop
push
js
xor
dec
and
jge
pop
sbb
or
ljmp
popa
fstpt
inc
pop
in
jl
push
cltd
jbe
cmpsb
fiaddl
dec
mov
sub
or
sub
jae
lret
imul
jmp
push
outsl
test
stc
inc
pop
and
jne
fs
fmul
pop
es
sbb
pop
les
push
sbb
insl
push
fsts
pop
adc
xchg
je
or
mov
scas
fadds
dec
xor
pop
xor
lcall
mov
mov
mov
push
jmp
push
mov
mov
jecxz
ret
and
out
add
push
push
push
loop
pop
loope
ss
xchg
pop
pop
adc
cmp
rcl
sub
cltd
ds
imul
popf
push
xchg
jmp
pop
sbb
pop
and
xor
nop
pop
pop
test
leave
mov
jns
and
mov
jbe
std
push
xchg
fwait
mov
sub
popa
adc
push
sbb
or
dec
pop
sbb
pop
sub
sbb
out
inc
or
fbld
pop
mov
push
aaa
pop
sub
or
sbb
pop
test
mov
ss
sub
pop
sbb
aam
jo
pop
lcall
repz
stos
dec
push
push
push
sub
inc
mulb
test
lods
into
and
cmp
pop
cwtl
and
mov
mov
jge
mov
lea
dec
pop
xor
fwait
cmc
inc
mov
pop
xchg
rolb
pop
adc
adc
inc
addr16
and
jle
shlb
mov
pop
push
rorb
lods
pop
cli
adc
ficompl
cmp
fstpl
mov
pop
leave
jb
mov
xor
icebp
xchg
or
cli
pop
dec
arpl
inc
pop
mov
mov
push
and
fsubs
and
sub
lods
mov
into
pop
inc
adc
pop
sub
cltd
xor
mov
fistps
mov
adc
and
cmp
adc
orb
mov
and
aas
and
pop
ds
test
inc
push
mov
adc
push
pop
pop
dec
jge
push
xor
inc
in
loopne
pop
sub
jns
aaa
in
cmp
rcrb
push
cs
cmp
or
mov
push
in
and
jmp
dec
mov
or
pop
lret
jbe
out
or
mov
mov
imul
pop
incb
xor
jecxz
sub
pop
push
movl
gs
ljmp
inc
xor
pop
xchg
inc
jnp
imul
push
sub
enter
repnz
repz
popa
cmpsl
mov
dec
adc
negb
mov
add
fnstsw
aas
sbbl
ljmp
or
pop
fildl
and
popa
nop
pop
xor
mov
scas
xchg
bound
mov
and
pop
pop
aaa
pop
cmpsb
mov
js
dec
movntps
or
inc
fucom
inc
pop
sbb
enter
imul
lret
loop
pop
pop
mov
mov
pushf
dec
inc
xchg
fisttpl
dec
jecxz
jge
pusha
xlat
stc
mov
rorb
aam
push
movsb
pop
adcl
jecxz
mov
and
pop
sub
dec
push
or
popf
scas
lcall
xor
les
add
push
pushf
ficompl
xor
or
lods
sar
loopne
clc
icebp
lahf
xchg
xchg
cli
or
std
in
jmp
loopne
mov
dec
adc
mov
scas
mov
imul
add
loopne
cmp
dec
xchg
or
enter
jns
xchg
ss
xor
pop
push
fdivrs
cltd
adc
pop
mov
push
je
aas
adc
jbe
sbb
in
xor
dec
lcall
and
or
adc
in
jns
inc
or
pop
pop
and
hlt
cmp
pop
shll
scas
xchg
or
pop
inc
in
mov
xchg
pop
and
jne
int
jae
pop
stos
daa
pop
add
arpl
gs
call
jne
mov
lea
push
ljmp
jb
or
jecxz
xchg
cmpsl
pop
fcompp
sub
test
jmp
pop
sbb
add
clc
sub
dec
sbb
fnsave
fsubl
das
mov
into
push
pop
pop
mov
pop
je
out
es
rcl
ljmp
xchg
int
or
jmp
out
fisubrs
clc
sbb
sub
test
pop
popl
rorl
pop
sahf
cmpsb
or
dec
std
lcall
js
or
pop
fisttpll
andl
pop
adc
pop
push
lcall
in
sahf
ja
arpl
pop
cltd
daa
pop
jns
fsts
aaa
fs
lea
in
dec
sub
dec
out
stc
xor
addr16
pop
js
hlt
adc
pop
adc
cmp
and
stos
inc
jp
cmp
mov
pop
and
das
test
mov
push
movsl
pop
mov
test
pop
sbb
cs
fwait
ret
push
or
ret
cmp
fdivl
pop
lods
pop
pop
shlb
fldl
pop
adcl
sahf
pop
aaa
and
pop
xorl
pop
sub
adc
pop
aam
sbb
cmpsb
dec
jmp
inc
pop
push
mov
data16
sahf
ljmp
pop
fwait
dec
es
pop
loop
or
pop
dec
push
dec
stos
mov
push
lea
ret
popw
lcall
push
pop
scas
mov
loope
adc
pop
rorl
lock
fisubs
hlt
cmpsl
adc
or
push
cmp
pop
dec
add
pop
pusha
lret
pop
sub
adc
pop
xor
jne
sahf
or
push
sub
jbe
jmp
or
inc
sbb
and
pusha
es
pop
push
jge
in
jno
out
adc
dec
and
fnstenv
test
pop
xchg
or
mov
ja
aad
push
lea
cmpb
and
stc
add
sub
sbb
mov
call
dec
pop
out
pop
cmc
jno
jle
call
or
jle
sbb
jle
cmc
into
jns
out
cmp
scas
pop
clc
lds
or
jp
mov
cmp
adcb
mov
and
push
pop
mov
adc
mov
adc
push
add
adc
sti
imul
aad
in
jp
cli
jne
das
idivb
sbb
or
sbb
add
dec
mov
or
adc
movsl
jns
pop
xchg
mov
call
divb
pop
or
inc
jb
jns
and
pop
sub
pop
add
imul
pop
xlat
push
mov
pop
and
push
pop
out
inc
pop
les
das
test
jns
and
shll
fdivs
mov
sbb
loope
pop
jmp
sub
ficoml
pop
cmp
out
and
pop
lock
icebp
jo
call
loopne
add
and
cmp
jbe
pop
push
pop
sub
push
fidivs
inc
ljmp
add
aas
addr16
push
pop
push
jecxz
cmp
inc
gs
dec
fwait
mov
xchg
cli
movsb
jg
out
and
fs
pop
xor
add
pusha
pop
sbbb
push
mov
daa
push
repnz
fistps
xchg
movb
xchg
pop
jge
fisttpl
pop
pop
shll
mov
pop
sub
jge
loopne
jmp
je
mov
mov
adcb
mov
imul
and
shrl
add
out
addr16
testb
data16
mov
call
mov
pop
xchg
and
push
mov
popf
pop
aad
loopw
xor
push
pop
mov
jmp
imul
dec
xor
inc
cmpsb
fldl
stos
or
adc
test
outsb
cltd
outsb
push
pop
mov
jno
ret
loope
xor
xchg
push
imul
int
es
fsub
and
inc
jmp
pop
icebp
imul
stc
std
lds
or
and
outsb
test
lahf
dec
adc
je
mov
in
add
push
xor
shll
add
jmp
mov
push
cwtd
int
insb
and
sbb
test
in
or
rcrb
fwait
mov
dec
xchg
pop
push
loope
cwtl
std
andb
jo
sbb
and
adc
pop
pop
add
sbb
mov
adc
fstps
mov
imul
push
shl
xchg
aaa
sahf
fcmove
insb
cmp
jle
sbb
or
jae
cltd
inc
pop
ljmp
pop
mov
jge
test
jns
jmp
enter
mov
mov
lret
cmp
cmp
pop
pop
fwait
cmp
mov
bound
adc
bound
cltd
xor
inc
pop
xchg
test
cmp
jecxz
je
push
xchg
fcoml
call
mov
lret
imul
pop
sarl
rorl
ficompl
outsl
ret
mov
bound
sub
mov
cmp
mov
jnp
push
subb
lods
sbb
pop
imul
mov
xor
lcall
sbb
cmp
lods
pop
and
mov
imul
aad
test
push
add
jae
imul
inc
fbstp
push
dec
in
or
gs
pop
inc
daa
xor
xchg
pop
push
dec
xchg
and
mov
pop
push
sub
je
mov
and
inc
mov
mov
or
or
adc
popl
inc
push
ret
pop
pop
pop
imul
fnsave
pop
aas
xchg
fmuls
inc
add
dec
and
ret
jb
ffreep
sub
push
int
xor
aas
push
pop
inc
pop
add
or
adc
push
jmp
push
fs
push
mov
fisubs
mov
push
dec
pop
pop
dec
dec
mov
or
cli
jno
inc
ret
mov
cmp
and
sub
pop
out
cmpb
or
faddl
xchg
in
pop
mov
aas
mov
jo
pop
inc
roll
pop
roll
mov
sub
insl
xchg
sub
cwtl
sbb
arpl
daa
repz
pop
sub
pop
cmp
das
imul
pop
icebp
aad
push
fadds
repz
sbb
leave
adc
cmpsl
pop
mov
sarl
addr16
mov
in
pop
add
sub
pop
inc
push
pop
or
or
mov
cmp
daa
inc
mov
xor
bound
leave
xchg
push
jbe
or
cs
loop
iret
cmp
pop
fldenv
sbb
icebp
inc
push
sub
or
loop
lcall
popf
repz
gs
cmp
test
dec
pop
hlt
outsb
ljmp
push
ss
lcall
ret
dec
js
pop
andl
or
data16
adc
jbe
rorl
repnz
out
mov
mov
pop
les
pop
and
xor
inc
out
lods
cmp
testl
cmp
test
pop
push
sti
and
movsb
xchg
fcoms
sbb
cs
pop
rcr
add
dec
mov
xor
pop
arpl
xchg
mov
or
jb
insl
add
addl
pop
xchg
mov
xchg
stos
pop
cmc
fiaddl
psubw
rcrl
adc
push
orl
or
jne
cmpl
add
insb
imul
sbb
pop
push
mov
mov
ret
movsl
cmc
rcrb
jo
outsl
mov
nop
jle
in
dec
pop
sbb
mov
sbb
inc
lock
mov
in
pop
adc
mov
add
dec
fcomip
push
mov
js
leave
pop
inc
push
cmc
testl
dec
mov
and
bound
cmc
or
inc
outsl
fidivrl
inc
push
push
arpl
mov
sbb
mov
push
xchg
mov
jle
push
loope
jne
das
or
loopne
add
inc
movsb
pop
pusha
or
xchg
hlt
push
ret
pop
and
xchg
rcrl
pusha
xchg
dec
scas
xor
sarl
dec
xchg
and
pop
test
pop
stos
hlt
fidivrl
push
and
sbb
popf
pusha
pop
xor
cld
fstps
push
xchg
mull
adc
sbb
in
inc
sbb
ja
leave
push
or
sbb
nop
ret
pop
inc
icebp
cli
js
xchg
leave
popa
cmpsl
out
shrb
push
js
loop
in
js
ja
dec
fwait
enter
daa
xor
jecxz
test
pop
jns
dec
testl
loopne
inc
push
cmp
mov
dec
sbb
jp
sbb
mov
dec
xchg
inc
scas
jns
fidivrl
pop
sbbb
jp
in
push
dec
cmp
movsb
cmp
pop
pusha
pop
repz
and
xchg
sbb
loopne
sbb
adc
and
movsl
decl
or
adc
push
mov
scas
repnz
jno
cmp
push
inc
ret
add
sub
insb
cmp
inc
jns
mov
push
stos
push
js
pop
jecxz
fsqrt
int
pop
hlt
add
add
xchg
sub
mov
pop
pop
jae
aas
loope
cltd
bound
pop
xchg
add
xor
xchg
add
mov
jge
mov
mov
cmp
adc
addr16
sbb
fidivrl
mov
fcmove
movsl
pop
int
out
pop
cltd
pop
sbb
cmp
cmpsl
pop
pusha
xchg
sbb
dec
inc
sbb
adc
push
or
adc
call
dec
pop
mov
mov
movsl
dec
icebp
and
stc
push
std
js
mov
jae
cltd
sbb
js
or
push
lock
mov
loop
jle
pop
mov
sti
les
or
movsb
add
cmp
dec
or
mov
cltd
push
cmp
clc
fimull
cwtl
out
fwait
icebp
xchg
dec
xchg
inc
cli
and
dec
mov
fstps
stc
pop
or
sbb
cmp
jmp
push
push
pop
mov
mov
data16
movsl
out
lret
sbb
lea
sub
dec
xchg
lock
inc
sub
add
jne
gs
test
xchg
xchg
orb
imul
sbb
fistl
dec
push
or
pop
and
rcrl
fldenv
or
inc
std
dec
push
lea
pop
mov
mov
adc
test
lcall
push
imul
lea
cmp
push
sub
bound
or
je
insl
mov
push
mov
dec
pop
cmp
adc
jle
dec
jmp
or
divb
pop
add
inc
or
faddl
in
jl
xor
mov
mov
inc
pop
push
sbb
jae
xchg
pop
mov
mov
pushf
pop
mov
sub
or
sti
jmp
push
and
xor
scas
aad
xchg
js
dec
pusha
pop
or
test
push
loop
in
pop
mov
or
inc
pop
cmp
dec
in
inc
pop
clc
ret
push
sti
orl
pop
or
jmp
ret
rcl
lcall
jnp
pop
jmp
aad
subl
mov
ljmp
idivl
and
lret
cmp
les
push
mov
mov
or
fsqrt
push
pop
aas
sti
call
ficoml
loop
push
das
pop
int3
or
inc
pop
sbb
cmpsb
mov
mov
pusha
pop
loop
in
mov
mov
fdivs
inc
push
pop
leave
test
adc
push
pop
sub
lret
ljmp
pop
pop
arpl
mov
das
sbb
pop
mov
pop
push
jns
dec
pop
in
push
inc
and
cmp
je
push
mov
mov
sbb
cmp
adc
pop
jp
jns
pop
push
je
push
inc
mov
ds
sbb
int
movsl
lcall
jnp
fdivs
add
arpl
dec
test
sti
inc
pop
test
dec
dec
inc
movl
pop
sbb
or
in
jne
xchg
pop
and
aas
xor
sbbb
mov
jne
push
pop
cmp
sbb
out
pop
mov
pushf
pop
cltd
push
out
or
sbb
jg
dec
or
pop
mov
add
cmc
xor
test
stos
pop
add
test
adcb
out
sbb
or
jne
pop
cld
add
loop
push
xchg
push
mov
or
pop
push
or
jbe
mov
push
xchg
xchg
cld
jecxz
and
outsl
pop
mov
ficoms
pusha
sbb
push
inc
hlt
inc
xorb
pop
repnz
cmpl
dec
out
mov
sub
or
adc
mov
pop
cmp
sbb
push
data16
mov
pop
jecxz
push
pop
movsb
mov
xor
mov
loope
nop
fldenv
js
scas
jo
fstpl
loope
fldl2t
push
pop
dec
adc
push
or
dec
pop
fwait
mov
daa
jecxz
orl
imul
pop
shll
push
les
adc
lock
pop
dec
xchg
pop
add
js
cli
imul
push
and
sub
pop
jl
fbstp
pop
jno
push
sub
pop
inc
es
xor
adc
mov
dec
sub
int3
mov
cmp
ljmp
cmpsl
es
pop
in
jne
and
icebp
in
adc
ficoms
push
repnz
jmp
push
arpl
ljmp
jnp
sub
sqrtps
das
pop
push
in
push
xchg
pushw
nop
push
pusha
pop
daa
aam
xor
xchg
cmp
jmp
xchg
nop
lcall
pop
push
shlb
fildl
sub
pop
cmp
out
xchg
imul
xor
std
mov
xor
and
dec
mov
push
jmp
xorb
pop
adc
mov
pop
daa
and
xlat
pop
inc
sbb
push
adc
pop
aas
mov
jmp
pop
cmp
ret
incl
test
incl
jnp
out
xchg
sbb
sub
pop
ret
and
sti
popa
xchg
pop
pop
jge
pop
les
jmp
cmpl
fistl
dec
insb
loopne
in
pusha
pop
add
icebp
push
pop
sbb
fsubrl
and
push
test
cld
adc
out
and
add
sub
and
add
lret
and
cmp
push
adc
loop
pop
repz
stos
inc
and
fdivrs
inc
into
adc
mov
js
sbb
test
pop
mov
mov
adc
or
repz
add
add
jmp
fdivs
das
fcoms
cmp
data16
jecxz
sub
clc
pop
sub
movsb
pop
shll
dec
cmpsb
in
stc
adc
mov
pop
adc
pop
in
and
jbe
cmp
or
dec
les
sbb
int
pusha
xchg
jg
push
push
jbe
imul
dec
and
sbb
test
push
or
mov
lock
adc
bound
jmp
aas
push
adcb
and
jnp
mov
add
push
cli
pop
dec
pop
sub
sub
jne
lods
pop
add
imul
and
pop
jno
mov
cld
int3
pushf
sub
jecxz
loope
pop
xor
mov
rolb
jb
divb
inc
adc
jbe
xchg
hlt
ljmp
sbb
jle
cwtl
adc
push
add
jmp
pop
sbbb
inc
mov
insb
and
dec
movsb
rcrl
test
dec
add
pop
push
shl
jp
pop
or
dec
push
fisttps
mov
ss
push
imul
imul
inc
lock
inc
popa
and
jne
stos
dec
ficoms
and
dec
jb
cmp
fisttpl
ret
insl
cmp
daa
dec
je
pop
mov
mov
imul
arpl
pop
jb
xchg
out
push
pop
aaa
push
cmc
or
rcrl
pop
mov
mov
or
testb
pusha
aad
adc
cmc
mov
add
bound
test
pop
jne
das
andl
add
test
and
loopne
mov
sbb
mov
stos
es
sbb
push
inc
mov
cmpsb
btc
adc
daa
pop
bound
jnp
sbb
and
or
sbb
push
sub
pop
add
jae
jne
cmp
ret
test
pop
mov
mov
cmp
test
mov
push
push
lock
mov
sbb
ret
ret
ja
push
pop
into
mov
inc
mov
dec
or
lods
movsl
pop
xchg
pop
in
test
bnd
and
xchg
std
jns
push
cmp
mov
call
rolb
cwtl
jbe
or
lods
sbb
mov
rorb
adc
roll
add
rcr
push
fmull
sbbb
inc
jbe
dec
daa
and
aam
or
cmpsl
pop
xchg
out
pop
andl
pop
sti
addb
std
cmp
jne
dec
or
mov
xchg
push
call
and
jle
leave
pop
add
pop
lea
or
adc
cwtl
fidivrs
or
movsl
pop
call
ret
push
mov
jecxz
sub
dec
xchg
jne
sti
mov
adc
std
into
ret
cmp
rcrb
jbe
rcrl
test
mov
cmp
sbb
xor
testl
inc
fisubrs
fsubrs
pop
enter
adc
lds
rolb
inc
or
outsl
repnz
in
pop
mov
das
inc
out
adc
lcall
frstor
sbbl
sub
ljmp
stc
pop
jmp
imul
mov
loope
pop
or
lods
push
inc
adc
jmp
pop
and
add
inc
mov
inc
loopne
out
push
cwtl
sub
jae
or
jge
pop
imul
iret
pop
pop
rcll
ret
push
cmp
dec
aaa
loope
fistpll
repnz
cwtl
loop
in
in
dec
mov
fiaddl
dec
dec
es
dec
pop
and
loope
and
jbe
and
lcall
sub
nop
and
popa
pop
xchg
out
xchg
rcl
dec
gs
das
xchg
lret
pop
sbb
pop
xor
xchg
insl
jnp
dec
dec
sub
int3
out
sbbb
int
mov
pop
add
cli
add
pop
push
or
sub
cmp
in
and
add
pop
ljmp
xchg
outsl
dec
movsl
pop
es
pop
jne
mov
push
and
pop
les
and
push
pop
mov
dec
leave
push
mov
sbb
sbb
mov
dec
pop
or
xchg
push
dec
aas
jae
scas
arpl
shlb
add
push
enter
xor
aam
or
add
daa
mov
add
or
ds
fwait
mov
cmp
xor
or
out
loopne
cmp
lods
xchg
cltd
inc
adc
int
adc
jne
mov
hlt
sarb
out
cli
or
jb
jo
pop
xchg
cmp
sub
pop
pop
loopne
in
je
sbb
cmp
cmpsl
fcomps
sub
into
incl
inc
mov
inc
xchg
stc
adc
xchg
sbb
xchg
dec
pop
cli
jnp
es
sarl
inc
lahf
jecxz
push
aaa
pop
sub
push
aam
and
jns
jnp
movsb
shr
fsubs
cwtl
dec
jmp
out
pop
cmp
push
push
ficoms
outsl
enter
dec
cwtl
hlt
push
mov
loope
sbb
push
pop
inc
in
mov
adc
hlt
mov
add
insl
pop
loopne
out
ja
dec
push
lods
icebp
popa
lods
xchg
pop
jecxz
jno
popf
or
and
sub
test
inc
inc
xor
and
mov
sbb
mov
and
mov
repnz
inc
popa
or
orl
jl
mov
jmp
pop
and
sbb
adc
and
mov
push
cmp
xchg
lcall
es
mov
fcomps
icebp
out
pop
mov
dec
or
js
jnp
ljmp
inc
add
aaa
arpl
sti
pop
push
nop
ljmp
ret
dec
and
pop
add
les
enter
adc
or
pop
js
push
pop
cmpsb
push
popf
and
xchg
ja
ret
dec
push
lds
in
lea
mov
xor
adc
and
out
pop
mov
ss
sub
cld
rcll
jne
in
jae
les
cmc
push
jl
pop
arpl
mov
dec
pop
xchg
lea
pop
cli
inc
dec
insb
and
pop
dec
sbb
jns
test
or
and
test
insl
scas
sbbl
cs
ljmp
das
imul
pop
jne
inc
jecxz
push
jb
jbe
mov
fsts
pop
dec
lret
stos
lahf
cld
test
cltd
repz
leave
pop
dec
cmpsb
gs
addps
pop
mov
mov
jmp
cmp
pop
ffree
out
or
mov
inc
inc
xchg
or
out
jecxz
ror
outsb
push
sub
sbb
jns
pop
aas
xorl
pop
pop
pop
jmp
pop
je
or
lret
es
loop
xor
stc
outsb
pop
inc
xchg
imulb
xor
mov
push
dec
fsubs
cmp
inc
daa
mov
sbb
cwtl
xor
pop
pop
int3
add
dec
pop
xor
and
adc
adc
into
cmc
xor
dec
les
xor
dec
std
inc
pop
pop
inc
mov
push
dec
cmc
pop
out
adc
insl
mov
cmpsb
push
jns
daa
sbbb
xchg
ja
dec
addr16
lcall
add
mov
pop
xchg
insb
mov
jns
pop
shrl
cmc
pop
mov
or
cmp
movb
pop
xlat
cltd
mov
shl
movsl
pop
push
jbe
lret
mov
pop
push
dec
push
adc
out
or
mov
pop
pop
ficomps
repz
js
fdivs
pop
pop
inc
ds
push
xchg
sbb
pop
mov
cmp
jbe
inc
pop
dec
dec
fs
jle
and
and
rcrb
int
or
pop
jp
cmp
call
in
pop
ss
mov
push
sub
inc
sub
dec
dec
push
aam
dec
adc
testb
sub
jmp
xchg
pop
pop
add
mov
pop
pusha
test
add
imul
dec
jl
insl
adc
cmp
call
push
loope
or
fnsave
and
jecxz
pop
add
mov
jp
push
jo
mov
adc
pop
jg
cmc
sahf
push
and
lahf
pop
adc
mov
pop
mov
std
aas
iret
fsub
pop
imul
lods
jle
sbb
ljmp
pop
cmp
pop
lret
dec
sub
xor
adc
sub
mov
adc
test
bound
sub
cmp
xor
loope
xor
sub
pop
mov
jecxz
jecxz
jnp
mov
pop
dec
and
push
adc
stc
hlt
test
pop
dec
xor
orb
jmp
and
dec
sub
xor
enter
rolb
filds
fcomps
and
push
push
inc
leave
push
xchg
test
lcall
stos
jle
cld
cli
rcrb
shll
cmpsl
and
pop
jecxz
mov
push
xchg
mov
pop
mov
inc
pop
mov
stos
jbe
adc
ljmp
pop
sbb
iret
push
int3
mov
xor
leave
or
dec
ficoml
insb
stos
mov
dec
sub
rolb
cmpsb
add
pop
push
pop
clc
xchg
inc
dec
stc
and
adc
or
mov
xchg
mov
lds
lret
sbb
xchg
adc
test
mov
adc
pop
push
addb
dec
cmc
or
or
push
pop
sub
lock
pop
jmp
xor
pop
cmpsl
cmc
dec
daa
xchg
adc
push
jmp
cwtl
fcmovnb
jle
mov
and
push
pop
enter
mov
xor
dec
test
pop
adc
mov
pop
cmp
iret
cmp
outsb
and
dec
sbb
loop
lcall
out
imul
add
dec
test
fs
lcall
inc
adc
sar
mov
adc
inc
imul
cli
pop
jge
xchg
push
pop
mov
or
fwait
pusha
xor
cli
js
inc
adc
jg
and
pop
rolb
inc
add
push
inc
fcomps
sub
push
and
mov
sub
mov
jo
daa
add
xchg
stc
pop
push
insl
inc
add
jno
inc
add
cld
jb
pop
or
sub
loopne
add
pop
sbb
pop
dec
in
add
ljmp
cmp
mov
jmp
adc
pushf
sahf
icebp
fs
nop
cmp
mov
loope
pop
bnd
arpl
std
fadds
add
pop
fnstcw
mov
jecxz
dec
std
cmpl
pop
jbe
xchg
gs
mov
in
cmp
addb
add
mov
std
dec
rclb
cwtl
jae
pop
out
push
push
cmp
fucomp
cltd
lcall
loop
movsl
test
push
pop
adc
cmp
sti
jbe
dec
pop
mov
iret
adc
neg
in
shlb
jmp
push
and
sbb
dec
adc
pop
push
mov
mov
jbe
xchg
jae
push
mov
mov
push
mov
mov
adc
pop
mov
sbb
adc
dec
pop
xor
inc
ljmp
movsl
fs
mov
xchg
aaa
cmp
fstpl
cmp
ja
scas
cmp
pop
hlt
pop
lea
les
loope
aad
leave
sub
pusha
pop
aaa
popa
mov
pop
shll
xchg
pop
xchg
cli
jg
aad
je
mov
pop
ret
mov
data16
add
jmp
insb
pop
jge
dec
stos
das
ja
jg
xchg
daa
pop
mov
testl
int3
ss
push
aas
int
inc
and
cmpsl
inc
sbb
and
leave
mov
das
push
jnp
es
xor
imul
xchg
pop
lret
test
fsubs
dec
es
adc
sbb
test
dec
sub
addr16
pop
es
stc
in
pop
lahf
gs
inc
in
dec
lcall
mov
jmp
movsl
dec
and
mov
cmp
xchg
movsb
pop
leave
movlps
push
pop
divb
pop
xchg
push
jle
fcomi
into
and
mov
mov
inc
bound
add
popf
in
lea
sahf
pop
lret
pop
mov
or
pop
popa
addl
outsl
and
jo
lods
pop
movsl
adc
inc
das
fcompl
xor
jle
ja
jecxz
inc
adc
mov
push
adc
pop
xor
pop
sub
push
pusha
mov
out
jbe
pop
adc
insl
imul
xchg
push
and
pop
or
ficomps
out
aas
in
dec
mov
jmp
dec
dec
pop
mov
push
mov
cmp
enter
adc
add
pop
imul
inc
pop
inc
or
adc
pop
inc
xor
xchg
pop
sub
lcall
inc
pusha
lock
mov
push
flds
sbb
lret
aas
push
mov
xor
push
scas
jb
inc
inc
pop
xchg
pop
pop
xchg
inc
push
pop
dec
ret
push
les
add
pop
and
pusha
out
pop
lds
jl
daa
arpl
push
addr16
ret
xchg
pop
push
mov
rcrl
mov
xchg
pop
jp
loope
jl
lea
fisubrl
mov
sub
repnz
leave
frstor
mov
adc
sub
xchg
jns
js
ret
pop
push
lret
add
jmp
ja
daa
mov
add
mov
std
inc
pop
testl
xchg
inc
cmp
lcall
int3
xor
fstpt
lea
out
sti
jle
cmp
xchg
cmp
jo
pop
sub
dec
repnz
js
cmp
ja
cltd
cwtl
dec
or
cmp
pop
stos
jo
pop
call
jl
xchg
pop
pop
mov
adc
jl
pop
sbb
pop
or
jnp
and
das
mov
aaa
adc
push
clc
sub
adc
sub
jl
xchg
jg
scas
dec
pop
cmp
sub
push
cli
pop
aaa
das
push
dec
cmp
mov
out
jle
out
and
pop
or
lret
outsb
sub
pop
pop
add
in
roll
outsb
xchg
add
lcall
cmp
adc
jo
adc
pop
fnstcw
adc
cld
test
jne
enter
pop
and
pop
jns
jae
push
pop
adc
jmp
add
mov
and
dec
add
inc
gs
pop
xor
movhlps
add
test
mov
addr16
arpl
adc
xor
xchg
sbb
xchg
push
fidivl
and
dec
jnp
inc
pop
testl
pop
cmp
and
pop
stos
out
sarl
push
xchg
test
pop
mov
pop
xchg
pop
adc
mov
repnz
mov
dec
aad
add
jp
sbb
in
test
cld
jo
sbb
or
lahf
rcrl
es
sbbb
bound
out
add
cmp
push
jle
sbb
add
js
inc
jl
pop
test
pop
and
enter
xor
jne
stc
add
bound
mov
add
sub
mov
je
xchg
stc
mov
lcall
pop
xor
mov
or
aas
sub
fwait
push
andb
jp
pop
movsb
pop
or
xor
mov
arpl
jne
and
add
inc
aas
leave
rcrb
sbb
mov
adc
push
add
pop
cmp
jp
lcall
inc
cmp
mulb
loopne
mov
les
jae
pop
and
lret
pop
js
jnp
stos
das
or
fbld
orl
leave
insb
stos
pop
aam
and
cltd
inc
xchg
pop
mov
add
out
inc
test
pop
dec
lods
cmc
push
or
mov
push
sti
mov
adc
cli
push
imul
fsubrs
das
and
incl
or
test
push
dec
adc
sarb
test
pop
sub
mov
stc
lods
pop
inc
mov
push
add
outsb
pop
aas
add
add
ret
lahf
pop
test
push
xor
sbbb
jge
fmulp
rclb
mov
cltd
cmp
dec
inc
mov
cmp
ja
dec
loop
mov
jne
pop
jmp
inc
dec
or
pop
faddp
repz
mov
insb
lods
and
inc
shll
cmp
in
pop
mov
pop
insb
lret
dec
sti
xor
pop
ret
adc
and
sub
jbe
cmpsl
or
mov
or
xchg
pop
shl
imul
mov
pop
inc
data16
mov
mov
lcall
inc
push
and
fistpll
loope
cwtl
and
pop
sub
push
sbb
gs
lods
data16
mov
jecxz
cmp
pop
xor
pop
pop
push
divl
pop
ret
insb
test
pop
imul
shl
sahf
mov
mov
mov
add
andl
jmp
roll
loope
pop
pop
add
inc
jb
pop
mov
rorb
arpl
inc
push
xchg
mov
push
shrb
lea
mov
in
mov
imul
shll
inc
and
icebp
add
fidivl
xor
dec
mov
push
push
pop
sbb
inc
cmpsl
in
imull
popa
dec
push
pop
adc
sub
fs
push
loop
rcll
ds
repnz
xchg
add
sub
sbb
or
mov
mov
mov
bound
dec
xor
sub
cwtl
or
adc
xor
fstps
pop
rcrl
mov
inc
sbb
shrl
mov
push
adc
mov
pop
cmp
jne
repz
pop
aam
mov
in
dec
pusha
ret
mov
cltd
pop
cmp
and
inc
ret
imul
mov
or
js
cmp
mov
adc
push
jle
ss
arpl
mov
lock
dec
rcrl
rolb
movzwl
or
movsl
sbb
sub
lea
adc
or
xchg
nop
push
mov
in
loope
xchg
cmp
nop
pusha
xchg
xchg
out
daa
mov
sti
cmp
push
std
pop
sub
xchg
push
dec
dec
xchg
dec
pop
sbb
ja
jb
mov
push
es
insw
js,pn
push
pop
jae
cmc
mov
daa
popf
repz
pop
push
arpl
xchg
cmpsb
jmp
xor
popf
and
pop
movsb
rorl
push
push
pop
test
jp
test
lods
mov
pop
out
adc
ss
adc
dec
cs
hlt
inc
pop
out
sbb
mov
fildll
pop
dec
lods
movsl
add
add
out
add
jne
jmp
mov
loope
test
iret
cmc
int3
aad
xor
fwait
jmp
sub
stc
in
out
dec
stos
shrb
dec
ljmp
pop
call
add
add
jbe
mov
or
mov
dec
das
pop
movsl
repz
fcoms
sbb
orps
mov
inc
push
adc
repnz
adc
fmuls
jae
rorb
aam
movntq
pusha
jne
arpl
pop
pop
adc
xor
jmp
add
stos
decl
pop
lcall
inc
jmp
mov
pop
loope
cmc
mov
inc
repz
rcl
push
pop
adc
mov
ret
sti
sub
incl
cwtl
in
dec
addl
inc
mov
add
or
or
dec
imul
jge
jae
es
sub
sbb
js
and
scas
dec
inc
int3
xchg
out
leave
sub
pop
pop
inc
push
fsubrs
adc
mov
add
stos
adc
pop
push
jecxz
sub
xchg
inc
sub
push
xor
jne
cmp
and
andl
or
sub
adc
and
out
sbb
ds
lahf
pop
ret
push
dec
and
xor
bound
or
jnp
push
jge
ds
arpl
xchg
pop
lods
and
adc
sbb
sbb
pop
pop
cmp
cmc
or
pop
lock
popf
push
or
mov
imul
fs
pusha
sarb
testl
pop
jne
push
mov
sbb
jno
sbbb
and
cmp
pop
push
add
add
sbb
pusha
lret
test
pop
sbb
push
jmp
andl
add
pop
enter
cli
ficompl
or
pop
lcall
dec
adc
stc
std
fidivrl
dec
imull
arpl
cmp
fstps
cltd
or
mov
pop
bound
aaa
in
sbb
pop
or
add
cmp
das
enter
lcall
sub
out
mov
jg
jmp
jne
pop
jb
inc
in
out
fnstcw
std
pop
movsl
or
pop
xor
lret
lds
sbb
inc
mov
lock
adc
mov
cmp
jb
pop
stos
push
movsb
decb
dec
inc
subl
dec
ficompl
jg
aaa
cmpsb
ret
cmp
push
mov
pop
ja
repz
sub
xor
adc
pop
ja
inc
pop
or
and
jle
sub
push
pop
fistpll
mov
pop
push
jbe
fucomi
sbb
xchg
iret
pop
aad
orb
pop
pushf
cmp
sub
xchg
pop
loope
cmp
pop
imul
xor
mov
clc
mov
subl
cltd
push
ret
push
inc
xchg
outsl
aam
pop
push
sbb
jmp
dec
pop
loope
mov
inc
jge
dec
orb
or
xlat
js
add
dec
jmp
fidivs
cli
popa
sub
mov
add
inc
rcll
xor
and
mov
mov
add
mov
sub
or
test
loope
mov
pop
pop
push
push
jp
test
mov
pop
jbe
xchg
xchg
popa
sbb
sbb
negl
xchg
or
dec
sbbb
pop
sarl
lock
insb
adc
add
daa
imul
adc
cmp
inc
and
pop
bound
xchg
jp
pop
aas
sbb
fisttps
inc
inc
pop
test
add
test
daa
jmp
nop
cmp
mov
mov
cmp
ja
jp
dec
add
pusha
push
cmp
jl
std
xchg
fistpl
add
push
xchg
cwtl
add
dec
add
jp
push
jns
and
jae
push
pop
cmp
mov
pop
adc
or
mov
mov
pop
cmp
jne
ds
mov
dec
into
inc
out
lcall
stc
in
clc
flds
mov
fbld
fdivrs
insb
rorb
xlat
cli
inc
fs
push
pop
jge
inc
cmp
jne
pop
cmp
push
push
pop
inc
addl
fcompl
mov
movsl
pop
xor
lcall
leave
pushf
aam
incb
cli
jno
sti
pop
add
jmp
inc
mov
sbb
xchg
sbb
pop
dec
xchg
sub
push
out
mov
mov
cld
add
and
sub
push
push
dec
pop
or
cmp
cmp
movsb
loope
mov
jg
sub
mov
sahf
js
push
push
pop
imul
ficoml
mov
adc
xchg
mov
mov
pop
dec
dec
ds
ljmp
jmp
outsl
mov
pop
sahf
cmp
push
pop
outsb
pop
mov
std
sbbl
and
adc
enter
mov
cmp
sbb
and
pop
mov
add
sti
outsl
pop
add
sbb
imul
add
clc
es
xor
iret
pop
push
jbe
inc
arpl
cmp
inc
dec
jecxz
pop
mov
inc
inc
mov
pop
and
sbb
and
or
dec
adc
jbe
test
lds
addr16
xchg
fisubl
sbb
lahf
dec
xor
xchg
leave
inc
pop
adc
mov
mov
mov
push
call
out
ret
incl
adc
lret
pop
xchg
xchg
testl
inc
or
jle
outsl
mov
jns
and
jmp
pop
in
pop
pop
adc
sbb
xchg
ret
negl
push
imul
mov
xchg
add
inc
adc
sbbb
dec
fdivs
dec
mov
mov
pop
push
cmp
sub
in
lcall
push
addl
mov
aad
adc
leave
add
mov
cmp
andb
push
ljmp
loop
in
xor
stos
pop
pop
or
mov
mov
jge
shr
jmp
add
lods
imul
adc
xchg
cmp
orb
inc
sub
inc
xor
adc
cmp
insb
or
adc
jbe
and
repz
xchg
add
scas
sarb
bound
aaa
or
push
add
popa
xor
pop
pop
in
scas
dec
xor
xchg
mov
push
push
pop
sub
mov
or
pop
cs
shrl
inc
pop
pop
out
idivb
push
std
inc
mov
in
push
and
mov
or
jne
adc
enter
js
stc
out
fadds
imull
and
inc
lcall
or
fnsave
out
sub
iret
pop
pop
mov
enter
mov
cmpl
push
mov
ds
inc
testb
sbb
movsl
inc
pop
add
loope
pop
jmp
mov
adcb
or
pop
push
push
mov
xchg
adc
pop
jae
jle
rolb
pop
xchg
aad
and
adc
mov
or
movsb
inc
pop
test
mov
cmp
inc
and
sahf
fadds
in
add
adc
bound
jmp
ljmp
sbb
inc
imul
jg
xchg
mov
inc
or
pop
inc
dec
das
adc
or
sbb
adc
jg
sbb
popa
inc
xchg
mov
scas
add
adc
cwtl
fcoms
pop
cli
xor
arpl
mov
cmpl
sbb
inc
repz
rorb
cwtl
stos
fisttps
jmp
addb
pop
aad
inc
jmp
pop
jle
add
push
add
jg
jae
cmp
or
and
pushf
cs
mov
xor
xchg
data16
cmp
inc
into
jbe
imul
cmp
push
inc
push
in
je
cltd
and
cmp
les
sub
fdivs
sub
mov
pop
mov
jg
pop
mov
xorl
jno
or
add
cmp
loop
imul
pop
xchg
pop
test
push
inc
cmp
jo
jb
pop
push
xchg
inc
sub
sub
in
xchg
push
flds
movsb
and
cmp
fnsave
fwait
adc
adcb
jmp
imul
sub
jecxz
sub
xchg
mov
jb
sbb
adc
mov
sbb
sbb
aam
mov
dec
aas
scas
negl
repnz
out
pop
pop
stc
es
cmp
jnp
push
pop
outsb
jmp
jns
in
nopl
mov
push
sti
pop
ja
mov
xor
cmp
mov
push
je
xchg
lds
mov
sahf
sub
cld
dec
pop
add
or
outsl
jno
pop
xor
int
ja
pop
movsl
sbb
push
pop
sub
scas
and
or
aam
imul
daa
pop
lds
xor
in
scas
std
pop
xchg
mov
mov
pop
xor
test
dec
sbb
pop
rclb
cmc
aad
aaa
gs
adc
and
arpl
rcrl
cs
in
fisttps
pop
cmp
stos
mov
fimuls
adc
add
push
cmp
pop
adc
dec
xchg
add
xchg
jmp
iret
cmpsb
popa
loope
pop
push
cmp
sub
or
popl
pop
mov
pop
outsb
loopne
fsubr
sbb
cmc
pop
pop
scas
push
sbb
sub
jg
bound
jmp
sub
pop
ljmp
pop
push
adc
leave
rol
sub
pop
mov
addb
daa
cmp
jb
andb
push
imul
scas
xor
je
or
and
sbb
iret
fnstenv
jbe
cmc
jmp
outsl
xchg
inc
int3
add
jl
add
push
and
pop
pop
cmp
mov
push
cmp
ljmp
pop
aas
cmc
push
rclb
sub
cmovns
xchg
or
ret
pop
out
popa
loopne
idivl
jl
pop
jne
mov
jnp
shlb
mov
adc
pop
dec
cmp
dec
stc
loope
jae
out
mov
int
push
in
das
rcll
sbb
ds
je
xchg
jb
pop
and
mov
or
push
pop
dec
mov
pop
es
inc
sbb
jl
pop
sub
push
pop
push
fdivrs
sub
pop
sbb
xchg
popa
cwtl
leave
sub
cmpsl
pop
adc
push
fldl
add
xor
ret
pop
push
rcl
out
addr16
add
jmp
dec
loope
test
push
and
dec
stos
gs
add
pop
xchg
fcomps
jae
push
push
aad
sbb
xchg
loopne
pop
sbb
sbb
add
add
and
test
jle
or
pop
or
mov
adc
enter
ss
sbb
ret
dec
xchg
jb
push
dec
xor
ss
fimull
test
pop
and
lret
pop
adc
xchg
inc
leave
add
movl
inc
stos
mov
pop
add
pop
clc
fsubl
sub
mov
cld
pop
gs
mov
fildl
push
push
loopne
outsb
fcmovu
xor
dec
xor
mov
mov
pop
sahf
and
movsb
pop
cmc
push
icebp
and
push
dec
sub
jns
cs
insb
push
jp
icebp
bound
hlt
pop
cmp
push
jne
cmp
pop
loope
adc
fmul
mov
imul
xor
pop
sub
cld
sbb
push
push
lea
fldenv
sub
es
pop
or
xor
ret
fidivrl
mov
xchg
sbb
sub
pop
add
ja
dec
push
cltd
or
jle
pop
fs
fucomip
or
pop
push
cmp
jae
sub
cwtl
mov
adc
pop
ficoml
jmp
push
pusha
pop
or
std
push
stos
dec
lcall
adcl
add
jno
dec
sti
rcr
adc
push
clc
adc
xchg
or
add
adc
jge
and
inc
jle
fwait
notb
pop
sbbb
cwtl
outsb
pop
lcall
mov
lds
out
dec
hlt
pop
push
cmp
sbb
mov
or
xlat
adc
xor
setns
data16
pop
ljmp
dec
pop
inc
jl
mov
fists
xchg
pop
in
adc
sub
push
push
push
adc
or
jnp
jmp
inc
add
adc
adc
es
pop
icebp
movl
dec
cmp
lret
in
pandn
xor
stc
jmp
pop
xchg
ja
mov
sbb
ljmp
jge
cmc
repnz
dec
inc
std
outsl
xor
push
sbb
ljmp
jb
pop
rcrl
pop
ret
pop
mov
ljmp
andl
pop
and
add
pop
dec
in
pushf
fidivrs
call
inc
xchg
les
out
loopne
pop
je
and
in
es
and
ljmp
rcrb
sub
and
std
gs
and
je
sbb
xchg
pop
ljmp
add
cmp
pop
xchg
test
adc
addl
fadds
cwtl
dec
enter
mov
shl
gs
push
fbstp
test
mov
test
pop
cmp
icebp
push
inc
std
fstps
int
sbb
sbb
movmskps
dec
pushf
stc
dec
mov
imulb
sbb
adc
fldcw
sub
and
pop
lea
add
cmpsl
push
stos
push
jo
jmp
es
pop
stc
pop
ljmp
cmpl
addr16
mov
shrb
mov
or
push
addr16
mov
scas
inc
add
test
xchg
pop
push
xchg
mov
add
inc
mov
shl
sahf
cli
sub
jmp
fadds
roll
mov
add
adc
and
mov
xor
jp
xchg
movsb
pop
call
xchg
pop
insl
in
or
lds
fwait
jnp
mov
cltd
pop
mov
es
inc
push
or
out
fdivrl
mov
scas
push
add
inc
jne
test
add
adc
push
shll
lock
lret
adc
pop
cmpsl
stos
sub
mov
and
enter
mov
pop
and
daa
andl
xchg
jmp
cwtl
pop
shlb
adc
and
xchg
pop
in
or
loop
in
sub
mov
neg
js
pop
in
orb
jecxz
push
rcrl
push
scas
in
dec
mov
shl
pop
cmp
sub
and
loop
mov
mov
or
incl
jecxz
inc
outsl
pop
es
adc
push
add
pop
insl
or
stos
and
mov
aaa
pop
push
xor
ljmp
xchg
and
pop
sub
add
xchg
mov
add
stos
and
adc
movsl
leave
push
or
and
push
test
cs
jmp
or
dec
subb
push
add
sbb
xor
push
push
mov
mov
push
and
test
and
inc
sub
push
pop
fsub
popa
dec
jmp
dec
sub
xchg
xor
out
lds
pushf
fdivs
insl
sbb
pusha
pop
in
and
mov
mov
fcmove
mov
out
outsb
cmpsb
pushw
fiadds
pop
popf
cwtl
add
pop
sub
fstpl
lea
xchg
jp
lahf
out
xchg
aam
enter
lods
and
xchg
pop
leave
test
adc
movsl
inc
xchg
add
or
test
rcll
adc
ljmp
or
fnstenv
push
push
jnp
stos
pop
dec
jb
js
pop
popf
or
jae
pop
push
roll
ljmp
jae
and
push
mov
xchg
or
dec
push
mov
outsb
ds
adc
testb
push
mov
js
cmp
je
popa
jb
outsb
mov
xlat
sub
push
cmp
shrl
pop
mov
in
pop
mov
sub
sbb
xchg
cmp
sub
push
jmp
inc
lret
and
pop
test
test
pop
dec
adc
mov
jle,pn
pop
aaa
rcrl
fwait
shrb
arpl
pop
imul
imul
rcll
pop
sub
aas
leave
pop
jmp
adc
pop
sub
fstp
xchg
test
filds
mov
pop
pusha
adc
pop
pop
push
cmp
loope
imul
adc
adc
jmp
mov
lea
and
push
js
xor
shrb
jo
sub
loope
pop
pop
lock
xor
pop
cmp
push
push
and
sub
xor
repnz
lea
pop
jno
pop
sahf
fiadds
adc
adc
ss
sbb
adc
mov
sbb
jo
jmp
cltd
sbb
mov
push
pusha
push
cwtl
pop
lcall
adc
mov
mov
and
pop
out
nop
add
or
push
xchg
and
adc
and
addr16
ljmp
and
mov
push
aad
jo
pop
iret
xor
clc
shlb
jecxz
inc
add
or
pop
push
mov
into
pop
aaa
test
lahf
xor
mov
mov
xor
icebp
ret
and
mov
xchg
inc
sbb
imul
and
test
pop
clc
inc
ljmp
push
push
js
outsl
push
jl
mov
or
jg
and
inc
add
test
adc
and
jne
dec
ss
dec
bound
xchg
or
pop
loop
add
test
ficomps
mov
shl
or
pop
icebp
nop
int3
pop
mov
mulb
inc
or
std
push
inc
add
cmp
and
in
in
sbb
push
stos
or
and
pop
xor
outsl
mov
fstpl
adc
sub
ret
ret
cmp
mov
fdivl
pop
pop
in
sbb
pop
fs
pop
xchg
jmp
push
adc
push
cwtl
out
cmp
add
adc
fimuls
cmp
pop
jmp
and
push
sahf
pop
jecxz
adc
jl
mov
inc
inc
rcrl
call
push
mov
adc
test
sbb
jb
pop
add
mov
fsubp
loop
ljmp
adc
add
scas
mov
xlat
mov
popa
rorl
icebp
out
cld
dec
pop
into
add
add
pop
mov
roll
sbb
loop
and
pop
sub
adc
dec
and
test
or
xor
enter
mov
push
fsub
arpl
mov
jne
push
test
cmp
jae
xchg
cwtl
call
pop
mov
negl
imul
cld
ljmp
push
jge
inc
adc
pop
fcom
leave
push
mov
inc
mov
loope
sbbb
push
xchg
xor
pop
jmp
sbb
cmp
mov
inc
push
fiadds
dec
cmp
sub
sbb
pop
imul
in
outsl
xchg
and
das
xchg
sub
inc
cmp
dec
sbb
sbb
repz
cmp
ljmp
arpl
cmc
lds
and
xor
pop
ficoms
xor
nop
adc
sahf
mov
cmp
mov
push
push
xchg
pop
mov
push
repnz
dec
cmp
movsl
or
lea
inc
jb
jno
aam
mov
arpl
pop
inc
sti
jg
pop
pop
adc
mov
mov
xchg
sub
ret
cmpsl
popa
cmp
pop
and
shrb
lock
push
stc
aam
xor
mov
in
push
inc
imul
mov
push
popa
pop
mov
ret
sub
inc
mov
push
es
adc
imul
daa
lock
sub
pop
add
mov
sub
pop
and
aas
jmp
add
sub
sub
sbbl
cmp
hlt
addr16
imul
jbe
push
out
adc
std
jnp
and
mov
sbb
test
dec
test
inc
sub
pop
lahf
xlat
popa
ds
addr16
and
pop
scas
gs
or
or
mov
pop
pop
cmp
stos
push
jle
pop
cmp
adc
sbb
jne
mov
add
pop
out
push
dec
outsl
push
into
jo
pop
cmp
jle
imul
in
adc
mov
add
or
jmp
pop
cmp
adc
xor
movsl
mov
push
js
dec
or
pop
roll
sub
fs
adc
rcrl
xchg
cltd
lcall
pop
scas
adc
jo
pop
or
shll
adc
ds
fld
sbb
xchg
mov
stos
leave
addr16
int
sub
and
insb
adc
or
pop
pop
cmp
push
pop
pop
pop
jno
ljmp
lret
xor
and
adcl
inc
xor
sub
jmp
dec
subb
mov
movntps
pop
pop
adc
shlb
push
dec
adc
cmp
add
pop
sbb
dec
in
call
or
ret
push
in
adc
sti
pop
xor
mov
xchg
adc
loope
rcll
adc
push
pop
add
mov
sub
and
ss
sbb
cmp
cmc
jle
call
cmp
inc
or
pop
fsub
xchg
adc
sti
pop
cmc
leave
dec
and
dec
pop
or
fisubrl
clc
dec
leave
fidivrs
pop
mov
inc
lahf
or
pop
das
dec
xor
ja
pop
dec
dec
pushf
push
xchg
adc
sbb
ss
sbb
jecxz,pt
aad
bound
fnstenv
mov
xor
sbb
fldt
or
push
mov
hlt
fsts
jne
pop
push
add
sbb
mov
mov
sub
jnp
jge
sbb
popf
xchg
cmp
lea
or
dec
add
cmpsb
dec
or
pop
adc
aas
cwtl
xor
clc
pop
push
sub
dec
in
push
loopne
ja
or
pop
rcrl
add
xchg
ja
add
mov
adc
incl
loope
jbe
pop
roll
mov
rorl
add
pop
xchg
push
loopne
sbb
popa
or
pop
ljmp
pop
and
push
push
enter
ret
jnp
scas
and
push
xor
mov
xor
mov
push
pop
popf
in
mov
and
pop
mov
or
pop
pavgw
in
cs
sub
add
jno
ja
or
pop
and
sahf
fadds
inc
mov
sbb
testl
stos
pop
sbb
cmpl
and
ss
push
fnstsw
mov
sti
pop
addr16
sbb
push
xchg
inc
fiaddl
or
inc
pop
ret
stc
pusha
sbb
push
xor
xchg
jbe
and
in
rolb
vandpd
fcomps
test
jmp
sarl
add
adc
pop
mov
pop
xchg
mov
or
neg
pop
outsb
mov
scas
sub
dec
rcl
lret
fdivs
adc
or
pop
pop
les
outsb
push
inc
mov
pop
mov
out
or
or
js
mov
cmovno
dec
lret
hlt
jle
or
xor
fsts
punpcklwd
inc
push
pop
mov
sbb
pushf
sbb
push
lods
jp
and
sub
outsl
push
sub
sbb
or
xlat
je
in
push
or
aaa
jae
cld
cwtl
xchg
lea
pop
mov
xchg
xchg
push
and
sub
pop
jne
dec
stc
push
inc
jle
cmp
call
pop
xor
adc
in
les
into
jl
push
pop
stc
or
adc
adc
ds
fldcw
stos
lret
cmp
pop
subb
inc
adc
mov
pop
mov
imul
dec
push
push
push
and
fildl
or
pop
movsl
and
lock
cmpsl
and
imul
inc
cltd
mov
sarl
and
sbb
cs
lret
and
imul
push
in
int3
scas
movsl
xchg
mov
jno
adc
inc
inc
inc
rcrl
clc
sub
jns
pop
stc
std
lods
push
mov
cwtl
loope
rclb
lret
int3
ljmp
movsl
int
and
xchg
test
push
lahf
loop
adc
inc
pop
in
imul
inc
lea
sbb
mov
and
and
sub
xor
add
movsb
cmp
ret
pop
cld
push
xchg
mov
lea
arpl
push
sbb
push
jg
add
pop
mov
pop
aas
fistl
inc
inc
cmp
stc
adc
push
xor
pop
push
xor
outsl
pop
rorb
xchg
mov
adc
jns
lock
flds
pop
push
mov
sti
push
nop
call
adc
inc
xorl
loope
cmp
pcmpgtb
push
jmp
pop
fcmovu
dec
mov
cmp
sub
fnstenv
cmp
push
or
orl
push
dec
jle
loop
sub
test
jns
jle
dec
mov
sub
fnstsw
push
js
ds
inc
xor
loopne
dec
sbb
mov
nop
and
ret
adc
dec
idivb
int3
lret
fdivrs
fistpll
mov
pop
and
cmp
das
push
mov
pop
or
sti
shlb
gs
lds
nop
sub
push
push
or
adc
in
fnstcw
push
stos
pop
pop
adc
jmp
jmp
loope
pop
insl
pop
decb
test
lahf
adc
jp
arpl
pop
pop
movsl
push
inc
sub
sbb
dec
push
sbb
inc
lds
icebp
pop
push
xchg
push
and
adc
xchg
cltd
sbb
dec
inc
jmp
pop
mov
in
cvtps2pi
pop
js
dec
sbb
mov
sub
mov
inc
sbb
int3
pop
cmp
sbb
mov
test
dec
push
cmpsb
filds
mov
testb
jnp
mov
mull
push
icebp
dec
mov
cmp
add
test
adc
insb
les
pop
jecxz
andb
jae
mov
pop
push
movsl
cltd
push
mov
pop
xchg
mov
in
daa
jbe
pop
dec
add
fisttpll
popf
flds
in
jmp
xor
in
movsl
sbb
push
sub
jbe
pop
ret
push
lcall
sbb
jne
xchg
sbb
and
pop
test
enter
lahf
stos
sbb
dec
adc
nop
inc
clc
adc
pop
andb
push
mov
inc
in
lods
loope
fsubs
push
pop
add
push
cmp
pop
pushf
ss
jp
stos
inc
lret
or
fdivrp
filds
xor
xlat
sbb
lcall
jbe
jp
fwait
cli
xchg
xchg
lret
add
push
mov
adc
cwtl
mov
fisttps
aas
fs
or
add
jg
or
loope
fsubs
pop
aas
jno
mov
pop
and
add
mov
stc
push
pop
or
jle
jmp
andb
mov
fistpl
pop
push
jge
pop
sbb
and
repz
push
lret
ljmp
pop
cmc
aad
in
dec
xlat
leave
adc
lock
push
push
cli
xor
push
arpl
mov
and
push
sbb
aaa
les
and
sbb
adc
in
xor
inc
stos
inc
leave
push
jno
or
sub
fsubrs
jl
cmpsl
pusha
dec
pop
pop
mov
xchg
outsb
add
mov
cmp
ret
stc
pop
pop
xchg
sub
outsl
mov
ds
in
cmp
pop
jg
jns
cmp
jle
in
cmc
fsts
sbb
jmp
mov
push
pop
aam
lods
sub
add
pop
orb
fucomp
pop
adc
xchg
jle
out
xor
outsl
add
mov
pusha
pop
push
loop
push
neg
xor
pop
add
jg
idiv
fmuls
lock
jbe
mov
mov
sbb
pop
rorl
dec
ljmp
cmpsb
add
in
aam
add
lock
cmp
loop
es
xor
sbb
inc
or
stos
pop
jp
xchg
popa
leave
fidivl
sbb
out
daa
jnp
pop
or
mov
pop
add
imulb
and
in
or
pop
imul
mov
cwtl
popa
mov
addps
cmp
jecxz
dec
stos
nop
jge
add
adc
aad
push
aas
lret
push
push
mov
mov
aas
sub
lock
int
cmp
aam
mov
push
cmp
sub
cmp
inc
cmp
pushf
fnstcw
xchg
fistpll
dec
or
sub
aas
sub
ljmp
fidivrs
xchg
inc
pop
insb
shl
xor
ss
jb
dec
cmpsl
daa
pop
lcall
orb
in
loop
mov
ja
jmp
push
ret
in
aaa
adcb
xor
sub
jecxz
filds
mov
mov
in
enter
mov
test
push
push
mov
jecxz
fildll
inc
mov
mov
inc
in
and
pop
pop
test
repz
mov
xor
push
jmp
cli
sub
cwtl
stc
cmc
xchg
inc
clc
fcompl
mov
xlat
cmp
push
lods
pop
pop
loop
cmp
pop
pusha
int
das
cwtl
jnp
idivl
mov
std
push
out
cmp
xchg
mov
fadds
imul
cmp
iret
sub
stc
mov
cmpsb
adc
jnp
sub
pop
les
xchg
mov
pop
pop
pop
mov
out
mov
xor
add
push
mov
mov
xchg
cmpsl
out
lods
sbb
inc
push
in
xor
adcl
popf
pop
mov
scas
add
ljmp
sar
push
movsl
inc
outsl
mov
adc
sarl
mov
lds
pop
mov
sbb
push
sbbb
or
dec
or
roll
pop
cltd
popa
sbb
push
gs
mov
dec
fs
fsubr
pop
pop
add
mov
fildll
jp
adc
loop
movsb
negl
sub
addr16
fmul
jae
repnz
xchg
fmuls
test
dec
add
ja
adc
or
rcrl
shlb
pop
dec
xchg
clc
pop
cmp
js
es
inc
mov
popf
inc
push
or
test
stos
jo
sub
push
mov
add
push
jb
jmp
jb
dec
jle
adcl
outsb
imul
pop
sahf
jns
add
mov
adc
rcl
cwtl
push
sti
outsl
cmp
ret
jne
in
and
dec
push
pop
push
es
pop
adc
sti
pop
daa
shr
mov
addl
pop
sbb
loope
sbb
stos
inc
jns
andb
xorl
push
pop
sbb
ficomps
adc
dec
mov
push
sbb
and
jno
std
sbb
adc
pop
jmp
into
in
jecxz
cmc
push
xor
xlat
xor
lods
or
sbb
fldenv
loop
adc
fmull
mov
scas
lea
mov
pop
jle
fdiv
pop
cmp
xchg
pop
xchg
lods
cld
xchg
pop
sti
inc
dec
std
cmp
testb
sbbb
js
inc
sub
lods
cmpsl
pop
loopne
adc
jg
pop
shlb
inc
inc
mov
push
dec
adcl
dec
ja
xor
aas
add
pop
cmp
stc
push
dec
cmp
js
cmpsl
adcl
sti
ret
aaa
in
fildl
flds
sbb
dec
cmpsl
pop
mov
push
cmpsb
pop
jg
ja
dec
ljmp
sarb
cmp
pop
pop
or
ss
sbb
mov
outsl
xorps
dec
xchg
mov
ret
ljmp
push
mov
dec
xchg
insl
sbb
and
xor
xchg
inc
outsl
xchg
cmp
pop
sub
data16
arpl
xor
push
push
jmp
ds
test
sub
or
pop
jmp
stc
mov
cmc
data16
and
adc
or
icebp
insb
out
push
iret
sbb
add
or
push
in
stos
subb
dec
jne
cmp
dec
mov
push
ljmp
adc
push
repnz
pop
add
and
pop
mov
fmuls
pop
lret
test
pop
or
out
xor
xchg
roll
xchg
hlt
mov
push
cmp
jmp
jg
add
jle
adc
jo
fdivl
add
nop
lret
xor
stos
jmp
pop
dec
mov
icebp
cmpsb
pop
inc
push
imul
lock
loope
xor
ss
push
adc
add
adc
push
mov
pop
mov
imull
ljmp
mov
xorl
fwait
pop
rcll
lahf
dec
movsl
inc
inc
mov
xchg
cmpsl
in
or
adc
xchg
sub
jne
dec
xor
jo
testl
std
xlat
cltd
and
pop
inc
push
mov
inc
sbb
push
dec
adc
pop
pop
or
psrad
jae
xor
movsb
sbb
fstpl
adc
fldenv
pop
inc
out
insl
rclb
jno
loope
sub
dec
test
out
mov
pop
mov
dec
jno
cmp
inc
add
push
mov
rcll
outsl
push
aad
fiaddl
cmp
mov
mov
stos
outsb
adc
mov
mov
std
shrb
pop
or
and
jns
sbb
dec
inc
mov
pop
sarb
pop
push
mov
fistps
pop
push
pushf
push
add
pop
mov
add
lods
jbe,pn
push
pop
xor
or
pop
fwait
lcall
pop
leave
jne
push
push
into
inc
jl
xor
stc
xchg
pop
push
insb
add
pop
daa
stos
or
jge
dec
adc
adc
push
pop
cmp
icebp
inc
ja
pop
cwtl
sbb
xchg
add
xor
std
cltd
xchg
es
sbb
test
xchg
ret
push
daa
cmp
adc
ret
ljmp
inc
fldt
sbb
push
pop
pop
dec
and
dec
dec
pop
in
fnstenv
shrl
outsl
loope
jno
pop
pop
cwtl
mov
pop
push
push
adc
pop
or
or
in
sbb
sbb
jmp
lea
xchg
add
pop
or
mov
popa
nop
in
cmp
pop
push
jle
jnp
dec
push
sti
pop
je
jle
cmp
adc
push
dec
out
mov
push
xor
xchg
lcall
xchg
das
xchg
pop
aam
pusha
add
mov
xchg
inc
push
ljmp
ftst
push
pop
lea
sub
adc
stos
sbb
pop
jno
lds
pop
and
cmp
inc
push
jge
cmp
push
xchg
shlb
push
popa
lret
lret
cli
pop
mov
xor
or
lret
lret
pop
ret
cmpb
jl
xor
mov
push
mov
xchg
fwait
adc
push
call
jne
pop
or
ficomps
lret
in
jbe
jl
movb
leave
mov
mov
pop
pop
orl
sti
and
out
pop
add
jno
jne,pn
mov
in
push
dec
and
in
or
mov
add
ljmp
and
mov
pop
jl
adc
push
shr
push
stc
xchg
dec
hlt
dec
dec
out
ljmp
fldt
pop
sub
testl
mov
ret
les
pop
sbb
testb
mov
mov
pop
in
sub
and
dec
inc
jecxz
pop
sub
add
pop
inc
jnp
fwait
rcrb
clc
mov
adc
fnstcw
pop
adc
dec
jge
inc
std
pop
sub
mov
cmp
push
pop
pop
mov
pop
aaa
cmp
pop
js
mov
push
sbb
push
mov
adc
cld
rorl
shl
addb
sbbl
cmp
out
lock
adc
scas
and
and
push
dec
xor
test
and
xchg
push
cli
les
pop
or
and
cmp
adc
out
fistpl
imul
leave
fsubs
sub
das
or
ret
jl
push
dec
mov
pop
mov
rcrb
inc
sti
sbb
rcll
mov
mov
inc
fs
loope
into
adc
pop
rorl
lret
inc
lret
xchg
add
push
lea
inc
and
mov
aas
pop
xchg
insb
mov
inc
xchg
andl
push
fs
adc
jmp
or
in
inc
and
inc
fsubs
daa
cmp
add
popa
xor
sbb
mov
push
jg
out
xor
inc
mov
push
mov
pop
jbe
cmp
xchg
ljmp
aam
push
xor
adc
jmp
stc
test
pop
inc
push
cmp
fbld
pop
in
pusha
sbb
sub
mov
sbb
es
mov
lds
bound
mov
sbb
dec
xor
pushf
jae
dec
sub
pop
cmp
pop
pop
data16
dec
inc
repz
adc
cmp
inc
pop
cmovl
andb
push
xchg
pop
repz
cmp
pop
fsubl
xor
and
nop
aad
rorl
mov
mov
xor
dec
add
sbb
fmull
push
loopne
fcoms
in
cmpsb
imul
popf
pop
xchg
add
push
mov
in
add
add
inc
pop
pop
sub
shll
aas
pop
ljmp
xchg
leave
mov
dec
pop
inc
out
cmp
pop
pop
sub
mov
adc
pop
dec
cmp
inc
repz
ds
sbb
lret
loop
mov
mov
loope
adc
shrl
repz
sub
in
pop
jns
jb
dec
repnz
ret
stc
lret
addr16
sub
mov
sti
pop
sahf
jecxz
adc
fstpt
sbb
sub
mov
pop
xchg
push
dec
adc
pop
adcl
les
push
pop
aaa
pop
in
ret
or
or
movsb
jo
inc
in
mov
loope
inc
mov
pop
fidivrl
sub
jecxz
test
leave
cli
pop
fdiv
sub
gs
pop
mov
adc
std
out
jp
lds
aaa
sub
ficompl
adc
out
out
mov
jo
push
scas
push
arpl
stos
test
adc
es
jge
mov
xchg
lret
or
inc
in
ficompl
xor
dec
in
cld
imul
int
push
loope
lcall
out
add
dec
je
les
or
dec
test
push
ret
adc
pop
jecxz
imul
pop
sti
adc
pop
or
or
pop
sbb
sti
pop
jg
xchg
adc
add
push
fwait
in
jmp
jecxz
fidivl
inc
loope
sub
test
cmp
jp
ret
stc
shrb
pop
jge
cmpsl
lea
pop
add
dec
mov
or
xor
std
ret
out
xor
pop
push
inc
call
std
mov
adc
ret
pop
ds
ret
dec
test
inc
pop
ja
add
dec
pop
cmp
pop
and
je
sbb
inc
mov
pop
mov
pop
pop
add
clc
shll
pop
mov
jbe
adcl
sbb
mov
and
and
popf
mov
add
cwtl
sti
xor
in
and
sbb
fdivrs
add
push
push
fcoms
sbb
xor
xorl
mov
pop
pushf
sub
cltd
test
xor
sbb
fistps
add
pushf
xchg
ss
mov
cmp
daa
ljmp
iret
push
je
inc
xchg
test
cld
push
inc
pop
add
aam
clc
xlat
pop
and
mov
pop
jbe
fwait
mov
loope
dec
shrb
addr16
pop
jb
cwtl
rolb
lods
mov
sub
es
xchg
mov
jecxz
jmp
fldl
popa
rcrb
mov
push
push
mov
cltd
push
lcall
and
mov
pop
dec
adc
ret
je
cmp
cmpl
arpl
push
js
outsl
pop
push
inc
scas
cmpb
sub
adc
push
mov
jmp
test
mov
mov
xor
daa
fisttps
jg
pop
and
and
pop
and
cmpsl
dec
xchg
loop
adc
cld
pusha
jecxz
cld
pop
push
push
add
and
xor
or
mov
mov
decl
or
cmpl
popa
push
call
lods
mov
push
cmp
jno
mov
das
pop
push
iret
loopne
insb
movsl
imull
mov
mov
mov
sahf
sub
adc
push
push
dec
push
icebp
pop
nop
jmp
test
sbb
xchg
rdmsr
pop
cmp
xchg
or
xor
pop
aas
xchg
cmpsb
negb
sbb
mov
das
xor
sahf
into
pop
or
jb
jo
pop
test
pop
icebp
and
push
dec
scas
andl
jle
pusha
arpl
inc
or
jns
and
mov
jmp
enter
cltd
or
jmp
cli
out
pop
mov
xor
aam
std
sbb
jbe
inc
mov
test
pop
leave
pop
shr
out
pop
out
nop
dec
je
lret
inc
or
in
out
or
pop
and
andnps
dec
xor
pop
xchg
or
fisttpl
sbb
push
push
notl
insb
pop
mov
jmp
xchg
imul
fcoms
sub
cmpsl
outsl
sub
pop
sti
inc
leave
push
std
mov
xchg
sub
pop
sub
jno
pop
es
and
mov
test
cltd
add
fisttps
test
sub
jne
jns
mov
cmp
cmp
or
fwait
inc
cltd
xor
push
in
dec
dec
mov
arpl
pop
push
dec
pusha
mov
shl
dec
in
clc
pop
mov
inc
push
cli
mov
or
sub
bound
test
inc
pop
jg
sub
shl
jl
popa
and
cmp
add
rol
adc
movsb
jge
mov
in
and
icebp
or
jbe
cmp
sub
les
pop
sub
in
lret
adc
cmp
pop
push
adc
pop
sbb
jo
and
test
stc
iret
pop
dec
jnp
push
jle
mov
out
sbb
fstl
ficoml
pop
jns
roll
xchg
push
and
pop
aaa
lahf
int3
gs
roll
pop
incl
ret
enter
sbb
daa
push
rcrb
iret
aam
or
xchg
lret
jge
or
mov
mov
dec
pop
jbe
push
jl
insl
mov
sub
xchg
push
cmp
loopne
sub
or
add
cwtl
ss
fcompl
ja
arpl
adc
je
or
mov
and
ficoml
les
jl
mov
movsl
cmp
daa
xor
or
or
lret
ret
insl
fmul
pop
xor
pop
mov
out
cltd
lods
pop
cmp
cmp
pop
inc
jne
pop
movsb
pushf
dec
es
lret
push
or
fistl
inc
test
cwtl
jno
imul
xchg
or
cwtl
ret
jne
mov
inc
adc
mov
push
sub
sbb
fisttpl
sbb
xor
sti
xchg
loop
xor
mov
xchg
jg
fiaddl
push
test
jmp
sub
jbe
popa
jb
xchg
xor
adc
adc
cmp
push
loope
dec
fimull
xchg
sbbl
xor
mov
insb
test
and
call
fcomps
cmp
jecxz
lea
inc
ja
push
outsl
and
ljmp
in
cmp
js
pop
lcall
mov
in
sub
std
enter
gs
push
pop
inc
data16
mov
dec
punpckldq
push
sub
mov
das
out
rolb
pop
mov
xchg
test
push
pop
test
push
push
cmp
xor
addr16
dec
jl
imul
lahf
inc
xchg
xor
inc
inc
aam
sub
test
rclb
dec
icebp
jbe
or
push
out
insl
fwait
pop
jmp
shll
push
ret
pop
addr16
call
insb
pop
push
or
fcoms
sbb
pop
out
dec
test
jecxz
xchg
pop
ret
dec
cmp
cs
cmp
sbb
pop
js
jne
dec
in
lret
push
mov
mov
inc
dec
pop
sbb
inc
and
push
mov
gs
pop
in
xor
and
mov
popa
stc
mov
pop
popf
repz
xchg
and
sbb
lds
call
test
xchg
or
pop
andb
adc
stc
enter
pop
popf
dec
stos
mov
push
ret
push
cmp
pusha
cmc
lcall
inc
mov
scas
pop
adc
outsl
sbb
jnp
in
xor
add
adc
pop
and
loop
rcrb
out
mov
pop
daa
stos
and
mov
call
mov
rcr
addr16
push
pop
mov
dec
jne
add
hlt
inc
bound
sub
ljmp
inc
les
xlat
mov
dec
cmovns
sub
movsl
dec
outsl
pop
xor
inc
push
pop
and
pop
pusha
or
jno
mov
dec
push
gs
push
sbb
es
mov
sbb
insl
mov
inc
jnp
or
dec
lds
js
out
xchg
or
pop
sbb
nop
add
pop
ja
enter
and
ficomps
jb
pop
pop
out
test
scas
push
sbb
cmp
aas
in
jecxz
cmp
adc
mov
dec
adc
out
and
pop
leave
dec
jnp
fisttpll
daa
sbb
pusha
adc
jbe
insl
mov
icebp
es
add
push
repz
push
mov
pop
push
fdivs
pop
sub
mov
ret
push
int
sbb
mov
jecxz
or
imul
push
sub
add
cmp
arpl
sbbl
shl
or
xor
push
movsl
sbb
pop
mov
push
ret
mov
sub
inc
mov
clc
mov
adc
pop
rol
aaa
dec
ret
lods
pop
dec
mov
das
sahf
dec
stc
stos
cmp
adc
dec
and
pop
cwtl
xor
xchg
andb
pop
sub
imul
pop
in
adc
add
sbb
push
mov
dec
dec
adcb
xchg
arpl
clc
mov
dec
inc
fnstsw
xchg
int
sub
fwait
cmp
lods
jne
pop
jg
mov
stos
mov
dec
pop
lret
xor
jmp
add
jmp
addr16
ret
or
inc
pop
outsl
and
insl
or
add
or
and
xchg
add
in
pop
sub
jb
and
movsl
jle
imul
xchg
ret
mov
pop
and
pop
mov
jnp
push
jmp
cli
dec
xchg
test
add
setne
xor
call
gs
sbb
ds
data16
sbb
sub
xor
test
bound
jae
dec
push
dec
jmp
or
shll
pop
or
pop
pop
mov
or
inc
adc
mov
inc
movsl
or
mov
fs
pop
jg
sbbb
push
scas
sub
aaa
pop
push
mov
lret
cmp
pop
or
pop
jae
jge
std
pop
jne
cmp
out
test
fdivrs
and
and
cmp
dec
mov
and
or
jecxz
lret
sub
pop
in
stc
dec
push
push
repnz
iret
ljmp
pusha
sub
push
sub
leave
push
jns
add
mov
push
add
andl
and
sbb
dec
cld
and
add
inc
sbb
cmp
mov
clc
into
cmpsb
mov
or
xor
sbb
adcb
pop
in
cmp
add
pop
ret
cmp
adc
push
iret
ror
sbb
sahf
ja
pop
push
loope
mov
in
or
stos
enter
inc
mov
pop
jae
mov
gs
or
jg
and
stc
xchg
pop
addl
les
jge
dec
daa
push
push
jb
scas
pop
imul
lcall
cmpsl
cmp
jae
inc
nop
xor
mov
ljmp
movntps
xchg
in
cwtl
sub
imul
jno
pop
add
jnp
push
pop
or
push
fnstsw
sbb
jmp
pop
test
sub
mov
push
js
test
and
adc
loopne
cld
xor
push
cli
cmp
push
stos
fadds
test
test
xor
idivb
mov
mov
insl
stc
dec
push
sub
xchg
shl
pop
int3
pop
jg
dec
mov
mov
cmp
push
inc
stos
mov
fistpl
pop
sbb
mov
pop
jbe
sub
test
pop
pop
cmp
cmp
cwtl
nop
in
pop
repz
mov
or
ret
push
cmp
mov
enter
xchg
mov
jmp
jbe
sub
add
mov
cmp
pop
jnp
sbb
aam
jle
sub
sbb
xorb
push
xor
mov
push
mov
sbb
test
and
pop
fistl
cmpsl
je
add
sub
in
or
inc
mov
aas
sbb
pop
add
cmp
loope
sub
ss
pop
hlt
je
mov
test
pop
jbe
dec
ds
arpl
pop
cmp
inc
in
clc
pop
and
cs
stc
push
pop
and
enter
push
popa
pop
mov
lcall
pop
inc
mov
jbe
ds
sbb
dec
je
notl
imul
pop
out
test
cmp
ret
mov
add
or
stos
xchg
mov
ret
xchg
in
add
sub
push
ss
icebp
pop
xor
scas
jl
cmc
leave
jno
and
sarl
pop
mov
adc
test
sub
jp
es
and
pop
or
sub
sbb
inc
pop
dec
sub
jo
cmp
mov
sbb
jl
rcrl
leave
mov
add
adc
dec
xor
in
popa
je
data16
aam
pop
roll
sub
inc
adc
je
testl
sbb
inc
mov
imul
dec
push
sub
sbb
or
cmp
mov
ds
movsl
pusha
and
push
inc
lods
mov
outsb
sub
dec
push
or
adc
push
inc
xor
pop
pop
dec
jle
adc
ror
repz
std
popf
pushf
mov
sbb
xor
push
dec
or
fidivl
adc
xor
mov
scas
leave
inc
stc
pop
jl
pop
sbb
sbb
nop
leave
jmp
lods
insb
popa
inc
push
pop
sbb
xchg
jns
ds
push
mov
outsb
xor
push
sbb
pop
or
jp
pop
cmp
and
arpl
loopne
push
sub
ss
in
ficompl
push
jmp
push
pop
imul
inc
cmp
loop
and
push
xor
push
push
pop
or
arpl
pop
daa
pop
aam
and
mov
dec
ljmp
xchg
ficoml
in
xchg
dec
add
int
bound
jnp
lret
bound
dec
and
sar
pop
sub
rcrb
jno
lds
outsl
cld
pop
inc
pop
push
dec
std
es
dec
and
lea
pop
jge
or
jns
xor
les
pop
mov
neg
sahf
adc
and
xchg
pop
pop
test
adc
fcompp
ja
ss
loop
adc
add
leave
flds
sbb
dec
pusha
lods
pop
pop
sbb
or
ja
das
pop
or
and
hlt
adc
pop
xchg
cmpsl
fiaddl
std
pop
popa
dec
sahf
movsl
or
inc
push
mov
ror
adcl
out
or
clc
sub
and
or
pop
cmp
adc
pusha
cmp
clc
idiv
ljmp
mov
and
inc
inc
rcrl
mov
xor
pop
cmp
add
pop
stc
or
imul
cmp
lcall
pusha
push
bound
lahf
pop
insl
xchg
adc
js
and
sbb
pop
or
pop
jns
stos
jg
jecxz
and
rorb
jbe
push
pop
jg
ss
jmp
aas
fmull
push
lds
pop
xchg
xchg
dec
sbb
int3
xchg
pusha
jnp
mov
cmp
mov
mov
push
jnp
les
inc
inc
outsb
sbb
ljmp
push
stos
sub
enterw
mov
ss
addr16
sbb
inc
scas
adc
push
fiaddl
insl
and
or
clc
and
mov
pop
add
dec
xchg
stos
adc
jae
xor
loopne
loop
leave
jge
mov
pop
sahf
or
lret
mov
clc
pop
ret
test
sbb
leave
pop
xlat
dec
sarb
icebp
pop
fdivs
pushf
inc
out
pop
inc
out
pop
call
les
arpl
gs
pop
ret
mov
mov
pop
mov
inc
stc
add
dec
ljmp
iret
mov
insb
jmp
jcxz
push
cmp
cmp
icebp
filds
jle
and
pop
mov
sub
adc
jne
or
aad
dec
pop
lret
std
add
xchg
ds
and
mov
xchg
push
mov
pop
dec
cltd
jg
ljmp
sti
push
addr16
adcl
xchg
fdivrs
pop
sbb
sbb
jmp
jb
ljmp
das
aas
movsb
in
adc
mov
fwait
pop
push
stc
lock
xchg
jmp
test
push
pusha
cltd
int
aaa
fdivs
mov
movsb
mov
pop
mov
pop
cmp
jmp
jge
shll
or
pop
cmc
js
shrb
out
lahf
push
pop
rcll
pop
scas
xor
repz
inc
gs
dec
mov
cld
cmp
jbe
imul
pop
xchg
testb
out
jne
cmp
pop
dec
and
daa
pop
pop
and
adc
das
sbb
fcompl
sub
jmp
ljmp
pop
cwtl
adc
sti
mov
mov
jne
sub
xor
sub
mov
add
and
ds
leave
cmpsl
ljmp
pop
xor
push
in
or
and
repnz
ljmp
push
cmp
mov
dec
sbbl
icebp
jmp
xor
push
push
fldl
dec
jmp
and
pop
cmp
push
leave
push
pop
push
mov
dec
add
mov
pop
mov
rorb
xor
pop
fstp
xchg
xchg
aas
add
fadds
jp
push
cmpsl
jle
jne
sbb
sbb
in
inc
cmp
clc
and
inc
jecxz
xchg
jmp
fmuls
sarl
daa
ljmp
and
or
aad
in
loope
imul
in
sarl
jne
pop
in
sbb
pop
and
enter
pop
pop
loope
push
not
in
add
adc
or
push
mov
out
pop
lcall
lods
push
mov
sub
pop
push
in
fstpl
mov
mov
orb
push
jge
jg
jmp
pop
push
pop
ljmp
js
xor
stc
out
sbb
jb
and
outsl
cmc
push
bound
shrb
add
fdivl
cmp
cmp
jbe
lds
and
scas
sub
adc
pop
std
test
push
enter
dec
pop
movsl
das
in
imul
sub
popf
sbb
fimull
add
rcl
add
xor
mov
adc
mov
dec
sti
sub
sbb
add
add
pop
incb
jmp
lret
xor
dec
testl
push
pop
icebp
push
inc
cmp
pop
jns
mov
add
mov
das
clc
ficoml
push
xor
and
xchg
in
pop
xchg
cmp
enter
rcrl
pop
cmpsl
pop
sahf
inc
xchg
push
pop
cmc
jmp
es
pop
imul
pmaxub
cwtl
jmp
push
sub
pop
dec
or
push
rcll
js
das
stc
pop
lret
jge,pt
sub
pop
mov
sbb
fs
and
jo
pop
cmp
inc
push
add
pop
aas
jns
adc
mov
int3
sub
pop
rcll
xor
xor
in
notw
cltd
jle
mov
or
push
mov
fstps
or
jmp
pop
out
cmp
or
out
or
push
pop
cld
inc
clc
insl
cwtl
jae
sbb
cwtl
push
lcall
fadds
fiaddl
push
jbe
fildl
gs
jo
jecxz
pop
pop
sbb
std
sub
mov
push
inc
fbld
push
pop
cmpsb
pop
and
ds
jae
lcall
pop
xchg
and
add
xor
stc
fldt
dec
pop
xchg
adc
mov
mov
mov
in
pop
lds
js
incl
pop
xor
pop
push
std
jno
stos
cmpsl
inc
lods
ja
jo
aam
adc
or
imul
dec
xlat
xchg
sti
xor
dec
mov
jle
pop
mov
sub
cmp
ja
bnd
dec
pop
dec
adc
dec
mov
cmp
movntq
ljmp
cltd
sbb
push
pop
pop
jmp
loop
subb
mov
call
bound
test
shll
cli
aad
cmp
notb
imul
jmp
add
pop
jge
add
pop
push
mov
or
push
stos
fmuls
or
jl
pop
std
sub
int
pop
cmp
add
push
fbld
sub
fwait
dec
push
fisttpl
pop
inc
adc
inc
pop
add
in
stos
sub
pop
or
out
pop
dec
cmp
cmpsb
pop
push
in
dec
lret
jno
dec
pop
mov
and
pop
test
testl
mov
rol
pop
pop
daa
sbb
pusha
mov
add
xchg
inc
mov
pop
cli
add
stos
or
xor
int
sub
or
push
pop
adc
jmp
sti
jbe
or
jae
pop
xlat
test
jge
and
sahf
and
int3
add
sbb
testl
mov
cmp
sub
pop
inc
rclb
cmp
ficoml
in
xchg
mov
fists
pusha
arpl
cmpl
mov
negl
xor
sub
adc
cwtl
or
pop
inc
in
sbb
div
daa
pop
fbld
dec
xor
jg
pop
ja
xchg
aaa
lcall
sub
es
lea
xchg
sbb
arpl
filds
dec
xor
js
push
lods
cmp
sbb
mov
es
inc
repz
rorb
mov
adc
push
out
ljmp
fs
jbe
sbb
mov
sub
sub
daa
stc
and
filds
es
dec
sbb
ljmp
mov
add
pop
negl
adc
cli
shlb
sbb
pop
ret
lcall
lods
leave
clc
push
je
lret
lds
inc
cmp
push
push
or
loop
push
mov
add
iret
fprem1
jns
pop
jg
sbb
fistl
cmpl
inc
or
shrb
inc
adc
pop
imul
sarb
push
je
pop
cmp
pushl
in
icebp
mov
fucomip
sub
call
inc
mov
mov
pusha
and
aad
and
in
test
movsb
pop
mov
mov
cmp
cmp
or
js
add
out
stc
pop
jbe
cmovp
adc
mov
adcl
jge
cmpsb
jp
jb
fistps
mov
icebp
sarb
and
push
lods
test
or
and
adcl
pop
and
sbb
repnz
push
arpl
sbb
jns
cmc
push
ja
jae
in
fistpl
sub
popa
inc
ds
pop
mov
mov
cli
adc
int3
pop
dec
negb
xor
add
sbb
mov
pop
fldenv
mov
ss
ret
sub
pop
fstl
cwtl
xlat
add
pop
daa
lds
andl
mov
fmull
int
pop
and
or
fistpl
testb
pop
rorl
sbb
inc
mov
in
xor
jmp
pop
mov
or
pop
or
lret
add
xchg
pop
je
imul
push
and
and
xchg
sbb
pop
daa
cltd
lds
fimull
xchg
sbb
or
adc
es
pop
repnz
jmp
xor
push
cld
pop
shll
add
cmc
movl
mov
pop
jmp
jmp
addr16
push
shll
adc
js
fisttpll
mov
cld
dec
ret
cmpb
pop
or
icebp
scas
stc
push
inc
cmc
push
rorb
jmp
push
add
sub
sbb
xor
cs
add
mov
mov
jge
pusha
fxch
pop
mov
in
sub
fcoms
or
insl
inc
cmp
or
repnz
xchg
jp
add
inc
loope
jle
pop
repnz
dec
aam
daa
or
adc
adc
mov
pop
dec
inc
aad
jmp
cld
data16
inc
mov
mov
inc
pop
ret
jns
in
pop
into
out
lret
jno
or
xor
jmp
jle,pn
sahf
pop
adc
or
cwtl
sub
pop
dec
mov
and
outsl
pop
or
ja
xchg
pop
scas
in
or
cmp
cmpl
icebp
xor
inc
or
nop
pop
add
lea
or
pop
insl
mov
gs
pop
imul
jg
pop
push
sbb
add
push
push
mov
fs
nop
ljmp
in
pusha
negl
xchg
inc
jg
test
cs
adc
incl
imulb
pop
and
leave
push
and
movsl
push
xor
push
lahf
test
pop
jmp
pop
nop
in
pop
in
add
imulb
xor
jg
orl
pop
std
pushf
jae
insl
lods
out
add
dec
fldl
mov
push
addr16
sbb
inc
pop
pop
jno
add
pop
pop
mov
sub
pop
and
mov
sub
leave
cmp
xchg
push
add
out
test
in
mov
pop
lds
sbb
pop
or
daa
xor
ja
add
cmp
xchg
pop
pop
es
sub
sbb
dec
sub
lods
std
cmc
sbb
fxch
mov
or
mov
cmp
es
pop
pop
sbb
int
cmpsb
and
xchg
adc
adcl
push
pop
loopne
mov
xchg
sub
push
or
add
enter
andb
mov
aam
jmp
sarb
jo
pop
or
scas
jno
jmp
movsb
add
mov
shll
sub
lds
fdivr
cmp
inc
cmpsl
cs
pop
in
mov
and
mov
pop
or
addl
mov
mov
pop
jbe
lcall
out
pop
pop
dec
inc
fadds
in
pop
adc
lds
mov
sbb
xor
add
jmp
sbb
cmp
popa
pop
gs
adc
pop
sub
in
pop
cmp
imul
adc
and
push
cmp
add
xor
pop
add
cmp
insl
pop
lea
rcrb
adc
mov
jmp
das
popf
pop
pop
mov
addr16
repnz
jl
or
inc
pop
push
or
push
test
fiaddl
push
pop
int3
lcall
pop
dec
mov
mov
cmp
andl
sarb
push
and
je
out
fcomps
js
and
pop
sub
lret
dec
pop
ret
mov
mov
addl
xor
mov
inc
leave
mov
sub
les
dec
in
lcall
es
mov
adc
arpl
aas
or
dec
gs
sbb
dec
hlt
ficompl
sbb
mov
or
add
mov
subb
int3
pop
pop
cs
jmp
push
ret
adc
dec
addps
jne
popa
pop
rolb
jmp
pop
inc
movsb
xchg
or
xor
data16
sub
lret
xor
rorb
test
and
scas
push
pop
pop
xor
mov
push
or
sbb
test
jns
push
pop
or
pop
insb
mov
pop
cmpsb
aas
sub
iret
mov
pop
out
in
fadds
cwtl
std
mov
popa
inc
adc
sub
pop
mov
lret
jbe
add
pop
xchg
out
jl
push
sbb
outsl
mov
repnz
cmp
push
mov
mov
imul
pop
bt
mov
push
dec
jp
bound
push
enter
fstl
push
das
sbb
stos
add
xchg
dec
insb
fucomip
mov
pop
or
pop
jbe
mov
push
pop
leave
add
cmp
pushl
or
xchg
cmpsb
adc
jmp
stos
popa
adc
lcall
sub
icebp
and
es
in
xor
sub
or
pop
push
add
cmp
out
inc
js
fcomp
push
mov
insb
rcr
cli
pop
cmp
jb
ljmp
pop
xchg
or
jno
cmp
jae
rcrb
and
flds
pop
in
or
ds
dec
add
pop
fcomi
inc
push
lock
push
jmp
jne
insb
push
call
out
js
pop
sbb
and
jne
clc
loopne
lea
cmp
aam
lret
test
pop
cwtl
dec
pop
sub
mov
adc
mov
xor
sbb
hlt
pop
arpl
cli
cmp
jle
in
mov
push
js
sub
jmp
loop
push
pop
lds
or
les
push
repz
sbb
mov
fistpl
imul
outsb
jo
loopne
jnp
mov
jg
cli
jp
add
xchg
pop
adc
push
sti
sub
and
mov
call
int3
sbb
push
jle
pop
sbb
je
lcall
int
insb
cmp
dec
mov
pop
mov
jle
pusha
scas
adc
pop
mov
xlat
mov
cmp
pop
or
aas
cmp
dec
jmp
mov
fld
push
inc
adc
dec
hlt
jecxz
pop
ds
jne
sbb
cli
pop
test
test
je
jecxz
adc
cmc
mov
cld
pop
ret
orb
adc
mov
cmp
shl
add
xchg
jns
xor
enter
adc
xor
mov
and
inc
push
ds
dec
or
daa
jle
pop
adc
clc
lods
pop
cmp
cli
pushl
jb
push
mov
and
jb
pop
addr16
sub
ret
mov
hlt
pop
nop
and
xchg
inc
push
jbe
or
mov
pop
aaa
inc
lds
negl
hlt
stc
adc
xor
mov
jns
adc
es
mov
add
leave
cli
idivl
data16
pop
lock
add
or
push
and
push
sbb
repz
jbe
and
sbb
fiadds
pop
and
push
or
pop
jne
pop
push
les
or
cmp
pop
pop
out
xlat
push
pop
mov
dec
fldcw
xor
sub
pop
sbb
imul
mov
rorl
pop
add
mov
pop
push
fmuls
lcall
mov
daa
ljmp
mov
ds
adc
pop
fsubl
mov
mov
aad
pop
sub
cmp
lret
in
xlat
pop
pop
pop
push
mov
mov
lret
loop
pop
push
das
pop
push
rorb
pop
pop
hlt
mov
inc
xchg
mov
das
movsb
aad
aam
bound
mov
fcomps
push
ljmp
cmp
pop
sbb
xor
cmp
pop
jmp
mov
scas
jne
sub
adc
pop
xor
ret
ja
fucomp
mov
pop
inc
ja
sbb
loopne
cmp
fidivrl
sub
inc
cmp
and
movb
test
mov
aaa
xor
push
mov
pop
data16
push
repz
jle
pop
add
arpl
out
sbb
sbb
icebp
fcmovu
rcrb
test
inc
stos
or
pop
adc
xor
cmp
sub
ret
shlb
and
sbb
cmp
jns
cmpb
jecxz
inc
pop
js
insl
mov
pop
out
insb
stc
add
filds
cmp
ss
popa
sti
dec
or
add
add
clc
inc
popa
and
dec
scas
push
xchg
ss
fsincos
lods
pop
xlat
fadds
cmp
ret
push
add
mov
inc
pop
jle
ret
adc
lcall
xor
add
inc
jg
notl
pop
inc
inc
ret
test
adc
sahf
ja
sbb
sub
pop
out
lcall
cltd
add
cmp
add
fidivl
pop
and
add
push
sbb
out
daa
jmp
push
icebp
or
push
imul
add
cmp
std
nop
pop
stc
imul
push
adc
pop
inc
jae
push
stc
jmp
sysenter
cltd
cli
test
or
and
jecxz
cltd
js
pop
sub
movsb
sbbl
sub
fisttps
dec
ret
out
mov
ret
inc
adc
test
add
ds
in
test
cmp
sub
jl
pop
movsb
xchg
pop
out
mov
mov
cmp
es
testl
dec
pop
addl
mov
xchg
sub
lret
sbbb
inc
in
xorl
arpl
push
push
sub
daa
ljmp
push
imul
shlb
jecxz
into
jge
mov
jno
mov
sub
aad
cwtl
sub
test
std
pop
addl
inc
or
movsb
or
pop
loop
mov
push
sub
pop
inc
icebp
fildl
dec
add
pop
and
mov
gs
pop
sub
sbb
mov
adc
push
lret
xchg
fmull
pushf
cli
sbb
mov
jne
arpl
mov
popa
movsb
adc
outsl
xor
out
dec
mov
mov
pop
lods
lret
imul
pop
pushf
addr16
mov
cmp
or
inc
test
loopne
xor
in
or
dec
lods
cwtl
pop
sub
fnstsw
sarl
sbb
imul
dec
xchg
pop
pop
add
and
adc
dec
add
sub
dec
adc
mov
fnstsw
clc
push
ficompl
sbb
movsb
adc
push
or
les
mov
inc
data16
or
nop
out
add
pushf
pop
notb
pop
cli
pop
inc
or
jp
sbb
mov
imul
test
ljmp
and
pop
stos
dec
push
cmp
pop
mov
les
pop
xchg
or
sbb
sahf
adc
imul
jns
mov
sbb
xor
mov
mov
gs
pop
test
adc
leave
orl
mov
pop
dec
pop
pop
xchg
dec
push
ret
add
popa
pop
cmp
lods
cs
shll
push
daa
push
cmp
and
cmpsb
sub
jnp
xor
push
sub
pop
dec
xor
lahf
sub
jb
and
and
sbb
fs
cmp
or
cmpsl
std
mov
outsl
popl
lret
or
inc
pop
jl
pop
mov
dec
lea
sbb
popf
or
pop
rcrl
sbb
lret
push
into
sar
mov
sbb
mov
jge
fadd
sbb
cwtl
cmp
push
dec
notl
es
jg
sub
xchg
xchg
fidivl
test
add
jl
test
icebp
cs
jo
mov
cmp
ret
dec
sbb
mov
lock
imulb
js
pop
ret
jns
push
stc
pop
sbb
arpl
xchg
inc
pop
stc
or
gs
mov
sti
ss
inc
loope
stc
pop
xor
cli
imul
add
test
daa
popf
xchg
cmp
pop
fnstsw
or
add
or
cli
in
pop
test
pop
movsl
jmp
adc
jbe
out
pop
and
mov
add
adc
cmp
test
orb
sbb
or
push
push
xchg
popa
and
jns
add
pop
inc
es
shll
int3
stos
sub
pop
cs
push
adc
movsb
cli
jo
pop
push
dec
sub
pusha
jecxz
pushf
sbb
inc
mov
adc
pop
and
rorl
add
mov
cmp
mov
test
pop
cltd
test
xor
movsl
inc
cltd
gs
inc
imul
pop
xchg
repnz
jl
cmp
push
mov
sub
sbb
dec
inc
movsb
add
jne
fdivrs
dec
adc
sub
fsubrl
test
imul
pop
movsl
and
pop
push
pop
inc
adc
sbb
pop
adc
in
dec
pop
stc
dec
pop
push
stos
daa
xlat
mov
lcall
xor
pop
scas
push
orb
xor
cli
rorl
imulb
pop
popl
xor
push
cwtl
jae
jb
rcrb
test
cld
pop
jne
sbb
pop
cli
pop
les
mov
inc
sub
push
pop
cwtl
add
sahf
ja
stc
pop
or
int3
push
mov
pop
mov
mov
push
pop
xchg
and
dec
imul
pop
adc
dec
mov
xlat
pop
cmp
pop
add
pop
rcrb
jne
cmp
mov
or
dec
xor
pusha
pop
notl
enter
dec
imul
scas
xchg
dec
pop
das
mov
cltd
repz
pop
add
xchg
mov
mov
pop
xchg
hlt
sub
adc
jge
or
xor
stc
pop
push
in
or
or
xchg
pop
arpl
js
mov
insl
pop
push
push
push
jbe
add
dec
ret
pop
push
inc
test
mov
call
inc
inc
and
shll
outsl
pop
adc
adc
push
inc
js
repnz
les
dec
bound
insl
inc
jb
dec
inc
stos
and
mov
pop
sub
loop
mov
adc
cmp
notl
dec
or
pop
mov
or
pop
fsub
and
xchg
pop
ljmpw
pusha
cli
push
pop
adc
and
orb
mov
jns
pop
fs
shrb
cmp
mov
pop
xchg
ja
pop
clc
mov
dec
icebp
in
into
sti
sbbb
lret
test
add
jg
jecxz
roll
pop
inc
cmc
incl
sbb
js
les
aad
mov
jge
push
negl
mov
dec
pop
pop
and
fbld
sub
mov
mov
std
and
adc
add
jmp
test
dec
test
pop
cmp
xor
push
in
sbb
es
xor
dec
pop
push
pop
iret
lea
add
les
pop
lcall
paddb
insb
test
or
dec
sub
iret
pop
mov
and
jnp
push
lods
scas
popa
and
push
or
dec
dec
pop
in
ror
inc
pop
mov
daa
and
outsl
jecxz
pop
xor
add
push
leave
sahf
orl
lods
cltd
ret
jecxz
outsb
sub
push
mov
mov
dec
add
mov
xchg
add
sub
pop
movsl
lret
cmovae
cli
pop
sbb
rorb
push
rcrb
ret
jle
or
pop
dec
lcall
pop
mov
mov
fstps
lods
lret
fstl
or
sub
xchg
pop
in
iret
pop
mov
cmp
or
cmpsl
push
jbe
mov
daa
arpl
and
and
cmc
sbb
sub
pop
arpl
inc
push
adc
inc
cmp
xchg
in
push
sbb
test
pop
jecxz
loope
xchg
jne
sbb
mov
rcr
daa
or
mov
pop
ss
into
pop
add
les
mov
pop
add
iret
in
lret
inc
sbb
pop
sbb
xor
cld
fld
sahf
lods
pop
aad
mov
xor
fwait
jno
imul
pop
outsl
sub
sub
jp
cmp
ret
pop
sbb
xor
push
and
pusha
push
ficomps
jns
inc
pop
arpl
add
mov
xchg
and
adc
stos
sub
flds
daa
pop
fstpl
push
adc
dec
pop
aad
test
xchg
inc
mov
cltd
sbb
jge
cmp
stos
sbb
xor
fadd
imul
outsb
inc
mov
imul
mov
ljmp
pop
or
andb
pop
add
mov
ret
cmp
aaa
pop
sub
pop
lds
repnz
orb
pop
movq
cs
stc
inc
pop
mov
cmp
jo
adc
lds
dec
xor
imul
lods
pushf
mov
mov
insl
ljmp
pop
xchg
mov
dec
pop
insb
adcl
lret
das
and
lds
dec
addr16
testl
movl
enter
mov
jbe
inc
mov
inc
jno
imul
lret
pop
mov
scas
add
mov
xor
adc
in
shrl
sbb
mov
idiv
icebp
dec
bound
sbb
inc
push
adc
jmp
sahf
ret
push
and
imul
add
jbe
push
subl
std
cmpsb
mov
add
ficoms
shl
mov
adc
sbb
dec
mov
ret
mov
fisttpl
cli
xor
pop
sbb
addb
pop
add
xchg
or
and
pop
mov
fildll
pop
cmpsl
adc
push
fidivrl
ljmp
mov
pop
jne,pn
daa
cmp
cmp
xor
sub
sub
lcall
lea
sbb
pusha
or
cs
xchg
lret
cmp
addr16
push
xchg
in
dec
and
xchg
mov
mov
jb
pop
outsl
leave
inc
roll
push
add
iret
fs
pop
mov
lret
ret
pop
and
mov
push
and
rorb
dec
mov
pop
adc
push
ljmp
adcb
adc
fidivrl
or
mov
mov
dec
fs
mov
sub
add
lods
pop
or
jbe
imul
pop
adc
nop
arpl
cmp
jg
and
add
cmc
pop
pop
loope
sbb
mov
mov
xchg
pushf
xchg
xchg
or
adc
inc
or
jle
push
movsl
and
inc
loop,pn
mov
pop
rcr
lret
pop
cmp
cmp
sbb
xchg
jb
pop
mov
int
push
adc
adc
sahf
and
pop
jecxz
pop
pop
push
cli
or
or
out
hlt
add
xor
pop
data16
mov
push
das
mov
test
jbe
adc
cmpsl
push
lock
or
pop
sub
pop
mov
aas
test
leave
cmp
pop
insl
adc
testb
test
enter
and
aas
hlt
jg
pop
push
scas
adc
mov
xor
push
cmp
sub
jmp
pop
cmp
mov
sbb
ffreep
pop
mov
test
pop
sub
enter
and
pop
test
xor
test
dec
cltd
in
jns
clc
push
jmp
jle
pop
std
or
insl
cmp
xchg
dec
dec
vaddpd
test
out
out
pop
mov
sbb
mov
add
jae
les
cmp
and
jg
pop
cmp
mov
loop
ljmp
jp
cmp
scas
inc
add
pop
test
jnp
xor
arpl
sub
imul
jnp
mov
pop
or
or
pop
adc
shl
xor
pop
mov
adc
mov
sbb
fmull
push
push
stos
popf
test
sub
pop
aam
or
pop
ret
dec
repz
aaa
jp
in
dec
pop
jne
xchg
jnp
loope
cmp
mov
les
pusha
or
sub
jl
aad
in
jnp
test
ret
imul
sbb
add
jmp
push
adc
sub
ja
cmp
sub
mov
nop
rcr
es
or
jo
dec
jne
shld
pop
or
inc
mov
dec
testl
ficompl
push
ret
sub
xor
rcrl
jge
shrl
idivl
inc
pop
add
sbb
mov
stos
lahf
ss
pop
or
fs
test
fisttps
cli
xor
stc
insl
js
clc
pop
push
fld
les
movsl
pop
jnp
in
xor
mov
das
icebp
pop
stos
adc
add
or
adc
pop
repz
or
pop
add
jbe
dec
in
call
xchg
icebp
lods
enter
mov
fidivrl
and
xor
cmp
les
orb
negl
pop
xor
sub
sbb
rolb
add
movsl
test
aad
sub
pop
enter
test
test
mov
lock
adc
icebp
jge
push
cmpsb
jg
mov
insb
mov
mov
or
mov
push
jbe
pop
adc
inc
jg
adc
fs
jl
jp
arpl
add
mov
xchg
or
sbb
dec
xchg
pop
out
pop
pop
sbb
sahf
cmp
aaa
mov
adc
shrb
pop
cmp
and
adc
das
pop
daa
xor
mov
add
in
or
in
mov
xor
xlat
pop
sarl
je
rcrb
addr16
addl
or
pusha
pop
sub
mov
stos
out
ret
popf
gs
pop
xadd
lock
hlt
jb
xor
push
xchg
push
leave
adc
imul
mov
or
das
mov
ljmp
out
bound
mov
dec
jmp
in
test
mov
mov
pop
inc
xchg
leave
mov
pop
and
lret
mov
loope
inc
pop
and
push
mov
adc
arpl
pop
and
push
adc
mov
inc
in
dec
ret
dec
sbb
fistpl
mov
shll
scas
shrl
push
jmp
mov
or
subl
iret
loopne
mov
sbb
push
pop
fsubrl
adc
push
mov
popa
push
pop
cmp
push
jnp
cmpsl
les
mov
and
pop
inc
cmp
je
cwtl
mov
dec
imul
mov
or
pop
cmp
test
jle
mov
mov
sbb
dec
aaa
or
add
mov
pop
or
sbb
pop
cmp
pop
xorl
pop
mov
lods
and
fnstsw
mov
xchg
dec
int3
push
loope
cmp
adc
sbb
sub
ret
pop
jg
xor
fwait
adc
rcr
add
out
pop
pop
popa
hlt
sub
nop
stc
rcll
in
add
fcmovbe
aas
mov
negb
push
adc
roll
lahf
das
pop
lret
into
or
notl
mov
push
leave
xchg
ret
adc
xor
cld
in
mov
jae
rcrl
xchg
cmpsb
lods
addr16
pop
inc
push
xor
in
push
adc
rorl
rcrl
mov
jb
pop
pop
add
out
or
xor
pop
pop
adc
push
xor
cmp
mov
pop
daa
dec
add
roll
fists
cld
pop
orl
cmp
pop
add
aam
fstps
cmp
push
dec
adc
sub
ss
pop
jnp
test
in
and
pop
xchg
push
subl
adc
data16
cwtl
stos
mulps
pop
xchg
jg
cmpsl
pop
xlat
sub
sub
xchg
arpl
xor
cmp
xor
pop
cmc
cs
ds
adcb
sub
mov
nop
in
das
or
jl
inc
les
jne
inc
or
sbb
fstps
or
xchg
test
pop
pop
subb
shlb
inc
iret
dec
fisttpll
in
ja
int
xlat
in
data16
adc
stc
adc
push
movsb
bound
mov
xor
cmp
sbb
push
cmp
incl
cmp
mov
pop
jecxz
lock
movd
sub
ds
sbb
add
pop
mov
sti
inc
pushw
dec
pop
mov
mov
lcall
lret
adc
jne
es
adc
mov
xor
mov
stos
push
jmp
es
and
sub
mov
or
inc
mov
shll
pop
dec
pop
sub
xchg
or
adc
iret
pop
xchg
outsl
fistl
inc
or
pop
dec
push
cmp
daa
je
jle
outsl
sbb
stc
andb
pop
icebp
aaa
dec
mov
adc
push
sub
pop
das
push
mov
lods
insb
cmp
push
stos
lds
test
cld
pop
movsb
mov
push
mov
test
outsb
stc
imul
push
mov
adc
call
dec
add
imul
in
in
out
pop
cltd
sahf
pusha
mov
or
push
xchg
inc
pop
push
xchg
addr16
cs
icebp
adc
or
shll
fisubl
sbb
mov
push
push
icebp
cmp
push
cmovb
mov
sub
sub
dec
jge
mov
ds
clc
adc
out
adc
push
in
in
ss
adc
push
inc
ljmp
enter
push
lret
in
jecxz
pop
cmovge
mov
std
or
push
pop
mov
dec
jmp
jo
pop
sbb
adc
mov
ds
xlat
adc
pop
push
fidivl
cmp
sub
mov
inc
xorl
push
and
shrl
inc
fsubs
jmp
pop
dec
or
jae
mov
and
arpl
xchg
jmp
push
adc
sarl
pusha
icebp
int3
das
pusha
pop
stc
inc
inc
adc
pop
mov
outsb
jge
pop
pop
mov
sub
aam
pop
mov
in
arpl
fbstp
adc
pop
adc
or
inc
pop
fimull
insb
sbb
adc
pop
ds
push
test
adc
mov
add
lret
out
inc
sub
pop
pop
icebp
test
sub
adc
movsb
pop
stos
cs
sbb
dec
sub
push
cmpl
loopne
jnp
pop
arpl
xchg
es
push
jbe
jae
cltd
push
ljmp
push
fbstp
dec
pop
adc
pop
pop
inc
push
jp
inc
cmp
add
add
cmp
ja
loopne
push
pop
test
aad
push
xchg
pop
scas
jns
dec
addps
inc
mov
add
ljmp
dec
mov
dec
inc
inc
xchg
lods
xlat
xchg
jns
adc
in
add
add
repz
int3
fsubrl
mov
xor
inc
rorl
mov
push
pop
or
dec
pop
jle
scas
jne
push
cmp
dec
push
and
cltd
sbb
inc
mov
pop
sub
sub
or
pop
cld
mov
jge
pop
and
inc
cmpsb
add
inc
sbbl
sub
xchg
pop
cli
cmpl
lds
pop
jne
cmc
add
add
push
jb
lods
pop
lods
idivl
out
push
sbb
mov
clc
or
rorl
shlb
enter
push
in
imul
fstpt
adc
repz
mov
ds
inc
dec
mov
mov
push
dec
out
into
jno
xchg
fsub
adc
pop
xchg
lret
mov
pop
decl
cmp
popf
ficompl
pop
fsubl
int3
pop
push
sub
xor
jne
out
jl
pop
cmp
fistps
loop
mov
adc
fcmove
mov
mov
adc
sub
test
jge
xor
mov
push
adcl
pop
jns
lret
push
cmp
push
inc
das
jbe
push
sbb
pop
pop
out
push
xchg
jmp
orb
leave
push
mov
jo
jne
es
pop
xor
dec
add
cld
xor
loope
rorl
lea
lds
scas
sbb
or
mov
pop
sub
jg
test
divb
stos
std
or
pop
push
or
inc
mov
push
lds
sbb
add
and
pop
icebp
adc
and
les
jns
push
es
cwtl
gs
pusha
jge
movsl
pop
loop
fdivrs
or
fstpl
data16
fnstsw
cs
jbe
imul
lods
push
sub
push
push
imul
dec
pop
ja
gs
xchg
and
insb
pop
notl
push
cs
cmp
stos
dec
gs
sub
mov
jnp
or
or
fldt
fstpl
aad
xchg
dec
push
inc
pop
out
inc
mov
adc
push
test
ret
out
xor
sbb
ljmp
or
inc
and
push
cmp
ret
and
pop
push
jbe
or
jmp
and
push
stos
adc
push
stc
fwait
aas
pop
enter
xor
pop
push
pop
adc
pop
mov
cmp
popf
fsubl
inc
dec
cld
negl
int3
incl
ror
xor
std
pop
call
lods
pop
jne
mov
mov
mov
addr16
stc
push
xchg
or
or
pop
or
push
daa
jg
cmp
dec
mov
pop
cmp
inc
mov
mov
arpl
xor
popa
negb
sti
andl
sub
adc
enter
mov
gs
cmpl
in
pop
mov
cmp
jecxz
imul
cmpl
fwait
pop
or
jmp
rclb
pop
lock
cmp
or
push
fsubs
cmp
push
mov
xorl
ljmpw
pop
dec
add
dec
jae
cmp
pop
ret
jno
xor
dec
add
enter
cmp
pop
cmc
add
ret
adc
popf
test
fimuls
pop
in
cmp
mov
inc
iret
stos
out
test
aad
adc
push
add
xor
ja
mov
out
leave
dec
sbb
pop
ss
pop
push
mov
mov
push
sti
sub
sbb
js
shll
mov
lds
bound
or
iret
daa
jne
xlat
add
inc
ret
and
aad
out
dec
test
jmp
shl
pop
out
push
sub
push
xor
pop
repz
test
ljmp
jo
and
shr
into
ficoml
inc
add
mov
push
pop
push
push
shlb
mov
ret
ja
pop
insb
rcll
mov
icebp
cmpsb
pop
adc
dec
jno
ss
imul
xlat
xor
sub
adc
daa
fildll
in
mov
sarl
and
push
jne
mov
jbe
mov
pop
pusha
cmp
dec
sub
fstpl
iret
inc
test
imul
idiv
loop
mov
jae
sub
and
lcall
add
push
adc
xchg
cmc
ficomps
arpl
cmp
xchg
or
xchg
push
pop
jecxz
lods
jns
leave
pop
jp
das
lds
addr16
pop
test
leave
or
xchg
out
call
mov
adc
es
pop
dec
out
mov
cld
or
and
incl
fildl
add
in
push
xlat
psllw
shll
movsl
ret
push
jns
roll
and
or
xor
ljmp
mov
mov
sub
loop
stc
outsl
scas
add
inc
pop
or
cltd
ret
inc
dec
push
cwtl
jne
cmpb
andl
push
sub
xchg
sbb
push
mov
pop
mov
test
add
inc
sbb
outsl
aam
pop
lods
pop
dec
pop
sub
add
add
adc
xchg
push
add
orb
pop
push
or
fcomps
mov
push
sti
insb
cmp
jle
push
mov
in
mov
ret
loopne
pop
adc
adc
clc
fnstcw
arpl
mov
cmpb
aaa
inc
jae
or
pop
inc
sbb
add
mov
testl
xor
add
or
cmp
rcrl
cmp
mov
shlb
xchg
andb
cld
cwtl
add
pop
or
push
stos
or
subl
lock
fistpll
addb
pop
cltd
inc
push
push
xor
jo
add
cmp
jg
in
sub
push
pop
mov
daa
add
pusha
std
pop
insl
xor
stos
or
pop
push
mov
int
mov
insb
push
mov
jge
cmpsb
push
adc
jmp
ret
mov
out
mov
rep
pop
mov
sub
cmp
test
pop
jmp
jae
pop
cmc
lahf
add
push
cli
add
inc
add
pop
lock
ja
cs
mov
int
fistl
sbb
mov
bound
sbb
jbe
pop
push
cmc
mov
xor
fldl
test
ljmp
pop
ds
scas
sub
or
and
xchg
sbb
call
inc
pop
popa
lahf
mov
xor
lret
sub
mov
push
addr16
mov
test
call
movsl
xor
sti
jl
and
sub
dec
xor
mov
sbb
push
push
sub
pop
fistps
mov
pop
pop
and
sarl
test
dec
push
add
adc
in
jge
in
fistpl
mov
xchg
cltd
es
lods
or
pop
xchg
mov
add
mov
sub
pop
cmp
push
lds
stos
cmpsb
cmp
mov
adc
sbb
or
pop
mov
jp
push
mov
sar
out
sub
outsl
adc
pop
xchg
jne
cmp
cmc
jnp
dec
jmp
std
fcoml
mov
sbb
pop
sbbb
push
or
or
xchg
out
jg
cltd
pop
sub
pop
add
or
pop
jmp
or
inc
sbb
jecxz
and
cmp
pop
sub
mov
mov
inc
pop
mov
dec
mov
dec
jmp
push
shl
rcrl
pop
sarb
sbb
pop
mov
and
insl
aas
jl
inc
pop
out
lret
movsl
fadd
dec
dec
jecxz
push
pop
out
insl
ss
out
mov
pop
cmp
in
or
lret
adc
pop
mov
fisttps
sbb
or
adc
leave
push
in
cwtl
sbb
pop
xor
clc
loopne
add
mov
enter
push
fisubs
pop
ret
cli
jno
pop
add
cld
or
jae
and
popa
inc
or
jle
dec
lea
jmp
sbb
jl
int3
mov
jnp
push
pop
test
push
add
pushf
jns
mov
ds
sub
pop
mov
sahf
or
cmc
cmp
gs
pop
das
js
fbstp
and
xchg
xchg
lret
daa
les
pop
inc
cmp
pop
mov
pusha
mov
test
cs
or
pop
loope
fcompl
arpl
sbb
dec
lcall
inc
push
ss
testb
or
pop
stos
add
stc
xor
dec
pop
push
adc
in
into
pop
lds
cmpsb
push
mull
dec
mov
fldt
sbb
xor
pop
mov
fiaddl
leave
lds
jp
sbb
add
xor
pop
clc
gs
inc
pop
lds
lcall
or
dec
pop
scas
aaa
jge
pop
cmpsb
lds
mov
xor
pop
and
ja
dec
and
stc
adc
sbb
out
divb
out
pop
imul
push
push
fstpt
mov
push
pop
push
jnp
movsl
push
adc
icebp
pop
pop
mov
aas
out
ret
xchg
stos
dec
pop
int3
pop
adc
mov
xor
sbb
xor
mov
cmp
or
pop
jae
inc
daa
inc
push
pop
gs
lds
push
frndint
shrl
fisubrl
test
insb
cmp
jle
pop
aad
pop
inc
in
push
cmp
cmp
push
pop
adc
add
adc
pop
xchg
dec
scas
insl
rcrl
mov
inc
sahf
and
push
loope
pop
jbe
xlat
lret
flds
dec
jecxz
cmp
pop
adc
adc
popl
xor
int
rcrl
cmp
inc
call
add
in
sub
mov
ljmp
sbb
pop
cmp
loop
sub
sbb
ja
mov
frstor
mov
xor
pop
adc
ss
sbb
fwait
sbb
pop
mov
lea
test
cmp
mov
data16
jbe
jmp
shrb
push
pop
out
sbb
xor
pop
pop
rol
imull
cwtl
pop
inc
push
add
mov
pop
gs
xor
and
popl
mov
push
push
cmp
pop
dec
sti
jae
ret
inc
xor
push
fcomps
cwtl
movsl
test
add
mov
pop
jge
lock
inc
add
sbb
rcll
push
stc
fidivl
or
dec
rcll
in
dec
inc
lret
fnstenv
jns
fdivs
inc
pop
stc
pop
sub
lahf
or
mov
sbb
gs
and
lret
clc
inc
xor
icebp
xchg
and
pop
pop
xchg
popf
mov
jge
inc
test
inc
and
cmc
adc
call
pop
jl
mov
or
jns
or
jno
fbld
mov
js
push
pusha
clc
jb
mov
add
test
add
pop
cmp
fmuls
add
lods
lods
stc
xchg
pop
mov
icebp
push
xor
insb
lahf
pop
into
add
sbb
xor
pop
mov
mov
test
pop
imul
shll
and
jns
sub
adc
push
pop
push
push
test
gs
adc
das
adc
jns
xor
insl
fdivrs
jmp
inc
dec
jo
out
cmp
addr16
shlb
adc
adc
sbb
mov
js
pop
inc
mov
loop
scas
xchg
pop
add
and
push
cmpsl
inc
dec
insl
push
jecxz
test
jae
xchg
push
js
sub
xchg
imul
pop
adc
aaa
sub
out
enter
inc
pop
adc
xor
pop
pop
xor
sub
jne
into
mov
addb
xor
dec
shl
dec
jne
mov
pop
and
call
jbe
movsl
pop
dec
add
or
xchg
add
daa
or
push
and
fs
xchg
loopne
pop
repnz
lds
pop
sub
orb
xchg
push
pop
das
rcll
xor
and
adc
rorl
adc
andb
add
popf
or
and
xchg
ljmp
sub
out
and
arpl
mov
jbe
sbb
and
or
or
pop
push
repz
es
push
mov
shlb
cmp
cs
icebp
pop
jmp
jle
cmp
cli
subl
pop
idivb
ljmp
xchg
into
lock
lea
adc
rcrl
pop
jg
push
pop
push
clc
dec
arpl
mov
add
bound
xor
imul
cltd
add
cmp
out
or
xor
mov
sbb
mov
cwtl
pop
addr16
pop
dec
jnp
sarl
in
cmpsl
mov
pop
lock
shll
or
sub
ds
in
mov
iret
or
inc
mov
ret
pop
cwtl
pop
push
push
pop
mov
sub
cmp
lcall
iret
jmp
loopne
jae
ljmp
cmp
imul
mov
mov
insl
ficoms
push
test
xchg
mov
push
enter
sarl
lret
adc
jmp
add
pop
test
adc
jnp
push
pop
arpl
add
ja
sbb
idivb
pop
pusha
mov
pop
push
arpl
xchg
mov
and
insb
orb
loopne
pop
test
pusha
pop
push
imul
cmp
or
adc
loope
jae
adc
jecxz
mov
mov
inc
pop
mov
loop
push
jmp
cmp
jmp
es
mov
or
pop
xchg
dec
push
inc
xor
jg
cmp
xchg
jmp
pop
jns
inc
test
loop
aad
mov
cltd
imul
or
push
and
ds
mov
push
fwait
insb
push
and
subl
and
mov
pop
mov
femms
jg
push
jge
and
pop
dec
mov
cli
inc
or
loopne
sbbl
xchg
into
bound
inc
cmp
xchg
cwtl
cli
adc
and
jmp
ljmp
movsb
jg
inc
pop
mov
push
inc
adc
pop
dec
cmc
xchg
jmp
pop
mov
ficomps
fnstenv
lods
mov
shr
inc
loope
push
lds
imul
push
js
test
mov
dec
and
pop
push
out
push
fidivl
dec
fsubrs
pop
sub
cli
inc
pop
jmp
mov
aam
push
cmp
int3
push
addl
ja
iret
pop
sub
popf
sub
call
jmp
pop
icebp
clc
pop
scas
inc
cmc
iret
mov
push
enter
mov
popa
andl
adc
das
pop
pop
jbe
dec
into
pop
arpl
or
mov
subl
pop
and
testl
pop
push
sbb
add
test
test
mov
pop
leave
scas
adc
push
pop
negl
cltd
sub
pop
movl
insl
or
les
sbb
jmp
pop
xchg
xchg
in
ror
pop
pop
pusha
leave
filds
mov
gs
mov
or
jmp
pop
testl
pop
xor
shlb
packuswb
push
in
dec
aas
leave
enter
sbb
fcom
pop
xor
cmp
mov
push
fldl2t
fdivs
jnp
xorb
mov
cltd
cmp
pop
ficompl
xor
jle
mov
call
iret
push
add
aaa
test
pop
lods
fidivrs
les
xor
adc
and
bound
dec
dec
test
js
inc
inc
xor
mov
std
adc
jb
popf
pop
xchg
imul
test
in
orl
cwtl
pop
mov
inc
mov
mov
leave
xor
lret
aam
jp
arpl
jle
repz
adc
lods
push
mov
sbbb
clc
xchg
push
repnz
insl
pop
jmp
icebp
cmp
or
stc
mov
mov
mov
inc
xchg
movsb
cmp
movsl
or
cli
cmpsb
pop
or
std
cmpsl
test
dec
aad
or
add
inc
mov
xchg
frstor
movsl
push
fcmovu
and
mov
or
adc
mov
adc
xchg
pop
mov
add
pop
jbe
pop
adc
mov
sbb
jb
adcb
adc
in
adc
dec
mov
inc
and
jmp
cmpsb
sub
shll
pop
rclb
mov
and
pop
enter
jecxz
orb
or
jmp
adc
adc
mov
cmp
dec
push
les
push
inc
outsb
imul
pusha
xor
js
mov
cmp
pop
sub
sub
loope
inc
pop
pop
push
cmp
pop
cmp
push
jno
pop
jmp
mov
je
sbb
pop
jo
adc
jno
jns
and
or
cltd
cmp
jo
dec
jno
fisubs
jns
sbb
pop
pop
add
aad
pop
mov
xlat
adc
dec
adc
pop
mov
test
pop
stc
sbb
enter
iret
cmpsl
je
sub
jle
enter
movsl
les
das
mov
je
mov
int3
roll
pop
les
xor
enter
pop
xchg
cli
pop
lods
aaa
push
cld
pop
mov
dec
in
movsl
add
imul
and
shl
jg
mov
adc
mov
enter
mov
pop
xchg
cmp
dec
pop
xor
sbb
inc
mov
cld
pop
jbe
ljmp
aaa
imul
fldenv
movsb
sub
test
mov
push
pop
mov
fcoms
push
lahf
push
xchg
push
or
fistpl
push
pop
jl
and
into
pop
aas
mov
mov
mov
cli
xor
pop
inc
int3
sahf
xchg
sarl
pop
orl
imul
out
inc
mov
or
inc
popa
dec
loop
aaa
xchg
movsl
out
push
in
jnp
leave
sub
inc
daa
sahf
lds
dec
xchg
cmp
adc
sbb
pop
mov
add
pop
ljmp
push
rcrl
xchg
cmp
sub
dec
pop
aas
jmp
test
mov
jg
mov
pop
ret
rolb
push
lcall
jb
mov
add
ljmp
or
adc
fstpl
push
and
mov
dec
mov
enter
pop
das
xchg
stc
pop
pop
add
mov
shrb
mov
xlat
mov
lahf
out
addr16
dec
sar
or
xorb
in
das
inc
int3
push
jbe
std
push
stc
insb
ja
pop
out
add
inc
add
rorb
pop
ret
cmpsb
mov
fcompl
xlat
mov
cmpsb
pop
dec
test
mov
cmp
sub
xchg
jo
jp
sbb
pushf
outsb
pop
push
les
xchg
cwtl
push
dec
repz
stos
push
or
es
stc
cwtl
cmpsl
ficompl
imul
in
or
sbb
mov
push
int3
enter
xchg
aaa
add
pop
inc
or
fnstenv
push
pop
mov
addr16
lret
dec
fldenv
lods
mov
int3
and
arpl
pop
mov
mov
pop
data16
idiv
andb
bound
sbb
xor
popf
fldenv
fidivl
jmp
push
rclb
mov
psllw
push
cmc
adc
or
loope
xor
push
pop
in
call
dec
dec
pop
pop
jns
inc
mov
outsl
stc
xchg
pop
and
arpl
fxch
jmp
and
aas
data16
inc
inc
and
push
push
leave
pavgw
sub
pop
xorb
pop
pop
push
arpl
adc
add
fistl
imul
jmp
es
add
mov
sbb
in
ss
sub
push
pop
loopne
push
push
mov
add
lret
cld
xlat
pop
in
adc
dec
add
mov
dec
dec
cmp
scas
push
int
fsubr
lea
pop
push
lcall
pop
sarl
mov
add
adc
push
or
int
dec
mov
inc
mov
lahf
cmp
mov
pop
push
test
or
popa
cli
inc
pop
pop
lret
je
lds
pop
imul
pop
dec
aam
in
daa
or
jns
loop
pop
aaa
fldcw
or
push
cmp
insl
add
pop
or
inc
mov
pop
pop
lcall
in
pop
xor
orb
ja
or
popa
pop
mov
insb
adc
lds
fmuls
push
add
adc
xchg
pop
or
in
pop
mov
ficompl
sub
addr16
jp,pn
jbe
imul
jns
cmp
mov
sbb
out
jae
pop
pusha
ret
mov
mov
ret
pop
adc
das
fwait
icebp
fldcw
js
and
or
fidivrl
stc
and
cmpsl
pop
xchg
mov
sub
pop
sahf
shr
push
jecxz
pop
pop
adc
sbb
loopne
push
xor
add
fnstcw
sbb
dec
dec
push
sbb
adc
repz
ja
add
outsl
push
repnz
imul
jmp
cmp
ljmp
je
mulb
cs
sub
aaa
rcrl
pusha
mov
scas
cwtl
jno
pop
popl
push
les
xor
push
jmp
xchg
pop
and
iret
out
inc
mov
jl
loop
fidivrs
jb
inc
mov
jle
in
in
cmc
jae
cmp
pop
jne
adc
stos
xor
ljmp
je
mov
jmp
adc
push
stc
mov
pop
mov
out
push
lret
sbb
adc
pop
aad
movsb
fimull
and
imul
mov
shlb
inc
push
and
sbb
cmp
adc
pop
jg
movsl
or
inc
mov
xchg
fiaddl
cld
mov
and
push
into
fisubrl
es
jnp
sbb
jmp
jno
pop
dec
cs
lret
stos
ds
push
adc
jbe
jae
loop
pop
test
das
sbb
push
adc
and
push
mov
pop
cmc
andl
pop
jae
popf
outsl
daa
adc
push
dec
xor
or
pop
jo
jno
loope
mov
pop
pop
lods
mov
pop
mov
pop
out
ja
rcr
gs
repnz
pusha
jbe
mov
mov
daa
in
xor
pop
hlt
or
js
push
pop
push
adc
data16
test
dec
add
or
testb
and
xor
pop
lret
stc
push
orl
lcall
push
push
and
push
and
push
lret
xchg
sub
mov
jg
mov
adc
mov
ds
cs
mov
push
mov
int3
or
adc
jbe
daa
stc
ret
add
push
jmp
sbb
pop
lret
ljmp
ret
sub
pop
shrl
andb
inc
jg
das
pop
shll
push
mov
add
pop
fadd
jecxz
push
mov
aaa
push
sti
int
in
pop
jbe
and
add
mov
adc
clc
xchg
decl
jmp
sbb
xlat
pop
jmp
or
pusha
gs
clc
adc
inc
outsl
cltd
jmp
fnstcw
mov
dec
xor
push
pushf
jae
rcrb
and
add
sub
in
loopne
xchg
xlat
test
sbb
dec
js
dec
sbb
gs
jns
xor
inc
inc
or
or
les
cmovb
jae
inc
jo
jge
inc
or
pop
or
sub
mov
int3
dec
adc
adc
aad
popa
int
test
xor
dec
pop
jbe
pop
xchg
lods
shlb
mov
mov
or
inc
lds
mov
inc
jp
mov
fmuls
daa
test
jae
mov
popa
mov
sub
push
imul
jg
pop
enter
mov
test
mov
pop
or
ret
mov
mov
insb
loope
sbb
cmp
mov
or
inc
mov
adc
pop
mov
adc
jmp
inc
push
push
push
out
mov
cmp
lcall
jge
pop
mov
push
adc
push
inc
xor
push
mov
inc
pop
stos
jnp
jl
daa
jge
pop
mov
test
pop
sti
ss
stos
add
inc
sub
es
test
inc
repz
outsl
and
jns
pop
xor
pop
adc
pop
sbb
or
mov
in
mov
pop
cmp
jl
clc
rcrl
pop
enter
jg
jecxz
pop
adc
jb
push
add
add
filds
push
dec
popa
cmp
aas
jge
push
lock
pop
adc
adc
jp
xchg
fwait
xchg
pop
into
mov
mov
ja
adc
lea
rorb
jno
mov
lods
cli
and
and
fldl2t
test
popf
iret
stc
js
mov
fcompl
mov
jle
ja
out
inc
cmc
and
lds
pop
cmc
lcall
arpl
inc
sbb
cltd
adcl
out
xlat
xchg
adc
ja
and
cmpsb
pop
sub
out
mov
sti
sbb
mov
push
pop
adc
inc
jmp
push
rcll
cltd
pop
xchg
and
subb
dec
adc
adc
sub
jp
or
rcrl
int3
pop
adc
das
test
jl
pop
mov
add
and
out
adc
adc
mov
es
inc
addb
jecxz
outsl
cwtl
jmp
push
mov
test
ret
add
adc
loope
lods
sub
repz
fmuls
and
mov
sbb
fbld
or
jns
in
and
xor
mov
mov
cmp
out
sub
xor
push
sbb
pop
inc
jo
jmp
and
cmpl
push
xor
pop
test
stc
rcll
je
in
mov
xchg
jno
xchg
outsl
loop
xchg
cmp
outsl
ja
pop
or
imul
repz
aas
mov
int
roll
cs
movl
adc
cwtl
jbe
mov
dec
push
outsb
inc
sbb
stos
loope
movsl
jmp
push
int
push
pop
mov
inc
jmp
add
dec
sbb
pushf
push
iret
push
pop
fimull
das
jp
push
dec
mov
sbb
dec
lret
pop
mov
das
cltd
call
loopne
and
jecxz
cs
sbb
dec
imul
stos
sub
pop
sbb
jmp
fs
stc
insl
inc
es
sub
outsb
loopne
cmpsb
jmp
or
jae
mov
mov
and
fildl
push
dec
dec
in
stc
mov
sbb
jge
pop
dec
adc
jmp
jbe
scas
xchg
add
mov
in
jae
and
lret
xor
and
jnp
ficoml
adc
sub
or
cwtl
pop
pop
test
pop
mov
push
hlt
pop
loop
push
in
jb
ds
jne
and
lret
enter
push
xchg
sbbb
cmp
and
adc
mov
lcall
inc
inc
lods
xchg
xchg
dec
pop
jp
pop
cwtl
cmp
mov
cmpl
lods
cmc
push
stc
mov
fs
stos
push
xchg
pop
call
mov
pusha
pop
cli
xchg
pop
nop
imul
cmp
xchg
push
mov
cmp
sbb
mov
cltd
fwait
xor
jmp
arpl
jns
xor
sbb
ret
add
pop
stos
mov
mov
sti
dec
out
fs
jg
lret
sub
fcoml
or
es
je
push
outsl
push
dec
xchg
xor
inc
or
cwtl
push
pop
mov
mov
in
aas
subl
dec
fbld
mov
ljmp
pop
inc
test
add
push
push
mov
fisttpll
sub
or
cmp
xor
cltd
cmp
jecxz
push
inc
and
lea
addl
inc
push
cmp
pop
pusha
jl
mov
xor
imul
cmpl
movhlps
inc
pop
dec
xlat
jne
outsb
adc
dec
inc
dec
xchg
and
pop
pop
xor
inc
dec
std
push
rolb
jbe
popa
xchg
mov
icebp
fdivl
pop
outsl
popf
dec
rorb
xchg
cwtl
cmp
xor
es
add
mov
pop
mov
sbb
faddl
clc
fistpl
test
dec
insb
pop
shll
push
rorl
ret
std
inc
push
or
inc
in
pop
dec
jge
sahf
pop
adc
inc
lds
and
push
ss
test
sbb
adc
into
jmp
mov
sti
pop
cmpb
jg
jbe
sahf
es
mov
mov
fwait
ja
cwtl
pop
ljmp
test
call
push
ss
mov
push
lock
stos
mov
pop
cmp
roll
mov
xor
rcll
imul
out
sbb
sub
xor
outsb
scas
jecxz
mov
push
pushl
fisttpl
pop
push
jo
in
mov
leave
pop
inc
mov
jle
enter
call
adc
das
cmc
dec
ret
push
fsts
fstps
sbbb
sbb
test
loope
stos
imul
sub
dec
pop
mov
pop
xor
movl
add
push
xchg
sub
or
push
pop
cs
add
lret
sbb
imul
sbbb
ja
sbb
pop
inc
xor
adc
mov
xchg
js
jecxz
push
and
adc
test
test
lcall
mov
imul
sub
add
popa
filds
sbb
pop
lods
pop
mov
or
in
imul
push
pop
adc
aaa
xlat
push
test
jecxz
cs
pop
xor
push
in
out
adc
cmp
mov
pop
pop
or
lods
pop
loop
jo
cmpsl
pop
mov
pop
enter
andl
mov
add
inc
ret
insl
aad
pop
outsl
and
sub
aas
imul
outsb
cmc
jns
pop
adc
jbe
cmp
jmp
ljmp
sub
aad
pop
xchg
in
cmpsl
ret
mov
jnp
subb
pop
ljmp
pop
in
in
jne
dec
sub
pop
xorb
sbb
push
sub
imul
xchg
fistl
xor
stc
add
or
push
mov
jg
cli
dec
pop
cmp
jecxz
fbld
jmp
inc
stc
ror
stos
arpl
mov
sub
and
dec
pop
push
and
in
dec
pop
clc
pop
inc
cmpsb
sahf
or
addb
pop
std
jg
and
inc
fcoms
pop
jae
popf
xor
pop
push
pop
and
pop
pop
mov
jmp
pop
add
jmp
add
cwtl
mul
lret
mov
pop
sbb
cld
dec
dec
lahf
sbb
or
dec
pop
les
adc
pusha
jecxz
insb
adc
mov
jne
cli
pop
les
sbb
sarb
lahf
icebp
xchg
push
jae
aas
pop
in
push
movsl
mov
ret
jo
pop
movsb
cmp
cli
xchg
and
pop
mov
fcoml
sub
push
cld
push
mov
stc
adc
andl
cmp
push
leave
pop
jne
test
imul
pop
push
ret
jbe
das
jo
xchg
pop
mov
jno
mov
pop
cli
adc
and
xchg
pop
add
shlb
inc
jae
mov
test
pop
fs
dec
sub
xchg
lock
push
push
loop
and
aad
out
ss
iret
xchg
rclb
cs
lock
je
mov
dec
repnz
outsl
fstps
mov
pop
and
mov
lods
fistpl
and
xor
pop
cs
mov
push
jbe
daa
in
addw
sub
test
in
adc
mov
and
sbb
pop
scas
pop
sti
mov
jb
jmp
rclb
js
cli
pop
inc
cmp
ds
cltd
lds
lret
scas
lcall
adc
out
inc
and
rorb
sbb
nop
test
adc
sbb
push
lods
jne
pop
ffreep
and
pop
cmp
ja
repz
push
shl
jno
sub
jne
ds
js
mov
cltd
mov
cs
pusha
les
sub
lret
push
cmp
dec
std
out
and
leave
xchg
cwtl
pop
add
jmp
inc
pop
add
adc
adc
push
xchg
cli
dec
push
data16
pop
andl
dec
inc
in
orb
inc
pop
sub
sub
test
push
pop
xor
in
jmp
and
add
leave
sarb
lock
xchg
mov
cmpsb
add
pop
inc
out
and
push
pop
mov
std
aas
movsl
mov
fs
add
and
dec
shr
dec
and
cmp
pop
out
xchg
insl
pushf
jl
dec
jnp
pop
mov
xchg
sahf
dec
les
jle
add
push
mov
pop
jl
dec
and
pop
pop
sahf
js
loop
inc
cmpl
add
push
push
imul
jmp
cmp
jg
pop
or
xchg
je
cmp
jne
sub
ja
aad
sub
and
rorl
pop
lods
mov
or
inc
inc
daa
mov
rorb
adc
movsl
jg
or
mov
jbe
cmp
push
mov
push
dec
xchg
inc
cmpsb
mov
mov
sbb
mov
in
adc
jns
add
push
cltd
movsb
pop
lret
mov
fwait
inc
icebp
add
add
pop
or
int3
cmp
sub
push
and
push
xor
inc
jp
pop
mov
mov
icebp
data16
mov
push
pusha
sub
pop
cmp
ja
pop
pop
jmp
aas
sbbl
mov
dec
push
test
pop
pop
in
dec
arpl
sbb
je
div
and
or
pop
mov
or
and
cmp
jg
jae
incb
pop
jne
or
stos
addr16
pop
in
icebp
cmp
mov
fisubl
cs
fwait
pop
test
mul
xchg
cmp
push
jge
rolb
and
fwait
pop
dec
outsl
mov
pop
ds
cmc
out
pop
movl
jmp
push
sbbl
pop
pop
xor
daa
idivb
jo
shrl
pop
leave
xchg
mov
pop
push
iret
mov
ret
lock
pushf
dec
mov
sbb
mov
sbbb
xor
adc
arpl
aaa
ret
icebp
lcall
push
xchg
cmc
push
and
cmp
inc
enter
loope
pop
repnz
dec
ja
or
jbe
adc
pop
push
push
or
pop
test
orl
jne
sub
jge
and
jnp
inc
adc
pop
jbe
ljmp
fldenv
lods
outsl
push
pop
scas
fadds
clc
rol
jmp
or
push
jg
rcrb
daa
pop
pop
rcll
pop
fwait
sbb
and
xchg
add
adc
loop
cmp
pop
push
push
push
in
sub
push
lret
fmul
pop
and
adc
mov
jge
sbb
andl
pop
mov
push
repnz
xchg
dec
out
inc
fidivl
in
mov
sbb
ljmp
mov
mov
pop
push
mov
fwait
push
stc
sti
jbe
jnp
arpl
sbb
xchg
dec
sahf
push
fs
jne
cmp
ja
pop
xchg
mov
sbb
mov
rclb
loope
add
out
sub
call
lcall
pop
cli
sbbb
ret
push
call
push
sbb
or
jns
pop
cld
mov
pusha
shl
pop
adc
mov
xchg
pop
inc
or
cmpsl
lcall
pop
pop
cmpsb
lret
push
push
and
cwtl
push
js
cmp
dec
dec
push
inc
lcall
mov
lcall
inc
shrb
data16
adc
inc
inc
cmp
or
inc
pop
leave
push
pop
fsubl
fidivl
pop
jno
mulb
mov
ljmp
push
dec
push
jno
xchg
fsubrs
dec
pop
mov
sub
test
outsb
mov
sbbl
or
xchg
adc
add
and
pop
xor
pop
push
stos
dec
iret
fnstenv
pop
push
jo
stc
and
inc
dec
frstor
or
xor
stc
push
data16
pop
sar
jmp
es
adc
or
insl
pop
ljmp
pop
mov
inc
xchg
clc
push
jnp
xor
lret
imul
xchg
inc
mov
inc
push
xlat
or
stos
sbb
js
and
clc
xor
fists
jne
mov
in
pop
adc
cmp
shr
dec
push
and
mov
add
pop
mul
push
outsw
sub
repnz
dec
repz
mov
out
xor
dec
push
in
pop
sbb
pop
mov
push
mov
pop
sahf
mov
ret
int3
mov
dec
pop
mov
pop
sbb
adc
sbb
clc
in
fcmovnb
jecxz
add
pop
in
scas
ret
pop
and
and
and
sbb
adc
fimull
pop
or
xor
add
cmp
add
sub
jge
pop
or
mov
shl
cltd
xchg
cli
inc
dec
dec
aaa
xchg
cmp
pushf
mov
mov
push
cmpl
jle
xor
pop
pop
push
ror
and
pop
dec
jp
daa
loopne
ret
mov
ds
subb
push
sbb
pop
inc
sub
xchg
leave
cld
xorb
jbe
xchg
xchg
pop
mov
adc
jbe
pop
push
daa
sub
sbb
lods
fdivs
or
mov
cmp
mov
jp
out
int3
decb
adc
lahf
fs
pop
and
jns
sub
mov
cmpb
inc
pop
addr16
mov
dec
sbb
add
loope
pop
out
xchg
ja
test
out
movsb
and
xchg
xor
test
pop
mov
pop
inc
jnp
xor
cmpsb
or
add
mov
pop
mov
cwtl
inc
or
inc
int3
jno
loop
jne
jmp
sti
pop
pusha
sub
adc
mov
jmp
int3
pop
test
out
add
rcll
cmp
cmp
sahf
pop
loopne
cmpsb
push
xchg
push
pop
inc
add
icebp
push
test
jp
xchg
pushf
cwtl
push
and
pop
dec
test
jae
pop
pop
pop
or
lock
mov
cmpsb
adc
nop
sub
jnp
idivb
jg
push
inc
lcall
cmpsb
dec
adc
mov
jle
xchg
jbe
imul
rcrb
sbb
nop
data16
int3
xchg
pop
fstl
movsb
jo
xor
xlat
mov
daa
pop
mov
cwtl
pop
jle
stos
ret
cs
adc
push
insl
pop
push
roll
pop
cmpl
and
aad
lea
pop
std
jb
mov
out
push
lds
fidivrs
in
jmp
push
cmp
add
cwtl
sti
jo
cltd
xor
jmp
in
xchg
or
sbbl
pop
or
arpl
imul
or
nop
cmp
adc
xor
pop
aad
dec
fcomip
insb
dec
sub
loope
adc
dec
shr
gs
clc
sbb
dec
repnz
iret
test
adc
cwtl
in
xchg
mov
mov
jbe
mov
call
adc
shll
jmp
push
pop
stos
scas
popa
add
push
pop
out
sub
into
mov
dec
pop
mov
push
sbb
fisttpl
xchg
mov
aad
lcall
jmp
inc
xor
xchg
mov
cld
cmp
cwtl
jne
dec
push
push
cmp
jmp
push
mov
pop
cmp
adc
movsl
mov
inc
cwtl
dec
pop
pop
test
sbb
lock
adc
testb
push
bound
pop
and
pop
daa
xchg
repz
cmc
pop
mov
mov
imul
push
cmc
dec
outsb
sub
push
dec
sbb
sbb
jbe
or
in
jecxz
pop
dec
dec
in
jae
jno
cwtl
pop
cltd
pop
or
loop
jmp
push
pop
pusha
pop
jae
push
fcmovb
push
icebp
pop
shll
insb
jb
cmp
fisttps
int
jnp
addps
sub
mov
pop
shll
adc
leave
add
addr16
and
ret
pop
bound
arpl
adc
push
adc
lock
xor
jg
pop
daa
mov
out
jb
das
popa
pop
inc
jns
push
jne
jl
movsb
inc
sbb
imul
push
dec
jae
add
cld
pop
add
pop
bound
adc
and
sbb
aas
pop
mov
pop
inc
movsb
push
mov
out
adc
pop
leave
paddw
addr16
cmpsl
and
flds
pop
dec
rclb
out
loope
test
imul
pop
shll
popf
adc
sub
std
add
cmp
in
sbb
xor
mov
lds
rolb
jae
sub
das
imul
mov
or
sbb
int
mov
pop
inc
in
pushf
loopne
pop
pop
sub
adc
ss
sub
stos
scas
jne
pop
sub
test
cmp
or
aas
pop
pop
pop
and
mov
pop
cmp
sub
arpl
dec
or
push
or
pop
adc
dec
mov
jne
or
cmp
dec
add
adc
clc
sub
pop
pop
cmp
xchg
xchg
int
pop
jmp
mov
cwtl
sti
lret
mov
push
dec
jns
xchg
push
in
cmp
test
pop
push
in
sub
adc
jo
ljmp
in
outsl
fsubl
sbb
in
mov
enter
xor
cwtl
jecxz
pop
shrb
or
imull
or
sub
inc
pop
loop
enter
jmp
movsl
lret
add
jns
push
sarl
es
mov
mov
stc
push
inc
mov
movsb
mov
adc
cmp
xorl
and
fistps
push
loope
pushf
sub
push
cmpsb
inc
xchg
xchg
pop
cmovl
movb
movsl
incl
pop
pop
das
cmpsb
adc
cmc
mov
jmp
loope
pop
pop
mov
imul
pop
fildl
insl
pop
pop
pushl
push
pop
adc
adc
pop
js
std
dec
inc
cltd
fwait
xchg
dec
fldenv
sub
xchg
adc
fsub
sbb
mov
mov
adc
pop
jne
sbb
dec
push
add
icebp
sarb
fadd
aam
cmp
or
in
pop
xchg
pop
or
arpl
clc
pop
add
sub
int3
mov
push
sbb
inc
fistpl
push
adc
xchg
mov
insb
fstpt
bound
ficomps
mov
in
pop
mov
or
lcall
and
adc
pop
dec
mov
and
lock
pop
pusha
inc
rep
in
je
hlt
push
js
gs
test
sub
or
jne
test
pop
lods
xor
pop
mov
sub
and
dec
pop
cmp
sub
jno
icebp
ret
jbe
push
sub
add
sub
sub
bound
add
push
adc
push
mov
ret
lahf
imul
cs
or
pop
fnstcw
addr16
mov
add
pusha
or
pop
push
aam
adc
and
push
enter
sbb
inc
adc
xchg
lret
nop
or
pop
pop
jno
call
pusha
sbbb
bound
xchg
inc
adc
cmc
or
out
push
sub
pop
arpl
push
movsb
test
or
clc
rcrb
leave
or
ret
pop
inc
push
and
xchg
or
ret
pop
adc
sbb
adc
pop
sbb
mov
pop
xor
pusha
sbb
ss
jae
pop
test
in
dec
push
orl
movsl
dec
add
cwtl
mov
mov
pop
cmp
loopne
in
inc
push
pop
out
mov
mov
pop
outsl
jg
mov
cwtl
pop
test
dec
icebp
jbe
aaa
pop
xchg
in
cmc
ret
fistps
pop
test
into
pop
add
or
lea
sbb
lcall
pop
es
dec
cmp
dec
test
sbb
stc
sub
and
inc
pop
push
sbb
pop
pop
test
fstpt
inc
mov
xchg
dec
stc
addl
in
mov
cli
fsub
inc
out
int3
mov
xor
fcoms
sub
pop
outsb
jge
fcomps
data16
push
sahf
jne
xchg
adc
xchg
push
adc
dec
pop
out
ret
push
jecxz
mov
or
adc
mov
pop
dec
sub
and
xchg
add
add
sbb
or
stc
cmpsl
adcl
sub
pop
mov
jmp
inc
dec
dec
lret
pop
cltd
mov
cmp
jne
fldcw
pop
or
pop
je
shrl
ss
xchg
iret
imul
mov
jp
pop
std
mov
adc
sbb
adc
ss
pop
iret
adc
pop
call
xchg
push
pop
ljmp
mov
shlb
mov
sbb
nopl
ds
adc
inc
push
sub
mov
ss
mov
push
pop
ret
bnd
cltd
or
pop
mov
dec
add
or
mov
or
cmp
shll
mov
sbb
jne
je
adcl
mov
stos
pop
mov
sub
xor
dec
dec
xchg
sub
test
jno
cmp
fisubrl
mov
inc
mov
test
in
cwtl
arpl
pop
cmp
pop
and
or
xchg
bound
imul
xchg
push
test
std
enter
adc
push
imul
repz
pop
xchg
cmpsb
lods
inc
mov
xchg
lods
dec
dec
inc
inc
and
test
inc
mov
add
pop
gs
mov
mov
fmull
xor
add
pop
push
fcoms
inc
pop
ret
aaa
add
sub
rorb
lea
jmp
inc
fnstsw
push
test
fcmovnu
lods
rorb
push
cmp
xor
push
popa
cmp
adc
bound
xor
mov
sbb
fdivr
adc
jo
adc
popa
cmp
cmp
pop
and
movsl
daa
out
fisubl
popa
or
inc
shl
cmp
pop
ret
jmp
fwait
adc
mov
out
outsb
pop
jg
in
pop
adc
pop
xor
repnz
pop
cmp
jno
jecxz
shlb
test
xor
pop
ja
or
xchg
mov
leave
sub
mov
loope
in
jnp
inc
sbb
and
outsb
jno
sti
mov
pop
imul
test
sbb
pop
cmp
mov
lea
inc
sub
pop
je
pop
insb
and
rcrb
loop
mov
pop
xchg
in
sbb
xchg
push
xlat
pop
dec
movsl
or
lret
std
jecxz
inc
pop
pop
shlb
and
sahf
push
cwtl
adc
ljmp
stc
icebp
mov
fcompl
sub
push
add
jmp
jae
or
loope
lcall
nop
dec
pop
jl
sub
loopne
imul
popa
adc
cltd
ficompl
sbb
add
cmpb
stc
mov
cmp
jo
cmp
pop
ss
jbe
mov
adc
inc
stos
pop
or
xlat
pop
mov
xchg
pop
out
sub
pop
mov
loop
hlt
and
jns
data16
push
add
sub
add
aam
xchg
and
fmuls
push
push
pop
cmp
insl
jns
adc
pop
dec
cld
stc
loop
call
int
lods
pop
popa
jecxz
pop
add
pop
xchg
xor
test
dec
mov
imul
push
jmp
xor
loopne
leave
pop
cmp
mov
mov
adc
rclb
pop
je
imul
mov
add
out
ret
test
mov
push
pop
mov
or
call
mov
subl
or
xor
aas
ss
js
pop
inc
push
test
and
add
ret
cwtl
pop
jle
push
xor
push
mov
pop
ficoms
dec
mov
sub
clc
fistps
sub
dec
sub
fld
sbb
pop
inc
in
pop
icebp
shll
adcl
js
mov
push
mov
in
pop
sbb
ret
mov
std
cmp
cli
mov
filds
lea
mov
push
stos
les
jp
inc
fidivl
es
pushf
xor
dec
arpl
dec
cmpsl
pop
andl
lret
dec
dec
push
xor
pop
fdivrs
stos
push
jmp
add
out
daa
adc
rcrl
mov
pop
add
jbe
das
adc
pop
je
inc
sub
fistpll
jg
pop
jne
test
fstpl
jo
and
jecxz
lock
mov
clc
fdivrs
std
sar
lds
sbb
hlt
pop
orl
sarl
cmpl
pop
cmp
push
test
pop
pop
jbe
and
pop
jecxz
int3
xor
in
fbstp
xor
loopne
in
jle
iret
scas
fcmovb
lcall
adc
mov
jmp
lea
push
aad
jo
push
ja
adc
cmp
pop
pop
out
sub
icebp
in
dec
stc
mov
sar
rorl
fldcw
adc
pop
fcmovb
fldt
stc
add
jmp
cmpb
fwait
add
jns
dec
xchg
orb
cmp
in
rcrb
mov
mov
and
sbb
inc
scas
push
mov
in
xor
pop
pop
jecxz
lcall
hlt
cmp
sbb
inc
lret
sub
mov
adcb
outsb
add
fldl
push
pop
int3
xchg
pop
aad
mov
cltd
add
pop
and
add
jg
sbb
daa
cmp
mov
inc
jno
pop
int
and
pop
jmp
jnp
dec
pop
ss
cwtl
scas
lret
cmp
jmp
test
push
pop
into
sub
aad
jg
ficoml
pop
mov
push
push
xor
js
stc
cmp
cwtl
jne
cmp
fcoms
jbe
and
inc
cmp
dec
pop
jnp
sbb
gs
pop
pop
cmp
sbb
add
mov
pop
les
mov
sub
pop
fs
pop
int
and
cltd
add
out
pop
lret
pop
xor
nop
pop
push
push
xchg
es
js
test
push
jmp
sarb
fsubl
aas
inc
push
cmp
mov
cmp
or
jp
daa
testl
add
pop
and
sbb
push
call
jbe
imul
dec
sbb
cs
cld
inc
sub
aas
mov
and
test
mov
iret
pop
pusha
jnp
mov
push
push
push
sbb
cmp
xchg
add
push
xchg
pop
push
and
in
lret
jp
call
mov
pop
push
mov
ljmp
xor
fisubrl
cmpsb
lret
pop
fadd
test
mov
jbe
pop
push
aam
add
in
pop
xchg
fstps
fsubr
cmpsb
fs
pusha
or
jno
pop
cmp
mov
cmc
pushf
jae
mov
xor
in
adc
out
push
js
imul
lahf
pop
jae
xorl
pop
mov
das
jmp
pop
cmpsl
xor
xchg
int
lds
in
xchg
pop
mov
cli
pop
xor
es
inc
or
addb
xor
pop
cmp
cwtl
pop
adc
not
xchg
push
idivl
lods
and
pop
stos
inc
xlat
lods
cs
xchg
pop
inc
je
repnz
cwtl
pop
mov
movl
pop
push
sbb
jecxz
pop
loope
inc
cmp
pop
jae
mov
push
jmp
or
add
mov
pushf
cmp
lcall
pop
lds
or
flds
repz
sub
pop
shll
jbe
mov
fsubr
pop
pop
jp
push
scas
push
xor
ljmp
pop
cmp
cmp
mov
mov
cmpsb
gs
pop
cwtl
xor
xchg
mov
addr16
daa
mov
out
pop
sbb
fwait
jecxz
sbb
in
pop
mov
repnz
lds
int3
test
jb
sub
jno
or
or
in
jecxz
hlt
cmc
pop
pop
pop
mov
test
and
push
jmp
inc
shll
int
push
mov
pop
xorl
dec
dec
mov
outsb
mov
int3
ror
and
in
mov
pop
fnstenv
cmp
sbb
xchg
stos
aas
push
bound
push
std
lret
mov
ret
adc
pop
mov
push
pop
or
jge
arpl
fists
push
sbb
je
in
icebp
xchg
pop
inc
inc
mov
test
pop
ja
push
add
dec
push
jbe
pop
mov
or
shl
sub
jb
ret
xor
cmp
inc
rcll
scas
and
pop
fisubl
in
pop
add
push
pop
jb
imul
or
inc
dec
push
dec
jecxz
idivl
pop
mov
mov
es
add
mov
and
insb
test
jo
xchg
pop
subb
arpl
xor
das
js
ljmp
es
add
xlat
mov
add
pop
mov
push
mov
mov
jmp
cmp
aaa
pop
mov
cmp
pop
stc
add
jo
bound
cli
mov
pop
dec
pop
xor
cmp
jns
pop
xchg
and
dec
or
cmpsb
pop
xchg
or
rcrl
popf
mov
pop
cmc
in
pop
sbb
mov
lods
sbbb
mov
push
push
jecxz
inc
in
mov
mov
push
sub
call
sbb
adc
rcrl
into
adc
and
jle
lahf
fyl2x
and
cmp
mov
adc
sub
test
aaa
cmp
cwtl
fsubrl
divb
inc
xor
pop
mov
push
popf
pop
mov
mov
sub
aaa
jno
pop
cli
jge
adc
imul
fs
push
rcrb
pop
xor
mov
test
iret
pop
xchg
jl
pop
mov
xchg
fstps
icebp
mov
xor
orl
and
xor
push
jmp
inc
fiaddl
push
push
sub
jmp
mov
mov
sbb
inc
fildll
ret
ss
pop
movb
or
repz
pop
pusha
jmp
or
pop
outsb
xlat
in
pop
fisttps
cwtl
lods
sbb
and
sbb
incb
mov
dec
les
lret
loopne
ljmp
sbb
cmp
dec
sbb
adc
loop
or
mov
mov
cli
jmp
cmp
out
mov
mov
pop
nop
or
dec
jl
fstps
scas
xchg
popf
xchg
push
mov
push
add
mov
ds
lret
pop
cmc
or
imul
mov
enter
sbb
aas
push
jns
dec
push
lcall
cld
dec
mov
adc
rcl
inc
xor
icebp
push
jmp
pop
out
rcpps
int
push
js
inc
push
pop
mov
popa
add
dec
out
in
pop
mov
dec
jg
cmp
push
pop
sub
lds
sub
loopne
mov
mov
jbe
inc
leave
dec
or
lcall
imul
xor
jle
int
sbb
cmp
rcl
test
out
shrl
mov
aaa
pop
push
push
adc
fidivs
lcall
fwait
cltd
cmp
daa
or
cs
inc
ljmp
sbb
popa
pop
jecxz
insl
add
test
mov
je
adc
sub
pop
ret
pop
push
jmp
ljmp
inc
test
lods
sub
sbb
mov
dec
test
push
or
adc
aad
mov
daa
js
cmp
imul
xlat
sbbl
stos
popl
pop
jmp
sub
add
pop
mov
cmp
shll
inc
ret
pop
jmp
adc
push
pop
sbb
aad
dec
pop
cwtl
popa
into
adc
jne
inc
mov
pop
stos
xor
ljmp
add
iret
dec
outsl
inc
and
rcrb
ljmp
inc
dec
xor
or
pop
aaa
add
sub
mov
jmp
lods
mov
arpl
xor
push
mov
pop
orb
mov
std
iret
inc
cltd
dec
add
mov
sbb
fistps
popf
xchg
loope
or
push
fs
mov
sub
lea
fstpl
sub
inc
push
cmp
loope
and
push
fwait
jne
pop
push
inc
fcompl
je
popa
test
pusha
add
pop
or
and
inc
out
in
push
jmp
adc
pop
mov
add
test
aam
stos
adc
sub
push
and
cmp
mov
cmp
test
pop
mov
fistpl
cmp
or
sub
repnz
jae
icebp
mov
popa
ljmp
cs
cld
mov
dec
cwtl
inc
push
orb
mov
lds
push
shlb
pop
or
jecxz
mov
cmpsb
das
lods
xor
sbb
or
fists
in
cmp
push
cld
mov
dec
xor
pop
mov
pusha
jbe
js
leave
inc
cmp
and
pop
dec
repz
jmp
pop
xchg
pusha
jmp
int
mov
adc
jbe
cmpsl
jns
jmp
mulb
pop
into
sbb
sbb
inc
pop
daa
dec
movsb
jnp,pn
cwtl
xlat
jae
imul
mov
xchg
jbe
insl
inc
mov
xchg
in
or
mov
pop
inc
push
daa
xchg
mov
fidivs
mov
outsl
mov
fcomps
and
test
and
mov
mov
push
dec
ja
and
mov
or
xor
cmp
pop
xchg
cli
and
mov
mov
push
stc
cmp
imul
mov
mov
pop
mov
rcrb
das
push
mov
inc
xor
or
sub
rcll
sbbl
add
ret
xchg
stc
repz
sahf
fimull
pop
push
or
mov
shrb
ret
xchg
gs
icebp
cs
mov
jnp
inc
cmp
out
in
pop
mov
pusha
push
aad
push
cmp
lcall
leave
movd
fldenv
std
jne
mov
popf
ss
sbb
das
fsubrs
push
cmp
pop
pop
subl
jne
pop
cmpsb
push
cmc
push
jnp
into
pop
int
fdivrs
stc
sub
pop
xlat
inc
lret
loopne
not
in
jbe
pop
fisubrs
sub
inc
or
lret
xchg
push
dec
push
in
mov
push
sahf
pop
lret
xor
or
push
xorb
dec
cmp
es
pop
lahf
popf
sar
pop
stos
stc
scas
dec
jae
rclb
mov
push
xchg
cmc
int3
inc
lcall
pop
arpl
xor
push
pop
xlat
adc
and
cli
xchg
pop
aam
int3
adc
or
inc
pop
or
in
and
icebp
cmp
out
sahf
xchg
arpl
jne
xchg
jl
fsts
hlt
sahf
pop
push
mov
orb
pushf
cmpsl
dec
das
insb
movsl
lcall
pop
repz
mov
xor
add
cltd
xchg
xor
push
pop
mov
lret
sbb
adc
sbb
repnz
es
jbe
inc
data16
adc
or
mov
dec
pop
push
xchg
cmpsb
push
test
pop
push
jmp
xor
mov
aam
sbb
addr16
ljmp
gs
or
mov
and
das
inc
pop
pop
fisttpll
jmp
dec
sahf
xor
js
sbb
adc
sbb
addps
imul
pop
sub
push
pop
jp
or
scas
push
shl
in
cmp
cmp
pop
dec
sbb
jae
push
subl
push
add
pop
call
outsb
xchg
sbb
jle
bound
lods
pop
mov
fs
sub
dec
sahf
push
imul
shr
add
cmp
jmp
mov
out
xchg
mov
int
js
sbb
pop
and
lds
and
mov
cli
push
xor
mov
jae
dec
sbb
popa
pop
imul
push
and
fisubrs
push
mov
cmp
rcrl
pop
mov
and
pop
mov
adc
mov
sbb
fisubl
lds
mov
rcrl
leave
fildl
mov
lcall
push
add
mov
in
repnz
stc
pop
pop
push
xchg
insl
dec
mov
in
sbb
enter
pop
xchg
mov
pop
out
xchg
sub
stos
pop
jmp
pop
call
mov
in
pop
fimull
sahf
mov
sbb
ds
fwait
adc
out
aam
pop
mov
cmp
or
nop
stos
pop
inc
dec
dec
call
pop
jp
inc
fnstenv
outsb
pushf
pop
push
repz
nop
add
push
jge
lea
push
jae
adc
mov
fmuls
dec
lahf
dec
push
call
adc
jb
pop
shl
mov
imul
pop
js
insl
jne
test
sub
repnz
jb
and
push
orps
jbe
sub
lea
test
rcll
jp
cs
pop
ret
pop
lods
dec
mov
pop
xchg
adc
cmp
push
pop
ds
adc
fstl
xchg
jno
nop
or
iret
pop
cmpsb
imul
es
ja
mov
aam
rclb
in
mov
cmc
xchg
inc
cmp
dec
out
xor
pop
loope
mov
pop
iret
in
xor
sti
fdivrs
cmc
pop
imul
pop
sub
sbb
cmp
pusha
dec
jbe
addr16
xchg
push
pop
clc
and
jne
or
adc
fsubrp
cld
pop
mov
leave
je
or
pop
and
jmp
sbbl
inc
scas
pop
outsb
ds
push
xor
sub
mov
pop
loope
fwait
jo
sub
xor
jbe
js
sbb
stc
jp
imul
cmc
frstor
mov
cmp
pop
mov
cmp
clc
pop
arpl
pop
lds
xor
add
in
jb
lea
lods
sbb
push
das
push
mov
adc
push
fcompl
stos
jne
out
mov
in
mov
inc
test
lds
xor
sbb
mov
roll
and
xchg
daa
sub
gs
cmp
inc
sbb
pop
int3
out
cmp
fnstenv
mov
dec
clc
push
push
movsb
das
loop
push
pop
pop
lret
pop
xor
lcall
pop
jl
push
out
imul
lahf
cs
adc
nop
and
fnstcw
push
push
pop
andb
pop
in
inc
fisubs
cmp
jns
cmpsl
mov
or
sbb
cmp
pop
fs
mov
jecxz
pop
inc
das
pop
adc
add
mov
outsl
pop
jecxz
je
pop
push
decl
ljmp
push
addr16
ss
pop
dec
pop
stc
adc
push
mov
pop
adc
pop
push
rolb
mov
pop
pop
in
imul
sub
xchg
pop
lret
aam
stos
sub
jmp
sbb
jb
inc
popf
outsl
push
ficompl
rolb
pop
adc
xchg
adcb
inc
pop
fsubs
inc
jmp
cmp
xchg
mov
inc
sub
mov
aam
test
push
outsb
xor
fs
inc
add
movsb
pop
add
add
push
xor
pop
int3
dec
fisttpl
xor
adc
sarl
lcall
pop
imul
daa
xor
or
sbb
jae
fcom
sbb
pop
imul
xor
sbb
cmpsb
jp
push
fwait
clc
push
cmc
pop
das
push
pop
jg,pt
fwait
mov
in
inc
es
test
fs
fbld
sbb
imul
jns
int
xchg
jle
in
pop
nop
inc
jg
mov
add
pop
dec
jmp
fisubl
sub
dec
adc
pop
in
arpl
lret
sbb
repnz
dec
stos
xor
push
int3
js
sbb
out
ds
insb
cmpsb
jns
cwtl
mov
push
shr
faddp
pop
ja
inc
or
push
mov
cltd
aaa
popa
enter
sbbl
or
arpl
inc
pop
pushf
cltd
and
cmp
rol
add
cmp
jecxz
cltd
out
pop
popf
sbb
xchg
xlat
push
mov
insb
jmp
ds
pop
lods
pop
movsb
add
rcrb
pop
in
ljmp
dec
adc
aam
imul
nop
pushf
jbe
dec
pop
adc
bndldx
insl
cmp
push
mov
sub
rorb
jno
dec
cwtl
push
xchg
ja
popa
pop
sub
and
dec
ret
ljmp
cwtl
mov
or
xor
xlat
movsl
or
ret
push
adc
add
int3
pop
out
and
mov
inc
sbb
pop
daa
test
xchg
das
pop
dec
xlat
push
ljmp
mov
pop
imul
andl
fisubrs
cs
pop
add
add
pop
stc
pop
in
lcall
pushf
cs
aad
pop
jae
pop
stc
les
inc
int
negb
adc
dec
out
shlb
sub
loope
test
adc
roll
or
hlt
mov
leave
les
cmp
in
adc
pop
cmc
jg
arpl
sbb
sub
jo
imul
add
xor
push
push
jno
test
cmc
xchg
ljmp
push
fidivl
aaa
jmp
cmp
xchg
xchg
fdivs
xchg
stc
sub
loopne
dec
push
pop
scas
pop
adc
adc
arpl
or
cmp
pop
push
call
data16
loopne
xchg
pop
xchg
insb
pop
add
mov
mov
xchg
rcrb
xorl
or
rcrb
aas
adc
sbb
add
loope
mov
cmp
sbb
sbb
test
add
in
pop
outsl
mov
loope
pop
arpl
in
adc
sub
pop
xor
xchg
push
xlat
or
cwtl
pop
lret
arpl
inc
gs
pop
sbb
andl
adc
imul
or
mov
cmp
stos
nop
inc
sbb
pop
mov
jl
dec
dec
ja
shl
lods
adc
adc
push
dec
add
cs
dec
sub
adc
loopne
sbb
push
pop
pop
sarw
pusha
jge
pop
sbb
sbb
xchg
scas
jo
das
push
pop
cmp
pop
jmp
sbb
mov
mov
fadds
cwtl
mov
push
in
daa
pop
dec
or
ljmp
inc
push
mov
xor
push
cmp
and
add
sub
rorl
dec
add
push
lds
cwtl
mov
lcall
in
test
pop
adc
lea
pop
lret
push
js
inc
pop
pop
test
sbb
hlt
adc
mov
movb
cmpsb
pop
jae
cltd
jno
ds
push
mov
enter
inc
std
mov
scas
jmp
pop
flds
enter
jl
or
es
in
std
fmuls
inc
and
loope
sub
cwtl
fsubrl
pop
sub
test
lock
sbb
aaa
mov
out
pushf
jmp
dec
shr
nop
and
xchg
mov
mov
adc
push
sub
pop
mov
ret
push
cs
popf
fwait
cmp
sbb
add
call
pop
push
mov
fsubs
pop
ret
repnz
scas
in
dec
in
add
loope
cmp
jae
push
fwait
pop
arpl
sbb
push
sarb
xchg
and
jbe
pop
jmp
mov
in
push
pop
sahf
lds
rcll
xchg
ds
push
adc
or
or
pop
push
adc
ljmp
dec
ss
push
lcall
clc
daa
shll
pop
jecxz
pop
sbb
pop
lcall
icebp
pop
push
lret
std
pop
das
gs
iret
rclb
shr
daa
clc
push
push
pop
in
push
imul
push
frstor
pop
pop
out
adc
pop
enter
in
adc
jns
jecxz
jmp
xchg
rcrl
and
pop
orl
dec
sbb
dec
mov
lahf
add
js
jecxz
jle
aaa
adc
out
xchg
lods
pop
xchg
sub
and
adc
pop
push
es
push
push
insb
jmp
and
das
push
test
push
sub
add
leave
ss
popf
out
cmpsl
push
fs
dec
xor
punpckhbw
xchg
stos
pop
mov
pop
adc
data16
js
dec
inc
dec
jne
push
imul
sbb
mov
bound
aaa
sbb
nop
cli
lret
stc
add
pop
push
sbb
xchg
adc
and
dec
pop
stos
lea
gs
outsb
and
out
pop
cmp
ret
sbb
push
push
jge
ret
jmp
rolb
dec
jle
pop
and
dec
lods
setb
nop
dec
pop
and
jae
inc
insl
stos
jle
sbbb
cmpsb
les
ss
movsl
and
jmp
idivl
add
xchg
pop
imul
or
pop
and
test
ret
js
pop
in
dec
and
fildll
test
adcb
aas
add
loope
mov
fiadds
test
cmpb
pushf
pop
lds
jge
xchg
push
mov
sbb
push
out
pop
pop
cmp
pop
sbb
mov
and
xor
mov
stos
mov
andl
mov
cmp
xor
ja
pop
lret
inc
das
mov
pop
cmp
push
out
pop
arpl
cmp
in
or
adc
sub
stos
push
push
fcomps
loop
adc
xchg
and
stc
adc
pop
insl
ret
fsubs
jae
or
fdivs
xchg
and
mov
dec
bound
or
ss
mov
pop
sub
add
or
pop
pop
push
adc
pop
jmp
lea
cmp
ja
push
push
xchg
inc
pop
adc
mov
leave
cmp
push
in
in
pop
mov
and
or
mov
pop
and
imul
scas
test
test
cmpsl
movsb
sub
in
pop
sbbl
adc
jne
pop
or
sub
loopne
dec
fsubrs
ret
sahf
outsl
mov
lahf
pop
adc
jns
std
or
jne
jge
sub
adc
popf
xchg
in
or
gs
mov
or
and
jo
addr16
pop
je
sahf
jle
mov
movsl
popa
sbb
aaa
pop
jnp
sbb
stos
es
lret
adc
inc
pop
daa
jbe
xchg
push
pop
in
in
subl
dec
mov
xchg
pop
popf
push
xchg
sbb
test
pop
mov
pop
mov
push
sub
ficomps
daa
push
clc
inc
test
inc
sub
pop
adcb
or
xchg
gs
push
cmp
loopne
sub
stos
mov
pop
dec
adc
xor
sbb
lea
mov
pop
pop
out
mov
inc
mov
xchg
push
sub
orb
outsl
pop
mov
jl
ficompl
ret
add
inc
push
pop
loop
jae
xor
notb
outsl
jecxz
adc
stos
in
movsb
out
lcall
jle
das
push
pop
dec
xor
pop
mov
mov
xchg
mov
clc
mov
pop
xchg
mov
andl
and
pop
pop
xor
pop
push
jl
std
pop
push
in
adc
xorb
pop
adc
ss
out
mov
pop
lcall
test
bnd
jle
mov
inc
adc
push
aam
cli
insb
add
int3
std
lods
icebp
sbb
or
mov
sti
xchg
mov
push
cmp
pop
gs
sbb
mov
jns
sub
adcl
pop
jmp
pop
and
mov
orb
sahf
adc
xor
cli
push
push
fs
jns
lahf
inc
add
aad
dec
xchg
xlat
mov
cltd
mov
xor
pop
dec
mov
mov
pop
js
pop
les
fidivrs
pop
enter
out
shrl
fs
xchg
inc
repz
jl
pop
pop
mov
ficompl
cmp
daa
sahf
push
mov
mov
mov
sahf
aam
cmp
jecxz
popa
push
xor
cs
or
daa
aas
ljmp
jbe
cmp
dec
cli
in
push
repnz
xchg
pop
popa
jae
leave
rclb
dec
push
fucomip
out
push
push
xor
in
js
sub
pop
jbe
xor
adc
imul
push
ret
stc
hlt
push
in
or
out
or
jmp
pop
sub
push
fbld
pop
inc
mov
aad
lea
mov
pop
add
jne
sub
sbb
push
out
push
inc
adc
xor
pop
xchg
mov
add
fwait
inc
repnz
incb
insb
int
push
imul
or
pop
sbb
xchg
pop
enter
popl
pop
inc
testb
pop
out
or
mov
add
leave
push
jmp
xor
jno
cmp
lcall
push
jns
jo
add
pop
sub
mov
outsb
inc
fcmovnb
dec
mov
dec
pop
push
imul
pop
repz
pop
push
lods
mov
dec
push
in
adc
je
sbb
stos
sub
sub
ret
pop
fcmovbe
cmp
or
push
xlat
adc
push
sbbl
xchg
fdivr
xchg
pop
mov
mov
add
ficoms
insl
xchg
cmp
stos
aad
mov
pop
ljmp
sub
es
lock
aas
push
lahf
pop
jmp
cmp
adc
inc
imul
bound
sbb
add
fsubs
push
push
adc
dec
test
dec
enter
in
inc
adc
sub
xor
mov
push
fs
adc
sbb
stc
cmp
jae
or
or
and
xchg
cmp
pop
fadd
sbb
inc
xor
fldcw
sbb
out
pop
push
sbb
sub
decl
jmp
adc
insb
lret
into
stc
push
dec
push
sbb
pop
push
adc
pop
pop
push
dec
adc
lcall
cs
add
pop
pop
in
add
std
out
int3
dec
dec
mov
inc
mov
and
dec
xor
ficoml
or
into
jne
sbb
daa
mov
js
push
push
shr
adc
dec
fidivs
int3
hlt
cmp
inc
pop
popa
cli
xchg
sub
mov
lret
and
test
fldcw
ret
inc
shlb
mov
test
push
adc
mov
repz
pop
es
out
sub
mov
add
cmp
rorl
push
add
dec
aas
cmp
mov
insb
hlt
imul
sti
pop
push
xlat
fdivs
pop
push
pop
add
bound
roll
mov
cmp
jmp
fstps
cltd
jno
push
fimull
pop
fwait
lahf
pop
mov
pop
xchg
dec
xchg
popa
xchg
lock
and
adc
push
sub
and
push
add
hlt
sbb
and
dec
fidivrl
cwtl
pop
and
std
loop
incb
add
cmp
dec
sbb
sbb
push
lock
jbe
lcall
lods
xchg
pop
dec
push
and
jno
pop
in
mov
sahf
cmp
ja
dec
push
xor
enter
cli
clc
xor
sub
movl
push
lea
push
mov
inc
xor
pop
push
mov
pushf
pop
ficomps
jne
arpl
push
mov
repnz
jle
fidivl
inc
push
pusha
jge
mov
and
std
jne
aaa
or
jbe
pop
ljmp
imul
or
dec
icebp
xor
aaa
jnp
fwait
jecxz
sub
mov
mov
dec
sbb
mov
xor
fstl
rcrb
xchg
push
clc
adc
pop
ret
int
push
or
neg
outsl
xchg
pop
imul
pop
cmc
push
fiaddl
pop
pop
sub
jp
inc
dec
push
int
mov
fmuls
jecxz
jo
pop
in
pop
mov
dec
adc
pop
scas
mov
dec
add
js
add
pop
inc
xor
pop
dec
loopne
sbb
or
push
lcall
cs
dec
cmp
pop
pop
jp
out
and
jo
insl
and
jmp
cs
pusha
testb
xorb
pop
add
cmpsb
mov
xor
push
mov
nop
pop
dec
arpl
jnp
dec
push
dec
push
dec
pop
adc
lcall
jecxz
bound
sub
xor
sarb
scas
dec
push
sub
push
mov
xchg
mov
pushf
cmp
test
jp
pop
ret
jl
dec
loop
pop
push
cmp
xor
xchg
shrl
mov
pop
outsl
xor
bound
pop
pop
outsb
xchg
sbb
add
xchg
inc
push
popa
test
mov
pop
fcomps
pushf
pop
sub
je
adc
pop
jo
std
mov
out
lea
in
lahf
xor
sahf
hlt
inc
sub
and
sbb
jno
mov
test
adc
or
sbb
shll
jle
pop
lret
push
cmpb
pop
push
pop
fimuls
jp
sbbl
push
call
sbb
xchg
std
inc
gs
ds
xchg
int
vandpd
mov
inc
nop
lds
mov
pop
jno
cltd
jo
mov
outsl
fcmovnbe
fld
mov
dec
ja
push
push
mov
pop
lcall
jns
or
ds
dec
sbb
pop
jno
xchg
imul
pop
dec
test
cmp
cmp
push
jne
pusha
mov
scas
mov
push
or
icebp
hlt
out
inc
xorb
cli
push
movsl
push
movsl
pop
xor
orb
sbb
movsb
jno
adc
daa
fiaddl
jg
pop
test
test
ja
in
nop
jmp
mov
mov
ret
or
out
out
lahf
arpl
and
push
mov
cmc
mov
add
dec
div
lds
cmpl
pop
rcrb
cmp
sbb
lock
mov
mov
push
in
ss
mov
loopne
sbb
mov
pop
popa
scas
les
or
dec
push
sbb
in
pop
in
je
push
pop
or
out
sub
pop
push
push
loop
jecxz
test
ret
pop
jne
xor
jl
data16
cmp
jnp
addr16
fadds
xor
pop
rolb
loope
int
test
gs
mov
add
jecxz
mov
pop
sub
adc
lret
or
and
pop
xor
shll
ficoms
pop
jnp
sub
ljmp
mov
jmp
sbbl
lcall
push
pop
inc
adc
and
psrad
push
cmp
xor
jnp
pop
pop
dec
movsl
adc
jns
dec
jo
push
jae
ficompl
shlb
and
ljmp
mov
sbb
or
pop
adc
cmpsl
dec
pop
cwtl
ficoms
sub
dec
std
pop
adc
leave
inc
pop
sub
orb
push
das
and
ljmp
lds
or
and
mov
pop
push
popa
shll
pop
cmp
lods
inc
push
cmpsl
ja
addr16
sti
pop
cltd
lahf
dec
xor
pop
push
out
aaa
sub
pop
pop
add
adc
loopne
pusha
push
xchg
jno
mov
daa
xchg
andb
aas
xorl
stc
je
xchg
into
sbb
push
pop
push
add
adc
lret
sub
lds
pop
xchg
pop
pop
fbstp
lcall
and
icebp
inc
pop
mov
cli
gs
js
pop
call
pop
sub
addps
mov
out
push
or
jo
jle
lcall
add
icebp
push
push
mov
xlat
clc
and
pop
movsb
cmp
sub
push
adcb
test
push
xchg
push
push
call
pop
xchg
mov
insl
pop
pop
mov
sub
inc
push
push
mov
and
mov
sti
adc
fs
push
jp
cltd
bound
mov
xchg
push
and
push
xchg
rorb
add
pop
sbb
xor
rorb
imul
pop
mov
xor
stos
fcompl
pop
inc
xchg
inc
iret
mov
mov
pop
sub
loopne
je
sti
xor
jae
mov
xor
dec
dec
lahf
and
and
pop
jns
leave
inc
jne
sbb
push
in
jmp
pop
cmp
pusha
int
mov
inc
rolb
add
shlb
fwait
scas
add
cmp
lods
sbb
fsubs
test
cmp
adc
jbe
imul
cmp
xlat
scas
or
enter
cmp
sub
mov
xchg
cli
pop
sbb
or
test
sbbb
mov
hlt
stos
cmp
add
jle
sbb
cmp
testb
mov
or
push
ljmp
sub
mov
ret
pop
mov
cmpsl
testl
inc
cmpb
pop
enter
add
ltr
je
and
sti
shrl
mov
or
popl
lcall
pop
xchg
add
pop
ret
pop
and
into
push
imul
iret
sbb
adc
pop
sub
push
or
cs
mov
mov
pop
ljmp
adc
add
mov
xchg
js
dec
sti
lds
or
jne
xchg
call
add
jle
addr16
or
imul
jg
or
and
and
push
xchg
add
cmp
pop
test
int
xchg
or
inc
bound
out
cmp
dec
sbb
insb
js
inc
cmp
arpl
mov
inc
stc
ss
xor
sbb
aam
enter
imul
daa
mov
adc
pop
ret
add
mov
or
or
mov
mov
pop
rclb
mov
mov
pop
ja
xor
sub
and
pop
dec
in
enter
inc
je
gs
pop
cmp
and
pop
bound
sub
andb
ljmp
pop
cmp
sbb
mov
or
push
sub
pop
xor
xor
xchg
jbe
push
jecxz
imul
gs
and
pop
dec
adc
mov
sub
or
jne
mov
sbb
lock
das
pop
in
sub
mov
and
adc
lcall
ljmp
bound
xchg
ret
adc
and
jbe
cmp
sbb
fwait
and
push
dec
or
cmp
es
jae
fwait
cmp
xor
jmp
xor
pop
stos
lock
popa
and
fnstenv
pop
lods
stc
inc
adc
cmp
cmc
addr16
adc
sub
jbe
lcall
out
cmc
jb
add
push
push
adc
push
subb
test
shlb
lret
or
pop
mov
pop
cld
mov
sbb
iret
jno
inc
cwtl
dec
pop
cs
bound
mov
pop
fisubrl
ret
pop
add
pop
pop
je
test
or
and
leave
inc
adc
cs
sub
movsb
imull
push
lret
mov
inc
mov
iret
fcoms
mov
mov
sahf
pop
jle
xor
push
cmp
push
pop
pop
adc
jmp
stos
xchg
pop
jns
int3
incl
fisttpl
push
lahf
xchg
mov
mov
or
adc
push
mov
pop
fcoml
rcrb
mov
insb
sub
pop
mov
mov
mov
pop
mov
xor
jne
sbb
dec
jbe
insl
xchg
test
and
mov
sbb
dec
jle
incl
ds
pop
test
pop
inc
add
enter
in
pop
ret
cs
cmp
sub
pop
outsl
xor
sub
xchg
sbbb
aad
fwait
aaa
add
pop
push
or
push
pop
xor
sahf
gs
pop
xor
je
decl
jmp
rol
ret
pop
jne
insb
push
or
jnp
jbe
cwtl
fucom
inc
mov
mov
adc
xchg
in
pop
push
xchg
pop
sub
and
cld
test
pop
pop
mov
into
pop
clc
lahf
fwait
ror
mov
jecxz
inc
dec
pop
or
push
mov
xchg
pop
imul
push
popl
dec
mov
add
sub
std
ja
inc
sahf
and
loope
cmpsl
or
mov
mov
sbb
add
fcompl
mov
pop
cmp
flds
jnp
ret
stos
push
cmp
es
pop
sti
lods
leave
ret
jmp
lods
xchg
mov
pop
dec
push
xor
or
and
mov
ret
xlat
dec
jae
mov
lea
loopne
pop
xchg
andl
or
xor
add
mov
push
fdivrs
jle
pop
aad
test
lods
idivb
adc
pop
nop
sbb
outsb
push
pop
test
pop
out
or
cmp
repnz
aas
push
in
pop
cmpb
pop
out
int3
mov
xor
dec
repz
in
dec
repnz
push
mov
and
lret
aad
pop
dec
xlat
inc
push
jmp
push
push
pop
mov
jo
push
sub
repnz
inc
pop
cmp
movl
ret
jnp
jbe
inc
popf
push
pop
sub
cmp
xchg
addr16
addb
lahf
stc
dec
cmc
pop
out
jmp
mov
test
add
icebp
or
push
repz
mov
push
enter
push
into
xor
in
sbb
add
test
xor
cli
and
pop
jbe
int3
jae
or
in
ret
sti
enter
das
stc
cmc
movsl
push
inc
pop
imul
fimuls
cmp
outsl
jl
sti
pop
or
inc
scas
pop
pop
pop
mov
and
add
test
daa
iret
jnp
popa
pop
pop
inc
mov
dec
push
cmp
adc
inc
xlat
mulb
call
and
test
mov
pop
js
test
fscale
adc
mov
je
dec
dec
mov
fstps
push
pop
add
and
jb
mov
or
mov
aad
or
mov
stos
js
int
cwtl
popf
pop
sbb
add
test
mull
sbb
pop
push
jl
jmp
call
cs
dec
mov
push
dec
lds
pop
dec
imul
cmpsl
movsb
test
pop
sbb
push
lea
leave
outsb
pop
push
mov
push
xor
dec
push
out
bound
pop
je
sahf
jb
push
and
mov
add
lock
inc
xchg
sbb
inc
ret
imul
add
inc
xchg
adc
pop
or
add
rolb
mov
pop
int3
or
lcall
pop
cmp
mov
lcall
mov
shl
sbb
sbb
jne
lret
cmp
imul
mov
and
pop
ja
mov
dec
pop
push
xchg
and
or
inc
ljmp
testl
push
pop
add
shlb
or
icebp
dec
inc
pop
sub
sub
dec
mov
add
mov
add
pop
ss
dec
subl
push
sahf
aad
mov
pusha
mov
sbbb
insl
loop
cli
cmpsl
dec
pop
testl
dec
fcomps
sbb
mov
ds
mov
push
sarb
leave
cwtl
mov
pop
cld
psubusw
insb
cmpsb
mov
cmp
pop
clc
xor
adc
and
xchg
xchg
fcoms
xchg
adc
fmul
pop
addr16
stc
outsl
in
ja
mov
repnz
loope
pop
jnp
pop
mov
icebp
out
sbb
cmp
push
addr16
je
sub
add
adc
xor
add
ss
mov
dec
sub
cmp
adc
sbb
stc
sub
shll
inc
or
add
imul
push
sub
xchg
arpl
pop
pop
sub
mov
push
aad
xor
cmpsl
imul
mov
or
pop
push
pop
sbb
adc
push
add
ljmp
xor
and
xchg
push
stos
or
sbb
xor
pop
mov
adc
loopne
and
push
pop
insl
popf
jp
xchg
out
xor
pop
mov
push
and
xchg
popf
push
mov
xlat
outsb
lods
dec
sub
arpl
push
mov
dec
cltd
push
xor
enter
or
push
fsubl
mov
dec
pusha
test
cltd
cli
loope
push
xchg
sbb
adc
ret
pop
adc
sbb
addr16
inc
jmp
add
sbb
sub
pop
aad
xchg
sub
jo
add
lea
adc
and
adc
ss
ljmp
inc
mov
dec
loopnew
fildl
cmp
stc
sbb
add
pusha
mov
int
ljmp
test
or
cmp
xchg
ja
popa
add
xchg
push
andb
sbb
pop
lock
insb
hlt
out
pop
pop
pop
popf
jno
adcb
or
mov
imul
jno
adc
mov
aas
and
pop
xor
jne
cmpsl
cmp
mov
sahf
mov
cmp
enter
pop
mov
or
testl
adc
roll
adc
rcll
cmpsb
pop
jecxz
ss
mov
mov
mov
mov
jge
out
mov
dec
into
leave
sbb
push
incb
xchg
inc
arpl
das
pop
push
mov
rorb
pop
sub
sbb
ljmp
pop
lods
jecxz
push
mov
add
and
stos
mov
shr
mov
jae
call
loope
cwtl
pop
in
clc
cld
cmp
sub
fcomps
negb
dec
push
stos
lret
mov
cmpsb
jl
mov
aaa
push
or
sbb
xchg
insb
pop
jecxz
push
xchg
dec
sub
jl
mov
and
scas
pop
mov
movsb
xor
adc
push
xchg
push
repnz
cld
pop
shll
pop
lea
mov
cwtl
icebp
pop
pop
sbb
cmc
push
subb
push
lods
das
push
clc
ljmp
frstpm(287
ljmp
aas
or
cmp
cs
and
fsubr
stc
cmpsb
cmc
and
adc
push
jg
cmpb
dec
xor
pop
dec
xchg
jmp
loope
rcrl
xlat
repz
xchg
mov
jns
or
imul
mov
int
notb
cmp
push
test
pop
mov
orl
das
popa
mov
xchg
pop
pop
pop
mov
add
push
ljmp
jecxz
and
clc
mov
or
mov
stos
xchg
pop
aad
sbb
or
or
ljmp
jns
fisttpll
push
sub
test
fisubrl
xchg
mov
movsb
cmpsl
or
adcb
nop
ret
pop
stos
sti
cmp
mov
mov
popa
jmp
pop
inc
cmp
unpcklps
jg
sbb
pop
inc
aas
pop
aaa
notb
stos
dec
jp
rolb
sub
inc
loop
fucomp
dec
and
or
stos
jnp
cmp
inc
xchg
adc
mov
into
cmp
pop
popa
and
pop
xchg
cs
pop
sbb
incl
stc
or
jle
lcall
mov
pop
sub
push
imul
mov
sub
imul
fdivs
jecxz
inc
xchg
push
inc
inc
or
pop
jp
test
pop
xsaveopt
cmp
sarl
lock
loopne
call
and
push
mov
jns
push
mov
add
jmp
imul
fwait
and
loop
test
or
pop
jge
adc
xor
jl
mov
push
mov
pop
mov
leave
pop
push
add
and
fists
ficompl
cltd
pop
pop
lods
fiaddl
or
pop
pop
xor
xchg
sub
adc
pop
xor
or
cmp
xchg
je
into
fcoms
cld
lds
loopne
inc
jb
shll
pop
notl
and
pop
jns
mov
and
and
xor
test
and
push
or
mov
pop
repz
pop
jl
push
pop
mov
pop
push
pop
loop
aam
ja
int
push
sbb
pop
or
and
mov
pop
dec
repnz
adc
pop
push
sub
out
bound
rcrb
jecxz
sbb
negl
xor
or
rcrl
or
or
das
xchg
fs
sbb
inc
add
mov
mov
dec
ret
push
sub
test
jbe
push
sbb
jle
cwtl
xchg
das
cmc
add
or
mov
or
add
mov
pop
xor
inc
mov
cmpl
mov
in
sbb
xor
std
cmp
sbb
jle
movsl
pop
incl
popw
and
and
adc
adc
in
push
pop
adc
stc
pop
pop
aad
das
cltd
fcoms
fistl
test
push
fs
fcoms
and
je
adc
xchg
outsl
fwait
jae
lock
xchg
push
in
dec
mov
sbb
pop
inc
mov
inc
ficompl
and
insb
or
add
add
adc
test
dec
cmp
insl
sbb
fwait
mov
cmc
pop
jmp
xchg
adc
fnstcw
rolb
mov
mov
jnp
add
push
jecxz
jb
pop
sbb
add
xchg
mov
rcrb
icebp
clc
cs
test
cmp
sti
pop
dec
test
cmp
ss
cmp
jl
or
ds
adc
inc
inc
pop
ljmp
cs
adc
mov
inc
pop
cmc
dec
cmp
imul
push
adc
inc
daa
bound
cmpsb
adc
inc
pushf
pop
sub
inc
add
or
pop
cmp
in
dec
mov
movsl
mov
mov
mov
jle
dec
push
jnp
leave
idivl
and
jbe
mov
push
push
pop
sti
mov
je
fldl
dec
lods
fmuls
jp
ss
arpl
xchg
test
cltd
sbb
pop
js
movsl
sbb
jne
imul
xchg
jg
dec
adc
dec
cmp
sub
enter
and
faddl
cwtl
enter
ljmp
jmp
inc
or
ljmp
sbb
sub
mov
int
arpl
add
mov
loope
sub
adc
les
sbb
call
addr16
and
imul
mov
out
inc
aam
add
sub
dec
subl
and
add
js
shlb
pop
add
pop
addl
sub
xchg
stc
dec
test
mov
data16
repz
shrl
dec
sub
sub
cmp
sbb
lock
or
aad
pop
icebp
xor
into
adc
inc
or
int3
lds
out
repnz
pop
fcmovb
jg
dec
push
maxps
or
jnp
cmp
dec
es
mov
fidivl
sub
in
dec
sbb
test
jmp
pop
inc
add
push
dec
push
cmp
mov
push
inc
pop
ja,pn
jmp
js
cwtl
pop
mov
pop
xchg
push
jns
push
sub
sbb
sub
jne
add
sub
in
ficompl
mov
or
jbe
cmp
pop
sub
push
push
rcrl
push
pop
cmp
sub
daa
adc
js
pop
idiv
lcall
sbb
gs
xchg
pop
cmpsb
pusha
lcall
or
pop
mov
add
adc
pop
push
addl
shll
adc
mov
cmp
imul
inc
or
push
adc
es
lea
int3
leave
fisubrl
pop
aam
pop
test
jae
mov
add
pop
stos
enter
xchg
clc
xor
inc
mov
lods
add
push
mov
stos
enter
or
sub
je
pop
int3
push
sti
lret
cmpsb
pop
cld
daa
sbb
cmp
je
pop
adc
mov
mov
cltd
xlat
pop
mov
push
ds
inc
sti
dec
int3
rcll
repz
insb
adc
shll
adc
or
daa
cmp
or
shlb
inc
dec
inc
jecxz
sbb
jmp
pop
scas
insb
mov
or
outsl
repnz
call
mov
test
dec
clc
mov
sub
pop
push
xchg
insl
push
and
mov
mov
adc
pop
lds
and
push
fidivrl
inc
les
add
mov
add
loope
and
push
pop
and
mov
stos
pop
mov
adc
sbb
hlt
adc
inc
movsb
loope
and
push
das
lcall
js
push
adc
xlat
pop
stos
outsb
aam
sbb
push
mov
pop
and
imul
cs
inc
push
push
jmp
jle
dec
xor
adc
fsubr
push
pop
and
push
push
fwait
mov
fcmovbe
xchg
dec
rcrb
xor
push
or
cmp
clc
test
outsb
out
cmp
pop
movsb
pop
cmp
push
addr16
add
lds
push
mov
in
inc
dec
push
sbb
dec
cmpsb
stc
cmp
test
int3
pop
enter
xacquire
stc
jne
push
or
jmp
data16
pop
pop
xchg
adc
xchg
hlt
leave
das
ds
inc
test
pop
xchg
aam
in
push
inc
pop
mov
pop
insb
in
cs
cmc
adc
rolb
jne
notl
mov
jge
jbe
push
aaa
shrl
lock
dec
push
clc
arpl
and
jg
mov
dec
out
dec
sub
popa
push
pop
test
negl
adc
jmp
inc
pusha
pop
mov
pop
in
aas
push
sbb
push
pop
cld
mov
xchg
xchg
js
gs
sub
jmp
cs
lcall
push
dec
pop
movq
fstl
cld
xchg
shll
mov
dec
fmuls
je
popf
divl
or
loopne
inc
shl
ja
enter
mov
arpl
push
pop
ret
xchg
mov
bound
mov
popa
fadds
cmp
dec
cmp
fisttpl
shll
fwait
xchg
fsubs
jo
test
xor
repz
nop
sbb
cld
icebp
and
pop
mov
imul
nop
push
iret
pop
xlat
dec
icebp
cmp
adc
rcrl
jne
stos
mov
push
imul
pusha
mov
pop
mov
out
test
mov
pop
jmp
ror
out
sahf
fcoml
test
ret
test
cmpsb
push
add
stos
sbbl
and
lahf
xor
push
mov
xor
rclb
cmp
std
dec
dec
xchg
jne
pop
je
or
push
leave
stc
adc
sti
and
ljmp
js
sbb
pop
lods
test
pop
and
dec
int3
cltd
cmp
push
jo
xchg
pop
push
xor
xor
inc
jb
clc
mov
jge
ja
cltd
sub
pop
lret
jl
pop
rcl
adc
dec
mov
and
add
fsubr
inc
pop
adc
add
or
xor
jge
ficoml
pop
pop
outsb
adc
gs
out
mov
lods
ds
loope
iret
cmpsl
pop
cmp
dec
dec
push
ja
xchg
decb
xlat
pop
mov
dec
cli
pop
cmc
js
push
vcmppd
adc
sub
js
add
or
cld
pop
pop
fcompl
push
pop
arpl
jbe
sub
lea
jecxz
rolb
dec
imul
ds
lods
xchg
insb
dec
dec
jnp
xchg
fidivrl
pusha
dec
pop
jmp
jb
and
adc
sub
popf
pop
test
in
xchg
mov
or
pop
in
sti
inc
mov
pop
stos
and
mov
pop
cld
ljmp
mov
daa
movsl
push
mov
mov
xor
mov
fsubrl
dec
pop
leave
xchg
test
add
sub
cmc
jbe
dec
negb
sbb
dec
cmp
arpl
jnp
pusha
adc
out
or
lds
loopne
cmp
rorb
dec
xchg
in
or
movsb
mov
push
mov
inc
sub
lock
cmc
or
dec
mov
idivl
cmp
jne
add
imul
fs
mov
shr
mov
cld
cmp
pop
mov
mov
js
adc
scas
pop
inc
aad
mov
cmp
idiv
icebp
mov
loope
cmp
repnz
clc
jbe
add
adc
push
js
notb
xlat
add
sbb
out
pop
pop
repz
lret
cmpsl
dec
lea
cmc
std
sbb
test
jbe
xor
iret
pop
mov
xchg
std
pop
ss
dec
out
mov
ljmp
sub
pop
jbe
loopne
jl
mov
pop
jecxz
adc
out
jl
jb
clc
cmp
orb
push
lcall
fdivr
adc
sub
sbb
or
lcall
inc
mov
and
test
pop
out
push
mov
add
insl
outsb
mov
divb
jmp
xchg
push
pop
add
stos
xor
xor
jnp
mov
aam
sub
push
rorb
pop
insb
ljmp
lret
pop
pusha
or
dec
daa
fisttpl
cltd
xchg
cmp
pop
sub
mov
and
ja
mov
loop
pop
mov
pop
out
and
dec
jl
pop
xchg
pop
adc
dec
mov
inc
jns
sub
jnp
mov
sbb
das
aam
mov
push
stos
jg
add
aaa
push
sbb
push
pop
pop
mov
adc
add
adc
mov
jo
les
mov
xchg
mov
push
sbb
call
je
and
push
add
stos
push
test
adc
push
push
shlb
pop
sub
in
pop
xor
out
or
adc
xor
subb
or
mov
pop
pop
lds
mov
pop
popa
mov
jge
and
or
pop
push
xor
pop
xchg
pop
pop
adc
pusha
push
sbb
push
jmp
push
nop
lahf
cmp
lret
fcmovu
cmpsb
or
jecxz
mov
xor
inc
cmc
lahf
addr16
mov
fists
push
mov
imul
inc
pop
dec
fs
push
and
loop
cmp
enter
cmp
aas
outsb
jne
dec
jecxz
pop
test
pusha
mov
jns
pop
jg
jmp
xor
aad
xor
and
in
outsb
pop
push
fstpl
or
jp
mov
and
imulb
imul
jle
out
pop
imul
cmp
xchg
and
stc
in
and
insb
outsb
iret
imul
fstpl
jmp
inc
push
pop
sbb
adc
test
push
and
cmp
jne
add
inc
fisttpll
or
xor
jge
mov
inc
cmp
stc
pop
xor
pop
subb
adc
jbe
roll
xor
lds
rcrb
push
adc
sbb
add
sub
ret
test
add
pop
push
inc
xchg
lods
xchg
movsb
sub
xchg
insb
int3
or
data16
jg
jnp
pop
outsl
mov
jo
push
rolb
inc
xor
mov
jmp
pop
dec
in
ret
jbe
rcrl
and
scas
pop
cmp
stc
in
cmpsb
jl
mov
dec
dec
inc
cmp
sbb
mov
cmp
add
pop
inc
popf
stc
shlb
sti
test
pop
inc
mov
call
or
gs
dec
mov
adc
fistl
push
flds
leave
pop
adc
ss
or
cld
clc
fdivs
xor
add
xchg
mov
sub
mov
inc
sbb
imul
ret
lret
ficompl
sub
jne
ljmp
push
bound
pop
inc
xor
xor
pop
and
xorl
add
adc
mov
mov
cmp
shrl
sbb
push
daa
adc
sti
sbb
sub
popf
movsb
pop
and
int
imul
xor
popa
movsl
leave
and
sub
mov
jge
dec
test
fistpl
bound
aam
clc
js
pop
inc
xchg
inc
inc
rclb
pop
mov
jb
dec
xor
outsl
aam
and
jns
pop
lods
es
or
adc
out
push
adc
je
xchg
outsl
movsl
int
imul
inc
adc
aad
add
inc
cli
lds
fprem1
xlat
cmp
push
fwait
shlb
push
ret
push
pop
pop
ja
add
lret
inc
dec
jo
pushf
pop
add
rcll
in
pop
scas
ficoms
ja
ds
and
inc
add
rcrb
out
stc
pop
add
rcrl
imul
jns
pop
push
sbb
xchg
sbb
cmp
dec
adc
mov
fsubr
jg
push
mov
jl
inc
xchg
daa
pop
mov
sbb
add
mov
inc
pop
or
je
xchg
jmp
or
popf
ljmp
lds
test
dec
lcall
mov
pusha
inc
sbb
cli
push
adc
loope
ds
jbe
jb
insb
scas
fldlg2
push
jle
pop
and
ja
push
push
and
fistps
test
push
pop
cmp
xchg
sbb
pop
lods
or
dec
sub
adc
sbb
cli
out
int
cmp
cwtl
in
mov
dec
sub
xchg
pusha
cmp
jae
adc
dec
stc
repnz
cmc
or
imul
pop
int3
roll
movsl
es
cmp
jle
xchg
add
and
jecxz
jnp
dec
dec
or
sub
pop
dec
cmc
outsl
push
cmp
pop
xor
mov
sbb
jb
and
mov
int
imul
lock
sub
arpl
and
adc
cmp
nop
xor
cmp
mov
pop
mov
rcrl
lds
or
bound
imul
enter
jle
pop
jbe
or
xchg
xchg
stos
fdiv
cmpsl
pop
in
fwait
cmc
mov
stos
cld
sbb
mov
xor
ficompl
pop
cmc
les
pop
pop
in
jno
int3
or
inc
cmp
mov
sbb
xchg
fisubrl
cli
xchg
fstps
mov
jg
dec
ret
pop
fiadds
mov
mov
in
push
imul
outsl
dec
cmp
pop
push
sahf
mov
pop
es
sbb
mov
enter
ret
icebp
jnp
std
shlb
xor
mov
iret
pop
adc
pop
cli
fstps
push
pop
dec
mov
insl
add
sbb
int3
dec
cmp
in
inc
mov
ret
out
xchg
fstpl
stc
mov
jg
pop
inc
scas
scas
dec
sbb
ds
sbb
adc
std
shr
xchg
pop
imul
pop
and
mov
cmp
dec
sub
pop
ficoml
sarl
stos
or
jne
pop
mov
xchg
scas
popf
cltd
xchg
pop
movsl
push
in
or
and
pop
push
mov
dec
cli
stos
repz
push
xchg
arpl
fsubs
xchg
ja
jbe
hlt
dec
pop
add
or
cmc
outsb
insl
pop
cltd
mov
push
popf
mov
addr16
push
repz
pop
pop
and
xchg
les
push
pop
dec
imul
mov
push
adc
pop
cmp
leave
out
jne
arpl
fcomps
add
or
xchg
pusha
pop
mov
cltd
push
insl
push
push
xchg
add
cmp
jne
dec
cmp
cltd
fisubrs
pop
imul
inc
and
sub
loop
cmp
mov
lret
push
sbb
scas
fs
jns
shrb
xchg
inc
dec
jmp
outsb
repz
ds
mov
sti
leave
test
cld
xor
into
test
adc
sbb
mov
pop
xchg
shl
adc
into
mov
ret
in
push
adc
pop
xor
sbb
cli
ret
pop
mov
jl
cmp
adcb
fwait
mov
or
bound
test
push
push
and
push
jne
or
cmp
jns
or
xchg
pop
push
push
dec
fimull
stos
fadds
adc
in
nop
and
or
sbb
add
pop
lret
cli
jmp
pop
mov
mov
imul
insb
and
pop
aaa
stc
pop
mov
jb
cs
pop
inc
and
push
sub
div
pop
xchg
incl
pop
and
in
fsts
pop
pop
mov
cld
or
pop
xchg
mov
mov
or
xor
imul
repnz
jp
push
in
or
fsubs
mov
pop
or
and
pop
jecxz
and
xchg
lea
pop
inc
aaa
sub
and
mov
jb
daa
fnstenv
enter
sahf
adcb
dec
dec
ret
loopne
in
xor
pop
xor
inc
sub
push
jg
mov
xchg
test
bound
sbbb
js
xorl
ja
inc
jmp
sub
pop
dec
push
inc
sbb
sub
int3
enter
sub
mov
jmp
stos
push
les
inc
add
pop
push
mov
cmp
push
imull
jge
inc
ficompl
sub
pop
fwait
push
shl
imul
mov
mov
je
bound
push
sbb
jo
ja
pop
pop
test
add
cmc
lds
xchg
pop
sbb
roll
imul
adc
adc
pop
jmp
mov
imul
sub
add
in
push
repnz
pop
sbb
xchg
out
arpl
loope
and
cwtl
call
cli
push
pop
jmp
xchg
inc
cmp
cmp
lea
adcl
cs
jp
sbb
test
pop
inc
push
jg
xchg
pop
xchg
dec
pop
jns
mov
mov
xchg
mov
in
into
jg
inc
mov
test
mov
and
push
push
cs
push
stos
int
fcompl
in
pop
lea
inc
jmp
mov
cs
mov
and
pop
xor
pop
pop
pop
int
imul
aam
into
cmc
mov
sbb
and
lea
push
sbb
std
pop
adc
and
cmp
mov
gs
call
and
push
stos
shl
xchg
pop
push
mov
or
fbld
fisubs
pop
or
loop
clc
add
push
mov
jns
outsl
add
outsl
scas
pop
adc
test
rorb
imul
jo
arpl
out
pop
xor
cmp
sbb
test
adc
sbb
mov
mov
fisttps
mov
sub
shrb
push
ficoml
sbb
cmp
addr16
jmp
outsb
xor
or
pop
loopne
out
xchg
sbb
pop
stc
jne
fnstenv
cltd
gs
push
adc
xor
shll
pop
jge
call
stos
mov
sbb
dec
xchg
les
jae
sbb
xchg
or
outsl
push
pop
lods
pop
adc
sbb
mov
out
inc
dec
xor
adc
fildll
push
cli
inc
push
xchg
pop
mov
jmp
pop
andb
out
pop
shrb
lahf
insl
pop
pop
inc
mov
and
mov
pop
testl
pushf
leave
dec
or
icebp
inc
pop
cmpsb
arpl
leave
and
imul
sbb
imul
ja
pop
insl
xchg
enter
pop
mov
mov
pop
data16
cmp
inc
push
in
cmp
aad
xlat
lods
pop
lds
adc
pop
outsl
jl
mov
sbbl
dec
mov
xchg
or
testb
dec
jl
sub
insb
movsl
jb
pop
mov
and
rcrl
subb
sub
ja
mov
pop
xchg
dec
in
adc
push
pop
sub
mov
or
loop
aaa
jmp
dec
jmp
pop
push
push
mov
lcall
sub
mov
mov
push
filds
mov
pop
fucomi
cmpsb
xchg
scas
pop
jmp
fists
pop
es
lock
xchg
sub
inc
or
push
cmp
lods
dec
xor
mov
pop
cmc
or
dec
fidivl
pop
dec
ss
jge
insb
pop
and
mov
adc
mov
ljmp
aas
xchg
mov
cs
inc
notl
es
pop
mov
pop
cwtl
jmp
dec
scas
and
mov
shl
xchg
push
adc
xor
sarl
leave
add
adc
cmp
sub
push
push
push
ljmp
dec
loopne
or
xor
mov
addr16
mov
insl
sbb
sbb
mov
push
pop
je
lods
and
adc
pop
imul
inc
push
xor
add
dec
ficoml
add
movsb
xor
test
push
xchg
sahf
xchg
jmp
outsb
pop
aas
sub
jno
pop
jmp
es
lret
pop
pop
outsl
pop
or
ljmp
cwtl
sub
cmp
sarl
adc
movsb
nop
jmp
orl
dec
push
dec
ficomps
pop
or
cmp
push
adc
and
pop
es
fists
fs
int3
das
stos
pop
imul
ljmp
push
jg
cwtl
cmp
cmp
std
dec
imulb
aas
inc
and
inc
test
sbb
or
mov
adc
incl
nop
pop
es
add
mov
sub
push
inc
and
int
and
or
ja
adc
test
into
dec
inc
adc
cmc
fdivrp
pop
imul
inc
jbe
outsl
lock
mov
mov
arpl
xchg
int
mov
pop
pop
pminsw
or
push
pop
and
enter
imul
loop
mov
mov
mov
popf
fwait
inc
cmp
xchg
ds
sbb
pop
mov
adc
sti
rcrb
sbb
and
jne
and
ds
outsl
pop
mov
or
pusha
test
adc
dec
push
decb
mov
fstp
std
or
push
js
hlt
xchg
rcrb
xchg
or
jge
push
loop
inc
fidivrs
je
lcall
icebp
pop
stos
mov
jecxz
push
repz
xchg
mov
mov
push
jge
pop
jo
insl
xchg
pop
pop
pop
imul
roll
insb
lahf
incl
hlt
dec
mov
call
xchg
push
enter
push
push
incb
xor
icebp
push
or
xor
and
mov
mov
cmp
xor
ds
pop
outsb
jno
outsl
adc
in
xchg
testl
xlat
cmp
cmp
sbb
negl
and
dec
fistpll
test
adc
xor
xchg
and
push
jbe
pop
or
pop
imul
and
mov
leave
mov
push
lret
adc
sub
mov
pop
push
insb
jmp
pop
dec
jo
inc
shrb
pop
pop
movsl
xor
aam
leave
loopne
mov
sbb
scas
xchg
lahf
push
cmp
pop
into
add
ret
jbe
nop
sub
lea
jp
int
cmp
pop
add
pusha
mov
inc
jns
test
sub
pop
mov
cmp
mov
pop
push
push
or
dec
daa
pop
inc
pop
pop
in
and
pop
jle
clc
xchg
daa
cltd
sarb
es
ret
idivl
pop
xchg
dec
mov
fldpi
dec
jmp
sub
or
stc
pop
rorb
xor
push
mov
pusha
mov
xchg
dec
pop
dec
add
imul
test
inc
in
inc
mov
pop
mov
int3
mov
mov
pop
or
xchg
pop
imul
jle
test
jnp
mov
sub
mov
test
mov
sahf
aad
test
in
xor
cwtl
push
das
pop
in
nop
push
testb
test
pop
andb
push
pop
inc
jl
dec
push
mov
imul
pop
cmp
movsl
test
stos
pop
pop
add
scas
gs
je
push
mov
shlb
pop
sub
add
dec
int
mov
ret
jb
outsb
fcomps
cmp
pop
cmc
and
jnp
rcrb
cli
xchg
pusha
or
pop
int
cmc
xor
cmp
jge
mov
mov
pop
dec
jg
mov
dec
fisubl
jl
rolb
push
inc
mov
xchg
push
adc
cmp
outsl
push
sub
inc
ds
mov
in
test
mov
pop
cmpsl
pop
cmp
repnz
push
in
dec
push
pop
mov
inc
out
pop
loop
pushl
dec
lea
rolb
imul
pop
pop
jle
stc
cmp
dec
loope
mov
jb
ss
push
xor
enter
push
lds
sbb
push
fldt
arpl
pop
xlat
loop
xchg
pop
popa
in
sbb
les
sbb
pop
mov
inc
sbb
mov
xor
pusha
lea
xor
mov
cli
xor
push
pop
mov
mov
ret
and
pop
cmp
sbb
mov
dec
outsl
fimull
mov
fucomip
xor
or
bound
pop
cmp
mov
pop
push
xchg
mov
mov
pop
call
dec
xchg
adc
pop
cld
sahf
jecxz
jb
pop
icebp
and
sbb
lods
pop
cmp
push
mov
mov
push
adc
mov
mov
mov
dec
mov
repnz
cmp
jmp
xor
pop
lods
lods
les
sbb
cwtl
add
and
xor
mov
push
leave
ss
sbbl
mov
push
test
jbe
push
add
pop
arpl
sbbb
in
or
les
fwait
sub
rcrb
cli
movsl
inc
cmp
out
dec
test
out
push
call
xchg
cmp
mov
scas
xor
xchg
pop
stos
daa
dec
jp
push
mov
cmp
mov
add
sbb
imul
push
pusha
es
xor
cmp
leave
pop
daa
jne
ja
inc
xchg
mov
push
pop
jns
inc
jg
repnz
stc
xchg
mov
mov
jecxz
in
shll
leave
cmp
jne
xchg
mov
test
fbstp
imul
push
in
xchg
movsb
add
jge
adc
pop
orl
xchg
jno
lods
fldenv
jmp
sub
inc
cltd
test
test
xchg
stos
sub
mov
adc
call
pusha
pop
mov
and
pop
shrl
dec
xchg
adc
mov
daa
xchg
sbb
xchg
stc
pop
nop
jmp
icebp
pop
ss
or
pop
mov
pop
xchg
jecxz
inc
inc
pop
mov
pop
int3
imul
push
sbb
dec
sub
pop
adc
inc
testl
mov
cmp
or
push
or
xchg
pop
add
adc
scas
cmp
and
pop
sbb
sbb
xlat
xor
fcomps
adc
lods
daa
pusha
cmp
mov
lea
dec
dec
jns
mov
sub
test
push
sti
and
nop
cmp
jge
sbb
mov
movsl
sub
pop
cs
inc
ja
cmp
xor
push
popa
fstps
pop
orb
jle
aaa
mov
push
push
cmpsb
rcrb
stos
fisubl
inc
jmp
or
pop
fistpll
pop
lods
and
xchg
jns
pop
nop
dec
jns
pop
divb
sahf
rcrl
push
xor
inc
lods
pop
pop
mov
inc
cwtl
cmp
adc
rcrb
adc
leave
popa
dec
nop
sub
movsl
inc
std
pop
daa
mov
mov
adc
and
rcrl
push
xor
jns
jmp
popf
xchg
and
dec
or
aaa
xchg
or
int
les
daa
loope
jo
pop
xchg
or
test
adc
mov
inc
testl
pop
decl
sahf
ljmp
xchg
push
icebp
xchg
jmp
xchg
ffreep
or
call
fsincos
mov
or
jno
mov
imul
pop
mov
mov
adc
ret
in
inc
xor
add
adc
test
movsb
pusha
pop
dec
pop
cmp
mov
xchg
adc
lock
sbb
pop
sub
xor
jb
sar
xor
movsl
jno
sar
adc
pop
mov
add
inc
pop
xor
sbb
js
ja
mov
aam
fsts
rorl
pop
or
daa
xlat
pop
add
push
loope
mov
adcb
sub
mov
ja
lock
js
pop
imul
mov
dec
push
pop
mov
nop
leave
ret
adc
cmp
push
jns
jnp
int3
lahf
pop
mov
push
mov
add
mov
or
aad
insl
xchg
cmp
test
inc
pop
sbbl
jmp
jne
out
xorb
adc
push
or
pop
mov
cli
cmp
jns
and
das
jg
dec
call
mov
ret
push
mov
push
dec
pop
xlat
pop
jge
push
out
mov
test
push
in
mov
rcrb
mov
test
inc
js
sub
jns
repnz
dec
arpl
pop
test
das
inc
cmp
cmp
push
hlt
push
test
icebp
cmpsl
std
jns
jae
xchg
cmp
adc
out
pop
and
cs
filds
pop
test
clc
or
pop
jmp
and
push
add
fsts
jecxz
xchg
ja
inc
pusha
pop
rolb
repz
mov
insb
inc
stos
sbb
aam
jne
sub
btc
pop
repnz
adc
jno
push
mulb
adc
fcomps
push
pop
fxch
dec
insl
pop
pop
adc
or
inc
push
jne
into
mov
repnz
jno
pop
pop
add
push
pop
push
pop
cmpsl
jns
push
xlat
mov
push
dec
pop
pop
inc
imul
push
outsl
push
xchg
pop
cmc
adc
loop
sti
imul
xchg
xchg
and
imul
enter
sbb
std
jle,pn
mov
daa
cmp
xchg
sti
outsb
mov
dec
imul
xchg
xchg
add
pop
pop
jns
xor
fimull
loope
jmp
or
push
in
add
mov
xor
push
inc
jns
xchg
je
adc
clc
sahf
jbe
and
mov
imul
nop
sub
decl
andl
daa
mov
imul
lret
movsl
push
fwait
and
fisubl
dec
aam
jne
or
and
or
dec
add
daa
cmp
popa
sbb
aad
cs
gs
xor
in
fidivl
jecxz
fmull
jnp
scas
cltd
xchg
sbb
fnstsw
dec
fidivrl
test
aad
in
popf
pop
push
push
jbe
in
mov
adc
mov
pop
inc
push
loop
pop
stos
pushf
cli
or
mov
add
mov
push
mov
inc
inc
jne
inc
add
pop
out
sub
enter
inc
pop
aad
mov
fstpl
xor
movb
jae
jnp
daa
pop
les
loop
cld
inc
xor
in
jne
adc
push
pop
mov
and
repz
pop
pop
mov
pop
pop
pop
in
movups
pop
push
push
arpl
add
mov
inc
fiadds
addb
imul
and
pop
inc
xchg
mov
xchg
sbb
mov
pop
lcall
cmp
in
cmp
pop
data16
stos
test
sbbl
mov
rcrl
mov
test
xor
aas
sub
inc
inc
pop
es
repz
pop
sbb
ret
cmp
aas
popa
jnp
cli
mov
stos
sti
pop
mov
and
adc
rcll
jecxz
pop
adc
pop
stc
sbb
loope
cmp
inc
aam
or
push
add
jne,pn
cld
push
stos
imul
in
movsb
sbb
and
enter
inc
jl
pop
pop
pushf
or
dec
pop
dec
and
and
lea
pushf
adc
pop
xchg
or
int
lods
add
add
jo
sahf
or
push
pop
icebp
push
dec
and
push
pop
ret
sbb
or
sub
push
sbb
adc
jne
ficoml
adc
aas
jmp
sub
adcl
or
pop
es
rorl
mov
pop
bound
ds
fimull
roll
ds
pop
add
adc
xchg
inc
sub
pop
mov
pop
pop
sub
xor
mov
fistpl
sub
or
jo
inc
add
lcall
fstps
inc
bound
sub
call
int
pop
push
loopne
sub
and
mov
push
xchg
dec
inc
push
sbb
jle
shl
jecxz
ffree
pop
rolb
mov
in
pop
pop
addl
ficoml
jns
mov
push
and
cmc
ss
and
pop
repz
rcll
xor
sbb
jae
inc
xlat
and
stc
or
push
pop
cmc
xchg
clc
cmp
pop
inc
cmpsl
xor
xchg
mov
xor
xchg
daa
jmp
imul
lret
repz
repnz
pop
ds
or
arpl
mov
nop
and
jnp
push
cmp
mov
mov
push
sbbl
sub
xor
adc
movsb
mov
jmp
push
mov
sub
mov
lods
dec
ret
ds
insl
and
jnp
and
adc
xchg
pop
push
iret
inc
ljmp
aad
jmp
sarl
cmpsb
fistpl
mov
dec
mov
pop
pop
ss
mulb
imul
adc
jp
pop
dec
int
and
fs
sub
lds
pop
in
fistl
insl
mov
iret
pop
add
lods
cmpsb
aas
or
push
push
mov
test
xor
pop
mov
pop
or
pop
or
jns
mov
mov
jbe
and
cli
dec
jmp
addb
xchg
fdivs
xor
pop
pop
fisubs
push
lret
outsl
lods
sti
xchg
sbb
repnz
sbb
lock
cmpb
sub
add
push
sbb
adc
scas
and
fstps
mov
inc
mov
pop
pop
sub
jbe
push
jno
pop
push
nop
and
pop
adc
sub
shlb
clc
test
sub
and
inc
addr16
mov
fmuls
mov
insl
dec
mov
movb
test
push
int3
xchg
sbb
test
cwtl
popa
flds
push
ja
xor
subb
add
clc
pop
out
mov
nop
and
mov
inc
cmpsb
js
pop
xchg
mov
sbb
pop
imul
or
and
jecxz
andl
add
pop
jno
scas
test
and
inc
or
or
jge
mov
dec
pop
cmp
not
inc
icebp
dec
mov
leave
inc
jle
mov
inc
bound
insb
popf
fisubl
nop
mov
in
sbb
xor
inc
adc
in
add
xchg
in
pop
or
outsl
and
push
xor
out
dec
dec
inc
sbb
ret
xchg
jae
cwtl
xor
and
sti
lods
mov
push
mov
je
and
push
xor
pop
aad
xchg
stc
loop
aad
and
mov
pop
mov
dec
xchg
mov
or
pop
jno
movsl
cmp
pushf
adc
cli
push
stc
push
xor
cmp
cmc
push
sub
mov
roll
mov
push
pop
jb
and
fdivrl
mov
lods
ja
inc
pop
stos
and
inc
lcall
mov
adc
pop
xorl
pop
ss
adc
adc
pop
push
sti
or
sub
mov
mov
jae
pop
repz
inc
sbb
and
pop
inc
and
movsl
pop
idivb
cmp
inc
outsl
cmc
sbb
push
pop
sub
or
ljmp
pop
inc
inc
jl
pop
test
dec
dec
fwait
xchg
or
pop
mov
xchg
and
cmpsl
ret
inc
pop
cmp
sbb
fcoms
popa
sub
sbb
xorb
loope
ljmp
and
mov
call
and
js
mov
pop
movsb
or
sub
pushf
xor
cltd
inc
mov
mov
xor
gs
insb
and
mov
sbb
sub
inc
decb
and
push
pop
adc
mov
inc
js
pop
push
mov
mov
repz
pop
fs
sbb
test
mov
imul
push
adc
call
or
jno
inc
xchg
add
sbbl
mov
dec
daa
pop
or
xor
pop
fwait
and
sbb
in
cmp
lock
mov
lds
aad
scas
cmp
cmp
in
stc
mov
jmp
xchg
dec
nop
cli
leave
and
adc
mov
pop
fisttpl
pop
pop
pop
mov
stc
lcall
shr
shll
pushf
ds
pop
xor
popf
sbb
mov
xchg
scas
lret
add
add
or
stos
cmp
cmp
daa
lret
lret
scas
imul
in
xlat
orb
popl
arpl
inc
fwait
scas
jno
pop
pop
jmp
shl
repnz
outsl
mov
jo
ret
es
mov
std
xor
sbb
pop
dec
inc
pushf
dec
daa
sbb
leave
rorl
loope
mov
cltd
insb
inc
xor
adc
cwtl
lret
fistps
push
sub
pop
mov
loope
test
or
das
cld
pop
mov
test
sbb
adc
mov
andl
fimull
xchg
inc
pop
fimuls
lcall
inc
or
pop
sbb
push
and
stos
mov
aad
mov
xchg
inc
fnstsw
iret
adc
jle
push
sti
adc
andl
xchg
sbb
or
jbe
mov
sub
test
stc
adc
les
pop
rorl
pop
fcoml
mov
or
into
jae
stc
dec
int
dec
cmp
pop
add
lods
pusha
inc
stc
adc
mov
and
xchg
std
popa
add
jns
popf
sarl
cld
ret
popa
add
std
sbb
dec
and
mov
sub
add
push
mov
mov
and
lods
mov
push
iret
fsubl
jle
jmp
fsubp
and
mov
movb
les
cmp
ljmp
in
jecxz
dec
lcall
dec
xchg
dec
cmp
test
mov
push
out
dec
sub
sub
push
pop
cltd
or
ret
es
cltd
adc
out
lods
inc
sti
in
shrl
cmp
dec
or
mov
scas
inc
mov
sub
data16
arpl
push
jnp
or
cwtl
adc
jne
popa
sub
pop
jecxz
loop
fidivs
cld
fdiv
lds
sub
jmp
add
mov
pop
mov
sti
sub
cmp
sbb
jb
mov
ds
jmp
or
adc
mull
sub
repnz
subl
pop
jno
rcrl
dec
dec
fwait
mov
add
leave
cltd
add
pop
jo
adc
sub
fcomi
imul
inc
push
ljmp
xor
mov
and
jmp
gs
cmp
sbb
adc
ja
inc
jno
inc
pop
movsl
push
push
in
fnstsw
aam
jmp
imulb
leave
inc
in
sub
jns
mov
dec
or
mov
mov
leave
imul
xorl
lock
dec
sub
dec
ljmp
pop
lock
popa
mov
filds
dec
pop
sub
jecxz
adc
pop
dec
or
push
ret
cld
hlt
lea
jmp
pop
adc
jbe
mov
push
mov
lods
icebp
lods
fildll
inc
mov
js
dec
xchg
jecxz
push
loop
jp
xchg
push
leave
cmp
out
dec
dec
fcomps
arpl
jecxz
outsb
pop
adc
fildl
push
mov
mov
pop
inc
sub
adc
cmp
mov
pop
lret
loop
enter
pop
jecxz
sbbl
xchg
mov
push
xor
or
xchg
jno
ljmp
mov
or
sbb
cmovl
addb
gs
fiadds
jmp
adc
loop
sub
pop
daa
repz
adc
dec
sub
pandn
out
in
add
dec
pop
sbb
push
sbb
xor
pop
insl
mov
out
test
loope
cli
imul
push
sbb
test
shrb
jae
jbe
clc
or
jns
lds
mov
inc
jmp
dec
and
cmp
pushf
pop
test
ds
dec
shlb
jp
xor
sub
rol
push
add
pop
pop
or
adcb
push
push
xchg
popa
addr16
adc
ret
and
leave
loopne
fnstenv
or
imul
push
pusha
xchg
mull
mov
sbb
test
ret
adc
add
pop
inc
cmp
adc
add
pop
add
popa
or
inc
xor
iret
xchg
and
cmpb
inc
push
sbb
dec
insl
cmpl
arpl
inc
es
lret
and
fcomip
sbb
nop
sub
mov
pop
mov
pop
jmp
das
mov
cmp
cmp
pop
leave
sbb
mov
mov
out
jecxz
fwait
jo
jle
addr16
insl
cli
ljmp
or
in
and
lods
mov
mov
xchg
push
inc
mov
push
outsb
rorl
and
cltd
lds
push
icebp
sub
stc
ficoms
pop
fwait
and
pusha
jmp
push
cmp
sub
inc
jno
sbb
rcrl
xchg
cltd
movsl
enter
dec
inc
pop
out
enter
pop
xor
sub
mov
icebp
loope
pushf
std
xchg
mov
stc
push
sub
jae
adc
std
sub
test
inc
cmp
dec
cmp
mov
int
cmp
mov
and
pop
push
dec
sub
or
mov
dec
nop
push
cmpsb
pop
int3
pop
outsb
ljmp
roll
lret
push
fnsave
cltd
cmp
xor
and
pop
pop
inc
jo
cs
fwait
mov
arpl
adc
cmc
fnstenv
inc
icebp
mov
push
test
fimuls
inc
cmp
lods
mov
roll
es
dec
pop
inc
pop
mov
pop
test
and
cmp
aam
fwait
jecxz
test
cmp
push
add
xchg
mov
adc
or
and
xchg
adc
push
jb
mov
cmp
insb
js
jl
or
inc
enter
dec
and
and
ljmp
adc
lea
push
pop
jg
xor
cltd
out
sbb
mov
mov
pop
test
lds
pop
bound
mov
sbb
leave
test
loop
mov
or
mov
pop
pop
dec
pop
xchg
shr
pop
loope
xor
lret
jno
push
sub
adc
popa
add
fildl
jl
movsl
data16
mov
cmp
clc
inc
pop
scas
inc
pop
mov
nop
jns
pop
sub
andb
or
pop
or
inc
jno
or
ljmp
and
push
mov
stc
jp
dec
das
pop
cmp
cmpsb
and
adc
push
sbb
stc
mov
popa
mov
lret
push
inc
xchg
dec
xchg
xor
and
loope,pt
mov
fwait
loopne
push
sub
and
test
aad
lods
add
and
push
rolb
xor
jge
xchg
pop
xor
addb
shr
cltd
pop
and
insl
lret
sti
add
pop
es
cmp
push
xor
or
rcl
mov
add
jmp
xchg
imul
test
pop
xchg
into
dec
fsubr
pop
xchg
push
cmp
cmp
pop
mov
mov
push
rcl
pop
xlat
xor
mov
push
into
or
add
xchg
pop
sbb
test
pop
and
fcoml
mov
inc
sbb
add
and
out
adc
loop
dec
test
outsl
inc
pop
rcrl
push
pop
jno
enter
pop
sbb
and
movsl
pop
in
pop
or
iret
das
sar
inc
pop
jbe
or
push
or
mov
sti
xchg
lock
xchg
xchg
pop
mov
sbb
push
cld
mov
stc
and
sub
adc
mov
or
pusha
push
mov
adc
sbb
or
imul
pop
in
and
mov
xchg
push
ror
gs
xor
test
inc
js
sbb
sub
push
jnp
xchg
fsubs
and
daa
jp
inc
mov
icebp
fsts
dec
adc
mov
inc
pop
repz
mov
ljmp
rcrb
sbb
cmp
mov
dec
jecxz
mov
rcll
pop
ret
rep
ret
xor
mov
dec
or
cmp
lds
inc
test
insl
cmp
push
loop
ljmp
mov
cltd
dec
mov
cli
sub
or
add
pop
ja
and
mov
fistpl
int3
and
jmp
mov
cltd
xchg
repnz
jmp
loope
pop
mov
mov
pop
pop
or
jno
xchg
or
jecxz
push
shl
mov
pop
and
pop
inc
cmpsb
mov
inc
sbb
push
test
roll
das
inc
roll
aas
push
mov
in
and
dec
stos
in
adc
mov
dec
push
and
sbb
imul
or
pop
mov
rorb
stc
idivl
dec
xor
jns
aaa
andl
inc
or
filds
push
sahf
push
or
mov
xor
jns
inc
cmp
mov
sub
push
mov
ret
adc
scas
pop
vmovhpd
aam
inc
lock
pop
cmp
rcr
cltd
or
popa
adc
add
sub
lahf
mov
inc
jo
mov
cmpsl
sub
aad
dec
push
push
xchg
sub
arpl
fwait
int3
mov
ljmp
push
sti
gs
rorl
cltd
sahf
loope
inc
outsl
cltd
cmp
mov
mov
out
adc
fcomps
mov
ret
and
cmp
mov
push
dec
ds
lods
pop
xor
jecxz
push
jp
cmc
sbb
pop
add
cmp
sub
fsts
or
not
dec
loop
sbb
xor
pop
movsb
pop
fs
in
jp
lret
nop
push
lods
mov
xor
sbb
xchg
fsin
push
mov
jge
jb
adc
jnp
dec
cmp
dec
jno
pop
sahf
xor
sub
sti
xchg
dec
adc
fdivl
sbb
pop
orb
sti
sbbl
mov
stc
sbb
xchg
and
fildl
cmp
ja
xchg
pop
and
ss
mov
add
xor
test
adc
xchg
cmp
icebp
pop
mov
inc
call
and
adc
jno
pop
xlat
sub
mov
and
adc
xor
test
jne
sub
dec
cmp
cmp
adc
xor
adc
jl
mov
cltd
push
stc
icebp
lret
xchg
or
pop
sub
pop
flds
insl
mov
push
fdivs
inc
xor
clc
add
popa
sbb
das
loopne
pusha
dec
lret
mov
push
cmp
cmpsl
pop
stos
inc
bound
enter
sbb
sarl
jno
dec
ret
shll
mov
addr16
std
stos
sub
push
ret
fldcw
jo
ficompl
mov
in
pop
mov
sub
popa
sub
jns
cmp
lahf
ret
xor
pusha
pop
lea
shll
xor
sbb
lds
pop
xchg
inc
pop
xor
dec
xlat
jno
rcrb
jns
inc
and
ficoml
test
adc
icebp
inc
xchg
pop
adc
sbb
jnp
add
cmp
and
mov
cwtl
mov
lcall
imul
and
fidivrl
lds
jo
mov
icebp
das
int
jae
push
xor
inc
int
aaa
jno,pt
cltd
xchg
sub
pop
pop
pop
push
push
sbb
sub
jns
pop
shl
arpl
and
pop
int3
dec
xchg
and
shlb
mov
and
ficompl
addr16
mov
inc
fcompl
inc
aaa
shlb
test
sbb
push
imul
pop
fwait
icebp
adc
mov
adcl
clc
dec
ss
xchg
cmp
subl
xchg
pop
rcll
inc
ficoms
pop
ss
adc
outsl
lret
xor
mov
lret
fldenv
inc
push
fists
jl
stos
and
mov
mov
cld
adc
xchg
sbb
adc
pusha
dec
xorl
xor
cmp
sub
add
lret
movsb
stc
and
push
mov
lret
dec
bound
in
xor
sub
lret
mov
and
fdivrl
dec
push
adc
fildl
or
cmp
shlb
xchg
sbb
xor
sub
hlt
pop
jne
movsb
aaa
dec
pop
sbb
shrl
xor
dec
push
inc
adc
fmull
popa
xchg
sub
test
sbb
pop
or
mov
dec
sub
push
mov
and
ja
xor
or
hlt
dec
dec
mov
xor
loope
aam
pop
xor
sub
stos
xchg
inc
repz
xor
inc
cltd
iret
fisttpl
in
lds
xor
sarb
imul
aam
pop
sti
idiv
pop
loope
mov
pop
dec
fidivrl
test
sub
into
pop
notb
mov
das
data16
out
mov
xchg
and
enter
xchg
test
movsl
pop
pop
popf
popa
inc
std
loop
mov
xchg
push
and
and
xor
rclb
push
in
fsubrs
cmp
sahf
cmp
sbb
stos
ss
and
stos
dec
cmp
jmp
aas
pop
lods
mov
stos
mov
sub
insb
in
adc
rolb
xchg
testl
mov
movsb
sbb
mov
pop
push
imul
or
jae
xor
adc
pop
push
mov
test
mov
test
add
aaa
fldenv
or
sub
pop
mov
xor
jecxz
shrl
inc
test
out
adc
in
cmp
inc
and
pop
lock
nop
inc
pop
xchg
in
jno
inc
iret
xor
adc
adc
xor
sub
dec
pop
push
mov
or
std
ret
test
sbb
cltd
cmp
imul
rcll
pop
sbb
mov
adc
add
cli
xor
sbb
out
xchg
in
push
mov
lock
sub
lret
pop
and
dec
in
les
shlb
fwait
pop
andb
push
movq
icebp
lcall
leave
pop
test
push
add
xchg
push
pop
adc
and
stc
and
outsl
aad
push
mov
inc
jo
negl
ss
xchg
inc
pop
data16
or
add
in
and
dec
icebp
inc
arpl
lahf
push
jecxz
adc
jecxz
or
pop
inc
inc
fildl
push
jmp
jnp,pn
mov
dec
inc
aas
pop
push
xchg
and
rclb
je
mov
jmp
cli
enter
adc
mov
and
stos
jno
pop
xor
shll
mov
inc
cmp
rorb
cmp
notl
movb
dec
pop
loop
sub
pop
mov
out
jmp
mov
flds
adc
sub
nop
mov
xchg
and
stc
inc
mov
and
or
pop
movsb
mov
and
adc
leave
and
xchg
pop
test
hlt
dec
sbb
and
xor
pop
or
inc
es
lret
sub
jns
sub
pop
mov
lea
pop
das
jg
adc
dec
jae
sbb
sbb
jmp
mov
pop
or
flds
and
push
cld
pop
mov
inc
adc
cmp
andl
sbb
in
inc
push
mov
sbb
sbb
int
into
push
cwtl
sbb
loop
dec
mov
pop
inc
pop
pop
in
pop
sub
movsb
xlat
mov
sub
jnp
pop
es
and
pop
mov
ret
xor
mov
mov
adc
and
mov
xchg
jae
adc
dec
inc
mov
or
rcll
je
dec
fsubrs
jbe
sub
sbb
dec
mov
adc
mov
cmp
adc
push
in
mov
adc
das
pop
sub
push
ja
xchg
call
mov
aam
leave
inc
or
jg
or
mov
mov
push
mov
sbb
icebp
pop
adc
or
subb
jmp
pop
insb
inc
rorl
sub
jne
stc
pcmpgtw
push
fsubs
pop
lcall
cltd
cltd
cli
bound
adc
inc
adc
jg
cmc
enter
inc
push
adc
pop
push
negb
insl
vmovss
dec
or
arpl
fisubrs
lcall
lret
xchg
imul
mov
cmp
movsb
gs
sub
inc
nop
or
xor
sbb
pop
push
dec
mov
test
ljmp
leave
add
test
fstps
mov
sbb
pop
and
mov
jno
incl
xchg
mov
aad
arpl
xor
call
jbe
pop
or
leave
test
mov
xchg
js
int3
stos
pop
mov
inc
ja
sbbb
mov
je
push
inc
inc
cwtl
cmc
push
pop
adc
and
cli
cmp
xchg
sbbb
push
and
sub
inc
mov
jns
jl
sbb
xchg
lea
data16
cmp
movsb
push
ret
daa
pop
mov
in
xlat
and
sarb
rsm
imul
daa
pusha
inc
sbbb
pop
testl
push
fidivl
bound
push
sub
ds
cli
adc
test
lret
lea
pop
insl
push
inc
outsl
sbb
lea
roll
or
jmp
pop
data16
int
or
ficompl
clc
xchg
adc
mov
inc
jecxz
xchg
cld
lcall
push
adc
mov
xchg
or
lret
mov
adc
ss
push
and
pop
mov
mov
jmp
sbb
pop
stc
mov
les
out
cmp
cs
mov
sbb
leave
loope
jns
sub
pop
cs
mov
sub
dec
sarl
enter
inc
cmp
xor
in
rcrb
insl
adcb
pop
or
jns
mov
out
push
inc
mov
daa
mov
insb
cltd
popa
pop
ss
pop
mov
std
int
stos
pop
mov
lds
stc
mov
cmc
cld
xchg
pop
jecxz,pn
movsb
push
inc
or
mov
inc
pop
xchg
or
xor
test
xchg
cltd
xor
clc
sbb
push
push
adc
in
pop
icebp
adc
and
jmp
sub
add
jmp
sbb
stos
sti
cmp
leave
cmc
mov
add
inc
lcall
int3
push
cmpb
jp
cli
stos
pop
cmp
dec
lcall
lret
mov
fwait
stos
fstpt
jp
cli
leave
push
cmp
dec
aad
mov
dec
mov
cmpsb
xchg
mov
in
mov
aad
dec
test
pop
cltd
lods
mov
jp
mov
jnp
sbb
mov
dec
or
aad
ljmp
sbb
push
jl
lcall
stos
sbb
fs
xchg
subb
jae
dec
mov
adc
sahf
out
cmp
jns
jg
stos
sbb
fisubrl
mov
sub
inc
push
mov
addr16
sti
dec
sbb
mov
jp
jmp
or
xchg
cwtl
sti
dec
cwtl
sbb
fistpl
or
jno
movsl
push
jp
icebp
cli
sbb
sub
sahf
stos
xchg
fisubrl
scas
pop
out
inc
fs
pop
hlt
into
mov
cmpsb
enter
stos
out
lcall
mov
aaa
js
mov
int3
sbb
mov
lret
fisubrl
sbb
lret
jp
mov
std
or
sbb
addr16
fldt
jnp
mov
lret
jae
add
mov
mov
jmp
stos
imul
push
mov
dec
mov
sbb
sahf
dec
add
daa
mov
aas
mov
or
pop
in
push
cltd
lds
mov
push
sbb
lcall
ljmp
rol
sbb
mov
sub
stos
cmp
fistpl
or
orl
pop
fs
loopne
enter
pop
bndstx
inc
pushf
xchg
aam
mov
mov
jne
or
test
aas
xor
pop
push
leave
sbbl
pop
fdivr
xor
jmp
xor
jne
jnp
and
pop
and
pop
jo
call
pop
jmp
je
lcall
orb
or
inc
dec
lret
sbb
sbb
pop
pop
lret
mov
fdivl
mov
sbb
js
xchg
std
sbb
mov
pop
lods
mul
bound
sbb
pop
xor
lea
xor
xor
dec
xor
pop
js
mov
and
dec
insl
aad
dec
push
gs
jne
jp
and
jnp
imul
mov
addr16
push
mov
cmp
push
pop
push
int
inc
fs
xor
std
push
das
ljmp
mov
lret
sbb
adc
dec
ret
fldt
mov
movsb
mov
jecxz
mov
cmp
stos
mov
stos
dec
xchg
pop
sub
and
cmp
fbstp
xchg
jne
xchg
mov
mov
lret
sub
dec
subb
or
sbb
sub
fwait
xor
or
stos
sar
mov
jp
mov
enter
aad
fidivrl
stos
lret
mov
adc
leave
jecxz
dec
push
jbe
xchg
sub
pop
stos
jnp
into
sub
sahf
imul
push
and
or
lahf
nop
movsl
mov
mov
sub
sti
push
xchg
xchg
leave
push
stc
cmp
dec
adc
pop
sbb
pop
add
bound
lret
inc
sub
cmp
out
mov
pop
jmp
fidivrl
pop
test
mov
mov
fstpl
mov
fwait
sub
jae
fisubl
inc
xchg
xor
mov
xchg
fistpl
push
sub
jmp
pop
add
or
push
aad
ds
jge
and
bound
hlt
inc
aam
sbb
in
cmp
ljmp
pop
mov
xor
sbb
rcrb
mov
cs
daa
or
shll
jl
mov
test
inc
xlat
out
arpl
data16
arpl
rcl
mov
inc
fsubrs
or
repz
dec
dec
dec
xor
sub
xchg
pusha
dec
idivb
loopne
ljmp
negb
fnstenv
xchg
cltd
and
cmpl
mov
sbb
cwtl
fwait
mov
push
lcall
ljmp
xor
sti
mov
adc
cmp
sbb
aad
sub
into
int
stos
xchg
sahf
in
aas
xor
mov
stc
cmpsb
and
test
push
dec
orb
ficompl
and
sbb
mov
cmp
xchg
pop
cmp
stos
add
mov
es
push
adc
int
cmp
aad
cli
rolb
test
fisubrl
lret
in
lret
and
mov
jecxz
ss
pop
mov
ret
sti
cmp
stos
mov
addr16
cltd
lahf
dec
leave
sbb
lcall
ljmp
imul
lret
mov
imul
insl
andb
insl
cmp
dec
sub
aaa
in
push
cmpb
fwait
mov
insl
dec
aam
sbb
icebp
clc
dec
mov
dec
imul
cli
sub
pop
or
add
add
adc
hlt
jae
dec
pop
jge
enter
jnp
or
icebp
sub
and
ds
aaa
scas
or
leave
xor
cmp
lret
mov
js
dec
add
xor
sub
insb
imul
mov
mov
push
in
and
orl
jle
lret
in
rcrl
inc
mov
and
xor
xor
and
adc
adc
jne
pop
fldt
int
xor
inc
in
pop
cli
ljmp
lcall
daa
arpl
sbb
loopne
outsb
adc
cmp
push
and
or
roll
pop
mov
mov
sub
push
aad
jl
mov
mov
or
lahf
sub
fsubr
lret
mov
or
stc
jg
jle
pop
int
stc
mov
mov
cwtl
push
inc
cmp
imul
push
adc
jl
sti
xlat
push
mov
fisttps
mov
push
fnstcw
mov
jo
mov
and
mov
add
jmp
clc
or
add
and
leave
xchg
sbb
shll
dec
shlb
xchg
dec
or
cmp
int3
push
and
call
inc
mov
mov
cmp
ljmp
fisttpl
sbb
add
xor
lods
xor
add
mov
add
fistpl
push
pusha
dec
lcall
mov
hlt
mov
inc
push
pop
or
xchg
mov
out
fistl
and
jp
sbb
mov
mov
inc
mov
fucomip
ja
ret
out
shlb
add
mov
mov
add
daa
cmp
jnp
orb
cmp
push
fisubrl
or
sub
mov
mov
xchg
push
sbb
jae
dec
jno
jecxz
mov
sub
sbb
popa
jle
lahf
addb
xchg
lret
pop
push
sub
inc
shlb
push
ret
lret
enter
or
nop
push
mov
and
cmova
ljmp
push
jl
sti
mov
jnp
push
mov
mov
stc
icebp
icebp
dec
inc
push
or
dec
mov
aad
xor
shll
cli
es
pushf
ret
jecxz
mov
enter
add
lret
lcall
stos
mov
jp
dec
sub
popf
dec
test
cmp
stos
cmc
add
sbb
aad
jae
push
xchg
cmp
push
xor
xor
mov
or
arpl
test
mov
cmp
cwtl
sbb
sarb
sbb
arpl
sub
mov
cmp
jmp
jae
dec
sti
jecxz
negb
mov
pop
pop
out
and
sahf
mov
out
ds
pop
mov
pop
stos
xchg
mov
test
or
xchg
loopne
fistpl
cli
add
fisttps
mov
or
movsl
pop
xchg
out
mov
push
pop
add
sbb
inc
dec
mov
icebp
and
adc
rolb
jecxz
sub
sbb
inc
cld
xor
jnp
and
mov
lcall
push
cltd
fcoml
jmp
push
outsb
cwtl
adcb
fcmovu
dec
dec
lret
sti
cmpsb
or
lret
push
cmpl
xchg
mov
lcall
mov
jnp
cltd
cmp
je
xchg
cmp
sub
mov
aad
jno
aam
mov
jbe
fstps
js
rcrl
xor
sub
packssdw
fdivl
mov
dec
xchg
jb
lret
daa
or
imul
jmp
lcall
and
aad
andb
mov
stos
mov
and
add
xchg
popa
movb
sbb
test
cmp
add
and
cmp
enter
leave
outsb
stos
les
inc
aaa
adc
sahf
mov
or
aad
es
jno
cs
pushf
decb
rcrl
sbb
andl
xchg
fistl
cld
sbb
mov
and
cmp
push
cs
pusha
clc
hlt
cmpsl
mov
jb
inc
sbb
loop
push
outsb
aad
into
shrb
mov
adc
pop
repz
call
ds
out
lret
mov
or
es
add
cmp
mov
dec
lret
fwait
js
mov
out
sti
stc
addr16
leave
mov
jp
sti
aad
mov
ljmp
mov
add
jl
lods
inc
arpl
repz
xor
push
or
jae
push
jg
shl
sub
mov
dec
jae
ljmp
sub
add
or
lret
jnp
shrb
cs
dec
add
cmp
cli
cmp
adc
fadd
mov
cmp
inc
enter
mov
cltd
xor
stos
gs
leave
inc
fmull
lods
dec
fnstsw
mov
cmp
stos
mov
loop
movb
outsb
out
cmp
xchg
rcl
int3
lret
lahf
sarl
xor
andb
mov
jae
mov
adc
dec
aaa
dec
mov
push
push
xchg
adc
fldcw
xchg
mov
pop
sub
add
sbb
icebp
pop
cmovs
leave
fmul
pop
scas
or
dec
repz
cmp
jmp
imul
mov
xchg
mov
or
dec
dec
and
sub
shll
pop
inc
inc
mov
in
inc
mov
sub
movsl
js
jmp
or
add
sub
daa
push
pop
sbb
cwtl
pop
fisttpll
adc
jmp
dec
stc
jo
jecxz
push
inc
or
cmp
daa
movsl
mov
push
punpckldq
dec
out
mov
mov
mov
add
jge
lcall
push
call
sahf
rcl
xchg
pop
int3
jns
lret
mov
sti
imul
push
loope
ljmp
adc
lahf
push
adc
lret
sub
pop
cmpsb
or
cmp
add
aad
push
mov
and
inc
dec
xor
fimull
push
mov
inc
fwait
cltd
arpl
out
or
adc
leave
addl
mov
stos
cmp
cmp
out
push
jp
mov
fisttpll
fisubs
sahf
pop
pop
ret
into
mov
pop
stc
xchg
shl
sbb
mov
pop
inc
sub
pop
jne
jmp
cli
int
dec
sub
scas
mov
push
or
mov
inc
ss
movhlps
mov
in
rclb
mov
stos
adc
push
mov
mov
dec
jp
mov
cmp
mov
jns
int
pop
cmp
inc
or
jecxz
cmp
mov
sub
cmpsb
aam
pop
in
pop
xchg
jne
lcall
xor
pusha
push
cmp
fldl
push
add
xor
fwait
dec
arpl
sub
iret
arpl
xchg
sub
cs
dec
mov
sub
stc
es
cmp
jmp
sbb
lods
dec
pop
mov
nop
das
cmpsb
pusha
dec
xor
pop
jmp
sub
mov
inc
out
sub
pop
push
jmp
shll
xor
sti
rorl
mov
mov
xlat
addl
call
pop
adc
xchg
sub
lret
neg
pop
and
mov
mov
clc
jecxz
aad
pop
sub
dec
pop
stos
pop
fsqrt
jp
add
adc
repz
sbb
jmp
fistps
inc
addr16
fwait
gs
cli
lahf
pop
ja
xchg
fsubs
loop
sub
out
imul
mov
into
ljmp
ja
call
das
mov
inc
test
dec
push
lods
inc
push
xor
lret
push
sub
dec
or
mov
ret
jnp
ret
mov
jecxz
push
sahf
movsl
addb
ljmp
aaa
ljmp
sahf
stos
repz
je
imul
mov
pop
push
sbb
or
mov
test
and
and
lock
inc
push
mov
or
outsb
sub
sbb
aad
shll
mov
stos
dec
xchg
ja
xor
cs
jl
cmp
out
mov
cli
xor
jmp
test
pop
rol
cmp
inc
sarl
fisttpl
sarl
and
or
out
sbb
xchg
cli
orl
pop
sub
ret
mov
addr16
lcall
fs
pop
mov
fwait
stos
cli
sub
out
fcmovb
or
sarl
sti
and
hlt
rolb
inc
les
dec
imul
push
and
into
arpl
imul
sub
sbb
mov
ficompl
push
test
icebp
inc
add
mov
mov
loopne
pop
pushf
jbe
xor
loopne
dec
xor
sub
movsl
mov
mov
push
mov
mov
lahf
jecxz
jle
cpuid
aaa
add
mov
lahf
test
sub
out
fwait
jp
inc
mov
sbb
fmuls
sbb
lret
sub
and
sbb
mov
incb
lret
sti
jmp
out
fisttpl
ds
inc
push
pop
cmp
lret
jnp
dec
enter
stos
sbb
out
push
push
in
pop
mov
dec
pushf
lds
adc
shrb
sbb
js
nop
stos
xor
push
mull
push
and
or
and
ja
stc
sub
xor
cmpl
and
pop
inc
test
jmp
pop
ret
inc
jle
sub
mov
mov
rorb
pop
js
mov
add
jle
push
pop
mov
mov
sahf
jge
rolb
pop
clc
outsl
or
mov
push
nop
push
int
stos
cmp
subl
addb
sqrtps
sub
push
leave
imulb
ljmp
cs
mov
mov
add
or
adc
add
or
dec
xchg
imul
stos
sbb
mov
xchg
xor
mov
sub
cmp
sbb
lods
andb
dec
and
lcall
mov
xchg
pop
rclb
ss
mov
ss
lret
adc
imul
mov
ror
dec
and
dec
rorb
and
cli
imul
inc
bound
jns
or
test
lret
sbb
cmpsl
xchg
stc
mov
jae
cmp
lcall
mov
leave
dec
push
inc
cmp
or
movsb
jmp
dec
std
jg
add
pusha
out
je
mov
dec
cs
sbb
shrb
jne
imul
call
sbb
mov
mov
mov
js
rorl
and
mov
adc
je
cmp
test
arpl
out
xor
sbb
sub
jmp
pop
cmp
leave
xchg
or
push
cmp
out
fcomps
inc
xchg
fcomps
addl
or
push
imul
imul
pop
cmp
aad
mov
mov
and
push
mov
or
pop
cs
neg
inc
std
mov
jne
lret
lret
les
fisttpl
sub
mov
js
or
dec
jge
gs
pop
mov
adc
sbb
jle
jg
scas
outsl
dec
roll
lock
sbb
xchg
mov
sub
pop
imul
mov
sbb
std
mov
shl
stos
or
xor
or
sub
cmp
push
enter
push
sbb
xchg
xchg
test
stc
fucom
ljmp
les
stos
sbb
mov
sub
xor
jge
add
cmp
ret
jbe
push
in
ret
push
hlt
lret
lret
loope
cmp
lock
test
les
and
shrl
js
daa
sbb
mov
gs
lods
bound
scas
add
or
lcall
in
sbb
sbb
sub
mov
jae
or
fildl
icebp
jne
jl
mov
aaa
jae
mov
adc
pop
push
pop
mov
sub
rclb
mov
sbb
ljmp
inc
cmp
adc
mov
pop
cmp
les
ret
addr16
push
mov
and
std
adc
imul
stos
dec
leave
aad
mov
mov
outsl
out
shlb
lahf
and
mov
pushf
stos
fsubrp
jecxz
les
out
cmp
test
dec
adc
xor
sbb
pop
cli
push
push
or
dec
dec
jle
outsl
test
add
push
ljmp
mov
aaa
mov
add
cmpb
pop
fdivl
and
inc
enter
pop
pop
fildll
and
push
hlt
jl
pop
pop
push
jmp
jnp
dec
cmp
stos
imul
ret
mov
cltd
negb
in
aad
jns
cmp
mov
pop
sub
sbb
inc
dec
sarl
fsts
pop
sub
push
pop
push
js
stos
call
or
dec
aaa
and
sbb
shrb
jb
lret
adc
lret
or
stos
fisubrs
arpl
dec
or
push
fcmovu
cmp
test
add
xchg
inc
mov
lahf
fmull
mov
in
test
jle
inc
push
push
push
mov
inc
cmp
into
inc
mov
adc
push
push
pop
stos
test
lcall
jl
popf
sub
and
aad
ret
movsb
xlat
and
fwait
jns
pop
jle
repnz
push
sbb
mov
or
in
pop
movsl
inc
lods
aad
dec
mov
jnp
cld
decl
add
jns
pop
out
repnz
shlb
lcall
pop
cs
popf
cltd
mov
lret
mov
ljmp
and
jmp
dec
cltd
pop
mov
mov
arpl
cmp
sub
into
stc
adc
sub
xchg
mov
mov
pop
stos
daa
stc
push
pop
in
mov
daa
xchg
sub
sub
sbb
das
fildl
rolb
push
pop
adc
fs
mov
jbe
icebp
dec
fistpl
fdivl
mov
dec
or
sbb
mov
push
push
jns
fstpt
xor
sub
sub
pop
xchg
mov
outsb
adc
sub
icebp
lret
js
cmp
mov
lcall
cmc
cmp
mull
out
dec
push
ret
cmp
add
sbb
mov
dec
inc
call
into
sbb
mov
lret
sub
inc
std
cld
cmp
je
inc
mov
pop
ljmp
sbb
cmp
dec
lret
push
jmp
dec
cltd
jae
sub
psubusb
repnz
dec
out
in
test
imul
cmp
sub
fwait
mov
cmp
inc
imul
mov
mov
cwtl
orb
push
fwait
test
cmpsl
loopne
jge
les
icebp
fcomip
mov
loopne
nop
filds
insb
dec
jmp
jge
fwait
pop
repnz
jb
cli
leave
push
outsb
sbb
xchg
sti
mov
ret
mov
or
dec
ss
dec
imul
adc
addr16
push
jno
jle
imul
mov
push
cs
xor
sbb
outsl
mov
dec
mov
pop
sub
push
lret
cmpb
jae
movsl
fwait
mov
adc
aaa
or
and
fstpt
mov
jnp
sbb
testb
jecxz
xchg
mov
stos
pop
loop
push
push
jbe
into
mov
push
fwait
inc
ror
enter
mov
gs
mov
cmp
push
hlt
fs
icebp
js
dec
mov
pop
jne
and
inc
push
insl
sti
cli
cmp
inc
sub
fwait
test
add
hlt
in
out
adc
cmc
xchg
xchg
push
push
add
or
shll
pop
mov
jns
mov
pop
xor
fadds
stos
xchg
pop
xchg
or
inc
sbb
loop
inc
std
pop
inc
enter
clc
push
mov
dec
aad
ljmp
push
sbb
xchg
adc
mov
orb
cltd
stc
pop
sahf
mov
sub
lods
paddb
push
ja
mov
sub
lcall
lcall
andb
stos
dec
pop
or
je
out
dec
insb
mov
xchg
inc
sub
gs
and
nop
xlat
rcll
imul
dec
or
sub
fstpt
jp
and
lcall
sbb
cmp
je
push
test
mov
xchg
orb
leave
lahf
sub
or
and
dec
inc
mov
inc
jbe
enter
lock
and
dec
cmp
push
xchg
std
adc
cmp
fstps
inc
rclb
cltd
sub
dec
inc
mov
push
xor
jp
inc
push
sahf
aad
movsl
loop
push
out
push
cwtl
dec
pop
adc
daa
xor
xor
das
push
arpl
pushf
jae
add
xchg
popa
add
sbb
add
sahf
xchg
sub
add
dec
jge
sbb
cmp
lret
jae
add
or
xor
cmpsb
lahf
mov
adc
dec
aaa
mov
stos
cmp
xor
lret
stos
ljmp
or
add
mov
lea
sub
pusha
mull
aaa
and
cmpsb
pusha
sub
mov
mov
xor
pop
jle
mov
mov
mov
jmp
clc
adc
sub
aad
rorb
leave
pop
mov
mov
or
inc
push
push
dec
mov
lret
mov
or
icebp
push
mov
jmp
mov
addl
jmp
push
xchg
mov
push
sub
inc
or
fwait
cli
pop
imul
push
jp
and
pop
push
stos
mov
in
sbb
mov
jp
stos
stc
lret
xor
push
inc
dec
nop
test
mov
and
js
mov
stos
mov
mov
push
or
dec
nop
push
cltd
js
jns
imul
ss
push
jns
push
pop
out
ret
repz
fcmovnu
xor
cmpsb
test
ja
xor
clc
push
test
pop
cwtl
and
push
lods
ret
cmp
mov
sub
adc
cli
lahf
adc
and
rolb
cli
gs
xchg
stos
and
ljmp
inc
ds
in
mov
rcr
outsb
sbb
inc
cmp
xchg
xchg
rol
push
fs
sbb
out
mov
lahf
imul
in
dec
addl
mov
mov
frstor
mov
push
cmpsl
stos
fistpl
lret
or
jmp
mov
incl
add
sub
adc
adc
sub
pop
lret
lret
mov
stos
sbb
mov
or
mov
sub
ret
cmpsb
xor
mov
popa
jl
mov
cmp
xor
out
xchg
fwait
and
or
jecxz
pop
fisubrl
into
mov
lods
lcall
sbb
mov
scas
sti
xor
push
pop
adc
das
jne
aam
sbb
pop
out
dec
xor
in
pop
jae
pop
pop
or
and
cwtl
dec
push
push
in
test
fs
add
jl
cltd
or
test
jge
xchg
xchg
jb
divb
mov
adc
out
mov
xor
in
leave
ljmp
xchg
pop
mov
cmp
mov
imul
and
cmpsb
or
or
add
rorl
adc
imul
adc
adc
scas
adc
or
sbb
ficomps
pop
test
sbb
mov
adc
data16
xor
mov
mov
popf
stos
rorb
test
or
jl
xor
dec
push
sbb
fst
enter
fbstp
cmp
ljmp
push
loope
lock
inc
jnp
cld
test
sbb
int
in
fadd
ljmp
ljmp
xor
fwait
and
idivl
xchg
mov
and
out
cmp
push
idivb
cld
fwait
xchg
out
outsl
cmp
push
push
sahf
adc
pop
and
add
xchg
jmp
push
adc
push
hlt
dec
sti
mov
not
ja
inc
push
pusha
push
pushf
jae
sub
inc
es
xor
and
sbb
icebp
sub
cmp
push
xchg
jnp
repz
push
pop
or
aaa
jne
ljmp
mov
push
leave
cltd
in
aaa
stos
xchg
jnp
jnp
mov
sahf
ds
add
mov
in
gs
leave
sbb
add
add
leave
clc
cmpsb
aad
jae
pop
addw
mov
cmp
repnz
jp
lock
adc
shrl
pminsw
push
test
or
xchg
out
and
out
cmp
stos
inc
adc
push
jnp
mov
sbb
frstor
test
jl
mov
cltd
jbe
out
cmpsb
mov
xchg
or
adc
int
mov
push
arpl
ljmp
cs
inc
subl
sub
lret
xor
or
stos
sti
dec
jae
mov
dec
adc
lcall
fcoms
ljmp
out
mov
xor
cmp
xor
jnp
xchg
inc
xor
or
push
push
and
repnz
in
push
jnp
jbe
lahf
cmp
xchg
inc
lds
mov
cmpsb
or
std
xor
push
fwait
mov
push
push
call
jmp
mov
int3
test
cltd
sub
and
fiaddl
in
imul
cmpb
pop
pop
mov
push
sbb
mov
push
push
rcll
dec
dec
stos
scas
aam
loop
sub
sbb
int
test
push
lods
sub
ret
je
insb
pop
push
mov
inc
push
sti
jmp
mov
ror
fcmove
xchg
mov
pop
add
loop
pop
xchg
mov
fildll
shrb
wbinvd
aam
inc
cmp
sub
mov
add
orb
dec
ds
rcr
arpl
cli
jl
mov
jp
inc
cmp
mov
int
push
jl
or
je
push
imul
or
sub
xchg
fcmovne
stos
mov
pop
mov
add
call
inc
jns
dec
lcall
cwtl
lcall
dec
push
push
mov
pop
fwait
or
stos
sub
in
sahf
or
test
aas
das
ret
cmp
xchg
cs
mov
lcall
sbb
push
mov
sub
ljmp
adc
daa
jecxz
cmp
lret
jp
imul
test
and
mov
cmp
or
xchg
push
pop
xor
dec
nop
nop
imul
lret
cli
ja
push
imul
mov
pop
aad
dec
mov
jp
pusha
xchg
jmp
dec
lret
jb
mov
xor
jmp
lahf
aam
push
jae
out
dec
fcmovnb
mov
push
je
fs
mov
sets
loopne
enter
popa
enter
push
or
rolb
xor
stos
cmc
fsubr
xlat
idivb
bound
adc
or
jne
mov
repz
xchg
jg
cmpsb
sub
adc
or
leave
jmp
cmpsl
mov
jle
adc
ss
lock
sbb
cwtl
test
shrb
mov
pushf
or
add
test
push
add
ljmp
popf
movb
lock
enter
loopne
dec
jecxz
movsl
inc
clc
imul
idivl
mov
mov
dec
rorl
mov
mov
pop
daa
fimull
ljmp
leave
mov
jmp
cmpb
mov
imul
mov
jecxz
jo
dec
sbb
inc
jbe
sahf
sub
out
sbb
lret
mov
add
sub
cmp
imul
xchg
pop
stos
sub
imul
and
jae
add
lret
pop
mov
lods
dec
mov
les
mov
aam
and
and
in
call
fistpl
das
push
mov
push
or
int3
mov
imul
test
dec
mov
out
pop
jno
sbb
xchg
adc
add
je
ret
adc
mov
orb
mov
addl
bound
inc
stos
sub
jge
jns
jge
rcrl
add
lods
mov
imul
stos
into
fidivl
stos
mov
addr16
pop
mov
loop
inc
xchg
inc
lock
fcmovnb
dec
cmp
mov
test
fimull
cli
inc
and
aas
das
pop
int
jne
mov
mull
mov
mov
dec
cmpsb
inc
jns
xchg
movsl
mov
push
or
mov
fsub
mov
lahf
push
dec
sub
popf
fstpt
dec
and
add
adc
cli
inc
insl
sub
lret
xchg
ja
add
fwait
xchg
stos
push
fisubrs
addps
in
fistl
mov
fcomp
lcall
mov
std
xor
push
cltd
and
add
outsb
mov
test
mov
xchg
stc
sub
jp
sarb
jbe
imul
push
pop
adc
jmp
sahf
add
jecxz
insb
jno
loop
fdivrs
mov
sub
orl
jmp
je
adc
jae
lret
repnz
and
push
mov
test
xor
adc
xchg
out
jle
movzbl
in
xchg
shlb
push
shrl
cmp
pop
push
sahf
test
xchg
mov
sbb
add
jecxz
pop
incl
mov
jle
rorb
lret
adc
lods
dec
xchg
movsl
mov
int
cwtl
mov
fidivrl
sbb
cli
fbld
push
jmp
push
xchg
inc
out
fidivs
negb
and
push
dec
add
jl
ljmp
pop
dec
js
out
ljmp
cmp
pop
jecxz
inc
jne
repnz
dec
arpl
add
xor
ficoms
xlat
mov
sub
imul
rcll
adc
sub
lock
mov
adc
inc
sarl
mov
sbb
ficoml
mov
sbb
js
cmpsb
fistl
inc
jne
fwait
xor
fidivs
sbb
sub
jp
dec
aad
insb
scas
inc
mov
and
adc
push
push
xchg
mov
sar
les
mov
xchg
ficoms
cld
cmp
push
lock
push
fnsave
pop
fisubrl
mov
dec
xor
adc
add
fwait
insl
sub
movsl
subl
into
mov
inc
sub
sub
inc
mov
cmp
stos
sbb
pop
mov
shlb
jecxz
leave
pop
adc
xchg
out
dec
int3
cmp
fwait
leave
mov
enter
pop
cmpsb
cmp
outsb
or
or
dec
xor
and
je
adc
pop
push
out
sub
jnp
push
push
and
xchg
mov
adc
xor
sub
mov
jle
std
mov
pop
xor
mov
mov
or
dec
mov
mov
jae
outsb
inc
addl
lcall
push
sub
stos
jp
sub
test
into
ja
cmp
pop
dec
bound
push
or
std
decl
jo
sbb
sahf
repz
andb
lock
pop
pop
pop
js
mov
adc
dec
mov
es
mov
mov
les
xorb
movsl
sub
adc
lret
add
sbb
push
ficoml
stos
pop
fcmovbe
mov
or
sub
sti
push
movsl
inc
pop
sbb
mov
cltd
fcomps
pop
and
stos
xlat
iret
xchg
mov
fldl2e
test
sub
icebp
mov
in
loopne
hlt
mov
lock
push
mov
data16
test
testb
sub
lret
xor
sub
sub
addr16
ljmp
sub
mov
mov
mov
stos
inc
adc
or
mov
std
fmull
mov
subb
pop
lret
popa
inc
push
fsub
inc
xlat
lret
imul
lds
neg
push
adc
dec
int
inc
push
push
jmp
xor
jp
pop
pop
stos
xchg
jo
sub
stos
jnp
into
dec
push
and
in
dec
imul
xor
ss
loope
mov
ret
in
and
or
sub
adc
pop
lret
dec
xor
push
dec
lret
stos
cli
sbb
inc
ljmp
and
fistpll
mov
aad
add
enter
xor
sbb
mov
in
inc
pop
sbb
sub
ret
pop
dec
test
lret
mov
push
rolb
fidivs
jb
das
push
hlt
or
push
push
mov
mov
jae
in
jae
gs
pop
or
aad
pop
cltd
adc
cs
rcrb
inc
rol
pop
les
fisttpl
jecxz
arpl
push
jbe
aam
jnp
daa
cs
test
cmp
dec
fidivs
jmp
push
mov
cmp
adc
xchg
dec
inc
mov
into
xor
inc
lret
fidivrs
jmp
ljmp
push
stos
sbb
data16
mov
and
or
popf
mov
sbb
sti
js
loop
jno
mov
cli
xchg
lahf
leave
inc
stos
ss
stos
js
add
mov
or
sbb
test
lret
or
mov
mov
ss
dec
std
sbb
push
dec
repnz
fcmovnb
out
mov
inc
lods
fstpt
aas
dec
arpl
xor
push
enter
out
sbb
mov
in
mov
jns
cwtl
mov
add
sub
adc
les
pop
jl
and
dec
jecxz
jo
fbld
repnz
das
pop
mov
pop
ds
cmp
jbe
jnp
cmp
xlat
mov
push
add
sbb
mov
sub
cltd
lcall
pushl
stos
lret
xchg
pop
fistpl
xor
popa
out
lret
push
sub
mov
jbe
pop
sub
add
or
sti
push
les
dec
xchg
mov
in
movsl
sbb
fstp
add
lret
imul
adcl
mov
out
test
icebp
sbb
fcomps
stos
repnz
jmp
jae
dec
cmpsl
push
fimull
enter
mov
xor
sti
add
adc
popf
add
xor
xchg
repnz
jae
cmp
or
or
inc
jnp
popf
popa
push
jecxz
add
add
xor
jge
dec
sub
mov
push
std
adc
sbb
pop
and
jnp
xor
and
stos
aaa
in
js
cli
dec
fcomps
lcall
and
nop
pop
pushf
stos
shrl
fldl
nop
add
mov
sub
mov
fcmovnbe
gs
ds
sub
insl
and
mov
fldt
arpl
or
xlat
mov
jmp
aam
popf
push
pop
shrb
xchg
mov
jbe
jg
cmp
sub
xor
pusha
sub
cmp
xchg
addr16
mov
mov
popa
add
inc
mov
mov
jp
out
stos
or
inc
mov
jnp
mov
leave
xor
pop
aaa
ljmp
sub
mov
mov
andb
cwtl
and
jle
dec
sub
mov
mov
ljmp
sub
mov
push
push
push
and
push
mov
mov
ret
push
mov
fwait
lods
test
imul
cmp
out
incb
sbb
xor
ja
sbb
xchg
shlb
xlat
inc
sbb
cmp
mov
cs
push
fildl
and
dec
adc
xchg
enter
cmp
in
test
xor
mov
fstpt
in
or
cmp
imul
pop
movsl
out
subl
inc
mov
aad
gs
jbe
ss
into
dec
pop
sub
jne
jns
data16
mov
push
dec
mov
push
pop
imul
cltd
jns
leave
mov
es
xor
stos
mov
and
xchg
cmc
sbb
scas
dec
fwait
dec
jnp
xchg
stc
inc
dec
adc
mov
ljmp
mov
imul
mov
rcll
or
xchg
dec
fistpll
addr16
mov
out
sub
cmp
mov
push
dec
pushf
jnp
xchg
aas
push
pop
or
mov
mov
and
cmpsl
dec
hlt
push
inc
mov
ljmp
clc
in
sbb
sbb
lcall
leave
lahf
or
fisubrs
lahf
adc
sbb
mov
pusha
rcll
test
imul
jmp
jnp
loopne
test
dec
and
pushf
adc
les
sbb
xchg
pop
xor
jl
push
or
cmpsl
lods
call
cli
unpcklps
fsubrl
in
std
dec
xor
xchg
sub
movb
fstpt
sub
mov
cmp
push
mov
adc
stos
loop
or
jbe
out
jecxz
adc
jnp
sbb
stc
dec
or
shrl
xor
cltd
inc
mov
mov
mov
mov
lret
int3
mov
or
decb
inc
mov
jecxz
dec
or
mov
mov
or
sbb
cmpsb
mov
inc
shll
adc
or
xchg
mov
sbb
cli
add
or
fidivrl
loop
push
lret
ret
mov
pop
mov
push
push
stc
ljmp
or
subb
dec
mov
aas
pop
ret
les
fadds
cmp
mov
js
adc
dec
adc
dec
push
dec
lds
pop
pop
and
jl
mov
xchg
push
sbb
std
mov
sbb
jnp
mov
jp
pop
iret
rclb
push
cli
push
mov
clc
sbbb
add
xchg
arpl
and
jl
gs
dec
jmp
adc
repz
jmp
adc
sbb
inc
out
xor
mov
inc
mov
push
popf
sub
int
ret
pop
outsl
aaa
cmp
lea
std
movl
pop
cmp
xor
pushf
xor
test
fcoms
imul
jecxz
xor
cs
sub
adc
push
adc
mov
insl
push
cmpsl
push
xor
sbb
movsl
fmull
jecxz
jecxz
mov
mov
repnz
subb
mov
shlb
aam
fisttps
sub
fwait
js
in
inc
int3
jae
mov
cmpb
dec
mov
sub
in
dec
lahf
pop
je
ljmp
adc
ljmp
adc
test
jecxz
sub
mov
addb
lds
fstpl
loop
adc
ds
push
mov
push
add
pusha
add
ss
shl
and
mov
mov
jns
int3
rclb
cli
fnstsw
pop
lret
sub
jp
dec
jp
add
push
pop
popf
rcl
das
loopne
pop
data16
inc
push
inc
and
cmpsb
mov
sub
sbb
and
dec
jnp
or
sub
mov
jbe
pop
sub
mov
cltd
out
dec
adc
jecxz
clc
stos
push
xor
or
lcall
push
adc
sub
mov
daa
jno
sahf
out
dec
push
dec
or
pop
mov
adc
push
xor
clc
jne
xor
and
inc
push
lahf
out
mov
cmpsb
jo
cltd
xor
ljmp
add
push
mov
aad
nop
push
jmp
inc
jp
popf
insb
subb
mov
sbbl
cmc
cmp
and
fstpt
cmp
adc
jbe
test
movsl
lods
xchg
pop
jns
cmpsl
mov
jle
movsb
rorb
test
inc
subb
mov
jge
add
test
xchg
arpl
mov
add
cld
cmpsb
xchg
sahf
and
dec
jns
push
lret
test
xchg
scas
fwait
cmp
add
out
sub
add
adc
aad
scas
or
sub
mov
sahf
add
cmp
mov
mov
sbb
fistl
or
hlt
xchg
mov
call
jle
mov
mov
lods
fisubrl
out
pushf
inc
mov
stos
adc
aad
pop
sbb
adc
mov
xchg
or
and
je
jbe
pusha
cmp
ficompl
pop
test
push
pop
clc
jb
mov
js
lods
into
mov
cmp
data16
mov
decl
cmp
adc
mov
cmp
cmp
adc
cmp
stos
xchg
ja
mov
out
lock
loop
fbstp
dec
inc
std
mov
js
mov
testb
xchg
das
cmp
and
xchg
imul
cmp
or
push
sub
or
xchg
scas
inc
repz
dec
cmp
or
sub
adc
inc
test
nop
xor
xor
mov
sbb
sbb
dec
das
fcmovb
addb
ret
dec
in
fwait
inc
mov
cmpsl
sti
sbb
inc
incb
repz
and
add
test
out
mov
hlt
jp
ljmpw
sbbb
fldt
xchg
sbb
push
cwtl
ljmp
mov
cmp
enter
lcall
mov
sub
cmpb
lret
xchg
icebp
add
stos
xchg
push
adc
stos
cltd
lods
sbb
aad
lods
jp
adc
xor
mov
loopne
cmp
dec
sbb
ljmp
js
and
or
bound
xchg
xor
cli
mov
mov
lds
aaa
je
sbb
movsl
leave
lahf
lcall
inc
test
fimuls
loope
cvtpi2ps
stos
pop
pop
dec
cli
in
ret
pop
push
mov
push
arpl
int3
enter
stc
sbb
js
and
inc
movsl
pop
pop
jmp
fidivl
push
pop
sbb
dec
mov
mov
icebp
aad
jmp
sub
arpl
hlt
sub
push
mov
adc
mov
pop
in
pushf
out
push
sub
jae
lret
push
mov
jecxz
popw
mov
movsl
jmp
push
pop
inc
cmp
push
nop
stos
dec
jl
popf
mov
jle
jecxz
leave
sbb
mov
sub
mov
imul
mov
loop
cs
mov
xor
stos
dec
inc
jmp
lret
mov
fmuls
stc
mov
pop
sub
dec
adc
or
outsb
stos
mov
in
cmp
adcb
and
out
mov
push
inc
test
lods
xor
dec
add
sub
push
mov
sti
mov
inc
dec
sahf
imul
xchg
dec
mov
fisubrl
cwtl
addb
jns
or
hlt
imul
xor
jl
jge
dec
mov
fisubs
jecxz
lock
push
sarl
sahf
or
fadds
adc
stos
push
mov
lcall
stos
inc
jp
sahf
jnp
gs
mov
fimull
mov
aad
push
push
int
fisubs
fldt
xlat
dec
pop
icebp
push
cmp
add
dec
in
outsb
cli
jmp
jmp
aaa
add
or
nop
repnz
lahf
push
xchg
xchg
inc
jns
outsl
mov
push
push
in
push
cmp
jmp
popf
out
scas
sub
cmpsl
push
sub
jo
pop
mov
or
cmp
adcl
cmp
mov
cmpsl
mov
popf
xlat
aaa
out
cltd
repnz
loopne
push
sub
pop
call
rol
mov
push
inc
test
xor
lods
mov
add
push
ss
movsb
repz
loop
test
xor
mov
scas
scas
out
and
cltd
sbb
push
cltd
add
sbb
imul
lahf
inc
sahf
dec
cli
dec
push
mov
gs
pop
lret
xchg
jg
cmpsl
fcmove
scas
pop
mov
movsl
popa
or
cwtl
push
test
idivb
lcall
les
cmp
sbb
into
mov
adcl
xor
cmp
sbbb
xor
pushf
and
jg
jne
or
jg
inc
ljmp
dec
add
es
jo
pusha
scas
loop
fidivrl
add
or
shlb
xbegin
mov
cmp
dec
dec
xor
mov
jp
jmp
mov
push
add
push
push
pop
sbb
sub
test
aad
sahf
cmp
faddl
push
sbb
ss
cmp
mov
inc
lcall
lods
cmpsl
ss
sti
lds
mov
mov
cmp
dec
pop
mov
sbb
jecxz
pop
int3
clc
fstpl
inc
dec
bound
sbb
push
cmp
cltd
push
mov
aaa
pop
sti
outsl
or
cmp
pop
fwait
inc
shrb
xchg
adc
aad
xchg
lret
fsubp
mov
fmul
xchg
sub
pop
pop
icebp
mov
sub
jne
outsl
pop
faddp
ret
mov
mov
or
push
push
gs
xor
fiaddl
jno
jo
mov
mov
and
mov
repz
hlt
dec
dec
mov
popa
js
in
mov
mov
dec
cwtl
test
cmpsl
lcall
fnstcw
xchg
xchg
jg
cmp
adc
inc
pop
cmp
test
inc
mov
out
jnp
inc
shrl
sub
add
scas
fisttpl
jp
adc
stos
sbb
dec
inc
add
ficompl
mov
cmp
int
addl
pop
aas
shl
je
jno
sbb
xor
push
mov
dec
push
insl
pop
stos
xchg
pop
pop
pop
aas
adc
fwait
ret
push
fistl
lret
movsl
aam
pop
push
loop
cs
push
xorb
fistl
jp
push
xlat
pop
inc
jg
lcall
sbb
std
iret
mov
out
mov
cmpb
lcall
xor
xor
outsl
sarl
int3
dec
lret
cmp
jne
lods
sub
sub
and
je
nop
pushf
jmp
inc
scas
inc
loopne
inc
jp
lret
sbb
pop
or
jbe
sbb
lods
sti
cmpb
int
dec
lock
js
or
outsb
xchg
xchg
jns
jnp
xchg
enter
popf
add
subl
push
lods
cmpsl
rcll
fstps
pusha
jecxz
std
aam
sti
mov
cmp
ja
adc
clc
lahf
lret
mov
dec
sarb
ret
lcall
sub
cld
dec
push
mov
mov
mov
cli
lcall
aad
movsb
mov
imul
cwtl
jne
jae
jle
stos
add
repnz
int
cmp
aad
xchg
sbb
shrb
and
mov
push
test
out
outsl
mov
jmp
hlt
mov
shl
push
xchg
dec
lock
add
fnstcw
ret
daa
mov
and
ljmp
stos
in
jle
cmpsb
jp
icebp
movsl
mov
lods
fldt
gs
jle
and
push
outsl
test
sub
lret
rcrb
jo
inc
mov
stos
inc
pop
or
add
push
stos
fidivs
jno
shrl
sub
pop
jle
jge
push
ss
push
test
lret
xor
lods
loop
aaa
or
sbb
mov
cmpsb
or
mov
jmp
cmp
dec
or
dec
jne
test
in
and
pop
cli
add
dec
ljmp
xor
repz
dec
mov
and
out
imul
popa
mov
adc
sub
xchg
leave
arpl
xor
jg
mov
sub
sbb
sub
push
dec
add
push
cmc
push
aaa
adc
lcall
test
stc
sub
rorl
or
sbb
push
fwait
test
dec
xchg
shll
sub
xor
pop
or
sbb
sbb
and
adc
pop
jecxz
les
sub
int
aam
xor
js
and
push
jle
fstps
pop
rcrb
imul
dec
mov
orb
mov
xchg
leave
pop
fwait
cwtl
jae
repnz
adc
xor
cmp
jp
popa
jge
jg
mov
dec
fwait
or
int3
ret
and
push
ss
loop
imul
arpl
push
inc
mov
mov
sbbl
aad
test
pushf
test
loopne
dec
push
pop
xor
ss
lahf
sbb
mov
cmpsl
sbb
xor
je
std
fldl2t
data16
cld
enter
mov
adc
cmc
jb
pop
test
dec
arpl
out
adc
test
dec
cmp
sarb
xor
pop
jmp
je
aaa
fstps
pusha
popw
jl
push
mov
add
repz
push
push
mov
movsb
mov
jge
dec
or
and
cmp
inc
inc
fidivrl
sub
and
add
dec
add
push
fidivl
mov
fisubrs
sbb
ljmp
loopne
push
mov
jmp
mov
cmpsl
add
js
cmp
cltd
xor
lcall
dec
xchg
negl
data16
stc
xor
sarl
je
push
fimuls
or
sbb
pop
xor
adcl
pop
push
cltd
fwait
movsb
das
mov
insb
icebp
mov
dec
mov
ss
mov
pop
cmp
fildl
cmp
pop
movsl
xchg
sbb
ret
fdivrs
xchg
sahf
push
loopne
test
jbe
push
mov
mov
sbb
lret
sbb
add
mov
je
movsl
mov
pop
in
xor
dec
dec
lret
cmp
jp
jle
xor
dec
decb
push
pushf
xor
popf
lret
xor
inc
jnp
fcompl
cmp
cmpsb
ficoml
sbb
push
in
das
inc
push
fwait
jl
push
xchg
lret
fs
mov
mov
inc
sub
xor
pop
cmp
out
cwtl
push
fiaddl
lahf
push
lea
popf
xor
inc
jle
push
int3
pop
fadds
pop
je
rclb
ret
sbb
mov
adc
cltd
push
lcall
dec
mov
ljmp
test
std
imul
lcall
jae
movsl
xchg
pop
mov
cmp
cltd
neg
cli
pop
enter
addr16
bound
xchg
mov
or
fnsave
lock
arpl
or
inc
adc
inc
mov
mov
mov
pop
mov
and
call
mov
lahf
std
pop
dec
movsl
jo
jb
fstl
data16
adc
xchg
call
sub
pop
dec
cs
inc
cmp
inc
ret
mov
lret
sub
adc
xorb
sub
add
outsb
out
sub
call
push
aam
dec
lcall
mov
in
cs
subb
mov
push
jp
movsl
mov
sti
in
stos
xchg
mov
push
sarl
xlat
sub
mov
inc
jnp
add
ljmp
fdivrp
push
pushl
pop
fisttps
out
sahf
repz
cmp
jbe
jne
fwait
and
leave
sbb
mov
leave
imul
pushf
sub
sub
push
das
dec
xchg
stos
mov
popf
dec
lahf
dec
bound
mov
orb
mov
sub
insl
add
xchg
and
cld
test
test
or
sbb
not
add
lock
adc
jmp
pop
mov
sub
imul
push
test
push
adc
test
ficomps
test
xor
jae
idivl
sbb
push
sub
cmpsb
inc
vpunpckhdq
xor
jmp
jecxz
pop
lock
push
sbb
sbbb
lcall
ficoms
mov
repz
jp
ja
lret
cmp
pop
ret
xchg
adc
test
mov
stos
or
inc
fistl
mov
push
popf
into
out
or
fdivrl
mov
xchg
jnp
cmp
addl
mov
decb
cmp
cmp
je
mov
sbb
nop
mov
add
and
mov
scas
push
inc
jp
xlat
or
cmp
insl
lcall
test
bound
jmp
pop
fldl
or
cltd
and
ret
aad
cltd
fwait
das
imul
gs
aad
mov
xor
mov
lret
sbb
fwait
imul
shrb
sub
cmpsl
hlt
lcall
push
jecxz
push
jns
mov
imul
inc
push
push
sub
sub
mov
dec
loopne
fsts
sti
or
mov
fmuls
pop
inc
notb
je
jno
push
in
xor
jne
mov
sti
mov
jns
jl
out
stos
imul
outsl
icebp
jne
sbb
imul
cmp
xor
jns
repnz
xchg
cmp
addr16
decb
ljmp
lret
cld
jnp
and
cmpsl
adc
push
lret
mov
jp
inc
mov
cli
push
fsubrl
scas
inc
mov
int
sub
jne
sub
inc
jmp
fstpt
mov
and
pop
lret
popf
push
sarb
push
mov
sbb
and
sub
lcall
mov
cmovb
cli
ficompl
xchg
fwait
xor
push
test
rcrb
mull
out
test
scas
test
xor
adc
stos
jae
call
test
adc
sub
stos
jp
arpl
cli
repnz
cmp
lcall
fstpt
call
mov
adc
ljmp
dec
cmp
mov
int3
inc
or
subb
dec
lahf
ljmp
jnp
push
sub
push
xor
lods
dec
ss
push
into
sub
out
push
mov
jno
and
xchg
push
jecxz,pn
js
repnz
ds
adc
or
pop
push
cmp
jo
mov
cmp
fbld
out
ss
in
push
pop
test
neg
jg
sub
or
cmp
add
stos
and
jmp
jmp
fcmovnb
shll
or
pop
sbb
sub
stc
mov
adc
in
clc
test
xchg
xchg
xchg
nop
fimull
cmc
mov
repnz
scas
push
leave
dec
stos
mov
xchg
rcll
pop
in
jle
les
add
mov
aaa
adc
jmp
sub
inc
and
jns
mov
mov
xor
fistl
jmp
xchg
pop
mov
push
mov
mov
dec
cmc
dec
adc
je
notl
mov
mov
lret
jmp
aas
mov
testl
xchg
sub
lret
fcmovne
jge
mov
or
push
cmpl
and
daa
jae
pop
or
inc
leave
push
repnz
rcrl
das
shll
cmp
out
dec
or
lcall
pop
aam
fwait
xchg
jp
roll
cmp
cmpsb
sbb
lea
xor
mov
je
outsl
dec
mov
fwait
stc
dec
out
loopne
fcomps
jge
xchg
lods
and
cmp
jns
mov
scas
cmc
jnp
mov
imul
jge
cmc
sbbb
xor
dec
adc
dec
mov
push
inc
jnp
sub
mov
fiaddl
out
push
shlb
insl
jnp
mov
or
ljmp
lahf
stos
xlat
and
xchg
push
mov
pop
std
ror
outsl
jne
arpl
out
std
ljmp
mov
cmpsl
stos
or
lret
std
sbb
in
addr16
sbb
push
mov
adc
stos
lds
sub
lcall
shl
cli
js
test
popa
int
cmp
popf
pop
jmp
cs
and
out
jp
inc
stos
stc
call
mov
or
scas
dec
inc
inc
adc
dec
rclb
insb
mov
or
add
push
mov
mov
shll
test
or
xor
cli
sbb
sbb
xchg
pusha
or
dec
jle
rclb
or
xchg
mov
xor
or
inc
and
sbb
int3
jecxz,pt
sbbl
adc
sti
str
pop
outsl
fldt
iret
mov
xchg
mov
es
mov
sti
lahf
mov
push
imul
jno
call
sahf
dec
out
or
fisubl
mov
cmpsl
stos
sbb
mov
xchg
or
mov
xor
scas
or
jge
and
icebp
mov
mov
sub
cmp
push
cmp
xor
aam
lret
stc
in
push
push
insb
pop
and
pop
ficoms
add
lahf
jecxz
std
jmp
dec
push
jnp
dec
jg
push
fcmovnbe
cs
ljmp
or
mov
push
insb
ljmp
outsb
repz
vmulss
fwait
mov
lahf
jmp
vucomiss
xor
jno
dec
lods
dec
popf
inc
mov
sub
enter
inc
pop
cmp
adc
popf
ja
cwtl
jp
fisttps
sub
cltd
rcl
push
adc
sti
sub
call
push
jmp
mov
shll
ffree
mov
lahf
jmp
adc
inc
fld
stc
stos
daa
leave
mov
stos
in
aam
movsl
int
dec
out
push
dec
dec
jle
pop
jo
data16
ret
je
inc
xchg
pop
fnstcw
in
cmp
cltd
repnz
pop
cli
ret
sbb
imul
xor
or
ss
rorl
lea
jmp
push
out
mov
cld
pop
ss
popf
in
mov
xchg
sbb
jno
mov
pop
mov
test
mov
mov
sti
jne
inc
dec
mov
cmc
ss
sbb
pop
fwait
fwait
jmp
outsl
push
ret
mov
mov
sbb
xor
adc
jp
cltd
pop
ja
cmp
or
push
mov
mov
aaa
shlb
aad
and
mov
lahf
cs
decl
sarb
cmp
lods
sbbb
sbb
push
jnp
and
jae
movsl
adc
popa
adc
movsl
mov
push
xchg
and
dec
dec
or
push
out
lds
out
lret
mov
xor
stos
push
ljmp
fwait
push
imul
cmpb
ljmp
cmp
rolb
test
cmc
pop
add
je
fdivrl
pop
jge
sarb
cld
adc
push
imul
data16
sub
mov
nop
xor
lret
lret
iret
sub
sub
or
mov
inc
ja
mov
mov
out
dec
out
inc
xchg
imul
repz
call
sub
andb
inc
out
mov
or
outsl
push
push
sbb
dec
cli
mov
inc
fstpt
jae
jne
mov
adc
pop
aaa
sub
sub
mov
das
jbe
and
push
push
jecxz
das
dec
call
push
int3
xor
and
jns
dec
cmp
sbb
in
push
popf
mov
int
xor
sbb
mov
imul
fs
fcompl
out
adc
mov
jo
inc
gs
test
mov
inc
stos
lcall
movb
fcmovnb
pop
stc
ret
lret
pop
in
mov
sub
stos
pop
insl
adc
dec
sub
mov
pusha
cmpsl
inc
cld
in
fs
sbb
and
push
dec
xor
mov
or
lods
sarl
pop
inc
mov
push
fistpl
jae
add
bound
std
sbb
and
adc
mov
xchg
cltd
jle
adc
dec
ljmp
jne
icebp
cmp
ficomps
imul
stos
js
lretw
lea
shlb
outsb
rorl
cltd
pop
and
jge
cmp
or
lods
fistpl
push
adc
add
or
jmp
pusha
pop
jmp
add
leave
rcrl
pop
out
imul
xor
sarl
push
nop
sbb
push
aaa
sub
out
xchg
loopne
fdivrp
aad
push
pop
cli
pop
dec
inc
aad
mov
dec
aaa
sub
fwait
cli
jecxz
fisubrs
adc
cli
into
push
add
test
lar
dec
mov
sbb
loopne
mov
or
xchg
or
decl
or
inc
xor
hlt
jmp
popa
dec
aad
mov
daa
sub
or
cmpsl
jecxz
ss
pop
lods
mov
orb
dec
jmp
jecxz
aaa
sbb
adc
fucomi
add
movb
push
mov
pop
stos
ret
jmp
push
dec
mov
dec
lods
inc
jb
add
std
push
add
stos
cli
mov
cltd
or
jge
dec
dec
mov
adc
cltd
mov
lods
pop
fwait
out
jno
xchg
cs
sub
ret
cwtl
add
jbe
or
jecxz
clc
lret
inc
xor
sbb
push
ds
or
pop
leave
mov
sti
pop
pop
xor
decb
mov
rclb
roll
arpl
pop
icebp
pop
mov
xor
inc
xor
push
or
int3
mov
cmc
shrl
leave
push
out
dec
xchg
stc
movsl
mov
popa
mov
es
ljmp
inc
repnz
pushl
jae
cwtl
loopne
jo
shl
adc
fwait
roll
lahf
lcall
push
int3
dec
mov
push
aad
xchg
jae
xor
push
push
mov
fwait
sbb
fiadds
insb
sbb
add
mov
gs
xchg
push
shr
lret
loope
mov
out
ss
or
insb
in
cmpsb
fildl
mov
bound
rep
and
and
sub
sahf
rcl
mov
into
scas
pop
dec
inc
cmp
jae
call
clc
pushf
mov
ljmp
or
add
push
repz
jmp
jl
adc
lret
aam
push
or
fcomps
das
jns
repnz
aaa
pop
std
xchg
clc
jns
mov
pop
out
add
dec
imul
jl
sub
cmp
andb
movsl
fnstenv
stos
fstl
addr16
cwtl
inc
es
push
or
in
loop
loope
xor
pop
aaa
mov
and
cltd
popa
addr16
jbe
or
out
push
stc
xchg
cmp
mov
loope
popa
push
push
lods
push
test
and
add
cmp
sbb
mov
ljmp
xor
jmp
adc
insl
sub
addr16
and
ljmp
pusha
pop
ss
insl
push
dec
sub
popa
sbb
fstpl
cs
filds
std
mov
sbb
cmp
aam
pop
nop
pop
dec
jae
rolb
stc
test
pop
or
cmc
or
ljmp
jmp
mov
dec
mov
test
or
add
popf
xor
adc
cmp
cmp
fstpl
jmp
es
loopne
dec
cmc
int3
pop
xchg
aas
add
push
or
push
push
lods
lret
inc
adc
add
add
imul
aaa
insl
and
dec
sbb
push
orb
ljmp
sub
xor
and
ljmp
push
sbb
cmp
jae
subb
mov
inc
and
pop
aas
cltd
testb
lods
jge
pop
fisttpl
pop
push
or
in
jno
push
xchg
jne
cmp
mov
pop
push
imul
pop
mov
add
add
incb
pop
push
aas
cs
push
call
adc
jmp
jge
pop
popf
xchg
inc
xor
push
inc
in
add
xchg
pop
jp
mov
jbe
aaa
xchg
push
pop
jo
dec
mov
rcrl
sbb
xor
and
sub
addr16
push
jmp
sub
cli
pop
cmp
add
testb
jge
movsl
scas
fmul
int
pop
ret
sbb
sti
sbb
pop
jg
dec
test
or
fmull
nop
dec
and
mulb
and
pusha
or
cli
adc
lock
fisubs
add
sbb
push
mov
push
push
sbb
adc
add
mov
adc
adc
scas
xchg
lods
jmp
bound
push
addr16
daa
pop
add
inc
push
xor
pop
dec
add
ds
or
sbb
pop
mov
pop
loopne
dec
scas
enter
pop
in
xchg
mov
pop
pop
push
sbb
xor
cmpb
mov
loopne
dec
icebp
mov
mov
jns
adc
xor
std
rcr
adc
pop
lret
mulb
mov
ds
aas
adc
or
jmp
jne
gs
fistpll
shrb
popa
add
xor
push
and
fcoms
mov
ss
pop
cmp
lret
xchg
jl
inc
jp
mov
xchg
pop
ds
and
icebp
mov
inc
or
pusha
lret
dec
lcall
jno
js
fwait
icebp
or
pop
or
popa
push
dec
shll
into
sbb
popf
cwtl
dec
ljmp
lock
popa
jmp
div
pop
adc
ljmp
fists
push
pushf
pop
es
lea
pusha
jmp
cmc
pop
push
test
inc
or
inc
and
xchg
xchg
imul
push
shlb
out
mov
addr16
xor
inc
lret
adc
pop
jmp
pop
push
andl
and
cmp
lcall
inc
mov
dec
dec
test
pop
rol
add
movsl
cwtl
push
addb
jl
fcmove
rcrl
shl
es
mov
jmp
outsl
mov
or
xchg
adc
popf
xchg
xor
sbb
sarl
xor
fstpl
add
xor
jbe
mov
pop
cltd
in
or
xchg
shl
daa
jnp
or
pop
mov
das
pop
mov
or
lahf
pop
jns
test
cmovl
inc
jno
xchg
push
test
stos
dec
pop
sti
lds
and
adcb
int3
popa
sarb
push
pop
xchg
lds
push
fimuls
inc
hlt
jno
mov
shll
push
adc
cmp
jle
into
lods
push
ljmp
adcl
adc
push
cmpsl
scas
dec
mov
lock
ret
mov
cmpsb
test
je
sbb
xchg
movsb
fiaddl
adcb
data16
sub
and
and
xchg
jmp
ljmp
push
jnp
out
sbb
jmp
rcrb
dec
dec
jl
lcall
aaa
sbb
xchg
loopne
pop
mov
xor
jbe
pop
mov
xadd
int3
std
cmp
lds
mov
test
pop
jecxz
or
outsb
and
pop
sub
cmp
fimuls
pop
pop
jmp
popa
jmp
pop
ljmp
sahf
pop
mov
arpl
test
dec
dec
and
pop
and
fwait
xor
xchg
sbb
xchg
pop
repz
sbb
jb
jbe
jns
mov
add
pop
dec
pop
sub
pop
testb
ljmp
adc
test
mov
add
push
jmp
mov
lea
mov
jp
mov
inc
jecxz
push
adc
movsb
hlt
mov
mov
sbb
cmp
ret
adc
xor
mov
mov
or
je
sub
cs
fldenv
pop
loope
jecxz
ret
and
fwait
arpl
mov
roll
mov
dec
mov
mov
cwtl
pop
push
inc
scas
imul
pop
shll
popf
cs
pop
loop
jno
ljmp
das
inc
mov
mov
cltd
inc
sub
or
fildll
sub
jp
shrb
or
sbb
mov
cli
or
adc
push
negl
or
or
gs
xor
xlat
sbb
or
xchg
mov
mov
inc
mov
dec
cmp
data16
and
pop
popa
sbb
aas
and
or
cmp
mov
dec
mov
fimull
cmp
jno
jmp
pop
aam
pop
iret
out
and
pop
rcl
pop
adc
or
lods
mov
mov
lret
out
popa
cmp
sbb
icebp
cmpsb
pop
adc
mov
loope
std
test
ja
loopne
sbb
ret
popa
push
jmp
test
pop
xor
jmp
xchg
out
ja
cmpsl
jne
orb
pop
inc
inc
sbb
jp
ljmp
popa
dec
int
lds
js
cli
jmp
pop
add
out
pushl
pop
mov
adc
xchg
jmp
test
mov
or
or
mov
pop
stc
or
arpl
and
jo
mov
sahf
push
pop
aaa
push
and
cmp
test
adc
ja
iret
adc
dec
dec
jg
addr16
lret
fdivr
jo
pop
out
lahf
cmp
adc
mov
popf
cmp
or
xor
adc
pop
mov
and
dec
int
and
ret
cmp
add
xchg
pop
stos
pop
pop
in
cmp
lds
sub
ljmp
ret
jae
jb
push
and
pop
shl
or
xchg
popa
pop
rcll
mov
stos
mov
fadds
sub
cmc
cmpsl
pop
mov
xchg
ds
rclb
or
cli
push
push
les
imul
sahf
sub
push
add
nop
pop
add
xchg
and
aad
loopne
mov
stos
push
cmpl
sub
inc
dec
push
inc
push
pop
jb
dec
pop
mov
sahf
mov
add
xlat
dec
mov
xchg
orl
ret
clc
pop
dec
pop
adcb
imul
je
adc
push
pop
adc
faddl
jns
pop
cmpsb
push
jmp
ss
les
pop
add
pop
pop
cmp
out
cmp
jle
faddl
pop
mov
lea
test
and
jecxz
rcrl
cs
cli
cmp
sbb
inc
pusha
pop
pop
inc
mov
jg
mov
jnp
dec
push
fcoms
sbb
rcrl
testb
pop
sub
push
mov
lcall
adc
outsl
inc
int3
xor
outsb
sbbl
std
or
pop
mov
pop
repnz
add
inc
jmp
out
cld
sbbb
xchg
adc
cmp
lcall
inc
or
pop
push
mov
or
xchg
cmpsb
lret
shr
out
inc
pop
lcall
stc
adc
test
movsb
in
jmp
fdivl
sbb
subl
loope
pop
popa
clc
repz
pop
test
shl
sbb
lods
mov
cmp
popf
out
adc
push
imul
leave
cs
mov
pop
xchg
mov
pop
mov
xchg
dec
nop
lds
rcrl
popa
mov
push
bound
stc
sbb
mov
dec
mov
and
jp
mov
and
xchg
pop
test
mov
push
push
push
cmc
push
stc
sbb
lcall
mov
fstps
xor
clc
aam
ljmp
cmp
loop
adc
cmpsb
mov
outsl
or
ljmp
pop
pop
rcl
sbb
pop
in
add
mov
pop
push
ret
or
aas
imul
cmp
scas
and
lret
shlb
or
movsb
lods
jmp
pop
pop
cs
lea
imul
adcl
outsl
sbbl
imull
pop
popf
jb
rcr
or
rorb
pop
dec
and
pop
pop
mov
imul
in
mov
mov
loope
pushf
pop
int3
icebp
fistl
cltd
push
mov
jne
push
pop
ja
xchg
pop
lock
in
adc
push
pop
flds
les
fcomps
scas
arpl
addr16
mov
ja
pop
push
adc
cmp
sbb
mov
and
movsl
sub
orb
mov
repz
addr16
sub
lret
popa
pop
mov
int
and
jno
dec
jmp
pop
je
gs
jns
cmp
or
adc
and
xor
sub
imul
push
out
xlat
add
xchg
add
ljmp
nop
stc
push
pop
lock
inc
cs
mov
js
pop
sub
shr
sbb
pop
ret
or
pushf
pop
dec
add
das
pop
cwtl
jmp
mov
sub
jl
negb
shll
and
push
push
dec
aam
iret
cmp
pop
sub
stos
mov
mov
imul
pop
dec
pushf
pop
xchg
ds
sub
movsb
adc
gs
mov
push
rorl
cmp
xor
and
push
fs
adc
mov
repz
aad
pop
jecxz
lods
movsl
add
loope
popa
sbb
pop
mov
adc
sbb
std
stos
imul
jo
mov
mov
popf
jnp
in
pop
shrl
orl
lahf
adc
inc
xor
jecxz
sub
mov
orl
test
lret
xor
dec
shr
fisttps
jle
mov
pop
int
mov
push
mov
rcrb
repnz
fwait
inc
dec
jmp
inc
subb
push
jmp
add
mov
jecxz
adc
adc
ljmp
jle
divl
push
xchg
mov
daa
pusha
stos
repz
lea
popa
jmp
add
outsb
fistl
cli
pop
lcall
lret
dec
ds
inc
cmpb
jecxz
test
sbb
mov
sti
pop
or
pop
cmp
data16
pop
seto
pop
pop
cld
xor
ljmp
iret
shl
sti
int3
inc
shll
add
push
ja
adc
or
ret
pop
out
pop
daa
sub
xchg
or
mov
mov
adc
dec
mov
enter
sbb
xchg
jmp
fidivl
push
jb
negb
cli
xchg
inc
in
lret
push
pop
adc
and
lcall
test
cmp
mov
pop
push
mov
xor
cwtl
out
push
pop
jnp
shl
mov
rcrb
cs
sarl
pop
pop
dec
pushl
inc
popf
js
mov
adc
mov
cltd
or
lock
shrl
or
clc
xor
pop
pop
sub
jne
and
jno
shl
cld
cs
iret
or
testl
ret
fs
pop
dec
xchg
or
cli
addl
pop
xlat
mov
dec
push
pop
push
sbb
sbb
push
mov
int3
scas
pop
and
xor
insb
adc
dec
dec
mov
jp
cmp
imul
dec
dec
std
pop
mov
cwtl
inc
mov
push
xchg
adc
aad
adc
mov
mov
out
push
xor
adc
jecxz
push
mov
pop
test
pop
push
orb
sahf
add
pop
xchg
psllq
aam
std
popa
hlt
movsl
mov
pop
sti
adc
clc
pop
pop
push
nopl
scas
int
xchg
fstps
xchg
pop
ret
sbb
mov
jb
lahf
xchg
cli
mov
es
xchg
incl
add
pop
mov
mov
enter
lret
sbb
and
sbb
or
mov
sub
cmp
xchg
xor
das
arpl
or
and
add
sbb
mov
faddp
imul
dec
push
inc
dec
xor
fnstenv
lea
dec
adc
inc
mov
jo
pop
lods
and
push
sbbb
add
lret
fmul
inc
cmp
es
push
fs
sub
inc
bound
aas
and
ret
test
push
or
push
jno
imul
in
cld
sbb
lret
adc
shr
outsb
sbb
mov
out
jns
cmp
xchg
push
xchg
pop
fisubs
arpl
xchg
push
pop
mov
mov
sub
pop
mov
rorl
adc
add
mov
shlb
cltd
cmp
inc
push
cmp
push
adcl
xor
mov
ror
xchg
es
mov
xchg
jecxz
aaa
inc
jecxz
pop
lods
push
fsubl
push
push
pop
sbb
sbb
xchg
mov
and
subb
shll
insl
ficompl
adcl
lret
dec
jge
dec
sub
test
sbb
fcompl
cmpl
leave
or
jecxz
dec
aad
adc
mov
inc
and
and
dec
or
xchg
movsl
mov
es
pop
subl
add
jns
push
push
add
mov
push
call
push
sbb
cld
sbb
stos
lea
mov
mov
in
es
inc
cmp
inc
pop
pop
ds
dec
cltd
mov
mov
icebp
jl
in
sub
inc
popa
and
ds
cmp
insb
xor
jge
lds
fbld
jnp
push
test
out
aaa
push
jae
sarb
dec
or
xchg
sub
lds
add
adc
jp
pop
lods
fstpl
push
stc
insl
mov
mov
enter
test
aaa
or
sbb
add
ljmp
pop
xchg
add
pop
stos
adc
xchg
dec
cmp
adc
jmp
or
test
xchg
pop
pop
pop
mov
mov
ljmp
lcall
push
cmp
inc
aad
clc
pop
mov
cli
mov
sub
cmp
pop
mov
lods
push
pop
add
and
out
js
std
xchg
xchg
pop
mov
push
xchg
adc
cmp
aas
jne
fwait
cmp
lock
jbe
sbb
cmpsl
jmp
shll
loop
mov
xchg
or
or
sbb
loop
mov
popa
fbstp
in
rcll
sub
add
scas
movsw
push
popf
mov
mov
jne
ljmp
movsl
fisubl
pop
cmp
xchg
test
out
sbb
pop
jl
push
ret
adc
mov
jmp
sub
test
or
sub
jb
cs
shrb
pop
stos
push
xchg
sub
xchg
roll
xchg
xor
cli
pop
insb
popa
add
push
xchg
or
push
xlat
mov
pop
rolb
push
dec
imul
aad
frstor
dec
pop
cltd
cmp
push
nop
lea
lret
es
jge
shl
add
lea
cmp
and
push
fwait
mov
out
cs
push
adcl
cmp
pop
mov
jecxz
negb
inc
pop
push
mov
dec
sbb
adc
pop
popa
xor
push
mov
dec
nop
fsubs
mov
pop
bnd
jmp
sub
xchg
mov
imul
mov
cmp
rol
lock
or
push
xor
mov
cmp
dec
lods
lds
cmp
insb
inc
pop
iret
push
fstpt
aad
ret
or
add
pop
pop
fs
mov
dec
mov
int3
jb
and
sbb
xor
jnp
xchg
jae
pop
xchg
pop
stc
lret
push
adc
or
and
jns
cmp
push
or
cwtl
push
arpl
hlt
scas
mov
mov
cmp
daa
sti
xchg
jno,pt
jnp
ljmp
push
pop
push
jns
cmp
sbb
inc
xor
jb
pop
add
jl
cli
adc
fsubs
push
test
jle
cmp
into
arpl
push
pop
imul
add
sbb
pop
rol
sub
mov
ret
mov
ds
pop
cmc
push
or
test
sub
pop
jbe
data16
and
bound
imul
popf
mov
adc
icebp
xchg
and
mov
and
jge
sar
ljmp
leave
sti
jns
jmp
std
hlt
pop
ljmp
shll
pop
lret
sbb
pop
shl
pop
call
popf
mov
cmp
repz
loope
push
pop
call
xor
dec
jecxz
cmp
pop
scas
or
dec
das
negl
imul
mov
into
clc
xlat
inc
sbb
test
pop
lahf
dec
sub
sysret
cmp
pop
imul
fists
ds
es
fildl
ficompl
lcall
in
mov
dec
call
es
ss
clc
jbe
and
mov
jl
fsub
sbb
ja
pop
test
sbb
or
adc
push
pop
push
mov
ljmp
pop
sub
rcl
add
leave
int
pop
lds
mov
fs
sub
inc
pop
and
push
cli
xchg
test
cmpsb
lret
dec
outsb
ret
mov
xchg
xchg
cmp
sahf
shrl
jg
cmp
negb
aam
pop
out
pop
test
adc
ret
mov
pop
les
out
iret
push
imul
add
sbb
ret
call
xchg
or
push
mov
pop
xchg
cmpsb
jb
out
test
pop
adc
mov
add
pop
stos
int
cwtl
push
mov
ljmp
je
push
adc
mov
shlb
inc
pop
lods
out
inc
ret
xor
mov
pop
push
popf
aad
lds
mov
not
push
push
les
pop
hlt
mov
push
mov
fdivr
rolb
inc
cmpsb
inc
dec
in
pop
sbb
je
or
add
fstps
imul
cmc
sub
test
lret
pop
or
in
inc
push
xchg
insl
pop
push
jg
insb
dec
pop
ss
pop
and
clc
add
pop
mov
jmp
pop
xlat
pop
lods
nop
mov
cli
inc
jmp
pop
insb
test
in
out
leave
jmp
mov
mov
pop
push
xor
fnstsw
jmp
inc
js
ss
loope
or
lcall
mov
push
cs
mov
add
repnz
xor
and
pop
adc
dec
pop
movl
aaa
sub
jmp
push
hlt
cmp
inc
push
movsl
test
jmp
xchg
xor
ret
les
xor
cmp
cmp
jle
add
sbb
gs
xchg
mov
sub
jno
pop
sbb
hlt
inc
es
in
test
push
xchg
test
lea
add
test
scas
pop
shrl
aaa
clc
ss
pop
pop
pop
lret
sahf
inc
cmp
int3
pop
icebp
jmp
adc
or
daa
inc
stc
dec
push
sbb
sbb
or
vmaxss
mov
push
adc
jo
jnp
add
or
xchg
mov
push
mov
add
cli
scas
imul
shrb
mov
xchg
push
pop
push
push
and
inc
cmp
mov
or
mov
stc
and
repz
enter
dec
testl
repnz
add
inc
mov
sbb
inc
ds
sbb
imul
lret
sub
andb
fld
push
cmp
imul
fmuls
daa
sbb
lcall
mov
ret
push
adc
hlt
dec
or
aad
pop
pop
push
pop
jmp
ljmp
push
pop
ds
mov
and
fwait
mov
inc
js
pop
dec
pop
cmp
cmp
popa
shrb
lret
pop
sbbl
out
sti
dec
dec
in
rcl
insl
int3
pop
jns
xchg
cs
shrl
mov
adc
lods
sbb
sub
jp
decl
ljmp
cli
fwait
loopne
dec
pop
sub
xor
sbb
scas
or
stos
push
mov
ja
sbb
jmp
rcl
pop
loope
sbb
in
fs
pop
mov
inc
dec
pop
or
hlt
out
lahf
mov
push
pop
inc
in
jnp
sub
push
pop
xchg
out
lods
hlt
push
lcall
aaa
mov
fnstcw
stos
cmp
mov
push
pop
cmp
fs
testb
hlt
imul
jmp
shlb
jbe
cli
bound
faddl
inc
scas
xchg
outsb
dec
mov
into
lret
aaa
push
es
loope
scas
gs
rorl
pop
push
mov
pop
sbb
xchg
jmp
decl
jmp
incb
mulb
addl
jmp
pop
in
xchg
add
aam
dec
mov
mov
in
pop
test
rolb
pop
fidivl
cmp
shrl
lds
xor
and
pushf
cwtl
cmp
pop
std
dec
cli
sti
cmpl
icebp
pop
dec
lds
sbb
lret
outsb
jae
inc
movsb
or
stos
ljmp
jnp
pop
in
fistl
ffreep
push
gs
pop
jno
add
int
dec
enter
adcb
cmp
cmp
pop
stos
push
adc
fcmovnb
inc
icebp
fcmovbe
in
cmp
shl
mov
pop
cld
out
or
cmc
daa
pop
cltd
stc
add
pop
push
jno
mov
pop
lcall
rcl
mov
mov
push
sbb
jbe
pop
add
xlat
add
sub
sub
mov
fiadds
out
push
add
lret
pop
xchg
pop
mov
into
stos
inc
pop
dec
int3
aad
les
push
lret
sar
in
and
mov
xchg
int
orl
sbb
adc
pop
ljmp
out
rcll
fidivl
push
push
mov
mov
pop
imul
ljmp
mov
mov
inc
or
mov
ret
enter
and
std
jmp
pop
mov
sbbb
and
or
movsb
fwait
ljmp
jmp
pop
and
jp
mov
add
push
rcrl
adc
add
add
add
xor
mov
cwtl
mov
out
cmp
fdivs
xor
pop
pop
ds
ret
inc
mov
dec
cmp
mov
add
neg
add
push
mov
in
cmp
pop
in
jecxz
add
cld
or
ret
or
mov
sbb
int
adc
addr16
xchg
cli
jp
cwtl
sub
push
cmp
movsb
xchg
ss
out
xchg
cmp
adc
jae
push
lcall
out
inc
xchg
das
dec
popa
jecxz
test
adc
pop
popf
and
jmp
ljmp
and
popa
push
fldt
pusha
cmp
jns
pop
cmpsl
call
add
imulb
les
std
adc
xor
jnp
addr16
icebp
mov
cmp
sbb
cwtl
movsb
pop
cmovge
arpl
cltd
ljmp
test
dec
idiv
dec
xchg
sbb
scas
fs
pop
dec
dec
ds
xchg
or
sbb
pop
cli
stc
lret
dec
jp
loop
sahf
and
jno
ss
fiadds
in
adc
dec
jl
imul
jle
das
push
ficomps
lcall
ret
dec
lret
and
popa
mov
shlb
stc
fwait
rcrb
rclb
loopw
pop
out
lret
mov
imul
out
ljmp
pop
pop
es
add
imul
ret
dec
sub
cs
test
dec
xor
mull
rorl
out
clc
stc
add
shrl
jl
sbb
mov
push
mov
pop
into
xchg
lods
clc
mov
mov
pop
or
addr16
push
icebp
dec
and
repnz
fistps
jnp
adc
or
pop
js
sar
dec
push
pop
ss
iret
int
mov
mov
das
lock
pop
dec
sub
add
cltd
and
repz
mov
sbb
push
pop
adc
imul
sbb
mov
stos
pop
shr
cli
mov
xchg
push
xor
adc
rorl
scas
cmp
test
pop
es
les
pop
adc
pminub
arpl
and
pop
mov
int
push
mov
pop
es
test
ds
movsl
add
movsb
adc
pcmpgtb
or
xchg
iret
push
push
out
popa
imul
add
cld
add
xchg
repz
pop
add
mov
pop
adc
dec
inc
clc
sbbl
or
bound
cmp
testb
dec
sbb
pop
inc
lahf
hlt
xor
cld
js
dec
ss
mov
pop
cmp
push
andl
mov
or
imul
or
push
lods
pop
adc
inc
jb
xor
fs
daa
arpl
rorl
or
testb
jecxz
xchg
aam
jo
fs
add
pop
jns
mov
into
fstpl
test
aad
lret
outsl
adc
in
loope
push
jae
mov
pop
fisubl
rclb
outsl
je
mov
in
push
adc
pop
or
sub
push
add
jle
test
jae
adc
std
push
and
mov
and
cmp
pop
jge
sbb
pop
popf
outsb
add
push
adc
cmc
in
pop
mov
icebp
aad
mov
add
loope
mov
or
pop
push
sti
int
ja
fdiv
outsl
adc
ds
pusha
test
jp
repnz
pop
movsl
arpl
jb
andb
adc
repz
mov
sbb
movsl
pop
jmp
rolb
add
js
arpl
push
jnp
and
scas
dec
sbb
sbb
or
pop
add
scas
mov
cs
lock
je
sbb
aad
pop
std
loopne
xorb
mov
add
ficoml
ljmp
sarl
idivb
adc
dec
mov
cltd
divl
rcrl
inc
push
andb
xor
int3
sar
pop
jnp
adc
mov
sbb
es
jg
enter
clc
inc
hlt
pop
adc
xor
cmp
mov
jp
add
cmpsb
cmc
jg
jae
into
sbb
add
in
sub
push
lcall
xor
and
ficompl
adc
repz
pop
rcrb
faddl
pop
pop
clc
and
push
or
rorb
scas
mull
pop
dec
test
loop
cmp
out
pop
sub
je
pop
inc
pop
pop
sbb
int
and
push
test
pop
bnd
stos
mov
lods
pop
pop
add
inc
push
cld
pop
into
orl
lret
inc
test
pop
mov
jne
pop
popa
xor
test
mov
repz
pop
and
dec
jp
ss
mov
popa
pop
leave
ds
movsl
lds
clc
push
cwtl
xchg
and
cmp
push
mov
xchg
cmp
adc
daa
cmp
int3
push
addl
pop
popa
mov
int3
pop
mov
insl
sub
sub
test
shlb
inc
sbb
in
icebp
and
fcom
pop
inc
imul
cli
incl
pop
cmp
nop
pop
loope
xchg
pop
xor
and
repnz
int
rclb
hlt
scas
test
cs
test
mov
sahf
popa
lock
out
mov
cmp
xor
pop
mov
push
adc
add
cmc
lea
sbb
popa
push
icebp
add
fdivr
ret
mov
add
pop
int3
scas
clc
shll
mov
cmp
sub
pop
ret
mov
adc
cmpb
pop
cmp
inc
adc
xchg
push
jmp
mov
test
sahf
xor
mov
pop
push
pop
mov
inc
xchg
jne
ret
fidivs
jmp
popa
pop
mov
movb
lahf
jle
orl
sub
jbe
enter
lret
jl
xchg
mov
inc
xor
shlb
sub
pop
inc
js
clc
mov
push
dec
pop
ret
dec
mov
push
mov
pop
cmp
aam
pop
sub
and
pushf
sbb
push
inc
jmp
lret
fwait
scas
mov
mov
jle
inc
mov
dec
loop
rcrl
jl
ficoms
add
insb
dec
pop
arpl
test
mov
xor
mov
jmp
imul
push
push
fiaddl
enter
cs
out
cmp
inc
ljmp
pop
insb
mov
out
dec
test
test
in
mov
icebp
mov
mov
dec
cwtl
imul
sbb
mov
jno
stos
lea
pop
fs
and
cltd
es
mov
aad
jle
pop
inc
cmp
jmp
xor
dec
call
das
jbe
pop
cs
fcoml
sub
pop
mov
dec
xchg
iret
pop
add
mov
sbb
scas
or
sub
sahf
mov
pop
fs
add
push
popf
push
jmp
subb
in
and
pop
loopne
push
cs
sbb
jmp
mov
inc
mov
push
and
inc
cmp
jb
push
ret
pop
sbb
mov
arpl
pop
into
xor
cmp
in
push
mov
jecxz
lahf
xchg
pop
ret
cmp
outsl
inc
sbb
scas
aas
popf
cwtl
or
stos
jmp
ds
push
pop
aaa
out
adc
jne
pop
xor
sbb
mov
xor
adc
jecxz
and
or
loopne
les
xor
ss
andl
pop
xor
or
push
pop
xchg
scas
subb
pop
mov
inc
sub
test
sbb
sbb
add
loope
pop
cmpsb
cmp
xchg
jmp
imul
out
xchg
mov
inc
cwtl
push
or
lret
add
xor
xor
mov
iret
xchg
push
insb
filds
mov
aad
pop
adc
dec
mov
loop
ret
js
inc
xor
pop
lret
into
mul
mov
out
jge
leave
dec
adc
popa
bound
lods
cmp
mov
loop
jmp
pop
pop
std
nop
ss
ret
dec
gs
cmp
adc
push
xchg
pop
xor
mov
mov
pop
and
shll
sahf
out
and
push
nop
jg
inc
pop
jp
mov
push
pop
lret
hlt
push
mov
push
daa
and
mov
pop
cmp
mov
mov
popa
mov
dec
sub
stos
fisubrs
pop
mov
popf
sahf
sarl
dec
xlat
add
push
push
mov
adc
inc
cmpsb
cli
jb
sti
push
rcrl
cmp
lods
sub
sub
cmp
or
xchg
inc
jmp
test
pop
and
xor
mov
xchg
mov
inc
outsl
lds
pop
push
shr
push
pop
cwtl
xorb
pop
iret
test
ret
cmp
and
incl
pop
xchg
out
lock
sar
pop
dec
mov
or
int3
push
dec
test
push
das
lods
add
xor
loop
rcll
shrb
outsl
in
add
xchg
call
mov
jbe
out
loopne
rcrl
pop
and
jns
adc
sub
and
leave
lds
inc
sbb
movb
mov
pop
xor
push
pop
xor
push
mov
jmp
sbb
pop
xchg
jle
pop
stc
stos
mov
insb
pop
push
mov
outsb
loope
push
imul
stos
pop
je
push
xchg
lds
repnz
daa
sbbb
push
cmp
cltd
mov
out
or
pop
enter
xchg
lock
fstpl
es
arpl
mov
push
test
mov
jmp
jo
add
inc
xchg
fcmovu
and
enter
or
sbb
add
imul
cmpsb
pop
cmc
ljmp
push
pop
inc
inc
lret
pop
enter
mov
shlb
and
xchg
and
fbld
aam
mov
inc
xchg
jg
inc
cmp
jmp
cld
pop
pop
xchg
cmp
xor
mov
dec
cltd
test
je
ljmp
pop
addr16
mov
sbb
mov
flds
and
adc
pop
jne
dec
jmp
jp
push
test
fsubs
add
and
aad
xor
int
hlt
ja
outsl
sbb
test
popa
es
dec
pop
gs
into
or
xchg
push
fcompl
stos
outsl
outsb
je
mov
or
clc
mov
add
dec
sbb
jne
pop
xchg
push
cmp
or
adc
jecxz
sbb
repnz
ds
pop
adc
or
xchg
mov
pop
shrl
jb
lcall
jmp
or
jl
xchg
fwait
add
nop
pop
fsubrp
push
push
sub
xor
push
pop
sub
mov
jbe
pushf
pop
dec
add
mov
inc
fstpl
cmc
push
or
aas
add
dec
loope
xchg
pop
cmp
mov
leave
pop
inc
inc
jecxz
or
sti
pop
and
lods
popa
add
pop
adc
lock
stos
pop
sbb
or
andb
popf
push
push
push
cmpl
pop
jl
int
ds
jmp
and
xorl
inc
cmp
mov
and
pop
pop
test
mov
pop
mov
inc
or
pop
test
clc
jo
push
push
xor
dec
lret
or
fwait
movsb
pop
mov
add
imul
roll
lret
dec
xor
mov
xor
sbb
and
mov
xchg
neg
adc
dec
and
sbb
jmp
add
ret
push
pop
dec
mov
pop
or
push
into
or
adc
add
jno
rorb
push
pop
xor
loop
cmpsl
dec
adc
cmp
ss
out
popf
xorl
sbb
dec
repz
xor
dec
jp
dec
mov
ss
pop
bound
sbb
dec
push
push
in
scas
pop
push
mov
mov
cmpsl
mov
outsb
push
push
pop
or
push
mov
sub
lret
push
dec
mov
dec
enter
adc
adc
pop
pushf
fwait
rcl
dec
inc
out
into
add
in
xor
fistpl
mov
and
mov
scas
stos
ljmp
jb
pop
andb
lds
cmp
out
lea
xchg
std
hlt
jae
sub
pop
or
rcr
jno
cwtl
leave
pop
mov
mov
addr16
lcall
add
ljmp
pop
jp
andl
lret
mov
and
fadd
push
sub
dec
fldl
leave
sub
adc
mov
sub
push
fisttpll
fcomp
cmp
pop
dec
in
pop
enter
dec
and
cltd
xor
jg
add
imul
inc
sub
sbb
inc
and
jge
xchg
stc
and
fwait
cmp
mov
or
adc
inc
sti
rcl
xor
movsb
cmp
pop
pop
int3
int
cld
push
pop
in
sub
xchg
in
cli
xchg
ret
mov
ror
push
inc
ljmp
jbe
adc
nop
mov
pop
cmp
push
jp
xor
push
cmpsb
pop
loop
cmpl
push
fbstp
imul
lcall
push
loopne
push
pop
xchg
sbb
cmp
mov
pop
pop
jp
dec
pop
out
inc
loope
pop
push
push
loop
and
dec
leave
stos
lcall
pop
push
addl
push
and
test
and
xchg
and
jmp
cs
cmp
xchg
mov
jmp
cmc
ret
push
es
push
fcmovb
inc
pushf
mov
aaa
pop
stos
xor
or
outsb
pushf
loope
popa
mov
imul
or
inc
test
sbb
ret
lea
pop
mov
ds
inc
je
xchg
pop
sahf
iret
ljmp
dec
popa
mov
nop
mov
mov
pop
sbb
mov
pop
and
xchg
popf
loopne
xchg
adc
mov
pop
movsl
ret
cs
or
cwtl
in
nop
push
lahf
dec
aas
ja
ds
pop
inc
enter
popa
push
push
sub
jle
mov
icebp
scas
xlat
bound
cltd
mov
dec
pop
test
int3
jno
imul
xchg
mov
jecxz
pop
add
je
sub
bound
loop
mov
aas
idivb
xchg
adc
dec
rclb
pop
subb
push
dec
lcall
xchg
add
shlb
lret
dec
mov
cmp
pop
fdivrs
sbb
adc
popa
adcb
jb
pusha
lds
mov
add
push
and
ret
pop
jmp
rclb
pop
xchg
push
mov
into
cmpl
stos
lods
sub
rcrl
cli
add
test
daa
ds
cwtl
iret
pop
cmc
mov
outsb
das
pop
cmp
imul
dec
cmpsb
ret
or
ljmp
pop
out
push
adc
cmp
cltd
fwait
loopne
fprem1
and
fld1
popa
adc
loop
cltd
inc
jns
sub
jecxz
shrl
fadds
repnz
and
daa
test
push
mov
dec
not
dec
stos
inc
and
out
jge
pop
sbb
aaa
jmp
mov
pop
or
ret
fldt
inc
sub
in
mov
adc
sbb
addr16
pop
test
and
or
inc
cmpsb
popf
fnstcw
pop
cmp
daa
lock
xor
dec
jbe
or
pushf
pop
xor
and
mov
dec
ret
fbstp
cmpsb
push
cmp
mov
call
cltd
lahf
dec
dec
ljmp
or
xchg
dec
orb
push
mov
jo
jns
loop
pop
cmp
pop
cld
or
ficompl
add
add
pop
nop
ficoms
pop
movsb
out
inc
xchg
cmp
xchg
push
pop
mov
pushf
jo
jae
pop
sub
pop
fisttpl
inc
pop
mov
ss
sbbl
pusha
dec
aam
xor
xchg
sbb
and
jmp
jmp
jge
std
jae
movsb
pop
dec
add
dec
jbe
and
inc
adc
out
lock
lcall
popf
stos
mov
push
sbb
loope
fwait
xor
ljmp
adc
push
cmp
or
jno
int
js
sarl
or
mov
push
dec
lea
vaddsd
xchg
adc
jb
loopne
mov
jecxz
in
pop
jmp
mov
jne
mov
lcall
ljmp
arpl
jp
and
jo
jno
out
cmpsb
gs
adc
jge
faddl
sbb
filds
cltd
pop
jo
push
lcall
fistpl
mov
inc
bound
mov
xchg
dec
adc
ja
jnp
iret
pop
adc
mov
and
jnp
push
xchg
cwtl
push
xchg
pop
stos
cmp
imul
in
addb
mov
pusha
xor
ror
pop
xchg
sub
pop
jmp
mov
pop
ljmp
push
popa
shlb
and
pop
movsl
xchg
pop
pop
push
hlt
xlat
mov
and
inc
enter
incb
sub
imul
sbb
pop
and
popf
push
daa
jmp
sti
je
inc
pop
pop
pop
ljmp
jae
mov
mov
clc
arpl
mov
mov
jo
jb
fistps
sahf
pop
subl
xchg
lods
add
pop
inc
sbb
inc
js
pop
jp
push
cmp
dec
jle
dec
xor
into
fwait
xchg
int3
pop
popa
imulb
test
pop
xchg
adc
inc
sarl
in
inc
cs
pop
stc
mov
sub
pop
mov
add
pop
or
sti
add
lcall
jmpw
pop
ficomps
js
push
popa
test
cwtl
lds
push
outsl
pop
push
pop
out
es
jp
adc
mov
dec
push
xor
cmp
in
xlat
add
pop
xchg
shll
lret
mov
sbbb
cltd
push
mov
or
jnp,pn
loop
aad
jmp
jl
jecxz
scas
sbb
cld
ret
fs
adc
stos
je
mov
add
ljmp
pop
pop
push
pop
jmp
xchg
ljmp
or
xchg
push
pop
jl
pop
jmp
or
out
imul
inc
pop
adc
jecxz
sbb
pop
inc
test
mov
lret
add
push
loop
inc
test
pop
into
insl
push
dec
jne
jecxz
pop
pop
popf
sti
jmp
pop
push
xchg
adc
mov
or
loope
xor
nop
inc
adc
jp
mov
cmpsl
or
or
xor
daa
dec
movl
adc
les
iret
ss
mov
dec
jns
sub
push
xchg
pop
fimuls
add
imull
jne
sub
ljmp
rorb
adc
loop
clc
add
push
push
jmp
movsl
fidivrl
int
cmp
push
inc
cmpb
pop
hlt
inc
jns
outsb
lds
xorl
ljmp
enter
cld
loope
jmp
pop
scas
ffreep
adc
sub
mov
and
pop
iret
mov
imul
or
mov
cmp
xchg
mov
addr16
popf
ficompl
xor
push
or
sub
stc
inc
pop
add
push
cli
inc
push
nop
ficompl
ret
les
adc
pop
push
and
or
out
adc
xchg
mov
push
hlt
add
fs
mov
add
std
inc
pop
xlat
test
ljmp
leave
adc
or
in
ja
jb
xor
ljmp
popf
adc
push
mov
xor
pop
add
sub
aas
idivb
jl
fcompl
cwtl
pop
sub
push
jmp
lcall
and
xchg
dec
pop
mov
cmp
push
cmp
aad
xlat
pop
test
mov
mov
dec
jb
push
adc
decb
ficoml
pop
mov
sub
pop
push
mov
xor
in
mov
mov
and
or
mov
shr
sbb
adc
adc
rcrb
pop
ds
cmpsl
jg
or
aaa
pop
imul
int
pop
orl
and
fstpl
mov
gs
loope
pop
mov
lock
lods
pop
insl
jecxz
push
sub
test
mov
push
pop
insb
daa
or
adc
test
inc
fwait
lcall
xchg
or
enter
and
xor
mov
pushf
pop
insb
ss
test
pop
adc
xchg
or
popf
imul
sub
pop
pop
nop
insb
mov
push
cmp
repnz
cld
add
push
add
fndisi(8087
mov
imul
pop
es
cmpl
push
adc
xor
xor
xchg
mov
and
push
pop
jb
xchg
xor
pop
sub
jnp
rcrl
and
data16
aad
fwait
loope
or
movsb
sub
jmp
pop
cmc
mov
mov
xchg
jecxz
mov
mov
or
mov
adc
outsb
jecxz
cltd
xorl
popa
xor
and
dec
rcrl
fwait
scas
movsb
jae
insb
mov
hlt
out
and
cmpsl
stc
inc
push
mov
sub
add
jbe
popa
pop
and
pop
jb
gs
ret
daa
xchg
push
call
int
push
ljmp
jecxz
cli
push
sbb
mov
stc
mov
popa
jne
gs
jae
outsl
pop
loop
movsl
mov
je
jmp
jno
lahf
mov
pop
cs
popf
cmc
xchg
xchg
negl
push
jmp
fldt
loop
fisubl
add
dec
popa
pop
xchg
dec
jmp
pop
icebp
push
pop
cs
ljmp
push
pop
ror
test
xchg
pop
bound
ljmp
jmp
dec
rol
pop
mov
dec
cmp
pop
jns
sub
mov
mov
gs
leave
je
pop
imul
lret
clc
out
dec
add
mov
jp
test
dec
pop
lret
fildl
push
sub
stos
rol
adc
cmp
or
inc
push
shlb
mov
inc
test
pop
dec
push
sub
and
fistps
dec
ja
imul
dec
pop
add
hlt
sarl
mov
push
ss
pop
cmpsb
testl
xor
mov
pop
inc
mov
jmp
pop
mov
scas
mov
cmp
add
xor
mov
pop
sbb
inc
jno
cmpsl
inc
jne
pushf
pop
xchg
sbb
or
jecxz
dec
push
sub
pop
aas
pop
xchg
popa
popf
jg
out
mov
pop
add
xchg
mov
mov
mov
test
mov
mov
test
pop
aad
inc
sub
or
out
cmp
mov
lds
jg
mov
decl
cmp
inc
pop
shr
and
xrelease
lret
pop
loope
or
mov
or
mov
ljmp
test
mov
fistps
pop
jns
add
popf
loopne
or
adc
pop
inc
adc
pop
add
mov
dec
and
pop
add
push
or
mov
pop
enter
dec
add
popf
dec
data16
outsb
cmp
out
xchg
and
cltd
daa
pop
repz
push
dec
cmp
bswap
adc
imul
scas
or
pop
mov
adc
cli
xchg
aam
pop
ja
sbb
inc
popa
sbb
pop
xchg
scas
mov
push
pop
jg
mov
pop
ljmp
imul
sbb
sbb
enter
cmp
jmp
push
lds
push
mov
sahf
mov
cs
pop
sub
popfw
out
insb
pop
mov
dec
int3
mov
ret
adc
addl
adcb
mov
push
push
testl
push
icebp
or
jbe
pop
push
fiaddl
cltd
and
mov
push
fcom
mov
mov
ret
and
push
fcmovbe
and
dec
push
popf
lret
pop
sti
jnp
push
dec
jb
pop
cs
ja
outsb
int3
push
adc
test
shll
dec
cmp
mov
pop
orl
xchg
enter
xor
insl
pop
jnp
js
add
lods
mov
ljmp
pop
sub
jmp
push
insb
add
push
inc
mov
mov
jmp
dec
lcall
ljmp
mov
sub
or
pop
neg
push
push
repz
jbe
ss
pop
xchg
mov
out
push
pop
sbb
xor
push
push
sbb
jb
xchg
sub
lods
inc
les
lea
in
push
cmc
shrb
std
mov
xor
out
pop
test
xor
sbb
ficoml
sub
mov
stos
jne
pop
and
imul
fucomi
insl
cwtl
popf
jnp
xchg
add
dec
pop
or
test
dec
pop
adc
lods
hlt
and
add
imul
movsb
push
mov
and
lods
pop
fs
lcall
pop
dec
sahf
in
inc
aas
fnstcw
popa
mov
sbb
clc
dec
jp
pop
inc
push
mov
push
and
ret
imulb
arpl
das
adc
jecxz
jl
sub
push
push
ja
add
dec
fstpt
lcall
jmp
das
sahf
leave
mov
push
or
add
out
push
sar
jg
push
ret
out
pop
ja
notb
mov
inc
push
rcrb
jno
gs
cmp
sub
mov
cmp
aam
jp
into
test
inc
pop
aad
jbe
or
pop
pop
and
scas
out
push
sbb
pop
adc
inc
mov
pop
insb
inc
push
cwtl
aaa
sub
arpl
mov
lds
fidivrl
loope
jmp
sbb
and
insl
aam
outsb
sub
scas
xchg
pop
roll
ljmp
lods
push
push
das
push
inc
pop
divl
int3
pop
mov
or
insl
mov
nop
adc
into
ss
inc
jl
dec
testb
xchg
sbb
mov
xchg
adc
je
scas
and
ljmp
in
lds
pop
jmp
cmp
jecxz
mov
mov
xor
and
pop
in
xchg
aad
and
dec
push
pop
ja
pop
mov
push
divb
in
lcall
fldenv
mov
roll
pop
insb
pop
ljmp
jbe
add
pushf
jecxz
fisttpll
mov
xchg
pop
push
in
pusha
cmp
mov
in
lcall
mov
cmp
dec
or
push
xchg
ret
pop
add
shrl
fbld
loope
addl
sbb
cmp
jb
imul
push
push
mov
xchg
insb
sbb
ficoms
or
daa
rclb
pop
rcll
leave
gs
xchg
bound
cwtl
or
adc
push
repnz
pop
scas
and
push
loopne
and
jb
xchg
and
sub
sbb
or
aad
lcall
pop
xor
rolb
mov
adc
mov
sub
call
or
jne
or
adc
pop
dec
push
clc
cld
mov
popf
push
pop
inc
movsl
xor
jl
push
jo
push
pop
dec
decl
pop
push
push
cmp
xchg
ljmp
or
out
inc
sbb
dec
xchg
jmp
pop
add
imulb
or
or
sbb
inc
stos
adcb
insl
mov
sti
js
popf
mov
test
sub
imul
pop
dec
xor
push
popa
imul
mov
sub
pop
push
fdiv
adc
jbe
pop
ja
loop
ret
je
daa
ljmp
inc
mov
mov
leave
std
mov
mov
push
add
and
xor
and
dec
pop
das
xor
pusha
pop
push
loopne
fidivrl
jo
inc
sbb
popa
lcall
pop
or
jl
mov
jbe
sub
add
adc
addl
mov
fimull
pushf
and
out
pop
aaa
xor
out
cmp
sbb
sti
scas
pop
push
mov
mov
aad
sbb
lcall
jp
aam
mov
cmp
inc
mov
push
cwtl
fcomip
dec
lea
push
lcall
mov
orl
lods
stos
add
pop
or
fcompl
inc
sbb
rol
mov
not
pop
push
sarl
mov
arpl
imul
cs
pop
rcll
das
ret
pop
movsl
mov
lcall
jns
pop
mov
dec
scas
mov
cmpsl
pop
dec
ret
pop
imul
mov
pop
mov
leave
and
pop
fs
test
pop
ljmp
jnp
pop
icebp
mov
xchg
jg
in
cli
push
test
pop
dec
pop
inc
ja
fldcw
sahf
xchg
out
mov
jecxz
leave
popf
rcl
xor
in
inc
ss
imul
pop
mov
jns
das
icebp
or
push
mov
push
orb
ja
test
jo
pop
int3
daa
jno
xchg
or
das
shll
hlt
enter
sub
outsb
addr16
fcompl
pop
popf
push
jnp
cwtl
push
cmc
or
pop
xlat
jecxz
lea
stos
xchg
push
popa
and
pop
out
dec
out
cmp
mov
ss
pop
xor
add
fwait
mov
cs
cmpsl
inc
mov
test
lret
push
pop
mov
fidivl
pop
xchg
xchg
inc
add
push
xor
cli
ds
int
or
mov
push
push
mov
push
push
insb
sbb
push
cmp
pop
xor
ret
xchg
aas
adc
cli
add
sub
xchg
mov
bound
sbb
push
test
repz
push
mov
adc
in
mov
test
pop
test
inc
adc
push
ret
and
lret
pop
xchg
ja
push
fisubl
out
mov
mov
or
or
add
pop
mov
aaa
test
mov
std
xchg
aad
mov
cmp
or
pop
push
lods
ja
mov
pushf
fcompl
pop
cmp
jecxz
pop
dec
add
push
outsb
sbbb
adcb
lock
dec
pop
out
repz
sbb
xor
cld
pop
add
mov
jmp
ret
out
sub
cld
sbb
popa
adc
pop
adc
xchg
push
mov
sub
fwait
and
bound
push
sbb
push
jnp
pop
int
cli
sti
movsl
mov
push
inc
mov
in
icebp
fidivl
aam
pop
xchg
mov
insl
es
mov
mov
cltd
shr
pop
shrl
ljmp
jmp
cli
fwait
lret
pushf
pop
and
jle
lcall
and
pop
inc
test
push
fcmovu
rcrb
push
fimull
pop
lea
xchg
dec
lds
add
arpl
dec
bound
pop
fdivrs
cld
outsl
out
inc
cltd
testl
jmp
push
mov
cmpl
loop
leave
nop
sbb
sbb
ffree
dec
push
jne
pop
in
int
and
push
pop
mov
int3
adc
fdivrl
lret
repnz
pop
int
jmp
fmul
push
sbb
repz
popf
decb
insb
push
pop
outsl
push
push
pop
clc
ret
dec
lahf
mov
fsubs
inc
inc
or
jmp
xchg
ret
mov
mov
daa
sub
or
pusha
pop
out
mov
push
jb
mov
jno
test
cmc
xor
pop
xchg
push
xchg
pop
popa
cmpsl
ds
mov
aam
push
push
push
insl
inc
subl
jne
sub
adc
pushf
in
pop
js
stos
sub
out
call
pop
mov
data16
mov
test
imul
aad
mov
mov
push
jbe
shll
pop
adc
loope
cli
mov
and
pop
inc
xchg
pop
in
adc
hlt
imul
and
cmp
aad
lea
inc
inc
jmp
icebp
sbb
fbstp
adc
into
mov
jmp
imul
arpl
push
sbb
loope
dec
dec
pop
inc
and
pop
inc
fdivrs
popf
ljmp
mov
or
jmp
jp
ljmp
push
pop
addr16
ret
mov
hlt
std
fcompl
pop
subl
xchg
movl
je
cmp
js
ret
mov
or
flds
pop
icebp
negl
sub
jge
jbe
jmp
sbb
pop
mov
jl
pop
enter
mov
xchg
jecxz
xchg
mov
cs
sahf
push
pop
pop
push
xchg
jae
dec
pop
ljmp
push
pop
cmp
daa
xchg
add
cltd
imul
pop
xor
inc
xchg
ljmp
loop
out
ret
dec
cli
pop
jp
lret
push
mov
pop
shrl
fidivs
xchg
orb
cmp
dec
inc
rcrl
pop
sub
roll
test
into
sahf
jge
sbb
mov
mov
ds
jnp
mov
pop
pusha
dec
xchg
xor
stos
jae
jb
in
push
sbb
mov
sub
pop
loop
bswap
mov
dec
or
aam
dec
mov
dec
in
je
jp
in
pop
push
jnp
add
jno
int
fidivs
or
push
sbb
pop
jecxz
push
pop
mov
gs
add
pop
cltd
and
popf
push
ljmp
fs
scas
movsl
out
mov
jb
or
inc
ljmp
mov
cs
aaa
addr16
pop
lea
mov
xor
dec
xorl
pop
clc
rorb
pop
pop
mov
mov
xchg
test
aam
xchg
aas
hlt
pop
aaa
jbe
pop
imul
mov
pop
addr16
shrb
cmc
push
add
pop
push
sbbb
cmp
sub
out
xchg
mov
imul
lret
jae
cwtl
pop
test
fucomi
pop
xchg
lds
pop
sbb
dec
sub
xor
push
clc
repz
push
pushf
hlt
in
stos
jno
ljmp
sub
test
cmpsl
and
or
pop
inc
xor
pop
mov
push
adc
push
imul
add
add
scas
loope
sbbb
mov
out
inc
cmp
or
sbb
mov
cmp
scas
jne
cmp
outsl
adc
or
int
pop
ret
and
pop
lret
jb
cli
cs
ficompl
pop
add
push
shrl
test
outsb
loope
push
idivl
and
fldl
pop
popa
imul
pop
lret
add
lcall
les
pop
popa
call
mov
pop
jle
mov
pop
sbb
push
scas
fidivl
xchg
jnp
mov
add
dec
ret
std
jge
lds
rcll
and
pop
or
mov
add
inc
clc
pop
push
pop
adc
xor
pop
dec
jmp
jmp
pop
add
adc
mov
fdivrs
and
xlat
adc
push
pop
aam
add
xchg
test
sbb
sbb
dec
pop
scas
repz
pop
sahf
mov
adc
xor
mov
imul
sti
mov
adc
aam
outsb
ret
pop
mov
test
mov
enter
aad
sbb
pop
push
arpl
push
addb
cmp
pop
and
xor
dec
inc
xchg
push
jbe
dec
mov
cwtl
and
in
pop
add
ss
push
mov
xchg
sub
inc
cmp
sbb
mov
cltd
pop
mov
dec
ljmp
pop
test
test
fcomps
mov
insl
shrb
mov
push
dec
jno
fists
pop
pop
xchg
int
mov
dec
dec
leave
xchg
and
sbb
xorl
sub
adc
push
pop
out
es
in
in
or
aam
jle
pop
add
pop
jl
int3
sub
pusha
pop
sub
push
pop
cmpsb
arpl
push
pop
stos
or
cmp
push
subl
insb
jecxz
pop
pop
sbb
mov
cmp
sbb
sahf
lods
push
pushf
adc
pop
add
lcall
call
sbb
mov
pop
outsb
jae
dec
bound
jmp
pop
arpl
push
std
outsl
mov
ljmp
movsl
int
int
out
insb
jbe
pop
arpl
xchg
iret
mov
mov
cwtl
sbb
lods
imul
sbb
sub
mov
das
xsha256
cmpsb
push
mov
outsl
dec
mov
imul
jmp
pop
push
outsl
jb
mov
or
daa
jl
sbb
sbbl
cld
sbb
mov
mov
pop
lret
adc
xor
mov
pop
push
cs
jmp
adc
jbe
add
int
adc
or
jmp
pop
mov
or
push
rcrl
mov
cs
cli
lret
push
sbb
mov
pop
frstor
leave
push
cmp
pop
loop
xor
arpl
add
adc
sbb
pop
inc
notl
dec
pop
jp
aam
mov
movsb
xor
and
pop
loope
jmp
push
stc
loopne
shr
and
push
pop
cmpsb
add
lods
lods
test
mov
ficompl
jo
cmp
or
sub
pop
stos
f2xm1
decl
or
jo
aad
loop
pop
xchg
xor
and
inc
xchg
pop
adc
mov
pop
out
mov
push
mov
push
dec
jns
test
cltd
inc
push
not
rcr
lcall
pop
and
sub
pop
pop
inc
add
mov
ficomps
lahf
loop
pop
scas
lock
imul
repnz
add
mov
xchg
jne
ficoml
das
inc
adc
je
jo
std
pop
pop
xchg
mov
inc
fdivrs
leave
loop
ljmp
mov
xchg
mov
cmp
pop
jl
das
lods
cmp
fidivrl
lret
std
pop
stos
out
pop
pop
xor
push
mov
cwtl
lret
mov
lock
fbstp
fstpl
imul
jae
inc
pop
mov
inc
fbld
insl
adcl
add
pop
inc
imul
daa
cwtl
adc
rorl
xchg
xlat
jg
pop
and
in
add
cltd
popa
hlt
push
and
in
bound
mov
or
pop
xor
push
xchg
gs
mov
cmp
sub
mulb
pop
mov
mov
adcl
dec
insb
jg
push
add
in
sahf
jb
pop
cmpsb
vmovntpd
test
popa
sub
imul
pushf
into
pop
cmpsl
nop
std
add
test
pusha
push
mov
inc
push
mov
insl
fsubrl
ret
mov
dec
cld
fdivs
or
and
mov
fcomps
pop
into
xchg
add
mov
push
xchg
cs
adcb
mov
cmp
jp
sub
mov
sbbb
dec
xor
pop
ljmp
insb
pop
mov
pop
pop
aad
xchg
les
shl
ljmp
out
or
sbb
mov
sub
rcll
push
jmp
aas
mov
test
stc
notb
sbb
pop
ljmp
cwtl
xor
pop
sub
lret
jge
nop
push
stos
popf
jp
pop
push
outsl
adc
bound
cmc
aaa
pop
imul
ljmp
mov
sbb
test
mov
dec
dec
test
push
aam
movsb
xchg
mov
adc
sbb
add
pop
add
imul
clc
rcrl
mov
pop
mov
mov
pop
add
mov
bound
stos
sub
repnz
mov
sahf
movsl
je
pop
cli
ds
xorb
sub
daa
pop
enter
xchg
pop
jo
paddd
rorl
pop
loope
mov
mov
pop
lea
pop
inc
popf
cmc
lret
cmpl
and
jbe
pop
sub
repnz
dec
cmpsb
outsl
lret
jo
xor
push
adc
cmp
push
insl
mov
push
cld
pop
mov
add
ficompl
cmpb
in
mov
pop
pushf
push
jb
sub
xor
ljmp
sub
aas
pop
or
and
mov
jp
dec
jne
lods
insb
movsl
pop
adc
mov
and
aad
les
ficompl
dec
cltd
xor
pop
pop
mov
aaa
test
dec
push
xor
pop
cmp
jecxz
test
sbbl
add
dec
scas
push
sub
fildll
arpl
cmp
in
pop
push
jecxz
dec
imul
pop
movsl
pop
adc
out
test
sbb
insl
loope
rcr
inc
jg
jb
in
pop
icebp
test
xchg
pop
subl
push
fcoms
mov
jge
addr16
rcl
pop
xor
or
inc
or
push
bound
xchg
ret
movsb
fbstp
addr16
inc
mov
and
fdivs
ret
shlb
mov
vxorps
xchg
lret
lret
data16
movsl
test
ret
pop
mov
cwtl
cltd
outsb
not
cld
sbb
pop
pop
ljmp
jle
movsl
inc
adc
mov
pop
push
mov
lds
jp
pop
and
adc
lock
mov
insb
shrl
push
mov
out
ret
ja
inc
repnz
repz
inc
andb
mov
pop
insl
lock
js
ret
pop
xor
imul
clc
add
cmp
jb
push
pop
stos
and
push
cwtl
pop
sahf
push
repz
mov
jge
lcall
cli
shr
cmp
or
ja
pop
cmpsb
xor
imul
push
cmp
das
lcall
add
jmp
fs
int3
sbb
mov
adc
shlb
sub
pop
jns
es
das
test
or
filds
inc
pop
push
mov
scas
pop
jge
push
lcall
call
xchg
inc
inc
pop
daa
ror
jae
clc
adc
stc
and
and
test
negl
push
das
xchg
mov
pop
add
sbb
cmp
lds
inc
cmc
fiaddl
sub
mov
pop
jp
xchg
sti
push
dec
out
xchg
cmp
mov
repnz
and
ljmp
mov
sub
jo
sub
jno
fs
pop
cli
xor
jmp
jb
inc
mov
fisttpl
ret
test
dec
mov
repnz
popa
cmp
lret
jbe
pop
pop
xor
pop
cmpsl
int3
mov
inc
cmpsb
aad
push
inc
aam
shll
pop
lea
inc
gs
shl
faddl
hlt
pop
adc
or
pop
out
ljmp
pop
and
arpl
add
test
aaa
push
push
jg
adc
xchg
push
pop
mov
push
jb
shrl
repnz
inc
jmp
mov
jne
pop
cmp
dec
ljmp
mov
jmp
out
arpl
pop
call
ljmp
jp
imul
inc
fstps
add
push
in
ds
je
pop
jo
pop
sub
inc
fisubrl
lahf
mov
test
or
mov
rcr
pop
movsl
pop
mov
inc
cmp
scas
add
dec
xchg
imul
clc
addb
ret
out
mov
sub
jns
mov
sahf
inc
outsl
vcvtss2sd
jl
lods
mov
pop
gs
or
fimull
pusha
and
test
xchg
and
dec
pop
lock
cmp
mov
jmp
loope
pop
pop
cltd
je
sbb
cli
rcl
jecxz
fmuls
inc
pop
lret
popf
ret
ss
mov
push
mov
fidivl
pop
push
decb
cwtl
jp
jge
xchg
gs
fdivs
mov
xlat
int3
push
outsl
loope
shlb
pop
stos
pusha
inc
sbb
sbb
fcoml
into
xor
lds
push
jmp
arpl
fcomp
loopne
call
push
cld
fcomi
inc
fwait
imul
pop
movsl
or
shl
sub
pop
xchg
in
xchg
mov
shlb
inc
stos
pop
ret
jmp
fucomip
mov
mov
fists
dec
pop
repnz
bound
push
dec
pop
loop
arpl
xchg
inc
adc
mov
lods
pop
in
jae
push
pop
jecxz
insb
xor
andb
jne
dec
pop
mov
dec
lock
mov
loop
xor
ljmp
xchg
xlat
jl
movsb
mov
push
mov
jp
adc
inc
ds
out
and
popa
xlat
in
dec
scas
cld
cmpsb
lods
pop
mov
pop
in
pop
clc
xchg
jl
jnp
movsb
and
jae
and
pop
shll
fldenv
mov
mov
in
mov
movmskps
lods
cmp
jp
mov
xor
jmp
cmpsl
std
pop
cmp
dec
aam
in
shrl
pop
negb
pop
in
lods
dec
out
add
xchg
leave
mov
aad
and
jecxz
adc
sub
inc
scas
mov
inc
shlb
mov
mov
adc
inc
or
mov
cmp
dec
pop
mov
xchg
inc
clc
sub
mov
lock
ret
push
pop
push
lds
dec
cwtl
in
scas
push
jmp
sbb
int
dec
adc
mov
les
lcall
cwtl
inc
es
push
inc
dec
ljmp
jns
out
rcr
mov
js
pop
push
addr16
xchg
pop
xchg
push
adc
rolb
lods
and
dec
xor
or
pop
icebp
lahf
adc
push
sub
pushl
adc
push
cwtl
pminsw
sar
popa
add
dec
imul
jg
dec
lret
aam
mov
aaa
xchg
mov
out
imul
in
nop
sub
imul
adc
aaa
lahf
data16
mov
cmp
lahf
cwtl
icebp
jp
ficoml
nop
lret
call
push
dec
add
into
scas
sbb
sbb
out
sahf
push
aaa
in
add
test
std
jp
das
mov
testl
lcall
xchg
out
cmp
popa
cmp
lods
pminub
aaa
dec
aas
out
jae
lods
xchg
fwait
push
push
mov
push
ljmp
pop
cmovae
or
mov
sub
cmp
sbb
jecxz
or
mov
dec
jle,pt
xor
mov
test
fcmovne
mov
ds
loopne
fstps
fcmove
adc
sbb
or
addb
pop
push
jb
imul
call
jne
call
out
push
test
pop
lret
stos
mov
jnp
xchg
in
imul
jae
add
fidivs
pop
sbb
stos
mov
xor
pushf
inc
jge
cmp
movsb
pop
add
pop
push
clc
cli
fistl
jl
stos
movl
dec
movsl
sub
hlt
loop
mov
dec
aad
test
add
stos
xchg
adc
xchg
mov
push
and
pop
xor
clc
cmpsl
std
ljmp
mov
jae
adc
stos
push
sbb
aam
rolb
push
insl
inc
in
mov
fcmovnb
out
xor
push
add
mov
aaa
stos
sbb
lret
mov
add
mov
dec
mov
inc
sub
sbb
push
sbb
lcall
jbe
push
les
jmp
ja
mov
sub
and
fldt
sub
es
cmp
cmp
push
rep
mov
or
call
in
xchg
xchg
cmp
adc
nop
mov
mov
mov
xor
mov
jmp
leave
jge
sub
cmp
cmp
mov
stos
fidivl
sbb
popa
push
dec
mov
sub
lcall
pusha
in
pop
int
add
mov
fwait
sbb
ljmp
es
lcall
fldenv
fisubrl
push
lret
cmp
mov
inc
bound
pop
dec
dec
lods
pop
add
adc
push
push
add
mov
push
test
add
pop
jmp
pop
testl
adc
and
ss
cmp
jl
sub
mov
sbb
adc
lea
dec
and
push
cmp
mov
sti
jmp
inc
cmp
test
call
dec
jmp
dec
push
mov
push
jl
push
lods
sub
sub
pop
push
cmpsl
cmp
dec
pop
insb
push
dec
fcompl
add
fwait
mov
xor
into
sahf
roll
inc
xor
jmp
rcrl
mov
test
lcall
sbb
fs
js
lret
fdivs
fisubl
roll
jbe
fistl
mov
loope
in
stos
je
mov
xchg
ret
repnz
push
nop
lahf
lcall
sbb
push
and
test
jnp
in
test
push
and
xor
and
mov
js
into
or
call
mov
jecxz
push
mov
or
jmp
and
mov
adc
sbb
mov
xor
dec
insl
dec
mov
or
test
or
sqrtps
cmp
rclb
inc
test
and
and
in
cmpsl
in
or
mov
or
pop
orb
call
mov
jmp
imull
dec
xor
je
jnp
stos
sbb
shrb
call
ljmp
pop
dec
sbb
sbb
and
loop
mov
sbb
test
adc
jl
int
dec
push
and
jmp
xor
mov
mov
dec
test
ss
add
push
out
pop
xchg
sbb
dec
sbb
fstps
ret
out
por
das
inc
adc
inc
jo
sbb
cmp
sub
inc
dec
cli
push
inc
mov
test
pop
lock
push
inc
sti
jecxz
dec
sub
dec
adc
out
add
pusha
push
sbb
stos
std
bound
cmp
ljmp
insl
push
sti
out
stos
leave
sti
pop
mov
fsub
dec
push
lcall
jp
jno
push
insb
mov
cli
fsubrs
push
out
outsb
xchg
sbb
sbb
jp
sub
push
mov
or
fidivl
pop
and
inc
jo
mov
mov
iret
fiadds
mov
inc
stos
mov
cmp
out
push
push
sub
cmp
lock
repz
jae
mov
je
jae
imul
jle
or
ret
mov
pop
out
movsl
jo
mov
outsb
bound
fsubrs
pop
mov
add
pop
jecxz
sbb
or
jg
stos
xor
insb
dec
out
mov
dec
in
mov
outsl
fcomps
fs
xlat
imul
outsw
mov
push
rcr
loop
nop
inc
mov
filds
ror
or
stos
int3
push
mov
test
sbb
cltd
or
fistl
aad
xchg
lock
aam
dec
mov
decl
stc
rcrl
int3
stos
ficompl
sub
fadds
lret
inc
daa
cmp
xchg
fildl
push
sbb
dec
mov
inc
pusha
push
mov
cmp
cmp
sub
test
data16
jbe
scas
fs
add
int3
insl
in
gs
and
xor
jns
sub
sbb
fidivl
and
mov
sub
inc
inc
jne
pop
cmp
push
dec
push
dec
push
mov
hlt
cwtl
nop
pop
sub
push
dec
dec
es
mov
inc
and
ds
push
xchg
push
push
jne
call
es
pop
dec
push
and
sub
gs
push
push
mov
js
in
iret
popf
pop
jbe
cmp
pop
xchg
push
sub
lret
add
xor
pop
inc
iret
dec
push
popf
les
outsl
ss
inc
and
je
outsb
std
fs
jo
pusha
into
adc
ja
cmp
xor
push
gs
sbb
lret
dec
jns
sub
imul
and
mov
jne
mov
movsb
outsb
jno
and
pop
lret
push
mov
and
adc
pop
push
mov
add
add
gs
pop
dec
or
jbe
xchg
lcall
in
cmp
mov
addr16
push
pop
mov
orl
add
bound
ja
jg
add
cmp
push
adc
jge
jns
jno
popa
mov
xor
aad
and
sub
inc
mov
enter
mov
std
jae
or
jae
push
fs
adc
aas
dec
xor
jo
sub
and
inc
and
sbb
push
add
sti
or
or
and
add
ss
out
mov
incl
inc
icebp
pop
fnstcw
sbbl
sbb
xor
dec
push
pop
insl
lret
xor
push
stc
movsb
cmp
xchg
add
std
jle
fnstcw
stc
and
imull
loope
xchg
shll
sub
add
dec
ds
std
pop
dec
push
mov
cmp
and
loope
rcrl
or
inc
andl
ds
mov
mov
mov
adc
or
or
push
pop
addb
inc
push
iret
inc
or
mov
sbb
add
and
rolb
inc
mov
cmp
loop
pop
imul
mov
push
ret
addr16
les
xchg
repz
add
dec
adc
aam
inc
popf
lea
cmp
outsl
leave
lret
stos
pop
jns
int
test
jnp
gs
or
add
xchg
mov
jge
mov
inc
pop
push
or
inc
jns
jecxz
mov
pop
add
and
das
inc
add
lds
cld
push
stos
dec
loope
push
xor
dec
pop
ret
push
cmp
add
adc
or
sar
add
lods
lcall
rcrl
sarl
push
mov
inc
fidivs
pop
push
cld
jl
mov
ficompl
nop
mov
loop
cmp
popf
jecxz
sbb
mov
inc
jno
je
jp
or
cmp
nop
xor
pop
addr16
adc
adc
in
fiaddl
fs
fistpl
pop
xor
mov
jns
xchg
mov
stc
sbb
adc
push
fimuls
mov
popa
ds
pop
add
in
pushf
insb
xchg
pop
or
or
adc
icebp
movsb
and
ficompl
and
mov
test
pop
pushf
xor
xchg
push
pop
jg
arpl
ret
mov
push
aaa
add
test
pop
lock
out
in
pop
mov
jp
jns
inc
sub
cmc
je
inc
mov
icebp
sbb
test
xchg
inc
push
dec
dec
js
mov
mov
jns
xor
loop
dec
sub
sbb
pop
xor
dec
inc
popf
mov
fnstsw
push
fistpl
adc
loope
pop
cmpsb
sbb
bound
lock
arpl
inc
shlb
sbb
sub
dec
push
stc
inc
cmp
sbb
mov
pop
rcrb
or
pop
nop
imulb
sub
daa
pop
sahf
std
ljmp
imul
test
sub
ret
ljmp
sub
mov
mov
lret
pop
jle
pop
je
add
xor
mov
jecxz
pop
fistpl
inc
pop
loope
stc
or
sbb
dec
mov
icebp
ja
imul
fisttpl
jae
or
mov
mov
clc
or
push
es
fstpl
push
push
icebp
cs
add
or
cmpsl
clc
pushf
addr16
mov
or
adc
pop
or
popf
push
mov
movsb
les
sbbb
adcl
jno
jg
scas
pop
sbb
dec
push
fstpt
jmp
outsl
or
arpl
sbb
sub
sub
nop
cltd
xchg
loope
movsl
ja
fxch
out
pop
adcb
sub
ficompl
and
stos
add
pop
ja
or
or
dec
fbld
mov
xchg
imul
dec
push
je
adc
cwtl
mov
lods
mov
add
fs
sbb
clc
or
lods
stos
rolb
mov
jae
sbb
decl
add
testb
pop
pushf
sub
aam
adc
ss
push
mov
clc
jecxz
jnp
sarb
sbb
adc
jl
pop
fmuls
sub
mov
cmpl
xor
mov
jl
mov
adc
es
adc
ss
or
inc
mov
std
sub
pop
and
pop
sbb
cmpsl
int3
and
sbb
lahf
xchg
inc
fpatan
jb
push
and
sbb
cmp
int3
add
cld
mov
adc
pop
mov
gs
enter
dec
cltd
sbb
les
pop
inc
aaa
adc
dec
insl
push
imul
fcoms
push
rolb
sub
repz
jmp
pop
push
mov
rcr
subb
in
or
lea
adc
jp
jl
lret
in
adc
sbb
push
mov
loop
cli
jae
or
jecxz
sbb
or
pop
xor
jbe
and
mov
jbe
add
adc
lahf
mov
and
imull
push
sahf
test
adc
js
sub
testl
dec
rcll
mov
push
sub
sub
outsb
leave
or
push
rolb
in
outsl
icebp
fwait
add
pop
jae
mov
in
mov
popf
sahf
cmp
adc
lcall
sub
test
scas
mov
dec
cli
push
sbb
mov
nop
pop
xor
xor
push
push
fldcw
sub
leave
and
xor
lcall
push
jne
jae
insl
adc
dec
xchg
jmp
or
dec
push
or
cmp
dec
push
adc
dec
sbb
pop
xor
adc
or
mov
push
sub
outsb
inc
jecxz
or
adc
inc
mov
push
or
pop
lret
mov
sbbl
or
fwait
pop
imul
mov
and
xorl
fwait
js
dec
lds
fs
pushf
inc
movsb
push
ret
ret
push
addr16
pop
push
push
cmpsb
arpl
int
dec
or
sub
pop
xor
jne
addr16
ds
push
mov
push
xchg
ss
adc
pop
adc
pop
mov
and
cld
outsb
mov
mov
fs
pop
cmp
cmp
push
sarl
xchg
mov
add
pop
mov
push
dec
mov
outsl
pop
inc
arpl
push
pop
xchg
pop
and
dec
fnstenv
data16
cwtl
pop
inc
xchg
pop
or
cwtl
xor
cmp
sub
fcoms
mov
lret
mov
aam
call
or
and
cmpsl
fnstenv
int
addb
push
sub
xorl
cmp
out
out
and
out
pop
inc
sbb
cmc
xchg
cmp
adc
push
clc
sbb
jb
negb
sub
ret
sub
es
jo
xchg
mov
inc
int3
jle
push
adc
mov
xor
xchg
dec
popf
and
sbb
inc
imul
movsb
and
imul
popf
cmp
push
pop
pop
push
mov
push
rcrb
jno
loope
leave
pop
jecxz
imul
adc
xor
push
std
pop
push
and
jecxz
pusha
leave
pop
in
xor
dec
bound
js
jb
addr16
pop
and
pop
push
cs
sub
push
repz
add
xlat
adc
inc
adc
jge
add
fistps
or
pop
add
cmp
mov
stc
dec
leave
cmp
cltd
push
pop
xchg
sbb
clc
mov
popa
pop
and
or
xchg
cmp
add
je
fwait
jbe
xor
sbbb
jno
inc
sar
test
fbld
mov
dec
unpckhps
fmuls
dec
ffreep
and
ds
adc
outsl
jns
dec
mov
out
aaa
sub
add
sbb
mov
repz
movsb
aad
mov
xchg
adc
imul
fnstcw
out
sbb
andb
fcmove
loope
push
push
jmp
jmp
test
andl
pop
test
outsl
sub
xor
xchg
xchg
and
add
mov
cli
pop
pop
faddp
inc
imul
sub
push
stos
and
or
cmp
adc
cmc
push
and
cs
pop
inc
and
push
std
xchg
daa
imul
lods
and
and
rolb
subl
testw
dec
stos
cmp
sub
insl
dec
mul
pop
push
xchg
out
xchg
cmp
push
mov
push
gs
xor
int
inc
jmp
fimuls
pop
or
push
in
insb
je
jge
mov
push
pop
std
pop
mov
xchg
lea
dec
xor
insl
xchg
cli
aaa
cltd
pop
dec
push
mov
jno
dec
pop
fs
mov
addl
je
pop
addr16
push
xor
jmp
jp
jb
dec
gs
rorw
negb
pop
hlt
out
sub
pop
pop
mov
pop
jno
inc
pop
out
dec
xlat
dec
insb
vandps
push
dec
mov
xchg
dec
and
mov
cmp
cmp
data16
arpl
inc
pop
pop
fstpl
pop
adc
mov
xor
sbb
dec
pop
xor
mov
push
mov
pop
cs
bound
add
or
jmp
aad
fwait
xchg
adc
push
and
add
ja
push
fsubrs
xchg
js
push
fsubs
jnp
dec
pusha
sbb
fs
popa
loopne
or
mov
cltd
mov
popf
cmp
add
test
xchg
xor
ja
dec
xchg
adc
fisttpl
sbb
lods
xchg
cmpsb
popa
push
adc
dec
mov
popf
fnstenv
jmp
and
pop
or
inc
es
and
cmp
adc
fimull
stos
leave
insl
ss
outsl
ret
mov
aas
push
or
mov
pop
pop
and
outsl
sub
push
rcl
or
push
sbb
mov
jmp
mov
ror
cmp
pop
aam
pusha
push
sbb
pop
xchg
int
push
subb
loop
cmp
jnp
add
mov
mov
sub
jne
push
data16
aam
loop
xor
inc
cwtl
mov
nop
lret
es
pop
mov
stos
and
sbb
outsl
cmpb
push
rcr
and
outsb
jge
inc
push
mov
xchg
incl
imul
mov
pop
dec
pop
pop
sarb
xor
xor
pop
hlt
adc
cmp
cvtps2pd
insb
pop
inc
push
pop
adc
ja
pop
mov
jno
inc
dec
inc
inc
jecxz
cwtl
xchg
pop
imul
or
arpl
mov
imul
adc
dec
pop
mov
push
scas
pop
iret
sub
icebp
in
mov
dec
ret
aad
xlat
pop
xor
sub
dec
dec
pop
adcb
cmpsb
mov
adc
sub
xor
pop
cmpsb
cmp
jecxz
cwtl
pop
pop
hlt
mov
cmp
mov
and
mov
sub
cmc
xor
cmp
push
hlt
cltd
jmp
cmp
push
adc
sub
subl
push
push
adc
loope
outsb
test
insb
insb
pop
inc
cltd
add
push
add
sbb
sub
call
mov
push
pop
popa
pop
das
dec
lcall
push
rcrl
or
sub
xchg
test
fisubl
and
cmp
mov
dec
inc
cltd
or
xchg
fstpt
pop
addr16
jp
and
test
orb
jg
cmc
sbb
dec
jmp
cwtl
and
pop
xor
push
lahf
sbb
adc
data16
pop
mov
leave
xchg
dec
dec
inc
and
pushw
cmp
insl
pop
xor
test
pop
add
pop
pop
or
popa
adc
or
pop
mov
jle
inc
pop
gs
mov
pop
lret
lahf
dec
nop
lds
pop
inc
sbb
cli
xchg
leave
and
lret
sub
pop
sub
stos
push
pop
and
or
pop
in
or
inc
push
sbbl
gs
nop
or
sbb
dec
add
xor
sbb
sub
pop
fcompl
pop
push
sbb
pop
push
test
xchg
repnz
imul
adc
add
ja
pop
mov
imul
pop
pop
outsl
push
shl
dec
jecxz
sbb
adc
dec
xchg
mov
call
dec
jecxz
add
out
and
jle
test
pop
imul
push
leave
jb
jnp
pop
pop
sub
push
jp
push
hlt
mov
je
add
cmp
sub
and
ret
sub
int3
or
mov
or
cltd
xchg
mov
dec
pop
sub
push
and
push
int3
dec
flds
xchg
es
xchg
pop
pop
add
mov
cwtl
ret
pusha
movaps
sti
push
pop
sbb
popa
add
clc
add
mov
push
and
arpl
add
jg
jl
sbb
addb
mov
pusha
arpl
inc
mov
insl
pop
jns
jne
pop
push
xchg
sbb
cltd
mov
je
gs
out
push
mov
jne
or
dec
mov
and
lret
sbb
pop
imul
adc
xchg
or
cmp
stc
inc
pop
adc
jmp
lea
add
pop
ss
pop
pop
sub
cmp
or
mov
sub
and
or
push
sbb
push
test
jo
ja
adc
popa
ds
or
jmp
pop
add
mov
adc
push
inc
imul
js
dec
pop
insl
fwait
inc
out
incb
ja
repz
es
xchg
adcl
cltd
lods
js
cmp
ja
push
dec
stc
in
mov
popf
pop
ds
dec
ljmp
xchg
adc
dec
push
pop
loope
cltd
imul
clc
pop
mov
sbb
es
addr16
dec
popa
or
arpl
adc
mov
imul
mov
rcrl
cs
dec
inc
cltd
js
pop
arpl
xchg
insb
xchg
mov
mov
dec
mov
fstl
inc
push
adc
cmpsb
fs
cwtl
or
pop
jne
lods
fstpl
push
nop
pop
out
sbb
mov
pop
cmp
imul
subl
push
mov
dec
jae
push
dec
add
sub
push
push
mov
adcl
jb
cmp
xor
inc
pop
inc
scas
dec
mov
lea
and
enter
xchg
inc
xchg
pop
xor
pop
and
cli
mov
pop
test
pop
adc
cmpsb
outsb
sbb
ds
mov
jle
fisttps
xchg
ljmp
xchg
pop
xorl
mov
aaa
dec
jbe
cmp
or
sbb
sbb
and
xor
pop
arpl
jge
push
sub
pop
sub
inc
lahf
icebp
dec
pop
cs
pop
sbb
imul
xchg
aad
lret
xchg
gs
ret
pop
jg
xchg
pop
push
lock
sbb
pop
push
jnp
mov
mov
and
arpl
jno
outsl
lret
cs
sbb
cli
pop
xor
adc
ret
push
jg
xor
push
xlat
pop
dec
jae
mov
push
and
fildll
loope
sbb
cltd
and
shr
and
inc
aaa
jge
or
rclb
or
es
adc
pop
dec
inc
xor
lcall
xlat
outsb
pop
roll
add
jae
push
leave
adc
clc
jb
cltd
in
es
mov
and
cltd
jle
loope
fs
adc
pop
into
mov
push
push
adc
cltd
inc
push
jbe
sub
lahf
mov
and
ret
pop
fsts
scas
cmp
jecxz
movsl
or
or
repz
mov
dec
inc
xor
inc
cltd
stos
pop
adc
push
mov
and
dec
fistl
pop
dec
mov
test
pop
arpl
jg
jnp
jns
fldenv
ss
arpl
fidivrs
jno
mov
lds
or
sub
add
adc
mov
das
push
dec
mov
out
or
sub
pop
pop
popf
ret
nop
call
out
fistps
aam
lcall
push
aad
pop
cmp
arpl
xchg
movsl
sbb
cmpsb
and
xor
inc
cwtl
jb
pop
lods
dec
fisubs
nop
mov
xchg
and
add
lcall
cmc
add
mov
dec
or
jnp
inc
aaa
dec
pop
jg
mov
popa
cmpsl
xor
mov
insl
ss
cmc
push
fwait
in
dec
push
jmp
loop
xor
or
and
jae
ja
jge
pop
imul
mov
mov
and
data16
in
xchg
and
push
xor
lcall
add
push
loopne
mov
bound
push
or
add
orl
adc
add
jnp
cwtl
jb
cwtl
mov
enter
or
imul
movsl
mov
comiss
ds
mov
fnstsw
or
jmp
aad
cli
push
sub
cmp
ljmp
sbb
push
scas
dec
sub
pop
add
cmp
mov
push
fisubrl
loope
push
mov
pop
jl
pop
repz
pop
and
sub
into
arpl
in
loopne
into
sarl
jmp
jle
sub
pop
lds
mov
inc
popa
add
lds
cwtl
pop
sti
fidivrl
test
test
pop
sbb
ljmp
mov
adc
movsl
xor
xorb
addr16
jbe
gs
dec
push
in
mov
dec
pop
sbb
or
mov
divb
cs
mov
cwtl
aad
leave
pop
mov
dec
jp
sub
cli
ljmp
mov
sbb
stos
imul
lcall
cli
adc
cmpb
jnp
dec
adc
cmp
ljmp
lret
adc
ds
jle
aaa
lahf
sub
xor
in
dec
cmp
or
loop
pop
xor
stos
or
outsl
inc
pop
dec
or
repnz
stos
mov
mov
mov
jno
lret
mov
mov
adc
in
faddl
and
lret
adc
mov
and
andb
fldt
sbb
pop
ljmp
stos
dec
jne
mov
jle
scas
cli
jg
lret
push
inc
dec
dec
loopne
fwait
or
push
insl
add
jns
pop
insb
bnd
call
lret
imul
jecxz
repz
jg
jae
gs
mov
lcall
mov
inc
and
xchg
aad
cmp
push
pop
adc
mov
cs
xor
aad
or
cld
repz
fstl
mov
loopne
ljmp
push
cli
imul
imul
xor
xlat
mov
jl
bound
adc
push
call
adc
jl
dec
inc
jnp
stos
imul
add
and
sbb
mov
in
aaa
sahf
xchg
out
jae
cli
movsl
dec
stc
cltd
subl
stos
mov
pusha
lret
lcall
lock
dec
jae
out
mov
stc
popf
out
mov
xor
repz
mov
pop
dec
std
int
je
sahf
divb
xorl
push
jbe
jmp
inc
in
mov
mov
es
cmp
inc
lods
fld
fdivs
push
jg
mov
sbb
mov
flds
ror
sub
sub
inc
mov
js
repnz
imul
jno
outsb
mov
outsb
out
mov
cwtl
sub
orb
stos
rorl
daa
and
add
mov
sbb
pop
sbb
pop
sbb
mov
and
lahf
aas
push
fmul
and
js
cltd
dec
out
jnp
jae
add
cmp
addb
mov
ds
jl
jmp
sub
ret
add
xchg
jae
sub
lret
pushf
mov
in
je
jbe
mov
stc
test
lock
push
or
dec
push
cli
aaa
cmc
les
cld
in
sbb
ss
mov
mov
clc
sbb
stc
mov
jae
js
lret
pop
sti
pop
dec
xchg
dec
push
dec
mov
test
or
fsubr
xchg
add
outsb
adc
mov
iret
rorl
dec
cli
push
in
sbb
dec
shll
cmp
cmp
bsf
cmp
ret
inc
xor
ljmp
jb
adc
push
mov
sub
icebp
sub
cmp
ljmp
lret
fisttps
or
outsl
aam
sbb
or
lods
stos
jp
insb
mov
cmp
repnz
xchg
addr16
roll
jmp
pop
loope
loop
mov
inc
pop
cld
in
pop
mov
fwait
push
sti
int
in
jno
testb
pop
fs
xor
xor
adcl
lods
or
imul
cmp
aam
leave
fistl
repnz
xchg
add
mov
int3
nop
and
fidivrs
lcall
insl
inc
sbb
imul
lods
cwtl
jae,pt
pushf
sbb
mov
mov
pop
jle
mov
sub
jge
dec
inc
mov
aam
movsl
cmpb
sub
dec
test
imul
outsb
or
pushf
mov
pop
lahf
sub
push
sub
add
mov
adc
sbb
cmp
jnp
and
push
sub
and
roll
iret
push
rcll
sbb
push
cld
rolb
or
push
ret
pop
cmp
inc
mov
mov
inc
outsl
dec
inc
in
pushf
inc
ljmp
out
mov
dec
mov
push
or
daa
fstpt
mov
sbb
dec
inc
sti
js
add
mov
or
cmp
add
cmp
push
cmp
rcr
lret
adc
int3
test
cwtl
dec
es
sbb
sbb
xchg
add
pop
rcrb
test
cltd
lea
xchg
xor
jecxz
dec
out
pop
imulb
dec
and
dec
dec
test
push
mov
mov
or
lret
lods
dec
pop
cmp
stos
out
jo
push
or
fwait
stos
stos
jnp
ljmp
lret
push
cmp
ja
sub
les
dec
mov
cmp
out
sti
fimull
dec
ret
or
sarb
xchg
test
add
subb
loope
stc
push
jmp
ss
cmp
aad
rcll
popf
ret
andb
and
les
aad
sub
cmp
mov
push
pop
mov
jmp
sub
into
mov
js
outsb
mov
test
testb
inc
decb
inc
in
sbb
mov
lret
ljmp
push
scas
lcall
popa
xor
pop
xchg
mov
and
xor
jae
dec
fwait
sub
and
pop
jl
sub
xlat
inc
lods
cmc
jmp
mov
and
pusha
cmp
jmp
xorl
in
in
push
pusha
cmp
or
inc
sub
ficoml
sbb
add
jmp
and
fistpl
ret
xchg
gs
mov
sub
mov
das
mov
fstp
mov
dec
add
lahf
les
ja
fimull
sub
sub
sbb
imul
stos
out
jg
jp
dec
adc
iret
push
out
adc
and
out
sbb
add
jne
mov
sub
sub
jae
sub
inc
fucom
test
add
jmp
pop
lcall
mov
xorb
dec
popf
fadd
and
mov
mov
xor
stc
jbe
lret
dec
not
dec
xor
mov
fimull
int
push
out
dec
sub
js
inc
jne
cmp
xchg
lcall
fisubl
mov
aaa
mov
test
mov
flds
dec
jecxz
mov
sbb
sbb
mov
add
fwait
xchg
adc
pop
sbb
xchg
mov
adc
popa
les
aaa
pop
mov
ljmp
aam
std
test
lds
mov
cmp
movsl
jnp
mov
or
fidivrl
push
mov
fwait
xor
mov
fucomi
call
add
mov
push
out
sbb
sbb
adc
stos
and
mov
cmp
push
push
enter
inc
push
sbb
leave
js
stos
xchg
ja
xchg
in
push
cmpsb
push
xor
sbb
frstor
out
push
push
cmp
pop
and
lahf
sbb
imul
mov
cmp
test
pop
rcrl
sbb
or
fnstcw
or
mov
push
xor
fwait
mov
pop
flds
pop
pop
or
push
adc
das
fwait
lret
fistpl
push
pop
mov
pop
mov
out
and
lcall
daa
or
mov
pop
fdivs
out
mov
movsb
xchg
outsl
test
je
sub
pcmpeqd
cmpb
mov
sbb
out
dec
lret
jecxz
mov
dec
dec
lcall
mov
pop
sub
mov
stos
mov
repnz
xor
adc
stc
push
sbb
add
adc
and
dec
int
insb
adc
pushf
dec
arpl
and
cmp
pop
sub
adc
push
or
sbb
repnz
xor
dec
loop
aam
movsb
lret
sbb
fwait
ret
outsl
inc
andl
xchg
rcrl
dec
pop
fistps
push
push
add
and
rcrl
subl
js
mov
cltd
loope
movsb
fidivl
lretw
add
popf
pop
fs
in
mov
sbb
cmp
mov
in
lret
ficompl
test
sbb
sub
mov
push
pop
clc
jbe
leave
cmp
xchg
push
fldt
lahf
loop
mov
add
jl
test
and
sub
ret
cmp
pop
xor
imul
xor
popf
repnz
fists
xor
pop
shll
out
gs
lret
imul
jnp
std
bound
imul
cmp
xor
lcall
imul
sbb
out
insb
adc
dec
lret
xor
dec
stos
sbb
mov
cmp
cmp
dec
lret
popf
aad
movsb
imul
stc
sbb
ret
mov
loop
xor
jp
sbb
fs
fwait
outsl
sub
cld
pop
pop
mov
sbb
stos
fsincos
fisttpl
cmp
out
jmp
adc
sub
fwait
das
outsl
mov
jle
xor
outsb
xchg
les
xchg
loopne
into
xlat
insb
add
fimull
push
jp
push
sbb
sti
sub
cmp
mov
sbb
fldt
mov
and
cld
pop
sbb
mov
xor
mov
adc
dec
adc
inc
pop
xor
xor
sub
mov
rclb
dec
add
out
lods
jae
ds
push
enter
hlt
adc
cmp
mov
repz
sub
and
push
xor
lret
fcmovbe
ljmp
jle
mov
out
and
fidivrs
idiv
mov
imul
push
and
jne
push
fistpl
bound
fldenv
aam
leave
xchg
test
push
mov
jmp
hlt
out
cmp
mov
inc
lea
sbbb
mov
lret
sub
stos
cwtl
dec
jle
out
inc
adc
push
xchg
bound
mov
mov
sub
mov
mov
sbb
ret
pop
test
idiv
inc
cmpsl
pop
mov
imul
push
fs
cld
fidivs
push
sub
pusha
add
fidivl
lret
dec
lret
mov
or
add
sbb
fistpl
mov
test
mov
jl
enter
das
fwait
insl
out
add
test
call
test
jp
jbe
sbbl
std
ljmp
inc
xor
sub
lods
popf
je
push
out
negl
mov
sub
icebp
cwtl
lods
inc
push
sti
cmp
enter
imul
fistpl
add
lret
mov
push
enter
dec
push
xchg
test
jbe
lcall
cli
sbb
gs
adc
cmp
dec
dec
ljmp
sbb
nop
mov
push
jmp
ss
fidivrs
daa
cmpsb
iret
js
into
xor
jmp
andb
mov
push
stos
mov
push
ja
adc
das
aad
sbb
cld
sub
sub
inc
cmp
or
add
sti
aam
aas
lret
push
stos
mov
mov
lahf
sub
inc
xchg
jne
addl
xlat
mov
fdivrs
pusha
dec
stos
aad
xchg
stos
shlb
mov
cli
in
ljmp
cli
sbb
lds
mov
mov
test
jmp
jp
jecxz
adc
pushf
cmp
int3
xor
clc
inc
xor
sahf
or
add
ljmp
in
cwtl
cmp
js
mov
mov
fildll
pop
xchg
lods
lahf
std
in
mov
and
mov
lods
and
inc
mov
mov
stos
mov
sub
andb
inc
test
ja
mov
sbbb
mov
sbb
mov
adc
ljmp
dec
iret
out
pop
repz
movb
fwait
sti
cmpsb
sti
jnp
xchg
imul
lds
aad
jnp
mov
cmp
and
inc
stos
adc
pop
xor
push
in
or
call
stos
mov
mov
fsubrs
sbb
dec
jo
idivb
jmp
lret
xchg
and
add
and
ss
sbb
lcall
imul
loopne
shll
push
push
cmp
push
mov
rorl
ljmp
lcall
and
dec
gs
cmp
jl
cmpsb
lcall
int
mov
cmp
stos
mov
lret
sbb
xor
shrb
pop
mov
sub
or
and
in
loop
jnp
push
lcall
daa
mov
daa
cmp
inc
xchg
jne
imul
or
jge
adc
cmpb
jp
mov
fsubrp
lods
dec
fs
leave
lahf
lahf
call
ss
test
outsb
push
das
lahf
mov
mov
dec
push
inc
lds
lea
jle
pop
mov
adc
mov
or
inc
fstpl
mov
cli
pop
fcmovu
mov
cmp
lret
inc
pop
jl
cmpsl
sub
jmp
leave
fnstsw
adc
test
pop
dec
jnp
jmp
sbb
push
in
sbb
sub
enter
adc
std
es
sbb
sbb
dec
mov
xchg
mov
mov
negl
div
rcrb
clc
jbe
add
adc
dec
or
div
dec
xor
fisttpl
aaa
cmp
and
subb
pop
inc
mov
cmpsb
mov
push
dec
out
cli
movsl
inc
cmp
inc
mov
xchg
call
dec
loope
popf
enter
push
fwait
je
add
pop
push
mov
call
in
mov
push
pop
stos
cmp
push
addr16
pop
adc
dec
push
repz
push
fstps
xchg
or
sub
inc
mov
inc
incb
add
ss
jnp
mov
xchg
ds
push
cld
pop
inc
jl
push
fstpt
push
sbb
adc
push
sbb
inc
stc
sub
out
mov
fwait
jns
fstps
xor
pmulhuw
jo
rolb
in
js
and
sbb
mov
imul
jo
mov
or
mov
adc
jge
adc
sbb
sbb
je
stc
fbld
insl
popf
cmpsb
lret
hlt
jne
sti
add
movsl
enter
push
or
lcall
fistpl
xor
out
rorb
mov
mov
or
push
shrb
cmp
pop
mov
mov
mov
and
pop
mov
icebp
fcomps
pop
cli
test
mov
in
mov
jnp
dec
add
lret
das
cs
pop
aam
mov
cld
dec
dec
out
fnstcw
sub
dec
fwait
and
cmp
mov
lahf
pop
pop
mov
fcmovnb
dec
cmp
rolb
call
push
mov
cmp
jne
std
testl
adc
fisubrl
push
fwait
mov
outsb
mov
cmpsl
sub
cli
pop
fmuls
fcomp
aad
lret
mov
pop
push
sbb
xlat
and
xchg
shlb
cld
sub
cli
sbb
and
adc
inc
sysret
mov
ljmp
pop
lcall
sub
fimull
or
mov
lret
pop
arpl
mov
cltd
movsl
inc
mov
jnp
jp
jmp
jp
xchg
and
push
repz
fisubl
fdivr
fstps
cmp
bound
mov
sub
mov
cmpsb
out
jnp
repz
mov
xchg
movsl
cwtl
lret
xchg
pop
mov
mov
adc
xchg
cmpsl
sub
das
inc
adc
sbb
pusha
adc
mov
ret
or
adc
inc
pop
push
leave
jl
sub
jae
mov
ret
pop
out
lcall
rcr
inc
aad
adc
pop
fcomps
jp
popa
jg
push
cmp
incb
xchg
sahf
pop
inc
mov
mov
push
ds
fwait
and
cli
push
dec
lcall
aam
push
dec
lcall
lods
add
inc
inc
mov
jmp
rcrl
rolb
mov
or
je
and
les
or
or
or
pop
sti
sbb
xchg
mov
lret
dec
mov
and
inc
mov
mov
pop
jge
sbbb
dec
lods
mov
sahf
push
rcrb
mov
out
sbb
pop
aam
outsb
cltd
inc
lcall
xchg
sbb
cs
ficoml
sub
xchg
int
jbe
or
and
stos
test
aad
repnz
push
jbe
rclb
mov
sub
aas
aad
repnz
cmp
icebp
mov
pushf
sbb
fldt
addl
shrl
xchg
fstpt
xlat
add
mov
or
xchg
hlt
cmpsl
push
insb
test
cmp
mov
adc
xor
add
pushf
jecxz
lds
fiadds
mov
aad
mov
dec
sub
pop
fimull
aaa
insb
syscall
xchg
mov
dec
inc
lcall
leave
imul
fcmovnu
push
sbb
push
ss
cli
or
mov
lock
xchg
enter
out
lret
cld
flds
mov
inc
inc
clc
or
test
or
or
js
or
sbb
sti
lret
orb
jbe
cltd
dec
cli
int3
scas
or
mov
imul
dec
dec
nop
push
push
sbb
cmp
cmp
inc
cmpsb
std
add
cmp
push
cmpb
cltd
scas
pop
mov
out
leave
push
lret
sti
fistpl
sub
xor
imul
xor
cmp
mov
out
sbb
or
cmc
push
arpl
mov
mov
adc
mov
test
push
dec
or
sub
sbb
jl
insl
adc
dec
adc
sti
jmp
mov
dec
mov
mov
bound
out
cmp
clc
add
push
sbbb
dec
push
pusha
jae
ja
imul
mov
test
test
push
inc
orb
stos
dec
clc
jl
sbb
stos
stos
imul
or
or
ljmp
arpl
mov
xchg
hlt
adc
movsb
mov
pop
mov
jecxz
xchg
pop
stc
lods
scas
mov
dec
dec
xchg
nop
xlat
xchg
cmpsl
lahf
push
out
mov
inc
push
jnp
test
mov
lds
jmp
aas
repnz
xlat
negl
dec
pop
push
mov
mov
push
les
lock
in
mov
inc
inc
sub
orl
or
shrl
movsl
leave
dec
mov
pop
lret
jecxz
push
adc
or
cmp
sub
cltd
insb
mov
pop
test
sub
mov
lods
mov
push
rcrb
jecxz
dec
dec
dec
sbb
movsl
dec
push
cmpsb
and
in
scas
push
push
mov
and
rcll
mov
int
mov
dec
xor
in
sbb
pusha
loopne
aam
dec
or
mov
rcrl
dec
cli
fwait
outsb
daa
cli
push
jo
fistl
push
jmp
mov
mov
arpl
aad
xor
leave
mov
dec
fimuls
mov
hlt
sbb
lret
jp
insb
imul
push
bound
orl
lock
in
jb
dec
mov
inc
int3
or
fists
fidivrl
push
dec
lret
mov
pop
and
xor
inc
xchg
cwtl
or
jge
sti
dec
mov
shrb
push
xchg
js
shll
add
sub
lds
stos
and
or
pushl
jbe
cmp
xchg
pop
xlat
cmp
cmp
ficoml
mov
mov
testl
enter
lods
negl
push
stos
xchg
out
push
out
mov
push
mov
ja
jae
push
aas
test
std
mov
por
lock
xchg
xchg
cmp
xchg
repz
imul
mov
movsl
loopne
pop
jle
aaa
mov
xchg
sahf
xchg
pop
cltd
dec
fisttpl
push
cli
rorl
or
and
mov
add
push
loop
cmp
jmp
mov
lods
fdivs
imul
jae
aad
xor
add
mov
cld
pop
sahf
daa
scas
sub
scas
sub
xchg
gs
sbb
sbb
fwait
xlat
lods
pop
gs
cwtl
test
fildll
mov
ljmp
jecxz
add
adc
clc
pop
daa
pop
jl
cmp
cmp
rcrb
add
push
lock
mov
inc
inc
xor
mov
pop
cmp
cmpsb
add
mov
imul
dec
cwtl
and
mov
sbb
jmp
fadds
xorb
lcall
hlt
xor
cmp
or
sbb
sbbb
xor
leave
je
mov
inc
std
shrl
and
mov
call
clc
sub
imul
mov
mov
out
stos
jecxz
stos
mov
add
jmp
sub
mov
aad
mov
data16
xchg
aam
ret
pop
js
jp
push
mov
push
mov
pop
dec
jno
aas
push
push
lret
cwtl
mov
popf
sub
enter
cmpb
jp
stos
or
ss
mov
sbb
and
je
adc
inc
ljmp
test
cld
cmp
clc
mov
inc
jmp
mov
or
mov
add
ss
sub
inc
push
lahf
sbb
leave
cmp
fisubrs
repnz
jge
xor
and
out
jnp
jl
cltd
inc
or
mov
cli
and
jo
add
sub
adc
or
or
pop
stos
lcall
mov
cmpsb
push
pop
stc
sbb
push
mov
gs
aam
push
cmp
fsubp
push
clc
orl
xchg
cli
sbb
lods
jne
jecxz
sbb
pop
jo
sub
sti
outsl
sub
outsl
add
mov
push
pop
orb
and
mov
sub
mov
xor
ljmp
pop
sbb
jbe
lret
or
and
and
wrmsr
repz
mov
xchg
cmp
ret
mov
daa
fidivrs
mov
xchg
ret
xor
in
xchg
mov
jle
xor
fwait
aad
cmp
or
movsb
ljmp
loop
lea
pop
jmp
jl
fstps
dec
jmp
ljmp
pop
cmp
stc
insl
ret
mov
stos
dec
push
popa
cmp
cmp
mov
cli
mov
imul
int
adc
hlt
lods
sub
fisubs
mov
push
popf
cmp
mov
arpl
out
notl
pop
testb
loop
mov
arpl
psubw
dec
repz
jl
add
test
mov
jbe
cmp
sbb
in
sets
inc
xchg
push
pop
mov
and
or
iret
push
dec
push
mov
lret
das
inc
adc
jne
sbb
stc
jl
dec
and
or
xchg
outsl
sahf
cld
loope
mov
adc
shrb
dec
xor
call
loope
lret
shl
lret
fwait
je
pushf
jp
cmp
insl
add
xchg
lret
inc
cltd
xor
jnp
fidivl
fildl
jnp
cmp
daa
and
mov
jno
adc
shlb
sahf
sub
pop
cmp
lea
dec
stc
jne
sbb
imul
stc
adc
rcl
push
stos
push
push
jnp
js
repz
adc
xchg
sti
sub
jp
dec
test
dec
mov
imul
inc
outsl
jecxz
xor
movsl
arpl
pop
out
lcall
aad
std
gs
dec
push
cmc
dec
aam
dec
push
adc
mov
adc
mov
aad
mov
jge
mov
std
stos
loope
cmpsl
and
and
mov
fsubs
cmp
and
push
adc
mov
daa
push
push
out
mov
je
sub
repz
cli
adc
fisubrl
sbb
or
invd
in
cmp
push
fwait
dec
dec
mov
xor
sub
jg
cmp
cmc
mov
stos
xlat
jg
arpl
in
aad
add
sbb
arpl
pop
int3
inc
loop
inc
jp
cmp
ret
and
jl
mov
pop
sub
imul
jns
adc
in
pop
cltd
outsl
add
ljmp
xchg
rcl
xlat
ficomps
adc
mov
mov
cmpsb
cmp
mov
test
cmp
call
lret
imul
jp
or
leave
mov
lahf
pop
stos
lock
mov
test
lret
xorb
adc
push
jp
mov
mov
cmpsb
mov
test
test
push
lcall
or
sub
sbb
mov
cltd
push
pop
lcall
pop
rcrb
xor
pop
push
fwait
std
fists
pop
and
mov
and
xchg
into
jnp
lret
dec
jmp
inc
pop
imul
mov
stos
aam
mov
pop
call
sub
dec
out
xor
mov
mov
add
popf
testl
fildll
pop
xchg
aam
lock
stos
or
jmp
mov
aad
ss
mov
ljmp
sbb
mov
xor
mov
and
daa
ljmp
stc
outsl
add
in
mov
mov
scas
add
stc
out
or
scas
test
adc
pop
add
adc
sub
stos
into
ret
xor
cmp
sti
sub
add
sbb
dec
test
fimull
add
pushf
pop
ljmp
add
jp
pop
lcall
out
sub
dec
daa
cwtl
pop
pop
inc
push
jns
pop
stc
and
lcall
dec
icebp
add
rcr
pop
int3
cmp
pop
dec
mov
inc
mov
stos
push
inc
imul
cmp
bound
sub
dec
fildl
mov
test
push
pushf
push
iret
push
pop
mov
or
fwait
sahf
add
inc
js
fcmove
mov
shrl
jl
lds
jmp
out
aad
dec
adc
int
xchg
cmp
out
mov
sub
imul
jbe
sbb
dec
shrl
and
or
adc
fisubl
mov
ljmp
ret
idivl
jmp
mov
imul
mov
aas
mov
fidivrl
inc
add
pop
mov
ficoms
pop
test
xor
mov
ficompl
sbb
inc
jl
or
pop
push
vmwrite
cmp
fisubl
test
cltd
push
adc
jno
pop
inc
imul
inc
dec
fidivl
lret
stos
xchg
sub
into
push
iret
stos
mov
xchg
xchg
dec
sbb
lods
fcmove
mov
ja
mov
test
fdivrs
jl
dec
movsb
dec
js
ja
lds
dec
mov
cmp
inc
mov
cmp
mov
mov
sbb
fisttpl
xchg
testl
and
pop
sub
mov
jle
aad
jmp
mov
or
add
push
adc
cltd
pop
cltd
mov
and
out
mov
in
mov
sti
inc
xchg
dec
inc
push
inc
mov
jmp
mov
cmp
sarb
call
sbb
cwtl
bound
mov
lcall
dec
xor
cmp
outsl
pop
fwait
mov
mov
push
dec
xor
dec
cmp
mov
dec
or
mov
add
ffree
fiadds
je
adc
lods
into
adc
fisubrl
addr16
imul
cmpsl
sub
mov
stos
enter
aas
insl
stc
test
adc
push
out
push
push
xor
in
and
lcall
cmp
test
pop
addr16
push
mov
je
pop
dec
fsts
stos
fwait
mov
jge
fmuls
pusha
push
sbb
inc
pop
mov
lret
jmp
jg
loop
jmp
adc
test
cmpsb
adc
cmp
mov
fcmovnu
sbb
ret
dec
mov
dec
mov
sbb
push
out
nop
cwtl
mov
xor
push
pushl
fcomi
out
daa
lods
sbb
sub
ds
sub
pop
push
push
stc
fcomps
test
cmp
cli
je
cmp
adcb
jbe
in
sub
lcall
out
pusha
xor
in
mov
int
and
push
xor
dec
mov
int3
add
pop
or
adc
dec
nopl
subb
sub
mov
inc
sub
mov
xchg
movsl
mov
lret
insl
adc
fistps
sbb
push
mov
inc
pop
push
inc
insb
jbe
aaa
fcompl
loop
cltd
frstpm(287
cmp
inc
cmp
adc
stos
sbb
ss
push
pop
fsubrs
add
xchg
les
or
mov
ret
pop
push
daa
jne
pop
loope
xor
ficoml
cmp
or
inc
hlt
add
je
mov
xor
or
jbe
mov
jg
jbe
clc
clc
movsl
fldpi
xlat
pusha
hlt
cwtl
mov
sub
sub
push
cmc
add
mov
sti
sub
or
fistl
popf
jmp
xor
push
icebp
test
lret
mov
mov
cli
inc
loopne
cmp
adc
aaa
xchg
cmp
lods
xchg
xchg
fidivs
mov
mov
jmp
mov
movb
sbb
lods
or
or
mov
pop
add
lret
pop
sub
xlat
adc
push
mov
sub
call
repz
push
mov
dec
std
mov
jo
xchg
mov
jae
cmp
pushf
and
xor
mov
adc
stos
es
xor
push
dec
xor
shr
cmp
sub
push
cmp
xorl
push
lret
push
jl
cmp
jne
mov
push
nop
jb
adc
cmp
sbb
cmp
or
dec
leave
stc
mov
or
rcpps
ss
jo
add
push
inc
sub
adc
xchg
mov
adc
adc
lahf
jmp
lds
mov
cmp
sbb
xchg
mov
pop
jnp
cmp
push
in
and
cmc
or
je
lret
push
roll
mov
cmp
daa
scas
fwait
mov
out
add
sbb
inc
addr16
stos
xchg
aad
lods
cmpsl
enter
bound
nop
mov
mov
insb
cmc
nop
mov
jecxz
mov
in
ja
das
and
jl
push
arpl
scas
mull
sbb
xchg
rcrl
sub
jecxz
sub
call
mov
cmp
outsl
rcll
mov
mov
mov
add
stc
mov
fnstenv
mov
hlt
pop
cltd
test
mov
loopne
mov
iret
adc
mov
icebp
jnp
pop
lcall
adc
push
mov
je
xlat
adc
cmp
leave
in
sub
test
mov
sub
pop
dec
sbb
arpl
or
cwtl
xor
pop
mov
inc
rcll
cltd
jbe
cwtl
jno
rorl
rcrb
sub
int
jecxz
ljmp
pop
pop
fs
jmp
xchg
dec
test
fsts
out
push
inc
mov
hlt
cmp
js
inc
fdivs
rclb
xchg
jno
mov
mov
ja
sub
xor
pop
aad
sbb
inc
out
sbb
movsl
mov
or
jmp
lcall
orb
test
mov
pushf
pop
xchg
mov
cmp
or
enter
dec
sbb
je
mov
or
xor
and
cmc
mov
scas
add
mov
cmp
roll
sar
lea
es
inc
xchg
add
sub
iret
or
pop
push
enter
addr16
add
dec
mov
mov
pop
cmp
push
cmp
inc
insl
unpcklps
lcall
clc
fwait
and
fistl
adc
sub
test
in
mov
mov
push
adc
addr16
popa
cld
pop
mov
int
mov
sti
or
fimull
dec
cli
fistl
xor
shl
mov
sti
and
dec
xlat
testb
jbe
mov
adc
out
fidivl
ret
out
lret
test
jle
je
aam
ljmp
mov
sub
repnz
aad
cli
add
mov
dec
sub
adc
and
int
mov
out
sub
js
popa
sub
dec
fildl
out
jns
cmp
or
jmp
not
xor
and
fstps
or
movb
and
xchg
sub
push
js
and
stos
adc
jno
lret
jmp
xor
sbb
push
lcall
xor
pop
pop
pop
mov
jl
xchg
adc
mov
lahf
fsubl
jg,pn
xchg
sbb
or
mov
sub
xor
ficompl
jmp
mov
insl
out
ret
inc
mov
mov
inc
imul
push
aad
and
je
add
test
aaa
in
insb
pop
pop
iret
stos
scas
mov
lods
push
push
aam
ss
inc
leave
cmp
xor
mov
xchg
mov
ja
xchg
lds
or
and
and
gs
add
xor
or
xor
push
sbb
mov
lods
add
nop/reserved
mov
xchg
pop
into
lds
daa
mov
dec
mov
sbb
mov
lea
sbb
rcrb
je,pt
sti
sub
pop
jo,pn
cmp
add
and
repz
mov
xchg
test
jmp
cwtl
cmp
imul
shlb
sbb
inc
sub
sbb
cmpsb
sub
rclb
mov
inc
rcll
or
ja
cmc
push
ljmp
je
sarb
adc
out
movsb
loopne
pop
inc
js
cmp
int
ja
mov
out
insb
push
mov
loop
add
jl
or
ret
mov
sti
imul
add
inc
jae
ljmp
pop
sbb
xor
or
cmp
ljmp
aam
mov
js
adc
adc
adc
or
push
mov
sbb
sbb
inc
jg
xchg
fwait
sbb
fisubl
adc
xor
dec
jmp
pop
hlt
inc
repz
pusha
xor
or
ret
or
fdivs
xlat
add
es
cmp
fstpt
std
adc
js
xchg
add
shrb
push
addr16
lahf
jmp
lcall
cmp
xor
ret
ja
mov
push
and
sbb
mov
insb
test
addb
mov
or
cli
mov
mov
nop
adc
mov
in
mov
cwtl
add
add
pop
loope
orb
pushf
fidivrl
ss
mov
adc
cmpsl
cld
mov
jg
cmp
cltd
sub
mov
jnp
sti
imul
jmp
mov
mov
jns
jge
clc
rclb
sbb
nop
aad
daa
call
push
and
mov
or
stc
ret
jmp
jae
fcompl
aad
or
fistl
lods
fs
scas
xor
mov
cmpsl
jnp
sbb
mov
inc
dec
sub
add
mov
push
insl
cmpsb
sti
push
js
scas
inc
mov
lret
mov
xor
cmp
pop
movsb
sub
scas
push
das
cmp
mov
and
testl
adc
sub
imul
enter
push
pop
leave
cmp
dec
or
lret
outsl
add
mov
test
dec
mov
xchg
ds
adc
inc
mov
sub
ljmp
int
pusha
push
sub
adc
mov
ljmp
int3
push
xor
or
loopne
jae
sbb
shlb
push
imul
push
loopne
addr16
dec
cltd
dec
mov
pop
fiaddl
dec
inc
dec
cmp
or
mov
mov
cmp
iret
or
sub
ss
jmp
mov
mov
adc
ss
fwait
mov
jnp,pt
std
and
dec
adc
ficoms
sbb
mov
sub
fisttpll
insb
xor
pop
xor
lea
push
mov
dec
call
xor
mov
push
sub
sahf
nop
sbb
add
out
xchg
adc
xor
push
xor
das
jmp
push
cli
inc
cmpsb
fiaddl
js
ljmp
imul
cmc
std
pop
cmp
lret
dec
or
adc
push
outsl
fst
popa
divb
xchg
sub
and
sub
insb
xchg
fdivl
and
push
jo
pop
adc
push
mov
adc
lret
sub
pop
cmp
push
cmp
mov
xchg
jns
xchg
das
and
adc
sub
lock
adc
cmp
sahf
orb
popl
sbb
jmp
pop
mov
lret
cmp
push
jmp
test
dec
stc
jnp
cwtl
mov
sbb
mov
mov
xor
fdivs
repnz
xor
cld
adc
mov
mov
leave
cmp
ret
jno
js
cmpsb
sub
push
mov
pushf
jb
pop
mov
mov
lcall
je
movsl
dec
xabort
rorb
sbb
out
cli
fcmovb
push
cmp
fistpl
enter
out
xor
jle
xor
out
mov
inc
and
and
pop
cmpsb
xchg
movsl
loopne
cmpsl
out
mov
mov
pop
scas
inc
inc
pusha
xor
jns
sbb
fisttpl
xchg
mov
je
or
and
xor
push
insl
daa
or
fisubs
sub
test
mov
jmp
dec
xchg
out
roll
sub
mov
jns
es
mov
jmp
inc
stc
nop
sahf
int
xor
fcmovb
mov
pop
jecxz
push
jl
sbb
mov
jecxz
mov
loop
rcrl
adc
pop
add
inc
addr16
movsl
aaa
sub
pusha
cltd
lcall
orb
xorl
clc
mov
sub
sbb
and
push
cmp
fs
inc
sbb
sub
push
sarb
and
cmp
scas
fistpl
xchg
push
bound
fstpl
sbb
mov
sbb
sbb
dec
mov
ficoml
notl
cmp
jnp
sbb
mov
pop
lret
fsts
dec
in
lret
jmp
pop
mov
fisttpl
fcoms
add
and
mov
mov
mov
fcmovne
sub
mov
cltd
fstp
test
sbb
push
dec
push
sbb
lret
sub
jp
push
cltd
push
sbb
and
mov
pop
sbb
lret
or
sbb
sbb
adc
cmp
push
sbb
xor
sti
sbb
mov
xchg
rcrl
dec
pop
inc
cwtl
xlat
fnstcw
dec
fstpt
lret
push
cmp
or
pop
push
fdivrs
jmp
xor
aam
dec
jp
or
and
insb
dec
stos
mov
dec
cmp
lret
sbb
sbb
jmp
dec
add
sti
push
stos
xor
dec
imul
or
cmp
or
iret
dec
lret
mov
fcmovne
jnp
sub
adc
adc
rclb
nop
stos
lret
push
push
lret
pop
cmp
mov
dec
xchg
and
jecxz
mov
fcmovnbe
leave
mov
fisttpl
cmp
in
or
sti
sbb
mov
enter
lcall
cmp
jns
mov
sbb
sbb
dec
cmp
adc
test
imul
pop
cmp
dec
fstpt
push
lret
dec
cmp
sub
or
add
xlat
dec
test
or
test
pop
push
sub
sbb
cmp
lret
xchg
mov
jnp
dec
lret
leave
lret
imul
sub
sub
pop
js
mov
mov
fldt
fwait
mov
mov
es
cwtl
mov
inc
out
cs
sti
popf
mov
repnz
shl
ja
pop
leave
js
fisubl
or
mov
aad
clc
andb
xor
pop
sub
dec
cld
xor
mov
shrb
sub
or
fldcw
ret
push
mov
icebp
outsl
inc
add
pushf
js
adc
negl
dec
test
aam
jno
jno
and
inc
xor
sbb
adc
pop
aam
xor
cmp
mov
pop
sbb
mov
aaa
pop
jmp
cmp
push
xor
pop
cmpsl
adc
movsb
jecxz
cmpsl
outsb
sub
push
sbb
dec
mov
and
and
push
movsb
mov
movsb
divb
mov
push
sub
cwtl
ret
fnstenv
xchg
ja
andl
pop
fdivrs
pslld
push
add
notb
add
in
xor
jg
push
arpl
out
cmp
xchg
inc
mov
fcmovu
pop
xchg
pop
push
insl
icebp
mov
inc
or
add
sub
fimull
mov
clc
das
sti
pop
dec
push
adc
js
stos
mov
push
mov
ds
push
outsb
push
jae
mov
or
mov
add
stc
push
adc
mov
loop
mov
pop
lret
jnp
lods
testl
inc
and
add
sbb
jnp
test
inc
std
xchg
mov
fsubrp
ss
fdivrp
push
jnp
xor
jb
and
mov
dec
add
xor
stos
leave
and
lret
inc
mov
and
ljmp
push
in
adc
loope
add
add
insl
mov
jne
std
xor
shlb
push
xchg
or
inc
inc
dec
push
js
clc
pop
jo
icebp
jnp
fisubl
psrlq
push
and
shrb
dec
decb
xorb
adc
push
push
pop
mov
mov
fnstcw
mov
mov
cmp
mov
sub
arpl
ret
sub
lret
mov
add
shll
xchg
and
sti
mov
jbe
cmp
in
gs
cwtl
push
pop
fs
pop
cmp
aaa
repz
stc
fildll
pop
mov
sbb
pop
fcoms
out
lea
cmp
lret
pop
movsl
mov
fwait
and
jnp
dec
mov
fildl
popa
mov
sub
cmp
orl
stos
dec
dec
mov
inc
and
cmp
mov
jg
loopne
inc
pop
xlat
hlt
jmp
cmc
loope
dec
stc
push
test
daa
lds
dec
jb
je
cmp
mov
xchg
orl
mov
aam
fs
cmp
pop
shrl
jnp
imul
jl
sbb
jnp
sub
pop
sbb
xor
cmp
rcll
xchg
sarl
sbb
sbb
leave
inc
mov
lds
cmpsb
adc
arpl
test
push
add
in
stos
movsb
adc
push
test
in
or
mov
shr
pusha
cmc
sbb
inc
mov
fnstcw
icebp
lahf
adcb
xor
jmp
cmp
inc
xor
jnp
jl
fisubs
adc
flds
notb
loop
inc
or
test
std
mov
outsl
adc
and
cmpsb
fcoms
ss
bound
sbb
mov
pop
nop
jmp
cmp
test
ss
gs
jnp
test
or
dec
lret
jl
jnp
push
pop
sti
xlat
sbb
enter
adc
ja
call
test
mov
mov
mov
mov
xor
pusha
test
mov
scas
xor
fildl
sbb
call
jl
pop
cmp
shll
push
sub
adc
fnstcw
enter
in
mov
sahf
int
fsubp
mov
adc
adc
fnsave
sbb
imul
out
sub
push
jnp
aaa
sti
dec
pop
stc
imul
pop
jno
sbb
les
stos
push
sub
lds
add
pop
or
xor
mov
xchg
mov
push
sbb
dec
pop
mov
and
or
fwait
outsl
adc
or
xor
cwtl
outsb
sbb
cmp
cltd
inc
adc
out
fdivr
adc
push
repz
push
sub
cs
xor
adc
xchg
add
push
xor
ja
sub
xor
and
push
js
dec
call
lret
jg
orb
dec
inc
fisubs
dec
inc
pop
mov
cmp
sbb
invd
sti
dec
andl
pop
pushf
shll
or
dec
ret
test
test
sub
popa
cmc
mov
push
mov
cmp
cmp
add
jb
gs
sti
in
imul
call
ret
xchg
lret
xor
cld
outsl
sbb
inc
jecxz
mov
mov
dec
jmp
mov
xchg
mov
xor
sub
pushf
push
imul
add
sbb
cmpsb
nop
dec
xor
mov
mov
lods
cmp
cmp
fidivl
inc
mov
test
dec
dec
and
ss
adc
cli
xor
jnp
hlt
jge
pusha
scas
fisubl
xchg
popa
xor
pop
add
jg
adc
enter
push
out
sub
push
stos
mov
mov
add
sbb
int
cmpsl
ret
pop
mov
and
dec
je
adc
cmp
arpl
movsl
dec
fdivp
arpl
mov
cs
lahf
sbb
mov
sbb
int3
push
into
sbb
bound
mov
pop
xchg
in
xchg
lret
mov
mov
cmc
dec
fidivrl
movb
push
repnz
lahf
or
dec
sub
test
jl
xchg
lock
sahf
or
mov
push
xor
mov
lcall
push
out
jg
imul
jnp
and
lret
pop
fadd
movsl
lret
push
add
xchg
and
imul
mov
fcoms
test
inc
pop
inc
imul
mov
out
test
and
or
jnp
sbbb
mov
inc
leave
hlt
xchg
sti
sbb
addb
or
sti
outsl
fldt
push
jnp
cwtl
cmp
gs
xor
xchg
adc
int
mov
in
leave
pusha
jb
enter
cmc
push
or
jb
push
lcall
es
cmp
push
inc
fisubl
sbb
lock
pop
cwtl
hlt
add
rcrb
insb
mov
je
movl
js
in
mov
loop
pop
mov
add
xchg
movsl
sub
fstpl
xchg
pop
jl
inc
push
ja
push
sbb
ss
sbb
push
sub
pop
adc
push
mov
fnstcw
inc
das
sub
dec
sbb
jl
xor
sbb
sub
ds
and
shl
pop
in
mov
mov
xchg
or
rolb
sbb
sbb
jae
mov
jns
add
sbb
mov
out
mov
mov
lods
lret
ds
iret
or
adc
cmp
sbb
ss
pushf
xor
je
push
pop
push
jge
xlat
js
out
mov
mov
leave
xchg
pusha
pushf
sub
sti
or
mov
loop
fstpt
hlt
dec
lods
adcb
movsb
add
dec
dec
fwait
nop
out
xor
push
pop
mov
sub
gs
pop
mov
addb
add
sub
and
push
mov
jp
gs
push
and
filds
mov
or
push
inc
aad
aad
push
fnstenv
movb
out
mov
lret
les
and
pusha
adc
sbb
cmpsl
fcmovbe
rclb
dec
push
cmp
mov
pop
pop
gs
fiaddl
xorl
xor
dec
add
lret
test
pop
dec
push
loopne
test
js
cmc
cwtl
mov
arpl
test
mov
sar
in
jne
fcoms
stos
mov
popa
xor
call
mov
xchg
add
xor
lret
test
push
pop
cwtl
push
je
mov
jbe
and
push
and
mov
pop
jg
inc
enter
aam
cmpsb
outsb
sbb
add
data16
in
lret
mov
push
inc
hlt
cmp
loopne
cs
ficoml
jbe
out
out
lock
cmp
enter
in
mov
jecxz
mov
movsl
iret
adc
mov
push
lret
mov
add
cmp
xor
ds
xchg
push
mov
fisubl
jl
dec
sbb
push
xor
insl
sub
lods
jl
adc
sbb
fcmovb
and
sub
sbb
mov
js
aaa
or
or
and
lea
ds
je
and
push
test
xlat
sub
je
mov
fmull
fisubrl
mov
jp
ficoml
pop
mov
aaa
push
addr16
mov
inc
xchg
cmp
xor
rcll
jns
mov
adc
inc
lret
or
add
gs
hlt
leave
pop
js
xchg
xor
xlat
rcr
popf
rolb
pop
jmp
fistl
mov
test
jno
add
push
mov
ja
inc
xor
or
std
pop
mov
jg
out
xor
dec
pop
sbb
sub
sbb
pop
xchg
adc
sbb
add
sub
arpl
sbb
or
sub
xchg
outsl
inc
sub
cmp
sbb
fwait
mov
mov
or
scas
lcall
jmp
jnp
cmp
pop
bound
pop
fwait
cmp
xchg
adc
mov
push
sbb
fcmovnb
jae
pop
sti
fcmovu
xchg
push
and
addr16
add
lcall
mov
xor
js
por
mov
clc
imul
jo
xor
mov
push
mov
js
cmp
sahf
inc
add
pop
add
shlb
xlat
jae
mov
jge
jno
push
lea
mov
insl
dec
xor
clc
repnz
lcall
mov
jae
aaa
and
pop
imul
mov
cmpsb
xchg
cmp
and
movsb
sub
xchg
movsl
push
scas
sbb
scas
pop
bound
aas
mov
dec
jo
mov
subl
cmp
xchg
popa
leave
adc
lods
jno
cld
or
jne
xchg
repnz
lcall
mov
or
add
jne
in
mov
mov
mov
mov
xchg
or
mov
sbb
mov
dec
rorb
or
test
sub
xor
cmp
xor
jne
xor
xorl
dec
sti
stos
cmpsb
lcall
xchg
cmpsl
inc
dec
lods
cmp
push
pushf
cmp
sub
mov
dec
sbb
and
and
fstpt
into
dec
xchg
mov
mov
addb
pop
lods
jp
fstpt
pop
ljmp
mov
jo
mov
mov
into
and
pop
add
or
cmp
mov
sub
int
push
mov
cmp
mov
jmp
cmp
cmp
cmp
sahf
adc
rcrl
repnz
dec
pop
mov
pop
xchg
pop
jle
pop
jp
pop
push
pop
bound
pusha
cmp
dec
cmp
cmp
lret
push
or
xor
jne
sahf
and
clc
adc
out
test
or
outsb
xchg
jno
adc
or
xlat
sbb
xchg
insl
inc
adc
lret
mov
sahf
ret
jle
lock
int3
pop
dec
fcmovnb
sub
rcrl
push
nop
xchg
add
enter
in
stos
xchg
or
mov
push
imul
fistpll
mov
mov
inc
cmpsl
xchg
jg
pop
pop
pop
lods
stos
sbb
xchg
leave
cmp
fcompl
and
mov
xor
xor
cmpsl
jle
aad
xchg
mov
xor
test
mov
xlat
mov
sbb
mov
add
mov
jl
call
xchg
xor
mov
sarb
cmp
imul
dec
or
imul
adc
jl
fsubl
int3
xor
jge
adc
cwtl
mov
pusha
xor
inc
enter
xchg
int
lret
dec
adc
roll
mov
cld
mov
and
insl
add
mov
mov
lods
test
or
test
adc
mov
push
inc
andl
mov
into
ja
lea
add
loope
cmpb
and
lret
xchg
les
inc
xchg
push
cmp
xor
and
pop
call
push
push
pop
aas
test
push
pop
outsb
js
gs
sub
shlb
or
inc
lea
lock
push
sub
mov
push
fcmovnbe
push
or
push
fiaddl
fistl
jne
dec
cmp
lret
int3
cmp
xor
xor
push
cmp
pop
cmp
xor
insb
cmp
adc
adcl
lds
popa
push
movsb
test
cmp
sbb
orl
cltd
mov
cwtl
sbb
xchg
or
jno
dec
push
je
call
ljmp
push
fldenv
dec
orl
dec
cld
lods
mov
fcoml
pop
popa
xor
clc
xchg
xor
lcall
sti
fwait
mov
jge
shll
mov
adc
test
int
inc
mov
enter
gs
lret
jnp
mov
pop
hlt
and
push
cmp
jno
pop
dec
jo
clc
sbb
or
mov
xchg
mov
imul
iret
pop
fists
cmp
call
adc
fldt
in
cmp
arpl
rol
mov
rcrl
lret
andb
push
mov
mov
lret
sbb
pop
divb
inc
jno
imul
ja
push
cs
cli
mov
shlb
jno
int3
lds
mov
mov
jp
mov
fadd
sti
xchg
subl
mov
icebp
shrb
fdivs
jae
arpl
cmp
inc
xchg
pusha
cld
aas
out
pop
or
lret
jl
test
out
out
cmpl
dec
out
jg
les
mov
orb
jle
jmp
mov
outsb
mov
fisubrs
stc
aad
sub
or
sbb
mov
aaa
pop
imul
negl
ret
pop
xchg
fiadds
arpl
arpl
inc
into
pop
mov
mov
push
mov
and
imul
lret
shll
mov
outsb
adc
and
xchg
jno
frstor
aad
dec
xchg
cltd
pop
rcpps
push
xchg
mov
push
inc
popl
sbb
pushf
sub
pusha
jl
inc
xchg
pop
xchg
jle
fs
jge
and
insb
sub
cmp
cwtl
xchg
mov
ja
push
dec
dec
cmpsl
inc
inc
jns
pop
cmp
imul
daa
inc
cmp
sbb
aad
mov
dec
pop
cs
stc
xchg
es
and
push
mov
sub
jmp
ss
clc
pop
stos
dec
mov
mov
or
pop
xlat
and
arpl
dec
sbb
push
pop
daa
roll
aaa
cmpsb
cmp
and
mov
imul
xchg
push
mov
adc
cmp
push
xor
jbe
sbb
sub
call
cld
sti
cmp
getsec
cld
inc
lret
dec
pop
mov
push
nop
loopne
in
ljmp
imul
movsb
mov
jp
loop
xchg
cmpsb
shll
add
imul
lcall
adc
sbb
adc
and
lock
out
mov
inc
xlat
dec
bound
or
xchg
lcall
mov
and
shll
es
pop
add
packuswb
aas
sbb
jno
mov
xor
mov
aam
hlt
xchg
add
lock
sub
sub
aaa
mov
rcrl
mov
lret
jnp
scas
fidivs
xor
xor
jb
pop
daa
jne
scas
ret
mov
adc
dec
ret
cltd
fildl
and
sub
or
ss
or
scas
nop
push
pop
loope
into
fisttps
add
pop
inc
jae
xchg
add
out
idivb
or
pop
add
push
hlt
push
push
mov
xchg
sbb
ljmp
loope
adc
push
push
push
or
jecxz
in
mov
mov
push
gs
rorb
push
dec
mov
jmp
or
out
ret
add
add
dec
dec
pop
mov
adc
xchg
pop
sub
push
dec
scas
pop
ss
cs
inc
push
mov
lcall
push
pop
xor
mov
sub
and
xor
iret
repnz
inc
repz
push
cmp
inc
add
fdivl
jmp
repnz
sub
test
push
push
jmp
cmp
sbb
shll
push
cmp
fdivrs
mov
dec
xlat
jns
mov
repz
xor
stos
pop
xor
sub
add
xor
lret
sti
cmp
popa
dec
add
or
adc
cmp
dec
pop
dec
push
cs
dec
pop
sub
pusha
push
hlt
sar
dec
or
push
dec
inc
push
pop
aam
ss
or
mov
lods
cmp
jmp
sbbb
fwait
sbb
jecxz
cmp
sbb
fistpl
arpl
sbb
rcl
xor
push
iret
dec
jb
cmp
mov
push
push
ret
push
hlt
rcll
push
fidivl
dec
scas
dec
sbb
repz
rorl
das
pushf
push
pop
sbb
div
arpl
dec
mov
ret
push
test
or
data16
repz
push
xchg
movl
pop
cmc
dec
imul
dec
gs
mov
leave
jb
dec
fdivrl
push
int
push
add
repz
xor
inc
sahf
aam
orb
seta
sbb
int
push
jno
inc
orl
test
arpl
sbb
and
in
dec
mov
mov
push
pop
insb
dec
fcmovnb
push
push
or
pop
hlt
mov
push
mov
cli
rol
mov
scas
sbb
jle
push
and
mov
dec
xchg
repz
dec
push
test
mov
sub
aas
mov
pop
addr16
sbb
push
pusha
push
inc
push
cwtl
sub
xlat
pop
dec
xchg
pop
cmp
out
sbb
push
pop
xor
imul
xchg
inc
cmp
xor
sbb
jl
mov
cmp
lods
ret
adc
or
shr
inc
outsb
arpl
inc
imul
sar
dec
aad
xchg
jg
xor
shll
jbe
subl
jbe
xchg
cmp
lahf
dec
movsl
xchg
out
cmp
pop
jne
mov
jb
sbb
jns
adc
je
mov
push
and
in
pop
out
xor
test
xchg
dec
push
xlat
ja
pop
cmp
cmp
dec
es
push
jg
in
push
mov
ds
mov
rcrl
push
ljmp
ror
enter
xchg
ror
imul
and
xchg
jg
frstor
xchg
inc
dec
mov
fs
jnp
or
jmp
xor
imul
cmc
cmp
sub
test
out
pop
scas
cmpsl
xchg
fdivrs
xor
sub
daa
and
or
jne
jmp
dec
cmp
clc
insb
push
add
loop
sbb
adc
cmp
pop
out
jnp
jo
les
jmp
mov
cmp
imul
xchg
jnp
lcall
pop
cld
cmpb
sbb
jg
mov
mov
push
pop
xchg
or
dec
xor
sub
pop
ja
addr16
jnp
inc
xor
mov
dec
stos
xchg
stc
mov
sbb
dec
jne
les
cli
test
pop
cs
adc
lcall
mov
mov
cwtl
dec
mov
pop
ret
in
stos
mov
fistpl
jle
pop
xor
jecxz
jmp
xor
add
mov
fwait
sub
or
or
cmc
cmpl
push
fdivrs
test
outsb
lds
aad
test
add
into
aam
cld
je
cmp
mov
mov
push
pop
mov
or
loopne
and
cmp
sbb
jp
jno
fwait
or
test
mov
outsl
dec
pop
push
fcmovne
into
dec
fsubr
js
mov
adc
imul
fsts
xor
xchg
mov
add
and
inc
in
pop
cwtl
scas
mov
push
sub
xor
cwtl
popl
cmp
js
push
jmp
cld
mov
mov
push
call
pop
rcrl
sub
jb
stc
inc
jnp
clc
adc
add
pop
push
xor
into
cmp
repnz
jge
es
push
movsb
fisttpll
gs
mov
fistps
sub
pop
dec
jae
and
nop
jb
adc
lcall
push
mov
push
xchg
inc
xchg
xchg
mov
sbb
dec
xchg
subl
out
jae
mov
push
mov
leave
pop
inc
dec
cmpb
ja
cli
jecxz
dec
in
and
and
inc
jo
mov
stc
cs
mov
push
or
stos
or
int
inc
or
mov
adc
mov
es
pop
or
ret
xor
inc
inc
xchg
jae
mov
mov
mov
add
outsl
aad
push
and
or
out
inc
dec
pop
repnz
cli
scas
dec
notl
enter
push
cmpsl
ljmp
xchg
out
push
fistpl
jnp
adc
arpl
cmp
cmc
pop
not
clc
fldcw
push
xlat
cmpsl
cmpsb
add
and
sub
pop
ja
fdivrs
sub
dec
dec
dec
inc
mov
lret
cltd
pop
or
push
push
inc
inc
jp
pop
push
xchg
dec
dec
jns
stos
adc
fstp
push
pop
cmp
push
arpl
pop
imul
add
jmp
push
cmp
sub
std
xchg
jmp
add
icebp
ror
test
push
xor
adc
sub
jl
in
jmp
or
std
pop
dec
adcl
inc
mov
xlat
lret
pop
push
fdivp
lcall
sub
cltd
xor
imull
mov
mov
mov
mov
jbe
fucompp
stos
add
ds
iret
adc
xor
popa
ja
xchg
add
mov
pusha
cmp
lcall
idivl
outsl
or
jecxz
jmp
leave
ss
popa
leave
popa
ja
outsl
cmp
xor
sbb
test
dec
dec
in
xchg
jnp
divb
xor
or
or
adc
hlt
outsl
push
mov
xchg
or
pop
cmp
ja
pand
mov
lds
adc
loope
push
lret
ss
jmp
ja
fsts
in
cmpsb
sub
xchg
add
xor
xor
inc
cmp
repnz
lds
dec
jno
dec
jnp
aam
and
pop
fistpl
push
mov
and
cltd
rclb
push
push
xor
or
mov
sub
and
sbb
adc
mov
adc
sarl
cmp
xor
addr16
xor
loope
jbe
or
or
testb
dec
push
sbb
jnp
pop
and
js
push
hlt
cs
sbb
repnz
cmp
adc
xor
rcll
adc
int
js
push
mov
dec
cmp
or
pushf
push
mov
add
push
mov
dec
xor
inc
sbb
jnp
ss
out
mov
fsts
push
dec
lea
ja
pop
dec
mov
and
fnstenv
push
mov
xor
sub
mov
pop
mov
mov
cli
out
popf
hlt
enter
pusha
cmc
push
pop
adc
iret
pop
sbb
mov
jnp
rcrb
jle
ss
aad
cmp
pop
gs
add
jge
movsl
or
push
movsb
imul
movsl
jns
sbb
aam
insb
xor
mov
fcomps
xlat
orl
cltd
adc
cmp
stc
es
les
mov
add
mov
nop
xchg
cmp
adc
bound
cmp
mov
sbb
loopne
sti
ljmp
rcrl
fildl
sub
mov
clc
push
sbb
dec
sub
cmp
pop
mov
test
sti
pop
cmpsb
sbb
mov
dec
and
test
popa
enter
pop
nop
call
pop
or
mov
inc
or
dec
push
fisttpl
dec
xchg
fstpt
mov
sbb
inc
jp
pop
dec
lret
imul
lcall
lcall
mov
movsl
cmpsb
popl
rorl
cvttps2pi
cltd
cltd
mov
lds
jle
adc
loopne
inc
ret
jns
frstor
push
daa
fadd
sub
sahf
stc
out
test
xor
std
in
push
cmp
fstpt
lahf
pop
xchg
idivl
sub
movsl
stc
sbb
lahf
cwtl
fmull
add
stc
ret
out
dec
addr16
jo
mov
push
fmul
fildl
sbb
int3
adc
fbld
jge
cld
mov
xor
jns
xor
push
mov
xor
push
loopne
ret
lock
pop
imul
nop
gs
push
sbb
jne
loope
sbb
sub
sbb
shlb
pop
adc
mov
sub
mov
or
notl
push
cmp
push
xor
dec
push
xchg
iret
mov
push
xchg
in
mov
sbb
add
inc
push
sbb
cmp
icebp
cmp
sarb
jbe
push
stc
fnsave
nop
push
cmp
sub
dec
xchg
ss
stos
jns
cmp
mov
push
inc
mov
lret
push
sbb
pop
pop
adc
notb
pop
push
cmp
jmp
jmp
sbb
js
sbb
divb
sti
test
pop
and
inc
clc
arpl
stc
push
cmp
gs
jmp
out
lcall
push
fldcw
xchg
push
ljmp
ja
sbb
into
push
lcall
mov
push
out
mov
pop
sbb
aad
dec
nop
cmp
sti
cmp
imul
fsubs
sti
push
lcall
sti
jmp
jnp
cmp
mov
sub
and
pop
cwtl
pop
push
cmp
adc
pop
iret
xchg
dec
enter
push
aas
nop
lret
rcrl
dec
shlb
dec
push
jp
aas
pushf
iret
push
and
cwtl
add
ficoml
call
mov
aas
dec
cmp
cmp
adc
nop
ror
fstpt
inc
jo
lcall
loop
cltd
les
sub
xchg
lcall
xchg
ret
sbb
cmp
push
push
test
pop
jecxz
cltd
mov
clc
fwait
in
push
mov
sbb
nop
xor
ja
rcl
lret
fstpt
cmpsl
je
adc
lret
scas
lahf
sbb
loop
cwtl
cltd
push
in
jp
dec
lret
cli
sti
jmp
add
lock
fcoms
jecxz
fmuls
outsl
cmp
cli
push
out
dec
fwait
cmp
outsl
negl
cmp
cmp
mov
jae
fisttps
pop
mov
les
aam
add
mov
cltd
add
cmp
sbb
and
sbb
push
mov
in
push
adc
mov
aas
cmp
ljmp
ficompl
cltd
pop
mov
jecxz
sbb
inc
ficoml
push
xchg
ficomps
sti
iret
cmp
mov
popa
sar
fisttpl
or
mov
mov
dec
mov
jnp
fistps
or
lcall
dec
sti
js
jp
and
je
cwtl
mov
xchg
sbb
push
cmc
xchg
fadds
xchg
cmp
fists
sbb
pop
cmpsl
sub
push
idiv
xor
mov
sti
push
dec
nop
pop
ja
pop
ds
dec
sbb
cmp
pop
dec
outsl
stc
mov
nop
cwtl
aam
pop
iret
cltd
aam
jae
dec
fnstenv
sti
dec
cmp
arpl
push
sar
inc
dec
sbb
fwait
xor
sti
lret
cwtl
xor
push
xor
inc
or
mov
dec
dec
int3
pop
or
adc
push
js
dec
adc
ss
xor
add
dec
push
mov
pop
sub
mov
jb
jnp
pop
or
push
mov
xchg
inc
leave
cmp
mov
aam
and
jns
cltd
and
pop
cmp
loop
cmp
leave
cli
addb
sbb
out
int
xchg
lcall
sbb
pop
pop
arpl
sbb
pop
js
aaa
pop
pop
push
movlps
aam
pop
sbb
sbb
arpl
fwait
adc
mov
pop
cwtl
sbb
loope
subb
xchg
flds
cmp
cmp
push
cwtl
cmp
add
sti
adc
add
pop
fstpl
pop
add
xlat
adc
adc
jns,pn
pop
cli
cmp
push
cwtl
idivb
xlat
fwait
repnz
pop
repnz
sbb
fildll
out
mov
ds
lcall
sub
stos
xor
out
cli
dec
fidivs
dec
fwait
add
pop
ficompl
push
cltd
mov
sbb
pop
jmp
fadds
mov
aas
xlat
sbb
lahf
in
mov
mov
mov
outsl
pop
adc
mov
pop
push
jns
mov
pop
xchg
push
or
jnp
fidivl
adc
lahf
sbb
pop
loopne
ds
lret
nop
pop
mov
mov
fistpl
push
xchg
xchg
fwait
outsb
push
xchg
std
fwait
adc
pop
fistl
sbb
pop
add
sbb
rcrb
pop
stc
xchg
data16
pop
aam
push
xor
sbb
pop
dec
xchg
mov
pop
aam
bound
arpl
repz
lcall
pop
and
cmp
loopne
sbb
nop
pop
mov
lret
lahf
adc
pop
bound
or
xchg
mov
in
cmp
cmp
push
loop
mov
jns
sbb
cltd
jge
pop
loopne
mov
fsubrs
fildl
jle
insb
dec
sub
sbb
sbb
aaa
adc
sbb
push
xor
rorl
and
pop
push
stos
xor
out
sbb
xchg
push
addb
jp
jmp
lret
adc
sysenter
xlat
pop
dec
movsl
cmp
push
and
push
sbb
xor
xlat
pop
add
arpl
push
xor
cmp
stos
int
fwait
and
pop
fwait
enter
pop
les
call
test
cmpsl
cltd
push
sbb
inc
jmp
cmpb
int3
mov
dec
inc
sbb
mov
fstpt
fs
push
and
rcrb
add
sub
test
cli
fistpl
jns
ret
xor
sub
pop
iret
dec
decb
lret
push
lahf
fisttpl
dec
sub
pop
mov
add
adc
ss
fidivl
jns
daa
lahf
cmp
mov
rorl
sbb
mov
insb
inc
sbb
cs
cmp
sti
fdivs
cmp
push
push
sbb
inc
push
mov
push
sti
aas
cltd
xchg
sbb
lret
fnstenv
stos
pop
mov
jmp
aad
xlat
fwait
std
push
pop
pop
dec
jmp
adc
leave
fstpl
call
cmp
xchg
push
xchg
jnp
push
sarl
xor
jl
sbb
sbb
pop
cltd
adc
ss
rolb
and
jl
xor
mov
fmuls
cmp
push
fistl
xor
testl
enter
sarl
cltd
or
push
sti
lret
cmp
jae
sbb
mov
push
jecxz
add
fucomi
push
jae
negl
shr
fcmovnu
xchg
aas
fstpt
dec
cmp
or
sub
out
sti
ror
cltd
cmp
push
clc
mov
out
cs
push
xchg
stc
lock
add
mov
fidivrl
mov
fcmovnb
xchg
dec
stc
test
lret
sbb
pop
sti
mov
je
or
sbb
cmp
add
test
xchg
mov
push
xchg
sbb
pop
mov
pop
xchg
lea
cmp
xchg
mov
enter
and
pop
dec
mov
xchg
fstpt
cltd
addr16
jbe
jp
mov
shlb
fisttpl
arpl
jae
adc
mov
arpl
fcomps
jns
sbb
xchg
push
imul
mov
add
fnstcw
xor
cmp
pop
push
and
dec
mov
loop
cmp
fistpll
decl
cmp
fwait
dec
popf
mov
cli
rorl
pop
test
adc
push
clc
mov
and
les
dec
jmp
sbb
rolb
dec
sti
sbb
rorl
adc
sti
xor
lret
pop
push
mov
lcall
push
fiaddl
sbb
fcmovnbe
inc
push
shl
out
fdivr
push
mov
mov
cmp
xor
jno
mov
sbb
xchg
sbb
xchg
pop
stc
das
inc
push
pop
push
fbstp
sub
sub
cmpl
xor
hlt
xchg
mov
cmp
pop
adc
pop
movsb
das
sub
clc
xchg
jns
ja
xor
mov
push
sahf
jnp
sti
push
je
jo
cmp
sbb
pop
push
insb
sub
dec
fisubrl
xor
pusha
push
add
mov
sub
pusha
pop
pop
adc
pop
aam
dec
outsb
jae
lcall
pop
lcall
cmpsb
dec
xorb
sbb
sbb
mov
jle
inc
rcrb
xor
cltd
aam
push
mov
mov
fwait
xor
mov
cmp
xchg
mov
fisubl
adc
sbb
lcall
lret
inc
dec
lcall
jmp
cli
dec
pop
fwait
sarb
idivb
adc
adc
or
adc
std
mov
call
mov
pop
add
sbb
mov
pop
clc
cmc
cmp
cmp
pop
cld
fwait
movsb
inc
enter
loop
sbb
std
aas
pop
je
or
pop
pop
loop
jnp
fwait
cld
dec
call
sbb
dec
and
hlt
jns
push
lcall
fistps
sbb
jg
lahf
aad
pop
rorb
cltd
pop
int3
dec
push
add
sbb
cwtl
inc
mov
adc
fistpl
mov
stos
jns
out
aaa
dec
push
inc
mov
mov
leave
lahf
rcrl
jmp
dec
stos
cmp
adc
mov
sti
lret
mov
negb
pushl
sti
add
adc
push
pop
mov
test
xor
dec
inc
ret
xlat
mov
fwait
sti
dec
aas
out
sbb
cmp
xor
cmp
fistl
ja
sbb
cli
mov
pop
ds
adc
or
xlat
fmul
repnz
cmp
xchg
cmp
sbb
in
fistl
mov
add
dec
cltd
mov
dec
test
xlat
xchg
dec
jns
ja
inc
icebp
cmc
pop
push
jne
jmp
xchg
sbb
lods
add
inc
push
add
add
xor
ret
pusha
hlt
cmp
je
adc
ja
adc
jne
pop
push
movsb
push
jecxz
loop
pop
in
mov
hlt
test
dec
xor
stc
pop
test
pop
imul
mov
push
push
pop
add
outsb
or
mov
ss
scas
lahf
jp
sbb
hlt
jp
push
stc
or
sub
sbb
sti
inc
ljmp
fstps
pop
inc
ds
fisubrl
mov
pop
sub
dec
into
sbb
pop
add
inc
rclb
ja
sbb
push
dec
push
sub
out
icebp
fcmovnu
out
mov
pop
fcomps
cwtl
sbb
push
jbe
jp
xor
cltd
sbb
dec
push
f2xm1
into
aam
fwait
push
fstpl
or
jae
add
dec
and
push
lcall
cmpxchg
sti
cmp
or
push
xchg
pop
xchg
xchg
push
pop
imul
movsl
cmp
cmovnp
cld
sahf
dec
decb
cmp
decb
or
mov
mov
lcall
imulb
fwait
repnz
adc
mov
pop
fcomps
sbb
mov
out
ret
scas
jns
xchg
fnstcw
iret
sbb
adc
dec
sub
in
cmc
jbe
jmp
shll
inc
pop
addr16
sbb
rorb
fdivrs
adc
outsb
jns
cmp
inc
lcall
push
inc
jbe
sbb
push
es
sti
pop
xchg
jnp
xchg
pop
inc
stc
arpl
cmpb
cmp
push
push
xchg
test
jle
push
stos
cli
xor
into
stc
sti
shll
dec
notl
ss
lret
fistpl
aas
xchg
repz
lret
mov
rcl
dec
out
or
xchg
cmp
ror
and
add
adc
mov
jnp
ja
xchg
push
scas
lret
xchg
fwait
add
push
sbb
leave
jecxz
xor
dec
stos
ss
outsl
lret
mov
cmpsl
out
cltd
neg
xor
scas
into
or
xorl
lret
arpl
pop
pop
mov
pop
push
mov
jno
gs
pop
xlat
jnp
pop
sub
je
xchg
adc
lret
push
cmp
push
cmp
push
fdivs
pop
adc
pop
pop
cli
pop
inc
inc
cli
fisttpll
push
das
sbb
int
mov
outsb
push
sbb
sub
sti
clc
jnp
push
cmpsb
or
sbb
incl
cli
sbb
outsl
jno
mov
sub
lcall
jg
sbb
mov
ficompl
jmp
adc
xor
dec
mov
xchg
jnp
faddl
pushf
cmp
xchg
sbb
daa
push
jecxz
mov
stos
pushf
rcrb
jp
test
mov
fsubrs
cmp
outsb
jb
aam
out
xchg
loopne
pop
mov
cwtl
sub
imul
dec
mov
pop
cltd
lcall
pop
lea
fcmovnu
pop
sbb
stos
test
call
or
pop
sbb
test
into
pop
push
setge
pop
jnp
dec
dec
mov
insb
cmp
jg
cmp
pop
jns
dec
dec
mov
outsb
ds
jge
mov
lret
enter
lods
pop
out
in
mov
mov
lret
lods
scas
pop
in
out
mov
push
pop
xchg
nop
and
arpl
push
pop
xchg
xchg
and
addr16
push
pop
xchg
xchg
and
popa
bound
pop
xchg
xchg
es
gs
pop
adc
mov
aam
adc
cmpsl
movsb
out
rcl
pop
adc
mov
pop
push
pop
movsl
cmpsb
in
xor
pop
jae
inc
inc
addl
inc
inc
xchg
inc
inc
addl
xchg
ret
rolb
mov
div
mov
pop
icebp
repnz
add
pop
push
push
hlt
jnp
or
xor
xchg
pop
loop
test
mov
test
push
or
ss
sti
inc
std
cmp
pop
add
push
fiaddl
xor
clc
mov
cmp
subb
addl
sarb
dec
mov
jmp
jns
sti
ret
sub
vmwrite
das
stos
imul
cwtl
and
cmp
mov
or
mov
mov
sbb
ficoml
fildl
fcoms
fwait
imul
xchg
cltd
jge
xor
xchg
sbb
xor
pop
sbb
sbb
fdivrs
das
je
mov
sbb
addl
fiaddl
mov
fstpt
scas
out
sbb
int
fistpl
sbb
cltd
sti
pop
push
fyl2x
mov
adc
mov
fmul
outsl
aaa
imul
xor
cmc
sbb
mov
sbb
or
fcmove
fwait
movsl
vmread
adc
adc
sahf
lcall
inc
jle
mov
fimull
sbb
sbb
outsb
xchg
pop
repz
insl
push
mov
hlt
sub
dec
fadds
jno
push
push
jns
dec
ficoml
fwait
push
cmp
jno
orl
call
sub
sbb
imul
sbb
pop
pop
aas
lcall
and
pop
inc
pop
xor
je
cmp
mov
shll
rol
mov
push
cmp
mov
mov
xchg
mov
popa
mov
pop
sub
cvtps2pd
push
lret
mov
and
int3
hlt
xchg
in
fldt
xchg
gs
fwait
nop
test
inc
mov
push
adc
aam
sub
adc
bound
mov
pop
icebp
ss
js
stos
js
adc
sar
xchg
or
push
inc
cmp
sbb
std
inc
stc
push
jbe
out
out
loop
neg
div
adc
fildll
jnp
cltd
les
pop
xlat
push
dec
xor
mov
inc
mov
pop
ljmp
xchg
jbe
mov
xchg
and
cmp
push
and
mov
lods
sbb
dec
push
ss
aad
xor
aaa
lret
orl
and
pop
mov
loop
sbb
dec
mov
inc
movsl
dec
fcmovnu
out
cmp
pop
dec
fisubrs
fxch
pop
out
pop
cmp
rclb
mov
fcmovnbe
sbb
dec
test
mov
loop
clc
push
mov
mov
fistl
inc
cmp
xor
xchg
fisttpl
mov
scas
dec
mov
sbb
pop
or
cmp
sbb
sbb
mov
dec
jge
push
lret
or
loop
lods
sbb
jns
stos
mov
pop
cli
mov
push
shrl
fiadds
js
sub
jl
mov
mov
cli
clc
in
push
or
sub
sbbl
mov
adc
test
push
jns
data16
adc
shll
push
adc
orb
cmp
sub
stc
add
xor
push
push
sarl
lods
adc
jmp
cld
pop
pop
cmp
fists
pop
pop
fst
dec
pop
inc
push
pusha
sbb
push
and
sbb
pop
sub
mov
aad
cmp
push
jno
push
xor
fcmovnb
mov
call
mov
dec
cmp
rcrl
sbb
mov
pop
lret
mov
ss
sahf
mov
and
fistl
ljmp
out
xor
iret
xchg
xor
lea
mov
ret
sbb
push
sub
loop
and
sahf
xor
push
shll
aas
outsb
fcoml
inc
xchg
cmp
lret
mov
leave
test
mov
or
or
push
int
imul
je
inc
cmp
stos
sbb
daa
pand
xchg
mov
sub
mov
dec
lret
mov
mov
mov
aas
ja
sbb
mov
nop
xchg
sarl
jae
lret
mov
jnp
jns
sbb
in
sbb
sbbl
je
sbb
imul
adc
dec
and
dec
iret
sub
imul
call
cmp
cmpsl
les
jns
dec
add
pop
push
lahf
cmp
mov
stc
lcall
cmp
cmp
or
fwait
test
movsl
sti
push
fistps
add
iret
bswap
mov
aam
pause
lahf
lret
dec
adc
mov
mov
stos
xchg
bound
fildl
fcomps
cmp
out
add
jg,pn
push
ret
stos
lret
pop
lock
or
xchg
or
iret
mov
mov
lahf
mov
lods
aad
fistl
dec
aaa
inc
pop
mov
cmpsl
adc
or
movsl
pop
or
cmpb
daa
outsl
and
pop
xchg
xor
lahf
xchg
xorb
mov
lcall
and
les
js
sbb
test
and
mov
into
sbb
adc
int3
push
mov
dec
sarl
inc
cwtl
ljmp
mov
je
xor
mov
xor
dec
outsb
inc
mov
lahf
xor
fdiv
and
jecxz
dec
lret
aaa
outsl
adc
sbb
jmp
or
js
jae
addb
lods
mov
iret
jmp
xor
push
pop
in
sbb
lahf
mov
push
stc
sbb
jbe
aad
test
arpl
stos
dec
jp
xchg
imul
mov
mov
stc
fcmovnb
and
shlb
cmp
mov
mov
or
fstpt
ja
sub
mov
xor
pop
push
fistpll
ljmp
iret
add
imul
cs
cli
cmp
pop
fdivrs
cmp
cld
ljmp
mov
and
sbb
pop
cmc
cmp
cmpsb
add
adcb
in
aas
test
in
jbe
sbb
xor
mov
call
pop
adc
xchg
push
imul
enter
loop
out
push
ss
push
mov
sub
adc
cmp
loop
rcr
inc
rolb
outsb
sti
cli
pop
int
stos
and
adc
stos
push
push
xchg
sbb
rcrl
pop
xor
rclb
cmp
je
push
ficoms
jnp
aam
mov
aam
xchg
and
mov
jae
inc
push
mov
shll
push
cli
cwtl
rcll
mov
js
mulb
mov
or
sbb
xchg
mov
jbe
pop
dec
inc
sub
mov
jmp
add
mov
addb
push
dec
sbb
adc
dec
repnz
pop
into
xor
sbb
mov
out
push
sbb
or
or
aaa
imul
ss
or
xchg
movb
mov
js
inc
dec
adc
jnp
push
pop
scas
addb
adc
cmp
fwait
jl
xor
into
sub
cmp
nop
sti
pmulhw
push
es
cmp
test
fdivs
mov
or
jp
xchg
fidivs
scas
idiv
xchg
jnp
je
adc
xchg
mov
aas
jnp
adc
fmuls
outsl
sbb
imul
jns
sti
mov
jg
fstpt
sub
or
imul
dec
mov
mov
addr16
sub
cmp
mov
clc
pop
lahf
cmp
addl
cmpb
push
and
dec
adc
xor
xchg
mov
sbb
jnp
mov
lret
lret
or
enter
sub
mov
fmul
rcrb
lds
jmp
sbb
lret
adc
adc
push
adc
es
dec
sti
mov
leave
mov
or
pop
mov
leave
cli
inc
jmp
je
jb
sub
xchg
mov
lret
icebp
sbb
inc
push
lret
sbb
cmp
cmp
shl
lcall
mov
repnz
sbb
adc
mov
xor
pop
jo
sbb
dec
fwait
shrl
into
bound
xor
shr
mov
pop
inc
lds
jle
sbb
jle
jnp
pusha
add
cmp
fdivrs
dec
lock
daa
sub
js
enter
insb
iret
lret
pop
xchg
sub
dec
dec
ss
lret
xchg
cmp
inc
jle
xor
dec
out
adc
jmp
xor
cmp
cmp
sbb
and
fldenv
daa
lcall
adc
lods
fwait
lods
xor
mov
fsubs
mov
cmpl
sar
aam
pop
push
sbb
sub
xchg
dec
inc
rcrb
sub
fwait
loop
xor
cwtl
push
cli
jns
xchg
movsb
addr16
clc
cli
mov
lds
pop
mov
ficomps
mov
pop
aam
cmp
cmp
repz
xchg
fstps
pop
jb
outsl
cmp
andl
xchg
push
sub
bound
lcall
push
add
push
xchg
jp
lret
out
lret
mov
pop
cmp
fnstenv
fcoms
sub
sbb
sbb
xor
jo
xchg
and
or
and
dec
outsl
testl
hlt
sarl
add
stos
adc
xchg
add
cmp
cld
push
push
enter
sub
cmc
sti
cmp
push
add
push
js
cltd
ss
lret
xchg
cmp
xchg
imul
mov
push
cmp
jp
push
je
mov
lret
inc
int3
adc
mov
and
xor
sub
inc
adc
xchg
dec
sub
push
out
push
xor
xchg
mov
mov
ss
adc
lret
mov
and
dec
mov
lret
outsl
fnstcw
fisubl
fldt
sti
xor
mov
out
push
mov
sbb
popa
scas
dec
dec
add
inc
cmp
sbb
pop
mov
mov
dec
fildl
fisttpl
push
jbe
stos
mov
fidivl
add
ficompl
inc
xlat
lret
xlat
sbb
test
fnstenv
jmp
cmp
pop
and
aaa
in
das
jecxz
dec
inc
ja
or
aad
stos
push
pop
jns
cmp
dec
sbb
aas
sbb
sbb
jne
mov
xlat
xchg
dec
cmp
int3
subl
dec
adc
sub
icebp
js
adc
icebp
enter
cmpsb
sti
mov
sub
jns
mov
sub
xor
enter
cmp
push
adc
ds
add
push
xchg
xlat
xor
push
push
sbb
pushl
fildll
mov
or
cmp
sub
and
push
and
rolb
leave
mov
aad
ja
mov
lret
fisubrs
push
pop
gs
or
fdivrl
dec
lret
xchg
shl
pop
das
jno
repnz
das
add
mov
sub
sti
jg
push
dec
orb
mov
inc
jnp
jbe
jns
jbe
nop
cli
js
add
dec
cwtl
fcoml
cmp
ret
cmp
ret
pop
sbb
sbb
cltd
pop
sti
cmp
adc
lds
stos
in
bound
dec
sbb
les
out
fcmove
adc
inc
mov
cltd
add
repz
xchg
fwait
out
push
popa
pop
mov
push
in
js
icebp
and
xor
sbbl
repz
mov
test
cmp
sub
sbb
ja
push
lret
jnp
push
push
jg
cmp
arpl
pop
lret
xorl
stos
sti
pop
jns
push
push
xchg
adc
cwtl
or
push
cltd
dec
imul
ret
sbb
mov
pop
rcll
dec
pop
clc
add
mov
pop
xor
mov
dec
xchg
les
sub
test
adc
adcb
pop
cmp
push
mov
fnstcw
js
stc
dec
mov
les
mov
jbe
jo
jg
xchg
rol
insb
dec
lds
mov
ljmp
cs
cltd
push
sub
dec
xor
push
dec
arpl
xchg
sub
lea
dec
cmpsl
sub
mov
mov
dec
call
lods
stos
sbb
inc
aaa
mov
pop
aas
add
mov
pop
jp
jnp
dec
xor
dec
sub
push
xor
jnp
aas
not
sti
sbbl
xchg
cmp
lds
xchg
push
xchg
adc
dec
or
pop
mov
lret
and
sbb
lcall
xor
xchg
lret
sbb
ja
das
xchg
xor
push
inc
pusha
dec
aad
xor
adc
imull
mov
mov
cmp
cmp
jge
mov
mov
stc
cmpsl
mov
dec
adc
ret
cmp
cmp
and
push
rorl
cli
adc
lahf
mov
xchg
jp
ds
pop
or
test
inc
jmp
sti
inc
jns
mov
or
adc
sub
rcrl
fisttpl
or
nop
pusha
hlt
or
stos
lcall
and
push
or
push
jno
adc
pop
sub
xchg
aaa
sub
imul
sbb
cmc
dec
pop
mov
xor
add
cmp
aad
leave
push
xor
repnz
xor
int
shll
sbb
jmp
dec
stos
sbb
outsl
sbb
and
fmull
sbb
cltd
cmc
jns
sbb
mov
xor
adc
adc
sub
fiaddl
pop
sbb
pop
mov
sub
xchg
cmp
pop
add
or
mov
adc
mov
jl
icebp
xor
outsl
repz
xchg
inc
fsubrl
dec
adc
inc
dec
sub
aaa
dec
adc
xchg
sub
mov
fidivrs
dec
jmp
lcall
hlt
or
jl
dec
push
xorb
jns
mov
and
popl
push
mov
cmp
sbb
pop
mov
fstpt
inc
xchg
aad
jle
mov
div
cmp
sqrtps
repnz
fcmovb
add
scas
xchg
jmp
cwtl
das
insb
adc
jmp
cmpsb
pusha
sub
inc
push
xchg
xchg
jbe
push
dec
cmp
filds
add
jg
shlb
mov
loopne
mov
and
xor
cmpsb
hlt
xor
mov
in
cmp
jb
or
push
cmp
sbb
js
mov
inc
ja
fstpt
ds
sub
call
cli
lret
mov
sub
mov
cmp
or
cmp
stos
push
imul
hlt
testb
mov
jmp
adc
xor
imul
lret
cmp
aas
cltd
cmp
sbb
mov
xor
mov
adc
lret
lret
xchg
cmp
dec
mov
jp
sbb
mov
push
mov
dec
add
cmp
cmp
cmp
inc
mov
stos
idivb
cmp
daa
mov
cmpsb
fdivrs
inc
iret
push
notl
in
mov
inc
lret
xorl
outsb
lahf
les
cmp
emms
into
das
or
jnp
and
cmp
cmovns
mov
stc
dec
adcl
stos
push
mov
lahf
xlat
jmp
ds
rolb
xchg
dec
lret
cltd
push
cs
adc
or
push
cmp
xchg
pop
jbe
dec
pop
sbb
mov
popf
add
inc
popa
inc
xor
mov
jecxz
mov
and
xchg
xor
jbe
imul
fstpt
inc
lahf
out
out
cmpsb
xor
push
stc
sbb
shr
add
xlat
push
push
dec
fs
fstpt
sub
push
push
mov
add
fistps
adc
cltd
rorb
or
popf
add
mov
ja
jbe
add
lock
cmp
and
mov
push
loopne
aas
add
stos
pop
daa
mov
adc
adc
adc
sbb
jmp
jmp
jmp
pop
xor
jg
mov
xor
jecxz
rol
lcall
jle
add
mov
jnp
jmp
movsl
jnp
xchg
lcall
dec
mov
mov
call
mov
fidivl
add
xchg
cmp
rorb
js
and
mov
add
xor
lret
repz
pop
lret
jg
adc
adc
imul
lock
int
test
loop
jb
push
add
jg
fwait
inc
ja
sbb
shrl
sbb
xchg
mov
inc
fidivrl
inc
push
fdivrl
mov
cmpsl
outsl
mov
daa
mov
jecxz
add
lods
ds
scas
fbstp
adc
xor
decl
cmp
xor
sbb
mov
sarb
in
inc
adc
pop
sti
js
adc
dec
popa
aas
push
dec
mov
mov
cld
ret
sbb
outsb
fildl
jge
push
in
and
scas
and
scas
push
pop
cwtl
pop
pop
push
pop
xchg
xlat
shl
sbb
sbb
pop
dec
pushf
pop
insl
cmpsl
push
push
push
stc
pop
sub
pop
sub
fidivs
xor
xchg
icebp
mov
test
pushf
mov
cmpsb
sahf
or
jmp
pop
jbe
incb
inc
rcl
enter
lret
pop
ret
or
pop
sbb
jns
dec
cli
fsubr
decl
cmp
sbb
xchg
xchg
popa
sti
inc
scas
setae
inc
sbb
push
imul
push
mov
cmp
mov
push
ds
or
cltd
sbb
ljmp
mov
hlt
adc
clc
dec
xchg
mov
mov
jmp
sub
mov
sti
jno
popa
int
cltd
into
lret
imulb
sti
sbb
jmp
xor
cmp
iret
push
dec
data16
xchg
dec
inc
push
inc
sbb
fstpt
cmp
adc
pop
arpl
fisttps
incl
dec
adc
jl
and
faddl
je
inc
sbb
rcrb
fiadds
mov
lret
fsub
movsb
cmpsb
cwtl
xor
imul
mov
cwtl
add
dec
mov
or
out
or
xor
push
fwait
sbb
arpl
repz
sbb
or
sub
sub
popf
xchg
inc
stos
cli
or
xor
push
adc
hlt
dec
dec
or
insb
xlat
mov
test
xlat
lods
fisubrl
lret
sbb
mov
inc
cmc
jge
push
sbb
add
pop
sbb
scas
pop
add
pop
xor
iret
pop
and
dec
imul
inc
inc
xlat
dec
icebp
seta
pop
iret
incl
adc
mov
pushf
mov
shll
cmp
je
mov
aam
pop
dec
sbb
mov
sub
pop
jb
aam
mov
jne
sbb
cltd
sbb
sbb
roll
push
fisttpl
addr16
mov
jmp
ds
nop
push
aas
sub
stos
adc
cmp
adc
pop
jmp
in
xchg
pushf
sub
sbb
mov
ss
clc
negl
push
sti
nop
push
sbbl
sbb
cmp
cwtl
mov
dec
cmp
fadd
repz
mov
sbb
push
roll
adc
xor
hlt
dec
out
sbb
jae
roll
pop
fwait
in
xlat
das
jns
xor
add
adc
mov
test
mov
sbb
mov
or
inc
sti
mov
leave
pop
xlat
push
je
sbb
dec
bound
nop
inc
fistps
cmp
cmp
enter
xor
cmp
bound
nop
and
sbb
sbb
pushf
cltd
push
pop
xlat
or
add
add
dec
call
push
push
cltd
das
fwait
orb
ds
dec
je
sbb
inc
bound
nop
cmp
int3
inc
push
xchg
lcall
mov
jp
insl
mov
xor
lret
push
lahf
sarl
push
nop
cli
lret
dec
lahf
lcall
sbb
jns
lahf
push
sti
icebp
sti
leave
xor
fwait
or
jp
cli
xlat
cli
loop
lcall
push
rcll
cmp
dec
clc
cmc
or
iret
sti
jl
in
arpl
rorl
in
or
dec
or
or
clc
sbb
icebp
sarb
sub
mov
jg
jns
mov
dec
cmp
cmp
cmp
jecxz
dec
sti
rorl
sbb
cli
jo
dec
mov
sbb
sbb
push
jns
arpl
cmp
lcall
sbb
aas
in
dec
mov
or
cmp
test
inc
in
fisubl
dec
lcall
stc
out
jnp
sbb
mov
sbb
mov
scas
mov
js
xor
subb
loope
fisttpl
cmp
arpl
sbb
cli
mov
xor
cli
adcb
fcomps
fldcw
vmread
mov
dec
call
cmp
sbb
idivl
fisttpl
cmp
xor
pop
or
imul
mov
iret
jns
push
mov
mov
xchg
fsubrs
jp
sbb
fstps
dec
mov
or
cwtl
js
cmp
jns
movsl
cli
fldcw
or
cmp
pop
js
dec
sti
int3
jns
xchg
mov
pop
cmp
jo
dec
fcoms
cs
jg
cmp
aad
inc
dec
fwait
or
enter
aad
sbb
sub
rorl
cli
xchg
cltd
add
cmp
sub
cmc
or
and
dec
cmp
scas
dec
fcmovnbe
jbe
sub
or
and
cmp
push
jp
xor
sbb
pop
lock
cmp
loopne
sbb
dec
psubusb
mov
out
mov
sbb
fwait
or
negl
lcall
dec
cvtps2pd
sti
testl
inc
push
pop
xchg
mov
push
inc
scas
clc
jp
or
or
cli
adc
adc
leave
jns
aas
leave
sbb
cmp
jp
test
es
dec
stc
in
or
outsl
sbb
pop
jbe
fistps
mov
jns
sbb
and
cmp
lds
xor
jnp
inc
repz
fcmovb
mov
mov
xor
sbb
xor
sbb
inc
dec
clc
xchg
or
in
jns
rcrl
btc
cmp
pop
js
ljmp
sbb
bound
adc
roll
pop
cli
hlt
pop
add
fcmovbe
clc
cmp
or
mov
add
mov
cli
or
xchg
pop
je
sbbl
cmp
or
enter
pop
push
test
clc
sbb
dec
mov
or
ficompl
test
xor
mov
cmc
or
nop
negb
mov
mov
sub
sbb
push
mov
rorl
loope
add
mov
js
mov
cwtl
mov
cmp
int
mov
xor
mov
ds
mov
pop
mov
adc
mov
xor
or
cmp
iret
fidivl
fistps
cmp
or
mov
sti
push
cmp
dec
sets
mov
inc
jbe
jecxz
mov
cmp
pop
call
psubw
mov
lods
loopne
fcmovu
or
js
or
out
js
pop
out
fmul
out
push
jp
in
xor
shrb
sub
call
pop
cmp
aad
or
test
sbb
dec
or
sbb
outsl
lcall
jecxz
aam
jecxz
pop
je
fcomps
xor
push
test
pop
nop
cmp
sub
sub
mov
in
cli
idivb
out
sbb
clc
rorl
sbb
sti
mov
enter
inc
jecxz
or
je
pop
nop
mov
dec
or
or
clc
sbb
clc
mov
movsl
mov
leave
or
fistpll
ficompl
dec
bndstx
mov
cmp
dec
psubusw
lcall
cltd
mov
js
movsl
sbb
dec
sets
sbb
clc
sti
cltd
push
cmp
fwait
cltd
jbe
dec
pop
cmc
or
and
cmp
out
sbb
sbb
or
clc
pop
push
sbb
mov
pop
cmp
sbb
xchg
jecxz
sub
rorl
jne
xchg
pop
mov
cli
or
xor
or
sbb
in
fidivl
fstps
lock
dec
cltd
jg
cmpsb
js
clc
cmpsb
jnp
or
cmp
xchg
jbe
dec
jnp
or
and
dec
mov
jp
fidivl
sbb
cmc
or
and
xor
fcoms
lock
js
sbb
or
lea
mov
cmp
js
and
mov
mov
or
xchg
stc
fists
jns
fnstenv
pop
dec
fadd
or
cmp
fisttpl
jnp
push
fisttpl
cmp
sti
rcrl
mov
ds
cmp
dec
stc
cmc
or
and
cmp
xchg
sbb
sbb
mov
mov
sbb
fnstsw
pop
test
or
in
push
jp
cmp
sbb
sub
mov
fists
xlat
cmp
pop
dec
cmp
sbbl
cmp
or
imul
or
fistps
cltd
je
in
jp
cltd
xchg
mov
adc
rcr
cmpl
xor
cmp
sti
jge
sbb
add
lret
mov
mov
mov
mov
or
nop
je
hlt
lcall
xchg
sbb
xor
ja
shlb
fdivrs
jns
sbb
add
sbb
dec
mov
or
sbb
fnstsw
add
jns
mov
xor
push
lret
cmp
jg
fnstenv
lret
jp
fwait
dec
lret
cli
sbb
iret
jp
fwait
adc
sbb
push
and
push
sub
das
pop
xor
rclb
subb
push
pop
das
pop
iret
pop
jbe
out
mov
push
sbb
adc
cmp
jnp
push
jp
xchg
xor
pop
rcrl
lcall
imul
inc
enter
es
cmp
sub
cmp
cmp
cli
sarb
loopne
dec
fwait
rorl
push
ss
rol
sbb
dec
mov
pop
ljmp
insl
es
inc
insl
nop
ret
jmp
xchg
fcmovnbe
sbb
jp
add
jnp
lcall
mov
imul
repnz
cmp
fsts
pop
mov
fxch
mov
inc
adc
gs
rcr
mov
fstpt
adc
cmp
int
add
sbb
sub
es
dec
rclb
jp
rclb
pmulhw
mov
mov
insl
push
cmp
inc
dec
xor
mov
xchg
cwtl
das
mov
mov
fwait
ds
jp
sbb
push
fldcw
and
cmp
enter
lret
sarb
fwait
sbb
pop
inc
push
cltd
mov
les
data16
sbb
cli
pop
call
ss
repnz
inc
insb
push
or
fsubrs
aaa
js
or
cli
cmp
xchg
sbb
push
cmp
pop
xchg
iret
pop
dec
cmp
mov
pop
loope
stos
mov
cmp
stc
xchg
cmp
cmc
lcall
mov
aas
mov
fdivrs
test
xor
cmp
pop
adc
cmp
cmp
push
call
out
cmc
cmp
jmp
ss
adc
dec
jmp
and
std
mov
movsl
sarl
jns
imul
sar
jge
push
fdivs
mov
fwait
call
xor
cwtl
imul
daa
mov
arpl
pop
xor
cmp
or
mov
jnp
xchg
and
adc
push
jns
and
pop
push
lea
jecxz
xlat
jbe
xor
cltd
push
jecxz
mov
add
inc
fcoms
cmp
cmp
fsubrs
stos
xchg
mov
rcrl
cmp
aaa
cli
xor
sbb
add
pop
ss
xchg
fwait
cmp
cmp
cmp
dec
ljmp
jg
fnstcw
nop
jnp
mov
cmp
mov
int
loope
movl
sbb
mov
scas
dec
orl
push
cmp
sbb
aas
lcall
cmp
stc
xchg
stc
fprem1
cmp
push
pop
cmp
mov
inc
sbb
rcrb
mov
shrb
ja
fildl
xor
push
jnp
jns
push
mov
aam
xor
adc
inc
jns
cmp
xlat
fxch
sbb
sahf
xlat
fcomps
ds
nop
fninit
inc
lcall
inc
pop
nop
pop
outsl
jmp
fnstcw
loope
jns
cltd
xchg
cmp
pop
sarb
call
lods
fwait
push
xor
fisubrl
icebp
fwait
imul
sbb
sbb
sti
add
mov
daa
cmp
jnp
pop
rcrl
mov
ficoml
decl
mov
mov
dec
iret
sbb
ljmp
jns
cmp
aas
cwtl
mov
fwait
lret
add
xchg
cmc
cmp
pop
pop
cmp
pop
push
sbb
jg
sbb
cltd
ret
xlat
or
cmp
aad
jecxz
lret
mov
sbb
pop
adc
cmp
push
inc
shr
dec
cmp
cmp
js
xor
inc
xchg
cmp
push
or
sub
shrl
ss
adc
arpl
and
sub
sbb
repnz
mov
cmp
push
dec
rorl
dec
adc
fsts
add
mov
sar
dec
xor
ss
adc
lret
sarb
push
mov
out
fistl
dec
jmp
ss
jecxz
push
shrl
negb
sub
rcrb
jmp
es
pop
xchg
mov
rcr
cmc
fsubrs
pop
push
adcl
adc
fcoms
mov
dec
xor
ret
dec
mov
xchg
push
sbb
loop
push
stos
adc
jb
push
cmp
add
leave
adc
xchg
adc
pop
adc
and
call
push
js
dec
inc
xchg
or
into
rorl
fwait
dec
into
arpl
sub
repnz
notb
adc
xchg
bound
jns
inc
xchg
xor
pop
mov
mov
jbe
add
repz
xchg
cli
or
or
fld
or
call
ljmp
pop
push
cmp
xor
mov
jnp
cmp
sbb
adc
jns
adc
add
sbb
sar
push
or
sub
mov
imul
fnstcw
push
cwtl
imul
aas
fcom
dec
dec
pop
push
ss
int3
dec
scas
lcall
sbb
xlat
pusha
push
fstps
cmp
push
cmp
sbb
lahf
cli
dec
stc
jp
sarl
in
cmp
imul
push
jnp
jns
xor
xor
scas
adc
mov
pop
pop
sub
xor
and
push
push
and
in
sbb
lds
fwait
dec
movsl
adc
jns
or
dec
cmp
sub
inc
fidivrl
mov
mov
push
lcall
cmp
out
dec
fstpt
scas
dec
stc
pop
adcl
sub
xchg
fcmovnbe
sbb
cmp
inc
sbb
mov
cmp
cmc
adc
imul
imul
pop
pop
and
mov
mov
fdivs
pop
sbb
xor
sti
lret
dec
push
mov
jmp
lret
cli
ja
jmp
ss
adc
cmp
sub
inc
into
fsubrs
addl
mov
cmc
sbb
inc
mov
cmp
cltd
repnz
jae
mov
cmp
arpl
aaa
xchg
or
sub
rorb
xor
pop
mov
test
jnp
cmp
jns
iret
cli
pop
inc
lea
pop
test
mov
scas
fwait
lcall
dec
fisttpl
or
sahf
iret
ficoml
push
iret
cli
jbe
or
push
pop
cli
idivb
out
cmp
jbe
jmp
xor
xchg
cmp
push
rorl
xchg
sbb
xchg
repz
pop
xchg
add
idivb
cmp
jbe
out
cmp
loopne
fnstcw
sarl
push
imul
xchg
pop
cmc
fwait
cmp
mov
jp
clc
imul
iret
add
add
pop
or
lcall
sbb
jns
cli
add
push
sbb
sbb
sub
sub
insl
imul
xchg
mov
fsts
sbb
mov
bound
inc
cmp
sti
cld
xchg
sbb
stc
scas
pop
mov
js
iret
dec
arpl
and
jecxz
mov
cmp
arpl
fwait
das
xchg
sti
add
inc
lcall
negb
or
push
in
fcmovb
rcll
mov
mov
sbb
jp
sbb
adc
imul
cmp
cmp
pop
clc
scas
ficoml
icebp
cmp
cmp
fisubrl
aaa
pop
push
pop
adc
mov
cmc
sti
stc
sub
mov
add
iret
mov
mov
cmp
mov
test
out
pop
and
lock
sbb
and
lcall
cmp
dec
enter
dec
and
sbb
jns
push
pop
jns
xor
rcrb
cltd
jbe
push
mov
jecxz
xlat
xchg
sbb
xchg
cmp
sub
add
sbb
push
cmp
clc
and
xchg
sbb
in
mov
jnp
sbb
call
sub
pop
call
mov
loopne
push
clc
aam
call
dec
lcall
sbb
rcrb
ficompl
sbb
add
in
iret
sub
fiaddl
mov
sbb
jns
push
pop
inc
fwait
xchg
fwait
mov
leave
jp
pop
mov
mov
jp
loopne
pop
add
jbe
out
cmp
stc
out
cmp
jbe
out
call
ret
loopne
push
cmp
ljmp
dec
imul
dec
sbb
xlat
fcmovnu
lcall
sbb
cmp
int
cmp
xor
mov
push
cmp
sbbl
inc
imul
jp
sub
sbbl
add
sbb
dec
inc
imul
sub
hlt
xchg
arpl
pushf
dec
into
jo
inc
dec
sti
sbb
xchg
sti
xchg
xchg
sti
imul
sti
out
sti
mov
cli
cmp
arpl
push
dec
into
jmp
into
xchg
dec
into
gs
into
cmp
adc
dec
or
iret
lret
mov
lret
push
mov
dec
pop
ret
cmp
inc
push
mov
cmp
push
mov
scas
dec
mov
cs
stos
shrl
dec
cmpsl
mov
cmp
dec
xchg
dec
xor
jns
dec
lcall
sti
rcr
pop
dec
stc
jns
xchg
sti
sbb
sti
lods
xchg
sti
je
notl
sti
iret
xchg
sti
xchg
xchg
sti
pop
xchg
sti
daa
xchg
sti
out
xchg
sti
mov
sti
jle
sti
inc
xchg
sti
push
xchg
sti
aad
sti
popf
xchg
sti
gs
sti
sub
sti
mov
iret
rclb
sub
cmp
cmp
je,pn
cmp
add
sbb
lcall
sbb
shrb
xchg
int3
out
xor
sub
fwait
fsubrs
cmp
cmp
jbe
out
cmp
shlb
idivb
sbb
cmp
jbe
out
cmp
cmp
enter
loopne
aaa
push
stc
xor
xor
aaa
sbbl
inc
imul
push
push
adc
daa
adc
cli
adc
into
adc
mov
push
dec
adc
push
adc
icebp
adc
lds
cltd
cmp
insl
xchg
jnp
cmc
cmp
mov
nop
cmp
fs
inc
cmp
into
mov
jecxz
into
cmp
sbb
mov
cli
add
lcall
std
jmp
inc
rcl
xor
sbb
pop
mov
iret
jns
dec
iret
lcall
icebp
fdivs
mov
outsb
push
das
xchg
cmp
pop
add
fcomps
add
outsl
push
inc
rorl
pop
mov
sti
or
mov
sbb
stc
cmc
cmp
or
sti
mov
movsl
pop
rcrb
pop
jmp
fcoms
je
call
sbb
sti
mov
mov
pop
in
jne
jp
enter
scas
rep
negl
pop
sub
lcall
and
mov
fwait
pop
stos
mov
fsub
cmp
pop
mov
cli
xor
cmp
cmp
lret
xor
cmp
jp
jmp
fisubl
mov
test
sbb
je
dec
mov
fwait
adc
or
jnp
cwtl
stos
mov
and
inc
mov
adc
mov
cmp
push
gs
fstps
lods
fldl
cmc
dec
repz
mov
jp
int
rcl
xchg
pop
lods
sbbb
inc
lcall
pop
mov
es
cmp
sbb
sub
ror
inc
dec
cmp
cwtl
jns
cmp
fistpl
dec
add
test
ror
mov
iret
jb
fistpl
jp
sbb
sbb
fwait
cmp
rorl
fmul
loopne
pop
xchg
sbb
lcall
inc
pop
jp
movsb
lds
ds
add
lcall
push
sbb
add
scas
lcall
test
jmp
lcall
mov
pop
loopne
dec
sbb
adc
mov
clc
test
fisttpl
movsl
mov
movsl
cmc
mov
xor
pop
jbe
cmp
pop
loopne
sbb
mov
sbb
iret
jnp
cwtl
mov
lret
sbb
sbb
sbb
fwait
sbb
out
cmp
jbe
out
cmp
sti
inc
cwtl
rcrb
ja
jmp
or
push
mov
lahf
aas
pop
iret
pop
negb
dec
pop
jmp
fistl
xchg
mov
fwait
add
pop
mov
iret
ficoml
dec
iret
pop
jbe
ljmp
mov
mov
cltd
mov
sbb
dec
js
rcrb
adc
xchg
cwtl
idivl
fisttpl
ficompl
mov
fcmove
xor
pop
aad
imul
xchg
cmp
adc
mov
sti
mov
xor
lret
lods
push
call
ss
jmp
rorb
pop
xchg
mov
sar
cmp
xchg
cltd
cltd
inc
rorl
pop
adc
rcrb
movhps
mov
push
cmp
scas
dec
sbb
pop
xor
mov
jnp
jg
fwait
stc
sbb
loope
add
stc
and
cmpsb
dec
sbb
xchg
scas
mov
sbb
imul
sub
lea
jns
sbb
imul
imul
or
add
lea
imul
imul
daa
inc
imul
imul
mov
sbb
push
stc
or
enter
cltd
push
insl
pop
sbb
outsl
ja
repz
fdivrs
or
cmp
clc
jg
fildl
inc
mov
jnp
sbb
cmp
aad
jecxz
mov
pop
sub
jp
fldenv
pop
call
fdivs
mov
cmp
pusha
sti
or
add
aam
jl
dec
fildl
sarb
nop
pop
outsl
mov
es
ja
adc
jg
pop
cli
xchg
cmp
fnstcw
mov
loopne
pop
fwait
shrl
cmp
adc
cmp
jl
jge
js
adc
push
sti
adc
iret
add
jp
mov
jecxz
iret
jecxz
xchg
mov
iret
lcall
xchg
jmp
jns
fstpt
jge
pop
jnp
nop
jecxz
je
cli
jecxz
je
cli
jecxz
je
cli
jecxz
je
cli
aas
jp
pop
mov
cmp
xchg
sbb
push
sbb
cmp
fsincos
mov
inc
jo
pop
cli
sti
cmp
test
mov
sub
xor
jmp
and
in
dec
mov
push
pop
jecxz
mov
sbb
sbb
cmp
cmp
push
xchg
loope
mov
cmp
mov
test
fwait
cmp
loopne
cmp
jnp
mov
test
daa
test
cmp
xchg
push
negb
lcall
lcall
imul
push
cmp
push
bnd
lds
js
seto
xor
dec
inc
add
fsubs
sbb
sub
jp
imul
out
mov
xchg
mov
pop
enter
loopne
fsts
pop
add
inc
mov
jmp
ds
xchg
sub
xchg
add
xchg
clc
sar
pusha
xchg
mov
ljmp
sub
xchg
cmpl
sbb
dec
rcr
cmc
cmp
xor
cmc
sub
lcall
aam
cmp
cwtl
rcrb
sbb
pop
es
cltd
xchg
fnstenv
jmp
dec
es
fcoms
adc
jg
iret
out
sub
mov
loope
imul
push
iret
or
cmp
cli
sti
ficoml
lcall
dec
jns
mov
and
mov
cmp
xor
lcall
fdivrs
loop
xchg
jnp
cmp
sti
push
ja
sub
cwtl
push
lahf
loop
dec
or
clc
loopne
sub
or
cmp
ret
sti
xchg
xchg
ret
mov
cmp
enter
push
mov
xchg
xor
push
and
fcoml
mov
test
sbb
das
jnp
push
movsl
jns
pop
jle
adc
add
fcmovbe
mov
sub
bound
adc
rcrb
cmp
imul
int3
pop
push
fwait
test
cmp
xor
pop
es
lret
clc
cmp
push
adcl
jnp
push
inc
ficoml
ss
pop
call
sub
cmp
cmp
jp
sbb
enter
jecxz
pop
nop
sbb
sbb
cwtl
jbe
jmp
dec
loope
dec
jns
inc
rcrl
mov
lret
push
mov
rclb
jecxz
pop
pop
addb
fistl
sub
xor
sbb
fwait
popa
call
sub
enter
sti
inc
sub
cmp
cmp
mov
adc
push
mov
mov
jmp
sbb
dec
nop
cli
jg
clc
nop
pop
jg
test
mov
dec
sbb
sahf
xlat
mov
dec
imul
jbe
sbb
lcall
jp
iret
pop
jbe
or
lret
clc
add
sti
dec
cmp
or
inc
cmp
jae
pop
dec
cmp
mov
push
add
sbb
and
rcr
fwait
or
repnz
pop
repnz
mov
call
sti
inc
xor
mov
xor
sbb
xchg
xor
cmp
pop
mov
outsb
inc
sbb
jnp
cwtl
sarb
into
jmp
sti
xor
mov
xor
dec
sub
lcall
adc
test
dec
xchg
cmpl
ljmp
fmul
js
cmp
rclb
fstpt
ljmp
mov
aas
cwtl
lret
and
jnp
inc
sub
pop
loope
add
mov
cltd
nop
mov
imul
sbb
es
es
shrb
lret
xchg
xchg
mov
push
pop
mov
mov
cli
and
mov
pop
mov
add
fwait
xchg
sub
mov
loope
inc
mov
sbb
clc
jbe
sbb
inc
and
mov
fwait
cmp
push
sbb
imul
xor
rcrb
xchg
clc
cmp
jmp
xchg
imul
sub
repz
pop
sub
add
rcrl
sbb
dec
fcmovb
addr16
out
cmp
jbe
out
xor
cmp
adc
adc
mov
cwtl
ds
xchg
dec
ret
lcall
stos
sbb
pop
jbe
jmp
ss
push
jp
in
jnp
out
js
aas
sbb
sti
adc
dec
ficoml
cmp
ss
pop
inc
jnp
fldenv
pop
iret
mov
mov
sbb
jns
ds
jnp
cwtl
ds
fisubrl
dec
mov
sti
cmp
clc
loopne
pop
call
ds
mov
push
sbb
enter
imul
mov
mov
pop
dec
or
cmp
aas
stc
iret
aad
mov
pop
or
dec
pop
mov
mov
es
cwtl
add
inc
pop
xchg
cmp
fwait
jns
xor
adc
or
mov
iret
pop
cmp
call
scas
mov
sbb
cmp
aas
mov
pop
add
enter
sbbb
out
cmp
mov
fnstsw
jmp
mov
mov
cmp
pop
xor
add
js
jle
aas
jp
jp
call
fstps
jns
push
push
sbb
pop
adc
or
hlt
imul
dec
enter
xchg
sbb
xchg
mov
xor
mov
js
aas
cmp
xor
jmp
xchg
fsubr
cmp
adc
jnp
sti
xchg
jns
sarl
shrl
dec
jp
imul
mov
cltd
cmp
imul
add
fiaddl
nop
test
mov
sub
xchg
pop
and
into
mov
cli
imull
sarb
xor
cli
lret
cmp
inc
jmp
jp
fstpl
mull
idivl
repz
sbb
sti
ficoml
fwait
aam
push
iret
mov
cmp
loop
into
call
sbb
mov
mov
cli
sar
out
push
call
sahf
jecxz
cmp
xlat
stc
pusha
aas
cltd
sbb
dec
fcompl
enter
ja
adc
jmp
sbb
enter
es
es
mov
xchg
xchg
jmp
sbbb
cmp
out
cmp
jb
mov
jg
mov
push
push
push
cltd
rcll
cmc
mov
lcall
cmp
push
ss
mov
outsb
sub
dec
lret
je
push
aaa
jl
loope
inc
adc
pop
jecxz
fdivrs
ds
jns
mov
mov
jl
dec
mov
add
pop
mov
or
jae
pop
or
je
sbb
dec
fbld
scas
mov
pop
fildll
jp
ds
mov
lret
les
sti
rclb
fildl
cli
xor
push
jmp
mov
sahf
xlat
mov
pop
push
push
adc
xlat
jns
xor
stos
fwait
pop
es
mov
fwait
lret
mov
ficoml
jmp
rorl
xchg
xor
mov
push
nop
inc
clc
push
fcmovnbe
sub
sbb
mov
rcr
xor
pop
ljmp
xchg
jecxz
mov
adc
rcll
inc
stc
scas
jp
or
cmp
cmpb
fldt
ss
adc
cmc
sbb
dec
lret
inc
xchg
fcomi
cmp
jmp
and
push
mov
sbb
xorl
sbb
pushf
xchg
cmp
cmp
and
xor
jp
in
fistpl
fwait
cmp
enter
loopne
jns
pop
push
sbb
dec
push
cwtl
xchg
iret
lcall
mov
push
cmp
es
test
xchg
pop
cmp
adc
imul
push
or
int3
pop
js
push
imull
adc
add
cli
iret
cmp
jecxz
xlat
push
repnz
adc
cmp
fs
jns
cmp
fmuls
mov
sbb
xchg
fcmovnbe
fists
ret
std
cltd
xor
arpl
fwait
iret
mov
add
mov
dec
jns
mov
mov
ret
mov
add
sti
mov
sbb
popf
sbb
mov
and
mov
add
pop
hlt
sub
and
loope
iret
fsts
loopne
cwtl
adc
sbb
mov
repnz
sbb
cmp
ss
mov
ret
sti
pop
pop
cmp
in
push
cmp
xor
pop
jno
pop
push
sbb
jb
cmc
pop
out
inc
jecxz
rcrb
roll
ficompl
enter
mov
dec
sbb
test
inc
aad
cwtl
xor
out
xchg
pop
scas
jns
jno
sbb
push
stos
sub
mov
gs
inc
xchg
and
repnz
jbe
test
pop
stos
das
lret
dec
lock
pop
into
or
dec
or
out
cmp
add
stc
sbb
push
mov
jle
push
test
shll
sbb
inc
pop
dec
lret
xchg
ja
cmp
stc
or
js
xchg
fstps
out
stos
cmp
in
push
pusha
addr16
int3
jmp
push
aas
xlat
cmp
pop
bound
or
pop
roll
xchg
push
pop
mov
aas
jecxz
pop
out
xlat
or
mov
xor
fcompl
pop
test
ret
fstpl
push
jl
out
in
dec
mov
leave
cwtl
mov
push
das
lods
loope
lods
movsl
aas
ljmp
push
xor
shrl
add
lods
adc
into
adc
pop
ret
jmp
and
xor
dec
loope
adcb
lret
add
push
in
fimull
clc
ss
adc
ja
ss
adc
lret
sub
jae
mov
mov
shl
dec
and
adcl
adcb
shl
dec
xor
mov
mov
repz
cmp
adc
rcrl
dec
push
jns
mov
cmp
push
pop
rorl
cmp
arpl
mov
fistl
or
and
sbbb
call
push
jecxz
xor
rcrl
sub
ss
adc
or
leave
push
pop
mov
cmp
cmp
daa
lret
fnstcw
xchg
push
imul
ss
xchg
jecxz
fwait
sbb
stos
jg
lret
cmp
dec
jmp
sub
nop
orl
dec
push
mov
stos
ss
adc
iret
push
xor
mov
sarl
sbb
stos
dec
repnz
adc
ret
mov
fldt
lret
or
inc
push
jns
loope
and
rclb
xor
fwait
cmp
jo
adc
shr
dec
adc
mov
leave
lret
or
cmp
adc
dec
loop
ss
stos
lret
sti
cmp
es
loopne
or
jns
mov
loope
cmp
adcb
rcrl
dec
arpl
mov
rcl
dec
cmp
lret
jb
jmp
stc
dec
xor
xchg
adc
lret
cmp
sub
or
adc
sub
add
mov
dec
stos
mov
or
dec
adc
push
jnp
mov
jmp
cmp
and
dec
cmp
mov
bound
stos
adc
lret
xor
adcl
sar
inc
sub
cwtl
mov
adc
cmp
dec
and
mov
cmp
jnp
out
call
inc
test
mov
dec
sbb
lds
adc
add
adc
call
dec
dec
or
sub
sti
lret
xor
xor
cmp
jne
leave
push
ret
inc
xor
aad
dec
mov
fcomps
shlb
push
fistl
fdivrl
xchg
cmp
lret
jecxz
rorl
rcrb
sbb
dec
or
xchg
xlat
icebp
xor
lret
jno
mov
mov
inc
jnp
repz
xor
rcrl
sbb
cs
aaa
fistl
cmp
jns
leave
rcll
dec
push
sbb
dec
lret
fwait
cmp
push
or
push
fisttpl
mov
stc
lret
bound
lcall
mov
repz
iret
mov
mov
shll
dec
ret
repz
push
test
add
inc
cmp
leave
rcll
dec
push
or
dec
lret
xchg
cmp
push
and
push
fmuls
inc
mov
loope
push
clc
push
pop
rcll
jb
stos
lret
or
push
push
adc
dec
sti
cmp
subb
xor
adc
lret
inc
cmp
mov
xchg
rclb
sbb
cmpl
push
jmp
sbb
js
jae
ss
adc
lret
jns
rcll
sarl
dec
bound
lret
inc
cmp
dec
push
cwtl
pop
ja
sbb
pop
lret
xchg
cmp
push
loope
adc
jp
add
hlt
push
adc
push
xor
shll
push
fmul
or
dec
push
mov
mov
push
stos
sar
xor
cmp
adc
lret
fwait
cmp
push
repnz
sbb
arpl
mov
ss
adc
inc
push
call
push
fsts
sbb
jecxz
imul
dec
ret
and
xchg
xchg
ja
rcrl
nop
xchg
leave
xor
sbbl
movsl
mov
mov
xor
dec
pop
cmp
add
mov
mov
jp
cmp
stos
sbb
adc
sub
mov
pop
jmp
and
jo
and
inc
xor
lret
adc
inc
xor
cmp
or
adc
cmp
mov
xor
ret
nop
xor
inc
or
cmp
cmc
lret
stc
xor
notb
mov
mov
popf
test
xchg
cli
pop
cmpsl
cld
scas
mov
jp
outsb
lcall
ds
stos
push
test
xchg
sbb
shr
scas
add
cmp
or
push
fs
mov
ja
stos
jo
loopne
pop
add
cmp
push
sbb
aaa
and
cwtl
adc
add
dec
rol
filds
pop
pop
jb
mov
push
ret
jecxz
sbbb
lods
mov
cli
adc
popa
add
pop
pop
lods
movsb
push
cmc
push
pusha
mov
clc
insl
mov
das
subb
mov
imul
or
pop
stc
pop
push
cli
loope
addb
aam
inc
add
add
and
mov
out
cmp
xor
sub
nop
pop
jb
cwtl
push
out
mov
mov
test
loope
pushf
push
jl
fwait
and
lret
jecxz
lret
jmp
icebp
xchg
pop
and
pop
in
rclb
jb
fldcw
lods
mov
jle
hlt
call
lcall
inc
pop
lock
sbb
repnz
dec
mov
push
jp
mov
pop
sbb
or
ret
and
dec
lret
pop
pop
ja
inc
fwait
lret
loopne
dec
pop
xlat
stos
sub
into
pop
mov
loop
mov
cmpsl
sbbb
xchg
std
out
fwait
and
insb
pop
test
jmp
adc
dec
pop
inc
lea
pop
fwait
jno
popf
ficomps
pop
hlt
push
adcl
mov
jg
fwait
out
clc
mov
fistpl
mov
push
xor
lds
popf
out
push
mov
lock
inc
and
push
adc
aaa
pop
and
pop
sub
lods
into
jmp
pop
cld
pop
rcrl
mov
imul
pop
inc
pop
out
outsb
and
loope
ljmp
imul
scas
push
mov
movsw
sarb
pop
fcmovnb
mov
or
xor
out
pop
cltd
pop
mov
dec
cmpsb
jae
adc
inc
cwtl
call
jg
into
lret
loop
test
cmp
push
gs
xchg
stos
imul
xor
jp
mov
ja
popa
jmp
push
sub
hlt
and
int3
jns
cwtl
sti
jp
jmp
mov
jae
mov
pop
mulb
daa
test
and
test
mov
into
sbb
jg
add
cmp
in
test
aaa
push
xor
test
mov
outsl
pop
cs
cmc
jne
xchg
mov
cmpsl
outsl
test
or
out
dec
xchg
sub
and
test
je
dec
or
das
and
jmp
xchg
sti
sbb
mov
dec
push
pop
sbb
mov
jb
sti
xchg
dec
xor
inc
and
pop
pushf
and
ficoml
lods
push
das
push
jmp
mov
push
out
stos
xchg
ja
outsl
or
sub
lret
fisttpl
cmp
sub
inc
pop
or
adcb
pop
cmp
fidivl
xorl
imul
pop
jmp
stos
in
or
push
cli
sbb
adc
movsb
cmc
push
js
pop
jnp
into
jnp
xchg
inc
xor
and
in
sti
ljmp
cmp
pop
mov
sbb
pop
pop
adc
mov
and
into
mov
adc
stos
ljmp
iret
and
add
into
loopne
es
jle
jo
aas
push
fcomps
shrb
cmp
negl
sbb
loope
mov
mov
dec
pop
aam
sahf
and
lret
sbb
cld
sub
lahf
cmp
and
adc
dec
mov
jns
and
rcll
pop
shlb
mov
scas
xchg
sarl
jnp
adc
mov
fdivrs
jl
push
fistpll
pop
cli
ret
test
andb
pop
mov
gs
xlat
stos
dec
ds
push
cmp
sbb
ficomps
push
adc
int3
fisubl
sti
inc
xor
int
std
mov
aas
push
pop
ja
jnp
inc
sbb
ja
lahf
pop
fists
neg
pusha
or
jns
pop
cmc
leave
jo
rcll
fmuls
xchg
cmp
repnz
lods
sbb
xchg
or
mov
dec
fldt
pop
mov
pop
xchg
into
mov
cltd
pop
dec
cs
mov
movsl
scas
mov
xchg
pop
lods
stos
add
imul
xchg
xchg
je
in
pop
cmp
xchg
pop
push
pop
adc
add
popf
mov
fistpl
sub
xor
sbb
test
inc
int
jnp
dec
fistl
cs
xor
xor
movsb
pop
test
xor
cli
adc
pop
sahf
ljmp
xor
fcompl
cmpb
xchg
mov
jae
push
mov
sbbl
cld
push
sbb
aaa
inc
inc
cwtl
sbb
mov
xor
pop
pop
mov
jmp
ret
les
mov
jo
dec
jae
or
or
pop
mov
pop
data16
xor
push
sub
jmp
sbb
sarb
or
pop
sub
lcall
adc
mov
sub
iret
aam
ret
rolb
or
sbb
pop
or
scas
mov
fcmovne
out
aad
and
lods
bound
mov
movsl
pop
js
int3
cltd
lock
cmp
pop
ja
repz
std
lods
sti
pop
jnp
mov
aad
adc
out
clc
js
add
push
fadds
add
dec
pop
out
mov
mov
inc
test
pop
inc
dec
rcrl
jne
pop
inc
mov
sbb
out
pop
in
push
xor
jle
pop
jae
sahf
aaa
stos
pop
mov
or
and
adc
mov
fcomps
stc
loope
ds
mov
cltd
mov
insb
xor
lret
dec
lcall
inc
xchg
imul
scas
mov
sub
or
lret
dec
dec
pop
or
inc
rorb
or
aad
inc
jl
filds
lcall
ret
repz
cmp
cmc
lods
lret
pop
insb
adcl
lcall
cmp
fwait
cmpsb
outsb
ja
pop
push
push
int
xchg
mov
sub
arpl
mov
ficoms
jno
mov
xchg
add
pop
pop
in
xor
and
adc
pop
lods
imul
mov
sbb
nop
fnstcw
test
add
or
or
push
jb
inc
mov
push
pop
push
cmp
popf
xor
or
inc
mov
fidivl
mov
jmp
pop
cmp
cltd
pop
hlt
mov
sub
aad
pop
pusha
jg
lods
int3
popa
cmp
mov
fs
push
mov
pop
dec
std
sub
add
dec
cmp
add
lcall
in
mov
xchg
mov
pop
clc
in
xor
pop
roll
popa
data16
imul
push
pusha
push
add
jno
in
cld
sbb
cmp
bound
dec
mov
add
insl
sbb
jl
sbb
or
xchg
pop
pop
les
dec
test
pop
shrb
push
inc
fdivrs
push
pop
popa
inc
adc
pop
aam
adc
pop
sub
stc
iret
mov
sub
std
cwtl
xor
sub
iret
jecxz
cmp
mov
in
mov
pop
cwtl
pop
test
sahf
dec
cmp
in
or
je
pop
xchg
outsl
rcl
push
and
pop
jo
scas
push
sarl
fldt
mov
mov
cmpsb
imull
mov
push
fistpl
mov
mov
into
xor
popa
jle
loopne
out
rorb
daa
xlat
cmp
mov
inc
fcompl
adc
fwait
add
mov
out
icebp
les
pop
sub
inc
push
sti
pop
loop
insb
adc
ficoml
and
cmp
sti
fcmovne
mov
cwtl
fwait
in
stos
fstpt
lcall
sbb
in
pop
xor
call
sti
outsl
mov
orb
cltd
enter
pop
lcall
xorb
jnp
arpl
adc
inc
inc
cmp
pop
pop
add
xor
sbb
mov
jb
inc
sti
out
cmp
pop
leave
xor
enter
lds
sbb
add
cmp
pop
shr
jg
mov
out
mov
adc
pop
jb
push
pop
jne
pushf
xor
filds
les
fcomps
add
pop
xchg
adc
or
push
out
pop
shlb
pop
pop
sub
out
nop
add
xchg
and
dec
xor
sbb
pop
jmp
jbe
mov
mov
mov
into
mov
cmp
call
into
cmovb
push
lret
pop
push
cmpl
test
mov
lret
xchg
dec
bound
fiadds
or
jle
inc
sub
shll
xlat
xchg
fcomp
inc
sarl
or
or
ds
dec
adc
stc
sbb
outsl
pop
test
jle
insl
fwait
cmp
pop
sub
jae
dec
xor
pop
sti
xorl
inc
cmp
jb
pop
sub
xorb
push
xor
sarl
jne
cmp
xchg
jg
jno
call
into
dec
or
ljmp
je
lcall
jmp
adc
sub
test
es
fs
jg
sbb
mov
push
sub
in
cs
ret
dec
imul
jp
pop
xchg
insb
pop
fwait
int
jmp
mov
pop
sub
adc
pop
addr16
or
pop
sbb
mov
mov
mov
mov
sbb
inc
pop
sti
pop
rorl
and
and
mov
sub
inc
cmp
scas
out
inc
and
pop
in
inc
pop
dec
cmc
xor
push
je
cli
pop
sbb
arpl
mov
and
pop
or
push
mov
push
jae
jbe
sbb
jge
and
push
aas
or
pop
xor
fs
pop
out
fiadds
lea
int
in
xchg
xchg
xor
into
mov
sti
dec
daa
or
pusha
pop
mov
fs
pop
xor
fiaddl
push
xchg
pop
or
out
add
mov
cmp
mov
pop
loop
inc
sub
call
pop
or
jp
inc
test
adc
cld
shl
mov
fs
imul
je
jb
sub
fucom
fisttpl
inc
jno
negl
pop
and
or
into
nop
and
insb
ds
xor
jg
and
sub
aas
mov
cld
jecxz
mov
add
sub
jge
push
mov
dec
xchg
aaa
xor
or
and
pop
pop
leave
mov
out
lcall
stos
cmp
jnp
xor
dec
xorb
jne
in
pop
loopne
mov
jle
adc
xor
adc
push
call
ficomps
xchg
cmp
mov
inc
jmp
lcall
mov
push
negb
mov
outsl
adc
loopne
inc
dec
std
pusha
and
pop
out
push
rclb
cmc
pop
jmp
fsubrp
jp
sub
pop
pop
sbb
pop
sub
insl
jmp
xor
scas
dec
and
sbb
cmp
je
pop
cmc
fdivrl
mov
or
mov
xchg
hlt
mov
sbb
and
mov
mov
fs
adc
sbb
adc
insl
fwait
lret
pusha
jno
cmp
cli
pop
pop
jp
stos
pop
std
pop
jmp
xor
jecxz
inc
es
outsb
popf
pushf
adc
pop
inc
loopne
ss
stos
xchg
push
or
scas
jbe
fisttps
mov
scas
sbb
jp
arpl
inc
inc
dec
adc
test
cmpb
fistl
jecxz
sub
test
call
push
cmpsl
xchg
pop
nop
cli
sbb
daa
jb
or
cmp
jp
insl
push
pop
andb
mov
adc
pop
cmpsl
mov
or
fcmovnu
jmp
loope
sbbb
lods
das
pop
mov
jo
and
push
push
imul
aaa
push
pop
subb
sbb
repz
xor
in
mov
mov
lock
cmp
mov
pop
or
sbb
push
out
pushf
add
jne
sarl
loope
test
daa
clc
pop
lret
cli
lock
and
in
cmp
int
jns
dec
aas
cmpsl
fnstcw
add
fisttps
lret
sti
mov
in
pop
int3
sub
jne
fistps
gs
or
imul
pop
lea
in
xor
ret
pop
ds
sbb
bound
and
jns
mov
jne
and
mov
loope
lea
cltd
or
push
mov
sub
cmpsl
pop
gs
mov
nop
pop
imul
fwait
popa
ja
push
push
xchg
lods
mov
out
fcompl
jle
sbb
roll
fdivrs
dec
jbe
pop
xchg
cli
test
mov
stos
pop
sub
out
pop
adc
xor
mov
pop
xchg
and
mov
dec
mov
pop
notb
enter
imul
sub
arpl
mov
xor
fiadds
pop
inc
stc
popa
sub
and
pop
inc
pop
divl
xchg
stc
js
cs
pop
nop
cmpsb
xchg
repz
enter
cmc
xor
stos
pusha
xor
jb
mov
jnp
sbb
popa
fdiv
cmpsb
pop
push
push
iret
dec
or
lret
sar
jnp
sub
ret
in
pop
xor
and
xor
lods
mov
subb
mov
rclb
ret
lahf
sbb
out
pop
jmp
cmp
test
pop
call
lahf
fdivrl
jnp
mov
pop
cs
mov
pop
leave
popa
mov
add
and
pop
dec
fldcw
test
push
push
pop
mov
in
out
pop
ret
mov
outsl
add
pop
mov
pop
adc
andb
dec
hlt
jp
cmp
jb
pop
in
jecxz
lods
fs
cmp
lahf
pop
adc
cmp
pop
sub
outsb
mov
and
or
dec
jno
mov
sbb
add
ret
test
push
mov
dec
pop
loop
aam
add
ficomps
lods
in
adc
cmp
ja
gs
insb
fnstenv
lods
push
sub
pop
dec
adc
jnp
pop
jo
sub
pop
dec
pop
push
shll
mov
mov
pop
call
mov
inc
xchg
movsb
rcll
incb
popf
mov
ljmp
sbb
mov
sub
push
xchg
cmpsl
adc
enter
nop
repz
sub
adc
push
pop
or
jmp
mov
cmp
jae
jnp
xchg
outsb
mov
ret
push
lea
cli
inc
xchg
inc
sub
add
hlt
mov
test
cmp
push
add
pop
jl
push
clc
rclb
push
xchg
cmp
xor
aam
pop
pop
cmp
jne
and
sarb
or
pop
adc
jl
pop
ret
stc
rorb
loopne
xor
scas
and
es
pop
repz
sbb
sub
cwtl
dec
lret
pop
cmp
sub
inc
pop
xchg
sbb
pop
dec
dec
jns
lret
pushf
push
mull
outsl
pop
jo
xor
insl
push
mov
push
ret
test
imul
xor
cs
and
enter
fdiv
lret
push
fisttpll
test
mov
pop
imul
mov
fwait
push
and
pop
add
icebp
fdivs
push
pop
jo
arpl
sahf
mov
and
mov
dec
adc
push
or
add
outsb
sub
fistpl
sbb
repnz
or
pop
mov
cmp
pop
pop
gs
cmp
or
shrb
jp
pop
dec
test
jnp
adc
lret
push
xor
sbb
fsubs
cli
lcall
sahf
and
shr
out
in
or
movb
dec
or
aad
push
sub
ret
add
pop
jo
push
in
popa
enter
pop
xchg
xor
pop
mov
ss
call
xlat
sbb
sbb
lcall
jecxz
pop
iret
fisttpll
pop
pop
inc
aam
push
jo
push
cltd
adc
addr16
imul
cmovle
cmp
mov
jnp
mov
ffreep
shll
and
adc
mov
enter
xchg
mov
clc
pop
es
xor
pop
pop
mov
push
out
add
dec
mov
pop
pop
inc
mov
jo
jmp
call
arpl
xor
cmp
dec
push
xor
or
shl
pop
adc
test
push
jle
sti
jp
decl
movsl
mov
aam
cmp
pop
push
sbb
xchg
inc
cmp
push
or
sub
adc
xchg
out
adc
jnp
es
jne
or
adc
lcall
scas
xlat
mov
push
jmp
jecxz
clc
icebp
sub
inc
xchg
insl
popf
fbld
mov
andl
sti
jl
scas
jmp
mov
out
xchg
jae
push
aad
into
add
ds
and
cmp
jbe
fcoms
inc
adc
lea
shll
cmpb
pop
pop
repz
xchg
cmpsl
push
les
ja
cmp
stos
cltd
jecxz
stos
pop
push
mov
pop
hlt
rcr
outsl
push
dec
rcrb
jb
push
dec
jne
icebp
xchg
and
rorl
sub
in
lcall
scas
or
or
pop
in
adc
mov
mov
pop
xchg
mov
add
insl
loope
inc
push
mov
cwtl
mov
test
dec
enter
mov
and
adcb
filds
pop
mov
lret
in
fiaddl
insl
stos
pop
push
adc
pop
jg
addr16
lods
pop
fbstp
outsb
das
pop
push
and
shrb
in
add
out
divb
mov
jb
jecxz
adc
cmp
test
aas
jno
pop
cmp
aad
sub
loopne
sbb
fadd
scas
loop
jg
xchg
imul
xor
int
push
jns
mov
cmp
insl
jnp
mov
dec
or
ljmp
cmp
add
outsb
and
inc
lea
sahf
mov
jp
cmp
xchg
jle
sbb
lret
and
pop
and
sub
and
add
pop
xchg
add
sbb
inc
movb
sub
jno
and
lds
adc
mov
push
filds
push
nop
mov
lds
and
mov
rorb
out
push
das
pop
inc
int
cmp
xor
test
arpl
pop
rcrb
pushf
in
popa
fs
cmp
push
jbe
sarl
insl
mov
cmp
pop
ss
inc
fnop
adcb
xor
lret
test
mov
xor
das
sarl
dec
push
inc
xchg
sbb
loop
mov
data16
pop
hlt
js
test
inc
fists
push
jns
das
popf
fcmovu
inc
xchg
mov
jbe
es
test
jmp
popl
arpl
js
dec
add
lret
dec
mov
jo
adc
push
pop
popf
and
xchg
movsl
push
inc
mov
insb
stos
scas
push
and
lea
loop
cld
mov
jle
loopne
cmp
dec
adc
xor
and
adc
int3
mov
push
lahf
or
cmp
push
out
cmp
mov
push
mov
pop
outsb
test
pop
out
jmp
lsl
push
push
cmp
add
cmp
mov
ljmp
das
arpl
mov
dec
cmp
rorb
fwait
in
pop
xchg
jle
jl
cmpsb
lcall
sahf
or
movsb
pop
sub
jge
inc
enter
hlt
orb
cmp
leave
pop
cltd
out
les
sbb
aad
pop
test
test
js
pop
jge
leave
pop
ret
fnstenvs
mov
negl
in
or
sub
lods
dec
add
jb
leave
out
xor
add
jp
out
mov
sub
pop
movsl
cwtl
addl
in
sbb
sahf
pop
cwtl
sub
mov
mov
repnz
inc
lock
ds
mov
iret
jae
addr16
cmp
xor
push
scas
in
jbe
lea
fnstcw
push
out
inc
or
sbbb
jns
xchg
pop
inc
les
push
outsb
jo
ljmp
cmp
pop
jge
xchg
in
or
stos
inc
loop
xchg
je
mov
mov
mov
add
out
cltd
into
subb
push
cwtl
mov
and
dec
dec
aad
ret
push
stc
xchg
repnz
inc
jge
push
jns
imul
sub
pop
bnd
arpl
pop
xchg
stos
xchg
cmp
fdivl
test
push
int
add
dec
sarl
mov
jg
or
es
cmp
lea
movsl
push
rorl
cmp
adc
xchg
pop
jae
stos
lahf
xor
test
cmp
rcll
ret
pop
ret
mov
adc
cmp
mov
xchg
orb
dec
push
cmc
pop
jns
fwait
add
fidivs
pop
rcrl
das
xchg
push
fcomps
pop
cwtl
stos
clc
mov
dec
adc
push
popa
lret
pop
sub
cmpsb
push
cmp
mov
ja
inc
sbb
mov
push
outsl
adc
inc
dec
nop
ss
sub
into
dec
rcrb
das
mov
lret
fcomp
mov
lret
mov
jbe
pop
xchg
add
mov
pop
in
insb
faddp
dec
scas
test
aad
mov
sub
into
pop
fdivs
pop
test
andl
in
add
lahf
pop
ljmp
fists
in
sub
out
lds
rcll
loop
pop
and
mov
xchg
xor
mov
jne
sbb
xor
std
jecxz
sub
push
cmp
cld
mov
daa
and
mov
sub
scas
and
popa
sub
lret
pop
mov
lds
add
push
pop
lods
jg
ss
pop
sbb
icebp
je
and
fs
inc
xor
pop
mov
rol
aaa
movsb
or
cmp
adc
xchg
cmpsl
sub
stc
fimull
imul
xor
test
repz
or
xchg
add
mov
pop
sahf
aam
sub
xor
ds
imul
inc
add
stc
test
aam
mov
fisubs
jns
movsl
dec
and
push
arpl
test
out
and
jp
mov
mov
lret
js
add
mov
jge
sbb
mov
sti
inc
dec
inc
or
and
inc
and
clc
test
rorb
dec
out
pop
mov
mov
dec
push
cmpl
fdiv
dec
add
enter
sbb
cmpsb
jle
ret
push
dec
push
leave
rorl
pop
mov
cltd
movsl
arpl
out
outsl
push
mov
ljmp
cmp
outsb
rol
jns
cmp
push
or
and
jecxz
pop
adc
mov
cmp
or
mov
push
push
ret
and
cmp
push
ss
sub
out
cmp
xor
outsb
hlt
jnp
and
xchg
mov
xchg
cltd
popf
das
cwtl
sbb
sarl
adc
or
jne
fidivrl
lret
hlt
push
cwtl
test
inc
dec
xor
pop
and
pop
or
xchg
pop
or
iret
pusha
pop
stos
call
idivb
mov
fcomps
movsl
add
ljmp
jl
insb
rol
not
lods
cmp
pusha
gs
js
daa
scas
jmp
cli
loopne
stos
pop
push
jle
xchg
and
outsb
insb
push
inc
js
mov
mov
add
dec
rcrl
sbb
lret
or
jns
mov
or
push
jge
out
add
xchg
sub
lret
xchg
orb
mov
fadds
lods
pop
fldt
push
jg
jae
cmp
inc
jno
jle
sbb
pop
fnstsw
push
cs
jmp
cwtl
arpl
ja
pop
dec
xor
repz
inc
dec
test
mov
or
cmp
mov
push
push
sub
adc
jmp
dec
fidivl
mov
or
popf
aaa
and
jno
pop
fadd
mov
push
imul
mov
jmp
adc
adc
xchg
out
inc
xor
mov
insb
and
or
sbb
lret
jmp
mov
or
xor
sbb
cli
xchg
push
xor
and
mov
push
sub
jp
sbb
mov
xlat
lods
pushf
push
push
nop
gs
iret
or
add
js
fstpl
push
cld
adc
jmp
fldt
xchg
pop
and
pop
xchg
mov
mov
jp
aam
xor
test
clc
pop
dec
mov
or
pop
sbb
jmp
sbb
mov
insl
pop
leave
cmp
mov
gs
jns
pop
jl
fsubl
ds
pop
pop
js
xchg
mov
jns
xor
arpl
icebp
push
mov
test
mov
ja
neg
loop
out
push
mov
fisttpll
in
fs
loop
xchg
test
mov
push
out
frstor
pop
jo
ja
dec
push
scas
dec
jle
pop
inc
movsl
andb
push
mov
mov
pop
dec
mov
pop
movsl
adcl
mov
popf
rcrl
xchg
push
pop
mov
test
push
je
add
mov
fsincos
add
ds
xchg
out
sub
xchg
push
push
repz
push
cltd
leave
add
push
inc
pop
lods
rorw
insb
jmp
aas
add
xchg
sub
cs
fs
push
loope
pop
cmpsb
dec
fstps
sub
adc
enter
test
sbb
scas
addps
sti
or
pop
sub
xchg
push
lods
xchg
out
lock
mov
xchg
sti
lea
sub
mov
add
push
imul
push
cmp
pop
ljmp
mov
ret
mov
addr16
xor
inc
test
sbb
xor
outsl
xchg
das
mov
mov
xlat
jnp
pop
push
in
jle
push
lock
pop
adc
lods
or
outsl
xchg
adc
dec
sub
adc
jo
push
repnz
inc
cmpl
pop
mov
jle
ret
or
xor
mov
scas
fldt
stos
pusha
in
push
test
out
out
mov
jmp
inc
aaa
mov
or
ficoms
jb
mov
pop
mov
fwait
pop
outsl
fdiv
mov
fimuls
lock
jge
shrb
movsl
sub
mov
shlb
dec
sub
outsb
cmpl
std
jmp
and
stc
mov
cmp
jb
fstps
xchg
arpl
mov
in
add
test
cmc
pop
pop
lcall
rclb
inc
insl
fcompl
arpl
fldl
pop
xlat
cli
mov
or
ds
pop
enter
in
mov
cmpb
cmp
fsubr
or
sub
jo
test
pop
sub
mov
jmp
aam
inc
mov
ss
fisttpl
fnstsw
das
clc
push
jae
xchg
scas
ja
nop
push
add
push
xor
or
push
sarl
cli
in
packssdw
pop
cmpsb
push
or
pop
add
shlb
jp
in
cmp
stos
cmp
shl
subb
cmp
les
xor
dec
pop
mov
loop
xor
daa
call
fists
dec
test
les
idiv
movsl
je
push
inc
or
dec
xrstors
or
xchg
and
cmpsl
mov
mov
xor
jbe
cmc
sub
out
push
mov
add
jno
fs
lret
dec
or
out
leave
dec
sti
loope
and
popa
lret
xchg
mov
pop
push
mov
lock
push
lods
outsb
scas
fwait
push
mov
loop
inc
add
xlat
push
and
gs
roll
mov
or
neg
cwtl
lcall
pop
and
sbb
push
loop
cmp
xor
stc
push
cmp
lahf
outsl
ds
sbb
inc
mov
xchg
pop
xchg
lock
aaa
add
inc
into
jno
xor
pop
imul
mov
test
inc
jp
push
mov
jb
and
sub
rcl
lods
sub
push
sti
jmp
mov
test
ret
dec
in
add
inc
jb
mov
push
shlb
cmp
mov
ljmp
lahf
add
pop
add
dec
xchg
ja
xchg
aas
sti
lret
mov
daa
or
adc
pop
fwait
into
fcmovnu
jb
pop
push
mov
cli
xchg
pop
inc
add
fildl
dec
aaa
imul
scas
push
and
pop
xchg
mov
ret
pop
jmp
lds
sar
cmpsl
dec
nop
lret
data16
movsl
jp
inc
js
fstpl
mov
lcall
test
jmp
sub
adc
adc
sbbb
xchg
dec
mov
pop
mov
pop
call
enter
cmc
cmp
cmp
ja
and
ljmp
pop
leave
daa
xchg
lods
pop
repnz
push
addr16
mov
push
pop
mov
dec
and
out
jae
sbb
dec
je
fs
addr16
repz
shlb
inc
pop
sub
sub
shlb
pop
sarb
iret
or
out
or
mov
mov
mov
mov
fwait
lcall
pop
jle
jl
inc
movsb
pop
cld
insb
sbb
adc
mov
pop
sbb
sti
mov
and
cld
mov
dec
jbe
adc
inc
inc
and
pusha
test
rolb
andb
mov
lock
mov
push
add
lods
test
inc
xchg
out
ficoms
ficompl
ret
inc
pushf
pop
mov
sub
mov
scas
sub
cmp
cmp
push
lods
inc
and
stc
rcrb
shlb
leave
lods
xchg
addr16
into
mov
push
lahf
sti
jbe
xchg
xor
mov
cmp
sub
stos
mull
add
adc
loopne
insb
mov
and
dec
sbb
shr
addr16
mov
xchg
lret
xor
push
ja
lods
fidivrl
push
push
mov
pop
inc
adc
outsb
adc
cmp
mov
jb
cmp
push
fucomip
push
lea
sbb
sub
test
push
incb
jno
push
jge
xchg
xor
and
test
movsl
negb
xor
fadds
in
notb
repnz
add
inc
add
icebp
sbb
cs
and
jge
sub
rclb
into
mov
xchg
push
ja
in
int3
cltd
outsl
imul
lea
call
cmp
test
cmc
clc
cmp
push
pushl
push
mov
lea
jae
pushf
cmp
jmp
jge
dec
data16
mov
pop
faddl
push
lahf
lock
mov
add
mov
fucomi
notl
aaa
lea
or
hlt
xorl
dec
xchg
inc
mov
jb
xor
mov
pop
xchg
jp
mov
cmc
scas
scas
sub
sub
push
aas
and
lds
mov
shl
xchg
out
in
and
xchg
jbe
cli
mov
inc
push
ljmp
pop
mov
popa
subb
cs
dec
mov
sbb
loop
call
ret
mov
popf
mov
push
mov
aad
adc
push
push
bound
aad
push
mov
xor
out
mov
pop
mov
dec
aam
es
in
pop
sub
mov
lea
and
xor
adc
mov
pop
fadds
inc
stc
pop
js
mov
dec
inc
addr16
pop
subl
pop
push
add
aaa
imul
sbb
movsl
mov
lahf
mov
aaa
push
std
sahf
loop
fiadds
jb
rcr
dec
lock
xchg
mov
xchg
and
test
mov
test
xchg
ss
cli
sbb
ret
fdivl
cs
or
or
aam
jle
mov
lea
pop
fwait
mov
fimuls
or
cwtl
daa
dec
loop
mov
xor
mov
mov
mov
mov
insb
cmp
sahf
paddq
mov
and
pop
dec
gs
icebp
or
inc
adc
mov
not
call
add
mov
xor
lea
inc
subb
add
out
add
inc
lret
js
scas
add
ret
or
loop
cmp
mov
pusha
mov
add
mov
mov
test
call
test
jl
xlat
sub
dec
jge
lock
je
aad
and
xchg
fs
pusha
sbb
outsl
xlat
stos
xlat
inc
fildll
lret
addl
jns
xor
cmp
fs
mov
cmp
repnz
and
dec
jns
inc
mov
in
std
cmpsb
and
jp
negl
add
mov
pop
popf
cmpsl
lods
bound
pop
test
pop
mov
imul
mov
das
jg
test
fildll
in
inc
popa
push
nop
sti
js
sti
mov
pop
xchg
and
popa
rcr
mov
add
movsb
push
rclb
out
movsl
insb
jecxz
lods
adc
ljmp
mov
adc
mov
div
pop
es
inc
xchg
add
mov
adc
pop
mov
fimull
xchg
xchg
jl
mov
loope
pop
cmpsl
mov
mov
push
jo
push
xor
mov
test
pop
fnsave
out
fs
es
sub
xor
xchg
pop
pop
mov
idiv
imul
jmp
cs
pop
xchg
lods
jo
leave
stc
insl
jle
rcll
adc
sub
shll
int3
jp
mov
sbb
cli
sbb
adc
rcr
mov
mov
fdivrl
insb
pop
loopne
mov
sbb
roll
fxtract
xor
hlt
push
daa
ja
cwtl
push
rcll
out
push
jle
jnp
ja
leave
sub
es
outsb
gs
ss
shlb
inc
int
xchg
imul
inc
jmp
mov
clc
mov
call
mov
pushf
push
pushf
pushl
pushl
ret
bt
cmp
pushf
mov
mov
lea
jae
test
pushf
cmp
push
call
cltd
push
mov
test
mov
push
fsqrt
add
ljmp
mov
ret
fnstcw
mov
xor
imul
and
sub
sub
ret
bound
cli
outsl
repnz
jne
xorl
iret
or
dec
lock
adc
pop
ja
mov
mov
mov
ret
ret
ret
push
push
daa
pop
jg
loope
push
addb
sub
dec
mov
push
xor
or
or
mov
pop
mov
jno
in
das
nop
sar
xor
filds
fimuls
xor
add
cmp
rorl
popa
jbe
adc
pop
fnstenv
jnp
movsb
fbstp
pop
xor
jno
test
mov
and
xchg
push
daa
xor
out
je
rorb
cmp
or
xor
push
ja
sbb
pop
pop
call
flds
push
int3
push
cmpsb
adc
ja
enter
inc
sbbb
and
rclb
scas
scas
push
fstpl
mov
and
jnp
daa
nop
movsb
push
pop
add
rolb
and
leave
ret
fsubp
xchg
push
xor
push
sub
dec
inc
pop
call
xlat
pop
popa
xor
or
pop
xchg
adc
xor
cmp
orb
or
mov
cs
xchg
xchg
iret
out
pusha
xchg
mov
sub
cmc
mov
shlb
mov
imul
jbe
jge
fsubrl
add
add
dec
test
jle
int3
jno
mov
lcall
xor
sbb
fnstcw
sub
pushf
fs
cmp
pop
out
insl
aam
insl
into
out
push
inc
out
jb
or
cld
mov
jmp
outsb
xor
cmp
fs
inc
cwtl
jle
dec
fwait
and
mov
mov
xchg
mov
mov
adc
mov
inc
jmp
xor
push
mov
out
push
add
nop
out
icebp
cmp
push
js
call
cltd
mov
shr
shlb
inc
loop
mov
add
bound
add
mov
add
cmp
add
das
add
mov
add
cmp
add
jns
add
mov
add
cmp
add
mov
add
add
add
add
add
add
mov
add
add
add
add
add
add
and
push
cmp
add
add
and
pop
cmp
add
andb
adc
and
bound
add
add
add
add
add
jmp
and
push
add
add
add
add
add
and
and
and
jb
add
add
add
add
add
sbb
add
add
add
add
add
add
movsl
sbb
xor
and
cmpb
add
xchg
sbb
cmp
and
mov
add
add
add
add
add
add
add
add
add
add
add
and
dec
mov
add
add
add
add
add
and
push
mov
add
add
add
add
add
mov
add
add
mov
inc
jmp
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
ret
fdivrs
xlat
imul
incb
mov
std
lret
xor
xor
xor
dec
mov
test
repnz
xchg
xor
xchg
mov
fisubl
cmp
gs
add
outsl
cmpsl
cmp
cli
xchg
xor
mov
mov
pop
call
movsl
push
cmp
sbb
mov
cld
dec
push
fstpl
lods
mov
clc
pushl
and
jo
sbb
cmp
popf
call
xor
call
test
sti
xchg
movsb
sbb
mov
cmp
lcall
or
aad
loop
mov
sarl
push
fdivp
arpl
and
sbb
into
jp
mov
jp
and
sub
push
outsb
imul
xor
cltd
enter
mov
add
outsb
jo
adc
dec
ja
sub
int
icebp
and
and
subl
fs
adc
push
push
lret
push
mov
fdivp
inc
sub
sub
test
xor
movsb
mov
push
lret
mov
imul
fisttpl
mov
fbld
out
scas
pop
scas
mov
mov
or
pop
es
call
and
stos
in
mov
xchg
inc
xor
sub
fdivrl
pusha
daa
cli
aad
test
and
pop
inc
jge
push
int3
adc
sbb
insl
ret
mov
add
sub
jge
add
push
stos
aas
push
arpl
cmpsl
pop
movsb
xorl
insb
insb
sub
and
push
push
mov
out
push
mov
cmpsl
in
or
sub
push
setge
sbb
movsbw
mov
bt
push
mov
call
call
out
pop
push
fs
dec
xor
or
repnz
cwtl
pop
lock
mov
pop
xchg
push
lock
cmp
in
popf
je
shlb
sub
mov
add
xor
fisttps
pop
mov
stos
push
jno
ljmp
jb
pop
and
cmp
js
mov
push
fnsave
addr16
daa
call
mov
aad
mov
jno
xchg
jb
jl
sub
dec
sub
lcall
iret
nop
jge
sub
std
call
dec
mov
aad
in
subb
lods
pop
and
movsb
addr16
notb
inc
cmp
push
dec
testb
xchg
cld
add
and
jecxz
imul
mov
in
dec
lfs
xchg
add
add
rcrb
mov
jno
push
xchg
cs
cmp
imul
mulb
dec
push
cs
popa
sub
hlt
push
sub
xchg
out
adc
movsb
iret
jecxz
mov
and
cmp
insl
and
imul
lods
push
push
lcall
bound
fwait
pop
mov
mov
cmp
dec
inc
pushf
mov
jmp
pop
enter
jl
sbb
pop
push
sar
sbb
scas
mov
mov
cmp
popa
cmpsb
and
push
rcl
ret
dec
sub
subb
das
mov
dec
addps
mov
sub
loope
clc
repnz
movb
call
xchg
ds
jmp
outsl
and
out
push
sub
cmp
push
add
popa
in
test
cmp
nop
ret
sub
lcall
in
insl
sti
adc
mov
sub
adc
fistl
add
stos
xchg
push
xchg
pusha
fimuls
adc
xchg
xchg
inc
jl
mov
stc
rolb
push
push
inc
lahf
insl
jo
jo
rorb
fstl
sbb
fldt
lea
push
sub
imul
and
push
sub
idivb
dec
add
inc
aam
cmp
pop
test
xchg
lock
gs
xor
push
or
dec
ja
fdiv
fsubrs
inc
sti
ljmp
shlb
cmpsb
in
adc
push
aas
popf
imul
nop
mov
stos
jae
mov
mov
pop
pushf
lods
int3
lea
enterw
movsl
cmp
gs
sbb
cli
aas
cmp
shrl
test
push
and
test
sarb
sbb
cmp
sub
mov
mov
imul
ret
xchg
dec
nop
pop
arpl
dec
cwtl
mov
ss
into
dec
cmc
mov
pop
add
fstpl
dec
faddl
mov
movsb
movsb
and
pop
cwtl
sti
shlb
lcall
sbb
mov
push
mov
nop
lahf
cwtl
ja
jns
hlt
test
icebp
inc
add
push
enter
pop
and
mov
and
adc
fisubrl
sub
xchg
mov
jg
cld
test
imul
xor
jl
fstpt
sub
mov
push
mov
aad
pusha
repnz
or
xchg
lods
pusha
or
mov
mov
loop
mov
jle
or
and
and
xor
lcall
in
clc
dec
lret
sti
inc
aam
mov
cwtl
adc
decl
or
cmp
sub
pop
lods
dec
jb
sbb
xchg
gs
jae
pop
add
push
stc
call
push
jo
cmp
jae
add
lea
add
xlat
lock
lods
cld
adc
and
xchg
dec
jmp
cmc
mov
std
imul
xchg
xor
insb
inc
jmp
inc
push
call
sar
mov
dec
cmp
ja
and
fcomps
jo
mov
mov
je
not
rcll
aad
mov
cmp
out
jne
mov
sarb
and
ss
adc
ret
ret
mov
sbb
dec
rcll
push
enter
adc
or
pop
es
mov
jmp
scas
mov
pop
jge
add
inc
jbe
jmp
les
test
js
jno
pop
std
cld
dec
inc
mov
add
mov
dec
scas
jne
dec
xor
fbld
sbb
rclb
call
dec
call
jmp
dec
adcb
mov
fidivs
loopne
cli
jnp
mov
sbb
out
and
int3
in
inc
scas
andl
test
cmp
mov
insb
out
mov
mov
sub
repnz
or
jbe
das
mov
inc
hlt
mov
jnp
ja
movsb
sub
gs
mov
or
mov
hlt
jns
pop
fisttpl
or
push
and
stc
add
es
inc
push
or
scas
sbb
and
sbb
jmp
and
imul
sbb
push
movsb
cmp
lahf
stos
push
in
lds
mov
in
pop
addr16
loop
popf
pop
cwtl
lock
cli
out
mov
out
dec
ja
popf
scas
fsubl
jmp
mov
mov
sbb
movsl
adc
push
pop
cmp
movsl
adc
inc
xchg
xlat
add
pop
fwait
loop
orb
cwtl
ja
ret
mov
cmp
sar
pop
js
sbb
imul
test
xchg
mov
scas
and
adc
xchg
mov
dec
mov
leave
jl
faddl
rcrl
pop
push
incl
gs
or
lret
sub
arpl
popf
mov
sbbb
into
jle
dec
in
sub
lretw
push
pop
mov
inc
jnp
xor
outsb
movsb
bound
movsl
das
inc
pop
into
sub
in
xchg
mov
xlat
test
shll
cmp
aad
add
inc
iret
lds
add
cmp
out
subb
repnz
shr
dec
sar
mov
cmc
stc
cmpb
call
inc
inc
cmpsb
clc
inc
scas
es
mov
into
shlb
push
fnstsw
pop
lods
out
adc
xor
lahf
test
or
mov
movsb
adc
stos
cs
lahf
pop
clc
and
adc
add
cmp
ret
add
jo
insl
clc
dec
addb
or
inc
rorb
imul
mov
mov
or
push
cld
pushf
pop
and
out
inc
fcmovne
adc
mov
mov
pushf
push
test
and
pusha
xchg
cmpsb
shlb
xchg
lahf
jns
test
ljmp
add
xchg
push
subl
enter
mov
clc
cmp
cmpsb
fisttps
or
shr
fwait
popa
imul
push
imul
pusha
xchg
pop
daa
out
mov
push
jbe
jo
mov
xlat
test
mov
or
scas
mov
xchg
and
mov
lods
call
out
mov
adc
mov
icebp
pop
aaa
pop
push
dec
mov
cmp
push
jo
dec
ljmp
das
mov
adc
cmp
ljmp
imull
int
xchg
jo
sti
mov
cmp
cltd
jb
in
pop
js
test
push
push
xchg
xor
out
push
pop
mov
insl
gs
arpl
scas
cmp
xlat
and
or
push
mov
cmp
imul
jne
out
mov
xor
enter
lret
and
xor
pop
mov
enter
out
ret
shlb
add
scas
fistpl
int3
stos
xchg
das
mov
push
imul
dec
fcmovu
int3
addr16
adc
fucomp
xadd
movsl
or
dec
int3
mov
jp
mov
cmp
ret
pop
xchg
out
arpl
mov
loop
imul
fs
jmp
xchg
arpl
loopne
lahf
jne
jo
jns
mov
popf
inc
imul
pusha
adc
jmp
lea
je
cmc
sub
call
cld
das
adc
xchg
cmp
aas
mov
lcall
gs
outsl
cmp
mov
push
and
jp
loop
mov
outsl
adc
cmp
mov
jno
fidivrl
dec
mov
xchg
das
pushf
or
test
sbb
mov
aas
or
or
and
sarb
lea
jo
xor
push
xor
lds
push
jae
xchg
loop
imul
or
push
sarb
xor
leave
fnstcw
sbb
sbb
data16
jecxz
push
scas
xchg
test
ljmp
scas
mov
imul
repz
std
leave
aas
mul
xor
outsb
ficompl
pop
push
push
xor
test
dec
int3
mull
ss
jo
push
outsb
adc
imul
adc
data16
imul
aam
xor
inc
imul
jo
loope
es
push
lahf
test
sarl
aas
lods
sub
mov
xor
dec
lahf
mov
sub
aam
xor
test
cwtl
push
mov
or
mov
popl
inc
jecxz
xchg
cmpsb
mov
sub
push
fwait
les
lret
pop
xchg
sbb
in
ss
pop
xchg
pop
dec
pop
ljmp
pop
shl
xchg
add
and
sub
insl
xchg
test
pop
mov
lret
popa
out
inc
aaa
and
adc
push
lret
mov
push
hlt
mov
fs
mov
fnstcw
xor
pop
mov
adc
movsb
out
or
mov
outsl
adc
das
shlb
dec
cmpb
sub
dec
add
inc
jecxz
xor
ret
add
test
js
pop
mov
cmpsl
shr
cmc
mov
loop
add
scas
rorb
adc
dec
cwtl
repz
in
scas
inc
movsb
ficomps
aas
mov
cmp
and
clc
addr16
inc
lods
shrl
repnz
or
cli
sub
add
lret
popf
arpl
aam
cltd
enter
push
or
loopne
addb
mov
adc
mov
push
lahf
enter
cmp
jecxz
shr
xchg
bnd
or
mov
aaa
cmp
and
sub
xchg
add
lds
sub
lods
out
cmp
int
test
mov
mov
mov
icebp
ljmp
sbb
sub
sbb
add
inc
jo
imul
mov
mov
movsl
imul
cmp
and
aaa
pop
imulb
xor
sti
push
mov
pop
fisttpll
incl
sub
mov
sbb
iret
je
int
lea
pop
lea
fcoml
pushf
ret
enter
mov
imul
outsl
in
mov
jge
int3
es
into
int
or
lock
test
arpl
aad
add
jle
scas
jne
inc
sub
std
or
bound
mov
xchg
loope
imul
call
jmp
cmc
add
call
iret
add
fiaddl
xchg
scas
test
sub
mov
lcall
xchg
cmpsb
cmpsl
sub
cmp
mov
pop
rorl
jp
lcall
xor
or
sub
sub
sub
mov
adc
jmp
dec
push
pop
std
cmp
lods
test
cvtpi2ps
mov
push
adc
pop
into
test
movsb
xchg
hlt
sbb
fcmovnb
push
out
je
cmp
fadds
mov
aad
test
icebp
sti
mov
cmp
stc
lea
fnstsw
hlt
and
aad
into
cmp
push
outsl
push
and
daa
inc
pop
sub
jmp
test
inc
pusha
xchg
jnp
add
mov
pop
push
mov
js
lock
xchg
out
cmp
adc
mov
aaa
mov
aas
push
sbb
sbb
xor
cmp
imul
stc
cmp
jmp
push
adc
inc
add
xor
fcompl
stos
and
mov
das
pop
jo
mov
mov
in
add
sahf
sbb
inc
xor
ss
shll
out
jae
mov
in
pop
and
cmp
mov
jno
pushf
mov
sbb
dec
adc
push
fdivs
dec
and
cmpsl
or
fdiv
ficompl
mov
inc
imul
jmp
jmp
call
dec
lret
and
xor
push
inc
or
xchg
and
mov
cmp
xchg
in
fnstsw
push
cmp
sub
ret
fsts
cmp
ljmp
jns
cmpsb
pushf
lret
dec
fdivrs
andl
dec
loope
arpl
test
scas
daa
xor
mov
mov
imull
leave
push
lret
pop
jecxz
mov
sbb
push
push
repz
or
les
repnz
dec
pop
or
lret
sahf
mov
sti
push
leave
lahf
jnp
fwait
inc
sub
jmp
ret
or
cmp
and
icebp
sub
loop
jbe
das
cmp
ljmp
out
inc
xchg
jmp
mov
xchg
pushf
or
inc
aas
push
clc
fdivr
mov
mov
fwait
mov
negl
push
les
pop
in
fsubl
aaa
cli
inc
std
popa
or
dec
dec
sub
fbstp
mov
mov
int
and
cwtl
mov
repz
testl
pcmpgtd
aas
cld
insb
std
sub
sub
imul
jbe
push
lahf
mov
adc
out
cmp
les
pop
xor
leave
jp
push
xchg
data16
shlb
pop
add
sbb
mov
or
and
mov
inc
push
adc
jle
sub
jmp
dec
inc
mov
xor
jp
or
fmuls
rorl
or
inc
pop
sub
cmp
pop
push
add
lret
imul
pusha
mov
pushf
repnz
mov
pushf
lea
jne
not
call
fs
cs
ljmp
repnz
xchg
ss
mov
add
loop
cwtl
in
idivb
pushf
cmovnp
mov
add
jg
push
adc
cltd
and
imul
xor
add
xchg
cmp
xchg
sub
fiaddl
fstpt
inc
mov
cmp
out
hlt
adc
rorb
dec
loopne
ret
pop
cmp
cmpsl
notb
xor
andb
daa
test
inc
jno
pop
or
ret
lds
fbld
push
popa
jno
into
les
jmp
xchg
jmp
jmp
lret
mov
cwtl
lret
hlt
fwait
mov
mov
jl
inc
jg
jg
cmp
imul
mov
mov
and
insb
xchg
cmp
icebp
fidivrs
adc
repnz
dec
dec
jb
mov
divb
sub
aas
nop
jg
call
adc
sub
sbb
mull
in
mov
js
xlat
rcr
jo
and
xchg
nop
cmp
pop
push
scas
bswap
add
shr
lea
bsf
sar
mov
call
test
xor
mov
xchg
mov
push
popa
movsb
scas
push
pop
mov
and
sub
jp
or
sbb
dec
mov
sarl
xor
lcall
add
xor
pop
adcl
inc
xor
popa
dec
and
mov
test
jno
pop
inc
sub
pop
sub
imul
lea
jae
rcr
mov
mov
or
mov
sbb
add
bt
push
mov
pushf
jmp
lea
call
bt
pusha
cmp
cmp
sub
pushl
pushf
call
pusha
add
pusha
jmp
adc
mov
xor
shlb
mov
mov
jle
movsb
aaa
xor
jge
cmp
pop
loope
ja
mov
cmc
and
dec
push
mov
xor
addr16
xchg
cmp
dec
scas
ljmp
push
cmc
sub
fiadds
pop
inc
xor
jnp
pop
stc
jmp
and
or
shrb
push
mov
xlat
lret
dec
push
movsl
ret
aam
dec
mov
addl
rcrb
xchg
pop
negb
je
jne
inc
xchg
call
mov
xchg
add
push
and
mov
push
data16
int3
dec
push
aas
dec
bound
jmp
push
push
dec
xchg
cmp
xchg
pop
jne
mov
cmpsl
xor
aad
push
pop
mov
es
cmpb
xor
into
sbb
xchg
flds
out
cmp
dec
fistl
pop
aaa
loop
cmp
xchg
jmp
and
bound
adc
notl
xchg
ret
in
scas
ljmp
pop
stc
jae
mov
pop
rorb
imul
bound
mov
stc
les
mov
mov
xchg
mov
xchg
mov
cmp
cltd
movsb
sub
test
or
sbb
or
scas
shll
cltd
orl
jo
or
cmc
lcall
push
insl
fwait
movl
pop
hlt
sbb
jg
jl
fsubs
flds
js
add
inc
aas
inc
cmp
push
inc
imul
shl
fdivl
dec
adc
sbb
outsb
rorb
out
dec
lock
add
fstl
shlb
loope
jp
jbe
and
arpl
nop
sti
aam
mov
adc
fcomip
imul
lea
jne
pusha
xor
btr
rcr
push
pushl
mov
jmp
pushf
inc
not
shr
cmp
inc
xchg
shl
lahf
mov
add
mov
bt
clc
pushf
xchg
movzbw
shrd
cmp
shl
mov
cmp
sub
mov
call
ja
mov
pop
lods
jl
iret
js
push
pop
xchg
inc
out
in
push
mov
fstps
mov
lea
in
mov
sbb
scas
ss
ds
out
pop
cmp
lock
cmp
repz
and
pop
dec
push
add
mov
out
or
leave
add
cwtl
fsubp
jo
popa
cmpsb
inc
rorb
lcall
frstor
lds
add
sbb
or
pop
adc
xchg
addl
hlt
mov
pop
rorl
imul
add
dec
jo
outsb
push
jb
outsb
je
jb
add
sbb
enter
mov
cmp
sub
jle
mov
pop
scas
add
push
lds
inc
push
sahf
arpl
outsl
push
xchg
push
adc
pop
jo
inc
sub
dec
sub
xchg
sti
mov
sahf
add
lds
pop
inc
sbb
imul
mov
cmp
loop
dec
sbb
mov
xor
mov
cmp
mov
mov
mov
dec
sub
mov
movsb
scas
mov
mov
imul
inc
in
dec
js
adc
pop
nop
dec
lret
movsb
dec
xchg
stc
mov
ficompl
movsb
add
enter
stos
pop
jecxz
push
dec
and
bnd
add
or
cmp
aas
pushf
rorl
cltd
cmp
push
lds
aaa
ret
mov
dec
repnz
out
outsb
std
repz
mov
sbb
popf
fdivrs
lret
out
mov
pop
xchg
sti
sub
mov
popa
subb
sti
sbb
xchg
fs
add
aad
and
test
sbbb
inc
mov
push
sbb
xlat
lret
arpl
sub
xchg
sbb
and
out
scas
repnz
and
sbb
rcl
jmp
xchg
aad
test
aam
mov
xchg
push
adc
sti
pop
lea
aad
and
or
mov
xchg
mov
int3
or
insl
mov
xchg
repz
jmp
sahf
sti
sbb
xchg
shr
add
bound
xor
cmp
aad
mov
xchg
adcl
lea
aad
loop
sti
lcall
rclb
sahf
sti
cmp
sbb
and
pop
dec
jns
aad
and
std
adc
arpl
sbb
xchg
aas
xchg
mov
aad
mov
xchg
adc
repnz
xchg
push
jecxz
mov
in
mov
xchg
push
push
arpl
sub
pop
aad
and
push
lcall
sti
mov
pop
test
sti
sbb
xchg
cwtl
xchg
pushf
sti
mov
scas
pop
iret
mov
xchg
pop
and
dec
fidivl
jge
cmp
push
stos
mov
pushf
cmp
lahf
in
rolb
aad
and
xor
mov
sti
sbb
xchg
pop
sbb
sahf
sti
cmp
addl
mov
xchg
rcrb
js
or
sahf
sti
mov
in
sarl
sti
lret
push
inc
mov
sahf
sti
sbb
xor
jae
inc
mov
cwtl
xchg
out
fistps
out
loop
sti
pop
jge
out
add
std
and
fmulp
int3
fiadds
sti
sbb
xchg
cmp
add
int3
and
outsl
lcall
sti
dec
sub
pop
aad
mov
xchg
jb
int3
mov
sti
sbb
xchg
adc
sbb
cli
jecxz
cmp
call
clc
mov
xchg
mov
xchg
ret
frstor
sbb
mov
sti
fiaddl
frstor
adc
lahf
sti
cli
insl
pushf
mov
cmpsb
frstor
sti
jmp
pop
pop
or
int3
mov
jb
or
and
cltd
xor
jbe
outsb
sbb
pop
dec
cmp
push
pusha
jmp
jg
or
and
movsb
sbb
mov
cmpsb
push
lods
addr16
xor
dec
enter
imul
cmpb
lret
cmp
push
addr16
xor
test
jg
lds
jb
push
je
aad
aad
cmp
stos
cmc
ror
cmp
push
pop
ja
daa
mov
sub
ljmp
insb
dec
nop
mov
in
cmc
mov
jl
aaa
loop
pop
call
mov
movsb
adc
jae
subb
cmc
add
es
out
fildl
dec
jne
loop
out
enter
adc
fcos
imul
negb
or
loopne
push
in
push
push
pop
rorb
or
aam
push
int3
dec
pop
sbb
pop
sub
xchg
mov
mov
pop
and
mov
mov
push
jne
pop
jns
xchg
cmp
jp
dec
aaa
push
cmp
es
cmp
cmpsb
sub
lcall
push
mov
jecxz
lock
shlb
imul
bswap
mov
dec
mov
not
shld
mov
test
sub
clc
stc
bt
repnz
pusha
jmp
icebp
push
mov
je
out
mov
xchg
mov
nop
xor
sarb
mov
fcmovu
cwtl
dec
cltd
les
out
in
fwait
pop
scas
sbb
rcrb
jnp
mov
sbb
mov
adc
aad
in
cmp
outsb
cld
push
xor
cmp
inc
or
xor
mov
add
sub
insl
cmpb
in
mov
loop
pop
repz
xor
aaa
int3
pop
cmp
repnz
push
imul
fcmovne
mov
das
cmp
jge
mov
inc
nop
cmpsb
add
loopne
ror
and
enter
push
xchg
push
std
push
cmp
jmp
sub
je
inc
sbb
cmpsl
in
sarb
das
ljmp
dec
test
iret
mov
hlt
and
enter
inc
jecxz
xchg
xchg
lret
inc
mov
or
aaa
je
dec
imul
mov
cmp
repnz
pusha
lea
jne
push
cwtl
movb
sets
pop
movzbw
push
lahf
jmp
jmp
push
adcl
xchg
aaa
inc
sbb
sbb
adc
jae
aad
test
repz
outsl
call
mov
aam
hlt
push
ror
inc
sti
and
outsb
fcmovnbe
pop
mov
dec
xor
xchg
test
stos
cmp
loope
sbbb
add
add
mov
test
xchg
adc
les
ljmp
mov
and
dec
shlb
imul
adc
push
stos
flds
call
inc
push
fsub
push
repz
imul
ja
xor
jo
jle
xor
or
icebp
lods
xchg
sahf
test
xchg
repnz
push
mov
pop
loope
sti
orl
pop
fstpt
outsl
cmpsl
push
loop
leave
xor
in
pop
push
dec
outsb
outsl
mov
ljmp
pop
cmp
xlat
js
jns
js
push
mov
lods
in
jo
push
repz
jae
cwtl
repz
inc
mov
lds
addr16
lret
push
adc
das
pop
sub
inc
popa
xchg
sub
daa
loope
out
xchg
xor
xor
pop
jp
mov
imul
ja
aaa
ret
ja
movsb
xor
gs
jnp
cld
jns
test
adc
adc
repnz
push
movsb
add
dec
adc
test
lcall
mov
inc
icebp
loope
mov
add
fwait
xchg
dec
jo
adcb
sub
or
test
pop
sarl
mov
imul
mov
mov
pop
iret
into
jnp
test
mov
aaa
mov
adc
fldt
and
mov
pop
add
mov
dec
imul
jmp
lods
repnz
out
jl
aas
inc
jnp
popa
add
enter
nop
inc
mov
mov
clc
cmpsl
add
aam
push
xchg
sbb
stc
cmp
mov
test
imul
shr
incl
popf
imul
into
inc
test
xor
add
sub
mov
mov
add
lods
or
pop
in
andl
cs
jmp
jb
inc
or
xchg
aam
ficompl
mov
out
call
je
loope
rorb
je
mov
pop
jae
mov
in
arpl
jp
cmp
je
sbb
call
orl
pop
push
adc
mov
xchg
out
lret
xchg
xchg
lds
test
dec
jnp
cwtl
inc
je
es
lods
mov
pop
daa
popf
fisttpl
sub
decl
fsts
mov
addr16
pop
cmpsb
adc
fwait
out
call
and
sahf
inc
daa
outsl
xchg
outsb
pop
xor
mov
pop
dec
cmpb
push
adc
mov
aas
subb
mov
movsl
clc
enter
lret
push
arpl
cmpsl
fcompl
cs
mov
mov
aad
push
dec
out
stc
test
and
sbb
sub
popf
into
lret
jb
xchg
cmp
xor
mov
adc
xor
gs
out
adc
repz
jnp
popa
enter
inc
xor
mov
sub
adc
jne
xor
movsb
ja
lds
repz
imul
mov
adc
dec
dec
std
mov
insl
fldenv
xchg
mov
xchg
dec
sti
mov
stos
cs
lcall
cltd
ds
rcr
cltd
ljmp
adc
xchg
xchg
test
mov
fsubs
mov
rclb
je
aad
xchg
dec
inc
test
xchg
in
fiadds
or
pusha
cmpsb
imul
in
fldt
dec
hlt
xchg
jb
sbb
pop
xchg
je
aad
push
je
test
and
addr16
cmp
xchg
les
xchg
cmpsb
add
jbe
adc
sti
mov
mov
je
mov
mov
imul
bound
xor
lock
push
fs
popa
loopne
jnp
cmpsb
xchg
outsb
les
cmp
mov
ret
fdecstp
mov
int
in
mov
jo
es
mov
je
or
insl
loope
pusha
in
icebp
push
fistpl
pop
push
inc
pop
jae
or
xchg
push
sbb
int
outsb
mov
sbbb
push
cmp
push
mov
mov
lea
or
lea
lret
fstpt
sub
dec
push
mov
mov
scas
lds
into
push
or
sub
pop
scas
add
imul
jg
fistpl
xchg
sbb
push
sbb
dec
shll
sar
add
cmc
add
mov
icebp
xchg
aad
daa
enter
sub
sbb
mov
clc
jecxz
dec
mov
xor
mov
cld
pop
int
nop
sbb
sbb
push
xchg
push
sub
mov
jnp
jne
sub
xor
xchg
jo
dec
test
lods
add
mov
inc
fsts
jns
sbb
add
stos
ror
stc
inc
adc
rolb
pabsw
insb
push
pusha
push
lock
std
std
mov
test
or
dec
insb
mov
rorl
outsb
xor
pop
pop
ss
rcr
pop
jge
dec
in
sub
jg
sub
add
in
aam
adc
test
jns
lcall
jecxz
inc
idiv
ret
in
xchg
push
inc
mov
pop
mov
inc
xchg
mov
jmp
sbb
cmp
pop
addr16
rorb
stc
cmpsb
inc
push
into
push
imul
incb
cmp
push
lods
imul
mov
sbb
ret
lds
ljmp
enter
pusha
push
mov
sub
loop
adc
dec
cmc
rcrl
mov
push
nop
test
stc
pop
mov
lods
push
rcrl
iret
or
cmp
mov
or
push
pop
fwait
inc
inc
scas
xlat
loope
xor
sbb
movsb
not
scas
sbb
leave
inc
jg
push
test
mov
xor
ret
cmpsl
jmp
cltd
cmpsb
mov
aas
lret
sub
mov
pop
push
cmp
call
push
and
enter
js
push
jl
xchg
jae
pusha
sbbb
in
xchg
push
stc
int
stos
dec
cmp
jg
sub
cld
jb
insb
add
je
repz
mov
icebp
push
enter
mov
push
push
pop
imul
pusha
mov
pusha
lea
jbe
push
jmp
lea
ja
not
add
push
shl
sub
bswap
movw
sub
add
cmc
inc
sub
mov
mov
call
mov
push
cwtl
sub
div
inc
jb
push
icebp
xchg
jmp
cmp
mov
push
push
xor
sbb
mov
sahf
jne
fdivrl
arpl
cmp
mov
rol
push
insb
popa
xchg
daa
sahf
push
fucomip
sbb
add
je
arpl
ret
dec
adc
add
sbb
subl
xchg
ret
push
in
sbb
mov
add
stos
mov
jg
push
mov
fdivrs
adc
pop
sbb
jle
mov
dec
mov
mov
lret
ficomps
inc
mov
imul
push
pop
sarb
test
push
popa
jge
rolb
ljmp
call
cmpsl
loopne
pop
cli
dec
sub
pop
ds
xor
inc
sub
jns
cmp
cmp
pop
dec
out
xchg
int
loopne
sub
inc
lcall
sbb
add
je
or
mov
xchg
dec
aas
adc
inc
in
sub
nop
cmp
adc
add
test
xor
adc
jnp
bnd
mov
cwtl
ja
mov
repz
push
insl
jg
mov
xchg
loop
imul
and
add
fiaddl
outsb
or
and
inc
adc
sti
mov
pop
fst
in
xchg
inc
cld
push
jo
sub
sub
dec
cld
mov
cltd
pop
das
pop
and
gs
jp
adc
ss
sbb
pop
mov
lods
inc
or
push
cs
xchg
xchg
inc
pop
repnz
ftst
and
xchg
push
cmp
dec
or
mov
jle,pn
movsb
sub
or
leave
add
into
imul
or
pushf
inc
mov
pop
in
sbb
xchg
xchg
or
imul
mov
cwtl
push
jge
pushf
add
cli
leave
test
add
pop
and
pop
andl
sub
lock
pop
jb
push
inc
roll
xchg
outsl
rorl
mov
lods
sub
sbb
iret
inc
jp
js
dec
dec
sbb
aam
rorl
aaa
enter
mov
jecxz
pop
ss
ficompl
insb
pop
outsl
mov
jo
mov
mov
pushf
movw
test
jmp
outsl
or
dec
xchg
push
dec
test
loop
std
xchg
fdivrs
int
lcall
pop
inc
jb
mov
call
jae
scas
rorl
data16
or
or
enter
mov
cs
les
in
pushaw
scas
pushf
stc
pop
repnz
mov
loop
mov
mov
push
stc
shlb
bound
mov
fldt
jno
aas
push
inc
sahf
pusha
push
push
arpl
fstl
pop
and
leave
sbb
andl
test
and
ficoml
push
cwtl
and
dec
scas
lds
mov
ret
dec
cmp
mov
es
mov
mov
or
loopne
movb
lods
dec
push
cmp
mov
in
loop
negl
aas
xlat
insl
test
inc
sbb
mov
xor
mov
or
xchg
cmp
imul
mov
arpl
aad
lods
js
cwtl
mov
pop
into
push
and
rorl
aad
mov
daa
or
jo
pop
sub
sahf
mov
push
and
pop
inc
push
ret
push
les
and
popa
push
les
cmp
pop
daa
ss
adc
mov
push
and
dec
add
test
inc
pop
stos
or
pop
lahf
add
icebp
popa
mov
lods
imul
ss
mov
ret
aaa
ja
lock
pop
or
push
add
std
pop
push
push
lods
test
or
dec
xlat
test
dec
cltd
cwtl
pslld
ljmp
cmp
gs
in
xchg
xchg
jbe
icebp
hlt
and
lods
jmp
xchg
jmp
fmuls
hlt
or
arpl
in
jo
adcl
cmp
adc
stos
pusha
mov
lea
jmp
cmp
ficoml
daa
dec
icebp
into
nop
and
mov
pop
mov
inc
and
movsl
jae
pop
jmp
ja
nop
addr16
add
push
fcoms
mov
cwtl
outsb
pop
imul
xor
out
mov
or
add
sbb
cmp
inc
pusha
push
fdivrs
mov
and
cmp
cmp
outsb
mov
pop
jecxz
outsl
gs
or
je
je
adc
movsb
pop
lea
xor
test
dec
clc
pop
xorl
lahf
ljmp
out
fstl
xchg
push
adc
mull
stos
fucomi
loop
mov
sub
adcb
cmp
jl
dec
mov
or
xchg
icebp
pop
pop
jbe
orl
sbb
push
mov
and
outsl
and
cmp
and
and
adc
xchg
insb
push
loope
mov
aas
pop
sub
test
cmp
jae
push
sbb
ja
cmp
push
nop
leave
inc
pushf
andl
jge
or
sub
out
packsswb
stos
xor
test
fildll
data16
out
push
jmp
and
jl
in
test
adc
fs
pop
jmp
xor
or
xchg
in
imul
xchg
ret
and
test
fdivs
stos
lock
cmp
jge
cmp
mov
cmp
xor
inc
movsb
ljmp
cmpsl
dec
mov
mov
mov
ljmp
and
push
pop
xlat
dec
cmp
mov
fs
xor
mov
sub
mov
mov
and
jbe
js
lods
add
cmp
test
rorl
and
mov
push
cmp
fistl
sub
mov
jmp
pop
inc
clc
je
imul
xor
fstp
cmpsb
pushl
or
xrelease
push
loop
add
jo
mov
xor
insl
push
loop
and
mov
and
bound
or
aad
int
add
inc
popl
xlat
stc
add
pushf
hlt
js
cmp
loopne
sub
mov
adc
lds
lret
in
pop
push
aad
lods
lods
sbb
sbb
mov
addl
subl
sub
jnp
and
xchg
leave
push
bound
xchg
sbb
shrl
imul
stos
push
lea
jmp
add
xchg
mov
into
hlt
dec
mov
mov
inc
imul
popf
or
mov
movsb
cmpsb
mov
sbb
sbb
pushf
cwtl
dec
mulb
scas
mov
je
loope
mov
frstor
outsl
test
outsl
sbb
xchg
andl
adc
aad
lahf
jnp
sahf
mov
xchg
hlt
mov
into
xchg
push
imul
push
imul
sub
cwtl
mov
pop
inc
push
stos
cwtl
pop
sub
clc
push
rol
add
lods
std
dec
jecxz
push
mov
iret
in
rcll
inc
cmp
fadds
shlb
push
lcall
dec
icebp
outsb
mov
shl
lds
fstps
leave
jg
mov
mov
push
xchg
ljmp
cmpb
lock
cli
loopne
mov
clc
dec
push
clc
addr16
mov
jle
mov
mov
mov
fwait
pop
shl
pusha
jo
inc
imul
and
pop
push
pop
in
orps
outsb
mov
cld
xchg
mov
cmpsb
add
push
and
lcall
or
imul
jecxz
popa
arpl
out
clc
into
xor
cltd
pop
clc
inc
mov
fldcw
jo
cmp
cmp
addr16
push
cmc
inc
push
jge
jae
inc
ret
jmp
flds
mov
jg
aas
push
pop
icebp
push
inc
fsubl
orb
or
or
push
pop
insb
jb
cmp
or
adc
sbb
leave
int
lahf
fmull
sbb
pusha
pop
js
or
cmpsb
iret
and
imul
mov
cmp
push
pop
mov
jmp
inc
xchg
lea
rorb
es
mov
and
int3
dec
inc
scas
pusha
bts
hlt
lods
enter
repnz
loopne
mov
int
fmuls
repnz
clc
test
xor
lea
push
pushf
pushl
push
inc
lea
call
imul
or
fwait
or
mov
sub
mov
loopew
push
mov
insb
cwtl
jbe
mov
mov
data16
stos
mov
insl
out
dec
xor
les
xchg
std
je
mov
fs
sub
add
stos
cld
cmp
out
inc
jmp
ret
push
adc
and
aad
das
pop
aam
scas
jg
pop
cs
jle
lods
xlat
lea
js
es
cmp
jmp
cmp
and
ss
mov
jno
sbbb
xor
pop
hlt
jns
in
xchg
cmc
adc
jo
mov
xorl
mov
ds
daa
out
sub
and
dec
imul
hlt
jmp
push
xchg
adc
jl
jae
das
mov
pusha
out
lcall
jecxz
call
or
xchg
pop
pop
xchg
push
mov
fld
data16
push
stc
xor
sbbb
or
xchg
cmc
lcall
cmpsb
pop
inc
cltd
and
ret
mov
push
ret
out
das
push
addr16
add
movsl
xchg
or
aas
gs
daa
enter
lock
or
js
pcmpgtb
sbb
pop
dec
mov
rcr
jecxz
xchg
dec
sub
clc
iret
mov
incb
in
push
in
mov
xchg
add
insl
mov
adc
stos
stos
jg
in
mov
cmp
in
mov
mov
mov
mov
fstl
ds
fildll
sbb
pop
cmp
jmp
jecxz
xor
dec
or
adc
roll
hlt
sub
leave
dec
mov
add
rol
jecxz
es
mov
ds
shlb
hlt
mov
movsb
int3
test
js
mov
mov
sbb
mov
and
into
stc
push
bts
movsbw
mov
shrd
movsbw
and
push
movsbl
shr
push
shl
push
pushf
inc
mov
movzbw
neg
mov
xadd
push
pusha
mov
pop
mov
mov
btr
sbb
pusha
mov
test
movl
or
call
jle
mov
mov
cmc
loope
pcmpeqw
mov
lods
sbb
shlb
test
fcomip
out
jne
scas
and
dec
or
lcall
mov
mov
aam
xor
jbe
push
aad
jl
adc
das
push
les
insb
cltd
shll
sbb
rcll
pop
out
je
xchg
mov
lret
stos
fcmovnb
mov
mov
xor
repz
mov
xor
dec
and
push
hlt
in
mov
push
sub
testl
stos
jae
imul
stos
ficomps
mov
cmovge
mov
mov
repz
stc
rcll
or
sub
jmp
aad
pop
mov
sub
mov
mov
pop
lcall
mov
inc
jge
ret
enter
pop
add
sti
inc
nop
sbb
and
sti
pop
adc
dec
add
mov
xchg
pop
pop
nop
rcrb
loop
pop
xor
add
pop
movsb
sbb
or
scas
inc
imul
mov
jecxz
fwait
mov
push
pop
mov
xor
xchg
aam
cmp
mov
and
enter
ds
mov
aaa
outsl
psubusb
push
enter
call
cmpsb
stc
imul
inc
adc
add
pop
aad
mov
popf
and
insl
mov
mov
mov
mov
jge
test
xchg
xor
loope
in
push
pop
jno
aad
or
jecxz
lret
jl
sbb
mov
jecxz
mov
cmp
jp
cmp
adc
rolb
imul
addb
fisttpl
dec
dec
in
jmp
lods
fildll
pop
add
sbb
inc
test
xorl
fsubrl
lret
inc
cmp
loop
sbb
sbb
xor
mov
lea
sbb
sub
lcall
stc
mov
sbb
mov
fdivr
and
les
add
dec
cmp
stc
ljmp
jbe
xor
jo
xchg
pop
xchg
inc
loop
cmp
fisttps
fisubrs
out
or
lret
xchg
add
fistps
mov
orb
clc
ljmp
lea
and
int3
pop
adc
ds
mov
out
pop
jp
mov
mov
loopne
mov
iret
sbb
jns
imul
ficoml
addb
adc
sti
push
ja
roll
mov
cmp
lea
je
clc
bt
bt
add
bt
cmp
pushf
jmp
adc
push
hlt
jmp
gs
into
sti
adc
push
outsl
lret
push
adc
pop
add
lret
pop
sbb
ror
sbb
add
push
dec
sub
sbb
push
inc
mov
fisttpl
lods
xor
lcall
or
inc
jnp
lods
jge
or
inc
outsl
mov
add
aas
lods
xchg
xchg
push
das
push
jb
dec
jle
cmp
js
inc
bt
jmp
in
loop
push
adcl
sbb
xor
cltd
fnsave
add
rolb
sahf
insl
mov
add
xor
imul
adc
mov
ja
add
xor
aas
pop
lret
aas
mov
inc
mov
pop
push
xor
fldt
sbb
or
jle
or
cmpsb
imul
mov
and
and
jno
aas
loope
mov
movsb
push
aam
call
xchg
imul
pop
xor
repz
jne
mov
jno
in
repz
pop
dec
jle
cmpsb
insl
pop
outsl
ret
ljmp
jmp
leave
jecxz
adc
out
popf
es
iret
sar
test
fs
ljmp
inc
inc
imul
mov
lahf
shlb
daa
pop
add
adc
mov
cmp
pop
inc
mov
lea
pushf
lea
jae
pushf
push
movl
pusha
jmp
clc
cmp
shr
pushf
push
mov
cmp
movb
lea
je
call
push
xor
cltd
jg
lahf
sti
out
cwtl
dec
movsb
test
rcll
push
push
and
pop
fs
in
mov
insl
mov
cwtl
aas
dec
bound
jg
push
mov
cli
outsb
add
cmp
adc
es
loope
pop
mov
add
sub
push
mov
je
std
jns
aaa
jo
adc
add
dec
repz
scas
popf
test
jb
jnp
lods
enter
mov
in
repnz
je
imul
scas
sub
xor
pop
sbb
push
mov
add
inc
aam
fidivrs
jbe
jae
xor
adc
fcmovnb
push
mov
dec
jmp
nop
inc
pop
xor
mov
jne
aas
gs
inc
ja
imul
jne
cmp
sub
mov
cmpsb
mov
out
pop
shr
es
adc
sub
mull
push
test
clc
test
push
pushl
jmp
mov
sub
stc
lea
js
cmp
popfw
jmp
push
dec
inc
pop
push
nop
inc
lret
into
loop
call
adc
fnsave
push
movsb
inc
push
add
push
les
ljmp
pushf
enter
repz
sbb
sahf
std
scas
cli
ret
jae
arpl
test
mov
shlb
sub
xor
cmc
jno
push
loopne
les
dec
popa
loopne
sbb
pop
and
enter
mov
int
dec
sbb
mov
ds
sub
add
and
gs
mov
xorl
insl
adc
xor
int
outsl
fwait
movsl
mov
les
or
loopne
notl
or
stc
pushf
adc
push
fiaddl
mov
jnp
in
bnd
adc
xchg
jl
popa
jl
mov
pop
cli
or
repnz
cmp
jmp
sub
arpl
add
imul
sub
xor
mov
sahf
lods
loope
mov
sbb
adc
das
jo
mov
jecxz
push
push
mov
es
jle
mov
and
xchg
jp
mov
dec
and
repnz
imul
cmp
inc
sub
inc
outsb
adc
pushf
loop
call
xchg
jmp
imul
mov
sbb
es
xor
ljmp
sub
loopne
dec
fwait
sbb
xchg
jo
outsb
xchg
mov
xor
and
out
sub
pusha
push
pushl
push
lea
jmp
cmp
mov
push
call
pushf
mov
mov
movb
pushl
ret
sbb
pop
jb
push
adc
jmp
lods
fwait
iret
ljmp
cmp
fcompl
mov
sbb
mov
into
es
mov
sub
aas
and
cmp
add
fisttpll
out
mov
lea
mov
pop
ss
pop
xchg
adcb
mov
inc
jns
sub
insl
mov
add
hlt
in
jle
dec
test
imul
cmc
cmp
cmp
pusha
pusha
call
decb
es
inc
faddl
daa
dec
pop
sbb
dec
inc
push
lcall
aaa
xchg
push
rcrl
std
je
int3
clc
lahf
insl
adcl
cwtl
add
push
pop
outsl
addl
push
pop
call
jmp
imul
add
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
je
adc
sahf
and
add
inc
aam
imul
xchg
jns
mov
adc
enter
mov
sbbb
daa
add
cltd
out
add
mov
lods
lret
in
xchg
out
pop
or
lock
mov
loopne,pn
cmp
xchg
addr16
bound
adc
std
pop
xchg
fisubl
shrl
jb
adc
mov
and
idiv
mov
fwait
sbb
imul
fs
cs
sbb
ret
jns
jb
xor
test
addr16
scas
outsb
ss
mov
add
mov
lock
sbb
mov
cmpsb
add
aam
push
mov
lods
cs
leave
addr16
jo
adcl
and
or
sub
movl
pop
dec
inc
stos
lea
shll
dec
addr16
lds
je
xor
pop
in
iret
push
sahf
dec
jecxz
ret
add
insl
mov
sbb
or
sub
push
or
sub
movsl
mov
popa
jno
into
jp
leave
imul
cmc
cmp
pushl
lea
ja
clc
pushf
imul
stc
cmc
movw
stc
add
mov
push
pushf
lea
jmp
adc
shlb
jle
mov
cltd
ds
jg
loope
les
in
sarb
mov
call
int
scas
inc
fldcw
adc
andl
mov
mov
inc
pop
jbe
mov
out
mov
hlt
pop
shlb
pop
adc
std
push
inc
xchg
in
jecxz
lds
xchg
sub
cmp
push
xchg
lock
aas
push
mov
adc
icebp
xor
dec
addr16
into
pusha
or
jne
xlat
loope
xlat
clc
out
jae
cmp
push
rclb
dec
pop
insl
scas
cmp
sbb
and
mov
imul
out
aaa
leave
shlb
mov
mov
rcl
xlat
add
shr
adc
jle
and
in
mov
repz
lods
sbb
mov
in
jmp
xor
sub
dec
int3
leave
jb
dec
imul
fidivs
je
and
adc
push
xchg
jecxz
icebp
jl
push
int
sub
int
push
jge
lahf
hlt
push
jbe
movsl
icebp
pop
or
and
loopne
sbb
imul
dec
incl
pop
divb
cmpsb
pusha
or
mov
rolb
in
push
or
jno
push
lds
pop
stos
cmp
or
imul
lahf
lock
or
shll
stos
jbe
push
loope
fsubs
ficompl
pop
into
jns
cmp
not
xor
outsl
jle
mov
xchg
mov
mov
jle
xchg
cmp
jne
xchg
pop
arpl
ja
out
or
mov
adc
adc
stos
pop
xchg
mov
cmp
imul
out
or
pushf
repnz
lds
xor
jne
pop
inc
loop
cmpsl
imul
lret
movl
mov
mov
test
adc
add
add
push
add
popa
lea
sub
mov
ret
sub
inc
das
mov
pushf
add
push
push
sbb
out
ja
hlt
dec
mov
icebp
mov
mov
fidivrs
out
jno
pusha
cmp
lret
stos
mov
mov
mov
mov
xchg
jnp
mov
cs
pop
mov
push
or
pushf
jno
pusha
push
pop
and
cwtl
xchg
inc
inc
mov
ljmp
xchg
xchg
cmpsb
and
mov
cmp
mov
dec
adc
sub
loopne
ficoms
and
jmp
mov
sbb
imul
pushf
pushf
pushl
call
mov
sub
or
ror
mov
xor
into
mov
mov
jb
insb
jne
push
pusha
inc
mov
les
adc
mov
ret
clc
jbe
call
lahf
jg
push
mov
push
xchg
arpl
movsl
outsb
lods
in
dec
adc
pusha
pop
or
dec
or
push
adc
int
imul
xlat
mov
cwtl
inc
cmc
fwait
je
popf
es
repz
arpl
xchg
shrb
mov
sbb
popf
repnz
xchg
add
cmpsb
cmp
idivl
lahf
imul
mov
fs
sbb
ret
test
or
xchg
xchg
mov
iret
or
push
sbb
mov
cmp
stc
adc
or
int
pushf
mov
nop
and
push
push
jmp
pop
pop
or
and
repnz
mov
mov
and
push
fnstenv
lahf
gs
repz
xchg
dec
fwait
std
imull
sub
outsb
cmp
out
test
cltd
lea
sub
push
sbb
adc
imul
pop
stc
les
mov
mov
xor
and
cmp
add
mov
sbb
mov
hlt
fisttpl
test
mov
xchg
push
scas
cltd
or
mov
cmpsb
popf
lahf
dec
lret
outsb
shlb
out
jle
xorl
jno
adc
cwtl
clc
push
lods
int
sub
pop
stos
stos
rcl
dec
cmpsl
mov
xchg
mov
mov
fnstcw
inc
sub
dec
rclb
loope
stos
add
or
and
cmp
stc
cmp
pusha
pushf
call
lea
jno
pusha
ror
mov
movl
inc
test
cmp
cmp
not
stc
mov
pusha
cmp
test
add
pushf
pushf
pushf
test
call
ljmp
and
push
mov
jmp
sbb
shl
push
push
pop
dec
xlat
or
je
jnp
xbegin
cmp
xchg
xor
xchg
push
fsts
call
adc
adc
imul
shll
push
add
push
in
fidivs
xlat
and
imul
mov
xchg
aaa
shrl
ficoms
sti
repnz
add
or
ret
addr16
aaa
sbb
cmp
push
and
pushl
rep
lea
lea
mov
pushf
movb
lea
jmp
xchg
shrb
xchg
sbb
push
scas
mov
lds
icebp
dec
xchg
push
mov
lret
lret
add
or
push
nop
mov
cmp
mov
icebp
fwait
insl
push
ja
dec
insl
in
scas
lret
xchg
mov
cwtl
xchg
pop
enter
arpl
add
adc
and
out
pop
dec
pop
cld
fstps
jp
ret
pop
test
jmp
int
jo
sbb
in
cmc
jp
mov
push
mov
and
mov
adc
inc
mov
mov
loop
jge
or
dec
imul
call
sub
test
pushl
cmc
call
pusha
movb
cwtl
pusha
mov
bswap
not
lea
pushf
movl
call
popf
sub
mov
mov
jno
jmp
and
leave
enter
adc
ret
adc
std
repnz
bound
jge
pop
jmp
cmpsl
add
jns
adc
cmpsb
mov
pop
add
or
or
jge
scas
mov
mov
insl
aad
sub
xchg
jne
mov
lcall
mull
neg
fmul
add
mov
punpcklbw
scas
and
sub
roll
pop
gs
sub
push
mov
popf
ret
xor
in
mov
sti
add
jne
lret
mov
loopne
pushf
mov
jno
sub
dec
sub
mov
inc
or
push
cmp
cmp
lret
out
outsb
mov
mov
xchg
sbb
mov
pop
fldenv
and
push
xchg
add
in
scas
clc
or
ret
mov
mov
and
je
imul
popa
arpl
outsb
je
cmpsl
jle
sub
xchg
or
dec
push
iret
dec
push
mov
pop
or
mov
sbb
fwait
frstor
fcomps
fdivp
bts
cmpsl
xor
mov
shrb
pop
xchg
mov
sbb
repnz
add
ss
mov
fdivrs
subps
mov
ret
lea
es
call
pushl
lea
jae
xor
mov
shl
or
shr
bsf
mov
rcl
mov
pusha
test
pusha
sub
movb
cmp
cmp
stc
repnz
jmp
inc
std
inc
jno
pop
xlat
cmp
lea
add
call
sub
nop
jg
out
mov
mov
dec
push
sar
repnz
mov
insb
jbe
adc
mov
and
out
xor
pop
int
sti
cmp
mov
popf
lea
jle
ret
rcrl
orl
sub
in
mov
outsl
pop
std
std
jbe
lahf
fsubrs
fwait
push
adc
xor
jne
xor
fstps
mov
fwait
dec
repz
pushf
in
sbb
cmp
pop
movsl
cmpsb
adc
xchg
xchg
sub
and
inc
cmpsl
jp
test
outsb
jne
or
pop
jp
mov
inc
pop
mov
pusha
lods
sbb
dec
push
daa
adc
mov
dec
pop
push
dec
jno
cmpb
js
adc
mov
push
and
xchg
xchg
int
clc
xchg
imul
or
stos
scas
adc
xchg
jb
sub
outsl
les
fisubl
imul
push
stc
adc
data16
repnz
push
fwait
inc
push
hlt
mov
mov
jmp
dec
test
fs
cmpsb
shll
mov
rcrl
cs
fs
lcall
in
cmp
jp
pop
mov
pop
cmpsl
and
sub
fistpl
and
mov
sbb
ja
je
or
add
stc
cmp
pusha
movb
call
popa
and
je
sbb
shl
inc
aas
and
and
push
adc
in
sub
jecxz
push
lcall
dec
pusha
xlat
mov
mov
inc
pop
ljmp
js
add
inc
xchg
xor
lcall
push
repnz
dec
or
mov
lea
test
sbb
pop
in
sbb
stos
jno
pop
xor
push
shr
leave
sub
gs
cmp
fs
jne
pusha
pusha
pushf
mov
movw
jmp
aad
mov
sbb
xor
pushf
cmpsb
iret
rcr
add
mov
push
leave
addb
inc
orl
pop
and
or
push
sti
sbb
popf
sbb
push
or
push
xbegin
jnp
cmp
out
ds
clc
fmull
mov
jl
cmp
cmpsb
out
ret
insb
xchg
fs
popf
arpl
les
inc
cli
aad
movsl
cs
fimuls
ret
add
ret
pop
push
push
jae
nop
lock
sbb
cmp
dec
iret
push
or
js
lea
test
jno
xchg
cs
add
xor
cmp
add
sbb
jle
dec
push
notl
or
push
out
ds
pop
js
andl
es
mov
imul
xor
hlt
or
das
jo
fdivp
add
pusha
leave
js
xor
push
jmp
stos
bound
stc
jbe
push
mov
pop
ss
orl
mov
cmp
lahf
push
cmp
xchg
loop
jns
lret
sbb
and
mov
pop
nop
insl
cmp
jl
push
sbb
out
mov
movsl
xchg
adc
mov
cmpsl
pop
imul
popa
push
mov
jg
iret
jne
and
mov
jns
cs
subl
aad
fidivs
mov
jmp
mov
inc
repnz
jb
mov
js
mov
cli
lock
dec
mov
sbb
outsl
call
cmp
mov
fstl
adc
into
arpl
lock
pop
cwtl
aaa
out
mov
out
shlb
lret
pop
test
mov
int
adc
inc
stos
nop
jne
stc
xor
inc
sbb
xor
bound
sbb
sahf
mov
rcr
add
pusha
mov
cmp
sub
dec
push
jp
out
imul
fnsave
jge
sub
imul
data16
cmp
xor
in
das
fmuls
mov
mov
daa
xchg
xlat
inc
lods
mov
test
xchg
jno
fistl
out
xor
outsl
sub
insb
mov
mov
sbb
cmpsb
push
shll
mov
js
cmp
sbb
loop
push
add
stos
mov
jle
pop
xor
cld
lcall
imul
lea
je
jmp
sub
call
mov
pushl
pushl
ret
es
andb
es
mov
call
add
std
sbb
lahf
mov
mov
mov
rol
push
iret
lahf
pop
int3
mov
pop
cmp
cwtl
or
push
xor
add
dec
test
push
repz
xchg
or
movsb
mov
test
ss
int
out
lods
fidivl
jne
dec
or
sub
out
pop
push
popa
ljmp
and
pop
dec
daa
je
daa
push
push
hlt
lock
jnp
mov
mov
lock
mov
aas
xchg
push
mov
fadds
cmp
stos
jns
add
sub
or
lock
jle
xor
repnz
jae
test
mov
dec
xlat
ret
dec
mov
mov
xchg
iret
or
dec
sbb
inc
or
and
imul
mov
inc
inc
test
inc
mov
shlb
mov
add
clc
fisubs
fwait
xchg
je
cmp
mov
into
sub
dec
mov
mov
sahf
ljmp
jmp
xor
inc
or
mov
sub
adc
mov
mov
and
and
std
mov
sub
rolb
mov
add
or
sbb
scas
jge
dec
and
rcrb
sbb
cmp
inc
insl
xor
xchg
rcrb
loope
fnstsw
enter
xchg
pushf
jmp
xchg
or
cltd
ljmp
mov
or
mov
cwtl
in
dec
mov
repz
fadds
addr16
lahf
cmp
frstpm(287
mov
cmp
repz
push
jns
and
xchg
mov
rclb
cmp
pop
dec
sahf
dec
divb
add
jbe
clc
push
pop
jg
pusha
icebp
addr16
and
jns
imul
adc
jl
dec
mov
pop
sub
adc
setp
fs
je
call
lds
aad
or
stos
and
popa
or
xor
xchg
aas
mov
sti
mov
mov
pop
cmp
jae
jo
out
out
dec
or
test
jmp
int3
pop
push
pop
push
add
lret
mov
mov
push
inc
scas
and
jnp
add
or
adc
and
stos
bound
inc
lret
ss
mov
xchg
in
adc
push
dec
xor
cs
insb
add
xor
sbb
push
xchg
loope
rclb
cwtl
jno
insb
cmc
pushf
or
sub
icebp
ds
pop
xor
push
int
sarb
mov
jnp
fs
dec
and
pop
sub
and
fucomp
push
push
lods
jnp
pop
js
rcll
outsl
sub
xchg
fildl
pop
dec
pop
cs
push
int3
loopne
add
je
jle
lods
ret
pushf
and
push
cmp
jbe
div
shlb
dec
xor
cmp
cmp
movl
cmpsl
push
divl
mov
mov
shrl
push
xor
int
fldt
fsubrl
imul
or
add
dec
pop
cmp
into
sbb
inc
sub
clc
mov
sbb
rclb
jns
imul
mov
lret
addr16
pop
push
ret
daa
std
mov
lods
pop
ret
shr
subl
mov
cmp
test
pushf
pushf
jmp
or
decl
push
cmpsb
xchg
mov
push
les
mov
roll
push
add
sbb
adc
add
push
jmp
add
rorb
stc
or
iret
icebp
mov
fwait
insb
je
lret
scas
pop
arpl
mov
lret
test
imul
icebp
adc
rcrb
pop
push
sar
inc
jns
leave
xchg
mov
mov
mov
mov
iret
mov
xchg
std
repz
iret
mov
inc
addb
cmp
iret
jg
sub
lock
push
mov
ret
rol
aad
jns
mov
aam
out
xor
pop
inc
adc
popa
gs
adc
add
out
mov
rol
xchg
mov
nop
negb
or
leave
imul
sub
mov
insl
mov
jle
mov
push
ret
js
scas
pop
repnz
stc
pop
and
call
icebp
shlb
sub
rclb
out
imul
mov
push
pusha
pushf
lea
call
jmp
xchg
loop
out
test
xor
pop
std
jo
test
add
call
sahf
outsb
inc
push
out
add
aas
adcl
jmp
xchg
pop
and
out
sub
jmp
pop
or
inc
std
call
dec
inc
aad
xchg
lcall
push
insb
lods
cmp
inc
shl
mov
sub
aam
insl
mov
xor
imul
pusha
pushf
pusha
movb
lea
jne
ror
or
shr
mov
bt
cmp
cmc
pusha
add
cmp
jmp
mov
adc
cmp
ffree
jmp
sbb
test
scas
add
inc
call
adc
cmp
xor
cvttps2pi
pop
xor
push
jnp
popa
mov
shl
mov
xlat
inc
and
dec
in
test
loopne
pop
out
std
dec
mov
dec
gs
xchg
jl
orl
gs
outsb
fnstcw
mov
mov
fimuls
inc
xchg
sub
xor
in
pop
mov
imul
shlb
test
push
dec
aam
imul
gs
fsubs
stos
sbb
mov
mov
dec
hlt
fdivrs
cmpsb
or
lret
addb
or
pop
pop
sbb
mov
add
push
ljmp
dec
add
movhlps
mov
ret
mov
pop
sbb
pop
add
shll
xor
cmpsb
icebp
dec
clc
mov
inc
dec
jb
scas
mov
xchg
in
inc
mov
repz
lods
testb
call
das
int
subl
xchg
flds
movsl
in
mov
add
pop
aaa
xchg
jl
jnp
pushf
jnp
neg
aad
xor
shlb
xchg
jnp
sarb
adc
insb
push
ret
inc
xor
xchg
xor
mov
xor
test
xchg
xchg
inc
cwtl
jle
in
add
pop
cwtl
pop
aad
push
inc
cld
inc
ja
sub
pop
mov
in
cli
mov
add
test
adc
sbb
cmp
roll
or
lcall
call
stos
push
push
inc
xchg
xor
test
popf
inc
lea
subb
xchg
jae
cmp
jg
jp
mov
mov
mov
in
js
pop
ja
mov
push
insb
dec
test
mov
pop
sub
imul
loopne
push
mov
andl
mov
adc
push
icebp
clc
cs
pop
inc
push
pop
dec
paddw
pop
out
stc
dec
imul
int
dec
mov
adc
mov
clc
in
push
scas
mov
mov
or
mov
test
rdpmc
shlb
cmp
xor
jmp
fadds
mov
cmp
movsl
jmp
cwtl
ret
cmpsb
jbe
gs
inc
popa
clc
and
dec
pop
mov
pop
xchg
cwtl
push
jg
and
mov
sbb
ja
out
jmp
cmpsb
inc
pop
mov
add
fwait
pop
mov
pop
test
cmp
mov
sbb
dec
cmc
sarb
mov
movsl
mov
mov
sub
mov
clc
iret
outsb
aad
xchg
mov
adc
xchg
sub
insb
addr16
mov
sbb
fmul
lea
xor
divl
jmp
push
scas
sahf
test
adc
popf
int
dec
jg
in
inc
daa
push
sub
cmp
imul
xchg
pop
out
jl
mov
or
mov
fcoms
dec
sub
rcll
outsl
cwtl
sub
jp
and
push
xlat
into
test
cwtl
inc
push
push
inc
adc
dec
test
fnstsw
mov
mov
sub
lods
cmp
adc
push
pusha
jo
fnstenv
push
or
inc
cld
shrl
push
or
bswap
lds
imul
gs
jp
xor
xchg
dec
lcall
mov
mov
xchg
repz
and
xlat
cltd
jg
jmp
ljmp
dec
inc
flds
xor
cmp
mov
out
rcll
stc
xor
push
xchg
mov
inc
xchg
into
call
fwait
or
mov
stc
push
notb
xor
inc
sub
push
sahf
xchg
lea
pushf
fcmove
mov
xchg
cmpsl
dec
add
mov
out
mov
scas
dec
bound
cmpsb
push
pop
and
mov
fnstsw
jle
xor
jns
insl
sbb
pop
in
sub
jmp
jo
outsb
clc
xor
lods
or
add
stos
mov
ds
repz
add
jg
fisttps
inc
test
imul
bound
mov
movsb
and
popf
stos
aam
sbb
or
fldl
les
and
and
push
jp
arpl
jmp
sbb
enter
adc
scas
fmuls
dec
lahf
sahf
sbb
popa
inc
sbb
pop
cmp
mov
in
push
mov
push
jmp
dec
sbb
loopne
cmp
xchg
xlat
imul
mov
iret
jge
sbb
sub
pushf
mov
cmpsl
fistpll
xchg
lods
jne
push
stos
pop
mov
pop
sub
pop
dec
sbb
js
inc
jnp
and
adc
pop
movsl
rcr
or
std
test
pushf
mov
mov
pop
lea
pop
adcl
mov
jns
pop
popf
adc
mov
dec
mov
or
fdivl
cmc
fildl
inc
dec
pop
test
repnz
mov
faddl
cmpb
cld
mov
pop
add
mov
xchg
inc
sahf
ljmp
jno
mov
sbb
jns
ds
pushf
adc
push
stc
mov
push
mov
and
scas
pop
adc
pop
pop
xchg
lahf
cmc
sbb
js
fs
hlt
inc
lret
lods
es
imul
and
ficoms
push
or
mov
xchg
and
adc
cmp
ss
pop
sub
filds
orb
sti
adc
sbb
int3
mov
lret
aaa
insb
stos
stos
dec
leave
inc
std
in
addr16
test
and
push
std
bound
dec
out
xor
pusha
js
call
add
and
xor
cmp
push
dec
dec
inc
xor
cs
insb
add
sar
lcall
mov
pushf
pushf
call
mov
int
lret
in
ljmp
jecxz
and
test
jo
or
sbb
adc
dec
icebp
inc
ret
pop
jge
xor
hlt
daa
mov
mov
lret
cmp
jne
clc
sbb
rcll
mov
outsb
pop
ja
cmpsb
push
sbb
push
add
clc
sub
fwait
push
adcl
xchg
mov
or
add
inc
pop
lods
and
in
lret
les
dec
sbb
jns
jge
or
cmp
mov
aas
add
ss
sbb
adc
mov
push
incl
adc
add
or
pushl
ret
push
and
mov
pop
and
adc
out
cmpsb
and
cmp
push
hlt
das
push
mov
push
adc
xor
rcr
dec
in
xor
fcompl
ret
mov
and
jecxz
push
and
cmp
sbb
out
or
imul
xlat
and
push
sub
add
mov
decl
imul
xor
adc
dec
fcomps
xor
mov
mov
adc
fiadds
cmp
loop
lret
inc
mov
add
dec
mov
dec
adc
out
add
rclb
lea
add
jno
repz
sub
pop
push
jmp
stos
adc
push
inc
clc
pop
inc
lds
mov
leave
pushl
pushf
push
lea
call
jmp
cmc
rcl
mov
pusha
pusha
stc
repnz
call
ret
test
sarb
stos
stc
loop
dec
stc
push
xlat
loopne
test
nop
add
cmp
testb
add
js
pop
add
notb
cmp
mov
jnp
jne
ss
stc
sarl
mov
xchg
and
and
stos
xor
nop
inc
frstor
push
pop
push
xchg
mov
popa
out
cmp
mov
aas
mov
jno
sbb
cmp
push
push
sbb
jmp
ror
fsubl
push
loopne
data16
xlat
sub
imul
and
push
sbb
scas
mov
mov
fst
jmp
pushf
cmp
jl
sbb
rcrl
xchg
mov
and
in
push
mov
jb
push
dec
dec
dec
dec
cs
insb
add
xor
pushl
ret
ds
mov
lds
xchg
add
lcall
push
or
cwtl
mov
sbb
adc
add
mov
xor
jmp
jmp
xchg
nop
jmp
in
lods
into
sbb
or
insb
or
in
mov
xchg
mov
daa
mov
pop
adc
hlt
mov
into
jp
loop
push
sbb
push
aas
sbb
mov
xchg
pop
xor
adc
jns
notb
inc
in
xchg
ret
das
cmp
mov
add
aad
fucomi
adc
nop
repz
sarl
popl
imul
dec
cli
repz
sbb
sbb
xchg
pop
aas
out
jge
cli
and
pushf
repnz
sbb
icebp
out
outsl
dec
xchg
lock
or
and
retw
ljmp
in
pop
cmp
jecxz
fisttpll
adc
jo
ucomiss
cmp
dec
orl
fisttpl
dec
mov
pushf
into
pop
adc
mov
and
sub
sub
inc
lea
add
mov
pop
sbb
push
xchg
xor
popf
hlt
data16
pop
das
sub
sbb
push
dec
std
mov
sahf
push
push
or
dec
xlat
lods
ret
mov
lea
into
dec
adc
loopne
jecxz
stos
cmp
dec
out
jmp
cli
mov
dec
mov
or
cmp
xchg
xchg
jae
pop
lock
out
sti
mov
dec
dec
cwtl
aam
pop
xor
xor
shrl
or
shl
imul
jmp
mov
sub
je
push
bsr
or
add
bsf
shl
add
add
bsr
mov
mov
test
shr
push
clc
clc
stc
cmp
pushf
lea
je
pusha
push
cmp
jmp
imul
jb
es
xlat
jno
push
sbb
mulb
out
adc
out
adc
mov
sub
jno
ffreep
repnz
lahf
sbb
pop
cwtl
or
xor
add
push
pop
das
or
jg
sbb
lea
ss
ret
imul
jo
jmp
jg
lock
stos
mov
xchg
adc
mov
fildll
adc
idivb
aas
mov
or
push
xor
fs
adc
push
cmp
insl
sub
mov
push
mov
cld
ss
jl
xor
inc
xor
lret
sub
jb
cmpsb
xchg
cs
sti
icebp
mov
or
lds
mov
enter
movsl
cmp
push
sub
mov
rol
cmp
xor
je
inc
fnstenv
movsb
push
mov
into
add
or
pop
and
ja
movsb
rcr
test
pop
dec
sbb
dec
imul
push
in
fbstp
xor
or
repnz
mov
outsb
xchg
iret
dec
xchg
xor
iret
dec
insb
push
les
mov
fwait
sbbb
scas
rorb
pop
repnz
inc
and
or
pushf
repnz
into
pop
or
ja
icebp
jbe
push
mov
pop
jae
cmp
mov
movsl
xchg
xchg
sub
fstps
in
stc
xchg
stos
and
ljmp
push
mov
and
xor
aad
xchg
pop
push
ss
nop
xor
push
test
xchg
lods
or
sbb
out
nop
xchg
loop
popf
out
add
dec
lcall
call
fdivr
cltd
in
sub
add
pop
dec
out
inc
icebp
sbb
std
int
push
and
dec
pop
cwtl
inc
dec
and
push
jl
mov
stos
cmpsb
inc
ja
mov
cmpsb
mov
movl
pusha
pushl
pushf
lea
jmp
adc
in
jecxz
xlat
ja
rorb
push
adc
mov
aas
cmp
dec
push
int3
lds
sub
cs
adc
mov
sbb
xchg
xor
mov
pop
pop
out
sub
jns
xchg
or
add
inc
add
das
jp
imul
mov
push
dec
outsl
pop
push
loope
das
imul
fidivs
jp
stos
sti
lods
inc
push
and
add
icebp
lret
insl
adc
int
push
mov
enter
push
xor
xchg
andl
insl
sti
dec
inc
fucomip
js
popf
rcl
xor
test
fwait
add
or
jle
into
loopne
shll
mov
dec
shrl
push
dec
repz
fwait
cmpb
hlt
insl
cltd
xor
arpl
fistpl
std
shll
sbb
fadds
cmpsl
out
ds
mov
mov
lods
dec
stos
adc
cmpsl
pop
push
or
fistpll
cltd
lahf
jbe
lahf
sbb
adc
test
sbb
in
hlt
popf
in
mov
rorb
mov
push
sbbl
pop
mov
orl
repnz
out
lock
aas
into
pop
mov
push
sbb
imul
sti
jp
ss
inc
pop
out
fisubrl
mov
pop
xor
push
add
mov
inc
movsl
ret
clc
push
imul
jge
out
stos
lea
cld
mov
sbb
lret
push
push
jo
cmpsl
mulb
mov
cmp
push
or
ret
je
lock
cmp
fcmovu
cmp
cmpsl
ret
inc
pushf
sbb
mov
dec
add
sbb
push
pop
leave
mov
outsb
sbb
call
scas
adc
pop
push
xor
test
mov
mov
jae
or
inc
aam
ret
add
sbb
lock
xchg
mov
std
out
out
mov
add
aas
push
pushw
out
pop
cmp
cmp
cmpsb
loopne
cld
mov
xchg
repnz
shlb
xorl
push
stos
adc
cwtl
pop
daa
inc
lock
jb
repnz
iret
icebp
pop
xor
sbb
dec
add
xchg
pusha
sbb
dec
pop
mov
adc
in
pop
adc
icebp
testb
in
imul
int3
fcomps
cmpsb
dec
sbb
pop
push
mov
out
rorw
ja
stos
push
insl
repz
sahf
lcall
xlat
cwtl
daa
fcoms
out
cmp
scas
movsl
adc
fwait
aaa
das
fs
push
push
inc
or
cmp
daa
push
sub
xor
popa
aaa
sub
cmpsl
sbb
clc
lret
inc
mov
and
loopne
or
fwait
inc
cmpsl
cmp
jge
movsb
rolb
jg
mov
cmpsb
cld
clc
lret
add
repnz
aam
add
in
iret
pop
xchg
jbe
xor
jno
xor
or
shrl
das
dec
cld
xlat
sub
pop
enter
sbb
dec
jns
pop
xchg
mov
xor
sub
loop
repnz
cmpsl
cld
movaps
daa
lods
bound
mov
sub
lret
out
in
out
int3
cmc
bound
aaa
test
aas
push
jb
imul
insb
add
fistl
ljmp
jmp
lcall
push
movb
push
mov
stos
jl
bound
sbb
hlt
xchg
iret
imul
cli
xor
inc
inc
and
mov
mov
loop
aam
in
sbb
std
shlb
or
mov
das
and
shlb
sbb
sbb
out
out
xor
inc
jnp
scas
add
mov
in
inc
imul
adc
mov
outsl
in
hlt
incb
dec
sub
js
jmp
adc
cmc
subb
dec
fisttps
sub
jge
and
push
fbstp
pop
int3
inc
sbb
inc
roll
shl
jge
icebp
jo
cmp
push
sub
push
xor
js
repz
out
aas
mov
pusha
gs
test
bound
mov
or
lock
pop
int3
push
sbb
and
lods
xchg
add
ja
xchg
push
jl
into
sub
sub
pop
inc
xchg
rolb
push
imul
lea
jae
shr
mov
mov
shl
bswap
mov
stc
btc
test
mov
bt
test
sub
push
pusha
movb
repnz
movw
lea
jo
pushf
push
lea
jne
bts
shl
mov
push
mov
sub
not
xor
shld
rcl
lea
pushf
call
dec
jg
aas
aad
push
fisttps
fistpll
cmp
ror
divb
or
mov
int
jnp
fwait
or
xchg
lret
mov
loop
and
cli
push
clc
inc
pop
sbb
daa
test
fldl
lahf
fldcw
adc
push
and
inc
add
out
pop
rorl
adc
adc
adc
scas
and
shrb
xchg
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
xchg
sub
ljmp
mov
ret
mov
lcall
aam
incl
pusha
enter
xor
xor
fs
insb
add
cmp
mov
mov
inc
sbbl
or
mov
xchg
and
jbe
cmp
mov
addl
jbe
sub
outsb
inc
push
adc
js
in
xor
adc
cmp
push
fistps
adc
fdivrs
sti
mov
and
sbb
mov
cmc
out
outsb
inc
xchg
push
es
movsl
and
test
and
pop
mov
mov
mov
push
imul
lods
push
loop
loopne
bnd
rolb
lret
dec
cmp
das
cmp
jne
jnp
mov
loopne
scas
pop
popa
sahf
jns
test
pop
fisttpll
cbtw
scas
push
fistl
adc
pop
mov
sahf
int3
stc
insl
insb
xor
sbb
push
mov
cld
stos
cmpsb
add
dec
movsb
sbb
ret
add
add
mov
pop
rcrb
ja
push
sbb
xor
imul
test
and
shrl
lods
inc
lret
cmp
sti
adc
addb
loopne
sub
dec
pop
push
mov
sbb
leave
movsb
loop
xor
cmc
testb
cs
xor
insb
ljmp
cld
andb
sarb
lods
in
stc
push
mov
inc
inc
or
mulb
sarl
cmp
arpl
adc
testb
or
insl
cmp
and
add
or
lods
push
aas
jae
pop
imul
or
int
scas
movsb
xor
sub
std
fisubrs
ret
sarl
dec
xor
mov
adc
int
and
lret
fmull
test
xchg
call
mov
xchg
xchg
filds
cmpsl
jmp
push
lods
sub
fs
out
cs
in
inc
mov
adc
add
scas
in
ds
xchg
mov
mov
out
pushf
orb
loope
out
mov
fbstp
sub
in
lret
add
xchg
mov
push
add
cmp
adc
fisubs
pop
adc
divb
imul
pushf
or
flds
dec
xchg
jb
xchg
shrb
pushf
pop
enter
jae
and
das
roll
sarb
mov
mov
insb
sub
mov
rcrl
cmpsb
jle
push
pop
dec
mov
push
and
jo
adcb
outsb
push
xchg
enter
inc
mov
js
ljmp
scas
xlat
sbb
push
lahf
testl
jbe
adc
mov
push
inc
and
add
cmp
arpl
nopl
ret
mov
popf
cld
pop
inc
xor
jl
pop
push
or
lea
pop
imull
or
sub
mov
mov
sub
jne
push
cmp
je
mov
das
mov
lahf
mov
xchg
sub
lret
mov
inc
adc
repz
pop
cmpsb
and
xchg
xor
in
and
lds
in
push
sti
mov
pmulhw
jns
dec
orl
xor
lods
or
scas
xchg
pushf
adc
dec
fchs
aas
fcoms
dec
push
jge
jp
push
fidivl
dec
loop
ja
adc
add
movsb
xor
sub
in
enter
mov
lcall
jmp
addr16
mov
mov
mov
pop
test
cli
push
mov
lods
enter
test
aad
mov
or
scas
gs
shlb
ss
insb
ljmp
leave
inc
jb
insb
xchg
push
mov
and
inc
mov
lock
cmc
jmp
stc
mov
pop
or
fcompl
movsl
sbb
daa
int3
stc
inc
aas
xor
out
stos
sub
int3
shrl
mov
inc
mov
mov
mov
mov
push
push
and
adc
daa
repz
pop
jmp
daa
add
pop
cltd
enter
inc
adc
imul
jecxz
sbb
lcall
add
je
andl
mov
pop
lods
xor
mov
arpl
jbe
lds
jp
negb
insl
mov
push
imul
add
cmp
movsb
loopne
pop
stc
fisubs
mov
mov
pop
js
mov
fsts
lahf
cltd
inc
push
pop
imul
call
push
inc
loop
push
pop
inc
and
scas
inc
out
stos
movl
xchg
xor
jmp
inc
inc
xchg
mov
scas
stos
mov
jnp
mov
in
rorb
mov
sub
and
repnz
mov
les
sbbb
popf
lret
add
adc
xchg
aam
fcomps
imul
mov
jmp
jmp
imul
pushf
movb
stc
add
pushf
mov
movw
pushf
lea
jmp
push
shrl
fs
adc
push
cmp
stc
iret
or
cmp
pop
cmp
repz
outsl
daa
dec
pop
arpl
push
pop
cmpb
push
xor
sbb
jl
outsl
js
pusha
xlat
jbe
dec
sub
push
lock
mov
mov
dec
in
cmp
mov
lods
lods
fcoms
dec
into
in
in
or
cmp
pop
cs
imul
inc
arpl
fiadds
sbb
jl
ret
in
mov
dec
aad
fwait
stos
lock
and
sub
xchg
push
incb
mov
xchg
rcpps
mov
icebp
xchg
jns
mov
test
cli
aam
sbb
pop
into
inc
mov
sub
lds
clc
clc
push
cmp
cmp
xorb
inc
outsl
dec
jae
jo
xchg
lcall
aad
sbb
lods
sbb
xchg
sub
imul
lock
loop
add
push
sti
imulb
xor
sub
js
dec
lahf
jg
cmove
outsb
adc
pop
in
xchg
sar
loopne
in
fs
pop
sbb
inc
iret
jg
sub
outsl
sub
jl
mov
jmp
test
add
lea
mov
test
insb
cli
add
and
inc
xchg
inc
mov
inc
push
addl
xor
aaa
inc
push
icebp
out
adc
cmp
popa
add
jno
cld
dec
mulb
fmull
lahf
adc
xchg
int
notb
mov
dec
mov
or
int
cmp
adc
fidivl
mov
das
inc
jmp
pop
xchg
outsl
aad
push
sbb
push
nop
add
inc
loop
jp
rcll
pop
mov
les
mul
pop
leave
scas
cli
imul
enter
push
test
cwtl
cld
xor
lea
adc
int
add
sbb
or
xor
lea
notb
jl
sbb
jl
pop
jg
leave
mov
mov
add
outsl
pop
fwait
popf
mov
testb
mov
adc
out
lcall
sarb
sub
lods
leave
in
int
lret
clc
cmp
cmp
sbb
jl
loopne
in
xchg
jmp
xchg
loop
xor
ljmp
fsubs
adc
sbb
cmpsl
std
sub
inc
or
inc
xchg
imull
inc
imul
outsb
pop
mov
xchg
cli
repz
in
rolb
aad
daa
xchg
push
cmp
xchg
nop
push
lcall
dec
out
iret
mov
inc
in
sbb
loopne
out
outsb
ds
and
mov
xchg
aad
mov
dec
and
aas
jb
lock
sub
cltd
fcmovb
mov
fcomps
aad
arpl
mov
lret
xor
and
mov
mov
rcl
xor
push
aaa
or
popf
lds
or
out
inc
cli
mov
cs
dec
xor
pushf
or
ds
mov
or
aam
jmp
inc
call
mov
icebp
inc
dec
in
scas
sbbb
push
add
test
insl
lcall
gs
sub
sub
mov
jnp
mov
mov
jp
jo
test
jp
xchg
and
js
push
cs
xor
shl
jl
idivl
cmp
jecxz
jg
lods
push
lods
push
mov
lds
adc
or
rclb
cmp
and
or
pusha
pop
aad
sbb
cld
flds
or
je
mov
mov
in
orb
and
addr16
in
daa
xchg
bound
jecxz
outsl
xchg
add
scas
or
loope
pop
add
rorl
xor
jp
cmp
jb
loopne
push
cli
nop
dec
fadds
mov
jbe
call
xchg
jnp
mov
movsb
stc
fidivl
dec
dec
imul
shrd
clc
mov
cmc
call
sbb
mov
out
dec
repz
sarb
in
dec
nop
cmpsl
cmpsb
adc
mov
icebp
jns
aas
das
es
fisubrl
adc
pop
outsb
psubsw
xchg
int
push
pop
xchg
dec
lods
sub
cmpsb
add
dec
test
sub
xor
push
and
adc
mov
inc
fcmovnbe
xchg
and
insl
cmpsl
rolb
sahf
jp
ss
popa
fwait
cmp
mov
ss
outsb
unpcklps
mov
add
and
and
push
xor
inc
movsb
or
and
out
add
jb
orb
jbe
out
popf
imul
pop
test
in
sub
xor
sub
xor
cmp
cmpsl
inc
xor
add
dec
cs
push
xchg
sub
imulb
loop
jge
leave
enter
shlb
push
push
in
and
aaa
cmpb
dec
xchg
mov
loopne
dec
mov
cmp
movsb
adcb
add
sti
fiadds
stos
outsl
adc
mov
sbb
mov
leave
sti
inc
sub
push
out
in
xchg
fwait
cmp
stos
sbb
not
and
push
pop
xchg
lahf
xor
outsl
mov
sub
cmp
sub
fidivs
mov
add
jns
pushf
lcall
ja
mov
arpl
inc
and
enter
out
rcrl
aam
stc
cmc
xor
daa
cmp
mov
imul
push
push
inc
push
xor
cs
insb
add
adc
or
cmp
sub
adc
fadd
stos
dec
shlb
cmp
inc
jle
repz
dec
xor
sbb
cmp
inc
pop
add
out
cs
sti
jp
scas
push
cmp
push
cmpsb
lea
aaa
pushf
fstl
cwtl
in
addl
mov
jne
loop
stos
ljmp
cmp
loopne
sarb
inc
loope
jo
sub
xchg
shll
or
out
jo
xor
cmp
insb
fwait
movsb
dec
mov
mov
outsb
ret
test
mov
pop
movsb
or
rol
push
fsubrl
pop
test
movsb
sub
in
sbb
cs
repz
jo
sub
repz
insb
lea
xchg
pushf
in
in
mov
outsb
insb
cmpsb
or
xchg
mov
push
add
or
pop
into
adc
loopne
cmpsb
loopne
and
in
int
test
inc
shlb
ret
xchg
movsb
add
add
pop
cmpsl
jbe
inc
test
fisttpl
shrl
aam
icebp
push
mov
inc
inc
subl
dec
xor
push
jmp
mov
jl
or
lock
jae
push
cltd
push
mov
popf
jae
cmp
leave
mov
push
aaa
loopne
stc
sub
sub
adc
pop
jo
push
mov
cmp
or
xlat
dec
adc
ja
cmpb
mov
sti
add
into
or
mov
out
dec
xor
enter
mov
add
mov
dec
fwait
popa
cmp
jmp
xor
mov
jecxz
mov
and
or
jo
jnp
and
xchg
jl
mov
or
fs
outsl
lock
cmp
int3
push
mov
push
dec
inc
dec
xor
cs
insb
add
bnd
les
sub
icebp
sub
enter
inc
icebp
sub
leave
mov
dec
mov
xchg
and
sbb
inc
sbb
ljmp
mov
je
das
cmc
mov
jge
insb
push
xchg
mov
sti
mov
jo
mov
fstpl
sub
mov
pushf
mov
jnp
ss
adc
mov
and
inc
and
mov
adc
mov
or
int
and
sub
pop
lods
inc
mov
push
mov
fs
ss
push
in
sti
jmp
call
jb
mov
mov
push
sub
mov
fsts
test
adc
hlt
pop
roll
pushf
cs
in
popf
pop
sub
xchg
inc
xor
and
es
jmp
cs
inc
xchg
pop
lods
cmp
jae
std
pop
xor
notl
fsubrs
lods
mov
fdivp
mov
inc
add
and
imul
mov
pushf
movw
movb
mov
push
push
movb
lea
jmp
mov
pusha
call
movsbw
push
jmp
jmp
jmp
bt
clc
not
call
movb
mov
movl
pushl
ret
mov
mov
push
mov
mov
movw
pushf
movb
pushl
ret
pushl
popl
pushf
push
lea
jmp
aam
daa
mov
rcr
not
sub
bt
mov
cmp
call
lea
jne
stc
pushf
sub
pusha
xchg
pusha
pushf
pushf
pushf
movl
movw
pushf
movb
mov
mov
push
movw
pushl
ret
pusha
mov
push
pushf
pushf
push
lea
jmp
push
pushl
popl
pusha
pushf
pushl
lea
jmp
call
mov
pushf
call
pushf
mov
mov
lea
jmp
mov
movb
movw
jmp
shl
bt
lahf
sub
notl
shl
sets
mov
test
call
shl
test
pusha
pusha
shr
stc
or
bt
jmp
jmp
push
lea
jo
push
pusha
pusha
lea
jmp
lea
jnp
push
mov
push
movb
lea
jmp
pusha
call
movl
pushf
mov
pushf
pushf
push
pushl
ret
pusha
not
movsbw
mov
pushl
mov
lea
jmp
jmp
call
push
sub
movb
pushl
clc
mov
cmc
cmp
test
sub
push
pushl
lea
jmp
shr
aaa
mov
cmp
mov
push
add
pusha
mov
pushf
mov
mov
lea
jmp
pushf
push
sub
test
test
cmc
cmc
add
jmp
add
bswap
shld
call
pusha
pushf
pusha
mov
call
mov
call
pusha
mov
mov
mov
call
jmp
not
jmp
pushf
pushf
jmp
lea
jae
pusha
pushl
popl
pushl
pushl
pushl
movw
lea
jmp
call
mov
push
movb
pushl
mov
jmp
cwtl
clc
call
sub
cmc
mov
mov
pushl
movb
stc
bt
sub
push
pushl
lea
jbe
push
mov
movb
push
lea
jmp
stc
jmp
mov
pushf
mov
pushf
pushl
mov
lea
jmp
pushl
popl
pushf
mov
lea
jmp
push
pusha
movw
mov
pushf
mov
push
mov
mov
movb
pushf
push
mov
jmp
sub
pushf
pushl
lea
jmp
push
pushl
popl
movw
lea
jmp
dec
bt
clc
ror
movw
jmp
mov
pushf
popl
pushf
jmp
jmp
mov
call
mov
jmp
pusha
push
mov
push
pushf
push
movb
mov
mov
lea
jmp
movzbw
sbb
rol
mov
bsf
ror
mov
rcr
dec
clc
mov
call
dec
movzbl
sar
adc
xor
movzbl
pusha
dec
bt
mov
not
ror
test
add
add
add
lea
xor
sets
pusha
setg
dec
sub
jno
clc
xor
movzbl
push
mov
clc
or
pushf
pushf
pusha
lea
je
jbe
sub
clc
test
test
clc
xchg
pusha
cmp
mov
pushl
bt
sub
pushf
call
call
push
mov
call
call
mov
push
pushf
mov
movb
lea
jmp
btc
ror
aaa
rcr
mov
stc
add
pusha
pushf
mov
mov
mov
push
push
pushf
pushf
lea
jmp
lea
jne
je
push
pusha
xor
call
mov
pushf
dec
mov
movb
bt
sub
call
jmp
dec
add
jno
bt
xor
pushf
pusha
movw
call
pushf
mov
movl
lea
jmp
call
jmp
xor
pushf
pushf
pushf
dec
push
cmp
cbtw
jmp
pusha
mov
lea
je
stc
call
pushf
setp
xchg
cwtl
mov
pusha
movsbw
movb
lea
ja
mov
pushf
divl
call
xadd
push
mov
rcr
dec
mov
bt
pushf
movb
add
push
jmp
bswap
rol
ror
clc
xor
shr
xor
pusha
push
sub
pusha
shl
pushf
cmp
and
test
btr
shl
bt
mov
test
sub
movl
jmp
mov
pushf
pushl
pushl
pusha
lea
jmp
mov
pushf
push
lea
jmp
mov
pusha
jmp
xchg
call
stc
pusha
cmp
mov
shr
call
dec
btr
setp
not
shl
btc
bsr
add
shld
and
test
mov
push
bt
jmp
pushf
xchg
pusha
call
test
movb
call
call
ror
ror
rol
pushf
push
call
xor
cmc
cmp
clc
cmp
xchg
pushl
movw
mov
neg
pushf
cmp
mov
add
movw
xor
push
pushf
stc
xor
pushf
cmc
call
jmp
call
pop
std
lea
jmp
mov
mov
push
pusha
pushl
mov
movb
jmp
jmp
clc
neg
clc
mov
pushf
clc
cmp
sub
clc
jmp
and
movl
pushf
mov
movw
pushl
pushf
popl
call
jmp
push
ret
int
cmp
imul
int
push
push
push
xor
cld
or
fistps
push
push
push
push
test
push
push
push
push
pop
or
lea
push
ret
int
push
push
ret
int
or
and
push
leave
cmp
mov
push
push
xor
pop
aaa
push
adc
push
cld
or
arpl
push
xlat
cmp
int
xor
sahf
aaa
push
mov
push
imul
int
push
push
fistps
push
and
push
scas
xor
and
push
jo
push
and
push
mov
push
push
push
leave
sbb
inc
or
filds
push
push
push
sahf
aaa
push
sub
xor
sbb
aad
push
and
push
xlat
cmp
int
xor
push
sub
xor
imul
int
xor
ret
int
xor
push
cld
or
sbb
or
push
mov
push
leave
sbb
pop
or
mov
push
sbb
scas
xor
arpl
push
outsl
cmp
leave
sbb
add
push
cld
or
outsb
xor
pop
aaa
push
mov
push
outsb
xor
xlat
cmp
int
aaa
push
add
push
sahf
aaa
push
adc
push
sub
aaa
push
and
push
lea
push
imul
int
push
push
leave
cmp
filds
push
sahf
aaa
push
loop
push
lea
push
imul
int
xor
cmp
int
push
push
dec
add
push
cmp
int
or
adc
push
sbb
mov
push
cld
or
imul
int
add
push
pop
or
lea
push
xchg
add
push
aad
push
sub
push
push
ret
int
xor
or
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
mov
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
ret
int
add
push
sbb
scas
xor
push
push
push
xlat
cmp
int
or
and
push
xchg
add
push
leave
sbb
lret
cmp
and
push
inc
or
adc
push
inc
push
push
inc
push
push
inc
push
push
inc
push
push
inc
push
push
inc
push
push
inc
push
push
inc
push
push
inc
push
push
inc
push
push
popl
push
inc
push
push
inc
push
push
inc
push
push
inc
push
push
inc
push
push
push
push
push
imul
int
aaa
push
lret
cmp
xchg
add
push
pop
aaa
push
ret
int
add
inc
push
push
fistps
push
mov
push
jo
push
popl
push
push
xor
aad
push
sbb
lea
push
imul
int
push
push
inc
or
test
push
dec
add
push
push
xor
push
push
outsb
xor
scas
xor
imul
int
xor
push
push
push
lret
cmp
sub
push
push
push
push
lea
push
push
xor
and
push
add
push
push
push
pop
or
sbb
sub
cmp
and
push
popl
push
sub
cmp
arpl
push
pop
aaa
push
ret
int
or
test
push
test
push
sahf
aaa
push
push
xor
outsb
xor
outsl
cmp
or
push
loop
push
xchg
add
push
test
push
cmp
int
push
push
pop
aaa
push
push
push
push
imul
int
xor
lea
push
loop
push
inc
or
pop
or
filds
inc
and
mov
popl
pushf
pushf
pushl
pushl
popl
movb
pushl
pushf
movb
lea
jmp
mov
push
mov
mov
lea
jmp
call
mov
push
push
lea
jmp
jmp
stc
pushf
sub
pusha
xchg
test
cmc
mov
cmp
push
sub
push
movw
jmp
push
pusha
mov
pusha
mov
call
rcr
movzbw
neg
mov
btc
jmp
push
lea
mov
mov
jmp
call
pushf
pushf
mov
movl
pusha
push
push
call
not
bts
mov
mov
cmc
cmc
test
test
add
jmp
add
jmp
pushl
sub
pusha
push
and
mov
pushf
popl
jmp
jmp
jmp
movw
xchg
lea
jne
push
movl
pusha
call
jmp
mov
mov
lea
jmp
dec
not
add
movsbl
mov
push
clc
cmc
add
push
jmp
call
pushf
movb
jmp
shl
call
aad
sub
mov
or
mov
jmp
rol
mov
jmp
aad
lea
push
movb
cmc
stc
cmp
call
pusha
mov
pushf
jmp
test
stc
add
mov
test
call
push
mov
movw
pushf
lea
jmp
bts
mov
lea
pop
neg
sub
bsr
mov
xor
neg
shl
mov
xadd
add
movsbw
sbb
mov
or
dec
mov
add
sub
call
xchg
bswap
mov
lea
push
bswap
mov
call
mov
pushl
popl
push
mov
pushf
pushf
lea
jmp
not
stc
xor
mov
add
test
movb
call
push
mov
pushf
lea
jmp
lea
jne
pusha
clc
pusha
sub
call
pusha
pushl
pusha
mov
push
pushf
jmp
pusha
pushl
popl
pushf
add
clc
pushl
popf
push
movb
pushf
lea
jmp
call
call
cmp
mov
mov
stc
add
jmp
add
cmc
test
add
jo
shrd
push
mov
pusha
mov
mov
pushf
popl
pushl
call
bswap
pushf
popl
mov
push
lea
std
pusha
xchg
mov
call
mov
push
pusha
mov
movw
movb
mov
push
lea
jmp
push
xchg
jmp
mov
movb
pusha
pushf
movb
lea
jmp
mov
mov
pushf
push
mov
pusha
pushl
mov
push
lea
jmp
shl
bsr
pushf
mov
push
ror
bt
mov
test
stc
add
jmp
bts
sub
push
xadd
mov
clc
add
cmc
bsr
movsbw
xor
lea
lea
mov
stc
cmc
call
jmp
call
pushf
mov
lea
jp
push
jmp
mov
jmp
sub
mov
mov
pushf
pushf
lea
jmp
xchg
clc
sub
mov
cmc
bt
neg
clc
jmp
push
pushf
pusha
mov
pusha
call
pushf
push
mov
pushf
pushf
pusha
push
lea
jmp
jmp
mov
pushf
jmp
ror
pusha
mov
bsr
btr
and
not
mov
mov
lea
jo
add
pushf
pushf
pushf
mov
pushf
pusha
lea
jmp
mov
pushl
push
mov
lea
jmp
pushf
call
push
pushf
popl
pushf
pushl
popl
movb
movl
push
lea
jmp
mov
mov
mov
pushl
ret
jmp
clc
clc
not
call
movw
clc
mov
stc
clc
pushf
or
call
call
lea
call
seto
pushf
jmp
stc
cmp
xor
clc
cmp
cmc
cmp
xor
pushl
call
jmp
push
push
mov
movb
call
jmp
jmp
mov
pushl
mov
push
pushf
push
mov
lea
jmp
mov
push
jmp
pushf
jmp
mov
pusha
pushf
popl
pusha
pushl
popl
pushf
pushl
lea
jmp
lea
push
pushf
jmp
pushf
movb
mov
pushf
push
jmp
sbb
test
sbb
bt
mov
pusha
xor
pushl
call
pushf
popl
jmp
movl
call
pusha
neg
mov
stc
cmc
sub
pushf
sub
mov
mov
call
pushf
mov
movb
mov
pushf
popl
pusha
pushl
popl
pushf
push
lea
jmp
pushf
mov
movb
pushf
mov
lea
jmp
clc
not
bt
pusha
cmc
call
pushf
mov
call
shld
aaa
aas
das
mov
jmp
add
add
call
mov
setp
mov
test
not
clc
not
pushf
push
sub
bt
pushl
and
push
jmp
push
jmp
push
add
jmp
mov
jmp
push
jmp
pushl
popl
pushf
pushl
lea
jmp
movb
mov
push
mov
mov
pusha
mov
mov
movl
movl
mov
lea
jmp
cmc
sub
mov
mov
push
push
pushf
lea
jmp
dec
add
clc
mov
ror
not
adc
rcr
mov
cmp
cmp
add
push
shld
call
mov
jmp
jmp
jb
pusha
pushf
mov
push
pusha
movb
mov
jmp
mov
pusha
pushf
push
pushf
lea
jmp
call
mov
pusha
lea
jmp
add
jmp
pusha
mov
call
xchg
call
pushf
mov
pushf
pushl
mov
pushl
call
pushf
mov
pusha
call
mov
push
call
mov
mov
call
jmp
call
jmp
mov
movb
pusha
mov
mov
mov
mov
push
lea
jmp
mov
movb
push
pushf
lea
jmp
pushf
pusha
pusha
pushf
movw
pushl
popl
push
lea
jmp
mov
push
pushf
mov
pushf
lea
jmp
jmp
push
push
call
call
mov
movb
lea
jmp
mov
pushl
popl
pushf
lea
jmp
jmp
call
push
pushf
pushf
popl
movl
pushf
pushl
popl
pushf
pushf
lea
jmp
bt
sbb
rdtsc
pusha
pusha
cmp
test
sub
call
sub
push
pushf
call
mov
push
push
push
mov
mov
movw
pusha
call
jmp
call
push
cmp
clc
xor
jmp
pushf
mov
call
mov
mov
movb
movb
movb
lea
jmp
das
add
mov
sbb
clc
mov
pushf
test
cmp
add
pushl
jmp
push
mov
mov
pushf
pusha
lea
jne
push
jmp
push
mov
pushf
call
mov
movsbl
dec
rcl
bswap
ror
rol
mov
movzbw
bswap
not
inc
bt
call
cmp
test
call
call
push
ror
shrd
rcr
btc
ror
xor
ror
neg
setno
sub
sub
dec
and
jmp
pusha
mov
pusha
pushf
sub
call
jmp
mov
call
push
call
jmp
aaa
shl
mov
clc
mov
bt
add
jmp
mov
cmp
cmp
inc
mov
stc
sub
call
jmp
movw
call
pushf
mov
push
mov
pushf
mov
mov
jmp
push
pushf
movb
pushf
popl
movb
push
pushl
pushl
popl
movb
mov
mov
lea
jmp
not
bswap
mov
pushf
pushf
call
call
mov
cmp
sub
pushf
pushf
push
lea
jmp
call
sub
clc
pusha
cmpl
pushl
mov
call
mov
pushf
pushf
popl
call
mov
push
lea
jmp
jmp
call
call
jmp
cmp
pushf
bt
not
pusha
pushf
push
bt
neg
stc
sub
jmp
mov
movb
pusha
mov
movb
call
setg
call
pusha
call
push
pusha
jmp
sub
jmp
call
pushf
mov
push
pusha
lea
jmp
inc
mov
cmp
jmp
not
inc
bts
mov
mov
rcl
mov
stc
jmp
sub
push
call
cmc
cmc
call
sub
movl
movb
lea
jne
jmp
mov
push
movzbl
push
push
dec
cmc
cmc
mov
sub
jmp
call
adc
sub
mov
stc
sbb
mov
cmp
sub
js
shl
jmp
cwtl
rcl
sar
mov
test
jns
bswap
bt
sub
jmp
push
pushl
jmp
test
call
lea
mov
pushl
movl
pusha
mov
pushf
pushl
lea
jmp
pushl
popl
movb
mov
lea
jmp
jmp
stc
cmc
sub
movb
jmp
mov
push
mov
mov
mov
lea
jmp
call
pushf
pusha
test
movw
bswap
call
bts
mov
call
call
push
pusha
dec
call
pushl
pushl
pushl
popl
mov
movb
movl
movb
lea
jmp
bt
aas
daa
mov
sbb
not
rcl
rol
mov
clc
sub
test
cmp
bt
shr
pusha
push
jmp
push
ror
call
bt
mov
bt
sub
call
pusha
pusha
mov
push
movl
mov
push
lea
jmp
push
mov
pushf
lea
jmp
aad
aam
mov
sub
test
ror
shrd
mov
jmp
pushf
pushf
mov
pushf
mov
push
lea
jmp
pushl
mov
call
mov
jmp
lea
jne
pushf
jmp
xor
movw
inc
mov
call
rol
add
bswap
call
call
cmp
stc
cmc
test
sub
call
popl
pushf
pushl
mov
lea
jmp
pushl
lea
cpuid
jmp
jmp
mov
pushl
call
std
mov
movsbw
movsbw
movl
mov
std
std
cld
push
pusha
call
clc
add
call
call
pushf
call
pop
jmp
pusha
xchg
pushf
popl
sete
push
pushl
popl
movsbw
sete
movsbw
pusha
movl
lea
jmp
pushf
jmp
pushf
mov
push
movw
lea
jne
bsf
cmp
mov
stc
pushf
push
test
and
bt
pusha
cmp
pushl
pushf
pushf
pushf
lea
jne
cmc
xor
adc
xorb
bswap
jbe
setg
setge
pop
pusha
lea
jmp
mov
jmp
movw
rep
adc
mov
cmp
mov
movb
stc
std
pushl
popf
movw
movw
lea
jmp
mov
jmp
mov
call
sub
jmp
movb
lea
ja
clc
aaa
mov
add
lea
xchg
sub
aad
xadd
cwtl
lea
mov
push
lea
movl
and
sbb
sub
pop
lea
lea
mov
call
jmp
push
push
mov
pusha
pushf
mov
pushf
lea
jmp
mov
mov
pushf
pushf
popl
mov
movw
pushl
popl
pushl
pushf
pushl
mov
lea
jmp
sub
pushf
push
inc
movb
cmp
not
mov
neg
test
cmc
stc
sub
test
test
clc
sub
stc
movb
call
jmp
mov
call
mov
mov
pushl
ret
test
bsf
mov
cmc
clc
test
add
push
pusha
lea
jmp
mov
jmp
inc
stc
not
cmp
call
pushf
stc
test
shl
jmp
push
jmp
add
jmp
jmp
pushf
mov
call
call
pushf
popl
jmp
sub
call
lea
jbe
pushf
mov
pushf
push
lea
jmp
jmp
push
jmp
mov
pushf
mov
pusha
lea
jmp
movw
cmp
xchg
pushf
clc
pushf
clc
mov
stc
cmc
call
mov
pushl
push
pusha
movb
mov
pushl
movw
pushf
movw
mov
movl
movw
pushf
pushf
lea
jmp
mov
pushf
pushf
pushf
mov
lea
jmp
pusha
movzbl
jmp
mov
pushf
pushl
ret
ror
aas
sbb
movzww
pusha
test
xchg
cmc
clc
xor
pushf
pusha
clc
call
jmp
jmp
push
jmp
pusha
bswap
not
mov
push
pushf
movl
pushf
lea
pushf
jmp
lea
pusha
mov
jmp
pushf
mov
call
call
call
bt
push
bt
shrd
push
mov
pushf
push
mov
pushf
pushf
popl
movb
pushl
popl
push
push
pushf
lea
jmp
shr
xor
setb
rol
movzww
test
clc
pushf
mov
xchg
pusha
cmp
call
dec
mov
pushf
sub
jbe
sub
cmc
pusha
push
bt
shl
pushl
mov
push
mov
jmp
mov
push
pushf
pusha
pushf
pushf
popl
jmp
call
push
mov
push
pushl
lea
jmp
pusha
pushf
shl
call
xchg
adc
rcr
call
pusha
mov
push
mov
pushl
pushf
lea
jmp
pushf
mov
pushf
call
jmp
call
shl
jmp
xor
add
mov
call
pusha
sub
jno
shr
jmp
call
pushf
popl
call
pusha
jmp
pushf
mov
call
add
movb
mov
pushf
pusha
movw
lea
jmp
jmp
mov
mov
movb
mov
movb
lea
jmp
pusha
pushf
movb
mov
movb
push
push
movb
lea
jmp
push
movb
mov
mov
pusha
jmp
bt
sub
bt
cmc
shr
jmp
jmp
bt
sub
cmp
xchg
clc
stc
mov
cmc
test
bt
sub
call
mov
call
pusha
call
mov
pushf
lea
jmp
mov
pushf
jmp
push
mov
pushf
jmp
movl
mov
pushf
pusha
mov
jmp
mov
jmp
mov
push
lea
jmp
jmp
mov
pusha
call
jle
inc
call
lea
mov
call
pusha
mov
movzbl
mov
push
not
bswap
mov
setno
lea
setne
xchg
mov
pushf
jmp
mov
mov
push
movw
call
call
inc
mov
movsbw
shld
shrd
inc
pop
movsbw
clc
not
pop
rol
aaa
inc
popf
movzbl
lea
lahf
pop
jmp
sub
neg
sub
shl
mov
add
add
jmp
cmp
test
add
pusha
pushf
popl
pushf
pushl
popl
pushf
lea
jmp
mov
jmp
bt
rol
inc
movzbw
dec
cmp
xor
movzbw
inc
sub
pop
dec
setb
movzbl
sub
shl
mov
cmp
pusha
xor
pusha
clc
call
mov
pusha
divl
call
lea
jne
jmp
pushf
jmp
jmp
dec
cmc
mov
and
cmc
sar
rcr
add
setg
push
not
mov
mov
call
pusha
mov
pushf
mov
call
call
stc
cmc
cwtl
movb
stc
add
jnp
sub
jmp
mov
movw
pushf
popl
pushf
call
jmp
pushl
pop
mov
not
xchg
bswap
push
xchg
jmp
mov
movb
pusha
lea
jmp
mov
mov
cmp
and
sub
sar
not
btr
btr
xor
movzbw
add
shl
movsbw
neg
add
shrd
sub
bt
mov
push
add
movw
mov
pusha
lea
jmp
jmp
mov
push
pushf
movw
lea
jmp
clc
shr
rcl
push
movzbl
bt
xor
call
jmp
jmp
push
pusha
mov
pushl
movb
mov
pushf
lea
jmp
movb
decl
movw
jmp
jmp
mov
call
or
movzbw
lea
sub
mov
cmp
add
pusha
lea
jmp
call
pushl
mov
movb
lea
jmp
add
test
add
bt
rol
test
jmp
call
push
pushf
lea
jmp
mov
movb
call
jmp
call
mov
jmp
