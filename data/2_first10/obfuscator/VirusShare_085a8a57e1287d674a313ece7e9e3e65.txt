push
call
ret
ret
adc
cmp
push
cmpsl
popa
mov
aas
add
mull
cwtl
or
and
pop
test
out
test
xorb
popa
lods
jmp
mov
pop
xor
sub
dec
mov
pusha
daa
mov
dec
push
jecxz
cmp
mov
mov
stos
and
loope
or
test
stos
shll
jnp
fidivs
sbb
int
sub
ljmp
mov
popf
jle
xchg
in
cmp
mov
mov
cwtl
mov
mov
lahf
xchg
mov
iret
rorl
sbb
ret
ljmp
fildl
cmc
xchg
and
inc
iret
mov
xor
lods
les
or
iret
loopne
das
data16
cmc
shrb
in
movsb
add
fwait
and
mov
es
inc
or
fsubrl
mov
xor
popf
push
mov
lea
mov
jae
xchg
iret
lea
shl
dec
lods
mov
stos
arpl
adc
and
cmp
je
mov
pushf
lods
cs
pop
repz
cmp
mov
daa
xchg
pop
sub
adc
lret
data16
xchg
dec
inc
mov
xlat
xor
fwait
add
repz
sbb
test
jg
lds
xchg
xchg
cmp
adc
icebp
mov
mov
mov
xchg
cli
jne
es
sti
fldl2t
sbb
or
test
pusha
add
and
cmc
jbe
loope
outsb
dec
mov
mov
test
pushf
aas
cmp
adc
cwtl
leave
xchg
lock
adc
dec
leave
cmp
js
xchg
mov
inc
adc
xor
imul
xchg
test
adc
jo
je
xchg
mov
in
insb
sti
sarb
jne
sbb
imul
ret
push
icebp
mov
dec
cli
xor
sbb
add
jne
mov
cli
popf
call
sbb
cs
pop
imul
dec
mov
add
adc
pop
cmc
inc
aaa
push
xor
lea
ss
dec
sub
jne
mov
dec
xchg
lea
jns
mov
lret
mov
mov
enter
orb
push
or
in
cwtl
mov
ljmp
pop
sub
je
std
mov
add
and
or
pop
loopne
mov
push
out
jo,pt
cs
ret
mov
pop
lea
scas
dec
mov
xor
jge
add
addr16
inc
iret
mov
jno
mov
cmp
shll
jge
test
fldl
lret
rcl
lret
and
or
aas
arpl
cli
aaa
mov
cmp
mov
movsb
xchg
mov
pop
lcall
int3
scas
lahf
xlat
das
and
xlat
push
addr16
mov
out
insl
pop
test
inc
test
pushl
dec
xor
cwtl
popf
dec
and
imul
dec
idivb
jnp
icebp
clc
push
mov
arpl
cmp
loopne
outsb
daa
popa
inc
shrl
sbb
aad
andb
test
lret
in
stos
dec
int3
cmp
sbb
or
xlat
out
push
mov
mov
xor
cmp
lret
es
dec
push
sbb
cmpb
lods
and
loopne
sti
jne
pop
mov
outsb
mov
mov
stc
jo
dec
jno
lret
pop
gs
lea
not
xchg
and
push
xchg
mov
xorb
ret
ja
movups
ret
and
cwtl
leave
into
lock
dec
xchg
out
ds
insb
dec
iret
push
inc
inc
cmpsl
lcall
push
out
sbb
sub
mov
xor
ss
mov
ja
shrl
dec
mov
outsb
dec
mov
lcall
jns
mov
clc
xor
movsl
sub
mov
lahf
jl
std
fldenv
add
hlt
mov
lods
ljmp
stos
push
or
adc
lods
and
adc
and
call
jmp
lcall
add
mov
lds
push
into
scas
push
lds
xchg
notb
sbb
lods
dec
xlat
adc
hlt
and
mov
add
jg
cmp
les
sbb
test
sbb
pop
inc
adc
je
xchg
adc
push
int
adc
xor
dec
push
mov
in
aas
xchg
mov
or
and
cmp
mov
or
clc
nop
mov
test
or
pop
cmp
inc
lock
fdiv
rcrl
in
in
jno
jg
pop
push
loop
sub
push
and
mov
sub
test
inc
out
repnz
mov
mov
and
inc
bound
push
sub
int
into
test
ret
sub
test
fldt
jl
les
in
xchg
xor
nop
adc
nop
dec
push
or
push
mull
mov
push
sub
jl
sahf
dec
mov
arpl
jecxz
jge
jp
lret
mov
jae
xchg
xor
andb
aaa
inc
xchg
inc
push
xlat
lock
xor
roll
dec
xor
push
xor
sarl
in
xchg
fs
inc
test
xchg
mov
adcl
jmp
movsb
push
sbb
add
cmp
sub
adcb
cli
rclb
adc
or
inc
mov
ljmp
mov
jb
pop
lock
filds
fsubr
xor
push
fmull
xlat
pop
imul
repnz
int3
mov
xlat
pop
or
push
push
pop
scas
dec
std
ficomps
data16
inc
cmp
mov
push
imul
mov
push
repz
or
mov
loopne
imul
test
jp
lds
movsb
int3
jg
scas
sbb
repz
adc
mov
dec
add
push
jle
addr16
pusha
jl
arpl
arpl
scas
pop
xor
lods
in
add
out
and
ret
mov
loopne
xor
and
fildl
sub
dec
pop
jno
loop
push
sbb
fiadds
inc
push
push
vmwrite
lahf
adcl
mov
jo
jae
stos
jae
mov
pop
inc
icebp
lods
push
jl
cmp
ret
xchg
inc
add
xor
fs
push
pop
xor
jbe
aaa
fists
cwtl
adc
jb
cs
or
cmp
arpl
fs
addb
stos
mov
and
mov
movsl
cmpsl
out
lcall
dec
jp
lret
iret
mov
pop
cs
ffreep
fstl
cmc
push
insl
jle
lods
jle
inc
xchg
lock
or
js
scas
xor
bound
or
mov
pop
out
shl
movsl
jmp
fisttpl
inc
mov
add
pop
and
das
mov
push
mov
insl
aam
pop
das
int
flds
dec
stos
and
adc
scas
cmpsl
pop
cmp
add
rcr
push
mov
aaa
mov
jbe
in
xor
push
test
mov
push
fnsave
sub
shll
dec
ret
push
mov
pushf
push
dec
push
ds
loopne
push
hlt
lods
pushf
mov
jns
jg
ret
jge
xchg
sub
pop
popf
push
mov
pop
sub
mov
rep
sbb
inc
add
pop
out
jl
test
pmulhuw
xor
xchg
mov
leave
jl
cmpsl
cmpsb
mov
push
addr16
aaa
and
pop
lock
cmp
mov
or
lock
in
cld
das
stc
rorl
insl
lret
pop
nop
adc
test
fistpl
fisubrs
xchg
sub
call
mov
pop
mov
pushf
ljmp
into
or
pop
or
cmpsb
and
mov
sub
mov
jbe
dec
inc
lcall
xchg
cmp
mov
sub
adc
jecxz
jge
jnp
mov
push
lcall
adc
outsb
mov
push
cwtl
sbb
ds
adc
jno
xchg
nop
les
shrl
xchg
ja
pop
mov
jp
fdivs
lds
pop
je
jbe
mov
mov
mov
jmp
xchg
scas
cmc
lcall
in
fdivrs
jne
flds
fsubrs
popa
push
out
pop
push
xlat
lds
adc
cmpsb
and
jg
sbb
cmp
filds
xchg
in
push
dec
jg
push
sub
pop
and
mov
cmc
popa
iret
jp
dec
aas
sub
or
icebp
addr16
scas
and
mov
xor
jo
cmc
sbb
mov
xlat
lret
int
cld
and
xchg
mov
loope
mov
rcrb
mov
push
daa
jb
leave
stos
mov
int
test
daa
data16
sub
stos
mul
out
and
push
shrl
inc
pushf
jne
pusha
adc
enter
mov
mov
test
cmp
ss
shrl
push
adcb
ret
mov
faddl
outsl
adc
clc
stos
lods
pop
xchg
pushl
add
jb
icebp
mov
gs
loopne
lcall
mov
mov
mov
mov
mov
jmp
pop
push
inc
push
rol
sub
stos
mov
addr16
movsb
xchg
xor
out
adc
sbbb
push
or
mov
sub
add
aaa
adc
in
loop
xor
mov
stos
xchg
jbe
inc
sbb
add
mov
aam
push
jnp
push
lcall
jns
or
sbb
mov
int
movsb
mov
mov
lret
fiadds
pushl
stos
cli
sbb
dec
mov
outsl
iret
imul
movl
pop
xchg
mov
dec
dec
test
daa
fcmovne
inc
sub
pop
add
lahf
ret
xorb
pushf
in
or
div
scas
fisttpll
pop
out
lret
xchg
mov
test
add
dec
fistl
mov
inc
lret
int
dec
addb
xor
dec
mov
cmp
cmpsl
cmpsl
xor
sub
inc
and
pop
pop
jb
mov
xchg
ret
fwait
xchg
jbe
jg
sbb
xchg
mulb
jne
stos
cmp
imulb
sub
scas
push
pop
xor
and
adc
lods
fxch
xor
outsl
in
xor
fpatan
cmp
sub
popa
or
or
jl
xor
rorl
push
mov
rcrl
icebp
pop
mov
je
mov
icebp
repnz
mov
mov
out
cmp
push
rol
cmp
and
adc
insl
mov
movsl
pop
or
jmp
icebp
pop
int3
sub
leave
cs
jb
push
out
out
xchg
adc
addr16
adc
xlat
ss
dec
aam
mov
aas
testb
mov
adc
sbb
std
ja
aaa
sbb
cmp
inc
lret
sahf
shrl
rcll
push
dec
xchg
je
inc
fdivrp
lret
roll
in
aas
push
sub
jecxz
dec
xchg
rorl
repz
cmp
movsl
xchg
mov
sbb
mov
add
rolb
mov
mov
mov
xor
add
xchg
test
mov
imul
or
addr16
icebp
jbe
into
bound
dec
fnstsw
mov
adc
inc
xchg
les
test
movsb
adc
sahf
in
loop
fsubrs
sbbb
fst
push
sub
cmpsb
enter
sbb
stc
mov
aam
or
add
dec
out
stos
neg
add
arpl
ljmp
ja
sub
in
pop
inc
mov
out
add
sbb
push
mov
lret
jmp
jns
mov
sub
cmp
mov
lret
repnz
sub
lret
adc
lods
push
lcall
push
ljmp
into
push
fwait
pop
jbe
push
add
mov
pop
pop
xchg
arpl
cmp
inc
sub
je
cmp
aas
push
dec
cmc
xchg
test
or
pop
andb
jo
aas
gs
jne
jnp
ljmp
cli
out
div
push
sub
pop
pushl
xor
mov
call
leave
fnstcw
int
in
dec
sbbb
arpl
fwait
int
aas
push
add
insb
imul
push
pop
test
pop
cmp
mov
shll
mov
xchg
add
fidivrs
mov
mov
aad
mov
ljmp
pop
push
dec
inc
pop
push
mov
pop
daa
push
sbb
push
insb
rolb
fdivl
or
add
imul
ja
inc
jbe
addr16
leave
pop
jle
enter
adc
out
fwait
xchg
jne
fnsave
testb
in
mov
cmp
adc
pop
and
jle
or
dec
insl
subl
loopne
imul
add
adc
pop
mov
cmpsl
xchg
pusha
adc
int3
das
mov
sti
shr
push
aad
mov
or
add
call
cwtl
cwtl
xor
imul
call
jg
js
dec
les
cmp
stc
out
or
pop
adc
test
aam
mov
push
jne
repz
lret
jp
push
sub
xorl
je
popf
mov
lock
arpl
sbb
cmp
xor
mov
sahf
cwtl
call
push
push
xor
sbb
and
or
leave
jle
dec
mov
loope
or
iret
leave
adc
sbb
loop
ud2
cli
sahf
into
xor
std
mov
jnp
push
in
pop
pop
scas
adc
aaa
ficoml
pop
mov
scas
ror
push
push
inc
add
in
jge
adc
ret
pop
sbb
and
xor
mov
aad
in
dec
ret
pop
adc
cltd
pusha
loope
stos
shl
dec
mov
add
mov
push
add
jl
or
cmpb
in
mov
std
jecxz
ret
push
mov
aaa
lret
enter
cld
and
sbb
jge
pop
gs
dec
testl
int
dec
mov
jmp
imull
mov
nop
aam
idivb
cmp
inc
cli
pop
mov
mov
sbb
test
call
out
dec
and
xorl
std
or
int3
orl
and
pop
and
aaa
mov
scas
divps
push
sahf
and
shl
orps
adc
shlb
sahf
cmc
nop
dec
ljmp
test
mov
fsts
pop
nop
pop
lds
and
daa
or
xor
sbb
iret
mov
push
lods
gs
dec
shrb
add
inc
in
dec
or
icebp
push
pop
fisubl
jp
or
mov
xor
inc
insl
ja
or
rcrb
call
sub
hlt
sbb
out
mov
xchg
lea
popf
das
loop
ret
or
jp
stos
add
jnp
iret
imul
jnp
inc
inc
pop
adc
neg
mov
fwait
cmc
lahf
mov
mov
pop
lret
shrl
jecxz
repnz
adc
xor
and
pop
mulb
cmp
bound
test
mov
adc
das
mov
repz
sub
rcl
jmp
sbb
dec
add
rorb
mov
lds
ror
mov
jmp
dec
sbb
cli
xchg
fisubrs
push
jo
stos
lcall
ljmp
bnd
sbb
gs
xchg
mov
xchg
outsb
pop
sbb
pop
lret
jns
pop
hlt
push
and
sub
cli
idivl
imulb
cmp
xor
or
bound
cmp
jno
jl
test
sti
pop
add
push
fnstcw
xor
je
or
mov
or
xchg
push
fsts
dec
addr16
sbb
jge
sahf
push
push
jg
ds
and
push
das
int
lcall
nop
xchg
inc
sti
jg
pop
mov
decl
or
int3
out
sub
cpuid
mov
mov
stos
paddsw
data16
pop
push
aas
ljmp
imul
pop
roll
divl
orb
adc
js
in
push
scas
sub
mov
pusha
or
xchg
xchg
arpl
imul
sbb
stos
adc
xchg
cmpsb
xchg
xchg
je
push
lcall
sahf
push
xor
dec
aaa
ljmp
pushf
dec
stc
adc
popa
insb
mov
jne
hlt
movsl
or
ds
dec
or
out
idivl
clc
lret
fisubrl
push
fwait
or
xchg
outsb
data16
adc
inc
dec
xchg
pmaddwd
outsb
or
test
cmc
cmc
inc
mov
inc
cs
les
xor
ret
push
call
mov
sarb
roll
and
cmp
loop
xchg
xlat
iret
das
mov
push
stos
cs
lods
pusha
dec
loop
outsl
out
lret
sbb
xor
sbb
filds
jb
or
movsl
adc
sub
inc
cwtl
mov
mov
push
fsubrs
cmc
push
pop
mov
arpl
adc
jns
jo
adcl
xor
jbe
movl
lret
in
push
and
ja
mov
sbb
xchg
sub
in
sbb
inc
jns
xchg
movsb
orb
fs
dec
fistpll
xor
add
xchg
jnp
aas
or
xchg
shll
fs
sub
in
push
inc
mov
jns
popa
daa
and
leave
mov
stos
lods
popa
ds
imul
movsb
sbb
xchg
ret
inc
or
sbb
xchg
sbb
aas
ret
cld
mov
dec
movb
daa
inc
mov
mov
decl
out
outsb
add
das
sub
xor
shrb
jp
push
outsl
sub
cmc
lods
mov
or
outsl
test
clc
or
or
jae
mov
mov
pminsw
rcr
cli
aam
adc
add
out
pushf
jge
push
shll
dec
cltd
roll
mov
or
sbb
or
int
jb
shll
mov
dec
or
adc
and
je
pop
push
mov
mov
out
xchg
xor
pop
lods
out
push
jp
daa
int
imul
push
and
lock
push
andl
adc
inc
mov
dec
mov
push
adc
pop
dec
in
popl
aaa
loop
sbb
sbb
mov
xchg
mov
inc
fwait
in
sahf
loope
add
and
out
adc
lds
testb
movsb
dec
jno
pop
jg
xchg
push
inc
aad
cmc
mov
loopne
pop
cmp
imul
sbb
inc
es
fiaddl
cmp
aad
shrl
pushf
pop
pop
mov
dec
xchg
xlat
popf
sub
sti
mov
frstor
int
in
push
shrl
pop
dec
fsubs
ret
popa
push
and
adc
sub
mov
pop
lods
xchg
insl
jle
xchg
push
inc
push
cmp
jne
jmp
jle
lock
xor
nop
dec
sbbl
out
call
fcoms
mov
mov
aad
je
scas
addb
nop
cmp
call
lea
and
ja
dec
mov
int
cltd
jne
xchg
in
jne
add
sub
pop
clc
jle
negl
sbb
or
mov
sub
or
cmp
out
push
push
repnz
jl
xchg
rcr
jne
enter
mov
and
xor
mov
adc
repz
push
out
or
xchg
xor
and
enter
hlt
dec
stos
int
sub
ret
out
sahf
daa
out
sbb
adc
daa
mov
cmp
xchg
pop
imull
xor
fsubrp
ja,pn
lcall
sbb
fwait
xor
movsb
xchg
loopne
jo
xor
pop
test
lds
xchg
cltd
jnp
add
das
cmpsb
lods
cmp
sub
xorb
idivb
mov
aaa
and
mov
test
and
sahf
pop
sbb
out
inc
int
gs
mov
rcl
mov
adc
mov
les
iret
fwait
inc
adc
pop
and
dec
mov
sarb
mov
mov
les
mov
cmp
insl
icebp
cmp
popf
mov
leave
stos
fdivrl
fldl
push
xchg
and
in
div
aas
loopne
andb
lea
mov
sub
daa
xchg
arpl
lods
cmpb
xor
iret
dec
push
sub
add
inc
mov
fnstsw
lret
inc
lods
xlat
push
fisubl
shll
ss
sbb
stc
push
sbb
sbbb
sbb
fdivl
sub
lods
jo
dec
lock
jne
fisttps
scas
add
out
test
push
into
std
das
jo
push
in
inc
jae
ljmp
push
movsb
out
es
data16
pop
xchg
fimuls
or
xchg
fdivl
test
pop
xor
cmp
fwait
sbb
ja
popf
loope
arpl
push
mov
mov
push
icebp
and
mov
cmp
add
pop
pushf
pop
dec
stos
mov
movsb
pop
dec
sbb
shrb
sub
dec
push
sbb
ds
mov
mov
add
mov
ret
lret
bound
mov
adc
js
repz
imul
lcall
insb
pop
xchg
adc
xchg
sub
fstps
sub
js
mov
test
js
pop
xchg
and
pop
push
imul
sub
cmp
jb
pushf
ds
call
stos
notb
and
cmp
xchg
cmp
jns
cmpsl
loop
es
loope
stos
xchg
outsb
outsl
push
jne
in
sbb
mov
pop
and
call
xor
imul
xor
xchg
in
inc
xchg
mov
and
sbb
fcoms
aam
add
or
cmp
gs
shl
push
xor
int
or
test
lds
push
popf
lret
add
cmp
cmp
mov
rcl
cmp
test
mov
mov
cmpsl
lea
cmpsl
js
nop
mov
lcall
inc
jmp
jle
add
das
stc
sbb
sub
dec
lock
jo
addr16
add
iret
lods
stc
inc
lds
xor
sti
mov
mov
lock
jb
mov
shlb
inc
aas
inc
inc
add
gs
pop
pop
xchg
lock
push
test
inc
jo
sbb
outsl
cs
cmp
inc
xchg
push
jne
pop
mov
pop
xor
outsl
sub
and
jbe
adc
in
imul
mov
and
in
cli
xchg
sbb
or
scas
fistl
jl
pop
test
cmp
jns
nop
stos
sbb
mov
lds
mov
shr
inc
xchg
adc
out
lahf
sbb
idivl
clc
leave
loop
imul
stc
cmc
aaa
cs
mov
adc
mov
hlt
mov
mov
cmp
xor
jb
cmp
mov
mov
test
jmp
pop
das
mov
xchg
sbb
in
fistpl
pusha
in
adc
jnp
inc
pop
out
fwait
jns
jb
sub
xor
inc
shlb
and
popa
inc
sub
shll
fisttpll
xchg
push
dec
jle
sbb
sbb
mov
mov
xchg
das
rcr
xchg
cmp
mov
ret
cmp
ret
js
jns
mov
jp
mov
fadds
loopne
stos
aad
movsb
arpl
xlat
xchg
fiaddl
fisubl
ljmp
dec
lock
or
dec
andl
cmp
mov
imul
adc
in
int
xor
xchg
in
and
adc
inc
ficomps
mov
lock
clc
mov
jg
adc
shll
jge
adc
std
loopne
xor
pop
fwait
jne
push
or
ja
or
lret
xchg
mov
leave
sbb
out
or
inc
mov
mov
fstl
sub
dec
das
leave
movl
pop
mov
arpl
add
cmp
adc
xchg
out
rorl
and
push
in
cs
pop
aam
ja
mov
fnstsw
mov
rolb
std
hlt
test
cli
das
movsl
clc
sbb
xor
ficompl
add
jns
dec
jno
jbe
test
cmpsl
fistpll
mov
and
dec
mov
test
lcall
sbb
or
add
and
adc
add
cli
jne
push
jno
cmp
int
loop
outsl
mov
jecxz
pop
lods
stos
rclb
lret
call
iret
push
or
mov
pop
adc
scas
cmpsl
pop
mov
or
in
adc
out
sahf
or
sub
popa
hlt
or
imul
push
push
sti
mov
xchg
insb
xor
dec
jnp
clc
aam
test
leave
pop
sbb
jp
es
and
adc
iret
fisttpll
mov
mov
xchg
push
xor
pand
lods
xor
shlb
cmp
pop
mov
mov
insl
mov
lret
lods
enter
test
fidivrl
in
sbb
fcoms
push
movsl
daa
xchg
xchg
xchg
mov
push
bound
movsl
dec
popa
cwtl
push
clc
leave
mov
out
cmp
dec
mov
cmp
cmp
cmp
jb
sub
shl
push
or
shrl
rcrl
nop
add
push
fsts
and
popf
fwait
lods
scas
loop
imul
or
aas
repnz
fs
pop
mov
mov
add
out
es
stos
bound
sbb
dec
mov
inc
pop
lods
loop
inc
mov
ret
fsts
cmp
xor
mov
repz
fimull
xchg
sahf
adc
ror
cmp
outsb
pushf
and
js
test
test
mov
andb
or
int3
shrb
mov
data16
imul
pop
or
scas
stos
aam
jo
dec
hlt
mov
mov
pop
in
rol
subb
jmp
cmpsb
or
daa
mov
xchg
fs
xchg
fsubr
jne
inc
out
and
std
mov
out
test
divb
loopne
sbb
pushf
cwtl
jp
lcall
int
sbb
mov
xchg
push
insb
pop
insb
add
lods
xchg
or
jle
cmp
mov
or
push
jno
inc
mov
imul
fimull
repnz
inc
fsubs
inc
insl
shll
call
loope
lret
lret
or
stos
push
xchg
fwait
out
pop
daa
push
jnp
xchg
cmp
push
mov
sub
rclb
mov
jae
test
xchg
mov
pop
sub
add
call
jl
push
movsb
nop
cmc
cmc
mov
pop
iret
test
fdivrl
pop
xchg
xchg
lcall
aaa
das
add
arpl
mov
add
or
sub
mov
sub
xchg
rclb
stos
xor
mov
insb
jl
pusha
dec
mov
aaa
mov
mov
popa
mov
xchg
lret
adc
push
sahf
adcl
xchg
mov
lods
cmp
mov
outsl
jbe
out
shlb
popf
ds
cltd
movsb
mov
jge
sbb
dec
out
ret
inc
hlt
pop
ret
cmp
or
pop
hlt
sub
imull
xor
ds
and
adc
inc
lea
aas
idivb
inc
and
push
or
mov
fwait
push
pop
mov
mov
sbb
cmp
std
loopne
or
into
inc
sbb
pop
push
addr16
adc
jl
mov
cmp
or
xor
arpl
test
clc
lret
repnz
xor
push
pop
xchg
js
xor
addb
sub
cld
sahf
mov
xchg
sub
setae
stos
dec
sbb
and
call
or
cld
dec
cs
into
jge
sub
insb
hlt
jge
hlt
sarl
les
xchg
cli
xor
es
aam
lds
aaa
fsubr
cli
popa
xorb
cli
lcall
out
pop
js
push
dec
orb
mov
inc
dec
out
addl
push
inc
mov
incl
test
aad
ret
shlb
push
xchg
mov
in
jecxz
ret
mov
push
lcall
test
add
add
mov
es
sarl
sbb
jmp
cli
test
mov
mulb
push
push
mov
or
xor
repz
dec
call
jo
out
jno
xchg
ljmp
icebp
sbb
and
cmpsl
cmpxchg
ret
add
xchg
lcall
xchg
sub
adc
inc
call
es
push
mov
mov
push
pop
sub
pop
scas
lods
xchg
xor
clc
dec
lcall
pop
mov
push
mov
out
dec
and
enter
jle
dec
pop
test
js
aam
scas
negl
cmp
pop
mov
xor
jno
notl
jecxz
jb
mov
fsts
jae
mov
xorl
mov
push
lods
nop
cmp
fptan
xchg
push
dec
sbb
sub
mov
add
outsb
jno
xor
fdiv
jb
add
cs
ja
hlt
addr16
sti
inc
xchg
pop
dec
jp
bound
repnz
daa
mov
lcall
lcall
sbb
adc
sub
sbb
add
aaa
and
fnstsw
fildl
or
jmp
jge
xchg
jb
orl
cmp
inc
xor
mov
push
mov
push
test
or
call
inc
xchg
push
std
test
pop
and
mull
sarb
jno
lcall
scas
lock
mov
enter
or
pop
in
sbb
push
frstor
loopne
leave
cmp
push
push
push
pop
jle
stc
lds
fistps
outsl
xchg
mov
cmp
pop
jg
je
xchg
xchg
insb
insb
cs
jb
jnp
andl
cmpsl
leave
sub
jns
in
mulb
scas
clc
pop
das
in
push
pop
pop
sub
aaa
push
fcmove
cltd
pop
popf
sbb
sub
dec
xlat
inc
mov
push
mov
insb
daa
movsb
or
and
call
jge
jno
cmpsl
movsl
push
cmp
out
mov
sahf
xchg
test
fwait
inc
std
mov
ret
and
mov
test
cmp
movsb
or
enter
sbb
std
sbb
mov
or
adc
inc
jg
test
aad
shrb
and
mov
push
pop
cs
ljmp
inc
rcrb
jecxz
out
stos
sbb
loopne
push
lcall
hlt
adc
imul
fwait
xchg
cmpsl
dec
fucom
mov
arpl
jae,pn
ljmp
bound
mov
sub
xor
iret
js
adc
insl
cmp
inc
jmp
negb
ss
sub
adc
das
les
jle
cwtl
push
out
gs
add
and
cwtl
push
xlat
stc
xchg
pop
jle
or
out
out
mulb
inc
xchg
loop
and
push
xchg
push
cltd
pop
inc
jl
inc
dec
popl
clc
push
sbb
mov
pop
pop
xor
dec
xor
adc
cld
ret
mov
addr16
fdivrs
xchg
push
mov
mov
xchg
sub
mov
ja
cld
xchg
pop
mov
sub
push
mov
xlat
hlt
orb
fmull
sub
mov
out
or
xor
das
mov
sub
mov
int
mov
imull
sbb
sbb
imul
pop
push
sbb
sub
jle
push
aad
xor
inc
push
lods
popf
inc
inc
xlat
movsb
inc
pop
imulb
sub
and
jle
hlt
inc
add
adc
int
xchg
push
lret
ss
dec
xchg
fistl
jne
pop
or
icebp
cmpsb
cmpsb
xor
mov
in
sbb
push
test
pop
xor
rcl
mov
cltd
fwait
ret
aaa
xchg
adc
repz
movb
mov
push
les
push
subb
cltd
lds
pusha
sub
movntq
out
pushf
mov
inc
push
and
jg
add
push
and
out
push
mov
mov
loope
fldenv
inc
ficoms
bound
adcl
aaa
test
jp
jmp
mov
cmc
mov
out
pop
cmp
shld
mov
mov
pop
cmpsl
add
movsl
enter
sarl
push
push
dec
fsts
clc
outsl
or
clc
xor
fldcw
mov
sub
and
fldt
stc
pop
or
inc
xchg
repz
mov
ret
dec
xor
sub
pop
testb
aaa
or
adc
ror
loopne
mov
mov
cmpsl
das
mov
mov
scas
shlb
fldt
cmpl
ss
je
std
jns
imul
sub
adc
jp
push
je
iret
cld
or
pop
push
cld
repnz
cmp
stc
jo
scas
mov
rorb
sahf
fs
jae
bswap
aaa
mov
inc
orl
inc
mov
sahf
movsb
or
mov
ds
fwait
xchg
and
cltd
lahf
jmp
fstl
icebp
into
sbb
jmp
jge
call
xchg
mov
dec
sahf
xchg
xor
imul
lods
add
sar
into
and
inc
in
icebp
pop
cmp
fiaddl
push
mov
fiaddl
scas
mov
cmp
test
cmp
sub
dec
es
jbe
decl
sub
inc
adc
out
loope
fidivrl
cmp
pop
call
idiv
sbb
and
lods
adc
fs
or
fwait
jle
inc
mov
xchg
cmpsl
aaa
mov
mov
nop
out
push
mov
stos
pop
pop
lret
mov
jbe
and
cmpsb
or
movsb
mov
and
xchg
das
and
push
sub
lret
fstl
iret
xlat
dec
loope
adc
std
movsb
ja
sbb
push
shll
icebp
enter
clc
jg
fcomps
popf
sub
lea
mov
jb
mov
sti
dec
jp
lahf
mov
out
pop
xchg
fidivrs
ret
push
xchg
into
in
aaa
inc
xchg
iret
dec
cltd
pop
lret
jmp
mov
iret
cmp
jmp
xchg
fildl
shll
xchg
sbb
cmpl
pop
dec
sub
mov
mov
mov
jnp
xchg
flds
ret
sbb
in
fwait
pop
xor
leave
std
or
push
or
sub
scas
mov
push
dec
xorb
and
rolb
xorl
xchg
inc
cmpsl
jmp
fcomip
inc
push
mov
test
xchg
xlat
push
dec
mov
mov
movsb
xchg
push
sti
push
and
push
pop
pop
fmull
xchg
pop
and
cmpsl
sbb
in
test
mov
dec
unpcklps
je
jno
lods
ss
les
inc
and
or
inc
hlt
or
lahf
popa
les
cmpsb
into
dec
ss
xchg
ret
rol
jle
sar
adc
cmp
push
mov
add
out
xchg
aas
je
lcall
xchg
pop
aam
push
xchg
rorl
fs
mov
and
in
fstpt
insl
and
stos
jae
sub
jp
out
test
and
xchg
cmpb
imul
cmpsb
outsl
imul
repz
inc
inc
inc
mov
cmovle
outsb
mov
adc
enter
cmpsl
add
cs
pop
aaa
aad
or
push
cmp
mov
or
negl
arpl
dec
test
sub
add
pop
xor
push
jg
loope
fildll
lock
mov
lret
sarb
mov
arpl
insl
loop
aam
jo
xlat
rcll
lea
push
aaa
ja
mov
pop
push
pusha
mov
inc
adc
jl
dec
into
out
dec
pop
push
dec
cmp
lea
lea
jo
jne
pop
dec
mov
mov
aaa
push
cmp
pushf
sahf
pop
je
fdiv
lahf
mov
mov
or
into
loope
cmp
out
ds
jmp
ret
mov
fdivrs
je
int
inc
lret
stos
sbb
xor
or
xchg
xchg
dec
mov
inc
xchg
mov
xor
mov
jno
or
insb
and
lea
or
mul
mov
loop
mov
mov
jo
outsl
mov
xchg
xor
mov
adc
push
inc
mov
inc
pop
cmp
sub
cmp
testl
push
ljmp
stc
inc
cmpsb
xchg
jp
mov
fstpt
mov
fldcw
jns
jg
mov
int3
xor
pop
adc
sbb
add
mov
sub
cmp
xchg
out
aas
cltd
add
ss
jnp
rcll
lock
or
aad
dec
jno
outsl
push
je
cmp
dec
jns
sti
daa
lea
arpl
lahf
pop
in
in
xchg
popa
mul
mov
cs
mov
xor
icebp
add
sub
add
mov
dec
ficoms
imul
mov
sub
xorl
sub
and
fsts
sarb
mov
mov
loopne
jecxz
fwait
jmp
test
daa
mov
loopne
sbb
insl
notb
lods
sub
stos
pop
pushf
enter
rcll
orb
aad
xor
scas
and
aam
or
pop
add
inc
jl
dec
add
test
dec
addr16
dec
mov
or
data16
pop
shl
add
pop
popf
aaa
jbe
xor
loope
push
stc
xlat
xlat
mov
test
jg
push
jl
mov
xor
adc
test
cmp
fst
outsb
movsb
inc
fucomp
add
or
icebp
lret
xchg
es
mov
xchg
inc
fisttpll
jp
iret
sbb
scas
cmp
xor
mov
xor
fprem1
mov
mov
sbb
testb
and
lock
mov
sub
lcall
adc
cmp
pusha
adc
mov
adc
adc
ret
popa
sbbb
jecxz
cs
pushf
out
cmp
add
pop
flds
in
mov
push
cli
add
cmp
xlat
stos
ds
sub
sub
jae
dec
xchg
mov
mov
aam
sbb
pushf
cmc
dec
movsl
addr16
add
and
jnp
add
xor
jmp
cmp
bound
cmp
and
or
rclb
fninit
and
mul
or
xor
push
pop
insb
push
xor
cmp
lock
cmc
js
aas
sbb
cmpsl
xchg
lods
mov
stos
lods
push
fsubr
repnz
sub
in
mov
mov
cltd
fisubrl
jge
mov
pop
scas
imul
jg
adc
and
je
aam
fldln2
and
and
outsl
mov
out
push
insb
pop
sbb
arpl
jg
add
in
mov
inc
pusha
in
in
adc
repnz
mov
in
mov
cwtl
push
pop
pop
pop
stos
icebp
and
or
cmpl
loop
divl
hlt
jae
aaa
sahf
mov
jo
adc
sbb
push
xchg
push
fisubrl
mov
lods
mov
cmp
mov
cmp
stc
cmc
out
sbb
adc
daa
popf
push
jae
enter
loope
lea
pop
sbb
movsl
je
ja
push
mov
cmpl
in
fwait
mov
pop
rcr
gs
pop
call
pop
insb
mov
xchg
test
test
push
push
mov
jbe
dec
xchg
jp
sarl
inc
fwait
pop
mov
gs
or
out
xchg
or
inc
cmp
sarl
lds
push
outsb
push
scas
mov
inc
test
rcl
aaa
fsubs
iret
adc
xor
xor
cmp
mov
stc
aam
out
xchg
pop
push
jge
fbstp
lea
ret
or
test
std
and
pushf
loop
xchg
jg
sub
push
in
mov
pop
sbb
test
and
ret
in
sub
dec
sub
ja
pop
xchg
dec
xor
push
mov
rcll
mov
mov
aad
rcr
mov
and
sbb
ja
mov
dec
push
ja
movsl
xchg
xchg
sbb
insb
mov
lret
mov
mov
lods
adc
repnz
inc
call
sub
mov
lods
repnz
arpl
pop
call
xchg
sbb
jns
jl
adc
mov
mov
in
cld
jmp
inc
int
xchg
std
adc
pop
enter
push
aas
push
sub
mov
iret
test
test
aaa
pop
popf
icebp
sbb
dec
test
cmp
dec
enter
leave
jp
stos
inc
test
loop
sub
jae
and
sbb
adc
sbb
sub
jecxz
stc
clc
inc
dec
fimull
jle
mov
cmp
push
cmp
shll
shrb
inc
repz
push
dec
add
pop
ljmp
xor
pop
cmp
cmp
mov
xor
cmp
pusha
push
nop
rcrb
jmp
xchg
fdivrl
xchg
les
nop
aad
xor
push
cmp
or
add
out
data16
daa
and
xchg
gs
mov
sahf
push
push
sbb
jne
das
sar
xchg
push
inc
loop
lret
jle
shll
ljmp
dec
cmp
sub
and
inc
int
mov
shrb
ss
andl
pop
test
orl
push
inc
adc
sub
mov
mov
arpl
xlat
push
addr16
ss
and
fdivr
retw
cmp
jno
lock
shr
je
dec
mov
sbb
mov
aas
jp
lcall
aad
mov
lret
enter
arpl
xchg
bound
aaa
xchg
les
push
push
imul
adc
inc
jmp
mov
out
shlb
lods
push
xchg
xor
cwtl
int
outsl
cmpsl
push
incb
sbb
cltd
fucomip
xor
dec
push
enter
fsubl
mov
sub
jno
inc
inc
sub
clc
clc
ljmp
mov
lret
pushf
fcmovne
lds
sarl
aas
popf
outsl
lret
pop
adc
add
dec
xchg
mov
xlat
in
hlt
jne
push
aaa
xor
pop
jbe
outsl
movsb
ljmp
jno
pusha
xchg
push
xor
popf
repnz
leave
scas
popf
addr16
js
ret
mov
mov
inc
jl
lret
pop
dec
out
mov
add
pop
in
cmp
hlt
sbb
adc
dec
pop
and
cmp
movsb
rcl
inc
sub
and
jp
pop
lock
rcl
fisubs
push
repz
outsl
das
dec
push
lods
pushf
jp
popf
jne
jnp
jae
outsl
cmp
push
adc
add
mov
stos
or
gs
sub
push
fdivrl
ljmp
shl
jmp
lods
in
xor
dec
and
jns
xor
loop
sub
inc
enter
pop
jb
lahf
enter
jmp
push
push
cmp
jle
cmp
and
xorl
xor
call
mov
iret
jb
and
aaa
xchg
mov
dec
imul
mov
ficompl
mov
sbb
add
lret
push
les
dec
rcll
loopne
lds
inc
xor
sbb
rcrb
jns
invd
jns
lds
mov
mov
mov
add
loopne
mov
inc
lods
xlat
imul
pop
xchg
repnz
jecxz
loopne
das
push
pop
dec
sub
pop
and
xlat
and
jbe
add
fwait
mov
sbb
and
loopne
aam
lret
cmc
push
arpl
or
scas
icebp
cli
insb
sub
rcll
repnz
loopne
sarb
cmpsl
dec
push
push
lock
jecxz
fs
adc
pop
xor
loop
stos
cs
fnstsw
sub
mov
sahf
pop
sbb
stos
xchg
sbb
xor
mov
or
lret
outsb
jp
in
sub
jecxz
add
sub
ja
mov
pop
mov
sbb
dec
cmpsb
fiadds
test
cmp
xchg
bound
mov
pop
pop
scas
mov
mov
imul
fldcw
mov
leave
nop
or
lods
xor
stos
int
rorl
or
pop
mov
mov
or
mov
jne
movsb
push
push
popf
or
test
fs
adc
mov
leave
mov
fcompl
mov
jecxz
push
lock
dec
jne
leave
hlt
sti
jmp
loopne
push
ds
cs
es
add
sub
xchg
scas
cmp
xor
adc
jae
adc
jne
mov
leave
inc
lods
mov
xlat
scas
push
test
lods
add
lods
xor
mov
out
jno
shl
xchg
inc
mov
sub
xchg
cmp
push
into
push
test
sub
push
adc
insb
scas
mov
arpl
es
mov
pop
bound
imul
pusha
sub
gs
sbb
lock
inc
sub
rorl
push
cmc
pusha
jbe
sub
fsts
lds
or
pusha
jmp
and
add
inc
pushw
jecxz
jp
mov
sub
and
or
cmp
outsb
jae
je
dec
inc
test
cmc
push
incl
adc
cmp
lds
dec
ret
sahf
sbb
lock
fcmovne
ret
mov
pop
pop
loopne
or
xchg
and
add
adc
mov
push
xor
pop
and
and
and
lret
jbe
pushf
arpl
add
cwtl
aaa
pop
inc
scas
iret
outsb
cmp
ret
pop
jmp
cmp
dec
jbe
icebp
add
sbb
dec
or
jmp
punpcklwd
jo
call
bound
repnz
jnp
mov
icebp
xchg
push
and
out
orl
push
popa
fcmovnb
push
cmpsl
pop
add
inc
int
jle
daa
sub
cmp
mov
xchg
push
rcrb
jb
insl
add
stos
lret
popa
in
aad
lcall
in
push
loope
inc
leave
pop
aas
scas
xor
push
inc
cwtl
fsubrs
sub
lods
sbb
dec
sbb
fcomps
sub
jmp
sub
mov
push
mov
mov
loop
pop
aaa
and
jb
and
push
jbe
push
dec
fisttpl
xchg
inc
int3
inc
or
jmp
xlat
mov
test
push
mov
lds
adc
add
inc
pop
adc
inc
pop
sbbl
les
cmpsb
cmp
stc
cli
and
sbb
into
dec
inc
pop
aaa
adc
test
adc
inc
jo
lods
test
and
in
pop
outsl
jl
outsb
daa
or
inc
lods
push
movsb
lods
pop
loope
and
loopne
mov
and
add
sub
sbb
xchg
fs
inc
lods
xchg
xor
repz
imul
addr16
lods
cwtl
dec
xor
nop
insb
popf
mov
jno
sbb
je
cmp
repz
adc
add
in
pop
inc
leave
or
xor
jle
pop
and
mov
shlb
fcmovb
xchg
gs
xor
jecxz
mov
lea
hlt
mov
or
mov
push
test
or
fs
bound
sahf
push
pop
ret
cld
jg
scas
push
adc
out
xchg
mov
in
inc
shll
add
jb
mov
lret
shrb
in
inc
dec
in
out
pop
xor
dec
dec
xchg
mov
lds
mov
sbb
pushf
and
inc
and
dec
jno
sbb
rorb
adc
mov
mov
scas
mov
sub
inc
add
mov
stc
lods
dec
int
jne
lods
dec
mov
dec
cmpsb
add
or
leave
xlat
adc
xchg
pop
dec
pop
cmpsb
in
sti
push
data16
imul
mov
jo
push
pop
enter
mov
adc
aam
fstpl
movsl
lock
push
push
mov
int3
cwtl
fsubrs
or
int3
lahf
push
imul
clc
outsb
test
mov
imul
mov
sbb
push
dec
ljmp
imul
mov
sub
repnz
mov
adc
and
js
shll
add
lds
stc
ss
in
ret
icebp
cmp
ds
sahf
pop
cs
mov
pop
xchg
imul
adc
jb
cmc
inc
orb
mov
add
shll
into
loope
loopne
xchg
mov
gs
push
and
lea
pop
fsubrs
lods
inc
aaa
ror
in
pop
dec
pop
out
aaa
gs
and
popa
adc
iret
mov
daa
cmp
lock
pop
repz
mov
fisubrl
ret
or
adc
cwtl
jg
in
add
cli
jge
xchg
loop
fsubs
inc
mov
mov
xchg
nop
loop
lcall
mov
ret
leave
shl
aad
out
movsl
pop
xor
cmp
xchg
lcall
mov
xor
push
fneni(8087
jb
cmp
add
sbb
jo
fs
push
scas
pmaxub
xchg
popf
mov
cmp
jo
mov
and
iret
lock
idivl
pop
hlt
sub
jnp
pop
and
call
lods
notl
cs
push
and
xchg
rclb
aad
xchg
fisubl
imul
outsl
icebp
pop
sahf
fbld
testl
icebp
scas
push
std
sub
xor
dec
pusha
pop
pop
xchg
insl
fxch
icebp
pop
adc
adc
repnz
aam
and
mov
ja
push
shl
and
pop
dec
in
into
inc
jecxz
and
mov
push
pop
sub
cmp
decb
and
pop
fidivrl
mov
sti
repnz
xchg
jg
ljmp
sbb
ss
subl
aaa
mov
mov
sti
incb
sub
rorl
gs
mov
push
xlat
and
test
and
lds
mov
and
pop
sbb
mov
xchg
lds
test
xor
popf
push
push
push
shrl
iret
fsubp
or
pop
sbb
or
mov
mov
add
push
adc
rclb
test
and
negb
cmp
adc
out
xor
add
fld
mov
lret
jnp
insl
lcall
jle
movsb
cmp
hlt
sbb
cmp
mov
push
mov
push
movsb
test
pop
sar
jecxz
test
lods
adc
mov
cltd
mov
lods
adc
call
repnz
jl
testl
loop
inc
push
inc
jns
sub
fstpl
sub
or
xor
lret
roll
out
leave
pop
push
enter
adc
xchg
or
adc
dec
jecxz
jnp
pop
and
add
xchg
mov
mov
dec
push
lds
cmp
outsl
inc
push
sub
ret
sub
inc
out
hlt
das
test
xor
daa
in
loopne
xchg
scas
out
or
int
push
mov
std
and
pop
imul
shr
les
in
push
or
enter
repnz
imul
sub
adcb
cli
pop
stc
push
mov
or
xor
stos
iret
call
shrb
fsubrs
push
jle
lret
out
mov
push
cmp
add
es
gs
ljmp
imul
aad
or
dec
mov
out
cmpsl
push
rol
cwtl
aad
and
jo
arpl
ljmp
pushf
cltd
mov
cwtl
xchg
fdiv
stos
adc
adc
cmpsb
fsubrl
mov
out
xor
testl
les
inc
xchg
scas
push
insl
outsl
pop
std
fimuls
les
test
xor
add
dec
das
inc
add
add
outsl
lods
sahf
rorb
cmp
mov
das
push
or
outsb
cmp
scas
loop
cli
hlt
xchg
inc
add
and
pop
loop
dec
aam
add
addr16
push
incb
orb
add
ds
adc
loopne
pop
xchg
fiadds
jne
movsb
sti
hlt
std
add
mov
cld
imul
cmp
xchg
inc
hlt
out
xchg
cli
xchg
xchg
pop
iret
sub
outsb
jp
popf
ss
sub
mull
jmp
idiv
ficomps
mov
push
jmp
or
cli
sbb
js
add
dec
xlat
mov
ljmp
cmpl
roll
insb
push
xchg
cmc
or
mov
sub
bound
cmc
lock
pop
sbb
loope
mov
data16
jmp
adc
sbb
lahf
and
mov
inc
or
push
adc
cmp
push
clc
es
xchg
stc
testl
and
push
cmc
sub
iret
mov
cmp
test
sbb
sub
mov
rorb
fisubs
popa
jmp
inc
pop
push
int3
test
xor
arpl
mov
pop
sbb
cmc
jo
stos
out
sbb
rcrl
xchg
jge
inc
outsb
mov
stos
jnp
je
pop
imul
mov
jecxz
sbb
jae
pop
mov
pop
sbb
insl
call
mov
mov
out
mov
lods
cmp
popf
inc
adc
jge
insl
in
sub
in
pop
loop
adc
cli
pop
jl
outsb
imul
or
hlt
sub
dec
stos
sub
ret
cmp
out
jns
adc
and
dec
mov
dec
jp
cmp
mov
adc
test
cmc
aaa
push
push
sbb
or
xor
xor
add
repz
imul
insl
inc
xchg
mov
dec
push
push
sub
test
call
cmp
add
dec
sub
pop
push
cmp
and
and
outsb
adc
jb
and
aas
mov
fidivl
adc
out
cmp
push
or
sarb
adc
xor
jo
dec
dec
es
adc
repnz
mov
jnp
push
adc
inc
jmp
xor
mov
idivb
xchg
xchg
add
rol
mov
inc
push
or
sbb
imull
mov
leave
inc
push
sbb
cmp
cli
xor
lods
adc
inc
inc
ss
push
out
pop
in
imul
dec
pop
shlb
mov
mov
int3
out
xor
and
or
add
jg
in
ss
orl
adc
mov
mov
insb
shlb
repz
push
jge
and
pop
mov
xchg
lods
shl
mov
add
cmp
fcmovnu
pop
stc
xor
xchg
icebp
lret
mov
js
lret
ljmp
mov
into
sub
inc
outsl
and
ss
stc
xor
repz
daa
repz
cltd
xchg
dec
arpl
es
dec
push
sub
mov
jecxz
xor
mov
add
lret
xchg
mov
mov
stc
mov
lods
lock
adc
out
cmpl
out
jbe
sbbb
lds
or
or
sbb
aad
adc
mov
dec
xor
mov
mov
adc
jno
cmp
rcrb
cli
xchg
push
ja
lea
jae
inc
push
pusha
pop
push
out
insl
nop
mov
cld
loopne
jo
scas
adc
lcall
xor
pop
or
or
shll
call
adc
xchg
outsl
int
ljmp
sub
andb
or
inc
sti
mov
mov
push
out
or
movsb
outsl
movsb
repz
sahf
out
cmpsl
adc
and
int3
in
or
ret
pop
nop
addr16
push
fidivrl
icebp
push
push
andl
push
sbb
pop
aad
xchg
cmp
jns
sbb
jmp
add
sub
push
fdivrl
imulb
sub
lret
ds
lcall
fwait
cmpsb
mov
xchg
or
leave
xchg
inc
mov
push
xchg
mov
nop
fcomps
cli
fstpl
sarb
mov
pushf
stc
jp
xor
mov
into
mov
mov
xor
out
and
es
popf
fiadds
inc
ljmp
movsl
push
fstps
or
mov
enter
outsl
ljmp
fmul
mov
adc
pop
loope
mov
pop
pop
movsl
test
cmp
cmpsl
mov
pop
cwtl
or
push
je
sahf
xor
mov
xchg
test
movb
mov
test
in
pop
test
adc
in
in
sbb
inc
mov
cmpsl
idivb
into
inc
bsr
add
mov
dec
imul
and
cmp
and
cmpsb
cmp
xor
adc
addr16
test
fbld
jp
imul
push
sbb
xchg
push
push
sbb
in
jl
push
mov
rcll
adc
push
pop
js
jmp
test
mov
push
dec
out
xchg
js
mov
arpl
movsb
sbb
fnstcw
call
add
pop
ret
push
jb
cmpsb
mov
dec
clc
int
sti
mov
mov
cmpb
or
cmp
push
push
ljmp
and
add
dec
into
int3
mov
sbb
mov
or
popf
jg
pop
fcmovnu
pop
loopne
xchg
loopne
faddl
xor
insb
push
mov
cmp
fsubrs
aad
inc
ja
out
ret
cld
loop
and
data16
lods
inc
adc
push
jns
cli
test
lock
ret
add
test
rcl
add
sbb
sub
les
les
push
sbb
stc
mov
adc
push
mov
pop
movsl
push
add
popf
shrl
xchg
fs
inc
fwait
push
pop
add
enter
pop
sbb
dec
test
cmp
icebp
mov
lcall
call
or
adc
xchg
mov
or
cmp
sbb
adc
mov
lea
icebp
jne
jmp
lds
pop
xor
fcmovnb
popf
test
xor
lret
cld
xchg
jl
adc
fwait
loope
mov
inc
add
adc
dec
imulb
jbe
mov
decb
ljmp
sub
lds
xchg
pop
add
lcall
test
test
and
pop
icebp
arpl
mov
jbe
rcll
push
xchg
push
imul
fidivl
test
sub
addb
jb
scas
pop
or
out
test
mov
sbb
rcl
sub
movl
cmp
stos
mov
or
inc
nop
stos
insb
mov
push
push
adc
xor
sub
mov
add
pop
test
xor
inc
xor
push
lods
rcrb
call
adc
xchg
xchg
fidivs
leave
dec
rcrl
push
cmp
mov
js
inc
fwait
roll
push
adc
into
sahf
shl
or
adc
pushw
pushf
and
int3
fdivl
push
mov
adc
imul
popf
push
idivl
into
imul
ret
int
ficompl
and
sbb
inc
mov
xor
out
das
mov
inc
sti
mov
ds
movsb
test
mov
ret
xchg
subl
out
push
imul
fbstp
xchg
jp
mov
jno
jle
loopne
imul
inc
push
jno
inc
mov
aad
addr16
pop
mov
cmc
negb
rolb
inc
pop
or
mov
xchg
loope
jl
mov
push
pop
or
pop
sbb
mov
shll
das
loope
dec
aad
or
outsl
popa
push
push
fsubl
pop
lcall
jne
xor
movsb
cs
lcall
pushf
hlt
push
pop
into
popf
out
sbb
dec
jae
adc
dec
jmp
adc
mov
mov
subb
xor
subb
lock
repnz
push
cwtl
testl
mov
push
lret
movsl
loopne
cmc
xor
fidivs
jmp
cld
mov
aaa
cmp
xor
mov
subl
aad
cmp
aad
lds
xor
cmc
pop
adc
test
int3
push
push
mov
mov
in
lret
sub
cwtl
fsubs
imul
std
mov
cmp
popa
subb
repnz
stc
pushf
sub
insb
sbb
fsubrs
push
fldl
sub
stc
leave
call
fsub
jae
popa
out
das
imul
daa
fisttpll
std
mov
in
and
mov
inc
lock
pminsw
push
xchg
in
pop
push
xor
fs
iret
ret
pop
fsubr
lret
jmp
add
and
mov
xchg
aam
and
out
add
loopne
int
movsl
lcall
fwait
int3
fisttps
out
mov
clc
js
fnstenv
and
and
lahf
imul
mov
lods
fistps
mov
out
lea
es
or
and
aas
mov
inc
jecxz
push
push
lahf
or
ljmp
cmp
in
addb
dec
inc
rcrb
outsl
lsl
test
sbb
aam
in
out
or
fs
inc
shr
pop
xor
jae
xchg
push
imul
pop
xchg
cmc
jmp
std
pop
or
imul
mov
mov
mov
xchg
out
mov
ret
fstps
fs
push
out
jne
mov
or
and
enter
cmpsb
fbld
pop
in
push
sahf
jl
movsb
adc
or
lea
xchg
mov
or
jp
out
adc
xchg
arpl
inc
sub
aas
pop
mov
cmp
ljmp
mov
lods
repnz
pusha
inc
addr16
lea
xor
test
sub
out
fwait
pusha
dec
dec
enter
sub
cli
out
adc
push
and
les
mov
movsl
stc
ja
pop
in
test
scas
popa
shll
push
inc
mov
bound
clc
fiadds
sub
aas
dec
ja
lea
or
jle
mov
movsl
sub
lock
cmc
shll
movl
mov
mov
dec
pushf
stos
aas
xlat
sub
out
sbb
mov
cltd
sbb
repz
pop
insl
les
inc
popa
pop
dec
mov
push
ret
lcall
xchg
test
out
cli
fcomps
adc
sbb
jb
jle
std
clc
call
jae
aam
test
lahf
iret
add
test
repnz
aas
aaa
cmp
into
les
test
cmp
push
dec
dec
loop
cmc
addr16
fsts
dec
test
aad
xlat
in
in
outsl
and
lret
jl
adc
lret
xchg
clc
fldt
sub
testb
or
lods
inc
pop
push
inc
mov
rclb
jl
sti
add
cmp
mov
cli
insb
xchg
lods
push
xchg
cli
idivl
xchg
or
push
mov
mov
cmp
jo
mov
int3
fldt
les
xor
sahf
movsl
ror
les
sub
jne
into
je
filds
inc
dec
inc
push
mov
cltd
xor
push
insl
cld
clc
fstps
sbb
fnstenv
in
or
pusha
lods
filds
inc
inc
cmp
pop
mov
jno
sbb
in
pop
add
pop
adc
pop
xchg
pop
std
imul
pop
mov
mov
cmpsb
xlat
push
rorb
dec
sbb
jle
jle
sub
ret
movsb
fsubrs
add
adc
add
push
xor
lock
xchg
xchg
shrb
add
mov
inc
out
pop
out
fildl
data16
movsb
pusha
daa
repz
pop
cltd
push
push
outsl
mov
pop
div
xchg
jmp
fiadds
inc
sub
xchg
gs
mov
jmp
push
in
mov
ss
mov
cld
push
out
cmp
dec
mov
js
ljmp
cs
repz
push
and
je
lods
mov
pop
jg
je
popl
loop
lsl
out
mov
pop
jl
bnd
adc
frstpm(287
push
popa
jge
sti
adc
les
adc
and
rcrl
inc
or
cwtl
pop
xchg
and
pop
mov
mov
cmp
inc
xchg
outsb
loopne
xchg
dec
jmp
jl
sub
outsb
mov
in
jne
xor
add
mov
outsl
movsb
cmp
mov
insl
and
push
ror
rclb
fs
dec
out
shll
lods
ss
call
mov
pop
lcall
clc
out
jno
stos
xchg
adc
dec
xchg
in
or
jle
push
js
pop
lds
xor
popa
pop
inc
xlat
pop
inc
xchg
lods
and
xchg
int3
pop
call
adc
cli
lret
sbb
jb
popf
jne
jle
sub
insl
addr16
and
mov
dec
cmc
push
cmpsb
dec
fwait
leave
and
ljmp
scas
les
mov
retw
mov
mov
fldcw
mov
fs
addr16
rorl
mov
lods
dec
push
es
inc
ljmp
pop
sub
jb
leave
pop
or
js
jo
push
jp
shll
fimull
ja
mov
mov
pop
testb
mov
aas
sub
pop
push
lods
pop
lret
pop
movsb
sbb
inc
sub
mov
and
mov
mov
int3
and
out
dec
gs
lret
stc
xchg
popf
pop
or
imul
stos
dec
lcall
xor
jns
and
inc
push
movsb
test
dec
cmp
shlb
sub
fdivs
xor
fxch
sahf
sbb
js
xchg
lods
sub
pop
outsb
sahf
arpl
lods
repz
dec
rcll
sarl
aad
ja
sub
mov
loopne
push
jl
loopne
jne
test
dec
aas
sub
push
push
pop
or
loope
or
mov
add
ljmp
js
sub
insb
xor
outsl
pushf
out
push
pop
mov
aad
orl
and
inc
xor
adc
mov
add
or
mov
push
cmp
addr16
roll
or
into
into
sub
or
and
ljmp
pop
fcompl
sbb
inc
stc
shlb
int3
cmp
test
cli
pop
gs
sahf
rcrb
mov
fimull
ja
mov
pop
xchg
mov
cld
dec
push
push
xchg
adc
cmp
mov
outsb
dec
lret
jg
scas
stos
sbb
pushf
inc
cwtl
cld
lahf
mov
push
cmp
loop
mov
pop
adc
insl
orl
in
sub
inc
jmp
les
mov
adc
cmp
ss
jmp
insl
out
in
inc
fisubrs
in
sahf
shlb
adc
outsl
and
scas
mov
mov
mov
push
adc
jg
repz
fst
and
mov
add
enter
or
lea
inc
jle
and
xor
cmp
movsb
jge
addr16
fcos
mov
sub
dec
jge
test
inc
xchg
int
xchg
lret
bound
andb
push
je
bound
jb
popf
iret
cmp
data16
cmp
cmp
punpckhdq
lret
push
pop
les
in
push
xor
inc
sbbb
or
sub
jb
mov
cmpsb
sub
push
add
test
mov
jecxz
outsl
mov
mov
xchg
mov
outsl
xchg
sub
push
jecxz
or
roll
push
adc
mov
mov
dec
inc
push
fstps
pop
push
add
insb
sahf
mov
jbe
mov
push
push
pop
or
push
cli
inc
testl
pusha
xchg
lock
pop
sub
mov
adc
mov
adc
push
and
fucomp
mov
shrb
jno
testl
clc
lahf
mov
pop
fs
adcb
jmp
push
fwait
push
jp
xchg
inc
adc
subl
sbb
mov
loopne
imul
out
and
inc
dec
xlat
adc
repz
sub
xor
inc
jns
loopne
cmp
pop
or
scas
repz
sbb
mov
aaa
inc
icebp
push
icebp
enter
jno
xor
test
jb
sub
adc
aam
daa
scas
stc
cmpsb
addl
imul
jge
jmp
inc
mov
dec
lds
pop
mov
push
jno
test
jo
ret
xchg
subl
add
testl
mov
sbb
xor
and
or
cmp
stos
push
push
cmc
or
jns
shr
stos
mov
jecxz
xchg
sbb
ffreep
int
or
iret
pop
int
ficomps
dec
orb
push
mov
je
pop
xor
inc
ret
pop
mov
arpl
lret
push
pop
sbb
idiv
add
lcall
out
jecxz
xor
shlb
outsl
or
xchg
push
cli
add
jo
xchg
dec
add
and
mov
out
mov
add
icebp
std
jnp
inc
add
movsb
fldt
adc
xlat
adc
xchg
aam
in
mov
jmp
adc
inc
loope
mov
mov
jecxz
xor
jg
outsb
hlt
add
sbb
aas
rcll
pop
push
dec
in
jecxz
cltd
add
imul
stos
addr16
mov
jmp
xor
push
jl
sub
imul
enter
push
cli
mov
jmp
and
xchg
leave
pop
movsl
subl
outsl
in
popf
cmp
mov
xchg
jecxz
mov
test
hlt
popf
loope
mull
rorl
lods
pop
loopne
lods
cmc
inc
inc
mov
cmp
adc
popa
mull
adc
arpl
push
mov
jae
jno
adc
cltd
ds
stos
imul
mov
dec
push
scas
mov
pop
ds
jno
mov
mov
add
mov
jnp
or
sub
pusha
jmp
dec
dec
cmpb
mov
xor
mov
nop
adc
mov
mov
rorb
pop
push
cs
outsl
jmp
repz
or
ss
inc
dec
shr
inc
bound
test
rolb
cmp
dec
cmp
adc
xor
clc
testb
jge
cwtl
jmp
sub
sbb
push
sub
mov
dec
pop
and
and
sbb
lea
in
add
stos
pusha
sbbl
xchg
pop
jbe
cmp
mov
cmp
push
cmpsb
sbb
cmp
mov
cmp
mov
js
xor
add
loop
dec
leave
xchg
test
lods
popa
jno
roll
or
repnz
jne
mov
popf
cltd
sahf
lods
test
cltd
bound
mov
jecxz
mov
and
push
movsl
pushf
push
dec
fdivl
iret
dec
ja
adc
popf
mov
popf
in
cmpsl
sbb
ds
sbb
push
or
sahf
push
push
mov
aas
cld
mov
cmc
pop
dec
or
sbb
out
jno
test
das
or
faddl
jo
shrb
mov
rorl
inc
dec
rolb
or
ljmp
jmp
aas
push
pop
test
cmpsb
jmp
notl
xlat
or
inc
rorb
xlat
inc
loope
scas
cltd
mov
cs
pop
fwait
dec
test
inc
jmp
sbb
dec
fwait
mov
faddl
push
test
jb
in
outsl
jno
push
mov
lcall
test
mov
jp
out
push
shll
jo
scas
add
les
imul
mov
stos
clc
sbb
push
cmp
out
sub
test
scas
add
mov
data16
addr16
sub
icebp
je
bound
les
enter
mov
orl
into
gs
ret
in
lods
loop
jb
pop
std
pusha
jae
sti
pop
rcrb
outsb
jge
xor
xchg
pop
loop
push
cmp
shll
ret
sbb
movsl
cmpsl
cmpsl
pop
shrb
fnsave
push
xchg
mov
imul
fimull
sbb
xchg
jns
incb
mov
push
fisubs
lea
hlt
sbb
fdivrs
xor
pop
rclb
cmp
fimull
nop
shlb
out
in
pop
shr
jmp
jle
xchg
fs
sbb
dec
fdivl
mov
xor
rcll
inc
pop
push
pop
sahf
out
dec
adc
inc
push
pop
outsl
push
insb
adc
mov
sbb
add
dec
sbb
push
mov
cmc
push
out
mov
push
in
dec
sarl
push
and
push
lahf
imul
jmp
shlb
js
cld
or
cmpsl
popa
sbb
sbb
mov
jno
gs
dec
dec
sub
jg
out
and
mov
mov
dec
cs
mov
mov
or
jnp
or
xchg
mov
inc
out
mov
fs
sub
call
add
push
lahf
push
lea
leave
stos
jbe
dec
push
icebp
xor
cmp
inc
mov
movsb
les
mov
insb
mov
daa
loope
sub
imul
ljmp
sbb
pop
int3
sbb
out
setae
pop
fcmovnbe
addb
sub
jmp
in
iret
loope
pusha
or
or
dec
jle
inc
cmp
shlb
mov
testb
imul
je
mov
mov
dec
pcmpeqb
jl
push
cs
cmp
stos
pop
jbe
icebp
jnp
sbb
dec
xor
aas
je
xor
and
jl
jl
mov
dec
xor
hlt
mov
hlt
mov
pushf
push
fldenv
push
mov
mov
xor
adc
mov
nop
add
add
popa
adc
adc
inc
lds
in
jge
dec
adcl
arpl
lods
int
mov
sbb
mov
push
insb
jns
cltd
scas
adc
sub
cmp
cmp
and
dec
insb
mov
xchg
clc
pop
cmc
jns
push
into
cmp
fmull
stos
add
push
arpl
popa
jne
imul
add
fwait
mov
std
lods
adc
gs
cld
cmp
mov
ret
push
xchg
fldcw
xor
dec
add
pop
and
or
and
stos
aam
xor
pop
inc
and
adc
adc
imul
mov
push
mov
mov
mov
pop
out
or
daa
cmp
outsl
mov
xchg
in
inc
jne
mov
inc
in
mov
mov
pop
push
xchg
xchg
loope
rcrb
push
sub
or
xor
cmpsl
imul
adc
mov
fnstsw
mov
mov
pop
xchg
pusha
mov
pop
fs
aas
mov
adcl
inc
mov
xlat
addb
out
cmp
or
xchg
push
sbb
mov
dec
pop
pop
mov
int3
testl
aam
in
pmulhw
mov
fsubs
xchg
and
insl
xor
dec
pop
mov
ficompl
pop
pop
dec
xchg
adc
xchg
jle
xchg
cmp
cld
lock
movsl
xor
inc
iret
or
mov
push
lret
push
fs
jp
mov
xchg
sbb
adc
jb
adc
lcall
pop
aas
lods
int3
sbb
ds
andl
fists
sub
.byte
.byte
insb
.byte
.byte
add
add
and
add
add
add
push
add
add
addb
add
pusha
add
addb
add
rolb
orb
add
add
add
addb
adcb
add
cwtl
add
addb
add
and
add
add
add
add
mov
add
addb
add
and
add
add
add
add
add
add
enter
add
add
loopne
add
and
add
add
add
push
add
pop
add
clc
add
adc
add
adc
add
sub
add
inc
add
adc
add
pop
add
adc
add
jo
add
and
add
add
add
push
add
add
add
add
add
add
add
add
add
add
adcb
add
add
adcb
add
add
addb
add
and
add
add
push
add
add
add
andb
add
dec
add
add
add
fiaddl
add
out
push
add
incb
add
sbb
add
cmp
add
inc
pop
add
pop
pop
add
jb
add
jle
add
mov
add
add
add
and
add
add
add
add
mov
add
addb
add
and
add
add
add
add
add
add
addb
add
add
and
add
add
add
add
add
add
cwtl
add
add
add
add
jb
add
add
add
add
add
add
test
add
add
add
and
add
add
add
add
add
add
mov
add
add
jb
add
add
add
add
add
add
enter
add
add
and
add
add
add
add
add
add
fadds
add
add
add
jb
add
add
add
add
add
add
call
add
add
jb
add
add
add
add
add
add
clc
add
add
add
add
jb
add
add
add
add
add
add
or
add
and
add
add
add
add
add
add
sbb
add
and
add
add
add
add
add
add
sub
add
and
add
add
add
add
add
add
cmp
add
and
add
add
add
add
add
add
dec
add
add
and
add
add
add
add
add
add
pop
add
add
and
add
add
add
add
add
add
push
add
add
jb
add
add
add
add
add
add
js
add
add
add
and
add
add
add
add
or
add
add
add
jb
add
add
add
add
or
add
add
add
jb
add
add
add
add
or
add
add
add
jb
add
add
add
add
or
add
add
add
jb
add
add
add
add
or
add
add
add
and
add
add
add
add
or
add
add
add
and
add
add
add
add
or
add
add
add
and
add
add
add
add
or
add
add
add
and
add
add
add
add
or
add
push
add
add
add
and
add
add
add
add
or
add
push
add
add
add
and
add
add
add
add
or
add
push
add
add
add
and
add
add
add
add
or
add
push
add
add
add
and
add
add
add
add
or
add
add
add
add
and
add
add
add
add
or
add
add
add
add
and
add
add
add
add
add
add
push
add
add
jb
add
add
add
add
add
add
js
add
mov
add
in
add
add
add
pop
adc
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
mov
add
in
add
add
add
add
add
call
add
add
add
add
sgdtl
aam
add
in
add
add
add
rclb
add
add
add
add
add
add
add
mov
add
add
add
add
adc
add
add
add
add
pop
adc
add
in
add
add
add
js
add
mov
add
add
add
add
add
xor
add
in
add
add
add
push
add
add
add
add
add
add
add
loopne,pn
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
enter
pop
add
add
add
add
add
add
cli
push
add
add
add
add
add
add
add
cli
push
add
add
in
add
add
add
fdivr
push
add
add
add
add
add
add
add
cli
push
add
add
in
add
add
add
call
add
add
add
add
add
add
cli
push
add
add
in
add
add
add
hlt
cli
push
add
add
add
add
add
add
add
cli
push
add
add
add
add
add
add
add
sti
push
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
or
add
in
add
add
add
add
inc
add
dec
add
add
inc
add
push
add
dec
add
add
inc
add
dec
add
inc
add
add
pop
add
add
inc
add
add
push
add
add
dec
add
add
dec
add
inc
add
or
inc
add
dec
add
push
add
dec
add
inc
add
add
add
inc
add
push
add
or
add
dec
add
dec
add
push
add
push
add
inc
add
push
add
dec
add
push
add
push
add
push
add
dec
add
push
add
dec
add
add
inc
add
dec
add
push
add
add
push
add
push
add
dec
add
push
add
dec
add
add
dec
add
push
add
dec
add
inc
add
push
add
add
add
pop
add
push
add
dec
add
push
add
add
push
add
push
add
dec
add
add
cmp
cmp
sbb
add
cmp
sub
movsl
and
lods
jle
add
and
dec
cli
cmp
or
cmp
fcompl
push
fwait
ds
sahf
clc
iret
pop
fistl
rol
adc
cmp
sbb
loope
dec
pop
addl
inc
pop
es
daa
pop
pushf
xor
dec
lock
test
mov
xor
sub
mov
add
or
cmp
fwait
insl
cmp
adc
jle
sub
frstor
cmpl
cmp
cmp
cmc
and
mov
and
popa
pop
stos
xchg
add
iret
jne
cmpsl
pop
push
dec
test
scas
push
pop
cli
incl
aam
sarb
loopne
xchg
or
mov
jne
shlb
cmp
ret
sbbl
popf
mov
pop
in
test
sbb
sbb
xchg
adc
push
push
xor
sub
popf
ret
arpl
sub
pushf
repnz
addr16
loope
push
sbbb
or
test
movsl
lahf
mov
aam
ljmpw
jp
xor
out
leave
rcrb
mov
jmp
pushf
in
jg
mov
movsl
popf
cmp
into
adc
push
cmc
push
sub
mov
jae
cmpsb
pusha
aaa
sbb
cmpsl
fcoms
inc
xor
movsl
fwait
outsb
pop
cmp
arpl
mov
or
lcall
loopne
xor
mov
and
xchg
push
pop
jno
cld
cmp
int
jmp
ja
xorl
jnp
es
mov
in
lret
adc
shrl
adc
sbb
iret
rol
fsubrl
call
or
xchg
push
and
loope
jns
jmp
aad
jns
and
cli
test
pop
or
popf
je
mov
out
movsl
cmp
sbb
ss
rcr
std
adc
sbb
popf
shlb
movsb
xchg
cmp
hlt
ds
dec
xor
xchg
sub
add
loope
roll
and
pusha
fwait
mov
out
nop
cmp
push
or
repnz
xchg
jns
push
fidivl
mov
mov
mov
inc
cli
lods
int
push
push
ljmp
push
pop
pop
sbb
mov
cmp
stc
out
fldcw
lds
pusha
je
fisubrl
mov
or
test
push
sub
sbb
adc
outsl
jp
fwait
popf
pop
inc
rcr
cltd
arpl
mov
cld
ja
cmc
jbe
pop
iret
mov
adc
sub
mov
xor
rclb
faddl
sbb
cs
jmp
loop
and
sub
pushf
push
aad
adc
pop
mov
inc
mov
jp
subb
pop
and
mov
jmp
call
xor
add
sbb
cmp
mov
fstpl
sub
sbb
enter
lahf
int
push
cltd
hlt
jl
mov
daa
jl
sub
sbb
cmp
lret
mov
shlb
scas
inc
mov
cmp
mov
loopne
or
push
pmaxub
and
dec
pop
subl
jnp
test
mov
pop
test
mov
je
test
inc
jmp
les
sub
nop
std
mov
push
je
js
pop
test
cmc
out
and
aas
add
test
lcall
xchg
in
lret
push
es
xchg
fistpl
pop
fdivs
adc
mov
cmp
jb
in
ret
xchg
pusha
pop
shl
inc
shlb
ret
imul
popa
sub
mov
sbb
popf
and
push
movsl
bound
jg
jg
push
mov
popw
add
xchg
mov
cmp
outsb
arpl
icebp
ret
xchg
sbb
clc
sub
jne
sub
sbb
or
xor
sbb
das
not
adc
push
jle
inc
cmp
cmpb
sub
xor
pop
out
jb
jns
pop
aas
lret
cmp
notb
dec
add
inc
inc
xor
mov
and
sbb
inc
outsl
push
test
enter
sarl
pop
loope
xorl
outsl
hlt
fwait
ds
add
ss
pop
lret
fstpt
ja
mov
cmp
or
loope
frstor
les
push
inc
sar
enter
push
mov
cmp
pusha
pop
xchg
push
and
and
jg
mov
fistps
sbb
pop
rcr
nop
lds
sar
icebp
daa
data16
mov
or
cltd
movsl
outsb
pop
sbb
cmp
mov
pop
cld
out
cmp
mov
test
rolb
and
cltd
xchg
inc
dec
insl
cmp
cmpsb
and
push
push
cmp
outsl
jns
mov
jecxz
loopne
adc
out
pop
repnz
push
rcl
inc
test
cmpb
push
pop
sub
pop
add
rol
push
pop
dec
mov
jb
xorb
fldl
xor
sub
imul
dec
pop
std
inc
fldl
mov
hlt
movaps
adcl
pop
les
lods
adc
xchg
inc
mov
inc
cltd
push
mov
fnstenv
test
clc
shrb
ret
dec
pop
push
in
das
pop
inc
pop
into
xor
fwait
inc
push
loopne
pop
movsb
sub
add
clc
movsl
pop
fdivrs
je
fimuls
push
add
adc
loopne
jl
mov
fidivrs
call
jge
jnp
gs
je
xchg
scas
pop
movsb
cmp
sarb
in
or
imul
add
loope
in
stos
and
ret
es
leave
jbe
sbb
lahf
xchg
ss
inc
push
xchg
test
outsl
lcall
mov
mov
mov
pop
subl
and
jb
and
adcb
mov
mov
mov
outsb
in
add
ljmp
lock
clc
in
cwtl
in
and
push
cwtl
ss
and
test
into
sbb
lcall
push
lahf
out
in
faddp
shr
stc
jo
out
xchg
out
lds
divl
cwtl
or
scas
mov
aaa
arpl
pushf
rcrl
mov
fists
jmp
lds
inc
mov
sti
stos
pop
hlt
mov
ficomps
nop
push
enter
lds
xor
pop
push
dec
ss
pushf
fistps
xor
jecxz
mov
test
call
into
push
movups
jge
pop
test
xor
dec
cltd
mov
xlat
and
aaa
xlat
cmp
adc
cwtl
cmc
sub
loope
push
sub
hlt
test
scas
jns
in
pop
clc
xchg
fldenv
mov
xor
ja
cmpsb
dec
cmp
sar
testb
or
push
stc
dec
lea
jno
xchg
inc
xor
insl
or
jne
outsl
insb
movsb
out
addr16
je
test
sub
cmpl
cmpsl
ss
aas
jno
test
movsb
out
xchg
addr16
mov
dec
pop
pop
jns
fldl
gs
test
or
cmp
lock
mov
pusha
jle
add
mov
mov
xlat
fiaddl
scas
and
outsl
dec
mov
mov
mov
outsl
fidivrl
fs
sbb
cmova
mov
mov
rorb
movsb
dec
aas
xorb
mov
push
dec
icebp
jb
aad
ret
lods
pop
movsb
sbb
out
rorb
out
mov
mov
inc
sbb
mov
outsb
sbb
test
dec
mov
cmc
mov
stos
pop
js
pop
into
adc
pop
aas
sbb
push
jmp
shrb
jnp
lea
mov
xchg
push
inc
mov
sbb
push
cwtl
jl
adc
cmp
xchg
imul
in
adc
mov
mov
out
jecxz
mov
inc
notb
in
push
add
fidivrl
mov
mov
fs
mov
cmc
inc
and
xor
dec
stos
lret
pop
in
mov
sbb
neg
cmp
add
iret
lret
mov
lcall
push
jg
dec
loope
xor
jae
add
scas
cmp
in
xchg
frstor
sbb
daa
jmp
scas
or
mov
das
or
clc
popf
aad
dec
insl
push
xchg
cmp
test
xor
xor
jne
out
movsb
test
pushl
pop
push
sub
test
sahf
shll
sbb
lcall
mov
xchg
xchg
or
sbb
in
lock
or
cmp
lret
outsb
andb
insl
repnz
and
push
es
jp
imul
fimull
mov
mov
cld
lret
mov
jle
aas
movsl
pop
mov
mov
sbb
and
cmc
adc
pop
jp
pop
lock
mov
mov
js
call
shll
sub
jle
ljmp
imul
icebp
pop
xchg
cmp
pushf
xlat
mov
scas
push
mov
sub
jno
movsb
mov
inc
sbb
jb
jbe
and
xor
add
popa
jle
nop
cmpsl
sahf
mov
adc
je
sub
insb
xlat
cmpsb
push
or
loop
daa
cmp
dec
fsubrl
dec
mov
jle
mov
dec
jns,pt
and
int
dec
cmp
pop
add
int3
aad
jns
lret
pop
jo
leave
pop
sbb
xlat
add
sub
sahf
shrl
notl
jne
sub
inc
or
jnp
call
mov
dec
and
jmp
cld
xchg
call
aaa
mov
ret
add
rcr
enter
ror
mov
mov
int
mov
jp
lahf
xchg
cli
or
push
test
jo
xor
rcrl
push
xchg
add
fwait
inc
sub
xchg
sbb
jmp
mov
dec
popa
sbb
hlt
xor
ss
sub
and
in
sub
cmp
mov
mov
xchg
inc
hlt
into
jae
mov
aad
pop
arpl
andl
jge
hlt
mov
jnp
and
mov
cmp
jo
rcrl
mov
or
push
outsb
xor
inc
xor
imul
fidivrl
jmp
inc
adc
mov
mov
mov
mov
adc
hlt
pop
push
or
adc
sahf
cmp
gs
scas
les
iret
mov
cwtl
push
fs
push
lret
icebp
fildll
movsl
cmp
shlb
mov
mov
arpl
pop
test
scas
sub
jmp
ror
filds
add
pop
inc
sbbb
test
in
push
or
rorl
mov
push
push
popf
inc
pop
lret
fidivrl
outsb
dec
jmp
and
inc
adc
int3
test
test
fisubl
adc
or
push
gs
sbb
cs
push
fidivrs
rolb
lds
mov
push
sbb
mov
pop
xor
mov
cmp
out
test
lahf
ljmp
xor
fstl
mov
pop
orb
insw
clc
dec
outsl
insl
or
lcallw
nop
out
sti
mov
es
jae
cs
mov
movsl
mov
push
insl
push
je
cwtl
xor
jne
rolb
cmp
jge
lea
adc
xlat
loopne
cwtl
ja
jb
imul
mov
inc
inc
cmp
or
or
mov
pop
cwtl
data16
fdivp
sbb
add
mov
rcr
loopne
dec
lods
aad
xor
push
dec
push
insb
faddl
jnp
flds
jnp
out
cli
pusha
bswap
test
insb
shll
add
fsincos
and
sub
adc
jmp
sbb
cmpl
cmp
xchg
cmp
cmp
int
push
mov
inc
jnp
adc
pop
insl
pop
shr
fisttpll
imul
fcomi
inc
cltd
arpl
mov
movsb
dec
cmpsb
fimull
push
je
pop
fldt
sbb
imul
cmp
xchg
dec
rcll
lret
pop
fcoms
fstl
push
data16
iret
bound
cmp
jecxz
cltd
cmp
setno
inc
inc
push
rolb
or
hlt
push
mov
test
jo
int3
add
pop
sbb
add
mov
pop
roll
mov
mov
pop
jp
dec
sbb
mov
xorl
dec
mov
jecxz
aad
jge
cmp
ds
jle
and
cmpsl
fsubl
aaa
jge
mov
cld
jno
mov
sub
adc
push
repz
jo
or
repz
mov
add
notl
cmp
in
mov
sbb
cmpsl
sbb
or
pusha
add
or
mul
insb
subl
lods
pop
out
testl
test
pop
data16
or
out
pop
sti
outsl
bound
jp
sub
xchg
mov
std
shlb
daa
dec
les
mov
lcall
mov
test
or
lods
rol
dec
mov
dec
or
or
out
out
jns
cmp
cltd
mov
add
xchg
mov
movsl
cmpsl
out
insb
and
loopne
mov
cli
lock
filds
shl
jle
inc
stos
mov
bound
add
testl
nop
aaa
xor
das
fdivl
or
inc
dec
aas
mov
lods
jno
in
mov
je
cmp
int3
xor
jnp
sti
pusha
aas
repz
fstl
mov
mov
shll
sarb
push
xor
add
sub
cmpsl
mov
fadds
mov
dec
sub
and
mov
pop
daa
mov
call
cmp
enter
sbb
insl
rorb
adc
outsb
js
mov
xorb
cmp
clc
andb
mov
xor
mov
punpckhwd
xor
push
das
jae
sub
mov
mov
fcomps
sbbl
mov
xchg
jno
and
push
mov
jge
xchg
cmp
outsl
data16
jnp
fidivs
or
sbb
push
cmp
jnp
insb
loop
dec
xchg
xchg
std
push
ljmp
mul
push
cli
jne
scas
stc
and
adc
inc
es
sub
test
popa
outsl
pop
mov
push
sub
mov
sub
aam
add
je
mov
cltd
scas
mov
div
and
movsl
cmp
xchg
ret
or
lahf
popa
add
inc
xchg
add
out
enter
in
imul
pop
loopne
js
test
cltd
jbe
jae
and
sbb
movsl
add
mov
jb
fwait
push
cmpl
movsb
mov
and
test
lds
fstps
mov
jnp
pop
dec
jg
in
cmp
xor
sub
dec
pop
mov
mov
loopne
mov
xor
mov
cmp
push
xchg
push
stc
jne
cmp
bound
mov
ret
adc
rol
in
push
lods
fptan
lret
pop
push
movsl
inc
dec
outsb
xchg
scas
das
add
adc
insb
pushf
push
addl
dec
clc
xchg
push
mov
xchg
or
sbb
mov
or
push
cwtl
out
call
inc
xor
out
jmp
pop
jle
or
test
mov
clc
sbb
aam
out
das
out
jbe
loope
mov
mov
push
push
jbe
insl
cmp
mov
inc
push
ja
mov
jp
mov
push
imul
gs
pop
and
cltd
cld
stos
gs
cmp
popa
cmp
js
pop
push
out
add
fcoml
push
sbb
adc
cmp
cld
andb
fistpll
jge
push
rep
daa
adc
lcall
aas
in
mov
jae
push
ret
pushf
jae
inc
adc
lds
sbb
mov
negb
xor
inc
or
loop
xchg
out
inc
and
sub
mov
sub
std
sbbl
nop
cmp
fisttps
dec
mov
pop
loopne
in
mov
or
scas
add
mov
fildll
mov
imul
xchg
mov
shlb
xchg
cltd
sub
leave
movups
fxch
lds
pop
ljmp
aas
xchg
stos
stos
sub
xlat
jmp
inc
inc
jge
and
push
xchg
inc
sbb
or
jp
jns
out
inc
repnz
aas
sbb
inc
cmp
int
and
out
into
fsincos
dec
jecxz
sarl
stc
addr16
push
test
jle
push
fnsave
mov
out
lahf
push
js
cld
sahf
xchg
push
sbb
fistpll
test
jnp
cmpsl
data16
movsb
sbb
rcll
cmpsl
js
cmp
xchg
pop
dec
out
pusha
cs
mov
mov
fcmovb
and
inc
mov
aam
cltd
lahf
imul
inc
std
lods
cmc
sbbb
loopne
ret
movsl
call
and
in
mov
or
cs
loop
mov
pop
mov
jecxz
sub
pop
stos
sub
pop
bswap
pop
adc
xlat
cmpsl
add
sbb
js
decl
bound
stos
inc
pop
mov
dec
mov
mov
sub
lods
inc
scas
js
push
mov
cmp
scas
test
icebp
and
xabort
pop
xor
add
sub
mov
js
lahf
repnz
mov
insl
mov
shll
js
clc
push
push
in
pop
aas
minps
pop
lods
jge
adc
add
imul
inc
dec
cltd
xchg
mov
and
dec
jmp
pop
jne
jnp
ljmp
pushf
sbb
jno
out
jnp
inc
or
fidivrs
cmp
scas
sub
lods
pop
push
jae
jb
xor
cmp
bound
push
cwtl
pop
int
mov
pop
and
inc
repnz
bound
inc
lds
outsb
cli
mov
inc
mov
and
and
in
aas
lea
pop
movsb
mov
push
in
fmuls
cmpsl
imull
or
fldt
cmp
push
adc
je
in
fisttps
cmp
aam
pop
pop
inc
nop
aad
mov
xchg
adcl
icebp
jbe
pop
movsb
sub
mov
out
insb
mov
xchg
sbb
ds
mul
pop
mov
mov
jmp
stos
push
lcall
sub
hlt
dec
mov
dec
and
enter
dec
shll
stc
cmp
roll
int3
cltd
int
and
dec
arpl
in
clc
jge
xchg
mov
push
pop
aam
sbb
in
and
cmp
shl
xor
sti
js
je
jbe
pusha
mov
fwait
movsl
ja
shlb
scas
adc
dec
xlat
insb
mov
mov
cmovae
sbb
mov
int
sbb
dec
jge
pop
daa
mov
je
mov
push
xchg
mov
sub
icebp
mov
icebp
rcl
cltd
and
adc
popa
subl
mov
xchg
arpl
mov
or
jg
scas
adc
pushf
scas
cmpsl
ret
in
sub
stc
mov
add
call
push
mov
xchg
mov
xor
and
xchg
out
cmp
paddusb
cmp
icebp
ja
pop
sbb
xor
and
mov
addb
mov
ficomps
inc
arpl
cmc
jl
add
int3
repnz
gs
lahf
sub
repz
daa
rclb
mov
and
fadd
xor
or
cli
dec
push
pop
js
loopne
int3
hlt
adc
popf
aas
hlt
adc
stos
test
pop
lcall
into
jae
lods
mov
xchg
inc
and
push
daa
or
add
repnz
int
fisttps
pusha
mov
pop
jmp
and
push
daa
mov
aam
jns
add
pushl
shlb
shll
dec
in
xor
sti
jmp
adc
sbb
test
pop
add
inc
pop
cmp
pop
ror
xor
mov
dec
arpl
xchg
icebp
or
jnp
fisubrs
and
call
hlt
cmc
dec
int3
std
mov
int
add
aas
push
call
loopne
jne
mov
divl
jae
inc
and
fldl
jne
jmp
mov
test
cmpxchg
mov
cmpl
les
push
pop
leave
out
jae
mov
adc
cltd
lds
sub
clc
xchg
hlt
fwait
mov
fdivl
and
push
lahf
mov
jne
fwait
dec
fiaddl
scas
sbb
mov
or
scas
aam
pop
stc
insb
sub
jge
or
mov
and
jae
cmp
imul
jp
jmp
xchg
js
aad
scas
ds
cmp
cwtl
repz
sbb
xchg
jnp
jo
das
or
in
mov
xor
fst
xor
and
int3
cmpsl
daa
or
rolb
push
mov
add
dec
out
push
insb
jle
fildll
sub
ss
fdivl
xchg
sub
sbb
fisubrs
rolb
mov
int
or
das
jb
aaa
xor
jb
mov
or
cld
push
int
mov
scas
in
je
jg
xchg
bound
pop
push
adc
jb
icebp
push
lods
jb
or
sub
inc
and
jmp
pop
cwtl
and
mov
nop
pop
mov
push
mov
mov
cmp
jo
push
jge
in
mov
add
ret
or
enter
jecxz
sub
fs
sbb
mov
mov
xor
jmp
inc
ret
xchg
pop
mov
andl
sbb
sbb
or
jecxz
cwtl
xchg
das
pop
mov
jno
xchg
imul
sbb
jnp
pop
insl
divl
jecxz
dec
bound
call
fisttpl
xchg
sub
inc
popf
inc
hlt
fsubrs
push
mov
xchg
jg
sbb
jnp
or
jmp
repz
in
clc
sub
shr
lods
xchg
rol
int3
icebp
divb
mov
xlat
mov
imull
mov
loopne
adc
loop
imul
dec
mov
pop
shlb
testb
sti
or
mov
scas
popa
sub
mov
lret
cmpsl
mov
ljmp
lods
ret
dec
mov
popf
loopne
mov
cld
out
dec
sbb
into
sub
xchg
out
test
jno
mov
jnp
mov
loope
addr16
xchg
and
shr
mov
fs
mov
mov
fcompl
mov
fwait
sub
mov
or
enter
xor
lds
movsl
faddp
dec
sbb
inc
mov
es
rcrb
pop
cmp
fcomps
and
push
dec
mov
stos
jo
jmp
dec
dec
or
imul
popf
je
inc
and
jo
adc
divps
push
je
in
mov
mov
and
xchg
push
mov
add
xor
or
repnz
xchg
push
in
sti
shll
sub
sbb
push
insb
add
dec
push
aam
loopne
std
jnp
add
jmp
cltd
jmp
xchg
mov
add
dec
xchg
mov
sbb
mov
push
rclb
mov
loopne
cmp
jno
dec
popa
stc
or
and
iret
nop
sbb
sub
or
mov
fmulp
push
fistl
subl
push
pop
in
jo
dec
in
xor
xchg
ret
scas
in
out
lahf
mov
lret
sbb
shlb
cmp
int
stc
jecxz
cwtl
popf
xchg
xorb
add
filds
clc
out
sti
es
or
aam
rclb
inc
std
xchg
xchg
push
lahf
mov
mov
jg
mov
lods
mov
mov
js
mov
js
fcoml
ja
test
mov
test
mov
xor
cltd
dec
pop
std
fildl
push
push
xchg
mov
pop
push
insl
jno
add
pop
add
fldt
adc
int3
imul
roll
xor
or
out
outsb
xlat
xor
mov
mov
repz
xchg
pop
scas
sbbb
fisubrs
xchg
push
repnz
lret
mov
push
xchg
mov
fldcw
lret
mov
lret
push
or
push
out
add
shr
push
push
sbb
mov
dec
pop
adc
jle
mov
cmp
dec
in
cmp
add
in
xor
ffreep
and
xchg
pushl
cmp
jae
pop
out
xor
cli
pop
mov
xor
dec
mov
iret
jno
xchg
into
sbb
into
jnp
out
mov
push
mov
fs
jns
sbb
out
jo
mov
cli
loopne
pushf
loopne
push
sub
repnz
mov
outsl
push
cmpsl
aaa
push
lret
rcl
dec
or
mov
lds
mov
mov
shrl
sub
add
jb
push
repz
repnz
test
icebp
stc
mov
cmp
jmp
ss
push
pop
pop
push
inc
movsl
lahf
pop
push
pop
shr
mov
jl
and
mov
ret
push
or
pop
pop
cmp
loop
ficoms
call
fimull
imul
push
ja
and
ret
mov
icebp
adc
scas
sbb
std
sbb
mov
mov
adc
arpl
xor
jns
icebp
negb
jle
cltd
cmp
mov
jns
cmp
inc
adc
lcall
ja
loop
mov
jp
sti
jmp
pop
cli
nop
mov
jno
popl
inc
push
xlat
push
pop
mov
mov
testb
push
sub
ja
rcrl
inc
push
cld
cmp
add
jae
fists
shr
xchg
add
jecxz
add
mov
jne
js
in
xor
enter
mov
bnd
arpl
mov
jl
push
sbb
mul
xchg
pusha
jmp
pusha
mov
inc
shrl
dec
push
fisubs
in
lahf
push
or
jecxz
js
cli
dec
mov
loop
hlt
adc
push
push
sbb
cmp
inc
cmp
fbstp
inc
jnp
js
xchg
daa
cmp
jno
adc
push
xchg
rol
dec
jbe
xor
int3
lods
lcall
sbb
and
inc
pop
xor
imul
lcall
sub
imul
fsubl
std
or
idiv
rcrl
add
dec
sbb
stos
scas
xchg
xor
jmp
cmp
cmpsb
mov
repz
lret
lods
add
lds
xchg
and
xbegin
arpl
aam
fisubrl
lds
out
cmp
sub
pushf
addr16
pop
cltd
fnstenv
inc
pop
push
imul
cmp
cmp
lahf
dec
cmp
fdivrs
or
add
jl
inc
or
je
add
mov
test
cmp
out
dec
subb
fsubr
pop
mov
test
mov
lea
xchg
aam
push
pop
push
fsubl
pop
inc
test
cmpsl
inc
call
cmc
and
adc
inc
rorb
push
pop
and
pushf
adc
movsl
mov
dec
mov
gs
or
popa
int
sti
lahf
test
inc
xor
les
jne
ja
popa
ret
push
mov
lods
sub
adcl
mov
sbb
into
pop
adc
dec
ss
push
jb
pop
shlb
adc
inc
psrlq
cltd
mov
in
clc
sbb
jmp
shrb
mov
mov
xor
inc
cmp
pop
iret
loop
shl
mov
clc
dec
repnz
push
std
outsl
push
xchg
pop
aaa
test
mov
or
or
pop
adc
pop
mov
jg
mov
push
xchg
cmp
in
xchg
dec
pushf
xchg
xchg
dec
sub
call
fiadds
pop
pop
add
pusha
sbb
ror
sub
shr
dec
es
xchg
aaa
test
sub
add
and
imul
push
jge
shlb
push
sbb
add
shl
push
lret
je
bnd
xchg
xor
scas
sub
dec
mov
jne
or
lds
push
out
lock
sbb
adc
cmp
int3
pop
mov
sbb
jg
nop
movsb
mov
jo
push
sub
cmpsl
adc
sub
jnp
dec
and
aam
jecxz
cmp
lcall
aam
icebp
xor
test
nop
jbe
fcmovbe
and
adc
cmpb
scas
movnti
es
jnp
push
test
rorb
icebp
icebp
mov
xchg
repz
rol
and
or
dec
sub
dec
mov
in
mov
fistl
sar
shrb
inc
cmp
dec
pushf
adc
outsl
adc
push
mov
adc
push
imul
mov
push
cld
repz
call
into
mov
dec
aas
dec
dec
jg
dec
jge
push
jmp
mov
mov
fistl
loopne
test
filds
dec
mov
hlt
popa
add
enter
xchg
lods
int3
xor
rcrl
mov
lret
mov
or
imul
orl
loop
call
dec
xor
adc
test
mov
dec
mov
mov
loope
xchg
xchg
scas
xchg
xor
les
mov
cli
inc
jae
inc
gs
stos
dec
mull
loope
bound
stc
jg
lock
lock
xor
pop
popf
cmp
out
mov
cmp
xor
or
jl
sub
aad
jne
sbb
jns
mov
int3
adc
outsl
cmp
inc
je
mov
sbbb
jae
call
jbe
stos
push
add
sub
mov
inc
xor
and
dec
mov
lods
mov
outsl
ret
fucomp
mov
jae
xchg
lea
push
leave
jne
xchg
jb
dec
lahf
xchg
rol
sub
cmp
inc
sbb
cmp
idivl
dec
dec
imul
ss
sub
and
mov
and
xor
xchg
push
ljmp
sahf
in
mov
stos
mov
mov
mov
mov
jo
cmp
addr16
sub
sbb
mov
pop
jbe
jp
aas
xchg
xor
sub
or
jl
jecxz
mov
movsl
push
popa
push
stos
mov
mov
pop
shrl
mov
cmp
add
lcall
fiaddl
sbb
movntps
jae
or
aam
mov
adc
sbb
dec
cmc
loope
gs
nop
icebp
iret
sti
leave
jge
fmul
adc
ja
out
fildl
cmc
and
mov
sbb
push
xchg
adc
pop
dec
ret
imul
add
push
or
mov
cltd
lods
pop
pop
daa
cli
pushf
int3
xchg
les
jb
leave
push
jg
adc
insl
in
push
movsl
pop
sbb
outsl
xor
add
int
popa
push
xor
xchg
std
mov
jb
sbb
jbe
data16
bound
jle
idivb
and
mov
loop
add
dec
out
leave
out
leave
outsl
push
outsl
dec
jle
adc
push
add
add
pop
xchg
ds
movsb
add
fildl
jge
pop
xchg
lods
and
jo
pop
cmpb
aas
inc
outsb
aaa
cmp
push
jg
or
cld
ss
fsubrs
mov
sub
mov
gs
stc
aas
decl
push
fwait
push
lret
sbb
mov
push
popf
in
lret
pop
mov
and
ret
sbb
fstp
and
jmp
aam
cmp
sub
mov
inc
outsl
mov
lcall
imul
jo
xor
xor
mov
push
insl
xor
add
add
add
fs
jmp
jp
dec
fdivrl
sbb
out
cmp
mov
lea
roll
test
mov
mov
test
lahf
pop
adc
inc
rclb
push
arpl
loop
sub
cld
mov
into
clc
or
mov
push
cltd
les
sbb
adc
test
out
popf
imul
or
js
int3
push
dec
add
mov
dec
cmpsl
shll
lods
rcll
jb
sub
imull
cmp
push
test
jae
sbb
sub
mov
jle
inc
sbb
in
lods
and
rclb
je
rcll
xor
cmc
lea
or
sbb
dec
loope
mov
push
sbb
cs
pushf
xor
rolb
scas
dec
mov
or
dec
incb
insl
stos
mov
das
aam
adc
sbb
dec
dec
pop
mov
gs
xchg
jge
dec
jbe
xor
test
cmc
aad
aam
xlat
icebp
subl
inc
cmp
mov
fsts
mov
cmp
xchg
adc
cmp
cs
pop
or
cmp
push
aad
sub
adc
and
mov
lcallw
imull
outsb
popa
shrl
shll
add
xchg
cmp
pop
in
nop
movups
mov
add
sub
fistps
std
lods
fcmovu
arpl
clc
cmpsl
mov
or
outsl
pop
js
aas
std
inc
push
pop
xor
mov
stos
cltd
fdivrl
je
xor
xchg
pushf
mov
xchg
jbe
lds
inc
outsl
lods
int
out
pop
dec
push
icebp
xchg
loope
addr16
aam
inc
fs
and
jmp
push
inc
or
xchg
out
aaa
loop
mov
xor
pop
pop
aaa
fbstp
or
ds
add
jbe
outsl
jb
push
sub
push
mov
adc
int
cmp
sub
sbb
or
call
mov
xchg
outsb
pop
pop
cld
fcmovnb
adc
ret
orl
aaa
inc
insb
aaa
ficompl
pop
ss
out
jb
dec
mov
lret
push
adcb
cmp
pop
aam
arpl
test
jmp
cld
out
cmpsl
stos
lods
jb
push
sahf
push
and
xchg
xchg
dec
aas
and
mov
adcb
xor
mov
dec
bound
mov
xor
xor
insb
xchg
addr16
loop
fcomps
jnp
cld
xor
lock
cmpb
imul
mov
mov
sbb
rcrb
aaa
popw
sub
repnz
das
fsubl
sbb
cmpsb
icebp
push
push
stc
xchg
xor
mov
push
push
arpl
test
adc
pop
inc
out
cmc
lock
sub
mov
and
or
cmp
adc
andb
pop
mov
add
int3
pop
fcmovnu
inc
jg
adc
mov
lret
adc
add
mov
insl
push
dec
sahf
out
or
dec
fwait
test
les
xchg
sbb
aas
xor
pop
dec
push
or
mov
ror
mov
inc
and
in
fisttpl
pusha
js
es
imulb
pushf
test
mov
sahf
dec
insb
roll
in
dec
leave
arpl
iret
aam
ret
pop
xorl
lds
in
leave
clc
insb
clc
fsts
sub
fmull
int
dec
lods
inc
lea
mov
std
jo
sbb
test
imul
out
mov
rcrb
imul
lods
jo
inc
cmp
cli
dec
xchg
sbb
mov
xor
lcall
ret
push
pop
icebp
cmp
shll
nop
sbb
lods
xchg
cmp
in
and
lahf
cmc
push
push
mov
iret
jle
daa
jmp
les
outsl
cmc
xchg
andb
push
pop
inc
mov
jno
and
jp
roll
xchg
or
out
add
outsl
cmp
rorb
cvtpi2ps
sahf
movsl
cli
xchg
mov
mov
sub
push
dec
and
pushl
xchg
cmpb
mov
or
mov
mov
xlat
loope
insl
mov
lcall
pop
cmpsl
dec
in
sti
cmp
or
xchg
push
or
adc
pop
jecxz
out
push
stc
xchg
test
sarl
sahf
mov
mov
dec
inc
inc
out
lds
mov
jbe
pop
cwtl
insb
mov
mov
aaa
inc
or
lea
lret
lea
sbb
mov
xor
scas
jnp
outsb
fildl
pop
jo
push
or
mov
xchg
push
repz
sub
shr
or
into
mov
arpl
cli
les
dec
pop
js
pusha
mov
dec
add
out
inc
std
mov
mov
out
sub
lret
and
enter
push
iret
dec
xor
jae
sbb
sahf
addb
in
sbbb
lea
std
cs
or
xchg
xor
xchg
iret
lods
add
ret
jb
daa
int3
inc
mov
and
into
dec
popf
addb
repnz
xor
or
mov
bnd
scas
fbld
ret
rorb
jle
jl
jo
mov
jle
xchg
pop
call
xchg
rcrl
mov
stc
repnz
in
adc
xchg
inc
mov
sub
fwait
or
ds
addr16
lods
insb
shll
push
lcall
jne,pt
push
inc
xorb
scas
jp
jnp
sub
movsb
sbb
test
lahf
xchg
jnp
fidivrs
lret
into
mov
mov
jbe
std
sub
pop
cs
leave
pop
xchg
bound
push
icebp
pop
or
inc
jge
das
xchg
fsubr
ficompl
ret
fdivs
orb
adc
and
pushl
jno
mov
sbb
sub
jge
sbb
cltd
xor
movsl
cli
shr
mov
jne
pop
fwait
pop
outsl
lock
inc
pop
outsl
aam
push
loope
daa
inc
cmp
mov
xchg
fsubrl
fwait
xor
inc
push
xchg
cs
les
nop
mov
mov
divl
xchg
fisubrs
cmp
je
mov
or
push
sbb
cld
xchg
push
dec
xchg
xor
or
sub
dec
add
cmp
sbbb
jbe
mov
mov
js
call
add
fimuls
sbb
sub
pop
mov
clc
es
pop
lcall
mov
cmc
cwtl
lcall
pop
mov
shrl
adc
out
shl
test
or
faddp
leave
test
add
pop
cmc
inc
mov
adc
add
loopne
cmp
movsl
test
test
das
push
mov
rolb
inc
xor
loope
lods
push
dec
ja
mov
ljmp
inc
movsb
rorl
xor
sbb
mov
cmp
and
mov
push
cli
or
push
add
ds
sti
insb
and
loope
xor
push
aas
cld
pop
lahf
adc
std
inc
into
mov
pop
int
fsubr
mov
lahf
push
nop
les
xor
orl
xlat
lods
xor
ss
add
inc
aaa
pop
mov
int3
jns
out
outsb
gs
sbb
or
pop
add
jg
push
xchg
xchg
mov
dec
aas
jge
stc
inc
scas
repz
xchg
cld
sbb
dec
inc
push
idivb
push
movsb
int3
pop
jno
aam
push
popf
movl
cmp
fsubrl
xor
push
xor
push
mov
insl
inc
jmp
cli
stos
loope
out
test
pop
xchg
or
es
das
pop
sbb
rcr
in
out
and
lcall
push
push
lahf
adc
loop
sahf
daa
jp
es
mov
sbb
shr
mov
loopne
add
dec
adc
push
adc
ljmp
imul
aas
lret
imul
push
mov
mov
dec
add
sub
jo
and
cld
in
stos
lcall
dec
repz
mov
in
add
scas
dec
jne
xchg
push
and
mov
sub
add
mov
adc
inc
dec
inc
xor
fldl
filds
outsl
sub
cltd
add
cld
leave
mov
pusha
mov
jle
popf
scas
fistps
and
pop
mov
mov
fildll
add
and
xor
add
mov
scas
mov
lret
call
jl
mov
subl
lcall
ss
insl
dec
mov
cmp
pushf
jp
xchg
fcomps
sbb
xchg
pop
and
inc
fisubrl
inc
jns
call
adc
push
cmp
inc
cmpb
jae
cli
cmpsl
sbb
es
mov
arpl
xor
sti
shl
and
xchg
data16
or
jp
icebp
cmc
pop
mov
dec
cmp
push
outsb
pop
add
xor
orl
ret
lods
mov
sbb
sti
inc
inc
into
stos
inc
leave
in
sti
mov
xor
outsb
push
popf
out
mov
and
pusha
cltd
push
and
dec
int3
cs
push
jnp
cmp
push
or
imul
jl
xchg
mov
dec
and
or
sub
loop
bound
ds
test
stc
mov
mov
cli
push
aam
repz
lret
xor
mov
fsubs
lds
sub
rcll
inc
sub
xchg
mov
scas
scas
aaa
xor
loop
inc
dec
cmc
pop
mov
outsb
sub
xor
and
add
in
pop
mov
hlt
pop
aad
insl
sti
shlb
fidivl
out
lcall
sar
es
xor
popa
jle
incb
lods
mov
arpl
add
call
fidivs
pop
mov
jge
shlb
mov
mov
insb
mov
pop
inc
mov
xchg
popf
in
pop
inc
data16
xor
lret
movsl
dec
sub
sub
lds
jle
andl
or
scas
call
jecxz
scas
mov
and
adc
test
xchg
js
insb
dec
push
outsl
dec
cmpsl
mov
arpl
stos
add
add
stc
push
cmp
testl
call
sbb
mov
test
lods
and
jp
jo
cld
loop
mov
jle
les
leave
mov
stc
sub
scas
mov
lea
jg
rcrb
cmc
xlat
ret
jbe
mov
mov
pop
lods
into
mull
cmpsb
insl
stos
dec
test
ficompl
out
aam
cmp
jbe
cmp
mov
enter
imulb
pop
xchg
sbb
xor
out
lret
out
pop
or
aad
and
mov
sti
movsl
mov
xchg
rolb
ja
test
out
stc
fdivl
clc
push
lret
das
jp
outsl
or
push
xor
push
mov
shrb
mov
ja
ja
out
fwait
xchg
or
mov
addr16
pop
mov
cmp
adc
cmpsl
test
and
enter
xchg
mov
adc
push
mov
nop
stos
pop
out
movsl
rcr
loopne
adc
xchg
pop
call
mov
lret
in
sahf
out
sub
push
and
adc
stos
aaa
dec
ficomps
cmpsb
stos
pop
std
sti
add
adc
ret
cmp
push
and
fldenv
push
pushf
daa
in
mov
insb
cmp
inc
testb
dec
mov
xchg
in
or
or
adc
out
mov
inc
dec
add
rcrl
pop
aas
jl
cmpsl
and
cmc
cltd
mov
push
test
idivb
jbe
aam
rcll
fidivrl
add
push
insl
xchg
fcoml
out
xchg
lea
or
pop
mov
adc
fimull
pop
int3
inc
inc
mov
ficoms
adc
imul
mov
clc
fucomp
outsl
xchg
add
mov
mov
push
ja
dec
and
and
addr16
push
xchg
repz
adc
sub
stos
pop
ljmp
aaa
sbb
add
inc
and
xchg
div
mov
pop
fstl
mov
ret
pop
mov
and
stos
pop
das
mov
jp
in
xor
push
sub
hlt
nop
sti
dec
or
sbb
mov
cli
mov
push
pop
shll
xchg
inc
inc
add
sub
movsb
stc
loopne
dec
scas
iret
icebp
movsb
inc
push
push
cmpsl
mov
jg
pop
out
pop
pop
test
jp
jne,pt
xchg
jne
push
add
mov
pushf
sub
xchg
ja
push
rcr
mov
movsl
rcrb
adc
jne
cmp
inc
mov
sub
repz
popf
push
insb
or
int3
inc
push
xchg
dec
and
rorb
xchg
sub
mov
outsb
hlt
cmc
cli
cmp
pop
sahf
jnp
mov
sub
gs
decl
in
repz
scas
test
add
push
or
xor
imul
adc
pushf
jmp
cwtl
xor
ret
aam
stos
loope
push
in
pop
movsl
fisttps
fimull
clc
mov
push
shl
sub
cmpsl
mov
loop
pop
push
mov
pop
or
push
cmp
bound
hlt
ffreep
hlt
cmp
push
stc
je
cmpsb
sub
fisttpll
mov
int
push
sbb
pop
mov
jmp
outsl
adc
xchg
push
mov
rorb
mov
jmp
loope
cmp
inc
xchg
lcall
rorb
repnz
cmpsl
pop
or
cmp
add
jno
cmpb
jnp
dec
bound
lahf
xchg
xor
stos
cmp
std
in
dec
das
xor
enter
and
dec
insl
sub
mov
push
pop
adc
jecxz
lds
int3
add
mov
xchg
cmp
and
adc
pop
xchg
rcl
dec
test
push
jg
and
sub
pop
sbb
stc
pop
iret
aad
mov
and
ss
inc
mov
jp
sub
data16
sti
dec
lea
iret
rcll
inc
stos
sarl
xchg
jbe
mov
sub
lahf
jno
cmp
mov
xchg
insb
fisttps
les
test
xor
insb
inc
stos
cmp
iret
ret
xchg
ret
adc
call
repz
jno
and
js
cwtl
pop
jae
stc
cld
mov
pop
add
pop
inc
lods
out
sub
adc
adc
dec
push
jle
cltd
jle
inc
pop
jle
adc
inc
aas
jae
enter
xchg
xchg
stc
mov
call
cmc
cs
cs
xchg
in
int
add
aam
lret
mov
jmp
mov
cmp
jbe
adc
and
push
test
push
incl
movsb
adc
add
mov
cmc
je
xchg
push
pushf
jge
icebp
lods
stc
enter
aaa
lea
sti
sti
push
pop
sbb
mulb
push
lods
dec
pushl
sbb
je
adc
sub
sub
fidivrs
mov
lahf
xchg
ret
add
cltd
or
mov
out
lret
fs
add
or
push
sub
shrl
cwtl
scas
xchg
mov
xor
push
in
mov
adc
sbb
pop
lcall
imul
pop
andb
and
fstp
jecxz
sub
shrb
out
pushf
dec
jl
lcall
negl
pop
flds
mov
popa
sbb
xchg
inc
arpl
stos
sbb
fisubs
mov
imull
adc
pop
jg
pushf
cmp
clc
jmp
or
sub
cmpsb
cmp
inc
jns
mov
and
es
loope
adc
int3
bound
mov
pop
in
in
mov
lods
or
mov
inc
in
xchg
clc
push
loopne
cmpl
repnz
xlat
psubusb
push
cltd
push
mov
push
jae
xchg
mov
xchg
in
lds
dec
ljmp
lods
and
ret
fsubrp
push
jmp
out
test
mov
into
dec
jns
adc
mov
and
ljmp
arpl
scas
jo
mov
movsl
inc
std
aas
sub
push
mov
mov
mov
testl
cmpb
push
sahf
mov
sub
repnz
sbb
je
lcall
nop
dec
addr16
inc
mov
mov
sub
mov
push
pop
loop
xor
leave
mov
xor
mov
mov
aam
fcomp
xchg
sub
mov
icebp
jle,pt
inc
pop
lea
xor
lcall
hlt
test
repnz
mov
jp
mov
icebp
pop
test
pushf
cmp
xor
dec
aam
xchg
in
xor
push
mov
or
rolb
mov
add
pop
sub
or
push
jle
test
add
and
mov
out
push
sub
addl
rclb
stc
adc
jbe
sti
mov
leave
fdivrp
test
jmp
imul
enter
jp
repz
cmpsl
mov
dec
aad
enter
pop
push
stc
jmp
xorb
lods
scas
test
push
cmp
mov
mov
mov
fildl
repz
push
addr16
movsl
pop
iret
lahf
sarl
mov
popf
imul
cmp
inc
inc
adc
sbb
repnz
sub
xchg
pop
mov
std
ja
adc
outsb
xchg
mul
cmp
xor
fdivrp
test
ret
sbb
xchg
ja
std
repnz
push
mov
sbb
add
adcl
xchg
testl
in
scas
add
shl
ja
and
push
sti
cltd
int3
push
push
mov
mov
pop
mov
xchg
movb
jne
ds
outsl
lds
imul
scas
dec
add
in
or
fsubp
movsb
mov
lahf
int3
mov
and
mov
lea
sti
jge
lock
sub
or
mov
adcl
insb
lahf
cwtl
repnz
or
in
je
inc
popw
or
das
outsb
test
int
scas
or
out
mov
repnz
scas
inc
jns
in
push
jmp
push
push
addr16
mov
jne
xchg
in
mov
push
mov
ljmp
or
sarb
sub
pushl
in
xor
push
mov
xchg
xor
shlb
inc
add
cs
pop
test
jmp
aas
adc
aas
scas
mov
mov
cmp
mov
jg
cmpsl
fmul
aaa
pop
pop
jg
adc
stos
cmpsb
jmp
out
mov
fiadds
iret
sbb
ret
and
addr16
sbb
jbe
inc
xchg
insb
cli
xchg
jmp
lods
mov
pop
and
sahf
push
scas
hlt
int
je
mov
push
adc
cmpl
fimuls
lcall
testb
fs
out
sub
add
lock
incl
scas
int
adc
jns
push
lret
std
daa
sbb
push
jecxz
shl
hlt
imul
inc
outsl
sbb
aam
or
out
leave
repz
fidivrl
icebp
stc
int3
cs
subb
push
icebp
cltd
jp
xchg
mov
stc
mov
mov
xor
sub
cltd
ret
je
dec
mov
and
aaa
add
pop
adc
ret
mov
or
lcall
pushl
jno
add
pop
cltd
pop
xchg
cmp
mov
push
xlat
jne
and
ret
add
cli
fsubs
rcrb
jg
xor
add
push
mov
inc
add
int
dec
fldln2
aad
fstpl
icebp
fimuls
fists
pop
sahf
push
mov
mov
sbb
xor
ja
add
mov
mov
aam
popa
sahf
mov
aad
out
neg
xor
rcrb
push
xchg
rcrb
jnp
fnop
adc
mov
mov
cmp
imul
mov
ud0
mov
xchg
out
bnd
movsb
lret
xor
es
push
and
cmpsb
call
das
movl
jbe
jnp
jae
mov
cmpsb
mov
cmp
nop
sbb
cmpsl
cs
push
lds
jge
mov
mov
sbb
daa
or
scas
fmulp
in
test
lock
aam
clc
jecxz
lods
jae
pop
cli
aas
jp
movsb
imull
dec
mov
inc
lods
cmpsl
neg
pop
add
mov
std
cltd
dec
sbb
insl
movsl
pop
cltd
xor
or
in
arpl
arpl
js
imul
scas
mov
lods
dec
pop
test
pop
dec
aaa
leave
jne
pop
pop
imul
sti
xchg
ljmp
jp
lods
cli
lds
and
les
pop
mov
fdivrl
jno
aam
pop
aas
loop
jle,pn
jge
sahf
adc
push
sbb
mov
daa
cld
sarl
sbb
xchg
and
cmc
bound
mov
pop
in
ljmp
xchg
sbb
inc
jb
mov
and
jge
mov
mov
sbb
xor
add
outsl
ret
arpl
in
or
mov
xchg
cmpsl
out
and
push
mov
push
es
into
popa
add
mov
or
cmp
adc
mov
pop
mov
repz
js
inc
out
test
test
push
mov
push
out
xor
cltd
int3
dec
jae
lret
sub
adc
leave
stos
pop
aad
ficomps
aaa
mov
dec
rcll
or
sbb
cmpsl
xchg
or
pop
and
rorb
cld
push
out
popf
lock
xor
shrd
add
sub
adc
xor
out
fs
ds
icebp
cwtl
sbbl
sub
aad
mov
loop
clc
cmp
out
pop
pop
arpl
addl
lods
inc
incl
lods
mov
aaa
std
leave
push
dec
push
cmpsb
sub
adc
mov
inc
in
mov
imul
imul
mov
pop
inc
jl
ds
push
dec
daa
cmpsb
or
adcb
insb
and
add
dec
jg
cmp
sub
in
xchg
jge
ret
out
int3
cmp
data16
stos
cmp
cltd
std
out
sub
dec
pop
popa
pop
ficompl
mov
lods
movsb
inc
adc
sbb
mov
das
pop
jecxz
fildll
mov
cmc
loopne
xchg
loopne
outsb
or
mull
cmpsl
out
arpl
ljmp
dec
lret
jbe
inc
loopne
jle
mov
sbb
scas
repz
jg
repnz
dec
fnsave
and
dec
add
xor
cltd
imul
repnz
test
mov
or
jnp
xorl
popa
dec
add
sub
lret
adc
sub
inc
cltd
dec
movl
jmp
cmpb
addr16
mov
mov
test
or
xchg
lods
das
xchg
cld
repnz
cmpsl
icebp
outsl
xor
push
cs
aam
icebp
pop
xchg
inc
push
cld
js
scas
lods
mov
lods
pop
sub
dec
out
adc
imul
aad
adc
mov
loopne
rorb
mov
lea
inc
add
scas
sbb
jbe
lret
ja
mov
aam
pop
das
add
jmp
or
lods
adc
or
sub
push
lret
add
push
enter
mov
adc
dec
fidivs
pop
aad
ljmp
pop
dec
dec
ja
cmpsb
and
test
mov
or
mov
cmp
sbb
test
loopne
ja
jo
xacquire
mov
push
inc
xchg
movsl
loopne
cmpsl
ret
pop
xchg
and
sub
jecxz
cmpl
pushf
or
lcall
pushf
xchg
fldl
mov
movsl
lcall
mov
mov
fstl
or
loopne
sbb
lahf
jns
jno
pushf
mov
dec
and
movsl
loope
mov
dec
inc
xor
dec
repz
pop
test
lret
inc
fbstp
addr16
xchg
cltd
mov
or
mov
dec
test
mov
lahf
mov
sbb
add
jl
dec
gs
jecxz
lret
sub
cmc
lds
imul
jnp
in
mov
xlat
inc
cwtl
jne
les
int
icebp
arpl
cmpsb
cld
xor
jmp
jnp
leave
pop
call
loopne
loop
cmp
shrb
popf
xchg
jge
add
jnp
sbbb
into
or
shrb
decb
and
dec
and
addb
push
shlb
outsb
add
fisubrs
das
aam
and
cs
pop
out
dec
or
xor
sub
jo
or
repnz
sub
pop
loop
fdivrs
pop
jo,pn
add
push
inc
insl
sahf
movl
jae
out
inc
xlat
pushf
pop
inc
in
inc
dec
mov
cmp
lret
lahf
dec
aam
and
fadds
xor
xor
repnz
push
cli
ljmp
push
push
add
push
xor
je
jno
shlb
jne
ds
pop
pop
or
jecxz
cmp
or
fdivrp
dec
jnp
xorl
cmp
fcoms
xor
cltd
addr16
xor
mov
mov
and
test
rorb
loope
cmc
adc
std
je
cld
jnp
popa
mov
push
mov
push
pop
inc
out
dec
xor
ficoml
mov
pop
rclb
xchg
sub
enter
xchg
xor
iret
cld
cmp
push
bnd
mov
rcl
frndint
fldl
in
shr
loope
mov
in
icebp
js
into
adc
pop
jmp
mov
or
jb
cmp
imul
jo
add
push
pop
or
jge
xchg
push
in
shrl
pop
and
pop
shl
inc
rcll
insl
jno
in
mov
xor
mov
push
mov
ss
lds
cmp
dec
xchg
cmpsb
rcl
test
inc
cmp
sub
mov
daa
mov
stc
sub
lods
movsl
cmp
xchg
idivl
out
xchg
test
aas
dec
add
gs
imulb
cmpsl
int
xchg
pop
repnz
xor
popf
int
sahf
into
addr16
pop
fwait
or
jno
rclb
mov
push
repnz
rolb
dec
pop
shlb
sbb
push
push
mov
ret
jle
movl
cmpsb
es
mov
stc
xor
cltd
rolb
loopne
sub
pop
pop
push
je
sub
push
cmp
jg
cld
fs
mov
mov
rcrl
fs
int
lds
mul
jge
dec
shlb
call
fimuls
add
jbe
clc
fs
es
test
stos
sbb
xchg
push
repnz
lock
add
fs
sub
jns
sbb
adc
mov
fwait
out
xchg
mov
pop
insl
repz
push
les
mov
stos
cld
into
shlb
int3
adc
out
mov
clc
icebp
shlb
sbb
insb
sbb
fcoms
jbe
xchg
sbb
adc
iret
mov
push
daa
xor
fs
fdivrl
mov
mov
leave
dec
xchg
dec
push
outsb
sub
clc
stos
cmc
pop
pop
pop
repz
aas
add
icebp
stos
xor
jae
jno
mov
fwait
push
fwait
mov
pop
dec
push
imul
or
mov
inc
adc
push
test
xor
dec
ja
outsb
xchg
jno
dec
imul
jge
fwait
mov
addb
xchg
aam
mov
bound
mov
jp
mov
jg
mov
addr16
ss
cmp
in
push
push
or
shrb
fdivs
ds
insl
ret
dec
es
xor
call
xchg
push
divb
cmp
mov
xor
dec
mov
sub
xchg
and
mov
popa
mov
jge
scas
adcl
dec
jo
rorl
fisubs
nop
mov
jg
enter
mov
mov
pop
pusha
xor
sub
xchg
sbb
fs
mov
adcb
insl
sub
pop
dec
jle
pusha
fimuls
incb
fmuls
mov
xorl
aaa
imul
andl
or
es
addr16
ja
push
jo
sarl
out
popf
pop
loop
sub
pop
mov
xchg
xchg
mov
fcomip
push
ja
addr16
daa
idiv
cwtl
scas
push
lret
cmpsb
xchg
cmp
and
xchg
stos
pop
cmp
es
gs
mov
inc
push
enter
cmpsl
xchg
push
sub
lret
xchg
or
leave
bound
pop
push
mov
pop
adc
lods
and
call
pop
enter
sbb
ss
xchg
rcrl
cmp
inc
adc
mov
outsl
jmp
inc
mov
clc
inc
iret
int
xor
push
rcrb
adc
cmpb
leave
adc
int3
lret
sub
in
cmp
loope
subl
add
cmp
pop
and
inc
imul
daa
add
data16
cmp
daa
je
dec
out
add
mov
pop
xchg
fdivrl
jmp
adc
jp
cld
sub
push
mov
lahf
mov
dec
movsl
jl
sub
sub
pop
or
or
ss
sbb
push
push
aaa
enter
out
mov
sub
ss
push
sahf
mov
mov
fistps
jbe
dec
sbb
push
ficomps
jl
and
ljmp
enter
jo
lahf
cmpsb
sarb
xchg
jmp
leave
mov
and
dec
out
adc
add
mov
cmpsb
inc
data16
cmpsl
push
lock
mov
test
adc
popa
out
addr16
and
fisttpll
insb
xchg
sub
push
pop
xchg
loopne
std
xchg
imul
in
enter
xchg
or
out
add
xchg
hlt
rclb
ds
cwtl
fs
into
dec
adc
push
subb
out
mov
rorl
scas
bound
ficoml
lcall
mov
mov
int3
inc
ret
or
dec
push
pop
shlb
test
push
jno
movsb
je
mov
decb
scas
cmp
mov
pop
mov
ret
leave
nop
cmpl
mov
fwait
dec
add
and
and
outsl
enter
lock
icebp
call
xchg
rcpps
sub
out
mov
pop
aam
lods
aas
xor
mov
shlb
aaa
fimull
and
inc
xorl
inc
inc
dec
pop
xchg
sbb
mov
or
push
sbb
lods
dec
and
mov
inc
cmc
stos
int
arpl
stos
cwtl
jecxz
sub
cmpsl
sub
mov
shl
fnstenv
test
gs
imul
fcomip
enter
xor
pop
int
sbb
fsubr
mov
movsl
popa
mov
testl
es
aaa
aad
outsl
mov
xchg
xor
xor
ljmp
shll
and
mov
mov
ret
and
jb
bound
sahf
rcrb
push
jnp
sbb
cmpsl
subl
je
cwtl
outsb
jl
mov
das
cmp
inc
mov
or
test
rcll
cli
js
cmp
mov
mov
mov
lea
xor
dec
stc
fstps
or
mov
lret
pop
xor
add
mov
xor
lret
cmp
mov
bound
pop
scas
insb
mov
les
adc
lds
mov
jl
cli
cmpsl
popa
xchg
or
sub
inc
lahf
ss
inc
in
adc
or
daa
add
out
bound
cmpsl
sbb
add
ret
xchg
icebp
fnstcw
insb
fwait
and
cltd
in
cmp
push
mov
outsl
sbb
mov
mov
cmpsb
add
sub
mov
and
push
std
fistpll
iret
adc
adc
adc
pop
pop
xchg
mov
fimull
bound
adc
mov
repnz
add
dec
jp
lcall
jne
insl
cli
aas
in
push
popa
dec
aas
repnz
mov
jbe
sbb
and
lea
repnz
movb
add
jge
in
add
icebp
pop
push
adc
and
mov
push
hlt
and
in
and
dec
cmc
sbb
add
fyl2x
xor
sub
shrb
pop
stos
mov
movsb
testl
mov
fcoms
andb
lahf
js
jge
hlt
divb
test
mov
push
or
and
mov
mov
cmp
les
dec
pop
pop
xor
cmp
ret
pop
lock
cmp
icebp
mov
sub
add
add
push
mov
adcb
push
in
das
arpl
and
insl
out
xchg
in
push
push
mov
and
scas
mov
lds
inc
inc
xlat
sar
pop
aad
mov
xchg
pop
jle
xor
and
xchg
nop
adc
iret
sub
adc
scas
add
cmc
in
jae
cmpsb
push
movsb
out
sti
int
dec
decl
fcmovne
lret
mov
jns
mov
mov
sbb
inc
xor
rcrb
stos
xchg
in
stos
inc
std
stos
xor
int3
pop
jno
jg
inc
popf
jns
xor
clc
adc
mov
xchg
lods
movsl
pop
ss
cmc
fsubs
push
add
ret
enter
xchg
leave
or
jmp
jl
into
rorb
mov
mov
pop
jp
mov
sub
cmp
int
hlt
jmp
add
repnz
cmpsb
int
jbe
sbb
pop
dec
daa
data16
out
ret
bound
stos
xchg
cmpsb
mov
mov
insb
mov
sbb
mov
cli
cmp
outsl
adc
aad
xchg
cmp
in
ja
xor
jbe
stos
xlat
sub
sub
push
dec
push
inc
adc
pop
adc
sbb
sar
popf
mov
jno
sbb
xchg
pop
adc
cmp
sub
push
sahf
mov
xchg
pushf
call
dec
in
mov
bound
xor
pop
or
dec
mov
jle
test
shrl
mov
fcmovnb
push
in
mov
shlb
hlt
out
scas
cltd
divl
outsb
and
negb
rcrl
and
rorb
jne
scas
pop
je
in
mov
inc
stc
mov
xlat
add
xlat
in
ret
sbb
xor
ljmp
adc
subb
mov
inc
stos
shrl
sub
sahf
sbb
pop
dec
inc
andb
push
push
adc
enter
out
push
pushf
mov
popf
jp
cmpsl
inc
push
sub
rcrb
adc
mov
movsb
inc
jo
mov
xchg
mov
sub
mov
loope
dec
inc
negb
fadds
dec
scas
sbb
add
add
dec
xchg
gs
imul
aaa
add
jb
addb
inc
add
imul
hlt
movsl
fldenv
push
scas
dec
or
pop
lds
cli
mov
lds
and
push
xor
dec
xlat
dec
add
push
dec
stos
fsubl
popa
jl
int3
int
xor
push
rcrb
shl
xor
outsl
cmpsb
jge
adc
xchg
sbb
mov
push
pop
lods
ds
int
adc
cmp
jns
ds
pcmpeqd
adcl
adc
out
data16
inc
jge
inc
ret
cmpsl
mov
push
cs
xchg
nop
das
xchg
xchg
ljmp
xor
sti
jmp
push
inc
mov
sarl
std
push
adc
bound
sbb
fimuls
mov
xchg
loope
mov
jl
cmp
jl
xchg
and
or
mov
push
jne
jg
mov
push
pop
add
lock
push
jmp
std
stos
jle
cmpsl
or
cld
xor
mov
shlb
push
pop
inc
sbb
inc
sbb
jge
movsl
fildll
or
shlb
xor
mov
mov
cwtl
pop
push
sbbl
clc
mov
inc
fst
cltd
mov
pop
pop
test
jb
mov
iret
stc
inc
xor
mov
mov
push
mull
mov
jo
or
lret
fs
mov
es
add
jmp
sbbl
cwtl
stos
gs
lahf
xor
jne
out
dec
jne
ja
cld
out
xor
mov
test
fdivrl
sar
jo
pushf
jbe
sub
mov
or
lods
cmpsl
in
mov
leave
cs
mov
out
int
fidivs
bnd
inc
fcoms
lock
ds
and
jo
add
fimuls
in
pushf
les
icebp
sbb
in
loop
hlt
sub
and
ljmp
fcoml
mov
shl
sub
imull
or
jle
loope
repz
cmpsl
mov
or
je
pop
jge
push
bound
sar
loopne
inc
dec
mov
daa
dec
jg
push
and
sbb
mov
adc
lods
and
mov
lret
pusha
mov
sub
xor
and
arpl
daa
test
gs
les
mov
cmp
lret
hlt
push
pop
lret
ret
xchg
mov
ret
ds
in
and
ss
imul
movsl
mov
sub
xor
fisubrl
scas
cmpsl
cmpl
pop
mov
adc
pop
xor
in
lock
in
jmp
in
outsl
push
mov
js
cmp
in
jmp
mov
outsl
stc
sbb
jge
jns
popl
push
adc
popa
sbb
aam
mov
mov
mov
je
mov
sub
mov
in
xchg
fstpl
adc
jne,pn
add
fimuls
std
push
cmpsb
dec
mov
incb
repnz
xor
shr
je
xor
int3
cmp
dec
testl
idivl
imul
adc
mov
ljmp
fxch
pop
insb
jnp
cmp
pop
and
inc
lcall
pop
dec
addr16
das
repz
jne
aad
adc
aas
es
mov
jb
mov
shlb
outsb
mov
jae
pavgb
dec
mov
xor
mov
sbb
adc
mov
xchg
inc
mov
js
xchg
push
and
mov
rcl
inc
adc
cmc
lds
out
cmp
in
xor
pop
rcrb
xchg
pushf
lds
mov
push
push
mov
imull
mov
fwait
pop
xchg
jae
add
rclb
fwait
pop
mov
mov
jmp
cmpl
pop
mov
popf
loopne
add
test
sub
pop
xchg
mov
enter
jl
mov
add
nop
xor
jge
testl
lock
in
xor
pop
imul
xor
addr16
out
mov
or
fldcw
movsb
sbb
adc
mov
aad
ss
fisubs
insb
dec
fsubl
outsl
dec
mov
xor
push
stos
mov
or
clc
cmc
sbb
leave
xchg
mov
inc
out
lcall
data16
inc
ja
xchg
popf
or
mov
lret
int
aad
inc
adc
addr16
lret
mov
sub
in
arpl
inc
lods
and
mov
lods
pushf
insb
les
and
jg
xor
xor
push
fildl
or
insb
push
mov
ja
jp
loope
addr16
or
cli
push
mov
pop
mov
out
iret
or
sbb
test
les
inc
mov
jg
bound
out
cmp
pop
sbb
out
shl
rcl
pusha
add
or
lret
ficoms
mov
pusha
sub
push
sti
mov
and
xchg
and
xchg
mov
pop
adc
and
mov
xchg
lock
push
pop
leave
clc
xor
and
pop
dec
mov
jge
and
repnz
xor
hlt
outsl
bound
pop
out
into
ja
dec
test
and
mulb
int
or
leave
dec
fldt
adc
mov
sbb
and
inc
cmp
pop
dec
outsb
int3
cld
lret
xor
sub
mov
rorl
cmp
sbb
push
pop
ret
sub
dec
cltd
mov
or
ficompl
subl
addr16
mov
mov
sbb
orb
sub
in
ljmp
je
fs
adc
pop
shrl
add
jge
xchg
shrb
ret
popa
fisttpl
sub
add
mov
pop
cmp
cmc
data16
shl
xchg
in
sbb
vmovhps
nop
jp
jp
flds
mov
jae
xchg
sub
cltd
loope,pn
jne
mov
xor
pop
out
push
dec
dec
push
stc
aad
sbb
in
stos
andl
mov
add
cmp
inc
jne
fs
mov
xorl
mov
jae
xchg
lds
sub
cmpsb
mov
mov
sbb
mov
scas
stos
sbb
ret
jnp
mov
in
push
mov
out
stos
data16
and
inc
pop
lahf
aaa
into
xlat
cmc
lods
xor
inc
clc
jbe
test
bound
dec
sbb
dec
mov
das
sbb
test
movsb
pushf
or
add
int
outsb
xchg
inc
add
rcll
xor
sbb
or
cs
je
movsb
rcll
shll
cmpsl
add
push
iret
or
or
ljmp
int3
mov
cmp
xchg
mov
xchg
jne
inc
fstpl
mov
jbe
int3
push
ret
or
jnp
ja
and
enter
or
out
ret
loopne
pushf
xchg
repnz
movsl
inc
outsl
loope
outsb
sub
inc
cli
inc
orl
xchg
sub
daa
xchg
or
pop
dec
xor
mov
mov
jnp
cli
pushf
pop
aas
push
in
or
repnz
outsl
xor
mov
mov
xchg
sub
mov
or
jae
pop
inc
jae
dec
add
jnp
mov
mov
dec
popa
xor
aad
dec
loopne
adc
push
adc
leave
jp
push
push
pop
loopne
mov
or
not
call
pusha
or
aas
addr16
and
push
adc
test
push
or
sbb
pop
jb
gs
aaa
xor
jns
xor
subb
pusha
mov
pop
sbb
div
ja
call
xor
sbb
and
arpl
lods
push
cmpsl
mov
loop
sbb
jae
xor
cmp
jns
mov
aaa
and
push
mov
pop
lret
sti
out
pop
xor
add
sub
scas
sbb
pop
mov
cmc
push
mov
sub
shlb
cmpb
cmp
sahf
in
pop
mov
aas
sub
inc
ffree
add
sti
push
sar
ror
or
jnp
ret
ficompl
int
xchg
cs
mov
negb
in
loop
outsb
mov
inc
push
xchg
adc
jge
les
or
nop
jne
cmp
xchg
lahf
jmp
inc
xchg
adcl
push
xchg
iret
test
pusha
lea
aad
dec
int3
test
popa
rcr
sbb
loop
ja
or
adc
in
and
dec
orl
mov
bound
xchg
fsubs
sub
pop
fsubrl
jge
pop
add
jb
ds
das
shl
jne
jns
adc
fcmovbe
aas
shll
jg
add
adc
fidivs
cmc
pop
xor
testb
lds
or
lods
jb
cmp
add
faddl
cld
jge
stos
pop
outsl
addr16
stc
add
lock
cli
testl
pop
mov
pop
das
jnp
pop
call
cmp
jnp
mov
test
aas
test
mov
adc
dec
daa
addr16
hlt
mov
dec
and
jmp
ss
scas
inc
int3
popa
mov
inc
sub
fidivrl
and
pop
mov
call
stos
and
scas
mov
xchg
paddw
sahf
adc
test
and
or
dec
fstps
in
jno
sbb
loop
lods
and
cmp
mov
xchg
jb
inc
mov
fidivrs
xchg
jo
add
push
ror
mov
sar
lds
push
nop
ss
mov
adc
adc
push
hlt
and
repnz
xchg
mov
icebp
divl
cmp
push
jp
or
push
into
mov
adc
fwait
in
in
push
mov
sarl
int
insb
jo
pop
out
cltd
add
sbb
aas
push
divl
ret
dec
lods
fbld
fisubl
xchg
loop
outsb
fs
popa
xchg
fs
xchg
iret
push
mov
pop
sub
cs
sbb
loop
mov
gs
mov
ja
test
inc
push
das
push
mov
push
pop
mov
dec
sbb
mov
pop
cmc
jp
add
pop
push
and
lock
add
or
lods
mov
pusha
inc
dec
test
lret
ljmp
incb
add
sti
mov
pop
sbbb
subb
aas
xchg
xor
std
sub
sbb
stc
das
std
pop
adc
dec
ret
pusha
cld
insl
jno
jbe
dec
sub
mov
test
int
lahf
cmp
loopne
xor
push
jg
xchg
mov
frstpm(287
mov
push
icebp
call
adc
fists
cs
enter
jmp
jecxz
outsl
sub
les
add
test
cmp
mov
pop
sub
mov
pop
lds
fbstp
jmp
pop
scas
hlt
aad
mov
in
andl
sbb
scas
and
push
push
ret
scas
ret
mov
sub
cmp
lea
mov
push
pop
mov
test
dec
mov
jmp
ja
das
xchg
insl
push
xchg
ljmp
leave
arpl
ds
dec
insl
movsb
xlat
jmp
adc
or
jno
fs
add
pusha
mov
stc
push
aam
adc
movsb
push
out
add
or
iret
pushf
push
rcrb
sub
mov
lods
add
je
mov
xor
scas
cmpsl
jne
cmp
jbe
cmp
or
insb
jmp
pushf
mov
dec
sbb
rcrl
pop
imul
jns
lods
xchg
out
scas
adc
daa
pop
and
sub
es
jecxz
sbb
add
insb
arpl
in
mov
mulb
int3
aas
sbb
rcrl
xor
sub
lahf
mov
xor
add
ljmp
sbb
pop
aas
hlt
jl
xlat
sub
jne
mov
sub
insl
flds
fldenv
lods
jg
xchg
mov
mov
adc
lds
subb
or
stc
mov
adc
cmpsb
xchg
xchg
jp
int
js
in
out
repz
inc
imul
stos
outsb
enter
fldl
mov
pop
ljmp
jb
insb
lret
lcall
ds
stos
mov
mov
cmp
ds
add
sbb
fcmovne
mov
iret
iret
pop
adc
pop
lock
xor
inc
mov
xor
outsb
jns
pop
sub
jno
insl
dec
and
mov
pop
or
call
fucom
scas
mov
clc
cmc
sbb
stos
mov
jl
fdivrs
inc
inc
cmpsb
mov
cwtl
inc
test
sub
out
in
addb
cwtl
arpl
outsb
test
arpl
xchg
aad
dec
ljmp
jge
insb
adc
inc
adc
jl
and
dec
mov
in
mov
out
fbstp
hlt
jecxz
lods
sti
pop
or
repz
roll
pop
cwtl
inc
mov
es
mov
je
push
hlt
cmp
mov
mov
orl
push
mov
daa
rcrl
ja
pop
fsubl
cmp
into
icebp
test
push
xchg
jmp
mov
cmp
adc
mov
sbb
add
push
cs
int3
lds
cmp
mov
call
insl
pop
roll
pop
insb
out
cltd
push
mov
in
pop
data16
fnstcw
inc
lds
cltd
push
iret
pusha
jle
push
movsb
movsb
and
fisubl
xor
add
push
addb
and
push
shrb
or
and
or
notb
or
fcompl
int3
jecxz
inc
and
hlt
push
mov
js
shrl
jg
aaa
inc
or
push
inc
jb
xchg
add
cld
mov
jl
mov
scas
shlb
shl
jg
pop
pop
sbb
add
push
mov
pushf
mov
int3
icebp
dec
pop
adc
aad
and
mov
cmpsb
outsl
and
sahf
xchg
fstpt
xchg
enter
inc
outsb
rcll
iret
stos
inc
sahf
xchg
mov
push
push
cmpsb
mov
mov
ret
lock
or
jl
jl
mov
add
lds
inc
xor
stos
sahf
jne
das
repnz
inc
jecxz
out
movsl
sahf
sbb
shll
imul
rcl
repnz
pop
pop
cmpb
cs
xchg
dec
aaa
mov
adc
sahf
aam
fsubrs
xlat
cmp
enter
ret
jl
mov
mov
adc
sbb
sbb
and
testb
aad
sbb
inc
add
aas
adc
nop
stos
add
les
je
dec
int3
out
jge
imul
mov
and
or
push
pusha
xchg
roll
repnz
sbb
jnp
and
rcrb
mov
loop
pop
pop
test
or
xchg
call
push
add
shl
mov
add
pop
sbb
jne
xor
fcomps
inc
dec
add
rcll
mov
mov
das
icebp
xchg
add
jne
dec
clc
outsl
je
xchg
sar
mov
fisubrl
iret
pop
inc
daa
je
mov
inc
adc
and
vpsubsw
lods
and
jecxz
jge
adc
dec
stc
add
add
aaa
scas
mov
jle
sub
mov
mov
add
cs
movsb
into
fnsave
dec
xchg
scas
or
cs
mov
mov
xchg
std
nop
stos
lods
inc
pop
out
or
adc
test
es
popf
ss
divl
inc
scas
dec
pop
int
pop
pusha
jg
mov
stc
cltd
xor
and
test
inc
imul
mov
and
add
out
rorl
mov
ret
mov
lret
push
sbb
xor
in
fwait
add
subl
mov
jbe
imul
int3
test
aad
lods
cmpsb
clc
es
mov
fists
sub
xor
and
loop
mov
mov
inc
xchg
mov
orl
inc
in
fwait
push
rolb
xchg
pop
sbb
dec
or
movsl
sub
sub
scas
cli
and
dec
pop
or
mov
aad
sbb
or
fadd
fimuls
sbb
xor
mov
and
xchg
jle
mov
ret
loopne
push
mov
inc
test
mov
mov
cltd
sbbb
xor
dec
jp
or
int3
shl
jb
mov
and
ljmp
mov
or
popf
ret
mov
data16
aam
xchg
xchg
sbb
add
sub
mov
pop
pshufw
sbb
mov
xor
ljmp
je
stc
pop
xor
or
mov
outsl
ljmp
int
rol
data16
addr16
adc
leave
pop
mov
adc
bound
and
testl
pop
movsl
bound
mov
scas
jne
mov
cmp
jmp
mov
fsubrl
pusha
fucomp
sarl
push
fnstsw
jne
stos
mov
aad
pop
out
push
popa
in
addb
js
mov
mov
sub
into
dec
cmp
fisubrl
movsb
stc
scas
inc
out
lock
sahf
jo
push
lods
test
int
das
test
out
dec
pop
pop
or
mov
rorl
jmp
or
bound
mov
lds
mov
cmpsb
cs
jg
sub
jae
jmp
movsb
fcmovb
sbb
lods
loopne
sub
and
cmp
ret
out
pop
lea
nop
push
xor
outsb
cmp
jns
shlb
mov
ror
je
and
sbb
jg
fldenv
ss
sbb
cmovne
and
int
push
mov
sbb
push
add
in
push
outsl
adc
add
adc
leave
and
stos
insl
dec
sbb
in
inc
xchg
arpl
rcl
inc
cmp
sbbl
ds
xchg
dec
sub
add
ja
xchg
push
mov
lods
into
enter
push
xor
imulb
scas
sub
jge
xchg
jbe
or
and
push
popa
mov
mov
xchg
out
mov
pop
andl
ret
sub
movsl
into
je
pop
dec
iret
hlt
fcmovbe
add
daa
jge
leave
insb
pop
xchg
out
js
fadds
out
dec
in
pop
pop
sbb
push
faddl
add
iret
jne
imul
iret
roll
stos
repz
jne
test
cltd
dec
push
push
jne
mov
lret
and
mov
cmp
outsl
dec
and
out
push
pushf
mov
adc
outsb
cwtl
push
jb
out
push
lahf
lock
repz
inc
popf
xor
addl
dec
mov
jnp
push
and
lods
inc
dec
outsl
inc
push
dec
fisttpl
jl
sub
inc
dec
sub
mov
dec
add
push
pushf
and
jle
jecxz
mov
xchg
jno
fs
push
cmpsl
pop
leave
sti
mov
lock
sub
mov
pop
and
and
add
sbb
aad
test
mov
xchg
mov
daa
les
cmp
push
fsub
inc
or
xor
inc
imul
ficoml
popa
jl
outsb
push
outsb
gs
push
loop
in
inc
es
xor
fbld
inc
jle
fldcw
pushf
mov
lock
lea
jns
movaps
push
mov
jecxz
cmp
je
push
xchg
push
aaa
xchg
gs
mov
lds
cmp
or
loop
adc
cli
inc
sar
mov
fistl
mov
loop
mov
dec
loope
and
inc
mov
pop
in
ljmp
mov
in
out
lea
out
ret
cmc
divb
movsb
dec
jnp
or
in
in
aaa
push
ret
or
and
rclb
outsl
lds
pop
inc
push
and
jae
dec
push
je
jb
xchg
es
xchg
mov
add
mov
subb
sub
push
xchg
add
movsl
push
adc
add
cmpsl
movzwl
push
fxch
pop
rorb
cltd
add
arpl
cmpsb
cli
inc
xchg
mov
fcmove
mov
sarl
es
cld
jo
fisubrl
inc
add
jbe
int3
and
inc
xchg
xchg
sbb
loopne
jge
push
test
ljmp
cltd
push
data16
and
push
and
arpl
and
iret
mov
add
les
roll
imul
popa
xor
mov
scas
sbb
into
inc
xchg
cmp
xlat
sub
sub
dec
jno
nop
sub
add
dec
push
add
pop
inc
mov
test
sar
insl
mov
out
pop
jne
add
cmc
xchg
dec
sub
aam
int3
push
or
pfrsqit1
jnp
fisttps
xchg
gs
inc
add
mov
mov
sub
dec
adc
adc
jmp
lods
and
pop
inc
test
js
cmp
loope
dec
sti
xor
or
out
sahf
inc
mov
sbb
nop
and
gs
rcll
pop
inc
pusha
sub
adc
pop
shlb
mov
not
sbb
dec
ja
lret
and
add
leave
xor
sahf
xor
scas
je
cmp
push
cwtl
or
dec
push
jl
xchg
xlat
ja
mov
and
cli
dec
sbb
mov
ret
lods
cmpsb
idivl
xchg
movsl
xor
or
xor
push
cltd
xchg
insl
xchg
push
cld
lahf
adc
out
xchg
xchg
push
test
out
ds
or
imul
mov
daa
mov
mov
loop
pop
dec
sub
cli
xchg
pop
or
mov
ja
fs
aas
iret
pop
sbb
or
pop
xchg
add
divl
imulb
pop
push
sbb
mov
mov
push
out
mov
or
or
fcoml
rcl
loop
stos
jnp
xor
pop
cmp
cmp
lret
mov
or
mov
and
adc
sub
and
sub
andl
cmpsw
jl
dec
iret
lods
and
mov
and
adc
jns
lcall
addr16
fidivrl
aaa
js
mov
lods
adc
pop
cmp
jl
jge
push
subl
ds
push
xchg
sub
lods
stos
sbb
insl
inc
fisttpl
inc
mov
insl
fcomip
movsl
das
cmp
std
dec
iret
push
dec
xchg
xchg
std
cmp
mov
sbb
adc
fbstp
mov
enter
cmp
push
jb
xor
inc
scas
adc
test
in
addr16
push
jno
push
cmpsl
xor
rcrb
mov
add
inc
stos
mov
jecxz
and
add
test
mov
pop
dec
xchg
pop
jne
ret
dec
mov
ljmp
add
arpl
adc
daa
arpl
jb
pop
or
push
aaa
push
mov
adc
jbe
mov
adc
push
lret
cmp
sub
movsl
pop
sub
ds
cld
in
aam
cmpsb
mov
push
sub
es
xor
ret
sbb
and
test
mov
mov
imul
fnsave
lock
inc
lret
jns
out
maskmovq
ret
cmp
or
scas
enter
xchg
fyl2x
mov
xor
mov
pop
popa
add
les
lea
mov
xchg
stos
out
rcll
adc
push
mov
out
push
dec
in
adc
dec
adc
dec
test
fmul
sbb
scas
in
das
lret
cld
pop
add
imul
ss
dec
or
scas
fucom
jno
sbb
inc
js
jg
cmp
and
psubd
adc
cwtl
and
mov
mov
aaa
jbe
mov
int
ljmp
dec
xchg
ljmp
inc
mov
mov
push
ret
in
add
inc
cwtl
cltd
scas
xlat
loopne
mov
cltd
pop
lock
ljmp
shr
inc
std
clc
rclb
imul
dec
data16
or
shl
mov
imul
lret
xchg
xor
pop
dec
cltd
push
popa
fistps
push
mov
les
pusha
leave
test
mov
fistpl
mov
dec
ret
sarl
call
or
mov
cmp
mov
adc
sub
xchg
cld
in
repnz
movsl
add
fdivr
mov
inc
mov
insl
xchg
aad
sub
xor
orl
mov
xchg
fbld
out
repnz
mov
xrelease
std
sbb
fwait
add
mov
inc
lods
inc
add
mov
add
cmpsl
popa
mov
loopne
mov
jl
mov
frstor
imul
js
pop
arpl
lret
mov
stos
cmp
repnz
or
push
dec
fdivs
pop
pop
hlt
sub
and
popa
out
js
xchg
std
sbbl
xor
cmp
mov
xor
mov
dec
test
push
or
je
dec
sub
cld
stos
jb
movsb
xchg
movsb
inc
js
sub
xlat
fsub
jns
dec
rorb
jbe
sub
mov
or
adc
out
pusha
push
and
jmp
aam
lahf
xor
pop
cmp
lock
sub
sub
into
sbb
aaa
sahf
scas
jge
popf
loop
inc
test
adc
ret
mov
jno
mov
adc
popa
xor
loop
aad
xor
add
adcl
or
sub
fnstsw
jle
mov
push
scas
inc
inc
add
fs
and
dec
jecxz
dec
lods
adc
push
xor
pop
push
sbb
xchg
in
mov
leave
fildll
mov
adc
jp
inc
mov
adc
decl
push
jae
fildl
out
movsb
xchg
pusha
pusha
scas
mov
cli
fldenv
jno
push
movsl
divl
jbe
push
sub
xor
js
cmpsl
jb
repnz
arpl
jle
xchg
dec
lahf
adc
mov
sbb
push
add
and
adc
mov
js
xor
dec
mov
in
enter
add
pop
mov
lock
out
lds
aam
rorb
adc
pop
lahf
roll
push
repz
ficoms
xchg
or
popa
and
rcll
movsl
repnz
loop
roll
pop
inc
inc
push
pop
pop
cmpb
nop
fs
or
dec
mov
fsubrl
jl
jne
repnz
push
in
push
or
sti
repnz
sbb
dec
jle
mov
mov
popa
out
fscale
lahf
jmp
ds
repz
inc
ss
xchg
je
imul
dec
leave
xchg
scas
iret
shll
data16
or
fadds
push
fdivrl
dec
leave
push
test
dec
stc
out
and
les
xchg
sar
mov
mov
jmp
pop
push
dec
inc
inc
add
inc
push
clc
mov
ss
fcmove
xchg
arpl
adc
mov
xchg
ja
mov
jns
or
lods
pop
mov
ja
mov
dec
sub
out
add
xchg
jecxz
or
add
push
in
js
insl
insb
movsb
mov
inc
orl
jle
mov
push
or
fwait
xchg
ret
jg
cmp
inc
adc
int3
sub
es
in
movsl
cmp
test
sub
mov
adc
mov
or
loop
or
pusha
popf
or
daa
std
outsb
into
lahf
push
in
mov
rorb
fidivs
cmpl
ljmp
andl
jnp
cmp
mov
add
and
and
aad
mov
aaa
jg
data16
cmp
or
sbb
dec
fmul
inc
out
sub
jno
enter
loope
sbb
jle
push
lods
xor
iret
rcrl
aad
push
and
aas
xor
int
sub
mov
lds
jns
ds
mov
mov
mov
push
jg
sahf
pop
arpl
push
jb
out
ret
cmp
inc
inc
testb
arpl
movsl
xlat
testl
clc
icebp
lcall
into
test
xchg
fnsave
lret
movsb
cmpsl
stos
ret
xlat
scas
add
arpl
mov
addr16
ficompl
mov
xor
hlt
xor
jne
mov
fistpl
lret
xchg
dec
movsl
aam
cli
mov
mov
mov
sahf
add
inc
and
jne
dec
or
int
xor
inc
adc
aas
out
cmp
idiv
add
mov
xchg
popf
push
sbb
mov
pop
xchg
outsl
nop
scas
mov
cli
mov
cmpsb
in
pop
pop
mov
icebp
jbe
mov
push
mov
jp
lahf
xor
push
xor
inc
insl
jnp
mov
cmc
les
hlt
add
dec
movsl
loopne
jmp
mov
push
jns
rol
fs
pop
dec
or
cwtl
jl
cmp
iret
ljmp
arpl
mov
push
sbb
cli
add
enter
push
and
push
add
pop
outsl
call
fs
cli
ja
xor
cld
out
cmpsb
pusha
cmp
lock
mov
andb
in
mov
ret
lahf
add
cld
sbb
inc
ljmp
mov
ror
xor
mov
mov
xchg
das
jecxz
aam
mov
push
lret
lods
cld
arpl
lahf
loope
js
fdivrs
push
mov
sub
frstor
jno
scas
movsb
sar
fwait
int3
dec
pop
js
jecxz
dec
stos
in
stc
push
out
loop
mov
enter
mov
stos
ficompl
or
sbb
fdivr
xor
ss
jle
cmpsl
cmp
sub
into
out
movb
push
aad
jb
jge
pushf
xor
mov
ljmp
lock
into
repz
out
push
cmpsl
jmp
insb
push
cltd
mov
je
inc
or
cmpsb
mov
imul
adc
sub
lea
push
test
imul
clc
push
add
mov
pop
mov
jp
test
mov
lods
xchg
pop
pop
cmp
pop
cli
inc
scas
out
or
sar
xor
shld
mov
push
xorb
jb
aad
movsb
mov
adc
xchg
iret
inc
int3
insl
pop
mov
rclb
xor
in
sbb
mov
fdivrp
push
inc
daa
sub
mov
sbb
repz
inc
inc
cwtl
shll
scas
inc
repz
nop
fsubp
mov
das
inc
push
fstpt
and
mov
pop
es
faddl
sub
fucomip
pop
pop
mov
push
mov
push
idivl
lods
cwtl
xor
out
lret
insb
mov
jbe
bnd
inc
mov
mov
pop
xor
xlat
cli
xor
data16
cmp
mov
fnstcw
pop
clc
inc
sti
xchg
fisubs
dec
sub
std
sub
in
ss
popf
loop
fstps
es
int
out
enter
or
dec
out
add
inc
pushf
mov
jnp
adc
sub
or
ret
sbb
cmp
pop
jge
out
dec
ss
xlat
inc
mov
or
and
or
addl
addr16
adc
shlb
mov
jbe
sub
enter
pop
and
mov
cwtl
lret
imul
mov
mov
cmp
bound
imull
jae
or
mov
xchg
mov
push
fisubrl
sbb
ds
inc
repz
xchg
xchg
das
int
ja
mov
iret
dec
dec
addb
sbb
add
cmp
jl
push
inc
loopne
cmp
leave
mov
ljmp
xor
adc
mov
mov
fmul
aaa
sahf
and
sub
mov
imul
xchg
xor
mov
xor
rcrb
add
push
rolb
jl
xchg
mov
xor
addb
or
inc
stc
rolb
pop
mov
inc
test
add
push
cmp
arpl
popf
rclb
jb
imul
adcl
dec
xchg
sub
out
cmp
adc
jge
push
and
cmp
jnp
mov
sti
shll
popa
xchg
rcll
test
cli
cmp
xor
sub
imul
hlt
pop
lret
jbe
jmp
outsl
lret
aas
and
xor
sub
arpl
and
dec
pop
xchg
xchg
sub
jle
arpl
sbb
test
mov
jns
fdivrs
cmpsl
mov
add
jae
add
out
sub
jns
mov
mov
shr
arpl
iret
sbb
sub
pop
cmp
cmpsl
fildl
outsl
mov
xor
jns
jp
test
in
or
sbb
push
add
popf
jns
aam
cmp
pop
iret
lds
fistps
pusha
movsl
test
inc
imul
and
pusha
sbbl
iret
inc
xor
mov
xchg
xor
mov
push
jecxz
or
adc
mov
popf
pop
fidivrs
pop
sub
lcall
sbb
pop
orl
inc
lods
add
mov
pop
mov
pop
push
fldl
push
sub
adc
test
in
and
in
aaa
pop
lea
jecxz
mov
xor
add
imul
adc
jmp
xor
aam
inc
xor
loop
scas
es
leave
dec
add
inc
cmpsb
xchg
outsl
mov
fnstenv
mov
pop
fisubs
xchg
sub
test
fmull
mov
bound
xchg
pop
imul
lds
popf
lods
jecxz
outsb
cmp
xchg
xchg
sbb
lcall
mov
xor
outsb
xchg
into
lock
mov
inc
fdiv
lcall
out
cmp
add
sub
mull
test
cs
pop
paddd
dec
cmp
lock
cli
fstl
jmp
fildl
pop
jle
lret
lock
in
and
repz
jne
in
repnz
or
fwait
outsb
cli
gs
and
add
pop
xchg
shlb
test
std
pop
in
adc
rep
int3
adc
xlat
lock
out
and
dec
out
inc
and
mov
cmp
iret
popf
ror
push
mov
push
pop
jae
stc
push
popf
loope
mov
rorl
pop
pop
fwait
int
imul
push
in
pushf
mov
shll
imul
mov
mov
add
pop
in
lahf
jns
rorb
sbb
dec
push
aam
stos
aas
or
push
adc
sahf
jo
jnp
or
ret
idivl
sti
jge
push
aas
xor
jl
mov
sbb
outsb
lods
inc
sahf
and
inc
loop
dec
enter
lret
jecxz
mov
xchg
aam
pop
dec
inc
sbb
pop
sbb
push
xor
enter
xchg
xor
push
jp
jmp
aas
lcall
jo
push
mov
xchg
test
scas
je
repz
fstps
sahf
cli
in
inc
mov
cli
or
aad
fwait
inc
push
adc
cltd
scas
add
ret
idivl
push
mov
inc
mov
xlat
shl
dec
adc
int3
add
sbb
fs
cli
add
test
dec
sbb
arpl
shrb
cld
out
dec
mov
das
dec
mov
aad
jmp
insb
cmpsb
arpl
dec
out
sahf
cmp
ret
inc
sarl
sbb
add
dec
mov
add
inc
stc
sarl
aad
les
add
wbinvd
int3
push
push
jnp
dec
xchg
es
mov
lret
xchg
sub
mov
mov
mov
mov
adcl
or
imul
fcmovnb
adc
and
sub
shrb
in
addl
adc
mov
push
cmp
inc
jle
loope
mov
fmul
pop
jmp
test
sahf
pop
icebp
and
lea
in
push
pop
mov
mov
sub
rorl
loop
jecxz
divb
pop
bnd
and
and
imul
dec
jle
lret
cli
test
add
mov
inc
cmpsb
push
push
cmpsl
hlt
in
cmpw
dec
clc
sub
sti
bound
xor
or
adc
es
mov
mov
dec
dec
in
fdivs
fsubr
mov
push
sbb
xor
stc
bound
call
cmpsb
jg
pop
inc
xchg
bound
lahf
pushf
lods
pop
jge
sbb
cmp
pushf
adc
jp
mov
dec
sub
add
rcl
jbe
cwtl
fisttpl
push
inc
pop
orl
out
icebp
mov
fnsave
inc
clc
loop
pop
in
add
mov
mov
and
adc
jns
loop
sub
lret
xchg
mov
lret
testb
and
stos
cmp
mov
stos
lcall
repz
cmp
mov
sub
ficomps
sbb
pushf
xor
iret
shlb
jmp
inc
xorl
xchg
js
jg
in
jbe
push
xchg
mov
test
mov
decb
jecxz
jb
or
movsb
add
adc
jp
bound
pop
jnp
pop
popa
cld
repnz
and
ret
into
push
mov
imul
jg
aam
scas
data16
stc
lret
sbb
in
shll
add
pop
push
xor
jecxz
leave
hlt
jle
push
sub
dec
mov
je
stos
sub
inc
xchg
in
stc
into
jge
shlb
imul
xchg
into
lcall
mov
aas
jb
xorb
sbb
test
push
pusha
mov
cmpsb
aas
or
nop
xor
les
and
pop
push
jmp
pusha
fnstenv
aad
idivl
lods
jge
enter
jo
jo
xchg
lock
rclb
adc
rol
or
jbe
insl
add
in
in
enter
clc
subb
mov
cmpsl
or
shll
cmp
gs
inc
jnp
and
or
add
sbbb
cld
shrl
ret
addr16
cmpb
data16
mov
push
mov
fnsetpm(287
notb
aam
push
sub
add
jb
lret
hlt
push
bound
dec
call
mov
cltd
sbb
test
push
sti
pop
fwait
loop
hlt
mov
dec
inc
mov
push
mov
repz
xchg
pop
jbe
clc
out
out
push
push
cli
push
or
jl
pusha
roll
or
jns
xlat
mov
jo
clc
xchg
push
outsl
dec
lret
mov
imul
pop
dec
inc
sub
cmc
rcll
and
fs
mov
adc
cltd
xchg
push
aad
mov
xchg
xor
faddl
jmp
sub
cmp
inc
add
cmp
mov
sub
movl
dec
or
lahf
or
nop
aaa
int3
sbb
loope
aaa
cmp
mov
iret
cmpsb
ret
mov
fisttps
mov
mov
scas
imul
jb
jbe
loope
shlb
adc
cwtl
jge
jg
xor
push
add
into
mov
stos
jl
cmp
pop
xchg
dec
push
test
pop
and
stos
imul
adc
mov
movsl
in
scas
lods
mov
andb
adc
imul
or
sbb
xlat
int3
xlat
es
testl
mov
adc
xor
dec
nop
leave
add
loop
mov
scas
push
icebp
cltd
fdivl
cmp
in
jmp
push
cwtl
dec
dec
and
cmc
sub
or
sbb
mov
xchg
sub
xorl
jge
addr16
sbb
add
sbb
insl
inc
lods
divb
push
gs
dec
hlt
mov
xor
jns
lock
in
cli
insl
jmp
inc
inc
and
mov
sbb
inc
pop
shr
jb
sub
cmc
test
imul
pop
in
mov
adc
stos
sub
clc
xchg
popl
movsl
int
aam
add
dec
outsl
lret
add
push
ss
lret
aas
jns
sub
nop
and
cmpsl
rclb
mov
push
int
cltd
xor
pusha
test
jo
test
lret
xor
pop
jp
movsl
cli
push
jge
xor
mov
std
setle
mov
jae
xchg
mov
lods
out
dec
shlb
and
sti
fmulp
imul
adc
mov
cmpsl
add
mov
dec
testl
ret
out
cmp
mov
ljmp
mov
push
adc
call
in
mov
mov
aam
push
mov
gs
or
and
repz
xchg
mov
addr16
jo
adc
loope
pushf
sub
xchg
jns
addl
out
mov
in
push
push
lds
mov
mov
repnz
or
rorb
mov
add
movsb
daa
mov
pop
push
or
stc
or
cmp
mov
ss
bound
xchg
arpl
cltd
push
sub
shr
jmp
fnstcw
lcall
dec
pop
test
into
push
pop
inc
or
repz
jo
mov
push
inc
sub
ret
cld
push
xchg
scas
xchg
sbb
dec
sub
popa
loope
xchg
mov
pop
das
in
mov
sub
imul
sub
sarl
adc
scas
lret
or
test
lahf
adc
xor
adc
xchg
mov
sub
push
add
or
adc
stc
jnp
xchg
xchg
pop
dec
push
xor
inc
nop
xor
mov
icebp
jle
mov
mov
mov
mov
sbb
jae
pop
adc
in
lea
mov
inc
out
sub
pop
and
mov
ret
inc
sub
jle
push
or
cmpl
outsl
pop
arpl
or
lcall
test
xor
add
ret
mov
add
push
negl
sbb
pop
mov
mov
popf
adc
or
jbe
xchg
jmp
incb
push
shr
repnz
and
fstpt
mov
jnp
pop
adc
push
pop
jae
inc
out
fwait
pop
bound
pop
sbb
loop
push
aas
aam
lods
mov
ss
enter
or
xlat
mov
in
cmp
mov
adc
scas
ljmp
xlat
and
xchg
dec
lods
adc
pop
inc
jo
jge
mov
popa
mov
and
sbb
popf
loope
add
imulb
push
fwait
mov
loope
fsub
insb
lods
sub
lock
sub
xor
sub
rorl
mov
sub
aam
les
cld
out
fwait
addr16
jbe
out
rcll
movsb
adc
or
pop
daa
mov
shr
xor
loopne
jne
xchg
aas
push
mov
sub
fistps
jb
stc
fwait
xor
es
lcall
cmc
or
push
add
movsb
ds
jle
in
and
add
adc
sbb
popf
lret
sub
xchg
push
and
jmp
roll
fs
xchg
mov
imul
jne
lock
test
adc
inc
lods
stos
xchg
sbb
mov
push
movsb
dec
orb
push
adc
inc
repnz
adc
cli
cmpsl
mov
lods
out
mov
loope
call
fcomi
push
dec
and
inc
push
int
cltd
and
decb
leave
gs
js
mov
pop
dec
add
fwait
cli
adc
dec
sbb
add
scas
sub
push
xor
mov
setbe
cmp
rolb
adc
pop
mov
lea
mov
popa
stos
mov
mov
outsl
sbb
xor
mov
mov
cmc
aas
pop
xchg
ret
fbld
jbe
sbb
fmul
or
loop
lods
in
add
dec
shrb
loop
insb
mov
addr16
loopne
daa
mov
dec
insb
dec
jle
negl
fst
cmp
jne
jae
das
je
outsb
cwtl
push
ss
aad
mov
rorb
and
jmp
cmpsb
and
mov
out
cs
imul
lock
xor
sub
les
ljmp
nop
dec
add
pop
imul
cld
jge
imul
cmp
push
lods
dec
popf
mov
sbb
adc
jns
fistpl
jae
setns
in
pop
cwtl
mov
loopne
xchg
jg
cmp
aad
adc
or
xor
xchg
call
mov
ret
mov
stos
icebp
inc
sbb
xor
imul
lea
push
shll
nop
xchg
and
pop
lea
scas
cmc
sub
sub
pop
sbb
adc
lods
sbb
scas
and
push
rcr
xchg
nop
idivl
push
out
movsl
out
inc
mov
loope,pt
fisubrs
push
les
cltd
pop
out
outsl
pop
cmp
fidivrl
or
sbb
cltd
sti
test
sbb
clc
cs
xchg
cmpl
sbb
sbb
cmpsb
jp
orb
rcl
pop
addr16
dec
shrl
push
push
mov
dec
std
push
fsubrp
cmpsl
add
cmpsb
adc
movsl
dec
pop
xchg
shrb
call
sub
in
mov
inc
push
sbb
xchg
jge
rcrb
ret
dec
sbb
jo
add
sub
aaa
in
daa
insl
dec
mov
mov
pop
fisttps
push
jp
pop
imul
rolb
fdivrp
int
andb
repnz
sub
xchg
leave
cltd
sbb
push
movsb
mov
fldenv
sub
add
mov
stc
loop
cld
test
xor
cmp
clc
xchg
and
mov
mov
cmp
cmp
jno
and
stos
fildll
dec
subl
push
or
sub
out
fisttpl
push
pop
lcall
popl
jp
out
test
mov
stos
movsb
cmp
push
pop
jg
cmc
mov
into
and
add
or
stos
sti
sahf
adc
iret
push
mov
jmp
test
daa
cmpsl
push
and
jge
cmpsl
pop
iret
dec
rclb
push
xor
mov
dec
jb
roll
test
je,pt
cs
sti
loope
push
mov
cmp
cld
jne
aad
movsl
lods
sub
mov
mov
mov
mov
cmc
leave
push
jnp
dec
xor
cmp
imul
daa
adc
cmpsb
rorb
cmp
xchg
imul
shrl
out
inc
popa
push
inc
std
jp
int3
ret
xchg
cmovae
sbb
cmc
mov
mov
outsl
adcl
pop
stos
add
aam
cmp
xor
xchg
lods
incl
mov
sbb
sbbb
mov
or
push
and
mov
daa
hlt
cmpsb
addr16
movsb
or
scas
push
mov
mov
fwait
cmp
les
mov
out
cmp
dec
inc
and
in
inc
jge
aad
ret
inc
test
cmp
enter
fstps
jne
pop
filds
jmp
sbb
mov
les
pop
mov
or
push
pop
scas
and
adc
jmp
lea
les
sub
repnz
xlat
cmp
cltd
and
in
daa
fistps
sub
popf
mov
mov
jp
in
outsl
mov
stc
push
mov
into
push
imul
mov
and
xchg
pop
mov
ds
fwait
jp
sbb
push
inc
fdivs
jg
lret
gs
outsl
in
mov
out
push
mov
jns
out
cld
imul
ret
mov
std
popa
ret
push
cmp
cmp
outsl
nop
test
push
aam
fisttpl
sub
cld
xchg
pop
inc
xor
aam
adc
shll
test
jo
aad
scas
pop
sub
andb
and
inc
cmp
cs
rorb
add
cmp
loopne
mov
xor
es
jb
pushf
pushf
sti
xchg
cmp
add
mov
push
inc
adc
push
das
je,pt
cmp
leave
jno
rclb
stc
push
xchg
mov
sbb
sbb
and
in
outsb
xchg
adc
sub
push
push
test
int3
sub
sub
jne
xor
int
imul
push
xor
test
bound
mov
ja
shlb
cmp
into
pop
out
add
jmp
aaa
mov
imul
popa
pop
mov
jbe
movsl
loopne
cs
cli
dec
pop
fdivrs
pop
scas
mov
jbe
ret
push
adc
mov
mov
daa
xor
jnp
jmp
outsl
jle
or
cli
cltd
or
nop
adc
or
sub
pushw
dec
mov
loope
inc
adc
mov
shlb
pop
push
in
pop
dec
lret
mov
sub
sbb
movsb
cmpsl
pandn
fxch
pusha
xchg
into
add
xchg
xor
mov
xchg
es
sub
andb
jle
je
jne
xchg
and
in
xchg
data16
aad
andl
push
sbb
das
mov
cli
push
ljmp
clc
out
ret
aad
pop
mov
xadd
ret
mov
or
clc
arpl
stos
mov
pop
test
scas
test
cli
fdivr
repnz
cmc
sbb
push
dec
sbb
das
and
shl
push
cmpsb
cld
ja
cwtl
mov
push
jns
xor
loopne
scas
ljmp
insl
or
std
cmp
aad
xor
neg
jne
lret
push
pop
bound
and
mov
jle
jl
mov
dec
mov
cmp
cli
clc
adc
outsl
mov
cli
cmpsl
pop
mov
xchg
je
inc
test
ljmp
mov
pop
sub
pop
dec
inc
lret
dec
inc
cmp
mov
pop
pop
test
fnstcw
pop
pop
sub
lcall
pop
adc
xchg
lea
int3
imul
gs
ficomps
dec
adc
js
ljmp
movsl
loope
jg
aas
xchg
pop
push
sbb
mov
xchg
push
stos
add
jge
mov
or
mov
addl
xchg
jecxz
stc
mov
mov
sbb
mov
adc
jae
push
add
sbb
cs
sti
xor
int
add
fsubs
push
lods
insb
jo
dec
inc
push
inc
or
xchg
je
pop
xchg
and
mov
jb
mov
xor
imul
push
pop
jge
dec
inc
mov
sbb
cmpsb
and
ds
je
inc
pop
push
mov
lea
in
imul
xchg
lcall
jnp
push
inc
imul
pop
and
push
mov
fucomp
dec
lea
mov
cmp
cwtl
fmull
mov
pop
jecxz
cltd
leave
je
ror
out
sbb
push
ficompl
fmul
test
or
jae
shrl
arpl
pop
nop
popl
add
mov
push
cmc
test
lods
xchg
mov
lods
js
movsb
outsb
pushf
mov
pop
pop
iret
or
or
psubusb
push
out
mov
xchg
mov
add
fbld
ds
cmp
insb
or
rcrb
sub
stos
shrl
pop
sub
subl
in
and
outsb
cmp
mov
je
jne
or
out
ret
xchg
push
fwait
mov
mov
ss
inc
fldcw
icebp
into
mov
movsb
jecxz
arpl
or
xchg
sub
fadds
push
mov
xlat
repnz
or
imul
lock
arpl
inc
xor
add
cmp
cmp
sbb
dec
sahf
cltd
inc
mov
fnstsw
mov
fildl
mov
rolb
ljmp
gs
adc
jmp
cwtl
dec
push
dec
jecxz
pop
adc
xor
adc
lods
dec
pop
push
inc
subl
mov
mov
aad
dec
mov
sahf
and
rclb
mov
sub
arpl
xor
dec
pop
lock
xor
mov
aam
cmp
mov
cmpsl
inc
and
stc
push
mov
xor
xchg
adc
movsb
push
dec
mov
jne
mov
inc
sbbb
pop
aas
in
aam
push
inc
cmp
dec
sub
scas
xor
mov
es
mov
xor
push
inc
mov
aas
and
in
idivl
or
jecxz
fisttpl
dec
push
or
cmp
pop
icebp
pop
das
mov
sahf
mov
hlt
test
push
jg
fdivl
fwait
out
test
lret
dec
sahf
lods
sti
xchg
jg
imul
cmp
cmp
adc
adcl
cmp
xor
dec
movsb
jae
in
push
mov
dec
aam
or
mov
aas
pop
pop
xchg
imul
mov
pop
dec
sbbl
inc
data16
adc
sub
stos
cs
push
into
pusha
pop
mov
rorl
scas
fcoml
mov
js
dec
push
pop
push
inc
jae
xchg
pusha
lea
loop
jns
cmp
sub
stos
rcr
insl
stc
mov
sub
mov
jae
dec
mov
xchg
xor
cs
sbb
inc
jg
loope
pop
imul
dec
nop
push
cmp
in
bound
pop
std
jb
in
dec
fisubs
loope
sbb
jo
mov
call
bound
xor
lea
jno
jnp
and
pop
out
in
loope
mov
in
pop
lods
or
sti
push
dec
jp
xchg
imul
mov
push
hlt
fwait
mov
cmp
mov
popa
mov
in
or
mov
dec
ja
mov
cli
or
into
fdivrs
xor
cmp
mov
mov
call
outsb
test
add
xchg
cmp
in
mov
inc
daa
cltd
xlat
mov
test
ffreep
xchg
loop
sbbb
aas
mov
mov
scas
out
idivl
cltd
xor
dec
ja
adc
iret
ja
ja
mov
xlat
cld
ss
pop
test
push
mov
and
in
and
jmp
mov
add
jg
aad
je
andb
adc
xor
or
lock
jbe
and
dec
push
jo
inc
xor
or
or
jg
fdivrs
inc
movb
mov
adc
jle
call
fdivrp
jle
mov
mov
xchg
loopne
movsl
out
es
or
loop
or
sbb
or
in
in
pop
in
jmp
jl
in
inc
dec
fnsave
ficompl
and
or
inc
jge
scas
xchg
out
jnp
or
add
ds
mov
js
test
xlat
aam
mov
push
mov
imul
inc
movsl
mov
ljmp
sbb
fnsave
inc
push
inc
rorb
loopne
xchg
aad
std
and
add
xor
dec
iret
mov
imul
enter
fcompl
mov
push
orb
sbb
shrl
or
aaa
cmp
out
outsl
aaa
je
lock
xchg
aaa
iret
lahf
or
add
mov
mov
push
in
jp
adc
sub
faddl
std
pop
mov
cmpl
xchg
pop
outsl
add
jbe
dec
jo
lea
jecxz
gs
cmc
sbb
pop
std
pop
iret
fs
fwait
xchg
shll
loopne
dec
pop
hlt
adc
pop
mov
addr16
ret
or
int
and
push
xchg
fstps
adc
roll
push
lret
enter
cmc
iret
shrl
movsb
add
pop
sub
sbb
neg
testb
xor
push
and
sub
jl
rcrl
fcomi
sbb
mov
and
inc
cmc
cli
add
hlt
dec
dec
push
shlb
cs
fadds
xchg
adc
sbb
jg
and
lods
push
in
mov
aas
lret
adc
es
push
xchg
cs
xor
int
stos
jno
mov
xchg
lret
sub
sbb
icebp
mov
jo
mov
stc
mov
mov
xchg
int
dec
fistpl
cmpsl
rorb
jl
jno
outsb
mov
adc
sbb
cmp
cmpl
inc
js
adc
cmp
test
fstpl
nop
pop
jo
fstps
adc
test
cmp
mov
mov
pop
sbb
ss
mov
or
loop
fldt
loopne
or
cld
notl
scas
inc
and
mov
inc
or
subl
xchg
out
adc
mov
xor
sub
sbb
ss
mull
bound
mov
pusha
adc
cmp
repz
int3
aas
ficoml
dec
add
andl
fimuls
out
out
sbb
mov
cmp
std
mov
pop
cmp
pop
jmp
mov
mov
push
sub
jl
stos
or
xor
jb
std
mov
outsl
pop
popa
cmpb
inc
cli
or
inc
testb
adc
arpl
mov
fyl2xp1
push
sbb
mov
mov
sub
or
mov
fsubrs
sti
push
lock
out
dec
mov
sti
test
or
xor
mov
and
test
and
pop
cmp
mov
popf
fwait
jp
les
fcmove
ret
and
out
jo
xchg
aam
cmp
setg
fwait
mov
stos
ret
dec
negl
adcl
mov
sub
dec
jge
mov
insl
insl
outsb
push
xchg
mov
arpl
scas
jno
jo
inc
js
dec
shl
jnp
dec
cwtl
mov
pushf
fiaddl
mov
aas
mov
pop
insl
cmpsl
pop
sbb
inc
test
aaa
orb
in
mov
ficoms
fisttpll
sbb
popf
mov
adc
insb
mov
sbb
pop
out
mov
out
fmuls
mov
into
pop
dec
test
fdivs
sub
stos
xchg
lods
xchg
insl
cltd
loope
shll
push
xor
cmpsl
jb
mov
in
or
movsl
out
add
or
sbb
aas
cwtl
test
mov
push
cmp
or
addb
mov
subl
sahf
xor
dec
mov
lret
idiv
cli
mov
and
leave
daa
js
mov
or
lods
adc
pop
scas
jbe
and
cmpl
push
lods
lret
in
daa
mov
ss
sbb
aad
rclb
push
xor
or
add
ja
and
aas
jg
xor
push
adc
aaa
andb
jnp
out
pop
mov
push
or
fcmovbe
add
cli
fadd
add
push
mov
insl
xor
and
push
mov
xchg
mov
out
hlt
out
cmp
hlt
mov
pop
push
jge
leave
sbb
mov
out
jg
jle
mov
ja
xchg
pop
outsl
insl
rolb
cmc
adc
js
ficompl
ds
shrb
dec
pop
or
icebp
repz
mov
cmp
sti
mov
pop
out
hlt
jae
dec
mov
cld
je
or
mov
in
xchg
add
jp
inc
mov
pop
movb
add
cmp
ret
pop
mov
aad
stc
jle
fwait
mov
jno
pop
push
sub
mov
pusha
movsb
imul
xor
mov
sbb
mov
pop
test
sbb
xor
lret
shrb
or
fst
mov
mov
jmp
sarb
out
scas
mov
pusha
adc
push
xor
mov
lds
jb
pop
jbe
cmc
cltd
das
and
call
rcrb
out
hlt
lahf
xor
inc
test
fisubrl
js
mov
fnsave
sbb
in
jne
notl
mov
jns
insl
push
pop
jb
pop
ss
sbb
xchg
jbe
mov
and
or
mov
ja
xor
xor
adc
stc
int3
xor
mov
jnp
test
sub
cmpsb
loopne
js
adc
push
fisttpl
push
cmp
sbb
jns
pop
and
push
jbe
cmp
movsb
pop
loope
cli
mov
pop
cmc
add
pop
cmp
fstps
mov
testl
lea
stos
push
sub
and
mov
lretw
pop
pop
sbb
rclb
push
mov
sahf
cmp
aad
in
in
scas
push
adc
out
in
lahf
test
sbb
cmp
in
mov
lock
pop
lahf
push
push
and
dec
cmp
testl
test
pop
push
imul
xor
sbb
mov
mov
test
cltd
push
imul
push
inc
dec
fisttpl
scas
aaa
inc
xchg
push
loop
nop
dec
nop
adc
popf
andb
insb
ror
or
sub
and
push
es
das
lock
lock
xchg
movsb
popl
inc
daa
js
mov
fs
aad
in
and
mov
push
xor
mov
xor
arpl
data16
loope
xchg
pop
pop
cld
xchg
outsb
mov
pop
jae
gs
add
shl
mov
mov
jmp
fstpl
jns
movsl
xchg
or
mov
push
notl
ljmp
add
jmp
xorb
fldenv
pop
test
ret
loop
nop
fsubrl
orb
loop
repnz
test
cld
lahf
cmp
mov
insb
call
add
pop
jmp
cmp
subl
jmp
inc
mov
into
mov
sarb
lcall
inc
popf
sub
aam
fsubrl
repnz
xor
lods
pop
inc
or
xlat
adc
js
bound
in
lret
filds
aam
leave
sbb
lahf
mov
ja
xchg
and
jno
mov
imul
push
cltd
test
cli
mov
add
imul
mov
or
lock
mov
fwait
and
outsl
and
jl
xor
mov
xor
mov
push
inc
add
mov
mov
xchg
push
xor
inc
int
das
mov
xchg
mov
mov
stos
sub
scas
repz
push
xor
push
push
scas
or
and
sbbl
add
mov
jne
mov
mov
ret
addb
enter
sub
mov
mov
or
mov
in
test
ret
mov
lods
cld
ds
js
sub
shl
shlb
jle
outsb
mov
and
jb
repnz
cs
sbb
and
jp
dec
jle
les
xor
arpl
or
push
push
or
mov
cmp
jecxz
cmp
stc
out
xor
iret
aad
xor
cmp
scas
jno
dec
fnsave
iret
xorb
pop
mov
xchg
xor
sbbb
pop
inc
call
cmp
repz
mov
jmp
mov
mov
icebp
dec
fwait
das
mov
adc
sub
sub
mov
adcb
jno
dec
cmpsb
daa
jg
jmp
jecxz
movsl
addb
xchg
cmp
lcall
pop
enter
out
pop
dec
jae
jno
fisttpll
add
xor
ret
xlat
icebp
sbb
or
pop
divl
cmpsb
inc
lret
adc
shlb
call
and
inc
hlt
cli
dec
xchg
sti
movsb
fwait
lea
or
sbb
sahf
arpl
mov
pop
or
scas
gs
cmp
insl
sbbl
gs
out
cs
or
cltd
fisttpll
daa
fwait
mov
lock
ss
jb
mov
jp
adc
dec
daa
xlat
push
mov
dec
leave
fisttps
add
ss
push
mov
dec
nop
sbb
cmpsb
jnp
gs
getsec
push
jp
push
mov
mov
lods
pop
adc
mov
push
push
lea
and
xor
pop
inc
leave
loope
pushf
cmc
inc
dec
xor
push
les
pop
pusha
or
ja
outsb
xor
jns
notb
mov
adc
mov
pop
test
test
adc
loop
jle
fdiv
lea
shlb
nop
ljmp
mov
lret
jle
insb
movsl
or
aas
mov
lock
in
ret
ds
push
dec
sahf
lret
lds
or
fs
and
stc
test
mov
adcl
add
jmp
test
lds
lock
mov
adc
insl
mov
sub
inc
jle
aam
mov
xchg
ds
dec
aad
mov
roll
test
lods
cmp
dec
mov
rorl
jb
inc
mov
fwait
es
xchg
lret
add
or
xor
cmpb
add
push
xchg
frstor
and
movsl
cwtl
mov
and
mov
dec
sbb
cli
fcoms
sbb
xchg
daa
in
shll
cmp
sub
insl
leave
imul
push
andl
fsubrl
dec
out
push
movsl
cmpsl
xlat
pop
fsqrt
insb
sub
andb
cmp
mov
xor
dec
mull
cmpsb
xchg
mov
rcr
ljmp
outsl
cmp
int
mov
inc
fdivr
sub
lea
lds
mov
mov
std
repnz
add
pop
cmp
add
in
les
sarb
ja
divb
icebp
clc
mov
loopne
frstor
out
ja
xchg
push
push
lock
jp
loopne
adc
repnz
mov
xchg
in
fs
lcall
movsb
pop
jg
leave
inc
or
xchg
rorb
ds
sub
aaa
xor
loope
lahf
dec
in
mov
leave
mov
push
outsb
divl
pop
fstpt
cmp
add
rolb
pop
mov
leave
xor
mov
and
scas
inc
stc
jo
jle
jge
mov
xor
adc
ret
mov
mov
scas
adc
dec
rcll
mov
leave
lods
adc
add
sbb
xchg
inc
test
stos
xchg
daa
adc
mov
repnz
les
lods
in
sub
mov
repz
fdivs
stos
inc
jecxz
adc
xchg
es
lret
xor
xor
in
test
repnz
sahf
dec
cmpsl
and
sahf
jns
arpl
jns
sbb
inc
inc
jecxz
imul
les
jg
jo
outsl
mov
nop
shlb
nop
mov
pop
and
pop
adc
stc
loope
aad
ja
xchg
test
sub
xor
aaa
mov
loop
mov
lods
pushl
cmp
cmpsb
mov
mov
arpl
leave
add
adc
insb
or
mov
mov
sub
dec
gs
in
jecxz
xchg
das
cmpsl
out
test
loop
ss
mov
mov
pop
in
add
das
adc
ds
push
mov
movsl
inc
fisubl
fcoml
test
pop
iret
jmp
jo
mov
movaps
sub
xlat
push
push
push
lret
xor
cmp
sarb
es
into
cs
fsts
incl
nop
push
cltd
jp
jl
mov
popa
pop
or
ret
xchg
xor
mov
pop
out
inc
test
sbb
jo
xor
shr
xor
adc
mov
or
pop
pop
pop
sbb
popf
xchg
jo
push
cltd
mov
out
ret
xchg
mov
call
jg
mov
outsb
scas
jl
unpckhps
sbb
xor
jae
add
test
insl
mov
dec
stos
ret
mov
dec
lds
jns
testl
add
pop
inc
les
xlat
movsl
xor
lret
mov
cli
or
xor
push
sub
test
sub
push
mov
inc
roll
sbb
fdivs
arpl
xchg
imul
fildl
dec
lea
adc
stos
sbb
repnz
lods
mov
sbb
sbb
and
sbb
leave
sub
ret
gs
push
mov
jle
cmp
pop
inc
nop
xor
jmp
aad
cld
cmp
ror
sahf
js
fstpt
adc
scas
dec
loop
mov
and
sarl
jecxz
das
xor
jg
lods
inc
hlt
adc
inc
dec
and
pop
sbb
cltd
scas
lret
xor
jae
test
push
and
dec
dec
test
cmc
stos
mov
sahf
jns
xor
jle
mov
mov
or
xchg
mov
jmp
xchg
mov
inc
in
adcl
pop
add
pusha
imulb
push
xchg
rcrb
add
pop
sub
xor
stos
bound
dec
fisttps
or
nop
dec
lea
outsl
mov
inc
out
in
mov
jne
cmp
dec
in
cmp
inc
or
cmpsl
mov
orb
adc
or
das
add
and
and
mov
movsb
push
int3
movsl
cmp
data16
xor
xchg
sbbl
xchg
shll
pop
mov
xor
lahf
pop
dec
inc
loopne
stos
push
cs
xor
xor
xchg
pop
dec
jl
adc
and
cmp
out
cmc
out
xor
ret
mov
adc
mov
rcl
fstl
sub
xchg
sub
push
in
cli
sahf
repnz
sbb
pop
push
push
dec
inc
inc
push
sub
loope
add
xchg
mov
shll
cmpsl
leave
idiv
mov
js
cltd
push
xor
mov
jnp
orb
inc
inc
daa
mov
cltd
pop
stos
adc
jmp
int
jb
int3
add
jmp
xor
fsts
scas
xchg
xor
fistl
gs
mov
pop
xor
aaa
jns
push
jge
jp
cli
flds
mov
pop
sbb
out
push
sub
xchg
mov
movsb
daa
repnz
sbb
cmpsb
cmp
sbb
aaa
popf
js
enter
daa
cmp
pushf
xchg
sbb
adc
xchg
push
pop
js
insb
mov
jmp
fdivrl
je
pop
cmp
pop
subb
out
cmpl
inc
outsb
xchg
out
mov
loope
leave
fdivrl
es
jecxz
ss
sbbl
mov
push
test
ret
push
aas
pop
cwtl
aad
inc
cmp
mov
je
dec
imul
push
sarl
pop
push
jo
pop
and
testl
rolb
adc
dec
aad
mov
dec
fs
out
movb
sbb
mov
xchg
sub
das
dec
or
jg
xchg
sbb
mov
fcoms
cltd
sub
push
mov
fisubl
subb
jle
lods
loop
sbb
shlb
xchg
arpl
repz
test
mov
xchg
movsb
mov
das
and
ds
cmp
shlb
fdiv
pop
lret
call
inc
rcrb
daa
ret
mov
in
dec
in
jl
push
cmp
xchg
inc
mov
and
outsb
jge
push
or
out
xor
mov
cs
add
fxtract
or
orb
js
ljmp
in
or
ja
push
pop
out
push
cmp
cs
inc
popf
cli
lock
lock
pop
sub
ss
into
cmp
cwtl
sub
imul
mov
xchg
xchg
ret
xor
or
addb
pop
sbb
popf
sub
repnz
and
mov
pop
sarl
push
pop
jns
mov
mov
adc
pop
push
lret
xchg
cmp
sbb
insb
and
jg
fwait
push
jle
lret
adc
bound
leave
lret
ljmp
fisubs
out
inc
or
adc
xchg
add
xchg
les
xor
stc
cs
cmp
sbbl
mov
cs
ss
mov
jecxz
enter
js
mov
out
test
dec
out
rorb
sbb
xchg
fists
and
mov
push
cli
lret
mov
pop
mov
jg
dec
ret
inc
jns
xor
out
push
xor
loopne
aam
loop
mov
pop
xorl
add
ret
pop
inc
adc
movsl
xchg
mov
jge
mov
cmp
and
pop
and
mov
rcll
hlt
cltd
mov
test
mov
add
bt
out
cs
pusha
sar
clc
or
shrb
dec
xor
sbb
popf
mov
sbb
xchg
mov
mov
loope
out
xchg
and
fdivr
push
and
jnp
fwait
popf
movsl
or
aaa
imul
inc
jp
ss
add
loop
test
jmp
out
xor
mov
pusha
lret
in
xor
jl
mov
jge
mov
pop
mov
or
outsb
movsb
out
sbb
mov
mov
adc
aam
sub
or
cmpsb
push
dec
and
repz
inc
xchg
js
popf
pop
pop
mov
sub
pushl
das
ffree
or
mov
xchg
mov
clc
dec
pop
xor
outsl
fwait
js
dec
adc
cmpsl
into
xor
mov
add
jns
stos
in
aad
pop
loope
xchg
pushf
jae
or
adc
xchg
cmpsb
xchg
hlt
or
in
popl
cmp
cltd
shll
mov
data16
or
lods
aam
and
bound
test
push
arpl
mov
popa
pop
dec
mov
lods
movsb
add
mov
ret
and
push
mov
sahf
jl
cmpsb
cmp
hlt
faddp
adc
aaa
cmc
mov
pop
xchg
mov
jg
mov
roll
dec
push
dec
dec
mov
cmp
hlt
rcrl
lahf
and
cli
adc
mov
aaa
js
sbb
clc
xor
mov
movsb
xor
inc
ficoml
fldcw
pop
xor
shlb
sbb
dec
mov
mov
sbb
stos
and
aad
cmp
sti
pop
dec
int
in
in
mov
mov
cwtl
rcl
cmpps
jp
adc
adc
cmp
je
imul
cmpsl
imul
outsl
hlt
push
push
not
xchg
aaa
or
push
imul
adc
sub
pop
icebp
xchg
add
and
xor
jge
cs
enter
mov
mov
inc
hlt
adc
pushf
adc
mov
ja
pop
dec
fisubl
rcll
pop
shll
int
pop
aam
dec
add
xor
xchg
sbb
pop
lcall
gs
mov
cld
nop
sahf
in
jmp
shr
pushf
mov
and
fcompl
mov
sbb
popf
lahf
and
or
and
mov
data16
fsubr
pop
pop
mov
jp
inc
aam
cmovae
inc
xorb
into
push
dec
fs
mov
add
mov
out
lret
shl
inc
pop
dec
ja
cmp
int
mov
test
jne
add
add
sbb
stos
push
or
stc
cwtl
mov
std
jge
movsl
or
mov
icebp
push
and
aaa
aaa
test
inc
ljmp
ljmp
adc
sub
jl
je
fcoms
addr16
xchg
shll
popf
and
inc
mov
or
mov
mov
js
add
jb
punpckhbw
repnz
lret
mov
push
int3
inc
icebp
out
xor
add
mov
addr16
jp
push
leave
add
xor
hlt
cmpl
mov
fdivrl
clc
shrb
lahf
sbb
in
sbb
cmp
dec
adc
mov
pop
xchg
cmp
popf
jno
pop
sbb
mov
in
bound
mov
loopne
or
cmp
popw
loopne
pop
les
push
dec
rorb
icebp
cld
dec
sub
leave
dec
cmc
pmaxsw
push
inc
lods
test
adc
push
mov
das
add
push
cmp
daa
xor
add
stos
ret
and
sub
inc
je
rcr
inc
test
xor
sub
jns
add
rcll
xchg
adc
test
sub
shrb
xor
fsubrl
lods
pop
iret
lods
testl
loop
jb
mov
push
xor
addr16
aas
sbb
mov
dec
lea
push
lea
addr16
jnp
jle
cltd
andl
xchg
xor
adc
xor
jno
mov
lds
leave
lds
in
in
cwtl
or
movsb
add
pop
pause
sbb
cltd
or
jnp
loopne
sub
add
inc
jp
adc
andl
adc
add
mov
scas
enter
sbb
fimull
cmp
popa
push
push
icebp
inc
rol
movsb
call
addl
pop
mov
aad
out
iret
add
bound
loop
jbe
adc
and
cmp
sbb
cmp
adc
xchg
ja
ficoms
fisttps
into
push
push
aad
test
out
and
cmp
imul
inc
inc
sub
and
adc
sahf
mov
cltd
scas
sub
cmpsb
push
inc
jb
pop
mov
jp
and
mov
enter
int3
iret
hlt
cmp
xchg
jo
fadd
hlt
inc
inc
stos
stos
jns
cmpsb
mov
pop
xor
jno
inc
fwait
cmp
lea
stos
pop
push
aaa
add
xlat
test
mov
mov
mov
gs
jno
jecxz
xchg
xchg
xor
jg
mov
lock
add
rcrl
and
jo
insl
xor
cwtl
add
es
mov
mov
dec
icebp
xor
fisubrl
jp
xor
and
loop
nop
jns
mov
out
mov
jmp
pop
test
or
cmpsl
test
std
arpl
dec
movl
shrb
iret
ljmp
clc
imul
aas
jmp
int
aad
cmc
jmp
xor
imul
test
clc
sbbl
push
add
and
push
ljmp
fwait
cli
xchg
ss
ficoms
add
iret
sub
jne
inc
dec
int3
decb
push
out
cwtl
fcmovnu
mov
adcb
adc
add
add
cld
ds
lock
sti
dec
xchg
subb
mov
adc
js
movsb
arpl
inc
fwait
add
icebp
dec
push
sti
cmp
jnp
xor
inc
fmull
jnp
lcall
or
cmp
in
in
lret
push
fiaddl
mov
inc
or
adc
jg
movsl
push
mov
jnp
push
nop
push
mov
push
push
xor
cmc
jnp
scas
repz
loopne
call
out
cmp
jmp
mov
inc
adc
pop
add
repnz
clc
mov
push
lods
xchg
cmpsl
mov
xchg
lcall
incb
iret
xlat
fdivl
inc
xchg
cmc
sbb
jge
mov
jno
dec
fcomps
lea
aad
push
xchg
mov
dec
rcll
sub
mov
mov
mov
lahf
ljmp
jae
loope
cmp
and
dec
movsb
bound
lods
dec
repz
sub
or
subb
jo
into
pop
loopne
xchg
clc
pop
mov
adc
dec
add
dec
lcall
fistps
jle
mov
in
std
sub
mov
pop
sub
mov
mov
aaa
mov
pop
mov
add
int3
xchg
lahf
mov
mov
mov
adc
cmp
mov
stc
push
inc
push
fmuls
mov
or
roll
push
imulb
pop
pop
xchg
jne
xchg
jno
mov
fmulp
movsb
xlat
jnp
loop
aam
sbb
leave
or
jnp
rcll
aas
dec
icebp
xchg
mov
pop
and
repz
lahf
pop
adc
and
lock
mov
shlb
jne
aam
lods
jb
aam
pop
daa
aad
or
cmp
xchg
cmc
movb
add
scas
dec
fisttpl
xchg
jne
aad
mov
adc
and
in
hlt
jecxz
sbb
daa
jne
scas
test
jnp
ss
dec
push
pop
push
mov
lahf
add
sbb
inc
dec
icebp
incb
push
or
inc
mov
push
js
sub
cmp
push
pop
adc
sub
pop
addr16
aaa
and
mov
stc
mov
jge
es
in
subb
adc
dec
jle
adc
je
cld
in
inc
fsub
daa
inc
jmp
mov
repz
out
in
outsb
lock
dec
mov
cmc
sbb
jnp
sub
xchg
mov
pop
mov
nop
lcall
mov
imul
mulb
sar
add
mov
pop
cs
cmp
push
jecxz
xchg
xor
aas
mov
aad
sub
sbb
incl
pop
or
fucomp
and
add
push
adc
dec
and
mov
mov
out
std
test
inc
lods
jl
inc
jbe
test
inc
cmp
cmp
xchg
lods
bound
and
xchg
mov
lret
xlat
pop
inc
jmp
xchg
test
rcl
add
in
outsl
ja
mov
jge
adc
mov
jg
ror
mov
dec
mov
pushw
jb
pop
and
xor
mov
adcb
jmp
xchg
mov
mov
cld
inc
dec
adc
pop
lret
loopne
out
jp
outsb
mov
sub
xorl
in
inc
sub
dec
pusha
aaa
pop
lret
or
cmc
push
ret
push
mov
cmp
xchg
roll
loopne
and
out
bound
pop
bound
jne
dec
adc
aad
lock
cmp
push
xor
cmp
cmp
xchg
imul
fucomip
mov
xchg
adc
push
add
xor
xchg
jb
pop
popl
add
enter
and
inc
out
push
pop
push
insl
jge
sub
adc
sbb
mov
pushf
pop
pop
cmc
das
xlat
addb
dec
sub
mov
add
inc
sti
cmpl
test
cmp
pminub
cld
lods
pop
adc
inc
xor
xor
outsl
cmc
leave
imul
data16
in
pop
cld
ljmp
sub
fs
movsl
test
das
rol
movsl
jnp
jl
bound
add
pop
mov
fimuls
xchg
push
dec
sub
adc
dec
shrl
fnstcw
add
es
xlat
pop
mov
jne
in
push
cmp
adc
xor
push
lods
sbb
stos
xchg
adc
mov
add
dec
dec
and
mov
jns
pop
push
mov
adc
in
jo
inc
push
in
xchg
cmpsb
icebp
adc
pop
nop
sbbb
and
or
inc
lods
scas
adc
imul
aad
adc
and
push
imul
movswl
push
jne
push
insl
mov
outsl
fwait
lods
cmp
int3
mov
xlat
jg
xor
int
xor
sub
mov
sub
lcall
sub
jnp
int3
push
nop
mov
or
scas
sbb
mov
sbb
sbbl
mov
sti
pop
jg
shr
sbb
fstl
fcomp
adc
lds
frstor
sbb
stc
orl
mov
or
and
xor
xchg
mov
pushf
dec
arpl
popa
mov
add
xor
call
pop
ficoml
cmp
jg
leave
cwtl
movsb
outsb
movsb
ljmp
cmpsb
dec
pushf
cmp
sbb
add
mov
jb
xchg
mov
adc
xlat
addb
add
jo
cmp
ret
shrl
test
adc
lahf
jb
adc
call
test
pop
adc
rcrb
dec
adc
fsub
lock
lret
jnp
notb
iret
ret
insb
jge
leave
pop
pop
add
stc
mov
cwtl
rcrb
sub
dec
loope
in
ss
clc
rorb
and
xor
in
rcl
pop
cli
int
inc
pop
leave
or
and
jb
test
mov
int3
xor
lahf
mov
bound
dec
cmp
lahf
daa
fisttps
pop
and
mov
inc
mov
xchg
add
dec
jae
jmp
or
cmp
sub
je
xchg
rolb
pop
mov
std
lret
fiadds
subl
adc
arpl
pop
mov
fildl
scas
xchg
lods
loope
stos
cmp
xchg
ds
or
push
ja
ljmp
sarb
pop
sub
sarl
pop
popf
xlat
dec
lods
inc
xchg
fdivrs
clc
adc
and
call
jae
add
mov
mov
sbb
xchg
push
sub
pop
cmp
and
mov
les
xor
adc
dec
xchg
cld
push
jl
sbb
into
mov
add
push
arpl
pushf
sbb
dec
mov
mov
add
cld
pop
pop
pop
mov
into
mov
fisubrl
dec
sbb
sbb
loopne
shll
enter
ljmp
andl
sub
dec
lock
push
rdmsr
mov
jmp
sub
and
in
and
mov
xchg
push
mov
idivl
iret
jae
adc
out
pop
shrb
mov
sahf
pop
fistpll
mov
cltd
fcompl
adc
mov
push
repz
add
into
or
test
jbe
jecxz
mov
clc
movsl
test
jbe
arpl
push
add
shrl
bound
add
mov
xor
test
adc
dec
pop
jno
pop
loop
xchg
jmp
mov
and
and
pushf
sbb
fdivp
pop
outsl
sbb
push
mov
aas
in
mov
inc
push
mov
nop
inc
arpl
inc
mov
in
loopne
psubsw
xchg
je
notl
pop
aad
popf
test
js
adc
adc
std
xchg
jle
fucomip
stc
xor
jo
divps
out
lds
vpshlw
std
cltd
cmp
repnz
rcl
cmp
scas
ljmp
sub
xor
das
dec
leave
in
cmp
call
adc
pop
mov
sbbl
lret
mov
or
jmp
sbb
xor
imul
pop
aam
mov
cwtl
mov
pop
cltd
aam
pop
add
outsb
adc
lea
xchg
pop
aas
aad
pop
sti
in
mov
sbbl
mov
cmp
insl
sub
mov
aad
mov
xchg
mov
js
pop
push
and
push
pop
aad
inc
adc
dec
outsl
pop
jbe
andb
pop
outsb
push
addr16
lret
mov
movsb
inc
add
and
imul
jns
outsl
mov
sub
sbb
ljmp
les
lret
daa
cltd
or
and
daa
stos
xor
jns
jge
mov
repnz
xchg
sbb
test
cmp
xor
lret
aam
out
fs
aaa
inc
sti
inc
ljmp
in
sub
ret
pop
fcoml
dec
stos
insl
repnz
lock
clc
pop
test
outsb
dec
and
nop
ja
lret
stos
xchg
int
pusha
jnp
or
adc
sbb
fsubr
xor
mov
dec
cwtl
faddp
movsb
adc
xchg
call
nop
xchg
push
aaa
add
mov
adc
inc
or
xor
cmp
stos
xor
mov
test
mov
jg
lea
push
sbb
popf
mov
scas
lea
sub
add
pop
mov
lock
je
bound
ja
jnp
cmp
out
mov
mov
orl
mov
je
jecxz
into
jl
cld
insl
xchg
mov
adc
fstpl
or
scas
sub
negb
iret
pop
dec
leave
adcb
pop
xchg
leave
pop
leave
sarb
mov
and
enter
aaa
mov
mov
cmp
dec
cmc
daa
pop
cltd
add
jecxz
cmpl
cmp
rcrl
cmp
sti
push
je
lea
push
xchg
xor
dec
stc
mov
idivb
insb
cmp
addl
fistl
loopne
fucomi
sub
inc
daa
incl
aad
out
out
in
inc
lret
call
push
fdivrp
dec
dec
push
ret
clc
jbe
mov
xor
int3
imul
pusha
lea
cmp
addb
roll
jmp
test
popf
sub
rcr
out
in
ret
cmp
cmc
fisubs
hlt
mov
mov
push
or
cli
std
dec
stos
iret
and
pavgb
rol
fcmovnu
fisubrl
mov
popa
cmp
aad
and
outsb
jo
frndint
popa
test
dec
sub
int3
xor
jg
adc
fnstenv
jge
xchg
pop
insb
xor
subb
out
inc
roll
mov
or
adc
and
aad
stos
imull
test
mov
xor
aam
movl
xchg
push
inc
iret
cld
ret
push
and
mov
je
out
cmp
ss
dec
mov
xchg
xchg
xchg
add
fwait
shlb
call
scas
test
shll
adc
aas
insb
shl
mov
cmp
clc
push
pop
out
push
cld
sbb
hlt
jnp
cmp
mov
ret
push
jns
and
jae
loopne
filds
inc
fldcw
es
es
push
push
mov
mull
mov
sahf
pop
mov
push
into
mov
jne
std
xchg
mov
jecxz
pop
rcll
lods
adc
cmovle
mov
sbb
repnz
push
sahf
or
ljmp
pusha
subb
sahf
pop
stos
int
int3
int
xor
mov
outsl
sub
addl
add
sarb
loope
cs
pop
pusha
and
cwtl
xchg
sbb
cmpb
sbb
adc
inc
cmp
xchg
or
cmp
pop
sub
dec
scas
sbb
mov
xor
jno
cmp
jnp
inc
bsr
dec
sarb
sti
sbb
mov
add
cmp
inc
adc
mov
mov
mov
js
add
mov
fisttpl
mov
pop
cwtl
in
mov
pop
jl
add
aad
dec
hlt
and
js
cmpsl
cmp
repnz
mov
or
je
pop
loope
mov
in
arpl
cmp
test
sahf
js
xor
sub
in
xor
aas
xchg
scas
add
mov
lds
cmp
out
sub
jne
test
sbb
push
inc
shrl
mov
fistpl
sub
jo
dec
sbb
push
dec
mov
jmp
std
jbe
inc
jb
call
push
in
cmp
xchg
push
add
js
sahf
cmpl
into
dec
mov
out
jo
xchg
movsb
sub
enter
nop
add
mov
mov
sti
aam
jg
pop
mov
call
pusha
icebp
inc
enter
arpl
xorb
pop
mov
sarb
sti
pop
jle
jle
and
push
pop
daa
mov
js
pop
push
push
adc
dec
xor
inc
inc
icebp
mov
out
test
stc
push
mov
inc
lds
push
inc
pop
loope
test
bound
and
inc
dec
inc
fisttpl
xchg
test
push
imul
outsb
or
mov
push
jns
fisubs
cmp
fcmovbe
mov
sub
mov
stos
inc
or
xchg
ds
jle
cwtl
pop
xor
cmc
mov
movsl
gs
enter
or
out
dec
jg
sarb
cmp
andb
nop
pop
adc
shl
dec
clc
fcomip
mov
lret
mov
push
in
nop
test
cmp
and
ffreep
pop
mov
je
icebp
add
enter
in
xchg
popf
inc
lods
sbb
lods
and
subl
lea
push
enter
inc
cmp
daa
div
jb
cmp
or
jecxz
roll
shll
test
cmp
imul
jg
decb
arpl
imul
xchg
mov
dec
jp
andl
mov
push
out
mov
inc
cmp
and
pushf
in
or
in
aad
adc
in
xchg
dec
xrelease
outsl
icebp
fdivs
nop
loop
adcl
mov
mov
cli
test
push
jge
rcl
cmp
pop
push
in
nop
test
dec
sbb
push
jge
shll
ret
dec
sub
jo
jb
in
lock
dec
xchg
xor
stos
test
imul
fwait
jle
inc
fldcw
test
cmp
ret
jns
adc
mov
pop
jge
push
dec
stos
mov
sbb
mov
test
iret
mov
mov
xchg
movsb
fsubl
dec
gs
sbb
scas
xor
jecxz
pop
lods
sbb
adc
sbb
push
outsl
sub
int3
push
mov
jg
int3
shrl
or
fs
int
jp
jns
and
pop
loopne
pushf
iret
shlb
and
xor
mov
cmp
cltd
jnp
imul
fisubrs
dec
out
inc
jne
and
xchg
rcll
inc
jb
mov
adc
out
rcrl
jns
lret
sbb
stc
mov
xchg
mov
sbb
or
sub
push
mov
lcall
movsb
aaa
popa
or
clc
mov
stos
mov
incb
xchg
andl
xchg
stc
push
cltd
push
jl
addr16
add
xor
pop
sub
lds
push
loopne
jmp
shrd
mov
sbb
dec
lods
cmpsb
in
stos
outsb
jb
lods
cltd
push
jo
pop
jmp
les
enter
mov
repz
inc
add
ss
aad
lds
and
add
shll
xor
mov
sbb
and
icebp
call
add
push
inc
and
jg
fnstsw
push
iret
mov
push
cmc
aad
in
es
mov
xor
cmpsb
fimuls
dec
add
pop
pushf
icebp
stc
lcall
xchg
repz
addr16
adc
pop
mov
dec
lret
jmp
loope
dec
shr
mov
jno
inc
mov
pushf
lods
stos
adc
pop
adc
mov
mov
shl
mov
lods
sbbb
inc
jecxz
push
fwait
sbb
lcall
stc
outsl
add
and
push
leave
insl
inc
iret
shll
sub
jb
fcoml
outsb
in
aas
sbb
and
jecxz
popf
push
adc
push
pop
cld
cmp
lcall
enter
jnp
push
vphaddbd
ljmp
jae
aad
test
fcoms
sub
test
sub
sti
mov
roll
daa
cmp
icebp
cmpsb
cmp
mov
lahf
lods
pop
add
rclb
mov
fisttpll
mov
outsb
out
xor
sbb
mov
pop
push
mov
and
jp
sub
arpl
stos
xor
and
push
rcrb
sub
out
je
push
add
aas
int3
xchg
push
push
mov
es
fisttps
inc
test
cmp
adc
stc
dec
enter
or
push
shll
aad
int
les
mov
out
push
push
xchg
mov
imul
in
adc
int
jecxz
cmp
cmc
push
add
or
daa
clc
mov
cmp
fisubrs
cmpsb
mov
icebp
inc
fiaddl
in
push
ja
xlat
outsb
mov
mov
int
movsl
mov
scas
loope
pop
cmpl
lcall
push
stos
inc
leave
mov
mov
iret
setl
sahf
mov
repz
inc
dec
sbb
gs
scas
sbb
cmpsl
xor
mov
sbb
push
loop
dec
inc
pusha
jmp
insl
hlt
cmpsb
sbb
in
in
js
iret
inc
out
addr16
in
sub
push
sub
jle
aas
mov
iret
in
add
push
sbb
or
pop
sar
xlat
push
adc
mov
jns
xchg
jo
push
lock
xchg
aaa
pop
outsb
pop
mov
mov
lods
popf
arpl
pop
cmp
cmpsb
pop
test
xchg
cmp
jmp
cmc
pop
sahf
in
push
cmpsb
pop
mov
jmp
xor
inc
and
push
daa
sbb
mov
pop
inc
nop
ret
push
inc
sub
data16
pushl
mov
jl
stos
clc
fnstsw
int3
fs
fs
int
mov
ljmp
and
cmp
lcall
mov
push
jnp
dec
jno
mov
push
dec
jae
repz
out
xchg
data16
sub
mov
call
push
adc
cmp
xchg
gs
mov
mov
sub
in
pushl
push
dec
adc
pop
pop
pusha
out
cld
sub
dec
in
loope
lea
sbb
dec
mov
inc
sbb
shll
jmp
jge
xor
sub
cld
daa
pusha
mov
addr16
push
inc
scas
xchg
mov
pusha
inc
aaa
test
rorl
inc
inc
imul
pusha
rep
neg
push
nop
fs
sbb
adc
fwait
out
ret
xchg
push
loop
imul
imul
mov
idivl
dec
or
sub
push
xor
jne
adc
out
pop
and
dec
lea
mov
stos
jno
dec
inc
add
mov
imul
pop
mov
test
mov
mov
scas
mov
sbb
fwait
inc
jp
dec
bound
insb
pop
and
fmul
aaa
and
pop
hlt
popa
test
jb
loop
push
call
dec
inc
and
cmp
adc
adc
mov
or
icebp
mov
fldenv
rclb
lods
cltd
inc
sbb
cmp
mov
cmc
cld
out
fisubl
sub
xchg
es
mov
push
stc
testb
fdivs
dec
ficompl
push
rcr
pop
stos
cmpsb
jo
xchg
sub
and
dec
cltd
jo
dec
mov
add
xor
and
pop
sbb
add
and
push
loop
push
lret
aaa
jae
pop
mov
xor
lock
dec
neg
inc
addr16
pusha
or
pop
mov
cmp
into
pop
pop
in
in
xor
or
repnz
or
imul
mov
mov
scas
lret
and
loop
sti
add
jbe
arpl
movsb
mov
mov
cli
jb
push
jecxz
loopne
sub
rolb
dec
bound
jl
repz
sub
adc
inc
outsl
testb
sbb
loopne
hlt
or
std
dec
das
icebp
pop
aam
push
iret
push
jns
pop
aam
add
or
scas
enter
cltd
nop
adc
jnp
xor
lea
cs
pcmpgtb
shll
xor
and
int3
popf
add
sbb
jbe
iretw
pushf
je
sarb
or
dec
sarl
icebp
cmpsb
jo
movsl
push
xchg
jne
xchg
scas
aas
shl
cmpsl
int3
xchg
jnp
mov
adc
in
or
int
out
or
pop
repz
pusha
sbb
jb
adc
xchg
mov
ljmp
stos
push
inc
pop
mov
je
mov
out
nop
and
fildl
movsl
mov
out
xor
xorb
add
dec
dec
mov
sahf
mulb
inc
mov
mov
adc
imul
xor
jb
cltd
loop
mov
inc
jge
cmp
jg
cltd
lret
sub
cltd
mov
mov
jle
loopne
push
push
fcompl
inc
pop
jae
sub
cld
mov
dec
cmc
mov
mov
scas
fidivrs
ja
lock
cmp
in
jno
sbb
cmp
mull
in
int
sbbb
adc
test
es
dec
out
pop
je
mov
les
add
aaa
test
adc
out
xor
fimuls
orb
roll
or
movsl
adc
mov
shll
or
or
enter
xor
jecxz
pop
inc
das
shlb
jecxz
pop
lcall
movb
nop
and
sbb
cmp
shlb
cli
pop
loopne
cli
call
hlt
clc
lods
decb
lret
xor
rolb
add
jecxz
mov
push
lcall
xor
imul
pop
imul
cmp
shlb
push
adc
insl
add
fnstenv
push
jnp
jo
xchg
loope
xchg
loop
xor
sbb
jno
dec
mov
xor
adcb
sub
add
or
test
mov
lods
xlat
push
lahf
fmuls
ljmp
jns
out
lods
sbb
xlat
leave
jns
imul
or
pop
xchg
sbb
loopne
jle
dec
test
jmp
dec
dec
scas
rcl
iret
xor
pop
mov
cmp
cmp
jbe
ds
cmp
cltd
cmp
xchg
mov
ret
add
xlat
fstps
sarb
ja
fcomps
mov
push
mov
mov
in
cmc
cmp
mov
idivb
adc
fsubs
ds
pop
mov
ja
fcomps
inc
dec
addr16
jl
hlt
lods
loope
dec
fsub
leave
xor
sti
and
stos
pop
nop
add
int
fdivrl
lods
jnp
subb
icebp
xor
push
imul
cmpsb
push
dec
inc
insb
add
lods
movsb
orl
outsb
xor
in
shl
add
inc
inc
test
mov
stos
decb
notb
push
push
cmp
jno
repz
addb
js
mov
clc
cmp
adc
mov
add
repnz
dec
cmp
or
mov
cmp
stos
test
sbb
das
cmp
add
stos
out
pop
jmp
orl
mov
hlt
out
imul
cmp
fucomi
or
out
mov
leave
cmpsl
dec
jecxz
rol
nop
add
adc
loope
cmp
inc
jle
pusha
push
push
adc
dec
and
loope
outsb
test
pop
lds
add
repz
rcl
jnp
mov
xchg
xchg
daa
push
jo
cmc
xchg
je
mov
pop
inc
jae
inc
jnp
add
xor
sub
test
inc
adc
cmp
fucomip
daa
icebp
jp
dec
out
dec
fdivrs
lock
pop
cs
dec
xor
xchg
rcrl
mov
add
lea
dec
mov
and
int3
lahf
adc
mov
lret
shlb
inc
cld
cltd
jle
je
cmp
cmp
and
mov
dec
cmp
data16
push
push
addl
cmp
loop
sbb
and
jo
push
rcll
rcr
stos
mov
loop
aas
adc
test
mov
pop
xchg
inc
jge
push
outsl
sbb
fs
xor
sarb
mov
sbb
cltd
mov
lahf
insl
add
subl
push
aam
or
rclb
xor
sub
fcmovnu
xlat
js
xor
es
test
cmp
push
xor
stc
push
pop
movsb
dec
adc
inc
push
push
fwait
push
fsubr
insb
add
cmp
nop
xchg
mov
push
shrb
mov
aad
gs
add
push
flds
push
mov
cmp
pop
sarl
popa
shll
test
add
sub
sub
xchg
test
call
stos
cmp
out
and
inc
cltd
jl
and
inc
enter
adc
sbb
xor
inc
jnp
sti
pop
aad
jmp
stos
pop
mov
mov
xchg
shlb
jg
or
adc
inc
pop
xchg
and
scas
movsb
push
and
aad
push
push
inc
xchg
notb
jno
inc
and
dec
and
lahf
push
int3
sahf
imul
mov
mov
inc
sbb
pop
orl
scas
sub
lods
push
mov
je
cmpsl
jmp
sub
cmp
insb
loope
mov
cmp
push
and
sub
lret
xchg
push
aad
pop
mov
mov
loope,pn
ds
data16
out
mov
push
shlb
shll
stos
sahf
mov
push
pusha
sub
xor
outsl
jns
test
or
xor
testb
andl
mov
xchg
pop
jb
pop
les
aaa
scas
jbe
fs
popl
sub
sub
jo
rorl
pop
sbb
mov
es
jno
das
popl
mov
ljmp
adc
popf
sahf
mov
cmp
xor
add
and
xchg
aad
cmp
pop
add
cmc
sbb
adc
jg
stos
out
push
jge
and
sub
dec
stos
popa
int3
dec
scas
jle
pxor
fdivs
adc
jecxz
cmp
cmc
popa
icebp
aam
push
dec
fninit
jle
sbb
add
ret
imul
out
xchg
in
sub
fisubrl
add
add
rcr
xor
cmp
mov
mov
jb
in
aas
jns
into
gs
jns
das
xorl
push
test
push
inc
xchg
test
lea
sti
push
stc
int
cli
dec
push
mov
and
push
pop
cmc
lahf
push
xor
mov
aaa
jo
inc
mov
sti
pop
in
ss
lock
cmp
cld
push
jo
fimull
test
adc
xchg
ret
cltd
sub
es
dec
and
test
mov
inc
clc
stos
mov
jno
jbe
or
popa
or
stc
aaa
pop
jp
mov
aam
loop
std
cmpsl
das
pop
stos
pop
jle
je
mov
loopne
or
inc
pop
mov
mov
xchg
andl
pop
cs
out
pop
fistps
mov
fs
lock
mov
test
xor
out
fildl
lret
cmp
dec
bound
popf
imul
orb
xor
pushf
shrl
jbe
cmc
ret
lret
out
cmp
into
std
or
or
ljmp
fdivr
shl
sub
das
mov
push
jmp
adc
aaa
add
push
xchg
hlt
push
ja
inc
ljmp
rolb
out
cmpsb
sbb
jo
popa
adc
rcrl
ljmp
incb
rcrb
jbe
repnz
lds
xor
call
stos
or
xchg
sti
sub
or
lea
pop
xchg
sbb
flds
jmp
mov
mov
and
mov
mov
decl
faddl
xorl
fs
lea
xchg
cwtl
enter
ljmp
mov
mov
in
sti
fstpl
dec
jp
fstl
fldcw
fisubrl
movsb
mov
lods
cmp
mov
arpl
test
mov
xchg
adc
inc
mov
aaa
ret
mov
pushf
inc
dec
jnp
push
test
js
mov
das
loop
fadds
in
push
lea
mov
icebp
imul
inc
xor
pop
sti
cmp
mov
aaa
cmp
pop
mov
shll
jns
sbb
bound
push
jg
sub
ljmp
push
imul
adc
in
and
ds
cmpsb
add
idivl
jns
lock
into
test
int
call
dec
lfs
add
xor
push
imul
in
xchg
adc
mov
fldl
mov
jne
sub
push
jmp
jge
xor
popf
popf
leave
xlat
sahf
jecxz
mov
scas
imul
inc
push
fnstsw
test
cmpsb
xor
std
or
jle
test
pop
sbb
jl
or
int
movsb
pop
mov
lcall
loope
and
cmc
ljmp
stos
or
pop
movb
push
cmpsb
es
movsl
out
iret
sub
mov
enter
mov
pop
jmp
addb
aaa
jg
mov
mov
movsl
sub
or
pop
mov
loopne
inc
adc
push
sbb
loopne
imul
jae
adc
lds
fisubl
out
mov
repnz
es
es
sahf
cmpb
cmp
cmpsl
xlat
sbb
inc
fs
test
les
jp
pop
ljmp
fnstcw
add
std
test
push
enter
xor
ljmp
daa
sub
add
lret
sub
sub
or
test
fldl
dec
mov
mov
cmpsb
loope
movsb
rolb
xchg
inc
adc
mov
test
incb
stos
add
leave
sub
and
cmp
lea
lods
dec
lods
arpl
or
inc
mov
sbb
mov
sbb
cmp
dec
jns
in
xor
daa
aas
in
xchg
mov
cmpsb
jne
lcall
inc
out
jno
fldcw
out
stos
mov
mov
pop
dec
push
and
mov
add
sti
out
mov
push
stos
sub
gs
mov
insl
mov
das
pop
cmpsb
inc
xchg
int
test
fcompl
mov
push
mov
aad
test
jno
jbe
or
std
int3
lds
jg
lahf
cmc
dec
pop
lods
out
popf
pushl
jb
lret
stos
sbb
in
push
psubb
cltd
adc
mov
push
je
mov
mov
ret
jo
lods
cmc
xorl
push
repz
mov
sub
aam
mov
jp
insb
movb
xor
jbe
fiadds
and
add
jnp
or
test
or
ret
lods
sub
push
rcl
lret
iret
push
sub
imull
out
out
in
cmp
xchg
pop
ja
push
mov
pusha
xchg
sub
enter
pop
dec
cwtl
mov
orb
stc
sbb
enter
dec
dec
popa
sbb
lods
adc
enter
jne
fs
cmp
and
jbe
rol
enter
push
mov
notl
dec
mov
push
fcmovbe
push
push
fisttps
loopne
jmp
pop
adc
aad
and
les
xchg
push
xor
inc
js
mov
mov
dec
fimull
jb
xchg
repz
xchg
enter
rolb
mov
adc
jno
pop
push
imul
jg
sub
stc
sbb
add
les
in
fbstp
aaa
adc
or
dec
cmp
cmc
push
into
outsl
popa
pop
cmpsl
arpl
imul
pop
imul
pop
andb
and
mov
insb
fistpll
imul
or
mov
ja
inc
mov
add
gs
push
mov
mov
stos
xchg
xor
insb
cltd
pop
inc
dec
repnz
les
jbe
inc
inc
test
cmp
add
inc
or
mov
scas
outsb
and
cld
pop
sbb
pop
cmp
mov
mov
inc
pop
pop
cmp
mov
sahf
out
icebp
xchg
jae
js
into
xchg
inc
in
cmp
dec
add
sbb
push
fcoml
fstl
daa
pop
fcoms
mov
or
mov
push
lds
jns
out
inc
and
repnz
scas
lret
sti
dec
xor
vmovaps
jno
fisttpll
sub
lahf
mov
push
sub
insb
leave
xchg
pop
push
inc
push
sub
add
inc
pop
push
decl
mov
ret
xchg
mov
fnstsw
sar
movsl
icebp
mov
imul
in
out
cld
cmp
stc
repnz
aam
scas
pop
stos
xor
push
scas
mov
jo
rolb
mov
out
aad
jecxz
cmp
fidivrs
aaa
test
adc
ret
cmpsl
mov
idiv
movsb
xchg
and
or
pop
insb
popa
mov
add
add
jbe
mov
xchg
push
mov
mov
jne
fidivl
imul
dec
insb
xchg
fsubl
inc
jnp
imul
ffreep
jae
mov
jae
nop
insl
inc
mov
lcall
sbb
test
je
insb
lret
xchg
and
sbb
sbb
xchg
stos
dec
dec
outsl
sbb
xor
sub
rol
imul
les
mov
inc
jle
clc
pop
mov
fcomp
fnclex
push
and
jns
jl
mov
and
mov
mov
jl
add
cmp
movsl
lcall
inc
sub
nop
clc
out
cmp
xor
lds
fsubrl
scas
mov
stos
push
ret
sbb
mov
xorb
push
push
ss
out
stos
popl
call
and
ret
sbb
shrb
cmp
mov
andl
fildl
cmp
inc
push
stos
loopne
andb
mov
test
sahf
outsl
mov
les
lods
pushf
sbb
lods
stos
repnz
into
push
pusha
leave
dec
mov
mov
sbb
out
mov
ss
adc
daa
xchg
sahf
and
and
iret
imul
jecxz
jo
divl
dec
mov
call
testb
inc
clc
xchg
mov
inc
xchg
mov
xchg
sbb
adc
push
shl
gs
sub
out
jo
je
shlb
mov
dec
dec
or
hlt
or
jbe
inc
or
imul
pop
cli
mov
sbb
adc
js
add
push
das
sub
add
lret
cmc
dec
fisubl
or
sub
cli
mov
dec
sub
xchg
cwtl
push
cs
in
aas
jp
and
mov
stos
sub
mov
gs
insb
mov
outsl
lret
mov
mov
cmp
cmc
icebp
ret
push
adc
clc
aad
jmp
sbb
and
add
add
add
ret
xchg
inc
divb
jo
rolb
sbb
shrb
dec
scas
xchg
xchg
and
out
add
adc
cmp
fnstsw
and
fistpl
push
out
pop
cmp
loope
sti
push
sub
enter
cld
pop
mov
xlat
fdivs
rcll
cmp
jne
call
into
add
mov
call
inc
inc
inc
xchg
imul
cmp
pop
shll
mov
mov
pop
push
pop
lret
in
jl
adc
leave
xchg
fiaddl
jnp
xchg
rol
stos
dec
pop
andb
mulb
jp
inc
mov
into
shll
jb
xchg
jae
lret
lea
adc
mov
mov
in
sti
enter
loopne
je
mov
and
cmpsl
inc
fldenv
mulb
imul
loope
add
lahf
adc
sbb
ret
dec
mov
mov
jnp
int3
shll
cmp
xchg
mov
add
movsl
cmpsb
call
mov
fwait
sub
dec
add
stc
pop
add
add
inc
test
xchg
and
ja
stc
sbb
hlt
pcmpgtw
ja
cmpsl
pop
and
jl
dec
xchg
add
notl
jl
shrb
inc
mov
jo
cmc
and
cmp
or
push
add
mov
mov
push
push
int3
mov
cmp
dec
movsb
outsb
mov
mov
mov
sub
icebp
adc
mov
mov
lea
xor
aad
pop
cmpsl
xor
xor
in
inc
pop
mov
fsubl
popf
rclb
sub
jnp
dec
lret
bound
push
or
out
test
push
or
test
loope
pop
pop
dec
mov
jmp
es
push
fisubs
nop
cmp
in
push
mov
bound
fbstp
pop
dec
test
test
repz
pop
out
jp
es
mov
cmp
data16
and
sub
fidivrl
and
into
inc
js
push
fnstenv
es
out
out
mov
int3
sub
push
mov
pop
int
das
in
mov
ds
out
outsb
fwait
xor
jo
mov
fistpl
and
aas
lret
mov
push
jecxz
add
xchg
xor
dec
outsl
pop
mov
test
data16
xchg
xor
clc
mov
vpcmpeqb
or
sub
sub
add
lea
cs
push
mov
xor
sub
dec
daa
push
sti
pop
lret
xor
mov
ss
int3
mov
in
dec
sub
xor
ror
jg
pop
adc
xor
mov
inc
cmpsl
jae
adc
stos
repz
pop
cmp
imul
loopne
rcr
cmc
fimuls
sbb
mov
and
in
es
or
icebp
daa
divb
pop
cmp
repnz
xor
jns
mov
jae
les
and
incl
leave
mov
loop
jne
rdtsc
orl
mov
repz
push
jnp
jae
imul
adc
fdivrl
mov
je
addl
sub
sub
divb
rcrl
lahf
mov
sub
mov
lock
pushf
fmull
xchg
mov
pop
jnp
sub
xchg
jbe
mov
sub
loop
loope
adcl
jns
gs
cmp
or
push
cwtl
int3
adc
jo
push
iret
lret
cli
fisubs
mov
arpl
add
stos
leave
dec
shll
dec
aam
sub
sbb
jecxz
xchg
xchg
sub
sub
fisubrs
cmp
iret
mov
icebp
lods
xchg
push
xlat
out
push
jae
lods
sbb
nop
inc
mov
sbb
or
out
sbb
lock
outsb
xchg
lret
pop
stos
adc
arpl
in
stc
and
out
testb
add
popa
es
lods
cmp
cs
fbstp
movb
gs
dec
add
test
cmp
aas
jns
dec
jmp
hlt
mov
shrl
in
movb
xor
mov
mov
sbb
jg
test
icebp
scas
insl
cmpsb
push
insb
mov
sbb
mov
fbstp
xchg
and
cltd
and
fadd
nop
push
scas
push
cs
movsl
inc
cwtl
sub
mov
inc
adc
mov
adc
xchg
push
lret
lea
sub
in
cmp
shl
and
cmp
ds
xchg
daa
jae
int3
jns
out
mov
lret
push
cmp
jp
cli
lahf
addb
ret
cs
push
mov
inc
sbb
xchg
ficomps
into
arpl
add
pop
jge
dec
arpl
fnstcw
jle
and
int3
push
pop
mov
or
fdivl
inc
sbb
jl
inc
outsl
pop
in
cltd
fstl
pop
lcall
mov
jmp
ret
add
inc
enter
cmp
loope
add
cmp
sbb
push
gs
pop
dec
cmp
mov
jmp
push
ret
add
xchg
cmp
and
add
xchg
divb
mov
mov
adc
inc
mov
dec
out
es
shlb
insb
xor
mov
xor
leave
add
adc
shr
das
outsb
dec
ficoml
fmuls
int3
gs
fsts
dec
movsl
cmpsl
leave
repz
adc
ljmp
dec
daa
xor
out
pushf
lock
pop
shll
lret
jge
pop
das
sahf
popf
mov
xor
fisubrl
push
pop
fs
or
jo
cmpsb
push
aam
mov
xchg
mov
sbb
insb
in
insl
in
sbb
inc
lock
mov
out
inc
inc
jp
push
mov
mov
sahf
or
adc
decb
ja
jns
ret
pop
lahf
dec
fucom
and
push
mov
pop
mov
mov
mov
pop
mov
rorl
pusha
imul
inc
repnz
ret
sub
push
in
jp
dec
jg
in
cmp
scas
push
test
pop
adc
test
scas
jecxz
icebp
scas
iret
dec
dec
push
jno
insb
std
dec
mov
add
inc
sbb
xchg
xor
and
jle
or
pop
in
pop
scas
sbb
jle
data16
push
mov
push
push
sbb
inc
aam
in
in
mov
divb
sbb
sub
jno
pop
repz
inc
sub
test
gs
mov
jecxz
popa
dec
jle
and
cs
sarl
dec
out
push
in
inc
xchg
or
test
addr16
stos
imul
fwait
mov
xchg
sub
jns
xchg
mov
fisttpl
dec
inc
das
outsb
inc
mov
adc
movsl
mov
jae
cltd
or
push
sti
jns
jnp
mov
dec
fwait
mov
mov
lds
andl
dec
jbe
jmp
inc
cmp
push
pop
into
xchg
cmp
test
out
mov
add
mov
pop
adc
jbe
les
or
mov
ficompl
mov
imul
movsl
mov
mov
jp
lahf
push
inc
cmp
lds
pop
xchg
mov
iret
iret
iret
xor
sub
dec
mov
jns
repz
xchg
adc
xchg
sbbb
xchg
lods
fcmovbe
inc
xchg
push
cmc
push
ss
adc
add
cmpsl
dec
pushf
and
imul
dec
in
lds
add
push
jae
jns
cmc
jg
mov
fnstsw
out
adcb
dec
cmp
fisubrs
inc
into
sbb
mov
std
dec
and
add
pop
aam
pop
loope
or
testl
nop
je
mov
shrl
pop
les
std
fdivl
mov
pop
gs
repz
or
dec
jge
sub
mov
xlat
inc
fidivs
testb
rcl
xor
fisubrl
push
mov
add
ret
add
mov
cltd
push
addb
cmp
inc
xor
lods
jae
shlb
xor
xor
inc
mov
dec
arpl
push
xchg
sub
fstl
movsb
push
push
scas
inc
scas
sahf
xchg
jno
mov
push
jnp
push
out
cwtl
hlt
mov
inc
dec
nop
adcb
cwtl
fwait
pop
loop
repnz
pop
dec
shrb
add
jle
mov
fistl
loopne
mov
popa
fcmovu
scas
xorb
jno
test
cs
rorl
jbe
fsub
push
mov
pop
push
xor
adc
sahf
push
cmpsb
jb
sti
push
mov
loop
repz
cmpl
test
jae
ret
and
jns
and
cmp
lcall
js
cli
movsl
loope
xchg
jg
call
popf
mov
lret
add
mov
jg
and
sub
mov
and
pop
popf
lea
dec
and
stos
xor
jno
ret
xor
out
clc
out
push
addr16
pop
mov
mov
or
push
jb
mov
repnz
mov
push
xor
call
xor
push
xchg
repz
fildl
test
push
jnp
es
outsl
mov
idivb
push
aad
imul
push
lahf
pop
mov
int
scas
pop
jbe
in
and
ljmp
xchg
rorl
mov
in
or
js
push
bound
inc
add
push
mov
pusha
fstl
ja
jecxz
and
stc
std
jg
jns
pop
dec
push
pop
pop
xchg
sbb
xchg
or
and
mov
shl
nop
cmp
popa
push
fcoml
pop
cli
mov
mov
jne
sbb
adc
adc
test
shrb
adc
test
pop
adc
sbb
bound
aaa
clc
test
push
push
je
cs
icebp
push
xor
sar
cs
jge
scas
inc
pop
fsub
loop
cmp
and
cmp
repnz
sbb
cwtl
sub
fisttpll
inc
cmp
leave
inc
mov
fcmovu
mov
rolb
aam
rcrb
sbb
dec
inc
sub
cmp
jmp
hlt
shll
stos
mov
xchg
sbb
out
push
adc
xchg
push
leave
ss
loop
stc
popa
push
sbbl
lods
push
stos
repz
jl
scas
frstor
mov
std
add
ljmp
gs
jb
mov
xor
in
dec
mov
lahf
cmpsl
mov
xlat
into
sub
inc
pop
inc
mov
inc
push
mov
push
xor
sub
cld
lods
lret
inc
push
xchg
jge
mov
in
shrl
xchg
fmull
inc
push
inc
xchg
and
loop
cltd
cwtl
pop
jae
cvttps2pi
pop
mov
pop
lcall
fistl
mov
arpl
addr16
xchg
aas
adc
inc
pop
mov
fsubl
addl
leave
pusha
and
out
sub
negb
fwait
movsb
jl
std
add
adc
cmp
mov
ds
push
push
push
ja
fwait
std
xchg
rcl
fwait
pop
movl
mov
push
lret
or
adc
cmp
das
push
fwait
mov
imul
push
push
dec
mov
or
mov
jmp
xchg
adc
sub
mov
push
jg
mov
popf
gs
push
clc
lds
mov
test
mov
inc
xchg
jecxz
jmp
sbb
add
pop
push
movsb
mov
pushw
cmp
orb
xchg
sbb
mull
push
popf
push
or
push
xlat
aas
mov
js
mov
mov
sub
inc
xchg
xlat
mov
xor
sub
cwtl
adc
ljmp
mov
je
jge
outsb
test
push
movsb
dec
sub
out
push
lods
and
jb
pop
inc
mov
enter
cli
leave
cmp
jl
ja
out
repnz
jno
ds
and
and
xor
scas
dec
and
js
mov
inc
nop
mov
lea
pop
sbb
dec
loop
int
repz
mov
bound
dec
add
jge
sub
sahf
dec
enter
test
inc
xchg
pushf
dec
std
ds
movsl
mov
push
icebp
js
mov
repnz
mov
add
or
cmp
jecxz
sbb
fidivs
inc
sub
cmp
adc
jl
xor
cmc
sub
lret
clc
movsl
rolb
out
cmp
sti
add
clc
xchg
push
dec
movsb
pop
orl
xchg
cwtl
jne
mov
jns
pop
lahf
dec
insb
out
bound
jp
dec
sub
gs
sub
push
push
dec
inc
lcall
sbb
addl
and
lock
pop
jns
aad
mov
cmpsb
ljmp
jbe
mov
pop
mov
xor
in
insl
jl
jne
stos
imul
pop
mov
pop
xor
stc
jle
lret
pop
push
push
les
test
add
dec
in
mov
ja
ds
jge
mov
stc
jl
lret
aas
dec
cmp
pop
in
cmp
xor
leave
mov
shlb
cmp
jb
cmp
ja
aaa
test
test
lock
pop
test
and
test
jmp
jb
aad
inc
addl
dec
cmc
xchg
outsl
fsubrs
or
shrb
adc
out
rclb
jns
movsb
xor
mov
sub
icebp
dec
adc
pushf
sub
pop
test
xor
pop
xchg
mov
repz
and
jne
lods
popf
mov
test
xor
loope
adc
add
lods
sti
daa
mov
hlt
insb
sub
dec
adc
adc
or
mov
xchg
gs
or
shr
jnp
sahf
enter
add
xchg
sbb
dec
insb
int
add
cmpsb
adc
jl
push
hlt
pop
xor
das
xor
sbb
in
lods
popa
fcomi
push
imul
ja
sarl
and
lahf
push
cs
or
testb
xabort
lods
mov
jle
fwait
pop
cwtl
fstpl
sar
icebp
xlat
push
or
inc
aad
mov
fsubr
sub
xor
popf
xor
jecxz
cs
mov
mov
bound
pop
mov
fcoms
sbb
das
cli
add
jns
in
mov
call
lds
lods
mov
je
mov
push
lods
idivb
sbb
adc
dec
pop
dec
imul
inc
dec
popa
rclb
jne
lcall
fwait
push
cwtl
sbb
addr16
ja
iret
adc
push
fs
adc
jg
stos
mov
lret
in
arpl
in
syscall
fs
dec
aas
pop
rcr
and
lock
dec
jae
xlat
imul
and
mov
sbb
daa
and
mov
in
insl
mov
pop
mov
sbb
mov
testl
outsl
iret
pavgb
fsubrl
andl
mov
into
cmc
sbb
jo
into
push
cmp
sub
sub
dec
insb
inc
fs
add
cli
adc
add
xchg
dec
ljmp
mov
fisttps
mov
jne
ret
xchg
lock
roll
subl
rcrb
and
push
jmp
pop
hlt
jb
idiv
lahf
cmpsb
jbe
and
sbb
pop
jnp
or
add
test
mov
push
lock
cmp
cmp
xlat
test
fs
mov
cmp
cmpb
sti
hlt
mov
fwait
xorl
cwtl
sbb
iret
mov
xor
pop
es
outsl
std
iret
or
imul
push
cmp
fcoms
jl
ja
pop
mov
and
in
xchg
imulb
pop
repnz
dec
ja
adc
test
jo
mov
ds
je
in
push
jae
pop
mov
dec
setae
mov
lock
mov
sbb
clc
mov
jne
sub
xchg
or
hlt
adc
cmp
add
mov
in
test
sub
fstl
lods
jae
js
out
mov
cmp
xchg
cld
les
imul
and
add
enter
mov
jg
ss
fnsave
sub
push
sbbl
and
add
mov
add
lret
xlat
in
movsl
mov
mov
mov
cs
dec
adc
jl
dec
out
shlb
pusha
or
fucomip
movsb
stos
rcrb
sahf
outsl
std
int
or
add
test
cmp
insl
ljmp
data16
insl
popa
xor
sbb
adc
rorl
in
int
add
mov
outsl
insl
push
mov
mov
aam
out
cmp
sbb
push
cmc
lret
ss
int
shlb
mov
dec
les
push
nop
jno
lahf
roll
iret
dec
lret
out
lock
or
cmp
adc
push
xchg
out
dec
mov
xchg
pop
add
xlat
adc
xor
sub
inc
jmp
jae
daa
dec
scas
rcll
cmpsb
or
es
jns
into
sbb
inc
bound
mov
leave
cwtl
xchg
sub
mov
stos
push
outsl
call
stc
roll
cwtl
add
out
dec
adc
pop
push
in
pushf
cli
es
mov
sarl
call
add
stc
mov
and
std
pop
xchg
js
pop
mov
sbb
nop
xchg
sbb
and
int
outsb
mov
inc
jl
mov
pop
lret
lds
aad
adc
mov
dec
and
xchg
cs
sub
jmp
call
mov
fcoml
fldenv
cmp
in
popf
push
repnz
popa
js
mov
xchg
cli
fidivrl
lods
repz
mov
lea
mov
adc
scas
push
mov
in
dec
jge
icebp
cmp
pop
out
xor
and
jg
int3
jmp
adc
sub
outsl
jae
pop
stos
push
pop
gs
and
movsl
sub
es
push
aam
mov
arpl
xchg
scas
fldl
sbb
hlt
in
jp
shlb
mov
or
int3
xor
inc
fnstcw
xchg
inc
push
adc
mov
inc
iret
imul
adc
lock
outsb
cmp
shr
sbb
mov
jno
mov
iret
daa
mov
repz
jle
add
xchg
adc
mov
enter
sti
roll
sbb
lods
mov
pushf
or
shrb
push
dec
and
cmp
loop
adc
cmp
xchg
ja
mov
aaa
vcvtpd2dqx
sahf
std
inc
xor
jecxz
insb
and
inc
xor
dec
cmpsl
loop
pop
jg
add
std
mov
xchg
sub
sub
xor
xor
ja
mov
dec
adc
jecxz
mov
testl
jb
lret
xor
xchg
dec
jae
inc
hlt
adc
ret
pushf
cmp
repz
psubd
sbb
ficoms
mov
je
mov
mov
sbbb
jbe
add
sahf
cltd
sub
stos
fs
pop
pop
inc
dec
stos
scas
fimull
pop
mov
in
stos
popa
ret
cmp
xor
adc
movsl
movsb
rorb
cld
mov
cli
sub
add
repnz
mov
jnp
sbb
dec
or
mov
xor
clc
mov
cmp
push
mov
out
shl
sbb
mov
inc
in
lds
cmp
jp
sbb
dec
add
insl
or
sub
in
rcrl
in
xchg
jns
addr16
sbb
outsl
xor
mov
repnz
dec
pop
pop
clc
add
daa
xchg
cli
mov
in
and
test
and
pop
test
pop
sbb
jmp
pop
das
and
jmp
mov
int
sub
pusha
in
sub
inc
inc
sub
iret
lcall
pushl
dec
mov
mov
dec
movsb
stos
ja
insb
outsb
mov
push
cwtl
loop
xor
inc
gs
adc
loopne
jne
js
add
loope
xchg
jle
fisubs
loopne
push
mov
scas
xchg
popf
aad
xchg
ljmp
add
cs
add
hlt
inc
xchg
jb
addb
and
jo
mov
out
scas
mov
pop
lea
sub
jno
sub
scas
fidivl
scas
jp
adc
jae
xor
in
lahf
push
adcl
scas
or
sbb
aaa
cmp
adc
xor
mov
push
nop
test
not
push
out
and
xchg
cltd
dec
movsl
ret
jnp
pop
xchg
push
jecxz
cmp
push
repz
cs
jecxz
aam
adc
mov
shlb
inc
cltd
mov
lock
cltd
movsb
pop
fs
jecxz
add
insb
popa
fdiv
dec
mov
cmp
fstpl
and
sahf
jbe
and
aaa
jp
lcall
jbe
jno
test
in
mov
in
repnz
repnz
adc
pop
mov
xchg
scas
loopne
mov
insl
inc
xchg
nop
sbb
mov
mov
mov
lds
ja
add
mov
shlb
scas
iret
and
jbe
push
aas
pop
xor
xlat
push
xchg
pop
xor
testl
dec
jge
lods
inc
inc
cmc
push
jae
lock
xchg
popa
fistps
fs
sbb
dec
testb
scas
adc
dec
das
mov
sbb
add
jb
push
lock
push
arpl
test
daa
mov
movsl
cltd
push
lods
test
dec
insl
cmc
xchg
xchg
incb
xorl
fstp
in
sbb
mov
clc
push
add
mov
fnstsw
bound
enter
cmp
jno
sarb
cltd
ret
and
insl
jecxz
sahf
adc
dec
les
das
scas
mov
pop
inc
cmp
int3
stc
outsb
pop
adc
movsb
cmpsb
mov
movsb
cltd
les
lret
and
popl
fistps
jp
bound
jmp
or
sub
negb
es
xorl
mov
jle
or
cmp
popa
sbb
sub
dec
jo
lds
pop
jp
gs
mov
inc
dec
push
mov
push
adcw
mov
inc
into
sbb
ret
add
xlat
mov
jecxz
int
push
mov
xchg
jno
mov
xor
es
movsl
imul
call
nop
dec
pop
lods
lock
sahf
je
test
mov
sahf
xchg
fwait
jg
add
inc
sub
or
test
stc
or
mov
fdivr
loop
xchg
dec
fnsave
inc
dec
je
cmp
pop
and
imul
mov
outsb
sub
push
stos
clc
imul
sbb
movsb
push
das
sbb
add
push
cmp
inc
or
and
mov
fcompp
in
push
addr16
jae
xchg
cmp
iret
cmp
icebp
lret
xor
pop
popa
lods
js
das
mov
aam
negl
shll
ror
pop
jbe
pop
mov
ret
jge
hlt
test
fsubrp
sbb
cmp
xchg
push
sub
pushf
cltd
call
dec
mov
jg
lds
push
mov
icebp
dec
xchg
inc
movsl
inc
xor
leave
nop
sbbb
ret
pusha
aad
adc
cld
jne
cwtl
int
adc
jp
push
jns
mov
xor
lock
aas
test
ja
int3
xor
ja
loopne
or
push
jb
jmp
movsl
cwtl
or
ret
pop
push
mov
dec
and
sub
daa
dec
or
lret
outsl
pusha
push
xchg
push
sub
shrb
or
iret
and
mov
pop
sarl
cwtl
dec
lods
xor
push
ficompl
xor
sub
ss
out
fisttps
dec
and
in
xor
arpl
pop
roll
lret
cld
push
jns
js
insl
ret
pop
xchg
mov
insb
dec
sub
icebp
mov
mov
xchg
mov
mov
inc
inc
sbb
cmp
sbb
mov
movsl
in
js
mov
mov
daa
jo
repz
cmp
add
lock
xor
mov
sar
xchg
xor
sarl
into
lahf
jnp
xchg
cli
inc
lds
mov
iret
mov
push
mov
jle
xchg
icebp
loope
xchg
into
push
adc
enter
into
out
and
mov
aaa
lods
dec
adc
and
sub
mov
js
and
dec
add
lret
imul
fildl
lea
or
fsubrs
cld
mov
and
loop
push
aaa
fisubrl
faddl
xor
ret
cmp
cld
inc
cld
sbb
iret
mov
pop
xlat
fisttps
jns
push
mov
and
mov
call
cmp
aad
in
add
mov
adc
or
mov
sub
push
dec
cmpsb
or
jp
out
icebp
jg
and
inc
jae
aaa
fisubrl
cmp
xchg
xchg
out
addb
cmp
jle
or
imul
lea
lods
lods
int
ljmp
pop
aam
adc
push
std
xchg
add
fisttpll
or
jp
test
jno
push
mov
dec
jns
pop
lods
fxch
clc
push
int
and
movsl
sub
pop
jae
push
es
dec
ror
sub
inc
adc
mov
dec
lods
adcb
dec
or
dec
mul
jecxz
mov
sahf
adc
xchg
and
clc
rcrb
pusha
ljmp
xor
mov
pop
inc
faddl
int
aam
or
popa
cmp
icebp
pop
push
nop
push
bound
push
rcrl
cmp
xlat
pop
leave
sub
adc
push
fs
cmc
cmp
xor
scas
jnp
xchg
dec
jmp
ficompl
out
mov
ret
inc
sbb
out
fidivs
test
idivl
data16
mov
xchg
xchg
ds
into
mov
mov
add
pop
mov
add
cmp
mov
out
adc
movsb
push
cli
mov
sbb
sarl
loope
jne
enter
mov
aas
rcrb
adc
scas
mov
out
and
xchg
ljmp
jg
sbb
notl
dec
cltd
shrb
jno
pop
cmp
jo
adc
add
jmp
shrl
xlat
push
ljmp
bound
std
xor
add
fdivrl
loop
idivl
or
cmp
repnz
jl
insl
inc
movsb
daa
mov
pop
mov
and
add
mov
pop
pop
clc
fiaddl
jne
cmp
and
imul
mov
mov
or
lahf
sbb
mov
and
shlb
jb
inc
push
loopne
loope
cltd
inc
int3
scas
sbb
enter
mov
sbb
push
dec
das
mov
mov
and
fxch
sbb
mov
jmp
icebp
daa
ret
pop
sbb
pop
pop
imul
cmp
cmp
shrl
sti
xor
lahf
es
int
insl
lods
fcoms
scas
jecxz
gs
popa
sbb
cmp
aam
add
repnz
imul
or
lcall
fildl
sub
cmc
sbb
int
dec
mov
mov
lea
pop
test
or
push
mov
stos
hlt
int
call
adc
out
jg
sahf
xchg
lahf
xchg
test
bound
mov
out
mov
cs
xchg
adc
pop
inc
mov
inc
imul
mov
add
jnp
mov
sub
les
orl
mov
pushf
push
les
jbe
std
mov
les
mov
push
xor
mov
jecxz
int3
and
jecxz
sub
rcll
jmp
imul
add
dec
movsb
lcall
mov
mov
mov
bound
xchg
jmp
aas
mov
adc
xlat
sub
xor
xchg
js
or
pop
fdivr
xchg
inc
inc
and
mov
push
mov
out
pop
mov
xor
ret
mov
dec
pop
test
or
xor
xor
leave
mov
insb
cmc
add
pop
add
rcll
and
test
cmp
fistpll
push
push
inc
sbb
outsl
sub
cli
stos
adc
dec
dec
pop
icebp
xchg
cmp
clc
sahf
cld
cmp
aaa
or
dec
cmp
movsl
mov
mov
ja
sub
icebp
sbb
fisubrs
ret
or
les
test
add
adc
shlb
adc
add
cs
xor
push
enter
push
sub
and
pop
repz
sub
fs
xlat
repz
mov
mov
int
leave
aad
inc
inc
out
pop
cmp
cmpsb
das
ja
std
mov
dec
sbb
xchg
mov
add
fcoms
incb
xor
fildl
sub
add
mov
fwait
push
int
jno
test
cmp
iret
aaa
outsb
ret
jge
push
push
push
fwait
hlt
nop
pop
repz
aas
repnz
mov
sub
hlt
inc
xor
add
or
call
fwait
cmp
mov
jp
frstor
add
adc
ret
leave
adc
test
pop
and
xchg
or
xchg
flds
enter
and
enter
xor
add
mov
orb
scas
repz
outsb
loope
mov
into
pusha
aaa
mov
icebp
das
dec
xor
inc
into
add
add
xchg
or
and
or
or
in
mov
pop
ja
push
outsb
ss
cs
xchg
mov
sub
rcrb
push
pop
aad
adc
popf
and
jmp
add
nop
or
dec
int3
dec
pop
sahf
fsubrl
cmp
popa
push
js
jmp
mov
fsubrs
cmp
sti
ja
ret
adc
sbb
sub
mov
sbb
outsl
addr16
jne
mov
ljmp
push
jns
lds
aad
sbb
mov
pop
xchg
adc
pop
or
fimull
mov
repz
fdivs
dec
jae
push
clc
push
pop
out
ret
aam
push
rorl
fisubs
jg
aam
push
movsb
jne
int3
and
arpl
sahf
and
push
sub
loope
mov
push
imul
lret
fstpt
out
cmpsb
push
push
and
adc
inc
jb
clc
xor
ss
sub
and
xor
mov
pop
out
hlt
into
fs
push
push
push
xchg
xchg
stos
xchg
cmpb
rcr
movsb
xchg
insb
leave
pop
push
mov
daa
cmp
lods
or
sarl
cmp
xchg
aam
lock
negb
lock
jge
inc
scas
cltd
lea
mov
fidivl
sbb
lcall
fst
outsb
jbe
xchg
inc
lcall
loop
mov
fnstenv
iret
cmp
push
sar
mov
neg
dec
cmp
pop
pushf
ret
leave
and
mov
pop
repz
sbb
bound
sbb
or
pop
sarl
bound
pop
pop
ja
jp
mov
test
pushf
jb
push
mov
mov
ss
rol
hlt
hlt
mov
insb
cmp
bound
and
sbb
cmpsl
add
lds
push
int3
xor
js
sbb
sar
pop
out
sbb
push
jb
pop
sub
pop
cmpsl
jo
push
test
ja
jmp
aaa
lret
out
ret
and
loop
dec
hlt
xchg
mov
dec
inc
lds
fidivs
dec
iret
stos
push
leave
rolb
xor
push
hlt
nop
or
fildl
mov
in
adc
xchg
and
dec
pop
adc
aas
iret
aas
popa
sbb
lahf
in
ds
adc
xchg
cld
imul
addl
and
cmp
sti
jp
dec
incb
mov
xchg
js
cmc
sarl
cli
xor
movl
xor
popa
mov
pusha
call
mov
or
cmp
push
or
and
inc
and
and
iret
mov
jne
mov
addr16
add
imul
sbb
push
fsts
repnz
and
stos
fxch
sbb
xor
repnz
mov
dec
push
test
mov
dec
mov
insl
mov
ret
fistl
lret
iret
mov
mov
cmp
xchg
push
in
xchg
pop
push
ja
stos
sub
mov
arpl
mov
cmpsl
add
inc
mov
fdivs
or
and
and
lds
pop
movsl
std
xchg
je
mov
stos
pop
outsb
vmovaps
jmp
js
mov
inc
stos
imul
daa
enter
std
stc
sbb
fmulp
mov
jns
test
jb
cwtl
decl
inc
fs
xor
mov
daa
jecxz
lds
lock
out
dec
std
xchg
sub
mov
push
sub
dec
mov
movsl
lahf
add
cmp
adc
ret
clc
test
cwtl
xor
inc
jmp
sub
in
pusha
and
pushf
or
jp
mov
into
and
ss
mov
jecxz
out
movsl
cwtl
test
nop
inc
out
xchg
arpl
adcb
adc
sti
pop
ficompl
ret
push
add
push
fdivrp
jl
pop
mov
dec
cwtl
mov
fadd
and
fisubs
adc
repnz
xchg
enter
push
sub
mov
cmpsb
push
repz
ret
int3
rclb
add
mov
jae
xchg
call
and
lods
aaa
dec
insb
ss
cli
je
ja
mov
repz
leave
xor
mov
mov
stos
dec
and
and
push
lret
or
fs
frstor
loope
lret
jns
sbbb
cmp
aas
pop
sub
fwait
mov
jle
sub
adc
int
pop
xchg
inc
or
pop
in
repnz
sbb
push
sbb
dec
add
sub
push
shl
fbld
int
cmp
and
pop
pusha
fimull
mov
dec
clc
mov
cmp
cwtl
or
popa
pop
xbegin
xchg
sub
stos
in
cs
jle
out
sub
mov
jne
jns
shr
dec
mov
aam
mov
mov
fst
daa
mov
out
adc
imul
popf
daa
xchg
mov
movb
loop
mov
xor
sbb
testb
rclb
adc
divb
jp
cmp
sub
scas
addr16
adc
pop
out
scas
xchg
or
aas
hlt
jle
xchg
jge
pusha
sub
sbb
std
out
into
dec
dec
aas
xchg
test
jae
push
clc
pop
leave
jge
mov
icebp
dec
fbstp
fisubl
jno
enter
call
pop
cmc
clc
insl
loop
lahf
mov
mov
jl
mov
scas
mov
sbb
xchg
pop
stos
ds
gs
cld
add
jp
xor
je
test
pop
enter
cmpl
stc
xlat
pop
lds
sti
or
ror
sub
stos
add
out
int
add
dec
mov
clc
adc
das
fadd
or
inc
mov
pop
add
das
dec
gs
xlat
adc
dec
scas
int3
push
jge,pn
scas
mov
test
mov
lahf
add
inc
or
int
mov
dec
pop
mov
mov
test
jns
lret
imull
andl
out
push
xor
rcl
bound
jecxz
xchg
and
inc
inc
and
icebp
lods
popf
push
xor
fdivrs
gs
push
push
ds
aad
lret
push
xchg
jmp
push
into
sbb
jb
cmc
fprem1
cld
pop
or
adc
push
testb
adc
inc
mov
ja
popf
inc
pusha
shrb
xchg
push
pop
lcall
mov
mov
mov
cltd
or
inc
mov
divb
cmp
cli
and
mov
mov
std
pop
xchg
jno
and
pop
hlt
pop
push
xchg
cmpsl
sbb
fcomp
push
sub
sbb
jle
stos
subb
adc
lock
int3
nop
push
cmp
jne
dec
inc
in
stos
jb
and
cmp
xchg
cmpsb
sbb
inc
add
jne
add
outsb
ja
add
lcall
icebp
jbe
push
mov
popa
daa
insl
sbb
push
push
push
push
pop
mov
push
pushf
sbb
xchg
stc
ds
push
adc
adcl
jo
sbb
sbb
jl
mov
subb
xchg
popa
enter
mov
imul
mov
inc
out
andb
pop
sub
mov
cld
nop
into
inc
popf
xchg
mov
jmp
push
sti
mov
scas
or
sbb
inc
cmp
inc
dec
mov
pop
mov
dec
cltd
add
jg
aad
ret
sub
fs
iret
cwtl
push
ret
adc
rcll
ja
sub
iret
xchg
dec
dec
mov
arpl
dec
push
inc
fistpl
inc
test
xor
sbb
js
fdivrl
inc
lods
mov
and
dec
xchg
mov
fnstcw
mov
dec
pop
mov
and
mov
adc
lcall
scas
push
jle
and
out
int
daa
lret
xlat
adc
addr16
adcb
sahf
add
lret
int
add
mov
rcll
lock
xor
inc
out
out
and
mov
sub
mov
xchg
sbb
mov
inc
dec
xlat
mov
inc
and
rcrb
scas
loopne
mov
mov
jmp
and
jecxz
sub
cmp
stc
lock
pop
mov
in
push
rcrb
mov
dec
adc
popf
add
push
or
hlt
jbe
push
pushf
test
jnp
xchg
ror
cmp
xor
jp
or
clc
or
movb
je
sarb
popa
stc
dec
mov
inc
mov
cmp
mov
das
push
dec
mov
daa
popl
mov
xchg
push
jae
orl
add
pop
fisttpll
and
ret
dec
movsl
mov
out
jmp
pop
ds
out
in
in
mov
cmp
lret
fisubs
leave
add
fsts
mov
mov
add
adc
lods
into
pop
sahf
push
les
fs
mov
mov
add
xchg
cmp
lds
sbb
push
inc
in
jl
pop
pop
sub
leave
push
jns
fidivl
movsb
adc
push
jno
jns
pushl
mov
add
outsb
adc
xor
mov
jns
iret
push
bound
aad
mov
and
ret
pop
cmp
scas
inc
fwait
pop
push
dec
mov
ja
loopne
js,pt
pop
jbe
test
arpl
std
xor
add
repz
loop
sub
lret
mov
jo
js
sbb
repz
popa
mov
cs
xchg
ss
mov
adc
test
pop
xor
clc
jb
mov
add
lods
arpl
pusha
outsl
sahf
sahf
jge
aad
sub
jne
push
or
cmp
adc
lret
icebp
sti
xchg
inc
fbstp
or
add
jnp
or
int3
jmp
ret
lcall
inc
dec
in
and
add
les
fxch
popa
mov
pop
dec
movzwl
inc
movsl
pop
repz
test
sbb
xor
pop
mov
aad
out
mov
and
leave
xchg
mov
inc
inc
lea
xor
dec
rcrb
jp
lahf
cmc
pop
fs
mov
je
clc
aaa
xor
lods
mov
shrb
daa
icebp
or
iret
fs
or
psubw
jmp
pop
shrl
and
test
lahf
xchg
pop
shlb
ror
adc
add
xchg
pop
fcoml
movsb
pop
push
ret
push
in
leave
inc
pop
repz
sub
mov
push
lret
mov
and
push
dec
pop
dec
in
push
js
fucompp
into
xchg
outsl
data16
lcall
adc
jns
into
xchg
fnstsw
or
movsb
xor
pop
pusha
or
push
fwait
jmp
lea
xchg
in
rcrb
jp
pop
ficompl
std
add
xchg
mov
mov
or
fiaddl
xchg
jno
jle
or
out
xchg
repz
adcb
jo
out
mov
mov
fisttps
fs
loopne
arpl
mov
lock
pop
rcl
test
pop
mov
mov
icebp
rolb
pop
mov
movsb
les
sbb
push
repz
inc
ja
nop
xor
lea
dec
mov
or
cmc
shrl
adc
mov
xchg
rclb
and
xor
lret
inc
pushf
mov
cmc
inc
inc
and
loope
daa
push
movsb
sbb
mov
loop
xchg
stos
int
fsubrl
sub
cmp
sub
cmc
rorl
negl
fisttpll
imul
outsb
loopne
pop
jp
test
loope
xchg
std
sbb
xor
test
dec
sahf
clc
test
ds
mov
leave
xchg
and
sbb
mov
js
xor
insb
orl
cld
or
imul
rcl
in
pop
cmp
sbb
mov
xchg
jecxz
fisubs
je
mov
pop
stc
test
rcr
int3
cmovbe
dec
shl
inc
sti
inc
pmaxsw
sub
out
dec
fucomi
repnz
pop
adc
jb
repnz
jmp
int
jae
sub
xor
pop
leave
push
or
or
gs
aas
xor
pop
repnz
mov
dec
or
sub
mov
jno
push
mov
dec
test
inc
daa
das
jnp
mov
jns
mov
imul
sbb
mov
sbb
stc
add
fistps
out
mov
and
pusha
mov
int3
faddl
inc
jge
sub
fwait
jmp
and
shlb
push
in
nop
xchg
daa
insl
stos
mov
lods
pop
fnsave
jmp
jae
fabs
and
sti
repz
inc
stc
mov
stos
or
inc
mov
paddb
and
sbb
lahf
cld
outsb
sub
add
and
inc
mov
or
jne
inc
push
imul
sti
inc
or
subb
popf
stos
pop
hlt
loopne
mov
icebp
jmp
and
ljmp
and
leave
aas
sub
sub
push
mov
repz
adc
jge
pop
lea
jg
push
test
jbe
xchg
lret
popa
or
cmpsl
push
mov
push
lret
fdivrl
test
divl
fs
push
dec
stos
stc
sbb
fisubrl
dec
xchg
addr16
jecxz
mov
in
and
mov
mov
dec
jl
movsl
call
inc
mov
sub
xchg
cltd
cmp
cmp
ret
pusha
cmp
or
cmp
nop
sbb
cs
mov
adc
mov
sub
cwtl
andb
rcrb
sbb
and
ret
movsb
shlb
mov
mov
cmp
jp
push
adc
lret
out
push
icebp
fistps
xchg
daa
insl
mov
in
jb
adc
inc
add
push
pop
inc
xor
xor
insb
imul
fs
mov
xor
inc
adc
adc
mov
xchg
inc
and
popa
hlt
adc
dec
fidivrs
lcall
mov
or
clc
push
push
insb
sub
add
add
push
or
and
js
mov
inc
jg
pop
popa
push
push
push
push
mov
jbe
sti
es
mov
pop
repnz
add
mov
int3
jp
add
mov
lcall
fs
xchg
or
lea
xlat
adc
jecxz
xchg
addb
lods
aad
push
addr16
xlat
mov
jmp
movsl
leave
ret
les
loop
inc
jno
sub
dec
sub
xchg
pop
adc
dec
inc
adc
jno
push
sti
jl
fsubrl
subl
mov
aas
fisttpll
cmp
scas
mov
aaa
pop
or
repnz
add
inc
adc
and
sub
xchg
fldcw
cltd
sub
and
lock
out
add
push
add
leave
mov
cmp
dec
leave
ret
cmc
js
dec
adc
es
cmp
dec
mov
sub
hlt
repnz
call
ret
adc
cmpsl
cs
pusha
insl
xor
cmp
outsb
fistps
xchg
and
test
sbb
ficoms
jp
mov
sbb
xor
lds
aas
lds
clc
pop
xlat
movsb
xor
or
movsl
jp
in
sbb
pushf
cmp
test
in
sub
fcompl
ds
xor
call
in
sub
sbb
cltd
imul
xchg
in
lock
pop
sarb
shrl
enter
jecxz
pmaddwd
movsl
aam
and
ja
cmpsl
cmp
mov
in
adc
and
aas
inc
sbb
push
dec
cs
in
pop
dec
jp
xchg
pusha
out
pop
or
xchg
das
lds
cmp
inc
jbe
aas
fstpt
xorl
ret
mov
popf
lcall
or
fnsave
fiadds
loope
rcrl
lods
cmp
push
xchg
xchg
xchg
je
inc
adc
pop
add
push
pop
popf
mov
lock
push
mov
leave
mov
jg
popa
fsubl
addb
ret
dec
fnstenv
pusha
xchg
mov
nop
push
iret
and
ja
lahf
inc
jne
pop
pop
ljmp
dec
adc
pop
push
xor
insl
outsb
pop
cmp
movsl
push
sub
push
in
sbb
jl
push
inc
jge
popa
cmpsb
test
rolb
pop
push
xor
jo
fsubs
fs
insb
popa
aas
dec
iret
mov
push
stos
pop
scas
cmp
xchg
ss
mov
push
xchg
inc
mull
add
sbb
sbb
int3
sbb
inc
xchg
mov
add
in
cld
ror
xchg
or
and
ftst
mov
xchg
jne
pop
dec
outsb
out
xlat
cmp
adc
cmp
into
jl
hlt
xchg
lret
jns
gs
inc
xor
pop
mov
lods
scas
xchg
lret
jns
roll
in
notb
lcall
mov
call
push
out
mov
mov
inc
scas
pop
scas
pop
pop
cld
mov
das
add
pusha
adc
shlb
lds
dec
lahf
push
arpl
jbe
pop
push
ss
movsl
push
test
int3
cmp
cmp
aam
cli
fistpl
scas
je
sbb
inc
and
pop
roll
in
leave
and
lea
ljmp
shlb
xor
and
cmp
mov
dec
outsl
cld
hlt
fdivrp
push
cmc
aaa
push
ret
xor
lods
or
out
jl
sub
pop
cmp
icebp
divl
repz
daa
pop
mov
or
mov
dec
in
sarb
insb
dec
sahf
push
dec
pop
pop
and
clc
iret
xor
cmp
dec
sbb
mov
fs
dec
xchg
xor
xor
dec
repz
xor
cli
fildl
lea
imul
sbb
stos
pop
add
and
out
aam
sti
call
jp
mov
jg
fnstsw
cmp
call
and
ds
pusha
test
jne
int
add
mov
dec
stos
outsb
push
mov
stos
or
jns
push
add
pop
dec
push
into
inc
in
mov
hlt
cmp
pop
jg
adc
inc
xchg
js
xlat
sti
aad
push
lahf
loope,pn
flds
dec
mov
pop
mov
out
aad
and
mov
sti
sub
inc
addr16
push
dec
sbb
daa
mov
adc
dec
mov
jne
mov
sub
push
test
pop
pop
test
and
sbb
leave
inc
mov
mov
inc
cld
add
inc
fwait
add
xor
or
lret
into
push
out
sub
sbb
pop
rorb
int3
push
cmp
repz
inc
aas
dec
jno
rcrb
movsb
sub
adc
pusha
popa
adc
lret
or
jmp
inc
push
push
jbe
ret
mov
hlt
scas
jp
xorl
jb
xchg
cmp
and
int3
rclb
jge
ss
sub
lds
mov
push
fs
push
xlat
loopne
fisubs
fwait
xor
scas
jl
int
jg
mov
xlat
cmp
lea
sub
ret
lret
adc
outsl
js
outsb
sti
sbb
xlat
je
xor
enter
decl
adc
sbb
cwtl
rcrb
fisttps
fnstcw
adc
mov
cs
adc
int
sbb
sub
cmp
or
das
cld
mov
enter
xor
jns
int
addb
mov
push
test
leave
adc
adc
mov
enter
sbb
stos
cmp
mov
adc
add
add
decl
popf
mov
cli
out
mov
lret
lret
xchg
push
pop
and
pop
mov
cs
insl
adc
std
mov
jge
cmp
hlt
sbb
sbbl
mov
ret
and
push
xchg
out
jo
cwtl
dec
iret
dec
pop
push
into
jg
add
subl
pop
push
inc
push
xchg
dec
mov
js
imul
shlb
jb
call
data16
dec
iret
jmp
nop
mov
push
out
nop
mov
sub
xchg
jo
cmp
daa
sarb
jl
sub
mov
and
push
mov
pushf
fxtract
sub
call
sbb
fbstp
fs
ds
jne
mov
mov
cltd
or
leave
jne
sub
push
push
punpcklwd
inc
or
call
jbe
adc
js
mov
icebp
cmp
cmpsl
dec
dec
mov
out
jp
mov
sarl
push
icebp
and
imul
xor
in
inc
push
sbb
or
adc
xchg
call
faddl
and
test
dec
mov
lea
lcall
test
xor
and
jle
and
xchg
testb
ds
inc
in
and
gs
add
neg
cmp
push
mov
outsb
hlt
test
mov
shr
xchg
adc
popa
jb
repz
in
ljmp
movsb
jle
repnz
movsl
out
jp
out
mov
mov
fwait
pop
push
adc
in
sbb
lcall
mov
sbb
jmp
stos
adc
fcmovb
ret
stos
xacquire
pop
in
push
push
sti
addr16
dec
arpl
add
mov
stos
mov
pop
cli
bound
add
pop
daa
pop
movsl
mov
fidivl
fs
lahf
cmp
faddl
je
ror
mov
inc
fildl
test
jg
jp
imul
xchg
mov
push
mov
test
and
je
sahf
mov
lea
enter
scas
mov
loop
pop
jmp
and
cld
cmp
push
inc
popa
mov
imul
mov
icebp
jmp
pop
fmul
jae
inc
test
loopne
je
mov
fldl
loop
out
fists
int
mov
inc
in
mov
add
filds
cmp
push
jae
push
filds
mov
fsts
es
cmp
jae
mov
test
and
xchg
dec
mov
push
mov
cli
outsl
jb
jo
stos
jmp
jo
popa
cli
bound
fistpll
test
fdivrp
jp
hlt
lods
jge
cmp
faddp
fsubrs
pushf
in
icebp
jg
and
aas
imul
loop
adcb
push
sbb
push
xor
mov
sub
sbb
ljmp
test
pusha
fcomps
pop
sbb
sbb
aaa
outsl
cltd
repz
pop
push
sub
enter
imul
call
pop
jns
jle
cmpl
xor
jg
test
sbb
xchg
xchg
stos
jnp
cmp
mov
sub
jg
jo
lahf
xchg
sub
push
add
sbb
sub
sbb
lock
inc
inc
push
in
adc
mov
cltd
push
xor
or
and
push
daa
ss
adc
sbb
loopne
sbb
sub
dec
lods
clc
je
dec
mov
sub
jnp
in
adc
jmp
dec
xor
lret
jb
movsl
lods
mov
dec
test
repnz
loopne
sub
fstl
leave
pop
fsubl
int3
push
mov
cmp
xchg
and
jecxz
mov
je
push
ss
mov
call
mov
pop
les
inc
pop
and
dec
dec
push
call
popl
sbbb
in
inc
sub
sbb
jb
sbb
xor
loope
and
mov
mov
or
nop
bound
adc
popf
arpl
aad
push
icebp
xchg
je
jbe
sarb
jb
lods
push
imul
adc
gs
int3
mov
out
pop
or
imul
jge
jl
es
iret
out
inc
mov
rorb
push
scas
add
mov
lea
scas
sahf
into
cltd
cmp
jl
sbb
cmp
or
stos
fcmovnu
mov
sbbb
sbb
testb
sub
jl
sahf
test
mov
loope
jo
xor
adc
push
out
pop
mov
imul
dec
aas
dec
inc
pop
stc
mov
mov
mov
jmp
pop
loop
shlb
sahf
sbb
adc
jnp
addr16
in
dec
shrl
pop
jo
sub
add
mov
sub
pop
sub
xchg
inc
sbb
sub
mov
adc
jno
add
lds
ret
jp
dec
jge
pop
pop
push
cmp
cmp
mov
jne
call
imull
or
mov
mov
dec
pop
or
outsl
std
add
lods
addb
xchg
imul
das
pushf
loop
es
cmpsb
fwait
out
lcall
pop
aas
in
bound
std
lods
and
jnp
mov
outsb
je
test
push
in
mov
push
in
pop
std
add
add
push
jmp
push
test
cmp
out
inc
std
mov
mov
xor
std
xor
inc
hlt
scas
hlt
das
xlat
push
mov
lea
lahf
add
pop
push
jns
jbe
hlt
insb
jge
insl
pop
les
aam
stc
or
fldcw
inc
push
pop
xor
xchg
imul
rcrb
pop
das
in
cmp
neg
sub
push
cs
fisubs
fstpt
jns
repnz
jbe,pt
and
add
cltd
sti
enter
arpl
mov
daa
jns
ficoml
repnz
push
test
lret
fcmovu
enter
mov
jae
mov
iret
cmp
hlt
or
nop
or
lahf
xchg
push
adcl
xchg
out
jmp
or
es
cmpsb
in
or
sahf
mov
pop
pop
aaa
mov
mov
ljmp
dec
and
xchg
out
xchg
push
daa
and
sti
imul
adc
mov
cmp
into
aam
insl
inc
xchg
add
stc
enter
into
lcall
mov
pusha
stos
jb
xchg
sahf
adc
hlt
push
cmp
sbb
nop
push
arpl
dec
test
fisttps
cmp
push
sub
std
sahf
pop
nop
push
dec
lret
in
sbb
jecxz
pushf
pop
bound
mov
pop
pop
push
cmpsl
lock
add
in
push
cmp
mov
jo
test
into
popf
in
or
aaa
cmp
pop
imul
or
xchg
enter
aas
fwait
je
jnp
stos
xchg
lret
leave
cltd
aad
out
xor
mov
push
mov
xor
jo
inc
pop
mov
inc
inc
test
cmpsb
push
dec
and
sbb
repnz
add
lds
mov
jmp
je
sarb
jns
adc
mov
ficoml
xlat
dec
inc
test
sub
fcompl
jne
filds
ret
dec
ds
ljmp
mov
test
cmpsb
add
lods
shlb
gs
lahf
cmp
jns
xorb
xor
push
ljmp
or
fldt
xlat
dec
shr
pop
inc
mov
mov
xchg
cmp
movsl
jae
test
and
jge
or
nop
popa
xchg
mov
xchg
dec
add
adc
mov
mov
mov
jno
sbb
inc
daa
sub
mull
or
sub
jmp
jmp
push
push
loopne
mov
movsl
push
jns
cli
ljmp
stos
ret
in
in
gs
cmpsb
cmp
mov
jl
push
mov
lret
call
mov
fsubs
xchg
lret
shlb
xchg
out
push
ja
fimull
das
and
lea
leave
push
fs
xlat
fsubp
aas
sbb
ja
lret
fsubrl
jae
or
mov
dec
popf
sbb
outsb
push
push
add
sub
dec
dec
jne
push
mov
xchg
pop
addb
cli
add
add
and
addr16
mov
mov
hlt
lret
cmpsb
cwtl
xchg
out
jmp
sub
std
shrl
dec
sbb
cmp
mov
jl
mov
xorb
lcall
sub
push
mov
popa
pop
cmp
jno
lcall
pop
mov
fadds
shrb
arpl
and
push
test
xor
adc
push
rorb
push
or
cmp
fsubl
or
and
xchg
xlat
inc
pop
aas
rcrb
ss
and
sbb
jne
test
jnp
xor
mov
mov
ss
imul
and
adc
push
mov
cmp
lahf
fistpl
addb
add
data16
dec
mov
sub
test
out
jmp
xor
dec
sub
sub
hlt
mov
out
xchg
and
sbb
aaa
inc
repnz
int3
jbe
push
iret
ror
pop
and
popf
scas
movsl
xchg
xor
or
into
xor
cmp
pop
fisubrl
mulb
sbbb
jo
and
cmc
imul
xchg
push
js
fstpl
lds
push
cmp
push
and
popa
fucomip
cmp
and
xchg
sub
scas
pop
sub
sub
sub
aaa
cltd
dec
push
mov
ret
and
sahf
push
fiadds
mov
ja
pop
xchg
js
xorl
inc
cmpsl
and
shrl
outsl
and
cmpsl
sbb
stos
jecxz
push
mov
sub
jl
cmc
xchg
mov
push
adc
mov
push
xor
inc
fisttps
push
sub
pop
cmpsb
cmp
repnz
pop
pushf
imul
xchg
sbb
xlat
out
sub
fwait
or
cmp
sbbl
sub
sbb
ficoml
data16
sbb
cmpsb
fwait
cld
je
pop
in
mov
pop
push
fstpt
test
addr16
loop
push
dec
ffreep
fnstcw
es
clc
nop
and
js
inc
push
subb
cmp
lahf
popf
icebp
daa
out
stc
sub
push
cltd
sub
cltd
mov
out
lret
ficoms
push
or
dec
fs
fiaddl
pop
xchg
aaa
or
mov
les
xor
dec
lcall
and
cld
in
mov
out
sti
lea
fs
sbb
ljmp
dec
arpl
cmpsb
lahf
out
xor
mov
dec
pop
pop
jl
sub
xchg
cmp
fidivrl
movsb
in
int3
jl
scas
arpl
xor
cmc
imul
inc
mov
ds
loop
sbb
in
push
sbb
lds
xor
xor
insb
xchg
ror
adcb
pop
cmp
lret
daa
sub
mov
ret
xor
inc
popf
lret
std
xor
push
or
daa
dec
or
cli
xchg
cltd
mov
mov
fmul
cmp
sub
sbb
adc
adc
adcb
jecxz
sbb
push
mov
test
and
call
sub
filds
cmp
mov
clc
sub
loopne
dec
jmp
dec
test
in
rcll
mov
mov
jns
loopne
mov
hlt
stc
jle
pop
and
ret
cmp
pop
add
push
sub
inc
outsl
nop
loopne
sbb
sbb
dec
xchg
xor
roll
jle
xor
test
jo
or
sbb
push
vpsrld
jg
mov
sbb
movl
shll
out
push
movsl
shlb
in
js
inc
gs
mov
jecxz
xchg
sarb
loope,pt
push
loope
push
in
cmp
mov
pop
xchg
jbe
js
cmp
fdivp
and
inc
sbb
into
cmp
xchg
hlt
fs
je
lock
adc
nop
cld
aaa
leave
jo
cmp
dec
out
and
sub
frstor
pslld
pop
push
xlat
pop
imul
dec
or
inc
addr16
fildll
ds
inc
rcrb
fwait
push
mov
sbb
add
and
cltd
mov
int
cmpsl
add
cmp
fcompl
repz
or
iret
pushf
fcompl
sbb
in
mov
fstl
repz
lea
fwait
push
add
push
cmp
mov
cli
sbb
daa
bound
pop
scas
push
xchg
add
xchg
inc
xchg
std
in
jmp
dec
push
mov
ret
jp
ret
mov
cmp
xor
add
cmp
cmp
dec
aas
xor
insb
and
sub
aad
mov
out
xchg
jmp
fs
push
shll
pop
ret
sbb
push
add
mov
int
push
shrl
and
cmpsb
push
xchg
and
and
sti
test
xchg
inc
cs
subl
cmp
les
cs
lock
out
jp
push
imul
cmpsl
out
mov
cltd
adc
movsl
pop
cltd
pop
es
or
cmp
mov
gs
or
or
pop
mov
outsl
test
ret
sbb
pop
sbb
add
sbb
lock
fs
lret
shll
js
sub
clc
pop
divl
push
mov
inc
cli
jge
fildl
ret
mov
vmovhpd
stos
lds
mov
jns
cltd
fidivs
xor
in
add
or
mov
or
sahf
cld
sbb
cmp
lcall
mov
xor
outsl
xlat
mov
jl
jns
cmp
cwtl
jg
mov
inc
out
jg
push
aam
xchg
add
or
pmullw
inc
in
and
push
lods
shlb
shrl
mov
dec
outsl
jae
xchg
mov
je
xchg
popa
add
and
add
mov
add
xchg
mov
push
cmp
lcall
jmp
ficompl
jp
ljmp
rorb
hlt
cmpsl
lea
inc
das
fildl
mov
pop
stc
mov
sub
dec
loop
aam
jo
fcompl
stos
adc
lcall
push
andb
or
fnstsw
cmc
clc
push
fisubrs
test
mov
popf
icebp
sbb
mov
and
mov
and
inc
mov
add
pop
jle
scas
mov
cmpl
dec
sbb
jae
push
jl
sub
ss
or
pusha
faddl
call
sar
rcl
in
test
bound
cmp
fsubrl
daa
icebp
out
stc
or
pop
pop
xor
inc
add
or
xchg
nop
mov
cmp
cltd
cmc
nop
push
pop
sbb
cwtl
out
dec
mov
pop
clc
cmp
dec
dec
jle
enter
shll
int3
or
lea
add
jmp
push
or
cmc
into
int
adc
cltd
push
movd
loopne
push
aam
xchg
popa
lahf
mov
repnz
mov
mov
xlat
mov
mov
mov
mov
add
pop
push
cmp
jmp
shrb
mov
std
aam
cs
pop
jge
adc
sahf
stc
add
ret
dec
imul
lods
iret
push
mov
inc
scas
mov
in
mov
and
cwtl
pop
add
mov
js
sarl
inc
pop
inc
pop
mov
lds
das
cwtl
pusha
xor
and
sub
fisubs
cld
stc
into
mov
push
pop
iret
or
adc
jb
lcall
orb
inc
push
pop
lret
repnz
push
out
test
jecxz
pop
jno
jne
mov
aad
add
inc
stos
add
fwait
xchg
pop
icebp
adc
push
pop
xlat
xchg
xchg
decb
inc
fwait
gs
push
sbb
cmpsl
jp
ret
xor
push
rcl
and
sti
cwtl
push
aas
cmc
int3
add
pop
rol
xor
mov
cmpsb
int
data16
bound
sbb
cmp
cmp
les
pop
in
popf
push
mov
dec
sbb
adc
add
dec
movsl
push
mov
xchg
repnz
cmp
jecxz
xchg
ds
aaa
andb
adcl
push
cwtl
jno
adc
fnstsw
push
test
cmc
push
ffree
adc
dec
daa
jle
shlb
dec
outsl
push
xlat
mov
call
arpl
lcall
ja
adc
push
gs
push
adc
stos
push
mov
adc
dec
dec
into
push
jmp
sbbb
in
or
clc
add
loopne
xor
rorb
xchg
daa
jne
xor
jae
xor
ja
mov
xchg
lret
adc
or
xchg
xor
xchg
stos
pop
xor
xlat
and
cmpsl
cmp
nop
mov
push
or
xchg
jl
in
or
lcall
mov
xchg
adc
in
iret
in
enter
jne
cmp
outsl
mov
mov
hlt
pop
cmp
ret
jl
xor
mov
inc
inc
adc
push
stos
jl
push
xor
call
sahf
mov
xor
int3
add
cmp
ret
das
sbb
fs
in
pushf
or
jae
lods
and
repz
stc
fidivs
repz
adc
xchg
inc
xor
mov
mull
lods
sbb
in
out
lods
xchg
orb
enter
push
js
enter
lock
dec
insl
orb
push
jmp
sbbb
repnz
xor
jno
mov
roll
jo
movsl
and
push
xor
pop
in
aad
sbb
stos
sub
aam
test
or
data16
cmc
mov
imul
out
push
pusha
fmull
in
out
and
in
sub
cmp
test
xor
inc
cmp
imul
add
ss
jmp
lods
pop
orl
aam
arpl
ret
mov
or
sub
dec
pop
sub
clc
push
pop
out
add
or
stc
test
inc
lret
mov
sub
js
jo
es
and
push
push
jg
jmp
rorl
mov
cmp
pop
pop
rolb
iret
mov
jbe
xchg
repnz
pop
jecxz
jne
je
je
cmpsl
roll
and
fisubs
pop
lahf
and
pusha
test
mov
lret
dec
icebp
xchg
popf
push
adc
rcll
xor
addb
pop
mov
or
mov
sub
lcall
gs
add
or
jne
push
jb
xchg
jns
pop
push
or
adc
subl
dec
and
dec
sbb
push
cmp
jae
jmp
push
sbb
jbe
mov
add
nop
mov
daa
shr
popa
mov
or
jo
es
loopne
sbb
lcall
mov
add
pop
cmp
xorl
cs
cmc
or
inc
mov
out
push
fldenv
cmp
xchg
adc
sbb
mov
iret
push
cmpsl
jae
je
pushf
loop
inc
mov
inc
push
call
pop
xor
stos
adc
shll
sub
jb
movsl
mov
lds
push
clc
ljmp
fmull
ficoms
cmp
mov
fcomps
xor
mov
sub
loopne
cmp
add
xchg
mov
adc
adc
das
inc
test
cmpsb
loop
je
fisttps
mov
inc
fwait
add
sbb
insl
repnz
or
lds
clc
pop
insb
sub
jp
repz
loop
int
jns
dec
aad
stos
sahf
outsb
incl
andl
sbb
mov
in
lahf
inc
sub
aaa
mov
hlt
pop
inc
xchg
stos
dec
sarb
mov
aam
dec
rcr
cmp
inc
insl
stos
push
xor
cmp
xchg
cmp
mov
jle
mov
outsb
mov
cli
inc
stc
xchg
jg
inc
loopne
js
mov
inc
mov
pop
push
push
call
and
sarl
inc
xchg
outsl
sbb
cmp
mov
insb
popf
jae
jns
lahf
and
repz
sub
fidivs
ret
jb
flds
cwtl
std
inc
mov
test
xchg
mov
inc
and
dec
adc
jge
add
testb
inc
in
add
mov
cmp
sbb
wrmsr
lret
push
and
sti
pop
pushf
fcoms
mov
pop
sbb
push
stc
xor
jae
or
popf
inc
pop
jbe
lcall
leave
xchg
aad
jmp
dec
and
pop
inc
stc
push
pop
fdivp
sub
dec
ja
or
jns
fstpl
and
popl
rorl
push
mov
outsb
sbb
hlt
sub
aad
mov
add
mov
lea
inc
mov
sbb
js
clc
mov
add
sub
loope
movsl
shl
xor
dec
shr
adc
je
popf
mov
push
fldcw
sbb
mov
es
pop
popf
mov
pop
jno
mov
xchg
movsb
xor
fcomps
cmpb
mov
lea
mov
mov
loopne
mov
fdivr
inc
add
pop
mov
xchg
xchg
cwtl
push
clc
mov
push
mov
lahf
jbe
push
and
stos
dec
xchg
pop
push
outsb
add
in
xor
aaa
loop
jb
es
jmp
nop
mov
jg
sub
outsb
fisubrl
sub
push
or
lcall
adc
les
outsl
ss
sub
es
jge
cmpb
stos
cmp
cmpsb
dec
orb
push
mov
dec
in
mov
xor
pop
jno
add
insb
xlat
outsl
cmp
int3
cmp
je
cmpsb
test
pop
inc
mov
out
push
ljmp
add
dec
fimull
rcr
mov
inc
pop
inc
insb
nop
aas
notl
rol
ss
addr16
adc
inc
insl
and
mov
jb
fstpt
popf
mov
dec
sub
pop
push
pop
ret
mov
mov
jl
inc
jb
rcl
aam
pop
inc
insb
mov
mov
cltd
xchg
imul
and
push
cmpl
jno
mov
xor
sub
jo
add
xor
add
js
ss
or
sub
sbb
cmp
sbb
cmp
std
movsb
and
push
arpl
pop
imul
ret
jo
mov
lret
push
fimuls
add
das
fsubrl
insl
push
cmp
popf
jne
loope
push
cli
sub
stos
lods
bound
xchg
dec
cwtl
lds
mov
pop
ds
aam
call
push
push
mov
pop
test
ret
sbb
or
add
jbe
clc
pop
aaa
ds
inc
dec
dec
mov
ss
js
lods
dec
leave
test
adc
jnp
mov
mov
int
mov
sbb
lahf
popf
jae
leave
xor
shlb
sbb
aad
xchg
movsb
or
dec
add
clc
aam
cmp
js
mov
push
ss
call
iret
into
lret
gs
jo
sarl
and
sub
movsl
inc
push
dec
fistpl
lock
cli
adc
lret
dec
pop
mov
faddl
mov
cmp
shrb
sarl
push
push
and
pop
cli
push
adc
xor
lahf
cmp
cmpsb
cmpsb
test
pop
jbe
xor
pop
xor
push
ljmp
mov
add
aas
xor
in
cmpsb
mov
imul
dec
or
fmuls
in
pop
xchg
xchg
dec
bound
pop
and
cmp
mov
mov
int3
dec
adc
dec
and
jl
pop
int3
xchg
loope
out
or
test
jle
jle
xor
outsl
pop
pop
sub
mov
lret
or
jns
popf
dec
out
jns
ss
jae
push
loopne
call
out
or
adc
in
adc
icebp
sub
sub
int3
add
adc
insl
xlat
popa
aam
pop
jp
push
push
pop
xchg
fldt
push
jb
mov
gs
inc
push
out
mov
aad
mov
bnd
mov
js
std
dec
inc
cmp
daa
jle
lahf
lret
cwtl
xlat
ljmp
outsl
popf
scas
fsubs
mov
inc
mov
fcoms
movsl
sbb
sbb
mov
roll
test
sar
mov
xor
ficoms
adc
addr16
pop
cmp
mov
add
add
gs
stos
mov
jp,pt
pop
sub
mov
in
mov
test
xchg
mov
leave
jnp
aas
pusha
andl
jecxz
loop
aas
call
sbb
add
test
in
lret
pop
sti
frstor
add
lods
insb
add
sub
fdivrl
mov
cli
xchg
cltd
pop
push
push
and
add
fwait
add
pop
jae
fs
lock
scas
mov
test
repz
cmpsb
sub
stos
sbb
addr16
mov
mov
cld
loop
in
das
hlt
leave
out
or
das
or
mov
mov
int
cmp
xor
add
sbb
jb
outsb
bound
stc
cld
add
outsb
or
and
sbb
lahf
std
xor
inc
xchg
movl
sbb
rclb
mov
pop
sub
dec
mov
cmpsb
sbb
enter
shr
dec
mov
lcall
aam
mov
cmp
fadds
xor
out
sbb
push
pop
pusha
pop
leave
push
leave
or
mov
or
dec
frstor
sbb
inc
push
popf
mov
mov
loop
test
mov
lahf
mov
inc
mov
frstor
and
jmp
dec
imul
or
xchg
in
out
pop
mov
push
movl
sub
fwait
call
push
mov
xor
shl
add
cs
movsb
cwtl
jns,pn
das
lcall
movsl
into
out
and
xor
hlt
movsl
cli
jmp
aam
or
sub
xchg
sub
mov
jo
xlat
popa
adc
iret
leave
mov
pop
sub
jle
inc
sub
sti
xchg
xor
rorl
mov
je
push
les
shl
fisubs
jecxz
mov
cmp
add
iret
repnz
dec
into
adc
lahf
sub
lods
bound
jp
in
and
or
pushf
cwtl
and
dec
cltd
pop
test
js
scas
push
cwtl
mov
dec
cmpsb
leave
or
adc
sarb
lcall
or
dec
inc
call
out
mov
xchg
sub
push
mov
xor
dec
cwtl
jp
into
into
lods
mov
mov
mov
inc
push
dec
sbb
sub
pop
pop
aad
cmp
stos
clc
aaa
mov
cmp
scas
adc
je
push
pop
push
popa
adc
call
sbb
jne
mov
loop
adc
ds
pop
xor
mov
pusha
mov
sub
mov
hlt
insl
push
out
std
incl
inc
sbbl
pop
sti
sub
pop
out
orl
push
cmp
popa
nop
pop
jecxz
push
jge
out
cmp
das
xor
pop
mov
rclb
sub
add
repnz
imul
pop
cmp
clc
stc
pop
fiaddl
inc
add
xor
jbe
dec
nop
mov
cmp
jno
cmpl
andb
out
in
or
mov
sub
andl
xlat
mov
mov
fistps
jno
xor
lret
cmpsl
mov
mov
fnsave
decl
adc
xlat
lock
pusha
shr
mov
insl
jne
jl
sbb
pop
jge
dec
dec
jp
jecxz
pop
sub
sbb
scas
inc
push
testl
inc
pop
out
cmp
shll
test
sbb
stos
mov
lock
and
in
call
outsl
or
scas
add
cld
inc
sub
mov
dec
out
dec
push
xchg
xor
adcb
xchg
add
cmp
arpl
xchg
sbb
clc
into
mov
adc
mov
outsl
pop
fmuls
cmp
nop
and
ret
dec
loope
notl
sub
dec
and
shl
mov
adc
sub
xor
testl
push
dec
fs
cmp
test
add
inc
cltd
add
test
xchg
scas
jb
and
fnstsw
add
rorb
or
mov
lods
xchg
aas
outsl
dec
leave
jle
mov
aad
jae
sub
flds
push
sub
pop
bound
shll
jb
push
scas
rclb
aaa
mov
fsubl
movsb
addr16
aad
xchg
and
out
hlt
push
and
or
xchg
dec
or
rclb
jno
loope
fucomi
imul
test
dec
out
imul
outsb
inc
sub
popa
lods
cli
out
mov
add
ja
int
push
into
ja
xlat
sbb
add
adc
sahf
lock
push
movsb
pop
lods
inc
inc
cs
and
bnd
fcomps
jae
mov
inc
clc
push
mov
mov
adc
xor
jg
daa
mov
out
shll
pop
push
xor
push
adc
or
mov
mov
out
and
cmpsl
pop
popf
xchg
inc
adcb
xchg
hlt
daa
fldl
shl
inc
xchg
addb
fcmovnb
jle
xor
imul
dec
aaa
test
cmp
outsl
lods
cmp
das
cmp
shlb
xor
test
add
pop
aad
shrl
mov
stos
sbbb
stc
adc
jo
sbb
pop
sub
sti
imul
cwtl
adc
inc
fisttps
arpl
jmp
mov
add
aad
jo
call
pop
addl
stc
jmp
mov
mov
add
and
mov
or
scas
jo
add
int
nop
scas
mov
sbb
sbb
mov
xlat
sahf
loopne
in
fcomps
xor
insl
icebp
pop
mov
mov
inc
sti
mov
insl
xor
jne
xlat
test
in
adc
mov
dec
js
inc
mov
mulb
stos
in
subl
ret
dec
cmp
push
loop
ret
clc
inc
and
daa
add
add
jmp
jnp
dec
iret
stos
mov
ret
icebp
sbb
clc
jne
mov
repz
jne
and
sar
mov
mov
enter
jb
gs
or
mov
xchg
mov
push
cmpsl
mov
repz
adc
gs
push
mov
repnz
lahf
lret
push
std
cmpsb
pop
fbstp
fs
sbb
rcll
sbb
cmp
mov
mov
nop
pop
bound
les
iret
orb
testb
daa
sub
aaa
inc
jge
inc
mov
sbb
sub
jp
and
push
dec
sub
fbld
stos
outsb
and
enter
into
add
rcr
loop
lahf
jns
jbe
into
testl
jmp
cld
pop
sbb
lods
iret
mov
es
out
lock
mov
cmc
inc
or
push
fldenv
lods
adc
and
inc
jno
sub
xor
jmp
inc
sbb
into
scas
sub
ret
les
mov
pop
cmpsl
pop
js
jg
xchg
jbe
cmp
xchg
das
inc
push
pop
mov
mov
push
xchg
xor
cmpsb
insl
or
gs
mov
fsts
adcb
out
loope
andl
push
aad
push
jg
and
push
rorb
xor
jno
push
test
jae
loop
sahf
sub
addr16
fldlg2
imul
andb
jmp
outsl
push
push
xor
dec
cs
or
adc
hlt
lock
sti
lock
push
rcll
or
add
in
sbb
mov
arpl
loop
adc
sbb
cmpsb
je
ss
fstp
scas
addr16
cli
pop
clc
cmpsb
adc
mov
pushf
call
addl
mov
test
add
sti
xor
stos
xor
cld
or
cmp
dec
cmp
scas
fcoms
pop
dec
sti
rcrl
out
int3
xchg
fisubrl
cltd
sbb
adc
jae
cpuid
add
and
fstpt
sahf
insb
mov
shll
push
jno
lods
mov
mov
cwtl
mov
and
or
lods
sub
xlat
jecxz
mov
in
into
add
gs
fs
loopne
dec
sbb
sahf
fwait
sub
loop
adcb
adc
inc
jns
jg
std
rorb
adc
dec
fidivrs
push
mov
push
iret
daa
aam
jo
jmp
and
fcmovb
test
int
cmp
cmp
in
mov
shr
cld
adc
sub
outsl
xor
and
xchg
ja
cmc
push
pop
dec
sub
insb
sbb
add
sub
push
jle
retw
arpl
xchg
div
adc
mov
pushf
xchg
rcll
jle
ret
lahf
mov
sti
imul
sub
add
lea
cmp
inc
jge
cli
hlt
xchg
cwtl
xchg
sbb
arpl
les
push
nop
sti
sahf
fcmovnbe
push
adc
and
popf
loopne
push
push
mov
push
pop
mov
scas
loop
adc
inc
mov
jmp
mov
mov
push
xor
push
mov
jb
pop
or
cmp
movsl
push
stc
lret
inc
sti
cwtl
adc
arpl
sbb
cmp
push
in
add
aaa
sbb
add
stos
add
xchg
xor
jns
gs
inc
mov
mov
push
mov
jecxz
dec
push
cmc
imull
mov
dec
push
jae
fildl
jmp
push
ljmp
and
fisubl
into
pusha
adc
add
pop
inc
inc
xchg
jmp
rep
mov
arpl
cmp
out
jg
mov
push
data16
push
jb
jl
and
jbe
cmp
stos
aas
push
xchg
enter
jo
dec
pop
pop
xor
and
loop
push
push
mov
das
add
jle
pop
call
mov
sbb
loop
xor
aas
mov
clc
stos
pop
pop
sub
enter
xor
push
adc
jbe
or
jns
mov
ror
ja
cmp
cmpsb
cmpsb
incl
ljmp
inc
movsb
or
out
fs
sbb
push
stos
add
fimuls
pop
pop
sti
xor
in
xchg
inc
sub
gs
jle
rcl
je
xchg
icebp
movl
in
sbb
mov
jo
push
mov
and
push
and
mov
les
inc
sbb
xor
jle
push
mov
mov
jo
aad
testl
popa
push
or
std
pop
enter
fstp
fiaddl
rorb
push
pop
xchg
popa
jmp
jns
push
pushf
mov
cltd
mov
jo
int
cmp
push
pop
fcomi
sub
dec
xor
xchg
cmp
loopne
out
pop
insl
cld
inc
pop
mov
xor
push
dec
push
movsb
cmp
sub
outsb
mov
dec
and
sub
iret
sub
ret
std
mov
or
jbe
jb
push
pop
mov
stos
fwait
and
test
mov
or
cmc
out
int3
push
in
push
add
push
sub
ljmp
out
aad
sbb
aam
jbe
cmp
or
mov
add
sub
or
pcmpgtd
and
xor
cltd
movsb
leave
and
icebp
repz
jae
lods
ret
mov
outsl
or
sbb
sbb
enter
mov
js
mov
sub
out
mov
outsb
pop
imul
fnsave
push
lds
outsl
xor
cld
mov
out
mov
dec
inc
push
pop
lret
dec
cmp
inc
pop
flds
cwtl
xchg
icebp
push
add
jmp
mov
adc
add
icebp
scas
xor
xor
into
cmc
or
scas
es
adc
scas
fwait
inc
in
pop
mov
sbb
in
dec
dec
cmpsb
sub
cs
and
xor
fldenv
mov
adc
fsub
jg
lahf
jle
mov
rcr
xor
cmp
sub
or
dec
repnz
jno
pop
cmp
mov
mov
addr16
mov
bnd
xor
sub
and
sahf
adc
inc
gs
add
inc
aam
push
sub
pusha
pop
xchg
sarl
insb
inc
or
int3
aad
xchg
push
xor
jno
das
imul
mov
adc
dec
dec
push
jge
pusha
and
xor
cmp
aas
lcall
cmpsl
sti
mov
fsts
aaa
sbb
and
sbb
sti
push
xor
scas
mov
mov
repnz
arpl
gs
pop
aad
jge
sbb
negb
xchg
pop
adc
fistl
std
cs
dec
bound
dec
xchg
inc
xlat
mov
push
or
jle
in
loopne
and
pop
mov
in
icebp
mov
and
shrb
mov
push
pop
jmp
adc
das
out
or
mov
pushf
in
in
testl
pop
mov
jnp
addb
push
shlb
sub
mov
push
and
or
in
or
fcmovb
aam
inc
fstpl
pop
cmpsl
xor
dec
add
pop
js
jo
dec
data16
fcmovbe
sti
call
xor
rclb
leave
nop
in
inc
andl
xchg
out
mov
xchg
rorb
xchg
adc
inc
sbbb
fs
pusha
in
sub
pop
inc
jp
xor
out
mov
push
jmp
call
jb
imul
or
in
mov
adc
add
divl
mov
dec
sahf
cs
stos
mov
inc
aam
push
out
scas
repnz
dec
mov
push
loopne
inc
pop
dec
inc
cmpsb
cmpsb
push
mov
jmp
mov
loopne
jge
adc
sub
fwait
notl
mov
jbe
hlt
mov
dec
lret
xchg
xchg
das
mov
mov
mov
icebp
xchg
xor
dec
aas
fisttpll
fcoms
ljmp
mov
inc
gs
les
push
aam
insl
xor
lret
sub
sub
lret
fcompl
lcall
or
insl
scas
inc
sub
les
insl
rcl
cli
or
and
xor
push
shll
xor
sub
mov
aam
call
js
leave
ja
cmp
orb
dec
jl
jns
mov
mov
ss
in
lcall
sub
fistpl
mov
inc
pop
jl
mov
test
adc
add
inc
and
mov
test
cmpsb
jae
mov
and
out
inc
mov
adc
popf
popa
cmp
xor
jb
sti
scas
adc
jb
push
das
aaa
incb
dec
mov
fs
inc
sub
aad
and
add
mov
mov
mov
jo
pop
scas
andl
bound
imul
insl
add
inc
into
out
jmp
jge
or
inc
test
shrb
popa
add
popa
inc
shl
jmp
repz
pcmpgtd
mov
pop
jno
aaa
sbb
adc
lods
psubusw
js
dec
lods
fidivs
scas
loopne
lods
jo
jmp
sub
xlat
sub
clc
movsb
out
adc
stc
adc
push
pop
leave
and
jp
jo
imul
mov
mov
and
sbb
iret
xor
orl
outsl
fwait
and
mov
xchg
rorb
or
js
and
push
lret
dec
adc
mov
pop
addl
jbe
mov
test
rcrb
or
scas
xchg
in
das
enter
mov
pop
sbb
cwtl
cld
clc
jl
jl
fs
aam
rcll
jno
xchg
xor
sub
push
insl
cld
movsl
xchg
imulb
fwait
std
clc
inc
push
shlb
push
dec
sahf
adc
fisttpl
movsb
add
pop
xorl
jnp
pop
mov
outsl
or
cld
push
je
push
push
leave
shlb
in
insl
roll
decb
mov
or
xor
xor
push
ljmp
mov
fidivrl
bound
test
inc
int
lods
test
clc
sbb
sbb
movsl
div
decl
jmp
addr16
and
pop
sahf
jo
push
xchg
addr16
mov
mov
or
sbb
adc
lahf
mov
shr
pop
fwait
cmc
in
cmp
cmp
mov
jle
por
add
or
movsl
mov
mov
adc
add
push
cmpsb
mov
arpl
jnp
pop
jecxz
jns
jo
shl
outsl
sub
inc
sub
movsl
inc
data16
push
pop
int
inc
shrb
scas
sub
cmp
shrl
js
mov
insl
lock
rolb
sahf
sbb
jnp
sar
jnp
movsb
mov
sub
enter
xchg
xchg
cmp
cwtl
sub
sub
clc
mov
jb
addr16
fs
push
mov
add
popa
mov
test
out
adc
inc
divl
inc
push
jge
cltd
or
add
mov
push
push
push
sub
das
push
pop
pop
xchg
pushf
test
pop
cmovno
fisttps
sti
or
xor
fwait
mov
shrl
xor
jp
xlat
lds
arpl
sub
mov
es
adc
smsw
aas
out
ja
ret
addb
cmp
inc
add
test
xor
xor
jns
xor
arpl
xor
aad
fdivr
adc
jecxz
jns
shrl
xchg
imul
cs
and
sbb
mov
push
hlt
shr
and
leave
clc
pusha
sub
fcompl
rorb
xchg
pop
lods
dec
mov
hlt
in
in
sti
sbb
jge
out
test
fcompl
js
lods
xchg
mov
scas
nop
pop
sbb
and
clc
mov
xchg
mov
lods
mov
push
mov
subl
dec
adc
mov
mov
sti
lahf
das
in
test
clc
call
ljmp
xchg
lahf
mov
bound
daa
push
movsl
push
popa
fidivs
repnz
subb
test
call
mov
movsb
js
push
in
popa
ret
xorl
dec
jp
pop
ret
xchg
push
mov
clc
test
daa
add
add
insl
das
jbe
cmp
xlat
icebp
sub
clc
mov
cmpsb
push
cld
das
inc
add
pop
mov
xor
adc
dec
loope
test
leave
stc
dec
push
jmp
cltd
lock
in
adc
jmp
daa
lea
or
adc
sbb
leave
iret
mov
sub
sti
test
es
imul
jno
adcb
xor
stc
lock
pusha
mov
loop
mov
mov
jb
int3
outsl
rolb
nop
mov
mov
xchg
jnp
jecxz
into
fucom
mov
dec
stos
inc
bound
dec
mov
outsb
cmpsb
ja
cmc
stos
mov
scas
add
leave
lds
add
shrb
movsl
das
sub
push
and
jmp
inc
cmpsl
popa
cmp
lea
mov
mov
outsb
jg
add
loope
test
mov
hlt
add
iret
mov
cmp
es
aam
out
popf
addr16
push
adc
popa
cmp
dec
aas
mov
xchg
pop
cmpb
xor
xor
in
mov
adc
sbb
sti
and
pop
mov
mov
addr16
scas
adcb
and
leave
addb
fimull
aad
test
stos
xchg
jg
inc
movsb
das
in
sub
fs
jno
ja
ret
mov
mov
addr16
mov
testl
jns
sub
sub
stos
arpl
push
fists
inc
jb
cs
negb
lret
and
enter
lret
cmp
jmp
lret
shll
add
fisubl
cmp
xor
ds
jb
mov
lods
cmp
mov
outsb
inc
xchg
stos
sahf
push
repnz
and
pop
mov
ret
jae
add
stos
ja
fisubs
mov
and
pop
pop
jl
xor
xchg
ljmp
lret
inc
out
and
mov
sbb
and
xchg
pop
pop
mov
or
jl
scas
lods
mov
in
scas
ds
enter
ljmp
cmc
add
cmpsl
cmp
cmc
scas
xlat
adc
sub
sub
pop
pop
push
adc
enter
repz
bswap
call
add
adc
mov
lcall
mov
ds
xchg
sub
mov
outsb
pop
mov
sbb
jg
cmpsb
iret
lret
imul
jno
bound
lcall
mov
ficompl
divl
pop
aaa
sbb
push
mov
test
adc
data16
rcr
pushf
lea
lock
push
adc
popl
cmp
add
push
push
jl
das
pop
push
push
int
push
push
add
imul
mov
stc
adc
pop
es
xchg
in
es
or
paddq
pop
xchg
loop
out
cs
add
les
xlat
rcll
out
ss
mov
out
aas
iret
dec
fiadds
mov
dec
adc
inc
test
sub
mov
and
and
xor
scas
scas
imul
mov
in
mov
mov
stos
dec
dec
pop
dec
mov
aaa
in
xor
repnz
repnz
mov
addr16
mov
add
xchg
mov
or
mov
fsubs
fisttpl
add
test
cmp
inc
out
jmp
add
shrl
test
sahf
imul
mov
iret
and
popf
mov
outsb
mov
mov
add
addr16
mov
idivl
push
pop
mov
lcall
das
jp
pop
inc
pop
inc
adc
jae
and
scas
dec
shlb
push
jl
jae
and
sbb
arpl
jbe
pop
lea
test
cmp
js
adc
and
orl
sbb
pop
sbb
stos
xchg
or
pop
pop
pop
mov
jecxz
hlt
imul
int
push
adc
sahf
in
sbb
add
adc
sbb
lret
mov
es
mov
or
mov
adc
cmc
int
push
dec
bound
push
sbb
pop
fbstp
dec
pop
dec
xchg
fnsave
mov
sbb
mov
cmp
mov
sub
loopne
punpckldq
std
sbb
jo
mov
add
pushf
out
xchg
xor
mov
imul
sti
aad
dec
sub
push
xlat
dec
mov
dec
sbb
pop
test
push
adc
jp
clc
popl
push
les
in
mov
dec
js
pushf
lret
inc
aaa
inc
jp
repnz
clc
loop
mov
dec
mov
xor
fmul
push
scas
jnp
stos
jno
and
inc
pushf
xchg
push
das
push
fcom
orb
aad
out
ss
adc
cmp
mov
push
sbb
lret
test
mov
test
pop
xchg
mov
jp
pushf
jmp
adc
les
add
push
jns
xlat
fists
jp
push
rcl
jo
insb
push
inc
jl
repz
add
fstl
jns
xor
xchg
popa
leave
mov
loopne
xor
aas
and
dec
ja
in
cmpsl
sub
aad
loop
dec
mov
jmp
jno
mov
add
sub
push
dec
out
mov
inc
nop
sti
mov
mov
test
push
dec
jle
lods
call
cmp
jno
stc
shll
or
mov
fs
dec
pop
out
aad
xor
lret
rcrb
push
sbbb
cmp
mov
pop
aam
xchg
push
xchg
and
mov
je
push
int3
lret
pop
adc
jp
cld
or
sub
or
mov
shrb
cli
fldln2
mov
sub
xchg
cli
dec
lahf
mov
ljmp
mov
int3
lock
mov
pop
xor
xor
ja
and
and
movsl
into
and
cmp
ficomps
dec
push
sub
into
add
cli
push
push
xor
addr16
xchg
mov
lahf
xor
sub
sbb
int3
xchg
loop
push
mov
mov
in
pop
cli
sub
mov
or
push
iret
and
xchg
pop
or
mov
cmp
mov
jmp
imul
fldl
fwait
xchg
fwait
rol
cltd
in
mov
jl
stos
xchg
mov
in
adc
push
xchg
mov
leave
ret
test
sub
cmpsl
pop
int3
test
jnp
stos
mov
lcall
xorl
pop
bound
js
les
sbb
cmp
ja
je
sbbb
lock
add
cltd
inc
cmp
and
xor
insb
jmp
cld
aad
pop
fsubr
mov
cwtl
rcl
aad
jo
mov
push
cli
test
andb
pushf
stos
push
sub
es
cwtl
or
pop
jnp
mov
pop
enter
xchg
scas
lods
shrl
jno
inc
fmul
pop
or
test
push
sub
push
inc
and
nopl
loop
cmp
or
adc
pop
sbb
inc
jbe
and
scas
pop
sub
mov
mov
insl
popl
orb
fstl
loopne
add
pop
sti
sub
lret
ficoms
in
testb
sti
ss
push
cmp
es
and
out
cmp
inc
cmp
xchg
mov
pop
fists
cli
dec
and
xlat
movsb
lcall
xchg
pop
lcall
mov
inc
and
jle
push
sbb
scas
and
dec
and
ror
je
mov
repnz
sbb
push
not
ret
lret
xor
jns
push
mov
push
xchg
jg
mov
call
popl
push
sar
cmp
insb
mov
dec
in
mov
add
ret
sub
sub
pop
mov
les
xor
push
add
and
test
inc
mov
jge
lods
jg
xor
scas
aas
fs
pop
je
inc
cs
cmp
push
xor
push
pop
hlt
dec
cmp
pop
xor
scas
sub
pop
sti
cld
jbe
adc
fildll
stos
mov
inc
loopne
jo
inc
std
lods
jmp
notl
sbb
xchg
inc
scas
push
dec
lcall
and
in
ror
mov
loope
inc
jb
into
dec
lods
cmpsl
xor
jg
sar
push
cmp
cmp
clc
cmpb
mov
jg
stos
ds
arpl
inc
ljmp
pop
outsb
adc
mov
test
fwait
rcr
xor
jle
ljmp
gs
push
cmp
ss
data16
and
jmp
cmp
sbb
adc
ret
mov
pushf
ss
cwtl
out
push
fs
sbb
adc
mov
jp
or
mov
roll
mov
xchg
xchg
lods
mov
sub
sbb
pop
lods
repz
cmp
data16
outsl
outsb
cmp
lcall
outsl
sbb
cmp
xor
aaa
fwait
dec
inc
mov
adc
push
and
nop
test
repnz
or
sbb
lods
cli
sub
ficoms
das
cltd
imul
incb
ja
xor
ficomps
pop
call
mov
cwtl
fs
mov
pop
enter
test
test
sub
jbe
clc
push
cmp
pop
jo
stos
mov
cmpsl
pop
mov
jle
adc
in
out
cmpsb
mov
fs
push
js
or
jmp
sbb
adc
cmp
jns
inc
dec
cli
mov
sbb
arpl
jmp
push
lahf
test
mov
mov
cmp
dec
js
jb
sbb
nop
ret
cmp
test
xchg
add
cmp
jge
push
gs
push
mov
pushf
ret
scas
mov
inc
sbb
fldt
mov
push
sub
adc
cltd
and
inc
cmp
pop
cmp
aaa
inc
sbb
decb
mov
or
sub
call
scas
jo
fldenv
push
pushf
mov
cmc
inc
xor
add
bound
dec
stos
scas
jmp
subb
mov
out
or
ja
xor
popl
push
fidivs
xor
imul
rorl
std
push
ljmp
mov
lods
fbld
test
insb
push
test
dec
pop
inc
sub
xor
sbb
adc
popa
test
loop
add
push
int
cmpsb
or
fists
cmp
sbb
lods
mov
leave
fwait
xchg
in
inc
mov
mov
pop
es
movsl
fcomp
sub
ret
pop
mov
repz
jmp
fsubrl
fsub
sbb
adc
jo
xor
je
js
inc
call
nop
test
mov
fnstenv
mov
add
lret
inc
sti
notl
xchg
sbb
addl
push
jge
decb
int
or
nop
lock
inc
rorl
jns
repnz
negl
adc
xchg
aad
pop
call
popa
lods
dec
adc
leave
jnp
cmp
jae
aam
roll
loope
adc
cmp
sbb
inc
fwait
jle
mov
imul
xlat
xchg
cmp
fsubs
inc
gs
adc
sub
xlat
or
mov
sarl
dec
xor
jmp
icebp
sbb
xchg
adc
lcall
sarb
sbb
js
jnp
bound
lods
dec
mov
test
icebp
repnz
lea
loop
jne
pusha
sub
sub
xchg
aad
call
in
enter
adc
movsb
pop
cmp
fs
or
sub
sub
sbb
out
cmp
lock
push
decb
jns
jb
movsl
pop
std
dec
mov
jmp
cmpl
aas
into
or
test
mov
push
stc
pop
out
arpl
pop
xchg
add
sti
push
daa
cmp
fsin
sub
sub
div
lahf
lock
cmc
xchg
testl
aad
mov
add
and
xchg
pop
movsl
fwait
enter
and
jmp
sub
and
ja
inc
jae
xchg
pop
jecxz
mov
jnp
push
popa
decl
dec
mov
stos
adc
sub
jno
in
push
sbb
xchg
daa
sub
je
inc
jl
fld
fcmovnb
hlt
cmp
and
stos
dec
push
xorb
xor
mov
ljmp
icebp
and
cmp
or
jnp
adc
push
mov
fmull
daa
mov
mov
sti
add
jmp
mov
push
pop
cmpsl
std
pop
adc
push
pop
xor
xor
or
cmp
sub
jl
jp
call
or
notb
or
cmp
push
mov
lret
and
xorb
mov
jo
xor
pusha
push
clc
mov
cmpsl
lds
xor
and
lods
loope
inc
or
xor
or
sbb
clc
enter
data16
mov
push
jl
leave
jecxz
xor
dec
jmp
cmc
mov
inc
out
inc
scas
lcall
pop
xor
mov
lea
out
mov
or
daa
push
leave
jb
add
sub
std
out
mov
and
jp
mov
mov
popf
stos
imul
cmp
dec
and
shl
lret
arpl
test
scas
push
or
pop
adc
mov
fmuls
mov
mov
pop
adc
push
insb
hlt
outsl
adc
fwait
ss
jnp
or
mov
imul
lcall
outsb
ljmp
mov
pop
sbb
insb
pop
enter
pop
pop
mov
jmp
and
and
xchg
bnd
lcall
aaa
cmp
scas
pusha
mov
add
dec
jo
mov
into
push
and
mov
mov
sti
dec
iret
dec
inc
xlat
sarb
push
mov
out
dec
lcall
adc
repz
pop
cwtl
jg
rcrb
inc
je
cmc
and
inc
lret
pop
leave
ljmp
std
shl
das
dec
push
push
pop
mulb
ljmp
sbb
mov
imul
hlt
mov
adc
adc
pushf
mov
outsl
mov
or
test
xor
adc
jno
int3
xchg
xchg
and
repz
push
int
xor
inc
mov
push
scas
sub
dec
lods
xchg
xorl
les
push
and
push
jge
mov
mov
mov
jecxz
cmp
cli
ret
jg
fldl
inc
pop
repnz
cltd
push
xorb
scas
sub
scas
insb
xchg
test
cmp
das
jae
mov
or
push
fwait
cltd
add
sbb
jne
add
pop
mov
cltd
test
fs
ss
dec
int
cmp
mov
shll
enter
scas
dec
mov
jecxz
out
int
aaa
add
int
notb
iret
lock
cwtl
cmp
cmpb
cltd
cmp
loope
mov
xorb
mov
nop
out
inc
mov
pop
adc
cmp
xchg
xchg
iret
outsl
cmp
js
pop
sbb
and
xor
xchg
jnp
dec
fdivrl
je
xor
mov
jg
and
scas
dec
inc
jnp
xor
jle
sub
xlat
mov
jnp
xor
adc
mov
dec
lods
inc
int
mov
shll
inc
jnp
lock
cmp
sub
sub
add
ds
test
in
fs
shlb
pop
nop
pop
bound
mov
hlt
addr16
mov
dec
dec
lret
pop
data16
loop
sub
or
push
in
push
xchg
fsubrp
je
data16
jae
dec
rcll
mov
xor
mov
jge
gs
cmp
sub
mov
cs
jg
fimull
imull
fs
mov
rcrl
xchg
scas
popa
jne
jl
ficompl
jnp
repz
cltd
movsl
popa
scas
add
push
movsl
stos
mov
mov
xchg
in
inc
pop
pop
mull
loop
lret
mov
xlat
in
push
inc
xchg
cmpsb
jecxz
mov
push
js
fidivs
ljmp
ror
sbb
pop
movsl
enter
movsb
push
fadds
mov
imul
and
mov
ret
mov
jge
rcrl
movb
add
loop
or
xor
les
mov
xchg
mov
dec
insb
lret
mov
and
push
xor
repnz
push
out
mul
mov
mov
out
pop
sub
mov
pop
cmp
clc
hlt
inc
inc
ret
jae
out
jge
sbb
shl
jno
insb
aad
sub
fwait
cmove
int3
xchg
or
out
sbb
rcrl
push
and
adc
sahf
xlat
mov
int
lea
negb
adcb
in
mov
dec
push
iret
mov
insl
push
sbb
pop
stc
mov
xchg
push
cmc
addr16
jne
pop
aam
fwait
mov
out
pop
out
mov
push
in
push
mov
cmp
pushf
idivl
and
ja
js
xchg
std
or
scas
shl
out
iret
or
xor
jnp
int
push
xchg
adc
or
orb
fcoms
dec
shrb
stos
inc
fisubs
sub
mov
sub
movsb
or
in
scas
ss
add
bound
pusha
insb
inc
cli
xchg
fidivl
in
jmp
push
movsb
mov
cmpl
adcl
daa
arpl
scas
push
loope
push
movsl
ret
popa
xchg
fsubrs
data16
lret
mov
xchg
faddl
inc
sub
ss
stc
add
adc
into
mov
dec
and
sbb
clc
insb
jp
nop
jge
outsl
aad
les
inc
or
push
dec
and
jl
cld
push
sbb
out
fdivs
push
cmpsl
test
negl
repz
dec
jge
repnz
mov
call
rcrl
add
cmp
adc
popa
cs
push
mov
cs
inc
shlb
mov
pop
and
cwtl
sub
cwtl
sub
sbb
mov
sbb
mov
jecxz
xor
ret
cmp
mov
mov
ja
xchg
jnp
aaa
ss
test
xor
sarb
mov
sub
fsubrl
add
int
rcrb
mov
sbb
ljmp
jnp
popa
sub
out
jns
push
hlt
mov
frstor
add
push
das
dec
shl
lods
adc
cmp
pandn
pop
fisttpll
xchg
pop
cmpl
std
movsb
movsl
cld
lock
cmpl
add
cwtl
sahf
xor
xor
jb
xor
mov
mov
inc
mov
fs
xchg
mov
leave
loopne
fdiv
cmpsb
mov
mov
mov
aaa
insl
xchg
and
xchg
xchg
imul
push
repnz
push
aam
xchg
ret
xor
dec
jmp
lods
xlat
mov
push
lahf
or
push
out
and
push
leave
sub
and
cwtl
xlat
mov
js
jecxz
icebp
or
out
push
sbb
stos
test
ret
mov
inc
dec
inc
psubw
xor
or
in
icebp
and
push
fidivl
xchg
lahf
clc
shll
cmpsl
jmp
or
xlat
loopne
sahf
xchg
lods
dec
loop
sub
sti
int3
push
or
mov
iret
fs
test
syscall
mov
mov
lret
jbe
sub
pop
sbb
insl
out
outsl
shlb
mov
aam
fwait
popf
mov
xor
addr16
pop
mov
and
js
xchg
jnp
cli
push
push
jge
cmp
xor
loop
icebp
mov
jae
adc
and
mov
sbb
add
insb
xor
fmul
popf
mov
or
sbb
push
jo
mov
mov
dec
in
pop
sub
xchg
dec
andl
ljmp
jmp
sahf
aaa
or
push
and
push
ror
addr16
push
mov
out
mov
mov
mov
xchg
xor
outsl
les
mov
add
mov
hlt
xor
pop
dec
dec
fcoml
loop
add
cs
and
int3
cli
sub
daa
ds
dec
stc
push
imul
dec
test
ret
add
jae
aad
or
pushf
mov
iret
jns
daa
test
addr16
xor
stos
pop
sub
cmp
ja
mov
jae
imul
addr16
mov
pop
notl
xchg
pop
push
mov
repz
and
sti
and
jge
inc
and
in
jp
mov
lds
pop
push
dec
aam
cmpsb
data16
imul
push
scas
mov
and
lods
pop
add
ja
mov
lock
int3
loopne
pop
loopne
neg
mov
inc
movsb
pop
xchg
cmp
cwtl
add
xlat
add
jo
inc
shrl
mov
nop
and
pop
popa
sarl
pusha
inc
rol
dec
int3
xchg
xchg
aam
popf
cltd
pop
adc
xor
push
movsb
pop
fwait
dec
push
and
sbb
jb
jmp
and
jnp
pusha
in
xor
imul
pop
jle
lods
mov
sub
mov
xchg
pushf
popf
mov
sahf
jp
ds
filds
dec
lret
push
cmp
aad
pop
and
mov
leave
movsb
fnsave
xor
out
std
aad
push
inc
fstpl
mov
sti
cmpsl
aaa
loopne
ja
clc
xchg
mov
jmp
cwtl
js
stos
jb
dec
outsb
les
or
rorl
mov
xor
push
jne
fnstcw
test
cmp
orl
pop
and
rorl
cmp
and
mov
outsl
lock
mov
xor
imull
ret
sub
test
xchg
xchg
pop
mov
inc
mov
frstpm(287
inc
je
lods
push
xchg
mov
iret
dec
out
adc
icebp
fidivrs
mov
popf
movl
scas
push
mov
lods
lret
jg
das
mov
mov
or
cld
jmp
push
add
enter
in
xchg
xor
jne
xchg
rorb
sbbb
testb
adc
lahf
stc
mov
popa
ds
hlt
cld
dec
mov
inc
xchg
and
sbb
icebp
mov
jbe
repz
add
xor
xchg
dec
add
lea
mov
das
ret
mov
inc
inc
and
sbb
adc
jbe
dec
sbb
sbb
add
cld
popa
test
addr16
push
cmc
jmp
xor
shll
shlb
repz
mov
ret
adc
mov
leave
sbbl
loop
xor
sarb
add
aam
xor
rorl
call
xchg
test
insb
aam
cld
pop
das
int3
stos
mov
rcr
or
sbb
out
ljmp
aaa
jmp
or
or
ss
cmp
dec
inc
jno
jmp
shrl
adc
cld
loope
jno
mov
icebp
stc
push
int
push
and
rcrb
mov
out
lods
insb
test
inc
sub
adc
mov
adc
fsub
dec
cs
mov
sbb
push
outsb
aaa
lret
cld
insl
add
repz
mov
cwtl
xor
stc
push
mov
cmpxchg
mov
jno
lcall
inc
mov
add
dec
shrb
loop
jge
sbb
in
jle
ljmp
call
xchg
adc
popa
mov
pop
xchg
repz
repz
test
fldenv
adc
or
xlat
sbb
ficoml
mov
lret
and
ret
jecxz
stos
mov
enter
scas
movsl
cs
mov
sti
mov
lahf
sbb
or
mov
and
addb
inc
mov
repnz
jg
rorl
or
pop
cmp
mov
xchg
aam
mov
decb
pop
pop
inc
arpl
lcall
nop
sti
fdivr
xchg
jge
je
outsb
fwait
xchg
cmp
or
js
jnp
pop
movsb
pop
int3
into
mov
xor
jns
xor
jp
mov
xchg
adc
mov
fwait
outsl
adc
and
imul
pop
mov
test
stc
mov
aaa
cmp
test
inc
inc
mov
jp
xlat
and
imul
add
mov
enter
jnp
or
sbb
movlps
cmp
pop
mov
in
or
movsl
mov
or
mov
push
pop
inc
sbb
mov
inc
push
aad
lret
or
or
inc
push
xchg
pop
push
or
iret
pushf
jbe
or
inc
call
jle
sub
adc
inc
inc
cmp
js
in
sbb
lahf
jae
sbb
mov
inc
fwait
sub
mov
cld
fsts
ljmp
mov
or
shrb
and
sar
push
mov
ja
or
inc
test
sbb
rorl
sub
ljmp
mov
rolb
add
dec
out
ja
sarl
rcrl
fcom
test
addb
push
jo
and
loop
lcall
or
lret
sbb
movsl
lcall
mov
mov
adc
sub
push
into
shlb
and
jns
inc
stos
test
xor
aad
test
repz
xor
fdiv
ficoms
sub
clc
push
cmp
leave
test
out
rclb
jp
jne
test
cltd
xchg
mov
and
cmp
sti
xor
xchg
notb
jo
gs
aas
inc
ljmp
stos
inc
pop
sbb
lret
cs
push
xor
mov
pusha
fmull
xor
or
popf
test
mov
test
dec
jg
loopne
pop
sahf
rcl
les
pop
hlt
pop
cli
das
test
add
enter
sbb
dec
jbe
xor
xor
int3
mov
popf
adc
ljmp
pop
adc
in
fadd
add
add
mov
push
mov
sub
test
add
mov
jae
xor
shl
pop
sbb
mov
in
std
iret
or
fdiv
mov
out
jge
arpl
jge
xor
test
push
mov
outsb
iret
fdivs
sbb
fstpt
sub
xor
fwait
xchg
pusha
movb
inc
xchg
sbb
ljmp
outsl
nop
pop
mov
pop
clc
inc
clc
and
pop
sub
sahf
cs
push
sub
pop
test
dec
mov
dec
adcl
mov
stc
pusha
test
mov
iret
std
xchg
push
jp
mov
pop
cmpb
cli
in
es
inc
mov
xchg
mov
arpl
mov
and
arpl
mov
mov
xor
cltd
dec
mov
out
outsb
mov
or
adc
fadd
mov
or
daa
pop
ss
fbstp
jbe
sub
mov
push
push
into
sub
mov
mov
pushf
mov
insl
inc
nop
jl
in
sbb
out
mov
lods
xlat
nop
fwait
jmp
and
xor
push
cwtl
lret
int3
push
fwait
int3
inc
loopne
jb
loopne
inc
cmpsl
push
lds
xlat
ja
dec
shrl
inc
pop
sbb
xchg
pop
pop
in
in
cs
mov
sahf
int3
pop
fisttpll
mov
dec
push
test
xor
leave
add
stc
inc
pop
mov
fmul
sbb
fnsave
push
push
push
or
xchg
sarb
test
sub
pop
cli
ret
add
mov
daa
ds
jmp
test
imul
inc
out
jge
test
push
mov
adc
push
fcomps
sub
mov
ss
pop
xchg
test
pop
xchg
push
les
add
daa
inc
mov
inc
bound
scas
or
sbb
pushf
xchg
jb
adcb
sub
xchg
or
lods
and
and
push
xor
je
pop
adc
and
push
loope
jne
int3
adc
or
lds
adc
lret
xor
push
andb
nop
fisubrs
loopne
mov
xchg
dec
jne
jg
repnz
repnz
mov
lods
jge
adc
or
nop
movsl
mov
xor
divb
aad
and
js
sub
adc
cmp
scas
out
outsl
call
pop
jb
sub
cmpsb
ss
sub
iret
stc
cltd
and
mov
pop
insl
push
xchg
pop
jo
jno
jp
rolb
and
add
ret
dec
mov
mov
inc
fmul
jo
add
dec
sbb
or
mov
xchg
cmpsl
dec
lret
repnz
cmp
jo
and
mov
minps
mov
and
and
xor
popa
mov
out
jne
sarb
cwtl
outsb
jb
adc
mov
jnp
ds
mov
jae
xor
jne
inc
mov
sarl
aas
iret
fadds
inc
scas
cmc
cwtl
push
dec
push
cmp
addr16
jo
das
push
inc
mov
push
inc
je
out
test
loop
dec
pop
loope
jecxz
push
mov
popa
mov
and
loope
repz
jae
inc
pushl
sbb
mov
jg
nopl
push
loop
lahf
mov
jns
and
icebp
mov
sahf
cmp
dec
in
add
lock
pop
mov
gs
xchg
pop
test
sub
repz
loopne
dec
aam
xor
sbb
sarl
test
mov
push
fsubs
pop
jmp
mov
call
sub
es
cmp
cmp
add
loopne
mov
mov
cmpsb
jge
out
imul
xor
cmp
inc
mov
push
xor
mov
pop
fcmovne
aam
jae
mov
cmp
ds
roll
add
cmp
push
in
jge
dec
and
lahf
xchg
sub
sahf
ss
or
fmul
icebp
adc
pop
mov
or
ss
mov
sub
test
jb
mov
add
inc
mov
adc
dec
sub
sub
inc
pop
cltd
push
cld
or
add
lret
inc
push
inc
jne
mov
bound
les
ds
mov
sti
sbb
pop
cld
dec
or
cltd
push
cmpl
shr
xorb
shrb
cmp
test
mov
pusha
ret
lock
add
mov
ss
mov
call
shl
jae
and
xchg
sbb
inc
stos
lea
mov
dec
or
aaa
inc
out
in
push
mov
mov
fsubrs
xor
push
push
dec
jae
jl
adc
inc
popf
cmp
xor
and
fdiv
scas
push
inc
in
dec
cmp
gs
je
xchg
dec
cmpsb
xor
adc
sub
push
mov
ljmp
icebp
xlat
out
dec
loopne
add
add
mov
sbb
cmp
repnz
push
xchg
inc
inc
cmp
push
xchg
popa
arpl
incl
sbb
fwait
arpl
cwtl
fcomps
mov
xchg
clc
les
mov
imul
jnp
fidivl
rcrb
inc
dec
dec
sub
and
mov
out
dec
enter
call
pop
outsl
pushf
sbb
inc
jne
mov
mov
xor
outsl
icebp
sbb
dec
sahf
rcl
xor
dec
shrl
cltd
and
cmp
xor
out
daa
shl
out
lods
adc
imul
mov
shrl
push
jbe
xchg
fisubrs
xor
inc
mov
push
shll
pop
aad
das
push
out
repnz
jo
aad
dec
add
rolb
mov
xor
sbb
xor
inc
addr16
xchg
aad
add
xchg
repz
lret
jp
jmp
or
fcoml
push
push
icebp
push
pop
out
and
fcomp
scas
fstl
outsl
cld
cmpb
sbb
push
sub
pop
inc
cmp
and
fdivr
add
add
adc
data16
jne
add
test
ret
insl
in
int3
xchg
jge
mov
push
fs
pusha
and
cmpsl
push
rorl
dec
push
and
mov
mov
xor
push
mov
jae
sbb
pop
ljmp
repz
ret
inc
adc
inc
mov
fwait
je
add
decb
and
je
aad
or
pop
enter
fdivrs
sbb
test
sbb
xchg
cmp
lods
push
lcall
insb
adc
mov
mov
or
ror
in
sbb
test
mov
or
dec
cmpsb
sub
push
add
jno
popa
popa
das
clc
xor
std
arpl
sub
pop
scas
data16
or
aad
fstpt
adc
push
jno
mov
xor
or
test
and
out
out
and
fnclex
movsb
add
adc
xlat
xor
push
pop
in
xchg
aaa
sub
fstps
ljmp
test
adc
das
push
xchg
sbb
jns
repnz
xchg
push
xchg
mov
push
pop
push
loopne
mov
in
pushf
nop
jmp
insl
sbb
jns
jne
pop
add
and
out
inc
and
out
pop
xchg
in
popf
adc
adc
dec
cmp
test
and
cmp
dec
dec
test
fcoml
mov
pop
shlb
scas
add
lods
int3
mov
test
mov
outsb
cltd
push
pop
cmp
aas
popa
adc
daa
jno
fstl
int
xchg
or
or
xchg
mov
fnstcw
fidivrl
inc
sahf
dec
out
add
pop
fcomps
inc
or
sub
push
jae
jmp
sbb
jae
sti
test
pop
hlt
int3
pop
insl
js
cmp
cmp
mov
jbe
pushf
loope
mov
outsb
pop
or
inc
xlat
icebp
adc
aaa
je
dec
scas
in
insb
pop
cltd
ds
mov
shl
dec
jmp
mov
mov
cmp
xor
cmp
cwtl
cs
or
adc
imul
dec
sub
jl
mov
xchg
int
xor
lcall
push
push
out
inc
outsl
ss
orl
hlt
incl
push
lock
adcl
cld
jo
rcrl
in
repz
xor
sbb
xor
out
jno
pop
push
lods
into
dec
push
inc
mov
inc
lds
push
dec
jle
jbe
xchg
out
adc
mov
or
cmp
push
pushf
inc
leave
jp
push
pushf
mov
jg
adcb
adcl
inc
xor
adc
pop
sbbb
pushf
jg
sub
push
arpl
mov
mov
les
in
out
adc
lahf
sub
adc
enter
sub
jg
addb
fwait
lahf
inc
shrb
push
jb
mov
xor
sbb
das
dec
scas
out
es
sbb
cmp
push
fimuls
xchg
popf
inc
lock
fistl
cs
leave
sbb
push
jecxz
int
test
adc
popa
cmp
xchg
nop
mov
jmp
xchg
adc
dec
or
movl
sarb
cmp
pop
imul
inc
inc
inc
pop
cltd
inc
arpl
lret
mov
mov
mov
int
mov
fnstcw
fcmovbe
idivl
add
adc
sbb
imul
lret
pop
hlt
adc
inc
jecxz
lods
mov
lea
sub
inc
mov
ds
divl
out
outsb
adc
mov
and
rcl
xlat
pop
mov
jnp
ds
daa
cmp
lods
jl,pt
hlt
xor
cwtl
frstor
pop
sbb
add
or
add
mov
adc
cmp
dec
inc
jns
shll
mov
dec
mov
xor
jae
and
mov
inc
aam
lods
and
adc
out
xchg
mov
jl
fdivr
out
pop
stc
call
cmp
pop
cmc
dec
jae
stos
aam
imul
fldt
jmp
push
mov
jg
jbe
push
sub
push
movsb
add
mov
jno
push
inc
jl
sub
sbb
out
popf
sar
fs
xchg
popa
inc
inc
fcomp
dec
idivb
or
cltd
js,pt
pop
cmp
or
push
iret
jle
or
and
fs
divl
cmp
mov
dec
repz
xchg
jae
mov
lret
xor
xor
and
pop
add
and
mov
stos
pop
adcl
popa
imul
imul
mov
lock
adc
stos
test
clc
or
push
add
ljmp
loope
sub
in
mov
dec
mov
xor
dec
pop
mov
or
pusha
xchg
push
gs
mov
pop
outsb
bound
and
add
mov
or
pop
test
in
inc
and
imul
push
cmc
jg
adc
push
out
xchg
roll
loop
jae
popf
xlat
dec
cwtl
jo
fsubrl
jg
stos
insl
adc
hlt
push
orb
int3
xchg
mov
mov
std
xchg
sbb
sbb
jg
dec
jp
adc
xchg
stos
xor
adc
or
add
fsub
idivl
add
arpl
negb
pop
jnp
push
or
call
or
gs
mov
inc
mov
push
jg
inc
loop
xor
in
xchg
jl
test
stos
push
and
fwait
out
xchg
push
imul
jle
fcoms
xor
mov
scas
xchg
test
jne
andb
aas
popa
enter
scas
dec
fsubs
pop
xchg
insb
dec
lahf
mov
sbb
fdivs
cs
jp
rcl
jae
inc
aad
jns
lods
scas
sbbb
js
nop
inc
out
hlt
out
add
mov
adc
aas
out
xor
sub
xchg
xor
incb
ret
stos
xor
pop
fldenv
mov
push
and
pushf
mov
xlat
sbb
sti
jns
jmp
shrl
leave
inc
jbe
push
dec
es
mov
push
xchg
dec
shll
cmp
xchg
loop
call
inc
pop
movd
add
mov
push
js
xchg
push
and
push
sbbb
outsb
mov
mov
mov
imul
lcall
scas
adc
cmpsl
loope
das
int
sub
add
icebp
or
jae
and
mov
mov
cld
push
xchg
xchg
sbb
sub
add
mov
ficoml
cmpsl
cmpb
out
sti
xor
int3
mov
pusha
push
data16
test
ss
jl
movsl
pop
jg
mov
lock
js
clc
fsts
fnsave
sub
mov
shr
add
shlb
lock
jmp
test
test
inc
or
inc
fidivl
sbb
shlb
cmp
test
rolb
push
pusha
lods
xchg
popf
adc
and
repz
cltd
and
iret
dec
adc
pop
or
movsb
fdivr
sbb
or
mov
sub
lds
jbe
mov
xor
test
mov
xchg
std
jg
fcompl
int3
push
dec
mov
xlat
inc
in
divb
and
lret
or
test
mov
xlat
jle
push
cmp
dec
push
data16
arpl
xchg
pop
mov
dec
sbb
jmp
shlb
sbb
push
pop
fwait
xchg
pop
in
cmp
int3
outsl
mov
mov
movsl
sarw
mov
iret
cmp
and
push
dec
xorl
in
aas
insb
leave
popa
and
scas
das
inc
bound
lock
rcl
fstl
fs
mov
mov
bnd
jmp
out
sahf
and
jp
out
mov
les
out
mov
lret
testl
addr16
mov
mov
test
mov
pop
ret
out
cmp
in
and
xchg
inc
or
pusha
or
or
dec
sub
sub
xchg
adc
in
jbe
add
xor
fwait
cltd
js
lret
jle
es
clc
jno
shll
adc
lods
add
fsubr
negl
jbe
popa
jne
sub
out
mov
cwtl
rcl
loopne
inc
jno
jge
arpl
sbb
in
test
push
push
jmp
push
dec
sub
or
stos
test
pop
sahf
xchg
push
and
test
pop
lahf
pushf
cmp
add
shrl
scas
push
rorb
gs
rolb
or
scas
push
mov
cmp
sub
pop
and
fs
add
xchg
pop
js
fmull
movsb
fwait
shlb
sub
les
mov
jne
mov
or
mov
sarb
mov
shl
scas
xchg
xchg
and
add
push
jnp
pop
insb
adc
mov
push
sahf
push
pushf
loope
fisttpl
aas
or
lret
std
mov
out
mov
je
stc
jb
fistpll
add
add
dec
leave
outsb
ds
adc
jmp
jge
jno
in
test
xor
pop
call
fcompl
sbb
scas
test
add
cmp
cmp
push
jnp
jb
adc
push
rcl
nop
sub
lea
in
out
jne
sub
inc
std
mov
jp
test
xchg
dec
sbb
test
int
cmp
addr16
inc
clc
mov
arpl
out
jbe
adc
add
fisttps
cmp
mov
lret
jb
cmp
mov
mov
popa
enter
xchg
cmp
insl
mov
in
pop
sbb
cmpsb
jb
aaa
xchg
sbb
push
mov
and
and
stc
gs
inc
adcb
xchg
fs
add
fwait
insl
das
insb
fwait
loopne
mov
cmp
rol
jns
stc
mov
xchg
xchg
add
mov
loop
imul
or
ss
mov
dec
lds
xor
movsl
cmpsb
popf
mov
test
inc
xchg
arpl
fcoms
mov
sbb
mov
test
cld
adc
jae
inc
push
outsl
jge
ja
pop
ffree
popf
adc
adc
jne
add
add
pop
imul
notb
sbb
mov
dec
pop
loopne
leave
pusha
jmp
stos
mov
je
and
xlat
mov
insl
dec
mov
jg
std
outsl
arpl
lods
mov
dec
pop
std
jns
xchg
xorb
test
lods
pushf
jge
jnp
dec
mov
or
test
cmp
mov
ffreep
lods
pop
scas
push
add
push
and
adc
mov
into
test
or
and
dec
push
std
aad
bound
aam
pop
out
adc
pop
test
loope
clc
push
fcom
sbbl
sahf
xchg
cmp
push
shlb
andb
in
in
jne
subb
pop
lahf
adcl
jmp
subl
outsb
pop
xor
adc
pop
push
inc
sbb
xor
pop
test
pushf
inc
lds
push
in
fldcw
repnz
and
mov
and
push
loope
xchg
fxam
push
repz
lahf
mov
cs
cwtl
popa
adc
out
jp
fcmove
mov
shll
dec
adc
cwtl
sub
jns
mov
enter
fisttpll
pushf
push
mov
dec
incl
loope
push
ret
cltd
push
jg
or
mov
pusha
and
xor
cmpsl
sub
aaa
lcall
mov
xchg
not
xorb
adc
ret
sbb
jo
daa
sub
pop
or
dec
sbb
cmp
push
ja,pt
icebp
lret
movsb
mov
ljmp
rolb
dec
jmp
jb
popf
fwait
adc
insl
mov
inc
gs
ja
call
xor
icebp
in
adc
mull
nop
cltd
mov
lcall
add
sbb
adc
xchg
add
xor
mov
mov
inc
rol
mov
jg
xor
xchg
lcall
push
mov
inc
stos
mov
and
xor
call
test
inc
jo
decl
and
or
sar
ror
loope
fdivrs
inc
andl
ja
aam
push
and
xchg
lret
inc
jb
insl
jge
ds
xor
pusha
push
mov
mov
jno
test
xchg
daa
cmp
lcall
cltd
sub
cld
jnp
shlb
loop
mov
arpl
push
fdivrs
or
sbb
inc
cmp
nop
lods
mov
repnz
mov
bound
inc
aad
xchg
stc
push
add
iret
imul
lret
inc
test
loopne
cmpl
pop
and
je
in
xchg
pushf
add
lods
cmp
movsb
mov
imul
sub
test
inc
movsb
rcrb
sub
xor
jae
inc
dec
pop
fmulp
or
lret
nop
shll
pop
loope
sbb
sbb
testb
hlt
in
shll
cld
cvtps2pd
into
out
ljmp
and
jle
ss
xor
and
call
mov
dec
inc
in
sti
fs
sub
iret
jo
adc
xchg
jmp
rolb
outsb
adc
xchg
inc
push
sbb
leave
or
outsl
js
aas
dec
ds
or
inc
pusha
out
xchg
stos
sbb
sbb
test
test
inc
out
pop
ss
divl
mov
pop
mov
inc
sbb
insl
icebp
test
addr16
aam
ljmp
mov
xlat
pop
push
or
adc
iret
ljmp
mov
iret
mov
push
inc
stos
push
out
mov
add
jno
std
pop
pop
push
icebp
movsl
cwtl
es
imulb
flds
shrb
xor
and
repnz
ret
nop
mov
cwtl
mov
dec
movsb
or
mov
xlat
arpl
xor
jb
out
cmp
add
mov
icebp
fstl
sbb
lret
dec
jb
movsb
jo
inc
cmc
pop
leave
cmp
insb
mov
push
mov
or
jecxz
cmpsl
xor
sbb
decb
add
add
mov
bound
mov
sbb
addr16
out
ret
pusha
push
xor
popa
sub
jnp
dec
lds
icebp
mov
mov
pop
or
push
lock
mov
mov
or
mov
pop
sar
int3
mov
push
pop
nop
add
xchg
jg
xchg
mov
add
xor
das
lahf
out
cltd
rclb
cltd
flds
leave
lahf
js
mov
mull
popl
xlat
sbbl
pop
sti
inc
jbe
repz
aaa
push
movl
dec
popf
push
or
mov
scas
pop
add
fwait
pop
loopne
push
arpl
mov
scas
push
dec
pop
push
lock
push
cvtps2pi
mov
repnz
jp
xchg
mulb
stc
imul
mov
cmovnp
and
rclb
les
xor
xchg
dec
fcmovnu
jle
int
cmc
push
xchg
sub
cmpsb
in
and
mov
cmp
or
push
push
stos
cmp
or
sbb
stc
scas
nop
adcb
fwait
mov
push
test
cmp
jl
ja
test
mov
add
js
aaa
out
cltd
mov
repnz
test
push
pop
push
out
sub
leave
in
push
jmp
or
or
push
mov
shr
stos
xchg
das
fs
add
add
mov
push
repz
ficoml
fs
push
cmp
fsubrs
dec
std
out
pushf
lret
lret
mov
cmp
jb
lds
clc
dec
mov
sub
outsb
ret
sar
inc
decb
cld
pop
xchg
xchg
into
movsl
or
pop
mov
mov
inc
in
push
sbb
int
lcall
adcb
add
sub
cli
push
xlat
add
call
std
jmp
push
or
dec
xchg
roll
sahf
xchg
pop
les
mov
sub
enter
push
mulb
xor
sub
sbb
enter
int
rcll
add
add
or
cli
or
jmp
push
dec
sbbb
leave
push
adc
xor
insl
sbb
add
cmp
dec
sub
loopne
enter
insb
or
lock
and
gs
xchg
fidivrs
and
lret
jge
adc
nop
inc
imul
push
out
cli
call
mov
dec
pop
or
in
add
inc
xor
sahf
dec
andb
xor
in
dec
cltd
sub
fs
mov
push
shll
jge
push
xor
imul
mov
push
mov
mov
pushf
xor
in
cmp
roll
inc
mov
xchg
pusha
sbb
jl
dec
xor
movsl
push
insl
sti
pop
mov
pop
cwtl
cli
push
addl
xchg
loop
aas
gs
subb
pop
sub
cmp
push
dec
es
pcmpgtb
dec
sbb
sub
je
sub
imul
enter
addr16
gs
jl
gs
dec
aam
fcompl
shll
cltd
jae
xchg
js
dec
jbe
or
inc
lea
adc
sub
inc
mov
popf
sbb
jg
incl
push
sbb
xor
outsb
jl
xchg
pop
lds
mov
movsb
pop
mov
adc
dec
shll
lahf
mov
mov
mov
je
dec
sub
repz
pop
push
push
iret
inc
dec
push
pushl
loope
aad
fcoml
or
and
or
enter
or
push
pop
pop
push
inc
dec
ficompl
jp
cld
inc
sbb
pop
fsubs
sub
inc
fmul
cmp
stos
xor
mov
sub
sub
stc
mov
and
cmpb
jae
cld
int3
in
out
push
rol
jge
adcl
fs
jmp
dec
fadds
xor
mov
xchg
xchg
sarl
cmp
mov
pop
sub
or
mov
fadds
movsl
out
sub
pop
cmc
xor
ret
pop
es
sub
std
jno
int3
sub
repnz
sub
sub
jne
addb
inc
push
cmp
cmc
insb
sub
xor
cltd
popa
sbb
dec
and
fnstcw
cmp
roll
lea
lea
fdivrp
iret
sbb
and
imul
jp
ja
clc
or
add
shll
jb
outsl
mov
xor
jb
xor
xchg
lret
ljmp
scas
rclb
test
and
cld
fimull
test
xchg
stc
inc
xchg
fstl
pop
cld
stc
inc
sbb
push
push
jl
fchs
dec
outsl
mov
cwtl
int
pop
int3
push
inc
cwtl
add
cli
mov
in
lcall
les
mov
xlat
and
pop
ret
clc
jle
cmc
mov
out
movb
faddl
lcall
push
div
aas
leave
repnz
jecxz
dec
les
jae
and
movsb
pop
sbb
iret
sub
das
or
in
xchg
xchg
or
movsl
mov
loope
adc
adc
mov
jmp
push
mov
fcompl
push
dec
loopne
xor
nop
sub
xchg
imul
js
jecxz
std
cs
sub
pop
aaa
sti
imul
push
enter
fwait
mov
add
rolb
inc
out
das
xchg
iret
mov
fbld
out
jo
xchg
jae
les
aas
dec
int3
push
sbb
mov
push
pop
lods
addr16
adc
rcrl
mov
sub
mov
cmp
push
les
sbb
lret
pop
xor
push
xchg
mov
pop
add
out
in
xor
mov
pop
js
into
add
or
insl
jne
rcrb
filds
pop
mov
shr
pop
repz
mov
jmp
loope
cmp
inc
lcall
es
je
sbb
sbb
push
lea
and
insl
iret
iret
aaa
adc
mov
push
pop
std
loopne
adc
xchg
xchg
mov
ret
aam
dec
sbb
or
adc
aas
adc
or
and
push
not
push
cmp
ficoms
test
in
cmp
sub
mov
mov
jb
push
pop
cli
in
mov
test
insl
lret
daa
sub
adc
mov
push
movsl
fmuls
mov
lds
ja
lcall
movsl
push
xchg
push
or
loope
fisubs
inc
mov
inc
ja
mov
bound
orb
ret
insb
and
adc
xchg
aad
clc
repnz
mov
mov
ljmp
loop
and
mov
enter
inc
jle
in
push
xchg
lret
fld
pop
xor
cltd
dec
orb
int3
xor
jb
dec
and
stos
push
sbb
sbb
cmc
lds
ljmp
dec
sbb
aaa
mov
je
insl
pop
das
repz
xchg
xor
xchg
insb
adc
pop
in
sbb
mov
sbb
int
sbb
or
push
orb
xchg
xchg
out
test
mov
pop
jecxz
adc
and
sar
cmpsl
xchg
ret
mov
lret
mov
add
adc
aas
mov
push
dec
mov
mov
sbb
mov
rol
jp
iret
es
jno
jo
inc
popa
popa
jge
inc
mov
ja
push
mov
xchg
adc
pop
mov
in
cmpsl
jecxz
rclb
xlat
push
ret
push
daa
jae
push
fs
cld
push
mov
divb
insl
daa
scas
lret
cmpsb
icebp
sbb
movsb
movsb
das
dec
or
loopne
lds
mov
and
negl
dec
fidivs
jl
mov
pop
mov
dec
ret
adc
inc
lcall
mov
and
bound
pop
cmp
fimull
push
pop
push
ret
call
out
lret
adc
inc
mov
cmp
cmp
mov
mov
adc
das
popf
pushf
mov
lret
fmuls
je
xchg
or
outsb
push
pop
idivb
sub
jle
lret
push
adc
aam
test
push
push
call
push
jno
bound
inc
sub
les
push
movsb
add
data16
cmpl
insl
insb
mov
lcall
sub
vcvtpd2psy
inc
add
and
pop
jne
push
jle
jl
addr16
sbb
in
and
mov
xchg
adc
dec
dec
add
leave
fwait
mov
push
push
dec
or
addr16
xchg
mov
lret
lcall
xchg
aad
insl
addr16
addr16
addb
out
ret
stos
push
shrl
cs
adc
and
or
mulb
addr16
movsl
ret
dec
aas
aaa
lods
mov
daa
mov
push
es
dec
inc
fcmove
aam
mov
loop
dec
jno
mov
or
mov
add
pop
int3
rcll
cmc
lds
out
mov
fwait
mov
cmpsl
push
movsb
xor
ret
aas
repnz
mov
adc
cmp
lods
xchg
dec
inc
dec
stos
mov
cmpsl
xchg
xchg
mov
mov
fisubl
sbb
mov
jle
fisttpl
sbb
call
xchg
push
fsubr
orl
mov
into
ss
push
push
fnsave
pop
push
sahf
pop
loope
jo
or
fmuls
sbb
sbb
aas
cmp
aad
fwait
dec
dec
cmp
adc
fistpl
jns
test
jne
and
jne
jae
mov
insb
adc
clc
cmc
adc
nop
cmp
outsl
sbb
inc
outsl
lds
jp
pop
mov
push
dec
dec
inc
sub
mov
dec
cmp
clc
mov
fnstsw
insl
idivl
mov
and
or
dec
pop
push
xchg
adc
inc
or
fs
add
fisubl
shl
outsb
call
in
pop
rcll
bound
mov
insl
inc
imul
out
and
fcompl
outsb
mov
cld
fistps
xchg
jmp
cmc
mov
fucomp
xchg
mov
or
fnsave
mov
gs
sub
insb
stos
mov
xor
mov
vhaddps
xchg
push
movsl
mov
int
in
fistpll
add
mov
jmp
leave
xchg
adc
cmp
dec
jno
xchg
sarb
xchg
negb
sbb
shrl
pop
inc
ljmp
and
cmc
push
shll
mov
mov
js
sbb
mov
icebp
imul
aam
data16
test
mov
inc
dec
sub
sub
lcall
stc
and
sbbl
test
cs
pop
xchg
fs
dec
mov
jl
adc
pop
addb
out
lahf
xchg
push
movsl
movsl
in
lahf
mov
add
xchg
dec
cmp
iret
enter
insl
in
dec
popa
or
cmp
leave
adc
pop
sbb
pop
or
push
xchg
or
repnz
mov
les
push
mov
mov
push
test
daa
repz
jno
xchg
adc
push
xchg
add
adc
hlt
dec
dec
xor
xor
stc
jp
xchg
xor
stos
mov
xor
jg
or
ss
lcall
sbb
mov
fldcw
jne
sub
es
fwait
inc
cmp
negl
int3
stos
cmp
in
ss
and
mov
inc
inc
lea
cmp
dec
movsb
xchg
ficoml
popa
cs
add
in
fidivs
dec
xor
mov
push
out
jno
sub
in
cmp
inc
inc
cmp
xchg
mov
out
mov
jno
test
and
shr
add
popa
pop
pop
lcall
push
jecxz
pop
out
mov
aaa
dec
bound
mov
je
cli
fiaddl
gs
clc
sub
imulw
fsts
data16
nop
out
rcr
cmp
fmul
jo
xor
inc
int3
or
cwtl
lods
mov
lods
and
mov
jecxz
dec
sbb
jno
out
xlat
inc
or
jae
stc
fs
adc
leave
sub
or
popf
icebp
scas
xor
ss
xor
inc
cmp
jg
mov
andl
cmp
sub
data16
fsubr
std
mov
sahf
loop
dec
pop
mov
adc
add
stc
xor
ja
dec
test
ficoml
mov
cmc
mov
fwait
xor
inc
add
lret
cmp
sbb
mov
or
adc
loop
dec
dec
cli
es
ret
adc
pop
ret
ds
sbb
ja
lsl
push
or
cmp
mov
mov
add
int
jne
sub
sub
or
aad
ficoms
pop
push
lods
stos
aaa
adc
inc
hlt
scas
mov
add
sub
bndldx
int
icebp
mov
repnz
adc
dec
repz
jge
jne
xchg
mov
dec
shrl
icebp
fcomps
xchg
popa
out
fst
hlt
inc
je
or
aam
outsb
xchg
orl
push
push
rcrb
out
mov
dec
shll
and
mov
mov
jnp
inc
aaa
inc
popa
loope
xchg
mov
sbb
xorl
xchg
sbb
add
xchg
je
pop
aaa
popf
and
push
dec
mov
mov
shlb
jae
pop
adc
call
addr16
add
mov
jmp
lret
int3
out
xchg
dec
ljmp
cwtl
je
notb
pop
xor
cltd
adc
pop
mov
and
test
mov
push
cwtl
pop
or
lret
ja
xor
jl
ljmp
cmpsb
dec
outsb
pop
dec
and
dec
addr16
push
jmp
and
or
mov
mov
ljmp
mov
pop
cli
and
or
jl
gs
push
cs
icebp
ss
cmp
fwait
sub
adc
mov
inc
rorl
pop
inc
mov
test
pop
sbb
ljmp
xor
jge
pusha
sbb
fs
sti
mov
sar
ret
push
mov
mov
pop
call
xchg
stos
xor
fsubs
sbb
das
imul
das
dec
test
push
subl
divb
arpl
mov
and
or
icebp
out
lock
inc
jbe
add
sbb
lods
jne
imul
out
cmp
adc
push
ljmp
in
out
sub
sbb
in
in
fsts
shlb
out
cmpsb
fistl
ja
xchg
lock
orb
xor
xor
lcall
dec
add
push
xor
and
mov
lcall
mov
repnz
inc
mov
sbb
test
outsb
leave
sbb
pop
test
push
pop
in
cmpb
inc
add
sub
adc
pop
pop
cltd
je
pop
jp
pushl
dec
test
inc
push
clc
clc
xchg
mov
pop
std
das
jmp
xor
push
lret
mov
sbb
test
fisubl
fcmovnbe
pop
int3
jns
leave
dec
iret
test
xor
cmc
sub
hlt
in
fistl
sub
jle
mov
lahf
ret
nop
mov
xor
aas
mov
xchg
lret
mov
sbb
pop
sbb
loope
cmc
jns
inc
xchg
insl
xor
xchg
push
orb
xchg
cmp
jmp
jle
pop
dec
pop
xchg
xchg
test
and
out
inc
push
ror
in
pusha
jae
dec
movsb
lcall
ss
fwait
stos
cmp
incl
inc
sub
pop
inc
out
adc
cwtl
xchg
or
ss
cltd
fcomps
es
aam
in
leave
int3
push
addr16
mov
mov
stos
mov
add
loop
fistl
jge
mov
cmp
scas
cmpsb
cs
mov
cmpl
xchg
cltd
aas
imul
js
ret
add
cmp
inc
jecxz
arpl
cmp
jge
or
sbb
jo
inc
ror
xchg
xor
mov
or
popf
addr16
xchg
ljmp
jne
adc
xchg
ret
inc
xchg
pop
jmp
or
rcll
push
decb
add
subb
cltd
push
pop
fstpt
xchg
sarb
adc
leave
out
lret
icebp
pushl
add
mov
xchg
mov
push
xor
out
notl
ja
and
and
nop
jns
mov
fsubl
mov
je
icebp
xchg
inc
jns
ljmp
sbbb
movsb
fidivs
in
call
cmp
and
pop
xchg
ss
push
mov
adc
or
lods
gs
cmp
mov
pop
sbb
subl
aaa
push
push
mov
sub
cwtl
call
test
push
lahf
push
xor
jnp
or
cmp
loope
icebp
lcall
pop
cmp
ret
ja
pop
mov
pusha
xchg
ljmp
jne
jmp
bnd
push
jb
push
jnp
pop
add
cwtl
pop
dec
ljmp
cwtl
dec
lret
lods
pop
filds
xchg
push
xchg
in
fistpll
call
pop
push
cmpsb
out
xchg
and
jne
xchg
popf
xchg
jnp
cmp
aaa
dec
stos
insl
dec
mul
mov
popf
sbb
sbb
dec
mov
or
xor
out
mov
add
mov
sub
dec
xor
pop
adc
test
movsl
cmc
add
leave
out
lods
mov
cmp
mov
mov
insl
cld
scas
repnz
xchg
repz
out
jp
mov
gs
jge
ret
std
jge
cmc
cmp
xor
dec
xor
mov
repnz
push
cmp
adc
cltd
fdivp
lock
jae
test
lret
push
divl
xchg
sbb
rcrb
movsb
xor
jae
xchg
add
push
rcrb
mov
add
mov
daa
adc
cli
jle
sbb
pop
jno
sub
test
lahf
je
sub
mov
add
pop
xchg
or
push
shll
add
aad
outsb
and
test
scas
or
clc
jno
hlt
nop
pop
pop
into
pop
es
in
loopne
les
and
mov
pop
add
jp
divl
cmp
clc
pop
mov
cli
adc
xor
ret
mov
cmp
mov
mov
xchg
cmc
cwtl
cmp
movsb
sbb
cmp
lds
outsl
out
pop
adc
pop
cmp
fwait
mov
mov
out
cmp
mov
push
push
cmp
cmp
cltd
jbe
out
std
pop
dec
movsb
shll
pop
and
sub
pop
iret
jae
sbbl
nop
arpl
repz
jle
mov
ret
popf
in
mov
stc
pop
push
cmp
adc
mov
sub
dec
divb
daa
jg
nop
mov
out
fcoml
test
add
pop
jae
psubsb
mov
sbb
jle
ret
mov
or
into
jmp
movsb
add
stc
push
xchg
add
jnp
out
std
seta
pop
push
cmp
cmp
nop
or
cld
out
gs
je
fs
push
push
lahf
mov
or
mov
inc
jl
xchg
cwtl
pop
dec
cmp
imul
xchg
iret
or
push
sbbb
dec
test
pop
mov
pop
adc
int
nop
jle
ret
push
in
mov
jl
xchg
movsl
push
fs
addr16
dec
adc
adc
les
decb
mov
cwtl
imul
lahf
jmp
push
fnstenv
push
frstor
movsl
mov
mov
xchg
std
pop
ljmp
in
popa
scas
out
cmpsl
jns
adc
fs
sbb
add
aad
mov
stos
push
mov
outsb
test
je
cli
sbb
fcomps
add
xchg
fnstcw
push
mov
sub
xchg
add
mov
or
imul
jno
push
jl
push
mov
into
mov
lock
dec
mov
shrb
cmp
sbb
pop
xchg
mov
xchg
pop
mov
adc
mov
add
xchg
push
stc
mov
loopne
pop
cld
push
aam
sub
dec
add
ljmp
popa
push
stc
push
orb
std
lds
inc
test
jnp
sub
mov
xchg
stos
in
adc
and
mov
int
test
adc
in
js
sbb
sbb
cmc
jbe
out
fnstcw
ss
or
pop
xor
dec
adc
in
call
aas
xchg
aas
and
adc
and
aam
sub
jp
lcall
jb
pop
inc
js
dec
pop
dec
out
dec
adc
push
fnstsw
std
push
imul
sub
cli
cmp
add
jo
rcrl
mov
jge
popa
sbb
sbb
outsb
cmp
scas
mov
aam
lret
jl
or
sbb
pop
lahf
dec
dec
add
lea
jp
add
hlt
mov
fdivs
test
cmp
push
call
jae
fnsave
pop
mov
mov
lahf
sbb
daa
loope
pop
imul
rorl
lods
dec
jo
ljmp
out
xchg
pop
test
ljmp
pop
push
mov
add
jb
cmc
dec
insl
dec
mov
aas
lret
or
jnp
push
jg
sahf
cwtl
sbb
iret
and
dec
mov
jmp
or
cltd
paddsb
fs
and
xor
stos
xchg
cmpb
xchg
mov
pop
mov
sbb
mov
sbb
test
out
sti
popa
xor
push
xchg
cltd
sub
add
inc
popa
pop
lea
pop
and
mov
lret
data16
ret
int
pushf
adc
mov
loopne
jl
cmc
jo
or
mov
push
push
lcall
mov
xchg
in
cs
pop
loop
push
sbb
mov
jbe
or
or
in
lcall
fnstsw
call
mov
in
mov
mov
jne
sbb
mov
mov
sbb
rorb
cli
sub
pop
sub
mov
sub
test
push
cmpsl
dec
mov
and
xchg
outsl
mov
xor
in
sbb
mov
mov
add
std
fsubrs
dec
test
push
jg
mov
xchg
fbstp
xor
out
jmp
cmpsl
mov
and
dec
insb
dec
sbb
cmp
int3
int3
add
pop
daa
outsl
and
clc
xor
mov
inc
mov
adc
out
jb
mov
in
pop
jno
jne
mov
dec
cmp
cltd
and
fisubrl
pop
xchg
nop
addr16
mov
notl
cmp
insb
insb
mov
push
xor
xchg
icebp
cli
mov
cmp
xchg
shlb
mov
pop
pop
sub
in
mov
pop
repnz
jge
sub
decl
sbb
or
mov
sub
fmuls
sarl
cmp
addb
fisubrs
sti
shl
jno
cwtl
dec
icebp
scas
jp
sbbb
in
iret
lcall
add
push
aam
lock
mov
stos
test
and
sarl
lds
loopne
aaa
cld
dec
mov
xor
outsb
outsb
xchg
insl
call
aas
mov
inc
cld
mov
in
decl
jl
out
inc
in
adc
ja
inc
gs
cltd
aas
pop
popf
in
dec
pop
cmpsl
sahf
out
pop
cwtl
mov
xchg
test
xlat
push
jle
int
sbbb
cmp
mov
pop
ljmp
jbe
cmp
and
shrb
or
unpcklps
std
mov
pusha
jg
sbb
jnp
test
jb
lods
into
and
hlt
pop
pusha
cmp
andl
lahf
mov
xor
stos
cmp
mov
into
xchg
test
sub
fadd
cli
jae
fists
push
mov
xchg
pop
hlt
or
pop
out
push
xchg
stos
jmp
dec
mov
out
adc
lds
dec
jne
xchg
jo
xchg
lds
aaa
lret
movsl
add
sahf
mov
sub
dec
mov
sub
xor
les
and
mov
mov
stos
lds
cltd
xchg
jmp
jl
not
mov
mov
mov
push
xchg
sbb
lods
fstp
sub
adc
sbb
ja
push
stc
push
or
repnz
clc
jae
xor
jl
imul
mov
in
xchg
inc
push
cmp
jbe
inc
push
xor
popa
repz
cld
jbe
mov
call
loope
int
xchg
ljmp
cwtl
lret
aas
add
sbb
insb
push
jmp
in
jne
mov
addr16
xor
out
mov
into
loop
gs
mov
dec
adcb
xlat
popf
loopne
mov
mov
adc
cwtl
mov
mov
lods
jbe
xor
js
mov
std
mov
lds
inc
call
adc
fisttpll
add
in
push
sbb
mov
push
paddusw
outsl
xor
addb
inc
movsl
pushf
sbb
scas
xor
cmpsl
pop
cli
ret
scas
mov
mov
add
cli
adc
cmpsb
push
mov
xchg
shrb
mov
mov
ret
fcoml
and
scas
jg
sbb
lods
hlt
xchg
cmp
mov
dec
lret
dec
dec
stc
repnz
sub
jp
sbb
push
and
mov
inc
xor
sub
scas
fcoml
xor
mov
xchg
xchg
in
or
imul
sub
mov
ljmp
jb
data16
out
mov
sbb
jbe
lret
lds
lret
cli
and
insb
in
fsubrp
or
fwait
adc
loopne
xchg
add
inc
scas
pop
notb
xchg
jno
clc
inc
stos
and
xlat
adc
ss
dec
mov
repnz
dec
andnps
lret
inc
inc
push
lahf
adcl
ljmp
xor
aad
ja
andb
jle
cmc
adcl
mov
inc
or
pusha
pop
ret
pop
add
lock
ss
push
mov
hlt
decb
inc
sahf
cmp
dec
aam
mov
fwait
sub
nop
ret
out
xor
push
inc
or
mov
test
notl
xchg
daa
movsl
aam
or
lods
xor
or
inc
push
into
sbb
ret
test
and
popa
and
jp
imul
inc
imul
leave
sub
sbbb
or
xor
out
dec
lds
test
enter
and
jb
pop
out
in
test
mov
scas
popa
pop
cmp
sub
sbb
xchg
dec
repz
xchg
fistps
add
mov
loopne
jo
andl
ss
mov
xor
pop
lds
or
cmp
int
mov
mov
pusha
roll
pop
add
xchg
aaa
and
aad
adc
pop
fwait
insb
enter
xchg
pop
add
cmc
and
enter
lock
mov
jg
ljmp
mov
es
ja
dec
dec
inc
or
adc
pop
nop
adc
shl
inc
nop
xor
dec
push
out
dec
or
add
or
in
rol
jmp
mov
ljmp
sub
jle
xchg
jl
or
or
je
incl
cld
inc
inc
or
and
imul
xlat
mov
movsl
xor
sbb
cmp
xchg
xchg
sbb
ljmp
addr16
cli
and
xchg
add
pusha
ficomps
loop
pop
scas
mov
push
xchg
jo
andb
insl
or
xor
mov
sbb
pop
lea
stos
mov
cs
push
sbbb
pop
or
sub
inc
add
push
push
insb
sarb
lahf
lcall
cld
push
inc
add
scas
push
scas
cld
adc
adc
jg
cmp
fisubrs
icebp
xor
pop
int
in
inc
sbb
inc
jg
inc
dec
rcrl
jnp
fsubr
lods
leave
xor
mov
ret
into
sub
aas
pop
addr16
pushf
push
movsb
clc
mov
pop
mov
outsb
mov
xor
xchg
pop
jecxz
cmp
dec
fisubrl
cld
mov
xchg
shrl
push
mov
lcall
ja
cmp
cmp
shlb
sbb
xor
mov
add
imul
cmp
jo
jno
lret
and
push
mov
cmpsl
sub
repnz
cmp
addr16
inc
mov
stos
imul
fbld
mov
cmp
sbb
inc
call
fdivs
cmpsl
and
rclb
iret
cmp
inc
mov
add
and
arpl
xor
pop
add
or
daa
sub
xchg
sub
pop
pop
xchg
jne
mov
fucomip
cld
and
loope
pop
cmpsl
sbb
enter
push
dec
inc
scas
lock
shll
addr16
roll
shlb
add
lods
lahf
test
mov
fsubl
jnp
out
lods
mov
mov
or
lret
lods
xor
pop
add
test
outsl
jle
ljmp
jp
sbb
pop
xchg
aaa
aad
les
je
pop
cmpsb
sub
xchg
add
out
imul
push
cmp
invd
insb
inc
mulb
adcb
fadd
push
push
movb
pusha
mov
aaa
jecxz
mov
push
das
cmpl
push
push
cmp
das
out
scas
test
adc
and
data16
xlat
xor
fisubrs
mov
lods
push
cli
cli
push
push
mov
jnp
sub
sub
insl
inc
xchg
mov
inc
pop
mov
jnp
adc
out
push
or
xchg
repz
sub
push
mov
sub
mov
and
pop
pushf
fmull
repnz
scas
pop
add
mov
mov
rorb
push
push
and
mov
push
dec
jb
mov
test
mov
jne
mov
push
lea
das
dec
dec
movsb
and
push
aaa
ljmp
and
pusha
loopne
xor
pop
xor
sarl
dec
ja
pushf
in
dec
test
xor
push
cmp
xor
dec
out
xchg
sbb
push
xor
pop
insl
lds
cmp
add
pop
cwtl
mov
insl
mov
into
xchg
into
jnp
rcll
pop
notb
repnz
and
arpl
cmp
pusha
nop
fisttpl
cmp
fwait
cmp
aaa
dec
pop
mov
push
add
add
outsl
mov
lock
pop
jb
sub
fldl
cli
or
cmp
aad
std
outsb
pop
repz
fists
xor
pop
outsb
fmulp
scas
mov
jnp
xchg
lret
scas
fdivrs
xchg
xor
push
sbb
mov
jo
fiaddl
lcall
mov
xor
les
jecxz
mov
jg
push
popf
mov
pmullw
bound
dec
pop
test
enter
and
xchg
in
mov
outsb
aas
push
idivb
mov
rcrb
mov
pusha
jno
es
inc
out
lods
xchg
mov
pop
add
in
stc
in
lahf
aad
fisttps
loop
sahf
pop
push
fucomip
inc
daa
xchg
and
push
xlat
xor
test
ds
ds
dec
test
bound
pop
add
rorb
push
sbbb
imul
movsb
pop
aam
sub
mov
pushf
push
rolb
shll
pop
or
cmp
inc
or
pushf
aaa
inc
mov
mov
cmp
inc
and
xor
add
mov
ja
outsl
mov
outsb
aam
mov
inc
mov
jae
inc
insl
test
cmpb
aad
xor
push
inc
push
sbb
mov
in
mov
mov
sbb
dec
xor
pop
push
roll
inc
sbb
mov
pop
inc
mov
push
fimuls
push
fistps
and
clc
insb
sbb
mov
in
adcb
push
fistl
ret
insb
jae
mov
mov
loopne
aad
jle
out
mov
loopne
ljmp
mov
aaa
loopne
js
sahf
lcall
fimuls
mov
push
ret
les
test
mov
mov
mov
xchg
mov
mov
daa
push
push
outsl
popf
imul
sub
adc
sub
sbb
mov
inc
cmp
xor
or
xor
and
pop
pop
orl
pminub
in
lods
daa
mov
or
jmp
adc
jnp
bound
ja
lret
or
add
outsl
jg
andl
xor
inc
sti
enter
mov
rorl
in
adc
add
mov
inc
adcb
imul
push
pop
cmp
lds
loop
into
sbb
mov
lock
push
push
push
jbe
leave
cmp
sub
mov
adc
clc
xchg
push
js
push
std
or
lock
xchg
mull
mov
jno
cmc
cmp
imul
add
call
fmul
xchg
cld
jl
jge
arpl
loope
jg
es
pop
sbb
mov
mov
enter
cmp
das
fwait
push
sti
or
rorb
movsb
add
addr16
inc
popf
push
stos
or
lods
sti
rolb
or
and
ret
cmp
dec
xor
mov
iret
add
xor
cmp
leave
out
loope
pop
mov
iret
mov
inc
push
loopne
mov
add
hlt
and
insb
scas
cli
mov
sub
mov
mov
ljmp
cmpsb
jecxz
sub
ljmp
loop
or
mov
sar
rcr
ds
popl
xchg
mov
adc
arpl
and
popa
mov
ss
mov
aad
push
jecxz
inc
int3
jp
test
xchg
es
cwtl
lret
adc
fildll
adc
es
popf
xchg
pop
jb
lock
jno
or
adc
mov
jg
inc
add
jbe
outsl
sbb
scas
sarb
adc
scas
and
loop
pop
add
sbb
jge
cld
addr16
mov
lahf
fadds
fsts
xorb
out
mov
cmpsl
addl
sub
cli
negl
aam
sub
pop
jnp
or
in
xchg
mov
test
jns
lret
shlb
push
in
stc
inc
adc
fcomps
hlt
les
shlb
push
xchg
push
leave
adc
mov
xlat
movsb
push
inc
inc
inc
in
cmp
push
inc
add
xlat
push
scas
notl
imul
movsl
xchg
xor
mov
adc
popl
push
adc
fldenv
push
jecxz
sarb
mov
aas
push
pxor
mov
test
addr16
fldl
js
rcll
cmp
xchg
xchg
push
cli
daa
movsl
sahf
out
jmp
dec
push
pop
mov
cs
imul
cmp
mov
scas
rcrl
and
pop
mov
jbe
push
sub
int3
test
dec
sub
popa
mov
std
in
imulb
sub
imul
cli
and
lret
mov
mov
jl,pn
fsubl
mov
jns
jmp
pop
loopne
push
loopne
pop
popf
mov
enter
jns
xchg
js
pushf
lret
leave
cwtl
fisttpl
add
mov
cmp
xchg
ror
into
mov
outsb
and
imul
adc
out
lods
pop
cltd
mov
imul
push
jns
cmc
lahf
adc
jno
sub
push
ficoms
ret
in
sbbl
fbld
mov
adc
scas
shrb
pop
sbb
aas
mov
ss
addl
jnp
or
inc
adc
data16
ret
or
test
outsl
mov
push
add
icebp
sbb
inc
scas
adc
inc
mov
test
push
leave
mov
cmpsl
fldt
adc
mov
xchg
add
les
sub
dec
push
daa
xlat
aam
popf
dec
inc
push
sub
xor
cmp
mov
fcomp
jecxz
shll
iret
pop
enter
es
and
jns
cmc
xor
jg
outsb
imul
loope
or
xchg
stc
jb
aad
xchg
jne
pop
xor
mov
mov
lock
sarb
add
adc
cmc
and
mov
and
mov
cwtl
mov
mov
call
filds
or
imul
icebp
mov
mov
jecxz
leave
and
and
pop
cli
and
pop
ds
out
dec
fcompl
sbb
subl
inc
fxam
add
and
hlt
xor
mov
negb
addr16
lcall
xchg
ret
dec
push
mov
mov
jns
jp
in
addb
pop
add
mov
adc
mov
loopne
fs
pop
adc
les
scas
xchg
popa
push
popa
sub
call
jo
sub
mov
rcl
mov
test
mov
mov
arpl
idivb
ljmp
into
xlat
leave
call
cwtl
test
loope
test
adc
xchg
cmp
loope
inc
add
sub
inc
pop
jg
sbb
xor
xor
lcall
and
daa
stc
int3
cwtl
cmp
out
jnp
decl
leave
and
lcall
loope
std
inc
xlat
ret
call
jecxz
ret
xor
xor
mov
xchg
inc
cmpsl
shll
or
daa
pop
mov
in
insl
ja
call
push
mov
movsb
sarl
pop
data16
add
xorl
adc
xor
jb
pop
iret
sub
scas
shlb
xchg
cmovl
cmp
xchg
jmp
insb
mov
int3
in
push
or
test
into
cmp
pop
sub
jmp
orb
sbb
lcall
pop
call
lock
lcall
popf
gs
into
adc
or
testl
movsl
adc
call
cmc
lret
mov
lods
mov
movsb
sbb
sbb
push
mov
add
insb
cmp
ss
add
dec
or
out
jns
std
and
lock
fcmovb
dec
push
insl
or
loopne
mov
fiaddl
inc
xchg
clc
cmp
mov
sub
cltd
jmp
pop
adc
push
daa
lahf
push
pop
cld
and
push
imul
add
stos
in
cmp
loopne
sbbl
dec
scas
mov
ret
call
fists
rcll
mov
lods
push
mov
mov
adc
jge
sbb
adc
inc
lret
lahf
fistpl
push
sha256msg1
test
pushf
fwait
pusha
cmpsl
inc
pop
push
arpl
aam
jb
cwtl
pushf
pop
fildll
mov
mov
or
icebp
mov
into
repz
out
push
or
or
push
jne
notb
cmc
es
dec
xchg
fisubrl
shl
xor
xlat
lods
lahf
sub
or
imulb
mov
or
cmc
in
into
cmp
push
push
mov
repz
gs
inc
cmp
sbb
test
in
mov
pop
lods
push
inc
inc
hlt
push
out
nop
rcll
lea
add
movsl
mov
add
insb
mov
cmp
mov
stos
aam
sub
mov
cmpsl
sub
scas
and
int3
je
mov
and
lds
and
das
and
and
popf
inc
and
sub
push
inc
iret
jecxz
pushf
fdivp
mov
cmpsb
sub
xchg
fisubrs
hlt
jo
xlat
sbbb
dec
push
pop
and
in
mov
lea
out
ds
subb
out
jo
jecxz
lods
sbb
fiadds
mov
sbb
aam
xchg
pushf
pop
jmp
jge
xchg
call
mov
xor
jo
fisttpll
inc
andb
imul
daa
add
mov
sub
gs
lret
push
cli
fsubs
jg
mov
fisubrs
pop
mov
pushf
pop
mov
rcr
xor
shrb
repz
pop
adc
insb
push
lea
add
jae
ret
pop
cmpsl
addr16
mov
movsl
inc
and
push
addr16
lods
imul
push
ror
xchg
imul
aad
jo
sub
rcrb
daa
jno
pop
adc
cmpsl
sub
mov
scas
or
dec
aad
pop
shll
pop
jp
inc
fnsave
sbb
out
xchg
jnp
push
lret
push
fnstenv
ss
shrd
adcl
idivb
xor
outsb
clc
inc
inc
adc
outsl
mov
js
add
mov
pop
and
mov
adc
mov
add
pop
out
add
cli
push
cli
ds
aas
lock
sub
fnclex
cmpsb
popl
ficompl
fldenv
jbe
sbb
les
xchg
icebp
add
outsl
pop
das
jno
adc
add
cmc
mov
hlt
pop
dec
inc
mov
int
lea
lods
int3
adc
pusha
push
outsb
mov
push
jbe
push
push
sti
sub
daa
push
inc
imull
inc
add
out
and
data16
in
push
adc
ljmp
inc
movsb
inc
jmp
std
imul
std
int
scas
pushl
mov
or
jge
fcoms
ljmp
pop
int
std
cmp
dec
jo
sbb
test
cwtl
and
lods
sub
push
fsincos
vzeroall
cmpsl
xchg
add
adc
data16
repz
push
xchg
rclb
test
ljmp
hlt
push
dec
xchg
pop
ret
sub
sbb
pop
jle
test
jae
test
lahf
xor
push
addr16
cmpsb
cmpsb
or
dec
gs
mov
mov
inc
add
movsl
out
cld
or
shlb
cs
xorl
pop
xor
mov
jb
dec
pop
push
lea
sub
mov
add
out
mov
fstps
gs
pop
mov
fbld
fs
sbb
ret
sbb
jg
inc
je
xor
cli
shrl
addr16
mov
mov
cmp
lahf
insl
sbbb
stos
fcoml
sti
pop
cmpsb
fstl
sub
daa
outsb
pop
cmp
sub
sbb
ja
mov
lret
xchg
pop
int
rcll
push
out
outsl
add
addr16
cmpsb
outsl
syscall
and
popf
lret
dec
add
pop
daa
pusha
mov
call
push
adc
sbb
sub
lods
push
clc
imul
mov
test
push
mov
inc
pushf
pop
in
fisttpll
push
insb
mov
fcomi
psubq
sbb
pop
test
sbb
das
cwtl
lock
and
daa
inc
push
xchg
cli
sbb
sbb
int
dec
sbb
xor
cmpunordps
pop
add
aas
or
fisubl
mov
loopne
cmpsl
push
cltd
cld
ljmp
sarb
adc
shll
xlat
adc
xchg
cmp
cmp
jmp
jg
test
mov
rclb
push
xor
out
adc
lods
hlt
pusha
nop
xchg
and
inc
mov
jbe
dec
testl
dec
into
daa
pop
std
loop
mov
in
cmp
loope
cmpsl
imul
pop
jle
xchg
test
ficoms
inc
in
int
or
sub
pop
adc
or
rorl
ret
shll
insl
shr
lods
jg
inc
jge
jl
jp
repz
cmpsl
cmpsb
aas
dec
and
pop
adcb
inc
adc
sti
lods
jg
push
xor
sarb
sub
std
mov
mov
push
js
scas
mov
sub
cmpsl
mov
mov
imul
enter
hlt
or
repz
sub
jb
ss
mov
and
sub
sbb
or
jl
pop
lods
and
clc
test
jge
outsb
pop
inc
adc
push
mov
push
test
fisubs
push
jecxz,pn
cmc
stos
repz
push
out
out
out
fwait
pop
out
dec
cmp
sbb
push
cwtl
dec
sti
push
mov
xor
mov
aad
pop
pop
push
sub
inc
push
mov
in
mov
cmpl
pop
inc
mov
mov
je
xchg
adc
imul
fs
cmp
gs
and
leave
cmpsl
cmp
push
pop
xchg
cmpsl
cmp
pop
add
std
mov
sub
into
sub
dec
mov
stc
and
jno
jo
xchg
aas
fistpl
loop
dec
xorl
clc
repz
lcall
inc
sbb
cmc
sbb
adc
repz
mov
jne
lcall
sbb
sti
adc
in
lods
push
jo
pop
or
add
sub
cwtl
bound
ds
insl
add
inc
adc
iret
pop
shrb
lret
mov
mov
or
rol
loop
sbbb
outsl
nop
outsl
imul
pop
xor
int3
xchg
xchg
mov
leave
sahf
cli
cmp
je
push
or
jecxz
push
or
rcll
sar
mov
xchg
daa
and
dec
in
jne
sub
or
mov
or
xchg
push
xlat
sub
loopne
into
popa
inc
addr16
aam
stos
bound
fisubs
int
ljmp
xor
stc
push
inc
mov
les
push
cmpl
push
push
addb
add
jae,pt
jmp
cmc
icebp
add
das
mov
add
mov
enter
mov
std
shl
or
cli
mov
mov
or
cmpsl
inc
dec
in
inc
jnp
jg
mov
jae
add
dec
mov
pop
call
sub
lahf
cmp
mov
rcrl
mov
or
fldt
mov
dec
pop
ds
mov
fs
xchg
mov
push
dec
sbbb
imul
jns
fmuls
xorb
es
stos
push
loop
cmp
fneni(8087
cmpsl
mov
lret
jl
int3
std
adc
mov
xor
rol
adc
mov
popf
mov
xchg
ljmp
mov
nop
sbb
les
xchg
xchg
pop
inc
cmpsl
hlt
mov
cs
outsb
push
inc
pop
aaa
shrb
jmp
aaa
test
insl
hlt
out
test
aam
js
daa
adc
cmp
outsl
jmp
cs
cmp
jno
fildll
pusha
sarl
xor
dec
jecxz
ss
mov
addr16
out
xchg
imul
pop
jl
xchg
cmp
mov
popl
je
xchg
aad
push
push
or
stc
xchg
repnz
in
adc
in
stc
sub
dec
scas
push
push
sub
ret
cs
inc
cmc
in
movsb
call
push
jbe
xchg
stos
cld
imul
mov
adc
mov
sub
int
daa
test
pushf
pop
pop
mov
pop
push
mov
mov
sub
mov
int3
cmp
jbe
or
andb
loopne
and
pushf
loop
jb
xchg
loopne
xchg
push
add
or
xor
arpl
fdivs
js
bound
movsl
fbld
xchg
ja
xchg
jne
mov
mov
pushf
pusha
repnz
pop
fisubrl
repnz
mov
inc
out
out
ja
fcomps
mov
pop
out
or
in
mov
pushf
and
cmc
arpl
dec
cmpl
jmp
push
mulb
int
xor
cld
and
mov
mov
sub
mov
inc
or
insl
sbb
jne
pop
and
popf
arpl
dec
ss
mov
push
out
das
mov
mov
jne
cmp
ljmp
xor
data16
or
push
lahf
push
lcall
pop
sbb
xor
and
push
dec
cmp
sub
xchg
or
pushl
push
in
imul
or
lods
push
push
rcrl
fadd
jmp
repnz
in
cld
hlt
testl
les
nop
cli
sub
fwait
pop
mov
cmc
mov
inc
ja
in
in
fisttps
fimuls
loopne
inc
ja
ret
aam
cmp
inc
insb
lret
sub
inc
mov
fistpll
sub
ror
insb
into
xor
pop
xor
xlat
sbbb
aaa
xchg
movb
add
sub
or
cmp
sbb
daa
repnz
loop
mov
mov
popa
push
decb
inc
mov
jne
loop
out
lods
sbbl
inc
loopne
in
mov
out
pop
or
sbb
sbb
cmp
hlt
leave
add
in
and
dec
push
movsl
hlt
loop
loopne
daa
jp
add
mov
sub
lock
fstpt
test
imul
mov
xor
mov
or
adc
and
in
ds
pop
in
mov
adc
mov
daa
addl
jp
inc
imul
data16
mov
test
push
xor
divl
test
push
iret
jecxz
mov
repz
faddl
hlt
cmp
push
sbb
fsubrl
jg
sbb
mov
insb
add
fstpt
stc
movsb
lock
lods
popl
adc
jecxz
push
gs
push
mov
pop
mov
jp
xor
fwait
sub
xor
aam
shll
push
in
icebp
pop
and
mov
inc
js
not
inc
imul
dec
ret
xor
bound
dec
cmp
nop
and
pop
push
filds
mov
pusha
jmp
cmp
addr16
dec
jns
dec
les
mov
inc
mov
pop
mov
push
js
inc
or
fmull
xchg
pshufw
sti
push
in
pop
lock
popa
mov
cwtl
sub
mov
sbb
std
or
sbb
jg
push
pop
xchg
and
and
and
leave
and
sub
pop
sbb
imul
pop
lcall
fdivrs
xchg
mov
imul
adc
out
imul
and
adc
lods
sub
and
inc
ds
mov
pop
jb
rcrb
std
xchg
fnstenv
out
popa
into
pop
pushf
lea
sub
push
or
mov
ret
adc
ss
lods
inc
mov
repz
jbe
dec
jmp
xchg
jns
lcall
push
inc
mov
mov
inc
push
mov
bound
xchg
mov
inc
jo
arpl
int3
mov
mov
pop
xor
faddl
sbb
and
dec
jae
rcll
hlt
pop
ljmp
xor
mov
test
mov
icebp
mov
aaa
cmp
data16
rcl
imul
insb
mov
xchg
gs
cmp
add
outsl
push
adc
cmp
inc
outsb
repz
add
pop
push
sbb
or
enter
lock
add
insl
arpl
xor
push
int
sub
imul
lods
nop
push
aaa
sti
sbb
daa
dec
cli
push
popa
or
mov
inc
pop
xchg
and
and
and
leave
in
mov
add
movsl
ja
adc
push
sahf
sarl
dec
mov
sub
cwtl
cmp
add
lods
stc
and
pop
mov
test
out
pusha
dec
gs
ja
test
mov
jge
jo
out
mov
cltd
mov
sbb
flds
jp
jo
mov
mov
push
mov
add
lcall
fisubrl
out
aam
dec
push
cmp
test
sti
inc
cmpsl
hlt
mov
or
sbb
js
lcall
ljmp
ds
mov
pop
dec
sub
ret
or
clc
add
roll
push
add
mov
mov
gs
ja
rorb
lret
ret
add
pop
aaa
mov
jge
pop
jge
je
lods
cltd
add
movsl
call
mull
add
lock
sbb
cmp
fmulp
jg
in
inc
lods
dec
icebp
call
jo
lds
sbb
insl
adc
clc
push
adc
and
outsb
and
ljmp
inc
or
cwtl
adc
push
xchg
mov
call
mov
adc
insb
rolb
fcomi
add
lahf
repnz
ljmp
push
mov
push
or
pop
scas
sbbb
xchg
rclb
push
les
sbb
pop
out
sbb
outsl
push
inc
cmp
jbe
mov
fwait
test
cltd
lret
popa
push
add
mov
in
sbb
je
mov
cmpsb
or
xchg
outsl
popa
sbb
rol
call
imul
ret
insb
adc
data16
int
arpl
popf
addr16
call
ja
xchg
movsb
stc
mov
arpl
pop
mov
imul
xchg
sub
repz
add
pop
adc
push
dec
test
int
jb
cmc
fdiv
leave
sbb
mov
dec
enter
xchg
data16
mov
shll
data16
or
insl
jo
imul
int3
jns
sub
repz
jp,pn
jbe
and
ror
mov
add
sub
ljmp
das
jle
sti
cmc
cmpsb
fisubrl
imul
jb
insb
mov
inc
aam
mov
xchg
sahf
fisubl
lods
jl
xchg
sbb
cmp
call
test
jno
outsb
mov
das
aaa
lret
cmc
dec
xchg
sbb
inc
pop
shrb
ss
fsubs
fldenv
add
jmp
movsb
add
add
jle
shl
faddl
mov
dec
out
aam
cmpl
loope
movsb
and
or
dec
mov
aaa
lret
imul
sti
sub
inc
fisubrs
shrb
xchg
enter
mov
xlat
sub
pop
pop
mov
data16
sub
bound
xor
outsb
sahf
add
mov
repnz
mov
xor
sub
dec
imul
lret
add
fistl
mov
repz
pop
pop
faddl
mov
mov
lds
xor
enter
stc
aas
adc
mov
and
mov
lcall
jp
or
xchg
pushf
aad
add
ds
mov
mov
rorl
inc
xchg
cmpsb
cmp
mov
mov
and
or
outsl
sahf
cmp
mov
pusha
xchg
fnsave
and
daa
xchg
push
xor
lret
push
cmp
cld
dec
mov
sbb
nop
int3
ret
cmpsl
mov
xchg
test
adc
jne
push
addl
xor
test
fildl
or
pop
stos
xor
inc
sbb
or
push
rcr
mov
push
popf
ss
add
pop
inc
into
lds
out
or
mov
popf
je
inc
cmp
cli
outsl
add
jbe
addl
mov
mov
adc
cmc
cs
xor
ret
jno
icebp
inc
popa
loopne
daa
dec
out
pop
repz
roll
push
mov
mov
popf
inc
leave
out
enter
js
or
cld
lcall
pop
mov
jmp
fists
inc
repnz
out
jae
mov
in
clc
imul
mov
shrb
adc
cmp
pop
cmpsb
jno
aad
fwait
call
mov
pop
and
push
out
shll
inc
mov
cmc
push
pushf
and
jge
mov
call
pop
push
movl
add
inc
push
jno
pop
or
push
adc
and
and
lock
jae
dec
add
sbb
data16
mov
mov
les
mov
or
jnp
std
pushf
out
int3
sbb
or
call
and
stos
lods
cwtl
mov
dec
adcb
jge
bound
add
xchg
inc
out
and
jle
push
int3
adc
add
dec
cld
push
xlat
insb
lods
shll
nop
je
jge
mov
int
and
fwait
mov
mov
int3
push
cmp
dec
aad
hlt
cmpl
stos
xchg
outsl
dec
jns
mov
ds
shll
xchg
iret
mov
push
nop
cwtl
dec
add
fadds
loop
testl
adc
iret
int
pop
inc
sub
popf
sbb
arpl
xchg
fmuls
sub
sub
xchg
lahf
and
sti
xlat
enter
adc
sarb
in
cld
sti
mov
mov
orl
arpl
dec
and
cmc
xchg
xchg
pop
and
push
sub
sbb
std
adc
cmpsb
sub
sbb
xlat
push
dec
pop
xchg
sbb
mov
call
gs
movsb
xor
repz
xor
add
add
dec
int
jb
dec
dec
jmp
insl
xchg
inc
inc
xchg
in
pop
sbb
subps
sbb
mov
fmull
mov
sbb
xorl
in
ja
add
cmp
mov
test
outsb
sbbb
les
mov
push
push
mov
mov
sub
push
mul
std
cmp
sarb
push
or
fcoml
mov
pop
aad
fsubrs
sub
int3
and
push
into
lea
dec
aaa
xchg
push
lea
push
mov
cmp
xchg
jo
cmp
int
mov
pop
xor
arpl
pusha
je
mov
xor
es
xchg
jg
xlat
xchg
adc
and
movsl
xor
jo
clc
lcall
or
sbb
fimuls
inc
cs
decb
mov
outsb
pop
xor
or
pop
out
shll
aas
sub
xor
mov
add
ret
int
add
sbb
push
lods
cmp
lahf
cmp
jne
test
adc
daa
std
sbb
dec
es
jb
fdivl
mov
xor
gs
test
mov
mov
mov
push
or
xchg
xor
dec
xchg
repnz
cmp
int3
pop
jbe
xor
inc
daa
cmpsb
ljmp
fnstsw
addr16
adc
xchg
enter
dec
mov
outsb
mov
fwait
xchg
xlat
pop
shlb
mov
mov
sbb
jo
cs
cmp
sbb
lret
fldt
lret
aas
outsb
adc
sbbb
xchg
pop
fyl2x
dec
push
push
pushl
cmp
jge
outsb
das
and
push
lods
push
and
in
outsb
and
dec
into
jae
and
cmp
adc
push
or
push
hlt
in
cmp
jns
cmp
dec
aam
test
xchg
neg
push
cmp
jmp
movsl
mov
xchg
sbb
out
call
test
fadds
add
pop
sarl
pop
rorb
mov
repz
enter
dec
loope
lret
lret
arpl
pop
or
jne
xor
test
movsl
out
in
loop
mov
rcl
cmc
xor
sub
jo
sub
into
cmc
add
in
or
rcl
jge
outsl
repnz
in
mov
test
jnp
dec
mov
adcb
xchg
pushf
mov
xlat
mov
xor
cmc
insl
pop
mov
leave
lret
stc
leave
int
jl
test
pushf
mov
ss
loop
push
popa
cltd
mov
data16
or
sub
sub
aas
inc
push
mov
push
mov
and
mov
jno
lds
lds
fildl
cmp
scas
cmp
clc
add
sbb
mov
rcll
testl
mov
mov
or
mov
pusha
lds
inc
push
mov
imul
adc
mov
cmp
adc
stos
test
push
dec
scas
jp
jbe
std
adc
lahf
ja
xchg
add
push
mov
mov
push
or
call
inc
cs
loop
pop
or
and
push
mov
loopne
mov
jns
sbb
stc
push
adc
mov
lahf
mov
and
inc
push
mov
stos
jns
int
cli
gs
cmp
pop
jecxz
ljmp
aad
mov
icebp
imul
and
iret
adc
pop
xor
cmp
mov
mov
lock
hlt
cltd
lods
lds
loop
jns
shrb
jno
repnz
dec
add
xchg
lcall
xchg
in
lahf
push
pop
jae
jp
mov
stos
dec
addl
cmp
jmp
dec
lret
imull
xchg
or
dec
gs
sub
sbb
xor
dec
mov
lds
mov
dec
mov
jg
call
into
or
clc
popa
iret
sbb
mov
lahf
jp
cmp
mov
lods
dec
test
mov
daa
and
int3
imul
jnp
and
das
mov
pop
add
lods
ret
cltd
or
adcb
popf
xor
adc
push
xchg
pop
aas
xchg
add
add
repz
and
les
ret
jbe
mov
and
and
push
das
mov
scas
sbb
call
add
push
push
add
shrb
jb
rorl
sub
outsl
mov
pop
in
lahf
in
imul
gs
decb
or
add
push
mov
clc
fsts
cmc
jecxz
xchg
mov
pop
imul
push
sub
mov
vmread
test
popl
mov
inc
es
xchg
sub
mov
cmpsl
shrl
jg
inc
ret
mov
mov
jmp
or
sbb
inc
insl
cmp
cmp
fwait
jne
in
loop
loope
add
iret
fwait
in
cmpsb
sub
movsb
pop
mov
xchg
pop
out
ds
mov
out
sub
jnp
iret
int
mov
dec
push
insl
in
clc
pop
mov
dec
stc
adc
push
jl
dec
push
xor
and
cld
push
das
or
jns
ljmp
shrl
js
mov
bound
inc
stc
and
out
adc
fldenv
or
mulb
dec
lahf
sub
popf
sbb
leave
push
lcall
fiadds
repz
mov
sbb
mov
jnp
fcmovbe
lods
mov
sub
dec
adc
imul
mov
xchg
jnp
lock
adc
in
fnsave
jb
subl
cwtl
setle
fs
inc
jae
jg
aad
icebp
dec
inc
movsl
popf
inc
mov
out
jmp
sbb
aaa
cli
dec
xchg
fs
fwait
or
jl
insb
and
pop
sub
into
clc
adc
adc
push
jmp
jle
jp
xor
pop
or
bnd
imul
xor
lret
and
out
mov
sbb
jl
and
lds
in
fstpt
pop
inc
push
add
adc
mov
popa
xor
pop
mov
sbb
popa
out
vmwrite
pop
clc
cmp
lea
adc
inc
inc
add
adc
jl
shrb
aas
xchg
aam
cli
inc
or
shll
test
fsubs
and
xchg
sbbb
hlt
ret
and
bound
push
insl
inc
jns
jns
jle
pop
leave
mov
mov
fcmovnu
lret
cld
addr16
pop
xlat
cmc
mov
and
icebp
dec
fbstp
jg
gs
or
sub
pop
ljmp
dec
les
test
jge
test
test
lea
add
adc
pushf
sub
mov
test
push
and
mov
cld
or
inc
fmull
cli
insl
xor
lcall
ljmp
adc
dec
sbb
xor
imul
cmp
rcrb
and
out
push
add
mov
xor
aaa
mov
cld
aad
xor
and
cmp
outsb
shl
aas
push
popf
xchg
andl
xor
stc
mov
lret
mov
testb
test
hlt
jl
jl
js
xchg
outsb
xor
ret
filds
test
shlb
cmc
repz
and
test
loop
xchg
mov
out
test
pop
orl
add
imul
out
rdtsc
aaa
push
divb
push
fistpll
mov
sarb
sub
mov
scas
out
pop
adc
pusha
inc
faddl
jns
adc
push
cmp
push
pushf
das
add
xchg
add
ja
decl
mov
pop
test
jbe
mov
movsl
push
pop
pushf
add
and
and
inc
sub
mov
loope
in
jns
jb
pop
push
in
popa
shlb
std
jns
jecxz
test
sub
push
icebp
pop
sub
lcall
lahf
arpl
or
fisttps
shrl
sub
ror
fs
sbb
xchg
sar
sbb
dec
sub
jge
int3
mov
and
cmpsl
push
dec
out
xor
out
pop
inc
shl
fmulp
mov
clc
test
popa
dec
mov
cwtl
pop
rcrl
and
push
jno
mov
dec
xorb
pop
jns
in
xchg
add
out
popf
sub
in
dec
cmp
data16
and
repnz
cltd
cs
bts
js
mov
fwait
into
pop
aam
pop
fs
dec
les
cmp
js
sahf
adc
pushf
fiadds
imulb
test
outsb
dec
jg
cmp
imul
push
push
add
inc
pusha
mov
ss
lods
dec
jb
loopne
rcll
rclb
pand
cs
js
outsb
test
mov
cmp
inc
insl
or
into
cli
pop
sbb
sub
or
test
cld
xor
outsl
xchg
cli
jg
inc
test
shll
int
jg
divb
jbe
adc
lahf
decb
dec
loop
fyl2xp1
fwait
and
jb
ret
maxps
push
je
jns
jb
jne
movsl
loope
xchg
xor
jo
popf
push
andb
hlt
and
loop
mov
mov
addr16
mov
sbb
add
imul
sbb
movsl
das
sbb
aaa
or
or
stos
movsl
adc
mov
enter
es
movsl
call
loopne
in
lcall
jge
jb
sarb
cltd
jmp
repz
dec
mov
mov
nop
xchg
or
movsb
loopne
popa
stos
out
cltd
adc
out
cmpsb
test
call
jmp
bound
push
cmpsl
shrl
dec
aad
dec
mov
jns
cmp
inc
roll
in
mov
aaa
pop
repnz
jp
mov
loope
or
fwait
popl
adc
or
out
mov
pop
aaa
jae
add
sub
ror
pushf
repz
das
pop
mov
inc
cmpsl
test
xchg
sbb
inc
xchg
cmp
push
inc
ja
stos
jb
imul
aad
test
rorb
lret
lds
jl
and
imul
add
inc
call
add
pusha
sub
jo
pop
fstl
mov
inc
push
pop
inc
cmp
insb
dec
loopne
mov
cltd
js
repnz
mov
and
imul
dec
in
or
stos
pop
adc
ss
push
push
cmpsl
xchg
je
lods
mov
ds
push
in
jbe
out
sub
xor
xor
mov
lcall
fidivrl
out
aaa
dec
dec
jnp
in
int3
xchg
inc
pop
inc
sti
shrl
mov
jmp
addr16
sbb
mov
push
shl
es
addl
stos
call
dec
xchg
mov
jl,pn
inc
andl
inc
test
rcrl
xchg
rcll
cli
push
inc
test
push
mov
add
mov
push
xchg
pop
scas
cmp
ja
shrl
in
stos
fldl
negb
lcall
push
mov
insl
inc
scas
roll
lret
dec
add
pop
and
ret
push
lcall
shl
fwait
mov
loopne
inc
cmp
mov
xor
mov
cmc
mov
ret
cli
je
inc
push
mov
adc
test
cmp
and
dec
fmuls
mov
aam
aas
lds
cmp
mov
sahf
aas
xchg
mov
rol
loop
dec
faddl
repz
test
cwtl
push
cmpsb
cmp
jl
pop
push
inc
mov
pop
xchg
xchg
movsl
and
stos
out
mov
push
jns
outsb
cmpsl
and
dec
out
gs
out
pushf
call
cltd
add
dec
ret
es
outsl
lahf
jns
shlb
mov
lahf
mov
insb
movb
jnp
call
ja
or
aaa
mov
incb
cmp
xchg
jb
add
cmp
push
pop
mov
mov
jo
or
and
cmp
insl
jbe
lret
std
adc
ficoml
sbb
or
test
out
cs
pop
push
lret
ret
pusha
imul
and
cmp
movb
push
in
pop
roll
dec
repnz
dec
adc
mov
cltd
inc
fidivs
mov
pop
clc
xlat
scas
push
je
in
clc
pop
mov
insl
in
dec
inc
pop
ficoms
fistpl
xor
adc
pop
test
dec
and
cmpsb
test
cmp
push
push
ret
cmp
push
xchg
nop
decb
inc
cmp
or
lret
push
adc
push
mov
sub
insb
sti
je
inc
ret
imul
mov
or
mov
int3
dec
jmp
inc
cmp
and
adc
fidivrl
adc
mov
xchg
in
mov
adc
inc
loopne
loope
push
jo
jecxz
mov
mov
insl
and
mov
cmc
insb
jns
jns
xchg
xlat
shrl
xchg
loopne
push
leave
lahf
mov
pop
aam
test
idiv
fiadds
je
dec
push
xchg
fcompl
adc
push
adc
cmp
sbb
aaa
dec
dec
xchg
jle
das
data16
add
scas
out
add
dec
mov
cwtl
sahf
or
jno
mov
inc
sub
mov
pop
mov
jno
or
mov
push
testb
or
lea
mov
and
addr16
jns
fs
and
ss
shll
xchg
imul
and
test
sbb
ret
fbld
enter
ljmp
add
mov
popa
sti
jl
leave
shl
and
mov
inc
sti
xchg
ja
lods
mov
pop
jp
lahf
addr16
or
nop
or
lea
loop
sahf
cwtl
cmp
ret
sbb
loope
test
data16
push
mov
mov
scas
jecxz
lods
lret
je
pop
mov
addr16
jg
and
adc
pop
mov
mov
sub
push
in
adc
pop
xchg
push
stos
cmp
xor
int
jo
xchg
pop
push
adc
sbb
imul
sbb
xchg
mov
push
in
icebp
mov
adc
daa
jae
ja
test
pop
inc
popa
outsb
jo
xchg
ret
add
lds
jmp
dec
testl
andb
loope
xchg
ss
outsl
adc
nop
add
insb
mov
xor
jp
dec
dec
or
jl
jb
jne
pop
adc
sub
clc
jl
loop
leave
push
hlt
cmp
or
add
push
sub
jg
in
mov
jmp
pop
outsb
aam
cltd
cmp
outsl
repnz
shl
add
and
pop
pop
ss
fs
pop
aad
repnz
aam
mov
fcoms
mov
fdivl
fdivrp
sub
jle
push
movsl
fadd
cmp
mov
mov
les
lcall
into
push
fs
imul
push
lcall
je
packuswb
mov
loope
shlb
jno
inc
push
cmc
shll
stos
jno
mov
pop
fucomip
pop
rolb
or
ja
xor
xor
sbb
mov
adc
add
mov
outsl
sbb
neg
mov
cli
stos
test
iret
pop
cmp
das
push
xorb
daa
jnp
pop
or
std
push
pop
inc
inc
mov
adc
sbb
xor
sahf
xor
sbb
mov
addb
and
xlat
pop
sbb
fsubs
shl
je
xchg
lods
adc
subl
imulb
push
dec
int3
xchg
lea
repnz
stos
pop
cmp
clc
jl
arpl
out
or
jecxz
jbe
add
shll
and
mov
cmp
mov
jae
push
mov
hlt
cli
bsr
mov
insl
pop
lahf
pop
sub
dec
or
xorb
out
and
psubd
stos
xchg
cmc
sti
xor
clc
jmp
repnz
mov
int
add
subl
xor
mov
rorb
sub
adc
fs
push
in
aaa
pop
out
mov
movsb
push
xor
je
mov
roll
out
lret
mov
jnp
pop
incb
lcall
pop
mov
dec
cltd
pusha
lods
sti
scas
decl
data16
nop
cmpb
mov
icebp
jle
adc
push
lods
mov
loopne
inc
subl
xor
cwtl
jo
mov
pop
dec
mov
outsb
sbb
divl
iret
xlat
das
add
scas
mov
stos
repnz
xchg
add
push
mov
mov
call
rolb
sbb
push
ljmp
dec
jno
push
adc
and
push
cwtl
fdivs
loopne
imul
pusha
cs
jecxz
iret
mov
inc
cmpsl
add
jge
test
std
push
mov
and
mov
arpl
addl
add
xchg
lcall
fwait
lds
mov
std
adc
icebp
and
lahf
dec
in
roll
imul
push
in
dec
xor
xlat
pop
mov
and
mov
mov
or
sbb
inc
cmpsl
je
xor
pop
jecxz
and
adc
enter
xor
jbe
mov
dec
int
add
push
js
mov
or
rcrl
fld
cmp
push
pop
std
adc
sub
cs
andb
inc
add
mov
dec
or
clc
xor
fwait
aas
insl
jmp
mov
stc
cmp
pop
sub
sbb
arpl
sahf
jne
xchg
xor
xor
fmulp
cmc
mov
dec
mov
dec
ja
sarl
and
cmpl
into
dec
fistpll
adc
int
pop
data16
lock
mov
mov
sbb
rclb
sub
dec
sbb
dec
or
das
and
pusha
mov
jge
fs
jle
lods
pop
ljmp
test
dec
mov
aam
jne
inc
out
cmp
hlt
daa
aam
sub
enter
xchg
sahf
movl
pushf
clc
mov
mov
and
pushf
lods
loop
jmp
hlt
pop
and
addr16
or
popa
or
sub
sbb
or
inc
jge
movsb
adc
imul
sbb
jne
mov
adcl
je
mov
test
inc
cmp
sub
xlat
adc
fldcw
inc
adc
inc
mov
lret
loope
mov
scas
mov
daa
jne
outsb
mov
loopne
xor
pop
fldl
pushl
mov
add
out
es
dec
pop
aas
add
outsl
sub
int
call
test
iret
out
mov
lret
subb
popa
inc
push
mov
adc
mov
into
ret
shl
pop
rcr
stos
jns
sub
mov
pop
outsl
inc
mov
cmp
xor
cs
add
sbb
rol
fimuls
and
inc
push
pop
neg
mov
adc
sbb
xlat
mov
sub
cli
inc
in
popf
popf
iret
rcrl
je
push
push
push
lea
add
sub
push
adc
push
cmc
mov
out
adc
mov
sbb
mov
sbb
dec
mov
ljmp
int
lods
mov
jmp
stc
fwait
sub
lcall
push
rcrb
and
test
cwtl
orl
mov
mov
iret
push
js
add
shll
push
aam
dec
les
fisttpl
imul
sbb
lcall
popf
ds
xchg
icebp
add
or
sbb
sub
lea
dec
in
add
lods
xor
cmp
in
adc
mov
daa
cmp
fistl
dec
fldenv
dec
mov
sbb
enter
inc
xchg
ss
inc
pop
push
scas
insb
ret
fwait
or
test
jg,pn
sbb
sub
out
idivb
cmp
dec
imul
dec
pop
xchg
outsb
test
cmp
in
icebp
pop
orb
ljmp
rcll
pop
xchg
adc
bound
mov
mov
lea
test
adcl
and
addr16
movsl
test
and
xchg
addr16
popf
mov
repz
xlat
iret
mov
lds
pop
pop
pop
mov
xchg
andl
ja
sbbl
lret
cmp
cltd
or
out
pop
fwait
lock
push
aam
out
or
lret
lret
hlt
sbb
enter
rorl
or
mov
jbe
cwtl
ja
loop
punpckhdq
popf
lret
cmp
or
adc
lock
adc
movb
push
jge
dec
sub
outsl
mov
inc
cltd
xor
movsl
fistpll
xor
adc
xorps
sbb
jecxz
pop
cmpsl
mov
mov
popf
push
push
lock
mov
das
inc
and
adc
and
pop
lock
xchg
imul
subb
xor
adc
fldcw
dec
jge
push
dec
pop
dec
imul
insb
call
arpl
add
xchg
xchg
fs
mov
cmp
adc
int
stos
mov
or
cmp
fisubl
cmpsb
pushf
mov
jbe
add
out
adc
mov
packsswb
jmp
aad
aas
test
es
sahf
js
aam
sub
test
xor
sub
int
nop
cmc
adc
rcl
jl
sbb
in
jle
jno
inc
or
mov
into
xchg
xchg
sub
cmp
in
xchg
cli
cli
adc
push
push
add
fsubs
stos
addl
mov
xchg
shl
outsb
jecxz
jp
add
ja
jmp
mov
decl
mov
cltd
loope
aad
cmp
ljmp
leave
jle
pusha
movsb
loope
pusha
aaa
dec
adc
test
xor
out
push
repnz
stc
fs
jge
or
xor
push
push
jne
pop
cmp
fldl
fptan
push
fnstsw
in
les
insl
sbb
iret
inc
mov
mov
jnp
mov
pop
mov
das
rorb
fildl
nop
mov
aad
cmp
cmp
mov
rcr
adc
inc
jae
mov
es
sbb
jge
cmp
xchg
in
adcl
in
gs
call
xchg
popa
rclb
xchg
clc
mov
cs
push
mov
and
lcall
and
push
jl
mov
out
ffreep
dec
cli
rcrb
pop
outsb
xor
shlb
bound
notl
cmc
das
cmp
add
fdivr
sbb
test
leave
mov
pop
xchg
aam
inc
rcl
mov
lret
pop
and
repnz
popf
add
mov
mov
out
push
or
lcall
mov
sub
push
jae
sub
stos
roll
data16
cmpsb
mov
mov
push
mov
mov
xor
pusha
cltd
pop
and
int
pop
mov
movsl
aaa
fsubp
and
mov
dec
push
sarl
jb
outsb
popf
inc
js
ret
loopne
jns
and
std
sub
subb
leave
pop
insl
call
das
arpl
sarl
out
mov
push
xor
sbb
push
not
cltd
jnp
mov
xor
push
sahf
mov
or
ja
sbb
das
ss
adc
xchg
cmp
mov
add
mov
bound
pop
xchg
js
movsl
pop
pop
leave
sbb
inc
stc
testl
lret
lea
test
cli
daa
lcall
mov
sub
mov
stos
testl
jbe
mov
pop
lock
mov
cmpb
dec
jmp
lret
and
xchg
popf
enter
push
std
js
pop
cli
mov
into
insl
mov
xor
xchg
mov
lret
pop
pop
jae
stc
in
inc
inc
xchg
pmaxub
mov
in
or
in
push
mov
out
pop
lret
sub
adcl
or
xor
movsb
push
nop
mov
mov
and
jnp
je
xlat
sbb
mov
sahf
insl
mov
call
ds
jle
cltd
adc
or
mov
icebp
call
mov
dec
pop
pop
cmpsl
insl
out
ss
stc
push
xchg
fsubrl
cs
dec
lret
cmc
mov
rorl
fs
cmpb
test
push
mov
lret
inc
hlt
std
push
sbb
sti
mov
sub
sub
xchg
rorb
cmpsl
pushf
hlt
shr
or
pop
xchg
int
inc
fisubrs
dec
and
mov
cltd
int3
in
test
jmp
jo
pop
push
sarl
int3
xlat
out
push
mov
jae
pop
fbstp
in
aam
mov
add
or
push
pop
dec
fimull
fs
xchg
pop
or
movsb
push
cmp
pop
icebp
das
cmp
sahf
mov
sub
and
ret
in
jg
jl
mov
mov
inc
adc
adc
dec
mov
jo
mov
nop
xchg
cmp
lock
in
and
mov
dec
ja
sbb
push
xchg
lds
out
test
cmpsl
fmuls
jo
imul
cmpsl
adc
or
loop
xchg
fidivs
cwtl
jg
mov
or
rol
inc
arpl
out
xor
je
mov
sub
sbb
std
sarb
int
and
out
pusha
add
cmc
xchg
pop
or
cmp
fsts
cmp
in
mov
jmp
jae
es
mov
out
mov
sbb
jmp
sub
lret
ljmp
pop
fcmovb
vpxor
dec
iret
out
lods
lahf
sub
pop
mov
mov
mov
jb
roll
xor
int
push
testb
sbb
sarb
xchg
and
mov
stos
sbb
cmp
sbb
adcl
mov
mov
ret
xor
mov
dec
daa
aaa
or
push
inc
popf
push
jne
xchg
aam
inc
dec
fmulp
ret
push
xor
iret
push
daa
jbe
ljmp
stos
add
push
stc
xchg
icebp
sbb
adc
jbe
leave
js
test
mov
inc
mov
ljmp
lahf
inc
dec
xchg
and
jns
jle
mov
push
stc
or
lds
push
cmp
movsl
jne
push
and
mov
adc
xchg
js
jl
and
in
sbb
adc
repnz
jle
call
movsb
aaa
loop
clc
push
ljmp
push
push
and
js
mov
popa
pop
pop
adc
pushf
negl
push
loope
or
mov
scas
cmpsb
test
mov
cwtl
mov
pusha
outsl
dec
push
xchg
aad
pushf
mov
pop
lahf
js
loopne
sahf
int
mov
out
stos
je
daa
push
push
push
mov
push
mov
pop
push
ds
inc
dec
cmp
ja
push
movsl
sub
out
scas
icebp
fwait
pushf
cltd
gs
xchg
lret
pushf
pop
xor
mov
push
pop
cmc
in
mov
aad
lods
pop
lahf
mov
loopne
popf
jnp
push
add
sar
mov
cmpsl
neg
mov
fcompl
sub
outsl
dec
xchg
pop
xor
cli
loope
xor
test
loope
fdivs
xorb
movsl
fs
and
dec
xchg
movhps
cli
pop
sbb
fdivl
stos
cwtl
fldl
or
fiaddl
fstpl
es
push
mov
lret
imul
lret
inc
imul
or
arpl
mov
mov
push
int
push
and
imul
and
mov
test
jbe
lds
or
popf
cmc
jmp
out
jecxz
rclb
sar
stos
add
adc
and
adc
insl
into
pop
and
ret
xlat
inc
cmp
pop
ljmp
pop
stc
nop
ret
call
mov
setg
adc
repz
imulb
iret
lods
sahf
lods
or
js
mov
dec
inc
subb
and
ficompl
setne
nop
fnstenv
cmpsl
push
fbstp
cmp
test
mov
ljmp
adc
clc
cmc
lahf
jle
mov
inc
adc
fwait
xchg
lret
clc
inc
out
mov
sub
add
mov
adc
mov
in
popf
push
sbb
inc
bnd
cld
mov
add
mov
inc
ss
pop
repz
dec
cmp
lock
mov
scas
inc
jo
cli
or
pop
stos
in
push
mov
adc
fwait
daa
movsl
movsl
jmp
sbb
mov
jl
jle
cmp
ret
mov
pslld
jmp
jecxz
jle
pop
sub
mov
mov
mov
mov
mov
sbb
xchg
ret
push
arpl
push
call
divb
lcall
push
mov
inc
mov
pop
add
pushf
dec
cmp
or
jno
lods
jg
imul
pushf
loop
push
stos
mov
pop
inc
inc
jmp
out
mov
mov
pushf
test
dec
dec
jne
inc
jae
std
jge
cwtl
pop
stos
mov
sti
ds
push
jns
mov
movl
test
sub
popf
lds
call
lret
lret
int3
fsubs
pop
jno
sahf
popa
dec
or
sub
dec
scas
into
adc
jg
fildl
sub
mov
sbb
xor
bndldx
cltd
lcall
int3
cmp
sub
nop
stos
js
sbb
stc
bound
loopne
sub
mov
dec
outsl
test
ret
cmpsl
add
sbb
add
pop
es
xchg
mov
dec
sbb
cs
jp
bnd
mov
subl
cmpsb
cmpsl
leave
sub
jb
adc
push
mov
inc
mov
fstpt
jl
mov
or
stos
bound
stc
xchg
dec
add
cmpsb
int3
out
cmp
outsb
pop
or
imul
das
jnp
cmp
fisttps
pop
scas
inc
lcall
inc
pop
fldl
mov
into
ficoml
loopne
mov
and
loop
bnd
pop
sbb
sub
xchg
or
add
and
aad
add
push
repz
rcrl
jp
push
rcr
decl
out
or
stos
mov
mov
aaa
xor
filds
daa
pop
mov
nop
out
outsb
jmp
add
and
aas
inc
and
cmp
xchg
fnsetpm(287
jle
push
or
sbb
push
pop
imul
mov
aam
jge
lock
xor
out
aad
adc
and
cmc
ds
add
dec
pusha
pop
cld
ljmp
cmp
dec
mov
push
scas
fdivs
dec
adc
adc
hlt
cmp
mov
sahf
add
sahf
or
fwait
andl
push
ret
std
iret
out
xorb
pop
jne
jne
cmp
andl
or
mov
mov
or
ds
out
push
sbbb
nop
jg
test
ret
or
hlt
push
scas
insl
popl
roll
leave
push
repz
andl
and
out
pushf
pop
mov
jmp
in
cmpsb
shlb
daa
or
sub
dec
xchg
aad
push
or
cmpsl
mov
iret
add
mov
push
scas
rorb
sbb
mov
jno
mov
mov
fidivrl
popf
mov
dec
and
test
sub
pop
jmp
jnp
dec
aaa
imul
cwtl
pusha
adc
mov
push
fbstp
cmp
cltd
jg
jb
adc
mov
or
and
jo
scas
fdivrs
pop
test
pop
addl
mov
bound
sub
ljmp
loop
mov
cmp
test
pushf
sub
mov
or
test
sub
std
fadds
lahf
fisttpll
ss
push
fwait
in
sar
sbb
fbstp
mov
les
xor
ja
adc
daa
cmp
push
fstps
repnz
add
sub
ret
clc
mov
rorb
add
out
and
subb
inc
sti
das
xchg
and
in
lcall
xor
sbb
es
hlt
lds
ffree
sub
add
out
daa
pop
pop
mov
pop
xchg
lods
sbb
inc
cld
call
and
push
scas
mov
les
ds
mov
inc
stc
into
sti
inc
ljmp
aas
adc
shll
xchg
clc
out
add
mov
std
and
push
adc
xor
je
and
mov
pushl
fwait
int
push
mov
push
mov
jge
adc
fisttpl
ficoml
aas
sub
push
adc
lea
jge
xchg
or
ficoms
jle
lcall
dec
mov
jne
mov
jl
loopne
sbb
jo
clc
jnp
xor
dec
sub
adc
sahf
out
xchg
push
jge
add
lret
xchg
lret
js
loope
sbbb
push
and
jbe
xchg
sbb
test
js
mov
jg
hlt
mov
scas
in
dec
and
push
mov
sub
fadds
out
cli
lcall
gs
or
cmovno
pop
test
cmc
xchg
add
imul
add
stos
dec
pop
jecxz
lcall
adc
stc
jmp
bound
cld
cmc
imul
int3
ret
xchg
and
xor
mov
das
jp
mov
xchg
jno
push
dec
inc
sti
filds
stos
inc
in
push
cwtl
pushf
ss
lock
jns
gs
loope
cwtl
sub
pop
inc
sbb
adc
add
or
jb
dec
mov
das
push
xor
xor
push
sahf
fdivrs
sub
fnstcw
push
adcl
imul
or
jmp
ficompl
in
pop
mov
pop
shr
in
arpl
or
in
cltd
mov
mov
dec
pop
and
fcmove
jo
or
adc
add
insl
jp
mov
adc
cmpsb
inc
ds
sub
pusha
pop
data16
add
mov
aaa
shll
popa
sbb
add
ret
stc
addb
out
roll
xchg
outsb
scas
leave
adc
je
andl
xor
andps
xchg
push
jge
ljmp
xor
movsl
pop
xor
sbb
sarb
push
sub
pop
or
das
outsb
xchg
stc
xchg
jbe
inc
jns
cmp
pop
lret
adc
lds
dec
mov
dec
loopne
add
or
jno
jle
pushf
ret
xchg
mov
fs
or
insb
or
xchg
and
imul
push
bound
adc
push
mov
lret
mov
pop
inc
or
xchg
aam
lea
cltd
aam
xor
fsubs
pop
lods
mov
icebp
bound
pop
xchg
push
das
je
push
jo
mov
xor
or
popf
pushf
sbb
pop
in
rcrl
add
gs
lods
push
std
add
out
xchg
add
outsl
lods
mov
add
in
mov
ss
cld
jo
shrb
aaa
repnz
mov
repnz
std
pop
inc
cmp
xor
sub
hlt
adc
jb
xor
or
and
add
jp
mov
mov
xor
call
iret
lock
hlt
out
ja
pop
cmp
mov
leave
repz
mov
pushf
mov
jo
pop
inc
test
and
sbb
jp
xlat
pop
push
and
mov
pop
push
loop
repz
std
add
lret
xor
dec
mov
test
push
hlt
xchg
xor
jge
cmp
ds
adc
outsb
call
pop
inc
push
scas
popl
sbb
pop
push
xlat
cs
psubsb
dec
jle
repnz
outsl
out
and
pop
push
in
out
jmp
mov
xor
or
and
xor
dec
push
dec
enter
dec
ss
sub
loopne
rorl
loop
cmpsb
scas
add
fwait
and
insl
cmc
int
jg
pop
in
sbb
mov
add
dec
or
enter
sub
or
sbb
sti
mov
mov
leave
add
fwait
mov
pushf
cmp
push
inc
lahf
fnstcw
jecxz
pop
inc
pop
test
stos
fucomi
and
push
push
rcl
pop
inc
mov
sub
add
jno
inc
sub
lahf
pop
xor
cmpsb
inc
xor
push
mov
ja
or
mov
cwtl
es
xor
aas
xchg
mov
fistl
xor
lcall
ja
outsl
ljmp
xchg
xlat
into
pop
aad
icebp
aas
cmp
addr16
lahf
lahf
nop
mov
lret
push
or
into
mov
mov
inc
inc
add
lret
enter
int
pusha
push
fnstenv
pop
ficompl
aas
dec
push
inc
outsb
out
pop
xor
jne
push
sub
dec
sti
adc
movsl
loop
movsl
fst
pop
ds
inc
xor
in
cmp
jl
add
out
dec
mov
mov
lods
aas
shrl
mov
cmp
push
push
data16
cli
xor
test
push
aam
mov
aas
xor
in
outsb
or
ss
fwait
cld
mov
jae
xor
inc
ljmp
cmp
faddl
stos
sub
mov
cltd
mov
sbbb
sbb
ss
fmull
xchg
cmpsb
addr16
or
dec
js
loop,pt
call
lods
subl
jns
enter
mov
fwait
pushf
iret
sbbb
testb
stos
lret
push
pop
pusha
sub
sti
out
stos
lcall
jbe
xor
jns
xchg
and
adc
pop
outsl
jp
jle
sub
jmp
push
mov
aad
mov
int
loop
push
add
test
daa
add
mov
std
es
pcmpgtb
pop
cmc
dec
and
add
fdivr
iret
stc
fisttpl
fimull
ret
ret
dec
cmpsl
sub
fwait
lds
imul
out
jle
jl
adc
sub
mov
push
stos
mov
xchg
outsb
xchg
roll
pushf
add
or
popf
adc
push
int
dec
mov
test
pop
pop
adc
repz
cmp
xchg
and
cmc
sbb
jae
outsb
xchg
std
push
cmp
pop
je,pn
popa
test
into
fnstsw
cli
mov
sti
mov
and
repnz
movl
adc
aas
dec
xchg
push
not
ret
inc
hlt
daa
js
rol
in
xchg
mov
cmp
mov
lods
xchg
aaa
mov
scas
lahf
gs
aaa
push
pop
jp
ljmp
test
jmp
mov
sub
push
cmpsl
jecxz
cs
aam
lcall
sub
or
test
push
jbe
sbb
cmpl
pop
mov
in
jno
mov
mov
push
mov
mov
movsbl
push
inc
cmc
int
push
shrb
out
scas
cli
shlb
mov
dec
adc
xor
arpl
ss
enter
into
pop
shlb
lock
xchg
lcall
pop
sbb
pusha
adc
stc
loop
or
adc
xchg
push
aam
mov
fstpl
jmp
adc
repz
mov
rolb
and
repz
or
shl
or
adc
inc
xchg
in
mov
adc
test
int3
cs
repnz
insl
cmpsl
xchg
mov
out
fwait
mov
fistpl
decb
jmp
push
fldcw
mov
sbb
jno
roll
lcall
dec
inc
mov
js
adc
dec
mov
push
out
sarl
stc
int3
js
popf
adc
sbb
or
test
dec
inc
inc
sarb
movsb
mov
inc
das
dec
pop
fdivs
adc
fwait
out
push
movsl
inc
ret
daa
fwait
inc
in
xchg
sbb
rolb
sub
lock
adc
mov
inc
repz
xchg
xor
xchg
dec
inc
jmp
mov
jmp
nop
and
sub
iret
in
test
daa
or
jge
ljmp
ret
stos
daa
shlb
cmp
and
lods
inc
pop
inc
cs
insl
push
aas
out
adc
sub
lds
lock
push
stos
nop
out
fidivl
xchg
xchg
rcrb
jne
sub
dec
add
outsl
mov
mov
pop
inc
mul
and
mov
scas
sub
add
fstpl
adc
clc
sub
mov
fmull
mov
repnz
and
lahf
and
je
add
pop
idivb
pop
fcmovne
inc
mov
popf
sub
mov
in
ja
pop
jecxz
inc
jmp
dec
or
or
aad
jl
or
xchg
xor
mov
and
fwait
dec
sbb
mov
lds
pop
sub
fisttpll
rcrb
sub
mov
sbb
inc
repz
cmp
les
stos
xchg
jns
sub
fsubrs
fstpl
sbb
stc
inc
adc
xlat
in
add
adc
call
in
jae
cmp
mov
mov
jns
xor
js
sub
jne
push
iret
pop
mov
jnp
add
jp
jns
movsb
insl
add
ds
mov
cmp
mov
pop
adc
fdivl
repz
lret
cltd
xor
mov
insb
or
addr16
sbb
mov
psrld
ja
pusha
dec
icebp
sbb
adc
insb
imul
iret
imul
fnstcw
cld
or
jb
jae
and
jmp
xchg
jp
lea
les
jg
mov
jge
xor
rol
jb
and
and
add
mov
sbb
dec
pop
jno
popf
sub
fildl
inc
fcoml
jg
jle
jle
xlat
cwtl
int
pop
in
xchg
push
sbb
rorl
inc
dec
mov
aam
lcall
mov
jnp
shl
inc
sub
mov
dec
push
mov
jns
mov
mov
xchg
adc
inc
pusha
les
test
and
cmc
daa
xor
and
sar
jg
idivb
push
xchg
and
push
adc
hlt
adc
add
mov
out
xchg
arpl
out
arpl
ss
adc
dec
and
lret
xor
cltd
ret
xor
mov
xchg
fcompl
xchg
cli
ror
frstor
cld
sbbl
add
popa
inc
in
inc
xor
sub
icebp
pop
loopne
aad
sbb
outsb
mov
scas
stos
jl
jg
pop
sbb
lods
sbb
sub
adc
push
arpl
scas
push
cmpsb
sub
jne
mov
push
jbe
jb
adc
insb
fistpl
mov
inc
test
cmp
jecxz
shl
and
enter
jge
popa
fs
adc
adc
subb
xchg
outsb
jge
ret
jns
scas
inc
cmpsl
mov
mov
jp
push
dec
mov
push
sbb
mov
jbe
push
mov
test
add
mov
mov
pop
jle
add
adc
mov
or
stos
pop
pop
cmp
fbstp
xor
addr16
dec
xchg
mull
insl
ret
hlt
xchg
sub
cmp
xchg
add
dec
imul
adc
push
pop
movb
ljmp
xchg
push
and
sahf
ja
or
fcmovnu
sub
fidivs
test
jo
and
bnd
out
xor
popf
in
jo
ret
addb
fwait
and
sbb
shll
shlb
ja
mov
fsubl
cmpsl
test
dec
fiadds
psrad
andb
xchg
cwtl
inc
inc
hlt
fwait
sarl
stc
shll
xor
fstl
sub
cmpsl
aaa
or
loop
mov
insl
jbe
mov
adc
xchg
test
push
mov
scas
fldt
cmpsb
cmp
mov
aad
lcall
lock
aas
push
stc
cmpsl
shll
push
mov
lret
add
mov
mov
mov
aas
lods
scas
inc
jo
pusha
push
pminsw
insl
mov
lret
lea
addr16
cmc
pop
jle
adc
lahf
je
mov
fistpl
push
inc
dec
icebp
jge
int3
rclb
out
daa
jecxz
mov
add
mov
inc
cltd
aam
in
icebp
sbb
popa
lds
cmp
addb
pcmpeqd
mov
mov
sub
xor
int
andl
out
iret
xchg
adc
movsl
pushf
pop
lods
pop
or
decb
sbb
xchg
push
insl
cwtl
mov
adc
mov
fwait
mov
jge
lea
imul
shlb
jg
aas
addl
icebp
adc
mov
pop
push
or
enter
mov
sub
loope
fisubrl
mov
pushl
push
and
gs
in
out
push
cmp
jge
lods
dec
pop
mov
mov
adc
pop
and
mov
add
and
xchg
cmp
lds
mov
hlt
insl
outsb
cltd
pop
imul
pop
test
jge
cmc
mov
rorb
cmpl
incl
adc
hlt
into
popf
mov
js
pop
ljmp
push
cltd
cmp
mov
sbb
or
lcall
lods
loope
cs
jmp
add
dec
rorb
dec
dec
je
fisttpll
push
repnz
loop
int
stos
cmp
sahf
mov
cmpsb
adc
pop
popf
mov
mov
ljmp
push
fistl
out
sbb
nop
stos
pop
or
jnp
push
xor
cmp
leave
mov
pop
xchg
push
and
jns
jae,pt
lods
add
cwtl
mov
loop
push
push
loop
es
xchg
lcall
cmp
jb
xchg
sbb
push
mov
fs
sbb
hlt
or
test
loope
maxps
dec
xchg
jle
lcall
pushf
pop
sub
jg
fwait
mov
pop
add
fiadds
xchg
aam
push
inc
push
or
jo
adc
fcmove
and
lods
stos
scas
mov
xor
adc
pop
push
ja
or
les
mov
fld
lcall
outsb
es
xor
leave
add
push
inc
adc
in
mov
jne
insb
push
mov
fld
arpl
mov
testb
sbb
push
jb
dec
push
out
adc
pop
and
or
dec
movsb
stos
mov
mov
cmp
mov
or
in
movsb
mov
data16
rclb
data16
into
mov
cmp
sub
shll
sub
xchg
popa
and
jbe
pop
add
imul
cmp
mov
loopne
pop
cld
xlat
sub
xchg
add
or
ret
sub
lock
in
out
lods
stos
cmp
lods
jb
mov
dec
push
pop
push
add
fistl
mov
or
dec
cmp
or
or
adc
loop
cmp
push
ljmp
mov
pop
stos
add
xor
rclb
shlb
adc
loope
mov
mov
jbe
aad
imul
pushf
pop
dec
loopne
icebp
mov
sub
mov
nop
scas
aad
jne
inc
ss
adc
add
mov
ds
dec
into
jge
and
sbb
xchg
dec
js
out
cmp
jg
filds
and
sbb
lods
rcrb
ja
or
inc
aas
xor
or
dec
jne
dec
and
sub
xchg
fucomi
jle
inc
imul
insl
dec
xor
sbb
push
aad
pop
outsl
fistps
inc
popf
jnp
je
push
cmp
clc
in
and
std
sub
and
mov
ljmp
jno
and
inc
ret
mov
es
cmp
cmp
ret
mov
mov
jp
jmp
mov
sahf
fucomp
push
inc
pop
fs
mov
cld
add
vmovaps
lock
fdivl
pop
xlat
pop
or
mov
popf
nop
inc
xor
sub
scas
fiadds
inc
pop
xchg
cmpsl
dec
pop
jge
cmpsb
mov
hlt
dec
pop
shlb
mov
and
fimuls
jecxz
testb
jl
xor
stc
lods
stos
sub
jne
es
jg
bound
sub
out
inc
sub
mov
xchg
bound
outsl
push
mov
daa
sbb
jbe
add
in
mov
add
insb
xchg
movsb
addl
aas
adc
pop
scas
enter
rcr
pop
cmpsl
cmpsl
dec
lods
jae
scas
shll
test
jp
mov
mov
push
xchg
mov
imul
pop
decb
jmp
xor
and
aaa
lret
ret
repnz
mov
stc
sub
push
cld
add
sub
push
xchg
rcrl
cmp
jo
dec
mov
sub
lods
mov
xchg
pop
movsl
xchg
imul
inc
cmpsb
je
stc
cmpsl
dec
xor
arpl
jb
sbb
or
bound
xorb
aad
jo
ss
insb
out
adc
xchg
loopne
cmp
add
sub
and
mov
incb
je
dec
scas
mov
xor
or
cmpsl
xchg
cs
imul
sub
mov
xchg
or
popf
lahf
inc
mov
mov
mov
shlb
sti
ds
xchg
cwtl
push
mov
mov
or
cmp
fs
into
sbb
loope
sbb
cld
inc
test
mov
xchg
movsl
lahf
shlb
xchg
pop
sbb
hlt
fiadds
dec
fistpll
ds
push
lods
ds
mov
or
loop
adc
addr16
xchg
cs
xor
and
push
in
adc
outsl
sbb
add
in
loop
xor
fildll
sbb
add
loopne
lcall
sub
mov
adc
cmc
jbe
push
aaa
jge
dec
out
xor
adc
sbb
xchg
push
inc
xchg
adc
mov
inc
cld
movsb
cmp
mov
inc
cmpsb
sub
in
into
sarb
push
daa
xchg
inc
js
lcall
fwait
sbb
push
pop
cmpsb
xchg
enter
fldt
mov
push
pop
mov
add
addl
push
cld
jecxz
pop
int3
and
xor
pop
or
filds
add
pop
ss
sti
jl
push
lahf
fisttpl
cltd
jb
sub
dec
xchg
rcrl
enter
fucomip
stos
push
cmc
mov
lcall
mov
clc
lret
loop
mov
lcall
sarl
xor
into
imul
push
jbe
xchg
int
jb
imul
orb
out
lcall
cmp
dec
jb
insl
or
dec
xor
and
ljmp
mov
xor
pop
pop
dec
cmpl
daa
popf
jge
aaa
sahf
mov
dec
shl
mov
and
out
inc
sti
or
pop
sbb
cs
test
xchg
xor
rclb
pushf
fwait
xor
cmpsb
mov
movsl
jo
jecxz
ja
imul
cmpsb
cmpsb
xchg
jl
cmp
js
stc
pusha
push
jnp
jnp
rorb
or
adc
js
loopne
ret
and
xor
xchg
cwtl
jg
cs
lahf
cmpsl
test
sub
xchg
mov
xchg
stos
adc
out
clc
or
or
cwtl
xor
loop
jb
sbb
jmp
push
xlat
xchg
pop
jbe
cmpsl
dec
and
test
pop
sub
push
jl
adc
fs
repz
pop
fwait
xchg
mov
cmp
push
mov
cmp
addb
mov
shlb
test
inc
push
cli
aas
rorl
jge
icebp
pop
pop
fsubs
cld
ja
loop
mov
lret
out
loopne
into
jl
pop
jno
xchg
xchg
ds
ret
lea
pop
mov
xchg
sub
sub
and
std
mov
jo
imull
mov
ljmp
ret
leave
mov
mov
push
les
adc
stc
add
ljmp
leave
cli
loopne
rorb
sarb
inc
push
repnz
add
xchg
daa
sbb
lret
add
arpl
fadd
xchg
cmp
xchg
push
jmp
xor
jae
in
xor
lret
scas
inc
loop
pop
std
xorl
mov
push
loopne
lods
mov
icebp
push
lahf
jae
mov
mov
inc
xor
mov
arpl
lock
shrb
clc
and
push
xchg
mov
fwait
push
inc
xor
or
roll
mov
aaa
sti
icebp
pop
mov
xchg
loope
fmuls
xchg
pop
xchg
and
shrb
jg
fs
pop
in
stos
outsb
sahf
mov
mov
pop
int
xchg
enter
lock
ja
push
lret
or
daa
jge
push
push
sbb
roll
stc
jp
mov
add
nop
mov
js
xchg
mov
add
aam
jp
mov
mov
and
cli
xor
add
call
into
lcall
divb
push
sub
mov
test
pop
inc
das
cli
xchg
mov
ficoml
mov
ud0
sub
mov
sahf
sbb
add
std
xchg
mov
scas
dec
je
out
xchg
and
mov
inc
adc
fcoml
pop
ret
pop
or
mov
pop
sarl
outsb
stos
aad
jnp
sub
notb
fwait
cltd
rcrb
mov
fs
cmp
in
stc
push
shl
shll
sti
mov
push
mov
sub
cmp
sbb
fs
jg
arpl
not
pop
fdivrs
in
movsl
sub
sbb
mov
xchg
push
inc
add
out
jmp
xor
test
in
sub
xchg
clc
addr16
clc
addr16
mov
roll
sbb
adc
pop
xchg
clc
adc
push
push
add
mov
sbb
in
test
xor
leave
andl
sub
mov
dec
fisttpl
xchg
push
int3
add
jg
jo
push
cmp
inc
and
cld
push
push
out
and
pusha
vgetmantss
adc
cwtl
mov
sub
insl
mov
fprem
addr16
mov
rcrb
pusha
inc
or
mov
cli
and
sub
aaa
jne
jge
rolb
mov
push
inc
jae
stos
mov
inc
fs
arpl
rcrb
movsb
add
outsl
mov
sub
ficomps
inc
xchg
fldcw
pop
cmp
push
sbb
push
pop
or
data16
into
stc
mov
sub
add
rclb
dec
clc
sahf
ret
jnp
xchg
jmp
or
popf
outsb
ja
mov
nop
stos
mov
xor
in
aam
mov
test
mov
sub
movsl
loope
imul
scas
dec
loop
cmp
adc
sarl
pop
jp
pusha
iret
divb
fs
mulb
call
data16
into
mov
aam
add
enter
mov
out
std
pop
mov
mov
mov
sarl
insb
sar
dec
xor
mov
xchg
dec
push
sbb
push
mov
inc
popa
mov
inc
add
xchg
jae
jbe
out
xchg
add
sbb
fdivs
sbb
fwait
aam
push
sub
jge
sahf
sti
sub
sbbl
cmp
jns
mov
inc
cld
jle
cmp
stos
stc
xchg
fwait
xor
pop
sbb
div
sub
je
cmp
jecxz
shll
sbb
push
dec
cmp
std
insb
outsl
add
lea
lcall
pop
aaa
addb
call
insl
add
or
or
adc
fcoms
lods
add
mov
or
mov
sti
sarb
mov
sti
loop
push
aad
stos
adc
imul
mov
inc
aaa
fdivrl
aad
xchg
insb
or
repz
cmp
orb
pop
in
pop
insb
sbb
jo
push
ss
sub
mov
test
out
adc
lret
pop
sub
divl
xor
adc
cmp
xlat
cmp
mov
in
mov
je
push
adc
aaa
ret
dec
cmpsl
mov
xor
idivl
enter
inc
inc
mov
lcall
mov
loopne
rolb
inc
loop
lds
pop
loopne
fsubs
or
mov
xchg
cmp
int
lret
pop
or
clc
pop
lds
dec
pop
fimull
mov
sbb
adc
sub
out
fcoms
out
arpl
xchg
test
arpl
iret
shlb
pop
clc
jmp
dec
test
scas
out
cs
in
daa
add
fcmovbe
sub
push
adc
add
push
jne
mull
push
sahf
adc
add
fstp
dec
dec
jge
shll
mov
jecxz
icebp
iret
mov
insl
out
loopne
sbb
test
incl
test
mov
stc
aas
stos
sub
push
lret
lods
popf
sub
je
pop
dec
stos
push
inc
mov
repnz
stos
rclb
push
fsubr
loope
add
popf
mov
xlat
pusha
mov
jb
xor
mov
xchg
movsl
xor
xchg
inc
sub
pop
cmpsl
data16
lahf
inc
nop
inc
lods
xor
add
pushf
lea
int3
mov
pop
lds
in
add
sub
ja
daa
jmp
add
or
rclb
and
pushf
aas
dec
xchg
popa
add
out
aam
dec
jns
aas
loopne
sub
iret
cmp
and
mov
jne
cld
inc
imul
mov
lahf
and
push
mov
ret
cmovle
jmp
test
sub
or
dec
jmp
push
outsl
mov
xor
repnz
bound
cmc
push
xorb
jae
and
cmp
test
or
cs
xchg
add
mov
pop
out
repz
pop
push
mov
mov
filds
int3
push
mulb
add
test
jno
mov
js
ret
jle
cmpsb
outsb
sub
jl
adc
jnp
jne
cwtl
rcll
jl
cmp
enter
je
mov
cmpl
xor
adc
push
xor
gs
pop
mov
jge
pop
fs
sbb
dec
daa
add
sub
add
push
pop
aaa
mov
aam
sub
push
mov
push
xchg
les
es
lret
testb
push
ja
cmp
xchg
push
mov
in
scas
mov
add
or
push
sub
xchg
or
movsl
leave
call
call
inc
iret
xchg
xor
sub
mov
in
scas
pushf
fldt
mov
shll
pop
fmul
in
cmp
ret
hlt
mov
dec
mov
int
xchg
aas
mov
dec
nop
jle
fiaddl
pop
imull
mov
xor
sbb
xchg
test
sti
xor
lahf
ja
icebp
lcall
cltd
test
pop
mov
loopne
inc
cmp
loope
sahf
movsb
mov
jb
movsl
adc
add
gs
les
sub
loop
daa
insl
mov
fldl
inc
mov
repnz
adc
popl
loope
rcrb
cmp
dec
fidivrs
data16
cmpb
shr
or
bound
repz
add
sub
push
and
mov
mov
sub
mov
lcall
mov
mov
lods
fildl
stc
mov
aad
cmc
test
jnp
adc
pop
add
sbb
scas
inc
dec
ja
mov
hlt
stc
xchg
mov
jg
xchg
adcb
test
cmp
pop
xchg
outsl
les
pop
adc
jbe
rclb
aas
into
cwtl
and
stc
jmp
push
or
pop
int3
cmp
test
push
iret
xlat
mov
xchg
sub
test
sbb
mov
mov
or
xor
movsb
mov
stos
clc
shl
pop
jg
push
pop
pop
movsl
mov
xor
add
hlt
or
dec
mov
setg
cmpsl
je
divb
dec
movsb
mov
cmp
mov
add
cmp
jae
inc
out
dec
shrb
mov
inc
push
aaa
nop
mov
mov
sbb
or
stc
negl
fistpl
aam
mov
lret
jge
scas
dec
jb
push
stc
push
cwtl
jbe
out
stos
jb
mov
test
je
xchg
out
loop
lret
add
cmp
sahf
pop
cmp
xchg
rcrb
je
mov
jp
mov
fisubl
pusha
add
mov
repz
imul
xor
and
and
sbb
call
ret
testb
mov
adc
adc
sub
mov
fstpl
or
add
mov
lret
push
insl
or
dec
adcb
cwtl
lret
mov
test
sbb
ljmp
xchg
into
push
add
pop
fs
fcompl
xchg
push
mov
xchg
into
inc
dec
xchg
rol
xchg
sub
lcall
adc
mov
xor
adc
lock
push
dec
adc
test
xor
pop
jg
xlat
int3
and
fists
fs
sub
hlt
jnp
loop
scas
mov
mov
scas
insl
mov
sub
cmp
mov
adc
iret
or
mov
lahf
mov
pop
outsb
push
sbb
dec
jbe
pop
dec
or
or
pop
movsb
in
into
rcrb
adc
xchg
or
push
int3
imul
je
leave
xor
sub
call
sbb
pop
fisubl
inc
and
adc
push
mov
adc
sub
fcmovnbe
scas
xor
sbb
mov
push
sbb
iret
xor
stos
icebp
dec
int
push
fld1
test
ficompl
mov
and
ss
loopne
clc
pop
pop
mov
int3
mov
mov
lea
mov
adc
cmp
xchg
into
xor
dec
pop
fadd
xchg
mov
lret
pop
mov
push
mov
or
rorb
dec
sub
insl
mov
xchg
shlb
addr16
mov
pop
call
dec
int
inc
xor
push
pushf
lock
xor
sub
cmp
push
sbb
mov
call
mov
mov
pushf
pop
mov
test
test
movb
popa
pop
jnp
in
xchg
divb
pop
fidivl
rol
jns
imul
push
jecxz
xchg
stc
pmaddwd
or
iret
add
xchg
arpl
sub
bound
sub
xchg
mov
jecxz
pop
in
scas
push
pop
mov
mov
mov
push
ds
inc
pop
xchg
popa
adc
adc
out
out
and
arpl
sbb
in
push
dec
push
pop
mov
aas
jb
adc
daa
xchg
pop
mov
fists
cmc
jecxz
in
arpl
adc
hlt
out
dec
es
jnp
hlt
push
ljmp
test
dec
loopne
ljmp
addr16
inc
loope
je
mull
dec
mov
sub
cmp
sub
mov
cs
cwtl
push
divb
mov
lock
mov
jno
xlat
sarb
scas
shll
sbb
fnstcw
cmc
sbb
or
imul
dec
xor
ret
inc
stc
or
fsubl
push
xchg
and
push
or
xlat
lods
pop
mov
insl
stos
and
cmpsl
mov
add
push
leave
test
and
cltd
jg
inc
ljmp
shl
sub
stos
inc
xchg
push
fisubl
repnz
out
sbb
push
call
pop
test
fnsave
fstl
cmpb
mov
dec
dec
xchg
xchg
pop
testb
fbld
jle
xchg
loope
sti
shll
fidivs
push
mov
ss
add
lcall
jns
sub
jmp
rorl
movsl
mov
js
sub
in
jb
sarl
jg
cmp
add
mov
jno
pop
in
push
and
inc
dec
fistps
jecxz
stos
stc
xlat
add
mov
cmp
fstpt
sbb
mov
sbb
inc
cmp
adc
ds
jmp
sbb
jle
push
pop
lods
or
das
hlt
inc
jae
xchg
xchg
loope
xchg
sbb
mov
push
insl
mov
and
dec
cmp
dec
rorb
fdivr
imul
aad
jbe
daa
mov
int3
jnp
mov
dec
fs
insb
icebp
dec
cmp
imul
pop
shll
out
lock
ss
arpl
push
add
adc
fldl
mov
cli
mov
nop
dec
jecxz
xorl
dec
xchg
ljmp
das
imul
nop
pop
pop
mov
inc
fwait
xchg
xlat
jo
jne
xchg
int3
or
stc
incb
sarb
dec
clc
pushf
fistpl
and
jae
jge
and
hlt
into
jle
pop
push
scas
jmp
sbb
pop
fs
xlat
xchg
lret
push
ss
loopne
inc
jns
pop
push
scas
inc
ja
pop
sar
push
rcrb
arpl
addr16
int3
arpl
mov
pusha
dec
fnstcw
fdivr
or
push
adc
push
fmull
mov
mov
test
test
mov
mov
jmp
adc
sub
jle
inc
mov
cmp
push
add
add
dec
cmpsl
sbb
scas
ss
pop
mov
dec
dec
sbb
stos
xchg
lcall
mov
and
pop
mov
clc
repz
adc
mov
cli
pushf
arpl
pop
cmp
and
insl
pop
push
arpl
sbb
test
in
imul
add
pushf
jp
xchg
and
movsl
mov
cld
sbb
shlb
jg
push
sub
inc
or
and
sbb
cltd
cmc
sahf
ljmp
add
mov
xchg
pop
mov
arpl
jbe
subl
inc
jp
xor
and
outsl
adc
iret
daa
movb
mov
and
dec
inc
cmp
lods
int3
sub
add
cmpsl
add
es
enter
jno
push
cmp
scas
call
mov
push
push
loop
mov
lret
testl
xor
hlt
adc
pop
jns
out
mov
fs
jb
out
ss
imul
mov
pop
flds
or
and
ret
ja
in
mov
mov
cltd
inc
mov
mov
mov
repz
mov
int3
ds
inc
inc
xchg
mov
stos
adc
xchg
mov
or
adc
push
out
jl
decb
popl
push
stc
jge
cld
lret
adc
sub
enter
dec
ja
xchg
insb
popf
in
fbld
mov
gs
xchg
add
push
push
xchg
mov
sbb
aas
insl
sub
imul
rorl
sbb
jl
imul
mov
out
stc
shl
inc
cmc
divb
jmp
lock
push
cvtps2pd
push
adc
jmp
sbb
add
ret
mov
sbb
lcall
mov
add
mov
in
pop
shrl
lea
ja
pusha
cld
sub
mov
mov
popa
fstcw
aad
xchg
fnsave
jo
adc
pop
into
orb
mov
lret
add
push
xlat
insb
out
ja
sbb
cld
cmc
das
mov
or
mov
rolb
inc
mov
push
xchg
fldl
and
jl
xchg
enter
dec
popa
sti
sub
sub
mov
daa
test
insb
sbb
sub
das
test
test
nop
aaa
adc
out
adc
inc
shll
int3
loop
inc
adc
ss
scas
cltd
lret
push
sub
test
xchg
pop
and
and
jg
lock
fwait
pop
or
dec
pop
je
mov
mov
adc
adc
jo
add
lods
sub
and
xor
jbe
xor
push
xchg
sub
xor
rorb
xor
and
pop
adc
je
fs
lret
inc
fsubrl
sbbl
sbb
divl
inc
adc
sbb
mov
ja
inc
sbbb
xchg
sti
mov
bound
push
push
xor
cld
mov
rorb
ds
adc
out
mov
shll
rcll
mov
jae
push
pop
pop
es
add
lahf
or
in
pop
clc
push
cmp
pop
add
jnp
push
cmc
adc
push
mov
mov
add
test
cmpl
mov
mov
sbb
jecxz
push
xor
mov
fdivrp
bound
shlb
or
adc
sarb
add
in
push
sub
sbb
xor
jae
mov
jg
jb
sub
adc
mov
push
test
cmp
sbb
add
or
lods
add
lods
in
popa
or
inc
movsl
xchg
ds
stc
mov
cld
mov
dec
jp
scas
negl
ds
mov
rorl
or
mov
and
inc
mov
jne
inc
aad
les
aas
lock
insl
in
rclb
adc
xor
xlat
sub
pop
pop
xor
bound
fwait
or
popf
frstor
jnp
inc
stos
mov
sub
cmpsl
outsl
popl
adc
or
fwait
mov
dec
add
sbb
jb
fistpll
mov
pop
lods
ja
clc
xchg
nop
lret
xchg
cltd
fbld
push
les
jge
scas
pop
ljmp
jbe
imul
dec
push
fsubs
aad
and
adc
pop
rol
push
mov
fsts
int3
mov
ja
pop
sub
aas
push
push
popa
les
push
xchg
sarl
push
loope
mov
mov
xchg
in
dec
mov
mov
lock
xchg
mov
mov
sahf
ljmp
test
dec
adc
mov
test
mov
mov
xchg
out
call
push
int
lods
repz
mov
aad
xor
out
push
dec
pop
push
cmpsl
lods
pushf
jge
add
and
pop
arpl
sub
out
sbb
dec
imulb
lods
mov
sti
push
mov
in
mov
cwtl
aam
and
sub
jbe
stc
push
cli
jne
aaa
or
mov
inc
pop
ja
mov
out
shlb
xchg
jo
xchg
aaa
sbb
fwait
movsb
jnp
push
fs
test
repz
das
push
in
mov
mov
pop
inc
cmc
cmp
jecxz
daa
cmpsb
cmp
push
xchg
add
dec
xchg
mov
mov
fldt
out
stos
popa
loope
mov
inc
sbbl
sbb
lods
mov
gs
or
inc
add
out
mov
xchg
jne
call
stos
cs
xor
lods
pop
mov
call
fcmovne
jns
ret
jo
dec
dec
add
pop
mov
mov
adc
jecxz
sub
pop
pop
push
out
xchg
imul
sub
stc
dec
inc
in
leave
inc
out
std
mov
bound
and
jo
dec
sti
rcll
cmp
outsb
shll
test
lods
or
sub
xor
mov
xchg
imul
add
mov
push
mov
cmp
cli
or
arpl
xor
out
pop
pop
dec
ds
inc
into
repz
dec
or
pop
mov
push
imul
int3
clc
in
or
stc
pushf
and
hlt
lods
jle
ss
lea
sub
sbb
nop
filds
cli
ret
call
cwtl
mov
or
loop
mov
or
add
test
mov
inc
inc
cmpb
jge
jg
fadd
scas
repz
mov
cmp
and
inc
mov
lahf
shrb
fmull
shrl
pop
gs
push
push
sar
negb
stc
mov
inc
and
pop
call
sbbl
movsb
jae
ds
mov
mov
or
out
and
mov
scas
fidivl
add
push
sub
pop
and
test
mov
cmp
sub
and
cmp
rol
repz
insl
shlb
sti
outsl
pop
or
shll
mov
mull
pop
das
notl
xadd
shrl
mov
in
das
lret
xor
in
test
divl
mov
arpl
shr
cltd
push
in
mov
inc
js
mov
nop
outsb
inc
std
or
lret
popf
out
or
mov
cmp
mov
inc
insb
mov
outsb
and
enter
add
int3
push
xor
push
push
pop
outsb
dec
cmc
mov
and
int3
and
sahf
repnz
xchg
bound
mov
pop
inc
mov
out
sbb
lcall
and
xor
ja
mov
gs
dec
scas
dec
sbb
sub
jle
sbb
test
jnp
push
outsb
das
mov
xchg
mov
out
or
mov
sub
cld
xor
sub
and
xchg
sub
roll
xchg
out
and
mov
cmp
push
mov
push
sbb
mov
fsts
bound
mov
xor
add
addr16
adc
imul
lahf
pop
mov
scas
cmp
jecxz
jae
fs
mov
add
xchg
stc
add
mov
cmp
or
mov
fistl
arpl
pop
iret
xchg
call
and
mov
lahf
jnp
std
test
into
in
mov
fcompl
stos
flds
mov
pop
jp
jae
xchg
rclb
adc
fbstp
adc
rorl
cltd
sarb
add
cmp
jl
into
leave
mov
bnd
xor
cmp
fwait
in
mov
mov
lret
je
les
and
sub
mov
jmp
jo
ljmp
inc
daa
js
or
add
jnp
call
fdivrp
imul
add
arpl
mov
in
mov
scas
and
lret
and
int
mov
mov
icebp
stos
arpl
loope
lret
mull
aad
addl
in
xchg
sub
fists
sbb
lcall
jecxz
jecxz,pn
loopne
test
imul
dec
cltd
add
jns
stos
and
jne
xor
inc
shll
fsubrp
out
mov
pop
pop
movsl
shrb
imul
into
sub
cmp
fprem1
pushl
call
and
dec
rcl
inc
sbb
adc
jp
loop
add
fld
mov
hlt
cmp
insl
push
test
cmp
pushf
mov
cmp
sub
xchg
xchg
xlat
pop
and
sahf
mov
pop
sti
jno
jbe
cmp
iret
mov
neg
xor
xchg
insl
dec
jmp
xchg
mov
ljmp
push
pushf
insl
mov
mov
fcoms
push
sub
xchg
into
cwtl
add
lret
movsb
repnz
iret
add
mov
idivb
rorl
insb
cs
sahf
insb
mov
cmp
push
mov
inc
mov
insl
and
bnd
dec
imul
in
xchg
cmp
sbb
ficoml
push
aad
cmp
test
pop
push
mov
jmp
pop
jno
movsl
sub
mov
adc
loop
pusha
jae
negl
dec
fildl
add
push
outsb
sub
fs
out
xor
movsb
xchg
jnp
cmp
mov
test
imul
ss
aam
or
lock
pop
add
xor
and
dec
mov
jbe
jb
incl
adc
ret
mov
aam
rcr
lock
insb
fildll
insb
mov
push
subb
insb
xchg
sub
jne
stos
pop
xchg
lahf
dec
cld
xchg
mov
add
adcb
out
dec
pop
imul
int
jecxz
dec
jne
loopne
push
shl
lcall
sahf
push
inc
int
add
push
xor
cmp
inc
adc
xor
int
movb
les
or
cltd
push
fmul
aad
mov
arpl
loope
popa
mov
lcall
cmp
push
call
add
lea
pop
or
scas
cmpsl
test
ss
mov
and
ret
mov
mov
push
cmpsl
jmp
adc
popa
xchg
popl
test
pop
push
cld
fisubl
lea
inc
jmp
push
stc
test
add
adc
mov
sbb
rcrb
or
dec
test
push
rcl
bound
dec
sbb
mov
cmpsb
jne
shlb
add
mov
dec
std
or
iret
pop
xchg
push
sbb
es
pop
ljmp
subl
push
lock
sbb
jne
xor
fistpl
mov
cmpsb
dec
sbb
adc
xor
inc
sbb
mov
sbb
inc
and
repnz
jne
shrl
mov
jbe
xchg
inc
cs
sub
or
ret
cs
addr16
inc
fbld
fists
cltd
mov
mov
push
push
stos
cmp
ljmp
sub
cmp
sahf
lahf
inc
xchg
dec
lcall
sbb
jp
adc
jle
mov
test
fnstenv
int
sub
mov
loope
mov
daa
fiadds
ds
mov
xchg
subb
mov
ror
fcmove
fsts
loope
push
vmovhpd
xor
cmpsb
adc
cmpb
lea
nop
cwtl
cmpsb
sbb
jae
xor
out
pusha
mov
mov
or
dec
fs
aam
ret
or
addr16
out
int3
mov
mov
jae
jp
call
mov
dec
cmp
cmp
dec
inc
or
mov
lahf
shl
sub
fnsave
dec
push
adc
push
loop
fsubrs
adc
mov
xchg
das
adc
push
loopne
jg
pop
mov
aaa
sub
and
xor
or
jb
roll
pop
jbe
stc
xor
loope
sub
lock
xor
fldl
dec
aad
cld
mov
push
xchg
lds
orb
iret
movsb
movsl
sarl
rolb
and
xchg
add
ss
stos
cwtl
mov
push
rolb
leave
das
popf
mov
in
sbb
jl
stc
movsb
orl
jo
inc
flds
int3
cmpsl
insl
stos
sbb
and
data16
dec
sbb
cmp
or
sub
stos
and
in
and
push
mov
push
pop
dec
pop
or
pop
and
mov
sbb
cmpsl
mov
or
pop
xlat
filds
ret
push
shll
push
pop
fcomps
aaa
mov
imul
sbb
add
mov
leave
dec
sahf
flds
adc
mov
jnp
xor
mov
mov
sbb
sub
jae
test
sbb
ret
inc
scas
movsb
inc
lods
pop
icebp
sbb
push
add
stos
cmp
out
sub
fistps
icebp
sub
and
mov
nop
js
xchg
lret
mov
jns
xchg
jne
push
xchg
std
mov
stc
mov
jmp
mov
shll
stos
pop
pop
adc
mov
ds
sarl
jl
pop
and
icebp
sbb
lods
inc
xchg
mov
dec
in
movsl
inc
das
pop
into
sub
imulb
xor
mov
fisttps
cli
addl
jecxz
lret
ds
loopne
push
addr16
pop
sub
shll
pop
mov
repz
mov
out
fwait
cmp
pop
and
and
loop
in
les
or
enter
int
xchg
int
adc
adc
push
rol
lock
or
pop
mov
out
inc
pop
inc
repz
push
mov
push
jno
jae
push
add
push
imulb
and
into
inc
nop
dec
divb
loop
xchg
out
add
call
sub
imul
shl
loop
mov
or
pop
std
divl
lcall
pop
jl
imul
cli
xor
pop
push
push
iret
xchg
push
xchg
or
adc
push
stc
inc
filds
loopne
hlt
dec
test
inc
inc
addr16
pusha
add
mov
jae
je
xor
cmpsl
test
mov
push
add
jg
pusha
orb
adc
xor
jmp
and
push
mov
mov
lret
loope
xchg
xor
mov
pop
push
cs
mov
push
stos
xor
jns
ds
arpl
sub
pop
mov
fcmovu
fucomip
and
lods
push
int
xchg
xchg
pop
enter
mov
popf
cmp
std
movsb
jno
shll
mov
dec
pop
mov
adc
test
lret
fwait
stc
xchg
ret
ja
and
pop
addr16
lahf
xchg
in
add
test
popf
inc
jae
and
add
ds
ret
mov
pop
cmc
sbb
jae
iret
and
mov
cmp
imul
lret
ret
add
cmp
lcall
rcrl
mov
cwtl
mov
inc
pushf
push
sahf
sti
mov
xchg
inc
xchg
jl
fdivrl
mov
cli
or
icebp
std
and
inc
xlat
push
or
add
dec
shll
adc
cltd
shrl
mov
xchg
push
fisttpll
mov
rcr
or
or
mov
test
aad
sub
push
test
int
loopne
mov
enter
jg
icebp
jle
mov
incl
pushf
cmp
sub
sub
sbb
pop
outsl
ficomps
adc
cmp
aaa
mov
sbb
cld
or
aam
mov
rol
and
fadds
mov
cmp
ret
sub
lods
loope
cmpsl
test
push
push
jecxz
mov
jmp
jno
fnstcw
cmp
xchg
lds
or
pop
mov
dec
fnstcw
pop
loopne
and
cli
push
push
nop
pop
cmc
test
jns
sbb
add
stos
fs
call
sbb
dec
xchg
into
jnp
push
repz
adc
or
fsubl
mov
ljmp
push
inc
cwtl
scas
sub
jns
mov
add
mov
cmp
push
sbb
rcr
adc
out
jle
sbb
dec
into
cmp
adc
xlat
outsb
cwtl
push
sbb
lea
movsb
fs
jl
gs
adc
ja
push
push
in
aas
ljmp
and
out
pop
pushf
or
push
mull
adc
xchg
adc
inc
push
jmp
sti
mov
xor
mov
jo
jle
shl
enter
add
mov
mov
lret
icebp
aas
cmp
sbb
inc
inc
xchg
test
adc
adcl
jge
daa
push
outsl
iret
cmp
inc
out
fldl2e
loope
mov
and
ja
and
mov
push
rsm
incl
dec
sub
lret
enter
cmp
pop
jnp
inc
cmc
fldt
adc
jmp
fs
call
int
popf
dec
int
movsb
xorb
mov
test
xor
andps
loope
dec
jno
icebp
inc
mov
sub
bound
add
loope
pop
push
pop
aam
pop
movsb
push
xchg
push
dec
pop
mov
shll
notl
mov
aam
and
loop
imul
add
add
data16
iret
cmc
add
pushf
pop
add
out
jg
mov
push
jle
xor
inc
jmp
xor
movsl
push
insb
ljmp
xchg
js
sub
xor
add
or
pop
or
out
push
movsbl
dec
popf
adc
aaa
fildll
pushf
std
and
sbb
jecxz
out
arpl
jg
inc
sbb
mov
pushf
ljmp
fwait
jo
inc
sbb
cmp
pop
xchg
jp
cvtpi2ps
call
add
fs
lret
jmp
jp
stos
mov
into
push
xor
pop
scas
mov
enter
adc
mulb
sbb
mov
jns
adc
sub
out
mov
jl
cmc
dec
and
stos
fistpl
push
call
icebp
mov
adc
movsl
sahf
add
rcr
out
inc
pop
jl
nop
es
fsub
scas
push
mov
div
lods
mov
mov
xor
add
mov
push
or
iret
fcompl
pop
adc
fnstsw
sbb
push
sub
leave
nopl
sbb
jb
inc
xor
cmc
inc
cmc
add
mov
pop
xor
adc
sub
fcmovne
xchg
notl
sbb
int
xchg
ljmp
mov
jb
addr16
xor
xorb
aad
je
fninit
in
sbb
in
cmp
xchg
cmp
cmp
lock
fdivrs
movsb
mov
pop
arpl
lods
and
mov
fmuls
pop
aas
mov
fwait
test
adc
pusha
xor
movsl
addr16
inc
xchg
sarl
dec
out
jl,pt
mov
mov
sub
jne
hlt
push
mull
aas
xor
dec
mov
lock
insl
lahf
inc
fidivl
push
shll
shl
pop
xor
loopw
lret
add
enter
stc
add
aas
sub
cwtl
cmp
pop
das
outsb
cltd
push
mov
sub
cmp
jge
lahf
sbb
xor
into
loope
rcrb
push
jmp
pop
add
pop
inc
mulb
fnsave
dec
lret
and
push
xchg
repnz
imul
jno
xchg
jmp
inc
xor
pop
push
mov
mov
les
sbb
dec
ret
pop
pop
pusha
jbe
jl
dec
mov
inc
out
mov
xchg
imul
push
cmc
ss
push
pushf
xor
nop
mov
push
dec
mov
and
stos
sbb
mov
in
adc
loop
pushf
xor
or
and
dec
pop
dec
add
lea
xor
mov
mov
repnz
imul
xor
jae
or
sti
insb
pop
xor
insb
and
and
cltd
pop
jp
sarb
arpl
fsub
push
frstor
fdiv
sub
lcall
inc
and
jmp
flds
xor
add
mov
inc
and
jns
das
mov
cwtl
push
lods
repz
ret
push
sbb
mov
rorl
subb
movzwl
or
mov
or
loope
das
test
pop
push
cmp
pop
jle
imul
cmp
std
movsb
and
dec
adc
mov
insl
cwtl
aas
mov
dec
xor
enter
or
pop
arpl
inc
ret
addr16
xchg
xor
or
leave
fcmovnbe
mov
les
lahf
imul
pop
jecxz
push
mov
lods
xchg
pop
ljmp
fdivs
push
sub
add
stos
sub
jae
sub
push
mov
or
je
inc
dec
sbb
xor
sub
mov
nop
xor
jns
lods
outsl
dec
dec
cmp
add
dec
sub
xchg
xor
pushf
imul
inc
scas
dec
mov
xor
dec
ja
pop
orb
loopne
cmp
xchg
aas
xor
pop
xchg
rcl
xchg
scas
inc
rolb
mov
clc
ret
andl
xchg
pop
stos
mov
mov
jp
lock
and
add
mov
mov
out
loopne
pop
repz
test
sbb
in
ljmp
mov
add
fwait
pop
pop
mov
push
adc
inc
cmpsb
mov
push
sahf
push
adcb
aas
idivl
push
shll
outsb
movsb
int
pusha
orl
jge
sarb
fisttps
cli
xchg
inc
xchg
fprem1
pop
fs
jge
jb
cmp
mov
jno
xchg
lahf
dec
pop
and
jnp
xor
repz
in
stos
test
int
sub
fwait
inc
loop
cmp
aas
outsb
push
loopne
pop
push
pop
imul
movsl
push
add
fdivp
dec
pop
loopne
xor
cs
push
push
lret
jp
dec
push
rolb
cli
hlt
int3
pop
lock
cli
adc
aam
mov
jno
jl
push
and
xor
imul
rorb
lock
adc
inc
gs
cmc
movsb
test
movsb
xchg
xchg
add
data16
jbe
mov
pusha
sub
push
push
arpl
or
sub
cmpsb
jmp
in
adc
dec
cmp
mov
pushf
mov
cld
movsb
dec
add
xor
push
mov
repz
lret
adc
push
ss
xor
add
sahf
push
and
leave
fidivs
mov
gs
neg
dec
push
dec
push
dec
jmp
into
shrb
xlat
mov
add
addr16
lods
sbb
pop
cmpsl
call
push
pop
mov
mov
loope
loope
jae
sbb
xchg
loop
xchg
push
ljmp
jnp
sub
jmp
jge
daa
sub
lcall
imul
cmp
pop
mov
outsl
notl
flds
cmpsb
in
call
sub
fwait
sub
xor
inc
push
jle
add
xor
push
and
in
divb
stos
cltd
mov
xchg
cmc
xor
aam
sarb
mov
jbe
call
lds
insl
imul
shlb
loop
rolb
das
sub
mov
outsl
mov
cmp
test
mov
mov
adc
movsl
push
push
mov
cmpsl
push
sub
rorb
sub
push
insl
mov
add
and
inc
lret
les
sbb
in
aas
lods
or
ja
ss
movups
xor
dec
outsb
adc
pusha
jne
aaa
mov
out
or
sarb
push
fsubl
add
mov
jne
and
xchg
popf
lds
test
push
sbb
test
mov
inc
lret
push
fists
sub
mov
sbb
and
inc
fistl
popf
pop
popf
sub
cmp
dec
adc
bound
dec
rcll
icebp
aas
inc
jecxz
testl
rorb
nop
aad
test
lds
pop
adc
push
dec
xchg
pusha
insb
filds
adc
jmp
dec
push
mov
dec
in
jp
pop
fstps
pop
jno
ds
sbb
xchg
mov
xor
jecxz
push
fdiv
in
add
mov
push
sahf
nop
xor
xchg
cmpsl
cld
ja
cs
mov
daa
and
inc
lahf
das
lds
scas
pop
popa
leave
cmp
inc
mov
pop
inc
mov
stc
scas
push
mov
lcall
mov
inc
jo
sbb
xor
push
add
in
sub
and
xor
jbe
aas
imul
add
pop
xor
mov
mov
jno
mov
mov
dec
psubusw
addr16
push
inc
pop
popf
xlat
jle
push
cltd
and
xchg
lods
inc
and
inc
or
cmp
push
adc
shll
inc
out
jb
push
cmp
rolb
pushf
bound
cmp
mov
imul
xchg
mov
stos
adc
cmp
fsubs
aas
loope
xchg
sbb
xchg
pop
mov
dec
push
sarb
and
push
out
loope
dec
adcl
adc
xchg
leave
push
out
dec
cmp
sbb
mov
loopne
dec
xlat
lods
dec
into
push
sbb
pop
fadd
push
gs
enter
mov
daa
iret
and
lahf
cmp
frstor
or
int3
pop
mov
pop
lea
adc
mov
cmp
clc
sbb
xchg
lcall
jle
popa
leave
jo
push
lret
or
fs
xchg
lds
ret
cmpsl
loop
leave
incl
ja
in
and
xchg
inc
std
xchg
dec
daa
enter
shl
or
pop
outsl
imul
clc
inc
imul
jae
push
add
call
lea
sbb
orb
lds
mov
xlat
jnp
mov
inc
xor
mov
jnp
enter
inc
push
jg
push
adc
mov
xchg
pop
rolb
stc
sub
nop
push
mov
int3
dec
fisttpll
adc
fisubl
or
dec
mov
clc
imul
incl
mov
lahf
pop
mov
aad
out
and
adc
out
pop
outsb
jne
jbe
enter
lods
push
fcomps
mov
outsb
or
jb
cmc
ja
jnp
loopne
jge
into
loop
jl
out
adc
adc
jo
mov
fcmovbe
mov
loopne
sbbl
adcl
pop
sub
cmp
ljmp
jno
mov
fildl
rcr
out
js
sub
adc
movsl
arpl
mov
mov
xchg
movsl
xor
icebp
xchg
pop
cmp
dec
std
jl
fidivl
in
xor
popf
sub
xor
adc
adc
fwait
aam
jno
mov
decl
cmp
fistpl
sbb
or
jge
mov
add
mov
sbb
popa
outsl
mov
inc
lods
jg
adc
xchg
cmp
enter
rolb
mov
into
pop
mov
shrl
insb
out
push
enter
cmp
movsb
ja
jp
daa
and
adc
pop
push
inc
or
test
rcrl
nop
pop
cmc
cmpsl
xor
xchg
icebp
xchg
pop
rcll
shll
out
ja
in
rolb
repz
into
mov
inc
jmp
clc
xor
jnp
stos
in
andl
subl
and
pushf
xor
sbb
push
into
test
mov
pusha
adc
sbb
mov
and
inc
xchg
xor
jb
jecxz
or
jecxz
cmp
xchg
mov
dec
xor
or
test
scas
mov
cmp
jle
pop
imul
gs
and
add
sbb
pop
aaa
in
rorb
adc
cmp
mov
out
int3
dec
and
mov
test
inc
mov
push
or
adc
cmpsl
and
pop
adc
mov
or
adc
and
dec
lret
mov
inc
jne
push
lock
push
adc
mov
imul
cmpl
in
fiaddl
fbld
cmp
xchg
add
jmp
and
and
stos
push
popf
shll
pmullw
cwtl
lock
cs
bound
xchg
gs
lods
loopne
loopne
test
sti
mov
pop
lcall
call
repz
add
jl
push
jp
mov
dec
lock
mov
iret
gs
int
inc
dec
inc
aaa
xchg
adc
sub
rol
inc
or
lcall
xchg
pop
out
mov
inc
cmp
or
sbb
mov
iret
das
cmp
sbb
repnz
adc
xchg
dec
movsb
scas
cmp
inc
mov
das
xchg
inc
mov
cmp
adc
inc
leave
pop
or
sbb
sub
out
or
imul
arpl
dec
inc
cmp
pop
xor
leave
lods
lret
lods
add
sub
mov
rcll
shrb
repnz
xchg
dec
leave
cmp
and
sub
xchg
xchg
int3
sbb
pop
push
cmp
ret
push
nop
adc
mov
arpl
mov
testl
mov
inc
cwtl
adc
add
pop
adc
icebp
ja
or
adc
push
push
in
packssdw
aad
mov
adc
xchg
add
cmpsb
xchg
andl
pop
xchg
push
gs
test
out
lds
es
and
mov
sbb
dec
je
jle
pop
dec
fnstsw
cmp
pushf
mov
lds
negl
adc
mov
in
jge
jmp
lods
setne
sub
push
cmc
fsubrl
mov
ss
jl
sub
push
xchg
ss
adc
sub
pop
mov
add
mov
jns
mov
mov
mov
sbb
outsb
sbb
jb
and
fneni(8087
xlat
aas
add
or
inc
mov
arpl
jno
clc
dec
add
sbb
and
pop
dec
or
jb
mov
push
xchg
and
pop
xor
sub
out
add
push
pop
push
xchg
inc
push
xor
add
data16
sub
sub
sbbw
dec
scas
aas
stc
push
outsl
lea
push
cmp
loope
sub
inc
sub
mov
xchg
dec
ficoml
add
sub
mov
pop
in
push
inc
dec
cmpsl
je
push
inc
sbb
stos
mov
pop
out
andb
in
sbb
and
sbb
sub
and
cmpsl
stos
jge
jle
sbb
cmp
insl
push
mov
push
pop
sarb
lret
mov
inc
daa
stc
or
cmp
xchg
push
push
fcomps
jmp
push
add
repnz
xchg
roll
jns
mov
jl
bnd
jle
mov
cmp
sbb
push
xchg
ret
sbb
imul
test
nop
jbe,pn
xchg
lods
cmp
inc
jge
or
iret
or
repz
or
cmp
xchg
jno
test
test
pushf
daa
shlb
mov
pusha
cwtl
aas
mov
daa
xor
push
adc
cmp
cmp
out
aad
inc
and
inc
xor
xchg
mov
mov
stos
push
mov
movsb
cltd
pop
jae
fdivrp
out
cmp
or
jne
jnp
mov
xchg
mov
sub
adc
test
xchg
loop
pop
lods
push
inc
xchg
in
lea
out
out
pop
inc
into
rcl
pop
xchg
dec
clc
ficompl
seta
fisttps
test
xor
fildll
shl
mov
cmp
mov
pop
push
jge
cmp
aad
mov
cmp
das
neg
insl
fistps
mov
add
lods
in
aaa
jg
adc
call
add
add
xlat
repz
add
movsl
adc
pop
fcmovnb
xchg
rclb
mov
aaa
mov
jne
jl
andb
mov
push
dec
pop
jne
fs
sbb
js
pop
dec
mov
ja
add
int3
or
das
pop
addl
rolb
das
shll
fisttpl
pop
inc
sar
shl
rclb
int
add
jp
pop
xchg
and
and
fsubr
sub
and
mov
inc
adc
rcl
dec
jne
and
or
jmp
pop
sub
adc
or
bound
testb
mov
mov
dec
push
ljmp
pop
mov
pop
xor
xchg
xor
out
jb
inc
insb
jg
xor
mov
lds
mov
test
sbb
pop
aaa
sbbb
jbe
das
movsl
mov
xchg
scas
pop
mov
mov
jl
orl
push
and
push
enter
pop
stos
or
aaa
out
mov
imul
push
add
fdivrs
scas
test
ljmp
stos
ja
dec
mov
push
stos
push
lcall
dec
stc
es
mov
push
dec
mov
add
cmp
cs
fwait
and
test
pop
aaa
cmp
das
add
out
lret
mov
repnz
pushf
movsb
push
xchg
mov
inc
out
mov
fdivrp
andb
dec
nop
icebp
push
adc
das
jb
xchg
mov
jno
fadd
ds
in
mov
loope
test
and
jne
pop
inc
dec
cli
ja
mov
mov
sub
xchg
xor
mov
lahf
jns
bound
fsub
pop
mov
testb
add
cltd
out
or
test
loop
adc
notl
movsb
enter
fs
lret
cwtl
cmp
lods
inc
iret
in
popf
dec
clc
lret
jb
das
push
dec
loopne
ret
repnz
jae
stc
xor
std
mov
dec
fcompl
mov
in
adc
aaa
dec
lods
sub
lahf
mov
into
and
inc
jg
sub
rcrl
or
sub
jae
jo
out
daa
popa
push
and
xor
xchg
mov
test
jg
inc
lods
rorl
cmp
push
mov
adc
inc
fidivs
add
sbbl
xor
wrmsr
dec
and
adc
sub
lcall
in
pop
push
cmpsb
push
ffree
and
push
ror
cld
mov
sbb
xchg
rcrl
cltd
or
xchg
shll
xchg
shll
call
mov
out
mov
push
je
clc
sbb
mov
or
mov
jbe
dec
ret
and
cmp
mov
clc
or
loopne
loopne
push
out
sbb
adc
cld
outsl
sbb
es
fsubrs
rcrl
and
rcrl
jecxz,pn
out
cmp
push
sub
test
push
and
mov
rclb
push
cwtl
lods
sbb
lea
push
sub
push
mov
mov
mov
push
and
cmpsl
xor
mov
mov
add
xchg
and
scas
mov
adc
loop
stos
imul
pusha
leave
mov
shrb
sub
imul
ret
fdivl
sbb
cli
push
lea
add
sbb
jge
fldcw
xor
ja
dec
cmp
push
filds
push
jbe
cmp
push
popa
popa
shr
sub
insl
xor
cmpl
imul
lahf
aas
jne
mov
sub
inc
jge
mov
sar
push
sub
jbe
data16
fstp
sahf
into
push
jne
jl
or
adc
cltd
popa
mov
sti
lods
inc
movl
pop
mov
pop
pop
xchg
adc
xchg
mov
and
pop
jb
cltd
fadds
mov
mov
inc
test
test
leave
sarb
mov
xor
jnp
pop
push
pop
xchg
mov
or
insb
pop
sarb
sub
cmp
in
pop
mov
push
inc
adc
push
leave
decb
mov
cmpsl
test
loop
pop
mov
mov
mov
lods
mov
mov
ds
imul
jne
es
mov
cmp
data16
repnz
insl
ror
loop
cmc
stos
dec
cwtl
cld
imul
dec
inc
scas
and
data16
ja
inc
add
jb
cmp
out
in
fs
mov
jle
je
pop
xchg
add
test
mov
pop
push
xchg
sti
cs
inc
xor
jb
xchg
out
imul
adc
jg
pop
cmpl
out
push
add
in
mov
aad
imul
std
stc
movsb
insb
gs
xchg
add
ret
mov
jno
lods
jne
in
lea
aaa
test
cs
xchg
mov
adc
loope
xchg
xor
mov
push
cwtl
rclb
cld
jne
stos
cs
decb
xchg
inc
sbb
call
sbb
sbb
adc
xlat
xchg
pop
mov
xor
and
mov
das
cli
mov
mov
sahf
gs
ljmp
xchg
fdivrs
inc
inc
pop
lahf
dec
fmul
std
mov
xorl
adc
mov
out
dec
jl
add
or
sarb
sbb
inc
ret
mov
test
cmp
adc
idivl
in
int3
movsb
mov
xchg
sbb
mov
out
ss
jno
ds
inc
push
xor
adc
push
cli
cmp
pop
pop
aaa
mov
cmp
aad
add
jnp
test
push
mov
jmp
cmp
les
dec
pop
xor
add
adcb
dec
inc
dec
mov
cmc
xchg
call
xchg
pop
test
test
hlt
sbb
test
int3
imul
xor
sub
fadd
into
cmp
push
ljmp
lods
ret
fisttps
cmp
stos
imul
push
lcall
jnp
les
xor
and
xor
adc
mov
shll
mov
daa
sub
pop
das
rorb
xchg
add
push
ss
fidivl
stc
imul
popf
imul
add
sub
mov
mov
movsb
hlt
xor
and
mov
ds
inc
ret
aad
std
aas
dec
stc
jmp
into
ja
repnz
sbb
dec
pop
mov
bound
jbe
nop
push
sub
scas
mov
jbe
fwait
inc
jmp
mov
push
iret
xchg
iret
mov
mov
enter
int
inc
stos
fimull
or
in
ja
xorl
test
jne
and
mov
pop
xlat
adcl
nop
mov
jl
adc
out
dec
sahf
pop
push
inc
pop
inc
dec
inc
lcall
mov
jnp
je
and
xchg
nop
dec
mov
vsubpd
push
nop
fxch
pushf
jle
test
rorb
in
push
mov
adc
test
xchg
fld
icebp
adc
jp
mov
stos
nop
movsb
fsub
jmp
das
sbb
divl
fldt
nop
cmp
pop
dec
cmp
dec
fistl
mov
mov
sbb
mov
pusha
lock
lret
popa
test
push
leave
lret
xlat
test
mov
loope
ror
cmc
push
orb
push
lods
ja
and
xchg
push
js
mov
xor
nop
insb
mov
and
xor
mov
insb
test
ret
sub
add
cmp
pop
shlb
dec
test
cmp
xchg
sbb
test
and
les
sub
test
jp
push
xor
sti
ret
ror
inc
clc
fidivrl
pop
in
lret
movsl
stc
je
adc
jg
pusha
sbb
pop
daa
mov
out
scas
xchg
mov
in
cmp
or
mov
in
fs
lret
cmp
cmc
xor
inc
daa
pushf
test
pushf
pop
jne
pop
addr16
das
sub
stc
cmp
push
outsl
push
push
lods
daa
insb
div
adc
jae
fimuls
lods
ret
and
mov
lahf
adc
mov
test
out
xor
pop
lahf
and
pshufw
mov
test
push
pop
push
jae
mov
xchg
mov
adc
jae
lahf
inc
dec
mov
jmp
sub
in
lods
lods
cmp
and
hlt
fists
divb
fiadds
add
fisubrl
js
les
pop
pushl
xor
push
sbb
mov
inc
mov
pop
in
pushf
push
out
in
jle
int3
rcr
xchg
jmp
push
fbstp
xor
adc
cmc
sbb
sbb
lcall
dec
xchg
xchg
insl
inc
lret
sbb
rcrb
enter
mov
cmp
mov
cmc
cmpsl
cmpsl
cmpsb
pop
lea
lea
ret
adc
or
jae
sahf
in
mov
xchg
cmc
std
out
inc
and
xor
outsb
jmp
adc
je
and
jge
lea
dec
jns
inc
aam
fs
sti
fildl
gs
test
addr16
mov
xorl
test
xchg
clc
pushf
stos
mov
mov
test
lahf
mov
push
xchg
enter
out
ret
push
dec
pop
pushf
stos
aam
rcpps
ljmp
in
add
lods
lds
movaps
add
test
mov
ljmp
jle
aas
jl
fucomip
xorl
mov
imul
mov
push
sbbl
sub
mov
adc
or
dec
mov
lea
and
mov
negb
push
jno
sti
push
inc
enter
jp
enter
in
js
xlat
dec
cmp
inc
mov
out
mov
inc
sbb
sarl
dec
mov
scas
cmp
add
pop
int3
lcall
xor
repz
sahf
popf
pusha
fcmovu
mov
jp
out
jl
push
cltd
xlat
add
adc
inc
cmpsb
iret
lcall
push
jg
dec
or
fucomp
push
imul
push
mov
or
lahf
xchg
mov
dec
imull
idivb
cmp
fldt
movsb
ja
and
xchg
jno
xlat
out
cld
or
mov
test
pop
or
mov
adc
push
xchg
jne
int3
mov
stos
in
outsl
es
rcrb
test
jne
jg
adc
mov
mov
jb
outsl
mov
jecxz
daa
jb
adc
inc
les
add
jg
fstpt
and
dec
mov
decl
mov
repz
shlb
gs
gs
and
loope
mov
aaa
movsb
dec
add
pop
xchg
lock
sbb
test
mov
and
jne
stos
mov
mov
sbb
and
mov
jle
push
cmp
or
shll
jbe
jo
jne
lahf
dec
imul
sub
adc
sbb
std
push
lcall
xchg
jl
mov
fcom
ret
xor
jge
cmp
jns
fdivr
xor
sbb
dec
jge
in
aaa
enter
cmp
fidivrl
ret
inc
jbe
leave
fadds
adc
aas
clc
xor
stos
mov
insl
shll
mov
das
mov
cli
xor
hlt
pusha
mov
andb
jg
dec
lock
dec
sbb
mov
mov
addb
push
or
cmpsb
imul
pop
mov
cs
jecxz
nop
xor
mov
stos
lock
mov
push
mov
sbb
je
ljmp
push
sahf
mov
cmp
dec
test
js
mov
ret
jl
fildl
mov
xor
adc
shrb
xor
jno
dec
shlb
lock
aad
imul
or
xlat
xchg
hlt
push
dec
out
pop
xor
jns
popf
fsubl
mov
dec
ret
pop
outsb
movsb
cmpsl
jne
dec
cmp
dec
in
mov
outsl
pop
mov
xchg
stos
add
jbe
test
inc
lods
lea
iret
lock
imul
push
jp
jp
adc
mov
mov
std
or
mov
repz
sbb
mul
dec
pop
ljmp
mov
lahf
out
mov
inc
pop
and
inc
dec
xor
mov
sti
idivb
and
stos
call
leave
fwait
in
mov
sub
aaa
pop
popa
mov
inc
add
sub
movsb
pop
sbb
stc
dec
out
push
mov
fsubrs
xor
xor
int
cmc
leave
dec
add
ss
sbb
repz
mov
xchg
pushf
cld
daa
aam
dec
imul
into
int
les
mov
dec
daa
xchg
lcall
lods
xchg
mov
aaa
into
lods
hlt
movsb
adc
mov
fcmovu
nop
clc
testl
data16
loop
lods
fcomps
call
pop
arpl
ffree
fisttpll
or
fwait
mov
xor
jle
pop
ds
mov
test
mov
popa
cmp
fadd
inc
clc
rcrl
addr16
lods
cmp
test
js
out
jo
add
std
lods
cmp
or
dec
cmp
xlat
nop
sbb
scas
xor
orb
icebp
push
pop
sahf
jmp
test
sub
cli
cmp
cmpsl
es
add
push
mov
inc
pop
dec
dec
arpl
icebp
sbbl
addr16
sub
cmpsl
shrl
fsubl
adc
push
popf
fildll
mov
loope
mov
loope
cmpsb
loop
or
cmp
insl
jge
mov
adc
dec
lods
jo
pushf
inc
jp
sub
cmpsb
lea
lock
decb
iret
mov
jmp
mov
outsl
out
test
adcb
push
inc
push
mov
add
and
adc
mov
ja
dec
loopne
pop
inc
jbe
rorb
shlb
push
in
daa
sahf
fstpl
stc
mov
cmc
adc
push
mov
jbe
pop
fwait
gs
bound
sub
adc
jne
and
add
rcll
cmp
iret
add
pop
cmp
ss
mov
into
mov
or
mov
push
or
or
pushf
dec
nop
sahf
mov
pop
push
inc
popf
jmp
ret
popf
imul
jbe
inc
cmpsb
jmp
mov
or
stc
inc
sahf
jno
int3
mov
inc
cltd
jo
enter
outsb
or
xchg
pop
add
adc
enter
sub
and
nop
jbe
sub
fs
pop
popa
sub
lods
jae
insl
sbb
shlb
mov
mov
fiaddl
cmpsl
mov
stc
mov
test
loope
nop
xlat
sub
bound
or
outsb
add
sbb
inc
lods
cmp
movsl
or
jnp
sub
fcoml
inc
jae
mov
lret
and
sbb
seto
inc
mov
movsb
fdivrl
push
sub
lock
mov
rcll
cmp
andl
xlat
aas
cltd
cwtl
sbb
pop
mov
add
pop
test
xlat
dec
mov
pop
movsb
mov
sbb
mov
fisubrs
and
sub
rclb
cmpsb
fs
fdivrp
adc
inc
pop
xor
mov
push
out
mov
push
inc
xor
insb
outsb
shlb
or
pop
xchg
adc
sbb
lock
inc
sahf
mov
out
dec
into
cmp
jmp
testb
or
mov
insb
incl
lcall
clc
mov
pop
movsl
mov
jl
lret
xor
push
loopne
jbe
test
js
out
jb
mov
leave
fneni(8087
hlt
mov
lcall
dec
cmp
add
adc
jb
ss
pop
xor
ljmp
mov
add
test
js
inc
icebp
jp
or
outsl
ret
ret
cmpsb
lahf
fildll
js
xchg
adc
ja
testb
dec
or
stos
outsb
pushf
imul
jae
cmc
fildl
xchg
ljmp
cmp
jnp
or
pop
dec
scas
or
addr16
into
rorl
out
push
lods
push
and
dec
or
out
and
addr16
mov
adc
test
repz
adc
cmp
pop
or
sahf
ss
push
or
decb
push
jmp
mov
fidivs
in
and
mov
mov
cmp
cmpsl
loop
mov
dec
dec
xchg
popa
or
stos
aad
xorb
adc
mov
sub
inc
out
cltd
jns
sbb
push
int
je
out
jne
mov
loopne
jmp
or
and
xor
cli
mov
dec
ja
loop
inc
jnp
test
insb
mov
sub
test
aad
xchg
cmp
inc
rcl
sub
sub
sub
fldenv
and
sbb
jno
xchg
mov
and
lahf
dec
stc
mov
pop
imul
sub
icebp
sti
int
daa
aaa
dec
adc
fstpl
sarl
mov
into
popa
in
lahf
test
dec
out
lret
pop
aad
mov
jle
loopew
mov
adc
adc
pop
mov
out
cld
or
push
xor
xor
inc
jmp
jno
mov
lcall
mov
jl
je
fdivs
in
arpl
lea
dec
cli
leave
jb
sbb
int
xchg
test
and
call
scas
push
xor
mov
xchg
fisttps
bound
dec
xchg
bound
gs
cld
cli
int3
cmp
pop
leave
sbb
lret
pop
ret
or
push
out
mov
pop
call
mov
mov
jb
std
test
cmp
pop
push
sbb
lcall
xchg
bound
lahf
sbb
repz
call
push
add
mov
pop
adc
mov
sub
or
jns
push
push
notl
sti
fnstenv
mov
stc
pop
inc
jbe
adc
out
or
in
ja
pop
jno
inc
pop
mov
dec
lods
popf
xchg
inc
movsb
mov
lds
fsincos
and
imul
jne
shrl
ds
mov
inc
jbe
mov
aad
mov
fsub
fdivp
gs
mov
nop
xor
mov
ficompl
jp
popf
push
popf
addr16
testb
shr
sbb
cwtl
push
ja
mov
jbe
lahf
fmuls
inc
adc
out
mov
loopne
dec
sbb
mov
add
hlt
jmp
out
insl
sbbb
jecxz
jg
hlt
pop
inc
xor
in
addr16
aam
mov
push
sub
fldenv
das
pop
pop
jg
lock
mov
icebp
xor
and
jle
sub
shll
loopne
sbb
sahf
adc
lds
repnz
iret
pop
sub
inc
fisubrl
test
aaa
aad
test
jne
in
cwtl
jmp
nop
or
cltd
jp
push
xlat
dec
outsl
nop
lods
xor
cs
dec
je
jp
jnp
push
idiv
cs
mov
clc
push
mov
add
cmp
and
ret
mov
push
lock
fwait
mov
dec
in
jno
movsl
ljmp
int
mov
ds
mov
ja
push
hlt
pusha
xor
insb
jae
cmp
fisubl
ret
jl
scas
rcll
iret
inc
in
cmc
push
inc
jo
cmp
fadd
cmp
push
pop
je
push
dec
dec
mov
xchg
popf
pop
sbb
add
icebp
int3
pop
popf
jl
fsubl
lea
les
test
popa
or
fmulp
sahf
ds
mov
jmp
jle
sahf
clc
ds
lret
adc
pop
add
ret
daa
mov
scas
scas
inc
fisttpll
xchg
lock
fwait
aaa
movsl
or
adc
out
ds
nop
hlt
pop
sub
sub
xor
or
out
pop
push
cmpb
cld
movsl
sahf
mov
or
or
mov
ss
and
pop
fxch
push
ljmp
push
into
mov
dec
lea
push
stos
rcrb
dec
xor
add
cmp
xor
call
jl
lret
in
scas
add
jae
cmc
mov
push
movsb
push
push
sbb
push
or
jb
cmp
std
inc
and
mov
xor
jmp
xchg
repnz
into
fs
testb
dec
loope
sbb
test
xchg
iret
jecxz
mov
adc
or
cmpsl
ss
es
pop
push
inc
clc
popf
mov
cli
mov
lcall
mov
lret
sub
add
ret
lds
data16
inc
shl
dec
les
mov
xchg
push
rcrb
jne
shll
fstl
xchg
pop
mov
xchg
sub
hlt
rorb
lock
pop
mov
arpl
cmp
add
dec
cmpl
dec
mov
inc
push
iret
mov
imul
push
push
incl
add
lret
cmp
dec
test
xchg
xor
and
dec
push
push
cmpl
inc
dec
movb
add
scas
sbb
js
lret
pcmpgtw
data16
mov
ret
mov
dec
mov
add
pop
int3
pop
pop
sbb
clc
sub
adc
cwtl
push
push
cmp
cmpb
and
mov
repnz
pop
out
pop
dec
fiaddl
adc
xor
insl
mov
or
lcall
xor
fists
add
push
push
push
insl
xor
and
mov
xor
adc
sub
fstpl
push
enter
popa
jae
add
cmc
cwtl
cmpsl
or
mov
cmp
ja
insb
out
stos
push
xchg
lahf
aad
shl
jp
sahf
pop
lret
push
xor
mov
push
hlt
dec
mov
push
push
inc
mov
roll
or
dec
cmp
mov
js
out
add
xchg
xor
push
aad
outsb
mov
xchg
sub
push
es
das
je
stos
out
or
cs
mov
and
jo
divl
push
mov
jnp
add
popa
daa
push
outsl
dec
pop
push
faddl
data16
inc
mov
inc
stos
adc
fstps
repnz
sbb
inc
jne
imul
out
xchg
pop
aas
xchg
push
cmp
mov
lret
push
sub
sub
aad
loopne
mov
stc
mov
and
mov
xor
in
outsl
insb
je
js
lret
cmp
push
cmp
pop
sbb
push
daa
xlat
enter
push
out
sbb
jecxz
push
sbb
xor
ja
ja
mov
or
jg
adc
repz
jge
mov
mov
sub
lds
xchg
sahf
xchg
mov
clc
cli
or
outsl
nop
xchg
xor
xor
push
les
mov
mov
loopne
daa
test
xchg
add
out
test
or
pop
aaa
push
jmp
add
mov
fldenv
push
cltd
out
xlat
inc
jo
mov
sbb
fucomip
adc
enter
movsb
enter
xchg
mov
data16
movsb
and
gs
lcall
mov
stos
xor
loopne
mov
inc
lods
sub
push
out
mov
sub
mov
inc
sbb
adc
add
sbb
pop
xchg
or
es
pop
test
fdivl
pusha
pusha
lret
pop
test
and
cmp
xchg
out
stos
and
pop
inc
or
pop
or
mov
mov
xor
inc
cltd
dec
xchg
xchg
adc
pop
sub
push
imul
inc
xchg
flds
push
ss
dec
popf
enter
sub
cmpsb
outsb
cmp
mov
dec
mov
or
cmpl
shlb
and
sbb
aad
xchg
jnp
adc
push
or
cmpsb
icebp
xlat
pop
mov
test
cmp
icebp
sub
in
mov
xor
jle
mov
mov
jl
or
rorb
adc
btc
mov
int
push
aam
or
and
stos
jg
test
xchg
pop
mov
outsb
and
jb
mov
xor
push
or
add
mov
push
movd
js
gs
xchg
in
or
lods
iret
out
insl
repz
rclb
mul
fildl
test
faddl
pop
xchg
add
insl
lcall
xor
dec
inc
xchg
movsb
aaa
push
loopne
xor
fxch
cmpsb
mov
mov
iret
jecxz
rcrl
out
jo
push
subb
mov
and
je
imul
stc
adc
lcall
inc
pop
inc
xlat
rdpmc
das
xor
jge
movsl
mov
dec
or
sub
mov
pop
fiaddl
mov
daa
leave
mov
ljmp
push
pop
bound
dec
inc
cld
pusha
loope
or
movsl
nop
dec
lcall
sbb
sbb
andb
loope
pop
lods
sub
in
cmc
cmpsl
lods
or
jmp
push
xor
dec
dec
cs
add
mov
call
push
pusha
inc
lcall
dec
cwtl
xchg
mov
fiaddl
cmpsl
xchg
insb
jbe,pn
push
or
xchg
inc
xchg
pop
add
andb
bound
cmp
popf
dec
insb
cmc
cltd
xor
push
mov
sub
sahf
shrl
test
lods
repnz
mov
int3
daa
lds
insb
stos
lds
fildll
adc
pushf
sbb
out
jge
add
or
cli
jge
subl
ljmp
xchg
mov
or
cltd
idivb
sti
enter
mov
stc
hlt
xchg
mov
shlb
cmp
in
js
pop
mov
outsl
mov
pop
xor
stos
stc
dec
pop
in
test
jp
inc
mov
outsb
lods
lret
mov
inc
iret
test
aad
jbe
or
push
insl
mov
dec
mov
into
jl
and
in
mov
mov
jno
rcrb
jo
jg
ljmp
call
jge
push
and
mov
cmp
rclb
nop
lret
pop
sbb
fistps
or
fsub
call
inc
pop
fs
int3
push
sbb
mov
jno
inc
sub
repz
dec
je
lcall
ret
inc
rorl
outsb
dec
dec
pop
or
or
int3
mov
rclb
ljmp
pop
stos
or
cld
jne
pop
fcoms
jp
sub
leave
add
mov
rolb
mov
and
sub
pushf
js
adc
push
aaa
add
das
rolb
cltd
jne
dec
xor
shll
mov
lret
jl
jbe
xchg
xor
cld
aaa
jle
arpl
stc
hlt
xchg
aam
popf
fisttps
mov
cmpsb
pop
pusha
pop
mov
xor
das
cmpsb
push
insb
adc
pusha
push
leave
add
xchg
pop
mov
ret
ret
xor
sbb
int3
leave
mov
xchg
outsb
rcll
out
sub
mov
mov
mov
sub
lahf
ss
dec
mov
push
dec
dec
pop
shl
or
lret
lods
jg
sarb
mov
push
jb
icebp
mov
leave
xor
loope
pop
cli
push
je
cmp
push
inc
int3
inc
out
incb
pusha
jae
in
jnp
fsubs
cmp
das
sbb
sub
push
jp
push
sti
outsb
popf
fwait
add
sarl
testb
sbb
clc
dec
xchg
mov
add
sub
test
stc
test
mov
sub
and
das
imul
sub
cmp
hlt
call
mov
ja
jne
inc
xchg
mov
or
fdivl
movsb
adc
push
lods
pop
movsl
cmpb
inc
icebp
pop
xchg
cmpsl
mov
pop
adc
xor
out
mov
test
popl
jo
inc
and
xchg
dec
xor
cmpsl
fiaddl
lea
add
sarl
pop
cld
pop
cmp
int
cmpsb
leave
and
dec
or
cmp
aam
pop
and
hlt
out
xchg
movsl
outsl
sub
and
and
in
and
and
dec
mov
sub
out
cli
aam
jp
adc
mov
sub
inc
ss
scas
mov
fdivrp
mov
sub
xchg
dec
sbb
jnp
dec
stos
push
loop
inc
pusha
clc
scas
cmp
gs
push
dec
aam
pop
sbb
sub
sub
loop
stos
jge
xchg
pushf
push
push
pop
sbb
fucomip
aam
js
sbb
jecxz
lret
aad
fdivp
inc
jp
sub
aas
inc
sbb
inc
cmpsb
jg
xor
popf
test
jnp
inc
xchg
lods
movl
xchg
std
xorl
shrl
cmp
rol
push
mov
in
and
leave
ffree
fimull
cmp
sbb
cld
mov
outsl
mov
mov
les
adc
movl
jle
adc
xchg
mov
insl
lahf
clc
jno
add
mov
pop
add
hlt
mov
test
jne
inc
cltd
mov
mov
aaa
scas
inc
shrl
orb
push
xchg
in
and
inc
fxam
lret
pusha
cs
add
xor
lcall
add
movsl
and
xor
push
push
cs
notl
xlat
fdivrl
mov
lahf
js
sub
aas
test
out
xchg
out
mov
outsl
dec
ret
fimull
dec
xchg
push
and
les
and
test
dec
xor
out
xchg
imul
or
xor
lret
mov
mov
repz
mov
jne
loopne
lock
daa
aas
sbb
test
fadd
sbb
repnz
adc
dec
dec
adc
xorb
xlat
add
mov
test
mov
xchg
or
xchg
bound
sub
inc
xchg
push
cmpl
mov
lods
ret
push
xchg
mov
mov
nop
lea
cmp
adc
ss
jp
push
movsb
arpl
xchg
fldl
cmpsl
rorb
ret
xchg
push
jbe
aam
dec
jmp
sub
inc
movsl
outsb
rcll
jo
sub
test
jecxz
and
inc
push
xorb
jl
sti
hlt
mov
popa
pop
adc
cmpl
pop
stos
andb
into
cmc
testl
lahf
mov
shrl
push
push
pextrw
mov
pop
rorb
jns
mov
and
dec
ficomps
mov
xchg
xor
xchg
mov
and
cli
pop
pop
pop
rcl
cmp
push
into
aaa
sti
pop
or
sbbl
sarb
enter
ja
pop
jge
push
je,pt
push
jne
xchg
jns
rcll
push
rolb
jb
dec
nop
div
adc
cmp
ja
lea
leave
push
aas
push
and
mov
test
lret
pusha
sbb
out
out
popa
jmp
int3
movsb
pop
jnp
push
movsb
dec
pop
ljmp
aam
or
inc
and
addr16
leave
push
mov
xchg
xchg
and
xchg
cmc
roll
fs
jo
pop
in
mov
xchg
jno
jo,pt
adc
loope
pop
sub
out
jnp
mov
mov
and
push
pushl
pop
mov
lcall
andl
sub
push
sahf
insl
sahf
daa
out
repz
mov
dec
shrb
adc
sub
clc
stos
push
adc
lcall
pop
xor
pop
mov
mov
int3
xchg
pop
daa
adc
fimull
addr16
xor
insb
mov
shr
xor
jns
pushf
sub
inc
mov
cli
xor
dec
js
rorl
lds
cmp
push
in
hlt
inc
add
cmp
and
xchg
push
or
ret
jbe
rorb
stos
cmp
nop
adc
pop
and
mov
call
imul
out
cmp
in
dec
xchg
sahf
add
mov
dec
pushf
mov
shrl
dec
xchg
mov
std
mov
xchg
xchg
jl
pusha
add
fs
xchg
fisttpll
cmp
xlat
movsb
adc
mov
ret
fbstp
jp
fadds
test
movsb
xor
adc
sar
lock
add
lret
js
sub
xchg
and
push
andb
mov
sti
jo
loope
mov
xor
pushf
lock
pop
or
stos
aad
inc
dec
jns
lds
shll
and
push
adc
outsb
mov
adc
ljmp
mov
in
loope
or
or
xor
xor
push
and
pop
movsl
shl
mov
ret
out
inc
cmp
popa
cmp
mov
rcrl
cmpsb
or
adc
xchg
rolb
test
mov
test
push
pop
sub
fistps
cmpsl
cmpb
div
adc
pop
pop
cmc
ret
pop
xchg
jmp
jae
dec
or
nop
repnz
mov
movsb
movsb
iret
adc
sar
add
inc
je
mov
mov
out
imul
lea
pop
dec
ds
fsubrs
insb
sbb
outsl
mov
lods
xchg
cmp
ja
inc
lods
and
subl
mov
mov
fisttpl
icebp
jno
lea
pop
mov
mov
fisubrs
addr16
cmpsl
into
cmp
fcmove
xor
adc
jo
push
push
add
fsubl
pop
mov
pop
outsl
jmp
test
jb
stos
bound
mov
das
in
inc
pop
test
shufps
fdivrs
imul
in
mov
pop
and
xlat
pop
dec
fcomps
bnd
mov
or
cld
subb
lock
out
test
scas
data16
xchg
and
mov
push
and
iret
cmpb
add
and
adc
mov
push
and
inc
loop
push
lcall
icebp
pop
scas
icebp
push
and
in
sbb
sti
mov
sub
inc
inc
mov
mov
adc
cmp
jge
fcomip
cltd
shlb
mov
jl
test
ljmp
lock
and
insl
push
out
jge
mov
cmpsl
mov
lds
dec
inc
clc
orl
cmp
mov
shll
mov
inc
fnstenv
jb
sti
adc
dec
testb
push
cmp
pop
aas
and
add
dec
add
ja
mov
dec
repnz
adc
in
insb
mov
inc
push
adc
sub
fwait
subb
inc
xchg
cmpsb
addb
jge
jmp
sub
xchg
jl
adcl
gs
lcall
fnstcw
push
adc
sbb
movsl
push
push
test
ret
and
nop
loope
call
shll
adc
daa
in
or
sbb
fistps
dec
mov
shlb
rclb
cmp
xchg
pop
cmc
dec
cmpsl
push
xchg
sub
dec
fcmovbe
jae
pop
inc
push
fiaddl
sbb
push
or
cwtl
sub
xchg
test
shrl
jb
std
sub
jae
dec
mov
mov
lods
jge
pop
mov
or
fmull
movb
mov
daa
lods
cmp
outsb
lcall
jl
test
hlt
mov
nop
mov
adc
add
iret
pop
icebp
or
in
into
test
into
cli
daa
in
jmp
mov
and
xlat
cmp
adc
out
xchg
in
adc
sar
and
loop
insb
ja
push
shll
fadd
fsubl
xchg
xor
inc
adc
sub
jp
sbb
or
or
cli
outsl
sub
push
aam
clc
inc
mov
dec
mov
mov
jae
push
jo
jne
push
mov
push
test
cmp
ret
mov
and
aas
subl
leave
shll
add
fadds
xchg
add
or
inc
mov
mov
aad
adc
movsl
fimuls
and
lcall
dec
mov
cmpsb
out
int
incb
dec
pop
sub
mov
rclb
sub
out
ljmp
adc
pop
cmp
lock
or
in
rorl
mov
repnz
xor
adc
repz
push
test
jo
shr
or
xor
cld
mov
mov
lret
gs
dec
jo
das
rcrl
mov
xor
mov
xor
or
jae
push
jo
faddp
add
in
mov
jnp
pop
subl
xchg
mov
icebp
outsb
clc
push
es
fiadds
ljmp
jnp
test
loopne
jbe
mov
cmp
mov
nop
pop
xor
pop
sbb
push
in
jmp
inc
aas
adc
mov
push
outsb
pop
out
rcll
dec
lret
addr16
pop
lret
roll
mov
arpl
into
inc
mov
mov
stc
ss
aas
in
cs
mov
std
fcmovu
inc
jl
mov
jmp
sub
testl
xchg
and
call
mov
ljmp
and
or
scas
add
push
xor
leave
cmp
mov
push
push
test
sbb
movsb
insb
hlt
xor
aam
sbb
outsl
inc
loop
nop
xor
into
shll
mov
add
mov
into
sbb
cwtl
shll
adc
aaa
cmp
clc
inc
sub
xchg
adc
clc
mov
add
sbb
xor
mov
push
int
xchg
enter
pop
sbb
es
cmp
clc
popf
push
mov
xor
lds
cld
js
xchg
push
pop
cmp
mov
test
xor
mov
dec
mov
insl
sbb
xor
imul
in
and
js
jo
in
inc
cmp
aad
cwtl
mov
rol
gs
and
ror
push
jb
ret
sbb
outsb
jge
pop
addl
in
cltd
xor
push
testl
or
jns
xchg
fwait
cmp
dec
imul
jbe
movsl
adc
dec
jge
movsb
cmp
scas
inc
add
xlat
mov
jge
fstps
cmp
xor
sub
jnp
rcll
jne
test
jnp
aad
pop
ret
push
jp
jno
xchg
mov
jbe
out
dec
je
lcall
cmc
xchg
cmp
repz
jae
repz
cmp
push
fcmovne
sub
mov
or
loop
mov
cmp
xor
mov
and
aas
das
sbb
jne
cmp
cltd
xor
xchg
loop
push
in
mov
daa
add
mov
sbb
pop
sbb
mov
sub
shlb
jae
mov
enter
ror
mov
lds
hlt
shrl
ja
cmp
jmp
dec
in
clc
jle
push
push
rolb
scas
or
xchg
mov
jecxz
xchg
push
imul
fld
mov
shlb
addb
fcom
popa
mov
fbstp
cwtl
cmp
jnp
dec
push
add
filds
lret
sahf
adc
lcall
fldt
push
xchg
ret
adc
push
xchg
gs
cmpsb
fsubrs
lret
cmp
mov
adc
cmp
je
sbb
call
jne
push
xchg
inc
push
sahf
pop
sub
fwait
inc
jmp
fistps
mov
ljmp
xchg
lcall
mov
and
jae
int3
dec
or
jg
sub
mov
cmp
xor
out
mov
aas
in
pop
jp
lret
mov
popa
out
xor
sub
mov
sbb
xor
stc
or
mov
pop
pop
pop
sub
sbb
insb
fwait
dec
leave
int3
push
repnz
std
inc
insb
xor
push
imul
fwait
mov
nop
inc
add
pop
and
xchg
scas
inc
and
clc
mov
pop
and
sub
imull
insb
fadds
jno
int3
dec
or
xor
aas
pop
xlat
stos
jae
jnp
repnz
das
or
mov
push
push
fnstsw
iret
movsb
xor
dec
bound
xlat
arpl
mov
mov
sub
mov
cmp
or
loopne
or
dec
out
push
lea
mov
sbb
xor
and
popf
push
fbld
in
xor
cmp
push
scas
adc
notb
xor
or
scas
push
test
mov
fidivl
arpl
rorb
sbb
ds
lods
pushf
stos
movsl
test
data16
inc
sarl
shll
in
scas
loop
jle
dec
int3
bound
push
in
dec
mov
pop
mov
into
jp
mov
and
lods
xchg
jno
ss
je
xchg
divl
rcll
cmp
push
pop
addr16
cmpsb
push
jmp
ss
jne
fnstenv
mov
popf
in
inc
cmc
xchg
filds
lcall
pop
rcll
setg
scas
outsb
pop
popa
ljmp
fsubrp
sbb
dec
lret
das
xor
scas
idiv
addr16
repz
fdivrs
push
pop
dec
and
sub
cmpsb
mov
fidivs
push
mov
xlat
rcrl
jbe
inc
in
in
out
dec
xlat
das
icebp
sub
out
lods
movsl
js
jb
in
daa
xor
sub
cmp
or
jno
lcall
iret
test
push
mov
xchg
or
pop
jecxz
push
stos
mov
jge
xor
mov
push
lahf
lods
xchg
push
mov
fsub
int3
sahf
cltd
inc
int
xchg
icebp
fwait
jmp
aad
jae
lcall
pop
jge
jbe
jb
imul
and
inc
pop
std
call
push
push
shlb
mov
dec
inc
pop
push
add
mov
ds
arpl
enter
enter
scas
mov
push
fildl
xchg
add
cmp
fsts
iret
xchg
adc
xchg
jp
testl
test
cs
stos
lahf
xchg
add
das
popa
inc
sub
jl
iret
pop
xchg
cmp
cmp
push
jmp
lock
aam
inc
sub
inc
push
out
mov
sbb
mov
xchg
fs
icebp
sub
mov
xorl
pop
pop
adc
das
dec
jmp
inc
jno
sub
cmp
cmpsb
in
jmp
or
outsb
loopne
add
divl
lcall
dec
mov
inc
push
lds
pop
mov
push
ja
addr16
push
hlt
movsb
cmpsb
js
xrelease
cmpsl
lods
js
push
test
cwtl
mov
or
jne
popf
fsubrp
xchg
cs
jb
sbb
xor
daa
sub
into
cli
mov
inc
dec
xchg
movsl
aas
xor
pusha
pusha
out
stos
ljmp
mov
bound
test
dec
pop
in
outsl
ret
cli
out
mov
mov
imul
and
icebp
mov
or
sbb
jl
mov
sbb
jge
loopne
into
or
mov
xlat
aad
mov
xor
stc
jne
loope
mov
imul
xlat
in
mov
insl
xchg
shlb
jecxz
add
xchg
leave
call
mov
outsb
xor
fisubrl
daa
lods
insl
aaa
push
inc
fwait
rcrl
pop
and
rcrl
push
enter
inc
inc
cs
mov
mov
loopne
ds
mov
fdivrs
cltd
pop
stc
cmpsb
push
insb
stc
or
mov
cld
push
lret
xor
mov
cmp
sahf
imul
popf
push
or
pop
shrb
test
add
and
dec
and
pop
lret
je
insl
lea
mov
xchg
adc
push
jae
sbb
mov
jb
popa
or
insl
or
push
or
add
scas
mov
push
push
pop
sub
push
repz
lret
pop
pop
ror
xchg
mov
lods
add
stos
sub
pop
dec
lret
arpl
imul
or
fmull
mov
jp
cmc
inc
ljmp
pop
push
stc
in
popf
fcoms
sbb
dec
push
insb
das
aaa
and
dec
aas
int3
ja
mov
and
movsb
lods
call
sbb
or
loop
shlb
movsl
mov
js
xchg
lods
adc
pop
lods
fsts
fs
fimull
in
jl
sub
in
adc
inc
pusha
mov
lahf
inc
jmp
in
add
jb
dec
cmp
dec
mov
fisttpll
push
daa
ja
cmp
sub
jmp
leave
jle
aas
stc
dec
dec
lds
jecxz
int
in
in
sub
popf
lods
lds
add
dec
sub
shl
adcl
xchg
cmp
mov
pop
jle
jge
add
outsb
mov
pop
fwait
movsb
sub
mov
pop
cwtl
push
jo
cmpsb
sbb
push
cmp
dec
and
jne
and
lea
fstl
sbb
pusha
pop
das
insb
pop
sbbl
aas
mov
jno,pn
imul
in
or
pop
and
adc
cld
sbb
xor
push
cwtl
mov
mov
dec
shll
jo
sbb
pop
push
mov
iret
mov
push
xchg
fdivrl
xchg
mov
leave
pop
loope
imull
arpl
jnp
push
shll
add
pmulhw
mov
dec
fucomip
in
adc
mov
aas
add
inc
jnp
lock
jae
into
mov
cmp
dec
cmp
xchg
xchg
cmp
add
push
push
inc
push
inc
cmc
dec
jg
inc
pushf
mov
clc
lcall
xor
subb
pusha
xor
mov
mul
xchg
repz
add
insl
adc
shrb
loopne
cltd
sbb
mov
mov
cmc
sub
stos
xchg
ret
fisubs
cmp
ss
inc
add
jp
es
xchg
les
mov
int3
out
lret
jp
fdivrl
sub
mov
sahf
call
rorl
loop
mov
lea
inc
in
mov
maxps
inc
mov
mov
lret
clc
add
cmp
inc
pop
sbb
mov
mov
inc
cmp
scas
enter
and
out
leave
mov
push
xor
cmp
pop
divw
dec
sub
lahf
icebp
movsl
sub
data16
push
push
subl
adc
sub
xchg
iret
mov
jecxz
mov
xchg
or
sbb
push
mov
pop
jl
dec
jbe
das
add
mov
fs
inc
push
pushf
inc
into
int3
popf
cli
and
add
xor
sbb
test
fdivrl
jae
sbb
nop
test
arpl
mulb
dec
aad
inc
int3
sti
fisttpll
dec
dec
push
adc
mov
add
loope
cld
xor
insl
rcrb
inc
shlb
mov
pop
mov
push
enter
cmp
jge
mov
xor
addr16
je
inc
inc
mov
clc
xor
xchg
rcrb
sarb
test
cltd
mov
lret
mov
sub
faddl
rorl
into
fs
fsts
pop
hlt
fstl
fidivrs
sub
xlat
inc
xchg
icebp
or
push
movsl
xlat
cmp
test
jl
jecxz
in
xchg
nop
bound
jmp
dec
nop
clc
test
dec
dec
shll
mov
xchg
or
mov
dec
test
inc
cmp
jns
cmpl
dec
or
cmp
xchg
xchg
int
loopne,pt
xor
out
xor
dec
aam
arpl
addr16
jl
xor
popa
or
cmp
sar
push
push
incl
xor
xchg
test
mov
out
jb
push
mov
daa
push
cmp
xor
lcall
jae
aam
add
int3
sbb
pop
cmpb
lods
xlat
shrb
cld
jecxz
cli
sahf
mov
loopne
in
fwait
add
mov
aad
adc
lods
adc
push
shrl
mov
testl
push
test
mov
jno
mov
lcall
xchg
sbbb
xor
sub
push
lret
scas
inc
loop
sub
push
in
das
mov
mov
ficompl
aam
pop
test
movsb
add
pop
insl
rol
outsb
mov
jns
in
mov
pop
pop
jae
shl
mull
mov
push
cmpsl
sbb
shll
in
rcl
in
hlt
repz
lds
mov
stos
pop
push
lahf
std
jae
xor
ljmp
push
scas
push
sahf
xchg
mov
popf
dec
mov
add
jmp
mov
clc
popa
xchg
icebp
psubsw
jno
aaa
xchg
mov
dec
xchg
test
xor
sbb
and
lods
jp
rcrl
mov
sub
or
imul
ljmp
stc
js
push
cltd
mov
test
out
sbb
adc
scas
xchg
cmc
hlt
adc
lods
xor
or
rep
fwait
inc
mov
fwait
daa
incb
pop
scas
cli
jns
cmp
out
out
out
insl
cmpsb
repnz
xor
jnp
jmp
add
inc
daa
lods
lock
dec
les
in
ja
mov
pop
call
xchg
xchg
daa
clc
push
data16
fnstsw
add
dec
es
or
xor
ret
pop
xor
mov
movsl
xchg
int3
or
mov
mov
add
mov
fidivrs
mov
cmc
mov
lods
into
lea
push
leave
push
push
fwait
enter
lret
sbb
pusha
mov
xchg
mov
pushf
enter
es
in
pushf
add
icebp
dec
inc
and
leave
jp
dec
popf
ds
mov
and
sti
cmp
aam
nop
pop
aas
push
and
pushl
or
fsubr
shlb
mov
inc
and
xchg
call
lcall
push
xchg
es
fisubrl
rcl
pop
push
jl
jae
adc
sub
or
jno
xchg
fwait
out
sub
push
xchg
or
inc
frstor
xchg
hlt
inc
push
cli
enter
sarb
mov
shrl
scas
insl
pop
mov
or
cmp
inc
xchg
lock
inc
inc
and
lock
mov
cmp
sub
cs
sub
ja
push
push
inc
int
test
jp
push
outsl
add
mov
mov
sahf
mov
lods
jl
mov
xchg
loop
rcrl
dec
test
lock
lcall
mov
sbb
pop
push
sub
aas
push
or
or
inc
std
and
and
mov
add
es
out
std
xchg
xchg
cmp
mov
fwait
xchg
pushf
dec
add
xchg
or
imul
out
fsub
mov
mov
push
jp
push
andb
mov
sub
cmc
int3
enter
mov
sub
sbb
cmpsl
arpl
lds
cmpsl
fstpt
adc
sub
dec
stos
call
setnp
les
scas
jl
mov
dec
insl
out
jnp
sub
xchg
aas
lret
fsts
into
fmuls
movsb
pusha
es
adc
dec
jmp
jl
cmova
enter
fidivl
xchg
sahf
aas
test
rcll
jo
mov
push
mov
in
xchg
dec
xchg
inc
cmp
movsl
dec
push
mov
in
mov
pop
adc
sub
push
sbb
mov
push
dec
jmp
cli
adc
cmp
sbbb
fwait
sbb
pop
mov
mov
test
push
dec
int
dec
lcall
mov
in
sub
inc
lds
xchg
shl
push
ja
pop
push
pop
sarl
cmpsb
outsb
sarl
int3
fs
das
mov
or
and
cmc
mov
sub
mov
bound
int
ja
adc
mov
outsb
xor
icebp
adc
repz
push
mov
xor
aas
adc
jae
nop
cmpsl
xor
test
pop
inc
jo
sbb
pop
cld
xchg
add
xchg
aas
push
data16
leave
xor
shl
shl
push
push
and
cltd
mov
pop
imul
add
insl
pop
lret
out
ds
push
repnz
pop
jle
loopne
pop
xor
ud0
xchg
aam
ficompl
dec
fcoms
dec
jns
daa
mov
out
xchg
dec
les
subb
jle
mov
xchg
jb
xchg
adc
sbb
pop
cs
mov
data16
scas
push
int
jne
daa
xchg
dec
aam
scas
jp
jl
ret
mov
dec
xchg
ss
jbe,pt
imul
pop
cmpsb
mov
add
test
ljmp
inc
and
pop
mov
mov
shlb
testl
and
iret
adc
jno
or
cmp
push
movsb
cmp
sub
insb
cmp
pop
xor
sub
mov
mov
divl
fdivl
push
enter
movsb
clc
push
jg
cwtl
pop
cmpsb
jbe
lds
or
sbb
xchg
aaa
insb
dec
cmp
daa
sub
mov
imul
or
mov
mov
mov
push
and
cmpsb
fwait
setne
lcall
fs
cmp
int3
jb
es
or
xor
mov
fnstsw
add
sbb
stos
lods
movsb
jge
pop
call
test
fcomps
and
mov
mov
fnsave
aas
js
clc
push
or
test
dec
in
mov
mov
stos
fildll
test
daa
add
cmp
ja
xlat
stos
push
inc
pop
ja
jnp,pt
mov
faddl
cs
aas
movsl
es
dec
xchg
int
pop
cwtl
aad
adc
out
data16
mov
nop
or
arpl
stos
aad
or
movsl
xor
mov
in
xor
lock
loop
aad
and
jp
inc
jecxz
fnsave
jb
and
jg
sub
sbb
xchg
sar
daa
rclb
enter
mov
push
pop
fmul
ss
out
subl
aad
in
xchg
sbb
sbb
or
scas
scas
mov
outsl
mov
jns
ror
jo
xor
sbb
idivb
sub
push
cli
lcall
sub
sbb
pusha
xor
test
bound
movsb
aad
iret
mov
shlb
push
es
add
xchg
xor
sbb
mov
push
xchg
mov
repz
orl
sbb
cli
mov
outsl
cld
pop
dec
xchg
cli
adc
cmp
sbb
lea
das
arpl
xchg
mull
cli
out
inc
mov
orb
sub
xchg
test
sbb
insb
das
add
jg
ljmp
jne
lcall
testb
xchg
adc
jmp
lods
sbb
mov
mov
or
push
leave
addb
and
faddl
lds
push
mov
shlb
xchg
or
cmp
jne
sbb
adc
push
fdivr
rcrb
popf
or
fs
push
and
xor
gs
rol
pop
rcrb
xor
add
jae
lea
push
aad
cld
stos
xchg
add
xchg
jge
cmp
fstpl
imul
lahf
ds
ficomps
ficoml
arpl
jl
add
lahf
ljmp
loopne
out
lret
mov
out
ja
int3
aad
loope
or
fsubrs
mov
pop
mulb
das
out
push
pop
sti
jge
jb
loop
test
dec
xchg
push
addr16
push
cmc
sahf
add
stos
rcl
or
adc
mov
xchg
aas
pop
mov
jo
cmp
ja
data16
fcomps
sbb
cmpsb
leave
adcb
adc
dec
fdivl
inc
mov
sti
nop
iret
insb
imul
imul
mov
push
leave
sub
adc
lret
xorb
sub
lcall
jp
pop
in
cmpsb
pop
xchg
pop
or
jp
clc
movups
andl
idivb
aaa
daa
imul
leave
stos
arpl
xchg
add
push
adc
mov
jns
dec
jnp
les
call
jecxz
je
ljmp
dec
and
pop
in
roll
push
cltd
movl
pop
pop
push
cwtl
sbb
pusha
adc
test
lock
mov
dec
or
mov
pop
jno
mov
xor
nop
out
arpl
aad
xchg
inc
push
bnd
push
pslld
mov
push
jmp
dec
mov
adc
mov
in
mov
cltd
in
mov
ret
mov
xor
cmp
je
daa
cltd
nop
test
sub
mov
pusha
and
rcrl
outsl
pop
and
sbb
push
push
fwait
movsl
cmpl
and
sub
mov
in
fstps
mov
sbb
cmp
mov
sub
and
cmp
cld
jbe
aas
or
gs
enter
pop
xchg
pop
pop
je
xchg
mov
shrl
in
dec
mov
sub
ds
fadds
dec
fisubs
and
mov
ror
mov
inc
andb
dec
inc
fimuls
pop
mov
aas
pop
push
sub
adc
add
adc
repnz
mov
inc
mov
sub
mov
aaa
pop
shl
je
xchg
out
les
jnp
movsb
testb
rolb
xor
jno
aaa
out
lcall
cmp
xchg
jecxz
xchg
and
mov
pop
insb
mov
mov
bound
pop
fstl
clc
jns
stos
pop
jno
sbb
push
adc
call
scas
test
mov
fstl
popl
sarb
movsb
sub
push
push
pop
and
mov
sbb
cs
into
ja
rcll
mov
pop
jno
in
pop
clc
xor
dec
movsl
adc
push
pop
call
cmp
adc
ja
cmc
push
das
js
cld
push
loop
pop
jae
push
jl
int
or
lods
jg
and
pop
jns
adc
sub
jo
out
xchg
jle
mov
mov
push
lret
sarb
int3
call
xor
jmp
cmp
mov
xlat
ja
mov
nop
aas
stos
add
push
sbb
movsb
dec
in
push
push
or
sub
sub
lahf
ret
or
popf
mov
push
jns
sbb
xchg
mov
pop
daa
cmc
adc
dec
pop
add
test
jae
mov
adc
shrl
data16
inc
subl
fcoml
mov
cld
ja
iret
test
and
push
pop
push
lock
add
mov
rcr
iret
sbb
inc
cmpsl
popf
aam
pop
inc
movsb
xor
fxch
pop
and
lea
adc
popa
adc
inc
or
add
pop
cmpsb
out
aaa
jp
aam
ljmp
dec
pop
fsubp
cmpsl
mov
dec
inc
jne
pop
xchg
shl
stos
xchg
addl
mov
mov
fsubp
fs
cmp
or
add
mov
jne
adc
dec
lret
push
dec
shl
dec
les
dec
jne
roll
cmp
push
movsb
push
je
cli
popf
es
enter
mov
adc
jl
repnz
add
hlt
push
enter
orl
aam
cld
insb
xchg
lock
adc
call
push
xchg
push
mov
rolb
ret
cmp
out
jmp
pusha
movsb
adc
and
mov
xchg
rcrl
fisubrl
jns
loop
orb
mov
test
mov
cmp
inc
add
cmc
pop
mov
lret
xor
cltd
fwait
push
add
dec
mov
jb
sub
out
mov
in
cmp
shrl
sub
push
arpl
mov
leave
in
pop
xlat
aad
xor
cwtl
adc
shrl
push
shll
daa
dec
push
push
jo
dec
stos
mov
add
cmpl
incl
mov
scas
push
daa
out
addb
jno
stc
push
lods
dec
pop
hlt
testl
insl
add
lcall
cld
pop
sub
ret
jns
cmp
and
jne
sbb
in
lahf
pop
pushf
sbb
scas
cmp
mov
mov
adcb
call
ja
lds
ljmp
sub
jne
inc
or
adc
mov
jbe
jmp
dec
dec
in
fdivrl
or
add
loopne
jae
pop
es
jge
in
ljmp
xchg
mov
aaa
out
mov
xchg
mov
rorb
fidivl
cmp
pop
pop
jg
xlat
fistpl
add
ret
inc
inc
scas
push
rclb
inc
loop
adc
or
lret
fs
push
rol
add
in
add
mov
frstor
sbb
lcall
outsb
fcomps
lret
scas
ja
mov
push
mov
sub
sub
fldl
sub
and
and
lds
ss
stos
imul
push
rcrl
sbb
mov
pop
shrb
insl
ret
cmp
in
jge
push
testl
and
mov
test
push
or
es
cmpsl
mov
xchg
shrl
inc
mov
xchg
pop
sub
lret
xchg
xor
inc
pop
jb
jmp
hlt
jmp
pop
lret
inc
mov
inc
cmpsl
pop
push
mov
cmp
adc
scas
out
mov
sbb
es
lds
pop
xchg
jns
fdivrl
sahf
imul
ficomps
movnti
pop
shll
push
mov
jb
and
or
es
out
ret
stc
mov
cld
jecxz
dec
jecxz
test
data16
mov
shrb
add
inc
int3
pop
adc
mov
mull
movsl
jmp
xchg
add
sub
test
sahf
jae
dec
or
mov
and
int
xchg
testl
aad
cmp
stos
cmpsl
bound
lods
mov
pop
repnz
xchg
xchg
outsl
ds
cwtl
lret
shlb
jle
or
pop
xchg
xchg
cmp
test
das
and
ret
pop
push
jmp
jl
lea
or
ret
jae
loopne
dec
out
scas
cmp
ds
dec
imul
xchg
insl
pop
inc
aad
and
pop
fdivr
in
xchg
iret
pop
testl
icebp
jp
bnd
stc
or
jmp
adc
push
pop
iret
stos
sti
pop
adc
dec
je
and
imul
add
movl
pusha
cld
loope
ret
cwtl
adc
add
dec
add
mov
sbb
es
pop
pop
xchg
subl
mov
mov
sub
imulb
or
fisubrs
jp
movsl
pop
flds
fldcw
mov
cmp
cmp
repnz
pop
xor
bound
cmp
mov
pop
xchg
lock
push
adc
in
repz
clc
mov
cmp
mov
in
fsubrs
int3
aaa
movsl
dec
xorps
pushf
cmpsl
mov
out
nop
sarb
sbb
xchg
jp
loopne
mov
pop
mov
xchg
mov
and
xchg
nop
or
xchg
aam
mov
jge
sbb
gs
rclb
sub
cwtl
xor
lret
test
repnz
push
add
add
fnstenv
mov
xor
fs
adc
in
icebp
adc
lea
cs
btc
dec
mov
cmc
sbb
adc
mov
and
jg
fisubl
add
push
fldcw
lock
add
sbb
sbb
into
pop
out
and
xchg
mov
push
out
push
outsl
mov
mov
pop
in
in
mov
js
dec
and
mov
and
and
nopw
jb
dec
pop
fisttpl
pop
lods
jge
lock
add
pop
outsb
in
fstl
push
pop
inc
or
in
gs
popf
shrb
sahf
cmpsl
push
xchg
xor
daa
xor
mov
and
mov
xor
ss
add
add
jp
sbb
mov
shlb
mov
sbb
repz
adc
cwtl
jo
ja
ficoml
js
mov
mov
adc
aas
fcmovbe
je
sbbl
decl
sbb
lcall
clc
mov
inc
out
into
rcrl
mov
ljmp
push
nop
sub
inc
gs
scas
test
xor
sbb
add
imul
repz
cltd
les
sub
xchg
mov
jp
push
xchg
add
dec
push
test
push
cmp
mov
movsb
xor
or
and
test
scas
sub
jns
adc
adc
orb
popf
mov
adc
imul
xor
fbstp
inc
vcvtps2dq
xchg
add
aaa
nop
decb
lods
imulb
jecxz
imul
aaa
xchg
addb
ja
push
dec
or
fstpt
push
test
mov
cwtl
cmp
hlt
lds
das
aas
and
arpl
aas
test
pop
mov
cmp
int
in
imul
sbb
mov
mov
clc
das
xchg
daa
mov
jle
cmp
mov
cmpsb
out
sub
sbb
adc
into
xchg
stos
ljmp
xchg
xchg
dec
mov
loop
and
ds
mov
mov
test
ljmp
mov
cld
jecxz
jno
leave
mov
add
in
adc
sub
test
call
aad
xchg
cli
jecxz
out
jns
dec
scas
lret
mov
xor
popf
xor
push
in
and
sbb
test
pushl
out
xor
clc
loope
add
adc
rclb
xor
xchg
adc
pop
ret
push
or
es
bound
add
push
lcall
into
pop
or
pop
mov
pop
hlt
mov
cmp
jnp
out
adc
out
pop
and
bound
dec
data16
and
jns
aam
std
data16
dec
mov
and
dec
lock
mov
xor
aam
jo
out
sub
sbb
js
mov
lret
jne
cmp
xor
mov
xchg
movsl
cld
aas
out
mov
inc
xchg
dec
orb
ljmp
fcmovb
jp
icebp
mov
sub
mov
stos
mov
and
aas
xchg
and
inc
push
adc
sahf
es
or
sub
jbe
xchg
aaa
and
outsb
imul
push
es
sub
push
sbb
ret
out
adc
sbbb
clc
loopnew
and
loope
gs
xlat
data16
jge
ljmp
add
xchg
push
daa
add
fbstp
cmp
jl
bound
ja
or
pushf
sub
mov
pushf
sub
cmp
cmp
or
addr16
insl
gs
adc
aam
cmp
push
or
stos
inc
int
push
popa
mov
cli
pop
push
sbb
adc
mov
insl
cmp
std
pop
xor
mov
mov
mov
xchg
or
out
movsl
andl
cld
shl
adc
lods
adc
out
dec
fidivrs
outsl
push
push
and
ss
xlat
outsb
mov
dec
xchg
ret
mov
sbb
sbb
pop
mov
mov
test
or
imul
or
cmc
ss
jecxz
scas
and
mov
push
int
sub
mov
xchg
mov
mov
ret
add
in
push
je
mov
adc
stos
icebp
jo
pop
ja
arpl
xchg
sbb
mov
in
out
je
mov
sub
test
shl
push
push
insb
jo
adc
inc
fwait
mov
std
sub
pop
scas
mov
std
lea
out
pop
push
nop
mov
push
ja
ja
enter
lea
adc
mov
bound
sub
and
nop
dec
insl
dec
loop
sbb
psubq
jno
mov
dec
pop
insb
push
jnp
add
es
mov
pop
cmp
inc
das
sar
ficompl
cmp
nop
jns
les
idivb
loop
push
out
mov
mov
cmpsb
enter
sbb
insb
pop
adc
cmp
jae
jp
aad
push
inc
sub
shlb
mov
xor
loopne
aas
out
inc
push
jg
fdivl
push
stc
call
ret
pop
idiv
lcall
out
cwtl
pop
pop
xchg
rol
mov
sbb
sub
mov
call
mov
fsubrp
testb
test
icebp
or
insb
test
jnp
xlat
shrl
or
loopne
and
in
lea
fcomps
xchg
adc
push
scas
repnz
jle
mov
cli
sti
aam
subb
sahf
in
fnstcw
pop
xchg
dec
jmp
shlb
cmpsb
cltd
nop
sub
adc
add
mov
ljmp
mov
jecxz
test
adc
xor
fcompl
dec
shll
rolb
push
inc
iret
test
jmp
xor
je
clc
xchg
xchg
pop
push
push
jl
aas
stos
pop
and
mov
divl
shrl
mov
dec
mov
xor
mov
cmp
pop
jle
pop
cmp
out
lods
mov
jmp
or
leave
mov
sbb
hlt
loope
mov
icebp
lds
push
sbb
dec
jne
lock
fst
and
adc
stos
jns
enter
xchg
not
xchg
jno
xor
jg
cli
dec
xchg
popa
xor
adc
jmp
push
mov
pop
mov
mov
mov
adc
xchg
jo
mov
mov
mov
cmp
cltd
sbb
cmpsl
repz
push
lcall
test
pop
js
dec
mov
sub
sub
or
into
dec
cmpsl
add
aaa
mov
leave
test
mov
imull
repnz
outsb
sbb
sub
js
call
mov
movsb
fwait
sbb
cmp
or
push
arpl
ds
dec
dec
lahf
clc
inc
xor
jno
sub
mov
aad
sti
inc
jnp
mov
and
mov
mulb
jge
pushl
push
and
ss
aam
dec
jbe
shl
cmpsl
rorl
stos
jo
js
inc
jecxz
push
add
or
add
push
inc
les
loopne
inc
mov
fs
stos
ret
pop
and
sbb
in
test
push
sub
sub
adc
call
push
lock
cld
in
xchg
xchg
lahf
jl
or
loope
cli
jp
push
xchg
mov
outsb
test
rclb
cs
push
inc
push
cmpsl
sbb
cmp
adc
and
xchg
mov
push
push
adcl
dec
in
jbe
mov
aaa
and
or
pop
mov
jo
cs
icebp
pop
mov
adc
xchg
add
mov
sub
flds
test
xchg
add
mov
push
dec
sub
sub
push
xor
jg
pushf
aam
ljmp
imul
inc
decl
scas
aam
mov
into
cmp
lods
jae
nop
test
xor
sub
bound
ja
arpl
jmp
pop
mov
or
mov
test
push
inc
dec
xchg
aam
xor
adc
scas
test
addr16
pop
fldenv
bound
cs
push
cmpsl
test
sbb
or
lcall
scas
fldln2
negb
lcall
aam
mov
mov
mov
cmp
fildl
pop
aas
mov
rcrb
sbb
jne
lret
stc
imul
icebp
outsl
mov
movsb
push
pop
xchg
sbb
rcrb
jne
pop
inc
push
or
and
subl
mov
and
aas
mov
bound
dec
add
out
jmp
jnp
imul
movsb
addl
add
adc
fwait
test
cmp
mov
mov
inc
lds
daa
je
xchg
jg
test
mov
stos
mov
into
inc
pop
gs
inc
pop
push
mov
int3
sbb
jmp
repnz
aaa
sbb
insl
out
into
and
dec
in
and
pop
inc
add
loope
push
and
icebp
and
pop
jnp
add
cwtl
push
xchg
bsf
sub
cltd
cwtl
addr16
jb
lods
test
cmp
stos
push
lds
mov
incb
jle
xor
outsb
add
cmp
cmpsb
jbe
or
mov
scas
sahf
mov
jge
notl
imul
ficoms
dec
mov
js
sub
pushf
cld
xchg
out
inc
test
mov
mov
sbb
fbld
pop
cli
dec
xchg
testl
mov
jae
add
test
pop
out
rorl
outsb
mov
add
dec
cli
xor
shll
and
push
aaa
outsb
and
aam
jge
in
or
push
clc
leave
mov
imul
dec
xlat
dec
adc
rol
ror
movsb
jl
vdivss
dec
jl
adc
or
push
jge
adc
push
sbb
in
push
sbb
loop
es
mov
and
in
bound
mov
jae
or
inc
call
popf
mov
inc
mov
xor
aam
add
pop
pop
in
dec
lcall
lea
mov
movsl
int
sub
iret
jg
outsl
fists
fstp
sbb
add
push
imul
outsl
imul
xor
dec
pop
ds
sbb
cld
xorb
ret
cmpsl
cwtl
aas
push
clc
xor
or
mov
rclb
or
stc
push
pop
scas
shll
sbb
adc
jl
inc
pop
fdivrs
pop
fistpl
jae
sbb
imul
push
lret
nop
sbb
lahf
add
ljmp
or
cmp
call
aam
sub
cmp
aam
xchg
adc
std
daa
or
daa
mov
pop
shlb
je
cmc
cmp
cmp
clc
into
inc
cltd
mov
ds
iret
imul
scas
mov
push
mov
mov
loopne
xor
mov
and
cmc
lock
jmp
or
pop
in
addr16
dec
inc
movsb
scas
or
sbb
scas
mov
out
add
fisttps
pop
popf
mov
cmp
mov
or
lret
xchg
cmpsl
xchg
sbb
fiadds
and
mov
mov
push
mov
pop
arpl
cmp
or
popa
out
in
jmp
mov
mov
into
push
test
and
pop
adc
loope
adc
shl
daa
jg
inc
inc
fstpl
icebp
imul
in
sub
cmp
push
scas
hlt
out
add
pop
arpl
inc
hlt
js
cmp
jns,pn
sbb
push
and
add
scas
add
jbe
negb
aam
cmovp
lock
dec
rolb
aam
inc
jns
push
cld
inc
mov
icebp
inc
lret
add
jns
inc
shr
sub
sbb
sbb
sub
ja
int3
push
fstpl
ds
jb
cltd
cmp
hlt
das
mov
adc
mov
inc
cli
mov
sbbl
sub
pop
cmp
fcomip
fidivrs
bswap
sub
stc
xchg
test
push
call
push
loop
aaa
pop
push
mov
fbld
lods
sbb
test
xchg
jae
and
cmp
mov
mov
mov
dec
adc
jb
in
adc
jae
sbb
popf
sbb
enter
cmp
stos
popf
or
or
and
lock
or
sbb
mov
ret
add
or
imul
xchg
lock
mov
xchg
mov
aas
mov
mov
jmp
sar
ljmp
jle
cltd
je
xchg
loopne
mov
pusha
cmp
or
push
pop
or
rolb
les
repz
outsb
test
pop
push
scas
push
xchg
mov
xchg
ss
push
aaa
inc
pop
fucom
enter
bound
data16
pushf
dec
rclb
sbb
cltd
sub
lahf
into
mov
ja
lock
mov
pusha
filds
add
add
adc
scas
pop
enter
test
fdivl
outsl
xchg
call
add
jbe
ja
repnz
sbbl
push
sahf
enter
dec
sbb
addr16
ja
or
int3
adc
xchg
jns
xchg
inc
lods
lahf
sbb
js
inc
or
fstl
incb
out
cmp
mov
mov
dec
outsl
stos
shrl
popf
bound
std
push
mov
mov
jns
mov
movsl
imul
iret
insl
pop
leave
movsl
jmp
push
push
lea
ja
movsb
ss
mov
hlt
mov
imul
cmp
or
icebp
insb
movsl
inc
or
adc
lahf
sbb
push
inc
std
sub
inc
fildl
xchg
aam
inc
packssdw
cmc
idiv
out
push
or
outsb
arpl
and
ss
jne
dec
jmp
fstpt
mov
lock
pop
dec
cs
call
pop
lock
sub
lds
xchg
cltd
cmp
fldenv
xchg
xor
add
aas
jle
lods
dec
lcall
ja
movsl
cmpsl
lcall
jmp
mov
xchg
test
loope
and
iret
out
and
pop
ret
sar
fs
insl
jo
xchg
shr
mov
sbb
jb
dec
imul
arpl
sar
test
push
loopne
cli
push
sub
ret
mov
dec
jg
adc
mov
adc
loope
push
xchg
inc
daa
nop
cwtl
adc
stc
xchg
dec
pop
in
pop
xchg
adc
enter
dec
iret
adc
or
and
cltd
push
imull
mov
adc
or
out
jno
je
dec
jmp
iret
adc
cwtl
sub
sub
sub
mov
stos
push
sbb
sub
sbb
adc
mov
mov
das
call
jmp
lahf
pop
stc
pop
xchg
aad
push
push
push
pop
hlt
fs
shlb
or
or
adc
cmp
pop
add
jno
addr16
shl
mov
pushf
jp
push
repnz
dec
mov
push
lea
fstpt
int
and
push
dec
xchg
pop
mov
nop
loop
mov
scas
push
sbbl
cmp
sbb
and
jmp
mov
in
push
shll
arpl
inc
repz
mov
popf
imul
add
rcr
popa
cli
movsb
rcrb
lods
es
bound
cmc
inc
dec
ja
cli
out
sbb
cwtl
loope
dec
jns
mov
jns
inc
push
js
pop
nop
gs
adc
ret
lret
dec
andl
in
mov
das
insl
or
orb
jg
in
arpl
xchg
lds
repz
sbb
jbe
call
mov
jb
sub
std
and
in
inc
pushf
cwtl
push
add
movsl
hlt
adc
xchg
movsl
int3
xchg
push
scas
push
or
loope
sbb
or
jns
rcr
and
scas
fidivrs
pop
mov
jnp
jns
pop
dec
shl
or
out
mov
xchg
mov
jbe
ret
sbb
fistps
pop
lds
testl
ret
sbb
xor
cmp
test
sbbl
or
inc
mov
inc
xchg
pop
popf
sbb
jo
rep
lcall
xchg
shl
mov
pop
add
sub
js
cmp
cmpsb
lock
and
outsb
popf
sub
xorl
sub
sbb
jg
pop
ljmp
out
cmp
push
xor
scas
cli
movsl
pop
xchg
sub
push
xchg
sbb
mov
lcall
push
in
or
jbe
add
add
cmp
outsb
jbe
adc
dec
add
in
xchg
ljmp
cmp
movsb
mov
and
mov
or
paddd
inc
add
mov
aam
add
out
sub
lock
jb
cmpsb
mov
add
pop
lret
dec
fstpt
add
or
outsl
push
mov
stc
das
mov
cld
pop
add
nop
or
jmp
popf
std
int
scas
sub
in
test
inc
jmp
xor
jg
repnz
sahf
push
mov
push
xchg
push
mov
mov
insl
jne
push
pushf
movsb
sub
inc
lods
lret
xor
in
iret
fcomps
dec
jmp
dec
test
mov
inc
pushf
jmp
inc
stc
mov
cmp
sbbb
aaa
pop
pop
xchg
pop
aas
xchg
frndint
mov
xorl
pop
addr16
lods
add
add
jecxz
xchg
xchg
iret
lret
roll
imul
or
test
pop
jae
pop
push
pop
lcall
xorb
mov
or
jp
into
inc
or
test
push
popf
nop
gs
cmp
test
mov
movb
lcall
dec
stos
cmpsb
in
mov
std
cmp
add
test
test
ret
in
in
out
add
lods
out
cltd
dec
jae
ret
and
out
fucom
push
sub
gs
mov
lock
jno
cli
sahf
daa
pop
pop
dec
andl
mov
xchg
outsl
test
adc
mov
add
addl
cmpsl
mov
out
dec
jo
data16
loope
aad
fyl2x
xchg
cmp
xor
scas
int3
jecxz
inc
mov
jge
mov
inc
roll
sbb
dec
shll
ljmp
les
rcrb
inc
mov
jnp
push
push
jnp
or
push
push
mov
sti
cmpsb
repz
mov
dec
sahf
addr16
mov
bnd
imul
pop
lcall
out
jl
jne
jbe
popa
cmp
mov
mov
addr16
jle
jecxz
mov
and
dec
jns
ret
test
jge
push
sub
push
pop
in
ret
je
jmp
stc
mov
std
mov
insb
add
jge
and
scas
rcrl
bound
iret
dec
sub
xchg
daa
jle
xchg
popa
inc
imul
xor
push
mov
pusha
clc
fnstcw
xchg
aas
scas
adc
pop
ja
into
push
push
push
cmp
sbb
loopne
inc
lea
std
dec
pop
inc
ss
stos
les
mov
adc
dec
push
test
hlt
out
stc
push
into
mov
aad
sub
je
jge
mov
jmp
cli
and
outsl
and
push
fimuls
add
addb
lods
xlat
mov
fdivs
mov
pop
sbb
inc
iret
xchg
sub
in
cmp
push
push
xchg
fistpll
cmpsb
mov
pop
cmp
cmp
ss
dec
ljmp
rclb
aam
mov
push
sbbl
test
or
mov
scas
dec
sbb
push
icebp
sbb
les
inc
push
shl
pop
and
inc
xlat
push
or
add
push
mov
and
or
mov
in
mov
dec
dec
adc
lahf
inc
mov
dec
cli
dec
xlat
sub
push
hlt
popf
mov
lret
subb
dec
lret
cmp
mov
pop
int
ret
xor
out
or
xchg
jmp
mov
scas
lock
mov
enter
outsl
cwtl
lds
jns
jg
loope
loopne
jl
cmp
push
and
fstl
and
push
inc
cmpsb
mov
cmp
add
sub
ficoms
sbb
incb
cmp
dec
lods
out
xchg
or
sti
sub
sub
jge
xlat
add
jns
out
lods
test
es
or
mov
ss
lret
push
mov
pop
int3
jle
clc
inc
mov
jae
loop
mov
xchg
lods
pop
mov
sti
cwtl
jb
and
add
lahf
rorl
sbb
in
inc
incb
xor
dec
mov
and
pop
lea
test
push
pushf
pop
out
or
lock
hlt
mov
mov
imul
mov
jmp
and
jo
inc
imulb
inc
xor
pusha
imul
mov
xor
popf
and
mov
inc
subb
sbb
lods
dec
mov
je
inc
add
fldcw
bound
imul
sbb
mov
movsb
xor
ret
jnp
lret
jmp
sti
xchg
ret
popa
js
aas
dec
nop
into
xchg
outsl
or
dec
cmpl
cwtl
sbbb
std
loop
mov
jb
clc
pop
xchg
mov
scas
and
xchg
jmp
push
arpl
lods
cwtl
add
mov
popa
sahf
scas
aas
in
cmc
jbe
dec
repz
fisubs
dec
and
cmp
jb
mov
adc
xor
dec
and
lods
fisubs
jnp
out
hlt
les
inc
push
dec
scas
sbb
pop
std
leave
dec
xchg
cld
push
mov
jne
jecxz
insl
je
cmp
shll
mov
cmc
cmpsl
nop
sti
cmpsl
std
jge
data16
out
outsb
jne
xchg
sub
mov
in
and
cltd
fildl
pushf
jns
outsl
push
clc
inc
jbe
loopne
dec
inc
imul
xor
out
loopne
and
cmp
inc
xor
cwtl
cli
pop
int3
lahf
add
subl
dec
out
cmp
add
push
xor
adc
in
dec
rorl
xchg
cmp
xor
ret
jl
xchg
bound
pop
cmpsl
push
lds
mov
and
ja
sbbl
adc
aaa
push
jecxz
and
aam
addr16
adc
cmp
mov
jne
mov
popf
stc
daa
call
mov
fldl
scas
mov
out
adc
std
and
fsubrl
cmp
insb
inc
aad
xlat
ror
ret
insb
cmp
mov
pextrw
pushf
sub
aam
addr16
insl
inc
lock
in
nop
stc
push
cltd
in
mov
loope
xchg
adc
xchg
jmp
jmp
inc
pop
cmp
insb
lea
dec
add
aas
pop
cmp
in
in
divb
shr
idivl
push
push
in
mov
movsl
or
sub
xchg
imul
inc
mov
mov
cld
or
cld
sbb
jo
jl
pop
icebp
test
int
mov
idivb
pop
or
push
lock
fiadds
xchg
stos
push
lds
xchg
dec
movsl
hlt
fdivrs
xchg
sbb
adc
push
add
addl
fcomps
aaa
ja
test
push
aaa
dec
or
push
lock
clc
pushf
fld
notl
or
inc
sahf
outsb
or
cmp
inc
push
jbe
repz
stos
inc
inc
dec
shrl
imul
call
sub
jne
dec
mov
mov
daa
mov
mov
jo
and
mov
pop
mov
cmp
and
and
mov
inc
mov
mov
es
ret
es
ret
outsb
push
adc
nop
jp
mov
je
out
popf
xchg
pop
lahf
xor
outsb
shrl
inc
add
xchg
mov
mov
xchg
sbb
pop
pushf
ret
xchg
push
xor
adc
cmp
mov
xchg
xor
call
into
fsts
inc
in
mov
shlb
dec
inc
cmp
scas
adc
test
cs
aad
ja
out
cmc
pop
nop
mov
jecxz
lcall
mov
xor
in
and
aam
testl
push
and
outsb
orb
cwtl
dec
cmpsl
xchg
cs
scas
cmc
lea
cld
push
fsub
loop
outsb
fadds
and
into
cmp
rclb
insb
mov
push
loope
lret
pop
mov
mov
add
jmp
sub
mov
sti
pop
mov
pop
cltd
movsb
outsl
push
call
and
jp
in
sbb
mov
jp
pop
dec
or
repnz
lds
aam
pop
ret
add
add
fstps
outsb
inc
jo
faddl
mov
xor
mov
ds
dec
mov
insb
push
mul
push
arpl
push
sbb
out
gs
xchg
jg
push
xchg
lahf
or
je
sbb
inc
pop
int
mov
das
jl
add
sub
aas
push
adc
call
nop
sbb
sbb
push
jo
jmp
shr
jl
out
pop
sbb
lcall
outsl
mov
mov
lahf
inc
and
mov
mov
adc
out
xor
xlat
and
jg
test
adc
fdivl
cmp
cli
sarl
xchg
xor
je
je
xchg
ljmp
ret
mov
outsl
push
rcrb
add
js
test
leave
push
mov
test
push
inc
mov
ret
add
jl
arpl
sbb
xor
and
mov
xchg
das
push
push
dec
and
xchg
sub
idivb
cmpsb
push
inc
and
sti
subb
mov
jmp
stos
and
fimuls
mov
mov
xor
fnstcw
aad
cmp
sub
adc
or
iret
push
adc
lods
dec
les
pop
lock
shrb
rorb
cmpsb
or
divb
subb
add
push
push
jle
mulb
lods
or
lahf
gs
and
or
dec
cmp
mov
xlat
js
pop
js
sub
enter
xor
add
rcl
lret
mov
loop
pop
insb
out
push
cmpb
push
ret
sub
lret
lds
repz
sbb
push
sbb
and
xor
mov
ss
test
sbb
xchg
sbb
aas
nop
fidivrs
clc
clc
pop
add
mov
scas
js
or
inc
pop
cmp
mov
mov
lret
aaa
addb
iret
jae
loop
pusha
loopne
jecxz
pop
mov
inc
pusha
mov
inc
mov
ret
dec
les
mov
shl
push
sub
pop
inc
push
adc
mov
inc
mov
fildll
cmpsb
pop
sbb
fsubs
movsl
adc
or
sub
pop
or
int
pop
movsl
outsl
mov
mov
outsb
rorb
push
mov
and
shl
sbbl
sbb
mov
mov
pop
mov
stos
adc
int3
push
mov
and
sbb
in
lcall
jb
cs
xchg
popf
mov
jb
and
setnp
sub
fimuls
ret
pop
sbb
adc
insl
daa
xchg
push
fisubrl
mov
popf
pop
fbld
cwtl
xor
sar
or
xchg
pop
fwait
in
push
repnz
aas
dec
ret
sbb
pop
mov
shll
fcompp
jge
mov
or
jge
loope
and
and
pop
push
mov
out
mov
mov
in
mov
imul
cmp
jb
pop
fs
or
lret
inc
fimull
mov
cmp
lds
push
in
and
test
hlt
and
cmpsl
mov
dec
xchg
cmp
outsb
cwtl
cmc
sub
adc
rcrl
scas
mov
sub
push
mov
push
adc
add
pop
mov
mov
dec
or
inc
mov
mulb
cmp
enter
inc
sarb
cmc
mov
cmp
pusha
mov
ljmp
push
sbb
mov
pop
pop
fstl
add
pop
lods
or
int3
cld
xchg
and
sub
loope
dec
inc
pop
jb
sti
negb
cltd
lock
dec
cmova
xchg
mov
sbb
subl
fsub
pop
and
dec
inc
popa
jae
cmp
push
loop
loop
push
mov
test
out
popl
stc
out
xor
dec
lods
js
push
iret
mov
sahf
pop
cmc
pop
or
test
jbe
push
jl
and
fwait
mov
and
roll
bound
cs
mov
xchg
pop
aas
jecxz
jmp
imul
jl
filds
addps
xchg
ss
in
pusha
shll
loopne
cmpsl
pop
mov
sbb
jae
insl
and
dec
and
xor
jns
pusha
cmp
adc
inc
loope
sub
stos
sub
icebp
enter
xchg
jg
insl
mov
daa
pop
fadds
push
inc
push
cmp
mov
mov
mov
and
out
mov
dec
add
in
fsub
xorb
adc
pop
enter
mov
roll
aaa
add
loopne
jl
insl
sbb
es
in
push
dec
push
xchg
add
sarl
or
xorl
xor
into
xorb
mov
xchg
sbb
pop
cmp
int3
jo
lea
fidivl
pop
mov
add
cmp
sbb
fincstp
add
adc
push
inc
out
add
adc
imul
jb
or
add
mov
movsl
push
pop
lret
int
inc
mul
les
pop
stos
movsb
bound
sub
sbb
faddl
or
test
adc
mov
dec
das
lock
daa
ss
jg
add
ljmp
mov
pop
xchg
inc
fimull
sti
mov
sti
pop
ror
test
cmpsb
mov
pop
xor
imulb
mov
in
dec
xchg
cmp
push
fstpl
push
aam
mov
cmpsb
mov
jecxz
xchg
adc
cltd
dec
pop
and
push
adc
mov
mov
dec
cmp
mov
sti
es
fs
icebp
in
in
pop
pusha
mov
jnp
popf
or
aam
ljmp
adc
jp
cmpsl
adc
fstp
mov
mov
xlat
mov
lock
push
mov
dec
cmp
fdivrl
fmuls
daa
pop
les
xor
cmp
jecxz
adc
push
addr16
ja
sar
dec
std
ja
mov
test
and
xor
insl
push
jnp
imul
xchg
mov
pushf
and
js
mov
out
or
addr16
pop
xchg
fildll
test
cs
mov
jg
mov
dec
push
cmp
cmp
and
testb
jecxz
fiadds
pop
or
cmp
adc
aas
xor
mov
jle
mov
jne
jno
shl
push
mov
es
inc
nop
inc
mov
xchg
out
inc
mov
stos
mov
cmc
push
fdivrl
jb
fwait
jo
mov
loop
cltd
mov
pushf
orl
cmc
data16
adc
aad
cmp
cmp
xchg
es
test
mov
cltd
repz
fmulp
popa
jg
adc
xor
and
mov
jae
sbb
dec
ficoms
loope
stos
divb
int
pop
rclb
bound
sbb
daa
jmp
cmp
sbb
imul
ljmp
out
xlat
je
mov
fs
pop
imul
mov
insl
ja
insb
adcb
sub
aas
jne
daa
out
push
or
pushf
mov
pop
ja
test
mov
in
mov
lret
push
sbbl
leave
stos
jo
jg
xor
push
scas
push
push
pop
mov
dec
rcll
jl
add
je
nop
movsb
pushf
mov
outsb
pusha
or
arpl
pusha
std
clc
fsincos
cmc
shrb
movl
fwait
adc
test
xchg
data16
bound
pop
addr16
mov
fnstcw
fadds
pop
jl
pusha
pop
push
jae
fsubs
and
fistps
xor
adcl
std
inc
sbb
das
push
jecxz
xchg
inc
shlb
xchg
popa
and
pop
jne
xchg
outsl
sub
outsb
and
mov
movl
les
cmp
movsb
cmp
outsb
jo
dec
add
dec
dec
repz
sub
gs
out
cmp
push
cmp
mov
imul
mov
jle
mov
pop
inc
xorb
out
inc
jo
sub
push
cli
and
xorl
repz
sub
shrl
nop
js
cmp
fstpt
scas
mov
nop
movsb
lret
shrl
jns
add
in
cltd
xchg
cmc
pop
addr16
nop
sub
inc
mov
dec
in
mov
and
dec
cmp
scas
stc
cmp
js
mov
pop
push
movsb
bound
mov
in
mov
fcomps
or
add
lds
je
sbb
or
jle
and
mov
int3
mov
push
push
mov
push
mov
shr
sbb
mov
mov
pop
ljmp
dec
push
stos
jle
shr
out
fmul
push
je
bound
add
ja
sub
jo
rclb
mov
mov
sub
push
pushf
inc
fnstsw
call
jmp
jns
sbb
hlt
jbe
and
xchg
push
lods
pop
cmp
mov
mov
and
add
xchg
sub
and
add
inc
xchg
cltd
scas
or
ljmp
movl
mov
cli
jb
mov
pop
out
sub
cmpsb
cmp
push
ja
pop
faddl
push
pushf
xor
xor
adc
inc
inc
add
push
push
or
icebp
push
xchg
dec
adcl
pop
and
daa
iret
sahf
push
cmp
mov
iret
jbe
in
jne
sbb
and
mov
add
stc
ret
rclb
fsubs
pop
and
add
add
out
jecxz
xor
out
xor
jb
pop
aad
hlt
ds
inc
cmc
loopne
das
ret
mov
cmc
mov
and
js
imul
push
mov
push
xor
pop
jecxz
add
lods
mov
daa
jbe
inc
mov
popf
cmp
jg
test
insb
sbb
or
out
mov
decb
cltd
fldcw
push
fcoml
in
jne
xchg
out
cmp
mov
jecxz
fs
in
ret
leave
add
or
loop
inc
das
adc
outsb
ljmp
popa
repz
ficoms
mov
pop
repnz
pushf
ret
inc
push
inc
xchg
sbb
xor
aam
xor
andb
clc
scas
cs
cmp
or
je
sti
into
mov
jb
cs
ror
jno
fsubrp
sub
jbe
mov
jg
out
das
jg
cmp
arpl
lcall
cmpsl
dec
pop
ss
fldz
push
jbe
popf
xchg
push
inc
insb
loope
adc
mov
dec
mov
inc
pcmpgtw
adc
pop
shll
jp
sub
popf
mov
rclb
add
jbe
mov
mov
lcall
jb
movsl
cmc
mov
mov
mov
mov
mov
rcrb
loope
orl
out
lahf
inc
dec
jne
jmp
adc
adc
push
imul
call
jmp
hlt
xchg
adc
lods
repnz
or
and
lret
std
sub
es
pop
repz
mov
int
test
js
inc
mov
cli
lret
mov
dec
sbb
jecxz
test
loopne
add
addr16
or
cli
sub
mov
aam
lods
dec
cmp
xchg
and
mov
xchg
sub
add
mov
lahf
xchg
cmpsl
sar
xchg
mov
mov
sub
dec
or
pop
jl,pt
mov
lods
mov
shrb
jl
shll
jge
mov
push
scas
xlat
mov
popa
stc
jp
fmuls
jae
sbb
add
and
adc
scas
ljmp
hlt
addr16
xchg
outsl
push
sub
insb
adc
adc
xchg
loop
sbb
cmc
repz
scas
cwtl
js
xor
cmp
aam
mov
repz
add
mov
and
adc
pop
outsb
fcomip
or
je
add
pop
mov
mov
pusha
mov
psraw
push
stc
aad
enter
lods
cmpsb
cmpl
insb
sti
sarb
in
pop
in
gs
enter
jns
xchg
mov
scas
adc
mov
clc
cmpsl
inc
pushf
jo
sub
pop
into
adc
cwtl
mov
pop
shrb
mov
sbb
mov
es
es
icebp
mov
fists
jmp
jmp
xor
sbb
and
dec
and
insb
cmpsl
das
sub
pop
sub
mov
je
xchg
aas
sarb
push
enter
xor
cmp
jle
push
js
scas
sbbb
aad
divl
jae
cs
fildll
addr16
in
push
push
call
add
call
je
scas
dec
inc
lock
movsb
in
fsubrl
fiadds
movsb
inc
lret
xchg
ret
mov
adc
mulb
push
ljmp
jmp
lcall
and
in
in
mov
pop
mov
icebp
jp
sbb
inc
movsl
pop
pop
enter
mov
imul
ljmp
les
mov
xor
xor
mov
pop
dec
mov
mov
test
xor
jno,pn
mov
cwtl
test
std
popa
aam
xchg
pop
dec
and
das
pop
mov
dec
in
mov
ljmp
rcrl
inc
add
aas
addr16
or
cld
fistps
loop
into
orb
les
ror
neg
stos
data16
pop
xchg
rcr
icebp
xor
sar
cmp
mov
into
lret
ss
mov
lahf
int
fldenv
filds
adc
inc
jl
movsb
adc
test
pop
jp
inc
shl
ret
mov
pop
add
cld
mov
sbb
inc
dec
sbb
idivb
push
mov
lods
or
inc
dec
xor
dec
dec
mov
imul
xor
in
jecxz
jg
jge
xor
nop
movsl
movsb
jbe
andb
out
add
testb
push
pop
or
add
push
test
lea
leave
xor
loop
sub
cmpsb
cmpl
stc
enter
dec
and
mov
clc
mov
push
jp
cmpsl
fadd
jae
push
mov
arpl
adc
and
into
pop
fwait
lea
scas
aad
and
in
adc
inc
jp
adc
xor
push
cwtl
mov
lcall
inc
xchg
into
repnz
inc
lea
inc
jle
fbld
nop
lock
cmp
pop
ret
sub
cmp
mov
xchg
cmp
sbb
jle
dec
xor
mov
inc
add
cmp
out
andb
les
dec
nop
in
fistpll
mov
or
and
or
psubusb
add
mov
or
test
push
inc
cmp
popf
push
out
cld
or
mov
aas
test
arpl
call
sbb
mov
sarb
scas
scas
add
jo
fwait
pushf
ss
sub
dec
sub
fcmovnbe
xor
push
pop
sbbb
sbb
mov
fisttps
inc
xchg
lods
aad
add
rcl
sub
mov
repnz
sbb
rolb
inc
xor
push
gs
cs
mov
iret
mov
sbb
rorl
or
sarb
in
mov
mov
mov
insb
xchg
mov
js
inc
sub
mov
mov
mov
fistps
out
adc
cmp
out
mov
cmp
push
jecxz
int3
or
sub
inc
rcll
xor
in
mov
push
jge
pop
dec
cmpsl
xlat
cmp
aam
das
inc
inc
push
rolb
js
hlt
pop
push
fwait
mov
push
push
dec
push
cmp
pop
adcl
cmp
subl
loope
dec
test
test
jg
jnp
ficompl
clc
enter
sub
rorb
or
dec
sti
cmp
push
iret
mov
loope
dec
add
fsubrl
jno
hlt
mov
push
sub
mov
imull
xchg
test
gs
xorl
cmp
jmp
dec
and
jno
add
xchg
inc
push
inc
xor
jl
push
sbb
in
add
fidivs
mov
sbb
xchg
xor
pop
jno
cwtl
ljmp
and
mov
jp
lahf
aad
lret
in
xor
aas
adc
adc
xchg
js
mov
push
test
divl
sbb
gs
push
mov
sub
repnz
adc
jecxz
add
push
enter
mov
pop
and
out
clc
cmp
xchg
movsb
dec
arpl
and
inc
loope
fistpll
mov
fs
subb
out
in
mov
call
push
and
cmpl
test
push
rcrl
ret
ja
aaa
insb
jo
fwait
inc
cltd
mov
mov
shlb
pop
push
out
mov
add
xor
sahf
adc
mov
mov
jmp
xor
adc
jg
popf
cmpsl
sbb
lods
bound
mov
lcall
pop
sbbb
movsb
xor
movsb
xchg
cmp
stc
xchg
in
jbe
outsl
push
xchg
je
adc
sub
inc
sbb
jle
cs
int
push
jo
pop
add
popf
shlb
shrl
cltd
add
fldt
push
dec
jmp
and
mov
and
sahf
jg
mov
insb
mov
lret
jle
int
outsb
jns
pop
mov
dec
rcrb
lods
in
adc
sub
lret
arpl
popf
lret
lret
pop
push
or
nop
fdivr
sete
mov
mov
test
push
push
loopne
mov
fsubp
pop
pop
mov
jmp
and
sbb
and
pop
fucomi
or
push
push
sub
mov
cmp
inc
jne
mov
jb
or
shr
jno
push
lcall
lahf
fcoms
push
adc
daa
rcll
xor
or
push
int3
jmp
sbb
add
jle
int
dec
stos
inc
in
jl
outsl
mov
or
fucompp
sub
add
adcl
push
xchg
mov
jl
mov
jnp
lods
and
lods
sar
push
add
imul
and
daa
jle
sahf
or
icebp
jae
movsb
fists
out
pusha
fistl
rcrl
sti
call
sbbl
xor
popf
push
pop
into
ret
or
fs
mov
clc
xor
push
in
dec
sbb
inc
pop
call
sub
pusha
mov
add
loopne
syscall
ss
sub
xchg
mov
push
cld
ret
cmp
cmp
loope
xchg
push
rorl
cmp
pop
cmp
cwtl
iret
lahf
movsb
insb
in
or
jg
add
repz
jbe
and
mov
loop
pop
lock
iret
xor
inc
pop
jg
mov
mov
decl
stc
mov
mov
adc
push
sbb
insl
xchg
fcmovnu
and
pop
adc
ja
imulb
daa
mov
jno
sar
nop
mov
mov
ret
mov
xchg
dec
int
sbb
pop
jmp
rorl
xor
stc
xchg
or
sub
cmpl
adc
cli
lahf
shll
in
jnp
imul
outsl
dec
dec
xor
xor
mov
fiadds
pop
ret
out
out
inc
sbb
out
dec
loop
dec
pop
mov
lods
cwtl
adc
xor
sub
aad
pop
mov
in
xchg
rolb
aaa
add
mov
adc
ljmp
mov
in
cmp
mov
imull
test
jnp
jmp
aam
mov
movsb
add
cmp
lret
fnsave
repz
and
inc
es
out
dec
lock
test
inc
add
add
mov
aam
inc
insl
shll
xor
pop
jns
jecxz
mov
idivl
int3
out
test
js
popf
dec
mov
lahf
and
adc
arpl
sbb
add
aaa
insl
sub
fcmovnu
icebp
add
std
cli
daa
ljmp
adc
repnz
or
jmp
shrl
mov
adc
loop
xchg
fadd
inc
out
orb
test
dec
fcoml
xor
cmp
dec
sub
std
cmp
fldcw
jae
ljmp
xchg
sbb
mov
pop
lahf
mov
ret
jmp
sti
or
xor
sbb
mov
cmpsb
in
fs
clc
nop
or
push
sbbl
cltd
xchg
and
adc
lods
pop
lds
or
pop
mov
jecxz
or
loope
shl
or
jno
je
cmp
push
negb
cli
inc
out
push
jp
jge
or
leave
jbe
dec
fstpl
add
decl
xchg
enter
cmp
out
int
xor
dec
push
incl
cltd
cmp
dec
xchg
out
iret
into
je
mov
cmpb
dec
mov
or
in
adc
out
jo
movsl
push
out
inc
mov
and
cli
sysenter
divb
dec
xor
cmc
xchg
sahf
pop
adc
shrb
stos
out
mov
add
shlb
adc
mov
mov
sbb
adc
dec
sbb
xor
or
xor
xchg
or
xor
or
push
mov
adc
pop
and
popa
xchg
sti
push
mov
jnp
pop
add
sbb
outsl
push
inc
addr16
and
test
inc
adc
xor
fldt
dec
jg
push
xchg
xor
xor
loop
bound
aad
int
imul
enter
add
leave
popf
bound
sub
icebp
pop
mov
pop
jbe,pn
pop
popa
lahf
mov
and
xor
bound
sbb
stos
mov
xchg
jle
das
aaa
aaa
or
das
outsb
mov
xchg
call
enter
cmp
lahf
lahf
movsl
inc
shl
pop
sub
mov
test
jne
inc
inc
outsb
pop
ret
add
imul
je
sbb
frstor
mov
pop
push
js
lahf
xchg
adc
xchg
jl
stc
ficomps
scas
or
rcr
adc
fnstenv
add
mov
add
into
or
nop
adc
lret
lods
xchg
daa
clc
aaa
mov
mov
cmpsb
pusha
pop
jg
sti
repnz
fisttpl
icebp
orb
mov
outsb
and
push
mov
mov
cs
cli
adc
dec
js
in
mov
cmp
xor
xchg
sub
mov
jmp
jg
fwait
sub
lret
lcall
lret
xchg
in
cmp
push
popf
outsb
cmp
outsb
retw
cmp
arpl
add
lcall
pop
cmp
incb
or
mov
and
cmp
test
adc
push
int
cmc
out
bound
out
andl
inc
cmp
icebp
iret
xchg
xlat
sbbl
ja
add
sbb
or
lea
mov
jmp
iret
out
pop
popa
ror
lcall
pop
and
das
iret
in
jns
ja
fbstp
insl
dec
jns
add
mov
xor
ss
aam
xchg
xor
cmpsb
sub
push
xor
pop
sti
sbb
test
push
dec
out
cld
pop
push
jnp
sub
in
mov
jecxz
cltd
jae
negl
inc
push
cmp
mov
sub
cwtl
scas
push
iret
mov
mov
out
gs
test
ljmp
rclb
mov
mov
sub
arpl
fwait
mov
imul
xorb
out
lock
cmpsl
aad
dec
inc
mov
imul
cmc
fmul
loope
in
pop
sub
pop
mov
cld
mov
lcall
lcall
mov
push
and
sbb
inc
daa
out
mov
or
cltd
dec
cmp
insb
adc
fwait
lds
cmpsb
cmp
mov
xchg
loopne
jne
xor
mov
inc
dec
pushw
sbb
dec
sti
icebp
add
add
push
and
into
dec
inc
sub
sti
out
pop
in
xor
mov
adc
pop
push
popf
test
cmp
arpl
test
mov
call
or
cld
cmpsl
mov
lods
negb
int
sub
in
push
xchg
ret
or
ret
mov
mov
add
mov
push
cmp
adc
xchg
inc
jp
je
and
push
xchg
or
sbb
aad
fistpll
pop
movsl
int
or
push
shlb
ljmp
dec
iret
ret
ficoml
in
pop
add
fldenv
mov
inc
ret
jne,pt
xchg
hlt
arpl
xchg
outsb
inc
lret
cmpb
imul
mov
mov
andb
mov
and
loope
int
insb
mov
jb
fsubp
mov
lods
sub
imul
ds
inc
dec
cs
jecxz
mov
loope
adc
xchg
adc
and
loope
cmp
pusha
loopne
jl
inc
xlat
jnp
jae
lret
cmpsl
jmp
add
mov
xchg
sbb
xor
sti
jp
aaa
mov
mov
push
jb
mov
incb
mov
sub
sub
aas
lods
addb
and
iret
test
incb
or
xor
sbb
test
inc
jp
mov
push
lret
scas
test
jns
sbb
pop
xchg
jb
push
jb
pop
dec
subl
jl
jb
mov
or
sbb
test
pop
stos
fs
mov
push
sbb
mov
jae
aas
out
jge
out
arpl
adc
mov
pop
mov
leave
push
push
jg
inc
andb
fwait
insl
imull
mov
sub
sub
je
sbb
in
into
ss
roll
jno
fiadds
sbb
adc
jmp
loopne
adc
aam
mov
iret
mov
lods
in
jp
outsl
sbb
gs
or
mov
hlt
mov
sbb
sti
ljmp
cwtl
je
inc
push
jae
cmpsl
pop
jle
or
mov
mov
mov
fmuls
lcall
fwait
dec
mov
loop
ljmp
cmp
hlt
sbb
fs
inc
pop
ja
xchg
push
rolb
insl
stos
add
mov
fs
push
outsb
mov
arpl
sbb
pop
jmp
sub
decl
dec
mov
sub
push
or
or
push
lock
pop
inc
xlat
mov
fistpll
es
jne
pusha
jg
lea
push
or
sbb
sbb
or
add
jbe
jl
test
das
jmp
sbb
inc
pop
jne
leave
push
nop
mov
hlt
or
mov
xorl
mov
jns
in
cli
xchg
lret
pop
decl
mov
cmpsl
cwtl
out
sbb
pop
jae
xchg
sub
movsb
xlat
cmp
mov
loope
jl
pop
jecxz
cmp
cli
add
sub
or
pop
push
jg
aam
cmc
and
mov
ljmp
je
and
pop
aas
sub
pop
lahf
xorl
mov
das
jp
lods
ret
test
inc
cli
sbb
or
inc
sbb
push
dec
lock
jae
push
mov
rclb
lea
cmp
pop
cmpsb
int
push
andl
xchg
mov
fisubs
mov
adc
cmp
mov
jmp
repnz
xor
mov
or
lea
ret
dec
test
movsb
fwait
bound
pop
leave
xchg
mov
xor
add
jo
jo
jp
add
cmp
adc
xchg
cld
adc
cltd
lods
jno
dec
push
insb
sbb
mov
dec
sti
xchg
add
xchg
and
pop
sahf
push
mov
mov
ret
imul
sarb
in
xlat
mov
push
into
ljmp
xor
mov
leave
aam
push
jecxz
xor
and
push
sti
fisubrl
lock
negb
mov
mov
add
inc
stos
mov
push
lcall
xchg
mov
cmp
shr
fidivl
sbb
or
enter
cs
punpcklwd
int
shll
or
pop
ret
lods
and
xchg
mov
shrl
xchg
dec
aam
loop
pop
fildll
jl
mov
rcrb
inc
cmp
xor
adc
incl
xor
dec
mull
pop
xor
stos
out
stc
adc
adc
mov
das
mov
sub
mov
lahf
hlt
mov
lds
mov
insb
cmp
push
mov
mov
mov
mov
sahf
outsl
xchg
shlb
pushf
adc
out
in
xorb
lret
aad
nop
movsl
add
jmp
pop
dec
or
cmp
push
adc
lock
rcl
ret
or
into
ja
clc
xchg
rcll
mov
jo
sbb
cmp
dec
and
adc
int
in
xchg
mov
fistpl
mov
jo
jl
xchg
sub
repz
arpl
mov
add
movsl
xor
jecxz
sbb
notl
orl
mov
ret
int3
insb
xchg
pop
inc
push
popa
punpckhbw
jnp
mov
inc
sub
lock
repz
mov
pop
pop
es
popa
loop
in
sti
mov
sbb
hlt
fs
mov
lds
dec
andb
rcr
xor
stos
push
ljmp
mov
repnz
lods
cs
xchg
sub
loope
jge
pop
icebp
dec
dec
ss
dec
jbe
hlt
or
lcall
xor
cs
xchg
push
sbb
jnp
inc
cmc
fdivrp
ror
js
xchg
mov
or
push
loopne
movsl
mov
sub
mov
xor
imul
cmpsb
int3
adc
push
push
shlb
add
jae
jle
lahf
in
cmp
ret
out
push
popf
scas
mov
notl
dec
jecxz
in
mov
mov
mov
push
shrd
out
out
outsl
cmp
adc
mov
adc
bound
jo
xchg
fisttpl
push
lcall
leave
or
cmp
xor
adc
or
sbb
xlat
cmpsb
ficomps
mov
mov
dec
pop
adc
int3
adc
add
push
push
sub
sbb
xorl
pop
outsl
testl
test
cmpsl
pop
cmc
les
dec
xchg
cld
xchg
mov
movsb
jp
dec
cli
jmp
mov
nop
xchg
out
dec
outsl
test
rol
daa
scas
or
jge
push
sarl
gs
mov
lods
push
pop
cmp
adc
fistpll
inc
pop
lods
stos
scas
fisubrl
daa
xchg
cmpsb
xchg
les
sbb
jg
sub
ss
daa
cmp
adc
stos
loopne
fldcw
and
das
sbb
idiv
outsb
cmp
jo
sahf
jl
xchg
push
xor
mov
or
loop
call
inc
mov
cli
cmp
fisttpl
cmp
cmp
fcomps
push
loopne
pushf
mov
das
orl
jge
jmp
test
stc
arpl
xchg
jo
roll
clc
or
icebp
xchg
xchg
adc
sub
cld
pushf
les
cld
fistpll
fsubp
push
or
js
test
cltd
into
ret
ljmp
enter
mov
lret
cmpb
inc
inc
dec
test
in
bound
mov
mov
fwait
arpl
inc
xchg
dec
mov
adc
cld
int3
dec
outsb
cld
gs
push
pop
jnp
or
mov
cmp
aad
xchg
dec
xlat
dec
cmp
flds
pusha
jnp
lods
sbb
je
ret
movsb
cld
outsl
addl
push
outsb
dec
movsl
jbe
data16
inc
cmpsb
push
dec
pop
adc
cmp
test
fldl
out
lea
in
pop
mov
fldcw
mov
add
mov
ss
xchg
xor
push
and
mov
inc
lds
testb
sub
push
jbe
into
rorb
add
in
lahf
push
hlt
cs
loop
mov
ja
xchg
into
test
or
pop
clc
jge
insl
push
cmc
xchg
mov
mov
or
push
mov
das
daa
push
fistpl
mov
jbe
ret
and
mov
adc
lds
cmp
cmpsb
popf
lds
lahf
repz
adc
cmp
sarb
addl
test
repnz
idivb
adc
loop
xor
adc
cmpsb
mov
inc
aas
xchg
mov
shlb
mov
dec
popf
and
frndint
mov
push
rclb
adcb
nop
js
lods
mov
mov
in
repz
imul
push
lret
out
lods
mov
adc
add
sbb
loopne
mov
add
sub
lret
aam
movsl
or
in
sub
inc
ss
mov
pop
mov
loopne
shr
inc
jno
add
inc
cmp
inc
or
nop
clc
ret
sti
sbb
mov
mov
loop
or
ljmp
pushf
sub
xor
mov
pusha
and
fwait
xchg
dec
ret
push
push
add
out
xchg
out
cwtl
xor
jns
outsb
lret
or
xchg
inc
xor
rcrl
in
add
imul
in
sbb
fadd
jmp
cmp
cmpsb
sub
sti
dec
ss
jb
jl
cmp
dec
fstps
cmp
pop
stos
les
dec
roll
das
pushf
dec
insb
and
sbb
ret
push
mov
iret
sub
mov
movsb
add
sub
mov
daa
clc
dec
lcall
dec
divb
xchg
rorb
pop
xchg
sbb
fnstsw
adc
xor
xor
mov
mov
loope
add
inc
outsl
call
pop
mov
xchg
rcll
push
loop
fmull
fwait
divl
pusha
data16
jo
jge
fwait
lods
jp
cld
movsl
int
mov
cli
cmp
push
outsl
aaa
or
les
mov
mov
das
jno
ja
insb
out
negb
xor
rclb
pusha
fistpl
cld
sub
push
fbld
push
sbb
inc
lods
add
adc
cmp
int
rcrb
mov
pop
push
pop
sbb
jecxz
push
pop
sub
jge
in
sub
bound
cmp
jle
repnz
adc
cli
sbb
xchg
jp
adc
jg
mov
jno
sbb
cmpsl
jne
mov
mov
sbb
pushf
pusha
mov
cld
mov
pusha
dec
mov
jbe
lods
mov
jge
div
xor
imul
adc
jl
xchg
sub
negl
mov
mov
testl
frstor
jo
and
inc
sbb
fidivl
cmc
lods
jae
sbb
aad
and
scas
imul
mov
fdivl
push
and
inc
dec
dec
sbb
mov
out
push
mov
push
pop
jno
add
cmp
stos
sub
push
lret
rclb
insl
mov
push
in
sbb
sahf
movsl
mov
xor
push
inc
inc
popa
jl
nopl
shlb
push
mov
mov
enter
lock
push
xchg
in
imul
mov
add
xchg
into
adc
jae
js
mov
cmp
push
jmp
mov
out
ror
aad
les
into
mov
mov
aad
pop
and
push
push
cmp
xor
iret
xchg
pop
push
pop
stc
imul
decb
shrl
dec
mov
adcb
movsl
shll
jne
cmp
mov
data16
push
jb
jb
push
cmc
pop
fstps
andl
add
cltd
mov
push
jle
push
in
inc
fdivr
xor
test
ja
aaa
mov
mov
mov
sahf
mov
roll
cld
dec
inc
inc
mov
inc
adc
adc
jmp
mov
adc
ljmp
outsl
xorb
jno
pop
mov
outsl
or
scas
adcl
mov
cmp
in
bound
inc
xor
addr16
arpl
ds
push
xor
fmuls
jns
insb
pop
out
clc
call
xchg
popf
popf
movsl
push
xor
aam
xor
push
mov
mov
jno
mov
dec
rol
gs
xor
cmp
sbb
mov
out
sti
bound
cmp
movsl
mov
imul
add
pushf
sbb
or
dec
mov
cs
mov
outsb
pushl
push
enter
data16
pop
je
pop
pushf
mov
out
lds
sub
and
repnz
int
adc
mov
in
das
jmp
sbb
dec
mov
loopne
and
shl
jns
add
mov
repnz
mov
push
stc
orb
mov
lret
decl
push
pop
jmp
push
dec
aas
add
scas
testb
xchg
loopne
xchg
ds
jae
clc
xchg
xchg
push
enter
shrb
les
loope
lea
andb
fistpl
mov
push
jg
in
fwait
and
or
push
js
insl
jo
dec
stos
data16
in
cmc
sub
cmp
and
in
scas
or
stos
test
or
xor
popa
and
mov
jecxz
bound
or
adc
mov
pop
adc
testb
jge
mulw
repz
push
adcb
bound
mov
jne
adc
xor
push
sbb
push
pop
inc
fcompl
and
cmp
dec
hlt
subl
lea
or
scas
mov
sbb
xchg
adc
sbb
std
lcall
shrl
adc
fisttps
jo
negb
shrb
repz
jle
jp
xlat
jg
lock
cmp
lods
push
or
adc
lret
sar
and
mov
jne
js
loope
rorb
or
mov
enter
out
popa
mov
mov
cmc
insl
out
ds
lahf
cmc
shll
loop
loope
add
push
cmp
push
sub
jnp
rolb
cwtl
cmp
fnstcw
lret
or
mov
sub
push
and
ret
xor
jmp
mov
ret
test
add
mov
adc
negl
shll
sti
pop
push
subb
movsb
fidivl
xchg
in
xchg
add
jne
jne
dec
xorl
pop
mov
sbb
je
mov
xchg
dec
adc
inc
xchg
jge
sahf
jecxz
fimuls
pushf
add
mov
aas
imul
or
icebp
fwait
push
lods
jge
dec
rorb
arpl
ret
xchg
int3
mov
xchg
out
bound
push
mov
push
xchg
mov
mov
inc
out
or
fxch
cmp
cmp
les
movsl
popa
xlat
sbb
ret
jge
adc
mov
jl
cltd
dec
inc
and
in
pop
out
movb
movsb
adc
xlat
nop
jmp
sahf
enter
cmpsl
mov
mov
pushl
lahf
pop
out
div
out
add
fwait
out
xchg
mov
stos
test
xor
std
push
addr16
xchg
sbb
inc
movsl
fidivrl
sbb
mov
aam
mov
mov
inc
int3
fiaddl
test
or
repz
xor
and
adc
dec
in
dec
subb
bound
loopne
xchg
inc
js
lret
fisttps
lahf
dec
hlt
lahf
fdivrp
adc
aaa
mov
ret
jecxz
jne
icebp
cmp
dec
sub
call
jecxz
lock
outsb
sub
jecxz
lods
cltd
mov
psllq
shl
jae
loope
scas
jecxz
data16
cmpsl
loopne
fcomps
popa
cld
inc
mov
pop
out
add
dec
je
mov
jmp
jbe
cwtl
xor
add
add
jp
popl
xchg
sbb
cmp
inc
mov
push
dec
insl
xchg
lret
lret
je
movsb
sbb
cmpb
or
test
adc
jmp
aam
cmp
outsb
std
jne
aad
xor
mov
das
out
fiaddl
xchg
or
imul
pusha
rclb
dec
rcrl
push
shrd
pop
vpsrlw
jae
mov
fwait
sti
cmp
mov
mov
jns
jge
add
sbb
repz
hlt
int3
or
mov
and
iret
add
addl
adc
cmp
mov
fstl
scas
xor
add
mov
repz
sub
mov
subb
in
dec
movsb
int3
push
lds
cltd
jnp
sub
enter
cmp
push
xor
dec
or
mov
fldl
je
add
lds
je
int3
mov
mov
sub
data16
test
nop
lock
and
inc
pop
add
mov
sub
lcall
fucomip
or
pop
in
sti
inc
mov
adc
lcall
pushf
or
pop
sub
pop
xor
js
and
push
bound
rcl
push
movsb
jp
or
les
pop
jmp
jb
cmp
je
push
data16
xor
pop
cmpsb
shr
les
rorl
sub
iret
xor
inc
add
gs
scas
add
mov
iret
and
repnz
fmuls
outsb
icebp
cmp
out
aas
aad
testb
and
xor
mov
imul
jge
flds
js
es
les
xor
xor
dec
loope
push
mov
sbb
loop
mov
mov
pop
imul
shlb
fdivl
sarl
out
mov
int3
cwtl
mov
dec
out
mov
pop
int3
decl
mov
push
xchg
orl
pop
fstpl
sub
pusha
lock
adc
jge
nop
and
push
cmpl
dec
mov
xchg
imul
mov
pop
sbbb
pop
and
stc
call
sbb
fdivs
adc
flds
mov
cmp
das
jp
lods
and
inc
adc
fdivl
jno
xlat
lret
jo
aas
fxch
ss
cs
shl
bound
ret
stc
and
or
dec
and
inc
scas
xchg
clc
cmovns
shlb
and
ficoms
lahf
bound
test
dec
pop
adc
shrl
mov
inc
adc
jns
lret
adc
iret
adc
cli
xlat
xor
adc
stc
in
adc
sti
stc
mov
mov
push
mov
roll
ljmp
jge
scas
addl
enter
push
aam
sbb
xchg
dec
cwtl
outsl
loopne
loope
cmp
addr16
aam
mov
adc
push
push
hlt
shlb
test
mov
mov
dec
shll
in
sbb
scas
jne
inc
or
push
sub
and
ficompl
mov
ficoms
scas
mov
aad
adc
push
xchg
cmp
xor
sbb
sbb
mov
add
fidivs
test
lret
pop
std
mov
mov
in
out
loope
je
lea
push
jmp
mov
sti
rcrl
in
gs
xchg
call
test
adc
shrl
outsl
test
dec
sub
call
int3
pop
push
sbb
xor
in
lods
fildll
pop
jns
mov
lret
adc
arpl
je
cltd
xlat
push
cmp
fistpll
xchg
xorb
xchg
add
fidivs
xorl
inc
lret
popf
push
mov
mov
mov
lea
adc
in
or
andl
in
int
hlt
nop
jl
and
xor
lahf
movsl
mov
aad
mov
lea
ret
in
xchg
nop
sbb
hlt
jbe
jne
jne
add
adc
orl
ret
sub
cmpsl
jmp
fstps
dec
sub
cmovp
adcl
lds
pop
mov
and
jno
push
ror
outsb
fisttpll
movsl
push
xchg
stos
aaa
cs
repnz
jmp
cs
aam
leave
aam
jg
xchg
inc
inc
std
outsb
xor
sar
iret
test
enter
rclb
mov
sbb
int
jns
imul
out
iret
dec
outsl
ja
aam
lahf
push
sbb
xor
add
in
push
out
add
xlat
data16
jp
push
imull
push
stc
leave
fcmovnbe
push
lock
idivb
call
clc
icebp
xchg
arpl
xlat
test
int
or
pop
clc
mov
fwait
mov
pop
push
or
adc
or
js
mov
push
pop
or
out
pusha
int
xchg
jno
cmpsb
in
and
ret
dec
sbb
inc
sbb
sbb
cld
mov
lcall
sub
cmp
aaa
das
dec
daa
test
adc
clc
and
cld
mov
lock
aam
add
imul
jae
cmp
decb
inc
xor
jo
leave
imul
popa
lock
clts
sbb
in
mov
ret
cld
aaa
adc
mov
and
and
push
push
hlt
push
mov
test
sbb
test
cmp
mov
jbe
enter
fs
push
pop
jae
adc
push
pusha
rcl
scas
mov
add
mov
out
add
in
les
enter
sbb
aad
inc
mov
push
call
aas
sahf
aas
popf
jo
push
das
add
xchg
mov
and
les
mov
push
jo
mov
adc
sarl
xor
inc
pop
sbb
loope
jno
cwtl
mov
jecxz
jl
adc
mov
aaa
inc
pmullw
rclb
mov
xchg
in
fisubrl
sbb
movsb
xchg
cmpsl
xor
insb
je
das
shr
ret
adc
adc
mov
bound
pop
stc
sbb
scas
pop
or
sar
dec
test
cwtl
dec
lds
and
jmp
imull
in
clc
ss
jl
mov
outsb
ljmp
and
cmpsl
or
hlt
mov
cs
pop
rolb
pusha
aas
jnp
or
adc
adc
arpl
lea
mov
xchg
jg
loope
dec
fimull
popa
fldl
test
aas
xchg
jg
xor
data16
out
rorb
aas
mov
xchg
das
sub
fmuls
add
sbb
lret
lea
pop
lcall
xor
adc
aas
les
enter
add
push
std
in
or
jae
mov
mov
xchg
lds
add
fs
idivb
mov
hlt
xchg
or
adc
adc
call
dec
xor
stos
inc
orb
dec
jb
call
icebp
icebp
adc
mov
cmp
jp
insl
stos
popa
pop
inc
push
inc
inc
pop
or
jmp
mov
clc
add
jno
imul
in
xchg
clc
test
push
loop
or
xchg
lahf
mov
call
ja
mov
add
mov
add
pop
testl
jg
lahf
movb
enterw
loopne
push
stos
lcall
pop
mov
cltd
popa
push
jge
inc
xchg
adc
add
insb
lret
fiaddl
popa
or
mov
test
imul
mov
call
push
pop
jl
push
aas
xor
clc
es
pop
xchg
xchg
add
ds
sub
cmp
mov
inc
mov
jno
sbb
and
dec
adcl
mov
lods
pop
ds
inc
je
pop
push
jns
inc
dec
add
jp
mov
test
cmpsb
in
addr16
repnz
test
lds
jle
mov
sbb
pop
cld
sub
fistpl
cmpsl
cwtl
push
sbb
imul
in
dec
mov
dec
out
push
xor
mov
cwtl
xor
in
add
test
xor
popa
int3
out
mov
pop
imull
cmp
out
das
cs
and
inc
in
pushf
or
aam
mov
or
add
add
shl
xlat
mov
dec
out
push
inc
mov
sub
xchg
adc
cmpsb
jnp
fnstenv
lahf
sahf
enter
incb
or
nop
ljmp
ja
mov
gs
ja
adc
xor
rcrb
out
xor
rol
xchg
andb
jb
mov
push
frstor
into
mov
into
xchg
jg
pop
inc
mov
lock
push
or
dec
jle
imul
negl
bnd
and
xchg
xchg
cltd
mov
sbb
test
js
out
aad
xchg
imul
push
popf
xor
fmul
add
mov
or
and
js
mov
mov
inc
cmp
sbb
cwtl
mov
adc
subl
inc
mov
test
out
andl
jbe
inc
cs
and
xor
aam
popf
pop
pop
mov
mov
bound
xchg
cmp
lds
xor
popf
popf
xchg
data16
push
add
add
cmp
or
int
test
add
sahf
jnp
mov
xor
pushf
test
daa
stc
sar
mov
scas
sub
xchg
dec
mov
sub
mov
idivl
mov
sbb
jl
xchg
outsb
mull
les
inc
pop
dec
add
adc
aaa
sbb
mov
aas
vhsubps
lods
lret
fcoms
loop
adc
cwtl
ss
add
sbb
push
bound
addr16
jo
and
push
lahf
cmp
outsl
jg
lcall
push
pop
pop
push
mulb
aam
mov
mov
idivl
popa
inc
inc
cltd
push
jne
and
int
sbb
loop
test
or
or
stos
pop
or
jmp
jo
loope
mulb
adc
mov
mulb
push
xchg
pop
cmp
sub
lds
ret
sub
addl
xchg
cmp
push
xchg
sub
ja
and
mov
stos
lods
or
jp
cmp
pop
leave
aad
mov
or
sbb
push
out
addl
lahf
sub
dec
sub
sbb
push
lea
push
cmp
ljmp
clc
dec
hlt
movsb
sbb
cmp
jp
jnp
into
rcrl
sbb
lods
cmp
and
jns
stos
outsb
sbb
or
jecxz
mov
loop
sarl
mov
int
dec
mov
mov
in
xchg
sbb
test
pushf
loopne
or
mov
mov
and
sar
sub
movsb
push
push
cmpsl
mov
mov
dec
jmp
jp
popf
cwtl
lret
mov
cmc
stc
mov
mov
ret
pop
xchg
mov
movsl
jl
js
mov
pop
cld
jae
sbb
andb
push
cwtl
les
fistps
subb
outsl
dec
andl
adc
sub
dec
lock
arpl
loopne
xor
cmpsl
cwtl
ficoms
push
jecxz
mov
cmp
mulb
dec
js
mov
mov
pushf
mov
inc
and
cmpsl
pop
in
in
lock
inc
and
sub
das
cld
sti
push
in
lock
popf
cmpsl
xor
dec
pop
fisubl
or
lock
les
ret
jg
rcrb
leave
jp
lods
mov
lahf
test
mov
in
xchg
negl
lret
cmp
push
das
sub
xor
or
cmp
popf
fisubrl
scas
sbb
cmp
ljmp
xchg
out
pop
imull
adcb
or
sbb
sub
movsb
mov
gs
std
ret
jecxz
orl
adc
xor
ds
sbb
lret
sub
xor
xor
cmpb
mov
add
adc
xchg
loopne
sbb
adc
inc
xchg
dec
into
jmp
jl
aam
pop
inc
mov
cs
pop
iret
cmp
call
xor
push
xchg
shll
outsl
jbe
dec
mov
ss
and
cmc
adc
lock
dec
jl
or
call
into
jae
in
lcall
or
or
lods
pop
cltd
pop
jmp
stos
adc
mov
jmp
cmpsl
inc
mov
mov
daa
das
sbb
fs
les
clc
and
mov
or
fisubrl
fwait
mov
in
push
or
lret
sub
or
or
fbstp
sbb
and
sbb
rorl
fcmovnb
adc
lret
mov
andb
int3
push
pop
sbb
ljmp
jne
sub
lock
call
sti
sar
xorl
fs
mov
inc
pop
movsl
sbb
mov
xchg
inc
dec
cmp
jge
jnp
ret
and
mov
stc
aad
test
push
clc
aam
sti
sahf
decl
nop
aas
cvtps2pi
cmp
shlb
add
ss
xor
cli
push
xor
sar
data16
push
aas
xchg
xor
cmp
sbb
xor
fldt
ret
sbb
dec
jge
mov
decb
add
mov
cmpsl
inc
mov
xlat
clc
loope
lea
rorl
cltd
shrb
dec
mov
popf
mov
add
das
sbb
das
xchg
mov
pop
mov
and
mov
pop
pop
cmp
enter
lds
fbld
pop
or
jno
adc
sbb
es
out
ja
add
mov
jl
ja
mov
aas
test
imul
add
fpatan
mov
addr16
scas
mov
xchg
mov
ret
lods
mov
psubsw
data16
mov
sub
icebp
add
push
adc
lods
out
push
and
imulb
mov
mov
and
les
shll
adc
or
pop
xchg
in
lahf
sbb
push
jle
ret
or
sub
ja
repnz
xlat
pusha
sub
test
clc
xor
lock
int3
negl
dec
mov
dec
add
loope
hlt
inc
mov
loope
dec
mov
int3
adcl
mov
xchg
dec
jecxz
repz
in
js
in
cmp
lret
lods
shrl
sbbb
aad
stc
call
fidivs
and
pusha
ror
stos
stos
or
xor
sahf
daa
ljmp
or
aaa
or
js
in
mov
lcall
lods
and
les
lods
mov
lds
push
push
jg
pop
int
xchg
stc
into
jns
dec
ja
lods
addb
pushf
cmpsb
push
cmp
jnp
sub
ja
lea
out
cmp
popf
sbb
mov
data16
jg
stos
repnz
fldz
pop
mov
sub
orb
xchg
fwait
cmp
in
inc
sbb
rcrb
mov
push
xor
mov
sub
leave
ror
lret
arpl
pop
mov
iret
dec
sub
sub
xor
pushf
ret
lods
jmp
hlt
sbb
mov
xchg
mov
jp
bound
xlat
xchg
push
cld
add
cwtl
push
push
jns
push
fmuls
cmp
push
das
mov
pop
aam
dec
jbe
js
mov
mov
imul
cli
adc
test
push
xchg
or
loope,pt
icebp
mov
test
das
pop
mov
daa
fnstenv
shl
mov
fsubl
mov
stos
inc
xor
es
in
scas
sarl
pop
call
or
je
test
aad
rorb
inc
repnz
movsb
push
movb
popf
adc
sarb
rolb
inc
in
cmp
ss
inc
dec
jnp
mov
test
xchg
mov
fldl
gs
das
add
xchg
mov
inc
into
dec
test
mov
cld
jmp
scas
icebp
xchg
jns
and
shll
mov
fucom
fistpl
cs
ffreep
stos
pop
inc
and
jns
cmpsb
inc
or
cwtl
xor
lock
xor
cwtl
rcrb
xor
rcll
mov
dec
jno
pop
jns
ret
sbb
psubb
push
push
adc
inc
push
mov
jnp
xchg
fs
xchg
push
xor
or
pop
lret
in
ljmp
cmc
push
ljmp
jnp
insl
cmc
icebp
mov
jecxz
aam
sub
or
mov
cwtl
inc
movsl
dec
loop
scas
lods
orl
out
cmp
xchg
aas
or
outsl
push
negb
cmc
mov
in
mov
and
sbb
outsb
daa
xchg
xchg
and
repnz
push
xchg
pusha
push
fcmovu
push
enter
mov
mov
cmc
jp
inc
xor
add
repz
cmp
scas
cmp
mov
not
aad
cmp
int
add
xor
push
sbb
xor
inc
xchg
test
fiadds
jne
out
lret
fldcw
addr16
ficoml
dec
nop
mov
push
push
aad
adcl
pop
xor
pop
dec
das
pop
mov
push
inc
test
cmpb
call
mov
pop
dec
pop
mov
jae
push
mov
vpshlb
xchg
pusha
sti
out
cmpsb
mov
setns
outsb
jbe
sub
fcomp
dec
dec
bound
or
cmp
fadds
or
lock
jecxz
xlat
xor
adc
imul
fnstsw
mov
fxtract
push
into
lods
sub
lea
dec
in
cmovp
cmp
jne
push
jne
and
popf
push
std
jnp
ja
leave
sub
cmp
imul
and
das
xor
push
enter
pop
inc
movsl
cltd
pop
test
cmpsl
pop
int
adc
push
rcrl
xchg
and
xor
js
in
out
shrl
subl
lcall
mov
jno
jo
and
js
sbbb
shlb
xchg
clc
cmpsb
nop
mov
adc
or
sub
je
adc
or
sbb
jo
sti
dec
mov
in
popf
mov
fisubl
mov
xor
inc
pop
cmp
mov
sahf
popf
lahf
jle
xor
shrl
mov
lcall
xchg
pusha
cmp
push
xchg
imul
cmpb
cmp
or
mov
jmp
mov
xor
inc
iret
push
test
loope
lret
inc
les
push
push
jno
test
sbb
mov
or
fs
mov
mov
add
das
or
sbb
mov
and
ret
jmp
xchg
in
lods
add
std
in
xor
mov
jle
dec
sbb
dec
sub
xchg
or
xor
mov
add
inc
in
les
ficoms
add
mov
push
sub
jo
inc
xchg
pusha
dec
jnp
pop
pop
or
iret
shl
dec
mov
in
and
xchg
and
fcoms
push
and
decl
push
pop
cmpsl
mov
movsb
xor
out
jb
out
aad
lcall
jle
jle
jo
rcrl
addb
mov
mov
push
popa
fldcw
xchg
mov
xchg
mov
imul
sbb
hlt
aam
rcll
repnz
arpl
jbe
in
or
mov
adc
int
mov
lds
jne
dec
xchg
cmp
or
sub
pop
add
inc
push
xchg
add
xchg
mov
dec
or
dec
out
jg
cmp
and
loop
test
and
iret
mov
push
push
dec
and
subb
les
dec
inc
and
pop
cs
pop
dec
jns,pt
and
ljmp
outsl
mov
movsb
jg
enter
cli
or
jae
sub
std
imul
ret
xor
pushf
clc
mov
mov
imul
sbb
dec
jne
in
insl
inc
icebp
and
jp
pop
call
dec
push
push
cmp
inc
xchg
jecxz
dec
sub
pop
xchg
repnz
and
sbb
in
cmp
sarl
shl
pop
call
mov
or
in
cmc
iret
add
in
fimull
inc
push
scas
jp
cld
push
imul
push
xor
cwtl
add
xor
std
bound
dec
jecxz
xchg
in
out
push
xchg
leave
inc
push
notl
imul
ja
into
add
add
lret
jl
je
pop
pop
aad
adc
fisubs
loop
outsl
mov
cltd
pushl
movsb
cwtl
and
jne
pop
cmp
loopne
arpl
inc
inc
mov
mov
adc
js
pop
insb
jne
ljmp
cmp
sub
fadd
push
dec
idivl
push
outsl
icebp
jecxz
int3
add
mov
or
push
aas
lcall
adc
pop
pop
mov
push
fisttpl
inc
gs
pop
push
add
xchg
jp
popa
sbb
dec
movsb
dec
loope
and
push
repnz
in
enter
cmpsb
push
movsl
xor
sbb
adcl
fcomps
cmpb
jl
cli
xchg
outsb
sbb
inc
imull
xor
hlt
and
mov
dec
jp
fs
insb
jmp
negl
iret
jl
dec
push
and
pop
xchg
sub
addr16
nop
lock
fdivrl
pushl
ss
test
inc
cmpsb
inc
or
rorb
cmp
mov
sub
repnz
movsl
and
or
push
inc
filds
ja
sarb
fisubrs
sbb
aaa
sbb
pop
cmc
clc
clc
jns
addl
ret
dec
iret
add
push
jge
push
daa
shlb
stc
gs
outsl
cmpsb
lcallw
imul
xor
sub
adc
mov
and
rcrb
dec
sahf
mov
pop
outsl
aam
repnz
test
pushf
insl
jae
mov
cmpsl
iret
sbb
into
leave
cmp
adc
arpl
push
repnz
mov
aam
and
xchg
jge
inc
mov
jle
jns
pop
mov
aad
rclb
mov
sbb
cmp
test
shll
add
ljmp
cmp
or
movsl
cmp
lahf
dec
mov
in
cmp
js
and
insb
fwait
imul
xor
xchg
inc
dec
leave
add
int
dec
jnp
pop
sub
notl
cwtl
xchg
mov
aam
cmp
lock
mov
clc
sub
test
in
xor
jmp
mov
cmp
rcll
mov
jl
sub
sbb
fidivrs
jg
cmp
in
adc
mov
xchg
repnz
add
js
pop
push
add
mov
push
lds
or
test
mov
mov
adc
sti
stos
and
scas
xchg
and
mov
mov
jge
dec
call
inc
shlb
outsl
push
sub
push
fbld
cltd
data16
push
cli
add
ret
jle
daa
xor
lock
ss
pop
dec
and
mov
sub
icebp
fs
test
or
cmpsl
fs
mov
mov
outsl
or
sbb
sahf
popf
xor
mov
inc
call
in
imul
popa
into
mov
loope
sub
cmp
rcrl
in
das
push
pusha
jb
fcomps
mov
and
cmpsl
cmp
adc
jb
lea
xor
loopne
lds
adc
and
pop
jne
ret
add
push
aam
adc
sbb
or
jg
repz
or
add
mov
ss
sub
cmp
push
mov
cwtl
or
mov
jb
fidivl
adc
mov
push
fmul
lcall
out
mov
lcall
mov
hlt
xchg
notl
mov
push
and
jmp
sbb
sub
push
adcb
fcoml
inc
pop
leave
sbb
xchg
mov
rolb
pop
sub
lods
mov
jo
xor
push
mov
in
jae
mov
inc
mov
xor
in
mov
test
and
inc
sbb
mov
scas
sub
xor
mov
push
imul
insl
movsb
sub
mov
or
mov
imulb
sub
push
lods
outsl
inc
rcll
leave
or
mov
int3
xchg
sub
adc
or
lods
push
mov
je,pt
pop
or
or
dec
push
scas
imul
fsubs
mov
dec
jp
popf
fadds
clc
es
les
aaa
inc
adc
movsl
outsl
jmp
mov
push
icebp
into
frstor
jmp
call
xor
push
popa
or
adc
xor
test
cmp
or
maxps
test
mov
mov
adc
in
testb
dec
in
lods
rcrl
movzwl
call
icebp
sbb
mov
and
sahf
fisttps
lret
push
xor
in
daa
mov
and
sbb
js
mov
cmp
out
push
movsl
mov
mov
push
adc
loope
sti
fidivrs
jb
jae
faddl
sbb
xorb
mov
ds
jecxz
fnstcw
ja
sub
adc
pop
and
jne
fs
lahf
push
xchg
xor
add
push
pop
fs
imul
sbb
icebp
int
inc
and
jnp
filds
das
movsb
dec
cmp
enter
xor
fisubrs
pop
cmp
cmc
xchg
jno
aas
mov
mov
sub
or
dec
inc
add
sub
add
sub
shll
mov
cli
push
fadd
jo
xchg
jns
sub
xor
mov
inc
pop
fstps
popf
mov
ja
push
push
adc
bound
mov
es
fdivrs
daa
cmpsb
out
pop
xchg
arpl
push
movsb
mov
sbb
std
sbb
adc
xor
rolb
lret
divb
insl
mov
fcomi
inc
cmp
adc
sti
int3
xchg
ja
mov
sub
das
loopne
sub
dec
mov
popa
ss
movl
ljmp
mov
push
pop
xchg
jne
inc
mov
add
ja
cmp
rorl
jae
sarl
push
mov
mov
lret
adc
jns
and
into
cmp
divl
jns
pop
dec
jno
or
daa
cmp
test
scas
mov
add
cmpsb
inc
mov
sub
and
loope
scas
aam
je
mov
loope
divl
scas
add
sub
outsb
ficoms
adc
pop
das
push
sbb
aam
dec
mov
aad
or
fldcw
sti
xor
push
imul
ds
cmp
dec
repz
mov
add
ja
ret
dec
loopne
rorb
loop,pn
mov
xchg
je
add
scas
push
jae,pt
mov
shrl
loop
rcrb
mov
jae
jp
xchg
icebp
dec
pop
shrb
or
mov
mov
movsl
gs
jbe
jo
cltd
movsl
dec
pause
or
movl
repnz
leave
pushf
in
bound
cmp
lret
rcrl
lahf
clc
das
adc
subl
fstl
sub
cmpsl
add
es
push
iret
xor
xor
scas
add
cpuid
cmp
movsb
lods
out
in
sbb
mov
mov
mov
and
jge
aam
loopne
jecxz
pop
pop
inc
daa
inc
es
jns
xor
pop
dec
popf
and
inc
push
sub
sarb
xchg
and
and
lds
loope
add
xchg
enter
cwtl
mov
mov
mov
add
std
pop
xchg
lods
dec
insl
sti
sub
sub
es
inc
xchg
xchg
xor
mov
xchg
scas
aaa
lods
test
or
add
cmp
pop
or
adc
push
or
sbb
jae
mov
sbb
icebp
add
mov
hlt
xchg
fiaddl
test
lret
or
inc
or
mov
mov
pop
notb
lahf
mov
push
push
pop
pushf
jae
out
and
out
and
xchg
in
dec
mov
call
xlat
push
push
js
jbe
lcall
out
pop
xor
into
sub
test
adc
jg
fs
pop
add
cmp
adc
arpl
xchg
fsubr
jo
jp
cmp
pop
insl
dec
imul
call
xchg
or
lock
push
fucomp
pop
sub
xchg
sub
pop
adc
rcrb
xor
cwtl
cmpsl
lahf
inc
jle
dec
push
jg
imul
cltd
pop
ljmp
mov
or
leave
mov
adc
mov
mov
xchg
add
xor
sahf
or
sarl
sbbb
gs
insb
pop
mov
outsl
stc
mov
into
mov
pop
nop
xchg
add
jmp
xchg
out
pop
jo
sahf
and
mov
and
mov
push
pusha
pop
outsb
inc
hlt
in
iret
clc
dec
and
iret
aas
xchg
cmp
js
push
lods
or
imul
test
icebp
sub
xchg
adc
fiaddl
ja
or
jecxz
mov
mov
cmpl
jo
inc
push
call
dec
pop
int
inc
sti
fcmovb
rol
lret
scas
cmpsl
cmp
repz
fisttpll
test
mov
lods
add
in
mov
adc
out
outsl
dec
movlps
jl
add
sti
pop
push
mov
cmp
outsb
lcall
xor
cld
sbb
sub
ret
movsb
adc
ret
pop
fldenv
sub
mov
in
fistpl
outsb
lahf
push
push
sub
sbb
sub
dec
iret
cld
and
push
rcrl
scas
call
sahf
cmpsb
sbb
push
push
push
pusha
imul
sti
stos
add
cmpsl
adc
xorl
add
jb
jno
lret
stos
inc
pop
sub
fadd
mov
test
daa
adc
std
mov
inc
mov
mov
outsb
xchg
stos
add
repz
add
inc
jg
mov
push
jnp
push
jb
add
loopne
sahf
bound
sub
sarl
fiadds
cwtl
and
test
test
movsl
pop
sbb
xorb
sub
mov
dec
xchg
rorb
outsl
xorl
cmp
bound
int
inc
cmp
mov
inc
sahf
fwait
leave
mov
or
mov
out
adc
nop
insl
mov
jb
and
dec
ret
push
xor
jae
pop
sahf
mov
mov
jmp
lock
stos
int3
cmc
jp
pop
not
popa
shlb
jne
add
dec
clc
int
and
je
and
add
fcompl
lods
push
xorl
call
std
mov
sub
mov
push
insl
inc
push
xchg
addl
xchg
xor
and
push
adc
test
or
mov
pop
mov
shlb
mov
mov
scas
enter
js
mov
sub
cwtl
sub
mov
dec
push
lret
aad
xor
pop
and
ss
test
jmp
add
aam
ror
mov
pusha
push
out
addl
insl
in
and
jne
xchg
sarb
jne
dec
adc
dec
jl
test
lahf
adc
scas
inc
fdivrs
shrb
icebp
std
xor
add
adc
xor
das
jno
push
mov
pop
xor
adc
xor
add
jns
jb
inc
sub
and
mov
push
loope
dec
mov
loop
cmp
mov
or
rclb
test
lahf
or
xlat
jb
add
cli
dec
pop
pop
xor
jb
out
push
adc
cld
test
mov
adc
shrb
sbb
jb
out
clc
sbb
movsb
fcmove
aaa
divb
push
xchg
in
jns
scas
mov
jp
addr16
cli
movsl
jno
cmpsb
push
adc
push
addr16
sub
insl
sbb
push
lahf
in
ret
dec
adc
dec
cmc
int
fdivl
mov
cmp
sbb
adc
loop
inc
shlb
or
lock
scas
shll
cmp
pop
sbb
mul
daa
xchg
jo
test
sar
icebp
sbb
adc
mov
mov
fisubs
lods
mov
mov
xlat
mov
push
adc
pop
es
rcrl
adc
out
inc
sbb
sbb
scas
int
ds
stos
hlt
cmp
jl
xchg
fs
mov
xchg
push
call
js
popf
sti
sbb
cwtl
and
sar
xor
jnp
in
mov
mov
in
adc
out
mov
int
inc
mov
into
ljmp
dec
jns
xchg
jno
fiaddl
lods
stc
leave
dec
jno
fmuls
and
jp
add
mov
fsubrs
push
test
jle
xchg
out
dec
cwtl
adc
hlt
xor
cwtl
mov
cmp
mov
or
adc
xor
pop
ficoml
les
mov
sub
or
scas
aam
mov
ret
xor
push
xor
out
xchg
push
std
mov
pop
xor
or
lcall
cwtl
gs
loopne
adc
mov
xchg
sbb
test
test
jle
lret
mov
ss
mov
stc
push
in
aaa
xor
hlt
test
mov
iret
sub
xchg
ret
fsubrl
out
orb
push
gs
jno
mov
sub
mov
dec
mov
jge
push
rorb
cmp
lods
pop
insl
stos
cmc
mov
stc
and
fmuls
fisttpl
mov
cli
jmp
and
aad
hlt
divb
movsl
js
push
sub
rclb
pop
mov
rorb
mov
mov
int
mov
je
dec
int
or
xchg
sbb
cltd
popf
sub
jg
push
and
lea
cmp
leave
xor
push
push
lds
dec
jmp
aaa
or
inc
sbbl
std
incb
push
into
fs
cmc
mov
mov
hlt
jge
dec
push
pop
dec
pop
fstl
mov
push
out
mov
cmpsb
lret
inc
jae
fmuls
cli
ds
or
push
push
mov
mov
sub
inc
add
test
daa
scas
bswap
inc
dec
sbb
shld
cmpsb
push
jp
clc
dec
adcb
fisubrs
xchg
pop
shl
add
loope
lea
shlb
int
lahf
mov
mov
mov
pop
add
jecxz
push
int
or
out
mov
mov
ja
and
rcrl
pop
jle
hlt
mov
shr
cmpb
cli
cmp
jbe
adc
inc
js
ret
jecxz
mov
jle
sub
and
fnstenv
pushf
and
push
and
leave
and
movsb
rolb
cmp
mov
ljmp
das
add
mov
fimull
inc
pop
stc
dec
scas
mov
popa
and
mov
pop
into
sub
mov
xchg
push
icebp
sub
sbb
xchg
lahf
cmpsb
cs
daa
fisubl
pop
mov
mull
jle
sub
jg
ds
cmp
sub
fwait
jg
out
and
xchg
test
push
sti
adc
mov
and
pusha
in
adc
shl
test
neg
outsl
out
xchg
and
push
stc
clc
les
xor
hlt
lds
xchg
mov
adc
jl
mov
imul
fisubrl
hlt
int3
shll
std
jmp
mov
gs
dec
lret
pop
or
pop
or
das
mov
jno
push
decl
aas
jmp
int
sbb
add
adc
jp
xchg
push
lods
fistps
aas
mov
xor
popa
xor
cltd
clc
int3
mov
inc
andnps
add
push
cs
mov
mov
inc
sar
xor
sbb
test
jns
out
sti
orb
jecxz
mov
or
inc
cmp
push
inc
jae
loop
mov
push
aad
dec
or
scas
or
push
push
mov
imul
adc
jae
arpl
in
sti
mov
lods
es
leave
imul
insb
repz
jo
aas
icebp
repnz
jbe
dec
rol
mov
mov
and
jnp
clc
mov
scas
cli
sti
mov
mov
jg
pop
test
xor
xor
add
push
xlat
xchg
or
xor
fsubl
sub
xchg
testb
andl
mov
movsb
xchg
dec
pop
jmp
bound
jle
into
insl
and
inc
int3
stos
std
out
icebp
loope
mov
aas
xchg
incl
and
sub
inc
pop
xor
fidivrs
cld
bound
fwait
nop
outsb
aam
mov
adc
xor
jp
push
clc
jle
vrsqrtps
das
mov
sub
mov
mov
das
sbb
inc
or
fs
sub
out
dec
dec
out
iret
mov
jno
jns
mov
icebp
dec
aad
mov
pop
inc
adc
adc
dec
cmp
pop
filds
leave
aam
adc
je
lcall
gs
xor
cwtl
push
into
xchg
andl
es
mov
aam
add
mov
dec
push
or
xor
jo
aaa
push
push
xor
inc
ss
stc
daa
and
push
aam
insl
pushf
mov
mov
mov
pop
push
nop
daa
imul
jl
add
movsl
lret
pop
push
loop
aad
addb
imul
mov
jecxz
pop
adc
dec
cwtl
aam
mov
dec
adc
cmp
sbb
fadds
mov
xor
fldl
in
test
scas
repz
adc
loop
or
add
sub
jbe
mov
leave
push
jnp
bnd
mov
dec
roll
add
andl
cli
sub
sarb
add
shr
dec
jnp
loope
shr
test
jmp
inc
add
popf
sar
add
loope
ds
lods
add
mov
jl
mov
cmp
mov
fwait
insl
or
xchg
fs
nop
pop
les
sub
add
cmc
mov
fs
shlb
cmp
aas
xchg
nop
in
sub
daa
push
jae
rol
or
sub
loope
dec
xor
inc
sahf
shrl
faddl
insb
add
das
sahf
repz
int3
movsl
and
or
inc
adc
adc
notb
pop
mov
and
loopne
fdivr
insl
xchg
daa
subb
das
mov
cwtl
dec
leave
int
cmp
sbb
push
xlat
mov
inc
add
sub
in
pusha
lcall
dec
sub
pop
xchg
sub
cmp
jmp
dec
mov
and
inc
xor
insb
pop
scas
mov
jne
xlat
mov
mov
gs
movsb
mov
push
jecxz
lret
loop
cmpb
mov
inc
out
lcall
add
add
dec
add
das
push
jl
dec
push
imul
mov
orb
jne
les
stos
sub
mov
mov
sahf
xor
cmp
sub
int
mov
mov
and
adc
mov
sub
stc
sub
push
and
push
dec
xor
scas
ljmp
popf
push
das
push
daa
data16
imul
pop
jl
mov
cmp
adc
cmp
shlb
sub
enter
mov
add
imul
cmpsl
ja
push
mov
xchg
mov
dec
mov
rorl
adc
out
fwait
lea
lret
mov
andl
in
pop
inc
lret
jg
stc
popa
sub
test
cs
mov
pushl
xor
ret
lods
mov
cwtl
aas
int3
mov
test
dec
lock
mov
movsl
dec
jbe
popa
popl
xchg
push
jecxz
sub
xchg
call
dec
imull
scas
bndldx
push
and
jge
fidivrs
lds
push
insl
fsubrp
xor
cmp
sti
adc
gs
mov
or
mov
sub
sbb
pop
sub
jmp
rcrl
push
loopne
add
mov
inc
pop
push
inc
pop
test
xor
out
jmp
mov
scas
jae
into
pop
gs
mov
dec
mov
call
in
test
sbb
adc
jp
shlb
imul
inc
fisubs
mov
mov
insb
jmp
das
sub
and
cwtl
or
mov
pop
lea
insb
jnp
push
jno
and
push
leave
push
pop
loop
inc
xchg
push
add
dec
iret
and
int
sbb
sub
push
shrl
xor
shl
add
push
in
xor
and
and
cmp
cmp
adc
push
or
sub
add
shlb
leave
jl,pn
push
and
cmpsl
mov
jae
test
cwtl
jg
jbe
xor
and
outsb
xchg
jle
bnd
jmp
push
mov
daa
movsl
inc
jg
xchg
out
les
mov
shrl
push
fs
sbb
mov
out
cmp
dec
shll
arpl
xchg
mov
bound
xor
jbe
sahf
or
mov
push
icebp
push
dec
neg
mov
dec
mov
daa
mov
loop
inc
jo
loop
fwait
mov
or
xor
call
ss
mov
xor
sub
xchg
in
addr16
dec
add
mov
sbb
mov
and
shl
repnz
mov
lahf
hlt
int
fnstenv
mov
hlt
lcall
inc
test
or
loop
clc
lods
add
ret
ds
ja
std
test
xor
outsb
xchg
cmc
cli
pop
mov
fidivrl
xchg
push
mov
pusha
jb
pop
pop
jle
testb
js
jle
in
lcall
add
jecxz
inc
xchg
stos
and
cmpsb
std
mov
push
sbb
sub
jae
pop
xchg
jns
sti
xchg
push
dec
adc
jg
rolb
dec
jecxz
add
or
mov
xchg
xor
ljmp
nop
xchg
jmp
xor
iret
stos
sbb
or
xchg
mov
mov
mov
mov
dec
daa
sub
inc
push
sub
pushf
shll
cs
pop
adc
inc
add
and
mov
mov
push
inc
loope
and
outsb
lahf
ds
dec
std
cmp
xchg
sbb
pop
sub
bound
test
pop
in
dec
jl
aad
cmp
arpl
rclb
fwait
jne
aad
pop
or
push
into
sub
lret
and
xor
icebp
lock
cli
sub
push
outsl
pop
scas
popa
test
push
xchg
mov
dec
sti
sub
insl
sub
add
push
mov
or
jae
es
pop
push
in
jne
cmp
cmp
xlat
jl
jmp
sti
or
cltd
mov
pop
mov
xchg
rol
lcall
in
xor
cld
sbb
sub
cmp
popa
xor
icebp
test
jmp
sub
aas
into
lock
and
xor
jge
push
js
dec
or
lret
mov
cmpsb
dec
jge
xchg
daa
mov
mov
cwtl
jo
dec
shll
push
mov
sub
pop
cmpsl
or
leave
stos
lret
inc
rcl
jle
jb
xor
je
popf
add
pop
push
push
and
addl
sub
aaa
aad
out
fwait
mov
faddl
pop
mov
inc
xor
mov
rorb
xchg
movsb
repnz
cmpsl
cwtl
push
sbb
das
inc
push
cmp
loope
ss
jg
shlb
out
mov
fwait
sbb
mov
call
sahf
ret
mov
and
xlat
pop
mov
mov
call
insl
dec
sbb
push
fnstenv
push
jno
add
sahf
push
xchg
or
fwait
pusha
frstor
mov
scas
dec
push
pop
mul
ljmp
repz
jo
inc
popf
test
imul
jbe
add
ret
pop
pushf
pushf
shlb
rcrl
cmc
fucom
inc
andb
pop
aas
add
aad
lods
adc
shl
outsb
jae
insl
scas
xor
mov
out
inc
movsb
mov
mov
pusha
xor
cmp
and
push
mov
pushf
addr16
movsb
js
addr16
testl
jbe
ffree
push
jge
inc
mov
mov
sbbl
fs
stc
cmpsb
xchg
mov
push
sub
hlt
imul
imul
push
xor
push
imul
jo
cld
aam
or
sbb
lea
stos
dec
or
add
shl
push
add
mov
sub
push
icebp
jmp
fst
cmp
adc
and
mov
push
add
int3
sbb
aam
add
mov
scas
iret
iret
jle
ja
mov
or
jb
and
lret
xchg
fwait
fwait
sbb
push
stos
and
int3
xchg
jae
xchg
sub
dec
jp
das
andb
mov
and
jbe
aaa
mov
scas
dec
push
or
sbb
sbb
lcall
clc
dec
mov
lds
scas
adc
repnz
out
jecxz
test
xchg
enter
insb
mov
adc
pop
mov
pop
mov
shlb
incb
push
xor
add
dec
or
xchg
cwtl
lea
xchg
mov
adc
loope
mov
adc
cld
je
mov
call
and
in
sub
mov
nop
or
add
in
aad
adc
je
push
fmuls
sbb
xlat
lahf
dec
add
pop
adc
sub
inc
nop
push
xor
inc
outsl
loopne
popa
xor
mov
mov
stc
jecxz
dec
jns
push
loopne
push
sbb
repnz
stc
xchg
popa
and
lret
loopne
enter
int3
and
rcll
push
sahf
cmp
in
ja
inc
test
out
jns
push
fcompl
jp
adc
dec
fs
pop
xchg
rcll
mov
mov
mov
aaa
lret
inc
mov
jae
pop
mov
sub
sub
loop
lods
ljmp
aaa
int3
pop
imulb
popf
dec
xor
fldl
sbb
scas
add
insl
sbb
test
les
loop
xlat
cmp
and
loope
bound
sub
pop
inc
shll
mov
mov
add
mov
bound
popf
xor
mov
inc
pop
and
mov
push
filds
sub
repz
xor
cmp
adc
inc
nop
cwtl
lahf
and
lds
fcmovbe
out
leave
pop
jb
cmp
lea
scas
jle
cmpsb
add
dec
fwait
dec
jge
xor
dec
inc
int
enter
add
jb
jno
fnsetpm(287
scas
movsb
fstpt
leave
aas
sub
xlat
insl
sti
cmp
cmp
movsb
shll
rorb
sbbb
mov
movsb
fistl
and
loope
das
shrb
push
in
in
jle
add
add
sub
in
pop
dec
fcomip
sub
mov
mov
ret
and
ret
mov
mov
je
ljmp
sbb
movsb
mov
fstpl
jg
jge
mov
xchg
xor
push
cld
lahf
cmp
sub
das
sbb
jns
and
mov
ss
jns
sub
mov
imul
and
les
ret
push
pop
mov
push
into
or
pop
lods
insb
pop
aas
xchg
dec
jo
add
jae
ss
dec
aaa
mov
add
fwait
xchg
mov
mov
frstor
jecxz
mov
jne
mov
std
adc
ret
adc
pushf
push
in
sbb
push
mov
aaa
fidivl
sbb
sbb
adc
push
sub
push
or
das
outsl
mov
lret
daa
adc
cmp
gs
pop
and
push
pop
insb
inc
cmp
std
mov
into
lcall
aad
mov
in
xor
ffree
push
sbb
rcr
push
fidivrs
jne
out
pop
mov
xor
mov
jnp
popf
fiaddl
aaa
mov
subb
inc
fiadds
and
lcall
cwtl
fistl
push
test
popf
dec
das
xchg
int3
pop
xchg
dec
fwait
mov
in
stos
cmp
repz
xchg
pop
push
mov
outsl
push
fwait
mov
jge
jne
push
lods
jle
push
xlat
xchg
push
push
ds
pop
imul
inc
ret
rorb
jecxz
inc
pusha
jge
add
mull
int
imul
adc
decl
pushf
ljmp
stos
aaa
jnp
sub
xor
pop
out
cs
aam
xchg
or
scas
inc
cmp
add
dec
xor
fdivl
push
mov
shr
pop
idiv
mov
mov
fwait
dec
movb
lods
int3
clc
jp
mov
jle
icebp
cmp
xorb
inc
xlat
jno
dec
scas
or
and
mov
cmp
in
jge
lret
das
ss
adc
leave
lret
fstl
pop
imul
add
arpl
ss
and
inc
inc
xorb
jle
push
adc
mov
or
mov
pop
test
cmp
inc
pop
xor
movsb
mov
adc
test
push
xchg
pop
movsb
adc
mov
addr16
and
cs
inc
iret
ret
push
or
ret
mov
and
pop
ja
stos
outsl
sub
icebp
fs
arpl
out
fistpl
inc
or
sarl
inc
mov
fs
insb
mov
shll
xor
inc
cwtl
ret
pop
sbb
and
movsl
dec
mov
das
mov
cmp
test
push
pop
jbe
jl
mov
scas
dec
in
pop
push
cltd
lret
nop
push
push
pop
adc
pop
sub
cmp
dec
pop
push
mov
into
call
or
adc
insb
mov
cmp
mov
test
test
xor
gs
adc
xchg
enter
sahf
xor
ja
xchg
aad
and
xchg
inc
loop
pop
jne
sti
loopne
movsl
inc
int
push
enter
or
movsl
clc
lahf
push
sarl
mulb
stc
sarl
xlat
fwait
xchg
xchg
xchg
loopne
push
jo
in
push
iret
in
iret
xchg
fcmovne
daa
xchg
shll
div
scas
pop
jmp
inc
cmp
jle
sub
sub
sbb
adc
add
nop
add
xor
xchg
leave
mov
addl
pop
push
clc
sub
xchg
mov
mov
xor
inc
add
lods
sub
sahf
nop
es
sub
sub
or
add
xchg
and
shrl
gs
push
repnz
aad
add
mov
js
insl
cmpsl
cmc
outsb
xlat
push
lcall
or
push
xor
popf
notl
loope
call
repnz
notl
in
lock
in
xlat
xlat
dec
repnz
out
fwait
cli
and
dec
je
cmpsl
nop/reserved
xor
push
xorl
bound
and
loopne
imul
cmp
xlat
dec
mov
mov
fisubs
fldl
mov
in
sub
fsubs
stos
pop
dec
call
jnp
and
mov
xchg
cwtl
push
hlt
pop
push
mov
lret
sub
mov
sahf
leave
aaa
fldt
inc
pop
cmpsl
pushf
dec
in
ja
adcb
fwait
sub
sbb
mov
hlt
cld
das
sbb
fisttpll
jns
cli
dec
inc
out
jns
and
stc
je
jns
push
cmp
push
aaa
and
popl
add
es
sbb
xchg
jae
jo
cltd
jle
fsub
int3
out
pushf
push
jo
add
add
mov
mov
mov
arpl
dec
lret
push
jp
mov
add
push
test
add
mov
sbb
mov
mov
movsl
jle
and
in
imul
fisttps
mov
pop
mov
add
mov
inc
xchg
jb
call
movsb
lods
push
xor
xor
dec
sarb
add
mov
stos
ret
test
and
aad
sti
fisubl
out
lea
movsb
test
ret
or
jne
sbb
adc
out
sahf
cltd
or
sub
pop
adc
sbb
sub
push
sub
mov
push
in
cmp
icebp
push
cmc
das
pop
jns
ret
and
inc
jae
xor
push
mov
push
and
inc
mov
fiaddl
push
mov
dec
jl
scas
aaa
in
push
add
lret
arpl
jmp
mov
fsub
adc
xor
pop
loope
scas
mov
dec
jge
push
gs
mov
and
mov
rcll
jbe
push
repz
pop
xchg
push
ds
fs
notb
mov
push
jb
loope
ljmp
fnsave
jp
mov
cwtl
mov
xor
rcrl
ljmp
popa
out
call
out
mov
mov
inc
mov
aad
addr16
push
and
xorl
push
mov
addb
or
pop
inc
daa
lea
jns
cmpsb
fs
jbe
dec
test
adc
dec
dec
inc
add
mov
cld
rolb
lahf
xchg
hlt
daa
push
and
push
icebp
push
pop
mov
divb
jp
iret
inc
les
or
mov
push
cli
cltd
add
xchg
and
mov
fucom
xor
xor
les
push
fcomip
add
jmp
add
xsha256
cmpsb
adc
js
inc
lcall
std
mov
ja
in
ss
xor
and
mov
call
pop
pop
shl
mov
roll
pop
sbb
adcb
jge
pop
lds
pop
arpl
pop
clc
jg
xchg
out
shlb
aas
mov
lods
je
les
addl
jmp
and
add
test
and
inc
xchg
daa
fdivs
packsswb
addr16
add
nop
aam
xchg
add
sti
outsb
add
adc
out
js
invd
mov
movsb
scas
in
dec
addr16
add
push
jl
cmp
adc
inc
addb
cmc
les
adc
filds
test
mov
ret
lods
mov
int
ja
pop
call
lock
and
mov
lods
pop
xchg
mov
shr
adc
movsb
scas
je
das
push
in
push
xor
movsb
fcompl
dec
inc
rolb
inc
cmc
nop
adc
push
mov
test
push
jno
hlt
or
dec
rcrl
cli
jb
sarl
sub
mov
pusha
aaa
lret
cmc
shl
or
pop
lcall
add
push
data16
cmp
or
sbb
dec
jp
cmp
mov
push
xor
cmp
pushf
jl
mov
repz
jle
pop
out
mov
loop
add
add
push
xor
push
lea
fistps
fdivr
stos
mov
push
push
mov
loop
add
inc
stos
sub
or
jl
dec
ret
mov
sbb
leave
xchg
adc
les
jmp
push
and
out
push
les
inc
dec
outsb
stos
iret
out
inc
or
filds
clc
jecxz
sub
mov
and
insb
idivl
mov
je
push
mov
cld
sbb
icebp
pop
pusha
push
xor
lahf
out
gs
xor
inc
ljmp
mov
bound
in
xor
loop
pop
mov
fimuls
fstpt
or
das
cmpsl
and
ljmp
std
fwait
mov
push
dec
xor
mov
data16
inc
sub
sbbl
jae
jmp
mov
mov
adc
xor
mov
rcr
aaa
cld
jmp
jno
mov
imul
cltd
out
add
or
dec
fwait
cwtl
push
or
lret
pop
aaa
push
xchg
sub
fprem
pop
out
xchg
inc
testb
test
orb
sar
in
dec
aaa
minps
push
lcall
dec
or
fsubs
in
cmpsl
lods
dec
push
ss
rcrb
jae
rolb
dec
jb
ss
dec
fcomps
mov
push
lock
push
mov
and
mov
mov
test
or
lret
lret
sub
loopne
inc
jecxz
movb
std
sub
sahf
rorl
push
mov
cmp
xchg
sbb
xor
cwtl
push
jns
mov
pop
cmp
dec
xchg
cs
fdivl
and
fwait
jbe
fstpt
add
dec
scas
or
adc
out
pop
iret
cmpsb
mov
loope
push
push
leave
cmp
inc
push
imul
and
in
andb
push
das
sub
iret
cmp
leave
gs
or
ret
mov
inc
in
mov
pop
cmc
inc
cmp
sub
xchg
lcall
adc
pop
fwait
ds
xorl
dec
arpl
jge
movsb
icebp
xor
adc
divl
sbb
inc
daa
mov
add
or
ds
mov
sbb
es
inc
dec
sbb
push
cmp
cli
leave
mov
jge
jp
es
repz
mov
xor
xor
jae
mov
lods
pop
int
mov
lea
push
notl
pop
bound
mov
mov
rcrl
push
inc
dec
imul
in
lret
or
dec
mov
lret
adc
push
add
add
or
pop
sbb
xor
mov
fs
testl
pop
dec
fcomps
ljmp
cli
lock
out
stos
mov
dec
cs
test
fsubs
pop
jge
or
mov
test
cld
mov
mov
test
arpl
add
xchg
dec
mov
pop
cwtl
inc
aas
xchg
test
cmc
jmp
inc
out
clc
dec
mov
add
lods
lret
pop
push
xlat
xor
jp
cmpb
cmc
arpl
loop
or
stos
pop
std
adc
dec
mov
dec
and
rclb
movsl
jmp
dec
xorb
dec
imul
mov
lods
pop
repz
add
jb
sbb
dec
daa
scas
xor
sbb
jbe
mov
or
leave
sub
cmp
inc
mov
addr16
imul
insl
inc
lahf
testl
or
aam
sub
mov
mov
mov
jne
nop
pop
push
jle
je
jae
and
or
ds
sub
push
shll
sub
clc
idivb
pop
loop
pop
mov
jge
mov
mov
loop
sub
popa
bound
push
xchg
adc
xlat
lock
cmp
addr16
pop
scas
xchg
jno
sub
iret
mov
xor
and
call
jle
iret
jb
rolb
idiv
xchg
aas
jns
std
sbb
pop
push
movsb
and
mov
jns
das
scas
cmp
ficoms
cmpsb
div
xor
mov
sub
mov
lret
sbb
mov
cwtl
mov
jmp
xchg
jns
adc
fbld
out
insb
movsl
xchg
jg
sbb
push
mov
js
stos
iret
jge
pop
es
ss
in
or
push
ljmp
clc
push
jmp
cwtl
xchg
push
pop
sub
stc
adcl
dec
jg
push
jno
aas
and
ficoms
insb
cs
xchg
mov
arpl
xor
push
dec
jge
jne
pop
mov
test
sub
jae
mov
lret
mov
pop
ret
cmp
divl
out
outsl
push
dec
add
push
cs
push
jge
mov
js
mov
je
push
das
in
sbb
sub
adc
push
rcrb
push
arpl
jl
push
xor
movsb
jno
scas
push
sbb
and
pop
jg
gs
inc
sti
shlb
push
cli
mov
dec
sbbl
and
insl
cmpsb
xchg
movsb
fisttps
pop
sub
and
push
ds
pcmpeqd
sbb
pushf
adc
insb
test
sbb
pop
cld
cli
push
cwtl
inc
fldt
cmp
test
cmp
out
shll
scas
jbe
outsb
and
lret
test
call
into
sbb
dec
cmpsb
xor
push
fdivrl
inc
test
imul
sub
test
arpl
cmp
out
xor
shll
push
mov
icebp
shlb
pushf
fwait
in
lea
fdivp
push
inc
dec
lret
popa
xchg
add
jmp
push
pushf
xor
mov
xchg
bt
mov
fs
pop
cmp
fs
les
push
inc
inc
jb
jbe
fcoml
movsb
pop
xor
scas
lods
lea
inc
enter
sbb
jne
mov
or
jo
xchg
jb
shrb
inc
fxtract
int3
adc
mov
or
sbb
dec
lods
inc
sub
out
aad
mov
call
clc
sub
imul
pop
lcall
sbb
sbb
pop
push
push
sbb
push
leave
sbb
mov
lds
adc
ret
fwait
out
icebp
and
and
stc
cmp
inc
or
cld
popa
loope
bound
or
cmp
sub
pop
nop
ljmp
pop
xor
jmp
cwtd
lret
jle
or
gs
cmp
jo
fiadds
fldl
or
mov
pop
inc
or
out
jle
pop
in
mov
subb
mov
inc
sub
inc
lahf
in
sub
daa
sahf
xor
fadds
cmp
mov
pop
mov
sar
fs
sti
popf
xlat
jo
pusha
cwtl
and
dec
je
mov
xlat
repnz
pop
jo
pop
dec
inc
outsl
in
and
subb
push
mov
jl
mov
test
leave
lret
mov
add
pop
inc
mov
ret
lea
adc
je
loope
clc
push
dec
cmp
loop
out
cmpsb
lods
ss
sti
leave
xchg
adc
xchg
and
lahf
lahf
popa
das
push
in
sub
stos
fdivr
dec
ffreep
push
insl
sub
add
fpatan
pop
push
in
cmpsb
and
data16
fwait
mov
push
les
dec
fidivrl
mov
out
cwtl
sub
push
arpl
mov
mov
push
or
inc
cli
rclb
jo
nop
fldenv
int
dec
iret
or
add
add
xchg
imul
hlt
test
cmpsb
imul
mov
dec
sahf
std
mov
std
idivb
lock
fimull
or
sbb
add
push
iret
pop
and
adc
gs
and
inc
sbbb
push
fwait
ret
in
aad
mov
push
and
out
jne
mov
js
adc
mov
and
repnz
adc
int3
sub
or
fcompl
idiv
pop
or
or
stos
adc
flds
stos
xor
mov
dec
ret
push
xchg
repz
pop
in
lret
repz
ficoml
xchg
or
and
imul
jmp
add
and
sbb
rcrl
pusha
mov
adc
push
push
and
test
fdivrs
subb
imul
test
push
movl
push
pop
mov
dec
jbe
dec
adc
out
fisttpl
xor
nop
mov
das
cmp
sbb
pop
dec
outsl
sub
xor
xchg
sbbl
push
mov
mov
pop
jb
imull
or
xchg
gs
cmp
sbb
dec
jo
pshufw
fcomps
dec
xchg
leave
das
inc
test
fdivrs
cmpsl
ljmp
push
loope
out
out
lock
scas
jb
jle
daa
hlt
mov
pop
lods
arpl
add
in
mov
rorb
push
pop
and
pop
add
ds
pop
daa
ds
xchg
in
sub
mov
inc
clc
xchg
cmpsb
jnp
hlt
clc
push
mov
pop
xlat
cld
addb
cmp
pop
imul
mov
inc
xchg
fisttps
mov
mov
push
aad
cwtl
loope
inc
adc
jo
xchg
jno
stc
arpl
adcl
or
into
push
js
into
in
sub
incb
bound
fadds
mov
or
cli
sbb
imul
idivl
aaa
data16
sbb
inc
or
mov
jmp
ss
arpl
cmp
xor
push
lods
lods
cld
pop
sub
sub
cmp
outsb
jno
sub
in
lcall
jb
mov
lock
mov
xlat
jg
ds
loope
sbb
sbb
aaa
mov
cltd
mov
pop
pop
outsb
call
lea
sub
mov
in
push
mov
pop
xchg
movsb
mov
ffree
or
xchg
mov
sub
xchg
shrb
fists
out
add
jnp
mov
shl
data16
dec
gs
ret
leave
dec
inc
cmp
fs
jne
lea
int
es
mov
les
nop
andb
xor
nop
out
adc
fidivs
psubd
insl
fs
imulb
xor
cmp
inc
pop
xor
adc
mov
mov
mov
cmp
mov
cmovb
jb
jmp
fadd
mov
cli
aad
jp
jecxz
les
std
mov
add
and
mov
out
cmp
mov
sbb
in
jecxz
es
mov
cmpsl
jne
movsl
inc
or
adc
xor
test
cmpsl
mov
dec
push
lret
arpl
dec
out
push
push
push
jg
mov
dec
mov
stc
lret
cmp
cmp
dec
mov
mov
in
xor
nop
add
jnp
fwait
lret
mov
stos
adc
pop
push
in
push
sbb
scas
mov
movsb
sub
fdivl
stos
js
add
and
inc
xor
push
lds
pusha
out
jl
adc
int3
iret
movsb
mov
sub
pop
testb
push
subb
fnop
stos
fwait
adc
pop
aas
dec
push
jge
in
lret
add
lods
ss
and
in
int3
repz
repz
add
in
or
push
mov
repz
or
cli
fcomp
cmp
dec
cmova
and
jb
out
add
and
das
insl
imul
cwtl
shl
ret
and
cltd
xchg
mov
lahf
dec
imul
xor
sti
cs
sbb
rclb
inc
mov
aas
je
test
adc
or
pop
lds
sub
and
aam
lcall
out
test
inc
cld
mov
imul
jbe
aas
fimuls
popf
xor
xor
jbe
test
cmpsl
ss
push
cmpsl
jbe
dec
cmp
fldl
jle
shl
sbb
shr
movntps
pop
cmp
and
sub
mov
jp
sub
movhps
iret
lea
add
adc
je
pushf
and
fiadds
cs
xlat
cli
inc
fsubrp
cmp
mov
jnp
loop
lahf
lods
push
test
add
or
lret
inc
cli
add
xchg
jg
adc
daa
pop
int3
sub
or
cmp
add
fwait
test
aas
lock
stos
push
in
xchg
outsb
jno
pop
mov
cmp
movsb
cli
cmp
ficoml
into
jl
push
aad
inc
cmpsl
jg
push
je
pop
push
and
sub
sbb
mov
loop
hlt
pop
aas
hlt
lock
shlb
mov
cmp
inc
sub
pop
xchg
sbb
and
stos
sbb
mov
cmpsl
sahf
mov
sub
add
jbe
stc
and
int3
inc
adc
sub
jle
scas
cld
cmp
les
popf
popa
insb
mov
out
xor
lcall
mov
jno
push
into
cmpl
test
in
add
xor
lahf
ja
cmp
rol
lods
jl
fildl
and
push
in
clc
cwtl
cltd
cmpl
cmpsl
inc
stc
mov
popa
pop
mov
call
push
adc
pushw
mov
arpl
inc
mov
cmp
and
cmpxchg
test
mov
ja
leave
fnstcw
push
aam
imul
lods
pop
test
shrl
cmp
test
cmp
fdivrl
cmc
sub
or
ret
shlb
out
lcall
mov
pop
sbbl
leave
mov
sub
rcrl
and
or
mov
mov
dec
inc
pop
cmp
lock
inc
bound
pop
lret
ret
out
sub
ret
dec
xor
dec
jg
inc
nop
jp
sub
sbb
pop
sub
adc
bound
push
aad
mov
lods
pop
dec
adc
dec
leavew
cld
in
stc
ret
inc
test
pop
jno
jecxz
sbb
jo
loopne
ret
movsl
sub
inc
inc
aas
xlat
scas
lcall
sub
jbe
mov
rolb
pop
popf
add
push
aam
inc
mov
xor
shl
xchg
adc
je
cmpsb
mov
jge
mov
inc
repz
dec
nop
mov
pushf
rorb
int
cmp
or
xor
enter
out
inc
cmc
ret
es
sbb
mov
cmp
push
loope
adc
mov
cmc
out
lret
jmp
push
add
lods
ds
lret
pop
rcl
in
push
add
adcl
subb
xchg
xchg
xchg
xchg
int
lods
adc
popa
test
das
fwait
inc
inc
push
out
cmp
xchg
aas
loope
mov
sub
outsb
movsl
je
xchg
mov
sbb
xchg
ljmp
sub
and
movsb
xor
inc
mov
and
fstpt
push
xlat
sub
enter
js
fs
xor
repz
insb
idiv
mov
and
pop
push
jecxz
inc
ss
mov
fadds
dec
mov
out
jnp
mov
lock
cli
call
ds
clc
movsl
jne
mov
movsb
dec
xorb
mov
jp
xor
test
mov
stc
adc
inc
mov
aas
xor
loope
jo
or
rcll
sarb
sbb
xor
js
jge
adc
push
lds
rcrl
mov
lar
aad
test
inc
pop
mov
sbb
sbb
fsubs
mov
popl
pusha
mov
lods
jo
daa
fsubs
add
sub
pop
cmp
rcl
in
rorb
mov
cld
dec
xor
jge
rorl
insl
dec
cmp
mov
pop
push
adc
popa
clc
mov
lds
in
jne
mov
gs
leave
mov
push
aad
dec
loopne
fcomps
dec
mov
sar
test
cli
jl
push
insl
add
test
aaa
or
add
test
fsubr
cmp
xlat
loopne
inc
in
dec
xchg
scas
nop
leave
lock
sbb
outsl
rorl
cmp
aaa
pop
xchg
outsb
or
mov
call
cmp
insb
dec
icebp
lea
jge
cltd
test
aam
aam
inc
mov
mov
add
stc
add
fdivrp
or
add
mov
stc
inc
stos
inc
test
sbb
aad
int
sahf
loopne
xchg
cld
jle
clc
inc
es
lods
clc
and
mov
sub
sarb
sarb
jo
int
stos
mov
mov
sbb
sbbb
or
lds
repz
lret
jmp
movsl
repz
xchg
sbb
test
xor
push
push
aam
add
faddp
adc
inc
clc
inc
pop
mov
dec
lcall
push
jmp
jbe
or
xchg
mov
cmpl
xor
ss
dec
bound
fcoms
cmp
sub
mov
add
movsb
sub
in
xchg
dec
popf
in
and
mov
fldl
aad
addr16
mov
fs
xor
pop
push
or
xor
shl
jl
pop
jge
fildll
xor
imul
cmpsl
cmpsb
inc
lea
mov
scas
repnz
cmpsl
and
lea
or
adc
inc
fadds
add
imul
fsubs
mov
jno
mov
inc
iret
cmp
dec
shl
inc
push
jne
mov
sahf
repz
adc
mov
and
mov
or
mov
dec
xchg
cli
mov
cmp
pop
jl
mov
xor
iret
int3
adc
out
in
dec
dec
ss
mov
test
inc
lea
or
mov
ds
loope
arpl
stc
outsb
cmp
lods
push
pop
inc
xor
push
filds
addr16
arpl
mov
xor
inc
hlt
push
adc
hlt
cmpsl
cmpsb
icebp
les
lds
sub
idivl
push
xchg
xlat
jl
test
insl
pop
andb
dec
add
mov
add
iret
mov
mov
movsl
xchg
into
xchg
mov
movsl
push
int3
and
aam
stc
lret
xlat
int3
jp
dec
inc
sbb
xlat
insb
sbb
inc
fldt
lcall
lods
pop
mov
pop
addb
jecxz
addl
aaa
jne
das
cltd
lods
sbb
jecxz
insb
mov
repz
fs
pop
add
and
xor
sbb
adc
mov
adcb
mov
cmp
les
adc
mov
test
pop
negb
push
cmp
inc
out
or
jmp
pop
push
pop
fldt
xchg
xor
sbb
or
xor
sbb
sahf
mov
xchg
xor
fadds
test
imul
nop
cli
mov
push
ret
xlat
and
aaa
insb
mulb
add
das
inc
sbb
dec
std
pop
dec
cmc
stc
ja
jp
mov
out
out
and
rclb
out
xlat
sub
lods
jne
shrb
inc
sub
xor
popa
and
fidivs
push
mov
jo
rorl
rcl
push
xor
stc
ret
and
divl
cmpsl
mov
hlt
xchg
jp
jb
jle
add
add
cmp
test
mov
cld
or
mov
inc
sbb
adc
jo
mov
push
pop
jne
ljmp
lods
mov
fwait
test
ds
sbb
cli
cmp
mov
pushf
stos
incl
clc
data16
or
sub
movsb
mov
adc
adc
les
aam
inc
bound
and
out
add
sub
nop
ret
adc
and
mov
xchg
or
cli
dec
push
xor
repz
cmp
insl
add
sub
mov
cs
enter
inc
insl
pushf
inc
xor
mov
jp
lods
xchg
int
in
cwtl
shll
add
shll
cmpb
mov
dec
adc
pop
push
inc
iret
xchg
pushf
aam
xchg
mov
lret
jge
in
pop
dec
fnstenv
shlb
adc
sbb
imul
rcrl
test
shl
sub
lret
jbe
pop
lods
inc
decl
push
pop
mov
pop
loope
sub
add
fstpt
and
dec
ret
stos
dec
push
xor
pusha
std
das
xor
popf
popl
es
lods
xchg
mov
lea
and
cmc
cmp
adc
arpl
ret
cltd
xchg
clc
cli
sbb
xor
popf
mov
call
ret
sbb
pop
fs
les
scas
add
and
test
push
mov
int3
dec
jns
add
jecxz
movsb
xor
mov
test
popa
xchg
fsubrs
mov
loopne
mov
and
cmpl
icebp
push
mov
inc
xor
adc
dec
les
xchg
push
movsl
mov
ss
cmp
jecxz
lea
cmp
in
fisubrs
bndldx
das
lds
jno
in
inc
adc
sub
xchg
mov
jb
adc
or
enter
xor
sahf
sbb
dec
jb
pusha
rcll
out
sahf
out
dec
xlat
push
fwait
sub
inc
aam
in
repnz
pusha
mov
filds
gs
js
lds
lock
shll
cmp
adc
sub
sub
xchg
add
xchg
out
mov
mov
gs
push
sbb
pop
shlb
stos
loope
mov
stos
xor
rolb
daa
pushf
push
add
ror
les
pop
in
je
out
dec
pop
push
add
jnp
fstl
add
test
lret
cmc
out
cs
inc
adcl
mov
xor
idivl
mov
cmp
lods
out
cmp
cwtl
xchg
pop
enter
fistps
sub
push
test
mov
cmc
mov
test
into
rcl
and
push
push
ret
dec
dec
jge
dec
adc
xorl
pop
dec
pop
pusha
mov
adc
mov
notb
mov
xor
push
mov
sbb
push
jle
jae
and
dec
pop
imul
aad
sub
rcl
push
push
jbe
sub
enter
lods
insb
popf
and
fldl
popf
mov
inc
mov
ljmp
or
mov
jmp
ret
leave
pushw
loop
test
push
sub
push
fildl
arpl
arpl
xlat
cmp
inc
add
push
jae
and
aas
int3
dec
mov
sbb
jae
xchg
fcomps
rclb
mov
cmc
cmp
lcall
push
sbb
addr16
jecxz
jne
pop
jg
insl
out
add
sub
mov
ret
cmc
push
rolb
mov
cmp
je
enter
pop
sbb
int3
imul
cs
aas
mov
cs
push
mov
aad
pop
mov
add
and
orb
hlt
dec
push
movsl
inc
ljmp
pop
cld
fildl
leave
lock
mov
mov
hlt
inc
cltd
pop
cmp
mov
rolb
data16
ret
jo
mov
cmp
pop
lahf
sub
dec
pop
xor
arpl
ljmp
pop
sub
dec
pop
jo
inc
add
cmp
sub
dec
sub
lock
fldl
jnp
dec
pop
lods
pop
test
add
sbb
mov
jmp
lods
or
sub
cmp
pop
test
and
inc
iret
jmp
in
and
jns
sbb
xchg
jg
jae
ja
out
push
sbb
outsb
jae
insl
push
cmpsb
je
sbb
sbb
xchg
sahf
jl
cli
mov
push
enter
xchg
sub
dec
int
mov
push
mov
adc
mov
add
jl
and
adc
out
pop
cmc
mov
fwait
in
and
ret
cmc
jge
es
rorb
sbb
inc
push
repnz
pop
jo
mov
popa
out
and
fisubrl
cmp
fwait
xor
push
mov
fnsave
push
data16
dec
pop
jo
jl
enter
xchg
lret
xchg
sbb
test
scas
sbb
xor
push
aad
lods
xor
xor
loope
loope
push
fisubrs
mov
outsl
fucomp
cmc
frstor
leave
jns
mov
inc
add
mov
xor
push
fsts
aad
adc
sbb
imul
cmpl
jp
adc
fstps
xchg
fwait
xlat
sahf
mov
out
out
inc
call
icebp
add
daa
jb
adc
ss
outsl
or
jecxz
sub
add
push
xchg
cmc
xchg
out
jmp
mov
sub
out
inc
sub
test
clc
orb
jmp
adc
pop
xchg
push
data16
stos
cmp
inc
or
stc
fidivrl
jne
dec
icebp
add
push
xchg
push
jb
or
insl
arpl
jle
mov
inc
dec
lock
push
mov
dec
mov
dec
cld
sti
lock
adc
mov
jg
xor
xor
sbb
jmp
pop
inc
jl
out
pop
loop
cltd
sub
ret
lret
and
fildll
test
add
pop
pusha
sarb
cmp
xor
clc
dec
cs
sub
adc
inc
jle
cltd
xchg
jnp
push
out
cli
jo
jecxz
or
jno
push
push
xchg
mov
mov
mov
add
mov
pop
test
fs
push
xor
cmp
out
mov
inc
rolb
mov
arpl
jo
mov
inc
imul
rcll
cs
mov
jmp
pop
and
push
mov
stos
jbe
mov
add
mov
lods
mov
push
push
sub
push
aas
fnstcw
scas
lret
insl
call
inc
dec
adc
sti
jo
push
fisttps
and
lret
xor
mov
lret
pop
add
pop
std
inc
outsl
inc
jbe
hlt
mov
sbb
fmulp
mov
cmp
test
cmc
mov
imul
xor
pop
adc
nop
inc
arpl
fs
in
inc
ret
adc
je
in
jne
lds
pop
mov
or
cltd
fxch
inc
mov
imul
push
sbb
pusha
push
scas
lock
stc
or
stos
lret
push
mov
sbb
cwtl
xchg
je
lret
mov
dec
cmc
sahf
mov
daa
mov
data16
mov
or
adc
add
xchg
sub
gs
std
jnp
cltd
lds
sub
int
push
push
and
mov
xchg
mov
nop
push
call
enter
mov
leave
adcl
sti
cmc
adc
or
filds
jne
mov
icebp
int
mov
mov
dec
mov
mov
addr16
sub
popa
mov
pop
xchg
push
je
mov
xchg
mov
cmp
mov
jp
xchg
test
jns
add
ja
sbb
mov
mov
push
cmp
mov
mov
pop
xor
mov
leave
and
adc
xchg
cmp
jle
fsubr
push
mov
adc
xchg
cli
enter
mov
mov
sbb
add
ficomps
js
dec
cli
sub
cmp
clc
out
xor
aad
jge
cwtl
mov
test
les
fisubrs
mov
sbb
inc
and
outsb
push
daa
lret
mov
sbb
xor
dec
xlat
out
data16
pop
push
mov
xchg
enter
dec
lds
stos
insl
push
push
xor
aas
mov
add
adc
adc
dec
js
test
dec
aad
jle
fiaddl
adcb
sub
jecxz
pop
je
daa
jbe
test
push
rcl
fnstenv
add
inc
dec
cs
inc
mov
inc
pop
mov
push
ljmp
push
dec
pop
aas
mov
iret
cwtl
pop
push
adc
push
ret
pop
jp
icebp
push
add
push
or
imul
pusha
or
daa
xchg
movsb
repz
cwtl
xor
cwtl
fcompl
sarb
ljmp
jnp
sbb
sbb
es
cwtl
bnd
cmp
in
in
sbb
bnd
xchg
mov
jne
inc
imul
test
sbb
adc
cmp
sbb
dec
sub
cmp
push
cltd
mov
es
ret
pop
cltd
insb
dec
imul
icebp
adc
leave
jecxz
jp
jo
mov
in
mov
inc
pop
loop
cmp
loop
test
xchg
lods
ret
push
pop
inc
dec
pop
sub
or
xor
xor
aam
mov
fidivl
sub
push
arpl
and
loopne
out
jbe
scas
pop
js
in
sbb
das
sbb
cs
into
in
imul
fcomps
lods
lods
sbb
xor
dec
sub
mov
leave
mov
cmc
xor
fwait
idivl
cwtl
outsl
jbe
push
xchg
mov
leave
mov
mov
or
xchg
mov
mov
int3
aas
inc
xchg
jmp
fidivrs
adc
fmull
scas
call
cmovno
pop
dec
mov
orl
arpl
jno
imul
xor
sbb
addr16
imul
sbb
cmp
fnstsw
adc
push
cmpsb
mov
push
xor
mov
add
jge
aas
dec
inc
push
ja
xor
jp
cmpsl
xchg
shl
xchg
inc
std
push
push
data16
out
popf
dec
mov
pop
cmc
push
enter
jge
pop
and
cmp
mov
fwait
out
xchg
std
pusha
sahf
aas
mov
sub
and
iret
jbe
nop
xlat
lahf
mov
xor
pusha
imull
les
push
pushf
data16
mov
dec
adc
stc
xchg
std
insl
out
dec
push
dec
cwtl
add
bound
es
dec
ficoms
inc
push
xlat
xlat
mov
xchg
out
lcall
arpl
mov
xchg
mov
scas
out
cmp
imul
sub
adcb
adc
pop
fcomp
cwtl
xor
jle
dec
mov
mov
pop
jmp
scas
stos
popa
pop
cltd
add
mov
jecxz
outsl
xchg
xchg
pop
fisubrs
outsb
xor
mov
pop
xlat
pop
mov
scas
test
jnp
imul
sub
loopne
pushf
int
lods
or
loopne
in
ret
jl
icebp
sbb
dec
xchg
pop
aas
xor
hlt
imul
pop
orl
shlb
fistl
ss
push
pop
or
je
mov
mov
imul
cmpsb
fdivs
mov
stc
jle
dec
mov
jne
scas
dec
jmp
imul
shl
fdiv
std
rorl
push
sbb
fstps
popa
cmp
and
lret
imul
push
jo
stos
lock
fsubs
fistps
push
mov
imul
es
dec
push
mov
fistl
in
int
bound
or
mov
sarb
ss
cli
in
shll
frstor
add
lahf
call
inc
and
dec
lock
insb
jmp
ja
rolb
mov
test
ds
mul
mov
movsb
std
push
cmp
outsl
out
aam
mov
inc
inc
arpl
cwtl
stc
call
data16
xchg
or
inc
ret
daa
aaa
mov
dec
leave
xor
inc
xor
jle
and
inc
push
aad
test
call
bswap
insb
cltd
int3
adc
mov
cmpsl
cltd
mov
outsl
aas
loope
xorb
and
pop
xor
sub
inc
out
xchg
mov
dec
daa
xchg
pop
jnp
in
ret
cli
cs
pop
fidivrs
jbe
int
or
mov
mov
das
dec
iret
mov
je
push
inc
pop
adc
inc
dec
daa
shrl
mov
loopne
dec
xchg
and
clc
push
sub
jae
dec
popf
push
dec
inc
mov
sub
cmp
sub
adc
sbb
mov
pop
test
test
scas
js
dec
ss
stos
mov
sahf
dec
sahf
in
pushf
insb
mov
xchg
out
push
cwtl
adc
or
shl
jnp
out
or
cmp
cmp
scas
or
push
fsts
or
push
out
clc
rcrl
jmp
mov
scas
call
mov
hlt
jb
rol
push
xor
data16
cwtl
cs
and
jnp
imul
out
push
ljmp
fldt
adc
inc
mov
out
xchg
movsb
sub
popf
push
fildl
fcmovnbe
fildl
sbb
xchg
sbb
cli
xorb
in
icebp
scas
xor
xor
sbb
pusha
add
cmpsl
pushf
sub
mov
sbb
aad
loopne
data16
inc
mov
adc
mov
mov
jl
mov
stos
xorb
call
cmp
cmc
jb
sub
rcrb
ret
pop
loopne
sub
jle
sbb
xchg
std
int3
loope
fdivrs
cmp
stc
pop
mov
inc
sarb
jne
lds
xor
jl
and
mov
int3
adcb
stos
in
pusha
mov
cwtl
int
in
fidivs
pop
mov
aam
and
cmc
xchg
add
divl
add
push
cmpsb
imul
sub
sbb
shlb
push
ss
sbb
rclb
push
add
hlt
cwtl
nop
je
mul
and
aam
xor
test
sbb
mov
insb
pop
lods
in
sbb
pop
xchg
add
and
leave
pop
pushf
xchg
xor
xchg
pop
jmp
xchg
loop
ret
aas
into
sbb
mov
inc
xchg
mov
mov
adc
mov
pop
aaa
mov
sbb
sub
and
fucomi
in
adc
push
fs
test
in
test
xor
or
pop
imul
push
xor
pushf
loope
aaa
jns
fsubr
cmpsb
outsl
sbb
out
pop
out
mov
or
leave
mov
inc
pop
scas
pop
or
sbb
sub
ljmp
ja
lea
gs
push
sbb
ds
rorb
dec
rcrb
xchg
mov
push
test
call
scas
pop
imul
imul
xchg
jbe
cltd
dec
aaa
fwait
add
bound
lods
jmp
addr16
inc
mov
not
int3
loop
cmp
pop
movsl
out
mov
xchg
aad
push
pop
clc
mov
jp
js
ljmp
xchg
icebp
push
adc
mov
lahf
dec
jmp
ss
mov
push
push
out
xlat
in
ret
inc
mov
aam
adc
dec
and
in
movsl
adc
sbb
mov
jno
xor
xor
movsl
sub
in
in
sti
dec
sub
addr16
adc
xor
jp
mov
sbb
fsts
pusha
ret
imul
mov
popf
cltd
int3
repnz
dec
dec
sub
sarb
mov
xlat
pop
loope
add
cmp
stos
lcall
mov
rcl
or
push
cmp
xchg
mov
movsl
loope
cmp
mov
enter
femms
pop
and
adc
adc
dec
and
dec
xchg
popa
mov
mov
push
lcall
ror
pop
sahf
cwtl
inc
push
mov
sub
dec
mov
xchg
push
cmp
xor
mov
pop
je
mov
mov
cmp
ja
push
push
xchg
shlb
inc
dec
cmp
popf
shlb
ja
mov
fistpl
icebp
inc
or
popf
das
out
sbb
les
sahf
pushl
sbb
and
into
jns
inc
loope
pcmpgtw
ljmp
or
jno
enter
pop
xchg
decl
mov
fisubrl
push
enter
lret
orl
add
orl
fwait
lods
shll
adc
jb
pop
push
js
outsb
lods
add
scas
sbb
mov
dec
faddp
add
mov
test
dec
mov
dec
fstl
aam
or
sahf
sbb
aaa
jecxz
push
cwtl
cmp
lods
data16
add
or
loope
cmp
mov
pop
mov
xor
clc
inc
mov
sbb
cli
push
pop
std
lods
jns
mov
push
and
out
pop
aaa
pop
iret
sbb
push
jp
push
test
xorb
into
xchg
push
scas
ljmp
and
mov
fstps
fucomp
sub
ljmp
cli
inc
nop
add
icebp
or
loopne
dec
daa
scas
push
je
inc
cld
lock
jmp
ss
push
push
xlat
std
sbb
and
mov
int
sbb
pop
cmpsl
cmp
mov
inc
mov
lods
pop
push
dec
add
lods
xchg
cmp
pop
pop
mov
arpl
test
xchg
stos
sbb
mov
stos
mov
je
std
inc
popa
jbe
cld
mov
mov
popf
insb
pop
push
mov
lods
movsb
cmp
loopne
lds
scas
push
mov
mov
jb
repz
xor
shrb
in
flds
push
insb
push
fsubrl
adc
int
jb
rorb
insb
hlt
int
mov
cmpsl
dec
std
mov
inc
push
mov
xor
add
xchg
dec
cld
in
cld
test
sbb
sub
lahf
push
mov
add
push
test
pop
push
rcll
sti
in
mov
es
pop
mov
inc
outsl
popf
xchg
out
dec
fildl
adc
sub
cltd
daa
aad
scas
push
cmp
and
std
mov
pop
pushf
cwtl
fstpl
clc
cmpsb
push
fbstp
mov
loopne
jnp
mov
stos
movsb
or
adc
mov
pusha
mov
lcall
pop
cmpsb
rcrb
loopne
xchg
aas
fwait
clc
pop
jle
dec
ja
loop
push
out
out
out
cltd
call
imul
sbbl
scas
fwait
scas
cmp
iret
mov
loope
out
stos
pushf
lods
enter
cmp
pop
mov
jno
sbb
push
arpl
sub
jl
and
imul
sub
add
jecxz
jl
cli
mov
in
mov
mov
sbb
insl
fs
jnp
sub
lcall
dec
jnp
cmp
test
sbb
sbb
mov
popa
sahf
adc
bound
iret
pop
cmp
cmp
daa
xchg
pop
lret
push
mov
inc
dec
pop
push
sbb
outsb
sbb
cmp
cld
xor
push
xchg
fbld
mov
sbb
jle
push
jbe
lods
hlt
ret
sahf
jl
in
lahf
jae
sub
cmp
sbb
mov
es
or
and
test
loop
mov
mov
jp
in
fcmovne
ret
mov
mov
lods
jg
jns
sub
push
popf
sbb
cmc
dec
push
inc
mov
mov
lea
inc
jne
dec
test
icebp
sub
and
sbb
dec
les
dec
mov
mov
mov
addr16
add
inc
adc
jecxz
cmp
dec
mov
popf
adc
jp
add
aas
insb
or
rol
push
bound
mov
fstpt
inc
cltd
mov
popw
sarb
mov
and
sbbl
scas
insb
imul
and
pop
stos
mov
hlt
hlt
fisubs
test
clc
lods
out
xor
adc
push
push
push
dec
pop
pop
fmul
pop
in
imul
adc
into
sarl
xchg
pop
adc
and
pop
in
test
mov
sub
xor
mov
and
add
ss
push
cltd
push
fsubp
mov
ret
imul
sbb
aam
popf
fs
loopne
or
sub
aaa
sarl
outsb
idiv
jle
rclb
cld
or
jb
rcr
dec
shrb
sub
mov
add
lock
push
lcall
push
cmpsl
xchg
mov
in
push
pop
mov
xchg
lret
jno
xchg
xor
aad
imul
cmp
sub
mov
pop
xchg
xchg
in
xchg
mov
loopne
cmp
mov
push
mov
pop
adc
and
dec
mov
xor
add
shll
cmp
add
dec
sbb
loopne
push
sub
cld
adc
sbb
adc
xor
cld
scas
mov
push
sub
xchg
loop
and
imul
mov
or
cmp
or
jbe
inc
mov
test
pusha
lret
bound
pop
lret
cli
arpl
cs
cld
lahf
add
int
aad
test
loopne
popa
out
ja
pusha
xchg
xchg
sub
cmp
jecxz
and
jae
jnp
push
sti
mov
movsb
jmp
aaa
ss
xor
data16
out
jecxz,pt
cmp
fsubl
push
cltd
dec
pop
jo
xor
pop
inc
push
dec
mov
arpl
sti
inc
pushf
movsl
sub
loop
icebp
scas
iret
lahf
inc
mov
leave
xor
add
fsubr
stos
inc
sbb
fidivrs
or
push
push
push
jbe
mov
dec
dec
sub
insl
out
mov
sbb
pop
repnz
mov
mov
sbb
mov
fdivrs
pop
mov
add
push
shrb
xchg
into
xor
lcall
pop
mov
push
inc
and
pcmpgtd
push
sbb
xchg
pop
push
pop
mov
inc
push
mov
ret
mov
xchg
mov
fmulp
fildll
leave
cwtl
in
push
fsubp
arpl
add
xor
sbb
into
addr16
cwtl
retw
adc
mov
scas
jmp
test
repnz
bound
sarb
repnz
and
popf
cmp
popa
inc
not
icebp
fiaddl
adc
daa
je
xor
adc
movsl
sbbl
xchg
mov
or
mov
adc
adcb
xchg
fisubrs
adc
mov
dec
subb
imul
add
xchg
mov
rorl
mov
pop
int3
jmp
ret
in
insb
ret
test
xor
cmp
addr16
mov
xchg
dec
xor
mov
rorb
jg
and
inc
movsb
in
mov
push
rcl
adc
push
mov
sbbl
and
fxch
dec
mov
mov
loope
mov
pop
xchg
mov
dec
nop
je
lock
pop
mov
enter
lds
clc
pushf
rcpps
push
xor
enter
sub
loop
dec
cmp
or
scas
push
insl
and
out
fucomp
stos
ss
xchg
inc
out
or
rolb
adc
imul
icebp
pusha
ss
pop
mov
es
cltd
jl
lds
cmpsl
or
cmp
sahf
jb
and
mov
sbb
dec
je
sbb
push
call
adc
lods
incb
mov
fadds
mov
cmp
outsl
test
orb
dec
adc
push
inc
ret
pop
or
movsl
lock
orb
aam
jl
mov
mov
inc
xlat
adc
aaa
dec
xor
xor
fmuls
xchg
cmc
lods
pop
or
insb
jle
sbb
jle
bound
std
fsubrs
ret
inc
in
shlb
pop
jbe
movsl
mov
inc
dec
sub
data16
mov
les
push
pop
jae
pop
dec
jecxz
add
sub
repz
push
fimull
dec
inc
adc
repz
adc
subb
loop
cmp
test
mov
cmp
adc
jmp
rorl
incb
outsb
setae
mov
jbe
inc
outsb
adc
sahf
xchg
jns
aam
mov
rolb
or
and
xchg
jmp
mov
cli
stos
pop
cmc
adc
pop
gs
xchg
decb
jo
or
jmp
jmp
push
xchg
add
aad
add
mov
lods
divl
fistpl
push
ss
idivl
xor
ja
mov
das
jb
jbe
xor
aas
mov
pop
subb
inc
mov
adc
cmp
decb
fwait
scas
cmp
inc
jbe
jo
ret
inc
addl
add
sti
sbb
out
push
fildll
aam
int
repz
iret
adc
xchg
xor
sbb
ja
sbb
xchg
aad
mov
push
lea
outsl
hlt
mov
and
ret
les
jp
cltd
sbb
cwtl
fnstenv
sub
sub
pusha
aam
mov
roll
jo
outsb
dec
fbstp
adc
mov
pusha
push
cmp
jne
xor
fcomps
pop
sbb
gs
test
lods
mov
mov
repz
scas
adc
dec
cmp
sahf
mov
mov
nop
add
adc
xchg
adc
pop
xchg
sti
out
push
sbb
jo
sub
fwait
rorl
pop
lds
enter
lahf
pushf
popa
mov
repnz
pusha
popf
lret
cltd
imul
cmc
sbb
xor
cmp
inc
mov
mov
shll
mov
cmp
xor
call
sub
jle
jne
jo
test
bnd
mov
inc
push
push
out
xchg
push
pop
xchg
into
out
popf
pop
mov
xor
sub
pop
add
icebp
or
stc
dec
das
outsb
adc
mov
gs
sbb
test
out
mov
xchg
jnp
xchg
fwait
mov
inc
xor
fistpl
sbb
daa
inc
scas
xor
lret
adc
mov
mov
punpcklbw
outsl
popa
mov
popa
cwtl
cwtl
xor
or
push
daa
xlat
and
push
inc
out
pop
sub
jg
aas
andb
hlt
imul
xchg
lods
mov
mov
mov
fsubrl
cltd
in
int3
arpl
or
fdivs
in
mov
mov
xchg
push
insb
pop
add
gs
sub
push
adcb
cs
adc
xchg
inc
or
jnp
mov
jge
les
nop
push
xchg
aam
mov
mov
xlat
pusha
cmpb
jle
stos
fs
ror
cmpb
les
rcrl
xchg
mov
mov
cmp
add
push
adc
and
aaa
ret
test
inc
sbb
incb
mov
inc
repz
aaa
ds
jl
push
enter
jb
jge
mov
push
xchg
dec
mov
shrb
mov
popa
ret
dec
mov
cmpsl
lock
add
mov
jg
ret
xlat
sbb
mov
scas
dec
cmpl
mov
lods
test
daa
pop
push
aad
inc
fxch
lea
decb
mov
dec
lret
lods
loopne
xor
or
cmp
aad
stos
pop
mov
cld
cmp
jle
jmp
daa
movsb
jno
dec
push
std
pop
jnp
in
scas
out
mov
xor
lock
arpl
cs
mov
stc
sti
jae
xchg
cmpsl
imul
push
push
push
and
mov
rclb
adc
nop
fistps
xchg
pusha
pusha
in
fwait
imul
jb
call
popa
push
jle
lods
inc
cmp
loop
cmp
adc
cmp
in
fsubr
popl
or
mov
shr
fidivl
mov
mulb
or
push
mov
xor
mov
stos
mov
push
jg
mov
mov
in
inc
pop
mov
sbb
adc
mov
pop
popf
jns
inc
sub
xchg
mov
dec
scas
sbb
nop
orps
es
dec
jg
jno
xchg
jle
inc
js
jge
sub
or
mov
jno
hlt
or
jnp
sbb
jae
imul
daa
aaa
xchg
gs
js
inc
jo
jp
sbb
adcl
pop
orl
shlb
xor
xchg
ja
imul
cld
xchg
test
xchg
out
cmpsl
in
jmp
les
xor
mov
mov
mov
arpl
pushf
dec
je
push
push
cmp
fnstenv
pop
lock
in
out
push
xor
mov
aaa
add
dec
push
pop
data16
dec
fldcw
mov
sub
es
sbb
pop
inc
orb
out
and
pushf
rclb
xchg
inc
in
je
jecxz
mov
mov
xchg
aas
add
push
lret
and
rcll
in
push
fldl
jb
outsl
daa
mov
mov
mov
push
mov
mov
add
or
xor
imul
stos
lret
jg
mov
lods
fdivrp
outsb
push
push
loopne
and
scas
out
mov
pop
fnstcw
mov
flds
into
repnz
ss
clc
leave
pop
mov
mov
xrelease
out
or
cli
nop
out
movsl
pusha
movsb
pushf
fidivrs
sahf
jae
lds
push
fwait
sub
mov
inc
outsl
sahf
dec
cmp
cld
pusha
outsb
rclb
sbbl
dec
inc
push
stos
or
andb
into
sub
fists
mov
mov
in
pop
subl
insl
div
pop
in
dec
add
push
in
inc
add
add
adc
dec
mov
pop
sub
orb
lods
lcall
imull
popa
jno
loope
pop
push
dec
sbb
push
and
hlt
adc
mov
sub
sar
movsb
and
dec
mov
lock
mov
fucom
sub
fwait
icebp
out
mov
ja
in
jmp
test
lea
aas
cld
mov
lea
fsubl
adc
sbb
stos
jne
rol
in
push
and
or
xor
push
rcl
pop
push
cmpsb
pop
push
or
cmp
sub
mov
mov
adc
testb
mov
dec
push
sbb
jl
mov
jae
int3
jne
push
aad
add
mov
sbb
in
shll
fs
into
movsb
push
lret
inc
add
fildl
mov
test
pop
jae
inc
inc
cmc
inc
cmp
jmp
inc
out
push
stc
lea
inc
jb
mov
dec
adc
xor
aam
mov
mov
popl
dec
pushl
aas
hlt
mov
and
pop
or
dec
mov
jmp
xlat
les
pop
popf
xor
adc
mov
stos
mov
jbe
mov
lods
and
hlt
movsl
jge
xor
repnz
lcall
int3
jb
mov
dec
dec
and
add
adc
nop
push
sub
repnz
sbb
daa
repz
pop
pop
in
or
lret
pop
cld
dec
aaa
mov
sub
jle
stc
push
cld
push
hlt
ss
ror
or
daa
xchg
sub
test
pop
jb
rcrl
lock
jp
xchg
repz
imul
sub
and
push
cmp
bound
lds
add
push
arpl
jae
aas
rclb
test
idivl
or
cmp
and
dec
and
mov
lahf
xchg
out
dec
inc
pop
cmc
ficomps
push
jb
lea
inc
mov
lods
lea
cmp
xchg
imul
sbb
inc
sar
scas
ror
mov
aas
bnd
push
loopne
sub
jp
dec
ja
out
bound
inc
into
stc
leave
jge
push
das
push
stc
lret
int
iret
mov
lds
repnz
fdivrl
outsb
imul
mov
mov
sub
jnp
push
lods
mov
icebp
movsl
test
mov
cs
jecxz
lods
xor
ja
aas
sub
rclb
jg
stc
mov
ffree
or
loopne
sbb
call
pop
mov
sbb
mov
mov
cmpb
push
xor
jno
cmpb
sbb
lods
adc
mov
dec
je
clc
cmp
mov
sbb
cmp
inc
flds
insb
mov
jle
adc
xor
stos
mov
dec
insl
mov
xchg
scas
lods
cmpsl
and
or
adc
fcmovb
inc
scas
mov
push
leave
inc
jp
mov
test
imul
or
cmpl
aad
lods
push
int
sub
roll
mov
cltd
mov
and
mov
fcompl
loop
cltd
imul
in
sbb
mov
mov
lods
cli
xlat
add
repnz
inc
xor
popa
sbb
lcall
cld
aad
test
in
xchg
adc
add
mov
sbb
mov
inc
adc
mov
lret
in
sub
xchg
mov
leave
lods
add
jbe
mov
cld
es
cs
imul
push
jbe
in
or
call
leave
cmpxchg
xor
sti
xchg
imul
les
jle
pusha
mov
sub
hlt
in
or
in
popf
mov
inc
fwait
xorl
pushf
popf
mov
pushf
pop
pop
inc
mov
in
mov
aad
test
mov
pop
push
scas
jg
mulb
xor
pop
sbb
push
imul
jl
subb
xor
pop
addr16
ret
bound
mov
jl
jne
popa
or
adc
js
or
xchg
dec
sbb
rcrb
add
jb
inc
cmp
inc
js
xchg
xchg
fs
or
mov
cmp
stos
mov
adc
lods
push
push
xchg
jnp
sbb
push
cmc
jb
and
lret
push
sbb
ret
dec
mov
xchg
imul
dec
arpl
mov
dec
dec
test
cmp
stc
jg
jo
jmp
adc
fcmovnbe
pop
jno
dec
test
inc
out
aas
std
mov
addr16
clc
or
mov
loopne
bound
and
inc
adc
rorl
push
ret
mov
mov
dec
add
out
sub
das
sbbb
mov
mov
push
push
shr
cwtl
aas
fwait
sbb
add
push
notl
cli
push
sub
movsl
idiv
mov
push
test
add
addr16
adc
out
push
dec
mov
jecxz
mov
int3
adc
ds
pusha
loope
sub
push
push
lds
push
stos
inc
repz
scas
and
test
cwtl
test
fldcw
int3
sbb
orl
pop
push
aad
xchg
aam
fwait
sub
das
dec
xchg
arpl
and
ucomiss
loop
rcll
jmp
outsl
jl
sbb
push
mov
xlat
xchg
xor
loope
mov
mov
vmulsd
inc
add
ficompl
xchg
lcall
fwait
ss
mov
push
icebp
lahf
mov
lods
fwait
pusha
cmpsb
or
popa
inc
and
aaa
clc
cmpsl
and
xor
or
xchg
jb
pushf
insb
and
sbb
mov
cmp
in
xor
push
push
or
cmp
add
pop
cli
pop
mov
es
dec
jb
mov
mov
scas
lea
cmpsl
pop
dec
test
in
jnp
adc
mov
test
fisubl
add
lock
mov
mov
test
test
pop
dec
push
rorl
adc
lods
mov
dec
or
imul
fists
negl
cmpsl
sub
cli
int
repz
mov
mov
xchg
aas
hlt
cmp
popf
cmp
ret
repz
daa
scas
jae
or
xor
fistl
add
jmp
xchg
lret
cltd
out
ja
dec
push
mov
fstpt
clc
push
and
mov
mov
xchg
xchg
ds
dec
jne
adc
out
add
fucomip
mov
insb
mov
clc
or
loopne
scas
mov
js
enter
mov
xchg
adcl
pusha
mov
or
push
call
jl
cli
cld
dec
out
add
mov
int
or
mov
push
sbb
jb
loope
mov
nop
pop
pop
scas
imul
mov
mov
subb
sbb
jmp
das
pop
add
fdivl
mov
test
mov
fdivrs
mov
sbbb
aas
jno
lods
sbb
jb
cli
iret
push
div
sbb
or
and
imul
mov
pop
jns
or
gs
out
add
shll
sahf
iret
sub
xchg
std
sub
outsl
push
push
push
pop
push
adc
dec
fsubrl
inc
jp
outsb
mov
cmc
sbb
push
lods
or
sarl
or
pop
pop
mov
lahf
lret
js
icebp
jae
cmp
ret
dec
scas
ss
cld
es
in
xor
fstl
push
xor
or
into
call
inc
xlat
add
stos
sub
sbb
addr16
pop
rcrl
dec
jmp
jle
call
mov
push
movsl
jo
shrb
mov
fcoml
adc
inc
sti
push
cs
cmp
pop
jnp
adc
scas
inc
xor
push
rcrl
repz
or
jne
xchg
and
aam
push
jne
in
pop
sbb
adc
and
dec
mov
mov
movsb
push
cltd
or
inc
adcl
xchg
test
stc
fistps
lahf
sarb
jne
mov
inc
pop
push
hlt
fbld
enter
cmp
scas
inc
stc
mov
or
push
or
inc
cmp
xchg
clc
fwait
sti
lahf
ficoms
pop
aam
jl
jle
dec
aam
data16
rcrb
jge
cmp
sti
pop
daa
xchg
jo
call
movsl
or
inc
mov
mov
mov
mov
sub
or
stos
es
pop
out
and
repnz
sbb
dec
dec
nop
jg
leave
ss
xchg
std
test
jg
jno
ficompl
jbe
and
movsb
lahf
xchg
mov
ret
dec
jo
xlat
dec
gs
les
testl
mov
ss
loope
push
or
add
and
fildll
shl
add
ret
mov
lret
jle
jle
inc
enter
jmp
dec
jge
out
mov
mov
add
fsub
mov
cmpsl
dec
call
dec
inc
mov
insl
and
xchg
addr16
sbb
jb
sub
mov
push
cmpsb
jb
lret
xchg
jg
mov
fs
cmc
lods
test
add
mov
push
loopne
adc
popf
adc
outsl
stos
fld
mov
rcrl
cmp
cmpsb
scas
dec
xor
faddl
in
movsl
cmp
mov
fwait
xor
mov
dec
sbb
push
ret
flds
jbe
cli
loopne
mov
adc
hlt
lea
lods
rorl
xchg
lock
inc
sbbl
add
or
pop
push
loopne
xchg
pop
sub
ja
scas
xor
jnp
mov
xchg
pop
ja
jbe
xchg
into
outsl
push
ret
sub
leave
imul
test
push
out
jge
decb
ficoms
and
xlat
shlb
add
pop
sahf
pop
ret
pop
daa
adc
push
ja
lret
aam
push
popa
insb
cltd
ja,pn
int
cli
mov
lret
roll
std
in
fstpt
std
lcall
and
mov
sub
fisubrl
mov
sbb
shll
mov
jo
cmp
addr16
cmp
pop
test
mulb
sub
mov
loopne
sbb
jbe
add
xchg
aad
scas
cmp
insl
decb
dec
mov
leave
mov
fiaddl
fbstp
mov
sahf
push
mov
xbegin
sbb
cmp
adc
nop
pop
loope
jle
test
lret
aaa
mov
orl
and
mov
and
jg
pop
das
lret
stos
sbb
sbb
xor
sbb
nop
mov
cmp
inc
pop
sahf
mov
in
out
dec
xchg
imul
jno
rcll
jno
leave
int3
add
mov
xor
bound
dec
fstp
push
out
mov
mov
dec
jge
pop
outsl
xchg
imul
adcb
jp
mov
sub
shrl
jne
pop
cmc
cmp
mov
xorl
popf
and
cmp
jp
rorl
lods
addr16
stos
inc
cmp
adc
bound
mov
push
sub
shll
lret
cmp
sbb
movsl
out
push
int3
xchg
leave
mov
movsb
jmp
pop
mov
and
cmp
pushf
mov
mov
jne
lock
imul
aaa
push
cmp
loope
orl
xor
mov
pop
in
push
je
out
sub
ret
js
mov
lret
mov
lret
pop
mov
shrl
es
push
shll
and
stos
inc
or
xchg
mov
imul
or
into
test
cmpsb
or
lock
lret
cli
inc
roll
sub
out
lea
and
sub
icebp
std
adc
pop
xchg
mov
fstpt
inc
ds
adc
in
sub
call
hlt
jne
in
sti
icebp
int
xor
sub
cmp
mov
jp
push
jg
jp
or
test
xchg
adc
jno
xor
or
sub
popa
add
jbe
jg
jle
enter
mov
mov
or
out
lea
cmp
pop
ljmp
insl
sub
or
and
inc
scas
jge
cld
std
test
and
xchg
pop
mov
or
add
lock
pop
push
in
data16
cmp
push
dec
jl
dec
repz
jbe
cmpsb
pop
loop
mov
popf
ja
sbb
out
xor
sub
aad
adc
mov
icebp
frstor
loopne
push
add
cmp
xor
mov
lea
cmp
inc
mov
out
lods
add
pop
les
stos
sbb
shll
imul
inc
jmp
mov
sbb
pop
lret
loopne
mov
jle
nop
test
pop
and
out
hlt
insl
mov
xchg
stos
fmul
add
movsb
lods
cmp
into
bound
inc
pop
les
sbb
xorb
push
roll
push
out
fbstp
icebp
stos
lret
inc
add
cmpsl
out
push
cli
loope
mov
mov
dec
popa
mov
jge
xchg
mov
sub
sbb
pushl
mov
outsb
sbb
int3
fdivl
addr16
xor
jb
repz
mov
sahf
into
fisubrl
ss
aad
push
fcomps
cmc
jae
pop
insl
std
or
dec
push
inc
xchg
pop
dec
push
pop
xchg
sbb
push
rolb
add
mov
cmp
or
es
mov
and
add
mov
or
or
cmc
std
mov
call
adc
or
adc
inc
adc
sub
add
inc
jg
xor
push
cltd
pop
cmpsb
test
xor
fcomp
je
sub
dec
sub
fsubrs
std
mov
into
mov
adc
push
arpl
sar
orb
xchg
adc
adc
add
test
and
int3
ret
movsl
xor
int
insb
insl
in
mov
or
mov
sub
push
sub
sqrtps
ss
add
xchg
enter
jb
iret
sub
in
test
fs
push
dec
add
scas
ss
pop
test
pop
rclb
inc
lock
pop
sub
iret
or
sbb
in
jle
out
mov
jbe
js,pn
jecxz
xchg
jno
es
push
sbb
dec
adc
jecxz
lret
orb
mov
jns
or
insb
dec
mov
out
sbb
stos
inc
pop
pop
xlat
mov
add
or
stos
dec
repnz
fwait
ror
out
icebp
push
or
outsl
loop
insl
outsl
pop
loopne
xchg
test
inc
push
mov
aas
dec
fistpll
pop
push
mov
xor
sbb
xlat
out
jns
cs
xchg
imul
aad
inc
push
lods
cmp
lods
push
ret
cmp
into
or
testl
fsubr
call
lret
inc
int
cmpsl
mulb
mov
mov
jg
mov
repz
sub
lcall
pop
hlt
test
add
or
shrl
mov
inc
insb
fidivs
dec
lea
es
cmpsb
adc
sub
or
addr16
dec
inc
icebp
test
pop
dec
push
pextrw
cs
arpl
dec
push
ds
shlw
aam
js
xor
lds
int
mov
mov
paddusb
cli
xchg
insl
add
mov
aam
out
and
daa
shll
movsb
cwtl
mov
aaa
addr16
push
lock
mov
and
cmp
popa
xor
sub
and
lret
xor
pop
adcb
popa
xchg
dec
scas
lcall
add
int
leave
push
call
fimull
leave
push
cmp
aas
mul
jbe
jo
movsl
outsb
sarl
and
pop
out
xor
xchg
adc
clc
push
jmp
lret
idivl
and
pop
stc
inc
aam
int3
jp
pop
jb
out
hlt
arpl
cmp
popa
enter
mov
push
test
push
cmpl
mov
popf
mov
jae
lcall
inc
scas
and
lcall
jl
lods
xchg
sbb
jle
mov
and
adc
cwtl
mov
xchg
pop
das
mov
sub
fimuls
dec
fwait
in
ljmp
inc
push
lods
fmuls
movsb
lock
lods
repz
mov
mov
cmp
mov
test
dec
mov
push
out
fmuls
outsl
not
pop
or
pop
mov
cmp
adc
fwait
and
jecxz
jns
rorl
inc
dec
enter
sub
pusha
pushf
pop
insl
jnp
dec
lea
mov
ds
in
lods
stc
fisttps
rorl
mov
add
pop
aam
adc
push
or
xchg
xchg
adc
mov
xchg
fdivr
push
mov
mov
out
cmp
fisttps
xchg
out
repnz
nop
add
mov
repz
ret
subb
outsb
pop
cmp
rcrb
mov
xchg
popa
jbe
dec
adc
jp
arpl
test
xor
xor
xor
repnz
cmp
mov
pop
xchg
sbb
rolb
jno
repnz
cmp
movl
mov
dec
jne
stos
rcll
jp
mov
cld
mov
les
out
xorb
jmp
outsl
cld
cmp
mov
sahf
mov
sahf
popa
roll
xchg
cmp
or
push
call
cmp
int3
out
test
jo
subl
add
cmpsl
outsb
mov
xchg
fcmovu
sbb
adc
mov
sbb
adc
sbb
in
sbb
loopne
ficompl
jno
movsb
jecxz
sub
scas
iret
cmp
add
fistl
jl
pop
pusha
frstor
mov
adc
mov
aad
xchg
les
xchg
out
mov
dec
pop
cmp
ret
gs
aas
in
sbb
mov
cs
fbstp
or
lret
pop
cmp
insb
cmp
xchg
cmpb
sbb
cmp
pop
fcoml
mov
jnp
jecxz
mov
adc
fprem
fwait
popa
cmpsl
in
mov
icebp
inc
dec
sahf
jl
and
ds
sarl
cmp
inc
es
sbb
jae
dec
or
push
pushl
mov
popf
jnp
nop
mov
jbe
rorb
add
sub
lret
push
jp
test
pop
scas
or
call
push
lods
test
mov
add
or
in
shlb
nop
cltd
mov
push
ja
inc
mov
rcr
out
scas
xor
jge
filds
inc
inc
gs
ret
or
cli
movsl
push
roll
rorl
pop
jns
mov
cld
or
xchg
xor
sub
ds
pop
cld
pop
cwtl
xchg
adcl
xchg
mov
adc
sti
lcall
shr
sbb
fldt
xchg
sub
jb
mov
fistpl
mov
fwait
loop
pop
outsl
insb
jge
int3
loope
and
inc
cli
outsl
add
aam
xchg
cmp
test
add
mov
hlt
cltd
ds
mov
lret
ficoms
mov
packuswb
push
mov
jns
push
mov
adc
mov
push
notb
jge,pn
lea
inc
adc
adc
lret
aad
fldt
xor
dec
shl
les
dec
xorl
add
repz
sti
fcmovnbe
mov
in
stos
inc
add
inc
pop
loopne
inc
in
ds
out
mov
scas
popf
nop
mov
arpl
fisubrl
xor
xlat
shll
fwait
pushf
add
lret
sar
roll
xor
or
inc
ss
test
and
scas
cwtl
dec
jne
je
push
shrd
mov
out
jmp
xchg
xchg
jae
mov
push
and
mul
lcall
pop
pop
sahf
je
add
xchg
out
push
xchg
inc
je
jl
loopne
inc
mov
enter
cmp
dec
push
fisubrl
dec
hlt
outsb
mulb
fsubrs
cli
xchg
pop
lods
xor
ret
dec
add
push
daa
repz
lret
mov
ss
mov
pop
jne
jns
dec
add
push
dec
leave
sbbl
neg
int
int
movsl
xchg
fs
xchg
dec
into
adc
pusha
enter
inc
in
adc
rorl
jne
cmp
es
cmpsb
repnz
lods
xchg
adc
sbb
pusha
insl
iret
stos
dec
jle
inc
mov
loopne
add
lea
and
int
fcoms
test
or
sahf
popa
mov
lods
push
mov
mov
xchg
cwtl
aas
or
std
sbb
cmp
push
mov
imul
out
jb
or
mov
cwtl
cmp
mov
cmp
cmpsb
push
xor
fidivrs
fstp
mov
rcll
adc
mov
add
in
cmp
xchg
in
incl
mov
cmp
aad
shlb
mov
and
xor
fisttpl
jo
out
xchg
bound
in
xchg
lcall
pop
iret
shll
sbb
dec
jne
call
adc
cwtl
lock
cmp
pop
cmp
call
stos
mov
push
sub
cmp
sub
pusha
xchg
repz
lock
fcmove
in
popf
iret
mov
xchg
lods
or
mov
mov
jno
arpl
lahf
arpl
rcll
arpl
push
xlat
xchg
test
push
xlat
or
lcall
das
dec
out
jne
in
sahf
cltd
cmpsb
sub
fdivrl
pop
xchg
push
mov
mov
add
mov
fs
mov
dec
ficoml
cwtl
mov
inc
daa
dec
imul
jge
pop
ds
adc
mov
jle
push
insl
mov
jg
insb
aam
jmp
cs
ficoms
cmp
int3
pop
mov
jns
popa
std
out
lea
jno
inc
js
cld
in
ret
jp
mov
mov
mov
lret
aaa
fadd
pushf
or
addb
add
in
clc
xchg
das
jl
shrb
jl
out
push
xchg
sub
xchg
or
ds
js
stos
out
stos
fistpll
jg
js
sbb
cmp
mov
inc
dec
cmp
sbb
out
inc
push
mov
and
movsb
gs
sbb
push
cmp
mov
icebp
push
xor
inc
lret
push
xchg
or
repnz
stos
ds
movsl
inc
mov
push
out
or
repnz
adc
in
inc
and
jmp
cmp
movsb
pop
sbb
mov
add
addr16
bound
aam
pusha
cld
stc
mov
jnp
dec
xchg
gs
sarb
lds
js
iret
lret
cli
aaa
mov
adcl
xor
and
out
loopne
xor
mov
ja
mov
lcall
adc
insb
and
pushf
jecxz
iret
mov
or
outsb
dec
mov
push
add
mov
imul
fnstcw
rol
lret
dec
call
orl
mov
add
inc
out
jl
rol
test
sarb
xchg
dec
lds
es
xor
ret
inc
xchg
rcl
inc
outsl
bnd
stos
dec
cmp
andl
sbb
scas
jg
jnp
mov
inc
pop
push
mov
sbb
push
and
sub
xchg
shl
movsl
and
jmp
je
push
xchg
xor
jb
repnz
lret
add
cwtl
pop
and
test
dec
lcall
adc
subl
jb
lock
repnz
and
dec
clc
xor
imul
pop
icebp
popf
aad
cmp
out
sub
lcall
sub
ljmp
push
push
fnstcw
xor
jno
incb
or
inc
or
mov
rcrl
sahf
aad
mov
fsubr
cmp
sti
xorl
repnz
std
test
test
push
push
into
jl
lea
test
lahf
shlb
shrb
mov
fcoms
push
cmc
adc
pop
and
push
sub
sub
sbb
and
jmp
cmp
mov
sahf
sti
or
xor
test
cmp
dec
push
scas
lds
sub
pop
int
fwait
xchg
test
mov
mov
jbe
lret
sbb
xor
fidivrl
leave
loope
inc
stos
inc
movsl
in
adc
add
lds
ret
shr
jo
lds
mov
loop
push
pop
pop
sbb
adc
jmp
clc
xchg
mov
mov
in
mov
fdivs
pusha
lock
mov
mov
mov
in
inc
ljmp
shlb
mov
dec
adc
ss
inc
adc
daa
mov
fwait
dec
xor
lds
jae
repnz
in
int
push
test
insb
push
loop
pusha
popf
out
sub
sbb
data16
mov
push
xor
push
outsb
mov
aaa
lods
in
push
in
xchg
jnp
in
stc
mov
add
sbb
std
lods
mov
cmp
xchg
jl
pop
mov
jl
stos
movsb
das
mov
pop
dec
pop
imul
rorl
jne
mov
sub
out
adc
in
cmp
xchg
inc
outsb
insl
mov
mov
sub
sub
push
sub
dec
mov
aam
out
je
or
adc
mov
pop
repz
mov
push
and
fs
lahf
cli
popf
pop
ss
inc
mov
lods
cld
testl
push
jb
ja
and
and
mov
aam
test
fistps
or
std
mov
xchg
dec
jmp
inc
push
or
mov
cli
repz
jl
and
mov
sbb
cmpsl
pop
mov
mov
sub
jmp
movsl
ds
pop
jl
cmpb
lcall
mov
ds
int
rcll
sahf
jae
sbb
push
test
arpl
lcall
pop
or
jecxz
mov
stos
or
jne
enter
shrb
in
out
jb
aad
mov
gs
or
cmp
inc
rcr
pop
and
mov
cwtl
lods
in
xchg
and
mov
inc
arpl
adc
xchg
shrl
pushf
inc
mov
arpl
stc
in
mov
lods
iret
inc
dec
sbb
das
push
dec
daa
mov
mov
add
and
mov
cwtl
jae
imul
sub
mov
pop
and
push
sti
pop
and
push
xor
mov
mov
pop
inc
jg
mov
inc
push
out
addb
movlps
pop
jg
pop
inc
pop
push
mov
push
popa
test
daa
adc
sbb
inc
shll
stos
icebp
pop
xchg
mov
mov
and
ja
mov
xlat
dec
xchg
jecxz
mov
mov
push
xor
mov
push
shl
jb
cs
cmp
adc
repz
test
sbb
es
sbb
gs
cmpsb
dec
add
rcrb
loope
iret
ret
jge
cmp
les
test
mov
sub
add
pop
das
mov
sub
xchg
push
jbe
imulb
repnz
jecxz
or
ret
cmp
adc
ret
in
movsl
push
xor
sub
mov
ror
xchg
add
and
test
fld
jle
outsb
sarl
cmpsb
fcom
mov
jbe
pop
in
fwait
xor
int3
sub
out
stos
lds
je
call
out
push
sub
pushf
mov
insl
int
call
rorb
sbb
mov
repz
clc
pusha
adc
pop
push
or
rcll
rclb
cli
das
xor
mov
push
clc
jmp
or
stos
outsb
mov
push
push
cs
fistpll
and
pop
pusha
mov
mov
test
push
sahf
sbb
je
sbb
gs
out
fiaddl
icebp
movsl
lcall
pusha
xorl
sbb
adc
das
ret
xchg
cmpsb
pop
in
mov
sub
xor
insb
aas
pop
dec
push
sbb
pop
xor
xchg
xchg
das
xchg
scas
pop
mov
jge
testb
sbb
lea
movsl
pop
mov
mov
test
jl
out
pop
addr16
adcb
jb
aas
jle
rcll
ret
fnstsw
lcall
fsubrl
or
repz
mov
mov
clc
daa
fiadds
popa
inc
lock
daa
push
in
push
mov
sbb
pop
in
pop
pop
mov
das
mov
repz
jns
push
push
inc
push
add
push
add
pop
fsubs
in
inc
in
stos
inc
xchg
repnz
movsb
dec
mov
add
mov
je
out
sarl
push
inc
mov
dec
mov
pop
push
test
sbb
pop
mov
mov
mov
mov
sub
xor
mov
cmpsb
flds
cld
jno
jl
addr16
xchg
xchg
adc
fs
adc
inc
jnp
push
les
loop
std
jnp
inc
fldcw
les
pop
xchg
dec
xchg
adc
add
sarb
inc
ret
rcr
aaa
adc
mov
outsb
inc
insb
cli
jae
adc
out
or
pusha
sbb
aam
xor
in
adc
test
adc
rol
cld
pop
jl
loopne
jno
xor
rcl
into
es
push
cmp
mov
rcr
cld
or
movsb
fimuls
icebp
add
out
out
inc
inc
xchg
lods
mov
les
adc
clc
daa
mov
push
ret
and
jno
inc
mov
scas
pop
or
cli
stc
cmp
sbb
movsl
jge
dec
push
lds
std
add
jge
jl
pusha
nop
cmp
nop
incl
jne
inc
inc
jnp
xor
fsubr
push
adc
pop
rcr
xchg
arpl
cs
jnp
sbb
adc
jbe
arpl
imul
fsub
in
add
xor
xor
test
cmp
xor
inc
scas
dec
out
aad
sti
popa
xor
jo
xor
jo
xchg
imul
outsl
ljmp
cmp
std
sub
jnp
add
cmp
push
cld
mov
lock
loop
ja
mov
rcll
and
ret
xor
adc
addl
imulb
mov
push
outsl
mov
jbe
stos
xchg
ja
ljmp
int
jge
jp,pn
sbb
push
loope
mov
cli
clc
mov
ja
fidivrl
mov
gs
jge
jns
sets
push
subl
jo
xor
out
mov
add
outsl
xchg
or
adc
jnp
iret
test
xchg
sbb
cmp
cmp
dec
cmc
mov
fs
imul
push
je
bound
mov
jle
int3
fimuls
sbb
or
outsb
push
and
push
lea
push
in
out
pop
or
and
mov
adc
dec
andb
mov
cmp
and
xor
lea
popa
clc
int3
add
sub
iret
icebp
jbe
into
daa
and
fwait
jecxz
xor
hlt
repnz
jg
repz
aad
cs
pop
and
sub
repz
scas
jmp
fdivs
loope
inc
enter
fmul
jb
jmp
mov
cmp
sub
cmp
sbb
ljmp
sti
mov
cmp
das
mov
jns
lock
mov
gs
push
dec
sbb
mov
testb
loopne
testl
push
cwtl
arpl
add
insl
push
jbe
pop
prefetch
movsl
stc
daa
nop
jp
jmp
xor
int3
mov
rorl
push
add
inc
clc
rcl
pusha
insb
push
aad
cwtl
outsb
jno
and
and
inc
mov
sbb
add
push
pop
test
xor
jmp
or
mov
fdivrl
jl
sarb
fs
imul
adc
xor
xor
mov
mov
testl
call
hlt
and
xor
fwait
mov
cmpsb
call
bound
into
mov
mov
lods
inc
xchg
cwtl
sub
sahf
nop
sub
ret
jmp
aaa
fdiv
or
aam
nop
in
or
fnstenv
mov
mov
cld
mov
xor
outsb
les
das
pop
imul
mov
rcll
cmc
pop
insl
hlt
jmp
popa
and
or
cmpsl
jno
jbe
xchg
pop
or
sbb
sbb
mov
jbe
cmp
mov
jge
jle
cmpb
pop
lret
out
mov
mov
rcl
addr16
pop
mov
cmp
push
sbb
mov
xor
loopne
aas
cmpb
gs
jmp
cmc
pop
shl
mov
adc
mov
out
sub
sub
cmpsl
cli
mov
adc
xor
push
int
repnz
dec
and
test
mov
out
cmp
jecxz
lds
pop
mov
or
push
lahf
sub
inc
or
imul
fldcw
add
jge
sub
dec
jno
add
insl
add
sub
data16
enter
push
idivb
test
add
inc
xor
div
js
rol
xor
jne
xor
loope
jmp
imul
mov
adc
adc
pop
adc
lahf
fsts
pop
sbb
aad
sbb
imul
xchg
imul
fsubrs
lods
loop
dec
xorl
pop
das
mov
xchg
mov
sbb
out
les
out
mov
cmpsb
lea
jg
sahf
mov
sub
ficoml
pop
mov
adc
pusha
xchg
stos
xlat
fidivrs
ds
push
pavgw
aam
mov
add
mov
and
mov
icebp
je
and
jb
mov
and
fsubrs
push
lea
xor
ljmp
inc
popa
rorl
mov
test
popf
push
xchg
and
fistpl
ja
mov
push
loope
sub
mov
or
adc
mov
nop
or
lock
das
xor
int
sbb
add
cwtl
xor
add
push
mov
mov
pop
or
orl
sbb
inc
out
jns
sub
fsub
push
insb
aas
mov
popa
rcr
std
jecxz
pop
inc
inc
into
jg
add
lods
stos
jmp
adc
jge
push
das
movsb
ja
pop
cmp
fisttpll
lahf
mull
sub
or
negl
xchg
jnp
in
sahf
mov
push
out
sbb
test
jle
cmp
inc
fsubrp
mov
pop
cmp
sub
test
pop
pop
cmp
mov
push
dec
std
mov
mull
leave
cs
lahf
pop
pushl
ja
dec
jecxz
mov
adc
mov
rol
lods
fistps
xor
dec
fsubrp
mov
push
ljmp
sti
push
push
out
outsl
sbb
pop
ficoms
mov
repz
roll
inc
leave
out
mov
or
and
lods
adcl
lcall
shll
out
cli
lret
jle
fisubrl
dec
arpl
dec
insl
dec
idiv
pushf
add
adc
xchg
mov
or
outsb
dec
inc
pop
jb
roll
stos
insb
cmp
addr16
adc
or
les
out
es
inc
dec
movsb
rolb
xor
cmp
orb
and
push
sbb
mov
xlat
inc
loopne
je
push
pushl
dec
rcrb
cli
jo
jg
in
or
mov
mov
stos
enter
or
jns
mov
inc
pusha
xlat
arpl
adc
shl
jmp
popa
mov
cmovp
add
stos
mov
dec
arpl
mov
dec
lea
inc
or
outsb
jne
xchg
popl
mov
fcmovb
bound
in
push
filds
adc
adc
xchg
mov
jne
adcb
mov
jbe
dec
fimull
in
idivl
xlat
push
add
dec
arpl
lret
gs
or
sub
adc
jg
fldl
fwait
bound
push
mov
mov
shl
clc
ret
repnz
das
andl
into
cmp
or
in
movsl
in
xor
push
pop
inc
icebp
stos
dec
mov
jg
mov
cmp
repz
filds
jmp
dec
out
repz
xchg
rcr
scas
out
jg
dec
cmp
dec
mov
adc
loope
inc
aam
pop
fisubl
mov
mov
lock
cmp
push
sbb
jmp
xor
ret
pop
push
cli
arpl
inc
inc
in
jne
add
mov
pop
loop
stos
js
int
loopne
sbb
jno
mov
shlb
jmp
or
icebp
lea
jge
imul
mov
dec
and
out
mov
fisubl
dec
push
jb
movsl
xchg
movsl
repz
outsl
pop
inc
fistpll
fistpl
out
das
push
mov
stos
cmp
xlat
arpl
not
inc
stos
fstpt
pop
xchg
xchg
sbb
push
or
xchg
or
cld
cmp
adc
lock
fcoml
add
xor
subl
insl
inc
jns
divl
repnz
aam
inc
push
mov
shl
jae
xchg
push
test
pop
add
adc
and
mov
and
xor
addr16
test
mov
fwait
mov
sti
push
mov
shl
sbb
enter
subl
addr16
stos
jbe
or
sub
addr16
jmp
push
sbb
push
mov
lods
sub
cmp
mov
adc
and
div
xor
push
cmp
out
or
je
or
mov
and
jecxz
sub
mov
sarb
adc
inc
mov
loop
sub
sarl
or
fcmove
mov
or
rorl
lods
scas
scas
jg
and
lcall
std
enter
adc
out
test
sbb
jo
ret
int3
add
outsl
ret
loop
mov
stos
cld
mov
or
xor
outsb
out
outsb
aas
lods
scas
std
xor
xchg
inc
jae
enter
popa
lret
shlb
roll
inc
cmc
cmc
ds
mov
push
inc
mov
cmp
inc
insb
adc
push
aas
mov
inc
out
frstor
loope
add
mov
and
mov
fsts
pop
pop
test
mov
sbb
out
es
xor
in
cmpsl
fnstsw
rcll
mov
loopne
dec
pop
ret
adc
add
cmpsb
out
inc
cmc
in
ror
addb
dec
daa
mov
daa
popa
push
pop
or
dec
mov
test
test
fadds
push
cmp
cmp
jecxz
jmp
lods
push
mov
push
push
das
loope
jmp
or
sbbl
es
jle
stos
mov
icebp
dec
stos
xchg
ds
cmc
out
xchg
cmp
insl
in
out
xchg
mov
inc
mov
rcrl
mov
insl
fstps
js
adc
cmp
test
dec
dec
test
pusha
push
xchg
fildl
jecxz
outsb
add
jge
pop
pop
shlb
scas
fs
imul
aad
cmp
mov
mov
iret
popl
push
fwait
mov
sbb
out
leave
iret
or
je
insb
out
imul
xor
addr16
daa
mov
stos
iret
mov
stos
test
sbb
mov
fstp
sub
sub
cmp
imul
outsb
repnz
clc
xchg
push
es
rclb
sbb
inc
decb
stc
push
std
jl
int3
sbb
ret
fcoml
jecxz
pop
mov
adc
dec
mov
jge
loopne
adc
lock
jp
cmpsl
xlat
pop
adc
ret
das
adc
jb
hlt
sarl
jbe
jp
fs
in
rcl
cmpsb
loop
lret
shlb
imul
sub
mov
popf
dec
or
lret
inc
icebp
lcall
xor
push
pop
push
insl
mov
jno
dec
je
mov
or
and
inc
dec
fs
dec
add
aas
mov
mov
mov
daa
popa
outsb
lret
adc
sbb
aam
push
mov
adcb
stc
push
sub
push
adc
sub
xchg
fcoms
xchg
sub
xor
mov
cmp
xor
mov
hlt
add
jge
inc
loop
cmp
xchg
add
or
push
pop
add
xchg
aaa
orb
sbb
movsb
out
rorl
dec
out
les
xchg
data16
sbb
scas
inc
mov
jo
dec
jne
pop
xchg
test
shrl
fwait
lret
and
jl
fisubrs
mov
hlt
adc
dec
mov
xchg
xchg
fbstp
pushf
xchg
addr16
or
lret
or
rcrb
loope
cmp
or
mov
int3
xchg
or
inc
mov
sub
pop
ficoms
test
fdiv
in
xchg
sub
ja
lahf
fcoml
or
and
outsl
jge
pop
addl
xorl
aad
and
shrb
cmp
repz
push
xchg
test
push
mov
add
pop
sub
fidivs
xchg
mov
add
mov
mov
mov
pop
sbb
or
aaa
mov
mov
jae
dec
mov
inc
andl
pushf
pop
arpl
scas
test
and
data16
add
mov
push
mov
mov
sti
or
sahf
rorl
sbb
int
xchg
adc
lods
ja
outsb
scas
ljmp
or
flds
sbb
jge
jmp
jno
xchg
jb
ficomps
add
outsl
push
or
repz
pop
inc
jno
mov
mov
cmp
sub
fldcw
jmp
jns
loopne
push
sti
sbb
sub
adc
jo
std
dec
and
jp
adcb
xchg
mov
mov
inc
ja
sbb
mov
add
pusha
xor
mov
push
imul
icebp
ficomps
lock
add
dec
test
push
movb
icebp
sub
lock
loopne
adc
or
add
in
mov
lods
sbb
xlat
pop
jns
jns
jmp
cmc
ret
cmpsb
push
jecxz
sarb
inc
pop
loope
cmp
push
jecxz
fst
jo
test
mov
xor
push
push
int
pop
jl
into
adc
inc
mov
inc
aam
sub
test
int
iret
xchg
jns
idivb
push
fsubrp
cmp
jge
mov
jl
or
mov
adcb
dec
cli
iret
mov
fdivrp
sbb
push
out
ja
ss
jp
enter
mov
jb
ljmp
pop
dec
inc
jns
xor
movsw
icebp
outsb
pusha
mov
shrl
insb
clc
nop
cld
cmp
sbbl
jl
push
fs
out
ret
ja
xrelease
int3
pop
hlt
cmp
lock
int
cmpsb
test
repz
jg
sbb
ss
or
enter
mov
movsb
sub
ficoml
sub
mov
and
bound
inc
cmp
int
in
push
daa
sbb
outsl
lret
inc
pop
pop
cmc
scas
and
mov
lea
push
repnz
or
sub
ds
xchg
stos
sahf
test
rorl
cmp
in
sbb
mov
pop
pop
adc
fs
pop
push
add
mov
inc
xchg
push
push
ss
shl
push
cld
mov
pop
cmp
movsb
test
insl
es
pop
xor
inc
pop
xor
hlt
mov
out
fisubs
imul
daa
mov
pop
fbld
cmp
or
sub
xor
mov
dec
inc
outsb
or
dec
aad
push
rorb
ss
pusha
adc
push
mov
mov
sub
push
jge
sbb
ja,pt
mov
jge
outsl
aas
inc
and
push
xchg
popa
inc
scas
xchg
inc
and
leave
ds
bound
les
and
lods
mov
fdivr
jg
out
inc
repz
mov
mov
out
mov
stos
inc
test
push
aad
add
shlb
pop
mov
xchg
sub
mov
cltd
int3
loopne
fisttpll
mov
outsb
mov
insl
mov
cmp
por
adc
fiaddl
fwait
shl
fnstsw
int
dec
stos
cli
mov
mov
outsb
inc
sub
lret
push
scas
jg
cltd
insb
or
add
mov
andl
into
fcompl
mov
dec
sbbb
xor
and
cs
sbb
outsl
mov
push
pop
sbb
cmpsl
and
mov
push
ja
lret
dec
rol
mov
sbb
pop
fldl
cmp
and
mov
jae
ret
popf
outsb
push
push
aaa
setge
inc
mov
shlb
por
clc
jle
mov
inc
in
movsb
fsubr
iret
pop
mov
shl
shlb
orb
iret
cmp
push
pop
add
int
push
push
pop
mov
xor
push
mov
fstpt
in
pop
inc
adc
leave
adc
push
jle
cmpsb
adc
shll
divb
pop
xor
pop
jbe
push
push
cmpsb
inc
stos
pop
scas
negl
and
les
xchg
imul
sub
fstl
sbb
sub
dec
push
jle
in
sub
inc
xchg
lods
jmp
stos
inc
aad
je
inc
ds
dec
sahf
mov
inc
mov
pusha
sub
mov
scas
hlt
clc
sbb
mov
test
iret
std
stos
inc
out
dec
out
js
xor
cmpsb
or
mov
mov
movsb
fsubr
rcll
sub
mov
xchg
sub
dec
ficoms
pop
fstp
in
sti
cmp
mov
popa
jmp
xchg
push
inc
andl
pop
cwtl
addr16
xor
mov
push
out
xor
add
cmp
clc
push
pusha
aaa
dec
arpl
test
fadd
add
dec
mov
fucom
jno
jecxz
or
in
lock
ja
fbld
pushf
sbb
inc
inc
xor
sub
pop
loopne
mov
jge
cmpsb
test
stos
or
mov
push
insb
scas
sti
lea
movsl
xor
jo
sbb
iret
mov
repz
mov
sbb
stos
xor
ret
push
outsl
jns
popa
mov
mov
add
cs
jb
sbb
inc
das
imul
adc
cmp
pop
cmp
mov
nop
or
jnp
pop
jge
in
add
dec
mov
cmc
and
jecxz
or
and
repz
cmp
in
mov
mov
mov
mov
push
xor
xchg
unpcklps
mov
mov
fstp
dec
out
jne
add
pop
fsub
inc
clc
in
test
addb
jb
push
add
adc
sbb
mov
mov
adc
clc
dec
loop
int3
cmc
pop
xor
jns
add
fsubrl
mov
mov
repz
ss
rolb
in
enter
jge
sar
xlat
fisttps
mov
outsb
sarb
push
pop
sahf
test
mov
cmp
fwait
lcall
xor
bound
inc
mov
push
fwait
es
movsl
pop
push
xor
scas
push
rcr
cmp
shrl
fbld
push
add
pop
mov
je
pop
fs
inc
jg
xchg
aas
iret
lea
loope
rorb
cmpsb
jo
lods
aad
cmc
xor
movsl
lds
jo
pop
and
iret
sbb
bound
ss
pop
inc
rorl
arpl
mov
mov
ja
out
scas
pushf
sub
enter
stc
add
sbb
pop
aas
int3
add
stos
xchg
cwtl
push
std
pop
xchg
dec
inc
mov
jge
incl
dec
test
nop
popl
jl
stc
jns
xchg
xchg
stos
aaa
adc
xor
lds
mov
aaa
int
hlt
cmp
push
das
dec
test
outsl
daa
mov
mov
lds
xchg
xchg
push
into
pop
lcall
imul
pop
mov
ss
push
pop
fsubl
es
fadds
ret
outsl
cltd
mov
push
lret
jmp
cmp
in
xchg
push
jge
dec
sbb
sbb
loop
xor
mov
imul
jecxz
sub
outsb
nop
ss
sub
outsl
aas
aas
add
dec
add
inc
jg
out
ret
loop
nop
out
stos
les
inc
pop
sbb
movsb
push
mov
cwtl
jae
adc
dec
iret
daa
dec
btr
enter
xorb
mov
cmp
xlat
add
sbb
stos
fs
xchg
pop
imul
stos
push
shll
xchg
xor
pop
ljmp
jle
and
jae
int
mov
into
push
loope
xchg
jg
and
nop
hlt
mov
outsb
pop
pop
clc
dec
inc
adc
mov
mov
ss
or
mov
repz
cltd
mov
fistpll
xchg
jne
xor
sti
sbb
ljmp
das
jnp
sub
xorb
pop
dec
xor
sub
inc
arpl
rorl
das
sbb
or
std
mov
scas
ja
out
sub
mov
aas
sbb
in
mov
fdiv
or
xchg
cmp
scas
call
aad
inc
lock
lret
loopw
notl
popa
pop
js
pop
sub
scas
xchg
or
adc
jecxz
jb
test
int
xchg
fistps
jbe
sub
icebp
scas
lods
enter
fsub
xor
std
outsb
or
adc
arpl
mov
and
mov
mov
mov
cmpsl
es
and
adc
dec
rcll
xchg
popa
push
jnp
jmp
push
fs
push
dec
xchg
add
lods
sub
scas
xchg
cmp
jbe
sbbl
inc
and
nop
fists
iret
xor
and
inc
aas
lea
inc
add
mov
or
imul
mov
mov
js
sub
sub
inc
sbb
ret
fiadds
xor
loop
inc
mov
andb
mov
xchg
in
sbb
jb
sahf
out
lcall
outsl
insb
arpl
jp
cmp
and
dec
mov
jns
mov
jo
sub
fs
adc
jg
push
or
jbe
pop
mov
push
sahf
pop
inc
mov
mov
pop
test
push
mov
es
in
dec
xor
or
cmp
repnz
xchg
jno
cli
shlb
sbbb
out
jne
popf
adc
in
aas
mov
in
jno
and
cwtl
jge
push
xchg
inc
pop
cvtps2pd
push
std
icebp
ja
dec
push
pop
pop
xchg
iret
add
psrld
mov
andl
push
repz
cmpsb
aas
mov
jle
rorl
sahf
incl
aam
push
ja
cltd
gs
mov
cmp
sub
add
sbb
mov
mov
loope
mov
test
cmp
and
jl
std
pop
inc
lret
neg
in
xor
jge
rcrl
lret
inc
mov
xchg
in
inc
and
lret
repz
sub
fstl
divl
loop
mov
inc
or
add
cmc
cmc
push
test
movsb
fcompl
push
dec
mov
scas
lea
pop
mov
fisttpll
lds
out
jmp
loop
aam
fs
ffree
das
dec
insb
or
add
push
mov
pushf
test
xchg
pop
xchg
popf
ljmp
mov
mov
push
popa
inc
fmuls
in
jb
ljmp
out
xlat
inc
cmp
arpl
sub
ljmp
imul
add
sub
mov
sub
popa
aas
les
jle
and
iret
ret
icebp
fwait
push
subl
cmp
cli
sbb
jg
sub
or
shrb
out
fnstenv
test
into
push
and
outsl
adc
in
inc
push
xchg
lret
or
mov
sahf
imull
addr16
inc
cld
icebp
mov
aaa
or
test
cmp
gs
icebp
shrb
adc
out
ret
cmpsl
arpl
fldcw
cwtl
adc
dec
mov
insb
mov
cs
hlt
adc
cmp
jno
inc
jge
mov
jo
adc
adc
je
mov
push
call
jge
fld
dec
ss
shl
rclb
int3
xchg
push
pop
lock
mov
and
fnstenv
mov
pusha
and
mov
cmp
lea
les
testb
das
adc
xchg
sbb
js
jae
jp
inc
outsl
aaa
mov
jg
mov
jl
mov
rcl
push
fnstsw
xchg
loop
cmp
push
fstpt
pusha
pop
data16
sbb
jb
movsb
xchg
lods
mov
movsl
shll
pop
in
test
and
popa
je
in
xchg
bound
and
mov
ja
imul
test
gs
fs
bound
out
je
pop
push
shrl
popa
jnp
or
or
in
insb
jp
xor
jae
sahf
incb
call
out
das
daa
popa
in
imul
mov
adc
adcb
dec
cmp
and
jle
sbb
repz
jle
call
mov
insl
fmul
imul
xchg
aas
testl
jne
pop
out
lea
pop
sub
cmpsb
mov
rol
std
or
ret
aas
xor
pop
add
je
push
sbb
stos
addl
add
dec
sub
orl
in
daa
and
lahf
shll
popa
adc
leave
ss
lea
pop
dec
jmp
jne
mov
aaa
neg
lcall
dec
pop
out
sbb
jb
std
jns
test
fs
iret
inc
xor
jecxz
pop
inc
cs
test
or
divb
pop
fiadds
test
jnp
sti
inc
aad
mov
jge
out
fsubr
jle
xchg
popa
or
or
xor
fbstp
iret
adc
fcompl
sbb
stos
test
shll
jne
jecxz
xor
mov
push
insb
lret
xchg
dec
imul
dec
cmp
xchg
jno
cmc
das
sar
aam
fwait
rcrb
or
xor
popa
repz
xor
leave
sub
movsl
aad
jne
sbb
or
pop
cmc
stc
adc
out
roll
arpl
mov
jecxz
inc
faddp
xor
push
jbe
cmp
pop
loope
or
aaa
cwtl
cmp
repnz
sub
scas
ficoms
add
jbe
je
adc
adc
fs
roll
add
frstor
movsb
es
inc
pusha
out
pop
lock
in
cmp
dec
mov
outsb
jg
inc
das
scas
std
inc
iret
mov
cmp
adc
xchg
adc
add
pop
daa
xor
jnp
jbe
out
popa
mov
pop
jg
fbld
mov
xchg
out
jl
push
out
mov
adc
mov
jmp
in
pop
adc
pop
sbb
dec
mov
adc
fidivl
or
mov
xchg
into
imul
push
scas
sbb
outsl
sbb
mov
scas
add
mov
mov
push
out
push
dec
xchg
ja
dec
mov
lcall
fs
push
imul
cmp
stc
popa
in
stos
mov
mov
xor
movsl
fnstcw
out
int
popa
sbb
mov
bound
scas
jnp
hlt
in
add
enter
ss
dec
jp
ljmp
pushl
je
loope
mov
mov
push
push
push
pop
xchg
call
test
mov
sbb
stos
mov
cmp
add
setg
outsl
push
or
outsl
loop
addr16
xor
mov
ss
popa
or
and
je
push
sub
pop
cli
lock
mov
and
jg
or
xchg
push
jns
cmp
and
add
pop
neg
insb
mov
bound
imul
xchg
push
mov
jle
mov
fucomip
shrb
inc
xchg
lods
outsl
ret
test
scas
dec
mov
pop
mov
stc
sub
popa
lds
jns
es
fstl
fwait
jo
add
mov
les
flds
mov
scas
ljmp
aaa
mov
and
cli
nop
pop
dec
push
in
orl
mov
jge
das
dec
jno
xchg
xchg
add
enter
out
lods
daa
shl
or
js
ss
das
jmp
add
mov
pop
and
mov
ss
mov
pushf
sbb
pop
adc
lcall
sub
fcomps
mov
fisttpl
lahf
repz
pop
mov
sbb
pop
data16
inc
int
popa
out
mov
je
popa
mov
jns
mov
in
inc
call
popf
imul
ffreep
xchg
ljmp
sbb
clc
inc
hlt
cmp
dec
or
mov
arpl
ficompl
les
out
movsl
mov
andb
out
roll
inc
or
test
int3
hlt
jecxz
cmc
fmul
dec
cli
hlt
out
sub
outsb
dec
jmp
adc
add
xchg
testb
cmpb
outsb
sarl
inc
gs
ret
push
clc
adc
rorb
fwait
jne
xor
mov
outsb
es
or
test
lods
out
sub
es
fdivrs
pop
test
cmp
insb
sahf
or
shrb
xor
test
lock
push
jae
repz
mov
adc
sahf
jno
aam
dec
lods
add
cmp
adc
mov
cmc
notl
mov
dec
xchg
aas
stos
xlat
popf
mov
mov
push
cltd
mov
je
insl
xlat
sub
std
pop
pop
stos
jg
stos
cmpsb
push
ficoml
out
stos
jecxz
in
adc
je
add
mov
hlt
fisubrs
add
inc
mov
cmp
es
jg
aas
roll
not
xor
ds
cmpsb
mov
dec
ret
fmulp
adc
sub
pop
ret
rol
xor
mov
mov
dec
push
and
out
jg
inc
into
xor
dec
test
movsl
mov
insb
adc
fcoms
push
fnstcw
dec
add
and
loop
lods
sbb
sbb
js
xchg
dec
lea
cmp
or
mov
push
fstps
pop
push
mov
out
leave
out
jmp
test
jne
xchg
push
mov
sbb
cld
hlt
xchg
out
outsb
xor
mov
enter
cmp
stc
push
cs
cltd
pop
adc
dec
rorb
daa
dec
testl
sub
mov
test
push
rcrl
jle
enter
inc
out
sub
add
inc
xchg
imul
stos
jnp
pop
inc
fisubrl
xor
dec
rclb
fdivrs
loope
pop
push
flds
push
out
test
lahf
xor
cmpsb
and
or
shll
add
mov
push
loopne
cmp
add
jno
aam
loope
scas
orl
xchg
xchg
mov
jns
iret
call
xor
cmp
pusha
fstpl
test
cmp
popf
addl
jl
add
js
xlat
out
add
mov
jo
test
into
ret
or
push
js
mov
sbb
cmp
loopne
ja
xor
popf
push
jbe
mov
push
lds
jl
sub
popa
cmp
cwtl
pop
pop
out
les
je
mov
es
push
pop
mov
aas
cmc
jl
cltd
faddp
sub
xchg
daa
mov
push
jmp
and
xchg
int3
dec
pushl
insl
jp
and
pop
fs
pop
mov
sbb
test
inc
movsl
jmp
adcb
and
addl
xor
dec
pop
dec
xor
pop
or
inc
aam
push
std
repnz
inc
inc
lret
sbb
xchg
jne
sbb
cmc
jo
cmp
popa
lahf
fwait
cltd
xor
movsl
mov
shlb
adc
ss
adc
sbb
dec
mov
push
jae
xchg
icebp
or
cltd
mov
xor
push
dec
and
int
jge
ficompl
mov
inc
dec
fbld
in
and
inc
test
in
push
movsl
test
sarb
pop
cltd
inc
test
jg
pop
ljmp
clc
adc
cmpsl
mov
stc
lcall
lahf
lret
fs
cmp
movsb
mov
sub
lds
xchg
ficoml
jnp
out
sbb
mov
cli
adc
daa
jno
mov
mov
or
adc
fisubrs
or
insb
lret
outsb
hlt
cmpsb
push
xor
or
sbb
push
add
add
cmp
cmp
lods
cmp
popa
jmp
test
ds
lods
nop
cmc
push
dec
dec
cmpsl
xchg
insl
int
adc
cmpl
outsl
stos
mov
lds
call
repz
repz
imul
pop
cli
or
fstps
jo
ret
insb
mov
adc
or
or
insb
inc
adc
jb
jno
inc
or
pop
xlat
dec
jns
shrl
test
ljmp
xchg
pop
lods
loope
or
ljmp
cltd
dec
scas
movsl
jmp
xor
test
ja
scas
jge
xchg
mov
pusha
mov
addr16
cli
sub
and
mov
shll
xor
mov
sbb
mov
rcrb
lds
fnstsw
outsb
sbbl
mov
push
cmp
sbb
pop
mov
or
adc
inc
inc
mov
iret
push
test
sbb
jne
mov
xchg
jae
test
daa
scas
cmp
jno
xchg
and
out
cmp
ret
mov
lds
popa
add
xchg
loop
daa
and
jge
out
inc
bound
mov
jecxz
int
ret
push
mov
sbb
push
push
jo
icebp
mov
adc
and
or
cld
dec
in
cwtl
xchg
and
lcall
pop
in
mov
add
lahf
xchg
mov
dec
lods
fisttpl
out
shrl
jp
movmskps
adc
inc
ret
dec
lods
je
push
inc
mov
mov
push
lahf
jp
loop
outsl
inc
push
mov
test
fidivrl
mov
stc
sti
in
inc
mov
jne
xchg
lock
inc
push
icebp
cmpsl
imul
adc
stos
jg
std
or
sarl
inc
adc
daa
pop
mov
or
dec
mov
dec
push
add
sbb
divl
jmp
and
pushf
jns
test
pop
xor
xchg
sub
dec
lea
stos
mov
pop
push
jne
aas
or
push
mov
scas
mov
aas
push
fiadds
add
imulb
inc
daa
dec
mov
mov
cmp
dec
in
push
mov
xchg
push
push
xor
mov
inc
fs
cs
fisubs
icebp
mov
push
mov
fsub
mov
or
in
icebp
cltd
mov
inc
ret
push
xor
push
push
cli
in
or
mov
push
dec
inc
or
dec
sub
sub
mov
jbe
add
jae
cmp
cmpsb
adc
mov
ret
jne
lea
mov
pop
fadd
loopne
jae
ja
lret
mov
pop
arpl
inc
shld
push
les
aas
push
fsubl
movsb
lea
frndint
jmp
and
xchg
and
cmp
lret
sahf
pusha
push
push
push
inc
fmul
sahf
into
xchg
lea
jo
inc
pop
adc
jl
repz
aaa
add
cmp
mov
or
ss
lahf
sbb
into
xor
xlat
xchg
and
inc
ds
test
mov
cld
out
in
shll
lret
stc
dec
dec
test
mov
negb
xchg
mov
incl
adc
adc
mov
and
int
scas
or
cli
add
pop
add
ljmp
test
fmuls
jmp
push
add
sbb
roll
int3
pushf
leave
incb
lods
aad
mov
mov
jae
rcl
es
insl
fisttpll
int
push
sbb
bound
mov
int
sti
popa
out
sarb
cmp
push
jmp
lods
lock
mov
stos
lods
or
packssdw
push
push
sbb
adc
mov
add
xor
sti
fidivs
jge
insb
rorl
pop
inc
sbb
mov
cmp
fwait
mov
shlb
mov
loope
movsl
scas
aam
inc
movl
rcrb
shll
shll
mov
sti
add
sbb
or
adc
sbb
jp
xor
iret
call
add
add
and
xchg
pop
mov
scas
add
mov
adc
rcrb
xchg
rcll
or
mov
add
ss
push
cmp
adc
or
jb
cmp
fstpt
loop,pt
or
xor
pop
insb
inc
lock
hlt
mov
jnp
xchg
mov
sbb
rcll
shlb
mov
out
gs
mov
mov
sbb
xor
test
dec
outsb
inc
jae
cmpsb
sti
icebp
xchg
dec
je
sub
aaa
bound
xchg
repz
add
shrb
pop
mov
mov
and
xor
mov
fistpl
cmpl
sub
push
je
decl
aas
aad
out
pop
fisttpl
mov
rolb
cwtl
jg
jno
push
xacquire
nop
out
popa
ds
inc
movsb
adc
or
jne
shl
test
pop
lds
pop
lahf
mov
add
jmp
xchg
sbb
cmp
addr16
pop
jne
repnz
popf
icebp
pop
mov
mull
mov
ret
xchg
xor
or
jge
bound
mov
repnz
mov
mov
in
ret
push
test
sbb
popa
sti
rcl
ret
cmp
cmp
jb
xchg
cmp
cmc
sbb
dec
stc
inc
dec
push
out
je
and
fists
mov
lret
cwtl
movsb
xchg
add
fucomp
jne
es
sti
xchg
mov
and
bound
adc
xor
jbe
xchg
and
cltd
sbb
frstor
adc
jmp
mov
xor
daa
adc
pop
fs
into
loope
sbb
int3
stos
add
pusha
rcll
jno
pop
mov
outsl
pop
arpl
adc
pushf
andl
dec
ret
sub
in
shll
ja
add
lods
sub
xchg
enter
in
lods
inc
push
xchg
scas
fcomp
mov
test
scas
adc
jno
and
cmp
mov
iret
jns
in
add
jo
or
jg
mov
jge
mov
sub
and
jle
push
mov
sbb
insl
popl
sarl
jbe
xchg
push
xor
fdivrl
fsubrl
sti
out
and
xor
ud2
cmp
lds
jnp
push
push
sbb
inc
roll
jg
push
mov
dec
inc
outsb
movsl
dec
sub
push
xchg
add
ljmp
es
jl
sbbb
sbb
cmp
push
push
mov
sbb
cli
out
popf
sbb
les
xchg
push
xchg
lahf
or
mov
test
and
movsb
sub
icebp
inc
jp
in
jmp
in
jp
dec
mov
aam
aaa
cld
mov
fcomps
orb
add
cwtl
aaa
lret
sbb
test
sbb
ja
out
lret
dec
and
inc
inc
js
mov
scas
daa
hlt
jg
pop
fidivs
inc
sbb
jmp
mov
outsb
lahf
or
out
jge
movsb
int
call
pop
xchg
addr16
roll
clc
jle
jmp
insl
mov
adc
dec
mov
repnz
pop
loop
cs
adc
arpl
jae
add
in
lea
div
sub
jmp
sbb
adc
sahf
jg
inc
cmc
divb
mov
repnz
inc
icebp
dec
push
sarl
jle
sbb
ljmp
ss
mov
ja
or
mov
lds
repz
shr
push
xchg
push
cs
cmpsb
xchg
adc
popf
out
adc
and
jg
loop
inc
mov
add
fnstsw
xchg
repz
cmp
pop
or
or
ficompl
or
xchg
enter
shlb
jmp
test
add
cmpsb
and
and
std
xchg
and
cld
data16
outsl
xchg
mov
or
sbb
out
mov
dec
inc
movsl
lods
mov
jno
jmp
inc
test
pop
rcr
movsl
mov
jnp
insl
test
or
sbb
jp
pop
pop
scas
jne
push
inc
xor
mov
adc
mov
jle
mov
push
ficomps
lcall
dec
lret
gs
inc
daa
lods
jae
or
in
in
adc
push
push
lods
stc
xchg
ret
imul
jae
sub
scas
fstpt
repnz
loope
and
or
push
mov
rcr
sub
jb
xlat
lods
or
out
into
xchg
or
xchg
aam
mov
dec
add
inc
jp
gs
mov
dec
idivl
xchg
lret
call
lods
jne
push
jge
add
icebp
push
cmpsl
cmpsl
jne
or
xchg
stos
sbb
enter
repz
add
repnz
xchg
sub
push
fs
push
mov
aas
mov
sub
and
pop
out
ss
ja
lock
lret
push
inc
stos
dec
inc
and
and
push
pop
xchg
jne
in
pop
inc
hlt
clc
xchg
mov
test
xchg
loop
dec
in
rcl
sti
cmp
mov
dec
sub
pop
inc
inc
jg
fists
pushf
xchg
outsb
fistpll
in
fidivs
jle
scas
push
stc
dec
jl
fwait
xor
jnp
cmp
pusha
push
pop
mov
mov
dec
cmc
mov
add
popa
or
loop
out
cltd
mov
fstpl
inc
or
ret
data16
inc
push
sbb
mov
jns
cli
inc
or
outsb
pop
adc
stos
xchg
out
out
bnd
mov
sub
subb
rorl
popa
jo
sti
mov
mov
fldenv
dec
push
sbb
loop
loop
mov
dec
cmp
lahf
fisttpl
repz
out
mov
loope
pop
scas
lea
dec
mov
aad
das
fdivrl
mov
xor
push
push
xor
fidivrs
mov
imul
inc
add
popf
popa
int
ret
push
mov
fwait
cli
test
cmc
inc
aad
aad
xor
ret
push
out
add
or
cmp
imul
fiadds
add
and
mov
inc
test
sub
fwait
mov
push
or
nop
mov
popf
xor
jecxz
push
scas
xor
jo
mov
lock
lret
inc
sbb
add
cmpsl
jmp
pop
fdivrl
fwait
test
xchg
jmp
adc
sub
or
fwait
stc
inc
pop
insb
jg
mov
loopne
or
adc
out
sub
adc
cwtl
arpl
fsubr
cmp
adc
xchg
mov
cmc
mov
stos
lahf
loopne
ds
fbld
sbb
pop
dec
jmp
and
loop
sarb
enter
jbe
test
fnstsw
hlt
and
jecxz
jbe
inc
lret
pop
pop
nop
je
and
sbb
fsubs
jo
and
inc
call
loope
lcall
mov
and
xchg
and
mov
sbb
sub
sbb
das
cld
cmp
sbb
and
xchg
pop
rcrb
and
dec
test
jge
leave
mov
xor
mov
and
adc
mov
mov
xor
jno
clc
mov
xchg
or
fnstsw
and
sbb
xchg
sub
mov
scas
xor
push
sub
cmp
pop
aad
or
push
mov
pop
sub
aad
or
popa
add
mov
inc
mov
inc
shrl
add
andb
leave
push
fnstcw
inc
les
adc
iret
jp
shrl
andl
std
fiaddl
repz
mov
mov
mov
call
mov
xor
inc
roll
fcompl
call
fidivs
inc
xchg
out
mov
mov
dec
or
xor
mov
and
fcom
push
jp
insb
test
xor
sbb
xor
movsb
add
out
pop
xchg
divb
pop
repnz
sbb
imul
pushf
aas
push
not
push
xchg
lcall
mov
rorl
aad
mov
and
inc
ficoml
sub
jns
stc
cmp
jle
adc
inc
mov
popa
adc
cmp
jge
loopne
jp
hlt
jge
repnz
or
cmp
mov
in
test
fisubrl
add
pop
imul
negb
xchg
mov
fsubs
outsb
pop
xchg
mov
adc
xor
movsl
sbb
sbb
aam
test
ljmp
jge
mov
out
xor
pop
jge
push
or
in
and
add
in
das
mov
adc
lds
lock
shl
lahf
arpl
je
enter
aam
ds
aas
jl
push
bound
outsl
pop
das
out
add
loope
dec
fstpt
test
fwait
adc
lea
add
xlat
clc
sub
shll
mov
ja
jmp
fstpt
call
mov
pop
sub
mov
test
mov
cld
adc
push
inc
jnp
rcll
push
push
loopne
mov
es
loop
out
push
clc
dec
sub
and
push
sarb
push
repnz
mov
jl
or
mov
std
mov
loop
mov
fidivrl
mov
leave
sbb
mov
cmp
pop
mov
flds
xor
repnz
xor
test
jle
xchg
out
mov
fsubl
std
pop
iret
adc
xchg
push
inc
aas
mov
inc
cmp
fwait
lret
ds
pop
aam
repz
push
mov
popa
fs
push
std
lods
stos
push
and
dec
les
jmp
lock
ret
aad
outsb
and
lret
sub
lret
jno
fimull
imul
dec
cld
inc
push
stc
pop
or
sub
or
mov
stos
je
in
dec
in
mov
xchg
mov
sub
cld
and
insl
notb
fs
add
insl
lods
imul
aad
lock
mov
out
sub
rcrl
fmulp
dec
hlt
cmc
jae
mov
sbb
in
add
mov
test
dec
push
imul
fdivrl
sbb
pop
jbe
int3
jo
lods
adc
xor
sub
aas
jae
sahf
fldt
loop
es
call
test
pop
adc
icebp
aam
mov
in
loope
xchg
adc
stos
dec
fdivrs
jge
mov
out
sub
xchg
jno
inc
test
movb
dec
inc
ljmp
iret
push
nop
sbb
gs
in
mov
push
and
addr16
repnz
lea
outsl
dec
xchg
loope
and
push
clc
out
fcomp
test
xlat
maxps
mov
push
adc
test
push
daa
sbb
mov
inc
dec
xor
or
mov
scas
xorb
movsb
je
out
sbb
jp
push
xchg
shll
xchg
push
aas
jp
xchg
pmaddwd
or
pusha
xchg
dec
pop
loope
push
inc
jns
and
jg
push
mov
ljmp
adc
xor
dec
adcb
sub
mov
imulb
mov
sub
mov
lods
inc
pusha
lea
inc
sub
popf
in
sti
mov
fidivrl
adc
scas
out
fstpl
xchg
insl
or
sti
call
xchg
jmp
sub
sarl
fdivr
shlb
pop
push
gs
insl
cld
mov
mov
sub
jge
rcr
sbb
cs
mov
pusha
cmp
xabort
push
nop
pop
mov
jmp
dec
and
cmp
inc
cltd
mov
xor
decb
dec
adc
jnp
or
or
addl
mov
mov
nop
std
xchg
test
and
xchg
fldt
jle
xchg
add
insb
rcll
push
fmul
int
jg
out
push
das
lret
cltd
aad
mov
pop
inc
inc
dec
sbb
mov
sbb
mov
mov
rcr
inc
xlat
pop
xchg
jle
or
lea
mov
mov
xor
or
dec
mov
dec
mov
mov
mov
xor
mov
push
nop
cld
lret
push
push
or
ja
lds
movsl
movsb
inc
jns
mov
cmp
into
mov
jl
mov
fmull
stos
into
xchg
inc
and
aad
dec
iret
push
or
sbb
adc
movsb
repz
rcrl
xchg
or
clc
ja
inc
scas
sti
dec
std
inc
notb
dec
ret
xor
mov
push
push
mov
sbb
imul
xor
ret
adc
or
inc
out
jecxz
sub
pusha
pop
std
add
dec
and
sub
mov
test
mov
sbb
js
int3
dec
mov
jle
inc
and
stos
inc
mov
xor
mov
mov
inc
ljmp
aam
mov
dec
add
pop
sbb
gs
arpl
imul
xor
pop
sub
pop
sbb
jge
ret
mov
test
mov
xchg
cld
imulb
andl
cmp
in
sahf
dec
adc
cmp
add
add
loopne
jmp
jno
pop
jo
or
fcmovnu
in
repnz
xor
pushf
flds
cmp
sub
fldcw
mov
jo
dec
add
icebp
shrl
adc
out
lcall
mov
cmp
cltd
xor
repz
das
adc
gs
clc
cmpsl
adc
out
in
ss
cld
shl
cmp
inc
fdivrl
or
out
mov
out
into
pop
mov
pop
int3
inc
js
inc
ret
xlat
jnp
fimull
ret
insb
mov
sub
repz
insl
aad
lods
and
mov
sahf
sbb
ja
in
fildll
mov
int3
and
dec
dec
les
stos
hlt
push
jae
push
into
xchg
mov
stos
jmp
jbe
add
scas
imul
xchg
mov
inc
adc
test
jne
mov
pop
imul
and
jge
out
dec
lret
sbb
repnz
cmp
loopne
or
xchg
and
jge
xchg
pop
stos
jge
inc
xchg
add
sub
orb
les
dec
sub
xor
test
and
in
insb
sub
fucom
fisubrl
mov
inc
mov
sub
dec
hlt
pop
lahf
xor
pop
popf
cmp
enter
and
loop
push
das
inc
in
mov
sub
cmp
dec
jmp
jae
xchg
test
pop
and
orb
aaa
push
sbbb
mov
push
xchg
mov
dec
jmp
cmp
sbb
addr16
sub
mov
inc
loope
sar
rorl
add
and
lea
push
repz
lods
mov
dec
dec
pushf
ror
enter
mov
lcall
or
cmpsl
push
or
mov
cmp
jae
or
lods
xchg
xor
jno
loopne
les
jnp
pop
mov
pop
xchg
mov
pop
scas
xor
xchg
testl
stos
push
shrb
xchg
mov
in
jmp
mov
mov
lds
pop
sub
or
push
pusha
je
mov
pop
movl
fwait
repnz
scas
mov
jp
jne
push
fsubr
fstps
jo
mov
jmp
das
push
outsl
data16
jbe
lret
and
lcall
or
sub
lret
rolb
push
jg
dec
out
fbstp
sbb
mov
pop
sub
cmpsl
test
mov
mov
test
les
popa
jl
pop
cwtl
push
jb
les
xchg
dec
cmpsb
in
push
ret
movsb
push
and
push
es
lea
xor
jne
jecxz
lock
sub
push
cmp
rcl
out
adcb
jp
addl
push
mov
jbe
pop
sub
mov
stc
adc
daa
add
stos
mov
jl
subb
adc
scas
mov
jb
rcrb
ds
fldl
test
imul
adc
and
pop
movsl
fimull
sti
xchg
enter
into
aad
subl
lcall
and
mov
jbe
sar
insl
dec
lods
push
les
jp
lock
dec
out
cmp
js
pop
sahf
and
or
bound
insb
mov
imul
pop
enter
ja
jp
fs
cwtl
xor
or
and
push
mov
pop
cmpsb
ror
fists
cmp
loopne
inc
xchg
or
push
pop
inc
outsb
mov
scas
cmp
pop
and
jl
daa
jecxz
cmp
nop
sbb
or
jne
mov
out
and
jae
mov
decl
cmp
cmc
js
dec
shr
jns
mov
fnstenv
and
xchg
adc
decb
mov
jno
lret
mov
stc
adc
add
loopne
lock
fwait
mov
cmp
cli
rcrb
outsb
je
sub
push
and
aad
sub
mov
sbb
std
push
mov
xor
xor
cmpsl
testb
dec
pop
stc
inc
jg
sub
in
test
sub
adc
push
mov
jae
test
sub
push
roll
lret
sub
jns
mov
orl
mov
cltd
mov
int3
mov
inc
stos
push
movsl
push
dec
loope
and
popf
dec
movl
testl
imul
in
mov
sub
cwtl
push
ja
fsubrs
jl
repnz
mov
les
sbb
icebp
pop
xor
or
leave
xchg
lods
or
xor
aaa
call
cmp
pop
out
and
pop
or
push
jb
adc
stos
les
in
rcrl
mov
mov
push
pop
jle
jno
test
rcrb
stos
mov
les
aad
xlat
fstps
repz
add
pop
sub
aad
in
push
xchg
pop
addr16
sbb
lds
jno
push
ds
push
mov
mov
push
and
xor
nop
sub
xlat
stos
and
out
or
sbb
push
out
xchg
rcll
mov
or
jl
pop
stos
imull
ja
out
repz
movsb
gs
imul
subl
pop
jno
xchg
mov
sbb
lods
inc
test
fs
dec
jmp
fildl
loope
sbb
adc
dec
xchg
or
sub
inc
roll
mov
mov
and
in
inc
out
int3
test
btc
mov
lds
pop
movsb
das
cmp
add
test
sub
pushf
sbb
dec
mov
adc
sub
cwtl
loop
imul
shrl
sub
pop
inc
and
dec
inc
dec
push
leave
stos
daa
mov
in
xchg
hlt
and
jns
sub
mov
pop
xchg
jno
and
xor
popf
fbld
add
mov
push
sub
cs
or
push
push
cmc
fwait
xchg
jecxz
cmp
mov
jge
test
inc
or
or
jmp
ficompl
fnstcw
daa
xlat
fistl
xchg
adc
push
inc
and
mov
fistl
clc
scas
dec
fldl
pop
dec
mov
sbb
rcll
pop
inc
jmp
dec
push
stos
mov
mov
imul
mov
das
lods
sub
iret
lret
mov
out
cmpl
sub
vucomisd
mov
in
cmpsl
inc
repnz
xchg
cmp
lretw
dec
lcall
loope
cltd
mov
inc
lds
push
mov
cli
gs
lea
mov
mov
cmpl
cmp
das
fsubp
push
push
stc
loopne
imul
mov
jne
adc
push
pop
mov
inc
test
sub
mov
fmuls
mov
jmp
sahf
aad
add
adc
je
sbb
in
fbld
movsl
subl
adc
xor
fnstenv
xchg
add
mov
mov
jg
mov
pop
xlat
jecxz
inc
and
pop
sbb
outsb
js
push
lock
cld
add
push
cmp
inc
je
push
in
test
mov
mov
ds
sub
mov
aad
fdivr
sub
dec
test
mov
aad
sbb
mov
dec
fucomi
testb
addr16
fsubrl
sti
data16
push
fadd
mov
push
rolb
mov
or
std
sbb
jle
and
mov
fisubrl
pop
sbb
adc
mov
aam
mov
lds
jo
push
adc
xlat
jnp
hlt
adc
pop
inc
mov
test
push
gs
and
mov
pusha
dec
pushl
inc
inc
xchg
mov
testl
into
jne
jae
iret
cli
jnp
push
negb
in
and
out
std
pop
lock
xchg
jle
es
xor
xor
or
or
xchg
fcomps
xor
xchg
xchg
fidivs
fsubrl
mov
mov
les
sbb
fiadds
das
xor
and
test
cld
dec
mov
pop
xchg
js
dec
cld
je
les
xor
mov
mov
incl
hlt
mov
ds
js
call
jecxz
mov
sbb
adc
mov
xor
jl
mov
push
pop
enter
pop
xchg
arpl
rcl
mov
mov
jns
popa
popa
mov
sbb
jae
mov
lods
lods
dec
jnp
jle
pop
test
popa
xor
test
cmpsb
leave
lret
jae
mov
testl
imul
add
sub
fimull
rorb
sub
xchg
sbb
mov
in
cmpb
xor
pusha
lret
loop
push
pop
jae
push
popf
pop
xchg
adc
rclb
dec
cmpsl
roll
rclb
arpl
cmpsb
inc
mov
adc
fnsave
ret
lock
jl
incl
fidivs
divl
adc
aad
lods
jno
jge
inc
push
mov
aas
mov
lahf
xor
pop
icebp
and
fsts
cmp
mov
dec
ds
std
xor
enter
cmp
cld
lea
add
pushf
lahf
adc
xchg
xor
test
lret
adc
jo
and
add
iret
push
dec
leave
adc
data16
mov
pop
movsl
sbb
and
sub
test
pop
add
out
nop
stos
scas
popa
mov
popa
push
sbb
out
aad
or
pop
or
int
and
int
push
and
xor
icebp
rol
fs
shll
or
rolb
mov
mov
test
stos
dec
js
sbb
addr16
push
and
popf
adcb
mov
push
nop
lods
lret
test
popf
cmp
inc
out
rclb
mov
sbb
xchg
popf
aas
scas
es
and
xchg
frstor
shlb
jne
inc
fdivl
push
pop
dec
add
movsl
lods
lea
cmp
cmpsb
push
aam
xchg
mov
fidivrs
jp
add
jmp
mov
ss
pop
fldenv
push
movsl
and
cwtl
fidivs
adc
and
cmp
pop
outsl
push
scas
lret
mov
dec
or
or
dec
pushf
mov
mov
icebp
ja
or
hlt
cs
test
and
shl
mov
das
sahf
xchg
pop
frstor
xor
scas
push
lea
fwait
sarl
leave
xor
rolb
cwtl
mov
out
call
cmp
mov
les
pop
push
nop
iret
out
xchg
hlt
lret
dec
mov
stc
mov
jne
testb
mov
xorl
jnp
sti
jns
mov
int
xchg
call
pop
adc
jo
test
push
incb
mov
add
sbb
pop
xchg
js
or
add
lret
lods
aad
scas
or
imul
sbb
mov
jl
sbb
hlt
mov
cmpsb
or
mov
into
or
imul
mov
imulb
in
cmc
mov
push
fistps
shr
int
gs
int
cld
mov
das
xchg
das
addr16
inc
xor
lahf
xchg
lds
xor
jecxz
mov
loope
sbb
mov
call
stc
scas
aaa
mov
dec
inc
repz
dec
dec
xchg
movsl
adc
xchg
mov
inc
lds
fimull
es
and
sbbl
xor
les
lock
jno
and
iret
test
mov
jge
rcrb
call
mov
dec
movsb
xadd
cmp
shlb
mov
or
cwtl
dec
popf
std
jbe
cmc
insb
scas
pop
and
or
aam
and
mov
call
addr16
mov
insb
xchg
and
dec
or
xchg
push
es
jl
ds
dec
stos
add
cltd
out
or
aam
pop
in
popf
lds
or
jnp
mov
mov
jo
insl
add
push
dec
jle
mov
mov
div
into
xor
shlb
fwait
mov
fisubrl
test
add
call
pop
ja
subb
sahf
push
adc
or
stos
rep
inc
js
sbb
or
sti
movsb
das
pop
pop
into
push
push
jge
gs
shll
mov
mov
cmpsb
aas
icebp
outsl
movsl
mov
xor
jge
cli
iret
dec
aas
cld
sahf
lods
or
cmp
cmp
mov
sub
int3
in
xor
inc
les
in
mov
inc
fisttps
push
ss
xor
pop
and
jge
mov
jnp
pop
or
shl
movsl
idivb
scas
dec
icebp
test
je
dec
dec
ds
dec
filds
prefetch
jo
inc
sti
shrb
in
xor
push
out
cmp
repnz
add
pop
mov
pop
push
jmp
int
pop
jbe
mov
jge
and
gs
mov
stc
push
mov
xor
mov
mov
test
orl
mov
cmc
pop
fidivrs
or
sub
jmp
lds
lahf
pop
dec
leave
fisubrs
or
push
cmp
in
stos
pop
mov
lods
movsb
cmp
lahf
sbb
aaa
rolb
cltd
add
xchg
insl
sub
into
add
push
out
cmpl
and
test
int
inc
sbb
loopne
sbb
mov
je
idivb
roll
add
out
xor
pop
mov
push
enter
btc
mov
hlt
orl
add
mov
dec
dec
loop
adc
in
xchg
xor
inc
mov
jg
cmp
scas
out
pop
and
push
xchg
adc
jmp
xchg
je
rcrb
xor
add
addr16
out
dec
push
xchg
popf
jl
daa
fsts
enter
not
mov
adc
sub
movsb
lds
int3
repz
imul
hlt
sub
xchg
ret
mov
inc
and
pusha
cmp
outsb
xchg
int
push
mov
dec
mov
out
jg
repnz
movsl
bound
lahf
add
cmp
push
sti
and
out
or
mov
sub
cmc
sahf
pop
adc
push
out
push
mov
mov
rcrw
inc
or
daa
shll
mov
push
pop
push
repz
ja
andl
js
xchg
xchg
fidivrs
push
movsb
pop
or
mov
pop
pop
pop
adc
dec
mov
pop
gs
insl
cmpsl
lahf
or
mov
cltd
or
push
lods
adc
and
out
pop
adc
xor
repz
inc
fisttpll
add
test
xchg
in
and
push
jnp
lcall
js
and
or
pop
stc
add
add
or
out
dec
lods
idivb
jae
xchg
or
into
rolb
cmpsl
xchg
inc
cmp
incb
xchg
push
lds
push
cmp
jns
rol
movsl
fisttpl
out
aaa
bound
dec
adc
mov
loopne
push
xchg
pusha
sub
sbb
sub
nop
push
adc
imull
sub
mov
test
dec
xchg
addl
mov
adc
adc
imul
or
popa
mov
mov
shll
cmp
or
dec
mov
lahf
cmc
movsb
push
fwait
mov
cmp
fisubl
into
mov
cld
ja
das
mov
stos
jge
sbb
and
jbe
xor
neg
cmc
adc
pop
scas
ss
and
in
mov
aaa
fstpt
pushf
js
xchg
cmp
xor
or
repnz
push
cmpl
shrl
clc
fisttpll
jge
adc
xor
jp
push
scas
mov
in
iret
test
cmpsl
lods
hlt
mov
lahf
scas
xchg
jo
sub
cmp
cmp
inc
js
push
dec
lock
dec
mov
imul
cmp
pop
xor
push
xchg
mov
imul
push
out
cmp
call
lock
bound
stos
pop
loop
cmpsb
jnp
popa
icebp
jae
push
xlat
add
lret
out
clc
mov
movsb
push
insb
nop
xor
inc
xchg
mov
jge
mov
or
or
pop
mov
dec
fstl
xchg
add
pop
jno
loope
out
mov
push
or
jnp
push
lcall
fsubr
and
in
mov
pop
in
cmpsb
cmp
movsb
call
xor
int3
pop
inc
xchg
aaa
or
imul
es
push
pop
lea
mov
lock
lcall
xchg
xchg
cmp
push
and
imul
mov
stc
and
add
cs
mov
inc
into
dec
out
jnp
add
test
popf
adc
lea
push
jp
push
sub
outsl
push
push
jno
movb
lea
inc
mov
pop
cmp
push
xor
jne
pusha
fstps
mov
sbb
test
fldl
and
cmpsl
cli
xor
xlat
xchg
xor
mov
push
movl
sub
pop
pop
mov
push
test
std
out
ds
mov
lock
leave
inc
cmpsb
push
arpl
mov
sbb
cmp
lods
mov
xor
jp
stos
fstps
arpl
sub
sbb
aad
enter
hlt
stc
sbb
nop
popa
sti
subl
decl
scas
xchg
pop
dec
leave
push
mov
sbb
xor
aaa
stc
ficoms
inc
dec
cmp
inc
andl
mov
std
cmc
outsl
lahf
into
mov
jbe
jecxz
leave
pusha
xorl
cmp
push
mov
stc
mov
dec
loopne
cmpsl
lcall
je
fcompl
adc
mov
cmp
adc
loop
and
push
outsl
cli
in
rcl
je
fcmovb
jne
dec
out
bound
xchg
iret
fmull
ljmp
dec
imull
aad
nop
push
jp
enter
push
pop
rcrb
fisubs
jmp
inc
push
jns
jge
shrl
popf
mov
cld
pop
mov
jmp
push
push
pop
js
pop
jo
xor
mov
cmp
dec
jecxz
cmpsb
jmp
fidivs
shll
in
add
sub
cltd
mov
insl
sub
repz
jecxz
cmp
sti
mov
sbb
and
out
scas
inc
fnstsw
pop
xchg
out
das
in
leave
push
dec
loop
fdivrl
push
ds
cmc
xor
imul
push
inc
pop
or
stos
jp
rcr
or
mov
xchg
out
sbb
cmp
ret
xchg
cmp
sub
fbstp
mov
movsb
sbb
insb
dec
and
sub
inc
and
mov
mov
jo
es
or
cmp
pop
xor
cli
adc
mov
dec
loopne
add
push
jbe
inc
ret
xor
pop
scas
xchg
lea
mov
mov
out
mov
jae
icebp
mov
jbe
outsl
div
roll
inc
daa
std
lcall
stos
adc
or
cltd
ja
pop
sub
xor
lret
and
and
js
cli
sbb
in
std
in
adc
adc
pop
sub
ss
into
sbb
adc
cmpsb
cld
mov
pusha
dec
fdivl
mov
sbb
jae
sbb
jb
inc
pusha
lods
pop
mov
jns
mov
mov
shll
mov
icebp
push
scas
out
cli
loop
dec
mov
jmp
daa
add
out
sti
rorl
adc
rorb
in
mov
or
lods
xchg
fstl
sbb
cmp
movsl
popf
stos
xchg
push
ficoms
or
or
pushf
inc
pop
dec
mov
movsl
test
pop
jno
adc
pop
push
xlat
adc
shr
sbb
dec
mov
xchg
mov
sarl
xchg
mov
dec
fidivrl
or
scas
xor
push
sbb
mov
sub
sarb
push
dec
iret
push
inc
adcl
push
jl
cmp
push
push
imul
jae
addr16
int
and
pop
test
rorb
movsb
jns
and
sbb
xor
mov
and
pushf
xchg
in
cmp
popa
es
inc
call
cmp
subl
and
jl
xor
mov
or
xor
movsb
sub
ljmp
mov
cmp
loope
aam
int3
insb
mov
rcll
fisttpl
in
loope
add
push
mov
orb
inc
dec
push
mov
inc
lcall
fwait
mov
pop
adc
inc
cltd
push
push
clc
mov
and
into
std
push
push
das
pushf
push
mov
mov
cld
in
pop
clc
js
jle
repnz
stc
jmp
mov
test
mov
in
fisubl
mov
cmc
jle
mov
or
hlt
push
sub
cs
int3
repnz
lret
sub
push
repz
je
icebp
sub
mov
nop
lds
mov
pop
lds
jo
fwait
repnz
in
push
cltd
inc
push
or
out
test
jmp
sbb
and
jns
dec
and
cmp
push
scas
jp
popl
jge
mov
pusha
sub
sbb
js
or
fs
xor
sbb
mov
mov
sub
insb
adc
mov
jne
mov
pop
sbb
mov
xor
cmc
inc
dec
mov
icebp
dec
jns
lods
pop
xorl
mov
jle
pusha
sahf
cmp
adc
test
mov
test
insb
movsl
lds
iret
outsb
les
add
pop
ror
sub
xchg
mov
daa
loope
mov
sbb
mov
loop
mov
dec
arpl
adc
rcrl
mov
sbb
js
sub
xchg
push
testb
jbe
std
or
jmp
sbb
mov
dec
fbstp
leave
aaa
add
mov
inc
push
or
fmuls
fistpll
orb
ljmp
mov
fistl
sub
mov
adc
ljmp
push
test
sbb
in
nop
jo
mull
pop
test
sahf
fcmovne
shlb
scas
arpl
insl
ds
sti
mov
pop
push
cmpsl
cmpsb
in
pop
iret
add
mov
loopne
push
dec
pop
lods
push
lcall
popf
add
jo
xchg
insb
jb
mov
adcl
cs
inc
out
mov
mov
out
fs
cli
movsb
mov
out
pop
add
add
xlat
mov
pop
std
xchg
and
jnp
lock
push
mov
sahf
lods
push
lock
mov
arpl
jg
jp
xlat
jb
cwtl
dec
pusha
dec
test
sbb
push
ret
add
inc
fwait
inc
xchg
and
imul
cli
ds
mov
cmp
adc
jg
xor
aaa
in
ret
inc
stc
inc
scas
sbb
pusha
add
adc
jb
jb
jle
adc
scas
push
test
and
xor
outsl
push
inc
cmp
es
cmp
les
and
lods
fs
adc
mov
nop
pop
pop
xor
in
adc
in
mov
xor
in
mov
fimull
cmc
fisubs
adc
in
or
jae
adc
sti
and
cmp
xor
repnz
or
dec
sar
insl
enter
inc
jecxz
mov
xchg
adc
sahf
test
dec
push
pop
sbb
pop
mov
push
xchg
or
inc
icebp
shr
and
xchg
mov
fisttpll
into
xlat
cld
in
push
cmp
lret
push
xchg
sbb
xchg
push
add
jg
cmp
addl
lea
daa
sub
xor
jo
jl
leave
test
and
pop
sbb
test
add
mov
push
xchg
xchg
mov
cmpsb
adc
push
ret
jno
and
mov
jmp
jb
xlat
pusha
roll
sbb
les
data16
ljmp
sbb
mov
xchg
jno
or
stos
and
pop
scas
sti
fwait
stc
and
mull
out
shll
xor
pop
in
insl
ficoms
negl
mov
pop
enter
jp
shll
ja
cwtl
and
in
xor
pushf
push
fistps
sbb
add
dec
push
mov
xchg
jg
roll
cmp
mov
icebp
xor
pop
xor
fmull
inc
ja
adc
je
jle
cmp
mov
repnz
sbb
gs
sub
xor
or
loopne
mov
jmp
mov
jg
test
add
jns
mov
cmp
shrl
cmc
stc
push
jo
pop
lahf
imul
data16
dec
paddusb
xchg
jbe
fwait
mov
push
mov
arpl
dec
cwtl
cmp
push
pusha
add
outsl
jmp
sti
int3
jl
in
cld
ret
std
idivl
sub
push
fstps
mov
es
adc
sti
in
and
push
outsl
sub
and
lods
xchg
test
movups
in
cmp
mov
cmpsl
int
fdiv
movsl
fcmovu
dec
shl
sti
addr16
sti
call
inc
aas
pop
fs
popf
and
das
je
dec
pop
xor
xchg
or
cli
lods
ret
ficoml
out
adc
xlat
icebp
pop
out
jmp
mov
outsb
push
sub
ffreep
pop
add
lahf
pop
popa
scas
test
sub
repnz
sub
push
fdivs
push
addr16
lcall
pop
push
and
in
cmc
cld
inc
jle
cmp
sbb
cs
dec
sbb
fcoms
movsb
into
mov
adc
pushl
enter
call
rcrb
out
xor
adc
jg
lea
data16
into
stc
insl
xor
arpl
lcall
fldenv
out
push
stos
push
mov
mov
jb
xor
inc
inc
add
sbbb
dec
xor
int3
pop
fcmovnu
xchg
mov
pop
jp
push
dec
je
fbld
push
arpl
push
pop
pop
sbb
insb
daa
cs
mov
jne
bound
cs
stos
xlat
sbbl
or
or
and
lahf
add
loope
pavgw
jo
aam
xchg
push
cmp
cmp
aad
movsl
out
xchg
mov
adc
mov
lods
mov
xchg
das
roll
icebp
mov
or
pop
imulb
xchg
cli
xchg
sub
in
fcmovnbe
outsl
push
ret
mov
sarl
repnz
inc
test
cmpsl
jmp
into
sbb
push
sub
jl
ret
adc
out
sbbl
sub
or
insl
movsl
test
jb
lret
xchg
dec
jnp
jp
out
xchg
inc
loope
cmpsb
sub
mov
rcrb
mov
mov
arpl
sbb
inc
mov
enter
popa
mov
addr16
inc
aas
cmp
lods
repnz
dec
mov
push
test
sarl
sbb
imul
test
mov
loopne
int
aaa
cmpsl
xchg
cli
test
mov
mov
xchg
mov
inc
pop
inc
push
sub
pop
mov
sbb
stc
mov
sahf
in
xchg
and
fxam
into
adc
xor
xor
lea
mov
push
sbb
or
hlt
xchg
xchg
in
stos
mov
cmp
inc
imul
lcall
pop
sub
movsl
mov
gs
enter
rcl
push
sbb
insb
push
ss
not
or
hlt
imull
jne
adc
ffree
mov
pop
leave
mov
addr16
mov
push
add
mov
mov
push
flds
lea
push
ds
jp
inc
call
stos
lahf
and
mov
adc
aas
xchg
pop
pusha
inc
sub
out
lcall
arpl
sahf
push
stos
mov
mov
test
loop
data16
in
rolb
inc
push
sti
fidivl
mov
stos
jle
mov
pop
xor
jge
lock
rcrl
mov
ret
iretw
ja
out
scas
arpl
loopne
add
fsubp
cmp
dec
ja
ljmp
pop
test
and
inc
popf
sub
mov
lret
out
stos
inc
pop
xor
sti
mov
push
xchg
adc
int3
leave
test
cmp
fnstsw
shlb
mov
daa
fildll
je
mov
addl
lods
cmp
out
daa
adc
adc
sbb
sub
fstps
adc
aad
dec
outsb
sub
out
cs
dec
cmp
jo
cmpb
gs
adc
dec
fs
pusha
mov
xor
aaa
cwtl
push
inc
insb
insb
lahf
add
pop
daa
cltd
xchg
xor
jne
sbb
test
push
addb
adc
cmpsl
mov
stos
push
sub
push
fidivs
adc
notl
and
repz
scas
xchg
ror
push
sub
or
mov
psubw
or
mov
jno
jo
std
or
jmp
push
cli
mov
mov
xor
add
pop
call
mov
fsubrs
fstp
xlat
bound
divl
mov
inc
jne
movsb
ja
cmp
add
and
push
outsb
loopne
repz
mov
xlat
popf
leave
jg
xchg
clc
mov
pop
aam
push
aas
cmpsb
lea
shll
mov
adc
cmp
rcrb
scas
out
add
cmp
scas
movl
fbstp
sbb
mov
mov
aam
mov
mov
pop
fisubs
adc
popa
jne
outsl
mov
stos
roll
js
aaa
xor
pop
inc
shrl
lods
jmp
mov
stos
push
into
pop
shll
add
cli
mov
fsubr
cli
push
push
in
mov
and
loope
xlat
fisttpl
and
ja
jecxz
scas
icebp
add
outsl
bound
mov
jb
xor
cmpsb
dec
cs
sti
repz
push
int3
lahf
push
xor
dec
dec
mov
cs
sbb
cltd
and
add
add
jae
enter
push
stc
int
je
outsl
add
mov
dec
push
test
jl
and
loopne
sbb
nop
sub
dec
imul
dec
xor
sub
and
pushf
out
pop
pop
clc
out
sub
lock
inc
adc
and
adc
rcll
in
push
sarb
test
or
sbb
push
movsl
jne
hlt
xchg
dec
in
pop
cli
fisubl
xorb
dec
inc
rcrb
movsl
je
data16
add
xor
out
pop
jp
cmp
dec
push
jo
lcall
adc
sub
cmpsl
pop
and
call
mov
add
movsl
xchg
scas
push
sub
cmp
add
jno
mov
aam
adc
or
adc
daa
cltd
xchg
das
ds
jnp
mov
push
xchg
test
push
js
pop
gs
push
test
lds
xchg
ja
push
or
sub
push
sbbl
adc
mov
inc
xchg
jae
in
or
sbb
movsb
and
iret
sahf
or
push
sub
fsubrs
xor
out
shlb
xor
cmp
mov
je
xor
jg
pop
fsubl
mov
dec
cld
xchg
mov
std
add
popa
fs
mov
mov
addr16
adc
mov
xor
cmpsb
xor
xor
push
and
sarb
ja
rorb
lahf
insl
nop
and
pop
adc
popl
adc
cmp
movsl
fisttpll
lret
and
xchg
mov
repz
jge
and
inc
xchg
rcl
xchg
mov
xchg
mov
jno
push
jg
int
icebp
pusha
or
mov
aad
lahf
mov
xor
je
sub
psllw
ficomps
push
stc
repz
fdivr
popa
sub
out
sub
es
push
push
pop
adc
sub
iret
cwtl
and
aad
mov
sub
div
or
leave
push
in
test
ret
xorb
jg
mov
add
enter
mov
cmp
mov
fwait
ss
insb
mov
sbb
inc
fcmovu
sar
jne
cmp
xchg
dec
push
sub
jne
push
movsl
repnz
jmp
popf
rorb
jmp
mov
push
scas
xlat
shlb
pop
lret
lret
call
js
mov
pop
add
popf
stc
mov
jnp
sub
mov
jnp
mov
push
daa
jl
adc
xorb
in
and
mov
jnp
cs
mov
pop
sub
outsb
daa
pop
adc
lret
xchg
xor
push
ss
jo
enter
xchg
shlb
lds
mov
pop
leave
jnp
gs
fmuls
loopne
jge
movsb
push
stos
and
dec
push
out
pusha
and
push
push
jl
mov
push
in
push
sbb
in
jl
enter
dec
lcall
and
pop
push
jmp
mov
popa
leave
adc
add
stc
mov
pop
sahf
hlt
push
fnstcw
pushf
rclb
mov
push
aaa
mov
sbb
cs
mov
adc
cli
sbb
in
std
mov
aaa
test
out
aaa
cmc
dec
scas
dec
or
popf
out
sub
lock
mov
sbb
sbb
sti
push
pop
and
dec
nop
aad
push
loope
mov
sti
or
cli
push
cmc
push
popf
rorl
inc
ljmp
clc
addr16
xchg
in
in
jns
clc
adcb
nop
int
test
or
fldl
sbb
push
call
sar
icebp
je
aas
fisttpl
or
xchg
ja,pn
sbb
aaa
mov
push
cmpsl
inc
xor
and
ret
and
sbb
aam
and
push
mov
outsl
add
sub
rolb
xor
jo
outsb
notl
xchg
xchg
jge
sub
inc
push
add
outsb
out
bound
adcb
mov
aam
in
or
sub
jns
in
sub
call
push
out
sbb
cli
jmp
cmp
mov
cs
scas
std
and
mov
in
or
test
lret
mov
je
sbb
imul
sub
xlat
dec
inc
imul
xchg
or
jno
jl
xchg
std
jb
icebp
cmp
xor
inc
xor
cmp
jb
int3
pusha
je
rcrb
fldl
and
add
inc
rcrl
stc
inc
into
or
pop
push
int
movsb
or
cmc
mov
or
add
pop
mov
cmp
rcrb
mov
mov
sbb
pusha
adc
mov
call
aas
lea
icebp
outsl
dec
mov
idiv
stos
mov
call
fisubrs
dec
mov
mov
mov
xchg
pop
insb
jge
rcrl
xchg
ljmp
loopnew
daa
nop
adc
ss
push
xchg
add
rorl
loope
pop
lret
lds
fcompl
or
lahf
dec
leave
pushf
sbb
movb
pop
sbb
mov
mov
outsb
int3
or
shlb
dec
cwtl
jle
sbb
ss
cmpsb
adc
fdiv
push
pop
orl
dec
inc
cmpsb
in
loope
sbb
int3
repnz
xor
cs
mov
movsl
gs
dec
stc
push
cmp
cmc
sub
push
cmp
xor
outsl
addr16
inc
aas
cmpsl
mov
xchg
aaa
inc
adc
lock
or
imul
push
js
cmp
fidivrl
stc
xchg
pop
and
mov
lods
insb
xor
icebp
imull
mov
dec
and
xchg
mov
bound
jle
inc
dec
jmp
sub
data16
ret
cmpsl
dec
in
pop
or
das
push
dec
incb
fiadds
add
gs
aad
add
xlat
dec
push
xor
xchg
movsb
xchg
js
lods
cwtl
cmp
loopne
inc
cmp
stc
movsl
test
push
fwait
or
push
je
inc
xchg
out
and
sahf
aam
lock
mov
dec
mov
into
xchg
pop
imul
lret
hlt
push
movsl
push
add
pushf
int3
sbb
adc
in
test
add
sub
mov
xchg
fcomip
into
cwtl
enter
and
inc
add
pop
mov
push
sub
les
cmp
out
inc
mov
aas
outsb
or
mull
xor
pop
dec
inc
lds
cli
fmull
and
jl
mov
jmp
lcall
out
cld
fildll
mov
xchg
mov
jp
xchg
jmp
pop
lahf
adc
and
cli
mov
mov
insb
cmpsb
sbb
pop
mov
ret
sbb
and
into
inc
cmp
mov
xchg
repnz
loop
pop
xchg
mov
mov
jns
mov
mov
or
adc
push
repnz
jmp
es
add
ret
lds
notb
lcall
loope
push
cli
cmpsl
dec
dec
aaa
in
data16
je
adc
adcl
aam
push
mov
or
cmpsl
fildl
ss
sbb
sub
test
pop
repz
sbb
fcomi
push
mov
push
jne
push
rcll
out
push
and
and
mov
jo
or
sub
adc
push
xchg
jb
sub
aaa
cmp
ret
sbb
stos
xor
cmp
mov
jmp
mov
imul
fcmovbe
xchg
mov
loop
aas
fld
jne
ljmp
scas
or
fs
rcll
jb
popf
stos
vpor
lods
jmp
adc
mov
divb
insb
in
cmp
add
movsb
out
add
ret
lahf
mov
inc
rol
call
push
sbb
xchg
inc
loopne
sub
ds
movsb
or
out
clc
xorb
add
inc
add
sbb
movsb
push
out
push
outsl
pushf
mov
xchg
xchg
xchg
sub
in
or
push
adcb
jl
out
jae
mov
jle
pop
mov
int3
push
xchg
data16
das
dec
cmp
mov
push
pop
add
and
push
cmpsb
repnz
inc
cs
fmull
test
hlt
jnp
cmp
shll
add
stos
xor
add
loop
mov
mov
add
or
test
xor
dec
jnp
sbb
fidivrs
fsubl
fisttpl
push
and
cs
ficompl
push
and
int
iret
imul
ljmp
pop
loopne
pop
jg
lret
or
fisubrs
mov
push
adc
in
dec
orb
cmp
add
sbb
or
rolb
cmp
jmp
add
jecxz
mov
adc
insl
mov
mov
and
iret
sahf
popa
push
leave
push
xchg
mov
dec
mov
sbb
arpl
adc
aas
xor
fidivrl
cmp
out
idivb
stc
pand
mov
lods
xchg
sub
lcall
fistl
roll
mov
add
push
gs
shrl
mov
dec
repnz
mov
ss
jnp
fwait
mov
icebp
or
jb
adcb
sar
sbb
cmp
jb
pushf
repz
pop
cltd
add
pusha
xchg
xor
dec
adc
loop
test
mov
rolb
adc
pop
das
popf
dec
js
or
jge
stc
cmp
fidivrs
movsl
ds
cmp
aaa
xor
xchg
call
push
in
outsl
jae
stos
lret
subl
jae
jp
and
mov
cli
inc
aad
daa
mov
addr16
mov
outsl
or
scas
jp
in
sub
rcr
mov
ret
push
mov
das
inc
add
pusha
mov
int
jmp
lods
cwtl
inc
pop
out
das
mov
lahf
jp
jnp
xchg
cmp
inc
repz
adc
lret
ljmp
mov
or
cwtl
xor
ss
cli
and
cwtl
jno
push
xchg
and
push
and
sub
inc
daa
lods
clc
xor
sub
jg
movsb
or
jns
in
xchg
sbb
mov
dec
icebp
arpl
xchg
pop
xchg
adcl
and
jo
push
in
jmp
js
mov
adc
xchg
shlb
or
sub
out
sub
or
add
cmp
pushf
std
cli
push
imul
enter
icebp
adc
xchg
nop
pushf
push
pop
daa
mov
in
push
mov
or
mov
sbbb
jnp
cmc
in
lea
mov
lock
push
sub
pop
fidivrs
xchg
push
xchg
jbe
stos
ret
or
clc
lock
pushf
inc
or
or
test
xor
popa
push
movsl
push
repz
mov
aaa
mov
dec
xchg
jbe
arpl
sub
lods
mov
orl
sarb
push
cmpsb
add
jbe
mov
mov
icebp
cmpsl
imul
loop
mov
xor
loope
je
jp
inc
imull
popa
in
leave
xchg
cld
and
out
rclb
out
or
inc
loope
faddl
pop
mov
call
lahf
push
das
dec
jle
and
call
xchg
insb
or
cmp
inc
sub
pop
dec
rorl
mov
jbe
inc
or
xchg
nop
jne
mov
fnstenv
sbb
inc
xchg
test
call
scas
and
push
mov
jmp
xchg
push
insl
out
shrb
jno
sbb
pusha
andl
in
jmp
xor
ss
and
pop
sbb
mov
pop
mov
jbe
and
mov
dec
test
pop
jecxz
push
push
dec
inc
sub
jmp
fcmovnbe
xchg
fnstcw
cs
test
cmpsl
outsb
push
cwtl
imul
ja
lods
jge
fdecstp
cwtl
pop
aam
xor
push
or
loop
jmp
sub
jmp
sbb
push
dec
sti
jge
fsubl
sub
jg
rolb
or
push
cltd
mov
fwait
jo
repnz
out
dec
repz
rcrl
cmc
push
enter
adc
fsub
or
xchg
push
sbb
sub
xor
cmp
push
and
test
xor
or
sbb
inc
ret
jne
jl
rcrl
aad
in
jmp
mov
mov
mov
mov
dec
in
sbb
mov
std
js
fstps
test
ret
mov
daa
test
or
jne
mov
pop
cld
and
ja
mov
leave
push
adc
push
and
aad
cmc
fdivl
jb
cmpb
loope
es
jmp
nop
ds
push
xchg
jle
out
stc
mov
xchg
mov
and
cli
inc
test
adc
dec
arpl
lock
fiaddl
mov
call
sahf
push
pop
xchg
cmp
mov
rolb
sub
xor
ja
add
mov
inc
xchg
insl
int3
mov
lock
js
cld
xchg
push
mov
xchg
inc
aam
xor
xchg
sti
std
xchg
sbbb
push
inc
jge
iret
xor
and
stc
ss
call
sbb
push
stos
push
repz
popa
pop
lock
repnz
bound
imul
add
sub
mov
shlb
mov
movsl
call
dec
xor
mov
in
xchg
ja
int
test
outsl
jnp
push
sbb
lea
xchg
shl
sub
sbb
movsb
cmp
or
dec
les
sbb
jge
push
push
sti
push
push
pop
xchg
cld
push
or
sbb
shrl
inc
push
into
jmp
mov
jge
cmp
cltd
jae
sub
inc
mov
cmp
fcompl
xchg
cmpl
bound
adc
shrl
scas
push
dec
repz
in
loop
jnp
or
popa
and
testb
add
lock
xchg
icebp
stos
iret
dec
ret
aas
sbb
xchg
cmp
nop
testb
xor
push
cmp
mov
shll
scas
das
int
lock
daa
vorps
sub
hlt
pop
fwait
pushf
mov
jno
lds
into
sub
or
push
call
push
xchg
dec
adc
sub
sbb
fimuls
loop
mov
push
mov
andb
jg
fsubl
and
xorl
inc
mov
cmp
mov
add
cltd
imul
ret
pop
jbe
jl
mov
inc
inc
mov
scas
cmp
cld
mov
movsb
mov
cmp
inc
cli
pusha
xchg
mov
xlat
xchg
cli
pop
loope
mov
ret
repz
test
jl
xchg
popf
aad
inc
in
xchg
dec
xchg
cmpsl
lock
sbb
mov
rorl
loope
xchg
mov
pusha
mov
mov
scas
add
inc
add
cltd
lcall
push
cmp
jmp
mov
and
xchg
call
sbb
loope
mov
push
add
xchg
into
jp
pop
and
adc
dec
and
insl
pop
cmp
and
mov
push
shr
lahf
jg
aam
pop
mov
je
pop
ficompl
push
push
ljmp
loopne
std
pusha
icebp
bound
cmp
mov
cld
rclb
cmp
pop
aaa
inc
push
mov
or
fisttpll
mov
das
sti
jb
pop
fwait
jmp
sub
lods
cmpsl
outsb
fs
sti
jp
clc
sub
or
fwait
repz
mov
adc
movsl
push
add
push
mov
push
push
mov
loop
lock
or
or
sub
iret
xchg
mov
int3
pop
stc
movsl
or
jmp
stos
fcmovnbe
mov
pop
mov
pop
pop
mov
sub
fidivl
test
lods
or
add
sbb
xchg
pop
clc
mov
mov
mov
sbb
int3
add
int
mov
xchg
xor
xor
sub
mov
push
and
loopne
push
and
sub
and
js
xchg
xchg
loopne
jl
xchg
jecxz
and
sbb
fs
test
lock
and
mov
pushf
hlt
mov
xchg
jecxz
xor
loope
mov
sub
enter
test
push
mov
rcrb
shll
cmp
pop
mov
popf
inc
lea
jne
imul
or
mov
aas
push
mov
jecxz
loopne
push
mov
jb
inc
jb
movsl
sbb
adc
sbb
push
out
outsl
lods
rclb
cmp
push
jp
shr
enter
cmp
jns
gs
sti
dec
adc
faddl
repz
push
mul
popf
fsts
cmc
and
and
inc
jl
jbe
push
inc
cs
mov
fs
out
and
loopne
xor
gs
rcr
cs
mov
add
dec
or
mov
lahf
popa
jb
push
cltd
sahf
shlb
inc
cld
or
jnp
dec
jb
pop
out
mov
mov
cmp
lahf
pop
int3
cld
jmp
outsl
mov
cmp
adc
xor
stc
das
inc
lods
mov
repz
and
jo
icebp
mov
push
pop
cmp
in
std
lock
test
push
push
add
or
adc
mov
xchg
add
cmpsl
mov
outsb
shrb
xchg
inc
pusha
int
jne
adc
dec
loop
jno
push
aad
or
cwtl
aaa
dec
rcll
pop
xchg
jb
cs
inc
fbld
mov
negl
jnp
outsl
test
ljmp
loopne
lods
aad
stc
stc
adc
jnp
mov
fdivs
nop
inc
or
inc
dec
adc
adc
adc
daa
movsl
jae
xchg
dec
idivl
push
imul
pop
add
or
or
shll
sbb
insl
xchg
aaa
lahf
cmpsb
daa
mov
lahf
or
stc
push
mov
ds
sarl
je
loope
xchg
mov
faddl
cmc
repnz
xor
popa
pop
push
and
cmp
xchg
inc
imul
add
roll
inc
pop
jmp
je
movsl
fucom
rol
bound
cmp
mov
mov
inc
lods
xchg
sbb
and
xor
xchg
dec
sbb
xchg
dec
sub
add
popa
movsb
mov
dec
adc
js
jecxz
push
out
add
daa
fsubp
pop
daa
movsb
sub
pop
jb
inc
sub
jbe
icebp
cld
sbb
jmp
cmp
mov
jmp
cmp
cmp
dec
jp
shlb
sub
sbb
movsl
push
lock
inc
gs
cld
insl
clc
jns
jno
xor
xor
jle
in
jge
cwtl
sbb
mov
pop
or
in
addr16
add
pushf
inc
ret
sarl
sahf
int
movsl
sbb
mov
mov
sub
jge
xchg
or
inc
mov
mov
outsb
clc
xchg
and
orb
aam
fstpl
out
jne
xchg
loopne
xor
push
mov
or
mov
enter
and
mov
fsubl
pop
clc
push
in
cs
mov
dec
push
shrb
sahf
cs
push
stos
sti
fstpl
cmc
movsb
and
cmp
ss
test
dec
mov
mov
js
mov
sub
sbb
stos
aas
and
in
jns
repnz
repnz
xchg
dec
xchg
in
jb
push
sub
push
jne
aaa
sub
clc
xchg
movsl
sbb
movsl
subl
out
sub
sub
adc
mov
mov
into
inc
js
mov
arpl
mov
fucompp
arpl
cmc
out
jp
pop
mov
pop
adc
mov
lds
xchg
insl
sbbb
cmp
push
push
out
jp
push
fdivl
or
adc
push
das
xor
jno
mov
and
es
fwait
pusha
lea
bound
fistl
adc
call
and
shlb
mov
imul
mov
fsubrs
xchg
les
pop
aaa
arpl
je
adc
mov
sbb
rorb
sti
mov
int
xchg
outsb
idivl
mov
enter
xchg
cmpsl
ljmp
ret
dec
xor
add
divl
jecxz
sahf
fs
testb
xchg
jg
shlb
or
mov
mov
pop
lret
ret
mov
sbb
gs
daa
ljmp
mov
mov
stc
push
and
jge
inc
out
push
or
imul
jle
push
push
inc
fsubrl
cld
fldt
in
fs
ss
fnsave
sahf
or
popf
xchg
testb
es
adc
jg
outsl
daa
and
mov
dec
xchg
imul
mov
test
cmp
mov
xchg
or
in
mov
imul
stos
inc
cmp
push
mov
mov
into
push
mov
jl
xor
lock
jl
mov
popa
pop
dec
inc
inc
inc
and
lahf
das
repnz
dec
stc
out
test
popa
fidivs
shr
cmp
ljmp
js
jno
fildl
loope
sub
mov
orb
test
ss
jb
and
cmp
jl
into
cmpxchg
pop
cmpsl
cld
mov
push
add
insl
mov
mov
add
pop
outsl
in
rorl
imul
loopne
sarl
sub
out
sahf
gs
or
fs
mov
pop
adcl
jmp
or
sbb
mov
xlat
scas
push
stc
jge
aam
fsubl
add
pop
or
inc
xchg
lea
ljmp
jl
add
fldcw
mov
stos
cmp
jns
cmp
movsb
testl
pop
push
ret
mov
push
mov
idivl
sbb
cmpsb
ret
and
pop
adc
std
jbe
mov
inc
dec
or
add
shlb
movsb
xor
or
jecxz
push
ffree
stos
and
icebp
dec
add
loopne
xor
cmp
push
cwtl
repz
dec
nop
and
xchg
les
sub
jmp
push
out
add
mov
leave
orl
add
mov
std
cltd
xchg
mov
push
push
cmp
and
pop
mov
in
push
add
ja
mov
and
sbb
pop
stos
cs
clc
int
dec
inc
jb
inc
lcall
xchg
mov
lods
mov
pop
cltd
and
fwait
int3
ret
cmp
mov
icebp
adc
xor
add
adcb
mov
sbb
lcall
fisubrl
sti
inc
insl
ret
mov
and
test
fstpt
push
aas
pop
icebp
and
mov
loopne
inc
imul
jmp
bound
repz
and
add
cmpsl
jg
fdivl
mov
lds
or
sbb
mov
cmp
ret
xor
stos
dec
aaa
les
or
sti
lcall
fmul
je
arpl
imul
adc
xchg
movsb
loope
cmpb
fstl
scas
movsl
inc
mov
add
lds
das
pop
ljmp
add
pop
movsl
outsl
pop
or
push
fdiv
ja
shlb
test
sub
negl
sbb
mov
sub
aas
sbb
std
mov
mov
xchg
fimuls
mov
adc
dec
movsb
into
sbb
lods
ss
test
pop
pop
or
or
lret
fwait
mov
pop
mov
jb
out
pop
mov
dec
shrb
iret
mov
mov
shll
std
pop
mov
dec
scas
icebp
out
pop
fimuls
popf
jl
cs
inc
js
imul
push
test
jns
repnz
cltd
push
mov
mov
cmp
imul
scas
xchg
push
jb
lock
mov
jbe
mov
fcoms
loopne
mov
insl
inc
in
loope
mov
clc
or
dec
lock
sbb
mov
pop
add
clc
adc
mov
rcll
dec
bound
in
ds
fisttpll
mov
jle
jp
aad
addl
aad
test
fdivs
mov
inc
xchg
mov
push
xchg
sbb
inc
adc
test
jge
adc
mov
pop
xor
and
inc
push
pop
mov
push
sub
xorl
pop
scas
xchg
imull
ror
enter
pop
repnz
sbb
pushf
mov
xor
push
sbb
popf
jl
iret
aam
cmp
sub
arpl
xor
test
sbbb
lret
mov
fadds
xchg
jecxz
xor
movsw
test
sarb
mov
sbb
cmc
test
mov
xchg
pop
sub
aam
push
mov
mov
xor
fstpl
xchg
adc
dec
es
cmpsl
pop
xchg
lock
ret
sbb
repz
adc
jae
sub
sub
sarl
testl
aas
cmp
sbb
mov
insb
jb
ja
mov
jnp
xchg
inc
pop
sbbb
ljmp
imul
in
cmpsl
dec
mov
xor
sbb
aam
xchg
cmp
xor
jbe
jle
das
jecxz
int3
cmp
dec
xchg
gs
xor
in
sub
mov
mov
pop
sbb
testb
fstpl
add
mov
push
addr16
xchg
xor
and
int
mov
sahf
gs
mov
push
jo
pop
nop
add
mov
cli
orl
and
cmp
sarb
pop
pop
pusha
wbinvd
push
loope
aaa
or
pop
xchg
sbb
addr16
pop
mov
push
loop
lcall
movsb
sub
mov
pop
mov
ret
lods
mov
sbb
and
mov
hlt
cmp
add
scas
or
mov
fsubrl
adc
pop
or
shll
out
out
push
xor
into
mov
pushf
and
loop
or
push
xor
jne
pop
inc
adc
cld
cmp
cmpsl
xchg
jno
cmp
dec
xor
mov
jo
les
ljmp
or
test
jmp
cs
aam
jnp
out
cmp
lahf
sti
pop
xchg
jnp
sub
push
and
stos
aaa
dec
sbb
xchg
mov
out
rolb
jg
sub
ljmp
xor
lahf
push
push
adc
jg
cmp
js
mov
inc
or
ljmp
scas
jo
call
cmp
aas
test
jnp
pop
jns
leave
push
fucomip
adc
sub
sub
pop
xchg
or
mov
add
rorb
popf
cli
adc
lds
enter
fistps
jno
popa
sub
sbb
and
loope
movsb
xchg
fdivr
fsub
cwtl
stc
test
repz
loop
cs
adc
stc
addr16
mov
iret
mov
pop
pusha
outsb
push
loopne
jb
xchg
lds
cmpsb
jae
jo
lods
xchg
stos
sub
sub
dec
stos
repnz
leave
push
in
jnp
lods
jns
lret
adc
mov
inc
xor
mov
mov
mov
mov
mov
pop
lock
jnp
addr16
ficomps
pop
ds
enter
add
inc
ja
sbb
jmp
and
sub
push
push
lret
mov
jle
xchg
cltd
cmp
pop
pushl
into
fsin
sbb
mov
loope
scas
jp
or
lods
cwtl
pusha
or
into
xor
idivl
push
sbb
sub
sbb
jle
cld
pop
jae
mov
mov
cmp
and
or
lds
into
mov
push
std
loopne
fnstenv
fildll
adc
pusha
xchg
add
sub
dec
and
or
mov
test
mov
pop
mov
out
sub
pop
lret
jne
stc
movsb
fnstsw
mov
mov
js
cli
add
repnz
lahf
push
fildll
cld
cld
ljmp
mov
out
mov
xor
add
mov
fnsave
jbe
call
xchg
cmp
and
mov
xchg
dec
ret
movl
jle
scas
jg
cmp
call
ss
scas
repnz
cmp
lret
ljmp
mov
lcall
sub
mov
mov
push
jg
pop
and
dec
jmp
lock
sbb
mov
inc
aam
aaa
mov
jb
sbb
push
mov
pop
imul
push
aad
pop
addr16
cmp
dec
popa
ret
jmp
sub
stos
test
push
lock
push
into
outsl
jg
outsl
jmp
js
js
mov
inc
sbb
sub
and
orl
jbe
rcrb
pusha
mulb
xchg
xor
idivl
mov
sbb
rcr
xchg
pop
and
xor
jge
sub
mov
in
jo
mov
inc
add
iret
pop
stos
jnp
data16
stos
popf
inc
imul
xor
mov
insl
mov
and
push
inc
out
mov
xor
push
mov
xchg
mov
lret
cmp
and
fidivs
dec
adc
daa
jno
and
test
stos
jnp
cld
pop
cmc
push
rcrb
jmp
jno
inc
push
mov
cmp
push
shll
inc
sbb
or
aam
clc
stos
les
jecxz
add
cli
xor
repz
adc
cmp
ljmp
or
pop
ds
adc
sub
lcall
pop
adc
addl
popa
push
sahf
test
push
jo
fisttpll
jae
adc
fisttpll
dec
xchg
pop
lock
inc
call
sti
mov
lock
mov
dec
int3
sahf
mov
imul
outsl
ljmp
cmp
cmpsb
std
idivb
add
mov
sarb
jmp
les
mov
mov
dec
sub
frstor
in
popf
dec
popf
scas
jge
int3
scas
lcall
leave
adc
push
mov
adc
test
aaa
shl
adc
loopne
jne
xor
mov
mov
in
cli
cmpsl
jge
out
daa
mov
jecxz
test
enter
sub
cld
push
xchg
je
cmp
arpl
push
outsl
pop
hlt
es
filds
movsl
sub
repnz
mov
ret
inc
sub
pop
imul
xor
or
mov
rcll
inc
pop
outsl
mov
pop
cmp
cmpsl
cwtl
dec
out
mov
mov
inc
mov
and
aad
inc
lds
out
cmp
arpl
mov
inc
es
jecxz
fbstp
lcall
push
fcom
inc
xlat
out
jnp
cmpsl
pop
pop
push
stos
adcl
and
stc
insb
inc
mov
jecxz
ljmp
ljmp
xchg
fldl
fstps
sub
pop
insb
insb
jmp
cltd
stos
adc
repz
mov
mov
rcr
jmp
mov
ds
bound
mov
sbb
movsb
inc
out
cmp
aas
and
xchg
in
sahf
push
mov
mov
pop
das
out
mov
mov
out
pop
test
movsl
push
arpl
lods
sbb
aam
mov
ficoms
fwait
dec
mov
mov
push
or
jge
mov
shll
lahf
and
orb
xchg
jns
out
pop
ret
arpl
dec
push
test
or
sbb
and
cmpsl
jge
imul
adc
pop
mov
jno
inc
push
insl
js
pop
ss
mov
mov
xchg
outsl
sub
pop
pusha
dec
mov
gs
adc
push
stos
sbb
jnp
jno
outsl
test
pushf
gs
rorb
xchg
cwtl
jbe
cmpl
fistps
fmul
cmpsl
jmp
ret
test
cmp
xor
sub
xchg
mov
or
aad
push
les
jbe
in
jmp
out
cmp
fnstenv
iret
or
test
add
out
daa
adc
mov
xor
insb
pusha
out
adc
pop
iret
sbb
jge
pop
dec
stos
inc
or
jge
dec
decb
lcall
jb
dec
call
sbb
mull
xor
mov
mov
add
popf
cld
sbbb
pop
add
mov
inc
mov
pop
mov
xchg
pop
test
dec
push
imul
add
xor
xor
inc
and
mov
inc
outsl
cmp
mov
repz
cli
das
jne
pop
enter
adc
pusha
xchg
and
outsl
pushl
push
xor
repnz
sub
mov
ja
and
jg
adc
push
enter
xchg
in
test
out
xchg
xchg
pop
nop
cli
xlat
movsl
adc
gs
aam
fwait
lea
mov
std
sub
insl
mov
dec
inc
xchg
lods
pop
push
and
mov
and
insb
jb
cltd
xchg
mov
gs
jmp
pop
xchg
mov
out
data16
daa
push
jge
lods
push
xchg
cmp
test
adc
or
mov
in
mov
stc
or
orl
je
sub
push
jle
ds
cmpsb
jp
mov
xor
sbb
stos
xor
inc
sbb
and
icebp
xchg
cld
addb
lock
inc
sbb
dec
pop
data16
jo
adc
std
leave
sbb
aam
xor
xchg
lds
out
pop
or
cwtl
fimuls
lea
inc
xor
sub
pop
repz
add
addr16
in
data16
lea
call
std
pop
cwtl
mov
cltd
imul
push
or
fisubrs
fdivrl
jnp
or
xor
scas
jnp
lods
outsl
dec
and
fdivrs
addl
dec
gs
mov
inc
pop
bsr
adc
aad
insb
dec
not
mov
movsl
push
cmp
and
call
cmp
sahf
jg
inc
xchg
xchg
sbb
popa
mov
in
sahf
fbld
out
dec
js,pt
mov
dec
fwait
add
ljmp
and
fcomps
xchg
lds
scas
in
or
sbbl
xchg
push
pop
push
mov
je
pop
xlat
jbe
dec
cmp
das
sbb
pop
mov
mov
jg
gs
call
jae
insb
ret
xor
cmp
sbb
add
mov
inc
xchg
mov
push
dec
mov
nop
loope
mov
fwait
xor
in
mov
dec
adc
subl
stc
enter
ficoml
lahf
xchg
xchg
enter
scas
mov
xchg
xchg
push
lret
into
bound
cmpsl
ret
cmp
adc
lds
les
pop
push
loopne
xor
mov
aad
xchg
jnp
pop
or
rcr
push
lock
cmp
movsl
dec
push
inc
sbb
jb
cs
imul
mov
popa
lcall
mov
mov
inc
cmp
push
cmp
ja
xor
sar
push
cmp
into
pop
popf
stos
ja
test
adc
xchg
mov
push
mov
cmp
mov
fidivrs
xlat
push
mov
xor
mov
int3
dec
jns
pop
and
mov
shlb
popfw
lret
mov
std
pop
shlb
inc
les
out
ljmp
inc
push
out
hlt
and
xor
pop
int
cwtl
test
icebp
divl
jmp
lea
outsl
addr16
scas
sbb
enter
sarb
or
add
ret
addr16
icebp
mov
sbbl
mov
push
divb
pop
push
xor
and
loop
mov
mov
bnd
jle
fcmovb
jbe
and
adc
cli
mov
rclb
sub
and
jge,pt
mov
push
pop
repz
mov
mov
mov
int
sbb
xchg
xor
inc
adc
or
mov
sar
push
adc
cmc
rcrl
xlat
xchg
and
enter
or
cmp
es
setle
pop
add
arpl
xchg
adc
subb
dec
ret
jl
out
pop
xchg
push
sub
pop
sbb
cltd
bound
out
outsl
push
or
add
push
xlat
inc
or
mov
xor
fisubrs
repz
sti
gs
dec
and
add
mov
xchg
mov
movsb
sub
cs
inc
punpckhdq
sahf
cmp
cli
adc
or
stos
gs
and
mov
stos
pop
mov
sti
jmp
shrb
add
push
aaa
popa
mov
imul
outsl
jmp
nop
xor
xor
cld
mov
push
cmpsl
and
sub
sub
xchg
push
call
or
mov
pop
jle
lods
cmpsl
or
cltd
mov
test
mov
cmp
xchg
xor
sub
xor
mov
xchg
insb
or
jecxz
mov
insl
pop
add
in
std
mov
orl
cmpsb
xchg
dec
std
lock
jmp
cli
sub
jmp
pop
dec
sbb
outsl
jae
dec
mov
mov
rclb
cmp
inc
shll
fildl
aaa
es
dec
pop
lret
xor
dec
fidivs
and
pop
test
outsl
pop
lret
outsb
ljmp
xchg
decb
inc
push
mov
imul
iret
mov
mov
push
nop
adc
pop
add
push
and
sbb
scas
mov
in
mov
xchg
mov
adc
mov
shlb
xchg
or
inc
sbbl
fstpt
ja
rorb
mov
repnz
push
lea
test
dec
adc
cli
mov
imul
aaa
mov
xchg
sbb
repnz
cmpsb
fmul
adc
xchg
lret
mov
in
or
stc
mov
xor
xor
pop
inc
fdivr
adc
in
jo
fisubrs
dec
orb
into
mov
lret
movsl
cmpsb
icebp
dec
leave
dec
aaa
pop
je
or
testl
sti
imul
enter
sub
xor
stos
inc
dec
insl
int3
adcl
filds
dec
pop
sub
ds
divb
lods
xor
jne
aam
mov
enter
sbb
jno
jne
push
out
rcr
jb
aam
add
outsl
js
stc
or
add
inc
cmp
or
jecxz
int
adcl
loope
stc
xchg
adc
sub
addr16
xor
rol
lea
ret
movsb
pop
aam
je
out
sub
sbb
push
nop
or
add
out
or
cli
mov
jbe
pop
sub
jbe
mov
mov
adc
ja
xor
lret
sbb
push
mov
mov
mov
ja
in
sub
mov
orl
in
dec
push
dec
dec
pusha
jecxz
push
js
popa
pop
loope
rcrl
je
jo
in
jmp
lds
xchg
inc
push
rcl
sbb
sub
out
test
popf
jmp
outsl
cltd
add
out
pop
pop
xor
daa
jmp
push
push
add
flds
cmc
shll
xor
or
sbb
in
jp
fs
mov
bound
dec
push
xchg
dec
xor
in
out
in
scas
cwtl
or
insl
adc
mov
and
stc
cld
mov
mov
add
daa
xchg
jo
lds
adc
inc
fninit
ljmp
sbb
test
inc
clc
cmc
push
pop
mov
nopl
out
add
inc
cmp
push
push
aas
add
adc
sub
jne
test
loope
test
scas
push
pop
xor
and
test
sub
dec
scas
insl
push
imul
adc
pop
jge
bound
aam
adc
cmp
loopne
aaa
imul
fimuls
adc
in
aad
test
bound
stos
jae
mov
mov
les
mov
inc
mov
push
jmp
hlt
cltd
jnp
cmp
xchg
inc
out
lret
jne
xchg
add
imul
xor
push
add
cmp
mov
in
jnp
ljmp
sbb
lcall
js
sbb
aam
mov
roll
cli
test
out
pop
mov
jns
mov
cmp
pop
js
ss
and
or
sbb
rcll
xor
int3
arpl
mov
xor
bound
lret
lretw
sub
sbb
daa
mov
pusha
pop
sbb
test
int3
rep
mov
cwtl
test
or
and
xor
mov
sub
sti
mov
or
push
or
fcmove
imul
jo
adc
mov
ljmp
jno
xchg
nop
repnz
imul
xor
push
xchg
mov
pushf
jmp
inc
clc
repz
xor
ret
out
mov
add
call
fidivs
xchg
pushf
add
and
mov
notl
insb
fsub
push
jmp
sahf
arpl
mov
stc
jnp
inc
dec
mov
jmp
dec
fdivp
sub
mov
or
add
es
or
hlt
arpl
push
dec
sar
mov
jge
mov
or
mov
push
lods
movsl
adc
dec
pop
inc
loope
jbe,pn
cmp
adc
inc
xor
jnp
shll
add
and
or
pop
xor
imul
mov
inc
push
jne
lahf
loop
pop
stos
addr16
xchg
push
dec
mov
not
and
pop
cltd
mov
xor
xor
jl
and
sbb
mov
dec
and
dec
jg
add
sub
mov
lods
cli
lcall
ss
cmp
stc
sbb
or
cmp
xor
jle
aas
inc
xchg
xchg
cmp
into
adc
push
jl
adc
xor
dec
mov
jg
outsb
push
dec
icebp
rcl
mov
jle
xchg
test
aas
clc
dec
pop
loope
and
jns
push
faddl
mov
dec
lea
inc
cltd
mov
mov
subb
add
sub
in
repz
in
push
scas
sub
daa
ret
mov
fdivp
fadd
xor
cmpsb
jmp
xchg
push
dec
push
jno
cmp
sbb
out
mov
shlb
jmp
inc
push
pop
dec
cmpsb
cs
jg
dec
sub
dec
jbe
rcll
clc
xchg
xchg
add
pop
mov
lret
push
fs
lret
cmp
in
mov
inc
out
fsts
mov
lcall
push
out
and
xchg
jae
jle
jb
iret
or
mov
cmpsl
pop
mov
jge
mov
sti
pusha
dec
je
dec
add
mov
shl
lahf
adc
mov
dec
adc
push
push
pushf
push
push
xor
iret
mov
mov
and
add
int
scas
mov
and
add
add
jne
sub
testb
or
sub
mov
cmp
dec
mov
push
cwtl
sbb
mov
cmp
xchg
add
and
adc
mov
cwtl
aaa
outsl
fadds
cmp
sbb
cmp
jl
data16
ljmp
jo
mov
aaa
sahf
sar
int
sbb
sub
push
sub
push
inc
add
push
inc
inc
push
or
adc
cld
lock
and
test
popf
mov
xor
out
mov
and
addl
fdivs
pop
inc
cmp
mov
loope
push
sub
fdiv
and
mov
sar
inc
leave
je
add
lahf
les
pop
sbb
shll
ret
test
xchg
mov
mov
jp
aam
jp
inc
vpsubb
xor
popa
rol
push
outsb
insl
mov
loope
mov
shl
xchg
into
mov
dec
inc
inc
mov
push
add
in
js
ja
imul
jnp
repz
scas
out
out
jno
lods
jb
outsl
xchg
xchg
sbb
lahf
mov
sub
adc
out
xchg
out
insl
pop
jae
scas
popa
cmp
sub
push
ret
push
pop
out
icebp
xchg
mov
dec
inc
addr16
jbe
test
out
mov
orl
jg
and
rcrl
ret
sbb
dec
mov
xor
loopne
add
scas
fldl
stos
push
jae
lret
imul
mov
clc
aas
inc
sti
cmp
pop
out
pop
sbb
aad
jmp
and
fcoml
es
or
pop
imul
jg
add
mov
aaa
mov
insl
xor
pop
insb
mov
out
aam
pop
lret
aad
push
fsubl
sar
outsb
es
push
push
fbld
cmp
out
nop
mov
out
sbb
dec
aas
pop
mov
push
sbb
push
leave
loop
arpl
pusha
das
lock
jns
call
sbb
xor
cmp
jb
out
mov
in
lock
and
push
inc
jge
sub
imul
inc
clc
sbb
pop
xor
push
outsl
ja
jnp
add
fdivr
pop
dec
push
repz
bound
lcall
cmpsb
mov
aaa
and
mov
jbe
cmpsb
sbb
jns
mov
jo
cmp
mov
fmul
sbbl
fstps
jmp
inc
mov
jno
sbb
inc
mov
testb
jae
cmpsb
pop
push
mov
popa
mov
cmp
sbb
xor
and
testl
mov
xor
pushf
push
push
mov
popa
jle
adc
dec
andb
jnp,pt
lcall
sub
inc
lock
gs
gs
in
or
jno
test
cmp
mov
pusha
icebp
fisttpl
arpl
cltd
loop
mov
sub
insb
shlb
xchg
std
or
jp
lock
scas
les
fst
xchg
aaa
notl
mov
dec
shll
fucompp
shlb
push
mov
jecxz
jp
and
fcompl
and
cwtl
insl
add
jbe
lahf
mov
pusha
sbbb
test
dec
hlt
jle
addr16
xchg
testl
lock
test
or
cmp
jmp
lret
dec
lcall
mov
int3
and
mov
out
sbb
and
out
lret
faddl
xlat
xchg
adc
and
adc
jae
es
test
imul
pushf
std
mov
fldenv
or
stc
adcl
and
pop
test
je
outsl
lahf
pop
je
or
out
bnd
pop
adc
push
push
and
inc
mov
fists
sbb
rcl
jmp
push
popf
mov
fwait
ds
inc
mov
js
push
jne
sbb
push
test
sbb
fiadds
fs
insl
in
or
sbb
ljmp
out
jno
jecxz
xchg
pop
sbbl
push
push
or
xor
enter
call
xchg
test
out
neg
dec
push
inc
les
ljmp
ror
dec
mov
lahf
push
je
xchg
imul
cmp
push
pusha
adc
adc
sbb
sub
fdivrl
sub
inc
sbb
pop
jno
pop
out
into
xor
cmp
lret
enter
jp
push
jle
mov
sbb
dec
cmpsl
push
push
or
dec
popf
lcall
shl
or
test
pushf
shrb
insb
add
lods
pop
dec
in
fidivrl
pop
test
mov
cmc
add
enter
dec
dec
push
int
imull
scas
jb
xchg
andl
aam
and
push
in
es
fdivrs
loopne
ljmp
or
in
cli
inc
mov
pop
jb
das
into
arpl
and
cmp
or
xchg
ficompl
loop
in
mov
jbe
inc
out
add
cwtl
fmulp
lods
or
or
in
xor
xor
push
jno
in
fmuls
in
mov
adc
ja
mov
jp
or
sbb
pop
dec
int3
jecxz
push
int3
dec
mov
stc
xor
cmp
inc
jle
xchg
fstpl
fnsave
and
mov
and
repz
clc
int3
idivl
push
fcoml
aas
push
in
lds
mov
pop
stc
mov
push
sbbl
imul
cltd
push
scas
repz
cmp
loop
fdivl
sbb
xchg
imul
adc
scas
in
stos
or
imull
sub
jg
and
mov
roll
xchg
push
jno
imull
dec
sub
dec
ljmp
push
xor
inc
push
jne
pop
inc
cltd
sbb
jl
ljmp
mov
sahf
jnp
pusha
enter
push
inc
sub
sub
test
out
test
ret
cs
mov
daa
pop
adc
and
loop
jne
shll
out
dec
add
clc
mov
int
out
popf
xchg
pop
popa
testb
adc
push
ljmp
sub
sbb
add
sub
mov
push
icebp
es
push
add
arpl
adc
add
xlat
lret
cmp
ss
push
mov
or
out
aaa
test
mul
push
pop
pop
mov
jno
xor
sbbl
lods
data16
cmp
sub
sbb
cmp
btc
mov
aam
arpl
adc
insb
scas
enter
aaa
icebp
inc
sub
sbb
and
ja
orl
add
int
insb
mov
popf
imul
cli
sbb
pop
cmc
push
scas
daa
test
mov
adc
je
jb
dec
push
inc
cs
imul
mov
xor
loope
insl
test
loop
sti
cmpsb
pop
xchg
inc
fs
jg
and
push
loopne
iret
mov
divb
dec
cmpsb
outsl
pop
add
and
nop
pop
jns
int3
shl
cs
mov
fcmovbe
inc
repnz
ret
sbb
popa
and
in
add
xor
jge
jno
and
mov
push
fdivs
mov
clc
in
lods
mov
rolb
out
ficomps
jne
jg
mov
push
movsb
cltd
mov
aad
ficoml
data16
jl
fstl
and
and
mov
xchg
dec
dec
pop
loopne
int3
mov
ja
mov
addl
inc
xor
or
test
inc
xor
mov
xor
shrl
or
call
mov
or
push
dec
push
fbld
dec
jecxz
cmp
lahf
sti
xchg
inc
and
sahf
addr16
cmpsb
sbb
imul
add
jg
ljmp
fcoml
jmp
cld
in
call
pop
loope
pusha
add
ret
adc
lods
gs
jnp
xor
insb
cmp
cltd
repz
jge
push
cmp
add
or
inc
xor
inc
rolb
fmul
dec
xchg
push
dec
mov
out
cmp
jne
xor
xchg
xchg
pop
cmpsl
and
sbb
rorl
mov
outsl
mov
insl
mov
jne
pusha
jle
je
push
das
mov
leave
cld
lret
cli
xlat
push
xor
pop
imul
jmp
adc
sbb
lahf
or
scas
cld
adc
add
adc
mov
cmp
or
pop
frstor
addr16
dec
test
mov
cld
pop
or
sub
sti
call
push
sar
jp
sbb
or
xorb
roll
xor
jp
or
outsb
insb
inc
push
fcomip
fists
push
dec
aad
jbe
aas
cld
negl
mov
into
cs
mov
jae
cmp
and
or
imul
ffree
aad
dec
cmc
insl
imul
loop
mov
lods
sar
sarl
rorl
and
push
mov
jge
dec
popl
xorl
sbb
pop
sub
mov
int
out
pop
jo
and
les
rolb
mov
sub
jg
and
inc
mov
scas
xor
mov
fxsave
or
cmp
mov
js
fwait
daa
jns
jno
add
scas
sub
std
xchg
in
mov
push
sub
push
and
jns
repnz
ja
sub
add
cmpsb
scas
pop
sub
and
jo
lods
out
sub
dec
pop
add
and
jmp
gs
test
mov
and
or
ljmp
mov
das
lea
cmp
mov
xchg
sbb
fsubs
jne
mov
fstpl
call
adc
pop
mov
ret
addr16
pop
sti
add
pop
lahf
fisubrl
jge
inc
pop
fisttpl
jl
sbb
pop
jae
jmp
xchg
shl
mov
mov
int
loop
shlb
push
sahf
jno
sbb
and
scas
mov
hlt
dec
cmp
scas
jge
stc
push
add
xor
sbb
in
sbb
add
notb
push
std
out
inc
or
push
les
rorb
mov
xor
std
adc
stos
jae
mov
std
push
ljmp
and
je,pn
inc
scas
sbb
xor
xor
pop
in
mov
adc
bnd
je
enter
mov
xor
or
jno
sti
cmp
pushf
arpl
or
aam
and
loopne
cmc
push
mov
cltd
js
bound
mov
js
pop
into
jmp
test
xchg
into
ficoml
call
mov
scas
sbb
or
aam
sbb
xor
add
push
adc
std
and
insl
cmpsb
lds
stos
icebp
cli
cltd
jnp
jns
inc
inc
test
dec
fimuls
and
push
mov
js
or
jmp
and
or
jns
test
in
mov
push
jl
xchg
notb
pop
test
mov
loop
pop
adc
sti
sbb
mov
mov
lods
jne
aaa
in
mov
pop
jae
imul
popa
push
out
dec
and
sub
or
push
pop
or
mov
les
cmc
sub
add
ret
mov
addb
mov
test
loope
cltd
xor
mov
shr
cmp
and
xor
mov
ret
loopne
rol
in
and
push
das
lret
sub
xor
iret
cmp
pop
jg
sbb
cwtl
xchg
inc
incb
psrlq
jg
pop
dec
xchg
imul
imul
dec
cwtl
dec
cmp
jbe
je,pn
inc
push
cltd
push
repz
ficomps
ds
pop
cmp
xchg
icebp
mov
pop
pop
fisubrs
add
popa
cmpsb
lahf
push
test
outsl
aad
jne
xor
in
dec
in
or
dec
mov
push
and
test
adc
cmp
in
lret
jp
into
push
fs
cli
ret
jmp
imul
test
in
test
jae
mov
and
clc
shll
jmp
ds
out
cmp
xchg
adc
enter
adc
movsl
andl
inc
jge
loopne
repz
aam
jnp
xor
xchg
push
rcrl
mov
mov
imul
mov
lret
inc
sub
push
aas
sbb
adc
mov
adc
loope
and
sahf
sbbl
push
cmp
int3
hlt
loope
shlb
call
enter
pusha
jae
mov
sbb
push
mov
dec
fldt
fisttps
adc
ret
std
lods
mov
add
daa
arpl
push
mov
rcrb
fidivl
test
or
or
mov
out
outsb
jl
dec
jge
dec
gs
and
cmp
xor
out
jns
add
mov
mov
testb
out
cs
fldcw
gs
push
mov
lret
xchg
pop
nop
pushf
in
leave
clc
push
je
sbb
and
rorb
cmp
repnz
push
aaa
pop
push
mov
test
lret
lret
repnz
jbe
xchg
ja
inc
cmpsl
mov
sbb
test
nop
cmpsb
stos
sbb
jecxz
movsb
push
fwait
and
jae
pop
mov
dec
arpl
das
test
clc
dec
dec
xlat
imul
divb
popa
xlat
xchg
aad
mov
call
lods
pop
shll
cmc
ret
inc
pop
mov
fistpll
push
inc
xor
push
popa
cmp
jno
fdivl
mov
rcll
adc
aad
ret
adc
outsb
sarb
movsl
popa
lock
mov
cltd
test
ja
adc
xchg
or
sub
xchg
repz
lods
sub
popf
xlat
ss
and
dec
dec
sub
sti
push
lock
push
jbe
sub
jbe
movsl
lcall
sbb
in
lds
cmpsl
or
mov
mov
xlat
stos
mov
shll
lods
sahf
mov
data16
stc
cmp
in
pop
push
push
or
jmp
sarb
sub
shrl
test
rcll
es
jge
pop
stos
xor
xchg
inc
adc
dec
mov
lods
adc
xor
leave
mov
jno
aam
pop
test
jmp
cmpsl
daa
call
clc
push
pusha
lods
push
jle
dec
cmp
sti
mov
xchg
out
sbb
or
fbstp
das
in
adc
and
aam
push
in
dec
cwtl
mov
xor
stos
inc
sbb
sbb
and
cmp
fsub
add
and
inc
ret
imul
pop
test
clc
xchg
sbbb
fsubr
stos
roll
sbb
or
jge
idiv
inc
push
loopne
jnp
push
xor
mov
or
dec
pop
inc
sub
cmp
sbb
and
sbb
mov
fs
and
sbb
sub
fwait
outsl
mov
cmp
in
xchg
insb
out
lcall
jecxz
cmpb
push
notb
in
out
popa
mov
cmp
cmpsb
arpl
inc
in
dec
aad
mov
cmpsl
out
mov
add
outsl
mov
xlat
mov
xchg
out
movb
or
jle
xchg
loope
cmp
pop
je
enter
jp
es
mov
cmp
push
inc
add
and
mov
xor
es
jg
hlt
dec
adc
pop
mov
pop
pop
aad
out
imul
out
push
xor
or
push
jge
out
xor
lods
movsb
xchg
ss
imulb
cmc
push
insl
popf
xchg
test
sbb
cmp
sbb
sbb
iret
ljmp
xchg
fbld
sbb
cld
pop
inc
jge
or
dec
pop
lds
in
test
rorl
xchg
dec
lods
xor
or
ffree
les
and
mov
out
dec
pop
mov
call
xchg
sbb
cmp
mov
sti
sbb
ds
cmpsb
test
add
mov
xchg
es
scas
stos
test
sub
or
push
push
frstors
jle
mov
jo
jbe
or
js
cmc
pop
enter
imul
movswl
dec
mov
loop
jp
loope
jecxz
in
in
pop
mov
sub
call
sub
add
or
test
in
sub
mov
adc
imull
hlt
pop
icebp
jae
in
ds
cwtl
push
scas
iret
repz
scas
in
xchg
fnstenv
xchg
mov
jl
int3
mov
push
std
sti
sti
inc
pop
add
lods
or
shl
ja
in
mov
mov
xor
js
movsl
insl
mov
shr
push
aam
jne
mov
dec
xchg
bsr
mov
inc
jmp
jnp
add
scas
stc
outsb
cmp
lcall
inc
hlt
lods
bndstx
lods
mov
cwtl
push
xor
mul
mov
call
jmp
sbbb
shlb
pushf
lahf
mov
jb
in
sbb
out
xchg
data16
lret
test
pop
dec
repnz
push
jp
or
je
or
adc
push
iret
pop
mov
xchg
pop
xor
loop
movsl
jns
rcrl
les
inc
in
and
rorb
sub
mov
cmpsl
sub
outsl
mov
xchg
xlat
int3
cmp
int
scas
push
frstor
cld
cmp
cmc
scas
outsb
loopne
jle
test
dec
xor
aad
cltd
pusha
xor
cmc
repnz
adc
push
adc
dec
shl
bound
leave
mov
xor
pop
cmp
sbb
les
dec
loopne
pop
sub
sbb
bsf
xor
jno
mov
xchg
lock
adc
cmc
mov
add
popl
aaa
ljmp
push
mov
enter
hlt
mov
jnp
data16
lret
rorb
sbb
add
adc
inc
add
inc
xor
ror
mov
cld
imul
shr
and
nop
ds
stc
imul
fdivrs
dec
dec
or
pop
push
addb
push
xchg
mov
ret
and
mov
add
int
mov
aam
and
pop
inc
jnp
or
xorl
push
fsubrl
popa
icebp
push
ss
cmp
pop
outsl
fisubrl
aad
jns
fadds
xor
into
xchg
and
out
les
ret
jnp
adc
and
mov
lods
cmp
add
loope
xor
cmp
pop
mov
enter
hlt
inc
jp
push
push
add
in
and
nop
adc
pop
jle,pn
in
popf
stos
shll
pop
pop
add
fsubl
jnp
mov
mov
aas
xchg
or
sarb
loop
repz
cld
push
out
outsl
cmp
mulb
out
test
xor
hlt
xchg
dec
jmp
add
and
imul
cmc
int
cmp
mov
add
cmc
mov
aaa
dec
adc
push
xor
or
nop
sub
mov
out
in
push
push
and
outsb
push
rclb
dec
test
xor
out
loope
aas
ljmp
xchg
xor
testl
loopne
cmp
xorl
mov
test
add
dec
cmc
fbstp
adc
icebp
imul
jmp
enter
dec
inc
aad
es
nop
ljmp
push
lcall
stc
jle
mov
lods
cltd
enter
jp
xchg
sub
sub
shr
ja,pt
jecxz
cli
inc
or
and
paddq
rcrl
mov
cltd
or
push
cltd
clc
xchg
mov
jno
jns
andb
mov
add
mov
notb
push
test
pushf
bound
pop
cmp
sti
bound
shlb
cmp
out
leave
lock
mov
dec
sub
and
pushf
dec
pushf
data16
adc
push
mov
sub
lock
fwait
or
add
data16
push
ret
iret
pop
pop
adc
push
pop
mov
mov
pop
lock
jnp
in
scas
and
addr16
in
jmp
insb
push
xor
cmp
iret
sub
sub
jbe
add
pop
xor
addr16
and
hlt
or
nop
inc
xchg
mov
sub
cmp
push
xor
idivl
push
sub
lea
cmc
cmc
pop
add
dec
xor
xchg
push
sbb
popa
or
hlt
push
adc
dec
and
out
add
or
gs
push
rol
sti
pop
inc
xor
push
fwait
daa
filds
sbb
cs
ret
shl
sahf
out
dec
mov
push
pop
repz
sub
popf
mov
mov
inc
imul
xor
adc
gs
jbe
mov
xchg
mov
icebp
jae
sub
ret
mov
jecxz
cli
test
adcl
jmp
jbe
out
pusha
mov
jmp
xor
iret
xchg
inc
adc
adc
mov
jl
pop
pop
adc
xchg
out
inc
repz
xchg
scas
dec
push
mov
xchg
jbe
mov
mov
inc
fcoml
add
rclb
cs
test
mov
add
cmp
dec
xchg
aad
ret
cs
es
jecxz
pop
pop
jmp
ja
xor
clc
adc
adc
xor
xchg
dec
stc
sahf
pop
cmpl
in
push
testb
and
cltd
fcomps
cmp
nop
dec
scas
jbe
std
popa
xchg
lahf
jb
adc
bound
cmp
in
sub
jg
repz
inc
je
xchg
mov
adcb
xor
loop
dec
lds
in
dec
idiv
lret
mov
or
sub
aam
gs
jmp
leave
xchg
cmp
lds
loop
jne
pop
data16
xchg
in
aad
jb
lock
push
out
xor
dec
loopne
jmp
loop
inc
or
pop
nop
test
test
cmp
sahf
jbe
xchg
sub
xor
sub
pop
mov
stc
xchg
stc
push
push
imul
push
inc
hlt
test
out
pop
jmp
dec
or
dec
sbb
fstpl
std
jae
pop
mov
imul
inc
or
das
jl
addr16
push
sub
test
pop
in
dec
dec
sbb
mov
adc
mov
jbe
pop
inc
cmpsl
dec
jno
jmp
nop
aam
ds
mov
pushf
stos
sbb
inc
mov
cmc
fwait
test
gs
jge
movsb
pop
and
out
cmp
mov
pop
adc
into
pop
xor
adc
lock
fnstenv
mov
jl
ret
jmp
and
loope
xchg
cmpsb
imul
rorb
xor
ja
push
xchg
add
and
pushf
test
dec
fists
std
sahf
test
popf
and
pop
cmp
and
sti
and
adc
push
mov
je
jbe
scas
frstor
mov
dec
inc
iret
inc
cld
and
js
sbb
push
movsl
or
pushf
out
ficoms
mov
dec
mov
test
notl
scas
outsl
sbb
scas
in
and
inc
mov
push
notb
and
add
cmp
xchg
mov
cmp
les
push
fidivrs
inc
bound
jno
push
dec
pop
jb
fbld
nop
fistl
jns
push
mov
push
ficoms
xor
aam
pop
xor
push
jge
xchg
sub
rol
xchg
lcall
packssdw
or
scas
out
dec
stos
out
outsl
adc
and
stc
or
sub
cli
xor
out
xor
dec
popf
or
sarl
xchg
dec
xchg
icebp
stos
adc
rcl
lock
jo
push
mov
insl
dec
or
loope
scas
or
mov
push
in
or
xor
jle
out
sbb
sbb
cmp
gs
scas
inc
mul
aaa
mov
pop
push
repz
mov
jo
popa
xchg
pop
mov
lock
mov
push
add
nop
movl
scas
mov
in
inc
out
pop
jg
or
mov
sub
stos
hlt
push
xor
pop
and
sub
daa
cmc
jno
jae
rolb
fnstenv
loop
mov
stc
fcmovnb
xchg
pop
js
cmp
loope
stos
les
mov
cmp
scas
test
inc
test
loope
jne
mov
mov
lret
lcall
dec
jge
mov
push
or
jnp
adc
sti
lock
lret
pop
sub
xchg
mov
mov
fs
xchg
jle
dec
lahf
dec
sbb
jo
cld
add
push
dec
bound
filds
jae
inc
mov
in
stc
cvtdq2ps
aaa
data16
mov
jbe
cmpsl
enter
jae
sarb
mov
and
dec
nop
das
outsl
ss
push
push
test
xor
sti
cmpsb
pusha
hlt
mov
int
or
sub
mov
xchg
cltd
xchg
popa
mov
mov
stos
shlb
pop
imul
xor
jmp
pushf
sub
ds
sbb
fimull
imul
movsb
jp
enter
cld
aad
out
inc
or
jns
shll
loop
in
lock
adc
sahf
clc
into
add
xchg
mov
out
fimull
add
sbb
loop
lahf
stos
inc
fsub
enter
rorl
push
xor
aad
and
sub
jg
dec
pop
imul
scas
cltd
nop
adc
inc
aad
push
pop
daa
pop
jae
in
mov
jne
push
pop
sbb
lods
add
inc
lods
lods
dec
inc
push
jmp
xchg
std
pop
push
cld
pop
mov
lret
popl
add
and
sub
mov
call
and
sbb
les
sub
cmpsb
or
mov
cwtl
push
ret
push
aas
dec
push
movsl
leave
fldt
dec
inc
aas
inc
jmp
jmp
nop
push
movsl
xchg
or
call
push
mov
adc
mov
loop
pop
mov
popf
aas
adc
gs
add
jge
xchg
in
mov
pop
lret
mov
icebp
dec
cmpl
add
dec
idivl
imul
leave
fwait
mov
clc
and
push
mov
repz
inc
sarl
das
push
jle
in
add
gs
and
push
dec
dec
mov
movsb
in
aas
enter
sub
fdivl
in
mov
mov
inc
cmc
mulb
mov
add
jecxz
jge
mov
insb
jg
cmc
scas
add
mov
nop
lea
add
icebp
mov
cmp
push
mov
and
pop
mov
cmpsl
jmp
iret
sub
mov
clc
sti
das
repnz
bound
push
negl
sbb
test
or
jmp
cmpsb
std
leave
xor
dec
sub
mov
push
sub
mov
add
xor
scas
enter
inc
xchg
push
cmp
mov
clc
mov
mov
push
push
loop
test
mov
in
pop
jne
aam
fadds
push
jle
dec
aaa
and
push
jns
push
push
mov
sub
out
cltd
push
xchg
ret
and
and
mov
jp
mov
mov
in
push
movsl
add
push
fcmovnbe
dec
push
fistpl
fwait
lods
rcl
push
xchg
inc
addb
adc
ljmp
clc
mov
sub
mov
ret
push
notl
rorb
xchg
sub
mov
or
pop
and
movb
jle
out
jne
and
push
imul
sub
call
mov
out
ja
dec
out
jecxz
std
xchg
mov
out
xor
push
out
jae
add
ljmp
mov
jno
shll
sbb
sub
adc
test
inc
or
shrl
adc
fnstsw
dec
pop
or
call
xchg
fisttps
jns
out
sbb
sub
xor
iret
mov
sub
sarl
and
fstpt
jmp
lcall
out
out
ja
shr
ret
xchg
sbb
movsb
popf
add
jecxz
and
mov
xlat
add
lea
xchg
pusha
cmpsb
cmc
out
outsb
mov
cmp
adc
adc
dec
mov
inc
ret
push
dec
sub
push
xchg
dec
movl
sub
push
cmp
cmp
aad
loope
cmp
and
adc
clc
rolb
sub
es
mov
mov
sbb
shlb
gs
enter
inc
loop
out
ljmp
cmpsb
add
dec
std
stos
push
aam
jle
jbe
xor
mov
pop
popf
pop
or
xor
int
adcl
cmpb
push
adc
mov
jl
jp
jb
push
test
inc
scas
mov
pop
inc
sbb
sbb
int
adc
jae
in
jle
std
inc
rclb
xor
es
sbb
fldenv
cmp
xchg
scas
inc
leave
arpl
lahf
adc
fmull
mov
stos
push
inc
test
in
add
jle
mov
mov
mov
nop
xor
out
mov
arpl
clc
fcompl
lea
push
test
stos
and
arpl
xchg
sub
add
sbb
or
daa
hlt
aam
xchg
xchg
jp
pop
fstpt
std
cmpsl
clc
add
pushf
xchg
shld
iret
push
push
pop
inc
push
cmp
adc
jg
jae
adc
insb
xchg
mov
mov
std
pop
mov
adc
push
repz
pop
int3
jnp
sti
movsb
loop
xor
mov
lods
sub
into
call
inc
inc
push
std
dec
sub
movsl
lods
jno
test
icebp
cs
sub
add
lret
fimull
xchg
cli
jmp
js
pop
cmp
adc
lds
xchg
adc
push
push
dec
jae
mov
cmpsb
cmp
sub
mov
xchg
addr16
mov
jmp
into
push
sbb
cmpsl
mov
xchg
imul
loope
stc
sub
aam
pop
push
adc
cli
add
ficompl
cli
pop
xchg
pop
inc
fnsetpm(287
jns
jmp
sbb
cmp
sbb
inc
dec
std
cwtl
jbe
sbb
push
cwtl
insl
pop
in
outsb
ljmp
out
insl
lods
xor
jl
xor
sbb
or
push
sbb
and
mov
inc
sarl
push
aam
leave
mov
insb
pop
pop
inc
imull
xor
sbb
and
mov
xchg
fwait
add
rcl
dec
inc
frstor
xor
ret
push
pusha
clc
inc
gs
add
jl
imul
and
cmp
pop
ljmp
in
shll
ds
imul
sub
test
sub
jge
les
sbbb
fwait
cmp
pop
dec
mov
xchg
ficompl
shrb
dec
pop
mov
adc
aaa
sub
add
sbbb
jnp
sub
outsl
shrl
fs
and
cmpsl
out
gs
lret
cmp
stos
dec
pop
rol
xor
test
ficomps
bound
mov
shrb
ret
ja
das
sub
stos
std
inc
add
xchg
sub
mov
iret
addr16
imul
ljmp
xor
out
jmp
lahf
cltd
adc
xorb
adc
adc
popa
std
sar
mov
outsb
xchg
in
cli
ds
negl
cmp
or
hlt
mov
lret
ret
push
push
add
or
pusha
adc
inc
aad
out
mov
push
mov
mov
loop
inc
popf
mov
mov
rcrl
stos
in
cmp
jo
lcall
scas
insl
push
into
jbe
iret
orb
xchg
sub
mov
push
sbb
cld
jae
scas
xchg
jbe
xor
rcl
imul
sti
mov
jo
xorl
imul
adc
sbb
mov
add
aam
dec
xor
sar
dec
js
loopne
int3
cli
stos
dec
outsb
jl
sbb
xor
add
movsb
stc
stos
int3
mov
cli
clc
pop
rolb
lcall
pop
lcall
xchg
push
movsb
push
fimuls
fadd
xor
pop
cmpsb
ljmp
xor
cld
notl
or
dec
adc
repz
int
sti
cmpsl
mov
add
jge
jge
aad
aaa
fistl
scas
rcll
cli
sub
dec
push
cltd
sbb
orb
test
mov
mov
dec
xchg
mov
cmp
and
xor
lock
loop
repz
push
in
sub
js
pop
es
adc
xchg
sbb
aaa
out
jl
pop
repz
xlat
lods
or
js
sbb
sub
jmp
mov
hlt
sahf
mov
int
xchg
cld
and
pop
pop
and
mov
in
out
cmp
and
loopne
mov
bound
in
mov
sbb
bnd
or
mov
nop
sub
xchg
inc
shlb
fwait
sbb
nop
sub
out
cmp
dec
aam
scas
adc
in
add
imul
shr
mov
sti
add
lahf
loopne
mov
imul
negl
add
sahf
std
sbbb
and
xchg
add
shll
lahf
fcomip
inc
mov
test
outsl
sub
lods
xchg
adc
cmp
addl
mov
mov
xchg
sub
int
dec
js
loope
jo
mov
loope
mov
in
sub
inc
and
mov
sub
push
in
xchg
pop
sbb
jmp
inc
test
arpl
mov
push
aad
adc
cli
fstpl
jg
rorl
std
mov
lret
fcoml
xor
repz
pop
inc
sbb
test
or
sbb
jp
in
rcll
mov
or
or
aam
or
ss
sub
adc
push
std
push
adcb
leave
mov
dec
ja
jb
mov
and
scas
sbb
mov
addr16
sbb
jmp
pushf
aad
dec
paddusw
lea
xor
cmc
dec
es
ja
cmp
or
add
or
mov
inc
xor
icebp
sub
inc
lret
ret
out
xor
jbe
lods
push
jns
dec
mov
gs
cmpsl
pop
xorb
push
dec
sahf
out
ds
sbbl
out
inc
shll
mov
cmpsl
pop
pop
lds
in
jp
cli
aad
push
xchg
stc
mov
or
pusha
sbb
stos
test
popf
adc
mov
popf
dec
subb
dec
jb
pop
rolb
or
pop
pop
addr16
push
adc
jae
pushf
pop
mov
dec
mov
lcall
dec
scas
dec
ficomps
inc
cld
popa
imul
dec
scas
scas
jmp
cmp
movsb
test
pop
dec
stos
sub
or
fmul
jp
int3
scas
repnz
push
pop
pop
bound
jne
in
pop
push
xchg
lahf
adc
xchg
sti
jno
ljmp
fcoml
cmp
mov
adc
xor
adc
shlb
adc
sbb
pop
adc
in
adc
inc
sub
pop
xor
sbb
outsb
xor
mov
sub
push
insb
xchg
sbb
and
push
lret
jp
inc
ret
xchg
pop
jge
mov
inc
mov
inc
sti
inc
das
sbb
pop
inc
decl
leave
rorb
cmp
cmc
pop
bound
and
inc
jecxz
test
mov
bound
fldcw
jnp
std
adc
loop
mov
xor
jnp
add
jmp
xorl
sub
rorl
daa
mov
imul
arpl
mov
stos
ret
ss
lods
mov
push
cmp
cmp
jp
dec
sub
sahf
mov
mov
sub
cld
mov
lods
data16
cltd
mov
ja
jo
jle
pop
insb
push
cmpsb
loopne
pop
xlat
aas
adc
xor
fidivrl
inc
dec
mov
mov
sub
cltd
leave
sbb
adc
jae
mov
cli
sahf
ss
sub
cmp
dec
cmp
push
sahf
fwait
push
mov
mov
icebp
pop
cs
mull
dec
in
dec
jmp
ss
push
mov
push
ds
fs
cmpsl
cmp
loop
cmp
jae
mov
push
les
rcrl
xor
into
repz
mov
sbb
mov
fldenv
xchg
mov
adcb
je
pop
rorl
insl
xor
pop
popa
inc
mov
cmp
test
sub
pushf
stos
and
in
inc
fnstsw
xor
out
push
xor
lret
cmp
bound
out
mov
lahf
int3
mov
jns
sbb
mov
push
je
sub
adc
sbb
loope
fs
inc
pop
int3
cmp
ja
lahf
cmpsb
int3
adc
mov
jnp
js
mov
pop
out
shlb
stos
jle
and
push
dec
sar
shrl
inc
xchg
bound
imul
jmp
mov
sub
js
popf
xchg
imul
outsb
sub
fsubr
iret
js
cmp
cmp
fnstsw
mov
sub
inc
insb
adc
jp
mov
mov
or
mov
shll
je
mov
and
inc
popf
mov
dec
push
mov
lea
nop
mov
cld
lock
pushf
mov
icebp
xchg
mov
cwtl
cmp
cmp
outsb
imul
xor
jne
jg
jmp
jle
sub
xchg
or
fnstenv
mov
and
adc
mov
mov
fidivrl
sub
cmp
jle
js
xchg
test
leave
es
lods
cmp
and
into
inc
in
push
jg
aad
mov
jecxz
xchg
cmp
xor
sbb
loop
pop
add
pop
insl
pop
fisubs
paddsw
loope
cmpsl
fs
adc
mov
xchg
scas
push
cmp
jecxz
mov
fsubrs
inc
sub
ret
jno
sub
fwait
xchg
in
fs
fbld
mov
inc
jmp
mov
lds
push
cs
arpl
cli
cmpsl
fwait
mov
xchg
movsl
xor
adc
inc
and
mov
sti
cld
sbb
sub
sbb
inc
gs
nop
cli
data16
ficompl
xchg
xor
ret
push
rcrb
xor
idiv
sub
or
add
out
xchg
or
test
popf
jmp
mov
mov
push
xlat
push
sarb
jns
mov
fdivs
popa
xchg
fucompp
es
rcrl
das
sub
xor
push
arpl
sbb
insb
dec
dec
out
pop
jae
mov
rorl
cli
or
cmp
xchg
cld
aas
rorl
movl
fldenv
leave
adc
imul
pop
sbb
xchg
popa
fnsave
jle
mov
leave
psubusw
cmp
sbb
lret
cmp
test
and
push
cltd
rorl
test
jns
xchg
dec
arpl
sarl
sub
repnz
push
sbb
cmp
cmp
mov
loop
shll
fldenv
mov
dec
push
lcall
mov
rcr
fidivrs
daa
lods
in
test
gs
inc
movsl
cmp
mov
dec
pop
dec
and
std
sbb
mov
and
cmp
mov
into
leave
and
jg
stos
data16
gs
mov
je
adc
pop
dec
lret
xchg
dec
int
sub
dec
jns
xchg
lret
push
es
ss
rcrl
ds
or
inc
ljmp
aam
mov
sbb
push
pop
mov
std
push
push
and
imul
xlat
test
cmpsb
mov
inc
mov
adc
repz
mov
sti
cmp
inc
and
cmpl
pop
add
cmp
bound
popa
mov
push
push
jns
sbb
cmp
fldl
push
inc
leave
inc
pop
aaa
frstor
fstpt
movsb
sahf
mov
push
and
shr
adc
fisubs
outsl
pop
loop
push
cmpsl
add
mov
out
mov
sub
clc
es
jne
addr16
lock
sbb
sti
pop
push
mov
xchg
orb
mov
jl
popf
inc
lock
js
cmp
ljmp
push
lahf
xchg
push
sbb
pop
int
adc
popa
in
sbb
pop
jge
jge
xchg
test
aad
repz
jne
mov
jecxz
mov
insb
push
imul
rcll
loopne
in
adc
xor
mov
pop
push
js
inc
and
add
and
and
adc
inc
mov
scas
xchg
fistl
aam
xor
dec
loop
into
sub
add
data16
xor
cmp
hlt
xor
push
cmp
cmp
cmc
xor
mov
sub
sbb
sbb
in
or
push
pop
loope
lret
hlt
lret
xor
jne
sub
jg
xchg
lcall
sub
aam
xor
lea
movsb
dec
fwait
mov
xlat
fisttps
dec
sti
rcr
incl
xchg
xor
lahf
jns
gs
shl
add
mov
out
fldt
mov
adc
fwait
push
add
sub
jo
jl
lock
or
loope
lea
imull
mov
pop
mov
das
loop
test
jnp
or
mov
push
xchg
insl
mov
and
mov
rorb
fbld
mov
inc
mov
gs
jmp
xor
cmpsl
jp
adc
imul
xor
lcall
pop
test
sub
jo
sub
inc
out
js
inc
lcall
jmp
and
and
out
or
fistl
test
movsl
frstor
jl
nop
pop
pop
loopne
dec
insl
and
rcll
lock
std
jns
mov
popa
adc
xlat
aam
cmp
adc
je
push
and
out
xchg
std
mov
xlat
je
push
fldcw
loopne
and
cli
out
movsl
lahf
sub
ret
lahf
mov
mov
add
push
push
aaa
insl
movsb
inc
rolb
out
std
icebp
push
push
mov
gs
sbb
pop
dec
pushf
sub
jne
dec
pop
sub
aas
sahf
add
sti
mov
inc
add
dec
divl
in
test
xor
push
fsubs
test
jle
loopne
test
and
cltd
inc
dec
cld
pop
fstpl
sbb
lods
push
fmul
and
cwtl
xchg
test
mov
repz
inc
xchg
lock
xchg
jmp
sbb
cmp
and
jecxz
addr16
xorl
lret
push
xor
mov
cmpsb
inc
push
inc
js
or
xor
mov
daa
jo
jno
dec
popa
roll
scas
mov
rcrb
and
sbb
orl
adc
sbb
inc
call
mov
cmc
add
scas
mov
push
fnstcw
xor
insl
out
sub
adc
inc
pushf
aaa
jb
mov
xchg
das
hlt
cs
cmp
mov
push
push
mov
xchg
jns
mov
out
pop
add
lret
pop
jo
std
xor
jb
mov
push
icebp
shlb
inc
xchg
xor
mov
pusha
mov
and
mov
xor
jno
and
sub
imul
jno
sbb
cwtl
lods
dec
sub
jmp
and
mov
push
jge
cmp
sbb
mov
or
mov
ss
mov
in
lds
xchg
inc
daa
dec
int
mov
fisubrl
fistps
fwait
jne
pop
jp
push
push
or
xor
aam
mov
pushl
cmc
inc
cs
jle
push
adc
push
lret
and
push
add
push
mov
pop
and
call
outsb
jge
xor
lcall
mov
jno
vpsllq
xchg
sbb
outsb
adc
sti
loopne
pop
daa
dec
scas
cltd
insb
xchg
xor
pusha
cmp
idivl
pop
xchg
mov
pop
mov
and
mov
mov
in
ja
inc
cmp
add
sub
outsb
and
dec
cmpl
or
xchg
push
xchg
sub
push
xchg
jp
fldl
nop
xlat
jg
mov
mov
out
dec
add
mov
mov
ja
mov
mov
push
fwait
jns
inc
in
sbb
pop
shl
mov
adc
jmp
cmpb
mov
pop
out
mov
inc
mov
jg
jl
data16
xor
dec
negl
push
incb
stc
pop
adc
je
cltd
and
enter
dec
adc
ret
pop
pop
ss
data16
das
push
fs
sub
xchg
pop
cmp
js
stos
enter
sub
ds
adc
mov
fistps
inc
push
ss
les
jge
in
adc
push
xchg
dec
js
or
push
mov
into
aam
inc
ret
sbb
mov
add
jmp
mov
jecxz
xchg
or
pop
lahf
imul
imull
iret
inc
sub
fwait
shrb
or
xchg
dec
mov
clc
dec
pop
xorb
lea
pushf
mov
push
sbb
and
inc
aad
xor
dec
int
subl
xchg
jnp
xor
aaa
mov
jno
adcb
in
pusha
sbb
fnstcw
xchg
ds
dec
popf
mov
imul
cmp
ss
mov
pop
jnp
push
cmpsl
sbb
aaa
cli
loopne
sahf
addl
sbb
hlt
mov
jmp
movsl
cmp
adcb
sahf
std
lea
jno
fs
setae
rclb
stos
out
fdivs
out
cvtps2pd
nop
in
sbb
mov
ds
outsb
cmpsb
addl
mov
or
adc
and
stc
int3
movsb
lock
stos
lcall
mov
ja
xor
shll
fnstenv
shll
xchg
lret
or
cmpsl
int3
push
stc
js
mov
sti
inc
xlat
or
inc
dec
inc
popf
pop
pop
sbb
xchg
sti
push
int3
mov
jb
jb
sub
cwtl
sar
adc
roll
jae
stos
jbe
adc
pop
dec
sbb
add
pop
inc
mov
out
mov
sbb
popa
test
lock
xchg
mov
insl
test
sbb
jle
sub
push
adc
adcb
or
or
cmpsl
popf
cmc
pushf
cmp
jp
movsl
xchg
cmp
jo
imul
jnp
insl
dec
mov
nop
and
add
js
mov
cld
cmpb
arpl
xchg
jbe
aad
fsubs
mov
push
sub
stos
push
jbe
xor
or
inc
mov
fcoml
xor
and
faddp
mov
clc
sbb
dec
cmp
push
jbe
push
inc
xchg
fidivl
movsb
cli
inc
je
or
jo
and
aad
not
mov
xchg
xchg
inc
sahf
inc
jl
test
dec
push
sahf
mov
stos
xchg
push
leave
ret
loope
bound
iret
pop
fdivr
lea
inc
mov
ja
imul
fcomp
jmp
lea
sbb
movsl
or
es
das
dec
push
insb
je
or
push
in
into
loope
daa
daa
daa
add
adc
push
lret
fwait
sahf
xchg
outsb
aaa
aam
icebp
dec
cmc
jbe
jae
and
adc
icebp
fcmovne
lret
sub
sub
fists
mov
cmpsb
mov
pop
mov
fsubr
pop
add
and
sbb
sbb
mov
xchg
jns
mov
sub
popa
popa
jg
or
jo
je
mov
sbb
jp
fdiv
dec
adc
push
div
and
hlt
into
sub
xchg
dec
jge
imull
shlb
xchg
lcall
dec
inc
push
inc
insb
out
jle
xchg
sbb
mov
mov
lds
orl
popf
jp
mov
cmp
insb
xor
movsl
cmc
ds
cmp
loop
jecxz
fidivrs
jb
ds
cmpl
mov
add
aam
aam
sbbl
sub
xchg
or
xor
xchg
std
sub
and
mov
push
rclb
clc
stos
xchg
imul
shl
sti
loop
imul
sub
in
adc
hlt
lcall
int3
jo
adc
imulb
jl
jne
sbb
and
jge
xor
xchg
push
pop
loope
pop
scas
xlat
push
ja
cmp
mulb
call
jno
pushf
test
inc
jp
stc
stc
or
inc
negl
mov
or
mov
jl
decl
sbb
arpl
xor
sub
push
in
outsl
xor
push
fwait
mov
cmc
rorl
lret
fcoms
push
out
sbb
jno
and
inc
add
pop
clc
sbb
xchg
fisubl
push
mov
cmp
sub
sub
adc
ja
add
xor
xchg
xchg
push
push
dec
inc
dec
out
cli
lds
jno
test
push
sub
mov
adc
mov
std
test
fstpt
adc
loopne
xor
in
shll
mov
xchg
bound
das
loopne
push
mov
inc
icebp
or
mov
aas
popa
or
aas
xchg
scas
sub
aad
sbb
sub
xchg
iret
dec
fildll
xor
mov
pushf
insb
pop
and
fmull
dec
cltd
lret
pop
mov
xlat
dec
xchg
outsb
and
sub
cmpsl
mov
xor
les
xchg
movsb
jp
pushf
push
xor
imul
mov
or
test
adc
dec
fsubs
jno
movsb
push
fucomip
or
and
leave
cmp
mov
pop
adc
les
sahf
adc
jecxz
cmp
mov
fists
stc
hlt
push
loop
jns,pt
xchg
lds
adc
loope
mov
mov
pushf
inc
sub
nop
cmp
xchg
fcompl
test
sub
idivl
mov
rolb
cld
push
mov
inc
dec
jg
mov
das
jp
or
cmp
scas
sbb
xor
cmp
add
dec
and
cli
add
sbb
xchg
sbb
pushf
inc
sbbl
xchg
push
pop
rol
jnp
pop
stos
cmp
xorb
mov
sub
or
fisttps
mov
enter
lds
lock
insl
adc
mov
arpl
mov
test
mov
pop
loopne
and
mov
jbe
jbe
ljmp
mov
add
test
stc
jmp
sbb
fistps
js
div
push
in
pop
and
icebp
roll
sub
mov
sub
in
out
and
lds
pop
jp
mov
jge
mov
in
repnz
fldl
sbb
rorb
adc
push
inc
mov
lret
add
rcr
enter
divb
add
ss
xlat
pop
out
fucomp
aas
sar
or
mov
xchg
testb
rcll
or
jb
sbb
test
pop
or
aas
add
fsubp
sub
lock
mov
xchg
mov
dec
arpl
je
mov
rorb
shrl
xchg
xor
inc
enter
bound
adc
mov
rolb
jno
test
cmpl
jg
pop
adc
adc
and
cltd
inc
pop
ds
rorl
dec
outsb
fs
nop
movsl
in
clc
adc
cmpsb
stos
sub
testb
dec
into
sbb
xor
fs
sub
jmp
jno
dec
add
sbb
lods
iret
faddl
das
aad
sahf
sbb
jp
loop
loopne
es
sub
seto
and
add
jmp
push
adc
mov
sti
pop
shrl
sbb
cli
das
sbb
dec
mov
adc
addr16
jle
into
lock
sti
sub
mov
mov
inc
clc
mov
push
stc
jno
inc
dec
sub
mov
ds
and
aaa
xor
aas
mov
xor
mov
in
or
add
lock
mov
jno
int3
push
push
pop
inc
nop
ljmp
jecxz
stos
cmp
xor
dec
pop
or
xchg
dec
dec
sub
dec
xor
sub
out
sub
jns
mov
inc
scas
dec
repnz
faddl
sbb
xor
sub
and
pop
and
aas
roll
scas
sahf
and
inc
jno
add
and
sub
pop
lahf
in
inc
mov
mov
sub
movsl
into
or
pop
ss
orb
xchg
push
xor
or
es
jne
js
pop
and
ret
fistpl
adc
dec
mov
cmpsl
ja
inc
daa
adc
loope
cmp
movsl
pop
sbb
iret
faddl
pop
loope
inc
jno
mov
fadds
into
loope
ljmp
int
test
aas
sbb
mov
mov
sub
orl
adc
in
sbb
add
mov
mov
incl
movsb
mov
cli
int3
movsl
in
je
cltd
sar
test
and
mov
push
call
mov
sahf
push
daa
stos
daa
in
sub
mov
mov
lcall
rorl
stos
pop
inc
aad
pushf
mov
and
xor
ja
loop
add
jo
xlat
adc
adc
cmp
dec
xchg
inc
jno
sbb
ss
jg
in
push
or
pop
outsl
mov
nop
icebp
int3
lea
stc
push
insb
and
loop
xor
lock
push
addb
cmp
ja
fcmovnu
inc
ret
xor
ljmp
fmull
jno
mov
mov
cmc
and
push
arpl
cmp
cmp
inc
sub
aam
jb
pop
sbb
into
push
pop
in
cmp
lcall
and
adc
frstor
adc
addr16
mov
xlat
mov
sarl
dec
movsl
mov
lret
mov
xor
cs
jle
call
cmp
adc
test
ror
push
adc
outsl
pusha
ss
aad
icebp
fucom
jmp
loopne
add
add
js
dec
clc
mov
cmp
xchg
ja
clc
pop
sarl
dec
cmpsb
call
sti
repz
push
cmpsb
inc
rcll
rorb
jecxz
cmp
pop
mov
add
or
mov
mov
loop
or
inc
sbb
fisttps
xor
dec
dec
xlat
arpl
mov
in
jge
sub
pop
mov
adcl
arpl
mov
and
sahf
call
out
jo
mov
xlat
xchg
jno
inc
inc
imul
pop
xchg
jle
imul
aaa
ja
fbld
test
pop
add
test
sbbl
xor
into
loop
mov
xchg
cmp
adc
popf
push
sub
lods
scas
mov
jp
add
je
inc
xchg
call
jmp
testl
push
cmp
adc
jae
nopl
ss
bound
push
jns
push
lret
les
jge
adc
ror
ds
sub
jg
dec
mov
jo
lret
pop
jl
in
or
sbb
adc
xor
out
mov
bound
jb
cmp
cmpsl
cmp
push
je
orb
in
pushf
fistpl
daa
rorb
sub
popa
shrl
mov
sub
cmp
ja
mov
mov
imul
pop
or
inc
cltd
sbb
movb
pop
incl
testl
jb
sub
imul
mov
dec
jp
stos
sbb
adc
or
sbb
out
dec
adc
movsl
jb
sbb
add
int
js
stos
add
cmpsb
xchg
into
sbb
movsb
sti
mov
adc
repz
imul
int3
data16
movsl
pop
pop
dec
inc
or
or
sti
push
outsb
inc
mov
outsb
mov
or
andb
xorl
jne
clc
or
push
add
push
imul
nop
jg
cs
and
idivl
in
or
roll
out
mov
mov
testl
mov
push
pop
repz
jl
jg
push
push
mov
movsb
pop
xlat
nop
push
xchg
inc
test
push
jne
sarl
jp
inc
loop
das
pop
lods
jmp
and
popf
pop
mov
or
sbb
inc
outsl
in
or
add
push
dec
inc
xor
add
ja
arpl
call
cmc
scas
jmp
mov
int3
test
cmpl
cli
cmp
add
les
inc
xchg
push
mov
mov
or
lret
xchg
or
pop
and
mov
mov
push
lahf
ss
arpl
jg
inc
test
sbb
shl
xchg
cmp
andb
lcall
jo
pop
arpl
inc
and
jnp
xchg
cmpsl
daa
adc
int3
jge
push
mov
xor
xchg
insl
mov
dec
orl
adc
push
enter
imul
adc
scas
pop
jl
jp
movsb
cmp
imul
xlat
inc
xchg
movb
add
add
sub
add
fdiv
out
inc
cs
and
mov
mov
pop
lea
ret
push
push
das
sarb
push
fwait
pop
mov
jg
add
pop
movsb
jae
jp
jmp
mov
scas
js
or
int
imul
outsb
mov
mov
out
imul
push
pop
jns
cmc
jmp
push
ljmp
push
mov
fadds
out
in
fnsave
fidivl
add
fidivl
sahf
inc
cmp
cltd
xor
push
cmpsb
scas
ret
jne
pusha
xor
int
cmpsb
shrl
mov
xlat
cmp
out
cmc
xor
xchg
sub
jns
jg
fmull
popf
aam
mov
hlt
fsubrs
inc
outsl
in
rcll
loop
lods
cli
mov
rclb
xor
jp
or
mov
xor
daa
xor
push
clc
fistpl
cld
pop
dec
fisubrl
outsl
and
cltd
jge
lahf
and
xchg
ret
call
mov
pop
test
or
jae
lahf
jns
add
and
cmp
mov
mov
jne
mov
inc
movaps
out
inc
das
inc
repz
sub
mov
aam
xlat
shrl
fdivr
cltd
xchg
push
jp
fidivrs
divl
dec
mov
pop
out
push
scas
pop
add
adc
sbb
mov
lds
pushf
fadd
stc
cmp
arpl
inc
ljmp
xor
scas
lret
loopne
mov
stos
xor
cmpsl
lods
sbb
repz
inc
cmp
sub
cmp
pop
cmpb
addl
add
hlt
push
push
icebp
js
push
lcall
sub
mov
and
jge
gs
ds
xor
xor
adc
ficompl
add
lds
push
or
je
insb
dec
jmp
pop
sbb
or
je
dec
jmp
pop
jmp
popa
inc
mov
lahf
flds
das
es
jbe
mov
add
mov
adc
lock
cltd
cmp
add
push
loop
push
stc
jne
mov
stos
cmp
shll
das
dec
fimuls
push
dec
push
sbb
test
push
jb
sahf
jp
fmulp
adc
out
ljmp
es
rclb
out
leave
popa
leave
in
int3
adc
popf
into
mov
jecxz
sti
aad
in
pop
sbb
scas
movsb
jae
cmp
cmp
xchg
adc
arpl
jp
xchg
call
ret
mov
inc
notl
cs
jne
outsl
jae
sub
ja
mov
ret
lahf
loop
stos
lret
lret
add
outsl
fs
xor
or
test
mulb
adc
shll
popa
xor
pop
mov
lea
js
inc
sub
and
pop
arpl
dec
jmp
ss
jb
cmpsl
add
cmp
dec
cmp
movsl
push
loop
cli
jbe
std
fiadds
add
fistl
outsb
arpl
pop
sub
push
cltd
sarb
ret
jecxz
dec
xor
mov
je
dec
and
aad
jg
pop
mov
dec
ljmp
mov
sbb
and
push
fs
sub
cmp
call
mov
nop
clc
lock
pop
xor
pop
mulb
lcall
mov
icebp
popf
jb
and
xor
xchg
fcoms
pop
addl
enter
sbb
pop
sarl
movsb
in
xchg
in
jne
fbstp
sti
xchg
dec
rcrb
inc
scas
into
push
pop
mov
pusha
mov
testb
popf
jbe
pop
adc
rclb
or
addr16
push
pop
fs
mov
lods
cli
test
jmp
or
in
mov
xchg
cmp
push
imul
sub
xor
xor
xchg
push
lock
outsl
add
in
push
fchs
add
cmp
mov
lods
sub
imul
aad
mov
mov
dec
or
inc
std
mov
lahf
jle,pn
mov
or
outsb
push
arpl
scas
sub
mov
push
jns
lahf
das
arpl
pop
inc
stos
fiaddl
std
xor
push
inc
xchg
cltd
out
push
xchg
stos
bnd
leave
and
xor
cwtl
dec
pop
std
std
call
enter
in
xchg
subl
xor
in
dec
push
xchg
in
xchg
or
dec
xchg
in
mov
nop
mov
push
jo
aaa
das
in
xor
popa
std
add
loope
adc
cmp
cmp
dec
cmpsl
call
inc
lret
int
sar
pop
push
mov
push
or
pop
push
hlt
lahf
fbstp
add
int3
mov
dec
add
adc
js
xchg
jae
rorl
inc
into
sub
push
cmpsl
nop
xor
mov
pop
cwtl
int
dec
inc
adc
cmp
mov
iret
aad
rcr
sbb
mov
sub
adc
lahf
xchg
andb
pop
fimuls
push
fisubl
loopne
and
std
rorl
bound
inc
data16
outsl
mov
loop
dec
mov
fistl
jb
stc
fwait
mov
fisubrl
sub
sarl
mov
add
in
jg
add
ljmp
clc
adc
cmc
jmp
dec
lods
dec
out
ret
or
pop
cld
mov
or
xchg
stos
lcall
or
inc
lea
scas
shll
xchg
cmp
push
in
inc
or
xor
movsb
mov
popa
mov
pop
fsubrp
fstl
fisttps
cmc
sbb
roll
cmp
das
rcrb
fisubrs
nop
test
js
and
sub
or
add
sbb
insl
adc
shrl
dec
dec
shl
jae
xor
xchg
xchg
in
cmpb
movsb
xchg
cltd
std
sbb
imul
add
aam
and
jnp
cwtl
mov
or
push
fnsave
out
mov
mov
addr16
fs
sbb
or
add
inc
push
xlat
mov
daa
rclb
cli
or
jb
std
orl
add
jns
or
jns
imul
or
pop
push
add
adc
lods
sub
ret
clc
mov
adc
outsl
fadd
mov
sahf
xchg
cmp
insb
or
ljmp
push
mov
jae
or
jnp
push
push
ljmp
mov
popf
movsb
std
pop
repz
mov
mov
stos
addr16
fistl
imul
push
aaa
xchg
aad
shll
shl
popf
mov
xchg
popf
mov
adc
mov
mov
lea
stos
lds
test
stc
xchg
add
ret
push
dec
mulb
jae
dec
xchg
push
pop
rcrb
xchg
xor
in
push
aad
stos
pop
xchg
aas
sub
dec
mov
jns
leave
inc
dec
test
out
cmpsb
lods
sub
je
xchg
imul
jecxz
leave
arpl
push
sbb
pop
push
cli
or
cltd
idivb
popl
hlt
clc
xchg
mov
js
addr16
jp
dec
dec
scas
adcb
hlt
test
or
xchg
inc
mov
mov
into
jbe
pop
cmp
cmp
push
xchg
popa
or
and
jge
fcomp
mov
out
sub
outsl
inc
sub
pushf
test
jp
ret
movsb
lret
lcall
xor
imul
data16
jno
mov
subl
sbb
inc
mov
loopne
push
cwtl
scas
lcall
pop
adc
aaa
mov
popl
int3
jne
mul
jecxz
or
xor
xchg
pop
push
scas
jmp
jl
popa
and
pop
fidivrs
cwtl
sbb
div
popa
push
dec
sbb
lahf
loopne
divb
mov
and
push
jne
xchg
and
lods
adc
cmc
aad
add
bound
rcrb
aam
or
dec
inc
leave
leave
xor
push
dec
cltd
push
test
inc
and
cmp
je
imul
inc
xor
lahf
jmp
pusha
sarl
lret
stos
cmp
out
lods
add
inc
and
pop
stc
mov
jge
mov
stos
icebp
mov
pop
cmpsl
gs
fwait
xchg
in
push
ljmp
rcl
mov
mov
mov
and
testl
cmp
sti
enterw
clc
rorl
mov
in
or
movsb
sbb
sub
and
jg
inc
js
push
dec
int
test
mov
movsl
adc
fsts
repnz
pusha
pop
mov
mov
mov
cs
jbe
sbb
inc
test
sbb
adc
pop
call
ret
test
cli
rol
jmp
shrl
pop
bound
imul
pop
jo
mov
and
cmpl
cmp
insl
adc
mov
lret
push
shr
out
fsubrs
jnp
in
inc
push
jg
stos
add
and
cld
mov
int3
sbb
popf
out
and
push
mov
negb
or
inc
insl
dec
dec
outsl
xchg
push
call
inc
push
xchg
dec
out
jns
mov
adc
nop
repz
fcomps
mov
mov
jle
push
idivl
icebp
movl
notb
addl
sbb
jb
data16
insl
pop
jl
inc
sub
pop
outsl
mov
sub
sub
or
add
cld
stos
lret
mov
outsl
mov
call
das
cmpsl
mov
or
adc
pop
popa
mov
div
inc
mov
mov
push
inc
jp
push
data16
push
xor
mov
ss
jno
outsl
rorl
out
je
faddp
sub
pop
adc
and
dec
rolb
lcall
mov
cmc
das
in
ret
push
mov
adc
cmp
sahf
add
mov
test
outsl
negb
into
xchg
lcall
stos
pop
jp
shll
cmpsl
mov
cmp
and
mov
outsl
xchg
sub
and
daa
push
cltd
insb
scas
adc
xchg
mov
adc
test
lahf
test
in
inc
xchg
ds
or
inc
xchg
out
sbb
and
lahf
jp
push
add
enter
cmp
popa
iret
lret
cli
jge
hlt
clc
dec
mov
pop
cmpsl
cltd
jg
adc
adc
stc
icebp
enter
cmp
pop
sarl
cmp
aaa
test
ja
jecxz
clc
imul
jg
out
insl
jmp
cmp
arpl
es
jns
out
jle
push
dec
xor
inc
mov
push
xchg
push
push
xor
repz
and
and
cmp
ja
inc
aad
inc
xchg
rcl
outsb
sbb
mov
push
mov
stc
cmp
and
aam
inc
mov
in
inc
xor
shrl
adc
jae
rep
xor
sbb
xchg
pop
jno
fisubrs
xor
inc
divb
mov
jle
insl
shrl
push
stos
sbb
js
dec
xlat
fnstenv
scas
xchg
cwtl
jne
xor
push
stos
dec
push
clc
jecxz
out
pop
push
adcb
jge
or
test
xchg
xchg
test
imul
jb
hlt
cmp
shl
and
xchg
sbb
add
in
scas
cmc
shll
bswap
jge
mov
jmp
aaa
lahf
sbb
hlt
gs
xor
ret
jg
lret
or
inc
popa
dec
scas
push
push
mov
and
filds
bound
mov
sbb
popf
or
ljmp
sub
cld
dec
jb
lods
test
mov
inc
mov
add
xchg
ds
sub
inc
pop
sti
or
add
popa
test
ljmp
jle
jecxz
add
in
cmp
ds
insb
and
lret
jl
mov
dec
notb
pop
dec
xor
shrb
out
cmp
ds
es
and
and
and
mov
pop
addl
incb
mov
in
loopne
out
cmp
das
inc
in
mov
add
jg
rorb
jb
jno
subl
jecxz
push
jnp
xchg
mov
mov
inc
mov
fsubrs
les
bound
movsl
mov
mov
dec
fisubl
push
cmovo
imul
xor
and
cmpsb
pushf
lock
ret
mov
jp
out
cli
notl
insb
pop
lret
insl
shll
bound
mov
aaa
cli
dec
mov
inc
test
cli
popf
add
cmp
inc
and
mov
and
jo
mov
sahf
xchg
outsl
sar
mov
xchg
and
jbe
inc
cmp
pop
xor
scas
shll
lcall
scas
cmp
aas
lock
clc
mov
sub
push
sahf
xor
and
sub
pop
push
inc
mov
pop
test
adc
int3
xchg
mov
dec
daa
fldenv
and
imul
mov
inc
push
inc
in
sbb
jge
mov
shrd
jb
mov
pusha
inc
sub
pop
iret
in
cmp
inc
and
cld
movsb
aam
mov
or
arpl
xchg
or
lods
mov
repnz
int3
dec
ficoms
push
jno
sub
ljmp
add
out
push
sbb
loop
popf
inc
loopne
nop
lea
inc
add
out
dec
mov
scas
fstl
inc
outsb
sbb
cs
dec
in
loope
ds
jnp
popf
enter
push
movsl
mov
sub
ljmp
cmp
andl
cld
in
sub
and
popl
jns
ljmp
mov
in
test
inc
dec
add
gs
xchg
xor
pop
sub
lods
or
inc
int3
lods
lcall
outsb
pop
sbb
fsubrs
enter
jle
adc
lds
jnp
addb
push
out
xor
cmp
adc
clc
pop
or
movsb
pushf
leave
aaa
cmp
push
ja
and
jg
nop
dec
fnstcw
outsb
test
mov
add
outsl
dec
aad
es
mov
add
sbb
jns
cltd
leave
test
dec
push
mov
cmp
dec
movsb
sbb
rorb
rolb
out
mov
stc
dec
sbb
jo
mov
push
and
test
cmp
mov
push
xchg
stos
mov
and
mov
je
leave
adc
lea
mov
fisttpll
pop
subb
shrl
cmp
hlt
push
scas
outsl
sub
mov
dec
aam
mov
shl
loop
inc
int3
jp
cmp
loopne
jae
add
scas
scas
add
push
icebp
inc
xchg
enter
filds
xchg
sahf
xchg
mov
in
and
push
mov
jp
aaa
push
cmp
push
mov
dec
mov
aad
sub
jl
mov
lods
movl
dec
pop
sbb
pop
push
ds
add
popf
mov
sti
sarb
ljmp
mov
movsl
add
leave
outsb
inc
scas
cmp
push
inc
mov
ret
cmp
adc
jns
jns
jmp
or
push
pop
sbb
aas
cmpsb
cmpsl
inc
std
rolb
adc
mov
sbbb
out
jp
lods
das
js
inc
aad
and
dec
jge
jnp
xchg
or
add
in
cmpsl
pusha
pop
xchg
cmp
sub
add
and
push
lret
xor
enter
pop
fwait
mov
idivb
lds
cld
xchg
imul
dec
pop
push
sbb
push
lods
int
push
gs
leave
add
mov
jo,pt
add
mov
xor
or
add
dec
pop
fsub
loop
cmpsb
loopne
test
jo
sbb
push
and
sbb
decb
cmp
mov
loop
pop
nop
std
mov
jb
out
jl
aam
inc
lcall
lret
pop
push
je
add
lahf
add
adc
push
pop
ds
push
scas
mov
add
dec
mov
das
les
addr16
clc
or
test
stc
aas
mov
sub
sbb
push
jb
jle
inc
jo
adc
ja
mov
loope
arpl
or
call
lret
and
jb
jns
insb
pop
add
sbb
test
adc
mov
jecxz
insl
orb
or
push
lret
in
mov
jge
mov
or
sub
loopne
aas
scas
jne
cli
sbb
nop
mov
movsl
stos
aaa
xor
jge
pop
sbb
pop
lret
adc
movsb
mov
adc
or
and
xchg
push
sbb
in
sub
jae
sahf
mov
jbe
insb
sub
inc
in
or
pop
mov
add
sbb
cltd
xchg
and
daa
sbb
sahf
call
in
test
push
add
and
pop
ret
or
push
mov
jecxz
vmwrite
dec
ficoml
jecxz
mov
loopne
js
inc
enter
fildll
roll
lods
fnop
lret
ds
jp
xor
inc
cmp
jle
pop
push
mov
xchg
or
mov
rcl
inc
mov
das
jo
in
xchg
pop
pop
scas
sbb
jae
imul
mov
push
popf
lahf
stos
mov
sbb
lods
adc
cltd
add
push
inc
dec
mov
xor
inc
mov
pop
cwtl
mov
sbb
xchg
fcomps
adc
hlt
cmp
fmul
cmp
push
jmp
mov
sbb
cwtl
jno
call
ficoml
and
arpl
adc
push
das
and
adc
cmpsb
pop
shll
lret
or
in
ljmp
test
push
adc
ret
inc
icebp
in
rclb
cmpl
mov
repz
push
sub
idivl
mov
aaa
jns
cmp
outsl
push
jno
ret
push
sbb
ljmp
dec
aas
stos
mov
or
mov
lahf
xor
mov
jb
inc
mov
inc
pop
pusha
insb
mov
popa
adc
out
stc
jmp
cwtl
cmp
xchg
jnp
test
mov
icebp
in
out
rorb
xor
jmp
pop
mulb
inc
xor
adc
sarl
cmpb
cmpsl
cld
adc
leave
pop
fdivl
or
adc
sbb
jns
and
shrl
std
pushl
lock
xchg
out
loopne
pop
mov
inc
xchg
jo
fcomps
push
loop
jmp
cld
sbb
or
adc
imul
aad
std
lds
mov
inc
leave
shl
or
bnd
jno
adc
stc
jo
inc
jmp
faddl
dec
jmp
pop
out
jg
dec
lcall
rolb
xchg
sub
loopne
mov
jp
or
jbe
jg
ret
add
push
iret
mov
test
js
pop
pop
jle
dec
stc
or
pop
mov
mov
sub
adc
test
jno
sbb
add
sub
out
gs
cld
xor
fwait
shrb
ja
out
lock
testl
mov
or
cmp
pop
push
mov
cmpsb
into
pushf
clc
js
jmp
fnsave
inc
and
and
or
inc
xor
aam
icebp
cmpsl
push
pop
je
outsb
mov
and
mov
xchg
mov
xchg
add
cmp
adc
pusha
mov
dec
xor
clc
out
xchg
imul
repnz
prefetch
or
mov
push
pusha
daa
add
pop
mov
fldcw
pushf
mov
mov
sbb
pop
jns
aam
fimuls
jge
data16
insl
push
push
lea
rorb
pop
test
adc
hlt
xor
stos
movsb
fsub
mov
mov
repnz
jmp
outsl
jae
cmp
add
inc
dec
ds
pop
mov
cmp
xor
bnd
fsubl
and
inc
pop
mov
mov
pushf
jl
out
movsb
or
mov
mov
loope
and
stos
pop
adc
xchg
es
fwait
sbb
arpl
arpl
jno
dec
inc
jae
adc
stc
push
iret
inc
or
leave
cmp
push
mov
xchg
or
int3
divl
jns
pusha
das
sub
and
push
out
fwait
and
adc
je
js
movsl
repz
js
dec
jl
pop
rorl
mov
mov
inc
shl
dec
sub
add
dec
dec
lahf
std
xchg
lock
outsb
imul
lods
fwait
cmp
add
hlt
test
out
jbe
push
mov
mov
pop
inc
loop
aam
fstl
arpl
xchg
js
xor
inc
mov
push
mov
push
movsb
xlat
push
and
mov
pop
and
popa
outsb
xchg
shrl
int3
mov
stos
xchg
das
jge
pop
inc
pop
jae
push
loope
fidivs
rcll
jg
shrb
cmc
or
loopne
arpl
pop
loopne
andl
int3
adc
sbb
arpl
sub
hlt
test
xchg
jns
into
bound
push
pop
notb
adc
popf
test
add
lcall
xchg
or
push
push
jg
in
jns
pop
and
cmpsb
adc
iret
sbb
pop
rol
insl
mov
outsb
leave
add
hlt
jb
sub
loopne
xor
fstp
out
cmp
add
loope
dec
inc
mov
out
push
shll
in
mov
pslld
xor
test
add
pop
fisttpll
pop
pop
fildl
pop
lahf
adc
gs
cmp
dec
fmulp
outsb
jp
iret
mov
cmp
lahf
xchg
repnz
cmpsb
dec
inc
scas
repz
xchg
cmpsl
jo
mov
xor
inc
jnp
inc
and
mov
repnz
push
and
mov
fimull
dec
and
loop
cmpsb
mov
ja
xchg
stos
mov
push
mov
dec
loopne
cmpsb
cli
fsts
xchg
cmp
jecxz
or
push
push
pop
fldl
inc
add
pop
fcoml
ja
xor
lea
iret
in
jmp
movsl
rolb
sbb
icebp
into
xorl
sub
cltd
or
insb
xor
jp
fs
mov
outsl
repnz
icebp
sbb
mov
sbb
bound
mov
add
sub
xchg
push
mov
int3
cmp
in
loope
jp
fdivrl
jns
xor
dec
sub
cmp
sbb
sub
negl
pop
xchg
mov
das
adc
sahf
pop
push
pop
push
jge
jae
jle
dec
cwtl
and
neg
imul
mov
movl
rcr
std
jle
mov
xchg
outsb
push
and
sbb
mov
cld
imul
jnp
inc
les
rcl
pop
mov
xor
js
push
test
add
out
nop
push
dec
fimuls
test
ljmp
stos
xchg
mov
je
je
add
out
mov
cmp
cs
adc
popf
xor
shlb
js
test
push
in
mov
add
dec
repz
mov
and
jl
dec
stc
popa
bound
dec
shr
sahf
rcll
and
imulb
loopne
fidivrl
pop
js
nop
jne
adcl
aad
popf
ror
shr
mov
xlat
dec
xchg
xchg
mov
mov
sbb
adc
leave
sarb
inc
mov
icebp
sbb
sqrtps
fldenv
mov
mov
insl
cld
inc
dec
cwtl
push
jmp
or
lods
adc
mov
fs
xor
and
scas
mov
or
mov
xchg
hlt
jecxz
inc
negb
js
test
mov
cwtl
and
jnp
test
sub
imul
dec
cmp
test
mov
push
stos
imul
das
pusha
icebp
add
nop
fisubrs
js
hlt
into
push
gs
xor
filds
mov
out
fs
sbb
mov
mov
int3
dec
negl
mov
out
jno
aas
stos
and
push
add
mov
jmp
lret
cwtl
jecxz
sub
jne
cmpsl
push
repnz
pop
adc
aad
test
cmp
push
sbb
ret
loope
cmp
or
rcrb
scas
xor
lret
mov
jne
add
sbb
jae
dec
adc
push
add
mov
xchg
xchg
mov
sub
adc
pop
test
in
or
hlt
adc
cmp
movsl
les
pop
lret
inc
sub
mov
add
gs
movsb
test
xor
xlat
mov
jns
cmp
test
std
mov
mov
je
test
bound
jae
pop
fisttpll
dec
scas
movsb
ljmp
jg
mov
sbbb
xor
sbb
sbb
jns
sti
jb
out
adc
push
outsb
jbe
out
adc
pop
repnz
jmp
inc
sbb
gs
rorl
pusha
sbbl
negl
fwait
mov
inc
loop
jmp
mov
cmp
pop
cmp
outsb
lcall
outsl
gs
push
and
mov
xchg
cmp
inc
jecxz
inc
lods
and
mov
ja
cmp
dec
jb
mov
cltd
adc
mov
push
mov
pop
pop
gs
or
add
lods
pop
push
jae
test
shll
push
dec
iret
std
mov
jo
test
fwait
mov
je
jb
xchg
sub
int
fcoms
cmpsb
adc
lret
xchg
les
aam
icebp
sbb
ljmp
add
cmp
fldt
inc
mov
lods
scas
cltd
aam
mov
and
shlb
push
inc
pop
or
cmc
loopne
pushf
fstpt
lahf
outsb
adc
cmp
inc
pop
sbb
sahf
aad
js
xchg
fmull
insl
and
cmpsl
dec
and
scas
shlb
mov
lds
cmpl
adcb
mov
pushf
jns
xor
std
jg
mov
stc
fwait
lods
jne
push
repnz
int3
int3
jnp
arpl
mov
into
arpl
xchg
test
dec
xor
lahf
mov
push
mov
lods
ret
in
das
std
int3
rcrl
dec
mov
add
push
iret
cmp
fnstcw
iret
jmp
xor
cli
mov
ss
sub
cmp
adcb
subb
mov
mov
fiadds
gs
adc
out
push
push
xlat
pushf
lahf
int3
inc
jbe
addb
loope
sub
popa
adc
fsts
jge
dec
outsl
ja
push
leave
aad
and
adc
fnstsw
or
push
cmp
sarl
xlat
add
jno
rorl
scas
and
pop
jge
stc
cmp
or
xchg
pop
loopne
icebp
dec
push
lret
add
sub
inc
aad
add
inc
or
pop
mov
sbb
inc
pop
add
xchg
xorl
add
std
mov
adc
clc
mov
sahf
mov
xchg
pop
adc
mov
adc
mov
jno
add
fistpll
mov
sub
adc
jl
mov
pop
add
cmp
sbb
jb
fsubl
xchg
xor
sub
dec
negl
movsl
out
pop
mov
gs
fwait
mov
dec
xchg
sahf
insl
xor
imul
sub
jae
std
xchg
out
fbstp
jg,pn
cmc
dec
cmpsb
in
cmp
add
ja
mov
or
jnp
repz
fsubrp
scas
lahf
cmc
push
jge
out
mov
xor
xor
sub
mov
pop
ret
dec
call
add
pop
cmp
add
adc
jb
hlt
mov
sub
cmp
mov
test
cltd
cld
jmp
inc
popf
sahf
aad
pop
std
cmp
mov
pmulhuw
jmp
and
cmpl
ljmp
int
idivl
fsubl
out
sub
lahf
pop
jecxz
mov
push
gs
loope
cmp
push
out
mov
testl
jns
jge
lret
xlat
roll
ja
sub
pop
stc
pushf
repz
cltd
and
or
out
out
dec
fimull
xchg
xchg
scas
sbb
hlt
test
fs
mov
xor
test
stos
inc
dec
test
xor
and
mov
rcr
mov
rcr
jl
jae
xchg
mov
out
xchg
ds
xacquire
push
or
adc
xchg
mov
mov
ret
fs
mov
mov
test
xchg
ds
xchg
addb
mov
sar
dec
ja
ds
outsl
push
sahf
mov
xchg
and
dec
inc
fdivs
pop
test
adc
fildll
xchg
or
jmp
stos
out
icebp
js
adc
mov
jmp
fidivs
inc
rolb
ljmp
data16
data16
pop
out
imul
movsl
inc
adc
push
push
lock
sbb
cmc
pop
test
repnz
clc
loop
jnp
sub
jecxz
loopne
inc
mov
push
shlb
sbb
sub
fistpl
jb
xchg
rcr
dec
shlb
cmp
stc
jnp
sub
movsl
push
loope
and
std
sti
test
add
sbb
jge
ret
xor
or
pop
sbb
cs
jae
aaa
xor
jp
push
flds
sub
pop
rcrb
mov
push
xor
adc
test
out
xchg
sbb
and
xchg
lds
sbb
aas
mov
adc
cs
aaa
jno
imul
push
mov
das
int
lcall
outsl
inc
fsubrs
mov
pop
mov
lods
adc
adc
jno
jb
outsb
ds
mov
fcoms
jl
mov
fdivrs
xlat
stc
cmc
or
pop
roll
sbb
sub
out
sbb
cmp
lret
arpl
fadd
adc
outsl
ror
dec
cmp
mov
cmp
fs
fildll
in
mov
in
cmp
scas
ficompl
int3
lods
adc
sbb
pop
lea
gs
add
mov
fldenv
cwtl
pusha
iret
dec
push
pop
fsts
lds
mov
sub
pop
jae
popf
inc
cmpsl
xchg
jno
push
ja
xor
test
lcall
mov
mov
movsl
push
mov
fmuls
jmp
lahf
lahf
inc
or
add
sbb
ret
xor
pop
xchg
ss
rolb
sbb
das
mov
xchg
ja
lods
ss
in
je
aam
ficoms
sbb
sysret
gs
movsb
cmp
or
cli
pop
cmp
scas
dec
or
xchg
enter
repz
shr
inc
xchg
shr
fildl
dec
jmp
ret
outsb
dec
sbb
push
xchg
add
pusha
jnp
and
sbb
out
jo
lods
mull
mov
xchg
adc
adc
test
cwtl
bound
push
mov
ficompl
mov
data16
push
jmp
push
mov
mov
xchg
adc
mov
notl
mov
bound
lods
fadds
lea
sub
mov
add
lods
pop
sbb
es
push
pop
or
inc
out
push
xor
and
stos
inc
mov
xchg
mov
dec
imul
cmp
sbb
fwait
mov
subb
daa
fs
rcr
movsb
jge
sbb
xchg
push
test
jl
mov
sub
lret
mov
pop
sub
sub
stc
outsl
pop
mov
into
sbb
cmp
mov
shll
mov
test
adc
jb
jb
nop
xchg
dec
dec
cltd
inc
fbstp
sub
mov
push
jp
mov
add
sbbl
xchg
andl
cli
test
sub
dec
or
aad
or
loop
xchg
mov
xchg
mov
xchg
ds
sub
scas
xchg
and
cli
out
adc
and
stos
je
adc
rcrl
sbb
adc
xchg
xchg
push
add
cmpsb
xchg
push
mov
mov
hlt
jg
jecxz
js
fimuls
push
sti
movsb
repnz
repnz
fs
mov
jbe
je
addb
dec
test
xor
sbb
cmp
jecxz
sub
cmp
and
add
cmpb
sahf
jno
in
rcll
inc
xchg
ds
jmp
fbld
push
dec
sbb
aad
mov
in
call
rorb
adc
xchg
das
push
fs
je
arpl
rcll
shl
daa
mov
xlat
sbb
rcrl
mov
or
mov
nop
mov
jbe
mov
int
mov
bound
mov
mov
xor
les
adc
sbb
inc
push
fldl
and
xchg
push
pop
scas
push
push
das
ljmp
fbstp
aas
and
add
sbb
lret
sub
insl
pop
js
adc
pop
jl
mov
fsubrs
out
ljmp
inc
push
das
movsl
push
cmp
dec
movsb
in
mov
and
pop
adc
iret
int
add
jno
inc
cmp
das
cld
jg
sub
mov
jnp
dec
push
and
fbld
dec
dec
cli
or
lea
movsl
insl
arpl
aas
cmc
and
lods
sub
sbb
jg
out
jno
mov
in
shlb
inc
pop
xchg
cmp
inc
and
cmpb
inc
les
mov
jno
out
pop
pop
call
lea
ror
xor
arpl
xor
repz
or
out
cmp
stos
js
mov
cltd
aas
aas
lods
pop
mov
fucomi
mov
shl
into
fwait
sub
adcb
out
jb
ljmp
jnp
pop
mov
sub
loopne
add
ret
mov
rorl
sbb
or
push
jo
shll
cwtl
lea
inc
xchg
lahf
push
cmp
out
nop
test
xchg
mov
mov
mov
aad
es
in
mov
or
fidivl
sbb
mov
add
mov
jno
sub
push
mov
sub
mov
je
mov
int3
aas
inc
add
sbb
subl
dec
sub
inc
mov
aad
lcall
inc
add
lds
pusha
int
jno
dec
jae
dec
fisubl
daa
cmp
ss
or
ret
cltd
jp
arpl
aad
adc
out
repz
mov
sbb
subl
or
or
pop
imul
sub
pop
xor
or
mov
cmp
cwtl
pop
fsubrl
dec
cmp
sbb
cmp
jnp
pop
test
mov
and
mov
adc
cmc
adc
xor
inc
idivl
dec
scas
push
gs
xchg
cs
mov
ds
in
pop
cli
or
sahf
out
rolb
aad
test
mov
lret
pop
xchg
cmp
loope
ds
pushf
cmp
xchg
mov
and
mov
das
inc
adc
and
cmp
and
mov
ds
jae
add
out
dec
push
jo
cli
adc
xor
pop
dec
adc
pop
shrb
or
xor
push
mov
aam
fwait
cmp
add
push
sti
loope
bound
dec
lea
sub
fdivrs
and
pop
sbb
scas
push
sub
mov
hlt
mov
loop
and
mov
stos
jae
xor
jb
hlt
push
cmpsl
sbb
call
jmp
ficoml
lock
stc
arpl
filds
sbb
icebp
xchg
push
jbe
and
sarl
xchg
inc
hlt
dec
and
aas
xor
notb
ljmp
jb
inc
cmp
repnz
xor
clc
insl
stos
and
sub
mov
pop
fildll
adc
enter
inc
mov
dec
out
stos
lret
iret
dec
push
popw
dec
test
test
addr16
mov
data16
jg
adc
imul
js
fnstcw
daa
inc
loopne
pushf
cmpsb
enter
pop
pop
loope
jb
test
lds
mov
pop
add
mov
ja
push
adc
dec
lea
aam
aas
pop
push
dec
inc
movsb
mov
lcall
loope
mov
js
in
mov
or
repz
cmp
lea
mov
and
mov
mov
imul
mov
es
iret
xchg
xchg
test
push
out
rolb
cmpl
test
mov
imul
bound
jmp
mov
or
push
jbe
stos
rolb
lods
adc
inc
dec
mov
lea
in
in
pop
cltd
lahf
sub
jg
ja
and
jecxz
xchg
stos
pop
into
xchg
sub
and
xchg
sub
insb
ret
out
pusha
inc
sub
pop
lfs
xor
jg
ret
xor
sub
repnz
daa
in
add
push
xchg
pop
adc
jns
inc
dec
sub
xchg
xchg
push
fdiv
push
jnp
mov
ret
enter
repnz
jb
pop
push
or
pop
mov
jae
pop
cmp
xchg
cmpsb
dec
repz
lods
je
sub
xchg
popa
loope
and
pop
arpl
clc
fsubrs
and
xor
jae
adc
adc
idiv
or
aas
lods
jae
out
repnz
test
sub
xchg
stos
test
dec
pop
ret
jle
mov
loope
lahf
idivb
loop
push
xor
aad
test
adc
hlt
fsubl
or
mov
dec
stos
scas
mov
dec
gs
pop
cld
xor
adc
sub
mov
stos
emms
rcrl
jg
cmp
call
into
int3
jl
mov
jbe
sub
xchg
pushfw
dec
out
pop
arpl
jl
movsl
insb
adc
jmp
test
dec
ficomps
scas
cmp
inc
pop
aad
xor
call
mov
add
and
mov
adc
pushw
ljmp
popa
mov
out
pop
sub
pop
pop
imul
inc
dec
jbe
into
push
ss
icebp
mov
push
push
insl
pop
xchg
or
nop
sub
stos
push
push
frstor
out
lea
idiv
movb
push
mov
loope
fidivs
in
lds
fs
mov
mov
jo
pop
or
loope
psllw
cmp
cs
loopne
or
mov
mov
mov
leave
cmp
mov
testb
xchg
bnd
shlb
jbe
sub
imulb
jmp
adc
pop
dec
inc
int
fldl
adc
push
in
mov
xor
jg
fsubs
mov
sub
pop
pop
mov
lock
int3
addr16
cmpsl
pop
repnz
cmp
jl
decb
sub
mov
mov
jge
outsl
fwait
in
and
add
push
jae
sarl
sub
xor
or
outsl
cmp
fsubp
sub
jmp
mov
jle
loop
inc
add
push
lret
push
and
jle
xchg
pop
leave
lods
leave
mov
aas
ss
in
pusha
stos
inc
sbb
inc
test
pop
rcrb
lret
in
xor
xor
push
loop
xchg
addb
dec
pop
xchg
mov
popa
pop
ficoml
pop
jno
test
jle
xor
pop
mov
mov
testb
or
mov
lret
dec
mov
stos
in
test
push
cmp
pop
test
dec
add
xchg
testl
iret
xor
pop
or
inc
xchg
or
in
adc
sahf
add
int3
xor
adc
mov
sbb
sahf
sahf
inc
xchg
mov
scas
loope
push
daa
stos
push
push
gs
arpl
add
pop
ljmp
pop
jno
scas
sub
sub
add
xlat
sti
dec
cmp
lock
ror
cmp
lea
mov
cld
ss
sub
mov
cwtl
ss
dec
leave
cli
pop
lock
test
xchg
std
push
enter
imul
or
pop
inc
push
and
shll
pop
subl
mov
dec
and
out
int
std
lcall
adc
push
shrl
sub
leave
jne
in
inc
mov
sbb
ss
lcall
test
inc
mov
clc
mov
ljmp
pcmpeqd
pop
cmp
dec
fcoml
aaa
xor
mov
mov
adc
mov
test
pop
into
out
rcr
pop
pop
sbb
scas
stos
sub
les
sbb
fwait
lret
pop
jl
pop
dec
inc
pop
xor
fsubl
je
fisubs
outsb
mov
push
cmpsl
cltd
shll
xchg
aam
fisubl
or
mov
lods
mov
jl
lcall
cmpsl
cltd
dec
lods
and
xchg
jo
push
hlt
ret
xor
inc
stos
mov
inc
pop
pusha
mov
mov
mov
adc
enter
xor
into
inc
mov
test
adc
lods
pop
jecxz
pop
in
shr
and
add
es
push
cwtl
icebp
dec
jae
adc
cmp
push
mov
lret
mov
adc
test
data16
nop
xchg
jbe
mov
jnp
xchg
imul
push
cmp
cmp
lahf
std
mov
cmpsb
sub
push
and
arpl
xchg
sub
shl
dec
iret
mov
fstps
hlt
movsl
enter
dec
push
movsb
shll
and
mov
jp
sbb
in
lea
stos
hlt
insl
mov
or
xor
cmc
fwait
fwait
push
ds
pushf
xor
xchg
pop
mov
mov
adc
outsl
nop
or
inc
dec
cmp
inc
jle
subb
fstpl
mov
push
sub
inc
adcl
adc
push
jo
gs
int
adc
in
mov
xchg
pop
xlat
push
push
imul
ss
das
mov
imul
xor
inc
sub
cli
push
cmp
mov
xchg
mov
push
cmc
into
cli
adc
sbb
outsl
aaa
mov
je
mov
ret
xchg
add
shll
pop
mov
in
jp
xchg
pusha
enter
xor
xlat
inc
das
cwtl
aam
pop
or
push
fidivrs
into
fildl
fwait
imul
mov
and
in
mov
lret
dec
ret
adc
adc
shll
cmp
xchg
daa
hlt
xlat
xchg
in
and
cwtl
push
jbe
xor
out
and
addb
jne
and
sti
out
aaa
dec
inc
repz
jns
lret
jns
popf
mov
add
add
inc
sbb
adc
je
sub
mov
cltd
fbld
xchg
out
push
jg
xor
std
lret
mov
or
lret
dec
lock
cld
pop
sub
pop
fidivl
and
mov
loopne
jg
loope
inc
dec
sbb
mov
push
and
mov
jo
out
push
test
xlat
pop
idivb
cwtl
popl
push
imul
mov
jg
pushf
and
sub
xor
ret
sbb
iret
shl
cwtl
xor
or
out
jecxz
xor
insb
adc
jecxz
inc
fdivl
push
jns
ret
push
push
insb
fstl
sub
popf
fstpl
push
aad
mov
xchg
pop
int3
lret
sbb
add
and
xlat
pop
xchg
mov
push
pusha
lods
or
sbb
fisttpl
mov
fwait
aam
dec
inc
adc
in
mov
scas
lahf
filds
sub
lods
mov
lds
cli
cmp
lret
lods
jb
stos
dec
sbb
mov
aaa
pop
xor
and
in
insl
sub
adc
xchg
lock
inc
ret
aas
lcall
dec
loop
pop
sub
loope
stos
icebp
mov
mov
pop
leave
add
sub
cmc
fwait
fwait
xlat
test
lret
and
dec
ja
in
cld
sub
fsubl
xchg
out
pop
cld
jp
iret
pop
fsts
fldl
cmp
pop
xor
pushf
nop
jae
dec
and
mov
fwait
and
pusha
xchg
pop
sub
mov
sub
outsb
pop
stos
movsb
dec
aam
icebp
jp
push
inc
stos
push
and
cwtl
jmp
stc
inc
xchg
push
fisubrs
cwtl
sti
mov
sti
add
sbb
shlb
jb
mov
test
or
and
mov
stos
sbb
jo
cltd
adcb
ss
cwtl
jns
pop
sbb
mov
jae
add
mov
ja
sbb
aad
xchg
cli
cmp
or
jno,pt
mov
loope
xlat
sti
outsl
test
bound
push
cmp
in
push
les
into
adc
xchg
mov
jp
fldcw
mov
stos
mov
inc
mov
cmp
cwtl
cmp
dec
sub
test
add
jns
jp
punpckhwd
or
aaa
std
call
mov
ja
cmp
or
jnp
adc
imul
leave
and
push
mov
pop
jne
add
xor
les
insl
dec
sub
mov
push
push
push
mov
les
clc
gs
add
sbb
es
test
hlt
loop
or
addl
test
mov
scas
adc
pop
push
and
test
pop
sub
add
jne
in
mov
ds
shll
push
icebp
jp
mov
dec
adc
cmp
mov
pop
in
lods
mov
clc
inc
stc
pusha
repnz
add
and
pushf
sub
aas
adc
sub
mov
mov
mov
out
cwtl
cmp
ret
mov
mov
push
cmp
lret
xor
out
enter
and
jnp
xchg
dec
int3
push
cmpsl
sbb
and
cmp
xlat
xchg
add
repz
mov
cwtl
int3
shlb
cmc
adc
aam
pusha
std
or
jmp
icebp
mov
lahf
push
imul
int3
lcall
add
pushf
jne
aad
hlt
lcall
icebp
jle
dec
dec
pop
adc
mov
and
js
mov
rcl
and
add
or
xchg
pusha
add
sti
ret
cmp
aad
fdivr
pop
xchg
dec
fadds
les
pusha
jb
lods
lahf
xchg
inc
cmpsl
outsl
mov
fmulp
cmp
sub
fs
data16
je
xor
dec
int3
insb
xchg
mov
cmpsl
mov
or
pop
mov
or
inc
repnz
sahf
loope
add
dec
add
dec
cmp
hlt
subb
pop
movsl
jb
and
rclb
push
subb
and
xor
or
cld
fs
stos
insl
lahf
push
fildl
inc
imul
orl
stos
ret
and
push
xor
aaa
rcr
rorl
cld
sub
sti
addl
and
xor
adc
sub
fwait
lahf
sti
dec
pushf
sbb
fdivrl
adc
pop
lods
aas
loopne
fcompl
adc
sub
adc
xor
test
jp
jle
les
push
xchg
shll
mov
cli
or
fwait
imul
inc
adc
inc
cmp
or
and
add
jp
movsb
ret
push
add
jne
mov
dec
shl
xor
push
pop
sub
call
and
sub
pop
sub
pop
stos
fsubs
lea
jp
inc
jl
in
mov
add
sub
loope
int
aam
gs
outsl
mov
call
cld
stos
ja
and
jle
sbb
lods
push
xchg
dec
mov
mov
pop
ret
xor
xchg
xor
xchg
inc
std
pop
je
aad
cmp
sbb
loopne
xorb
or
pop
hlt
mov
xorl
shll
xchg
mov
xchg
orl
mov
mov
inc
lock
mov
dec
inc
pushf
es
ret
jg
addb
jge
in
ret
add
cmp
into
inc
mov
xchg
arpl
rcr
fwait
cld
js
push
movsb
or
sti
push
mov
sbb
push
aaa
pop
gs
inc
shll
and
inc
pop
push
dec
in
cs
cmpsl
lds
mov
dec
pextrw
sbb
sbb
rorl
sti
into
mov
insb
cltd
sbb
and
sub
fldz
iret
mov
or
cld
jg
decl
inc
mov
aam
xchg
dec
xchg
mov
inc
aam
fcos
jge
out
xor
loopne
and
push
sbb
test
ret
stc
xchg
cmc
mov
push
xor
xchg
mul
repnz
sbb
pop
and
pusha
stc
ret
fiadds
and
gs
hlt
imul
adc
imull
xor
stos
cmp
jl
ret
mov
lods
pop
xchg
lret
xchg
sub
sbb
aad
lods
loopne
pop
inc
aaa
cli
mov
pop
shl
dec
lea
and
pop
xchg
and
fwait
loope
xchg
xlat
in
adc
test
popa
xchg
movsl
out
popa
lods
push
hlt
nop
pop
add
push
imul
mov
das
in
push
aaa
pop
les
lcall
mov
or
push
out
insb
mov
or
pop
out
in
or
movsl
jnp
push
xor
xor
inc
mov
sub
dec
push
sbb
cld
lea
dec
and
mov
dec
pop
stos
sarl
lahf
jae
lock
sub
daa
fnsave
inc
cmp
aad
dec
std
ljmp
pop
sti
lea
jmp
push
in
fsubrs
xor
dec
pop
iret
ja
pop
inc
test
jmp
and
jmp
dec
mov
ljmp
xor
outsl
mov
xchg
pop
or
fldcw
pop
flds
push
icebp
stc
inc
mov
call
push
je
push
push
jmp
inc
xchg
int3
pop
mov
xchg
cmpsl
insl
dec
lahf
jp
cmp
cmp
scas
xor
paddsb
push
incl
mov
inc
inc
sahf
and
inc
inc
lret
dec
mov
sti
scas
bound
lea
jnp
fs
mov
push
push
and
xor
dec
stos
fimull
arpl
lcall
les
mov
xchg
mov
ret
mov
xor
repz
inc
pop
inc
into
stos
jecxz
or
cltd
dec
test
mov
push
lret
or
jmp
xchg
testb
xchg
cli
mov
or
outsl
orl
das
stos
pop
adc
ds
xchg
or
inc
inc
mov
roll
loopne
loop
mov
out
xor
test
mov
roll
mov
and
lds
cmp
push
adc
nop
push
rorl
mov
call
js
xchg
pop
das
ljmp
push
js
mov
orb
jbe
xor
mov
movsb
dec
lock
cli
mov
outsb
jno
sub
pop
jg
cmp
fsts
test
sbb
mov
icebp
iret
inc
xchg
out
sub
pop
xor
push
xchg
lock
lcall
in
das
push
mov
pop
into
push
sub
movsl
push
js
fwait
aam
int3
dec
clc
cld
dec
mov
sbb
mov
and
int3
addb
jae
xor
push
out
repnz
cs
xor
adc
in
ret
gs
pop
mov
mov
cmp
in
je,pt
aas
mov
lea
pop
pusha
sbb
lcall
outsl
mov
pop
icebp
xor
fcompl
pushf
fnstsw
or
sub
cwtl
and
sarl
enter
jge
andl
push
pop
test
fdivp
xchg
pop
jl
xchg
pop
pop
and
out
in
shll
xor
out
mov
pop
adc
lahf
jnp
dec
cmp
xchg
sub
dec
cltd
dec
mull
lcall
std
sbbl
cwtl
xor
imul
lea
fdivrl
push
in
sub
lcall
and
jnp
fwait
bound
push
dec
xor
out
push
inc
mov
addb
imul
imul
xorl
push
push
sub
arpl
xor
jg,pt
mov
filds
mov
cmc
or
sub
fst
pop
or
and
pop
and
scas
cmpsb
addr16
xchg
jecxz
test
aas
mov
imul
jnp
push
rcl
pop
adc
xor
rorb
mov
out
pop
sub
or
and
inc
daa
mov
aaa
notb
das
xor
or
pop
aas
mov
fisttpll
xor
fwait
inc
js
add
shrb
xchg
xchg
inc
or
sub
jg
stos
mov
mov
repnz
sub
mov
inc
cs
jle
pop
xchg
lret
adc
add
pusha
cmp
push
xchg
insl
mov
jecxz
data16
imull
fbstp
dec
mov
cmp
clc
es
mov
fsubp
mov
lret
push
xor
mov
xlat
faddl
or
jnp
enter
aas
insb
loope
or
push
repz
mov
inc
iret
mov
dec
sub
outsl
sub
sbb
jp
dec
shlb
inc
xor
test
imul
push
jbe
jne
icebp
push
rep
and
mov
push
push
jg
imul
scas
lahf
mov
adc
sbb
aas
fisubrl
rolb
stc
mov
mov
mov
ds
icebp
xchg
sti
sbb
or
push
mov
daa
movsl
pop
in
dec
jnp
es
shll
test
movl
pop
inc
and
fisubrs
mov
xchg
adc
mov
sbb
lcall
cmp
addr16
xchg
push
scas
or
add
mov
popa
cmc
cltd
xor
in
add
cli
ror
mov
adc
ds
xor
fadds
jns
in
sbb
sub
test
xchg
iret
leave
lcall
push
ret
lcall
push
pop
notl
fistpl
shr
mov
adc
leave
cmp
test
sahf
arpl
mov
fildll
dec
call
roll
mov
mov
mov
arpl
jle
mov
movsb
rclb
and
sub
mov
sbb
std
mov
push
adc
adc
pop
cmp
test
adc
jns
cmp
scas
sub
adcl
pop
test
loope
ret
pusha
dec
lcall
adc
fdivl
push
adc
mov
adc
popa
mov
xchg
cmp
and
aad
xor
pop
push
jnp
pop
nop
mov
inc
mov
and
cltd
xor
sahf
inc
pop
adc
mov
loopne
test
or
jne
mov
iret
mov
pusha
cmp
xor
incl
push
popa
cmp
jecxz
popf
cmp
xor
pop
xorl
call
sbb
mov
cmp
cld
adc
jmp
loope
adc
test
xor
cmp
push
stos
push
xchg
lock
mov
and
push
jbe
daa
imul
inc
xor
jo
adcb
aas
into
imul
jae
cli
insl
pusha
sub
mov
ljmp
inc
xor
inc
inc
loope
push
icebp
mov
mov
push
xchg
nop
fsts
test
outsl
push
add
jae
adc
jae
mov
cltd
xchg
sub
jge
mov
aaa
jg
inc
cs
lock
mov
xchg
or
scas
or
jl
lcall
jmp
inc
loop
sub
xchg
add
sbb
ja
mov
adc
popf
aas
cmp
mov
sti
jl
mov
ss
stc
cltd
ret
pop
sbb
sbb
arpl
push
loopne
sbb
test
jns
jae
or
or
call
ret
mov
shrb
cmpsl
and
mov
jb
orb
push
jecxz
cltd
and
push
mov
cltd
mov
jns
call
test
push
mov
outsl
fwait
mov
enter
or
push
or
mov
xor
add
cmc
aad
pop
sar
push
dec
mov
sub
sbb
inc
mov
and
xchg
mov
test
sbb
or
inc
lcall
andl
fidivs
cli
xor
pop
loop
insb
dec
enter
or
jb
stc
lcall
out
inc
cmpsl
jns
xlat
daa
mov
subb
pop
xchg
iret
out
mov
pusha
mov
sub
sub
mov
es
cmp
faddl
repz
jecxz
incb
sbb
cmp
pop
es
bound
stc
adc
fidivs
neg
pop
aam
inc
and
es
dec
test
loopne
fistpl
out
mov
mov
pop
xor
jg
clc
inc
les
pushf
xor
pop
jbe
sub
or
repz
out
lods
jbe
and
frstor
js
inc
sub
daa
and
xchg
orl
outsl
jmp
arpl
mov
push
jl
out
cltd
xchg
je
aaa
fldt
adc
pop
jnp
insb
iret
insl
inc
dec
or
clc
mov
mov
and
sbbl
jl
daa
sbbb
xchg
cmpsb
sbb
or
pop
cmp
dec
mov
shl
ret
xchg
mov
or
mov
dec
test
sbb
xor
gs
aas
add
loop
sub
test
fldt
aam
xchg
enter
or
push
xor
cmp
sub
cmpsl
cmp
je
jne
out
xlat
xor
fwait
or
mov
mov
frstor
jg
dec
add
aaa
xor
ret
movsb
sub
adc
les
mov
stos
dec
dec
jns
push
cmp
gs
mov
mov
ds
mov
mov
fcoml
mov
mov
sbb
jbe
dec
in
aas
lret
iret
xor
cwtl
sub
lock
xchg
fimull
test
in
clc
pop
icebp
stos
sti
mov
jae
mov
add
or
int3
hlt
mov
fiadds
imul
xchg
jle
fisubrs
and
rorl
int3
add
outsb
or
shlb
pushf
movsl
inc
cli
sahf
lods
mov
mov
add
push
sub
cs
das
pop
ljmp
cmp
ja
and
pop
inc
inc
jae
adc
aad
outsl
mov
push
test
out
cmp
cmp
add
xor
sub
les
inc
inc
inc
jge
pop
push
or
adc
fsubrs
std
addl
movaps
or
mov
push
insl
pop
in
push
jl
cmp
push
ret
pop
add
xchg
iret
cli
std
call
lods
out
cmpb
adc
mov
lds
add
pop
and
jnp
cs
rolb
scas
cli
lds
out
xor
fld
cli
pop
adc
popa
mov
lods
shr
mov
fiadds
cmp
adc
in
and
lret
or
stos
sbb
inc
leave
addb
ljmp
inc
jno
inc
stc
jbe
mov
daa
lret
in
loop
adc
mov
cmc
xor
inc
xchg
xor
clc
js
test
push
mov
stos
or
cmp
inc
popf
jno
or
js
push
xor
repnz
cmp
ja
mov
jmp
add
jle
dec
mov
or
in
or
cld
mov
sub
ficoms
push
pop
lock
mov
ret
inc
lods
je
push
xchg
jnp
call
add
call
inc
or
fwait
cmp
fcompl
or
jae
mov
outsb
push
addr16
sub
cwtl
sbb
repz
mov
jg
xlat
pop
add
jnp
push
ret
bound
mov
aam
sub
fidivl
fwait
cmp
push
dec
mov
or
es
jnp
aaa
jbe
or
inc
mov
lds
push
mov
mov
sarb
jle
jg
dec
das
cwtl
push
pop
or
out
and
inc
mov
push
pop
mov
cltd
xor
mov
jecxz
pop
xchg
andl
data16
ss
loope
cmp
stos
inc
aaa
les
pushf
xchg
adc
pop
pop
inc
fucomi
jns
and
mov
lss
adc
cmp
in
das
es
mov
inc
int
aad
add
sub
and
stos
loop
mov
xlat
subb
mov
mov
adc
fwait
outsb
xor
or
xor
xchg
cmp
repz
ret
pop
adc
jbe
rorl
cmp
add
cmp
ljmp
jmp
cmp
lcall
daa
pop
pop
pop
call
bound
cmpsl
scas
pusha
sarb
hlt
xchg
cmp
fcom
jmp
mov
cwtl
femms
mov
pop
sub
es
insl
test
insb
cmc
cld
add
pop
orl
ja
dec
js
adc
stos
iret
mov
jns
out
cmp
es
add
dec
push
or
aam
sub
dec
aas
mull
push
repnz
xchg
pop
pop
shlb
imul
ret
cmp
out
push
dec
ja
push
int3
dec
cmp
pop
fucom
pop
and
jmp
jno
js
shrb
push
dec
gs
push
push
or
dec
andb
jnp
pop
push
mov
jns
ss
xchg
shrb
or
or
ds
or
xchg
inc
stc
pop
jecxz
sbb
scas
jle,pn
cwtl
movl
or
std
imull
in
divb
xor
outsl
add
std
and
jle
out
add
xchg
mov
xchg
dec
push
cmp
mov
push
out
mov
add
aam
jo
pop
in
sub
sbb
mov
pop
rol
or
lock
cmp
push
and
repnz
icebp
hlt
ret
sarb
mov
lret
xchg
pop
xchg
lea
mov
inc
sbb
push
mov
inc
movsl
cwtl
mov
fdivs
pop
pop
stc
dec
jp
xor
int3
add
push
icebp
movsl
fnstenv
daa
movsl
popa
sbb
sub
push
into
adc
hlt
test
lret
push
sbb
pop
aad
test
mov
dec
out
ja
inc
sub
clc
inc
repnz
jmp
adc
mov
clc
pushf
lret
jecxz
fidivs
rorb
loope
push
cli
jne
cmc
adc
cmp
fisttps
inc
dec
movsb
out
popa
or
mov
cmp
add
cli
jb
xor
lds
adc
lea
and
dec
and
inc
push
inc
stc
mov
rclb
shlb
movsl
and
push
sbb
imul
dec
xchg
loopne
mov
push
cmp
aas
imul
mov
cltd
sbb
pop
adc
fsubs
stos
aas
xor
mov
shr
or
in
ss
stos
cmp
aaa
inc
jb
in
repnz
andb
cmp
fisubl
icebp
into
jno
leave
daa
stos
mov
sbb
mov
es
addb
dec
mov
iret
jg
xchg
bt
lea
pusha
data16
sub
jle
mov
cmp
mov
xchg
movsl
scas
js
ret
jne
or
loop
ret
push
push
and
jne
xor
push
dec
sub
add
push
dec
sub
shrb
psrlq
repnz
dec
and
inc
add
add
out
mov
cmpsb
call
mov
push
les
dec
mov
mov
mov
xor
leave
testl
daa
jnp
sti
sbb
leave
sbb
loope
push
push
outsl
arpl
aam
add
lret
pop
pop
and
fwait
lds
xchg
xlat
cs
and
mov
and
sbb
aad
pushf
je
dec
or
mov
lcall
rclb
es
inc
add
add
jg
add
ret
jnp
cwtl
push
stos
negb
xchg
ret
outsb
inc
adc
sarb
stos
cmc
inc
cmp
sub
push
push
mov
iret
rcrb
icebp
mov
jecxz
and
cmp
add
xor
sbb
push
outsb
enter
repnz
push
mov
or
push
jmp
lcall
clc
mov
mov
jbe
mov
lahf
cli
push
cmp
add
stos
mov
in
push
jbe
xchg
add
test
aaa
or
xchg
lea
mov
xor
scas
add
loope
jb
sar
sbb
test
add
cltd
sahf
data16
stos
popf
mov
fwait
mov
sbb
adc
into
pop
out
pop
dec
lret
out
rclb
movsb
xor
push
imul
repz
push
insl
lcall
test
mov
dec
das
adc
jo
stc
rcr
cmp
xorl
sbb
xchg
xchg
andb
push
mov
jecxz
ret
inc
decb
adc
or
test
xor
mov
fnstenv
and
and
out
adc
add
sbb
sti
iret
imul
shl
push
add
push
data16
lods
mov
inc
push
scas
jne
push
push
xor
xchg
sti
popa
cmp
in
or
inc
js
lret
loope
stos
pop
insl
rorb
movsb
mov
jb
inc
loop
je
pop
and
push
sub
call
xchg
cmc
xchg
mov
sbb
lret
add
push
out
inc
lret
sub
fmull
ds
lock
shlb
mov
pop
jbe
mov
enter
sbb
test
cmc
fsts
sub
scas
lcall
xchg
or
hlt
cmp
addr16
xchg
les
xchg
xchg
inc
test
fcomps
stc
cmpsb
push
sub
adc
xor
sahf
inc
or
ljmp
jmp
jbe
mov
push
addb
enter
push
lods
xor
ja
pop
push
mov
enter
test
mov
aam
cmp
lods
cmp
xchg
xchg
imul
loope
roll
aaa
and
mov
mov
int
cmpsl
xor
sbb
icebp
nop
lds
xchg
fucomip
mov
stos
xchg
repz
test
push
mov
inc
fistpl
xor
aas
jp
jne
pop
xchg
ja
ret
std
ss
scas
mov
outsl
daa
test
aas
xchg
pushf
push
xor
js
aam
mov
fstpl
rclb
sbb
icebp
inc
push
jo
inc
and
leave
xchg
or
testb
sub
pop
dec
addr16
lret
dec
mov
jecxz
test
mov
js
les
imul
imul
push
xlat
and
inc
cmp
movsl
enter
outsl
out
mov
out
insl
lea
pushf
jbe
dec
ret
faddl
icebp
test
outsl
js
sti
sub
mov
nop
insl
decl
icebp
pop
fcoml
sbbb
sbb
pop
cltd
add
jl
aam
mov
cmp
cs
push
mov
push
outsl
xchg
sbb
xchg
mov
cli
dec
fmuls
ret
or
repz
dec
inc
fisttpl
sub
cli
cmc
pop
test
jle
and
push
es
xor
sbb
xchg
push
pusha
test
in
inc
divb
jb
add
jle
sarl
outsl
mov
test
cmp
out
popl
sub
or
mov
xchg
mov
or
aam
fistl
pop
imul
and
or
mov
fnstsw
idivb
cmpsl
out
push
loop
popl
push
int3
ret
jl
arpl
pop
je
in
mov
mov
fimull
xchg
lret
imul
pop
inc
push
adc
sti
xchg
arpl
jns
adc
cmp
enter
int3
jle
mov
loope
xchg
aas
cltd
shlb
jg
add
push
inc
jne
repz
push
xchg
cmc
ret
push
jl
jnp,pt
adc
cltd
cmp
and
adc
jno
push
imul
xor
js
adc
pushf
mov
insb
xor
cmp
push
xchg
add
xchg
pop
enter
mov
adc
popf
jle
test
xchg
sbb
ror
test
inc
mov
sbb
popf
or
pop
cmp
jp
lea
outsl
cltd
outsb
cmp
dec
mov
aad
mov
lcall
push
jp
popf
cmp
sbb
push
movsb
int3
xor
inc
js
repnz
jmp
sub
in
inc
pop
mov
bnd
xchg
jmp
xchg
xchg
pop
jb
divb
sbb
nop
add
stc
hlt
sub
push
cltd
mov
and
inc
fstpl
into
ffree
ds
loop
push
pop
inc
aas
push
push
jge
pushf
jp
int3
xchg
inc
les
xor
in
hlt
int3
sub
mov
jle
lods
sbb
pop
imulb
insl
sub
int
cmp
or
aad
inc
sar
ret
das
int
pop
cmp
ja
nop
pop
sbb
call
pop
push
mov
ljmp
xchg
xchg
das
outsb
jmp
out
jno
movsb
push
les
cmpsl
and
es
dec
cltd
loope
xchg
dec
cmp
add
mov
hlt
mov
pop
test
outsl
sbb
out
jp
mov
into
js
mov
mov
push
sbb
mov
nop
out
sub
mov
mov
outsl
add
test
mov
jg
aas
es
pop
xlat
xor
popf
subb
lret
notb
sbbl
clc
test
push
fisubs
adc
add
mov
mov
push
js
cmp
repnz
jnp
cmp
pop
mov
aad
sub
ror
jp
mov
loope
lods
inc
lret
scas
shufps
lds
cwtl
iret
mov
sub
or
xchg
and
pop
lret
xchg
pushf
sub
cmp
cmp
mov
xor
sahf
sbb
mov
lds
add
lahf
leave
aas
inc
dec
enter
dec
and
mov
mov
xchg
or
lds
inc
lcall
sbb
mov
cmp
push
push
fidivs
lds
sarb
out
addr16
lret
shl
lock
lcall
pop
mov
inc
iret
arpl
dec
ret
inc
push
pop
xchg
cmp
loop
pop
ja
pop
int3
adcb
sub
loopne
adc
jmp
and
sub
jmp
jp
cltd
sub
mov
ret
xlat
out
sti
outsb
cli
mov
mov
mov
add
imul
mov
call
mov
xchg
mov
xchg
push
lret
ds
cmp
inc
aas
lret
xlat
pop
movsb
repz
lcall
bound
stos
sub
sub
mov
xor
pop
jmp
scas
aas
dec
xchg
rcrb
inc
lcall
or
cmp
cmp
pop
adc
xorl
jp
stc
int3
xchg
pop
jle
xorb
es
mov
sub
or
repnz
pushf
jmp
xor
ret
outsb
repnz
inc
test
fldenv
pusha
sbb
shlb
int3
scas
xor
sub
or
int
enter
pusha
in
into
imul
jb
xorb
cmp
jge
pop
lea
sbb
clc
adc
ss
das
cld
push
mov
xchg
cmpsl
stos
sbb
shll
fcompl
mov
nop
mov
sahf
popa
adc
stc
xor
lahf
xchg
movsl
add
push
shll
popa
push
jge
pushf
sarl
adc
inc
inc
push
hlt
mov
xchg
mov
adc
aad
out
sti
mov
andb
loope
andb
mov
or
mov
adc
pop
dec
ret
rorl
int3
clc
testl
notl
aas
push
adc
in
pop
mov
push
or
xchg
mov
dec
lret
inc
out
and
ljmp
or
jno
xchg
mov
xchg
ja
arpl
jb
pop
lods
int3
push
push
xor
insb
mov
cmc
lea
or
loope
fs
push
and
xor
mov
lahf
mov
mov
or
push
out
xlat
xchg
mov
pop
sbb
mov
cmp
rcll
test
subb
jne
nop
rcrb
add
pop
roll
mov
insl
sarl
dec
cmpsb
nop
je
mov
and
insl
aaa
cmp
push
orl
xchg
jge
xchg
add
push
cmp
jp
inc
call
dec
sub
xchg
add
leave
cli
fnsave
push
nop
leave
std
sub
mov
sahf
sub
call
xchg
sbb
pusha
add
inc
cmp
dec
pop
dec
outsl
ret
add
mov
scas
add
jp
push
or
adc
hlt
add
lret
repz
das
xchg
mov
and
pop
lock
cmp
inc
frndint
outsb
and
jecxz
rolb
mov
jnp
cmp
insb
repnz
jg
dec
in
add
mov
adc
mov
lods
and
or
xlat
jmp
xor
push
add
mov
out
lret
mov
or
mov
push
inc
xlat
mov
dec
int
push
inc
pop
cmp
mov
xchg
jns
and
sub
mov
fistpll
insl
inc
push
cmp
cli
jl
mov
fimuls
movsb
data16
inc
xlat
xchg
lds
jecxz
pop
dec
out
xor
mov
cmp
xchg
cmp
pop
sarb
xorb
test
dec
pushf
lods
xchg
addr16
bound
mov
pop
outsb
test
jge
mov
mov
mov
insb
push
mov
adc
ret
pop
sub
mov
mov
jo
leave
aaa
cmp
push
ss
in
sti
mov
enter
sbb
adc
dec
loop
mov
data16
xchg
jbe
pop
push
jecxz
gs
adc
test
pop
dec
push
int
push
cmp
scas
fsubrl
out
mov
lret
push
add
sbb
adc
xchg
or
sub
jbe
fidivrl
adc
lahf
mov
subb
inc
mov
cmp
fwait
sbb
sub
cmpsb
arpl
adc
mov
and
aaa
xchg
aad
jns
rcll
cmc
data16
jle
pop
in
out
adcl
test
jno
nop
push
fwait
push
xor
repnz
idivl
and
sbb
sbb
ja
fadd
popa
dec
mov
lea
enter
inc
xor
out
sub
test
ss
mov
mov
xchg
push
aaa
pop
fstpt
or
mov
sbb
filds
pop
loope
test
ss
inc
xor
cmp
push
pushf
adc
loop
shlb
jle
adc
sbb
adc
divb
mov
xor
mov
arpl
adc
push
shll
adc
xlat
addr16
sahf
aam
fs
ret
stc
arpl
cli
sti
adc
jg
adc
adc
in
cli
mov
iret
call
dec
cmp
leave
cmp
lret
pop
in
or
pop
lret
jecxz
mov
insb
inc
aaa
add
outsl
xchg
jno
inc
jg
pop
xchg
in
mov
imul
sbb
mov
or
hlt
repz
lcall
sub
or
push
imul
push
jle
inc
nop
daa
xlat
push
sub
pop
stos
mov
mov
movsl
stc
jge
enter
jg
xchg
mov
cli
imul
sbb
lds
or
push
jmp
jl
adc
imull
lret
dec
imulb
pop
dec
ja
inc
cltd
dec
jmp
pusha
adc
fucomi
out
adc
loopne
test
adc
pushl
loopne
dec
nop
gs
xorl
mov
sub
sbb
jge
sahf
push
pop
cltd
jno
fidivrs
xchg
mov
sbb
sub
mov
and
or
in
outsb
push
data16
call
lahf
adc
lret
les
push
lock
cltd
dec
repnz
in
cmp
inc
out
push
xchg
inc
mov
stos
mov
fnstcw
sbb
mov
ljmp
test
ja
sarb
adc
mov
pop
pop
xor
jno
sahf
xor
dec
test
aaa
test
lock
test
aad
inc
aas
jo
xchg
stos
test
push
push
sub
lods
push
mov
add
out
xor
pop
mov
das
inc
xor
fs
mull
inc
mov
sub
test
jge
cmc
jno
lret
sbbl
sahf
jo
stc
dec
pop
popa
xchg
xchg
sub
push
and
outsb
arpl
ljmp
mov
adc
daa
rclb
cmp
dec
sahf
jp
cmp
cs
ret
mov
push
shl
icebp
dec
pop
mov
add
sbb
dec
sbb
pushw
xor
add
jns
loope
inc
push
pop
lahf
enter
popa
mov
test
lea
fnsave
aam
pop
mov
movsl
xlat
sub
jle
jl
repnz
adcb
es
pusha
iret
icebp
int3
pop
ja
popf
imul
adc
push
pusha
mov
jne
sbb
aas
outsb
imull
xor
repnz
je
mov
sub
roll
mov
cmp
xchg
jb
mov
test
adc
divl
sub
xchg
fstpl
out
movsl
mov
push
jno
jne
repz
in
inc
and
push
cmp
push
fxch
cmp
stos
sbb
dec
push
mov
sbb
lret
cmp
insb
loop
in
std
xor
scas
out
sub
fldcw
sbbl
xor
jae
int3
adc
cltd
lds
mov
out
cmp
inc
loopne
cmp
jecxz
nop
mov
das
sub
mov
sbb
mov
adc
shll
jp
cmp
jmp
std
mov
sbb
dec
mov
add
imul
inc
inc
lods
cmc
inc
inc
sub
ds
mov
cmp
ficoml
xchg
int
xchg
pop
xor
xchg
cmp
aaa
add
push
daa
xor
jnp
xchg
scas
xor
xchg
fnstenv
bound
xchg
sub
xchg
sub
xor
cmp
xchg
lea
and
jb
xchg
in
lods
mov
adc
leave
js
push
and
push
xchg
loope
pop
xchg
adc
jb
bnd
fnstenv
ds
xadd
or
addr16
xor
mov
dec
pusha
cmp
jo
cmp
inc
xchg
inc
adc
cmpsb
push
rorl
mov
aaa
jo
pop
paddb
int3
sbb
test
stos
pop
stos
testb
mov
in
testl
arpl
sbb
in
stc
rorl
cmp
xor
cmp
cmp
daa
sbb
sbb
ficoms
stos
lods
cmc
nop
and
push
jbe
lock
imul
sub
pop
mov
cmp
dec
int
mov
jl
mov
pop
mov
jecxz
adc
adc
jb
cvtps2pd
pop
sbb
and
fwait
jne
sbb
push
cmc
sub
and
out
clc
cwtl
mov
dec
and
mov
mov
negl
or
jge
inc
popf
xlat
cltd
pusha
outsl
ficoms
test
mov
sbb
push
iret
mov
add
hlt
jno
js
add
test
pop
mov
aaa
push
lea
out
push
or
in
in
adcl
or
add
xchg
cmp
repz
daa
push
dec
mov
push
fnstcw
test
jp
icebp
sbb
nop
jo
rcll
stos
sbb
pushf
scas
mov
popf
jae
out
cld
or
stc
aad
lock
pop
mov
cmp
in
jp
stc
jae
cwtl
dec
jg
scas
outsl
jbe
inc
inc
inc
adc
in
negl
lret
imul
in
fs
lock
dec
cld
pop
arpl
sub
in
ret
mov
push
mov
push
jl
loop
jg
cmc
repz
in
mov
sbbb
aaa
xchg
mov
mov
and
mov
cmp
cmp
outsl
dec
push
cmpsl
adc
pop
mov
xchg
pop
xchg
inc
out
inc
test
mov
lcall
icebp
or
notl
or
jne
add
jo
pop
cltd
dec
mov
inc
adc
daa
je
or
fcompl
inc
pop
inc
lcall
mov
mov
mov
test
sbb
cld
or
pop
mov
dec
out
pushf
mov
outsb
push
adc
ja
clc
or
out
push
shll
fwait
movsb
movsb
movsl
out
in
movsb
popa
das
adc
into
aam
lcall
lret
sar
or
nop
int
jle
and
pusha
push
sub
testb
xor
xor
insb
xor
inc
xchg
mov
sbb
clc
add
inc
hlt
test
iret
sub
inc
jmp
jns
test
loope
ljmp
test
and
pushf
notb
inc
jge
or
jge
loope
jno
or
add
jl
xor
lcall
fadd
xor
filds
inc
mov
jbe
addb
clc
mov
xlat
lds
add
xchg
lods
outsb
xlat
cld
ds
mov
data16
in
int
test
scas
movsb
push
dec
xchg
test
cmp
ror
add
mov
clc
test
js
fwait
testb
ds
add
mov
pop
mov
les
dec
xchg
and
in
and
lods
pusha
ds
mov
mov
inc
idivb
push
xor
mov
jb
inc
push
and
cld
sub
out
loop
dec
sbbl
mov
rcrl
cmpsb
sti
fadds
cwtl
adc
aaa
and
sbb
popf
fwait
dec
fsubl
push
shlb
inc
addr16
pop
pop
ja,pt
adc
mov
lock
paddq
push
adc
jle
pusha
in
in
pop
fldenv
sbb
stc
and
cs
push
pushf
inc
add
arpl
fstpl
mov
dec
in
mov
outsl
pop
sbb
add
enter
add
lret
stos
adc
or
lcall
ficomps
push
and
add
mov
inc
mov
pop
aad
sbb
or
fstpt
push
mov
idiv
jp
sbb
cmc
imul
shll
and
dec
lds
add
jns
dec
push
mov
add
gs
dec
ret
pop
mov
bound
or
inc
icebp
inc
dec
xchg
xchg
cli
cmpsl
ss
inc
cmp
mov
inc
mov
icebp
inc
sarl
mov
sub
sbb
call
pop
mov
ljmp
add
test
imul
cmp
cmp
mov
outsl
sub
cmp
mov
sti
mov
hlt
imul
sbbl
and
lods
je
addb
lea
jecxz
push
out
outsl
pop
pop
mov
push
fwait
out
in
pop
and
test
mov
jg
jecxz
mov
push
inc
jo
cmc
xor
jl
fnstenv
jecxz
lds
xchg
cmp
lock
push
rolb
inc
sbb
mov
mov
push
jae
dec
cmp
mov
imul
dec
adc
fwait
pop
dec
inc
adc
push
cmc
mov
jno
inc
add
ret
xor
mov
mov
cmp
cltd
sub
rcll
arpl
or
dec
cltd
jns
sub
or
inc
mov
push
mov
in
xchg
pusha
nop
lcall
jo
scas
ljmp
pop
popf
push
inc
imul
jns
pop
sti
pop
pop
pop
ret
add
aas
rorl
push
sbb
insb
and
jae
fcompl
mov
and
in
cli
cmp
jo
and
sbb
add
push
xlat
scas
inc
imul
xchg
aas
mov
xchg
clc
les
pop
mov
pop
pop
jo
lret
sbb
out
ja
jg
sti
jmp
mov
jl
ficoms
test
negl
or
iret
mov
mov
sbb
xlat
sbb
jmp
add
pop
and
cmp
cmp
shrl
mov
sbb
lret
mov
cltd
pop
hlt
ja
lock
int
ds
add
pop
mov
push
jg
sbb
push
mov
and
aaa
sub
cli
fwait
inc
push
push
inc
add
xor
add
clc
or
loope
aad
cmp
push
test
mov
dec
movsl
jnp
pop
xchg
lret
cmc
jne
jb
adc
pop
das
mov
xor
out
mov
mov
test
jno
push
xchg
xchg
cwtl
or
dec
sub
outsl
loopew
mov
in
pop
add
dec
push
outsl
arpl
sbb
test
sub
fs
xchg
cmpsl
inc
dec
popa
enter
sbb
lods
fsubrs
push
mov
addl
push
mov
sarl
enter
in
mov
mov
pop
bound
das
lods
cld
xor
mov
adc
loope
xor
imul
adc
pop
adc
rol
xchg
inc
lea
pop
cmpl
shlb
in
jne
push
lds
and
xor
push
xchg
xchg
shll
dec
inc
or
sbb
inc
pop
push
cld
pop
or
cwtl
lahf
or
fwait
mov
jo
mov
lock
add
out
les
lock
repz
push
inc
imul
mov
sub
test
data16
inc
add
and
adc
cmpsw
and
xchg
mov
sti
mov
rclb
in
popa
sub
ds
out
rolb
cli
xchg
int
stos
lea
clc
bound
pop
sbb
xchg
enter
adc
cli
dec
addb
lea
cld
jle
cwtl
dec
jb
xchg
filds
scas
and
push
xor
cmp
xchg
and
imul
imul
mov
xor
gs
dec
mov
sub
andl
xor
jo
lods
clc
cld
push
xor
pop
out
jbe
popf
add
sti
cmpsb
add
roll
fnsave
cmp
inc
out
push
es
xchg
push
sbb
mov
das
sbb
sbb
pop
in
push
ss
xor
cmp
inc
daa
jbe
push
jmp
out
add
push
dec
xchg
sub
push
mov
insl
fldl
rdtsc
and
mov
sbb
adc
js
stos
jo
bound
mov
dec
sub
add
aas
and
dec
sbb
loopne
aas
imul
outsl
ljmp
mov
push
cmp
cs
add
lock
push
out
into
and
cld
nop
push
in
pushf
xlat
mov
pop
xchg
and
sbb
sahf
ds
sbb
fisttps
clc
dec
push
dec
bound
in
sarl
mov
push
ljmp
imul
xor
xor
xchg
pop
testb
dec
fildl
add
xchg
fcomps
hlt
shrl
roll
les
sarb
in
xor
inc
in
xor
inc
test
adc
jge
lahf
mov
das
sahf
sbb
xor
outsb
or
or
nopl
push
adc
sbb
sahf
mov
rcrb
inc
mov
popaw
adc
lret
add
push
sub
mov
pop
test
rcrl
mov
data16
and
cmpsb
xor
call
scas
push
jbe
cmp
sti
jmp
jle
je
pop
and
sbb
pop
push
stos
or
add
push
and
or
ljmp
mov
xor
or
push
mov
push
jp
lret
sbb
xchg
or
out
ficompl
and
push
ja
sahf
movsb
imul
icebp
lret
and
or
cmp
scas
stos
lret
sub
push
test
ljmp
ds
std
add
xchg
pop
add
mov
push
sub
push
jns
aas
dec
jo
out
sub
test
mov
mov
dec
jno
or
enter
sahf
aas
mov
daa
int3
xchg
pop
jl
mov
adc
imul
cmp
xchg
push
xor
jo
sub
cmpb
cld
and
xor
repz
xchg
inc
xor
fsubr
shrl
mov
subb
test
dec
and
add
sub
cmpsb
dec
lret
mov
stos
or
nop
push
fsub
mov
mov
rcr
xchg
sub
frstor
xor
dec
insl
jl
test
and
pop
in
mov
sbb
mov
mov
sbb
jmp
sub
sbb
cld
mov
ret
sub
add
or
sbb
leave
fwait
jne
dec
add
orl
jb
mov
push
ret
mov
xor
pop
enter
repnz
inc
xor
push
in
cs
outsl
xor
daa
xlat
and
cmpl
pop
mov
int3
mov
sbb
sub
orb
pop
dec
push
or
imul
aaa
jl
iret
addl
stos
sub
mov
dec
and
and
pop
mov
push
push
leave
stos
stos
add
push
mov
xchg
shlb
add
add
push
insb
movsl
ljmp
mov
idiv
adc
fwait
rclb
adc
cli
into
ffree
loop
mov
or
xchg
cltd
repz
sahf
insb
fxch
jno
mov
inc
jnp
jmp
mov
add
push
inc
aaa
pop
inc
mov
xchg
arpl
cmpsl
outsl
orb
js
jg
aam
dec
enter
ret
mov
xchg
cmc
sarl
adc
push
and
sbb
push
dec
std
dec
ficompl
in
mov
int
rclb
or
enter
unpcklps
sub
push
aam
inc
insb
jae
mov
in
dec
stc
jno
repnz
sub
xor
sub
mov
fcmovnbe
fwait
push
and
test
imul
push
aaa
fimull
mov
aad
pop
sbb
jmp
sbb
notl
scas
push
cli
cld
gs
jmp
insl
stc
in
loop
daa
in
fisttps
rcr
pop
lds
inc
faddl
inc
fnstcw
lea
sbb
or
outsl
int3
int
pop
inc
orl
add
mov
jb
cld
ds
or
popa
popa
pop
in
rcrb
daa
xor
xor
sar
sub
std
loopne
push
jnp
call
mov
mov
outsl
jmp
or
push
or
test
cmp
roll
pop
js
fsubrs
cmc
test
lret
inc
iret
out
pop
in
and
test
out
sbb
pop
add
cmpsl
mov
jmp
loop
outsl
jp
popa
ds
mov
push
mov
adc
pop
inc
test
jmp
int
iret
mov
mov
nop
rclb
push
dec
loop
push
addl
pop
add
push
xchg
xchg
mov
fldenv
in
aaa
inc
mov
cwtl
mov
das
lahf
cli
cltd
sbb
sti
inc
inc
repnz
hlt
divb
cld
jb
or
fildll
fsubr
imul
decb
mov
std
adc
pop
jb
aaa
mov
lret
xor
add
fisttpll
mov
fldt
insl
gs
inc
js
lock
dec
lret
mov
or
inc
stos
hlt
shll
mov
xchg
dec
xor
icebp
hlt
inc
hlt
loopne
stos
mov
sub
dec
std
cmc
dec
mov
ss
cmp
ss
int3
les
into
mov
dec
cmpb
repnz
sbb
repnz
sbb
fmuls
mov
jne
sub
mov
lret
inc
or
sbbl
dec
mulb
mov
or
cmp
popa
jne
inc
mov
lock
mov
and
mov
dec
inc
mov
stos
xchg
push
scas
inc
jl
jle
repz
push
fmul
jge
ja
adc
cmp
cmpsl
ret
push
pop
aad
jns
jp
sub
fldenv
cmc
xchg
push
cwtl
lods
outsb
and
add
jmp
jg
movsl
es
xchg
loop
bound
cs
xor
lcall
mov
pop
fs
push
push
cmp
pop
jo
addr16
fldcw
mov
ret
dec
dec
pop
mov
out
jg
xor
lret
jecxz
sbb
sub
push
icebp
push
push
pusha
dec
inc
into
nop
mov
cmp
mov
mov
jmp
dec
push
lods
and
sahf
dec
mov
inc
sub
jo
lods
mov
sbb
mov
cli
mov
addb
bound
jno
xor
sbb
or
mov
out
adc
xor
leave
int3
inc
or
xchg
cmp
ljmp
fbstp
mov
add
andl
cwtl
std
jmp
fwait
or
iret
fbld
les
stc
and
jecxz
jp
outsb
or
dec
mov
out
push
ds
test
pop
jne
xchg
xchg
and
cmp
xor
push
lret
popa
push
mov
pop
mov
idiv
xor
repz
leave
sti
cmc
or
mov
xchg
dec
repnz
subl
xchg
cld
into
adc
inc
jle
fnsave
or
xchg
test
in
or
fimull
jecxz
mov
dec
in
or
enter
cli
xchg
mov
ror
mov
xor
je
mov
mov
xchg
sbb
inc
pop
in
push
mov
xor
mov
inc
ss
xchg
repz
pushf
jg
iret
add
out
leave
mov
dec
xor
sahf
sbb
sahf
rolb
arpl
je
sub
les
in
inc
jae
mov
sub
ja
sbb
mov
add
mov
ficompl
xchg
sbb
jno
push
pop
orl
xlat
scas
pop
inc
daa
xor
dec
jmp
test
fiaddl
cs
mov
rorb
mov
insb
and
mov
and
jmp
orb
mov
push
fwait
into
rcl
or
sub
mov
iret
push
push
fstps
out
mov
shrb
mov
sbbb
xor
lret
mov
or
cmp
sub
mov
dec
ss
jns
out
cli
repz
jge
inc
cmp
repnz
ja
imul
xchg
cmpsb
mov
popa
popf
sbb
les
pop
pusha
dec
fbld
in
push
dec
leave
pop
pop
push
mov
fwait
xor
cmp
pop
aas
cmc
into
cltd
bound
loopne
outsb
cmpsb
xor
rol
clc
cmovge
add
jne
jp
pop
popa
push
cmp
push
outsb
mov
sub
aaa
jmp
outsl
push
aad
cmpsl
ja
jnp
das
mov
es
jbe
inc
adc
lahf
out
scas
inc
and
arpl
ficoml
or
mov
mov
out
ret
jecxz
jno
cmp
ret
fucomi
sub
jl
outsl
insl
xlat
fnsave
mov
dec
outsb
ret
scas
jg
pop
cmpsb
jg
jg
pushf
xchg
fs
jbe
arpl
sbb
loop
inc
decb
jbe
aam
leave
xor
mov
dec
sub
pop
jne
shlb
orl
sbb
repz
lock
push
or
sub
mov
inc
shrb
or
jnp
out
push
or
push
push
test
scas
rorl
xchg
mov
lods
jo
imul
jmp
mov
push
shl
out
or
inc
popf
sub
pop
ds
lea
fsub
lods
lret
xor
push
mov
sub
cmp
pop
cmp
add
sti
subl
imul
cmp
mov
pop
inc
in
leave
jns
stc
mov
shr
daa
push
lods
out
and
xor
add
jge
xlat
iret
inc
mov
ficomps
xchg
icebp
mov
out
test
and
in
shrb
pop
jg
xorb
pop
inc
iret
sbb
outsl
dec
and
scas
test
movsl
jne
aas
loope
out
sbb
sub
test
mov
test
pop
out
sub
inc
jo
cmpsl
out
aam
xor
cwtl
fdecstp
loope
fdivrs
adc
popf
and
cmove
fmul
enter
test
test
sarl
int
push
rep
movsb
push
push
xchg
leave
popa
xor
ret
mov
test
int3
mov
test
pop
pop
mov
outsb
addb
icebp
sbb
pop
js
ljmp
ds
xor
aas
outsb
push
sub
call
fsubrl
es
fsubrl
andb
pop
push
neg
xor
shlb
cld
stos
mov
adc
std
xchg
fwait
mov
xlat
sbb
lret
xor
and
mov
cmp
dec
cmp
inc
in
test
fidivrl
pop
pop
andb
xor
mov
lret
mov
ret
push
roll
mov
cmp
test
or
inc
xor
jno
push
icebp
lret
mov
adc
xor
sub
dec
jae
adc
xchg
xor
fldt
pop
inc
movsb
pop
jbe
stos
sub
push
scas
bound
loop
test
dec
mov
leave
std
inc
or
aad
mov
leave
ficompl
loop
popf
xchg
mov
call
adc
loopne
sbb
aam
add
inc
aas
jp
imul
and
je
push
lods
lea
loopne
xchg
lods
dec
scas
fs
adc
mov
dec
push
dec
inc
mov
xor
sarl
icebp
lods
mov
shrb
adc
xchg
sub
jnp
push
jp
scas
sub
cmp
int
inc
dec
push
adc
push
mov
or
arpl
rorl
add
push
jb
cmp
fidivl
aas
mov
ljmp
addb
jecxz
push
outsl
std
stos
pop
mov
mov
lahf
lcall
inc
out
call
sub
lods
movsl
pop
es
xor
cli
dec
push
repz
call
shll
and
jle
mov
adc
mov
stos
orps
std
ret
rorl
pop
pop
mull
xchg
inc
dec
sub
sub
push
nopl
inc
leave
scas
call
frstor
movsb
pop
add
xchg
push
cmc
je
sbb
in
adc
cltd
sub
dec
je
test
stc
iret
call
cld
adc
jg
dec
push
mov
daa
nop
xor
dec
jg
int3
mov
or
xchg
sbb
cmp
or
shld
les
inc
test
mov
mov
inc
dec
cmp
mov
dec
cmpsb
push
pop
inc
call
push
insb
jp
xor
stos
mov
xor
rcrl
add
sbb
shll
dec
loopne
out
mov
scas
mov
cmpsl
dec
fwait
test
outsb
xchg
mov
arpl
push
pop
shll
mov
xor
sahf
sbb
pop
sub
and
pop
xchg
jbe
dec
and
ds
pop
ljmp
es
mov
fsubrs
in
lahf
orb
mov
mov
js
in
jbe
ret
repz
hlt
add
mov
sub
mov
test
mov
fdivl
lret
xchg
testb
push
xchg
movb
test
sbb
xchg
mov
or
push
inc
adc
scas
jns
mov
xor
pop
add
xor
mov
mov
pop
fsubrl
push
xchg
push
dec
es
xor
in
nop
outsl
les
mov
fnstsw
sub
or
cmp
inc
add
xchg
movsl
jnp
rclb
ds
lret
in
daa
and
jo
or
add
sbb
loopne
in
outsb
sub
div
mov
push
mov
movsb
dec
xchg
int3
jae
pop
out
fstps
lods
int3
fisttpll
push
sub
sbb
in
xchg
mov
dec
int3
hlt
mov
pusha
gs
jecxz
add
aas
jl
jl
iret
hlt
pop
psubsw
dec
mov
inc
sti
xor
mov
mov
in
jl
mov
and
lods
fadds
insl
mov
adc
notb
mov
xlat
stc
psllw
or
inc
into
xor
clc
adc
xchg
into
jg
or
xor
dec
movsb
shlb
std
leave
enter
pop
or
test
push
mov
dec
cli
sahf
cmpb
cld
jp
out
dec
mov
enter
pop
pop
mov
loopne
sub
dec
add
repnz
push
adcl
jge
inc
ret
sub
insb
out
xchg
jmp
sub
pop
mov
cmp
mov
pop
bound
add
movsl
test
sbb
inc
push
rolb
je
xlat
xchg
add
mov
filds
jb
push
xor
cli
or
in
ds
push
pop
inc
stos
add
scas
xchg
xchg
xchg
xchg
inc
add
inc
fstpt
scas
loopne
and
mov
sub
bound
cmp
cmc
popf
mov
push
push
push
fwait
mov
pop
pushf
aaa
xor
pop
and
cld
ss
xchg
or
mov
fcmove
js
mov
std
rorl
or
iret
enter
hlt
jo
adc
int3
cmp
push
mov
daa
pop
cmp
lret
cli
inc
nop
pop
lods
shlb
add
jne
repnz
mov
outsl
jae
pop
push
stos
push
sbb
ret
inc
pop
cltd
push
jge
iret
bnd
ljmp
sbb
pop
push
lods
ficoml
nop
aad
loopne
shll
sbb
add
insb
popa
fstp
xchg
mov
inc
mov
mov
jle
mov
dec
imul
shrb
push
push
scas
arpl
cs
mov
add
out
xlat
jno
add
push
mov
xchg
pop
sub
outsb
inc
punpckhbw
movsl
movsb
lret
scas
jns
or
sbbb
inc
mov
stos
inc
dec
add
push
xor
daa
xchg
addr16
xor
mov
and
aad
hlt
fucom
xor
dec
mov
rol
adc
push
jmp
aad
mov
icebp
gs
fwait
lcall
out
das
jp
into
inc
xchg
cmp
push
pop
cwtl
shll
test
or
stc
mov
lret
int
rep
or
clc
mov
adc
iret
cwtl
dec
scas
mov
jno
lea
leave
das
rol
pop
pop
and
xchg
lods
xor
ds
pop
dec
jp
call
push
mov
stc
adc
pop
cmp
or
jmp
fists
lahf
in
jecxz
in
add
scas
sar
imul
cmp
movsb
ja
xchg
jo
test
icebp
test
inc
lret
into
jg
stos
mov
mov
ljmp
sahf
out
sti
inc
int
rorb
cmp
mov
fdivrs
popa
xor
shlb
or
or
push
movsb
push
lret
ss
adc
testb
inc
in
outsb
adc
push
movsl
pmaddwd
aaa
cmp
int3
cmc
ficoms
lret
shrl
adc
cmp
or
pop
push
stos
jbe
push
sbb
pop
inc
mov
mov
sub
andps
loop
push
aad
push
popa
sahf
fidivrl
pop
xchg
test
aam
lahf
outsb
ljmp
push
rclb
pusha
aad
lret
or
cmpsl
jo
out
inc
xchg
fcmovnu
jo
and
addr16
jle
pushf
das
je
add
es
inc
scas
xchg
mov
xchg
and
lahf
and
push
dec
je
mov
cmpsb
adc
enter
test
inc
inc
mov
cmp
das
lret
mov
mov
flds
mov
dec
rcll
mov
mov
ja
out
push
pusha
mov
cltd
mov
lret
pop
das
les
rorb
mov
fwait
add
adc
iret
dec
push
call
aas
push
pusha
inc
es
fstp
dec
mulb
sbb
add
xor
imul
ds
pop
pop
shll
daa
stos
int
test
pusha
in
inc
pop
push
insb
sbb
sbb
mov
cmpsl
sub
mov
dec
inc
mov
mov
fidivrs
mov
adc
mov
sub
aas
jno
lahf
mov
adc
cmp
cmp
mov
loope
dec
stos
sub
jbe
push
test
ja
jo
sub
nop
jo
in
cmp
out
push
cmp
xchg
mov
mov
or
out
pop
xchg
adc
cwtl
push
aas
xchg
lods
mov
nop
pop
int
dec
clc
cmp
dec
pop
loopne
lds
jns
sub
jnp
ja
xchg
pop
sbb
shl
mov
cwtl
inc
pushf
bound
push
add
push
push
mov
stc
jne
or
loopne
cmp
or
daa
mov
subb
mov
push
in
mov
data16
fldl
insb
sbb
lock
push
sar
xchg
xor
js
dec
shll
push
mov
jmp
add
jae
test
iret
mov
dec
insb
ret
add
popf
scas
jmp
or
sbb
add
es
push
sahf
or
fnstcw
cltd
or
mov
xchg
icebp
adc
rcrl
mov
stos
rol
aas
dec
sarl
mov
pop
mov
xchg
jno
clc
xor
mov
ficoml
jecxz
jns
hlt
outsb
scas
notl
std
pop
add
and
dec
ret
fwait
add
pop
ror
les
pop
or
pop
xchg
loopne
les
mov
sahf
push
add
push
sub
jb
popa
sbb
and
inc
xchg
mov
xchg
xor
into
stc
or
movsl
adc
inc
sub
inc
sbb
or
xchg
mov
mov
xor
insl
cld
cld
frstor
push
jle
sbb
fbld
mov
daa
pop
add
imul
ljmp
pop
mov
test
imul
and
in
jbe
mov
nop
movsb
xor
cmpsl
cmp
cmp
ja
jnp
popf
mov
movsl
sub
sbb
inc
add
dec
mov
and
dec
mov
add
mov
cmp
mov
or
jno
stc
mov
add
pop
gs
or
sahf
xor
mov
cwtl
mov
decb
mov
push
sar
je
sbb
cmp
pop
dec
ja
movsl
rcll
cmpsl
movd
rclb
dec
add
out
xchg
push
push
imulb
ds
testl
jge
xlat
jmp
xchg
sbb
or
cmc
sbb
push
xchg
lds
xor
hlt
adc
xchg
sub
hlt
jae
sub
insb
xchg
xor
in
and
stc
xor
lret
adc
push
loope
push
mov
lods
adc
rclb
cwtl
ret
in
call
les
jp
mov
push
scas
imul
sbb
or
dec
pusha
adc
xchg
and
adc
out
scas
frstpm(287
repz
repz
pushl
jns
sub
movsl
test
mov
rcr
fistps
jne
mov
lahf
loop
ret
int3
mov
negb
ret
jns
sahf
pop
js
das
test
mov
negb
idiv
sub
mov
idiv
xchg
pop
ljmp
and
cmp
daa
dec
gs
mov
cmp
pop
and
sbb
rcrl
test
sbb
int
dec
mov
dec
mov
xchg
repz
cmp
loope
mov
jle
dec
cmpsb
xor
adc
and
xchg
mov
add
and
jg
mov
jg
cmpsl
cmp
nop
and
das
pusha
inc
test
fstps
mov
adc
adc
jno
insb
test
mov
inc
in
add
mov
inc
adc
loope
or
cmp
xchg
fidivrl
mov
xchg
sub
dec
xchg
popa
push
mov
add
mov
repz
lret
and
cwtl
or
lcall
int
dec
lahf
test
aad
or
and
cmpsl
dec
and
mov
adc
jne
ret
push
pop
add
test
inc
sub
sar
insb
xchg
fsub
out
dec
sub
nop
pop
enter
inc
js
in
or
rcr
xor
daa
xchg
nop
pop
sub
add
fnstcw
data16
mov
lahf
and
outsb
pop
cli
lcall
mov
pop
cmovnp
and
sub
xor
or
outsb
pushl
adc
xchg
loope
imul
adc
push
add
ja
in
test
shrl
aas
xchg
push
or
or
or
mov
xchg
in
stos
mov
fs
sbb
das
stos
push
test
popf
xor
mov
push
repnz
ffree
les
out
cmp
pop
outsl
and
lcall
xchg
adc
lock
inc
sub
or
fstps
rcrb
jp
push
jae
pop
xchg
imul
xchg
dec
shl
mov
imul
leave
fistpl
fstl
in
push
sub
insb
push
cli
hlt
and
inc
jmp
repnz
movsl
loopne
fsubl
hlt
mov
enter
push
loopne
pusha
jns
out
adc
push
adc
push
xchg
cmc
sbb
mov
in
sub
into
orb
repz
dec
mov
push
inc
fwait
mov
pop
insb
jns
sub
fcompl
cld
leave
dec
cmc
adc
mov
xchg
cmpsl
call
dec
inc
imul
outsl
jecxz
jge
popa
mov
mov
ljmp
arpl
ljmp
rcrl
xor
lahf
jg
popf
sub
popf
insl
push
cli
ret
das
cmpsb
mov
mov
in
sub
imul
xchg
fdivr
mov
mov
in
loopne
out
outsb
lret
dec
stc
sti
push
aad
clc
fstl
ds
addr16
scas
popf
in
js
xor
jno
jne
cld
adc
in
shlb
xor
dec
hlt
xchg
insb
hlt
outsl
push
mov
sbb
mov
pop
iret
mov
ds
clc
roll
dec
sub
and
xchg
pop
je
push
test
bnd
pop
daa
and
sahf
int
andl
inc
mov
fldt
es
push
xor
fwait
orb
loope
mov
pop
mov
cs
sbb
jp
mov
loopne
movsl
sbb
cmp
and
jp
xor
and
inc
xor
shlb
jo
or
xorl
jne
or
roll
pop
int3
xor
sub
mov
aas
jno
mov
xchg
cli
sarb
subb
adc
les
jae
mov
jae
mov
dec
daa
in
jge
push
adcl
mov
jne
adc
mov
ds
sbb
mov
adc
cmp
call
add
inc
jb
dec
ds
xor
mov
push
push
mov
sbb
iret
pop
movb
rcrb
fcompl
cmp
jg
sbb
inc
xor
xlat
jp
sbb
push
stos
xchg
in
mov
cmpsb
mov
cwtl
pop
popa
mov
cmp
mov
cmc
cs
lcall
ljmpw
std
adc
sbb
pop
mov
call
push
test
hlt
mov
push
pop
jecxz
repnz
jp
pop
cltd
inc
loopne
push
fs
out
fiadds
lds
jmp
sub
jb
pop
je
clc
test
and
int3
loop
leave
dec
pop
adc
cmpsl
sbb
jmp
inc
test
stos
gs
mov
push
ds
cli
mov
xadd
aas
mov
fildl
fwait
sub
mov
bound
push
push
out
js
addr16
in
divl
mov
dec
loop
add
jl
inc
jno
in
insb
pop
xor
int
mov
cmp
mov
or
js
fwait
add
mov
ret
cmp
stos
ret
jp
adc
ror
inc
pop
pushf
sbb
imul
ror
pop
mov
js
shrb
cld
jb
sub
pop
cmc
xor
sub
push
xor
jmp
sbb
test
pusha
ds
data16
and
fimuls
dec
fdivr
dec
xor
in
sub
xor
iret
jnp
les
push
pusha
mov
mov
sti
add
loope
call
ret
ljmp
loopne
daa
mov
mov
popf
and
sub
data16
addr16
sub
and
outsl
scas
cs
pop
jbe
dec
insb
mov
push
lods
jge
movsl
mov
out
mov
push
xchg
cli
inc
js
in
stos
fcoms
and
outsb
repnz
fwait
sub
test
pop
dec
enter
cmp
pop
and
ret
sub
cmpsl
mov
int3
popa
aam
sbb
imul
stos
push
push
cli
bound
add
push
daa
xchg
lahf
repz
xor
int3
mov
dec
cmp
push
in
outsb
dec
cli
mull
and
outsl
xlat
jecxz
pop
xchg
scas
mov
mov
xchg
aad
nop
xchg
xchg
loope
mov
dec
xchg
clc
in
jl
adc
xchg
mov
in
cmp
gs
shlb
sti
pop
lahf
xor
notb
pop
mov
jb
cmpsb
or
hlt
ljmp
jecxz
adc
push
pop
ret
insl
pushf
push
std
leave
adc
dec
lea
jmp
arpl
sub
inc
shlb
jne
mov
or
movsl
mov
mov
xchg
in
or
push
and
xlat
outsb
inc
jae
pop
push
hlt
fld
das
aad
popa
push
enter
add
movsl
inc
idiv
lods
hlt
lahf
lcall
lods
cmpsl
push
arpl
xchg
xchg
dec
and
and
out
imul
jbe
or
pop
pop
cli
aas
ja
adc
add
rcl
dec
neg
outsb
movsb
scas
push
mov
je
outsl
dec
rcll
cli
mov
jne
leave
ds
shlb
or
in
addr16
insb
xchg
sub
jb
mov
pop
inc
popa
je
fadds
icebp
orb
or
push
icebp
sbb
mov
rcrl
vmovaps
movsl
data16
xchg
adc
mov
and
or
mov
flds
iret
popf
xor
add
jl
int
out
mov
adc
sub
std
xor
xlat
mov
repnz
xchg
add
mov
or
add
mov
jns
movd
jl
data16
push
popa
xor
or
and
cmpsl
pushf
rcrl
mov
jmp
and
jmp
pop
mov
cmp
cmpsl
shl
enter
inc
jns
inc
jne
mov
cmpsb
cmp
hlt
cmpsl
push
xchg
ret
jle
test
sbb
sub
jne,pn
sbb
imul
ret
sbb
int
pop
rorb
push
push
stos
call
ljmp
dec
mov
inc
pop
fistps
aad
pusha
sub
nop
add
adc
jb
xor
lods
sbb
pop
sub
sbb
sbb
aam
jnp
and
or
ret
cmpsl
add
loop
imul
jo
dec
sbb
divl
jmp
cli
mov
add
scas
or
add
iret
cwtl
mov
hlt
stc
jae
lds
and
jbe
pop
sub
pop
imul
test
sub
sbb
addr16
scas
mov
or
mov
outsb
div
popa
sub
xchg
scas
scas
or
xchg
push
int
or
lock
add
adc
imul
inc
add
movl
xchg
add
add
filds
cmp
aas
dec
into
xlat
mov
clc
jmp
mov
cmp
scas
or
inc
cmp
imul
lock
fisubrs
scas
arpl
adc
sub
xor
sbb
sub
rorl
add
jo
xchg
cld
xchg
mov
mov
out
lds
and
push
xchg
je
push
push
pop
jmp
ss
out
mov
xchg
cmc
loopne
cmp
push
sbb
xchg
enter
bound
imull
bound
dec
fdivrs
fwait
repnz
xor
jne
into
lods
imul
push
les
sub
sbb
and
aad
das
loopne
cs
outsb
jle
and
jmp
jno
and
out
sarl
outsb
mov
rcrb
ret
cmp
jle
push
loopew
lsl
rol
cwtl
mov
mov
lds
sbb
das
or
mov
incl
pop
push
arpl
dec
pop
neg
mov
add
jne
ds
xor
insb
inc
push
and
xchg
pop
mov
jmp
in
stc
mov
jecxz
mov
cmp
pushf
aaa
outsb
inc
inc
mov
mov
loope
decb
popf
test
or
inc
jae
mov
add
or
lcall
or
scas
idiv
test
daa
out
arpl
sbb
cmpsl
repnz
mov
xor
push
dec
or
and
gs
pop
mov
mov
into
lods
sub
adc
or
add
lock
xchg
sahf
stos
ret
and
call
cmp
in
cmp
repz
aam
ljmp
cltd
push
out
dec
imul
lahf
cmp
jmp
testl
or
stos
pushl
sub
in
sub
mov
imul
cmp
push
andb
sti
jge
lock
stc
jp
imul
popa
mov
fidivs
push
lret
pusha
inc
or
xlat
jecxz
dec
jle
call
sbb
sub
pusha
hlt
movsl
movb
daa
sub
hlt
mov
sub
loopne
adc
and
or
das
sbb
mov
incl
add
sbb
ja
ret
lods
enter
sbb
fldenv
cmc
stos
dec
das
mov
add
mov
cs
pop
pop
loop
xchg
fistl
inc
adc
daa
add
pushf
stc
in
inc
sub
cltd
cs
nop
jmp
aaa
xor
aaa
xchg
sub
push
fisubrl
scas
mov
lock
cmp
movsb
repz
fcmove
jecxz
dec
push
inc
mov
lods
or
push
push
cmpsb
inc
jmp
push
cmp
mov
jl
loop
cltd
pop
cmc
push
loope
pop
cltd
inc
ret
pop
cmpsl
andb
mov
sub
pop
xchg
xchg
ret
push
cli
cmp
and
cs
lods
xchg
cli
adc
fiaddl
insl
out
jns
push
in
push
and
imul
lods
out
add
dec
insl
dec
outsb
shll
pop
scas
mov
pop
aam
pop
icebp
aaa
pop
out
lods
push
int
out
pop
mov
mov
dec
mov
std
cmp
pusha
ret
mov
xchg
fwait
pop
push
mov
jnp
lret
insl
xchg
sub
lock
mov
popa
mov
mov
loope
sub
sub
mov
cltd
int3
pop
inc
fwait
leave
fbstp
mov
fsubrl
outsl
sub
ss
cmp
pop
push
ljmp
xchg
rcrl
cmp
xchg
inc
enter
sub
mov
cwtl
and
dec
pusha
aam
out
ficompl
into
fcoml
mov
push
dec
and
in
dec
paddw
in
popf
xchg
lcall
mov
and
sbb
sti
inc
in
pop
clc
in
fucomi
sarl
cmp
inc
pop
add
mov
jno
cmc
pushf
dec
jnp
lret
jnp
fadd
fwait
add
cltd
or
clc
mov
scas
repz
les
popf
pop
je
mov
dec
inc
lcall
mov
lret
pop
ss
mov
imul
rorl
scas
sub
ret
lock
cmp
dec
movsb
jne
out
mov
aam
xor
roll
cmp
jbe
and
push
mov
lahf
lret
ret
jl
push
and
push
mov
fwait
outsb
or
push
not
dec
es
xor
insb
jbe
jns
ret
mov
std
hlt
push
hlt
in
mov
pop
pop
out
dec
push
jnp
incb
daa
dec
fucomi
fcmovnb
inc
mov
mov
mov
imul
pushf
fisttpl
push
sub
push
xor
inc
ja
dec
movsb
mov
sbb
and
jns
mov
dec
mull
add
cmc
mov
arpl
icebp
push
pop
dec
adc
adc
add
pop
insl
add
fs
cmp
call
loopne
add
adc
fsubrp
fwait
add
outsl
inc
lahf
sbb
out
or
iret
adc
dec
push
js
icebp
aas
xchg
arpl
inc
adc
je
leave
jmp
fs
loope
and
mov
jl
jb
add
sub
pop
xorl
lods
xor
inc
jp
or
add
pusha
test
mov
dec
add
dec
jbe
and
outsb
cmpsb
pop
ffreep
push
ljmp
jae
in
sub
nop
test
adc
les
aam
lahf
cwtl
push
divb
fs
sti
jo
lret
jg
cmp
cmp
push
jbe
pop
shll
add
sbb
iret
subl
mov
cmp
testl
movsl
notb
and
push
insb
lea
jns
aaa
mov
pop
enter
mov
pop
das
leave
test
adc
adc
nop
add
and
es
les
and
in
jmp
mov
repz
push
xor
push
fwait
ljmp
shrb
jl
sar
pop
lods
out
and
and
inc
push
in
sbb
add
sub
int3
fsts
push
sub
cmp
popf
cmpsb
mov
into
test
sub
add
or
push
shrl
and
fwait
pop
jae
dec
rcrb
mov
inc
sub
fisubrl
lret
jp
ss
xchg
sub
movb
jle
leave
ds
or
sbb
sbb
loop
pushf
push
sbb
add
or
lcall
sbb
in
fidivl
sti
or
push
fdivs
test
rep
imul
fldcw
subb
out
mov
test
inc
jecxz
push
scas
js
mov
into
lahf
ja
xor
nop
xchg
push
into
and
int
inc
cmp
hlt
test
movsl
outsb
cmpl
rcrl
or
out
outsl
test
push
inc
inc
mov
cli
pop
mov
add
xchg
rorb
xchg
push
mov
popa
pop
js
xchg
lock
and
xor
mov
jle
pop
or
xor
das
cmp
add
mov
mov
repz
xchg
enter
adc
mov
fldenv
mov
pusha
and
pmaddwd
cmovae
lods
adc
stc
xor
and
lods
out
daa
adc
xchg
add
dec
sbb
mov
fmull
fsubrs
add
pop
mov
in
push
xchg
ds
jg
xlat
dec
or
ret
xchg
aas
xor
clc
mov
cs
loope
out
arpl
sub
xor
xchg
dec
popa
cltd
mov
mov
out
push
clc
jae
nop
inc
stos
repnz
lcall
leave
sub
ss
mov
adc
add
out
rol
cmp
cs
xor
into
sub
cmc
xchg
out
stc
movsl
pop
or
add
jg
test
movsb
adc
dec
inc
and
push
mov
sbb
cmpsb
paddusw
lahf
bound
inc
jmp
in
insb
push
outsl
mov
test
dec
inc
mov
or
aad
fldl
in
cmp
push
mov
repz
movsb
inc
pop
lar
add
or
je
nop
or
mulb
cld
pop
mov
fsubl
xor
jns
push
cmp
sarb
fcoms
adcb
or
and
jbe
test
mov
out
dec
hlt
jnp
std
movsl
dec
rcrb
or
xchg
mov
lea
sbb
mov
push
dec
pop
fwait
push
sbb
jge
scas
add
and
jle
std
cmp
xchg
into
stos
daa
xchg
cmpsb
add
push
jae
cmp
mov
pop
out
in
lcall
or
call
and
pop
push
jnp
or
mov
lret
lea
sub
fdivs
push
stos
mov
rorl
cmp
lahf
fisubrs
mov
daa
pop
dec
sub
movl
dec
inc
pop
push
cmp
jae
add
inc
inc
fwait
jle
mov
sbb
rclb
es
and
or
mov
in
gs
jmp
mov
div
xchg
mov
jnp
imull
lret
fmull
aaa
and
adcl
mov
add
lods
pop
pushf
into
outsl
addr16
out
jb
cli
push
inc
les
imul
or
data16
cmp
add
mov
shll
hlt
adc
push
pop
out
mov
xchg
sbb
js
pminub
dec
add
shll
push
lahf
jo
into
pop
out
cmpb
imul
test
mov
arpl
ds
jle
rolb
xor
sub
clc
scas
dec
push
sbb
lahf
pop
int
push
dec
fstpt
enter
push
notb
cmpsb
pop
sbb
loop
push
jae
xor
add
loopne
mov
pop
and
lds
xchg
cmp
fstp
dec
movsl
in
hlt
dec
mov
adc
or
add
rorb
imul
mov
test
dec
imul
cwtl
jnp
push
adc
or
out
mov
sub
ret
dec
std
cmp
add
jno
dec
jae
or
outsl
adc
jb
setg
xchg
out
loopne
iret
pop
dec
cmp
push
clc
icebp
ljmp
xor
or
mov
mov
pushf
push
enter
xlat
notl
fs
cmpb
cltd
xchg
fwait
cmp
xchg
loopne
mov
sbb
repz
add
pop
imul
popf
add
xor
inc
xor
or
xor
sahf
scas
push
adc
dec
xlat
xor
xchg
icebp
enter
je
aas
xor
hlt
adc
adc
rorl
add
loopne
scas
popf
sbb
sbb
lds
mov
mov
mov
pop
pop
xor
inc
into
dec
imul
daa
pop
repz
cmc
mov
iret
xchg
aam
mov
lds
in
in
or
push
lods
sbb
mov
inc
add
bound
ljmp
in
xor
scas
push
cmp
lret
and
out
dec
mov
cmp
test
mov
fdivrs
in
xchg
pushf
inc
jnp
inc
xor
dec
add
inc
cmpsb
jno
mov
outsl
or
idivl
lds
sbbb
mov
jg
lods
jbe
in
adc
lods
ja
call
insb
jmp
mov
hlt
jmp
mov
add
aaa
out
mov
mov
iret
cmc
lods
or
ret
cwtl
lahf
leave
mov
xchg
aad
daa
or
orb
push
pop
xchg
pop
dec
cmpb
jge
pop
gs
pop
mov
mov
adc
leave
mov
decb
scas
ficoml
jl
test
addl
stc
loop
aad
lds
in
pop
sar
test
pop
and
daa
mov
pop
loop
sub
xorb
insl
pop
cmc
push
add
pop
push
mov
jnp
mov
adc
push
lahf
or
ss
push
decl
lods
xchg
mov
divb
lret
mov
and
pop
mov
and
movsl
and
mov
push
pushf
out
ja
sbb
sub
xor
push
fimuls
push
sbb
lahf
xchg
xchg
dec
cmp
fbld
jecxz
fwait
xchg
aad
push
mov
cmpl
das
inc
out
mov
pop
sub
cmp
push
sbb
mov
xchg
fdivrl
loope
iret
sub
mov
sbb
addr16
std
sub
lea
cld
mov
mov
jbe
xor
mov
lret
fcmovnu
jae
shrl
icebp
push
add
sub
jns
xchg
cmp
hlt
in
mov
pop
adc
jl
fldenv
jno
sbb
mov
add
mov
add
cmp
sarb
movsl
fidivl
stos
lock
pop
outsb
push
jmp
mov
fwait
mov
pushfw
loope
mov
mov
adc
sbb
in
ds
into
nop
pop
mov
sub
ret
push
nop
and
out
in
shlb
je
cld
push
insb
sbb
jg
shl
iret
sti
xchg
mov
jl
mov
dec
or
inc
sbb
ret
inc
push
ljmp
add
pusha
outsb
data16
and
pop
jmp
iret
add
std
cmpsb
test
dec
mov
mov
jmp
push
mov
jne
and
lahf
xlat
or
jp
mov
shrl
jg
aaa
inc
dec
popf
inc
cli
xor
jle
inc
movsl
pop
cli
mov
fisubrl
ret
or
arpl
sbb
xor
cmp
enter
lahf
mov
jp
jnp
pop
jae
cli
or
lgs
dec
mov
repz
and
test
jo
jno
inc
sbb
jp
mov
movsl
jnp
dec
test
pop
roll
add
and
or
sbb
jmp
out
imul
xchg
lods
pop
leave
bound
fwait
ret
pop
jae
scas
in
adc
testb
jp
dec
scas
cmp
mov
dec
and
mov
mov
adc
in
ss
pop
adc
push
rorl
ss
lret
or
mov
ss
mov
push
xchg
sbb
add
pop
rorb
cmp
sub
jnp
sub
xchg
or
test
xor
pop
cmc
jbe
test
add
int
sbb
mov
push
and
mov
sbb
test
mov
scas
or
outsb
imul
sub
push
jl
xor
int
xor
sbb
mov
into
in
shll
stos
pushf
aaa
push
mov
jp
outsl
jl
sti
aam
add
mov
mov
in
or
movb
pop
sbb
mov
push
xchg
xor
iret
cmpsb
push
movsl
jo
stc
je
rcrb
cld
mov
nop
xchg
mov
stc
mov
popf
inc
mov
loop
jmp
push
push
pusha
sub
rol
sub
mov
popa
xor
dec
lahf
pusha
adc
dec
cmp
fmuls
sbb
scas
pop
inc
arpl
pushf
pop
mov
push
cmp
mov
loope
orl
mov
add
push
mov
xchg
adc
andl
lret
mov
mov
arpl
outsb
addr16
sbb
loope
pop
mov
jecxz
cld
mov
inc
mov
nop
in
mov
test
xchg
arpl
icebp
arpl
seta
cmp
sbb
push
dec
in
sbb
fidivl
roll
mov
scas
ret
add
enter
fisttps
mov
mov
int3
cmp
mov
int3
test
ljmp
dec
mov
fsubl
pop
mov
dec
call
rcll
xchg
mov
xchg
xor
cmpsb
and
je
mov
test
inc
and
or
fnstcw
or
scas
pop
sahf
add
mov
pushf
cmc
das
jmp
jg
cld
jg
jb
xor
sub
pop
filds
mov
pop
dec
int3
jg
sbb
xor
push
lock
out
sti
mov
jecxz
repnz
pop
mov
mov
test
jg
fadds
adcl
movsl
in
fxch
jnp
push
in
cld
push
xchg
pop
fwait
dec
xchg
data16
pop
cld
xchg
test
ljmp
inc
and
popa
pop
stos
das
xchg
lcall
push
insb
lret
cmc
or
pop
or
movl
scas
fwait
adc
ret
mov
dec
adc
push
sbb
addr16
xor
lret
je
lcall
xchg
cmc
out
adc
xor
sbb
lock
es
jno
push
leave
dec
lahf
sub
xor
dec
out
dec
in
and
pop
iret
stc
js
add
or
rolb
and
das
das
sbb
insl
cwtl
and
dec
xor
cmp
test
and
test
fbld
push
mov
cmpsl
mov
mov
es
out
ret
jmp
push
call
and
call
test
jmp
rol
pop
xchg
cli
lea
or
dec
push
cmp
in
cmp
cmpsb
jbe
add
cli
loop
stos
mov
ds
inc
cmp
sbb
mov
push
add
xlat
mov
xor
pop
shrb
loop
ret
div
inc
sub
push
xorb
sbb
test
clc
mov
mov
adc
xor
pop
aad
nop
fwait
add
stos
inc
dec
data16
loopne
out
dec
mov
mov
lods
mov
imul
jns
add
out
insb
cmpsb
in
movsb
xchg
in
aas
pop
ret
and
in
sbb
bound
dec
cmp
xchg
ss
add
sub
lret
sbb
push
dec
or
dec
push
add
movsl
das
push
inc
cmp
or
shl
pop
cmc
mov
pop
clc
pop
and
ffree
cmp
lock
test
or
nop
push
jo
les
xchg
popf
push
enter
loopne
mov
xchg
in
cs
int
add
xchg
mov
sbb
stc
pusha
das
fwait
xor
loop
mov
inc
cltd
and
cs
dec
pop
aas
fnstsw
push
push
mov
cvtdq2ps
dec
mov
das
imul
shr
pushw
cmc
mov
sbb
dec
inc
cmp
leave
aas
adc
lahf
sub
out
jp
lods
lds
psubd
test
push
loop
test
or
outsl
inc
push
jns
cmp
subl
inc
sub
shl
cmp
out
lret
ror
adc
mov
fldl
iret
icebp
insb
bound
pop
flds
mov
into
js
outsl
fstps
outsb
jp
mov
fwait
aaa
aad
neg
xorl
jecxz
lock
cmp
into
cmpsl
cmc
ret
push
outsl
push
cs
or
aad
inc
cmpsl
fidivl
sahf
cs
daa
out
mov
jo
add
lret
add
adc
lcall
xchg
add
dec
pop
pop
lock
nop
xchg
pop
je
dec
sbb
insb
pop
in
cmpsb
dec
rorb
and
dec
xor
bound
das
in
out
mul
xor
and
xlat
and
lret
sti
mov
dec
or
jbe
loopne
xchg
cli
shlb
pop
cmpsl
push
cmpb
dec
mov
mov
test
push
jge
sahf
ljmp
mov
fs
adc
jbe
inc
imul
push
mov
xchg
push
fsubrl
pop
aaa
push
sub
and
sti
adc
test
shrl
inc
mov
cmc
ljmp
in
jae
add
dec
mov
mov
jbe
xchg
mov
jg
std
out
cmpsl
das
adc
push
popf
loope
aaa
sbb
mov
mov
fnsave
fmuls
repnz
addb
push
xchg
out
in
and
jle
xor
movsl
or
popa
push
int
dec
mov
inc
pop
cmpsl
dec
lahf
mov
lock
pop
xchg
sbb
mov
dec
mov
mov
insl
stos
xchg
xor
daa
push
fisubl
adcl
adc
cmp
sub
push
jnp
cmp
or
mov
push
push
mov
or
out
lret
sub
fidivs
or
push
out
popf
cmc
lds
test
add
lods
outsb
aaa
jne
jae
xor
xor
rcrl
pop
je
lds
pusha
push
xchg
xchg
int3
lret
pop
or
mov
cmp
cmpsl
or
cmp
js
aam
add
mov
lret
cmp
std
insb
test
fdivl
int
pushf
or
jmp
push
mov
int3
fwait
jbe
into
loopne
sahf
or
push
mov
dec
mov
cmc
aam
or
lahf
mov
or
aad
jmp
in
cmc
dec
aad
fldl
jb
lcall
in
jg
insl
sub
fsubp
ret
dec
push
xchg
lods
frstor
pop
ja
scas
aas
dec
and
add
xor
out
int
jne
or
inc
mov
and
rclb
xlat
add
ss
pop
mov
sbb
mov
jne
add
je
sbb
jno
cld
cmp
lcall
lea
mov
rep
inc
mov
repnz
test
insl
ret
adc
ret
and
sbb
sub
iret
aas
xor
je
repz
les
xlat
mov
adc
outsb
jp
rolb
ljmp
fwait
push
sbb
sbb
mov
frstor
sti
lock
clc
add
cmpsb
rcrl
out
ss
in
cmpsb
shrl
xor
arpl
mov
shr
push
mov
lcall
cmpsb
jecxz
out
mov
fildll
cmpsl
xchg
scas
fsubrp
cmc
push
adc
pop
loop
xchg
mov
leave
loopne
xor
mov
and
jp,pn
pop
push
stc
addb
aaa
ret
fcomps
or
sub
xor
mov
or
cld
lds
les
sarb
pop
insl
mov
cmpl
cmp
pop
xchg
jle
xorb
sarb
or
ja
push
rcll
and
lods
les
and
outsb
or
cmpsl
ror
shll
mov
out
mov
hlt
int
pushf
jg
xchg
sti
ret
addr16
cmpsl
mov
push
add
notl
aas
inc
pop
enter
push
out
in
sub
and
lcall
ss
loopne
xchg
inc
mov
inc
ret
std
pop
and
xchg
ret
ret
fnsave
incl
sub
lods
xchg
out
xchg
xor
sbb
fldl
mov
cli
push
loopne
pop
adc
dec
ds
int3
fs
loop
sub
mov
mov
inc
jecxz
call
mov
push
popf
mov
push
mov
sbb
pop
mov
add
scas
int3
jle
negb
vcmppd
mov
sub
and
xchg
xor
setns
pusha
sub
out
dec
leave
pop
clc
push
mov
mov
out
fiadds
mov
iret
pusha
cmpsb
sub
std
adc
inc
pop
jo
rclb
rcr
xchg
sub
jno
cmp
cmpsl
add
ds
add
mov
shl
jo
loope
xchg
xor
call
xor
mov
cmpsb
fisttpl
xchg
aad
xor
sbb
pop
outsl
sub
push
and
or
js
sbb
addl
popf
mov
sahf
cmpsb
mov
and
sub
stc
sub
cmp
cmpsl
les
xor
das
ss
jne
rcrb
jle
pop
xor
cld
jbe
inc
sub
mov
rcr
jo
mov
add
ret
jecxz
push
in
popa
rcll
jge
xor
inc
jg
inc
ret
leave
fidivrs
push
fisubrl
push
call
sub
lds
rcr
inc
fsts
hlt
out
add
loopne
int3
or
data16
lret
pop
sbb
nop
sbb
push
xor
cmp
inc
pop
loop
push
scas
mov
test
push
xchg
or
outsl
inc
pusha
cmp
adc
lret
jle
xchg
insl
movsb
ja
lcall
pop
or
sub
jmp
adc
or
mov
push
pop
fxch
gs
fnstcw
push
mov
push
push
insb
ror
inc
adc
mov
fwait
std
dec
int3
cs
jecxz
sub
das
mov
test
pop
pop
mov
in
fsubl
jae
psrlq
sbb
mov
arpl
adc
aam
inc
fidivrs
bound
je
inc
icebp
int3
cli
addl
dec
cmp
stc
add
jp
fwait
hlt
and
or
sbb
or
xchg
sub
cmp
adc
fistpll
cltd
dec
add
push
aaa
jecxz
push
cmp
add
scas
dec
iret
xor
cmpsl
rcll
xchg
sahf
repnz
outsl
fistps
loop
fcomip
lret
pop
rorl
adc
push
and
pop
xchg
pop
rolb
pop
inc
pop
inc
push
pushf
pop
pop
rcl
repz
xchg
mov
aas
xor
adc
fsubrs
jg
xchg
push
arpl
pop
inc
loop
outsb
sub
pop
or
adc
rolb
int
jnp
lods
mov
insl
call
jb
or
push
xor
add
je
dec
mov
pusha
out
adc
push
js
sbb
push
push
jle
ret
or
in
icebp
loop
movsl
push
out
fmuls
push
mov
jecxz
xchg
pop
lahf
lcall
mov
push
and
mov
testl
sbb
mov
cld
out
sti
stos
add
xor
and
mov
add
iret
inc
sti
ss
pop
pusha
xchg
mov
cmp
mov
jne
loop
inc
movsb
cld
cwtl
ret
lret
jbe
in
repnz
pushl
or
jo
lock
and
iret
inc
mov
jb
xchg
jecxz
dec
ds
sahf
inc
pop
stos
int3
lret
xor
push
xchg
or
in
movsl
dec
fdivs
sub
jb
ret
sub
hlt
mov
cmp
mov
test
xor
add
mov
jo
sarb
lahf
dec
push
sub
inc
fmul
inc
xchg
cmp
insb
andb
iret
out
popl
add
ja
fnstenv
or
or
mov
or
dec
mov
mov
sub
cli
cmc
jb
popa
loopne
mov
dec
daa
pslld
outsb
and
jl
mov
and
or
add
int
or
mov
mov
or
mov
cmp
cmp
loope
pop
pop
cltd
xor
pop
sub
inc
ret
scas
out
and
aad
mov
cmp
cli
dec
ret
fistpll
inc
xchg
rcr
push
loop
jnp
pop
inc
pusha
out
mov
ljmp
mov
dec
xchg
pop
ja
sub
adc
cld
fbld
ljmp
sti
adc
test
push
xchg
mov
mov
out
jb
repnz
mov
dec
pop
mov
and
add
mov
pop
mov
cwtl
add
subl
xor
mov
pop
push
inc
iret
loop
xor
or
cld
daa
xor
ret
sbb
clc
fistpll
fldcw
les
add
lock
pushf
jge
sbb
pop
ret
and
adc
pop
mov
mov
jmp
in
pop
fiaddl
cli
xor
xor
dec
jbe
cmp
fldenv
sbb
sub
inc
test
mov
shll
cmp
repz
test
push
subl
pop
inc
xchg
lret
test
mov
pop
aam
cmp
add
out
lret
out
jle
fs
pop
movsb
ds
push
and
lds
mov
nop
lds
bswap
adcl
popf
push
stc
sbb
cld
repnz
outsb
int
imul
loope
mov
js
shrl
ds
xor
popf
scas
leave
cld
cwtl
out
sbb
adc
aam
aas
shl
push
mov
mov
rcll
add
out
fstps
shr
loopne
stc
cwtl
aam
lock
add
push
and
bnd
jmp
xchg
add
in
pusha
ret
bound
mov
daa
jmp
popf
enter
ficompl
shll
sbb
jbe
test
cmp
or
sub
dec
popf
jecxz
dec
loop
jno
shll
or
mov
mov
add
jl
ret
cmp
xor
and
jmp
inc
cmpsb
jle
pop
mov
rcl
out
popa
cmpsb
loope
repz
push
mov
out
cmp
mov
aaa
ror
pop
inc
jg
pop
dec
cmc
mov
je
jo
dec
pop
jp
fwait
pop
jp
and
loope
std
shrl
xor
and
and
and
sbb
xor
inc
into
inc
mov
xchg
or
jno
sbb
adcb
dec
adc
pop
jmp
lcall
in
or
mov
xor
pop
pushf
imul
leave
xor
loopne
fs
sub
call
add
js
call
hlt
push
xchg
lods
jp
repnz
test
jecxz
mov
out
and
test
loopne
sbb
jl
dec
inc
pusha
xchg
mov
jl
add
in
idivl
nop
pop
adc
mov
mov
shrl
mov
or
xor
sbbl
pop
mov
imulb
and
ret
cld
outsb
pop
mov
add
mov
sub
sbb
ret
shr
notb
sub
sub
pusha
shrl
popa
pop
sahf
mov
sub
ljmp
fmull
shll
cmc
bound
push
pop
pop
mov
data16
flds
pop
pop
das
jbe
in
mov
pop
rolb
dec
or
subl
xchg
movsl
scas
das
outsb
lea
jl
popf
jae
sti
dec
mov
mov
scas
xor
mov
sbb
mov
or
cmp
adc
test
lock
sbb
out
mov
stc
shrl
aaa
imul
and
mov
inc
adc
in
in
out
dec
bound
nop
pop
mov
fwait
addr16
pop
leave
je
or
add
into
iret
rclb
shll
mov
ljmp
dec
adc
pop
dec
ret
cmp
fdivr
cmp
subl
or
movsl
jbe
sbb
test
jb
sbb
cmc
push
adc
jbe
scas
jb
out
push
nopl
aad
sub
push
xchg
cmp
pop
pushf
sbb
das
sbb
in
push
and
notb
mov
sub
adc
mov
loopne
xchg
lcall
int
jno
cmpsb
pop
hlt
call
leave
divps
ja
dec
or
shll
xchg
sahf
or
aad
xor
data16
aad
lods
jbe
add
and
mov
cmp
rclb
inc
xchg
sub
mov
sbb
lea
test
ficoms
pusha
lds
cmp
cli
lret
loopne
xor
daa
sub
push
aad
adc
and
and
sbb
sti
jbe
add
push
mov
and
mov
cmp
adc
inc
push
add
or
ss
lds
fiaddl
shll
leave
add
pop
mov
mov
or
idivb
loope
or
jns
dec
xor
mov
push
in
jge
and
fmuls
shr
imul
outsl
mov
aam
pop
iret
leave
out
mov
mov
sub
out
pop
dec
xor
cld
push
dec
jb
push
cmp
push
sti
iret
into
pop
jecxz
jp
lea
push
or
sbb
sub
xor
addb
or
xor
shrb
inc
testl
jbe
jge
pop
ds
out
add
push
pop
mov
popf
cs
lahf
jecxz
or
icebp
add
pop
aad
test
mov
lahf
out
cmpsb
fidivs
aaa
test
push
insl
or
xchg
addr16
add
in
and
lcall
mov
pop
leave
cmp
adc
aaa
test
lret
gs
mov
xor
enter
or
sbb
test
sub
inc
mov
fldcw
and
jbe
popf
sub
repz
push
push
inc
lods
out
jg
cmp
pop
xchg
sub
xchg
pop
into
std
lea
sbb
adc
add
mov
roll
and
es
add
push
aam
dec
test
das
or
push
cmp
adcb
inc
xchg
mov
scas
mov
fstps
test
test
or
mov
pop
pusha
pop
push
dec
push
mov
add
push
scas
sahf
daa
xor
sub
push
test
cmc
rorb
inc
pop
xor
adc
fstl
cmp
sarl
jae
scas
enter
add
jns
lods
loop
ret
ficoms
xor
adc
call
mov
rolb
mov
jl
mov
ss
ret
pop
notl
and
sub
insb
push
push
mov
pop
es
pop
pop
rolb
fs
xor
loopne
mov
testb
mov
mov
cs
add
mov
add
fcoms
sub
imul
jne
cmpsb
add
movsb
in
shll
xor
aaa
mov
pop
mov
ds
dec
test
das
stos
das
andl
or
sub
outsb
rcr
push
arpl
sub
call
mov
pop
repz
rcll
divl
pop
jle
cwtl
adc
push
sub
loopne
mov
in
rolb
data16
js
sbb
xchg
mov
btr
jne
cmc
out
cli
jecxz
push
inc
adc
loop
push
adc
xor
inc
jae
push
inc
adc
jns
lods
cmp
lcall
push
push
cmpb
pop
pop
inc
cltd
fisubl
aam
jae
xchg
sub
orl
xlat
cmc
push
sarb
mov
fldcw
cmpsl
aam
xchg
leave
inc
sbb
scas
pop
sahf
decl
repz
arpl
jecxz
inc
call
test
jle
mov
or
std
aam
cltd
lret
xchg
arpl
push
lea
mov
push
andb
inc
gs
cmpsb
jo
js
sbb
mov
movsb
pop
cmc
cltd
push
push
jno
push
add
aad
insl
ds
outsb
or
inc
xchg
arpl
cmc
cli
sti
aas
lods
xchg
mov
imul
mov
mov
mov
sbb
cwtl
dec
push
aaa
cmp
dec
ss
cwtl
data16
loop
fcmovnb
push
mov
lea
clc
sub
pop
movsb
mov
fnstenv
cmp
jne
push
out
repz
mov
andl
test
insb
jmp
mov
in
addr16
xor
imul
imul
scas
and
outsb
mov
rcrl
jmp
or
fbstp
mov
cmpsb
scas
outsl
jns
lods
push
in
jl
jno
pop
add
cmp
add
mov
cmp
dec
mov
das
imul
outsl
in
dec
fcmovnb
dec
sub
insl
dec
nop
fwait
xor
pop
imul
add
int
mov
lods
ds
faddl
add
ret
adc
pop
movups
mov
xchg
call
push
cmp
adc
mov
adc
cmp
cli
xlat
sub
imul
fistpl
add
in
xor
inc
stos
mov
mov
or
cmp
xchg
sub
sti
out
cmp
mov
or
mov
stos
cmpsb
cmp
inc
lods
sahf
cld
push
xchg
ljmp
data16
fcmove
nop
mov
int
lret
lods
aas
pop
push
ficoms
inc
call
mov
mov
daa
fistps
les
push
cwtl
insl
push
push
mov
xlat
pop
push
shl
push
jno
outsl
xor
and
pop
int3
mov
pusha
jp
jns
stos
mov
cmp
or
lock
mov
mov
fisttpl
scas
mov
je
jl
pop
dec
xchg
loopne
sarb
fildll
jge
pusha
insb
inc
jecxz
jle
gs
push
xchg
dec
inc
mov
paddb
insb
sahf
into
sub
mov
xchg
loopne
divb
fmuls
out
jmp
movsb
push
xchg
sbb
popa
cs
sahf
mov
or
jb
mov
in
negl
adc
sub
enter
push
adc
movsb
or
outsb
ljmp
fiadds
and
and
jno
loopne
pop
cld
fs
jne
fistl
cmp
hlt
ss
shl
pop
jp
call
repnz
jmp
in
jne
mov
and
jae
xchg
and
icebp
fdivrl
xor
sbb
popf
push
inc
loopne
in
push
xor
into
xchg
xchg
ja
xchg
jbe
cmp
xor
or
mov
inc
cld
inc
loopne
or
cmp
rcrb
gs
imul
pop
xorb
sbb
push
out
insl
lret
cli
mov
fldpi
leave
mov
jnp
out
ret
lea
fidivrs
xchg
leave
into
inc
sbb
aad
loopne
xchg
inc
rol
inc
xchg
ret
jae
repz
or
sahf
mov
push
loope
popa
insl
andb
mov
cmp
pop
or
cmp
rcr
pop
mov
outsb
ret
out
sahf
repz
fldl
mov
fucomp
xchg
ljmp
mov
ja
sti
mov
fmulp
leave
xor
jg
push
inc
js
mov
lahf
pop
testb
lahf
mov
sti
xor
sub
aas
push
xchg
std
or
addr16
push
out
jg
fldl
stos
mov
loope
insb
les
mov
fsubrl
jne
mov
outsb
jb
mov
std
or
pop
push
dec
xchg
fsubl
shll
xor
adc
bound
mov
movsl
mov
lock
pop
iret
decb
inc
inc
push
repnz
roll
ja
add
fisttps
repnz
js
out
dec
lods
push
or
mov
jo
mov
add
jns
sub
cmp
dec
sbb
es
xor
mov
sub
test
add
rclb
jecxz
and
push
dec
std
js
data16
pushf
pop
jecxz
test
js
push
jl
popf
push
lock
popf
pop
pop
push
add
xchg
xchg
test
jge
add
cmp
sbb
je
jns
and
xchg
mov
adcb
mov
mov
xor
xchg
add
rorb
push
je
hlt
jmp
aam
sbb
imul
dec
int3
loopne
adc
cmpsb
jle
xchg
pop
jmp
movsb
or
pop
cltd
aam
rcrl
xchg
pop
test
cmpsb
movsl
sbb
xor
fildl
add
xor
sub
inc
add
ja
jo
test
mov
hlt
icebp
sbb
and
xor
jmp
push
int3
inc
push
cmp
and
cmpsb
je
outsb
sbb
cmp
add
cmp
ret
pop
test
mov
pop
dec
stos
sub
sti
out
repnz
mov
punpckhbw
iret
push
jne
pop
push
arpl
xchg
cmp
lcall
in
in
call
or
fbstp
test
fsubrp
push
jmp
add
jbe
lcall
daa
outsb
sbb
push
insl
gs
es
scas
outsb
insl
lods
cmpsl
push
das
gs
popf
inc
movsb
cmp
sbbl
js
sub
out
in
aaa
ds
cmp
push
scas
dec
addb
bound
dec
cmpl
jo
mov
aad
add
outsb
shr
xchg
adc
cmp
mov
push
scas
and
dec
push
mov
fsts
stos
cltd
add
xor
mov
pop
repnz
fbstp
or
repnz
mov
mov
jp
mov
fists
sbb
outsl
add
test
mov
jno
pop
or
sbb
clc
sbb
out
push
enter
cmp
mov
jb
test
iret
mov
pop
aas
push
xlat
aad
jnp
or
and
lods
ret
and
dec
xor
int
insl
push
xor
jno
jne
add
mov
dec
mov
insl
js
div
or
sub
xor
rcll
adc
dec
fcom
loope
xor
mov
out
inc
mov
fisubs
sub
and
cmpsb
adc
and
popf
cmp
div
out
test
movsl
jecxz
rclb
lods
imul
or
gs
arpl
lock
cmp
xchg
loope
mov
xor
pop
mov
pop
lahf
xchg
cwtl
js,pn
push
sub
outsl
insb
cmp
rcl
cmpsb
push
sub
push
call
push
add
cmp
push
fimull
les
and
out
test
stos
lock
mov
sub
cmp
stos
mov
sbb
aam
mov
pushf
mov
loop
movl
adc
repnz
pop
xchg
cmp
stos
and
or
hlt
repnz
jecxz
out
mov
mov
jbe
test
pop
std
jnp
inc
dec
dec
movsl
xchg
ss
rolb
jae
outsl
xor
in
and
xlat
adc
jbe
cmc
in
lea
jg
aaa
repnz
jmp
fmuls
pop
shll
hlt
sbb
loopne
testb
push
push
mov
mov
mov
ljmp
fdivrs
push
sub
adc
les
jg
jp
pusha
cmp
xor
adc
jecxz
in
bound
sub
inc
add
outsb
ficoms
dec
mov
cwtl
repnz
or
es
and
in
jmp
aas
stos
jnp
mov
cmp
lock
jg
pusha
sti
xor
push
jle
ret
cmpl
jno
aas
imul
es
mov
aaa
cmp
out
cs
jge
sub
and
inc
mov
mov
jo
mov
sbb
call
mov
or
lret
pop
mov
pop
aad
jns
pop
stos
insl
mov
rorb
push
pusha
adc
cmpsl
dec
jbe
stc
pop
dec
aad
sub
jp
jns
mov
sub
inc
fs
scas
push
loop
std
push
pop
mov
lcall
popf
test
sub
pop
xor
jnp
mov
adc
cmp
stos
fwait
mov
inc
test
inc
cmp
mov
mov
dec
repnz
and
mov
lahf
adc
pop
mov
je
or
es
cmp
push
mov
iret
pop
add
ret
lock
add
lahf
and
xor
mov
idivl
and
insl
jae
inc
xlat
adc
repz
daa
add
and
daa
mov
sub
loope
cmc
cmp
dec
mov
mov
xlat
lods
push
aam
data16
pop
lods
in
inc
xor
adc
arpl
rolb
repz
inc
push
gs
into
lret
fstpl
pop
push
sbb
jp
xchg
cmc
cmp
or
mov
pop
lahf
jae
sbb
pusha
shrl
mov
xchg
jbe
in
repnz
adc
subl
mov
jmp
push
inc
leave
enter
mov
xor
cmp
push
jp
lock
subl
adc
push
pop
ret
rolb
push
in
pusha
and
inc
xlat
xor
jae
jmp
clc
sar
cmpl
and
fs
push
adc
fwait
pop
fdiv
jp
bound
dec
paddsw
dec
push
sbb
cmp
gs
cmp
add
mov
jne
xchg
or
dec
jmp
jge
lcall
add
add
add
xchg
dec
iret
push
adc
adc
ljmp
test
daa
std
lods
push
cmp
rclb
pop
mov
enter
cmp
mov
xchg
cmp
out
test
movsb
xchg
cmpsl
or
repz
push
shrb
pop
or
mov
mov
cld
inc
sbb
repnz
jge
orl
movsb
or
not
movsb
sub
cltd
push
in
adc
popf
bound
mov
cmpsl
pop
in
andb
cmp
mov
inc
rorl
lret
loopne
jo
mov
inc
orl
pop
int3
cli
cmc
addr16
inc
xchg
sti
jmp
imul
iret
mov
insl
dec
scas
sbb
lods
subl
jle
jmp
call
sbb
mov
sbb
jecxz
xchg
mov
imull
sub
and
xchg
pop
sub
mov
in
pop
outsl
or
push
imul
pusha
cmp
cmpl
test
mov
mov
inc
imul
lahf
jge
daa
data16
or
push
sub
push
movsb
adc
pushf
pop
repz
fdivs
push
lcall
cmp
cld
xchg
jns
or
mov
adc
add
adc
push
jae
jne
sbb
pop
pop
pop
aam
outsl
push
popf
dec
call
adc
pop
movsl
push
push
stc
aas
pop
cmp
aas
fsubrl
inc
fwait
cmp
cmpsb
sbb
fsts
pop
lds
mov
ret
add
mov
xchg
cmp
dec
xchg
jb
pop
mov
and
sarb
mov
ljmp
enter
push
cmp
outsb
pop
xor
lods
out
jbe
push
jl
pop
je
push
cmp
ds
out
das
xchg
and
stos
int3
out
sbb
outsb
or
aaa
mov
pop
pop
lcall
ljmp
inc
clc
adc
jge
inc
push
mov
mov
or
push
mov
gs
insl
test
test
lods
bound
sbb
jo
xor
call
mov
in
ret
aas
jae
imul
cmp
sbb
sub
fisubs
pop
xchg
push
push
xlat
fs
dec
pop
ret
jae
jmp
inc
cltd
in
xor
bnd
dec
pop
in
sub
push
add
push
std
or
jg
outsl
push
cmpsl
mov
insb
insl
push
xchg
shll
in
outsb
lahf
mov
lret
movsl
jle
mov
dec
mov
jno
lea
sub
testl
mov
js
jbe
lock
dec
fidivrl
outsl
arpl
jnp
je
icebp
inc
adc
cltd
sub
loop
in
sub
aad
cmp
test
and
xchg
sti
push
mov
pop
xchg
xor
xchg
ja
inc
bnd
lock
nop
push
pop
outsb
test
push
dec
loope
ds
push
cmp
mov
scas
xor
clc
cs
cs
mov
pop
shlb
and
enter
mov
std
xchg
lock
mov
pop
pop
push
xor
iret
lret
mov
testl
or
out
inc
mov
in
ja
xor
es
insl
inc
push
and
iret
pop
pop
rcll
add
movsb
imul
icebp
add
push
push
add
jne
cmp
add
push
mov
cmc
das
dec
mov
push
mov
ja
push
mov
sbb
add
in
mov
jb
leave
loopne
movsb
popa
outsl
jge
jl
pop
inc
cmp
frstor
imul
jl
ss
stos
add
inc
adc
aad
or
push
stos
incl
lods
xchg
jno
loopne
nop
fsubrs
jle
js
or
arpl
nop
out
dec
scas
pop
cmp
pop
xor
stos
sbb
call
std
sbb
sub
jge
adc
pop
mov
bsr
pop
popa
push
add
push
lds
out
out
test
es
xchg
jno
push
js
bound
fisubl
idiv
stos
adc
mov
arpl
hlt
mov
out
pushf
or
mov
clc
push
sub
sub
sub
adc
xchg
loop
mov
jecxz
cmc
movsl
pop
enter
sbb
clc
mov
pop
mov
jge
mov
popl
pand
lahf
popa
orl
ret
and
xor
push
xor
push
mov
push
sbb
jb
pop
out
test
into
and
ds
mov
arpl
dec
into
icebp
ss
sti
leave
pop
in
lcall
cmp
scas
cli
cs
dec
movsb
xchg
sar
test
and
cmp
pop
mov
divb
jo
push
pop
push
pop
insb
loop
adc
mov
ret
lods
dec
or
xchg
xchg
inc
fisubrs
push
push
push
repnz
loop,pt
fcoms
iret
out
jge
stc
xchg
arpl
stc
ljmp
repz
push
shr
aas
jmp
add
mov
rorb
or
outsb
sbb
mov
xor
ja
pop
mov
fnstsw
pop
fwait
mov
cmpsb
push
rol
sub
cwtl
inc
int
inc
loope
cwtl
in
pop
cmc
mov
xlat
popf
sub
xor
pop
mov
pop
aam
mov
mov
sti
xor
fs
mov
jmp
xor
mov
cld
adc
in
pushf
and
repnz
sub
lods
pusha
gs
aas
inc
push
push
and
jge
shlb
add
push
mov
push
mov
aad
and
out
xor
outsl
ficompl
xchg
push
sahf
jmp
or
gs
rol
jg
jl
pop
mov
das
inc
xchg
enter
push
out
mov
stos
and
jae
jge
int
xchg
pop
and
test
shrb
jb
push
hlt
mov
mov
pop
and
mov
mov
imul
cltd
in
add
jne
dec
scas
mov
push
loop
mov
inc
jp
out
lcall
xor
or
mov
mov
movsb
inc
mov
cld
ja
sti
sbb
fwait
mov
sbb
imull
out
adc
pop
push
mov
push
shll
xchg
jae
lds
jmp
flds
test
or
cmp
into
adc
push
push
fiadds
or
ds
sbb
movsl
out
cmc
jmp
cld
in
aam
xchg
xor
and
pop
push
loope
call
aad
in
or
insb
or
dec
pop
pop
mov
shll
xor
notl
pop
cmp
xor
divb
scas
mov
add
cmpb
lds
les
movsb
jge
shl
xor
les
out
decb
xor
cmp
out
bnd
add
pop
mov
lods
push
jne
inc
loope
add
loop
fadds
mov
mov
das
sbb
xchg
cmp
xlat
cmp
jnp
and
add
aam
aas
into
mov
mov
gs
sar
add
mov
aam
xor
add
and
pop
aam
ljmp
dec
sbbl
jmp
lahf
fwait
push
inc
xlat
iret
jle
leave
fisubrs
fdivs
scas
inc
cli
push
adc
insl
fcoml
pop
test
fldcw
pop
out
negl
pop
jp
gs
das
mov
hlt
mov
jnp
push
push
cmp
ficoms
scas
xor
or
cltd
add
jb
adc
jge
aas
rorl
test
arpl
sub
fbld
pop
incb
imul
aam
jne
xchg
sbb
push
mov
insl
pop
stos
xor
inc
push
out
dec
daa
push
jno
popa
ljmp
push
in
mov
xchg
cld
fcompl
mov
mov
xchg
inc
push
push
mov
outsb
push
out
sbb
add
subb
sbb
in
adc
cmp
fstl
jb
ffreep
push
ret
dec
imul
aam
sbb
in
pop
inc
out
jb
inc
xchg
jmp
dec
mov
fs
enter
inc
lods
popa
stc
sub
xchg
add
mov
imul
xchg
enter
adc
sub
int
call
xchg
pop
test
out
or
mov
and
jmp
test
mov
or
test
cwtl
out
xor
sub
sbb
xchg
imul
ss
mov
push
sbb
xchg
std
xchg
orl
cmp
dec
mov
jg
scas
dec
gs
dec
inc
data16
xor
push
add
arpl
addl
shll
out
addr16
and
std
loopne
sahf
lea
jg
lcall
adc
scas
mov
je
scas
mov
dec
add
aad
fists
adc
lahf
push
arpl
jns
loopne
loopne
out
inc
mov
je
mov
bound
push
and
push
inc
andb
adc
in
inc
add
pop
fcoms
or
dec
and
adcl
jecxz
or
mov
out
aas
and
test
idiv
nop
and
jle
ret
outsl
cmp
out
rcrb
lret
aas
jl
icebp
cmp
mov
mov
sbb
mov
push
repnz
jmp
inc
jne
mov
jmp
push
cltd
in
leave
pop
insl
mov
ljmp
jno
lret
sbb
aaa
cli
adc
pop
std
sbb
fldenv
xor
mov
inc
jb
and
pop
push
pavgb
loop
mov
das
ret
dec
xor
sbbl
hlt
mov
jno
dec
jbe
jno
scas
sbb
sub
mov
imul
inc
push
int3
add
arpl
and
lods
cs
loope
int3
inc
std
stos
test
sub
add
rorl
int3
mov
xchg
adc
push
xchg
cmp
xchg
mov
shlb
sub
xor
cmpsl
lea
mov
insl
mov
push
fsubrs
outsl
aad
jnp
jecxz
fisttpll
jb
cmp
jle
mov
ljmp
mov
ficompl
cwtl
ss
xchg
add
lock
shl
sahf
jmp
push
xor
mov
scas
push
cmp
push
ret
inc
sub
dec
sbb
fdiv
mov
push
mov
pop
xor
mov
adc
xchg
push
cmc
pop
cmp
outsb
push
addr16
outsb
mov
test
mov
dec
cmpsb
loopne
mov
icebp
push
ffree
add
mov
push
push
stos
jnp
cwtl
insb
loope
adc
or
dec
xchg
adc
js
and
cli
jno
dec
pushf
push
dec
push
jmp
aad
and
xchg
adc
push
xchg
xor
lods
divl
mov
sbb
stc
outsb
or
jnp
xor
data16
arpl
sub
jp
loop
jmp
iret
jns
jmp
fisubrs
divl
jmp
pop
adc
aad
pop
cmpsb
mov
loopne
stc
test
mov
test
lods
xchg
sahf
lcall
fnstenv
ret
dec
repz
xchg
mov
jns
dec
pop
xchg
add
xchg
jmp
mov
sub
ffree
imulb
lret
rorb
rcr
mov
jp
sbb
jbe
add
cmp
or
imul
stos
mov
push
xchg
mov
jl
mov
mov
aaa
dec
scas
sub
ss
mov
xor
inc
notb
mov
mov
sbb
hlt
and
xchg
imul
aas
arpl
lock
push
hlt
int
xor
fisubl
filds
jmp
adcl
out
lret
ljmp
ds
mov
imul
jge
xchg
mov
cs
fcompl
fmul
int3
jo
lcall
sbb
ficoms
pop
aaa
in
xchg
lods
call
xchg
cmpsb
aas
pop
cli
or
sar
mov
dec
movsl
decl
dec
or
jecxz
stos
bound
cmp
mov
popf
pop
int
imul
push
mov
ljmp
push
into
push
lret
adc
sub
sub
xorl
jne
ret
add
and
adc
sbbb
lock
imul
sbb
fucomip
orl
shlb
add
imulb
mov
bound
push
mov
jecxz
pop
cmp
push
cmp
test
rorl
iret
push
add
push
jo
cli
popf
mov
jo
stos
test
pop
fists
pop
mov
dec
or
pop
and
xor
jns
fisubl
and
dec
into
and
arpl
cld
movsb
mov
mov
mov
mov
or
mov
push
stos
repnz
sub
cmp
aaa
jns
pop
js
xchg
xchg
aas
cmp
mov
js
dec
rorl
sti
jecxz
push
sub
imul
pop
xchg
flds
jns
push
xor
int
cmp
lods
mov
dec
rorb
insb
nop
pop
xchg
lock
cmc
xchg
cmp
movsb
fs
cwtl
mov
jo
inc
loope
lds
insb
cli
mov
loop
mov
jae
push
xlat
in
inc
pop
xchg
test
jne
or
icebp
int
popa
lea
fsub
sub
bound
in
xor
fmull
jecxz
ja
in
xor
xchg
enter
mov
lods
cmp
das
pusha
mov
xchg
sbbl
cmp
pop
mov
repz
jg
aas
sbb
repz
loope
fstpt
adcl
popw
push
fmul
push
dec
mov
leave
lods
pop
mov
pop
mov
insb
adc
or
je
push
mov
repz
inc
mov
out
pushf
cmp
fcomip
test
stos
in
push
pop
and
mov
mov
push
or
jno
dec
mov
lcall
les
inc
xchg
enter
sbb
sbb
mov
repnz
repnz
dec
fnsave
ss
add
fnstenv
lods
mov
sub
scas
imul
stc
push
jl
test
iret
mov
add
mov
xchg
subl
cmp
and
clc
mov
iret
pop
in
cli
jae
lods
push
lea
dec
hlt
sbb
ficompl
je
imul
cmp
pop
jno
aaa
xor
add
lret
rclb
sub
sbb
xor
or
add
xchg
jno
aad
mov
cmp
lea
push
cmp
adc
cwtl
xchg
mov
mov
out
hlt
rorb
repnz
push
push
clc
je
mov
out
and
iret
add
and
jae
rorl
pop
cld
sbb
jl
push
fs
fisttpl
sbb
int3
repnz
inc
xor
int3
jbe
pop
daa
data16
sub
andps
dec
dec
cltd
jae
or
aad
lret
cmp
shrl
xor
dec
dec
stc
gs
dec
das
emms
in
push
cmc
iret
inc
pushf
mov
insb
lods
cmpsb
pop
mov
jne
dec
jbe
hlt
bound
and
jne
add
sti
and
sbb
test
xor
ret
cmpsl
mov
sahf
test
dec
lret
outsl
lods
push
mov
shrb
push
or
inc
pusha
jecxz
mov
pop
dec
xchg
add
mov
cmpsl
inc
mov
push
push
add
xchg
sub
clc
lahf
ret
pop
jle
imul
pushl
and
dec
movsb
jb
cmp
std
push
pop
lock
fsub
mov
lret
pop
dec
push
and
sub
and
cld
fs
aaa
mov
ljmp
cmp
pop
xchg
pop
push
xchg
jnp
xor
repz
sub
test
push
ss
push
insb
cwtl
adc
jb
out
add
in
pop
adcb
in
or
push
inc
add
ret
shlb
jge
cmpsl
xchg
rclb
repz
dec
push
inc
inc
pop
sub
loope
inc
mov
or
jbe
mov
pop
add
and
fmull
xchg
adcb
clc
ss
outsb
mov
out
cmp
mov
in
pop
insl
cmp
ljmp
xchg
xlat
inc
mov
pop
shll
and
test
rclb
popf
stos
gs
mov
cwtl
leave
dec
ds
push
push
push
cmpsl
push
ss
inc
cwtl
sub
pushf
dec
mov
and
dec
sub
stc
jp
mov
jmp
fcomip
inc
mov
jle
push
dec
cmc
inc
lcall
push
adc
sbb
stc
lods
xchg
push
out
icebp
mov
cmp
jl
pop
pusha
inc
aaa
pop
lcall
ds
mov
push
xor
loope
in
aaa
push
lahf
loope
adc
mov
or
push
std
jmp
sub
push
sbb
stos
push
jge
rcrb
in
pop
sbb
mov
aaa
mov
cltd
and
and
mov
or
push
lahf
mov
arpl
add
sbb
mov
or
or
cli
imul
pop
mov
mov
mov
mov
dec
xor
popf
hlt
scas
add
rcll
js
pushf
dec
xlat
std
clc
in
cmp
jge
cld
xchg
pop
mov
notl
aad
jno
add
xchg
pushf
adc
jns
jnp
jg
push
lods
push
or
jnp
cltd
sar
jecxz
cmp
lods
jge
int3
rcll
imul
dec
and
orl
adc
ret
popf
dec
repz
jecxz
in
pop
xchg
popa
mov
pushf
fcom
xor
mov
jmp
sahf
test
leave
inc
mov
dec
mov
hlt
scas
or
or
pop
pop
mov
cmpsb
or
add
mov
lods
fdivr
das
adc
cmp
sbb
iret
shl
cmp
add
cmp
imul
or
loope
aaa
test
sub
outsl
icebp
lahf
xor
mull
outsl
jbe
xchg
cmpsb
daa
sub
xchg
pushf
lret
push
fsub
jbe
test
mov
insl
fcom
mov
push
or
ficompl
cwtl
mov
xchg
push
cwtl
sbb
popa
add
cmc
cmpsl
into
mov
stos
sbb
push
lea
cmp
dec
push
adc
adc
ret
lahf
xchg
cmpsl
push
pushf
push
roll
daa
pusha
sahf
and
jne
mov
mov
stos
in
push
mov
jmp
stc
lret
and
mov
les
hlt
dec
dec
loop
mov
out
xor
jle
out
stos
adc
and
mov
sbb
mov
pop
adc
cmpsl
lret
sub
ud1
lods
pushf
inc
mov
cs
sbb
in
insl
mov
mov
jmp
ljmp
enter
pushf
cwtl
daa
sub
and
in
imul
movsb
outsb
cmc
mov
sar
pop
push
sbb
lcall
cld
and
push
fldt
test
inc
push
stc
pop
xchg
repnz
add
repnz
inc
scas
mov
inc
mov
imul
and
stos
iret
insl
cmp
sahf
pop
jno
std
dec
shlb
popf
rclb
jne
stos
xor
and
mov
lahf
pop
fimuls
in
insb
adc
aam
fsub
je
sar
xchg
push
adc
pop
inc
push
push
mov
or
enter
sbb
roll
inc
jbe
lds
push
add
scas
mov
push
jmp
rol
add
jp
cmpb
fdivrp
jl
cltd
mov
xor
iret
mov
mov
pushf
insb
aas
aas
jbe
movsl
in
test
mov
inc
mov
add
pop
mov
mov
cmp
sub
add
icebp
movsl
adcl
lea
add
mov
sbb
xchg
jg
xorl
dec
lods
push
ficoml
cmp
mov
mov
lock
stc
mov
in
icebp
inc
fdivp
sub
ret
sbb
dec
fisubrl
rcrb
mov
mov
das
jnp
adc
es
movsl
jns
mov
sub
out
mov
lods
mov
xchg
jp
lret
adc
add
ffreep
jb
mov
shll
addr16
push
daa
xchg
xchg
lock
add
fmull
scas
popf
cwtl
stos
add
std
mov
mul
inc
adc
push
lret
out
and
inc
pop
fcoml
and
mov
mov
stos
out
mov
movaps
out
or
mull
push
cmp
fdivp
lds
cmpsl
out
or
mov
dec
cmp
add
pop
sbb
mov
cmp
adc
js
xchg
lods
jp
pop
push
mov
clc
mov
mov
sbb
ljmp
xchg
add
lock
cmp
lods
js
cmp
dec
jo
test
xor
fwait
cmp
cmp
out
sub
or
cmp
data16
or
push
inc
cmpsb
xchg
pop
aad
xchg
fwait
lds
mov
lods
test
lret
or
enter
mov
jb
nop
inc
sub
mov
gs
sbb
inc
lea
adc
mov
sti
or
mov
icebp
dec
and
iret
mov
out
dec
push
push
aad
stos
dec
xor
push
or
into
sahf
pop
pop
cwtl
cmp
call
push
inc
aaa
pop
out
push
je
popf
test
shll
stc
or
dec
shll
sbb
push
into
repz
sub
inc
test
mov
jp
jno
rcrl
push
jno
fdivrl
in
bound
fcoml
push
cmp
inc
inc
icebp
pop
out
inc
jg
mov
and
mov
and
icebp
and
sbbl
adc
mov
adc
push
and
cmc
push
lods
sbb
pop
and
daa
pop
pop
adc
call
fisttpll
fs
sbb
aam
cmp
in
push
insb
fnstsw
lock
gs
aad
stos
and
test
mov
sbb
dec
xchg
cmp
inc
pop
out
dec
sub
pop
cwtl
xchg
hlt
decl
cld
pop
fisubrl
adc
rcl
pop
scas
jp
push
out
mov
push
fistps
call
popf
outsb
or
sub
push
pop
sub
inc
push
jo
clc
adc
arpl
cmp
jo
pusha
xchg
adc
leave
fildl
pop
inc
jns
adc
push
cwtl
std
sub
jmp
xchg
xor
sub
push
data16
lret
mov
mov
add
cmp
xchg
les
out
push
add
mov
mov
sti
loopne
fcoms
sub
jle
and
add
or
outsl
mov
fistpl
popa
les
ljmp
popf
and
loope
sbb
jae
xlat
mov
or
xchg
shll
or
and
out
jecxz
imul
fxtract
cwtl
fcomps
dec
push
ret
out
cmp
sub
stos
aaa
xchg
lret
fldcw
mov
sbb
lahf
fcompl
sub
test
and
xchg
dec
repnz
in
js
and
lret
jb
add
cmpsb
cmp
in
sti
push
stc
sbb
imul
push
shlb
test
sahf
cltd
push
sti
adc
out
jbe
sbb
sahf
jb
sub
xor
mov
pop
inc
and
incb
mov
lea
xor
mov
or
mov
xchg
jmp
in
out
mov
cs
and
cmpsl
in
and
xchg
bound
comiss
js
jbe,pn
aaa
iret
and
notb
xchg
xor
mov
jmp
push
loopne
sub
xchg
pop
mov
cs
lret
cli
push
pusha
mov
inc
cmp
pop
fcompl
xchg
mov
adc
mov
push
jg
movsb
mov
mov
ljmp
xchg
pop
mov
xchg
push
pop
pop
adc
jne
icebp
and
inc
faddl
adc
sbb
and
stos
pop
dec
loop
or
and
outsb
xchg
enter
xchg
mov
ja
imul
and
adc
je
or
cmc
mov
sub
cld
mov
dec
or
xorl
inc
in
pop
or
inc
cmc
arpl
mov
ljmp
pop
fcoms
and
cmc
xchg
jmp
unpckhps
ja
hlt
xchg
rclb
ljmp
mov
jmp
ret
jp
mov
mov
mov
movsl
mov
pop
sub
mov
stos
xchg
inc
pop
sub
sbb
sbb
mov
jmp
jecxz
fnsave
adc
ficomps
out
add
cld
inc
or
bound
push
push
out
mov
push
and
jp
rorb
out
adc
or
jb
or
mov
jno
or
mov
or
mov
lret
mov
in
idivl
loop
das
adc
mov
loop
les
and
pushf
aam
stc
or
xchg
pop
sahf
aam
fs
std
dec
xor
mov
rcll
sbb
lods
addb
push
cmp
scas
movsb
mov
mov
push
int3
pop
sub
cwtl
movsb
add
outsb
pop
xor
or
pop
mov
aad
jle
mov
in
or
mov
pop
cmpsl
or
adc
jg
inc
jno
dec
clc
jb
push
cltd
popf
neg
adc
pop
inc
in
fs
dec
loopne
test
fmulp
out
rcrb
or
push
sbb
in
sub
clc
rcr
cmp
enter
stos
iret
mul
mov
lods
int
es
cmp
adc
xor
jne
outsl
dec
or
sbb
pusha
clc
and
pop
cvtdq2ps
dec
divl
loopne
add
test
lcall
jae
mov
cmc
addb
pop
mov
je
inc
jmp
ret
mov
mov
int3
mov
lret
push
loope
int3
cmpsb
cwtl
mov
dec
xchg
push
cmc
push
ret
pop
std
fs
xchg
xor
push
das
addl
xchg
in
add
mov
je
push
adc
cli
mov
je
mov
rcl
and
icebp
repz
push
out
andl
jns
andl
aam
mov
lret
mov
sbbl
cmpsl
ret
aas
je
insl
jae
inc
popa
cmpsl
rcll
mov
outsl
xchg
insl
ficoml
loopne
mov
xchg
dec
sub
hlt
xchg
out
notl
loope
xor
shl
cmp
mov
xchg
cld
mov
scas
dec
or
les
and
out
inc
add
jo
fistps
imul
lock
cmc
lods
jle
aaa
outsl
test
sbb
push
push
xor
mov
xor
sbb
jg
mull
push
mov
outsl
mov
mov
fnsave
add
pop
pop
mov
rcr
xor
das
loopne
lret
out
jmp
rol
mov
jle
cmp
lret
shrl
add
sahf
int3
stos
inc
in
xchg
in
jecxz
shlb
lea
inc
xor
stos
hlt
loop
ds
hlt
lds
adc
xor
in
dec
pushf
add
hlt
push
fisubrs
push
mov
mov
xor
jb
ffreep
test
dec
lea
push
dec
cli
xchg
and
cmp
sahf
mov
clc
rclb
xor
mov
outsb
cs
jge
leave
int3
adcl
sbb
aas
int
fwait
inc
cmp
xlat
addr16
sub
jne
jne
adc
fsubrl
xor
sbb
nop
mov
cli
push
in
ficoml
lret
add
rolb
add
push
daa
jbe
ret
and
and
jo
xor
xor
pop
into
movsb
dec
rcll
gs
popf
push
mov
out
cmp
and
mov
jns
xchg
icebp
ljmp
stos
jno
mov
fs
push
or
xor
add
pop
adc
mov
mov
cmpsl
outsl
fwait
js
pop
imul
jl
and
enter
mov
xchg
and
jmp
sub
or
lret
into
ret
push
push
test
cmp
lcall
imul
jns
test
pop
ret
lock
std
lret
mov
push
and
cmp
pushf
mov
int3
out
dec
pop
dec
int3
push
cmp
jmp
jg
jne
mov
jne
je
mov
dec
jp
jg
aas
mov
xchg
push
jae
push
push
cs
jne
mov
mov
mov
fcomps
fsts
cmp
mov
xchg
repz
loop
test
sbb
push
or
clc
cmpsb
inc
fcompl
addr16
lcall
ja
sti
xor
sub
pop
rcr
roll
mov
cmp
adc
sahf
ficoml
adc
cli
sbb
add
ja
mov
out
in
or
inc
data16
popa
mov
mov
jmp
shl
mov
hlt
popf
push
cmp
push
or
sar
out
insl
mov
pop
adc
xor
mov
imul
in
push
loopne
aas
mov
loopne
jp
fldl
pop
shrb
push
push
es
jno
or
sbb
dec
test
shll
das
mulb
lahf
cmp
popl
ret
pusha
or
or
jmp
or
jmp
mov
call
jbe
add
popl
rorl
cmpsb
cwtl
pop
mov
dec
mov
notl
rcll
ss
mov
mov
movl
shlb
xlat
jbe
aad
sbb
mov
xorb
dec
inc
adc
pop
push
add
sbb
insl
out
push
jg
mov
push
pop
movsl
mov
pop
sbb
sub
jne
je
insl
imul
add
clc
sbb
pop
and
imul
orl
jns
sub
movsl
ret
xchg
mov
cli
sbb
mov
xor
dec
test
in
mov
rcrl
insl
aad
cmpsl
movsb
push
adc
popa
fidivrs
jge
xchg
popa
xchg
or
bound
inc
xor
aad
lods
pusha
inc
aam
jg
dec
cmpw
in
imull
incl
mov
adc
push
in
dec
xor
xchg
and
mov
stos
jmp
sub
adc
mov
fimuls
outsb
lret
dec
mov
fdiv
cltd
jg
sbb
jno,pt
xchg
lock
ss
data16
sbb
mov
jle
sbb
call
fmulp
leave
ja
pop
and
cmpsl
addr16
scas
stos
in
pop
sbb
adc
addr16
out
adc
adc
mull
insb
add
jp
xchg
cwtl
mov
shlb
or
je
push
cwtl
xlat
aad
sbb
imul
ja
dec
xchg
add
and
mov
mov
cmp
mov
mov
leave
mov
test
sub
pop
test
mov
mov
jmp
fsts
test
mov
rcl
lcall
in
cmp
mov
sbb
leave
int3
push
nop
jmp
xor
or
dec
ret
lahf
mov
and
or
sub
testb
push
popa
pop
out
lds
cmp
or
pop
cmp
punpckhwd
les
int
cwtl
das
or
popf
and
and
sbbl
pop
and
mov
mov
xchg
aaa
movb
movsl
adc
hlt
int3
pop
and
cli
and
mov
xor
ljmp
xchg
xor
xchg
xor
dec
insl
lret
inc
aas
idivl
mov
scas
lret
mov
push
fs
lea
xchg
pusha
imul
insl
mov
sub
ss
pop
xchg
leave
dec
je
out
leave
repz
xor
out
or
push
mov
sbb
btc
push
mov
xchg
test
std
sub
mov
jns
cmpsb
inc
loope
adc
or
rep
and
int3
add
xor
loopne
and
fcomp
cmp
ds
ret
push
inc
and
or
xchg
js
fistps
loope
jle
lahf
enter
fisubrl
or
push
xchg
rorb
aad
pop
mov
jmp
jmp
inc
xorl
add
addl
fcomps
or
inc
push
mov
imul
loop
or
stos
ret
jecxz
inc
pop
cmc
mov
inc
pop
xchg
push
mov
mov
cmp
sub
fcmovb
mov
test
or
mov
xor
aam
leave
push
imul
mov
pop
pop
shll
aas
aas
lcall
cltd
int
imul
rcr
imul
pop
pop
push
mov
idivl
rorb
ljmp
mov
cmp
popa
mov
xchg
mov
inc
es
stc
icebp
les
test
cmpsb
pusha
jns
bound
pop
or
push
je
xchg
fisubrs
jnp
pop
fnstcw
addl
xchg
test
add
dec
mov
mov
loop
pop
inc
in
daa
jo
jle
cs
or
daa
loope
pop
push
mov
inc
out
mov
out
addr16
xor
cmp
jle
mov
sbb
xor
es
fiadds
cmpsl
dec
jge
cmc
jb
xor
divl
or
add
inc
loop
lods
iret
cli
scas
repz
loopne
push
inc
arpl
daa
inc
ret
ret
imull
icebp
jnp
sbb
push
jb
loope
dec
sbb
shl
in
mov
arpl
push
mov
push
lret
push
sbb
mov
cmp
out
out
mov
ss
xor
in
cmp
repz
lahf
arpl
icebp
pop
fnstenv
gs
js
test
js
jle
inc
mov
jge
adc
lcall
mov
and
pop
cltd
mov
xor
rcr
push
mov
pop
outsl
add
mov
icebp
and
dec
add
dec
mov
int3
pop
pop
and
mov
and
adc
dec
testb
test
mov
cmp
jae
push
lahf
movb
je
fcmovnb
add
jne
mov
cmp
idivb
mov
mov
rol
sub
sbb
notl
insl
jne
lret
or
icebp
add
mov
xchg
xor
jl
inc
or
lret
cmc
cmp
aam
mov
xchg
shll
test
sub
sub
mov
push
inc
outsb
rcrl
aas
hlt
and
call
add
pop
jp
roll
outsw
stos
pop
fidivs
cmc
faddl
mov
push
add
popf
sub
adc
add
add
cltd
and
ljmp
xchg
js
xchg
mov
pop
or
push
xor
fstpl
out
clc
loopne
lret
mov
icebp
mov
mov
hlt
int3
lds
and
out
je
adc
lcall
jle
mov
ds
in
int3
or
mov
mov
inc
adc
cmp
push
test
addb
pop
jl
in
mov
xor
test
jecxz
jp
mov
or
pop
mov
or
out
inc
cld
movsb
pop
lret
fsubrp
dec
pop
shll
les
adc
cltd
fwait
pop
scas
in
test
xor
lock
je
xchg
unpckhps
in
adc
int
stos
js
lss
pop
ret
jg
ja
shr
inc
adc
mov
sbb
xchg
mov
jmp
arpl
cltd
adc
add
insl
mov
xlat
lret
push
cmp
out
push
cld
lret
xchg
mov
aam
and
jno
mov
push
ljmp
icebp
loopne
sbb
or
adc
dec
in
adc
ljmp
imul
push
or
dec
or
pop
lahf
adc
add
pop
cwtl
and
jle
cmp
addr16
cmp
sbb
adc
insb
jecxz
fiadds
mov
inc
popf
out
or
xchg
repz
jl
lret
insl
mov
popa
inc
aad
out
mov
paddusw
nop
jbe
lods
dec
into
dec
mov
shll
popf
repz
sti
pop
fs
lret
in
das
jg
mov
mov
decl
and
sub
jbe
out
fmul
lahf
test
out
ja
test
cld
pop
xchg
push
pop
adc
lock
or
bnd
cld
dec
push
add
sbb
vhsubpd
scas
push
xchg
pop
cmpsl
jl
mov
or
std
les
call
cltd
aad
into
int3
lret
lret
lods
pusha
xlat
mov
sub
adc
andl
daa
pop
and
lret
movsb
and
ret
push
and
sub
je
inc
roll
adc
mov
push
rcrb
adc
stc
outsl
sysret
mov
mov
mov
xor
mov
into
int3
jnp
adc
pop
jg
enter
push
lds
hlt
sbb
pop
pop
dec
fnsave
mov
mov
fisubrl
jp
dec
nop
inc
enter
and
pop
add
rcrb
aaa
ss
xchg
lahf
or
sub
decl
rdmsr
push
lahf
enter
rcll
and
sbb
cld
out
cmp
imul
add
not
pop
xor
adc
add
hlt
les
jae
and
nop
inc
adc
cmp
ljmp
pushf
dec
mov
aad
hlt
sub
xor
dec
cmc
xchg
popf
and
cmp
notl
adcl
pop
add
xchg
dec
scas
sbb
shll
sar
and
sti
push
mov
outsb
lea
mov
inc
dec
lret
lahf
xchg
pop
xor
mov
push
sarb
jo
add
or
clc
pushf
scas
xchg
fcos
mov
loopne
cmc
xchg
mov
add
fcoml
pop
adcb
sub
mov
je
int3
sti
in
push
cmpb
pusha
mov
add
shr
mov
mov
cmc
cmp
sti
pushf
fimuls
cwtl
leave
sbb
mov
mov
out
jl
sbb
lahf
loop
call
testl
or
leave
xchg
movsl
jge
cmp
mov
movsb
inc
repz
mov
push
ret
test
out
cmp
push
psraw
and
das
aad
addr16
cmc
mov
in
loope
or
push
shll
xor
adc
adc
fldenv
and
lahf
daa
hlt
push
sbb
or
movsb
out
xchg
or
test
sbb
adc
adc
fmuls
cmc
adc
js
mov
imul
dec
lods
sub
rcll
or
inc
out
cmc
lret
je
popf
or
pop
sti
push
ja
xchg
lahf
mov
xor
mov
pop
mov
in
pushl
add
dec
lea
js
int
pop
or
xchg
ficoml
pop
mov
sbb
stc
adc
cmp
push
push
sti
sti
clc
mov
sbb
fwait
mov
cli
pop
mov
fwait
or
dec
out
add
push
out
and
mov
in
mov
mov
adc
push
jnp
enter
into
lds
fisttpl
into
shll
xchg
cltd
sbb
mov
ret
adc
sub
push
inc
adc
mov
pop
mov
jbe
das
mov
jmp
loope
pop
xchg
idivl
test
outsb
dec
jnp
sub
fsts
fsts
mov
jmp
cmp
push
es
stc
scas
jg
int3
into
jg
push
add
xchg
mov
xor
test
dec
in
test
jae
mov
aad
test
in
xorl
lock
imul
pushf
cmp
mov
in
adc
into
cli
mov
mov
adc
ds
sbb
popf
xchg
jl
cmc
push
das
adc
sub
dec
imul
std
and
mov
cmc
xor
and
or
jmp
xchg
lahf
stc
icebp
cmp
sub
stc
dec
in
std
cmp
mov
icebp
lock
mov
out
mov
mov
push
fsubrs
addb
aaa
sbb
imul
push
adc
or
push
rcll
sbb
inc
enter
stos
and
mov
call
mov
sub
out
call
xchg
enter
sbb
lods
dec
lds
pop
sub
ljmp
std
fmul
jb
pop
pop
pop
rcrb
leave
data16
xor
sub
dec
or
xchg
jo
jmp
imul
ret
cmp
test
imul
int3
out
in
jb
cmp
add
jmp
out
cs
xchg
mov
add
dec
cmp
jns
sti
adcl
mov
sarb
adc
cs
dec
pushf
loop
icebp
in
xchg
and
jp
and
filds
jae
mov
fwait
sbb
out
test
std
mov
insl
ljmp
mov
repnz
push
adc
dec
mov
jns
test
xor
push
fld
xchg
aad
jno
loopne
cmp
ffree
pcmpeqd
ret
lock
and
out
or
pop
js
pusha
iret
push
xor
lds
pop
or
dec
es
mov
push
cmp
jbe
popl
fstpt
fidivrs
sub
sbb
xor
enter
into
adc
pop
lods
js
jnp
mov
test
leave
sub
in
mov
pop
in
stos
lds
mov
sbb
mov
lods
das
xchg
mov
aam
add
add
jge
fidivrl
lahf
out
fildll
mov
mov
inc
and
push
iret
stos
mov
jp
mov
mov
jmp
sub
sub
cwtl
inc
push
inc
enter
mov
mov
cmp
out
cmpsb
aas
pop
jne
iret
arpl
push
bound
jb
imul
dec
clc
xor
roll
test
fisttpll
in
aad
loopne
pop
ret
icebp
divl
mov
aam
ss
cmp
cmp
cmc
sbb
test
lds
xor
fidivrl
jg
addr16
loopne
int3
mov
xchg
xlat
scas
loopne
stos
bnd
pop
fisubs
aas
cmp
jl
icebp
adc
lea
jg
stc
loopne
pop
xchg
fldl
cmp
scas
mov
jbe
cmp
repz
lret
cmp
sarb
aam
mov
push
rclb
xor
or
xlat
pop
hlt
ss
pop
scas
sbb
pop
fimuls
in
mov
mov
add
lods
jmp
pop
push
es
lds
scas
fwait
outsl
inc
xor
lahf
push
addr16
push
add
sub
inc
inc
mov
ljmp
lcall
aas
adcb
inc
aad
stos
cmpsb
pop
shrl
leave
and
ja
shrb
and
xchg
fucom
inc
aam
mov
or
jnp
fiaddl
out
inc
ficoms
lods
testb
stc
mov
repnz
ret
pop
not
test
fptan
mov
dec
sub
insb
push
dec
scas
loope
pusha
cmp
push
pop
xlat
dec
add
jne
cs
xchg
fs
and
aaa
push
pop
push
stos
inc
js
fidivrl
fidivs
xchg
lock
add
xchg
setns
adcl
enter
rorb
dec
insb
push
sbb
das
adc
push
adc
jns
xchg
js
dec
ds
fbld
sub
cltd
or
xor
icebp
rcrb
rcl
popa
sbb
sub
jb,pt
cltd
xor
push
adc
or
cmp
pop
insb
sbb
xchg
aaa
loopne
loop
sbb
adc
repz
fs
push
dec
in
rorl
sub
jbe
dec
mov
inc
mov
cmp
ret
iret
loope
ret
jns
jl
push
leave
andb
sbb
arpl
pop
movsl
push
mov
cmp
dec
sbb
dec
and
sahf
jmp
pusha
jg
stos
lock
icebp
test
or
adc
leave
aam
ja
xor
xchg
js
vpsrlq
daa
mov
in
ja
addb
movsl
loope
repz
jp
jge
or
sti
pop
popf
in
outsb
mov
stc
out
icebp
cwtl
es
test
ja
call
push
lock
pop
or
jge
adc
add
pop
add
cmpsb
xor
inc
mov
push
lock
ja
gs
fistl
or
ficoml
aad
jo
xchg
or
add
mov
fidivrl
mov
fdiv
dec
and
pop
inc
xor
add
ljmp
adc
enter
imul
fldenv
sbb
mov
sti
dec
shrb
cmp
pop
mov
aaa
push
sub
jnp
jmp
xor
and
mov
ljmp
testl
repnz
jle
mov
jne
cmp
mov
xchg
sbb
outsl
push
hlt
cmp
ja
test
jnp
cmc
sbb
aaa
popa
popw
js
fwait
popf
out
cltd
fists
sub
imul
xlat
jle
int3
cmp
lock
pop
lods
movsb
scas
or
fnsave
mov
pop
nop
sub
ljmp
sub
adc
std
xor
ret
or
lock
ret
adc
xchg
cmc
decb
sub
aam
push
rorl
hlt
mov
das
mov
lock
je
jnp
or
or
pop
shlb
pushf
movsb
xor
add
clc
and
jle
dec
int3
mov
sub
add
leave
cmc
add
ss
mov
js
lahf
xchg
pop
xor
rcr
lods
cld
sub
or
stos
cwtl
test
inc
movsl
xchg
jecxz
jg
sbb
insl
cmp
push
mov
mov
sub
aad
bnd
mov
jle
fistpl
xor
mov
js
mov
jge
push
ja
mov
inc
push
into
dec
sub
std
movl
iret
or
xor
xor
lret
outsl
out
roll
mov
cmc
cs
popa
decl
mov
mov
fwait
enter
fstpl
push
out
gs
adc
xlat
outsl
in
and
in
cld
not
cmp
rcl
adc
mov
push
divl
mov
add
mov
sbb
roll
mov
sub
sbb
pushl
loopne
hlt
jo
ret
sub
out
and
cs
jp
dec
jecxz
jnp
push
clc
cmc
movsl
and
cltd
add
fs
and
rcll
lock
adc
jmp
mov
push
outsb
inc
jl
adcl
scas
hlt
mov
jne
pop
dec
xor
mov
dec
cli
stc
or
fsubr
lods
rclb
loope
mov
cmp
sub
scas
inc
sbb
shll
lds
sbbl
sub
popf
inc
pop
loope
dec
xchg
or
jmp
inc
cld
adc
js
sbb
xor
out
rorl
pushl
movsl
push
mov
dec
pop
jbe
xchg
stos
mov
adc
scas
lahf
das
fwait
pop
nop
mov
mov
inc
and
cmpsb
cmp
push
push
data16
loop
push
rcrb
sbb
xchg
into
jno
lret
es
cmp
mov
mov
sbb
in
xchg
or
out
aas
rolb
push
xchg
mov
rcll
aad
loopne
jne
hlt
mov
iret
adc
cmp
pop
or
das
jge
outsb
imul
fisttpll
xor
idivl
inc
xor
sahf
cli
cs
xchg
mov
push
pop
push
shlb
aas
jno
insb
xlat
jo
cmp
test
fwait
pop
xorb
test
push
mov
arpl
mov
call
sbb
inc
shl
inc
push
jmp
mov
scas
shrb
jo
js
xlat
jns
imul
adc
add
push
sub
stos
out
push
mov
mov
js
dec
insl
mov
add
sti
movsb
xor
xchg
stos
sub
sbb
mov
lret
ror
and
bswap
xchg
setb
pop
dec
and
xor
insl
arpl
or
push
xor
lock
in
pop
cmpsb
adc
jmp
xor
out
cs
loope
sbb
pop
lods
pop
mov
out
jno
inc
cmp
stos
add
jo
ljmp
rcrl
sti
cltd
ret
inc
dec
xchg
pop
enter
add
out
stos
ja
rol
xchg
rep
adc
lcall
popf
adc
jp
sub
cmp
xchg
imul
cmp
rcll
push
cmc
pop
arpl
aas
xor
xchg
adc
sbb
sti
pop
push
in
jecxz
jl
iret
adc
or
mov
fwait
add
sub
cmpsl
cmp
loopne
xchg
hlt
dec
outsl
cmpsl
popl
ret
push
pop
push
mov
push
leave
daa
xchg
clc
cmp
int3
das
add
mov
hlt
pop
jnp
adc
push
jmp
sub
in
lds
jl
push
xchg
mov
or
adc
stos
jo
add
iret
sub
inc
sbb
xor
sub
hlt
jg
dec
jp
ljmp
or
gs
scas
popf
mov
fistps
pusha
pop
popa
adc
jnp
stos
sub
sarl
mov
adc
xchg
jecxz
movsl
mov
call
test
data16
dec
xor
lret
xchg
cmp
mov
dec
sbb
nop
pop
jne
pushf
pushf
push
sbb
test
mov
div
sahf
pop
iret
movsb
lds
sbb
test
repz
xor
into
sbb
lods
push
test
les
pushf
loop
push
dec
push
out
sbb
push
dec
repz
cmp
cld
xchg
sahf
fistps
leave
aad
in
movsb
repz
aad
mov
push
leave
outsb
mov
es
lahf
mov
in
xchg
rcr
lcall
nop
fnstenv
mov
into
clc
shrb
mov
xor
outsb
xchg
test
inc
in
popa
cli
xchg
push
notl
int3
in
add
sbb
sbb
test
stos
stc
loopne
js
add
inc
outsl
fsubrs
inc
pop
mov
stc
add
jecxz
dec
mov
sub
dec
fstpl
leave
pop
lds
ss
or
movsb
out
gs
xor
push
pop
push
not
or
loope
enter
mov
imul
inc
outsb
hlt
and
cli
pop
les
sub
gs
addr16
stc
pop
mov
push
fs
sub
ret
ja
stos
aam
jecxz
add
mov
cltd
sbb
and
stos
icebp
leave
push
mov
fxch
sbb
fsubr
xchg
out
aaa
adc
out
jl
int
test
addr16
fistpll
adc
push
adc
push
mov
pop
sbb
stc
adc
mov
testl
add
mov
sbb
aam
xor
adc
adc
mov
shlb
xor
lret
fdivrp
not
and
mov
mov
inc
jecxz
pop
xor
jbe
int
inc
fwait
pushl
jg
lds
cmp
push
in
out
lock
loop
pop
ljmp
jge
loopne
mov
imul
in
push
or
test
xchg
lds
sub
inc
mov
imul
dec
es
inc
inc
mov
enter
push
push
cmp
and
icebp
mov
out
jb
push
aad
xchg
std
inc
inc
mov
add
xchg
mov
rcr
movsl
or
test
fistpll
and
out
xorb
jle
clc
mov
imul
and
dec
hlt
xor
das
int3
xlat
roll
jbe
xchg
ss
jp
dec
inc
push
outsl
sub
jb
test
mov
pop
cmpsb
adc
fsubrs
jge
int
out
daa
out
outsl
insl
sbb
pop
out
pop
rcl
cltd
pop
add
sbb
int3
test
cmp
lret
lret
xchg
push
jnp
dec
inc
call
pop
sahf
dec
imul
icebp
clc
pop
xchg
popf
repnz
outsb
addl
inc
dec
pop
dec
adc
jns
or
jo
jg
add
pushf
dec
add
sti
push
cmpsb
inc
test
push
adc
push
pop
rorb
scas
jge
movsb
push
xor
or
add
mov
pop
fisttpl
mov
cwtl
test
mov
cmp
cmp
inc
ljmp
out
shrl
sub
add
xor
aad
loopne
lods
sahf
ret
mov
sub
pop
jge
push
sbb
or
xchg
or
pop
push
mov
ret
ret
mov
cmp
fs
cld
xor
or
or
ss
popa
aad
fcmove
adc
and
int3
orb
sub
sub
xor
xchg
cld
and
sub
pusha
pop
jp
je
pop
pop
mov
loop
jge
or
mov
sub
insl
sbb
push
ja
scas
fnstcw
cmp
sbb
in
push
dec
mov
cmp
add
xchg
push
shll
push
rcrb
xchg
enter
adc
orl
mov
cltd
dec
jle
outsl
or
scas
movsl
fst
mov
xor
push
stos
sbb
adc
fidivrl
int3
xor
cmc
mov
cmp
adc
ret
daa
pop
aad
push
add
iret
sub
lcall
push
add
mov
pop
mov
pusha
addr16
push
and
jecxz
frndint
rolb
lds
add
repz
dec
pop
or
mov
dec
mov
repnz
pop
fwait
sub
add
mov
clc
popf
movsb
daa
cmp
push
insl
repz
mov
xchg
sub
inc
push
and
enter
mov
pop
ja
push
or
insl
xchg
mov
cs
enter
inc
sub
sub
mov
sbb
rorb
test
pop
mov
loope
xchg
fidivl
xchg
sub
and
add
xchg
sahf
rcll
dec
or
stos
or
je
adc
pop
xor
andb
inc
xchg
xchg
rcrb
xchg
mov
mov
sub
push
lds
mov
push
sahf
cmp
jb
cld
adc
push
fsts
lods
lods
cs
and
repz
adc
and
cmp
lods
loop
mov
mov
push
mov
adc
sarb
mov
jp
and
push
mov
ljmp
mov
adc
lds
js
xchg
jg
int3
mov
cwtl
pop
cwtl
jmp
stc
pop
or
jno
dec
mov
or
clc
jmp
sbb
mov
test
fldenv
pop
inc
fildll
sub
dec
imul
std
ja
push
cli
out
clc
xor
negl
push
lods
popa
adc
mov
and
dec
outsb
clc
add
xor
add
std
lret
push
jmp
xchg
xlat
inc
in
adc
lods
aas
mov
and
in
loopne
stos
sub
adc
aad
add
fisubl
mov
subl
pop
fstps
imul
idiv
push
xor
push
dec
xchg
into
pop
push
shlb
int
and
xchg
add
pop
jecxz
jecxz
stos
andl
jle
xor
hlt
adc
pop
mov
pop
mov
fldt
dec
add
xor
fwait
je
jg
add
mov
jbe
xchg
jmp
cmp
inc
test
push
loopne
inc
movsl
mov
xor
and
inc
out
test
sub
push
out
mov
adc
mov
mov
shl
or
or
ljmp
in
test
imul
dec
and
loope
sbb
pop
arpl
jne
aad
mov
cli
dec
lods
push
adc
inc
out
add
and
and
pop
mov
mov
imul
jnp
or
jg
addr16
inc
rolb
shr
rorb
js
cmp
inc
fsubs
dec
into
add
inc
ret
push
dec
adc
dec
je
mov
insl
sub
push
filds
in
out
ljmp
sbb
jo
mov
jg
cli
fmull
mov
andb
mov
fldenv
xor
add
in
push
cltd
xor
mov
pop
adc
adc
movb
mov
idiv
mov
pop
sub
stc
push
inc
dec
lods
icebp
rcll
aas
repz
aad
int3
outsb
push
jns
xor
iret
push
fcomip
paddd
out
fsubr
add
rolb
scas
adc
in
addr16
xor
hlt
fcomps
loopne
mov
pop
cmpb
subb
lods
int3
popf
test
adc
fisttpll
lret
sbb
cmp
pop
stos
mov
imul
pop
jmp
repnz
pop
in
test
test
in
adc
adc
pop
lret
jl
push
fldl
int
pop
movsb
add
or
pushf
jge
shlb
mov
dec
add
loop
jns
push
pop
rcr
add
sub
outsl
add
dec
aam
pop
inc
xor
repz
int
roll
add
xchg
pop
ret
insl
pusha
rcll
enter
and
mov
fisttps
xchg
vpandn
addr16
xchg
cmp
jle
push
popl
dec
sub
inc
xchg
xchg
das
push
out
pop
cmpsb
cld
cmp
into
mov
inc
mov
fsubrp
lahf
je
sahf
insl
rcrb
cmc
addr16
cld
das
es
or
mov
sub
add
xor
stos
pop
mov
or
inc
jmp
jns
push
jb
lods
das
sbb
sub
push
xchg
aam
fimull
jns
jle
push
cmp
sbb
xchg
jne
inc
dec
data16
enter
sbb
xor
and
in
shlb
push
arpl
rorl
imul
pop
xchg
cmc
jmp
movsl
into
sbb
cs
aaa
test
fldl
mov
and
inc
ret
jmp
xor
push
mov
adc
enter
sub
sti
nop
add
sbb
xor
push
clc
pop
xchg
mov
ret
sarl
mov
lea
xchg
aas
cmp
scas
lock
insb
mov
jle
stos
call
dec
bound
add
pop
and
inc
es
push
cmpsl
sbb
mov
xchg
mov
loope
jb
sbb
fsubrs
add
leave
fldl
xchg
ficoml
es
xchg
stos
lret
dec
pop
lds
fnstenv
scas
das
popl
jae
or
lods
push
rorl
jle
pop
sub
fildll
push
cltd
pop
test
movsl
iret
add
mov
popa
test
in
jnp
jo
insl
jmp
mov
push
repnz
aaa
aam
xchg
jecxz
arpl
rclb
push
cmpsl
ret
push
lock
push
lods
notb
ret
sbb
ror
mov
ds
and
sbb
add
cmp
xchg
add
inc
mov
cmp
mov
mov
or
lret
int3
bswap
imull
stos
lock
or
pop
loopne
pusha
inc
push
outsb
in
mov
adc
addr16
add
adc
loopne
push
lods
push
cs
jno
sbb
iret
push
cwtl
jle
popf
push
cmpsl
pushl
mov
loope
and
xor
lock
in
fdivp
sbb
loope
jge
mov
jg
inc
mov
shlb
in
inc
bound
cmc
pop
xchg
out
imul
ret
fnstsw
loope
push
jmp
inc
not
xchg
aad
scas
icebp
dec
lods
sbb
jae
pop
and
sub
outsl
mov
dec
sahf
and
pushf
sahf
xchg
or
repz
push
jecxz
cmpsl
xchg
subb
cmp
out
sti
xor
mov
xchg
sub
push
test
cbtw
mov
push
sbb
movsl
mov
mov
ja
add
in
cmc
sti
jp
mov
orb
imul
mov
push
test
pop
xchg
decb
ret
aad
jbe
mov
divl
mov
and
add
xchg
jae
mov
dec
std
gs
xor
dec
pop
pop
inc
test
or
pop
ljmp
clc
in
pop
ja
mov
mov
xor
mov
loop
int3
je
xchg
mov
cmc
xchg
jecxz
xor
mov
add
test
adc
inc
sbb
test
xchg
jne
fistps
ja
scas
push
push
adc
sbb
add
test
lods
inc
mov
xchg
in
cmp
int3
inc
test
into
lret
call
mov
pop
jae
mov
lcall
orb
mov
pushf
adcl
mov
dec
xor
gs
adc
pop
pusha
mov
out
loope
cmp
adc
dec
add
mov
push
jg
adc
dec
fisttpl
mov
imul
push
in
sahf
sbb
clc
leave
popf
xchg
mov
fwait
mov
sub
cmc
fsubl
cmp
adc
loop
xchg
xor
into
adc
ficoml
cld
out
sbb
mov
push
mov
pop
mov
stos
mov
jge
mov
and
test
shll
add
inc
xor
std
jmp
cs
fiadds
cmp
inc
mov
cmc
lds
pusha
xchg
jo
mov
mov
repz
pop
sub
jnp
pop
cmc
fwait
xchg
jp
inc
jg
aad
jns
push
pop
shl
rorb
popf
or
movsb
mov
inc
sub
mov
lcall
xchg
imul
jge
xor
push
pop
stc
pop
das
ds
sbb
lods
jmp
mov
pop
daa
leave
pop
test
xchg
ja
cmpb
pop
pop
cmpsb
sub
insb
fcoms
add
outsb
shr
xchg
mov
push
ret
sahf
popa
insb
mov
lea
adc
push
sbb
fdivl
movsb
in
andb
cltd
and
lret
inc
jns
or
sub
andb
ds
jno
fidivs
out
mov
mov
mov
dec
jns
fcmovnbe
in
jg
loop
cltd
cmp
leave
arpl
jo
mov
push
adc
mov
imul
add
cmp
pusha
mov
scas
add
cmp
mov
cld
out
fidivrl
mov
cmp
arpl
fildll
aaa
popf
add
mov
aam
loop
jmp
or
pop
fdivl
mov
sbb
sbb
lods
sub
in
mov
flds
jo
mov
xchg
xchg
fstpt
fdivr
decb
fadd
mov
dec
stc
pop
sahf
rcrb
subb
daa
xor
sbb
jne
cmp
fistpl
nop
lods
scas
loop
lret
popf
sti
js
ror
cli
inc
adc
or
and
pop
jl
fwait
data16
jnp
shlb
rclb
jg
sbb
cmp
adc
push
inc
pop
adc
push
inc
push
cltd
jb
insl
mov
rcrl
mov
xchg
out
jp
sbb
jnp
lds
mov
add
data16
pop
psubsb
cli
and
dec
inc
jmp
lods
mov
jg
pop
popa
nop
xor
test
enter
jno
xchg
mov
aas
xchg
mov
loop
dec
adc
aas
cmpsb
pop
into
int
std
push
jge
out
pop
movsl
jmp
xor
sub
xchg
jnp
mov
inc
xchg
jne
sbbb
pop
mov
lods
or
or
mov
jo
daa
push
xchg
movl
mov
xlat
dec
nop
push
push
rol
dec
pop
jl
orl
pop
popf
cmp
ss
mov
cwtl
xor
add
dec
push
stc
lahf
cmp
add
xor
push
repnz
sti
xchg
cmpb
jmp
pop
movsl
xchg
mov
rcr
sub
add
ss
outsl
cwtl
push
or
mov
lock
andb
loopne
push
lock
inc
mov
adc
adc
cmp
lods
jp
xchg
push
loop
adc
adc
jle
cwtl
inc
push
popf
mov
stc
sub
cmp
scas
jmp
mov
sbb
inc
inc
aas
jns
insb
iret
mov
pop
mov
cmp
into
das
push
xchg
xchg
in
mov
shrl
call
pushf
scas
pop
lock
cwtl
les
cmp
mov
inc
fldt
int3
adc
mov
jge,pn
pushl
sub
inc
std
mov
icebp
je
fcoms
sub
xor
xchg
mov
in
or
pop
pushf
call
fwait
xor
pop
mov
jae
mov
dec
les
mov
dec
xor
mov
dec
cli
xor
in
es
add
inc
push
aam
lock
mov
dec
jno
outsl
mov
and
in
inc
aam
enter
lods
xor
sbb
cmp
mov
enter
cmp
daa
mov
dec
clc
sbb
sub
js
xchg
and
inc
xchg
mov
lds
cmp
mov
lcall
mov
fsubr
or
cmp
push
push
cwtl
addr16
xor
sbb
push
inc
adc
adc
je
scas
xlat
lret
sbb
in
pop
loop
insl
call
outsb
mov
clc
leave
mov
sbb
std
jmp
sti
mov
out
push
adcl
mov
xchg
pop
mov
fcoms
insl
mov
mov
cmpsb
cmpsb
aad
ret
pop
xchg
les
add
lods
fisubrs
pop
inc
in
je
push
cltd
and
cli
push
ret
xor
sti
adc
xchg
insl
iret
and
mov
mov
push
or
mov
out
mov
sbb
stos
addr16
push
das
rclb
or
mov
lds
and
mov
lods
dec
push
or
or
das
xchg
dec
in
add
inc
inc
pop
fdivrl
dec
pop
shll
rclb
cmpsb
and
stc
lret
jae
push
inc
scas
into
jno
xor
std
adc
in
mov
fwait
jne
sbb
ss
std
loope
jmp
or
mov
test
ret
add
outsb
aas
dec
call
imul
sti
mov
daa
mov
test
int
in
and
sub
inc
icebp
inc
mov
out
push
sarl
cmp
gs
into
js
fmuls
int
or
mov
or
cwtl
sub
mov
adc
mov
sbb
pop
mov
pop
or
jno
mov
stos
jns
xchg
push
sub
fcomp
cmc
xchg
ja
inc
xor
rcrb
add
mov
fdiv
repz
jge
cs
inc
dec
shrb
insb
ds
dec
les
jmp
scas
xchg
mov
daa
mov
stc
in
mov
scas
fs
ljmp
fimuls
dec
jnp
mov
pop
sub
or
pusha
cwtl
xchg
xchg
adc
in
push
cmp
adc
cltd
pop
pusha
ljmp
jecxz
add
inc
jl
icebp
add
mov
sbb
je
sar
and
or
push
stos
pushf
push
mov
dec
or
insl
lds
negl
cmp
fwait
xchg
sub
outsb
cmp
or
adc
es
fcmovbe
push
adc
cwtl
jecxz
stos
dec
ljmp
mov
or
push
and
mov
xor
mov
and
add
std
mov
xchg
es
mov
or
add
pop
mov
adc
fcmovbe
inc
sub
in
mov
cmp
push
push
aas
out
aas
push
popf
cwtl
cmp
xchg
mov
xchg
mov
seto
sub
xor
pop
sbb
fucomip
xor
and
pop
jg
or
addb
arpl
shlb
xor
pop
pop
mov
cmp
adc
ss
or
jb
shl
add
cmpsb
loopne
sbb
mov
stos
sub
mov
clc
sbb
cmp
mov
iret
sbb
sbb
xchg
or
ljmp
lcall
or
xchg
xchg
repz
stc
loope
imul
ds
mov
addb
jno
push
movsb
inc
fs
dec
jge
aam
popw
inc
cmc
popf
icebp
mov
push
pop
push
xchg
fs
repnz
mov
jmp
hlt
repz
jbe
xchg
aaa
cltd
pop
jmp
mov
cmp
int3
xor
cmp
xor
loop
xchg
dec
jp
cmp
xchg
and
mov
mull
xchg
out
popf
ds
sarb
jae
dec
notl
loopne
ficoms
je
push
or
push
repz
jbe
ljmp
cmp
outsb
jno
jb
jns
outsl
pop
or
cs
sbb
mov
loop
cmpsl
sbb
mov
mov
ret
shr
mov
add
sbb
aaa
mov
jg
sbb
adc
sbb
mov
jecxz
sub
pop
pop
test
mov
test
push
aam
jp
mov
or
popf
bt
or
stos
daa
mov
repz
jnp
das
push
adc
sbb
jl
lahf
adc
jbe
daa
jmp
iret
into
mov
js
cmp
outsl
dec
push
dec
fisubs
cmc
push
adc
enter
out
dec
outsb
lea
dec
jnp
inc
mov
mov
cmp
mov
outsl
xchg
clc
xchg
jge
pop
xchg
call
jo
push
rorb
push
add
sub
push
test
out
dec
mov
jo
int3
mov
in
adc
rorl
fcoml
dec
mov
les
mov
mov
in
popa
inc
ret
and
popa
mov
push
stc
lds
jnp
dec
gs
or
dec
fdiv
inc
lea
lret
inc
cmpsl
out
xchg
or
mov
push
dec
push
dec
push
add
test
xchg
sbb
and
push
std
loope,pt
cmpsb
daa
insl
pop
cmp
or
dec
xor
pop
sbb
inc
ret
loope
push
lret
inc
inc
mov
fstpt
pusha
jle
mov
dec
add
fwait
mov
rcrb
int3
ret
repz
or
repz
int
and
insl
std
push
inc
cli
ds
adc
imul
ljmp
lea
xchg
xchg
sarl
out
push
data16
add
cs
testb
pop
outsl
aas
decl
push
mov
stos
push
mov
mov
stos
push
or
fldt
or
mov
jne
and
jb
insb
test
das
adc
push
in
pop
xor
xchg
sbb
xchg
mov
or
ret
rclb
push
aaa
mul
jns
fsubrl
mov
sbb
cmpl
test
dec
jp
dec
jbe
sbb
inc
fwait
outsb
mov
adc
jecxz
adc
sub
ret
out
adc
jnp
fwait
push
aam
mov
push
enter
imul
int3
jle
xchg
sahf
lahf
or
or
aaa
jmp
push
push
divb
jnp
es
int3
movsl
ret
sub
jb
sub
sub
inc
and
lods
cmp
int3
xchg
xchg
stos
dec
cld
in
js
add
shll
dec
ret
out
cli
jge
mov
xchg
cmc
bound
rcrb
sbb
insb
dec
les
mov
jl
push
mov
rol
fcomip
lods
cs
jo
adc
ds
adc
push
mov
dec
mov
scas
clc
add
movsl
xor
jae
mov
stc
pop
jne
in
mov
mov
or
push
ss
sbb
or
sbb
or
adcb
pop
pop
lahf
inc
pop
sub
sti
sarl
into
dec
fwait
decb
xor
out
ljmp
and
push
pop
scas
pusha
insl
lcall
pushf
into
pushf
out
test
push
cmp
push
negl
shlb
ja
xchg
mov
pop
mov
lret
push
sbb
addr16
xchg
mov
mov
mov
movsb
popa
jns
pushl
push
movsb
sub
push
jo
outsl
jle
cmpsl
and
iret
lea
aam
lahf
fwait
mov
sbbb
push
rolb
stc
bnd
aaa
xchg
push
cmp
test
in
and
or
add
adc
in
add
sub
ja
add
ror
mov
push
pushf
cmp
fs
jg
aam
mov
push
pop
enter
dec
call
mov
add
push
inc
mov
inc
jecxz
inc
mov
iret
or
pop
mov
inc
outsb
xchg
lret
jmp
sub
pushf
adc
fstpt
jmp
aam
addl
mov
popf
into
and
out
xor
mov
scas
inc
loopne
fsubrl
xchg
scas
lcall
jg
clc
negl
and
xor
stc
jp
xchg
insl
sbb
rcll
rolb
push
shl
shlb
sbb
push
adc
jle
in
dec
push
out
stos
mov
fmuls
gs
push
and
fadd
das
inc
fdivp
push
dec
jo
push
iret
lret
sti
je
rcrb
and
leave
jmp
cwtl
mov
push
rcr
cmp
bnd
ret
mov
hlt
shll
push
and
fcmove
scas
cmpsl
sub
fdivs
icebp
mov
les
mov
xchg
pop
adc
das
arpl
pop
sahf
pop
jnp
lock
push
lock
lret
adc
mov
dec
std
fsubrp
lcall
rcll
hlt
call
mov
loop
enter
mov
cmc
pop
lcall
sub
cmpsl
adc
mov
out
nop
inc
shll
cli
push
xchg
movsb
arpl
out
movsbl
ljmp
xchg
out
insl
das
dec
mov
scas
repnz
add
push
stos
xchg
xor
mov
cmp
int3
sub
dec
xchg
xchg
mov
or
shrl
lret
jl
push
push
loop
sub
adc
and
bound
push
xlat
mov
hlt
in
scas
outsb
test
test
xorb
lods
add
xor
fsubs
movsl
inc
movsb
adc
int
jo
iret
daa
loop
xchg
jp
mov
xor
sbb
fildll
shll
btc
pop
ret
lret
mov
cmp
sarl
dec
test
mov
xor
sub
sbb
sbb
iret
clc
aaa
jmp
or
sbb
sbb
js
in
fs
dec
pavgw
mov
cmpb
pusha
adc
addr16
sti
test
mov
or
dec
cmp
lds
dec
fildll
loop
or
mov
lea
addb
ja
lods
fldenv
xchg
inc
imul
outsb
jb
lds
fwait
rcll
aaa
addb
movsl
adc
push
loope
sub
mov
push
fucomp
iret
cmp
dec
push
in
in
cmpsb
cmp
push
inc
sub
cmpsb
pusha
ror
ret
and
in
lods
ret
popf
aaa
daa
sub
add
das
mov
scas
mov
mov
insb
xor
repnz
fsubrl
xor
push
out
scas
adc
lret
lock
inc
gs
and
cmp
inc
sbb
or
jl
pop
and
pop
inc
xor
in
lret
jmp
xchg
inc
cmp
xor
mov
inc
pmaddwd
dec
hlt
sub
lret
add
push
xchg
or
lods
xchg
mov
lock
out
imulb
mov
movsb
outsl
lret
fistps
jl
adc
mov
xor
push
mov
sub
popf
mov
push
xor
repz
into
hlt
or
push
mov
mov
movsb
mov
inc
sbb
or
sbb
sbb
xchg
mov
and
pop
out
inc
mov
mov
push
fisubs
adc
dec
test
cmpl
dec
cmpsb
loope
mov
clc
jns
loope
jge
mov
sbb
pushf
dec
inc
fdivp
add
movsl
sub
cmp
and
orb
cmp
ss
mov
imul
imul
es
test
dec
pop
sbb
or
test
mov
ljmp
cmc
fmul
xchg
or
jle
mov
mov
mov
dec
adc
pop
es
push
pusha
xchg
or
pop
std
xlat
in
adc
or
inc
sub
cmp
and
pop
inc
xchg
xor
rcrb
test
inc
lret
sti
jbe
dec
xor
shll
adc
jb
imul
xchg
xchg
dec
add
mov
xchg
mov
arpl
and
stos
in
pop
jmp
jb
ss
jg
sbb
xchg
dec
or
mov
cmp
jg
loopne
or
pop
or
pop
in
fxam
jbe
sbb
jbe
pop
mov
call
or
push
insb
mul
fildll
les
mov
stc
insl
pop
pop
mov
xor
fbstp
cmpsb
sub
icebp
dec
jae
xchg
sub
addr16
cmp
cmpsl
cli
fists
sbb
dec
test
out
mov
or
leave
into
and
pop
jle
or
xor
das
addl
fisttpl
push
pop
shlb
xchg
pop
jg
lds
push
push
adc
and
mov
adc
and
fisubs
aam
imul
pop
mov
cwtl
ret
sbb
sbb
jge,pn
imul
sbb
xor
push
xchg
out
outsb
popa
mov
or
insb
mov
mov
insl
dec
fs
sbb
xchg
ficoml
fnstenv
push
cmp
in
add
enter
inc
fldcw
ja
arpl
outsb
bound
dec
mov
push
cwtl
ror
outsb
out
or
and
mov
cwtl
inc
jb
aad
or
push
daa
rclb
xchg
test
mov
scas
adc
int
lret
or
sub
push
mov
in
push
mov
sbb
aam
inc
sbbb
das
orl
ss
jo
push
mov
jb
xchg
sti
add
add
or
xor
pop
out
xlat
icebp
jae
fadd
test
call
jmp
incb
mov
out
test
lret
ljmp
gs
xor
sarl
daa
add
ret
mov
sbb
je
jmp
mov
xchg
mov
nop
daa
mov
xchg
or
int3
mov
jnp
push
or
shrb
in
shrl
push
or
cmpsl
dec
addr16
dec
orl
mov
lret
mov
sub
cli
mov
xchg
push
fidivrs
scas
sub
gs
xchg
mov
adc
mov
xor
cmp
das
mov
andb
lds
adc
mov
fmull
xchg
std
cmp
in
push
jecxz
int3
aad
cmpsl
xchg
xor
inc
dec
mov
or
clc
mov
sahf
pop
stos
mov
jne
les
aaa
sub
movlps
loopne
push
insb
pop
int3
std
xchg
mov
aas
push
inc
mov
outsl
addr16
inc
sahf
cwtl
pop
test
leave
cwtl
pop
lods
fidivrs
addl
or
dec
iret
or
lock
fidivs
push
sbb
inc
adc
stos
into
add
out
aaa
lds
and
out
pop
cwtl
arpl
sbb
fsubrp
add
mov
lret
mov
repnz
mov
in
mov
pop
add
add
and
push
mov
jmp
gs
scas
and
inc
mov
mov
popf
in
insl
cmp
jnp
mov
ja
xchg
aam
popa
aas
sahf
pusha
stos
insl
xor
pop
adc
dec
jmp
daa
mov
arpl
fstps
add
and
mov
sarl
cmp
mov
mov
ja
jne
in
clc
pop
sbb
loope
or
cmp
mov
outsl
out
xor
mov
push
clc
jne
outsl
cmp
add
pop
leave
lods
sbbl
mov
gs
xlat
rcrb
lcall
sub
xchg
std
fs
lret
js
push
mov
jnp
aad
mov
cmp
mov
adc
xchg
mov
and
sub
mov
mov
adc
jg
push
es
mov
jo
pushf
fwait
cs
adc
aaa
add
pop
add
mov
mov
or
shll
ds
ja
test
mov
sub
xchg
xchg
jge
cwtl
jae
xor
sarb
data16
test
and
sub
sahf
sub
push
fprem1
xor
or
mov
mov
aas
icebp
push
jp
orb
ss
or
orl
in
fs
and
sbb
idivl
sarl
jb
push
xor
fidivs
loop
mov
es
nop
sahf
or
sub
jb
sub
mov
fs
js
push
addl
sub
gs
stc
mov
jmp
sub
push
dec
std
mov
nop
scas
or
mov
ss
ret
aaa
daa
icebp
jo
or
push
repnz
lods
sub
mov
cld
pop
movsl
jl
pushl
pop
in
mov
and
out
fidivrl
adcl
bnd
loope
fmuls
jb
in
jne
fistpl
xchg
adc
push
lret
fldl
inc
jae
addr16
rolb
ret
sub
gs
das
mov
mov
cmc
sub
dec
jno
stos
test
jo
xchg
lods
repnz
sbb
scas
shlb
pop
fwait
jnp
sub
adc
add
inc
scas
jo
xchg
mov
loopne
es
xor
mov
test
test
push
lods
mov
fwait
mov
adc
or
ss
enter
test
js
pop
icebp
in
mov
push
ja
jns
call
lcall
call
arpl
cmp
inc
add
or
outsb
pop
pushf
xor
int3
roll
lock
je
cmp
inc
loope
iret
adc
cmc
jne
ja
mov
and
in
pop
pop
fstpl
sbb
xchg
push
inc
movsl
add
nop
int3
push
movsl
inc
push
mov
in
rorl
repz
in
mov
stos
xor
popf
adc
mov
pop
dec
outsb
iret
daa
mov
mulb
gs
inc
push
inc
mov
pop
loope
popf
aaa
pop
inc
call
cmp
dec
mov
arpl
add
test
jne
lahf
ret
jnp
lea
inc
sbb
gs
arpl
arpl
mov
adc
sti
dec
outsb
sahf
add
push
lods
fiaddl
push
jmp
sbb
dec
cmc
out
in
test
popf
push
jno
jmp
lcall
jge
pop
jle
cld
pop
add
sub
inc
cli
mov
scas
jbe
sub
push
rcrb
cwtl
push
mov
out
xchg
push
fcmovnbe
mov
aam
mov
scas
ret
pop
ljmp
jno
lcall
lcall
sub
out
leave
leave
mov
pop
std
cmp
mov
icebp
sbb
jo
adc
popa
push
cltd
insl
jg
mov
ret
imul
jmp
jp
aaa
out
add
mov
pop
rcrl
cli
mov
lahf
mov
aam
leave
pop
in
mov
mov
jne
or
call
mov
cmp
add
adc
mov
add
daa
add
jl
xchg
stos
popf
jecxz
dec
mov
xor
push
sbb
test
and
stos
fcomps
lds
cltd
mov
pusha
cli
stos
xchg
push
add
and
and
in
popf
dec
lahf
mov
xor
mov
jmp
xor
cvtpi2ps
pop
insb
shlb
pop
add
inc
pushf
xchg
leave
sub
lahf
out
sbb
imulb
ja
adc
pushf
jl
lods
xor
inc
push
mov
data16
mov
jmp
add
filds
pop
test
add
lret
xchg
and
mov
inc
xchg
lret
add
outsl
push
add
sub
cmpl
and
jle
int3
clc
push
bound
mov
fnstenv
sub
cwtl
add
loopne
dec
inc
ljmp
xchg
arpl
shl
arpl
mov
cmc
stos
insl
outsl
push
adc
mov
stc
adc
pop
cld
push
dec
xor
mov
inc
popa
mov
nop
shrb
ret
push
and
loope
lcall
repz
imul
push
xchg
or
sbb
mov
out
sbb
sarb
out
div
lret
lret
mov
mov
leave
and
sbb
shlb
sub
imul
xchg
int
je
jmp
and
arpl
js
dec
js
popa
or
call
jo
int3
or
lods
dec
jmp
out
or
fwait
movsb
insl
ret
lds
shl
xor
mov
lock
notl
cli
mov
std
or
cmp
pop
fwait
cmp
in
imul
push
and
mov
cmp
mov
mov
fcmove
mov
pushf
xor
dec
cmp
fidivs
cmp
and
mov
js
cmpsl
shl
push
dec
push
pop
iret
addr16
adc
ja
inc
js
push
test
dec
lods
fsts
sub
xchg
ljmp
lods
aad
add
mov
aad
call
not
pop
cmp
or
dec
xor
pop
test
jb
cli
sbb
jb
sbb
add
int3
mov
mov
add
aaa
push
xor
sahf
sbb
sub
adc
incl
cwtl
xorl
and
adc
sti
call
jns
sbb
aas
mov
dec
out
xor
xchg
add
or
push
mov
cs
aam
movsb
pop
cmc
push
jo
outsb
mov
fisttpll
xor
lret
and
test
add
sub
iret
adc
jbe
inc
add
test
scas
sub
dec
jp
xchg
push
xchg
sub
imul
cli
js
pop
xchg
mov
xor
fwait
sbb
mov
pop
xchg
xchg
jnp
and
movq
dec
push
std
sub
andl
push
mov
xchg
mov
sbb
lahf
jo
adc
std
ret
pop
xchg
add
fwait
push
push
dec
sub
icebp
cmp
mov
mov
sahf
xchg
jb
cwtl
mov
xchg
lcall
mov
imul
dec
dec
fwait
and
push
push
cmpsb
lret
scas
mov
je
cmp
loope
shlb
sahf
sub
fmuls
xchg
jbe
leave
mov
das
cmp
mov
sbb
cmp
rcr
push
dec
pusha
scas
inc
cmpsl
stc
lcall
jp
inc
stos
jmp
dec
jb
cmp
jle
sbb
test
mov
mov
jecxz
sbb
cmpsb
dec
idivl
movsl
int
pop
mov
sbb
lds
aad
sub
inc
stc
add
std
bndldx
imul
mov
shrl
xchg
test
xlat
in
and
lock
xor
mov
inc
add
andb
xor
pop
jle
lods
out
inc
sbb
pop
cwtl
add
xor
aaa
test
mov
mov
movsb
je
and
popa
xchg
or
xor
and
push
jge
push
mov
mov
jmp
mov
loopne
fildll
lret
inc
pop
mov
adc
xor
xor
lock
lods
add
std
mov
adc
jno
and
nop
xor
icebp
or
push
pop
cmp
mov
rcll
out
mov
andl
popa
scas
xchg
in
lds
icebp
push
inc
je
mov
sub
adc
jbe
adc
ds
orps
movsb
jmp
xchg
inc
lret
mov
xor
jmp
in
out
xchg
xchg
mov
sub
or
negb
jbe
push
leave
nop
cld
and
cmp
pop
in
shr
xchg
test
dec
cmp
push
xchg
int
adc
and
fiaddl
addr16
sub
mov
push
fs
inc
decb
mov
sbb
ljmp
decl
cmp
nop
dec
insl
js
outsb
movsl
lock
xchg
xorl
xor
bound
push
mov
xchg
push
std
popa
bound
hlt
rcll
pop
mov
rorl
bound
mov
sbb
fwait
xor
nop
cmp
mov
jo
push
sub
idivb
cmp
mov
sbb
in
sub
and
pushf
push
int
shl
mov
hlt
iret
into
inc
lock
inc
sbb
into
cld
push
call
dec
pushf
test
adc
push
mov
and
cltd
test
repnz
jne,pt
adc
mov
or
mov
push
int3
inc
mov
add
add
jg
mov
flds
lret
push
pop
adc
pop
mov
mov
adc
push
ds
or
push
shl
sahf
mov
jae
ja
cmc
adc
test
pop
notb
ret
pop
stos
mov
aad
std
arpl
popa
lods
push
cmpsb
mov
dec
xor
lahf
or
push
jmp
mov
mov
lock
adc
dec
mov
pop
or
xor
jbe
stos
subb
jbe
xchg
std
pop
sbb
pop
cmp
push
je
shrl
lods
mov
stos
les
inc
xchg
outsl
pop
pop
daa
inc
mov
pop
lods
dec
pusha
int3
ja
push
negb
mull
loopne
jo
mov
popf
sbb
mov
mov
cmp
add
sub
xchg
cmpsb
sbb
out
xor
cmp
mov
cwtl
ret
and
mov
add
mov
cmpsb
push
lahf
out
fdivrl
lock
xlat
in
xlat
scas
jl
iret
das
or
rorb
sbb
pop
push
jnp
outsb
aas
out
scas
test
clc
mov
outsl
sarl
and
mov
push
imul
fadds
sbb
test
inc
pop
adc
test
imul
icebp
movsb
lahf
adc
daa
push
repz
jnp
cwtl
rclb
arpl
push
out
leave
fadd
sub
or
dec
arpl
ficoms
stos
mov
test
add
cmpsl
or
js
enter
or
rcrl
inc
insl
push
push
add
push
pop
sahf
lods
lods
pushf
xor
bound
inc
pop
sbb
scas
lcall
out
mov
ror
dec
mov
popf
push
adc
insb
push
das
lods
cmp
rorb
and
movb
and
icebp
jmp
mov
in
test
cwtl
mov
pinsrw
pop
pop
inc
ds
mov
xchg
fadd
push
movsb
scas
mov
sub
scas
icebp
cld
bnd
mov
push
in
push
xchg
cmc
inc
cs
into
mov
and
mov
push
dec
ret
pop
mov
lds
test
xchg
ljmp
arpl
fdivrs
shl
push
hlt
mov
or
sbb
lahf
incl
vmovntdq
mov
and
mov
pop
jp
movsb
subl
or
pusha
lock
int3
mov
add
or
cli
adc
push
xchg
out
jg
and
ja
sahf
and
push
sahf
push
inc
xlat
and
loopne
es
pop
push
lock
dec
gs
sub
mov
mov
pop
test
lcall
xor
jno
adc
sbb
inc
test
out
lahf
fcoml
pop
mov
call
push
loope
fwait
sbb
push
jne
movsl
pop
ret
jecxz
mov
jnp
push
dec
movsb
mov
push
cmp
pop
cltd
mov
imul
ljmp
clc
or
jge
push
cli
add
dec
sub
mov
jne
pop
jb
cmp
sub
pop
or
js
addr16
aam
and
mov
mov
or
ljmp
dec
push
cmpsb
pop
test
lret
inc
push
lds
cmp
cmp
lods
inc
dec
sbb
mov
jp
ds
and
jl
pop
mov
sbb
or
cld
push
jbe
adc
cwtl
jmp
cmp
mov
js
jo
cmp
adc
lcall
jecxz
lret
jns
jne
mov
dec
sbb
xor
xor
add
cwtl
fstl
stos
pop
add
lahf
ljmp
pop
shll
sbb
xor
add
out
stos
mov
stc
in
fnstenv
hlt
fidivs
enter
imulb
adc
repnz
xchg
bound
clc
adc
push
jbe
popf
fwait
das
aad
rol
jb
dec
sti
outsb
cli
mov
rclb
inc
xlat
inc
cltd
lea
imul
and
lret
mov
xor
lahf
cmp
adc
sub
adc
or
mov
les
xchg
pop
sbb
sbb
jp
adc
repnz
xor
rorb
inc
push
ja
xchg
int
shlb
inc
jns
cld
jnp
loope
jo
mov
ja
sbb
jo
jne
loop
and
jmp
mov
xchg
push
fstpt
and
push
ficoms
mov
mov
pop
mov
inc
jno
inc
xor
mov
or
sar
sub
mov
fsubl
adc
es
data16
sbb
and
sti
sti
ret
lret
fisubs
sbb
inc
sbb
divl
inc
roll
mov
out
cltd
shrl
and
repz
fucomp
cmp
dec
je
subb
inc
mov
pusha
iret
fstl
cmpsl
fistl
fdiv
mov
mov
xchg
cwtl
fisttpl
ljmp
loopne
rorl
dec
sbb
fmuls
inc
add
inc
incb
imul
dec
iret
subb
stc
xor
jno
sahf
jae
cmc
stos
outsb
push
in
mov
pop
data16
sbb
mov
out
adc
dec
jmp
out
fdivs
mov
or
loop
js
outsl
xor
mov
mov
int
ret
lea
int
jecxz
mov
insb
call
leave
jg
fldt
jp
cltd
int3
jl
pop
mov
es
repz
enter
push
mov
mov
lret
mov
dec
jecxz
pusha
incl
decb
loop
mov
and
shlb
stos
loop
jnp
and
mov
add
lock
es
cmp
fisttpl
orl
testb
cmp
adc
inc
pop
or
fldl
mov
mov
sahf
mov
mov
xchg
call
popf
test
jae
fdivrl
in
push
je
fnstenv
sub
scas
push
jle
loope,pt
les
adc
and
std
jl
xchg
pop
inc
xchg
mov
sbb
scas
aad
mov
pop
fwait
xchg
mov
aad
and
ja
loopne
dec
sahf
cmpb
popa
or
push
add
outsb
repz
sub
dec
dec
test
push
sub
subb
loop
mov
movl
sub
cs
jbe
inc
xchg
sub
filds
stos
fwait
das
jno
addr16
icebp
mov
leave
fmul
mov
xchg
ret
xchg
punpcklbw
lahf
xor
jmp
xchg
sbb
testb
loopne
mov
add
int
lahf
mov
mov
cmp
pop
repnz
mov
xor
scas
xor
out
sbb
stos
sbb
xor
shrb
pop
push
adc
je
ret
cmp
in
xor
adc
pop
out
xchg
movsl
or
sbb
xor
mov
lahf
jg
xchg
out
mov
popl
add
pop
repnz
gs
mov
clc
xchg
clc
mov
push
jb
push
sub
fs
test
js
punpckhwd
sub
add
ret
fidivrs
and
xor
or
enter
arpl
nop
and
adc
mov
es
push
jb
push
aam
call
xor
sti
ds
scas
fdiv
xchg
push
enter
xor
cs
fcom
lock
data16
rorl
in
call
cmpsl
xchg
pop
fisubl
cmp
pcmpeqd
sub
push
dec
fsubrl
xor
add
xchg
adc
sarb
mov
repz
mov
jae
sti
xor
imul
test
es
les
gs
mov
pop
inc
sub
cmp
clc
shll
jl
mov
and
mov
sti
inc
push
xchg
inc
in
add
lods
cmp
cwtl
mov
mov
push
jge
shl
int3
jl
jg
fsub
icebp
inc
mov
daa
mov
fiaddl
sbb
in
mov
pop
pop
pop
popa
pop
hlt
stos
decl
cmp
or
inc
fistpl
jge
add
std
jns
sbb
repz
negb
div
out
push
inc
pop
fwait
iret
sarl
lods
cmp
pop
mov
hlt
adc
xor
addl
fsubrs
jo
imul
fcomps
cld
jp
icebp
xchg
push
push
adc
jle
insl
sub
xchg
adc
xor
into
mov
adc
imul
in
xchg
arpl
je
push
fwait
call
loopne
in
xchg
or
out
jnp
adc
jo
sbb
mov
repnz
rcll
mov
rcl
add
in
negl
fldt
outsb
push
mov
xchg
and
hlt
mov
es
xchg
inc
dec
sbb
dec
lds
cs
test
mov
push
xchg
add
rorb
sbb
mov
test
jno
jne
fnstenv
and
fstpl
pop
or
out
test
dec
push
xor
sub
arpl
nop
xor
cmp
jle
fdiv
push
leave
cmp
add
aam
repnz
ficoms
mov
adc
sub
insl
mov
pop
ss
inc
popf
inc
add
jne
loop
pop
mov
mov
push
push
sbb
sub
mov
adc
pop
mov
or
adcl
xchg
nop
das
popf
idiv
aas
sbbb
fiadds
loop
xor
loopne
xor
icebp
push
dec
cmpl
mov
sbb
mov
xchg
jae
mov
dec
jg
std
out
cmc
fsubp
cmc
sub
iret
ret
and
pop
mov
adc
pop
push
pop
int3
mov
jge
or
xor
mov
mov
mov
dec
aas
or
mov
leave
int3
popf
ds
fiadds
aaa
xor
or
add
movsl
call
in
leave
inc
push
cltd
jno
cmp
mov
jle
bound
cld
lret
outsb
adcb
popl
cmp
int3
sub
aas
mov
mov
fwait
xchg
test
pop
adc
mov
push
out
sti
scas
call
jl
ret
push
nop
jno
sub
xor
push
idivb
sub
pusha
frstor
nop
andl
std
cmpb
jne
mov
in
ret
dec
loope
xchg
mov
push
cmp
pusha
jmp
sub
insb
dec
fs
push
out
movsl
leave
sbb
stc
cmpxchg
ret
cmpsb
data16
sti
cs
add
and
add
int
cwtl
cld
and
fdivp
fwait
rol
and
cmp
lock
mov
out
xor
add
sub
jns
in
test
or
xchg
sarl
dec
xchg
aas
mov
shl
not
lock
icebp
mov
fcoml
dec
mov
push
jne
xor
mov
jl
jb
cmp
lock
mov
xor
push
outsl
gs
jo
icebp
pop
mov
push
std
aad
mov
pop
jb
icebp
cmp
les
iret
xchg
jno
cmpsl
push
mov
and
pop
daa
imul
mov
cmp
arpl
aaa
dec
inc
outsl
push
stos
mov
movsb
mov
jle
and
dec
mov
lea
jmp
cmc
and
addr16
movsl
cmp
jbe
leave
aas
int3
sbb
popf
das
lret
adc
fistps
dec
cmpsb
lret
fcomp
les
cmp
icebp
mov
call
addr16
sbb
inc
and
mov
mov
xchg
add
mov
cmp
and
test
ud0
mov
sahf
data16
xchg
cmp
nop
ja
jge
stos
mov
or
inc
inc
cmp
sbb
push
shll
add
lock
xlat
enter
xor
popa
or
aad
inc
push
xchg
push
push
xlat
adc
imul
add
mov
nop
fucomp
jle
push
loope
cmc
mov
bound
scas
push
mov
stos
dec
imul
jle
adc
std
cmp
inc
nop
shr
xor
mov
xchg
inc
ds
cld
cmpsl
jne
pop
jo
movsb
js
xchg
xchg
or
lods
mov
xchg
lret
inc
mov
pop
xor
xor
fdivrl
or
xor
jl
fldln2
mov
rclb
aas
cmp
in
push
pop
mov
loop
insl
jmp
mov
push
jl
cld
push
xchg
dec
sbbb
das
shlb
sbb
mov
cmp
mov
adc
adc
push
adc
clc
ds
std
jns
mov
push
movsl
mov
pusha
or
cwtl
test
imul
rcll
jno
js
xchg
lcall
push
inc
mov
test
int
cmpsb
fwait
pop
mov
sti
test
mov
addr16
pop
pop
lcall
xchg
dec
out
push
sbb
ret
cltd
pop
pop
lock
jb
lods
jecxz
mov
mov
inc
aas
aam
dec
add
and
bound
mov
shrb
mov
jnp
stc
stos
or
lock
into
xchg
adc
daa
fsubr
jb
mov
jl
adc
stc
xchg
sbb
inc
sahf
js
ret
mov
cli
dec
jl
push
rcl
pop
popa
jp
ficoml
cmp
add
fs
sub
fbstp
or
or
mov
ljmp
imul
aaa
push
mov
cmp
and
inc
fcoml
dec
fs
or
pusha
ja
xchg
jecxz
das
mov
fstpt
fs
sbb
adc
sbb
repnz
xor
xor
enter
jg
movsl
cmp
std
movsw
cmc
nop
cltd
repnz
mov
clc
xor
dec
rclb
negb
daa
pop
adc
fdivs
xor
loope
push
mov
mov
test
add
jnp
scas
lret
jg
adc
jo
add
das
movsb
in
mov
stos
inc
or
inc
or
loopne
cmp
push
test
testl
pop
adcl
xor
pop
aaa
int3
pop
xor
scas
int3
push
aam
popa
andl
fs
int
dec
clc
movsl
jecxz
and
fwait
jo
out
roll
outsb
sarl
mov
cmp
nop
shrl
in
push
fwait
jecxz
gs
cmp
sti
pop
mov
sbb
mov
dec
adc
push
lret
push
lea
sub
and
les
xchg
fldl
clc
fisubrl
and
sbb
mov
stos
movsb
xchg
in
push
popf
lret
adc
mov
dec
pushf
pop
pusha
repz
jb
dec
xor
lret
cld
mov
adc
xor
es
arpl
pop
adc
mov
inc
pop
mov
sbb
pop
ja
jb
lds
add
xor
fcoms
jbe
fdivrs
iret
call
cs
push
cmp
je
mov
push
jg
adc
xor
inc
push
add
fcos
stos
mov
inc
icebp
outsb
adc
mov
sub
xchg
popa
sbb
loopne
into
arpl
inc
push
jl
repz
aad
inc
out
inc
mov
and
cmc
jmp
stos
add
notb
mov
mov
out
popa
in
ja
cmp
scas
pushf
cs
jl
jne
inc
or
cmpsl
mov
cmp
or
stc
inc
adc
add
adc
fwait
dec
sbb
subb
aas
sbb
adc
lcall
add
jnp
loope
in
les
jg
mov
scas
pusha
je
leave
mov
ret
adc
shrb
fs
daa
xlat
lcall
push
mov
push
xchg
pop
add
loop
sar
icebp
jbe
ja
sub
fimull
popa
cmp
or
jnp
mov
clc
add
loop
pushf
lret
popaw
cmp
cmpl
jae
push
out
or
not
fwait
inc
xchg
call
imul
stc
dec
icebp
ror
aaa
pop
cmp
xor
movsb
in
sub
pushf
cmpsb
xlat
jns
pop
and
jo
cpuid
dec
imul
loopne
adc
hlt
notb
es
xor
fs
and
fidivrs
std
out
xor
xchg
in
cmpl
or
cmp
pop
rclb
add
xchg
addr16
mov
xlat
xor
dec
xor
adc
popf
xchg
rcll
mov
negb
dec
decb
add
lret
adc
loop
loope
gs
mov
fmull
xchg
gs
adc
ja
fisttpll
sar
sub
add
xor
pop
push
outsb
cmp
rorl
mul
jmp
shrb
pusha
mov
sub
rcll
xchg
js
arpl
in
cmp
movsb
test
pop
idivb
int
jmp
mov
jmp
sub
bound
stos
hlt
out
aad
popf
fdivs
arpl
in
or
ret
jle
test
ljmp
js
push
jmp
fcmovnbe
xlat
sbb
cmp
stos
fisubrl
and
loop
push
fs
xor
sub
or
xchg
fwait
jg
xchg
jae
or
shrl
xor
cmp
sub
sti
or
sub
add
lea
aaa
lds
sbb
in
icebp
fcoml
lret
xor
mov
xchg
mov
insl
jmp
ret
ret
rcrb
mov
cmpsl
and
pop
fldl
popa
test
mov
jmp
jbe
push
push
mov
push
xlat
and
js
subb
into
fmuls
lahf
pop
scas
into
lods
inc
lcall
je
sbb
repz
push
lret
idivb
sbb
lahf
and
pop
je
push
divl
xlat
loope
mov
jecxz
shrb
fdivrs
jnp
cmp
push
lods
bound
jae
mov
push
jno
cmp
cmpsl
jge
ret
mov
push
pop
pop
loopne
movsb
sti
jnp
enter
push
jg
push
mov
mov
sbbb
mov
leave
pusha
mov
push
adc
push
popa
sub
jecxz
xchg
mov
repz
jle
fdivrp
leave
mov
jb
dec
into
xchg
pop
fistpll
pop
or
jge
mov
push
mov
mov
in
push
push
cmp
jecxz
jbe
lret
mov
mov
popa
jl
mov
int3
xchg
jae
mov
pop
in
mov
into
or
out
pop
insb
bnd
nop
mov
sbb
inc
imul
jne
into
xor
xchg
mov
or
jmp
fistpl
mov
push
icebp
pop
addr16
dec
push
sbb
fists
cmp
std
and
addl
test
test
push
std
mov
ss
push
add
shrb
xlat
enter
jo
test
xor
adc
call
cmp
imul
pop
loope
jae
std
movl
adc
inc
movsl
add
test
rol
inc
push
nop
addr16
scas
test
call
insl
bnd
sti
xchg
inc
add
repz
icebp
or
jae
insb
pop
ret
mov
icebp
pop
outsl
test
adc
pop
insb
jbe
fwait
gs
mov
jns
jne
mov
loop
lods
push
jg
sub
cmp
xor
xor
xor
aad
pop
mov
xchg
inc
jnp
mov
adc
stc
inc
push
les
out
pop
std
and
nop
mov
cltd
push
xchg
push
lcall
push
sahf
add
jbe
loopne
jecxz
testl
mov
lock
dec
std
lcall
mov
movsb
cmpsb
add
je
xor
pop
in
repz
mov
es
mov
jb
sub
cltd
fstp
and
int
fwait
lret
cmp
mov
lods
test
add
add
scas
ljmp
das
xchg
pusha
leave
std
scas
aas
xor
dec
lods
int
or
aaa
loopne
or
mov
sbb
gs
cld
fsub
mov
xor
jns
loopw
jl
dec
add
mov
sbb
jns
popf
jae
jns
mov
xchg
ljmp
cltd
fists
iret
mov
sbb
jo
xchg
repz
out
adc
cmp
inc
dec
call
mov
push
imul
pusha
push
pop
or
shlb
inc
insb
lret
ret
std
dec
adc
loopne
pop
inc
iret
add
sbb
xor
cmp
cltd
je
or
mov
repnz
and
push
les
sbb
and
jbe
cmp
pop
stos
inc
dec
int
aam
push
mov
xchg
fwait
mov
sti
or
je
orb
jmp
push
xchg
adc
movsb
mov
andl
jnp
push
push
mov
sti
lcall
ret
mov
push
and
cmp
jbe
jmp
mov
outsl
cmp
stos
in
es
and
cmp
pop
pop
hlt
ja
je
cmc
cmc
sub
jle
lds
and
fwait
in
pushf
in
bound
jl
pop
lods
int
es
jmp
mov
jge
mov
in
stos
mov
adc
das
ffreep
or
cmp
push
test
repnz
ret
pop
outsl
mov
xor
pop
fisubrs
adc
js
add
mov
push
ljmp
fisubl
mov
pop
push
nop
repz
jns
jb,pt
xchg
push
test
jne
pop
and
aas
fld
test
push
enter
sbb
sbbl
dec
and
js
and
lods
xchg
cli
in
sbb
mov
ret
or
out
lock
bound
call
mov
or
sbbb
mov
or
call
or
add
jb
out
xchg
ret
aad
ljmp
mov
cmp
popl
rcrl
int
movsb
pushf
lods
and
jmp
cmpsb
jns
addb
movsb
loop
pop
icebp
dec
lds
lds
mov
jns
sub
icebp
mov
imul
or
pop
and
xchg
xchg
xchg
data16
jae
mov
ss
das
insl
movsl
inc
stos
into
push
lods
inc
mov
dec
push
dec
jnp
imulb
ds
insb
std
sub
or
adc
lcall
mov
dec
jo
emms
aaa
mov
pop
lods
sbb
pop
or
adc
leave
or
icebp
idiv
stos
fildll
mov
out
push
cmc
mov
and
xchg
and
adc
ljmp
les
mov
mov
pushf
scas
inc
jge
pop
mov
fs
rorl
add
xchg
jbe
lret
jmp
fwait
insl
add
insl
dec
imul
imul
push
jb
adc
xchg
push
test
push
sub
mov
lods
xchg
xor
jg
xor
mov
push
inc
sbb
xchg
mov
stc
sbb
roll
popf
mov
fisubl
xlat
fcmove
or
lcall
imul
scas
jae
pop
cmpsb
lds
pop
inc
popf
and
fcoms
push
xor
inc
daa
lock
lahf
mov
cli
je
mov
mov
daa
into
lea
rol
test
sarb
push
test
sub
ret
stos
dec
cmp
test
out
out
daa
out
dec
ret
mov
jmp
jecxz
sarb
or
jge
jo
jmp
xchg
add
cmp
pop
push
dec
xlat
pop
mov
in
stos
loope
fld
scas
cmp
xchg
jmp
cmc
adc
ret
push
pusha
jnp
imul
mov
inc
fwait
add
outsl
das
stos
call
sbb
cmp
jmp
xchg
outsl
lods
in
pusha
sub
and
mov
icebp
adc
movsb
cmp
cmp
enter
in
lods
sbb
lds
cmpl
mov
es
and
xor
outsb
mov
out
jns
sub
inc
test
mov
subb
les
sti
mov
push
cmpsb
mov
scas
add
xchg
adc
das
sub
push
fstps
lods
xor
mov
inc
jmp
iret
in
movsb
ss
sarb
sub
cwtl
daa
jp
scas
push
xchg
mov
dec
jbe
push
pop
sub
push
cwtl
mov
lcall
dec
jae
mov
xchg
mov
out
sbb
cmp
push
les
push
leave
push
sbb
inc
repz
jnp
int
cmpsb
and
jnp
scas
ss
xchg
pop
notl
sub
mov
andl
adc
cltd
mov
dec
js
cmp
imulb
push
mov
mov
out
push
xchg
pop
ret
add
dec
add
pushf
fs
sub
fldt
das
add
lret
push
shrb
loop
xlat
test
sub
out
loop
mov
or
mov
adc
data16
add
and
aad
shll
shll
push
add
es
pop
xor
popa
push
cwtl
rcr
or
into
jmp
mov
cli
sbb
xchg
xchg
mov
aam
mov
and
imul
int
push
iret
movsl
andb
mov
mov
cld
shrl
push
mov
xor
inc
out
mov
ss
sbb
dec
fwait
push
mov
insb
movsl
mov
adc
adc
inc
outsb
je
mov
mov
repnz
mov
jl
jg
aad
push
mov
mov
dec
daa
pop
pop
ret
mulb
loope
push
push
test
out
jmp
pop
inc
call
cmc
lods
fs
inc
cld
cmp
lcall
sub
push
nop
mov
pop
ds
daa
sbb
cmp
fs
lods
aam
call
pop
pop
or
leave
es
movsl
xchg
jmp
mov
pop
pop
out
std
jp
les
jns
fidivs
fwait
xor
movsl
pop
jae
xchg
mov
nop
mov
xor
pushf
scas
jne
fnsave
test
sahf
fistpll
bound
add
pop
ret
cmp
jo
mov
rorl
push
ret
push
imul
or
inc
cmc
aaa
cli
and
scas
xor
pusha
stos
add
lock
nop
add
ret
jne
push
inc
rolb
cli
mov
and
cld
out
sub
sub
dec
aam
std
stos
xchg
loopne
pop
ja
loopne
sub
push
pop
mov
loop
fidivrs
mov
aaa
mov
dec
leave
sbb
lods
in
mov
int
xchg
push
gs
pushf
cmp
stos
es
jmp
into
in
xor
jge
pop
and
push
addr16
shll
ss
mov
jle
dec
ja
jp
push
push
xor
dec
xorb
stos
lock
mov
and
test
fwait
out
cmpsb
das
dec
cmp
inc
cltd
sub
lea
jo
out
or
clc
jb
fcomip
pop
sbb
or
bound
mov
test
insb
into
xchg
and
inc
rorl
pusha
sub
add
pop
jle
pop
daa
inc
jae
stos
icebp
pop
jp
lds
and
mov
lds
lahf
dec
shll
xchg
xor
fs
add
fldl
hlt
push
lcall
mov
insb
xchg
pop
mov
and
cli
jge
dec
aam
orb
push
int3
or
pop
sub
xchg
fiaddl
subl
mov
jl
fildll
mov
roll
inc
xor
and
imul
stc
popf
in
mov
shrb
loope
addr16
push
push
mov
aaa
xor
adc
lods
stos
dec
cmp
lods
xchg
and
nop
xor
movsl
mov
sbb
mov
pop
adc
pop
mov
rorl
stc
mov
imul
in
inc
add
insb
push
push
pop
popf
notb
xor
sti
sbb
leave
jp
jecxz
jae
and
call
or
imul
movsb
aaa
pop
dec
push
cwtl
push
inc
add
es
clc
push
dec
sub
dec
into
stos
ds
jno
fcmovb
shlb
daa
push
fistl
mov
es
inc
test
test
mov
mov
mov
sbb
mov
lock
mov
loop
clc
lret
push
iret
xchg
xor
mov
mov
nop
imul
mov
ss
add
pop
push
stos
fwait
xchg
sub
cmp
scas
push
adc
mov
mov
sub
sbb
xor
add
mov
xor
mov
dec
pop
or
addr16
sub
stc
push
inc
mov
imul
jne
call
push
lods
inc
fucomp
and
rcrb
aam
dec
add
push
aas
movsb
data16
sub
roll
and
js
jnp
loop
mov
xlat
xor
sbb
add
jo
jnp
pop
sub
or
fbld
int
outsl
data16
jns
jne
jne
jg
pop
gs
add
xor
les
aas
jae
das
shr
scas
test
out
stc
mov
inc
xchg
inc
xor
cld
out
sbb
push
push
sbb
jle
xorl
mov
iret
xor
dec
les
inc
lods
mov
fildl
insb
cmp
andb
aaa
dec
scas
pop
sti
add
jnp
or
lods
lock
adc
in
hlt
mov
in
jmp
clc
lds
lock
xchg
mov
mov
out
pop
adc
cwtl
sbb
in
push
adc
in
push
push
fidivs
or
scas
cld
ret
xchg
js
jo
sahf
fcoml
cwtl
cltd
outsl
or
jae
xorb
jg
push
cwtl
jo
imul
inc
dec
or
sbb
fdiv
lret
sarb
cmc
xchg
sbb
mov
stos
dec
pop
cmpl
mov
test
jne
arpl
jge
add
cmc
cwtl
data16
pop
in
data16
shl
pop
xchg
in
lahf
mov
fmull
inc
cld
int3
les
push
insl
xchg
xor
dec
gs
or
movsl
in
aas
ds
jl
sbb
ja
adcl
adc
subb
xchg
cs
xor
jbe
xor
dec
filds
sti
inc
int3
push
clc
push
xchg
xchg
xor
clc
test
test
xor
sub
les
and
adcb
sbb
aaa
adc
jo
pop
jmp
or
fistl
shll
cmpsl
lea
xchg
xor
pop
test
cmp
push
ret
icebp
xchg
jae
mov
adc
mov
into
and
inc
add
movsb
mov
sbb
sub
pop
mov
sub
scas
fistpl
outsb
addr16
mov
stc
jmp
shrl
aaa
out
or
out
je
aas
pop
out
add
adc
pop
pusha
ss
stos
push
inc
in
sbb
and
mov
push
jne
mov
arpl
lret
lcall
rcrl
lds
push
imul
and
out
jnp
adc
xor
shl
inc
jne
inc
int
pop
es
or
add
mov
dec
sub
lret
filds
dec
push
dec
nop
daa
push
dec
or
insb
sti
scas
xchg
xchg
loopne
les
enter
es
add
mov
popa
and
out
cmp
leave
mov
mov
popa
adc
sbb
adc
and
jl
sahf
fmuls
adc
out
jbe
or
fisubl
jo
sub
lods
fcompp
je
popf
lea
xor
popf
aaa
ja
cli
or
fisubl
mov
loopne
jne
cmp
call
mov
insl
repz
xchg
xlat
mov
test
imul
in
pop
aam
mov
mov
orb
scas
jle
fidivrs
fistpll
mov
rcr
jne
adc
mov
iret
pop
pop
test
ds
jecxz
movsb
xchg
lods
insl
jecxz
jp
shrb
and
jmp
adc
adc
add
sarl
dec
cmc
jmp
cmpsb
in
pop
xchg
leave
out
sub
rcrl
enter
push
jne
push
sub
push
cmp
adc
mov
insb
mov
xor
mov
in
xchg
push
mov
fsubp
hlt
imul
sub
bound
xchg
lret
xor
mov
pusha
andb
mov
jo
movsl
and
cwtl
adc
push
xor
pushf
imul
add
fcmove
icebp
bound
lcallw
xor
mulb
pop
testb
or
lret
jno
stos
mov
cmp
cmc
pop
test
repnz
stos
ret
sbb
jo
lds
mov
or
pop
or
dec
pop
sub
and
dec
adcb
je
jl
jecxz
mov
lock
ja
push
mov
inc
dec
mov
add
cli
das
sub
dec
mov
lcall
and
push
cmpsb
scas
push
jne
dec
jns
stos
inc
shlb
pop
lea
xor
stc
aam
fstpt
mov
lcall
test
add
mov
sbb
les
imul
fwait
popl
ljmp
repz
inc
or
dec
jp
sbb
insl
mov
lret
in
or
scas
dec
xchg
jp
jns
stc
cmp
sbb
insl
scas
jns
scas
add
push
push
cmc
adc
stos
adc
and
std
xchg
stos
adc
mov
imul
and
notb
jne
cmp
ja
subl
sub
stc
repnz
test
dec
add
jb
xchg
nop
adc
or
mov
shr
scas
sbb
addb
inc
std
addr16
add
repz
jno
cld
jae
xchg
roll
cmp
js
dec
cltd
fcmovnbe
mov
pop
cmpsb
xor
lahf
testb
sbb
andl
nop
cmc
mov
aas
push
ret
lods
jle
inc
call
ret
dec
pop
es
iret
push
dec
clc
jmp
sbb
addr16
adc
add
sub
mov
dec
cmp
xchg
pop
adc
jae
fdivrp
mov
stc
xchg
into
scas
xchg
push
pushf
arpl
adc
ss
ficomps
ss
mov
sbbl
xchg
test
clc
movsb
xchg
scas
inc
and
pop
cmp
fcoml
hlt
xchg
movsb
mov
bsr
je
idiv
push
jno
jno
jbe
fsubl
sub
aam
shll
cld
mov
push
add
jecxz
inc
aaa
push
push
dec
iret
mov
clc
mov
xchg
je
inc
mov
adc
inc
xchg
push
enter
xchg
xchg
clc
aad
inc
repnz
sbb
push
pusha
mov
jp
or
pop
xchg
movsb
cmpsl
mov
lret
ljmp
test
out
mov
cwtl
jmp
les
sbb
rcr
jnp
mov
xor
cltd
stc
xor
and
dec
inc
dec
sar
lcall
dec
add
xor
stc
push
pushf
adc
cmp
das
xor
jle
jb
sub
sbb
shll
add
ret
imul
push
sahf
stos
xchg
movsl
adc
push
inc
mov
imul
lea
sahf
add
fmuls
xchg
ret
imul
jge
aaa
inc
push
dec
push
pop
into
in
mov
push
test
mov
sbb
cli
sarb
adc
cmp
repz
xchg
loopne
sbb
push
pop
add
in
push
cs
dec
arpl
mov
sub
mov
and
outsb
and
int
insb
jg
inc
push
repz
add
and
daa
cvtps2pd
outsb
test
adc
icebp
ret
cmpsb
sbb
les
dec
adc
std
shll
pushf
mov
ds
add
aam
adc
mov
loop
mov
mov
mov
mov
cmp
imul
lods
mov
pop
xchg
or
inc
loope
mov
cli
repz
shl
ljmp
cmp
cmp
lods
div
xorb
in
scas
lock
xchg
sbb
xchg
repz
ja
pop
mov
sbb
scas
sub
pop
and
icebp
mov
cmp
call
cmp
insb
and
test
jae
adc
xchg
mov
push
sub
imul
daa
into
test
out
aad
into
xchg
test
push
sub
test
into
push
jmp
cltd
cmp
pusha
imul
add
pop
jge
jle
cs
ds
cs
jbe
sub
push
add
push
mov
adc
dec
aaa
sub
lahf
movsb
jne
xchg
bound
pop
rolb
sbb
imul
fistl
imul
or
pop
mov
insl
aaa
add
mov
push
pop
jo
cmpsl
int
loop
fcoms
jmp
jmp
xchg
sub
xchg
mov
in
sbb
mov
mov
push
push
xchg
jmp
ret
imul
mov
fs
jge
sbb
lods
pop
test
ja
push
pop
data16
cs
sbb
or
xor
add
fs
mov
fildl
jb
aaa
negl
into
cmpsb
je
mov
jle
in
xor
call
clc
push
or
xchg
mov
into
fwait
push
imul
clc
mull
jl
cmp
bound
and
sti
push
sahf
and
xchg
loopne
clc
sbb
inc
mov
mov
mov
add
mov
push
enter
inc
fmuls
hlt
js
or
out
mov
xchg
je
shrb
cld
xchg
bound
stos
cmpsb
pop
adc
imull
movsl
lret
leave
ret
inc
mov
mov
rcrb
fs
std
ret
hlt
imulb
mov
mov
sarb
cmp
int
fldt
scas
pushf
jg
mov
shl
mov
bswap
js
inc
jmp
xlat
xchg
hlt
ss
jnp
into
sbb
mov
data16
jge
sub
adc
sbb
subb
adc
fwait
xor
jnp
hlt
mov
inc
js
or
sub
loopne
rorb
cs
sarl
test
orb
sub
pop
pop
adc
cmc
js
loop
pop
cmp
cmp
pop
lods
int3
or
jb
imul
add
xchg
mov
jl
pop
fs
cmpsl
aad
aad
fimuls
dec
mov
dec
xchg
mov
push
loopne
and
sbb
fbld
repnz
rolb
cli
mov
stos
jg
fisttpll
scas
sarl
push
push
fs
fcoms
mov
push
adc
frstor
xchg
pop
mov
scas
aam
lahf
enter
dec
push
mov
push
sbb
pop
lock
into
cs
cwtl
ret
inc
sbb
sub
mov
jg
mov
add
pop
fstl
pop
test
data16
lock
lret
shl
nop
push
lods
push
and
inc
test
adc
cmp
pop
in
je
mov
mov
popa
cmp
add
dec
xchg
push
mov
xchg
out
call
test
aaa
movsl
xchg
add
frstor
jecxz
push
ret
sbbl
xor
push
hlt
orb
bound
shlb
pop
mov
sbb
insl
lcall
ffreep
cld
mov
cmp
aam
es
mov
lods
out
xchg
sub
push
mov
pop
mov
push
lahf
push
dec
loopne
dec
enter
or
mov
jmp
mov
sub
or
adc
cmc
xor
scas
cmp
sub
cmp
sub
lds
in
or
or
mov
jns
ljmp
mov
push
mov
inc
icebp
fwait
movsl
add
inc
push
arpl
or
lret
scas
or
int3
push
mov
ss
ficompl
mov
mov
mov
push
push
jecxz
mov
std
inc
dec
cmp
les
sahf
divb
hlt
cmp
aam
pusha
in
sub
mov
jne
adcl
cltd
lods
cmp
mov
mov
adc
in
mov
push
push
mov
scas
out
lahf
pop
add
push
mov
sarl
imul
popf
sub
fisttps
xlat
add
cmp
cmp
adc
pop
xchg
fbstp
inc
lds
adc
push
clc
mov
mov
mov
popa
lds
or
sahf
adc
sbbb
lret
mov
push
xor
stos
movsl
jno
call
pusha
pop
mov
jns
pusha
outsb
fldt
js
fimuls
cmc
pop
fldl
jmp
leave
sub
and
jae
loop
ret
prefetch
rcrb
inc
mov
std
push
or
jmp
mov
mov
repnz
cmp
dec
pop
enter
inc
pop
xor
shrb
orb
sbb
enter
aad
xchg
dec
int3
lahf
mov
ds
sub
into
xchg
push
dec
cmp
and
or
xor
scas
mov
cmp
push
scas
cmp
jl
pushf
mov
insl
cmpsl
mov
jno
adc
into
int
xchg
loope
cmpsb
mov
imul
sbb
cltd
fcoml
fldl
je
and
int
or
sti
xchg
aad
lods
mov
rclb
xor
mov
inc
lods
cs
ss
pop
pop
les
dec
leave
adc
pushf
and
inc
ja
adc
loop
shl
push
pop
mov
and
cmpsb
js
jmp
add
aaa
adc
das
mov
shr
gs
push
mov
cmp
sub
adc
rcrb
stos
aam
dec
into
aaa
frstor
fsubrl
sub
xchg
jbe
mov
cmp
aaa
inc
enter
addr16
push
cmc
movsl
fildl
outsl
jo
loopne
adc
testb
in
push
mov
mov
add
shl
je
xor
call
mov
xchg
syscall
repz
inc
mov
cld
push
mov
mov
out
pop
mov
lods
mov
fs
jg
push
cltd
sub
adc
xorb
or
cmp
lahf
call
mov
mov
dec
in
lods
push
mov
cld
je
sub
xchg
clc
sbb
pushf
fldl
xchg
xchg
imul
arpl
sahf
or
xor
sarl
lret
adc
inc
dec
push
pushf
ret
sbb
adc
sar
inc
or
adc
add
jge
inc
add
mov
adc
add
in
ljmp
jnp
inc
push
mov
cli
sbb
cwtl
xor
xchg
adc
mov
popa
int
mov
push
pushf
outsb
js
add
xor
stos
sbb
adcl
and
jb
leave
scas
push
adc
cmp
xchg
jnp
xor
mov
clc
jle
cmp
mov
incl
cld
cmp
dec
call
popa
sub
fsubrl
pop
xchg
insb
lret
fisubrl
cmp
aam
jbe
popa
outsb
std
xor
popl
dec
sbb
in
popf
xlat
adc
sub
sahf
xlat
pop
nop
sbb
cmpb
test
mov
or
ja
btsl
mov
ds
lds
xchg
out
insl
arpl
push
scas
lret
cld
lock
and
fcom
xorl
jge
dec
shrb
pop
sbb
push
mov
jno
scas
add
rcl
popf
xor
dec
cmp
out
cmp
std
sub
mov
pop
out
shr
call
les
in
jle
jmp
inc
pop
mov
mov
adc
pop
pop
mov
leave
pop
jecxz
inc
cmp
pop
push
mov
add
fcmovb
ret
or
pusha
lret
or
xchg
ljmp
adc
fsubs
pop
insl
add
lret
icebp
adc
or
and
jno
stos
js
lods
ss
cmp
sbb
fsubr
mov
dec
jo
bound
sbb
in
cmpsb
cs
test
ret
out
lods
stc
out
add
je
in
cld
lret
push
push
dec
mov
rorl
xor
imul
xchg
ljmp
xchg
push
loopne
scas
loopne
lods
mov
sbb
fadd
aam
mov
fwait
call
add
push
push
sti
scas
mov
jp
std
inc
mov
mov
test
arpl
add
enter
push
icebp
push
pop
or
stc
sbb
andb
data16
push
xchg
xor
adc
push
mov
xor
xchg
xlat
push
rorl
sub
cmc
and
xchg
push
adc
mov
add
lea
jno
flds
push
das
push
or
aaa
sub
unpcklps
jb
pop
add
mov
test
or
pop
mov
cwtl
pop
loope
cwtl
ret
inc
push
lods
sti
fstps
aaa
cli
push
push
xchg
mov
inc
movsb
test
ds
bound
xlat
inc
enter
std
repz
sub
inc
push
sti
push
mov
pushf
mov
icebp
xchg
sbb
hlt
fildll
stc
lret
jl
and
andb
xchg
je
jne
push
xchg
xor
xchg
xchg
mov
mov
adc
mov
lcall
push
jl
cmp
outsl
mov
cmpsl
pop
nop
or
repz
or
or
xchg
cltd
cmp
mov
and
xor
xor
mov
pop
nop
push
std
std
cmp
sub
ret
std
adc
ret
outsl
popa
sbb
sub
pusha
xchg
mov
xor
cmp
xor
pop
and
test
xchg
xchg
leave
sbb
aas
fstps
pop
inc
xchg
pop
movq
xor
sbb
adc
jmp
mov
lret
sub
outsb
movsl
jmp
add
sbb
daa
rcr
js
cmp
mov
dec
sar
jno
fs
push
cmp
adc
cmp
jne
sbb
and
and
push
aas
mov
fs
adcb
in
push
xor
mov
inc
mov
iret
es
es
cmpsl
insl
lret
fwait
std
jge
sub
mov
das
inc
cmc
mov
daa
int
aad
rcll
mov
pushf
idivl
xor
jo
or
and
rorl
xchg
imul
paddusw
dec
rcrl
pushf
iret
inc
ss
add
ljmp
mov
pop
inc
mov
sub
fsubrs
in
rep
jecxz
push
push
leave
and
push
testl
lea
add
add
dec
mov
ja
or
adc
inc
rcl
mov
int3
lcall
and
mov
mov
cld
jg
pcmpeqw
and
das
adc
clc
movsb
aad
lods
scas
or
in
jmp
pushf
fsts
xor
push
mov
inc
cmp
or
xor
jns
dec
fisttpl
cwtl
stos
push
xor
jecxz
sbbb
or
mov
iret
cli
sti
and
and
xor
xchg
mov
pop
xor
mov
push
or
jno
clc
and
int
fiaddl
adc
ret
scas
rcrl
cmpsl
dec
repnz
cld
dec
out
xchg
fisubrl
movsl
imul
daa
int3
out
mov
into
ja
shl
pop
ret
cmp
fs
xor
lods
sarl
enter
jb
or
dec
jle
insb
mov
or
xor
fcom
pop
mov
outsl
daa
ret
sub
mov
sub
fsubs
dec
add
int
cltd
sub
popa
dec
fsubrs
and
popf
sahf
dec
mov
and
cmpsl
add
fdiv
and
xor
addr16
cmp
mov
je
notb
cltd
rolb
cli
push
lods
punpcklwd
or
call
xchg
adc
sub
frstor
int
adc
pop
repnz
mov
inc
test
dec
sub
sub
mov
test
lods
jno
push
subb
imul
push
xor
faddl
xchg
scas
ret
inc
xchg
ja
cmp
test
test
aad
dec
adc
pop
cltd
add
and
add
fbld
inc
jp
fidivrl
test
lods
cmpsb
pop
js
stos
pop
outsb
leave
fmul
add
sbb
orb
mov
dec
movsl
mov
mov
pushf
push
ret
clc
sub
inc
sbb
lahf
pop
scas
sbb
cmp
pop
subl
pop
dec
pop
jp
mov
mov
xchg
stos
call
inc
jb
test
je
mov
jecxz
pop
test
push
cmp
in
and
mov
divl
lahf
fists
adc
xchg
fstl
or
jo
mov
imul
dec
fnclex
pop
lahf
fistpl
rcll
pop
push
ds
test
xor
movsb
jge
xor
jmp
icebp
aas
mov
aad
xor
outsb
gs
xchg
adc
push
and
out
adc
cwtl
push
insl
dec
movsb
xchg
bound
dec
dec
popa
pop
scas
fcmovnu
imul
notb
mov
sti
pop
sbb
mov
pop
aam
mov
pop
loopne
inc
inc
mov
jnp
insl
jne
cmc
mov
push
and
je
in
pop
and
aam
mov
dec
subb
icebp
dec
fcmovnbe
sbb
sti
add
lods
decb
sbb
cltd
stc
mov
aaa
test
fmuls
jle
mov
stos
sahf
shlb
inc
movsb
jo
fisubs
pop
enter
out
push
xor
push
in
sbb
mulb
pop
sbb
adc
mov
jno
fidivrl
fists
jle
pop
jmp
adc
cmp
lods
pusha
mov
jo
insb
fsts
lods
xor
clc
rolb
sub
pop
jne
mov
lock
pop
in
mov
testb
push
ret
pop
pop
rcr
inc
jmp
cmp
xor
and
pop
sarb
dec
and
inc
hlt
sar
pop
rcll
fs
mov
mov
repnz
cmpsb
orl
jmp
in
fs
test
cmc
xchg
ss
xor
push
pop
repnz
imul
lea
xor
or
shlb
pop
testb
add
or
sub
jp
mov
int3
test
cmp
jb
jb
test
enter
dec
mov
outsl
and
aad
das
add
and
sti
mov
sub
jp
add
call
pop
mov
cmp
imul
in
ljmp
cmpsl
int
aam
jo
in
add
sbb
push
xor
sub
divb
bnd
sub
addr16
push
test
jg
bound
mov
cltd
push
fisubs
loopne
sbb
ds
xor
push
adc
fwait
scas
lea
insb
and
dec
inc
inc
ret
fnstenv
or
jg,pn
push
inc
jae
stc
push
int3
pop
addr16
inc
mov
mov
std
sub
pop
bound
dec
mov
inc
mov
in
adc
add
xorb
or
lret
aaa
cmpsl
jo
cwtl
aad
ss
dec
xchg
hlt
rcl
fcompl
jp
pop
xchg
adc
xor
push
dec
out
pop
aad
push
push
add
and
repnz
jmp
mov
in
notb
push
push
push
out
adc
and
jl
jnp
cld
xor
fbstp
das
push
inc
cltd
xchg
in
mov
mov
sahf
add
movsb
mov
and
loop
xchg
ret
std
ja
cmp
jb
pop
lds
inc
in
or
lret
sbb
mov
je
mov
iret
popf
adc
mov
stc
inc
stos
aaa
mov
scas
push
pop
scas
mov
hlt
mov
fcmovnu
loope
lods
shrb
mov
inc
out
adc
sbb
frstor
or
mov
stos
orb
iret
cmp
cmp
cmp
cmp
add
cli
or
or
ja
push
icebp
cwtl
rcrl
xor
bound
cmc
xlat
ds
xchg
lock
jg
pusha
push
push
insl
jbe
roll
mov
arpl
push
out
test
lcall
test
in
loop
dec
cmp
fcomip
int
hlt
inc
sbbb
pop
stc
data16
out
sub
jns
int
test
jno
mov
dec
aad
test
aam
and
mov
cmc
aam
decl
or
cmp
pop
lea
jbe
gs
jle
adc
dec
sub
aad
sbb
inc
bound
aaa
sub
sub
fdivs
fwait
xchg
sbbl
xchg
popa
cld
scas
sbb
roll
dec
dec
or
imul
mov
fstl
sbb
daa
icebp
cmpsl
and
and
rolb
push
sahf
mov
pop
jns
fsubrs
lret
out
sub
cmp
xor
push
rcrb
and
aas
sub
pop
add
jo
mov
sub
adc
fistps
jo
mov
sbb
xor
imul
out
pop
or
adc
jne
pusha
fs
jle
fbstp
or
dec
and
cltd
lea
mov
sbb
xor
sbb
popf
outsb
fsubrl
popa
and
sti
sar
movsb
pop
movsb
mov
push
jo
loopne
sahf
frstor
mov
into
jecxz
xchg
dec
lret
add
mov
divb
push
popa
mov
test
shll
jns
sbb
fidivl
xchg
sub
stos
jg
sbb
test
lods
jp
adc
notl
sbbb
push
out
fsubs
insb
inc
fcoml
mov
push
or
mov
push
stos
push
fidivs
pop
pop
mov
scas
adc
aaa
xchg
pop
or
mov
out
sub
add
cmp
push
mov
xor
inc
subl
fcoms
sub
sbb
out
stos
bound
push
sbb
arpl
jo
cltd
fs
lahf
lods
pop
jl
inc
lds
shll
fisubrl
test
pushf
adc
das
inc
add
push
fs
pop
scas
stos
and
in
add
shll
inc
test
and
cmpsl
call
cmp
mov
mov
out
icebp
sbb
leave
dec
pop
adcl
and
xchg
fisttpll
dec
fstpl
jl
loopne
fstpl
mov
fnsave
cmpsl
fidivs
fsubrl
pop
lcall
loope
xchg
mov
sub
pop
inc
xchg
je
lock
pop
es
xchg
mov
insb
adc
aas
push
mov
pop
inc
sub
lret
aaa
rcrb
jne
push
xlat
les
into
mov
xchg
and
pop
xor
push
add
sub
roll
outsl
dec
loope
add
insb
out
fwait
js
stos
int3
loopne
mov
pop
pop
sbb
xor
loope
ja
mov
pusha
cmp
js
movsl
test
popf
xchg
notb
pusha
enter
add
jecxz
sub
jns
arpl
pop
cmp
mov
sub
push
iret
testb
add
xor
sbb
mov
xchg
adc
add
stos
aam
sbb
add
mov
xor
popa
dec
inc
push
std
scas
in
mov
daa
daa
cltd
fldt
repz
cmp
adc
cmp
in
rcl
iret
fidivl
or
sub
orl
dec
test
sub
jne
adc
mov
int3
inc
js
xchg
inc
jae
adcl
jne
stos
jae
out
cli
jle
and
mov
lock
loope
negl
dec
ret
mov
stos
jmp
pop
outsb
std
scas
imul
add
iret
mov
xchg
mov
jne
loope
cmp
sub
cmp
pop
jecxz
sub
inc
jl
mov
mov
xor
inc
pop
and
stc
cmp
icebp
cmc
jb
pop
adc
and
adc
scas
out
pop
hlt
or
jle
jnp
es
add
aam
xchg
mov
imul
xor
mov
in
imul
mov
xchg
stos
fisttps
fbld
insl
pop
adc
movsb
jns
xor
xlat
hlt
inc
les
inc
inc
call
dec
int
add
push
mov
fwait
cmp
and
cmp
aas
push
sbb
jl
dec
stos
jg
je
cmpsl
xchg
push
xchg
rcr
push
lret
fsin
push
test
sub
and
aaa
sbb
je
stos
pop
insl
push
xor
std
bound
bound
add
std
cmpsl
sub
test
test
addr16
add
lods
xor
lfs
sub
push
add
mov
lods
sbb
jmp
repz
xchg
mov
into
mov
push
adc
out
test
cmc
test
mov
jb
mov
mov
les
sub
add
xchg
leave
pop
fdivl
loop
mov
bound
jns
mov
mov
out
pop
or
add
cltd
shll
aam
push
jmp
pop
push
mov
and
fldpi
ds
and
mov
es
xchg
inc
cli
xor
out
inc
sarb
mov
out
sub
sbb
fwait
sub
xchg
push
jne
int
dec
xchg
pusha
mov
pop
adc
fcomps
shl
xor
aad
mov
fwait
inc
xlat
aam
data16
mov
dec
jle
aas
punpckhwd
xor
test
pop
and
je
xchg
pop
fisttpl
idivb
cmp
xor
add
rolw
clc
and
pop
stc
outsl
lret
or
xchg
call
pop
cltd
imul
fsubl
inc
cs
imul
cli
jmp
mov
cmp
lds
mov
push
add
xchg
andb
sbb
jnp
cmpsl
aam
xchg
stc
in
inc
sbbb
iret
inc
mov
nop
out
shrb
sub
addl
pop
cmpsb
lock
mov
js
popf
aas
jge
mov
scas
ret
adc
test
mov
inc
rcrl
hlt
sbb
pop
jnp
push
jg
movl
int
adc
pop
add
inc
pop
jno
loop
ljmp
stos
fisttpll
hlt
inc
gs
std
out
stos
jns
adc
scas
mov
cmp
arpl
xor
jmp
mov
push
adc
dec
dec
sti
cmp
dec
mov
aad
fsub
jne
sbbl
xor
jns
mov
mov
pop
iret
jl
fcoms
mov
stos
mov
xorl
cmp
stos
es
inc
inc
aam
sbb
xor
sbb
out
jae
stos
cmp
fistps
inc
in
inc
movsl
gs
dec
fwait
sbb
repz
addr16
sar
pusha
es
sbb
shll
cltd
test
gs
xorl
mov
jl
sub
aaa
push
test
push
sub
sbb
jecxz
cmp
icebp
dec
xchg
imul
shl
or
rol
fs
pushf
jg
jmp
jle
int
pop
and
lock
cs
in
into
rclb
jle
addb
adc
mov
xor
jnp
stos
sbb
xor
popa
add
mov
mov
and
mov
lret
test
push
sub
aas
scas
pop
addr16
cmp
in
testb
bound
pop
dec
inc
xchg
sbb
rcll
lds
movsb
jae
icebp
imul
lock
fdivr
pop
jne
push
mov
pop
pop
lret
and
in
inc
out
and
je
movsl
mov
mov
aad
sbb
stc
cmp
stos
cmc
movl
cltd
dec
mov
testl
stos
outsb
ljmp
lcall
lret
xor
pop
mov
pop
mov
or
jp
fcom
cmp
adc
fsubl
movsb
loop
stos
adc
xor
int
mov
fsubrp
push
jnp
rorl
push
lds
adc
mov
pop
jno
iret
pop
mov
imul
clc
or
sti
jbe
inc
xor
dec
mov
fisubl
or
cmpb
mov
jle
cwtl
or
sub
outsl
add
nop
and
mov
lcall
pop
into
lret
dec
sti
repnz
stos
cmp
cmc
int3
scas
ds
add
ljmp
insl
nop
pop
jmp
decb
adc
dec
outsl
cmpsl
rcrl
jb,pn
sbb
js
inc
mov
and
movsl
rolb
adc
test
jmp
mov
adc
shrl
popa
lds
pushf
mov
add
cltd
push
mov
test
jmp
out
loopne
int3
mov
vpaddsb
jo
push
mov
pushf
inc
dec
adc
xchg
sahf
les
cmp
frstor
mov
jbe
pop
push
jmp
inc
jbe
fisubl
push
push
cmp
or
rorb
add
sbb
out
jg
roll
cmp
and
or
push
or
rclb
shlb
adc
negl
push
mov
xor
sbb
pop
sar
lret
adc
out
jns
mov
outsb
sbb
xchg
cmc
adc
xor
test
int
ficompl
sbb
lods
popa
popa
aam
je
and
pop
popa
mov
cltd
pop
lcall
fcompl
test
inc
aas
pop
out
jb
scas
push
inc
add
ret
lock
add
push
iret
lret
shr
or
outsb
sub
pop
out
mov
mov
loope
cmpsb
push
mov
fimuls
push
inc
or
or
cltd
jno
aad
lea
fstl
pop
mov
outsb
fisubl
test
dec
xor
les
lret
enter
pushf
mull
pop
loope
jae
std
mov
dec
sahf
enter
xchg
inc
dec
movsl
add
adc
jl
loope
ret
les
cmpsl
adc
push
movsl
sbbl
aad
scas
fiadds
orl
pop
add
pushf
das
test
pop
push
pop
call
shlb
call
pop
ja
sbb
mov
jl
subl
imul
sub
sbb
pop
sub
aad
xchg
xor
mov
fldl
jp
xor
mov
insb
jecxz
xor
dec
out
jnp
and
mov
xor
daa
std
mov
subb
xchg
mov
and
neg
rcll
arpl
ds
add
arpl
push
lds
cmpsb
int
das
es
cmpsb
or
scas
inc
mov
mov
scas
push
pop
mov
das
adc
movsb
in
dec
les
push
sbb
mov
adc
repnz
cmp
cmp
insl
push
mov
mov
pop
mov
stc
insl
push
cltd
fstpl
xchg
sub
fcmovne
push
mov
mov
repz
test
mov
lret
mov
jno
xchg
xchg
sub
cmc
pop
push
in
add
fs
aad
jp
inc
idiv
sti
mov
xor
rcrb
jle
ja
mov
cmp
cmc
mov
jno
mov
or
sub
fdivrs
push
xchg
xchg
cmp
pop
ret
add
xor
fdivl
orb
aam
sub
push
xchg
lock
stos
es
lods
or
loope
xor
fwait
xorl
mov
in
adc
sbbl
cmp
jl
mov
outsl
add
cltd
adc
jecxz
mov
mov
mov
rcr
js
rclb
fcoms
mov
in
xchg
dec
lods
xor
sub
imul
push
jns
sbb
sub
loope
test
aad
or
mov
sbb
mov
inc
aad
mov
xchg
daa
les
cmpsl
xor
scas
xor
jge
push
fnstcw
push
or
test
dec
mov
sbb
mov
sub
push
or
stos
pop
mov
adc
orl
aam
movsb
inc
mov
mov
test
jle
hlt
or
orb
mov
sbb
sahf
dec
adc
jnp
mov
fsubl
imulb
cld
cltd
and
fldcw
das
in
dec
jnp
fisubrl
push
jns
xrelease
xchg
pop
lcall
ja
leave
push
or
loopne
dec
lret
xlat
mov
xor
xor
sbb
rcrb
adc
lds
cmp
pop
loop
out
cmp
pop
xlat
dec
jmp
sbb
lahf
push
shlb
ja
mov
mov
inc
sub
les
mov
stos
mov
repz
cmp
and
push
inc
lock
bound
fldenv
sub
push
mov
add
lcall
cmc
sbb
outsl
mov
int
push
or
enter
arpl
lock
jne
cmpsl
in
scas
lds
inc
arpl
lahf
cmpsb
daa
iret
lock
adc
sub
cmp
dec
xchg
and
pop
jmp
movb
mov
jmp
popf
insb
cmp
popa
and
insb
gs
lea
fnstsw
xor
mov
sub
push
test
or
aam
dec
push
dec
sub
test
mov
sub
jmp
add
aaa
xchg
imul
sbb
rcrl
sbb
cmpsl
cmp
dec
add
jno
data16
imul
sahf
jmp
inc
jecxz
push
inc
xor
pop
fbstp
cmp
add
cmp
out
mov
push
adc
push
ficoml
jg
fwait
sbb
cmp
mov
shlb
mov
sbb
fnsave
and
sub
or
dec
dec
cmp
adc
scas
mov
lods
inc
push
mov
xchg
out
cmp
jl
cltd
dec
inc
add
in
int3
cmp
mov
lahf
daa
adc
jns
cmpsl
mov
mov
xchg
enter
ljmp
lret
aam
bound
xor
add
outsb
dec
cmp
lods
cmpb
pop
mov
jl
test
cmp
jp
sbb
and
adcb
jge
jbe
filds
out
int
jge
cmp
lods
lods
mov
test
or
mov
sbb
dec
mov
clc
stc
or
int3
loop
popf
pop
ja
adc
push
hlt
out
fwait
cmovl
lcall
dec
rcrb
sti
cmpsl
aam
in
out
fs
xor
dec
repz
mov
rcrl
ljmp
xchg
psadbw
neg
sahf
sbbb
out
out
adc
int
mov
icebp
insb
mov
sbb
imul
lret
lcall
xchg
insb
aad
into
repnz
lods
insl
adc
cltd
sub
jmp
ss
lea
push
pop
call
mov
fs
lea
adc
cmc
xchg
mov
xor
or
add
loop
ja
mov
inc
jb
xchg
pop
and
ljmp
jo
data16
mov
jg
test
mov
leave
subb
jnp
movsb
ljmp
lret
mov
mov
cli
into
out
and
ud1
stos
sub
inc
xchg
leave
sub
mov
xchg
jecxz
popf
xchg
push
movsb
and
mov
adc
xor
cmc
mov
or
cmc
lods
mov
ljmp
loop
sbb
stc
cmpsb
lea
inc
in
push
mov
dec
pop
cmpsb
lret
ret
add
movsl
inc
pop
inc
test
sub
mov
rcl
mov
sub
movsl
pop
scas
ja
inc
fdivs
rcll
pop
out
lfs
imul
lea
fisttpl
push
mov
sbb
lds
jae
ret
cli
in
xor
mov
mov
xorb
cmc
jbe
adc
add
sub
fcompl
inc
jbe
repnz
inc
sub
mov
popf
aaa
ja
jecxz
jmp
dec
aam
in
xchg
enter
xor
sbb
out
int3
in
inc
pop
dec
test
inc
mov
add
jae
push
push
faddl
inc
xlat
jmp
sbb
testl
std
in
scas
test
or
inc
and
lcall
inc
inc
inc
jl
jl
adc
xor
xor
sub
xchg
dec
pop
mov
orl
mov
loopne
popf
or
push
icebp
neg
push
leave
shl
sbb
jg
roll
xchg
pop
shll
int3
dec
push
push
int
and
cmpsl
jae
push
push
inc
or
push
pusha
pop
sbb
in
ret
adc
ja
jae
adc
in
xor
test
dec
fnstsw
icebp
jnp
imul
add
xchg
fxch
pop
mov
pop
loope
push
mov
mov
xchg
out
inc
jmp
jae
sub
mov
std
ljmp
pop
aam
out
mov
daa
mov
pusha
lock
adc
xlat
stos
xchg
inc
lods
out
in
jle
inc
pop
call
jle
inc
dec
jecxz
loope
push
outsl
mov
sbb
hlt
dec
in
mov
push
jmp
adc
in
push
push
dec
mov
inc
sub
outsl
adc
xor
inc
leave
jnp
gs
xchg
jecxz
mov
mov
ror
ds
mov
int
lcall
iret
fcomps
loop
mov
sbb
cli
sbb
mov
repnz
lcall
lock
mov
inc
sbb
inc
sub
or
bound
cmp
ljmp
mov
cmp
pushf
pushw
idivl
push
adc
push
cs
xchg
pop
lret
imull
fstp
pop
adc
movsb
dec
pop
lock
mov
xor
cmp
add
adc
mov
jle
std
stc
mov
and
push
and
jno
inc
sbb
inc
jae
repnz
sub
add
mov
mov
into
fdivrs
shll
push
push
gs
jo
cmc
cmp
adc
cmp
pop
outsl
mov
and
aas
push
loop
lret
fsubr
icebp
cmpsl
cmc
je
xchg
dec
mov
movsl
cmc
xor
int
out
bound
mov
int3
mov
sti
ror
jmp
jae
mov
and
movsb
jp
loopne
cmp
daa
jmp
sbb
xchg
jb
pop
mov
xor
fbstp
and
mov
dec
inc
push
pop
ret
sbb
push
mov
insl
movsb
stc
scas
mov
adc
ficoml
dec
mov
mov
cs
jnp
and
stc
divb
lods
sub
pop
cld
test
outsl
lds
stc
jno
andl
xor
adc
sti
adc
mov
mov
outsb
cmp
icebp
icebp
cmpsl
cltd
aam
xor
lret
mov
int3
xorb
xor
sahf
clc
mov
lcall
mov
inc
fcmovnbe
dec
inc
fstpt
and
lea
iret
scas
hlt
cmc
jbe
xchg
xor
cwtl
mov
cmpsl
mov
mov
jbe
or
les
sbb
call
push
insl
fcoms
push
xchg
jnp
fwait
sub
mov
sub
in
mov
idivb
imul
adc
xor
push
and
fisttpl
mov
jle
dec
popa
cmp
js
call
adc
les
add
loop
std
mov
clc
lock
pop
hlt
xchg
lods
push
test
inc
mov
les
fs
test
addb
addr16
ja
ret
cmpl
xor
mov
addr16
lds
scas
loop
inc
jmp
dec
fadds
dec
mov
test
xor
mov
lret
adc
les
push
mov
and
dec
sbb
into
mov
lds
lret
mov
jp
add
into
mov
ror
mov
mov
sbb
adc
ret
xchg
and
stos
pop
outsb
ret
xchg
cmp
rcrl
push
cld
xchg
mov
cmpsb
adc
imul
push
std
mov
out
jecxz
fistl
sbbb
in
mov
push
jb
jno
imul
sbb
out
lahf
pop
fldenv
ljmp
lcall
jns
loop
cmp
cmp
lods
xchg
inc
or
mov
call
test
movsb
sbb
mov
ret
test
xchg
dec
inc
pop
insl
pop
es
lcall
addb
loope
sbb
mov
sbbb
test
mov
mov
repz
testl
mov
mov
es
mov
sbb
mov
scas
adc
ja
push
leave
mov
test
adc
out
aam
pop
daa
in
jl
das
xchg
inc
cmpsb
mov
xchg
cmp
fildll
adc
xchg
add
adc
imul
jae
dec
mov
push
mov
ror
and
push
pop
aas
pop
jbe
xlat
pushf
icebp
sbb
cmp
gs
or
ret
or
ss
mov
ret
leave
aad
mov
test
fs
stos
pop
xlat
inc
push
fistpll
sarb
pop
mov
sub
daa
lahf
jmp
mov
mov
xor
inc
icebp
sub
sub
xchg
push
mov
push
pusha
loope
scas
mulb
jp
jecxz
cli
lock
xchg
test
fistpl
sub
sbb
out
data16
push
ret
fldenv
in
lock
sub
mov
ljmp
imul
jg
dec
cwtl
repz
insl
mov
mov
sbb
pusha
or
jmp
jns
sbb
mov
popa
and
out
movsb
add
add
scas
dec
jp
es
and
mov
dec
aas
xor
sub
mov
cmp
add
inc
dec
loope
in
bound
in
je
sti
xchg
stos
mov
jno
filds
adc
jne
xlat
adc
insl
popa
out
orb
sahf
int
lds
or
shll
scas
cmp
pop
ja
js
mov
jae
lods
cwtl
mov
jmp
stos
push
mov
lret
lret
sbb
fwait
jg
and
xchg
or
ds
mov
into
jle
dec
lds
dec
and
imul
mov
push
mov
adcl
imul
push
into
insl
sbbb
scas
insl
mov
mov
sbb
aas
mov
jg
push
sbb
xor
out
sahf
out
cmc
mov
jg
sahf
lds
xchg
rorl
inc
push
inc
ljmp
dec
adc
dec
js
push
ja
cmc
addb
sub
xchg
inc
xor
rclw
xor
jae
jg
call
mov
sar
adc
pop
mov
dec
jo
in
aam
mov
xchg
stos
push
adc
dec
inc
popa
push
int3
ficompl
imull
sub
adc
repz
into
loope
inc
jnp
aaa
clc
jmp
xor
pop
scas
test
popa
adc
push
ljmp
mov
sarl
jns
jbe
sbb
insb
cmp
scas
ja
sar
jp
sbb
or
ss
or
dec
adc
adc
jo
mov
sarb
dec
pop
pop
movsb
push
cmp
adc
jge
cmpsl
xchg
pop
lods
lock
loopne
data16
test
jmp
push
jae
sti
xor
int
popf
repnz
rorl
jmp
mov
dec
mov
dec
push
or
in
xor
enter
sbb
sub
mov
insw
loope
jno
leave
pop
testl
pop
jmp
mov
aam
or
mov
push
cmp
enter
push
fistpll
inc
clc
xchg
out
cli
cli
mov
pop
sbb
fs
push
cli
jecxz
test
adc
call
fmull
pushf
xor
inc
in
ret
inc
add
sbb
cmp
push
mov
jbe
iret
lret
pusha
inc
dec
ficomps
mov
inc
outsb
dec
push
ss
ret
or
push
or
scas
movsl
movsb
stc
jmp
std
xor
out
sub
cmpsl
add
rolb
mov
mov
iret
rol
and
xchg
insl
lret
inc
arpl
stos
jp
sbb
or
dec
popf
xlat
xlat
xorl
add
das
jo
mov
jmp
addps
lock
rolb
dec
sahf
mov
push
push
mov
cmovge
daa
sub
mov
jne
sbb
stos
xchg
popa
xor
popa
addr16
popf
mov
pop
sbb
xor
inc
mov
aas
and
sbb
xchg
xor
and
sahf
cmp
clc
and
test
push
icebp
js
imul
xchg
sbb
mov
xlat
cmc
mov
or
pop
enter
les
loop
mov
pop
mov
loope
mov
mov
out
and
loop
cmc
and
cmpsl
fidivl
movsl
getsec
or
mov
and
dec
jge
sbb
mov
push
mov
jne
int3
int
mov
scas
data16
loopne
xchg
inc
aam
jmp
cmp
jb
push
stos
sub
stos
sub
sub
dec
fcmovbe
mov
cmpb
inc
cmp
lds
inc
sbb
fldpi
sar
xchg
inc
jne
mov
dec
cli
arpl
and
fs
insb
jb
lahf
lret
xor
pop
decb
push
test
cmp
lcall
or
aas
test
add
or
repz
jno
arpl
lcall
add
cmpsl
mov
jnp
adc
or
inc
inc
push
mov
enter
xchg
push
inc
das
fmull
add
popf
aad
or
dec
icebp
pop
cmc
lret
mov
mov
mov
mov
dec
es
ds
pop
nop
or
adc
ret
cmpsb
insb
outsb
data16
int3
inc
jge
jle
mov
popf
sub
xchg
inc
push
sbb
adc
movl
test
lret
negl
out
fs
popf
and
mov
call
lods
inc
rolb
adc
mov
sbb
mov
rcrb
js
sarb
or
pop
in
subb
test
insl
hlt
int3
jg
sub
popa
test
cmp
bound
sbb
loopne
subl
push
out
mov
mov
xor
or
push
mov
js
bound
imul
adc
mov
aas
inc
mov
pop
aas
je
pop
nop
inc
xor
scas
aas
mov
push
nop
mov
les
iret
sbb
mov
mov
int3
sbb
sbb
mov
rorl
ss
inc
jns
aas
pop
jl
scas
pop
xor
mov
mov
xor
cwtl
push
sbb
jle
mov
mov
add
mov
push
inc
faddp
lahf
sub
pop
stos
test
icebp
roll
iret
repz
and
ljmp
in
dec
shll
dec
das
cli
sti
mov
dec
cmc
sbb
push
ss
out
lods
cmp
andl
add
test
and
push
adc
xlat
imul
mov
int3
xor
inc
lret
push
mov
xchg
cmp
pop
push
cmp
aam
jae
mov
outsb
add
jne
outsb
pcmpgtd
add
sub
inc
negb
mov
into
fmul
adc
ss
sub
dec
stc
repnz
ljmp
xchg
or
sub
orb
shrb
xchg
jae
mov
xor
mov
mov
rcr
adc
stos
and
xchg
gs
outsl
ja
fwait
xor
dec
mov
bound
jae
lea
dec
adc
jp
cmp
jl
xchg
jecxz
int3
or
mov
sahf
push
adc
xchg
mov
loop
jmp
hlt
pop
sub
leave
cmpsb
mov
clc
lret
enter
xchg
cmpsl
sbb
test
or
outsb
xor
mov
into
sbb
mov
push
lods
push
arpl
test
lea
inc
addb
dec
fcoms
xor
mov
ljmp
cmpsl
pop
mov
rorb
ror
and
jbe
stos
lret
inc
push
test
xchg
jge
aas
pop
mov
mov
fs
mov
pop
sahf
aaa
adc
cli
xchg
lds
in
in
clc
out
fdivp
movsb
pop
fidivl
mov
jl
packssdw
mov
hlt
stc
stos
pop
fdivr
jne
push
add
add
cld
cmp
jbe
je
in
push
movsb
das
js
int
jnp
inc
mov
addr16
xor
jmp
popa
ret
data16
jno
popa
cmpb
scas
xor
scas
sub
cmp
sbb
add
adc
jae
sbbl
jmp
mov
cmp
push
out
hlt
jns
or
stos
icebp
push
and
adc
ja,pt
or
sbb
mov
pop
test
movsb
xor
sarb
dec
jb
push
loopne
in
push
insb
xor
arpl
pop
or
adc
lcall
dec
mov
rep
nop
in
data16
mov
push
stos
push
adc
fsubs
push
bound
out
cwtl
fdivl
aas
mov
add
inc
dec
shlb
mov
filds
or
push
pop
add
rcll
enter
call
mov
inc
add
pop
negb
xor
scas
mov
outsb
lock
pop
pushf
jl
imul
adc
outsl
pop
jbe
ficompl
cli
xchg
inc
mov
cmpsl
jmp
repz
cmp
js
push
lret
loopne
add
insl
insl
mov
or
out
pop
loope
sbb
int3
cwtl
xchg
dec
and
pop
ja
jae
mov
and
add
lock
mov
mov
nop
push
jle
and
jae
lock
andb
fists
fisubs
loop
loopne
lods
je
aad
out
lods
and
cltd
iret
int
sahf
push
adc
push
cs
pusha
arpl
mov
out
hlt
faddl
adc
bound
or
test
ljmp
idiv
lahf
inc
push
cmp
lods
cltd
test
shrl
cmp
in
cmc
dec
mov
sub
call
sarb
adc
jno
xchg
int
adc
or
psrad
in
xchg
mov
aam
shlb
ja
push
in
mov
daa
jmp
adc
cltd
jns
cmp
jns
test
ret
jp
cwtl
mov
data16
xor
mov
test
jbe
fcmovnb
inc
push
ja
xchg
jge
mov
cmp
fldl2t
loop
std
js
jg
adc
mov
aad
lret
sbb
jmp
es
jp
dec
mov
push
rcrb
nop
jne
inc
int
jbe
sub
xor
or
out
jbe
jl
int
mov
inc
les
add
out
sbb
adc
cld
jle
mov
xor
sub
adc
xchg
cltd
orl
int3
aad
clc
add
dec
xor
stos
mov
jmp
out
lds
icebp
imul
or
dec
std
mov
ret
dec
mov
scas
mov
mov
pop
push
lods
aam
mov
cltd
cltd
dec
jle
imul
lahf
or
fidivl
cmp
loopne
ss
fstpl
int
lahf
test
clc
int
adc
test
push
add
lods
maskmovq
divl
loope
adc
ret
ljmp
or
out
das
xchg
movsl
sub
or
jl
inc
xorb
fcomip
mov
je
fcmovne
fisttpl
mov
push
shlb
in
das
int3
mov
aam
mov
lds
push
sbb
and
shlb
and
loope
pop
sub
and
mov
rcrl
push
add
arpl
cwtl
mov
jb
popf
addr16
roll
into
scas
aad
jo
add
jecxz
les
pop
cmc
rorb
arpl
jne
scas
cmp
sbb
out
push
mov
push
add
pop
mov
mov
popf
jne
push
scas
ret
xchg
jge
dec
lock
repz
inc
testb
jmp
cli
jo
shll
ja
mov
or
jmp
pop
mov
int3
mov
ret
scas
scas
imul
enter
push
mov
cwtl
aaa
test
mov
ja
incl
div
out
lret
outsb
fs
loope
sub
sbb
lea
mov
dec
dec
xchg
orb
push
add
sbb
push
ljmp
mov
adc
jl
ret
jmp
sbb
dec
add
mov
sbb
pop
xchg
icebp
mov
enter
std
out
nop
rorb
fxch
test
lock
adc
scas
mov
fistpll
adc
jecxz
add
icebp
dec
loopne
jb
test
int3
jb
dec
jp
in
cwtl
mov
push
jbe
xchg
mov
adc
ljmp
js
cmc
in
call
insb
jmp
jno
stos
sub
lock
mov
scas
jle
or
xor
clc
sarl
mov
jl
add
jnp
jg
jecxz
or
shrl
mov
push
imul
stc
inc
push
insb
sub
cmova
fwait
movsb
mov
xlat
movsb
fisubl
pop
test
loop
sub
xchg
cmc
jl
fdivrs
or
enter
inc
stos
jo
xchg
lds
out
push
test
dec
inc
cmp
jb
inc
add
jg
popf
in
mov
ja
cwtl
fnstenv
repnz
dec
cli
call
and
sahf
and
and
stos
iret
and
in
inc
xor
pop
jge
dec
int
addb
sub
jno
push
inc
rorl
dec
mov
out
inc
frstor
cmp
pusha
repz
jmp
pop
cmp
push
xor
xor
sbb
mov
push
in
inc
gs
cwtl
fldcw
sbb
rorb
rcll
iret
add
in
in
inc
inc
scas
std
mov
outsb
test
imul
ja
arpl
in
mov
push
inc
lret
insb
jmp
sbb
pushl
clc
ja
movsl
sbb
cwtl
adc
jle
imul
mov
aad
insl
xchg
lcall
mov
fucom
sub
lods
pop
cmp
loopne
aaa
aam
cmp
add
shrb
lahf
jmp
add
mov
xchg
mov
dec
subb
and
imulb
gs
in
rol
f2xm1
clc
pop
dec
mov
leave
mov
sbbl
stos
dec
sub
shl
jno
inc
push
push
or
test
add
aad
nop
cmp
xchg
jae
xor
push
mov
mov
cmp
xchg
js
scas
push
test
inc
clc
rcrb
add
sbb
ror
xor
or
sub
pop
gs
xor
int3
pop
repnz
cmp
mov
mov
mov
int3
or
shl
scas
jbe
and
jp
or
pop
sub
jnp
pop
push
jle
push
dec
mov
fimull
in
mov
add
imul
xor
into
dec
dec
lea
push
push
das
xchg
mov
mov
int
cmc
lds
loop
inc
or
dec
shll
ret
lret
xor
rep
fildl
subb
xchg
sub
stc
mov
mov
xchg
iret
ljmp
dec
and
adc
mov
pop
push
push
dec
pusha
dec
push
sbb
xchg
mov
xor
rcrb
jns
dec
or
cmp
adc
das
cwtl
adc
mov
mov
mov
xchg
sti
ret
imul
mov
and
cmpsl
xchg
mul
jb
test
or
aad
mov
loop
outsb
add
inc
stc
stos
add
test
add
mov
lods
dec
sub
mov
ds
xchg
shrl
test
movb
mov
mov
pop
cwtl
jb
aas
cmc
push
jne
push
mov
dec
jns
lcall
lods
fwait
push
inc
stos
fs
push
sub
jb
sub
inc
test
iret
enter
imul
xor
imul
jmp
lret
test
jbe
jle
sbb
cmp
sahf
imul
rcll
test
repz
and
into
insb
stos
cld
movsb
dec
shr
decl
outsl
jle
jecxz
cld
fimuls
xorl
xor
lea
and
fstpt
lret
push
push
outsb
mov
das
add
lret
aad
out
ja
sbb
enter
sti
mov
push
jne
pop
aaa
sub
mov
pop
out
sbb
sbb
add
push
push
lret
call
mov
notl
mov
ss
adc
adc
xchg
jno
and
hlt
mov
mov
pusha
dec
jbe
cld
lret
or
outsl
in
pop
inc
xchg
xchg
or
adcl
xchg
mov
subb
dec
push
add
push
lcall
lahf
dec
inc
xchg
jge
out
xchg
mov
notb
xchg
push
push
ror
sub
inc
pop
fucom
dec
data16
mov
dec
mov
ret
clc
mov
insl
or
mov
push
movsl
sub
into
fwait
int3
push
jns
push
xor
mov
push
or
popf
aam
jge
xchg
test
data16
dec
mov
inc
out
inc
lock
mov
sbb
loopne
inc
leave
mov
insb
xor
int3
scas
push
lahf
xorl
jbe
in
clc
mov
dec
nop
push
cmp
xlat
lods
pop
popf
ds
jo
push
cmc
sbb
pop
xor
movsb
mov
test
mov
cmp
popf
or
shll
es
jg
repz
out
ljmp
cltd
jp
xor
sub
popf
jg
aaa
rcr
mov
jbe
js
insl
enter
push
cmp
jne
jnp
mov
jns
sbb
jg
pop
fsubrl
aam
in
sti
pop
daa
mov
shr
repz
push
push
pop
out
mov
push
into
xchg
fwait
aas
dec
stc
cmpsb
pop
xor
pop
movsb
push
outsb
pop
cs
loope
xchg
mov
mov
jns
ss
mov
pop
sub
cmp
test
cmpl
xchg
and
mov
xchg
es
je
cwtl
enter
push
ss
out
pusha
jl
sbb
push
and
mov
lods
insb
adc
sbb
sub
pop
and
push
mov
push
jae
dec
jl
jp
out
inc
ret
lret
shll
sub
das
pop
nop
scas
or
ret
dec
std
pop
inc
adcl
or
add
mov
sub
repnz
rcrl
add
inc
faddl
inc
out
mov
lahf
xchg
outsl
jns
push
xor
mov
push
mov
adc
flds
xor
shrb
pop
mov
scas
mov
push
in
mov
mov
xchg
insl
insb
cmp
mov
sarb
aam
push
sub
push
int
and
test
dec
and
or
or
adc
addr16
in
out
pop
popf
and
lods
cmp
test
and
aas
ja
mov
add
lock
pop
mov
scas
scas
ds
std
xor
std
xchg
les
cmp
push
notb
add
push
and
add
and
les
xlat
jbe
push
cs
mov
add
in
ret
inc
dec
inc
std
dec
lret
loope
dec
mov
add
int
adc
jg
pop
aaa
std
andb
outsb
cmpsl
dec
sbb
js
sub
mov
in
imul
lret
mov
cmp
frstor
inc
dec
mov
daa
xchg
imul
inc
and
imul
pop
mov
pop
lods
cmp
bnd
test
add
xor
mov
fldenv
and
imul
jne
mov
cmc
cmc
mov
push
jp
popa
jg
xor
mov
movsl
inc
sbb
cwtl
dec
cmp
ljmp
xchg
in
cld
cmp
mov
mov
inc
movsb
xor
je
iret
sub
cmpsb
xchg
in
movsl
fists
repnz
inc
pop
jge
fscale
iret
or
call
push
or
bnd
jo
mov
push
mov
jbe
bound
or
stos
sbb
movsb
push
enter
outsl
fisttps
addb
jbe
lahf
ja
push
cmc
mov
stos
or
xor
jno
pop
mov
ret
xchg
sahf
std
mov
mulb
cmp
bound
sti
js
mov
pop
push
cmp
lret
xor
mov
xor
mov
ss
fxsave
mov
dec
jno
adc
repnz
repz
fistpl
stos
push
mov
adcb
pop
inc
push
push
inc
test
and
or
ret
pop
test
bnd
mov
mov
sarb
movb
fbstp
push
popf
pop
sub
add
in
sub
sti
movsb
fnstenv
push
and
cmp
dec
movb
jg
mov
add
xchg
lock
pop
dec
mov
adc
call
and
clc
xchg
into
mov
movsl
dec
push
jb
cmpsb
in
lcall
push
mov
sbb
xchg
inc
roll
outsb
lock
aaa
xor
inc
xor
sub
mov
out
imul
add
call
mov
cmpl
stos
addl
or
fidivs
jle
mov
inc
fnstenv
mov
and
hlt
mov
or
movsl
sbb
ret
push
xor
add
cli
subl
call
inc
push
pop
mov
roll
push
dec
inc
adc
mov
outsl
or
push
ss
ret
cld
cmc
dec
sbb
ss
loope
and
add
push
insb
in
in
iret
or
push
ljmp
push
imul
stos
aaa
mov
outsl
push
push
hlt
xor
subl
sub
sbb
pop
call
sub
scas
and
push
daa
or
or
sub
adc
enter
popa
cli
xor
push
test
stos
addb
icebp
mov
pop
in
and
leave
mov
and
and
ds
xlat
std
jl
stos
stos
jmp
int
jmp
das
add
sbb
jge
sub
stos
cmovne
mull
test
push
inc
adc
and
push
jmp
repnz
scas
orb
cmp
sbb
mov
xor
mov
adc
jae
sbb
mov
push
ds
mov
das
add
stos
mov
clc
or
clc
inc
aaa
comiss
sti
fsubrs
mov
les
mov
sbb
and
pop
cltd
imul
sbb
aam
loopne
out
jbe
jmp
sarb
push
nop
xchg
adc
and
mulb
ds
cmp
std
lret
pop
jmp
mov
cld
fmulp
fs
and
jo
pop
movsl
jns
push
or
dec
in
cmpsl
jo
ret
js
mov
jbe
sub
rcr
dec
or
das
cli
jle
int
mov
arpl
xchg
sbb
cld
jne
data16
rclb
cmpsl
mov
test
bound
mov
mov
mov
in
or
ficomps
call
out
mov
or
and
mov
cmpsl
pushf
sub
movsb
imul
add
or
repz
or
xor
rorl
fxch
popa
test
xchg
lea
sbb
ret
xchg
pcmpeqd
das
sbbl
push
mov
scas
sub
int
jns
xchg
dec
test
aam
sti
or
pop
clc
movsb
addr16
imul
pop
scas
in
and
or
cltd
cwtl
fsubl
push
call
add
popa
xchg
adc
pop
lods
mov
rclb
pop
ret
or
xor
shl
jp
flds
scas
mov
mov
fildll
stos
inc
fwait
cmp
mov
add
mov
xacquire
pusha
jbe
out
xor
daa
mov
fsub
icebp
xor
outsl
inc
loopne
aas
icebp
adc
pushf
call
fcomps
bound
add
jns
sbb
jb
jb
jo
pop
cmpsl
pop
xor
dec
dec
in
enter
lock
nop
sbb
jg
icebp
mov
in
jp
adc
sarl
ficomps
sub
xchg
pop
jne
cmpsl
shll
push
or
sbb
shl
mov
fmulp
xchg
movsb
jle
ds
lods
test
and
cmp
cwtl
imul
jle
je
cmp
jno
push
dec
push
xor
or
push
fisubl
xchg
cmp
fnstcw
mov
js
jmp
cwtl
and
sub
adc
adc
push
or
das
mov
or
je
cld
sub
pop
fimull
sbb
rcrl
cmp
test
test
or
sti
cltd
call
popf
sbbl
lret
out
sub
and
stc
adc
and
mov
sti
inc
mov
lock
jmp
xor
lock
and
push
mov
mov
pop
push
cld
mov
cmp
mov
je
xorb
daa
fwait
dec
ret
dec
sub
mov
call
sbb
or
lds
mov
leave
jle
push
adc
push
push
mov
cld
sub
loop
cmpsb
add
jno
int
cwtl
stc
jp
arpl
adc
cmp
int3
mov
push
lods
mov
outsl
inc
stc
pop
pop
test
and
push
jmp
mov
mov
sar
das
arpl
test
in
movsb
mov
ret
aad
mov
or
es
xchg
pusha
insb
cmc
jns
out
out
ja
dec
mov
mov
insl
outsb
mov
sbb
aad
dec
sub
add
sub
pop
pusha
lds
push
xchg
xchg
in
cld
cmc
push
lret
and
dec
cmp
lea
mov
bound
insl
inc
and
arpl
xchg
dec
and
jo
xor
cmp
jge
pop
cli
jns
adc
add
xor
or
and
push
pop
push
cmpsb
scas
lret
mov
stos
lds
loop
pushl
test
xchg
sbb
js
insb
cltd
sbb
nop
mov
dec
in
aam
insb
jecxz
cmpsl
test
sbb
dec
ret
fcompl
sub
jno
andl
and
mov
pop
and
clc
out
das
adc
insl
aad
fwait
lret
out
test
test
ds
js
adc
push
aad
outsl
dec
and
pop
out
xlat
push
mov
mov
lock
or
inc
or
push
clc
add
shlb
repz
imull
xchg
sbb
mov
pushf
out
adc
xchg
mov
adc
std
int3
fwait
and
and
cmp
loop
adc
dec
leave
pusha
and
mov
mov
push
addr16
aas
mov
or
push
cmp
or
or
adc
adc
sub
adc
jbe
gs
push
ja
test
xchg
inc
imul
mov
xor
ds
out
mov
xor
add
ja
jb
mov
cs
bnd
xor
dec
jbe
cmp
pop
test
xlat
xor
bound
mov
insl
or
loop
repnz
sahf
aad
js
push
and
fwait
xchg
adc
sarb
gs
sbb
lods
sarl
pop
mov
test
in
xchg
loopne
sarl
dec
ljmp
mov
cmovae
inc
insb
clc
ficomps
mov
rcl
outsb
cmpsb
adc
sbb
jecxz
cmc
loopne
inc
adc
sbb
or
jne
add
mov
push
rorb
sub
loope
or
sub
lret
xor
jbe
mov
and
or
aaa
push
sti
pop
in
jne
fwait
pop
mov
mov
pusha
dec
mov
addr16
int3
mov
aaa
shlb
stc
orl
bound
aad
jge
dec
js,pn
lds
sub
fidivl
lods
sub
rol
sub
leave
imul
call
add
mov
ret
cli
and
jb
stc
adc
les
cmp
shrl
loope
sarb
fwait
mov
gs
call
ds
mov
adc
daa
dec
dec
mov
sarl
pop
jge
pushf
add
addb
pop
rclb
xor
mov
mov
hlt
cmp
sahf
or
add
hlt
jnp
je
rcr
in
mov
mov
lods
mov
rcrl
lods
inc
negb
jmp
bound
pusha
jbe
movb
lds
aas
addb
mov
adc
rorb
jno
pop
inc
cwtl
jns
inc
sub
xchg
dec
sub
push
sbb
cmpsb
insl
gs
adc
fistpl
jp
jge
sub
jns
xlat
pop
movsb
ja
aad
repz
imul
xor
or
adc
push
adc
fs
js
or
mov
mov
fimuls
std
mov
shl
dec
pop
or
xor
sub
leave
or
lods
pop
femms
and
mov
movsl
sub
add
adc
jg
rcll
xchg
aaa
add
sub
mov
rcll
leave
add
gs
xor
nop
daa
sbb
mov
ljmp
test
mov
repz
addl
mov
aas
cwtl
push
fs
mov
insl
jecxz
mov
test
lret
mov
adc
aam
shrb
ss
in
popa
jbe
insl
lahf
inc
jp
filds
add
jno
stos
mov
dec
adc
cwtl
mov
xor
sti
sub
xlat
xor
pop
cmp
dec
inc
aam
xlat
cmp
mov
jl
test
outsl
fnsave
call
add
cmp
push
mov
sub
dec
xor
outsb
js
ret
dec
mov
nop
mov
inc
pop
mov
adc
jmp
xchg
jno
pushf
loopne
pushf
inc
and
mov
or
xor
jo
adc
push
lods
fdivs
movsb
loope
stos
loope
imull
lods
pop
cmp
test
pop
jnp
filds
sub
js
mov
stos
iret
jecxz
pushf
adc
mov
lret
add
outsb
adc
mov
adc
cmp
or
or
adc
nop
movsl
pop
mov
mov
outsl
dec
ja
xchg
aaa
cltd
ljmp
xchg
cwtl
xchg
cmp
shll
insb
pop
xor
aas
fidivs
add
inc
jo
ja
mov
push
and
mov
add
mov
std
addr16
lods
ss
or
add
push
push
stos
jl
shl
scas
pop
sahf
sub
rol
dec
pop
aad
sub
in
cmp
jns
sub
data16
mov
inc
ret
cmp
test
fwait
push
orb
cmp
pop
mov
mov
or
loopne
xor
push
ljmp
mov
mov
test
push
cmp
iret
test
call
and
lods
jecxz
mov
cli
inc
enter
add
mov
push
lods
xor
out
xchg
repz
sub
push
add
lods
dec
jns
cld
in
inc
push
add
mov
lret
enter
lret
dec
pop
fs
aam
ds
jle
in
outsl
push
sbb
adc
push
mov
aas
fistps
xchg
sbb
popf
jmp
pop
jns
xchg
adc
sbb
dec
add
adc
lret
push
xor
mov
outsl
push
call
jmp
or
int
aas
push
jg
ljmp
sub
notb
test
shll
jno
ret
dec
jl
inc
loopne
pop
sbb
test
pop
dec
shr
outsb
xchg
daa
aam
cmp
int
lock
dec
cmp
mov
movsl
pop
fwait
push
ja
repz
aas
mov
cmpsb
mov
fnsave
inc
sti
stc
ds
fs
sub
addl
jp
shr
bound
aaa
xchg
sbb
pop
mov
das
test
inc
fs
mov
jne
sub
fstl
xchg
jl
loop
push
fsubr
mov
jns
pop
or
and
ss
int3
out
sub
aas
rclb
xchg
sbb
in
ss
pushf
aaa
sbb
mov
pop
pop
aaa
mov
lahf
mov
scas
xor
imulb
xor
nop
mov
jns
stos
test
dec
xor
shll
jmp
in
hlt
lds
scas
jne
hlt
imul
imull
test
cwtl
js
pop
jecxz
leave
or
jle
outsl
out
arpl
aad
mov
fisubrl
loope
clc
adc
pop
ret
xchg
arpl
testb
mov
fmull
in
adc
pop
leave
jae
aad
xor
xorb
pop
shlb
idivb
sbb
pop
lret
or
ss
sahf
cmp
ja
lea
adcb
add
aad
mov
cs
pop
lret
xchg
fistps
insb
sti
push
repz
clc
mov
in
cli
dec
iret
or
inc
cmove
inc
jmp
aam
inc
add
mov
or
push
xchg
lret
and
adc
mov
pop
imul
pop
add
imul
jae
shr
int3
dec
add
mov
push
movsb
push
std
inc
sub
dec
push
mov
scas
adc
dec
dec
mov
mov
repz
xor
in
ja
shlb
pop
jmp
fistps
or
ret
stos
jbe
xchg
lea
or
xchg
addl
sub
inc
or
leave
test
sub
jb
pop
add
enter
mov
pusha
cltd
insl
loop
loopne
xor
push
ficomps
add
push
jecxz
push
test
cmp
adc
jge
ss
test
or
push
and
push
adc
cmp
clc
shlb
stos
mov
mov
pop
cmc
push
push
icebp
cltd
dec
jbe
push
sub
nop
lock
xor
xchg
cmp
mov
push
pop
gs
jnp
jg
xchg
js
ds
xor
mov
imul
or
roll
dec
push
js
pop
roll
mov
stos
jmp
add
outsb
in
push
jns
pop
push
loop
or
imul
mov
mov
or
push
js
jo
das
lods
xchg
and
xchg
or
or
sub
mov
cmp
pop
push
push
cmp
sbb
sahf
add
mov
sbb
cmp
test
cmp
fwait
mov
xorb
mov
mov
xchg
mov
or
push
std
jle
sarb
cmpsl
pop
pop
rolb
int
fdivr
outsl
adc
xor
sbb
push
mov
push
or
lret
out
mov
outsl
inc
out
add
sti
cltd
ret
add
dec
arpl
xlat
pop
cmp
mov
xor
mov
int3
push
jmp
push
scas
dec
sbb
addr16
cmp
adc
or
push
outsb
mov
stos
push
loop
lcall
in
in
add
jbe
fs
stc
pop
mov
mov
mov
aad
mov
pop
jl,pt
pop
shll
mov
xor
ror
cmp
sbb
mov
sbb
jo
pop
sub
mov
test
mov
fucomi
and
add
dec
dec
jbe
lock
dec
fcompl
aas
popf
jp
xchg
scas
xchg
mov
adc
jg,pn
mov
and
repnz
rcl
repnz
hlt
sbb
sbb
frstor
iret
xchg
lahf
fiaddl
adc
pop
dec
notb
push
outsb
mov
push
cmp
jae
sbb
mov
or
add
fimuls
aam
xchg
nop
insb
clc
iret
scas
and
add
aas
orb
pop
sub
out
movsl
jl
inc
mov
or
inc
sarb
dec
fs
int3
xlat
cmp
lcall
sub
xor
dec
loope
data16
sub
inc
mov
pop
dec
inc
shlb
fistps
lahf
add
jg
sbbl
std
jmp
and
xor
xchg
popa
nop
sahf
mov
lea
or
jns
cmp
or
loope
inc
jns
or
xor
pop
imul
mov
add
daa
xor
xor
mov
adc
jmp
adc
adc
mov
pop
sub
cmpsl
sbb
xchg
sti
cs
inc
pusha
clc
mov
jmp
int3
dec
int3
mov
push
jne
in
jp
pop
jnp
or
ficompl
pop
jb
mov
ljmp
push
push
orl
adc
fs
push
pusha
dec
push
add
jns
lea
mov
pop
lcall
notl
hlt
pop
decb
jmp
cs
daa
sbb
adc
adc
push
mov
cmp
adc
pushf
push
mov
push
xchg
loope
inc
fildll
adc
test
xchg
mov
jecxz
mov
pop
mov
fsub
loop
movsb
cmp
loopne
push
jb
or
sub
movb
sbb
lods
or
int3
jl
pop
aad
aad
jno
or
ret
add
leave
lahf
rcrb
inc
leave
in
and
lret
rcrl
xchg
cmp
out
arpl
lods
enter
and
pusha
out
cmpsb
inc
mov
shrb
jno
scas
jl
dec
add
data16
pop
hlt
cmp
mov
testb
xchg
out
lret
sub
adc
data16
adc
mov
cld
push
xorb
sbb
and
pop
dec
cmc
in
pop
jg
insb
cmc
addr16
fsubrl
dec
out
daa
iret
nop
push
mov
or
test
adc
adc
and
dec
loop
ljmp
push
and
hlt
sub
call
pop
test
pop
pop
notb
mov
xor
adc
jno
pop
ret
repz
mov
loop
mov
sub
ss
enter
pusha
push
xor
cmpsl
inc
mov
arpl
push
or
mov
jae
cld
sub
fnsave
mov
mov
xlat
mov
xor
in
ret
les
cli
jp
test
stos
fldcw
bound
mov
repnz
popf
sub
xchg
cmp
dec
aas
dec
xor
repnz
out
ret
mov
test
push
mov
xchg
je
add
and
outsb
pop
xchg
jne
jne
sbb
cwtl
or
xchg
jb
data16
mov
xor
dec
mov
xlat
inc
iret
mov
sub
and
outsb
imulb
xor
push
mov
push
sbb
sub
push
xchg
addl
mov
cmp
cltd
in
fstpt
dec
add
es
ss
xor
mov
mov
test
xchg
mov
andl
inc
dec
imul
inc
cmc
mov
or
push
hlt
and
add
cmpsb
insl
sub
mov
rol
lret
scas
xor
and
xor
xchg
inc
outsb
in
imul
jp
mov
xchg
add
repnz
jmp
fcmovnb
jl
mov
pop
cmp
pop
jns
int
cmp
dec
inc
or
pop
pop
mov
push
lahf
mov
es
adcl
outsl
inc
dec
fs
add
cld
repnz
pop
xor
sbb
aam
push
push
mov
adc
push
aam
or
push
fcomip
cmp
pop
xchg
sbb
cmp
push
jg
jecxz
mov
stos
lcall
addr16
push
popa
add
xchg
pop
hlt
pop
fldcw
stos
rolb
mov
fwait
pop
dec
fildl
arpl
in
out
clc
outsb
fmull
xchg
mov
and
test
jmp
sbb
mov
jnp
inc
mov
fdivp
sub
push
xor
xchg
leave
push
fldl
xor
cmpsb
in
xchg
out
shrb
cmpsl
insb
mov
icebp
lret
iret
adc
adc
jae
xchg
les
xor
mov
cmpsl
xor
mov
movsb
sub
push
cwtl
daa
cmc
pop
andl
xorl
cwtl
xor
fisttps
push
repnz
pop
sti
push
test
sub
xchg
jge
pop
push
add
mov
bound
movb
cmp
dec
icebp
xchg
mov
ljmp
out
mov
cmc
hlt
out
jp
into
mov
cmp
adc
fwait
ret
pop
sbb
daa
loopne
inc
add
pop
mov
mov
les
sub
in
and
leave
in
xor
mov
cli
aad
mov
adc
fdiv
and
xor
mov
and
or
and
stc
int
push
mov
push
cs
mov
mov
lds
ret
xchg
dec
ds
push
inc
push
push
xor
test
enter
notl
and
andb
mov
pop
lcall
pop
push
out
daa
mov
add
pushl
shll
fwait
ss
mov
daa
pop
or
push
jmp
cmc
xchg
dec
ret
mov
popa
and
xchg
fwait
mov
jp
data16
mov
jae
cmc
or
sbb
sub
pop
mov
out
jnp
shlb
mov
xor
or
fmull
cmpb
loopne
lods
je
and
icebp
fisttpl
pop
mov
cs
cmp
stos
in
sbb
mov
mov
jecxz
jl
rcll
movb
dec
movhps
das
add
shlb
add
and
lds
sbb
lods
pop
test
scas
adc
loope
outsb
clc
mov
out
test
stos
in
pop
jae
gs
lods
scas
lock
or
and
push
fst
popf
stos
dec
sbb
xor
inc
push
adc
iret
int
sub
adc
add
sub
in
sub
mov
loop
mov
les
push
jnp
clc
sub
out
loop
or
out
fs
push
or
movsl
cs
repz
pop
or
jge
add
push
lods
adcl
ljmp
fwait
bound
repnz
jo
or
lods
add
fld
adcb
and
lret
sbb
cmp
sbb
out
lds
add
jbe
pop
xor
in
xor
jmp
add
cld
out
xor
lea
inc
pop
mov
stos
pop
sbb
or
push
scas
jo
inc
lahf
out
das
outsl
stos
std
cmc
fsubrp
dec
pop
roll
add
dec
aam
mov
ja
jl
sbb
push
pop
cmpb
sti
out
push
mov
jns
xorl
adc
push
in
cwtl
jno,pt
fists
jo
dec
push
orb
sbb
jbe
out
cmp
in
cmc
and
ret
stc
adc
lret
jecxz
stos
dec
mov
adc
xchg
adc
or
into
fxch
scas
push
pop
jmp
ljmp
push
push
cmpsl
ret
fdivs
icebp
mov
inc
fdivrs
push
clc
or
sub
mov
in
push
das
xor
xor
pop
ss
xor
lds
int3
or
or
outsl
adcb
es
mov
daa
mov
or
rcl
data16
iret
pinsrw
mov
dec
pop
rsm
mov
push
xchg
mov
mov
mov
popf
iret
inc
fwait
inc
mov
mov
add
in
lea
rcll
cltd
pop
cltd
cmp
sbb
lret
repz
inc
test
and
cs
or
arpl
inc
insb
xchg
iret
stc
pop
cmp
xchg
mull
pop
mov
addr16
or
test
lds
test
je
test
pop
inc
xchg
pop
push
dec
cltd
push
pop
mov
inc
push
mov
scas
shrl
xchg
arpl
stc
jae
fisubrl
lahf
loope
add
fs
jno
adc
roll
jle
xlat
cmpsb
cltd
pop
sarb
cmpb
adc
or
lahf
int
insb
sub
sbb
xchg
enter
in
push
sti
in
addr16
out
out
insl
call
jno
mov
xor
leave
pop
adcl
in
pop
adc
inc
daa
movsb
fistps
lret
dec
lcall
out
pop
inc
and
jb
stc
loope
mov
pop
lret
lods
xchg
into
imul
jnp
xchg
jmp
sbb
loope
cmp
cmpsb
mov
cmp
mov
jnp
mov
inc
mov
dec
jbe
jns
sbb
inc
xchg
mov
and
mov
and
test
scas
pop
xchg
inc
inc
sub
push
adc
adc
dec
test
cltd
fs
dec
cs
mov
cmp
in
stos
scas
cmp
lcall
jge
imul
or
cmp
cmp
in
push
outsl
jmp
and
or
cmovb
xchg
arpl
dec
push
xchg
jmp
je
roll
imul
jg
aad
cmc
or
mov
pop
out
adc
jno
outsb
jb
rcrb
mov
ret
lock
sub
stc
icebp
xchg
cltd
movzbl
popa
adc
gs
xchg
not
push
adc
insl
jnp
push
and
outsb
movsb
out
jae
dec
ret
xchg
arpl
adc
lahf
sti
pusha
xchg
mov
pop
mov
dec
add
pop
clc
mov
add
out
les
jb
inc
pop
cld
scas
mov
jb
mov
ds
adc
ja
mov
in
inc
rcrb
in
push
pop
mov
inc
mov
imul
ret
push
ret
rcll
adc
pop
mov
ljmp
inc
jmp
inc
sub
sarl
inc
cmp
or
dec
shrd
pop
sub
cmp
xchg
pop
jb
sbb
enter
jns
mov
lcall
jmp
addr16
in
xchg
iret
in
cmpsl
adc
sub
loopnew
shlb
mov
dec
add
stc
and
pop
or
daa
cmc
pop
inc
sbb
jg
das
push
sarl
mov
addb
mov
call
fisubrs
into
sahf
adc
mov
je
in
out
jecxz
dec
dec
xor
mov
pop
jb
fcmovnb
pop
dec
mov
in
insb
mov
mov
push
movsl
inc
mov
cltd
std
sub
ss
movb
push
xchg
es
jno
jge
lds
or
insb
loop
cmpsl
test
testb
sub
mov
xlat
js
ret
repnz
pusha
dec
lds
cmc
add
inc
sub
loopne
aaa
cwtl
rclb
ds
mov
aaa
lea
sbb
add
loop
adc
lea
scas
or
lahf
or
mov
out
add
jge
in
dec
sahf
push
sbb
add
adc
leave
push
mov
hlt
lahf
add
leave
push
push
test
clc
gs
mov
mov
mov
cmp
iret
in
das
faddl
jmp
cmp
adcb
es
notb
pushf
pop
sub
push
aas
iret
sub
aad
add
arpl
inc
aas
mov
sbb
fcmovnu
add
in
push
ljmp
mov
std
cmp
jge
jno
pop
pop
xor
jo
ja
nop
bound
aaa
je
jne
xor
imul
sub
lds
sbb
stos
jecxz
adc
mov
popf
and
orl
sbb
std
loope
mov
mov
cmp
jae
insl
pop
int
inc
xchg
or
cmp
insl
andps
lret
lahf
insb
fwait
inc
mov
in
or
je
mov
sub
add
pop
out
xchg
and
int3
add
fcmovnbe
fs
not
repz
test
pop
pop
pop
notl
sub
into
loop
jp
inc
arpl
outsb
mov
sub
adc
or
dec
add
mov
xor
jmp
int3
mov
call
movsb
sbb
sbb
jle
test
cmp
aaa
add
sbb
ljmp
test
in
sbb
inc
je
imul
rclb
cmc
adcb
mov
adc
sub
hlt
mov
add
adc
adcb
adc
popf
mov
fcoml
jno
popa
pop
imul
js
jle
xor
push
mov
push
sbb
int
scas
stos
movsl
inc
bound
scas
pushf
push
movsb
cltd
add
pusha
in
scas
sbb
inc
cmpsl
push
les
stos
and
pop
insl
das
mov
gs
adc
push
push
sbb
test
adc
cs
dec
sub
in
out
addl
push
push
dec
ret
lods
or
dec
push
pusha
addr16
jecxz
subb
jo
das
repnz
outsl
out
or
test
adc
dec
xchg
popa
fadd
jns
add
mov
adc
jge
add
repnz
inc
es
sub
add
pop
cli
repnz
inc
xchg
cmp
in
adc
cmp
and
loope
aam
dec
and
push
push
in
jge
call
pop
mov
sub
inc
insb
xor
lcall
dec
mov
pop
in
mov
sub
outsl
pop
cmp
mov
push
fdivp
dec
push
mov
mov
pushf
jmp
adc
pop
push
xchg
loope
cld
or
sbb
int3
mov
dec
dec
cld
into
push
inc
and
popf
mov
stos
adc
adc
pop
jns
pop
daa
movsb
mov
pop
sbb
fsts
lds
mov
sahf
cmp
mov
add
mov
add
sbb
mov
xor
lahf
jae
fisttpll
adc
jae
cmp
mov
cli
xlat
fdivr
in
or
roll
cli
stos
sub
cmp
cmp
jnp
mov
adc
xor
inc
adc
mov
shrl
pop
in
addr16
ret
xlat
mov
sbb
push
pop
and
nop
jb
dec
mov
jmp
add
aam
lods
sbb
inc
test
sub
and
xchg
push
lods
push
xor
and
pop
cmpl
pop
aad
sub
or
shll
sub
data16
std
push
mov
and
mov
filds
test
outsl
and
shl
mov
in
loopne
xchg
sub
std
enter
jnp
inc
ficoml
stc
mov
lock
lcall
and
lock
push
cltd
jmp
inc
cltd
pop
sbb
popa
add
cmc
pop
jae
outsl
lods
test
leave
lret
js
sub
mov
lea
sbb
ljmp
jno
xchg
outsb
cmp
mov
push
fcomps
insl
xor
push
pop
imull
adc
mov
lds
cmp
mov
or
push
fsub
hlt
test
inc
inc
sti
rcll
das
imul
gs
dec
dec
repz
jg
pop
pusha
dec
pop
insl
je
adc
mov
xlat
hlt
dec
frstor
push
or
pcmpeqd
pop
in
push
push
cwtl
dec
mov
or
into
jnp
cmpsb
push
pop
ja
stc
xchg
mov
fldenv
push
into
lea
in
pop
test
and
sub
or
mov
ret
loop
pop
dec
jbe
inc
jl
adc
cmpsl
pop
loopne
add
mov
fwait
sarl
dec
cli
fcomip
loope
aad
push
lock
mov
xchg
aad
pop
jb
in
sbb
fbstp
inc
adc
jae
mov
scas
outsb
rclb
movsl
cmp
lcall
jmp
pop
push
sub
jl
pop
aad
xchg
xor
fcmove
out
sahf
aaa
jbe
lods
cld
cwtl
and
les
loop
aad
stc
push
mov
mov
test
repz
and
dec
add
aad
icebp
xor
fs
fiadds
and
test
dec
ret
mov
pop
mov
pop
add
push
es
mov
int
test
xor
push
outsb
es
es
xor
cmp
mov
jno
int3
cltd
fbstp
sub
mov
cmp
sub
add
out
push
in
gs
test
xlat
inc
xor
loopne
and
and
sahf
popa
imul
ficomps
cld
lret
jns
xchg
inc
sub
in
xchg
xor
mov
mov
mov
pop
stc
ss
ficoml
sbb
push
mov
cmpsb
dec
add
pop
sbb
ljmp
mov
mov
lock
aad
lret
xor
sbb
pushw
shlb
fst
dec
sbb
jb
or
add
add
repz
adc
add
or
fs
xchg
test
lds
imul
ror
test
sahf
std
das
test
or
scas
add
sbb
imull
jo
pushf
cmpsb
ss
jle
xor
push
cmp
dec
addr16
mov
push
and
xor
cmp
imul
scas
out
pcmpeqw
movsl
popw
mov
jge
jle
pop
cmp
and
fisttpl
cmp
pushf
insl
int
int
sti
pop
cli
push
mov
ficomps
nop
jae
out
cmp
sbb
mov
sub
ja
fisttps
sub
cmp
out
movsl
sub
xlat
jae
pop
dec
push
sbb
lds
xchg
int
push
cs
dec
mov
mov
sbb
mov
jnp
out
bound
push
loop
sbb
hlt
jp
lods
push
loop
outsb
sti
rcll
dec
add
hlt
mov
pop
in
je
and
push
jg
add
cmpsl
inc
sbb
jmp
push
push
sbb
pop
imul
inc
inc
cmpb
xchg
cwtl
mov
inc
dec
xchg
mov
adc
xchg
int3
mov
sbb
ret
add
fwait
sbb
data16
movsb
dec
xchg
lcall
imul
das
loopne
mov
outsb
outsl
add
imul
lds
out
add
adc
stos
or
mov
in
fisubl
or
lds
int3
ss
lret
aas
sbb
adc
in
faddp
xchg
inc
lock
cs
cld
mov
xchg
jns
in
inc
jp
jmp
or
sbb
sbb
pop
adc
sub
mov
sti
ret
in
in
dec
cltd
push
dec
outsb
xor
mov
ss
sbb
jmp
lods
std
xor
push
push
mov
dec
testl
cli
cld
mov
enter
jle
std
fiaddl
or
ret
inc
xor
iret
aaa
sub
in
rorl
mov
jle
setne
mov
hlt
mov
add
fwait
adc
shlb
dec
dec
xchg
xor
push
test
das
or
jnp
pop
lret
fdivrl
in
or
es
xor
jnp
jge
dec
xchg
andb
jle
andl
jne
cmp
pop
inc
int
cmp
ja
aas
xor
fcmovb
aaa
int3
adc
pushf
lods
xchg
out
lea
aas
loop
repz
push
mov
daa
adc
andl
xchg
pop
adc
in
shlb
xchg
in
or
jns
loop
stc
pop
mov
or
daa
inc
dec
adc
xlat
adc
sub
cmp
xchg
mov
in
jbe
xchg
movsw
pop
loop
adc
icebp
sub
call
fldl
jmp
mov
xchg
iret
stos
add
inc
jnp
xchg
jae
and
aad
lds
mov
jecxz
mov
gs
imul
movsb
gs
cmp
stos
push
in
popa
cwtl
inc
adc
add
xor
sub
insl
sub
and
stos
adc
cld
xor
dec
or
cmp
leave
mov
scas
rol
push
dec
bound
pop
mov
pxor
dec
mov
push
sbb
ja
xor
js
sti
adc
neg
sbb
arpl
ja
clc
rorl
out
incb
jecxz
inc
mov
dec
mov
cmc
rorb
ret
call
jne
pop
sub
cmp
or
mov
test
stos
cltd
out
xchg
ficoms
and
stos
cltd
mov
test
or
in
adc
jae
add
lds
sub
fildl
push
pop
pop
and
clc
sbb
push
das
sbb
jae
mov
out
bound
dec
push
or
push
in
hlt
loopne
ss
imul
cmp
lods
and
aad
in
push
dec
and
and
int3
insl
mov
scas
andb
dec
negl
add
popf
dec
inc
ret
movsl
dec
nop
scas
xlat
cmp
inc
sbb
rolb
sbb
std
jne
js
jno
mov
stos
dec
xchg
add
sbb
cmp
xchg
daa
leave
xchg
mov
cli
jmp
or
and
imul
jl
and
xchg
pop
outsb
lods
leave
into
jns
insl
mov
std
fwait
inc
cmc
push
sbb
repz
mov
shl
jne
sub
imul
dec
pop
lock
mov
jmp
ja
rcrl
mov
pop
mov
cmp
push
jne
dec
inc
sbb
or
xor
xor
add
mov
add
mov
fucomip
sub
stc
leave
add
outsb
pop
in
out
pushf
dec
cmp
lcall
js
xchg
inc
add
daa
jmp
movsb
icebp
rcr
daa
sti
cmc
jb
inc
and
fadd
mov
xor
mov
jo
repz
jne
mov
cmp
inc
xor
gs
test
adc
mov
and
sbb
cs
mov
mov
sub
stos
rcr
addr16
mov
jb
lods
adc
int
push
loope
inc
sbb
rorb
test
sub
std
cmp
mov
mov
rcr
mov
int3
sub
fcmovu
sahf
xchg
repz
out
stos
lods
dec
mov
xor
stos
pop
stos
rcr
test
and
out
push
mov
jp
lock
icebp
pop
or
bound
mov
call
fidivs
jnp
in
xor
outsb
mov
jnp
gs
sub
inc
fs
adc
mov
mov
sbb
xor
aas
loopne
stos
push
jb
cli
cs
aaa
into
or
lret
or
subb
cmp
add
ja
in
mov
pusha
and
outsb
ret
fcompl
aaa
mov
sbb
mov
out
add
lret
mov
movsl
add
push
mov
or
and
ja
imull
push
ja
cmp
jmp
icebp
pop
ljmp
iret
aam
mov
call
stos
xchg
sub
aaa
pop
xor
mov
rclb
push
ljmp
or
stc
inc
push
pop
sub
fldenv
inc
out
dec
frndint
insb
movsb
xchg
insl
and
shlb
mov
fsubr
mov
or
cltd
jp
rcr
cld
push
call
jg
xchg
jl
xchg
jg
pop
mov
test
sbb
mov
pop
pop
push
call
fdivs
xchg
cmp
ja
xchg
mov
cli
mov
lret
sbb
xor
insb
lods
lcall
push
xor
and
xor
leave
sbb
fsubl
fdivrs
sub
scas
dec
daa
lea
cmovnp
ja
call
push
cltd
mov
pushf
daa
push
mov
shrb
aam
mov
loop
push
sub
bt
push
sbb
lea
rcr
mov
mov
ljmp
out
add
incb
nop
std
aam
add
fists
mov
mov
std
dec
add
daa
cltd
lods
imul
lock
lods
xchg
cmpb
adc
clc
and
pop
xchg
or
cltd
or
dec
jne
mov
leave
sbb
sbb
mov
enter
fucomp
or
pop
push
mov
xchg
mov
cwtl
sub
subl
in
push
rcrb
push
mull
filds
out
xchg
inc
or
gs
pop
test
add
xchg
into
jg
scas
xor
popa
repz
or
xor
shll
cld
xor
mov
mov
mov
cmp
rcll
in
fcmovu
aam
jae
adc
cmp
xchg
add
into
inc
es
add
call
pop
and
and
sub
xor
iret
sub
xor
inc
lock
fwait
adc
sbb
loope
and
outsb
push
stos
pop
jg
push
mov
test
imul
data16
xchg
hlt
add
mov
and
xchg
repnz
sbb
or
repnz
jns
push
fs
push
movsb
nop
adc
dec
dec
xor
cs
jmp
shrb
sub
sub
lods
mov
mov
adc
or
push
pop
clc
out
outsl
mov
jae
lret
sub
dec
js
add
div
fwait
out
mulb
pop
daa
imul
xchg
pop
inc
mull
or
push
mov
push
or
mov
pop
pop
fiaddl
fdivrp
rcll
push
add
lret
imul
ja
andb
fstpt
inc
aas
inc
push
daa
fcom
pop
es
jo
sbb
sti
jecxz
clc
insl
bound
pop
push
add
push
ljmpw
out
cmpsb
xchg
and
cmp
mov
xchg
pop
cmp
lret
dec
add
mov
std
inc
std
fimull
push
push
pop
in
push
sub
jbe
xor
out
lea
inc
insl
or
pop
ss
fldenv
stc
sub
xchg
sub
lea
addl
insl
mov
mov
imul
scas
inc
push
jle
push
push
xchg
mov
das
xor
mov
inc
xorb
cmp
mov
je
mov
mov
pop
xchg
jns
xor
sub
add
daa
pop
xchg
lds
cmp
mov
movsl
dec
out
jbe
xor
push
mov
xchg
int
dec
ret
loop
mov
movb
mov
lahf
push
pop
xchg
sbb
test
out
xchg
insl
addl
mov
mov
aam
sbb
lock
movsl
xor
arpl
xor
sarb
mov
or
pop
mov
imul
lret
sub
dec
xor
xchg
test
sbb
imul
xor
orl
xchg
sub
call
fnsave
mov
cs
les
push
stos
dec
ret
push
inc
xchg
jns
addl
pop
lods
mov
push
jns
jmp
jl
sbb
dec
push
hlt
jb
or
xchg
enter
or
int
cmp
clc
ret
test
in
aaa
and
or
pop
imul
jmp
cld
movsb
std
mov
add
xor
scas
sbb
and
mov
inc
int3
sub
aam
enter
mov
sahf
dec
lret
mov
xor
stos
fstpt
mov
push
adc
mov
int3
sbb
loop
cmp
cmp
pop
lods
ljmp
cmp
push
lods
mov
fcomi
imul
iret
outsl
fistps
icebp
imul
pusha
fcompl
inc
outsb
sub
shll
lods
shll
adc
or
lods
pop
ret
ja
xor
add
or
int3
dec
inc
cmpsb
pushf
pop
popa
adc
mov
ficomps
sbb
lret
dec
xor
test
test
je
lret
inc
adc
mov
sti
sub
push
scas
iret
bound
pop
shlb
outsb
test
loope
jbe
mov
fwait
cli
mov
call
fmuls
and
and
stc
xlat
inc
fisttpll
cli
xlat
ret
in
fdivl
jb
mov
test
cmp
enter
push
jmp
cld
scas
cmpsb
and
lds
sub
xchg
adc
jnp
cltd
lcall
xchg
push
lods
ds
fisubrl
icebp
cmpb
sub
std
stos
outsb
or
dec
lahf
xlat
push
adc
insb
aas
add
shrb
mov
daa
in
outsl
imul
enter
or
out
sbb
mov
es
inc
int
xchg
aaa
mov
clc
and
xchg
dec
call
test
jne
jmp
sub
daa
xchg
jbe
insl
lock
ss
negl
jne
xchg
mov
rorb
sbb
stc
int
mov
iret
jae
xchg
pop
fnstenv
mov
jle
pop
pusha
fadd
iret
dec
sub
mov
nop
insb
sub
ret
fidivrs
fldenv
sub
mov
inc
out
mov
push
push
int3
mov
add
out
and
mov
pop
xchg
mov
mov
jne
sbb
dec
pop
lret
fmulp
push
or
pop
inc
jp
sub
fidivrl
aaa
fcmovne
sbb
and
push
insb
jo
aam
push
imul
sbb
pop
shrl
in
jp
pop
xchg
clc
sub
push
cmp
iret
outsb
push
lahf
add
xor
cmpsl
and
repnz
aad
lcall
inc
xor
test
or
mov
sbb
inc
jle
sbb
test
xor
jg
sbb
lods
loop
es
sbb
dec
push
shlb
nop
sub
mov
loop
push
test
cld
adc
bound
pusha
rorl
push
jp
and
jle
xor
iret
ret
pop
fdivrl
bound
mov
adcb
mov
mov
nop
push
or
sbb
movsb
mov
fcmove
sbb
popa
xchg
add
movsb
adc
push
in
xor
jne
aad
xor
inc
je
or
inc
ret
mov
sub
mov
mov
lea
scas
cli
push
inc
and
sbb
adc
push
loopne
enter
decb
adc
xchg
push
push
loopne
outsb
loop
jbe
adc
enter
ror
xchg
or
or
jne
ret
inc
movsl
cli
inc
mov
cli
fpatan
outsb
jge
repnz
and
jnp
popf
test
jle
shrb
or
lret
int
and
mov
clc
mulb
adc
ficompl
loope
and
loope
and
jb
sub
scas
fildll
in
pusha
dec
mov
fsubr
mov
push
adc
popf
fs
jmp
fwait
insl
add
mov
jle
test
ror
cmpsl
cmp
cmpsb
sub
bound
in
in
ret
xor
hlt
fnstsw
in
and
sbb
or
andl
jae
rorl
and
push
cmp
jmp
push
inc
ret
adc
mov
or
mov
xor
movsb
dec
cwtl
add
add
add
aaa
push
jns
xchg
ljmp
out
mov
xchg
lret
sub
ljmp
jbe
mov
scas
fisubl
cli
mov
shll
js
dec
sbb
stos
mov
push
cmp
mov
fistpll
mov
scas
pop
mov
add
mov
lods
inc
jbe
lret
jle
xchg
cltd
sub
mov
pusha
ror
repnz
imul
inc
adc
dec
dec
pop
xchg
ret
loopne
pop
sbb
jl
rcr
arpl
cmpsl
insl
cltd
pop
les
sub
pop
nop
test
pop
cmpsl
imul
fsubrp
sbb
les
sub
ljmp
adc
dec
mov
cmc
lea
xor
and
mov
fistl
mov
push
adc
enter
xchg
shlb
push
mov
and
xlat
fistl
cmc
mov
fs
je
hlt
in
mov
push
divb
jnp
dec
call
inc
repz
fidivl
xchg
lahf
and
dec
ret
mov
pop
sbb
sbb
jne
outsl
mov
das
push
lret
mov
mov
jecxz
hlt
sbb
mov
daa
nop
out
pop
push
sahf
jmp
push
pop
lock
push
mov
mov
pop
dec
jno
lods
push
push
jl
sub
ss
aas
faddl
mov
loope
pop
arpl
add
mov
or
jnp
decl
inc
stc
arpl
push
mov
fstps
cmp
and
pop
or
push
ljmp
and
mov
jbe
mov
into
ds
bnd
arpl
scas
add
mov
cmp
outsb
push
sbb
adc
inc
jl
pslld
fidivs
out
push
sbb
jp
imulb
cmp
nop
test
rsm
inc
sahf
bound
ljmp
mov
jnp
pop
stos
lret
mov
or
shl
and
rorl
mov
mov
in
cmp
jg
sub
leave
sub
sub
ds
cltd
lods
adc
jno
int
int
loopne
pop
ret
add
rcrb
inc
mov
push
adc
sahf
xor
cmpsl
xor
xchg
sbb
mov
cld
mov
jg
cmpsb
mov
arpl
push
jge
xchg
sahf
inc
ja
xchg
gs
das
into
cmp
jl
cmp
movb
dec
mov
ljmp
xor
dec
xor
rorb
and
into
flds
fldcw
cltd
in
lods
pop
enter
fcomi
test
xor
cmpsl
ljmp
add
and
xchg
clc
rcrl
pop
jns
push
adc
ret
sbb
pusha
adc
ret
sbb
cmp
and
imul
cwtl
ja
cltd
jmp
jnp
inc
cvtps2pd
push
mov
dec
out
mov
xchg
std
movsl
nop
sub
cmp
jmp
xchg
punpckldq
mov
js
fidivrl
jb
inc
out
xchg
lcall
mov
jns
mov
out
mov
sbb
xchg
or
pop
cmp
or
repnz
jp
xlat
cmp
cmp
and
test
call
add
inc
add
fwait
in
in
shll
ja
mov
add
mov
inc
dec
mov
pop
cld
sbb
xor
loopne
mov
fdivp
fildll
neg
jl
jae
ret
pop
shrl
cmp
imul
xor
pop
or
jmp
pop
jg
roll
push
iret
outsb
jae
loopne
hlt
aad
in
lock
rcll
sub
jns
fadds
shll
pop
fwait
cmp
xchg
and
or
in
and
xorb
cwtl
mov
add
popf
mov
adc
inc
aad
aad
dec
jnp
jp
jbe
aam
and
lods
cmpb
fnstenv
stc
lods
lds
inc
mov
daa
cmp
scas
sub
loopne
jns
int3
cmpsb
push
mov
pop
mov
adc
nop
test
jmp
xchg
mov
repnz
inc
sahf
dec
push
pop
addb
sub
adc
idivb
cld
lahf
insl
cmp
je
sbb
xchg
pop
out
or
cld
icebp
cmp
sub
lcall
aam
hlt
mov
popf
int
add
std
das
and
cmp
paddw
pop
inc
pusha
loope
repnz
scas
daa
stc
mov
jbe
push
rol
inc
mov
test
inc
jne
sbb
sti
xchg
cmc
hlt
jnp
mov
inc
jge
add
out
jle
sti
mov
xor
adc
or
aas
inc
fldl
loopne
mov
jb
pop
pop
sti
dec
ficoml
outsb
add
push
push
jne
pop
arpl
xchg
pop
es
das
and
jb
je
hlt
xchg
push
negb
xor
fs
push
mov
std
jge
push
fisubrl
into
pop
cmpsl
outsl
jmp
cmp
lea
cltd
push
cmp
xlat
andb
sub
sbb
mov
out
in
mov
in
into
xchg
mov
jmp
sbb
loop
push
mov
cmp
jne
imul
inc
out
push
xchg
xor
pop
pop
test
add
jecxz
mov
inc
xor
aam
xchg
and
jb
negl
sbb
fmul
add
mov
xchg
sub
jp
fisubs
jp
loope
jge
shlb
stos
cmpsl
loopne
mov
xor
out
add
rol
rclb
lret
cmp
leave
push
ljmp
aad
or
mov
rcll
in
icebp
das
pop
shrl
std
add
ss
lahf
xchg
jecxz
std
xchg
pop
xor
rcl
movsb
or
je
pop
ret
js
sub
int3
cld
popa
inc
mov
fucom
imul
roll
adc
mov
daa
lss
pop
adc
inc
cmp
inc
pop
cmpsb
outsb
jne
pop
nop
pop
inc
inc
and
mov
test
icebp
jle
xchg
cmc
xchg
push
icebp
mov
add
out
dec
arpl
xor
data16
inc
imul
adc
movsl
frstor
popa
loope
outsl
pop
sub
push
mov
dec
arpl
inc
add
nop
loopne
push
mov
pop
add
shlb
xchg
dec
stos
rorb
pop
enter
pop
push
ljmp
and
pop
es
xlat
cmp
xor
aad
call
test
pop
cmp
push
jns
mov
jmp
mov
cmp
popf
xor
lock
lods
mov
mov
sbb
sbb
mov
cmp
in
test
clc
test
inc
cmc
lcall
sahf
mov
in
mov
or
and
in
add
sbb
mov
iret
xor
mov
pop
outsl
jno
popa
sbb
pushf
aam
into
cli
xchg
orl
aaa
cmc
sub
notb
cmp
sub
repz
pop
adc
adc
xchg
mov
pop
repnz
rcr
and
pushl
add
add
mov
mov
shll
insb
orl
jae
cmp
jnp
sarb
fadd
jae
dec
inc
cmp
fistpl
mov
scas
inc
clc
dec
lret
call
out
push
loopne
hlt
add
xor
xor
mov
xchg
sub
jae
in
push
xor
iret
mov
jae
lds
mov
cmpsl
scas
push
pop
and
adc
and
adc
pusha
and
rcl
ljmp
push
loope
jmp
insl
sbb
cwtl
sub
aas
cli
mov
and
cmp
in
and
inc
inc
movsb
ljmp
sbb
and
cmp
pusha
fstpt
insb
imul
cmc
cmp
popa
pop
adc
jns
sbb
rclb
cmp
adc
inc
inc
mov
repz
pusha
imul
and
gs
repz
loop
insb
xchg
xor
adc
fcomip
push
pop
stos
out
and
add
stc
repz
jbe
inc
cmpsl
flds
or
mov
sti
insl
popa
pop
dec
test
stos
and
push
mov
iret
push
out
iret
mov
inc
adc
jae
repnz
jne
insl
fsubs
adc
ds
into
or
addr16
xchg
mov
xchg
repnz
inc
cli
nop
mov
adc
pop
popa
lcall
push
adc
mov
gs
in
cwtl
ja
push
int
insb
mov
cmp
and
sbb
repnz
cli
rcrb
jbe
in
test
call
pop
jbe
in
push
jnp
push
arpl
xchg
into
iret
lods
sti
fidivrs
cwtl
or
in
jbe
and
rcrl
sub
into
pop
popf
sub
aad
std
loope
loop
rcrl
xor
test
jecxz
fisubrs
push
lret
stc
out
repz
popf
loop
add
lret
jbe
mov
and
call
cmp
imull
ja
shlb
mov
mov
jmp
inc
je
out
mov
pop
jge
push
popa
xchg
mov
adc
js
sbb
fcmovu
out
inc
and
dec
bound
aaa
arpl
lahf
fwait
xchg
pusha
fsubr
mov
cmp
cmc
ficompl
xor
add
fdivl
xchg
fisubs
push
xor
jp
push
push
lock
test
cmc
sub
pop
int3
pop
sbb
mov
sub
inc
xchg
movsl
jle
repz
pop
repnz
mov
lcall
xchg
imul
inc
sbb
aam
loope
fiadds
cmp
pop
adc
adc
mov
cli
dec
fwait
cli
and
bound
ror
xor
jno
loope
jns
imul
loop
mov
cld
or
pop
mov
and
mov
andb
push
popa
add
ds
sbb
jge
lahf
mov
sub
adc
repnz
fcmovbe
mov
mov
pop
dec
or
push
or
loopne
mov
sub
add
scas
pop
es
inc
int3
or
lret
jns
jnp
push
loop
popa
cmpsb
test
jo
add
sbb
inc
jle
xorl
jge
adc
fidivrs
divb
or
loope
in
loopne
out
lahf
push
add
movsl
jge
sub
mov
ret
xchg
jl
gs
mov
sarb
pop
lds
add
xchg
js
xchg
arpl
mov
pushf
stos
mov
adc
mov
pop
adc
test
xor
cmpsl
rcrl
jo
sbb
clc
push
add
and
cmp
into
je
pop
add
testl
ffreep
stc
es
mov
sbb
mov
in
inc
lret
pop
rol
in
rcrl
mov
lock
pop
pushf
and
inc
sub
enter
inc
xchg
pop
loop
movsl
ds
aas
lahf
lahf
sbb
jae
mov
adc
cmp
mov
loop
sub
jp
ljmp
dec
sbb
sbb
xchg
test
lret
mov
dec
aas
das
jae
dec
pop
cwtl
mov
mov
not
repnz
ret
lods
insb
push
aaa
repnz
adc
or
movntq
sbb
xchg
pop
xor
shlb
imul
outsb
inc
sub
cltd
out
pop
insb
xlat
cltd
aas
clc
fisubrl
sti
in
jae
sbb
mov
fadds
pop
xchg
push
imul
movsb
push
sub
dec
mov
pop
mov
or
ret
inc
xchg
fnstenv
xchg
ja
mov
lods
mov
mov
mov
cltd
add
jb
pop
jb
sahf
cmp
jp
jmp
push
or
mov
pop
stos
movsb
loopne
xor
sub
div
shll
fsubs
imul
les
stos
in
sub
mov
and
push
and
mov
in
nop
hlt
aas
mov
inc
mov
adc
mov
shlb
xchg
mov
add
pop
cli
jge
loope
and
test
dec
xchg
fsts
mov
jmp
jg
mov
mov
ljmp
push
stos
imul
sti
dec
pop
aam
mov
lods
xor
jle
test
jnp
repz
ss
fsubrs
add
enter
cmp
cwtl
pop
sbb
or
in
cmp
int
mov
stos
test
jbe
mov
clc
in
sub
sbb
ja
mov
movsb
sbbl
mov
lods
fnstsw
stos
scas
sbb
fldenv
pop
dec
pop
inc
data16
cmpsl
out
mov
int
cmp
mov
pop
call
nop
loopne
fdivp
in
int3
clc
cltd
loop
enter
lods
add
sbb
mov
lret
sub
popa
xor
aam
push
cs
pop
jne
xor
mov
adc
pop
addr16
mov
mov
test
sub
stc
add
cmp
push
ja
mov
sbb
add
ss
ljmp
negl
int3
adc
in
adc
inc
fildll
fsubrs
stc
fnstenv
mov
sahf
cs
or
mov
imul
loop
cmp
dec
xor
pop
aas
cmc
xor
cmc
clc
ror
sbb
mov
xchg
dec
add
pop
sub
jno
mov
test
sbb
push
cmp
mov
aad
sub
add
push
outsb
push
sahf
cmp
dec
cmpb
push
das
jns
subl
ss
mov
mov
test
xchg
xorl
xchg
xlat
shl
rorl
push
inc
mov
in
mov
shlb
gs
xchg
sbb
sub
in
ljmp
sarb
out
loopne
xor
nop
push
cmp
dec
cs
cld
pop
das
pop
mov
dec
loopne
xlat
mov
psubd
jae
fsts
aam
or
jo
push
imul
xchg
sbb
mov
xor
dec
xor
out
js
inc
gs
fsubs
jae
in
imul
fnstsw
mov
scas
dec
inc
xchg
fldcw
cmp
testl
inc
xchg
sub
nopl
and
add
inc
jge
or
sbb
or
out
sub
jp
xor
jne
cs
adc
xor
add
and
rcll
mov
out
in
insb
cs
jns
loopne
fldenv
xorl
inc
sbb
jmp
mov
outsb
movsl
mov
scas
xor
xchg
jge
mov
jne
fistl
or
stc
aad
mov
and
mov
lcall
inc
aad
sti
popa
outsl
out
xchg
inc
xor
pop
inc
push
jae
sbbl
mov
inc
pop
or
sbbl
mov
inc
cmp
mov
mov
sar
cmp
call
sahf
cmp
mov
cwtl
pop
in
jmp
jae
mov
pop
mov
add
or
daa
adc
call
jne
xchg
lea
fiaddl
rdtsc
cmp
les
push
insl
lcall
or
stos
das
insl
cwtl
xchg
push
mov
inc
adc
lock
ret
fistl
fxch
ret
or
inc
mov
addr16
xchg
out
pop
dec
lods
mov
pop
dec
sub
sbb
inc
push
xor
je
divl
xchg
adcl
xchg
lods
out
fimuls
and
jnp
js
ret
push
jae
sub
adc
push
mov
daa
les
fimull
inc
test
aad
adc
pop
xor
inc
xchg
imul
xor
cmp
push
inc
aaa
cvtpi2ps
shlb
and
adc
pop
xchg
cmp
lods
add
mov
xor
pop
sbb
add
daa
pushf
xor
aam
psrld
cltd
sbb
lods
movsb
cmp
mov
inc
cmp
int3
sbbl
rorl
icebp
mov
mov
push
pop
sub
std
fidivs
mov
lahf
add
mov
adc
push
cmpsb
and
adc
enter
out
sub
fiadds
loopne
sbb
pushf
mov
in
sbb
add
jae
mov
int
dec
mov
cmpsb
mov
imul
xlat
in
rcrb
mov
mov
hlt
shl
xchg
idivl
movsb
push
push
mov
out
add
cmp
and
cltd
pop
mov
lahf
or
inc
inc
popf
jnp
inc
insl
adc
das
ds
hlt
int3
pushl
fadd
stc
incb
pop
int
cmc
pushf
sbb
sbb
out
out
mov
and
xor
cwtl
xor
ljmp
lods
out
insl
pxor
test
gs
lahf
xchg
mov
mov
enter
mov
ror
cli
sub
jmp
mov
dec
push
adc
in
cmpsb
mov
dec
ret
push
mov
inc
pop
xchg
sbb
jbe
test
cmp
decl
lret
movsb
cmp
fcomps
loop
in
xor
out
adc
and
xchg
or
adc
testl
sub
sahf
out
inc
sbb
jl
jns
lcall
mov
push
inc
push
mov
inc
aaa
mov
fcoms
lock
mov
push
cmp
cmpsb
shl
sbb
or
jmp
pop
jnp
iret
mov
cmp
shl
stos
and
int
or
lock
mov
shrl
mov
fmull
ret
dec
xor
cmc
cmp
popf
sbb
aas
aaa
in
mov
lea
nop
cmpsl
or
pop
mov
pushf
es
push
push
xchg
mov
or
fnstsw
dec
adc
repz
or
and
adc
fsubs
fisttpll
scas
cwtl
fsubs
and
out
nop
bound
mov
xchg
std
pop
jge
push
sub
dec
sub
push
xchg
int
jge
dec
mov
imul
or
fisubrl
pop
sbb
xchg
aaa
xchg
mov
lret
dec
jo
lds
lock
repz
xor
data16
enter
sub
lret
push
sbb
stc
call
mov
jg
les
push
push
fstpt
ret
int
testb
cld
mov
inc
mov
mov
pop
xchg
cmp
popa
or
cmpb
jg
mov
leave
xor
xchg
fldcw
mov
ret
lahf
loope
add
test
or
or
sub
sbb
in
adc
xor
cld
in
xor
inc
out
inc
sub
sub
aam
sbb
push
loopne
jnp
pushf
rdmsr
negl
jbe
mov
xchg
das
hlt
jbe
orl
daa
push
fmulp
xor
sbb
add
push
jnp
int3
xchg
jmp
xor
addr16
xchg
ret
fadd
jae
je
lahf
xchg
and
mov
xchg
mov
push
sbb
ret
push
ljmp
aaa
imul
aas
sbb
mov
clc
mov
inc
inc
cmp
mov
xchg
in
loop
leave
cmp
outsl
add
mov
imul
mov
adc
loop
pop
pop
call
ret
add
shlb
lock
push
int3
aad
sti
cmp
inc
and
mov
testl
mov
ds
xor
sti
in
test
int3
movsb
pop
fsubrl
lcall
ss
aam
rclb
jmp
xchg
fisttpl
in
pop
fidivrl
popf
inc
pop
ja
in
mov
testb
mov
push
enter
cmp
jecxz
hlt
dec
mov
jl
cmpsl
mov
xor
bnd
daa
ret
js
loope
sbb
ljmp
push
mov
adc
mov
sbbb
das
dec
push
test
sub
dec
mov
popa
and
popf
cwtl
jg
test
mov
subb
iret
lods
xchg
outsb
push
pop
sbb
jno,pn
mov
aam
mov
push
mov
daa
cmpsl
rcrl
ss
mov
jge
sbb
and
pop
mov
out
mov
js
sub
idivb
cmpb
shll
mov
xchg
and
in
and
flds
daa
pushf
insb
aad
stc
adc
dec
push
adc
adc
lds
repz
adc
sub
mov
cmp
in
sbb
or
cmp
int
pushf
sub
mov
test
xor
in
aam
mov
jbe
outsl
int3
or
lcall
jmp
xor
push
daa
add
jne
test
fwait
cmp
shll
push
bound
gs
test
xchg
adc
es
cmp
dec
push
gs
mov
lds
adc
dec
sub
loop
xchg
mov
mov
icebp
aas
xchg
mov
jecxz
sahf
pop
fcomps
adcb
negb
dec
addr16
pop
jb
sbb
dec
push
push
dec
inc
or
stc
mov
mov
mov
push
mov
or
mov
int3
aas
or
mov
xor
and
hlt
inc
mov
in
insl
inc
shll
sub
icebp
scas
lret
inc
fsubl
andl
and
dec
pop
xchg
ret
xor
test
dec
outsl
rolb
insl
adc
fmull
cmp
sub
mov
loopne
mov
mov
inc
and
xor
shll
lds
jle
push
xchg
mov
add
mov
xor
jbe
sbbb
xor
cmpsl
pop
mov
xchg
daa
adc
test
into
ja
stos
xor
pop
les
enter
cmpsl
sub
mov
test
stos
mov
int
leave
decl
inc
cmp
sahf
in
outsl
out
nop
rcr
lret
repz
or
or
mov
jb
mov
aad
clc
hlt
ftst
into
pop
iret
lcall
inc
sub
movsl
jae
add
add
xchg
lds
pop
xchg
push
sahf
popf
push
mov
negb
xchg
adcl
testb
push
jno
jno
sbb
into
inc
dec
sbb
push
pop
imul
inc
jg
pop
imul
jge
inc
popf
stc
stc
mov
sbb
fimuls
cmpsb
repnz
int
jo
add
fisttpl
mov
je
and
adc
or
ret
xchg
fs
jnp
mov
prefetch
or
cmp
jl
ret
cmpsl
push
adc
or
or
mov
out
push
rol
adc
pop
mov
push
dec
mov
dec
gs
insb
mov
jae
sbb
jnp
mov
mov
dec
orl
mov
inc
decb
or
cld
rorl
adc
clc
gs
ret
movsb
mov
jo
fidivl
nop
cmp
aad
std
shrl
in
xlat
in
scas
bound
fdivs
xchg
mov
push
shrb
aas
cmp
into
sub
sbb
insb
mov
lret
ja,pt
xchg
xchg
push
lods
sahf
sahf
test
add
call
lcall
jne
and
push
jg
adc
mov
adc
gs
cmc
push
das
lcall
fmuls
out
or
lcall
sahf
mov
lds
dec
cmp
.byte
test
.byte
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
push
push
pop
pop
call
push
inc
sub
scas
dec
fsub
sub
pop
push
jmp
pop
aas
or
push
clc
shll
aaa
movsb
or
rcll
add
add
mov
mov
call
lret
mov
pop
add
and
mov
mov
pop
xor
sub
lahf
jno
call
sbb
int
xchg
ror
into
out
cld
test
je
mov
sub
add
movswl
sub
jne
mov
pop
aas
adc
jecxz
idiv
dec
sbb
and
sbb
aas
adc
addr16
adc
adc
jle
ljmp
adc
aas
dec
mov
rcl
lret
mov
shll
dec
add
inc
jae
sbb
ss
idivl
enter
pushf
inc
lret
cmp
xchg
daa
adc
ja
push
or
dec
mov
rol
xor
aas
xchg
push
iret
mov
xor
aas
sbb
xor
jecxz
sbb
mov
push
inc
push
cmpsb
mov
jecxz
sbb
mov
mov
dec
lock
sub
xor
shll
add
movsb
sub
push
insl
push
iret
popa
push
mov
ret
mov
dec
movsl
or
push
mov
push
fldenv
add
xchg
dec
popa
xor
cmp
mov
lods
jb
and
imul
mov
push
mov
adc
int
iret
out
rcrb
jnp
addb
or
imul
pop
scas
sti
cwtl
sbb
or
stos
mov
cwtl
cmpsb
ret
xor
jo
mov
icebp
or
js
and
dec
lock
mov
or
pop
into
in
sub
push
dec
popf
sbb
push
fs
pop
mov
std
pusha
or
mov
xor
jle
cli
dec
repz
push
fildl
add
in
dec
dec
pushf
dec
aad
add
pusha
or
pushf
mov
dec
int
cmpsl
ds
test
data16
or
iret
mov
std
or
sbb
mov
repz
loope
xchg
cmp
and
pop
mov
sub
rcrb
mov
test
mov
jle
mov
std
in
enter
inc
insl
mov
pop
mov
mov
enter
into
sbb
in
adc
mov
xchg
push
pop
cmpsl
inc
inc
fwait
cwtl
mull
loopne
jns
pop
jbe
pop
fadd
sbb
pop
subb
out
push
pop
subb
sbb
popl
jnp
xor
dec
mov
and
inc
rcll
mov
cmp
mov
fs
jmp
jge
add
adc
xchg
xchg
push
pop
mov
dec
inc
or
jo
xchg
lea
push
outsl
push
clc
sub
psubusb
mov
fwait
sahf
jecxz
ret
push
cltd
lds
mov
xor
mov
movsl
mov
adc
jecxz
cltd
and
aam
lea
pop
xor
into
out
xlat
lea
jecxz
cltd
inc
and
push
popf
fldcw
orb
cltd
lcall
cltd
inc
and
cltd
lds
shll
mov
mov
xor
xchg
adcl
dec
popa
cmp
lds
lret
mov
ret
xchg
inc
sti
or
fwait
std
push
pop
cmp
lds
jp
sahf
lods
jb
lds
sub
nop
loope
cltd
cmp
jns
shl
jnp
aad
push
insl
les
jp
lds
jnp
xor
jp
pop
pop
fs
lds
jnp
sbb
lock
jp
lret
icebp
adc
cltd
pop
test
adc
out
cltd
pop
inc
ja
cmp
jns
lds
and
jae
cmp
cltd
lds
outsb
cmp
cwtl
lds
add
mov
jnp
cmp
cmpsb
je
lcall
ret
lahf
lds
jbe
xchg
or
cmp
lcall
cltd
aad
add
pop
into
jbe
cmp
cwtl
lds
push
cwtl
lds
lock
or
mov
lock
les
icebp
adc
inc
outsl
ljmp
int3
sahf
xor
mov
mov
or
xor
jns
lds
cmp
lds
fisubl
pop
in
jb
add
pop
dec
inc
pop
jno
pop
jecxz
cwtl
dec
in
jae
scas
movsb
les
call
hlt
test
dec
in
jae
scas
movsb
les
lds
cmc
outsl
pop
hlt
test
test
popf
cmp
fidivrs
shrb
fwait
dec
in
jae
scas
movsb
les
out
arpl
rorl
insb
push
jg
inc
mov
mov
shrb
fwait
dec
in
jae
scas
movsb
les
ret
inc
mov
mov
shrb
fwait
dec
in
jae
scas
movsb
les
cmpl
dec
and
push
jb
fisubs
cltd
lds
sbbl
cmp
xchg
push
shrb
fcmovb
movsl
jp
repnz
sahf
mov
mov
sub
pop
dec
dec
popa
sahf
sub
mov
je
pop
jae
push
jge
mov
adc
loopne
leave
pushf
es
sahf
jmp
pop
push
das
pop
jae
push
jge
mov
adc
cmp
push
movsl
pop
mov
lds
xchg
repnz
jnp
les
jnp
inc
cs
bnd
pop
cmp
cltd
lds
adc
fcmovb
xchg
loop
and
jbe
lds
stos
ret
ljmp
pushw
sub
jno
lds
test
in
dec
mov
rolb
lcall
jle
sahf
lds
int
xchg
bnd
xchg
dec
ss
lcall
ret
jbe
scas
mov
fisubs
sub
filds
jg
xorb
mov
cmp
xchg
push
jl
insb
inc
adc
or
pop
shr
adc
cmp
and
mov
adc
push
call
mov
lds
jp
lds
jp
lds
jp
cmp
jecxz
lock
test
add
mov
lds
jp
lds
jp
inc
add
jp
lds
jp
lds
lock
adc
lcall
sub
gs
mov
pop
mov
in
xor
xor
jecxz
jecxz
pop
mov
or
inc
arpl
and
cltd
or
cmp
loope
pop
sub
ja
adc
aas
lcall
aas
inc
in
mov
test
ds
mov
jecxz
dec
cmp
sub
and
les
gs
inc
fists
cwtl
and
test
xor
pop
and
fadd
fs
mov
rcll
lock
repnz
rorl
sub
push
ds
dec
or
into
pop
insb
psrlw
andl
outsb
cs
adc
sti
dec
int3
cltd
pop
outsl
bound
cld
adc
or
imul
dec
cli
out
test
loopne
mov
je
pushf
fistps
jb
mov
cmp
sub
movsb
es
cmpsl
jl
dec
fists
ret
pop
cwtl
sub
sub
bound
frstor
mov
mov
inc
idivb
cmp
ljmp
arpl
jge
adc
sub
sub
push
lcall
fisubrs
out
cmpl
or
mov
and
jo
stos
lods
xor
inc
xor
cmp
mov
xchg
sub
ja
add
imul
arpl
in
xchg
sub
lahf
sbb
or
mov
mov
pop
or
pushf
test
push
jnp
das
xchg
aaa
leave
and
mov
mov
xchg
adc
jbe
sub
jmp
out
cld
or
pop
das
inc
test
ret
imul
mov
psadbw
jnp
dec
push
cli
jp
lds
cltd
leave
dec
and
mov
sbb
mov
adc
int
xchg
xor
xlat
std
push
adc
imul
cmp
or
mov
in
out
sub
rcrl
jns
aam
mov
adc
add
dec
out
shl
add
cld
aam
push
sahf
and
dec
jmp
or
adc
jle
sub
out
and
movb
mov
out
cld
xchg
mov
and
mov
add
dec
movb
push
inc
push
mov
dec
mov
sarb
and
sbb
andb
out
aad
dec
les
les
clc
mov
jno
je
push
and
and
adc
mov
das
push
pusha
cmp
in
mov
pop
jbe
inc
pop
inc
ss
add
add
add
or
add
adc
or
add
or
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
or
add
or
add
or
add
pop
add
or
pop
add
or
pop
add
or
pop
add
or
pop
add
or
pop
add
add
add
add
jbe
jo
xor
cs
insb
add
imul
insb
add
gs
xor
fs
insb
add
insl
arpl
xor
fs
insb
add
jb
imul
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
add
add
add
add
addb
add
mov
pop
add
add
add
or
add
fisttps
add
add
inc
jb
gs
imul
inc
gs
arpl
popa
jo
add
add
imul
jae
js
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
or
or
add
add
or
or
add
add
add
add
add
add
add
js
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
push
add
add
add
add
add
add
xor
xor
bound
xor
add
dec
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
popa
add
imul
je
and
push
add
insb
add
sub
add
add
arpl
je
outsl
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
add
add
imul
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
jae
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
je
jb
popa
add
je
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
insb
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
sub
inc
add
add
add
imul
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
dec
pop
jne
bound
addr16
sub
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
pop
add
add
inc
add
add
pop
add
and
and
and
and
and
and
and
and
and
and
and
and
add
add
je
sub
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
sub
push
add
add
add
imul
outsl
add
jae
sub
push
add
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
add
add
add
and
adc
add
add
call
add
adc
add
add
sub
add
add
sarl
add
adc
add
and
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
add
add
add
add
add
or
pushl
jo
xor
jo
push
aas
addb
idivl
divl
addb
icebp
pop
data16
dec
addb
stc
pop
out
dec
addb
incl
inc
add
addb
inc
inc
inc
jo
addb
mov
rcrb
jnp
jnp
pop
xor
rolb
add
add
mov
add
xor
add
add
add
loopne
xor
loopne
mov
loopne
xor
loopne
add
loopne
ja
sub
add
and
add
inc
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
xorl
xor
xor
xor
add
add
add
add
jnp
jnp
add
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
mov
xor
xor
xor
xor
xor
ja
addb
xor
aas
pushl
xor
push
addb
jg
aas
push
add
push
orb
div
aas
push
xor
push
addb
xor
xor
xor
add
testl
push
xor
testl
clc
mov
addb
xrelease
push
maskmovq
testl
incl
lock
addb
add
mulb
incl
addb
add
ljmp
cld
in
addb
add
jmp
cld
testl
push
addb
add
mov
xchg
ja
ja
ja
ja
ja
ja
add
add
inc
inc
inc
add
add
addb
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
inc
inc
inc
inc
addb
add
ja
ja
ja
ja
add
add
mov
mov
lock
push
add
push
add
push
add
jg
add
aas
lock
aas
lock
aas
lock
aas
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
enter
ret
adc
add
add
add
out
mov
inc
and
dec
pop
and
stos
jae
add
cltd
push
leave
sub
pop
mov
sbb
lods
enter
dec
pop
out
cmp
repz
test
stc
pavgw
hlt
fldcw
icebp
sub
push
jno
xor
push
cltd
fildl
push
inc
enter
outsl
inc
mov
pushf
inc
add
jae
test
es
jg
movsb
fs
pop
cltd
sahf
cmpsb
das
int3
adc
add
cltd
jb
out
inc
push
pop
pop
stos
sti
hlt
fdivs
jb
je,pt
cmp
js
mov
insl
addr16
lods
push
dec
addr16
icebp
xchg
insb
jnp
ret
push
or
cmpsl
or
fsubrl
add
mov
xor
jp
adc
jbe
mov
xchg
push
cs
mov
sti
adc
or
add
mov
jl
xchg
xor
mov
mov
sub
repnz
repz
pop
dec
xchg
cltd
repz
push
mov
iret
jne
fisubl
cmp
int3
add
sub
xor
sub
lock
xor
and
sahf
cli
mov
cwtl
sarb
clc
xchg
push
adc
fwait
ret
cld
pop
jl
and
loop
stc
cmp
pop
jae
jb
leave
call
cld
and
mov
jns
pushf
push
in
aas
jnp
out
cli
push
push
into
ret
lock
push
stos
daa
sub
cmp
imul
clc
fidivrl
inc
pushf
pushf
fsubs
mov
rdtsc
adc
jnp
xchg
sbb
xchg
fwait
push
rcl
cwtl
fistps
jmp
jl
movl
pusha
cwtl
call
xchg
adc
dec
push
gs
or
mov
dec
inc
cwtl
js
mov
xor
stos
mov
push
lahf
pop
pop
jle
sub
xchg
cmpsb
cltd
cmp
bound
adc
in
test
and
pop
clc
jle
cmc
cld
mov
sqrtps
movsb
aaa
sbb
mov
lcall
cltd
int3
dec
lods
lods
ret
pop
cs
dec
mov
int3
rcrb
ss
cmc
fidivl
pop
in
lods
cld
test
and
add
lahf
mov
xchg
jecxz
scas
fwait
mov
cmpsb
aad
incb
aad
sarl
dec
repz
das
out
mov
pop
push
cmpsl
sub
adc
fnstenv
xor
arpl
mull
stc
and
adc
pop
mov
pop
xchg
lret
sub
je
fstp
xchg
mov
mov
ljmp
lcall
xchg
inc
jecxz
xchg
xchg
xchg
adc
adc
lcall
cmc
dec
jle
mov
outsb
pop
jecxz
push
out
or
push
inc
das
je
loope
push
insb
mov
shrl
mov
add
inc
lods
jmp
xchg
cmp
mov
sub
mov
ljmp
adc
mov
inc
hlt
loope
lcall
xor
fwait
mov
and
lret
repnz
rcll
addr16
lahf
pusha
fstl
pop
push
nop
lods
std
imul
sbb
lods
mov
pop
jmp
repnz
ja
gs
cmc
ds
cmp
add
jns
stos
cmp
lods
add
mov
mov
movsb
xorb
sub
shl
add
or
in
out
imul
or
je
mov
ljmp
arpl
rorb
aas
int3
into
jge
icebp
call
cmp
test
out
xchg
scas
das
push
ja
repnz
repz
std
push
ljmp
cmp
call
inc
ror
add
jb
sub
rcll
das
sbb
notl
cmp
data16
out
mov
jns
test
cmp
mov
lret
mov
out
aam
lock
shlb
push
sbb
mov
push
jne
jmp
push
imul
mov
ljmp
popf
mov
mov
aam
xor
push
dec
mov
xor
jbe
mov
hlt
aaa
rorl
orb
lret
cmp
mov
jno
lret
xor
sahf
dec
insl
pop
mov
mov
cmpsl
mov
sbb
mov
xor
movsb
push
dec
xlat
push
xchg
out
pop
loopne
int3
scas
xchg
add
les
jae
icebp
inc
test
xor
in
jno
daa
ret
popf
aas
repnz
sub
cmp
sub
pop
int
mov
sti
mov
pop
lods
pop
xchg
dec
add
fwait
pop
notl
adc
movsl
push
mov
es
and
jle
xchg
mov
mov
inc
cmp
jecxz
and
pop
dec
jmp
test
sbb
jecxz
inc
jmp
int
push
rorl
hlt
out
push
je
out
insb
loop
or
ds
and
bound
addr16
aaa
out
idivl
leave
dec
cmpsl
xchg
push
ja,pn
xchg
les
addb
lea
sub
xchg
cmp
mov
xor
test
loope
dec
out
roll
and
into
imul
ja
fstpl
dec
mov
jmp
mov
lret
add
fiaddl
les
out
jecxz
jne
add
cmp
out
nop
les
xor
or
mov
push
out
mov
pusha
xchg
popf
lret
fisttpll
mov
in
add
push
fsub
or
mov
stos
test
dec
and
cwtl
stos
mov
addr16
xchg
test
bsr
jnp
cmp
jg
insb
cmc
outsl
jge
mov
sarb
cmp
xchg
adc
mov
sub
shll
lret
mov
call
hlt
xor
dec
push
inc
cmp
out
jecxz
jg
outsb
or
jp
cmp
xchg
out
stos
mulb
and
icebp
out
mov
sub
cmpsl
fists
jne
pop
lock
sti
mov
mov
cmpsb
cmp
paddw
lahf
scas
sar
cmpsb
andb
push
push
sbb
xor
cmp
cmp
movsl
adc
fcompl
in
cmpsl
dec
outsl
push
xor
pop
sub
dec
dec
mov
fbld
mov
mov
cmp
xor
lret
add
stc
mov
xor
mov
bound
dec
incb
or
in
lret
out
inc
pop
xor
rcll
ret
shl
sub
fimull
fdivl
sbb
int3
std
fwait
sub
push
jns
jnp
popf
fdivrl
dec
mov
int3
inc
mov
pop
push
pop
inc
xchg
dec
popf
and
daa
fxch
outsl
jecxz
movsl
mov
mov
mov
movsb
mov
lahf
add
add
sub
test
out
push
ret
sbb
sub
rorl
jmp
cmp
loope
mov
mov
mov
sbb
mov
mov
leave
pop
call
push
std
ror
fcoms
push
pop
pusha
lock
push
imul
pop
and
es
xchg
loope
or
inc
bound
push
les
orl
inc
push
push
bound
cmp
pmullw
hlt
mov
dec
lods
jg
rorl
xchg
lcall
fnsave
xchg
xchg
repz
negb
invd
out
loop
jl
dec
jmp
mov
pop
sub
dec
xchg
hlt
add
jle
mov
stc
xor
lea
and
daa
outsl
fwait
xchg
mov
dec
clc
shlb
ja
in
lahf
add
jne
jg
lds
addb
scas
cmp
pop
pop
scas
xchg
jmp
cmp
pop
sub
lcall
ret
and
sti
icebp
fstpt
push
gs
out
inc
mov
sub
movsb
nop
ljmp
mov
inc
inc
mov
jl
add
sbb
mov
ficompl
mov
mov
imul
cmp
xchg
out
stos
mov
imul
mov
jmp
insb
inc
xchg
jmp
dec
inc
cmp
outsb
cmp
push
adc
xchg
sub
ja
xchg
pop
stos
or
cltd
adc
mov
xchg
inc
push
mul
popf
and
and
outsl
mov
mov
lods
sahf
inc
add
pop
pop
push
lea
jmp
out
sub
push
mov
mov
mov
loopne
mov
pop
dec
insb
mov
and
mov
stos
push
dec
das
and
push
jns
fcmovu
mov
xlat
repnz
and
lea
jno
mov
fcmovne
mov
jb
out
cmp
test
lea
push
in
mov
xor
enter
out
adc
pop
iret
sub
rclb
mov
jp
or
int3
pop
cmp
cmp
cmp
cwtl
sahf
mov
cmp
inc
ss
adc
js
add
jmp
and
mov
push
das
pop
sub
je
pop
repz
shrb
sbb
adcl
and
push
jl
dec
and
in
dec
inc
lods
mov
fsubs
test
movsl
sub
rcrb
jle
fisubl
or
pop
mov
hlt
push
push
inc
clc
inc
pop
or
mov
dec
cmc
rcr
add
push
std
pop
push
iret
test
mov
repz
rolb
out
adcl
dec
jb
jl
imul
xchg
or
mov
lods
inc
mov
sub
pop
je
pop
jb
sub
mov
mov
pop
int3
push
cmpsl
addb
xchg
shrl
pop
sti
ja
pop
aad
xor
jp
xchg
leave
rclb
pusha
insl
in
rclb
into
js
xchg
pushf
ret
or
test
and
enter
and
gs
inc
xor
mov
movsb
icebp
mov
outsl
imul
lods
xor
into
arpl
out
adc
push
push
idivb
ret
sbb
in
ret
adc
push
in
maxps
cmp
adc
hlt
sbb
pop
into
data16
fadds
sti
popf
loopne
pop
dec
je
sub
aas
inc
mov
cmp
and
and
and
je
pop
jnp
or
mov
inc
insl
mov
jno
sub
mov
cltd
test
repz
pop
sub
aam
xchg
add
adc
push
xchg
in
pop
ret
or
movsb
ds
mov
out
insb
push
in
sub
cmpsb
pop
add
aam
push
daa
rcll
aad
bound
lods
cmpsl
repnz
scas
xor
xchg
int3
rorb
fisttpl
pop
es
sbb
add
repz
movsl
cmpsb
xchg
stos
sarb
mov
sbb
push
xchg
and
add
lret
sarb
aad
loopne
insb
shll
or
cmp
pushf
push
sbb
sbb
sub
sub
dec
cld
out
lret
jmp
mov
sahf
inc
cmp
lcall
push
movsl
push
pop
out
cmp
mov
mov
out
dec
cmp
dec
sub
stos
sub
mov
push
pop
xchg
cmpsb
inc
pop
sar
adc
dec
nop
inc
and
cmpsl
adc
adc
mov
sbb
lret
jno
xchg
ss
in
mov
insl
mov
adc
in
sarb
pop
pop
loope
scas
pushf
pop
push
cmp
in
push
or
clc
or
cmp
inc
adc
inc
test
mov
call
mov
int
ret
mov
icebp
std
adc
lods
cmp
imulb
aad
xchg
pop
das
inc
pop
mov
sbb
pop
int
cld
ffreep
lret
sub
sub
adc
lds
sahf
repz
inc
cli
mov
adc
dec
clc
idiv
dec
hlt
icebp
jbe
mov
inc
adc
pop
lods
add
in
aas
sbb
movsb
inc
adc
lods
daa
xor
xchg
dec
adc
cmpsl
cmpsl
clc
mov
ret
mov
adc
adc
inc
fistl
insl
mov
jbe
aad
out
hlt
mov
jo
cltd
jns
icebp
add
sub
adc
jg
or
popa
imul
sbbl
fidivrs
sub
enter
jne
roll
in
sub
push
cmpsl
pop
aaa
mov
adc
adcb
mov
in
out
xor
jnp
movsl
cmpsb
cltd
aaa
xor
mov
shrl
lods
dec
dec
jecxz
xchg
int3
and
ret
cmp
bnd
mov
jle
xor
and
adc
pop
mov
leave
mov
dec
daa
mov
mov
loopne
xlat
dec
jnp
subl
ja
xor
mov
andl
adc
cmp
push
xor
test
push
in
stos
jne
push
inc
add
scas
xor
mov
imul
in
dec
cmpb
mov
rorb
lock
aad
idivl
in
adc
ret
leave
or
aam
cmp
xchg
pusha
add
stos
push
mov
jg
jecxz
lcall
addr16
push
sbbl
xchg
es
sub
rolb
pop
push
inc
inc
cmpl
push
jle
xor
test
sbb
add
lods
inc
orl
cmc
or
lock
sbb
sbb
mov
test
push
js
std
mov
sarl
and
cmc
dec
sbb
jno
inc
daa
add
and
sbb
push
pmaddwd
add
dec
mov
fists
xchg
cmp
cwtl
add
movsl
xchg
les
int3
shll
inc
iret
jno
lods
and
fadd
shrb
dec
cmpsl
std
test
sbb
sti
push
push
or
test
sbb
mov
roll
push
jbe
sahf
lret
adc
mov
jae
push
mov
push
in
in
outsb
mov
in
jle
or
lods
cwtl
in
mov
push
insl
push
mov
sbb
enter
adc
mov
out
test
push
pop
mov
pop
inc
and
hlt
hlt
dec
ret
aad
xor
mov
adc
lcall
lret
nop
fcmovbe
mov
mov
push
test
jnp
repnz
pusha
mov
inc
adc
aam
ficompl
jmp
xchg
add
add
test
loop
cmpsl
xchg
xlat
ret
mov
and
lods
push
js
lcall
cmp
or
fwait
inc
push
or
mov
xchg
mov
movsl
push
lcall
xor
shlb
xchg
sub
aad
adc
ret
fcmovnu
sub
scas
ret
arpl
adc
xchg
mov
pop
or
cmc
shrb
add
dec
jge
repz
aad
mov
cli
mov
push
sbb
sbb
add
int
jg
pop
or
icebp
jbe
loope
mov
jl
out
sub
mov
out
jl
inc
mov
mov
rcrl
sbbb
gs
xchg
jg
fs
call
mov
xorb
mov
adc
push
lcall
xor
dec
sbb
push
and
xor
sub
lahf
add
dec
jae
adc
push
aaa
mov
aam
imul
push
lods
xlat
ja
and
ds
lcall
out
ljmp
scas
jno
lret
mov
scas
enter
xlat
jl
inc
bound
leave
add
outsl
push
and
jp
call
and
fistpl
cmp
lret
arpl
cmpsl
nop
lcall
add
stc
add
cwtl
sbb
mov
dec
jmp
dec
aad
inc
clc
movsl
inc
loop
mov
xchg
jge
lds
lret
cmp
js
mov
repz
lods
dec
xchg
xlat
add
es
mov
das
ja
into
push
cmp
jle
cld
out
int
xor
mov
mov
call
xchg
and
in
std
addr16
jne
fs
stos
cmp
mov
and
lock
scas
adc
pop
jmp
roll
cli
mov
int3
sub
in
movsb
gs
cmp
stc
lods
mov
jns
ss
incb
cmp
stos
sbb
inc
xor
insl
es
cmp
push
sub
arpl
mov
mov
sub
stos
jns
push
sub
in
fs
adc
loop
loop
sbb
sub
fnstcw
cs
inc
mov
dec
mov
jae
sti
push
adc
push
and
xlat
ret
xchg
jnp
push
ficompl
mov
aad
or
pop
cmpsb
or
call
cmpsb
adc
out
out
cmpsb
stos
mov
dec
xchg
adc
pop
push
xor
inc
mov
lea
icebp
sbb
out
xor
orl
sti
lea
and
cwtl
out
lds
jno
xor
rcl
xchg
pop
loope
leave
rclb
cmc
imul
ss
inc
mov
mov
bound
push
adc
iret
cmpl
inc
hlt
xor
fsubr
stos
loopne
mov
fsubrl
scas
stos
cmpsl
adc
sub
xchg
sti
xor
stos
mov
jmp
inc
add
shrl
out
pop
push
mov
lret
cwtl
sarl
ficoms
mov
lods
mov
insb
mov
decb
adc
mov
ds
cmp
push
cmpsb
sub
inc
cmc
repz
pop
out
imul
add
shr
pop
mov
mov
loopne
dec
dec
pop
mov
orb
xchg
insl
hlt
les
sbb
inc
sbb
mov
daa
pop
leave
popf
imul
pop
dec
imul
xor
inc
fs
mov
inc
daa
xlat
mov
lea
sub
xchg
cli
xchg
sub
inc
hlt
ds
into
inc
sbb
xchg
fcmovu
jecxz
icebp
movsl
inc
repz
test
mov
push
fldt
lea
je
decb
movsl
push
inc
jp
jo
mov
lods
fdivrl
mov
mov
push
cmp
mov
jl
out
push
stos
xlat
lret
cmp
pushf
add
jno
fwait
or
jbe
jno
xlat
bswap
sub
data16
inc
test
jmp
mov
cmpsb
add
xchg
lret
mov
push
int
jg
xchg
lahf
mov
jl
pusha
and
sub
push
pop
dec
jo
and
mov
jnp
pop
jns
sbbb
jge
call
mov
add
ja
rcr
jmp
stos
iret
jg
rorb
sub
adc
mov
or
ret
mov
mov
push
inc
jge
or
mov
push
ret
cmp
adcb
cmc
adc
fs
pop
dec
cmpsl
push
faddl
dec
sbb
xor
dec
enter
xor
jae
push
sbb
mov
push
pop
inc
call
in
sbbl
mov
push
mov
div
pop
icebp
pop
mov
fisttpll
cmp
cltd
sub
std
cmpsb
xchg
dec
mov
xchg
lods
xchg
sbb
lods
sub
imul
push
sbb
mov
out
mov
xor
fstpt
lret
mov
mov
ljmp
fs
loopne
jle
imull
jae
jmp
and
jmp
mov
mov
loope
push
xor
pop
pop
xor
outsl
and
mov
adc
movsl
in
pop
sbb
inc
inc
cmp
cmp
jecxz
popf
sub
or
movsl
xchg
dec
mov
in
stos
cwtl
pop
ja
popf
fs
inc
add
xor
inc
xchg
mov
lret
ljmp
cld
jnp
outsl
test
jnp
int
mov
in
divb
and
shlb
mov
mov
push
xor
insb
sbb
dec
enter
mov
mov
push
jp
sahf
ss
or
jmp
addr16
dec
dec
add
fs
cmpsb
js
repz
lret
aas
fisubl
push
inc
push
push
inc
mov
pop
repz
xchg
mov
and
repnz
dec
mov
andb
xchg
dec
jg
pushf
cmp
add
mov
push
xorl
call
jo
out
push
push
daa
sub
ds
dec
sarb
push
jp
xor
loope
pop
mov
xor
call
in
jmp
push
mov
fcmovu
test
insl
cmpsb
xor
adc
pop
insb
cmp
jne
add
pop
mov
int
sub
addr16
mov
mov
inc
sbbl
and
sub
fnstcw
sub
xchg
sub
out
and
mov
cmp
pop
inc
cld
xor
sti
adc
jb
lods
jno
jbe
popa
lods
sarb
cmp
jmp
add
loopne
shlb
sbb
iret
out
lods
inc
insb
test
mov
push
movsb
insb
sbb
loope
out
mov
push
not
sub
in
arpl
sub
add
addb
out
sub
repnz
add
cld
or
testl
ffree
and
jle
fsubl
lock
push
mov
push
out
test
push
sahf
cwtl
xlat
push
fidivrl
aas
imul
jg
ljmp
dec
lahf
dec
add
sahf
xchg
lds
rclb
push
or
push
inc
dec
cwtl
adc
and
das
jmp
rorb
cld
jp
insb
cmp
jecxz
pop
mov
jmp
dec
mulb
xchg
dec
cmpsl
sbb
mov
stos
push
mov
rcrl
mov
stos
push
std
mov
shrl
ret
mov
fstp
and
dec
push
mov
jle
mov
gs
jle
leave
or
fistpl
cmovl
pop
push
cwtl
xchg
pop
push
fisttpll
pop
inc
push
xlat
xchg
jmp
mov
icebp
rorl
mov
test
imul
sbb
test
pop
in
xchg
xor
sbb
sti
dec
pop
test
adc
inc
cmp
lcall
out
sti
popa
pop
mov
inc
mov
shlb
cld
fwait
mov
sub
fyl2xp1
out
addr16
test
adc
xor
xchg
popa
sti
outsb
cmpsl
lods
push
pop
pop
xchg
mov
adc
sub
pop
xor
xor
out
lahf
cmp
jecxz
dec
push
xchg
test
push
mov
cmp
xchg
cli
xchg
adc
xor
int
es
adc
in
aam
punpckhdq
int3
insb
scas
out
cld
xor
stc
mov
cmpl
cmp
cmc
add
out
movsl
lcall
inc
test
jge
push
stc
scas
xchg
shl
scas
mov
faddl
subb
mov
jne
jle
jl
jmp
xlat
stos
jnp
bound
dec
pop
in
ja
mov
and
mov
add
mov
push
dec
mov
imul
cmp
test
cmp
jg
or
pop
xchg
mov
shl
shl
in
and
mov
pop
lods
add
shlb
push
mov
popa
loope
jg
dec
movsb
add
pop
outsb
jle
aad
or
cmpsb
repnz
test
cmp
pop
sbb
enter
or
cmp
inc
lods
mov
xchg
xchg
aad
not
xor
sti
hlt
jno
cmp
je
adc
lds
sub
mov
add
or
push
test
fcmovnbe
inc
lcall
push
mov
arpl
sub
pop
sarb
in
out
test
mov
hlt
push
out
push
das
sbb
pop
xchg
jle
fcomps
inc
aam
out
fs
sbb
or
or
int3
les
outsl
in
inc
sti
sub
vpunpckhbw
xchg
mov
fs
pusha
inc
test
movb
retw
lods
aaa
cmp
sbbb
pop
int
xor
adc
mov
mov
decb
mov
xor
mov
ja,pt
es
into
pop
and
repz
aaa
cmp
cli
dec
and
je
les
mov
fimuls
mov
cmpsl
insb
outsl
mov
fbld
movsl
ror
push
loope
push
mov
push
pop
fidivl
fidivl
mov
xchg
loop
gs
outsb
jecxz
loop
std
xor
mov
enter
mov
test
lahf
inc
or
popa
dec
inc
adc
gs
fistpll
out
mov
xchg
outsb
jecxz
pop
daa
outsl
push
shll
mov
cs
mov
mov
inc
aas
icebp
push
in
pop
inc
out
inc
insl
imul
xlat
popf
iret
daa
mov
ss
cs
fcomps
test
xchg
jg
data16
push
jne
fcomps
int3
mov
xor
loopne
sbb
cmp
clc
int3
rclb
rcr
shrl
sysexit
es
testl
mov
xor
sbb
fldcw
pop
xchg
jae
mov
pusha
movb
jle
or
jne
sub
mov
jmp
cwtl
ret
mov
cltd
inc
loop
xor
xchg
jmp
fsubl
movsb
ficoml
test
mov
pop
or
jb
or
insb
inc
neg
in
mov
in
xchg
fdivrl
or
repnz
sbb
imul
lret
jo
repz
fcoms
out
cmp
jns
cmpsb
mov
cmp
inc
or
cld
mov
mov
push
int3
imul
dec
xlat
je
inc
fcomps
daa
adc
and
inc
xchg
jecxz
lret
cli
inc
cli
loopne
sbbl
fcoml
or
mov
sbb
or
sbb
leave
roll
add
mov
pop
adc
sahf
mov
mov
out
test
and
jmp
mov
in
mov
mov
sbb
aam
andl
lret
shll
lods
dec
iret
out
adc
xchg
sbb
jnp
cmp
sbb
add
jecxz
fmull
in
ja
mov
pop
add
arpl
or
imul
insb
push
aaa
push
cs
fildll
dec
pop
orb
jecxz
inc
cmp
out
push
js
mov
ja
push
or
repz
jmp
fs
adc
and
cld
insl
into
cmp
mov
out
in
out
and
or
roll
push
cld
jmp
loope
or
fists
ffreep
mov
cmp
rolb
fld1
fcmovb
mov
test
jecxz
arpl
pop
sar
sbb
lret
icebp
scas
adc
scas
jecxz
aas
and
aam
ret
pusha
mov
iret
mov
add
stos
mov
push
xor
out
jne
mov
pushl
push
cmp
push
dec
mov
nop
xchg
push
mov
call
fnop
or
sbb
xchg
jbe
cmp
mov
dec
ja
adc
pop
imul
lret
mov
cmpsb
pop
fs
push
pusha
ds
stos
or
rcrb
lret
outsb
nop
inc
mov
inc
cltd
or
dec
cs
lds
hlt
jns
jecxz
push
xor
jns
jge
xor
inc
mov
scas
ret
cmpsb
in
rcl
sub
fdivrl
dec
inc
dec
push
xor
adc
add
mov
add
jle
adc
ret
adc
pop
mov
pop
aad
pop
leave
sarb
insb
mov
bound
addl
ljmp
jnp
cmp
mov
fsubl
jmp
lock
mov
repz
cmpsl
loope
cmp
or
xor
js
inc
call
scas
test
lcall
daa
add
loope
aas
loope
cltd
sub
bnd
lods
xchg
and
xor
gs
mov
sarb
add
add
fwait
icebp
mov
jge
mov
inc
mov
pop
les
mov
imul
push
test
dec
jo
inc
lods
mov
xor
popa
and
mov
or
push
mov
repnz
lock
adc
cwtl
jae
outsb
jg
jp
lret
cmpsl
pop
in
jmp
dec
add
mov
xlat
outsb
and
mov
stc
es
addb
outsl
fs
mov
repnz
enter
pop
pop
pop
sar
leave
stos
pop
mov
cmc
fucomp
outsl
mov
loop
jle
dec
mov
dec
xchg
pop
sbbl
inc
pusha
int3
jb
xchg
inc
and
pop
stos
push
iret
pop
ja
scas
lret
repz
shll
xor
cmpsl
and
adc
push
outsb
xchg
insl
jle
cmp
pop
jmp
js
lods
test
push
jl
sub
pop
test
cwtl
jbe
outsb
or
dec
adc
movsl
lret
mov
lds
xor
or
add
ret
incl
or
sub
fwait
out
dec
xchg
inc
cld
pop
lret
stc
lods
into
xor
data16
movswl
ljmp
push
sub
sub
hlt
dec
jns
lods
shll
xor
push
inc
insl
fdivl
mov
and
sub
loope
pop
insl
inc
div
mov
jle
in
xchg
mov
inc
je
imul
jnp
pop
mov
icebp
fdiv
test
jmp
shr
je
or
dec
scas
out
cmpsb
add
xor
sub
xchg
in
and
pop
sbb
xor
dec
int
mov
jl
mov
out
push
xchg
or
pop
push
push
jae
arpl
xchg
mov
add
and
and
pop
and
dec
cld
sti
push
test
sbb
lods
not
dec
sbb
fcoml
js
mov
inc
pop
jo
dec
cmp
in
fld
mov
push
movsl
xchg
and
scas
cmp
cltd
xor
int3
push
in
sarl
add
popf
jp
inc
mov
inc
adc
mov
ja
scas
add
mov
popa
sub
jb
mov
mov
gs
push
in
repz
xchg
lcall
push
jmp
jl
rcrb
shl
pop
fwait
pop
xchg
push
scas
xchg
enter
nop
imul
outsb
sub
leave
scas
adcl
in
mov
enter
adc
ljmp
insl
add
idiv
push
cs
jle
mov
popa
push
push
inc
sub
icebp
lds
cmp
push
aaa
push
push
mov
js
mov
jmp
xorl
add
mov
scas
sbb
sbb
nop
xor
out
sbb
fcompl
loope
dec
fisttpl
lahf
mov
movsb
push
ret
out
into
xchg
pop
sbb
dec
fs
loope
push
inc
adc
or
sbb
cmp
pop
xchg
pop
add
jg
sub
insl
xchg
push
out
adc
pop
push
rcll
adc
or
inc
sti
stc
fld
sbb
jecxz
cmc
outsw
out
push
cli
rorb
scas
push
dec
mov
cmpsl
ficoms
dec
jp
push
aad
popa
pushf
enter
cmpsl
jno
add
sub
cmp
test
jnp
sbb
xchg
jnp
mov
test
and
dec
repz
dec
push
mov
push
addr16
cmpsb
sbb
cmp
in
cli
test
imul
and
pop
fidivrl
jp
bound
aaa
pop
cmpsb
repnz
ficompl
sub
or
fsubrs
push
stos
mov
pop
mov
ja
test
icebp
das
sets
pop
ffreep
add
or
mov
inc
fcmovnu
adcl
mov
sub
add
mov
repz
xchg
adc
inc
test
insb
cmpsl
adc
out
das
ja
and
out
push
and
lahf
fwait
jp
adc
pop
rol
fsubs
lret
cmpsb
and
ljmp
xchg
or
dec
stos
sbb
pushf
aad
push
pop
movsb
popf
sti
cmp
scas
mov
inc
sbb
int
jge
add
test
ljmp
mov
sbb
cmp
sbb
hlt
int3
out
lock
mov
int3
je
sub
mov
sbb
dec
gs
js
pop
nop
or
inc
add
mov
repz
bound
xchg
shlb
popf
xor
push
add
aam
xchg
jg
js
movl
push
ret
and
jb
scas
push
mov
jecxz
insb
shr
imul
mul
pop
mov
dec
lcall
inc
jns
push
scas
mov
sahf
ss
push
adc
leave
mov
in
jp
xchg
sbb
or
cld
sahf
gs
fstpl
push
cmp
lea
jmp
lea
les
push
je
es
lock
push
pop
jp
sbb
xchg
mov
or
xor
or
push
or
cmc
adc
lea
subl
or
and
testb
rcrb
cmp
and
xchg
cmp
addl
mov
stos
insl
inc
jecxz
test
popa
mov
and
push
sbb
std
cmp
add
cmpsl
jmp
mov
inc
push
mov
jns
or
xor
dec
jmp
xchg
je
es
dec
lahf
arpl
push
fdecstp
xchg
adc
stc
ret
imul
sbb
cs
inc
lods
into
mov
pcmpeqd
mov
in
sub
jo
dec
pop
fldenv
mov
outsb
push
addr16
daa
movsl
es
mov
pop
mov
in
aas
inc
outsl
add
xchg
sub
push
int3
jnp
mov
push
inc
inc
mov
cwtl
daa
xor
pop
mov
cmp
xor
adc
lret
jecxz
shlb
inc
sub
int
imul
inc
xchg
daa
js
pushf
pop
cwtl
outsb
or
sub
adc
mov
and
scas
push
sub
mov
sub
dec
fidivrl
outsl
pop
scas
stc
movsb
push
adc
lcall
movsl
aaa
dec
aaa
jo
flds
add
test
xor
jb
fiaddl
push
ret
mulb
push
cld
out
pop
in
shrb
pop
push
mov
stc
push
and
cltd
cltd
pop
fsub
xlat
fcomp
push
xorl
xor
xlat
stos
dec
cmp
lock
mov
jns
test
dec
sarl
lds
xor
rorb
popf
adc
xchg
fs
or
mov
sbb
ret
pop
mov
jb
loope
int
fwait
lds
xchg
ljmp
popf
movsb
addr16
and
test
sub
outsl
mov
add
xchg
fbld
adc
orb
push
jo
stos
mov
es
inc
fldcw
add
xor
mov
loop
and
gs
in
or
outsb
mov
mov
inc
dec
mov
or
mov
cmp
xchg
fsubrl
ljmp
xor
xor
out
lds
aaa
arpl
pop
outsb
mov
cmpsl
sub
mov
xor
mov
cs
scas
adc
mov
dec
out
movsl
and
test
and
aas
xchg
fadds
sbb
test
testl
das
mov
das
fstpl
adc
out
pop
lods
insb
sti
push
sti
xchg
stc
in
sub
mov
dec
repnz
fbld
lds
push
addb
sub
into
xchg
push
int3
emms
sbb
fisttps
sub
loope
pop
ljmp
push
jns
jnp
jecxz
lock
lcall
push
test
dec
int3
sbb
pop
pop
lahf
sbb
push
pop
outsb
rcrl
mov
int
jg
mov
roll
call
hlt
cmpsl
fnsave
adc
cmc
addr16
clc
addr16
jne
lcall
gs
jae
pop
fistpll
xchg
dec
add
lods
sub
mov
repz
leave
test
nop
sbb
dec
mov
xchg
jb
cmp
pop
je
or
push
enter
sub
stc
mov
inc
outsb
jle
adc
fcomps
out
jg
xchg
cmp
add
pop
test
lcall
dec
ds
lret
lods
rclb
into
test
inc
mov
adcl
loope
icebp
mov
pop
push
std
insl
test
add
xor
stos
and
or
rorb
or
imulb
adc
dec
push
jmp
div
push
pusha
sarb
daa
push
nopl
push
xor
stos
xchg
icebp
and
mull
jne
cmp
loopne
ror
insb
insl
sub
and
mov
flds
mov
rolb
fldcw
fs
add
pop
xchg
pusha
aam
shlb
dec
les
sub
mov
mov
cmpb
dec
enter
jecxz
insb
dec
fs
cmp
icebp
outsb
mov
push
mov
sub
ljmp
aam
adcb
jno
add
test
mov
sbb
pop
sbb
push
add
scas
fbld
shlb
je
dec
add
xchg
cmp
and
idiv
pop
cmp
inc
mov
in
jp
xchg
repnz
and
sbb
fstp
sub
mov
in
dec
adc
out
cmp
enter
inc
sub
fcoml
add
push
aam
mov
out
int
sti
adc
cli
and
gs
in
das
jmp
push
cmp
repz
es
fstpt
or
push
add
cs
jecxz
add
dec
jmp
gs
push
jnp
loop
push
cmpb
pop
mov
pop
mov
ret
shll
mov
test
cwtl
and
mov
sub
adc
aam
mov
sarl
mov
sarb
mov
repz
jno
jno
pop
mov
out
push
push
lds
cmpl
add
js
push
lcall
xchg
pop
gs
fwait
aam
xor
mov
mov
int3
or
fistps
arpl
popa
setg
push
sub
mov
ret
pop
add
dec
pushf
pushw
les
pop
xchg
into
enter
sbb
mov
sbb
mov
mov
dec
cli
flds
aam
repz
jle
cmp
sahf
out
mov
imul
cld
or
jle
jg
mov
and
xlat
test
inc
mov
pop
mov
fadds
sar
repz
inc
filds
outsl
mov
add
imul
xchg
int3
xchg
in
pop
faddl
sub
mov
pop
shll
cwtl
pop
adc
sub
adcl
xlat
mov
mov
in
add
xchg
cmc
sbb
xor
inc
mov
sbb
sbb
xchg
rorl
sub
adc
mov
ret
cs
aaa
xor
jae
ret
sbb
add
inc
push
insl
mov
pop
gs
xchg
addr16
pop
mov
cmp
stos
jb
lods
sbb
ja
je
iret
nop
xchg
pop
xlat
dec
popf
and
imul
jge
xor
ret
leave
mov
test
mov
xor
pop
daa
mov
lret
ficoms
fsubl
cs
imul
mov
loopne
mov
mov
jne
push
cmp
jno
pusha
pop
xorb
int3
jmp
ja
lret
sti
fsubl
mov
lea
in
insl
adc
popf
push
dec
jo
pop
cmc
push
call
into
mov
xchg
push
pusha
jmp
jmp
and
ljmp
add
mov
mov
jecxz
cld
dec
ret
sub
mov
and
aas
mov
rclb
mov
or
adc
dec
and
ja
xchg
mov
push
das
in
mov
and
mov
xchg
adc
cltd
mov
lock
dec
ss
int3
pop
jl
jns
pop
jl
mov
push
xor
imul
scas
aad
iret
inc
xor
mov
les
push
das
push
add
sahf
mov
adc
mov
or
pop
or
dec
push
xor
in
int
or
out
inc
cmpsb
fcoms
dec
xchg
jl
sub
mov
jle
push
xor
shrb
sub
or
les
sbb
sub
hlt
jne
mov
js
push
gs
aam
sub
imul
cmpsl
cli
imulb
push
push
scas
inc
push
insl
fsubl
adc
xchg
inc
add
aam
and
cmpsl
loope
loopne
or
outsl
mov
mov
push
andb
jae
adc
clc
enter
mov
pop
push
inc
mov
aam
or
lods
jle
xor
xor
hlt
xor
call
insb
sbb
faddl
fcmove
cli
call
or
push
push
mov
or
jp
jmp
cmp
cmp
sbb
xor
das
aaa
insl
mov
mov
mov
cmpsb
push
cmp
rclb
insb
in
mov
divb
lods
mov
mov
divl
rorb
je
movsb
push
jbe
test
mov
sub
xchg
cmp
xor
addr16
leave
pop
fmull
pop
rorb
cmp
es
mov
jne
in
push
jns
imul
push
dec
mov
xor
out
pop
fistpll
mov
jp
pop
add
pusha
clc
ds
sbb
out
aas
dec
and
leave
xchg
cmpsb
aaa
scas
sub
xlat
sahf
sub
js
cli
popa
stos
cli
mov
dec
cltd
pusha
mov
cmpsl
pop
inc
dec
adc
jg
leave
loopne
cltd
cmp
dec
sub
in
imul
addr16
pushf
in
cmp
arpl
imul
xor
mov
test
or
inc
clc
cli
nop
or
xchg
jp
loop
sbbb
test
fdivrl
lds
imul
cmp
test
scas
sbbl
xchg
sub
ja
test
or
sbb
loopne
insl
nop
std
ds
xor
fs
fwait
push
mov
xor
cmc
loope
cmpsb
stc
cmp
or
dec
jle
jae
dec
adc
jo
mov
and
into
inc
in
aam
loopne
push
stc
into
fsubrl
xchg
je
push
mov
ja
mov
push
xor
push
movsb
movsb
mov
add
fucomi
repz
or
loopne
jne
xor
ja
dec
mov
ljmp
jg
adc
aam
bound
adc
jo
in
push
decl
imul
cmp
outsw
icebp
out
cltd
jg
pop
out
int3
xlat
push
gs
and
mulb
out
shrl
xchg
out
adc
mov
stos
psadbw
clc
bnd
outsl
add
rcrb
jmp
xor
js
cmp
sarl
push
mov
imul
loope
mov
scas
dec
pusha
mov
das
scas
aam
adc
xchg
lcall
dec
jo
inc
cmpsb
ljmp
sub
lcall
in
xchg
push
xchg
mov
iret
add
pop
xchg
push
arpl
nop
iret
scas
add
pop
mov
pop
not
andb
in
adc
sti
jae
ja
pop
and
cli
shlb
cmp
dec
sub
scas
cmp
inc
ljmp
inc
sbb
roll
jmp
xlat
inc
pop
daa
mov
and
rcl
fld
push
xchg
pop
fwait
dec
ds
std
mov
ja
push
inc
xchg
jl
imul
repnz
mov
adc
outsl
inc
js
aaa
scas
dec
dec
stos
in
lea
cmpl
fwait
xchg
jmp
das
ss
out
lods
push
outsb
pop
int3
or
loope
pusha
xor
test
xor
sbb
mov
and
cld
in
mov
fisttps
rorl
test
xchg
mov
ret
xor
sti
adc
lret
adc
insb
jbe
imul
adc
jp
jp
jbe
fs
cmp
mov
push
push
mov
mov
es
and
jo
mov
je
push
push
sub
sub
cmp
push
jae
mov
jns
es
jns
arpl
call
xor
mov
add
repnz
les
cs
sbb
fdivl
push
and
ds
hlt
push
cmc
and
pusha
sahf
push
hlt
mov
nop
aam
jno
arpl
sar
mov
jle
or
mov
or
pop
lcall
and
jno
jg
fcmovu
jle
mov
pusha
xchg
cmpsl
mov
imul
and
addr16
cltd
push
mov
and
cltd
ljmp
out
mov
cwtl
pop
and
lods
jle
add
insl
iret
aad
xchg
xlat
jno
adc
xrelease
aaa
dec
xchg
xchg
and
push
je
mov
mov
jge
mov
les
adc
push
mov
xor
pop
lods
dec
mov
mov
aaa
mov
push
jae
cwtl
fstl
push
or
inc
decl
leave
mov
add
pop
aaa
mov
push
int3
xchg
add
jge
inc
lcall
adc
push
int3
stc
mov
int3
inc
lds
add
lret
dec
imul
in
pop
mov
mov
iret
xor
lcall
in
add
int3
adc
mov
test
aam
inc
xchg
mov
shll
ret
outsl
or
jo
movsb
sbb
loop
out
xchg
pop
add
pop
adc
scas
imul
and
mov
dec
xor
push
mov
ret
cmp
mov
push
jecxz
outsl
mov
push
add
sbb
inc
pop
in
jp
add
mov
sub
jno
xchg
sahf
or
out
xor
adcl
btr
imul
iret
fsub
mulb
pop
jge
mov
jp
sbb
pusha
mov
dec
xor
jge
mov
mov
insl
mov
popa
lods
inc
push
or
repnz
and
add
jge
ret
imul
int3
arpl
and
mov
push
dec
arpl
xchg
dec
push
repz
pop
sbb
mov
xchg
repnz
sti
lock
in
mov
mov
lock
pop
push
mov
inc
mov
lds
sub
mov
xor
decb
or
lods
jnp
mov
popa
mov
pop
mov
cwtl
mov
jmp
out
es
jp
in
punpckldq
jecxz
je
jecxz
addb
sub
push
push
sbb
hlt
adc
jb
inc
aam
push
arpl
je
and
fistps
and
enter
daa
call
lcall
daa
enter
mov
push
shrl
aam
pop
jecxz
sti
lahf
sti
mov
xchg
xchg
sahf
out
ret
scas
les
fs
push
and
mov
cmp
je
fstpt
loop
ss
lea
lds
out
adc
or
push
mov
std
idivl
test
mov
inc
enter
push
imulb
cmp
jmp
push
scas
loop
fstps
xor
pop
test
sub
dec
clc
loop
sub
xacquire
add
je
xor
dec
leave
out
sub
xchg
loop
imul
mov
or
lret
stos
dec
negb
and
pop
dec
pusha
lea
or
cmpsl
mov
int
adc
outsb
es
js
out
xchg
sub
xor
jecxz
ficompl
repnz
lods
ret
clc
dec
mov
std
and
hlt
iret
test
mov
jno
jns
fcoml
jmp
inc
push
xchg
fbld
data16
add
jb
xor
in
mov
inc
dec
xchg
pop
loope
in
mov
sbb
sahf
cmp
xor
mov
mov
xchg
fnsave
jge
jl
lcall
jecxz
les
adc
jbe
or
scas
lods
dec
sub
aad
mov
pop
pop
pusha
xor
in
sub
fidivl
dec
jg
pop
sub
fmul
stc
lea
jae
mov
push
pusha
inc
aas
subl
mov
fisubl
mov
cmp
jns
inc
sbbb
xor
lahf
inc
sub
in
mov
push
int3
cs
mov
dec
add
rol
shrl
dec
sub
mov
pop
cmpsb
mov
push
fwait
mov
fwait
leave
pop
jecxz
jbe
sbb
jecxz
or
inc
and
out
inc
cmpsl
sub
jge
xchg
mov
cld
loop
lahf
test
sbb
outsl
and
mov
jp
pushf
int
push
mov
lods
cmc
fadd
xor
loop
scas
jg
sbb
xor
sub
and
mov
push
notb
cmpsl
push
inc
hlt
cmpsl
fsubr
in
mov
pop
or
mov
imul
in
mov
lea
aaa
and
shrb
or
mov
int3
mov
jl
ficoms
adc
notb
clc
mov
pop
test
adc
mov
xor
popf
leave
jg
rcrl
jae
dec
sub
dec
push
out
dec
shl
mov
sbb
stc
in
enter
sub
fmuls
insl
inc
jp
push
sbb
mov
outsb
outsb
pop
insb
xor
dec
pop
stc
fisubs
inc
pop
adc
in
push
aaa
cmp
dec
or
dec
enter
push
mov
div
daa
cld
fwait
jne
es
pop
push
mov
loopne
nop
jbe
mov
cmpsb
mov
inc
jne
cmp
aas
adc
out
call
inc
dec
shr
les
mov
jecxz
push
sti
cli
pushf
adc
sub
cmp
out
outsb
mov
rolb
imul
mov
cmp
push
and
fistpll
daa
sahf
xlat
leave
in
inc
sbb
addr16
out
mov
xchg
int3
mov
mov
or
fsubp
rolb
out
jle
test
jno
insl
jb
clc
into
and
sarl
stos
test
inc
and
nop
jecxz
pushf
mov
mov
scas
in
insb
and
cmp
add
jnp
daa
xchg
jmp
or
push
inc
push
cltd
xor
clc
and
inc
in
int
lcall
push
and
addl
mov
add
push
add
mov
aad
mov
lret
xchg
push
loopne
cmp
sbb
fildl
mov
enter
jbe
sti
xor
lock
add
cmp
xchg
xchg
jo
mov
orl
insl
insl
dec
icebp
or
jns
in
bound
add
int3
sbb
or
loopne
mov
adc
lock
outsl
lods
pop
lcall
test
cmpsb
push
xchg
push
rolb
dec
and
xchg
movhps
adcl
and
ret
jle
push
bound
adc
push
lret
cltd
mov
add
dec
out
pop
add
cmpb
sahf
insb
testb
cmp
mov
add
mov
jbe
jne
cmpsl
push
and
push
negl
lock
sbb
sub
fildll
fwait
or
mov
cld
out
outsl
shl
mov
jnp
cwtl
cmp
stos
sbb
jae
mov
cltd
lahf
adc
icebp
les
push
push
mov
push
in
gs
mov
mov
mov
mov
mov
inc
dec
mov
xchg
addl
insl
mov
or
push
addr16
sbb
loopne
fwait
std
pop
sub
data16
lret
in
dec
lret
push
lods
flds
dec
mov
push
inc
adc
lock
cmpsl
fs
jns
push
test
pop
test
lret
xchg
add
lea
mov
ss
dec
inc
push
les
scas
sarb
pop
mull
adc
fcom
aaa
pop
xlat
pop
sti
scas
mov
enter
xchg
imul
dec
in
aad
lret
sbb
xchg
std
sub
lret
pop
in
lahf
es
push
scas
lods
cmp
mov
cwtl
je
aad
leave
shlb
aad
int
dec
sbb
aad
mov
mov
lock
mov
fidivl
sub
dec
call
mov
add
fdivs
lret
xchg
add
ja
push
gs
xchg
sbb
cli
jmp
popa
adc
test
dec
sub
xchg
es
sbb
pop
pop
mov
mov
stos
or
sbb
push
in
jo
fs
inc
xchg
int
cmpsl
jno
jmp
fdivrp
cmc
ss
push
pop
out
lcall
or
xor
scas
fisttpll
mov
ret
add
xchg
and
daa
cs
js
pop
mov
push
xchg
leave
out
adc
and
movsb
mov
in
inc
cmpsl
push
push
sub
mov
cs
dec
sahf
sub
repz
xchg
scas
loop
es
popa
mov
jp
imul
jg
xlat
pop
cmp
and
lret
test
sbb
rclb
mov
fadds
cmpb
cwtl
shlb
dec
dec
lock
push
sub
mov
push
xlat
cmpsl
sub
or
sub
pushf
ja
repz
cmp
aad
sbb
inc
fcmovnbe
fucomp
cmp
out
mov
movsb
dec
fwait
in
test
idivb
dec
pop
sbb
pop
aaa
insb
in
mov
cs
stos
jge
leave
data16
xchg
pop
mov
stos
out
pop
xchg
adc
xorb
sbb
mov
mov
iret
mov
mov
divl
add
dec
dec
addr16
les
mov
test
test
add
add
hlt
imul
notl
in
push
jle,pt
daa
fnstenv
jmp
pop
mov
filds
jo
push
gs
insb
repz
jnp
test
int3
add
pop
add
mov
mov
aas
ds
add
aaa
loop
mov
fwait
mov
pop
cwtl
add
adc
mov
iret
test
push
add
mov
fwait
sub
lock
cltd
mov
sbb
sbb
scas
cmc
xor
or
and
pop
test
mov
cmc
test
jnp
mov
pop
mov
int
push
dec
int
stos
jne
mov
cmp
loopne
push
gs
pop
mov
mov
xchg
jae
sbb
sbb
repnz
pop
call
mov
cs
pop
cmp
mov
sub
xchg
adc
pusha
sub
fldl
mov
jns
imul
test
dec
mov
ss
rorl
out
jne
scas
pusha
shl
cltd
insl
insl
lds
ja
bound
xor
lods
mov
pop
cld
in
loop
out
out
cli
movsb
test
dec
cmp
mull
dec
pop
repz
andl
jmp
push
xor
jmp
icebp
roll
daa
int3
push
sbb
lret
jmp
das
push
xor
xor
mov
jge
fdivs
pushf
xor
mov
jbe
mov
leave
add
inc
gs
cltd
sbb
xchg
movsl
cli
inc
pop
loope
daa
cmpsb
mov
pop
scas
sub
insl
mov
sbb
call
and
fcomip
push
mov
imul
mov
test
cli
dec
xor
dec
arpl
push
mov
nop
das
cmp
out
sahf
cmpsb
stos
mov
arpl
or
mov
jb
xor
lea
push
mov
jae
mov
sbb
fisttpll
std
shrb
mov
pop
xorb
repz
dec
popa
fidivl
notb
enter
orb
sub
xchg
ja
in
sti
dec
sti
mov
icebp
fmuls
out
rcrb
xchg
jecxz
push
std
push
mov
lret
imulb
inc
das
inc
sbb
xor
dec
ficomps
inc
add
sbb
popa
ja
jae
fcomip
mov
out
xor
dec
jg
mov
aas
cmpsl
rcrl
into
lahf
sbb
sub
jmp
lock
out
adc
inc
adc
test
adc
stos
and
push
jmp
ret
ja
pusha
aaa
and
pop
fistps
mov
pop
pop
xchg
pop
or
imul
add
sti
mov
push
xorb
fs
shrl
lahf
cmp
mov
test
insl
nop
aad
ret
xchg
pop
js
sub
insb
fs
adc
rclb
xchg
daa
jns
push
rclb
xchg
lea
repz
adc
popa
push
and
cwtl
sub
xchg
hlt
cltd
mov
repnz
pop
imul
popa
pop
stos
xor
das
pop
flds
ret
dec
and
leave
pop
sbb
sub
inc
ss
xchg
jle
pop
lret
inc
push
pop
aad
ss
add
sbb
push
adc
mov
mov
je
inc
add
sub
add
out
mov
xchg
jne
js
jae
push
adc
mov
into
out
daa
fistps
shr
ds
rclb
pop
or
xchg
stos
jb
addr16
dec
jge
pop
sti
repz
jbe
inc
movlps
or
adc
push
sub
imul
in
sub
lods
dec
pushf
test
cld
dec
mull
push
xor
or
scas
pop
add
dec
jb
mov
out
cmpsb
xchg
mov
jb
and
mov
outsl
test
lret
mov
mov
sti
repnz
xchg
outsb
push
rcrb
stc
negl
dec
jns
loopne
push
sbb
mov
inc
inc
cli
subb
push
fdivrs
mov
ret
cmc
inc
lcall
mov
outsl
out
dec
movsl
data16
faddp
adc
ss
shll
mov
inc
jb
mov
shl
mov
fistpl
int
dec
repz
cmp
xchg
notl
push
fcoms
mov
cmp
ret
sbb
cld
mov
lcall
xchg
aas
testb
test
scas
inc
push
cmpsb
jnp
pop
js
xor
lea
insb
xchg
mov
sub
sbb
jg
push
and
outsb
fisttps
out
push
push
push
int
lock
bound
cmp
pop
mov
add
jns
into
lock
mov
cmp
jne
rcrl
dec
add
push
push
je
fdivl
ljmp
inc
fmuls
out
ds
mov
ret
jb
das
repz
ljmp
mov
or
mov
xor
lods
mov
inc
pusha
push
sbb
fildl
loopne
xor
stc
movsb
js
in
xor
push
fidivs
push
jno
mov
int
insb
or
mov
sub
data16
pop
pop
mov
leave
mov
fists
ret
mov
out
mov
notb
insl
sbb
dec
jmp
xchg
add
jmp
pusha
xchg
fcomi
lret
dec
mov
push
xchg
xchg
shlb
cmp
into
mov
dec
sub
das
xchg
and
call
orl
jecxz
inc
sbb
call
stos
jae
int3
mov
mov
fs
mov
leave
adc
inc
daa
xchg
aas
ffree
popf
stc
out
add
icebp
pusha
inc
fs
jle
push
add
jbe
xor
outsl
lcall
or
push
outsb
out
call
xchg
jl
xchg
xchg
dec
and
and
sarl
xchg
jae
and
ja
pop
sub
cmp
rorb
pop
inc
test
push
out
mov
dec
jg
es
in
je
jnp
add
add
shlb
repz
pop
jge
push
scas
outsb
jo
add
scas
cld
test
movsl
pusha
fsubrs
push
aas
lahf
jne
test
outsb
lock
cld
outsl
sub
loopne
cltd
jo
cmpl
and
sbb
imul
clc
push
pop
pop
fcoml
rcl
xor
adc
pop
inc
mov
in
mov
cltd
iret
test
sahf
xor
jae
clc
aaa
jecxz
fiaddl
jg
xor
insl
movsb
mov
dec
mov
shrb
adc
cmpsl
push
enter
ret
cwtl
mov
dec
pop
jg
pop
into
out
and
and
sbb
adc
and
in
dec
dec
jl
mov
sub
lock
push
push
xorb
sub
adc
xchg
test
or
push
sbb
and
aaa
adc
xchg
jbe
lcall
push
movsl
xchg
pushf
fsubs
adc
test
dec
or
dec
repz
aas
mov
jmp
clc
enter
jne
cmpsb
add
mov
ja
inc
fiaddl
insl
xor
push
lret
icebp
jnp
in
shlb
fisubrl
sbb
xchg
mov
test
icebp
nop
int3
mov
mov
lret
mov
push
clc
jmp
and
mov
mov
mov
les
sbbb
ja
xchg
sbb
mov
lret
adc
inc
int3
xchg
cmpsb
subl
jne
orb
mov
xchg
scas
repnz
adc
jp
push
rcl
es
hlt
out
ret
pusha
test
hlt
scas
xor
sub
inc
and
test
push
push
jae
mov
push
mov
dec
adc
shlb
mov
test
pop
and
shlb
xlat
xchg
pop
stos
jae
in
jecxz
mov
cmpsl
xor
fldcw
hlt
stos
enter
mov
sbb
vandnps
das
pop
inc
jg
shl
sub
lods
jae
push
or
lsl
jne
jl
sbb
decb
xor
aas
xor
cmc
mov
call
mov
mov
sub
sti
mov
add
and
dec
push
xchg
in
mov
in
pop
sub
in
lock
std
sub
mov
xlat
push
rorl
lods
xchg
inc
out
lods
inc
mov
mov
test
aas
jbe
xor
jnp
and
inc
lret
sti
lahf
std
xchg
pop
push
pop
inc
jecxz
and
movsb
jb
push
aam
icebp
les
leave
mov
pop
jnp
jg
jmp
pop
adc
out
in
loop
fcompl
pop
cmp
adc
push
shrb
data16
xchg
das
mov
outsb
decl
lcall
mov
sub
cmp
cld
jmp
jnp
mov
jno
cmp
loop
push
adc
rcrl
sub
jmp
mov
popf
xor
xchg
adc
sbb
rcrl
popf
xchg
or
ds
loop
sbb
in
or
out
out
push
push
inc
loop
mov
dec
xorb
test
orb
push
sahf
js
xor
int
cli
repz
lods
adc
nop
imul
pop
xchg
mov
jle
cmpsl
xchg
repz
add
dec
add
inc
cmp
icebp
xor
lock
cmp
sarl
movsl
cmp
mov
xor
and
mov
pop
sbb
jnp
and
cmp
push
orps
push
mov
xor
aas
mov
rcll
out
and
lea
push
lahf
nop
mov
jbe
mov
mov
push
push
icebp
lock
jnp
mov
add
imul
pop
xchg
gs
aad
and
push
rcll
sub
jb
xor
jle
push
xorb
test
mov
test
lret
pop
sbb
aaa
push
jge
dec
ror
add
shrl
mov
mov
jnp
lds
xchg
dec
lret
xchg
or
ljmp
js
in
aas
sbb
lods
and
fnstcw
cltd
fsts
push
aas
lahf
iret
aaa
sbb
pop
arpl
in
sbb
jbe
cmp
cbtw
aas
sub
mov
stos
push
push
jno
push
push
pop
mov
push
or
xchg
das
mov
push
dec
aam
inc
repnz
dec
loopne
decl
scas
add
xchg
xchg
push
cltd
ret
pop
cwtl
mov
push
add
mov
movsb
adc
in
cmc
mov
mov
jne
adc
fisubl
xlat
adc
cmp
sub
jnp
cmp
outsl
aad
lcall
idivl
push
dec
mov
and
test
push
fcomps
mov
jnp
enter
jge
or
mov
jle
xchg
xchg
addl
lret
sarb
roll
popf
jns
dec
push
add
add
mov
and
ljmp
dec
push
push
push
mov
scas
std
into
shr
cmp
inc
push
xor
cmp
mov
xchg
pop
jg
xchg
sub
xlat
les
add
adc
jns
in
out
add
and
aas
pop
repnz
stc
dec
cwtl
add
repz
test
es
incb
fwait
mov
sub
jne
ret
rcrb
cmpsb
pushf
jo
xchg
or
iret
mov
mov
sahf
scas
jp
je
fadds
insl
or
orl
dec
outsl
jae
fnop
clc
ljmp
adc
imul
les
clc
push
mov
and
lea
sbb
shrl
pop
ljmp
mov
cmp
outsb
or
cltd
out
mov
push
pop
rclb
adc
inc
cmp
dec
inc
push
sbb
sbb
hlt
cmpsb
jl
and
mov
pop
xchg
jns
sbb
xchg
push
pop
mov
gs
xlat
mov
cs
or
xchg
call
inc
inc
push
push
lahf
scas
xchg
into
movb
int3
or
inc
xchg
roll
cltd
es
jge
cmpsl
js
sahf
adc
test
sbb
fldl
push
cltd
icebp
ljmp
data16
push
clc
pop
jae
aaa
mov
subl
or
js
mov
inc
shlb
dec
ljmp
fucom
rorl
dec
lds
jo
cmpb
xchg
call
pop
mov
test
cmp
jns
rclb
sbb
and
leave
sbb
in
ret
sub
and
sub
push
leave
int
sarl
push
pop
pop
pop
fisubrl
mov
jno
in
lods
loope
and
sbb
lret
sti
push
adc
rcll
push
lret
in
cmovne
cld
fisubrl
rcrb
in
and
mov
test
xchg
ss
jo
dec
call
inc
jl,pt
sbb
ret
loope
inc
in
sbb
loope
pop
and
adc
mov
mov
popf
xchg
notb
xor
cmpsl
dec
mull
subl
repz
or
jno
cld
xchg
lcall
std
rcrb
fldl
xchg
pop
pop
or
popa
mov
shrl
stc
scas
pushf
out
sbb
inc
fldl
loop
iret
fnstcw
sub
mov
clc
sub
sahf
mov
fs
adc
fwait
xlat
cmpsl
movsl
and
dec
in
test
jg
or
cmp
mov
jne
adc
mov
icebp
out
jg
les
int
ss
xlat
pushf
pushf
call
jae
inc
mov
mov
movsb
mov
decl
mov
ret
movsl
mov
cmpsb
adc
shrb
dec
jecxz
or
arpl
cmp
jecxz
paddq
adc
push
insl
sbb
scas
lret
push
scas
scas
cmp
cmpsl
dec
cmp
or
xor
mov
popf
xlat
mov
icebp
inc
int3
fsts
or
addr16
adc
mov
mov
in
in
ret
cmp
pop
cli
stos
fs
sbb
xchg
popf
psubq
ds
fwait
cld
jmp
popf
pusha
inc
sub
push
fwait
jno
pop
aas
jb
inc
cs
pop
outsl
xlat
mov
inc
rep
mov
dec
movsb
ret
mov
ja
dec
xchg
jg
mov
mov
call
jmp
loopne
or
lods
push
loope
xchg
sarl
mov
xchg
cmc
push
inc
dec
das
mov
outsl
cmpsb
shrb
rcrl
jnp
dec
je
inc
dec
lods
cmpsb
push
sbb
lods
dec
jne
mov
mov
push
push
jecxz
cmpsb
or
and
cmp
inc
movsl
sbb
pop
adc
sub
movsb
xor
fcoml
sbb
lods
lahf
pop
pusha
imul
dec
je
sub
and
xor
jb
add
mov
pop
xchg
adc
or
lods
jbe
hlt
ss
jae
out
cltd
mov
xor
mov
jp
mov
push
pop
sub
pop
adc
stos
inc
subb
nop
and
movsl
cmp
out
inc
push
mov
adc
subb
insl
dec
shll
test
push
mov
dec
aaa
daa
enter
mov
ja
rcll
outsl
aad
lcall
push
mov
bound
call
addl
lock
add
mov
jno
dec
and
mov
lcall
ja
aad
mov
sbb
xchg
mov
insb
add
sbb
leave
shl
xor
cmp
dec
iret
cmpsb
push
xor
orl
xchg
cmc
sub
fs
pop
stc
std
fst
dec
add
mov
pop
jle
cmpsb
sub
pop
cld
dec
dec
leave
div
pop
xor
pop
fstpt
js
or
fwait
cmp
xchg
mov
mov
dec
push
push
push
sub
add
dec
cmp
add
or
sbb
sub
ret
pop
lcall
and
icebp
xor
pop
in
cmp
lea
add
pop
and
mov
jne
pushf
inc
add
push
fwait
jg
cltd
mov
sbb
push
jb
mov
out
inc
mov
aas
cmp
mov
pushf
aaa
pop
les
arpl
add
fdivl
xchg
pop
out
gs
dec
shrb
inc
test
dec
sbb
xchg
xorb
lds
test
das
hlt
ret
scas
loopne
push
fistl
hlt
xor
arpl
scas
cwtl
stos
sbb
adc
popa
and
inc
add
cmp
test
xchg
arpl
arpl
xor
lea
sbb
and
dec
das
xchg
inc
repz
leave
and
inc
sbb
jb
stos
imul
inc
lret
mov
sub
es
outsb
aas
push
imul
incb
or
cmp
loop
or
rclb
push
push
push
push
mov
or
dec
test
out
jnp
push
lods
mov
jnp
in
rcll
insb
aas
mov
push
arpl
xchg
sbbb
je
andb
into
mov
adc
jmp
and
outsb
lret
jp
movsb
or
scas
or
xchg
mov
jb
inc
loopne
pop
sub
imul
out
add
imul
pop
subl
and
mov
sub
pop
rorl
sbb
xchg
dec
aas
mov
inc
ja
push
mov
adc
movsl
fstpl
mov
cmp
jo
inc
clc
rcrl
sahf
bound
lahf
inc
push
xor
push
mov
in
test
and
data16
mov
movsb
iret
les
jne
jl
pop
xorb
pop
outsb
xchg
fdecstp
push
shl
mov
ds
les
xor
inc
pop
loope
xor
sub
loope
mov
mov
fnsave
mov
stc
sahf
ret
subl
sub
lret
push
outsl
mov
cwtl
je
mov
repnz
jp
xor
mov
jle
push
mov
and
push
xchg
fiadds
mov
pmaxub
popf
outsl
aam
sbb
fwait
pushf
push
sub
inc
lahf
outsb
dec
push
div
pop
rep
js
and
push
fildl
inc
jnp
leave
cmp
clc
push
movsb
adc
lods
mov
stos
jns
fs
xchg
mov
cmp
jmp
push
js
lea
xlat
outsl
jo
adc
or
and
sbb
nop
data16
and
cmp
fistpl
ficoml
dec
xor
jmp
pop
sub
jns
xor
pusha
shlb
icebp
pop
data16
rclb
enter
lock
iret
jge
mov
rcrb
push
push
in
jmp
rolb
mov
pop
pop
sbb
nop
dec
xchg
es
sub
jnp
sbb
imul
popf
iret
inc
mov
imul
jnp
adc
pop
sub
xchg
xor
imul
xchg
jp
add
jmp
dec
ljmp
ds
incb
orl
jle
lods
and
xchg
fdivrs
adc
xchg
sti
icebp
fcmovne
out
fmul
adc
out
sub
out
out
xchg
bound
scas
adcb
dec
es
xchg
inc
outsb
les
fmul
or
pop
fldt
mov
jo
cltd
xchg
push
jno
push
fwait
lcall
mov
jmp
cmp
ficoml
ds
loop
xor
sbb
cltd
xchg
mov
test
int3
sub
ja
jle
popa
int3
arpl
mov
push
call
fnsave
adc
movsb
sahf
cmpl
cmp
iret
add
jp
int
gs
xchg
call
ds
test
sbb
ss
cs
add
ficoms
sub
cmp
jle
and
add
push
push
frstor
leave
mov
je
fdivrp
cmpsl
sahf
pop
xchg
ret
push
adc
add
push
inc
mov
mov
xor
or
adc
xorl
push
ljmp
inc
sbb
sub
pop
mov
mov
or
jo
cmp
sarb
cs
mov
ds
xchg
add
ja
dec
sbb
imul
and
mov
jp
mov
lret
cmp
mov
inc
mov
rolb
add
add
push
adc
xchg
lcall
cmp
cli
push
stc
in
push
lds
sbb
push
loope
xchg
arpl
rolb
xlat
pop
mov
into
push
fs
mov
mov
mov
popa
xchg
lods
mov
xlat
addr16
xchg
mov
imul
movsl
jb
inc
mov
inc
sub
mov
test
mov
jo
in
ja
test
pop
lock
mov
xchg
pop
push
mov
clc
out
std
clc
sahf
out
fnsetpm(287
out
rcrb
enter
scas
out
icebp
push
imul
xor
lea
imul
lcall
push
push
stos
out
xchg
fwait
arpl
pop
jge
cmpsb
stc
sub
push
outsb
cli
sarl
mov
filds
bound
or
movsb
ljmp
mov
repz
and
cmp
scas
jo
xor
pusha
andl
into
or
rcll
dec
push
add
dec
mov
out
mov
cmp
daa
adc
decw
xor
add
js
inc
lods
push
out
lock
and
test
mov
stos
cld
ret
cld
fisttps
enter
adc
mov
dec
repnz
std
xlat
not
sbb
outsl
or
aam
test
adc
lock
arpl
rcl
fdivrs
mov
pop
sub
jae
xchg
fimuls
rcr
pusha
daa
xchg
xor
cli
and
jecxz
add
jnp
loop
js
adc
mov
arpl
cmpsb
clc
mov
pop
nop
divl
jecxz
sbb
or
shl
mov
jae
pushf
leave
inc
fsts
mov
mov
ljmp
pop
mov
sub
ret
or
sub
in
xchg
add
or
adc
push
dec
fwait
dec
mov
xor
sub
aaa
mov
stos
sbb
dec
sbb
popf
pop
and
jo
loopne
lock
sbb
pop
ficoml
les
outsb
in
adc
cmp
adc
adc
adc
inc
pop
jg
lock
scas
push
nop
dec
rorl
adc
mov
or
or
fmull
pusha
test
mov
jns
test
jbe
jmp
sub
push
mov
fsts
xor
add
pop
shrl
ss
test
jns
xchg
mov
icebp
fbstp
cmpxchg8b
jnp
lea
cmp
std
popf
lcall
mov
cli
popf
xchg
push
pop
or
dec
xchg
es
cli
scas
dec
jae
stos
mov
dec
repz
ret
stos
and
sbbl
add
xor
add
add
pushf
dec
adc
push
xchg
fisubs
dec
cmpsl
out
inc
cld
pop
adc
dec
loope
push
testl
push
jnp
repz
pusha
arpl
jnp
dec
je
lret
lock
inc
lret
test
cmpsl
inc
dec
adc
add
jmp
jns
sbb
xchg
mov
inc
fisttpl
mov
mov
cmc
xor
lods
repnz
bnd
pop
mov
repnz
pop
and
sub
pop
paddb
inc
push
mov
mov
cmp
mov
ror
sti
jle
inc
test
mov
lods
push
fcompl
in
loope
repz
loope
sahf
scas
lods
lcall
enter
bound
sub
aaa
mov
pop
std
jge
push
je
int
inc
insb
pop
push
movsb
cltd
push
popf
flds
jb
fisttpl
dec
mov
mov
clc
xor
and
insl
push
pop
repz
in
mov
je
imul
or
bnd
xchg
cltd
mov
ret
ljmp
daa
xor
fldt
popa
mov
or
inc
pushf
int3
or
fwait
sahf
rcrb
sbb
sub
or
divl
sub
icebp
je
inc
push
sbb
inc
aad
fcmovbe
movsl
jecxz
leave
fimuls
sarb
xor
ret
mov
push
fs
jbe
lods
push
loopne
jae
in
and
jbe
xchg
lea
push
xchg
lods
cmpsl
dec
mov
inc
cmp
sbb
popl
movsb
aaa
stos
xchg
daa
imul
scas
adcl
sbb
pop
jecxz
or
mov
sbb
dec
jno
lret
pushf
or
adc
ljmp
rcr
add
inc
jbe
or
push
mov
xchg
clc
nop
inc
cli
mov
mov
mov
pop
pushf
hlt
enter
out
pop
inc
fistps
inc
jmp
mov
add
xor
dec
and
adc
ds
int3
add
sbb
xchg
inc
sbb
jp
mov
rol
es
ret
push
dec
or
sub
mov
add
fimull
jb
jle
and
jbe
jb
cmp
sbb
test
bound
pusha
mov
xor
cmp
cwtl
insb
ds
cmp
movl
xchg
sub
fcomps
in
decl
js
xor
fdivrl
mov
xchg
addr16
fistpll
imulb
pop
mov
inc
xchg
jb
xchg
test
inc
insb
scas
ret
je
and
jecxz
fst
incb
orl
lea
aaa
mov
mov
jno
icebp
scas
inc
popf
push
addl
or
mov
or
jecxz
dec
aam
add
adc
inc
jg
and
jbe
cmp
fnsave
hlt
aam
lods
idivl
lods
and
adc
aam
mov
xor
int
jmp
xchg
cmp
xor
jl
sar
add
jne
cmp
sub
mov
sbb
xchg
inc
jge
adc
stos
fildl
jle
les
out
nop
aam
daa
cmp
add
xchg
jb
stos
lock
mov
sbb
cmpsl
cmp
jbe
xor
iret
loope
add
pop
pop
pop
js
push
mov
xchg
leave
sub
inc
mov
pusha
xchg
insl
sub
in
mov
pop
mov
and
nop
cmp
xor
mov
pop
adc
mov
loop
pop
mov
jae
cwtl
mov
notl
push
dec
push
push
jp
stc
pop
or
mov
dec
loop
xchg
cmc
test
jno
xlat
paddd
test
sub
sbb
in
or
jp
mov
insb
push
bound
lahf
popa
in
push
arpl
xchg
mov
sbb
inc
shll
push
jbe
daa
scas
pop
xlat
out
mov
xchg
repz
lea
mov
or
loop
aaa
movsb
sub
adc
mov
jp
int3
ficomps
sub
pop
scas
fldenv
lahf
push
xchg
rclb
cli
divl
sub
xlat
jns
fcoml
jge
jo
cmp
xor
mov
imul
scas
repz
pop
xor
and
pop
idivl
pop
loop
sahf
push
inc
push
mov
fsubp
pop
lcall
das
pop
lods
fistpl
pop
mov
fstpl
pop
cmp
xchg
jl
stc
adc
iret
mov
jg
fadds
movsl
and
outsl
pop
sub
popf
dec
xor
cwtl
ss
xor
mov
outsb
test
xrelease
dec
fildll
outsl
mov
xor
jp
fs
and
or
std
xor
push
push
xlat
inc
pop
repz
mov
out
adc
ja
push
jb
cmp
pop
ret
jl
jne
mov
or
cli
jp
pushf
mov
popa
lret
dec
jb
fistps
jnp
in
inc
sub
imul
fstps
fwait
lret
jo
iret
stos
test
sub
enter
xchg
xchg
outsl
mov
mov
push
mov
pop
mov
mov
mov
xchg
sub
mov
fildl
add
mov
clc
repnz
mov
cmc
pop
cli
scas
imul
leave
mov
loope
arpl
and
das
cwtl
pop
loopne
push
cmp
xor
ret
lcall
dec
lock
or
lret
or
pop
mov
sti
shll
ss
xorb
push
xor
push
sbb
xor
je
daa
je
scas
fisubl
pop
movsb
js
push
rep
movsb
cltd
dec
xchg
or
inc
bound
jp
fisubrs
out
loopne,pt
cmp
jmp
rol
lods
in
xor
sbb
dec
xor
lea
xchg
jnp
cmpl
rorb
in
aad
insl
xchg
jge
jmp
aam
pop
mov
ljmp
aad
ss
sbb
mov
mov
repz
test
lahf
jo
outsb
lahf
movups
ds
xchg
mov
push
push
lds
push
xchg
arpl
push
les
out
rclb
adc
xor
push
sbb
leave
mov
je
clc
ret
shlb
xor
jmp
cmpsb
push
aad
mov
cmpsb
fidivl
cld
push
or
inc
push
das
lock
adc
stos
xchg
jbe
pop
cmp
xchg
sbb
lea
xchg
lcall
decl
lods
cmp
jae
push
jae
inc
mov
into
mov
fs
orl
inc
add
pop
or
aad
clc
cld
jns
add
xor
lahf
lds
bound
mov
mov
push
ret
cmp
stos
fdivrp
add
aad
out
push
cld
clc
int3
jne
mov
inc
fwait
add
fimull
or
mull
test
aam
testb
jp
add
add
sbb
add
sti
adc
test
in
xchg
or
into
push
filds
rcl
mov
jecxz
sbb
mov
out
xchg
xchg
loopne
sub
gs
insl
pop
cmp
scas
addr16
insl
in
in
jp
aam
enter
aaa
jb
xchg
rcrl
out
test
fidivrl
sahf
jns
jl
dec
push
add
cltd
pop
sub
sar
stos
push
add
mov
jge
inc
mov
dec
adc
lahf
add
shlw
push
adcl
cmc
mov
adc
add
inc
int3
pop
xchg
push
out
mov
mov
sub
cs
inc
xchg
nop
andb
or
fdiv
mov
xchg
leave
cmp
mov
cld
cli
jg
aaa
inc
and
jle
sub
sub
mov
and
je
xor
mov
les
add
leave
mov
pop
lea
sub
xchg
xor
pop
daa
dec
jl
sub
cmp
lea
shll
pop
outsb
cmpsb
fs
fsts
mov
shll
dec
or
loope
jp
or
inc
loopne
fcoms
adc
int3
xchg
push
sahf
out
repz
pop
popa
in
pop
lret
add
enter
adc
mov
out
fdivl
insb
mov
stos
outsl
push
pop
addb
nop
xchg
adcb
inc
lahf
cltd
pop
hlt
enter
pop
inc
rep
push
mov
xor
xchg
pop
cs
sbb
pop
sbb
add
xchg
sbb
or
jecxz
in
push
mov
jle
lcall
js
dec
sarb
push
in
push
push
fists
loopne
sub
icebp
lds
xchg
loopne
test
std
orl
ror
mov
jmp
cmp
lods
popa
in
sbb
mov
jp
adc
pop
aas
in
sub
rorl
shll
and
mov
es
add
es
or
sarb
test
mov
fmuls
rclb
pop
push
das
adc
rorl
mov
pop
pop
scas
adc
jne
inc
jp
jmp
mov
mov
pop
xchg
and
cmp
xorb
push
push
cld
sahf
shr
js
adc
ror
mov
add
hlt
mov
lds
inc
idivl
cltd
and
or
stc
sbb
push
pop
mov
sahf
sahf
jns
lret
test
and
icebp
xchg
repnz
je
xor
addr16
cmp
and
out
cli
xchg
mov
sub
pop
push
mov
push
mov
rcll
notb
push
pop
pushf
sahf
sahf
loop
sbb
jp
mov
xor
xchg
cmpsb
fnstcw
mov
mov
inc
dec
cmp
pusha
mov
xlat
xorl
or
orl
shrl
pop
mov
test
lret
loope
icebp
imul
aad
test
pusha
sbb
and
mov
ficomps
je
js
ljmp
testb
cmp
popf
push
fildl
jmp
mov
or
sub
and
dec
cmp
leave
push
int3
test
movsl
je,pn
dec
push
aas
mov
pop
sbb
and
xchg
cmp
or
pushf
jle
pop
ljmp
push
pop
aaa
push
test
test
inc
add
push
mov
and
push
push
jne
lret
jae
insl
sub
int3
xor
movsb
xor
push
jo
mov
dec
arpl
dec
mov
lcall
or
ret
mov
test
push
int3
les
loope
movsl
inc
jecxz
add
and
xor
adc
jp
push
add
xlat
fidivl
jno
cmc
push
stos
push
push
rorl
mov
testb
sahf
mov
cld
movsl
sahf
or
sub
jge
sub
push
dec
mov
loop
xchg
sbb
jo
iret
lea
repz
mov
and
leave
sbb
ss
inc
fistps
stc
mov
xchg
imul
sbb
xor
adc
cmpsb
adc
pop
psubsw
xchg
pop
and
popa
jne
push
push
xchg
jp
es
cmp
push
dec
int3
jp
sti
pop
add
and
xor
ret
pop
lret
dec
popa
ret
std
xchg
sbb
xor
jnp
xor
aaa
mov
add
sti
sbb
or
imul
push
add
jg
mov
sbb
imul
lcall
and
inc
ja
jnp
xchg
dec
xchg
sbb
popfw
jmp
fldpi
pop
testb
lahf
in
xchg
out
dec
aam
loopne
gs
xor
or
clc
and
mov
test
fisubrs
inc
jne
add
clc
stos
jns
xchg
add
stos
stc
jb
js
repz
cmp
sbb
lea
adc
cmp
daa
xchg
adc
icebp
pop
movsb
iret
xor
clc
or
aad
andb
mov
push
test
xor
inc
imul
sbb
loope
jle
mov
rclb
mov
mull
jp
and
test
add
int
sbb
push
movsl
cmc
andb
mov
je
lret
imul
sbb
sbb
subl
orb
jne
sbb
test
lods
ljmp
jp
pop
cmpb
inc
add
xchg
mov
xchg
adc
jo
pop
xor
insb
aam
les
push
imul
push
scas
repnz
and
pop
mov
jbe
leave
ficompl
das
test
dec
ljmp
lea
xchg
xor
je
dec
outsl
insb
jno
fistpl
iret
jne
dec
pusha
push
popa
mov
scas
inc
sbb
adc
xchg
jg
js
and
mov
sti
das
xchg
inc
jp
cmp
pusha
lds
add
sub
push
pop
mov
bound
adc
out
test
dec
outsl
cld
aam
mov
ja
sub
pop
aad
xchg
or
lret
dec
push
mov
dec
mov
mov
cmp
sbb
xor
sub
lahf
jnp
adc
jg
dec
mov
int
add
dec
rcrl
enter
jmp
push
or
adc
cmp
insb
add
into
sub
popf
lods
out
shr
shr
mov
lcall
and
mov
or
mov
test
push
adc
shrl
into
cmp
and
inc
xor
xor
dec
in
dec
mov
cmpsl
cld
cli
inc
jmp
mov
xchg
sti
out
sahf
pop
push
data16
adc
or
xlat
notl
bound
out
or
and
dec
xor
mov
sub
dec
xor
push
or
fistl
loop
hlt
scas
fcomip
dec
or
in
js
loope
fcompl
fstpl
mov
inc
cmp
nop
popa
fdivl
xor
xor
jmp
adc
cmp
add
pushf
mov
out
mov
test
add
fucom
fadds
fisubrl
daa
je,pt
das
inc
push
call
testl
jg
fldcw
je
mov
lret
cmp
sbb
adcl
lods
fdivrs
lods
mov
inc
mov
ret
jmp
dec
test
jo
mov
cmc
pop
cltd
imul
mov
or
or
dec
in
aaa
lods
cmpl
mov
aas
add
stos
gs
mov
daa
in
mov
in
mov
nop
jecxz
xchg
xor
xor
push
sub
or
dec
mov
clc
cmp
and
les
test
and
jge
sbb
inc
inc
lea
mov
sbb
adc
scas
or
push
jge
scas
mov
or
xor
loopne
icebp
xchg
fsts
fbld
cs
cld
stos
jb
gs
pop
or
add
push
mov
sub
in
cld
in
xchg
mov
lahf
cmp
mov
scas
sarb
jecxz
js
cmp
les
test
add
movsb
idivb
add
and
mov
pop
and
es
dec
leave
cwtl
aas
test
inc
fucomi
addr16
loop
mov
xlat
inc
push
fs
shl
cwtl
inc
inc
inc
mov
mov
repz
ror
jmp
jecxz
push
shrl
or
xchg
jo
mov
sub
lods
sbb
or
mov
jle
subl
push
aas
inc
ret
pusha
push
sbb
xchg
popl
inc
roll
adc
inc
sahf
scas
rolb
scas
ss
fisttpll
add
das
push
les
add
or
jmp
xchg
mov
fs
out
fs
repnz
or
sub
add
mov
xor
jge
xchg
pusha
cli
jae
and
cli
xor
lret
outsb
inc
aaa
and
repz
jmp
imulb
lods
pop
mov
pushf
neg
pop
movsb
nop
rolb
aas
mov
subl
mov
popa
sbb
sbb
fsubrp
add
sbb
mov
jl
out
and
enter
out
xor
fcom
jo
sub
shlb
xlat
adcl
scas
stos
or
mov
inc
adc
lea
and
jg
mov
js
out
prefetch
sbbb
scas
sbb
mov
push
cmp
in
xchg
clc
pop
int3
nop
lock
inc
cmp
sbbl
jge
fcompl
rclb
fwait
mov
inc
lds
pop
adc
inc
mov
call
xchg
and
push
or
lea
inc
cwtl
add
pop
push
jno
dec
lock
jl
mov
rep
pop
cltd
dec
inc
xor
add
mov
pop
sub
mov
mov
cmpsl
add
frstor
mov
and
lds
fwait
lcall
push
dec
mov
add
pop
sub
iret
jae
shlb
shl
gs
ret
and
in
sti
pop
and
in
xor
movsl
mov
shll
mov
sub
lds
cmc
pop
sbb
adcb
mov
fs
cmp
repnz
mov
xor
mov
divl
daa
test
subl
aam
lahf
push
xchg
xor
insl
xchg
dec
or
pop
fimull
mov
scas
and
add
pop
cwtl
pop
test
or
adc
loope
add
cmc
gs
dec
inc
adc
push
add
jp
adc
mov
popa
cs
popa
je
push
les
pushf
mov
arpl
ss
cld
pushl
xchg
stos
pusha
dec
add
pop
xor
sub
mov
out
pop
jg
mov
mov
mov
lahf
mov
mov
lods
mov
sub
mov
aad
call
adc
pop
sub
into
movsb
mov
popf
loopne
out
mov
mov
mov
lahf
rcl
push
adc
mov
and
pop
add
lret
in
adc
out
repz
cmpsl
mov
pop
insl
das
scas
push
add
pop
jge
cmp
decl
xorb
dec
pushf
stos
loopne
div
push
cld
adc
adc
scas
mov
arpl
imul
lods
pop
ficomps
pop
fwait
into
xchg
enter
push
sahf
aad
inc
mov
xchg
rorb
and
outsb
dec
pop
nop
jbe
pop
lcall
mov
sbb
xchg
dec
test
jno
dec
in
sub
pushf
mov
popa
jecxz
or
adc
shl
divl
dec
push
inc
bound
in
jo,pn
cltd
nop
clc
cmp
dec
dec
sbb
mov
hlt
lahf
sbb
in
ds
popa
sub
rorb
dec
jecxz
jne
test
mov
pop
cmpl
js
je
in
cmpsb
xor
ret
inc
jp
je
xlat
shrl
mov
aam
or
cmp
loope
loopne
jmp
inc
sub
xchg
mov
pop
mov
pop
pop
xor
dec
lret
pop
out
enter
mov
bnd
xchg
addr16
xchg
adc
mov
lcall
fldt
repnz
sbb
dec
test
repz
sub
jle
dec
loop
in
or
popf
pushf
push
xchg
push
mov
test
push
xchg
lods
imul
loopne
jb
lahf
fsubrp
xchg
pusha
and
xor
nop
push
push
mov
out
fs
inc
mov
sbb
stc
fcoml
dec
push
cmc
or
movsb
or
or
lods
insb
cmp
jb
das
in
xchg
outsb
arpl
dec
adc
pop
dec
adc
test
ljmp
push
cmp
inc
and
pop
or
imul
imul
push
imul
int
cmp
imul
dec
test
pop
mov
out
mov
mov
push
mov
adc
jae
outsl
add
pop
push
sub
or
inc
out
jbe
fstps
jp
mov
insb
dec
jl
xchg
cmp
mov
inc
mov
sbb
aaa
xchg
leave
cmpsl
mov
sbb
shl
into
popa
add
icebp
or
aam
dec
sub
add
sub
sti
mov
mov
idivl
cmpsb
pop
fsubs
add
cmc
shl
jbe
pop
inc
add
jns
xchg
sub
fdivl
fstp
or
cld
loop
rcrb
xor
adc
ret
xchg
mov
sub
fstl
int3
mov
lahf
sbb
sets
push
inc
out
mov
xchg
cmc
inc
push
push
insl
pop
xchg
inc
insb
sbb
mov
mull
xchg
cs
pop
xor
xchg
jne
or
frstor
sub
add
lea
das
clc
sarl
add
in
les
cwtl
icebp
jno
add
or
aad
cld
or
jmp
aad
bound
decl
cmpsl
jmp
insl
adc
mov
lock
pusha
jecxz
mov
aad
jl
pop
pop
cmp
sub
notb
mov
pushf
add
push
es
dec
ss
stc
push
shld
pusha
loope
sbb
pminub
add
jecxz
jmp
je
in
cmp
pushf
icebp
mov
push
jp
and
ret
jecxz
lret
mov
jb
push
or
jmp
mov
add
dec
bound
mov
adc
stc
push
pusha
jg
sub
in
adc
iret
mov
add
push
fcoms
add
popf
or
icebp
data16
jne
lods
add
bound
sarb
mov
cwtl
adc
fistpl
jmp
and
sub
loopne
rcrb
test
xor
push
pop
pop
mov
jnp
adc
inc
dec
aad
jmp
test
out
std
jle
sub
enter
mov
test
in
data16
mov
mov
std
mov
dec
ljmp
orb
or
test
mov
push
ret
jp
pop
mov
mov
aad
push
shlb
mov
and
xchg
xor
push
mov
arpl
dec
push
loopne
popa
cmp
ljmp
test
jbe
mov
dec
xchg
adc
inc
fcmovbe
push
mov
mov
jbe
arpl
cmpsb
add
popf
add
outsb
xor
push
leave
xor
imul
cmp
jbe
sarb
xchg
jae
push
xchg
xchg
lods
gs
es
ficompl
jne
movsl
fistps
cmc
hlt
shlb
cmpsl
mov
jnp
xchg
out
cmc
scas
hlt
or
das
pop
int3
clc
mov
jnp
sti
mov
lret
repnz
adc
jns
dec
inc
imul
fs
cmpsl
xor
mov
sti
inc
call
cmpsl
cld
add
addr16
adc
add
nop
jmp
mov
dec
ja
adc
mov
nop
dec
shlb
jp
xchg
aas
and
jmp
push
xchg
shll
mov
out
mov
push
mov
imul
push
xlat
test
call
mov
popf
mov
popf
dec
adc
ds
mov
lods
add
push
cli
mov
push
addl
aad
fs
rcrb
repnz
insb
cli
push
loopne
jl
cmpsl
cmp
iret
popa
movsb
xchg
xchg
jo
push
divb
outsl
jp
mov
pop
mov
push
dec
dec
and
jl
cmpsb
dec
inc
dec
pop
pop
bound
jle
pop
xor
or
cmp
pop
pushf
shr
dec
push
push
cmc
push
mov
out
push
call
xor
movsb
add
js
lret
adc
jg
popa
sbb
cmp
pop
lock
fidivl
clc
sahf
push
iret
mov
imul
in
jne
test
jbe
int3
stos
insb
sbb
mov
xor
inc
and
and
pop
mov
ljmp
add
icebp
movsl
or
push
lods
pop
pusha
sbb
loop
aaa
jecxz
call
xlat
ss
repz
jecxz
jle
and
or
mov
sbb
adc
addr16
stos
xchg
add
fwait
daa
mov
inc
ljmp
lret
inc
jnp
push
xchg
adc
sbb
inc
lock
int3
mov
insb
adc
fstps
cmpsb
cmp
cmpsb
inc
jae
xchg
iret
push
push
xchg
mov
xchg
dec
cli
fwait
cwtl
xor
rolb
es
clc
and
push
dec
leave
imul
test
loop
ret
stos
popa
adc
xorl
jecxz
mov
dec
xchg
fbstp
stc
andb
adc
loopne
ret
ja
cltd
mov
push
and
inc
add
js
sbb
loop
aas
and
fidivl
pop
lcall
ja
dec
mov
pop
xor
iret
es
ret
hlt
stc
or
je
mov
ret
mov
fnstsw
aas
jo
add
int3
es
sub
pop
mov
orb
dec
adc
mov
leave
mov
jo
jo
adc
in
aad
sbb
cwtl
dec
sub
push
inc
xchg
fwait
adc
scas
div
seta
dec
dec
jb
jmp
xchg
les
sbb
mov
ds
adc
mov
push
cld
pusha
clc
dec
push
cli
mov
inc
test
lock
xor
mov
push
int
movsl
ret
test
cmp
ljmp
push
lret
ljmp
lret
mov
mov
add
adc
jge
pushf
sbb
nop
lds
dec
and
fnstsw
or
xchg
insb
xchg
out
fs
mov
ror
aaa
out
aaa
sub
in
repnz
loope
push
add
adc
jo
inc
int
mov
leave
dec
cs
aas
clc
mov
sbb
shrb
sub
fnstcw
or
sbb
or
mov
mov
inc
jecxz
add
insl
ljmp
or
pop
loope
dec
and
les
mov
sub
outsb
mov
push
xor
cld
in
dec
rcll
cmc
jae
std
inc
xchg
jne
sahf
pop
lods
pop
cmp
cli
and
or
xor
mov
cmc
adc
mov
cmp
and
pop
xor
lea
dec
mov
aam
jae
xor
lds
subb
out
xor
mov
ret
out
lcall
sub
xorb
sub
movsb
lock
mov
ds
int3
push
mov
fdivrs
sti
cmpsb
fbld
add
sub
rol
popf
lret
and
jne
imul
aad
mov
pushf
jae
push
cmp
push
pop
fstpt
dec
lods
ret
xchg
aaa
xchg
fists
cmp
lahf
dec
adc
mov
cwtl
dec
xchg
dec
fs
push
rcl
xchg
dec
lea
in
icebp
shl
xor
sti
js
inc
xor
xor
out
out
push
push
cmp
fldenv
dec
sub
mov
and
cmp
mov
mov
or
scas
rorb
xchg
mov
sbb
lret
jbe
mov
daa
fdivl
add
notb
pop
lahf
fs
nop
test
dec
into
adc
mov
xor
mov
push
iret
sub
imull
pop
sub
sbb
or
cmc
lahf
fsubp
adc
push
jno
jle
cmp
mov
repnz
test
pop
mov
xchg
sarb
inc
xor
push
shl
push
ret
mov
cmpsb
sbb
cmpsl
xchg
push
adc
aas
adc
xchg
jge
xchg
test
xchg
movsb
mov
sbb
jmp
pop
and
xchg
lods
roll
daa
into
pop
or
insb
add
adc
lods
lea
mov
rol
sbb
dec
arpl
and
movsl
push
sahf
jmp
xchg
jo
cwtl
or
mov
cmp
pop
popf
lret
adc
inc
rcr
fildll
cmp
mov
cmpb
and
mov
jmp
in
mov
pop
ja
insl
mov
push
or
mov
adc
sub
adc
sub
push
enter
mov
mov
or
outsl
mov
fsts
cmp
js
inc
lods
mov
into
test
scas
mov
lock
imul
lret
lock
xchg
in
imul
adc
push
test
cmpsl
rolb
xor
divl
xchg
push
xchg
sub
fbstp
imull
cmpsl
iret
xchg
jbe
mov
mov
int
inc
lcall
jmp
ss
mov
je
fwait
pop
push
fiaddl
aam
sub
push
jle
inc
es
adc
loope
fucomi
sbb
jb
test
xor
ss
jmp
mov
dec
cmp
jg
sub
mov
ss
in
mov
mov
pop
imul
xchg
out
outsl
pop
inc
in
frstor
insb
pop
sub
adc
jl
insl
xchg
addr16
lret
aam
pop
sub
shlb
or
fnstcw
mov
fadd
pop
and
and
or
movsb
or
pop
xchg
ja
push
aaa
cmpsl
dec
xchg
enter
pop
std
test
dec
cmp
sub
test
rolb
loop
sbb
stos
xlat
or
ljmp
aad
mov
mov
arpl
out
int3
jbe
jae
pop
dec
leave
les
sarb
xchg
sub
inc
xorl
jae
stos
jge
push
ss
mov
pusha
repnz
imul
mov
cmp
push
std
daa
mov
or
stos
mov
les
pop
or
cwtl
repz
mov
push
add
es
je
dec
mov
pushf
add
cmpsl
push
ja
popf
mov
sub
jne
dec
xchg
xor
sub
jg
cmp
and
push
xor
outsl
fistps
cmp
dec
sbb
or
cmp
jno
clc
push
fwait
mov
push
and
mov
pop
int3
mov
daa
loope
mov
adc
push
push
or
xchg
shl
jl
pop
xchg
aas
cmpsl
gs
data16
pop
xor
psrlw
xor
mov
dec
pop
movsb
cmp
jle
push
sbb
shlb
repnz
addl
lea
sub
stc
mov
push
cld
push
sub
out
into
lret
data16
jne
lods
or
xor
les
lods
lret
dec
mov
in
xchg
outsb
mov
mov
js
in
push
mov
mov
jnp
arpl
fsub
mov
stos
adc
jno
fadd
sarl
cmc
xchg
sub
bound
pushf
gs
sbb
fmuls
sti
movsl
inc
pop
jae
mov
addr16
and
ss
aas
xor
jmp
mov
push
pop
xor
xor
mov
inc
and
rclb
faddl
pusha
nop
fistl
jmp
xchg
mov
mov
inc
scas
sbb
cmpsl
cs
out
aam
jnp
dec
bound
decl
addb
and
mov
cli
inc
js
lcall
mov
repz
mov
call
jbe
sub
sbb
bound
ja
xchg
imul
data16
pop
add
mov
adc
xor
bound
jl
sbb
dec
jg
mov
idivb
leave
and
loope
cmp
out
pop
or
xchg
test
jb
push
popa
sbbb
cmc
subl
push
mov
mov
pop
test
in
jbe
dec
mov
sbb
sub
hlt
sbb
aam
inc
out
ficoms
mov
push
ret
aaa
sbb
ret
test
aam
hlt
dec
out
dec
hlt
stc
lahf
cltd
mov
pusha
add
mov
mov
mov
push
xor
sbbl
mov
std
ret
out
in
test
push
hlt
cwtl
dec
test
lret
sub
scas
push
sahf
adc
and
out
aad
les
add
fs
xor
cmp
dec
pop
pushf
fnstenv
daa
je
adc
dec
shll
movsb
mov
imul
lret
and
test
sub
sbb
aad
mov
adc
scas
jge
aam
pop
or
vmwrite
inc
pushf
or
lea
insl
repnz
insl
pop
ljmp
jp
push
scas
popf
jle
rcll
inc
daa
pop
sbb
clc
and
fdivrs
inc
in
jg
adc
sub
bound
ss
sub
fsubs
cmpsb
adc
jmp
xor
cld
add
push
loop
jnp
push
or
xchg
push
imul
fsts
add
jg
mov
mov
sbb
loop
push
mov
ret
sbb
xchg
xor
jp
les
repz
jne
gs
out
insb
arpl
sub
xchg
and
pop
subl
lahf
std
cmpsb
test
je
sbb
gs
loop
or
hlt
stos
pop
mov
xchg
and
pop
or
and
mov
test
sbb
sbb
dec
roll
pop
ret
pop
sub
lahf
daa
lret
push
nop
mov
popa
cmp
xor
ffreep
shrb
pop
mov
cltd
movb
push
imul
adc
popf
pop
ss
dec
jae
in
and
add
xchg
push
mov
mov
inc
pop
addr16
mov
xor
mov
aaa
scas
bound
sarb
insb
movsl
lock
in
xchg
scas
mov
in
fstpl
lds
movsl
add
pop
or
dec
fs
jl
rcl
cmpsb
cmp
inc
push
mov
xlat
xor
and
cltd
push
inc
pusha
ss
ds
push
push
mov
mov
jge
and
sub
vprotb
push
shll
lret
imul
cwtl
mov
mov
add
lahf
ror
hlt
adc
fcoms
ljmp
jae
mov
xchg
cmpsb
xchg
into
loopne
scas
leave
test
mov
out
dec
dec
xor
mov
cmpsl
lahf
in
xor
lret
pop
mov
adc
and
cmp
pop
pusha
sbb
dec
aad
sbb
xchg
jp
scas
and
pop
cwtl
or
push
or
cmpsl
jmp
sarl
lahf
adc
xchg
push
inc
bound
xor
xchg
jp
sbb
add
icebp
es
mov
test
je
insl
ret
xor
jne
or
or
rcrb
loop
xchg
fisubl
call
divb
lods
mov
repnz
je
mov
mov
inc
lock
clc
ss
in
leave
mov
and
xchg
dec
das
or
mov
push
movsl
mov
test
aam
vmread
cmc
nop
repz
xchg
sub
popf
mov
cmpsl
bswap
xchg
sub
icebp
scas
je
adc
push
nop
aaa
jbe
out
xor
pop
or
add
xchg
jecxz
push
shl
lahf
mov
jl
or
jne
or
mov
imulb
sub
outsl
cli
mov
xlat
aas
mov
icebp
adc
icebp
push
sbb
lods
push
fimuls
mov
aas
xor
jp
clc
sbb
scas
jnp
adc
or
scas
lock
xchg
pusha
stos
aad
addr16
ss
pop
test
into
mov
add
dec
sub
push
loop
jle
js
add
mov
adc
jl
jno
lret
mov
xlat
int
jg
adc
dec
jl
lret
mov
lahf
pop
xor
and
jmp
sahf
inc
test
in
cmp
icebp
jne,pn
pop
lods
cmc
pcmpgtw
xchg
jge
pop
cmpsl
mov
fsubs
push
xor
push
jmp
enter
cmpsl
test
xchg
sti
xor
rcrl
dec
push
push
addr16
mov
inc
cmpb
mov
mulb
and
pop
dec
nop
mov
jb
out
flds
mov
movb
xchg
adc
xchg
adc
insb
push
push
ljmp
in
xchg
add
inc
mov
push
mov
jle
inc
cltd
or
addr16
das
jmp
test
pop
mov
out
mov
dec
lock
ret
outsb
adc
inc
nop
cmp
popf
mov
xchg
add
sbb
mov
mov
idivl
and
adc
into
cpuid
out
xor
jo
adc
fidivs
jle
sub
jp
test
push
xchg
ret
sahf
inc
or
scas
add
mov
hlt
and
mov
in
loop
testb
pmulhuw
in
xor
adc
and
cmc
lret
icebp
iret
loope
xor
bound
mov
andl
insl
leave
jns
mov
sti
int3
clc
mov
xchg
and
shll
xlat
xchg
jge
repz
lods
push
dec
xchg
icebp
sub
inc
roll
shl
out
inc
sub
xchg
dec
pop
or
and
les
out
sbb
fbstp
cli
popa
lcall
or
enter
lret
push
and
sub
push
push
movsl
xchg
in
sar
js
mov
jmp
shrl
js
pop
push
xchg
push
add
dec
es
in
ss
mov
std
cs
movsl
test
icebp
enter
ret
int3
inc
cmpsl
imull
test
push
mov
sti
push
push
je
mov
dec
mov
rorl
mov
sub
mov
lds
push
inc
movsb
add
adc
inc
enter
mov
push
movsl
jge
dec
push
test
js
cld
dec
lods
addl
icebp
dec
sub
cli
lret
push
rcll
hlt
mov
cltd
hlt
or
in
fstps
jmp
jbe
mov
sbb
lods
roll
aas
jecxz
js
popa
cmp
pop
add
inc
pop
test
ds
shlb
je
inc
mov
fs
xchg
mov
push
insb
jbe
mov
out
mov
xchg
sti
insl
sahf
fidivs
or
fdivrl
mov
ja,pn
outsl
aam
leave
int
into
out
lods
pop
lea
sahf
mov
xor
xchg
ss
sarb
add
popa
daa
or
dec
lock
inc
dec
xor
lods
mov
cli
call
xchg
out
fsts
daa
cmp
jns
out
pop
jle
repz
xor
xchg
dec
push
out
adc
adc
scas
pop
xchg
mov
xchg
jo
lds
ss
dec
popa
xchg
push
call
mov
adc
in
pop
dec
out
enter
dec
in
cld
cs
dec
inc
xchg
ret
push
pop
pop
mov
or
mov
mov
leave
enter
pop
sub
jge
sbb
jne
test
out
js
lods
arpl
pop
or
dec
pusha
test
cmp
inc
sbb
sub
jns
arpl
ficoml
fcomps
jno
pop
add
sbb
pushf
shll
adc
mov
jg
pop
cmpsl
or
movsb
mov
jns
pop
fadds
xchg
outsl
xor
into
mov
mov
dec
add
adc
sbb
call
gs
lahf
out
cld
outsb
cmp
push
add
jae
sahf
cmp
aad
adc
shlb
cmp
in
shlb
xchg
pop
lret
mov
test
pushf
sbb
add
pop
les
mov
leave
hlt
pop
mov
ss
into
jmp
loopne
inc
sub
adc
aaa
mov
pop
pop
sub
loop
imul
int3
pop
inc
xor
scas
add
jmp
xor
dec
daa
adc
test
out
jns
outsl
fs
or
jmp
pop
mov
dec
mov
aaa
aaa
push
mov
xchg
cwtl
daa
mov
dec
dec
add
inc
popf
pop
into
mov
ljmp
sub
mov
mov
out
rclb
repnz
adc
add
sbb
arpl
inc
lcall
push
fdivr
cmp
jmp
jmp
mov
cld
pop
cmp
cmp
mov
test
lds
aam
adc
nop
addl
jecxz
popa
fsub
pop
mov
int3
sub
js
fimull
rcrb
lods
mov
mov
rorb
mov
in
adc
jp
sub
jo
add
xchg
mov
mov
xor
xchg
dec
xchg
xchg
cmc
adc
test
add
or
cmp
cmp
add
fsubl
cmpsb
mov
js
in
inc
pop
xor
cmp
outsl
adc
sub
mov
mov
rorb
mov
pop
mov
and
aam
daa
mov
fisubrs
outsl
push
xor
adc
or
mov
mov
sub
mov
fldenv
pop
jmp
push
notl
cmp
call
sbb
pop
push
int3
push
sbb
int
adc
cmp
mov
add
inc
in
mov
sbb
in
sarb
shrl
movsl
adc
adc
fldenv
sbb
push
mov
jmp
inc
popf
dec
inc
lahf
add
test
push
fnstenv
push
sbb
xor
negl
enter
xchg
jg
in
call
mov
add
push
xchg
loope
or
pushf
sub
fsub
push
mov
mov
dec
gs
inc
shll
push
movsl
mov
cmp
ds
orl
cld
sti
sbb
pop
repz
mov
jge
fdivrl
xchg
pop
dec
mov
insl
ljmp
jecxz
jo
lahf
pop
lods
fstps
mov
lods
jle
xor
imul
push
stos
jle
push
scas
pop
jne
xlat
add
hlt
subl
or
mov
xchg
xor
js
ja
movsl
cmpsb
push
xchg
ss
xchg
into
add
sub
push
xchg
jmp
subl
rclb
add
lds
adc
dec
lcall
popf
inc
out
repz
fwait
or
push
into
mov
fs
dec
sbb
pushf
mov
sub
mov
pushf
xor
out
lods
mov
movsl
test
sti
fadds
mov
push
sbb
xchg
inc
neg
inc
push
jae,pt
pop
xor
xchg
and
call
shll
push
lock
or
pop
pop
in
pusha
sbb
xchg
inc
js
lds
jns
nop
or
stos
adc
mov
mov
dec
xchg
vmwrite
sub
test
mov
dec
sbb
pop
adc
dec
cwtl
dec
jg
in
jg
loope
pop
dec
dec
dec
or
xchg
sbb
jbe
jbe
push
jge
xchg
in
jl
imul
popf
sub
hlt
clc
orb
out
xchg
jno
xor
xorl
sub
dec
hlt
sti
inc
gs
outsb
jmp
pop
subb
hlt
stos
sbb
scas
dec
xor
and
push
loopne
mov
dec
ljmp
lahf
or
aad
xor
jge
out
inc
xlat
or
inc
xor
mov
push
xor
xchg
scas
dec
insl
sbb
fwait
stos
ja
mov
and
inc
adc
dec
jb
or
test
cli
jl
es
pushl
and
dec
cmc
adc
mov
push
sub
or
add
xchg
gs
arpl
push
andl
pop
scas
inc
stc
and
in
fldt
inc
das
mov
into
fucomip
jbe
shl
inc
scas
add
int
jp
inc
icebp
mov
push
push
xchg
jl
test
cmp
cli
ja
fucom
push
jge
aaa
scas
inc
mov
inc
test
pop
mov
xchg
pop
push
fdivrs
sahf
or
rcrl
testb
xor
xchg
sti
xor
lock
jecxz
mov
and
pop
sti
in
mov
push
stc
xchg
push
jno
je
ds
scas
int
and
cmpsl
fwait
imul
outsl
adc
test
cltd
jae
je
mov
lahf
mov
popa
shr
cltd
in
idivl
mov
or
sbb
mov
nop
pop
je
inc
in
js
mov
sub
mov
mov
push
xor
out
sbb
pop
pop
or
cmp
mov
mov
add
adc
dec
imul
out
add
dec
xchg
adc
inc
movsl
and
popa
cld
std
push
inc
stos
or
shlb
fcomip
in
call
push
jne
icebp
xorb
adc
mov
jbe
or
out
pop
cs
mov
lcall
sub
js
out
sub
iret
adc
test
adc
push
and
fadds
mov
sbb
mov
add
ljmp
push
sub
sub
mov
inc
loop
int3
in
cmp
dec
jg
lret
shr
scas
pop
ljmp
stos
inc
icebp
test
mov
pop
sbb
jae
fsubl
xor
inc
outsb
movsb
push
pusha
jmp
mov
aas
notl
in
dec
push
jle
in
cs
ret
push
pop
cmp
icebp
inc
shl
sbb
push
jo
mov
pop
ss
pop
ss
inc
aaa
and
clc
inc
mov
sub
lcall
in
mov
push
mov
xchg
push
add
orb
dec
push
fldt
xor
lret
jecxz
addr16
gs
push
xchg
cli
push
pop
jge
pop
in
inc
mov
call
xor
inc
pushf
mov
xchg
jae
sub
popf
aas
pop
cli
dec
pop
gs
mov
aaa
fmuls
notb
imul
xor
mov
scas
lcall
mov
aad
fbstp
inc
pop
pusha
outsb
and
out
or
cwtl
xor
mov
and
sub
imul
pop
cmp
jp
daa
sub
paddusb
add
div
push
repz
sub
pop
jo
fisubrs
stc
ljmp
pop
mov
imul
or
lcall
push
iret
in
push
mov
add
dec
add
leave
push
mov
adc
in
jge
and
in
int3
cmp
test
es
dec
or
mov
pop
cmp
push
sbb
repnz
pop
xchg
sbb
push
or
out
xchg
cld
add
and
shrl
rcl
jp
and
inc
mov
inc
test
add
add
scas
or
xchg
cltd
roll
cmp
movsb
js
push
jl
lea
jae
sub
jno
inc
fprem
adc
cmp
jno
dec
and
or
lret
xor
das
inc
fldenv
mov
xchg
popa
xchg
pop
ljmp
push
mov
adc
fbld
mov
ljmp
add
in
mov
sbb
jb
xor
dec
add
mov
inc
lea
outsb
push
mov
in
aas
aas
xchg
into
xchg
in
lret
rcrl
mov
sbb
pop
jp
fbstp
adc
mov
cmp
dec
movsl
data16
jg
xchg
xor
in
insb
cmp
push
sbb
inc
arpl
mov
inc
stc
lock
dec
pop
or
in
xacquire
push
pop
xchg
gs
inc
and
jge
int3
test
scas
nop
lcall
cmp
je
inc
mov
loop
mov
neg
lods
dec
dec
or
scas
test
push
lock
int
jne
mov
mov
mov
dec
je
pusha
imul
ror
mov
das
push
mov
js
adc
decb
push
push
add
inc
stos
add
inc
mov
xchg
rcrl
pop
lods
imul
insb
jge
inc
das
lea
out
lods
adc
cltd
mov
mov
jno
sub
xor
mov
fcomp
xchg
xor
mov
and
movsbl
sti
jae
jge
sbb
das
test
lahf
xchg
push
clc
xchg
pop
and
in
mov
xor
movsb
out
movsb
stos
push
movsl
mov
fsubs
inc
xor
push
fidivl
or
jno
loop
jmp
psrld
rcll
dec
sub
out
xlat
push
neg
lcall
popf
gs
cmc
push
mov
in
out
xor
cmc
out
gs
dec
pop
dec
pop
pushf
cwtl
je
fcompl
lds
add
cltd
std
sbb
or
lahf
inc
xchg
xchg
loopne
mov
in
lock
adc
pop
dec
xor
push
sahf
repz
mov
movsl
pop
sti
cmp
cmpsb
mov
or
call
mov
and
pop
dec
mov
test
push
shll
jo
fistl
adc
les
push
stc
cli
in
out
push
imul
lret
aaa
mov
cmp
inc
enter
add
inc
xchg
je
push
loope
scas
pop
movsl
mov
insb
adc
pop
pushf
cmpsl
ret
push
mov
inc
lret
mov
pushf
aad
mov
inc
sahf
pop
into
push
sub
and
mov
pop
insb
inc
sti
repz
sub
sub
mov
pop
jno
call
aas
in
aaa
jge
pop
shlb
dec
sbb
repz
mov
or
jg
push
fistps
push
sbb
test
hlt
and
sbb
outsb
dec
nop
je
lahf
dec
push
dec
cmc
mov
cld
leave
das
push
jl
mov
cld
jle
das
rcr
cmc
mov
jb
add
dec
or
mov
and
mov
or
ljmp
push
xchg
rclb
decb
cmp
lock
add
into
stos
inc
xchg
mov
ljmp
adc
mov
or
pusha
jo
cmp
jmp
inc
cs
in
mov
mov
inc
push
shrl
adc
xor
movsl
fsubl
stos
icebp
rolb
je
nop
add
add
push
ljmp
cmp
arpl
lock
inc
mov
mov
leave
inc
sbb
leave
xor
shlb
cmp
pop
push
mov
mov
into
out
and
mov
sbb
dec
fwait
inc
outsb
out
imul
push
or
jnp
lcall
movsl
push
mov
popf
pop
testl
andl
pop
daa
dec
push
inc
hlt
push
ret
loopne
push
int
loope
bnd
les
or
adc
ss
push
jbe
iret
mov
cmp
inc
test
push
pop
ja
pop
inc
mov
xor
push
pop
cli
adc
lods
or
cltd
dec
fadds
int
cmpl
ja
ret
xchg
lret
fwait
or
xchg
testb
int3
rolb
icebp
pop
xchg
mov
aas
fldl
push
out
xchg
stos
mov
repz
cli
xchg
adc
inc
test
pushf
ficoml
xlat
sbb
lret
addr16
xchg
fwait
xor
das
pop
js
push
inc
add
shll
sti
bound
int3
movsb
mov
cmp
bound
dec
pop
jb
imul
leave
arpl
arpl
lods
stos
lds
lock
adc
lea
jmp
and
xchg
outsl
movsl
dec
xchg
add
fisttpl
jnp
lock
mov
pop
jecxz
sub
or
test
int
sbb
outsl
test
shlb
xor
mov
mov
cmp
sub
fildl
dec
dec
sti
mov
push
fs
dec
int3
cld
pop
xchg
pop
dec
orb
sbbb
mov
cmp
orl
xor
sbb
mov
cmp
dec
push
push
ret
adc
ja
mov
cltd
je
pop
fwait
xchg
xorb
xlat
push
pop
sti
mov
mov
xchg
push
inc
cmp
loopne
mov
shll
mov
nop
das
mov
and
push
ljmp
or
cld
jp
enter
int3
mov
ljmp
cmpsl
rcr
mov
mov
mov
mov
fnsetpm(287
pop
cwtl
call
aad
pop
jae
add
mov
loop
cld
adc
and
jbe
mov
xchg
rcll
popa
push
sub
mov
xor
adc
imul
mov
xchg
push
push
loope
aaa
xchg
andl
and
xchg
lret
cmp
sub
cmp
int
add
mov
xchg
pushf
xchg
inc
je
jno
push
mov
clc
in
inc
xor
jmp
add
loopne
fildll
pop
movsb
int3
fiaddl
bound
shr
test
mov
or
sbb
je
lock
pop
mov
shrl
dec
and
in
mov
cmp
xchg
aas
push
call
enter
adc
ds
sub
cmc
and
pop
adc
aad
clc
mov
adc
jo
mov
orb
in
lock
mov
or
and
outsb
imul
inc
jno
inc
lds
cld
push
in
mov
mov
or
cmp
fsubs
adc
add
mov
stos
fs
sbb
movsb
loope
mov
push
pop
cmp
lock
push
xchg
ljmp
add
ret
push
adc
push
mov
add
mov
inc
mov
xor
icebp
adc
xchg
jno
aad
mov
dec
pop
pop
ret
jmp
ror
insl
test
or
xor
loop
test
std
dec
jmp
sub
lods
in
je
fwait
mov
dec
repz
xor
cwtl
cmp
jne
inc
sbb
shl
mov
or
into
test
pushf
inc
out
and
cmpsl
loopne
aaa
xor
in
pop
xchg
das
cmp
mov
dec
jb
loope
pop
sbb
jae
rorl
out
lock
out
xor
loop
ljmp
mov
loopne
ror
lret
imulb
outsb
mov
testb
bound
xchg
xchg
popf
les
adc
daa
bound
popl
test
iret
push
faddl
mov
leave
loop
or
jge
add
scas
sub
outsl
mov
cs
dec
lea
sbb
lcall
icebp
mov
sbb
fisttpl
jb
xchg
je
and
sahf
leave
push
sbb
lret
leave
mov
mov
idiv
out
int3
cmp
mov
and
rolb
cmc
mov
clc
ja
pushf
mov
jmp
push
jno
pop
repz
rorb
fs
das
lods
mov
pop
and
inc
cmc
jl
mov
pusha
lods
es
lcall
imul
ja
out
jae
lret
bound
lahf
inc
je
test
inc
pop
loopne
mov
sarl
addr16
adc
in
push
rorl
std
ljmp
add
in
mov
repnz
xor
and
fldcw
imul
into
pop
mov
inc
imul
add
adc
lret
mov
les
ret
cmp
popf
jle
stc
and
dec
in
fdivr
adc
xor
rclb
sub
or
testl
scas
xor
pusha
mov
cmp
data16
test
fbld
fsubs
dec
push
dec
sti
cwtl
clc
inc
xchg
push
cmp
or
mov
lock
xlat
mov
push
inc
fisubs
out
shlb
pop
fmul
and
push
sub
jge
sbb
jp
fisubrs
ror
ljmp
leave
ret
mov
dec
push
xchg
aam
outsb
mov
popaw
mov
ret
push
sub
lods
es
push
and
stos
push
sbb
ds
popf
aad
mov
cltd
push
popf
out
xor
imul
dec
xor
and
out
sbb
enter
mov
arpl
loopne
lods
jp
cwtl
jg
shlb
movsl
xchg
pop
add
push
out
add
fs
arpl
add
gs
test
push
add
jo
push
push
sub
xchg
das
idivl
inc
dec
jge
xchg
adc
dec
fbld
data16
rclb
push
push
test
repz
mov
dec
scas
jo
mov
fildl
cmp
jns,pt
pop
mov
loop
ljmp
lret
sbb
inc
aam
jl
outsb
push
push
adc
xor
cld
jmp
mov
dec
xor
test
and
add
and
jecxz
andb
lods
dec
mov
ljmp
sbb
stc
rclb
adc
xor
stos
add
xchg
mov
adc
push
fmull
cmp
mov
inc
adc
add
jno
in
jo
add
sub
rolb
cmp
add
push
xor
xchg
jns
loope
and
lahf
ja
xchg
mov
adc
fdivp
and
add
add
adc
mov
cmpsl
sbb
and
add
inc
or
pop
aad
mov
push
xchg
stc
or
mov
shl
or
mov
loope
adc
outsl
cmp
insl
es
out
loope
xchg
jns
mov
xor
out
clc
pop
sub
shrl
enter
popa
hlt
cs
adc
inc
stos
cmc
fstps
cli
mov
xor
cmp
jnp
xor
jmp
jmp
cmpsl
and
insl
mov
fstps
in
xchg
shll
sub
or
movsl
andb
insl
mov
mov
and
enter
cltd
xor
or
pop
ss
jbe
inc
cmp
bound
jo
mov
mov
add
sub
popa
addr16
fs
mov
sub
mov
dec
push
xor
ja
mull
dec
sbb
daa
adc
push
inc
std
lock
cmp
push
or
js
ret
lock
push
repnz
cmc
cmpl
pop
insl
xchg
out
push
int
mov
fnstenv
cmc
xor
push
jo
adc
jbe
add
xchg
rclb
sbb
and
fsubs
xor
mov
int
shl
add
lods
lahf
call
sub
leave
pusha
mov
lcall
pop
pop
push
repnz
and
mov
push
orl
bound
icebp
xor
test
rcll
ret
push
xchg
int3
dec
addr16
lea
pop
movsl
scas
in
mov
and
mov
cmpsb
add
inc
jns
movl
sahf
and
ss
push
mov
andb
shll
mov
cmpsb
ret
insb
mov
mov
sti
jmp
push
lret
popa
push
inc
insb
pop
mov
out
inc
outsb
cltd
mov
ret
mov
jge
into
sub
add
nop
add
dec
sbb
xchg
mov
dec
movsb
mov
sub
jbe
mov
fiadds
fwait
fwait
push
cmpsl
mov
rcll
jle
loopne
pop
mov
jb
gs
mov
cmpsl
adc
push
loop
fwait
pop
xchg
adc
aad
dec
mov
pushf
in
loope
in
lcall
aam
mov
rcrb
ret
pop
inc
iret
notb
xor
mov
dec
out
pusha
in
xlat
xorb
adc
stos
mov
push
shll
xchg
push
lcall
sbb
mov
add
movsl
test
pusha
jp
shlb
cmp
outsb
add
ds
inc
inc
inc
pusha
sbb
loopne
inc
sbb
xor
mov
fbstp
xor
lahf
faddl
hlt
xchg
test
mov
inc
insb
and
out
test
rcrb
push
push
xor
es
jno
push
cmp
mov
jmp
mov
in
dec
repnz
dec
outsb
adc
dec
cmc
fidivl
sti
xor
pop
mov
rcrb
imul
dec
dec
gs
inc
jns
insl
sbb
into
mov
push
mov
test
pop
sbb
push
pop
jl
insb
push
xor
cld
xor
mov
fwait
out
push
mov
pusha
out
hlt
jge
fwait
cmp
xor
es
and
imul
jge
pop
mov
cld
add
cmpsl
cmc
xor
push
lock
lret
aad
or
inc
pop
fistl
mov
dec
mov
lds
mov
orl
lret
dec
inc
sbb
mov
rolb
fldenv
stc
aad
andl
pop
es
test
xchg
dec
xlat
xchg
aaa
xor
subl
cmp
in
and
push
scas
dec
lcall
movsb
and
sub
out
pusha
outsb
test
cmpsb
adcb
lret
movsb
jle
push
mov
jmp
mov
or
mov
and
mov
scas
inc
test
cmp
or
roll
fsubl
ret
fs
aam
adc
test
fstpt
pop
repz
popf
xchg
iret
jge
shl
arpl
dec
mov
push
jge
loop
push
filds
push
mov
inc
dec
in
inc
mov
mov
movl
clc
leave
mov
jbe
xlat
test
sub
mov
xchg
and
cmp
dec
addr16
repz
cmp
dec
lcallw
inc
add
or
jno
adc
mov
insl
cmp
mov
inc
mov
fwait
mov
adc
and
dec
xchg
sub
jl
push
sub
filds
push
les
ficompl
xchg
bound
mov
or
lahf
and
lret
mov
fnstenv
mov
aaa
pop
lods
sub
mov
mov
mov
fdivl
lods
stos
test
aas
inc
lods
gs
sub
lcall
jo
jp
mov
xlat
test
dec
xchg
xor
or
fldl
lea
jge
bnd
stos
daa
daa
cmpsb
fldt
mov
cmp
insb
mov
pop
push
xchg
jmp
push
out
push
cmp
xchg
ffreep
dec
pop
inc
clc
sti
popa
add
testl
push
push
imul
mull
lods
shlb
or
cmp
or
popf
daa
shlb
test
inc
mov
nop
int3
subb
jecxz
or
ja
pop
ret
mov
mov
scas
es
mov
xlat
jnp
dec
imul
push
out
movsb
add
xchg
loope
adc
sbb
push
loope
daa
popl
inc
mov
fwait
dec
daa
sarl
or
or
lret
aam
xchg
add
sbb
repnz
lahf
addw
int
push
jb
push
mov
ss
mov
ljmp
sbb
xchg
test
mov
add
nop
rol
rorb
into
es
enter
cltd
rolb
add
cli
jp
xchg
dec
ss
cmc
mov
aam
jmp
lea
cmc
cwtl
or
sahf
loopne
das
sub
add
call
stos
dec
cmp
outsb
mov
mov
jge
sarb
cmp
and
and
paddd
sbb
mov
outsb
jecxz
lcall
dec
je
inc
cli
xchg
sahf
pop
shlb
daa
daa
fsubp
loope
mov
mov
dec
mov
dec
mov
outsb
add
popa
shr
adc
outsb
daa
test
aas
add
dec
pop
xlat
pop
outsl
daa
pop
shl
subl
fcomps
dec
cs
pop
inc
and
lretw
pushf
add
mov
cmp
mov
callw
cs
xor
addr16
jmp
mov
mov
iret
clc
mov
bound
rolb
roll
pop
and
mov
int
push
mov
fwait
pushf
or
and
mov
pop
sbbb
xchg
push
inc
mov
inc
int3
pusha
mov
xchg
mov
dec
and
es
repnz
das
adc
cmp
out
push
xor
push
loope
jmp
shlb
sbb
pop
in
jnp
scas
cs
add
cmp
ss
cmp
out
push
push
int3
dec
in
jb
sarl
xlat
mov
cltd
inc
pop
xchg
cld
cmp
fstl
loope
ret
cmp
add
cmpsl
dec
jp
mov
dec
test
push
xor
aad
mov
ja
or
add
hlt
ss
jge
mov
test
test
lcall
movsb
int3
pop
mov
data16
jle
jae
pop
xor
clc
ret
rclb
jo
sub
call
inc
hlt
lds
scas
jns
jns
aaa
xor
ds
xor
push
and
mov
cmp
ja
sub
test
adc
cmp
jl
ss
jmp
pop
inc
cli
push
scas
sbb
sub
and
mov
in
cmpsl
imul
scas
push
scas
ss
xchg
sbb
addb
out
call
repz
int
add
sub
stos
adc
pop
or
lods
pushf
aas
pop
gs
push
and
xchg
cmpsb
adc
sbb
mov
jl
nop
xchg
pop
and
jmp
in
icebp
xchg
testb
pop
stc
shlb
and
loop
push
lret
push
sbb
outsl
mov
pop
in
xchg
jo
push
aam
and
mov
in
scas
sbb
jle
outsl
push
daa
std
or
cli
lahf
mov
imul
aad
mov
shlb
outsl
jp
movsb
in
xor
aam
dec
sbb
mov
jl
xchg
inc
pop
sti
mov
xor
cmpsb
xchg
mov
sbbl
jnp
cmpsl
mov
jne
in
shrl
faddp
loope
addr16
les
fnstcw
mov
jge
pusha
outsb
fs
xchg
scas
mov
jmp
xchg
ja
fs
cmp
scas
sahf
mov
mov
jae
aad
lea
push
mov
icebp
mov
cwtl
es
jge
fdivrs
push
xchg
pop
ret
xor
lret
insb
mov
ret
loop
mul
ja
ja
scas
aas
sub
jo
test
pushf
xor
pop
add
sub
or
pop
in
int
leave
shl
ljmp
hlt
adc
lret
incb
sub
adc
mov
hlt
xor
or
insl
push
xchg
or
fimuls
xor
adc
stos
xchg
scas
xchg
in
jno
pop
push
pop
pop
icebp
les
dec
aas
xchg
out
sub
add
mov
sub
stc
loopne
cmp
mov
out
loope
lahf
mov
lret
mov
adc
movsl
xor
mov
cmp
or
inc
rcrb
push
mov
jl
mov
scas
fldl
xor
sbb
fs
mov
add
lret
or
mov
adc
jmp
shll
rsm
hlt
orb
ja
or
sbb
mov
ror
add
push
sub
dec
sub
test
push
ret
adc
jecxz
mov
jg
outsl
data16
jle
cmc
sub
mov
jecxz
inc
sub
sti
xchg
out
andb
mov
std
fsubs
or
inc
push
mov
in
sub
sbb
xchg
mov
lock
pop
pop
loope
xchg
add
popa
stos
movsl
pop
sbb
arpl
lds
add
cmp
lahf
jae
jge
pop
mov
sub
cmp
jno
es
out
cmp
frstor
lret
or
int
fsts
outsb
xchg
xor
mov
clc
or
fsubrs
xchg
leave
pop
jnp
aam
xchg
pushf
ljmp
in
ds
dec
inc
sub
dec
in
and
lea
fsts
mov
stos
pop
jnp
mov
loope
mov
les
or
sub
sub
pop
xchg
out
sbbb
and
enter
sub
adc
jb
pushf
dec
call
cli
jg
mov
xor
inc
sub
sub
xor
or
pop
adc
dec
mov
sub
bound
jo
sbb
out
jnp
push
xchg
loope
push
mov
lods
ss
data16
push
fimull
stos
iret
lds
inc
sbb
mov
cli
push
cltd
fwait
nop
jb
cmp
dec
out
dec
push
lret
add
fisubs
les
mov
mov
pop
cmpsb
stos
imul
popa
dec
and
mov
or
imul
aad
sbb
cli
jmp
lret
inc
sbb
dec
std
gs
push
out
repz
push
lods
push
ds
push
sbb
test
push
sub
mov
jg
test
scas
mov
cli
mov
mov
jl
stc
es
cwtl
pop
sbb
stos
inc
pop
mov
enter
mov
mov
cmp
divb
xor
stmxcsr
dec
sbb
pop
cmp
loop
adc
fiaddl
sub
pusha
pop
pop
dec
add
push
pop
subb
or
xlat
jnp
or
out
push
dec
mov
ficompl
int3
mov
add
sub
cmpsl
mov
cwtl
mov
inc
int3
jmp
mov
xchg
decl
push
stos
popa
shl
fldl
mov
in
loop
rorb
insl
and
out
shlb
and
xchg
fsubs
pop
push
enter
in
dec
popf
sub
mov
xor
int3
adc
pop
push
je
shr
xlat
dec
xlat
ret
add
sbb
shll
hlt
push
daa
xor
inc
insl
xor
sarl
out
scas
pop
push
gs
or
movsb
cmp
dec
push
dec
cmp
sbb
decl
pop
xor
imul
jb
cmpsl
xchg
movsl
lret
xorb
pop
ret
insl
sbb
lcall
adc
imul
jecxz
gs
fcmovnbe
out
roll
orl
push
add
ret
inc
imul
and
negl
pusha
mov
out
inc
into
lcall
imulb
sub
insb
subb
jg
in
push
mov
in
mov
sbbl
adc
lods
xor
xor
cld
mov
pop
mov
arpl
push
scas
daa
mov
imul
sti
aas
inc
insl
lret
sub
cmp
sub
lea
mov
or
sarl
pop
sbb
fstps
hlt
pushf
pop
js
jmp
dec
divl
xchg
outsl
outsl
mov
bound
test
adc
imulb
aas
test
jg
fmul
mov
outsl
imul
clc
lods
mull
test
loop
nop
daa
ds
add
scas
call
cmp
lahf
jb
adc
jnp
int
lea
iret
jge
int
xor
gs
push
pushf
mov
adc
sti
out
inc
lret
sbb
lds
jnp
push
rorb
movsl
lret
xchg
sarb
mov
mov
hlt
xchg
cmp
dec
push
mov
repz
std
or
cmp
pop
cmp
and
mov
jl
cld
hlt
cmp
and
fdivrs
int3
cmp
xchg
push
jecxz
loope
hlt
mov
mov
shll
shll
cmp
mov
bound
push
jb
inc
inc
and
repz
lret
jecxz
sbbb
imul
mov
mov
push
push
aaa
pop
cmp
mov
lret
fs
inc
mull
les
cltd
scas
wrmsr
pop
sub
fsubrl
scas
push
cmp
mov
dec
sub
pop
insb
fmull
call
mulb
stos
mov
popf
lods
pop
mov
loopne
mov
mov
or
or
inc
repnz
repz
push
and
inc
or
sbb
push
out
es
pop
or
push
inc
mov
leave
push
ds
cli
lea
arpl
popf
sti
daa
sub
or
outsl
lods
or
mov
nop
ret
scas
sub
xor
cmp
fwait
adc
inc
ljmp
dec
cmc
cmpl
mov
rorl
roll
dec
int3
and
mov
and
sbb
and
add
addr16
sub
sub
or
mov
push
or
dec
sub
and
je
push
xchg
notl
in
adc
inc
dec
push
aaa
loop
daa
adc
push
leave
xchg
sarl
and
pop
cmp
int3
movsb
mov
sbb
jbe
and
xchg
sbb
pop
cli
mov
xor
out
out
add
push
xor
sbbl
or
dec
shlb
pop
std
dec
icebp
cmp
mov
rolb
jg
sbb
pop
cmpsb
mov
into
jno
xor
movd
cmpsb
mov
icebp
push
lods
rcrl
mov
in
pusha
js
cmp
jb
imul
add
xchg
rol
cs
add
loope
or
jmp
push
xchg
mov
addl
out
inc
sbb
imul
jp
sbb
ja
imul
jae
push
icebp
fucomp
sbb
and
out
xchg
mov
cmp
cvtps2pd
stos
out
stos
cmpl
push
out
jbe
adc
mov
and
loopne
cs
push
out
dec
xchg
adc
inc
ds
stos
or
mov
repnz
scas
pop
sbb
push
pop
xor
jg
adc
shl
add
cli
add
call
sub
ss
pop
adc
repnz
dec
fsubs
es
ret
xchg
inc
cmp
lods
mov
emms
and
stos
sub
jg
pushf
sbb
pusha
sub
mov
xor
into
lods
lret
mov
sub
fistl
cmp
mov
sti
cmpsb
push
cmp
sarb
daa
in
loope
sub
lret
dec
xchg
jle
jno
pop
arpl
xor
inc
lods
push
push
orl
aam
fucomp
ss
push
inc
dec
adc
out
pop
mov
idivl
les
or
ret
arpl
outsb
test
mov
popf
mov
or
js
imul
jecxz
pushf
lret
sahf
popa
sbb
mov
sub
jecxz
dec
and
xor
fcmovnbe
incl
rorb
lahf
push
int3
mov
out
adc
cltd
add
mov
or
inc
loopne
out
out
mov
sbb
inc
lcall
jno
outsb
test
sub
dec
data16
xlat
cli
xchg
push
cmp
add
bound
xor
jl
pop
insl
or
or
aam
mov
xor
in
inc
loopne
cmpsl
adc
pushf
ficomps
ja
inc
lds
pop
mov
ds
and
adc
and
repnz
popa
popa
inc
sub
es
aas
in
in
mov
lret
into
jno
mov
push
mov
pop
jecxz
xor
lds
push
ret
adc
cld
insb
jno
xor
push
pop
ret
aam
xor
das
es
scas
jp
push
gs
cltd
icebp
mov
xlat
popf
ljmp
cmpsl
cwtl
mov
cs
add
xor
and
nop
push
or
dec
jb
repz
mov
add
ja
inc
ljmp
cwtl
sub
dec
and
mov
inc
js
adc
fistps
sub
push
mov
mov
xor
out
lea
stos
lret
xchg
cltd
arpl
leave
sbb
stc
mov
notl
mov
add
or
out
jns
xchg
cmp
mov
sbb
les
movsb
shrb
sti
aam
inc
jecxz
xor
insb
adc
pop
xchg
gs
ja
add
enter
stos
dec
lea
push
xor
pop
dec
aaa
inc
sbb
push
push
and
shrb
mov
rcr
mov
mov
jp
fistl
sub
icebp
jge
in
iret
std
jae
pop
pcmpgtb
pop
jnp
push
pop
mov
into
arpl
mov
hlt
cmp
sti
dec
aad
aad
adc
inc
pop
sbb
xchg
jl
mov
sbb
cmp
in
mov
aaa
bound
push
dec
push
mov
pop
lret
add
bound
out
adc
nop
out
inc
mov
int3
test
xor
ret
or
inc
lret
pop
dec
jp
cmpsl
push
dec
mov
cmp
cli
pop
mov
shrb
inc
inc
movsb
shrl
dec
lret
sub
leave
fists
and
xchg
jo
in
mov
adc
push
js
xor
and
aam
push
pushf
dec
outsb
mov
push
inc
push
fcompl
add
test
mov
lds
dec
jo
scas
jo
mov
jnp
inc
push
ja
mov
mov
inc
mov
cmpsb
aas
pop
xchg
lods
clc
stc
cmp
sbb
push
insl
stc
dec
or
push
mov
adc
cltd
mulb
daa
data16
stc
mov
push
xorb
out
lea
push
movsb
outsl
cmpsb
addr16
mov
mov
cmpsl
imul
insb
mov
ja
xlat
xchg
push
xchg
mov
pop
inc
adc
mov
mov
xor
cmp
dec
outsl
jb
fwait
inc
cmp
in
cmpl
and
and
mov
cmp
pop
popa
sub
inc
mov
out
inc
cs
jmp
and
push
psubd
test
pop
sub
into
nop
sbb
mov
stc
xchg
push
pop
fisttpl
aam
lret
test
cmp
js
scas
pop
xchg
add
bound
pop
fbstp
xor
mov
push
imul
lea
pop
int
pop
loopne
xor
enter
and
adc
into
mov
and
jge
int
add
adc
adc
mov
loopnew
out
dec
movsl
jno
cmpb
add
aas
fldenv
inc
jbe
add
push
cmp
inc
jge
aaa
xor
push
mov
inc
cmpsl
lods
leave
lods
or
push
mov
mov
aad
rorb
in
adc
jno
jnp
test
icebp
dec
push
bound
mov
je
test
insl
mov
pop
ss
repz
jg
lods
nop
jl
jle
outsb
test
js
call
add
pop
sub
scas
lret
push
ja
inc
in
pop
cmp
mov
rcll
cs
into
dec
out
loope
in
insb
xor
mov
movsb
shll
mov
inc
addr16
dec
popf
ja
insl
inc
jmp
dec
add
mov
lds
xorl
jl
negl
jns
insb
lret
loop
movsl
inc
aas
jecxz
pushl
mov
inc
lea
out
push
lret
iret
xor
jo
push
cld
pop
ds
cltd
sahf
ljmp
aam
das
or
sbb
adc
lcall
int3
ret
pusha
rorb
sbb
sbb
cltd
js
test
mov
mov
dec
cli
mov
aam
sbb
or
faddl
xor
fs
push
fstpt
mov
insb
fisttpll
imul
sub
fildll
ss
dec
stos
cwtl
pop
sahf
cli
out
aad
scas
stos
int
push
cmp
dec
add
idivb
pop
es
jge
loopne
imul
jecxz
mov
push
inc
cld
fistl
outsb
xchg
xchg
loope
call
inc
adc
add
arpl
dec
xlat
adc
out
dec
adc
mov
lods
in
sbbl
sub
add
gs
stc
js
xchg
es
sbb
cmp
in
and
sbb
in
popaw
ja
fimull
adc
shlb
inc
icebp
jno
xor
jb
push
aad
mov
mov
cmp
xchg
xlat
inc
fnstcw
add
push
mov
xchg
mov
xor
sti
add
jnp
dec
mov
pop
or
mov
add
xor
mov
cmc
sbb
adc
add
cmp
mov
movl
cmpsb
xor
mov
jo
xchg
mov
test
sub
ficompl
jmp
sbb
jp
andl
aad
ss
je
mov
lods
push
xlat
int3
or
inc
pop
cmp
sbb
push
cmp
test
mov
push
xchg
jnp
lret
xor
aad
cmc
scas
jb
xchg
mov
cmp
cmp
cmp
test
xchg
dec
mov
jbe
xlat
imul
stc
dec
jo
sar
jno
adc
jbe
mov
xchg
xlat
or
mov
je
scas
enter
add
push
dec
outsb
or
mov
mov
xchg
jne
call
pop
adc
xor
cwtl
mov
in
cli
sbb
xor
adc
shrl
mov
shlb
pop
aas
mov
into
mov
mov
leave
cmp
sbb
stc
or
jle
dec
fbstp
adc
mov
jl
jle
movq
je
mov
pop
pop
push
aam
test
stos
mov
mov
cmp
scas
std
lds
xchg
ret
mov
shl
inc
and
mov
cmp
insb
push
repz
pop
mov
mov
sub
push
mov
inc
mov
jle
pushf
cmp
jns
pop
insl
push
mov
mov
movsl
push
cwtl
jle
xchg
xchg
cmp
mov
enter
sub
jne
pop
adc
out
fisubrl
push
and
cmp
mov
lds
aam
jge
loopne
nop
or
mov
lret
push
xor
imul
sub
addl
imul
xor
push
push
jno
pop
or
sub
lahf
mov
mov
cmp
arpl
hlt
mov
lcall
jmp
or
int3
outsb
popf
mov
sub
iret
hlt
mov
mov
add
into
pop
adc
adc
add
dec
cmpl
inc
cmc
test
ja
imul
sbb
paddusb
mov
stos
jp
cmp
mov
pop
inc
fildll
mov
mov
jae
xor
popf
mov
mov
cmp
inc
pop
loope
mov
push
aam
ret
lods
mov
add
mov
xchg
or
rcl
cmp
pusha
shl
lret
rolb
frstor
repnz
xchg
sbb
inc
mov
in
mov
ja
mov
add
jbe
add
xor
push
inc
int
out
mov
test
imul
testb
sub
fisubs
add
jg
mov
pop
lds
mov
daa
sbb
sub
mov
popf
add
and
into
xchg
ficoml
cmp
mov
leave
int
jecxz
repz
mov
pushl
es
jns
loope
mov
gs
aad
out
lahf
imul
sti
subb
adc
scas
jmp
aas
add
data16
push
mov
jl
lods
nop
incl
adc
jb
push
and
ljmp
inc
mov
stos
xchg
mov
push
mov
jo
jmp
aas
stc
lock
hlt
push
xor
push
stos
out
adc
ret
rorl
inc
divb
inc
nop
rorb
xchg
cwtl
push
jecxz
stos
sbb
mov
testl
dec
cltd
mov
mov
add
mov
int
notb
mov
sbb
jmp
jae
push
sbb
arpl
add
lret
inc
xor
inc
inc
pop
test
jp
mov
jp
bnd
inc
fs
pop
sbb
jle
call
scas
mov
cmp
mov
mov
int
icebp
or
popl
cmp
mov
adc
fidivl
out
orl
jg
ljmp
xchg
or
xor
cmp
mov
stc
stos
push
sub
ret
lods
xor
in
cmpsl
out
and
push
xor
rolb
js
or
adc
clc
fs
scas
test
out
adc
sub
xor
popf
cmpsl
or
lahf
aad
xchg
jns
push
out
dec
and
out
popf
aad
jne
fmull
cmpsb
dec
out
jl
xchg
mov
push
mov
movsl
inc
push
cs
mov
mov
data16
ret
lret
mov
and
mov
pusha
mov
or
jno
cmp
cs
repnz
das
jle
xchg
dec
xchg
pop
xor
int
test
pop
cli
into
inc
cltd
adc
and
pushf
and
mov
outsb
pop
fcompl
cmp
lret
cmp
movsb
jb
enter
loop
inc
push
push
inc
imul
fucomp
ss
mov
loopne
mov
jg
jns
jne
xchg
sub
popa
cmp
in
pop
dec
mov
ret
sbb
jmp
adc
movsb
and
nop
mov
jae
shrl
fbstp
std
mov
or
and
rcll
shrl
and
xor
fcoms
jnp
pop
inc
lret
or
adc
mov
jb
sub
sbb
xlat
and
inc
dec
pop
push
stos
sub
lds
outsl
bound
mov
xorl
icebp
sbb
mov
inc
add
mov
sub
push
test
fisttps
push
sahf
mov
xlat
jo
adc
xlat
cmpl
inc
sub
idivb
sahf
arpl
mov
int
call
in
int3
andl
mov
lcall
lods
add
inc
dec
mov
xor
jecxz
out
dec
xlat
out
add
dec
pop
lods
loop
dec
xor
sti
xchg
int3
lock
and
rorb
repz
leave
jle
mov
dec
and
lods
mov
mov
jnp
inc
mov
icebp
scas
adcb
pop
mov
lods
or
in
push
shrl
add
pop
lea
into
insl
mov
pop
je
je
jne
ret
movsb
scas
mov
mov
test
push
loop
mov
ljmp
lahf
outsl
add
mov
jno
push
lods
fdivp
lea
xor
lods
and
cmp
out
insl
fsubl
inc
arpl
test
loop
aam
rcll
push
add
lret
in
jmp
ret
ds
push
bound
fldcw
outsl
insl
outsb
dec
sbb
in
mov
jb
fldl
pop
fistpl
mov
mov
add
inc
stos
xor
mov
insb
test
cmp
nop
xor
xor
imul
cmp
ljmp
pop
aad
or
movsb
gs
call
cli
cmp
dec
sbb
add
pop
adc
xchg
fs
ss
addl
jne
push
repz
adc
sub
jb
cmp
lds
mov
es
pop
pop
jnp
in
mov
sbb
mov
gs
mov
jle
lret
arpl
sti
jnp
sbb
loope
mov
dec
andb
out
sub
xlat
adc
popa
inc
push
rolb
aaa
jmp
push
and
sub
dec
mov
icebp
cmp
push
jnp
inc
sti
out
std
loopne
imul
popa
and
mov
movsl
and
sub
jne
movsb
mov
inc
ret
lods
loopne
in
mov
xor
aam
jge
popf
sbbl
add
mov
leave
insb
sbb
pop
jge
mov
mov
roll
fld
sarb
xchg
fs
xchg
jno
lret
add
ret
bnd
in
pop
aad
cmpsb
std
fdivrs
sbb
adc
stos
das
inc
mov
repnz
push
fidivs
ljmp
jecxz
popf
xchg
jnp
xorl
xchg
push
aas
popa
push
lret
mov
lret
repz
push
pushf
push
add
stos
fstpl
mov
cmp
adc
stos
stos
dec
cmp
or
mov
add
repnz
add
in
sbb
cmp
push
jle
iret
js
loope
fimuls
xor
fnsave
jg
xchg
mov
mov
dec
push
mov
add
dec
sbb
mov
jl
cmpsl
push
pop
fcoms
mov
lret
les
pop
push
js
xchg
sbb
popf
push
push
data16
mov
push
cmp
pop
push
add
adcb
and
test
je
test
das
loopne
xchg
sbb
ss
dec
add
dec
add
or
add
popf
dec
sarb
loop
popa
mov
test
popa
ret
xor
sbb
add
sub
jne
leave
lahf
mov
pop
popa
in
test
lea
mov
xlat
adc
add
mov
movsl
stc
dec
scas
mov
int3
add
out
cltd
int3
adc
sbb
insl
dec
jp
iret
in
xchg
pop
dec
and
push
out
mov
mov
dec
int3
push
fwait
jge
mov
imul
xorl
push
in
push
cltd
int
xor
xor
add
mov
pop
pop
jl
divb
mov
and
mov
push
sahf
popf
mov
pop
or
out
push
sbb
sbb
xchg
and
cmp
dec
leave
and
dec
sub
lock
mov
add
sbb
cmova
outsl
movsl
dec
dec
jmp
ret
inc
jmp
push
xchg
hlt
and
rcrb
add
and
outsb
inc
fiadds
jno
mov
pop
test
add
pop
jae
sbb
pop
inc
stos
movb
lds
mov
pop
adc
pop
sbb
fsubrl
mov
aaa
call
ljmp
fidivrs
and
sbb
shlb
call
test
jno
cmpb
popf
jecxz
mov
sub
nop
arpl
fwait
and
jmp
sti
aaa
push
dec
push
inc
inc
xchg
jne
out
push
jae
pop
outsb
in
cmp
mov
push
insl
xor
mov
mov
fwait
jl
into
sub
add
jmp
dec
xor
sbb
dec
inc
out
mov
and
xor
iret
pop
inc
cli
outsl
mov
jne
dec
mov
jg
jo
jnp
sbb
lock
fsubrl
mov
add
push
sbb
bound
sub
add
adc
adc
mov
jo
dec
movsb
jecxz
bound
and
adc
and
add
jo
jmp
mov
das
loope
mov
cmp
aas
aas
bound
cmp
scas
gs
mov
incb
mov
and
stc
test
sub
cmp
rorb
mov
mov
inc
cmp
xor
jbe
lret
dec
int3
push
aas
mov
sub
push
rcrl
mov
xchg
and
push
lcall
sub
fadds
sti
jno
outsl
xchg
cmp
xchg
aas
insl
clc
ret
movsl
xlat
jle
xchg
xor
jo
addr16
sub
and
jnp
pop
out
cmp
mov
dec
mov
mov
mov
adc
daa
cmpsb
es
les
mov
or
sbb
outsl
filds
movsb
dec
sbb
inc
mov
jmp
outsl
pop
lods
dec
int3
fcomps
dec
dec
fwait
icebp
shll
fstl
or
clc
fstps
icebp
popf
fwait
arpl
inc
repnz
or
fidivs
popf
sti
lcall
mov
push
jnp
imul
mov
gs
rorb
xchg
sub
pop
sub
addr16
mov
pop
sub
mov
dec
jge
rorl
nopl
sbb
push
dec
push
pop
out
sbb
lret
inc
mov
jge
adc
mov
mov
cmp
int
dec
add
and
pushl
pop
test
xor
inc
jge
mov
jg
dec
cmpb
sbb
testl
xchg
lock
mov
sub
test
mov
push
leave
daa
xchg
pop
lret
pop
repz
add
sub
sbb
dec
std
ljmp
lcall
mov
andb
mov
xlat
test
stc
xchg
rcrl
test
sbb
iret
daa
mov
mov
mov
cltd
ja
lret
scas
inc
outsl
subb
lcall
aam
pcmpeqb
xchg
roll
or
push
cltd
pop
cmp
sub
sbb
jae
cmp
pushf
cmp
js
aad
out
ret
cli
xor
xchg
or
pushf
push
enter
cmp
jmp
fimull
xchg
pop
lret
movsl
jle
mov
xor
mov
sub
shl
fimull
ret
pushf
mov
stos
negl
gs
dec
int
fmull
bound
xlat
mov
xor
incb
push
cmpsl
sbb
stc
sub
push
rcr
push
push
clc
aaa
mov
xchg
jae
fcompl
inc
mov
outsb
fistpl
stc
mov
ret
mov
add
dec
insb
cmpsl
daa
cwtl
aaa
adc
inc
mov
pop
xchg
pop
dec
mov
rcll
mov
fidivs
inc
outsl
lods
pop
sahf
mov
cmpsb
loop
xchg
sub
xchg
cld
neg
movl
sti
fisttps
jl
into
fisttpll
insb
ds
lods
sub
xchg
imul
je
mov
or
out
pop
ds
mov
xchg
std
xchg
fisubrl
or
js
xchg
mov
ljmp
push
out
cmp
xor
mov
roll
jno
mov
sbb
inc
push
adc
xchg
sahf
sub
mov
sbb
pop
sbb
mov
loop
fsts
test
mov
or
cmpsb
fsts
rcrl
and
jge
push
jg
push
imul
sbb
mov
mov
mov
test
jbe
pop
dec
mov
lods
bound
icebp
jo
popl
jge
jmp
mov
iret
xchg
pop
mov
dec
sub
insb
das
pushf
push
mov
xor
push
xchg
xor
ss
pop
aad
call
stos
mov
imul
jmp
push
fstps
lahf
mov
movsl
rcll
xor
sahf
shlb
xor
cmp
pop
negb
aam
xor
sahf
xchg
sbb
ds
add
mov
or
mov
xor
adc
push
jno
scas
push
pop
fwait
sub
into
mov
out
push
xor
jmp
jb
sbbl
mov
mov
gs
pop
pop
dec
mov
inc
ret
sub
jle
push
negl
jnp
mov
add
enter
out
fnstcw
out
mov
mov
aaa
js
std
into
xchg
loop
mov
sub
mov
mov
inc
mov
dec
push
xor
fwait
or
insb
xor
dec
clc
repnz
aas
xchg
mov
jo
out
mov
xchg
sbb
test
lock
xor
pushf
imul
jb
add
mov
js
mov
scas
sbb
push
pop
or
mov
cmpsl
xor
xchg
xchg
clc
les
xchg
sbb
dec
or
sti
sahf
lahf
xor
adc
pushf
xchg
pop
jl
dec
push
scas
pop
repnz
pop
and
fsubrs
pop
cmc
lret
or
fimull
lahf
pop
int
mov
fs
jne
inc
pushf
push
imull
add
jnp
sub
sbb
jae
xor
jecxz
cwtl
xchg
pop
nop
imul
sbb
inc
movhps
imul
sbb
repz
rcll
push
cld
sbb
or
rolb
psllq
imul
xchg
aas
pop
xor
out
or
and
fisubrl
scas
xchg
xchg
push
adc
cwtl
in
lods
ret
adc
mov
xchg
jl
push
addb
shll
or
insl
out
aam
out
es
fs
lods
dec
enter
adc
mov
or
imul
pop
fwait
je
int3
loopne
sub
inc
aaa
shrb
aas
pop
out
push
fimull
dec
dec
inc
push
xchg
or
sub
mov
jg
loopne
xchg
mov
outsb
into
xchg
shlb
and
mov
mov
test
or
daa
pop
icebp
jge
call
sarl
xor
aad
pushf
pop
int3
insb
outsl
pushf
es
stos
enter
subb
js
or
jg
xchg
fmuls
cmp
cmpsb
mov
clc
mov
and
scas
shlb
xchg
fimuls
cmc
or
das
in
ss
mov
sub
cmp
imul
pop
ljmp
fsubs
cmp
mov
xor
test
imul
cmpl
adc
lret
adc
mov
xchg
cmpsb
mov
js
mov
outsb
lahf
xor
jl
scas
negl
out
ret
into
pop
push
sub
movsb
sbb
push
xor
pop
sbb
fisttpl
pop
mov
add
lret
mov
add
sar
test
cmp
lcall
mov
pop
cltd
cld
aad
xchg
and
mov
xchg
sub
lock
cwtl
mov
jp
enter
or
adc
les
pop
or
jbe
xchg
cs
ret
sub
push
mov
mov
movsb
add
out
leave
sahf
push
mov
sbb
inc
push
in
mov
dec
pop
sbb
inc
xchg
mov
push
cmpsb
sub
out
mov
cmp
out
ja
cltd
or
mov
push
push
dec
sub
fisubrs
das
push
imul
dec
xchg
mov
pop
int3
jae
sbb
mov
cmc
mov
popf
imulb
movsb
in
push
fidivs
adc
ret
sbbl
cmc
outsl
or
cltd
add
cmp
pop
dec
adc
out
enter
jns,pn
xchg
adc
ret
shrb
movsl
ljmp
out
test
arpl
inc
mov
jge
movsl
inc
arpl
inc
cmp
fwait
mov
pop
push
enter
clc
idivb
fsts
inc
lods
aam
add
dec
mov
hlt
fldt
push
subb
jne,pn
jns
cmp
jae
cmp
loop
cmc
jne
mov
mov
xor
jge
cmc
sahf
rorb
xchg
jle
enterw
ror
cmp
jl
mov
rcrb
pop
mov
push
ljmp
stos
mov
shlb
inc
ret
aad
or
nop
xchg
mov
mov
mov
add
mov
shll
cmpsb
sub
jecxz
adc
lcall
sahf
sub
push
mov
push
in
push
dec
add
pop
das
sti
movsb
fisttpl
pop
xchg
js
test
push
in
call
dec
xchg
cs
jne
scas
inc
dec
jns
ss
xchg
and
jg
push
stc
add
and
pop
out
xor
shrb
adc
sbb
in
sbb
xchg
fiaddl
cli
mov
pop
loopne
mov
scas
jg
loopne
sbb
fwait
dec
sbb
lods
xchg
fadd
rcr
stos
mov
push
jmp
sbb
sbb
std
add
add
mov
mov
aam
repz
adc
fsubrl
leave
sbb
mov
iret
std
fnstcw
test
push
push
jg
loopne
test
ja
ret
insl
inc
add
ss
movsl
pop
repz
jb
push
adc
cmp
xchg
push
mov
xchg
pop
repz
lcall
mov
push
lcall
fimuls
cld
dec
add
into
call
push
mov
shlb
jae
icebp
sub
mov
cmp
or
mov
aaa
pop
or
loope
ficoml
push
enter
leave
jge
setge
mov
pop
sbb
pop
js
lcall
out
xchg
in
pop
inc
sti
jl
xchg
push
inc
lea
xor
movsl
testb
push
fisttps
std
inc
jl
movsb
repz
sbb
xor
shrl
sarb
xadd
jecxz
push
mulb
test
cmp
dec
roll
dec
in
push
loop
mov
xchg
inc
jo
iret
xlat
sub
dec
xor
or
aas
mov
xor
push
popf
subl
jge
fcomps
nop
in
xchg
sbb
popa
ficomps
cmp
or
in
and
cwtl
mov
insl
mov
push
int
sbb
jle
adc
loopne
sub
inc
jg
inc
ljmp
lods
add
pop
sbb
sub
ret
outsl
jbe
jl
push
aas
push
jo
push
xor
jne
mov
stos
pop
push
inc
lds
sbb
and
outsl
fidivl
shlb
lds
loope
dec
mull
ret
sbb
cmpsl
sbb
inc
outsb
pop
mov
sti
sbb
push
pop
lahf
in
fdivrl
sbb
cmp
adc
test
sbb
push
ds
lret
add
ss
clc
je
pusha
mov
fmuls
stos
daa
jmp
jl
mov
ret
or
pop
shlb
cmp
and
rcll
cld
pop
fdecstp
imul
mov
inc
push
leave
pop
mov
pusha
mov
lock
adc
jb
mov
scas
scas
sbb
jbe
pop
lods
sti
mov
mov
inc
push
or
mov
xchg
inc
push
out
call
xlat
scas
sub
fwait
lods
repz
and
push
cmpsl
xchg
mov
repnz
adc
push
dec
jge
scas
dec
dec
ret
xor
sub
add
mov
xlat
jmp
es
popl
push
pop
cmp
rcrb
adc
lahf
pop
jle
push
xor
jmp
push
js
imul
sbb
adc
jge
jnp
lods
sbb
mov
fisubrl
dec
jnp
mov
fldl2e
mov
fptan
call
sbb
mov
or
cwtl
add
fisubrl
inc
or
sub
pop
lret
bound
push
jbe
test
xor
push
xlat
mov
dec
jg
ja
inc
jo
inc
push
or
push
mov
lret
pusha
dec
lods
sub
mov
pop
repnz
out
movsl
out
cmp
movsb
sahf
or
mov
pop
xor
fstp
test
or
mul
orl
in
inc
fistpll
mov
ja
hlt
and
ds
sub
call
or
imul
mov
jge
lret
inc
fsts
lcall
mov
xor
addr16
or
cwtl
fsubrs
movsb
lock
into
fmull
pop
pop
and
mov
subb
ficoms
push
xor
push
adc
mov
and
pop
mov
stos
cmc
add
clc
test
sbb
xchg
daa
fstl
dec
inc
popf
inc
mov
sahf
adc
adc
insl
insl
das
fists
lea
daa
cld
dec
xor
into
fldl
xchg
out
ret
rcrb
ficomps
dec
push
jae
xor
or
int
lock
xor
mov
imull
lds
lea
and
movsb
pusha
out
sub
and
or
inc
jae
add
aaa
pop
stos
dec
lds
adc
sub
mov
fwait
std
outsl
push
test
call
enter
lret
cmc
and
xchg
dec
in
sub
idiv
scas
xchg
mov
xor
and
xor
daa
dec
pop
out
push
inc
sub
mov
or
fldenv
js
jb
push
inc
popl
and
inc
fdivrp
insb
inc
sbb
add
std
sub
lcall
dec
mov
or
jbe
xor
push
cmpsl
or
mov
je
ds
fs
std
sahf
daa
pop
scas
in
nop
mov
test
je
pop
or
sub
clc
out
sarl
pop
push
lcall
and
xchg
shr
cmpsb
rcrl
jns
dec
cmpl
mov
cs
filds
adc
or
shl
xor
aas
lock
add
mov
int3
sahf
jp
pop
mov
sarl
xor
mov
pop
ja
jecxz
rorl
fbstp
mov
loopne
js
mov
push
out
scas
and
int3
xchg
mov
add
ror
pusha
stc
inc
cmp
inc
cmp
mov
or
ret
arpl
fildl
js
loopne
neg
mov
xor
scas
or
dec
adc
mov
push
sub
dec
xor
adc
and
push
and
sbb
movsb
and
jae
sub
xor
lock
icebp
jbe
and
cmpsl
add
jnp
mov
jb
or
mov
dec
sub
pusha
inc
outsl
les
aaa
rcrb
sbb
js
jno
pop
aas
or
push
in
add
add
dec
fadd
les
loopne
push
cmp
rcrl
jecxz
xchg
iret
push
inc
push
cmp
lods
add
loopne
cmpsb
xlat
mov
imul
sahf
enter
inc
loop
stc
fsubs
nop
xchg
mov
in
movsb
mov
out
ffree
mov
push
push
clc
jno
push
hlt
movsb
mov
push
push
out
sahf
out
pop
fcmove
mov
imul
push
cmpsb
mov
push
fsub
sbb
fsubrp
sbb
xchg
adcl
js
inc
push
aas
mov
adc
mov
out
adc
cmp
add
mov
aas
xchg
mov
lock
std
mov
ret
adc
pop
push
adc
adc
in
rcll
cwtl
cmp
andb
sbb
aaa
push
addr16
out
loopne
or
int3
mov
adc
mov
fsubs
dec
sub
out
ljmp
jp
daa
xor
jae
xor
xlat
sahf
ds
movsb
pusha
and
sbb
jmp
and
xchg
nop
mov
cwtl
and
mov
das
add
mov
enter
outsl
in
and
or
and
fwait
test
cmp
in
mov
mov
and
jns
fucomip
push
ja
sub
jl
fcoml
jno
in
sub
andb
fsubs
adc
xlat
bound
push
or
dec
mov
cli
xorl
xlat
mov
push
sti
lods
dec
call
fists
fildll
in
xor
aad
pop
inc
pop
sahf
sub
les
dec
adc
dec
subb
cltd
xor
fwait
mov
int3
sti
adc
xchg
enter
dec
negl
stc
stos
push
test
mov
scas
jb
push
cmp
repz
push
cld
cs
and
out
shlb
sbb
adc
sbb
dec
pushf
jg
sar
addb
pop
xor
loopne
mov
pop
je
mov
stos
andb
and
and
ret
nop
xchg
lock
push
push
sub
jnp
fidivs
jmp
movb
pop
push
int
bound
jae
adc
ud2
outsl
jne
lret
lods
lea
pop
mov
mov
cmpsl
push
dec
pop
in
ja
mov
lret
fcoml
jle
jg
xor
loop
pop
insl
std
gs
aas
test
or
fists
add
sbb
sti
jle
mov
mov
jg
gs
sbb
adc
and
sub
roll
cmc
ret
iret
popf
cmp
fs
mov
push
push
dec
mov
js
sbb
stos
int
push
psubusw
mov
aam
mov
mov
loop
aas
jl
cmc
lods
inc
mov
imul
aas
add
and
cmpsb
or
dec
pushf
pushf
movaps
mov
add
insl
push
pop
xor
loope
jb
jns
sub
es
hlt
in
mov
dec
dec
xchg
hlt
pusha
xchg
sahf
in
add
xchg
bound
pop
out
mov
sub
cmc
fisttps
ja
dec
mov
mov
pop
push
adc
fmull
add
in
fsub
orl
pop
lock
in
ficomps
outsb
cld
push
mov
sbb
or
jae
mov
jns
test
pop
xchg
sti
sbb
ret
dec
fwait
mov
shrb
pushl
les
sub
mov
jge
repz
xchg
mov
mov
cld
loopne
mov
loope
sub
int3
xchg
loope
sbbl
cmc
push
cld
fidivrs
xor
and
dec
icebp
mov
call
aaa
pop
outsb
movsl
in
mov
add
rcl
test
fisttpll
in
push
insl
pop
aas
mov
xor
or
imul
push
mov
xchg
push
dec
lods
enter
stc
in
push
aam
fcomp
jbe
scas
and
sub
fcoms
jge
push
repnz
ss
add
sbb
into
xor
repz
pop
cld
adc
subl
popa
in
xor
mov
and
test
aaa
or
aaa
sbb
sbb
or
sbb
mov
add
shll
gs
stc
push
or
inc
or
sbb
in
stos
lcall
cld
inc
call
daa
pop
rorb
rorl
enter
mov
int
cmp
dec
jg
in
xor
fstpt
in
mov
pop
movsl
and
cmp
movsl
or
cmpsl
mov
cld
stos
xor
rorb
sub
jp
sub
arpl
jge
push
enter
jns
push
pop
stc
lret
push
jle
push
mov
xor
xchg
in
or
mov
mov
scas
lods
mov
push
test
push
inc
jne
rcll
xsaveopt
sbb
aam
jno
xor
jle
ss
inc
loop
inc
loope
mov
cld
mov
in
or
arpl
jb
adc
movsw
sbb
ret
push
stos
imul
xlat
pop
cwtl
and
sbb
adc
xor
mov
ficomps
mov
test
lds
scas
adc
fldenv
xlat
dec
xchg
push
xchg
cmp
xchg
ret
icebp
insb
adc
and
sar
cltd
lret
addr16
inc
jb
imul
aam
mov
outsl
pop
adc
insb
inc
fcomip
pop
fwait
cmp
int
sbb
dec
sbb
inc
or
inc
sub
mov
sub
mov
xchg
sbb
and
lret
adc
bound
dec
xchg
imul
sub
xchg
cmp
xor
adcl
popa
gs
insl
inc
jecxz
or
cmp
arpl
out
js
sbb
mov
adc
push
ljmp
push
mov
sbb
inc
cs
andl
adc
or
xchg
push
insb
loope
xlat
mov
push
xchg
sub
xchg
push
aam
mov
adc
sub
pusha
dec
sub
test
jmp
inc
sbb
mov
aas
lods
hlt
pop
cmp
add
or
push
das
push
cmp
xchg
leave
leave
inc
xor
adc
xchg
insl
cmp
sahf
and
movups
test
inc
mov
push
push
mov
jno
mov
inc
jge
bnd
pop
movsl
stc
dec
lods
mov
test
mov
aam
call
fcmovnbe
das
or
lret
stos
adc
in
sub
mov
aaa
scas
aad
mov
pop
and
jae
and
fnstsw
lret
sbb
out
outsb
and
jmp
cmp
cltd
out
mov
add
scas
dec
in
pop
rcl
mov
outsl
ja
push
xlat
das
cmp
pop
fisubrl
dec
jne
aas
inc
addr16
xor
mov
sbb
pop
adc
and
lods
inc
lea
hlt
sub
push
shr
out
cmc
cmp
mov
mov
xor
mov
pop
and
divl
call
and
pop
test
mov
mov
and
jle
mov
std
out
xchg
add
vminsd
imul
out
push
scas
ficompl
in
test
movsb
jge
dec
mov
test
xchg
pop
xchg
xor
outsb
mov
cld
jae
clc
jae
mov
in
cmp
push
rolb
test
xchg
adc
jge
movl
lods
fcmovbe
pop
xchg
dec
xlat
ficoml
fidivrl
movsl
pop
sbb
adc
repnz
xchg
xchg
pop
clc
in
scas
cmpsl
or
stc
dec
ds
mov
sbb
pusha
mov
addl
sbb
in
adc
dec
xor
bnd
into
dec
lahf
pushf
xchg
outsb
insb
push
nop
mov
subb
sbb
inc
clc
xchg
movsb
pop
jo,pn
or
dec
out
repz
ds
push
pop
add
jg
mov
cmp
mov
add
dec
xchg
and
das
stc
sbb
sub
scas
mov
nop
pmaxub
loop
in
je
inc
aas
push
cld
dec
push
stos
popf
and
push
addr16
adc
push
std
sub
inc
sub
mov
dec
mov
mov
stos
repz
subb
ljmp
jbe
lds
dec
lret
fnstenv
es
jnp
sub
adc
or
or
lret
jb
test
push
ror
mov
lods
xchg
daa
imull
cmpsb
outsl
cmp
das
dec
push
add
push
js
xlat
mov
dec
adc
jno
pusha
sti
lret
repz
inc
xchg
xor
or
jb
or
xor
jne
dec
xor
out
push
sti
push
cmpl
repnz
mov
inc
dec
jle
insl
cmp
xchg
scas
inc
and
cmp
in
sub
jns
and
adc
cltd
shlb
jmp
mov
test
daa
loope
lret
and
dec
push
addr16
loop
xor
mov
loope
and
adc
call
loop
ss
scas
in
and
loop
notl
push
into
cmp
xor
scas
dec
das
xor
jne
adc
xor
cmp
dec
ss
add
lret
add
jge
inc
mov
mov
mov
loopne
and
into
aad
jbe
xchg
loop
pop
leave
mov
aas
xchg
lock
fiadds
cltd
mov
jge
cmp
nop
xchg
in
inc
mov
rcr
mov
jno
and
mov
push
in
imull
paddw
xchg
push
mov
es
addr16
sub
std
les
adc
daa
int3
imul
add
int
and
aaa
pop
mov
xchg
xchg
sub
sbb
enter
in
sub
push
js
sub
icebp
add
push
adc
mov
jae
push
movsl
push
ja
pop
or
cmp
xchg
fidivrl
and
hlt
stos
movsl
xchg
and
decl
dec
enter
ret
ja,pn
jnp
push
mov
rcl
cmp
or
or
mov
jge
adc
ficompl
dec
in
push
fisubl
ss
and
jbe
sbb
jbe
and
mov
cmpsb
addl
cmc
sti
and
adc
inc
ja
xor
pusha
popa
data16
jg
jmp
lret
mov
mov
data16
xor
sbb
fists
outsb
mov
repnz
xchg
fcoml
ficoml
out
push
arpl
sti
sub
xor
in
ljmp
add
push
push
xlat
mov
sbb
testl
or
jbe
jbe
cltd
cmp
ret
in
aad
ljmp
cmp
mov
addr16
inc
dec
aam
aas
xchg
xchg
xchg
call
mov
sahf
jge
sbb
mov
sti
adc
add
lahf
jecxz
ret
cmpsb
push
fldt
cli
loop
into
cli
divb
pop
mov
jle
xchg
xchg
iret
mov
fdivrl
insl
pop
loopne
adc
sbb
dec
mov
mov
or
imul
mov
data16
shrb
test
sbb
loop
cmp
cmp
xor
icebp
xor
inc
xlat
lds
ss
popf
mov
sbb
mov
movsl
lds
fwait
addb
faddl
lods
add
sbb
xor
or
dec
lret
aaa
mov
dec
cmp
shl
ja
addr16
mov
leave
sbb
sub
repnz
mov
inc
mov
cmp
decl
jno
data16
add
ljmp
and
in
and
in
or
sub
int3
test
cli
mov
pusha
pop
shll
and
push
mov
cli
daa
bound
stos
mov
xchg
data16
jp
arpl
lahf
pop
sub
sub
out
lock
xor
pop
loopne
mov
sub
push
lret
negb
sub
es
loop
xchg
xorl
sbb
push
lds
mov
les
xchg
in
add
ds
testl
das
cld
xor
push
mov
xchg
jns
rcll
enter
pushf
pop
stos
jno
lret
sbb
cmp
xorl
stos
mov
jmp
dec
dec
dec
fldenv
in
xor
push
mov
inc
push
xchg
scas
cmp
dec
pop
push
addr16
add
aas
add
add
xchg
mov
pusha
imul
icebp
loope
mov
dec
add
sub
mov
dec
jl
pop
adc
sar
mov
xchg
pusha
in
or
or
pop
insl
cmp
insl
iret
cmp
mov
andl
into
fcompl
pop
setbe
add
fs
fiaddl
sbb
xor
loope
pop
add
mov
xor
dec
das
aas
jg
std
int3
and
dec
lret
jbe
lea
scas
cmp
aas
mov
into
rorb
dec
inc
movsb
lds
ja
pushf
push
stos
sbb
outsb
in
out
or
push
xchg
fcmovbe
movsl
sub
popa
pop
ss
mov
jo
popf
pop
mov
test
xchg
mov
xor
hlt
sub
cmc
sbb
stos
fs
dec
mov
jns
xor
sar
push
xchg
dec
jns
fmull
in
fstps
lret
fimuls
mov
shr
movsl
push
push
jle
fdiv
lds
in
es
adc
mov
hlt
add
xchg
aaa
hlt
push
mov
in
out
std
push
stc
aam
fisubs
push
pushf
xchg
sub
mov
aad
push
jl
aam
xor
ds
in
sbb
xorl
out
aam
mov
int3
jbe
and
xchg
mov
test
icebp
adc
inc
push
insl
iret
mov
addr16
dec
push
add
pop
ss
sahf
inc
mov
xor
or
inc
jge
iret
leave
mov
sbb
mov
adc
xchg
aad
mov
sarl
popf
movsb
and
dec
pop
stc
adc
pop
mov
dec
inc
fidivrs
mov
add
xor
pusha
je
cmp
cwtl
sub
mov
repz
adc
mov
and
xchg
fdivs
mov
or
imul
fistpll
data16
mov
sub
jb
xor
cmp
mov
clc
in
hlt
jge
repnz
fucompp
les
sar
iret
cmc
rcrl
fcmovb
fdivrs
repz
adc
nop
int3
ja
nop
stos
and
repnz
cs
in
cmp
mov
sar
arpl
add
pop
cmp
dec
sbbl
mov
push
xlat
sbb
and
add
jb
add
scas
in
and
xchg
leave
cmp
test
adc
dec
push
ljmp
out
scas
xor
inc
scas
pushf
into
insl
cmpsl
or
jae
ljmp
into
imul
sub
pop
add
imul
and
mov
jo
out
call
movsb
pusha
pcmpeqw
enter
arpl
cwtl
mov
mov
cmpsl
nop
test
or
ret
stos
xlat
int
inc
cmc
shl
mov
iret
cwtl
rcrb
xor
jnp
in
xor
ja
shlb
jl
push
push
push
shrd
or
imul
inc
test
or
arpl
cmc
push
cmp
xlat
xchg
cli
pop
xor
xchg
and
in
pop
pop
mov
xchg
into
add
jl
imul
push
rcrl
push
es
insb
inc
fs
das
cmp
js
out
mov
cld
rcl
cli
cmp
jne
test
out
rorb
mov
fadd
vrsqrtss
sub
subb
lahf
sub
mov
xchg
adc
pop
pop
testl
mov
dec
mov
sbb
mov
sbb
stc
int
sarl
cmp
es
xchg
sarb
jg,pn
cltd
sti
mov
clc
xlat
xor
or
sub
imul
or
dec
outsl
ret
sub
jmp
add
int3
mov
mov
in
mov
pusha
mov
les
mov
test
adc
arpl
sub
jge
rclb
das
push
jmp
push
cmp
dec
popf
adc
push
movsb
es
cli
sub
mov
das
inc
data16
dec
cmp
lds
sub
xchg
jo
mov
inc
or
push
jg
and
insb
pop
or
jo
push
inc
insb
adc
cltd
mov
fs
pusha
cmp
in
outsb
popa
loopne
inc
pop
pop
es
mov
mov
inc
stos
pop
push
leave
ljmp
and
jp
mov
movb
loop
repnz
pusha
inc
mov
jmp
and
sbb
lret
das
and
out
lods
iret
mov
out
jge
js
cmp
pusha
jbe
sub
adc
out
push
incl
sub
scas
jo
push
dec
jnp
and
jge
push
roll
push
test
mov
push
mov
mov
aam
cmp
sub
xchg
sbb
dec
outsl
ds
data16
xchg
sub
inc
cmp
cmpsb
push
xchg
lahf
lods
jle
out
push
sbb
push
push
stc
or
rcll
add
je
jle
push
rolb
pop
fwait
mov
dec
cli
in
jae
adc
out
iret
sbb
and
std
xor
js
sti
xchg
sub
fs
inc
sbb
out
nop
fwait
sahf
ss
add
cmc
mov
movsl
pop
lcall
leave
pop
pop
push
add
out
push
push
xchg
jecxz
aad
mov
js
jl
gs
and
dec
inc
jmp
lods
fs
cld
lret
rorl
lret
aaa
clc
inc
into
sbb
inc
jnp
enter
mov
loope
push
xor
ret
mov
lods
and
sub
stc
mov
lret
xor
rcrl
sbb
adc
push
and
xchg
and
jno
call
xchg
subl
andb
aam
sbb
add
jnp
pop
lea
loopne
or
sbb
mov
adc
outsl
xor
mov
push
and
popa
mov
das
jb
dec
mov
jmp
and
test
in
jbe
sbb
testl
push
ja
mov
stc
sbb
mov
jge
inc
cmpsl
shrb
adc
pusha
sub
test
xchg
sub
cmp
out
mov
xor
addr16
bnd
ret
adc
cmp
pop
cmp
fstl
bound
inc
inc
mov
aaa
mov
pop
sub
aas
jmp
lock
std
mov
or
insl
loope
mov
sbb
mov
mov
jge
das
pop
dec
mov
rcl
stos
clc
icebp
sub
enter
fistl
xchg
lods
pop
xchg
je
repnz
dec
nop
imul
jge
cmp
ret
pusha
lret
add
push
dec
sbb
out
xor
test
cmpsb
inc
xchg
mov
mov
sbb
jne
mov
lods
mov
aad
lods
xchg
sbbl
adc
rep
call
jb
lods
or
xor
jge
sub
inc
mov
jns
popa
mov
clc
dec
repnz
call
adcl
sub
xor
sbb
hlt
sbb
int
sub
js
cld
ljmp
jg
repnz
jae
cmp
jmp
sub
out
clc
test
pop
addr16
pop
jecxz
popf
inc
popf
mov
mov
lcall
scas
inc
not
hlt
adc
lods
lea
cltd
cwtl
cmp
loope
ja
fidivl
sub
js
jno
test
scas
mov
mov
mov
ss
test
cmpps
mov
xor
dec
jmp
xchg
jo
mov
js
int
in
push
push
fildll
inc
pop
lret
divl
sub
repz
xlat
push
adc
stos
push
idiv
imul
mov
inc
cmp
sub
add
xor
pop
das
push
adc
clc
icebp
stc
cld
mov
and
add
cmp
mov
dec
sub
lea
mov
scas
loopne
sbb
hlt
mov
pop
add
icebp
push
hlt
nop
pushf
dec
dec
rcrl
testb
fimull
int
sahf
mov
outsb
push
mov
sub
loope
adc
sahf
movsb
mov
fmull
ret
push
push
mov
pop
mov
scas
faddl
xchg
pop
sub
pop
mov
leave
inc
xchg
fisubrl
or
xchg
out
icebp
mov
push
sarl
aad
xor
lea
cld
mov
stos
daa
push
mov
cmp
lahf
out
pop
ss
mov
dec
ret
push
xor
or
pusha
sub
pop
inc
adc
dec
sarl
outsl
mov
xchg
lock
mov
ret
outsl
jge
cwtl
and
pop
pop
mov
adc
mov
mov
enter
sbb
jecxz
sarl
mov
push
mov
inc
mov
das
cli
lahf
mov
dec
inc
or
loop
fcmovu
and
imulb
adc
icebp
imulb
push
mov
dec
cld
mov
scas
rcrb
jmp
xchg
xchg
fwait
push
pop
xchg
jecxz
dec
mov
xchg
jae
scas
mov
pop
mov
in
loope
mov
js
push
sbb
fs
mov
xchg
and
nop
inc
xchg
jnp
jns
dec
insb
test
mov
mov
scas
push
in
fisttps
jle
mov
dec
icebp
js
sbb
sarl
xchg
popf
push
aas
dec
jmp
ja
jne
mov
notl
insl
dec
jno
cmc
sti
push
cmpl
mov
testl
xlat
fsubrp
xor
fwait
add
ficompl
stos
and
mov
add
ret
fs
dec
fcomp
arpl
jae
adc
push
jmp
xor
andb
mov
and
push
lods
enter
push
sub
shrl
mov
and
mov
adc
sub
inc
and
subb
xor
mov
adc
pop
pushf
fisubs
pop
pop
push
shll
xchg
sbb
xor
insl
and
xor
mov
loopne
imul
jl
inc
dec
ljmp
jle
lahf
and
dec
jg
gs
je
pop
data16
adc
push
cmpl
lcall
mov
push
add
jnp
xlat
push
fninit
rcrb
sbb
insb
and
dec
fwait
enter
scas
mov
xchg
dec
push
jno
iret
mov
mov
enter
roll
xor
xchg
jb
test
add
sub
mov
dec
nop
or
jne
cmc
cmp
mov
xor
add
movzwl
mov
add
pushf
sbb
jns
jmp
mov
lock
mov
adc
xor
inc
notb
add
loop
push
stos
fiadds
aad
rclb
mov
mov
aam
mov
pop
mov
xchg
mov
xchg
test
adc
loope
sub
jge
leave
sbb
loop
sbb
jmp
lds
mov
xchg
dec
inc
andb
or
bound
test
je
xlat
mov
dec
rorl
fldcw
sbb
sahf
out
or
fwait
out
je
into
decl
lret
aam
lods
xor
test
movsl
jmp
daa
into
aad
jmp
in
jnp
notl
pop
lock
nop
mov
mov
scas
test
mov
push
cli
subl
pop
or
shlb
inc
lea
je
mov
test
daa
cmp
ror
sub
in
cmp
int
add
stc
push
or
mov
repnz
dec
pushf
popa
jmp
fcomi
shll
push
add
xor
je
cld
shl
mov
dec
leave
pop
mov
xlat
leave
mov
add
adc
mov
call
pop
hlt
and
ret
out
lock
dec
jmp
enter
rclb
xor
mov
push
sbb
loope
mov
insb
adc
cli
or
and
and
or
mov
mov
adc
mov
in
cmpsl
cvttps2pi
mov
or
xchg
nop
in
movsb
xchg
push
fdivl
push
jmp
dec
cli
loop
aas
sahf
jne
out
and
in
add
sub
push
mov
and
cmp
mov
push
inc
pop
dec
xchg
sbb
and
out
dec
daa
add
shl
pop
adc
daa
mov
mov
cmp
lods
mov
sbb
jb
xchg
push
std
cltd
xor
lcall
xchg
aad
mov
daa
xchg
or
cld
dec
into
arpl
mov
pop
cld
jbe
cs
cmp
mov
ficoml
xchg
test
pop
fdivrs
test
aaa
add
insb
jbe
iret
mov
ret
aas
fisttpl
jg
cmp
mov
adc
inc
nop
es
xchg
mov
push
shll
push
mov
push
or
cwtd
fisubrl
mov
xchg
sahf
dec
nop
js
sub
enter
push
mov
jecxz
xor
aas
jae
imul
lea
inc
rcll
or
xchg
popf
aaa
or
fdivrl
push
sub
clc
cwtl
sub
push
inc
insl
pop
lret
jmp
pop
leave
das
add
out
adc
int
pop
lret
pop
push
pop
loopne
nop
xchg
xor
xor
dec
add
nop
jns
inc
cltd
mov
mov
cmp
cld
test
or
push
out
sahf
test
add
xchg
mov
scas
cmp
js
mov
pop
jns
sbb
add
sub
cmpsb
mov
xor
out
rclb
adc
call
or
jmp
mov
aas
call
imul
jl
add
outsl
dec
pop
mov
gs
ja
outsl
aad
cmp
push
loop
lret
notl
clc
jecxz
scas
jmp
inc
mov
dec
ficoml
xor
mov
mov
hlt
inc
xchg
fiaddl
outsl
mov
imul
loope
sbb
xchg
mov
dec
fwait
adc
mov
adc
test
pop
mov
xor
cmp
iret
jae
test
push
iret
push
xchg
add
jmp
test
loop
mov
jne
push
push
adc
jmp
and
and
mov
sub
fwait
out
iret
shl
clc
sbb
test
or
stc
or
push
movsl
sbb
push
lods
cmp
sub
cmp
fsubrl
jns
jg
xor
adcb
or
imull
mov
sbb
fucomip
pop
sub
mov
ja
push
andb
dec
fcmovne
arpl
xchg
out
addl
cmp
jmp
stc
sahf
out
mov
outsl
jge
iret
cmc
push
rol
outsb
roll
sbb
int3
ja
imul
cmp
adc
fwait
xchg
xor
cmpsl
push
gs
mov
mov
aad
pop
hlt
loop
jmp
xchg
fadds
xorb
ds
push
mov
inc
scas
xor
and
data16
lcall
fcom
sub
mov
xchg
and
adc
jl
cmp
push
movsb
or
mov
pop
aas
movsl
mov
ss
pop
mov
sahf
mov
ljmp
mov
fisubrs
pop
mov
xor
adcl
test
cmc
enter
je
clc
adc
or
inc
mov
mov
jge
sar
movsb
xchg
mull
in
arpl
int
imul
idivl
sbbb
in
lret
in
and
and
pushl
cld
testb
out
adc
outsb
aad
movsb
insb
cltd
rclb
mov
stos
adc
addr16
nop
pop
cs
xchg
arpl
adc
shl
pop
insl
add
pop
lret
enter
jmp
jl
xlat
jno
mov
clc
mov
lods
enter
fcmovu
imul
pop
push
mov
sarl
push
jge
push
sub
pushf
inc
xor
pop
daa
add
push
ret
sub
hlt
push
iret
lahf
cld
xchg
data16
add
xchg
test
pushf
test
inc
sbb
adc
lods
scas
xchg
push
cmp
mov
mov
jl
mov
adc
aas
sbb
jns
mov
jne
or
popf
shlb
mov
xchg
outsl
lret
data16
dec
mulb
or
lods
sub
inc
out
std
mov
sahf
pop
and
ds
arpl
stos
push
and
add
hlt
jp
mov
cmpsl
xchg
jl
push
sub
mov
ja
movsb
cmc
mov
sub
std
push
xchg
inc
lods
sub
push
xchg
movsl
das
jmp
inc
jmp
mov
ret
cmpsb
pop
dec
mov
adc
rcll
fmulp
insb
ficomps
jge
pop
repz
rcrl
or
push
shll
enter
and
in
mov
dec
es
or
sbb
sbbb
sub
ret
ljmp
cwtl
and
jbe
mov
jle
jl
sub
add
add
mov
icebp
pop
popa
and
jmp
push
daa
mov
push
push
shl
mov
sub
mov
pop
xchg
push
fwait
cmc
fadds
or
push
sbb
cmpsb
jns
or
jecxz
jmp
mov
fdivrs
bound
xor
sbb
loop
push
pop
das
aaa
daa
fdiv
xor
mov
push
push
aas
fisubrs
into
int3
adc
ret
dec
gs
movsb
repnz
outsl
jmp
sbb
clc
mov
pop
std
lods
jp
xchg
out
test
test
sub
push
mov
stos
push
test
and
mov
jp
in
popa
stos
add
jp
jno
push
roll
or
adc
pop
push
xchg
mov
aas
aaa
lea
mov
mov
scas
sub
xlat
xchg
xor
mov
neg
push
mov
sub
aas
mov
and
sub
xchg
lret
dec
test
jp
pop
xlat
sub
sbb
leave
mov
pop
mov
sbb
in
pop
add
xchg
stc
orb
testl
out
cs
push
movl
add
sub
test
loop
mov
ret
dec
mov
cwtl
dec
shll
int
out
subl
cmp
push
or
in
adc
in
cld
mov
pusha
or
icebp
incl
push
cmp
ss
adc
inc
xchg
sub
out
movsb
xchg
imul
jmp
in
cmpsb
addb
insl
div
mov
and
sbb
mov
sbb
je
adc
imul
andl
dec
or
test
sub
mov
fnstsw
lcall
ljmp
cld
push
stos
outsl
mov
sub
ljmp
in
and
cmp
jno
es
mov
movsb
cmp
inc
sbb
sub
fistl
dec
inc
cld
mov
rcl
push
jns
jo
adc
xchg
scas
cwtl
pusha
lock
add
test
sahf
int
push
movsb
rcrl
notl
cli
loopne
orb
xchg
adc
inc
and
cmp
jge
sbb
jb
xchg
sub
in
sbb
mov
add
gs
rol
jb
pop
jns
jbe
xchg
das
xchg
or
iret
arpl
in
jne
movsl
js
mov
shlb
mov
xlat
xor
movsb
mov
xor
adc
push
xchg
and
inc
adc
cmp
add
dec
pop
in
movsb
jecxz
push
int3
out
fcmovne
add
cli
add
cmp
xchg
push
loop
iret
in
mov
inc
in
pop
pop
or
or
xor
adc
xchg
std
xor
sub
mov
push
mov
jmp
and
cmp
nop
movsl
mov
jne
push
xlat
lds
mov
jmp
dec
sbb
add
xlat
add
sbb
xchg
mov
cmp
and
and
cmc
or
sub
pop
and
pop
xor
mov
hlt
subb
push
sub
adc
rcrl
in
divl
cs
cmp
bound
jne
mov
mov
sbb
ret
lds
mov
xchg
inc
imul
mov
cmp
orl
int3
clc
and
xor
xchg
pushf
shrb
lods
mov
mov
das
fisttps
jno
jns
jno
xor
ljmp
in
nop
repz
lret
or
adc
loop
jbe
mov
adc
sbb
and
lods
jge
jno
test
aad
and
outsl
xchg
mov
sbb
fs
out
scas
das
idiv
xlat
adc
xchg
dec
mov
jnp
out
or
pusha
loop
jmp
insb
push
mov
or
repz
ss
inc
jmp
mov
jecxz
cmp
cmp
data16
dec
repnz
adc
or
add
pop
mov
test
sub
jns
mov
repnz
inc
dec
cmpsl
push
addr16
mov
int3
stos
or
enter
inc
jbe
leave
mov
jno
add
imul
rcrl
mov
mov
into
jae
fmull
cmpsb
mov
and
sbb
mov
scas
cli
xor
popa
or
insl
jp
push
xor
add
push
insb
scas
push
in
add
addr16
pop
and
adc
mov
loope
cltd
inc
ret
lret
insl
push
xor
clc
push
cmp
mov
push
push
xor
sbb
xor
add
xchg
sub
clc
fdivrs
xchg
ja
dec
fisubs
fnstenv
push
mov
xchg
jecxz
test
xor
and
dec
cmp
mov
inc
push
data16
adc
mov
aas
lret
dec
mov
sbb
mov
sub
cmp
mov
int3
ret
icebp
add
and
popf
cmpsb
sbb
test
gs
mov
inc
add
leave
int
repz
orl
adc
xor
pop
sub
pop
pop
or
decl
mov
push
jno
mov
mov
adc
popa
test
aam
sub
xchg
les
mov
pop
pop
push
xchg
jmp
out
xchg
push
std
and
cmp
mov
das
enter
inc
aam
xor
mov
sbb
mov
pmullw
mov
xchg
inc
stc
cmp
adc
out
adc
adc
pushf
cmpsb
or
mov
cmpsb
inc
add
add
inc
xchg
mov
sbb
push
sbb
fildll
pop
xor
mov
xchg
sbb
mov
insl
pop
roll
into
orb
mov
dec
cmp
in
push
js
aad
pop
cmp
mov
lds
movsl
pop
mov
jbe
jns
inc
pop
mov
sub
fs
xor
mov
aas
pop
xor
scas
ror
aam
aad
jne
loopne
rorb
sbb
sub
dec
ret
xor
jbe
and
daa
add
pop
cli
ss
dec
adc
dec
ljmp
cld
push
ljmp
jae
rep
das
icebp
inc
shrb
call
jae
fwait
mov
aaa
xchg
mov
jo
push
inc
in
ret
mov
push
adc
jl
loopne
ds
sbbl
sarl
cmp
pusha
mov
jno
mov
movsl
sub
push
dec
mov
dec
lods
ljmp
add
nop
aam
test
es
fiaddl
push
sbb
out
jmp
and
xlat
pop
mov
rcrb
xchg
lret
mov
mul
dec
mov
fidivl
cltd
pop
insb
push
cmp
xchg
rorl
inc
fmull
out
add
repnz
mov
xor
dec
pand
xor
ja
or
inc
sbb
ljmp
push
push
cmpb
das
clc
sbb
xor
cmp
scas
jbe
cmpb
pop
and
push
aas
je
scas
or
mov
leave
les
rclb
and
loope
or
mov
cld
mov
call
add
and
js
aad
das
push
sbb
vprotb
js
jno
cmpsb
mov
loopne
push
sti
xor
dec
xchg
adc
cmpl
lcall
insl
push
cmp
pop
sub
lcall
mov
rol
sub
rcr
mov
dec
in
adc
cltd
pop
lock
in
jle
adc
xor
mov
mov
sbb
sub
pop
mov
sbb
insl
lods
mov
adcl
popf
adc
cld
xchg
inc
fldcw
inc
mov
jae
lea
and
aas
repnz
aas
dec
sub
loopne
or
inc
or
cld
push
xchg
mov
inc
xchg
cmpsl
cmp
ret
dec
sub
shll
in
sub
jns
and
outsb
xor
mov
add
add
bound
sbb
xchg
loopne
in
cmc
bound
out
dec
adc
push
and
inc
xor
pop
xchg
repz
rclb
or
push
xchg
push
in
rcr
jns
out
mov
push
push
icebp
mov
xor
sub
pop
ja
pop
jp
sub
out
mov
sbb
cmp
sbb
xor
mov
sub
xor
dec
cmp
shlb
in
add
xchg
jns
cmp
dec
xor
jmp
add
test
loope
lods
mov
mov
mov
hlt
cs
das
movsl
out
inc
leave
and
into
lds
test
xchg
add
xor
out
and
push
and
mov
clc
pushf
incl
shrl
sbb
mov
icebp
shr
inc
les
incb
test
repnz
imul
push
push
dec
and
pop
dec
aad
fldcw
popa
ret
ds
dec
rcrl
int
mov
movsb
cmp
sbb
test
iret
outsl
icebp
sbb
xor
or
pop
xchg
mov
or
push
cmp
popf
pop
in
cld
cs
jbe
imul
pop
push
nop
or
xor
xchg
adc
lret
data16
sub
push
pop
push
mov
xlat
xor
movsb
mov
push
repz
out
notl
mov
fstpl
rol
out
mov
mov
jbe
sbb
add
test
outsb
inc
addr16
das
xor
mov
inc
push
imul
sbb
data16
mov
jg
inc
test
loope
cltd
mov
dec
fstl
inc
pushf
lret
ljmp
mov
das
xlat
fs
sahf
sbb
pop
mov
stos
in
cmc
mov
aaa
jp
jmp
sub
sub
xchg
dec
cwtl
push
push
mov
xor
inc
sbb
or
inc
cmp
xlat
pushf
add
inc
pusha
test
bnd
cmpsl
or
xchg
push
shr
add
or
add
xor
cli
pop
jns
xchg
push
cmp
xor
jmp
cs
lcall
cmp
xor
cld
imul
cli
icebp
decl
jecxz
cmpsl
lds
mov
mov
xchg
aaa
push
mov
pop
addr16
shl
fstpt
mov
fnstenv
adc
cmp
sti
mov
adc
outsl
cmp
aaa
roll
js
lea
inc
xorl
cmp
icebp
add
aam
addr16
jb
push
mov
push
cmp
rcrb
fs
cmp
mov
in
push
pop
mov
test
cmp
pop
mov
jmp
ret
xchg
loop
aaa
es
hlt
push
dec
fwait
mov
mov
pop
ret
cmp
out
mov
les
gs
das
inc
add
mov
pop
jne
xor
lods
jo
js
je
adc
xchg
lahf
int3
cmpsl
stc
fisubrs
or
inc
sbb
pop
aaa
movsl
jne
nop
xchg
dec
hlt
sub
fdivrl
rcl
lahf
aas
and
cmp
inc
and
adc
push
into
mov
or
std
mov
or
xlat
stos
hlt
cmp
rcrl
sbb
and
cmp
add
in
testl
push
test
jg
stc
imul
inc
sbb
jbe
add
sbb
jns
xchg
cs
test
decl
pop
insl
jle
pop
mov
pop
mov
loope
clc
repnz
mov
mov
movl
push
cmp
push
je
mov
mov
les
pop
pop
inc
push
xor
jmp
pushf
push
lock
pop
xchg
call
sub
hlt
lret
jmp
cmp
pusha
repnz
enter
icebp
insb
sub
fiaddl
dec
or
jno
icebp
stc
addr16
mov
movsb
ljmp
mov
pushl
mov
fcmove
outsb
mov
outsb
es
and
cmc
sbb
adc
cmp
out
into
test
jmp
dec
pop
stc
cmc
aam
xor
xor
in
in
dec
add
sub
pop
clc
jno
jne
rorl
fldt
mov
mov
push
push
jb
jb
in
push
xchg
push
mov
aam
scas
aam
jecxz
in
adc
ret
jb
and
jp
cltd
imul
fidivs
call
sbb
sti
imul
inc
pop
loopne
jle
push
lock
push
sub
lcall
add
mov
push
ljmp
and
sbb
mov
xchg
cmpl
pop
stos
xor
cmc
scas
and
rcr
jp
cwtl
and
mov
shl
cmp
sbb
cmp
dec
fsts
cmp
leave
and
adc
inc
ljmp
in
dec
in
xchg
out
movsl
dec
mov
mov
mov
loope
mov
jl
lea
stos
fildll
mov
adc
jecxz
out
mov
mov
xchg
xor
hlt
jne
popa
pop
or
mov
sbb
arpl
dec
out
sub
push
push
mov
jns
and
pop
xor
dec
fdivrs
mov
and
or
xchg
xchg
iret
mov
adc
in
fyl2x
in
adc
insl
sbb
mov
mov
jmp
sub
cmc
ret
ljmp
add
cmp
xor
sub
in
hlt
jbe
lret
add
xchg
dec
mov
xchg
ret
xchg
out
xchg
dec
int
adc
inc
or
xlat
leave
and
add
sbb
icebp
repz
add
test
sbb
sahf
mov
lret
fdivrs
aaa
scas
adc
pop
loope
xlat
subb
repz
or
fstl
inc
pop
mov
lods
cmp
fmuls
shl
adc
pop
lods
dec
pop
and
lahf
pop
mov
cmp
pushf
fsubr
jnp
lods
push
hlt
xchg
inc
mov
xchg
sahf
fstp
xchg
lods
stos
adc
sbb
mov
inc
into
daa
add
cmc
sub
jo
flds
push
cld
sti
scas
mov
lret
mov
leave
test
loopne
mov
lea
pushf
dec
mov
and
in
daa
lahf
push
in
lods
add
lret
out
push
add
movsl
xor
lds
das
cmpsl
dec
dec
xor
rcr
jmp
xor
xor
mov
xchg
cmp
jl
mov
bound
mov
xlat
mov
ds
mov
enter
loope
push
or
adc
ror
jns,pt
dec
cld
int
loop
or
sbb
adc
fs
bound
dec
cltd
and
test
aad
sti
inc
sub
sub
mov
faddp
ljmp
jne
mov
fs
into
cwtl
das
outsl
push
adc
mov
les
daa
repnz
or
sub
and
loop
ja,pt
inc
push
fprem1
mov
movl
cli
mov
lods
push
xchg
mov
test
ss
icebp
jne
outsb
dec
pop
aad
cmpsb
and
add
sti
test
fnstenv
push
enter
jge
or
lods
push
pop
sbb
icebp
outsb
dec
cs
inc
inc
add
sub
xor
sahf
aaa
lret
lcall
xchg
push
and
sub
push
cmp
cmpsb
sbb
outsb
mov
mov
lret
mov
dec
ds
push
jns
push
addr16
dec
in
push
jg
sub
push
scas
test
loopne
lods
jg
in
push
add
scas
xor
sahf
inc
mov
pop
inc
push
ljmp
cmp
cltd
jge
stos
pop
stc
and
push
xlat
test
imul
and
mov
xchg
insl
or
add
fchs
stc
adc
mov
pop
inc
sub
sub
mov
mov
cmp
mov
mov
cwtl
add
mov
js
mov
or
mov
lret
test
jnp
into
pop
xchg
mov
mov
push
hlt
ja
xor
popa
sub
stc
rcr
xchg
jbe
or
aaa
icebp
inc
or
sti
inc
dec
shrl
push
mov
loope
pop
lock
push
sbb
into
pop
mov
or
jne
int3
cmpsl
out
jnp
xor
inc
sub
loop
mov
test
int
inc
das
stos
cmp
lahf
out
push
out
test
mov
gs
mov
cmp
ret
pop
sbb
cmc
xor
pop
cwtl
xchg
mov
movsb
mov
cmc
mov
sbb
jecxz
lods
jno
pop
lret
xorb
rcrl
mov
jbe
xor
and
int
fs
out
iret
roll
or
out
cltd
jne
adc
das
out
insl
xchg
insb
push
test
pop
pop
mov
mov
mov
cmp
in
pop
adc
pop
ret
loop
sub
push
fistpl
inc
mov
lcall
scas
sbb
sbb
inc
pop
movsl
adc
jne
dec
pop
shrb
rcl
cmp
mov
data16
lea
dec
js
push
addb
das
cmp
je
sbb
sub
push
popf
cmp
xor
int
loop
xchg
mov
gs
push
push
mov
lcall
jmp
xchg
dec
cwtl
rorb
fucom
sti
cmp
inc
test
push
inc
jl
cmpsl
inc
in
lahf
repz
jmp
mov
sbb
lret
pop
les
push
push
and
mov
hlt
or
xchg
stc
cltd
jb
loopne
hlt
roll
jo
inc
or
mov
mov
and
bound
sub
xor
jle
jmp
lea
repz
mov
mov
mov
in
inc
popa
es
fmuls
sub
xchg
add
lods
or
inc
add
ret
cmp
lods
scas
f2xm1
ss
push
push
ljmp
imul
lods
or
out
pop
rcrl
jmp
fwait
aam
or
aam
iret
and
or
xor
and
loop
mov
sbb
inc
mov
sbbb
and
dec
pop
mov
jbe
pushf
int3
xchg
inc
cld
push
jle
prefetch
pusha
out
ss
js
in
push
fwait
lret
add
fldt
testl
or
int3
inc
arpl
mov
adc
inc
in
imul
subb
mov
sbb
pop
mov
data16
mov
lock
leave
shrb
mov
ss
ja
jne
mov
jae
sarl
mov
and
shr
inc
and
mov
sbb
inc
hlt
or
xchg
into
fs
jmp
xchg
bound
sub
mov
fmuls
push
lahf
inc
rol
sarl
out
loope
test
fucom
movsl
push
push
inc
mov
in
outsl
nop
pop
pop
in
shr
ljmp
adc
adc
aam
inc
test
sub
adc
lret
insl
in
fsubr
xchg
fisubrl
shlb
add
lcall
mov
testl
mov
dec
inc
ja
popa
jb
mov
pop
lock
adc
pmuludq
sbbb
mov
push
aad
test
test
insb
mov
jbe
lahf
lcall
shlb
sub
imul
xchg
mov
in
ret
inc
push
frstor
and
or
dec
or
sub
cmp
jg
loope
pop
ja
jg
jne
and
xor
jno
dec
adc
inc
nop
and
xchg
js
jb
push
andl
mov
iret
sarb
inc
or
mov
mov
hlt
cld
jge
inc
inc
jecxz
ret
inc
push
dec
shll
xchg
dec
sahf
ret
scas
sub
xchg
int3
ret
stos
mov
int
test
dec
je
not
sti
push
mov
andb
push
jbe
lock
movsl
cld
mov
adc
loopne
rol
loop
stos
cwtl
or
push
pop
pop
rorl
xor
and
and
jno
cli
popf
shl
pusha
push
cmpsb
mov
cmp
lret
jmp
ss
pop
cli
mov
jno
xor
xchg
mov
cmc
rolb
lock
lds
and
cltd
aaa
sbb
inc
jmp
xor
xchg
inc
mov
add
jle
cmp
xchg
xchg
mov
cmp
sbb
negb
mov
jae
out
adc
mov
ljmp
sbb
dec
insb
push
jbe
mov
or
xchg
pop
ss
mov
loope
xchg
or
dec
or
inc
iret
pop
sub
ret
pop
pop
pop
ljmp
addr16
and
pop
pop
add
stos
cli
adc
gs
insb
push
sbb
mov
cmc
inc
pop
or
pop
dec
sub
ja
xor
push
sarl
lock
mov
int
inc
incl
leave
imul
test
add
cmp
pop
xchg
into
stos
stos
xchg
notb
lret
add
mov
leave
xor
xchg
push
xchg
ret
fdivs
repnz
push
inc
xchg
fcmovbe
call
jbe
push
repnz
fldcw
xor
insl
in
in
lret
imul
inc
sub
mov
scas
hlt
mov
mov
mov
inc
loope
dec
mov
push
xchg
push
mov
jb
sbb
dec
gs
cs
mov
shl
mov
or
ficoms
push
or
scas
fmul
and
lret
ja
dec
subl
call
imul
std
cmpl
add
sbb
out
xor
and
push
sub
inc
enter
iret
arpl
mov
mov
sbb
push
mov
ret
mov
and
inc
push
dec
nop
sbb
xchg
out
or
inc
rcl
scas
add
mov
inc
out
pop
pop
jbe
sbb
pop
les
and
fidivrs
enter
jno
out
push
hlt
std
test
sbbb
or
mov
cld
lods
addr16
fs
xchg
in
fwait
dec
fnstcw
test
xchg
jmp
test
loopne
lcall
in
pop
aaa
mov
outsl
in
repz
dec
hlt
jecxz
test
lret
xor
dec
ds
cwtl
jp
outsb
addr16
insl
leave
add
in
xchg
xor
idivb
hlt
in
mov
push
add
clc
pop
add
repz
imul
test
je
insl
xor
add
jb
mov
or
jge
jae
pop
movsl
scas
mov
mov
jge
dec
pop
shrl
push
sbbl
dec
mov
jge
dec
or
mov
popf
shrl
int
dec
jecxz
leave
adc
push
jae
push
and
test
rol
xlat
inc
sbb
mov
adc
mov
cmp
call
jns
je
mov
sub
adc
daa
or
dec
jge
into
shr
cltd
call
ja
sarb
std
jo
js
pusha
cmc
xorb
rcrb
adc
push
sub
jne
dec
out
adc
xor
cmpsl
test
fucomi
sub
daa
add
xchg
cli
cmc
xor
mov
mov
icebp
imulb
andb
negw
adc
cmpsl
push
and
inc
push
inc
inc
inc
shll
or
icebp
inc
mov
push
rcrl
mov
test
and
and
negl
xor
lret
sub
es
jp
add
in
pushf
cmc
xchg
test
rcrb
jns
mov
xor
js
adc
inc
sti
xchg
pop
aad
leave
imulb
mov
mov
jns
int
mov
sub
and
stc
rorb
sub
pushf
add
stos
fwait
addl
shll
mov
out
inc
bnd
sbb
add
cli
adc
adcl
jl
insb
inc
je
push
fisubl
inc
cmp
iret
jmp
pop
lds
xor
add
jmp
push
inc
pop
hlt
movsl
jle
or
ja
push
fcomps
sbb
lahf
cmp
add
push
cmp
mov
stos
test
sahf
lcall
rclb
cmp
mov
lcall
lods
add
pushf
pop
fstps
and
gs
clc
stc
scas
pop
cmpsl
jnp
outsl
jae
psubd
lock
jle
push
jecxz
in
arpl
ljmp
mov
int3
push
popa
fwait
mov
stc
addl
cmp
jbe
mov
ret
push
mov
xor
pusha
mov
div
jno
mov
xlat
fwait
loopne
sbb
pushf
shrb
fists
ficoms
jle
insb
mov
jge
and
shl
imul
or
and
cmpsl
insb
js
fwait
mov
sarb
dec
icebp
pop
fs
mulb
xchg
std
sub
in
push
xchg
jmp
and
aam
inc
movsb
adc
xchg
push
ret
out
das
sti
pop
push
inc
imul
dec
pop
mov
jbe
in
movsl
nop
addr16
out
push
ret
fs
sbb
mov
lods
rol
and
xchg
cmp
jl
sub
push
icebp
in
inc
mov
xor
jl
cmp
outsl
fistl
lret
lret
sub
mov
xchg
lds
jg
pop
dec
adc
sub
push
pop
xor
pop
push
sub
mov
xchg
xlat
jge
mov
mov
addr16
leave
mov
es
insb
jne
inc
inc
sbb
ret
pop
addb
dec
or
add
jge
arpl
lds
out
pop
into
stc
call
push
clc
mov
mov
lods
lods
sub
scas
cmp
das
mov
lea
clc
jmp
ljmp
addr16
icebp
stos
mov
push
mov
mov
loop
mov
fstpt
in
int
aad
fcmovnu
mov
mov
in
leave
adc
cmp
fwait
and
mov
test
or
addr16
aaa
and
or
aam
dec
scas
jl
idivl
ss
je
dec
jae
les
je
sub
jns
pop
cs
mov
pusha
insb
in
mov
cmp
push
jnp
in
dec
ret
jmp
lcall
bound
gs
adc
dec
xor
push
push
fidivrl
ret
shl
jbe
push
ret
popa
clc
jp
insl
xchg
pop
pop
nop
aam
adc
sbbb
cs
test
fsubrp
xchg
jb
nop
pushl
enter
jae
pop
push
sbb
data16
negb
mov
mov
jno
cmp
cmpsb
mov
dec
or
test
outsb
or
or
jbe
cmpsb
mov
stos
outsb
or
mov
xchg
dec
nop
call
dec
push
jp
fistpl
in
xchg
sbb
mov
cmp
xor
pop
inc
dec
jnp
push
jb
sub
ret
mov
push
pop
aaa
inc
push
xor
push
popf
dec
rclb
aaa
jbe
pop
jg
cmp
mov
mov
xchg
mov
fsubrp
dec
dec
inc
repnz
jmp
call
mov
and
cmpsl
inc
xor
cmc
jge
imul
testl
call
aam
mov
adc
ja
cmp
jp
dec
popf
jns
push
jmp
fcmovne
sub
xchg
test
or
in
lods
cmp
in
lea
push
pop
inc
pop
shlb
and
pop
mov
fwait
popf
mov
add
or
jle
movsb
lret
aas
mov
push
insb
sub
push
or
jo
ss
outsl
repnz
scas
pop
xchg
mov
mov
pop
jno
fistpll
dec
jae
or
dec
loop
in
scas
mov
jecxz
leave
iret
leave
adc
add
loop
mov
pusha
mov
mov
mov
pop
sub
sub
ror
pusha
pop
xor
or
popf
add
mov
test
call
inc
sbb
and
lds
or
push
cmp
add
xor
and
xor
out
out
ror
mov
ds
in
lret
add
es
sub
inc
push
mov
push
idivl
push
adc
in
rcrl
adc
dec
roll
testb
and
inc
or
mov
inc
cmp
mov
and
xchg
mov
jnp
test
gs
jmp
es
inc
icebp
inc
test
mov
pop
and
cmc
repz
mov
sub
xor
mov
mov
mov
cwtl
pushf
mov
sbb
jge
or
add
in
dec
jg
push
std
mov
fs
nop
add
cmpsl
shlb
shrb
jnp
pop
lds
pop
jo
pop
mov
ss
sti
arpl
mov
lods
out
mul
xchg
addr16
pop
or
inc
fwait
push
push
mov
dec
aaa
xchg
movsl
repnz
pop
cmp
fs
or
shlb
bound
mov
mov
cmp
ret
ficompl
lods
aas
andl
lcall
movsl
jne
mov
push
mov
mov
jle,pn
inc
sbb
xor
movsl
mov
xor
les
gs
jns
stos
cwtl
adc
and
push
fldcw
mov
scas
and
stos
push
bound
fldt
mov
in
roll
or
adc
mov
pop
inc
jl
xor
das
xchg
mov
in
mov
stc
xchg
lock
mov
test
insl
aad
movsb
pop
or
les
nop
idiv
inc
jp
shr
pop
push
and
rorb
mov
adc
fisttps
push
or
dec
aad
fisttpll
adcl
repz
enter
sahf
mov
pushf
xor
xchg
andl
or
sbbb
jo
jmp
and
jmp
int
roll
stc
mov
sti
mov
rorb
mov
inc
sbb
call
sub
xchg
mov
xchg
xor
in
inc
lock
imul
insl
popa
add
fucomp
mov
shrl
outsl
jmp
fsubrl
jns
aaa
push
add
lds
jp
add
adc
add
pop
sub
pop
inc
xchg
mov
out
into
pop
push
movsl
pop
dec
push
fldl
xor
mov
loop
cmp
pop
outsb
add
adc
mov
push
cmc
mov
jnp
push
lret
cmp
xor
adcl
and
xchg
fisubl
jae
out
mov
repz
call
int3
pop
nopl
pop
jg
into
xchg
inc
mov
cmpsb
jne
aad
sub
or
dec
mov
mov
jl
sbb
shrl
and
mov
cwtl
cmp
testl
add
adc
pop
mov
lret
pop
fldenv
fidivs
out
dec
jo
dec
fisubl
inc
sahf
mov
jb
es
rcl
cmp
pusha
insl
in
sbb
xchg
nop
xchg
fstpt
inc
and
jb
aad
fadd
xchg
aaa
fwait
push
idivl
jl
int
add
test
pop
cli
imul
mov
inc
inc
movsb
sub
imull
lret
jge
sub
mov
test
addr16
jns
mov
pop
mov
cmp
cs
ds
movsb
subb
mov
adc
jno
or
mov
adc
xor
lret
insl
xor
cmpsb
mov
pusha
mov
xor
pop
dec
lret
ficoms
inc
mul
add
aad
stos
out
jns
mov
sub
rsqrtps
jno
jmp
pop
scas
or
jns
sbb
insb
sub
pop
add
adc
fdivs
mov
and
std
lcall
and
pop
movsl
sbb
push
das
cmpsb
xor
push
in
fwait
jl
xchg
xchg
test
xchg
push
mov
fdivrs
pusha
ss
jnp
imul
fs
iret
movsb
je
stos
inc
ret
sub
idivb
adc
jns
jbe
pop
dec
loopne
mov
sbb
pusha
pop
fbld
mov
js
fincstp
fistl
push
mov
ljmp
sti
mov
xor
pop
fistl
cwtl
arpl
test
cld
or
xchg
fwait
inc
jge
sahf
add
rclb
and
mov
data16
mov
fisubl
mov
out
scas
sbbl
lods
es
add
sub
cmp
inc
xchg
mov
mov
xor
nop
mov
cmp
stc
mov
cwtl
test
jbe
dec
xchg
jp
fcoms
pop
cld
push
rolb
add
jns
sub
xor
adc
jle
pusha
inc
test
ss
mov
sbb
xchg
add
pusha
in
inc
jns
fcmovnb
jbe
xor
cmp
jp
inc
das
add
ljmp
xor
dec
fs
mov
jns
jae
mov
xor
and
pop
stos
add
in
shlb
icebp
mov
imul
test
dec
inc
les
and
xorb
pop
pushf
aad
outsb
mov
mov
mov
sub
or
int3
mov
push
xor
xchg
xorb
adc
jl
popf
jp
sbb
lret
loope
dec
loop
aam
fisttpl
dec
or
incb
jmp
pop
and
sti
push
dec
or
ds
mov
call
add
mov
inc
xor
fwait
jp
mov
mov
fs
pop
jle
sbb
lds
test
pop
add
add
and
stc
cli
inc
stos
gs
pop
movsl
mov
pop
jle
or
cmpsl
inc
xor
sbb
xchg
sbb
mov
mov
je
repz
xlat
mov
arpl
stc
shrb
les
call
ljmp
cmp
psrlq
push
clc
jo
xchg
push
and
xchg
and
pop
outsl
inc
xor
sbb
xchg
push
mov
pop
sbb
sahf
sbb
inc
clc
js
stos
fcmovne
add
cld
sti
mov
ss
movsl
mov
lods
loopne
ss
push
inc
pusha
add
paddusb
add
test
xor
sub
or
nop
clc
xchg
pop
sarb
jmp
cmp
mov
mov
cmp
clc
fs
enter
inc
mov
inc
pop
jecxz
lahf
es
fnstenv
aaa
rcrb
inc
sub
xchg
cmpsb
or
and
pop
push
jge
movsb
xor
push
and
xor
jle
mov
repz
or
iret
scas
sbb
cmp
dec
sub
aas
shr
or
cltd
inc
push
dec
stc
out
pop
xchg
push
pop
into
les
insl
jmp
imul
or
push
xor
movsb
addr16
dec
fwait
cli
xor
es
je
push
setg
push
push
fsubrl
cs
dec
mov
cltd
cmpsl
sbb
cmp
in
loop
fsubrs
mov
in
mov
in
lret
or
test
inc
mov
ret
sti
mov
insl
adcb
xor
and
mov
lods
jb
out
jg
and
or
rcl
das
imul
dec
mov
popf
sub
or
cld
mov
pop
test
shrb
jns
lcall
in
inc
mov
pop
mov
adc
adcb
cs
in
std
pop
jbe
pop
xlat
xor
push
imul
xchg
fmuls
or
sub
mov
lret
mov
jae
add
fadd
ficompl
out
and
iret
sub
mov
add
push
in
int3
sbbb
sbb
mov
sub
les
out
jle
inc
and
pop
sti
adc
dec
mov
andb
pop
jl
cltd
cmp
cmp
daa
cld
inc
sar
mov
xor
inc
mov
loope
add
sbb
pop
mov
jp
sbb
inc
lds
cmp
jnp
push
mov
push
push
scas
mov
sarb
nop
ret
into
xchg
cmpl
inc
add
fwait
out
push
scas
or
pop
scas
dec
mov
mov
push
jg
outsb
out
loop
adc
not
sahf
sub
mov
push
xlat
imul
cmp
cmp
mov
dec
mov
mov
xlat
xchg
loopne
add
sub
push
sarl
cwtl
out
jbe
cmp
and
sub
movsb
inc
adc
pop
outsb
xor
dec
filds
jb
mov
outsl
push
int3
cmp
jnp
mov
insb
scas
pop
adc
or
or
dec
flds
sub
loop
daa
pushf
arpl
cmpsl
repnz
sbb
fadd
push
outsb
xor
in
movsb
in
nop
daa
jmp
xor
das
lcall
les
dec
jp
adc
lcall
ret
data16
push
pop
mov
popa
stc
lods
leave
jmp
insl
mov
ret
cltd
dec
xchg
fisttpll
aam
jns
aas
test
pushf
sub
fidivrl
es
xchg
dec
mov
rolb
push
sbb
inc
orl
fbstp
add
test
sbb
rcll
pop
pop
lahf
pop
inc
in
pop
xchg
adc
sarb
jno
mov
ds
inc
pop
jl,pn
jmp
and
cmc
jg
ret
filds
dec
data16
dec
sahf
inc
mov
dec
dec
test
mov
push
lock
fwait
add
adc
sbb
xchg
inc
pop
sub
jo
pop
mov
lret
jp
add
xchg
ret
or
call
scas
cmpsl
ljmp
mov
in
mov
sub
test
and
adc
arpl
mov
sub
xchg
and
adc
mov
fimuls
sbb
hlt
jmp
pop
inc
pop
and
shl
cmp
xor
mov
cwtl
mov
es
mov
outsl
inc
xchg
cmp
xchg
push
lock
fwait
rorl
fmuls
mov
add
pushf
pop
dec
lea
mov
int
test
stos
fldlg2
imul
xchg
mov
fidivl
mov
mov
mov
enter
xchg
iret
dec
cmpsb
cmpsl
mov
sbb
ja
jae
hlt
dec
imul
and
adc
mov
jp
dec
mov
or
mov
add
adc
mov
lock
pop
and
sub
pop
arpl
dec
scas
inc
mov
sub
jbe
movsb
into
fcoml
fwait
testb
mov
cmpsl
sub
dec
mov
loope
js
mov
outsb
clc
mov
xor
lds
xchg
lret
mov
inc
add
mov
inc
adc
int
ret
dec
lods
iret
dec
inc
dec
jle
clc
addr16
push
pop
out
push
inc
dec
or
cmp
ljmp
and
sbb
xchg
popf
ret
dec
sbb
sbb
sbb
cmp
rcrl
movsb
push
sbb
ret
cmpsl
sub
adc
sti
stc
mov
test
jmp
pushf
mov
je
mov
push
and
xchg
fneni(8087
and
insl
pop
and
mov
sub
jmp
cs
ret
cmpsb
test
lea
gs
test
lahf
mov
je
mov
sub
mov
test
jp
test
movsb
mov
pop
inc
sub
and
pop
xchg
xor
cmp
ret
cmp
sbbb
out
or
in
mov
sbb
call
mov
xorb
test
add
test
ret
cmp
test
xchg
push
jno
pop
lea
cld
mov
arpl
mov
push
lods
mov
nop
fstpt
adc
inc
xchg
ret
adc
mov
pusha
inc
sbb
fdivrl
xchg
lea
xor
add
sahf
push
sbb
jmp
mul
js
xchg
aad
lods
cs
rorl
jo
cltd
rcrb
jmp
dec
outsl
xchg
sbb
pop
mov
jle
ficomps
mov
fsubrl
stc
xchg
daa
cmc
cmp
sbb
shrl
pusha
or
outsl
add
je
cmp
fldl
rcll
mov
movsb
shlb
cmc
or
inc
movsb
sahf
cmp
popf
sub
inc
shll
fisttpll
test
insb
stos
ss
xchg
sbb
pushf
adc
sub
jno
or
cmp
or
and
inc
xor
mov
sub
iret
std
jl
addr16
jbe
and
lea
pop
daa
inc
push
mov
pop
add
outsb
add
inc
push
pop
sbb
movsb
and
xor
lods
lahf
faddl
popf
dec
or
sbb
and
in
subl
push
fisubrl
push
jo
loop
adc
xor
xor
sbb
mov
lods
call
xchg
mov
cmp
aam
loope
jp
mov
xchg
out
rolb
inc
fldl
adcl
xchg
stc
ret
mov
mov
pop
lods
bound
dec
jno
xor
ret
add
mov
jge
lcall
sbb
or
lods
and
and
xchg
addl
aas
out
xor
imul
in
lock
unpcklps
je
out
push
xor
ss
sub
dec
mov
imul
add
nop
aad
insl
popa
stc
xchg
sub
sub
sbb
push
add
push
push
ljmp
enter
inc
xor
lea
stos
rolb
out
inc
ja
pop
popf
adc
sub
sub
lods
lahf
sub
mov
xchg
stc
adc
out
movsl
pop
fidivrs
subb
xor
xor
mov
aaa
movsb
push
cmp
jno
imul
and
out
fmull
add
and
in
cli
loope
mov
mov
sbb
mov
jmp
push
xchg
bndstx
cmp
sti
fcomip
nop
dec
mov
lds
fmull
add
clc
and
dec
mov
xchg
sub
mov
push
cmp
mov
lods
pop
adc
inc
pop
xor
ja
sbb
push
add
in
adc
rcrl
fwait
imul
loopne
cmp
cmp
dec
mov
or
in
inc
loopne
xor
lret
orl
pop
cli
mov
lret
int3
nop
sub
leave
sub
push
mov
insb
sbb
cmp
fcompl
pop
insl
addl
and
pop
xchg
push
push
aaa
adc
sbb
xorb
ret
xchg
jmp
inc
adc
mov
push
xchg
test
push
cltd
inc
lahf
rcll
outsl
int3
add
pop
add
ljmp
lcall
and
ret
repnz
inc
pusha
sti
push
and
call
ljmp
popa
cmp
addr16
ror
sub
mov
add
jle
lods
mov
scas
cli
jb
mov
cmpsb
in
xchg
adc
rcr
or
jae
dec
js
sub
lock
syscall
lahf
je
xchg
jmp
pusha
cmpsb
xor
xchg
sub
cltd
arpl
cmp
mov
cli
in
jno
mov
das
popa
xor
jne
mov
mov
xor
aaa
or
lret
insb
mov
jge
mov
imul
aas
and
inc
ret
sub
push
bswap
push
scas
sub
jp
pop
and
repz
icebp
in
lea
mov
adc
sbb
daa
add
lret
adc
jb
xor
mov
int3
jbe
sub
movd
mov
xor
or
pop
enter
sub
or
mov
sbb
mov
mov
scas
dec
lea
xchg
xchg
xchg
call
clc
lods
sbbl
push
adc
bound
or
js
mov
scas
push
sbb
or
push
addr16
sahf
cmp
mov
cmpsb
je
mov
xor
lea
push
or
cmp
jg
out
dec
repz
jno
xchg
in
jle
push
insb
mov
cmp
mov
leave
insl
sbb
jnp
mov
pop
call
pop
mov
sbb
adc
xlat
div
or
sti
fs
xchg
lret
pop
subl
push
in
pop
xor
cmp
icebp
hlt
pxor
cs
mov
sbb
mov
daa
int
push
iret
xor
jb
ret
jb
arpl
or
mov
ljmp
das
xchg
cmp
stos
inc
sbb
mov
mov
xor
dec
sub
mov
leave
leave
movsb
dec
movsb
cmp
cmp
mov
xor
cmpsb
pop
push
mov
mov
cld
repz
cmc
pop
mov
xor
mov
pop
movsb
xor
cmpsl
jno
pop
adc
mov
add
xchg
fiaddl
cwtl
or
adc
aad
cmpsb
mov
inc
decb
les
stos
push
sahf
lret
jp
data16
jo
inc
cmpsl
aas
inc
dec
loope
xor
fnstcw
xor
leave
push
mov
push
mov
push
jo
add
pop
jle
hlt
push
into
pop
and
imul
mov
mov
bound
insb
pop
pop
es
fidivrs
add
lret
shr
daa
test
repnz
jmp
sub
sbb
cmp
orb
loopne
inc
and
pop
lds
in
loopne
es
lock
adc
xor
cmp
ss
mov
mov
or
pusha
std
mov
add
clc
enter
icebp
movsl
out
jg
xor
jo
mov
xchg
frstor
push
add
sbb
mov
out
pop
push
lret
fidivrl
clc
jmp
inc
jne
nop
mov
test
dec
mov
lods
aas
jbe
jge
in
into
jmp
icebp
pusha
loopne
sub
clc
into
stos
jle
or
push
lahf
cmc
pop
jbe
shl
push
test
insl
mov
repnz
or
push
mov
cltd
sbb
jae
push
sbb
lret
sahf
lods
sub
mov
sub
pop
sbb
add
sub
jb
loopne
es
lret
arpl
xchg
aaa
pop
ds
inc
inc
aad
cmp
cltd
inc
insb
cmp
repz
or
cmc
mov
mov
icebp
sbb
jbe
jb
pop
jge
stos
pop
xchg
fidivrl
dec
push
xchg
cmpsl
hlt
imul
adc
fwait
mov
and
mov
jnp
cmp
mov
mov
mov
dec
std
inc
xor
out
iret
sbb
dec
ss
test
add
adc
inc
cmpsl
and
arpl
fldl
push
imul
sbb
jmp
dec
shl
mov
push
pop
fidivl
popa
popf
mov
fldt
adc
mov
and
push
cmpsb
xchg
inc
or
cmpsl
dec
push
outsl
mov
jnp
lods
aad
call
or
int3
mov
push
and
cmp
enter
arpl
out
and
imulb
or
cmp
dec
stc
sbb
das
out
test
mov
addps
cmp
jecxz
shrl
test
mov
cmpsl
mov
test
stos
sub
divl
adc
dec
push
adc
shll
sbb
xorl
ret
jb
scas
mov
shlb
sbbb
lret
cmpsl
mov
and
lret
adc
add
sbb
rcl
lods
imul
mov
inc
dec
push
movsl
test
cli
jne
aaa
dec
int3
add
mov
fdiv
pop
or
outsl
push
into
int
cmp
movsb
cmpsb
mov
mov
add
dec
and
push
scas
cmp
into
jge
nop
xchg
or
ret
xor
xor
inc
mov
sub
dec
mov
xchg
dec
and
xchg
test
into
xchg
arpl
cltd
mov
pop
push
mov
or
xlat
rcrb
mov
pop
mov
jo
lock
sbb
sbb
jle
push
push
pop
adc
out
pop
leave
ret
out
stc
repnz
addr16
es
cmp
sub
push
and
pop
ss
cltd
std
inc
stos
xor
push
dec
pusha
push
sub
fs
add
stos
xchg
push
lret
xor
in
and
push
into
lret
cmpsb
and
mov
lret
adc
pop
jp
mov
andl
ljmp
jno
cmc
add
call
push
clc
mov
dec
mov
out
outsb
js
popa
in
aam
xchg
cs
push
std
adc
xchg
arpl
pop
popa
ss
lods
loop
pop
imul
adcl
adc
cs
xchg
lock
push
or
sbb
jle
fdivs
out
iret
pop
or
and
out
addr16
jg
imul
mov
loope
leave
movsb
push
mov
jb
jnp
rolb
inc
fldl
add
jo
loopne
mov
cmp
sbb
mov
rcll
je
in
jae
test
sbbb
mov
mov
bound
ret
mov
mov
or
pop
pusha
in
into
adc
dec
daa
mov
in
push
mov
pop
pop
add
mov
imul
ret
subps
jg
adc
mov
imul
dec
cmp
movsl
xchg
cmp
int
dec
iret
cmp
mov
daa
mov
aas
and
test
xchg
xor
es
inc
jl
inc
sbb
jl
jns
mov
push
and
cmp
sub
push
ljmp
sub
flds
pmuludq
sarl
mov
insl
stc
xchg
mov
mov
sahf
mov
cs
or
lods
test
add
shll
sbb
test
cmp
dec
xchg
jno
or
out
inc
add
scas
sbb
jno
fstps
lret
out
insb
push
in
add
mov
ss
add
mov
jne
insb
inc
out
inc
gs
fwait
dec
pop
std
fsts
mov
loopne
sub
mov
movsl
jecxz
mov
mov
int3
and
inc
cld
sub
or
cmp
pop
mov
cmc
and
cmpsb
daa
inc
sub
inc
mov
xor
xlat
lret
or
iret
and
inc
ljmp
push
lods
and
int3
xchg
and
leave
out
clc
cmp
cmp
fdivl
das
and
pusha
cmp
not
dec
notl
cmpb
mov
add
leave
aaa
fwait
add
push
es
scas
mov
push
call
mov
pop
xor
lahf
cwtl
flds
xchg
pop
pop
push
pop
mov
pop
mov
ljmp
mov
dec
jb
cli
pop
data16
or
outsb
jecxz
adc
xchg
and
adc
dec
imul
add
paddw
add
cld
test
xlat
and
insl
mov
aam
and
imul
scas
cmpsb
xor
bound
mov
sbb
or
mov
inc
dec
mov
mov
fadds
jecxz
pop
add
sub
pop
in
sbb
add
or
jp
ss
cmp
popf
lods
jae
xor
push
rcll
shll
imulb
scas
pop
sar
into
mov
shlb
mov
idivl
adc
inc
lods
sbb
pop
xlat
and
xlat
jle
pop
cmp
or
xlat
dec
xchg
jle
repnz
lds
lret
leave
lahf
mov
scas
mov
aaa
add
mov
je
test
inc
sahf
fwait
jle
cli
adc
iret
xchg
cmpsb
cmp
sti
pop
mov
dec
pop
test
adc
fdiv
leave
cmpsl
in
fcoml
jle
sub
pop
or
popa
lods
sub
stos
lock
lods
dec
inc
fisttpll
add
lcall
and
xchg
scas
mov
rolb
out
fldcw
out
scas
out
cwtl
dec
sub
add
cltd
add
push
mov
xor
add
push
sub
inc
inc
cwtl
fildll
and
jp
xchg
loopne
aad
ret
and
lods
inc
jno
xor
push
outsb
mov
daa
lret
test
gs
adc
cli
pop
into
into
or
and
nop
cmpsb
or
push
mov
stos
std
leave
das
test
and
insl
fldcw
negl
jecxz
dec
push
adc
push
or
mov
or
xchg
pushf
cld
int3
shrl
fxch
pop
es
imul
call
inc
outsl
loopne
mov
ss
and
adcb
fwait
mov
and
and
test
mov
rcl
fistpl
lds
sbb
nop
shll
movsb
dec
jns
int3
into
in
ljmp
jp
pop
rcll
xchg
mov
std
jns
push
shll
mov
mov
xor
mov
pop
stos
dec
aad
je
push
imul
push
int3
lods
mov
xchg
jle
add
mov
icebp
and
insb
push
mov
jae
mov
rcll
xor
dec
aam
nop
mov
cld
and
sub
scas
or
int
in
pusha
arpl
cmp
or
repz
or
into
scas
int
dec
jne
sbb
pop
and
lea
inc
mov
push
mov
inc
lods
cmpsb
int
dec
mov
mov
cmc
sub
mov
in
out
mov
mov
mov
jp
repz
cmpsl
das
xlat
xchg
je
cmp
jne
bound
subl
cs
push
cmp
in
cmp
and
subl
sahf
data16
leave
loop
jle
mov
push
sub
imul
imul
sub
andb
test
cmp
dec
and
fwait
xorl
je
add
clc
cmpsl
stc
es
loope
dec
cmp
in
pusha
stc
ret
into
or
push
and
pop
scas
scas
add
lcall
dec
mov
mov
aad
scas
dec
inc
iret
daa
shl
hlt
lds
inc
mov
lock
inc
push
mov
pop
lds
pusha
movsl
loope
jmp
jecxz
ds
fs
add
mov
mov
jmp
cmpsl
inc
repz
lret
aam
das
push
lock
adc
adc
xor
adc
push
xor
in
in
ja
sub
cmp
pop
iret
lods
push
cmpl
pop
sub
cld
jb
adc
mov
rclb
ret
test
lahf
adc
xor
sarl
and
add
jo
cld
iret
ret
insl
out
int3
jb
js
scas
xchg
pusha
mov
repnz
inc
subb
rol
ljmp
xchg
add
mov
test
xchg
xlat
sbb
iret
clc
mov
push
xchg
ret
and
inc
stos
xchg
ret
sbb
cltd
mov
movsl
adc
xor
or
sub
mov
xchg
pushf
iret
xor
dec
jae
jg
pusha
adc
pop
push
sub
xchg
adc
and
aad
and
dec
outsl
das
insl
loopne
jge
pop
int3
fdivrs
out
xor
int3
push
cmp
add
lods
push
jae
push
clc
test
jecxz
xchg
pop
pop
test
xchg
sbb
or
cli
sub
xchg
pop
mov
xchg
push
cmc
xchg
xchg
nop
std
pop
imul
dec
imull
push
in
jno
adc
jecxz
sbb
shrl
mov
les
mov
fsub
xor
ljmp
adc
notl
lods
test
fldl
pop
mov
jnp
dec
add
in
or
sbb
or
jmp
or
lods
mov
cld
inc
mov
dec
cs
leave
push
fs
mov
mov
add
hlt
mulb
call
je
mov
cmpsl
imul
inc
push
test
dec
out
je
ja
addr16
push
cwtl
movsb
imull
mov
mov
das
xlat
pushf
out
sub
push
imul
lds
inc
xchg
aam
pop
stc
xchg
xor
xchg
in
push
orl
daa
fs
shl
mov
mov
psraw
int3
mov
sbb
iret
nop
cmc
in
sbb
jmp
jmp
daa
jo
movsl
orb
cmpsl
mov
jbe
out
xor
fstl
cs
inc
fdivl
scas
stos
iret
rcr
jbe
xchg
mov
js
dec
mov
stos
mov
jge
inc
fsts
inc
rolb
mov
or
lock
dec
shrl
and
stc
imul
dec
xchg
jns
cmp
mov
and
mov
gs
sbb
enter
mov
bound
nop
pop
or
pop
aas
push
jne
fildll
sbbb
fnstsw
inc
push
and
testl
push
adcl
iret
xchg
push
adc
shl
push
jno
sbb
ss
ja
xchg
mov
cmc
jl
repz
imul
mov
inc
dec
test
dec
das
int3
dec
dec
dec
xchg
inc
cmp
loopne
mov
dec
add
push
mov
jb
js
fwait
sbb
leave
push
push
mov
mov
repz
and
scas
xchg
mov
mov
push
ljmp
mov
jns
out
cwtl
test
adc
aam
in
jo
stc
icebp
iret
repnz
jns
jg
das
mov
mov
pop
jp
fs
push
fistl
jb
shll
aad
testl
loopne
push
jge
fsts
lret
xor
sbb
sbb
fs
shlb
rcrl
jg
fsubrl
mov
test
stos
iret
popf
or
sti
in
test
push
pop
mov
push
xchg
sub
in
out
xchg
push
mov
int3
push
mov
mov
es
dec
jmp
adc
pop
adc
push
pop
mov
jnp
add
out
push
adc
fsubl
sti
and
lock
pop
aad
out
cld
sub
sub
out
repz
mov
sub
sbb
add
popf
lret
ret
insb
cli
xor
jno
mov
pop
mov
cwtl
sub
rorl
mov
add
lahf
in
mov
mov
xor
mov
inc
pop
xor
out
sub
sub
mov
push
push
push
in
or
aaa
inc
pushf
loopne
jb
sbb
pop
xor
push
les
das
das
les
hlt
add
pop
fmuls
fisttps
mov
in
sbbl
dec
adc
shll
push
dec
mov
cmp
cmp
andl
repz
cmpsl
in
jnp
ja
mov
ds
sbb
pop
adc
jo
mov
mov
lcall
ror
push
je
and
int3
lea
sete
mov
add
or
not
push
xlat
out
sbb
lret
mov
and
push
stc
fsub
dec
test
fidivrl
pusha
sbb
adc
inc
and
nop
inc
sti
dec
jecxz
sbb
std
filds
mov
sub
fwait
pop
rorb
movsl
inc
rol
bound
dec
mov
in
fdivs
sbb
mov
jg
dec
mov
mov
adc
push
fldenv
mov
idivl
pushf
movsl
ficoml
aas
rorb
sub
cmp
push
shlb
mov
movsb
shll
add
sahf
stos
ret
and
xchg
dec
push
loopne
scas
adc
rcrb
out
push
cld
jo
or
mov
insb
ss
dec
push
add
test
dec
lret
out
and
mov
dec
inc
jae
dec
aad
xchg
ljmp
test
js
loope
cmp
push
les
aas
xchg
pop
stc
jno
mov
mov
repnz
mov
sbb
sahf
push
xor
mov
das
negl
jbe
xchg
or
mov
sahf
mov
or
pop
ret
inc
fisubs
lcall
jle,pn
sbb
xor
cmpsl
outsb
or
xchg
xor
xchg
pop
je
push
adc
ja
rclb
dec
xor
push
clc
ja
ret
sub
jne
and
pop
mov
hlt
dec
jns
scas
lahf
lods
sbb
pop
loopne
subb
mov
out
xchg
xchg
mov
out
xchg
and
jno
movsb
mov
jns
inc
fs
rolb
xchg
addl
xlat
push
dec
cmp
scas
mov
jae
ret
add
pushf
pop
fs
or
dec
scas
scas
pop
out
mov
pop
test
inc
inc
cmc
arpl
out
mov
cmp
sub
movsl
roll
bound
test
mov
inc
mov
dec
and
adc
jo
movsb
mov
cltd
rclb
add
mov
or
out
loop
xor
mov
and
cmp
lock
push
and
sub
enter
cmp
in
push
xor
outsl
add
inc
mov
inc
cmp
sbb
xchg
shr
mov
ret
fdivs
ret
pop
jns
fs
js
inc
jae
cli
loope
hlt
xor
aam
es
and
xchg
test
test
xchg
pop
xchg
ss
mov
jge
adc
dec
add
mov
test
sbb
mov
mov
dec
movl
inc
lahf
jmp
test
or
out
nop
mov
int3
cs
or
mov
sahf
and
jmp
jns
es
sbbb
push
and
jns
xchg
mov
pop
mov
xor
scas
pop
xchg
and
sbb
dec
fsubrl
popw
loope
or
sbb
cmpsb
in
push
xchg
push
pop
stc
rcr
fisubl
fimuls
popa
mov
outsb
pusha
xor
out
add
mov
popf
mov
out
imul
call
dec
aad
adc
mov
aaa
sbb
pop
xchg
outsb
popa
aas
xchg
jmp
pop
sbb
enter
mov
into
outsl
xchg
mov
jae
test
xor
mov
push
jp
pop
enter
lret
test
xchg
add
xchg
add
mov
dec
mov
rcll
jmp
test
movsb
je
ret
inc
and
pusha
leave
popa
repnz
rcrb
mov
aad
aam
lcall
movsb
mov
push
cmp
gs
adc
inc
dec
aad
and
add
into
add
dec
rolb
rorl
sti
pop
in
mov
sub
push
jnp
mov
jne
cwtl
vcomisd
sbb
sbb
je
ffree
push
rol
cli
shlb
outsl
mov
cmp
lods
insl
mov
adc
shrl
dec
mov
dec
and
mov
xor
jnp
sbbl
mov
xchg
push
mov
loope
pushf
mov
cmp
or
mov
mov
add
mov
test
mov
jg
cmp
cmp
sub
dec
sub
das
mov
pop
pop
adc
mov
add
mov
aaa
hlt
xor
es
stc
mov
pop
iret
jmp
ds
xchg
inc
add
pusha
int
stos
pop
sbb
cltd
mov
sub
insl
inc
ret
mov
out
aaa
push
mov
rcll
xchg
pop
sbb
mov
push
jg
fsubrs
push
aad
sub
push
call
adc
cmp
fldt
in
push
pushf
dec
and
daa
push
nop
pop
popf
inc
outsb
pusha
int3
aas
pushf
adc
and
jge
jo
fs
cmp
rorb
fstpt
push
xlat
cli
and
sbbb
stos
test
adc
xchg
cltd
add
das
scas
inc
jg
mov
ja
inc
xor
repnz
test
dec
cmp
movsl
int
loopne
xchg
mov
xchg
jne
or
ss
mov
mov
test
pushf
mov
mov
dec
idivb
das
bound
xchg
rcll
ret
xchg
adc
and
or
cmp
push
orb
adc
push
adc
shlb
lahf
sub
push
adc
in
xchg
and
sbb
pushf
pop
not
jo
push
in
mov
mov
jae
mov
adc
adc
outsl
or
pop
xor
push
fwait
push
lea
inc
pop
push
push
imull
pushf
movsl
inc
dec
add
xor
clc
call
clc
or
packuswb
dec
push
bswap
and
fdivl
sub
mov
ja
mov
aas
dec
sti
fadds
pop
daa
mov
test
loope
iret
in
add
mov
lds
lret
adc
cltd
scas
cmp
push
xchg
pusha
sbb
fstps
jno
add
dec
insl
fwait
dec
cli
xor
cmp
inc
cmp
vdivsd
cmp
xchg
push
aaa
mov
addr16
enter
push
mov
es
pushf
call
fistps
pop
fistpll
adc
jnp
push
mov
cmp
mov
cmpsb
addb
mov
int3
pop
icebp
ja
je
mov
mov
ret
cmp
cmp
insb
pusha
push
sbb
jmp
cmp
mov
mov
xor
push
adc
inc
fsubr
imul
ficoml
inc
mov
je
push
jle
es
push
jg
mov
lret
lcall
push
leave
test
add
arpl
daa
jnp
mov
test
fiaddl
push
fstps
push
rcrl
or
popa
inc
xchg
andl
inc
fnstcw
stc
pop
loopne
pop
and
jmp
mov
scas
jnp
add
out
test
nop
cmp
jo
adc
nop
pop
aam
dec
xchg
stos
pop
mov
cltd
pusha
pop
push
movsl
pop
sbb
das
les
popa
mov
pop
fcmovnu
xor
negb
dec
mov
daa
and
jbe
int3
dec
iret
mov
xor
xchg
xchg
in
xor
sub
pusha
sub
xor
jle
push
mov
fwait
mov
leave
les
test
inc
add
sbb
push
xchg
int
lret
scas
cmp
ret
or
add
add
push
dec
gs
or
sub
fstps
or
stos
cmp
std
iret
call
into
lahf
into
ss
sbb
leave
add
and
push
sub
testl
mov
insb
enter
dec
cltd
jno
lcall
inc
push
mov
sahf
scas
push
movsb
mov
leave
out
leave
ffreep
popa
shll
pop
rcrb
test
or
imul
hlt
mov
sub
into
mov
sbb
daa
aas
mov
int3
hlt
xor
dec
adc
andb
or
mov
dec
adc
out
aam
cmp
sti
out
dec
sbb
js
out
add
adc
push
adcl
test
inc
add
mov
mov
xchg
aaa
adc
mov
sub
jbe
and
je
xor
xor
jle
jl
out
cmpsl
outsl
xchg
push
xor
mov
mov
call
repz
pop
ficoml
mov
jns
push
rcrl
cmp
mov
shrl
stos
test
push
mov
and
pop
inc
mov
mov
mov
bound
push
cmpsl
call
add
cmpsl
dec
jecxz
jae
adc
mov
and
pop
scas
jae
jbe
xchg
cmp
sbb
stc
mov
test
insl
inc
push
loop
jmp
fdivl
adc
sbb
jle
push
aaa
sbb
xor
mov
sub
push
leave
mov
jp
insb
pop
gs
out
iret
push
or
mov
inc
adc
jge
bound
out
sahf
stos
sub
lret
iret
in
cmp
fwait
or
mov
jne
shlb
dec
stos
xor
fbstp
mov
aaa
dec
pop
sbb
and
pop
jae
lods
mov
jge
insb
rcll
popa
std
arpl
cmp
jl
lods
xchg
repz
test
mov
aas
mull
nop
xchg
pop
call
imul
mul
lcall
lods
jl
movsb
cltd
jle
cltd
mov
sbb
movsl
shl
inc
lea
sahf
ret
jecxz
imul
mov
inc
test
pop
mov
insl
movsb
push
je
in
sub
movsl
jg
mov
and
inc
push
xor
xchg
lcall
icebp
mov
mov
paddq
outsl
mov
cmpsl
test
cmp
cli
pop
sub
xchg
lods
mov
lods
mov
repz
int3
xchg
jbe
mov
bound
dec
scas
pop
clc
cltd
xchg
xchg
mov
xor
push
imul
mov
and
pop
jmp
out
arpl
ficompl
fwait
les
sbb
sub
js
xchg
nop
or
cmp
fwait
js
sar
hlt
sub
pop
cmp
daa
mull
push
std
fisttpll
dec
orl
fnstsw
repnz
adc
cwtl
pop
fld
repz
pop
pop
fldl
fs
push
fstl
adc
and
repnz
xor
movsl
movsb
adc
adc
pusha
sahf
jmp
out
movsl
lahf
int
adc
in
cmp
inc
xchg
iret
sbbl
loopne
test
push
fimuls
xchg
lock
cmpsl
loope
and
mov
int3
cwtl
push
sarb
andb
in
sub
faddl
inc
inc
inc
mov
repz
xchg
jge
mov
ds
mov
or
and
imull
lcall
repz
push
lods
popa
cmc
mov
pop
mov
sub
daa
lcall
push
push
imul
icebp
in
cmp
int
call
neg
sbb
lea
loopne
or
sub
mov
ds
jl
dec
mov
roll
addl
data16
add
pop
ret
inc
push
or
jns
inc
out
insl
addb
push
jns
fiadds
mov
mov
nop
cwtl
pushf
fisttps
leave
add
jno
sbb
clc
adc
push
xchg
in
pop
mov
je
sbb
sbb
adc
lds
lahf
stc
mov
leave
sbb
in
daa
xchg
int3
sbb
jne
mov
mov
loope,pt
subl
push
popf
sub
xlat
cmpsl
lods
loopne
shrb
gs
xchg
hlt
scas
and
cwtl
sub
xor
and
jecxz
clc
push
testl
sub
sbb
rcr
sub
cmpl
jmp
movsl
jmp
sub
enter
cmp
jnp
outsl
lret
sub
div
mov
jge
jnp
mov
mov
out
lods
shrl
cld
dec
cmp
ret
data16
and
loop
inc
jo
mov
pop
jp
shll
xchg
sbb
ficoml
mov
js
sbb
sbb
es
repnz
insb
adc
mov
xlat
dec
mov
jle
int3
les
or
bound
dec
aam
and
push
lds
pop
mov
loop
repz
or
jbe
shll
jl
nop
pop
stc
pop
xchg
fcomp
mov
data16
rcrl
movb
lock
push
std
sub
cs
fwait
or
aaa
mov
enter
mov
shl
mov
cmp
sti
scas
mov
xor
sub
pop
ret
mov
xchg
push
int
outsb
cli
loop
js
stos
sbb
xor
cmpsl
in
jge
push
fwait
add
test
jle
dec
test
push
nop
insl
shr
dec
daa
and
test
adc
enter
mov
or
jnp
or
lods
cmp
pop
lret
cmp
mov
mov
and
sti
shlb
arpl
ljmp
cmp
dec
pop
cld
cmpsb
mov
xchg
push
orb
fldcw
inc
pop
sti
and
lea
pop
and
cmc
add
cmpsb
or
inc
aad
insb
fidivs
negl
push
push
popf
cmp
into
mov
ret
jg
cli
pushf
dec
pop
lret
fldcw
xchg
lcall
mov
inc
mov
out
jle
mov
pusha
mov
mov
outsb
cmpsl
dec
xchg
pop
mov
pusha
test
xor
cs
inc
in
xor
enter
cltd
mov
jle
inc
pop
idivb
rcrb
out
ljmp
fstpt
insl
lock
out
lahf
lock
push
out
fwait
xchg
scas
enter
mov
xchg
js
pop
sbb
hlt
adc
mov
xor
test
jno
gs
xor
mov
gs
mov
ret
scas
fs
xchg
adc
aam
add
inc
call
test
je
cld
rorb
mov
xor
fadd
icebp
enter
sbb
loopne
or
pop
mov
xor
add
iret
push
sbb
xchg
lods
jno
push
or
jnp
add
movsb
dec
fwait
cmpb
cs
fdivrl
push
xchg
dec
jl
jge
ljmp
orl
inc
out
in
in
gs
cmp
jge
pop
notl
pop
jo
mov
pop
xchg
xlat
imul
add
outsl
pop
add
push
xchg
data16
and
sbb
pop
jne
mov
dec
xor
sbb
dec
push
cmp
in
ret
in
adc
jns
push
mov
iret
icebp
mov
in
jnp
insb
cld
pop
and
lock
movsb
pop
arpl
sahf
bound
ljmp
cmpsl
inc
std
imul
sub
pop
movsb
imul
ret
out
xchg
pop
test
ret
jnp
lock
push
add
out
mov
in
add
mov
js
mov
scas
jmp
int
jo
xor
push
ret
push
mov
xchg
mov
sarl
sbb
xchg
sub
inc
sub
mov
ds
test
mov
xor
andl
and
fcomps
xchg
xchg
sbb
xor
inc
inc
inc
in
jnp
cmp
pop
and
push
pop
aaa
int
jecxz
data16
pop
push
or
and
mov
sbb
adc
mov
push
push
push
js
inc
fwait
mov
out
jb
fwait
cmp
scas
repnz
pop
call
in
pop
add
push
or
jno
ret
fmull
add
mov
add
push
jle
cmp
push
loop
push
sbb
xchg
and
push
stos
inc
mov
xchg
sbb
cmp
sarb
inc
dec
ss
loop
lea
nop
jecxz
lds
scas
pusha
cmp
adc
jnp
test
popf
das
jb
xchg
mov
cmp
mov
mov
addr16
dec
fcomps
cmp
dec
sbb
fs
pushf
jno
cmp
xchg
dec
xchg
mov
pusha
gs
aas
xchg
into
or
outsl
jne
cwtl
jno
dec
dec
cwtl
mov
popa
fists
std
call
scas
lock
mov
out
iret
repnz
jne
stc
xor
adc
pop
js
rcrb
inc
lock
cltd
push
jge
out
or
shlb
cmpsl
out
jge
loop
xchg
les
pushf
push
movsl
xor
dec
cmp
adc
jmp
cmpsl
mov
jge
ja
mov
cmp
test
xor
mov
jnp
jae
jge
jmp
mov
mov
cmpsb
in
or
stos
sbb
jge
sbb
inc
xchg
rclb
and
adc
mov
popf
cs
in
fs
xchg
adc
lcall
pop
insl
fcmovnu
or
sub
add
fsubl
cltd
add
enter
gs
rorl
insb
loopne
push
cmp
lret
stc
mov
cmp
sbb
pop
inc
xchg
mov
mov
mov
push
fiaddl
add
aaa
dec
add
xor
jp
mov
hlt
out
fistpl
mov
ds
push
adc
sub
push
ret
or
adc
loop
jp
jl
cmp
dec
mov
stc
inc
cli
xor
and
push
cmp
popa
bound
xor
jnp
ret
dec
lcall
repnz
xchg
mov
mov
and
pop
call
aaa
sbb
xlat
mov
mov
inc
aam
or
sbb
dec
imul
inc
mov
fsubrl
sbb
jb,pn
inc
xorb
arpl
fwait
inc
shlb
push
fimuls
or
test
jbe
sbb
lods
mov
test
punpckhdq
ret
loop
xor
mov
movsl
addr16
fimull
mov
pop
lods
inc
sub
dec
fldl
adc
icebp
sub
nop
pop
cmp
dec
es
sbb
js
mov
iret
hlt
aad
pop
cmp
dec
push
in
popf
flds
stc
cmp
add
out
out
setb
jnp
bound
out
arpl
and
decb
ja
jecxz
cli
out
mov
mov
xlat
aad
pop
pop
fcompl
fisttpl
xchg
pop
and
es
push
mov
jmp
xor
cmp
daa
add
and
sti
add
outsb
xchg
incb
mov
push
add
push
popf
fadds
cmp
xor
jnp
sbb
mov
sbb
shrb
mov
add
mov
das
in
xlat
popf
sahf
push
cld
inc
repz
scas
andb
sub
sbb
xchg
ret
lods
push
ret
or
clc
icebp
jae
scas
out
mov
sti
adc
cmp
push
jp
cmpsb
mov
idivl
jg
lahf
int3
out
xor
hlt
shrb
sub
push
xlat
lahf
mov
cmp
daa
int
sbb
pop
jmp
cmpsl
inc
push
push
sbb
iret
sbb
xchg
test
xchg
insb
sar
fcmovnb
popa
jge
dec
jp
arpl
mov
mov
cmp
out
out
xchg
and
popa
test
pop
leave
mov
mov
add
test
hlt
push
popa
ret
xchg
add
jb
xor
enter
das
popf
movsb
stos
stc
jle
mov
insb
ficomps
fdivr
mov
jg
rorl
adc
and
inc
inc
jl
int3
dec
push
cmp
xchg
or
inc
mov
or
push
faddl
clc
push
xchg
jne
icebp
pop
inc
shl
les
out
out
push
cmpsl
shlb
fstps
or
xchg
push
and
cld
push
pop
or
cmpsb
jl
repz
scas
jg
out
adc
push
mulb
cmp
and
mov
pop
je
inc
push
test
stc
shll
rorb
incb
sbb
cli
jl
cmpsl
js
mov
pushw
dec
ret
js
push
inc
bnd
cwtl
fcmovbe
enter
je
xchg
aas
rorb
notl
test
jbe
mov
lock
loope
or
ja
inc
cld
lock
out
cltd
jle
test
imul
inc
sub
imul
in
mov
ja
jns
xor
xchg
mov
in
aad
xlat
out
xor
jb
repz
test
jae
shlb
dec
ss
insl
push
cmp
ljmp
push
dec
insb
roll
pop
adcb
adc
xchg
xchg
mov
adc
sub
mov
inc
pushf
cmpsb
shlb
inc
hlt
adc
adc
shll
inc
cld
mov
dec
xchg
jecxz
sub
addl
and
pop
xor
xor
shlb
xchg
icebp
arpl
or
pop
inc
pop
orl
push
push
insb
lea
lds
inc
jmp
ret
and
mov
int3
pop
flds
shl
jl
pop
and
pop
add
sahf
dec
mov
imul
jmp
test
inc
loop
sbb
jle
pop
push
sub
dec
movsb
stos
add
jns
jl
icebp
pop
nop
cmp
aad
in
fstl
cmp
push
cli
add
fs
sub
ja
pushf
ret
dec
xor
inc
popa
mov
xchg
mov
fcoml
std
sub
stc
popf
es
data16
pop
daa
add
xor
inc
xor
bound
out
ror
push
imul
push
movsb
mov
cltd
adc
push
insb
out
mov
ret
mov
push
imul
sarl
imul
push
leave
sti
insb
mov
mov
cs
push
cmp
xlat
out
push
sbb
xchg
mov
pushf
mov
movsb
jg
pushl
in
inc
mov
cmp
sarb
xlat
scas
mov
movhps
out
cli
cs
lret
fmuls
sub
cmp
pop
out
mov
fistpl
mov
and
cld
adc
cmc
dec
aad
push
enter
das
jmp
mov
dec
lret
js
hlt
lods
rcll
pop
jae
loope
add
out
pop
stos
add
jbe
fwait
xchg
mov
mov
into
jge
pushf
inc
mov
mov
xchg
add
mov
test
out
cmpsl
cwtl
int3
mov
push
lret
mov
fcomi
inc
or
leave
inc
jb
into
stos
ss
mov
xchg
pushf
in
cltd
sbb
rol
jp
scas
gs
fcoms
adc
inc
xchg
pop
jnp
test
and
mov
aam
fnstenv
in
mov
jl
repz
out
or
or
adc
mov
adc
out
movsb
sahf
and
aas
xor
mov
imul
or
int3
nop
out
mov
in
mov
add
test
es
les
fdivrl
in
jnp
fisubs
sbb
loope
ret
xchg
inc
in
scas
jns
lret
sarb
xchg
cmpsl
ja
rcll
and
testl
nop
jnp
shrb
sbb
dec
mov
sbb
pop
mov
nop
xchg
cltd
and
mov
add
mov
dec
fs
mov
mov
push
into
xchg
xor
pop
or
stos
iret
dec
mov
cmp
out
mov
loope
pop
jle
outsb
and
test
or
adc
mov
rolb
roll
js
div
out
mov
lods
push
mov
or
jbe
fucompp
cmp
push
enter
loopne
je
imul
mov
mov
xlat
imul
enter
ss
or
pop
jg
sub
push
sbb
sub
fldenv
mov
or
dec
cmp
xor
pop
mov
jecxz
cmp
stc
xchg
jb
loop
daa
and
inc
jmp
idivb
sbb
xor
cs
add
fimuls
or
xchg
lods
xor
or
mov
mov
pop
pusha
and
outsb
xlat
cmp
fistl
sbb
or
inc
xor
test
pop
mov
call
jnp
xchg
imul
std
call
sub
mov
jmp
popw
push
inc
lock
adc
adc
iret
loope
test
popf
pop
mov
cli
xlat
xchg
mov
dec
pusha
inc
xor
mov
ja
push
pcmpgtw
bound
mov
push
mov
pop
and
daa
or
enter
scas
mov
test
jmp
das
xorl
cld
rcll
sbb
shr
mov
fdivrs
popa
xchg
clc
push
or
pusha
icebp
xorb
pop
out
popf
rcl
fwait
into
sbb
jae
jg
and
jmp
jmp
lods
ja
sub
dec
push
sbb
enter
cmp
mov
cltd
rorl
arpl
or
push
xchg
adc
push
shr
es
movsl
out
mov
jecxz
mov
push
sbb
and
add
cmp
adcl
jns
mov
js
sub
cwtl
adc
sarb
mov
cld
sbb
push
sub
insl
xchg
shlb
adc
sub
insl
es
push
lcall
jg
jge
xor
sub
xchg
shll
int3
pop
out
push
cld
or
add
sbb
das
roll
lods
jne
inc
sarb
mov
in
push
imull
jbe
popa
adc
xchg
sub
lock
stc
xor
sub
add
in
lcall
dec
popf
inc
xchg
push
xor
lret
mov
jno
nop
gs
outsb
pop
clc
in
es
pop
xor
aaa
popa
mov
cmpsb
cmpsb
imul
xchg
lds
add
aad
add
push
les
adc
ret
jnp
adc
mov
sub
lcall
pop
call
pop
adc
les
mov
push
push
xchg
hlt
aas
arpl
xor
aas
push
rcrb
sub
xor
xchg
xor
lea
lret
je
inc
pop
add
rclb
and
mov
add
push
or
sub
mov
cltd
aam
add
xchg
mov
movb
mov
scas
ja
inc
out
iret
addr16
test
in
cmc
jnp
fsts
testb
icebp
push
jmp
xchg
sbb
leave
sub
dec
fdivp
aaa
cmp
outsb
dec
fmuls
jge
jle
inc
rcr
mov
in
mov
cmp
sub
push
out
xor
out
mov
cmp
dec
or
xchg
in
icebp
hlt
scas
adc
ficompl
push
sbb
mov
mov
cmpsb
push
inc
sbb
xorb
add
xor
or
xor
jecxz
mov
popa
scas
jns
cs
sub
rcll
sub
ja
testb
in
pushf
pop
xchg
inc
xchg
jno
dec
cld
sub
daa
cli
mov
int
dec
inc
rcl
fmull
mov
mov
shrb
push
ja
mov
test
mov
xor
mov
pop
pop
mov
add
daa
push
push
mov
sub
call
push
in
enter
or
adc
sbb
push
fimuls
adc
mov
scas
ret
dec
pop
adc
pop
push
xchg
mov
xor
and
ret
mov
inc
cmp
dec
xlat
lock
sbb
rclb
add
and
fcmovb
popa
pop
adc
fnstcw
xchg
add
sub
shrb
sub
out
stos
les
orb
adc
add
fsubs
jmp
pusha
cmpsb
jge
stc
mov
sarl
insl
in
test
addr16
jb
pusha
push
cs
dec
mov
pusha
popa
ljmp
addr16
cltd
fnstenv
pushf
push
in
xchg
js
movsl
pop
test
pop
adc
lret
push
std
mov
out
sbb
addb
in
loope
xchg
out
and
mov
das
xchg
lods
cmp
xchg
inc
sub
stc
jne
adc
lret
mov
push
xchg
test
test
or
pop
mov
or
xor
xor
add
cmp
mov
in
and
inc
xchg
insb
repz
jno
jae
inc
mov
addr16
lcall
fcoms
filds
repnz
test
dec
sti
in
shrl
mov
jg
int
shlb
sti
push
push
inc
sub
mov
jne
pop
rorb
add
loopne
push
sub
loopne
into
jb
mov
enter
jnp
push
cltd
fadds
icebp
cmpsl
and
xchg
lcall
adc
sbb
std
lods
in
mov
lret
sarb
cmp
icebp
dec
and
jo
fiadds
dec
lret
cltd
mov
rcrb
cmp
jp
dec
sub
rcrb
dec
es
sub
rep
sbb
mov
out
imul
dec
imul
adc
mov
inc
and
out
stos
or
je
pop
inc
hlt
xchg
inc
pop
int3
cmp
sbb
inc
ja
iret
faddp
mov
lods
mov
jne
ljmp
and
ret
or
test
pusha
not
xor
adc
push
ds
cld
or
arpl
shll
or
dec
shll
ss
imul
addl
in
sub
outsb
mov
daa
mov
negl
cli
hlt
mov
mov
pop
cld
push
and
ja
sahf
add
mov
rcrb
jecxz
je
cli
mov
repnz
adc
cs
push
cltd
std
je
push
movsl
dec
das
mov
pop
push
xor
daa
or
dec
fucom
and
rol
xor
clc
mov
scas
fidivs
lcall
fimuls
sub
fnstenv
sub
sub
cltd
dec
sti
push
mov
sub
dec
xchg
out
ljmp
rolb
dec
lret
in
lret
adc
jp
xchg
cld
or
jecxz
mov
cmp
xchg
pop
mov
ret
jb
mov
jbe
mov
cmp
push
inc
enter
and
lea
lods
dec
adc
mov
ret
dec
push
mov
cmpsl
adcb
in
cli
jp
cmc
inc
xor
mov
jae
jg
inc
xchg
and
add
push
mov
xchg
sahf
xchg
shlb
mov
dec
push
lahf
or
mov
mov
sti
incl
icebp
dec
pop
mov
mov
and
leave
inc
mov
clc
sarl
cmp
cmp
mov
inc
test
sbb
mov
adc
push
jb
push
jecxz
fnstenv
jno
cwtl
pop
das
sub
and
or
sub
outsb
in
icebp
xor
jo
or
add
iret
add
sub
inc
test
shlb
xchg
call
fdiv
psraw
jecxz
repz
sti
daa
in
adc
loopne
in
test
mov
test
ljmp
push
xor
push
xchg
test
les
jle
aam
in
mov
dec
mov
addr16
or
add
test
cmp
call
pop
mov
incl
enter
incb
stos
nop
or
mov
bound
insl
nop
rorb
adc
imul
notl
jns
add
fcoml
push
cmpsl
loop
fimuls
sub
pop
inc
sbb
pop
imul
cmp
notb
mov
adc
mov
adc
mov
push
pop
mov
xor
xchg
addb
scas
pop
leave
f2xm1
movsb
xor
in
adc
stc
loopne
mov
dec
inc
pop
pop
lods
push
xlat
push
lret
sbb
push
call
idivb
xor
js
push
out
mov
sub
in
cmp
add
outsb
mov
ds
jb
les
negb
add
or
insl
inc
mov
jle
sti
add
loope
lcall
mov
or
out
jle
ljmp
loope
jae
add
or
cwtl
inc
jp
lea
inc
int
in
jecxz
or
add
lret
jecxz
pop
call
scas
pop
mov
pop
test
in
jmp
mov
jp
jmp
mov
jmp
lret
inc
inc
sbb
movb
sub
xchg
jl
xchg
jne
sbb
fiaddl
cmpsb
das
sbb
add
mov
ss
call
adc
or
sbb
mov
or
lods
add
movsb
pop
addr16
js
pushf
add
mov
mov
xor
addr16
arpl
xchg
fildl
push
dec
cwtl
cmp
leave
movsl
mov
sbb
addr16
js
xchg
int3
pop
inc
jno
in
les
test
mov
push
or
xchg
ds
repz
js
ljmp
push
test
mov
mov
sub
dec
and
pavgw
push
mov
nop
mov
lret
test
int3
inc
mov
jno
add
push
push
out
jae
scas
lcall
xchg
mov
outsb
pop
scas
sar
int
loopne
push
in
xchg
mov
pop
aas
or
cmp
inc
sub
dec
xchg
pop
jle
pushf
inc
dec
stos
push
cli
xchg
repnz
test
lock
popa
jg
in
and
xor
xor
test
xchg
and
or
lcall
xchg
sarl
idivb
sbb
clc
ja
sub
inc
push
pop
testl
jnp
aam
test
cli
leave
mov
mov
mov
in
mov
mov
out
lret
jbe
js
push
scas
jns
sbb
add
aad
ror
sbb
pop
test
fadds
pusha
push
hlt
mov
push
stos
add
int3
stos
lea
cmpsl
pop
cltd
adc
ss
insb
daa
mov
gs
or
add
fnsave
arpl
test
mov
outsl
call
mov
or
mov
xchg
mov
aas
xlat
outsb
adc
mov
or
loope
inc
ficoml
push
push
stc
mov
fsubrs
rcl
jae
lods
xchg
or
pop
gs
popa
cli
dec
aaa
shlb
adc
cmp
inc
jmp
cmpsb
add
nop
out
shlb
cmpb
daa
not
dec
popa
mov
jns
fs
pop
mov
mov
decl
fimuls
add
add
test
ret
rcr
pop
push
push
xor
js
xchg
lahf
imul
test
mov
imul
and
adc
cmpb
pop
rorb
mov
mov
mov
jl
pop
mov
dec
pop
push
or
imul
lahf
mov
es
fisubl
sbb
enter
mov
pushf
mov
jae
bound
xchg
subb
cltd
dec
mov
fisttpl
xor
lret
xlat
push
or
inc
stos
repnz
repnz
xchg
stos
cmc
lods
fistl
mov
sub
mov
push
in
out
pop
pop
paddb
scas
subb
mov
adc
inc
xchg
xchg
and
xor
in
ss
sub
or
mov
inc
fists
aam
mov
mov
ret
imul
mov
sub
lds
inc
push
cmp
pop
aad
xchg
jg
in
psrad
lods
es
xchg
dec
pop
lods
cmc
jne
push
xorl
jg
pop
rcll
xor
in
icebp
push
lock
push
xor
in
add
xlat
mov
std
push
cmp
insl
aam
outsb
mov
xor
adc
and
lret
out
pop
out
adc
xchg
jns
inc
sub
jmp
cmp
repnz
lret
enter
aas
mov
fstps
js
push
push
bnd
sbb
mov
cmp
pop
sar
mov
loopne
xchg
loopne
inc
leave
test
cmc
rcll
lods
pop
fadds
jp
add
mov
xchg
add
pop
jo
push
fiaddl
or
pop
popf
push
cld
pop
outsb
fucomi
in
adc
pop
add
insl
push
mov
lea
outsl
push
mov
mov
push
sbb
imul
and
test
mov
mov
adc
in
mov
jmp
dec
test
inc
pop
fs
jno
pushf
mov
dec
fdivrp
test
dec
pushf
push
sub
loope
jle
xchg
fdivr
hlt
mov
stc
pop
or
sbb
mov
add
pop
sub
fmull
fidivrs
inc
cmp
and
xchg
fcoml
xor
repnz
adc
mov
outsl
sahf
mov
int3
ret
adc
je
in
std
cmp
adc
push
xor
sub
dec
out
push
out
xor
fisubrl
lcall
sub
repz
aas
xchg
pop
loopne
push
fadds
ss
imul
fisubrs
loopne
arpl
es
jb
sahf
out
xchg
xchg
mov
adc
sub
jns
icebp
mulb
mov
lea
mov
aad
jnp
push
lahf
in
sub
mov
cmpsl
outsl
pop
bound
jge
xor
dec
mov
adc
inc
ret
sbb
sbb
push
sub
pusha
dec
scas
jnp
sub
push
nop
inc
stos
push
mov
push
sub
push
lods
cmp
cmp
jl
arpl
sbb
xor
aas
cld
inc
mov
add
and
fmull
cmpsb
shlb
mov
sbb
jns
add
pop
mov
adc
add
popa
js
shrb
ljmp
adc
push
push
mov
xor
mov
daa
daa
add
loope
mov
imul
dec
enter
dec
sub
insb
fdiv
sub
inc
jl
sbb
inc
cs
cli
push
cltd
push
jb
fnstsw
cli
je
sbb
outsb
sub
repnz
fucomip
mov
movsb
lret
imul
mov
fs
aad
mov
repz
lods
out
xor
cli
sbb
mulb
rclb
popa
push
inc
xor
push
sub
std
movsl
cmp
jb
sbb
test
sub
adc
es
cmp
push
or
pop
call
ror
movsl
loope
call
fisubs
outsb
mov
adc
cltd
mov
push
jp
lret
repnz
adc
pop
push
outsb
lods
and
iret
sbb
cwtl
out
xchg
ret
adc
xor
scas
fldenv
aas
test
sbb
stos
xlat
call
or
jmp
push
lahf
jb
inc
adc
flds
leave
dec
fdivrl
jle
dec
in
cltd
inc
jmp
fwait
icebp
jno
xchg
mov
out
sahf
mov
scas
mov
add
adc
aad
dec
inc
in
lea
fcmovb
shlb
lahf
repz
push
xor
mov
loop
aam
into
pop
hlt
jns
fs
sahf
dec
jge
divb
shrb
mov
mov
add
sub
push
inc
push
call
push
int3
mul
adcb
push
mov
mov
ret
test
mov
mov
lods
xlat
mov
sbb
cmp
adc
mov
lods
dec
imul
pop
repnz
cmpsb
sahf
jecxz
flds
test
jae
lods
add
andb
lods
pop
mov
and
cmp
rcl
adc
or
jge
jo
xchg
addr16
inc
mov
lods
mov
test
cmp
lds
mov
push
popa
sub
pusha
xchg
test
aam
sub
jecxz
out
xor
ret
xor
dec
insl
test
push
ds
loope
inc
sbbb
ljmp
jecxz
fwait
test
sub
test
pop
fs
cmc
push
loopne
push
sbb
xchg
aad
push
nop
stos
pandn
pop
mov
cmc
out
std
jmp
xchg
xchg
push
or
lods
ljmp
cmp
or
jp
adc
and
lods
xchg
jo
sahf
xchg
icebp
andl
fwait
and
stos
and
add
aas
bound
push
sti
dec
outsl
cmpsl
popl
xor
loop
mov
cmp
enter
cmp
mov
aam
in
and
stos
frstor
mov
icebp
test
mov
inc
xor
rolb
loope
pop
xor
or
or
lods
cmpl
in
bound
jp
mov
sbb
xor
pop
cmpsb
inc
idivl
jge
mov
pop
cli
lahf
repnz
in
test
xchg
jp
outsb
xchg
out
daa
in
fisubs
subl
push
imul
add
dec
jb
cmp
aad
je
dec
jge
push
xor
mov
or
sub
and
jnp
data16
or
sub
aad
jecxz
cs
sub
pop
mov
arpl
insb
mov
sbb
daa
out
jne
cmp
jl
cwtl
mov
pop
jmp
jae
or
inc
es
loope
mov
pop
or
jns
nop
sbb
movsb
rorl
cmpb
push
fistl
mov
aad
in
clc
adc
popf
mov
in
mov
xchg
and
xlat
jb
mov
lods
sbb
lret
imulb
idivb
test
fprem
stos
add
push
insl
ljmp
adc
mov
scas
icebp
push
jno
sar
fs
es
clc
and
sub
or
inc
mov
inc
repz
jmp
fwait
push
mov
pop
mov
add
sbb
hlt
fiadds
jbe
andl
xor
shlb
mov
loop
stos
in
aad
mov
mov
xchg
movsl
loopne
inc
sub
adc
fsub
cmp
inc
push
xor
lock
mov
pushf
sbb
call
leave
jge
inc
test
mov
cmpsl
mov
cmp
pop
insb
pop
test
callw
and
xchg
sbb
aam
and
loopne
test
mov
sbb
mov
aaa
push
dec
xchg
mov
ljmp
cmpsb
push
dec
mov
or
fincstp
pop
mov
dec
pop
ljmp
into
lods
xor
pop
xor
out
push
xor
or
inc
arpl
and
popa
scas
push
jno
mov
xchg
dec
rdtsc
and
rcr
pmaxub
adc
int
aas
or
lock
mov
push
rorl
outsl
mov
test
pop
fdiv
ret
fisubrs
movsb
cli
aam
lea
lods
cltd
scas
push
shl
sub
mov
test
xlat
xlat
decl
push
cltd
andb
cwtl
sub
imul
mov
push
push
cmp
lods
xchg
xchg
lds
pop
or
jge
hlt
fsubs
cmp
push
stos
outsb
mov
xchg
dec
xchg
pop
jns
adc
decl
mov
fsubl
xor
std
and
out
ret
fiaddl
hlt
loop
or
push
pop
push
jo
xchg
ret
ret
jmp
xchg
pop
in
mov
fbld
push
jno
xchg
mov
leave
ja
mov
sahf
popa
loop
xchg
push
mov
int
negl
arpl
xor
mov
inc
dec
lahf
mov
mov
je
sbb
out
mov
sbb
pop
movsb
cmp
cmp
mov
push
cwtl
push
jg
inc
out
cmp
fcomps
xchg
scas
fidivrs
xchg
push
lods
scas
imul
out
ss
pop
or
rcrl
add
aaa
xchg
mov
xor
mov
or
movsb
jg
ds
dec
pusha
push
fwait
daa
mov
pop
add
mov
adc
pusha
loopne
movsb
mov
imul
or
lahf
divb
into
adc
les
add
fiadds
dec
loopne
or
out
jb
js
add
repz
pop
and
add
pushf
ja
addb
shlb
adc
dec
ret
mov
or
xor
in
mov
lret
movsb
cmp
mov
lahf
inc
mov
cmc
aam
addl
adc
jle
loope
add
cwtl
jbe
pop
and
cmpsb
dec
bound
mov
pop
fcomps
sub
and
ret
inc
stc
int
out
mov
mov
xchg
scas
mov
and
cmp
call
dec
arpl
inc
mov
popf
jg
aam
aaa
rolb
sbb
xor
xchg
fstl
into
pop
stos
cs
mov
test
mov
cmp
xor
xor
mov
notl
popa
dec
test
movsb
popf
sahf
hlt
xchg
sbb
cmpsb
clc
mov
lods
adc
jl
repnz
mov
jnp
bt
mov
cmp
push
mov
incl
imul
enter
sub
in
xchg
popa
xorl
jo
les
arpl
and
jnp
enter
sti
push
add
fcoms
dec
mov
push
fadd
test
les
dec
xor
in
shlb
dec
mov
xchg
lds
dec
push
cmp
addl
popaw
dec
lods
push
fnstcw
cmp
rol
jp
add
push
sub
addb
jp
cmp
mov
mov
arpl
pop
inc
xor
popa
xchg
mov
jl
ljmp
jae
outsl
hlt
adc
jecxz
jae
push
jmp
fcoms
jb
cmp
shll
daa
lahf
test
pop
imul
add
xor
adc
leave
arpl
jae
mov
movsl
fs
or
inc
jp
mov
pop
mov
sbb
sub
xchg
jno
scas
mov
aam
add
lahf
mov
cmpsl
aaa
sbb
rorl
dec
sarl
rcl
mov
inc
inc
nop
jae
push
lea
lods
sub
mov
adc
push
sub
sub
mov
jecxz
lea
or
bound
icebp
mov
xchg
jmp
sub
sti
fnsave
lods
cmp
mov
orl
jecxz
fistpl
lahf
cmp
in
pop
outsb
cmp
or
or
and
and
outsb
jmp
jbe
mov
mov
cmp
sub
insb
push
jne
imul
mov
loop
cld
mov
mov
dec
sbb
fcmovu
in
inc
mov
ljmp
ret
jge
sub
sbb
lods
jmp
mov
jge
cli
dec
adc
test
jmp
loopne
int3
xor
out
and
add
jl
sarb
lret
lea
lods
add
or
push
adc
scas
test
and
push
fimuls
flds
push
pushf
sbb
cmpsl
movsb
or
stc
jg
ljmp
jge
pop
inc
adc
popf
andl
movb
adc
jnp
mov
notl
mov
jg
gs
adc
push
es
sub
icebp
inc
insb
push
adc
cmc
inc
les
jg
xor
xchg
das
fidivrs
adc
lahf
sub
pusha
je
dec
into
adc
ljmp
les
jl
push
fnstsw
jnp
xor
add
fistps
sbb
fcoms
mov
lea
in
mov
clc
push
add
mov
inc
push
xchg
out
in
les
pop
das
add
test
mov
aaa
dec
jle
or
into
mov
addl
push
movsl
outsl
xlat
je
imul
inc
mov
push
jle
lods
fs
pop
sbb
jmp
stc
in
mov
and
pop
sbb
clc
in
dec
insl
rolb
xor
pop
imulb
orb
stos
outsl
lret
popa
dec
dec
testl
mov
push
add
xor
xlat
jle
fdivrl
ja
xchg
xchg
mov
addb
icebp
lock
jbe
popa
mov
dec
inc
xor
mov
test
loope
stos
int
fcmove
push
fistl
inc
idivb
mov
lock
aad
sbb
xor
jecxz
sbb
mov
push
push
shl
fstpl
or
insl
rorl
sub
sub
mov
into
jle
inc
xchg
adc
movsl
bound
xchg
xchg
pop
std
fiaddl
inc
mov
ss
popa
pop
xchg
xchg
movsb
push
xlat
leave
mov
xchg
lret
sub
into
xchg
sbb
adcb
jle
mov
faddp
scas
lods
mov
xchg
shll
repz
ret
xchg
push
mov
inc
push
out
adc
sahf
sahf
push
jg
mov
gs
dec
ja
or
push
pop
fbstp
pop
adc
mov
cmpsb
inc
das
and
js
push
or
bound
fs
mov
std
lahf
cmp
clc
cmc
sbb
adc
xchg
out
lahf
push
xchg
leave
into
xchg
out
pushf
fdivl
add
lahf
add
movsb
mov
xor
adc
adc
test
push
mov
push
dec
jmp
arpl
int3
sub
repnz
xchg
pop
and
fiadds
lcall
invd
rorl
and
sub
fldl
in
insb
mov
jb
ja
push
mov
mov
mov
fs
dec
jecxz
mov
bound
int3
and
xchg
dec
out
aaa
clc
xchg
dec
lahf
dec
fcompl
nop
xchg
pop
jb
add
movsb
mov
jg
inc
mov
jg
frndint
out
xlat
je
jg
inc
xchg
adc
adc
mov
iret
push
sbb
or
push
popf
ds
mov
dec
mov
cmpsb
cltd
addb
fisttpl
push
enter
fimuls
outsl
ds
stc
jbe
or
inc
pop
sbb
adc
sbb
mov
bound
dec
pop
mov
sbb
test
jmp
fidivrs
jge
loop
cltd
scas
scas
dec
push
pop
sbb
cwtl
adc
sbb
movsb
ja
sub
daa
xlat
icebp
pop
loopew
insl
ret
movsl
cwtl
or
push
and
pop
fwait
jle
xchg
shlb
testb
jecxz
imull
adc
or
cld
jnp
aam
imul
dec
jmp
inc
xchg
das
cli
cmpsb
push
data16
ret
inc
inc
add
sbb
js
xor
movsb
and
xlat
cld
ljmp
pop
xchg
inc
jle
inc
fs
es
inc
arpl
jbe
pusha
fidivl
jo
shll
add
jnp
push
sbb
or
pop
mov
and
or
push
les
bound
adc
rorb
xchg
pop
xor
mov
inc
inc
lods
mov
dec
fnstenv
mov
dec
push
clc
add
jl
popa
push
push
xor
insb
mov
push
cltd
sub
test
ret
scas
out
mov
cmp
ss
cmpl
inc
cmpsl
mov
mov
xchg
cli
sub
hlt
dec
push
mov
push
je
stos
cs
mov
xor
pop
mov
jns
jns
dec
xchg
and
push
dec
cmp
cld
outsl
add
ja
mov
cs
clc
push
sarl
push
xor
mov
xor
mov
clc
inc
or
cmp
adc
mov
xor
push
out
sbb
push
cmpsb
add
das
jne
and
or
ljmp
mov
and
cld
dec
xchg
adc
jg
test
jecxz
idivb
loope
dec
push
popf
sbbb
cli
in
and
inc
pop
in
enter
fisttps
fisubs
cmp
push
mov
jb
cmpsl
adc
or
adc
fsubrl
jb
cltd
lods
shrb
dec
lods
rolb
mov
pop
in
inc
gs
xor
and
mov
sub
fadds
mov
in
pop
push
mov
add
sbb
orl
pop
test
push
xchg
dec
xor
stos
adc
sbb
movsl
adc
fsubr
in
pop
imul
les
sti
mov
jle
repnz
scas
leave
sbb
imul
sub
add
add
inc
stos
lods
repnz
test
mov
fistpll
dec
cmp
xor
test
aad
aam
mov
pushf
imul
jg
cmc
jg
into
notb
je
repz
int
add
sbb
fwait
mov
mov
ljmp
mov
sbb
pop
sbb
movsl
sbb
lret
cli
aas
jae
xlat
les
clc
cmp
jmp
mov
adc
add
std
xorl
outsb
sub
nop
fistps
lret
fimuls
jne
xor
mov
mov
sub
idiv
mov
lret
push
data16
jge
mov
inc
cmp
cmp
add
es
sub
fwait
std
loopne
mov
in
fwait
mov
in
cs
outsl
xchg
adc
sub
fdiv
and
jae
bound
repnz
sub
inc
mov
inc
shrb
test
adc
fmull
in
add
and
mov
scas
mov
aaa
jbe
pop
mov
jae
movsl
aaa
push
adc
in
fs
xchg
cli
pop
clc
fldt
dec
lea
orl
mov
jae
leave
cmp
popf
cli
xor
adc
mov
inc
movsl
inc
mov
pop
adc
sahf
lcall
cmp
sti
sbb
push
adc
mov
jle
mov
and
adc
push
add
rcrb
jle
popf
cmp
mov
sbb
and
xor
addr16
push
not
push
mov
outsl
push
mov
addb
add
ja
jno
in
or
in
or
cmp
fs
dec
cmp
push
dec
out
inc
xor
mov
popf
cmp
dec
sbb
aad
inc
dec
mov
xchg
dec
out
mov
mov
fsts
fs
movsb
inc
nop
mov
imul
addr16
fwait
in
inc
mov
or
imul
shrb
cltd
inc
dec
cmp
push
cmp
xor
jl
mov
jecxz
adcb
les
insb
test
mov
cwtl
jnp
out
repz
add
mov
daa
or
xchg
loopne
idivl
not
inc
adc
int3
cli
sub
out
pop
jmp
ret
dec
sbb
ficoms
cli
sti
xor
pop
addr16
inc
dec
rorl
enter
add
adc
clc
sub
mov
push
mov
mov
insl
inc
leave
adc
pop
pop
jg
inc
sti
shlb
mov
jp
adc
sub
stos
sub
pop
clc
outsb
mov
into
jbe
int3
sti
jge
jecxz
mov
insl
test
inc
add
mov
cmp
push
out
imul
jb
jmp
call
stc
addr16
xor
sahf
leave
or
mov
cmp
nop
dec
repnz
inc
dec
push
stos
or
add
sub
add
mov
mov
lcall
sbb
dec
or
push
adc
or
or
inc
sub
ret
lcall
out
sti
jae
sbb
aaa
push
sbb
test
ss
xor
mov
xor
test
adc
rorb
scas
xchg
jne
jne
mov
int3
xchg
lock
aas
fisubrl
and
ja
lret
sbb
dec
push
cs
leave
js
insl
movsl
call
filds
mov
mov
xor
cltd
inc
push
inc
sub
outsb
daa
mov
rcr
or
cmp
pop
inc
or
lea
mov
or
mov
or
sub
jge
dec
dec
sub
sub
lods
jns
popa
repz
lret
out
pop
sbb
sub
enter
ds
jge
not
push
fst
pusha
data16
adc
daa
insl
mov
std
bound
jg,pt
sbb
pop
mov
popf
add
mov
pop
inc
jl
push
in
sti
inc
jo
mov
sub
cld
ljmp
rclb
mov
ret
ds
lcall
andl
lods
ret
jg
adc
xor
xchg
aas
or
mov
mov
mov
test
data16
sahf
mov
lods
pusha
add
push
cmpb
cld
xor
pop
xchg
lret
sub
dec
lock
push
xor
iret
adcb
test
call
sub
pop
adc
mov
mov
shrb
xchg
pushf
inc
loop
dec
inc
inc
jbe
or
mov
fidivl
add
jnp
or
pop
fldenv
test
nop
pop
xchg
adc
sbb
fbstp
xchg
xchg
into
add
jb
stc
sbb
sahf
es
mov
filds
bound
mov
adc
add
sbb
into
dec
arpl
imulb
push
in
ja
movsl
je
mov
fstps
jb
jne
cltd
and
sub
pop
movb
roll
jne
scas
inc
test
sub
sub
cmpl
loope
cmc
and
notb
mov
add
xchg
lcall
stos
mov
es
int3
sbb
xor
ljmp
xor
pop
and
outsl
jmp
sub
pusha
lods
inc
cmpsb
pushf
sub
into
adc
mov
mov
push
fsubrl
cmp
lds
add
xchg
test
mov
rclb
ret
lock
lahf
and
mov
les
mov
cmpl
in
push
add
cwtl
pushf
mov
sahf
jae
les
aas
add
sbb
test
add
adc
sar
mov
xchg
cmp
das
sbb
cmpsl
pop
bound
mov
in
adc
dec
push
mov
jmp
in
stos
or
xor
or
mov
fcmovnbe
xor
mov
mov
test
push
mov
scas
and
daa
and
enter
fwait
ds
mov
aaa
lods
cmp
dec
xor
sarb
cld
movups
add
pop
addr16
cmp
jmp
pop
mov
add
scas
cmpsl
lock
stos
cli
insl
test
insb
sbb
mov
ficoml
lds
orb
xchg
arpl
pop
and
cwtl
dec
jp
mov
jns
jnp
scas
sbb
xchg
pop
sbb
ret
pop
nop
je
and
cmpsb
jmp
sub
enter
mov
xchg
sbb
in
cmpsb
rcll
push
xchg
mov
xor
or
pop
cmp
imul
cltd
add
jle
mov
pop
pop
adc
adc
ret
insb
xchg
out
fsubrl
add
xor
lods
xchg
mov
div
fldl
insb
xor
leave
aas
jb
aad
std
pop
shl
or
lods
sbbl
jno
bound
arpl
lock
das
dec
push
fs
cmpsl
xchg
fidivrl
sahf
jne
sbb
ror
pop
test
arpl
adc
xor
fwait
into
gs
cmp
test
in
popa
xchg
mov
movsb
imul
pop
mov
sub
dec
mov
pop
jg
mov
adc
aad
aas
pop
test
cli
shll
ja
test
cmp
add
mov
das
inc
insl
jbe
in
inc
ret
push
mov
mov
inc
sbb
xchg
fcom
into
stos
fimuls
sub
insb
mov
cmp
pop
iret
mov
outsb
out
popa
ret
dec
test
mov
pop
add
xchg
adc
mov
call
mov
stc
subb
in
xor
xor
and
test
insb
dec
je
test
adc
cwtl
sbb
rcll
xchg
xchg
sub
ja
clc
dec
fs
sbb
pop
arpl
sbb
fildll
jl
pop
stc
enter
pop
clc
xchg
mov
dec
xor
or
push
scas
lods
cmp
insl
loopne
pop
scas
repnz
ja
out
add
lret
mov
xchg
add
mov
mov
xor
cltd
popa
mov
popf
jbe
adc
pusha
and
jge
jb
loop
mov
jnp
pop
ds
push
data16
dec
mov
iret
int3
out
mov
jo
dec
popf
or
leave
sbb
add
mov
cltd
dec
cmp
cmc
push
arpl
aam
xor
and
mov
lods
mov
std
arpl
stc
mov
notl
imull
dec
movsl
out
js
fsubrs
cmc
inc
lret
dec
cmp
addr16
sub
cmp
push
jae
pop
hlt
xor
push
xor
cld
cld
mov
or
xorb
xchg
xchg
inc
push
dec
fnstsw
and
xchg
pop
clc
xor
movlps
rorb
sti
adc
inc
add
dec
inc
dec
fadds
std
push
hlt
int
dec
push
jnp
or
jnp
add
movsl
sbb
out
xor
xor
daa
push
lods
jae
insl
orb
xchg
cwtl
or
fdiv
sbb
out
pop
or
fisttpl
jo
roll
push
sbb
push
es
loop
mov
repnz
mov
int3
mov
ljmp
cmp
es
inc
loop
and
nop
sbb
sbbl
dec
pop
stos
mov
stos
fwait
int
ljmp
push
push
call
roll
add
scas
pop
scas
pop
out
cmpsb
lods
add
aas
inc
aas
ficompl
push
fneni(8087
pop
sahf
jns
add
mov
lea
add
dec
dec
pop
sahf
insb
inc
fdivl
ret
call
push
fcmovnu
mov
cmc
leave
out
addr16
test
push
cmp
push
lock
mov
push
pop
dec
cmpsb
ljmp
adc
mull
sbb
sub
movsl
xchg
add
push
cmpsl
cmp
fcompl
outsb
dec
xchg
stos
add
cmp
mov
xchg
add
pop
lea
jp
or
fdivr
ds
jae
ret
pop
cmp
sub
adc
imul
aad
mov
out
aaa
jmp
push
ss
cwtl
in
lcall
cmpsl
lret
iret
mov
fmulp
pop
dec
dec
jns
jle
pop
sbb
pop
pop
data16
cmp
dec
cmp
adcb
sbb
movsb
pop
cmp
inc
out
xor
daa
mov
fcom
fsubs
decl
xor
sub
cld
dec
mov
test
fmulp
insb
push
mov
push
jp
shr
adc
mov
jge
fnsave
loope
in
push
and
arpl
sbb
xchg
add
pop
inc
lods
mov
sub
dec
ret
sahf
icebp
repnz
adc
sub
test
fwait
cwtl
repnz
repz
sarb
movsb
stc
jno
xor
pop
or
or
sahf
inc
sub
adc
push
sahf
clc
sub
adc
fsubrl
leave
loope
js
aam
je
aam
out
add
push
push
or
lahf
mov
sti
and
jge
jmp
ljmp
mov
pop
inc
testb
mov
xor
dec
pop
jp
sahf
add
into
cltd
mulb
adcl
sub
jmp
sar
and
mov
inc
test
sub
fsts
je
push
mov
rcl
cmp
int
xchg
sarl
push
bswap
pop
push
sub
imul
test
leave
mov
push
in
popa
dec
fsubrp
pop
push
pop
ja
mov
icebp
hlt
or
xchg
test
mov
lcall
pop
mov
mov
dec
jo
sub
scas
outsb
inc
lock
movb
cmp
iret
je
clc
adcb
fdecstp
fists
pop
add
and
mov
add
mov
inc
push
push
nop
hlt
loope
pushf
mov
push
cmpsl
add
rcrb
in
or
jmp
pop
push
jbe
lret
push
cmpsl
inc
icebp
in
mov
and
enter
std
or
mov
push
cmp
push
cmp
pop
add
mov
jp
mov
or
imul
enter
ss
push
push
pop
xchg
aas
push
iret
mov
cld
inc
sub
push
adc
hlt
scas
push
dec
xchg
jle
ret
mov
data16
inc
jns
js
push
sbb
mov
xchg
pop
int
adc
mov
jo
scas
fisubrs
inc
movsl
pop
pop
mov
xchg
mov
dec
inc
cwtl
insl
call
or
inc
and
xor
inc
clc
int
test
mov
negb
mov
mov
hlt
push
xor
push
mov
ss
sarl
movsl
ljmp
je
dec
dec
dec
cmp
into
mov
mov
mov
loope
ja
mov
lret
jne
inc
cwtl
loop
dec
jecxz
xchg
fidivrs
fadds
mov
rcr
cltd
hlt
pop
inc
mov
ffreep
mov
mov
scas
xchg
and
outsl
add
pop
fdivrl
js
or
ret
or
jp
scas
xchg
rorb
fmull
fstps
jle
shlb
sub
lahf
adc
mov
xchg
fdivrl
or
bound
sub
mov
sbb
sti
imul
popf
jb
ficomps
add
test
add
aas
lds
sub
cld
fwait
dec
mov
out
movsl
rorb
fs
fstpl
fwait
dec
mov
mov
or
aam
ficomps
jmp
lcall
xor
xchg
in
lcall
mov
jg
aaa
pop
inc
insl
test
ljmp
sbb
mov
mov
inc
mov
bound
ret
in
leave
pop
int3
xchg
adc
mov
inc
in
mov
add
sub
cmp
popf
insl
decb
rcl
adc
scas
add
cli
xor
xchg
cltd
movsl
sub
aaa
cmp
push
cmpsl
xor
dec
xchg
mov
subps
popf
repnz
xor
rclb
pop
cmp
push
test
imul
jge,pt
sbb
jp
mov
out
and
lret
xor
rorl
lret
mov
popf
sarl
sub
out
and
arpl
xchg
pop
xchg
jge
jo
scas
dec
jns
jecxz
repz
shll
inc
xor
movsl
jl
pop
xlat
nop
and
pushf
inc
mov
mov
push
mov
popf
aas
and
stos
dec
pop
or
pop
test
scas
js
loop
popf
jno
sbb
cwtl
push
das
or
cmc
rol
jecxz
mov
push
adc
sbb
xchg
jnp
pop
mov
adc
jmp
leave
sbb
add
xlat
lahf
into
xchg
xor
dec
xchg
inc
push
notl
inc
test
aaa
push
sti
jl
inc
js
push
push
shrl
clc
xchg
testl
jae
jno
sub
in
xor
or
and
rol
ds
pop
ret
je
xchg
add
rolb
cmpsl
cmp
mov
cmp
adc
jg
out
inc
pop
das
jae
mov
and
iret
sbb
fists
negl
das
mov
aas
jo
jbe
mov
push
sbb
inc
sub
icebp
pop
outsl
mov
adc
mov
aad
add
xchg
mov
sub
sub
pop
pop
adc
out
daa
mull
jle
mov
incl
jae
out
pop
repz
cmp
cli
pop
cmc
lret
sub
xor
out
in
outsl
jge
movb
hlt
shll
pop
cmp
roll
loopne
std
pop
jmp
push
push
out
stos
adc
mov
jecxz
dec
jle
or
out
mov
testb
mov
jb
std
xor
push
ds
outsb
xor
xchg
cltd
inc
adcb
sti
lret
lock
jp
lahf
sbb
aaa
jp
jge
in
and
stos
jge
cmc
mov
mov
push
je
movsb
das
sub
add
push
addr16
and
sub
adc
stc
leave
cmpsl
das
push
ret
xchg
jp
clc
adc
mov
or
icebp
js
push
cltd
fldl
into
and
lret
mov
mov
stc
push
cmp
sub
push
or
jo
mov
mov
shrl
maskmovq
imull
jno
sub
test
xor
jns
out
fstpl
jp
cmpsb
mov
out
dec
sbb
cltd
cmpsl
leave
js
sub
shrb
add
jbe
ss
fimuls
ret
inc
pop
xchg
addr16
dec
imul
fucomip
adc
and
xor
stos
sbb
and
adc
cs
push
addr16
jno
popf
pop
pop
add
ljmp
out
sub
rorl
dec
ds
mov
test
loopne
cmp
aaa
ret
fistpl
xchg
clc
aam
xchg
cmpsb
lods
lods
pop
xchg
lahf
inc
mov
aad
cmp
xor
mov
lahf
mov
loope
xor
pusha
and
sbb
pop
jl
or
repz
mov
jl
inc
pushf
mov
bound
xor
jo
cmp
out
mov
int3
adc
roll
mov
mov
mov
in
js
fidivl
stos
cmpsl
add
sub
imul
push
mov
lcall
lret
xor
lds
mov
xchg
pop
inc
add
adc
lods
cli
mov
or
insl
sub
mov
inc
and
nop
lods
mov
cmp
test
pop
pushf
xchg
rcll
push
movsb
int3
mov
in
aas
mov
pop
mov
mov
xchg
scas
je
push
daa
js
int3
loope
insl
mov
mov
and
in
into
xor
xor
jmp
cmp
xor
sbb
cmpsb
cmp
mov
dec
enter
lret
hlt
xchg
rcl
push
cmp
xchg
lret
in
aas
adc
fildl
int
rcrl
stos
pop
lea
add
jnp
jno
add
pop
addr16
nop
push
mov
hlt
push
test
addl
sti
je
lret
cmc
cli
adc
jp
xchg
jp
and
dec
lods
lea
xchg
pop
ret
push
in
out
ret
xor
inc
iret
sub
cmp
xchg
mov
sbb
sbb
out
inc
addr16
xchg
or
jmp
jge
sub
loop
adcl
jmp
push
ret
test
int3
sbb
pop
cmp
loopne
jae
movsl
lret
xchg
jne
push
push
loop
xor
jo
int3
or
mov
jns
mov
push
cmp
lret
xor
out
ret
xchg
pop
add
sbb
ret
jo
cmp
mov
push
sbb
or
push
pop
add
sbb
push
add
mov
test
sbb
incl
add
rcll
mov
xor
adc
adc
hlt
imul
mov
loop
movsb
mov
mov
mov
mov
fs
addr16
sbbl
mov
or
jmp
fbld
add
in
sbb
dec
adc
mov
or
ficomps
nopl
dec
jo
lock
jno
test
cs
sti
add
and
xchg
enter
stc
mov
cld
xor
add
xor
mov
rclb
mov
imul
test
mov
mov
std
les
mov
aam
and
add
inc
fwait
mov
cmp
sub
ljmp
dec
inc
fwait
add
jmp
pop
mov
pop
adc
sub
lret
adc
pop
and
outsl
int
and
es
mov
xchg
pop
pop
or
daa
out
and
push
add
mov
adc
aaa
adc
jno
add
inc
pop
les
mov
into
xlat
mov
or
cmc
inc
jge
out
push
stc
mov
mov
or
xchg
adc
add
fidivrs
inc
testb
pop
mov
or
sub
les
mov
test
jmp
adc
pushf
mov
dec
sbb
sub
mov
mov
lret
and
xchg
mov
gs
mov
rorl
mov
popf
sbb
mov
leave
cmp
int3
cltd
lods
mov
sbb
test
mov
adc
sbb
push
out
xchg
daa
ja
push
xor
cmp
jmp
inc
pop
mov
in
or
in
cld
sbbb
int
cmp
xchg
aad
mov
pop
test
popf
sub
je
pop
mov
test
icebp
call
cmp
nop
mov
fists
xor
cmp
ja
xor
xchg
out
mov
scas
dec
jae
fsubrs
jp
scas
push
inc
shlb
daa
scas
inc
in
stos
lcall
adc
xor
adc
inc
loopne
lds
push
sub
repnz
mov
shl
inc
call
sarb
xchg
jp
add
sbb
add
cmp
adc
jle
sub
icebp
std
repnz
imul
fdivs
cmp
das
ljmp
pop
push
xchg
mov
repnz
movsl
add
push
fisubrs
ljmp
jl
mov
jbe
cmpsl
pop
push
fcomp
pop
cli
imul
and
xchg
mov
mov
push
inc
mov
inc
add
daa
out
xchg
mov
and
imul
xor
cmpsl
fucomip
xor
enter
nop
add
adc
into
and
fsts
xchg
out
rcll
pop
push
inc
jno
pop
bound
pop
inc
sbb
jb
test
inc
das
sarl
mov
mov
mov
push
hlt
pop
aad
jns
jle
leave
aam
add
lahf
mov
mov
idiv
loope
inc
shr
cmp
inc
int3
xchg
mov
loop
sub
sti
inc
repnz
outsl
imul
lret
stos
cld
and
fnsave
sbb
mov
xchg
sbb
mov
stc
adc
xor
aam
xor
mov
lcall
dec
test
ficomps
push
insl
sahf
leave
cmp
jp
and
push
adc
mov
dec
test
dec
jb
mov
lret
pop
mov
cmp
xor
out
rcrb
pop
fcoml
or
aas
fstpt
leave
sub
test
pop
ds
cmp
lret
xchg
pop
fiaddl
into
sub
int
dec
cmp
jo
cwtl
stos
ffree
out
inc
fcom
stos
mov
mov
cmpsl
test
js
cmp
add
repnz
fnstsw
je
lret
cmp
xchg
es
in
mov
sbb
divl
psubusb
cmp
dec
push
mov
sbb
test
or
mov
nop
mov
ret
push
and
lock
push
inc
mov
ds
addr16
arpl
std
inc
sub
jg
ret
ret
add
adc
mov
mov
jmp
cmp
cmp
mov
mov
and
out
movsl
fsubrs
push
imul
push
fstpt
add
out
jle
lret
shrl
pop
add
repnz
xor
xchg
dec
xchg
icebp
je
adc
dec
push
iret
negb
add
fiadds
mov
and
sub
jnp
scas
ret
divl
jo
cmp
push
cltd
xor
je
mov
scas
mov
push
fisubrs
fwait
mov
dec
pusha
sub
add
cltd
data16
mov
leave
ret
addr16
ja
mov
sub
adc
in
ljmp
inc
pusha
cs
pop
adc
sbb
insb
hlt
out
movsl
inc
fisubs
xchg
jae
in
dec
mov
mov
outsl
ficoms
iret
dec
mov
lea
dec
std
sub
xchg
xorb
jecxz
xor
inc
das
out
scas
in
inc
in
aas
mov
inc
call
mov
stc
psadbw
sbb
inc
pushf
dec
mov
std
dec
dec
pop
pop
out
flds
mov
movsl
movsb
jns
out
push
push
mov
shrd
mov
sub
int
fisubrl
nop
ja
push
inc
mov
sbb
or
sbbb
addr16
into
lret
push
movsb
or
add
mov
jp
kmovw
mulb
adc
les
adc
mov
jecxz
push
mov
push
xchg
std
dec
mov
outsl
in
les
outsw
sbb
push
or
cmpsb
sub
cmp
call
scas
shrl
into
mov
aam
clc
fwait
in
push
inc
pop
inc
dec
clc
jmp
scas
push
xlat
mov
fmuls
cltd
push
stos
mov
fndisi(8087
inc
ret
scas
fwait
jnp
mov
movsl
outsl
outsl
inc
fsubl
push
test
imul
mov
inc
xor
shrl
add
adc
add
xchg
test
fs
xchg
and
dec
mov
pop
cltd
push
xorb
cltd
imul
ret
pop
test
insb
fwait
ljmp
stos
mov
cmpsl
sbb
in
mov
jg
adc
leave
mov
je
or
popl
xchg
pop
push
add
cmp
inc
mov
scas
cmpsb
movsl
ja
cli
adc
xchg
stos
aam
loop
sub
mov
test
push
inc
jae
or
rcr
inc
mov
sti
jmp
call
push
inc
mov
int
sahf
sbb
orb
pop
dec
dec
fsubl
insb
and
dec
add
mov
pop
mov
imul
test
testb
push
pop
or
pop
sub
lahf
sbb
imul
mov
mov
decb
xchg
add
mov
sbb
xchg
and
inc
mov
push
dec
and
movsb
jne
xor
adc
outsb
lret
mov
testl
jnp
pop
mov
lock
fisubs
pop
shll
andl
scas
clc
xchg
lock
mov
mov
popa
movsl
or
mov
push
shlb
fistps
cmovg
or
dec
jl
push
loop
xlat
imull
xor
fsubl
dec
negb
sti
mov
push
add
imul
pop
je
jge
lods
cld
adc
adc
leave
and
cltd
enter
push
xor
pop
test
add
in
or
scas
test
inc
js
and
iret
jo
pop
loope
jno
popa
ror
lea
jo
fdivl
push
mov
mov
lea
imul
in
mov
xor
add
cmp
add
mov
ret
subb
inc
mov
xchg
movsb
ds
popa
inc
loope
fidivl
pop
and
inc
xor
mov
movsl
js
mov
cmp
mov
mov
cmpsl
mov
fldcw
je
ret
fsub
jno
gs
fstps
iret
push
testl
std
mov
je
insl
mov
test
in
fisubrl
jno
push
and
stos
xchg
xor
push
mov
mov
cmp
insl
mov
out
xchg
cmpsb
and
pusha
repnz
cmp
movsl
cmp
mov
je
adc
push
adc
add
cltd
jl
negl
or
xor
lea
mov
aas
pop
push
lcall
xchg
ret
sbbl
imul
daa
out
inc
cli
das
fs
repz
lods
jno
leave
cli
repz
mov
lea
pop
ss
cld
scas
into
xchg
test
jb
stos
loope
jmp
sub
shlb
pop
pusha
test
mov
fcompl
scas
lret
mov
sub
xlat
icebp
adc
jo
and
shrb
and
arpl
xchg
mov
mov
jl
inc
mov
inc
out
pop
std
insl
dec
stos
fbld
jmp
mov
cld
arpl
dec
shll
and
loop
subl
mov
add
jmp
stos
lcall
jge
add
and
jl
dec
sbb
inc
sub
push
inc
movsl
ja
shrl
push
sti
xchg
dec
in
lods
cmpsl
popa
mov
in
sti
and
imul
push
push
push
dec
jp
jns
fwait
dec
sbb
mov
inc
add
add
in
js
jge,pn
mov
adc
and
mov
mov
jb
loop
xchg
adc
ja
adc
loope
andl
mov
insl
dec
push
lds
mov
pop
fstpt
adc
int
jp
inc
frstor
jle
xchg
idiv
ss
jno
mov
mov
mov
sub
xchg
rol
mov
outsl
xchg
movsb
jmp
loope
sub
aas
sub
jge
xchg
inc
and
push
dec
ret
inc
push
popf
cmc
or
data16
cli
mov
lahf
push
mov
sbb
xchg
fisubrl
insl
dec
dec
mov
pusha
pop
mov
pop
fsubl
rclb
ret
mov
je
mov
inc
xor
push
pop
sbb
inc
dec
ljmp
psllq
aad
loopne
cli
hlt
je
adc
popf
or
xorb
test
aas
jne
push
adc
push
rcll
sbb
mov
lods
inc
hlt
insl
popa
add
mov
cli
mov
lock
mov
call
mov
cwtl
sub
xchg
hlt
inc
inc
mov
testl
adc
pop
dec
aam
mov
cmpsl
or
sub
getsec
mov
mov
adc
jae
xor
aad
pop
insb
int3
loope
xchg
lret
sbb
and
mov
das
insl
inc
repz
xlat
in
sub
and
loop
mov
push
lldt
arpl
mov
outsl
scas
outsl
sbb
jecxz
and
mov
push
fstpl
mov
outsl
into
cmp
std
out
xor
add
repnz
or
insl
push
loopne
xchg
jge
xchg
into
rclb
or
cwtl
xchg
dec
push
fisttpl
and
jecxz
rcrb
cmpb
icebp
cmp
addr16
cmp
pop
push
jmp
and
jecxz
xor
sbb
sub
repnz
dec
jg
adc
cmp
push
out
out
lret
push
fists
pop
call
cmp
fnsave
ss
add
and
insl
ja
and
leave
int3
push
repnz
gs
stos
outsb
or
xor
je
mov
loope
test
jns
das
pusha
mov
pop
push
ret
js
dec
jge
add
rcr
xchg
jae
adc
dec
cwtl
pop
xor
mov
xchg
scas
inc
lods
in
jns
dec
cmp
mov
and
pop
jbe
test
repnz
movsb
jae
test
jmp
cli
jp
dec
inc
dec
adcb
btc
int
or
push
and
daa
out
les
jne
stos
loopne
cmpsb
inc
dec
clc
push
sbb
aas
mov
scas
jg
fs
sub
mov
inc
cmp
xchg
adc
out
push
xchg
xor
inc
mov
push
pop
mov
lods
jg
stc
mov
and
and
ror
lods
sub
mov
or
in
test
lret
stc
mov
push
mov
aas
mov
in
dec
or
jb
repz
popa
pop
cltd
ret
sbb
dec
cs
inc
in
or
cmpsb
popa
aad
and
int
adc
cld
das
fldt
test
in
sbb
fnstcw
pop
bound
mov
lcall
rorb
aam
pop
adc
sahf
or
xor
scas
jo
loop
fimull
bound
insl
incb
scas
or
mov
fstl
inc
xor
mov
jg
jecxz
enter
cmp
add
cmpsb
cmp
dec
loop
lea
test
dec
loop
sbb
pushf
ljmp
push
xchg
add
add
cli
lods
fwait
xchg
movsb
mov
imul
jle
mov
cs
adc
stc
push
add
das
cwtl
rcr
dec
std
sahf
mov
xor
addr16
jno
push
and
arpl
sbb
cmpsl
push
mov
ficompl
xchg
jnp
js
sub
and
push
cmp
cmpsb
jns
xchg
repnz
aas
fucom
aaa
fs
push
pop
xchg
insl
xchg
into
push
push
inc
pop
mov
mov
jp
insl
das
inc
push
lock
fiaddl
push
mov
cwtl
in
roll
mov
mov
inc
test
les
jae
das
repz
mov
cmp
dec
add
rclb
iret
xor
repnz
fldl
xor
jecxz
sbb
xor
idivb
push
pusha
adc
cmp
sbb
jg
test
movsb
gs
testl
xlat
xor
inc
dec
inc
sub
pop
ss
push
adc
pop
fidivl
sahf
pop
mov
fxch
xchg
mov
push
fisttpll
pop
js
in
inc
or
pop
lods
pop
out
xchg
cmp
dec
mov
or
test
xchg
inc
inc
pop
sub
ja
and
mov
xor
popf
movsb
test
test
mov
aas
int3
push
lea
fisubrl
adc
mov
inc
mov
pop
mov
call
out
enter
mov
sbb
mov
inc
inc
xchg
cli
adc
roll
sbb
ss
xchg
gs
and
xor
inc
vrcpps
dec
adc
jp
and
lahf
xor
cwtl
dec
mov
push
aaa
std
sbb
int
push
jbe
subl
popa
or
xor
jp
mov
loopne
mov
mov
fldln2
push
mov
call
jp
inc
fs
cld
pop
in
xor
or
xor
mov
push
push
jp
xchg
or
or
fisubrl
mov
daa
movsl
cmp
or
call
ret
ret
clc
out
in
mov
cmp
mov
in
jns
and
rolb
jo
adc
jecxz
out
cmpsb
out
test
mov
pop
xchg
mov
in
adc
int3
cwtl
inc
dec
xor
push
mov
sahf
gs
imul
dec
mov
pop
mov
sub
clc
inc
and
push
inc
mov
xor
lret
sbb
pop
pop
fdiv
ss
es
mov
mov
mov
mov
jns
insl
stos
leave
sub
hlt
decl
pusha
das
not
call
sub
test
sub
js
shlb
push
punpckhbw
add
iret
and
xchg
or
js
pushf
mov
lret
enter
clc
pushf
bound
mov
test
adc
rorl
or
popa
cmp
sbb
inc
in
repz
dec
das
sarb
pop
aas
mov
stc
rcrb
fsubrl
sbb
out
mov
in
lods
dec
pusha
filds
movsb
cwtl
push
cwtl
sbb
mov
rol
xor
negb
or
mov
jecxz
cmpsb
jno
and
leave
std
and
adc
mov
inc
aas
dec
add
ja
pop
push
in
cmp
mov
es
inc
push
clc
dec
iret
pop
fcomip
cmpl
testl
and
push
jbe
shl
inc
cwtl
int
push
mov
in
adc
add
je
out
sub
std
sahf
lret
mov
in
out
loop
sub
inc
jge
je
mov
fildll
add
cmp
push
sub
xor
push
and
jno
lods
das
adc
adc
andl
pop
sub
movb
daa
sub
xchg
mov
fildl
push
pop
sub
cmp
sti
les
lods
js
inc
les
xor
lea
icebp
pop
cltd
sbb
cmp
mov
call
pop
inc
inc
test
or
jle
and
mov
adc
out
jnp
jb
lahf
test
inc
and
mov
push
and
cmp
cltd
mov
bnd
mov
loop
mov
stos
int
rorb
adc
mov
or
dec
adc
dec
pop
jbe
into
inc
xor
inc
clc
and
and
and
daa
mov
or
loopne
dec
or
shll
or
bt
int3
xor
repnz
sbb
or
pop
mov
scas
jo
test
xor
mov
and
adc
inc
fcmove
jle
add
movsl
push
push
fisttpll
sub
addl
test
jl
ja
cltd
fmuls
fnstenv
push
mov
aaa
scas
xor
mov
ja
ljmp
jmp
adc
dec
pop
aam
sti
push
shrl
pop
lds
jle
push
push
mov
fstpt
add
xor
jno
fwait
out
add
and
jae
outsl
div
push
jnp
fwait
xor
pop
jbe
mov
dec
sbb
sbb
mov
dec
dec
push
arpl
mov
test
out
out
inc
ljmp
je
pop
add
cmp
movsl
inc
shrb
dec
pop
das
inc
shll
loop
or
sbb
test
lock
adcl
sub
nop
mov
add
imul
fsubrl
ljmp
enter
pop
lcall
popf
jmp
pop
movsl
jnp
andb
inc
jecxz
rcrb
dec
sti
mov
pop
bound
adc
ret
jecxz
jae
cltd
js
jl
imul
jb
mov
adc
enter
repnz
out
inc
pop
add
cmp
adc
pop
nop
cs
cmp
add
outsb
cmp
sbb
roll
xchg
daa
adc
mov
sub
and
xor
leave
xchg
sbb
andl
sub
fistps
test
sarb
mov
cmp
adc
mov
fistpll
push
jl
sbb
inc
xchg
int
pop
fsubrs
mov
sbb
je
jnp
pop
push
mov
dec
add
and
stc
push
out
jae
jae
add
call
pop
inc
xchg
ret
nop
roll
fwait
int
jo
ja
shl
ret
cwtl
sub
jae
stc
imul
mov
or
aam
outsb
pop
mov
jno
push
xor
mov
pop
repz
cmp
dec
sub
call
int
pop
repz
lds
divl
out
loop
dec
add
outsb
or
sub
cmp
mov
and
and
repnz
popa
or
pop
pusha
notb
push
cltd
adc
xor
fisttpll
insb
sub
imul
jae
or
leave
mov
xchg
jnp
mov
inc
ss
xor
loop
dec
and
mov
pop
lds
popf
dec
cwtl
mov
pushl
jb
inc
rcrb
loop
xchg
or
out
add
mov
pop
nop
icebp
or
arpl
pop
adc
mov
add
ja
adc
movsl
repz
stos
cmp
sahf
ffree
jp
mov
xor
add
dec
test
cwtl
inc
fcompl
divb
negb
dec
daa
das
sbb
add
xor
adc
push
repz
test
mov
subl
mov
cli
movsb
sahf
testl
mov
and
inc
mov
push
in
sbb
mov
leave
mov
int
outsl
je
mov
push
fwait
mov
mov
call
push
or
inc
or
pop
insl
xor
pop
add
cs
push
inc
aaa
and
movsb
sub
xchg
cmpsl
fwait
adc
icebp
idivb
push
repz
cmp
or
jl
cmp
imul
lock
jns
sahf
divb
stos
sbb
fstps
dec
sub
cwtl
xchg
add
pop
fcoms
sbb
cmpsb
out
inc
outsl
mov
lea
add
add
sbb
fnstsw
inc
je
dec
test
or
ficoml
mov
dec
sbbl
push
icebp
scas
sub
cmp
jb
fiadds
push
daa
lahf
push
and
pop
xchg
jle
sub
or
mov
sar
pop
adc
pop
push
lock
rcrl
mov
push
ficompl
pop
cmp
dec
inc
or
dec
repz
out
sbb
or
or
cwtl
xchg
push
jg
outsl
mov
sub
mov
shrb
sbb
xor
iret
dec
add
fdivs
or
lock
test
fists
mov
cmp
inc
push
js
jle
mov
push
aad
adc
cmpsl
adc
cltd
adcl
mov
xor
jmp
arpl
test
mul
repz
or
or
rcrl
cmp
cli
popa
sub
subb
cwtl
adc
loopne
adc
cmp
das
dec
test
and
imul
fbstp
push
sbb
mov
mov
fidivrs
and
sub
stos
cmp
push
in
xor
adc
inc
or
mov
dec
or
sub
mov
mov
xor
data16
adc
adc
jbe
std
ds
fadd
outsl
in
cmp
adc
cmp
fincstp
cmpsb
add
jmp
mov
fcomp
sub
pusha
jge
out
rol
sub
ret
std
mov
push
sub
out
cmc
jle
imull
jmp
movsb
inc
sarw
into
xchg
daa
and
pop
mov
in
stc
pop
cmp
or
les
and
mov
sub
xchg
inc
mov
gs
push
jecxz
pop
mov
pop
xchg
arpl
pop
ljmp
andl
cmp
and
mov
shll
and
filds
insl
shl
in
fs
je
xchg
cs
sub
xchg
bound
mov
loope
xchg
sysret
fistl
repz
cmp
mov
pop
test
inc
or
cmp
je
inc
lret
sub
xor
inc
sbb
popa
mov
jmp
push
or
mov
pop
fnsave
mov
add
sahf
jg
popf
pop
out
cltd
popa
inc
inc
or
imul
clc
xor
es
movsb
aaa
mov
cmp
jge
dec
sub
imul
or
push
loopne
mov
jmp
ret
mov
gs
repz
lret
cli
mov
jp
mov
jl
pop
in
ljmp
mov
loope
push
or
adc
jle
adc
cld
pop
shl
sub
or
sub
outsb
loopne
inc
and
pop
dec
mov
xor
ljmp
std
insb
push
sbb
nop
iret
out
sbb
jge
loopne
pop
into
and
sub
push
add
or
out
fistpl
xchg
or
add
pop
jns
cmp
push
xchg
loopne
pop
sti
sub
jecxz
mov
jo
mov
and
push
testb
pop
fbstp
xchg
sarb
and
into
sarl
fsub
lods
mov
jbe
and
loop
push
mov
dec
hlt
repz
xor
cmc
xrelease
mov
cmp
mov
mov
rolb
in
xor
xchg
sub
outsb
addb
test
arpl
push
push
enter
loop
mov
inc
mov
cld
dec
cltd
divl
mov
scas
or
gs
fwait
iret
pushf
mov
or
pusha
mov
dec
pusha
add
xchg
pop
dec
dec
pop
mov
adcl
pusha
sar
fcoml
loopne
filds
pop
sbb
loopne
shr
or
sub
daa
test
push
push
xlat
or
pop
mov
jae
insl
loop
movsl
popf
xchg
xchg
aam
mov
adc
or
int
icebp
ja
je
or
leave
xor
ds
rclb
imul
pop
movsb
cmp
push
ret
and
aaa
add
pop
pop
pop
pop
pop
cmp
pop
mov
sbb
rclb
shll
ljmp
movsb
add
xchg
mov
dec
or
ljmp
cmc
lods
mov
sub
leave
sbb
addb
int
in
dec
popa
in
jecxz
push
es
lret
pop
aas
mov
je
lcall
mov
fisttps
jbe,pt
idivl
pop
test
out
in
xor
push
or
ret
pop
cmpsb
and
adc
sahf
or
xchg
lahf
cmpsb
xor
xchg
es
data16
out
push
sti
pushw
shrl
cli
sbb
call
cld
xchg
mov
shrl
dec
jmp
mov
or
std
mov
add
pop
push
sarl
in
cmp
aad
add
jae
mov
adc
jo
inc
pushf
dec
cmpsl
xchg
sub
push
jp
or
add
mov
fs
fcompl
pop
sti
mov
cmp
cmp
mov
jno
out
sti
fnsave
cwtl
loope
cmp
add
movsb
push
test
je
and
sub
adc
pop
je
mov
in
inc
mov
ljmp
xchg
cmp
sbb
cmc
jecxz
mov
dec
xchg
test
mov
xchg
outsl
adcl
cmove
dec
hlt
sqrtps
add
shr
std
scas
add
xchg
pop
and
sub
lock
aam
or
add
mov
cmp
add
cmp
test
adc
std
ds
jle
test
mov
or
rcr
bnd
dec
ret
aaa
insl
jno
dec
mov
xor
jle
sub
loopne
xchg
sbb
mov
xchg
pusha
insl
dec
cltd
push
lds
cs
ret
aaa
mov
adc
jmp
icebp
lcall
cmp
push
imul
lret
inc
movsl
std
jbe
dec
repz
into
push
mov
add
mov
outsb
das
inc
inc
aad
push
je
mov
and
inc
xchg
mov
jecxz
popf
js
bound
push
push
adc
mov
push
sbb
js
int3
xchg
cmp
enter
gs
pop
pop
mov
test
mov
test
out
push
fidivrl
cmpsb
icebp
not
leave
insb
pop
call
cltd
movsb
sbb
pop
leave
frstor
inc
fs
adc
jb
hlt
pop
inc
pop
push
dec
inc
sbb
pushf
pop
add
and
loopne
pusha
int
jbe
inc
shll
fmulp
repz
test
ret
xor
pushf
enter
movsb
cli
dec
inc
in
and
xor
shll
sbb
les
jbe
mov
jg
lods
ret
xor
aas
adc
pushf
jl
add
inc
add
mov
mov
leave
mov
cltd
push
xor
js
jnp
pop
sbb
repz
out
stc
cmp
adc
mov
rcll
bound
scas
pop
mov
int
mov
lcall
stc
cmp
xchg
fwait
push
fs
push
mov
mov
popa
pusha
daa
pop
push
iret
adc
aad
mov
add
cld
push
jnp
xor
cwtl
out
jnp
imul
adc
ss
ret
jmp
push
mov
imul
jmp
mov
sbb
sbb
sbb
out
js
les
cwtl
les
daa
mov
inc
pop
sbb
nop
push
outsb
push
push
pop
or
andl
adc
cmpsb
pusha
ja
outsl
push
popa
aas
int3
dec
pop
popa
addr16
pop
jo
xchg
adc
adc
mov
jl
pop
cs
insl
loope
mov
fnstsw
popa
push
lods
or
into
push
ja
mov
pop
outsl
or
push
data16
sbb
adc
into
cmp
aad
stos
pop
sti
mov
scas
mov
fnstsw
mov
push
std
negl
pop
ret
push
push
adc
shl
cmc
mov
ljmp
movsb
in
jle
xor
repz
push
jo
xor
push
pop
pop
lods
jl
dec
ljmp
sub
and
leave
mov
iret
jecxz
shrl
mov
jno
mov
dec
pop
xchg
lret
xor
stos
es
xchg
mov
push
faddl
scas
loop
sbb
push
mov
loop
add
fadd
mov
fstpl
mov
je
mov
pusha
xchg
clc
sbb
push
jae
lahf
inc
xchg
adc
cmp
cltd
dec
cmp
ret
mov
mov
pop
and
pushf
enter
scas
hlt
cwtl
and
sti
je
or
mov
mov
cs
fimuls
cmp
cmp
pop
fimuls
mov
mov
and
scas
movsl
mov
add
lods
pop
or
es
jb
addr16
xchg
lret
mov
sbb
popf
sbb
mov
loopne
push
movsl
je
mov
notb
jb
adcb
mov
cld
cmpl
data16
jge
mov
fwait
fwait
cmpsb
and
add
push
sbb
test
enter
dec
shl
xor
cmc
cmp
add
jnp
dec
jge
dec
lock
mov
lods
ss
cs
gs
enter
mov
pusha
and
test
push
dec
shrb
xlat
inc
sbb
xchg
fsincos
mov
ret
fisubs
ja
xor
jl
fiadds
fbld
pop
sbb
leave
fdivl
sub
lea
xchg
pop
mov
inc
mov
pop
dec
das
cltd
outsl
test
lret
mov
or
xchg
sub
xor
arpl
sbb
push
cmp
push
xor
pop
fiaddl
outsb
in
jmp
sbb
lcall
int
sbb
pop
mov
dec
xor
xor
loop
lods
push
addr16
mov
mov
and
pop
push
or
jmp
cmpsb
pushf
jge
cmpsb
cmc
xchg
hlt
push
test
stc
iret
nop
testl
dec
inc
cltd
push
inc
jae
dec
in
movsl
jmp
pop
hlt
std
adc
pop
int3
and
lock
ds
lods
pop
sarb
sub
jle
push
rcll
iret
out
xchg
inc
outsb
rcrb
ret
dec
and
push
pushl
inc
xchg
inc
mov
mov
mov
rolb
jne
loop
in
ficoms
repnz
insl
lds
dec
pushf
adc
inc
jae
cmp
jb
std
push
into
andb
mov
out
int3
dec
in
mov
pop
loop
xchg
mov
xor
cmp
inc
cld
or
pop
sub
push
call
arpl
mov
pop
mov
sti
insl
bound
mov
in
ljmp
enter
or
push
pop
push
call
sub
adc
les
shll
push
dec
push
popf
shll
fwait
xor
sub
and
sub
cmp
lret
addb
mov
movsl
dec
dec
mov
leave
sub
inc
push
ret
xchg
jg
aas
or
push
iret
cmp
in
sbb
jb
jbe
testb
push
lcall
mov
jg
fimull
inc
mov
pop
push
out
movsl
mov
pop
outsl
dec
leave
push
clc
loope
shll
dec
cmp
cmp
mov
pop
adc
sbb
popa
mov
or
addr16
imul
insl
dec
cmp
vmovntdq
mov
pop
cs
shrl
aad
jecxz
mov
xor
push
pop
andl
cmp
es
jb
or
mov
arpl
and
push
sub
and
sub
add
stos
mov
pop
xchg
js
imul
dec
push
lods
mov
shrl
int3
inc
add
inc
lahf
mov
outsl
pop
out
pop
sbb
shlb
and
imul
les
sbb
out
dec
movsb
mov
push
jns
mull
xor
cltd
add
lahf
je
faddl
dec
inc
bound
xor
adc
push
xchg
mov
add
dec
mov
mov
xchg
pop
cmpsb
bound
cmpsb
mov
and
inc
cmp
inc
inc
out
pop
pop
dec
jge
stos
test
mov
icebp
xchg
add
or
int
pop
or
imul
iret
cld
clc
push
xor
or
adc
test
sbb
xor
fs
sbbl
enter
and
inc
cmp
cmpsl
jbe
and
fstpt
cmpsl
adc
es
in
pop
lcall
in
out
insb
or
sbb
inc
mov
mov
xchg
ljmp
ret
add
sub
mov
add
lahf
adc
cmp
push
push
pop
xchg
lds
pop
enter
popa
or
mov
adc
daa
push
mov
test
xchg
and
xchg
cmpsl
movsb
fisubrl
or
pushf
mov
ljmp
testl
in
inc
adc
pop
xor
xor
mov
cmp
jle
sbb
push
jle
adc
add
outsb
inc
and
cmc
cmp
insl
outsb
lret
sbb
mov
lock
cmp
je
sub
ja
sbb
mov
push
inc
lcall
cmp
call
jb
xor
into
fldcw
xchg
mov
inc
push
xlat
iret
pop
jmp
jl
in
push
scas
outsl
clc
sbb
xor
mov
hlt
dec
stos
sub
inc
lods
pop
in
cli
jmp
xor
sbb
fmull
or
xor
icebp
daa
js
jmp
jbe
jb
arpl
dec
cmp
rcrb
mov
sub
pop
bound
pusha
xchg
adc
jb
mov
jno
sbb
out
mov
jge
push
scas
jecxz
xchg
dec
mov
add
cmp
add
push
repz
push
xchg
lret
add
lcall
ds
jge
cmp
aam
cmc
add
rcrl
sub
cli
roll
fsubr
sahf
adc
push
loop
pop
mov
loop
ficoml
mov
ljmp
mov
popf
popa
xchg
push
xor
mov
cld
jmp
dec
gs
bound
movsl
pop
adc
bound
cltd
or
cmp
movb
insb
adc
out
iret
lcall
leave
leave
cmp
aam
dec
dec
aad
sub
fwait
adc
jmp
in
xchg
leave
icebp
leave
in
push
sti
stc
stos
add
lds
mov
andl
fiaddl
sbbb
frstor
dec
dec
rolb
push
out
lods
xor
sbb
cmc
fucomip
mov
cmc
mov
mov
rorb
mov
sarl
push
jo
enter
test
adc
pop
and
leave
fldt
adc
int3
fildll
ss
in
push
push
rcrb
sub
aas
jp
dec
rcrb
cli
adc
mov
sysenter
les
into
xor
fwait
cld
das
ja
xchg
or
in
test
sub
nop
std
xor
xchg
or
mov
icebp
icebp
lret
dec
sahf
fiadds
xor
arpl
js
mov
in
cmp
ljmp
mov
scas
in
fistpl
inc
bound
sbb
xchg
sub
pop
inc
adc
inc
movsl
es
fcomip
dec
xor
imul
jg
jl
sub
and
xchg
out
fstl
pop
loop
cld
daa
and
test
push
cwtl
out
dec
cltd
or
sub
push
lret
out
sub
mov
cs
lds
fcoms
add
sbb
jae
andb
cmp
adc
add
test
jb
leave
dec
push
add
and
jp
out
or
push
sub
xor
cmp
in
ds
push
mov
push
or
jb
sbb
jne
xor
adc
inc
sti
lret
adcl
lock
cwtl
add
enter
inc
addr16
std
or
sub
pop
pop
cmp
sub
scas
addb
push
out
push
xlat
sbb
push
out
cmp
mov
push
xchg
faddl
inc
faddl
sub
sub
ret
cwtl
lahf
and
sbb
ret
jecxz
ja
mov
sahf
loop
mov
cmp
call
pop
mov
lcall
xchg
imul
cwtl
xor
mov
mov
xlat
lods
int
mov
test
das
arpl
sub
lock
sbb
dec
pop
repnz
sub
adc
insl
int
out
xchg
push
adc
sub
xchg
dec
add
mov
dec
cmp
adc
sbb
leave
jmp
or
and
xor
mov
outsb
cmpsl
sbb
popa
bound
inc
or
mov
jp
mov
je
dec
xchg
inc
pusha
mov
inc
subb
add
hlt
sub
je
jg
push
dec
push
dec
in
mov
cmp
fists
pop
fs
mov
loopne
mov
mov
lahf
and
dec
lahf
mov
jmp
ret
push
fdivr
mov
sub
bound
xchg
dec
inc
mov
lcall
xorl
iret
inc
xchg
fmuls
jge
ss
xor
mov
pop
call
inc
fcmovne
dec
out
lods
or
ds
mov
outsb
inc
push
cmpsl
add
add
je
inc
xor
lret
cs
mov
aas
call
xchg
and
leave
push
cmp
lock
test
icebp
cltd
out
mov
inc
in
add
jno
stc
sbb
repz
jg
std
addw
es
aam
mov
mov
leave
push
shl
cmp
cmp
add
add
add
and
lret
gs
frstor
sti
mov
bound
mov
pop
mov
inc
adc
sbb
imul
mov
and
and
jge
icebp
adc
lock
stc
shll
sbb
jo
stos
test
lods
daa
or
cwtl
cli
lret
out
aas
add
ret
stos
add
sbb
inc
xchg
mov
jae
jbe
sub
cmp
insb
sbb
shl
mov
adc
xor
and
loop
pop
test
fcmovnu
repz
pop
roll
out
test
mov
push
lahf
mov
or
mov
mov
mov
orl
stc
into
jbe
cwtl
adc
call
jecxz
jge
cmp
pop
cmpsl
aaa
inc
test
popa
and
and
mov
lds
adc
shll
push
mov
insl
pop
add
jae
push
mov
cld
pop
add
xchg
sbb
fldenv
rorb
clc
sar
jp
stos
xor
test
mov
push
cs
lods
sub
cmpsb
push
shrl
faddl
test
and
sub
fnstenv
jp
push
and
pop
xor
mov
mov
mov
push
xchg
mov
dec
shrl
sbb
jp
cltd
subb
or
mov
push
shlb
ja
pop
out
or
dec
add
jne
gs
mov
push
push
and
inc
or
cmp
mov
test
adc
mov
jns
jge
int
sbb
test
or
aad
mov
int3
pop
jne
inc
leave
or
sti
lret
mov
stc
jae
mov
mov
pusha
sub
dec
push
or
scas
mov
mov
inc
jo
imul
mov
std
shrb
push
mov
sub
mov
into
ficoml
sbb
cmp
push
es
push
test
mov
in
lods
fidivl
or
jle
push
lds
aam
dec
repz
aad
nop
dec
lds
ror
pop
jb
inc
pop
mov
jecxz
mov
adc
and
das
sbb
mov
rorb
mov
fiadds
sbb
movsl
jmp
dec
pop
aaa
out
je
adc
jns
call
stc
sub
in
push
xchg
popa
lock
ret
xchg
aas
xor
std
xchg
fiaddl
jae
sub
mov
adc
cwtl
adc
jns
mov
in
xchg
add
frstor
sbb
popf
outsb
fdivl
aad
push
cmp
fstl
jnp
jno
inc
adc
and
popf
xlat
mov
test
sbb
mov
sbb
loope
in
stos
jne
cmp
pop
inc
fsubl
enter
sub
cmp
shl
sbb
xor
insb
daa
aaa
jbe
popa
int3
ret
dec
je
in
and
dec
lret
lods
pop
mov
and
dec
out
pop
add
cmp
fidivrs
mov
add
pop
lahf
push
xchg
inc
add
jp
adc
int
stc
addr16
gs
cmp
pop
or
xor
das
push
inc
inc
and
pop
dec
fildl
dec
clc
push
and
dec
fxam
insb
mov
sub
and
push
xchg
push
dec
inc
adc
std
sub
mov
sub
mov
xchg
mov
popl
adc
push
out
daa
push
lahf
dec
js
mov
xor
je
mov
cmp
iret
lods
add
and
inc
out
sbbb
inc
inc
push
add
jo
cmp
push
mov
jl
and
dec
push
out
dec
hlt
repz
out
sbb
gs
fsubs
lods
mov
jmp
adcb
inc
sub
pusha
iret
daa
xor
jns
fadds
mov
fisttpll
out
dec
mov
xchg
fdiv
and
sub
mov
mov
mov
mov
mov
scas
test
stc
or
xchg
sbb
adc
loope
jns
adcb
hlt
dec
cltd
repz
sub
les
sbbb
hlt
test
cmp
fnstsw
mov
jbe
xchg
cwtl
loopne
jp
roll
sub
cld
xchg
mov
jge
xchg
leave
cmp
push
sub
data16
fcmovnbe
pop
mov
ds
outsl
xchg
add
jecxz
add
or
jae
xor
decb
mov
popf
mov
mov
dec
dec
xchg
pop
imul
sbb
lock
pop
dec
sub
sub
fisttpl
and
sub
gs
xor
out
jne
sub
and
popa
pusha
dec
into
flds
inc
or
lea
push
sbb
xchg
in
outsl
je
jmp
adc
lcall
pop
mov
push
mov
dec
icebp
inc
mov
mov
jl
adc
and
rolb
xchg
or
aam
mov
sbb
adc
mov
xchg
cwtl
mov
imulb
mov
adc
fdivs
and
cmp
dec
mov
and
pusha
jge
and
sarl
inc
sbb
lahf
js
test
jmp
mov
push
inc
xor
xchg
add
mov
add
or
cmp
cmpsb
mov
rcrl
inc
jnp
push
rcll
push
jecxz
adc
or
cmc
das
add
std
int3
fidivrs
push
mov
adc
stos
cs
add
rcr
dec
sub
sub
jg
dec
xor
test
mov
test
dec
mov
and
ficoml
inc
adc
out
mov
and
lods
inc
stos
jb
cli
push
movsb
call
push
je
jg
mov
shll
pusha
jmp
addr16
gs
mov
inc
aas
and
lahf
jb
icebp
rcrb
jmp
leave
pop
jbe
jle
adc
bound
out
mov
imul
rcll
dec
push
rclb
bound
lcall
push
les
cmp
and
add
dec
iret
iret
clc
sbb
stos
xor
mov
jae
out
test
xchg
out
lret
jmp
dec
aaa
add
test
hlt
and
jle
push
xchg
ret
icebp
movsl
sbb
adc
dec
jbe
dec
push
mov
xchg
push
sbb
movsl
jl
leave
ficompl
imul
xlat
inc
jl
je
xor
pop
outsl
js
or
inc
or
shrb
mov
fs
pusha
push
out
mov
data16
std
mov
dec
sbb
mov
lea
fwait
jae
sub
pop
fs
and
rcll
mov
sub
shr
cmp
jp
add
cwtl
xlat
repnz
rolb
jge
es
push
push
xor
je
rcr
out
cld
sub
shr
popf
ret
testb
lods
fidivrs
or
or
fildll
jecxz
mov
lcall
shr
ficompl
xchg
cltd
and
call
xor
ret
xchg
lret
adc
leave
jge
xchg
mov
rol
mov
rorb
out
add
in
arpl
lods
mov
fadds
add
repnz
pop
and
repnz
in
mov
mov
pop
mov
fwait
pop
cwtl
dec
shrl
pusha
cmpsb
xor
adc
dec
push
and
adc
hlt
scas
jae
sahf
jg
jge
mov
jne
sbb
sar
stos
dec
sbb
cltd
xchg
or
mov
sahf
sub
movsb
in
scas
dec
xchg
idivb
movsb
dec
jmp
mov
push
adc
add
sub
pop
xchg
fwait
inc
xor
pop
mov
enter
mov
aam
xchg
xor
mulb
adc
xchg
sbb
dec
sbb
jecxz
sbb
mov
out
in
mov
mov
fiaddl
loope
jnp
out
ljmp
pusha
jb
in
pop
sbb
fld
xchg
jns
scas
shll
pop
mov
rol
adc
dec
insl
stc
add
xchg
popa
cltd
or
cmp
pushf
mov
sbb
ret
mov
arpl
add
in
pop
lret
push
stc
ror
shlb
scas
mov
adc
mov
cmp
daa
mov
jnp
mov
xchg
jnp
in
aaa
cmp
cs
mov
icebp
xchg
rcll
and
flds
popf
enter
xchg
stc
inc
and
push
push
pop
pop
jae
ret
pop
mov
xchg
and
loope
aam
test
mov
sbb
sub
lret
pop
push
cmpb
or
testb
xchg
xor
popa
shrl
sbb
mov
bound
add
aad
jecxz
push
xchg
mov
xlat
mov
dec
out
dec
loope
push
enter
fisttps
inc
loop
mov
inc
xor
xchg
outsb
mov
aad
dec
ret
xlat
sub
hlt
cmp
adc
mov
push
push
addr16
ret
add
mov
or
test
sbb
mov
pop
mov
fwait
push
lret
ja
sbb
lahf
sbb
mov
jae
sub
fucomp
pop
cmc
dec
xchg
xchg
add
sti
jecxz
shlb
xchg
xor
sbb
pop
das
mov
dec
mov
and
mov
jl
cmp
mov
icebp
add
cmp
ds
inc
sbb
addr16
push
rcrl
divb
js
lea
push
mov
lcall
pop
push
fnstenv
add
sti
dec
push
sti
xor
roll
rcrl
jge
clc
out
sub
cmp
cmp
into
sub
aad
mov
bound
push
out
xor
push
or
and
mov
out
sbb
or
pop
sub
and
fisttpll
sub
push
dec
ja
push
sbb
sbb
push
pop
scas
inc
mov
enter
mov
jns
jo
lods
jne
scas
aas
outsb
mov
jns
call
xchg
sbb
pop
mov
mov
sbb
lret
xchg
mov
test
fcomps
push
pop
inc
or
fincstp
jo
out
add
sbb
push
inc
dec
xchg
ficoml
pop
loopne
pop
pop
pop
clc
jne
clc
dec
fwait
bound
data16
cmp
repz
in
nop
and
and
or
xchg
jo
cmp
jno
jecxz
mov
clc
mov
mull
cmpsl
icebp
call
add
mov
mov
xor
mov
xlat
cmp
aad
xchg
pop
inc
aam
lahf
dec
loop
inc
add
data16
mov
es
fstpl
sahf
xor
sbb
push
mov
adc
inc
rcrb
inc
or
movsl
mov
jno
lods
push
jnp
mov
ja
enter
addr16
xlat
cmpsl
mov
xchg
sbb
enter
dec
xchg
inc
or
push
mov
test
xor
cmp
mov
ds
daa
fs
cld
fdivrl
lock
push
sbb
pop
dec
sbb
jecxz
and
mov
std
dec
aas
mov
aad
or
test
sub
xchg
hlt
dec
arpl
cmc
jb
sub
cmpsl
xchg
outsl
xor
aaa
pusha
divb
mov
sub
scas
flds
stos
lret
imul
icebp
negb
shlb
stc
fldl
popf
cmc
pop
out
add
rclb
dec
xor
sahf
shrb
ret
cvttps2pi
ret
lcall
dec
and
jnp
cmp
xchg
adc
call
out
cmp
mov
jl
out
das
xchg
push
mov
jle
pop
test
xlat
hlt
imul
bound
mov
dec
testl
sub
scas
scas
add
sub
pop
outsb
push
negb
dec
cmp
cld
rcrl
lcall
mov
shr
and
in
push
jnp
adc
ret
bound
mov
scas
rcr
mov
mov
fstp
jno
dec
ret
xchg
jmp
stc
push
push
inc
pop
inc
in
shl
mov
mov
iret
aad
or
lods
inc
xchg
mov
push
fldenv
jl
xchg
dec
xor
fcomi
push
and
add
sbb
lods
adc
pusha
in
pusha
int
lret
addr16
mov
fcompl
ret
cmp
and
push
orl
enter
stos
iret
cmp
jp
xchg
rorb
sub
es
fcomps
push
imul
mov
inc
clc
sub
adc
insb
lods
xchg
sbb
adc
jno
mov
out
jo
xchg
pushf
push
pop
add
mov
jmp
or
pop
arpl
xor
lods
movsb
movsl
addl
dec
sti
test
inc
dec
sub
popa
sbb
sarl
leave
ljmp
lcall
push
dec
gs
sarl
int3
inc
in
and
sbb
cs
repnz
enter
push
jl
pusha
sub
outsl
sbb
shl
and
psrlq
addr16
add
shll
dec
test
lcall
pop
adc
or
fwait
cmpsl
pop
mov
xchg
sub
loopne
in
scas
or
and
aas
mov
jne
jno
aas
xor
sub
pop
cltd
sarl
stc
adc
cmp
sbb
xchg
sti
sbb
loopne
mov
adc
mov
mov
nop
adc
into
ja
bound
shlb
add
fidivs
enter
xchg
leave
pop
lds
out
dec
adc
adcb
lea
out
adc
and
sahf
test
adc
loop
inc
cmp
testl
scas
push
pop
test
adc
aas
std
ds
fnstsw
add
jl
adc
ja
clc
and
andl
notb
dec
or
inc
mov
mov
cmpsb
test
xchg
xchg
mov
insl
push
ds
das
sti
test
loop
fnstsw
fistl
xor
xchg
enter
out
jns
push
lret
mul
jae
inc
hlt
sbb
pop
out
loopne
or
inc
pop
mov
fistl
icebp
push
dec
inc
add
sbb
shrb
mov
xchg
fiadds
adcb
in
sub
jno
xlat
mov
xchg
bound
dec
add
sub
loopne
into
nop
and
stc
mov
mov
cltd
mov
xor
adc
test
cwtl
std
push
jl
and
xchg
mov
fcom
lahf
outsb
cmp
inc
xchg
into
adc
jmp
mov
gs
ret
and
into
sub
dec
inc
js
js
xor
in
dec
xor
jae
stos
jno
xchg
lods
pop
test
scas
mov
repnz
pusha
and
ja
mov
jno
repz
mov
cld
fmuls
fdivr
test
xor
cmpsl
sub
cs
push
mov
push
in
cs
rorl
test
scas
je
inc
adc
out
push
mov
pop
sub
sbb
cld
mov
int3
add
mov
or
aas
fldcw
cld
test
mull
cltd
ds
xchg
mov
stos
add
int3
xchg
inc
popa
subl
cmpsb
icebp
fmuls
mov
adc
fcomip
mov
fstl
mov
jmp
adc
data16
mov
xchg
add
or
movsl
fcomi
cmpsb
sahf
sub
fwait
cs
push
dec
pop
mov
loopne
sub
test
arpl
jg
into
mov
adcb
mov
adcb
inc
call
aas
scas
xchg
test
orl
cmp
iret
xchg
xor
inc
sti
adc
test
idiv
dec
jmp
aas
fisttpll
sbb
flds
fwait
divb
mov
inc
aaa
insl
fcmovbe
ret
cmp
pop
shlb
jno
lcall
add
jbe
xchg
mov
imul
orb
mov
repnz
jno
stos
in
jp
pushf
mov
fidivs
rolb
add
or
cmp
jp
jb
dec
movsl
jns
shll
test
mov
aad
mov
in
sub
addl
pop
aad
cmpsl
out
pop
loope
xor
and
ret
loop
js
ror
jno
cmp
and
jo
pop
sbb
xchg
jns
out
movsb
cmpsl
adc
test
push
xor
test
xchg
loopne
nop
pop
add
add
out
pop
sub
data16
sbb
rolb
jp
sub
and
adc
out
add
push
movb
inc
insb
mov
ret
cmp
inc
mov
orl
mov
mov
jbe
nop
and
fidivs
jg
cwtl
lock
adc
mov
cs
push
mull
and
sti
push
xchg
int
jo
lcall
lods
cmp
or
sbb
mov
inc
pop
enter
mov
sbb
cmp
xor
push
jo
push
cmc
fiaddl
test
inc
push
filds
enter
adc
jns
sub
dec
jge
imul
das
mov
xchg
sti
outsb
negl
xchg
fdivs
xor
push
or
xchg
xlat
jb
add
popa
hlt
jl
sbb
push
mul
bound
jb,pt
into
or
scas
bound
lcall
mov
daa
inc
sarl
test
mov
fstpl
push
cli
dec
lods
push
cmp
push
js
ret
dec
adc
inc
adcl
xchg
mov
mov
adc
push
ret
enter
sbb
iret
pop
mov
jo
jecxz,pn
dec
fldl
jl
adcb
sub
pop
fdivrs
xchg
int3
int3
ret
xchg
cld
stc
loope
dec
scas
add
xor
sbb
xchg
sahf
jp
mov
mov
push
cmp
enter
jo
fdivr
xor
fidivs
mov
ud2
mov
pop
stos
sub
subb
sbb
pop
loope
pop
lahf
and
icebp
ret
adc
and
aam
test
xor
push
out
xor
xor
sbb
and
xor
rcll
es
subb
push
enter
push
pop
sub
stos
ds
push
xchg
outsb
inc
dec
pop
clc
outsb
sub
aam
je
cld
mov
iret
cltd
jecxz
mov
iret
mov
or
mov
in
xor
popf
sub
je
dec
out
int
cli
js
ror
push
hlt
fadds
jo
pop
iret
mov
in
jnp
jno
fwait
push
mov
in
inc
mov
cs
sbb
test
mov
sbb
movsl
and
push
pop
inc
ret
sahf
dec
lock
notb
aas
call
lock
add
sub
push
les
jl
adc
stos
ja
xor
imul
push
xchg
adc
mov
jp
cmp
cmc
xor
sub
jmp
and
mov
jl
inc
dec
fstl
aam
pushf
inc
call
adc
out
dec
sbb
mov
xor
lahf
push
sub
or
daa
repz
and
iret
outsl
cmpsb
and
in
insb
and
rcll
jo
pop
mov
dec
cmp
outsl
xor
sub
ljmp
dec
jge
adc
inc
lfs
pop
inc
jo
sbb
fstl
mov
orb
cwtl
aad
push
subb
dec
mov
add
mov
loop
sahf
fisubrl
out
int
cmp
jo
fs
aam
out
mov
and
push
pop
sbb
lret
pop
push
sub
push
pop
sub
pushf
push
repz
pop
jae
jge
dec
lds
adc
inc
fwait
ja
or
cmc
sbb
dec
xor
and
mov
mov
cld
mov
addb
test
jle
shr
loope
ja
loopne
int3
insb
xchg
sbb
mov
sbb
dec
sbb
ret
stc
mov
fdivrs
adc
mov
shl
fcompl
stos
xor
jge
or
in
test
rorb
std
ss
push
add
negb
cmp
pop
pop
scas
scas
orb
dec
cmp
jne
adc
repz
les
adc
cwtl
psadbw
movsl
cmp
das
shrl
and
test
and
dec
in
std
stos
or
punpckhdq
orb
imull
loopne
fs
dec
mov
stos
call
ljmp
mov
sub
mov
push
leave
mov
clc
or
xchg
and
or
and
jecxz
dec
sarl
pushf
inc
fcoms
cs
fwait
adc
inc
aas
push
push
jbe
xor
orb
pop
xor
push
sub
mov
ds
mov
daa
or
push
add
pop
mov
add
and
pop
test
dec
jl
push
mov
add
int
sbb
dec
imulb
enter
pusha
sbb
dec
test
mov
je
jns
faddp
xor
mov
fldenv
ret
pop
sbb
stc
aas
pop
pusha
or
add
dec
dec
cmp
call
cmp
inc
cmp
sbb
rcr
in
mov
pop
mov
ljmp
fstl
movsl
xchg
jnp
fmull
iret
xorb
gs
xchg
loopne
jbe
mov
mov
xchg
popa
fistpl
out
int
pop
gs
mov
out
inc
sub
add
js
vminps
mov
dec
popf
push
insl
in
cmp
xchg
or
outsl
lret
mov
push
sbb
cmpsb
ds
inc
dec
mov
mov
cli
cld
aam
arpl
and
cmp
jne
mov
jne
lods
sbb
lods
xor
dec
lds
xchg
mov
xchg
mov
mov
addr16
pop
push
je
xchg
movsl
stos
out
mov
mov
addb
fildl
sub
cmpb
lods
xchg
mov
or
lret
xchg
pop
pop
dec
mov
adc
and
mov
outsl
push
insb
and
xchg
lods
fnstenv
mov
jae
shlb
jno
mov
mov
jle
sbb
pushf
outsl
adc
int3
and
adc
xor
lret
xor
in
mov
test
aad
xchg
sub
sbb
out
fs
inc
lock
data16
das
movsb
xchg
and
into
in
lock
jno
insb
pop
imul
mov
insb
iret
or
jp
fdivr
enter
ds
and
xchg
nop
and
incb
and
sti
pop
mov
pop
jg
popa
jns
xor
mov
lret
jp
jnp
and
inc
inc
adc
mov
lret
pushf
pop
sti
into
jo
pop
jns
in
jo
or
fwait
nop
shrl
mov
xor
push
clc
jbe
adc
lds
inc
mov
es
or
data16
imul
xor
ja
jbe
bound
out
fdivrl
sbb
dec
jae
add
idiv
sbb
popf
jp
gs
sub
hlt
mov
mov
and
test
mov
cld
and
outsb
push
lret
mov
lds
jp
pop
jbe
fsts
dec
sub
pusha
rcrb
pop
sbb
add
repz
and
insl
rcrb
pop
pop
sub
lcall
jns
pop
jno
jg
das
lret
test
popa
add
xchg
dec
push
and
push
cmp
add
aaa
scas
dec
adc
dec
dec
sub
inc
sbb
loope
mov
stos
movsl
pop
push
divb
inc
mov
les
jo
lods
jnp
pushf
aam
outsb
xchg
cld
daa
scas
pop
js
cltd
and
add
lods
push
pop
and
mov
out
or
mov
mov
in
pop
jno
popa
xchg
xchg
daa
sbbb
fsubrl
mov
pop
loop
mov
mov
clc
xchg
lock
testb
stc
movsb
jnp
pushf
adc
pop
cmp
push
fldcw
xchg
js
js
push
mov
cld
inc
nop
testb
jecxz
fs
out
inc
aam
add
cmp
hlt
jmp
cmpsl
imulb
cmpsl
or
sbb
xchg
out
xlat
xchg
xor
fisubrs
fwait
lea
lods
add
repnz
clc
out
dec
inc
and
sub
gs
inc
mov
movsb
cmp
stc
cli
pop
stos
ds
mov
sub
inc
hlt
dec
jns
lret
je
shlb
push
loope
jae
aaa
lods
hlt
dec
icebp
mov
mov
sbb
mov
int3
movsl
outsb
mov
fwait
scas
mov
sub
test
stos
cmp
xor
xchg
or
mov
cwtl
mov
dec
mov
test
or
jns
jne
bound
mov
in
ret
cltd
shr
in
adc
std
sbb
mov
nop
and
imul
fs
mov
or
sub
int
pop
mov
push
cwtl
mov
pusha
rolb
mov
cmp
sub
les
adc
int3
scas
pop
mov
xchg
sti
fucomip
dec
dec
fwait
xlat
mov
sub
jno
icebp
xchg
dec
cmp
push
mov
xchg
pop
out
stos
mov
jns
mov
push
mov
jo
xorl
mov
adc
notb
pop
int3
sbb
sarl
clc
and
jbe
sub
outsb
shll
dec
mov
fimuls
pop
dec
loopne
movsb
enter
push
mov
jmp
decl
fmull
outsl
push
mov
add
int3
lods
icebp
repz
push
fisubrs
or
sahf
add
aas
daa
repz
out
fs
fwait
xchg
mov
push
or
inc
push
add
push
popa
dec
mov
cmp
xchg
in
jle
push
mov
sbb
movsl
xchg
mov
mov
cld
int
push
sub
aam
xchg
in
movsb
jmp
lret
mov
pop
data16
push
or
inc
cs
push
xchg
mov
test
push
sti
int3
xchg
sbb
or
cmp
ljmp
xor
inc
mov
pop
xchg
fsubr
std
sub
push
fwait
out
push
cwtl
inc
popf
mov
pop
test
int
mov
sbb
push
jmp
inc
inc
pop
imul
pop
fisubl
decb
roll
mov
andb
lea
std
daa
es
rcrl
mov
loopne
js
lret
xor
jmp
shlb
aad
push
movsl
or
mov
jne
or
mov
jecxz
jne
in
mov
push
sahf
je
test
dec
addr16
mov
mov
dec
pop
inc
out
sub
stc
shll
leave
out
pop
and
mov
mov
icebp
aaa
xchg
sbb
xchg
sbb
lds
mov
popa
rorl
and
in
mov
add
push
sbb
push
cmpsb
pop
lcall
popa
sub
pushf
mov
mov
mov
addr16
adc
mov
mov
push
int3
into
adc
cmp
pop
pop
lock
insl
ljmp
add
adc
sbb
adc
imul
int3
call
jo
shlb
mov
dec
add
insb
push
mov
daa
push
push
xchg
ljmp
dec
sbb
cmc
or
mov
adcl
pop
or
pushf
gs
std
nop
into
push
adc
add
je
xchg
mov
mov
cmp
mov
rclb
popf
pop
or
outsb
xchg
repz
out
sub
fs
loopne
or
push
or
mov
push
icebp
jecxz
inc
jp
mov
adcl
je
pop
mov
hlt
cwtl
pop
scas
sub
pop
inc
leave
jmp
scas
add
sbb
ret
add
inc
test
testb
aaa
add
cmp
pop
and
or
loopne
mov
push
push
sbb
or
mov
xlat
sub
xor
adc
mov
xlat
aaa
in
push
pop
dec
dec
pop
sti
in
sbb
lret
mov
mov
repnz
popf
jns
lcall
test
jno
dec
dec
and
mov
xchg
movsl
fldenv
stc
cmp
mov
sbb
dec
sarb
cmpsb
mov
scas
cltd
mov
pop
adc
xchg
leave
stc
rorl
cmp
mov
je
mov
pop
push
add
sbb
xchg
xchg
loop
jae
mov
enter
dec
jns
pop
subb
push
fldt
stc
das
out
jo
mov
mov
fcmovnu
imulb
xchg
cld
push
sti
fisttps
fdivrs
out
cmc
add
xlat
popf
pop
xchg
xorb
jb
or
jnp
dec
movsb
pop
movl
fidivl
sub
cmp
lock
cwtl
xchg
es
scas
inc
mov
mov
popf
jl
xchg
cmp
in
call
js
jge
lret
out
loope
mov
lea
xchg
jns,pt
inc
mov
inc
hlt
outsl
ret
dec
xchg
inc
and
cmovns
loop
jle
lret
mov
xchg
and
add
jecxz
and
les
ret
mov
sahf
int
inc
inc
push
sub
pushf
jl
sub
cld
cld
and
fldt
icebp
out
jmp
test
mov
cmc
jecxz
dec
sbb
sub
inc
pop
pop
jns
rcrb
inc
lahf
test
mov
fisubrs
shr
int3
mov
cmc
jae
in
cmp
jne
imul
in
lret
fsubs
push
jne
xor
adc
iret
fstps
fistpl
inc
fwait
add
sbb
movsb
in
mov
mov
icebp
sti
lods
test
pushf
cmp
pop
aas
inc
adc
push
xchg
cmp
test
js,pt
dec
xlat
subl
xchg
ror
mov
mov
push
jae
cli
aam
dec
mov
cmp
adc
pop
movsl
or
push
add
pop
add
dec
inc
lcall
ret
jae
cli
push
push
loop
cmp
pop
fists
fcmovb
dec
addr16
adcl
pop
mov
adc
hlt
mov
xor
cmpsb
out
nop
xchg
lods
pop
loope
mov
stos
mov
pushl
inc
fnstsw
out
cmp
stos
leave
fidivl
cmp
jg
and
orl
js
jmp
xor
scas
loop
mov
jne
sub
inc
sarl
cmc
cld
fidivl
sbb
push
xchg
sub
dec
testb
xor
nop
leave
inc
cltd
mov
pop
loop
imul
aam
mov
lods
or
and
push
dec
xchg
test
push
dec
sar
jne
test
xchg
test
xor
push
stos
jg
mov
fdivrp
testl
or
adc
sbb
popf
test
mov
xor
outsb
js
into
push
jo
cld
or
movsl
std
test
mov
xlat
cmp
addr16
xchg
xor
sub
bound
ljmp
gs
lahf
shrb
sarb
rorl
sbb
sti
and
fnsave
mov
imul
sbb
shl
sbb
iret
fdivl
in
insl
inc
cmp
ficomps
add
ret
sub
ss
mov
inc
outsl
shl
and
xor
add
sbb
es
inc
mov
and
xor
inc
cmp
mov
iret
cmp
jge
inc
jg
pop
les
lcall
mov
or
out
push
hlt
push
imul
jnp
or
cmpsl
mov
outsl
es
push
cmp
stos
das
arpl
xchg
loopne
fninit
pop
mov
cs
xchg
push
cld
xor
sbb
sub
mov
nop
cli
pop
lret
sub
jns
or
cmp
loopne
or
pop
cmpb
daa
data16
mov
std
in
lea
xchg
mov
jo
mov
test
sub
mov
jmp
adc
or
aad
pusha
push
cwtl
loopne
xlat
dec
test
clc
cwtl
xchg
cmp
cmp
push
jmp
inc
ret
sub
sub
add
ds
and
add
xor
shlb
fdivrl
ds
push
mov
lahf
dec
cmp
ds
andl
fwait
or
loope
jne
cmpsb
xchg
xchg
push
xchg
xchg
ds
inc
inc
or
mov
insb
xorb
cmp
pop
data16
sti
mov
arpl
jmp
cmpsb
aam
pop
cmp
mov
cmp
sub
mov
stc
mov
cmp
adc
or
push
cmp
aaa
xor
repnz
scas
add
imul
pop
imul
mov
xchg
shll
add
in
cmpsb
bound
popf
mov
mov
sub
jp
or
mov
add
mov
xchg
imul
inc
insb
mov
lahf
rorb
push
je
lock
add
or
aam
out
jl
dec
or
sub
or
aam
mov
or
pop
push
int
jb
jae
arpl
mov
jb
mov
lds
insb
addl
mov
mov
int
inc
xor
test
mov
aad
and
xchg
xchg
or
cs
push
mov
cmpsb
mov
inc
add
sbb
lods
je
fcomps
fs
loope
aad
rcr
clc
lock
add
xchg
test
pop
mov
std
outsb
cmp
loope
jae
sbb
pusha
loopne
add
mov
lock
test
adc
jno
jnp
pop
sub
add
fcoms
xchg
pop
repz
add
call
shrb
punpckldq
rol
int
mov
and
xor
mov
insl
and
and
xchg
iret
dec
or
and
jb
mov
sbb
mov
adc
pop
lock
fisubs
jne
inc
inc
mov
out
in
aam
sbb
dec
xchg
std
adc
ljmp
push
stc
push
mov
xchg
adc
incl
adcl
bswap
idivl
and
dec
and
leave
lock
pop
xchg
loope
int3
std
hlt
pop
mov
pop
std
pop
xchg
out
add
sbbb
fdivp
ja
subl
jae
cmp
lea
lcall
bound
imull
scas
iret
negl
and
cmp
adcl
daa
or
in
sbb
and
xchg
push
and
ljmp
fwait
adc
inc
popf
lea
push
outsb
sbb
mov
push
mov
xor
adc
mov
mov
jo
aaa
push
aad
aam
fstl
jle
inc
fisttps
std
jns
sub
hlt
sarl
push
mov
and
mov
cli
xor
cmp
es
in
mov
and
lcall
and
add
adc
call
mov
mov
test
jg
jo
out
xor
leave
int3
xor
enter
ja
pslld
fisttps
pop
jmp
mov
int
into
rol
dec
arpl
dec
push
jecxz
lret
mov
lahf
or
rorl
jl
add
repnz
popf
xor
xchg
add
mov
or
sub
xchg
cmp
cmp
outsb
jbe
mov
mov
mov
ds
lds
jmp
add
push
ds
add
lock
xchg
add
xor
kmovw
dec
outsb
jp
fdivrl
and
cmp
sbb
fnsave
gs
fstpt
mov
test
mov
mov
and
inc
mov
out
test
ds
inc
inc
push
pop
add
lcall
imull
fdivs
les
jmp
loop
adc
subl
fcoml
out
popf
cmp
xchg
xlat
sbb
arpl
loopne
dec
in
pushf
push
pop
xchg
into
cli
pop
cmp
push
xchg
xchg
and
dec
push
lock
das
cmp
sub
and
arpl
popa
pop
hlt
mov
insb
push
pop
dec
fwait
jle
out
inc
mov
in
pop
mov
add
dec
test
mov
pop
mov
sub
enter
dec
cltd
mov
sarb
add
loope
cmpsb
xchg
movaps
cmp
pop
cwtl
pushf
punpckhwd
jo
dec
cmc
mov
mov
mov
popf
repnz
aaa
movsb
pop
leave
popa
mov
sbb
add
mov
stc
jle
dec
sbb
pop
mov
fdivs
pop
sub
xor
and
hlt
mov
shrl
mov
into
lret
sar
nop
ljmp
jmp
outsl
lock
out
lcall
mov
mov
xchg
in
outsl
adc
lds
pushf
or
push
adc
out
fwait
pop
xchg
jecxz
xchg
arpl
fstl
adcb
add
sbb
add
clc
cltd
dec
out
add
mov
xor
pop
test
shlb
nop
pop
xor
add
test
adc
mov
push
mov
mov
jl
loop
iret
je
lods
dec
popa
jg
jae
inc
fdivl
fdivl
sub
jmp
fsubl
js
jle
fsts
clc
movsb
or
jae
push
xchg
rorl
sbb
bt
loopne
or
repnz
sti
outsl
mov
pop
stos
ret
jecxz
divb
push
fstp
addr16
test
lahf
mov
adc
xor
mov
or
xchg
jnp
push
xrelease
cs
sub
pop
inc
ja
xor
sahf
jae
jns
repz
pop
jno
clc
movsb
arpl
pushf
popf
imul
sbb
shl
mov
pop
lods
push
pop
sub
lcall
js
in
sbb
negb
in
sub
and
jmp
out
dec
mov
clc
cli
adc
jae
scas
push
jmp
cmp
es
mov
mov
xchg
shrl
pop
mov
dec
fs
adc
cmovns
adc
or
ror
lods
add
fwait
scas
mov
insl
push
loope
mov
iret
and
mov
adcl
adc
loopne
xor
repz
lds
pop
mov
inc
push
jbe
lret
and
inc
gs
cld
jle
inc
stos
sub
fisttpl
icebp
cmc
mov
push
insl
fmuls
pop
hlt
mov
pop
mov
test
adc
push
jns
jl
add
movsl
xlat
pop
enter
mov
mov
jno
cmp
pusha
in
xor
jg
mov
gs
push
movsl
aas
add
out
inc
jns
mov
in
addl
dec
push
add
sbb
pop
or
adc
loop
cwtl
xchg
or
inc
out
xchg
mov
fcmovbe
nop
and
add
adc
jns
push
mov
in
cmp
jecxz
sub
arpl
pop
mov
loopne
lods
sahf
and
push
add
insl
hlt
lea
mov
push
cmpsb
dec
ret
aam
movsb
test
int3
mov
mov
add
mov
add
mov
sub
dec
and
adc
sahf
jg
mov
dec
xor
loop
push
cmp
push
sub
popf
rcrl
cwtl
mov
jne
and
or
and
mov
push
push
xor
pop
lods
adcl
jbe
movsb
test
xlat
aam
lock
jb
pop
cmpsl
sub
cltd
fisubl
mov
adc
jg
jmp
data16
and
and
in
ds
cmp
je
ljmp
imul
dec
and
cs
clc
lahf
icebp
adc
add
jle
inc
fwait
int3
ja
aad
and
adc
inc
push
in
xlat
mov
mov
lret
ja
mov
data16
lret
push
xchg
jno
or
xor
pusha
jg
and
out
pop
jg
dec
pop
mov
je
outsl
jae
cmp
in
jmp
push
es
sbb
and
jne
adc
xor
sub
sarb
in
mov
lret
dec
or
sub
add
lods
outsb
push
out
gs
pushf
int3
mov
frstor
xchg
xchg
sbb
xchg
nop
adc
mov
cmpsl
sub
lret
push
data16
ljmp
lds
sub
pop
lods
out
sub
xor
and
dec
insl
sbb
add
and
adc
sbb
jae
fisttps
push
stos
jmp
aad
mov
adc
stc
push
cmp
lea
cli
out
ret
shll
imul
mov
cwtl
mov
adc
incb
cmc
and
clc
mov
js
pusha
pop
out
or
lcall
pop
cmp
in
js
jo
cmp
jmp
mov
fidivs
fdivrs
daa
pop
cmp
nop
repnz
sbb
mov
jmp
leave
push
push
push
and
push
insl
jne
hlt
iret
mov
ss
add
add
mov
jno
ror
add
rcr
mov
jo
rcrl
stos
push
arpl
repz
adc
xor
mov
dec
ljmp
xchg
test
enter
jns
test
out
or
lea
adc
popw
mov
mov
pop
cmp
dec
mov
rcll
imull
shll
or
jbe
out
inc
aad
and
cmp
lret
cwtl
lods
sbb
arpl
mov
jo
mov
mulb
fisubl
das
pop
fcompl
mov
push
leave
in
call
lock
xor
push
jno
aam
inc
cwtl
sbb
or
fisubrs
dec
adc
push
enter
cmp
lcall
rcll
add
insl
pushf
stos
push
ror
mov
push
aad
xlat
pop
test
sbb
jg
mov
jecxz
or
clc
cmc
sub
adc
mov
sub
and
or
adcb
bound
mov
push
cmp
mov
out
data16
negb
xchg
fidivrl
xor
add
movsl
imul
inc
mov
dec
cmpsl
dec
lods
addr16
jmp
iret
sbb
cmc
push
or
lock
mov
push
imul
mov
sbb
arpl
pop
add
das
cld
test
fcomps
lods
mov
push
jb
push
fldcw
pop
icebp
ss
pop
lods
je
aas
cmp
xchg
mov
adc
mov
lock
xor
cmc
push
pop
scas
jns
out
cmp
movsb
mov
lahf
loop
lcall
ret
sbb
lcall
push
cmc
dec
push
imul
cmpl
stos
or
clc
cmp
adc
insl
incl
loopne
int
push
sub
rclb
and
xchg
shrb
fisubl
sub
out
mov
arpl
into
xor
xor
push
lret
in
dec
fdivs
imul
mov
js
aas
mov
cli
test
jle
scas
call
clc
jle
pop
iret
pushf
mov
icebp
cmp
pop
mov
orb
add
jns
dec
dec
iret
jnp
mov
faddl
and
rolb
fildl
ret
inc
cwtl
out
fmul
fs
std
lock
add
push
int
scas
or
inc
insl
lods
shlb
fstpl
jbe
mov
mov
roll
ret
insl
cltd
popa
sub
xchg
and
cwtl
xchg
into
pop
jmp
push
dec
scas
mov
arpl
sub
pop
xor
ds
adc
add
ficoml
mov
stos
add
cs
lds
outsb
movsl
pop
repnz
aas
insb
in
sbb
inc
xchg
mov
insl
negb
inc
stc
in
push
mov
ljmp
repz
fucomp
xchg
pop
adc
in
test
ja
push
jns
adc
in
xorl
inc
movsl
out
icebp
into
gs
add
cmp
cmpsb
or
shll
lods
sbb
icebp
into
aam
mov
cmp
jne
cwtl
sbb
jmp
insl
rcrb
dec
cwtl
cmp
mov
jne
iret
push
cmp
pop
jbe
je
sti
xchg
mov
shlb
fcompl
into
in
mov
pop
push
jl
mulb
and
stos
pop
out
jg
mov
leave
xor
lds
fcmovbe
sub
jg
inc
cmp
lret
mov
fdivs
mov
dec
int3
dec
es
pop
or
and
das
cwtl
je
cmp
rcrb
and
or
sub
dec
fdivp
xor
fmuls
add
push
out
mov
inc
mov
push
push
lret
cmpsl
and
jg
dec
int3
mov
mov
inc
push
inc
aas
daa
insl
aam
out
xor
mov
inc
pop
and
mov
mov
and
std
lcall
ret
pop
mov
popa
xlat
push
mov
arpl
or
push
loopne
mov
std
loope
sub
in
les
mov
push
subb
dec
iret
dec
mov
out
aas
jmp
and
xor
mov
add
cmpsb
mov
cs
psrld
mov
pop
in
ds
lret
and
rcr
add
jge
jg
daa
icebp
sti
popa
and
mov
out
nop
jo
cli
push
mov
sbb
int
jae
into
repnz
iret
fsincos
inc
jnp
mov
xchg
jns
ret
stos
out
out
es
xchg
notb
stos
inc
in
mov
icebp
mov
icebp
xor
ficoms
neg
pop
icebp
lods
loop
xor
mov
push
in
sub
push
adc
and
sahf
and
cmp
push
mov
jb
sub
mov
push
lcall
test
and
in
xchg
test
hlt
xor
mov
dec
cwtl
pushf
or
cwtl
ror
pop
push
add
rol
xchg
data16
imul
bound
out
repz
xchg
int3
js
xor
jo
std
popf
stc
ret
mov
ljmp
xchg
mov
xchg
repnz
dec
push
xor
shlb
mov
add
mov
jecxz
shll
call
out
les
movsl
jbe
dec
push
and
movsb
int
hlt
in
test
jecxz
mov
or
sbb
sub
je
out
or
ret
sub
fidivrs
leave
std
aad
cmpsb
sarl
xchg
mov
mov
cmp
notl
iret
repz
cmp
adc
ret
mov
mov
push
adc
pop
jg
in
stos
test
pop
push
stos
es
sarb
cmp
adc
mov
push
nop
push
mov
fists
mov
mov
cs
jmp
xlat
mov
lds
shrl
lahf
pop
pop
imul
stos
jno
cltd
mov
sbb
stc
and
cld
aad
and
push
cltd
scas
rolb
scas
sub
fucomp
int3
and
add
push
out
mov
mov
mov
cmpsb
fwait
dec
in
loope
mov
jbe
mov
pop
imul
add
scas
mov
xchg
push
add
icebp
fcmovbe
mov
push
mov
fnsave
pop
push
pop
and
lock
inc
pop
ret
clc
push
icebp
outsl
cmp
movb
out
outsb
ror
sub
xor
jo
mov
mov
pop
jp
aam
cmp
dec
cmp
sbb
mull
in
xchg
inc
int3
ret
daa
or
cmpsl
push
adc
jno
mov
push
lret
cmp
add
ds
adc
aam
or
xchg
repz
fs
sbb
xchg
out
jbe
push
adc
out
adc
push
sti
scas
fidivrl
rcrl
sub
adc
cmc
daa
push
into
into
les
fldcw
push
or
jno
lret
gs
push
rcll
out
xchg
mov
push
mov
data16
sbb
mov
fsub
iret
stos
out
push
je
es
test
rolb
cmp
nop
test
adc
jle
repnz
cmc
cltd
push
data16
rorb
aas
and
lds
inc
xor
or
mov
and
jne
pop
test
fdivrs
out
mov
adcb
or
inc
popf
or
mov
push
jns
mov
mov
outsb
stos
daa
sub
push
add
in
sub
imul
mov
shrl
mov
inc
xchg
add
das
aas
lret
mov
adc
lds
xor
sub
xchg
shll
inc
push
sub
daa
inc
cltd
aas
jne
nop
cld
cmpsb
mov
cli
push
sub
sbb
pop
leave
dec
push
push
ja
ret
mov
pop
out
clc
pusha
dec
push
adc
pop
jae,pn
stos
leave
repz
sbb
sub
xlat
fidivrl
aad
fwait
or
adc
les
sbbl
rolb
cmpsl
fnsave
std
inc
xchg
pushf
cmp
cld
cmp
cmp
push
pop
cmp
or
adc
xbegin
pushl
pop
cli
lret
lahf
repz
xchg
pop
lret
jl
cli
insb
xlat
or
and
mov
ja
std
vcomiss
jno
popa
xchg
ret
push
aaa
mov
aad
lods
fdivrs
pop
imull
addps
dec
jmp
xor
dec
arpl
mov
lds
xchg
popf
or
push
cltd
enter
in
or
mov
push
rsm
fwait
lret
testl
mov
adc
out
push
jo
mov
addr16
mov
push
insl
add
aad
subl
xchg
xchg
and
scas
sbb
cmp
fwait
jne
mov
add
fldcw
loopne
xlat
loop
push
push
xchg
pop
insl
lods
mov
adc
les
inc
lods
out
inc
and
in
aas
cmp
imul
ds
and
ret
jns
out
dec
mov
jns
mov
inc
jo
xchg
xor
dec
sub
add
xchg
and
xchg
dec
aam
mov
sub
mov
jne
aam
pusha
cmpsb
cmp
fadd
xchg
push
lods
in
cld
in
popf
jns
roll
adc
popa
push
fisubrs
imul
add
mov
mov
push
mov
cmpsb
xchg
inc
repz
out
divl
jb
rcl
out
scas
and
lds
cltd
jno
jnp
mov
mov
jge
sbb
cvtps2pd
or
das
adc
fldl
push
aas
push
movsb
aaa
push
in
in
xchg
or
push
out
or
testl
cld
stc
ds
xchg
ss
xor
jnp
sbb
pop
or
or
push
int3
bnd
pop
test
popa
scas
lea
pop
push
push
outsl
push
mov
cmp
mov
test
les
sbb
push
pop
sbbl
xor
or
or
mov
movsb
test
mov
inc
mov
sarl
sub
mov
push
adc
sbb
sbb
ss
and
dec
mov
inc
cli
or
divl
push
popf
mov
mov
xchg
mov
std
fadds
fstps
dec
jae
mov
sbb
dec
inc
push
jnp
movsb
pop
mov
rclb
pop
cmp
mov
fs
mov
loop
xchg
and
popf
inc
push
inc
loopne
fs
or
stc
mov
daa
sub
ss
cld
dec
lret
imul
push
sbb
ret
movsl
and
in
dec
sbb
mov
jns
loop
lods
inc
sbb
sbb
lcall
out
dec
ss
lret
sarb
and
jo
loopne
pop
clc
xchg
mov
add
mov
cmp
cmp
loop
ficomps
and
pop
mov
retw
jne
cmp
sbb
test
sbb
xor
mov
xchg
ljmp
insb
sbb
dec
ret
inc
rcrl
cs
dec
and
out
loop
ret
inc
movsb
mov
nop
push
dec
movsl
js
sarb
mov
nop
xor
cwtd
push
pushl
dec
mov
fdivr
imul
sub
mov
pop
lahf
mov
or
ficoml
call
call
xor
sub
aas
and
cmp
mov
stc
outsb
das
fprem
in
xor
cmp
sub
push
ret
inc
push
jle
movsb
insl
ret
mov
xlat
inc
adc
ja
in
mov
or
stos
pop
push
shl
add
andb
push
pop
xchg
add
outsl
leave
fildll
testb
and
in
jl
movsb
aaa
sbb
loope
addr16
sbb
ret
loope
stos
lret
dec
pop
xor
and
pushf
dec
mov
loop
and
shrd
shll
push
js
loope
cli
adc
outsb
lods
pop
xor
into
mov
sbb
dec
dec
push
jle
pop
das
xor
jno
or
lock
xchg
adc
bound
and
jns
sub
xchg
inc
cwtl
xlat
in
lahf
inc
leave
and
cmpsb
ja
push
popaw
xor
out
add
scas
xor
mov
pop
xchg
cmp
push
inc
in
test
cmc
movsb
or
pushf
add
mov
xor
dec
or
insb
out
pusha
adc
sub
push
or
scas
dec
xchg
xchg
insb
push
jno
dec
inc
xchg
mov
andl
rcrb
aaa
test
js
adc
negl
sub
mov
popf
sbbb
pop
and
addr16
outsb
pushf
push
and
clc
adc
repnz
das
or
testb
test
add
ja
and
test
cmp
mov
dec
push
xor
or
dec
pop
pushf
jmp
inc
jmp
das
inc
test
pop
icebp
pop
imulb
cs
mov
and
loop
or
decl
shrl
mov
xchg
xchg
add
sbb
add
and
sub
sub
lret
or
adc
xor
sub
push
fs
jns
fs
stos
mov
and
pop
mov
adc
dec
pop
xchg
roll
and
addr16
repnz
insl
clc
cmp
push
repnz
cmp
or
inc
mov
mov
fdivrs
sbb
xchg
adc
sub
add
int3
inc
jmp
insl
push
sub
or
shrl
daa
setl
movsb
xor
aas
cmc
je
popf
mov
and
sarb
mov
imul
xchg
daa
mov
jmp
testb
xchg
scas
lock
sbb
js
xchg
hlt
fstp
cmp
adc
stos
sbb
cmp
mov
out
nop
addb
pop
enter
mov
cld
and
les
inc
cmpsb
push
dec
sbb
mov
sbb
xor
cmp
sbb
sti
cmpsl
pop
out
rcr
jnp
dec
dec
sub
sbb
dec
sub
pop
push
das
int
and
pop
push
cs
movsb
pushf
lcall
sti
out
mov
test
cmpsl
and
pop
xchg
sbb
mov
mov
pop
mov
fucomp
ja
mov
jb
and
pop
mov
jle
lret
sbb
sbbl
fnstsw
andl
test
dec
imul
push
outsb
push
hlt
push
lea
push
idivb
aam
cwtl
ret
and
push
xor
and
lods
aaa
out
sbb
mov
sub
sub
cmp
ret
jo
mov
xchg
cli
push
push
inc
xchg
or
push
dec
cltd
lods
rorb
popf
cmpsl
and
fcmovnb
cld
test
mov
jb
and
or
push
inc
mov
fwait
pop
in
push
jno
lcall
adc
add
popa
mov
inc
bnd
xchg
pop
pop
stos
dec
inc
test
out
iret
sti
jge
inc
inc
ucomiss
inc
ja
jb
lret
ljmp
scas
mov
mov
js
xor
clc
in
inc
cmp
push
dec
scas
std
mov
inc
mov
lock
sub
mov
jge
test
mov
jae
fdiv
ret
sbb
scas
jecxz
iret
int
mov
adc
js
gs
test
sti
aam
pop
mov
mov
cmpsl
dec
mov
dec
xlat
sbb
lods
mov
mov
jbe
jbe
push
ljmp
aad
jo
hlt
dec
leave
mov
faddl
sub
adc
adc
es
or
sub
icebp
or
inc
ljmp
dec
xchg
nop
adc
add
fmul
mov
cltd
adc
aaa
in
sbb
lods
rcr
mov
ret
test
mov
loope
or
mov
push
test
or
xor
push
out
repz
push
jg
push
xlat
dec
lods
mov
inc
rcl
repz
loop
sbb
pop
xlat
xor
es
pop
and
in
push
mov
jb
push
push
cmp
dec
arpl
fldl
int
sbb
dec
sti
or
mov
loop
sbb
addr16
or
test
push
loopne
fwait
mov
adc
repz
call
xor
fidivrl
cmpb
pop
pop
out
mov
aas
lock
push
adc
mov
icebp
xchg
and
mov
jmp
pusha
and
cmc
xchg
in
mov
push
cwtl
les
push
je
test
scas
mov
pop
add
out
pop
out
daa
jo
mov
icebp
xchg
cmc
sti
lods
inc
cmc
lds
cmp
rcll
jecxz
test
ds
out
sbb
mov
pop
sbb
xor
loope
out
nop
test
inc
lds
inc
sub
icebp
sbb
jp
jmp
int
mov
cmp
jle
pusha
lock
imul
xchg
add
int
dec
xor
and
sub
mov
icebp
pop
xor
dec
adc
jg
sbb
mov
jge
int
inc
mov
fsubrs
leave
mov
fisubrs
jae
push
cmp
push
out
xor
mov
fwait
rclb
add
jg
cmpb
incl
push
dec
and
bnd
push
cmp
aad
jle
test
push
jbe
mov
mov
punpckhdq
fcmovne
inc
iret
outsl
nop
in
and
inc
or
xlat
push
fs
cli
push
iret
push
test
mov
insl
imul
adc
mov
lret
cmp
gs
xor
xor
adc
inc
mov
jge
jns
cmp
and
test
out
jo
aas
fwait
rol
sub
std
cld
andb
jge
mov
test
push
mov
mov
fwait
stos
jae
js
negl
xchg
aas
mov
adc
or
pop
mov
xchg
rorl
or
test
ret
arpl
test
dec
stc
or
cmc
call
aas
orb
mov
jecxz
inc
ja
push
adcl
jg
imulb
lods
fsubrs
or
sbb
mov
push
in
push
adc
das
int
sahf
out
out
pop
xchg
push
mov
pop
es
mov
mov
adc
or
popa
adc
out
mov
push
enter
jb
bnd
bound
inc
in
push
adc
int3
aad
fs
loope
gs
add
inc
inc
adc
into
pushf
cwtl
data16
inc
insb
add
mov
inc
andl
mov
outsw
mov
inc
into
dec
sub
add
mov
xor
push
jno
lock
mov
mov
dec
test
and
adc
pop
adc
int
and
xor
adc
sub
jg
dec
call
jg
mov
pop
scas
scas
mov
testl
pop
sbb
cs
adc
pop
sub
cmp
addr16
dec
fcmovb
call
punpckldq
pop
test
xlat
xchg
sub
xchg
and
dec
cmpb
pop
push
ss
push
vpmaxub
jg
mov
lret
sub
imul
push
stos
add
push
pop
lods
icebp
movsb
shrl
dec
adc
out
mov
xor
sbb
adc
jl
bound
adc
push
sti
jno
lods
andb
jge
mov
mov
or
insb
adc
fnstcw
int
push
fwait
and
and
ds
inc
push
mov
mov
sub
pop
in
popa
mov
mov
nop
mov
cwtl
cs
and
dec
mov
push
xchg
and
pop
fldl
div
pop
sbb
movsl
jo
iret
add
rcrb
popf
into
lock
pop
xchg
xorl
insb
in
mov
fcoms
sub
in
sbb
test
clts
in
sbb
pop
sbb
jno
repnz
xorl
xor
sub
mov
cmpsl
call
mov
sbb
add
mov
stos
inc
xchg
test
cmpsb
jg
ret
in
xlat
dec
lods
cld
aam
jb
push
arpl
popa
stos
gs
leave
andl
in
ja
stc
dec
jge
push
mov
xlat
nop
xor
popf
clc
xor
cli
sub
mov
or
loope
aam
mov
pop
ffree
jmp
jle
sub
dec
push
cmp
inc
push
fnstenv
jl
mov
cwtl
cltd
ret
rorb
jmp
or
mov
int
cltd
shll
sub
jns
push
dec
mov
arpl
fldenv
xor
incb
nop
popf
cltd
mov
xchg
push
cld
pandn
mov
adc
data16
mov
xchg
fldt
fstpl
inc
arpl
popf
mov
pop
gs
ret
iret
sub
ret
xlat
fsubl
push
cltd
mov
stos
scas
popf
divb
out
out
xchg
leave
mov
xchg
cmp
cmp
aam
ds
push
call
repz
sub
ficompl
sarl
inc
dec
add
add
lods
pop
mov
leave
nop
jl
lret
xlat
xorl
pop
repnz
push
lea
enter
loope
sahf
xor
jo
imul
xchg
xchg
imul
xchg
pop
or
sti
aaa
jecxz
test
bswap
and
mov
jle
push
fisubrl
incb
movsb
adc
andl
cmp
test
mov
xchg
cmp
out
out
pop
push
sub
fwait
shr
test
arpl
imul
or
push
pop
sti
ja
mov
push
leave
add
iret
shlb
icebp
out
sbb
stc
bound
je
mov
pop
push
das
sub
sub
sub
dec
test
or
mov
ss
out
loopne
inc
adc
push
aad
pop
or
mov
scas
add
clc
push
movsl
dec
repz
loop
xor
push
inc
je
add
fadd
call
int
inc
add
xchg
adc
insl
xchg
out
dec
adc
jp
pop
mov
data16
lret
js
icebp
xchg
fs
jne
je
loope
sbb
mov
xchg
mov
ja
mov
xor
loop
sub
test
or
mov
lea
out
rclb
in
pop
movsl
test
jae
push
push
std
repz
sub
aam
or
andl
inc
or
mov
enter
rcrb
rorb
imull
aam
repnz
andb
push
inc
jne
out
and
cmp
mov
jnp
stos
add
std
jmp
sbb
xor
pop
test
fsub
jecxz
cmc
adc
xor
push
imul
fstpt
cmp
mov
and
dec
jmp
dec
and
std
rorb
test
cmp
add
sbb
sub
dec
jae
adc
int
xchg
or
xor
inc
cld
shlb
mov
scas
fwait
cmp
insb
jbe
pusha
stos
loop
das
jmp
mov
pop
add
xor
bound
js
jbe
sarb
or
jo
std
pop
sbb
jo
and
ficoms
sub
fmuls
enter
inc
inc
pop
sbb
dec
xlat
js
xor
stc
popa
mov
sub
jecxz
dec
movsl
mov
insb
icebp
adc
push
xchg
sub
mov
push
rorl
or
pop
push
xchg
xchg
mov
cmp
in
data16
sub
add
jae
push
mov
pop
cmp
dec
push
push
pop
sub
inc
push
hlt
nop
push
sub
or
js
sub
loopne
push
shl
aad
fsubl
lahf
test
inc
test
lahf
mov
mov
rcr
fldcw
sub
ficoml
pop
xorl
popf
add
imul
movsl
notl
inc
inc
aad
push
dec
xchg
inc
lods
ja
xchg
jb
icebp
outsl
cwtl
into
inc
adc
es
dec
jae
js
sbb
mov
or
outsb
loope
xchg
sbb
rolb
push
and
jl
stos
jmp
push
test
xor
and
pop
sbb
cmp
mov
xchg
daa
insl
cmp
cmp
adc
rolb
cltd
test
mov
mov
push
jg
imul
orb
mov
and
adcl
shrl
jne
push
push
pop
jle
pop
mov
jb
pop
push
mov
add
jnp
aas
jbe
rcrl
and
jo
int
and
in
push
leave
out
popa
imul
sbb
mov
mov
dec
in
sbb
outsb
adc
test
repnz
adc
enter
cmp
in
imul
fucom
add
push
into
aam
sub
push
pop
aaa
out
pushf
enter
test
sbb
jnp
fcmovne
sub
dec
mov
pop
divl
iretw
inc
into
sbb
xchg
inc
push
mov
dec
or
mov
or
mov
dec
pop
scas
jmp
imul
inc
addr16
jle
pop
or
xchg
and
or
stos
add
mulb
dec
neg
mov
out
add
push
out
sbb
aaa
and
pop
mov
jle
mov
ds
daa
dec
jecxz
jmp
mov
stc
mov
cmp
lea
mov
in
dec
push
push
outsl
and
dec
jne
data16
mov
pop
mov
mov
sub
xor
out
fsubrs
insl
mov
les
xor
mov
mov
inc
cli
pop
xor
push
aad
mov
scas
mov
pop
cmp
in
cmpsl
jne
adc
shlb
stos
pop
push
das
adc
mov
aas
inc
cmp
mov
add
push
orl
popa
fdivrs
hlt
cmc
insb
arpl
in
arpl
xlat
adc
insl
jle
jb
outsb
dec
loop
pusha
cmp
xor
adc
pop
pop
out
lods
insl
push
inc
cmc
sahf
jg
arpl
mov
sbb
or
xor
std
iret
jbe
mov
or
imul
sub
jbe
pop
xor
push
cmp
icebp
test
bound
gs
shl
cli
mov
adcl
and
std
xor
adc
outsb
into
outsb
adc
adc
mov
pop
gs
lahf
mov
pop
fcmovb
pop
ret
in
pop
xor
aam
pop
pop
jnp
sbb
adc
jl
mov
out
arpl
sbb
nop
loope
divl
loopne
push
loopne
adc
lahf
bound
ljmp
cmp
out
xchg
xchg
pop
dec
subb
insl
cmpb
pop
fisttpl
movsl
jmp
mov
adc
stos
inc
js
dec
aas
xchg
adcb
sbb
mov
je
decb
mov
outsb
in
pop
inc
pop
adc
out
mov
jns
sbb
mov
sbb
adc
jns
xchg
pop
cmc
je
add
inc
enter
push
jl
add
mov
sbb
out
dec
or
lahf
pop
jns
mov
shll
fcoml
pusha
adc
xor
test
in
cmp
cmp
mov
xchg
mov
dec
mov
std
dec
pop
jae
jmp
icebp
jg
push
sbb
sbb
in
or
in
cld
shll
cmp
lret
push
dec
inc
mov
xlat
push
aaa
sub
xchg
rorl
pop
mov
or
jmp
sbb
repz
pushl
inc
sbb
cs
lret
pop
mov
cmp
shll
lret
stos
sbb
hlt
mov
bound
pop
jmp
daa
lods
lret
xchg
sti
shl
repnz
ficompl
ficompl
xchg
xorb
and
cmp
push
cld
out
out
fsubrl
cmp
inc
sbb
les
in
ljmp
push
leave
repz
or
xchg
sbb
ficoms
inc
lcall
and
aad
rorb
fs
subb
jmp
repz
out
pushf
inc
jnp
cmp
cmp
cltd
fidivrl
in
icebp
lods
insl
shlb
loopne
cmp
cltd
mov
dec
loope
pusha
fidivrs
cmp
andl
xchg
repnz
cs
sub
sub
mov
das
popa
jne
xchg
mov
out
cli
lret
cld
push
out
push
mov
lea
dec
loope
mov
int
mov
mov
xor
adc
lret
cmp
mov
es
bnd
dec
out
jnp,pt
aas
fsts
pop
adc
loope
xor
insb
mov
pop
int
iret
shlb
fstpt
fildl
adc
xlat
shrb
push
sub
mov
jae
fs
out
xor
ret
or
dec
stos
cmpb
sub
fisubrs
inc
jp
xchg
mov
sbb
jne
push
or
push
jno
mov
sbb
repz
pop
jl
inc
jnp
loop
mov
mov
je
mov
test
addl
or
rorl
test
cmp
pusha
scas
xchg
cmpsb
xchg
pop
cltd
dec
adcl
jae
sti
sbb
or
pop
shlb
aas
loop
mov
aam
jbe
xor
mov
insl
add
mov
adc
cmp
xchg
jnp
jp
sti
imull
loopne
stos
jle
aaa
and
fsubrp
hlt
xchg
mov
out
loope
out
and
push
shrl
movsl
mov
and
sub
inc
mov
ret
sub
mov
jbe
pop
sub
jp
pop
ds
bound
inc
sub
cmc
jl
mov
lahf
pop
lea
adc
imul
es
cmc
push
xor
js
mov
push
push
popf
sahf
int3
leave
lea
adc
ds
cmp
loopne
sub
mov
jmp
aad
mov
imul
insl
dec
dec
sarl
sahf
pop
xor
lea
loop
jle
inc
ror
inc
pop
sbb
mov
mov
or
in
fnstcw
mov
or
or
sub
push
fisttpl
mov
inc
cmp
add
xor
sbb
in
adc
or
cmp
hlt
ljmp
js
pop
imul
or
jmp
insb
xlat
xchg
inc
and
lret
and
and
cwtl
cmp
xor
push
loope
cld
int3
stc
mov
sub
lds
clc
pop
jo
cmp
sti
jbe
rcll
mov
mov
hlt
pushf
xchg
xchg
imul
fistpll
pop
pop
jle
pop
cli
mov
roll
cmp
movsb
loop
push
fwait
sub
jge
dec
sub
cld
int3
and
stos
pop
je
lods
jl
pushf
xchg
add
xor
jno
dec
daa
adc
jecxz
xor
pop
data16
xor
cmpsl
push
test
bound
inc
cmp
jbe
sub
ficoms
into
add
cmp
cwtl
mov
ja
sub
mov
mov
inc
jl
negb
jecxz
xchg
xor
movsb
xchg
mov
inc
adc
inc
xchg
arpl
sub
mov
mov
and
sbb
push
adc
scas
aas
xchg
movsl
test
xchg
cmp
imul
inc
pop
add
cmpsb
push
dec
add
or
rolb
imul
andb
frstor
sub
es
cmp
xchg
mov
insl
test
xlat
fdivrl
arpl
or
sbb
pop
add
mov
push
jae
mov
mov
fwait
inc
add
xor
stos
or
adcl
sti
mov
lods
mov
mov
subl
out
add
pushf
call
jbe
test
arpl
cmp
out
dec
mov
xchg
pop
fimuls
hlt
push
rcll
xchg
int
mov
push
cmp
test
dec
lea
popf
stc
gs
pop
out
cmp
dec
mov
leave
aad
cmp
mov
enter
adc
test
jnp
shll
out
and
and
in
mov
arpl
jge
out
jae
fdiv
pusha
or
mov
mov
fcmove
std
movsl
cwtl
adc
ret
fwait
popf
or
outsb
std
pop
adc
cmpsb
cmpsl
mov
dec
int
lret
loope
scas
daa
call
pop
lret
movsl
jne
movsl
cmp
xor
imul
mov
call
push
stos
jle
xor
mov
push
xchg
push
push
in
shll
jne
jo
test
xchg
out
jae
mov
add
jnp
inc
std
sbb
jne
or
idivl
ret
sbb
cmc
std
mov
xor
stos
add
pop
or
or
jb
iret
dec
sar
push
mov
pop
loope
adc
addb
pushf
add
jmp
lret
mov
fwait
ret
cli
inc
out
mov
sub
or
insl
adc
imul
nop
or
mov
stc
sahf
rclb
les
arpl
xorb
cmpsl
push
pop
iret
mov
mov
or
aas
popf
int3
cmpsl
btsl
adc
sub
mov
jmp
pop
aam
jmp
mov
lret
pop
sub
xlat
inc
sbb
fsub
xor
adc
icebp
or
adc
ss
pop
mov
rclb
icebp
pop
xlat
pop
clc
lret
loop
xchg
cmpsl
test
gs
xor
lcall
adc
jb
jge
movsl
rcrb
xchg
xor
jne
jecxz
mov
test
jmp
jae
shlb
rclb
mov
out
in
jo
or
popf
jnp
rclb
inc
stos
ret
ss
bound
fidivrl
lods
cmpsl
in
cwtl
mov
mov
cmp
fs
xchg
shrb
push
out
cmc
ja
js
dec
enter
stos
stos
mov
inc
pop
xor
xor
push
insl
or
sahf
hlt
add
add
fildl
jecxz
adc
sti
xor
cmp
shrl
jns
mov
rol
jb
push
aam
call
imul
push
or
into
data16
mov
lcall
or
pop
xchg
andl
add
jge
shlb
mov
int3
jge
call
dec
or
sbb
scas
out
mov
and
out
test
shlb
mov
jmp
inc
mov
xor
popa
mov
pop
push
movsl
mov
stos
add
cmp
inc
fistl
test
cwtl
jecxz
jle
jecxz
cmp
cmc
mov
mov
pop
push
lret
pop
pusha
shl
mov
and
mov
movsb
outsl
and
ret
stos
jae
stc
mov
sub
in
inc
lods
pop
aaa
push
xchg
out
push
addr16
sbb
jg
mov
or
adc
mov
std
fs
jo
push
mov
into
cmpsl
mov
aam
mov
jb
dec
enter
pop
jae
push
add
xlat
and
pop
sbb
xchg
mov
mov
pop
test
add
xor
rcrl
cltd
jge
insl
mov
sub
xor
sub
mov
dec
inc
inc
addr16
jge
loop
aas
roll
cwtl
cwtl
push
xchg
adc
adc
cmp
stc
stc
push
movsl
xor
xchg
vunpckhpd
push
cmp
mull
xor
xchg
sbb
movsl
pop
loope
pushf
mov
fidivs
lock
std
fnstcw
pop
dec
rorl
std
mov
xor
jno
mov
fs
or
push
cs
in
xchg
fs
out
push
mov
pop
test
test
jns
add
cmp
into
ss
arpl
leave
test
iret
int3
lahf
push
and
inc
aaa
fs
ds
adc
and
and
sahf
push
dec
loop
jmp
xchg
out
and
mov
sbb
cwtl
add
pop
dec
jp
loop
xchg
jge
mov
addr16
stos
mov
sahf
and
push
loopne
mov
pop
inc
pop
inc
push
lret
dec
adc
out
daa
xchg
mov
xchg
sti
in
dec
flds
aam
pop
and
mov
int3
pop
xchg
sub
mov
xchg
insl
pop
pop
and
scas
inc
shr
jp
into
cld
lret
fmull
out
push
dec
pusha
outsb
pop
mov
add
data16
dec
jl
cmc
xor
aas
sbb
fdivrl
xor
repnz
repnz
and
xchg
mov
push
lds
sbb
add
iret
jge
add
cltd
out
jmp
xor
test
loope
fcom
loopne
jne
mov
hlt
popa
mov
inc
push
push
paddusb
iret
mov
out
push
aaa
adc
jmp
inc
flds
scas
push
insb
mov
les
dec
es
aas
test
imul
je
cli
test
jae
inc
dec
xor
clc
inc
lods
fsts
sub
jecxz
or
adcb
mov
test
arpl
inc
stos
in
inc
push
cmp
js
sbb
mov
gs
iret
mov
push
or
sbb
push
scas
add
aam
mov
cmp
mov
out
push
adc
jno
out
jmp
jnp
loope
pop
mov
push
cli
psubsb
push
fdivrs
mov
daa
notb
and
mull
inc
or
cmp
dec
cmc
jl
jo
and
xor
push
lock
rcrb
push
arpl
push
out
ret
lods
jge
and
enter
addl
sahf
aad
jmp
push
dec
pinsrw
adc
sub
shrb
jle
inc
or
xor
lds
cmp
push
mov
xlat
mov
jae
in
pop
sub
in
and
stos
xchg
ss
inc
mov
mov
insb
decb
rcrl
xlat
mov
stos
in
pop
and
jle
mov
pop
xor
ja
int3
or
mov
mov
and
stos
pushl
cwtl
mov
sub
lock
adc
ss
ljmp
push
shlb
pop
push
fidivrs
rcll
xlat
push
popf
repnz
lds
sub
mov
addl
mov
push
push
mov
pop
jle
imul
fs
fmulp
lds
addb
jecxz
adc
rorl
fdivp
mov
hlt
or
inc
push
pop
test
mov
cmp
xor
push
ds
inc
js
lret
test
push
pushf
push
jbe
sub
lock
in
inc
call
mov
push
xchg
inc
pop
sbb
mov
fcmovb
push
dec
fstl
adc
in
gs
loop
cmp
pop
pop
pop
iret
pop
pop
mov
add
int
data16
xchg
movsb
shlb
cmp
ja
clc
mov
xchg
dec
sub
imulb
push
icebp
push
lods
popf
and
mov
add
xor
sbb
inc
int3
out
xchg
cmp
sti
aam
push
sub
sbb
add
cmp
popa
and
mov
mov
sbb
pop
clc
iret
daa
pop
or
jl
adc
cmp
mov
push
dec
mov
lret
cmp
jmp
xchg
pop
mov
add
add
mov
push
sbb
sti
or
into
xchg
rolb
mov
cltd
movsl
lods
dec
repnz
nop
je
mov
std
fcoms
test
fdivr
aaa
xchg
sub
push
add
xchg
loop
adc
mov
and
test
rcrl
out
lea
adc
jecxz
insb
adc
xor
stos
mov
or
xchg
mov
lcall
aad
or
mov
jg
mov
loopne
nop
ror
jecxz
dec
jle
loopne
xchg
fcom
sub
call
das
lock
sti
mov
pop
mov
rcl
test
sub
push
clc
pop
js
cld
mov
cmp
ljmp
mov
aad
dec
fcomp
cltd
pop
out
xchg
pop
in
xor
sbb
dec
push
jmp
mov
or
mov
popl
clc
adc
into
mov
and
sbb
js
add
mov
dec
mov
inc
ficomps
cs
dec
jl
dec
out
es
push
mov
mov
call
xlat
push
mov
pusha
roll
xchg
in
push
stc
adc
or
loope
or
inc
out
sub
clc
push
outsb
jmp
fldl
sub
scas
push
rcrl
lock
mov
cmp
mov
mov
push
scas
pusha
mov
cmp
out
push
test
cmp
sahf
push
decb
and
mov
ja
xlat
cmp
inc
jl
xchg
ss
insl
dec
fmulp
cwtl
in
xchg
jp
std
lcall
sub
popf
fwait
out
sub
ja
sbb
mov
or
push
fadds
les
cpuid
adc
cmp
sbb
or
in
cmpsb
out
icebp
pop
jmp
leave
aad
sub
cld
test
sub
xor
or
jno
je
imul
stc
imul
pop
pop
aam
ljmp
js
out
std
push
adcb
out
adc
out
testl
mov
xchg
and
jg
mov
mov
mov
movsl
ret
adc
scas
jl
movsl
cmc
js
adc
enter
stos
cwtl
or
lods
push
pop
iret
mov
stos
out
fldl
push
cli
cmpsb
loopew
pop
lods
aam
gs
jb
test
fcoml
mov
push
xor
mov
sub
sbb
mov
pop
pop
inc
in
inc
aam
sub
add
popa
clc
sub
ds
aas
jg
adc
push
cli
shlb
dec
arpl
push
pop
insb
add
shll
dec
push
int3
stos
jmp
mov
sbbb
pop
xchg
fwait
cmc
ficoml
aas
sub
nop
aad
aaa
push
sbb
jbe
fcomps
adc
popa
jmp
in
mov
jp
cmp
decl
pop
aaa
jl
ss
addr16
jl
dec
mov
or
sub
hlt
sbb
loopne
sbb
mov
sub
loopne
fidivrs
imul
out
cmc
divl
ljmp
pushf
ds
cmp
and
shll
sub
out
jns
sbb
test
xchg
fcomps
push
call
outsl
rcrl
scas
pusha
jb
jae
fsubr
sbb
mov
or
sti
fistl
xchg
into
or
pop
sub
lea
shll
xor
je
outsl
roll
xchg
sub
ja
inc
push
adc
pop
ret
and
jl
mov
cli
pusha
shrb
call
and
stos
or
mov
aad
je
cltd
adc
cwtl
cmc
ja
inc
sbb
mov
push
xchg
or
outsl
and
into
mov
out
leave
mov
pop
inc
icebp
call
push
mov
cli
push
jle
cmp
sub
test
leave
mov
lods
fsubl
mov
jecxz
add
cs
add
mov
jmp
mov
sbb
xchg
das
jno
rorl
repnz
inc
je
jbe
sbb
and
jne
add
fwait
in
jp
push
out
mov
loopne
sub
imul
stc
dec
sbb
out
pushf
int
fimuls
push
outsl
ds
xlat
pushf
lea
fwait
ret
lahf
cmp
xchg
or
scas
es
aad
nop
mov
dec
mov
filds
push
clc
mov
out
cmp
mov
dec
es
jecxz
sub
dec
inc
mov
cmc
lea
test
shrl
sbb
inc
mov
into
stos
and
jle
cmp
je
adc
stc
mov
test
sbb
mov
sub
bound
scas
or
fldt
testl
and
fisttps
jns,pt
adc
daa
or
sahf
cld
in
mov
addr16
stc
imulb
imul
jbe
mov
imul
add
pop
aad
mov
mov
and
jmp
fscale
shlb
push
call
and
pop
mov
mov
xor
push
in
jg
and
push
mov
int3
addr16
mov
je
add
mov
xor
dec
rol
mov
stos
aas
mov
mov
push
jge
mov
jnp
and
test
or
pushf
sub
movsl
aad
push
mov
dec
adc
movsb
dec
add
cmp
lods
cli
sub
lods
xrelease
insl
or
inc
cmpsb
data16
sar
jo
xchg
nop
pop
jb
xchg
imul
push
data16
aad
sti
dec
cmp
rcll
or
daa
std
lret
rorb
iret
leave
mov
xchg
add
sahf
fiadds
test
cmp
and
fwait
xor
jno
pushf
xor
mov
pop
imul
jge
ficoml
cmpsl
dec
sbb
xchg
mov
sti
mov
inc
pop
jp
movb
cltd
repz
xchg
add
jne
jnp
or
xorb
sbb
cmp
inc
in
pop
mov
mov
adcb
adc
call
es
mov
stos
cwtl
mov
mov
sub
call
ja
inc
sbb
xchg
scas
sbb
adc
push
mov
scas
sbb
push
mov
out
lret
hlt
jno
push
fldenv
mov
sar
sbb
popa
roll
or
lcall
push
cli
inc
cmpsl
xchg
push
mov
aam
rol
push
lcall
in
insb
adc
lods
adc
cmp
in
addr16
icebp
dec
lods
cmp
call
pop
mov
insb
xlat
xor
imul
test
mov
and
jns
fildll
xchg
adc
inc
cmp
cmp
out
aad
jmp
dec
sbb
inc
dec
rcrl
xor
loopne
push
ds
xchg
xor
mov
je
mov
xor
loop
mov
cmp
inc
std
sub
fnstenv
push
rclb
sahf
mov
adc
aam
mov
addr16
push
test
popf
das
pop
incl
mov
lods
dec
xor
cld
xchg
and
mov
push
cld
push
ret
test
and
dec
orl
insl
sub
and
pusha
xor
pop
sub
or
jp
out
movsl
sbb
sbb
insb
xor
mov
mov
push
pop
mov
cmpsb
pop
push
pop
push
mov
pop
inc
pop
mov
imul
mov
xlat
repnz
jg
xchg
idivl
mov
mov
push
push
loop
adc
mov
test
jb
mov
inc
in
jg
jl
mov
cli
ficoms
test
inc
push
xor
and
testb
filds
icebp
push
mov
mov
sub
and
mov
push
cwtl
push
jmp
mov
shlb
sub
fists
lret
pop
test
mov
loope
dec
lds
faddl
rolb
dec
popa
or
sbb
jbe
or
ja
xor
mov
frstor
clc
pop
xchg
mov
pop
sub
divb
cmc
lret
xchg
lods
jns
sub
mov
pop
ret
popf
cmp
inc
loopne
mov
out
movsl
mov
shr
cmp
das
subl
mov
int3
xor
xchg
xchg
rorb
addr16
outsl
pop
popf
aam
je
push
adc
movsl
xchg
mov
adc
xor
pop
cltd
adc
mov
icebp
ljmp
stos
adc
mov
jnp
insl
popf
inc
adcb
cmp
orl
scas
mov
mov
mov
mov
stc
xor
std
or
push
scas
and
adc
lcall
lahf
inc
enter
or
xchg
push
cltd
jle
lea
pop
cmp
es
adc
es
bound
mov
in
push
jne
in
mov
fwait
push
dec
loop
jle
mov
add
rclb
imul
in
out
or
setbe
inc
out
es
lcall
leave
lcall
and
xchg
jg
shll
in
inc
imul
divb
xor
ss
sbb
not
add
inc
shlb
jb
out
in
outsl
lea
outsb
sbb
push
inc
inc
xor
xor
sbb
xor
sbb
div
cwtl
push
rcll
bound
add
adc
ja
fimull
orl
and
nop
jle
inc
jbe
aaa
push
cmp
out
dec
push
mov
ja
cmpsl
pop
repz
xchg
pop
cmp
push
xchg
daa
mov
in
ror
dec
in
mov
mov
arpl
jns
dec
push
pop
addr16
ljmp
insb
mov
inc
leave
sub
add
inc
push
inc
aad
dec
mov
icebp
push
pop
pop
sub
stos
popa
push
mov
jmp
outsl
fwait
or
in
fisubrl
add
inc
data16
mov
jnp
mov
pop
stc
scas
pop
adc
pop
mov
add
or
rcr
jmp
pop
pushw
mov
or
dec
sahf
xorb
xor
inc
scas
divl
and
nop
sub
lea
hlt
jp
sub
pop
out
jns
fs
pop
fbld
jb
push
mov
icebp
loope
xorl
push
xchg
inc
fs
pop
sbb
shrl
or
imul
add
pop
sti
dec
xchg
out
inc
mov
hlt
js
or
pop
das
std
adc
xchg
push
test
lods
and
adc
mov
movsl
xor
sarb
push
pop
test
or
repz
in
cmp
ret
mov
into
push
mov
jmp
and
shl
jb
pop
and
stc
test
push
mov
test
dec
data16
das
nop
jp
mov
clc
and
cmp
icebp
pop
outsl
scas
inc
in
das
sti
je
das
xor
inc
outsb
xor
add
pop
lret
lea
pop
push
int3
mov
cs
test
mov
mov
loop
mov
in
mov
or
repz
mov
test
or
iret
lea
inc
cmpsl
lret
imul
out
and
and
dec
inc
pushf
mov
pop
cs
sahf
div
fcoms
xchg
xor
adc
mov
adc
or
jmp
ds
pop
xchg
mov
xchg
stos
xchg
sub
sub
or
inc
xor
and
xchg
and
dec
andb
or
addr16
mov
jae
cmp
mov
in
fmull
adc
lods
lret
test
push
loope
pop
lds
cmp
mov
mov
das
pop
or
dec
out
in
push
roll
mov
dec
mov
jg
adc
dec
sbb
pushf
pop
int3
xchg
xchg
arpl
testb
cwtl
adc
lret
ss
out
aas
inc
imull
cmc
and
repz
nop
cli
xchg
add
mov
pop
or
les
movsb
mov
arpl
jbe
pop
adc
in
fwait
jne
addb
stc
shrl
mov
pop
pop
or
outsb
mov
or
aas
shll
adc
dec
and
sbb
mov
je
jo
sti
das
stos
movsb
inc
shrb
nop
mov
sbb
pop
mov
divl
adc
dec
mov
xlat
js
mov
sub
push
adc
xchg
fsubr
pushf
ficoms
push
adc
pusha
and
mov
or
xchg
shll
jne
pop
sar
xor
mov
jbe
xchg
das
sub
cmp
mov
pop
ret
inc
idiv
cld
mov
inc
xor
pop
add
cmc
enter
mov
jnp
sar
lret
push
hlt
push
xchg
popa
sub
xor
dec
lods
je
xor
notb
fnstenv
scas
bound
push
stos
arpl
sahf
inc
cld
push
inc
mov
loopne
fisttpll
sub
xor
jo
xor
test
jmp
icebp
pop
mov
sbb
in
cmpb
mov
mov
or
xchg
jp
mov
mov
rorb
jne
dec
inc
leave
je
je
xorb
sbb
lea
xorb
fsubs
or
movsb
fs
inc
mov
jp
das
jle
les
mov
mov
jo
dec
out
cmp
repz
cltd
mov
adc
les
out
cwtl
mov
sbb
cwtl
andl
int
inc
push
sub
adc
shlb
test
xor
mov
mov
lret
ret
push
aaa
mov
sub
xor
sub
pop
fwait
shl
ret
aam
xor
adc
add
ja
inc
add
adc
jle
adc
sub
movsl
push
les
push
jo
scas
lret
sub
dec
mov
inc
aam
adc
insl
mov
and
addl
jg
pusha
and
in
sub
add
imul
inc
sbbl
sbb
mov
sub
iret
ds
in
lret
pop
in
pop
ja
push
sub
mov
out
adc
mov
jmp
adc
movsl
in
mov
xlat
testb
cli
inc
or
popa
subb
sub
out
cmpsl
dec
call
jle
aam
andl
push
adc
movl
out
das
enter
sbb
cli
rcrl
popw
in
xchg
sbb
scas
dec
clc
mov
or
mov
mov
cmp
pusha
push
xor
mov
icebp
push
leave
mov
jae
and
cmp
jl
insb
xlat
decb
mov
bound
std
xchg
es
mov
and
cld
jl
das
push
mov
in
or
arpl
outsl
int
loop
ret
testb
xor
repz
call
mov
stos
jge
push
loop
pop
mov
jmp
mov
jp
push
adc
subl
fistpll
test
pop
add
insl
ds
jecxz
adc
adc
xor
add
xchg
test
adc
mov
jecxz
mov
lods
sub
dec
insl
mov
dec
sbb
sbb
aaa
push
out
fildll
nop
call
adcl
xchg
cmp
lea
jnp
out
mov
popa
mov
arpl
mov
sub
imul
pop
mov
stc
inc
push
xor
add
push
sub
sub
daa
outsl
ss
rorb
inc
xchg
cmp
mov
xchg
icebp
add
dec
addr16
inc
test
add
xchg
mov
jge
add
dec
push
mov
sub
add
sbbl
mov
or
pop
ljmp
insl
enter
ror
jecxz
adc
inc
xor
add
xor
out
mov
inc
out
mov
mov
add
in
mov
cltd
jp
add
cmpsb
fcoml
adc
std
xchg
addb
int
cmp
iret
sub
mov
nop
rcl
leave
bound
mov
lcall
mov
test
adc
aaa
pop
sub
or
ja
mov
test
xor
nop
sub
pop
cmpsb
mov
dec
or
mov
mov
xor
orl
cmp
xchg
sti
xchg
mov
dec
addr16
sub
xlat
sbbb
daa
adc
insl
sub
outsb
pop
dec
inc
xchg
and
dec
js
add
mov
or
inc
jb
cli
fs
mov
loopne
add
adc
test
xchg
dec
xchg
xor
adc
aas
add
mov
sbb
pop
fcompl
pushf
faddl
cltd
push
sbbb
in
xchg
popa
cmp
dec
stc
jle
lret
cltd
gs
aaa
mov
sti
mov
addr16
mov
pop
dec
sub
loopne
movsb
xchg
jnp
call
adc
pop
mov
lret
les
cmp
push
lret
mov
push
mov
in
push
icebp
out
test
add
stc
xor
movsl
cli
xchg
or
mov
dec
mov
mov
bound
leave
and
mov
scas
rcll
lea
pop
jle
or
mov
jbe
inc
adc
or
rorl
pop
xor
fwait
je
inc
cmp
and
dec
or
mov
xchg
fs
or
data16
pop
jns
popf
jmp
into
test
lea
adc
ljmp
hlt
cmp
mov
sub
mov
dec
dec
test
cli
daa
xlat
mov
aad
add
mull
stos
xchg
pushf
gs
mov
das
ja
xlat
inc
adc
shrb
jmp
xor
mov
outsl
je
pop
fimull
sbb
cmp
push
adc
lahf
jb
jecxz
mov
sub
je
pop
xchg
das
aaa
test
sub
bnd
mov
mov
adc
mov
add
cmp
into
dec
fstps
inc
jbe
dec
cmp
clc
in
repz
mov
cmovo
pop
loopne
in
leave
test
mov
fmul
cwtl
ret
lea
lock
cmp
int
xor
rcl
inc
mov
fidivs
mov
push
inc
xor
push
not
lods
cmpsb
push
push
xorb
cmc
std
into
jg
cmpsl
or
in
in
int3
bound
inc
jne
enter
pop
sub
sbbb
mov
sub
inc
or
or
adc
jle
jl,pn
inc
mov
sub
dec
add
notl
xchg
mov
pop
push
adc
and
jg
inc
and
out
test
add
pop
dec
icebp
push
xlat
dec
aam
ljmp
mov
stc
cmpsb
pop
scas
mov
mov
cmp
xor
gs
repnz
and
int3
jmp
test
xchg
sbb
inc
bound
sbb
pop
leave
subb
dec
iret
fldt
add
xchg
sub
push
adcb
packsswb
cmp
jecxz
adc
add
xchg
push
insl
lock
hlt
or
dec
in
leave
sbb
out
mov
push
sub
add
cwtl
pop
add
adc
bound
orl
cmp
or
or
lods
andl
pushf
lret
cmp
test
mov
pop
bnd
push
cmpsb
cmp
cli
aam
fwait
movsb
dec
jbe
clc
jo
je
enter
mov
mov
mov
loope
testb
repnz
scas
cmpsb
es
insb
aas
in
sti
movsb
pop
adc
xorb
loope
mov
pop
xchg
adc
neg
lret
lret
sbb
imul
das
xor
lahf
inc
cltd
cltd
int3
lcall
sahf
xor
iret
sbbl
jg
test
dec
push
mov
scas
dec
sub
daa
push
rolb
pop
fistpl
lcall
push
jne
loopne
loope
xlat
bound
xor
rorb
jge
sbb
je
jne
fmuls
sbb
lods
pop
jnp
adcl
and
xchg
ja
stos
shll
fdivrs
les
punpckhdq
out
mov
out
lods
pop
cmp
test
xchg
in
mov
jl
stc
mov
xchg
adc
sbb
pushf
shl
dec
mov
mov
je
mov
adc
stos
xor
mov
icebp
ficompl
insl
div
icebp
jmp
jge
sarl
add
sti
pop
jmp
aad
jo
mov
pop
pop
insl
mov
add
test
cmpsb
pop
ss
dec
orl
imul
rclb
insl
push
mov
sbb
ret
pop
test
pop
xchg
les
test
sub
out
mov
dec
stos
sbb
dec
and
dec
mov
inc
imul
cmp
cmp
and
push
stc
xchg
rcrb
test
int
les
aas
test
mov
mov
cwtl
mov
or
fincstp
enter
xor
jg
ror
sbb
and
add
mov
cmc
sub
bound
add
aaa
int3
sub
out
xor
mov
push
faddl
push
mov
push
out
jb
loopne
jecxz
xchg
repnz
xchg
pop
lods
scas
js
pushf
jmp
ss
mov
inc
and
bound
adc
nop
loopne
arpl
inc
mov
loop
movsl
or
dec
push
mov
inc
pop
aaa
mov
jge
lcall
stos
rcrb
or
fidivrs
push
arpl
jle
mov
lret
popf
fidivrl
repz
adc
xlat
aas
xor
decl
dec
mov
dec
subl
fldenv
mov
jne
xorb
cs
fsubs
pop
mov
fsubp
in
js
pop
cld
jnp
std
clc
sarb
out
mov
mulb
push
xor
cmp
rcrb
xchg
mov
sarl
xchg
fcoms
lret
adc
bound
dec
pop
es
mov
int3
sbb
insl
ret
mov
sbb
add
stos
gs
push
das
sub
adc
cltd
jmp
and
xchg
inc
cld
lcall
lods
call
cld
dec
out
pop
mov
mov
mov
movsb
push
adc
fwait
mov
fbld
mov
in
jb
fwait
dec
jl
call
xchg
sbb
mov
and
jne
xchg
jl
mov
mov
dec
jne
pop
cli
cmp
mov
xorb
adc
inc
adc
mov
dec
sub
stos
fcoml
jbe
aaa
repnz
cmp
rorb
sub
mov
imul
dec
fstpt
cmpsl
js
outsb
loope
jb
cs
xor
js
sub
push
shrl
fsubr
and
cwtl
shrl
push
mov
or
xchg
enter
push
adc
sub
fildl
xchg
mov
test
mov
sahf
stos
lock
mov
xor
insl
xchg
mov
dec
testl
popa
aad
dec
mov
js
cs
call
lods
lock
mov
inc
jg
add
sahf
add
jb
adc
sub
cmpsl
cmc
mov
and
mov
dec
stos
xchg
push
mov
push
xchg
nop
scas
dec
std
pop
cld
data16
sub
clc
jns
mov
pusha
insl
fwait
loopne,pn
jg
lea
jmp
mov
fucompp
scas
mov
dec
ljmp
inc
mov
jge
test
jb
mov
ds
das
into
dec
jnp
test
adc
clc
jmp
cmp
push
jns
dec
sub
mov
inc
out
call
lahf
jno
xor
xchg
cld
sar
xor
inc
jge
pop
scas
mov
fwait
lds
cs
sbb
sub
sbb
les
inc
dec
not
xchg
cltd
inc
sarb
lods
add
aaa
and
xchg
pop
fstpt
xor
mov
iret
std
xchg
cli
scas
and
push
in
and
xor
mov
dec
les
fisubl
jle
cmp
fidivl
push
jg
jg
ljmp
or
fwait
hlt
dec
pop
sub
shr
bound
add
jb
dec
lret
cmp
ljmp
and
fists
popf
mov
sub
scas
mov
push
pop
sbb
xchg
in
xor
test
jle
dec
xor
es
sbb
sbb
mov
daa
add
sbb
mov
dec
rorl
pop
push
jl
sub
cmp
mov
push
sti
dec
idivb
add
lret
outsl
cs
imul
lret
addb
adc
sub
fidivl
cmpsl
loopne
xchg
push
clc
arpl
ret
or
orb
aas
cltd
das
sbb
lock
xchg
push
mov
insl
rolb
rorb
in
dec
call
cmp
cmp
or
cmp
jbe
cld
call
icebp
aas
imul
xor
shlb
cmpsb
cmpsb
cmp
jne
cltd
and
js
jg
jle
das
mov
lret
pop
push
or
mov
push
jle
leave
enter
xchg
fdivrs
jg
xor
movsl
insl
pop
sbb
inc
data16
fsts
lods
jl
and
mov
fwait
jge
jmpw
xor
adc
cmpl
fidivrs
pop
lock
pop
out
sbb
jmp
add
push
pop
sub
into
lcall
subb
sub
out
es
aad
jno
push
adc
out
lret
pop
out
push
push
push
pop
mov
add
push
and
lods
cmp
dec
mov
cmp
inc
test
pop
pop
roll
or
loop
adc
dec
pop
inc
mov
dec
negl
movb
dec
cmpsb
ret
xor
bound
or
call
out
mov
leave
push
stos
les
dec
mov
xchg
pop
mov
jg
outsl
mov
bound
fs
pop
jb
dec
pop
or
fidivrl
mov
mov
jo
jnp
ret
dec
clc
sub
or
mov
rol
int3
out
lcall
orb
xchg
jp
sub
cmp
jno
mov
jne
sub
or
test
adc
shrl
call
cwtl
or
arpl
mov
mov
test
outsb
dec
pop
test
pushf
add
mov
mov
mov
lcall
xchg
rclb
ja
loope
mov
test
fisubs
popf
ficompl
pushf
and
xchg
loopne
mov
xlat
lods
cli
dec
cmp
bound
or
lret
outsb
and
push
rolb
xor
ret
std
lea
into
out
sar
cmc
add
fs
gs
shrb
mov
mov
mov
shll
enter
loope
mov
dec
xor
sbb
mov
mov
aas
mov
sub
adc
ss
xchg
test
stos
cwtl
js
pop
frstor
orb
xchg
outsb
stos
inc
and
mov
mov
test
pusha
push
hlt
repz
cmp
xchg
jne
outsl
or
add
and
fsubs
sub
pop
clc
enter
or
test
inc
and
fidivrs
fisubrl
je
and
or
scas
rcrb
inc
ljmp
pop
imul
mov
lock
inc
mov
jle
movsb
daa
pushf
cld
push
leave
xor
push
push
mov
insb
pop
xor
mov
or
pop
jle
fisttpll
push
roll
cld
sbb
or
push
fsubl
cmp
adc
imul
ljmp
ret
add
sahf
cmpsb
xchg
bound
sti
mov
divb
and
inc
ret
xlat
cld
lock
fnstenv
lret
shrb
xchg
add
pop
adc
in
fwait
popa
jns
mov
aaa
xchg
adc
mov
nop
jmp
xor
in
out
sub
dec
test
addr16
jmp
lds
xlat
xor
lds
xchg
add
cmp
or
dec
sti
sbb
mov
mov
mov
sub
adc
jno
pop
jge
jmp
cs
jnp
pop
fwait
daa
rclb
sbb
jb
mov
jne
cmpsl
xor
iret
fwait
pop
aad
loope
push
jnp
shll
or
inc
jl
call
pop
sti
test
decl
jmp
int
mov
out
or
aas
xor
rcll
mov
xor
adc
mov
shl
sahf
adc
nop
sbb
push
jecxz
fsubs
sub
test
sar
movsb
std
imul
add
je
pop
xchg
std
mull
aas
jb
dec
in
pop
das
sbb
dec
cli
faddl
mov
test
hlt
jecxz
sbb
ljmp
daa
fistl
movsb
mov
xchg
scas
aaa
popf
shll
cmc
jmp
push
sarb
mov
ljmp
mov
push
arpl
jo
push
push
jmp
adc
int3
add
dec
inc
mov
jle
xchg
pop
clc
adc
out
push
cmp
mov
mov
jmp
mov
inc
repnz
push
fsubr
ret
fdivl
add
icebp
sbb
pusha
dec
lds
ja
shrb
dec
jbe
xor
sub
sahf
push
xor
xchg
and
pushf
jnp
nop
xchg
pusha
mov
xchg
or
push
iret
mov
xchg
sbb
hlt
in
push
xor
sub
jnp
call
fidivrl
dec
xchg
in
test
ja
les
aad
xor
out
add
jnp
add
sbb
sarl
imul
fucom
loop
pop
jae
out
dec
sbb
cmpsl
test
adc
sbb
mov
jns
pop
xor
jmp
mov
mov
addl
cmp
dec
inc
cmp
aad
data16
out
subl
shr
mov
sbb
xchg
fadd
pop
cli
out
imul
ss
cmp
xor
shl
out
clc
jne
adc
dec
push
enter
sahf
mov
inc
fdivr
xchg
arpl
sbb
repz
or
loope
ror
popf
xor
das
sbb
enter
popa
mov
adc
dec
dec
xchg
mov
testl
xchg
ljmp
shl
das
push
fiadds
cmp
pop
test
into
enter
stc
inc
jmp
lea
clc
inc
jmp
mov
movsl
and
mov
cmpsl
add
dec
pop
jno
cmp
imul
cltd
sti
sub
sub
lock
lods
push
xchg
xor
ljmp
andl
pop
sub
sarb
iret
push
pop
in
arpl
fstpt
in
shl
mov
mov
and
cmp
dec
ror
out
outsl
popl
dec
fistpl
sbb
adc
push
push
std
insl
push
shrb
add
test
and
push
pop
popa
les
cmpsb
pop
lock
cmp
cmp
push
push
popf
jle
fcoml
dec
pop
jecxz
adc
mov
adc
xchg
adc
pop
fsubrs
adc
add
scas
nop
sti
inc
mov
push
addr16
xchg
mov
and
push
push
pop
pusha
clc
jge
into
addl
fs
lds
or
jb
pop
inc
push
scas
lock
call
cmpsl
setp
cmp
repz
bound
pusha
push
push
dec
pop
adc
aas
lcall
sbb
stos
lea
cmp
pop
or
jmp
push
inc
lcall
movhps
cs
add
jmp
push
jp
jl
sbb
pushf
movsb
imul
sub
mov
es
xchg
in
fnsave
push
lahf
jo
xlat
dec
imul
jle,pn
lcall
lcall
roll
mov
lock
or
in
rcl
cs
sbb
into
out
int
and
cmp
daa
inc
test
push
testl
adcb
inc
cwtl
pushf
fs
jp
out
jne
cmpsl
and
dec
jbe
stos
nop
jbe
repz
into
dec
pop
ret
rcr
pop
aam
sti
dec
roll
push
pushf
sbb
jae
push
jecxz
sbb
push
shl
lret
jns
mov
sub
leave
data16
addl
daa
adc
jne
xor
aad
test
cli
fbld
cmp
and
stc
fadds
mov
add
test
adc
mov
dec
push
xor
jmp
testb
mov
test
push
sbb
out
jne
mov
lret
cmpb
nop
or
outsl
in
xchg
sub
xchg
cmpsl
sub
aad
ja
and
repnz
sbb
xchg
std
xchg
cli
pop
add
bound
sub
inc
outsl
xor
mov
scas
adc
jp
inc
mov
mov
out
enter
test
js
and
rorb
adc
loop
xor
dec
addb
pop
pop
inc
mov
pop
fnsave
ja
push
call
and
sarb
jae
cmp
push
aas
cmc
or
lcall
lds
sbb
es
std
iret
test
cmp
sarb
loop
sarl
pop
popa
subb
push
insl
aas
sub
or
addr16
sbb
fwait
iret
in
push
sub
fisubrl
add
ret
addl
pop
xor
loope
pushl
decl
shll
dec
inc
into
jge
xor
bnd
mov
xchg
das
mov
int
cld
xchg
int
and
xorl
iret
out
lock
push
rcrb
scas
out
rcrb
add
jbe
cmp
dec
lods
jmp
sti
dec
sahf
sub
pop
mov
sarl
cmp
arpl
xchg
sub
or
cmp
es
push
push
popa
pop
mov
jmp
shl
cmp
and
dec
insl
mov
jmp
dec
and
fisttps
mov
push
stc
xchg
mov
daa
test
and
and
lcall
arpl
int
cmp
jo
xlat
dec
pop
xchg
dec
jle
cmpb
lds
mov
xchg
call
pop
outsl
push
mov
sub
das
ljmp
jnp
and
pop
and
xlat
sahf
or
adc
push
movsl
pop
outsb
xor
lods
cmp
inc
sahf
pop
popl
inc
xchg
cmp
into
loopne
cmpsl
arpl
mov
imul
jle
bound
jnp
cmpsb
xchg
and
mov
xchg
fimull
pop
xchg
pop
cli
leave
js
in
mov
adcb
or
pop
sbbb
testl
mov
push
rorl
dec
mov
pop
imul
lods
mov
and
hlt
imul
mov
cmp
es
adc
jae
ror
inc
xor
enter
test
and
xchg
jl
in
inc
nop
sub
ret
mov
cs
int
sbb
lods
es
jmp
sub
mov
xor
test
movsb
sbb
xor
aam
bound
cmp
dec
scas
adc
test
jg
ss
aaa
scas
fadds
imul
sbb
adc
popf
inc
mov
cmp
hlt
mov
jge,pt
lea
cmp
push
cwtl
movsb
push
push
push
scas
pop
pop
mov
sbbb
stos
xor
arpl
lahf
jno
cmp
cmp
inc
pop
dec
push
xchg
xchg
and
cli
test
aas
xchg
insl
push
shll
mov
cmpsl
mov
jno
mov
test
mov
mov
inc
ljmp
leave
stos
je
leave
jmp
negb
add
push
movsl
jb
mov
mov
inc
push
push
les
jb
into
or
pushf
lret
iret
out
mov
mov
jmp
sub
clc
aaa
inc
fucom
xor
rcrb
std
xor
lods
xchg
mov
jbe
xchg
xor
insl
and
and
adc
dec
cmp
cmpsl
mov
std
int
insb
xor
xor
rcpps
xor
mov
ljmp
xchg
std
jmp
mov
stos
int
js
pusha
mov
fcomip
jne
sbb
cmc
lock
in
fwait
or
or
les
and
xor
mov
test
sarl
add
sub
cmpl
adc
insb
out
cmp
xor
add
in
mov
pop
insl
mov
xor
in
pop
in
fistl
popf
xchg
mov
jbe
mov
lret
ja
and
xchg
pop
xchg
lahf
daa
cwtl
inc
lds
and
mov
iret
sbb
loopne
jge
and
and
ljmp
jno
out
mov
test
dec
divb
mov
inc
pop
xchg
cmp
stos
rorl
jmp
push
xor
aad
rdpmc
cmp
dec
push
ds
repnz
mov
jo
jae
cmp
movsl
imul
adc
sub
jbe
push
sbb
adc
or
scas
jns
inc
cltd
or
mov
adc
inc
push
ficomps
mov
pop
movl
dec
ret
xor
push
fstps
leave
aad
mov
sbb
jnp
or
xor
xor
repnz
cmp
dec
in
cwtl
sarb
cmp
ror
mov
cmpsl
or
sti
icebp
push
frstor
inc
int3
int3
jns
jbe
in
add
fnstenv
aas
out
addb
or
lahf
add
ret
cmp
sbb
sbb
mov
push
push
sbb
cmpsb
jbe
mov
dec
xchg
adc
loopne
fmulp
sub
mov
loop
fmull
fwait
sbb
xor
outsb
cmp
call
pop
jns
subb
cltd
bound
inc
rcrl
push
ja
xor
outsb
sub
stos
mov
add
inc
leave
cltd
mov
outsl
aam
js
imul
mov
jno
or
into
je
cmp
sub
je
add
loop
cmp
push
inc
leave
mov
nop
shrb
mov
ret
ror
inc
and
fnstenv
cmp
jnp
pushf
jo
enter
jnp
mov
jecxz
scas
adc
aam
leave
xor
cs
test
or
inc
popf
pop
or
loopne
xchg
std
cmpsb
sub
aad
push
dec
call
out
nop
cwtl
test
sahf
or
sarb
mov
and
cltd
pop
add
xor
and
add
mov
loope
imul
or
pop
cmp
test
sbb
pop
jns
cs
jmp
and
daa
enter
sbb
fcmovnbe
std
push
lret
mov
add
or
add
movl
sbb
cwtl
das
mov
stc
cmp
cld
daa
mov
cwtl
adc
es
mov
and
cmc
movsb
into
xor
xor
and
in
adc
in
jbe
fdivs
in
cs
repz
sub
subb
push
xchg
sbb
fcomps
mov
cmp
mov
push
xor
ja
cld
call
push
inc
out
mov
js
xchg
fcmovb
push
aas
sbb
inc
jns
leave
aaa
adc
pop
data16
jecxz
loope
popa
mov
fidivrs
jmp
xchg
loopne
push
pop
add
int
xchg
and
sbb
fs
mov
inc
cwtl
sbb
loope
mov
jecxz
lods
cmc
scas
std
jle
aas
push
or
pop
fcomp
pop
mov
sbb
movsb
and
xor
add
and
loope
ljmp
hlt
cwtl
xor
pop
repnz
adc
fidivs
lock
push
adc
cmp
es
je
xchg
rolb
jb
cmpsl
cwtl
pop
test
pop
xchg
data16
rcrl
inc
mov
scas
jge
inc
and
fnsave
xchg
and
adc
loope
popf
scas
enter
out
ret
jp
cltd
cli
or
imulb
fs
push
mov
popf
hlt
and
fisttps
stos
mov
jmp
inc
and
in
aas
dec
insb
cmpsl
test
lret
and
leave
cld
out
xlat
out
xchg
add
in
jp
push
cmp
lods
and
mov
sbb
inc
mov
sub
jl
repz
or
mov
add
add
pop
into
jno
int
stos
in
repz
cmpsl
shl
or
sarl
mov
inc
add
xor
pop
push
je
adc
sbb
or
or
stos
pop
push
mov
or
push
fstpt
sarb
mov
sub
outsb
xor
cmp
sbb
shl
addb
hlt
lret
lret
and
add
mov
enter
sbb
sbb
mov
int
pushf
inc
in
sahf
sbb
jg
inc
jge
xor
sbb
shll
nop
push
inc
das
mov
into
int
shr
idivl
por
frndint
cmp
adc
hlt
test
jo
in
into
mov
shlb
lods
push
cld
jmp
add
push
adc
je
mov
push
out
repnz
mov
pop
mov
lds
cmp
inc
jne
inc
push
adcb
lods
mov
fcoms
mov
push
in
out
push
xchg
icebp
xchg
addr16
add
prefetch
or
movsl
mov
call
daa
jg
das
and
shl
mov
xchg
push
call
pop
cmp
mov
xor
xor
push
xor
pop
subb
push
daa
enter
lods
in
mov
cmp
divb
aam
mov
cmpsl
push
and
in
adc
inc
repnz
cmp
aas
divb
insl
outsb
xor
pop
mov
push
loopne
aam
xor
sti
xlat
sub
jl
add
test
mov
ror
or
mov
lret
icebp
popa
je
dec
jg
fwait
movsl
cmp
push
mov
sbb
cmp
icebp
mov
push
lds
hlt
movsl
mov
sub
sbbl
mov
testb
jb
push
jge
test
je
and
or
add
dec
pop
sub
je
ljmp
xchg
data16
jge
push
ror
jnp
bound
mov
into
cmp
std
xchg
jmp
cmpsb
lea
fistl
ljmp
inc
in
dec
mov
icebp
daa
lods
mov
repnz
clc
ss
push
dec
les
daa
repnz
cmpsb
mov
lcall
push
jge
rorb
lea
sbb
add
popf
insb
push
sbb
pop
aas
ja
mov
mov
ljmp
add
jmp
lahf
sbb
jb
inc
in
or
xor
js
ret
inc
mov
ljmp
popa
in
xor
mov
data16
jecxz
mov
dec
ljmp
scas
mov
nop
push
test
add
xor
fbld
cmp
dec
nop
jmp
cmpxchg
jb
xchg
inc
rcrb
xchg
mov
les
sbb
test
imul
inc
xor
mov
pop
scas
inc
mov
mov
shlb
lret
mov
mov
ja
cmp
test
xchg
enter
cmp
add
inc
inc
aam
sub
mov
imul
inc
pop
jle
mov
fadd
aam
mov
sub
sbb
add
fcomps
mov
scas
stc
sub
mov
pop
call
xor
sahf
pop
cmc
pop
shl
shrb
adc
push
sahf
test
shlb
push
cmpsb
dec
xchg
adc
adc
xchg
imul
pop
push
bound
and
fstps
adc
cmp
xlat
cmp
fcoml
iret
je
mov
fisubs
lahf
fcmovnb
sbb
sub
pop
aad
cld
lret
in
or
mov
daa
sti
mov
lds
repnz
icebp
mov
pop
jnp
mov
cs
mov
jae
cmp
xorb
cmp
mov
push
xchg
mov
test
aam
inc
xchg
mov
xchg
sbb
or
dec
lock
xor
imul
fwait
mov
fcoms
xor
pop
mov
nop
fadd
or
and
inc
dec
dec
push
jl
or
pop
gs
or
mov
pop
data16
pop
pusha
lahf
dec
push
mov
mov
and
pop
sub
mov
test
pop
stos
lret
and
bnd
mov
lret
scas
add
sbb
jae
fucomp
push
mov
ljmp
fcomps
roll
push
mov
and
fwait
cs
jo
or
jge
ss
push
dec
fs
mov
mov
sub
and
ret
pop
sub
xor
dec
movsb
iret
movsb
mov
aaa
mov
xor
or
gs
addr16
cli
mov
lret
rolb
cmp
bound
fmull
jns
orb
aas
nop
ret
mov
push
push
in
scas
fs
mov
in
push
push
xor
cli
or
xchg
sbb
cwtl
imul
rolb
sbb
popf
fisttpll
decl
cmpb
and
lods
imul
clc
shl
in
shrb
das
sub
inc
out
mov
jp
xor
lret
or
or
xorb
gs
jo
mov
iret
lret
lahf
xlat
cwtl
or
pop
add
and
ja
jp
addr16
aam
and
and
and
ret
pop
mov
push
xchg
sub
pop
ds
cmc
ljmp
ss
mov
dec
xor
mov
enter
sub
out
jle
mov
dec
push
push
xor
dec
push
jae
cltd
loope
inc
inc
mov
xchg
out
movsl
loope
xor
cs
or
rorb
fs
mov
outsb
sub
mov
nop
xchg
jo
or
mov
imul
adc
repnz
lret
pop
out
addr16
sub
or
test
mov
out
inc
iret
or
sub
sub
fildll
inc
sbb
cmp
cmpsl
ret
dec
dec
and
sbb
movsl
sbb
jb
inc
inc
popa
inc
pop
imul
or
iret
gs
iret
cmp
popl
xlat
out
mov
cs
sub
xchg
es
out
mov
jb
call
imul
insl
add
mov
pop
and
rolb
xlat
data16
lock
out
lret
fldlg2
xor
sub
jae
push
inc
mov
push
int3
mov
icebp
inc
lock
sub
mov
int3
or
outsb
mov
cltd
setge
mov
loope
pop
in
mov
icebp
aaa
mov
pop
rcrb
mov
dec
imul
and
cmp
push
jae
cmpsl
out
setne
adc
clc
inc
ret
wbinvd
subb
xchg
cmp
jge
and
loop
xor
push
ss
movsl
cmp
loop
cld
ja
scas
ljmp
push
lods
ret
xchg
out
in
push
or
enter
imul
in
in
fsubs
loopne
insb
xchg
jae
add
int
mov
stos
jae,pn
repz
jge
add
push
fcom
inc
mov
imul
dec
jnp
das
jecxz
xchg
outsl
inc
adc
push
das
ret
adc
out
sub
dec
pop
popa
lret
mov
stos
push
adc
arpl
out
enter
jmp
inc
xchg
leave
test
xchg
add
sub
add
out
adc
iret
fnstcw
dec
xchg
das
gs
into
cwtl
xchg
dec
mov
inc
mov
test
subb
daa
test
fstpt
add
sahf
push
pop
loopne
sub
sarl
jmp
adc
into
lods
pop
cmp
lahf
xchg
jle
in
ret
cmpsb
sub
xorl
stos
adc
fucomp
mov
push
xchg
enter
or
fcmovu
add
repz
test
cmp
insl
fldt
sbb
or
adc
pop
xor
outsb
sti
jno,pt
pop
mov
clc
mov
xor
pop
push
repz
and
mov
imul
cmp
pop
out
into
fldt
test
lds
sbb
jl
sub
pop
notb
sbb
arpl
rolb
lret
stos
call
mov
faddl
adc
jnp
push
add
test
push
jmp
push
stos
ljmp
mov
shll
orb
dec
sbbb
je
mov
fldt
inc
ss
mov
inc
test
xchg
cli
mov
push
inc
ret
bound
mov
cmpsl
jp
pop
adc
jbe
mov
pop
lods
nop
or
xchg
es
sbb
leave
dec
jl
adc
jb
mov
jge
repz
xchg
mov
ds
outsb
inc
lcall
std
movl
dec
lret
sub
aas
lea
adc
and
sbb
jecxz
sbb
and
mov
stc
sbb
daa
lea
rcr
pop
dec
dec
xor
gs
ljmp
shr
mov
fsubs
push
jmp
xchg
xor
shr
mov
fsts
and
sub
or
dec
inc
test
fdivl
adc
mov
mov
mov
fdiv
cmp
cmpsb
rorb
cmp
dec
repz
test
push
adc
xchg
mov
pop
into
cli
sub
push
inc
in
mov
xchg
push
leave
sub
mov
mov
cmpsl
cmp
sbb
dec
test
insb
cmpsb
pusha
sahf
in
fsubp
mov
cmp
lock
xor
add
ds
sbb
add
sbb
dec
je
mov
insb
or
sub
dec
jle
lcall
add
imul
sub
xor
and
cmp
mov
andps
add
pop
sbb
xchg
inc
daa
ret
pop
inc
add
adc
out
iret
jb
jl
ret
lock
popf
mov
cmp
jge
or
xor
mov
leave
mov
adc
test
scas
mov
lea
or
scas
mov
push
in
dec
inc
add
pushf
add
add
mov
mov
es
pop
and
rorb
xchg
inc
outsb
pop
jl
jp
imul
das
or
nop
lds
repz
dec
dec
or
and
addr16
xchg
dec
inc
loopne
or
mov
out
mov
enter
pop
ficomps
inc
adc
and
js
jo
movsl
lds
add
adc
in
mov
inc
cltd
pop
shlb
sarb
imul
sbb
sub
pushf
clc
lods
or
mov
inc
dec
cld
sub
ret
gs
jnp
cli
jmp
arpl
xor
push
mov
cwtl
lds
pop
xor
test
pop
call
pushf
rcl
gs
je
lahf
dec
xchg
push
lock
fcoml
pop
inc
shr
push
sub
fistpll
jns
inc
hlt
push
iret
adc
xor
outsb
in
ffreep
rol
pop
cmp
jne
out
lods
pop
sbb
lcall
mov
cli
or
xor
add
enter
mov
js
mov
jae
inc
scas
xlat
pop
pop
repz
lds
or
clc
inc
cmpl
mov
popa
mov
xchg
call
mov
mov
adc
adc
jo
xor
sbb
push
aam
lahf
mov
fistl
in
mov
and
loope
sarl
xchg
push
test
jno
movsl
hlt
neg
repz
stos
jnp
and
gs
mov
lea
in
fwait
popf
cmp
mov
lret
call
les
xchg
fwait
lahf
jmp
dec
adc
push
loopne
sarl
repz
dec
xlat
add
movsl
aad
das
iret
addr16
repz
sahf
xchg
inc
jb
out
dec
and
sbb
jno
dec
pop
inc
xchg
add
jb
test
cld
dec
int3
inc
fidivl
jl
mov
add
sub
mov
ss
xchg
mov
jg
mov
lcall
xchg
stos
ss
pop
mov
ret
scas
jb
mov
push
pop
fmuls
mov
inc
mov
adc
mov
push
sbb
xor
sub
jp
ret
loop
inc
subb
xchg
test
test
xchg
mov
adcl
lods
arpl
leave
test
mov
push
jbe
dec
xor
sti
and
loopne
cmp
inc
xor
bound
push
push
popf
adc
pop
or
test
mov
adc
mov
pop
fwait
call
out
loope
lods
inc
loopne
sub
sar
fidivrl
rclb
repz
insb
push
outsl
mov
push
mov
push
cwtl
pop
fdivrl
fwait
jle
cmpsb
movsl
jl
ljmp
adc
jmp
inc
inc
mov
add
or
aad
pop
mov
lahf
adc
sbb
pop
mov
push
ror
test
aas
ret
fdivr
aam
test
inc
jae
into
mov
jae
add
mov
pop
push
out
shrl
and
mov
test
mov
adc
adc
fmull
mov
or
mov
mov
movsb
jnp
int
iret
add
movl
and
cmp
pop
scas
xor
add
je
shll
xchg
pop
stos
or
into
pop
sbb
in
icebp
sbb
faddl
insb
jmp
jg
push
outsb
cmpsb
popf
dec
xchg
jle
movsb
ja
and
cmp
dec
mov
mov
or
adc
fcompl
jge
ret
mov
pushf
push
lods
sbb
movsb
movsb
popf
or
fnsave
pop
in
xor
cltd
xchg
stc
aam
cmp
mov
shll
call
jl
push
jne
rorl
data16
mull
aad
fwait
je
out
xchg
adc
sub
cld
lret
popa
pop
testb
mov
es
xchg
or
lret
xor
out
jno
stc
outsl
std
outsl
jg
push
mov
pop
add
pop
leave
push
and
fsub
add
cli
loopne
roll
dec
dec
imul
jl
mov
cmp
mov
repnz
int3
mov
out
xchg
test
mov
jmp
mov
shr
fprem1
sub
sub
push
test
push
out
in
mov
mov
mov
repnz
pop
ljmp
sub
out
lret
dec
jecxz
popf
jne
cmp
in
xchg
adc
out
shr
lret
pop
xor
mov
int
pusha
or
xchg
dec
mov
adc
int
outsl
mov
movsl
insb
cmpsb
shlb
inc
popa
stos
lock
out
inc
pop
aas
add
mov
jmp
ds
test
test
daa
outsl
fimull
fmull
lcall
repnz
imul
lods
jne
add
sub
outsl
in
lea
mov
adcl
or
mov
rcll
push
jo
adc
into
pop
mov
out
pop
push
xchg
nop
sub
or
nop
pop
loope
cmpsl
sbb
ljmp
pop
in
xchg
mov
hlt
pop
popf
repnz
enter
mov
xchg
pop
adc
cld
ret
pop
ret
shl
enter
dec
push
into
stc
push
stos
out
mov
push
cmpsl
mov
adc
push
and
push
xchg
and
jno
cli
jb
nop
pop
dec
or
lahf
mov
dec
cmp
loope
inc
lea
add
fcmovnb
dec
sub
mov
push
sbb
mov
inc
mov
aas
testb
pop
and
pop
in
clc
lods
sub
aas
adcl
sbb
and
std
gs
jge
test
xchg
mov
sub
js
imul
out
pop
insl
or
sub
and
mov
lds
sbb
jae
js
repz
jl
push
push
data16
xchg
mov
test
lahf
push
jp
not
iretw
daa
mov
mov
sub
pop
mov
and
sbb
jecxz,pt
stc
sub
mov
mov
andl
jecxz
add
inc
add
rcr
int
xor
aaa
jno
inc
out
cld
or
cmp
jge
fidivrl
push
adc
mov
cltd
mov
cltd
out
mov
fisttpl
jmp
jo
js
xor
cmc
xor
fidivs
adc
insl
sarl
repnz
xchg
and
sahf
je
mov
push
enter
test
test
add
mov
or
loope
add
aaa
cmp
pop
or
jno
rcr
insl
outsb
push
sbb
call
sbb
scas
pop
test
dec
stos
push
ficoml
dec
push
sbb
mov
push
xor
js
push
mov
test
sbbl
ret
ret
aam
sbb
mov
xor
scas
stos
fildl
dec
cld
adc
xlat
and
insb
add
int3
inc
fs
ret
test
xor
stos
push
jecxz
mov
and
xchg
jl
decb
mov
push
addr16
je
dec
loope
movl
andl
test
xchg
cmp
loop
call
push
dec
ja
mov
inc
xorl
inc
pop
mov
fsubl
scas
addr16
imul
jle
push
cwtl
and
sbb
les
mov
mov
data16
cld
adc
cltd
push
mov
mov
lods
add
xor
push
fnstcw
bound
mov
mov
scas
leave
xchg
sub
ja
pop
rcrb
jbe
mov
lcall
mov
je
roll
add
mov
jecxz
or
fcomp
sub
mov
ret
push
aaa
pop
cltd
xchg
fmull
loop
pop
pop
and
push
mov
arpl
sub
in
rorl
aas
cltd
icebp
xchg
lahf
mov
addr16
aad
insl
or
push
pop
lahf
mov
test
add
test
outsl
stos
xor
data16
pop
adc
call
outsl
test
in
pop
adc
mov
mov
xchg
mov
call
out
or
mov
xor
or
jmp
jge
ljmp
mov
adc
pop
ss
xchg
cli
mov
ret
inc
out
xchg
pop
sbb
ret
and
popf
mov
les
and
cmp
ret
lret
push
push
call
jl
mov
add
jno
jge
enter
pop
sahf
mov
mov
into
mov
cmp
dec
loopne
sar
inc
cmc
dec
xchg
mov
ret
sti
arpl
sti
inc
je
pusha
in
pushf
mov
pop
jnp
dec
insb
mov
xchg
or
popa
pop
int3
push
ja
inc
inc
xor
cmp
push
addr16
push
mov
cmp
data16
mov
mov
cmpsb
lret
cmp
adc
push
lret
sub
sbb
adc
cmpl
enter
lds
xor
mov
insl
lods
sbb
ja
mov
inc
add
test
cmpsb
adc
adc
add
pop
imul
ss
mov
popf
adc
out
mov
int
inc
mov
sbb
mov
and
and
lret
in
decl
aaa
pop
lret
cmp
jae
std
adc
cmp
jb
adc
test
test
sbb
sub
sahf
jnp
jecxz
insl
test
rclb
or
jp
js
mov
push
adc
and
pop
rclb
out
xchg
psrlw
jo
pop
popa
dec
addb
ljmp
dec
inc
mov
in
cltd
daa
shrb
xchg
xchg
imul
inc
loope
inc
fsubs
add
mov
xchg
and
lret
mov
pop
ss
insb
or
cmp
xor
cmp
arpl
mov
cmpsl
mov
loope
notl
xlat
mov
lea
loop
pop
shr
stc
cmp
xchg
clc
push
xchg
movsb
add
jno
fistps
into
test
out
cmp
xor
fcmovnb
mov
add
repz
dec
xchg
fiaddl
xor
and
xchg
sbb
hlt
ds
or
hlt
pop
sub
inc
inc
adc
push
adc
scas
push
inc
pop
dec
inc
add
jp
mov
xor
fisubrs
cs
lahf
cmp
mov
popf
jnp
mov
dec
push
fnsave
cmpsb
add
cmp
rclb
lret
inc
xor
push
outsb
loop
dec
sbb
mov
pop
xchg
pop
addr16
jo
jo
or
arpl
jmp
out
push
aad
repnz
lea
xchg
ljmp
push
push
adc
dec
push
int
stos
and
inc
mov
push
mov
repz
inc
cmp
push
pop
aas
mov
orl
adc
jg
and
fucomp
cmp
xchg
neg
mov
test
out
int
dec
das
addr16
sub
adc
test
pushf
outsb
or
pop
aaa
sub
mov
adc
jl
sub
mov
rolb
lods
cmp
cmpsb
es
call
sbb
lret
loope
fimuls
jmp
xor
mov
mov
popf
js
scas
sub
mulb
mov
cmpsb
push
adc
enter
xchg
fs
fbstp
jns
xchg
mov
imul
xor
movsl
jb
pop
jecxz
test
loop
xor
or
jno
inc
imul
jecxz
outsb
movsb
xlat
pop
xor
xor
outsl
jp
xchg
sbb
pop
xchg
in
mov
arpl
dec
movsb
mov
ljmp
xchg
xor
imul
jp
or
and
inc
cmp
sub
dec
adc
dec
out
outsb
and
neg
aaa
imul
sbb
xchg
in
scas
call
push
jae
sub
ja
fs
mov
mov
or
into
push
push
push
mov
daa
pop
sub
pop
inc
mov
add
sbb
mov
loopne
adc
and
mov
out
movsb
lret
cmp
pop
mov
clc
sbb
inc
aaa
popa
call
ficomps
jg
stos
popa
sbb
int
outsl
mov
sub
xchg
pop
or
imul
or
sbb
movsb
mov
enter
sbb
and
dec
and
push
incb
pop
dec
mov
jbe
cmp
jg
xor
in
stos
cmp
test
mov
jo
movsb
dec
mov
mov
xor
jae
jne
mov
push
mov
ret
lods
popa
push
fdivr
rorl
fnstcw
pop
popf
and
dec
inc
mov
push
mov
pop
cmp
or
pop
stos
fcomps
dec
xlat
je
filds
xchg
xchg
lret
lcall
js
rcl
sar
inc
mov
mov
dec
loopne
imul
xchg
test
mov
pop
inc
jecxz
xchg
repnz
mov
lahf
jne
cmp
adc
loop
mov
mov
pop
std
xchg
notl
sbb
mov
fiadds
rorl
pop
mov
sub
dec
orb
inc
xchg
pop
imul
push
pop
mov
mov
jo
add
negb
lret
das
filds
inc
xor
mov
enter
jg
sub
mov
jle
cltd
or
cmc
ss
arpl
adc
and
out
dec
insl
mov
addr16
test
lods
je
mov
aaa
dec
add
jge
mov
pop
or
pop
mov
adc
sbb
cmp
sahf
xchg
sub
jno
mov
jmp
test
cld
roll
lcall
xchg
mov
jp
jns
adc
je
xchg
clc
mov
popf
gs
stc
adc
cmp
sub
test
popl
mov
mov
push
xchg
cmpsl
int3
aam
popa
enter
test
aaa
sub
ret
jb
pop
xor
xlat
xor
jnp
push
cmp
xchg
mov
and
pop
and
add
mov
call
sub
call
clc
inc
outsb
jne
and
xchg
dec
pop
pusha
mov
mov
out
or
fidivrs
sarb
mov
pusha
and
sbb
lea
enter
dec
pop
loop
addr16
ds
negb
idivb
sbb
shll
sbb
sbb
pushf
mov
jne
mov
mov
ja
insl
cs
cwtl
and
repz
mov
adc
loope
cs
mov
pop
xchg
jne
jae
and
or
out
repnz
and
mov
stos
and
popa
mov
mov
loopne
mov
inc
sbb
jl
ret
mov
add
out
add
cmp
pop
adc
je
das
sbbb
add
xor
lods
lods
add
das
dec
nop
lret
mov
in
xchg
add
adc
into
cmc
mov
dec
inc
mov
jg
sbb
fcomp
fisubrs
call
or
inc
add
pop
sahf
cld
inc
ret
mov
sarl
jae
outsb
ss
or
push
aas
push
mov
push
cltd
cmp
jg
aaa
imul
jle
or
jg
rorb
and
mov
adc
jp
int3
ret
popa
inc
lock
aas
sbb
xchg
test
pop
mov
xor
adc
sbb
std
fsubr
add
inc
out
pop
adc
leave
sahf
xlat
push
jge
mov
shll
mov
mov
push
mov
into
pop
insb
and
loope
call
jmp
pop
cld
xchg
jmp
inc
mov
hlt
pop
mov
imul
xchg
and
in
aaa
ljmp
insl
inc
ret
sub
or
pop
or
sti
push
int
clc
jns
leave
data16
mov
jmp
xor
js
mov
outsb
outsb
pop
jle
daa
ds
out
jmp
dec
and
xchg
pop
outsl
sbb
cld
sub
outsb
xor
ret
cld
in
vpunpckhqdq
adc
test
bound
test
mov
xchg
imul
add
lahf
fidivl
icebp
jp
mov
inc
or
push
lret
jb
push
sub
xor
and
xor
stos
and
pop
icebp
xor
idivb
addb
sub
inc
cmp
lock
test
lods
mov
aas
xor
stc
inc
mov
jge
rcl
gs
xchg
push
push
enter
iret
test
shlb
mov
imull
inc
loop
gs
fs
pop
mov
mov
addr16
jle
add
and
lret
sbb
jp
mov
repnz
ret
fidivrl
movsb
mov
dec
sub
mov
mov
jno
lock
add
jmp
in
inc
enter
in
dec
shll
int3
bound
dec
inc
xchg
xchg
or
std
sarl
inc
add
fs
push
jne
pop
dec
xlat
cmpsl
cmp
mov
and
push
pop
jmp
sbb
or
jl
fcoml
push
xchg
mov
adcl
jno
sbb
sub
fcomp
loop
sbb
jmp
movsb
xor
out
ficoms
lcall
ss
ret
and
and
insb
or
mov
xchg
inc
dec
or
in
fdivrl
xor
add
pop
test
test
mov
xchg
subl
cltd
push
adc
data16
sub
sub
out
les
inc
xchg
or
xorl
mov
push
xor
scas
push
xchg
jbe
mov
popf
shl
bnd
addl
or
cli
aad
mov
push
mov
loopne
adc
sti
lods
add
dec
dec
sbb
add
ss
fildll
pmullw
or
jae
dec
inc
ss
and
jp
lods
jne
jl
fwait
pop
push
cltd
push
cmp
movsb
push
push
ljmp
stos
push
shll
jmp
xchg
scas
mov
jo
push
inc
lret
xor
cli
aad
lahf
aaa
cmp
in
mov
jmp
ljmp
and
cmc
in
cvtpi2ps
shl
mov
push
xchg
sbb
call
xor
dec
cmp
pop
xor
lcall
lahf
jl
loop
cmp
stos
xor
insl
inc
mov
xor
mov
mov
dec
mov
mov
in
add
xorl
mov
imul
popa
dec
gs
mov
shlb
aas
xor
bound
cmp
adc
pop
jecxz
das
mov
popf
and
mov
mov
push
lods
outsl
lods
call
mov
mov
in
ds
adc
loope
add
sbbb
popa
jnp
fistps
lock
and
jle
stos
jno
jnp
scas
pushf
and
test
orb
fcoms
dec
mov
fs
add
lods
jmp
into
leave
sub
jns
sbb
inc
sub
xor
jle
push
mov
outsb
les
xchg
mov
push
out
das
sub
test
sbb
lcall
movsb
add
aaa
es
addr16
div
dec
pop
inc
ds
rolb
mov
dec
cmpsl
adc
pop
jne
cmp
into
je
lods
fwait
aam
js
and
pop
jae
loop
sbb
jb
adc
jp
mov
dec
movsl
das
ja
push
push
cld
cmp
pop
idiv
mov
aaa
fists
in
out
je
and
iret
leave
adc
add
inc
xchg
pop
push
rorl
aaa
jecxz
dec
mov
mov
xor
enter
mov
sbbl
lret
xor
rorb
arpl
jp
and
dec
xchg
cmpsl
and
cmpl
cwtl
push
mov
xor
movsl
outsl
aaa
decb
mov
in
shrl
lret
sub
adc
shll
xchg
push
icebp
xor
sti
add
fwait
sub
int
in
bound
outsl
ja
xor
cltd
dec
bound
add
push
dec
imul
stc
push
loopne
data16
test
add
rcll
cmp
inc
dec
lahf
pop
pop
les
and
dec
add
ljmp
pusha
cli
iret
stc
std
adc
xchg
mov
scas
xor
cli
jge
dec
leave
jp
imul
add
xor
mov
sub
loope
xor
adc
pop
xchg
xor
rcrl
sub
ljmp
jne
mov
aas
addl
fs
stc
imul
jmp
rcrb
enter
jle
rcrl
aad
rcrl
insb
jae
in
pop
je
adc
lret
rcll
jbe
cmp
and
push
iret
push
pushf
sbb
mov
test
lock
inc
addr16
insb
xlat
in
nop
rcll
xor
lds
lods
je
stc
icebp
dec
jno
mov
mov
xchg
or
test
mov
mov
jns
ss
push
or
insb
cmc
sub
rclb
aad
inc
lock
cmp
inc
mov
fbstp
push
xlat
loop
push
shrb
xchg
cltd
mov
xor
fidivl
sbb
pop
inc
mov
pushf
xchg
dec
or
add
or
xchg
arpl
mov
sbb
inc
jb
xor
daa
sti
and
fsubrl
jle
cmp
or
arpl
mov
test
orl
xchg
push
sahf
insb
push
cmc
stos
jb
cmpsl
out
ja
in
jmp
das
mov
jg
jns
ljmp
dec
jg
cmpb
mov
cmpsb
or
mov
lea
xorb
aam
xor
sub
pop
dec
push
add
push
cli
and
and
and
pop
jecxz
xor
adc
sub
adc
hlt
fildll
imul
add
add
mov
aad
pop
aaa
cmc
std
jecxz
clc
enter
roll
add
cmpsb
aaa
dec
add
ja
xchg
stc
lret
stos
aaa
dec
decb
arpl
cmc
xor
pop
movsb
xlat
enter
jne
mov
orl
dec
jp
popa
sbb
popa
push
jo
push
popa
push
in
dec
setae
pushw
push
dec
sbb
or
andl
icebp
mov
call
lcall
xchg
out
fistl
lods
xchg
jmp
adc
fmuls
inc
jae
in
ss
stos
fnstenv
fcoms
addr16
loope
pop
gs
clc
inc
dec
enter
notb
fs
pop
push
fcmovb
test
cmp
push
je
inc
jns
call
insl
je
test
pop
into
and
adc
cmp
iret
inc
hlt
and
dec
dec
jge
lret
mov
xchg
call
jmp
call
sahf
mov
es
add
bound
jb
test
into
sub
iret
dec
movsb
mov
mov
mov
loopne
pop
lahf
aad
cmp
orl
pop
mov
adcl
shrb
es
clc
jp
fcmovne
adc
sbb
ljmp
jnp
add
mov
jnp
rcrl
enter
outsl
fmuls
mov
mov
dec
xchg
cs
aaa
adc
int3
pop
cli
popa
lcall
es
pusha
adc
cmp
repnz
fs
loope
icebp
stos
scas
call
icebp
repnz
cmp
mov
mov
sub
repz
ret
sar
sub
adc
lret
inc
mov
call
pop
mov
mov
in
mov
aas
test
mov
and
sbb
aaa
dec
ror
jmp
adc
jbe
test
cmp
push
push
xor
rcll
test
bound
cmpsl
jmp
mov
inc
pop
pop
fidivrl
test
add
ret
lahf
push
fnstsw
and
inc
sbb
loop
pusha
xchg
lret
xor
push
dec
popf
add
mov
jge
gs
aad
pushf
lret
lahf
dec
repz
jl
cmp
in
out
aam
sbb
cmpsb
sub
mov
inc
testb
adc
inc
hlt
in
mov
pop
jae
sub
mov
ja
outsl
xchg
loopne
enter
jnp
mov
out
pop
inc
sahf
test
push
jnp
pop
mov
decb
sub
int
pop
push
or
jmp
popa
mov
mov
cwtl
imul
mov
das
jne
sub
imul
xchg
and
jle
iret
dec
fdivs
pop
xor
push
mov
xchg
mov
icebp
and
pushf
rcl
lods
jle
in
and
add
subb
inc
jno
inc
inc
bound
dec
sub
loopne
clc
dec
jg
sarl
mov
ja
outsl
mov
mov
dec
push
inc
sti
pop
mulb
sbb
xchg
push
cmp
ss
add
xlat
inc
add
test
sub
test
add
dec
xchg
xchg
in
test
push
jno
out
adc
loopne
mov
inc
xor
mov
test
sub
and
int3
fistl
ss
and
movsb
dec
jbe
sbbl
sub
test
cwtl
mov
cli
fwait
mov
aas
enter
in
jmp
xchg
xor
leave
mov
pusha
or
cmpsb
or
fs
fwait
pop
ss
push
nop
mov
hlt
aas
shlb
mov
mov
cltd
dec
xor
enter
out
dec
dec
or
insl
push
cmc
data16
lahf
int3
adc
test
in
les
loope
cmp
in
sub
mov
stos
or
pop
adc
mov
mov
jmp
movsbl
inc
scas
lds
mov
pop
out
call
xor
cld
stos
mov
and
dec
mov
fisttpll
pop
jnp
sahf
aad
jo
push
test
setb
iret
popf
cmp
mov
hlt
cmp
enter
xchg
test
ficoml
outsl
add
jp
sub
imul
cmpsb
adc
mov
loop
inc
add
int
ret
mov
sub
xorb
and
jge
mov
sbb
mov
mov
xchg
aad
mov
repz
loopne
mov
push
rcll
mov
mov
cs
scas
adc
fisttpll
sbbl
aaa
sbb
add
lret
std
pop
sbb
fcomp
and
shl
sbb
pop
mov
jb
repnz
mov
or
sti
mov
ret
mov
popf
std
xor
dec
push
inc
mov
mov
xor
sar
mov
add
call
mov
pop
daa
in
lret
sub
mov
mov
das
mov
inc
pop
and
sbb
mov
hlt
jle
inc
aaa
dec
mov
aam
dec
fsubrs
out
xchg
rcrl
aaa
cmp
arpl
js
inc
xor
dec
icebp
pop
pop
cmp
add
clc
xor
movsl
mov
jbe
cltd
jmp
and
dec
sub
mov
or
cs
insb
sbb
fwait
mov
fisubrl
out
xchg
cmc
mov
scas
movsl
and
movsb
push
push
pop
pop
stos
push
cmpsb
lahf
add
inc
mov
mov
loope
adcl
rolb
dec
hlt
scas
adc
xchg
shrl
icebp
jns
adc
cli
out
repnz
icebp
and
aam
pop
out
cmp
pop
das
and
jno
addr16
sub
rorl
outsb
rcrl
orb
or
xor
jb
cmc
push
mov
mov
add
xchg
leave
xchg
outsl
shrl
flds
add
pop
sub
cmc
sub
and
sub
test
cmp
movsb
jb
in
loope
imul
add
jle
je
repnz
gs
loopne
mov
and
out
loope
cmpsb
mov
js
and
cmp
jo
insl
insb
and
dec
and
enter
addr16
xchg
outsb
xchg
or
ss
pushf
popl
sbb
test
xor
ret
or
js
cmpsl
xchg
sbb
bound
add
jge
adc
clc
xor
mov
xor
jne
cltd
imul
fwait
pop
test
lret
cli
leave
les
in
and
jbe
repnz
mov
or
repnz
mov
jo
xlat
fld
inc
out
jbe
and
faddl
ret
inc
pop
push
aas
pop
mov
adc
pop
in
sub
out
out
xchg
enter
or
inc
frndint
mov
lret
and
cs
sahf
imul
movsb
xchg
pop
in
test
in
push
ret
testb
mov
or
imul
fwait
inc
lods
push
lods
push
cmpsb
test
aaa
mov
out
xchg
cmp
add
roll
inc
inc
stos
xchg
jns
lods
imul
add
shl
push
inc
dec
ds
bound
inc
cmp
pop
add
loope
push
cld
mov
bound
into
pushf
jmp
xlat
scas
dec
inc
stos
nop
mov
cmc
in
test
mov
mov
cmp
int3
dec
cmp
or
dec
ja
sub
mov
inc
push
and
xchg
inc
adcb
dec
lods
jl
scas
pop
sbb
mov
push
lock
xchg
insb
in
in
dec
push
aad
int
cwtl
add
dec
mov
pop
push
and
fs
pop
xchg
fldenv
jno
movsb
cwtl
cwtl
push
jmp
ljmp
fucomp
sbb
loope
loope
daa
popf
mov
mov
decl
in
pop
rcrb
shr
sahf
test
cmp
sahf
mov
mov
ljmp
sbbb
sahf
cmp
imul
fstpl
cli
fs
lret
das
xchg
loope
int
mul
dec
adc
mov
push
xchg
lock
movsl
jg
popf
or
pop
std
popa
outsb
enter
shl
stos
loopne
cmp
dec
lods
xchg
andl
ror
jb
out
ficompl
mov
sbb
xchg
outsb
mov
cmp
ret
jecxz
fs
dec
sub
out
das
fnsave
inc
stos
outsb
test
adc
mov
pop
cli
adc
xchg
adc
lea
xchg
xor
pop
xor
add
jmp
jp
int
ljmp
insl
andb
sbb
hlt
inc
out
fists
mov
stos
jmp
imul
std
xor
xor
jmp
lahf
mov
movsb
lods
dec
cmp
inc
scas
push
test
xor
cmpsb
pop
cli
dec
xchg
mov
pop
pushf
cli
cld
mov
rcrb
push
gs
dec
insl
repz
jg
mov
cltd
cli
insb
cwtl
imul
fstpt
rorl
add
pop
loop
pop
das
adc
cmpsb
scas
mov
icebp
dec
sti
clc
cltd
insb
xchg
jg
and
pushf
mov
insl
add
xchg
dec
or
mov
dec
orb
sub
inc
xchg
out
push
push
lods
dec
cltd
jae
jl
xlat
fs
mov
cmp
popf
lds
dec
jno
add
or
lods
hlt
arpl
pop
lods
cmpsl
jb
cmp
or
repz
pushf
mov
rol
pusha
pushf
movsb
dec
shlb
sti
xchg
inc
test
es
sub
cld
outsl
pushf
sub
sub
scas
sbb
rcrl
test
adc
mov
jne
rcll
adc
mov
pop
lds
stc
jbe
pop
leavew
mov
add
inc
add
lahf
jbe
mov
mov
sbb
test
shll
ds
in
iret
xchg
rol
lea
in
push
outsl
add
adc
push
repnz
das
push
sub
cs
add
adc
and
sbb
popa
mov
fistpll
les
mov
lret
jb
inc
imul
and
mov
leave
jnp
cmp
andb
pop
cltd
pop
repnz
aad
mov
inc
mov
in
inc
iret
nop
sub
push
enter
mov
push
movb
dec
jecxz
or
cmpsb
sub
movsb
sarb
je
pop
fistps
jge
movsb
fstpl
stc
hlt
cmp
iret
push
adc
xlat
stos
mov
adc
cmp
xchg
lahf
adc
imul
testl
push
outsb
rcrb
outsb
cmpsl
mov
out
into
lock
mov
xchg
movsb
scas
jecxz
ss
push
es
sub
daa
dec
cmp
icebp
scas
shlb
jne
pop
mov
pop
push
dec
cmpb
popf
mov
or
mov
scas
jo
iret
inc
or
jns
jo
inc
daa
dec
pop
xor
adc
in
pop
mov
bound
pop
loopne
mov
fcompl
test
or
mov
mov
nop
scas
scas
jo
pop
inc
mov
sbb
icebp
dec
push
cmp
cmp
inc
sbb
clc
sub
stos
or
movb
incl
adc
push
dec
sbb
dec
in
hlt
or
mov
sub
or
jge
xchg
lahf
mov
aad
xchg
adc
fwait
idiv
sub
inc
int3
add
mov
cmpsb
mov
fdivrs
call
cmpl
loopne
orb
repnz
loope
es
push
sahf
push
imul
pop
sbb
and
sti
push
aad
rclb
cltd
lcall
dec
mov
and
rcl
outsb
cmpsl
and
cmp
pop
and
xorl
pop
adc
stos
pop
cmp
nop
cld
sub
xor
cwtl
sub
enter
call
mov
push
out
push
mov
imul
fldl
mov
subb
rcr
pushl
loopne
xchg
mov
aad
sbb
mov
stc
cmp
ret
push
or
mov
pop
cli
add
and
fistpl
push
fcomps
push
and
aam
mov
mov
outsb
mov
enter
test
pop
dec
addl
ret
push
pop
push
in
adc
or
add
pop
test
jg
sbbb
push
rcr
dec
xchg
imul
popf
in
mov
sbb
insb
jnp
lock
cwtl
dec
fcoml
lods
arpl
push
repz
test
es
enter
mull
ret
and
or
cmp
or
imul
dec
xchg
mov
stos
push
ret
insl
je
lods
pop
gs
cs
xchg
sbb
xor
test
mov
mov
add
xchg
xor
jns
mov
test
in
dec
push
gs
shrl
loop
sar
jo
pushf
cld
dec
sbb
cs
sbb
fdivl
jae
push
adc
out
mov
test
lea
inc
in
sub
dec
outsb
emms
out
lock
arpl
dec
mov
mov
lea
fwait
jb
sbb
mov
pop
xor
sbb
xchg
lds
mov
sub
cmpsb
or
sub
jno
filds
pop
xchg
bound
mov
test
add
sbb
lret
inc
mov
dec
movsb
ret
jns
and
faddl
repnz
cmp
inc
adc
sbb
jmp
mov
lret
sbb
and
outsb
mov
dec
cli
inc
das
jb
pop
xor
int
jnp
cld
in
adc
les
sub
or
sti
adc
inc
inc
mov
adc
jmp
cmp
mov
pop
push
lahf
or
sub
mov
inc
or
lcall
lahf
shrl
pop
mov
sub
pop
aam
push
add
movlps
cmpsl
popa
out
cmp
dec
das
leave
bnd
repz
lret
adc
jno
mov
hlt
add
mov
jno
out
mov
or
and
sbb
insl
icebp
or
aas
sub
push
adc
sub
jp
jge
push
sub
jmp
dec
push
add
ret
mov
mov
mov
mov
dec
test
fistl
out
xchg
jne
bound
pop
pop
jl
addb
xlat
je
lcall
pop
sbb
and
cli
xor
outsb
ss
loopne
mov
cmp
mov
loopne
lcall
pop
adc
aaa
mov
ja
pop
leave
inc
sbb
and
lea
stos
daa
cmp
mov
mov
inc
rcrl
push
sahf
and
leave
popa
aam
or
shl
add
popa
or
mov
jns
rcl
adc
test
mov
scas
pusha
xor
mov
and
jne
and
test
push
addr16
and
loope
in
stos
xor
ss
inc
out
adc
xchg
roll
ret
scas
add
xchg
xor
data16
cwtl
lahf
xchg
ljmp
daa
jns
inc
mov
aas
ja
je
jnp
pop
xor
movhps
out
cmpb
sub
adc
divb
jnp
add
pop
into
push
into
jnp
shlb
cs
pusha
arpl
mov
sub
out
movsb
push
and
lcall
fsubrs
stc
push
pop
jmp
es
mov
jecxz
movsl
dec
cmp
lds
in
pushf
or
sahf
add
inc
or
sub
xchg
mov
mov
push
and
ror
andb
mov
push
sub
cmp
inc
inc
icebp
test
pop
push
mov
int3
cwtl
dec
mov
adc
in
fcoms
sbb
aaa
sub
cmpsb
iret
mov
das
mov
push
inc
xchg
test
movsl
dec
idivb
xor
iret
add
scas
lods
mov
jbe
lcall
insl
in
sbbl
dec
mov
xor
repz
andb
lahf
into
cmpsl
loope
adc
dec
dec
aad
leave
cmp
xlat
add
scas
jns
push
sub
ss
dec
mov
rol
dec
cltd
sub
mov
inc
pop
stos
out
ds
popa
dec
pushf
xchg
pop
insb
sub
and
jno
and
add
insl
push
push
cltd
in
lahf
cld
fwait
xchg
mov
xchg
divb
sub
jmp
jo
or
or
mov
dec
mov
rep
inc
pop
add
jbe
lea
push
int3
inc
lds
in
imul
mov
sub
test
inc
mov
fstpt
mov
push
dec
jp
inc
mov
mov
mov
mov
jne
dec
addr16
cmp
jmp
popf
jl
imul
out
leave
push
iret
mov
xorl
iret
or
cmp
dec
jnp
xor
xchg
mov
sbb
xor
ljmp
adc
sbb
pop
cmp
cli
int3
testl
add
int
sub
shrb
sarb
mov
cli
jns
mov
out
inc
mov
cmp
and
xchg
xchg
mov
test
cltd
mov
mov
aas
add
in
inc
pop
cmp
xlat
mov
xor
rcl
js
mov
inc
add
inc
leave
fs
scas
cmp
sub
fwait
es
mov
jb
cmp
inc
lea
outsl
pop
inc
pop
orl
push
mov
fdivrl
dec
shl
test
aaa
loopne
and
jge
push
icebp
pop
mov
lahf
sub
out
pusha
icebp
inc
xor
ss
or
gs
mov
mov
cmp
and
mov
imul
mov
sbb
xor
aaa
cli
adc
fidivl
mov
out
ss
mov
lock
dec
sub
and
or
fsubp
outsl
xor
mov
xor
pop
mulb
jnp
insb
mov
sbb
cmpsl
cs
xorb
mov
cmp
mov
ss
insl
shl
or
lods
adc
mov
out
and
adc
bound
mov
mov
xchg
inc
adc
sub
pop
push
stc
add
push
adc
xor
test
pop
sub
cmp
jecxz
push
and
xchg
repz
fsubrl
add
jg
test
push
outsl
pop
in
clc
adc
jmp
mov
mov
mov
test
jae
cmp
lret
mov
mov
push
or
or
add
ljmp
lock
stc
shl
jo
hlt
xor
sbb
mov
push
jne
out
dec
mov
pop
add
sub
jo
scas
ss
pop
pusha
adc
hlt
popa
fmuls
ret
push
or
lret
sar
outsl
stos
je
xchg
in
push
fdivrp
xlat
popf
sahf
jnp
xchg
cmpsl
adc
inc
ljmp
mov
bound
gs
js
clc
hlt
notb
pusha
bound
jns
and
sbbl
jle
popl
pusha
nop
cmpsb
insb
pop
arpl
ror
jne
pop
insb
movsl
mov
ljmp
push
pop
popf
push
aad
lock
jg
mov
mov
add
out
mov
pop
out
pop
add
popa
mov
xor
shlb
mov
push
dec
dec
in
mov
les
xchg
outsb
mov
sahf
jmp
mov
lret
je
stos
test
jae
dec
sub
das
cwtl
js
idiv
daa
out
or
out
push
add
scas
push
insb
sahf
outsb
fwait
test
or
jns
decl
cmp
jb
sub
mov
dec
inc
insb
lret
xchg
cli
cmp
push
xchg
adc
mov
sbb
fisubrs
mov
pushf
or
sub
mov
and
pusha
iret
int
jne
out
mov
ja
int3
mov
and
test
or
cmp
push
jp
arpl
jmp
fs
mov
in
mov
clc
test
lcall
dec
pop
mov
jmp
add
xor
pop
and
hlt
jo
out
xor
rcl
int
in
xor
adc
add
lods
jae
jo
out
sbb
and
lret
sbb
xchg
xor
out
js
inc
adc
add
xchg
aaa
cmpsb
push
jbe
outsb
adc
aad
push
cld
mov
popf
xor
test
icebp
cmpsl
daa
movsl
stc
jg
inc
inc
test
xchg
pop
mov
mov
cmp
lret
fcoms
in
mov
bound
xchg
sub
mov
imul
cwtl
mov
fwait
add
add
and
push
jle
inc
xor
mov
aam
aam
fidivrl
cmc
mov
rcr
into
divl
sub
mov
cwtl
test
adc
adc
pop
stos
lock
or
clc
mov
and
ljmp
inc
cmpl
mov
enter
stos
aas
push
fstl
stc
jo
imul
push
pop
mulb
adc
mov
xchg
mov
lods
lcall
and
movsl
insl
jne
jnp
xchg
cmp
leave
sti
xlat
xor
pop
mov
pop
push
popa
pop
stos
or
xchg
pop
pop
mov
inc
movb
xchg
fsubl
dec
push
ficoml
loope
dec
int3
sub
mov
jmp
scas
repnz
jge
sbb
out
andb
xchg
xchg
push
sti
cmpsl
and
cmpsb
xor
test
ljmp
mov
leave
inc
cmp
clc
jno
jp
dec
inc
lods
into
jge
pusha
sbb
movsb
pushf
push
setnp
aad
mov
dec
jbe
jns
lcall
xor
jnp
mov
inc
dec
inc
push
ss
xchg
int
lods
test
add
xchg
mov
sbb
ret
push
addr16
fcoms
cmp
push
adc
in
imul
mov
xor
cwtl
jnp
mov
jns
cltd
and
sbb
fldcw
and
ret
sbb
imul
and
icebp
mov
out
popa
ljmp
push
inc
je
push
push
sub
adc
mov
adc
inc
cmp
and
fincstp
fdivs
ss
sub
cmp
sbb
cltd
insb
clc
test
cmp
test
push
mov
adcb
cmpl
lock
enter
adc
xchg
cmp
mov
scas
sub
pushf
sbb
jmp
jl
lds
movsl
cmpsb
lcall
outsl
push
movsl
sbb
cld
cmc
inc
mov
out
aam
les
and
or
je
fcoml
lret
frstor
lds
push
lods
or
test
pop
or
sahf
sub
movsb
popa
push
in
or
lods
push
rorl
fstps
das
sub
out
dec
mov
int3
imul
mov
adc
push
jp
stos
enter
jl
lcall
jae
js
cwtl
pop
jl
sbb
xlat
hlt
and
jb
ret
movsl
or
sbb
push
and
in
addl
sbb
cmpsb
dec
push
sti
cmp
xor
ss
movl
add
add
mov
int
imul
xor
xchg
mov
sbb
lea
leave
or
pop
adc
clc
fmul
mov
mov
inc
mov
aas
aaa
push
sbb
scas
pusha
pop
mov
outsb
xchg
nop
pop
adc
loopne
mov
cli
imul
sub
lret
and
cmpsb
imul
into
sbb
clc
mov
sti
fdivrp
popf
shrl
push
jnp
in
push
xor
out
ljmp
out
call
mov
mov
cld
arpl
fsubrl
dec
fiadds
aam
xchg
mov
sarb
notl
outsl
repnz
pop
lea
mov
fwait
gs
mov
xchg
shrl
data16
outsl
dec
or
test
cmp
jbe
fwait
rorb
fiaddl
inc
iret
out
mov
mov
push
mov
dec
sub
push
and
push
popf
inc
ljmp
out
fldenv
mov
sbb
sahf
rcl
xlat
cmc
cmp
mov
mov
pop
jns
pop
xor
js
xor
es
mov
andb
data16
sbb
arpl
inc
push
inc
and
pop
sbb
test
adcl
cmc
test
xchg
pop
cmp
scas
dec
or
test
shlb
inc
push
push
cld
nop
lahf
insb
rcrb
mov
jl
xchg
mov
lods
icebp
loop
sub
hlt
insl
arpl
cmp
sbb
mov
push
jns
scas
test
and
outsb
xchg
sbb
ss
mov
daa
adc
cmp
add
data16
ret
adc
add
pop
mov
jl
mov
imul
jmp
cld
jmp
in
icebp
lods
imul
ja
cmpsb
lock
pop
inc
outsb
mul
shrb
test
test
cmp
inc
cmp
pop
outsl
jbe
cmp
fnstsw
mov
lods
jne
add
popa
iret
inc
mov
dec
dec
mov
fcompl
aaa
inc
mov
sbb
and
fiadds
xor
or
pop
popl
ljmp
in
enter
les
add
imul
or
stc
sub
cwtl
pop
les
fbld
lods
push
adc
fildll
push
ficompl
adc
sbb
inc
data16
addl
loope
in
cmp
jno
fs
test
sbb
mov
push
lahf
jnp
mov
aad
outsl
sahf
cmp
xor
mov
mov
fistps
push
jmp
cs
sbb
push
adc
inc
xchg
std
loop
adcb
test
push
stos
sub
cmp
out
cmp
mov
fisttpll
test
ss
mov
push
mov
gs
mov
out
popf
inc
cwtl
mov
push
push
sbb
pop
push
mov
xchg
imul
mov
mov
test
rcrl
jg
and
push
or
pcmpeqd
arpl
mov
fisttps
push
sub
add
arpl
mov
xor
add
mov
stos
inc
jne
pop
push
ja
adc
lret
ret
add
pop
and
jb
test
jecxz
push
iret
cmp
inc
or
jns
stc
mov
xchg
or
pop
repnz
mov
adc
adc
out
ja
data16
addl
jmp
je
popf
mov
pop
mov
test
fs
jge
out
jl
push
or
jmp
dec
push
imul
pop
stc
mov
mov
outsl
add
xor
push
cmc
push
ret
mov
lret
xorl
data16
fs
add
add
or
in
sub
mov
insb
pop
outsl
mov
xor
fnstcw
mov
jg
cwtl
fcomp
pop
jnp
cli
out
xchg
push
lock
js
mov
inc
xchg
cmp
xchg
sub
fistps
shlb
shll
jns
daa
inc
xchg
sub
ret
pop
jno
and
hlt
std
enter
scas
seta
push
mov
add
pop
jb
dec
mov
dec
jmp
lods
cmc
lret
shlb
sub
addr16
in
adc
je
add
dec
fsubp
xchg
bound
pop
sbb
arpl
into
popa
inc
daa
daa
mov
in
sub
adc
mov
lods
mov
rcrl
mov
movsl
addl
mov
shrb
jo
jp
mov
sbb
test
push
pushf
mov
loop
and
mov
push
mov
fisubl
mov
call
mov
outsl
gs
pushf
test
xchg
lock
xor
cli
jge
mov
es
pop
or
in
lods
xchg
dec
mov
mov
aam
adc
movsl
mov
mov
loope
insl
scas
dec
adc
mov
fiadds
je
jmp
mov
outsb
leave
test
push
into
sbb
dec
pusha
imul
cmp
fsts
mov
push
add
mov
inc
and
scas
push
inc
mov
into
sti
xchg
xchg
int
add
mov
outsl
rcrl
popa
pop
ja
sbb
xlat
sbb
iret
push
jae
rcr
xchg
jp
pop
shr
adc
mov
pop
cmp
cmp
and
out
sub
ds
jne
loop
adc
daa
scas
call
pop
or
add
pushf
mov
cmpsl
xchg
repz
dec
and
and
and
stc
or
xchg
dec
outsl
sub
and
inc
pop
adc
mulb
push
pop
loop
jg
cwtl
cltd
sbb
bound
mov
and
cmp
test
mov
jmp
fnstcw
test
jecxz
jmp
cmp
cwtl
xchg
xchg
insl
in
clc
mov
nop
fdivrs
scas
les
sbb
inc
clc
and
mov
inc
scas
mov
data16
add
or
imul
add
subb
pop
int3
xor
test
fidivl
xor
fcoml
stos
in
out
cmpsl
and
aaa
mov
test
pop
gs
fsts
push
xchg
xchg
dec
pop
and
xlat
cmc
xor
fsubs
cmp
cmp
sbb
das
push
mov
ljmp
pop
mov
mov
daa
push
push
es
ja
cld
jns
sahf
dec
dec
test
mov
mov
lods
push
adc
out
ja
icebp
shr
adc
xchg
aam
mov
jge
clc
push
jp
and
sub
popf
addb
out
scas
or
mov
rcrl
jnp
add
cmpsb
mov
sahf
sti
jno
pop
test
mov
rorb
xchg
rcll
jns
pop
popl
in
fadds
pop
push
loope
ret
aas
xchg
push
dec
sti
out
xchg
sti
pop
jle
cmp
cmp
pop
fimuls
mov
sahf
inc
pop
cmp
gs
xlat
jecxz
fwait
je
into
insl
mov
aad
xchg
mov
pop
dec
fsubl
fdivrl
jb
xor
sbb
cmp
insl
push
adc
jg
sar
clc
jae
ficoml
cmp
inc
movsb
adc
stos
pop
dec
test
mov
jg
outsb
movsl
out
lcall
mov
lods
push
sbb
adc
push
mov
cmpsl
cmp
notb
dec
mov
and
adc
xchg
adc
ljmp
pop
fdivs
lods
into
xchg
mov
jecxz
sub
int3
sarl
adc
pop
or
cli
addl
popa
adc
push
sti
ret
pop
in
and
adc
mov
nop
fcompl
xor
cmp
mov
mov
inc
xchg
cld
inc
jae
in
sarb
scas
ss
ljmp
sbb
outsl
pop
lret
mov
js
sub
dec
xchg
test
enter
cmp
je
mov
cmpsl
fldlg2
out
mov
mov
pop
stos
pop
jecxz
es
mov
or
mov
repnz
push
push
frndint
push
cltd
xchg
sub
or
sub
pop
xor
gs
cld
add
and
cmpb
ret
call
sub
add
sbb
pop
pop
mov
xchg
mov
push
mov
imul
push
cli
cmpsl
loope
nop
ss
sahf
push
rcl
pusha
adc
mov
cmpsl
aam
sar
mov
jns
mov
mov
mov
lret
add
dec
lret
add
ja
xorl
cld
fsubrs
xchg
push
in
xchg
cmpsl
leave
adc
xchg
outsl
stos
out
lahf
mov
cmp
sub
xchg
movsl
pop
aaa
and
push
inc
dec
mov
add
sbbl
jo
les
push
shrb
je
mov
push
movsl
lret
adc
inc
xor
pop
sbb
pop
pop
xchg
mov
xchg
mov
insb
inc
adc
sub
mov
rcll
push
lret
loop
add
sub
mov
ljmp
enter
push
push
jne
je
in
inc
or
pushf
lock
mov
fcoms
xor
lcall
sub
lahf
and
jl
mov
inc
push
repnz
pusha
sbb
mov
dec
mov
push
fldenv
pop
repnz
adc
push
lret
cmp
jle
popf
jb
push
xchg
clc
xor
inc
xchg
imul
push
jl
mov
faddl
jns
ret
jp
call
stos
ffree
outsb
cmp
xchg
stos
sahf
inc
pop
xor
push
addr16
adcb
mov
ja
and
das
adc
stos
cmp
inc
jne
pop
fiaddl
ds
ja
addr16
in
or
add
sbb
les
cltd
mov
stos
inc
arpl
aas
xchg
push
in
sub
enter
imul
mov
leave
push
jns
adc
push
jne
jmp
mov
lahf
cwtl
adc
xor
rcr
jno
sarb
arpl
pop
xor
ret
add
xchg
iret
nop
add
fildl
adcl
scas
add
lahf
fiaddl
les
jge
sbb
lea
push
adc
jg
cmpsb
shl
fimull
fisubrl
push
xchg
jns
fwait
repnz
pushaw
jmp
cmp
and
dec
popa
fstpt
ror
push
out
andl
mov
lcall
sbb
idivb
lods
fs
pushf
adc
push
adc
pop
je
or
xorb
iret
notl
inc
xchg
jge
xchg
pop
mov
and
fdivrs
dec
ds
into
pop
mov
mov
jne
push
mov
mov
in
pop
add
push
mov
cmp
add
lret
repz
rcrb
add
jmp
out
adc
lock
mov
push
add
mov
cmpsl
sti
out
dec
inc
push
dec
xor
ljmp
outsb
push
cmp
and
adc
sti
das
subl
jp
sbb
mov
ret
out
xchg
pop
mov
in
mov
in
xor
sub
or
aad
sub
aad
mov
push
ret
rol
addr16
aad
rcrl
mov
rol
rcll
and
pop
sub
jae
aam
lea
subb
adc
clc
int
mov
pushf
xor
movsb
clc
cmpsb
rcrl
into
cmp
cwtl
xchg
push
xor
lds
adcl
cltd
out
xchg
repz
std
jae
push
test
fbld
sub
aaa
push
sub
pop
pusha
in
test
subl
pop
push
xor
loop
insb
cmpsl
or
arpl
addr16
sub
pop
arpl
test
jmp
lds
sub
pop
xorb
pushf
or
outsl
sbb
mov
or
sbb
scas
sbb
cld
lods
xchg
sbb
lock
dec
popa
insb
sbb
clc
pushf
jo
and
data16
inc
sub
sahf
shll
mov
fs
sub
cwtl
lahf
adc
jg
fwait
rcrb
imul
mov
lcall
shrl
sub
leave
scas
push
sahf
jmp
pop
mov
ud1
pushf
lds
rcrb
test
mov
mov
sti
dec
popf
dec
sarb
sti
iret
push
or
mov
daa
sub
clc
add
enter
jnp
or
sbb
daa
sub
jae
pop
pop
mov
cmp
out
mov
xor
nop
push
inc
scas
push
and
cmpsl
std
daa
jg
add
push
ja
adc
mov
or
std
dec
mov
bound
fwait
xchg
xchg
or
pop
jae
fcomps
leave
fpatan
repz
xchg
std
in
dec
cmp
mov
and
sub
lea
sub
scas
xor
jnp
incb
jne
aas
xor
int
mov
or
xor
pop
movsb
cld
dec
jns
adc
sbb
enter
adc
xchg
sbb
ds
test
inc
sub
or
cmpsb
cmpxchg
aas
or
dec
ljmp
test
inc
xor
lock
sbb
das
push
clc
or
add
daa
jle
jb
xor
aam
dec
pop
je
and
mov
sbb
fnsave
std
popf
scas
rorb
mov
push
jo
and
jle
dec
jo
mov
jbe
aas
test
ja
out
popf
dec
jge
int3
int
or
mov
lods
sub
mov
sbbl
cmpsl
jp
data16
call
icebp
jp
cmove
push
mov
mov
mov
cwtl
repz
adc
cmp
int3
mov
pop
cmp
out
cltd
mov
data16
mov
pop
iret
popf
lret
aas
xchg
mov
sub
jmp
mov
adc
and
add
xchg
adc
lahf
or
mov
test
sbb
pop
jmp
aam
cmp
xchg
hlt
inc
bound
mov
addr16
pop
add
fildll
pop
aad
jo
das
ss
jmp
cmp
mov
and
rolb
cmp
add
inc
int
pop
aaa
and
sub
int3
sbbl
cltd
pop
inc
scas
sub
std
sti
imul
mov
pop
adc
sub
push
div
ljmp
push
cmpsl
sub
mov
test
xchg
lock
ret
loope
cmc
popf
aas
jae
sti
cli
lret
xchg
arpl
cltd
imulb
and
sbb
mov
inc
adc
notb
clc
mov
call
ret
stos
mov
and
insb
push
mov
push
popf
adc
sub
icebp
jo
punpcklbw
jno
insl
data16
jecxz
mov
or
jo
ljmp
inc
stc
loope
fdivrl
js,pt
cmp
sub
sub
mov
scas
jno
imul
jecxz
out
das
add
sub
mov
jne
pusha
fisttps
imul
xlat
repz
jns
cltd
fs
sbb
mov
lret
push
dec
add
cmpsb
mov
sub
stos
jbe
cmp
push
mov
add
pop
shll
cmp
ds
out
cmp
jecxz
into
hlt
cmc
fs
mov
fwait
int3
pop
outsl
pop
ret
dec
sbb
dec
testb
cltd
and
push
stc
inc
fstp
and
fmuls
enter
pop
hlt
jl
push
pop
xchg
add
in
jge
xchg
test
je
subl
jge
dec
push
cmp
cmpsb
imul
mov
pusha
cmpsb
mov
mov
daa
mov
sbb
rclb
pop
jnp
dec
adc
inc
dec
xor
add
mov
mov
jecxz
leave
lcall
popf
dec
cmp
enter
mov
jo
sub
fld1
mov
addr16
adc
or
jb
shll
and
imul
xor
orb
movsl
gs
gs
bound
nop
rcll
jns
jno
mov
cld
aaa
enter
in
push
fbstp
or
mov
mov
mov
add
ret
xor
out
pop
filds
in
call
push
dec
ljmp
adc
add
repz
add
ret
jb
pop
aad
int
xor
fsubrl
lds
sub
adc
cs
xor
cmp
jne
push
push
sbb
mov
inc
dec
aad
xor
xor
push
xchg
pusha
mov
cmc
iret
jns
idivl
adc
dec
cs
mov
jge
add
xchg
ss
decl
xchg
sbb
dec
call
xchg
push
adc
jbe
xchg
out
daa
and
cmpsl
xor
jge
cmc
xchg
daa
mov
dec
jmp
mov
xchg
es
cmp
hlt
or
mov
xchg
xor
loope
dec
dec
cli
out
xchg
jnp
inc
fiaddl
lds
sub
cmpsb
dec
and
jns
mov
mov
in
inc
xor
shrl
xor
jg
and
data16
popa
push
and
sahf
mov
sub
or
add
dec
fisttps
push
xchg
xor
in
sahf
lock
in
inc
aad
sbb
ja
faddl
rcl
subl
popa
push
mov
lods
xor
fs
push
call
roll
or
les
xor
test
lea
mov
xor
lret
inc
leave
mov
test
testl
xchg
insb
outsl
push
and
fnstcw
mov
imul
jecxz
cld
and
mov
and
dec
inc
add
out
sti
mov
xor
push
clc
test
stos
pusha
sar
dec
ljmp
pushf
fwait
jmp
mov
mov
xchg
sub
add
cmp
mov
and
cmp
shlb
stos
lret
ljmp
andb
adc
dec
jns
pop
js
pop
push
ds
fnsave
dec
add
clc
lods
inc
repnz
movb
sub
cmp
adc
cltd
scas
je
cs
sbb
xchg
ret
pop
aad
pop
lea
mov
cmp
inc
lods
mov
int
xchg
mov
xchg
push
add
add
les
lea
jo
imul
and
inc
push
iret
lcall
test
test
xchg
je
push
mov
xchg
xchg
and
mov
je
mov
adc
cmp
xchg
mov
std
sti
stos
cltd
cmp
push
stc
push
out
div
jne
sbb
sub
mov
or
ds
pop
sub
call
mov
jmp
pop
mov
pop
cmpsl
mov
lea
ljmp
mov
pop
and
add
pop
into
out
inc
sub
dec
dec
or
pushf
sbb
lock
shrb
int3
pop
shll
xor
mov
pop
mov
adc
movsb
jl
or
jg
sub
cs
cmp
adc
out
mov
pushf
fs
xor
cld
push
push
in
shlb
aam
insb
sbb
jl
jbe
jnp
movsl
dec
mov
sahf
mov
lods
arpl
xchg
jmp
test
inc
je
push
adc
mov
jno
xchg
test
mov
fucom
scas
adc
or
rolb
pop
jmp
lcall
shlb
mov
sbb
add
cli
jecxz
push
mov
adc
xchg
mov
lods
popf
movsb
sub
shrl
imul
int
push
mov
jnp
add
bound
sbb
cmp
mov
adc
push
roll
loope
and
sti
out
cmp
inc
icebp
pop
shl
xchg
pushf
ja
dec
push
or
inc
in
outsb
jmp
idivb
push
aad
out
mov
lret
imul
and
inc
shll
sub
in
sbb
pop
ss
movsl
push
test
stc
jp
mov
outsl
mov
pop
mov
sub
mov
je
loopne
add
sub
mov
inc
jmp
pop
out
std
out
adc
ljmp
out
bswap
mov
add
sarb
jp
xor
xor
outsb
ja
sti
addr16
pcmpgtd
dec
push
ljmp
movsb
call
sbb
xchg
ja
add
stos
inc
mov
push
ss
mov
out
sub
cs
rcrb
mov
scas
cmp
inc
cs
iret
cs
mov
clc
and
imul
mov
ficomps
dec
test
adc
ds
jne
ja
xor
adc
sbb
mov
mov
push
insb
int3
and
inc
pop
xor
and
cmc
cmc
in
jo
ljmp
and
adcb
ret
arpl
fsubs
inc
fidivs
sub
addl
lcall
push
cmp
aad
cmp
xchg
dec
dec
in
test
ss
das
dec
out
cmp
jecxz
dec
loope
cld
mov
push
sahf
dec
xchg
xchg
or
imull
push
sbbl
ja
jnp
mov
in
push
add
adc
ja
out
movnti
mov
es
fst
mov
jns
cli
mov
cmp
lret
gs
push
inc
incb
mov
in
cmp
lret
xchg
rcl
dec
mov
roll
cwtl
rorl
or
fs
sub
mov
sbb
out
jg
cmpb
mov
pop
add
test
sahf
or
mov
in
mov
dec
xchg
sub
in
mov
or
xor
cli
scas
imul
jecxz
clc
push
push
cmpsl
loop
add
aam
popa
or
test
jmp
push
dec
pop
jae
mov
mov
fs
icebp
mov
ret
and
push
lcall
icebp
xor
test
sbb
mov
xchg
aam
loopne
mov
int3
add
fdivrs
or
pop
lock
lcall
push
and
xchg
sbb
test
mov
xchg
xor
cmpsl
mov
aam
mov
in
and
daa
jg
inc
mov
cltd
daa
and
cltd
adc
or
mov
and
or
pop
xor
sti
jbe
add
js
cmp
mov
inc
mov
stos
in
cld
inc
jl
insl
push
xchg
fcoms
inc
addr16
ror
xor
insl
mov
mov
pop
test
xchg
std
sarl
cmp
out
mov
add
and
call
and
jecxz
xchg
xor
lret
sbb
push
pop
loop
xchg
ret
add
mov
xor
mov
repnz
or
mov
mov
dec
xchg
pop
dec
mov
or
aad
push
push
loope
jecxz
jnp
fwait
roll
fistps
sub
into
add
mov
stc
sub
fdivrl
mov
pop
mov
inc
pop
sahf
test
lret
sar
inc
mov
in
repz
and
pop
inc
jb
arpl
hlt
mov
test
jae
mov
jle
mov
push
pop
inc
mov
outsl
adc
pop
es
stc
cwtl
inc
movsb
mov
mov
loopne
cmp
popa
subb
cld
dec
in
lcall
movsb
jg
push
xchg
fnstsw
insl
ret
lcall
es
jae
inc
cmp
mov
shll
jg
ss
in
xchg
divb
leave
lret
pop
dec
clc
xor
fwait
movsl
xchg
jmp
inc
daa
sub
addl
jno
mov
or
inc
inc
jo
lahf
fsubs
push
xor
push
jecxz,pn
int3
cli
popa
imul
jmp
mov
aam
ror
movsb
sbb
mov
lea
xchg
es
xchg
cmc
pop
sub
test
lea
daa
inc
or
push
or
sub
xor
add
and
movsb
jne
subl
cld
insl
sarl
xor
mov
aad
push
pop
pusha
lock
into
ja
aad
and
das
jb
inc
or
mov
sbb
fucomp
pop
mov
mov
jns
shrl
lahf
iret
hlt
cmc
adc
xchg
mov
pop
shl
pop
movsl
mov
jbe
mov
mov
jp
mov
mov
insl
lods
cmp
sarl
push
popa
or
xchg
sbb
sub
pop
inc
fucomi
stc
andb
or
cmp
cmp
jbe
outsl
gs
stc
add
mov
clc
int3
cmpl
xchg
les
loope
push
push
repz
jno
xor
jnp
xchg
jne
and
xchg
mov
push
repz
cmp
mov
lds
or
dec
ljmp
or
xlat
xchg
mov
arpl
flds
daa
out
mov
packsswb
inc
cmpsb
mov
stos
add
stos
push
sub
movsb
subl
ljmp
outsb
xchg
dec
fwait
or
or
mov
mov
enter
sbb
xchg
test
into
add
mov
hlt
cli
mov
fstpl
sbb
rcrl
xchg
int
dec
lock
xchg
inc
jnp
rcrl
xorl
sub
lahf
test
movsb
mull
push
mov
push
jb
add
or
push
jae
jmp
xlat
ret
icebp
das
enter
mov
insb
add
enter
jl
jecxz
repz
ror
insl
std
aam
leave
stos
nop
xlat
rorl
inc
orb
lock
mov
lods
and
test
sbb
jge
into
es
adc
fmull
enter
adc
jb
push
pop
leave
mov
cltd
lea
stos
xchg
cltd
dec
jno
loopne
test
or
mov
cmp
xchg
outsb
jg
xor
adc
mov
loop
sarl
jae
cmc
mov
lcall
sbb
inc
test
outsl
xchg
mov
cmpsl
jae
daa
ds
ret
pop
cld
xchg
stc
jmp
mov
data16
mov
xlat
pop
jg
imull
and
jnp
push
pop
mov
int3
xor
scas
and
jmp
mov
in
negb
lahf
jne
movsl
xor
cltd
fsubs
das
xchg
cmpsl
in
orb
and
ret
into
hlt
in
jnp
xor
lret
lock
ja
xor
and
les
push
test
sbb
out
outsl
shlb
sub
mov
jg
cld
mov
ja
fstpl
inc
repnz
idivb
and
cmp
mov
pusha
sub
inc
repz
mov
in
ljmp
xor
cmp
fiadds
sub
out
mov
std
xlat
adc
hlt
push
jne
fnsave
pop
insb
jmp
or
icebp
jno
or
popa
in
out
nop
lahf
jg
pop
pop
faddl
xchg
mov
and
sahf
sub
jle
ja
mov
sub
sub
add
repz
dec
cmp
push
xchg
xor
mov
cmp
les
and
sbb
add
mov
outsb
sub
pusha
enter
mov
sbb
loop
shr
mov
pushf
dec
stos
cmp
inc
jnp
and
gs
inc
cmp
mov
add
sub
cmp
push
pop
or
adc
call
sbb
xor
mov
pop
jns
add
cld
xor
bound
ljmp
je
imul
andl
jb
mov
xor
mov
inc
cmc
or
adc
mov
in
lods
or
inc
mov
lahf
push
hlt
pop
rolb
test
cmp
sub
js
push
add
dec
punpcklwd
cmc
cmp
dec
or
outsb
add
mov
pop
lea
out
mov
cmp
sub
js
int3
mov
cmp
inc
imul
iret
shll
aas
imulb
mov
daa
movsl
into
sub
or
iret
iret
lds
jmp
addl
inc
sbb
or
fstpl
mov
and
in
xor
out
push
xor
adc
inc
popf
xchg
hlt
sbb
test
sbb
cld
in
jmp
jne
xor
mov
pop
mov
inc
sub
adc
cmpsl
jg
xor
popa
mov
mov
mov
je
je
shl
hlt
fiaddl
icebp
cmp
push
test
sub
cmp
cmp
adcl
dec
les
enter
cmp
or
repnz
dec
rcrl
les
add
xorl
stos
insb
lods
incb
js
cltd
out
add
data16
adcb
ret
push
iret
and
cs
or
inc
push
jo
xchg
cwtl
xchg
clc
inc
sarb
add
gs
mov
shl
cld
jg
ret
stos
flds
popa
movsl
xchg
and
lea
sbb
mov
inc
fucom
cmp
cmp
cs
xchg
pop
mov
pop
add
mov
mov
lea
cmp
sbb
fsubrl
hlt
lea
js
loope
and
test
in
mov
nop
mov
push
rcr
mov
add
cld
xor
xor
mov
cs
jns
sbbb
ret
push
inc
arpl
mov
jecxz
enter
sub
mov
cmpsb
mov
icebp
push
dec
or
mov
test
fsts
push
push
mov
push
insb
cmp
inc
pop
repz
inc
mov
mov
xchg
jle
mov
icebp
and
lods
outsb
orb
je
jecxz
fldcw
clc
mov
subb
xor
cmp
iret
pop
ja
jne
test
pushf
jp
inc
clc
addr16
ljmp
pop
push
mov
nop
adc
dec
dec
int3
dec
repnz
shll
mov
and
cmp
add
push
pushf
stc
out
jb
mov
ljmp
repz
pop
cwtl
lods
mov
push
push
cmp
adc
xlat
xor
nop
hlt
cmp
pusha
bound
iret
fcmovb
fistpl
scas
dec
popf
iret
adc
mov
xchg
dec
rcrl
mov
inc
jle
xor
xchg
test
mov
cmpsl
ss
loop
push
jne
mov
mov
shrl
scas
jmp
sbb
int
push
pop
lea
or
jb
push
or
or
into
jle
fldenv
lock
in
sub
inc
xchg
mov
loop
push
inc
mov
sub
mov
adc
push
mov
jae
jno
jo
cmp
or
cmp
adc
inc
pop
or
add
cmp
sbb
mov
shlb
pushf
sub
scas
sub
and
mov
stos
mov
sbb
sarb
sub
mov
jae
fmuls
lcall
cmp
into
push
into
jp
fwait
xchg
ljmp
ret
xchg
cmpsl
and
jle
mov
dec
mov
gs
sub
mov
jmp
sbb
cmpsb
jne
movsb
mov
jne
pop
mov
inc
inc
xor
push
pop
shr
mov
prefetch
fiadds
fidivrl
jne
sub
test
imul
in
or
test
aas
test
ret
outsb
repz
push
pop
fsts
cltd
jmp
xor
stc
cmc
stos
insl
pop
int3
mov
jmp
cmpsb
mov
or
clc
fists
loopne
iret
push
lret
or
loopne
mov
nop
stos
inc
sub
scas
push
jns
jecxz
lahf
push
fld1
fisttpl
mov
xor
out
xchg
mov
adc
push
sti
ljmp
ljmp
frstor
push
pop
hlt
xchg
mov
sti
xchg
push
das
outsb
cltd
inc
lods
sbbb
push
xor
fstl
jnp
jbe
nop
cli
sub
or
popf
mov
cwtl
inc
mov
lea
mov
mov
push
mov
mul
cmp
scas
mov
sub
adc
repz
sbb
leave
sub
inc
incb
out
fsts
ret
ret
stc
decl
xchg
aam
jo
adc
scas
jnp
clc
xor
loop
push
aaa
cmp
jmp
js
mov
and
add
adc
cmc
aas
cli
movsb
repnz
sahf
ret
cmc
inc
mov
in
ret
rcrl
aad
xchg
mov
and
or
inc
aam
mov
jp
imul
sbb
loop
inc
mov
push
and
lds
mov
inc
mov
sbb
es
imul
fstpl
xchg
icebp
test
mov
or
jmp
push
mov
and
pop
mov
pop
cmpsl
jae
outsb
ror
fcom
dec
es
int3
faddl
jae
push
pop
xchg
insb
jae
xor
ret
pop
xchg
icebp
repz
aas
pop
mov
lcall
in
sub
mov
lock
push
sub
jecxz
es
push
aas
adc
dec
sub
pop
jne
mov
adc
pushf
or
arpl
sbb
push
fdivl
xor
daa
or
mov
nop
mov
je
cmc
inc
lcall
in
and
cmp
jl
int3
out
lret
jb
pushw
xchg
push
cli
pop
cltd
xor
int3
in
pushf
hlt
push
mov
mov
adc
sub
or
cmp
fstps
ljmp
pop
into
out
pop
cmpsl
push
dec
dec
jb
xchg
in
in
jb
fcmovb
and
testb
mov
outsb
or
jb
pop
mov
lea
mov
ret
test
mov
add
or
hlt
jns
imul
mov
sub
jge
adc
in
mov
iret
fs
loope
lea
add
rcl
add
repnz
pushf
or
mov
aaa
arpl
push
inc
rclb
fildll
lret
adc
adc
idivl
and
sahf
and
push
imul
xchg
lea
add
add
sar
std
cmp
jo
lret
cmp
inc
xor
into
clc
sbb
pop
cwtl
rorl
aad
mov
dec
jns
mov
sbb
rorb
xchg
stos
out
rcr
xchg
mov
loope
inc
sahf
scas
push
sub
inc
dec
push
into
aam
jno
mov
push
sbb
mov
popf
add
adc
sbb
lret
push
fnstcw
jns
and
insl
pop
push
inc
hlt
pop
orb
adc
cmp
push
hlt
push
cmp
xchg
jns
scas
loope
mov
or
lret
mov
mov
mov
arpl
inc
mov
data16
sub
test
push
mov
call
mov
jne
and
adc
pushf
hlt
xchg
mov
jge
push
pop
in
shll
pop
es
and
adc
dec
in
and
jle
mov
daa
daa
and
inc
and
cmp
xchg
jb
mov
sbb
cmp
pop
fidivs
lods
cwtl
cmp
sub
outsl
cs
add
dec
rorb
and
jle
ss
mov
ret
rol
push
jge
fsubrp
lock
push
mov
mov
in
pop
adc
stc
inc
hlt
sub
ds
mov
pop
jbe
jo
mov
mov
inc
add
test
pop
push
cmpsb
cmc
inc
push
mov
xor
jg
addr16
data16
test
mov
aaa
jle
lods
sbb
jmp
sub
ss
push
sti
xchg
mov
addl
rclb
pusha
xlat
cmpsb
mov
push
les
add
jo
inc
jmp
imul
sub
mov
shlb
dec
leave
inc
fldt
enter
sti
ds
inc
in
lods
xor
mov
mov
push
mov
push
jnp
add
aas
add
test
jnp
push
shlb
sub
ret
and
je
rol
outsl
inc
push
repnz
cli
movsb
popf
pusha
xor
sbb
loope
push
adc
cmp
push
mov
cbtw
or
mov
in
adc
lret
xchg
orl
inc
sub
lret
add
adc
gs
test
add
out
nop
xchg
fidivrl
mov
sbb
and
mov
enter
neg
adc
dec
mov
loope
pop
andl
int3
push
mov
or
decl
insl
test
mov
clc
jns
mov
dec
add
jns
js
jb
inc
xchg
sub
int
aam
test
cmp
cmp
mov
loopne
cwtl
xchg
out
sbb
int3
repz
lret
jns
and
repnz
ret
push
mov
xchg
insb
cs
sub
xor
cmp
in
fldcw
imul
std
stos
sub
call
test
in
lret
fsubrp
xor
mov
push
mov
mov
ja
loop
push
push
sbb
xor
out
lds
fstpl
jecxz
mov
jns
mov
jmp
repnz
sbb
addr16
test
adc
cmp
xlat
or
outsb
mov
jecxz
mov
shll
inc
jo
xor
xchg
fildl
loop
mov
dec
xor
mov
jl
repz
xchg
repnz
or
xor
inc
addr16
mov
orb
adc
sub
in
sbb
add
dec
mov
cmp
lret
addr16
jecxz
lea
and
addl
push
mov
adcb
insb
mov
xchg
cmp
mov
adc
pusha
dec
popa
sub
repnz
mov
and
jl
jbe
xchg
xchg
sti
in
out
ds
push
mov
dec
loope
jg
mov
inc
mov
call
cmp
mov
dec
push
in
loope
idiv
add
inc
dec
or
rorb
iret
inc
loop
ja
sbb
je
add
int
into
shrb
xchg
ret
hlt
cmpl
sub
xor
sub
push
xor
add
pushf
fdivrs
fcompl
mov
jne
inc
das
or
jl
xchg
dec
cmpsb
jae
add
cli
jnp
xchg
jno
jo
arpl
in
mov
mov
ret
test
daa
mov
aam
cwtl
mov
arpl
mov
jecxz
lcall
mov
sbb
push
xlat
push
test
in
sub
xchg
dec
loopne
je
mov
dec
add
and
sbb
pop
lcall
imul
repnz
jle
or
ds
add
call
pushf
cmp
std
daa
mov
lahf
ret
inc
jb
push
adc
pop
xor
jb
mov
dec
dec
or
xor
sbb
fsubp
lock
and
in
lock
add
arpl
leave
sbb
pop
cmp
shll
jnp
aad
or
ffree
push
mov
adc
pop
call
jge
xor
mov
pop
xor
inc
sub
loop
ret
mov
cmpsb
pop
clc
fadds
enter
fs
or
push
icebp
mov
mov
mov
mov
push
arpl
push
mov
in
push
insb
rcl
and
mov
jl
loopne
dec
sub
fldenv
js
push
lock
aas
imul
sarb
jno
dec
js
outsb
or
pushf
push
adc
or
or
lds
in
push
adc
push
int
pop
iret
ja
lret
clc
mov
pop
mov
rcrb
mov
cs
push
lret
lds
inc
push
std
lea
loopne
xchg
xchg
in
das
sub
xor
jmp
push
push
lcall
lea
mov
sbb
push
xor
sbb
fs
imul
cwtl
sub
out
push
adc
mov
sub
adc
mov
fidivs
pop
and
xchg
add
popa
out
pop
bound
push
jae
dec
outsb
push
movsl
add
aaa
pop
pushf
daa
mov
and
xlat
sbb
addr16
push
or
clc
mov
sub
push
xchg
or
stos
stos
call
jl
inc
xor
adc
mov
daa
mov
pop
ss
and
pop
faddl
mov
jp
insl
shrb
inc
xlat
push
popa
stc
clc
inc
in
rorl
mov
data16
push
push
sbb
popa
jmp
adc
xchg
sar
pop
xor
movsb
sbb
in
rorl
dec
dec
fnstsw
pop
and
mov
cltd
push
ja
adc
cmpsl
or
dec
test
mov
pop
jmp
push
in
adc
inc
adc
cmp
push
test
xchg
pop
and
fldenv
pop
lods
jae
push
in
xor
mov
stos
push
mov
and
jbe
mov
sub
sbb
inc
sbb
pop
or
and
leave
cmp
pmaxsw
dec
xchg
pop
lods
fs
ficoms
xor
xor
rorb
xlat
daa
mov
mov
mov
inc
jne
add
pop
jns
push
lret
push
inc
push
hlt
push
jge
cmp
addl
dec
dec
das
jo
pop
cld
mov
or
sbb
inc
mov
xor
cmp
dec
lret
fists
nop
js
or
mov
insb
lret
lds
sub
adcl
outsb
mov
inc
jmp
mov
xor
imul
daa
push
les
lcall
push
fisubl
add
dec
mov
shlb
ficompl
xor
adc
and
std
inc
sub
lods
xor
jo
rolb
pop
fwait
in
daa
fs
bswap
jne
hlt
inc
adc
out
and
push
jg
sbb
rcr
jb
or
and
nop
adc
inc
rcrb
dec
es
movl
mov
shr
inc
or
scas
pop
gs
cmp
jl
pop
mov
pop
cmp
repnz
and
and
into
adcl
mov
or
adc
pop
fiadds
mov
mov
fisubrs
sahf
cli
test
cwtl
push
aaa
push
imul
and
inc
shl
xchg
test
aaa
xor
insl
andl
pop
or
or
repz
aas
adc
scas
sarb
shll
xorb
lahf
mov
dec
fmuls
jnp
add
mov
cmc
data16
mov
or
rcr
mov
xchg
call
mov
pop
repz
daa
jo
mov
dec
aas
and
sub
cmp
or
jbe
call
mov
ljmp
xchg
add
lods
das
mov
push
aaa
mov
adc
test
data16
addr16
loope
dec
mov
ret
jge
xchg
dec
outsb
xchg
aaa
ds
xchg
lret
outsl
fstl
into
mov
or
nop
arpl
xchg
xor
mov
push
sbb
addr16
and
sub
aaa
rol
insl
lcall
repnz
ljmp
rclb
push
into
js
bound
nop
daa
fidivl
test
mov
sahf
pop
xorb
ret
xlat
dec
js
push
mov
ljmp
test
and
sub
pop
int3
bound
out
add
mov
lret
and
and
pop
mov
fdivs
aad
aaa
ljmp
rorb
xor
sub
ss
pop
and
adc
popa
ja
sbb
lcall
lret
aad
insb
sub
cmpl
jge
fnstcw
nop
icebp
jg
sbb
xchg
data16
add
xor
ficoml
mov
sub
aas
add
sub
test
and
ljmp
jne
pushl
fcmovne
aad
aas
inc
add
shlb
out
inc
pshufw
xlat
cmp
sbb
xlat
int
insl
jle
imul
fstp
xchg
mov
mov
imul
cmpl
jns
xor
jmp
test
cmc
jecxz
dec
in
inc
mov
repz
and
xchg
sti
push
ret
imul
and
lret
data16
iret
mov
xor
sub
stos
stos
lcall
add
dec
or
call
xchg
jb
inc
mov
jns
aas
jmp
addl
test
cmp
rep
in
aad
nop
call
cltd
repz
outsl
mov
dec
adc
push
int3
push
lret
dec
cli
addb
imul
adc
cld
les
mov
xchg
cmp
lock
js
mov
loop
mov
fbstp
orb
mov
iret
and
pop
repz
popf
add
xor
sub
clc
outsb
add
gs
push
ficomps
repz
cmc
or
sbb
cli
int
sub
sbb
sub
cmp
sub
out
pop
push
cwtl
pop
int3
addb
sub
imul
insb
jb
xchg
mov
scas
jb
mov
sarb
pop
lret
push
mov
pop
sbb
pop
or
pop
cmp
inc
ss
insb
cmp
cld
stos
imul
xor
pop
mov
pop
test
imul
in
cmpsb
jp
repz
imul
xchg
mov
dec
les
ret
xlat
ret
mov
push
clc
data16
sbb
sub
sarb
pop
das
pop
ss
sbb
movsb
scas
movsb
or
sub
data16
rcrb
mov
dec
pop
lret
or
push
push
or
pop
les
or
lock
xor
enter
jle
sbb
pop
sbb
pusha
ja
ss
mov
sub
sti
sti
dec
jo
je
xchg
jns
pusha
jl
ds
pop
push
fwait
pop
add
jg
movsb
mov
push
add
pop
rcr
pop
adc
es
scas
jl
cld
outsl
les
pop
inc
das
mov
xchg
add
cmp
hlt
jg
cmp
or
mov
cmpsl
mov
sbb
into
andl
xchg
dec
je
mov
loope
push
fldcw
ret
xchg
adc
fistps
into
rcr
aad
lods
pop
mov
out
xor
ss
mov
in
cld
mov
push
imul
pop
and
aaa
ficomps
adc
jecxz
cmc
jno
jno
sti
xor
out
icebp
nop
cltd
sti
mov
sbb
xorb
test
sub
in
ja
mov
mov
ss
jnp
iret
pop
mov
test
pop
ja
ret
xlat
mov
cs
nop
inc
hlt
adc
mov
xchg
lret
outsl
jmp
or
cs
fldt
lret
or
pop
jbe
inc
out
adc
into
out
pop
adc
ja
loopne
inc
dec
out
and
sbb
repz
fldcw
sarl
sub
fildl
popf
mov
test
iret
scas
sahf
enter
mov
and
imul
mov
push
movsl
popa
jmp
jmp
inc
sbb
lods
aas
out
or
movsb
pop
xchg
and
outsb
outsb
inc
dec
add
mov
movsl
fsubr
mov
inc
stc
call
cmp
out
add
andb
sahf
cmp
add
repz
inc
shl
andl
adc
nop
pop
pop
mov
ficoml
jge
mov
cmp
mov
cmpsl
imul
inc
out
jmp
int
add
jae
scas
add
stos
movsl
out
stos
sbb
cmc
push
imul
mov
add
inc
repz
popa
push
pusha
mov
lret
sub
pop
pusha
sub
dec
daa
out
sti
mov
xchg
pusha
cmp
push
xor
dec
sub
ljmp
mov
push
shll
xchg
nop
mov
mov
cmp
jl
mov
ds
adc
rclb
jne
add
pop
lds
fisubrs
lret
sub
jl
mov
jnp
cmpl
or
xchg
rclb
inc
out
bound
movsb
jle
cs
pop
fisubrl
repnz
nop
mov
lret
adc
sub
int
fldl
mov
mov
lds
jno
popa
dec
test
push
lret
dec
shrb
fcmovnbe
sbb
mov
add
movsl
push
leave
xor
add
out
fidivrs
testl
std
xchg
cli
das
lcall
xchg
push
or
cwtl
jl
mov
mov
lods
dec
fwait
aam
mov
scas
shrb
test
movsl
test
mov
push
inc
jno
mov
out
clc
mov
ficoms
into
sahf
aaa
cltd
inc
add
popa
sahf
test
jns
sahf
and
push
in
cmpsl
and
call
push
push
pushf
int
ret
mov
sub
xor
pop
sub
mov
andb
loope
add
popa
dec
mov
mov
sbb
andb
mov
mov
call
and
test
hlt
mov
pop
or
inc
sbb
mov
xchg
dec
and
sub
jmp
testb
xchg
push
pop
sahf
fimull
cmp
push
stos
rcll
sbb
sbb
xlat
fiaddl
mov
sbb
dec
imul
daa
cmp
mov
dec
mov
das
sub
mov
sub
mov
int3
fbstp
adc
sub
pushf
mov
aas
inc
loopne
std
cld
jns
jnp
inc
xchg
decl
cmp
loopne
stc
mov
jo
shll
or
fs
mov
sbb
adc
imul
pop
addb
shl
jne
cmp
mov
cmp
out
popf
aam
jb
mov
imul
jnp
mov
mov
sub
js
dec
jae
xchg
cltd
cmpsb
push
into
filds
call
ljmp
insl
vpaddsw
and
imul
dec
cltd
shl
push
andl
imul
std
subl
jne
mov
jle
imul
pop
hlt
pop
shrb
dec
ret
into
push
arpl
cmp
pop
jmp
loop
pop
jne
and
xchg
and
xor
fs
xchg
out
cmp
xchg
cld
lds
jo
fst
in
ret
pop
xchg
xchg
outsb
inc
jmp
sahf
aad
jns
movsb
xchg
popf
dec
jae
cmpsl
out
jg
fdivl
mov
shlb
sub
out
out
xchg
leave
subl
pop
jle
push
push
xor
vmovss
dec
add
and
pop
xor
jmp
scas
stos
scas
insb
aaa
ja
sub
out
nop
dec
mov
xchg
in
mov
mov
xchg
mov
jb
andl
int3
cmp
mov
aad
adc
add
popf
jl
push
scas
cs
pop
sub
aas
push
lret
xchg
ja
pop
or
inc
movsb
pop
inc
hlt
aam
outsl
aas
dec
sub
out
hlt
fstpt
repnz
inc
in
lea
in
add
mov
pop
mov
pop
nop
test
xchg
test
push
jbe
adc
decb
sbb
xchg
and
pop
mov
test
push
imul
mov
dec
xor
pop
sub
mov
mov
mov
daa
dec
jae
sub
mov
addb
xchg
scas
mov
in
fdivrs
xchg
hlt
push
out
sbb
fcoml
dec
sti
rcll
lahf
adc
pop
iret
mov
insl
lods
ds
clc
jne
in
push
repnz
ficompl
jp
cwtl
pop
je
pop
shrb
jbe
sbbb
and
in
mov
jmp
mov
nop
leave
push
adc
push
adc
ja
je
out
gs
xchg
pop
jge
clc
ret
aaa
mov
test
or
adc
int3
movsl
xchg
cltd
repnz
shrb
or
mov
popf
cmc
xor
push
les
insb
test
xor
mov
mov
int
xchg
sbb
pop
pop
and
push
fidivrs
dec
pop
pop
push
out
xor
mov
stc
xchg
pop
pushl
sub
ljmp
jg
sub
dec
jp
imul
iret
mov
cmp
jb
mov
scas
cmp
pop
or
inc
push
es
das
mov
sahf
js
mov
movsb
test
movsb
mov
pop
and
jb
adc
sub
pop
inc
inc
aam
int
rorb
sbb
push
imul
imul
jbe
cltd
out
mov
pusha
sub
lds
inc
es
push
fisubrl
cmpsb
jne
subl
loope
mov
fidivs
sub
xchg
jl
adc
testl
xchg
out
test
lock
inc
lcall
rclb
jg
js
outsl
std
inc
jg
pop
mov
sub
hlt
ret
lock
mov
jg
inc
and
outsl
add
cmp
sbb
and
xor
and
les
loop
jg
pop
icebp
mov
add
aaa
test
push
cld
xor
cltd
shlb
lods
test
dec
sbb
ret
shlb
movsb
pop
adc
mov
outsb
mov
inc
sbb
adc
sub
fsubrp
push
pop
xor
shlb
pop
inc
dec
xor
push
movd
adcb
scas
test
mov
inc
push
sbb
addr16
lret
or
and
ds
jne
pop
mov
test
push
cli
mov
or
mov
push
adc
lds
cmc
inc
mov
addb
and
sub
jo
mov
push
push
and
push
bound
loop
cs
push
cmp
pop
in
xchg
xor
cmp
insl
inc
js
sbb
sub
xlat
sub
int
stos
adc
aaa
insl
xchg
into
movsb
jo
xchg
inc
cld
and
fistps
cmp
xchg
dec
cmp
scas
add
dec
push
sbb
sub
pop
iret
xlat
nop
repz
or
mov
out
popf
pushf
cmp
xor
or
cmpb
and
insl
xlat
jb
xor
mov
pop
dec
pop
dec
fldl
imul
cmp
jne
ret
sub
add
xor
stos
addl
leave
out
and
pushf
or
das
in
pop
xchg
mov
mov
sbb
iret
shr
add
xor
xor
jmp
mov
push
in
fcompl
sbb
cmp
in
adc
dec
clc
add
xchg
out
arpl
jnp
aad
fnstsw
movsl
lahf
sbb
andl
xchg
jns
pop
add
adc
pop
adc
iret
sbb
mov
pop
in
daa
lahf
cmpsb
sbb
sub
dec
je
test
aad
xor
cmp
outsb
ljmp
repz
push
scas
or
xchg
call
pop
idivb
cmpsb
jp
inc
sub
in
lods
stos
aaa
mov
and
mov
xchg
pop
aaa
pop
jns
sub
mov
je
ret
pushl
popa
push
int
fldl
fildll
pop
mov
fbstp
out
xchg
mov
inc
loope
popf
dec
mov
out
pusha
mov
pushf
fdivs
roll
gs
stos
mov
add
xchg
shlb
and
and
xchg
push
mov
sub
xlat
shll
pusha
and
mov
mov
mov
sbb
mov
arpl
mov
inc
mov
mov
gs
inc
adc
inc
ja
jo
mov
mov
in
loope
xor
ds
push
mov
mov
cmp
mov
cltd
mov
mov
inc
push
inc
cmp
add
loope
repz
or
jb
loopne
fildll
adc
pusha
xchg
cli
pusha
movb
mov
adc
jge
mov
clc
xor
lods
ds
stos
inc
aad
ljmp
aas
in
icebp
std
scas
sahf
ljmp
fs
cld
bswap
sbb
shrl
inc
insl
je
les
test
and
pop
test
addb
inc
leave
fistl
andl
pop
jb
push
aad
fs
mov
xorl
in
lret
inc
add
xor
mov
mov
cmp
leave
add
insl
ds
jae
mov
insb
popl
iret
push
adc
repnz
cmpsb
xchg
mov
mov
js
dec
movsb
dec
add
push
xlat
sbb
jno
mov
flds
shr
imul
iret
lret
cmp
mov
stos
cmp
dec
test
and
fdivs
jmp
cmp
xchg
shlb
ret
fwait
add
stos
mov
or
mov
pop
aaa
es
cwtl
lods
addr16
test
inc
ljmp
mov
call
and
rclb
jp
pop
int3
xor
push
push
sbb
jne
es
inc
fwait
xchg
repnz
push
mov
daa
mov
repnz
pop
pushf
push
lods
adc
rolb
movsb
dec
adc
adc
cltd
and
mov
insl
shrb
push
inc
fwait
dec
jmp
mov
stos
pop
jne
cmp
sbb
sbb
rsqrtps
bnd
test
add
xchg
out
lret
xchg
les
dec
hlt
pop
sbb
or
pop
add
in
fiaddl
xor
push
mov
insl
dec
fcmovnu
sbb
mov
dec
test
lds
pop
jne
jle
cltd
popf
pop
pop
dec
mov
in
dec
jbe
sbb
repnz
adcb
add
mov
pop
outsl
jno
mov
fisubrl
int
scas
cmpsl
sub
mov
lahf
cmpsl
add
jae
mov
cli
cmc
mov
push
andb
rcll
xchg
stos
sarb
cmpsb
mov
push
cmp
cs
shrb
xor
xchg
sbbl
cmp
xchg
pop
stos
jg
insl
int3
cmp
pushf
popf
notl
ror
jp
into
cmp
ret
scas
ja
push
jne
js
std
jle
fs
xor
aam
or
jno
adc
fistps
xor
sbb
mov
mov
shll
out
mov
mov
in
mov
leave
pop
pop
loop
cmp
mov
int3
mov
gs
test
add
cmp
sbb
imul
daa
jb
lcall
pop
data16
xor
jle
inc
push
mov
adc
iret
mov
mov
mov
sarb
cmpsb
loopne
xor
mov
jmp
aaa
sbb
add
jl
popf
dec
push
js
mov
inc
lea
stc
cwtl
adc
xor
fnstenv
mov
sti
imul
dec
lock
sub
sahf
or
les
and
add
add
mov
inc
mov
cli
push
jge
sahf
xor
outsl
adc
dec
xchg
test
adc
popf
ds
add
mov
mov
xchg
mov
cmc
cmp
mov
sbb
mov
test
mov
out
cwtl
test
add
push
mov
push
in
dec
push
dec
push
sti
mov
mov
push
mov
push
sub
std
lds
adc
cwtl
sahf
mov
pop
add
ss
outsb
gs
jno
aad
push
and
loopne
call
dec
mov
adc
sub
pop
dec
inc
imul
add
xchg
pop
mov
popf
xor
lods
adc
cmp
pushf
push
popa
aam
pop
jne
pushl
inc
inc
push
cmp
push
shll
cmc
jl
insb
fcompl
adc
scas
jge
inc
imul
inc
fwait
pop
xchg
repz
cmp
testl
shll
add
pop
cmp
add
jge
imul
jmp
push
sbb
scas
gs
fsubp
movsl
and
daa
push
inc
push
sub
repz
in
push
dec
cmpsb
cmp
lahf
cmp
mov
inc
and
in
pop
popa
jmp
sub
cmp
ljmp
adc
push
inc
mov
pushl
fcoml
mov
cwtl
in
fadd
xor
and
cltd
mov
loope
push
cmp
mov
shll
sbb
popf
fsubl
dec
jecxz
adc
jle
mov
xchg
cwtl
into
into
dec
imul
int3
xor
lahf
sbb
mov
sbb
stos
out
or
cmp
mov
add
out
addb
mov
push
mov
xor
lret
pop
sub
loop
push
aad
dec
push
pop
cs
test
imul
pop
jp
gs
cld
sub
inc
cs
xchg
dec
xlat
sahf
fs
addr16
je
mov
lods
xor
push
cmp
add
imul
mov
int
sub
stos
in
push
outsb
pop
jbe
pusha
ljmp
cmc
ss
push
test
cmp
insb
sub
outsl
scas
test
imul
sub
std
mov
movsb
mov
xchg
in
adc
ret
or
xor
daa
scas
jo
dec
xor
mov
cmp
sbbb
inc
loope
rcll
or
popa
mov
sbb
fadds
cmovnp
lock
outsb
lods
push
sbb
inc
inc
stos
and
or
xchg
add
xchg
dec
je
mov
pop
inc
or
in
and
lret
shl
jbe
fildl
out
push
lret
jnp
lds
fwait
and
dec
iret
push
mov
or
and
out
cmp
jae
daa
jle
xchg
or
and
es
mov
fwait
xchg
out
adc
in
test
add
and
lret
test
pop
xor
inc
mov
mov
mov
xchg
dec
cmp
out
adc
inc
popa
in
shll
cmp
test
repz
pop
test
cmc
push
or
adc
adcb
sub
sbb
rcr
mov
enter
add
xor
movl
mov
xchg
mov
test
sbb
mov
mov
jae
xchg
mov
mov
jmp
fstpl
and
pop
mov
das
out
and
testb
data16
add
mov
sbb
or
shlb
sub
cs
insb
je
xor
ljmp
add
dec
mov
lret
mov
mov
lds
jno
imul
or
jo
leave
xchg
scas
rorl
adc
sbb
jp
xor
shr
adc
mov
mov
stos
mov
stos
sbb
push
dec
dec
jg
pop
mov
in
push
jae
cltd
mov
ret
push
mov
call
xchg
adc
xlat
in
test
mov
inc
movsl
outsl
dec
into
pop
cmpb
std
mov
fsubrl
lret
cmpsb
adc
sbb
fisttpl
loopne
mov
imulb
aaa
mov
pop
sub
or
or
and
mov
hlt
sti
pop
in
lea
sarb
push
add
jl
js
mov
jno
negl
adc
int
pop
xchg
cmp
mov
out
mov
cmp
lcall
idivb
xchg
mov
shl
jns
or
pop
push
jl
imul
adc
pop
jp
ds
data16
icebp
xor
mov
inc
sarl
aas
xlat
sbb
inc
out
inc
test
push
shr
add
movsl
test
sub
das
jnp
pop
ret
lret
out
xlat
in
xchg
xor
lods
push
sbb
fdivl
fsubp
arpl
jmp
sbb
sub
call
ret
push
adc
in
push
out
ret
cmpl
mov
xor
cmp
movsl
mov
mov
outsb
jmp
xchg
jl
jg
adc
adc
sbb
jle
aaa
clc
cmp
