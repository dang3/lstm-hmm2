lea
aas
adc
and
testl
repz
outsb
add
dec
loopne
movsb
adcl
fdivp
or
lea
jp
stos
hlt
popl
dec
loope
push
xor
stos
pop
jle
or
pusha
mov
stos
adc
and
and
adc
std
pop
scas
test
js
pop
popa
sbb
bts
xor
jle
or
fs
xorl
lods
add
gs
xchg
cmp
xor
xchg
ds
loop
sbb
xchg
xor
sahf
adc
xchg
je
clc
cwtl
sub
adc
pop
pop
movsl
add
jmp
push
pop
sahf
outsl
and
and
popa
pushf
cmp
jnp
xlat
ds
rcrl
rorb
dec
jle
sub
out
das
fiadds
incb
mov
pushf
push
jp
xor
xchg
pusha
stc
add
sub
cmc
push
add
pusha
pusha
push
pushf
dec
push
jmp
inc
lret
ds
add
sub
idivb
gs
ret
gs
test
sbb
add
jns
pop
sti
and
fmull
fcoml
mov
xor
jae
cmp
mov
dec
adcb
xor
in
int3
or
lea
jne
call
fsubl
push
inc
xchg
mov
or
lret
ficoml
xor
jns
push
out
std
and
inc
out
or
in
and
mov
js
shrb
aam
xor
sbb
ss
xchg
or
je
pop
js
mov
dec
in
cli
sti
cmp
fisubrl
sub
inc
adc
repz
cmp
movsl
and
add
movl
push
pushf
movl
pushf
pushf
lea
jmp
xchg
dec
movsbw
push
sub
lea
pushf
xchg
jmp
rcr
shl
mov
pushf
cmp
cmpb
call
pushl
popl
call
adc
push
loope
or
pop
jl
ja
outsb
test
cld
sbb
in
inc
fwait
cltd
cli
in
insb
jl
sub
cmp
cmpsb
add
cmp
jae
lahf
sub
rcl
sbb
scas
adc
dec
sub
mov
cmp
fs
dec
pop
jnp
lods
jl
push
push
shld
shr
add
bt
mov
push
push
pushf
test
push
pusha
jmp
pushf
lea
je
pusha
pusha
call
cmp
mov
pushf
push
pushf
lea
ja
dec
dec
mov
jmp
push
inc
lea
jo
pushf
pusha
lea
call
jmp
sub
bt
movb
clc
call
setge
pusha
mov
lea
clc
bt
clc
mov
setnp
rol
pusha
mov
clc
stc
cmc
mov
pusha
pushf
movl
cmc
not
pushf
bt
rol
pushf
inc
bt
cmc
stc
rol
bt
cmc
pushf
movw
add
mov
jmp
pusha
adc
pusha
movw
push
pushf
lea
jmp
lea
call
jmp
loopne
fwait
popf
and
mov
jp
push
in
outsl
and
jmp
xchg
push
mov
push
dec
fiadds
movsl
xor
stos
in
xchg
sbb
dec
mov
scas
push
and
filds
sbb
lods
dec
je
nop
fwait
scas
pop
adc
mov
inc
and
movw
lea
ja
jmp
push
add
movb
cmp
jmp
arpl
xchg
test
lods
stos
repnz
mov
push
aaa
cmp
incl
mov
das
inc
ja
mov
sti
jne
daa
push
sti
sbb
or
andb
pop
je
out
mov
or
ja
imull
test
push
jecxz
mov
movsl
sbb
xor
add
jnp
mov
mov
jp
xchg
mov
mov
lret
or
jl
aad
negl
clc
ffree
out
sar
xchg
lahf
imul
lret
jge
mov
jo
gs
or
cmp
rol
xchg
ss
jg
cwtl
jmp
cltd
popf
into
mov
cld
insb
push
inc
add
ret
and
mov
arpl
lea
fiadds
xor
add
mov
out
mov
test
cmpsl
push
cmpsl
mov
movsl
inc
and
popa
pop
adc
or
mov
mov
lret
inc
adc
mov
mov
xor
mov
in
popf
cmpsl
sbb
sbb
and
jno
mov
leave
dec
add
sub
xchg
mov
dec
pop
test
imul
cmp
stos
pop
imul
ljmp
pop
test
mov
ja
call
jae
xor
lea
push
outsl
das
scas
jb
stc
cmp
pusha
pusha
lea
je
push
pushf
jmp
cmp
movb
lea
je
test
cmp
pushf
pushl
jmp
call
mov
jmp
and
pushl
bt
test
add
pushf
push
lea
jmp
jmp
mov
je
aas
int
cmp
sti
sahf
repz
dec
sahf
or
push
mov
cs
jge
lds
gs
sahf
hlt
insl
and
adc
data16
jnp
in
mov
pop
stc
movsl
clc
jae
sbb
imul
dec
inc
cld
in
xor
sbb
push
and
inc
xchg
arpl
movl
ljmp
sbb
inc
pop
cmp
cmp
dec
mov
aad
cwtl
scas
es
sub
sbb
lock
pop
mov
stc
pop
xor
push
clc
and
sub
ljmp
out
adc
movzbl
inc
int
push
insb
loopne
leave
xchg
mov
inc
and
mov
lcall
pop
xor
adc
leave
sub
jp
and
and
push
sbb
xor
js
or
mov
das
popl
add
fwait
sbb
cld
xchg
fildl
out
daa
gs
cmp
push
fs
out
and
pop
mov
adc
inc
push
pop
jmp
pusha
cmp
jmp
cmp
scas
rcll
movsb
lods
mov
jecxz
xor
repnz
mov
xchg
in
fwait
mov
movsb
in
sti
int3
jae
movsb
push
add
cmpsl
arpl
or
pop
and
sbb
mov
inc
fwait
cmp
add
mov
lock
movsb
pop
data16
cmp
push
pop
lahf
mov
push
movl
subl
cld
dec
fprem1
fdiv
insl
cltd
cmp
fsubs
xor
hlt
push
loopne
sbb
push
xor
out
bt
add
shl
sub
shr
cmp
movsbw
bsr
shr
sar
bts
mov
jmp
pushf
mov
inc
push
not
setp
mov
call
stc
shr
test
mov
stc
test
pusha
pusha
lea
je
call
pusha
movl
pusha
movw
jmp
bt
call
lea
jne
pusha
call
call
imul
pop
jmp
test
rcl
hlt
adc
in
stos
cmp
xchg
pop
out
mov
push
stc
shl
cmp
jbe
imul
lock
mov
or
cmp
andb
mov
pop
test
dec
inc
cmc
movsb
push
popf
push
push
mov
mov
lock
andb
sti
xor
sbb
mov
sub
sbb
pusha
xchg
or
mov
fistpl
gs
shrb
test
cmpsb
cmpsb
cmp
push
arpl
inc
and
rcl
push
add
loope
add
sarl
out
shrb
leave
jmp
xchg
and
cmpsb
or
mov
loope
out
or
push
xlat
popa
cmp
enter
pop
cmp
aaa
xchg
add
dec
aaa
inc
mov
xchg
arpl
dec
in
pop
out
test
add
mov
jmp
cmpl
adc
add
test
sub
test
clc
clc
cmc
pushl
popl
jmp
call
cld
in
mov
mov
jmp
ss
fbld
in
add
pop
push
outsb
clc
test
add
lcall
movsl
lea
xchg
in
gs
xchg
xchg
or
and
mov
mov
or
cmpsl
cli
adc
mov
popl
pushl
mov
cmp
pushf
lea
ja
push
cmc
pusha
sub
or
bsr
shl
sub
add
bswap
shrd
btc
pushf
mov
bt
dec
sub
adc
mov
pushf
bt
pushf
repnz
call
cmc
pushf
xor
bt
repnz
jmp
push
aam
in
adc
test
loope
dec
jae
push
jb
push
jbe
movsl
xlat
push
adc
or
mov
daa
lock
adc
sbb
jnp
push
xchg
fildll
cmp
add
pop
add
jl
mov
dec
rol
inc
and
fidivrs
and
mov
push
push
pushf
pushl
ret
add
not
cmp
neg
mov
cmp
pusha
stc
cmp
pushl
lea
jb
pusha
jmp
pushf
movl
movb
pushf
push
pushf
lea
jmp
pop
jo
gs
xor
fsub
add
mov
loope
xor
push
shr
mulb
aam
not
in
mov
je
push
loopne
jmp
cld
sahf
pop
test
in
pop
bound
push
popa
or
scas
lea
pushl
movl
call
aas
call
pop
mov
sbb
pop
cmc
sbb
xor
push
data16
sub
es
fcoml
lods
fadds
ret
push
adcl
add
xchg
jp
les
xor
subb
lods
xchg
je
inc
mov
cmp
sub
xchg
and
int3
cld
push
roll
or
subb
mov
sub
push
lods
add
hlt
mov
mov
sbb
add
cmp
hlt
cmpsb
push
jmp
mov
ja
mov
and
cmp
sbb
fwait
imul
fldt
sub
bound
aam
pop
mov
in
mov
gs
rol
lret
dec
rorb
es
mov
push
data16
mov
xor
pushl
lea
jmp
mov
lea
or
mov
shl
mov
push
pusha
clc
clc
sub
cmp
repnz
jmp
cmc
cmc
sub
call
btc
inc
test
mov
test
cmp
cmc
stc
cmpb
call
push
pusha
movl
jmp
pusha
push
pusha
stos
pushf
movb
movl
lea
jmp
call
pop
shl
mov
lcall
adc
and
repnz
call
xchg
or
lods
fidivl
lret
out
xor
mov
insl
arpl
and
imul
mov
cli
xchg
xlat
rcll
adc
and
push
sub
jmp
jbe
sbb
bound
sub
jb
nop
mov
adc
push
fisttpl
cmc
sub
mov
clc
pusha
pushf
jmp
pushf
lea
jne
push
lea
movb
pop
bswap
push
call
stc
repnz
push
call
pushl
mov
bt
jmp
pusha
mov
jmp
push
scas
push
rolb
push
jle
and
jl
sub
addl
sbb
aam
sub
ds
sub
stos
ret
movsl
mov
lret
or
sbb
mov
mov
or
icebp
std
push
fistl
ficoms
push
fs
cld
fldt
aad
aas
nop
and
in
xchg
xor
mov
xor
int
in
test
push
outsb
int
dec
jmp
pop
in
icebp
movsl
add
xchg
andb
scas
imul
test
sub
andb
and
fs
jne
movsbl
bswap
pushf
pop
mov
pushf
mov
lea
jmp
outsl
es
rcll
push
mov
adc
dec
and
and
sti
push
jbe
lcall
lcall
sub
dec
lock
jbe
imul
repnz
jle
fisttpl
adc
adc
mov
or
shlb
clc
add
push
lods
jmp
inc
test
inc
movsb
rcl
fnstenv
cmp
pop
xor
ficoms
jmp
push
gs
adc
mov
gs
pop
mov
scas
daa
stc
mov
or
scas
int3
insl
pusha
out
sbb
lds
push
push
dec
popf
xor
in
lret
insb
mov
jg
mov
mov
xchg
add
inc
mov
cmp
xor
and
xchg
jae
test
jp
jmp
scas
pop
inc
stc
xchg
add
and
movsl
mov
inc
push
xchg
xchg
stos
xchg
push
sbb
mov
xor
rep
jmp
xchg
mov
xor
cmpsl
jmp
jo
jp
sub
adc
out
mov
roll
shll
out
pop
xlat
stc
cmc
or
mov
adc
push
pop
out
mov
popf
inc
xchg
sub
mov
imul
clc
adc
mov
and
bswap
call
lea
ja
cmp
rcl
stc
sub
call
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
call
or
shl
inc
mov
jmp
call
pop
cmp
dec
mov
dec
push
push
out
sub
jb
sub
dec
lahf
mov
das
or
scas
ja
stc
fisubl
sar
dec
scas
pcmpgtb
ficoml
and
lea
leave
jnp
xor
and
mov
inc
sub
lahf
rcrb
dec
aas
jmp
pop
mov
xchg
insl
push
lds
adc
mov
adc
xor
jge
int
add
inc
test
jno
sbb
aas
fdivl
and
lock
jmp
gs
pop
mov
sbb
movsl
fs
or
cmp
cmp
and
outsl
decl
cmp
add
lahf
lods
subl
cmpsl
test
mov
sarb
jno
pushf
jnp
in
mov
adc
out
xor
jae
out
jae
push
fidivl
dec
pop
call
inc
push
push
outsl
add
loop
incb
cmpsl
cmp
add
and
inc
xchg
and
cmc
int
add
dec
jl
ss
xor
jge
jbe
sub
mov
test
add
sti
adc
mov
dec
js
or
es
lea
sub
addr16
mov
mov
and
test
xchg
sbb
push
pop
xor
jb
xor
loopne
addr16
testl
sbb
inc
add
pop
arpl
int3
pushf
jecxz
pop
popf
dec
mov
and
lahf
push
decb
sub
shll
push
js
mov
xlat
stc
rol
clc
jmp
dec
jo
adc
ja
les
mov
dec
push
xchg
movsl
pop
ret
inc
lods
mov
pushf
push
ja
and
push
jecxz
add
cmp
add
aas
mov
jb
leave
cli
and
fldcw
rcll
pusha
shr
bt
pushf
mov
cmp
pusha
mov
jmp
pusha
pusha
movb
pushf
movl
movl
pushf
call
movsb
mov
pop
mov
inc
xor
cmc
xchg
mov
push
add
repnz
sti
pushf
jae
into
jno
dec
cli
out
mov
pushf
dec
mov
ret
mov
stos
add
jbe
xlat
sbb
inc
xor
out
inc
xor
imulb
adc
jae
shrb
movsl
push
sub
mov
jp
imul
sub
jb
nop
gs
daa
cmp
test
add
sbb
xor
jns
dec
sarb
pop
roll
lret
xchg
xlat
dec
mov
inc
lret
adc
adc
sbb
pushf
loopne
xor
or
test
aad
xlat
inc
stos
jb
test
jb
mov
push
sbb
sbb
fs
cmc
ret
nop
mov
jo
iret
stos
imul
js
movsl
xchg
xlat
jo
xchg
jo
xor
sub
rcr
push
jns
cld
lds
aam
in
pop
or
imul
jo
cvtps2pi
xorb
stc
lret
xchg
inc
adc
negb
iret
in
rcr
mov
sub
cmp
testl
mov
jge
sub
inc
fbld
in
jl
lds
or
and
gs
sahf
lret
dec
or
imul
loop
jb
push
lods
xor
call
mov
adc
jnp
mov
bnd
mov
pusha
movzbw
mov
lea
mov
pushf
mov
movl
pushl
pushl
ret
pushf
movl
mov
lea
jp
pusha
pushf
movl
mov
lea
jmp
str
call
int3
popf
pushf
jmp
movw
mov
pushl
lea
jnp
pusha
lea
jge
lods
stc
cmc
neg
pusha
cmc
mov
ror
cmc
cmc
test
call
btc
push
sar
btr
ror
sets
mov
movzbw
sub
dec
btr
cmp
stc
push
shld
call
pushf
lea
jae
add
pusha
bt
sub
mov
movsbw
pop
mov
bt
bts
mov
stc
pushl
pushf
xor
bt
repnz
pusha
push
call
lea
ja
push
jmp
cmp
repnz
jmp
pop
mov
lea
lret
pop
aas
xchg
mov
popf
push
sub
jle
mulb
or
mov
test
nop
push
clc
and
sub
sub
push
push
scas
bound
lcall
mov
inc
sub
stos
movaps
and
jns
mov
mov
push
xor
lret
jge
push
sub
sti
mov
dec
scas
pop
jne
fistps
cmp
xor
pusha
ja
leave
inc
mov
sub
orb
fdivs
sbb
mov
dec
sti
lds
mov
loope
test
xchg
sub
cmp
cwtl
mov
aas
or
jmp
dec
imul
ss
or
insl
lret
aad
cmp
xor
push
jl
movsb
incl
pop
fistpl
mov
and
pop
outsl
mov
into
jbe
lcall
js
bound
aas
push
enter
pop
jmp
popa
jo
push
and
shll
pop
sub
in
xchg
jmp
shlb
mov
mov
lods
add
mov
mov
adc
bound
sarl
xchg
inc
inc
fisttpl
mov
inc
inc
div
mov
sbb
jp
adc
mov
inc
cld
pop
imul
pop
push
jge
and
or
adc
pop
lahf
rolb
mov
inc
and
sete
add
and
xchg
bt
btc
daa
cmc
mov
rcl
and
pusha
jmp
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
bt
jmp
loopne
popf
mov
mov
adcb
dec
andb
in
repz
je
fbld
pop
insl
xchg
ret
mov
mov
test
sbb
and
inc
dec
sub
or
mov
push
aam
addb
sub
andl
push
imulb
mov
mov
lods
pop
dec
or
in
addr16
es
sbb
mov
notb
jb
adc
notb
dec
scas
int3
loopne
cmp
pop
ljmp
or
js
addr16
jno
mov
sub
adc
jns
or
fcomp
cmp
xchg
insb
out
adc
rorl
mov
sbb
addr16
push
popa
and
push
in
sub
jb
jae
pushf
jmp
push
lea
jle
push
lea
jne
jmp
lea
je
pusha
pushf
test
add
clc
cmp
push
jmp
mov
movsbw
lea
call
lods
jb
cmp
add
sbb
xor
loope
mov
out
or
adc
xchg
lds
or
xor
dec
mov
push
loop
ficoms
cli
push
fldt
xor
bound
leave
in
shlb
rcll
fstl
je
dec
jmp
jl
xor
adc
je
outsb
ror
ror
sar
sub
sbb
bt
sub
pusha
jmp
call
pop
mov
mov
lahf
lods
ret
js
das
push
xchg
cwtl
subb
and
pop
js
pop
shrb
sbb
inc
pop
rcrl
rorb
das
or
xlat
push
pop
cld
cltd
jno
mov
push
xchg
add
sbb
fisttpl
addr16
or
mov
outsl
addr16
shl
icebp
imul
testl
popf
shl
xchg
lret
insl
lcall
mov
or
fdivs
push
mov
mov
push
cli
sub
lcall
mov
test
push
cmp
cmpb
pusha
pushf
push
lea
jmp
or
adc
mov
out
hlt
jnp
shrb
add
push
jge
or
je
jmp
movsl
mov
or
pop
xchg
in
icebp
push
add
pop
or
repz
push
pop
inc
call
xchg
mov
out
adc
cmp
jmp
movb
jmp
jmp
movl
push
lea
jns
pusha
movb
movl
movw
pushf
pushf
lea
jmp
mov
adc
out
pop
decb
sub
adc
pop
xchg
shl
xchg
jno
push
jnp
and
push
lret
fiadds
das
push
or
enter
enter
mov
call
pop
dec
shll
jle
xor
lods
push
cmp
sub
jge
aam
out
mov
loop
sbb
sbb
loop
rcl
sbb
pop
test
insl
dec
or
or
imul
gs
xor
xchg
or
push
jmp
stos
xor
pop
enter
inc
and
mov
pushl
ret
and
mov
cmc
add
mov
pushf
lea
jmp
cmp
cmp
movw
lea
je
push
pusha
pusha
pushl
lea
jmp
pushf
mov
pushf
mov
inc
pushl
pushl
pushl
lea
jmp
stc
pusha
bt
repnz
mov
push
pushf
call
ror
bt
not
cmp
stc
jmp
push
mov
test
cmpb
jmp
jmp
push
call
push
pushl
lods
lea
jo
inc
clc
clc
test
xor
jmp
stc
sub
bt
std
popfw
pusha
pusha
call
pushf
mov
pusha
lea
jne
pushf
call
push
lea
jb
stc
cmp
push
push
call
call
or
mov
mov
add
shl
shr
pushf
mov
cmp
jmp
add
jge
pushf
cmp
movb
call
lea
jae
pushf
adc
bswap
mov
cmp
bsf
bsf
mov
pop
lea
bswap
test
mov
clc
sub
cmc
je
pushf
stc
repnz
push
pusha
call
call
call
movzwl
shr
mov
stc
stc
cmc
cmc
add
stc
call
loop
push
das
stos
fsubrl
lock
scas
pop
bsf
std
pop
xchg
int3
push
pop
cmp
sub
test
stos
ret
repz
sar
mov
mov
fsubp
hlt
xlat
push
sub
adc
push
cwtl
in
shl
pushl
jmp
call
pushf
lea
jne
pushf
lahf
movb
pushf
call
movb
push
lea
je
pushf
pusha
pusha
lea
jmp
loopne
test
xor
mov
mov
xlat
mov
jb
les
inc
and
or
sbb
jae
dec
xchg
mov
fndisi(8087
jecxz
fstpl
out
sbb
imul
jmp
sbb
arpl
dec
stc
adc
sub
mov
mov
mov
cmpsb
ljmp
dec
sti
stos
mov
ja
jns
adc
pushf
fcmovnu
pop
sbb
pop
or
sbb
fistpl
sbb
fcomp
pop
sbb
or
pop
or
fcmovnu
pop
sbb
fwait
or
pop
fwait
pop
pop
pop
fmuls
sbb
fimull
sbb
pushf
pop
pushf
pop
or
xchg
aaa
popl
test
cmp
jmp
lea
ja
stc
cmc
bt
imul
call
call
pusha
test
cmpb
pushl
lea
jne
movsbl
mov
pusha
pushf
clc
pushf
add
pushl
movzwl
cmc
bt
shld
mov
clc
pushf
cmp
movb
add
cmp
cmp
mov
cmp
cmp
cmc
test
call
cmp
pushf
movb
lea
je
test
clc
cmp
call
daa
jbe
fxtract
jbe
stos
dec
test
sbb
mov
fisttpll
addr16
or
loopne
imul
mov
xchg
fsubrl
mov
mov
adc
sbb
lret
cmc
mov
fdivl
sub
sarl
mov
in
in
mov
mov
out
jle
out
xchg
add
lock
pushf
movzbw
mov
lea
bswap
movsbw
pusha
pushf
mov
movzbw
pop
lea
mov
mov
mov
push
pushf
mov
pushf
mov
mov
jmp
movb
lea
je
cmp
jmp
movl
push
lea
jmp
sub
cmc
cmc
ror
call
pushf
pushl
push
pusha
xchg
push
jmp
ljmp
imul
mov
and
pop
mov
cli
enter
out
outsl
mov
icebp
pop
adc
mov
lea
xor
call
inc
enter
shlb
mulb
xchg
icebp
fwait
inc
pop
je
sub
xchg
popf
int3
inc
fmull
jmp
xchg
xor
fidivrs
xchg
shlb
rorb
xchg
jmp
jg
js
push
sub
push
push
or
lock
dec
pop
xchg
mov
cmpsl
cmpsb
ficompl
mov
dec
and
jbe
int3
inc
nop
cltd
sub
aam
pop
loop
je
nop
mov
cmp
xchg
ret
in
add
push
or
push
stc
ror
test
jmp
mov
bsf
shl
mov
sub
daa
bts
clc
push
mov
aam
aaa
mov
cmc
cmc
test
pushf
pushf
pushf
lea
je
cmc
mov
call
push
push
movl
pushf
pusha
movb
pusha
lea
jmp
adcb
inc
dec
pop
into
mov
ret
push
push
cld
adc
jnp
hlt
test
dec
shrl
insb
popf
movsl
popl
inc
xlat
and
mov
or
mov
arpl
es
out
cwtl
test
adc
xchg
out
adc
mov
outsl
aad
testl
das
insb
loopne
dec
add
sub
push
sub
imul
shrb
jnp
mov
push
lods
adc
out
bound
or
cmp
scas
adc
or
add
and
xor
pushl
call
xchg
aam
adc
jecxz
xchg
mov
xor
pop
cmp
sbb
pop
sbb
xchg
lahf
es
sub
enter
outsb
mov
cmp
push
sub
push
and
icebp
stc
adc
ja
dec
scas
adc
int3
and
mov
sarl
ss
dec
mov
call
test
push
sbb
adc
inc
or
call
ror
bt
jbe
cmp
pusha
sub
call
mov
movw
movl
movw
mov
lea
jmp
movb
mov
pushl
bswap
lea
pushf
movl
pushf
jmp
cmp
test
call
shlb
dec
fisubrs
adc
das
iret
cs
lds
dec
and
int3
add
imul
pop
dec
das
sbb
in
into
fldt
dec
mov
shrl
idivl
jae
mov
or
rcll
daa
in
fadds
jecxz
mov
or
pusha
or
mov
mov
in
aam
add
mov
rol
bswap
shl
lea
mov
push
call
sahf
arpl
imulb
xchg
push
mov
fsubrp
or
loopne
sub
inc
lock
mov
fs
and
mov
ds
aaa
or
test
xchg
push
lahf
sbb
dec
or
push
clc
or
sub
mov
jle
add
add
pop
pop
std
mov
xchg
repz
xchg
xor
lods
lea
push
mov
in
xor
loopne
xor
int
ja
bound
out
or
in
jns
imul
mov
lret
scas
xchg
nop
es
mov
stc
adc
arpl
push
adc
mov
aam
loopne
adc
xor
adc
mov
sbb
clc
repnz
mov
jmp
imul
test
add
push
lea
jmp
mov
mov
mov
adcb
hlt
push
aas
mov
adc
call
dec
pop
cmp
push
sbb
or
cmp
and
mov
mov
cmp
pop
xchg
std
aad
or
jne
enter
clc
sbb
xchg
pop
sbb
adc
jb
push
xor
xchg
loopne
dec
scas
lgs
imul
out
and
mov
or
push
jmp
imul
sub
ret
xor
nop
cmp
inc
fmul
and
rorl
data16
pop
pop
lcall
mov
ja
push
gs
sub
les
cmp
add
gs
test
fstpl
call
pushf
cmpsb
mov
add
add
and
jecxz
cmp
sbb
push
setp
xchg
and
and
cmc
pusha
mov
movb
mov
cmp
cmpb
movb
pusha
jmp
ja
pusha
lea
jae
seto
mov
pushf
setge
mov
inc
not
inc
push
mov
lea
jmp
pusha
pusha
pushf
push
movl
call
movl
pusha
push
pushf
pushl
lea
jmp
jns
dec
out
pop
mov
fcompl
movsl
fmuls
nop
sbb
mov
sbb
ret
sarb
lahf
sub
push
ret
inc
mov
xchg
pop
dec
xchg
mov
and
cmc
xor
in
hlt
sbb
xchg
lods
iret
mov
pxor
adc
stos
aad
mov
js
cmp
mov
movsl
jne
les
movsb
mov
out
add
cld
popf
lcall
sti
es
push
out
ljmp
sub
dec
sbb
in
lock
dec
add
jae
push
adc
mov
outsl
sbb
xor
inc
inc
fnstcw
jg
xor
mov
xchg
shll
in
xchg
push
lods
cmp
sbbl
insb
pushf
add
test
addl
xor
jno
dec
sbb
sahf
in
test
faddl
xor
jne
adc
jne
adc
sub
add
movl
call
pushf
lea
ja
bt
pusha
jmp
cmc
pusha
bt
test
pushf
jmp
mov
mov
lock
push
mov
pop
pushf
cmp
sbb
sub
mov
sbb
clc
or
insl
push
dec
pop
mov
in
push
out
loop
outsl
pop
mov
push
sahf
int3
mov
test
xchg
ljmp
fwait
ljmp
pop
in
fimuls
shrl
imull
loop
sub
dec
outsl
adc
call
xchg
pop
cltd
jbe
test
test
jmp
jmp
mov
pop
jb
adc
mov
push
pop
jmp
push
stos
rolb
jmp
push
cmp
jp
lock
sbb
sar
mull
cmp
jecxz
sub
outsl
dec
xor
cmpl
int3
xor
inc
flds
sbb
jb
rolb
outsb
push
int3
pushf
xchg
sti
loop
push
out
movsl
add
jl
aaa
fs
dec
adc
aaa
xchg
inc
inc
fwait
scas
push
sbb
mov
xor
jmp
push
push
pop
xchg
js
pop
mov
xchg
fwait
negb
jge
orb
xchg
mov
popf
out
add
std
test
or
mov
leave
add
sbb
aaa
mov
popa
in
cmp
fldt
add
inc
loope
or
mov
sbb
lods
dec
sbb
adc
sahf
mov
cmp
cld
popf
xchg
pop
or
jle
cld
stos
lret
or
sbb
outsb
jmp
cmpsb
aad
xor
push
ret
in
lds
sarb
cwtl
addb
insb
clc
push
jb
pop
cld
jg
cmp
in
movntps
push
add
stos
push
adc
shl
movsbl
mov
or
lea
lea
sub
ror
rcr
mov
test
push
clc
push
sub
cmc
pusha
cmp
jmp
cmp
cmc
clc
sub
pusha
pushf
cmc
bt
cmp
pusha
movb
lea
jae
pusha
pusha
pushf
push
lea
jmp
lea
ret
cmp
cmp
not
lea
cwtl
movzbw
cwtl
mov
jmp
push
movl
call
cmp
movb
mov
mov
cmc
test
pusha
call
sub
movb
push
jmp
mov
add
jbe
mov
mov
in
push
lods
pop
repz
xor
shll
mov
pop
push
scas
ja
and
paddb
add
test
or
lods
add
pop
ret
out
xor
jnp
mov
jmp
inc
clc
stc
gs
dec
pop
arpl
cs
pop
cwtl
sub
imulb
mov
mov
adc
int3
sub
mov
ficoml
push
ja
add
sarb
fcompl
adc
inc
mov
push
repz
cmp
adc
lods
iret
cwtl
sub
xchg
hlt
jp
xor
mov
sub
icebp
lret
cli
push
lds
aad
pusha
cmp
adc
jl
aaa
push
sbb
fdivrs
sbb
or
mov
push
pop
mov
xor
outsb
pop
lahf
push
rorb
jne
nop
ret
adc
cmp
xchg
cld
or
fsubr
and
adc
push
sbb
test
xor
push
add
add
jae
popa
addr16
outsl
js
add
add
movl
and
and
sbb
jmp
push
pusha
jmp
movb
pushl
mov
push
pushl
ret
xchg
jmp
cmc
bt
jmp
add
jbe
test
cmp
pushf
lea
jb
clc
cmp
jmp
lea
jmp
add
add
sbb
or
push
cwtl
mov
xchg
sbb
ljmp
mov
arpl
adcl
mov
mov
dec
aas
outsb
jo
insl
add
xor
outsb
loope
repz
rorb
mov
shlb
add
or
xchg
mov
nop
add
mov
inc
dec
adc
mov
inc
das
into
lock
adcl
incb
sbb
das
pop
push
add
push
loopne
or
push
rorb
mov
push
add
or
mov
xlat
fwait
inc
sbb
or
xchg
sbb
push
lcall
sub
sbb
mov
or
sbb
dec
add
sbb
hlt
pop
cwtl
or
sbb
sbb
nop
add
jno
sti
pop
add
mov
adc
or
mov
mov
and
add
or
mov
mov
add
sbb
aad
cwtl
or
xchg
sbb
or
pop
rorb
add
mov
sub
add
add
test
out
push
rorb
dec
clc
cli
push
rorb
xchg
call
mov
mov
fnstsw
decl
or
mov
dec
bound
mov
filds
rorb
mov
rorb
jecxz
mov
xchg
sbb
idiv
decl
inc
mov
or
xchg
sbb
pop
add
mov
sbb
fnstenv
addr16
pop
mov
xchg
inc
ret
push
add
test
rolb
rorb
dec
cmp
mov
outsb
in
sarb
add
inc
xchg
mov
pop
pop
adc
ret
and
outsl
shrl
jecxz
enter
jecxz
scas
sbb
jne
sub
gs
jbe
sub
movl
lea
push
pop
add
call
cmc
xor
outsb
pusha
and
das
mov
cs
add
test
loope
adc
pop
in
sub
and
mov
ja
fs
xchg
shl
cmp
pop
push
sahf
lods
ds
and
sahf
xor
cmp
push
pop
stc
popa
inc
cmp
stc
repnz
pusha
call
mov
mov
push
pop
push
clc
adc
stc
ljmp
lods
mov
dec
and
jns
mov
mov
das
adc
and
lods
mov
enter
in
gs
out
mov
inc
add
add
sbb
ja
jle
xlat
xor
mov
sbb
into
mov
inc
xchg
jb
pop
iret
out
movl
in
pop
xor
mov
inc
dec
push
or
aam
sarb
or
outsl
popf
insb
clc
adc
test
lods
pop
cmp
adc
je
and
add
test
add
mov
push
pushl
ret
clc
sub
push
pusha
cmc
clc
cmp
call
lea
call
pushf
adc
push
push
pusha
push
lea
call
pushf
pushf
jmp
inc
clc
mov
add
bt
or
neg
mov
jmp
lea
call
pusha
pushf
mov
pushf
lea
jmp
rcl
mov
push
cmpb
movb
call
movb
lea
je
cmc
pusha
call
dec
pop
lea
scas
or
scas
lds
mov
imul
loopne
dec
push
mov
push
sub
jge
mov
les
inc
xor
ss
jno
mov
fwait
xchg
into
scas
cltd
cmpsl
mov
sub
lds
aas
adc
push
or
cmp
pop
aam
insb
and
inc
imul
mov
dec
or
mov
mov
fcoml
sub
clc
test
or
mov
push
dec
mov
leave
inc
aaa
lahf
sbb
inc
mov
insb
nop
mov
sub
adc
lock
pop
or
push
add
out
div
loopne
dec
sahf
not
imul
xchg
inc
push
out
push
mov
pop
mov
push
push
ljmp
pop
push
iret
jecxz
outsl
and
mov
sbb
cmp
pop
leave
cmp
cmp
dec
fnsave
and
xchg
mov
sub
add
cmc
idivl
jmp
or
and
jge
jns
push
sbb
jnp
call
movb
call
pushf
mov
pushf
call
mov
not
call
lea
je
jmp
mov
rcrb
mov
push
in
stos
ss
call
inc
ja
lcall
push
xor
jle
xlat
xchg
and
lret
cmp
push
jmp
fsubs
in
xchg
adc
cmp
xor
lock
test
shlb
add
cli
fwait
pushf
jbe
test
in
pop
mov
frstor
test
sub
leave
arpl
jl
outsb
mov
daa
aad
imul
mov
aam
jno
cmpsb
out
cli
lods
shrb
xor
ret
jb
sub
xchg
daa
pop
das
adc
lea
and
mov
jmp
add
inc
js
je
jb
arpl
jae
lea
jne
rol
push
mov
cmc
mov
pushl
pusha
add
call
rcl
stc
mov
call
pusha
cmp
call
push
pushf
lea
jne
bsr
aam
call
mov
pushf
lea
jne
bts
movzbw
rcl
not
mov
rol
sub
dec
adc
sub
mov
stc
push
clc
sub
bt
cmc
pushl
popl
pushf
pusha
cmp
pushl
lea
ja
shl
stc
sub
lea
mov
and
add
or
stc
bsr
mov
shr
mov
pushf
repnz
pushl
mov
lea
jne
movsbw
movzbw
pusha
bswap
movb
lea
pushf
pushf
mov
pushf
movsbl
lea
push
push
call
xchg
hlt
out
lret
push
out
adc
ss
jmp
subb
and
dec
sbb
scas
jecxz
fisubrs
fisubl
fbstp
or
hlt
clc
add
or
adc
out
fsubrs
aad
rorl
icebp
cmp
sub
mov
popa
or
popa
push
cld
xor
cmp
mov
jbe
pop
jg
push
push
enter
movsl
cld
pop
popl
int
xor
xorb
xchg
jle
push
push
cld
push
lahf
or
ljmp
mov
in
xor
xchg
call
into
rorb
mov
in
jne
and
xchg
dec
pop
adc
pop
std
fdivl
mov
loopne
push
ficomps
cmp
sbb
mov
rcr
outsl
sbb
ja
and
imul
sbb
daa
mov
xchg
and
sbb
pop
dec
insb
popf
sub
adc
into
xchg
call
xchg
into
rorb
aad
sbb
or
aas
ror
adc
ret
mov
lea
je
test
stc
jmp
lea
jae
jmp
lea
movsbw
cmc
mov
pusha
pusha
cmpb
pushf
lea
jne
and
xor
lea
dec
bts
lea
mov
neg
or
cmc
sar
add
pushf
shl
inc
pushf
mov
clc
test
mov
pushf
pusha
lea
je
call
bnd
das
mov
and
mov
in
sahf
into
add
inc
adc
pop
push
push
int
xor
in
dec
lret
and
push
mov
lea
es
in
adc
add
mov
outsb
xchg
xchg
pop
jns
xor
mov
jg
cmpsl
dec
adc
mov
mov
add
and
jae
sbb
btr
lea
mov
sub
mov
movsbw
mov
stc
jmp
in
mov
rcll
add
jno
popf
mov
ret
add
fldl
dec
cli
iret
inc
xchg
lds
cmpsb
xor
sar
cmpsl
jb
lods
subb
and
sbb
pop
popf
and
mov
cli
dec
lcall
sub
lock
mov
dec
inc
out
clc
jge
lahf
push
pusha
bound
je
lret
test
test
fwait
pop
jne
xor
adc
push
adc
insb
dec
push
xlat
scas
dec
insl
and
cltd
adc
scas
sbb
jl
push
in
pop
mov
fsubrs
mov
lods
mov
sub
or
fucom
xchg
pop
dec
popf
cld
push
cli
ljmp
xchg
sub
pop
or
mov
shlb
xchg
clc
or
mov
stos
adc
test
adc
iret
clc
ror
pushl
sub
std
bt
cmp
clc
pushw
popfw
push
pushf
jmp
cmp
pusha
lea
je
cmp
push
cmp
pushl
pushf
pushf
push
lea
je
cmp
test
stc
cmp
push
lea
je
pushf
mov
pushf
lea
jmp
mov
pop
cmc
pop
aam
push
das
mov
push
stos
push
pop
jns
xor
add
mov
xor
push
and
push
inc
xor
lret
mov
leave
rcr
mov
or
mov
pop
cmp
aad
adc
jbe
cmpsl
dec
mov
or
mov
sbb
xlat
and
lock
std
std
andb
popa
jl
xor
push
jnp
sub
pop
sub
pushf
mov
pop
nop
ss
lods
dec
mov
push
mov
xchg
and
aam
push
rolb
shll
adc
test
mov
lods
add
fwait
and
xchg
push
movsl
xchg
aad
ja
cmpsb
xchg
enter
and
jmp
adc
inc
pushf
mov
pusha
call
idiv
fwait
es
pop
mov
xchg
loopne
clc
mov
into
cld
test
mov
adc
int3
jns
push
sbb
pop
stos
pop
aam
xlat
sbb
xchg
mov
stos
mov
inc
fisttps
xchg
jnp
fwait
add
add
addl
cmp
in
insb
lock
xchg
push
and
aas
shrb
and
xchg
mov
rcll
loope
loopne
mov
mov
into
mov
jbe
xchg
mov
in
and
outsl
pop
into
jb
repz
mov
pushf
adc
shll
add
xchg
gs
and
insb
push
cld
or
mov
jnp
pop
insb
cltd
cmp
xchg
int3
fisttpll
inc
ljmp
loopne
cmpsl
xchg
push
xor
cmp
sbb
sti
dec
loopne
push
std
mov
inc
mov
jmp
scas
andl
mov
out
xchg
xchg
mov
out
orb
dec
adc
insl
ds
jl
roll
or
inc
or
scas
push
ds
arpl
fld
js
ficoms
clc
iret
dec
jns
fadds
data16
add
daa
inc
clc
cmpb
std
lahf
xchg
rcl
fstpl
adc
hlt
push
js
into
jl
mov
stc
popa
dec
scas
mov
sub
add
add
ret
mov
pop
lods
sub
faddl
cmpsb
pop
xchg
in
movsl
mov
adc
or
popa
and
pop
adc
push
push
adc
and
bsf
mov
cmp
pushf
jmp
lds
into
test
sar
push
or
insl
add
lret
and
aad
dec
sbb
jb
sti
mov
sti
fs
inc
lcall
loope
push
jmp
pop
cwtl
sub
mov
adc
daa
ss
sub
shl
dec
sbb
jge
push
ljmp
fstl
adc
push
ljmp
jo
mov
in
imul
jo
adc
inc
pop
fldl
icebp
and
pop
or
adc
ret
jg
pop
sbb
int
mov
push
cmpsb
or
mov
setae
hlt
fs
fsubrs
and
or
aam
stc
pop
ret
sti
mov
shl
xchg
adc
aam
addl
push
fcoms
dec
in
adc
cmpsl
aaa
faddl
out
and
hlt
repnz
or
fldenv
imul
test
jb
pop
jmp
not
addr16
ficoml
cmp
dec
in
push
adc
adc
sbb
cmp
bound
mov
cmp
cmp
cli
das
aas
pop
ljmpw
push
pop
sbb
lea
je
ds
stc
hlt
cmpsb
push
dec
scas
movsbl
in
nop
add
iret
div
shr
outsl
rcl
pop
out
cmc
and
mov
push
xlat
adc
mov
lods
xchg
in
pop
mov
and
cld
mov
pusha
cwtl
lret
jbe
xor
mov
jns
cmp
adc
in
lret
add
je
jg
mov
cmc
mov
lcall
cld
push
pusha
cwtl
scas
pop
xchg
jae
out
ss
mov
das
test
push
loope
ret
popa
rorl
xor
enter
push
and
rorb
cmc
in
dec
sbb
lock
xchg
dec
andb
iret
xchg
data16
push
adc
mov
sbb
loopne
pop
push
mov
mov
sahf
ss
rorb
cmc
in
dec
dec
sub
popf
test
loope
into
idivl
xor
push
push
fnsave
pop
imul
lret
sbb
fs
mov
and
test
rcrl
xchg
and
jae
push
fwait
lods
pop
sbb
mov
nop
loop
lods
ret
fwait
xlat
xchg
and
sbb
pop
incl
pop
lret
push
adc
mov
inc
pop
fsts
push
add
sbb
loop
adc
and
addr16
clts
fisubrl
mov
mov
sub
popa
aaa
cmp
cs
shrd
orl
adc
enter
dec
push
into
pop
or
scas
or
or
push
int3
adc
adc
test
jbe
inc
repnz
jecxz
inc
mov
mov
jecxz
mov
adc
clc
push
push
push
stc
int
xchg
fildll
add
sub
aad
clc
loopne
pop
int3
test
sahf
mov
fimuls
std
fcmovu
mov
je
add
shr
sahf
pushf
xor
mov
jnp
dec
mov
mov
test
xor
xchg
sbb
fsubrl
mov
mov
iret
icebp
lret
pop
or
push
jne
push
lahf
imull
rcrl
xor
arpl
sub
push
test
jns
mov
push
mov
cmp
push
stc
add
cli
pop
push
repz
sub
jecxz
mov
jno
push
push
gs
call
enter
aaa
xchg
daa
aad
pop
lret
test
and
roll
dec
les
xchg
lret
sbb
mov
or
add
push
loope
jae
ss
jmp
test
in
test
adc
jns
scas
aad
jmp
mov
test
dec
push
jp
lcall
imul
mov
add
ja
xchg
push
cmpl
add
xchg
inc
pop
call
sub
mov
scas
out
cld
jle
mov
jp
xchg
test
aaa
xchg
sbb
xchg
out
fimuls
imull
out
mov
mov
push
mov
mov
cltd
in
sub
jle
into
xor
push
mov
cmp
cwtl
test
in
test
pop
and
mov
in
sub
out
out
aaa
mov
pop
xchg
jmp
fwait
sti
add
cmpl
mov
mov
int3
dec
loope
aas
movsl
sub
mov
jl
sub
sbb
fwait
xchg
stc
dec
icebp
sub
je
and
dec
loope
xchg
cltd
stc
or
ret
pop
mov
insl
std
add
stos
jp
in
cs
sub
shl
sbbl
or
sub
jecxz
cmc
lret
aaa
mov
aad
shll
push
add
jmp
xchg
cmpsb
sub
ficomps
or
cmpsb
clc
cld
and
push
stc
add
xchg
push
jnp
repz
outsl
in
ret
pop
lds
inc
jnp
mov
imul
in
or
or
and
inc
jle
sti
imul
addr16
xchg
xor
sbb
mov
clc
and
bound
sub
and
pop
xor
jmp
jge
rolb
mov
mov
pop
jns
push
add
sbb
push
dec
imul
test
and
and
jle
pop
fstpt
mov
and
fwait
enter
push
leave
mov
mov
mov
sbb
xchg
jnp
pop
xchg
ret
lds
cmpsb
push
jnp
scas
decb
jl
stos
xchg
push
cmp
mov
push
fwait
and
push
pop
lds
jp
lret
mov
mov
test
jmp
cltd
and
movsl
insb
sub
jne
or
cwtl
insl
and
loope
sub
sub
pop
xchg
xchg
xor
imul
es
sbb
imul
push
mov
lds
or
addr16
pop
imul
mov
push
cwtl
jmp
or
into
or
and
xchg
sbb
fwait
pop
xchg
cmpsb
mov
mov
in
xchg
cmpsb
mov
jecxz
sbb
and
out
mov
dec
sub
push
and
lret
and
sub
rorl
dec
and
ret
xchg
ret
push
xchg
push
push
and
mov
fidivl
jecxz
dec
fcompl
jl
adc
inc
and
or
pop
add
mov
xlat
jp
mov
and
sbb
jbe
shll
int
pop
push
xchg
pop
jle
lret
ret
popf
xchg
pop
cwtl
orl
les
cmpsb
xlat
mov
mov
xchg
int3
jmp
fs
cmpsb
lds
pop
and
push
imul
inc
in
mov
cs
or
ja
cli
pop
xchg
shlb
lea
aaa
xchg
dec
cli
sbb
and
out
or
xchg
test
lcall
push
mov
xchg
ret
pop
in
stc
sbb
sub
insl
pop
sbb
and
std
sbb
leave
lahf
jnp
pop
addl
mov
dec
fwait
dec
fadds
pop
out
push
add
cwtl
xchg
addr16
je
arpl
jl
in
out
roll
in
cmpsb
cltd
xchg
lds
adc
inc
lcall
stc
or
ja
push
cmpsb
jl
or
int3
xor
xchg
pop
cmpsl
js
jmp
and
mov
xor
aas
push
and
xchg
fsubl
inc
sbb
gs
int3
and
pop
aaa
loopne
stc
xlat
aaa
sub
push
pop
pop
or
clc
dec
sbb
mov
in
pop
xchg
jmp
mov
into
fcmovnu
pop
les
stc
lds
cld
imul
dec
stc
mov
cmpsb
imul
cmpsl
loopne
jmp
pop
mov
ret
jnp
lea
fldenv
xor
adc
sub
aam
iret
pop
sbb
mov
iret
lcall
cmp
pushf
mov
adc
lret
call
dec
mov
mov
adc
stc
imul
jno
mov
lea
call
mov
push
dec
cmpsb
js
pop
stc
leave
cld
cwtl
aaa
mov
mov
sub
and
stc
pushf
jp
pop
add
adc
cld
inc
in
sbb
in
jl
fdivs
popa
ja
loopne
pop
int3
stc
addr16
xchg
std
dec
aas
rcll
and
adc
call
mov
test
jmp
roll
iret
loope
and
in
jp
pop
mov
inc
stc
mov
stc
stos
insb
fcmovnb
stc
xchg
sbb
pop
fistpll
and
xchg
mov
pop
dec
cltd
shrl
jecxz
sub
int
out
stc
repz
sub
push
fldl
cwtl
ds
dec
xchg
aad
in
addr16
sahf
push
cmpsb
pushf
xlat
cmpsb
sbb
and
mov
inc
in
fucomi
sub
xchg
lock
stc
mov
pop
push
and
in
popa
cmp
stc
sbb
sbb
jge
xchg
stc
cli
dec
dec
cmp
mov
in
adc
adc
stc
aaa
mov
stc
jns
push
in
jecxz
pop
cmc
lock
sub
stc
add
mov
aad
testl
mov
xchg
in
xor
lds
sub
aaa
cwtl
stc
mov
sbb
sbb
cltd
sbb
inc
sbb
sub
cwtl
stc
in
inc
aam
out
stc
nop
pop
in
mov
xchg
xchg
pop
sbb
ja
clc
out
in
pop
fs
sbb
add
inc
dec
mov
imul
inc
fisttpl
fmul
stc
nop
imul
and
jmp
dec
adc
int3
stc
xchg
imul
mov
xchg
leave
sbb
insb
dec
dec
pushf
and
push
in
subb
scas
inc
mov
pop
xchg
aas
popa
pusha
lret
sub
and
lds
sub
stc
push
mov
and
pop
cld
aaa
lahf
outsl
and
adc
fwait
out
adc
mov
mov
and
stc
pop
push
add
stc
test
xlat
sbb
cmpsb
sub
push
leave
push
inc
jnp
sbb
stc
push
sbb
inc
rcll
stc
in
and
sbbb
mov
lret
hlt
shlb
fcom
test
dec
in
add
lcall
inc
movaps
subb
xchg
sbb
pop
push
sub
stc
ljmp
mov
jo
or
sbbb
mov
loope
imul
mov
inc
push
int3
stc
mov
sub
inc
stc
mov
cmp
imul
cwtl
mov
and
xchg
pop
dec
push
orb
jmp
sub
loop
sbb
xlat
stc
mov
and
or
fsubrp
push
pop
mov
vpextrw
lds
js
inc
stc
xchg
repz
into
inc
shlb
les
pushf
mov
or
adc
and
and
dec
notl
lcall
lds
xchg
lcall
fldt
lcall
pop
cmp
cmp
fldt
out
jb
or
call
fsubrl
or
rep
pusha
push
pop
dec
sub
in
addr16
nop
int3
stc
es
in
imul
stos
xorb
out
sub
aam
inc
daa
in
pop
incl
dec
and
aaa
lret
mov
sub
push
sbb
orl
xchg
add
push
out
in
jmp
jecxz
inc
aaa
mov
cs
pop
fstpt
pop
xchg
and
mov
mov
and
insb
sub
in
and
sbb
sbb
aam
push
stc
mov
imul
dec
stc
dec
and
cmpb
adc
and
or
icebp
test
int
add
outsb
mov
loope
fs
xchg
stc
leave
sub
insl
loope
sbb
jnp
or
icebp
stc
fnstcw
insb
jne
or
leave
out
jns
cmpsb
sub
adc
repnz
arpl
int3
push
xchg
cld
out
or
xchg
mov
dec
loope
dec
cld
jmp
adc
xchg
dec
and
lret
rorb
xchg
pop
xchg
aad
jne
cld
std
sub
pop
pop
dec
or
into
sbb
ja
push
lea
mov
adc
xchg
test
lcall
movsl
or
xchg
sbb
cli
orl
pop
notl
adc
xlat
jb
fisubrl
and
and
lds
xlat
cmpsb
push
fbld
vucomisd
insl
mov
pop
roll
mov
add
xchg
cmc
xchg
movsl
aaa
jecxz
mov
xchg
shlb
add
enter
add
sub
aad
call
or
mov
rcl
xor
jg
loope
je
xchg
adc
test
scas
ss
xchg
movb
loope
shrl
testb
xchg
repz
or
loope
test
jae
add
inc
xchg
and
gs
or
pushf
pop
sbb
mov
adc
xchg
stos
dec
aad
sar
xchg
lret
add
push
add
or
xchg
in
jecxz
inc
lret
fwait
daa
les
jnp
imul
sbb
les
push
and
imul
add
ret
loope
dec
mov
or
lret
xchg
dec
sarl
xchg
test
adc
in
pop
xchg
dec
leave
cltd
inc
dec
in
pop
fwait
or
test
sbb
ret
or
daa
aaa
jl
iret
or
or
mulb
int3
mov
xor
add
icebp
lea
inc
cmpsb
push
aaa
and
es
enter
or
movb
mov
xor
and
notb
push
sbbl
dec
add
or
mov
push
jecxz
xchg
adc
push
or
mov
mov
aam
jbe
lcall
pop
pop
fwait
pop
pushf
int3
jnp
jle
and
or
mov
mov
pop
xchg
inc
push
or
in
dec
adc
std
aam
adcl
inc
loop
std
hlt
call
jl
dec
cli
pop
or
in
sbb
jae
mov
cmp
and
testb
inc
mov
cltd
int
mov
in
movsl
mov
xlat
xchg
xchg
xor
rol
push
inc
roll
mul
push
mov
jnp
sbb
jecxz
les
add
cltd
shll
sbb
in
sbb
adcl
test
testb
xchg
sub
roll
lret
mov
push
mov
fiaddl
xchg
xchg
mov
hlt
stc
lea
xor
pop
dec
lods
jb
pop
call
das
xchg
jl
push
nop
push
ja
std
mov
push
push
or
cmpsb
vpsubq
rclb
jmp
rorl
out
sbb
or
mov
pop
xor
xchg
cmpsb
test
rcll
cmp
shr
push
xor
mov
mov
xor
std
cmp
les
mov
lods
fs
jl
nop
inc
xor
sub
sbb
cwtl
fwait
stc
test
decb
sbb
inc
clc
imul
pop
or
fiaddl
pop
cmp
cli
pop
es
push
mov
cwtl
or
flds
dec
jae
fldenv
mov
xor
mov
adc
xchg
call
fcoml
pop
and
imul
jae
insb
adc
push
or
flds
xchg
sbbl
rcl
push
inc
or
or
inc
jo
add
cmp
aaa
lea
pop
hlt
cmp
fcompl
sbb
cmpsb
mov
in
jnp
sahf
mov
out
adc
jl
mov
push
cs
je
shl
in
add
sbb
into
sahf
test
pop
pop
push
push
int3
lret
leave
and
or
imul
push
hlt
test
inc
sbb
mov
cs
cltd
pop
mov
pop
mov
ficomps
xor
jg
orl
adc
xchg
adc
jecxz
into
push
sub
leave
cltd
push
mov
sub
mov
lret
rorl
lods
mov
movb
ret
xchg
sub
rcl
ret
xchg
adc
rcl
xchg
cmp
daa
call
xor
and
cmp
dec
test
cmpsb
test
xlat
mov
aad
add
lret
add
and
int
inc
nop
add
or
call
and
xchg
mov
or
xchg
ret
add
insb
mov
test
clc
stos
data16
pop
jmp
movsl
out
xchg
xchg
test
loop
roll
test
mov
pop
mov
imul
xlat
push
rcll
std
push
or
push
pushf
adc
mov
mov
jmp
aam
fadds
jecxz
call
pop
sbb
pushf
fisubrs
hlt
push
mov
mov
or
pop
or
js
out
test
add
daa
add
lahf
in
outsl
sub
lods
xor
jb
das
sbb
push
in
push
sbb
inc
and
or
mov
and
aas
jmp
lret
ret
clc
xchg
mov
adc
lcall
int
mov
jmp
xor
mov
ret
inc
jbe
mov
filds
jg
mov
inc
enter
xchg
ljmp
xchg
lods
mov
cmp
pop
push
add
or
cwtl
ret
fs
test
push
push
insl
js
test
push
enter
adc
mov
adc
insb
dec
adc
in
adc
ret
repz
int3
sbb
fxam
mov
call
dec
sub
int
jo
dec
pop
add
je
faddl
pusha
movsl
add
or
xchg
stc
inc
inc
sbb
je
test
test
lds
fsubl
sub
push
sarl
mov
jge
pushf
into
dec
mov
inc
sbbl
adc
divb
fnstcw
sub
fwait
stos
lods
in
cwtl
or
lods
nop
jnp
cs
xchg
pop
int
xchg
gs
aam
pop
roll
xchg
aam
cmp
mov
into
int3
or
or
fwait
in
push
pusha
add
rcrb
data16
adc
sbb
sub
rcll
jne
mov
sub
mov
inc
push
notb
lea
iret
push
imul
inc
inc
fdivrs
cld
aad
push
dec
pop
aaa
or
mov
lds
mov
cmp
mov
fwait
hlt
mov
mov
aam
xchg
ret
mov
pop
or
arpl
cmp
iret
or
imul
dec
sbb
out
push
adc
push
pusha
mov
je
shll
and
push
mov
or
mov
push
je
push
inc
and
lea
mov
jne
or
pushf
and
xchg
dec
lret
bound
and
xchg
mov
add
je
xor
add
lret
rolb
test
xchg
or
lds
cwtl
movsl
cld
decl
xchg
lea
ficoml
cli
addb
adc
sub
push
sbb
outsb
repz
sbbb
inc
scas
test
mov
lods
or
lea
bound
xchg
mov
sbb
addb
inc
test
push
xor
popa
inc
mov
les
xchg
cmp
xchg
pop
in
addl
aad
int
leave
or
and
les
mov
out
inc
add
xchg
sub
fstps
inc
sbb
ret
orl
add
jmp
fnstenv
xor
and
sub
jmp
test
orb
mov
mov
sub
xor
xchg
push
lods
add
lret
das
sti
cmpsb
mov
dec
add
and
ss
jmp
inc
in
out
jg
jmp
sbb
fsubrs
inc
and
xchg
cltd
rclb
adc
jno
movsl
clc
ret
les
test
daa
pop
add
mov
and
dec
pop
neg
loop
and
mov
sti
fsts
add
inc
cmpsl
adc
sbb
leave
pop
aad
pop
or
and
sub
xchg
fmuls
cmp
and
loop
cmp
in
pop
xchg
xchg
xchg
push
push
bound
pushf
leave
lret
adc
sbb
hlt
or
xchg
fwait
mov
sub
loope
sahf
clc
and
inc
xor
clc
roll
into
mov
pop
sbb
shrb
addr16
nop
fs
mov
fidivl
sub
rcrl
call
and
addb
stc
pop
out
cmpsb
jmp
add
cltd
cmp
sub
sub
pop
or
pushf
ljmp
sarl
aad
sbb
push
das
repz
stos
fs
pop
flds
in
jge
add
jb
loop
adcl
mov
out
sub
cmc
shl
pop
add
push
arpl
enter
add
inc
or
popa
cld
std
push
jae
or
mov
or
mov
movsl
xchg
mov
pop
shr
std
jne
push
sti
mov
loope
cmc
adc
ret
ss
stos
ret
aaa
test
pop
les
add
inc
pusha
in
in
pop
dec
out
push
lret
dec
inc
lea
adc
lret
shll
cmpsl
sbb
aaa
mov
pop
and
jl
jb
jne
xor
xor
and
xor
movsb
jo
stc
mov
mov
mov
mull
test
sbb
fisubl
loop
and
out
pop
mov
mov
xor
in
fildl
cmp
jmp
inc
push
and
adc
add
faddl
xchg
adc
or
loope
icebp
imulb
push
mov
int3
jno
fsubr
push
std
fiaddl
add
and
adc
add
and
dec
jb
fmuls
xchg
lret
add
push
add
ds
jae
stc
mov
ds
repz
subl
fadd
push
std
test
cli
jmp
mov
jb
fimuls
cs
test
in
mov
dec
add
dec
leave
mov
nop
std
imul
lret
cmp
addr16
mov
leave
push
mov
xchg
mov
add
imul
hlt
ret
lcall
sbb
jne
and
rcll
jl
in
call
add
or
stc
mov
insl
add
lds
or
test
out
loopne
jae
mov
lahf
add
push
pop
cmp
arpl
ljmp
adc
ficompl
es
ja
adc
add
or
jmp
test
leave
sbb
repz
add
and
int
add
adc
push
inc
adc
shrb
or
and
jne
test
test
add
mov
popf
popa
rcl
add
and
add
add
sbb
and
push
jbe
leave
xchg
les
adc
push
jg
call
xchg
or
lret
pop
and
imul
lret
int
push
mov
xchg
daa
or
mov
mov
test
aam
add
inc
xor
lea
jae
dec
jp
pop
cmp
sub
test
push
hlt
jb
gs
add
lahf
scas
inc
sbb
mulb
add
push
sub
mov
adc
xlat
mov
icebp
pop
mull
xchg
loopew
jg
add
mov
adc
push
out
dec
inc
shr
ror
xchg
fildll
pop
adc
adc
aaa
rorl
jb
mov
lret
add
out
jmp
stos
mov
and
inc
dec
mov
cmp
das
xchg
lea
fdivl
jl
inc
inc
jne
lret
lds
out
mov
jl
std
test
or
xchg
xlat
je
cmp
push
popa
lds
pushf
hlt
push
xchg
loopne
jecxz
pusha
inc
leave
lods
test
rcrb
or
je
jmp
pop
inc
fadd
data16
imul
and
sub
inc
in
loope
xchg
fimull
push
arpl
mov
sub
enter
xchg
adc
es
sti
test
adc
aam
loop
add
push
add
imull
jae
test
sub
xchg
test
dec
and
adc
xor
inc
call
mov
out
adc
dec
push
xchg
adc
loop
rcll
test
add
dec
sub
lea
add
movsl
sub
mov
je
jmp
jb
cltd
or
mov
daa
cmp
adc
pop
in
mov
and
test
fiaddl
add
fistl
filds
imul
test
repnz
stos
xchg
add
xchg
in
les
arpl
repz
test
fisubrs
sahf
mov
js
push
lock
xchg
adc
ret
pop
stc
xlat
inc
mov
lret
mov
dec
hlt
leave
repnz
mov
inc
add
mov
pop
roll
ljmp
stc
or
dec
ret
dec
imul
adc
loopne
in
xchg
xchg
clc
and
in
shlb
sbbl
xchg
jp
xchg
mov
lret
mov
gs
adc
mov
add
adc
rorl
xchg
in
mov
subb
test
xor
xchg
mov
pusha
jl
mov
mov
sbb
pop
rcll
inc
gs
adc
jg
sti
adcl
xchg
and
add
in
mov
in
xchg
push
inc
shrl
dec
aam
lds
inc
xchg
push
add
shl
roll
div
dec
mov
fcmovnu
scas
ret
add
shl
or
or
movb
rorl
push
fwait
push
outsl
enter
add
adc
out
les
mov
test
enter
insb
xchg
icebp
add
js
in
arpl
rcrl
xchg
movb
out
xchg
stc
push
lods
xchg
les
sbb
cmc
mov
inc
addr16
lods
dec
mov
inc
mov
pop
daa
in
inc
sbb
sub
fisttpl
dec
pop
mov
pop
sti
push
pop
or
add
xchg
dec
mov
jecxz
add
sbb
mov
ror
fiadds
xchg
add
pop
inc
or
add
fxch
add
lea
pop
dec
mov
flds
pop
pop
shlb
push
jne
pusha
add
ret
sbb
in
push
xor
in
xor
sub
pop
es
or
cld
jbe
pop
sbb
push
inc
add
add
lds
pushw
ja
add
sub
xchg
fildl
adc
icebp
push
mov
xchg
mov
out
enter
notb
jne
rcll
or
push
ljmp
xchg
sarl
push
pop
sub
add
rol
adc
xor
repz
stc
sub
xor
jo
xchg
and
mov
jns
fsts
add
mov
sbb
jmp
pop
push
dec
xchg
push
xchg
les
cmpl
xor
test
jb
jne
pop
and
fwait
arpl
testl
mov
les
addl
cmc
adc
push
pop
shll
mov
jb
fwait
xor
popf
andl
add
mov
mov
aaa
jl
les
fnstenv
xor
mov
rclb
loope,pt
xchg
mov
cwtl
jecxz
mov
push
adcl
mov
mov
inc
or
jo
sahf
xchg
push
dec
and
addr16
or
ret
cmc
jg
mov
mov
arpl
sbb
fdiv
sbbl
stc
and
shl
mov
les
adc
add
or
inc
push
cltd
or
out
mov
notb
out
popa
jne
popf
leave
jp
lcall
mov
adc
jecxz
test
les
hlt
movb
ljmp
mov
adc
inc
push
ret
add
mov
insb
and
xchg
unpckhps
cmp
mov
pop
xor
ja
jae
and
mov
rcl
loope
xor
xchg
out
scas
inc
jb
or
je
adc
mov
outsb
add
inc
std
mov
lahf
ss
in
mov
jne
andl
push
clc
cmpb
push
or
and
xchg
leave
movsb
je
daa
or
test
mov
mov
fs
jecxz
shll
pusha
in
push
adc
inc
mov
popa
xchg
or
sar
adc
inc
std
inc
push
xchg
and
cmp
adc
out
pushf
mov
loope
data16
jg
imul
jbe
in
inc
inc
adc
xchg
adc
sub
fidivrl
cltd
clc
and
jb
cltd
enter
movsb
outsb
aad
or
fs
mov
add
adc
xchg
adc
ret
cltd
inc
xlat
ret
cmpsb
mov
movsl
mov
inc
xchg
frstor
xchg
in
pop
sbb
jb
in
test
jle
movb
mov
movsl
fsts
pusha
mov
leave
cmp
cmp
sbb
mov
daa
or
xchg
dec
loop
js
test
icebp
xrelease
mov
cmpsb
arpl
or
xchg
mov
cmpsb
lret
enter
out
push
xchg
sub
aam
xor
lds
loope
xchg
push
or
addb
out
sub
gs
hlt
jno
out
cmc
jno
jb
or
lods
addb
loope
sub
nop
nop
dec
fucomip
test
cwtl
mov
arpl
andb
add
and
jecxz
pop
cmp
std
push
or
pop
movsb
xor
sar
mov
mov
cltd
cmpsl
aad
jg
inc
sub
jae
das
call
ja
test
or
push
lret
xchg
pop
sub
stc
xchg
mov
or
movsl
shrl
xchg
xchg
ss
mov
jl
dec
and
mov
pushf
data16
cltd
mov
loope
add
xor
popf
fsubs
cwtl
sbb
sbb
mov
js
nop
shlb
and
js
xchg
add
sbb
inc
xor
dec
es
jns
and
mov
mov
jne
lret
cltd
cmp
dec
inc
rol
arpl
mov
pushf
je
jl
sbb
mov
rolb
add
push
loopne
hlt
or
je
lods
rol
repz
add
sbb
jg
xor
insb
inc
neg
in
xlat
roll
fiaddl
int3
aam
enter
mov
add
pop
int
sbb
pop
push
mov
xchg
ret
push
cmpl
roll
push
lea
cli
add
not
inc
test
pop
je
rcrl
mov
icebp
mov
inc
cltd
inc
mov
stos
xlat
sub
test
ljmp
cmp
sbbl
inc
scas
ja
cmp
jo
mov
xchg
scas
xchg
cmp
sub
adc
loopne
mov
mov
adc
shrl
add
jge
cmpsl
icebp
sub
mov
lcall
pop
xchg
sbb
ret
lds
xchg
daa
jmp
xchg
ret
adc
jb
sbb
rcrl
xchg
pop
push
popf
mov
or
shl
mov
fadds
add
es
inc
push
add
inc
sub
adc
or
in
lock
sub
pop
lds
cld
or
adc
push
xchg
mov
push
ret
insl
or
adc
arpl
hlt
add
jo
out
xor
push
fisttpl
xchg
fsubl
aaa
ret
cmp
inc
pusha
lcall
cmpsb
pop
sub
test
das
rcrl
jno
push
inc
notb
push
mov
xchg
mov
loop
mov
rcll
testb
push
je
cmpsb
stc
jns
hlt
fisubl
fldl
imul
add
test
mov
fisubs
xchg
std
mov
and
rol
lret
add
and
fs
push
mov
or
push
out
bound
xchg
les
movsl
mov
fstl
ret
xor
sbb
or
dec
dec
fs
mov
out
adc
add
imul
mov
fsub
or
cmpsb
bound
mov
ja
repz
xchg
jmp
add
adc
test
sti
div
cltd
movsl
jge
mov
push
dec
shr
cwtl
mov
mov
dec
mov
inc
xor
push
stc
cs
leave
xor
loopne
jns
jg
mov
ficompl
orb
test
xor
inc
arpl
fisubrl
out
lods
jge
xchg
xchg
fiaddl
pop
jnp
xor
xchg
jae
or
push
push
call
add
and
jb
adc
mov
mov
or
xchg
adcl
ja
jb
movsb
dec
leave
stc
mov
lret
fistps
cwtl
daa
int3
adc
inc
ret
in
sub
pop
test
stc
mov
and
test
pop
adc
and
add
cmp
push
or
dec
cmp
test
ja
or
jmp
or
clc
cwtl
pop
and
or
inc
rorl
flds
aad
cs
adc
stc
jge
xchg
jb
jl
add
or
push
adc
cmpsl
test
loopne
mov
test
mov
rorl
je
xchg
or
cltd
jge
sub
push
roll
pop
adc
icebp
adc
std
cmp
xorb
push
insb
in
mov
sub
fisubs
add
mov
and
dec
clc
scas
aaa
xchg
bswap
out
mov
loop
xchg
and
jbe
icebp
orb
mov
pop
lcall
loopne
cmp
data16
cwtl
callw
rol
mov
pop
repz
js
adc
xchg
lea
bound
lret
loop
xchg
into
pushf
aas
dec
data16
inc
mov
add
push
leave
xor
in
call
ret
sub
mov
icebp
int
mov
cwtl
clc
push
xchg
aad
dec
cmp
stc
xchg
fs
cmpsl
loope
lods
push
loope
insl
sub
cmp
ss
cmp
popf
into
roll
ss
xchg
loope
pusha
movsl
jecxz
pushf
pop
jmp
adc
dec
ret
cli
ss
in
add
mov
jne
fdiv
jmp
sbb
push
in
pop
mov
xchg
dec
add
fdivl
mov
mov
clc
pop
in
adc
pop
call
je
insb
in
loope
addl
xchg
cmc
pop
mov
pop
jg
cltd
jle
rol
std
ret
leave
popf
adcb
xor
add
icebp
adc
int3
push
mov
fimuls
xchg
xchg
stc
pop
jecxz
enter
inc
leave
add
sub
add
adc
fidivrs
cmp
icebp
enter
cmp
or
mov
or
adc
inc
rcr
and
sub
xchg
mov
loope
add
mov
inc
dec
jo
add
mov
pop
adc
add
les
pop
hlt
adc
xor
jl
mov
jp
or
andb
fiadds
or
enter
jmp
aad
daa
sub
cmc
jns
sbb
fsubs
lds
cmp
ret
int3
orb
jne
fisubl
cmc
cs
test
scas
adc
adc
push
inc
xor
add
mov
xchg
insb
xor
jne
sbbb
call
adc
jmp
xchg
xchg
dec
hlt
fs
add
sbb
fldl
xchg
fiadds
int3
xchg
pop
push
cmpsb
mov
push
in
ret
iret
popf
add
insb
cli
ss
addb
fdivrp
jl
lret
out
rcrl
jecxz
leave
orb
loop
xchg
adc
and
mov
add
mov
sbb
xchg
sti
test
add
push
pop
add
push
dec
sub
mov
in
xorl
in
out
sbbl
fcoml
leave
test
mov
daa
out
repz
mov
mov
or
shll
arpl
mov
adc
mov
and
cs
push
sbb
test
fisubl
jl
inc
cmpsb
stc
adc
adc
sbb
xchg
push
test
jl
or
dec
addl
sahf
sarl
cmp
fdivrs
jl
or
sbb
sub
int3
xchg
inc
sbb
imul
sbb
jne
pop
lret
jg
inc
mov
or
mov
ret
sarl
cmp
aam
mov
pusha
xor
insb
cmpsl
or
push
repz
adc
lock
xor
into
dec
aas
cli
mov
fwait
add
mov
leave
add
adc
sbb
fstsw
and
iret
xor
in
jne
mov
add
xchg
cmp
or
dec
add
sub
lret
stos
bound
jmp
adc
pop
cmp
cld
lods
mov
shll
jl
push
into
sub
lock
daa
pop
mov
arpl
sub
les
je
ds
adc
shrl
notl
xor
sar
ljmp
shlb
jae
xchg
movsb
aas
cmp
xlat
outsb
mov
push
inc
test
cltd
push
into
int
aam
jl
in
and
daa
push
mov
es
cmp
fmuls
aaa
push
mov
arpl
mov
and
xor
sahf
fdivl
or
in
pusha
inc
or
fcompl
clc
inc
lea
je
sbb
pop
js
xor
in
addl
fiaddl
call
add
dec
xor
cltd
inc
inc
xchg
frstor
sahf
jne
xchg
in
int3
in
cmc
inc
sbb
adc
mov
mov
or
cmp
sub
sbb
push
inc
dec
sub
cmp
adc
ret
in
sbb
insb
push
xchg
shll
xchg
pushf
loope
adc
mov
fnstcw
addr16
arpl
inc
in
icebp
add
lock
repnz
rcl
jb
or
sbb
aam
and
push
mul
roll
xor
andl
stc
mov
bound
dec
es
mov
repz
in
outsl
stc
xor
cmp
inc
xor
or
mov
je
fisubrl
cmp
mov
je
mov
push
rclb
sbb
mov
adc
pop
jl
xchg
ljmp
out
ret
sub
jb
mov
bnd
aaa
sub
sbb
out
xchg
push
test
mov
xchg
push
andl
movsl
sbb
mov
and
or
sbb
shlb
and
xor
mov
sub
in
mov
inc
out
cmc
sub
push
lds
push
hlt
cmpsb
insl
adc
jle
push
jb
push
rclb
mov
xchg
jo
mov
sub
and
cmp
roll
in
out
call
mov
in
test
push
ds
ret
add
rclb
add
in
test
out
aaa
or
lret
in
pop
add
mov
sub
out
fisubrs
xor
cs
mov
cmp
ret
or
sub
clc
sub
fiaddl
adc
lods
or
or
pop
ret
pop
pop
cwtl
pop
movsl
xchg
fidivl
hlt
lods
xor
hlt
or
mov
pop
cs
lret
add
dec
arpl
hlt
loopne
adc
mov
call
pop
jl
lcall
ret
leave
ret
int3
sub
aas
insb
aam
adc
inc
xchg
loopne
pop
fwait
aaa
scas
stos
in
mov
xor
mov
rol
jp
popf
adc
jne
xor
or
jmp
xchg
enter
push
test
mov
jne
in
mov
sbbb
inc
pop
or
mov
jb
and
mov
shll
or
sarl
es
inc
lea
jl
push
add
mov
or
mov
fs
addb
adcl
pop
cli
ror
and
aam
push
xor
dec
loope
push
mov
mov
adc
daa
mov
cs
pushf
mov
cs
cmc
data16
gs
clc
add
mov
ljmp
test
pop
jb
lds
xlat
jg
fnstenv
movsl
stc
jo
pop
aas
mov
adc
loope,pt
aad
leave
ja
je
mov
insl
mov
inc
jl
jg
and
or
sub
cmp
aam
push
hlt
sub
out
inc
inc
pop
loope
mov
mov
mov
call
cmc
stc
daa
sarl
dec
cld
jg
jl
fwait
in
aaa
xchg
jl
mov
adc
mov
ljmp
shrl
pop
jbe
push
std
or
and
sbb
dec
aam
call
push
fisubs
dec
pop
sbb
movsl
rcll
js
jno
sub
push
out
add
sub
adc
lret
or
mov
icebp
mov
cmp
mov
insb
daa
adc
dec
js
js
and
daa
push
aaa
lods
lods
fsubl
cmp
mov
mov
pop
pop
dec
xchg
pop
lds
xor
ljmp
loopne
lods
fldcw
hlt
mov
lods
inc
push
xor
faddl
and
xchg
mov
sub
push
jb
jl
mov
mov
and
arpl
and
mov
mov
dec
cmpsb
jne
cld
je
add
jno
and
inc
mov
cli
add
xchg
sub
inc
or
jns
push
daa
push
dec
push
xchg
lret
nop
shll
xor
mov
sbb
daa
fisubl
stos
add
addr16
dec
bts
out
pop
pop
cmp
stc
jg
out
xor
outsb
fimull
cmpsb
mov
push
adc
push
aaa
loop
arpl
enter
lahf
test
lret
add
add
sbb
pop
jmp
xchg
inc
in
push
scas
fcoml
jmp
mov
or
shr
inc
lcall
into
jno
inc
aam
inc
jg
add
xchg
inc
in
jne
inc
cmp
adc
mov
or
or
or
mov
and
jecxz
pop
add
push
inc
and
adc
aaa
aad
shll
mov
mov
ret
sbb
shll
insl
and
and
lea
addr16
aam
fdivrp
mov
push
and
in
ficoml
cwtl
jae
aas
adc
xchg
jecxz
pop
xchg
nop
stos
and
dec
in
loope
addr16
aam
and
ss
mov
ss
inc
mov
ret
in
movsb
xchg
out
xchg
mov
repz
sub
stos
inc
mov
dec
hlt
mov
fiaddl
sub
push
jl
cmpsl
jo
in
mov
pop
lds
sbbb
adc
test
mov
addr16
jecxz
popf
fwait
mov
lret
fs
iret
mov
loope
fisubrl
stos
mov
cmp
mov
and
shl
sbb
or
insl
leave
in
sbb
test
adc
adc
js
rclb
push
outsl
add
lret
push
sbb
out
push
dec
mov
push
adc
mov
add
test
fs
outsb
push
xor
jmp
mov
repz
inc
inc
mov
adc
jb
fcompl
leave
ret
mov
or
hlt
jbe
inc
roll
fadd
xchg
fwait
mov
mov
enter
outsl
add
xor
mov
fnstsw
clc
aam
cli
dec
xchg
jae
repz
jb
movsl
push
mov
or
dec
mov
stos
lret
mull
cltd
jns
hlt
and
hlt
xchg
ljmp
sbb
addl
xchg
add
into
hlt
fcmovu
addr16
stc
push
lret
push
sbb
in
pop
out
push
mov
dec
dec
jns
nop
call
add
fs
cli
ja
jno
out
pop
lahf
shll
jg
sarb
ret
push
xchg
mov
paddusb
in
xchg
cmp
dec
mov
shl
add
fcmovbe
fildll
test
fcoms
call
das
dec
pop
xchg
test
pop
je
or
add
pop
and
movsb
mov
xchg
adc
adc
jno
xor
mov
xchg
push
push
pop
pop
add
pop
jne
or
pop
test
shll
xor
and
and
and
sub
mov
inc
mov
push
sub
add
lock
mov
jge
cmc
clc
sbb
add
add
push
jbe
push
inc
aam
xchg
cmp
push
cs
push
leave
lret
or
push
cmpsb
mov
push
jl
dec
xor
xchg
mov
sub
push
cltd
fwait
pop
adc
jg
jmp
out
int
dec
loop
lods
leave
aad
adc
into
push
jbe
int
adc
test
dec
data16
nop
jl
xchg
mov
sbb
addl
fidivrs
inc
push
in
int
je
sbb
sub
fisubl
and
xchg
push
int3
xchg
xchg
push
out
sub
mov
ret
or
mov
dec
xchg
ds
es
dec
fistps
rcll
call
and
fisubl
ja
add
xor
andb
sbb
enter
clc
jae
dec
out
xchg
jbe
pop
push
clc
inc
sub
shl
push
lds
adcl
cmp
inc
dec
repz
adc
into
adc
and
lock
adc
mov
lret
loope
orl
hlt
pusha
aad
rolb
or
ja
sub
push
insl
jbe
daa
aaa
sub
xchg
in
and
outsl
and
movsb
jecxz
push
inc
es
test
dec
clc
lret
bnd
xor
or
cmp
pop
or
mov
adc
test
inc
mov
push
push
leave
test
xchg
adc
sbb
rol
rorb
xor
inc
push
dec
push
out
fwait
pop
icebp
ss
adcb
pop
in
pushf
call
popf
fs
fisubl
sub
adc
ljmp
mov
aam
fisubl
and
test
testb
cmp
or
call
andb
cwtl
je
testb
push
inc
insb
cwtl
cmp
sbb
in
cmp
enter
mov
loope
mov
hlt
cmc
out
cmp
enter
inc
xor
add
sbb
ds
push
xchg
hlt
repnz
mov
adc
or
pop
jecxz
sub
xchg
arpl
pop
leave
adc
push
pop
pushf
mov
fidivl
jbe
cltd
call
jle
or
xchg
pushf
and
cmpsl
mov
popa
xchg
sarl
jecxz
pop
inc
fsubs
push
push
push
pop
jl
ds
jmp
sbb
js
or
adcl
pushf
pop
into
bound
scas
js
pop
lcall
lcall
inc
adc
ja
adc
std
xchg
nop
cli
shll
pop
sbb
sbb
jbe
roll
arpl
add
test
inc
or
mov
dec
mov
fistps
or
cmp
les
fcmovnbe
jbe
push
inc
jbe
add
pop
inc
pop
out
cmpsb
clc
sbb
cmc
xorb
jmp
shl
in
rcrb
or
sbb
fiaddl
rcrl
out
pop
test
test
pop
leave
fisubrl
std
out
xchg
mov
or
pop
sbb
popf
std
lret
push
mov
lret
stc
cld
or
xlat
mov
and
shlb
pop
mov
cmp
bound
lds
or
mov
pop
call
xchg
pop
pop
or
shrl
dec
mov
jmp
call
repz
clc
mov
mov
push
ret
addb
push
add
lret
xchg
dec
lods
enter
call
in
test
push
xor
jne
gs
sarb
add
call
repnz
les
fdiv
pop
mov
or
pop
lret
mov
ficoml
pop
leave
pop
and
adc
inc
insl
nopl
push
adc
add
xor
mov
dec
mov
cltd
insb
inc
sub
ret
out
pop
or
es
mov
and
sbb
add
movsl
pop
push
sub
sarl
movsb
sub
das
repz
les
lret
adc
outsb
sbb
push
inc
jb
dec
jg
fs
cld
mov
out
sbb
cmc
fdivl
cli
test
push
xchg
sbb
mov
cli
clc
clc
mov
add
mov
std
xor
sbb
in
imul
inc
mov
andb
popf
and
xchg
xchg
xchg
leave
arpl
sbb
add
nop
aam
sbb
out
pop
repz
aad
mov
inc
rep
mov
jmp
arpl
out
pop
push
jb
je
mov
add
xchg
popf
fucomi
xchg
cltd
ret
add
mov
add
xchg
daa
mov
mov
add
gs
xchg
push
mov
lret
pop
jmp
rcrl
aad
in
nop
mov
push
aaa
dec
pop
movsl
xor
add
hlt
cld
aaa
inc
sbb
test
leave
inc
cmc
shll
data16
lahf
inc
jno
sub
dec
push
xor
mov
inc
dec
in
jb
inc
mov
mov
sahf
and
jecxz
adc
sub
pusha
dec
repnz
adc
in
and
mov
sbb
roll
ss
or
arpl
stos
fisubrl
jb
pusha
jnp
xor
add
inc
jbe
js
push
mov
inc
push
mov
dec
js
add
lret
mov
test
inc
loop
push
lds
aad
pop
pushf
mov
loop
mov
jb
xchg
push
inc
repnz
stc
aam
jo
data16
pop
jp
das
add
xchg
stc
add
int
xchg
lret
popf
lea
push
jb
inc
imul
add
jbe
rclb
mov
xchg
mov
ss
scas
add
jg
mov
rcl
ficompl
adcb
stc
push
mov
cltd
cmc
push
add
xor
jge
cmpsl
inc
xor
sub
xor
int
mov
push
int3
mov
xor
pop
ljmp
jb
xchg
fimull
dec
mov
jne
aam
push
inc
in
and
in
outsb
fwait
rcrb
repz
repnz
mov
aaa
jg
ja
and
hlt
mov
mov
leave
lock
cmp
test
and
and
das
aaa
add
add
pop
inc
lods
lret
mov
or
fs
inc
sbbb
and
popa
sbb
mov
shrl
lret
add
pop
mov
lea
xchg
xor
int
pop
sbb
pop
js
orl
mov
not
adc
lret
roll
and
xchg
add
pop
xchg
cmpsl
and
stos
inc
leave
test
xchg
inc
leave
xor
push
sbb
pop
inc
dec
out
int3
push
sub
dec
xchg
shll
and
mov
icebp
and
jo
movsb
rol
jo
dec
imul
inc
les
iret
jge
mov
das
jno
hlt
xor
ds
sub
std
lret
push
and
mov
inc
mov
adcb
inc
xor
pop
sub
cmp
rorb
icebp
mov
mov
test
repz
into
andb
inc
inc
popa
shl
bound
shrl
lcall
jg
lret
cmp
lock
and
mov
mov
cmpsl
in
ja
dec
sbb
es
jb
data16
push
insl
add
mov
sbb
test
cmp
cwtl
xor
adc
shrb
les
sbbl
sbb
scas
rcl
es
cs
stc
addb
daa
lds
cmp
in
fadds
stos
sub
and
fsubrs
push
imul
mov
adc
test
mov
mov
push
mov
shrb
jb
test
jg
fst
fmull
cwtl
in
dec
cwtl
aaa
cwtl
cmp
aas
add
shrb
jecxz
lods
hlt
push
adc
mov
int3
int
mov
vmovups
mov
jge
call
ds
sbb
in
mov
cmpl
jecxz
ljmp
jmp
sub
add
dec
xor
addr16
dec
jge
iret
sub
and
or
jbe
jns
cmc
inc
loop
and
or
xchg
lret
mull
or
ret
push
jae
ret
mov
roll
xlat
insl
movb
or
add
int3
pop
xchg
jne
lods
stc
push
cmp
fwait
lds
andl
aad
adc
xchg
pop
mov
or
xor
mov
shll
or
xor
inc
jg
loope
cmp
rol
fld
or
in
shll
push
and
outsl
mov
daa
mov
repnz
icebp
cmc
int
js
pop
dec
or
add
in
dec
or
xlat
or
mov
jns
add
pop
push
in
mov
sub
dec
imul
cmp
inc
cmp
mov
aam
mov
data16
mov
test
jge
adc
aaa
sub
pop
sub
or
sbbb
das
icebp
sub
mov
gs
in
enter
in
add
mov
mov
adc
pop
adc
pop
add
leave
cs
push
pop
mov
add
sbb
rorl
jecxz
in
loopne
dec
mov
leave
add
jo
mov
test
inc
inc
out
xchg
movb
dec
sub
and
xchg
popa
add
sub
inc
push
ret
jo
xchg
outsl
push
lods
jl
or
data16
pop
or
cmp
cltd
adc
out
add
aaa
add
or
out
sbb
test
call
mov
les
cli
mov
jl
es
sbb
enter
addb
loope
mov
inc
stos
and
push
dec
cld
lret
lret
fiaddl
ss
or
int3
mov
push
jo
push
inc
push
push
mov
or
mov
adc
pop
mov
jl
xchg
mov
lret
loope
jne
jle
loopne
add
mov
dec
add
sti
dec
sub
ret
and
push
sub
cmp
jecxz
sbb
pop
sti
mov
sti
push
adc
fisttpll
cmpsl
cmc
dec
sub
adc
arpl
dec
arpl
adc
cmp
pop
cmp
jge
repz
jns
fcmovne
cmpsb
ret
xchg
xchg
outsb
add
call
add
sub
pop
xchg
enter
stc
int
mov
mov
push
std
shl
cwtl
mov
test
sti
push
sahf
dec
cmp
mov
jae
sbb
js
push
es
iret
shr
mov
lret
ss
cwtl
inc
or
inc
mov
inc
xchg
pop
sub
lret
insb
jne
aam
push
into
inc
lret
stos
pusha
mov
int3
aad
and
call
sbb
out
push
dec
vmulpd
sub
pop
fdivl
inc
adc
push
mov
push
mov
jnp
fildl
aaa
mov
loopne
xchg
adc
xchg
addr16
pop
lahf
fsubrl
daa
inc
mov
arpl
jno
outsb
or
or
add
orb
clc
mov
xor
adc
xorb
roll
in
pop
xchg
mov
push
ret
test
in
je
scas
cmp
jb
dec
and
loope
mov
jne
out
andb
imul
push
sub
inc
ljmp
in
or
add
ror
out
sbb
imul
lret
fists
je
fwait
sbb
fisubl
sbbl
xor
ret
mov
jecxz
pop
cmp
add
lret
pop
pop
loopne
mov
ficoms
and
mov
add
or
mov
xchg
inc
in
imul
cwtl
imulb
cmc
adc
cli
mov
adc
jmp
xchg
push
cmp
adc
adcb
ja
ss
push
add
sub
sbbb
js
mov
mov
xor
aaa
xchg
or
push
jae
mov
jge
into
out
xor
fisubrs
out
inc
push
and
mov
movsl
inc
adc
addr16
lret
movsl
sub
nop
and
ficompl
or
je
mov
adc
mov
leave
jge
pushf
mov
std
test
pop
out
xchg
add
adc
xchg
xor
rorl
idivb
jo
ficoml
xchg
xchg
push
mov
cs
or
lcall
gs
sbb
xchg
test
pop
and
in
std
mov
sub
in
cwtl
and
fcoms
imul
or
jecxz
jge
jmp
adc
adc
ret
or
jl
jle
lods
jle
inc
add
rorb
xchg
xchg
cmp
ret
xchg
pop
pop
push
and
insb
push
leave
xchg
push
add
js
adc
jno
cmc
aaa
jmp
add
jo
stc
clc
jb
jecxz
sbb
cmc
xorl
mov
clc
add
loopne
pop
ja
lret
cmpb
aaa
lock
in
mov
add
arpl
repnz
add
xchg
cwtl
shll
les
mov
dec
mov
push
test
scas
or
repz
jne
push
pop
mov
daa
adcb
fadds
xchg
add
adc
push
stc
loopne
adc
hlt
lret
pop
jecxz
sahf
pop
xchg
stos
mov
add
ss
mov
mov
mov
push
sub
add
aaa
testl
mov
loopne
and
icebp
or
sub
lret
lcall
cmc
cltd
push
fs
mov
mov
cmp
stos
inc
gs
mov
repnz
out
call
or
mov
pop
xchg
cmpsl
jg
loope
sub
lret
scas
movsb
and
sub
jecxz
xchg
lea
or
nop
push
adc
aam
sbb
loope
in
mov
fmul
jne
lock
data16
xchg
js
cmp
mov
sbb
ja
add
fwait
xchg
iret
push
jmp
scas
dec
dec
orb
orb
xor
daa
fneni(8087
mov
ret
out
xchg
test
movsb
ja
push
out
rcll
mov
shrl
aaa
popf
adc
pop
sar
ds
in
xchg
in
lods
or
int
repz
push
dec
mov
fcompl
arpl
mov
sarb
aas
xor
add
icebp
test
icebp
push
add
ret
cwtl
mov
push
push
mov
push
cmp
leave
in
cs
xor
hlt
pop
shll
test
aam
lret
jmp
jmp
fs
sub
xchg
or
push
cmp
fwait
mov
in
pop
idivb
andl
cmpsb
pop
pop
rorb
mov
cmp
jb
dec
out
addl
loope
sti
mov
jb
lret
in
add
sub
sbb
sub
xor
sub
movsb
rcll
adc
xor
jecxz
add
inc
pushf
jbe
pop
pop
jg
mov
rol
and
sub
push
mov
shll
xor
xchg
add
movb
iret
xor
mov
jecxz
push
add
dec
jl
std
jb
fwait
insb
loope
repz
popf
jmp
cmpb
add
push
and
add
lar
mov
int3
pop
adc
ja
mov
add
adc
add
fimull
bound
cli
sub
xchg
mov
es
fidivrl
mov
or
lret
ss
fdivrs
out
cmp
std
in
push
jne
rol
lret
aaa
sarb
push
pop
jmp
test
mov
dec
mov
adc
xor
and
movsl
cmc
jne
cmp
jmp
in
ja
mov
mov
lcall
and
fwait
mov
sbb
push
out
stc
pusha
clc
adc
jp
inc
adc
pop
jne
ljmp
sub
cli
add
imul
sahf
jns
mov
out
jno
stc
aaa
rcll
jne
inc
aad
adc
xchg
xchg
and
mov
mov
dec
outsl
addr16
push
xchg
andl
repnz
fimull
adc
pop
ret
jp
mov
adc
push
add
data16
scas
pushf
adc
lock
fildll
test
fnstsw
aaa
adc
sub
adc
jb
push
mov
test
pushf
or
xchg
movsl
push
cld
fs
fld
cmpsb
push
pop
push
jmp
mov
push
in
jecxz
aad
cmp
push
outsb
lock
iret
pop
cwtl
arpl
cmp
scas
repnz
or
std
rcll
sbb
or
mov
jno
daa
scas
cli
jmp
add
imul
ds
jle
lahf
flds
cmp
cmp
xchg
adc
and
mulb
cmp
add
mov
in
dec
pop
mov
xor
fidivs
fptan
and
orb
addb
shll
insb
inc
ret
cmpsb
les
scas
mov
orb
shll
popa
mov
jp
movsb
in
sahf
int
mov
in
incl
popa
shr
xor
sbb
jbe
nop
or
push
dec
xchg
cli
adc
jg
icebp
loopne
xor
cmc
pusha
stc
filds
adc
and
jle
call
xchg
std
mov
cld
push
rol
or
mov
orb
icebp
loope
jae
scas
cmp
push
mov
xor
cld
mov
inc
repz
loope
fnstcw
mov
dec
hlt
les
and
mov
ficoml
cld
lods
pop
mov
jb
jno
fbld
lret
adc
cld
jmp
call
mov
mov
aam
mov
mov
das
roll
xlat
push
mov
ret
inc
sub
ret
rorl
aas
imull
push
fsubs
aam
xchg
sub
int
cmpl
sahf
ljmp
test
adc
mov
ret
ret
mov
mov
data16
cmpsw
mov
ljmp
roll
and
cmpl
fstl
mov
test
jmp
mov
add
jmp
push
mov
adc
cmc
lods
in
call
mov
jb
stos
push
ret
loop
push
in
cmp
mov
jmp
xor
push
add
adc
outsb
in
fiaddl
push
shll
inc
mov
jb
add
loopne
psubusb
enter
aaa
movsl
sub
leave
ljmp
pop
xchg
adc
outsl
stc
into
jmp
mov
mov
add
xchg
mov
and
sub
aad
mov
dec
mov
out
mov
rclb
hlt
in
out
iretw
xchg
and
int
bound
xlat
push
clc
xchg
mov
push
jg
or
add
xchg
dec
icebp
xor
xor
mov
adc
icebp
jbe
insl
pop
xchg
cmp
or
cli
insl
popf
dec
sbb
stc
movsb
cmc
dec
daa
test
dec
aaa
mov
push
adc
mov
adc
popf
add
lret
jecxz
mov
test
cmc
sahf
push
je
les
lret
adc
or
and
add
stos
call
aam
loope
inc
fdiv
mov
and
insl
jg
add
and
mov
lret
cld
cmpsb
inc
lret
push
arpl
pop
hlt
xlat
pushf
and
in
test
xchg
or
clc
pop
mov
hlt
rcll
insl
dec
cmp
movsb
and
xchg
dec
out
or
ret
aam
or
xchg
mov
add
adc
or
push
jo
sbb
and
shll
cmpb
adc
ret
dec
adcl
jb
sahf
shll
in
cs
sub
je
and
dec
arpl
in
or
adc
mov
ret
in
in
adc
orb
inc
pusha
das
shlb
sub
int3
leave
repz
sub
cltd
xlat
add
ud1
mov
sbbb
dec
mov
and
add
mov
jns
dec
and
mov
out
xchg
cmp
jp
loope
fbstp
xchg
popa
popa
ja
add
xchg
repnz
mov
sti
out
mov
mov
mov
and
addr16
jbe
cmpb
fdivrl
xor
es
mov
dec
loope
lods
addl
ljmp
invd
movsb
mov
repnz
or
pop
mov
inc
lret
push
stc
mov
aaa
mov
test
jle
cmp
cltd
jecxz
stc
out
pop
push
push
mov
leave
mov
lods
inc
mov
ret
ljmp
or
pop
adc
sbb
jne
dec
pop
pop
xchg
int
xchg
daa
push
pusha
mov
inc
mov
jmp
add
rcll
pop
jb
adc
mov
push
lret
push
cmp
sub
movsb
lds
mov
xor
movsb
ficoml
hlt
mov
mov
add
adc
jp
mov
mov
mov
mov
inc
lds
in
ja
xchg
in
sahf
jae
add
mov
arpl
int
mov
leave
mov
fcompl
mov
imulb
movsb
shrl
roll
sub
lods
sub
divb
jae
call
mov
adc
jmp
jnp
loopne
test
bound
movsl
out
lods
lds
test
add
test
adc
test
jp
icebp
add
pop
cltd
pop
add
pop
lret
popa
add
mov
out
fwait
mov
cmp
nop
hlt
mov
cltd
push
push
leave
fisttpll
aam
cmp
fstps
roll
shll
dec
push
loopne
add
clc
mov
in
sbb
popa
and
xchg
xchg
leave
inc
jae
inc
clc
and
cmp
enter
enter
xchg
cmp
add
in
sbb
mov
fldz
push
xchg
shlb
testb
inc
es
scas
mov
mov
sub
icebp
pop
mov
frstor
insb
inc
ficoml
orl
or
add
and
adc
jae
push
ja
lcall
add
jl
inc
clc
xorb
fsubrs
fstp
dec
aaa
bound
daa
in
xor
jl
in
and
test
jne
add
test
sub
mov
adc
das
mov
push
test
mov
push
les
add
test
fstpl
add
add
sbbl
sbb
mov
sub
adc
pop
pop
mov
cmp
mov
lret
mov
add
inc
in
shlb
fs
add
ds
ret
jp
mov
push
or
outsb
mov
jg
cld
xor
adc
mov
xchg
lret
add
and
inc
sbb
test
inc
je
cs
adc
loope
or
or
lea
ret
aad
fsubl
cmpb
pop
add
fisubs
lahf
pop
xor
imul
or
jecxz
xchg
adc
cmpsb
add
lods
jnp
test
out
andb
adc
cmp
add
add
dec
daa
inc
add
sub
lahf
aad
or
adc
loope
rorl
jae
ret
int3
add
or
sbb
jl
pop
add
insb
in
lock
jmp
cmp
loopne
je
divb
jne
test
xchg
inc
push
in
and
icebp
add
xchg
and
sub
add
rolw
arpl
fadds
sbbl
lret
sbb
insb
or
jb
push
fs
lds
fidivrl
cmp
popl
or
insb
xor
loop
and
cmp
or
cltd
push
push
loop
mov
or
lahf
xchg
inc
loope
mov
repnz
in
in
push
dec
adc
cmp
jmp
adc
xor
bound
movsl
mov
gs
lret
push
lcall
test
addb
insl
call
adc
jbe
mov
push
in
add
repz
add
mov
jo
mov
add
jb
mov
cmp
imul
negb
add
std
mov
mov
aad
adc
pop
insb
push
gs
fcmovb
push
or
hlt
add
out
inc
movsb
lea
sub
gs
lea
ret
insb
and
repnz
and
in
sub
mov
ret
add
pushf
xchg
in
sbb
leave
in
popa
dec
cli
inc
jb
insb
leave
int
mov
inc
or
add
xlat
inc
jns
push
in
aam
mov
sbb
xlat
jo
inc
repz
ljmp
cltd
mov
popf
mov
mov
movsb
cltd
pop
jg
test
iret
pop
push
dec
mov
add
int3
sbb
std
jno
add
or
sub
pop
xchg
inc
icebp
xor
rcr
mov
int
adc
in
in
jl
js
push
xchg
lret
cltd
or
cltd
icebp
cmp
arpl
or
je
and
jae
mov
test
ljmp
out
jae
fs
inc
lea
inc
pop
add
fldl
mov
mov
inc
ret
xchg
ja
sbb
add
adc
add
lods
pusha
pop
js
loop
push
mov
or
imulb
roll
adc
fmuls
mov
mov
arpl
jl
test
popf
xchg
dec
or
xor
and
sbb
jo
orb
lea
push
test
test
or
int
pop
bound
push
adc
lds
push
cmc
sti
mov
push
mov
call
jmp
sahf
cmp
ss
test
xor
inc
adc
push
sub
fs
fisubl
dec
testl
sub
mov
cwtl
sbb
pop
mov
je
pushl
xor
inc
mov
int3
into
add
mov
jb
cmp
push
pusha
andl
rcl
inc
je
cwtl
adc
dec
adc
outsl
cmpb
js
pushf
pop
jb
dec
adc
mov
add
out
lods
jp
fcomps
push
dec
ja
xorb
mov
dec
shlb
fidivl
add
adc
cmp
jle
dec
ss
jne
mov
std
test
test
push
pop
sbb
mov
push
mov
xlat
in
and
add
xchg
pushf
js
xchg
lds
pop
movsl
sub
mov
mov
or
sbb
test
and
xor
test
mov
fsubl
out
test
mov
les
xor
add
mov
mov
in
jmp
scas
dec
and
pop
shrl
fmul
mov
mov
stc
test
ret
mov
xchg
sbbl
mov
repz
movsb
push
icebp
jne
cmp
jbe
test
subl
clc
or
cmp
daa
fldl
lcall
or
dec
or
addb
call
xchg
add
aam
mov
mov
add
xchg
out
push
lds
ret
sbb
rcrl
or
dec
cwtl
aad
mov
mov
rcll
insb
dec
rol
aaa
jb
bound
aam
test
mov
add
leave
adc
lret
jb
lods
sbb
sub
mov
push
inc
insb
jl
and
pop
leave
movsb
xor
icebp
orb
cmp
pop
push
nop
scas
in
std
jb
stc
popa
test
bound
enter
pop
xchg
jne
mov
in
scas
clc
mov
mov
jl
push
dec
push
aas
jge
js
inc
les
stc
add
xor
dec
movsl
test
mov
std
sti
xlat
ja
push
std
nop
mov
jp
test
jne
cmp
pop
jae
inc
fwait
arpl
cmpsb
mov
daa
add
rcrl
or
mov
add
sub
lods
jl
adc
add
mov
xor
stos
and
icebp
sbb
jmp
cltd
test
or
cld
int3
mov
repz
lds
sub
cmpsb
xchg
inc
gs
mov
leave
jb
out
adc
adc
cmpl
sarl
jle
push
and
add
adc
jnp
fldenv
adcl
insb
dec
std
mov
xor
push
xor
out
fcoms
or
add
andl
add
fucomi
pop
cmc
inc
mov
out
loopne
in
sti
jns
jmp
mov
into
push
negb
ds
aam
fidivl
jecxz
in
or
pop
sub
add
int
adc
in
in
mov
insl
jg
sahf
cmp
icebp
jb
insb
sub
or
xor
loop
idivb
mov
jne
lds
sbb
cmp
add
bound
sbb
nop
push
or
pusha
push
pop
xadd
stc
ljmp
cmc
add
or
mov
icebp
jo
and
repnz
adc
int
sub
lret
xchg
test
push
add
das
cmp
cmp
icebp
push
rorl
sbb
rorb
mov
xor
sbb
adc
add
cmp
add
jae
cli
stos
jb
outsb
jns
jb
push
adc
out
sahf
stc
add
xlat
decb
dec
js
mov
add
push
pop
jg
ret
int
sbb
jne
das
jle
sub
mov
js
scas
and
pop
sarb
or
aas
int
xor
fldcw
or
pop
cmpsb
add
out
repnz
repz
clc
cld
xchg
or
sub
push
fisubrl
or
imul
xor
adc
sbb
or
cmp
and
das
xchg
mov
bound
shrl
out
arpl
mov
mov
jle
inc
test
les
fs
mov
xlat
dec
cmc
scas
fs
test
add
sbb
dec
add
or
mov
adc
adc
add
or
and
hlt
mull
sbb
test
and
mov
push
pop
push
adc
loope
cltd
jno
and
nop
inc
je
fstpt
lods
call
movsl
sahf
add
adc
add
inc
sti
pop
pop
add
pop
add
xchg
adc
hlt
outsl
aaa
test
mov
mov
popa
mov
or
stos
jae
repnz
sub
enter
into
pop
mov
arpl
jae
pop
repz
lea
ret
push
adc
or
popa
and
inc
jecxz
mov
mov
jb
movsb
xchg
imul
add
push
jl
mov
aad
loope
or
cli
dec
lock
lret
mov
cltd
mov
fcoms
dec
int3
jmp
inc
dec
mov
cmp
xor
jp
stc
xor
mov
or
mov
jl
xchg
idivb
pop
call
fcompl
pop
mov
push
or
xchg
in
pop
mov
cmp
jns
adc
icebp
inc
xchg
stc
jns
jbe
jle
test
jnp
jecxz
rcrb
add
fnstcw
imul
or
mov
push
or
std
sysexit
mov
in
mov
dec
lea
sub
loop
xor
aad
push
std
inc
ret
lea
addr16
aad
or
dec
or
sbb
add
mov
stc
lds
xor
paddsw
push
xchg
inc
jg
and
ret
add
pop
jb
pop
mov
popf
xchg
aaa
pop
iret
inc
lods
push
mov
lods
repz
push
test
push
jmp
addr16
sub
js
insb
mov
xchg
sbb
xchg
xchg
jb
add
cmpsb
and
push
ror
push
cmp
jl
mov
movsb
mov
and
aad
aam
push
lea
add
lret
ljmp
inc
jno
pop
arpl
jecxz
or
xor
or
xchg
aaa
fisubl
dec
scas
sbb
lea
jne
jno
shll
mov
icebp
ss
and
jb
inc
aad
xor
test
leave
cmp
nop
popa
mov
adc
cmp
or
test
in
shl
lret
push
insb
xor
or
jb
inc
pop
and
insl
xchg
insl
mov
adc
cld
push
sub
jne
inc
dec
cltd
mov
cmpsl
adc
cmp
je
lods
xchg
jo
jne
hlt
and
add
ljmp
add
test
sub
inc
fdiv
subl
pushf
lret
xchg
stc
clc
in
dec
test
xchg
fidivl
pop
lret
ret
xor
jl
inc
insl
mov
xchg
test
mul
insl
popf
ret
xchg
test
inc
mov
lods
or
cmp
jb
pop
mov
out
lahf
les
inc
adc
sub
jbe
sbb
jl
ljmp
fadds
aad
popl
or
sbb
inc
mov
mov
mov
mov
imul
loopne
jge
cmp
imul
push
dec
mov
sbb
arpl
mov
and
sub
xor
or
lret
sbb
xchg
data16
jb
jl
sub
bndldx
sarl
push
aam
push
test
push
aam
fwait
mov
insb
adc
lods
mov
ret
sarl
adc
clc
aaa
daa
shlb
sbb
in
loopne
mov
cli
les
cmpsl
lret
or
jb
lods
cli
dec
imul
pop
cmp
mov
xchg
add
lcall
cmpsl
aam
test
clc
mov
push
adc
jg
push
cli
add
add
xchg
rcl
insl
mov
addr16
fcoms
rorl
js
je
or
cld
iret
test
xor
cmp
or
push
test
adc
imul
enter
adc
outsl
sti
bound
fcmovb
xor
xchg
pop
aad
xor
and
ljmp
xchg
jge
pop
sub
jbe
divb
mull
inc
xor
and
or
mov
or
xchg
js
add
mov
repnz
mov
xor
sub
shr
mov
insl
jnp
inc
rdmsr
mov
and
sti
adc
adc
sub
xor
aam
xor
stc
fildll
data16
lods
loope
mov
mov
insl
insl
xor
add
outsb
ret
xchg
or
sub
adc
pop
repz
jg
xor
inc
gs
sahf
pmulhuw
cmpsl
inc
push
mov
mov
or
and
and
mov
outsl
out
add
pushf
push
jecxz
aad
cmp
lock
xchg
aad
loopne
inc
push
jecxz
and
ret
aad
loopne
inc
push
movsb
pop
shll
cmp
adcb
pop
pop
xchg
and
adc
mov
aad
sbbb
cmc
inc
pushf
mov
daa
in
mov
inc
inc
pop
lret
dec
lret
mov
mov
xor
cld
push
dec
addb
adc
test
mov
int3
adc
aas
icebp
cmc
mov
jg
mov
call
out
dec
dec
mov
xchg
mov
ds
adc
xchg
sub
dec
or
inc
mov
adc
sbb
in
ret
inc
or
pushf
cmp
dec
inc
jl
xchg
aad
loopne
les
aad
loopne
inc
push
jecxz
add
ret
rcll
loop
ret
scas
push
or
or
mov
or
jmp
mov
dec
pop
mov
sbb
sti
lds
stc
or
js
ret
inc
sarl
int
add
jmp
addb
or
popf
cld
inc
sbb
pop
daa
test
push
test
adc
aam
cmp
lods
pop
mov
in
dec
mov
mov
mov
leave
xchg
into
mov
mov
ret
push
mov
push
push
adc
fldl2e
rolb
sbb
cmpsb
add
shr
dec
rcrb
pop
inc
lcall
push
pop
sub
mov
jns
test
xor
or
xor
xchg
xchg
sbb
jb
iret
mov
xor
add
sub
ret
mov
js
ds
lds
lcall
and
data16
jnp
test
sbb
mov
or
cmpsb
jl
jg
jmp
inc
inc
lds
es
aad
and
push
adc
jae
dec
xchg
js
mov
addr16
lds
js
or
push
jmp
aam
or
add
xor
dec
fldenv
leave
mov
aas
in
jb
add
sar
inc
jo
cmp
xchg
mov
loop
test
and
loopne
leave
jecxz
les
mov
decl
cmp
fimull
mov
sti
adc
stc
test
jecxz
cmc
dec
test
je
add
mov
jge
cli
dec
negb
jecxz
lret
clc
test
sarb
mov
cmp
arpl
pop
int
dec
stos
in
cmp
lcall
movsl
xchg
jp
pushf
ret
inc
ret
js
ret
fadd
sub
ja
shlb
shll
ret
fidivrl
sub
icebp
roll
adc
xor
and
push
mov
rcrl
push
and
sub
sarb
or
sbb
xchg
or
or
jb
fsubrl
loope
and
enter
mov
add
ljmp
xchg
test
arpl
js
lcallw
test
fcom
sub
ss
cmpsl
pop
addr16
les
pop
lods
gs
or
jecxz
mov
dec
push
and
or
repz
inc
jo
lea
lahf
test
nop
pop
je
add
cld
xchg
sar
adc
inc
in
movsb
mov
pop
or
inc
add
add
ss
inc
fiadds
add
inc
repz
xor
leave
cmp
aas
data16
sub
and
out
and
mov
ror
and
push
stc
sbb
or
leave
ja
aas
jl
push
imul
insl
mov
jge
test
cmpsl
inc
push
iret
pushl
aas
push
and
fldenv
push
sbb
dec
fcompl
mov
push
jae
pop
cld
inc
adc
cmc
xchg
push
loope
add
cvtps2pd
ss
jg
cmpsl
les
addr16
xor
inc
or
mov
cmp
hlt
insb
dec
in
pushl
loope
xlat
xchg
cmp
xor
movsl
push
test
sbb
jne
test
rolb
add
js
adc
add
out
bound
adc
xchg
sub
lret
fcmove
cltd
data16
sub
rolb
roll
or
mov
fcompl
je
sub
clc
repz
call
aaa
in
add
icebp
sbb
and
incl
cld
adc
and
pop
cwtl
adc
push
xchg
xor
je
adc
mov
cli
cmpsb
xor
xor
sbb
sub
cmp
call
fmul
int3
ffreep
stos
fcmovnb
les
out
sub
xchg
sarl
lret
mov
inc
add
xchg
loopne
test
test
gs
in
jne
aas
dec
jb
stc
aad
loope
pop
rcrl
xor
jb
and
ret
xor
jle
test
sti
mov
fwait
loope
mov
add
mov
hlt
or
popa
call
int3
dec
xchg
push
mull
sub
xchg
in
or
jmp
jnp
mov
bound
push
xchg
incl
xchg
fsubrl
and
call
pushf
cmp
ja
rcrb
dec
lock
add
es
xor
pop
add
ljmp
push
xchg
mov
cmp
sbb
enter
test
mov
add
jmp
push
inc
add
jne
es
insl
insl
loop
add
mov
pop
stos
outsb
lea
jno
ja
insb
fidivl
push
or
test
hlt
add
dec
loop
push
lret
fidivrl
xchg
test
orl
bound
push
aam
call
push
dec
mov
jl
xchg
ret
bound
negb
xchg
cmpsb
std
in
mov
and
icebp
and
adc
add
mov
js
push
movb
and
push
rorb
fldl
push
lea
nop
jo
add
inc
ficoml
in
xor
inc
comiss
push
icebp
mov
xor
scas
sub
fwait
inc
je
jp
in
jb
sub
mov
xchg
shr
adc
les
into
jb
loopne
mov
sbb
inc
mov
sub
mov
sbb
imul
sub
adc
idiv
xchg
pop
inc
xchg
jl
sbb
xchg
daa
sub
add
and
lea
shrl
mov
icebp
push
addr16
add
add
jge
pusha
addw
pop
push
dec
loope
mov
lds
cltd
out
adc
and
scas
arpl
or
and
pop
shrl
clc
sub
ja
cltd
jmp
addr16
test
xchg
nop
stos
sub
push
cld
out
xchg
mov
ret
mov
rcll
popf
jno
and
cmpsl
jne
lahf
mov
pusha
mov
and
pop
rcrl
pop
lret
pusha
mov
lods
inc
jno
xor
lock
mov
fcmove
fsub
xchg
jb
pop
js
fildl
into
sub
lcall
sbb
ss
or
jb
imul
xlat
add
push
movsb
jns
push
pop
push
ds
scas
push
jecxz
jne
fiaddl
movsb
pop
mov
popf
insl
hlt
mov
rorl
movsb
fs
push
xchg
jb
adc
inc
out
lds
shr
test
add
leave
out
adc
stos
fwait
in
and
lds
cmp
fwait
popa
sbb
insb
xlat
call
cwtl
stos
loopne
or
into
popf
mov
or
lods
clc
cwtl
mov
sbb
adc
add
mov
fbstp
or
pop
inc
push
mov
inc
test
push
subl
shll
in
clc
out
inc
mov
hlt
les
outsl
rcrl
xor
lcall
leave
jbe
lea
inc
cwtl
bound
lret
push
ss
mov
jbe
rcrl
pop
inc
add
mov
loopne
lds
sti
cmp
call
push
cmp
add
idivb
std
dec
pusha
xor
int3
aaa
cmp
jg
jne
mov
push
or
cwtl
shll
pop
andl
xchg
int
xchg
jmp
call
sbb
rcl
sbb
sbb
aas
arpl
inc
ds
sub
mov
stc
test
leave
popa
je
test
idivl
push
fsubr
and
xor
lcall
cmc
sbbl
adc
sbb
and
leave
xchg
rolb
test
and
sub
fldenv
jl
inc
xchg
leave
popf
xor
loopne
inc
lods
ret
sub
sti
jecxz
pop
ljmp
mov
push
popa
es
movl
test
fimuls
cmp
inc
dec
mov
test
int3
xorb
hlt
loope
rorl
jl
lods
mov
sbb
lret
jb
insl
mov
dec
hlt
mov
lds
xchg
add
xor
or
adc
loope
or
sub
imul
bound
loopne
or
out
mov
push
push
inc
mov
xchg
mov
loopne
sbbl
insl
mov
in
jne
shlb
shlb
mov
fdivrs
std
cs
hlt
push
icebp
sysenter
or
adc
push
roll
cmp
fnsave
jl
cmp
add
adc
arpl
add
insb
inc
xchg
popl
mov
xchg
push
cmpsb
dec
mov
pop
sbb
mov
mov
xchg
pushf
jbe
xchg
mov
cmp
mov
jno
mov
mov
inc
mov
mov
ret
jno
test
ja
pop
in
mov
test
cli
push
jne
mov
xor
hlt
stos
xchg
jecxz
mov
into
dec
ret
fadds
mov
int3
leave
ficomps
ffree
inc
push
mov
stos
out
lds
stc
pop
rcrb
jg
mov
xchg
jecxz
add
inc
cmpsb
lock
jge
and
inc
push
inc
fisubrs
inc
negb
xchg
outsb
popf
mov
mov
stc
enter
and
cld
xchg
sarb
imul
cwtl
lds
and
mov
movsb
jo
xchg
test
and
pop
push
mov
cmp
pop
sub
scas
pop
mov
gs
mov
pop
inc
xchg
in
sbb
js
jns
xchg
mov
aaa
and
pop
dec
popf
in
inc
clc
pop
add
mov
sub
in
xchg
mov
imul
in
sbb
test
in
aad
loope
add
iret
cld
js
lods
jae
pop
stos
cld
push
icebp
roll
xorl
and
lds
daa
aaa
pop
cmp
mov
mov
jb
mov
mov
dec
fidivrs
mov
fs
adc
ret
inc
mov
push
in
les
ljmp
push
test
ret
inc
fbstp
popf
aaa
jns
flds
sbbb
adc
inc
pushf
seta
aam
mov
shll
or
adc
cmp
gs
aad
js
mov
cmc
fwait
push
add
push
fstpt
inc
shlb
inc
stc
test
inc
in
dec
jecxz
adc
cmp
pop
mov
hlt
daa
adc
adc
xchg
inc
add
movsl
sub
leave
sbb
dec
dec
mov
loope
mov
adc
push
mov
add
jl
cmp
mov
in
add
dec
test
mov
push
xlat
dec
rep
inc
pop
adc
mov
push
inc
and
add
inc
repz
or
dec
adc
jae
xchg
adc
mov
pop
call
jae
fidivl
aaa
or
nop
adc
imul
in
mov
lret
imul
and
in
mov
cmpsl
sahf
imul
or
pop
cwtl
repz
jno
int
jns
and
mov
mov
push
dec
push
data16
repz
push
fists
repnz
jle
adc
xor
shll
jmp
mov
nop
decl
out
das
fwait
cmc
movsb
adc
jnp
movsl
test
arpl
dec
or
lahf
or
in
test
hlt
bound
lea
iret
iret
bound
aaa
scas
leave
adcl
xchg
inc
cli
cwtl
jp
pushl
inc
inc
lahf
jo
inc
xor
fcmovbe
mov
xor
scas
lods
lods
mov
outsl
push
add
xor
clc
push
jb
fs
imul
and
xor
in
test
add
jmp
into
insb
xor
cmp
int
clc
fldcw
shrl
ja
scas
leave
pop
lea
popa
in
cmpsl
sub
pop
ss
and
lret
cmp
ficoml
dec
xchg
sbb
mov
stc
inc
and
es
jb
push
inc
call
add
fnstenv
ja
jns
cmc
add
mov
push
mov
cwtl
jne
xchg
jecxz
test
loop
out
icebp
rolb
jp
cli
xchg
pop
lahf
cmp
sub
enter
sbb
je
cmp
xor
push
xor
push
sbb
out
jns
jb
add
sahf
xor
in
and
bound
repnz
add
push
out
ret
lret
push
mov
xorw
add
ss
push
jecxz
sbb
orb
das
and
stos
cwtl
fidivs
js
or
jne
add
add
adc
xchg
push
mov
sbb
aad
pop
xchg
inc
push
pop
aad
sbb
movsb
test
mov
fwait
scas
jl
pop
aad
mov
imull
js
push
shr
in
xchg
xorb
inc
inc
test
jmp
sbb
pushf
inc
in
fs
fs
test
push
lock
scas
aas
daa
xor
inc
clc
adc
fdivs
stc
and
or
jmp
std
rcr
std
sti
xchg
and
cmpsl
mov
push
mov
jg
icebp
adcb
xor
xchg
cmp
jbe
cli
xchg
add
or
inc
xchg
xchg
pop
addb
sarb
cli
xor
shlb
jp
jb
fwait
cmpl
aaa
cwtl
xorb
and
add
cmp
add
push
sbb
loop
iret
filds
and
and
aad
push
cli
ficoms
or
fld
iret
and
add
xchg
adc
and
and
add
aas
mov
in
jns
sub
sub
mov
mov
icebp
xor
inc
loope
xorb
or
pop
cmp
push
mov
je
xchg
loop
mov
in
pushf
pop
aaa
xchg
scas
mov
nop
inc
xlat
lds
ret
cmpsl
aam
or
and
shl
loope
mov
lock
mov
test
jecxz
test
leave
ret
or
jmp
or
jg
pop
add
mov
cmpb
xchg
cwtl
push
outsl
pushf
ret
mov
test
jl
pop
cmpsb
aam
adc
test
jge
and
jno
jne
insb
call
mov
jl
dec
mov
adc
stc
aaa
mov
add
rcl
insb
mov
pop
pop
and
mov
std
shrb
mov
lods
jnp
push
sbb
and
lret
ret
icebp
push
xchg
add
pop
fistl
out
clc
enter
cmp
xchg
mov
jb
shr
shll
and
lcall
ret
outsl
pop
mov
xchg
das
xchg
movsl
ds
xchg
fcompl
fstps
xchg
mov
jl
sbb
outsl
leave
sub
inc
push
mov
incb
fiadds
mov
add
xchg
stc
jecxz
orl
or
xchg
fsubs
and
clc
push
pop
fldl
notb
sti
xchg
insb
pop
aaa
in
and
leave
loope
adc
mov
idiv
stc
mov
movsl
push
pop
cld
loope
or
mov
add
mov
fs
or
jecxz
aaa
loope
or
mov
addl
stos
push
xchg
sbb
push
xlat
lods
mov
push
mov
adc
xchg
jl
push
insb
hlt
ret
icebp
or
mov
push
inc
sbb
lods
jge
or
fcmovnb
icebp
js
lahf
cld
mov
pop
jmp
js
repnz
leave
in
cmpsl
pop
cmpl
jb
push
push
stc
fstpt
jbe
inc
push
sub
or
jl
inc
cs
mov
in
xchg
mov
add
mov
and
push
test
push
or
adc
cltd
pop
adc
ds
cmpb
sub
or
or
aad
ret
in
es
lods
in
mov
mov
cmpsl
dec
gs
ficoml
jbe
sub
jmp
and
adc
repnz
nop
push
lock
mov
inc
push
test
aad
pop
inc
lds
jecxz
fisubl
sub
add
push
ja
repz
push
mov
adc
test
xor
mov
cmp
fnstenv
addr16
mov
nop
dec
in
adc
add
or
sub
fstl
clc
mov
mov
and
push
and
in
into
jecxz
in
push
and
mov
or
push
cmp
xchg
jbe
scas
in
mov
inc
ret
clc
push
mov
lret
mov
jl
gs
inc
push
leave
push
sbb
icebp
ficoms
std
ljmp
loopne
popa
shll
mov
or
pop
jb
adc
xchg
cwtl
push
ja
rep
jbe
aaa
dec
sbb
and
xchg
leave
pop
add
in
cmpsb
lret
je
adc
and
push
call
cli
lods
daa
mov
pop
es
aad
mov
dec
jmp
push
xchg
ret
add
inc
xchg
in
sti
or
dec
jbe
adc
cmpsl
add
lcall
loopne
jno
notb
jmp
xor
sbb
cld
or
dec
mov
notb
xlat
out
or
add
and
negl
add
ss
out
in
aas
xchg
andl
xor
into
shl
add
jne
pop
arpl
aaa
and
add
int
or
jae
push
cltd
xor
and
xchg
xchg
dec
mov
lahf
pop
dec
mov
movsb
jmp
into
dec
pop
xchg
pop
adc
xlat
pop
adc
adc
push
push
xor
fistps
or
test
aam
push
jne
add
cmp
mov
movsl
or
daa
and
inc
sbb
cwtl
xchg
mov
aaa
das
add
stc
mov
fwait
sbb
clc
stc
into
jge
or
out
mov
xorb
shl
mov
push
popa
hlt
adc
fldenv
bound
cmpsb
icebp
dec
lea
jnp
es
jno
in
mov
int
and
xchg
sub
stc
and
or
das
shr
add
cmpsb
sbb
cltd
adc
int3
dec
jecxz,pn
xchg
out
adc
adc
adc
jns
sub
pop
rcr
xor
cltd
mov
sub
cmp
int
adc
pop
add
sub
jg
pop
cmp
inc
mov
fidivl
dec
sub
jmp
mov
mov
ret
xchg
sbb
pop
xor
push
shll
sub
pop
push
pop
adc
out
sub
or
lock
in
mov
popf
mov
lret
mov
shll
jecxz
xchg
daa
pop
xor
mov
adc
mov
cmp
test
lret
cld
mov
push
mov
std
in
popa
pause
notb
add
hlt
std
mov
push
lret
movsl
dec
std
cmp
dec
int3
xchg
add
cmpsl
cmpsb
lds
sbb
inc
pop
xchg
clc
inc
aaa
push
push
hlt
xchg
cmp
cld
jae
loop
inc
rcll
push
mov
lcall
sbb
loopne
ljmp
jp
sbb
in
outsb
or
push
mov
lret
icebp
ss
inc
or
loopne
push
loope
add
jl
mov
add
add
and
jns
leave
jl
aaa
cli
rorl
dec
in
ds
das
pop
in
xchg
or
pop
aad
xchg
cmpsb
ja
push
xchg
sbb
ss
pushf
imul
sar
jge
test
mov
dec
inc
xchg
outsl
and
loopne
mov
loope
jg
dec
rcl
clc
imul
mov
inc
stc
push
or
shrl
jb
cs
fstps
daa
ss
push
sub
mov
adc
push
and
stos
sahf
jae
movsb
mov
rcll
cli
rcll
dec
fistps
jg
in
popa
arpl
sarl
pop
mov
out
push
in
notb
icebp
test
inc
add
mov
mov
cli
jns
sub
add
xchg
cmpb
je
fldenv
push
call
inc
adc
push
dec
jae
add
cli
test
bnd
icebp
scas
sarl
ficoms
fildl
xlat
xchg
int3
rcrl
inc
jne
push
data16
adc
jae
mov
ljmp
sub
add
pop
mov
int3
fucompp
push
pushf
xchg
dec
adc
cmp
jbe
out
and
and
push
xchg
sub
or
dec
and
pop
shrl
das
jge
pop
and
pop
int
sbb
xlat
insl
in
mov
xchg
frstor
or
ficompl
and
mov
mov
in
fwait
lret
inc
sub
mov
jle
sbb
jl
jbe
mov
xchg
xor
mov
jb
and
or
cmpl
pusha
jl
js
xchg
or
repz
mov
lds
mov
out
sbb
jb
mov
ret
ss
lret
stc
jno
mov
push
pop
fs
push
mov
fwait
nop
cld
mov
fcmovne
push
push
adc
cmpsb
xchg
aam
jae
push
sti
in
or
mov
push
aad
cmp
cmpsb
test
push
shrb
lock
push
roll
jmp
mov
stc
lcall
stos
roll
fwait
jge
lahf
xchg
dec
test
cli
or
aaa
cmp
icebp
jbe
les
push
gs
and
test
push
test
mov
xchg
popf
mov
sbb
or
sti
fstps
xchg
sti
enter
xor
rorl
adc
sbb
nop
addr16
xchg
sbb
mov
push
out
fwait
sub
in
cmpsb
mov
cmp
leave
in
stc
mov
push
cmp
incl
mov
sub
mov
cmp
add
js
adc
add
cmp
test
stos
cmp
jl
or
fsubl
addr16
jb
shrb
and
mov
or
mov
stos
mov
sbb
push
xchg
in
or
ret
mov
hlt
push
scas
daa
jno
stos
mov
jg
xchg
adc
and
jae
pop
mov
arpl
cmpsl
sahf
popf
cli
rcl
mov
es
or
lds
cmp
jg
imul
fimuls
dec
dec
ss
loope
sbb
in
ret
xchg
fcmovb
add
mov
pop
xchg
dec
xchg
out
in
push
fwait
shrl
xchg
mov
inc
jl
add
add
jae
jb
int3
add
mov
mov
jbe
sub
je
mov
lods
stos
fnstenv
lods
jecxz
fwait
mov
ret
roll
adc
and
mov
or
pop
or
and
fistl
push
shrl
jmp
imul
dec
xor
adc
mov
fs
ss
cmpsl
rolb
cmp
test
subb
in
cmpsb
cmpsl
aas
dec
data16
lahf
in
mov
pusha
notl
fs
mov
inc
sbb
lds
outsl
add
jecxz
and
cmp
mov
sub
fsubrs
jb
dec
rcrb
sbb
out
stc
pushf
inc
cmp
sbb
add
sub
rol
leave
xchg
inc
sahf
cmpsb
repz
sub
outsl
popa
mov
mov
leave
int3
mov
leave
ss
stos
sub
mov
testb
shr
shlb
in
mov
xchg
push
or
jb
cmp
fcmove
mov
push
or
mov
inc
in
gs
cltd
ret
mov
and
jne
xchg
inc
jb
pop
sbb
sbb
push
addr16
jb
inc
rol
fadd
leave
mov
fisubl
in
push
mov
aad
pop
outsl
mov
and
mov
call
movsl
js
shll
add
ret
jbe
mov
jb
lods
notl
mov
or
roll
jecxz
xchg
xchg
cmpsl
pop
fists
and
fiaddl
aaa
xchg
test
xlat
mov
adcb
pushf
adc
fildl
xchg
xor
cltd
movsb
jne
cmc
and
mov
cli
cs
stos
add
imul
cltd
mov
in
sbb
xor
jno
repnz
adc
scas
stc
xor
or
xor
cmpsl
mov
mov
dec
cwtl
data16
mov
gs
push
lcall
lcall
push
inc
rclb
in
jge
fldt
subb
adc
sub
xlat
push
mov
push
add
dec
pop
jl
inc
imul
mov
xchg
xchg
mov
xchg
mov
inc
mov
mov
ja
xor
daa
dec
stos
and
add
cld
push
jb
cmpsb
mov
ss
cmp
in
xor
sub
aaa
dec
rolb
data16
nop
dec
mov
and
mov
sbb
push
dec
subb
push
cwtl
popa
add
xchg
dec
sub
push
out
adc
cmp
mov
mov
arpl
outsl
adc
je
inc
movsb
mov
mov
hlt
sbb
inc
adc
jg
cmp
push
in
push
notl
pop
leave
xor
xchg
pop
adc
sbb
mov
cmp
jo
jp
add
xchg
mov
imul
in
jb
ja
cmpsl
js
jnp
ss
cli
mov
push
mov
pop
xchg
jg
arpl
mov
push
push
mov
mov
shrb
inc
jmp
inc
sarl
dec
sub
or
add
pop
add
movsl
sub
and
ret
cmp
and
pop
in
loope
add
pop
push
loope
xchg
adc
pusha
xor
pusha
or
shlb
and
popa
mov
and
mov
fisttps
clc
ffree
xchg
rorl
sub
flds
xor
xor
cmpl
scas
cmp
sbb
adc
mov
or
dec
fs
mov
jp
mov
stos
cmpsl
lret
test
lock
cmp
hlt
pop
ja
out
rorl
xchg
push
js
jecxz
mov
cmp
je
addr16
fneni(8087
xchg
ret
or
dec
mov
jp
clc
pop
popl
sarl
xchg
and
push
fldl
push
sbb
cltd
clc
ficoml
add
pop
mov
icebp
or
pop
sbb
push
dec
repz
aas
stc
mov
ret
hlt
jg
add
jp
pcmpeqw
test
cmp
insl
add
mov
sarb
fstpt
mov
rcl
mov
cmc
shll
jns
test
mov
xchg
adc
adc
nop
xchg
in
shrl
jmp
mov
pop
xchg
movsl
les
or
jae
mov
popa
and
and
insl
jae
pop
mov
roll
test
jg
addb
aad
mov
push
pop
lods
fisubl
fcoml
stc
fistps
out
mov
add
fimull
dec
sbb
aam
out
sub
call
pop
xor
icebp
or
das
fists
insl
adc
mov
mov
je
add
int
shl
mov
jnp
je
lds
stos
enter
icebp
mov
or
xchg
insb
sbb
imul
add
test
mov
dec
sahf
and
mov
shll
mov
insb
dec
leave
push
cmc
jecxz
les
pop
mov
shll
fs
or
lds
jecxz
sub
sub
in
lods
adc
add
or
mov
out
jns
inc
and
dec
mov
pop
dec
mov
test
or
pop
xor
and
dec
pop
and
notb
xchg
rol
sub
ret
add
sbb
xorl
enter
sbb
xlat
imul
mov
ljmp
inc
arpl
scas
jae
insl
lea
icebp
cmc
sbb
xchg
test
or
pop
xchg
daa
mov
sub
icebp
stos
jb
or
pop
mov
loop
cmpsl
add
and
das
addr16
fwait
aad
pop
jbe
and
les
ret
mov
arpl
mov
add
jb
jne
pop
fcmovu
pop
adc
fldl
mov
shll
mov
test
cmp
add
test
mov
add
mov
sub
push
mov
lds
add
inc
adc
cmc
in
in
aaa
xchg
test
loopne
add
movsb
js
xorl
or
inc
shrb
mov
in
or
jecxz
mov
repz
xchg
mov
mov
shl
push
test
xchg
xchg
ret
cmc
in
loope
xchg
dec
pop
adc
data16
icebp
fisubl
inc
in
push
sbb
pop
decl
push
fcompl
and
add
push
inc
jp
rcr
pop
xlat
or
jmp
jmp
or
div
pop
stc
pop
inc
into
rorb
fmuls
xchg
adc
add
and
notb
addb
popf
icebp
cld
or
xchg
jb
and
xor
cmp
arpl
and
mov
lcall
lcall
mov
stc
popf
mov
data16
daa
ficoml
rcll
popa
sbb
jecxz
jecxz
stc
ret
loope
push
ffreep
add
ja
fdivr
push
in
pop
add
adc
loop
cld
push
ret
adc
mov
and
out
dec
lret
push
dec
fldenv
xor
add
aad
xlat
cmc
mov
add
add
and
test
es
sub
adc
inc
arpl
and
fstps
adc
push
sbb
hlt
push
adc
inc
dec
and
fbstp
test
xor
xchg
jb
add
shll
and
lds
push
cmp
cmpsl
xchg
add
imul
lret
daa
push
dec
mov
jae
xchg
mov
jcxz
es
in
aas
dec
sbb
fidivrl
inc
test
je
inc
or
cmp
sub
fbld
lahf
pop
aas
loopne
mov
mov
and
pop
aaa
push
cmp
adc
int3
daa
sub
cmpsl
sub
xor
pusha
xchg
cmp
xor
dec
xlat
std
fistpl
adc
inc
or
les
inc
xchg
cmp
aaa
sarl
sahf
cmp
in
nop
add
jno
add
add
xchg
es
test
mov
push
mov
sbb
fs
xchg
dec
ret
insb
xchg
sbb
mov
jb
and
ret
dec
mov
ja
push
arpl
ds
int
mov
or
ret
in
mov
jns
jbe
pop
xchg
mov
mov
push
jge
push
push
dec
dec
insl
repz
ficoml
adc
aaa
das
repz
leave
rcr
mov
jmp
mov
xor
adc
push
faddl
xchg
jbe
into
sub
add
xorl
mov
push
test
hlt
mov
lret
aas
iret
jne
and
aaa
data16
dec
mov
jl
ret
xor
sbb
cmp
imull
jbe
pop
sbb
daa
push
push
adc
fisubrl
mov
cmpsl
mov
mov
ror
or
cltd
ss
test
inc
sbb
lret
xchg
mov
sbb
sahf
imul
aaa
mov
test
inc
rcll
sub
xor
repnz
lret
cwtl
inc
and
pop
insb
mov
xchg
inc
scas
fbstp
jne
test
incl
stc
gs
jge
fsubr
in
jb
in
test
push
sbb
sub
mov
jecxz
adc
out
inc
cmpsb
stos
int3
push
stos
stos
movsl
inc
jg
les
gs
cmp
lods
dec
pop
dec
inc
sbb
cwtl
loope
adc
popf
jb
xlat
sbb
inc
cmp
stc
add
sbb
ficoml
cmp
out
mov
add
les
dec
mov
push
pop
or
mov
add
and
ret
imul
pop
rorb
jb
das
xor
fs
hlt
ss
mov
jecxz
rcrb
inc
sbb
jne
fidivl
and
adc
les
mov
fiaddl
fwait
push
mov
dec
dec
int
insl
or
xchg
mov
inc
inc
ds
test
pusha
mov
test
adc
mov
pop
sub
ret
js
les
mov
xchg
ss
gs
sbb
adc
dec
mov
in
jl
ljmp
xlat
or
add
dec
jl
aas
lret
mov
inc
lea
cmpb
dec
mov
ret
push
pop
in
jg
popa
es
dec
jmp
insb
js
inc
push
or
or
jmp
cmc
sbb
add
dec
cltd
in
xor
inc
stc
jns
push
orl
testl
dec
dec
and
ds
mov
lret
and
cmp
and
jbe
ret
push
and
mov
arpl
in
insl
out
aam
sbb
in
push
clc
xchg
shrb
cwtl
jecxz
xchg
in
fcmovb
insb
movsb
jb
sbb
push
cmpsw
xorl
sbb
jae
pop
sbb
push
xchg
scas
mov
lret
jnp
push
pusha
mov
push
and
stc
arpl
push
fcoml
js
adc
and
add
or
or
fwait
xchg
dec
sbb
cwtl
inc
arpl
stos
mov
push
or
idivl
outsb
jg
add
aam
roll
outsb
dec
xor
and
test
fisttps
sbb
fdivr
into
push
addr16
fimuls
scas
nop
push
jecxz
lahf
daa
ret
rcll
push
push
in
mov
or
inc
add
adcb
add
or
sub
and
mov
outsl
inc
mov
mov
int3
dec
arpl
cmp
xchg
xchg
imul
pop
add
int
mov
and
mov
mov
out
jge
inc
and
jl
inc
ret
lods
pop
stos
flds
push
inc
jecxz
orl
lcall
push
jns
mov
loopne
pop
fldcw
daa
pop
inc
pop
fstps
dec
jl
cmp
xchg
dec
dec
jge
sti
mov
divl
leave
cli
add
ljmp
dec
ss
movl
mov
cltd
fildl
dec
test
jg
outsb
mov
lcall
out
mov
fsubrl
inc
hlt
insl
and
mov
js
sbb
xchg
lods
aam
pop
xchg
or
mov
enter
popa
and
jb
pop
fmuls
push
dec
pop
xchg
les
pusha
outsb
fcmove
int
jle
mov
pushf
cmpl
sbb
xchg
test
inc
mov
jl
xchg
stc
gs
inc
sub
mov
jb
fildl
call
leave
xchg
mov
loope
and
pusha
dec
xchg
xchg
ret
push
push
jecxz
push
xor
bound
jno
jbe
jecxz
lock
add
sub
ds
leave
fs
loope
icebp
frstor
mov
and
xchg
jb
add
out
inc
push
subb
inc
cmc
lock
xchg
std
rcl
jge
or
jecxz
cltd
jmp
sbb
hlt
lds
mov
or
fwait
das
mov
add
in
or
pop
orb
or
pop
sub
or
mov
xchg
or
lret
cmp
leave
xchg
dec
in
xchg
adc
cwtl
xorl
mov
or
rcll
add
in
xchg
mov
out
xchg
incl
cmc
push
xchg
mov
out
xchg
dec
and
in
cmpsl
push
or
lret
shll
fstps
push
enter
adc
adcb
pop
in
push
xlat
aad
jae
out
or
ljmp
xchg
add
mov
dec
lcall
inc
adc
icebp
stc
lods
ret
cltd
mov
ja
psubd
cmp
add
mov
add
mov
mov
cmp
cmpl
jo
repz
out
daa
popa
mov
xchg
cmp
dec
loope
cmp
or
jle
ret
jb
mov
aaa
adc
aam
and
andl
sti
cli
in
jl
cltd
inc
cmpsl
adc
or
hlt
in
lods
xor
inc
mov
cmp
rorb
pusha
sbb
leave
lock
sub
mov
flds
insb
jb
mov
scas
xor
xchg
mov
or
mov
jl
sbb
inc
xor
mov
and
pop
adc
lds
clc
add
xchg
cmpsb
adcb
popa
dec
mov
in
cmp
loope
xchg
fsubl
xchg
in
push
scas
icebp
pushf
popf
add
mov
push
icebp
dec
ds
push
xor
push
into
mov
nop
jg
xchg
xor
or
lret
test
ret
mov
aas
xchg
xchg
and
sub
hlt
mov
vminpd
dec
loope
or
cmp
sbbb
mov
insb
imul
lods
roll
sbb
lcall
mov
stc
sbb
push
jae
jb
jae
pop
pop
or
and
jl
popf
rol
lea
pop
sbbl
fimuls
dec
faddl
stos
and
in
outsb
daa
fidivs
aas
loope
add
rolb
add
call
mov
cwtl
xchg
insb
aaa
pop
pushf
push
enter
ret
adc
fs
adc
ret
mov
insb
mov
xchg
sar
sbb
adc
fmuls
hlt
inc
fisttps
cmp
mulb
fs
stc
jg
pop
shrl
cmp
mov
aaa
popf
cmpsl
pop
cmp
sub
dec
icebp
jbe
in
movsl
mov
js
xor
adc
ret
or
in
call
xchg
insb
xor
inc
or
gs
hlt
in
out
hlt
test
xor
shll
lret
mov
je
xor
sbb
and
or
dec
lods
sar
xchg
bound
orb
mov
xchg
inc
adc
xchg
cmp
icebp
movb
insl
cli
enter
pop
js
ljmp
xchg
mov
mov
imul
pop
test
push
mov
mov
lea
in
sbb
pop
mov
push
push
mov
xchg
cltd
pop
jns
ljmp
adc
rorl
inc
and
xchg
pop
sbb
in
lret
inc
mov
mov
rcll
and
and
cld
fmull
mulb
xor
in
popf
jmp
ret
xchg
popa
rcl
mov
in
fcmovne
dec
rcll
xor
mov
mov
push
pop
clc
add
pop
xlat
add
daa
and
ljmp
pop
jnp
mov
sub
int
daa
adc
xchg
or
lds
jecxz
ss
ret
adc
push
mov
mov
mov
js
mov
mov
ret
jb
mov
add
jl
mulb
in
mov
xor
outsl
mov
arpl
xchg
pop
mov
pop
daa
movsb
xchg
lret
cld
pop
jbe
ss
in
fisubs
mov
jbe
nop
xor
cmp
sbb
fiadds
div
repnz
cmp
fcmovbe
xor
mov
test
mov
adc
movsb
movsl
imul
call
out
arpl
xor
loope
repnz
mov
outsb
fsubrs
adc
ret
out
testb
fiadds
push
in
mov
bound
xchg
jbe
push
mov
mov
fimuls
popf
outsl
scas
test
inc
mov
xor
pop
adc
mov
jl
in
js
sbb
push
adc
stos
popa
je
icebp
mov
stc
mov
xchg
push
pop
jle
cwtl
mov
int3
and
jmp
inc
or
test
xchg
jb
into
mov
jmp
sub
aaa
insl
jp
aas
imul
pop
sbb
icebp
cmp
jno
outsb
out
and
cmp
jg
addb
je
xchg
repz
xchg
jbe
xchg
xor
sub
xor
lcall
push
pop
and
xchg
push
loope
test
in
out
inc
sarl
mov
and
sbb
dec
adc
and
xchg
sub
fidivrl
lods
jo
movsl
std
cmc
mov
sub
inc
lods
add
jmp
cltd
test
fsubrs
outsb
pushf
dec
fcmovbe
or
push
sub
test
jl
mov
push
mov
shl
aam
loopne
jg
jne
into
adc
outsb
int
insl
add
mov
mov
lods
push
insb
cmp
xlat
lock
mov
insl
hlt
lret
jecxz
mov
and
lcall
jne
in
push
and
mov
mov
adc
in
js
cmpsl
xchg
jne
inc
iret
dec
es
adc
test
pop
movsb
lods
or
mov
sub
push
repz
nop
dec
mov
mov
icebp
rcrl
sub
jb
loop
lds
xchg
cwtl
xchg
cwtl
adc
mov
fdivr
iret
add
insb
xor
xor
mov
or
mov
xchg
scas
cwtl
test
mov
js
add
push
inc
inc
mov
in
mov
cld
lds
mov
mov
mov
push
and
fmull
fldcw
xor
mov
and
jmp
mov
cltd
jne
xorl
subl
popl
fisttps
sbb
sbb
or
mov
fbstp
fbld
adc
add
pushf
jmp
add
lea
push
rcr
adc
rolb
adc
pushf
inc
test
subl
out
inc
mov
arpl
lret
fists
xor
lods
test
bound
test
inc
jecxz
mov
in
ret
cmp
jge
sbb
ret
mov
push
or
clc
jge
or
sbb
ret
leave
mov
addr16
mov
mov
add
fwait
lds
cld
scas
xchg
popa
mov
mov
adc
aam
adc
cmp
push
loope
pop
add
mov
clc
cwtl
daa
pop
mov
ret
popa
outsl
and
dec
or
push
outsb
cmpsl
push
sub
jmp
fadds
cwtl
add
ret
subl
xor
push
out
jge
adc
pop
push
ret
dec
add
movl
mov
jo
fs
gs
int3
mov
sbb
std
push
ljmp
lret
push
lds
shr
scas
sar
jg
push
addr16
jg
cmp
inc
rclb
jg
clc
adc
jo
inc
ja
xchg
insb
cmpsl
mov
sub
jl
inc
in
out
das
push
lods
cld
out
pusha
pop
jecxz
fimuls
cmpsl
test
fmulp
loope
andl
pusha
add
fcmovnu
sahf
negl
dec
mov
cltd
add
pop
sub
int
or
xchg
xchg
pushl
mov
je
add
popf
mov
data16
jbe
int
pop
imul
pop
sbb
xor
push
lret
sti
cmp
xchg
dec
add
pushf
das
mov
mov
or
mov
xchg
sarl
xchg
push
mov
sub
repnz
adc
jae
pop
in
and
inc
lods
pop
sbb
adc
hlt
adc
adc
push
sbb
das
ss
and
popa
orl
adc
pop
or
rcll
xchg
mov
jo
rcll
adc
fwait
mov
hlt
add
adc
pushf
ret
add
add
dec
clc
jb
add
xor
pop
inc
dec
mov
push
fs
movsb
les
enter
enter
xor
pop
cmc
and
push
push
cmpsl
fcomps
leave
and
mov
push
daa
jmp
fadds
sahf
cmp
jne
arpl
repz
push
pusha
daa
outsb
lods
pop
add
cltd
aad
sbb
ret
jmp
add
test
push
mov
call
pop
mov
adc
mov
pop
xchg
inc
xor
pop
sub
test
mov
daa
mov
roll
dec
movsl
out
xor
add
dec
adc
stos
loop
sbbb
fildl
mov
push
dec
enter
mov
jb
fstps
shlb
stos
les
roll
sti
cmpsl
hlt
xlat
dec
out
cmp
std
adc
xor
mov
mov
dec
inc
cltd
push
loope
adc
sub
mov
inc
xchg
push
push
fadds
pop
adc
cwtl
ret
nop
mov
sahf
imul
and
repz
push
sub
inc
pop
cmpsl
adc
gs
sbb
int
fcomip
pop
or
xchg
rcr
sub
lea
lcall
lret
arpl
addr16
es
pop
leave
data16
mov
gs
lret
out
cmp
cmpsl
and
and
je
je
fstpt
icebp
pop
sbb
loope
popf
ja
inc
lcall
or
jno
ret
mov
xchg
mov
int3
add
ficoml
xchg
fs
fstps
insb
or
and
aas
sub
pop
xchg
sub
mov
inc
aas
fsubs
sahf
call
pop
jg
shrb
int
int
push
dec
adc
cmpsl
xchg
cmpsl
stc
pop
insl
sahf
or
mov
daa
add
mov
lret
hlt
aad
push
aas
xor
rorb
out
incl
mov
subl
test
mov
clc
repz
xchg
add
lret
inc
push
aaa
cli
mov
cmpsl
cmp
push
lock
int
xor
inc
xor
adc
pop
shll
inc
cltd
out
daa
adc
jmp
dec
mov
enter
inc
cwtl
clc
jecxz
repnz
jbe
scas
hlt
xchg
jg
sbbb
in
int3
pop
lret
mov
inc
daa
int
add
sbb
mov
fcmovnbe
ret
jb
es
stos
jp
sbb
jb
mov
ftst
lret
dec
andb
in
popl
test
xlat
lea
movsl
xchg
dec
rcrl
test
dec
and
icebp
popf
jae
pop
adc
imul
mov
int3
jbe
imul
push
fdivrl
pop
sbb
xchg
mov
test
aas
add
dec
ss
in
xchg
aaa
bound
cmpsl
mov
xchg
mov
pusha
cmpsl
mov
jge
hlt
adc
mov
cwtl
fisubl
pop
add
fidivs
leave
jo
mov
popf
add
adc
aaa
popf
adc
out
cmp
mov
xchg
and
divb
call
mov
inc
and
rcll
sub
push
pushf
mov
xor
in
push
pop
or
ja
jle
in
mov
and
clc
dec
xlat
or
es
sbb
test
jb
nop
inc
into
pop
mov
push
or
xchg
mov
lds
popl
xor
dec
xor
inc
aam
sbb
inc
into
sbb
inc
or
ja
lds
add
int
push
mov
fs
inc
test
push
pop
imul
pop
push
jmp
add
fisttps
jmp
push
pop
jns
subl
lods
and
cmp
adc
jb
sub
in
pop
ficoml
push
repz
sub
lret
dec
mov
adc
and
xchg
or
sub
and
cmpsl
add
jbe
cli
mov
adc
xchg
js
in
and
pusha
stos
dec
test
ljmp
cmp
xlat
inc
fs
arpl
mov
xchg
jbe
jmp
adc
ficoml
in
leave
repz
push
cmpsl
jmp
jb
add
xchg
imul
inc
scas
or
lret
andb
fs
pop
notb
mov
ror
jb
into
sbb
enter
out
int
pop
xchg
add
movb
add
push
imul
lea
xor
and
xchg
js
cmpsl
push
stos
xor
mov
hlt
frstor
push
movsl
sub
gs
xchg
shl
add
cmp
fisubs
aas
pop
int
out
hlt
or
and
andb
sarl
xor
loopne
push
xor
add
les
lea
stc
gs
push
in
movsb
add
jo
insb
add
pop
stc
pop
stc
mov
add
fisubl
cli
xchg
mov
out
test
xchg
stos
xchg
add
loopne
aad
bound
das
lods
movsb
insb
hlt
add
in
add
push
icebp
mov
and
lods
das
jmp
push
add
inc
faddl
inc
add
inc
inc
in
imulb
loop
leave
enter
test
mov
adc
aad
cmp
sub
sbb
xor
hlt
push
push
sub
sbb
addr16
inc
jl
scas
xchg
fwait
xor
inc
pop
stc
dec
mov
fidivl
mov
ljmp
lock
jle
enter
sahf
jo
shlb
mov
rcrb
inc
sarl
inc
mov
adc
jge
fnstenv
mov
sub
sbb
sub
ret
pop
pop
or
lods
jbe
and
mov
hlt
aaa
test
insb
hlt
push
pop
xchg
jae
xor
add
into
add
cmp
rorl
js
jmp
in
clc
sbb
nop
sub
lock
ss
out
cmpsb
xorl
or
adc
xor
dec
mov
test
ret
sub
xor
jecxz
sbb
jl
sub
ret
fiaddl
jecxz
push
hlt
mov
mov
vmulpd
mov
je
sahf
lahf
inc
mov
add
sar
inc
outsb
loopne
mov
les
push
clc
repz
scas
push
mov
fsubr
aad
jns
shll
push
int3
mov
cmpsl
loope
popf
xor
jle
pusha
test
mov
loope
push
imul
jne
loopne
xchg
xchg
sbb
in
xlat
test
rorl
es
push
mov
das
sahf
dec
mov
adc
jg
scas
mov
and
pop
adc
mov
shll
in
jl
add
cs
test
das
mov
sub
outsl
jae
aam
out
sub
in
mov
mov
je
ficompl
ja
and
out
into
mov
pop
sub
roll
lret
repnz
fidivl
xchg
les
scas
mov
mov
add
jmp
dec
push
jl
test
add
cmp
push
adc
js
les
rcrl
xor
mov
jge
mov
ret
out
add
sbb
sub
xchg
xchg
das
sbbl
pop
inc
shll
dec
mov
or
lea
inc
sbb
es
pop
jmp
dec
cwtl
pop
enter
add
inc
xchg
inc
dec
pop
shll
shll
orl
lret
jns
jmp
popf
call
faddl
popf
add
add
test
cmpsl
push
test
jne
sahf
int3
mov
lods
hlt
outsb
ffree
xchg
insb
sahf
jecxz
or
fdivl
push
sub
mov
andl
sbb
mov
nop
or
jae
ljmp
fs
lock
pop
jne
jl
ret
sbb
ret
sbb
popf
ljmp
pop
pop
adc
orb
pop
lock
xorl
insl
aaa
es
rolb
mov
cmpsb
nop
repz
jp
adc
push
cmp
xchg
je
les
gs
mov
rcl
orl
fcoml
mov
movb
ret
jp
cwtl
ljmp
dec
sub
test
mov
ljmp
lods
xchg
cmp
repz
ss
xor
pop
cmp
jmp
sarl
mov
and
add
cmp
frstor
jb
in
or
lds
jbe
scas
pusha
loop
fists
or
pop
or
jmp
fld
dec
and
fs
jl
mul
sbb
jecxz
in
sub
and
sarl
push
lods
sahf
jae
ljmp
scas
mov
icebp
mov
xchg
std
sahf
dec
sti
sbb
aam
add
xchg
cmc
jl
add
aad
pop
push
repnz
xchg
hlt
pusha
inc
aaa
cmp
push
je
repnz
jge
add
xor
sub
popf
lahf
and
rorb
call
xor
inc
xchg
adc
nop
adc
rclb
cwtl
adc
jb
xor
dec
popf
mov
inc
dec
push
jno
inc
push
lea
insb
mov
cmp
mov
pop
jecxz
sbbb
mov
leave
jp
enter
jmp
shll
or
add
js
dec
mov
in
das
xchg
lea
xlat
lret
rolb
in
inc
fcom
add
mov
xchg
inc
xchg
lret
fs
clc
adc
or
jb
fcoml
or
adc
inc
ds
jne
int
addr16
xchg
push
inc
in
subb
loopne
rcll
aaa
mov
cmpsl
outsb
push
ss
adc
movsb
nop
pop
add
dec
add
aad
aas
sub
pop
add
fs
xchg
rcrl
adc
mov
inc
adc
mov
sbb
cs
test
ret
mov
adc
xchg
xor
in
sahf
insb
jb
mov
xor
push
std
ret
inc
dec
pop
push
jp
test
aaa
pushf
lret
pop
or
push
aas
cmp
xchg
sbb
aaa
and
stos
sti
divb
add
cli
lods
incb
daa
push
arpl
scas
sti
dec
push
and
icebp
fidivl
jmp
xchg
add
and
icebp
pop
jb
inc
or
clc
cmc
and
shll
jnp
bound
mov
pop
fsubrs
jmp
mov
mov
xchg
pop
rorl
ficoms
int3
in
inc
add
add
pop
mov
fwait
cmp
fists
fnop
test
sub
loop
dec
mov
in
testb
movsb
add
mov
mov
int
or
test
jmp
cmp
icebp
push
pop
test
mov
add
in
mov
pop
push
and
add
movsb
jg
xchg
fcmovbe
mov
xchg
inc
aam
in
xchg
xchg
dec
pop
outsb
xchg
mov
push
xchg
inc
pop
dec
xchg
hlt
add
aaa
fldcw
bound
adc
mov
sti
in
mov
sarl
subb
cltd
popf
jg
and
mov
mov
lds
inc
mov
lock
test
xchg
mov
loope
adc
jl
add
inc
jg
filds
and
mov
push
push
or
push
mov
xchg
popf
dec
jb
je
sbb
cltd
xor
jo
mov
xchg
flds
pop
lret
je
fwait
sbb
ja
inc
sub
pop
push
test
roll
cmp
rolb
xchg
loopne
hlt
movsl
icebp
cmp
inc
fstpt
add
lahf
insl
mov
sbbb
jge
and
rorl
push
push
hlt
add
add
jecxz
mov
inc
inc
cmpsl
es
inc
in
repz
mov
adc
repnz
aad
jg
xor
jmp
stc
cwtl
pusha
insl
jbe
jno
fwait
inc
dec
jne
cmp
push
jb
jp
ret
les
fstps
or
ret
ljmp
outsl
mov
inc
les
inc
jecxz
je
pop
sbb
fsubrl
popf
push
cmpsl
mov
ret
inc
adc
jb
mov
xor
fs
cs
mov
add
les
inc
mov
lods
fsubr
xor
inc
and
xchg
scas
repnz
push
shll
in
sti
lods
sbb
call
pop
int3
jo
mov
push
xlat
enter
mov
hlt
add
jae
adc
jb
jo
push
and
dec
fstsw
cltd
pop
in
pop
mov
jg
loope
out
cltd
out
ss
cmp
mov
mov
adc
mov
jno
in
scas
push
fidivl
mov
or
push
test
dec
ret
adc
mov
gs
inc
pop
jg
test
loope
pop
adc
movsb
xchg
stc
xlat
add
daa
sub
jg
xchg
fndisi(8087
jl
add
inc
test
daa
imul
mov
dec
loop
nop
cltd
rcl
mov
nop
aad
sbb
push
in
dec
add
jbe
test
adc
testl
fxch
sub
xchg
fnstenv
imul
nop
les
xchg
test
mov
jbe
stc
jp
add
pop
dec
or
icebp
loop
mov
popf
cmp
jecxz
fadds
jb
cmp
test
xchg
and
xchg
xchg
jne
loop
and
sbb
or
pop
xchg
add
sbb
int3
add
xchg
push
dec
in
movsb
pop
push
push
pop
dec
in
add
bnd
je
lret
fwait
mov
jbe
xchg
mov
es
inc
call
jbe
cmp
test
xor
outsb
nop
and
movsl
sbb
sbbb
adc
loope
lock
cmp
xor
mov
pop
inc
pop
cmp
neg
mov
fcoml
das
movsl
mov
and
cs
icebp
xchg
das
ret
in
lret
inc
popf
and
das
andl
ret
orb
sbb
fmull
push
and
mov
xor
cli
push
push
dec
ja
inc
insl
xor
hlt
scas
xchg
jmp
push
cmpl
cmp
jle
jl
and
sub
or
add
sbb
fwait
xchg
xchg
mov
mov
sub
and
mov
sbb
int
movsl
mov
outsb
inc
fucomip
xchg
scas
int3
ljmp
pop
or
addr16
aam
push
jg
sub
and
add
mov
scas
jmp
sahf
push
ret
inc
bound
dec
fwait
cltd
test
xchg
icebp
ljmp
loop
xchg
and
dec
pop
dec
fs
mov
test
xchg
mov
aam
push
mov
dec
or
pop
pop
lock
insb
jg
psrlq
bound
cld
je
xor
stc
adc
into
fsubr
rclb
rorl
sbb
mov
adc
pop
cmpsb
lds
nop
inc
push
popf
xchg
leave
roll
roll
aaa
inc
lds
mov
mov
add
and
ljmp
sub
adc
ret
les
inc
test
inc
into
add
test
orl
mov
jne
xchg
insl
and
call
and
insb
loope
or
nop
adc
add
aaa
std
mov
add
xchg
mov
push
mov
test
pop
jle
test
mov
add
and
add
dec
fwait
inc
push
adc
lcall
mov
jb
cmp
jbe
push
or
dec
mov
push
icebp
push
mov
mov
ret
pop
leave
in
das
mov
jmp
or
lahf
xchg
fcomps
enter
fnstsw
sarl
mov
inc
or
gs
mov
jo
xor
dec
lods
lahf
mov
and
add
xchg
xchg
push
push
jb
push
rolb
outsb
mov
sub
push
pop
aaa
xchg
jecxz
sub
les
inc
adc
into
adc
cli
mov
or
or
sub
pop
fisttps
mov
sbb
fsts
xchg
sbb
pop
and
aaa
add
pop
gs
and
shrb
pop
mov
cmp
stc
stos
stos
jl
rclb
stos
mov
sub
dec
inc
lret
push
fidivrs
ljmp
cltd
testb
test
pop
or
and
and
mov
std
dec
sub
adc
inc
rcl
jmp
jb
test
xchg
lret
pop
bound
out
xchg
call
and
psllw
sub
lea
mov
imul
and
lahf
aad
jb
push
sbb
movsb
add
movsb
push
lods
mov
scas
dec
adc
in
lods
subb
sbbb
mov
lea
sbb
dec
adc
push
fdivs
add
xchg
faddl
push
push
mov
mov
cs
int
fst
into
mov
cmp
add
rorl
fucom
or
loope
push
out
mov
mov
in
addl
cwtl
push
dec
fsubrl
stos
jns
mov
dec
dec
cmpsb
xor
cmp
jne
in
lahf
iret
loope
pop
push
sub
sbb
push
aas
outsl
mov
inc
int
dec
pushf
sub
inc
jb
dec
inc
jg
dec
adc
stc
inc
enter
cmp
pop
pop
cmpsl
std
rcrl
sub
movsl
ljmp
test
inc
insl
dec
push
sub
cmp
sbb
dec
shlb
movl
ret
inc
imulb
cltd
and
cmpsb
repz
les
mov
push
loopne
mov
and
test
iret
in
das
xchg
cmpsb
fs
jmp
inc
add
int
movsb
pop
mov
xlat
push
and
push
aam
mov
int
je
shlb
jb
add
or
add
mov
adc
mov
inc
add
out
frstor
jae
or
decl
hlt
es
cmp
cs
decl
test
int
dec
lret
inc
sub
mov
jl
pop
pusha
fisubs
and
imul
mov
xchg
jne
mov
in
xchg
into
es
inc
lret
cltd
dec
xor
imul
ja
cli
cmpsb
or
add
and
pushf
cltd
in
loope
mov
fchs
test
aas
xor
jmp
popf
add
inc
je
dec
adc
pop
cmp
xlat
mov
and
mov
out
cmpl
icebp
pop
and
xchg
pop
lret
int3
aas
scas
mov
nop
pop
mov
jae
je
jge
out
add
inc
ficoml
xorl
arpl
add
dec
pop
push
mov
out
inc
fcmovb
cmp
pop
mov
fistps
pop
les
stos
fs
popa
xor
cmp
shrb
movsb
xlat
add
pop
add
or
sub
or
sbb
call
in
push
lret
adc
incb
xor
pop
push
jne
xchg
jl
je
mov
lds
inc
aas
inc
pusha
popf
sbb
jb
ret
fldcw
add
rorl
int
int3
or
ret
dec
mov
inc
aaa
hlt
xor
rcrl
jmp
cmpsb
popf
ret
jb
cmpl
aad
int3
cmp
mov
out
mov
xchg
mov
hlt
xchg
sbb
imul
or
aad
divl
int3
jo
loope
aaa
and
push
in
test
xchg
nop
adc
fs
ret
mov
test
je
xchg
lds
add
inc
daa
adc
pop
fiaddl
test
mov
jmp
fistps
sbb
addb
ret
loopne
lock
shl
lds
das
sbb
in
jecxz
jno
outsl
mov
stc
stos
and
pop
mov
and
loope
jb
push
ja
adc
xorb
and
clc
insb
enter
faddl
call
andl
icebp
jp
add
adc
adc
std
in
mov
enter
ja
mov
inc
mov
mov
xor
push
test
jmp
cwtl
icebp
sbb
cltd
mov
xchg
nop
jne
test
add
xchg
pop
add
loope
cmpsl
sub
and
sahf
lahf
xor
shll
push
or
aam
out
fimuls
add
pusha
jl
bndldx
test
rcrl
add
rcll
std
jge
dec
addb
inc
popf
add
decl
push
in
outsl
cwtl
jbe
into
js
xor
int
cmp
adcb
push
ret
add
push
xor
push
leave
and
jl
icebp
dec
addb
insb
pop
lds
dec
xor
dec
sbb
ljmp
je
pop
sub
and
xlat
dec
mov
or
and
add
and
bound
loop
xchg
int3
mov
cltd
adc
lods
test
or
mov
inc
stc
dec
int3
push
lds
add
pushf
lods
or
test
xor
cmp
and
cmpl
mov
jmp
xchg
jg
bound
or
adc
fwait
xchg
into
xchg
xchg
push
xchg
jmp
jmp
inc
cmp
icebp
pop
bound
hlt
dec
push
jg
sub
pop
int3
dec
or
push
xor
push
inc
and
mov
imul
orl
jne
rcll
add
and
int3
lds
mov
dec
pop
test
jle
and
xor
addl
sub
sub
ficoml
mov
xor
nop
xlat
mov
xor
mov
je
sbb
inc
push
bound
sbb
sbbl
in
pop
cld
hlt
inc
xor
jns
mov
add
rcl
adcb
mov
notb
mov
cs
imul
mov
scas
ret
call
adc
aam
loop
jmp
and
xchg
test
or
jb
enter
jge
test
loop
mov
lret
jns
jb
arpl
mov
pop
pusha
lret
or
dec
outsb
into
mov
andl
ret
fstpl
and
dec
js
shrd
cltd
out
sbb
add
xchg
out
fistps
dec
sbb
inc
out
cmc
hlt
or
jl
adc
js
sub
shr
adc
loop
pop
or
faddl
add
rcr
daa
mov
jae
jo
nop
xor
add
inc
push
jl
xchg
mov
sbb
ret
sbb
fs
sbb
cmp
add
call
rorb
lret
push
leave
sub
lret
push
incl
mov
les
andb
hlt
dec
fsin
mov
inc
sub
pop
in
repz
jne
mov
decb
out
out
push
lea
dec
mov
add
cltd
and
and
mov
into
arpl
cmpsl
aad
cld
and
sahf
pop
pushf
and
xchg
add
jecxz
mov
jmp
in
bound
sahf
jmp
pop
sbb
sahf
mov
fisubl
sahf
outsl
out
inc
lds
fsubr
inc
jmp
into
xchg
les
or
in
mov
into
xlat
aad
and
shl
xchg
int3
sti
pop
or
loope
push
xchg
in
adc
aam
movsb
fs
adc
cltd
add
test
inc
data16
dec
add
orb
push
mov
bound
je
push
jle
hlt
push
into
cltd
rorb
gs
pop
mov
xor
sbb
sbb
and
into
and
xchg
pusha
lcall
inc
roll
lea
into
insl
jmp
fadd
xchg
xchg
xchg
scas
loop
test
push
int
push
or
loopne
pop
adc
popf
cltd
adc
cmp
cmp
cmpsb
int
mov
jne
ficoml
loope
push
sbb
lock
popa
and
pop
add
sub
int
xchg
popf
mov
pop
les
jne
clc
cmp
ret
icebp
pop
inc
adc
mov
mov
shl
mov
add
jne
mov
je
or
cmc
lods
mov
and
js
sbb
insb
icebp
or
movsb
xchg
shll
mov
out
adc
icebp
inc
xchg
psubd
loop
mov
add
cmc
xor
andl
mov
lds
or
fwait
add
sub
xchg
shrl
or
and
movsb
push
in
xlat
sbb
sti
sahf
mov
loope
test
mov
push
pop
mov
xchg
xchg
subb
test
xchg
movsb
stc
add
sbb
loope
test
xor
push
loope
jo
filds
mov
xor
lea
jne
add
or
enter
maskmovq
mull
jecxz
testl
fisubl
and
loope
les
pop
test
bound
jge
xchg
inc
imul
andb
or
aad
out
mov
jnp
shll
jl
lods
sti
loope
mov
mov
sbb
xchg
xchg
xchg
shl
xchg
mov
nop
cmpsl
ja
popa
out
xor
xchg
push
jecxz
std
cmp
test
inc
mov
or
cli
mov
jecxz
push
addr16
pusha
cmpsb
lcall
loope
xorl
cltd
xchg
sbb
xchg
cltd
movsl
jmp
repz
scas
ss
xor
mov
in
inc
das
push
xlat
mov
mov
lds
fwait
jo
adc
in
fisubrl
aad
ret
rol
mov
repz
inc
loope
mov
push
call
mov
sbb
fs
cld
andb
cmp
sarb
mov
jae
inc
and
mov
lea
adc
into
int
je
in
aas
int3
mov
test
and
hlt
dec
into
movsl
inc
mov
mov
cmpsl
push
push
fsts
leave
or
and
mov
test
mov
aaa
mov
dec
xchg
jl
jge
inc
es
data16
testb
lea
or
dec
mov
stc
add
inc
inc
push
lea
cmpsb
aad
les
nop
mov
rolb
loopne
pop
je
adc
xor
xchg
push
push
jge
enter
and
adc
xor
and
mov
ret
lock
sarb
in
mov
dec
std
test
orl
in
loop
mov
pop
or
push
stc
adc
gs
cltd
das
xor
cmp
lods
xchg
push
stos
push
addr16
outsb
orb
fisubrl
orl
imull
mov
sub
push
daa
ss
fiadds
xor
push
pusha
ljmp
jae
nop
rorb
out
bnd
mov
xlat
cmpsl
pop
popf
jb
rorl
lret
dec
push
rol
and
int
das
mov
pop
sbb
xchg
adc
adc
cmp
out
cmc
push
fxch
in
and
mov
xchg
into
lock
jns
pop
cmc
aas
scas
sbb
fldcw
imul
mov
das
push
lds
inc
stos
imul
add
mov
or
cltd
pop
push
add
lods
je
xchg
in
inc
mov
loop
insb
stc
jmp
push
push
loope
pop
mov
adc
sub
fwait
jl
in
sbb
sub
inc
cmp
fmull
mov
sbb
push
cwtl
inc
ret
sbb
mov
xorb
cltd
call
stc
fldcw
pop
jecxz
mov
lea
into
add
xchg
das
sub
pusha
insb
dec
mov
subb
fstpl
add
fwait
mov
mov
gs
xchg
jns
xchg
test
daa
cwtl
and
adcl
int
mov
lret
mov
xor
sarl
push
jp
xchg
xor
xchg
add
mov
outsb
out
adc
adc
in
ret
or
outsb
pushf
jecxz
out
in
push
and
adc
mov
sbb
in
ret
fisttps
popa
or
movsl
xchg
mov
test
xchg
or
or
int3
pushf
jmp
sub
add
add
pushf
gs
lds
outsb
ret
int
loopne
jg
mov
adc
or
pushf
stos
jecxz
sbb
in
ret
int
rcrb
test
or
pushf
or
leave
sbb
in
ret
pop
or
and
inc
loope
es
test
rolb
mov
test
sub
test
sbbl
cmp
pop
es
pop
adc
or
xchg
push
push
mov
sub
mov
cli
fmul
arpl
push
add
and
jg
sbb
out
lds
push
cmc
and
pop
rclw
add
and
cwtl
and
mov
cltd
mov
and
aad
in
xor
xchg
je
xor
adc
pop
xorl
xchg
sub
mov
inc
mov
dec
mov
shll
mov
sbb
xchg
js
jmp
push
dec
dec
add
ljmp
addr16
movsb
sub
test
clc
lahf
popf
cmp
cmp
mov
inc
cmc
mov
sbb
mov
xlat
lcall
pop
out
mov
cs
xchg
sbb
push
pushf
roll
sbb
adc
mov
mov
loop
mov
rcl
test
adc
xorl
in
hlt
aam
xor
adc
jae
push
mov
xor
push
push
xorw
mov
xchg
out
test
and
xorl
xchg
in
cmc
and
push
test
mov
fsubs
aaa
pop
pop
addr16
pop
test
xchg
ret
out
mov
sub
or
push
orl
ljmp
fildll
fdivl
insb
fldcw
mov
loopne
cltd
repz
pop
test
bound
loope
push
pop
mov
sub
adc
or
push
sbb
or
sub
push
out
or
shl
ret
xor
add
add
or
fidivs
pop
xlat
xorl
pop
push
fs
enter
arpl
or
cmp
icebp
cmpb
jmp
xchg
in
add
sbb
testl
cli
add
sub
data16
mov
mov
push
test
mov
cmc
daa
dec
cmp
out
xchg
das
sbb
pop
lret
cmpsb
gs
outsl
jmp
arpl
push
out
pop
ss
cmpsl
mov
sub
pop
pop
add
mov
jbe
scas
repz
cmp
adc
sbb
vpsubq
fwait
pusha
pop
jnp
sbb
add
push
cltd
mov
or
mov
les
sub
es
lahf
arpl
fs
push
cld
jae
fidivrl
fidivrl
lahf
xchg
pop
sbb
cmpsb
sub
mov
popa
inc
pop
jp
dec
push
mov
scas
mov
xchg
ret
mov
imul
cs
xchg
push
loope
sbb
cmp
ljmp
or
orb
xchg
fdivr
mov
and
add
int3
pop
xchg
adc
cmpsb
les
call
mov
mov
mov
cltd
push
xchg
pop
into
xchg
xchg
addb
dec
pop
ret
call
and
sub
push
cmpsb
push
test
dec
clc
int3
fsubrl
fsts
out
ret
hlt
jno
mov
cmp
sub
mov
dec
out
xor
fisttps
pop
fwait
aaa
addr16
mov
and
ds
push
pusha
call
xchg
daa
push
lock
dec
ret
out
lcall
xchg
push
inc
mov
dec
add
inc
pushf
add
jmp
pop
dec
lret
add
xor
int3
inc
or
insb
jp
loop
add
outsl
cli
mov
repnz
xor
lcall
pop
call
es
mov
in
mov
fstpl
xchg
cmp
jl
pop
xor
les
into
daa
jae
inc
lds
add
push
ficoml
aaa
cli
pop
xchg
out
sub
lret
mov
in
xor
paddsw
loope
insl
push
sub
bound
and
jbe
jecxz
jo
out
shlb
fs
stos
cmpsb
loope
inc
stos
push
stos
and
jmp
sub
or
ds
xchg
inc
mov
ss
jle
subl
cmpsl
mov
cmp
aad
inc
loope
fldenv
test
jmp
sti
inc
hlt
xorl
repz
les
in
pop
loope
int3
loope
loope
repz
loope
fadds
fwait
movsb
mov
loop
pop
xchg
add
sub
pusha
sbb
cmpsb
jge
and
or
sbb
jl
pop
lods
mov
cld
int3
fsubrl
cmp
sbbl
stos
mov
sti
lret
fldt
ds
sbbl
scas
mov
dec
fisubrs
insl
jge
pop
lods
mov
std
int
and
add
push
mov
loopne
rcl
das
incl
dec
lahf
scas
jg
fucomip
mov
adcl
mov
loop
ret
xor
xchg
adc
inc
push
mov
cmp
das
jl
push
mov
mov
mov
fbld
pop
xor
test
pop
jl
push
adc
icebp
std
addl
xor
xchg
xchg
adc
dec
dec
adc
cmp
sub
int
mov
clc
mov
aam
xchg
fidivrl
int3
and
dec
lds
stos
xlat
test
dec
pop
or
sub
out
aas
push
xchg
nop
xchg
pop
test
dec
xchg
or
roll
cld
mov
stos
push
or
lods
fs
enter
les
xlat
add
out
fimull
xchg
clc
clc
fiaddl
or
addl
addl
lret
loop
mov
add
mov
jg
sbb
addb
mov
test
fmull
jnp
mov
xchg
cmp
fdivr
xchg
aad
mul
cmpsb
lds
jnp
aad
jmp
cmp
stos
pop
add
fsubs
fadds
mov
and
ret
fdivs
out
idiv
push
test
mov
mov
pushf
inc
push
js
popa
insl
dec
scas
xchg
test
jns
sub
dec
add
arpl
roll
and
gs
sub
lret
pop
xchg
dec
add
cmpsb
adc
dec
jb
hlt
xchg
add
push
lret
inc
sub
add
sti
and
or
add
fwait
in
loope
mov
test
test
imul
lret
mov
dec
mov
dec
sbb
pop
loope
rcll
nop
sahf
lea
lds
xchg
test
aad
sbb
int
xchg
fs
push
xchg
xlat
jbe
or
test
inc
mov
cli
jne
mov
or
stos
pop
ret
js
arpl
xor
repz
push
insl
icebp
add
std
sub
out
adc
call
lahf
cmp
add
pop
xor
cmp
and
js
int3
dec
or
sbb
subl
cmp
cmc
jp
mov
outsb
dec
and
addb
imul
or
lret
fs
call
xchg
test
cmpsb
cli
mov
out
sbb
rcll
movsl
cld
addr16
or
xchg
test
ja
leave
ret
xchg
or
or
dec
push
test
sbbl
cld
aaa
pop
xchg
pop
xchg
inc
ja
and
addr16
push
out
adc
inc
push
fildl
push
sahf
andb
add
dec
aaa
or
add
dec
mov
cmp
add
movb
jb
add
sbb
cltd
cmp
cmpsl
test
cmp
or
filds
movsl
ret
cmpsl
push
or
xchg
adcb
pop
out
mov
pop
andl
cmp
xchg
push
insl
pop
or
sub
lea
xchg
push
lods
gs
icebp
aaa
popf
lea
test
iret
jg
xor
out
add
or
incl
adc
les
mov
add
test
cmp
mov
std
mov
sti
xchg
mov
push
xchg
jmp
jnp
stos
jmp
mov
aaa
sbb
loop
loope
xchg
ljmp
in
cmpsl
popf
lods
pop
movsl
mov
add
je
shll
push
sub
add
sbb
sub
sbb
pop
sub
lcall
adc
add
rcrl
into
fwait
cmpsb
mov
lods
mov
mov
sbbb
addr16
push
mov
stos
or
loopne
mov
or
xor
or
popa
loope
xchg
cmp
dec
jae
cmc
rcrb
rcrl
mov
repz
mov
stos
inc
mov
push
ror
fbld
ror
aad
int
scas
es
dec
sub
popa
inc
push
in
rorl
mov
adc
loope
cli
je
pop
inc
xor
ret
adc
and
test
mov
dec
cmp
sub
add
icebp
sbb
push
mov
add
fmull
dec
aaa
xchg
jne
cmp
fadd
es
jecxz
xchg
lahf
push
and
sbb
ret
xchg
insl
mov
add
cmp
cld
fistps
or
sub
icebp
cwtl
pop
in
nop
pop
xchg
test
mov
lret
mov
dec
add
in
xor
out
cmpsb
pop
out
test
add
enter
test
inc
cld
add
sbb
xor
into
mov
inc
xchg
ret
dec
dec
push
sbb
fnstcw
adc
iret
ret
sbb
push
jo
cwtl
inc
imul
in
test
popf
pop
out
movsb
or
aad
inc
mov
push
or
pop
mov
call
jns
mov
xor
fcmovnbe
rol
das
in
outsb
fisttpll
dec
sbbb
sub
dec
aad
and
bound
aam
add
cltd
mov
push
sbb
push
push
mov
cld
mov
ja
mov
fs
shr
hlt
loope
mov
outsl
lock
daa
pushf
out
hlt
mov
sub
sub
xor
pop
and
push
mov
inc
call
xchg
andb
jo
out
or
sbb
cmp
fcoml
daa
push
push
or
mov
cmpsb
in
sub
xchg
retw
dec
xchg
mov
jl
ja
test
shll
push
push
in
aad
mov
repz
inc
into
es
ret
pop
or
pop
in
xchg
mov
pop
jle
nop
out
out
dec
test
mov
es
daa
test
or
add
mov
pop
add
int3
jecxz
aas
xchg
mov
and
les
in
or
inc
adc
inc
add
xchg
jbe
mov
dec
lods
add
pop
push
mov
testb
xchg
adc
xorb
lea
pusha
adc
cmpsb
jecxz
mov
cmpsb
aad
mov
jb
popa
lea
sahf
adc
and
jecxz
js
sti
or
adc
adc
jecxz
clc
add
repz
fs
add
pop
inc
loope
mov
pop
test
xchg
sbb
pop
shl
xchg
adc
lods
cmp
push
mov
int3
call
xlat
aaa
out
pop
sbb
dec
add
and
ret
inc
push
out
mov
jmp
push
leave
or
test
mov
lret
mov
ds
cmp
subl
add
aam
inc
loop
aaa
dec
dec
xchg
add
ja
sti
mov
arpl
fcmovne
xchg
xchg
push
aas
test
dec
and
call
inc
icebp
mov
cmp
stos
add
mov
aaa
fstl
add
orl
loop
xor
xor
adc
adc
stos
out
test
sti
lods
fwait
xchg
jno
push
jns
push
in
ja
pop
lock
sbb
imul
fmuls
or
inc
xchg
sbb
xchg
add
cs
xchg
add
fildl
cltd
test
test
xchg
popf
sti
pop
push
push
add
mov
fidivrs
xchg
xchg
ljmp
arpl
ja
orb
adc
cmpsl
jo
lea
mov
incl
test
xchg
ror
cmc
sti
inc
mov
test
push
dec
or
add
mov
mov
xchg
add
mov
lea
inc
add
pop
sbb
xchg
xchg
mov
jecxz
mov
or
xorb
hlt
int
add
dec
ret
adc
pushf
arpl
inc
lds
test
inc
sbb
in
ret
dec
or
jno
xchg
jecxz
rol
jecxz
or
push
jecxz
or
sbb
in
ret
or
inc
pushf
aad
sub
inc
loope
xchg
pushf
icebp
loopne
andl
ret
add
pushf
inc
jecxz
aad
and
add
jecxz
add
lds
sbb
in
ret
add
int
jecxz
lds
dec
ret
push
or
pushf
mov
dec
sbb
in
sbb
xchg
enter
test
movb
inc
inc
jecxz
adc
shr
into
out
xchg
dec
cmpsl
mov
dec
rcr
mov
sub
sbb
les
xchg
inc
icebp
repz
mov
cmp
sbb
or
test
int
mov
cmp
sar
nop
inc
or
insl
cmpsl
mov
adc
inc
add
ficomps
in
rcll
sbb
out
gs
pop
or
pushf
sub
into
sbb
in
ret
pop
or
fimull
add
insb
gs
pushf
lret
inc
pushf
mov
jecxz
aad
adc
loope
es
popf
lds
add
and
into
paddq
add
add
or
pop
mov
in
in
ret
ret
add
sub
and
adc
lods
leave
mov
push
inc
mov
jg
subb
pop
fstpl
add
iret
arpl
sbbl
push
mov
mov
push
inc
cltd
in
mov
sbb
cs
sbb
mov
adc
push
xchg
orl
pop
xor
dec
lods
lahf
adc
jno
test
and
push
mov
cltd
inc
es
test
outsb
add
dec
popa
xor
ds
mov
mov
xlat
inc
xor
adc
sti
sub
inc
inc
ficompl
or
in
mov
or
popa
movsb
iret
push
push
fnstsw
addr16
addb
dec
xor
jl
test
rcll
adc
add
ss
dec
mov
addl
jno
push
inc
roll
push
fs
sti
mov
jne
mov
in
sarb
lock
adc
cmp
xor
repz
cmp
dec
fnstsw
mov
sub
pop
xor
notb
in
iret
shlb
in
push
test
cmp
mov
pop
icebp
int
int3
fsubl
adc
in
clc
jne
mov
push
les
insl
int3
adc
sahf
mov
mov
repz
dec
mov
jl
pop
sbb
clc
mov
in
mov
das
mov
lods
in
jno
test
adc
push
data16
fwait
mov
orb
movsl
idivl
inc
repz
mov
cltd
push
or
adc
xchg
lea
adcl
push
subl
add
sahf
xor
out
sub
icebp
lea
leave
aad
xorl
lcall
sbb
lods
lea
pop
inc
fucomi
sub
out
xchg
loope
call
jg
rcrl
cmpl
jp
mov
lahf
in
pop
xorl
or
xorl
stc
jecxz
xor
js
out
mov
xchg
inc
lahf
mov
rorl
daa
mov
ljmp
fwait
add
sub
test
mov
or
mov
or
pop
mov
addr16
fs
dec
aam
or
stos
jg
jecxz
sub
cmp
testl
fisubrs
gs
jecxz
cmpsb
sub
stos
sbb
or
or
cmpsb
xchg
sbbl
out
test
jmp
in
inc
test
sbb
xchg
pop
sbb
sbb
test
rorl
xchg
popf
mov
sti
arpl
mov
aad
ja
cld
in
dec
jno
xchg
dec
andl
loop
lods
cmp
mov
mov
sbb
lods
sub
inc
mov
push
sbbb
fisubrs
fwait
mov
inc
mov
lcall
imul
dec
cmp
xchg
mov
out
mov
jmp
mov
lods
incb
icebp
out
mov
adc
add
inc
insl
inc
pop
adc
jne
movsb
jmp
lods
out
mov
icebp
aam
mov
and
jns
cmp
xor
xor
cmp
push
jo
xor
sbb
pushf
mov
mov
xchg
dec
cmp
popa
adc
mov
pop
inc
jg
add
inc
adc
add
add
add
inc
inc
addl
push
inc
inc
inc
xchg
inc
add
inc
lds
inc
dec
inc
mov
inc
pop
inc
jp
add
inc
cltd
inc
pop
inc
int3
inc
dec
inc
fwait
inc
in
inc
out
inc
xchg
inc
add
adc
movsb
fs
xor
dec
movsl
ds
and
add
lcall
rolb
mov
mov
insb
inc
pop
adc
out
testb
mov
fs
jge
lea
pusha
inc
mov
mov
inc
mov
movsl
jge
das
mov
movsb
in
mov
mov
mov
movsl
shlb
adc
test
mov
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
std
int
mov
push
aam
xchg
mov
cld
orb
mov
push
popa
mov
cmpsb
outsl
mov
cmp
mov
mov
mov
std
icebp
inc
in
jae
mov
stos
std
pop
orb
fidivrl
push
mov
psubq
add
pop
aad
cmc
pushl
lock
iret
stc
sbb
std
sub
loop
stc
mov
shl
in
add
pop
inc
sbb
jno
push
sbb
cmp
jg
ss
xchg
movsb
xor
cmp
or
movsl
inc
push
xchg
adc
mov
lds
inc
movsl
and
xchg
mov
aaa
adc
dec
adc
adc
add
ljmp
fsubrl
dec
mov
mov
xchg
pop
stc
push
sbb
pop
mov
push
loop
addr16
sbb
xor
ds
mov
cmc
mov
push
cld
xchg
sti
push
stos
std
push
loopne
lods
iret
test
lods
sbb
or
xchg
das
push
ret
jae
pop
in
lahf
jns
decl
adc
into
adc
adc
adc
add
inc
ljmp
or
dec
cmc
test
out
dec
mov
imul
test
dec
in
call
mov
aas
jl
movsl
xor
stc
cmp
std
cltd
mov
mov
rcll
cmp
pop
ret
add
jmp
inc
outsb
inc
mov
inc
pop
inc
int
pusha
inc
loopne
cmovno
inc
jno
jbe
mov
sub
lods
xchg
test
lods
mov
aam
arpl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
std
push
xchg
es
out
sbb
ljmp
adc
mov
dec
cld
mov
inc
jmp
push
inc
jo
mov
aad
mov
adc
mov
imul
mov
nop
test
mov
pop
ficoml
stos
fldenv
dec
xchg
pop
sbb
stos
mov
sarb
jae
mov
push
out
or
sbb
pop
mov
es
mov
adc
adc
cs
leave
insl
lock
les
mov
or
dec
js
cmpsl
test
pop
test
fsubrl
and
ja
jbe
test
and
popa
mov
add
inc
mov
mov
fbld
in
addr16
pop
sahf
pop
jg
mov
movsb
jae
push
test
lods
call
mov
or
xor
xchg
mov
out
orl
sbb
sub
or
imul
dec
mov
ss
cmp
cmp
lea
adc
nop
decl
inc
ljmp
sahf
imul
loopne
sbbb
ret
lcall
mov
ds
cmp
cmp
cmp
jnp
cs
repnz
sub
sbb
adc
ret
pusha
enter
push
pop
push
mov
mov
bound
mov
cmp
mov
ds
xor
xor
xor
cmpb
jl
lock
cld
loopne
sti
pop
out
xor
cmp
sbb
enter
data16
add
mov
xor
jg
ljmp
lcall
inc
or
add
mov
mov
push
sub
in
add
inc
or
dec
ret
sahf
inc
outsl
push
mov
lea
adc
nop
inc
movb
ret
inc
push
lret
loope
mov
mov
dec
cmp
xchg
adc
cmp
arpl
fiadds
lods
imul
and
xabort
sbb
mov
xchg
and
xchg
push
sub
jmp
sub
ljmp
xchg
pop
ss
xchg
sub
enter
jp
sub
cs
mov
mov
mov
mov
mov
mov
mov
mov
movsb
xchg
movsl
je
in
lods
lret
jp
xchg
cmpsb
daa
les
test
xchg
inc
test
inc
dec
out
pop
jb
xchg
idivb
mov
sub
dec
adc
inc
lret
cmp
dec
imul
mov
mov
jecxz
leave
mov
push
jb
repnz
adc
inc
mov
scas
loopne
adc
ret
pop
mov
jo
aad
mov
jg
dec
xchg
mov
sbb
and
sub
dec
imul
test
cli
push
mov
mov
inc
sti
pushf
dec
std
inc
cmpb
pop
mov
add
aad
cwtl
inc
or
xor
data16
in
dec
adc
cs
sub
dec
push
insb
mov
mov
movsb
hlt
adc
sahf
mov
adc
xchg
dec
sbb
sub
jl
sbb
push
sti
cmpsb
push
mov
fs
xchg
in
sub
mov
std
cmp
stos
out
sti
ret
jmp
adc
pop
cmp
push
cmpsb
xor
xchg
add
xchg
ljmp
push
pop
insb
xor
notb
leave
adc
jo
sti
adc
mov
fsin
adc
gs
mov
push
xor
mov
mov
sbb
adcb
movsl
lret
adc
sub
movsb
xchg
add
lret
jne
xchg
push
sbb
daa
inc
cmp
out
ret
push
loopne
inc
mov
in
ret
lods
and
in
xor
addl
in
pusha
cltd
cs
movl
pop
mov
inc
xchg
mov
xor
stos
andl
mov
dec
mov
push
sub
vmovss
add
fs
sub
dec
dec
sbb
aas
mov
nop
mov
std
push
test
add
std
fisttps
add
lods
lret
inc
push
inc
dec
insl
insl
inc
inc
mov
xchg
push
mov
sbb
ljmp
fmull
movsb
lea
mov
mov
iret
mov
mov
aas
movsb
and
repz
push
fdivp
loopne
xchg
xor
test
pop
orb
adc
adc
lds
or
mov
roll
and
cmp
fwait
xchg
lret
inc
lret
ret
leave
imul
lods
test
mov
mov
cmpsb
jle
mov
mov
and
fwait
mov
xchg
add
xor
inc
adc
inc
imul
sub
movsl
gs
das
rclb
shrb
or
test
lods
sahf
adc
jae
inc
xchg
adc
in
sarl
pop
loop
adc
add
sbb
mov
lods
shll
lock
jge
mov
bnd
mov
lock
repnz
fisttps
mov
shl
leave
sub
inc
push
mov
pop
push
adc
test
xchg
inc
test
lods
mov
adc
arpl
jg
mov
inc
fs
add
int3
mov
mov
adc
add
mov
mov
mov
sub
cld
or
cld
xchg
dec
adc
adc
adcb
adc
lcall
and
ret
incl
sub
in
mov
into
cld
sub
shr
in
testb
enter
in
int3
add
imul
xchg
mov
inc
cs
mov
mov
mov
or
mov
inc
rolb
mov
inc
inc
inc
shll
inc
xor
inc
cmp
flds
pop
inc
loope
inc
dec
inc
enter
mov
lret
mov
loopne
into
dec
lods
and
mov
push
jle
xor
into
xor
int
add
inc
repnz
sbb
aas
inc
mov
mov
xorb
mov
add
inc
sub
add
ret
mov
mov
mov
rol
jl
xor
mov
enter
inc
xor
xor
mov
adc
xchg
push
and
push
and
xchg
addl
lret
and
jno
addr16
adc
hlt
lret
fwait
jge
lods
out
jne
out
popa
mov
std
sbb
push
sub
addr16
rorl
cmc
in
out
shlb
push
aad
jecxz
cltd
ror
mov
outsb
fwait
mov
xchg
push
mov
loopne
cmp
sti
dec
cmp
fisubl
xchg
add
xlat
out
jge
into
or
sti
add
sbb
adc
ficomps
mov
cld
jmp
enter
xor
cmp
int
xor
jge
sahf
jg
pop
inc
test
lods
pop
ds
test
xor
jb
in
sar
inc
adc
aaa
fisttpll
adc
aad
mov
ror
add
dec
outsb
clc
mov
mov
sub
loope
fs
adc
mov
les
cmpsb
jmp
xchg
es
sub
repnz
and
imul
inc
push
lahf
fdivrl
jl
mov
dec
cmp
mov
cld
cli
sbb
add
push
shl
sbb
inc
jmp
test
push
mulb
jnp
pop
sub
cmp
xor
test
in
in
xlat
imul
xchg
cwtl
pop
test
inc
fwait
call
loope
adc
mov
call
push
insl
jl
mov
jae
aam
pop
and
push
shlb
fildl
jae
inc
fildl
dec
fldt
nop
push
sbb
js
data16
sub
sbb
push
sti
ds
lcall
adc
xorl
iret
loop
add
jp
xchg
aad
hlt
mov
pop
loopne
adc
jecxz
dec
jecxz
into
adc
cli
jnp
and
push
es
inc
add
leave
xor
in
adc
pop
sbb
in
xchg
adc
sbb
orl
leave
push
insl
sbb
cmpw
mov
rolb
mov
shrb
hlt
mov
pop
dec
push
out
pop
or
and
mov
fs
mov
call
clc
rcll
sub
dec
movsb
dec
mov
repz
xchg
and
lock
sub
xchg
inc
adc
test
pop
xchg
loopne
mov
lret
xchg
adc
and
clc
stos
mov
cmp
js
in
adc
repnz
sarb
enter
or
incb
int3
or
cmc
int3
lcall
and
dec
jne
dec
dec
stc
lods
cmp
jbe
adc
push
in
adcb
sti
nop
movsl
out
test
sub
movsl
test
pop
movsl
cmp
xor
aas
inc
sbb
enter
and
addr16
lret
inc
mov
xchg
or
call
clts
arpl
add
shlb
out
add
call
fisubl
ret
setnp
cmpl
pushf
loopne
or
push
add
loope
sbbl
sbb
cs
dec
je
push
incb
cmp
and
or
lret
sbb
aaa
mov
xor
and
inc
addb
jnp
adc
jnp
or
imul
nop
cmp
aad
jmp
or
mov
sahf
mov
jns
sahf
jae
cmp
rol
jmp
dec
or
cmp
xor
mov
xchg
mov
in
jbe
pop
or
loope
dec
xchg
sbb
mov
rol
je
arpl
sub
sub
xchg
mov
enter
lcall
rcrl
ret
add
mov
test
or
movsl
xchg
iret
lea
cmc
out
cmp
or
lret
jbe
cmc
and
dec
inc
cli
clc
lods
push
pop
mov
stos
test
xor
ljmp
repz
loopne
mov
dec
adc
push
repz
scas
les
push
test
xchg
jns
adcl
out
ja
ja
out
fldl
mov
idivl
stos
imul
or
mov
jecxz
mov
sub
cwtl
out
xchg
or
es
add
sbb
inc
or
cmp
orb
xlat
in
cmpsl
jp
xlat
xlat
xor
push
inc
clc
jp
cmpsb
fs
add
mov
in
push
push
in
xchg
in
pop
add
pop
insb
call
rcrl
adc
test
sub
fwait
sub
lcall
inc
mov
or
and
xlat
cwtl
adc
int3
scas
into
daa
jb
fsubr
inc
pop
jbe
xor
fsubr
cs
rolb
clc
mov
cli
add
sub
xorl
push
andl
pop
sbb
arpl
adc
cmc
sub
mov
sub
lret
ret
and
data16
testb
sbb
push
adc
negb
cmp
cmpsl
inc
repnz
jne
mov
cmpsl
orb
orl
push
xchg
test
loope
addl
push
gs
mov
xor
test
add
enter
ds
mov
xchg
sub
dec
imul
jecxz
into
mov
dec
jnp
inc
xor
shrb
mov
ljmp
aas
lret
mov
popf
mov
push
mov
dec
inc
sub
xchg
movsb
adc
push
sub
mov
push
jns
or
cmp
xchg
pop
gs
jp
cmc
jno
xchg
and
movsb
cmpsb
push
out
add
ljmp
push
xchg
mov
out
gs
sbb
cmc
test
mov
sarb
clc
jp
cli
mov
inc
pop
loope
mov
xchg
cmpsb
in
divl
ljmp
cltd
nop
gs
shl
adc
bound
clc
insb
call
jecxz
into
clc
das
cmp
sbb
adc
sub
jp
or
dec
push
jle
ds
mov
enter
pushf
inc
or
mov
jl
push
mov
and
nop
orl
mov
sbbb
es
scas
js
addl
xchg
test
jecxz
negb
inc
sub
jnp
xor
fisubrl
mov
cmp
dec
xchg
cltd
repz
subb
and
iret
ret
push
insl
sbb
xchg
shl
dec
cwtl
or
aas
cmpsb
or
inc
ficomps
arpl
in
xchg
gs
fcmovnbe
iret
dec
push
xor
xchg
or
push
jge
scas
xchg
iret
cmpsb
test
or
mov
add
lock
or
lcall
adcl
hlt
add
fidivrl
xor
mov
xchg
in
dec
mov
or
test
sub
sbb
mov
jle
or
stos
fidivl
fs
add
stc
sub
add
cmpsb
ss
insb
xor
mov
pop
fildl
xor
lods
sbb
mov
rcrl
inc
addr16
cmp
shlb
xchg
shr
dec
mov
rorl
jne
inc
cmp
pop
xchg
xchg
lock
sahf
div
jecxz
insb
lret
xchg
or
inc
xchg
pop
lock
xchg
test
xchg
sbb
or
push
gs
mov
add
mov
pop
push
fadd
cltd
push
add
xchg
fs
ss
cmp
mov
sti
xor
add
adc
xchg
mov
hlt
in
scas
je
aam
dec
pop
pop
and
jg
cmp
jecxz
repz
lods
dec
cmp
cmc
mov
adc
mov
fwait
xorb
sbb
sbb
or
test
dec
push
sbb
es
jae
stos
dec
xchg
mov
mov
lods
pop
pop
test
ss
daa
out
jae
xor
cli
dec
daa
push
in
pop
pop
mov
insl
aad
cld
movsl
in
int
push
inc
mov
pop
inc
outsb
hlt
push
pop
nop
inc
scas
popa
lock
jbe
imul
imul
pushf
outsl
imul
test
push
fdivr
adc
cmp
mov
or
mov
shr
pop
pushf
jmp
pop
push
or
outsl
test
mov
mov
in
xchg
jb
cmc
add
and
and
sub
gs
lret
in
in
mov
sub
jecxz
mov
xchg
mov
xor
xchg
dec
cmpsb
enter
ret
pop
stc
ret
movb
adc
imul
jnp
sub
clc
or
cmpsb
out
cmpsl
cmpsb
fs
or
test
inc
mov
xchg
mov
adc
xlat
hlt
negl
xchg
dec
mov
loopne
jp
movsb
push
sbb
lcall
xor
pusha
mov
xlat
sub
fcmovb
cmpsb
sub
xlat
push
lcall
movsl
jo
idivb
ret
push
sti
test
pop
inc
test
and
push
push
orl
repnz
sub
fnstenv
enter
aas
nop
shr
and
pushf
sub
add
adc
sbb
sbb
in
push
ficompl
sub
gs
add
in
and
fmulp
push
int3
lcall
cmp
mov
mov
jecxz
sub
jae
js
sub
rorb
lds
lock
xchg
push
mulb
or
sbb
xchg
imul
mov
mov
sarl
pushf
in
pop
xor
cwtl
xor
in
fldpi
push
dec
out
ljmp
mov
xchg
dec
mov
and
dec
xchg
mov
push
lds
and
mov
cmp
leave
pushf
push
or
pop
cmp
jae
arpl
xor
push
fwait
imull
icebp
pop
ficoml
aad
ljmp
mov
add
xchg
adc
cwtl
add
add
add
cwtl
sti
pop
test
int
popfw
sahf
divb
int
xchg
add
sti
push
shll
ljmp
cmpsb
test
push
in
out
pop
in
mov
out
jne
cs
shrb
sub
in
insl
cmp
enter
clc
lea
ret
pop
stos
jno
mov
and
jbe
sbb
xor
mov
push
fwait
es
mov
jnp
lret
jmp
cld
subl
jbe
xor
and
pusha
mov
in
insb
fucomi
pop
aam
inc
imul
inc
xlat
outsl
sbb
daa
xor
adc
xchg
lcall
add
popf
dec
lcall
mov
mov
fadds
popf
mov
daa
add
fadds
scas
fsubr
adc
ret
loopne
clc
mov
int3
sub
shl
and
jae
frstor
jne
xor
push
fwait
cmp
pop
xchg
pop
sub
push
in
jmp
insl
sub
mov
ja
inc
push
mov
dec
jb
outsl
mov
pop
dec
inc
sti
data16
xor
push
clc
inc
pop
dec
in
xor
add
sbb
out
and
pop
popa
sub
pop
shlb
jge
mov
xor
or
jo
mov
sub
les
cmpsb
jo
fbld
test
xchg
push
mov
je
out
mov
inc
jbe
and
jl
dec
repz
adc
mov
sbb
xor
pop
iret
cs
fs
daa
cld
sub
cwtl
pop
and
stos
cwtl
lret
into
mov
push
jbe
push
das
adc
shl
adc
arpl
lret
cwtl
lret
int3
js
dec
jp
cld
jl
dec
outsb
test
stos
stc
sub
ret
add
xor
repz
lret
sbb
jnp
shrb
mov
inc
shrb
inc
xor
shll
scas
addr16
ficoms
mov
dec
push
fbstp
out
sbb
add
out
cmp
popa
pop
enter
pop
pusha
rcrl
dec
enter
popa
js
add
sub
mov
cmpsb
xor
dec
popa
das
mov
mov
mov
loop
push
pushf
add
dec
mov
push
mov
je
adc
pop
add
divb
lock
or
ss
mov
sub
jle
call
cmpsl
lahf
in
sub
repz
cli
push
test
out
pusha
frstor
or
push
pop
dec
addl
lret
mov
pop
mov
cwtl
cs
cmc
pop
jbe
xor
mov
jb
mov
das
xor
xor
inc
jb
js
sub
iret
mulb
xor
aaa
sub
mov
inc
pop
nop
adc
mov
pop
push
popf
mov
mov
ljmp
pop
jbe
jne
mov
push
aaa
movb
mov
pop
leave
push
or
lret
adc
outsl
adc
dec
xchg
ret
sub
movb
fisubs
lret
cld
and
ffreep
pop
jl
andl
fcmovnbe
pop
push
fdivl
cmp
cwtl
sub
adc
jne
test
cltd
in
or
jns
ljmp
xchg
pop
pop
xor
iret
repz
shll
fsubrp
loop
fmulp
cwtl
dec
push
repnz
shrb
xchg
xor
ja
ja
adc
fisubs
xor
xchg
in
and
and
stos
mull
lret
xor
jecxz
jecxz
out
mov
pusha
sbb
pop
cmp
shll
dec
inc
in
je
mov
xchg
fwait
sub
jle
mov
adc
int
jmp
lods
xchg
xor
adc
hlt
inc
fptan
inc
mov
scas
cmp
jo
fistl
xor
sbb
ds
fs
sbb
mov
frstor
rcl
fwait
shrl
push
test
and
push
mov
pop
pop
cmp
jb
sub
jns
sbb
bnd
pop
pop
ja
neg
sbb
add
inc
mov
fiaddl
cs
sub
imul
shl
jo
ret
mov
cmpsb
xchg
inc
or
fists
jns
cmp
cld
adc
mov
jnp
adc
out
adc
ljmp
cwtl
mov
adc
nop
push
mov
add
push
addr16
inc
clc
lret
sub
imul
inc
lahf
repz
fsubr
adc
enter
pop
cmp
cmc
jg
movsl
out
cmpsl
sbb
xor
gs
sub
inc
push
js
xchg
pop
ds
js
xchg
push
push
mov
xorl
adc
adc
sarb
loopne
xchg
or
and
repnz
and
jns
fdiv
and
daa
dec
push
fidivl
clc
scas
mov
mov
into
test
push
or
in
pop
and
sbb
jle
inc
lods
mov
sbb
rcrl
sub
mov
jle
xor
sub
jle
push
pop
cmp
pop
frstor
sar
cli
jb
icebp
mov
xor
divb
sti
negl
out
xchg
repnz
sbb
cmp
testb
jnp
push
stos
sbb
jno
divb
cmp
and
xchg
xchg
clc
shrl
js
xchg
jnp
fucom
lods
add
fdivs
mov
stos
ficomps
pop
faddl
ret
push
or
xchg
clc
inc
das
sub
pop
lcall
daa
add
das
jo
loopne
pop
sbb
bound
pop
cwtl
popf
ljmp
loop
cld
push
xor
xor
loopne
mov
aam
cmp
dec
in
sbb
es
das
ss
aas
loopne
push
lock
out
ljmp
in
popa
sbb
adc
jns
and
in
sbb
es
sbb
dec
ret
loope
sub
sbb
jp
imull
sbb
shlb
lds
inc
lds
cs
push
jp
aas
lods
lods
jne
push
lahf
loopne
imul
in
mov
test
mov
pop
inc
rol
in
mov
cmp
test
fmuls
aad
and
xchg
cmp
cmc
and
lea
sti
and
xchg
mull
jg
push
fcom
or
adcb
adc
inc
dec
dec
xor
fsubrs
adc
lret
cmpl
mov
jbe
cmp
xchg
call
and
push
addr16
loope
or
push
dec
dec
test
pop
cmc
mov
cli
stos
js
movsb
cmp
out
add
and
xchg
ljmp
adc
out
fadds
testb
inc
sub
mov
ljmp
lds
test
add
cmc
sub
mov
cmpl
aaa
mov
in
push
and
and
pop
sarb
xor
imul
pop
cmp
cmp
sbb
sbb
aaa
enter
in
sbb
or
xor
xor
sub
pop
js
dec
pop
sub
orl
and
lds
clc
stos
jbe
sbb
pop
cmc
lcall
sbbl
cmp
dec
sub
dec
dec
cwtl
cli
imul
push
repnz
pop
orl
sbb
fimull
ljmp
fdivrs
xchg
xlat
push
or
mov
lds
addr16
and
aaa
or
adc
enter
ret
fwait
jb
mov
js
imul
mov
pop
lds
fadds
popa
and
xchg
sub
jbe
xchg
addr16
sub
sbb
daa
or
or
call
pop
xchg
sbb
stos
xchg
jns
xchg
mull
dec
pop
push
mov
lcall
mov
cli
cmp
mov
or
ret
add
mov
sbb
testl
mov
shrb
push
popa
jmp
lods
lds
clc
out
mov
or
aad
rorb
dec
ret
mov
push
pop
orl
aaa
push
out
inc
or
adc
sub
aaa
jb
push
xchg
mov
cmc
xor
xchg
enter
ljmp
js
pop
mov
out
ffreep
loope
ret
out
xor
clc
mov
xor
aaa
xchg
cmp
mov
or
xor
xchg
es
aad
out
mov
sbb
mull
fsubrs
lcall
sbb
dec
clc
xor
sbb
and
xor
adc
mov
dec
push
les
imul
icebp
xor
sbb
push
push
addl
sbb
dec
aaa
leave
push
mov
out
dec
enter
and
add
sub
or
pop
daa
nop
jbe
adc
mov
cmpsl
sbb
add
shrb
in
aad
ljmp
sub
pop
imulb
cmc
data16
mov
mov
sub
cmp
inc
jge
js
xchg
fadds
in
or
fsubs
xchg
and
pop
mov
xchg
add
mov
testb
clc
aaa
sub
icebp
into
sub
mov
lds
bound
or
push
cmp
lds
xlat
xchg
lea
push
sub
mov
sbb
xor
imul
call
xorl
pop
cltd
cmp
pop
stos
stc
test
push
cmp
loop
cmc
lea
mov
or
mov
cmp
pop
fisubl
aaa
pop
cmp
dec
xor
subb
or
cmp
sbbl
or
loop
orb
xor
or
jnp
xor
out
out
xchg
add
dec
xlat
mov
sub
xchg
loopne
test
stc
movsb
enter
scas
inc
inc
cmc
mov
cmp
aad
xlat
push
int
shrb
adc
dec
xchg
lods
sbb
mov
fsubrs
sub
adc
push
fimull
testb
into
leave
sar
das
pop
add
mov
outsl
pop
sbb
jno
ficoml
mov
pop
cli
lret
xchg
dec
mov
lcall
mov
movsb
cwtl
sub
cmp
pop
lods
sbb
jp
dec
test
dec
out
jle
leave
cmc
cmp
loop
in
or
mov
fdivrs
fldenv
or
sub
js
lcall
cmp
imul
sbb
testl
rcrl
daa
xlat
ffree
hlt
int3
mov
jnp
xchg
or
sub
cmp
xchg
push
clc
out
ds
into
sbb
xchg
pop
xor
mov
fstps
sub
mov
dec
cmp
fsubs
ljmp
sub
not
xchg
test
cwtl
xchg
xlat
cmc
or
or
sub
sub
mov
in
lcall
sub
clc
and
sub
cmp
xlat
dec
sti
stc
je
out
mov
and
xchg
loopne
rcll
lcall
or
inc
cmp
mov
mov
xchg
out
imul
mov
xor
sbb
mov
js
out
sub
test
inc
ljmp
xchg
ljmp
pop
xlat
fmuls
mov
aad
adc
das
sbb
mov
jbe
test
mov
add
cmc
or
cmp
push
xor
sub
in
cli
in
push
mov
sub
jecxz
add
cli
out
enter
sub
adc
cmp
ljmp
mov
cmc
cmp
fsubs
js
jbe
mov
out
lcall
pop
xor
pop
daa
out
sti
lret
inc
pop
loope
dec
pop
xchg
xlat
in
out
js
je
aad
aaa
andl
imul
xor
outsl
mov
call
insb
push
movb
dec
movsl
loope
test
js
popf
pop
xchg
pop
adc
add
pop
out
cmp
mov
fiaddl
clc
cs
fidivs
cmp
outsb
or
stos
lea
out
inc
aaa
xlat
adc
lcall
xchg
out
test
adc
lcall
xchg
dec
xchg
addr16
stos
bnd
xor
subl
and
pop
xchg
clc
cmp
clc
xchg
popw
adc
inc
movsb
nop
mov
sbb
dec
or
mov
add
call
ljmp
testl
or
test
je
cwtl
sbb
sub
mov
xchg
addl
pop
xchg
call
mov
xchg
test
sub
push
scas
aad
js
out
or
cmp
cmp
mov
xchg
jmp
or
arpl
dec
adc
cmp
cli
rcrb
in
roll
dec
sbb
shrl
js
cmc
rolb
adcl
pop
xor
les
fisubl
sbb
cmc
ret
xchg
fidivrl
mov
mov
mov
ret
lcall
out
loop
cmp
push
lea
addr16
cli
mov
in
js
pusha
flds
mov
not
add
fneni(8087
pop
neg
test
sub
stos
fisubs
cwtl
jl
daa
idivb
fisubl
xor
daa
jbe
or
test
outsl
dec
repnz
xchg
mov
xchg
add
daa
mov
mov
arpl
pop
and
lock
jmp
xlat
and
dec
push
shll
or
pop
sub
xchg
push
xchg
xor
xchg
jne
out
dec
sbb
lock
jbe
lea
xlat
jp
in
mov
test
orb
cmp
sbb
pop
xchg
in
xchg
in
or
cltd
add
or
out
dec
mov
pop
mov
dec
xor
notb
in
jno
mov
es
mov
enter
nop
xor
dec
mov
in
and
xchg
call
shll
cmp
mov
push
enter
adc
clc
xor
cmc
xor
cmp
pop
pop
std
mov
lret
fdivs
xchg
push
aaa
sub
or
jp
dec
rcrl
jp
mov
imul
mov
pop
icebp
pop
dec
call
jo
ds
mov
call
clc
in
sub
dec
fbld
or
pop
stc
or
pop
test
mov
jecxz
xor
or
jo
mov
test
movsl
add
mov
or
xor
imul
test
adc
xchg
cmp
sarl
cwtl
sbb
push
xchg
push
xchg
cmp
cmp
and
sub
les
nop
imul
fnstsw
push
mov
push
test
and
or
mov
stos
push
mov
and
out
push
cmp
xor
fisubrl
pop
insb
and
test
mov
insl
repnz
or
cltd
lret
pop
dec
inc
into
cmp
mov
jne
mov
mov
xchg
mov
call
in
sbb
addr16
clc
movsb
mov
xchg
in
push
lea
imul
sbb
push
lcall
arpl
insb
jl
push
lds
ss
mov
xchg
jp
add
call
in
lods
mov
cmc
lcall
pop
sub
push
out
or
cmpsb
test
sub
rolb
in
xchg
push
dec
adc
shl
and
mov
or
cmc
mov
and
es
movsb
rcr
call
sbb
pop
hlt
push
mov
dec
jge
mov
aas
in
xor
xchg
inc
jbe
lods
imul
mov
dec
aas
movsl
lret
ljmp
xchg
imull
xchg
cmc
test
xchg
loop
lcall
cmp
mov
pop
pop
stos
mov
pop
push
call
pop
ljmp
fcoms
icebp
jbe
lcall
stos
lret
ret
sti
pushf
popf
fcmove
mov
ljmp
mov
sbb
lcall
xlat
lods
es
icebp
cmp
cmc
xchg
and
stos
out
call
pop
or
inc
mov
add
cmp
dec
imul
dec
clc
fbstp
push
aad
mov
xchg
mov
popa
sbb
cmp
movsb
js
sbb
mov
js
sbb
popf
out
out
rclb
xchg
push
xlat
test
movsl
aad
idivl
andl
xor
int
loope
sbb
lcall
mov
test
test
cmc
aad
mov
jb
sub
or
and
push
mull
inc
mov
push
icebp
aaa
fidivrl
rcr
add
pushf
mov
das
popf
or
xchg
or
fcmovb
out
stos
cltd
fidivrs
into
dec
dec
leave
in
psubb
out
push
test
notl
jl
jg
cmc
sub
out
pop
inc
xchg
ljmp
addl
and
mov
xchg
test
stos
cmc
mov
inc
pop
das
pop
dec
cmp
lret
jle
and
ljmp
xchg
push
xor
fstpl
push
add
or
cwtl
jbe
cmp
fildll
or
les
or
adc
daa
xchg
mov
pop
in
shlb
lds
mov
ds
cmp
loop
mov
mov
ljmp
in
out
negb
dec
jmp
clc
and
aad
pusha
sub
idivb
xor
mov
imull
cmp
mov
cmp
movsb
xchg
add
cmc
js
dec
push
push
sarb
mov
xchg
in
pop
xchg
ret
and
sub
sbb
xlat
out
hlt
pop
cmpl
and
sti
lahf
pop
sbb
testb
cmp
mov
dec
cmp
adc
imul
pop
inc
jmp
jbe
cs
mov
xor
xlat
fimull
mov
mov
mov
xchg
lds
push
xchg
push
test
fildll
call
mov
mov
into
clc
xor
push
sbb
imul
mov
jbe
adc
push
mull
jbe
sahf
icebp
dec
mov
xchg
ja
sub
xchg
repz
sub
xchg
daa
add
push
arpl
imul
movl
jecxz
rcll
pop
mov
in
hlt
js
loope
imulb
out
in
dec
xor
scas
aad
fcoml
xchg
lcall
mov
jbe
negb
leave
arpl
js
xor
sbb
mov
sbb
xchg
sbb
mov
push
and
xchg
or
enter
or
xlat
cmp
idivl
mov
mov
xchg
push
or
sbb
lcall
and
jbe
movsb
cmc
sbb
movsb
fmul
lcall
test
xchg
pop
pop
xor
into
pop
mov
sub
cmp
or
mov
shlb
mov
adc
sub
out
sbb
cmc
movl
mov
xlat
jmp
fisttpll
and
addr16
fidivrl
adc
push
sbb
pop
call
sbb
dec
mov
pop
sar
out
subb
bound
fildll
sub
ss
or
mov
xchg
out
sbb
ret
dec
mov
lea
enter
in
lahf
rcr
dec
out
xor
inc
outsb
sbb
out
xchg
out
int
mov
fsubrs
push
xorl
mov
imul
jg
jbe
mov
imul
xchg
xlat
sbb
lret
aad
imul
lcall
mov
cwtl
pop
lret
out
ret
daa
daa
je
aaa
cmpsb
push
push
dec
cmp
xlat
aam
enter
mov
pop
xor
ljmp
int
lds
enter
mov
addr16
lods
mov
sbb
sub
pop
in
sbb
adc
cmp
ss
cli
dec
adc
fninit
fmuls
or
lcall
sub
js
movsl
xor
lret
je
lds
ss
call
imull
iret
ret
xor
mov
icebp
or
pop
fists
pop
mov
lods
fldcw
sbb
lea
fidivrl
test
xchg
sbb
nop
aad
xchg
xchg
mov
inc
cwtl
or
mov
jae
mov
mov
sub
aaa
or
dec
xchg
dec
hlt
cmp
mov
and
pop
daa
add
sbb
or
cmp
sub
xchg
inc
xchg
call
sbb
ret
dec
sbb
addr16
sub
stos
fs
xor
xchg
xchg
loopne
fdivrs
sub
pop
fmull
mov
clc
popf
rol
cmp
lcall
cmp
xchg
stos
icebp
sub
sbb
lret
rcrb
cwtl
je
stos
cmp
fs
mov
xchg
push
out
iret
inc
pusha
enter
mov
lcall
mov
cmc
std
add
add
jl
clc
push
xor
sbb
push
call
popa
imull
cmp
mov
adc
aad
xchg
sub
sub
ljmp
clc
inc
mov
in
mov
and
dec
popf
xchg
enter
xor
shrl
xchg
or
test
or
ret
in
jmp
popf
inc
lds
rolb
and
xor
int3
adc
xchg
daa
in
or
mov
inc
pop
add
clc
js
inc
cmpb
imul
fsubrs
or
cli
lret
xchg
jmp
add
mov
ficompl
cli
sub
into
call
or
mov
out
loop
xlat
test
lret
aad
rclb
adc
xchg
dec
xchg
and
mov
fstps
cmp
out
popf
fs
xor
xchg
jmp
xchg
mov
cwtl
pop
pop
add
aad
fidivrl
adc
sahf
rorl
xchg
cli
pop
test
xlat
mov
or
loopne
enter
testb
mov
xor
xchg
cmp
mov
bound
sbb
inc
clc
in
hlt
cli
mov
mov
mov
or
mov
lret
add
dec
or
iret
dec
in
mov
mov
stos
daa
loope
lods
and
xor
pop
cwtl
xchg
sub
dec
js
add
dec
fbstp
xchg
cmp
mov
out
mov
mov
lcall
sbb
orb
xchg
push
lret
pop
insb
jmp
loopw
adc
popf
notb
dec
or
lcall
fbld
xchg
clc
xchg
into
jp
dec
mov
pusha
lds
xchg
cmp
jns
inc
jo
aas
rclb
ds
mov
mov
test
add
les
test
ficoml
in
movsb
stos
das
mov
or
sub
dec
rorl
int
mov
mov
imul
xchg
stos
lret
mov
mov
imul
mov
or
cmpsl
xor
or
ja
and
vprotq
cli
fwait
xor
xchg
push
xchg
roll
push
xorb
or
cmp
cmp
xchg
cwtl
xchg
jne
pushf
and
cmp
jbe
std
push
adc
outsl
or
call
sbb
xchg
enter
gs
cmc
and
pop
sbb
cli
in
icebp
sub
je
or
sbb
cmp
out
adc
and
add
jb
loope
dec
mulb
pop
lret
xor
and
out
mov
xchg
fidivrl
or
add
inc
mov
cmc
xchg
mov
pop
sub
mov
cli
mov
dec
mov
aad
xchg
or
movsb
fstps
ja
mov
cmpsb
sbb
mov
sbb
or
daa
mov
xor
xchg
scas
mov
aad
loopne
push
addr16
out
ret
pop
mov
push
lock
aas
loope
sub
push
andl
daa
mov
mov
xchg
in
sbb
mov
movsl
imul
popf
mov
inc
xchg
mov
lcall
jp
mov
div
sar
mov
cmp
xchg
or
sbb
ficoml
stos
jmp
sbb
and
dec
idivb
ret
lds
js
into
mov
inc
in
sbb
leave
cmp
pop
xchg
div
jp
xlat
std
xor
fisubl
fsub
sub
roll
negl
and
movsb
xorl
clc
pop
out
insl
mov
xchg
aad
sub
mov
pop
addr16
clc
jle
loope
or
sbb
or
test
scas
xor
mov
pop
scas
imul
arpl
movsb
popl
lahf
js
cmp
daa
cltd
lahf
sub
orb
sbb
insb
push
pop
push
pop
lcall
ficoml
aad
xchg
jae
add
sub
cmpsb
and
cmp
push
jbe
jbe
pop
and
fwait
sub
mov
das
fdivs
fcmovnbe
rcr
flds
inc
std
clc
js
movsb
xchg
in
sbb
daa
testl
in
inc
xlat
fdivrl
pop
jp
xchg
and
fisubrl
push
mov
cli
cli
fisttpll
sub
adc
insb
pop
loop
sbb
cmpsl
mov
movsb
out
jecxz
out
xchg
jle
dec
jmp
cmc
stos
popa
out
inc
cwtl
xlat
xor
std
dec
lds
imul
push
xchg
stc
xor
les
push
inc
sub
sub
mov
push
sub
mov
cmp
dec
push
sub
lcall
xchg
or
adcl
sbb
push
push
add
sti
jo
or
pop
lahf
bound
jae
clc
sub
or
fwait
inc
fldenv
inc
gs
js
stos
or
xorb
imul
cmp
adc
ss
iret
mov
iret
lea
fisubrl
pop
push
dec
jp
mov
and
cmp
push
cmc
pop
sbb
adc
xchg
jb
sbb
lahf
in
scas
jmp
xchg
sub
or
dec
insl
inc
rorl
mov
lds
sbbl
or
dec
mov
sub
mov
icebp
pop
clc
imul
xchg
push
loopne
sub
or
cwtl
daa
or
mov
xchg
cltd
rorl
sub
icebp
adc
cmp
mov
push
shrl
push
dec
icebp
push
mov
out
movsb
mov
imulb
mov
in
fimull
cmp
jo
inc
loope
push
outsl
lea
xchg
pop
ljmp
imull
lret
pop
lcall
gs
mov
sbb
fsubrs
xor
faddl
lods
push
lods
sahf
out
lds
mov
xchg
and
bound
jbe
dec
stos
jo
pop
js
lds
mov
cli
mov
mov
xlat
mov
lahf
jo
cmp
mov
or
cmpl
mov
movsb
push
or
daa
fucomip
sub
cmc
fisubl
call
pop
lcall
pop
mov
dec
xchg
and
xlat
add
mov
imul
push
pop
or
xor
mov
in
xlat
cmc
mov
aaa
cmp
add
lds
insb
in
mov
es
lock
xlat
push
xor
jp
mov
pop
xor
sbb
out
aaa
add
mov
jae
mov
mov
push
dec
int3
dec
sub
je
xchg
mov
popf
sub
push
in
xor
adc
mov
mov
cmp
cmp
push
and
mov
lret
mov
bswap
movsb
sbb
mov
out
cwtl
xchg
sbb
mov
dec
rorl
gs
shl
push
cmpsb
adc
mov
and
cmp
cmp
xlat
stos
in
rcr
fldenv
test
cli
mov
cmpl
shrl
mov
out
dec
sbb
nop
es
hlt
imul
xlat
pop
and
insb
add
orb
sbb
scas
pop
andl
xchg
mov
xor
xchg
ds
lcall
mov
call
pop
rorl
mov
stos
sbbb
sub
xchg
daa
push
test
dec
or
cli
cmp
fadds
pop
cmc
push
or
sbb
jmp
cltd
in
notl
xchg
pop
xchg
dec
cmp
leave
sub
xchg
fstpl
pusha
mov
in
sbb
mov
aad
or
cli
test
mov
adc
xlat
sbb
insb
rorl
cwtl
sub
movsl
sbb
leave
imul
out
cmpsb
lcall
mov
xchg
lret
stos
inc
lret
mov
mov
pop
cmp
pop
cmp
sbb
inc
aad
ljmp
movsb
jmp
out
notl
call
pop
add
pop
jbe
addr16
mov
mov
xchg
orb
lds
faddl
test
fsub
call
dec
ljmp
dec
cwtl
testb
lret
mov
ljmp
push
jne
jmp
sbb
xchg
cmp
xlat
leave
sbb
dec
sub
jge
gs
push
in
out
lret
popf
test
or
fadds
insb
popa
mov
mov
divl
mov
cmp
xchg
add
sbb
mov
mov
push
xchg
mov
icebp
pop
aaa
vmovaps
mov
fdivs
mov
or
call
aaa
fidivrl
mov
add
pop
mov
mov
sub
or
xor
test
mov
sub
nopl
enter
xchg
loope
jl
aaa
ljmp
xchg
lcall
cwtl
divl
cmp
mov
xchg
sbb
popf
rorl
shll
ss
fdivl
pop
jp
cmovs
inc
ljmp
add
lcall
jne
testb
pop
hlt
pop
in
xchg
mov
ds
shll
push
clc
popf
xchg
cwtl
stos
xchg
pushf
push
or
into
cmp
iret
cmp
mov
orl
lds
xchg
and
cs
fwait
xchg
xlat
lcall
mov
pop
ret
cli
test
sbb
xchg
div
pop
pop
dec
lcall
lret
lds
pop
cltd
add
adc
push
aaa
ret
pop
dec
les
dec
std
insb
cmp
repnz
mov
and
fstps
mov
adc
cmp
sbb
sub
outsl
inc
enter
or
jnp
in
mov
mov
daa
jb
clc
and
mov
xchg
shl
in
stos
sub
loop
mov
mov
mov
or
out
xlat
cmpb
and
cwtl
push
xchg
add
mov
jl
cmp
icebp
add
sbb
lds
aaa
fidivl
sbb
jl
addr16
mov
sub
push
sbb
cmp
jle
pop
fwait
mov
push
or
dec
jp
mov
div
cli
aaa
pop
gs
dec
mov
enter
enter
xor
cmp
test
xchg
enter
cltd
or
cmp
addr16
je
movsb
nop
dec
push
pop
mov
pop
xchg
adc
dec
xchg
xchg
add
pop
jmp
jbe
sub
cwtl
pop
jg
or
lds
sub
lret
loopne
inc
xor
ljmp
mov
cmc
mov
stos
not
sbb
ficompl
or
pop
mov
dec
loop
mov
mov
std
sub
xchg
fwait
test
stos
xchg
jno
and
or
cmpsl
pop
hlt
sub
stc
pop
dec
xor
pushf
mov
sbb
pop
add
push
sbb
ret
xchg
inc
movsl
inc
imul
fcoms
or
aaa
mov
sbb
or
mov
and
neg
or
out
jg
lret
xlat
mov
adc
xchg
out
jg
call
ja
push
pop
mov
cmpsb
sbb
in
cmp
push
in
orb
dec
pusha
aad
jno
add
pop
xchg
sbb
and
enter
push
adc
xor
cli
xlat
cwtl
and
cmpl
xchg
dec
call
lcall
idivb
out
dec
fsubrs
jmp
test
and
popa
cli
fdivrl
cmp
mov
hlt
cmp
ret
in
addr16
mov
or
clc
or
xchg
xor
in
loope
add
or
cmp
dec
hlt
cwtl
jbe
dec
pusha
out
int
loop
in
outsb
test
and
in
clc
dec
xchg
out
xchg
xchg
add
lock
xor
sbb
xchg
dec
mov
push
es
cltd
sbb
int
aaa
or
add
add
in
xchg
in
mov
popf
or
nop
ret
lea
xchg
icebp
js
xlat
cmp
xor
fwait
mov
cltd
dec
clc
or
roll
sub
out
cmp
mov
xchg
add
lcall
lret
subl
daa
xchg
mov
divl
adc
push
adc
movsb
pushf
pop
ret
xor
test
aaa
pop
mov
ljmp
xlat
in
mov
testl
stos
in
and
fcmovbe
dec
leave
adc
push
movsl
add
push
inc
add
xlat
dec
sbb
cmpb
aaa
xchg
cli
cmp
test
mov
mov
sbb
sbb
les
dec
movsl
cmpsb
pop
std
jge
cmp
mov
mov
push
imul
jp
cmp
sbb
mov
dec
scas
loope
or
mov
mov
jbe
pop
sub
mov
lret
mov
or
pop
bound
dec
mov
cmp
lcall
dec
rol
in
and
adc
xchg
or
out
out
lea
lret
enter
fadds
or
add
jp
fstps
movsb
lds
lds
iret
ficompl
fucomi
pop
popa
mov
xchg
int
or
fstpl
test
mov
sbb
adc
adc
sbb
adc
xchg
fidivs
inc
clc
enter
and
mov
cltd
testb
cwtl
in
inc
or
jmp
xchg
pop
or
mov
out
fmuls
dec
enter
addr16
inc
xorl
mov
stos
aad
and
jg
mov
sbb
add
shl
dec
aad
js
pop
mov
or
jg
pop
idivb
pop
cmp
mov
or
or
pop
lds
movsb
out
imul
enter
push
popa
cwtl
fwait
insb
dec
shlb
sub
mov
mov
enter
bound
call
and
push
xchg
inc
cmp
mov
or
enter
jne
dec
or
movsl
xor
xchg
flds
pop
test
in
push
fdiv
fnstsw
xchg
dec
pop
push
cmp
fmull
jno
jp
inc
xchg
retw
xchg
movsl
inc
or
push
sbb
mov
push
xchg
xor
cmp
out
and
cmp
xchg
repnz
cmp
add
inc
dec
imulb
stos
jns
or
pop
loopne
inc
push
insb
sub
mov
or
mov
push
mov
jg
dec
or
mov
clc
repnz
and
xlat
testl
aad
test
dec
push
mov
imul
in
cli
mov
test
lcall
push
pop
cs
lcall
dec
test
xchg
cmp
stos
ds
and
dec
jo
clc
sbb
sbb
stos
dec
pop
mov
lcall
xchg
ret
insb
into
xchg
idiv
idivb
pushf
sbb
mov
addr16
enter
lcall
subb
cmp
and
mov
popa
sbb
shlb
in
mov
xchg
movsl
dec
dec
fwait
mov
imul
xorl
mov
cltd
xchg
addr16
xchg
and
pop
mov
cmp
pop
sbb
test
lahf
inc
mov
repz
adcl
cwtl
dec
lds
aad
in
sub
push
mov
leave
ljmp
mov
call
js
addr16
movsl
pop
imul
adc
add
inc
cmc
in
icebp
add
ss
sbb
stos
mov
clc
cli
jecxz
xchg
dec
or
and
or
lret
cmp
sbb
sub
das
out
lcall
es
jbe
dec
ficompl
cmp
and
sub
sbb
in
push
add
lea
cmp
test
pop
push
lds
stc
or
or
hlt
daa
clc
in
hlt
out
xor
xor
cmp
or
insb
aaa
mov
js
lea
xlat
mov
inc
movsb
fmuls
mov
popf
mov
dec
or
xchg
test
adc
sbb
fcmovu
jge
lea
aaa
push
dec
sbb
into
out
push
enter
std
adc
push
xchg
dec
inc
cmc
aad
stos
inc
cwtl
imul
ljmp
xlat
pop
lret
ljmp
stos
push
stc
add
scas
add
sub
sbb
mov
sub
mov
lcall
and
pop
addl
in
rol
dec
add
sbbl
dec
xchg
add
out
mov
inc
mov
cwtl
mov
js
ljmp
rorl
lds
daa
push
leave
or
or
scas
fisttpl
xchg
stos
divb
mov
aad
movsb
out
sbb
sub
clc
cmp
insb
xchg
cmp
call
mov
push
adc
out
aas
push
xchg
call
inc
dec
and
push
mov
xlat
mov
pop
dec
sub
add
dec
xchg
jbe
int3
sti
cmp
xor
xor
xlat
pop
pop
and
popa
or
push
insb
add
bound
add
leave
ljmp
mov
cmp
jbe
jns
rcr
in
cmpsb
mov
std
cltd
pop
imull
stos
and
idivb
in
pop
hlt
in
cmp
andb
push
dec
xchg
sbb
fmull
pop
mov
xor
cmpsb
cmp
fcoms
push
xor
stos
xlat
hlt
aad
aam
or
popf
dec
cmp
mov
sbb
fxch
sub
in
fcomps
jbe
call
xorb
push
aad
mov
out
cmpsb
fisubrl
xchg
pop
lcall
adc
pop
into
daa
testb
or
mov
jg
cwtl
sbb
or
mov
leave
aam
fstl
scas
addr16
ror
cwtl
sub
jp
xor
sbb
xchg
or
mov
sbb
das
cmp
in
or
jo
sub
enter
cwtl
in
ror
and
mov
dec
aad
stos
imul
inc
ss
out
sbb
call
and
cmp
xchg
mov
add
cmp
dec
or
mov
cmp
or
gs
in
imul
arpl
pusha
addb
cmp
cwtl
mov
or
xchg
xor
mov
xlat
adc
xchg
movsb
sub
lds
mov
sbb
out
sub
in
and
loope
pop
stos
lcall
ret
adc
aaa
cmp
lret
pop
inc
pop
addr16
imulb
or
clc
std
pop
imul
out
pop
or
mov
testl
mov
or
dec
clc
sbb
dec
int
movsb
pop
enter
mov
cltd
pusha
ljmp
clc
popf
frstor
pop
xchg
shll
or
rorb
push
out
je
enter
pop
pop
js
cmc
ror
lea
xlat
lds
pop
lret
cli
xor
movsb
movb
daa
sbb
addl
add
pop
xlat
xchg
enter
pop
xchg
inc
or
mov
stos
xchg
js
mov
leave
ret
adc
lds
cmp
dec
mov
aad
xor
push
enter
cli
xchg
and
movsb
cmc
adc
idivl
adc
or
cli
sub
dec
dec
insl
shrl
mov
mov
mov
sbb
push
fcomps
push
add
or
aad
and
fidivrl
stos
cmc
xor
repnz
xlat
push
testl
or
dec
loope
sbb
sub
or
ljmp
and
mov
cmp
pop
out
or
out
js
xchg
aad
dec
xchg
cmc
enter
add
je
call
xchg
movsl
mov
xor
mov
insb
dec
aaa
mov
mov
shl
add
fcomps
jbe
popf
or
lcall
xor
dec
pop
jbe
ret
aad
mov
xchg
add
cmc
js
jne
mov
jne
into
sub
dec
testl
loopne
adc
pop
std
loope
stc
hlt
mov
test
or
ljmp
xor
lahf
popf
arpl
ret
lret
stos
popa
mov
and
jmp
xor
xor
adc
sub
xor
xchg
push
xchg
iret
int3
call
js
lret
cmp
and
xchg
loope
cmp
rolb
mov
mov
pop
adc
or
sub
fsubrs
xor
or
xchg
inc
jbe
test
daa
push
imul
pop
mov
loopne
jg
xchg
mov
xchg
imul
xchg
mov
xchg
subl
inc
jmp
pop
mov
test
inc
push
sub
fcom
inc
xorb
push
mov
inc
ret
adc
test
int3
ret
mov
mov
mov
lret
mov
sbb
je
sub
sbb
out
ljmp
mov
imul
sub
sbb
test
xlat
dec
or
push
cmp
enter
dec
xchg
mov
cmp
adc
or
out
imul
scas
push
js
stc
pop
out
push
cltd
leave
sub
adc
bound
shlb
sub
xlat
and
or
or
pop
xchg
les
pop
or
outsb
loope
xchg
testl
sbbl
mov
cmp
dec
aaa
idivl
xchg
jp
in
or
fidivl
sub
popf
scas
or
mov
push
cwtl
sbb
lods
sub
sub
adc
xchg
rolb
mov
aaa
cmc
mov
pop
dec
sub
sbb
mov
xor
lcall
adc
sbb
enter
mov
xchg
jmp
ljmp
pop
adc
xchg
les
pop
inc
adc
daa
ljmp
add
add
xchg
in
sbb
enter
sahf
call
add
call
lcall
les
or
push
out
sbb
aad
mov
lock
or
out
cmp
sarb
lcall
and
dec
add
negb
and
loope
lret
idivl
out
jbe
pop
cli
fimull
in
in
xlat
cmp
pop
cltd
out
xchg
lret
dec
repnz
repz
dec
cmp
js
cmp
mov
popf
inc
test
iret
or
xchg
fdivr
mov
gs
mov
inc
jbe
mov
and
ret
idiv
push
out
sbb
add
pop
lcall
add
cli
push
xchg
imul
sbb
or
xchg
out
push
ret
push
lds
push
mov
or
mov
aaa
js
pop
mov
hlt
lret
fsts
mov
inc
cli
stos
mov
mov
je
call
std
adc
lods
pop
jbe
mov
in
je
xchg
cltd
fnstsw
and
mov
dec
inc
or
pop
dec
enter
dec
xchg
je
imul
mov
ss
pop
mov
shll
lea
mov
jne
lcall
leave
icebp
lds
cwtl
or
lret
adc
pop
enter
add
add
push
adc
test
in
sbb
xchg
pop
cmp
cmp
hlt
mov
or
loope
sub
hlt
cmp
adc
or
sbb
leave
int3
stos
mov
or
or
cmp
iret
jbe
cmpb
sub
xchg
add
scas
jp
or
or
loope
in
sbb
cmp
xchg
ja
int
lea
imul
loop
imul
cmp
cmp
mov
in
movsl
pop
stos
inc
mov
negb
ljmp
in
jp
push
cmp
sub
std
movsb
out
aaa
push
cmp
inc
imul
and
mov
mov
cmp
xchg
fsubrs
rcll
lret
daa
pop
es
inc
sub
in
cmp
out
loope
aad
out
xchg
xlat
dec
aam
roll
mov
stos
cmp
test
and
sbb
dec
rcrl
xchg
pop
mov
xchg
or
out
push
out
sti
loope
divl
imul
push
mov
pop
mov
adc
inc
fistps
mov
or
xchg
lds
adc
aaa
and
xor
adc
and
dec
stos
je
sbb
xchg
pop
in
test
or
mov
cmp
dec
adc
sbb
mov
mov
sub
scas
rorl
mov
imul
arpl
or
add
in
mov
jne
sub
sbb
popf
clc
cli
orl
or
or
xchg
adc
stos
cli
and
in
mov
popf
daa
shlb
dec
push
cmc
xchg
insl
xchg
push
xchg
ss
xchg
inc
sar
xchg
dec
iret
xchg
dec
inc
pop
enter
andl
xchg
xlat
cmp
cmp
cwtl
adc
mull
imul
cmc
and
stos
jae
ljmp
push
xchg
push
fiaddl
cmpsl
lcall
jmp
movsl
cmp
lods
sbb
add
push
xchg
push
xchg
nop
xchg
cmp
or
mov
ss
sbb
addr16
sub
inc
mov
shrl
stc
in
or
fwait
test
imul
cmp
ret
cmp
in
mov
mov
adc
push
ret
in
out
mov
or
fdivl
jbe
adc
add
pop
stos
or
test
dec
je
imul
call
xor
push
mov
mov
or
out
sbb
cmp
leave
dec
ficoml
mov
mov
loopne
out
out
adc
movsb
test
xor
fsubl
jne
gs
test
aad
sbb
jo
mov
fs
push
lds
cli
inc
mov
add
pop
sbb
movsb
ss
lea
rorb
out
sub
jp
cmp
fisubrl
push
sub
jne
jno
xor
mov
in
mov
cmp
mov
repnz
jmp
xor
xchg
negb
push
pop
bound
in
lcall
xchg
lock
sbb
lret
pop
pop
cwtl
and
pop
push
enter
cmp
xchg
sbb
sbb
pop
cli
lods
imul
sub
xchg
inc
push
xchg
enter
or
cli
inc
dec
sub
dec
mov
dec
mov
lods
loope
or
test
fwait
jno
enter
mov
or
jnp
add
jbe
mov
mov
mov
dec
lds
mov
dec
adc
mov
rcl
cltd
push
cmp
jp
loop
fisubl
rcrb
mov
xor
sbb
xor
xchg
jg
xor
push
xchg
push
leave
dec
rcr
xor
fcmovb
xchg
dec
mov
cmp
xchg
daa
mov
xchg
sbb
cmp
mov
xchg
dec
xor
or
out
aas
add
add
out
and
jmp
xchg
dec
ficompl
cmp
xchg
xlat
xchg
sbb
and
sbb
adc
xchg
cmp
in
inc
adc
inc
cli
scas
mov
in
lret
test
testl
xchg
mov
scas
or
and
jbe
cmp
sbb
ror
mov
and
cmp
sbb
sub
mov
pop
sbb
in
stc
out
or
pop
mov
dec
mov
mov
pop
or
and
mov
xchg
cld
xchg
movsb
xchg
xchg
sbb
cmc
enter
cmp
addr16
imul
hlt
je
insl
aaa
bound
stos
sahf
pop
loope
or
sub
push
xchg
testb
enter
icebp
mov
lret
incl
inc
or
xchg
mov
and
jecxz
cmp
lret
negl
sub
sub
outsb
js
outsb
push
fnstenv
fdivrs
cmp
cli
add
jmp
adc
fs
sahf
xchg
mov
mov
pop
mov
xor
subb
cmp
cs
mulb
cmpsb
lcall
cwtl
xchg
push
movsl
lcall
pop
mov
mov
add
or
xchg
dec
sub
out
push
fdivs
mov
pop
mov
mov
mov
jp
dec
sub
xchg
or
shlb
dec
std
adc
iret
aaa
xor
mov
sub
or
test
or
or
push
out
xchg
inc
test
aad
pop
inc
mov
and
xchg
add
sub
lret
push
adc
mov
stc
js
call
cli
pop
test
pop
cmc
mov
add
fiaddl
loop
adc
pop
cmpsb
or
pop
and
mov
cli
dec
js
and
push
mov
adc
lret
stos
in
daa
jno
lea
imulb
adcb
push
pop
or
add
sti
inc
daa
adc
dec
pushf
ja
lea
add
inc
in
icebp
movsb
xchg
xor
fcoml
mov
test
mov
fsubs
sub
cli
mov
call
cmp
mov
ljmp
in
je
sub
enter
lret
xchg
cmp
imul
xchg
ljmp
sbb
cmp
clc
loope
push
xchg
xor
lret
fdivs
add
ret
dec
or
add
or
mov
pop
xchg
pop
js
and
daa
and
test
fwait
mov
jns
mov
ror
loopne
ljmp
cltd
into
xchg
scas
inc
jne
addb
mov
jmp
addb
lock
cltd
hlt
xor
insl
mov
scas
mov
test
dec
dec
sub
dec
adc
out
cmp
out
sbb
xchg
sbb
mov
mov
pop
sub
js
enter
cmc
mov
mov
divl
out
add
xchg
callw
push
xchg
sub
jbe
in
lret
inc
push
roll
aad
add
loop
out
xchg
adc
aaa
idivb
xchg
jns
jg
dec
or
xchg
xchg
mov
sub
mov
mov
cmpsl
es
cmp
flds
cltd
xchg
pop
stos
xchg
fimull
adc
daa
mov
xchg
jbe
add
xchg
or
lcall
sbb
cmp
or
xor
sub
adc
movsb
sub
xchg
das
adc
mov
pop
mov
cmp
clc
shll
mov
pop
stc
lcall
int3
add
pop
sub
or
mov
cmp
push
xor
lcall
lock
leave
mov
pop
xor
dec
fsub
das
sbb
clc
xchg
jbe
lods
mov
and
popa
or
or
sbb
test
imul
jg
lret
xor
fmuls
cmp
cs
mov
hlt
imul
out
test
lcall
pop
or
pop
es
rorl
popf
loop
cmp
jnp
in
pop
xchg
ljmp
inc
mov
mov
pop
mov
in
in
xchg
sbb
sbb
jg
dec
xchg
in
addr16
mov
dec
jp
dec
jae
flds
lret
rol
movsb
mov
daa
pop
inc
sbb
les
imul
je
outsl
jnp
pushl
or
cmp
mov
fwait
jl
inc
sub
pop
out
out
push
daa
js
adc
cmpsl
fldl
repnz
fcmovb
cs
jmp
pop
or
sub
pop
test
aaa
sub
stos
fmuls
lods
mov
xor
addr16
in
or
and
pop
popa
enter
mov
inc
sub
sbb
test
or
cwtl
mov
sti
lea
cmp
push
pop
in
out
daa
pop
popf
jg
data16
mov
sbb
xchg
adc
mov
sub
xor
jbe
add
adc
and
daa
cmc
or
out
jb
inc
outsl
adc
mov
loope
cmc
xchg
pop
addr16
dec
add
aad
push
or
xor
xor
dec
mov
js
lret
test
mov
sbb
cmp
movsl
in
jne
xchg
out
xchg
insl
sbbl
lret
inc
sbb
mov
mov
or
ljmp
daa
aad
in
leave
xchg
popf
xchg
xchg
dec
lcall
dec
and
fcmovbe
ljmp
leave
xchg
mov
jb
iret
shlb
xor
cmc
cld
add
stos
in
fists
jmp
shl
pop
std
sub
pusha
xchg
mov
enter
mov
cli
aaa
sbb
fdivrs
inc
stos
add
or
arpl
cli
mov
mov
subb
mov
or
addr16
jp
or
cmp
cmpsb
negl
and
xchg
cmc
enter
rorb
xor
cmc
fidivrl
push
cmpsl
cmp
test
push
jbe
sub
xchg
sub
push
mov
out
lods
adc
int
loope
or
jbe
rorl
sbb
pop
xchg
into
ljmp
or
cmp
or
dec
mov
inc
enter
xchg
daa
jbe
adc
fstpl
mov
xchg
cmp
mov
pop
mov
test
rolb
call
mov
push
andl
inc
js
mov
lahf
test
xchg
or
inc
xchg
push
and
scas
cmpsb
sub
jge
or
push
pop
popa
lret
testb
dec
mov
mov
aad
imul
add
in
xchg
cli
out
xorl
inc
imul
movsb
and
pop
test
mov
xor
imul
adc
pop
dec
dec
loope
add
xchg
mov
xchg
mov
and
out
mov
inc
clc
sub
stos
push
xor
cmp
aaa
push
adc
sub
mov
cmp
sbb
and
out
imul
sub
xchg
in
sbb
fidivrl
mov
ss
out
shrl
loop
mov
mov
mov
cli
push
imul
jbe
fisubl
sbbb
and
mull
cmc
jb
test
xchg
mov
testb
mov
stc
in
pop
sbb
dec
add
and
jp
es
pop
ret
mov
cmp
or
out
jg
push
xor
mov
xchg
jmp
cwtl
call
or
imul
in
pop
ret
enter
fcmovu
mov
mov
bound
test
cli
stos
into
bound
ret
xchg
out
and
aad
adc
mul
fwait
mov
js
cmc
ds
cmp
mov
fcomip
inc
fidivl
or
into
and
test
lret
aaa
hlt
enter
icebp
jbe
xor
cltd
mov
push
jmp
dec
xor
sbb
sub
js
inc
daa
out
xor
fistpll
mov
add
inc
cwtl
push
cld
stos
daa
or
mov
call
mov
or
fstl
xor
mov
mov
rol
lret
and
xchg
xchg
mov
sti
dec
nop
xor
cmp
inc
pop
movsb
test
les
sbb
shll
pop
mov
cmc
daa
in
clc
xchg
pop
cmp
lds
iret
lret
xchg
sti
test
sub
cmp
cwtl
mov
negb
imull
ret
sub
cmp
adc
addr16
jae
ret
test
sbb
or
inc
out
cmp
or
push
adc
aad
scas
jo
enter
adc
jp
jne
in
std
leave
cld
cwtl
lret
sub
js
shll
mov
xor
mov
adc
testb
or
faddl
xchg
je
adc
sbb
decl
iret
xchg
mov
stos
mov
cmp
sbb
cmpsb
cwtl
xchg
imul
adc
sub
inc
icebp
dec
fsubrs
or
xor
or
cmc
out
test
push
pusha
daa
mov
jno
pop
mov
scas
push
adc
call
dec
and
xchg
clc
xchg
cmp
mull
shll
lcall
stos
xchg
cli
or
pop
in
lret
insb
xchg
pop
xor
aad
in
and
shr
sub
fcoml
push
sti
cmp
xor
lahf
and
xor
ret
out
outsl
sub
xchg
xlat
xchg
stos
xchg
dec
hlt
ljmp
inc
movsb
or
mov
js
mov
sbb
fwait
je
movl
pop
mov
pop
xor
jge
stos
js
mov
shrl
pop
sub
sub
mov
cmp
pop
enter
xor
xchg
sbb
xchg
pop
mov
cmp
clc
leave
push
add
mul
mov
mov
lret
fwait
repnz
xor
stos
loop
xchg
iret
clc
inc
pop
loope
sub
pop
lcall
push
push
xchg
mov
xchg
adc
sbb
sub
dec
push
xor
jmp
mov
mov
aad
dec
dec
jb
pop
es
lret
inc
sbb
adc
lcall
sub
cmpsb
aad
adcb
xor
mov
lcall
or
inc
xchg
push
dec
inc
ret
add
mov
or
cmp
cmc
jae
sarb
xchg
sub
daa
in
jb
xchg
cwtl
sbb
dec
sub
cld
mov
pop
sub
out
xlat
mov
fsubp
scas
xchg
mov
mov
popf
repz
sub
ja
pop
test
mov
cmp
dec
mov
dec
je
jp
fdivs
bound
lret
dec
negl
adc
test
sub
enter
mov
mov
cmp
mov
movsb
dec
aaa
out
jg
jbe
dec
mov
xchg
ret
neg
ljmp
lahf
insb
stos
movb
sbb
jbe
mov
fdivrs
dec
cli
xor
mov
pop
in
in
mov
lahf
in
imull
mov
dec
dec
lds
add
mov
add
aad
jecxz
lea
mov
xor
mov
push
cltd
ljmp
test
adc
clc
xorb
daa
xlat
outsb
cmc
fidivl
or
pop
jecxz
jmp
xchg
les
cmpsb
fisubl
add
jg
mov
daa
cmp
cmp
pop
xchg
shlb
cmp
push
pop
or
loope
or
imul
sub
mov
ljmp
jl
mov
mov
cmp
jp
ds
lcall
stos
and
daa
adc
sbb
add
xchg
xchg
pop
clc
sub
imul
adc
inc
sub
jne
xchg
stos
push
dec
mov
lods
cmp
mov
mov
fcomi
test
ret
mov
mov
sbb
pop
int
cmp
aam
ror
sbb
sub
mov
jp
adc
mov
add
movsl
in
hlt
fs
xchg
call
dec
fidivrl
js
cwtl
xchg
jmp
xor
xor
cmp
sub
iret
mov
stos
inc
je
sbb
negl
js
aaa
adc
or
out
dec
mov
push
jmp
add
je
jbe
push
mov
in
cmp
xchg
jge
and
xor
imul
not
dec
stc
orl
lret
lcall
out
jg
stos
sub
or
pop
js
pop
pop
xchg
test
xchg
cwtl
lcall
push
cmp
daa
leave
pop
js
int
cltd
icebp
sbb
xchg
hlt
cwtl
dec
or
xchg
in
mov
cmp
inc
out
mov
cmp
ret
ljmp
lods
add
xor
ret
pop
insb
out
jne
fcoms
sbb
cmc
mov
mov
mov
js
in
adcl
mov
pop
cmp
aad
sbb
call
cmp
enter
mov
and
mov
stos
xor
xor
adc
in
jbe
lea
mov
popa
pop
or
adc
xchg
cwtl
or
in
jp
xchg
lret
sbb
mov
pop
in
adc
test
daa
leave
jno
pop
lds
sub
jecxz
cwtl
cli
test
aaa
or
push
or
cmc
adc
lods
cli
xlat
fdivp
mov
mov
ds
jge
xchg
lds
sbb
mov
popa
xchg
xor
mov
mov
mov
sbb
push
push
cli
adc
ljmp
pop
add
in
inc
mov
cmp
imul
xchg
mov
dec
cmp
push
mov
jg
or
dec
xchg
imul
sysenter
pop
dec
pop
mov
insl
cwtl
fstpl
ror
sbb
and
mov
rcll
ror
cmp
pop
xlat
aad
mov
sub
subl
out
fisttpll
push
shlb
pop
mov
mov
cmp
cli
jp
mov
call
mov
outsb
test
fiaddl
clc
ss
repz
or
es
xchg
cwtl
or
mov
fs
push
int
mov
in
mov
cmpsb
daa
mov
mov
cltd
addr16
lret
sub
cs
push
mov
in
sub
pop
sub
sbb
inc
push
pop
lret
xchg
out
js
enter
sub
fimull
push
xchg
sbb
daa
pop
test
and
sub
mov
cmp
ficompl
dec
mov
inc
xchg
outsl
lds
dec
movsb
lret
pop
inc
adc
add
mov
fiaddl
cmc
daa
call
mov
out
or
pop
or
out
sbb
stos
mov
xlat
in
mov
clc
cmp
xorb
sbb
mov
cmc
cmpsl
inc
xlat
dec
adc
add
push
mov
aaa
in
or
subb
ret
pop
aaa
ror
push
popf
mov
fistl
mov
cwtl
jbe
adc
cmp
mov
add
cmc
daa
mov
out
imul
stos
pop
pop
cltd
pop
cmc
testb
cmp
dec
loope
fadd
mov
stos
test
mov
xchg
xlat
pop
out
out
mov
pop
les
mov
jbe
mov
daa
mov
ficomps
inc
and
lret
fisttps
lcall
cli
in
jmp
scas
sbb
rcr
jp
pop
xchg
and
filds
std
ds
cli
out
fldenv
cmp
out
lret
out
testl
scas
hlt
inc
rorl
push
sub
fmul
push
push
loop
iret
lret
and
lcall
popf
clc
loop
push
andb
cwtl
mov
lcall
xor
jne
ljmp
test
dec
stos
add
xor
push
push
mov
cmp
push
lret
mov
je
aaa
xchg
mov
pop
addr16
cli
jge
ds
dec
out
shr
clc
std
sbb
mov
push
test
rclb
mov
loop
pushf
xchg
call
mul
dec
loop
jns
rcl
negb
mov
out
test
or
adc
lds
jno
dec
dec
cwtl
xchg
xchg
pop
push
loope
movsb
jp
stos
cmp
cmc
push
enter
in
xor
lds
cli
ret
mov
pop
daa
or
jbe
lret
jp
or
sub
xchg
adc
push
sbbl
movsb
fdivs
lock
cmpb
dec
xchg
pop
xchg
addr16
and
pop
mov
push
mov
xchg
cmp
sub
sbb
lods
xchg
and
mov
mov
pop
adc
cmp
mov
pmullw
jecxz
fimull
fisttps
or
add
or
dec
test
lds
aad
hlt
out
scas
subb
divb
push
aaa
fstpt
cltd
loopne
pop
mov
aad
sbb
lods
mov
aam
inc
or
or
and
inc
sub
je
jp
or
in
sub
lds
xchg
cmp
hlt
fidivl
aad
add
xchg
sbb
testb
push
pop
cmp
sbb
in
ljmp
or
out
and
pop
stos
pop
inc
adc
adc
jns
es
pop
into
in
and
or
adc
push
scas
loopne
ret
cwtl
clc
clc
in
ror
dec
aaa
xor
mov
fdivs
repnz
cmp
jnp
fildll
cli
stos
rcr
push
mov
out
sbb
imul
dec
out
testb
mov
xchg
js
cmp
sbb
xor
cli
or
andl
mov
test
push
pop
dec
fsts
leave
or
xchg
arpl
jp
or
mov
mov
insl
xchg
pop
add
test
ljmp
inc
fiaddl
or
leave
popa
xchg
popf
out
div
adcb
inc
testb
mov
inc
addr16
js
shlb
mov
mov
mov
call
or
xor
jbe
inc
sub
xor
aad
sbb
in
adc
aaa
inc
je
pop
mov
in
mov
mov
cwtl
xchg
test
mov
xchg
mov
imul
mov
jb
cmp
jmp
in
subb
sbb
or
cmp
frstor
lret
les
xchg
lea
xor
or
dec
inc
cmpsb
aad
push
and
xchg
pop
xchg
and
cmc
cli
adc
pop
frstor
test
test
ret
int
inc
mov
cwtl
adc
enter
jge
imul
mov
mov
fldenv
xor
mov
adc
mul
adc
in
sub
xchg
pop
insl
add
and
xlat
xchg
sbb
cmp
testl
notb
mov
lock
nop
mov
mov
out
daa
or
pop
pop
mov
sub
cmpl
mov
call
lcall
xchg
mov
or
ljmp
jns
xlat
mov
shl
and
xchg
cltd
sbb
mov
in
mov
cltd
mov
add
xchg
sub
mov
movsb
dec
cwtl
cmp
sbbb
sbb
imul
ljmp
cmp
repnz
test
add
lcall
ret
sbb
lcall
hlt
or
jbe
cli
sti
imul
cmp
cmp
cmp
ret
imul
fidivrl
sbb
jbe
push
xchg
ja
mov
mov
andl
push
and
hlt
xchg
loope
cmc
daa
pop
aaa
popf
in
cwtl
stc
ret
cmp
mov
ljmp
xchg
add
xor
xchg
cmp
dec
mov
in
mov
jecxz
xor
adc
dec
mov
in
push
aaa
jp
cmp
ljmp
dec
sub
clc
fs
xchg
outsb
and
or
mov
mov
adc
fnstcw
into
je
mov
fs
fidivl
sbb
push
xchg
dec
sbb
idivb
mov
enter
dec
jg
sub
pop
inc
or
dec
adc
xor
mov
xchg
daa
loope
enter
mov
mov
ret
roll
notb
fbld
sub
lds
insb
mov
fimull
es
mov
push
mov
addl
mov
sub
sub
cmp
addr16
ret
scas
mov
pop
mov
or
ret
push
cmp
jecxz
orb
push
sbb
es
cmpl
imul
stos
mov
xchg
clc
test
xchg
imul
movsb
pop
lret
add
clc
mov
inc
sbb
mov
sub
arpl
or
dec
dec
movsb
aam
cwtl
sbb
dec
dec
lds
jns
adc
or
xor
sub
sbb
pop
xchg
and
cmp
inc
ja
push
fwait
mov
mov
add
xchg
adc
or
lret
jnp
inc
sub
mov
aaa
es
cmc
fmul
fwait
pop
sbb
lds
push
aaa
dec
dec
push
xchg
aad
mov
push
dec
loope
addl
dec
pop
lds
dec
sbb
push
xchg
cltd
into
aad
jecxz
mov
or
ret
pop
js
xor
xchg
add
jp
in
test
lds
mov
sub
sub
mov
dec
pop
dec
ljmp
les
je
cmp
sub
pop
xchg
push
fadd
mov
scas
fs
enter
pop
jbe
enter
out
mov
orl
cmp
in
or
jecxz
clc
stos
jl
shrl
mov
lcall
or
scas
stos
imul
adc
imul
testl
lret
mov
lds
lcall
ljmp
stc
sbb
xchg
in
nop
daa
mov
sub
ljmp
mov
push
out
stos
aaa
lcall
jp
sahf
jae
test
cmp
fwait
daa
mov
ds
shll
and
fwait
sub
mov
test
cmp
psllw
test
inc
lods
aad
mov
sbb
mov
addr16
jecxz
xchg
mov
sbb
cmp
out
pop
aaa
ljmp
pop
test
cwtl
fadd
dec
pop
mov
dec
adc
mov
je
mov
sub
cmc
mov
pop
xor
xchg
jb
xor
pop
out
mov
cmp
xchg
dec
addr16
popa
mov
pop
jle
aaa
sbb
daa
aas
and
dec
pop
xor
xchg
adc
ljmp
or
and
shrl
dec
mov
movsb
pop
mov
daa
out
mov
add
inc
mov
mov
push
stos
or
add
xor
xabort
dec
cmp
cwtl
daa
xchg
jns
pop
lea
and
fs
sbb
push
fsubs
mov
popa
mov
sbb
jp
movsb
out
daa
clc
push
and
mov
and
xchg
ret
int
cltd
push
mov
xor
sbb
lahf
cli
cli
movb
and
pop
call
lea
pop
dec
in
add
xchg
mov
cmp
and
xchg
and
sub
mov
mov
or
js
or
or
xor
mov
pop
inc
lds
xchg
xchg
add
sti
xchg
mov
cltd
repnz
xchg
subb
mov
cmp
sti
or
lcall
orl
cmp
cmpsb
mov
daa
mov
add
xchg
lcall
mov
sub
cmp
or
call
adc
pop
jmp
adc
adc
dec
add
in
adc
mov
mov
pop
pop
test
mov
stos
add
lods
out
xchg
cmp
dec
cmp
push
push
pop
inc
in
and
sbb
out
xchg
loope
adc
and
xchg
or
pop
xchg
jns
es
in
test
xchg
jle
cwtl
hlt
dec
adc
sbb
jl
cltd
aaa
rcll
push
out
or
adc
dec
pop
stos
and
pop
xlat
ljmp
std
adc
jbe
in
mov
sbb
lcall
jecxz
scas
xor
ror
cmp
leave
lods
add
mov
loopne
test
mov
scas
repnz
jmp
push
loopne
cmpsb
sub
or
mov
push
shrl
mov
mov
std
cmc
int
and
test
aad
adc
out
pop
sbb
out
and
or
testl
dec
xchg
xor
fucom
cltd
sbb
adc
inc
sbb
sub
addr16
add
int3
imul
mov
xor
jp
sahf
mov
dec
mov
jns
mov
pop
scas
call
or
shll
add
aad
jge
pop
pop
or
mov
inc
xchg
mov
imul
xchg
cli
push
movsb
dec
fdivrs
lret
loopne
adc
enter
test
daa
mov
and
xchg
dec
fidivrs
out
mov
clc
mov
cmp
jmp
mov
lcall
mov
dec
mov
cmc
sub
xor
lcall
push
add
fbstp
lds
imul
inc
dec
ljmp
test
ljmp
or
mov
aaa
out
or
in
adc
cmp
lcall
sbb
ljmp
cmp
pop
xchg
testl
mov
mov
loope
cli
stos
addr16
xchg
pop
int
sub
sub
and
or
addr16
and
xor
xchg
aad
cwtl
or
mov
clc
cmp
mov
fwait
inc
dec
push
addr16
loop
popf
ss
xor
mov
dec
push
idiv
mov
cli
mov
ret
or
jnp
mov
jg
pop
sub
xlat
cmp
icebp
mov
pop
sbb
cmp
negl
test
cmp
or
stc
push
sbb
lcall
mov
jns
repnz
sub
ljmp
lret
xchg
gs
in
shrl
popf
lahf
xlat
jbe
popa
scas
stc
add
fstl
ss
or
int
sub
in
dec
xchg
mov
sbb
pop
ljmp
dec
imul
pop
mov
sar
mov
pop
aad
cmp
lods
stc
sbb
scas
mov
aad
cmp
dec
lcall
movl
ret
jmp
push
movsl
jne
lods
xlat
inc
mov
mov
mov
or
loop
adc
cmc
xchg
inc
xlat
dec
leave
and
stos
les
jp
testl
mov
in
hlt
pop
test
mov
or
and
xor
mov
outsb
xlat
inc
cmp
dec
sbb
rcrb
xchg
imulb
lcall
cmpsl
mov
int3
xor
sarl
insl
call
fists
or
adc
imul
negb
clc
fidivrl
mov
and
cmp
scas
push
sbb
or
push
imul
ss
mov
mov
mov
ljmp
sbb
fcmovu
rorl
mov
and
lds
stc
add
mov
pop
sbb
insb
mov
add
cmp
adc
sub
leave
cmpl
sub
sub
imul
dec
aad
or
dec
mov
push
sbb
daa
cmp
mov
xchg
xchg
lcall
mov
aad
out
and
es
or
out
sbb
mov
pop
xchg
xchg
cmpsl
mov
sbb
push
pop
imul
sub
sbb
popf
jp
xchg
mov
push
pop
out
mov
out
and
cmpsb
mov
cmp
jecxz
mov
and
and
xchg
inc
movsl
nop
es
mov
lahf
jecxz
imul
mov
dec
mov
rcrl
xor
int3
in
fisttpll
cmp
ljmp
cs
add
cli
adc
push
ljmp
push
jg
cli
imul
mov
push
dec
out
cmp
cld
cwtl
xchg
mov
xlat
pop
or
mov
js
mov
and
add
sarb
clc
xor
enter
pop
clc
call
in
loope
xchg
dec
lea
or
pop
lds
xor
lret
rcrl
jp
int
in
mov
xchg
int
leave
sbb
sarb
mov
loope
ljmp
xchg
jbe
loop
inc
lret
clc
mov
mov
mov
mov
lods
mov
sub
popa
les
push
aaa
jg
jmp
dec
js
cmp
cmp
xchg
mov
mov
daa
or
push
mov
push
xchg
test
lea
cmp
and
mov
ds
sub
mov
cmc
sub
imul
or
enter
jp
xorb
jbe
lods
test
sub
jo
sbb
icebp
sti
out
push
dec
fiadds
jae
xchg
xchg
fwait
mov
xchg
dec
cmp
mov
imul
jge
dec
adc
dec
flds
call
cmpsb
lcall
ljmp
jg
mov
mov
ret
addr16
lcall
adc
lcall
mov
and
cs
sub
inc
xor
xor
pop
mov
fnstcw
cmp
jp
xchg
pop
adc
popf
xor
xor
dec
in
push
daa
inc
aad
hlt
xor
int
mov
add
adc
and
xchg
jne
dec
clc
jmp
daa
mov
jmp
cmp
ljmp
mov
sub
fcoms
mov
scas
addr16
dec
orl
addr16
sbb
fistpll
push
jno
mov
xor
xor
and
inc
cmc
xlat
in
dec
pop
jp
fsubrs
pop
mov
outsl
mov
pop
daa
mov
rolb
cwtl
xchg
inc
cld
lret
mov
addb
mov
mov
iret
test
jmp
mov
pop
pop
popa
in
push
jecxz
pusha
mov
dec
daa
lcall
cld
jecxz
jmp
lret
cwtl
fsubr
fistpll
push
std
imul
out
jae
and
lret
cli
xlat
sub
test
cmp
fstpl
jl
std
dec
lahf
arpl
xchg
rcrl
mov
jb
ret
cli
or
addr16
pop
jbe
xchg
adc
xchg
lret
mov
xchg
adc
adcl
fimull
jp
enter
sbb
rorl
mov
test
mov
divl
sbb
add
push
lret
je
xor
pop
int3
fstpl
dec
aaa
stc
lahf
pop
cwtl
mov
call
pop
xchg
mov
adc
xchg
aad
pop
stc
add
fwait
xchg
cli
in
daa
std
add
dec
sbb
or
in
dec
cmp
xchg
cmc
adc
inc
aaa
test
ljmp
and
push
add
clc
movsl
push
movsl
xor
mov
jbe
xchg
dec
lret
xchg
push
dec
xchg
pop
jbe
ja
push
or
sbb
xchg
inc
add
lea
jmp
xchg
jnp
dec
jmp
pop
xchg
cltd
xchg
xchg
mov
xor
aaa
xchg
shl
sbb
in
dec
mov
sub
dec
call
dec
mov
adc
js
and
jp
add
xlat
push
lcall
fnstcw
push
add
jge
daa
xlat
pop
mov
cli
adc
or
sbb
cmp
cmpsb
divb
push
out
stc
pop
loop
insb
outsl
pop
xor
movl
fisubrl
push
jb
mov
inc
xchg
push
in
js
mov
mov
sub
ljmp
adc
loope
sub
popf
inc
fdivs
jmp
cmc
lods
popa
sbb
push
lret
rcr
fs
out
or
jbe
cmp
dec
lcall
out
mov
shrl
fs
jge
lock
je
or
int
mov
adc
pop
lea
mov
xchg
add
rorb
fsubrs
bound
iret
inc
out
mov
in
sub
test
insl
dec
cmp
push
sub
and
pop
pop
cmc
or
stc
sbb
loop
loopne
daa
cwtl
pop
add
adc
ficoml
mov
mov
rorb
xchg
dec
add
in
fmuls
stos
dec
xor
enter
pop
in
cmpsl
mov
push
mov
cmp
xorb
xor
xor
jbe
lcall
cmc
or
xor
aaa
cmp
es
test
or
out
adc
xchg
adc
loop
mov
cld
jle
cmp
jp
cmpl
js
jmp
imulb
xor
dec
mov
andl
mov
cmpsb
sbb
sub
adc
out
cmc
movsl
jbe
arpl
test
je
fsubrs
push
stos
int
cmp
dec
movsl
mov
popa
add
std
mov
idiv
mov
or
out
sbb
add
cmp
sub
mov
mov
sub
pushf
es
mov
lcall
mov
xchg
sbb
shl
mov
sbb
shlb
out
and
mov
movsl
loope
push
sbb
subl
testl
cmp
jmp
out
ret
ljmp
or
clc
js
sub
js
shr
mov
daa
pop
loope
xlat
cmp
out
jecxz
popf
sub
lahf
aaa
lea
aad
enter
or
rcl
sub
stos
das
mov
loope
pop
xchg
divl
or
sub
js
inc
jmp
sub
add
ljmp
fcmove
les
push
sbb
cwtl
cli
mov
sub
mov
subl
insl
fmuls
xchg
cmp
movb
lret
xor
testl
sub
ss
sub
cwtl
imul
mov
mov
out
jae
jp
add
xchg
mov
jg
clc
adc
or
inc
xchg
mov
popa
orb
shlb
xlat
aad
mov
cmc
pop
jmp
pop
xorb
xor
stos
mov
in
aad
xor
cmc
cmp
mov
ljmp
jmp
adc
je
mul
and
loopne
xchg
dec
jp
cmp
dec
mov
jge
es
ret
hlt
xor
daa
mov
loope
dec
fadds
mov
idivl
jo
mov
out
lcall
sti
divl
sbb
test
push
xchg
mov
loop
out
mov
jmp
daa
mov
hlt
mov
les
cli
sbb
vfrczpd
or
and
xchg
fldenv
pop
dec
lcall
repz
push
inc
aaa
mov
sub
or
mov
xchg
push
ret
push
es
xchg
sub
cli
aaa
add
mov
and
inc
xchg
cmpb
add
out
cmp
lret
sub
mov
sbb
sub
sbb
addb
jmp
and
push
popf
pop
imul
stos
or
or
mov
push
xchg
mov
pop
or
cwtl
aaa
jae
pop
sub
dec
or
inc
sub
adc
lock
add
add
xchg
dec
mov
mov
sub
aad
lcall
pop
mov
in
pop
std
xor
lods
adc
loop
inc
cmp
dec
fisttpll
test
xor
enter
pop
stc
mov
push
sbb
push
dec
xor
jecxz
pop
idivl
call
pop
xor
or
add
jb
pop
mov
sub
jl
shlb
or
aaa
imul
lret
std
push
clc
cmp
sbb
xor
or
cmp
fiaddl
lcall
pop
cmp
lret
xchg
jmp
or
push
push
adc
test
les
sbb
arpl
xor
mov
dec
addr16
mov
aas
lret
scas
imul
jg
cli
addr16
pop
dec
clc
gs
mov
xchg
jno
mov
mov
mov
dec
je
xlat
sbb
enter
clc
lds
mov
add
fmuls
bound
mov
mov
in
mov
mov
orl
icebp
imulb
daa
test
add
in
leave
out
pop
into
jns
lcall
imul
jne
cmp
xor
cwtl
ret
and
ret
or
ljmp
rcrl
cmp
adc
mov
sub
lret
in
loopne
shrl
js
insl
in
fistpl
lea
out
pop
insl
cmp
or
imul
lds
cmovo
xor
sbb
sbbl
stos
push
daa
xchg
add
adc
insl
in
les
mov
js
in
adc
cmp
movsb
mov
xor
imul
cltd
jbe
jg
lcall
cwtl
sub
test
inc
lcall
ret
test
cs
or
rolb
test
loop
cmp
xchg
sbb
lret
pop
or
push
cli
jl
dec
orl
dec
jb
rcr
cli
in
jo
pop
in
pop
xor
testb
cmp
add
xor
imul
cmp
mov
je
push
push
adc
orb
and
sbb
pop
sub
adc
enter
and
xor
mov
fisubrl
pop
and
cmp
adc
or
mov
jne
pop
add
cmp
addr16
enterw
xchg
xchg
ret
sbb
out
stos
sub
hlt
call
pop
mov
js
mov
mov
cmpl
sub
out
ljmp
in
mov
or
cmp
fisttps
mov
movsl
mov
xlat
and
sub
cli
fmuls
jbe
pop
js
lods
add
ljmp
dec
cmp
or
test
jbe
fcoms
addr16
jns
enter
enter
loope
fisttps
call
mov
leave
mov
fidivl
nop
lods
cmp
jb
out
out
xchg
stc
stos
cmp
xchg
addr16
fistps
dec
in
mov
mov
enter
movsl
xchg
jmp
cmp
cmp
cwtl
jp
pop
xchg
aad
das
xchg
sub
dec
jbe
aaa
lods
js
fwait
mov
mov
cmpsb
mov
lret
cmc
add
cld
sbb
hlt
js
sbbl
or
xchg
sub
cmp
adc
gs
and
lahf
or
idivb
xlat
fldenv
xor
mov
jl
loope
or
ds
adc
xchg
pop
ficompl
push
lock
out
mov
dec
or
xor
cmc
cwtl
xchg
jp
lcall
or
jno
cli
imul
test
add
inc
mov
sbb
fmuls
adc
push
mov
sub
cli
mov
std
mov
and
pop
mov
push
bound
fwait
pusha
loope
clc
xchg
push
fcomps
cld
or
cld
jbe
out
dec
xchg
fidivrl
imul
mov
lcall
pop
ljmp
dec
push
ficoml
mov
cmc
sbb
jne
or
ss
sbb
cmpsl
jmp
xchg
test
cld
addr16
push
in
pop
push
les
aaa
inc
cmp
ret
xchg
repnz
daa
movsl
and
shl
xchg
leave
daa
std
sbb
xor
adc
or
shl
jne
hlt
je
xchg
adc
add
fsub
sub
testl
adc
push
add
lods
jae
xor
out
inc
imul
repz
daa
xchg
lahf
xlat
mov
sbb
cltd
leave
cmp
mov
jecxz
mov
dec
jmp
dec
inc
inc
stos
mov
cmp
je
andl
xchg
mov
push
xchg
cmp
jg
and
xchg
out
pop
clc
cltd
in
mov
and
mov
add
pop
cmp
je
xlat
lds
inc
push
in
xchg
outsl
sbb
dec
negb
cmpsl
pusha
ss
mov
sub
mov
dec
mov
and
in
lds
lods
shrl
mov
pop
fs
rcl
xchg
stos
rcrl
cmc
dec
lret
inc
pop
xchg
popa
in
ret
call
stos
cmp
cmp
fmuls
cmpsb
sub
divl
or
imul
xchg
daa
les
and
and
lahf
dec
sub
jp
jne
xchg
cmp
aad
cli
and
lcall
mov
js
fsubr
rclb
test
sub
divl
test
cld
pushf
aaa
push
js
mov
lret
sbb
lds
adc
cmp
xlat
adc
ret
xor
cmc
lods
and
subl
testl
jbe
mov
jmp
lods
xchg
mov
or
ficoml
cmp
sub
adc
xchg
mov
mov
cli
sbbb
or
cmp
jmp
out
inc
test
sub
pop
or
dec
enter
sub
loope
stos
call
xchg
pop
testl
sub
hlt
imul
inc
test
stc
cmp
or
pop
test
pop
mov
imul
test
mov
xor
imul
loopne
lods
cmp
daa
xchg
cltd
outsl
mov
cltd
sbb
ljmp
cmpsb
js
push
xor
push
xchg
pop
add
cwtl
pusha
jno
enter
lret
sbb
sbb
add
nop
mov
in
cwtl
xchg
fucom
aad
mov
xchg
fcoml
clc
and
testb
ret
or
je
xor
mov
in
cmp
xchg
not
cmp
push
pop
in
aad
es
cmp
pop
pop
ret
or
cwtl
lds
sub
sbb
mov
js
lds
mov
pop
fsubrs
sub
push
adc
pop
or
dec
icebp
ja
or
inc
mov
pop
and
inc
cwtl
push
xchg
cmp
pop
lcall
add
and
mov
mov
xchg
leave
movsb
popf
int3
fdivr
xchg
adc
enter
fimull
gs
clc
loope
or
or
in
inc
pop
mov
mov
push
imul
inc
or
ds
xor
cmp
xchg
xchg
lret
mov
test
dec
cmp
icebp
stos
sub
add
cmc
clc
aaa
push
scas
movsl
jp
lret
mov
mov
sbb
decl
mov
aaa
xchg
mov
js
cmp
mov
clc
add
push
mov
test
and
mov
lret
adc
mov
ss
std
cmp
xor
aad
add
cmp
inc
cltd
xchg
pop
jmp
or
push
aad
add
ja
push
call
mov
imul
xchg
or
xchg
lcall
mov
in
xor
xchg
xchg
dec
dec
inc
test
loope
push
mov
adc
sbb
pop
adc
add
inc
enter
sbb
xor
inc
icebp
push
xchg
add
jbe
push
inc
or
mov
call
in
mov
vcmppd
stos
push
aaa
xchg
insb
mov
pop
sub
push
or
fsubrs
scas
je
sub
cli
lods
insl
enter
and
fwait
sub
clc
add
and
mov
lret
cld
add
add
jne
dec
xor
cmp
imul
shrb
in
hlt
dec
and
in
out
sbb
or
daa
push
aad
mov
lcall
sbb
sub
jne
push
out
dec
or
pop
and
imul
xlat
push
lcall
inc
aaa
or
inc
inc
cmp
and
mov
push
scas
je
fstps
lea
lds
xchg
push
stos
fwait
jo
in
cmp
push
lret
out
xor
mov
dec
lret
pop
subb
or
orl
jp
out
sbb
out
mov
mov
imul
xchg
push
xchg
sub
cmp
loope
jbe
xchg
sbb
ret
pop
sub
cld
cltd
lods
push
iret
cmp
jnp
mov
push
inc
dec
outsl
popf
aaa
sub
push
jle
in
clc
fldenv
test
inc
pop
dec
cmc
xchg
lret
cltd
out
lcall
clc
jge
neg
or
sbb
enter
lods
pop
dec
outsl
jns
adc
aad
stos
pop
ret
add
test
mov
mov
enter
adc
and
test
cmp
mov
mov
push
ret
or
sbb
pop
cmc
xor
dec
in
in
dec
mov
cwtl
imul
mov
sub
shl
dec
lods
ret
xchg
ljmp
in
test
out
and
cmp
xchg
clc
cmp
scas
fmul
cmpsl
std
call
lods
dec
int
mov
ret
aad
rorb
and
imul
cmp
outsl
mov
imul
dec
sub
in
mov
leave
sub
sbb
fwait
cld
xor
xor
call
xor
shl
mov
aad
add
xlat
push
pop
imul
mov
xchg
mov
lret
xchg
or
imul
cmp
cltd
push
and
dec
test
cmc
cmp
popf
mov
adc
xor
sbb
dec
scas
in
pop
or
inc
jecxz
pusha
cli
inc
adc
call
xchg
cmp
pop
inc
in
mov
pop
sub
fwait
fcomps
js
bound
mov
inc
loop
lret
xchg
arpl
cli
daa
dec
and
out
cmpsb
cmp
in
cmpb
aad
shlb
gs
lcall
pop
sub
test
xorb
mov
movsb
ds
movsb
sub
push
xchg
pop
cmc
in
mov
insl
push
jecxz
lds
call
xchg
pop
push
icebp
stos
aaa
or
mov
popf
xor
sub
sbb
and
or
push
pop
daa
lods
inc
enter
sbb
cmp
fwait
pop
pusha
push
fs
imul
fs
ret
js
pcmpgtw
xor
loope
push
adc
mov
pop
outsb
icebp
in
jp
mov
ret
mov
in
fimull
lds
fdivrs
or
mov
cltd
add
aad
lods
clc
movsl
sub
sbb
out
inc
mov
inc
pop
aaa
pop
inc
jmp
mov
in
js
inc
repnz
or
pop
daa
cld
push
js
xchg
adc
stc
mov
mov
movsb
cmc
pop
mov
dec
shrl
js
sbbl
xchg
out
or
dec
test
fadds
cli
stos
gs
inc
out
xor
xor
loop
lods
lods
imul
test
sbb
mov
mov
jo
xchg
mov
jb
hlt
jp
sub
jmp
pop
call
add
ret
in
imulb
lret
push
cmp
lds
out
add
stos
cli
das
inc
xlat
es
or
jmp
fisubl
xchg
push
mov
push
mov
int3
pop
or
cmc
xchg
sub
dec
in
mov
and
clc
or
jbe
sbb
scas
cmp
and
fwait
in
xor
jg
clc
adc
mov
add
xor
cmp
lret
cli
das
jg
mov
popa
pop
jmp
jl
daa
pop
fdecstp
cmp
jmp
push
aaa
or
and
mov
add
xchg
jno
sbb
xor
and
aaa
int
xor
in
std
sub
mov
out
jmp
enter
scas
cltd
lea
imul
dec
cltd
insb
cmp
mov
rcl
xchg
out
call
cmp
xchg
or
xor
jmp
testb
leave
stos
in
adc
dec
std
fs
dec
sbb
jno
idivl
xchg
fwait
lds
sbb
cltd
or
sbb
xchg
jbe
add
adc
cli
xchg
sbb
mov
sbb
xchg
dec
mov
xor
bound
out
mov
cltd
cmp
stos
lcall
lret
clc
testb
dec
xchg
hlt
test
or
jb
and
stos
ret
movsb
mov
xchg
leave
xchg
jp
mov
mov
xchg
xchg
pusha
mov
sub
out
xor
ficompl
mov
lds
insl
daa
leave
lods
hlt
aad
mul
or
idivb
mov
dec
pop
imul
lret
movsb
pop
ljmp
dec
aaa
mov
or
pop
aad
mov
ljmp
in
sub
pop
rcrl
pop
xor
xor
or
fidivrl
mov
rclb
test
jbe
fildll
mov
lcall
ljmp
lds
dec
xor
push
pop
mov
inc
adc
xchg
xor
mov
movsb
test
mov
rcrl
ret
jp
cmp
sarb
jecxz
adc
loope
mov
add
loop
add
push
dec
popf
repz
sub
adc
lds
test
shl
enter
xor
cmp
pop
or
fdivs
dec
cmp
cli
lret
lea
imul
aaa
or
jp
je
ficoml
jb
addl
pop
pushf
je
cmpsl
mov
mov
jp
add
loopne
jge
pop
or
push
mov
mov
stos
sub
mov
push
dec
andb
cmp
fidivl
orl
xchg
movb
popa
mov
sti
pop
fs
clc
call
repnz
mov
dec
cltd
sbb
sbb
cmpsb
or
sub
and
xchg
or
or
mov
adcb
adc
cmp
sub
inc
sub
or
rcl
enter
xchg
ljmp
sbb
xchg
sub
dec
xchg
idivl
movsl
mov
sub
mov
mov
pushf
jmp
mov
mov
mov
int3
out
out
sub
dec
rcl
mov
mov
mov
imul
vunpcklps
popf
or
xor
mov
imul
sub
or
fadds
or
xchg
cwtl
mov
xchg
test
jo
daa
aad
nop
and
movsl
sub
mov
add
js
push
out
insl
cld
imulb
inc
shl
stos
jbe
pop
mov
scas
inc
mov
sub
push
aad
js
fldcw
nop
call
ret
lods
lret
dec
hlt
sub
cltd
imul
lret
jmp
mov
jg
xchg
addr16
or
xchg
movsl
push
outsb
fs
sub
mov
cmpb
aad
idivb
sbb
out
mov
push
dec
adc
cwtl
je
lret
add
and
or
repnz
sub
pop
sub
and
inc
push
icebp
cli
mov
xchg
dec
xor
cmp
aad
sarl
in
jle
aad
jnp
pusha
dec
addb
sub
cmp
js
dec
movsb
xor
add
mov
lds
lds
pop
repnz
stos
lret
js
mov
cmpsb
sub
mov
pop
es
add
cvtpi2ps
fs
sub
ficoml
sub
ljmp
stc
nop
testb
out
mov
sti
lds
int3
mov
testb
movsl
js
mov
scas
cltd
movsb
xlat
xorl
push
clc
test
sbb
push
pop
sbb
sub
lods
mov
je
lcall
push
das
inc
or
pop
dec
mov
inc
xchg
in
sbb
push
sub
adc
and
xchg
lcall
sub
inc
push
mov
cwtl
jbe
and
xchg
push
mov
mov
pop
enter
enter
test
and
lret
xor
adc
xlat
jp
mov
loopne
daa
in
out
stc
xchg
cli
fcoms
jbe
jmp
call
add
pop
sbb
mov
pushf
cmc
test
xchg
divb
dec
leave
in
in
aad
scas
pop
dec
xchg
dec
xchg
imul
test
cmp
in
xchg
xchg
test
mov
jb
lock
xor
imul
call
or
mov
fisubl
or
aas
sarl
cmc
mov
cli
pop
sub
js
dec
add
pextrw
or
dec
cltd
mov
or
daa
rorl
fistpll
ljmp
pusha
jno
icebp
ret
xchg
cmc
inc
adc
mov
cmpl
clc
sbb
xchg
push
xchg
test
lret
aad
adc
aaa
leave
call
fcom
xlat
ljmp
and
test
leave
or
xchg
pop
nop
xchg
in
lret
sbb
repz
adc
call
push
mov
imul
js
jge
int3
out
icebp
sub
call
jbe
inc
mov
push
addr16
xchg
jno
mov
pop
aas
ljmp
jg
mov
aaa
lcall
inc
cmp
sub
sbb
mov
sub
idivb
enter
xchg
mov
lcall
shrl
stc
and
push
test
dec
mov
dec
sub
and
out
add
mov
mov
sbb
add
aaa
push
gs
sub
push
js
dec
dec
sbb
or
push
cmc
repnz
xchg
into
sbb
lret
mov
inc
xchg
out
mov
inc
xchg
sbbb
sub
je
xchg
mov
aad
fdivrs
adcl
cmp
test
adc
adc
mov
pop
subb
adc
pop
aaa
loopne
or
ret
push
inc
js
mov
cli
push
outsl
addb
pop
jl
xchg
sub
or
mov
shlb
or
dec
xchg
out
jbe
or
xchg
xchg
cwtl
and
add
std
int3
das
and
push
cmp
or
jns
neg
rcll
lret
aaa
mov
and
testb
cwtl
testb
add
roll
hlt
mov
movsl
cmpsl
or
dec
in
and
xchg
and
add
clc
lods
sub
or
xchg
jp
or
push
and
out
ret
movsl
pop
jp
lret
sub
movsl
in
cmp
aad
cwtl
sbb
out
xchg
dec
pop
fisubl
pop
mov
and
daa
or
aas
testb
adc
jmp
inc
mov
in
and
cmpsl
js
out
jp
ja
sbb
mov
call
loope
sbb
out
scas
mov
xchg
sub
mov
mov
or
xor
clc
aad
aaa
adc
movb
xchg
push
sbb
mov
cmpsl
icebp
sbb
or
repnz
sub
daa
pop
orl
xchg
mov
aad
aad
cwtl
adc
and
fisttps
test
test
xlat
testl
in
and
scas
xor
lds
add
xchg
mov
fidivl
in
cwtl
or
shrb
cmp
ljmp
les
in
cmp
sbb
roll
lahf
cwtl
repnz
sbb
push
xchg
or
fdivrs
ret
pop
mov
addr16
int
mov
cmp
xor
or
rclb
movl
fdivl
js
pop
and
jne
or
lret
inc
add
inc
ret
mov
dec
mov
push
xor
loope
ljmp
mov
mov
inc
push
adc
pop
cltd
xchg
sbb
ret
dec
js
mov
add
sub
dec
outsl
test
fcmovnu
into
jg
or
std
cld
xchg
sub
enter
and
push
cmp
pop
negl
insl
out
mov
mov
js
sub
mov
cmpsb
shrl
mov
rcll
mov
push
or
jno
dec
mov
mov
pop
fldenv
pop
or
xor
xchg
sub
out
or
addb
mov
push
xchg
rcl
xchg
sbb
fcomip
push
pop
xchg
mov
mov
cmp
pop
mov
fisubl
cld
mov
inc
sub
inc
cld
mov
fs
sbb
inc
xchg
mov
pop
lea
pop
pop
sub
lret
cli
lds
xlat
mov
gs
push
or
cmp
xchg
sbb
divb
sbb
out
sub
sbb
xchg
mov
mov
cmpsl
in
mov
lret
ret
jnp
xchg
movsl
or
scas
adc
iret
mov
stos
fstps
int
cltd
ja
dec
jp
mov
adc
jmp
inc
push
loopne
inc
and
loopne
jmp
cli
or
sub
xchg
or
pop
mov
loop
add
mov
inc
adc
sbb
mov
in
sbb
test
out
cli
dec
aaa
aaa
rcrl
cmp
scas
stos
popf
arpl
stos
xchg
fwait
lcall
and
inc
mov
cmp
rcrl
mov
add
and
inc
jmp
pop
ljmp
cmpsl
jbe
fldcw
stc
fidivrl
lds
fdivrs
ret
es
iret
xchg
out
adc
cmp
out
dec
scas
mov
popf
in
add
fmuls
push
mov
dec
inc
in
xor
out
cmc
xchg
fsubl
aas
adc
sbb
sbb
fcoms
lods
lahf
pusha
clc
jg
not
mov
or
orl
cmp
pop
mov
hlt
cli
bound
sub
pop
dec
and
in
sbb
pop
stos
add
jg
cmp
fldl
aad
pop
jmp
jb
stos
or
bound
dec
cmp
or
out
xlat
icebp
push
sub
and
xchg
pop
imul
enter
lret
ljmp
or
sbbb
js
and
lcall
lds
pop
sbb
xor
sbb
mov
xor
jbe
xabort
lods
inc
movsl
mov
je
enter
cwtl
xlat
xchg
inc
mov
sub
or
popf
mov
cli
sti
je
sub
roll
pop
std
mov
and
testb
mov
stos
dec
or
jmp
cwtl
mov
aad
imul
loope
xchg
int3
cmc
add
cmp
sub
push
ret
add
clc
mov
neg
and
movsb
or
imul
aas
xchg
in
mov
jo
sub
sub
sub
call
fsin
mov
push
inc
fmuls
sbb
xlat
cmc
xchg
mov
int
test
popa
and
jp
cmp
dec
push
or
or
pop
xchg
out
inc
xor
pop
xor
test
cmpl
imul
xor
and
addr16
or
sbbl
push
add
cmp
sbb
jl
andl
dec
sbb
cmp
enter
jle
mov
xor
cmp
cwtl
ret
pop
addb
or
hlt
daa
adc
cmp
ficoml
jns
repz
cmpsl
mov
jg
sub
xorl
add
lret
test
test
mov
shrl
sbb
cwtl
movsb
pop
in
cmp
std
jp
adc
loopne
add
test
popf
icebp
mov
mov
sbb
adc
pop
mov
xchg
adc
lds
cmpb
fnstenv
stos
imul
cli
pop
sbb
stc
or
or
and
cmc
in
sbb
clc
mov
or
dec
cwtl
mov
mov
daa
push
jb
pop
test
cli
mov
cmp
out
xorl
aad
fimuls
cmp
out
mov
mov
push
or
fs
jnp
stos
dec
and
or
adc
cmp
ljmp
mov
movsb
ret
mov
and
enter
inc
js
int
cmp
aad
outsb
fld
push
push
xor
cmp
sahf
xchg
in
int
testl
sbbl
in
pop
cmc
dec
daa
or
sbb
xchg
xor
dec
aaa
sub
lcall
adc
call
pop
addr16
cmpsl
adc
sub
nop
xchg
push
and
fsubrs
or
pushf
lds
jbe
and
mov
test
das
imull
push
push
hlt
out
mov
mov
shr
mov
or
cmpsl
pop
push
inc
ret
mov
clc
xchg
inc
daa
xchg
pop
lahf
test
mov
inc
xlat
jg
clc
pop
xchg
xor
icebp
enter
test
inc
lret
xchg
dec
shr
clc
cli
or
xchg
aas
aaa
lds
stc
and
jo
inc
inc
inc
dec
or
fucom
mov
cmpsb
leave
fs
jg
pop
mov
mov
cltd
imul
loope
aaa
or
sub
movsl
fidivl
xchg
daa
add
or
hlt
jns
and
xchg
sar
daa
pop
fdivl
xchg
mul
stc
aaa
cmc
push
cs
mov
enter
pop
xchg
not
loopne
xor
pop
pop
inc
sub
lds
mov
pop
fistpl
or
movsl
stc
in
xlat
xor
fnstcw
sub
or
out
or
je
add
lahf
push
fcmovnu
mov
movb
mov
jae
adc
xchg
aad
hlt
gs
mov
xchg
or
orl
cmp
notl
xchg
test
cmc
adcb
or
pop
or
xchg
cmp
bound
xor
pop
cmp
test
add
and
rcrl
sub
clc
jo
test
mov
outsb
popf
xor
mov
bound
lret
out
call
sub
in
sub
in
clc
mov
kxnorb
notb
les
mov
test
xchg
xor
push
cmp
aad
jmp
in
dec
push
push
cmc
jecxz
fldt
hlt
pop
xchg
pop
cmp
out
shlb
mov
push
out
or
lret
pop
and
push
mov
testl
push
lcall
imul
add
pop
ret
adc
ljmp
pop
fs
sbb
dec
fldl
out
pop
dec
repz
adc
dec
jmp
xchg
ret
cmc
sub
mov
cwtl
enter
cmp
dec
mov
xchg
loope
hlt
fwait
jle
or
xchg
and
ficoml
push
jmp
sub
fistpl
mov
shl
sbb
fdivrs
int
mov
in
pop
xchg
test
xchg
mov
mov
push
or
and
or
jp
jp
xlat
imul
cmpb
add
add
cmp
das
mov
out
js
xchg
ja
in
rol
loop
pop
in
cwtl
xlat
in
in
aaa
fisttps
aas
inc
lods
and
in
sbb
js
and
enter
cmp
pushf
test
sbb
shrl
mov
pop
out
inc
in
jae
sub
insb
popf
test
push
mov
or
sbb
xor
push
negl
movsl
or
movsl
dec
mov
adc
clc
jbe
imul
jns
ja
dec
mov
add
addl
pushf
mov
outsl
xchg
lret
cli
pop
dec
in
mov
icebp
lcall
in
in
dec
inc
mov
imulb
dec
int
cmp
jecxz
aaa
lods
rcrb
pop
add
sbb
push
mov
or
add
cmp
nop
push
xchg
mov
aad
ljmp
mov
stos
adcl
dec
xor
inc
ljmp
mov
es
test
aaa
adc
push
cmp
ficompl
sub
dec
cmp
stc
cmp
fisubrl
movsl
cmp
adc
mov
xlat
sbb
xchg
in
daa
and
mov
divl
xlat
fadds
mov
cmp
jmp
sub
les
cld
popl
adc
cmp
and
and
add
vcvtdq2pd
mov
cmp
sub
adc
xchg
mov
dec
out
adc
and
mov
cmpsb
adc
daa
xor
dec
jecxz
cli
mov
sbb
les
and
jp
mov
enter
xchg
cmp
xorl
push
stos
mov
lods
jb
rcl
mov
test
sub
jo
ror
cmpsl
in
ja
add
stc
stos
cmc
lret
push
jp
in
rorl
xchg
fstpl
lods
cmp
aad
std
mov
in
sahf
call
cmp
sub
cmpsb
popf
jle
js
mov
or
xchg
xchg
out
ret
adc
xor
or
jb
psubd
in
mov
in
pop
je
xchg
stos
movsb
enter
mov
in
cli
aad
mov
adc
cmp
out
insl
ret
lret
cmp
dec
les
test
cmp
in
mov
fildll
ljmp
push
inc
int3
push
or
xchg
cmpsl
loope
mov
push
push
addr16
pop
popf
mov
or
insb
arpl
ret
hlt
and
shll
mov
sbb
mov
pop
fadds
add
lds
call
and
js
in
and
lret
sarb
or
push
fsubrs
xor
jbe
out
mov
sbb
or
loope
xchg
add
in
lea
cmp
test
and
jb
mov
mov
popa
out
std
sbb
push
shll
enter
mov
xor
sti
mov
xor
sbb
adc
daa
mov
in
xchg
sub
dec
enter
cmc
push
in
js
sub
rol
lcall
lret
mov
daa
jno
std
clc
mov
add
pop
loop
cltd
inc
test
mov
cmp
in
cmpsl
enter
cmp
jae
stos
mov
mov
rcrl
xchg
mov
shrl
loope
stos
add
xchg
sbb
out
leave
push
stos
xchg
fidivrl
rcll
cmp
imul
sub
push
jmp
inc
hlt
sub
or
addb
sbb
clc
shlb
scas
js
push
and
xorb
adc
and
sub
lret
fdiv
out
xchg
sbb
ljmp
or
sbb
pop
sub
add
aaa
xor
cmc
cmp
mov
in
shll
aad
out
bound
iret
out
xchg
and
dec
jb
stos
ljmp
lods
xor
cli
pop
cmp
xchg
adc
inc
and
sarl
mov
xchg
fdivs
clc
push
movsl
inc
inc
or
insl
push
cmovae
out
in
adcl
pop
mov
sub
test
and
ret
adcl
popl
pop
cmp
mov
xor
inc
mov
sbb
xchg
je
popa
cmp
jmp
mov
fmuls
mov
fidivrl
pop
lods
or
dec
xchg
cmp
loopne
je
sbb
shlb
xchg
sbbl
pop
cmp
mov
xor
xor
and
fildl
xchg
hlt
out
xchg
lahf
jp
sub
xchg
sbb
ds
pop
inc
in
in
xchg
adc
fmuls
jp
dec
xor
cmp
cmp
and
ljmp
lods
hlt
jbe
fwait
lds
out
mov
cmp
addr16
and
adc
mov
xor
pop
test
xchg
mov
mov
and
cmpsb
xor
jp
sub
lret
dec
rcrl
dec
jp
movsb
lds
cli
test
insl
push
inc
xchg
mov
sbb
pop
call
jno
ret
jmp
cmp
lcall
stos
and
xchg
ffree
mov
cwtl
or
mov
mov
enter
inc
std
mov
stc
lcall
sbb
out
addr16
push
bound
cmc
pop
or
mov
fs
xchg
and
pop
mov
xchg
lds
or
inc
sub
push
bound
xchg
mov
mov
sti
xchg
mov
ret
or
mov
mov
cwtl
scas
rclb
mov
in
test
rcl
xchg
push
mov
std
sub
xor
mov
test
faddp
fwait
mov
bound
push
mov
call
dec
cli
or
sub
xor
or
sub
sbb
cmp
xchg
ljmp
out
stos
clc
out
and
mov
push
xchg
sub
xchg
cmpsb
out
je
aaa
loope
or
cmc
mov
js
lds
daa
xchg
sbb
cmp
arpl
pop
std
or
and
mov
sbb
dec
push
mov
dec
das
inc
and
add
mov
cwtl
xor
add
xor
jbe
or
out
xor
cmpsb
test
xchg
jg
mov
mov
imul
fldpi
aad
push
push
mov
push
mov
xchg
fimull
or
js
je
aaa
cltd
cmp
xchg
xchg
pop
clc
fbld
add
mov
mov
dec
sub
out
popa
mov
jp
cltd
loop
negl
lds
sub
jbe
mov
cmp
add
loopne
stc
xchg
mov
std
stos
pop
push
clc
lret
imul
xchg
test
lcall
sub
testl
out
adcl
cli
enter
jg
push
mov
addl
lcall
cmp
add
mov
cmp
lds
xor
mov
sub
pop
in
popf
filds
dec
cwtl
lret
xchg
mulb
and
xlat
ds
sub
stos
pop
fs
push
js
sub
mov
xchg
or
mov
cwtl
testb
mov
inc
lret
lret
jp
inc
sbb
lcall
loope
fidivl
test
in
insl
sahf
cwtl
push
add
mov
mov
mov
mov
test
popa
in
dec
loope
or
mov
out
dec
fimull
int
xchg
cs
xchg
imul
or
test
jbe
dec
mov
jae
mov
ljmp
cmp
mov
sub
xor
jle
sbb
inc
sbb
xchg
cmc
pop
je
jbe
negl
or
sarl
add
lcall
sbb
pop
cmp
mov
mov
mov
xchg
sub
and
pop
xor
lcall
adc
or
and
xchg
lret
imul
cmp
push
imul
pop
mov
add
enter
js
and
ljmp
mov
in
lcall
call
imulb
dec
pop
aaa
loope
adc
sub
dec
jp
mov
mov
lea
mov
in
mov
or
inc
xchg
sti
stos
inc
mov
mov
mov
push
stos
mov
sbb
mov
mov
mov
or
aas
mov
sbb
sti
subl
ss
call
lods
push
in
lds
addr16
mov
xor
test
inc
inc
fldcw
xchg
mov
pop
aad
test
dec
add
xchg
mov
or
mov
sbb
mov
mov
push
scas
in
dec
cmp
ljmp
popl
daa
mov
shlb
incb
in
mov
pop
pop
or
xor
pop
clc
aad
xchg
lret
and
xor
stos
mov
pop
push
test
pushf
inc
xor
js
cmp
imull
add
test
mov
sbb
xchg
xchg
mov
and
mov
or
ret
aad
cltd
bound
sbb
shr
mov
push
xor
pop
add
mov
sub
adc
js
cmp
xor
adc
mov
push
mov
in
fwait
mov
rorl
movsb
in
xchg
popa
add
cli
jmp
movsl
cwtl
dec
xchg
inc
mov
cmpsl
or
sbb
lds
scas
xor
or
jne
aad
enter
dec
jmp
mov
sub
fidivrl
pop
fucomi
jno
add
out
cmp
xchg
or
ljmp
dec
cmpsb
sbb
mov
mov
stos
negl
sub
sbb
push
adc
cmp
notb
fwait
adc
js
leave
add
insl
fstps
jl
cmp
aaa
mov
xchg
mov
lcall
fisubl
push
or
mov
out
fwait
lods
clc
lcall
out
or
mov
stos
aas
pop
out
cwtl
or
mov
sub
sbb
lret
mulb
xor
enter
mov
gs
pop
sub
sbb
adc
mov
cmp
adc
and
es
pushf
push
inc
push
bound
nop
inc
sub
lcall
lret
movl
stc
loopne
mov
push
les
push
addr16
xchg
and
call
jge
aad
push
pop
test
cli
cmp
stc
lret
jp
je
lds
clc
je
sarb
mov
and
or
lahf
cmc
sub
lea
sbb
out
enter
jne
mov
and
cmc
je
aaa
xchg
lahf
loope
or
test
sti
sbb
push
add
inc
test
xchg
or
push
mov
inc
jmp
push
xor
in
enter
dec
pop
cwtl
sub
mov
cmpsb
lret
sti
adc
call
xchg
pop
dec
mov
std
sbb
xor
test
cli
lahf
scas
ret
push
rcrl
jp
leave
ljmp
or
loop
fisubl
or
enter
dec
repnz
or
xchg
adc
test
cwtl
and
xor
pop
mov
pop
loopne
scas
mov
cwtl
and
pop
xor
popa
xlat
sub
insl
int
in
mov
sbb
shll
test
xor
and
xchg
xchg
xlat
pop
jbe
add
cmp
jg
pop
cmc
dec
cwtl
mov
jg
clc
mov
ljmp
fisttps
cmp
sbb
aad
jp
jg
outsl
idivl
orl
stos
fdivrs
rorb
insl
leave
jp
push
fisubrl
lcall
sbb
daa
sub
cmp
dec
sub
sub
pop
in
mov
sbb
divl
or
jmp
std
stos
ret
dec
daa
es
mov
cwtl
shll
je
pop
test
cmp
xor
sub
pop
mov
pop
fbld
sub
aas
dec
mov
cmp
cli
in
fimull
inc
iret
aas
jp
pop
sub
pop
pop
test
sub
int3
scas
sarl
xchg
dec
xor
mov
out
sbb
rcll
xor
cmp
sub
pop
ljmp
push
cltd
add
adc
fsubs
jbe
imull
in
testb
or
sub
mov
out
xor
mov
dec
push
out
mov
insl
jmp
dec
add
pop
imul
lock
pop
jmp
sbb
and
adc
sub
sbb
fdivrs
xchg
dec
xchg
daa
lcall
xchg
jl
rclb
in
mov
arpl
loope
lds
std
sub
imul
jb
mov
outsl
addr16
mov
or
fisubrl
or
lds
out
cli
shrl
mov
loope
test
out
std
loope
addr16
mov
fbstp
jnp
jge
and
imul
adc
js
jae
fistps
in
ljmp
dec
inc
xchg
adc
movb
and
or
mov
movsl
adc
dec
sbb
or
fiaddl
sbb
jp
push
pop
rcr
out
arpl
jbe
outsl
call
fsts
mov
or
aad
loopne
je
fiaddl
lods
out
cmpsb
push
push
jle
scas
shrb
and
pop
or
jns
enter
dec
mov
jp
sub
cmp
aad
and
mov
add
fcomip
loop
cmp
pop
test
imull
xchg
sub
je
fs
bnd
dec
shr
xor
ja
sub
mov
popa
mov
dec
mov
push
jbe
push
fcomps
out
vunpckhps
subl
arpl
fsubrl
andb
mov
shrl
fs
push
lret
dec
jge
sbb
ficompl
out
clc
sbb
mov
outsb
and
or
mov
cwtl
jae
mov
add
mov
mov
sub
mul
dec
mov
call
dec
cmp
rcrl
test
and
add
mov
cs
inc
pop
in
xchg
hlt
movsb
in
mov
sbb
jecxz
sbb
shll
mov
xchg
jg
out
sbb
out
data16
or
and
inc
pop
cwtl
jecxz
dec
mov
shl
bound
inc
iret
jge
sbb
mov
or
icebp
adcb
jp
fs
mov
sbb
cmp
scas
clc
mov
pop
ljmp
arpl
out
ja
fistpl
xchg
pop
cmpsl
lcall
and
sub
movsb
cmp
jl
dec
xor
cli
jnp
ret
cmpb
ds
fldenv
movsl
xchg
test
aaa
or
hlt
addr16
in
or
jmp
cmc
gs
sub
divb
stos
loop
es
call
add
imull
cmpsl
push
pusha
push
loopne
push
test
push
mov
mov
lods
sub
std
aam
dec
popa
and
add
imul
or
test
cmc
push
rorb
mov
push
faddl
mov
leave
or
js
iret
xchg
xchg
mov
adc
pop
adcl
mov
push
pop
cmc
lock
xor
xchg
xlat
fwait
stos
xchg
pop
out
lods
imul
jp
loop
std
out
pop
dec
stos
bound
push
enter
cli
movsl
jg
lret
push
sub
dec
inc
and
ds
pushf
lea
js
cmpsb
imul
out
pop
cwtl
loop
jbe
xchg
jp
lcall
push
lahf
clc
mov
andl
sbb
add
sbbb
dec
pop
out
fldenv
and
inc
daa
inc
inc
cli
pop
xchg
inc
mov
add
mov
cmp
testb
and
adc
mov
shr
push
cmp
adc
mov
dec
or
fistpll
out
pop
imul
mov
addr16
cmp
fucom
xchg
mov
pop
jg
in
sub
aas
stos
mov
mov
jo
repnz
imul
push
out
cmc
imul
shll
xor
clc
enter
mov
imul
cltd
daa
mov
xchg
cmp
xor
ret
pop
fucomp
push
fimull
xor
sbb
xchg
pop
cli
inc
lcall
incl
scas
xchg
cmp
jbe
outsb
jmp
jge
xchg
adc
push
lahf
dec
popa
orl
dec
mov
jp
xor
divb
scas
sbb
push
cltd
or
cmp
dec
xrelease
pop
sahf
mov
pusha
cmp
stos
push
out
add
xlat
mov
es
arpl
popfw
jl
sbb
fwait
dec
or
xchg
sbb
lea
clc
inc
lcall
add
cli
pop
dec
js
sbb
pusha
std
mov
scas
fldcw
sbb
sub
lock
cmp
mov
stos
sbb
ret
push
sbb
imul
dec
repz
dec
cmpsb
mov
dec
pop
fbstp
orb
mov
lcall
scas
sub
cltd
mov
call
mov
imul
dec
mov
ds
addr16
jle
nop
push
adcl
mov
push
push
sub
lods
fidivrl
push
add
into
dec
adc
xor
imul
mov
adc
push
in
rcrl
fs
inc
js
sub
mov
arpl
mov
in
and
or
or
dec
xchg
sahf
jb
pop
dec
out
dec
sub
sub
push
ljmp
clc
adc
or
lret
mov
pusha
imul
orl
pop
add
sbb
imul
imul
or
nop
cld
test
repz
mov
sub
pop
dec
mov
lahf
add
jecxz
aam
and
push
stos
ja
popf
jmp
nop
pop
int3
lds
jae
ret
mov
test
add
loop
jecxz
sub
out
imul
in
into
fldenv
sbb
out
push
call
inc
idivb
pop
pop
cmpsb
xchg
mov
adc
mov
inc
xchg
and
fstps
or
ret
xchg
aad
int3
popf
mov
out
dec
sbb
lret
pop
shll
es
push
jb
adc
jns
mov
outsl
inc
lock
jns
jmp
xchg
pop
ret
sbb
imul
jbe
ret
and
mov
cs
push
out
push
lods
xor
lret
dec
cwtl
mov
jnp
xorl
xchg
js
or
and
cmp
iret
dec
sub
mov
ficoml
adc
test
pop
mov
push
xchg
je
sbb
cli
enter
mov
inc
movsb
ficoml
xor
or
push
cmpsb
add
cwtl
ret
out
cmp
mov
clc
lds
daa
add
mov
call
lret
adc
enter
lea
test
std
test
in
mov
mov
xor
mov
cwtl
xchg
push
pop
incl
sub
push
daa
insl
xor
dec
push
imul
in
add
mul
movl
mov
mov
mov
stos
ss
xorb
les
mov
cmp
lods
jbe
test
xchg
cwtl
lds
add
dec
push
fdivr
push
lahf
xlat
mov
mov
sbb
sbb
pop
jecxz
stos
xchg
push
pop
imul
adc
testb
push
dec
adc
sbb
je
or
push
xlat
dec
ljmp
add
aaa
push
lret
sbb
push
xchg
pop
sub
mul
test
lret
sbb
pop
addr16
dec
mov
jo
movsl
ljmp
and
ficompl
test
cmp
sub
push
adc
xchg
dec
out
dec
incl
cli
xor
les
mov
sbb
sub
mov
and
or
hlt
inc
out
call
xor
mov
sbb
loopne
jb
sbb
pop
fcomps
fcompl
mov
dec
dec
push
and
or
icebp
sbb
dec
loopne
fimull
mov
inc
cmp
jecxz
fsts
mov
aaa
mov
mov
and
mov
mov
and
or
sbb
mov
mov
xor
lret
adc
testb
ret
xlat
jp
rolb
and
cwtl
xchg
adc
mov
outsl
es
sar
fisubrl
lods
mov
dec
jge
fcoms
rorl
xchg
xchg
mull
pop
mov
or
pop
inc
cld
icebp
xchg
or
sbb
dec
xchg
or
mov
in
leave
loope
aad
enter
dec
mov
push
sbb
push
push
test
aam
pop
adc
adc
dec
mov
cmp
notb
addr16
stos
cmp
or
aam
ret
ret
enter
xor
xlat
ss
pop
loope
addr16
dec
or
icebp
divl
jnp
or
xchg
cmp
mov
in
in
add
sub
jg
fimull
xchg
ret
sub
mov
fcomp
sub
hlt
pusha
rol
adc
add
sbbl
adc
sbb
and
hlt
push
in
add
cmp
cltd
lods
sbb
xchg
and
daa
stc
mov
outsb
sub
out
cwtl
or
cmp
stos
hlt
sub
lret
xchg
fisttpll
push
cmp
shll
test
cmc
add
popf
std
lds
rolb
xchg
daa
add
sbb
stc
fidivrl
add
push
hlt
add
sub
ljmp
cmp
mov
adc
mov
stos
lea
lret
js
in
and
popa
xchg
jmp
std
mov
dec
dec
data16
mov
dec
xchg
and
lcall
xchg
sub
lea
pop
adc
and
or
cltd
lahf
daa
stos
mov
in
cwtl
mov
ljmp
sbb
ss
mov
adc
insb
jp
push
loop
push
imull
mov
xchg
cmp
or
loop
sti
lea
push
dec
xor
in
sti
xor
mov
mov
pop
lock
push
ficomps
mov
ljmp
cltd
leave
mov
addr16
sub
sub
lcall
sbbb
sub
lret
imul
aad
mov
jb
mov
roll
shlb
sub
cli
sbb
or
in
shlb
fsts
loope
mov
cmc
jo
fwait
out
mov
lret
mov
testl
push
mov
mov
les
psllw
daa
mov
pop
adcb
sti
imul
mov
fwait
lods
mov
sarl
les
xor
fdivs
sahf
jp
jbe
cmpsb
push
mulb
push
xor
jl
lds
mov
fmul
xlat
mov
addr16
mov
lods
push
ljmp
das
dec
fwait
sub
xchg
je
fdivs
cmp
dec
and
sbb
enter
or
imul
push
inc
enter
cmp
shl
lahf
sbb
lcall
pop
fcoms
shlb
fistps
addr16
inc
xchg
dec
cmp
lds
sbb
push
lods
nop
push
mov
cld
mov
mov
sbb
les
cmp
cmp
loope
clc
mov
push
pop
sbb
insb
jo
data16
in
stos
mov
xlat
xor
xchg
mov
mov
adc
leave
mov
outsb
cltd
into
lcall
ljmp
inc
jge
jno
push
jmp
inc
leave
cwtl
leave
jo
dec
mov
fisubl
in
mov
cmp
jmp
adc
fidivs
mov
fcoms
daa
out
sub
neg
cmc
lret
or
or
xchg
clc
test
lds
mov
sbb
insl
adc
daa
pop
add
ret
out
fcoml
xchg
lret
loop
ret
sub
ret
movsl
cmp
lea
fiaddl
push
xchg
imul
dec
mov
mov
cwtl
negl
or
incl
xchg
pop
cmp
cmp
or
adc
pop
imull
inc
adc
cmp
pop
inc
jae
mov
pop
test
fdivs
adc
xchg
xchg
sbb
mov
dec
mov
daa
mov
jp
cmp
stos
test
pop
mov
clc
xchg
cmp
or
mov
test
dec
js
fstps
or
incb
jbe
hlt
dec
fisubrs
add
xchg
cmp
repnz
xchg
mov
mov
push
dec
js
in
push
sbb
cmp
xchg
or
push
ret
xor
aad
or
sbbl
inc
or
lcall
hlt
jae
out
or
sub
cmpsl
jmp
mov
xor
jl
out
fs
fwait
adc
sbb
loop
mov
mov
mov
lock
out
inc
lock
test
mov
pop
push
dec
cmp
fs
jge
enter
jo
pop
pop
js
mov
cs
pop
dec
mov
rol
xlat
lea
out
sub
jecxz
xorl
inc
clc
xchg
pop
cmp
dec
pop
lcall
mov
xchg
lods
push
sbb
out
call
mov
in
pop
or
push
mov
mov
test
dec
popa
sbb
lret
stos
adc
or
cltd
aad
out
xchg
jo
daa
pop
xchg
and
inc
jmp
mov
lcall
loope
mov
sbb
sbb
icebp
pop
in
pusha
sbb
out
mov
call
and
xchg
pop
test
dec
dec
adc
dec
xlat
mov
xchg
mov
push
jp
xchg
xchg
aaa
cli
mov
daa
adc
pop
arpl
mov
scas
out
std
or
std
cmp
sbb
in
and
cmp
cmp
xchg
cmp
mov
in
loope
sbb
sbb
sub
cmpl
or
cmpsb
js
rcrl
cmp
leave
stos
lahf
jl
divl
or
sbb
popa
adc
adcb
dec
mov
pop
push
mov
or
cmp
not
xor
jns
cmp
hlt
mov
dec
fdivs
test
sbb
or
mov
les
imul
es
and
pop
dec
dec
push
mov
cli
add
cmc
dec
out
mov
and
dec
icebp
testl
mov
and
dec
call
mov
cmp
fdivrs
adc
fidivrl
sbb
mov
inc
cwtl
fadds
push
mov
adc
out
out
push
mov
insl
lea
clc
and
jno
mov
xchg
mov
sub
roll
sbb
push
adc
xor
mov
or
lcall
mov
pop
mov
mov
pop
sbb
pmullw
je
in
or
jmp
into
dec
mov
push
inc
jne
jno
out
and
dec
fwait
dec
ficoml
aaa
cmp
jg
fsubs
loope
call
add
xchg
push
jp
stc
adc
lods
imul
ret
push
movsl
repnz
or
mov
mov
and
sbb
mov
aaa
call
push
xchg
notb
jmp
test
xlat
xchg
pop
leave
xchg
inc
cmp
sub
sub
adc
pop
dec
cli
xchg
inc
aaa
adc
sbb
cmpsb
xchg
lods
adc
push
xor
lret
in
pop
mul
and
sbb
dec
aam
xchg
cmpl
clc
imul
clc
sarb
cli
sub
mov
das
inc
jns
leave
test
sub
jl
popl
int
ljmp
xchg
imul
or
pop
scas
ja
mov
xchg
negb
outsb
insl
test
mov
xchg
dec
call
mov
sbb
and
xchg
mov
or
cwtl
pop
js
divb
loope
push
pop
jmp
xchg
sub
push
push
cmp
adc
dec
push
mov
loop
out
stos
add
daa
cwtl
jae
sbb
inc
scas
mov
loope
mov
out
dec
add
jbe
rcll
sbb
in
and
sub
lret
int3
push
lcall
mov
jb
test
aaa
dec
ret
mov
out
cltd
push
lds
stc
fimuls
lcall
dec
test
mov
push
enter
sti
ljmp
or
imul
aam
dec
cwtl
adc
clc
mov
adc
cmp
push
je
adc
cmpl
jbe
and
aas
ljmp
sub
pop
int3
mov
in
adc
push
mov
iret
rcll
mov
fnstenv
imul
mov
mov
enter
stos
xor
ret
pop
cmc
add
daa
inc
pop
jb
mov
jge
sub
mov
xchg
enter
lcall
mov
dec
gs
cmp
cmpl
mov
iret
lods
and
dec
test
xchg
in
adc
dec
ret
aaa
add
lods
fcomps
test
daa
sub
push
jb
fldl2t
mov
sti
cmpsb
lock
xchg
mov
mov
xlat
cmpsb
imul
sbb
lea
sti
cmpsb
or
call
addr16
jbe
enter
or
imulb
lods
jge
adc
mov
sti
loop
lcall
add
dec
pop
out
imul
push
enter
sub
xor
xchg
repnz
pop
out
add
imul
mov
jp
dec
adcl
xor
enter
adc
or
sbb
cli
leave
jmp
push
fdivp
sbb
lcallw
sub
jns
pop
fcmovbe
insl
sub
dec
rorb
cmp
add
fistpll
sub
shll
js
dec
xor
insb
mov
push
bound
push
in
pop
lahf
and
fadds
movsb
and
lea
fcoml
lea
cmp
jmp
bound
cltd
out
mov
jp
mov
dec
push
dec
cltd
test
aad
and
pop
add
addr16
sbb
cmpsb
fildll
push
lahf
or
push
mov
and
rorb
xchg
dec
imul
loope
lahf
jo
cmp
lret
mov
adc
imul
cmp
or
mov
jp
adcl
arpl
addr16
movsl
aaa
push
out
test
push
notl
lret
pop
in
enter
mov
pop
xchg
daa
test
fisubl
cli
mov
mov
scas
sbb
fnstcw
push
xchg
xlat
rcl
ret
imull
sbb
pop
mov
out
mov
in
imul
or
dec
lret
mov
cmpsl
mov
in
adc
insb
cmp
push
mov
pop
sub
jge
out
popf
sub
insl
sub
push
testb
dec
aaa
push
adc
cmp
sub
jl
icebp
imul
outsb
dec
mov
cmp
test
xchg
pop
pop
popa
leave
lea
scas
jl
shll
fldenv
mov
cmpsb
test
mov
js
jne
sbb
xchg
ljmp
jp
dec
daa
js
and
icebp
sub
push
insl
enter
inc
or
fwait
je
lcall
imul
xchg
lahf
or
test
push
cmc
dec
shll
arpl
les
fsubl
fistpll
cmp
les
lods
or
test
cmc
mov
movsb
add
incl
lcall
dec
loopne
dec
out
js
in
jg
adc
daa
fmuls
mov
sbb
or
popa
mov
icebp
sub
ljmp
jp
sahf
sbb
out
mov
push
xchg
in
lahf
xor
cld
mov
mov
sub
mov
push
addr16
mov
jl
cmp
and
sti
push
enter
test
js
call
add
test
cmpl
aaa
fcmovb
pop
jecxz
xchg
mov
sub
loope
out
pushf
daa
test
dec
mov
sbb
xor
mov
and
imul
xor
jge
mul
stos
lret
push
cmp
mov
mov
rcll
mov
dec
daa
hlt
dec
xlat
aaa
hlt
outsb
mov
ficompl
sub
into
lret
ret
pop
imul
aas
or
xchg
daa
xlat
sbb
aad
fdivrp
or
fstl
loop
aaa
idiv
es
rorl
test
call
xchg
fsubrs
jno
test
inc
fidivl
test
xchg
lret
or
aas
daa
cmp
fs
or
mov
clc
cmp
cli
adc
push
neg
out
and
xor
cmpsl
xchg
mov
movsb
mov
out
and
adc
adc
jns
xchg
mov
pop
cmp
out
mov
test
and
xchg
xor
call
sub
xchg
lahf
cli
pop
xchg
push
imulb
sub
out
js
mov
push
call
stos
mov
cli
xor
in
inc
pop
push
lcall
or
sbb
xchg
add
lds
fsubr
int3
sbb
adc
lret
in
inc
jle
shrb
push
push
subl
or
jbe
js
push
or
jp
dec
push
loope
out
out
adc
add
mov
sbb
mov
xchg
cmp
push
push
in
push
popf
cmpsl
call
mov
addr16
jp
pop
dec
arpl
xchg
and
stc
test
mov
lret
xor
test
push
js
push
pop
mov
stc
sbb
in
sbb
testl
push
lcall
dec
mov
loope
mov
dec
aad
pop
xchg
mov
je
push
loop
push
push
mov
ss
push
lret
ror
es
push
adc
adc
je
xor
scas
call
aad
mov
xor
gs
jne
sub
mov
ljmp
push
pop
sub
ljmp
mov
mov
push
cmpsl
sub
stc
pop
mov
sub
push
mov
jmp
dec
iret
mov
and
sub
xor
lcall
dec
xchg
loope
lret
cmp
xor
into
fs
shl
ljmp
xchg
xchg
inc
cmp
daa
adc
lahf
clc
or
xchg
fimull
mov
dec
xlat
pop
insl
fcmovbe
mov
xchg
or
or
push
mov
push
out
inc
pop
xchg
mov
dec
in
into
scas
xchg
mov
daa
out
or
loopne
xor
jecxz
adc
xchg
pop
mov
cmpsb
dec
clc
stos
adc
sbb
dec
lds
sbbb
or
mov
sbb
mov
pop
dec
out
xor
adc
and
and
mov
and
push
jno
xor
js
or
xchg
stc
fimuls
push
adc
or
lods
insl
or
xor
lcall
call
push
xlat
enter
es
jb
out
mov
aad
sahf
outsb
js
pop
std
idivl
cmp
jge
push
adc
pop
int
pop
sbb
cmp
cld
loopew
xlat
shrl
stos
lret
jo
enter
movd
fldcw
in
push
fildll
push
je
out
ret
xlat
push
in
xchg
jg
out
stos
dec
mov
xor
sbb
dec
add
movsb
or
xor
add
mov
push
jg
lahf
into
push
sbb
rol
sub
mov
fdivrs
ret
fwait
add
dec
mov
push
iret
daa
adc
ret
or
cmp
aas
enter
and
test
sbb
cmpsb
mov
ljmp
std
xchg
push
ficoml
into
mov
imul
or
push
rcr
add
or
mov
mov
or
jo
lcall
mov
cld
and
out
sbb
adc
in
or
and
jnp
jb
gs
mov
pop
cmp
cli
adc
adc
xlat
inc
push
popa
aaa
cmp
insb
sbb
into
mov
mov
cmp
ja
pop
mov
mov
cwtl
fidivrl
div
mov
cmp
das
jmp
cli
xchg
sub
cwtl
pop
inc
js
imul
cmp
aaa
jb
or
stos
pop
call
sub
mov
js
lahf
xlat
je
test
sbb
xchg
mov
daa
sbb
cmp
aaa
lret
or
pop
mov
into
dec
jbe
fsub
in
or
js
add
mov
mov
pop
aaa
xor
cltd
ss
xchg
jg
ljmp
cmp
lcall
test
lds
mov
and
test
ret
mov
divl
xchg
jbe
or
xchg
scas
enter
in
cmp
xor
cmc
in
mov
aad
mov
inc
mov
jp
cli
adc
jne
in
adc
mov
fsubp
int3
js
enter
and
lret
rorl
or
xor
fs
cwtl
xor
pop
arpl
stos
shrl
or
pop
les
sub
inc
call
mov
and
mov
sbb
fbstp
jp
jl
out
mov
clc
jns
dec
add
fsubrl
fsubs
clc
test
sub
cmp
aad
xor
push
mov
and
cmpl
push
push
and
mov
pop
out
pop
dec
adc
pop
mov
adc
dec
subl
test
lcall
xlat
cwtl
xchg
jg
sbb
pop
adc
testb
out
sti
or
pop
pop
sub
sub
lret
xor
push
dec
jns
out
jo
mov
xchg
adc
fwait
sub
testb
aad
mov
stos
sbb
lods
loopne
fdivrs
dec
fiaddl
stc
aaa
dec
or
push
pop
jl
shlb
hlt
xchg
pop
mov
int
xchg
lret
dec
ds
out
sbb
jg
call
pop
mov
movl
pop
popf
or
rolb
xchg
dec
loopne
iret
or
mov
int
mov
lret
leave
pop
dec
and
and
int
lea
adc
cwtl
pop
mov
test
sub
mov
xor
cli
div
nop
cmp
mov
xlat
in
or
mov
xchg
pop
lea
enter
loope
push
xchg
xchg
sbb
test
fmuls
lret
or
ret
dec
ficompl
aad
arpl
testl
add
xchg
fistps
mov
push
addl
dec
jo
inc
xchg
loop
loop
inc
aad
es
sub
in
shl
repz
and
xor
mov
mov
xor
out
or
push
dec
push
mov
add
mov
xchg
out
mov
mov
jp
xchg
cmc
cmp
adcl
aas
inc
pop
ljmp
ret
or
movsl
ret
mull
mov
sbb
cmp
dec
in
mul
ljmp
mov
negb
sbb
testb
push
in
pop
push
xor
jg
hlt
pop
mov
out
ficoml
jbe
jp
mov
mov
cli
sub
adc
xchg
or
pop
stos
pop
or
xchg
lcall
add
aad
lcall
sub
xchg
ret
cmpsl
add
xchg
xlat
cmp
test
insb
stc
pusha
pop
mov
enter
addb
mov
repnz
xchg
mov
inc
daa
mov
imull
loop
stos
adc
pop
outsl
or
xchg
mov
xor
imulb
in
mov
cs
movsb
enter
cwtl
call
xchg
jnp
xchg
push
rorl
enter
dec
and
mov
gs
dec
rorw
leave
xor
add
pop
test
xchg
pop
js
xchg
lds
pop
jbe
and
adc
enter
cmpsb
leave
stc
lea
pop
push
rorb
imull
or
lcall
cmp
addl
mov
push
sub
pop
daa
insl
lea
sbb
imul
out
mov
testb
sub
add
test
xor
in
add
add
cmp
in
call
lret
fisubl
push
popa
js
pop
mov
sbb
out
pop
mov
mov
mov
decl
add
mov
jmp
and
test
jp
ret
jmp
cmc
orl
mov
dec
xchg
ret
push
ret
in
mov
adc
dec
je
sub
mov
daa
lret
pop
jmp
mov
xor
mov
or
or
js
sbb
xchg
jmp
xchg
cmp
cmp
mov
lret
lret
jl
loope
fdivrs
pop
ljmp
mov
lret
inc
inc
enter
test
xchg
test
in
or
cmp
shrb
in
or
in
adc
loope
cmp
xchg
jge
mov
je
or
xchg
xor
xchg
hlt
sub
sub
sbb
fildll
mov
xor
pop
aad
xchg
fdivrl
clc
fsubrs
jns
out
mov
icebp
cwtl
test
in
call
mov
lret
in
add
out
imul
mul
clc
jno
xchg
adc
xchg
cli
mov
and
xor
ret
ljmp
pop
stos
in
xlat
and
mov
jne
xchg
pushf
or
popf
cmp
aas
push
mov
shl
xchg
cmp
jmp
sbb
iret
cwtd
cmp
enter
sahf
jb
xchg
or
in
mov
jb
mov
pop
sbb
jg
mov
mov
test
mov
cwtl
mov
cltd
mov
xor
mov
es
xlat
dec
lds
mov
int3
add
ret
clc
inc
int3
xchg
jo
in
cltd
jae
sub
inc
ljmp
cli
xchg
mov
pop
xor
insl
xorb
jmp
cmc
addr16
mov
xlat
stos
cmp
mov
push
add
lret
or
shrl
fucomp
mov
data16
sub
mov
in
shl
dec
call
mov
push
xchg
cmc
nop
out
test
popf
cmp
dec
lds
jno
or
rclb
sub
mov
or
inc
push
addr16
out
imul
or
ljmp
lret
pusha
xchg
movsl
inc
mull
ficoml
fadd
xor
stos
xlat
fcompl
icebp
nop
aaa
sub
add
stos
pop
mov
xor
imul
xor
or
xor
xchg
cmc
js
imul
cmp
xor
sbb
leave
cmpb
lret
cmpsl
sar
xbegin
shll
xchg
dec
pop
xchg
jbe
call
push
or
out
aaa
adc
call
in
pop
cwtl
inc
shll
sbb
xor
enter
popa
popf
adc
dec
and
clc
adc
add
pop
rcrb
addr16
fisttps
shlb
or
mov
sti
push
cli
inc
das
push
push
je
sbb
xchg
mov
les
clc
adcb
fadd
fwait
jne
adc
inc
mov
loope
xchg
test
or
lret
rol
clc
pop
sti
in
je
jp
jb
std
jmp
fwait
sbb
mov
dec
push
out
js
decl
int
aaa
sbb
jne
int3
dec
push
in
jmp
sub
xchg
shl
xor
cwtl
test
dec
jecxz
push
mov
mov
hlt
cmp
jg
sub
test
dec
adc
inc
test
adc
or
mov
stos
js
sarl
cltd
inc
lret
mov
xor
cmp
dec
out
sbb
lods
rcrl
es
mov
inc
mov
idiv
clc
orb
or
fidivrl
jbe
mov
pop
fcmove
shlb
stos
mov
mov
out
cmp
sub
call
cmpb
add
dec
test
orl
mov
pop
jno
aad
sbb
daa
mov
loope
sbb
mov
sub
cwtl
mov
jbe
xor
insl
fistps
js
popf
ret
mov
mov
les
loopnew
xlat
in
fdiv
cmp
dec
fists
clc
cmp
neg
out
lods
frstor
lret
lods
mov
pop
or
lahf
shlb
jno
sub
push
fiadds
xor
push
or
vpshlq
xor
lods
adc
jmp
loop
js
or
out
and
adc
fimull
pop
inc
push
inc
adc
dec
and
daa
and
mov
outsb
hlt
add
lock
mov
sub
aas
imull
imul
mov
mov
sbb
xchg
inc
test
loope
ljmp
lret
in
jbe
jg
fcmovu
jmp
das
adc
sbb
dec
in
push
stos
xlat
pop
cli
notl
ljmp
dec
sub
push
mov
fcmovne
insb
mov
ljmp
movsb
mov
lds
in
inc
fsubs
notb
fcmovb
sub
add
pop
dec
lcall
or
xchg
mov
inc
or
mov
sbb
daa
shll
addr16
les
hlt
pop
hlt
or
dec
and
mov
call
ds
jmp
leave
adc
movsb
jno
pop
add
mov
xchg
pusha
mov
jbe
mov
mov
xchg
mov
mov
jae
lcall
or
hlt
lcall
xor
fstpl
adcl
cmc
inc
xlat
sub
vcmpss
add
mov
add
pop
mov
mulb
sbb
dec
fnstcw
out
or
push
jmp
sub
jmp
movsb
fwait
testb
fwait
sub
gs
cmc
push
ljmp
imul
or
sub
inc
fsubs
and
aas
movsl
xchg
cli
aad
daa
mov
xlat
or
clc
sub
sbb
je
mov
xor
dec
adcb
movsb
ret
jg
dec
or
les
mov
dec
imul
stos
mov
inc
addr16
lret
cmp
pop
sbb
imul
mov
enter
out
stc
jae
mov
mov
movsb
ror
ss
aas
inc
add
add
addr16
test
shl
or
mov
xchg
out
and
aad
xor
adc
lea
or
dec
cmpsl
imul
or
push
ficomps
push
xchg
lds
in
rcll
adc
pop
in
xchg
push
mov
jmp
fcompl
in
std
aas
dec
popf
dec
stos
cmp
sbb
enter
push
xchg
movsb
sub
icebp
mov
hlt
mov
pop
aad
or
out
dec
bound
mov
mov
push
lret
dec
mov
or
mov
or
jbe
popa
call
mov
mov
mov
jle
add
aaa
cltd
add
cmp
adcl
pop
sub
push
cmp
js
sti
sbb
jbe
imul
add
iret
out
lds
clc
sbb
enter
xor
mov
imulb
push
aaa
popa
mov
mov
fldenv
cmp
cltd
mov
loop
adc
pop
dec
test
mov
adc
or
cmp
sub
sbb
xor
xlat
jp
inc
xor
in
mov
fidivrl
jbe
inc
jbe
aaa
inc
add
jp
div
xchg
mov
sbb
mov
cmp
mov
xchg
xchg
iret
push
xchg
pop
mov
movsl
cmp
pop
loope
daa
enter
out
loopne
mov
sbb
mov
pop
addr16
ja
loope
sub
jge
xchg
test
adc
test
or
or
and
sbb
test
pop
pop
xlat
cmp
push
dec
xor
test
in
sub
fcmove
or
pop
mov
cmc
rcr
xor
sub
lret
mov
sub
or
rcl
js
out
fwait
nop
rcll
negb
mul
das
test
in
aad
icebp
xchg
test
sub
mov
mov
clc
mov
stos
je
daa
add
xlat
in
jno
lds
sbb
dec
int
in
pushf
cli
push
jmp
clc
xchg
xchg
lods
sub
fadds
mov
mov
test
cmp
jo
adc
cmp
sub
insl
push
mov
in
imul
mov
test
or
int
std
inc
testb
call
or
adc
xchg
or
loope
mov
leave
in
add
dec
pop
or
mov
lods
aas
push
mov
lcall
cmc
lds
inc
dec
data16
mov
ljmp
dec
fs
fdivs
pusha
jae
js
mov
cwtl
pop
fdiv
shrb
les
in
test
or
or
mov
sub
pop
push
cwtl
cmp
iret
add
roll
and
and
jl
movsb
pop
decl
pop
xor
test
daa
add
jbe
pop
es
sbb
sbb
pop
mov
gs
add
add
inc
enter
js
je
xchg
mov
pop
ss
cli
lds
dec
repnz
sub
dec
lods
mov
push
sub
movb
xchg
mov
xchg
aaa
inc
mov
mov
cmp
outsb
jle
addl
pop
cld
out
into
push
aaa
or
loope
pop
cmp
loope
xchg
cmp
xchg
cmpsb
xchg
aad
stos
jp
or
push
dec
ljmp
cmp
cmc
jbe
dec
leave
flds
cmpsl
fisttps
fdivs
jmp
or
xchg
sbb
cmc
or
mov
cmc
xor
testl
popa
aad
negb
fnstenv
hlt
add
es
add
mov
xor
out
or
js
dec
in
xchg
xchg
dec
test
and
jl
lea
cmc
mov
or
pop
mov
xchg
mov
xchg
shlb
push
add
lods
push
cmp
fcompl
dec
mov
daa
mov
adc
test
enter
cwtl
aad
out
push
es
sub
jbe
dec
xlat
pop
xchg
jl
xchg
mov
sbb
mov
leave
mov
loope
mov
sbb
adc
dec
cmp
test
int
jle
je
stos
fstps
cltd
test
mov
in
ja
inc
inc
push
cmp
ljmp
xlat
push
pop
sbb
jb
in
xor
jo
dec
and
gs
mov
inc
push
pop
insl
push
repnz
cmpsl
or
insl
jb
roll
shll
xchg
and
bound
dec
jle
mov
shl
xchg
addr16
xchg
je
movsb
or
xchg
lcall
aad
int
stos
cli
lahf
outsb
cmp
mov
sub
mov
imulb
pop
and
imul
lret
xchg
subl
iret
cmp
xor
in
inc
pop
xor
mov
jmp
xchg
push
fisubl
fadd
lods
xchg
inc
daa
inc
sbb
icebp
cmp
and
aaa
pop
test
les
dec
cmp
mov
mov
or
sub
pop
dec
mov
mov
scas
sbb
call
push
ret
enter
aad
and
push
fidivrl
xchg
push
mov
push
shll
dec
sbb
data16
cwtl
lods
je
lcall
sbb
adc
adc
jp
dec
xor
cmp
out
xchg
jmp
gs
icebp
inc
stos
xlat
call
mov
outsl
mov
sbb
es
call
idivb
out
xlat
mov
in
jecxz
xchg
imull
in
aad
popf
adc
call
mov
xlat
stos
aaa
xchg
push
out
mov
add
cmpsl
movsb
les
jge
pop
push
mov
sub
inc
insb
mov
fdivrl
sub
out
cmp
add
xlat
sbb
and
xchg
dec
push
nop
out
sub
in
cmpsb
iret
xchg
jp
mov
push
stos
mov
out
in
sbb
lcall
mov
and
adc
push
add
xchg
jp
and
outsl
xor
lcall
inc
clc
in
sbb
mov
ljmp
dec
imul
xor
scas
fiaddl
fs
popf
and
out
or
mov
cmp
or
jne
mov
mov
fimull
test
jmp
mov
or
fcoms
ljmp
mov
fs
adc
cli
aas
pop
clc
test
cmp
xchg
xchg
and
ret
pop
popf
and
out
lret
icebp
xor
pop
testb
in
dec
pop
in
loope
adc
lcall
test
imul
jmp
pop
out
cmp
stos
int
in
lret
push
lea
and
cwtl
xchg
xlat
dec
pop
mov
dec
or
test
cmpsb
js
sub
push
dec
imul
daa
cmp
adc
imul
iret
sub
cmc
adc
subb
jg
or
test
xor
xlat
xchg
fs
je
cmp
sbb
int
insl
xor
jp
sub
test
pop
or
mov
sbb
and
notb
imul
imul
or
cwtl
jp
decl
lds
call
leave
testb
sbb
imul
pop
mov
icebp
sub
lret
daa
in
add
fiaddl
insl
ret
mov
push
sbb
push
pop
outsb
fcomps
push
in
jbe
dec
adc
mov
push
jle
or
cmpsb
fimull
es
or
or
out
cmp
cs
push
orb
cmpsb
and
xchg
dec
stc
fcom
xor
jp
insl
cmc
divl
ss
push
push
xchg
clc
cmp
mov
cwtl
cmp
imul
inc
pop
dec
lea
lds
xor
xor
fsubrl
pop
xlat
std
in
cmc
fsubs
sbb
test
or
pop
ljmp
mov
jmp
test
out
cmp
test
mov
push
cmp
mov
cmpb
aaa
ja
jmp
add
imul
xor
sub
lea
sub
push
lret
xor
fsubrs
sbb
cwtl
jp
pop
add
or
repz
repz
fwait
dec
sarl
push
rorl
sub
dec
xchg
and
cld
scas
and
loopne
jmp
shlb
add
adc
cli
mov
movsb
mov
daa
les
out
shlb
mov
jge
or
push
daa
scas
hlt
rcll
ljmp
in
inc
sahf
cmp
in
pusha
jp
roll
enter
jae
pop
clc
adc
fmuls
dec
iret
sbb
divl
mov
in
sub
mov
and
hlt
loop
mov
xchg
mov
sbbl
mov
or
sbb
jns
jno
inc
aad
testl
in
addr16
xchg
nop
xchg
dec
pop
xlat
data16
mov
fprem1
cmp
imul
mov
inc
mov
dec
test
cwtl
divl
dec
mov
sbb
mov
call
mov
adc
mov
out
or
cmp
cmp
pop
aad
xchg
idiv
or
push
inc
mov
jbe
cmp
dec
lea
ljmp
sti
sub
push
xchg
bound
mov
aaa
lods
out
dec
or
je
clc
daa
filds
ret
les
ret
fst
xchg
adc
mov
roll
xlat
pop
test
out
aaa
mov
test
sub
addr16
stos
and
push
or
and
das
mov
loope
xchg
mov
xlat
jl
xchg
andl
addr16
xor
fidivl
int3
ljmp
lods
mov
stos
sub
cmp
js
jp
insb
pop
call
iret
cmp
and
mov
pop
cmpl
pop
sbb
repnz
fwait
subl
shrl
jp
jno
or
add
inc
imul
jb
mov
inc
shrb
mov
pop
aas
gs
out
pop
and
mov
cwtl
test
sbb
mov
insb
pop
inc
mov
notb
pop
cmpsl
daa
fldcw
or
hlt
fnsave
push
xlat
xorl
pop
jo
or
sub
stos
daa
jb
mov
adc
xor
je
push
rcrl
int
mov
or
sbb
xchg
dec
cmpsb
test
ret
mov
inc
inc
push
lcall
mov
in
xchg
dec
call
mov
cli
enter
mov
pop
push
ljmp
out
push
mov
idiv
je
mov
pop
xor
out
xchg
jl
mov
notl
xor
dec
idivl
or
add
addr16
xchg
std
xchg
lret
std
add
popf
jbe
xchg
les
push
mov
and
or
cmp
negl
cltd
inc
mov
test
enter
sti
ret
not
push
xchg
loope
aaa
jbe
test
sbb
sahf
cs
pop
pusha
xchg
aas
xor
dec
jns
mov
pop
inc
lcall
lret
dec
iret
jns
pop
sub
jbe
into
dec
xchg
es
xor
sbb
dec
outsb
sub
pop
test
lret
pop
aad
and
sbb
adc
stos
jp
sbb
inc
inc
je
xchg
add
das
into
mov
mov
mov
sahf
mov
push
jp
jg
clc
hlt
movb
dec
push
idivb
push
xor
daa
pop
cli
jno
inc
lret
and
ljmp
enter
mov
cmp
in
sbb
mov
dec
cli
enter
pop
imul
sub
cmp
push
dec
cwtl
xchg
imul
pop
bound
test
cmc
hlt
test
xlat
addl
cmp
sbb
in
push
sbb
and
cmpl
push
mov
mov
mov
lcall
cmp
mov
out
xchg
addr16
cmp
popf
pop
vpcmpeqd
push
mov
xchg
push
push
hlt
test
adc
pop
icebp
mov
fiaddl
mov
dec
js
inc
movsb
cmpsb
xchg
lret
or
js
fnstenv
dec
out
mov
inc
mov
xor
pop
lods
in
push
mov
cmpsl
add
or
xor
sbb
pop
ret
stos
fcom
jae
roll
hlt
divb
dec
push
scas
sub
icebp
mov
insb
xor
mov
mov
or
pop
je
dec
xchg
jmp
cmp
mov
mov
aaa
fldl
aaa
mov
test
setg
fidivrl
in
call
xchg
out
je
cmp
dec
cmp
mov
jbe
int
lea
push
mul
inc
out
cmc
aam
pop
das
dec
push
fisttps
and
jo
mov
fdiv
lahf
loop
push
rol
aaa
notl
mov
insb
xor
mov
or
xchg
dec
xor
stos
jmp
fcmovb
std
sub
dec
cs
inc
cmp
ret
cwtl
xchg
mov
adc
and
outsl
sub
inc
imull
in
and
pop
rolb
lcall
jg
sub
inc
mov
lock
add
push
sub
pop
cmp
stos
xchg
pop
js
and
pop
and
push
adc
push
test
daa
mov
mov
test
inc
pop
arpl
stos
cmpsl
and
ret
call
loop
mov
xor
js
cwtl
aaa
lret
mov
loopne
pop
cmp
cltd
sbb
or
test
sbb
jp
xchg
icebp
sbb
ljmp
bnd
popa
mov
ljmp
scas
lcall
sub
pop
inc
imul
jno
xchg
inc
lcall
cli
aaa
cmc
push
adc
and
cmp
pop
cmp
nop
out
push
pop
std
pop
icebp
dec
xchg
sub
shll
and
add
movsb
aad
and
testb
dec
addr16
sarl
push
lcall
mov
mov
ror
lret
dec
xchg
mov
movsb
aad
cmp
fisttpll
or
les
and
or
mov
push
enter
mov
jne
or
xor
enter
stc
cmpsb
jbe
xchg
pop
dec
xlat
idivb
sbb
xor
in
push
aaa
orb
inc
lahf
sub
cmp
jmp
out
jmp
sbb
je
shlb
and
push
fs
sti
mov
movl
and
aaa
ficoml
insl
inc
sbb
js
cmp
rclb
outsb
and
dec
cli
add
inc
fadds
stos
dec
jl
sub
ja
xchg
lcall
fisubl
push
pop
in
push
sbb
fs
inc
push
sbb
mov
xlat
loope
and
or
or
shlb
xchg
fwait
sbb
inc
cmpsl
mov
js
push
mov
clc
push
arpl
or
sub
sub
test
push
push
aad
jbe
and
dec
add
out
cmc
movsl
xlat
jbe
out
xchg
pop
lret
or
cli
or
or
cmc
loope
sbb
test
mov
or
insb
lods
es
rorl
xor
call
adc
jp
or
push
test
testb
sub
pop
mov
jl
sub
mov
mov
daa
fcompp
dec
cmp
mov
or
jbe
cmp
cmp
ss
sub
xchg
push
cltd
repz
add
dec
hlt
mov
and
dec
inc
mov
push
cmpsb
xchg
sbbl
std
in
addr16
or
lcall
dec
imul
insl
mov
imul
and
mov
jbe
sbb
mov
mov
or
mov
adc
daa
pop
or
add
xchg
popa
gs
adc
enter
cmp
lea
imul
jp
cmc
adc
imul
and
jle
in
enter
je
testb
popa
pop
out
mov
adc
sbb
xchg
xlat
imul
loopne
lret
mov
lods
stc
push
daa
mov
leave
shlb
rol
wbinvd
aad
xchg
pop
sub
jns
or
daa
or
mov
xor
mov
imul
and
int3
inc
or
xor
mov
inc
lods
dec
push
ret
data16
xchg
inc
pop
cmc
stos
sbb
out
and
adc
push
test
xchg
mov
mov
aad
mov
popa
les
in
or
add
inc
push
cmp
vrcpps
cli
dec
fcmove
fnstcw
adc
lahf
aad
mov
enter
lahf
lret
sub
fs
mov
sbb
pop
mov
mov
xchg
gs
xchg
mov
xchg
out
sbb
mov
push
dec
inc
into
push
or
dec
mov
leave
lret
test
in
mov
xchg
mov
cmp
ljmp
pop
imul
dec
sbb
add
lea
scas
gs
pop
mov
cmpb
mov
cs
cmp
jmp
and
sub
mov
loope
sub
lret
stos
add
add
je
xor
pop
push
cmpsb
sti
adc
inc
roll
jne
add
sbb
stos
icebp
xlat
ficoml
jp
sub
cli
jg
dec
lcall
addb
xchg
cli
insl
add
fdivrs
xchg
test
in
push
clc
testl
ja
sbb
xchg
lahf
and
out
dec
sbb
fs
sbb
jmp
sub
mov
inc
testl
mov
insb
outsb
icebp
les
mov
push
lret
sbb
enter
jp
xor
fcmovnu
leave
mov
leave
xchg
inc
xchg
dec
loop
enter
pop
or
and
negb
movb
sbb
lcall
xchg
movsl
adc
sbb
cmp
outsb
xchg
push
cmp
push
rolb
and
ds
test
or
dec
jp
pop
dec
mov
cwtl
rclb
lcall
push
repnz
mov
movb
int
jbe
insl
dec
or
dec
cmp
lock
aad
fisubrl
add
mov
outsb
in
push
mov
dec
ficoml
dec
sbb
test
movsl
daa
inc
cmc
scas
rorl
push
test
std
and
cld
sub
fstpl
je
or
popf
out
insb
imul
sbb
cwtl
mov
mov
cmp
or
sbb
mov
jp
xchg
aaa
cmp
xor
clc
push
fmuls
cmc
fs
and
dec
add
dec
call
ffreep
push
cmc
daa
loope
add
and
movsb
cmp
mov
sbb
xor
sub
pop
inc
lret
or
cmp
or
mov
insb
dec
iret
mov
in
ror
ds
lahf
popa
loope
addr16
aas
lcall
lret
cmpsb
test
daa
enter
push
lcall
or
jle
inc
nop
inc
ljmp
idivl
xor
mov
leave
push
mov
xchg
lcall
call
cmp
cmp
mov
out
mov
cmp
addr16
fistps
xor
cmp
scas
pop
lret
mov
jp
sbb
sub
in
or
ja
cmp
clc
sub
and
aaa
imul
adc
adc
fidivrl
jmp
push
movsb
sti
push
sub
imulb
mov
and
sti
ljmp
mov
mov
and
push
lcall
lahf
divl
xor
cltd
imul
sbb
pop
or
pop
imul
loope
lea
ljmp
or
cwtl
cmc
fldenv
push
jge
movsb
jecxz
js
mov
inc
mov
adc
into
dec
push
test
daa
mov
js
mov
push
lret
cmpsl
lcall
xchg
dec
loopne
mov
sub
gs
push
and
repnz
insb
push
mov
cli
scas
push
push
mov
call
adc
ret
mov
loope
call
in
cmp
xchg
sbb
push
mov
pusha
mov
sub
clc
or
jmp
and
loopne
dec
xchg
das
fmuls
mov
movsl
sbb
insw
pop
fcomps
push
movsb
lds
bound
movl
pop
mov
addr16
js
lea
xchg
daa
inc
dec
pop
out
mov
rcrb
cmp
mov
push
dec
lods
inc
clc
push
in
add
lcall
adc
shlb
mov
adc
call
out
out
sub
adc
xchg
add
xor
push
mov
cmp
mov
sbb
push
shr
call
aaa
std
dec
or
test
or
inc
js
inc
inc
dec
xchg
aad
add
xor
lret
add
or
loop
insl
popa
pop
imul
adc
push
cmc
je
cmp
movsl
mov
or
popa
or
aad
inc
pop
mov
insl
and
cmp
jecxz
xlat
xchg
mov
sbb
mov
addr16
jp
in
push
sbb
add
cwtl
rolb
sbb
das
loope
pop
mov
or
ficomps
xchg
lds
cli
push
mov
aaa
mov
test
cmp
jecxz
mov
mov
or
cmc
push
fnsave
hlt
out
addr16
in
mov
jl
and
sub
jne
lcall
jg
xchg
pop
sub
dec
test
sub
xchg
push
xlat
dec
sub
lcall
jne
pop
adc
cli
dec
sub
adc
adc
xchg
xchg
dec
push
mov
ret
bound
xchg
scas
cmpl
xor
xlat
adc
jecxz
pop
enter
icebp
imull
cmc
sub
xchg
or
sbb
lret
pop
mov
cmp
dec
lea
pop
ficompl
mov
in
mov
les
addr16
shll
lret
nop
xchg
out
adc
mov
ja
xchg
test
fisttpll
dec
or
ret
andb
movsb
lret
mov
cmc
xor
sbb
imull
inc
jno
lret
insl
int
shr
sbb
or
lret
or
mov
xchg
sub
cmpsl
sub
xchg
enter
jge
jo
sahf
aaa
js
data16
icebp
xchg
negl
lds
push
in
jns
in
cmc
fdivp
loope
mov
pop
test
orb
fdivrl
adc
enter
ljmp
pop
sub
daa
or
pop
lret
sub
inc
bound
stos
arpl
adc
mov
stos
js
dec
sub
sub
mov
pop
or
rcl
sbb
leave
dec
or
xchg
daa
xor
test
adc
call
out
lret
xor
xor
mov
loope
jbe
pop
dec
or
testl
inc
cmp
xacquire
out
xchg
or
lret
dec
sbb
pop
ds
xlat
lcall
pop
popf
hlt
cmp
inc
leave
wrmsr
pop
mov
subl
bound
xor
sub
stc
adc
or
test
push
mov
xchg
dec
lret
aaa
or
lcall
nop
xchg
ljmp
push
sbb
or
in
sbb
adc
mov
stos
pop
mov
js
mov
cmp
dec
cmc
fimull
js
jmp
jp
enter
cmp
pop
in
add
pop
aad
cmp
imul
lret
or
jo
cli
cmc
sbb
rorl
mov
sbb
xchg
fbstp
mov
xor
cmp
adc
add
dec
stos
lods
sbb
ret
add
jle
and
rol
pop
test
lret
div
imul
pop
addb
out
mov
repnz
xor
push
cmp
xchg
jnp
lds
add
out
mov
add
int
mov
sub
loope
xchg
push
cwtl
stc
and
test
fdivs
lret
xchg
aad
adc
int
lea
mov
sbb
and
ss
imull
or
in
aad
xchg
in
out
adc
jle
lock
xor
not
or
call
scas
lds
ret
pmulhuw
pop
lret
xchg
lcall
js
push
add
xchg
fwait
xchg
xchg
rorb
sub
loopne
inc
and
dec
cmp
adc
pop
js
mov
inc
cltd
aaa
dec
sub
aad
or
out
lea
lcall
mov
cwtl
cmc
aad
cmp
jp
mov
pop
outsb
sub
adcb
xlat
jmp
pop
mov
or
sub
enter
popa
hlt
mov
imul
xchg
jb
jae
cmp
push
mov
lods
stos
mov
mov
xlat
addr16
enter
mov
test
pop
mov
or
out
std
orb
or
ret
adc
test
ljmp
fisubrl
mov
or
sbb
aad
sarb
mov
xor
jbe
cmp
aad
xor
and
loope
sbb
pop
cmp
in
mov
sbb
or
aad
xor
push
movsb
and
mov
addr16
mov
pop
movsl
call
mov
or
sub
test
mov
xchg
sbb
insl
pop
inc
int
popf
stc
and
rcr
xchg
fldcw
pop
rolb
push
pushf
inc
idivb
mov
jo
cli
fadds
in
xchg
add
out
adc
addr16
imulb
adc
fcmove
rcrl
dec
sbb
fmull
pop
popa
sub
xlat
pop
imul
cmp
out
xchg
xchg
dec
je
xchg
push
loope
adc
sbb
jnp
xchg
in
xchg
mov
jp
popa
dec
rclb
or
inc
not
adc
xor
xor
mov
pop
cmp
dec
mov
sub
or
sub
push
dec
aaa
testb
in
pop
ljmp
test
and
sbb
mov
and
xchg
test
js
cmc
je
mov
int
pop
mov
xlat
mov
test
jno
stos
test
insl
mov
jp
pop
or
fiadds
test
out
stos
insb
jmp
call
and
shlb
push
andb
fwait
mov
cmpsl
out
mov
lds
pop
or
hlt
pop
and
cmp
mov
rcl
aad
int
add
mov
lret
pop
mov
sbb
xor
or
pop
add
std
in
xchg
popf
in
xchg
js
pop
fisttps
adc
fsubrl
or
dec
xchg
out
out
adc
cmp
hlt
mov
cmp
insl
sub
xlat
cmp
mov
sbb
mov
imul
mov
in
imul
xchg
ficoml
cmp
sub
mov
xchg
imull
lret
xchg
stc
int3
dec
mov
or
pop
and
mov
lcall
sub
xlat
fwait
adc
or
or
push
mov
and
pop
or
lds
sub
pop
leave
mov
mov
stos
addr16
idiv
jbe
out
lcall
xchg
aaa
jecxz
mov
fildl
fmul
mov
shlb
daa
rcrl
or
test
sub
sbb
dec
lds
xchg
dec
std
es
js
mov
notb
xchg
jl
je
dec
clc
out
lcall
jns
jne
cmc
les
stos
fwait
loopne
xchg
outsl
call
cmp
mov
mov
push
mov
pop
mov
push
sub
mov
pop
dec
xchg
mov
rolb
xchg
clc
cli
xchg
test
in
or
mov
push
xchg
pop
inc
repnz
call
outsl
and
cmp
shrl
cli
xlat
or
cs
xor
shll
pop
inc
imul
ret
fisubrl
shll
dec
and
push
lret
xchg
mov
in
adc
mov
or
aaa
inc
stc
jle
mov
mov
cmc
adc
movb
pop
or
mov
sbb
cmp
lret
ficompl
jge
mov
cs
jb
jecxz
mov
xchg
stos
ljmp
idivb
testl
xor
push
loopne
aaa
jp
sub
arpl
les
and
xlat
daa
addr16
or
test
aad
cmp
adc
mov
das
icebp
xor
in
xchg
or
movsl
mov
std
ret
daa
pop
je
xchg
cltd
dec
cmc
cwtl
out
sahf
or
xor
xchg
out
clc
test
imul
add
or
xchg
repnz
out
and
fcmovne
adc
mov
imul
stos
and
xchg
enter
mov
in
les
cmpsb
aad
mov
sbb
lret
xchg
xchg
mov
add
in
cltd
das
push
divl
cmpb
xchg
sbb
call
push
js
inc
sbb
call
jl
idivl
lcall
mov
fsubs
int
xchg
adc
inc
fmuls
mov
lret
xor
imul
jmp
mov
test
mov
aad
fisubrl
dec
idiv
sub
push
lds
ljmp
mov
or
loope
loopne
cmp
push
dec
shrb
xchg
dec
xor
pop
aad
jmp
jmp
popf
out
hlt
mov
not
imull
mov
push
xchg
xor
imul
fs
in
push
shll
mov
aaa
inc
dec
hlt
enter
dec
cmp
outsl
fwait
mov
test
mov
cmp
mov
out
sbb
inc
adc
or
sbb
mov
mov
jne
pop
imul
mov
xor
negb
cltd
xchg
pop
cwtl
or
jp
fucomp
cmp
xchg
test
lds
leave
mov
xor
out
mov
sbb
lcall
mov
lret
out
sbb
add
mov
out
in
rcrl
jg
sub
dec
cwtl
mov
pop
xchg
xor
js
imulb
xchg
mov
or
jbe
sub
jmp
xor
loope
lcall
out
add
idiv
mov
dec
sbb
xor
rcr
daa
sub
pop
mov
ss
add
outsl
push
push
lcall
sbb
ret
fdivrs
sub
sti
push
dec
mov
pop
orl
dec
cmp
sbb
lea
mov
pop
jl
loope
jp
xchg
adcl
sbb
xor
or
sahf
mov
mov
pop
notb
loope
imull
gs
pop
jl
xchg
xor
pop
mov
jmp
mov
xor
xchg
or
int
or
rcll
rcr
and
call
sbb
push
fdivrs
sbb
aaa
mov
arpl
pop
imull
cwtl
call
jge
fldenv
jmp
dec
lret
xchg
enter
lret
js
cmp
mov
dec
in
cmp
xlat
mov
mov
xchg
negl
mov
push
loopne
les
mov
fs
xchg
hlt
sub
psrlw
mov
pop
xor
jecxz
out
ljmp
pop
imul
sbb
bound
aaa
rclb
jp
enter
xchg
sbb
aaa
add
or
es
je
cmp
mov
xchg
out
loop
and
sbb
add
xor
inc
notl
adc
or
jbe
lcall
mov
sahf
add
push
test
orb
sbb
pop
mov
ljmp
lret
outsl
mov
sub
cmp
lret
fistpl
das
lea
mov
imul
fistps
jg
ljmp
mov
movsl
pop
icebp
and
xchg
inc
mov
out
add
mov
pop
sub
enter
and
sbb
add
call
rol
test
fs
sbb
enter
cmp
adc
test
lcall
xlat
stos
fcompl
mov
call
mulb
sub
xorb
aad
adc
or
imul
xchg
xor
dec
inc
add
mov
int3
mov
imul
dec
pop
inc
in
cli
adc
cmp
jl
mov
sbbb
adc
and
divl
xchg
cli
sbb
fidivs
or
lahf
imul
xchg
sub
sbb
lds
push
nop
fdivrs
je
add
stos
cmc
test
imul
mov
xor
test
push
test
outsb
clc
xchg
push
sbb
mov
xchg
repnz
popf
pop
xchg
subl
aaa
loop
pop
and
xbegin
insl
sub
clc
hlt
loope
mov
pop
fldt
test
jbe
movsb
mov
lds
mov
adc
in
enter
sub
in
addr16
pop
xchg
test
cmpsb
hlt
push
xchg
inc
icebp
and
sbb
cli
mov
pop
pop
adc
movsb
push
jl
cmpsl
mov
and
adc
sti
shrl
inc
ljmp
mov
in
test
dec
sbb
jns
sub
enter
mov
push
int3
out
gs
into
lcall
and
imul
push
addr16
and
in
xchg
lds
lcall
or
into
cmp
mov
xchg
push
xchg
mov
fnsave
adc
mov
ljmp
imul
cwtl
adc
cmp
je
sub
pop
daa
scas
test
gs
rcll
ljmp
movsb
nop
pop
je
jp
inc
sbbl
sbb
pop
pop
mov
cs
jl
add
add
test
fsubl
clc
js
rcrb
mov
aaa
or
mov
mov
pop
dec
jl
push
call
mov
mov
cmc
out
test
xchg
adc
dec
in
in
insl
fstps
mov
jl
rcl
xchg
popa
and
out
leave
or
jmp
push
icebp
inc
sbb
fcomp
clc
dec
aad
int
std
cmp
int
and
fidivrl
and
mov
xor
xchg
or
std
or
movsb
enter
cwtl
jp
mov
and
jne
aad
hlt
xor
addr16
out
xchg
aaa
mov
ret
ljmp
add
xchg
sub
aaa
idivb
jp
adc
cmp
or
pop
xchg
cmp
xchg
pop
in
mov
arpl
or
xor
mov
aad
ljmp
in
jo
out
aaa
mov
out
sbb
pop
test
cmp
or
sub
mov
stos
cmpl
pop
or
push
mov
sub
je
mov
hlt
push
testb
out
clc
and
dec
mov
cwtl
cmp
stos
outsb
push
pop
pop
out
testl
mov
lret
rorl
call
aad
jmp
cmp
pop
adc
sbb
call
add
xlat
lret
or
xchg
addr16
and
cmpl
in
hlt
xchg
push
jns
ss
xchg
pop
or
cwtl
xchg
adc
dec
xchg
iret
loope
add
popf
or
sbbl
out
arpl
xor
pop
fildll
or
lcall
outsb
in
lds
xchg
xlat
insb
fldl
in
aad
in
in
mov
out
xor
scas
cmpsl
mov
cli
push
push
mov
xchg
mov
fmuls
mov
fstl
xchg
jno
fwait
dec
xor
fcomi
std
loop
ds
clts
testl
dec
pop
pop
cmpsl
push
lcall
rclb
pop
mov
jp
push
movsb
jp
cmp
cmpsb
sbb
or
mov
daa
mov
xor
test
mov
sbb
fadd
leave
pop
fldenv
js
push
cmpl
pop
je
mov
mov
cmp
lcall
mov
out
movsl
call
pop
aad
arpl
fadds
jmp
in
mov
xor
mov
add
enter
sti
cltd
sub
mov
mov
aaa
fidivl
jmp
lcall
mov
mov
sub
sub
or
cmp
mov
add
std
idivb
or
xor
je
cltd
push
pop
dec
sub
xchg
cmpl
dec
xchg
adc
addl
xorl
xlat
push
fimull
or
inc
xlat
pop
iret
mov
hlt
inc
and
shrb
cmp
pop
lea
lret
andb
adc
mov
stc
divl
das
xchg
lods
mov
add
subl
das
dec
out
sbb
pop
imul
outsl
fldcw
icebp
enter
mov
xchg
loop
and
cmc
and
aad
cmp
cld
jg
xchg
fsubrp
xchg
xchg
loop
or
mov
dec
mov
testl
dec
pop
jp
adc
shrl
aaa
cmp
sub
and
xchg
insl
push
jle
dec
lds
cmp
lods
in
adc
or
pop
das
mov
out
stos
std
mov
sbb
std
or
mov
dec
js
cmp
lret
add
mov
push
loope
sbb
dec
pop
orb
cmp
sub
daa
aad
mov
fldl
int
jmp
or
imul
addr16
out
repnz
push
sub
in
sbb
sbb
xchg
stos
adc
les
lcall
push
call
icebp
rol
jmp
xchg
jbe
int3
mov
mov
cmp
adc
leave
push
stc
lahf
xchg
inc
fucomp
inc
mov
orb
popa
jp
jge
int
xlat
mov
xchg
out
fsubl
sbb
in
xchg
daa
mov
lea
aas
ljmp
mov
adc
scas
inc
out
rcll
xlat
idiv
add
sbb
fwait
sbb
xchg
add
xchg
cmp
orb
call
sbb
sbb
imull
cmpsl
ljmp
xlat
aad
push
push
xchg
lahf
inc
xchg
dec
sbb
cmp
arpl
pop
dec
call
mov
es
dec
xchg
ret
mov
xor
mov
xchg
addr16
ljmp
cmp
push
popf
lods
insb
aad
adc
std
dec
pop
pushf
and
imul
in
sub
pop
cmp
mov
mov
mov
jmp
clc
mov
sbb
xchg
dec
xchg
test
daa
dec
cmp
jmp
cmp
enter
or
dec
ljmp
rorb
sti
push
loop
lret
dec
call
push
or
mov
fstpl
fnstsw
sbb
insl
fistps
adc
push
xchg
cli
movsl
xchg
mov
add
dec
cwtl
mov
shrl
add
sub
pushl
or
in
cmp
and
ss
sarb
mov
lret
sbb
lret
jg
jo
cmp
xor
xor
jl
sub
mov
flds
lds
subb
dec
adc
ljmp
test
idivl
push
jo
sbb
xor
addr16
jno
shrb
sub
pop
loope
xchg
test
std
movsb
imul
loopne
lock
mov
adc
fdivr
stos
lahf
in
das
scas
out
fsubr
cmp
mov
fcomip
push
dec
sub
pop
xchg
out
mov
sub
dec
add
push
cmp
ja
sub
imul
test
test
mov
pop
sub
mov
jp
into
hlt
push
add
cmp
dec
sbb
mov
push
or
ljmp
neg
es
xchg
lods
out
and
push
xor
mov
adc
lods
aad
mov
hlt
mov
or
add
clc
das
jnp
dec
mov
out
testb
ret
stos
cli
and
push
jbe
ror
xchg
cmp
scas
mov
testb
mov
lret
insb
cmp
je
out
cmp
bound
jb
popf
pushf
shlb
fwait
mov
in
lea
sbb
xchg
sub
daa
sub
mov
sbb
fidivl
ss
outsl
pop
dec
and
movsb
loope
xor
mov
xchg
jecxz
sbb
mov
jl
or
dec
in
daa
std
cmp
xor
lahf
outsl
mov
cmp
push
mov
mov
push
cwtl
push
jbe
shlb
sub
jmp
mov
pop
jns
fidivrs
cli
aam
int3
cmpsb
push
inc
mov
sbb
out
or
or
mov
fisttps
negl
xlat
push
jae
hlt
ljmp
pusha
in
sti
cmp
jp
fsubrs
stos
xchg
outsb
xchg
aad
daa
mov
pop
pop
add
cmpsb
test
aas
movsb
test
lcall
imul
jp
je
aad
xchg
nop
mov
leave
call
or
leave
jae
les
lea
xorl
cmp
lds
cli
or
and
xchg
and
and
lcall
sub
test
sbb
cwtl
jg
xlat
xor
lret
cmpb
sbb
pusha
mov
mov
sbb
cmc
lahf
xchg
je
pop
aaa
xchg
fwait
dec
out
fcompl
fsubs
pop
mov
jae
js
mov
sub
repnz
fstp
int
fucom
leave
int
jae
dec
mov
xchg
in
loop
mov
addr16
adc
xor
enter
pop
sub
fisubl
arpl
adc
jbe
fistps
xchg
js
in
pop
sub
js
dec
cld
rcrl
dec
cmpsb
fadds
ss
or
out
or
cli
pop
rclb
lret
pop
loope
mov
jo
xor
jne
les
pop
xor
hlt
push
adc
push
sub
jns
test
cwtl
dec
lds
clc
int
xchg
out
adc
enter
out
or
cmp
divl
dec
pop
mov
and
add
push
ficompl
sub
or
xchg
stos
in
shl
ss
adc
in
or
jecxz
xor
fcomps
aad
add
xchg
mov
cmp
and
push
dec
aad
jbe
add
js
pop
pop
rorb
xor
xchg
add
lds
dec
inc
adc
out
and
insb
fwait
add
repz
or
dec
int
mov
mov
clc
sub
loopne
dec
gs
shr
jne
dec
jbe
push
imul
je
shufps
xor
mov
xchg
repz
dec
push
imul
push
pushw
int3
cs
push
push
fcoms
cs
push
outsb
clc
adc
dec
push
enter
pop
dec
test
or
pop
cmp
jp
push
movsl
dec
enter
xchg
out
clc
cmp
cmpsl
sub
sarl
enter
dec
jp
sahf
jbe
les
shlb
cmpsb
shlb
sub
fnstsw
sahf
xchg
jge
and
mov
adc
in
mov
inc
pusha
adc
not
pop
int3
jo
js
enter
mov
ret
lret
cmp
into
fstl
xchg
testb
js
cmp
shlb
bound
daa
pop
xchg
and
mov
and
pushf
cmp
movsl
icebp
dec
call
inc
xor
mov
cwtl
xchg
not
fsubrs
sbb
dec
add
out
test
adc
or
jbe
add
pop
pop
push
mov
rorl
imul
in
js
mov
lcall
mov
cmp
ret
out
mov
daa
pop
movsb
push
or
hlt
cmp
sti
cwtl
ljmp
call
or
xchg
out
movsl
add
jne
jno
aaa
mov
push
aad
addr16
clc
testb
inc
js
inc
sbb
mov
in
xchg
push
or
cmpsb
mov
sbb
imulb
push
in
jp
inc
shrb
push
gs
sub
mov
xchg
xor
jns
stos
mov
iret
push
pop
sbbl
in
xchg
dec
xor
add
icebp
pop
aaa
fcoms
sub
jo
and
lcall
cmp
mov
xchg
das
and
cmp
cmp
ljmp
mov
jb
cmp
gs
mov
sub
ret
aam
add
leave
push
and
mov
mov
xchg
mov
lds
adc
inc
cmp
sbb
cmc
and
fmuls
or
mov
or
jae
lcall
adc
cmp
pop
sbb
imulb
mov
lds
int
and
sub
xor
js
push
aas
movsl
jp
push
jmp
xor
ljmp
clc
add
and
out
jb
daa
pop
sbb
pop
clc
xchg
call
inc
imul
jbe
push
jne
enter
clc
xchg
mov
out
sbb
stos
sbb
fwait
and
dec
dec
ljmp
mov
rcl
xor
ljmp
pop
les
cmp
movl
test
jg
dec
mov
aad
cli
es
cmc
adc
xorb
imul
xchg
xor
jge
mov
sbb
mov
fdivs
or
inc
push
pusha
call
and
pop
or
fcoml
add
aaa
stos
mov
dec
adc
cmp
xchg
insb
xchg
cltd
gs
or
rcll
lret
iret
call
in
out
jp
cmp
or
add
clc
xor
in
pop
out
movsl
icebp
addr16
lods
cmpb
in
out
mov
ljmp
inc
stos
jp
bound
cmp
decl
push
xchg
sarl
push
dec
cmc
je
sbb
mov
cmp
pop
dec
in
adc
xchg
adc
mov
nop
movsb
enter
sbb
sub
in
add
cmpsl
mov
dec
mov
loope
clc
addr16
nop
inc
stc
sahf
adc
mov
test
cmc
or
test
loopne
jno
add
xchg
sbb
xchg
movsl
mov
xchg
mov
lcall
mov
sbb
gs
dec
fs
sar
fisubrs
mov
mov
mov
or
sbb
das
divl
cmp
sbb
repz
mov
mov
adcb
andb
lea
ljmp
ficompl
xchg
cwtl
pop
add
mov
in
lods
cli
testl
fstl
ficompl
or
and
add
xchg
mov
inc
jbe
loope
pop
mov
add
xchg
sbb
dec
mov
dec
movsb
dec
cmc
shl
pop
inc
das
pop
fwait
and
sbb
aad
add
int
cli
sbb
adc
pop
ljmp
xchg
cmc
sbb
jmp
xchg
scas
rcll
cmp
testl
loope
cwtl
mov
es
jne
jnp
xlat
sub
rorl
ljmp
sbbb
sub
mov
adc
dec
out
sub
xor
sub
mov
jle
decl
mov
pop
mov
in
dec
sbb
je
in
mov
jmp
pop
imul
daa
mov
dec
lds
aad
xlat
add
and
mov
cmc
inc
mov
xchg
or
clc
mov
mov
out
add
std
dec
xchg
aad
sarb
out
dec
rorb
jp
notb
mov
lds
add
ja
push
fildl
call
out
mov
or
fisubrl
lods
imul
js
in
cwtl
sahf
into
lock
jl
dec
sub
mov
cli
imull
stos
mov
lahf
pop
pop
movsb
cmp
shrl
out
mov
pop
icebp
push
or
in
lcall
inc
call
lret
pushf
inc
sbb
inc
ja
mov
xchg
and
into
add
roll
and
xchg
or
repnz
jb
mov
jbe
ljmp
clc
sbbl
sbb
in
or
fnstsw
xlat
into
add
out
add
or
les
dec
pushl
or
dec
push
cmp
xchg
cmp
int
mov
lcall
ret
pop
cltd
inc
mov
cmp
sub
out
sbb
cwtl
xchg
aam
sahf
adc
aad
mov
lods
mov
jmp
in
push
out
add
cmp
fimull
xchg
lcall
bound
scas
pop
xor
in
movsb
js
lds
fcmovbe
mov
mov
movsb
cli
dec
or
or
mov
aas
addr16
sub
or
jns
stos
xchg
mov
enter
push
mov
leave
xchg
mov
mov
cmc
dec
addl
or
inc
lcall
std
mov
mov
js
aad
pop
add
movsb
sub
call
fwait
ret
test
xor
in
or
lahf
cld
jno
push
cli
lret
out
sub
cwtl
cmpsb
in
cmp
jp
mov
mov
pop
xlat
xor
in
mov
stos
or
or
cmp
mov
or
sbb
out
inc
inc
adc
test
ret
not
mov
mov
ljmp
sbb
xchg
or
orb
cli
aad
mov
xchg
out
stos
sbb
js
stos
xchg
lcall
ljmp
lds
adc
mov
add
test
sub
xchg
out
call
pop
xlat
jne
dec
idivb
imul
orl
cmp
je
addr16
fdivs
clc
fst
xor
bound
pop
bound
jg
xchg
je
pop
imul
dec
xchg
stos
call
or
adc
inc
lcall
call
sbb
mov
or
mov
mov
pop
sub
cmc
xchg
mov
mov
mov
pop
pop
pop
ljmp
mov
sbb
mov
add
sub
popf
pop
cwtl
shlb
mov
cmp
addr16
enter
frstor
mov
clc
and
xchg
js
aam
data16
and
dec
xchg
mov
subb
sarl
test
leave
and
scas
sub
dec
cltd
or
fwait
inc
out
add
push
xor
xchg
mov
mov
cli
fcmovb
mov
popf
mov
dec
jno
mov
notb
daa
out
enter
inc
mov
gs
out
cs
insl
or
jmp
mov
pop
fcom
sub
xlat
mov
ljmp
lahf
mov
dec
push
addr16
not
mov
icebp
stos
out
cmp
xlat
das
out
mov
lods
cmp
xor
pop
dec
loope
cmc
mov
cmp
movsb
in
mov
cwtl
or
mov
lcall
push
addr16
test
xchg
mov
scas
xlat
mov
mov
aaa
xor
jbe
adc
sub
jmp
test
call
or
mov
cwtl
sub
xchg
fucomip
mov
cmp
cwtl
lret
bnd
push
mov
or
xchg
ljmp
mov
negb
aad
xor
out
std
data16
adc
test
sbb
mov
cwtl
sbb
adc
test
cwtl
xor
fnstenv
or
sub
and
negl
cli
adc
mov
cmp
call
lods
cmp
in
pop
pop
pop
imul
push
fcmovbe
repnz
jmp
sub
push
negl
mov
movsl
rolb
mov
mul
popf
shl
mov
ret
cwtl
mov
movsb
xchg
jle
sbb
xor
sub
mov
dec
rclb
test
xchg
adc
sbb
push
lcall
gs
stc
add
loope
test
push
lcall
dec
jp
mov
cmp
mov
fisubrl
js
mov
scas
dec
pop
push
push
push
pop
call
inc
cmp
jp
pop
push
not
das
jne
fbstp
xchg
sbb
mov
test
or
push
pop
pop
and
add
jo
pushf
pop
jbe
lret
push
inc
pop
and
repz
out
adc
cmc
cmp
aaa
and
pop
add
push
mov
clc
pop
divb
push
or
cmp
addr16
dec
je
stos
dec
pop
rorl
xchg
sub
movsb
mov
and
push
push
cmp
das
and
dec
cli
jp
push
mov
pop
pop
mov
sbb
jbe
cld
cli
fildl
stos
sarl
mov
subl
daa
xchg
inc
add
sbb
jp
fwait
dec
xor
inc
call
pop
cmp
lret
fsubr
bound
cmp
pop
mov
enter
push
push
lret
enter
popa
in
fiaddl
mov
push
dec
lcall
pop
int
js
ret
pop
enter
stos
movsb
or
mov
inc
pop
sub
mov
push
sbbb
imul
hlt
aad
in
loope
mov
jmp
and
fmuls
out
sarl
addr16
mov
mov
mov
sbb
xor
sti
sub
mov
sub
or
add
fisttps
sbb
cmpsb
or
mov
jb
push
enter
stos
xor
lcall
sbb
pop
lcall
xchg
mov
inc
push
fbld
fisttpll
daa
mov
sbb
stos
xchg
movsb
data16
ror
lcall
dec
in
fsubrs
iret
insl
sbb
stos
adc
cmp
sub
inc
sbb
dec
jge
es
mov
and
test
call
xchg
daa
mov
gs
aas
loope
pop
adc
mov
negb
mov
js
push
push
inc
push
mov
sub
in
fs
in
dec
xor
push
enter
mov
cmpsl
lahf
push
jne
cs
test
push
test
add
adc
clc
sbb
js
fists
in
push
sub
daa
mov
insl
ja
or
mov
shl
xor
mov
and
in
jbe
sub
aaa
mov
out
push
dec
mov
pop
add
xor
and
shr
jo
pop
negl
or
jp
insl
pusha
fildl
push
enter
je
pop
and
xor
rol
cld
inc
popa
ja
mov
mov
xchg
orb
gs
cld
sbb
cltd
sbb
inc
sub
mov
sub
lret
or
mov
push
leave
mov
cmp
faddl
imul
loopne
xchg
dec
imul
add
cmp
out
test
pop
mov
fnstsw
mov
cmp
out
jge
mov
loope
out
xor
or
js
movsb
jecxz
in
xchg
lret
icebp
xchg
xor
stos
sbb
xchg
enter
jno
push
clc
mov
xchg
cmp
mov
insl
loope
xchg
pop
js
add
divl
pop
sbb
push
clc
aaa
ret
mov
stc
ret
enter
xchg
xchg
movsl
loopne
jg
in
mull
or
dec
jbe
sahf
das
out
mov
mov
sub
out
add
movsb
dec
jg
out
add
imul
jae
dec
ds
test
add
xchg
ljmp
jmp
adc
or
mov
fwait
dec
sbb
out
cmp
xor
cmc
arpl
inc
mov
push
or
mov
cmp
sbb
or
xchg
mov
gs
test
add
fimull
pop
idivb
pushw
std
lcall
mov
pusha
imul
sub
mov
sbb
aaa
orl
js
mov
or
lea
cwtl
inc
imul
mov
sbb
jbe
add
adc
or
push
cmp
inc
adc
xlat
xchg
sub
xchg
inc
mull
and
loope
pop
xlat
ljmp
enter
out
xchg
test
je
cmc
imul
scas
aaa
int
jle
push
adc
imul
loopne
sbb
mov
and
mov
ret
pop
push
movb
pop
clc
mov
sbb
cwtl
sbb
rcl
or
mul
xchg
mov
call
in
out
pop
dec
add
and
aas
lcall
pop
mov
push
mov
jp
pop
cmp
or
jae
dec
cmpsl
repnz
lret
cmp
mov
push
outsl
jns
mov
hlt
lcall
notl
in
insl
xchg
cmc
leave
pop
jge
pop
fisttpll
lret
adc
movsb
lahf
in
pop
adc
notb
addr16
addr16
xchg
outsb
sbb
xorl
sahf
test
dec
sbb
movsl
cmp
fildl
int
in
lret
jge
ja
mov
test
fcoml
mov
cmp
jmp
in
sbb
dec
dec
aas
imulb
cld
xor
pop
je
xor
sbb
jns
out
add
mov
or
out
sbb
or
cmp
push
jb
mov
insl
xchg
push
cmp
in
cli
popf
aad
xchg
loope
addr16
jp
push
cwtl
cmc
call
xchg
pop
hlt
or
or
imul
mov
push
es
xor
dec
cmpsb
cli
mov
adc
js
loopne
and
imul
or
data16
mov
in
cltd
mov
cmp
xchg
mov
out
pop
imul
xchg
xor
enter
in
mov
popa
cld
in
hlt
lahf
mov
mov
push
adc
xchg
pop
lds
mov
jbe
or
inc
push
xor
shl
je
cmp
mov
cli
inc
repz
ficompl
aam
push
loop
into
movsl
lcall
xchg
sbb
enter
jg
lcall
lret
add
mov
bound
enter
xchg
dec
xchg
sbb
or
ljmp
sub
mov
popa
sets
loopne
sbbb
loopne
jp
mov
adc
pop
inc
fcmove
addr16
push
cmp
mov
mov
cli
push
fadds
call
daa
test
add
lcall
jle
hlt
push
sarb
and
sub
lret
enter
jle
or
mov
xchg
mov
jbe
daa
lods
push
dec
ljmp
ret
stos
or
lds
sbb
aad
fcomps
xchg
push
in
sub
push
sbbb
mulb
cwtl
pop
inc
sub
push
cli
addr16
insl
cmp
pop
fistpl
inc
xchg
push
movsb
cmpsl
and
inc
call
push
pushf
cmpsl
sbb
xchg
cmpsl
push
dec
push
push
imul
dec
imul
imul
imul
call
dec
pusha
call
dec
call
dec
out
insl
sub
loopne
cmpsl
dec
dec
call
dec
iret
test
inc
dec
mov
jp
fsubl
push
cmpsl
dec
ljmp
data16
add
push
inc
loope
jno
mov
lret
mov
stos
das
shll
xchg
jle
push
cwtl
sbb
in
out
xchg
push
sub
loope
xchg
add
dec
dec
jns
lods
jecxz
clc
lock
out
stos
dec
popf
mov
jns
insl
out
push
xchg
adc
mov
aas
mov
jbe
sbb
fdivrs
in
imul
out
out
xchg
mov
lds
iret
das
xor
js
mov
call
lcall
andl
cmpb
and
xchg
cwtl
call
mov
ret
imul
push
or
or
aad
andb
icebp
mov
pop
sub
or
pop
inc
xchg
pop
mov
imul
out
adc
out
cli
push
repnz
adc
mov
inc
xchg
aaa
sub
pop
and
lret
xchg
xor
push
imulb
out
fiaddl
fcompl
mov
ss
inc
loope
out
xchg
cltd
js
mov
mov
not
repz
xlat
sarl
adc
fadds
or
imul
adc
test
aas
sbb
inc
mov
addr16
lods
jmp
in
mov
jns
jno
dec
dec
shl
popa
aad
loop
mov
fcomps
pop
ljmp
mov
mov
mov
decb
cmp
push
add
ja
stc
xor
aaa
xchg
in
push
test
sub
xchg
imul
mov
enter
fbstp
lods
repnz
in
or
lahf
fs
out
push
cmpl
in
mov
adc
sbb
push
loope
xchg
lcall
fsubrs
pop
dec
icebp
pop
sub
aad
loop
sbb
mov
pop
sbb
ret
js
rcl
xchg
add
ret
mov
push
js
dec
addr16
xchg
mov
negb
adc
frstor
xor
cli
push
test
imul
inc
cmp
ret
out
addl
sub
movsl
xchg
xor
pop
adcl
push
xor
lret
aad
sub
push
and
ret
or
fdivs
xlat
cmc
pop
push
js
inc
xor
mov
imul
cmpsb
fs
sub
pop
lds
xchg
mov
mov
js
dec
or
mov
dec
jbe
add
mov
negb
mov
out
loop
inc
push
sub
adc
lahf
cli
dec
shlb
sbb
or
idivb
xchg
sti
jno
or
dec
gs
mov
fucom
xchg
movsb
cli
xchg
sbb
dec
push
cwtl
fldenv
jb
push
js
xor
and
aad
mov
jecxz
xor
and
shrb
or
js
mov
vshufpd
nop
cltd
cwtl
nop
pop
shrb
mov
lods
in
adc
xchg
mov
xor
jp
clc
das
cltd
xor
neg
xchg
lds
push
cmp
mov
pop
mov
les
pop
lret
or
push
es
jb
mov
sbb
or
adc
mov
push
mov
js
ljmp
ja
inc
call
movl
mov
ret
xor
hlt
push
and
sarb
or
testb
or
imul
push
pop
rorl
test
lods
mov
or
xchg
es
shrl
cmc
or
imul
xor
mov
lds
aaa
mov
sti
popf
pop
filds
cmp
sbb
sbb
out
xchg
sbb
test
scas
fisubrl
mov
mov
loopne
hlt
popf
inc
das
fisubrl
call
mov
xchg
movsb
imul
add
cltd
mov
cli
dec
popf
pop
imul
dec
les
add
je
fcmovbe
and
push
stos
data16
jbe
andb
fidivl
mov
xchg
test
hlt
daa
jp
adc
and
out
scas
scas
iret
pop
xlat
inc
or
mov
xorl
push
xchg
xor
movl
mov
js
lret
xchg
jl
cmpsb
fadds
mov
mov
xchg
cmp
mov
cmp
pop
sahf
add
loope
mov
xchg
in
pop
lea
xchg
rorl
notl
shlb
mov
roll
in
insl
and
xchg
xchg
fwait
int
mov
stos
dec
ljmp
xchg
out
cmc
in
jbe
je
xlat
shll
inc
insb
push
or
cwtl
sbb
add
add
out
push
cli
call
jbe
aaa
xchg
mov
das
or
mov
cmp
out
idivl
clc
jno
jo
add
dec
cwtl
adc
pop
cmp
aad
aas
mov
adc
sub
xchg
xor
cmp
pop
out
pop
cmc
push
outsb
in
testl
test
aaa
movsl
or
mov
pop
daa
mov
fwait
lahf
jbe
mov
imul
shrb
cltd
xchg
sub
addl
or
dec
in
mov
cld
mov
lds
pop
test
rcr
call
js
mov
adc
mov
add
mov
mov
pop
pop
mov
pop
gs
lret
cwtl
sbb
lret
pop
rolb
lcall
mov
int3
ds
sbb
pop
addr16
cwtl
ljmp
mov
leave
cld
cmp
and
pop
xor
stos
or
sbb
sub
adc
sub
divl
cmp
clc
jbe
pop
enter
or
pop
dec
pop
aaa
into
inc
mov
ljmp
sbb
push
dec
aaa
cmp
xlat
daa
or
push
push
inc
ret
je
mov
sbb
stc
push
cmp
cwtl
lcall
lds
je
aas
adc
push
lock
cmp
test
sub
pusha
xor
daa
mov
cmp
hlt
sbb
xchg
and
xchg
pop
sub
lret
cmp
mov
fidivl
pop
sbb
fcmovbe
in
aaa
sub
fs
jno
xchg
sbb
jp
or
cmp
dec
and
dec
pop
lds
test
imul
sbb
imul
jmp
negl
sub
mov
xor
sub
mov
cmc
movsl
jbe
cmpsb
adc
lods
jae
sub
imul
or
push
and
es
xchg
xchg
inc
sbb
xlat
push
iret
xchg
lret
adc
push
leave
sahf
mov
adc
sarb
test
addl
je
pop
out
vmovdqu
mov
xchg
in
adc
or
add
repz
sub
xor
testl
cmc
xchg
imul
lret
dec
cmpsb
pop
xchg
inc
stc
mov
cmp
sar
adc
aaa
sub
mov
fwait
add
daa
or
lret
jg
in
pop
sub
movb
sub
inc
cmpsl
mov
adc
jp
sbb
cmp
movsl
push
inc
je
cmp
cmc
jl
fs
pop
jecxz
call
out
lret
add
inc
sbb
xlat
xorb
mov
dec
out
ljmp
xlat
jp
or
test
inc
dec
enter
lret
xchg
imul
xchg
call
cmpl
sub
test
mov
add
inc
mov
in
adc
enter
sti
xchg
cmc
push
fimull
or
xchg
enter
sub
sbb
jne
jp
mov
or
sub
xor
xchg
imul
fidivs
pop
add
and
fcomps
jl
cmpsl
dec
push
js
ljmp
sub
mov
push
fcmovb
adc
test
xchg
nop
sub
stos
sbb
sahf
testb
lcall
cmp
cli
jp
pop
xchg
js
xchg
addr16
std
scas
sbb
stos
shl
aaa
test
lcall
sub
jecxz
inc
cmp
js
insb
or
ret
push
inc
jns
sub
xlat
rorl
lret
cmpsb
xchg
mov
sub
fwait
bound
call
and
push
push
mov
fcmovu
lea
jmp
cli
or
lcall
les
sbb
pop
cmp
or
and
in
adc
jg
fcmovbe
inc
sub
adc
push
loope
js
js
push
xchg
mov
and
mov
pop
or
je
cmc
enter
mov
push
cld
dec
sbb
inc
je
dec
mov
je
or
sbb
je
addl
add
dec
in
out
mov
cmpsb
mov
mov
xor
dec
and
sub
out
lds
mov
sti
push
xor
cmpsl
mov
lds
call
add
aaa
idiv
icebp
mov
cmpsb
into
fld
jp
ljmp
cli
xchg
jne
rcll
mov
pop
xlat
sub
xchg
mov
in
add
pop
dec
call
stos
out
mov
adc
mov
mov
movsb
jo
test
cs
cli
lret
xor
pop
pop
pop
dec
jmp
dec
popf
cmpl
out
mov
out
mov
mov
dec
les
jmp
insl
and
orl
push
mov
fidivrl
jbe
js
popa
pop
arpl
mov
pop
inc
sub
aam
out
cmp
clc
imul
jmp
popf
lds
xchg
or
jp
add
cmp
cmc
jns
mov
in
rorl
cltd
cmpsb
pop
addr16
notl
idivb
sub
lcall
add
fwait
cltd
dec
imul
sti
lods
scas
and
or
enter
xchg
daa
cvtps2pd
lods
imul
push
rcl
and
sbb
inc
call
pop
sub
xchg
push
subb
and
pop
call
aad
mov
je
or
jecxz
sbb
in
mov
jbe
mov
or
jne
aaa
gs
add
or
dec
in
pop
mov
add
cmpsb
adc
mov
adc
mov
cmp
lret
dec
and
mov
inc
rcl
cmp
cmpsl
mov
in
mov
sarb
dec
mov
xchg
mov
sbb
mov
ljmp
jb
xor
dec
cmpsb
dec
jns
add
sbb
ljmp
jne
aad
and
push
cmc
call
testl
or
mov
out
out
test
and
sysenter
adc
push
jecxz
xchg
lcall
or
sub
inc
in
pop
aas
sub
xlat
imul
mov
nop
mov
or
pop
mov
hlt
mov
aaa
sbb
shr
add
mov
inc
test
insb
adc
xchg
xor
push
pop
jmp
sbb
and
mov
jne
inc
sbb
mov
pop
in
stc
xlat
imulb
sti
sbb
or
movsb
dec
xchg
sub
adc
outsl
les
pop
cmp
pop
mov
pop
mov
cmp
jg
adc
mov
fnstenv
mov
jne
and
popf
cmp
fiaddl
lret
stos
add
cmp
mov
adc
or
mov
enter
sub
jp
or
imul
mov
ljmp
into
out
fdivs
insb
inc
int
ret
js
xor
sbb
dec
xchg
out
add
test
and
xchg
lock
out
push
aad
pop
leave
xchg
mov
aaa
ja
add
pop
iret
aad
cmp
lret
xor
popf
aad
pop
bound
out
in
loope
jg
or
shrb
ljmp
mov
pop
fwait
popa
lds
jno
sub
enter
pop
xchg
push
call
cwtl
jbe
aad
xor
sbb
or
outsl
addb
fisttpll
js
loop
dec
lret
cmp
add
xchg
ret
lcall
mov
xchg
mov
or
xor
xchg
or
mov
cld
es
hlt
mov
push
loopne
cmc
mov
testb
mov
pop
sub
dec
cli
test
add
mov
cmp
sbb
test
pop
xchg
out
pop
adc
and
out
dec
imul
inc
je
pop
add
fs
les
add
push
inc
pop
dec
and
test
cmpsl
cmp
pop
mov
adc
push
call
jbe
xor
cld
xchg
mov
test
xlat
cwtl
push
mov
mov
mov
es
test
dec
sub
xchg
popa
daa
cltd
mov
lods
test
hlt
shll
incl
xchg
mov
or
aad
out
push
mov
std
xchg
lds
sbb
mov
stos
aas
lock
js
enter
adc
inc
pop
lods
bound
testl
std
pop
sub
pop
xlat
fildll
xor
nop
mov
push
pop
adc
cli
aaa
neg
lret
sarb
mov
cmp
sub
mov
aad
push
mov
sub
xchg
sbb
mov
adc
cmp
cmp
nop
cmp
notl
jne
jp
mov
arpl
add
mov
pop
inc
jbe
pop
lahf
scas
es
cli
sub
dec
dec
sub
fs
mov
ss
jmp
pop
jmp
divb
mov
out
jp
pop
sbb
mov
ret
xchg
xbegin
int3
shl
out
jmp
mov
test
push
xchg
bound
daa
jb
or
lea
adcb
mov
call
cwtl
mov
adc
movsb
push
out
mov
jbe
jmp
cltd
mov
cli
pop
sub
ret
pop
cmp
pop
sub
and
pop
jg
or
fistpll
sar
lcall
das
fsubr
sbb
pusha
mov
xchg
fisttps
sbb
mov
pop
and
imul
aaa
xchg
cltd
in
mov
xchg
clc
lds
pop
mov
and
idivb
cmp
cmp
pop
stos
addr16
icebp
pop
out
sub
orl
dec
mov
shll
in
xor
jg
clc
sbb
and
pop
fidivl
or
mul
jnp
ljmp
sbb
sbb
out
addr16
fnstsw
popf
in
mov
daa
lcall
imul
les
push
or
sbb
cltd
dec
lret
movsl
mov
in
fcoms
sarl
in
add
jbe
ja
loope
push
cmpsb
dec
sub
int3
in
adcl
fsubs
pop
mov
adc
addr16
icebp
xor
sbb
sub
or
add
popa
cmc
fidivrs
imul
mov
aad
xchg
fdivp
inc
fdivl
dec
rclb
dec
ljmp
jl
mov
and
push
ljmp
xor
js
mov
cwtl
ret
sbb
ss
das
icebp
xor
jbe
les
jne
pop
adc
xor
lret
cmp
cmp
pop
sbb
sbb
add
mov
or
out
aaa
mov
or
sbb
or
push
inc
jp
rcrl
cli
iret
pop
mov
dec
add
les
scas
xor
jne
in
xchg
or
xchg
divb
mov
ret
dec
dec
imul
out
test
or
or
fstps
leave
sti
leave
aas
popf
jo
fidivl
adc
std
cltd
std
pop
sub
dec
pop
sub
sub
imull
sbb
jp
stos
push
negl
mov
mov
cmp
roll
mov
daa
addr16
dec
lret
cmc
xchg
push
xchg
mov
cmpsl
mov
inc
mov
pop
dec
dec
pop
addr16
add
aad
test
mov
cmp
js
or
mov
push
ret
inc
or
and
push
mov
xchg
es
inc
pop
inc
stos
lock
mov
daa
sbb
mov
fwait
imul
and
adc
or
xchg
movsb
notb
js
xchg
xchg
sub
fsubs
dec
sbb
push
imul
cli
xor
testl
adc
lret
lea
sub
cli
aad
pop
push
ss
or
adc
fdivrs
cmc
xchg
cli
mov
notl
xlat
daa
jmp
insb
xor
call
stos
mov
subl
cmpsb
out
mov
jae
pop
es
lcall
decl
lea
jnp
shll
xchg
test
mov
cmc
jp
inc
scas
or
push
jns
sbb
or
push
test
ffreep
lea
in
out
mov
mov
cmp
fdivs
popf
out
lcall
or
in
pop
call
mov
inc
mov
or
sbb
push
fisttpl
inc
js
mov
mov
movb
and
daa
lcall
fisubrs
or
push
out
sub
cli
js
pushf
das
cmc
cwtl
jp
lea
pop
push
pop
stc
adc
in
adcb
jb
mov
test
or
imul
pop
mov
push
andl
xor
jmp
aad
or
aaa
adc
daa
or
imul
inc
lret
idivl
daa
test
stos
testl
lds
xchg
ja
xor
out
fsts
and
xchg
push
addr16
cmpsb
jg
xchg
hlt
sbb
mov
aad
test
cltd
sub
jbe
int
sbb
dec
mov
in
dec
push
lcall
jg
enter
pop
aad
adc
dec
loope
sub
mov
cmp
lcall
xor
cmp
mov
clc
dec
add
inc
aaa
adc
stos
fwait
sbb
or
mov
stos
jp
cli
ljmp
fmuls
mov
pop
add
mov
js
mov
dec
or
mov
push
xchg
sub
arpl
jmp
sub
imull
cld
and
les
out
xchg
cltd
daa
enter
jbe
xor
in
xchg
in
idiv
mov
enter
and
lret
xor
pusha
shll
pop
in
and
xlat
sub
or
lcall
out
xchg
popa
sub
jbe
xchg
pop
xchg
sarl
dec
mov
or
fcmovu
sub
or
xchg
pop
xchg
mov
mov
loope
call
test
xchg
cmp
enter
cmp
inc
pop
sbb
cli
jg
lret
xlat
mov
pop
addr16
sbb
sub
pop
or
lcall
mov
fimull
mov
call
dec
in
negl
cli
enter
insl
call
adc
lcall
xchg
cmpsb
cmp
je
and
movl
int
jmp
push
bound
push
push
adc
lret
xchg
mov
sub
divl
fs
out
and
push
sbb
bound
and
or
xlat
cmp
movl
imul
shrl
xchg
mov
pop
add
stos
mov
push
inc
movsb
pushf
xchg
das
loope
cmp
xchg
lea
aaa
pop
enter
cmpsb
or
mov
pop
xchg
pop
sub
inc
es
clc
movsb
call
test
pop
xchg
ljmp
push
lcall
xor
stos
lea
xor
cwtl
sub
jae
js
or
cmpsb
mov
or
sbb
addb
inc
daa
pop
pop
enter
xchg
pop
fldenv
jmp
jbe
fdivrs
fwait
in
xlat
ficoml
xchg
dec
addl
lcall
or
stos
mov
addr16
aaa
dec
out
pop
in
scas
in
js
je
sub
mov
add
xor
enter
lret
cmp
test
stos
cmp
mov
xor
cmp
xchg
or
insb
mov
sbb
xor
inc
ficoml
push
mov
ljmp
dec
and
sub
cmc
xor
or
add
inc
stos
cmpsl
loope
pop
notb
push
sub
xor
pop
mov
loopne
jge
pop
flds
popf
add
pop
mov
pop
sub
mov
mov
fidivrl
lret
ja
sahf
lds
xchg
imul
daa
out
xlat
popa
fists
mov
das
jbe
push
xchg
mov
rcl
in
cmc
dec
xchg
or
and
icebp
xchg
clc
fcom
xlat
sbb
mov
adc
test
pop
or
mov
cwtl
neg
push
lods
outsb
sub
testb
shl
push
addr16
cmc
jbe
addl
xlat
fistpll
mov
sbbb
test
daa
and
mov
aas
pcmpgtb
popa
daa
sbb
popa
out
cmp
lcall
or
scas
mov
cwtl
xchg
pop
cmp
enter
in
in
sarl
xchg
fnstenv
add
or
sub
xchg
sbb
and
xchg
xor
dec
cmc
mov
leave
int
adc
mov
or
js
dec
pop
js
mov
jl
dec
addr16
std
sbbl
push
leave
mov
popa
adc
mov
es
es
sub
lahf
gs
stos
cmp
jbe
and
or
test
es
out
mov
sbb
lcall
mov
int3
cmp
or
push
adc
jbe
notb
mov
rcrl
xchg
loope
xchg
cmc
cli
popf
or
xchg
or
push
aad
xchg
pop
xchg
pop
fs
xor
jne
imul
sub
add
mov
inc
lods
add
sub
sub
cli
mov
ret
aaa
cmp
ret
and
movl
das
jp
cmpb
xchg
cmpsl
xorl
inc
sub
mov
push
xchg
xlat
call
mov
lret
fwait
or
lret
gs
je
xchg
cmp
mov
adc
inc
aad
sbb
cmc
add
mov
js
jmp
ss
enter
movsl
enter
imul
aas
and
inc
sbb
lahf
js
sti
jne
jbe
jp
dec
xor
rcll
enter
mov
push
lret
mov
xchg
mov
mov
clc
icebp
loope
pop
xchg
and
or
pushf
mov
mov
je
cmpl
test
or
mov
ljmp
out
sub
bound
dec
lret
lcall
mulb
add
cmp
sub
adc
into
in
fs
int
in
jle
jg
stos
push
mov
mov
push
inc
cmpsb
push
aad
dec
in
movsl
dec
out
pop
sbb
xchg
mov
xchg
inc
mov
call
push
jns
pop
xchg
in
push
mov
xchg
test
mov
stos
aas
roll
inc
xor
cmpb
mov
in
aas
adc
les
gs
xor
dec
push
pop
dec
cmpsb
lahf
shll
cmp
int3
sub
in
add
sarl
divb
pop
imul
pusha
inc
jne
in
adc
sbb
out
push
fwait
bound
sbb
fcom
cwtl
adc
leave
push
and
mov
dec
iret
push
mov
jns
enter
xchg
xchg
sbb
xchg
pop
call
push
lds
inc
fcoms
sbb
push
sbb
mov
out
call
cmp
enter
mov
adc
push
loop
xor
pop
mov
mov
mov
cmp
dec
cmp
xchg
jp
ljmp
xchg
lret
fsub
popf
jl
cli
jno
mov
cltd
sub
fmuls
sarl
bound
mov
ret
push
add
xor
mov
cmp
sbb
xchg
test
xor
mov
pop
popa
call
faddl
jnp
aad
mov
pushf
int
sbb
dec
rorl
divb
jno
cwtl
dec
mulb
imul
lret
add
rorl
out
cmp
outsb
mov
sub
mov
dec
popa
mov
mov
roll
jmp
mov
mov
inc
in
inc
in
test
adc
enter
fdivrs
jne
fucompp
andl
inc
mov
pop
add
pop
mov
xchg
call
sbb
cmp
out
rcrl
mov
ljmp
in
xchg
adc
xchg
sub
lods
mov
sub
testb
ljmp
cmp
xchg
in
xchg
std
into
outsb
add
or
mov
cmc
or
sahf
push
pop
dec
xchg
and
or
jmp
add
out
pop
jo
sbb
mov
sub
xor
cmc
insb
mov
mov
dec
lahf
sub
test
test
sub
fldcw
loopne
and
dec
test
xchg
sbb
cmpsb
mov
scas
xchg
pop
std
pop
or
mov
inc
jno
stos
or
enter
cwtl
hlt
ss
aad
fnstsw
adc
and
pop
out
cmp
dec
sub
mov
cltd
sub
cmp
test
stos
cltd
stos
dec
lcall
push
clc
roll
stos
out
pop
or
pop
sbb
push
vcvtpd2psy
and
stos
test
pop
xor
rorl
out
add
aad
xor
sbb
in
jbe
adc
ss
pop
stc
fstpl
sbb
pop
out
fiadds
pop
stos
xor
xchg
xchg
cmp
mov
aad
jmp
imul
out
test
ljmp
jecxz
in
xchg
dec
movsl
mov
ret
daa
mov
mov
leave
inc
loope
js
fadds
push
in
fldenv
imul
jmp
cmp
mov
lcall
dec
mov
xchg
jne
xor
push
aaa
js
cmp
xchg
mov
jg
sbb
xlat
fmuls
mov
mov
sbb
jg
cmp
insl
adc
daa
pop
pop
mov
imul
mov
adc
clc
mov
mov
jmp
divb
dec
arpl
dec
xchg
data16
inc
sbb
mov
leave
int
enter
xlat
mov
movsl
pop
cmc
inc
rclb
mov
jmp
jbe
test
adc
pop
scas
and
cmpl
hlt
mov
push
lods
push
nop
jmp
pop
addr16
sbb
xor
lcall
dec
cli
lcall
fimull
popa
mov
sbb
sbb
loope
fidivrl
shr
fldcw
test
in
push
pop
faddp
sub
dec
mov
dec
add
or
sub
lahf
push
xor
or
add
dec
inc
dec
jl
fisubrl
xchg
int
in
lret
repz
add
and
inc
xchg
sub
into
add
in
popf
icebp
cmp
xchg
test
dec
or
test
xor
sub
sbb
dec
dec
cmp
adc
jg
dec
or
xor
cli
idivl
test
cli
movl
scas
cmp
notl
pop
sti
lret
jne
xchg
xchg
or
jg
shrl
mov
mov
pop
fstp
pushf
lods
popf
jg
testl
add
rolb
push
add
arpl
cmovp
ss
fcomps
jbe
pop
xor
push
xchg
in
shll
mov
popf
mov
in
xchg
jg
testl
adcl
jmp
negl
repnz
push
or
jp
jge
inc
or
in
dec
cwtl
pop
push
add
daa
aad
lds
ret
dec
cmp
pop
orl
xchg
fmuls
scas
adc
js
pop
shlb
mov
stos
sub
ljmp
mov
dec
daa
mov
out
adc
xchg
loope
sbb
inc
cli
mov
rclb
fmull
cmp
cwtl
sbb
je
leave
scas
add
dec
sub
inc
sub
in
loope
cli
mov
das
or
in
mov
adc
mov
imul
test
push
sub
mov
mov
hlt
imul
cli
out
imull
push
repnz
ljmp
lcall
cmc
mov
inc
xor
addr16
add
fdivs
sub
fdivrs
cmp
js
in
je
imul
cmpsb
or
xchg
xchg
lods
jmp
pop
imul
or
in
in
push
push
fadds
lcall
not
lds
jl
push
pop
out
dec
xchg
sbb
sub
xor
int
xchg
mov
loop
inc
lea
loope
in
call
xor
cwtl
and
ret
aad
rorl
int
sub
test
out
mov
fcmove
rcrb
mov
test
xchg
out
lret
cli
or
cmp
or
je
out
xor
xor
xchg
mov
cmp
lahf
test
jmp
xor
out
adc
xchg
or
and
out
xchg
push
sbb
cmp
sbb
sbb
fsubrs
gs
pop
sbb
loop
add
pop
ss
dec
inc
add
jbe
ja
aad
cltd
xchg
cwtl
xchg
xchg
js
scas
or
sbb
adc
imul
cmpb
leave
ljmp
pop
lds
jbe
daa
movsl
add
mov
add
cmp
jbe
scas
push
out
daa
shlb
push
jg
lcall
in
ret
push
and
js
jae
push
xchg
imul
cmp
inc
xlat
test
add
mov
pop
mov
out
push
fldcw
lea
add
rorl
lods
dec
ret
lods
icebp
sub
addr16
scas
sbb
fwait
lods
sbb
xlat
adc
leave
into
dec
std
mov
mov
ljmp
mov
mov
sub
jo
inc
test
ljmp
sub
xchg
cs
xlat
and
not
out
cmp
jge
movsb
pop
mov
pop
nop
push
call
dec
jbe
pop
cwtl
mov
mov
sahf
shrl
mov
adc
pop
add
push
inc
mov
xor
push
cmp
mov
pusha
sub
mov
daa
fisttps
and
xchg
inc
fdiv
sbb
cwtl
lds
sarl
dec
mov
push
fidivrl
mov
jno
jb
orb
call
outsb
sbb
push
adcl
xchg
lret
or
loope
out
js
xlat
dec
sbb
push
cmc
insb
loop
movsb
or
xchg
adc
out
je
sbb
xlat
mov
dec
adc
out
adc
xchg
adc
xchg
sub
enter
xchg
mov
ret
sub
lds
popf
jb
in
or
subb
jmp
cmp
divl
mov
sub
lahf
pop
mov
inc
sbb
ficoml
lock
cmc
mov
scas
rcl
bound
xlat
in
testb
jns
and
popf
into
stos
orb
push
and
mov
cmp
dec
daa
rcr
test
lcall
div
stc
stos
pop
orb
lcall
dec
dec
cmc
add
mov
mov
sub
call
rorl
out
and
xchg
in
je
mov
cmp
mov
btc
mov
or
xor
mov
xchg
sub
cmp
lret
dec
lea
sbb
cmc
pop
fsubs
add
cli
jp
aaa
push
je
or
out
cmc
cmpsl
lret
dec
clc
ljmp
xchg
fdivr
sbb
mov
inc
in
mov
add
jnp
xchg
and
lret
enter
or
jae
pop
cmp
aad
dec
jp
xchg
test
cmp
test
push
mov
dec
dec
stos
cmp
mov
xchg
mov
mov
dec
cmp
pop
cmc
add
cmp
cmp
lcall
mov
mov
mov
mov
movsl
out
fisttps
sbb
imull
mov
xor
xor
test
xchg
xchg
push
and
enter
pop
imul
ret
iret
lds
je
js
daa
or
sub
hlt
xchg
jbe
fwait
adc
insl
pop
bound
sbb
lds
stos
xorl
jp
cmc
shlb
daa
inc
call
mov
movsb
jp
pop
sbb
sbbl
or
xchg
xchg
sub
mov
lcall
dec
mov
pop
ljmp
sbb
aaa
rol
jbe
out
fnsave
xor
mov
aad
cmc
xor
inc
push
out
xor
push
pushf
adc
in
adcl
sub
notb
test
je
fistpll
mov
cmc
mov
test
add
pop
xchg
sbb
mov
popf
enter
enter
lret
pop
nop
push
sub
mov
imull
inc
sbb
fnstcw
lods
xor
mov
addl
push
or
shll
sbb
xchg
call
in
aaa
clc
or
ljmp
and
fimull
aad
loop
jmp
push
call
or
mov
lds
mov
add
push
cmpsl
loope
ljmp
lds
push
enter
xor
out
outsb
fsubl
dec
mov
xchg
lcall
push
xor
js
add
inc
cwtl
jge
push
mov
xor
mov
adc
add
jp
mov
adc
push
mov
aad
loope
cmp
or
stos
push
dec
mov
call
stc
call
mov
or
xor
jbe
xchg
ret
xor
mov
xor
sbb
out
or
pusha
arpl
aaa
filds
mov
push
cmp
inc
jge
xor
shrl
push
push
sbb
cmp
ljmp
mov
xchg
mov
cmp
inc
cmp
cli
pop
addr16
in
push
mov
mov
pop
push
or
ljmp
sub
test
movsl
movsb
sub
push
mov
fcoml
mov
jp
cmp
repz
lcall
cmp
pusha
mov
clc
lcall
aaa
fsubrs
fcmovu
jnp
cmp
dec
mov
dec
mov
push
push
push
jns
clc
and
loope
xlat
sub
or
add
pop
jmp
mov
xchg
testl
imulb
cmp
jmp
jmp
mov
inc
jle
xlat
mov
shrl
jp
xchg
xchg
or
push
aas
in
in
lods
loope
cmp
punpckhdq
xor
sub
push
fdivp
cmp
or
jmp
leave
or
mov
xchg
loope
call
xchg
xchg
pop
cmp
lret
xor
test
xor
cmp
scas
stc
sub
jmp
in
xchg
push
rcr
out
pmaddwd
imul
out
push
cmpsl
popf
sbb
dec
cmp
mov
mov
call
mov
push
inc
mov
dec
cwtl
addr16
js
jmp
xchg
jle
xchg
inc
andl
or
in
in
and
pop
mov
sti
lds
and
aaa
mov
add
mov
and
cmc
test
adc
lcall
mov
or
rolb
or
int3
je
jp
mov
aad
out
xlat
dec
xchg
cmp
stos
test
jp
cmp
popf
test
or
push
insl
mov
push
shrl
xorb
pop
stos
out
pop
jge
mov
inc
pop
out
lret
cwtl
cs
mov
shrl
pop
jge
add
xchg
aaa
lds
js
mov
xchg
or
loopne
pop
adc
das
add
mov
es
loopne
cmp
fidivl
push
testb
stos
mov
cmpsl
cmc
inc
jbe
popf
adc
call
sub
dec
je
out
adc
fs
fstl
mov
or
clc
addr16
mov
faddl
mov
popa
popf
mov
shrl
sub
loope
jb
dec
popa
xchg
push
sbb
xlat
aaa
mov
adc
enter
xor
sbb
jmp
dec
ljmp
sbb
stos
addr16
jbe
mov
inc
cltd
mov
popf
or
lahf
fists
add
test
mov
push
cwtl
lret
mov
sub
xchg
or
sbb
jl
sub
sti
enter
mov
sub
jecxz
imulb
mov
jo
xor
enter
fadds
and
addr16
mov
pmullw
add
sub
iret
mov
out
inc
mov
and
mov
idivl
sub
test
adc
cmp
sbb
mov
fcoms
lea
int3
sub
cs
int
pop
adc
orb
mov
cmpsl
or
into
adc
pop
xchg
sbbl
ljmp
push
cmc
dec
enter
ficoml
rolb
ret
pop
in
mov
and
xchg
rclb
int
int
stc
sub
fisttps
pop
or
int3
jno
insl
ljmp
jmp
xchg
adc
jp
mov
lret
call
imul
in
je
cmp
and
in
imul
lcall
out
ret
or
push
mov
push
or
in
jmp
adc
movsb
cwtl
cmc
cli
les
cwtl
setbe
lds
repnz
or
fs
xchg
bound
daa
or
ljmp
mov
xor
or
mov
add
cmp
jg
cli
lret
jl
shrl
jmp
cmp
pop
or
pop
sti
imul
jbe
loop
xchg
xchg
pop
hlt
inc
js
std
scas
cmc
call
dec
out
push
aaa
fistpll
or
jbe
or
mov
cmc
lods
jl
outsl
add
inc
dec
imul
or
mov
imul
sub
pushl
loop
or
outsb
add
mov
adc
aas
mov
cmc
clc
xor
aaa
bound
jbe
mov
lods
sbb
orb
bound
inc
int3
aad
movb
sarl
call
xchg
cmp
js
add
cwtl
pop
xchg
cmp
arpl
push
in
push
insl
inc
rcll
sbb
xchg
xlat
mov
ret
dec
clc
xchg
inc
and
je
xlat
mov
cmp
imul
int
mov
inc
fwait
push
js
int
xchg
aad
mov
xor
std
or
sbb
cmpsb
or
sti
shrl
cwtl
add
cmp
cmp
int3
notb
pusha
mov
fildl
adc
cli
dec
xchg
mov
in
xchg
xor
in
mov
or
testb
xor
ds
stos
xchg
mov
xchg
mov
out
cmp
imul
gs
enter
push
fldl
je
sub
xor
pusha
test
or
les
jne
test
imul
je
test
cmp
es
aaa
enter
mov
pop
call
jge
test
mulb
rorl
dec
daa
pop
rcrl
mov
sub
cmp
aaa
pop
sbb
imul
pop
loop
jp
sub
or
pop
stc
cwtl
sub
xor
clc
or
enter
mov
adc
push
jb
or
leave
inc
subl
pop
pop
jne
sub
mov
sub
xchg
dec
cmp
aaa
cmp
mov
xchg
mov
sub
sub
mov
dec
js
shl
xor
fidivrs
inc
inc
and
cmp
js
aaa
div
lret
xchg
imul
jbe
in
divb
or
call
mov
sub
mov
fmuls
hlt
ficoml
lcall
es
pusha
push
jb
out
clc
enter
popa
pop
or
lock
bound
aaa
or
xchg
in
enter
cmc
aad
jno
mov
mov
xchg
xchg
cmp
add
in
xor
xchg
sbb
stos
xor
dec
mov
movsl
lahf
mov
adc
mov
aaa
sti
hlt
mov
mov
or
fisubl
or
cmp
jmp
out
mov
ljmp
add
std
adc
aad
je
pop
adc
loope
and
sub
dec
or
sub
mov
mov
sub
stos
mull
cmp
pop
inc
pop
mov
xchg
mov
mov
mov
and
push
or
das
jmp
or
mov
hlt
jbe
push
test
cmp
aaa
mov
test
sbb
je
fisubrl
jae
or
mov
movsb
ja
in
cmpb
fcom
bnd
add
xor
out
or
push
xchg
cwtl
daa
imul
or
pop
pop
xor
mov
xchg
fcoms
ljmp
mov
mov
mov
cmp
fmul
xor
pop
cli
fiadds
pop
pop
dec
push
dec
gs
enter
scas
jg
adc
xchg
cli
fs
stos
in
mov
imul
in
lret
inc
xor
xchg
dec
pop
sub
test
adc
lds
aas
or
cmp
xor
mov
pop
out
xor
add
xchg
jne
push
dec
jae
cmp
mov
jns
in
xor
inc
pop
sub
cmpsl
xor
sbb
add
fcmovbe
cli
sbb
cmp
loopne
aas
fwait
xor
adc
pop
scas
lods
mov
ror
pop
cmp
es
or
push
push
sbb
push
jp
fsubs
mov
xchg
ret
loop
fiaddl
call
xchg
adc
xchg
or
mov
bound
mov
sbb
and
fisubrl
stc
fisubrl
out
push
pop
pop
sbb
fdivrs
jne
add
mov
adc
addr16
stos
loope
adc
sbb
jnp
call
mov
scas
loop
outsb
fsubr
mov
iret
pop
mov
or
ficompl
dec
inc
jl
cmp
jns
imulb
jbe
dec
adc
clc
cmp
fadds
push
jge
mov
or
and
push
push
jl
and
mov
outsb
adc
out
mov
mov
mov
movsl
sbb
inc
mov
in
dec
pop
cltd
jae
dec
xor
or
sub
shll
insl
and
jle
pop
out
lcall
faddl
or
test
or
add
les
out
lcall
clc
in
mov
mov
stos
pop
lret
cmp
xchg
or
hlt
pop
sub
shl
xchg
xchg
int3
test
out
cmp
mov
jne
ljmp
cmp
pop
test
cmc
jbe
imul
jecxz
sbb
lcall
sbb
mov
out
xchg
out
sub
inc
push
cmp
sarb
je
call
mov
mov
fidivrl
adc
cmc
xchg
adc
or
xchg
mov
enter
mov
dec
fstps
xchg
push
push
lret
sarl
mov
push
dec
mov
mov
and
xor
push
clc
jle
adc
mov
cmpsl
cmc
sbb
out
les
in
fdivs
dec
mov
sbb
cmpsl
and
aad
in
inc
mov
sarl
jp
mov
call
adc
mov
sub
xchg
fsubrs
dec
pop
ljmp
or
xchg
mov
ret
int
push
loope
lcall
ret
xchg
mov
in
adc
ret
ljmp
or
sti
sbb
cmp
daa
lret
lods
jg
and
out
pop
and
ljmp
fiadds
xor
mov
lods
xchg
cli
sbb
cli
or
js
aaa
adc
sbb
lea
adc
push
sub
jecxz
cli
or
cwtl
inc
daa
lcall
neg
ljmp
aaa
or
into
daa
in
xlat
pop
in
pop
aas
add
pop
sbb
fstps
xchg
cmp
push
dec
subl
aad
xchg
xlat
sub
sbb
movsb
sbb
mov
cs
jmp
js
fmulp
mov
rorb
push
cmp
inc
xor
test
cmc
testl
test
fiaddl
push
pop
jp
add
sti
sahf
insb
in
xor
jbe
and
jmp
clc
mov
xchg
in
test
mov
hlt
xor
xchg
addl
fisubrl
cmp
pop
pop
fnsave
icebp
lret
xchg
jg
pop
js
sbb
fmul
pop
add
xlat
dec
push
insl
arpl
sbb
mov
in
xchg
sub
push
ficoms
sub
testl
xchg
or
mov
imul
pop
or
sub
lds
ss
in
lcall
stos
cmc
xchg
arpl
cmp
mov
xchg
or
inc
lret
inc
cli
pop
lcall
push
hlt
sub
gs
popa
stos
add
test
push
mov
clc
dec
pop
push
pop
stos
jns
pop
xchg
lods
and
cli
mov
adc
in
fsub
lcall
adc
divl
inc
in
shl
aad
mov
cmp
fmuls
nop
dec
in
sbb
mov
fisttps
out
rolb
dec
mov
stos
inc
sub
or
xor
fcmovb
idivb
jne
in
push
sti
push
imul
pop
test
imul
hlt
push
in
mov
popf
rorl
lahf
and
add
or
jl
in
data16
mov
mov
pop
mov
in
imul
add
cmp
cmc
decb
dec
xor
add
lods
loope
pop
addr16
pop
imul
sub
mov
lea
fstpl
outsl
or
add
lret
jns
mov
pop
sbb
adc
sub
mov
inc
jne
xchg
call
enter
mov
push
sbb
lds
xchg
nop
loope
and
shrl
and
dec
mov
addr16
test
mov
stos
xchg
js
cmp
mov
cwtl
out
vaddps
and
lret
iret
inc
add
aad
mov
sbbl
sbb
jbe
mov
and
rcrl
xchg
sbb
cwtl
cmp
and
imul
or
add
test
cmpsb
aad
bound
lcall
mov
jae
stos
leave
jne
out
test
mov
xchg
sub
jmp
xchg
loop
cs
cmc
adcl
cmp
jp
dec
mov
pop
cmpsb
mov
sub
dec
xchg
xchg
lret
adc
ret
out
mov
out
lahf
lds
enter
stc
addr16
test
pop
int
jmp
stos
or
loope
hlt
pop
mov
scas
dec
js
inc
sbb
in
inc
xchg
jno
sub
xor
xor
jg
and
mov
or
xchg
xchg
cwtl
clc
scas
loope
js
sbbl
mov
mov
dec
jle
inc
loope
sbb
adc
inc
inc
ljmp
push
idivl
test
fadd
idiv
sbb
inc
cmc
dec
xor
add
ja
sub
ljmp
xor
sub
ljmp
mov
adc
shrl
jbe
fcomps
xchg
ret
sub
sbb
mov
pop
mov
idivl
xor
adc
cmp
jbe
test
pop
cmp
lds
std
fadds
add
dec
sub
test
rcr
and
leave
jno
mov
mov
mov
pop
add
inc
sub
mov
in
out
add
imul
sbb
nop
addr16
cmp
lret
jne
mov
inc
cli
or
sub
cmc
sub
sub
ljmp
test
push
or
cltd
gs
cmp
ja
fwait
mov
sbb
jle
cwtl
sub
adc
stos
xor
mov
or
mov
xor
or
adc
mov
pop
lret
mov
ljmp
xor
mov
mov
lea
sbb
inc
cmc
popf
push
and
cmp
movsb
xlat
out
leave
movsb
dec
dec
xor
xchg
mov
adc
sub
test
ljmp
dec
adc
or
xchg
mov
mov
mov
xlat
pop
test
sub
mov
xchg
rorb
fdivrs
les
ljmp
push
cwtl
in
push
cmpxchg8b
xchg
dec
or
add
fidivl
not
sahf
inc
outsl
andb
pop
faddl
aad
adc
daa
jecxz
out
mov
mov
enter
ret
out
out
in
mov
js
fiaddl
xchg
bound
pop
fs
lds
imul
fisubs
mov
inc
js
mov
aad
stos
into
mov
in
es
xor
es
sbb
call
sbb
in
les
clc
jg
xchg
lds
pop
jb
enter
cwtl
cmp
daa
push
push
lcall
in
imul
roll
leave
sub
sahf
mov
lret
sbb
add
aaa
push
dec
in
mov
outsb
in
dec
out
imul
pop
mov
divl
out
out
xchg
leave
sub
fsubrs
sti
sub
dec
out
int
add
and
dec
pop
jmp
adc
or
jg
dec
or
and
mov
lret
dec
stos
mov
sbb
fcoms
and
std
fs
xchg
aad
inc
or
xchg
or
stos
sbb
inc
push
sub
mov
leave
js
out
cmp
lock
roll
inc
andb
aaa
xlat
xchg
or
sub
xor
sub
xchg
ret
bound
push
les
addr16
cmp
or
mov
imul
pop
jp
mov
dec
xchg
loope
xchg
push
push
call
enter
das
in
xchg
stc
mov
lods
dec
loop
ljmp
xchg
cmp
and
pop
mov
mov
lahf
add
lret
movsl
adc
pop
push
aas
sbb
lods
das
mov
pop
aas
xor
hlt
cmp
mov
pop
or
sub
mov
inc
cmp
mov
cmp
mov
sub
jnp
sbb
and
xor
iret
sub
imulb
lods
adc
imul
and
inc
test
dec
ret
and
fdivrs
popf
call
cs
cs
popf
jae
dec
clc
lret
data16
adc
jbe
test
dec
dec
dec
mov
cmp
mov
sbb
pop
xor
mov
lds
neg
and
mov
or
fisubrl
sbb
aas
inc
lcall
mov
pop
cltd
inc
pop
pop
int
sub
loop
mov
es
dec
cmp
ja
call
es
cli
or
mov
dec
js
arpl
inc
push
js
add
sbb
dec
lea
pop
mov
dec
out
cmpsb
mov
pop
addb
cmp
shl
inc
cmp
pop
je
aad
mov
mov
cmp
in
add
in
sub
js
xchg
xchg
dec
sub
clc
and
pop
push
movl
out
jp
sub
add
imul
add
scas
cwtl
loopne
ljmp
dec
sub
sbb
movsb
shll
rcll
mov
test
cli
xorb
movsb
ljmp
out
push
aaa
add
mov
mov
pop
out
iret
or
pop
mov
push
xchg
inc
mov
push
or
js
jge
push
or
mov
outsl
pop
loop
mov
xchg
add
loopne
fidivrs
repnz
movb
jle
roll
test
arpl
pop
and
mov
test
pop
dec
aas
fstl
stc
adc
mov
xchg
pop
mov
inc
cmp
cwtl
xchg
sub
xor
imul
cli
test
fldcw
mov
and
xor
pop
sbb
sub
mov
mov
clc
lret
add
int
mov
daa
in
jp
inc
loop
inc
sub
es
mov
cli
gs
mov
js
xchg
push
mov
aas
stos
adc
aas
mov
jle
xchg
aaa
lret
inc
out
add
xchg
mov
clc
cli
cmp
sbb
add
mov
call
push
notl
and
mov
pop
inc
and
aad
movl
mov
dec
ljmp
jb
mov
xchg
mov
aad
clc
aaa
or
jp
jne
mov
adc
cmp
push
xchg
or
aaa
fs
sub
adc
addr16
dec
push
pop
mov
int3
sbb
ret
pop
aas
adc
lcall
stos
dec
mov
or
outsb
movsb
mov
cmp
mov
jle
jnp
pop
dec
aam
inc
icebp
xor
push
in
or
shl
mov
or
xor
dec
aaa
imull
lds
mov
mov
loop
inc
ljmp
jmp
cltd
das
mov
sbb
xchg
mov
daa
imulb
mov
jg
cwtl
jbe
cmc
enter
mov
xor
adcl
sbb
stos
sbb
lcall
out
dec
orl
addb
dec
mov
in
lods
fiadds
adc
fldt
or
test
aad
cmp
and
mov
cli
test
cwtl
cmc
out
xor
mov
clc
test
xchg
push
sbbl
faddl
mov
dec
cmpsb
xchg
xchg
lcall
cmp
imul
bound
ret
hlt
ret
sub
push
or
inc
out
xchg
fwait
in
call
ss
fisttpl
out
imul
push
lock
aas
add
in
pop
push
push
jl
addr16
jbe
dec
stc
mov
adc
adc
mull
xor
fs
dec
sbb
adc
aad
test
fxch
ljmp
lret
daa
cli
xlat
popa
xchg
adc
shll
dec
xchg
jns
sarb
loope,pn
dec
pop
adc
xchg
jbe
stos
scas
ss
add
mov
cli
test
push
mov
dec
and
dec
test
enter
out
jnp
jbe
pop
add
dec
pop
xchg
sbb
in
out
push
popf
pop
mov
mov
mov
mov
popa
icebp
mov
pop
daa
mov
sbb
popf
dec
xchg
xchg
imul
jno
in
mov
insb
dec
xchg
push
repz
or
sbb
cmpsb
xor
pop
mov
jl
push
push
sbb
sub
lds
and
push
or
mov
addr16
sbbb
or
loop
mov
or
cwtl
ffreep
mov
mov
and
dec
mov
aaa
xlat
mov
out
cmp
lea
fadd
jp
mov
out
sbb
mov
inc
in
loope
sub
mov
dec
mov
xor
in
mov
inc
sbb
sbb
shr
dec
dec
fwait
push
xlat
ljmp
sub
int3
ret
loop
or
daa
mov
pusha
shl
xchg
in
or
xlat
clc
cmp
call
test
pop
lds
icebp
out
js
loopne
cmp
inc
or
aad
pop
orl
or
in
add
mov
cmp
vmovlps
add
dec
in
pop
addr16
imul
call
jg
lcall
aaa
sti
outsb
fincstp
ljmp
pop
cmc
gs
sub
fistl
lret
mov
popl
lods
lret
and
push
dec
data16
cmc
mov
push
fcom
mov
int
sahf
adc
out
ljmp
imul
push
test
xchg
jbe
pop
lcall
jp
negb
mov
xor
ljmp
ljmp
nop
stos
icebp
xchg
test
mov
pop
push
ja
in
je
movsb
leave
lcall
addr16
cmpsb
daa
xor
sbb
mov
add
xlat
out
push
imul
inc
out
insb
or
addr16
cmp
call
and
stos
xchg
sbb
sub
aaa
cmc
pushf
addr16
jne
data16
mull
cmp
pop
mov
mov
xchg
imul
or
mov
cs
movsb
cmp
add
inc
mov
adc
arpl
cmp
or
iret
loop
leave
js
push
shr
rcl
sub
dec
add
mov
xlat
fimull
test
divl
outsl
add
call
sub
jo
adc
sarl
jg
in
test
arpl
mov
rcll
fmuls
dec
cli
jp
leave
sahf
popf
push
pop
mov
testl
xlat
adc
fimull
lahf
mov
xchg
xchg
lcall
mov
lods
sbb
test
add
jbe
sub
push
and
negl
stos
imul
adc
lret
xor
xchg
ljmp
out
sbb
clc
mov
fisubl
mov
push
and
sbbl
mov
daa
popa
add
sub
pop
lcall
aad
xchg
adc
testb
gs
adc
add
xchg
mov
cmp
push
sbb
js
xchg
or
mov
es
cmpsl
xchg
and
or
sbb
hlt
xchg
sbb
dec
and
sti
push
cwtl
mov
or
ret
xchg
sub
sbb
mov
repnz
in
pop
daa
mov
dec
ljmp
inc
or
int3
imul
inc
push
push
push
out
jbe
push
call
push
cs
or
ds
outsb
xchg
push
ljmp
push
mov
rorl
idivb
stos
or
jmp
inc
enter
pop
ja
mov
pop
popa
and
xchg
mul
sbb
jne
xlat
ja
imul
inc
fdivrp
cwtl
mov
inc
mov
pop
ficompl
or
pop
pop
xchg
dec
and
pop
xchg
cmc
lret
pop
xlat
sub
jl
jl
ljmp
out
lcall
and
sub
xchg
fiadds
nop
adc
mov
std
mov
or
stos
cmp
xorl
cwtl
xchg
rorl
fstps
int
mov
sbb
mov
lcall
mov
jg
addr16
dec
pop
ret
lds
push
inc
cmpsb
cli
add
cmp
movsl
data16
fwait
jb
mov
push
add
lret
mov
popa
lcall
xchg
jbe
daa
sub
leave
test
sub
and
in
fistl
test
cmp
les
pop
test
push
push
and
insl
cmp
mov
mov
or
adc
sbb
testl
xchg
lds
sub
adc
or
xchg
mov
orl
sub
or
xlat
test
fsubr
lahf
dec
int
sbb
data16
rorl
sub
and
jge
or
ret
adc
aaa
mov
sub
xchg
and
push
leave
add
add
mov
sbb
add
add
cmp
out
mov
pushf
pop
subb
xor
mov
icebp
dec
rolb
cmp
pop
mov
and
xchg
mov
or
adc
dec
sbb
das
insb
cmp
ss
xchg
add
out
imul
arpl
cmp
hlt
fs
mov
aas
xchg
pop
out
or
xor
lret
movb
call
mov
shrb
adc
shll
and
push
pusha
pop
sbb
daa
mov
jmp
mov
aaa
xchg
sub
jl
or
leave
aas
ljmp
call
xlat
icebp
adc
pop
dec
cmpsb
leave
or
je
cwtl
inc
ret
fsubl
in
mov
pop
jbe
jl
filds
ljmp
pusha
in
cwtl
in
into
and
inc
stos
cmp
stos
ret
mov
lret
jbe
jg
enter
int
mov
pop
or
jne
xchg
or
jp
fdiv
sub
imull
cli
xchg
pop
pop
test
int3
mov
cmp
adc
fwait
lret
mov
sub
stc
insb
cmp
jne
jl
lahf
mov
push
roll
cltd
ret
addr16
insl
in
out
fistpll
shlb
mov
cmp
pop
mov
or
mov
je
adc
cli
xor
xchg
mov
mov
addl
xor
xor
or
fisubrl
cmp
sub
stc
xchg
aad
inc
or
and
adc
pop
ret
or
add
in
adc
out
mov
pop
push
test
dec
xor
or
sbb
inc
les
fwait
inc
pop
test
enter
out
jmp
inc
pushf
sub
call
add
xlat
mov
mov
xchg
in
and
in
mov
out
mov
ljmp
add
ret
and
pop
mov
mov
ljmp
in
inc
push
jl
mov
mov
lds
or
aad
ljmp
push
rol
cmp
jp
pop
or
adc
xchg
sbb
add
sub
pop
lret
xor
jmp
lret
lcall
cmc
add
jo
xchg
call
stos
mov
dec
sub
leave
addr16
insl
orl
jb
fistps
pop
ret
dec
out
mov
cli
xor
xchg
int3
js
scas
pop
pop
adcl
addr16
pop
aad
ljmp
inc
sbb
xlat
mov
lock
idivl
mov
sbb
push
push
icebp
pop
ljmp
clc
sub
popf
ja
lret
push
out
xchg
and
push
fcompl
cs
sti
pop
rorb
dec
dec
ret
aad
xchg
aaa
xlat
lcall
cmp
in
shll
sub
ja
test
cmp
sub
pusha
or
into
es
enter
push
ljmp
int
fnstsw
out
xbegin
or
ss
lea
mov
jp
jnp
and
cmp
les
mov
pop
daa
jbe
mov
mov
add
push
lahf
pop
xchg
dec
hlt
dec
js
xchg
add
imul
xor
out
or
pop
or
enter
pusha
stos
clc
and
jbe
add
clc
pop
cmp
popa
cli
xor
jo
ljmp
mov
mov
enter
imul
push
out
xchg
push
and
and
jae
mul
aaa
mov
inc
ljmp
lcall
add
push
stos
lahf
xor
or
mov
sbb
jmp
or
mov
loopne
lcall
int
jecxz
out
lret
xchg
dec
stos
xchg
xchg
cmp
call
in
add
pop
and
lcall
pop
test
mov
dec
and
fcmove
fimuls
add
xchg
or
push
cmc
stos
imul
cmp
xchg
in
notl
lea
test
and
and
inc
pop
call
test
dec
in
cwtl
xlat
fistl
adc
loop
cwtl
pop
and
inc
push
dec
mov
adc
jns
sbb
jne
push
pop
out
out
or
sub
add
addr16
dec
movsl
mov
push
and
out
test
xchg
xlat
ljmp
inc
jp
lret
pop
mul
out
fadds
xchg
popa
mov
das
mov
adc
adc
mov
xchg
xchg
ljmp
cwtl
pop
xchg
push
mov
fiaddl
out
and
or
jo
mov
xchg
mov
test
or
dec
push
push
imul
and
cmp
xchg
xor
xchg
repnz
cmp
fimull
dec
sub
cwtl
lret
lret
mov
aad
add
out
subl
push
jmp
dec
jl
daa
dec
fildll
inc
rcr
sbb
cli
leave
fnstsw
and
dec
mov
pop
xchg
mov
xlat
lret
inc
mov
cmp
arpl
out
xchg
aaa
bound
out
pusha
dec
or
inc
call
out
inc
mov
mov
rcrl
ljmp
hlt
jne
popf
jmp
xchg
lcall
fisubl
push
jp
pcmpeqb
pop
xlat
dec
repz
mov
cmp
ljmp
mov
incb
je
adc
ss
call
imulb
aaa
or
cmp
sbb
xchg
sbb
sar
popf
lods
les
cmc
dec
xor
dec
test
mov
loope
cmpsb
lds
jge
pop
loope
add
dec
test
xchg
je
fsubs
and
int
stc
mov
pop
jp
fildll
mov
test
lcall
xchg
pop
test
add
mov
sub
xchg
push
addl
inc
divb
fisubrl
push
fcompl
jbe
adc
cmpsl
and
stos
inc
packsswb
add
sti
push
sbb
cmc
xor
and
aaa
dec
es
mov
call
mov
sub
fistps
divb
push
sbb
fs
cmp
dec
cmp
enter
lcall
aad
mov
icebp
adc
enter
push
mov
leave
lcall
jb
loopne
add
adc
add
pop
or
jp
dec
or
mov
lret
test
prefetchnta
out
mov
fisttps
rcll
add
addr16
dec
and
clc
sbb
sub
xlat
pop
cmp
xchg
ret
dec
mov
daa
push
lret
dec
pop
mov
cli
and
mov
cli
xorl
cli
push
push
stc
pop
dec
adc
inc
sub
movsl
dec
scas
call
popf
mov
and
enter
dec
lods
or
mov
mov
mov
stos
xchg
cmp
xor
xchg
cli
sbb
sub
subb
or
lock
mov
or
test
popf
lods
xchg
out
leave
dec
leave
dec
stc
addr16
ds
pop
cmp
push
shlb
lea
pop
mov
fnstenv
sub
adc
mov
inc
sbb
jg
jge
ja
xchg
dec
mov
lcall
hlt
mov
hlt
aad
and
movsb
lcall
imul
imul
es
shll
mov
inc
fcmovb
sub
rcrl
in
cmp
lea
jbe
daa
cmpsb
lret
add
sub
imulb
cmpsb
cmp
stos
loope
cmc
add
sbb
xor
test
xchg
dec
sub
mov
pop
or
test
adc
xchg
daa
aaa
lret
jmp
pop
sub
out
hlt
lds
nop
cwtl
pop
lret
fisttpll
jp
addr16
push
mov
sub
push
int3
and
icebp
daa
daa
xchg
mov
jbe
out
ljmp
jbe
sbb
bound
sbb
xchg
push
jb,pn
xchg
popa
popf
cmpsb
sub
mov
leave
push
inc
fstpt
mov
bnd
in
push
fistpl
ja
mov
aaa
mov
xchg
fildl
daa
sbb
add
sub
xchg
iret
and
or
dec
in
dec
xor
ljmp
subl
pop
mov
push
add
xchg
out
test
idivb
stc
dec
fimull
pop
and
cmp
cmp
iret
jp
adc
in
pop
je
dec
or
outsl
adc
mov
jb
jecxz
xchg
int3
fs
xchg
sub
or
dec
ljmp
out
push
mov
lahf
mov
mov
enter
dec
and
push
add
or
add
ljmp
xchg
jg
cli
or
inc
fcmovbe
sub
orb
cmp
in
daa
fcmovbe
sarb
enter
pop
daa
xchg
inc
xchg
pop
mov
popa
je
mov
stos
push
xchg
add
mov
add
dec
imul
cmpsl
jmp
ljmp
inc
xchg
pop
subl
loop
or
fs
pushf
hlt
lds
ja
dec
inc
push
out
or
pop
xlat
sbb
cmc
dec
dec
sbb
push
dec
add
nop
dec
dec
mov
pop
push
aaa
ds
inc
loope
mov
mov
push
lods
call
xchg
jnp
test
lds
cmp
addr16
or
pop
inc
push
mov
std
inc
mov
in
mov
clc
sbb
or
js
cwtl
xor
in
pop
call
imul
add
pop
sub
movsl
out
sub
lcall
pop
insl
jg
std
sarb
xchg
pop
or
xchg
add
dec
dec
fistl
insl
idivb
dec
movsl
hlt
cmp
dec
mov
xchg
test
sahf
mov
cvtpi2ps
negb
xor
cmc
dec
cmp
ljmp
mov
jmp
sti
push
push
in
or
subl
inc
cmp
or
xchg
cmp
cmpl
cmpsl
mov
add
mov
icebp
mov
cmp
test
add
xlat
push
hlt
add
dec
mov
inc
mov
fsubs
cmp
fnstsw
pop
push
das
lea
fidivl
fcomps
cmpb
shr
movsb
stos
lcall
sbb
adc
push
adc
daa
shl
in
push
mov
push
popa
clc
adcb
mov
mov
pop
js
jmp
std
fcmove
and
mov
stos
cmp
fdivp
popf
test
inc
mov
pop
lods
xchg
sub
jns
in
dec
es
je
stos
push
cmp
imull
jae
xchg
mov
or
jg
addr16
clc
insl
add
subl
pop
adc
test
jne
pop
mov
push
rcl
or
cmpsb
cmc
push
dec
loope
sbb
lahf
or
mov
aad
sub
pop
lods
sbb
mov
xchg
jb
mov
xlat
cmp
ljmp
cltd
sbb
daa
cli
sbbl
movsl
movsb
ret
jnp
or
aas
jl
fcmovbe
xor
test
dec
in
xchg
dec
xor
add
adc
in
js
adcl
fadd
jecxz
xor
neg
int
xlat
ljmp
add
daa
or
sbb
cmp
and
fwait
mov
push
xchg
lret
sub
enter
sbb
adc
cwtl
daa
jbe
movsl
dec
lret
and
mov
out
and
sub
fs
stos
jl
adc
mov
inc
idivl
inc
lds
enter
xchg
shlb
aad
arpl
pop
add
mov
pop
mov
sub
mov
xchg
imul
inc
xchg
mov
cmp
enter
fsubrs
push
mov
cltd
pop
pop
or
sub
shlb
test
lcall
push
push
mov
testb
aad
fisubrl
out
jmp
jge
lds
enter
js
mov
jmp
cmp
xlat
cmpl
sub
sbb
pop
push
dec
dec
ret
xchg
mov
mov
adc
sbb
jbe
arpl
lcall
pop
cwtl
int3
cmp
mov
mov
or
lret
cmp
dec
or
leave
stos
inc
out
cli
sbb
fadd
or
divb
xchg
aam
pop
add
jne
jnp
js
or
mov
daa
mov
js
aam
daa
sbb
shr
push
jmp
adc
or
das
pusha
push
movsb
sbb
pop
ficompl
mov
fldcw
popa
xchg
inc
lcall
jb
or
dec
mov
lcall
xchg
jns
inc
sub
cwtl
call
aad
push
shl
clc
je
imull
adc
jmp
push
popa
mov
xor
adc
aad
outsb
call
mov
pop
lret
clc
mov
mov
cwtl
xchg
mov
mov
in
icebp
inc
pop
sub
enter
or
sbb
add
leave
in
sbb
cmp
add
dec
adc
xchg
notb
dec
push
pop
or
aaa
stc
push
dec
pop
aad
pop
leave
test
cmp
mov
mov
dec
lcall
cmc
dec
enter
mov
or
push
jp
hlt
or
fidivrl
cmp
int
mov
push
in
cmp
mov
imul
fmuls
inc
stos
out
dec
pop
imul
testb
jno
xchg
mov
cmp
dec
in
mov
dec
jbe
xchg
ljmp
ljmp
out
mov
cmpsl
cmc
or
shrb
cltd
mov
pusha
xor
out
cmp
aas
jns
or
or
imul
lods
inc
or
jne
clc
add
in
daa
icebp
lahf
mov
push
and
cltd
dec
pop
mov
xchg
push
sub
pusha
pop
imul
ljmp
or
inc
aaa
xlat
jno
je
or
dec
addb
sahf
add
xchg
ret
cmp
sub
or
sbb
mov
mov
aaa
mul
sbb
popf
out
xchg
jne
jno
or
out
xchg
in
addr16
into
in
rcrb
std
cli
adc
divl
lret
test
mov
daa
icebp
insb
sub
or
cmp
sti
jmp
out
dec
ljmp
rol
jecxz
ljmp
push
jle
mov
sbb
out
sub
and
mov
repz
call
and
jmp
jmp
pop
lcall
addr16
in
dec
xchg
mov
jno
dec
mov
jp
testl
cmp
dec
pop
mov
or
pop
xchg
aaa
dec
mov
mov
pop
mov
cmc
pop
imulb
adc
movsb
push
call
xor
call
mov
fdivs
xchg
jbe
adc
cmp
jo
or
pop
xchg
loop
add
cmp
cmpsb
pop
hlt
cmp
mov
shr
testl
xor
in
and
adc
out
testl
bound
or
xor
js
push
add
ret
pop
dec
faddl
pop
xchg
and
or
fidivrl
mov
xchg
xchg
xor
leave
inc
cmp
in
mov
cltd
clc
js
fcmovu
mov
loope
daa
mov
sub
xchg
inc
cmc
xchg
pop
popf
fs
pop
push
hlt
cmp
mov
mov
adc
cmp
lds
test
xchg
ret
cli
out
movsl
push
gs
lret
fcoms
mov
cmc
idiv
dec
sub
dec
test
aaa
imul
dec
adc
mov
mov
fsubrl
cmp
add
cmpsb
push
int3
andl
cmp
popf
fs
dec
add
mov
in
mov
pop
cmc
mov
cmp
or
pop
dec
adc
or
test
out
or
push
test
xchg
xchg
enter
mov
xchg
call
xchg
lock
or
jae
daa
mov
push
clc
cltd
test
pop
mov
out
xchg
inc
xchg
sbb
mov
push
pop
sub
jne
in
movsl
cmp
mov
shlb
push
js
add
mov
lcall
sbb
mov
arpl
leave
xchg
jp
xor
pop
xor
into
insl
mov
pop
fdivs
mov
sbb
adc
mov
cmc
inc
in
aad
xchg
mov
xchg
xor
sub
inc
aad
inc
adc
mov
sub
jns
jmp
je
js
arpl
mov
dec
out
cld
mov
pop
pop
mov
adcb
xor
adc
xchg
out
xchg
fdivl
aas
dec
push
adc
xor
in
lret
fcoms
mov
mov
pop
mov
mov
sbb
pop
xor
sub
dec
cmc
mov
cmp
xor
sbb
fisubrl
out
in
push
leave
add
in
xor
dec
mov
test
clc
pop
add
lods
adc
mulb
stos
xchg
cmp
and
push
test
and
sbb
pop
xchg
and
je
daa
loope
js
jb
adc
sbb
in
add
sub
xor
xchg
popa
lds
xchg
pop
in
shrb
aad
sbb
xchg
pop
inc
testb
and
or
add
sahf
jg
addr16
jmp
popf
scas
aad
mov
dec
cli
cmp
mov
leave
adc
dec
jmp
xchg
ret
cltd
sbb
adc
cmc
cwtl
dec
mov
cld
push
pop
enter
mov
arpl
sbb
fists
out
cmp
mov
jbe
jmp
xchg
lcall
sbb
fsubrs
dec
mov
adc
call
adc
lods
xchg
mov
lahf
mov
inc
out
sub
jl
sbb
shrb
adc
imull
cmp
inc
outsb
testb
js
mov
outsl
and
mov
jp
ljmp
cmp
mov
or
push
in
pop
and
sub
movsb
jmp
in
xchg
movsb
cltd
fldcw
loopne
fisubrl
test
lds
dec
jp
call
in
cli
push
repnz
inc
cmp
xchg
inc
mov
sub
insb
adc
pop
add
out
push
jne
out
test
cmp
pop
aad
pop
orb
enter
dec
cmpb
les
out
aaa
cwtl
cmp
xchg
int
xchg
xor
mov
fs
xchg
cmp
xchg
leave
out
sub
bound
mov
out
cmpsb
imul
mov
dec
clc
rcrl
leave
sbb
mov
out
sub
fdiv
ja
sahf
inc
aad
add
or
pop
sbb
push
xor
das
add
test
cmp
xor
mov
sbb
cmpb
stos
movsl
jecxz
loope
dec
and
mov
pop
xor
mov
int
clc
in
in
add
das
mov
jle
push
sbb
xchg
call
add
cmp
stc
aaa
xchg
movsl
test
lret
out
sar
pop
fnstsw
pushf
or
xchg
js
lcall
mov
sahf
imulb
dec
lret
pop
movsb
ret
aas
adc
sbb
test
jne
cmpsl
pop
div
test
and
roll
xlat
fnstenv
out
sub
xor
mov
xlat
jp
fwait
mov
pop
jbe
adc
sub
sbb
xchg
dec
lcall
mov
test
and
push
test
mov
xor
sub
xchg
push
out
mov
add
js
pop
add
cmp
xchg
cmc
mov
mov
pop
cwtl
enter
call
dec
cs
mov
enter
movsb
sbb
out
cmp
mov
cmpsb
pop
jbe
les
inc
js
add
mov
lea
add
push
aas
rol
xchg
mov
add
inc
stc
xor
sbb
dec
lods
lcall
andb
xlat
xchg
xchg
or
cwtl
push
xor
push
cmp
or
in
clc
xlat
repnz
xor
push
pop
pop
adc
movsb
add
or
sub
and
loope
sbb
xor
mov
mov
push
test
sahf
in
insb
cld
int
int
js
enter
mov
cmp
clc
xchg
mov
out
in
imul
ljmp
and
mov
imulb
clc
outsb
aad
lea
mov
movsb
int
mov
movl
fisubrl
dec
cmp
mov
hlt
lds
inc
testb
aad
dec
dec
lds
or
mov
call
addr16
fmul
leave
jge
dec
xchg
jmp
out
popf
scas
add
mov
aad
mov
xor
fsubr
mov
xor
push
mov
lds
mov
pop
ljmp
aad
xlat
addr16
fdivrs
mov
int
in
in
mov
sub
aaa
sbb
loope
in
add
pop
mov
stos
or
lcall
aaa
add
pcmpgtb
addr16
mov
cmp
push
inc
out
inc
mov
aaa
mov
aas
xchg
and
nop
xlat
xchg
mov
cli
fcomps
xchg
or
or
lahf
scas
inc
adc
cwtl
rcrl
jbe
xlat
mov
mov
xor
out
ljmp
fs
mov
lcall
in
xchg
in
pop
scas
lods
and
add
mov
sar
popa
push
cmp
out
daa
fwait
stos
movsl
xor
rorl
mov
inc
dec
pop
divb
icebp
or
stos
dec
xchg
dec
mov
addr16
adc
push
fdivrs
gs
js
bound
rorb
pop
sti
adc
and
adc
fs
fwait
jge
out
out
xchg
ficoms
sbb
xor
out
iret
bound
jg
addr16
js
cmpsl
lcall
sti
icebp
jbe
cmp
dec
xlat
pop
dec
mov
pop
mov
lret
jp
ljmp
popf
imul
mov
dec
push
mov
int3
fstps
push
sub
imul
fst
shll
jno
cld
stos
cmp
sub
cmp
xor
js
mov
fdiv
push
jp
xchg
gs
mov
adc
mov
movb
or
xlat
fiaddl
mov
dec
cmp
adc
out
ss
cmp
adc
fldcw
sub
mov
xchg
mov
mov
mov
inc
dec
sbb
xchg
xor
aam
shl
or
ljmp
stos
push
cwtl
push
ret
lock
std
les
movsb
leave
jbe
pop
add
in
adcl
pop
addr16
movsl
sbb
add
clc
sbb
xor
sbb
cmp
mov
cmc
xchg
imul
dec
repnz
mov
cli
xchg
arpl
inc
scas
add
cli
xor
mov
cmp
dec
dec
adc
or
mov
ret
lds
mov
inc
lret
sbb
shrl
movsb
call
jns
lods
adc
mov
or
mov
lcall
mov
mul
pop
pop
cmp
std
push
mov
inc
out
aas
adc
dec
push
pop
ret
mov
pop
popaw
sbb
subb
dec
xor
jp
cltd
mov
in
mov
sbb
xchg
mov
xlat
and
push
cmp
call
push
xor
or
rorb
pop
dec
test
cmp
pop
nop
imulb
mov
cmp
sbb
mov
mov
popa
adcl
fsubl
push
cwtl
xchg
push
mov
outsb
jp
mov
movsb
xor
cwtl
ljmp
aaa
pop
adc
push
lds
sbb
cwtl
in
ss
sbbb
js
clc
or
xor
pop
mov
dec
out
cli
or
or
lret
dec
dec
xchg
cmp
sub
test
sbb
mov
push
dec
cld
aad
cmp
sub
aaa
mov
xchg
adc
notb
cmp
xchg
sub
push
aad
pop
cmp
cmpsb
dec
in
es
in
je
cmc
orl
dec
xchg
xchg
negl
enter
repz
movsb
jg
mov
fildll
clc
lea
dec
bound
stos
call
stc
push
stc
pop
out
mov
xchg
sbb
and
and
icebp
ljmp
loope
pop
dec
out
std
mov
mov
cld
sub
dec
inc
in
loopne
mov
in
mov
mov
in
hlt
and
mulb
xchg
mov
sbb
push
in
cmp
scas
loope
jp
cli
push
std
jp
enter
pop
dec
call
je
shll
in
sub
inc
push
xor
cwtl
test
imul
aad
cltd
xchg
jp
filds
pop
xchg
pop
adc
imul
sub
daa
dec
pop
jle
pop
enter
xor
xchg
dec
xchg
pop
sub
mov
in
stc
aad
push
push
sub
mov
lret
data16
out
addr16
clc
enter
xlat
testl
js
push
or
ds
arpl
lret
adc
sbb
stos
ffree
jmp
mov
notb
inc
and
fdivs
jecxz
fsubrs
lahf
xchg
mov
sbb
xchg
fmuls
or
xor
andb
mov
or
xor
pop
dec
popf
xchg
fmuls
orl
add
jnp
pop
pop
jbe
stos
cmc
icebp
sbb
mov
clc
fmulp
test
inc
idivb
movsl
sbb
insb
fidivl
fists
xor
mov
xlat
cmp
imul
dec
cltd
in
pop
adc
xchg
adc
mov
mov
imul
jmp
lea
cmc
sub
inc
in
sub
addb
lret
pop
or
in
addr16
int
cmpsl
sbb
pop
pushl
sahf
sbb
fcoms
or
ds
mov
stos
mov
xchg
decl
or
dec
jp
aas
or
or
push
cmc
xlat
out
mov
add
shr
movsl
cwtl
mov
inc
push
subl
clc
inc
aad
fisubrl
dec
dec
jne
out
mov
pop
clc
pop
push
jmp
shl
jle
pusha
cmp
mov
loope
cli
sub
lods
lods
cmp
call
addr16
xchg
pop
test
push
fsubl
cmp
dec
jp
scas
sbb
or
jno
popf
push
mov
jl
in
movsb
xchg
shll
daa
lea
sub
xor
push
or
xor
mov
mov
xor
out
ficompl
xchg
push
add
sbb
in
js
inc
fidivl
adc
lds
int
xchg
push
stos
arpl
dec
enter
push
cli
call
mov
jbe
ljmp
cmp
loope
mov
nop
sub
jbe
mov
sub
movsb
pop
test
loope
ljmp
sub
movb
gs
pop
mov
testb
dec
xor
addr16
cmp
mov
and
icebp
or
popl
call
lret
xlat
cmp
movsb
clc
hlt
add
cmp
adc
mov
cmc
jnp
mov
lret
xchg
out
or
adc
les
and
test
fldl2t
cmp
sbb
mov
cmpsl
clc
fstps
dec
and
or
imul
push
aaa
or
notb
je
pop
je
fcomi
in
fdivrs
mov
cmp
dec
sub
frstor
mov
scas
daa
subb
mov
subb
adc
aaa
imul
scas
or
std
pop
insl
cmp
fcmove
xlat
imul
add
ret
imul
add
les
mov
xchg
fisttpll
pop
out
mov
divb
sub
adc
inc
aaa
jmp
adc
in
mov
je
test
mov
jmp
cwtl
loopne
xchg
lds
vmwrite
add
dec
test
imul
cmpsl
jg
or
sbb
cli
mov
mov
adc
addr16
rolb
pop
lds
out
dec
mov
push
jmp
out
lea
outsl
or
sti
ljmp
sub
adc
call
shl
aas
int
in
jae
scas
jmp
or
jp
cmp
or
fadds
push
mov
daa
ljmp
dec
sub
pop
mov
lea
fcomps
add
jbe
adc
mov
lcall
sub
js
icebp
adc
lret
mov
xchg
xor
stc
jmp
mov
lret
xchg
cmp
and
mov
mov
js
jp
rclb
pop
mov
jmp
xchg
pop
stc
or
insl
pop
imul
and
stos
cmp
sbb
or
lcall
push
cmp
add
cmp
js
adc
inc
enter
lret
pop
adc
fwait
cltd
xchg
mov
sbbl
icebp
inc
or
rcr
sbb
sbb
je
mov
ret
cmpsl
or
adc
xchg
xchg
add
call
jp
xchg
sub
int3
inc
xor
fcoms
aaa
jb
loope
push
test
pop
sub
lea
lea
adc
gs
and
push
xor
xchg
pushw
lcall
ficoml
movsb
xor
int
outsl
push
mov
mov
stos
sub
jge
push
and
cmp
fcompl
jae
in
out
xlat
adc
jbe
sub
fs
xchg
imul
js
jnp
sub
sub
stos
push
mov
or
pop
push
cmc
daa
sbb
bound
jb
add
sub
cmp
pop
ljmp
mov
lock
js
mov
call
or
cmp
mov
hlt
outsb
jle
in
test
cmp
pop
inc
orb
add
dec
or
inc
sub
out
aaa
mull
inc
and
fsubrs
push
push
lcall
je
mov
out
push
dec
in
or
or
jl
lea
push
jns
cli
or
stos
xor
mov
or
add
xchg
mov
lcall
je
out
subl
ret
imul
inc
cmp
sub
pop
adc
mov
test
cmp
dec
rcrl
mov
jge
cmp
cli
sbb
pop
loope
dec
adc
mov
hlt
addr16
adc
pop
sub
mov
ljmp
xchg
dec
dec
imull
loop
divb
fdivrs
cli
repnz
cmp
inc
jge
aas
mov
pusha
out
popa
jae
stos
mov
aas
test
jp
cmp
test
lret
aad
dec
imul
xchg
out
sub
call
pop
notb
test
mov
sbbl
or
xor
add
test
daa
jp
dec
xchg
jne
mull
or
aad
lds
push
out
sbb
cmp
mov
mov
and
es
and
sbb
mov
mov
stos
or
mov
test
cmp
mov
in
mov
stos
stos
xlat
push
fisubl
sub
sbb
bound
mov
ss
aaa
cmp
or
loopne
push
sub
cmp
clc
test
filds
mov
or
add
xchg
popa
test
movsl
stc
sbb
cmpsl
addr16
insl
lret
test
or
in
or
cli
pop
adc
mov
adc
jno
adc
fsubr
xchg
mov
xchg
int
sbb
test
mov
scas
dec
cmp
inc
in
xor
test
int
xchg
lret
pop
out
je
cmp
repnz
lds
negl
fwait
sub
test
adc
idivl
test
das
xadd
mov
mov
cmpsl
cmc
sub
mov
mov
inc
test
inc
xchg
sbb
pop
fcom
inc
pop
in
or
jns
popa
out
or
dec
dec
leave
adc
js
inc
mov
repnz
or
lret
cmp
mov
ljmp
clc
stc
test
out
sub
or
adc
out
test
inc
ret
out
jae
mov
xlat
lock
mov
sub
mov
xchg
enter
fcmove
mov
divb
stos
cltd
out
pop
dec
dec
push
mov
imull
je
pop
out
cmp
ret
fsubs
lcall
ljmp
inc
cmc
imulb
fidivl
xchg
cli
fdiv
rorb
dec
sub
and
pop
je
pop
cmp
movsb
cmp
mov
xchg
scas
ljmp
loop
sub
cli
mov
mov
add
stc
add
cmp
repnz
push
mov
jmp
or
dec
push
gs
jmp
push
xor
xchg
mov
ret
lcall
sbb
cmp
inc
push
subb
sub
sub
mov
mov
jp
push
jbe
mov
dec
push
aad
mov
testl
clc
test
xlat
out
fs
sub
pop
dec
mov
popf
xchg
xor
dec
pop
insl
ljmp
cmp
notl
add
cli
stos
push
aad
dec
loope
imul
sub
and
jb
fsubs
xchg
cmp
pop
loope
fdivs
cli
or
or
sbb
int
mov
daa
xchg
test
imull
rcrl
mov
int3
in
sbb
imul
out
sbb
jp
xchg
mov
add
pop
pop
pop
dec
inc
xlat
xchg
lret
lcall
shlb
outsl
mov
or
dec
and
repnz
lds
cwtl
adcb
pop
in
stos
jns
xor
mov
jp
push
lock
mov
divl
test
adc
lock
out
push
xlat
daa
dec
cmp
or
adc
jns
stos
jp
out
xor
pop
jne
aas
jne
shl
in
or
jle
or
cs
shll
fisubs
lcall
xchg
cmpsb
lahf
icebp
cmc
pop
imul
or
jb
mov
out
ljmp
mov
xchg
rorb
mov
or
jno
xchg
pop
adc
dec
gs
stos
push
test
and
pop
pop
or
fdivr
mov
std
out
add
aam
movsb
mov
out
cwtd
cmp
jp
jl
shr
dec
pushf
lea
pop
pushf
mov
mov
xchg
push
add
mov
lret
xor
and
jbe
inc
mov
mov
insb
dec
xchg
in
lret
cwtl
push
jo
xchg
test
daa
xor
and
jnp
movsb
out
inc
cmp
sub
push
dec
cmp
imul
cwtl
pop
sub
xor
mov
xor
and
pop
out
aad
pushf
pop
dec
xchg
xor
adc
push
aaa
int3
cmpsb
sti
cmp
mov
xchg
dec
push
out
loop
cmp
fisubrl
fwait
cmp
push
cmp
clc
cmc
dec
cmp
sub
es
and
mov
popa
cld
inc
sub
shll
mov
in
mov
pop
ret
pop
inc
aaa
pop
or
sbb
jecxz
out
push
mov
testl
call
and
mov
push
lds
adc
sahf
inc
xor
bound
ljmp
stos
add
sarb
popf
cwtl
fisubrs
or
sub
pop
mov
jge
or
pop
lds
dec
sbb
leave
cli
pop
test
int
mov
sub
mov
or
movsl
cmp
imul
out
out
rcl
out
test
gs
lea
mov
push
dec
jecxz
imul
fwait
cmp
push
movsl
cmp
push
sbb
fisttps
data16
pop
dec
aam
mov
jecxz
push
push
fmull
ja
push
mov
add
pop
push
sahf
push
pop
inc
fs
or
sbb
push
int3
or
nop
add
pop
imul
inc
cld
cmp
stos
mov
into
jnp
int
movsl
and
jge
add
rorb
adc
dec
dec
sub
cmc
mov
imul
jne
push
add
inc
dec
out
loop
insl
add
push
dec
fcompl
cmp
int3
sbb
push
jge
dec
int3
and
dec
add
sub
inc
cmp
lret
pop
je
and
jle
sub
sahf
mov
je
lcall
push
dec
sarl
in
sub
or
xchg
clc
sub
in
jecxz
push
push
inc
mov
mov
pop
int3
fisubrl
cmp
push
test
ljmp
test
cs
jb
push
dec
sbb
or
leave
jbe
out
pop
push
loopne
sti
push
js
aad
jne
daa
dec
or
sahf
inc
insb
pop
gs
xchg
add
pop
enter
or
push
sbb
adcb
inc
pop
mov
mov
pop
adc
push
sub
ss
out
sbb
xchg
adc
test
pop
ljmp
mov
sub
pop
dec
call
adc
xchg
adc
aaa
out
or
popf
push
dec
xor
cli
and
adc
inc
lods
sbb
pop
mov
inc
clc
or
dec
xchg
fisubl
jbe
dec
mov
adc
out
cmp
mov
addr16
sbb
lret
adc
pushf
pop
testb
out
mov
mov
pop
aaa
pop
cmpsl
push
jmp
test
jmp
in
stos
fldl
pop
dec
xor
push
lods
dec
dec
mov
notl
fdivrs
dec
div
adc
fiaddl
daa
mov
inc
call
or
imull
adc
or
sysenter
pop
xchg
ljmp
lcall
out
sub
sub
push
leave
cmc
sbb
mov
or
push
pop
mov
inc
aaa
push
adcl
dec
sub
daa
adc
int3
push
sub
lcall
repz
jg
cmp
sbb
lret
xchg
popf
jae
or
sbb
aaa
int
clc
in
cwtl
sub
xchg
movsb
imull
cmc
add
lds
dec
cwtl
call
enter
cmp
daa
jbe
rolb
lahf
fwait
dec
xor
movb
mov
out
ret
xlat
dec
or
cmp
inc
mov
fcmovbe
mov
out
push
push
xchg
sbbb
scas
cmc
add
dec
in
jne
ss
mov
pop
xchg
idiv
int
xchg
fcomp
jg
das
shrl
lea
pop
or
test
out
xor
cwtl
push
lds
and
pop
lret
adcb
inc
cltd
in
icebp
xor
mov
mov
lds
dec
aad
mov
mov
xlat
fdivs
idiv
aad
xchg
sub
mov
icebp
cmp
test
pop
lcall
out
xchg
pop
inc
enter
lds
or
xor
dec
fisubl
dec
test
popf
js
aaa
or
out
pop
cmc
stos
dec
adc
xchg
xchg
bound
daa
testb
or
imul
jp
pop
stos
test
cmpsb
push
mov
xchg
inc
jnp
cli
dec
push
cmp
mov
pop
out
lret
mov
add
sub
or
ljmp
xor
or
aad
out
cmp
aad
pop
movsl
or
aaa
movsb
popf
pop
subl
mov
pop
xlat
sbb
lret
or
addr16
je
and
test
and
daa
jae
sub
jne
cli
push
or
aam
xor
and
inc
adc
xchg
xchg
hlt
scas
adc
or
push
mov
add
mov
push
adc
add
cmp
lfs
pop
aad
sbb
cmpl
sbb
cmpb
mov
fdiv
cmc
cmp
stos
mov
push
in
ljmp
xchg
insb
push
shr
fidivl
enter
or
sbb
cmp
cmp
cwtl
xchg
dec
add
cmp
mov
lahf
inc
int
lods
lret
rolb
in
cwtl
push
jo
test
in
lret
aaa
call
or
pop
mov
idivb
or
enter
mov
daa
and
and
sbb
mov
cwtl
popf
inc
cmc
lcall
mov
or
dec
js
cmp
out
xchg
inc
loop
xchg
lock
jns
data16
cmp
sbb
repnz
cmp
add
pop
mov
inc
test
mov
mov
stos
or
push
js
mov
inc
mov
cwtl
out
mov
or
pop
xlat
lds
mov
lret
jno
or
xchg
xor
aaa
xorl
jns
addr16
daa
mov
enter
ret
js
stos
movsb
xchg
push
inc
daa
or
mov
jbe
sub
add
mov
pop
fidivl
fwait
inc
lret
and
and
jae
call
jl
sub
mov
adc
in
cwtl
xorl
loopne
add
int3
sbb
lock
jecxz
sub
test
and
cmpsb
xlat
stos
adc
jbe
mov
cli
imul
in
dec
push
mov
aad
fsub
mov
push
mov
negb
mov
decl
sbb
xchg
pop
adc
dec
pop
xchg
jge
mov
sub
inc
mov
test
pop
call
popf
jp
add
mov
cmp
or
xchg
cld
cmpl
pusha
adc
push
xchg
dec
in
aad
adc
movsl
add
pop
sbb
xchg
mov
movl
or
lret
push
in
lcall
adc
pop
in
xlat
fwait
sbb
push
or
inc
hlt
call
lods
xchg
jnp
das
mov
pop
xlat
ret
cli
leave
paddw
push
loop
scas
inc
std
mov
enter
sub
xchg
mov
cmpsl
jp
outsl
es
and
imul
push
sub
rcl
dec
jmp
je
lcall
enter
sbb
les
jge
test
or
sub
xchg
negl
jp
leave
enter
dec
movsb
mov
xchg
or
rcll
addl
or
sub
lret
jp
addr16
jmp
enter
cwtl
xchg
xchg
fsubs
inc
sbb
stos
or
sub
pop
xchg
fstpt
and
in
mov
je
call
adc
mov
cmp
mov
addr16
in
inc
ljmp
xchg
out
ret
xor
mov
push
dec
pop
popf
jmp
int
js
xchg
pop
xor
enter
dec
mov
lds
mov
stos
sbb
lret
stos
sbb
insb
jae
mov
add
inc
or
movb
fistpl
lret
popa
push
jp
pop
mov
pop
and
and
cltd
ja
out
lea
fcmovb
or
sbb
sbb
mov
mov
mov
pop
adc
cmp
sub
and
out
jmp
ljmp
int
out
push
pop
out
lods
cmp
in
mov
fmuls
mov
sbb
or
mov
pop
sbb
and
mov
mov
mov
cwtl
xchg
fucom
test
out
xchg
cmp
int
int
add
test
lds
push
movsb
cmc
jl
fbld
push
jbe
cld
mov
loop
outsb
lret
push
sar
cmp
or
insl
gs
or
jp
mov
stc
pop
xchg
fisubrl
inc
adc
and
xchg
pop
mov
inc
stos
in
dec
mov
out
add
test
cmp
pop
ljmp
out
xor
and
cmp
adc
push
js
loopne
ljmp
cmp
push
out
mov
xchg
clc
test
scas
popf
fsubr
data16
mov
clc
dec
xorl
in
insl
and
les
and
sbb
cmp
xchg
popf
cli
fidivrl
fdivr
or
cmp
cmp
mov
cmp
in
popa
test
sti
jmp
xchg
and
sub
lcall
mov
inc
imul
lcall
xchg
push
and
dec
adc
sbb
pop
test
out
xchg
sub
pop
or
rcrl
jbe
cltd
mov
mov
mov
pop
inc
out
insb
mov
divb
shll
movzbl
inc
shl
xchg
xchg
jp
hlt
cmp
cmp
loop
lock
in
push
push
jae
and
push
stos
outsl
mov
je
sub
pop
mov
leave
cwtl
lret
sub
xlat
inc
xchg
cmc
mov
inc
dec
fwait
es
addb
fwait
stos
aaa
mov
or
add
jbe
adc
mov
testb
rcr
call
in
adc
out
lea
loope
or
and
sub
cmp
clc
dec
xchg
sbb
cmp
mov
aad
out
sbb
cmc
idivb
mov
mov
into
idivb
adc
xor
stos
dec
mov
mov
pop
push
sub
ret
mov
or
cs
testl
mov
adc
mov
sub
inc
popa
adc
or
sub
cmc
fs
les
imull
stos
in
sub
push
cmp
jge
or
cld
lds
fimull
cmp
subl
ficoml
out
cmp
adcb
out
in
shrb
jge
mov
lcall
cltd
xlat
jp
lds
adc
pop
lea
cmpsl
ljmp
pop
push
mov
mov
or
popf
push
sub
into
xor
push
add
in
ds
cltd
in
cwtl
mov
or
mov
ljmp
lret
inc
adcl
movsb
adc
sub
lcall
mov
lahf
in
jb
lahf
daa
add
lcall
pop
mov
outsl
dec
add
pop
mov
xchg
dec
and
sbb
inc
int3
ja
mov
aaa
jl
sar
push
clc
cltd
sahf
xlat
out
xchg
insb
test
dec
sub
cmp
in
fstpl
and
jbe
stos
dec
dec
daa
out
out
call
xor
pop
lret
outsl
xor
dec
psubsw
xchg
popf
push
push
mov
mov
pushf
cmp
cmp
test
js
mov
mov
xchg
mov
rorb
mov
cmp
or
mov
add
ljmp
xchg
enter
adc
dec
inc
xor
repz
inc
pop
xor
xchg
adc
lret
imul
xchg
adc
ljmp
cmp
lds
call
inc
mull
xchg
out
add
push
lcall
rorb
test
movsl
jb
jl
sub
std
paddsw
push
pop
shll
stc
leave
cli
fdivrs
jge
sbb
notl
mov
pop
js
hlt
xchg
daa
adc
mov
sbb
imull
shr
lcall
or
mov
lahf
pop
mov
sbb
out
sub
push
xor
fadds
stc
fldt
out
jbe
aad
adc
out
in
pop
mov
mov
out
div
xchg
jo
push
dec
js
in
sbbb
test
ficompl
pop
adc
fdivrs
test
push
cmp
dec
mov
jl
xor
aad
rorb
adc
daa
les
test
pushf
sbb
lds
lods
add
lods
enter
add
mov
or
cli
cmp
daa
subb
jbe
lods
mov
mov
pop
rolb
pop
call
lcall
xchg
push
mov
add
sbb
push
sbb
loope
pop
scas
dec
mov
dec
rorb
mov
pop
ficoml
aad
cltd
mov
cwtl
sbb
fiaddl
daa
mov
mov
pop
stos
idiv
dec
ret
pop
xorl
adc
enter
mov
in
jbe
shl
or
xchg
mov
pop
cmp
shl
cwtl
xlat
sbb
jae
into
sahf
or
cmpl
fstpl
daa
out
mov
xchg
sub
mov
xlat
mov
cmp
lcall
jbe
xchg
jae
out
cmc
rorl
xchg
pop
sbb
or
jp
jmp
xchg
mov
or
adc
xchg
inc
sbb
mov
mov
out
mov
xor
pop
xchg
lret
add
mov
push
mov
xor
int
mov
and
mov
lret
or
test
or
and
aaa
frstor
orl
xchg
or
stos
roll
hlt
cmp
add
push
cmp
dec
cwtl
test
adc
sub
pop
sub
mov
dec
sbb
mov
fucomp
push
pusha
or
adc
ret
inc
adc
out
jno
or
scas
mov
cmpsl
imul
mov
push
pop
pop
mov
pop
push
add
js
in
out
mov
ljmp
cwtl
xchg
loop
lcall
lock
je
aad
mov
sub
or
in
jno
daa
cmc
icebp
add
sbb
or
test
mov
mov
pop
orl
or
out
or
ret
jae
in
sub
adc
add
fsts
lret
inc
and
in
xor
addr16
xchg
add
mov
and
xor
aaa
inc
aam
sbb
xchg
movsl
idivb
jecxz
in
rcrb
push
icebp
push
enter
aad
shll
xorb
lock
frstor
mov
or
xor
xlat
dec
pop
pop
push
push
test
cmc
dec
and
pop
sbb
cwtl
stc
xor
push
and
and
insl
das
push
jge
dec
jbe
sub
mov
push
inc
push
push
xor
xchg
push
dec
xchg
jo
popf
mov
popf
xchg
mov
jecxz
mov
xchg
mov
push
int
out
mov
sbb
movsb
jne
test
mov
addr16
mov
mov
xchg
aaa
fldcw
enter
js
in
inc
mov
imul
arpl
pop
aam
test
sub
fnstsw
dec
jno
xlat
fcomps
xchg
dec
sub
subl
mov
lds
mov
std
aad
push
dec
xor
mov
sbb
ljmp
scas
adc
ss
test
xchg
sbb
mov
js
aad
or
je
mov
xor
cmp
in
movsb
sub
mov
mov
cmp
inc
cli
popf
and
ret
xor
inc
popf
mov
daa
cmp
fnstsw
ret
push
or
loopne
xor
sub
inc
lahf
mov
sbb
dec
insl
in
mov
adc
pop
or
jbe
mov
pop
out
xchg
sbb
mov
xlat
mov
xchg
data16
adc
mov
or
sbb
sub
cli
movl
sbb
or
ljmp
add
mov
lret
xchg
int
or
jae
mov
dec
mov
cmp
idiv
jno
test
fcomps
sbb
cwtl
add
or
mov
pop
lea
cmp
push
dec
mov
mov
cwtl
inc
push
sbb
inc
jp
rorl
add
out
or
ret
xor
mov
imul
fs
mov
test
and
or
enter
mov
sub
in
mov
add
push
pop
pop
imul
mov
sbb
aad
xor
jbe
je
ret
test
dec
lcall
jae
adc
js
pop
lods
ds
daa
sub
xchg
cwtl
xchg
sub
and
imul
xor
fsubrp
sbb
add
or
mov
jo
xchg
mov
ret
stos
pop
sub
push
and
jne
inc
xchg
jbe
movsb
test
xor
fstpl
imul
mov
pop
fdivl
jp
lods
in
mov
aam
dec
lds
repnz
mov
xchg
call
xor
cltd
and
adc
imul
aad
je
push
stc
dec
jp
cmp
xchg
andl
xlat
daa
mov
jbe
or
stc
xchg
cmp
cmpsb
jg
push
call
cli
sub
or
sbb
xor
popf
cltd
or
pop
add
icebp
lret
add
mov
adc
xchg
sti
push
mov
ret
xchg
pop
or
lea
inc
pop
lds
addr16
push
lock
adc
inc
call
mov
mov
cli
xor
cmp
inc
test
in
mov
jmp
mov
je
je
icebp
iret
adc
lret
idivl
imul
lret
mov
pop
out
or
loopne
and
in
or
call
mov
sbb
cli
xchg
ljmp
cmpl
pop
adc
mov
clc
dec
push
xchg
aam
test
ret
lods
mov
push
mov
lret
mov
in
movsb
sub
sbb
mov
jle
xchg
xchg
adc
out
daa
inc
test
add
clc
popf
mov
mov
enter
clc
sbb
mov
pop
in
cmp
pushf
inc
or
mul
adcl
or
mov
mov
stos
daa
cmpsb
pop
mov
lret
clc
filds
sbb
jl
xor
lcall
imul
and
aam
xchg
mov
fs
lods
mov
mov
iret
adc
cli
or
cwtl
adc
jl
xor
sub
testl
sub
or
adcl
in
mov
sub
or
mov
addr16
stos
dec
dec
movb
mov
sahf
mov
xchg
pop
mov
leave
xor
out
cmp
ja
jbe
mov
shrb
add
aaa
jg
out
dec
pop
test
mov
fcmovbe
pop
enter
xlat
cmp
sbb
add
js
loope
pop
in
jne
aaa
or
inc
xchg
mulb
cmp
xchg
dec
or
test
inc
pop
es
adcl
shrl
lea
cmp
xchg
xchg
and
aaa
data16
cli
xchg
or
stc
ret
xor
adc
dec
xchg
jnp
inc
pop
ffreep
xchg
mov
inc
or
sbb
inc
js
sub
addr16
xchg
push
mov
mov
je
inc
loop
or
xchg
cmp
lcall
fisttps
adc
cmp
inc
cwtl
clc
scas
cmp
sub
pop
imul
xchg
dec
stos
mov
fnstenv
leave
fisttpll
or
ljmp
jbe
jo
punpckhwd
inc
data16
fdivs
mov
mov
je
adc
loope
mov
lcall
pop
out
in
mov
mov
jmp
sbb
movb
imul
cmp
mov
imul
cwtl
jmp
andl
add
jg
mov
jne
ljmp
cmc
inc
push
dec
test
imul
or
xchg
dec
xchg
fiaddl
sub
div
imul
rclb
aad
es
lret
sub
and
and
lahf
sbb
xchg
add
sub
daa
fdiv
and
ret
inc
dec
fwait
jae
cmp
repnz
shll
ret
test
mov
js
ljmp
inc
pop
jp
in
out
xchg
push
call
xchg
jb
cmp
mov
pop
stos
imul
mov
bound
aaa
push
idivl
and
test
js
mov
test
shlb
mov
pop
xor
call
push
cmc
mov
mov
stos
mov
inc
push
push
fimull
pop
jmp
scas
mov
jg
pop
inc
dec
test
call
leave
dec
jbe
cltd
ja
out
mov
jmp
mov
stc
push
sbb
jle
movsb
jge
fistps
mov
hlt
sbb
mov
xor
adc
cmp
test
in
and
cmpsb
jmp
das
out
cmc
dec
pop
adc
adc
sub
insb
inc
pop
inc
mov
notb
adc
xchg
xorb
in
inc
cmc
jno
subb
mov
aaa
idivb
sbb
stos
fimuls
inc
mov
mov
fbstp
jp
dec
xchg
cmc
adc
imul
push
clc
mov
ret
dec
pop
xchg
dec
xchg
push
sarl
enter
test
sub
or
in
sbb
inc
mov
or
negb
jnp
lds
data16
pop
cmp
dec
es
push
jbe
out
sbb
cli
fdivrs
or
mov
insb
xchg
es
not
lret
dec
sub
dec
xor
stos
inc
cmc
negl
mov
loopne
xor
aad
clc
pusha
dec
cmp
daa
mov
adc
push
mov
les
pop
or
sub
or
es
call
pop
jl
ret
imull
pop
or
push
cmp
out
faddl
mov
ljmp
mov
push
int
sti
cmpsb
jbe
je
aad
inc
xor
call
std
cmpsb
out
ret
mov
test
mov
add
add
rclb
push
xor
sbb
jne
inc
add
dec
sub
call
loope
in
jg
sbb
adc
or
xor
xchg
sub
out
enter
divl
fistpll
stc
mov
mov
dec
popa
xor
xchg
mov
mov
pop
xlat
ror
call
jl
stos
mov
add
test
or
or
adc
mov
or
lcall
or
push
xchg
pop
mov
out
testl
jge
cmpsb
je
aad
adc
daa
mov
fisttps
inc
push
sbb
jmp
stc
mov
sbb
or
ret
inc
sbb
mov
inc
cmc
dec
cwtl
xor
xor
dec
or
pop
imul
xchg
sbb
pop
xchg
or
enter
and
sub
ret
mov
jbe
imul
push
lds
jge
std
adc
sbb
cmc
js
int
lcall
jmp
outsb
mov
xlat
hlt
in
sbb
fcomp
xchg
jecxz
dec
or
cmpsl
pop
in
adc
fcoms
sbb
imul
mov
sub
inc
or
pusha
mov
xchg
pop
xlat
aad
mov
testb
int3
xor
cmp
adc
xchg
fsubrs
mov
or
xchg
or
inc
gs
js
hlt
in
push
enter
out
sbb
imul
sub
gs
js
jmp
clc
test
imul
sub
or
aad
mov
ficomps
or
sarl
call
pop
mov
or
loope
stos
mov
mov
ja
int
mov
aaa
lds
push
cmp
daa
mov
mov
or
mov
xlat
pop
lods
fiaddl
xchg
or
js
mov
sub
dec
or
and
enter
jmp
fmuls
cwtl
fwait
bound
sbb
cmc
adc
cwtl
and
imul
and
or
mov
pop
aad
incl
xchg
xchg
ljmp
cmp
dec
shrl
or
jbe
inc
cmc
xchg
dec
in
adc
xchg
pop
cli
adcl
inc
in
test
aad
sbb
cmp
cmp
cli
popa
and
xor
sbb
iret
sub
imul
cmp
dec
sub
adc
ljmp
inc
cltd
es
mov
lock
add
push
sub
lcall
fidivrl
pop
add
cmpsl
cwtl
lock
call
add
and
push
push
pop
sub
pop
mov
cli
cmp
inc
stos
sahf
call
add
jl
fs
xchg
test
test
pop
repnz
clc
xlat
sub
aaa
xchg
cmp
xchg
aad
pop
sub
ljmp
or
push
fildl
out
imul
mov
sbb
dec
out
orl
or
stos
lods
push
lods
pushl
fidivrl
lret
jge
dec
aad
shll
lea
enter
pop
push
sub
pop
andl
xchg
xchg
aas
mov
imul
fistpl
or
jp
pop
and
mov
xchg
pop
fldcw
data16
je
jmp
fldl
mov
cwtl
sti
add
call
mov
lcall
fdivrs
or
out
lds
add
mov
cli
dec
leave
popa
cmp
jl
push
push
mov
pop
or
mov
sub
mov
dec
popf
push
mov
xchg
adc
pop
sbb
mov
movsl
jg
notl
pop
mov
xor
js
call
xchg
ljmp
pop
mov
mov
cmpsl
mov
xchg
mov
testb
jecxz
fildll
movsl
jbe
push
test
loop
testb
rclb
and
js
shl
jg
xchg
cmp
adc
movsb
or
lahf
pop
in
sub
pop
xchg
or
add
jmp
adc
or
dec
jo
cwtl
mov
std
in
lret
push
sbb
dec
sbb
mov
push
cmp
out
lods
cmpsb
push
sar
xor
stos
cmp
add
cmp
xchg
mov
enter
mov
testl
in
add
push
jge
inc
push
stos
addr16
fcoms
daa
ffree
daa
pop
test
cwtl
cmp
jo
sahf
xchg
stos
pop
cmp
xchg
vpminsw
pop
cmp
stos
jg
cmp
ljmp
bound
daa
hlt
sub
adcl
pop
inc
and
sub
push
mov
decb
adc
lret
sbb
mov
dec
clc
mov
pop
mov
add
test
mov
sbb
mov
xor
loopne
mov
call
add
pop
push
push
divl
in
xchg
stos
and
ja
xor
sub
mov
aad
bnd
daa
in
jg
or
mov
lea
sbb
mov
cli
stos
pop
or
pop
lret
call
dec
lods
mov
jp
rol
xchg
aad
scas
mov
xlat
or
out
out
add
adc
out
movsb
mov
sarb
xor
add
ljmp
pop
sbb
cmp
daa
addr16
sbb
inc
int
popf
xor
mov
cli
andl
and
rorb
repnz
cmc
lods
dec
push
ret
jbe
push
fmull
and
xor
daa
xchg
imul
mul
sub
test
jg
or
mov
dec
lds
cmp
aam
les
inc
dec
sbb
pop
dec
loope
cmc
lret
mov
cmp
xor
mov
pop
sbb
cltd
mov
xchg
aad
or
aaa
adc
push
lds
js
mov
mov
pop
jbe
cwtl
pushf
mov
xor
enter
mov
negb
push
mov
dec
cli
repnz
call
cmp
fsubs
into
xor
jp
mov
xchg
mov
addr16
add
mov
cli
aaa
jbe
jp
jp
pop
cwtl
mov
inc
jle
cmc
rolb
sub
les
lods
inc
pop
adc
inc
sbb
mov
fnstcw
xchg
in
clc
fwait
arpl
hlt
inc
and
push
test
inc
hlt
or
adc
mov
cmp
xchg
ficoml
daa
pop
or
or
add
lahf
cmp
mov
and
stc
cmp
dec
mov
inc
and
mov
negb
adc
xor
subl
lahf
and
add
push
jbe
pop
push
lcall
and
add
or
test
mov
loop
dec
and
xor
or
movsb
cmp
ds
xchg
sub
out
inc
fnstsw
divl
pop
jae
mov
mov
add
js
clc
rclb
mov
fisubrl
movsb
ret
dec
jns
mov
push
shr
jno
mov
xor
dec
xlat
pop
popf
fs
imul
inc
sub
mov
push
push
sarl
ret
or
xchg
add
xlat
or
pop
test
shrl
andl
cmp
iret
sbb
cli
sbb
jmp
adc
sub
das
test
pushf
xchg
call
notb
xchg
dec
test
aaa
out
or
jmp
mov
dec
cmc
inc
fs
sub
std
inc
test
mov
adc
lods
in
mov
stos
cmp
adc
xor
ljmp
mov
fsubrs
sti
mov
jle
jne
das
mov
addr16
or
cmpsl
es
xchg
add
enter
daa
cmpl
inc
rclb
mov
and
jle
mov
es
fisubrl
inc
inc
loope
and
lret
inc
mov
lcall
or
add
subl
or
aaa
adc
mull
and
or
xchg
fs
mov
pop
and
in
xor
aaa
aad
jecxz
sbb
in
xchg
out
rcrb
or
sbb
or
in
movsl
js
xlat
enter
out
xchg
sub
cmp
lea
cmp
jp
cli
add
lret
aad
lds
dec
lcall
imul
push
test
pop
mov
mov
jg
pop
mov
andl
addr16
scas
push
cltd
cmp
push
loop
ljmp
mov
xchg
mov
aaa
out
or
stos
in
mov
out
inc
cli
jne
mov
stos
push
cmp
leave
stos
sub
inc
and
cmp
adc
cmp
fmul
nop
xchg
xchg
jecxz
pop
mov
aas
sub
cli
enter
cwtl
adc
or
clc
addl
aaa
cmpsb
call
mov
jle
sub
insb
mov
ret
imul
je
or
cmp
adc
fisubrl
imul
jne
dec
dec
mov
lods
xlat
sbb
add
pop
aaa
roll
lds
aad
xchg
pop
sar
call
xchg
daa
sbb
lret
sub
popa
fimull
out
enter
sbb
mov
scas
mov
mov
sar
mov
sub
inc
dec
imul
pop
lds
in
scas
mov
adc
out
sbb
dec
imul
sub
fsubrs
out
out
and
daa
movsl
mov
je
pop
adc
lods
ljmp
das
xchg
mov
rcll
cmp
xchg
mov
adcb
lret
add
xchg
lcall
lods
xchg
cmp
dec
icebp
out
jp
add
in
push
and
sub
mulb
in
inc
sbb
cmp
jp
stc
ffreep
rclb
cwtl
sbb
roll
cltd
ret
push
les
out
xchg
xor
iret
and
aad
dec
mov
mov
sbb
out
mov
cmpsl
mov
sbb
inc
add
sarl
mov
inc
in
aaa
xchg
cwtl
out
push
cmc
add
test
cmpl
mov
xor
lods
jbe
inc
inc
repnz
aad
lcall
dec
aad
mov
adc
stos
jl
loope
lret
lods
cmp
or
xor
jo
mov
xchg
inc
sbb
or
pop
pushl
or
mov
popa
xchg
lds
xchg
or
call
pop
test
hlt
fisubrl
mov
xor
fistl
stc
int3
mov
push
mov
sbb
aad
push
cmp
xor
add
dec
adc
mov
dec
cmp
out
mov
or
addr16
jg
xchg
jp
les
xchg
lods
sbb
cli
mull
dec
pop
jno
jbe
ret
mov
enter
lods
fmuls
dec
mov
sub
add
inc
scas
cmp
pop
stos
sbb
dec
out
fisubl
je
jp
dec
sub
mul
pop
or
sbb
and
xchg
sub
xchg
fucom
xchg
aaa
popf
sti
push
jmp
add
xlat
lret
push
test
stos
mov
mov
imul
js
lea
and
and
lcall
clc
enter
mov
cmp
shll
std
lahf
fmul
mov
or
int
pop
cmp
daa
aaa
addl
cmp
jge
dec
adc
or
sbb
fxam
or
mov
lock
mov
aad
faddl
sbb
mov
dec
out
jbe
stc
fcmovbe
cmp
pop
mov
call
not
dec
stos
cmc
mov
mov
xchg
pusha
jecxz
inc
inc
testl
fldt
int3
movsl
or
fisubrs
push
sbb
mov
pop
cmp
outsl
dec
mov
movsb
fcomps
dec
lds
ljmp
dec
cwtl
sbb
dec
mov
adc
je
imul
sarl
xchg
mov
cmpsl
sub
iret
and
imul
out
ljmp
mov
mov
leave
es
push
xchg
or
out
jp
daa
mov
mov
jbe
pop
xchg
dec
sarl
subl
adc
lret
int3
push
push
xchg
insl
add
cmp
aad
out
lcall
mov
mov
pop
lea
js
imul
xor
in
mov
sub
test
movl
cmp
pop
or
scas
shll
xchg
call
enter
sbb
cmp
je
sub
pop
shrl
out
aaa
xchg
or
sbb
cli
xchg
jo
pop
mov
icebp
push
lcall
mov
jp
and
fidivl
cmc
lock
icebp
and
dec
mov
mov
sbb
in
jne
in
sbbl
jne
dec
pop
sbb
or
aad
stc
roll
and
mov
add
add
aaa
js
mov
pop
sbb
lret
sub
and
je
adc
cmovp
call
mov
movsb
idivb
popf
xchg
sub
mov
push
andl
loopne
in
adc
fsubrs
adc
push
xor
imul
dec
xlat
adc
or
jo
sub
mov
stc
push
sbb
loop
daa
enter
imul
icebp
or
cmc
xor
mov
pop
and
lahf
xor
mov
hlt
fisubrs
mov
pushl
out
or
ficomps
fstpl
loop
fnstenv
imul
sbb
or
addr16
add
push
sbb
hlt
and
pop
push
or
call
adc
sub
mov
dec
jae
cli
clc
fimull
mov
xlat
sub
xor
insl
popf
movsb
imul
xchg
test
out
mov
cli
and
xor
fiaddl
int
cwtl
push
sbb
enter
pop
mov
cli
cmp
push
out
cmp
mov
mov
mov
sbb
or
inc
adc
mov
test
in
repz
out
adc
fmul
syscall
adc
cmpsb
test
sub
or
pop
mov
rorb
les
jl
or
fsubr
sbb
push
xchg
mov
mov
stos
leave
fcoms
dec
stos
dec
and
dec
int
lahf
push
mov
divb
std
mov
stos
sbb
mov
stos
sub
add
sub
jmp
xchg
imul
pop
jb
jmp
or
pop
jno
enter
xchg
jb
cmp
test
hlt
or
adc
jbe
into
fcomps
push
sub
fildll
sub
mov
lcall
pop
mov
lcall
xchg
lret
sbb
mov
dec
dec
fdivs
push
addr16
int3
aad
cmp
pop
fstps
xor
lea
cli
cmc
ljmp
lcall
icebp
enter
inc
mov
xor
lds
pop
jmp
and
test
dec
std
sub
cmp
mov
pop
or
int3
stos
mov
or
or
push
push
mov
mov
mov
xchg
lods
hlt
js
les
and
pop
cmp
jbe
dec
add
dec
sbb
add
daa
or
or
fcomps
pop
or
mov
push
pop
adc
mov
sub
dec
lcall
call
daa
cli
sbb
out
adc
adcl
pop
cmp
je
pop
lods
cmp
int3
add
xchg
mov
ret
xchg
cmp
xor
es
popf
push
sbb
lret
add
push
and
rolb
pop
xlat
add
jnp
lret
inc
xor
jb
mov
std
jp
add
xchg
clc
daa
sti
pop
movsb
mov
cmp
mov
stos
pop
cmp
cmp
mov
fisubl
fcoms
pop
or
stos
or
loopne
ljmp
aad
stos
inc
lods
inc
fdivrs
rorb
add
mov
in
cmc
subl
les
mov
xchg
icebp
or
test
nop
into
bound
cs
xchg
xchg
inc
push
sbb
in
je
sub
mov
fmuls
sbb
adc
xor
xchg
add
lds
js
bound
jbe
lcall
fmulp
xchg
nop
test
dec
fidivrl
js
in
in
mov
movsb
mov
cld
push
sbb
sbb
sbbb
pop
into
aaa
jmp
mov
cmp
mov
mov
xlat
xchg
adc
mov
xchg
in
stos
and
pop
or
mov
xchg
jg
or
adc
mov
imul
aad
mov
shlb
jp
cmp
pop
sub
aad
cmp
jl
ret
and
fcmove
and
xchg
popf
xchg
xchg
movsl
pop
mov
jle
and
mov
pop
lds
dec
leave
add
jae
and
lock
aaa
inc
mul
xchg
cmp
adc
push
mov
dec
xchg
out
sbbl
cmc
dec
cmp
mov
cmp
dec
loope
push
out
ljmp
cmp
pop
push
push
xchg
test
pop
jp
inc
mov
push
xchg
cltd
mov
jo
jl
je
xchg
and
fidivrs
popa
push
pusha
add
mov
imul
xlat
or
mov
add
stos
lods
jp
mov
mov
and
cs
cmpl
sub
inc
inc
jbe
mov
lcall
in
dec
xchg
xchg
popaw
cmc
je
in
pop
addr16
leave
stos
data16
mov
mov
xchg
adc
cmp
and
or
in
lods
and
jbe
ljmp
xchg
js
add
jae
xchg
sub
add
out
push
mov
mov
sub
cmp
push
ljmp
daa
lret
imul
xchg
push
cli
xchg
mov
cmp
out
jns
stos
test
popf
out
dec
bound
push
mov
pop
cmc
lahf
pop
std
ret
pop
cmp
repnz
xor
ljmp
js
and
sbb
shll
jbe
clc
mov
sbb
imull
cwtl
movl
push
pop
or
pop
cmpsl
sub
pushf
sub
fisttpl
xor
cli
movsl
pop
sub
mov
adc
pop
in
sub
cmp
sbb
mov
mov
pop
js
cmpsb
ficompl
scas
je
mov
leave
stos
sbb
xchg
fcoms
jp
mov
lods
ret
cmp
sub
cmp
cwtl
adc
inc
dec
roll
sbb
out
loop
or
adc
mov
ficoms
add
push
and
call
dec
xor
mov
mov
pop
imul
xor
jp
xor
fstl
sbb
xchg
sbb
pop
out
clc
push
aad
int3
ret
fisubrl
cld
arpl
data16
test
mov
test
cmpsb
cmc
test
aad
pop
pop
xor
stc
adcl
fcmovbe
orl
cwtl
mov
call
test
sbb
jl
movsb
dec
pop
out
cmp
lds
jmp
pop
out
push
outsl
ret
shlb
pop
js
lock
xchg
lret
cmp
hlt
cmc
or
cmp
in
mov
lcall
pop
hlt
call
je
mov
outsb
out
lret
aad
push
pop
cmp
xlat
mov
idivl
fwait
sub
pushl
in
mov
fstpl
or
or
hlt
lret
shll
leave
mov
scas
enter
mov
pop
sub
call
movsb
cltd
push
or
sub
mov
test
movsb
or
fisttpll
popf
mov
jbe
cmp
sub
repnz
sub
gs
movb
fcmovb
push
in
mov
arpl
mov
mov
in
fcomip
pop
xor
mov
xchg
enter
cmp
lcall
xor
cld
and
out
sub
out
pop
xor
mov
addr16
mov
push
xchg
movsb
dec
xchg
daa
cmp
repnz
stos
cli
and
ret
add
pop
cmp
dec
addr16
adc
jbe
in
dec
loop
out
jae
dec
outsb
popa
pop
xchg
aad
pop
mov
sbb
addr16
pop
popf
cli
pop
jbe
jp
in
mov
jns
jb
or
or
je
pop
ljmp
cmp
fidivrl
inc
or
lcall
je
enter
mull
enter
lcall
and
cltd
loope
imul
mov
push
movsb
cmp
xlat
ficompl
cld
push
xor
insl
sar
cmpsl
add
addr16
addb
sbb
out
aas
adc
pop
mov
cld
push
xchg
mov
xchg
mull
jge
and
mov
cs
or
and
dec
and
not
sbb
mov
xor
dec
sub
xor
ret
or
xlat
mov
mov
cmc
dec
icebp
or
sub
scas
cmp
ret
pop
ss
jp
xor
rolb
mov
in
xchg
out
sbb
sbb
cwtl
sub
mov
mov
or
jmp
es
push
mov
out
or
dec
enter
xchg
mov
pop
jbe
sbb
sbb
sub
xchg
push
xchg
pusha
lret
add
xor
mov
or
cmp
sti
dec
jns
es
and
aaa
fxch
shrl
aaa
cltd
jbe
sbb
cmp
dec
mov
lcall
adc
or
mov
out
adc
push
pop
sub
in
push
mov
and
mov
add
fimuls
push
cli
rcll
jb
jle
pop
lret
sub
dec
lea
cmp
sbb
daa
testl
je
xlat
movsb
aaa
into
mov
es
push
scas
xchg
ret
adc
xchg
or
les
mov
inc
and
mov
aaa
cwtl
sbb
sub
jp
jae
push
aaa
dec
xor
bound
pop
sub
mov
test
insb
aaa
lods
mov
inc
jle
adc
dec
ret
cltd
ret
loop
jp
xor
or
in
test
push
pop
ljmp
leave
sub
mov
push
lds
icebp
adc
mov
push
mov
mov
testb
cmp
pop
les
lea
test
xchg
inc
rolb
mov
cli
mov
xchg
xor
or
push
sbb
mov
mov
xor
add
mov
addr16
and
xor
in
fldpi
rcrl
pop
jle
cmp
in
sbb
shl
xchg
lcall
mov
or
lcall
inc
fucomip
or
sub
cmp
push
enter
sbb
xchg
jg
in
fwait
popf
lock
add
mov
or
xchg
ss
call
dec
dec
pushf
mov
cmc
cmp
or
add
addl
xchg
jbe
mov
push
ss
sti
sbbl
lret
xlat
or
sub
leave
mov
inc
in
or
jnp
mov
xchg
push
shll
xor
mov
das
cmp
push
xchg
push
ja
dec
das
cld
fidivl
mov
call
cmp
sbb
rcll
outsb
leave
arpl
xchg
xor
mov
into
adc
xchg
push
clc
es
sti
mov
daa
xchg
shlb
in
js
ljmp
sbb
call
mov
jl
data16
roll
mov
mov
or
sbb
test
pop
clc
cwtl
mov
ja
inc
mov
testl
or
loop
out
lcall
push
std
and
dec
daa
adc
js
cli
ljmp
dec
testb
das
std
xor
mov
test
clc
daa
xchg
cmp
add
outsl
sub
fisubrl
inc
xchg
xchg
rcll
popa
cltd
test
push
sub
and
mov
sbb
shlb
xchg
outsl
jmp
sti
cmp
pop
or
pop
or
mov
cmpsb
fisttps
xchg
xchg
add
jbe
shl
js
sti
mov
cmp
jns
mov
out
mov
cmp
das
sbb
add
insb
hlt
fdivs
in
in
cmc
push
mov
cmp
ficoml
movsl
mov
cmp
lret
aaa
or
mov
clc
inc
xor
daa
cmpsb
sub
inc
mov
xlat
inc
pop
dec
push
in
xor
movsl
pop
and
dec
jle
dec
xor
int3
lahf
int
int
xor
xor
mov
sub
sub
sbb
or
cmc
mov
xchg
or
in
addr16
cs
push
rol
mov
mov
cmp
in
jae
stos
jg
lcall
sub
push
fwait
test
and
inc
dec
pop
neg
ljmp
aas
mov
stc
sub
imull
inc
in
mov
xchg
pop
mov
or
sub
enter
lea
cmp
push
mov
movb
jp
or
xchg
out
or
and
push
out
aaa
in
add
jp
mov
clc
xchg
divb
jbe
mov
pop
and
neg
lods
xchg
pop
dec
daa
or
mov
in
dec
mov
pop
stos
shrl
xchg
cli
jle
rcr
sbb
mov
mov
or
add
orb
fmuls
mov
or
mov
popf
fidivl
mov
popl
test
xchg
aas
bound
icebp
test
sbb
and
lret
jno
imul
cmc
loop
cmp
mov
adc
jbe
fisttpll
sub
in
mov
stc
lret
ss
xchg
mov
and
push
out
jmp
rorb
dec
std
lcall
sub
out
xchg
xchg
in
sahf
icebp
icebp
cmpb
frstor
scas
fidivl
call
clc
sbb
mov
pop
or
mov
adc
adc
xor
pop
clc
mov
xchg
sbb
mov
dec
dec
inc
pop
sbb
sub
mov
xchg
out
repz
aaa
sbb
cltd
adc
sub
enter
lds
call
scas
mov
and
xchg
add
add
addr16
sahf
lock
jno
mov
dec
mov
adc
push
push
cmpsb
mov
cmp
push
cld
fisubrl
fmul
and
xadd
aad
andb
sbb
push
pushf
mov
mov
push
add
xlat
mov
popf
jbe
xor
sub
cli
rolb
and
or
jmp
clc
jns
or
fsubr
xorl
mov
mov
out
xchg
jp
pop
jl
cli
ljmp
mov
std
daa
enter
cmp
mov
pop
xorb
scas
xor
pop
lds
int3
daa
andb
mov
enter
cmp
mov
inc
mov
bound
stc
repnz
ror
mov
ljmp
jle
rclb
movsb
sub
cli
mov
in
test
lea
or
aad
cmp
xchg
daa
xchg
xchg
rcl
jno
mov
xlat
sbb
jnp
adc
cmc
cwtl
jbe
mov
xor
mov
cltd
fisttpl
xchg
repnz
in
std
sub
push
enter
aad
ss
sub
loop
xchg
push
xor
push
mov
loop
cmc
or
fimull
shrl
out
jmp
xchg
aad
popa
test
imul
std
jbe
mov
scas
rcrl
daa
mov
add
pushf
inc
pop
je
pop
lret
ljmp
out
fsubrs
and
sbb
imul
test
cli
xor
mov
leave
push
cs
test
mov
and
mov
xchg
aaa
xchg
xor
sbb
frstor
jmp
cmp
aaa
mov
ljmp
or
pop
fsubrs
pop
mov
lcall
mov
les
fcmovb
xlat
xchg
std
cmpsl
dec
rcrb
lret
rol
sbb
sahf
mov
xlat
add
cs
jge
popa
add
mov
adc
jl
enter
shl
fdivrs
mov
movsb
shr
or
je
xchg
pop
push
je
icebp
sbb
in
arpl
rcr
loopne
sbb
popa
aad
lea
cmpsb
jp
addr16
mov
xchg
fdivl
push
imul
sbb
adc
jg
cmp
clc
xlat
and
adc
loop
jg
negb
lods
iret
pop
sbb
je
push
dec
xchg
enter
mov
in
cmp
mov
add
enter
mov
dec
xor
in
addr16
negl
not
mov
shl
sub
sbb
nop
mov
add
and
sbb
hlt
ljmp
pop
idivl
movsl
jne
inc
shlb
les
add
faddl
xchg
clc
pop
test
add
in
push
out
ljmp
jge
inc
cltd
in
js
fistpll
cmp
lret
mov
sbb
mov
addl
mov
jmp
inc
inc
inc
sub
and
xchg
out
inc
ds
pop
aaa
or
dec
sub
test
pop
call
jbe
and
mov
sub
or
ss
cmc
or
mov
add
je
adc
or
test
pop
gs
add
push
aaa
addb
xchg
mov
or
and
mov
dec
cmp
rcrb
xlat
mov
mov
or
dec
out
and
pop
mov
cld
xchg
cmp
mov
mov
mov
es
cmp
sub
stos
cmp
dec
jp
sub
pop
mov
movsb
and
addr16
xor
aaa
int
lea
imul
mov
cmc
enter
andb
xor
fstpt
out
jo
call
addr16
push
neg
add
out
sbb
inc
in
xchg
cmp
fucomp
test
pop
or
mov
ret
mov
jo
lods
mov
and
dec
mov
cmp
adc
xchg
ljmp
dec
mov
mov
xlat
in
mov
imull
ret
arpl
jbe
cmp
hlt
xchg
pop
sbbb
mov
loope
push
xchg
sub
add
adc
jne
or
mov
mov
sub
xchg
sahf
lea
cmp
lds
cwtl
pop
add
imul
jg
js
pop
or
insl
in
inc
call
sbb
mov
out
lcall
ret
add
imul
pop
movsl
test
lds
out
call
add
test
or
sub
cld
cli
push
xchg
sub
lcall
lret
mov
xchg
pusha
jae
js
sbb
aas
jmp
pop
inc
repnz
in
xor
add
hlt
xchg
cmp
add
inc
or
stc
xor
aad
push
mov
mov
inc
orb
lock
fbld
inc
adc
movsb
add
lds
adc
jbe
sti
js
sbb
or
mov
imul
adc
ljmp
cmpsl
in
push
daa
xor
lds
mov
sub
lret
sbb
xor
jno
rcll
flds
aas
jp
xlat
cmpsl
mov
inc
in
das
mov
dec
inc
pop
cmp
mov
mov
aad
adc
mov
pop
daa
sub
dec
imul
test
mov
mov
adc
cmpsb
in
pop
jne
fisubl
xor
sub
loopne
daa
push
and
adc
nop
xlat
xchg
sbb
js
inc
xchg
add
sub
adc
stos
daa
in
stos
push
mov
sub
or
data16
test
adc
lea
jmp
and
addr16
adc
inc
lret
mov
in
je
xchg
xchg
loop
add
mov
test
pop
inc
fdivs
sub
pop
fisubrl
lcall
sbb
adc
rorb
fcoml
jp
mov
or
adcb
ret
hlt
xchg
sub
and
mov
movntq
jl
dec
aaa
fdivrs
jecxz
sbb
cli
enter
sbb
xor
mov
hlt
ret
dec
pop
mov
test
sbb
fldenv
cmp
dec
xchg
test
lret
pop
out
popf
pop
pop
and
les
aaa
mov
inc
adc
mov
adc
sbb
shl
sub
sub
mov
pop
stos
mov
enter
fsubs
aaa
sub
sub
stos
dec
mov
pop
aad
xchg
dec
cli
hlt
ret
mov
pop
mov
fimull
mov
jl
fdivrs
push
pop
jne
or
mov
cli
movb
bound
cmpsb
js
sub
sub
shrb
iret
cltd
stos
adc
xchg
xchg
jbe
pop
cli
cmp
lock
xchg
or
rolb
xchg
pop
mov
fiadds
cmp
jbe
dec
or
sbb
cli
aad
or
adc
sbb
int
xor
sarl
mov
cltd
mov
imul
cmp
add
int
xchg
xorl
mov
fwait
pop
dec
xchg
call
ret
cltd
push
in
adc
popa
jmp
jl
xor
dec
push
mov
ret
xlat
cmc
sbb
jecxz
adc
out
xchg
jnp
mov
std
mov
fisubrl
in
das
negl
fucomi
cltd
inc
out
fimull
mov
inc
sub
js
into
xor
out
testb
sahf
inc
jbe
mov
sub
xorl
push
cmc
pop
loop
inc
out
xchg
add
arpl
mov
loopne
cmp
cli
jmp
cld
push
or
repz
call
jp
add
sarl
push
sub
xchg
or
enter
cli
clc
cmp
cmp
sbb
mov
xchg
mov
xchg
lods
xor
ror
xchg
stos
lret
je
movsb
sbb
jp
popf
adc
cs
or
pop
cmc
xchg
pop
adc
cmpsb
roll
jp
mov
lcall
out
out
stos
enter
xor
push
inc
daa
pop
hlt
loope
pop
or
test
cmp
jl
ljmp
mov
leave
mov
push
stc
add
divb
xchg
pop
fmuls
fiadds
jns
cli
fisubl
ret
adc
orb
xchg
out
cmp
in
or
sbb
scas
daa
add
push
xchg
xchg
xor
out
test
hlt
adc
adc
lock
lcall
pop
dec
jp
mov
mov
pop
push
cmc
int3
cmp
testb
cmp
mov
fsubrp
adc
pop
in
dec
lea
imul
pop
popf
adc
jb
xchg
cmp
pop
jmp
mov
sbb
dec
aaa
mov
daa
loop
out
mov
rolb
in
cwtl
popf
stos
mov
aad
inc
push
idiv
cmp
js
out
mov
xlat
mov
cwtl
in
xchg
cli
mov
out
push
test
push
imul
fmul
jbe
sbb
fmuls
xchg
dec
and
cli
imul
test
or
push
shrl
sbb
mull
mov
jge
or
aaa
and
lds
mov
and
rep
mov
fabs
hlt
jp
sbb
ficompl
or
xchg
dec
sbb
int
idivl
ret
dec
movsb
xlat
aaa
cmpl
pop
testb
jl
aaa
out
dec
sub
les
xchg
js
mov
inc
or
cmp
sbb
ret
cmovbe
xchg
dec
movb
adc
lock
push
arpl
lret
and
mov
sbb
lcall
sub
popa
jbe
adc
imul
sbb
mov
jmp
or
mov
mov
xor
push
aad
cmpsl
inc
mov
cmp
push
std
mov
jg
pop
or
or
es
pop
xor
pop
in
dec
jmp
lret
fidivs
fwait
dec
push
or
sub
adcl
leave
mov
mov
dec
addr16
sbb
movsl
fsubrs
cltd
stos
cwtl
xchg
xor
push
cmp
push
and
fnsave
mov
lods
pop
and
lds
xchg
or
sbb
dec
fists
push
mov
dec
pop
cmp
sbb
loope
push
scas
pop
sub
cmpsb
lcall
fucomip
inc
sbb
and
cmc
push
nop
mov
loop
lods
push
mov
pop
sub
xchg
sub
lds
xchg
cwtl
jp
push
adcb
mov
movsl
imul
enter
xor
jb
or
aaa
and
arpl
in
notl
ljmp
sbb
add
enter
sub
and
mov
hlt
imulb
sub
js
scas
lds
cmp
mov
cmp
cmp
stos
or
push
fnstcw
adc
jmp
xchg
out
or
clc
dec
mov
jp
es
dec
push
ljmp
xchg
cmp
cmp
xchg
ss
sarl
out
dec
pop
ds
fidivrl
lcall
mov
loope
cmp
jg
xlat
and
mov
mov
sub
mov
pushf
adc
stc
out
xlat
adc
addr16
lret
test
lods
push
mov
or
mov
or
inc
imul
or
clc
aaa
out
daa
push
stos
xlat
push
sbb
inc
imul
sub
xor
mov
dec
aaa
xor
lcall
xor
adc
in
dec
mov
sbb
xlat
out
pop
ret
push
cmp
mov
mov
xor
mov
pop
push
cmpl
fimull
je
enter
rclb
ds
xchg
iret
stos
dec
sbb
pop
add
xchg
push
insb
inc
outsb
adc
xlat
lea
mov
or
test
insl
and
cmp
jns
dec
addr16
dec
sahf
je
int
jle
aas
lret
inc
jmp
fidivl
stos
cmc
in
movl
mov
out
cs
or
js
sub
add
in
or
mov
lcall
popa
js
in
aad
xor
push
jg
mov
in
aaa
fbld
gs
add
mov
adc
mov
mov
dec
movsl
cmp
cmp
push
add
jns
adc
inc
mov
push
lret
xchg
daa
cmp
xchg
inc
mov
ds
cmp
or
call
sbb
mov
push
dec
mov
lret
dec
pop
aad
mov
jb
jge
dec
loopne
daa
in
jmp
std
pop
lea
xorl
out
dec
xor
adcl
jns
or
mov
ficoml
jg
mov
std
pop
fsubr
jp
mov
addr16
mov
test
mov
test
in
dec
insl
adc
mov
push
leave
xchg
sub
adc
out
int3
fsub
add
jp
inc
sbb
sub
xchg
xlat
lret
sbb
dec
add
inc
jp
pop
rclb
mov
aad
addr16
cmp
aaa
mov
xchg
xchg
mov
cmp
fmull
enter
xchg
in
cli
pop
add
and
sahf
inc
jle
sub
cwtl
gs
sbb
sbb
sbb
mov
aad
jno
stc
mov
enter
jb
sbb
es
aad
mov
lds
mov
sub
cmp
js
or
aas
cmc
hlt
xchg
push
push
popa
int3
cmp
pop
xor
xchg
divl
jge
inc
sbb
gs
lods
xchg
dec
sub
out
mov
or
cwtl
clc
icebp
pop
aad
testb
sbb
sahf
mov
pop
mov
sub
jo
das
cmpsb
in
notb
mov
dec
sbb
xchg
out
xchg
pop
xchg
js
jg
cmc
ljmp
sbb
inc
cmpsb
sbb
cmpl
out
cmp
aaa
ljmp
rclb
out
dec
sbb
cmp
add
stos
or
xchg
test
mov
test
addl
out
sbb
bound
inc
xchg
and
dec
daa
dec
aad
dec
cmc
fidivrl
xchg
orl
out
xchg
push
push
fcomps
or
jbe
pop
adcl
dec
cmp
cmp
cwtl
call
mov
sahf
adc
addr16
dec
xor
xchg
clc
sahf
cmp
sub
mov
sbb
mov
imul
pusha
enter
jp
es
push
movsl
mov
mov
add
pop
je
cmp
add
xchg
inc
jbe
fcomps
or
imul
fbld
adc
mov
cmp
push
in
jne
gs
dec
pop
hlt
movsb
inc
xor
sub
add
or
cmp
dec
in
inc
mov
dec
pop
push
popf
inc
pop
push
jg
sub
test
jge
aas
adc
xor
clc
out
sbb
lcall
inc
mov
divl
jbe
in
jmp
adc
adc
mov
cmp
add
int
ljmp
dec
call
xor
int
push
xor
lret
lds
test
and
xor
and
add
pop
and
out
or
mov
lret
pop
iret
xchg
mov
out
sub
in
mov
push
sbb
xor
cmp
aad
pop
pop
popf
jne
mov
out
es
push
jg
fmuls
sbb
inc
sbb
ret
or
stos
jp
jg
push
add
cli
push
lods
aad
xlat
sub
lods
inc
ret
cmp
xchg
sbb
inc
cltd
call
xchg
xchg
lds
repnz
pusha
sub
out
lcall
jae
imul
shl
mov
pop
std
sbb
pop
xor
idivl
jp
mov
stos
in
pop
int
bound
add
dec
cmp
jno
in
mov
stos
stc
mov
lods
test
pop
sub
jne
xor
divb
out
divl
repnz
lcall
xlat
lds
adc
out
cmp
cmp
loopne
pop
jbe
testb
inc
loop
adc
call
sub
leave
or
loope
in
daa
push
xorb
imul
adc
push
push
or
inc
rolb
xor
mov
jg
xchg
clc
pop
lods
lahf
inc
xchg
mov
pop
mov
or
stos
inc
sub
out
cmp
aaa
lods
shll
pop
xchg
pop
loop
or
hlt
out
and
xchg
daa
xor
fcomps
test
mov
jne
leave
pop
cmp
aam
dec
dec
out
xchg
and
sbbb
xchg
xor
daa
stos
cmp
mov
xlat
sub
ret
out
or
mov
mov
xor
cmpsb
mov
fidivrl
adc
mull
mov
adc
icebp
mov
jl
or
cli
rolb
test
cmp
aaa
or
cltd
insb
pop
xchg
clc
scas
addl
add
add
test
cmp
mov
ret
and
mov
or
shr
pop
cmp
shlb
mov
and
cmc
fmuls
jg
xchg
out
cwtl
ljmp
push
sbb
daa
mov
bound
add
lret
out
mulb
cmp
cmpsl
stc
xor
push
and
lea
cwtl
ljmp
cmc
sbb
in
std
fnstsw
iret
mov
sub
or
ljmp
cwtl
enter
pop
sbb
mov
xchg
jle
or
sbb
aaa
sub
xchg
addl
push
arpl
lea
test
imul
daa
sub
arpl
dec
mov
mov
js
mov
or
hlt
inc
jp
or
fwait
test
pop
xchg
mov
adc
in
call
jbe
in
fsub
or
daa
add
jp
push
mov
cmp
icebp
add
insl
clc
or
aad
test
test
stc
stos
out
js
adcb
xor
dec
and
clc
mov
pop
mov
cmp
pop
mov
aaa
in
push
lds
pusha
lds
aas
cli
call
ljmp
jmp
jg
pop
cmc
adc
cmp
mov
mov
xchg
lds
daa
dec
mov
pop
add
fidivl
xor
std
ds
push
imull
out
cmp
sbb
cmp
cli
dec
lret
jbe
or
cmp
in
out
cmc
dec
ss
aaa
shrl
cmp
mov
jp
and
mov
fidivrl
add
cli
cmc
adc
cltd
or
enter
neg
pop
inc
xlat
mov
cmp
cmp
pop
in
mov
mov
addr16
bound
popf
les
mov
add
sub
and
add
mov
int3
out
xor
in
xor
add
test
and
out
outsb
and
xchg
stos
imul
dec
int3
pop
mov
in
lret
lods
mov
mov
fldenv
mov
aaa
xor
mov
mov
cmpsb
test
mov
movsl
loopne
out
int
mov
repnz
or
loope
xor
dec
mov
movb
cmpl
push
push
inc
xchg
stos
mov
nop
cli
jmp
out
out
add
push
xchg
test
cmc
cmp
mov
inc
shrl
dec
stos
imul
sbb
je
xchg
pushf
inc
cmp
or
adc
mov
pop
push
stos
xor
mov
test
call
imul
xorl
jbe
not
xor
pop
stos
test
push
dec
sub
imul
sub
test
loopne
sub
push
leave
sbb
dec
in
mov
imul
mov
in
les
es
jne
xchg
cmc
test
clc
mov
subl
test
sub
xchg
out
push
iret
push
lds
outsb
push
lds
daa
lcall
cwtl
in
ds
scas
mov
xor
addr16
add
imul
cmp
rorb
jecxz
sub
xchg
mov
xchg
adcl
movsb
addr16
clc
fildll
ljmp
xchg
inc
rorb
js
fwait
add
call
xor
iret
loope
js
cmp
mov
in
in
xchg
ret
pop
int
ljmp
mov
mov
push
or
push
in
lret
adc
mov
fwait
dec
je
fs
gs
mov
pop
ficompl
das
inc
mov
cmpsl
testl
fists
out
in
mov
pusha
in
dec
cmp
test
into
in
mov
icebp
jnp
lret
loop
stos
push
mov
or
jp
push
inc
sbb
mov
mov
fidivs
lret
out
push
adc
in
rol
frstor
scas
mov
sbb
mov
and
xor
dec
js
xchg
pop
sub
xor
ss
aad
dec
add
hlt
pop
xchg
and
xchg
push
cmpl
or
mull
aad
out
mov
pop
xchg
jbe
pop
sub
xor
or
add
cld
es
adc
xor
lds
ret
sbb
repnz
push
mov
in
cmp
mov
fs
fnsave
aad
inc
push
test
fists
test
fldcw
jmp
cmp
lcall
std
loopne
adc
add
and
pop
add
xchg
dec
vmovaps
or
sub
stos
adc
mov
aad
test
adc
mov
fwait
xor
es
int3
mov
inc
loope
pop
mov
sbb
lcall
mov
adc
cltd
lea
cmc
pop
mov
sbb
sbb
jp
cmp
std
dec
testl
or
pop
fwait
fs
or
cmc
imul
cmpsb
test
sub
or
jns
sbb
pop
aad
inc
addr16
mov
mov
data16
xor
fdiv
stos
sub
cmp
adc
add
or
add
std
pop
popa
xor
dec
dec
fwait
cli
imul
lock
and
cmc
mov
fistps
test
sbb
pop
mov
cmc
xchg
hlt
cmp
hlt
testl
call
pop
ljmp
mov
push
inc
pop
or
fsubl
movsl
pop
mov
pop
stos
loope
sub
adc
lret
outsb
loope
jbe
enter
cmp
movsl
cmp
stos
cmp
jle
push
pop
fucom
icebp
in
sub
and
es
cmc
adc
notl
test
or
lret
addr16
mov
stos
sbb
xchg
mov
popf
pushf
pop
test
fmul
jmp
in
test
sub
adc
adc
cwtl
icebp
or
cwtl
cmp
mov
lods
mov
mov
stos
loop
into
cltd
cltd
notl
mov
mov
in
push
imul
xchg
cmp
dec
xchg
fstp
test
xchg
xchg
es
divl
idivl
stos
sub
pop
and
lcall
mov
aad
out
daa
xchg
popa
pop
pop
dec
or
hlt
icebp
mov
mov
jno
ficompl
sub
mov
mov
imulb
int3
imul
add
inc
out
popa
or
mov
pop
rcll
mov
out
jl
in
mov
popf
lcall
and
testb
es
rcrl
roll
or
sbb
sub
mov
out
hlt
in
sarb
adc
jbe
xchg
jge
xchg
lret
xchg
lds
ds
das
int
or
adc
cmp
xchg
imul
pop
sub
dec
mov
mov
xchg
add
cmpsb
cmp
sahf
add
cli
add
rorl
out
movsb
sbb
add
push
nop
cwtl
in
int3
mov
in
stos
fiadds
dec
pop
or
or
xchg
push
mov
push
sub
stos
adc
pop
xchg
loop
sbb
lods
mov
add
rolb
pop
or
jnp
jbe
adc
cmpb
ljmp
movsl
inc
push
stos
xlat
rol
jge
and
shll
stc
iret
cli
pushl
mov
jmp
mov
decl
inc
mov
sbb
out
in
sbb
mov
push
call
sub
mov
pushf
ljmp
out
add
dec
pop
clc
jg
or
sub
divb
mov
leave
out
call
dec
pop
xchg
sub
lcall
or
mov
subl
mov
xchg
mov
fdivs
mov
and
aad
mov
add
xchg
rol
addr16
xchg
int
jmp
sub
movsb
ljmp
mov
push
dec
mov
out
lds
stos
es
test
nop
mov
pop
lret
xchg
sarl
stc
repz
sub
jp
jecxz
test
and
sbb
bound
movl
pop
cwtl
imull
mov
pushf
loop
add
inc
stos
sub
sub
mov
mov
mov
or
sbb
pop
aas
adc
sub
rolb
xchg
or
cmc
pop
lods
insl
or
and
stos
cmp
pop
or
jns
test
adc
jp
loope
cli
push
in
pop
mov
sbbb
pop
or
out
sub
add
mov
lea
cmp
or
mov
pop
loope
fdivs
pusha
aaa
lds
mov
and
addr16
sarb
filds
add
and
cwtl
pop
or
pop
xor
push
ljmp
in
dec
mov
mov
or
inc
and
mov
inc
xchg
es
stos
cmp
dec
fiaddl
mov
push
gs
cmp
mov
sub
inc
xor
adc
fadds
cmp
cmp
mov
cmp
xchg
sbb
scas
jnp
ret
and
and
sbb
cli
daa
or
int3
js
mov
test
xor
mov
cltd
ret
pop
adc
xor
lcall
stc
jno
loope
enter
out
push
fisubl
cmp
cmp
cmc
loop
xchg
lret
fldcw
test
add
push
push
jno
mov
push
addr16
jg
cmp
or
fdivrs
and
add
lcall
xlat
or
or
js
and
out
test
adc
js
rcll
out
enter
mov
mov
push
cli
ret
sub
jne
movsb
mov
cmp
mov
ljmp
cmp
and
sbb
in
cmp
in
or
dec
out
std
repnz
add
repnz
and
inc
pop
testb
js
loop
mov
cmp
clc
xchg
or
in
push
es
loopne
pop
ljmp
pushf
xchg
lret
aaa
xchg
aaa
push
aad
test
mov
push
pop
pop
lcall
ret
aas
addl
mov
imul
cmp
xchg
xchg
fcomps
mov
adc
dec
jle
pop
cwtl
mov
mov
ret
cmp
add
cmp
lea
mov
xor
cwtl
mov
and
lcall
mov
and
test
in
push
sbb
iret
dec
shl
cli
cmp
add
cmc
mov
orb
xor
enter
testl
fisttpll
lods
lret
pop
push
sbb
push
mov
pop
stos
popa
gs
inc
sub
mov
ljmp
filds
dec
pop
sub
loope
in
mov
mov
js
inc
clc
es
mov
sub
fisttpll
or
mov
test
loopne
xor
enter
mov
out
orb
mov
or
movsl
test
add
xor
stos
xor
std
mov
pop
mov
enter
cltd
aaa
test
sub
je
pop
mov
push
mov
ja
xchg
aaa
mov
outsl
xchg
mov
push
jg
aaa
lcall
cmp
jb
sub
std
cs
cmp
call
mov
dec
jp
mov
gs
mov
fwait
pop
cmp
stos
cltd
clc
cli
mov
fwait
loop
jecxz
mov
pop
fmuls
cmp
shrl
sub
scas
fadds
enter
sbb
lcall
xchg
fstpl
dec
jmp
jg
call
lea
mov
cwtl
lret
shll
sub
outsl
shrl
lods
test
jb
adc
aas
pop
out
sarb
pushf
test
add
les
incl
cwtl
lret
pop
xor
clc
mov
scas
enter
or
pop
roll
enter
xchg
and
loope
icebp
cmpb
divl
mov
inc
push
leave
dec
xchg
jno
adcb
xchg
adc
mov
js
adc
enter
dec
incl
jp
pop
imul
mov
jp
imul
out
cmpsl
lcall
cltd
pusha
sub
pop
jns
psraw
cmc
pop
jecxz
mov
clc
cli
sbb
lods
loope
mov
xlat
xchg
mov
negb
sbb
out
pop
test
and
ficompl
sbb
shrl
addr16
stos
out
roll
cmp
jns
mov
aaa
fdivs
mov
push
shl
imul
subl
jmp
addb
cmpb
aad
sti
sbb
popa
lret
loope
xor
xchg
mov
or
xchg
and
jne
cli
jp
push
jg
movsb
jmp
in
lods
icebp
push
enter
xlat
sub
jl
xchg
insb
cmp
inc
or
fisubl
sub
clc
xchg
inc
lret
fstpl
sub
sub
and
xor
xchg
clc
adc
mov
hlt
out
mov
cmpb
and
xor
mov
jecxz
mov
mov
je
or
pop
mov
push
cli
push
stos
xlat
fs
outsb
je
jp
daa
or
sbb
add
sbb
adcl
pop
ret
sub
xchg
or
xor
pop
inc
mov
addr16
repnz
imul
test
lds
jmp
fcompl
cltd
cmpl
mov
pop
cmp
xchg
sbb
ljmp
fs
subl
push
xchg
and
cwtl
sbb
cltd
mov
js
or
dec
dec
outsl
xor
daa
ljmp
hlt
mov
or
idivl
out
or
fdivs
aaa
lds
dec
mov
call
stos
push
cltd
sbb
add
imul
xchg
daa
ja
in
in
add
aaa
adc
and
mov
data16
xchg
adc
xor
in
aad
jb
lods
cmp
add
pop
mov
jae
xchg
xchg
mov
clc
inc
push
xor
out
sub
cmpsb
notb
jg
js
or
call
add
out
lret
std
pop
into
in
insl
sub
shrl
sbb
ficompl
adc
movsb
or
dec
and
add
xchg
dec
cltd
test
imul
or
mov
fmulp
in
dec
jbe
shll
aaa
or
xor
out
cmp
cmp
jne
cmp
cmp
xchg
mov
cli
lds
dec
push
cmc
in
xchg
mov
cmp
jmp
inc
sarl
xchg
lret
addr16
xchg
cwtl
sub
imul
add
popf
push
xchg
adc
lods
mov
clc
xchg
jp
dec
std
cs
sub
pop
dec
popf
mov
loopne
mov
add
or
outsl
mov
js
jecxz
sbb
mov
jne
push
in
lcall
out
cwtl
push
push
leave
xlat
sbb
inc
sub
dec
sub
or
das
les
je
imul
imul
mov
pop
pushf
lret
js
in
jmp
mov
cmp
cwtl
clc
insl
mov
cmc
push
jb
xchg
add
dec
sub
dec
movl
inc
cmp
cmp
div
jp
scas
mov
subb
xchg
es
mov
addr16
fisttpll
cmpl
pop
xchg
xchg
fs
push
sbb
in
sbb
and
out
xchg
mov
gs
fiadds
adc
enter
push
fcoms
insb
push
dec
pop
lds
dec
push
insb
xchg
movsl
jns
jbe
xor
repz
sub
sbb
out
mov
lods
orb
lret
addl
ret
mov
insl
shr
cmp
xor
add
sahf
rorl
mov
scas
dec
mov
aaa
dec
fcomps
lds
dec
loop
cmpb
xlat
sub
xchg
lcall
enter
rolb
mov
inc
mov
dec
or
adc
cmpsl
push
mov
adc
mov
sti
sbb
aaa
dec
sbb
call
mov
clc
imul
sub
jbe
jp
mov
pop
mov
mov
mov
lahf
aaa
ret
jbe
push
xor
inc
mov
or
mov
dec
sub
in
xchg
leave
lahf
addr16
pop
out
jmp
adc
loopne
push
clc
fimuls
mov
aad
cmpsl
adc
inc
es
popa
mov
and
jb
sbb
js
xor
xchg
or
cmpsb
in
shr
lret
test
loop
mov
pop
test
popf
fldcw
or
std
out
pop
pop
and
test
mov
xchg
inc
movb
enter
test
daa
in
cli
js
shll
xor
inc
sbb
pop
inc
clc
pop
cmpsl
and
dec
cwtl
in
xchg
fsubl
popf
pop
jp
imul
dec
movl
mov
lcall
mov
decl
bnd
sub
sub
lds
aaa
pop
mov
or
mov
adc
arpl
pop
push
out
enter
sbb
mov
leave
aaa
xchg
mov
xchg
lret
add
mov
jp
xchg
ljmp
xchg
mov
mov
xchg
pop
or
les
mov
in
mov
jg
push
xchg
stos
jo
mov
out
xor
mov
dec
push
add
test
pop
scas
push
pop
hlt
jp
mov
pop
popa
mov
push
repnz
daa
sbb
cmp
jmp
mov
xor
out
and
subb
add
lods
or
or
mov
popf
mov
imul
std
adc
test
mull
sub
fwait
enter
enter
cwtl
jb
jg
aad
ja
jb
xchg
push
daa
jp
cli
sbb
add
aad
fdivs
movb
or
mov
xchg
pop
fwait
and
inc
sbb
sub
test
int3
pop
int
outsl
pop
ret
out
ds
clc
loope
push
push
call
int
fmuls
inc
aad
mov
push
or
and
out
fsubrs
sbb
xor
stos
mov
and
and
pushf
jmp
xchg
xor
test
xchg
pop
test
cmc
test
pop
popa
daa
dec
mov
lcall
into
je
jbe
subl
filds
imul
xor
notl
testb
pop
cld
cmpsb
cwtl
leave
pop
mov
or
and
push
dec
pop
test
push
ss
in
testb
cli
in
js
frstor
std
lret
loop
dec
sub
orl
arpl
xchg
cmp
imul
mov
ja
movsl
cmove
xor
fcomps
sub
lds
int
les
push
adc
test
mov
dec
mov
lcall
pop
dec
jecxz
out
fisubl
sub
cmp
leave
sub
pop
cmc
negb
stos
adcb
aaa
cmp
cmp
pop
mov
xchg
fwait
loope
cwtl
jp
mov
push
adc
jmp
cmp
add
aaa
shlb
lods
icebp
cs
xchg
lret
mov
sbb
cmp
xchg
cmc
xor
mov
ljmp
cli
ret
or
cwtl
mov
out
rolb
sbb
adc
mov
cmp
inc
adc
xchg
xchg
or
mov
sbb
in
roll
test
xchg
fisubl
gs
cmp
cld
in
mov
pop
dec
mov
lret
clc
orb
xor
pop
leave
es
pop
cli
cmp
pop
dec
lret
xlat
dec
pop
mov
shrb
mov
aaa
cmc
adc
or
addr16
cltd
pop
negb
push
cmp
inc
lcall
or
mov
or
sbb
test
mov
and
xchg
xchg
icebp
enter
or
in
fisubrl
xchg
or
ficoml
pop
lret
or
xchg
ret
test
and
jp
or
mov
dec
loop
mov
jns
pop
js
or
mov
adc
ret
loop
mov
jnp
dec
ret
cld
and
add
and
add
mov
mov
lods
push
mov
xor
sbb
mov
dec
jp
inc
je
xorb
aam
mov
aas
and
test
push
and
add
jnp
testl
aaa
fs
and
sub
subl
out
and
insb
and
stc
movsb
xchg
xchg
push
lcall
xchg
negb
mov
dec
cli
les
enter
pop
movsb
sti
loopne
in
and
mov
pop
cmp
js
out
rcll
les
test
mov
js
sbbb
aad
sbb
xchg
test
sbb
cmp
pop
or
add
xchg
aad
addr16
sbb
call
int
roll
insl
das
dec
daa
mov
insb
mov
aas
cmp
add
sub
and
clc
loope
sbb
lret
adc
nop
jmp
enter
adc
fs
jge
pop
sbb
addr16
fisttpll
push
les
je
aad
ret
lahf
test
cmp
mov
shl
filds
xchg
lcall
dec
mov
stos
xchg
ret
push
xor
dec
pop
sub
cmp
addr16
add
movsl
xor
insb
adc
pop
push
insb
hlt
or
sbb
jge
das
roll
or
cmp
lcall
fsubr
add
push
imul
jge
xor
lcall
scas
out
dec
mov
xchg
adc
mov
sarl
xchg
out
add
adc
aaa
push
xchg
gs
daa
cmp
pop
xlat
jp
fisubs
test
out
or
je
enter
add
sub
sbb
xchg
sub
subl
xchg
in
mov
mov
sub
xorl
pop
orb
xchg
ret
push
pop
xchg
fcoms
xchg
inc
ret
pop
push
movsb
or
and
dec
test
or
mov
jbe
xchg
push
inc
push
clc
fsub
ljmp
xchg
lds
add
xlat
dec
lcall
jmp
pushf
enter
or
cmp
popa
sbb
outsl
shl
mov
loope
pop
pop
pop
pop
xchg
nop
sub
cli
or
add
jae
and
pop
xchg
xchg
in
jmp
xchg
cmp
cmp
test
sbb
test
jbe
call
sub
arpl
pop
call
mov
push
out
mov
cmp
mov
xchg
or
or
xlat
mov
push
aad
jp
add
test
rol
push
push
sbb
loope
test
test
pop
mov
dec
lret
pop
mov
pop
lea
clc
or
cmp
pop
ret
mov
sbb
mov
pop
shll
jns
inc
imul
arpl
xchg
or
mov
enter
popf
lcall
mov
or
pop
test
dec
movsl
clc
cld
adc
lods
lds
shrl
scas
mov
cmp
pop
cmpsb
cmp
push
rorl
ljmp
clc
call
mov
or
addr16
push
cli
les
pop
dec
adc
inc
sub
dec
test
sub
mov
movsb
dec
xchg
in
imul
pop
cwtl
cmpsl
sub
xlat
mov
fbld
pop
cmp
cwtl
out
pop
fbstp
mov
and
adc
push
cmp
xor
outsl
add
leave
repz
pop
cmp
mov
push
enter
jmp
xor
push
sbb
add
popa
hlt
popa
aam
xorb
cmp
sbb
inc
in
sub
mov
xchg
clc
lcall
xor
jno
adc
mov
ss
mov
mov
adc
das
stos
inc
jge
dec
int
jnp
aad
shld
testb
pop
in
sub
call
rorb
xor
cmp
aaa
xchg
ficompl
test
sbb
dec
jbe
inc
mov
cmc
lea
mov
addr16
dec
aaa
out
mov
cmp
inc
lds
adc
fsub
inc
arpl
out
sub
xchg
push
testl
in
cwtl
dec
mov
xor
mov
pop
or
aaa
sub
xor
je
xor
xchg
out
cmc
test
sbb
xlat
and
push
jecxz
idivl
pop
inc
mov
dec
xchg
cwtl
pop
in
xchg
add
fcoms
jns
adc
or
aam
mov
fiaddl
mov
xchg
aad
cli
imul
xchg
cmp
shr
inc
vunpckhps
pop
div
sbb
jecxz
daa
inc
les
add
jmp
and
in
jle
inc
testl
mov
add
testl
mov
mov
mov
mov
and
outsl
arpl
inc
xor
adc
fdivrs
lret
push
dec
sub
push
mov
insb
add
mov
out
lcall
addr16
dec
je
outsb
cltd
mov
daa
mov
inc
pop
and
fs
aad
das
and
mov
adc
lcall
ds
sbb
push
cmpsl
cmpsl
cmpsb
and
out
mov
or
movsb
cmp
js
xor
notb
adc
mov
lods
push
in
xorl
shll
lret
aas
mov
xchg
adc
lret
fcmovbe
xlat
push
subl
xchg
pop
hlt
jbe
out
inc
mov
pop
jmp
push
mov
sbb
sarl
stos
mov
lcall
out
and
stos
ret
inc
adc
ss
pusha
cld
mov
xchg
adc
and
jp
inc
mov
xchg
mov
lret
loope
test
addr16
cli
jnp
jo
sub
cmp
sub
push
test
jne
and
and
adc
dec
out
or
xchg
or
iret
in
lods
call
es
or
es
lods
mov
in
mov
mov
and
dec
in
and
stc
push
cmp
inc
test
dec
in
jg
call
push
pop
pop
mov
in
fs
pop
cmc
rorb
cmp
out
test
sbb
cwtl
mov
cmp
jne
or
cs
add
mov
sub
scas
ret
fisubrl
xchg
push
call
sub
mov
mov
movsb
cli
test
in
inc
xor
int3
call
pop
fcmovnb
insl
icebp
aaa
pop
enter
mov
ret
cwtl
sbb
aas
and
ret
jbe
pop
or
pop
addr16
shl
pop
in
sbb
jo
push
movsb
xchg
fcomip
call
xchg
or
add
mov
call
dec
or
mov
clc
cmp
jae
lods
adc
sbb
mov
int
fisttpll
in
enter
out
xchg
push
call
idivb
xlat
gs
mov
js
mov
movsl
out
dec
out
mov
shl
mov
adc
cwtl
xor
cmp
fnstcw
adc
xor
and
xchg
mov
dec
fisttpll
stos
inc
mov
sbb
inc
pop
dec
js
mov
sarb
push
hlt
ljmp
hlt
in
les
fiadds
sub
sarl
sbb
push
enter
out
pop
xlat
incl
not
call
dec
pop
xor
flds
xor
in
mull
cmp
mov
cli
mov
fimull
mull
sub
hlt
inc
mov
cmp
sbb
addl
test
adc
or
in
aaa
xchg
in
dec
imul
mov
fisubrl
je
fs
push
push
sbb
inc
or
testl
cmpsb
mov
push
rcl
adc
adc
fnstenv
cltd
or
lret
nop
cmp
mov
and
cmp
cmp
pop
in
xchg
fcmovnbe
xchg
mov
adcb
pop
sub
fstpt
dec
js
add
cmp
loope
jns
push
fstp
dec
inc
and
jb
add
imul
lds
call
sbb
mov
aaa
jnp
loopne
daa
dec
adc
mov
or
mov
scas
shl
xlat
cltd
xor
daa
xchg
push
in
hlt
loope
clc
and
stos
pop
stos
popf
icebp
mov
jl
das
sbb
adc
mov
or
xchg
push
xchg
sub
in
push
or
dec
fidivl
xchg
jno
push
inc
out
mov
adc
dec
imull
mov
xchg
mov
sub
call
enter
sub
cltd
mov
sub
fcomps
xor
sub
out
ljmp
fimull
add
imul
push
out
dec
push
push
clc
pop
daa
cli
in
cwtl
aaa
shll
inc
or
jle
cmpsb
popf
test
negb
in
cwtl
jbe
lock
or
rcrb
lcall
push
adcb
mov
aad
je
sbb
dec
imul
in
push
or
fsubs
or
add
push
lcall
sti
push
mov
test
adc
adc
xchg
repnz
movsb
movsl
pop
daa
jecxz
or
mov
fidivrl
jp
clc
push
or
cmp
sbb
sub
jo
gs
pop
cmp
int3
and
push
xchg
inc
lahf
jp
sub
mov
std
aad
fstpt
sbb
cmp
jo
or
ljmp
xchg
sub
cmp
xchg
mov
insb
sbb
lret
in
jmp
ficoms
popf
inc
xor
or
in
stc
sub
lds
dec
adc
je
pop
add
dec
enter
or
cwtl
lret
cmp
popf
push
or
enter
stos
dec
mov
js
aaa
enter
leave
movsl
cmpsb
out
xor
and
or
repnz
fidivrl
test
add
dec
mov
imul
dec
adc
xchg
inc
xchg
xchg
jl
in
push
enter
test
idivb
jle
popf
in
xchg
daa
or
sbb
lcall
andb
mov
cmp
es
je
and
clc
mov
sbb
mov
cli
sub
xchg
pop
jo
add
hlt
pop
xchg
inc
xlat
in
out
cmp
sbb
jge
or
jg
ljmp
dec
mov
and
out
xchg
imul
lret
call
mov
mov
jo
cmp
mov
dec
jo
movsb
movsb
cmp
out
test
adc
push
fcomps
xor
push
push
cmp
clc
dec
adc
xchg
out
pusha
mov
test
aad
cli
inc
push
and
xchg
movsl
dec
sub
push
and
in
out
xchg
xorl
dec
scas
xor
mov
out
in
mov
popf
in
sbb
fiadds
lret
xlat
lcall
aaa
lds
xchg
or
mov
or
adc
xchg
and
addr16
imul
popa
aad
jmp
out
xor
movsb
test
mov
inc
sub
sub
mov
sub
cli
lock
pusha
inc
aaa
aas
cmp
lds
or
inc
sbb
pop
int3
pusha
jbe
icebp
in
js
pop
cmp
fimuls
xchg
insl
in
jne
nop
dec
test
cmpl
pop
andb
adc
mov
enter
inc
mov
push
add
out
or
lcall
ret
adc
aaa
add
lret
xchg
and
nop
push
mov
imul
data16
je
xchg
in
add
shl
sbb
sti
xchg
cwtl
xor
mov
shlb
mov
out
lret
or
cmp
cmp
movsb
xor
xor
in
cmpsb
movl
mov
and
xchg
adc
outsl
xor
jb
jl
pop
jecxz
xlat
mov
lods
enter
and
cmc
adc
sbbl
je
or
jp
test
push
lret
pop
aad
fldt
adc
xor
mov
adc
leave
push
daa
fstpl
das
cmp
xor
aaa
cmp
jae
cmp
cmc
stos
fcompl
lds
pop
fbstp
inc
sub
inc
xchg
mov
xchg
out
test
push
enter
cmp
xor
movsl
add
and
xor
clc
hlt
add
daa
out
inc
ret
stos
pop
mov
cmc
mov
or
pop
or
mov
es
icebp
and
es
out
pop
push
mov
mov
call
push
mov
dec
ljmp
je,pn
or
loope
imul
cmpsl
cmp
hlt
cmc
cmp
mov
aaa
or
mov
lods
cwtl
xchg
mov
sub
fdivrs
adc
cmp
xchg
xchg
rolb
or
fadds
cmp
inc
xchg
xor
imul
and
es
cmpsl
sbb
pop
xchg
sbb
mov
mov
into
add
or
inc
sbb
mov
or
mov
xor
out
push
pop
addr16
mov
icebp
xchg
sub
jle
mov
mov
sti
bound
in
xorb
push
xchg
sbb
sar
mov
or
sub
out
rolb
lea
mov
fcompl
pushf
mov
pop
xchg
in
stos
xchg
aad
imul
fsub
sbb
cmc
daa
ljmp
mov
add
sbb
jp
icebp
orl
test
ljmp
aad
scas
pop
sub
divb
cmp
mov
mov
dec
daa
xor
sti
add
or
aaa
mov
xor
or
shl
fcoms
in
cmp
xchg
push
rcll
lcall
addr16
gs
in
and
dec
sarl
ljmp
or
push
movsb
sbb
mov
scas
cltd
xor
pop
lock
inc
jl
imul
repnz
not
stos
cmc
xchg
lds
or
imul
pop
in
sarl
cli
mov
movsl
out
sub
dec
cmp
arpl
je
mov
fs
adc
fldcw
hlt
push
je
aaa
xor
sub
aad
lret
andl
or
or
loope
or
mov
cmp
adc
jo
sub
mov
movsl
lret
fcoms
mov
roll
cmp
xchg
adc
data16
insb
xchg
fildl
int
xchg
daa
call
cli
pop
mov
xor
pop
mov
adc
dec
xchg
and
jbe
pop
repnz
movsl
out
add
sub
and
or
mov
mov
shrl
sub
stos
addr16
aaa
xor
mov
xor
daa
and
push
addb
xchg
inc
out
xchg
mov
dec
ffreep
js
mov
lret
daa
or
push
or
in
jne
test
adc
xchg
pop
pop
dec
xchg
jp
jnp
ljmp
sub
in
xchg
sbb
leave
jl
sahf
into
pop
out
xchg
mov
dec
popa
mov
sarl
sub
mov
aad
add
and
and
scas
xor
nop
loope
sbb
xchg
cmp
xchg
sbb
add
hlt
sbb
mov
rorb
int
add
cmp
mov
jmp
out
cmc
repnz
jge
sbb
sub
mov
sbb
sbb
sbb
jp
cmp
adc
nop
adc
testl
xor
daa
xchg
cwtl
jbe
dec
or
push
jp
leave
lret
test
aaa
pusha
mov
push
inc
cmp
inc
jmp
cli
add
adc
add
fstpt
in
xchg
addb
pop
testb
xchg
movsb
adc
xchg
in
enter
sbb
pop
dec
sbb
mov
aad
or
lcall
push
jbe
iret
aad
mov
sub
xchg
stos
mov
mov
push
cmp
in
div
adc
cltd
outsb
test
sbb
out
arpl
in
mov
lds
mul
fistpl
lret
loopne
ficompl
aaa
stos
popf
cmp
cmp
mov
or
lcall
lock
lea
mov
mov
jmp
xlat
mov
pop
js
jge
adc
cmp
in
cs
adc
mov
sbb
mov
pop
andl
fcoms
xor
cmp
mov
orl
fimull
push
clc
pop
enter
cmp
mov
cwtl
xchg
sbb
mov
int
inc
and
fstps
aad
sbb
jl
daa
adc
dec
mov
xchg
add
dec
mov
mov
and
or
mov
test
fwait
imul
sbb
fsub
rcrb
inc
or
mov
push
stos
xchg
icebp
xchg
dec
imul
jp
add
add
adc
cmp
daa
lret
jl
jle
mov
push
jbe
je
jp
cmc
in
xchg
mov
mov
mov
or
int3
testl
cmp
push
out
mov
loope
xor
into
or
ljmp
sub
or
add
sub
inc
imul
aad
mov
mov
xchg
notb
sub
pop
mov
sub
or
sbb
adc
idivb
orl
xchg
cli
adc
xchg
int3
lret
mov
loopne
xchg
push
test
out
stc
cmp
cmp
adc
call
inc
mov
gs
inc
hlt
dec
xlat
inc
push
jg
jbe
mov
out
in
scas
nop
cmp
incl
mov
adc
sub
je
xchg
sub
mov
adc
adc
mov
xchg
xlat
lods
sub
stc
das
push
cltd
mov
aaa
mov
les
add
in
mov
cmp
cmp
lcall
xchg
test
jno
mov
js
jp
add
add
xor
cmp
mov
rol
test
xchg
jo
divl
lahf
adc
push
xchg
or
pop
imul
dec
bound
enter
push
scas
sarl
orb
and
repnz
pop
pop
jnp
jl
cmp
in
and
pop
cli
in
or
ret
or
lret
jmp
je
mov
mov
cs
push
cld
js
movsb
das
test
cmp
sub
ja
andb
mov
jp
ljmp
pop
mov
pop
push
sbb
xlat
pusha
in
mov
sbb
testl
ret
es
mov
xchg
lods
jmp
ret
out
loope
cli
inc
and
lods
xchg
and
inc
leave
sbb
iret
jp
push
sbb
in
andb
outsb
fstpl
lea
sub
call
aad
cmpsb
lcall
fistps
cli
mov
push
mov
scas
sub
mov
jmp
mov
push
xor
or
cwtl
cmc
fadds
aad
dec
clc
dec
hlt
pop
lret
stos
jg
cld
sbb
addr16
xchg
dec
mov
sbbb
cmp
rcl
xchg
fisubrs
or
mov
lea
mov
stos
sub
enter
testl
push
flds
push
cmp
xchg
addr16
out
adc
xchg
cwtl
ret
mov
mov
sbbl
dec
inc
or
lcall
pop
test
ss
pusha
cwtl
mov
not
or
cltd
xor
adc
gs
and
mov
push
cwtl
mov
out
lret
cs
popf
arpl
mov
out
mov
andl
xor
icebp
fbstp
std
xor
lcall
jmp
sub
jle
daa
addr16
and
push
add
pop
mov
incb
addr16
add
sbb
in
pop
mov
fistl
add
dec
mov
cmp
pop
ljmp
cmp
and
push
sub
test
cmp
stos
stos
sbb
sub
push
sub
lds
mov
sbb
jb
mov
push
scas
sub
xchg
dec
jbe
in
ret
iret
jno
aaa
sbb
or
adc
jbe
addr16
jecxz
faddl
repnz
loope
cwtl
into
leave
ret
popl
popf
jne
dec
enter
je
adc
inc
dec
and
imul
xchg
jl
roll
in
sbb
clc
ret
push
mov
xchg
cmc
fstl
ret
pop
or
xor
sub
in
fimull
pop
in
or
mov
jg
sbb
notb
hlt
divl
shl
xchg
sbb
mov
ljmp
fadds
mov
jmp
shll
out
out
push
lret
jg
mov
mov
dec
cmp
sub
add
js
or
inc
push
dec
xchg
fyl2x
pop
mov
test
or
scas
out
fiaddl
cwtl
sti
sub
push
out
mov
test
mov
aad
mov
sbb
shl
int
int
cmp
rclb
pop
mov
xchg
pop
jle
lret
or
cmpb
sub
sbb
lds
mov
cli
loopne
xchg
or
or
or
mov
sub
mov
hlt
or
jp
lea
lahf
lcall
imul
sbb
fmuls
sbb
cmp
addl
mov
pop
dec
pop
sub
cmp
sbb
test
xor
enter
aad
lret
testb
or
jg
addr16
sub
jbe
pop
das
in
adc
je
cmp
sbb
xchg
sbb
mov
xor
and
in
xchg
shrb
outsl
cmp
or
rorl
shll
stos
jbe
test
aaa
sbb
jp
daa
xchg
sbb
xor
sub
pop
shll
cltd
lods
xchg
jbe
or
mov
xor
js
mov
and
mov
lea
xchg
enter
pop
cwtl
pop
dec
dec
mov
xchg
into
ret
or
add
push
cmp
je
xor
vunpckhps
es
mov
clc
xchg
mov
lock
fisttps
cmp
test
xchg
dec
and
bound
in
cmp
in
movsb
das
sbb
outsb
inc
xchg
loopne
fs
adc
xlat
cmp
or
fcmovb
add
pop
mov
imul
lcall
cltd
or
add
hlt
pop
enter
aad
xchg
out
jnp
icebp
dec
pop
mov
lahf
lret
adc
mulb
es
mov
jge
push
cmp
jne
daa
adc
xlat
rcrl
sarb
stos
gs
aad
cmpsb
pop
cli
imul
xor
adc
or
inc
xor
lcall
push
sub
sub
xchg
dec
in
xlat
xchg
cmc
hlt
xor
aad
ficompl
add
sub
orb
xchg
dec
ljmp
loope
pop
jg
pop
lcall
clc
lret
or
push
test
dec
add
mov
loope
popf
sbb
xchg
mov
rorl
ljmp
out
inc
sub
mov
iret
fdivs
jmp
rol
push
stos
mov
pop
or
aas
fwait
lret
fcoms
add
xchg
mov
hlt
mov
or
xchg
fildll
ljmp
xor
stos
push
and
into
hlt
mov
fs
sarl
clc
insl
movsb
push
out
loope
ljmp
dec
mov
xchg
push
push
ret
mov
das
ljmp
fisttps
daa
mov
std
out
sarb
cmc
xlat
dec
dec
push
sub
fisubs
mov
inc
fisttps
xor
addr16
into
or
cmp
dec
sub
dec
outsb
leave
inc
fstpl
in
subb
or
rolb
jmp
sub
sub
out
in
lods
in
std
and
and
or
adc
clc
sbb
sbb
jp
ljmp
andb
stos
dec
xchg
and
jbe
xchg
pop
sub
xchg
movsb
dec
cmp
jbe
imul
sbb
out
in
xchg
xchg
mov
faddl
xor
in
mov
add
mov
js
mov
add
mov
mov
lds
in
or
push
pop
inc
loop
mov
out
xor
xlat
mov
in
test
or
push
es
xchg
push
out
lea
ret
cmp
sbb
add
mov
ficoml
xchg
xchg
xor
inc
dec
lcall
lods
in
sbb
mov
add
xchg
js
in
mov
enter
mov
xor
xlat
adc
fwait
daa
sbbb
or
xor
xchg
daa
add
imull
test
sahf
or
lods
leave
dec
jmp
sub
mov
sbb
or
dec
mov
cmp
aas
test
pop
or
mov
dec
jge
popa
mov
out
mov
adc
cwtl
stos
subb
aad
cmp
testb
shlb
lret
push
pusha
or
mov
not
arpl
iret
bound
mov
test
dec
call
xchg
pushf
sbb
stos
test
xchg
cmpsb
loope
cwtl
testl
sub
je
fmul
sbb
mov
aaa
scas
les
lds
and
fcoms
mov
daa
mov
mov
adc
cli
or
negb
xchg
dec
pop
addr16
mov
call
push
cli
movsb
add
fdivs
mov
and
pop
je
js
cli
shrl
xor
jbe
and
mov
adc
jne
daa
push
lcall
cmp
sub
loope
pop
sub
enter
sub
ljmp
mov
or
clc
sub
dec
sbb
mov
test
mov
mov
js
out
roll
test
sti
add
jmp
xchg
mov
add
mov
mov
mov
or
sub
jp
xchg
data16
mov
adc
out
mov
dec
mov
mov
out
sub
xchg
test
cmpsb
leave
mov
ret
xadd
fsubrs
pusha
pop
test
inc
dec
sbb
mov
dec
push
sbb
sub
lock
rolb
mov
xlat
shll
xor
fcmovu
rorl
fldenv
mov
push
call
enter
movb
es
in
mov
ja
loopne
imul
or
add
xchg
mov
daa
ljmp
sub
and
push
add
cmp
notb
and
xchg
aad
sub
xchg
inc
dec
fiaddl
js
cmp
pop
jmp
jge
xchg
pop
fmuls
sbb
jne
jge
sahf
xchg
imul
xchg
addr16
inc
sbb
aaa
dec
xchg
lods
jo
dec
pop
imul
or
pop
xlat
and
cmp
sbb
sbb
insb
or
mov
sub
sub
enter
test
jmp
dec
out
cld
stos
in
jae
in
pop
movb
sbb
push
or
xor
sbb
jl
orps
fbstp
push
mov
or
push
test
fdivr
jbe
xlat
adc
insb
clc
ficoml
mov
xor
pop
cmp
adc
out
inc
scas
je
divb
adc
dec
stc
xchg
fistpll
lds
test
jecxz
or
jbe
loope
xchg
cmp
mov
cmp
addr16
dec
xlat
shll
xor
shrl
bound
mov
pop
xchg
or
push
rclb
xchg
dec
mov
rcrb
lcall
push
sbb
xor
jae
shlb
aaa
sub
push
xor
cmpb
mov
mov
sbb
pop
jl
mov
sbb
jmp
mov
mov
sub
adc
and
xlat
out
dec
pop
notl
lret
mov
sub
mov
or
add
adc
xor
lahf
xchg
fnsave
in
or
pusha
jbe
lret
int
fimuls
inc
pop
xchg
or
std
arpl
rorl
xchg
mov
pop
mov
loop
or
mov
inc
mov
addr16
pop
imull
adc
dec
fs
rcr
lahf
or
in
sarl
cli
mov
sbb
aaa
pop
jl
pop
aad
sub
sub
sti
push
lods
shll
clc
leave
std
jmp
push
add
xchg
mov
sub
or
test
sub
mov
or
mov
pop
pushf
cmp
shl
lock
cwtl
test
cmpsl
clc
cmp
push
cltd
cmp
push
imull
lds
add
int3
adc
sub
or
mov
push
mov
xor
adc
mov
dec
xor
cmp
cmp
mov
lahf
iret
gs
aaa
mov
popf
enter
subl
addr16
adc
push
fs
cmc
dec
cmp
jmp
push
test
insb
loop
loope
cmp
popf
imul
add
outsl
xchg
movsb
sub
xchg
mov
xor
push
sbb
sbb
in
mov
or
idiv
pop
lcall
movsb
aaa
fcmovbe
dec
adc
inc
push
cmp
sub
outsb
ret
fldenv
in
pop
pop
jp
aaa
mov
and
les
sbb
inc
stos
aad
js
cmc
xchg
enter
xor
lcall
mov
ficompl
repz
pushf
dec
movb
mov
decb
pop
dec
int3
ret
sbb
or
mov
xchg
or
cmp
in
and
addr16
test
adc
jbe
imul
loope
in
js
lods
lahf
pop
mov
aaa
fdivrs
sbb
imul
movsb
test
push
jns
xor
adc
lret
push
dec
mov
out
std
cmp
cmc
imul
mov
js
or
pop
adc
xchg
mov
pop
cmp
jp
out
inc
orb
pop
or
xor
inc
ljmp
xchg
insl
add
negl
cmp
push
js
xlat
dec
xchg
xor
mov
mov
mov
pop
and
mov
dec
loope
test
or
add
in
mov
and
cmc
mov
or
mov
jg
and
mov
clc
insb
out
in
mov
adc
enter
cmpsb
or
inc
mov
mov
lea
push
je
xchg
sub
idivb
out
mov
jnp
or
enter
jb
fdivrl
mov
fs
test
dec
dec
mov
lret
dec
push
arpl
test
cmc
pop
sub
jne
je
divb
mov
add
in
pop
mov
ljmp
mov
outsl
mov
jbe
mov
fimuls
add
pop
pop
daa
stos
arpl
popa
xlat
jne
ficoms
cmp
jg
jp
aaa
inc
lds
fsubrl
mov
test
je
or
stc
inc
imul
test
je
or
lea
mov
sahf
jge
and
inc
idivl
lock
mov
sbb
mov
xor
lock
das
data16
push
adc
or
pop
sbb
sub
cli
sbb
xchg
bound
mov
aad
neg
icebp
out
sub
shlb
sub
sub
cmpb
xchg
xchg
mov
std
adc
xchg
js
sahf
lcall
fimull
test
xchg
rcrl
push
and
andb
sbb
fmuls
jbe
mov
dec
addr16
mov
adc
std
inc
lock
cmp
sbb
cmc
inc
js
mov
cwtl
inc
and
stos
and
cwtl
enter
testl
ds
xchg
xchg
fisttps
gs
test
cwtl
shr
sub
movsb
dec
mov
out
inc
xor
les
lret
outsb
ljmp
sub
sbb
lds
addr16
out
mul
loopne
push
loop
aaa
add
iret
xchg
mov
fadds
sbb
daa
mov
mov
xor
sbb
lds
or
leave
cltd
int
jmp
clc
daa
mov
xchg
fs
cli
out
icebp
jmp
imul
lea
stos
jecxz
fimull
stos
sub
adc
pop
jbe
out
or
inc
mov
popf
adc
lcall
flds
mov
out
insb
sub
arpl
dec
xchg
lds
sbb
hlt
mov
loop
jne
pop
ds
bound
je
out
fiaddl
mov
addr16
mov
mov
mov
mov
push
js
or
test
cmp
loop
daa
fstps
cmpsl
xor
adc
lods
mov
dec
push
cli
dec
inc
mov
aaa
add
dec
or
cwtl
pop
or
and
out
dec
imul
enter
pop
cmp
scas
fcmovnu
dec
mov
out
imul
lret
pushf
lcall
mov
cwtl
cmp
out
mov
leave
mov
mov
mov
lds
xchg
add
jno
cli
mov
mov
in
jbe,pt
adc
mov
cmp
inc
test
cmp
sbb
out
test
hlt
in
hlt
pop
test
jle
sub
cmp
cmp
ss
add
dec
stos
roll
push
jmp
jmp
cmp
xchg
cmp
or
push
js
rorb
or
adcl
out
popf
ss
sub
cmpsb
aaa
inc
dec
mov
sub
or
add
or
pop
push
sbb
fwait
pop
mov
pop
lcall
or
pop
lds
mov
shl
lea
sbb
pop
in
in
mov
xchg
and
lcall
imul
ljmp
sbb
push
adc
pop
lcall
jg
mov
pop
test
jbe
sub
sbb
mov
aad
pop
or
mov
test
fwait
mov
loopne
jmp
jmp
popf
sub
lds
mov
aad
lret
fisttpll
xchg
add
xchg
pop
sbb
add
in
in
scas
sbb
dec
shlb
or
sbb
jne
mov
cmp
addr16
jmp
mov
xlat
mov
pop
sbbl
test
out
ffreep
and
pop
aaa
call
aad
ljmp
pop
into
ret
push
inc
jecxz
lret
out
and
es
sahf
cmp
sub
push
out
stc
xor
neg
stc
repnz
push
or
xchg
push
xchg
mov
xorl
out
out
frstor
dec
in
dec
inc
jbe
daa
xchg
subl
mov
or
and
repnz
movsb
add
jns
mov
mov
xchg
sub
rorl
popf
or
jp
aad
adc
test
or
sbb
dec
sbb
and
mov
js
jl
fs
sub
adc
xchg
dec
sub
arpl
sbb
je
rcrl
xchg
mov
cmp
push
inc
call
add
cmp
mov
cli
repnz
or
dec
xchg
adc
testb
and
mov
out
mov
mov
xor
jp
cmp
movsb
cmp
mov
dec
xlat
add
js
xchg
xor
in
cli
cltd
div
or
aad
or
and
ljmp
mov
subl
pop
pop
push
ret
push
fisttpll
adc
dec
popa
in
add
sub
xor
out
je
sub
dec
stos
nop
iret
push
ljmp
xorb
add
or
and
jecxz
aad
sbb
fidivs
cmp
popf
in
stos
test
aad
ljmp
or
and
pusha
stc
leave
out
bound
lahf
xchg
div
xlat
sbb
insl
addl
jbe
cmpb
mov
pop
push
jmp
ljmp
aad
cmp
cmp
in
xchg
dec
add
or
cmc
cmp
cmp
clc
mov
push
xchg
jnp
dec
je
adc
jmp
adc
mov
push
enter
fs
aad
xor
lods
je
lds
movsb
add
push
stos
in
jne
mov
jp
mov
lcall
xor
pop
xchg
imul
cmpsl
aaa
std
xor
into
sub
outsb
icebp
sub
js
clc
pop
mov
out
dec
cwtl
sbb
mov
jne
test
add
and
lds
fcmovnu
cmp
pop
outsl
jl
mov
xlat
add
lret
inc
xchg
fiadds
pop
mov
fadds
xchg
push
insl
fcomip
mov
jbe
cmp
push
xchg
lcall
fisubrl
addr16
stc
mov
das
cwtl
jp
sbb
mov
clc
mov
cs
cmp
mov
pop
jne
and
mov
into
mov
cwtl
cli
stc
cmp
jp
cmovp
test
lret
clc
mov
mov
jne
stos
cld
lods
adcl
addr16
aas
adc
sub
or
xchg
sahf
test
cmc
pop
call
aad
stos
int
fldcw
popf
and
inc
adc
xchg
sub
pop
push
xlat
mov
cmc
orb
push
dec
movsb
or
mov
xor
jp
nop
adc
adc
shll
mov
stos
mov
fcoms
mov
in
out
sub
pop
or
cmpsl
xchg
leave
xchg
stc
xor
imul
movsl
and
dec
xor
lds
mov
imul
pop
stos
mov
in
dec
jmp
scas
lret
jp
stos
mov
notb
xchg
js
pop
mov
sub
addl
sub
xor
xchg
in
sbb
cmp
movsb
out
push
and
int
in
push
pop
in
mov
test
enter
add
cmpsb
dec
push
jp
xor
loopne
inc
mov
xchg
repnz
hlt
jle
pop
cmp
call
sub
enter
sbb
or
cli
sbb
mov
and
or
pop
sub
mov
mov
cmova
int
imull
lock
xchg
mov
mov
ret
sub
movsb
lret
popa
mov
push
inc
push
enter
xchg
mov
test
movsl
mov
lret
mov
pop
inc
mov
ss
xchg
hlt
sbb
lods
nop
js
xchg
imul
aas
mov
mov
adc
mov
lret
fadds
sub
xor
sbb
pop
mov
cmpsb
xchg
sub
push
xchg
jmp
out
xchg
sbb
rolb
pop
or
hlt
aad
test
xchg
cld
mov
mov
test
out
stos
pop
cmpsb
or
in
cltd
lret
push
jmp
dec
xchg
jmp
mov
loop
fisttpll
dec
inc
lea
pop
mov
and
js
push
out
test
mov
add
imul
mov
jae
aad
pop
stc
pusha
sub
dec
frstor
add
and
dec
js
cmc
enter
test
ljmp
mov
out
sbb
shl
xchg
cmp
jmp
sub
imul
mov
rclb
js
xor
or
cld
movsl
fwait
cmp
inc
in
xchg
cmp
arpl
in
lret
enter
jmp
adc
in
cwtl
aad
dec
adc
sub
ret
cmc
pop
pop
push
scas
test
mov
daa
adc
sbb
mov
xchg
sub
ss
mov
lock
test
clc
adc
enter
daa
ss
pop
add
lods
les
sub
fsubrp
out
dec
js
ret
mov
pusha
cmp
rorl
test
adc
xor
fadds
ret
aad
mov
dec
or
mov
xchg
sbb
xchg
inc
pop
or
mov
es
or
sbb
shll
inc
fdivl
in
push
push
mov
fistps
stc
push
dec
out
movb
sbb
aaa
in
cwtl
cltd
or
insl
add
sbb
jmp
cmp
daa
sub
cmpsl
or
es
jecxz
mov
or
push
or
pop
inc
mov
ret
cltd
fadd
xor
mov
mov
inc
sub
xor
cmp
or
adc
lahf
fnstenv
jecxz
sbb
aad
movsl
cmp
adc
cmp
lds
push
mov
out
hlt
test
inc
stos
aad
pop
add
sbb
test
adc
fadd
out
mov
enter
adc
addr16
and
hlt
aaa
hlt
out
dec
into
mov
into
outsb
das
mov
xor
movsb
mov
mov
adc
xchg
jp
jne
sub
stos
lcall
or
or
cmc
sti
jns
leave
test
icebp
fcomip
dec
loop
out
cmp
adc
sarb
push
neg
addr16
stos
xor
sbb
out
jo
cmpsb
cmp
push
inc
jb
mov
jbe
sbb
out
jo
shrb
ds
or
and
ljmp
sub
xor
addr16
xor
mov
aaa
mov
cmp
xabort
and
jg
hlt
cmc
jp
movsb
cmp
cmp
jne
xlat
out
jmp
movsl
xor
cmp
lods
sub
aaa
dec
imul
cmp
xchg
dec
test
divl
lods
cli
out
mov
jne
clc
xor
out
xchg
pop
jmp
xchg
mov
xchg
enter
xchg
cmp
jg
sub
test
test
mov
stos
mov
xchg
dec
or
pop
mov
insl
mov
cmp
addr16
push
fildll
cmc
adc
mov
ret
mov
pop
pop
faddl
xchg
xchg
push
xchg
test
cmc
daa
sub
bound
mov
lcall
mov
fmull
aam
sub
cmp
push
pop
mov
movsb
jbe
mov
pop
cmp
add
mov
addr16
adc
sbb
push
xor
jmp
adc
stos
cmp
dec
daa
sti
int
std
lods
pop
test
pop
loopne
push
cli
cwtl
dec
ficoml
add
subl
test
push
mov
sbb
insl
in
aas
iret
lret
adc
sbb
lcall
sub
test
pop
ret
or
xor
cmp
xor
ficompl
xchg
js
jne
ljmp
lcall
imul
pop
adc
addr16
inc
lock
and
fisubrl
movsb
push
negb
pop
out
cmpsb
xchg
mov
into
mov
fadds
or
mov
and
xchg
xchg
xlat
in
imul
dec
mov
sub
inc
dec
jecxz
addr16
dec
roll
ret
pop
enter
sub
imul
mov
andl
lcall
dec
hlt
mov
test
or
add
inc
daa
lcall
insb
leave
pop
fs
ljmp
mov
xchg
or
movsb
dec
fbld
in
mov
mov
sarl
mov
xor
test
and
push
mov
cmp
or
inc
test
clc
dec
push
add
add
pop
jmp
xchg
mov
shrl
cltd
cwtl
fidivrl
stos
ret
popf
xchg
add
pop
fnstenv
daa
std
and
in
sbb
mov
and
mov
xchg
cmp
roll
mov
push
test
movsl
ret
add
fidivrl
js
addl
or
mov
lea
xor
push
insb
inc
cmc
fisubl
sub
xchg
aad
ss
inc
sbb
sbb
popa
and
sub
popa
shrl
fisubrl
or
mov
in
pop
lds
jbe
aas
jmp
out
xchg
and
ljmp
adc
dec
mov
push
das
shl
loope
add
xchg
leave
mov
jge
sbb
pop
lea
dec
test
or
and
subb
cltd
dec
jp
or
movsl
loopne
sbb
loopne
and
xchg
push
and
mov
mov
sub
cmp
adc
mov
stos
dec
dec
fxch
fidivl
push
dec
sbb
xchg
out
mov
pop
xchg
xchg
addr16
aas
sub
neg
roll
shll
addl
call
xchg
in
test
ljmp
lret
stos
cmp
ds
fcmovu
mov
add
mov
push
test
pushf
popf
jmp
loopne
fnstsw
xchg
mov
mov
jp
or
clc
xchg
cmc
add
stos
add
mov
sub
mov
js
mov
cli
or
pop
cltd
xor
add
cmp
dec
test
cmp
jp
sub
push
lahf
inc
xchg
std
cmp
ljmp
pop
mov
mov
ret
sbb
or
cli
shl
xchg
out
aaa
std
xchg
xor
sub
sarb
xchg
scas
sbb
stc
out
xchg
test
ret
je
in
fnstenv
in
and
push
dec
jmp
cmp
xchg
scas
pop
into
add
sub
or
hlt
int
imul
imulb
inc
and
inc
sub
xor
out
jb
push
addr16
mov
xor
mov
aas
rorb
mov
cmp
pop
dec
cmp
ret
aaa
mov
adc
lret
adc
lcall
xchg
xchg
adc
dec
push
inc
cmc
xor
in
adc
mov
cmpb
out
aaa
call
mov
lret
mov
cmp
in
or
mov
stc
mov
outsl
mov
ljmp
jbe
xchg
sbb
pop
imul
cwtl
cmp
mov
imul
adc
daa
ja
cli
popa
vcvtsi2sdl
dec
mov
iret
js
cmp
aad
cmpb
clc
aaa
xor
inc
mov
xlat
pop
sbb
mov
xchg
cmp
cmp
or
xor
fmul
leave
sub
lods
out
mov
xlat
aaa
cwtl
sbb
enter
mov
fcom
sbb
in
pop
incl
sub
sub
jp
loope
dec
fmuls
mov
or
shl
cmp
push
movsb
pop
or
and
sbb
xchg
test
in
mov
dec
inc
sbb
stos
aad
insl
xchg
or
ss
dec
jl
repz
sbb
out
mov
or
imul
sub
fildl
xor
dec
imull
test
dec
mov
sbb
shlb
mov
pop
or
mov
mov
xchg
mov
ljmp
sub
jmp
js
xchg
fdivs
insb
fldt
movsl
cli
pop
addr16
out
pop
mov
out
mov
data16
pop
lret
fldenv
sti
flds
test
cwtl
aas
mov
mov
cmp
mov
dec
pop
test
adc
addr16
push
movsl
hlt
cmp
aam
rcrb
mov
clc
jmp
xchg
push
jge
xor
fldenv
or
fstl
rcll
imul
inc
idivl
sub
pushf
push
gs
add
xchg
adc
pop
int3
int
enter
or
pop
push
mov
clc
rcrl
sbb
adc
imul
sub
push
adc
sub
jne
stos
xor
cmp
xchg
mov
ret
pop
cmc
mov
and
push
arpl
mov
out
sbb
aaa
cmp
xlat
mov
in
push
xor
test
pop
xor
or
ds
jmp
sbb
inc
xchg
out
stos
fwait
int3
xorl
out
cmp
in
cwtl
xchg
lea
in
push
mov
mov
jbe
mov
ljmp
addr16
xchg
int3
xchg
mov
loopne
scas
xor
mov
movl
daa
imul
fisubrl
out
or
out
sbb
sbb
jmp
push
or
pop
xor
clc
js
je
and
cmp
or
iret
lret
pop
inc
or
fisubl
cmp
mov
stc
pop
aad
leave
and
dec
je
jbe
popf
cmpsl
push
pop
push
or
lahf
in
shll
or
or
push
je
xchg
jl
mov
loope
sbb
push
sti
js
sub
adc
fs
pop
jne
or
insl
pop
mov
cwtl
leave
jns
out
mov
imul
sbb
pop
es
hlt
out
xor
js
outsl
cmp
cmp
push
dec
lds
daa
stos
sub
xchg
cli
xchg
pop
jo
jg
in
ret
dec
dec
or
and
pop
add
lods
push
or
sbb
mov
dec
enter
xor
repnz
les
dec
jg
or
dec
add
ret
adc
adcb
daa
fiadds
push
call
in
test
pop
jmp
lods
in
not
or
fiadds
movsl
cwtl
setae
xchg
mov
lds
sub
cmc
sbb
enter
dec
jno
in
test
fnstenv
push
mov
xchg
mov
or
fsubrl
fadd
into
sub
pop
rorb
cmp
scas
inc
out
sub
adc
xchg
jb
cmpl
pop
in
ljmp
icebp
mov
xor
jp
negb
into
sbb
pop
popf
push
pop
xchg
cmp
sub
test
inc
aad
inc
enter
mov
cmp
xchg
dec
inc
sub
adc
in
adc
jecxz
xchg
lcall
out
mov
inc
rcrl
sahf
cmp
insl
pop
roll
imul
sub
mov
push
cmp
and
xor
mov
into
push
out
xchg
sub
cmpsb
enter
in
cmp
repz
push
xor
lds
or
cmc
mov
rcrb
and
cwtl
roll
mov
xchg
aas
sbb
lcall
dec
stc
or
lcall
imull
shlb
popf
dec
lcall
push
mov
loope
in
call
aad
ret
dec
adc
add
lret
imul
filds
sbb
cmp
pop
xchg
fsubp
ret
mov
in
or
adc
daa
stc
fcmovnbe
fimull
mov
in
mov
popf
pop
out
sahf
test
repnz
fnstsw
int
stc
dec
or
or
cwtl
js
insl
lods
inc
sub
xchg
je
in
movsb
rorl
stos
ret
lcall
dec
mov
add
xchg
fwait
mov
js
fisttps
cmc
xlat
daa
pop
data16
aaa
xchg
mov
mov
test
jecxz
push
icebp
sub
pop
add
dec
mov
jecxz
fcoms
xchg
adc
fdivp
add
or
in
lcall
dec
xor
sbb
xchg
iret
js
out
xchg
xchg
in
out
cmp
xchg
orb
mov
test
add
xchg
sbb
or
xchg
jge
pop
dec
mov
dec
cmp
pop
aam
xchg
sub
fwait
xchg
jp
insl
push
dec
pop
popl
lcall
clc
mov
xor
lret
add
vmovss
mov
lods
adc
in
inc
cli
add
dec
jp
hlt
xlat
clc
mov
xchg
mov
or
sub
cwtl
cmp
lcall
lret
mov
cwtl
int3
jecxz
fnstsw
mov
fidivs
fwait
adc
sbb
cmp
cmp
lods
pop
in
pop
pop
jp
test
lcall
pop
and
push
test
pop
xchg
or
cmp
xchg
je
sub
les
dec
inc
jp
or
jmp
add
lret
jne
mov
and
jno
sub
popf
int
out
mov
loope
mov
and
mov
jne
in
cmp
or
lcall
or
addr16
rcll
pop
fstps
stos
xor
mov
sbb
or
dec
jge
xor
jg
mov
lret
xchg
mov
sbb
xor
push
add
test
daa
xlat
scas
ficoms
daa
sub
stos
mov
clc
cmp
add
pop
lcall
lcall
pop
and
pop
add
inc
ret
push
cs
or
mov
xchg
push
sbb
cmc
sub
in
or
lock
dec
int3
mov
pop
mov
in
inc
stc
sbb
or
shrl
addr16
push
push
mov
ljmp
add
stos
pop
mov
int3
xor
jmp
xor
iret
popf
push
and
lea
dec
cmp
movsl
sbb
rcrb
sub
xor
add
inc
dec
cmc
out
lcall
cltd
ret
addr16
daa
pop
dec
cltd
ja
xchg
xchg
dec
push
lret
in
mov
jmp
jl
lea
mov
pop
inc
lret
les
inc
xchg
adc
xlat
mov
mov
jb
lea
lcall
mov
push
cmp
push
push
popa
dec
cmp
or
sub
js
aaa
push
adc
fisubl
stos
mov
stos
xor
ljmp
mov
enter
cmp
test
stos
pop
lds
jbe
xchg
xchg
xor
lret
jp
testb
mov
or
mov
idivb
mov
fadds
gs
mov
xchg
fs
test
loope
sbb
in
and
pop
xchg
je
xchg
push
out
dec
xchg
mov
and
in
insl
enter
push
inc
rcr
pop
push
mov
mov
les
out
push
enter
test
cwtl
fidivrl
cmc
pop
sbb
addr16
cmp
movsl
hlt
xor
mov
ret
mov
out
cmp
and
or
mov
and
fmul
xchg
mov
aaa
push
dec
gs
in
leave
xchg
lcall
daa
sub
jp
insb
addr16
and
cmp
inc
out
fwait
es
aaa
mov
lret
pop
push
and
mov
xor
mov
js
xor
sub
pop
notl
mov
cmp
outsl
cltd
aas
lcall
mov
gs
out
push
cli
fldl
dec
push
fwait
xlat
push
inc
xchg
pop
aad
or
xchg
fsubrs
mov
iret
jmp
mov
icebp
mov
nop
movsl
aas
fdivl
pop
or
in
or
addr16
shll
or
aaa
icebp
fildl
test
or
xchg
ror
add
or
mov
ljmp
enter
jge
fcoms
mov
cwtl
imul
add
mov
and
out
std
lret
mov
cmpsb
xor
shr
cmp
mov
mov
xchg
dec
xor
cmp
movsb
and
hlt
aad
dec
out
test
jle
je
lods
stc
or
fisubs
jns
mov
adc
stos
stos
xor
adc
sbb
fsts
xor
out
movsl
ss
hlt
sbb
in
or
aad
mov
pop
or
pop
xor
dec
movsl
fstl
cmp
std
dec
gs
gs
jno
clc
es
andl
les
shrl
cmp
loopne
xor
loope
jbe
out
xor
push
mulb
and
sti
add
lds
sub
and
stc
xchg
xor
jae
mov
je
push
jg
add
adc
divb
loope
lcall
xchg
pop
lcall
adc
cmpsl
inc
inc
ss
mov
xchg
mov
add
inc
lcall
xchg
mov
mov
cmc
shll
fiadds
or
dec
xchg
dec
cmc
sbb
adc
jl
mov
decl
je
cmc
xchg
xor
or
mov
sbb
test
in
jg
lcall
mov
push
aad
xor
out
stos
out
push
pop
dec
mov
je
out
enter
xlat
jp
adc
addr16
fnstcw
loopne
or
ja
adc
pop
mov
jne
or
pusha
ret
imul
test
sub
cmc
in
mov
enter
shll
ljmp
insb
or
cmp
clc
movsb
es
dec
lcall
dec
push
add
xor
out
test
or
dec
mov
adc
cwtl
cwtl
xchg
or
sub
mov
fimull
out
into
dec
jno
scas
ret
lret
pop
mov
adc
pop
mov
filds
adc
push
or
divb
cwtl
aad
xchg
add
in
inc
xorb
cmpsl
mov
pop
cmp
push
aam
and
and
rolb
lods
cli
adc
divl
ficompl
std
xlat
push
inc
rcl
cmp
stos
mov
mov
ret
sarb
jmp
jne
sbb
movsb
testb
xlat
idivl
sbb
in
xchg
mov
sub
jns
lds
pop
sbb
imul
cmp
in
ljmp
sbb
imull
lds
push
ljmp
jp
pop
jbe
mov
imul
shl
mov
xchg
inc
mov
pop
fmuls
or
loop
bound
ret
aaa
out
aam
hlt
xchg
jb
mov
in
pusha
jp
fwait
in
stos
rorl
imull
or
sbb
xlat
bndldx
pop
or
jae
lds
cwtl
out
lahf
lods
sahf
cmp
sbb
push
xor
imul
dec
mov
in
add
test
or
adc
scas
daa
divb
mov
xor
cli
out
test
aaa
scas
dec
push
mov
mov
out
loop
cmpsb
js
xchg
je
xor
popf
shlb
scas
mov
int
cmp
xchg
cmp
cmp
jmp
lea
testl
das
xchg
xor
cmpsl
imul
fldcw
cmp
cmpsb
cld
leave
add
test
mull
cli
xlat
ljmp
hlt
xor
ret
jp
adc
xchg
in
push
xchg
in
cwtl
loopne
in
xchg
mov
mov
xchg
imul
std
test
mov
sub
jmp
xor
daa
mov
mov
mov
mov
mov
ljmp
inc
jge
in
fdivrs
jmp
push
sub
add
or
repnz
mov
in
ficompl
sbb
inc
mov
sub
inc
out
lret
adc
cmp
cmp
lret
fmul
cmpsb
fnstenv
lods
xchg
jbe
call
xlat
jg
mov
pop
push
cmp
lcall
test
add
cmp
sarl
add
xlat
xor
sub
daa
or
rcll
cmp
ljmp
shr
mov
pop
insl
ret
bound
pop
mov
xor
jbe
js
cmp
imul
inc
lds
and
mov
adc
push
push
enter
xchg
cwtl
mulb
or
ljmp
pop
or
test
inc
daa
mov
leave
mov
or
dec
xchg
push
sbb
inc
mov
cmp
cwtl
int3
cltd
xor
xor
cmp
test
ret
mov
mov
pop
in
rcrb
or
repz
adc
test
cmp
lods
and
lods
arpl
xchg
shr
lcall
sbb
loopne
jp
mov
lahf
pop
leave
shll
sti
sbb
outsl
or
cmp
clc
movsl
jge
enter
out
mov
sub
xchg
icebp
mov
imul
jo
call
out
out
out
stc
dec
mov
lcall
inc
xchg
fnsave
cwtd
inc
test
xchg
xor
and
dec
sub
inc
add
mov
mov
xchg
adc
xlat
adc
push
cli
iret
lret
jmp
sub
add
sbb
or
xor
stos
mov
sub
shr
scas
sahf
movsl
dec
flds
push
ljmp
sbb
icebp
andb
loopne
outsl
push
aad
adc
call
out
mov
pop
dec
push
push
mov
pop
aad
shlb
int3
cmp
cmpsb
sahf
jbe
mov
fdivrs
mov
inc
fiaddl
push
sbb
jbe
imul
mov
mov
cmp
idivl
lock
jbe
sub
ss
out
mov
xchg
lcall
pop
sub
fdiv
pop
enter
imul
mov
in
mov
popf
xlat
xor
ljmp
mov
jbe
imul
cltd
out
pop
add
push
in
dec
idivb
hlt
xchg
je
mov
dec
stc
call
out
and
insb
leave
fcomps
or
lret
mov
xor
addl
and
xor
cmp
mov
xlat
insb
xchg
sub
pop
cmc
lea
ficompl
push
pop
inc
mov
add
mov
shll
decl
pop
adc
lret
and
jp
adc
add
add
lret
pop
int3
push
sarl
sub
inc
mov
iret
xor
dec
cmpsb
xchg
mov
dec
xchg
les
scas
ja
cmp
call
sub
or
movsb
sar
aas
and
push
cs
pop
sbb
adc
push
mov
mov
pop
cmpsb
lds
ss
xor
test
subl
xchg
sbb
adc
sbb
sub
call
scas
cmp
mov
fisubrl
mov
iret
pop
sbb
sbb
xorb
or
cmp
imull
push
pop
push
cli
mov
out
dec
stos
cmpsb
jp
push
cmp
notl
cwtl
xchg
out
fsubp
push
xchg
push
push
negb
cmpl
add
xchg
mov
or
dec
lcall
loope
lret
in
in
in
orb
lods
arpl
xchg
pop
jne
mov
js
fcmovb
xchg
std
pop
aad
adc
sub
test
scas
ret
shll
inc
mov
or
lahf
inc
mov
cmp
sub
int
cltd
xchg
cwtl
push
fiaddl
lds
test
push
fadds
dec
hlt
dec
xlat
xor
into
xchg
sub
dec
in
shl
push
clc
mov
xchg
dec
lods
shrl
xchg
jmp
xor
icebp
enter
or
xchg
dec
or
and
and
xchg
jns
mov
xor
jne
div
adc
or
or
mov
rolb
ss
aas
mov
enter
pop
jp
cmp
pop
inc
adc
imul
test
pop
cmpb
pop
cmpl
jge
outsb
lea
addr16
jne
cmpsl
mov
pop
jmp
adc
popf
jge
lahf
xchg
or
pop
pop
and
or
inc
or
and
arpl
xchg
pop
xchg
mov
or
lods
sbb
es
push
inc
gs
sub
shrb
pop
js
es
cmp
mov
js
add
or
pop
or
lea
into
es
cmp
cmp
jge
out
icebp
call
fimuls
and
in
lock
mov
sbb
insl
loope
notb
lea
aad
sbb
cmp
or
pop
xchg
ret
enter
jmp
jp
lret
and
call
stos
testl
fisubl
mov
cli
in
enter
dec
dec
cmp
nop
lcall
jbe
mov
aad
jl
xlat
or
addr16
leave
fisttpl
imul
sub
std
sti
or
inc
jp
push
dec
mov
and
adc
sub
mov
mov
cmpsb
or
push
in
leave
push
dec
je
divl
jl
je
cmpsl
xor
fwait
lret
xchg
pop
inc
xor
mov
cwtl
add
push
dec
lcall
std
dec
mov
sbbl
pop
xchg
xor
inc
test
xor
push
in
cwtl
pop
cmpsl
lret
ljmp
or
mov
add
cld
ret
push
in
xor
dec
fidivl
stos
pop
leave
divl
mov
xlat
inc
sub
mov
adc
xchg
enter
shlb
rcl
rcl
out
pop
dec
loope
mov
add
cmp
movsl
sub
icebp
aaa
pop
fimull
pop
adc
xor
lret
inc
mov
out
xor
in
xor
adc
pop
es
jb
cmp
mov
xlat
xchg
xchg
jp
mov
popf
dec
or
mov
daa
fsubl
mov
add
inc
movsb
js
aad
stos
lds
sbb
xlat
and
stc
mov
imul
hlt
ficoml
std
push
test
fdivl
add
dec
jbe
lret
in
idiv
aad
sti
daa
fsubrs
xlat
xchg
xchg
mov
std
mov
push
in
sahf
mov
jmp
jmp
xlat
sbb
dec
jno
fcompp
mov
push
jp
pop
sub
stos
ds
xor
lret
movsb
add
shr
or
leave
fs
xchg
xchg
mov
mul
js
hlt
xchg
xchg
shl
cltd
jecxz
sbb
mov
xchg
push
xchg
or
lahf
jp
push
fstpl
outsl
pop
aaa
test
call
mov
std
mov
fidivl
movsb
or
pop
xlat
fsub
scas
xor
aaa
xchg
jl
rcrl
ljmp
cli
in
adc
nop
xchg
lea
xchg
negl
movsb
or
and
mov
lods
cmc
sti
clc
mov
xchg
fadds
sub
mov
addr16
mov
sub
adc
xchg
das
push
je
movl
out
imul
out
cltd
loopne
lods
lret
clc
out
push
out
xlat
jecxz
imul
outsl
aad
outsb
pop
and
inc
sbb
inc
imul
movsb
mov
sub
mov
mov
in
inc
add
aas
std
and
mov
addr16
cmc
test
jbe
and
imulb
rorl
xor
cli
cmc
or
in
mov
aad
movsl
dec
in
test
xlat
add
fcoms
or
add
xor
out
call
or
jp
in
mov
xchg
push
aaa
in
stos
lea
scas
or
dec
cmpsb
stos
ret
stc
movsb
fsubs
xlat
or
sbb
clc
cmp
ljmp
mov
sub
aad
rorl
daa
test
lods
push
test
enter
out
cmc
xchg
xchg
cmpsb
mov
je
mov
xchg
sub
adc
sub
mov
out
pop
push
in
pop
stc
sti
xchg
int
inc
addr16
mov
push
xor
cmc
ljmp
cmc
lret
push
roll
pop
cmp
loope
pop
lcall
ja
int
popf
mov
dec
xchg
out
add
sub
subl
popf
sub
jno
idivb
xlat
mov
enter
or
xchg
mov
mov
xor
sahf
or
dec
lcall
jp
std
xchg
fmuls
push
ret
cwtl
sub
sbb
idivl
mov
flds
stc
push
cmp
ret
cmp
ret
xor
in
shl
dec
mov
lret
lock
push
xchg
xchg
sub
sbb
mov
cmp
mov
pop
neg
lods
aaa
lea
cmp
imul
addr16
dec
cwtl
jmp
xchg
push
dec
mov
stc
mov
cmc
lret
movsb
in
xor
adc
xorb
push
xchg
enter
imul
mov
in
in
sbb
pop
xchg
js
or
dec
loope
out
imul
xlat
fwait
push
xchg
or
pop
inc
loope
xor
repnz
in
jp
arpl
mov
pop
out
jbe
add
dec
aaa
shrl
sub
cmpsl
sub
stos
adc
imul
orb
push
mov
pop
cmp
lret
mov
lcall
xor
daa
mov
ljmp
sbb
sub
xchg
sbb
xor
cmp
jmp
shl
jnp
in
and
cmp
rcr
fnstsw
adcb
mov
pop
sbb
and
and
mov
cmp
mov
dec
cmp
adc
sarl
cltd
stc
aaa
test
test
cmc
ljmp
mov
lret
mov
dec
mov
lret
mov
mov
scas
inc
aam
dec
ret
dec
sub
lahf
inc
jmp
lret
jbe
rolb
jg
pop
stos
insl
mov
lcall
addr16
std
cmc
test
xchg
ljmp
mov
stos
add
lds
pop
dec
enter
mov
or
enter
sub
fisttpll
mov
cltd
inc
or
pop
call
or
pop
ljmp
xor
imul
icebp
fcom
daa
xchg
push
pop
add
mov
inc
lcall
test
or
movl
mov
rcrl
cmp
pop
imul
sub
rorb
sti
mov
fstl
sub
test
dec
daa
fisubrl
fdiv
sub
mov
mov
testl
mov
fsubs
adc
sti
pop
xor
cwtl
test
dec
lret
mov
push
insl
insl
xchg
xor
lds
jmp
or
test
enter
js
imul
out
pop
lret
ficompl
fisubrs
push
cmp
sbb
bound
call
call
pop
faddl
pop
dec
loopne
in
sub
pop
dec
fmull
jbe
ret
or
hlt
add
cmpsl
cmc
xchg
push
cmp
stos
cmpsb
or
imul
add
pop
bound
repnz
add
repnz
negl
rol
jo
fsubr
in
lcall
push
iret
stos
mov
pop
jmp
je
dec
dec
in
sub
fs
or
pop
jl
dec
pop
ljmp
cwtl
outsl
call
jne
scas
sbb
repnz
dec
addr16
push
pop
adc
sti
rorb
adc
fdivrl
sbb
xchg
repnz
shrb
and
push
in
mov
jnp
into
lret
enter
pop
jmp
rclb
pushf
stos
imul
imul
jns
das
pop
push
dec
push
dec
sbb
clc
or
adc
dec
fistps
jmp
sub
imul
jmp
dec
shl
sub
repnz
sub
lods
insl
ljmp
dec
or
repnz
cli
inc
jnp
jp
cmp
cwtl
ljmp
dec
mov
aaa
lds
scas
dec
arpl
dec
loopne
call
mov
push
lds
loopne
mov
pop
dec
ds
cmpsl
outsb
clc
lds
lret
dec
insb
sub
fdivrs
jge
cmp
jle
hlt
sub
pop
inc
sbb
sbb
sub
xor
sbb
and
sub
adc
sub
cwtl
jp
adc
push
in
xor
clc
cmc
sbb
sbb
mov
out
or
sub
mov
cli
jno
stos
sbb
cmpl
sbb
mov
daa
cmc
dec
cmp
call
xor
nop
out
xchg
inc
sbb
out
jbe
sub
call
mov
sub
jmp
cwtl
push
jbe
sbb
int
sbb
pop
loop
jne
sub
mov
test
xchg
sub
adc
mov
stos
sbb
xor
push
or
xchg
test
idivl
jno
mov
or
imul
adc
popl
or
sub
sbb
mulb
sub
pop
and
xlat
lret
test
imul
ds
cltd
sar
xchg
fiaddl
ljmp
dec
push
mov
mov
dec
shll
xchg
inc
enter
int3
mov
jb
cmpsb
in
xor
and
mov
mull
call
dec
testb
xchg
pop
mov
pop
xchg
dec
ficompl
stos
xchg
insl
sbb
xchg
dec
insl
in
clc
cwtl
test
xchg
inc
adc
ficompl
xlat
dec
jecxz
imull
jge
jne
pop
imul
cmp
call
test
sbb
sbbb
push
adc
mov
mov
ret
lret
movsl
ret
pop
mov
xchg
inc
int
outsb
std
ss
dec
cmp
mov
cmp
pop
cmp
pop
cs
bound
or
jo
cltd
and
inc
inc
idiv
or
adc
aad
pop
outsb
mov
xor
adc
add
inc
notb
sbb
hlt
push
push
outsb
enter
mov
jmp
mov
scas
mov
lcall
sub
fistl
and
into
jg
stos
pop
fmull
out
jmp
out
xor
inc
cs
cmp
pop
add
loope
pop
stos
sti
sub
push
dec
push
or
or
js
mov
cwtl
xorl
jnp
data16
into
lock
shrb
adc
in
dec
mov
mov
or
lret
mov
mov
js
lret
into
fstpl
sub
dec
sub
mov
inc
or
pop
sarl
test
and
arpl
sub
in
cmp
cld
adc
f2xm1
sub
sub
adc
mov
in
inc
in
stos
inc
sub
int3
test
in
fadd
dec
jbe
cmp
out
cmp
mov
daa
xchg
ljmp
xchg
xchg
or
call
sbb
mov
cmp
aad
imul
cmp
push
sbb
jnp
mov
xchg
divb
sbb
and
mov
or
aaa
pop
jmp
in
ljmp
idivb
pop
out
lcall
sbb
push
pop
scas
loopne
mov
popf
subb
out
pop
hlt
outsb
xlat
mov
call
sub
ljmp
idiv
lcall
out
dec
loope
inc
xor
ljmp
dec
test
in
in
fldt
push
dec
ljmp
sub
xor
add
push
sbb
jp
repz
icebp
and
sub
fisttpll
or
inc
sbb
sbb
push
pop
xchg
in
xchg
cli
push
fdivrs
call
cmp
sub
mov
sub
xor
xor
ljmp
sub
jbe
cmc
inc
mov
insb
mov
sarl
fadds
jp
sbb
test
xchg
and
aad
dec
inc
lret
sbb
dec
divl
cmp
cwtl
mov
dec
js
icebp
cmp
push
rcll
push
out
or
and
dec
imul
ds
outsb
pop
push
xchg
andb
fmuls
movsl
ljmp
or
aad
dec
call
nop
xchg
movsb
daa
mov
inc
je
adcb
pop
cwtl
dec
mov
mov
pop
mov
pop
stos
in
or
jbe
dec
xor
stos
cmp
shlb
add
inc
pop
mov
daa
mov
loopew
test
mov
imul
pop
stc
addl
in
aaa
pop
loope
sbb
lea
lds
pop
out
subl
cmp
divb
cmc
mov
dec
and
xchg
or
jp
and
push
clc
lds
push
adc
mov
lret
sub
clc
testb
push
out
insl
xor
sbb
and
add
xor
dec
sub
clc
cli
lahf
fadds
pop
push
ljmp
pop
or
xchg
push
enter
cmc
cwtl
sub
sub
stos
mov
icebp
add
popa
mov
lods
lcall
js
and
dec
call
sbb
cltd
ret
lds
jns
push
fisubl
movsb
aaa
xchg
inc
add
imul
xor
clc
movsb
jnp
add
clc
pop
cmp
xor
not
xorl
jno
clc
xchg
mov
shrb
push
mov
arpl
jmp
fadds
daa
mov
int3
xor
and
push
or
push
mov
lcall
xchg
mov
ljmp
xchg
push
xchg
push
mov
and
cwtl
mov
in
pop
ja
sub
pop
lds
or
in
jbe
fiaddl
lds
sub
dec
adc
pop
push
inc
xchg
inc
xor
sub
xor
in
repz
push
push
dec
mov
jo
movsb
cmp
in
lret
fildll
fcomip
xchg
pop
lcall
call
jp
in
push
sti
dec
ss
les
adc
ljmp
push
ficoml
sub
insb
and
xchg
lcall
fidivl
mov
mov
arpl
test
push
in
dec
add
fidivrs
cs
or
or
dec
iret
adcb
popf
mov
push
mov
imul
ljmp
sbb
cltd
xor
or
ja
inc
js
xchg
test
push
aad
xor
stos
and
div
clc
xor
jns
sbb
adc
mov
pop
or
pop
popf
out
add
mov
add
dec
enter
mov
mov
outsb
pop
xchg
movsb
fidivrl
dec
xchg
mov
push
flds
push
adc
mov
lea
addr16
or
and
fcoms
and
pop
lods
out
sub
xchg
xchg
test
cmc
das
fucomip
std
jbe
sbb
bound
addr16
in
xor
mov
mov
cli
inc
mov
mov
dec
cwtl
cmc
xor
ret
mov
pop
cmc
rorl
push
and
sbb
xchg
sbb
add
movsb
insl
adc
test
fidivl
pop
pop
mov
or
scas
mov
xchg
enter
mov
xor
dec
mov
test
ficompl
stos
adcl
addr16
mov
mov
daa
mov
lret
mov
fimuls
cmc
mov
pop
leave
fdiv
repnz
std
xchg
or
mov
mov
sbb
mov
and
idivl
xor
mov
fninit
in
dec
xchg
inc
fisubrl
subl
cwtl
sub
hlt
lcall
xor
aaa
sbb
popl
sbb
pop
cmp
jbe
jmp
xchg
push
mov
out
int
lock
mov
loope
mov
call
inc
mov
addr16
jp
testb
in
and
mov
je
mov
testb
dec
pop
pop
sbb
imul
lcall
cmp
jmp
aad
dec
cmp
xor
or
xchg
addr16
cmp
xor
or
dec
xchg
cmc
mov
sub
add
es
dec
das
adc
movb
imul
jmp
inc
and
mov
hlt
test
dec
lcall
aas
in
into
adc
clc
lods
xchg
or
test
sub
mov
call
mov
sbb
insl
xor
cwtl
cmc
cmpsb
out
or
pop
inc
lcall
orb
or
es
cmp
in
xchg
popa
imulb
xchg
popf
cmc
pop
mov
ja
iret
addr16
and
inc
mov
xchg
cmp
sbb
and
in
out
xchg
mov
xchg
or
ret
mov
sub
and
insl
sub
dec
jb
mov
mov
and
xchg
daa
movsb
pop
in
cmc
mov
loopne
ret
xchg
sub
aad
js
sbb
mov
lret
dec
cmp
sbb
lds
inc
call
pop
pop
test
shl
ljmp
dec
imulb
xlat
dec
popa
sbb
cmpsb
rcll
xchg
and
in
dec
cltd
jo
lret
adc
cmp
or
in
mov
add
push
js
dec
sti
sbb
mov
push
stos
add
ljmp
daa
cmc
mov
es
roll
js
or
out
sbbl
adc
inc
call
in
pop
pop
xchg
push
xchg
xchg
addr16
std
pop
in
adc
cmp
adc
out
test
enter
dec
cmp
cwtl
cmpsl
test
xorl
inc
add
adc
and
and
test
and
push
push
aas
xor
sbb
xchg
in
adc
call
mov
aaa
sbb
or
mov
leave
clc
fldpi
add
inc
push
sub
jbe
jle
rolb
ret
or
xchg
mov
data16
mov
lcall
pop
xor
mov
ljmp
cmp
mov
cld
push
mov
mov
mul
out
adc
jno
call
pop
pop
xchg
arpl
clc
loope
divb
test
dec
cli
aad
fstpl
cwtl
lds
in
cmp
sbbl
mov
mov
push
adc
xchg
sbb
dec
or
and
pop
dec
movsb
jecxz
pop
xchg
or
test
loope
jp
in
enter
xlat
push
xchg
and
and
sub
inc
testb
lret
call
dec
add
xor
not
cwtl
sbbb
cmp
lcall
mov
dec
or
sbb
sbb
fsubrs
sbb
mov
addr16
test
sbbl
xchg
xor
aaa
jle
mov
sub
int3
in
popa
inc
lcall
push
jge
jp
xor
pushf
movsl
test
ljmp
test
jge
shlb
pushf
xchg
es
movsb
add
mov
imul
cmp
mov
inc
fdivs
and
xor
sbb
adc
jbe
or
xorl
jnp
jb
push
mov
inc
mov
sub
or
sbb
xor
push
mov
clc
fcoml
mov
jo
xchg
push
popf
pusha
jbe
and
xor
sbb
fdivs
sub
mov
xchg
xor
aad
adc
sbb
shlb
cmp
andl
out
inc
or
mov
pop
add
daa
adc
mov
adcb
mov
imul
int
xchg
in
stos
sbb
in
cmpsb
pop
out
sub
mov
fldt
mov
cmp
cmp
xchg
or
sbb
nop
aaa
out
ret
push
lret
je
cli
icebp
mov
cmp
xchg
cmc
sti
cwtl
and
stos
into
xchg
loopne
sub
pop
fisubl
enter
mov
bound
cmp
jns
imul
pop
sub
ljmp
out
cmc
cmpsl
xchg
loope
cmc
jbe
xchg
test
lcall
jl
sbb
push
into
mov
xchg
loop
xor
out
adc
mov
divb
sbb
lods
or
mov
inc
cmp
mov
jl
xchg
ss
or
sbb
shll
pop
pop
jne
xlat
aaa
aad
dec
je
js
sbb
jbe
jg
sbb
in
xchg
xchg
xchg
mov
sub
mov
cmp
test
xor
pop
mov
xlat
xchg
daa
or
adc
loopne
xchg
or
add
sbb
mov
sti
adc
dec
cmpb
jp
outsl
std
adc
add
adc
xchg
xchg
push
out
cmp
dec
cltd
xor
mov
push
jp
cmc
sub
add
ret
or
xchg
or
in
dec
cmp
add
push
xchg
xchg
inc
sub
sbb
lds
sbb
mov
aaa
lcall
jp
hlt
pop
or
bound
xchg
in
pushf
add
aaa
push
xchg
inc
cmpsb
fwait
sahf
adc
loope,pt
inc
cmpsb
rcll
xchg
jo
cmp
dec
ficompl
add
jmp
sub
imul
aad
sbbl
adc
enter
lret
call
imull
mov
ficoml
and
mov
mov
mov
push
aas
xor
or
movsl
sub
xchg
lods
push
xor
lcall
push
pop
adc
imull
push
pop
lret
clc
push
lods
ret
or
xchg
xchg
dec
or
xlat
pop
cld
and
loope
aad
sbb
iret
rcrb
mov
mov
sub
add
sbb
aaa
mov
cmp
mov
imul
pusha
enter
pusha
xchg
cmpsb
sbbl
and
jbe
movsb
cmc
or
jmp
sub
add
hlt
test
jae
fimull
lret
sub
jbe
stos
out
or
xchg
lods
notb
clc
loope
push
dec
dec
mov
jp
aaa
mov
nop
imul
sub
xchg
in
cmp
mov
jmp
cmp
lcall
pop
scas
popf
inc
fcoms
or
sub
sub
into
fwait
dec
xchg
xchg
cmp
xchg
hlt
ret
mov
aaa
mov
mov
mov
mov
fldenv
mov
and
xchg
js
mov
fwait
movsb
push
stos
dec
in
mov
hlt
psraw
out
pop
orb
mov
mov
xchg
ljmp
arpl
jne
or
xor
or
iret
dec
jmp
and
clc
out
jge
inc
sub
sbb
dec
sub
stc
lock
xchg
cmc
fstpt
aaa
out
add
mov
xchg
scas
insb
lods
add
jmp
mull
sbb
dec
sub
lds
pop
mov
pop
inc
xlat
and
or
pop
mov
push
xchg
adc
add
adc
jb
imul
in
pop
cmp
xlat
mov
arpl
xchg
or
popw
xchg
pop
jg
xchg
es
add
pop
aaa
sbbb
xchg
jne
sub
and
int
jmp
adc
sub
push
sub
test
or
pop
mov
dec
xchg
pop
cmp
les
or
fbld
lahf
test
xchg
imul
rcrb
lcall
daa
inc
dec
adc
inc
xor
enter
xchg
xor
js
je
adc
fsubr
pop
or
sbb
cmp
jp
dec
int
jle
xchg
or
add
mov
fnstcw
incl
aas
mov
cmpl
loop
lret
fsubr
aad
mov
dec
repz
pop
dec
or
mov
xor
daa
pop
fisttps
inc
sahf
test
or
mov
sub
ja
enter
inc
outsl
into
cmpsb
cltd
movsb
xchg
jp
nop
push
sub
mov
cmp
aam
jae
repnz
push
idivl
jns
in
mov
xlat
mov
push
adc
cli
inc
add
pop
xchg
out
cmp
fcmovb
push
push
test
add
out
cli
mov
lds
js
inc
fbld
inc
icebp
in
and
cmp
xchg
or
xchg
adc
jmp
icebp
imul
lret
fldcw
mov
xor
iret
xchg
fcoms
in
or
and
mov
leave
adc
pop
aaa
pop
pop
cwtl
jp
test
cmc
lcall
and
rorl
cmpsb
test
fs
les
dec
sbb
shrl
loopne
xlat
mull
or
or
or
pop
out
cld
mov
daa
popa
ret
je
lret
pop
adc
cmp
xor
mov
inc
mul
xor
ss
test
out
xorl
stc
ljmp
hlt
adc
jg
jge
cltd
sbb
movb
pop
pop
out
rol
js
int
cmp
mov
rcrb
xchg
pop
cwtl
pop
aad
stos
mov
or
mov
push
cmp
out
and
leave
mov
sbb
inc
xchg
dec
ljmp
sub
pop
aaa
ljmp
cvtpi2ps
mull
sbb
cmc
push
pop
mov
int3
push
imul
or
dec
xchg
dec
sahf
jb
inc
addr16
mov
xlat
aad
lea
stos
jno
xor
cs
sarl
lcall
jne
js
ret
adc
cmp
mov
mov
add
or
test
and
mov
or
pop
xlat
mov
dec
bnd
stos
test
das
mov
mov
out
lcall
xchg
sahf
adc
cmp
push
cmp
mov
iret
idivl
pop
test
sbb
fsts
xlat
sub
xchg
or
repnz
and
mov
mov
int
lcall
mov
movsb
mov
push
leave
or
out
push
icebp
cli
cmp
xchg
enter
pop
mov
rcl
pop
imul
mov
call
mov
pop
int3
ljmp
mov
pusha
clc
mov
test
push
in
mov
mov
and
loop
sbb
inc
dec
cld
or
cwtl
sub
jg
mov
filds
mov
fidivrl
push
sti
inc
test
or
inc
pop
mov
ljmp
lods
lret
sub
add
sub
push
stos
push
fadds
ljmp
push
fwait
sbb
sub
mov
ljmp
sbbb
dec
xchg
and
pop
js
mov
lds
or
mov
enter
mov
dec
popa
stos
xor
sbb
leave
mov
cmpsl
scas
arpl
scas
in
xlat
mov
shll
mov
stos
cmc
aad
pop
shll
jmp
stos
and
lret
xor
call
push
sub
xchg
xchg
jbe
and
dec
jmp
pop
jl
sub
jne
div
es
mov
mov
mov
jae
dec
dec
fmull
xchg
mov
lods
cmp
pop
notb
aaa
and
sub
addr16
add
jmp
rcrl
lcall
mov
test
pop
dec
or
mov
testb
jp
call
pop
or
test
divl
mov
xchg
sbb
and
out
or
sub
scas
inc
or
call
xchg
dec
roll
fadd
scas
in
movsb
leave
mov
jmp
test
inc
or
and
or
and
out
lret
inc
xlat
jne
or
loop
sti
cltd
mov
add
sub
cs
xchg
or
out
push
ret
pop
add
jbe
mov
mov
jg
test
imul
outsl
aad
push
stos
inc
cmp
jmp
aaa
push
cmpsb
cld
loope
cmc
add
daa
ljmp
shr
sbbb
push
sbb
jae
daa
sbb
mov
xchg
adc
cmpsb
mov
arpl
sub
stc
pusha
or
in
cmp
mov
mov
or
add
dec
addr16
mov
call
movb
or
sub
mov
push
mov
negb
ud0
cmp
mov
jmp
fsub
mov
mov
mov
aaa
ja
xchg
and
cmp
mov
scas
push
scas
pop
repnz
sub
dec
lock
mov
iret
or
les
lcall
loope
ja
and
mov
mov
enter
inc
sahf
lock
pop
xlat
mov
aad
dec
sub
xor
jns
or
sbb
test
outsb
and
sti
dec
in
fcom
scas
in
outsb
and
adc
mov
jbe
sbb
setnp
pushf
push
gs
push
sbb
enter
dec
xor
clc
dec
cld
sub
imul
mov
fistpl
pop
repnz
aaa
scas
xchg
sub
test
mov
adc
ret
adc
xchg
inc
test
cwtl
or
cmp
in
sub
lea
add
or
es
addr16
add
fldenv
loopne
sbb
xchg
xlat
or
imul
mov
out
loopne
dec
pop
mov
mov
xchg
jbe
add
lret
test
bound
add
lock
into
sub
mov
call
mov
negb
adc
xchg
pushf
mov
inc
lcall
lods
cmp
test
pop
lret
int
xor
and
sub
sub
and
push
lds
sub
xor
ss
cltd
cld
cli
dec
iret
mov
sbb
mov
cmc
jp
scas
lret
es
in
in
movsb
add
sar
dec
cmp
or
pushf
xor
mov
out
ljmp
sarl
lcall
ljmp
in
cmp
adcb
nop
lds
cmp
aaa
mov
xor
and
ljmp
dec
sub
dec
xor
mov
pop
call
bound
int3
sbb
adc
cmp
xchg
adc
push
imul
adc
xlat
cmp
pop
mov
dec
push
add
in
int
xchg
aam
sbb
movb
cmp
xor
std
imul
jns
dec
fistps
lret
cmc
jbe
xchg
add
mov
ja
stos
enter
lcall
xor
popa
xchg
je
bound
movsb
or
mov
out
jb
sti
adc
jnp
sbb
dec
out
cwtl
or
lcall
jb
pop
scas
jo
cwtl
clc
inc
xchg
dec
xor
cmpsb
in
mov
sub
adc
out
jg
sbb
or
or
push
push
ja
mov
loopne
out
mov
mov
fdivrs
cli
mov
pop
sub
or
mov
add
push
pop
mov
imul
leave
xlat
jmp
mov
dec
loope
adc
negl
test
mov
inc
cmp
push
mov
sub
xchg
dec
push
xor
mov
out
and
loop
icebp
movsb
enter
fiadds
ret
aam
addl
inc
test
xor
flds
and
nop
dec
sti
int
ljmp
and
pusha
pusha
sbb
idivb
icebp
or
xchg
mov
enter
cmp
xor
or
rclb
js
mov
adc
cmc
mov
mov
ret
in
negb
rcl
pushf
jmp
clc
js
xor
lcall
jbe
add
mov
inc
sbb
pop
sub
and
and
mov
inc
pop
pop
into
xchg
frstor
in
xor
in
cli
xchg
fists
popf
setbe
ss
in
js
cmp
cli
testl
mov
mov
dec
fsubrs
cmp
pop
adc
sub
sub
enter
ljmp
mov
mov
xor
and
mov
cmp
mov
cmp
jbe
test
loope
push
shl
fcompl
jecxz
int3
pop
or
dec
mov
dec
cs
sahf
mov
scas
add
xchg
cmp
fdivs
and
lcall
loopne
test
dec
push
aas
and
jns
sub
dec
out
xchg
xlat
sbb
sub
pop
ljmp
cmpsb
cmc
or
pop
loop
sbb
xchg
mov
pop
sbbl
pop
sbb
cld
ja
leave
adc
and
cmc
mov
sbb
enter
mov
clc
xchg
sub
and
sub
inc
or
divl
push
fwait
adc
jbe
stc
sbb
and
sbb
add
add
ljmp
std
inc
xor
stc
nop
daa
sbb
pop
loop
sub
adc
sub
push
es
inc
negb
stos
push
addr16
out
and
ret
mov
cmp
popl
mulb
adc
jmp
xchg
stc
fcomip
gs
les
mov
imul
xlat
push
rorl
mov
addr16
mov
add
int3
movsb
sub
dec
cmp
adc
push
push
push
inc
xlat
cmp
jae
add
shlb
dec
mov
mov
mov
xor
flds
lret
imul
dec
jns
mov
shrb
cmpsl
fstps
lods
cwtl
xlat
sarb
or
outsl
in
and
dec
pop
and
dec
gs
cmp
dec
imul
dec
and
gs
push
cmp
push
stc
sbb
cwtl
ljmp
enter
jp
sub
xor
push
out
dec
sbb
int3
sbb
and
push
aas
push
movl
mov
enter
or
xor
test
fisubrl
or
add
div
imul
inc
imul
loopne
add
dec
push
pop
dec
mov
lock
jbe
lret
sub
dec
sbb
dec
imul
dec
and
or
ljmp
or
push
mov
mov
jg
fcmove
adc
cmp
sbb
repnz
pop
fldcw
enter
xor
mov
pop
roll
xchg
aad
shl
shrb
xor
xchg
mov
dec
out
jne
js
rolb
mov
in
mov
xor
pop
fsubrs
jno
daa
push
lds
out
sbb
insl
pop
mov
fdivrl
lock
frstor
dec
out
rol
outsb
or
lds
pop
xchg
test
jle
incl
loopne
and
xchg
sub
or
or
jg
inc
aaa
mov
xchg
cwtl
imul
movsl
xchg
cmp
sbb
or
dec
test
add
lods
xchg
add
sti
lds
jp
dec
push
dec
jbe
or
sub
fadd
sbb
sub
pop
sbb
sub
in
xchg
not
jmp
clc
mov
mov
jp
xor
aaa
lret
jbe
mov
mov
sbb
pop
mov
add
or
int
es
idivb
inc
mov
pop
jmp
xor
in
rcll
rcrb
lds
jmp
mov
add
push
cs
push
mov
std
xchg
dec
pop
imul
xchg
adc
lods
mov
xlat
jbe
cmpsb
pop
xchg
and
iret
test
divb
ror
neg
out
in
inc
icebp
lock
or
enter
imul
push
sbb
mov
and
adcb
jbe
ficoml
add
push
movsl
mov
sbb
mov
cmp
js
dec
mov
aad
dec
arpl
jg
ljmp
jno
and
xlat
pop
push
fsubrs
inc
jl
notb
jl
out
test
in
out
mov
mov
inc
inc
add
mov
push
shr
cli
in
cmpsb
sub
pop
test
pop
sub
mov
or
es
xchg
lret
cmc
popa
popf
pop
xchg
out
popf
inc
test
pop
inc
jp
in
pop
ljmp
pop
lea
dec
adc
stos
inc
mov
fcmovbe
xchg
jb
or
dec
mov
sbb
pop
je
rcrl
xchg
test
jmp
sbb
lods
int
or
xchg
sbb
mov
mov
int
mov
mov
mov
pop
pop
stos
jg
aaa
mov
jb
jne
lds
out
ja
sahf
jp
sbb
leave
cmp
xchg
lcall
xchg
sbb
fisubrl
jns
test
ja
adc
dec
aad
int3
xor
mov
jp
test
imul
sbb
sbb
pop
mov
adc
cltd
sarl
push
icebp
jl
cmc
sub
xor
out
xchg
inc
lcall
pop
pop
cwtl
dec
js
push
test
cmp
xor
pop
out
fisubrl
mov
dec
inc
notl
jbe
imul
out
xchg
xchg
stos
cli
pop
adc
pop
xchg
stc
addl
mov
ljmp
push
add
idivb
loope
enter
xlat
adc
lods
rcr
addr16
or
or
pop
stos
out
jmp
xor
sub
imul
clc
xor
scas
adc
or
pop
mov
nop
xchg
jmp
clc
sbbl
or
jbe
pop
sbb
loope
dec
out
addb
sub
mov
ljmp
sbb
cli
xchg
xchg
test
pop
icebp
std
sub
aad
dec
sbb
dec
push
ss
test
or
cwtl
and
imul
adc
cmp
pop
adc
mov
sbb
mov
inc
inc
adc
dec
lods
inc
fidivrl
lds
pop
dec
or
gs
lea
dec
add
sbbl
sbb
lcall
add
jb
dec
fisubrl
mov
addr16
xchg
push
cli
and
or
mov
push
stc
aas
xchg
sarb
fiaddl
sub
leave
data16
dec
jp
cmp
rorb
aaa
pusha
inc
dec
fldenv
cli
movsb
cli
sbb
mov
sub
xor
dec
mov
cwtl
gs
sbb
ljmp
mov
in
sbb
mov
push
stos
mov
inc
or
popf
or
sbb
sub
call
inc
mov
xchg
ret
sbb
int
pop
outsb
sar
int
pop
xchg
jmp
ljmp
cmp
mov
xor
daa
imull
clc
and
pop
loopne
mov
pop
fcomps
inc
inc
pop
inc
or
xchg
push
cmp
and
push
and
pop
cli
shr
int
cmp
out
cmp
bound
test
dec
dec
lret
lcall
call
cmp
fists
xchg
call
mov
dec
dec
push
lcall
dec
xchg
and
pop
xchg
orb
orl
aas
roll
cmc
push
es
mov
call
cmp
xchg
insl
adc
cld
and
es
push
lcall
gs
xor
xchg
sbb
andl
sarl
mov
adc
jbe
adc
aaa
filds
xchg
in
and
mov
mov
xchg
pop
cmp
xchg
arpl
ljmp
dec
pop
and
adc
mov
add
int
leave
in
fdivrs
das
and
jg
in
or
icebp
mov
cmc
xchg
xchg
movsb
aad
or
push
xchg
pop
out
fisttpll
push
inc
sbb
dec
or
push
or
testb
dec
mov
js
and
loope
call
push
push
xchg
adcl
sbb
push
cmp
adc
cwtl
in
daa
js
mov
adc
jp
sbb
ret
in
fcmovnbe
mov
mov
add
test
xchg
testb
adc
inc
ljmp
jmp
test
out
or
jl
xor
cli
mov
mov
js
movsb
lcall
movsb
inc
mov
mov
repnz
aas
sbb
in
je
sub
loope
dec
daa
mull
mov
xchg
pop
or
ljmp
fisttps
and
mov
push
sub
andb
es
jbe
push
pop
mov
and
inc
xor
loopne
fldt
inc
xchg
adc
or
xchg
dec
mov
ljmp
test
sbb
pop
negl
sarb
mov
loopne
xor
sub
lods
sub
dec
fiaddl
jmp
out
add
and
addr16
jns
ljmp
or
push
test
add
sbb
lret
ffreep
lea
in
lcall
inc
sub
fsubl
push
stc
pop
imul
jbe
addr16
mov
or
shrl
xchg
hlt
aad
jp
push
negb
adc
adc
jg
out
mov
and
mov
aad
in
out
popf
fwait
xchg
aas
sbb
lods
mov
jmp
daa
xor
aad
dec
je
mov
xchg
fcoms
out
dec
cmp
cmp
sub
and
xor
mov
mov
inc
or
add
faddl
mov
push
lcall
movb
or
mov
imul
push
adc
mov
add
inc
sbb
pop
sti
and
adc
mov
mov
adc
sbb
aad
cld
or
add
adc
mov
add
shl
cmp
adc
push
dec
cli
mov
sbb
dec
pop
test
fisubrl
clc
mov
std
iret
arpl
mov
mov
push
sub
sub
std
adc
icebp
adc
push
or
fcomps
fnstcw
aad
in
mov
popa
jl
in
daa
cmc
mov
mov
insl
fisubrl
lea
inc
call
cmpsl
pop
adc
sub
gs
add
cmp
and
in
in
sub
in
pop
pop
hlt
sub
test
ficompl
andl
test
daa
js
and
and
mov
pop
aad
push
sub
dec
inc
xchg
test
push
push
or
shll
and
js
sub
mov
jp
rcr
aaa
popf
call
fimull
dec
mov
xor
aad
mov
rcrb
jo
notb
mov
or
mov
imul
sub
rcrl
cmp
aad
push
push
stos
push
negb
xor
push
xor
out
sarl
or
int
mov
cld
ljmp
popf
pop
xchg
mov
pop
jb
loope
lret
xchg
bound
js
call
scas
in
or
xor
pushf
add
cmp
test
or
test
sbb
pop
in
call
jge
sbb
mov
push
push
cli
das
int3
leave
pop
and
sbb
aaa
add
jne
out
inc
push
fiadds
push
daa
stos
es
popf
adc
pop
lea
cmp
mov
imul
fsubr
push
lea
cmc
sbb
inc
cwtl
push
push
or
cltd
cmp
or
mov
adc
cli
cmp
dec
out
aaa
mov
lret
mov
jb
sub
inc
lcall
ffree
mov
inc
mov
jl
xor
jnp
stos
or
cmc
dec
mov
mov
leave
in
test
jbe
and
pop
imul
push
jg
aaa
xchg
pop
sub
mov
or
push
mov
cmp
dec
xchg
cwtl
mulb
mov
ficompl
and
sbb
mov
in
inc
into
sbb
sbb
test
jecxz
daa
adc
fmull
mov
sub
cmp
mov
jl
mov
xor
cmpsl
xchg
stos
xlat
sarb
mov
out
fcomps
pop
jle
push
xchg
mov
mov
mov
dec
insl
leave
or
or
ljmp
leave
addr16
lea
sbb
shlb
xor
cmc
cmp
mov
std
jg
xlat
or
mov
mov
cmp
sub
xlat
sbb
cld
and
push
cmp
cmpsb
cmp
mov
outsb
enter
dec
mov
fidivrl
add
push
push
je
mov
adc
loope
xor
dec
xchg
xchg
xchg
fcmove
mov
sub
push
mov
ffree
cli
in
push
sub
dec
repz
test
adc
cmp
shl
xor
ret
mov
outsb
hlt
add
aad
addr16
xor
and
scas
fs
loopne
pop
out
test
daa
sbb
adc
mov
cwtl
stos
xor
jne
ret
ljmp
jmp
enter
pop
fcmove
clc
test
pop
rorb
mov
xor
inc
fimull
scas
xchg
xchg
sbb
std
jmp
cmpsb
clc
sbb
xchg
shrl
test
cmp
stos
adc
fmull
hlt
jbe
sub
cmc
xchg
or
push
and
stos
imul
sbb
inc
dec
mov
cmc
cmpsl
mov
xor
notb
push
push
sbb
pop
idivl
lods
fsubr
pop
push
stos
or
cmp
arpl
sbb
insl
ret
enter
jbe
sub
xor
inc
je
push
inc
push
inc
adc
sbb
dec
mov
xlat
xlat
cwtl
repz
stc
or
or
testl
mov
xchg
in
or
or
insb
insb
imul
fsub
stos
push
inc
jne
aad
cmp
pop
ret
lds
sbb
xchg
in
imul
ja
dec
jae
cmc
clc
dec
loop
adc
or
icebp
or
leave
or
xlat
sub
or
mov
or
sbb
dec
jg
stos
out
negb
or
test
addr16
hlt
cmp
out
adc
or
xor
in
stos
sbb
insb
cwtl
cmp
and
adc
cmp
ret
push
adc
cmp
sub
adc
rcl
mov
dec
cmp
push
cwtl
fdiv
movsb
mov
jbe
pop
and
dec
addr16
ljmp
mov
test
sub
hlt
shll
mov
aam
arpl
sub
jp
jb
xor
push
cmc
mov
movsb
test
sbb
sbb
in
call
sub
inc
dec
fisubl
clc
push
out
jmp
push
cmp
xchg
or
cmpsb
mov
iret
dec
and
cli
sub
clc
lret
xchg
lcall
dec
xor
ret
ficoml
inc
sbb
call
push
mov
das
fbld
gs
icebp
adc
xor
pop
xchg
int
or
lret
inc
mov
andb
popa
jmp
or
daa
out
xor
push
dec
stos
pop
and
int3
xchg
jmp
push
mov
aaa
call
daa
add
xor
sbb
push
push
lock
out
enter
iret
jecxz
dec
lea
or
or
int
insl
lds
and
addr16
sbb
mov
pop
js
pusha
xchg
and
pop
loopne
xchg
pusha
addl
adc
cli
test
sti
xchg
pop
pop
loop
mov
dec
and
cmp
sbb
pop
lods
lods
cmc
inc
testb
sbb
jbe
mov
lret
jo
addr16
dec
rcrb
pop
out
pop
nop
shll
sbb
inc
cmc
in
pop
or
xchg
and
hlt
xchg
xchg
or
or
mov
nop
mov
mov
push
test
out
push
jg
lds
in
mov
pop
out
xor
shl
mov
dec
inc
aas
in
cmc
pop
pop
or
cmp
lcall
xchg
add
sarl
std
add
mov
lds
pop
fidivs
pop
scas
in
mov
sbb
cmp
iret
adc
subb
cltd
mov
dec
jp
imul
out
push
mov
sub
dec
imulb
call
xchg
js
loope
cwtl
cli
jb
lcall
push
test
lock
push
ljmp
xchg
sub
js
adc
mov
jns
hlt
pop
pop
push
xlat
daa
or
mov
clc
jp
cmp
fisubl
enter
pop
dec
mov
xlat
push
in
mov
mov
push
daa
dec
or
inc
js
push
jno
pop
lds
or
cmp
cmp
xchg
xlat
dec
lcall
adc
dec
lret
vpsrlw
call
cli
shll
in
xchg
pop
enter
sub
outsb
jmp
dec
xchg
mov
arpl
insb
loop
in
pop
push
cmpsl
jns
mov
push
or
xlat
xchg
test
stos
xchg
inc
add
shl
lcall
mov
pop
add
hlt
lea
jno
cmc
cltd
idivl
js
mov
cmp
popa
xchg
loop
mov
fldcw
cs
xchg
cmc
cmp
push
pop
imul
ret
and
push
stos
or
addr16
pop
test
aaa
sbb
sbb
imul
ljmp
sbb
and
mov
mov
test
lret
xor
jp
aam
xchg
jo
mov
adc
enter
or
in
dec
add
icebp
addr16
push
pop
xor
fists
dec
dec
inc
loope
cli
or
sub
pop
dec
hlt
stos
or
iret
addr16
push
ljmp
out
call
ficoml
sbb
mov
sbbb
xchg
fisttps
push
jl
mov
vmovhps
mov
int
cltd
mov
sti
mov
pop
je
xor
daa
or
mov
ret
xor
mov
out
xor
sbb
xchg
lcall
or
cmp
test
clc
out
lods
or
xor
inc
cld
pop
cs
cmp
push
stos
sarb
jl
push
cwtl
arpl
lret
scas
push
cltd
scas
stos
xlat
sbb
mov
dec
and
xchg
lods
imulb
pop
lods
popf
xor
ljmp
xchg
mov
or
pop
in
movsb
pop
out
and
test
test
lds
stos
add
xchg
mov
enter
imul
in
mov
cmpl
pop
and
testl
repnz
in
dec
enter
enter
cmp
xor
dec
lcall
stc
push
fcoms
sbb
xchg
out
lcall
cmp
inc
cld
push
cli
jo
jp
ror
daa
insl
fstps
in
gs
scas
jg
or
push
jle
ss
push
cs
cmp
hlt
add
xchg
xor
lret
fldcw
ja
add
xchg
movsl
lcall
call
and
loopne
xchg
mov
mov
adcl
daa
dec
mov
ret
sub
xchg
es
gs
aas
jae
push
inc
cwtl
js
mov
popa
sub
jb
inc
add
cmp
aas
xchg
xchg
jbe
dec
xchg
testl
inc
aaa
push
fmuls
hlt
or
adc
xchg
fcoms
ljmp
xor
jmp
rorb
xchg
and
imul
in
xor
xchg
fbld
cmp
xor
aad
stos
lea
xchg
xchg
inc
not
push
dec
js
mov
xlat
mov
pop
pop
mov
fimuls
shl
xchg
xchg
stc
popa
out
xchg
mov
jp
xor
aad
enter
daa
lds
jbe
sub
movsb
lret
aad
xchg
jp
imull
mov
dec
mov
xlat
mov
cli
in
add
fidivrl
je
mov
cli
jp
aaa
fldcw
rcl
stc
pop
cli
mov
mov
test
test
xchg
add
xchg
mov
sub
xchg
loope
xchg
pop
push
mov
xlat
ret
call
push
es
lret
clc
cmc
inc
daa
mov
pop
sbb
mov
stc
push
sbb
ror
in
dec
dec
pop
pop
or
dec
dec
add
mov
jns
dec
or
daa
in
mov
cmpsl
call
loopne
lods
aaa
subl
add
sub
push
sbb
cwtl
stos
pop
mov
cmp
mov
xchg
pop
mov
dec
add
mul
pop
je
jbe
cli
les
or
lds
and
or
pusha
sub
mov
lds
mov
inc
mov
jbe
lods
js
mov
dec
sbb
xchg
call
and
xlat
in
fildll
stos
fimull
add
call
or
and
int
lock
sub
or
leave
dec
rorl
lahf
cmp
push
test
out
lcall
mov
js
mov
out
push
scas
aad
scas
and
shll
cmp
push
loope
pop
or
dec
lcall
iret
test
jbe
mov
or
xchg
and
cmc
xor
in
adc
pop
mov
cmp
xchg
mov
mov
lret
add
xor
mov
lods
mov
jbe
lret
mov
push
pop
stos
or
test
mov
fcmovbe
ja
popf
xchg
and
adc
outsb
add
aas
rcl
sbb
lret
cmp
imul
mov
cmp
xchg
jbe
sbbl
mov
push
orl
mov
psrad
dec
rolb
adc
pop
in
inc
xor
adc
xchg
cwtl
sarb
dec
cs
xchg
push
mov
sub
in
in
add
cmpl
inc
cwtl
or
pop
jmp
fdivl
and
neg
or
push
mov
sub
popaw
shll
ljmp
mov
in
mov
xchg
and
daa
sub
mov
stos
sti
cmp
in
lret
push
add
es
je
xlat
sbbl
or
iret
xchg
or
inc
or
pop
lcall
testb
stos
adc
fstp
scas
stc
mov
or
adc
sub
pop
lcall
test
jp
je
mov
jle
fs
xor
arpl
cwtl
and
orl
cmp
mov
inc
sbb
pop
loop
testb
test
fidivs
mov
subb
mov
ret
cmp
sub
sub
xchg
enter
add
lret
out
xchg
pop
ljmp
daa
cmp
test
jp
push
mov
test
sub
add
pop
addr16
mov
push
xchg
push
sbb
and
xchg
loopne
movsb
pop
pop
out
or
test
or
cmp
mov
xor
popa
clc
mov
add
add
cmc
pop
add
sub
out
mov
scas
and
arpl
dec
adc
rorl
sbb
test
sbb
popa
sub
add
int
addr16
fwait
cwtl
movsb
xchg
xchg
rol
mov
test
cli
and
ret
sub
roll
roll
xchg
pop
pop
sub
and
imul
dec
push
xchg
imul
jno
jp
mov
adc
cmp
aad
adc
or
push
xchg
fisttpll
fwait
es
cmpl
inc
in
xor
pop
scas
test
cmp
cmpsb
jb
add
ljmp
jne
lret
mov
mov
add
mov
cli
scas
dec
fidivl
pop
negb
xchg
loope
adc
or
jmp
ffreep
insb
aam
push
mov
cs
je
sub
fdiv
push
xchg
and
xchg
ljmp
or
add
or
add
cli
pop
cmc
mov
jbe
and
sbb
shrl
in
test
or
mov
cwtl
mov
and
or
or
hlt
in
subb
cmpl
shl
jp
xchg
sub
xchg
clc
test
adc
cmp
sub
int
mov
push
popa
mov
lcall
inc
push
mov
mov
cs
push
ds
pop
xor
pop
inc
mov
dec
enter
sub
inc
js
lods
cltd
xchg
sbb
lds
in
mov
popf
cmp
ss
and
call
cmp
mov
rcll
mov
lahf
mov
outsb
mov
mov
ljmp
popf
pop
xor
test
xchg
adc
sbb
or
jge
dec
cmp
mov
out
jbe
mov
lcall
js
pop
pop
sbb
test
enter
xchg
or
cmp
jbe
lret
pop
fcmovb
adc
sub
push
aad
es
xor
ret
lds
cwtl
test
js
xchg
repnz
mov
push
and
pop
push
cli
fiaddl
out
sub
pop
in
xchg
xchg
ret
xor
push
jo
adc
insb
inc
sbb
xchg
mov
sub
shll
cli
jbe
out
icebp
jp
lcall
in
sbb
movb
int3
xchg
imul
ss
cli
xor
xchg
enter
je
sub
lds
movsl
inc
out
js
lret
and
xchg
mov
adc
fnstcw
or
and
mov
pop
insl
xor
push
lret
mov
ret
lret
pop
and
idivl
movsb
xor
or
inc
or
out
stos
add
push
jl
or
pop
fdivrs
mov
pop
enter
test
int3
sub
and
lods
xor
mov
out
or
mov
test
jecxz
sub
sbb
mov
mov
ljmp
cwtl
notl
leave
out
test
popf
sub
iret
lds
push
lcall
aaa
test
ret
jbe
lds
dec
and
mov
popa
push
in
loopne
jmp
je
xchg
icebp
adc
pop
mov
sub
cmp
std
add
scas
ret
add
adcl
mov
or
insl
pop
mov
cmp
ljmp
adc
out
lods
push
sub
orl
sub
pop
sub
sbb
inc
mov
or
pop
adc
sbb
dec
icebp
or
xlat
in
jp
xor
sbbl
enter
dec
jg
lret
inc
idiv
inc
adc
js
sbb
fcomps
ljmp
xchg
fadd
pop
enter
mov
icebp
out
pop
xor
or
ret
cmp
in
dec
sbb
jae
push
xchg
daa
cmp
lret
test
xchg
ret
cmpl
inc
test
lods
sahf
jmp
mov
adc
pop
sbb
pop
rolb
mov
mov
mov
sub
jno
mov
mov
cwtl
xchg
xchg
xor
sbb
sbb
pop
mov
iret
cmc
lods
dec
inc
or
xor
and
pop
mov
lea
xchg
aaa
shl
les
jmp
jo
fnsave
add
pop
das
je
cmp
push
lcall
enter
fwait
pop
cmc
fnstsw
pop
lds
loope
enter
in
loopne
mov
std
mov
adc
sub
mov
out
mov
sbb
or
cmp
out
mov
bound
popa
idivb
cli
loop
shl
lds
test
xor
fcmove
in
mov
or
aad
xchg
or
cmp
mov
mulb
jmp
daa
cmp
imul
cmp
or
cmpsb
mov
enter
or
inc
lcall
mov
cmp
cmc
popf
jp
cmp
and
lods
xchg
cltd
xor
sbb
sti
mov
testb
in
pop
xchg
cmp
gs
lcall
jnp
sub
sub
xchg
mov
aaa
pop
xlat
mov
movsb
and
loop
repz
clc
aaa
fcmovb
fsubs
sbb
je
add
hlt
xchg
push
push
adc
js
call
mov
xor
adc
mov
push
mov
loop
mov
or
add
push
push
shrb
fsubs
adc
daa
mov
es
mov
lds
cmp
out
cld
and
and
out
ret
add
out
call
xchg
cld
add
dec
mov
cli
sub
xor
into
pop
xchg
repz
jmp
lods
dec
enter
repnz
or
stos
xlat
lock
mov
sub
in
push
push
xchg
mov
cwtl
and
xchg
and
cmp
xchg
out
add
dec
pop
and
pop
out
cmp
jbe
sub
es
lret
mov
cmc
lret
xor
xlat
fcmovb
jae
out
mov
cmc
ror
jae
pop
mov
dec
in
js
push
sub
xchg
icebp
xchg
mov
cli
push
xchg
jp
fistpll
xor
lds
dec
pop
popf
data16
ljmp
pop
sbb
or
mov
test
dec
pop
loope
lret
add
and
inc
rcrb
cmc
aaa
fimull
std
aad
pop
adc
mov
stos
icebp
adc
dec
push
aaa
adc
mov
mov
xchg
xchg
cmp
mov
outsl
dec
or
sti
imul
iret
or
dec
stos
dec
aas
sub
or
fwait
unpckhps
fmul
int
orl
sbb
mov
and
sbb
xchg
push
in
mov
mov
scas
shl
lret
cmp
std
jecxz
dec
add
sbb
adc
incl
sub
inc
mov
lcall
xchg
mov
fwait
cmp
jbe
mov
shrl
ljmp
or
sbb
in
mov
test
sub
mov
fimull
mov
mov
imul
sti
mov
fcoml
add
mov
insb
lock
or
jnp
aaa
cmp
addl
adc
clc
icebp
cmpb
jle
ret
imul
adc
enter
outsl
mov
or
cmp
sub
and
stos
push
les
aam
rcll
mov
shll
mov
adc
inc
xor
adc
aaa
stos
stos
sbb
mov
clc
clc
lods
cmp
mov
xchg
dec
sbb
pop
sbb
push
aad
jbe
loope
clc
stos
xchg
or
mov
test
xchg
xor
xor
in
sbb
je
je
fs
repnz
enter
or
negb
int
sub
dec
sbb
sub
sub
js
mov
cmc
lock
ret
popa
push
mov
xchg
jns
lret
test
cmc
test
loop
dec
sub
or
sti
cmpsb
push
xor
mov
jbe
lret
xlat
aam
xor
sbb
push
loopne
std
xchg
out
or
mov
rolb
mov
sub
or
cmp
sbb
pop
dec
imul
mov
dec
or
push
cli
or
in
lds
xlat
add
bound
fadds
cmp
outsl
loopne
js
mov
adc
not
ficoml
xchg
rcl
imulb
mov
xlat
pop
ret
not
push
popa
stc
mov
fists
sub
pusha
movsb
adc
ss
fisubrl
sbbb
les
or
ljmp
je
or
pop
lods
xchg
sbb
inc
hlt
in
and
call
in
mov
xchg
mov
or
or
dec
enter
movsb
daa
aad
cmp
in
lret
sbb
repz
cmc
jmp
sbb
xlat
mov
mov
testl
mov
or
add
sbb
pop
fmuls
lds
or
in
enter
sbb
popl
sbb
out
or
fiaddl
loope
sub
leave
mov
cltd
jns
lcall
mov
push
jp
jae
dec
adc
xlat
cmpl
dec
arpl
pop
loope
popa
push
aaa
testb
jl
sbb
pop
icebp
shlb
sbb
xchg
mov
xchg
sub
lret
sbb
add
sub
pop
jmp
cli
sbb
imul
and
xor
pop
and
mov
outsl
add
push
les
out
push
loop
or
pop
push
xchg
sub
mov
cli
mov
ror
lds
and
in
sbb
je
push
add
hlt
add
mov
mov
int
dec
mov
enter
dec
adcl
mov
xor
loope
or
in
sbb
stc
js,pt
pop
into
test
cmp
lds
leave
cli
mov
mov
fsubrp
stc
stos
addr16
cmp
jb
cmpsb
imul
stc
fs
mov
mov
out
xchg
push
sub
cltd
fnstsw
xchg
cmp
data16
mov
mov
sub
out
dec
clc
fimull
lcall
sbb
pop
or
call
mov
push
sbb
pushf
lret
stos
adc
addr16
adc
movsl
in
ret
inc
push
cmp
or
ror
out
jg
ljmp
mov
jp
and
cmpb
cmp
enter
lods
and
in
mov
xor
daa
testl
sub
je
test
mov
cmp
sarl
cwtl
sub
cmp
test
negb
sahf
pop
in
sbb
cli
jp
sub
loope
sub
xchg
sub
pop
popf
fs
inc
or
pop
mov
dec
dec
cmc
sub
mov
sbb
mov
and
jecxz
sbb
mov
js
push
mov
inc
cmp
je
cli
sbb
lcall
lods
int
cmp
cmpsb
cld
movsb
pop
adc
or
ret
fcoms
pop
rorb
fiadds
jo
xor
stc
imul
and
addr16
xor
cwtl
pop
dec
inc
decl
push
xchg
adc
sub
mov
add
aad
idivl
int
push
push
pop
sahf
in
jbe
or
aad
xchg
or
jns
sbb
cmc
inc
mov
and
test
cmp
mov
mov
aad
sti
test
es
sbb
sbb
xor
jl
dec
add
test
jp
lcall
cmpsb
xor
sbb
shll
arpl
jns
pop
cltd
lahf
or
xchg
sbb
in
dec
mov
or
mov
cmp
push
jmp
xchg
push
aad
cmp
ljmp
je
cmp
mov
xchg
pop
xchg
push
jg
dec
jmp
testl
js
imul
cmp
push
adc
lret
cli
or
dec
test
fbstp
movsl
jecxz
xor
idivb
popf
push
aad
loope
sub
and
daa
sub
dec
dec
js
and
sub
mov
mull
or
xorb
cld
imul
xchg
js
ljmp
outsl
movsb
call
imul
add
or
dec
pop
and
xchg
ljmp
dec
stc
mov
sub
inc
add
out
xlat
adc
xor
lret
inc
xchg
xchg
xchg
add
test
mov
lods
popa
or
jno
mov
mov
push
sbb
in
call
add
dec
in
sbb
rorl
mov
sub
leave
mov
ds
gs
cmc
stos
mov
and
das
adc
lods
sti
mov
sbb
xchg
push
cmp
mov
testl
insl
push
sbb
sub
and
xchg
loop
clc
dec
xchg
sbb
idivb
sti
pop
leave
hlt
std
inc
or
pop
out
in
in
popf
testl
lret
xchg
xlat
pop
rcrl
into
xchg
adc
xchg
push
add
pusha
fcomip
jmp
cmpsb
mov
cmp
leave
inc
test
ss
mov
push
mov
inc
mov
int3
mov
stc
or
cwtl
pop
into
jbe
xchg
xchg
mov
xor
jl
loope
push
or
mov
roll
cmp
mov
dec
sub
cmc
mov
movsb
js
dec
sbb
jne
call
push
cmp
je
scas
stos
jne
pop
or
xor
div
mov
clc
cli
jg
sub
fadds
mov
or
je
mov
cli
shll
fcmovu
pop
sbb
cmpb
daa
cwtl
xchg
std
adc
loop
add
shl
xor
mov
xchg
and
mov
pop
push
movsl
cmp
xchg
sub
test
mov
leave
frstor
push
mov
movl
add
out
ret
leave
xchg
cmpsl
mov
pop
cmp
adc
sbb
pop
inc
lahf
push
fldcw
jg
testb
xchg
jno
sbb
adc
lret
stos
stos
insl
dec
lea
and
stos
jp
dec
ficompl
je
mov
jp
stc
sub
aad
fidivrl
lret
cmpsb
mov
xchg
cmp
or
push
sub
outsb
pop
cmp
icebp
mov
imul
mov
iret
xor
add
mov
ret
and
mov
lret
std
es
in
imul
fistpll
call
rol
rorl
loope
out
test
dec
addr16
imul
mov
stos
test
xor
mov
lret
sbb
jle
sub
mov
adc
stos
inc
and
lcall
cli
enter
pusha
test
stos
mov
subl
addr16
sbb
add
cli
in
or
sub
adc
js
movsl
ja
xchg
ljmp
mov
add
inc
addr16
jae
sbb
rcrl
movsl
push
sub
jp
fiaddl
shll
in
dec
cmp
adcb
push
cwtl
mov
fidivl
push
or
mov
jle
sahf
push
sbb
inc
adc
ret
cmc
out
push
xchg
sub
lcall
xchg
cli
and
addr16
pop
aaa
std
mov
cmc
mov
aad
jp
cli
cmp
xchg
stos
mov
jbe
test
add
loope
xchg
out
addl
mov
or
out
adc
ljmp
test
pop
sbb
pop
sub
mull
or
inc
cmp
push
ret
out
push
es
mov
fisttpll
mov
movsl
popa
jnp
mov
pop
call
mov
adc
out
mov
fisubl
dec
pop
inc
fcmove
lods
xchg
clc
call
ss
or
lret
lods
js
mov
cmc
enter
loop
int
push
mov
test
mov
lret
inc
xchg
or
jbe
ss
add
rcrl
daa
repnz
mov
dec
imul
cmp
pop
xchg
enter
dec
pop
test
adc
stc
adc
jae
orb
andl
aaa
or
icebp
jbe
js
leave
jg
aad
sbb
mov
out
sbb
jg
ljmp
roll
sub
rorb
sub
movsl
lret
js
cltd
cmp
or
pop
insl
outsb
es
out
xor
js
mov
test
sbb
std
stos
jp
iret
in
stc
sub
push
xchg
in
cmp
lcall
call
aaa
cltd
and
mov
pop
fildll
add
es
and
push
ret
push
stos
push
clc
mov
lcall
divl
fadds
cltd
jmp
cmp
pop
dec
jns
sbbb
mov
or
lock
pop
lcall
mov
inc
cmpsl
mov
ljmp
in
dec
movsb
out
xchg
or
call
sbb
loope
fcmovb
xor
xchg
cli
aad
mov
cmp
popf
test
xchg
adc
pusha
popa
cltd
subb
jge
roll
xchg
cmc
add
inc
xlat
rol
inc
adc
loop
dec
dec
clc
and
call
add
lcall
std
cmp
rcll
sub
xchg
sbb
dec
cmpl
or
add
pop
neg
addl
fimull
addr16
rcl
cwtl
sub
popf
ret
xchg
pushf
xchg
push
push
mov
aad
divl
add
add
es
lcall
cwtl
adc
sbb
aas
cmp
mov
xchg
xor
sub
sbb
mov
xor
pop
and
enter
or
lahf
arpl
inc
das
pop
mov
mov
or
ljmp
mov
aas
and
test
xchg
adc
hlt
jle
cmpsb
xchg
shl
lcall
dec
repnz
add
add
imul
cwtl
aad
ret
push
stos
enter
les
andl
mov
or
xlat
aas
adc
fxtract
cmpl
xchg
pop
push
hlt
addr16
xchg
fsubr
dec
out
sub
dec
popf
jmp
xchg
sub
cmp
sbb
push
xchg
dec
or
add
xor
je
or
dec
xchg
xor
stos
ljmp
sbb
cs
sub
ficompl
mov
sbb
leave
sub
pop
and
push
ficompl
mov
inc
or
sub
or
push
mov
imulb
in
in
mov
mov
popa
dec
rorb
xor
jo
mov
push
or
xlat
adc
sbb
inc
adc
sub
es
mov
cwtl
enter
stos
fcoms
cmp
arpl
pop
lods
xchg
jbe
xchg
rorb
hlt
pop
mov
sbb
dec
loope
negb
cmpl
js
negl
adc
push
lea
cltd
cli
dec
xlat
xchg
jns
fmull
or
pop
pop
fists
mov
adc
cwtl
xchg
xor
lcall
fimull
js
fwait
sahf
mov
out
shrl
pop
and
icebp
xchg
pop
xor
mov
mov
subb
push
fidivrl
jmp
jge
in
or
scas
int3
mov
in
lds
aaa
loope
dec
cmc
xchg
or
xchg
out
dec
adc
leave
jbe
int
jno
jge
lds
add
cli
cmpsb
and
es
mov
ljmp
clc
push
sbb
aaa
mov
inc
mov
or
subb
mov
or
lret
aam
fcmovbe
rolb
or
pusha
cwtl
inc
and
iret
out
cmp
mov
out
fisttpll
ljmp
cmp
or
jnp
into
pop
sbb
push
dec
pop
arpl
aad
pop
xchg
out
inc
push
lods
jle
je
push
xor
unpcklps
test
cmp
or
pop
dec
arpl
mov
mov
and
sub
stos
and
ficompl
push
cli
mov
xchg
jmp
xchg
jbe
pop
ljmp
loope
xor
out
mov
incl
xlat
stc
data16
out
sbb
ret
imul
jns
mov
mov
push
adc
mov
cwtl
xor
aad
faddl
ljmp
cmp
xor
sub
cmp
pop
push
xchg
dec
cmc
cmpsb
push
fwait
orl
lahf
arpl
sub
dec
dec
pop
cs
and
in
mov
pop
negl
cmc
sub
jae
dec
dec
mov
push
jl
daa
mov
out
test
imulb
push
enter
inc
inc
leave
js
in
push
mov
sub
or
jle
daa
ss
lret
int
and
enter
testl
leave
xchg
push
mov
enter
lret
xor
inc
test
push
mov
stos
xchg
out
cmp
mov
pminub
pop
daa
pop
out
negl
cmpsb
or
dec
mov
mov
inc
icebp
aad
pop
xchg
out
ljmp
inc
fmuls
xchg
in
lea
clc
add
pop
out
arpl
std
inc
insb
mov
sub
hlt
and
cli
mov
mov
lds
jne
fwait
mov
jg
or
test
pop
aaa
fisttpl
pop
pop
aaa
or
nop
enter
or
push
dec
out
loope
daa
js
cli
popf
out
pop
dec
addr16
ds
and
adc
cmp
jp
in
and
mov
xor
in
sub
mov
jns
inc
xchg
lret
aaa
pop
out
outsl
cwtl
push
xor
inc
or
push
xchg
js
dec
enter
leave
mov
pop
cli
sbb
xchg
mov
movsb
push
sub
stc
mov
das
mov
mov
pop
cmp
loop
jns
sbb
mov
xchg
inc
adc
popf
cld
rol
xchg
movsb
adc
mov
mov
xchg
pop
mov
jmp
sbb
add
movsl
adc
cmpsb
cmp
jmp
std
sub
aad
idivb
mull
mov
pop
xor
mov
or
cmp
pop
insb
movsb
stos
pop
xor
xchg
cmp
sbb
in
adc
jne
pop
aam
mov
xchg
or
ss
idiv
pop
xchg
cwtl
fidivrl
aaa
cmc
sub
ret
and
xor
imulb
pop
pop
push
stc
das
stos
xor
mov
adc
push
adc
fnstenv
dec
cld
data16
mov
adc
sbb
sub
or
out
orb
fprem
dec
insl
stos
icebp
pop
hlt
test
dec
in
push
or
or
or
inc
or
shll
stos
push
hlt
imul
xlat
aad
xchg
mov
cmp
xor
or
lcall
adc
mov
push
aad
add
fadds
xor
jno
sub
jbe
in
ljmp
aam
push
jle
lret
sub
xor
mov
and
rol
out
ret
rcl
fcmovu
addr16
decb
xchg
popf
or
inc
dec
cwtl
push
es
mov
test
out
ficomps
pop
sbb
enter
dec
cmpsb
lret
lds
adc
add
mov
lds
negb
icebp
notl
dec
in
jbe
sub
xchg
aaa
xchg
enter
stc
cmp
pop
xlat
lahf
xchg
mov
test
xor
mov
popf
call
lods
mov
sbb
add
jmp
mov
dec
mov
out
mov
dec
fsubp
in
cmc
in
test
push
inc
dec
gs
fistps
stos
rcl
adc
pop
dec
je
xchg
or
es
andb
mov
fldenv
xor
enter
xchg
xchg
inc
call
xor
cmp
mov
xchg
in
popf
adc
call
movsl
sbb
xchg
xchg
int
sub
and
jo
cli
mov
mov
sub
xor
out
xor
sbb
push
mov
xlat
dec
call
adc
xor
ret
xchg
jp
rcrb
popf
sbb
pop
arpl
sbbb
inc
mov
cmpsb
in
movsb
aaa
and
jmp
insb
es
mov
pop
jle
in
das
popf
jns
jo
loopne
adc
out
and
pop
cmc
adcb
dec
cltd
leave
call
or
push
bound
dec
aaa
outsl
mov
or
into
fdivrs
pop
adc
xlat
mov
xlat
adc
sub
mov
cmp
es
fimull
imul
xchg
ret
fcoms
add
push
jl
jp
add
lds
jmp
in
lea
dec
add
sbb
repnz
push
cmp
xlat
or
xchg
cmp
or
arpl
push
mov
jecxz
xchg
outsb
xor
loop
sub
js
idiv
loop
or
sbb
mov
mov
sub
jg
mov
movsl
cmp
sub
cmp
jns
imul
ss
icebp
mov
adc
xchg
fwait
cs
andl
fisubrl
mov
icebp
sbb
and
mov
in
push
push
stos
inc
cmp
sbb
call
dec
lret
flds
pop
mov
mov
mov
xor
mov
sbb
in
daa
sub
cmc
and
adc
pop
jno
mov
adc
js
xchg
fadd
mov
add
xchg
mov
dec
lock
adc
testl
inc
out
mov
jmp
scas
mov
aaa
mov
insl
sbb
in
je
adcb
stos
dec
add
call
in
test
in
sub
cmp
ljmp
lret
das
mov
inc
and
or
fcmove
xlat
inc
push
loope
js
sbb
dec
andb
gs
sbb
call
rclb
lret
call
es
shl
xchg
mov
mov
imull
je
shrl
lock
je
or
fidivs
and
xor
cs
pop
xchg
fcomps
std
in
in
js
nop
cmp
xor
dec
or
nop
inc
push
cmp
test
clc
hlt
sub
sub
cmp
xor
mov
jmp
adc
shr
jb
out
push
aaa
pop
adc
push
or
in
push
fmuls
iret
mov
lcall
xchg
mov
jmp
xchg
imul
fwait
adc
or
rclb
dec
popa
aas
sti
inc
dec
xchg
cs
stos
stos
lcall
orl
mul
sbb
pop
pushl
insl
out
and
mov
or
cwtl
cltd
ret
cmp
cmc
push
out
xchg
je
or
lcall
fldcw
jmp
insb
ds
push
pop
ret
daa
dec
sbb
test
push
mov
or
out
fadd
mov
cmp
and
jp
add
or
mov
mov
aad
jmp
mov
jp
movsb
pop
les
fdivrs
out
mul
mov
stos
xchg
fisttps
or
fnstcw
xor
ficompl
rcrb
dec
pop
and
xchg
dec
loope
out
pop
push
jmp
xlat
cmc
and
fwait
or
cmp
hlt
es
movsl
dec
pop
add
mov
and
jle
mov
mov
in
aaa
or
xchg
mov
lret
cwtl
xchg
mov
jp
pop
iret
daa
or
ja
outsl
fstl
push
mov
fisubs
mov
mov
cmp
js
sbb
pop
xchg
fsubrl
pop
mov
stos
out
lea
xchg
pop
sbb
mov
popf
adc
mov
cli
ret
aad
or
dec
bound
in
jmp
mov
inc
inc
cmp
cwtl
adc
out
ljmp
xchg
cli
push
mov
inc
repz
test
fcoms
mov
out
xchg
pop
xor
rcrl
mov
cli
fisubl
inc
push
xorl
or
jb
cmc
ja
lea
push
push
sarl
dec
jbe
add
js
mov
addr16
addr16
ss
sbb
lret
pop
rol
push
push
push
sbbb
xlat
sbb
or
fldcw
push
pop
cmc
mov
cmp
xlat
push
notb
out
test
xlat
mov
les
stos
in
sbb
adc
in
push
popf
cmp
cmpsl
pop
mov
dec
imul
addr16
int
flds
pop
mov
inc
out
xchg
mov
adcb
mov
in
xor
sub
xor
xchg
cwtl
sbb
cwtl
test
gs
shll
adc
push
imul
push
outsb
test
cli
mov
adc
into
es
gs
ret
rorl
outsb
push
cmp
push
leave
dec
testb
test
pop
cli
add
xchg
out
andb
out
xlat
jp
mov
xchg
cmp
pop
addr16
fnstsw
shr
call
pop
ret
or
pop
idivb
stos
test
imul
cwtl
hlt
je
addr16
ds
test
jp
add
sti
and
xor
stos
jno
popf
sbb
pop
add
movsb
out
rolb
sub
fxch
repz
cwtl
in
aad
mov
xchg
jns
mov
jbe
jmp
or
std
cld
out
xchg
out
jmp
leave
iret
mov
fdivs
and
or
adc
cmp
lods
daa
mov
call
cwtl
int3
add
inc
roll
movb
mov
sub
mov
cmpsl
cs
fisubrl
and
pushf
push
inc
lds
leave
dec
sub
xchg
or
push
mov
sti
lahf
xor
cmp
dec
loope
push
adc
jo
pop
sbb
cmpsb
and
cmp
stos
test
lcall
loopne
add
test
fnsave
clc
int3
mov
mov
push
sbb
xor
xor
mov
popf
pop
mov
push
pop
es
clc
out
in
ljmp
mov
test
aaa
in
cmp
cmc
mov
xchg
cwtl
fldl
mov
sub
cvtps2pd
int
lea
test
mov
xchg
jp
sub
or
movl
and
test
pop
test
mov
aaa
lods
int3
dec
jecxz
dec
ja
imul
out
sub
mov
mov
xchg
adc
out
adc
pop
or
xchg
std
test
cltd
jge
pop
cmpsb
in
imulb
dec
mov
mov
sti
iret
rcrb
cwtl
imul
rcrb
dec
sbb
lret
icebp
mov
dec
jmp
test
push
aas
mov
cmc
dec
es
sbb
adc
xchg
pop
inc
scas
xlat
lcall
cmp
lds
lock
rcrl
in
jle
jge
enter
add
jno
jno
adc
sub
fsubrp
loopne
xchg
push
test
icebp
and
ljmp
sbb
mov
or
or
pop
add
pop
sub
shl
pop
fldcw
mov
or
std
push
adc
cli
cmp
out
jae
lea
hlt
ljmp
lret
or
imul
sub
stos
or
ret
sub
mov
test
movsl
mulb
mov
jle
or
ret
js
xchg
in
jge
aas
loope
addr16
mov
sbb
cmp
pop
imul
push
iret
cmp
xlat
rol
sub
testl
addr16
push
xchg
xchg
mov
sahf
notb
mov
lds
push
imul
pop
sub
imul
cmc
cmp
cwtl
mov
mov
jb
sar
dec
mov
pop
lret
xor
xchg
cwtl
in
daa
adcb
lds
jbe
sbb
pop
mov
jne
out
sub
out
inc
jne
cmp
cmpsb
xlat
xchg
jbe
mov
loopne
pop
or
xor
ljmp
mov
std
push
mov
mov
jl
mov
adc
aad
test
or
cmpsl
into
push
cmp
pop
mov
pop
inc
pop
test
cmp
mov
sub
sub
imul
mov
jg
addr16
mov
cmc
sbb
xchg
xchg
or
gs
push
les
test
xor
mov
xchg
push
clc
daa
enter
pop
sbb
push
sbb
mov
out
jno
out
scas
arpl
fmull
or
adc
xchg
jno
mov
mov
xlat
repnz
cmp
ss
mov
xor
mov
push
mov
cs
mov
movsl
aaa
rcll
insl
and
jp
mov
clc
add
push
dec
sub
add
xchg
and
roll
in
xor
mov
imul
test
dec
sub
daa
push
lret
mov
jmp
xchg
xchg
xor
ds
cmp
leave
dec
in
jmp
and
cmp
and
xchg
mov
mul
cli
xchg
mov
cmpb
ljmp
aam
shl
fcmovbe
lods
rol
call
lcall
sbb
mov
mov
sbbb
or
sub
in
and
push
cmp
out
movsl
test
jg
sbb
imul
imul
xor
lcall
mov
outsb
pop
xchg
inc
xchg
enter
repz
jmp
fsub
push
add
fwait
movsb
sub
inc
pop
jno
mov
jp
data16
in
int
out
iret
and
dec
inc
mov
dec
in
movsb
out
sbb
sbbb
dec
add
jp
sbb
pop
mov
roll
mov
sub
sbb
pop
lret
out
jl
dec
inc
push
test
and
sub
aad
add
fdivs
pop
add
cmp
gs
sub
aad
cmp
xlat
adc
mov
pop
mov
mov
mov
mov
mov
imul
hlt
ljmp
cltd
inc
pop
pop
or
or
xchg
jo
rorl
aad
idivl
or
pop
xor
aaa
cmc
or
test
js
test
cmp
mov
or
pop
fadd
pop
mov
call
dec
popa
mov
ror
cmp
mov
or
js
mov
push
cmc
jbe
lods
cmp
aam
aaa
fistpll
jp
pop
mov
fsub
sbbb
jb
mov
xlat
loopne
jbe
mov
sahf
xor
xchg
or
pop
rorb
pop
cli
mov
out
xlat
mov
dec
popf
rcrb
icebp
mov
sub
cli
mov
jmp
xor
or
dec
xor
imul
idivl
sub
cli
xchg
stos
pop
mov
cmp
sbb
testb
shl
les
addr16
ljmp
sti
jbe
inc
shll
sub
push
pop
dec
shl
add
cs
loop
inc
mov
out
and
icebp
and
xchg
fisubs
inc
roll
pop
jg
or
sbb
out
aaa
xchg
lret
and
enter
bound
stos
mov
cmp
pop
push
and
and
push
adc
in
xor
shl
cmp
mov
gs
mov
fistl
xchg
add
cli
mov
insl
clc
push
jp
call
xor
pop
inc
call
out
dec
sub
in
lahf
xchg
enter
test
nop
cmpsb
dec
sub
loope
lret
jg
mov
mov
inc
add
sub
int3
out
mull
stos
mov
mov
lret
addr16
jb
pop
aaa
or
mov
jne
mov
xor
lea
out
popa
adc
or
xchg
out
xchg
loop
inc
push
or
cmp
cmp
or
imul
aaa
mov
push
cmp
rorl
imul
lds
int
call
cmp
sbb
call
cli
sub
rol
dec
leave
shll
xchg
cmp
imul
inc
fdivs
mov
push
mov
cmp
jp
nop
out
mov
push
cmc
xchg
or
stos
push
mov
pop
mov
push
jp
or
sub
or
mov
imul
xor
sub
mov
out
sub
and
xchg
mov
or
hlt
daa
xchg
jg
mulb
in
or
cmc
xchg
mov
popf
jae
push
aaa
jno
testb
jg
call
and
mov
call
cltd
or
ss
je
dec
pusha
lret
push
mov
js
sub
lock
fcoms
in
aaa
hlt
sub
in
not
rcl
sub
adc
in
and
mov
inc
mov
xor
dec
nop
xor
lods
call
pop
cli
inc
cmp
lret
dec
or
inc
aad
jmp
xchg
cmpsl
aas
fldl
in
hlt
jno
test
stos
jg
sbb
mov
sti
cli
and
sbb
call
clc
and
inc
pop
and
adc
mov
dec
push
adc
and
push
inc
out
push
adc
ror
call
scas
repnz
imul
fs
call
ljmp
imul
into
push
xchg
pop
inc
addr16
cli
push
xchg
stc
stos
mov
cmp
ret
push
loopne
or
sbb
mov
xchg
clc
xchg
cmp
in
ret
insl
cmpsb
and
mov
xchg
cwtl
test
mov
enter
lea
mov
cli
mov
lret
inc
or
sbb
or
xlat
wbinvd
jo
sub
sub
sbb
fadd
in
cmc
js
int
xor
mov
enter
jbe
sub
fcoms
mov
data16
mov
cmc
cmc
clc
pop
test
ffreep
jl
fidivrl
jbe
je
xchg
push
xor
sbb
cmc
jge
out
inc
insl
js
sub
pop
mov
dec
mov
inc
frstor
push
out
aad
pop
pop
adc
stos
jmp
and
pop
pop
pop
jg
sub
sub
mov
out
inc
push
mov
stos
cmp
and
js
mov
outsl
call
mov
push
pop
scas
rcr
cmc
int
std
inc
pop
in
hlt
adc
cli
aaa
addr16
mov
cmc
or
push
add
je
fs
into
bound
mov
xor
xchg
ljmp
loope
ljmp
sub
pop
jno
fxch
xor
iret
pop
and
and
sbb
and
xchg
out
xchg
inc
scas
jnp
or
insb
inc
pop
adc
ret
daa
push
xorl
mov
sbb
mov
fstl
notb
jmp
popf
aad
adc
js
mov
aaa
scas
int3
out
dec
inc
cwtl
je
out
fildl
in
pop
dec
movsb
inc
cmp
fwait
dec
inc
add
dec
push
sub
push
dec
test
fldenv
daa
dec
push
jae
imul
or
or
insl
mov
push
dec
mov
mov
mov
add
push
inc
dec
sub
jbe
adc
sub
fstpt
outsb
lods
jne
inc
or
imull
daa
loopne
jno
leave
jbe
mov
and
imul
cmp
pop
pop
imulb
enter
mov
pop
adc
imul
or
sbb
movsb
test
stos
pop
jg
call
aad
mov
mov
lods
addr16
lds
or
cwtl
xor
mov
adc
dec
fcmovu
cltd
gs
lret
pop
add
dec
stos
cmc
js
xor
or
cmp
xchg
shll
out
jmp
xchg
and
mov
out
lcall
xor
dec
popa
inc
adc
test
dec
pop
in
inc
xchg
lods
daa
enter
addr16
add
xchg
out
sbb
fsubs
out
sub
aaa
adc
sahf
jnp
mov
xchg
mov
dec
jb
imul
xchg
xor
or
enter
xor
mov
je
mov
sarl
jno
add
jp
ret
xor
movsl
xchg
std
dec
xor
mov
adc
adc
dec
imulb
sub
lds
sub
stos
mov
loop
subb
test
mov
xchg
js
stos
push
sub
jns
negl
mov
icebp
push
pop
mov
call
lods
cmpsb
in
mov
xor
fwait
mov
ret
xchg
mov
clc
aam
or
enter
dec
sub
popf
cli
cmc
fwait
adc
push
lds
lods
pop
lea
aaa
adc
xchg
pop
and
popf
cs
or
or
lret
dec
jecxz
and
pop
pop
jbe
mov
cmp
rcll
adc
les
pop
xchg
js
sub
lcall
shlb
in
add
push
test
repz
mov
sbb
push
sti
fwait
aam
xor
inc
daa
stos
sub
fidivl
push
fistps
test
push
adc
enter
test
sbb
cmp
push
mov
fimull
lock
mov
aad
sbb
idivb
js
movsb
pushf
out
sub
or
fs
cmpsl
js
or
dec
out
mov
jns
mov
add
std
sub
push
jg
lcall
sbb
fimull
out
push
xor
fdiv
test
out
imul
pop
mov
aad
lret
sti
pop
push
sub
enter
xor
daa
jp
lods
sub
xchg
pop
popa
std
jge
sub
cltd
dec
stos
cmp
dec
cwtl
dec
xchg
int3
mov
or
cmp
pop
pop
and
jbe
test
in
xchg
imulb
xchg
divl
xchg
pop
jg
in
shlb
ds
lret
negl
fisubs
sbb
mov
addr16
lret
lret
mov
add
inc
fcoms
je
out
xlat
fistps
testb
mov
fldenv
jecxz
add
stos
int
push
repz
pop
xor
lret
cmc
fistpl
stc
sarl
clc
xchg
ljmp
add
imul
addl
or
out
cmp
cli
mov
push
jb
stos
lods
daa
je
mov
add
or
mov
dec
cmp
push
comiss
or
int3
push
test
mov
lcall
pop
ret
fimull
aas
in
roll
pusha
xor
enter
cwtl
or
clc
aas
dec
je
cmc
sbb
mov
dec
shll
insl
and
sub
aas
out
cmc
cmp
xchg
sbb
or
xchg
inc
push
or
xlat
gs
negl
dec
jg
ret
mov
sub
iret
cmp
clc
sbb
add
mov
jb
jo
or
cs
mov
or
pop
je
daa
dec
in
scas
mov
or
push
push
add
cmp
inc
mov
imul
sti
nop
jg
push
sbb
ja
outsl
jp
xchg
dec
dec
daa
in
test
mov
imul
int
stos
clc
dec
addl
popa
pop
jp
fs
lcall
mov
xchg
notl
or
fisttpll
pop
ljmp
cld
out
dec
sub
sbb
add
inc
fmul
test
xchg
popa
jp
sti
pop
pop
addr16
mov
call
daa
mov
stos
adc
cmp
mov
xor
test
push
push
das
mov
not
idivb
andl
dec
push
xchg
loop
lock
popf
mov
add
sbb
xchg
xlat
xchg
loopne
insl
add
lea
or
mov
sub
cli
out
sbb
mov
adc
inc
fwait
fs
jne
xchg
or
dec
mov
enter
pop
hlt
testb
sti
jg
jp
mov
mov
js
sub
loope
push
cwtl
add
lcall
mov
sub
mov
ret
lret
das
dec
dec
outsl
or
movsl
cmp
popf
shll
pop
lcall
leave
mov
xor
enter
sbb
jmp
pop
in
ror
push
fidivs
or
or
mov
adc
or
aad
rorl
add
adc
or
test
adc
mov
es
cmp
xlat
push
pop
dec
sahf
cmpsb
jp
dec
int
pop
adc
aad
jmp
loop
js
add
sbb
xor
mov
in
or
and
cltd
fwait
xor
mov
test
sbb
clc
dec
push
js
icebp
lahf
out
sub
xor
dec
imul
cwtl
add
stos
sbb
pop
dec
xchg
dec
mov
cmpsb
cmp
cmp
aad
or
loop
lret
in
test
mov
jmp
stos
xor
pop
cmp
cli
sub
and
pop
mov
aaa
jmp
enter
push
mov
clc
push
je
notl
jmp
imul
adc
mov
sbb
int3
inc
nop
inc
mov
or
imul
iret
cmp
pop
mov
scas
mov
imul
cli
cmp
pop
cltd
fildll
out
enter
add
sub
mov
mov
push
popa
in
loope
daa
imull
movsb
push
iret
mov
cld
cwtl
ljmp
lea
add
pop
jbe
or
add
sub
out
push
or
adc
jb
cwtl
jno
cmp
jns
call
add
notl
stos
sub
daa
push
rol
in
dec
dec
pop
pop
dec
and
adc
adc
aam
js
and
or
lcall
test
daa
or
call
adc
sbb
fs
imul
insb
jne
dec
adc
push
ret
sti
xor
out
fwait
out
sti
sbb
sbb
dec
dec
out
push
jmp
into
add
jp
addl
cwtl
lcall
jne
leave
lds
js
inc
test
mov
movl
leave
and
ljmp
push
inc
rclb
ds
dec
jge
addr16
test
sub
jne
dec
mov
adc
xor
stos
adc
lret
xchg
iret
cmpsb
addr16
outsl
jbe
fwait
aad
mov
stos
cmp
hlt
adc
jbe
rol
xchg
cmp
in
daa
out
es
inc
dec
push
in
lcall
jmp
xlat
in
testl
scas
xor
mov
in
xchg
in
ret
push
adcb
sub
mov
dec
inc
je
daa
sbb
fnop
neg
out
push
testb
sbb
insl
jbe
fimull
data16
sub
je
out
lds
stc
shl
xchg
jbe
jmp
js
adc
pop
test
popf
stc
sbb
clc
in
bound
test
xchg
fmuls
pop
mov
mov
pop
rorl
dec
cwtl
cmpsb
jg
in
repnz
ljmp
fiadds
add
mov
xchg
fs
add
fiaddl
adc
cmp
cs
push
xor
lock
in
push
clc
scas
dec
xchg
mov
xlat
imulb
test
add
mov
cmp
test
test
jmp
push
sub
or
dec
js
xor
out
xor
push
mov
out
pop
lret
sbbl
cmc
mov
in
enter
js
and
out
cmpsb
jae
or
sbb
les
pop
mov
aaa
jb
stos
and
int
daa
inc
add
imul
xchg
inc
sbb
adc
xchg
stos
push
out
xchg
and
stos
loop
push
xchg
xor
ljmp
push
inc
sub
sbb
out
popf
xchg
stos
cmp
mov
insb
dec
cmp
sar
mov
push
push
mov
push
movsb
xor
mul
or
dec
out
push
jbe
cs
pop
out
imul
test
out
out
imul
or
cmp
mov
add
add
xor
out
cmp
jp
insb
cmc
pop
ror
dec
les
mov
mov
in
imul
fdivrs
mov
scas
add
jae
jp
cwtl
arpl
addr16
or
out
xchg
mov
xchg
ljmp
sub
out
mov
out
mov
pop
or
xor
adc
jecxz
hlt
jp
sub
mov
idivb
in
mov
inc
ljmp
sbb
inc
clc
add
lds
mov
loopne
in
sarl
cltd
out
ljmp
dec
lds
and
push
xchg
and
daa
and
daa
sbb
sti
lods
inc
cmp
or
mov
mov
in
sub
cli
push
ljmp
mov
inc
fcoms
ret
loop
imul
adc
cmp
sahf
cli
sub
repnz
lret
shl
add
mov
int
call
and
dec
data16
xchg
adc
pusha
dec
fsubrs
rorl
adc
test
add
lods
call
cmp
cmc
js
divb
sbb
mov
int3
add
add
mov
sub
clc
shlb
out
aaa
ret
call
sub
mov
roll
jp
xchg
rclb
xchg
mov
popa
add
dec
in
inc
or
in
addb
adc
loopne
sub
xchg
loopne
jno
inc
mov
mov
leave
repnz
in
test
lock
xor
sbb
pop
clc
or
xchg
lcall
adc
aaa
jnp
stos
lret
mov
call
icebp
mov
or
hlt
notb
add
addr16
jp
mov
pop
imul
or
add
or
fsts
push
xchg
push
mov
push
cmp
mov
mov
out
sbb
lcall
clc
clc
dec
pop
imul
jmp
mov
clc
ljmp
clc
bound
lds
daa
pop
fcmovbe
dec
fstl
imul
xchg
daa
sub
scas
or
out
lcall
ret
mov
pop
sub
sub
cli
ljmp
inc
mov
cwtl
jno
or
pop
or
inc
mulb
lds
aas
test
fcmovb
das
aad
insl
xchg
adc
and
mov
cwtl
xchg
xchg
dec
or
dec
inc
cmpsl
xchg
int
pop
sbb
fsubl
dec
shrl
adc
push
sub
sub
stos
imul
test
cs
imul
xor
ficompl
out
push
cltd
mov
jno
cmp
in
adc
xchg
clc
out
and
lret
out
xchg
or
xor
fimull
out
orb
inc
push
gs
adc
sbb
test
pop
in
insl
call
lds
cs
negl
js
sub
out
rcll
mov
mov
enter
sbb
inc
or
mov
mov
and
aad
fldenv
testl
ja
adc
or
in
sub
xchg
sub
pop
call
mov
jp
neg
ljmp
enter
and
call
xchg
mov
hlt
hlt
jle
pushf
pop
out
mov
mov
or
pop
add
enter
mov
rcr
xchg
test
pop
fs
lea
je
cli
inc
lds
mov
out
adc
bound
ficoms
xchg
cli
inc
xchg
jp
jmp
cmp
ret
xchg
das
jns
fimull
js
stc
fst
cmpsb
bound
test
push
repnz
mov
daa
in
xor
cmp
xchg
icebp
icebp
test
fmuls
aad
inc
aam
cmp
and
aad
sub
sub
xchg
mov
inc
mull
mov
cltd
cli
fcom
push
xor
cwtl
mov
mov
jp
loope
jbe
xchg
test
mul
cli
jge
and
or
or
mov
cmc
jle
pop
popa
pushl
add
adc
jmp
lret
sbb
call
daa
sub
bound
cmp
dec
cmp
jno
mov
sub
mov
cmp
mov
jno
sub
mov
mov
xchg
or
or
daa
vmovsd
sub
testb
loop
fcmove
in
mov
xor
pop
or
fsubl
sbb
push
cmp
sarb
xor
sbb
fcoms
das
pop
inc
movsb
mov
mov
js
mov
xchg
xor
clc
mov
in
pop
test
xchg
sbb
xchg
fsubrs
fiaddl
call
dec
sub
add
xchg
mov
jp
mov
or
sbb
pusha
jo
jg
aad
repnz
xchg
adc
push
cwtl
das
push
jno
sarl
cmc
das
lcall
cmp
fadd
daa
and
rorl
sub
mov
push
pop
mov
jbe
icebp
mov
jp
imul
pop
mov
xchg
scas
popf
call
adc
sub
pop
dec
hlt
daa
mov
xlat
cmp
test
push
dec
xchg
inc
mov
mov
xor
adc
sub
xor
lcall
jle
jmp
mov
ljmp
in
ret
push
cli
jns
or
xlat
pop
cmpsb
dec
lds
jne
and
bound
and
ljmp
xor
pop
cmpsb
cwtl
out
inc
pop
dec
sarl
movsb
lahf
aad
sub
jg
or
jbe
push
mov
jne
sbb
idivl
sbb
lcall
mov
dec
ffree
iret
out
subb
mov
mov
cmp
ret
jp
sar
or
hlt
out
movsb
jmp
lahf
mov
movsb
xorps
mov
sbb
sub
dec
lcall
imul
mov
cmp
rclb
stos
mov
or
add
sbb
push
adc
js
jp
inc
xchg
fwait
call
dec
imul
ss
cmp
imul
jnp
inc
imulb
xchg
adc
pop
popf
sbb
push
adc
sti
or
fisubrl
xchg
pop
in
inc
mov
mov
rcrl
xchg
dec
in
insl
stos
in
mov
dec
std
pop
fcomip
popf
push
add
movsb
cmp
mov
out
into
pop
jp
or
dec
cmpsl
dec
mov
inc
cmp
shll
sbbb
mov
cmp
mov
dec
jl
jbe
sbb
mov
mov
into
clc
das
fs
push
and
jge
cwtl
call
in
add
cmpb
in
push
xchg
mov
and
cmp
cmp
cwtl
xor
popa
cmc
push
jp
mov
push
or
pop
cwtl
subl
xchg
pop
lock
jo
xchg
icebp
add
call
out
and
cltd
pop
mov
ljmp
mov
xor
movsb
daa
int3
xchg
and
imul
js
adc
test
mov
lret
inc
stos
jmp
subb
rolb
or
adc
lods
jg
sbb
test
mov
xor
push
pop
mov
pop
inc
push
movsb
sbb
negl
shr
out
je
ljmp
sbb
clc
mov
pop
dec
cmp
mov
lcall
mov
xor
cmp
mul
add
xor
and
lcall
jo,pt
push
out
notl
cmp
xor
out
mov
inc
test
es
xchg
xor
mov
adc
or
adc
pop
add
insb
mov
mov
inc
xchg
or
ss
xchg
jb
xchg
enter
stos
push
xchg
adc
fsubs
xchg
rorl
roll
adcl
or
mov
imul
mov
dec
lds
insl
dec
lret
js
jp
pop
out
orl
mov
pushf
mov
je
dec
xor
lds
test
sub
inc
js
fsubrl
push
daa
adc
inc
nop
cmp
cmp
or
push
imul
mov
pop
jmp
jmp
imul
mov
in
xchg
inc
cmp
xchg
xchg
cmp
fmul
dec
inc
dec
fmull
in
insl
jmp
hlt
cmp
dec
xchg
ret
sbb
inc
xchg
sbb
mov
lret
popf
jbe
imul
out
mov
stos
and
mov
dec
stos
pop
xchg
or
xchg
mov
daa
lret
xchg
xchg
dec
js
loopne
outsb
xchg
mov
sub
adc
pop
mov
fstpl
sahf
xor
bound
out
bound
addr16
inc
sbb
and
call
fisttpll
jno
sub
xchg
pop
cmc
mov
xchg
imul
cli
adc
and
add
mov
pop
cli
clc
sti
push
sahf
cmp
xchg
lds
add
dec
daa
push
xchg
js
je
mul
out
adc
jl
lds
lea
push
adc
xchg
lods
ljmp
aaa
imul
xchg
push
cwtl
cs
pop
xor
pop
xor
cmc
cmp
or
aaa
movl
pop
cli
addr16
clc
pop
inc
sub
das
dec
mov
push
push
lret
fists
dec
xchg
push
adc
xchg
cwtl
xchg
incl
fwait
dec
xchg
adc
rcrb
cmpsl
fwait
jae
imul
cwtl
xlat
sarl
mov
cmp
in
and
pop
fldt
aad
inc
frstor
lret
mov
or
cmc
lock
gs
mov
adc
movl
pop
dec
xchg
loope
ljmp
lock
xchg
mov
push
mov
xchg
jne
pop
mov
pop
xor
mov
fs
xor
adc
nop
xor
and
gs
mov
icebp
inc
xchg
adc
sbb
xchg
mov
popl
mov
pop
repz
dec
mov
dec
dec
xchg
pop
stos
scas
dec
lock
mull
jp
mov
jo
sub
mov
adc
xchg
mov
xor
cli
xchg
add
or
in
stc
fdecstp
sub
jle
sub
mov
or
imul
mov
cwtl
dec
xchg
into
xchg
outsb
sbb
fsubrs
test
lea
loop
cmp
mov
adc
or
mov
mov
jbe
divl
rolb
stos
daa
addr16
movsb
hlt
pop
inc
lds
mov
addr16
or
push
sub
add
push
rclb
sbb
cmp
and
jno
jg
inc
stos
adc
sub
testb
das
int
dec
mov
mov
push
mov
sub
dec
xchg
dec
aam
mov
mov
in
call
dec
idiv
add
cmp
ljmp
dec
repnz
inc
or
push
dec
je
and
aaa
cwtl
jo
fimuls
cli
aad
movsb
fdiv
add
pop
ret
sbb
dec
lods
dec
cmp
cmp
movsl
lret
int
sbb
xchg
inc
aad
mov
adc
sub
dec
cwtl
sub
sbbl
jbe
fstl
out
fists
cmpsb
mov
loop
cmp
lret
mov
jb
or
rcrl
cmp
inc
add
pop
shll
out
enter
js
insb
add
mov
cmp
out
es
adc
daa
push
pop
and
aaa
add
idiv
dec
fisttpll
or
dec
mov
sub
std
add
nop
negl
movsl
mov
call
pop
cwtl
add
sbb
inc
adc
jne
prefetch
xor
stc
out
jp
insl
dec
std
gs
sub
dec
mov
lret
jbe
pop
sbb
fidivrl
jb
and
daa
xor
std
adc
add
testb
lcall
sbb
mov
and
sbb
fcmovne
xchg
fsub
subl
or
test
js
mov
movb
xchg
shrb
jae
mov
popf
movsb
xchg
xchg
testl
stos
shll
jp
std
adc
xor
jae
test
xor
mov
test
xchg
add
dec
sub
ljmp
cli
out
or
imul
in
popa
div
xor
movsl
cmp
pop
jg
ljmp
mov
sub
enter
das
insb
jns
adc
aaa
sbb
push
ljmp
cmpsb
dec
mov
or
cmp
inc
or
movb
xchg
movsl
mov
fisubrl
lods
mulb
and
and
and
inc
mov
fisubl
in
roll
enter
js
test
add
inc
out
dec
lret
mov
push
lret
out
push
or
insl
roll
mov
add
pop
and
test
cltd
push
je
sbb
adc
lahf
aaa
inc
dec
cmp
inc
popf
fs
or
or
push
sbb
adcl
mov
dec
add
or
xchg
mov
fstl
rcl
fsts
sbb
outsb
cmp
or
pop
shlb
adc
push
and
mov
shrl
mov
adc
cmc
mov
cmp
enter
aaa
jae
pushf
push
mov
cmpsb
cmp
jmp
xorl
pop
dec
push
lds
jbe
lcall
hlt
cmp
and
movsl
bound
jp
in
cwtl
add
ss
cmp
and
or
call
add
mov
popa
jle
pop
dec
xchg
loope
adc
and
imul
fsubr
cmp
dec
dec
lret
sbb
je
xchg
xor
sub
test
xor
clc
enter
or
or
gs
xchg
loope
sub
pop
addr16
pop
sbb
xor
jbe
mov
sbb
movsb
dec
push
and
pop
clc
jp
pop
loope
and
stos
lcall
inc
sub
or
dec
int
push
shll
sub
xlat
mov
mov
add
sbb
jbe
jg
xchg
lret
xchg
jb
cmc
dec
mov
les
adc
xchg
clc
adc
popf
xchg
xor
mov
adc
sbb
pop
jp
mov
xlat
cwtl
inc
or
out
call
stos
test
mov
daa
mov
xchg
lcall
mov
stc
cmpsb
clc
shlb
dec
stc
pop
out
stos
aad
fcomps
dec
lcall
push
repnz
lcall
in
xor
out
test
ss
in
dec
or
xchg
lcall
std
addr16
shrl
scas
mov
insb
pop
adc
jp
js
in
mov
pop
pop
pop
inc
jb
sbb
xchg
fisubl
out
jne
imul
xchg
mov
sub
dec
stos
xchg
or
call
xchg
hlt
cmpsl
cmp
leave
fucom
loope
aad
cmc
fimull
imul
add
test
testb
clc
ret
fidivl
add
int3
sub
test
push
loope
aaa
and
or
test
ljmp
imul
cmp
dec
fimull
arpl
and
adc
sub
aad
daa
out
adc
cmp
jae
pop
dec
cmpsl
fnstcw
lds
ret
lds
push
xchg
or
xchg
mov
movsb
xchg
enter
popf
test
imul
cli
xor
enter
mov
aas
cmp
in
imul
lret
push
shr
call
popa
rcr
jae
popf
rol
and
cmp
sbb
sbb
sub
lcall
int
push
adc
test
xlat
pop
cmpsb
lds
ret
jecxz
xchg
repnz
dec
imul
scas
pop
mov
or
push
fwait
add
mov
mov
pop
addr16
call
inc
inc
mov
aaa
cmpl
xor
fidivl
cwtl
leave
and
testl
xor
sbbl
fmuls
lods
push
loop
outsl
or
rorl
ret
xchg
loope
xor
sbb
mov
mov
cs
aad
and
lret
push
dec
hlt
cwtl
jp
jno
and
dec
sub
pop
sub
push
or
adc
pop
lds
adc
stc
insb
cmc
ror
xor
mov
mov
punpckhwd
sub
sbb
mov
pop
loop
std
mov
fstpl
js
xor
cmc
imul
icebp
dec
xchg
ljmp
and
or
xor
call
rorl
ljmp
js
fnstcw
in
stos
sub
cmpsl
shlb
and
out
jmp
and
cli
in
leave
push
mov
test
mov
mov
adc
in
and
out
stos
mov
into
outsb
inc
pusha
jmp
imul
xor
xchg
xchg
pop
test
mov
and
cmp
and
outsb
mov
jmpw
cmc
nop
pop
dec
dec
ss
lret
inc
popf
push
gs
dec
sbb
xor
inc
and
subb
lds
cli
lcall
cmc
scas
enter
sbb
xor
adc
mov
aaa
test
mov
pop
push
andb
shl
andb
cwtl
jb
add
daa
or
mov
xchg
xchg
xor
adc
inc
out
push
in
or
fdivrs
and
mov
and
pushl
sarl
cmc
imull
dec
movb
mov
out
out
loope
ljmp
test
in
or
shrl
mov
jae
cmp
fidivl
xchg
push
xor
notl
daa
sbb
mov
or
cmpsl
mov
clc
fcom
in
jbe
mov
dec
js
rorl
sbb
icebp
xlat
idiv
movl
add
push
push
sarb
adc
jbe
push
rol
jmp
imul
push
mov
idivl
out
cmpsl
add
vcvttss2si
movsl
clc
cli
mov
in
dec
not
cltd
andl
cmp
cli
sbb
push
xor
sub
or
inc
or
xor
dec
adc
adc
xchg
adc
popf
cmp
or
pop
mov
scas
dec
mov
inc
jmp
insb
mov
test
jmp
jg
xchg
cli
or
in
dec
test
mov
sbb
or
pop
cmp
and
rcrl
out
xchg
and
lret
sti
or
popa
cmpsl
in
shrb
test
out
das
mov
loopne
pop
adc
pop
mov
test
sbb
dec
jb
out
mov
or
repz
jno
aaa
dec
sub
cwtl
pop
mov
add
mov
js
sub
cli
ror
or
lds
jo
imull
and
dec
cmp
jbe
cmp
sarl
mov
dec
cmp
cli
push
sub
in
je
daa
cmp
stos
jmp
inc
popa
test
in
test
cmp
fcmovb
sti
lods
mov
mov
divb
stos
in
call
adc
das
jno
int
out
aad
sub
sbb
inc
lcall
ret
cmp
ljmp
xchg
sub
push
addl
xchg
xlat
sub
sub
xor
push
clc
ss
cmp
shrl
add
xchg
sub
int
jmp
xlat
cmpsb
pop
mov
lcall
fidivl
test
daa
sub
subl
movl
xchg
mov
insl
andl
sbb
aad
cltd
mov
ss
pop
mov
cmc
cmp
inc
out
mov
es
jo
lcall
cmp
pusha
rolb
jne
popa
or
dec
in
rolb
aaa
test
mov
xchg
xchg
test
out
or
mov
mov
dec
fwait
and
mov
and
adc
sub
js
lcall
add
repnz
dec
popa
nop
xchg
sbb
subl
mov
xchg
jle
lret
jb
out
mov
fcmovbe
inc
cmp
cwtl
mov
or
test
cli
inc
mov
out
sbb
mov
dec
lods
mov
mov
push
pop
rcrl
dec
clc
push
std
push
mov
cld
and
pop
jge
fwait
sahf
xchg
and
int
lds
call
hlt
sbb
push
sbb
enter
fnstsw
mov
sbb
lret
enter
jecxz
push
std
mov
hlt
test
or
cmp
test
mulb
xor
gs
mov
inc
fmuls
cmp
xchg
lds
into
gs
mov
sbb
xchg
dec
add
sub
bound
aad
adc
ljmp
or
add
cwtl
adc
std
rol
ret
lds
mov
sub
or
mov
out
inc
mov
fsubrs
sub
jb
xor
cmpsb
in
hlt
aad
test
lcall
scas
in
add
mov
in
movsb
loope
test
ss
daa
push
ficompl
or
sbb
ret
sbbb
mov
adc
mov
popa
out
mov
mov
fwait
mov
enter
cltd
gs
orl
xor
xlat
pop
imul
mov
xchg
test
or
jns
int
add
inc
ret
push
in
lock
cld
popa
cli
xchg
or
fisubrl
pop
sbb
cmc
pop
jecxz
mov
pop
and
lods
inc
push
push
sub
mov
lcall
lock
sub
xchg
arpl
sbb
movsb
int
movsl
ret
jo
sbb
cwtl
xor
xlat
or
pop
mov
jg
jp
add
mov
js
jne
call
mov
xor
mov
lahf
test
or
push
leave
je
imul
add
nop
sub
xchg
cmp
jp
or
adc
fmuls
xor
pushl
xor
sbb
inc
push
mov
or
cwtl
push
mov
in
mov
push
bound
gs
pop
clc
aaa
push
push
and
xor
xchg
jo
repz
or
loop
cli
mov
pusha
ljmp
push
dec
stos
mov
cmp
add
cmc
je
mov
imul
or
lcall
aad
mov
xchg
aaa
rolb
ljmp
mov
sbb
aad
insb
pop
call
int
cmp
jae
push
pop
lret
dec
cmp
dec
inc
test
jae
enter
hlt
mov
xchg
fnstsw
dec
cmp
xor
pusha
xlat
and
xor
xor
xchg
lcall
and
call
xchg
xlat
cmc
test
std
or
push
mov
cli
addr16
jl
push
xor
cwtl
leave
cmp
push
shr
mov
popf
sbb
mov
pop
and
jp
divb
dec
sub
xchg
mov
xor
adc
idivb
xor
or
cmpsl
or
cmp
sub
test
aad
mov
loopne
orl
test
fs
out
adc
or
pop
dec
mov
jbe
lea
fcmovnu
jmp
adc
hlt
cmp
addr16
sub
cmp
aaa
lahf
fcmovnbe
sub
std
decb
pop
inc
ljmp
ret
hlt
or
mov
xchg
sub
jns
cmp
ret
imul
mov
flds
dec
or
je
pop
mov
inc
sbb
enter
sub
push
es
ret
mov
pop
cli
or
xchg
bound
cmp
leave
mov
popf
pop
add
mov
lock
lock
or
shrl
dec
mov
enter
test
ficompl
xchg
or
rcrl
or
and
mov
sbb
aad
test
js
and
xlat
fistps
mov
call
jbe
jno
js
sub
mov
test
insl
mov
push
out
sub
xchg
cvtps2pd
stos
lret
jge
add
dec
sbb
out
mov
mov
lcall
jp
clc
xchg
pushf
fwait
loope
and
popf
mov
and
roll
dec
cmp
ficomps
lods
pushf
scas
mov
adc
ljmp
add
enter
xchg
mov
dec
out
and
xchg
lret
lret
adc
push
imul
loope
jae
sbb
test
lret
pop
aaa
inc
xor
fsubrs
sbb
xor
xchg
ljmp
cmp
dec
ljmp
dec
cmpsb
clc
pop
inc
pop
enter
aaa
imul
xchg
or
aad
jl
ljmp
push
lret
and
testb
xchg
les
call
popa
sbb
mov
addr16
mov
xchg
test
cmpsl
inc
pop
ss
sbb
add
out
aaa
sbb
ficompl
xchg
ja
dec
cmp
adc
inc
inc
test
loope
daa
sub
or
mov
fisubrl
cmpsb
lcall
bound
or
fwait
add
adc
enter
cmpsl
fwait
dec
cmc
adc
aaa
test
insl
mov
in
pop
adc
mov
or
pop
add
ljmp
mov
hlt
or
pop
or
cmp
lret
push
adc
lods
lcall
dec
cltd
cmpsb
xlat
test
xchg
ljmp
pop
sbbl
mov
daa
pop
pop
testl
inc
xchg
fxch
flds
leave
jecxz
shrb
push
sbb
in
call
dec
dec
insl
dec
int3
xor
xchg
cwtl
lret
mov
pop
and
cmpsl
add
mov
ljmp
pop
mov
arpl
shlb
and
add
adc
or
adc
sub
ljmp
xchg
xor
adc
in
add
lret
sbb
insb
mov
add
imul
or
loop
push
xchg
and
int3
popf
push
dec
daa
lcall
or
adc
push
daa
xchg
lods
shll
xbegin
mov
push
jne
outsl
insl
cmp
pop
xchg
je
lret
pop
sti
pop
mov
cli
imull
stc
mov
dec
xchg
mov
push
cwtl
sbb
imul
sub
dec
dec
cltd
xor
cmpl
addr16
cmp
and
jp
cmp
or
cwtl
dec
mov
les
loope
xor
leave
loopne
fstl
cmc
jmp
popf
add
notl
fstpl
dec
pop
roll
cmp
test
movsb
dec
and
jo
js
in
jno
xor
sub
xor
mov
mov
or
ret
daa
mov
hlt
mov
idivb
mov
ret
dec
addr16
inc
clc
xor
sbb
lahf
adc
shll
cmp
enter
lret
jge
push
std
lret
or
jbe
jmp
sbb
mov
cmp
out
daa
dec
cmp
xor
mov
enter
mov
xchg
in
icebp
mov
mov
and
pushf
aaa
sub
jno
cmp
cmp
mov
cmpsb
or
lcall
xlat
or
cwtl
leave
cmp
lds
mov
and
imul
out
rclb
pop
cmp
or
sbb
or
cmp
cwtl
loop
or
pop
pop
and
inc
dec
and
xchg
aad
add
cmp
aad
mov
aaa
ljmp
imul
ror
ficompl
fldl2e
push
test
lds
mov
dec
push
jl
movl
cld
xor
loopne
xor
test
sarl
loopne
sub
or
inc
cmp
loop
pop
push
inc
lds
xor
add
clc
inc
jbe
cwtl
sub
cmpsb
lret
les
xor
lea
lds
movsl
xchg
testl
dec
sbb
or
sbb
insb
or
ret
cs
xchg
cwtl
pop
clc
adc
or
jp
es
mov
push
inc
mov
test
xchg
aaa
in
lahf
inc
test
xor
notb
push
rcrl
pop
mov
aaa
xchg
in
and
into
inc
addr16
stos
jg
mov
adc
jbe
gs
in
mov
pop
pop
xlat
js
pop
sbb
aaa
cmc
insl
adc
icebp
mov
mov
out
mov
pop
clc
aas
adcl
mov
pop
jmp
jb
dec
mov
xlat
cwtl
divb
daa
sbb
jle
scas
and
or
cli
sbb
outsb
out
mov
in
or
je
sub
jp
push
aad
out
loope
xor
mov
leave
outsb
test
push
jne
movb
xchg
out
or
lea
je
clc
movsb
leave
pop
jp
sub
sub
shrl
mov
and
or
out
xchg
mov
andb
or
or
sarl
cmp
fbstp
icebp
scas
cwtl
imul
xchg
in
pop
xchg
dec
xlat
lds
push
mov
jo
xchg
pushf
in
adc
hlt
sahf
jg
sub
dec
push
xchg
pop
push
fbstp
div
pop
ss
clc
mov
push
pop
xchg
dec
pop
sub
rol
je
lret
mov
icebp
xor
xlat
sub
cmp
cmp
sbb
shll
lret
rorl
cmp
adc
leave
andb
imul
dec
cmp
add
lcall
jp
xchg
enter
sbb
xchg
int
xchg
xchg
xor
fisubl
jg
xchg
mov
mov
sbb
cmp
out
pop
dec
aad
fimull
mov
lds
sbb
shll
xchg
ljmp
sbb
mov
loope
sbb
test
mov
inc
cli
push
fsubr
sub
cmp
aaa
cmp
stc
repnz
cwtl
mov
and
jne
and
xchg
shll
fnstenv
lss
sub
in
je
je
cmp
cwtl
ljmp
lret
testl
popf
test
addl
mov
push
xor
aaa
je
pop
sbb
cmpb
xor
test
cwtl
int
and
scas
shll
pop
shll
popf
or
cmc
mov
xorb
fcom
and
add
ljmp
stc
lea
imul
xchg
or
adc
out
pop
imul
popf
adc
mov
in
cwtl
in
shr
push
adc
dec
mov
outsl
and
in
pop
imul
in
lods
in
js
dec
jbe
rcll
loop
cmp
adc
add
or
xchg
lret
xchg
mov
or
in
fidivl
enter
pop
push
je
pop
cmp
fcoms
loope
or
movsb
dec
cmp
jmp
fsubrs
jg
mov
mov
xchg
sbb
sbb
or
sub
jne
enter
pusha
xor
cli
mov
daa
sbb
lret
sbb
mov
mov
sbb
scas
sarb
fidivrl
cmp
mov
aas
xchg
int
cmp
mov
mov
ja
mov
and
or
pop
dec
out
inc
push
xlat
out
xor
in
adc
data16
inc
and
or
fwait
ret
lds
lret
xchg
cli
xlat
clc
sti
out
pop
mov
in
xchg
stc
sub
lock
sub
out
or
js
repnz
cld
int
aam
mov
mov
nop
lock
xchg
movsl
hlt
shll
leave
mov
cmp
cmp
sarb
rcl
fnstenv
mov
lcall
inc
adc
or
or
xchg
push
bound
mov
fcoms
dec
lea
cld
loopne
jno
out
xchg
popa
xchg
stos
in
jbe
sub
rcr
sub
mov
mov
inc
push
loope
cmc
cmp
out
inc
push
int3
inc
mov
cltd
adc
dec
xchg
or
repz
sbb
cmpsb
aaa
fldcw
rcll
ljmp
leave
sub
mov
divl
je
aad
aaa
inc
cmc
popf
or
out
hlt
mov
pop
jl
ret
push
xchg
in
daa
bound
xchg
xchg
pushl
ds
cmc
bound
adc
jmp
shll
pop
pop
dec
mov
fsubr
lcall
cmp
dec
push
inc
inc
mov
sub
daa
xchg
dec
out
pop
aaa
mov
xchg
cmc
mov
cltd
dec
push
imul
stos
cmpsb
aad
adc
xor
ljmp
pop
cmp
or
jno
cld
mov
icebp
mov
cmp
push
rcl
xlat
stc
mov
push
adc
pop
out
cli
mov
pop
or
xor
sub
ret
js
mov
and
mov
pop
mov
sbb
popa
sbb
shlb
lods
adc
mov
push
fldenv
popf
cltd
sti
in
in
mov
cmp
xor
jns
sub
pop
ret
jp
aad
leave
mov
jae
andb
out
stc
cltd
in
mov
sbb
jp
dec
mov
iret
imul
mov
or
xlat
adc
cli
xchg
cwtl
mov
jo
enter
ss
testb
icebp
fildl
imulb
and
mov
out
jno
mov
mov
ljmp
dec
aam
filds
xchg
or
mov
pop
jo
loope
pop
mov
mov
sub
xchg
push
or
loopne
jb
xchg
xchg
mov
clc
or
xchg
cli
jbe
inc
enter
inc
subb
jns
stos
outsl
cmp
sbb
dec
shll
jbe
mov
sub
cmp
sub
fsts
xlat
shl
pop
mov
sub
or
or
jb
mov
cmpsb
sbb
jg
movsl
ljmp
fsts
mov
or
xchg
inc
pop
daa
dec
cli
xor
or
sahf
jmp
or
lock
inc
sub
repz
dec
or
imul
sub
xor
mov
addr16
loop
jno
xchg
ds
xchg
or
sub
push
add
sub
mov
and
mov
or
mov
clc
dec
mov
sub
inc
dec
imul
lcall
or
adc
jbe
sbb
aad
daa
or
out
sub
divl
xchg
shll
xor
dec
inc
xorl
lret
xor
or
outsb
in
mov
adc
sbb
xchg
or
dec
or
cmp
cltd
je
cmp
jmp
mov
xchg
dec
xchg
cmp
roll
test
xchg
gs
push
orl
addr16
mov
les
cmc
cwtl
push
js
inc
pop
cmp
and
sbb
push
push
add
and
lret
xchg
xor
or
push
sarl
sbb
sub
mov
mov
cltd
ret
negl
inc
mov
dec
mov
xchg
mov
and
or
pop
pop
push
xchg
rcrl
lea
or
mov
getsec
test
or
dec
loope
dec
push
loope
push
pop
fnstenv
xor
sbb
add
add
jbe
ror
lcall
add
ljmp
mov
scas
imul
or
inc
imul
and
andl
add
dec
lcall
cmp
mov
lods
jne
je
clc
lds
insb
or
mov
xchg
test
inc
jbe
and
fsubs
sbb
and
test
sbb
dec
or
out
testb
cli
clc
dec
sbb
inc
jbe
shll
cmc
stos
in
fnstcw
fidivrl
xchg
or
jp
pop
sub
or
ljmp
gs
or
out
pop
mov
pop
enter
xchg
nop/reserved
cmpsl
and
sbb
lods
faddl
lds
pop
xchg
xchg
xchg
mov
sub
repz
sbb
cmpsl
or
mov
gs
push
mov
mov
pusha
fsubs
lret
cmp
xchg
mov
idivb
adc
xor
shll
js
incl
or
add
iret
addr16
testl
mov
mov
jmp
add
movsb
mov
jl
cmp
bound
dec
pop
insb
aaa
or
inc
je
sub
jno
in
cmc
clc
sbb
mov
test
out
leave
iret
stc
xchg
add
imul
popf
dec
xchg
or
fcmovb
and
hlt
pop
movsb
pop
notb
dec
mov
clc
and
adc
or
add
pop
fimull
iret
mov
lds
lret
push
pop
mov
loope
fidivrl
je
orl
cmp
lret
mov
lcall
daa
or
out
sbb
dec
out
outsl
test
or
pop
ljmp
jbe
imul
jno
xchg
int3
addr16
jmp
mov
jb
sbb
xor
lcall
fldenv
push
movsl
cmp
pop
push
mov
or
pop
and
and
push
xchg
mov
or
jp
sbb
xchg
fiaddl
xor
sbb
or
xchg
test
adc
mov
in
cltd
cmp
xor
mov
leave
mov
jg
pop
sbb
shrb
mov
pop
test
enter
sub
jns
push
cltd
and
pop
cmp
mov
jp
frstor
clc
cwtl
mov
dec
insl
pop
in
add
pop
fadd
cmp
xlat
jl
popf
stos
sub
iret
cmc
mov
sbb
mov
mov
pop
imul
xchg
cwtl
mov
push
inc
ficompl
clc
aaa
or
xchg
mov
loope
xchg
dec
sbb
ljmp
stos
out
test
aad
ret
out
fstl
mov
lret
sub
mov
jmp
stos
ss
out
in
dec
inc
adc
jp
shll
lcall
adc
mov
add
lret
dec
mov
mov
xor
mov
dec
pop
pop
add
xor
lds
jnp
adc
cli
sbb
daa
cli
adc
imul
dec
xchg
mov
xor
mov
aam
xchg
fstps
or
mov
loopne
and
inc
sub
call
lret
fimull
or
jns
mov
cmpsb
cmp
sub
xor
movsb
cmp
sarl
sub
dec
int3
ja
jmp
xchg
mov
cmp
dec
call
xor
inc
int3
out
lret
sub
cmc
cli
xchg
xchg
mov
stos
imul
call
loope
pop
mov
xchg
mov
add
mov
mov
lcall
ljmp
sbb
stos
or
leave
adc
xor
adc
mov
in
xor
movsb
sarb
mov
addr16
adc
div
insb
sub
pop
or
jno
sbb
fsubs
lds
nop
ret
and
mov
aaa
cmpb
mov
or
roll
pop
mov
jmp
inc
push
and
pop
out
sti
pop
dec
adcl
testl
repz
xchg
outsl
pop
test
aaa
sbb
jp
sub
push
xchg
cmp
fildll
lea
push
mov
cld
cli
shl
or
lea
idiv
loop
jb
ret
hlt
add
pushf
loopne
outsb
mov
testb
inc
or
or
js
mov
mov
sbb
xchg
loop
xchg
test
dec
xorb
in
inc
sbb
sub
adc
clc
rclb
xchg
xchg
jnp
dec
or
dec
sbb
sbbb
pop
das
xchg
inc
dec
xchg
mov
mov
inc
adc
sub
push
jns
and
xchg
movb
xchg
cmpsl
xor
sub
xchg
xor
push
cwtl
lret
push
js
fs
push
cld
out
inc
add
imul
pop
inc
sub
sbb
jb
outsl
mov
sbb
adc
rcr
or
push
sbb
and
fimull
in
sbb
dec
dec
testb
ret
sub
xchg
pop
push
pop
lds
pop
xchg
das
and
xchg
mov
jae
sub
or
cmp
cwtl
cmc
int
jb
inc
mov
or
enter
imul
cli
js
orl
mov
imul
sbb
mov
ljmp
mov
inc
negb
xchg
jp
decb
addr16
test
les
mov
lea
or
xchg
add
fcomps
call
pop
mov
aaa
or
scas
sbb
sbb
inc
sub
cld
xchg
sarb
lret
sbb
xor
daa
jnp
mov
out
adc
shll
aaa
jg
daa
cwtl
call
cmp
ljmp
inc
lret
sub
ret
call
lods
mov
xchg
xor
mov
icebp
pop
mov
cmp
in
cltd
mov
negb
fs
dec
xor
rorl
ljmp
mov
jno
add
xor
ljmp
xchg
pop
sub
sub
test
js
mov
mov
or
insb
pop
loopnew
fsubs
or
inc
ljmp
mov
js
xchg
daa
test
sahf
dec
xchg
dec
loop
mov
and
sbb
daa
mov
cmpsb
lret
aaa
out
ss
in
sbb
rcrl
out
lods
jl
imul
pop
and
js
and
push
fadds
call
loop
cmp
cmp
js
in
adc
leave
jg
leave
pop
mov
cmc
test
mov
push
aam
movl
mov
and
sub
jmp
ret
sub
dec
cmp
lret
push
add
mov
xor
dec
xchg
sbb
sub
dec
mov
jp
add
sbb
sub
and
adc
xchg
and
xchg
and
adc
loope
call
sbb
lcall
idivl
cmp
cli
xchg
aad
fwait
fwait
mov
dec
mov
int
mov
mov
xor
notl
or
mov
dec
and
dec
vmread
mov
mov
mov
and
mov
sub
aas
and
icebp
xor
call
fsubs
in
sbb
adc
out
or
cmp
sbb
pop
test
or
inc
call
addr16
mov
pop
adc
mov
das
flds
test
out
movsl
cmc
divl
xlat
pop
dec
fnsave
cmp
dec
xor
xorl
add
test
cmp
cli
mov
stos
dec
cmp
xor
mov
pusha
stos
jmp
pop
mov
jl
es
lret
js
loop
out
cltd
cltd
mov
sbb
cmc
pop
fwait
jecxz
pop
adc
xchg
sbb
addr16
stc
arpl
mov
add
xor
jbe
add
jg
push
in
testb
addb
testb
fbld
or
lock
imul
cmp
sbb
or
mov
xchg
pop
inc
dec
mov
lret
adc
cmp
sub
sub
dec
jp
rcr
sub
dec
or
mov
out
and
clc
popf
jle
and
bound
sbb
push
mov
adc
or
pop
out
sub
lcall
mov
push
xor
adc
daa
cli
cltd
je
mov
in
mov
inc
inc
adc
out
iret
push
pop
pop
sbb
or
pop
call
movsl
add
and
js
divl
sbb
je
adc
sub
divb
fldenv
mov
in
mov
sub
xchg
int
and
inc
push
pop
cmc
lcall
dec
ljmp
fs
push
push
rclb
and
addr16
in
ret
fidivrl
adc
test
fdivs
int3
dec
ret
roll
addr16
mov
jmp
stos
add
mov
mov
test
pop
bound
inc
lods
inc
pop
inc
daa
xor
xchg
mov
jle
xlat
imul
or
or
int
mov
test
mov
test
xor
lret
inc
dec
stc
sbb
sub
xor
in
insl
cmpb
fisubrl
mov
ja
fildl
xchg
add
mov
in
out
or
jg
or
push
jno
push
xchg
pop
test
sahf
rolb
or
mov
push
lret
dec
in
mov
adc
mov
mov
sub
lcall
mov
and
xchg
jns
and
shrb
jmp
jmp
push
mov
les
cmpsb
clc
jb
and
dec
and
cmp
leave
lret
movsb
jmp
fcmovb
cld
adc
out
aas
mov
xchg
xchg
testb
add
in
fs
cmp
stos
je
out
lea
pop
xchg
lds
cmp
cmp
fcoms
sbb
sbb
dec
es
out
sub
das
sub
dec
fimull
mov
stc
and
sub
add
dec
out
add
lret
cmp
push
or
xchg
mov
push
mov
out
cmp
shl
mov
jbe
push
mov
adc
movsb
vmovaps
subl
fidivl
or
mov
xorl
pop
out
into
xor
adc
xchg
je
or
inc
cmpl
adc
sub
push
xchg
xchg
std
sub
in
jp
or
fistpl
cmp
xchg
xchg
in
jbe
sti
out
in
cmp
imul
daa
pop
mov
or
cli
push
sub
test
pop
ljmp
xchg
lret
mov
inc
imul
call
ja
hlt
pop
movsb
aas
out
les
je
cwtl
cli
cltd
and
movl
cmpb
clc
sub
mov
and
add
sub
sub
or
dec
ret
sbb
mov
pop
in
xor
cmp
repnz
cli
adc
out
adc
call
icebp
dec
cmp
pop
mov
lds
jmp
and
insl
mov
or
jbe
iret
dec
test
idivl
rorl
sub
add
push
mov
sbb
repz
iret
adc
je
jp
out
inc
js
outsl
or
ljmp
sbb
mov
out
adc
mov
mov
dec
adc
jp
pusha
push
loop
lcall
fiadds
in
loope
mov
pop
add
or
xchg
pop
addl
inc
xor
and
and
insl
cmp
loope
cmp
enter
adc
mov
stos
xchg
cmpb
fildll
xor
xor
sbb
jne
lahf
idiv
jg
push
and
mov
mov
or
movsl
in
pop
mov
outsb
pop
stc
aad
jge
enter
jo
fdivr
pushf
pop
push
jecxz
or
push
xchg
popa
pop
sbb
cmpsl
leave
fldcw
ljmp
mov
pop
mov
mull
ljmp
sbb
sbb
insb
movsb
cli
add
je
test
movsb
push
pop
xchg
xchg
xchg
out
sbbl
loopne
xchg
out
ret
data16
or
mov
movsb
call
dec
je
mov
inc
icebp
jbe
sahf
ljmp
popa
adc
lcall
test
dec
cwtl
add
pop
in
or
dec
push
mov
or
mov
cld
mov
clc
loopne
mov
mov
inc
xchg
call
ficoml
cmp
daa
mov
aad
lods
std
in
test
jp
orb
sbb
mov
ja
int3
pop
mov
out
pop
imull
test
daa
aaa
cmc
push
mov
pushf
sub
std
stos
lahf
shlb
xor
jmp
iret
xchg
fimull
sbb
gs
cmp
not
out
incl
ja
jg
or
imul
js
test
jbe
mov
ljmp
sub
pop
jmp
inc
idiv
out
jbe
add
addr16
ljmp
inc
enter
je
xchg
jne
adc
lahf
adc
sbb
loope
or
call
mov
fidivl
dec
lods
dec
popa
adc
out
sbb
adc
or
in
pop
or
daa
mov
stos
loope
pop
or
in
pusha
xchg
sub
xchg
pushf
xor
in
mov
mov
xchg
loopne
mov
ror
aaa
cltd
push
cmp
test
adc
xchg
js
leavew
jmp
sbb
xchg
leave
sub
repz
xchg
sub
daa
movsl
lds
sbb
jp
mov
andl
out
cmc
inc
movsb
xor
aad
jne
stos
cmpsl
xorl
mov
ret
xor
or
and
xchg
pusha
jne
js
movsb
pushf
idivb
sbb
jp
mov
lock
out
mov
hlt
push
sub
in
push
xchg
sbb
and
mov
daa
add
lods
cltd
jnp
sbb
xor
sbb
pop
or
jmp
cmp
fs
inc
ljmp
das
lret
push
xchg
xor
fsubs
int3
or
push
or
jecxz
testl
shrl
add
or
lret
mov
fwait
int3
xchg
add
xor
test
flds
mov
loopne
sub
pop
mov
xlat
fcomps
lcall
out
enter
mov
mov
icebp
xchg
stos
xchg
xchg
sub
dec
mov
dec
pop
ljmp
push
xchg
lahf
mov
jg
jp
cmp
cs
mov
movb
in
dec
add
dec
inc
lret
cmp
sub
mov
sbb
pop
sbb
cmp
xchg
pop
aaa
pop
arpl
and
xchg
cmp
or
in
je
mov
icebp
in
aaa
js
jg
mov
cli
negb
fucomp
inc
adc
mov
or
mov
and
dec
xlat
cli
adc
test
sub
push
xchg
mov
lods
pop
pop
loopne
subl
dec
call
mov
mov
add
rcrl
xlat
and
xchg
xchg
test
fdivrs
xchg
ljmp
enter
sbb
int3
notb
clc
in
out
imul
dec
fadds
lds
pop
popa
movsl
hlt
xlat
sbb
and
mov
cwtl
xchg
bound
pop
jo
loope
clc
xchg
mov
cmp
cli
loopne
scas
xorb
xchg
cwtl
mov
lret
js
mov
or
sub
dec
mov
repnz
out
out
mov
xlat
clc
jg
aaa
pop
test
dec
mov
popf
mov
mov
mov
inc
xlat
daa
push
mov
sub
cmp
ljmp
imul
jmp
inc
pusha
add
mulb
mov
out
inc
push
adc
mov
test
lds
fcomip
jno
dec
test
imul
mov
loopne
stc
xorb
and
ret
pop
dec
dec
mov
pop
xchg
mov
daa
call
imul
into
xchg
lret
sbb
jg
imul
adcl
imul
push
xchg
or
clc
mov
lcall
mov
dec
mull
sti
add
mov
cwtl
xor
rol
push
add
sbb
push
mov
pop
mov
div
jns
xchg
in
mov
mov
xor
aam
js
lcall
pushw
je
fwait
call
fwait
and
sub
sbb
sub
fs
mov
leave
cmp
cmpsb
dec
or
cmpsl
mov
mov
sbb
pop
fwait
repnz
mov
cmc
stos
lahf
stos
push
iret
adc
jns
imul
in
cmp
lahf
ljmp
in
add
cmpsb
sub
xchg
push
mov
mov
pop
test
sub
xor
lret
hlt
mulb
popf
aaa
mov
shr
fildll
std
and
les
pop
mov
push
or
sbb
bound
adc
jno
sbb
cmp
fidivl
addr16
sub
std
pop
mov
loope
out
insb
mov
mov
lret
movsb
es
and
jmp
dec
xor
out
pop
fcomi
in
outsl
js
out
mov
cmp
out
daa
sub
fadds
sub
dec
xor
dec
dec
pop
fmull
testb
cwtl
in
add
push
inc
je
cmc
lcall
lds
mov
addr16
test
fsubrs
mov
dec
sbb
or
and
xchg
xchg
xchg
inc
mov
xchg
dec
in
jne
cwtl
hlt
adc
inc
and
xor
sub
aaa
lcall
pop
dec
lock
mov
pop
cmpsb
cwtl
test
mov
aaa
lds
mov
adc
mov
jno
popf
testl
in
mov
xchg
sbb
ljmp
mov
daa
fnstsw
arpl
mul
mov
jl
enter
mov
js
test
cmc
xchg
int3
cltd
cwtl
enter
fimull
push
insb
pop
aad
cmp
xchg
fisttpll
test
sbb
sbb
cltd
xlat
or
mov
xchg
sub
xchg
add
or
mov
sub
add
inc
movsb
cmp
js
leave
pop
cmp
xchg
stos
push
jp
mov
jnp
push
and
dec
sbb
ds
cli
mov
jno
push
je
add
sub
adc
enter
adc
or
cmp
test
jmp
pop
xchg
pop
adc
movb
in
cmp
push
fld1
lods
mov
adc
movl
out
mov
ss
stos
sub
mov
xor
dec
aaa
es
sub
mov
push
mov
sarb
bound
xlat
pop
lret
insb
out
in
dec
sbb
add
mov
sub
stc
pop
stc
test
sub
inc
imul
sub
adc
out
or
aaa
in
loope
stos
jp
add
pop
sbb
cmp
cli
fdivs
adc
mov
or
stos
push
xchg
clc
es
ljmp
fcomps
inc
bound
fcmovbe
js
sub
ljmp
xchg
mov
dec
lret
jle
pop
cmp
mov
sbb
mov
add
cli
or
and
sbb
std
or
in
xchg
out
and
cmp
or
sub
bound
cmpsb
subl
mov
inc
enter
xchg
jl
mov
js
fst
loope
or
mov
call
in
fs
add
je
dec
fs
mov
in
cmc
lcall
mov
shrl
into
pop
pop
ret
aas
adc
dec
and
test
fadds
cmc
rorl
mov
sti
fcoms
add
pop
pop
loope
imul
add
push
cmp
enter
and
in
pop
pop
sbb
shl
sbb
loop
or
fimuls
cwtl
imul
mov
adc
lcall
mov
mov
cmpsl
xchg
sub
push
xor
xlat
xchg
sub
test
mov
lods
xor
jns
xlat
dec
or
mov
lea
cmc
in
pop
leave
push
push
out
cmp
clc
popa
jae
leave
inc
add
das
je
add
sbb
cmp
out
mov
adc
pop
mov
cli
mov
pushf
in
xchg
mov
movb
lret
cmp
mov
pusha
dec
xor
or
lret
fidivrl
test
xchg
mov
add
call
lahf
das
push
ret
cmpsb
lcall
mov
mov
scas
enter
or
mov
sub
dec
mov
movsb
fwait
lret
jmp
jne
sbb
fadds
pop
adc
xchg
cwtl
mov
or
aaa
or
mov
xchg
rorl
pop
xchg
dec
xchg
sbb
sub
inc
dec
xchg
in
inc
in
add
mov
lcall
dec
mov
orb
aaa
jmp
icebp
sbb
test
ret
mov
cmp
mov
xchg
sti
ds
pop
in
dec
leave
jg
outsb
pop
call
dec
std
jg
test
or
sbb
out
push
insb
push
repz
cmp
xchg
jg
xchg
and
ja
xchg
xchg
mov
inc
frstor
jns
fistpll
dec
mov
add
push
fisubrl
mov
sbb
dec
mov
jp
push
or
jno
div
cmpb
adc
or
sti
xchg
syscall
lcall
push
cmc
fcmovb
push
jge
arpl
pop
adc
and
and
xchg
xor
or
jne,pn
xchg
in
test
jbe
cmp
cmp
cmc
jl
sub
dec
jmp
jae
sbb
add
je
shl
sub
add
cli
mov
or
sub
mov
xchg
lcall
loope
or
xchg
xchg
push
lds
aam
stos
inc
or
pop
cmp
loope
and
in
fdivrl
xlat
test
xchg
xlat
out
scas
push
jmp
fsubl
std
ret
xchg
adc
or
fistpl
or
mov
mov
push
out
outsb
daa
out
cmp
mov
loope
mov
mov
xchg
shrl
or
lcall
sub
cmp
test
dec
cmp
or
fistps
sbbb
mov
or
cltd
add
dec
fiaddl
xor
xchg
out
sbb
test
sub
sub
cld
dec
movb
daa
jno
lods
aas
ds
es
loope
jp
cmc
jbe
xchg
js
orb
imul
cmp
enter
in
fwait
cmpsl
out
test
mov
movsb
sub
repnz
add
xor
fstl
cmpb
or
daa
mov
add
or
mov
aaa
outsl
adc
dec
adc
pop
jl
mov
mov
xchg
add
fidivrs
mov
sub
mov
sbb
aaa
stos
mov
sbb
dec
or
xchg
cmp
inc
add
or
scas
jg
mov
pop
outsb
cmp
jae
add
xlat
aad
xchg
or
mov
mov
add
dec
stos
mov
mov
pop
test
aad
mov
das
je
loope
pop
xlat
loop
cmpsb
jmp
call
jne
loop
pop
pop
sahf
mov
sub
insl
cwtl
sbb
stos
lret
mov
in
sub
out
mov
pop
xor
push
cmp
call
mov
in
inc
subl
in
push
mov
push
aad
outsb
or
xor
sub
mov
dec
xlat
inc
aaa
or
pop
stos
jne
mov
stos
jno
push
sarl
fs
pop
adc
inc
stc
or
lret
in
sarb
pushf
testb
je
xchg
dec
mov
pop
fdivrl
testl
sub
push
cmp
fwait
jne
cltd
rorl
or
cwtl
orl
pop
and
mov
out
dec
stos
sbb
adc
dec
xchg
xlat
mov
cli
mov
push
bound
mov
and
or
movsb
shr
pop
testb
fisubrl
inc
dec
icebp
dec
call
adc
pop
push
inc
call
xchg
mov
sub
push
or
addr16
sub
lcall
or
fwait
sbb
xchg
or
push
repnz
push
js
adc
mov
jbe
jae
or
sub
cs
dec
mov
js
dec
into
cmp
cmp
sbb
hlt
out
cltd
xchg
or
lock
lcall
dec
pop
enter
rolb
and
push
sub
pop
bound
push
lods
and
lret
jo
mov
in
cmpsl
popa
mov
sub
lcall
push
in
pop
sub
xchg
inc
inc
push
cmp
ss
lds
xor
xchg
out
xlat
cmp
mov
mov
jp
hlt
sbb
pop
je
sbb
mov
out
sub
dec
mov
sub
xchg
sbb
cli
std
ljmp
popa
adc
xchg
xor
cmc
stos
sarl
int
int
mov
daa
push
inc
ficoml
pop
dec
test
test
je
stos
jmp
and
ss
xchg
testl
xchg
xor
mov
push
inc
mov
cmc
cmp
cmpb
dec
pop
bound
inc
leave
dec
pop
icebp
xchg
xlat
mov
out
pop
imul
or
lea
push
scas
sbb
pop
xlat
and
ljmp
xor
sbb
pop
adc
pop
adc
cwtl
sub
inc
aas
in
push
in
and
or
cmp
ficompl
xchg
imull
xchg
lcall
mov
mov
addr16
adc
test
cs
inc
imul
lea
ljmp
jbe
pop
fcomps
xor
lcall
sbb
or
pop
jae
fmuls
mov
mov
leave
lds
bound
mov
hlt
ljmp
lret
flds
sahf
rolb
sub
sub
mulb
stos
lods
adc
jmp
out
jbe
dec
sub
or
mov
mov
jl
cmpsl
inc
sarl
xchg
mov
call
push
cli
jbe
out
adc
imulb
jp
cmp
lret
std
jmp
mov
push
js
cmp
mov
sbb
dec
mov
pmovmskb
mov
cli
pop
or
sub
jmp
mov
inc
mov
stos
enter
mov
sub
imul
lret
jle
dec
and
add
repnz
cmp
int
jbe
sbb
pop
cmpsl
lcall
stos
fisubrl
and
xchg
xchg
decb
cwtl
testl
pop
movsl
inc
call
xchg
jmp
inc
pop
xchg
cmp
push
or
js
hlt
clc
ljmp
call
or
fmuls
stos
jle
in
xchg
pushf
ljmp
lods
and
cwtl
cmc
cmp
xchg
in
xchg
mov
cltd
sbb
fsubr
mov
movsb
jno
adc
in
leave
sbb
jp
mov
mov
cli
mov
enter
mov
cmp
test
std
cmpsl
subb
or
mov
xor
and
out
js
xchg
je
bound
ds
cmp
push
stc
cmc
clc
rorb
sti
fstpt
stos
shll
sub
sahf
pop
push
movl
mov
sub
es
imul
push
call
add
dec
notb
stos
sub
sbb
jmp
add
in
popf
pop
divb
out
xchg
call
dec
pop
mov
fsubrp
inc
fsts
dec
dec
pop
mov
rcl
clc
pop
aaa
fstps
daa
lds
movsb
xchg
mov
xchg
orl
mov
or
xchg
jbe
inc
lds
sub
fidivrl
and
xor
lds
in
das
notb
sbb
sti
or
jg
fimull
or
js
imul
leave
jl
jmp
out
or
jo
mov
pop
data16
mov
data16
loope
lret
cmp
popf
imul
or
roll
cmp
enter
stos
out
cmp
notl
je
fdiv
pop
cmp
leave
xchg
add
pop
mov
mov
pop
xchg
fisttpll
or
decl
xchg
mov
sbb
cmp
sbb
cmpsb
mov
addr16
xchg
xchg
mov
movsb
cmc
or
add
inc
pop
or
scas
mov
xchg
add
xchg
mov
dec
outsb
xor
out
dec
adc
cli
into
pop
out
adc
mov
or
xor
mov
cmc
or
stos
adc
daa
dec
outsb
ret
out
hlt
imul
xchg
xlat
push
jb
movsb
xchg
xor
imul
and
or
mov
xchg
pop
push
mov
lcallw
cmp
clc
ret
cwtl
in
mov
jg
ljmp
cmp
or
mov
sub
mov
test
dec
mov
mov
xchg
add
dec
xchg
cmp
clc
cmp
push
sahf
andb
mov
test
out
out
sbb
or
xchg
cli
sbb
adc
mov
xchg
lahf
dec
pop
cli
hlt
out
and
rcrl
xchg
add
lds
push
sbb
lret
repnz
in
jns
mov
adc
mov
mov
push
hlt
js
inc
and
and
mov
cltd
dec
test
gs
or
jmp
xchg
cmp
rolb
imul
or
xchg
lds
daa
inc
push
les
jb
mov
iret
popf
cmpsl
cmc
orl
cwtl
insl
je
imul
mov
cmp
icebp
sbb
addr16
xchg
add
adc
pop
subl
xor
or
cmpsb
clc
sbb
in
jns
addb
subl
jne
adc
dec
inc
dec
insl
or
in
push
pop
mov
mov
add
mov
jmp
addr16
xchg
sbb
pop
nop
sbb
loopne
mov
out
cltd
rcrb
daa
add
jmp
sbb
xchg
ljmp
mov
dec
xchg
mov
dec
or
fimull
cmp
fdivr
xchg
mov
and
or
push
rcll
stc
jle
in
out
test
pop
mov
jbe
adc
xchg
fcoms
repnz
xchg
mov
cwtl
hlt
jne
loopne
cltd
mov
mov
rorl
lcall
pusha
std
dec
int
daa
lahf
jae
imul
sbb
dec
adc
xor
cmp
adc
cli
loop
mov
add
icebp
pop
cmc
pop
test
ret
sub
rcl
xchg
pop
push
or
ss
pop
add
cmp
xlat
aaa
subb
out
or
adc
sub
lret
push
push
ficompl
incl
imul
lds
in
sbb
and
hlt
push
mov
jp
scas
testl
jbe
outsb
js
mov
nopl
sub
mov
pop
je
inc
mov
sub
sbb
mov
cmp
and
inc
mov
xchg
lcall
xchg
mov
add
inc
imul
mov
jno
inc
adc
xlat
push
mov
ds
int
inc
jb
cwtl
cmp
push
pop
mov
lret
daa
xor
cltd
push
add
fidivrl
sbb
out
out
lods
sbbl
xchg
dec
xchg
icebp
js
xchg
xor
cmc
aaa
cltd
mov
mov
ljmp
xchg
pop
enter
es
fsubs
sbb
dec
rorl
and
shrl
xlat
enter
mov
cmc
push
lcall
mov
movl
js
addl
iret
xchg
fiaddl
enter
cli
xor
cltd
lret
clc
out
sub
mov
xchg
pop
xor
sub
out
dec
test
aad
pop
jg
enter
push
out
loope
cmp
fiaddl
xor
add
mov
sub
pop
idiv
es
cmp
or
sub
cmp
imul
sub
mov
ret
lcall
adc
cmpsl
cli
dec
fwait
dec
lods
dec
cmc
or
or
pop
stos
inc
sub
cmp
out
adcl
or
xchg
js
call
xlat
mov
or
dec
xchg
cmp
inc
ljmp
sahf
popa
psubsb
xlat
int
in
mov
inc
in
popf
outsb
sbb
adc
loopne
adc
inc
call
mov
sub
xlat
inc
mov
in
sbb
xchg
sbb
xchg
add
arpl
mov
aas
cli
mov
cmp
adc
mov
cmp
test
pusha
notl
xlat
sbb
or
cmp
out
loopne
jmp
sub
es
test
mov
xchg
or
xchg
addl
mul
stos
adc
add
mov
sub
out
pop
cmp
negb
cwtl
ds
mov
and
cwtl
mov
pop
xchg
or
xchg
test
fstpl
or
imul
mov
enter
inc
sbb
sbb
xor
or
bound
jp
and
sbb
push
mov
push
adc
scas
out
add
les
inc
jbe
cmp
rorb
and
mov
pop
cltd
mov
mov
sub
sub
loope
jp
js
std
push
fcmovb
mov
pop
fmuls
cs
fdivrs
aas
cltd
pop
cli
dec
xor
xchg
lea
repnz
xchg
adc
mov
pop
das
fiaddl
inc
or
dec
cmpl
out
or
and
push
cmc
xor
cmpsb
in
icebp
out
fmuls
fimull
dec
js
sbb
imul
out
pop
gs
or
lret
out
xor
cmp
or
cwtl
dec
xchg
movl
pop
lock
jp
ljmp
test
js
lret
imul
test
or
pop
cmp
addr16
xor
mov
lcall
sub
jb
mov
xchg
popa
pop
xchg
pop
es
mov
in
lods
push
jmp
xchg
out
addr16
pop
inc
sub
cmp
mov
rolb
sbb
lahf
cli
or
leave
xchg
lods
in
sub
push
imul
xchg
mov
mov
orl
dec
loopne
and
je
xchg
insb
and
and
call
mov
test
inc
mov
popf
fwait
xchg
bnd
test
xlat
arpl
add
pop
fisubs
sub
jbe
out
xchg
out
sub
cmc
add
cli
js
and
and
aaa
xorb
mov
dec
les
xchg
pop
xchg
pop
addr16
sub
xor
sbb
shlb
cmpl
sub
add
popf
dec
mulb
out
fwait
stos
xchg
je
xchg
call
push
movsl
cld
inc
xchg
cwtl
jmp
adcl
out
xchg
pop
pop
jg
fisubrl
mov
mov
jp
dec
mov
or
sbb
mov
pop
xchg
cli
add
imulb
inc
in
mov
lods
xchg
in
hlt
xchg
rorl
xor
aas
mov
cmc
cmp
cmp
and
or
and
insb
dec
xor
lods
stos
pop
out
out
fldenv
mov
inc
shlb
lret
xchg
cs
mov
sub
out
fs
pusha
inc
aad
aaa
lods
call
sub
or
mov
out
dec
push
cmpsl
jg
xlat
inc
jge
dec
clc
cmp
xor
mov
test
notl
sub
or
bound
jp
out
dec
in
in
inc
imul
je
aad
notl
aaa
jl
daa
lcall
inc
push
movsl
xor
addr16
xor
pushf
add
pop
daa
ret
pop
mov
xchg
jmp
and
inc
pop
dec
add
xchg
sub
lcall
xchg
bound
jbe
lea
mov
cli
jp
cmp
mov
add
sbb
lods
xchg
movsb
adc
mov
faddl
rorl
aaa
cmp
cmp
pop
test
aad
lret
in
push
ret
jl
addr16
jno
mov
clc
xchg
pop
imul
and
in
pop
stos
mov
rol
xor
cmp
notl
xlat
push
mov
loope
pop
jbe
or
dec
notl
mov
call
dec
xor
add
sub
loope
ficompl
enter
aaa
jb
pop
mov
ljmp
ljmp
cmp
mov
mov
fisubrl
sub
sbb
or
push
and
daa
or
in
pop
xchg
jmp
add
mov
mov
cmp
and
xor
fdivrs
inc
xchg
dec
add
test
orb
inc
cwtl
popf
cmpb
cmp
xchg
dec
mov
or
loopne
mov
inc
cli
pop
daa
sbb
sub
enter
xchg
call
mov
push
clc
pop
sub
aad
mov
in
mov
cmp
test
fadds
pop
xchg
popa
aad
inc
out
xchg
loopne
mov
push
mov
dec
pop
je
aaa
js
add
cmp
loop
addr16
loopne
pop
testb
addr16
add
movsl
stos
scas
into
mov
pop
adc
and
add
bound
scas
cmpsb
mov
mov
aad
cwtl
pop
or
inc
hlt
in
les
push
sbb
xchg
xchg
je
divl
idiv
fwait
scas
pop
insl
pop
leave
mov
inc
mov
add
sub
xor
pop
mov
call
or
outsb
in
and
cmpsl
mov
mov
xchg
popf
stos
xlat
jp
add
push
pop
pop
and
mov
movsb
xor
imul
out
cltd
sbb
and
jb
and
xchg
and
adcl
add
jbe
or
ljmp
xchg
xlat
pop
iret
cli
xchg
push
testl
xchg
pop
hlt
cmp
sbb
push
les
pop
sub
aaa
mov
xor
repnz
ja
dec
mov
mov
mov
jbe
roll
in
or
pop
mov
xchg
and
out
fidivrl
mov
dec
mov
pop
or
add
inc
rorb
pop
addl
outsb
and
ret
mov
xorl
mov
imul
sbb
cltd
jp
sbb
insb
insl
jmp
je
fcomp
sub
and
lcall
lcall
enter
mov
xchg
dec
mov
divl
inc
push
add
mov
xlat
jp,pn
inc
addl
aaa
hlt
mov
cmp
pop
dec
cmp
fidivrl
mov
xor
sub
xchg
jg
or
js
mov
mov
jp
call
and
out
inc
mov
cmc
or
inc
mov
add
sub
dec
and
sbb
mov
ret
pop
or
inc
dec
hlt
pop
roll
cwtl
xchg
inc
xchg
lea
stos
or
test
mov
mov
addr16
test
aas
movsb
add
push
ljmp
out
mov
pop
lock
fmuls
sub
push
push
sbb
call
mov
in
jmp
jbe
xchg
fdivr
mov
adc
add
mov
mov
dec
inc
ret
pop
push
or
fildl
xchg
xlat
cli
adc
dec
mov
call
push
fwait
or
xchg
fxtract
cmp
mov
or
popf
mov
fnstenv
mov
inc
out
stos
test
pop
or
xchg
or
int
xor
xor
arpl
mov
pop
xchg
in
xchg
std
js
fmuls
andl
or
enter
negl
inc
cmp
sub
xor
std
ret
sub
out
xor
or
mov
out
dec
addr16
aaa
movsl
sbb
vpmuludq
cmp
enter
daa
and
sub
daa
dec
mov
adc
xor
inc
cwtl
js
call
or
xor
inc
icebp
shrb
adc
jbe
pop
sub
stos
push
cmp
test
mov
pop
xchg
clc
inc
dec
sarl
push
inc
imul
int3
sub
pusha
push
mov
cmp
aad
add
push
pop
popa
popf
inc
xchg
ret
test
adc
out
testb
daa
stos
sbb
aad
hlt
lret
push
add
lods
sarl
push
wbinvd
xchg
jo
movsl
mov
icebp
adc
add
pop
std
or
or
mov
jge
jle
repnz
mov
mov
ret
cmp
push
je
enter
inc
cmpsl
adc
cmp
mov
imul
ret
push
push
lcall
sub
jp
add
mov
or
pop
add
or
pop
xchg
jns
xor
push
popa
fnstenv
xor
stos
std
call
enter
adc
xor
mov
xlat
xor
test
clc
fwait
stos
or
ret
mov
cwtl
cmp
xchg
out
imul
pop
sub
xchg
or
cmp
adc
out
sub
and
popf
loopne
xchg
lahf
xchg
jae
std
les
in
out
inc
fld1
mov
mov
mov
dec
lock
pop
cltd
add
xchg
inc
xchg
push
aad
cwtl
mov
push
pusha
in
pop
test
xchg
adcl
out
in
jg
in
cmp
sbb
idivb
sbb
out
in
mov
test
pop
aad
les
ss
sub
std
mov
lea
ljmp
fistpl
stos
inc
in
pop
fildl
ljmp
je
lret
das
movsb
lea
dec
adc
mull
mov
mov
std
sbb
cmc
insl
xchg
scas
popf
and
mov
cmpsb
cmp
in
xor
dec
std
out
mov
sub
xchg
pop
and
test
mov
xor
mov
adc
jbe
inc
dec
pop
test
jmp
sbb
in
enter
mov
out
dec
imul
mov
xor
fisubrl
adc
mov
dec
inc
clc
inc
push
gs
cmpsl
mov
aad
or
add
mov
pop
in
jecxz
add
jns
dec
jb
lods
cmpsl
or
jl
adc
sub
test
fcmovnbe
cmp
pop
and
hlt
cmc
adc
out
adc
mov
cli
cmp
pop
mov
pop
mov
call
push
xchg
dec
mov
enter
cli
hlt
jp
lds
or
fidivl
test
pop
sub
jno
jb
sbb
testl
push
dec
pop
cmp
stos
mov
cmp
or
mov
aad
leave
dec
adc
in
jb
movsl
push
jbe
stos
lcall
daa
ljmp
adc
loope
bound
es
in
les
cmp
add
cli
lret
addr16
mov
fwait
adc
dec
leave
js
xchg
stos
mov
adc
ja
hlt
enter
mov
out
movb
lret
movb
mov
outsb
aad
push
decl
shrl
shlb
inc
dec
jp
scas
xchg
lea
lcall
test
inc
daa
enter
adc
pop
push
xchg
lea
xchg
push
popfw
jbe
negb
jg
and
dec
or
xlat
fcmove
mov
loopne
cltd
xchg
divl
xchg
pusha
cwtl
repnz
cmpsb
mov
and
or
and
out
or
fimull
xchg
add
scas
daa
jl
iret
dec
adc
mov
push
lods
fbld
sbb
xchg
mov
cmp
cmp
or
mov
lret
test
pop
in
leave
in
or
mov
mov
bound
cmc
js
or
pop
or
pop
xchg
cwtl
lcall
clc
movsb
sub
in
pop
sarl
stc
inc
pop
dec
insl
in
dec
in
lcall
adc
sbb
sub
cmp
push
test
or
lret
mov
fwait
pusha
xor
sbbl
out
mov
dec
mov
addr16
jg
cwtl
mov
mov
and
pushf
aad
cltd
cmpsb
cli
sbb
xchg
mov
sub
sbb
sbb
mov
and
fsubrl
push
fsubrs
cmc
pop
sbb
sbb
imul
or
add
add
sbb
imulb
aaa
loopne
add
mov
sub
push
addr16
in
sbb
cmpb
mov
adcb
js
and
divl
xchg
fcmovu
loop
dec
add
addr16
pop
jae
sbb
cmp
push
push
test
sbb
test
jmp
cmp
push
repz
xchg
sub
adc
push
in
xchg
jo
xchg
mov
lret
dec
cmp
faddp
scas
push
push
xchg
roll
sbb
cmpsl
sub
xchg
xchg
popf
test
jns
cmp
mov
in
xchg
rclb
sub
jmp
lcall
push
ret
fisttpl
mov
pop
xchg
test
je
in
sub
movsl
mov
jno
jbe
cltd
clc
fcoms
xchg
icebp
mov
push
xchg
and
cmp
ljmp
vcvttpd2dq
es
xchg
jp
jmp
mov
cltd
cwtl
dec
pop
in
test
nop
xchg
sahf
mov
daa
xchg
or
xchg
or
add
pop
pop
out
push
xlat
idivb
cwtl
adc
in
insl
sbb
sub
mov
clc
stc
mov
and
xchg
cmp
sub
xchg
enter
and
or
xor
out
xchg
in
sub
sbb
push
xchg
fiaddl
lods
push
clc
fimull
je
arpl
stc
xlat
sbb
fisttpl
or
push
clc
daa
pop
or
into
out
xchg
sbb
shlb
push
not
xchg
add
or
mov
push
imulb
mov
es
rcrl
stc
rol
or
ljmp
dec
in
lcall
xchg
pop
xlat
mov
addr16
aad
popf
lea
enter
dec
filds
std
add
in
xchg
or
faddl
dec
jl
sbb
loope
push
jbe
jge
mov
imul
popf
adc
call
xchg
sbb
jbe
mov
mov
add
cmp
push
lea
or
decl
imul
pop
sbbl
or
rolb
jbe
imul
xchg
cmc
gs
lret
xor
in
jns
leave
cmpb
stc
pusha
js
pop
or
push
test
pop
add
mov
mov
test
loopw
adc
pop
xchg
dec
imul
dec
lret
sub
subl
and
push
sbb
test
push
aas
push
and
or
jmp
in
std
pop
mov
pop
or
dec
inc
xbegin
cmc
push
or
out
in
das
icebp
pusha
vsqrtss
sahf
and
jp
ljmp
adc
xor
es
inc
fcomp
cmc
and
cmc
call
and
jle
ja
ds
out
sbb
xchg
cs
js
stc
cmpsb
xor
mov
mull
test
jbe
mov
fists
out
pop
popf
rorb
dec
out
xchg
enter
sbb
cmp
es
sbb
adc
shl
dec
pop
adc
dec
andl
cmp
adc
out
inc
or
sbb
sbb
jmp
jge
jmp
or
or
mov
sbb
fiaddl
xchg
xchg
inc
jno
mov
add
mov
sub
hlt
enter
or
mov
and
in
inc
sbb
movsb
pop
ds
cmp
mov
in
int
mov
lea
out
lea
or
inc
stos
ret
sub
daa
adc
fcoms
sbb
addr16
or
mov
xchg
dec
or
stos
xchg
push
xchg
pop
xchg
mov
sub
fwait
test
xchg
and
ret
pop
or
pop
mov
add
fisttpll
and
sarl
xor
dec
xchg
mov
xlat
sub
jbe
push
rorl
aaa
push
cltd
cwtl
dec
xchg
pop
lods
into
sbb
mov
jbe
stos
adc
mov
fwait
aam
or
add
subb
mov
adc
xchg
sub
je
cli
pop
jmp
xchg
pop
in
popf
mov
dec
in
dec
ficoml
cli
dec
dec
leave
cmc
pop
pop
popa
fstps
fisttpll
stos
or
daa
xor
je
mov
aad
sbb
fcmovne
xchg
int3
cmp
lds
adc
mov
mov
cmp
out
cmp
jmp
sub
iret
movsl
cltd
sbb
test
xchg
cli
inc
in
xor
mov
movsl
fldcw
stos
or
push
outsl
jmp
jecxz
call
dec
cmc
sbb
lret
cwtl
das
roll
shl
sbb
dec
dec
lcall
test
xchg
in
cwtl
xchg
ret
jne
xchg
addr16
data16
jne
dec
adc
pop
in
mov
stc
clc
out
test
into
cmp
cmpsl
mov
or
data16
add
pusha
pop
std
ret
jne
out
dec
ds
sub
enter
push
mov
mov
out
push
pop
add
add
ljmp
mov
sub
out
or
addr16
xchg
cmp
dec
and
test
leavew
rcrl
mov
push
mov
adc
cwtl
jbe
andl
lods
xor
mov
mov
add
lcall
lahf
inc
mov
adc
out
loop
pop
and
or
ret
pop
js
pop
loop
or
xchg
cmp
inc
add
mov
shr
push
out
cmp
sahf
mov
cmp
sub
clc
test
sarl
call
clc
jp
pop
sbb
jmp
mov
cwtl
mov
or
xchg
inc
outsb
rorl
xchg
pusha
add
loope
lret
xchg
and
mov
xor
sub
cmp
sahf
enter
xlat
imul
addr16
stc
and
lods
cli
into
fcoms
lret
jg
enter
clc
sub
fdivrs
ret
stos
fsubs
push
pop
cltd
out
cwtl
movsl
mov
imul
dec
adc
enter
and
enter
mov
inc
xchg
mov
mov
add
clc
lds
or
mov
push
or
hlt
in
mov
leave
mov
and
xchg
ret
push
out
xchg
std
xlat
mov
pop
push
aad
cld
outsb
or
out
adcb
pop
stos
imul
xchg
or
notb
popf
xchg
push
pop
addr16
xor
mov
dec
lahf
jle
jg
movsb
and
jne
fld
in
and
push
mov
icebp
fistps
xchg
leave
out
xchg
pop
inc
mov
sbb
mov
in
roll
std
in
pop
mov
enter
mov
xlat
mov
out
or
pop
sub
mulb
fiadds
pop
daa
sahf
in
loope
mov
pop
pop
mov
mov
jns
jmp
sbb
sbb
mov
loop
pop
sub
xchg
mov
aaa
and
cmp
aad
add
push
testl
pop
fchs
mov
cmp
es
adc
bound
dec
sbb
pop
lret
sub
adc
rol
pop
int
int
test
xor
cmp
mov
pusha
out
or
pop
stos
pop
cmc
jp
push
addr16
aas
pop
sub
xor
test
mov
or
xor
movsl
jns
mov
mov
out
imul
les
adc
int
mov
or
call
ds
and
xchg
push
dec
int
adc
call
sub
xor
lahf
adc
lret
sub
mov
pop
js
xor
mov
push
add
sarl
fcmovbe
lret
cmc
aad
call
cwtl
negl
inc
movsb
adc
aad
cli
dec
push
pop
xchg
mov
dec
rclb
mov
lds
sub
mov
out
cmpsb
notb
lcall
lret
push
push
daa
xchg
dec
in
les
or
cwtl
sbb
push
xchg
xchg
dec
ret
jge
cmp
je
not
xchg
in
xor
daa
inc
or
addr16
in
xorb
sbb
lea
sub
mov
aas
xchg
loope
dec
cmp
adc
jbe
leave
adc
xor
xchg
xlat
insl
ljmp
sti
inc
mov
pop
test
cmc
sarl
xchg
mov
cwtl
in
push
push
pop
mov
inc
loopne
cmc
out
xchg
repz
adc
or
xor
pop
xchg
fdivrs
rcl
fldenv
and
mov
inc
or
std
and
js
mov
mov
mov
cmpb
in
xchg
scas
jbe
stc
pop
xchg
sbb
inc
sub
jp
mov
popa
mov
sbb
mov
pop
sti
cmp
cmpsb
mov
scas
mov
cmpsb
or
pop
loop
imul
or
fmuls
or
mov
aad
addr16
leave
xor
jmp
cmp
xchg
es
jmp
addr16
fs
idivl
add
pop
loope
add
cwtl
test
add
rolb
xchg
sub
add
mov
aad
cli
daa
mov
aaa
xchg
mov
js
stos
pop
sbb
cmp
fidivs
movsb
or
or
daa
mov
cli
jp
int
sbb
and
outsb
into
movsb
mov
cmpsl
mov
popf
pop
cwtl
addr16
xor
mov
mov
fimull
cmp
push
sbb
pop
cwtl
sbb
xlat
mov
cmpsl
test
push
popf
or
xchg
mov
aam
je
sub
dec
sbb
in
mov
ret
pop
pop
in
fwait
xchg
xchg
mov
pop
std
mov
lods
popf
mov
fmuls
sbb
cmp
sub
xchg
gs
sarl
test
push
rcll
dec
lahf
out
shlb
test
cmp
cmpb
xchg
andl
add
sub
daa
aaa
mov
mov
mov
xchg
mov
daa
sbb
or
test
mov
lret
or
cwtl
lcall
cmp
jne
push
add
cwtl
dec
jbe
bound
dec
test
daa
in
movsb
and
push
add
pop
or
pop
cmp
xchg
mov
mov
fucom
movsb
or
jbe
mov
xchg
mov
mov
or
or
fsubrs
xchg
lcall
ret
mov
add
dec
sub
xor
fmuls
jp
je
ljmp
cmp
lcall
lret
sbb
mov
js
xor
pop
in
xchg
cmp
imul
mov
sbb
dec
push
inc
inc
inc
adc
movsb
aas
pop
push
sub
adc
idivb
js
pop
int
mov
testb
sub
and
cli
aaa
in
xor
sub
fsub
inc
daa
addr16
cltd
pop
mov
push
and
cli
xchg
lds
movsb
enter
stos
pop
dec
xchg
lcall
xchg
clc
and
mov
sbb
push
mov
mov
xchg
negl
sbb
fbstp
popf
loope
dec
mov
mov
adc
or
in
mov
out
xchg
daa
or
fldt
adc
out
mov
mov
rcll
mov
sub
xchg
xchg
inc
xchg
mov
add
shrb
out
sbb
cwtl
stos
sub
cmp
xchg
push
mov
pop
jp
arpl
mov
push
mov
sub
addr16
mov
and
add
inc
push
mov
cmpb
mov
mov
and
mov
mov
fiaddl
cmp
add
xchg
popa
sbb
test
jl
xor
addr16
lcall
add
rcll
push
mov
fnstcw
jmp
sarb
lret
lods
sbb
jnp
mov
sbb
mov
cmc
or
push
add
xchg
xor
and
jb
lret
jo
or
jbe
xor
jle
ffreep
pop
mov
push
mov
cmp
call
add
js
xchg
sub
inc
mov
push
andl
lcall
fadd
mov
adc
mov
fildll
mov
mov
jns
push
dec
ficompl
cmpb
fmuls
out
scas
xor
sbb
jbe
test
xchg
enter
or
mov
lret
lret
call
mov
movsb
out
fisttpl
xor
mov
xchg
imul
mov
dec
cli
xor
inc
ljmp
dec
fildl
outsl
cmpsl
inc
push
pop
test
scas
andl
inc
push
xchg
shl
out
enter
daa
je
or
sbb
test
and
jg
xchg
daa
in
call
cmp
mov
xchg
sub
mov
sub
js
gs
xchg
ljmp
daa
test
cmpsb
negb
mov
pop
or
repnz
clc
test
mov
shlb
aaa
cmp
adc
and
pop
addr16
cltd
fisttpll
mov
cmp
out
or
inc
sub
faddl
sub
stos
sub
or
mov
cmp
mov
fadds
dec
cli
or
and
inc
mov
jle
push
out
adcl
imul
idivl
in
mov
stos
es
jg
mov
jbe
mov
sbb
mov
imul
sbb
sub
sbbb
xor
cmp
adc
inc
aaa
jmp
enter
fadds
out
xor
push
aas
sbb
ljmp
cmp
ret
stos
or
aaa
and
je
pop
xor
sub
fisubl
dec
cmp
test
xchg
mov
mov
or
je
xchg
mov
je
leave
movsl
pop
leave
fdivrl
xlat
test
mov
movsl
sub
or
test
negl
adc
es
dec
mov
pop
daa
cmp
mov
call
sbb
incl
xchg
mov
mov
cmp
out
cmc
leave
adc
push
aaa
inc
mov
xlat
mov
hlt
ljmp
mov
xor
xchg
cmp
fidivl
xchg
movsl
and
push
pop
mov
imul
test
and
std
xor
adc
xchg
mov
out
loop
inc
cmp
je
in
movsb
sub
pop
inc
add
cltd
add
sbb
mov
icebp
dec
lds
notb
in
or
jp
fisttpll
movsl
dec
hlt
inc
jl
das
sbb
cwtl
cmp
and
in
jle
push
dec
addr16
sub
and
and
test
mov
xchg
hlt
test
sbb
testl
std
adc
lahf
mov
xlat
lcall
adc
push
push
imul
mov
daa
xor
sbb
or
ja
mov
sub
in
dec
mov
inc
fdivl
or
enter
and
out
xchg
negl
jg
xchg
sub
js
mov
sbb
ds
xchg
repnz
aad
pop
push
mov
mov
cmp
dec
mov
sahf
mov
jge
jne
imul
cltd
cmc
pop
negl
mov
sub
xor
out
xchg
mov
sbb
mov
push
clc
lea
in
aaa
sub
jmp
movsb
push
sbb
jl
adc
rorl
add
data16
jnp
mov
int
lea
pop
push
addr16
mov
cmpsl
std
jno
outsl
sub
in
sbb
mov
and
pop
cmp
add
jp
adc
or
pop
sub
lea
push
call
sti
pop
add
nop
lcall
outsb
xchg
mov
imul
fdivrs
movsb
lret
ljmp
pushf
mov
mov
mov
fcomps
mov
pop
out
popf
fmuls
mov
js
or
in
out
stc
in
hlt
test
pop
jp
or
xchg
dec
mov
lcall
fmuls
cmp
lea
pop
addr16
add
loope
dec
pop
test
ljmp
fdivrl
sub
cmp
sbb
jae
dec
inc
and
fadds
dec
cltd
push
test
dec
cmc
sbb
sarb
sub
clc
ret
inc
mov
call
popa
xlat
dec
xor
test
repnz
neg
mov
inc
or
pop
mov
mov
jbe
shrb
xchg
out
mov
vphsubbw
dec
or
push
jp
dec
sbb
xlat
push
loope
clc
pop
daa
jg
push
pop
push
sbb
scas
mov
mov
pop
adc
inc
idivl
lcall
lret
pop
xchg
fdivr
jmp
enter
xchg
lock
rorl
push
xchg
push
pop
das
das
int
inc
aas
lcall
sbb
es
or
int3
pop
mov
or
push
repnz
sbb
ficompl
leave
pop
cmc
dec
sub
jmp
push
imul
out
cmpsb
push
divb
stc
stos
xchg
mov
cmpsb
pop
sbb
mov
pop
mov
fcompl
mov
xchg
idivl
cmpsl
and
repz
mov
testb
or
mov
adc
pop
jp
sbb
inc
out
in
or
dec
es
sbb
and
stos
pop
mov
jo
inc
mov
aaa
xlat
cmp
xchg
stos
daa
popf
ss
movsl
xchg
adc
lcall
js
mov
or
addr16
out
arpl
xchg
int3
cltd
fstpl
lds
int
int
mov
lods
js
add
mov
dec
dec
stos
movsl
and
mov
jne
sub
and
out
fiadds
shrl
in
pusha
in
xchg
xchg
add
fsubrs
pop
dec
sbb
lcall
jecxz
je
push
mov
xchg
pop
xchg
dec
mov
clc
dec
fimull
lea
popl
xchg
test
repnz
cmp
fs
pop
int3
insb
add
mov
les
jbe
call
cmc
subb
cli
xchg
pop
mov
enter
movsb
sbb
mov
cmpb
test
or
cmp
dec
mov
lret
mov
dec
sbb
and
fcomps
mov
ror
fcmovu
call
movsb
xchg
sub
mov
xchg
xchg
sbb
and
push
imul
or
mov
mov
mul
or
ss
pop
out
mov
fcoms
pop
mov
or
sub
lret
daa
insl
jmp
es
int3
aaa
test
mov
xchg
push
int
dec
movsb
cwtl
xchg
call
out
xchg
lock
sub
cmp
rorl
xor
xchg
rcrb
les
dec
or
adc
xchg
jno
inc
dec
mov
imul
hlt
popf
loope
cmp
imul
popf
ds
imul
cmp
ljmp
mov
inc
dec
xor
pop
andl
shr
or
call
fisttps
pop
or
stc
and
jnp
in
jbe
jo
mov
std
addr16
out
xor
cs
std
in
pusha
lret
cltd
pop
add
push
sub
clc
out
mov
faddl
pop
inc
out
pop
adc
dec
mov
mov
cmp
xchg
pop
inc
cli
flds
xchg
xor
testb
or
mov
xchg
xchg
jbe
push
imul
rcl
push
sub
mov
shll
mov
fstps
out
inc
rcl
out
cli
test
mov
xchg
cwtl
cmp
cmpl
cli
js
and
cwtl
or
xchg
and
addr16
xor
mov
mov
mov
jne
aas
mov
repz
or
dec
jle
into
scas
mov
mov
fdivs
aaa
adc
push
and
testb
sub
cmc
lret
aad
js
vpmacssdql
pop
add
loop
std
push
cld
or
xchg
nop
popa
mov
push
test
idivb
testb
in
xchg
adc
dec
cwtl
pop
xchg
push
or
aaa
inc
pop
pop
sub
xchg
nop
xchg
mov
or
clc
aaa
mov
xor
add
out
lds
xchg
rol
addr16
push
mov
dec
clc
sub
or
dec
mov
cwtl
or
inc
ficompl
stos
cli
dec
mov
addr16
pop
out
inc
lds
xlat
imul
inc
sbb
call
cwtl
mov
or
adc
cmp
je
aaa
loopne
inc
adc
lods
lock
sbb
cwtl
cmp
xchg
mov
xor
enter
js
add
adc
jb
inc
andb
xlat
sub
test
mov
push
xchg
mov
ret
loope
adc
fwait
shrl
mov
xchg
lcall
sub
in
sar
aad
mov
cltd
and
lds
rcrb
mov
into
dec
insl
inc
lret
xchg
sbb
xor
enter
into
ds
xchg
xor
fs
xorb
lea
lret
stos
cmpsb
push
xor
dec
adc
jp
je
les
add
xlat
or
sbb
inc
mov
sbb
cmp
fs
dec
sbb
repz
js
xor
mov
iret
and
mov
sub
mov
push
dec
fsubl
push
inc
in
je
pop
cltd
sub
cmp
xor
ficompl
mov
ljmp
add
adc
test
imul
dec
lock
cwtl
xorl
or
cmc
xchg
imul
daa
fdivrs
push
add
xchg
mov
fnsave
and
sub
addr16
and
sub
mov
sub
dec
cli
mov
lret
imull
mov
dec
xchg
cmc
in
mov
call
inc
mov
xchg
cmp
push
out
inc
or
lea
pop
sbb
lahf
scas
xchg
ljmp
fsubs
imul
mov
mov
xchg
call
cmp
rorb
adc
mov
sbb
push
cli
aad
dec
js
dec
mov
ret
shrl
adc
adc
adc
pop
in
and
pop
fisttps
mov
lods
in
in
rcrb
pusha
push
adc
mov
mov
mov
daa
and
movsl
mov
std
add
push
xchg
dec
lret
movsl
xor
cwtl
clc
mov
sbbb
test
in
dec
dec
inc
xchg
or
out
je
sbb
shlb
jp
push
jne
dec
pop
or
jg
cmp
lret
or
cli
mov
insl
mov
mov
xchg
addr16
out
pop
addb
dec
and
xor
sub
add
or
cmpsb
jbe
hlt
sub
add
call
or
xlat
fadd
push
and
mov
test
or
out
inc
mov
mov
or
push
fbstp
cltd
jg
test
and
jmp
inc
rcrl
fwait
mov
adc
inc
imul
xchg
dec
push
cmc
mulb
pop
jp
push
mov
gs
in
mov
addr16
or
lock
xor
aad
gs
fidivrl
push
mov
xor
ss
or
xlat
ja
mov
dec
call
daa
xor
xor
lret
cltd
inc
cmc
mov
mov
xor
incb
cmc
les
cli
lcall
xor
mov
aaa
mov
mov
sub
lret
and
subb
imul
enter
js
add
sbb
scas
push
sbb
xchg
lods
and
clc
js
enter
pop
cmc
stos
stc
es
cmpsb
ror
adc
pop
inc
xchg
push
ret
call
pop
aaa
cmp
shlb
iret
hlt
mov
out
ljmp
lds
adc
xchg
cmp
daa
mov
adcb
in
mov
pushf
mov
stos
leave
je
xchg
ror
stos
jg
ret
pop
sub
hlt
call
mov
xor
mov
add
mov
aad
push
jb
daa
test
add
pop
mov
out
inc
mov
adc
movsl
sar
mov
or
inc
call
addr16
les
enter
mov
and
mov
testl
out
jecxz
xchg
or
neg
out
orl
push
aad
jo
jmp
cmp
push
ficomps
or
dec
xchg
mov
xchg
enter
or
inc
out
mov
cmc
insb
ljmp
mov
mov
mov
rorl
cmp
mov
or
mov
loope
or
xor
or
lds
mov
rcrb
mov
push
adc
aad
stc
adc
pop
hlt
dec
and
je
dec
insb
js
hlt
xlat
mov
or
dec
loop
scas
out
aad
std
jnp
test
adc
movsb
sub
dec
and
sbb
loop
or
xchg
testl
enter
outsl
xor
rcl
cmp
pop
and
mov
sahf
inc
jno
fldcw
push
ret
out
orl
sub
mov
and
jg
mov
lahf
sbb
pop
ljmp
dec
jp
lcall
loopne
lds
mov
cwtl
xlat
jp
mov
lea
cmp
ja
stc
adc
and
xchg
call
mov
mov
xchg
and
lds
jbe
mov
or
rorl
push
test
xor
push
out
sub
mov
aad
push
mov
or
call
outsl
fldenv
enter
fcomip
pop
jns
inc
test
cli
in
call
or
mov
int
in
and
xchg
int
dec
xor
xchg
test
ljmp
mov
mov
cmp
fsubs
push
mov
data16
insl
bound
xchg
sbb
and
clc
mov
mulb
fdivrs
mov
sub
mov
cli
mov
mov
ret
lods
inc
mov
call
ficomps
fucompp
push
sub
imul
pop
cli
aad
test
lret
int
stc
out
or
cmp
scas
fbstp
addl
and
add
daa
or
xorb
in
push
mov
adc
lcall
xlat
xchg
add
mov
cmp
sub
das
ret
dec
adc
stos
mov
cltd
pop
lea
daa
push
and
cmpl
lcall
dec
pop
ljmp
mov
cmp
notb
fiaddl
mov
and
dec
xchg
fwait
pop
sbb
jbe
leave
out
jb
shll
jb
mov
imul
sbb
sub
xor
dec
je
addr16
and
or
xchg
aaa
sbb
pop
cmp
or
or
adc
sub
push
dec
mov
clc
cmp
jg
xor
in
cmp
jecxz
sbb
test
in
mov
ret
jns
lods
cmpsb
push
cltd
sbb
cmpsl
aas
insl
sbb
or
lret
repnz
lea
rcr
sbb
lret
loop
es
cmpsl
push
mov
stos
mov
into
sbb
sub
je
sbb
cmpsl
push
movsb
imul
fst
mov
gs
jl
mov
fimull
sub
ret
jbe
dec
in
scas
fildll
scas
aad
and
lret
scas
xchg
pusha
imul
clc
stc
xchg
cmc
pop
rorb
push
ficoml
lcall
mov
cmc
nop
or
xchg
enter
lahf
sbb
xor
mov
ss
xchg
out
divl
mov
lea
clc
xchg
test
leave
das
outsb
cmp
pop
adc
in
fadds
lods
fmuls
mov
sti
cld
out
mov
lods
push
adc
cmpsl
in
jp
getsec
mov
pop
and
popf
fsubrl
mov
dec
es
mov
xor
or
xor
test
idivl
pop
std
pop
lret
sbb
cmp
xchg
mov
sub
and
add
sarb
and
loope
jbe
xchg
in
movb
cmp
dec
pop
xor
mov
lock
mov
cltd
xchg
scas
pop
lds
dec
xchg
sbb
pop
aaa
movb
int
outsb
mov
cmc
dec
pop
cmp
imul
in
push
xchg
pop
pop
xchg
test
or
adc
xor
jbe
dec
leave
aas
cltd
sbb
or
lods
popf
decl
xchg
daa
or
mov
cmpsl
mov
fcmovu
xchg
and
sbb
add
sbb
lods
divl
cli
mov
sbb
scas
lret
mov
cmp
jns
dec
outsl
push
jg
test
or
xor
fdiv
mov
adc
inc
add
and
mov
bound
cmpsl
pop
loop
hlt
xchg
mov
adc
pop
in
dec
int
cmp
sbb
push
in
xor
negl
push
xor
xchg
in
ror
add
mov
inc
jmp
mov
sub
not
shrb
mov
inc
movsb
xor
dec
lret
xchg
test
push
bound
repz
mov
pop
cltd
fld
fcomp
rolb
add
sbb
in
mov
into
inc
inc
repnz
jo,pn
rorl
or
or
inc
inc
negl
int
cmpsl
adc
imull
mov
mov
cwtl
jp
outsb
es
loopne
or
outsl
cwtl
es
dec
add
jno
mov
fwait
dec
jmp
mov
mov
cmp
clc
dec
test
stos
mull
push
ret
xchg
cli
xor
dec
dec
sbb
mov
jns
cmc
loopne
imul
jmp
sub
stos
gs
mov
in
hlt
into
test
repnz
xchg
push
or
xchg
divb
sbb
mov
or
adc
in
out
aaa
in
or
inc
xor
dec
xchg
gs
xchg
pop
gs
sub
mov
mul
aad
dec
sub
xor
jp
or
sub
out
mov
int
lret
aaa
cmp
jle
jmp
jecxz
popf
inc
pop
xchg
cmp
out
in
pop
xor
fcmovb
mov
cwtl
dec
in
ljmp
in
sar
pop
pop
lods
in
mov
stc
out
push
dec
fnsave
mov
inc
add
loopne
mov
mov
mov
mov
out
pop
adc
mov
jnp
imul
aaa
mov
test
in
mov
out
daa
sub
fbstp
dec
add
mov
pop
lcall
dec
cmp
lcall
mov
and
xchg
dec
jmp
imull
loope
inc
call
lea
sub
and
sbb
cmp
cmp
and
push
jle
fdivs
add
xchg
out
stc
mov
aam
adcb
mov
adc
and
mov
fcompl
cmp
test
sub
xchg
mov
or
mov
enter
jp
stos
cli
xchg
shl
cwtl
ljmp
adc
call
mov
jp
stos
mov
or
jb
aad
lods
sbb
por
mov
jbe
das
push
int
mov
test
sub
or
mov
dec
imul
mov
or
neg
js
cwtl
dec
and
push
sbb
sub
movsb
test
xlat
push
imull
xchg
in
test
mov
sub
lods
sti
add
enter
push
mov
xchg
mov
enter
lret
icebp
cmp
adc
dec
dec
pop
inc
xor
add
dec
mov
xchg
mov
ljmp
and
jo
rorb
ret
jbe
aaa
xchg
lret
hlt
adc
add
into
fisttpll
data16
and
fwait
cmp
mov
inc
shlb
sub
pop
and
cmp
and
jnp
mov
xchg
leave
insb
mov
cwtl
insl
movl
sbb
sbb
enter
daa
mov
jle
xchg
or
aad
sub
dec
add
xchg
ljmp
sti
cmc
xor
adc
push
sub
mov
or
cmp
pusha
stc
sub
ss
imul
xchg
popf
sub
mov
jbe
mov
xor
test
int
leave
pop
les
dec
sub
pushl
mov
mov
cwtl
push
dec
mov
xchg
clc
mov
adc
xchg
ss
cmp
fisttpl
fistpl
pop
aas
mov
pop
andl
mov
orl
es
mov
xlat
push
cwtl
pop
bound
imul
aas
out
lret
mov
aaa
lret
push
cmp
in
cmc
mov
cs
dec
hlt
imul
mov
mov
sbb
sbb
fyl2xp1
xchg
adc
jl
ret
mov
or
test
sbb
pop
pop
cwtl
cmc
movsb
imul
aad
mov
sbb
push
out
ja
in
jp
and
xchg
out
mov
test
cmp
and
pop
pop
sub
sbb
orb
and
out
jmp
sarl
call
cmpsb
jp
pop
es
push
out
mov
clc
leave
jg
scas
jae
lods
cld
xor
sub
shll
cltd
in
imul
jbe
add
cmpsb
scas
shrl
pop
aaa
popf
mov
pop
adc
stos
sub
xchg
adc
cmp
sub
and
in
cli
sub
mov
pop
lret
adc
mov
ss
and
fisubrl
jns
loop
mov
in
lret
and
nop
testb
xchg
mov
lods
roll
repnz
iret
push
aas
stos
inc
cmp
out
inc
sbb
mov
xor
imul
ret
mov
iret
mov
push
xchg
sahf
adc
in
jae
stos
fiaddl
int3
push
or
ret
imul
idiv
xchg
mov
enter
cmpl
test
mov
push
loope
enter
xor
or
je
pop
sub
or
xlat
loop
call
mov
ljmp
daa
mov
pop
out
push
mov
ljmp
clc
aaa
cltd
aad
pop
sbb
mov
shll
or
cltd
mov
xchg
dec
rcl
addr16
jp
and
movsb
jle
ljmp
lcall
add
mov
xchg
or
in
cltd
popa
stos
aaa
sub
cmp
insb
cmp
dec
sbb
mov
sbb
in
xlat
rclb
out
loope
js
inc
adc
lea
xor
cli
mov
test
mov
enter
mov
xor
xchg
sbb
or
dec
mov
mov
movsb
idivb
xlat
call
clc
dec
or
xchg
push
fmul
mov
test
out
je
or
test
mov
xor
mov
inc
gs
dec
add
ret
xlat
pop
ret
testb
xchg
lret
mov
pop
lret
or
cmc
or
add
mov
sti
pop
mov
loopne
aaa
std
sub
lret
stos
sbb
sbb
adc
mov
lcall
movsb
ret
and
cmp
nop
pop
fidivrl
lcall
or
sub
mov
out
dec
aas
mov
lds
clc
or
dec
mov
pop
adc
cld
sub
inc
lea
int
fdiv
xchg
or
lods
out
into
mov
push
lea
pop
rclb
and
js
adc
sbb
out
ljmp
les
pop
addr16
dec
nop
loope
lret
test
lcall
sub
mov
xchg
ljmp
xchg
cmc
shll
dec
arpl
sbb
lods
and
inc
xor
mov
das
negl
and
mov
jbe
dec
xor
rcll
std
js
mov
sub
adc
sbb
mov
sub
and
sub
sub
push
je
fisubl
xchg
xchg
mov
and
jge
leave
in
mov
orb
movsl
xchg
imul
stos
mov
lcall
mov
aad
adc
cwtl
jbe
cmp
mov
loope
movsb
jne
sub
jbe
mov
push
cltd
js
push
and
shr
mov
outsb
adc
lods
out
fcom
in
lcall
or
fiaddl
enter
stos
aad
test
mov
pop
cltd
xchg
js
out
pop
movsl
hlt
xchg
pop
sbb
cmc
scas
adc
mov
imul
int
lods
mov
les
testl
cli
xchg
mov
imul
cmp
in
in
rorb
xor
mov
sbb
mov
dec
cwtl
sub
xchg
mov
andb
lock
adc
xchg
dec
and
dec
fwait
mov
ror
pop
orb
jbe
call
xchg
inc
dec
test
xchg
test
loopne
or
out
int
std
and
adc
mov
dec
js
and
cmp
outsl
cmc
mov
inc
fisubrl
test
add
jmp
test
popa
sbb
lds
push
pusha
rcr
in
in
dec
aaa
mov
cli
mov
aaa
imul
stos
movl
aam
mov
cmp
mov
mov
daa
call
out
lret
lcall
pop
sbb
ret
and
push
mov
pop
lret
call
sub
daa
fadd
mov
mov
enter
jmp
push
xchg
cmp
sub
leave
clc
bound
cltd
es
cli
orb
dec
pop
add
call
movsl
cmp
or
negl
rolb
or
mov
sub
sub
ret
shll
sbb
imul
negb
mov
inc
mull
lods
mov
mov
jle
lahf
push
mov
test
testl
cmp
adc
mov
imul
data16
ljmp
mov
sbb
dec
or
cmp
mov
test
mov
or
cmp
cmc
xor
in
clc
cmp
cmp
and
push
pop
add
push
js
jg
dec
cmc
and
xchg
int3
and
mov
sbb
leave
add
pop
shr
or
clc
mov
daa
pop
lock
mov
fisubrl
adc
cli
xorl
imull
in
lret
inc
movsl
or
jno
mov
xchg
lcall
jmp
es
push
lods
add
cwtl
or
orl
mov
icebp
lret
pop
fcoms
cmpsl
aad
fidivs
je
ljmp
jp
jecxz
mov
or
mov
dec
or
daa
loopne
inc
jle
pop
sub
mov
ret
in
stos
fisubs
dec
call
push
movsl
in
and
inc
and
sbb
idivl
lret
sub
cmc
lods
mov
fisttpl
xchg
jp,pn
sar
das
inc
sub
aad
xchg
in
and
test
imul
add
sahf
nop
or
adc
fdivp
popf
push
imul
mov
cli
into
fmul
push
in
je
pusha
addr16
sub
stos
and
je
negl
inc
faddp
push
or
ja
in
lret
sub
push
inc
xchg
or
dec
fcomps
sbb
mov
dec
sub
dec
pusha
pop
xchg
jae
xchg
je
sti
fiaddl
dec
or
or
leave
adc
cmp
inc
ret
pop
cmp
add
dec
sbb
cmp
push
xrstors
xchg
repz
cli
subl
cwtl
int3
xor
aad
bound
int3
xchg
xor
call
lods
hlt
add
stos
movb
sbb
cmp
sub
or
mov
rolb
hlt
mov
cmp
xchg
mov
xor
in
sub
add
ret
pop
dec
mov
sbb
cmc
lcall
dec
shrl
push
or
cmp
ljmp
jp
imul
adc
out
push
mov
xchg
inc
call
pop
sbb
jp
cmp
mov
cwtl
lds
sbb
rcrl
cli
push
and
aaa
mov
fcomps
jp
dec
mov
xchg
mov
hlt
add
js
sbb
pop
adc
std
arpl
dec
mov
add
shrl
loopne
xlat
std
shll
shll
ljmp
pop
aad
mov
mov
movsb
sub
notb
ret
shl
mov
pop
and
xchg
mov
push
mov
test
mov
xor
lret
call
push
ret
mov
sbb
jge
js
scas
jns
xchg
test
dec
int
cmc
pop
jno
jmp
out
sbb
lcall
addr16
mov
inc
jns
mov
lret
sbb
addr16
iret
cmp
xor
fs
mov
mov
movsl
aad
insl
daa
call
sbb
stc
sar
addr16
out
insl
jb
mov
sbb
sbb
ret
add
stos
ficoml
jp
xchg
clc
push
stc
js
lret
aaa
aaa
in
xor
inc
int
dec
ret
add
inc
sbb
inc
pushl
ljmp
adc
fisubrs
pop
xor
xchg
cmp
or
cmp
enter
ljmp
dec
or
dec
mov
ljmp
pushf
or
xchg
fiaddl
out
inc
mov
mov
icebp
mov
xchg
pop
xchg
adc
call
shll
adc
sub
or
in
xorb
mov
pop
stos
or
cs
sub
add
mov
enter
or
sbbl
clc
pop
cmp
repz
adc
mov
or
into
pop
adc
lret
loop
idivl
push
rorb
in
or
jle
pop
inc
fadd
and
fisubl
pop
stos
xchg
xchg
xor
jns
lret
sbb
xchg
push
movsb
mov
add
xchg
dec
and
dec
mov
ret
fsubrs
dec
movsb
and
jg
add
out
in
pop
insb
inc
pop
ret
cmpsl
icebp
cmp
test
cmpsb
mov
jp
lds
jbe
aas
pop
hlt
dec
and
add
mov
dec
add
sub
or
sbb
sub
mov
ja
jno
dec
pop
imul
mov
lret
xchg
hlt
add
jb
adc
or
out
stos
xchg
jno
add
ss
test
sbb
out
pop
ljmp
mov
stos
xchg
test
fsub
mov
sbb
aad
out
or
or
mov
stos
imull
call
push
jbe
jle
jl
mov
ss
enter
int
mov
jp
dec
movsb
stos
pop
or
cmpsb
call
sub
cltd
sub
leave
dec
or
out
daa
pop
sbb
mov
push
std
lcall
notl
test
sbb
cmc
repnz
jg
movsb
jbe
loopne
mov
xchg
mov
repnz
xor
test
jbe
xchg
sub
xchg
or
mov
and
fbstp
cwtl
xchg
dec
les
shrl
xlat
mov
jbe
mov
repz
mov
mov
fsubs
cmp
mov
out
pop
mov
stos
xor
inc
dec
insb
or
ret
cmp
stos
daa
xlat
push
or
js
mov
pop
xchg
xorl
test
orb
clc
or
xchg
leave
shrb
cmp
xchg
cli
lcall
jno
xchg
inc
cli
in
lcall
jno
enter
and
clc
mov
or
xchg
lods
xor
push
or
gs
daa
call
data16
iret
loop
adc
in
sbb
lds
mov
mov
mov
ret
dec
leave
sbbl
sbb
mov
les
out
idiv
add
stos
cmc
clc
mov
test
out
fisubrs
daa
mov
sahf
in
ss
inc
mov
in
lea
mov
cmp
push
push
jp
jmp
xor
daa
jo
test
push
xlat
inc
daa
inc
fwait
sub
aad
push
cwtl
sbb
clc
fistps
clc
xchg
cli
xchg
add
lods
inc
les
pop
mov
push
sbb
lret
out
jns
lock
loope
xlat
imul
push
out
ret
and
shll
loop
mov
mov
cwtl
call
mov
or
or
dec
adc
jp
inc
cli
cmpsb
sahf
mov
out
mov
ja
xor
stos
mov
gs
xchg
shrb
mov
iret
xchg
xchg
push
testl
jns
lea
rcl
cmp
test
mov
xchg
push
rdpmc
xchg
pop
xlat
add
aaa
xchg
cli
cmp
cmc
mov
mov
popf
ret
pop
inc
ljmp
sbb
mov
mov
mov
adc
xorl
aaa
mov
in
mov
xchg
call
test
iret
add
or
dec
sbb
or
mov
fcomi
loop
shrl
mov
dec
mov
call
xor
sub
fadds
clc
sbb
inc
in
aaa
stos
js
or
ljmp
add
or
cwtl
dec
fsub
js
or
je
mov
mov
jb
inc
xor
shlb
in
jns
popf
mov
ret
sti
adc
cmc
mov
mov
or
push
aad
push
shll
or
sti
fs
mov
into
inc
fldt
cmp
mov
out
cmp
call
out
lret
push
mov
add
xchg
pop
je
testb
mov
pop
pop
mov
out
xchg
rcrb
push
cmpsl
daa
push
xor
xlat
jp
mov
sub
shrl
imul
outsb
sub
pop
mov
xchg
or
mov
js
jg
mov
pop
dec
or
std
cld
adc
shll
sbb
mov
xor
jne
dec
sarl
int
xor
xor
dec
mov
xchg
fiaddl
push
je
sub
shlb
gs
cmp
jp
add
mov
out
mov
daa
addb
sub
pop
adc
clc
lods
mov
call
xchg
inc
pop
fucomip
pop
mov
out
or
cmp
mov
stos
mov
sbb
xor
add
jbe
addb
sbbl
mov
add
sub
mov
call
and
jns
dec
fsubl
fdivr
and
or
fs
push
and
aad
pop
out
push
hlt
clc
xor
adc
xchg
test
stos
or
xor
mov
push
insb
push
fcoml
xchg
jmp
and
clc
cmp
mov
dec
sub
or
mov
sbb
sub
in
or
mov
adc
ljmp
sbb
mov
sub
push
jns
test
xchg
push
and
js
or
mov
xor
xor
out
mov
stc
add
imul
icebp
sbb
call
es
mov
cmp
mov
sub
hlt
lcall
cwtl
jmp
hlt
ret
cltd
es
call
out
xor
xchg
mov
dec
cmp
xchg
xor
imul
dec
movsb
jp
and
push
daa
fcoms
ds
ret
mov
repz
or
or
in
push
test
sahf
xchg
mov
push
test
sbb
adc
lods
and
insb
leave
sbb
xchg
loop
ficompl
pop
jl
inc
and
adc
add
xor
mov
imul
pop
xor
lods
mov
xchg
fidivl
xor
test
jl
lds
inc
stos
inc
xlat
call
call
mov
sbb
mov
or
aad
inc
stos
subl
pop
inc
inc
adc
dec
and
int3
add
push
fistps
cmc
fcmovb
das
lea
test
adc
orl
sub
test
mov
jl
cwtl
stos
icebp
fwait
sbb
cmp
aad
lcall
mov
rorb
scas
ljmp
xor
jno
push
cmp
push
xlat
out
addr16
adc
cmp
arpl
add
and
pop
push
inc
mov
sub
es
xlat
jecxz
aad
mov
lret
xchg
inc
pop
divb
aaa
mov
mov
sbb
cmp
cmp
push
or
fs
sbb
lcall
jg
imulb
xchg
xchg
xlat
fs
xchg
outsb
cmc
cmp
mov
mov
push
xor
popf
out
mov
or
xorl
loopne
xchg
push
call
popf
xchg
sbb
inc
sbb
xchg
jb
call
or
fiaddl
enter
js
fbstp
or
mov
xchg
ljmp
sbb
cmpl
mov
sbb
mov
pop
js
xchg
and
out
mov
and
mov
imul
popf
out
ret
add
or
xor
jno
inc
pop
movsl
movsb
pop
sub
cmp
mov
int3
push
cmp
lds
rcll
and
data16
cmp
aaa
clc
mov
push
jecxz
jp
daa
pop
ljmp
cmp
push
dec
xchg
daa
in
ficoml
xchg
or
pop
sbb
cmp
mov
mov
out
arpl
popf
movsl
sub
dec
mov
xchg
mov
dec
sbb
jp
fsubl
movq
sub
add
addr16
lret
push
call
sub
xlat
out
sbb
fisubl
pop
out
out
or
push
adc
push
imul
mov
mov
or
xor
cmp
jne
addr16
fsubr
cmp
or
rclb
shlb
aaa
call
sub
stc
in
shrl
xor
mov
mov
sub
test
dec
mov
stos
cmp
negb
shll
sbb
les
and
cwtl
out
negl
mov
dec
gs
mov
jno
mov
sbb
out
inc
lds
xchg
or
outsl
dec
shrb
sub
andl
je
dec
mulb
mov
xlat
in
cli
inc
lret
and
inc
and
mov
pop
dec
xchg
or
sarl
xchg
mov
sub
dec
xor
out
lock
fs
adc
adc
mov
cmp
bound
inc
sbb
mov
stos
sbb
dec
xor
flds
or
push
mull
dec
mov
call
pop
sub
mov
outsb
mov
xchg
push
in
out
sti
dec
cmp
xlat
or
jns
or
out
mov
xchg
mov
lds
cltd
clc
imul
daa
pop
or
mov
test
cli
sbb
xlat
sbb
jmp
dec
or
mov
addr16
loop
push
les
lahf
lds
sub
shlb
dec
or
es
mov
mov
nopl
mov
clc
and
js
rcrl
cmp
pop
stc
es
xlat
dec
std
pop
sub
push
sub
sub
in
or
sub
dec
repnz
dec
sarl
outsb
pop
jno
shr
outsb
xchg
jmp
out
mov
sbb
adc
dec
adc
sbb
je
jp
push
pop
jge
jo
xor
mov
sub
mov
stc
add
vphaddubd
xchg
mov
enter
mov
xchg
pop
cli
stos
push
cmc
pop
xor
mov
and
in
mov
pop
mov
xchg
mov
out
mov
cmp
or
pop
imul
adc
enter
aad
sbb
mov
mov
sbb
cmp
outsl
out
mov
mov
mov
lea
lcall
fxch
or
clc
bound
in
cmpsl
mov
call
popa
xor
mov
jmp
loopne
mov
pop
std
push
in
outsb
test
daa
jbe
xchg
ret
jb
jno
outsb
mov
in
in
cmpsb
das
andl
fisubrl
stos
xlat
mov
xchg
sbb
pop
jo
dec
subl
stos
fimuls
inc
js
syscall
mov
adc
or
loop
mov
test
mov
sub
addr16
push
cmp
xchg
sbb
daa
push
cmc
clc
pop
mov
cltd
shl
cmp
push
testb
dec
or
stos
sar
loop
mov
sbb
fwait
fwait
sbb
outsl
mov
js
daa
xor
mov
cmp
xchg
or
in
sbb
lret
mov
mov
xchg
rcrb
mov
in
mov
jg
pop
and
ljmp
popf
shrl
add
xchg
sbb
xor
lods
mov
inc
mov
enter
jno
mov
fiadds
inc
pop
sbb
idivl
mov
add
orb
aad
mov
xchg
dec
shll
out
ss
jne
mov
sub
mov
lret
push
ret
lret
cmp
in
mov
xchg
sbb
and
jp
and
xchg
ficoml
movsl
xchg
lds
pushf
sbb
xor
sub
or
imul
jbe
and
or
mov
pusha
mov
scas
lock
mov
aad
xor
out
fcoms
or
or
mov
in
pop
cwtl
xchg
js
or
add
mov
aaa
mov
push
or
cmp
fcoml
xchg
mov
xor
jb
mov
dec
shll
outsb
lcall
mov
fmul
lds
idivl
xchg
loop
sbb
mov
jo
mov
dec
or
dec
sub
fcoms
ljmp
jmp
loope
cmp
lret
xor
aaa
sub
shl
pop
jp
std
aad
in
movb
inc
mov
mov
sbb
pop
inc
ret
jno
es
lds
or
daa
pop
or
adc
cmp
adc
adc
sbb
cld
leave
sbb
lea
push
addl
sbb
in
lods
adc
adc
test
scas
mov
cmp
jle
loop
ret
lds
mov
xchg
mov
mov
push
xor
enter
out
jmp
aad
pop
mov
dec
push
lds
shrl
imul
push
pop
xchg
xchg
jbe
mov
xchg
stos
loope
pop
mov
pop
test
cmc
lcall
mov
mov
je
sbb
jg
repnz
add
xchg
lret
data16
cwtl
or
mov
push
xchg
adc
jne
in
mov
in
dec
push
or
dec
pop
aad
in
xor
clc
and
xchg
call
frstor
ret
es
dec
xor
shl
aad
jno
xor
test
or
pop
xchg
lods
aad
jmp
dec
or
pop
xor
leave
fmul
mov
mull
mov
scas
movsb
lds
mov
test
cmp
shlb
mov
shll
call
lds
push
aad
mov
dec
xor
cmp
loopne
sahf
mov
cwtl
enter
push
mov
outsb
mov
add
test
push
test
or
xlat
sub
cs
adcb
add
mov
mull
or
shrl
dec
sub
add
popa
rorl
in
xor
mov
fdivrs
call
xchg
pop
in
enter
dec
or
mov
lods
push
stc
nop
mov
in
out
popa
stos
ljmp
and
enter
fxch
ret
sbb
cmp
adc
xor
inc
stos
push
clc
mov
mov
imul
xchg
mov
or
mov
or
or
stos
xchg
xchg
dec
out
outsl
lods
sub
daa
mull
out
or
cmc
jbe
sub
sti
mov
lret
pop
dec
adc
clc
sbb
adc
jl
sarb
or
sbb
fadd
dec
repz
xor
out
roll
in
ljmp
and
adc
push
mov
pop
pop
jne
jmp
cmpsb
cmp
rol
retw
push
loop
inc
push
rcl
notb
sbb
sub
adc
pop
pop
jmp
and
fnstenv
hlt
or
jmp
clc
out
stc
scas
out
imul
xor
xor
and
fnop
call
lcall
cmp
in
dec
daa
in
enter
push
in
movsb
rorb
add
cli
js
imull
enter
cli
xchg
fimull
clc
aad
in
sbb
cltd
fs
lret
enter
xchg
dec
out
pop
sbbb
ret
es
push
cmc
shrl
mov
sbb
jp
xchg
adc
lcall
sbb
lret
je
andl
loop
and
mov
cmp
call
push
dec
xchg
or
cld
test
pop
pop
fsubrs
or
add
movsb
mov
push
leave
cmp
in
jecxz
test
pop
mov
mov
push
mov
cli
clc
in
rol
rcr
out
in
in
xlat
cltd
or
xchg
call
in
mov
mov
stos
ret
sub
addr16
xor
fdivs
cmc
enter
mov
jns
test
xchg
push
dec
inc
js
hlt
pop
push
mov
mov
stc
xor
test
pop
ret
xlat
lcall
inc
push
mov
test
inc
mov
addb
lcall
jmp
mov
loop
pop
fdivrs
cs
mov
mov
xor
stos
cli
cwtl
mov
xchg
leave
and
add
call
adc
lods
or
adc
test
or
fisubrl
hlt
push
add
imul
icebp
push
jbe
sbbb
lds
mov
pop
xchg
xor
js
jp
mov
pop
xchg
mov
lea
or
mov
shrb
in
mov
icebp
sub
insl
ljmp
or
iret
iret
cmp
mov
xchg
mov
filds
xchg
mov
sub
mov
and
sub
in
dec
mulb
jge
jg
add
in
stc
pop
sub
cmp
idivb
or
xchg
daa
mov
jne
ljmp
lret
fwait
xchg
aaa
and
in
cmp
enter
adcb
popf
xor
hlt
mov
rolb
sub
fisubrl
sbb
xchg
sub
pop
or
cwtl
or
dec
in
faddp
xchg
or
daa
dec
cli
xchg
aaa
xchg
sbb
call
sub
imul
popf
cmc
dec
mov
insb
shlb
test
dec
pop
sub
movb
inc
fsubrl
add
mov
pop
out
inc
jp
and
out
mov
dec
fnstcw
mov
mov
movsb
cmc
sbb
test
mov
adc
sub
lcall
mov
xchg
sub
mov
faddl
ljmp
sub
jno
shll
mov
add
imul
std
fildll
or
jne
mov
xchg
and
xlat
ljmp
lcall
xor
push
cmp
popf
out
or
testb
sub
ljmp
pop
xchg
or
lds
push
into
xchg
gs
test
sbb
cmp
inc
jge
sub
js
lds
mov
jbe
inc
cwtl
cmc
pop
xchg
testl
in
popf
jge
xchg
jg
cli
mov
mov
out
jo
jmp
cmp
or
out
cmp
mov
pop
je
add
mov
mov
loope
xchg
cmc
cwtl
push
xchg
cmp
cmp
ljmp
and
mov
jmp
mov
mov
outsl
sbb
out
scas
xchg
jecxz
xlat
stos
lret
push
ret
into
dec
mov
add
or
xchg
daa
mov
pop
sub
cmc
or
push
mov
push
mov
push
mov
xor
lds
sub
call
aaa
pop
js
dec
sbb
mov
add
push
pop
mov
adc
adc
mov
and
movsb
pop
xchg
or
mov
test
sbb
pop
repnz
imul
inc
scas
out
call
adc
xchg
divl
icebp
filds
sbb
dec
lahf
lcall
sub
in
and
sbb
addb
adc
out
add
popf
jne
xorb
xor
daa
mov
popa
mov
ret
or
xchg
imull
push
call
or
pop
push
dec
xor
lds
lds
inc
xchg
jp
push
movsb
ja
or
aaa
out
mov
sbb
jns
movsb
cmp
mov
les
call
daa
inc
cmp
sbb
or
shlb
sub
stos
in
add
rclb
sarb
sbb
cli
dec
lea
out
mov
stc
dec
aaa
or
dec
xchg
enter
inc
mov
lahf
in
test
cli
or
sub
xor
fcomip
std
cmpsb
rol
cmp
vpsubb
call
xchg
pop
ss
sub
call
pop
daa
aad
lods
and
mov
sbb
lcall
loope
negl
in
test
ljmp
testl
inc
mov
sub
sbb
in
mov
mov
loop
pop
test
xor
fbstp
xchg
sbb
iret
jg
clc
je
cwtl
lds
cmp
or
adc
scas
js
daa
sub
dec
arpl
push
mov
cmp
xchg
sub
stos
dec
cmc
dec
mov
or
cmp
mov
lcall
and
mov
pop
pop
xchg
or
xor
xchg
mov
mov
aad
add
xlat
jbe
or
sbb
rclb
mov
movsl
dec
hlt
jp
mov
cmpsl
adc
cmc
and
cwtl
imul
lcall
mov
push
int
cltd
loope
enter
leave
xchg
insl
in
sub
out
inc
gs
lret
shrl
ret
push
lcall
push
test
jp
dec
addb
enter
push
in
xor
mov
mov
andl
xchg
push
jo
daa
jmp
xchg
sbb
xchg
lods
fldcw
js
je
or
cmc
dec
dec
fs
lret
cmpsl
test
push
and
cwtl
adc
fbstp
testb
fdivr
or
rorb
sbb
mov
int
mov
gs
movsb
mov
sub
xchg
mov
test
mov
icebp
aaa
mov
daa
js
mov
adc
hlt
fiaddl
or
cwtl
adc
ljmp
adc
cmp
jb
mov
cltd
movsl
dec
out
clc
xlat
in
ret
lock
adc
int3
push
pop
imulb
pop
insb
xor
sbbb
fimull
cmp
stos
adc
in
jbe
sbb
mov
lods
sbb
notl
xchg
imul
xchg
or
mov
ret
or
and
xchg
xchg
jg
ljmp
loop
test
or
sbb
test
out
test
pop
cwtl
test
adc
insb
pop
sbb
mov
outsb
bound
out
or
dec
outsb
pop
sub
ljmp
loop
adcl
addr16
dec
push
loop
pusha
out
mov
mov
cmovge
aaa
lds
mov
jnp
daa
sarl
leave
pop
jno
outsb
pop
sub
cmp
cwtl
mov
sbb
jge
or
fmuls
lea
test
lcall
enter
cmp
stc
or
rorl
dec
lret
cwtl
clc
lcall
xor
mov
out
xchg
imul
aad
mov
test
subl
movb
fcompl
jns
test
or
xlat
adc
adc
sbb
mov
and
cmp
ret
idiv
and
mov
dec
inc
sti
sarl
cli
idivl
ret
out
in
imul
sti
xchg
push
mov
out
jmp
cwtl
pop
out
ficoml
cmp
cmpsl
xchg
inc
in
sub
stc
cli
imul
mov
jecxz
xchg
orb
adc
xchg
loope
aad
mov
repz
les
jns
jnp
out
add
mov
shl
adc
mov
stos
or
call
orl
lret
dec
pop
loopne
iret
xchg
mov
sub
push
jge
adc
lret
outsb
adc
fidivrl
sub
push
mov
sbb
addr16
dec
enter
pop
test
xchg
mov
div
daa
cmp
lret
dec
xchg
vmovaps
into
rcr
in
cwtl
add
movsb
fsubr
sbb
test
push
xor
test
arpl
push
and
bound
enter
mov
or
ljmp
inc
dec
je
pop
mov
add
lea
mov
mov
or
stos
dec
addr16
cmp
and
adc
pop
imul
test
xchg
xor
or
aaa
xorl
out
mov
jbe
inc
xchg
dec
cmp
dec
out
push
and
dec
pop
ljmp
cmp
cmpsl
mov
mov
aad
inc
add
pop
add
outsb
fs
xor
add
push
push
or
clc
test
inc
cmp
cmp
bound
adc
cltd
addr16
sub
sarl
rcl
aad
cmp
and
sub
add
in
xchg
xchg
cmp
add
popf
cmp
mov
jle
lret
pop
out
and
testb
cmp
cli
sbbl
rcll
in
mov
out
dec
inc
dec
sub
test
mov
insb
test
cmc
xor
insb
xchg
jmp
pop
cmc
lcall
pop
jbe
and
in
inc
pop
inc
pop
xor
daa
push
pop
movsb
into
push
sbb
outsl
test
dec
mov
sub
pop
cmp
and
push
je
in
adc
fs
dec
push
add
stos
icebp
jo
xchg
outsl
mov
lea
push
mov
bound
xor
adc
mov
jmp
xchg
push
cmp
mov
mov
stos
ret
mov
pop
inc
jbe
sub
mov
stos
cmp
sub
cwtl
out
jp
mov
sbb
out
sub
push
cmp
xor
xchg
imul
repnz
ljmp
cli
aad
jb
lds
call
sub
add
pop
je
in
dec
scas
leave
shr
cltd
adc
cli
mov
lret
inc
fwait
adc
mov
jno
shll
mov
rorl
xchg
aad
sub
cmp
dec
mov
mov
xchg
adc
cwtl
out
dec
sub
pop
insb
dec
mov
xchg
fldenv
leave
fisttpl
fmull
lahf
sbb
inc
mov
adc
addr16
xlat
adc
adc
mov
enter
mov
add
dec
loope
cwtl
xor
or
lods
sbb
xchg
mov
mov
cmp
inc
push
fsubrs
jbe
add
aas
xchg
lcall
stc
call
out
jbe
sub
icebp
lret
mov
xchg
dec
cwtl
sub
cltd
or
fisubrl
mov
push
ret
lcall
daa
sub
pop
jp
mov
fld
lcall
cltd
cs
mov
or
mov
das
mov
cwtl
or
stc
ljmp
cmp
xchg
aad
xchg
jmp
sub
push
or
cmp
mov
pop
mov
pop
push
add
addr16
pop
in
and
sbb
out
loope
jbe
mov
daa
mov
sbb
jp
mov
mov
in
push
in
test
xchg
stos
cmp
sbb
add
out
clc
testb
mov
sbb
es
ja
xchg
hlt
ja
testl
repnz
jmp
xchg
cmp
out
inc
xchg
lds
ds
lea
sbb
or
push
clc
mov
lret
cmp
pop
adc
in
and
xorl
xor
adc
mov
mov
out
sbb
xchg
mov
mov
in
mov
adcb
fwait
xor
cli
push
aaa
clc
je
push
lcall
mov
test
cli
movsl
fildll
jbe
daa
sbb
push
movsb
push
pop
add
ret
daa
mov
or
pop
or
in
adc
push
dec
imul
pop
bound
mov
push
adc
fs
out
mov
ret
iret
dec
cmp
repz
xchg
and
rorb
loope
call
xlat
cmc
xor
lds
sbb
or
fmuls
cmp
dec
or
sahf
fnstsw
ljmp
add
mov
mov
sbb
hlt
imul
les
xor
mov
dec
sbb
and
addb
filds
xor
sub
mov
jbe
xchg
sub
ds
fsts
fdivrs
lea
cmc
dec
ljmp
out
xor
imul
lds
in
xor
mov
mov
sub
ljmp
scas
iret
divl
adc
mov
daa
call
mov
dec
cmpsl
dec
jae
sub
and
shl
cltd
adc
sbb
fisubrl
out
dec
sbb
push
out
ret
fadds
outsb
adc
mov
test
stc
and
cmp
mov
xchg
jl
out
dec
push
div
sbb
mov
jp
inc
mov
sbb
mov
push
mov
inc
stos
pop
dec
testl
out
mov
xchg
sub
jo
jg
mov
sub
js
add
into
and
xchg
mov
addr16
push
mov
cmp
cmc
push
xchg
aad
or
mov
in
lcall
call
xchg
aaa
in
mov
aas
aad
push
popf
xlat
xchg
int
xor
xchg
je
mov
cs
cwtl
pusha
xor
mov
ljmp
jbe
loope
notb
and
xor
cmp
dec
movsl
sub
fidivl
mov
cld
and
adc
mov
js
sbb
jbe
call
enter
jb
push
jle
lods
inc
lea
fwait
jb
xchg
pop
inc
sbb
dec
mov
adc
dec
pop
or
sbb
ja
jnp
xor
bound
adc
das
xchg
fldt
cli
addr16
pop
jp
add
hlt
mov
xchg
pop
adc
cltd
jmp
add
sbb
mov
pop
out
ljmp
mov
sbb
mov
sbb
test
cmp
push
aam
imul
dec
fadds
push
aaa
mul
jl
add
fs
mov
jae
push
pop
dec
mov
std
test
adc
mov
lock
mov
or
xorl
pop
push
adc
push
cmc
ret
pop
js
es
test
or
mov
xchg
mov
ljmp
cmc
adc
pop
loope
mov
mov
clc
pop
and
push
cli
ljmp
cs
xor
xchg
fldcw
cltd
or
lret
pop
fidivs
sub
imul
jl
vpcmpgtd
aas
inc
sub
in
mov
add
ds
push
out
dec
mov
es
shlb
xor
pop
add
or
out
hlt
cli
dec
loope
sbb
pop
pop
stc
ficoml
divb
fsubrs
mov
mov
call
cli
imul
aad
dec
cs
mov
jno
lds
xchg
pop
cmpb
cwtl
jmp
in
call
xchg
orb
lea
mov
addr16
and
cmc
sub
sbb
xor
cmp
call
and
out
aaa
dec
outsl
adc
jg
xchg
xchg
and
dec
notl
sub
jmp
cwtl
jge
ret
xchg
enter
je
test
and
sub
fistpll
movsl
lcall
adc
addr16
call
out
mov
xchg
push
lcall
stos
pop
js
dec
mov
hlt
cmpsb
mov
enter
push
mov
call
and
mov
mulb
or
test
popa
or
in
pop
xor
adc
mov
aad
popl
sub
cmp
dec
push
xor
cmp
cli
cwtl
movsb
cmp
sbb
push
call
add
ds
xchg
xchg
xchg
aad
sub
enter
xchg
popf
cmc
pop
lret
cmp
test
call
mov
cmp
aas
loopne
add
mov
adc
icebp
shl
lcall
xor
xchg
std
jb
mov
fisubrl
adc
cmp
jp
sbb
pop
aad
and
js
subb
test
mov
test
adc
mov
js
stos
jp
movsb
fwait
test
inc
mov
sbb
cmp
cmp
push
sub
jle
dec
loope
daa
xchg
fbld
popf
outsl
and
cmp
cwtl
js
xchg
or
out
dec
clc
test
lret
inc
fdivr
js
pushf
aas
xchg
cmp
inc
notb
xlat
test
mov
call
shrb
gs
cmp
and
mov
popf
icebp
imul
jbe
lods
cmpsb
and
mov
aaa
in
ss
sbb
ret
mov
stc
push
xchg
sub
sub
cmp
sub
dec
mov
pop
daa
push
lcall
sbb
dec
sbb
popf
dec
fdiv
lret
or
add
add
out
aaa
jp
xor
sub
cltd
pop
test
addr16
das
fidivl
inc
pop
sbb
iret
cmp
loope
out
daa
jg
pop
imul
lea
mov
movsb
mov
enter
enter
iret
xlat
subl
sbbl
push
lret
shlb
dec
xor
and
jb
rol
jnp
lea
out
sbb
or
mov
sub
mov
inc
or
xor
sub
xchg
xchg
out
pop
sbb
testl
or
sbb
lds
mov
sbb
cmc
repnz
add
jge
lret
mov
lret
idiv
aaa
mov
lcall
fs
or
dec
ljmp
stc
fildll
xor
or
jge
jo
mov
test
insl
fcoms
xor
add
xchg
popf
or
out
xlat
mov
addr16
xor
dec
and
xorb
mov
pop
mov
and
sub
mov
inc
test
sbb
dec
pop
or
push
aaa
xchg
xor
aas
mov
scas
adc
test
mov
fdivrs
push
clc
aaa
or
imul
mov
pop
xor
testb
or
mov
xchg
or
fnstenv
xchg
pop
cmp
xor
mov
enter
adc
aad
rcrl
mov
call
dec
cmp
push
xchg
lret
dec
cld
outsb
enter
or
mov
or
push
jp
jle
lea
in
in
jg
pop
cmp
insb
dec
ret
xlat
mov
mov
dec
movsb
push
call
xchg
mov
xor
stc
mov
or
and
mov
or
xchg
inc
clc
sub
int
fnstsw
mov
dec
cmpsl
das
add
xchg
iret
and
xor
int3
mov
mov
ret
mov
jae
and
rol
outsl
xchg
imul
cmp
xchg
jns
pop
out
mov
repnz
es
mov
popa
hlt
shlb
inc
fs
xorb
pop
stc
inc
not
insb
out
sbb
in
dec
out
add
xlat
stos
ljmp
or
es
enter
push
sbb
mov
lahf
mov
cmp
xlat
ljmp
shll
add
sub
sub
rcll
scas
bswap
push
movsb
lods
aad
addr16
daa
sbb
mov
and
daa
xchg
mov
in
in
scas
in
dec
xchg
out
cmp
fmuls
das
jg
xchg
testb
dec
mov
in
das
add
push
mov
adc
lcall
mov
test
js,pt
fmulp
pushf
pushf
out
div
iret
je
or
mov
clc
out
imul
into
mov
jg
daa
push
call
in
std
mov
mov
xchg
fcoms
aaa
jmp
mov
mov
arpl
fadd
sbb
inc
mov
leave
adc
sbb
out
test
cli
pop
test
aad
je
imul
xchg
inc
mov
push
or
adc
cld
fs
popf
call
lea
or
popa
ljmp
xchg
dec
pusha
sahf
jmp
add
pop
subb
and
hlt
push
and
sub
xchg
cmc
cwtl
xchg
push
jg
sbb
in
push
push
fdivrs
dec
pop
movsl
out
xlat
stos
xchg
out
mov
movsb
dec
aaa
xor
xchg
sub
in
push
dec
push
sbb
gs
in
testl
lds
ljmp
rol
add
inc
dec
cmp
cmp
jp
mov
mov
sbb
shlb
and
or
or
cmpl
je
mov
ficompl
adcl
push
sub
and
scas
and
out
ja
jecxz
or
lahf
rcr
mov
push
cmc
js
fwait
add
jmp
sbb
add
out
or
jne
fimull
xor
out
sub
jb
in
or
dec
in
cmp
jns
jo
add
sub
out
xchg
dec
xor
bound
cmc
sbb
mov
or
add
test
mov
adc
dec
mov
xlat
aad
sarl
jge
sbb
mov
or
test
js
es
add
push
pop
sub
icebp
xchg
stos
stos
out
dec
xchg
cli
ss
mov
cmp
jbe
sub
and
adc
cmp
adc
rcll
push
aas
in
popa
inc
push
test
dec
jbe
notb
mov
imul
mov
leave
mov
xchg
xchg
add
jbe
in
or
dec
cmp
sub
xchg
adc
bound
shl
test
pop
xchg
outsl
cmp
out
dec
xchg
or
inc
mov
mov
ret
out
popl
xchg
jnp
popf
pop
pop
test
fisubrl
xchg
xchg
inc
cmc
clc
jo
or
insl
pop
push
es
sbb
mov
scas
cltd
dec
aaa
jp
and
mov
pop
adc
cwtl
cwtl
add
icebp
enter
push
in
sbb
mov
mov
lds
outsb
xchg
movsl
fs
or
cmpsl
cmp
or
movsb
mov
inc
xor
sub
mov
lds
fbstp
push
jbe
xchg
adc
lods
in
cmpsl
mov
sub
push
adc
fimull
inc
xchg
hlt
or
nop
in
stc
sbbb
clc
test
inc
loop
in
xchg
xchg
cmpsb
jno
sbb
dec
ljmp
fmuls
test
inc
push
mov
inc
or
imul
enter
in
add
or
xorb
daa
enter
push
call
or
adc
adc
sub
xor
cmp
adc
fnstsw
aaa
ffree
mov
xor
adc
xchg
cmp
inc
loope
imull
or
testl
cmp
andl
xchg
aaa
jo
dec
movsl
enter
aad
fcoms
or
sbb
mov
mov
mov
aam
push
and
aad
call
loope
dec
mov
sbbl
popl
pop
aas
lret
jg
lds
sub
jns
mov
mov
pop
lret
mov
sub
and
ljmp
cmp
jg
out
sub
test
and
out
movsl
jbe
or
test
push
fs
aad
fisubrl
cmpsl
mov
pusha
inc
fadds
clc
or
mov
div
gs
stos
inc
inc
push
push
sbb
or
inc
mov
aad
dec
rol
mov
push
cwtl
lods
addr16
aaa
mov
bound
pop
mov
pop
frstor
adc
imul
add
mov
fmul
dec
cwtl
xlat
pop
test
cmp
clc
dec
or
push
mov
notb
mov
cmpsl
pop
xor
and
jns
fidivrs
es
sbb
xchg
pop
aaa
addr16
nop
xchg
dec
out
jg
jns
adc
dec
ljmp
aaa
mov
pop
dec
or
pop
mov
or
jbe
add
mov
mov
xor
inc
fildl
mov
dec
in
call
lods
or
sarb
fcoms
pop
jne
pop
mov
mov
fcomp
pop
add
cmp
adc
inc
lahf
mov
pop
xchg
in
xchg
in
movsl
pop
or
xchg
mulb
jno
mov
mov
cli
aaa
aas
loop
mov
xor
lcall
or
xchg
pop
pop
insl
inc
shll
aad
push
ss
jecxz
cmc
cmp
stos
sbb
adc
push
fldt
loope
add
dec
dec
xchg
sub
push
dec
xlat
ljmp
test
and
mov
out
xchg
sbb
xchg
and
or
jbe
jp
push
xchg
imul
cmc
push
push
push
sbb
test
xor
lock
dec
dec
sbb
or
test
pop
cmc
xchg
fildll
or
xlat
add
mov
or
dec
jbe
ss
pop
cmp
test
mov
adc
sub
xchg
sbb
call
into
push
in
xor
movb
inc
mulb
daa
pop
xor
rclb
daa
in
sbb
pop
rcrl
xor
or
xor
sbb
out
pop
xor
or
mov
mov
mov
out
ficompl
ljmp
gs
mov
push
hlt
mov
inc
sti
mov
dec
aad
test
mov
mov
ret
mov
inc
mov
loop
inc
in
dec
fists
data16
loope
cmp
clc
pop
loope
cmp
push
dec
xchg
mov
adc
xchg
loop
mov
add
cs
push
or
xor
testl
fisubl
aam
lds
dec
cmc
sub
jne
popaw
or
test
xchg
jbe
pushw
pop
das
xor
xor
jae
or
out
or
adc
xchg
xor
andb
mull
test
mov
sub
sub
dec
mov
rorl
test
stc
pop
cwtl
sbb
or
ljmp
or
popa
cltd
cltd
cmp
jbe
adc
subl
xchg
dec
ja
sbb
mov
lret
aas
out
stos
sub
add
mov
dec
sub
jbe
push
in
stos
addr16
mov
jp
jl
and
test
hlt
out
lea
cmc
push
xchg
xchg
or
ret
fstp
sub
arpl
cmp
sbb
fcmovnbe
lcall
pop
dec
out
aad
cmp
mov
repnz
lret
stos
fsubs
fucomi
mov
repz
and
jno
je
xchg
adc
testb
mov
cmp
push
push
ljmp
cmp
int3
je
push
leave
mov
or
cmp
or
test
add
dec
test
xchg
mov
stos
ss
mov
out
in
clc
out
push
mov
adc
or
pop
out
xchg
cmc
sub
es
rolb
cmp
out
cwtl
vcvtpd2psx
or
adc
int
bound
pushf
rcl
enter
cwtl
cld
add
xor
mov
mov
and
dec
nop
sbb
jbe
ret
mov
pusha
add
push
dec
mov
mov
or
fiaddl
sbb
test
jle
sbb
loope
and
mov
imul
push
or
icebp
or
test
jp
call
imul
pop
addr16
dec
sub
add
lea
or
addr16
push
js
inc
movsb
push
lret
adc
add
push
pop
or
test
clc
fdiv
sub
mov
xlat
sub
add
scas
ret
nop
dec
es
xchg
jmp
or
sahf
push
xor
movsb
or
xchg
pop
addr16
inc
lods
inc
xchg
cmp
cwtl
xchg
jmp
outsb
add
enter
or
fwait
xlat
jg
or
cmp
mov
addr16
mov
mov
lcall
jp
adc
movsl
xchg
int3
clc
fmull
scas
adc
test
pop
aad
ret
fcomps
mov
xchg
and
sub
ret
sar
lret
mulb
xchg
in
sbb
aad
mov
adcl
lcall
cmp
in
jmp
out
les
popf
sub
bound
subl
mov
call
xor
or
outsb
adc
inc
xchg
fcmovu
fcoml
fistps
sbb
xchg
int
in
mov
stos
sub
enter
cwtl
lret
push
addr16
sbb
mov
or
stc
call
adc
cli
and
push
rolb
lret
push
out
aad
pop
imul
xchg
mov
mov
xor
addr16
out
or
or
push
xchg
daa
sub
xlat
xchg
imul
xorl
stos
sub
hlt
gs
loopne
push
mov
lods
sbb
mov
ror
fmuls
pop
cli
pop
sub
aad
js
ret
in
jbe
mov
sub
in
xlat
xchg
dec
sub
adc
pop
out
dec
xor
aaa
js
sub
into
in
lcall
fs
idivb
jne
cwtl
lds
test
aaa
aaa
xor
or
fsubl
ljmp
pusha
leave
or
call
inc
pop
aaa
mov
fsubr
xchg
out
enter
les
push
xchg
xlat
mov
pop
out
mov
mov
xchg
mov
push
sbb
dec
lods
test
clc
test
faddl
mov
lcall
out
pop
fidivrl
xlat
pop
adc
test
enter
pop
dec
push
aad
sbb
out
xor
xlat
mov
mov
mov
push
ljmp
push
cltd
jl
sub
jo
or
movsl
sub
dec
mov
xchg
adc
loop
push
daa
fmuls
aad
adc
push
fsubs
and
xor
hlt
mov
push
jmp
jl
or
mov
xchg
out
fwait
js
cmp
and
icebp
pop
fadds
or
aaa
sbb
jecxz
aas
xchg
pop
cmpl
and
xchg
cmpsl
sbb
pop
xlat
cltd
mov
xlat
xchg
adc
adc
out
test
xchg
call
xchg
push
ds
enter
pop
loope
sbb
scas
and
xchg
cmc
subl
xchg
mov
mov
test
fdivrs
enter
test
adc
xchg
sub
add
out
cwtl
in
mov
xchg
push
sbb
daa
and
jne
addr16
iret
repnz
out
cmp
sbb
sub
add
mov
dec
dec
fdivrs
push
add
scas
push
pop
sbb
cmc
lret
xlat
ja
dec
out
or
mov
out
imul
push
sub
sbb
sbb
xchg
push
xchg
cli
cmp
cmp
mov
notl
xchg
pop
mov
mov
sbb
inc
cmc
pop
or
hlt
lds
sub
aaa
les
lcall
cmp
popa
cmp
adc
out
test
mov
cli
dec
xchg
push
xchg
ja
rorb
xchg
arpl
imul
or
testb
or
popa
xchg
jno
mov
xor
and
or
add
jmp
mov
ret
or
insl
les
pop
sub
mov
addl
test
je
push
push
pop
popf
dec
sub
icebp
mov
in
xchg
fldt
cmp
pop
dec
sbb
insb
pop
imul
xchg
loope
aaa
xchg
popf
lret
pop
repnz
xchg
das
fdivrs
or
lds
xchg
and
in
loope
js
in
das
ret
cmp
xor
pop
mov
mov
clc
xchg
in
mov
call
je
mov
inc
aaa
jne
push
push
lret
ljmp
mov
pop
ljmp
outsl
mov
enter
inc
push
dec
add
call
int
fisubrl
add
mov
lcall
push
lea
js
mov
mov
dec
add
mov
dec
das
or
xor
or
inc
mov
cmpsb
cmp
mov
push
mov
or
fmuls
call
push
xchg
push
std
sti
inc
xor
or
pop
xchg
lcall
sub
cli
fcoml
fstps
inc
push
rcrl
xchg
rclb
or
lcall
addr16
and
in
and
or
sub
mov
scas
shrl
in
in
aaa
popf
rorl
xchg
adc
push
js
pushf
or
lret
fwait
mov
xchg
cmc
lcall
lret
daa
jl
rcll
sbb
out
dec
lds
scas
jmp
rorl
inc
pop
xlat
sbb
cmp
mov
mov
sbb
ss
inc
lock
daa
stos
xlat
clc
mov
mov
or
sbb
adc
mov
dec
pop
dec
sub
out
scas
inc
dec
xchg
in
add
or
xchg
stos
ret
and
je
and
push
push
add
adc
sub
cmpsl
leave
ror
cmpsb
xor
push
insl
imul
mov
in
cli
idiv
add
xchg
jae
test
jne
pop
adc
out
lea
sub
out
sub
rol
in
or
mov
testl
xchg
add
imul
adc
xchg
daa
jp
cwtl
ljmp
dec
insb
pop
sbb
fcoms
add
ja
xchg
adc
js
mov
cmp
subb
mov
sub
sbb
inc
sub
cmp
or
cmp
xchg
add
pop
mov
mulb
out
dec
dec
imul
pop
ljmp
xor
mov
mull
dec
inc
dec
push
ja
xchg
enter
push
inc
push
add
xchg
xchg
out
negb
xchg
xchg
mov
in
xchg
and
movsl
cmp
adc
inc
jnp
pop
sub
movsl
stc
test
fidivl
loop
jno
addr16
or
addl
movsl
jg
lret
or
mov
es
or
mov
push
mov
pop
daa
in
je
cwtl
add
fisubs
sub
inc
push
es
pop
dec
mov
daa
xchg
inc
sub
sbb
pop
jg
mov
or
xchg
push
stos
js
sbb
in
pop
cwtl
mov
cmp
imull
scas
xchg
or
sub
ret
aaa
mov
movsl
adc
cmc
jl
adc
cltd
stos
stos
pop
aad
les
inc
pop
mov
sub
push
idivb
popa
das
jg
int
pop
inc
jle
sarl
je
cmc
cmp
ljmp
out
popf
enter
mov
clc
mov
dec
mov
mov
mov
insl
scas
fstpl
fs
into
out
sbb
dec
imul
je
xchg
push
cmc
aaa
push
mov
push
popa
enter
push
in
inc
cwtl
gs
ljmp
enter
shll
mov
inc
push
dec
push
popf
out
in
stc
call
int
pop
icebp
mov
clc
in
mov
test
out
inc
xchg
aad
xchg
pop
imul
pop
insl
or
push
scas
inc
cmp
dec
xlat
and
dec
mov
test
fmuls
adc
jmp
jbe
or
mov
cli
or
dec
fmuls
fs
aad
mov
cmpsl
pop
fidivrs
mov
mov
enter
fprem1
and
add
jle
mov
push
mov
dec
in
and
leave
and
dec
pop
dec
adc
pop
pop
movsb
xchg
inc
das
dec
and
daa
xchg
les
divb
in
sbb
int
jbe
mov
cmpsl
sub
sub
xlat
xchg
sbb
in
cli
sub
les
in
xchg
daa
or
or
into
dec
sbb
xor
cs
pop
or
adc
pop
call
jmp
popa
inc
mov
dec
sbb
pusha
cmp
jmp
stc
fadd
mov
sbbb
dec
out
ret
cld
jbe
push
ljmp
dec
insl
or
in
xchg
daa
or
enter
adc
push
sbb
sbb
dec
push
sbb
addr16
cmp
in
pusha
or
pop
stos
sbb
repz
or
xchg
sbb
jno
or
sub
cmc
add
cld
ja
or
inc
pop
xchg
sbbb
in
sbb
out
jbe
inc
cmc
mov
aaa
xchg
enter
lods
test
fldcw
adc
adc
insl
xchg
popl
filds
mov
imul
dec
or
popa
pop
fiaddl
mov
mov
or
ret
sub
movsl
inc
xchg
mov
lret
pop
jl
dec
das
je
movsb
iret
lcall
out
or
addr16
scas
mov
sbb
sbb
nop
movb
mov
ret
xlat
mov
std
in
jne
mov
mov
xchg
adc
cwtl
mov
add
xor
and
icebp
not
jbe
xor
insb
insb
dec
daa
test
fisubrl
jbe
cmpb
sbb
inc
push
xor
shll
xchg
mov
fisubl
test
pop
mov
push
xchg
das
mov
xchg
xchg
iret
lret
dec
xlat
stos
aaa
xchg
mov
sarb
xlat
adc
mov
xlat
push
sbb
call
lds
out
xchg
mov
and
ficompl
cmp
sub
jns
popa
out
dec
icebp
aaa
or
xor
xchg
enter
mov
sub
add
clc
mov
xchg
lret
adcb
inc
push
cmp
enter
mulb
lahf
aas
push
lret
js
stos
mov
mov
add
in
sub
jp
aaa
les
inc
push
in
pop
inc
add
jbe
cwtl
sbbl
or
imulb
mull
movsb
pop
dec
cmc
aaa
jns
mov
pop
mov
neg
pop
and
xchg
int3
int
out
xlat
mov
cmc
add
push
movsl
adc
aad
mov
cmp
cli
mov
in
or
sub
daa
pop
mov
test
cltd
enter
pop
sbb
dec
stos
in
ret
mov
cmp
pop
mov
enter
clc
daa
sbb
out
pop
addr16
or
cltd
dec
imul
fsubrs
push
adc
sbb
call
pop
js
popa
cwtl
lea
enter
xlat
sub
mov
xchg
xor
mov
mov
cmc
dec
cmp
ds
or
movsl
js
mov
push
in
mov
lret
subb
je
ficompl
mov
mov
jg
cmp
clc
sbb
daa
aad
addr16
cmp
pop
testl
or
fstps
jg
in
mov
xor
cmp
ret
daa
sbbl
movsl
cmp
or
fimull
cli
hlt
jp
and
leave
mov
testb
out
cwtl
mov
or
test
enter
push
aaa
cmp
pop
mov
out
pop
in
sbb
bound
stos
and
gs
arpl
inc
xchg
idivb
cs
and
test
addr16
lds
popf
lret
sbb
mov
dec
sub
in
adc
mull
lret
sbb
xchg
popf
or
imul
or
aaa
or
cmp
dec
in
or
jp
cmpsl
inc
push
mov
pop
dec
jp
and
sbb
cltd
pop
mov
lea
notl
xor
inc
cmc
inc
mov
rcll
clc
out
xor
insl
jp
daa
rcrl
and
sbb
push
imul
xchg
add
lcall
cs
fmul
mov
and
pop
xchg
imul
ss
popf
mov
test
add
pushf
out
lret
xchg
shrl
xchg
xor
jl
sbbl
xchg
out
movsl
aaa
sub
pop
mov
mov
lcall
icebp
or
cmp
daa
pusha
adc
das
divl
mov
enter
sub
scas
ret
mov
hlt
mov
aad
notb
cmp
or
insl
fwait
cmp
cmc
add
fistpl
fcoml
js
aad
cmpsb
mov
xchg
loopne
cmc
test
pop
and
mov
ret
mov
sti
jae
dec
scas
mov
negl
aaa
mov
cmc
xor
push
push
mov
sub
ficompl
dec
ljmp
mov
js
stc
jbe
sub
lret
or
sbb
jmp
imul
cmc
in
xorb
dec
mov
add
or
sbb
or
leave
inc
pop
push
lahf
add
sbb
int
push
lods
lret
ljmp
test
push
cmpsb
push
xlat
js
ss
sbb
cmc
popf
push
or
mov
mov
shll
jbe
or
add
sbb
sbb
fcoms
loope
sub
into
dec
movsl
xor
cmc
pop
cmpsb
stc
sub
or
dec
mov
dec
gs
xchg
mov
lret
aad
enter
out
je
adc
sub
sub
pop
or
int3
stos
in
jae
sub
es
xchg
pop
js
adc
in
fmuls
jmp
test
movsb
outsb
arpl
mov
jbe
or
dec
xor
xlat
aad
mov
out
out
mov
jbe
jno
mov
mov
imul
lahf
push
sbb
lcall
add
xchg
lds
lock
sar
sbb
leave
jbe
loop
lds
sarb
xchg
xlat
dec
imul
hlt
in
adc
dec
xor
aad
jge
cwtl
daa
stos
int
push
mov
and
jns
pop
mov
imul
dec
or
dec
pop
fadds
daa
les
call
mov
sbb
loope
aad
push
adc
insb
cld
outsb
mov
mov
adc
lahf
xor
loope
lret
ds
aad
rcrl
dec
lcall
sub
scas
in
lods
sbb
notl
in
mov
mov
out
sbb
xor
js
xor
outsb
les
std
cwtl
and
and
pop
jbe
popa
js
lds
or
shrl
stos
ljmp
inc
push
push
cli
push
pop
cli
stos
dec
or
or
sbb
aam
inc
cli
jp
push
pop
shl
dec
daa
or
in
inc
jg
stos
push
and
xor
and
es
add
pop
push
int
std
mov
dec
ljmp
test
les
and
dec
xorb
xchg
aaa
xchg
je
mov
mov
pop
lock
fildl
xchg
dec
dec
sub
mov
mov
divb
test
cmc
adc
clc
xchg
add
xchg
dec
xchg
pop
enter
inc
movsl
cmpsb
out
xchg
lret
adc
hlt
cmp
andb
dec
out
pop
notb
roll
mov
jno
je
adc
roll
lock
xchg
xor
aad
cmp
mov
cmp
inc
cmpsl
or
sbb
in
fsubr
scas
sarl
lods
leave
pop
sarl
cmp
inc
mov
rcl
mov
or
adc
mov
outsb
rcr
pop
dec
and
mov
rolb
pop
push
cmp
aam
aad
mov
cltd
adc
lods
jmp
lea
aaa
enter
js
mov
in
addr16
cmp
cwtl
jmp
cmc
repz
xor
adc
or
enter
xchg
test
cltd
imul
fisubrl
mov
repz
sbb
mov
negb
or
push
mov
or
mov
dec
and
in
inc
xor
fisubl
dec
adc
cmp
inc
cmp
sub
xchg
ljmp
dec
imul
add
sub
xchg
xor
ret
add
cmpsl
or
pop
or
mov
js
dec
lret
call
and
negb
mov
jp
stos
pop
mov
cmc
sub
nop
pop
xchg
lcall
lahf
inc
add
inc
cwtl
sub
sbb
subl
sbb
mov
decl
lods
je
testl
add
cmc
ret
jmp
in
mov
daa
imul
fcoms
ror
xor
jno
push
test
mov
add
je
jbe
jmp
mov
and
dec
or
jno
mov
icebp
pop
xchg
sbb
push
mov
or
sub
or
add
sub
addb
je
test
je
add
in
in
push
xor
or
sbb
fisubs
es
out
adc
divb
xchg
addr16
mov
in
imul
lods
jecxz
lcall
and
dec
mov
lret
xchg
mov
add
cwtl
loop
pop
call
xlat
test
dec
imul
out
sub
cmp
aaa
inc
sub
sub
lcall
sbb
cmp
xchg
lock
aad
mov
push
mov
sbb
enter
cmp
pop
clc
js
add
int3
dec
push
adcb
test
dec
xchg
push
xchg
int
cmc
js
cmpsl
mov
dec
add
sti
cmp
pop
add
lock
inc
mov
or
xor
cmp
jl
lods
lcall
sub
fdivrs
es
inc
out
pop
xchg
lcall
call
and
test
out
xor
dec
xor
div
imul
xchg
out
addr16
pop
xchg
xchg
test
jmp
sbb
mul
inc
loopne
out
fldenv
lcall
xlat
inc
pop
into
jle
mov
push
fwait
jg
enter
xchg
hlt
fadds
adc
ljmp
lret
sbb
push
mov
push
cmp
pop
rol
lods
xlat
cmp
add
in
dec
sub
out
mov
sbb
dec
jb
sbb
and
adc
ret
stos
sbb
je
clc
ret
aaa
negb
and
mov
push
mul
add
repnz
dec
mov
adc
xchg
ljmp
mov
fcmovbe
mov
test
push
adc
mov
xor
test
daa
push
mov
out
mov
mov
cmc
add
pop
daa
mov
sub
pushf
or
jl
dec
in
leave
pop
test
imul
ficoms
adc
sbb
clc
invlpg
fimuls
in
xchg
rcr
test
jno
js
or
cmpsl
mov
pushf
es
je
pop
mov
mov
inc
jp
roll
in
cmp
inc
xchg
mov
divl
repz
xor
loope
daa
xor
stc
lock
js
xbegin
push
or
xchg
jmp
call
call
rcrb
fwait
push
sub
mov
push
test
xor
xchg
dec
jmp
fimull
push
stos
pop
inc
xor
dec
out
or
fsubrs
popa
arpl
push
xchg
xchg
sbb
add
sub
mov
arpl
xchg
lcall
cmpsb
cli
pop
sbb
clc
xchg
xchg
mov
in
xor
xchg
idivb
rcrb
xchg
sub
pop
inc
mov
imul
cmp
xchg
repz
lret
adc
les
push
rorb
fstps
insl
xchg
sbb
loope
ljmp
data16
pop
popa
cmc
iret
outsl
out
cmp
adc
call
jmp
mov
stos
jo
sub
or
xlat
out
lcall
orb
push
cmp
and
or
adc
xchg
cmpl
xchg
call
mov
inc
in
movsb
mov
iret
insb
aam
gs
popa
adc
out
clc
aaa
fdivr
in
adc
push
fld
mov
mov
fsubrs
loope
xchg
cmp
jg
enter
shr
pop
sub
cmc
add
test
fs
aas
sarl
popa
jae
dec
lret
popf
jae
pop
mov
repnz
dec
mov
nop
pop
or
lcall
mov
out
push
and
or
cli
or
aas
lret
xlat
xchg
jnp
jl
enter
xor
clc
push
fcmovbe
sbb
stos
fnstsw
lods
fucomp
in
mov
mov
cmc
dec
sbb
int
xchg
jns
jg
mov
xchg
jns
gs
cmp
pop
or
jnp
out
hlt
sbb
jl
adc
adc
lods
ss
jmp
lods
or
push
or
pop
jno
daa
lret
sub
xlat
and
xor
pop
jns
or
fcoms
or
adc
add
popa
sub
ljmp
mov
lret
aas
gs
cmp
movsb
mov
adc
idivl
cli
aad
nop
shl
imulb
add
and
inc
sbb
ficompl
adc
dec
adc
xchg
push
sub
cld
stos
in
aad
std
mov
fcomip
ljmp
sbb
stc
add
lea
in
rcrb
mov
aaa
leave
inc
jb
mov
or
mov
mov
inc
cmpsb
js
test
push
push
mov
mov
mov
lret
addl
addr16
mov
dec
bound
hlt
push
lea
lret
out
mov
or
out
sub
mov
inc
pop
imul
pop
cmp
rorl
jns
inc
in
out
out
daa
addr16
cmp
sub
sub
sbb
ret
xchg
arpl
dec
xchg
or
rcll
adc
mov
mov
jo
fisttpll
dec
xlat
and
fisubrl
xchg
xchg
arpl
sbb
pop
cmp
test
addr16
sbb
or
add
call
imul
int
xor
cmpb
test
fdivr
or
or
fs
scas
stc
inc
pop
cmp
fsubs
fstl
je
imul
inc
cmp
push
shr
mov
cmc
js
lret
mov
leave
ds
push
sbb
cwtl
notb
ss
fdivr
and
sbb
nop
sub
shll
inc
jae
out
addr16
inc
xchg
mov
and
lods
push
push
in
xor
lcall
mov
cmc
mov
or
in
lds
or
push
cmp
pushf
idiv
stos
sbb
and
out
loop
jg
mov
ret
or
add
cli
call
rorl
or
xchg
test
add
jbe
dec
lcall
out
bswap
cmp
repz
mov
fstp
add
psrld
es
mov
sbb
js
roll
jno
pushl
mov
lahf
in
xor
fdivs
xchg
cmpsl
cmp
ljmp
fucomi
xor
mov
daa
add
adc
xchg
pop
jg
divb
jg
imul
cmp
jp
and
adc
mov
sbb
lods
insb
jp
sbb
adc
leave
push
xchg
add
xchg
jb
iret
mov
les
mov
addr16
loopne
or
mov
and
in
sub
ljmp
fadds
add
xlat
frstor
popa
push
dec
lods
xor
shlb
test
mov
adc
movsl
lea
or
in
popf
sbb
add
push
xchg
mov
cli
mov
fiaddl
or
lret
lret
out
sbb
sbb
daa
cmp
or
and
std
aas
dec
in
cmp
or
push
add
xchg
xor
and
adc
mov
mov
sbbl
test
pop
daa
in
fimull
dec
xchg
test
mov
cmp
sbb
notb
or
jecxz
mov
in
dec
add
pop
add
cmp
mov
or
cmpsb
or
cmp
aaa
in
jge
dec
and
sub
pop
fmull
lret
dec
mov
sub
xor
xchg
mov
movl
mov
pop
adc
xor
adc
xlat
adc
in
out
dec
mov
movsb
adc
hlt
pop
je
out
fimull
push
dec
dec
add
fwait
or
addr16
mov
mov
pop
dec
jae
pop
add
add
mov
aaa
jp
movsl
daa
jb
pop
hlt
sub
xlat
push
sub
add
lcall
sbb
mov
invd
cwtl
addl
add
negl
pop
adc
cmpsb
test
jg
jge
mov
xchg
mov
or
dec
sbb
push
testl
push
push
insl
jne
pop
or
out
mov
pop
or
lret
cwtl
sub
sbb
adc
push
xlat
xor
mov
xor
or
outsb
enter
in
cmp
stos
imul
or
and
mov
mov
add
pop
stos
leave
call
imul
mov
clc
pop
cli
in
lds
leave
mov
pop
jg
push
cwtl
mov
popa
inc
sub
mov
aad
mov
rol
add
mov
push
stos
jo
ss
leave
and
jp
cs
incl
stos
pop
daa
test
xchg
mov
or
movsb
aad
out
jmp
mov
inc
inc
xor
js
fstpl
push
ror
cmp
repnz
es
pop
inc
cmp
and
xor
outsl
out
in
xor
xchg
jbe
dec
mull
ja
fwait
lcall
test
mov
push
orl
dec
bound
out
adc
cmp
mov
jg
out
xchg
hlt
mov
xchg
jb
fsqrt
mov
or
or
jmp
xchg
dec
or
test
clc
sbb
sub
out
jl
mov
ja
dec
sbb
dec
pop
insl
lahf
mov
aad
clc
mov
mov
mov
mov
mov
mov
push
test
mov
cmp
loope
mov
jp
daa
jg
xchg
popf
sbb
mov
adc
xchg
out
lret
cmp
clc
cmpsl
add
out
js
mov
and
adc
sbb
je
cmp
push
and
jg
sbb
or
push
out
adc
mov
loop
xor
popf
xor
or
pop
xor
cmp
aad
mov
popf
sbb
xchg
pop
xchg
xchg
and
in
and
insb
mov
mov
cmp
xchg
js
xlat
movsl
mov
xor
mov
in
push
jmp
pop
inc
mov
adc
or
xchg
fldl
pop
in
cmp
sub
sbb
mov
bound
inc
mov
lcall
jbe
cmc
push
xchg
pop
or
mov
mov
js
popf
cmp
sbb
push
sbb
bound
stos
adc
xchg
dec
push
adc
movb
fsubr
nop
into
sahf
ss
ror
cmp
stos
inc
fisttpll
cmp
sbb
dec
push
mov
mov
lds
inc
std
push
lcall
in
sbb
mov
cwtl
dec
or
jp
pop
rcll
enter
jmp
and
mov
dec
cmp
xchg
call
iret
movsl
scas
add
mov
cwtl
and
jp
push
adc
out
lds
insl
dec
xchg
daa
push
lcall
pop
js
lret
mov
mov
imul
xchg
ja
xchg
pop
inc
cwtl
adc
or
jp
int
imul
bnd
lret
sbb
shrl
cmpb
inc
or
cmc
dec
fwait
mov
adc
cltd
inc
out
xchg
and
in
movsb
and
mov
les
mov
fsubs
cli
inc
jno
aaa
dec
addr16
pop
test
mov
scas
ljmp
out
mov
dec
cmp
cwtl
mov
mov
adc
jp
xchg
mov
push
sbb
adc
mov
mov
popf
call
mov
sbb
decl
cmp
jmp
pop
test
es
cmc
cmp
out
into
sbb
or
xchg
lea
repnz
data16
cmp
shlb
iret
xchg
xchg
pop
adcl
imulb
or
in
cmp
mov
pop
les
orl
mov
lret
fadd
push
lcall
negl
stc
fimull
mov
sub
xlat
xor
lcall
or
push
test
sub
je
fimull
mov
inc
mov
subb
loop
sub
rolb
and
mov
cmp
cmp
inc
shlb
mov
push
out
push
inc
mov
lods
cli
sbb
push
xor
xchg
add
lret
fimull
cmc
pop
addr16
lods
shrl
push
cmc
adc
mov
sbb
xlat
inc
mov
sbb
xchg
xchg
pop
mov
and
adc
enter
mov
and
mov
pop
test
cmc
mov
js
aas
sbb
shr
aas
fldl
cmp
xlat
gs
das
dec
test
imull
movsb
imul
cwtl
or
jb
data16
dec
mov
ljmp
dec
sub
mov
test
enter
dec
clc
aas
hlt
pop
je
lret
and
aad
mov
addr16
jg
dec
jp
aam
jne
push
xor
sbb
stos
xchg
jmp
cmc
in
inc
ss
mov
mov
cmp
push
sbb
fldenv
or
jmp
imul
pop
xchg
lcall
in
push
xor
cli
out
test
or
dec
test
sbb
mov
stos
or
xchg
sbb
test
out
imul
sbbl
mov
adc
dec
sub
add
xchg
xchg
xlat
and
cmc
in
pop
sub
out
pop
jbe
jle
mov
dec
or
inc
xchg
add
cmp
cli
sbb
cmpsl
sub
enter
mov
cltd
nop
mov
jmp
pop
xchg
testb
ret
daa
aad
bnd
jl
rcll
stos
mul
adc
xor
inc
int
fs
push
inc
ficoml
mov
stos
dec
pop
or
stos
sub
aaa
cmp
mov
scas
int
pop
mov
cwtl
pop
inc
retw
shlb
jnp
jmp
out
cmp
outsl
jmp
jmp
rcrl
xchg
mov
cmc
cmp
or
stc
pminsw
daa
dec
aam
cmc
imul
out
cwtl
jo
cmp
aad
or
negl
cmp
mov
mov
adc
lds
cwtl
dec
call
mov
jns
lds
les
les
mov
mov
js
push
lcall
xchg
or
stc
ror
mov
sbb
das
adc
lods
movsb
pusha
call
or
mov
push
js
pop
dec
test
xchg
cli
in
or
inc
lods
inc
jno
pop
cmp
sbb
popf
sbb
aaa
in
rolb
mov
imul
sub
xchg
call
cwtl
mov
dec
in
dec
lea
bound
dec
mov
nop
in
and
inc
lock
xchg
cmp
mov
sub
testl
in
cmp
cmc
aas
ja
das
mov
cs
addl
mov
sub
xchg
out
shl
cld
push
xchg
aaa
cmp
adc
aaa
xchg
scas
stos
mov
popf
std
push
jb
daa
test
jp
pop
pusha
add
les
xchg
addb
xchg
dec
int3
xchg
ss
das
mov
aaa
sbb
push
pusha
loope
mov
pop
ret
in
popf
test
lret
js
inc
pop
sbb
xchg
and
or
in
xchg
pop
add
mul
jns
call
das
fdivl
inc
xchg
or
sbb
and
dec
or
or
fsubl
pop
mov
leave
testl
adc
out
fdivs
in
adc
mov
and
loope
jp
mov
sub
xchg
out
sub
rol
add
inc
cmp
add
mov
mov
pop
add
sar
daa
inc
pop
adc
dec
dec
mov
js
xor
jns
test
or
add
daa
loopne
push
dec
in
push
imul
imul
add
sbb
sbb
sbb
data16
or
cmc
mov
mov
insl
dec
sbb
cmp
xchg
cs
mov
inc
cmp
xor
js
xor
pop
mov
dec
jl
pop
cmc
mov
lea
mov
daa
rcl
dec
in
push
out
mov
push
out
mov
sbb
cwtl
push
jbe
pop
xchg
imul
pop
dec
dec
sar
vpshuflw
dec
out
and
inc
imul
out
cmp
cltd
enter
dec
addr16
mov
dec
or
mov
cltd
mov
push
test
xchg
mov
pop
cmp
rorl
icebp
mov
addr16
cmc
gs
outsl
mov
bound
aaa
xor
ljmp
fcmovb
subb
xchg
jl
test
xchg
adc
xchg
xchg
mov
in
in
xchg
pop
mov
xlat
pop
aas
jbe
test
sbb
jmp
adc
dec
cmp
sub
xchg
out
aaa
fildll
xchg
mov
sub
mov
outsb
pop
in
xchg
js
mov
dec
cmpsl
rcll
nop
fs
jg
xchg
mov
cwtl
lahf
push
add
mov
sub
pop
icebp
mov
xlat
pushf
lret
sarl
cmp
xchg
jno
mov
fstpt
lret
cli
addr16
xchg
add
bound
lock
cmp
lock
xchg
mov
repz
xor
inc
mov
arpl
test
xor
fdivs
pop
enter
je
mov
test
stc
fadd
mov
and
clc
aaa
imul
xor
es
enter
pop
out
sub
cmpsb
push
icebp
sbb
jp
lahf
adc
ret
mov
inc
sbb
jns
mov
out
lea
push
cmp
scas
mov
test
test
cmp
cmp
mov
out
jb
in
mov
pop
mov
adc
je
loope
sbb
sbb
pop
inc
adc
pop
shll
cmp
mov
lds
mov
lods
je
push
call
xchg
jmp
sbb
mov
mov
ljmp
inc
addb
or
jb
jg
mov
jns
pop
mov
fbstp
stos
adc
mov
je
xchg
dec
js
or
dec
xchg
out
movsl
mov
cwtl
out
xchg
bound
test
cmc
test
mov
aad
aaa
cmp
add
mov
cmp
sub
les
sub
lret
dec
mov
jmp
or
xchg
rcl
js
mov
sbb
cli
mov
test
xor
in
pop
inc
xchg
dec
xchg
sbb
xchg
test
mov
aaa
adc
imul
in
mov
mov
or
cmp
lds
stc
orb
out
nop
mov
adc
adc
iret
push
cmc
mov
mov
inc
leave
jle
das
aas
mov
or
cmp
dec
jp
jbe
ret
clc
dec
test
aaa
jns
subb
push
out
add
mov
repnz
mov
imul
sub
lds
enter
pop
pop
xchg
pop
or
adc
daa
cmp
xor
in
in
sub
lcall
test
ret
xchg
or
call
jl
fcom
adc
sbb
fdivs
sbb
xchg
push
mov
jp
clc
xor
push
mov
sbb
loope
mov
jp
xchg
jge
xchg
and
add
orl
sbb
cmp
icebp
or
ljmp
stos
jp
insb
aaa
cmc
adc
xor
push
pop
mov
xorb
adc
dec
push
xchg
inc
xchg
mov
icebp
xor
push
and
ds
idivl
adcb
js
xor
inc
push
mov
leave
arpl
push
xchg
mulb
daa
pop
lods
vpmadcsswd
pop
cltd
cli
ret
dec
xor
addr16
insb
aas
jo
daa
rcl
sbb
mov
inc
jbe
xor
jge
dec
loope
aad
inc
dec
pop
adc
test
out
mov
addr16
add
dec
outsl
ss
and
jbe
xor
xchg
xor
shl
mov
imul
xor
cmc
mov
ffree
xlat
mov
leave
std
jo
in
mov
add
aaa
or
and
and
stc
fiaddl
pop
out
lcall
cmp
push
mov
imull
mov
xor
in
daa
lcall
lcall
push
cli
fildll
orb
imul
or
or
movsb
sbb
cmp
mov
test
ret
mov
loopne
add
mov
test
cmp
jp
sub
out
mov
fdivs
cwtl
sbb
outsl
or
call
clc
gs
ljmp
mov
and
shrl
test
in
pop
cmp
add
fsubs
xchg
and
enter
jp
xor
push
repz
lret
out
and
xchg
bound
mov
gs
or
mov
dec
sub
xchg
and
sti
jno
out
imul
pop
dec
hlt
and
inc
jbe
cmp
ljmp
jbe
xchg
mov
xchg
sbb
mov
adc
xchg
out
pop
pop
inc
adc
cmpsb
aad
in
adc
std
adc
sub
popf
or
inc
lock
push
mov
xchg
inc
clc
pop
pop
lods
dec
test
cmpsb
popf
rolb
cmc
cmc
dec
sbb
push
pop
outsl
push
ljmp
shll
cmp
and
fwait
inc
sub
sub
js
adc
ss
ja
lock
enter
stc
inc
dec
pop
jmp
cwtl
insl
mov
sbb
push
fdivr
ret
daa
out
inc
mov
loop
inc
testl
xchg
pop
imul
xor
sbb
xor
mov
dec
or
cltd
jae
test
popl
adcl
mov
xchg
sbb
or
sbbb
js
xchg
jp
call
jmp
addr16
test
insl
jo
daa
or
xchg
add
xor
mov
push
or
dec
mul
mov
sbb
cmp
je
cmp
int3
cmp
fcoms
mov
sub
mov
mov
rcrl
adc
xchg
stc
xor
out
sub
xchg
or
in
sbb
jg
jbe
daa
sub
cli
addr16
addb
mov
jne
cmp
js
test
call
ja
cmp
sbb
push
adc
inc
lea
sub
sbb
mov
rorb
fisttpll
xchg
cmp
cwtl
movsb
push
cmp
sub
cmp
flds
mov
insl
testb
and
ficoml
push
bnd
sub
out
ds
dec
das
jno
daa
lods
icebp
mov
add
pushl
mov
dec
dec
lret
cmp
stc
cmc
idivl
sbb
push
pop
fsubs
ljmp
lods
cmp
mov
notb
mov
out
mov
imul
daa
mov
lcall
xchg
dec
aas
adc
push
push
icebp
ss
fidivrl
pop
fdivr
into
jne
mov
lret
sbb
jl
sub
pop
call
cmp
mov
je
in
mov
adc
js
dec
aaa
test
cmp
fdivr
xlat
hlt
dec
cmp
adc
sbb
pop
mov
dec
js
ljmp
jmp
mov
ret
or
and
ljmp
push
repnz
cli
xchg
pop
sub
lret
sbb
test
add
sub
cwtl
cmp
xor
xchg
or
cli
xchg
movsl
mov
lret
out
xor
sbb
test
cmp
sub
mov
dec
mov
adc
pop
mov
mov
stos
daa
cli
mov
adc
lret
cmpsb
xchg
sub
or
ret
sbb
test
jmp
mov
lcall
shll
add
mov
shrl
cmpsb
test
in
sbb
cmp
loopne
xlat
cmc
outsl
inc
dec
mull
btc
inc
jl
sbb
add
out
call
lcall
and
jecxz
not
xchg
lahf
arpl
orl
cmp
stc
jmp
xor
cmp
in
mov
arpl
or
jg
cmp
scas
loope
cmp
and
adc
ja
icebp
jmp
js
push
lcall
ljmp
xchg
xchg
cmc
mov
cli
mov
sub
or
ja
xchg
xor
and
mov
sub
cmp
fldenv
fnsave
cmp
test
fcomps
cwtl
insb
mov
push
add
xchg
icebp
or
xchg
mov
out
adc
mov
pop
fdivrs
icebp
mov
xchg
ss
jl
daa
jne
push
mov
test
inc
cltd
lcall
rorb
pop
adc
daa
mov
sbb
or
adc
lret
rcr
inc
mov
popa
lds
mov
daa
icebp
xchg
cli
ljmp
and
cmp
jge
push
loope
jbe
jo
outsb
sbb
fisttpll
cmc
sbb
out
lcall
ret
mov
pop
movsl
cld
mov
shr
fsubs
pop
jp
sub
fstps
pop
sahf
pop
inc
sbb
cli
fsubs
mov
or
mov
imul
dec
push
inc
lret
pop
sbb
mov
lea
cmp
imul
pop
shl
fcmovu
in
sub
inc
mov
pop
je
out
add
into
int
stc
sti
xchg
aad
call
divl
push
div
subl
xchg
xchg
sub
imul
push
mov
cmp
xchg
sti
popf
jp
cmpl
lock
sbb
sub
repnz
aaa
cltd
and
xchg
cmpsb
cmpsb
in
dec
lcall
iret
cmpsb
mov
jbe
pop
pop
cwtl
xchg
mov
cwtl
xchg
shlb
add
test
xchg
sbb
js
inc
dec
jae
daa
rcrb
fld
push
pop
add
loope
pop
mov
mov
call
sbb
mov
jbe
jno
xor
jmp
mov
adc
ficoml
push
jnp
xor
lcall
lret
into
in
jbe
clc
enter
lock
adc
pop
shlb
inc
add
call
dec
aad
lahf
dec
imul
add
fidivrl
rorl
mov
fimull
pop
lret
aaa
push
out
sbbl
or
clc
sub
sahf
sub
pop
out
cmp
mov
pop
stos
mov
mov
and
fisubrl
addr16
fcomip
imul
push
push
daa
fsubs
mov
imul
xchg
sub
addr16
movsb
inc
pop
ljmp
dec
or
inc
xor
mov
cmovnp
cmp
leave
jg
std
push
or
out
push
sbb
jg
sub
inc
cmp
aaa
std
cwtl
testl
enter
lret
gs
sbb
jmp
sbb
add
mov
inc
inc
pop
mov
sub
adc
xlat
cwtl
loopne
push
out
and
and
out
inc
jp
mov
orl
cmp
and
mov
xchg
sub
rcll
imul
pusha
bound
sbb
mov
dec
stos
push
inc
cmpsb
xchg
mov
loop
xor
js
loopne
in
fadds
inc
sar
sub
adc
mov
popf
cmp
sub
insl
cmp
daa
push
add
cmc
testl
rcrl
cmp
mov
mov
js
inc
jp
dec
call
xchg
fnsaves
adc
pop
push
mov
testb
or
push
mov
stos
sbb
cltd
cmpsb
aaa
imul
push
imul
sub
js
repnz
lods
leave
jmp
jg
xlat
mov
js
mov
mov
adc
cmp
or
in
pop
jp
mov
rol
lret
loope
mov
movl
cmp
addr16
mov
and
jecxz
sbb
push
xor
or
cli
pop
cmc
xchg
fldenv
in
cmp
ja
pushf
imul
jp
mov
sub
or
ljmp
neg
mov
idivb
mov
mov
js
ret
pushf
call
xlat
mov
mov
les
dec
int
push
push
pop
out
adc
inc
pop
sbb
inc
test
sbb
push
dec
push
adc
cmp
pop
roll
pop
inc
pop
cmp
sti
leave
fnstsw
fsubrl
mov
lds
or
addr16
test
pop
mov
or
pop
xchg
aaa
cmp
sub
xlat
jae
jp
and
dec
cmp
test
push
add
cli
or
cmpsl
mov
leave
adc
fiadds
mov
mov
xor
scas
loopne
xor
or
push
sbbl
lcall
adc
xchg
stos
sbb
mov
mov
xor
cmp
or
inc
mov
rcll
dec
adc
jg
imul
push
addr16
adc
mov
or
cli
xchg
divl
scas
mov
sub
dec
and
xchg
jbe
sub
cmp
mov
jbe
out
xchg
lcall
cmpsb
or
pusha
rol
sub
fstps
add
sub
dec
sbb
jp
notl
xor
leave
xchg
flds
shlb
pop
movsb
xor
out
and
pop
sub
dec
cltd
and
in
sbb
pop
xchg
cli
push
lcall
lahf
push
mov
dec
xchg
push
pop
roll
mov
dec
cwtl
or
sub
sub
xchg
das
xchg
incl
fcmovb
pop
mov
out
out
and
in
and
pop
pop
insl
pop
in
xchg
xchg
test
push
ljmp
dec
stc
or
mul
enter
fsubrs
mov
subb
ljmp
inc
and
cli
jg
sbb
push
leave
xlat
sbb
ret
inc
pop
cmp
addl
imul
xchg
mov
pop
pop
lret
sub
mov
mov
dec
test
popa
call
mov
pop
xchg
xchg
ss
sbb
mov
mov
imul
lcall
stc
imul
adc
sub
pop
stos
mov
sub
rorl
mov
sub
out
pop
mov
fmuls
dec
cmpl
cmpsb
cwtl
and
cli
clc
mov
sahf
adc
ret
es
sub
xor
std
dec
cmovs
or
or
xor
jno
xor
sbb
lret
sub
jge
sub
mov
or
add
ss
jb
mov
loope
or
xchg
adc
mov
lret
sub
push
subl
pushf
mov
stos
lcall
lods
jmp
adc
aad
pop
popf
sub
mov
sbb
dec
push
pop
fwait
lock
adc
jb
inc
sbb
push
and
int3
mov
cmp
add
pop
out
fisttps
cmp
sub
stos
repnz
fcmovb
lds
lock
dec
mov
sub
imul
leave
cmp
xchg
mov
xor
mov
pop
jg
xchg
pop
sub
popf
or
or
or
addr16
dec
loope
out
and
xor
call
push
xchg
movsb
into
out
add
sub
cmp
adc
lret
jbe
cmp
inc
and
icebp
jnp
mov
mov
fldt
pop
xchg
pusha
data16
lea
sbb
xchg
sbb
sbb
lcall
jle
and
add
fists
xor
mov
mov
sbb
and
sbb
mov
adc
or
aad
mov
pop
cmp
enter
dec
add
xchg
pop
mov
or
push
jbe
mov
add
clc
sbb
aad
fimuls
adc
fcmovu
cltd
adc
mov
xchg
aad
inc
sub
dec
out
leave
mov
test
xchg
lret
cmp
test
aad
xchg
jp
dec
xchg
dec
push
fmuls
xchg
out
mov
mov
pop
fs
push
mov
sbb
adc
xchg
ds
or
sub
xor
xchg
loop
mov
sbb
addr16
mov
in
mov
xchg
pusha
mov
rolb
dec
cmp
testb
mov
clc
out
push
cltd
in
cmp
insl
cmpl
leave
ret
loopne
sub
jbe
cltd
mov
mov
sbb
cmc
in
sbb
or
pop
imul
xchg
mov
out
fxch
mov
ljmp
pop
xor
out
dec
leave
rol
in
xlat
xchg
notl
cli
ss
js
jns
mov
imul
mov
adc
cmp
or
pop
dec
popf
ret
clc
cmp
add
imul
sbb
idivl
in
push
stc
push
ss
xchg
sub
pop
and
hlt
shl
sub
xchg
dec
cmp
loopnew
sub
out
mov
xor
js
jno
in
in
insl
mov
mov
or
xchg
dec
insl
push
pop
sbb
ficompl
in
dec
std
cmp
fs
in
pusha
sub
adc
mov
out
cmc
push
pop
cwtl
xchg
push
fidivl
add
add
call
dec
out
sbb
imul
addr16
jl
xchg
xchg
push
enter
out
mov
ja
pop
dec
push
mov
jnp
sbb
notl
jne
sub
adc
pop
mov
or
adc
out
and
fsts
je
aad
fsubl
inc
je
sbb
cmp
gs
pusha
xlat
mov
xchg
mov
aas
mov
or
cmp
inc
cwtl
clc
into
pop
leave
push
fucom
insl
cmp
xchg
jbe
sbb
test
push
cli
xchg
rolb
inc
or
shll
dec
daa
dec
pop
xlat
mov
dec
push
dec
aaa
daa
int
addr16
push
lcall
loopne
adc
call
pop
hlt
mov
test
cld
lcall
frstor
shlb
cltd
mov
out
in
add
enter
jecxz
hlt
loope
mov
andb
xchg
adc
xchg
push
xchg
test
loop
mull
xchg
in
xlat
ljmp
push
cmp
cmp
fcomps
test
imul
aad
call
loop
xor
cmc
imull
jmp
xor
dec
movsb
xchg
mov
divl
mov
lret
xchg
pop
les
mov
dec
lods
inc
or
jbe
add
vucomisd
mov
in
dec
inc
ss
addb
and
sub
mov
aaa
ljmp
lret
pop
dec
mov
lret
gs
aad
mov
sub
es
and
xor
lret
jl
fldcw
ficompl
mov
cmpsb
or
xlat
aaa
pop
cmp
and
mov
mov
pop
jno
xlat
push
icebp
mov
cwtl
jp
hlt
fwait
mov
mul
pop
js
das
test
sub
rorb
mov
nop
push
or
lods
mov
fidivl
jns
imul
aaa
add
fst
lahf
out
je,pt
imul
insl
pop
add
sub
je
dec
add
mov
push
sub
mov
out
mov
mov
cmp
enter
sub
mov
xchg
in
pop
test
sub
xchg
push
or
mov
daa
test
or
add
mov
pop
adc
pop
jbe
xor
mov
add
pop
ljmp
daa
js
jg
and
xlat
adc
cmp
mov
dec
iret
imul
int
frstor
pop
or
inc
test
test
add
xor
cmc
cwtl
cwtl
dec
hlt
in
sub
stc
xchg
pop
fisubl
dec
into
lea
xor
and
lcall
pop
or
xchg
hlt
sbb
mov
pop
inc
imulb
or
jl
stos
je
cmp
jb
sub
cmpsl
das
jge
sahf
cmpsb
sbb
mov
push
mov
xor
jae
cmp
sbb
rsm
jmp
dec
arpl
sbb
or
pop
cmc
xor
lret
enter
sbb
xchg
jl
sub
mov
mov
add
andl
push
jo
ljmp
int
rcrl
add
sbb
xchg
jno
or
loope
lcall
lret
cli
aam
sub
int
xorb
out
adc
mov
lods
test
or
xchg
cmp
mov
aad
ret
fimull
cmpsb
or
and
fsubrs
pop
push
xchg
xor
mov
and
addr16
in
aaa
out
daa
jo
sub
outsl
add
mov
inc
daa
stos
test
mov
loop
shll
sub
sti
jg
lcall
fcomp
jp
xor
jbe
or
jns
aam
pop
mov
inc
xor
pop
sarl
xor
imull
pop
rol
cmp
out
test
xlat
out
lahf
mov
ret
insl
out
push
dec
cmc
jg
negb
pop
and
enter
push
icebp
leave
add
in
xchg
mov
xchg
lock
ss
je
mov
ds
sub
ljmp
mov
push
dec
sahf
repz
cmp
mov
pop
sbb
push
clc
pop
daa
cmp
mov
dec
jbe
gs
mov
jno
sbb
push
mov
jno
in
xchg
pop
cwtl
imul
mov
and
clc
loope
mov
add
mov
inc
mov
call
adc
dec
dec
stos
lcall
loop
or
jmp
cmpsb
call
xor
pop
push
pop
leave
add
stc
and
mov
mov
pop
cwtl
pop
jbe
enter
pop
or
lds
scas
ret
rorl
pop
cmp
mov
sbb
add
sub
and
ret
in
jae
and
mov
jl
dec
mov
or
cltd
pop
adc
popf
inc
add
int3
push
mov
xor
cli
cmp
mull
ret
xchg
es
cmc
je
in
or
push
push
jns
mov
sbb
movsb
or
cmp
mov
movsb
stos
in
daa
xchg
sub
mov
rcrb
dec
fdivs
rol
in
mov
insl
mov
mov
sbb
xchg
inc
adc
cltd
dec
xchg
call
pusha
dec
or
push
clc
adc
test
aaa
or
enter
js
adc
lret
xchg
or
push
sbb
cmp
pmullw
and
in
popf
fmuls
lcall
out
add
dec
push
cmpsb
cwtl
sbb
fdivrs
mov
mov
and
mov
xchg
or
dec
cmpsb
sbb
rolb
out
out
dec
out
cmpsl
sbb
cmp
push
jae
adc
rcr
adc
sub
mov
or
cli
pop
in
ret
xchg
cmp
or
pop
in
inc
and
aaa
xchg
mov
enter
pop
sbb
mov
mov
mov
test
in
adc
icebp
mov
addr16
dec
dec
push
add
daa
imul
cwtl
test
lret
inc
movsl
data16
mov
and
xchg
mov
lret
js
sub
mov
loopne
adc
dec
mov
stos
add
mov
in
mov
or
sbb
cli
or
cld
xchg
cmpsl
adc
lret
lcall
addr16
sbb
mov
mov
dec
ret
xor
out
daa
andl
in
clc
dec
jle
dec
dec
lds
sub
ljmp
jp
add
nop
or
out
cmc
fsubrs
sbb
mov
adc
adcb
cmp
pop
popfw
in
xchg
stc
cmpsl
test
sbb
mov
xlat
mov
add
sbb
iret
sub
pop
js
inc
call
mov
fcomip
cmpsl
xchg
push
or
mov
loopne
add
mov
push
call
enter
xchg
and
mov
cli
mov
inc
clc
pop
imul
mov
push
js
dec
sub
cmc
mov
jb
in
ljmp
xchg
inc
mov
loopne
mov
out
cwtl
mov
xchg
pop
pop
rclb
inc
jp
lock
idivb
add
cwtl
add
cmpsb
xchg
jae
notl
xchg
addr16
xchg
mov
cmp
testl
dec
and
testb
or
add
or
inc
mov
sbb
inc
and
and
loope
xchg
test
lods
lock
out
fstps
dec
push
aad
fcoml
daa
loope
lret
fst
fsubp
and
bound
enter
ja
movsb
movsb
or
jge
shlb
add
int
cmp
aaa
jbe
lret
pop
pop
and
call
gs
loope
lds
imul
scas
xchg
call
and
mov
outsl
outsl
pop
or
imul
data16
push
or
mov
daa
loop
int3
xchg
ret
mov
rol
or
ds
stos
mov
dec
jge
ljmp
lret
xchg
adc
mov
xchg
lret
in
cmp
hlt
or
addr16
lea
xchg
push
in
addr16
mov
in
inc
cmp
mov
cmp
addr16
cmp
in
in
pop
das
and
fisubrs
aam
shll
xlat
cli
jno
dec
mov
add
mov
jbe
sub
sbb
jno
rorl
adc
lret
lods
mov
movsl
cmpb
mov
gs
cmc
mov
cmp
adc
push
pusha
enter
pop
mov
mov
scas
sbb
in
mov
call
in
xor
movsb
cmp
out
and
add
push
call
insl
in
out
shr
jmp
cltd
sahf
aaa
sbb
hlt
push
push
fisttpl
loope
or
sbb
or
mov
lds
out
ljmp
test
push
dec
dec
cmpsb
test
dec
test
dec
je
pushf
popa
bound
dec
test
rorb
cmc
popa
adc
dec
and
cmp
lock
popa
cs
cld
or
popa
cmp
sbb
dec
xchg
dec
test
lds
hlt
cmc
sahf
mov
or
daa
dec
js
cmp
cmc
xchg
js
cmp
ljmp
mov
cmc
mov
loopne
mov
in
pop
in
vcvtps2pd
cmpsb
sub
jne
flds
imul
enter
xor
rorb
sbb
stos
xor
mov
out
dec
ffreep
sbb
xor
mov
lret
js
insl
loope
xchg
cmc
pop
xchg
lcall
mov
loop
idivb
clc
mov
mov
pop
xchg
out
mov
mov
xlat
mov
daa
xchg
inc
movsl
scas
inc
push
pop
out
adc
call
xchg
mov
inc
lret
dec
imul
push
xor
cmp
outsl
ret
mov
sub
daa
cmc
movsl
rorb
out
cwtl
imul
or
sub
jne
lea
out
mov
sub
outsb
pop
mov
adc
lcall
or
rorl
dec
scas
les
ret
cmp
pop
jp
cmc
sbb
or
les
xchg
or
pop
xlat
pop
adc
loope
testb
call
imul
insb
lret
adc
lock
js
fistl
addr16
enter
lods
cltd
js
sbb
gs
add
sti
das
fisttpll
loope
push
ljmp
lds
lods
adc
xchg
xchg
stos
lea
sub
stc
xchg
sbb
out
test
testl
sub
sub
js
cmp
outsl
test
jge
stos
pop
push
test
dec
jecxz
inc
and
sarl
push
lret
bound
mov
add
mov
mov
js
ss
dec
es
shrb
xchg
pop
sbb
fldenv
cmpsl
and
insb
lds
mov
mov
out
mov
in
leave
sub
or
aaa
ficoml
movsl
cmc
pop
dec
cmp
sbb
lcall
or
pop
imul
ds
dec
cmpb
cwtl
or
fisubl
cmp
es
imul
xchg
and
or
sbb
icebp
not
add
xor
lcall
jbe
sub
adc
xchg
loope
mov
xor
mov
sub
pushl
xchg
je
sbb
cmp
movsb
ljmp
in
scas
in
push
sbb
pop
scas
leave
ss
xchg
cltd
cwtl
mov
xchg
pop
sub
xlat
test
ljmp
adc
pop
sbb
adc
mov
inc
lock
lret
pop
xor
sbb
mov
mov
addr16
stc
negb
push
scas
xchg
ficompl
xchg
int3
cmc
xor
and
xchg
dec
rcll
insl
sub
scas
aad
shrb
mov
sar
adc
or
cmp
inc
push
pop
dec
in
cmp
js
sbb
dec
jge
test
dec
cmp
push
seta
sbb
dec
gs
push
push
pop
pop
mov
sub
sub
adc
jbe,pt
cs
aad
jl
mov
addr16
ljmp
xor
ja
in
out
cmpsl
enter
in
in
jge
mov
mov
daa
mov
mov
sarb
pop
dec
ds
daa
fs
and
arpl
and
mov
out
and
pop
xchg
mov
xchg
cmp
cmp
cmp
xchg
in
out
std
fildl
repnz
pop
mov
je
pop
cli
lret
sbb
int3
cltd
mov
aas
mul
cmpsb
push
pop
xor
mov
pop
mov
jbe
xor
xchg
out
dec
jo
adc
dec
negb
sbbl
jl
inc
lret
bound
pop
cmc
daa
mov
sub
stos
addl
aaa
sti
or
dec
lods
int
cltd
adc
or
test
mov
sbb
jp
or
ret
lcall
cmp
addr16
addl
aad
sbb
mov
mov
leave
inc
cmp
fsubrl
int
dec
xchg
or
pop
pop
faddl
sub
fidivs
xchg
dec
outsl
add
lds
daa
xchg
ljmp
xor
fwait
lods
xchg
add
mov
gs
adc
pop
cmp
scas
daa
xchg
out
inc
jg
xor
enter
popf
inc
add
jp
loopne
cli
pop
pop
mov
insl
movsl
xlat
sub
adc
ljmp
out
mov
sbb
adc
and
inc
cmp
sub
daa
lret
test
repnz
cwtl
orl
in
adc
xchg
jg
or
scas
cmp
mov
and
js
or
fcom
xor
inc
pop
mov
pop
push
loop
adc
push
cwtl
fwait
or
int3
stos
dec
sbb
xchg
enter
xchg
out
sarb
dec
pusha
inc
push
xchg
xchg
in
mov
add
stc
sub
adc
mov
stos
imul
daa
or
add
add
mov
and
out
and
mov
lcall
rorl
cltd
or
movl
idiv
mov
in
xchg
loope
popa
in
lods
jae
mov
sub
pop
shlb
in
xchg
hlt
or
mov
das
dec
and
lcall
or
daa
mov
shr
addr16
clc
cmp
hlt
push
pushf
jp
push
enter
test
xor
xor
clc
xchg
adc
data16
jmp
sbb
mov
or
ss
cli
js
push
ja
adc
imul
addr16
cmpsb
cmp
add
dec
adc
mov
fisttps
jg
idivb
lret
push
stos
out
daa
dec
mov
adc
mov
cmc
aaa
pop
and
ret
or
std
es
mov
xchg
imul
sbb
loopne
ja
loop
mov
mov
cmc
add
sbb
leave
std
cmp
inc
dec
lcall
test
push
jne
mov
sub
rcl
lret
dec
mov
and
mov
call
mov
not
sbb
pop
imul
cmp
je
sub
lods
and
lcall
roll
stc
rclb
cmp
stos
loop
or
adcb
inc
dec
ljmp
xchg
in
clc
xlat
pop
xchg
jno
in
lcall
cwtl
fwait
iret
ficoml
clc
fisubl
aaa
out
xchg
push
popa
xchg
outsl
sub
pop
ljmp
lret
cmpsl
adc
jno
xchg
xor
sbb
jbe
inc
testb
lcall
shrb
add
lcall
out
jp
or
push
daa
push
adc
xor
ja
xchg
nop
cmp
add
dec
or
ljmp
xchg
stos
push
daa
lock
mov
mov
push
aaa
cli
pop
xchg
xchg
dec
sub
pop
scas
adc
aad
jmp
nop
xchg
or
scas
or
clc
enter
mul
dec
fstpl
push
shll
mov
and
pop
pop
in
inc
adc
lcall
xlat
mov
test
icebp
mov
dec
pop
bound
inc
sbb
fimull
ljmp
mov
sub
cmpsl
sub
movsl
es
addr16
jno
and
bt
and
xchg
sbb
iret
rcrb
push
add
hlt
mov
mov
xor
sahf
cmp
cmc
push
adc
mov
leave
cmpsb
xchg
mov
es
lock
mov
mov
cmp
ret
mov
or
ljmp
inc
in
push
in
xchg
push
sub
imull
aaa
jmp
cmpsl
mov
adc
shlb
xchg
sbb
ficompl
ds
aam
loopne
mov
aas
xor
lcall
rorb
mov
in
rcll
xchg
mov
or
in
outsl
movb
lret
jno
and
push
mov
insb
lcall
sub
xor
pop
add
in
neg
bound
push
imul
test
dec
daa
ljmp
sbb
test
push
and
ljmp
fidivl
js
mov
pop
cmp
or
cli
in
es
adc
sub
pop
xchg
dec
dec
or
nop
inc
push
add
imul
dec
jmp
in
push
mov
jp
xchg
jnp
inc
and
in
inc
icebp
and
and
out
jecxz
mov
js
mov
sbb
xchg
pop
xchg
xchg
add
inc
fsub
cmpsl
mov
sub
test
aas
xchg
lea
sbb
mov
cmp
dec
rcrl
movsb
xchg
push
clc
xor
sbb
in
idivl
leave
cmp
jp
ljmp
or
fcomps
pop
ljmp
sbb
imul
pop
shr
inc
push
mov
cmp
mov
dec
dec
in
cmpsl
cli
mov
mov
gs
fmuls
lea
sbb
test
in
inc
cmp
xchg
adc
or
lds
mov
xorl
stos
pop
or
jmp
lret
mov
repz
xchg
in
sub
push
and
or
pop
imul
sbb
idiv
add
movsl
dec
cmp
or
xor
frstor
in
aad
aas
mov
dec
enter
jp
pop
pop
loope
sbb
in
mov
add
xchg
inc
xchg
sbb
pop
sbb
or
daa
sbb
mov
push
je
loope
aad
xchg
mov
cli
pop
stc
inc
jbe
inc
sub
mov
bound
inc
sub
pop
inc
imul
ret
mov
mov
out
jae
popf
loope
mov
sub
pop
jns
or
test
xor
or
and
xchg
sbb
outsl
mov
mov
inc
lcall
filds
dec
jp
movsb
aaa
ficompl
bnd
test
jae
out
or
ss
js
jp
push
pop
pop
mov
es
clc
hlt
pop
icebp
xchg
call
or
mov
inc
int3
cmc
dec
xor
pop
xlat
enter
daa
adc
cwtl
fwait
mov
in
aaa
xchg
call
cmpsl
ljmp
icebp
gs
pusha
js
rol
lcall
push
sub
mov
aas
popa
or
adc
or
push
lds
jns
mov
jecxz
xchg
inc
jl
out
or
testb
inc
lret
mov
jne
pop
cmp
outsb
pop
mov
sub
mov
xchg
or
movsl
fwait
add
loope
js
inc
mov
sub
or
loope
icebp
or
cmc
xor
sbb
mov
fs
pusha
push
and
aaa
lods
mov
lret
fldz
or
adc
sarb
inc
mov
mov
stc
enter
adc
xchg
push
pop
mov
cmp
lret
sbb
sbb
outsb
jg
sub
push
pop
xor
sbb
adc
dec
cmp
push
aaa
clc
je
lret
mov
pop
mov
mov
adc
sbb
lods
sub
sbb
scas
push
cmp
pop
inc
pop
jp
pop
xlat
dec
and
bnd
xchg
dec
ljmp
or
imul
mov
sbb
mov
ror
or
jmp
inc
sub
imul
aaa
or
movsb
or
lock
xlat
pop
jns
xchg
add
pop
inc
cld
or
mov
data16
lcall
lds
enter
shlb
push
stc
jle
notl
cmc
ljmp
mov
testb
add
in
dec
pop
mov
and
in
push
out
sbb
sub
fs
in
inc
testl
mov
testl
stos
stc
mov
sub
xchg
sub
cmp
daa
mov
mov
jle
xchg
in
js
mov
gs
sbb
bound
inc
cmp
inc
js
pop
lcall
xor
mov
bound
sar
aaa
frstor
adc
cli
jmp
clc
fcmovbe
xchg
loop
mov
pop
xchg
cmp
out
gs
jp
mov
inc
js
add
inc
addr16
push
fldenv
je
push
mov
notb
cmp
orl
addr16
sbb
aad
dec
pop
sbb
test
es
jge
mov
dec
rol
pop
mov
push
divl
xlat
lcall
or
lcall
cmp
pop
fstl
lcall
lea
push
test
dec
xchg
test
mov
mov
push
xor
or
inc
test
xchg
xchg
push
in
js
aad
pop
sub
sub
dec
sbbb
mov
and
pop
lret
cmp
cli
testb
pop
enter
add
lds
cmp
out
ljmp
and
jbe
idivb
cld
mov
test
mov
movsl
xchg
lcall
mov
es
xchg
cmp
pop
test
movsb
cwtl
xor
imull
inc
mov
pop
mov
lds
xchg
sub
je
push
xlat
lahf
jns
into
jns
sub
xchg
pusha
mov
addr16
fcomps
mov
ffreep
pop
insb
mov
cmp
enter
sub
pop
xlat
dec
adc
lcall
xchg
cmc
pop
test
cmp
ficomps
enter
mov
fildll
mov
loope
imul
mov
aad
sbbb
cmp
xchg
jp
sbb
jne
add
sarb
mov
push
cmp
dec
mov
xchg
call
rol
enter
mov
mov
xor
test
mov
test
pushf
mov
jecxz
mov
pop
or
cmc
lahf
popf
pop
pop
push
mov
out
inc
lds
pushf
xor
mov
fists
fcos
inc
dec
mov
fstp
add
mov
dec
push
loopne
clc
push
hlt
in
dec
cli
fsubrs
test
in
orl
aad
int3
divl
or
xor
out
jge
jle
cmp
xchg
push
cmp
sbb
mov
jp
cmp
sbb
idiv
xchg
into
lea
pop
les
mov
and
sub
cwtl
je
xchg
xchg
leave
sub
stos
dec
cmpsb
movl
ljmp
push
xchg
je
in
pop
loope
pop
push
aas
cmp
adc
out
lods
dec
xor
loope
xchg
sbb
pop
out
sub
cmp
cmp
cmpsl
push
push
mov
jns
iret
sub
xlat
loopne
push
and
cmp
mov
cmpsl
imul
or
dec
call
xor
lret
xor
in
xorl
js
sub
popa
pop
in
cmp
aad
bound
sub
cmp
icebp
xor
pop
xor
in
sbb
jbe
mov
insb
adc
rorl
in
add
imul
lods
sub
or
lret
fbstp
daa
lea
mov
aaa
cwtl
xchg
mov
ljmp
mov
subl
dec
mov
inc
inc
out
pop
xchg
or
in
xchg
test
add
sbb
lds
sti
leave
xor
in
mov
or
out
lahf
cmp
jle
push
icebp
adc
notb
idivl
es
imul
mov
jmp
stc
shl
xor
int
mov
sub
jbe
jno
fdivr
lret
pop
fidivrl
mov
js
test
lret
fdivrs
mov
sbb
push
pop
cmp
ljmp
mov
xchg
hlt
negl
lcall
sbb
sbb
jp
leave
or
mov
subl
pop
ficoml
lea
js
imul
add
lea
mov
dec
lcall
roll
xchg
cmc
aaa
aad
dec
pop
dec
xchg
aam
xchg
lret
mov
sbb
lods
sbbl
mov
aaa
mov
in
inc
add
jp
and
lods
icebp
cs
sub
xchg
mov
mov
daa
adc
and
add
and
lcall
stc
and
outsb
popf
bound
mov
dec
jbe
cltd
fsubs
cli
mov
xlat
cmp
mov
or
call
or
add
push
or
sbb
jg
jb
add
pop
mov
or
pop
sbb
jo
shlb
xor
cmc
aaa
pushf
sbb
std
stos
jo
icebp
or
fidivrl
xor
leave
popa
mov
pop
cmp
mov
dec
aaa
or
je
clc
sbb
mov
lds
cmpsl
lret
jns
mov
aaa
cli
popa
mov
mov
es
xchg
aaa
call
popl
cwtl
sub
mov
push
push
fcomps
rolb
hlt
adc
stos
and
pop
adc
adc
pop
cmp
testb
and
test
ljmp
xor
jmp
lret
and
call
leave
dec
mov
push
mov
mov
inc
aad
adc
and
rol
out
adc
push
adc
xchg
out
sub
loop
sbb
jmp
dec
pop
mov
imul
xchg
imul
mov
ds
xlat
loopne
and
add
adc
aaa
mov
enter
sub
sub
inc
mov
testb
sbb
ljmp
jp
pop
popf
sub
sub
fs
movsl
imul
scas
jnp
push
dec
mov
mov
lds
addr16
add
mov
xchg
mov
pop
xchg
add
stos
or
xor
lcall
push
or
lahf
mov
out
je
mov
es
inc
in
sbb
dec
daa
lcall
out
mov
add
cli
js
cmpl
or
daa
pusha
push
je
lret
xchg
mov
sub
iret
loope
fidivrl
sbb
mov
stos
dec
js
cwtl
sub
imulb
dec
or
or
jno
out
lock
inc
in
pop
adc
or
ret
pop
push
pop
push
roll
push
rcll
rorl
inc
in
dec
mov
addr16
jp
xor
cmp
cld
xchg
movl
mov
mov
xor
sbb
adc
aad
inc
push
mov
enter
leave
scas
aaa
ljmp
cmp
daa
add
popf
test
pop
jp
push
iret
jne
dec
in
lret
sub
scas
add
stos
xchg
enter
xlat
adc
xchg
xchg
push
out
push
flds
shlb
jae
or
popa
enter
push
sbb
stos
mov
push
sub
and
fcmove
push
xchg
dec
push
xor
movsb
jmp
mov
div
sbb
or
repnz
pop
add
outsl
movsb
stos
xchg
repnz
xor
popa
aaa
lea
cmp
hlt
pushf
push
xor
sub
inc
cwtl
cli
dec
dec
cmp
daa
pop
les
mov
aad
cmp
add
ret
sbb
cmc
aam
dec
sbb
push
mov
iret
call
ret
lcall
popf
fwait
lret
push
dec
add
sbb
or
es
ss
cmpsl
xlat
pop
mov
add
or
or
xchg
in
in
lea
pop
out
jecxz
dec
mull
cmpsl
xchg
pop
roll
ret
jae
inc
and
call
push
test
mov
sbb
call
mov
push
xor
inc
and
add
and
pusha
dec
notb
cmp
lods
xchg
scas
scas
les
add
cld
repz
ret
mov
and
push
xorl
or
lret
mov
repnz
or
cmc
popa
ret
push
rcrb
outsl
mov
sbb
pop
push
jge
pop
xlat
or
mov
cmp
lret
push
push
pop
stos
ljmp
pop
inc
call
push
es
mov
ret
mov
pop
or
js
xchg
mov
push
pop
daa
adc
or
lods
cmp
jle
pop
ja
xchg
mov
xchg
testb
add
push
imul
and
ljmp
mov
lret
lret
mov
stc
adc
mov
or
cmpsl
mov
inc
lret
into
push
sbb
cmp
lahf
lahf
mov
sub
push
push
stos
notrack
dec
dec
in
lods
test
fstpl
outsb
mov
gs
pop
stos
or
sub
mov
mov
cmp
jmp
cmp
dec
mov
mov
pop
fsubl
lods
out
xor
xor
mov
xchg
cli
popf
testl
rcr
pop
jg
clc
cwtl
or
push
add
push
adc
mov
dec
mov
mov
sub
test
sub
je
or
add
in
aaa
stos
cmp
ret
push
sub
xlat
or
dec
aad
and
push
jbe
cli
cmp
mov
or
clc
lcall
or
pop
pop
out
addr16
aaa
xor
sbb
or
xor
addr16
ficoms
cwtl
stos
or
lods
fstpt
xor
jbe
into
mov
cld
jle
mov
lret
jnp
mov
push
push
js
add
xchg
cmpsl
daa
add
or
mov
out
push
mov
call
mov
je
pop
dec
fwait
es
mov
jmp
lods
stos
leave
dec
add
xchg
call
xor
notl
js
test
cmp
sub
mov
mov
fwait
adc
out
xchg
js
clc
lds
leave
inc
sub
xchg
cmp
mov
sub
fldl2e
pop
mov
pop
pop
lahf
movl
cmp
cmp
xor
lcall
xchg
push
push
push
fs
rorl
int
and
mov
dec
pop
mov
sbb
push
adc
test
je
and
xchg
cwtl
xor
jo
out
push
lret
add
mov
mov
pop
inc
xchg
lcall
cld
call
scas
sbb
lret
sahf
dec
ljmp
mov
inc
inc
test
pop
aaa
scas
push
lret
dec
or
mov
test
jmp
test
mov
out
xchg
in
mov
mov
pop
push
lret
inc
fxch
in
adc
sub
adc
mov
dec
mov
jbe
mov
adc
test
out
mov
ds
pushf
faddp
mov
xchg
jb
js
adc
cmp
idivl
push
and
jecxz
adc
daa
mov
loope
es
adc
enter
adc
xlat
scas
loope
cwtl
ljmp
cmp
pop
mov
cmp
hlt
sbb
clc
add
lret
xchg
push
add
mov
in
dec
stc
mov
xlat
std
daa
mov
sbb
lcall
adc
imulb
daa
icebp
push
dec
movsb
addr16
or
inc
mov
or
stos
mov
aad
mov
fnstsw
popf
ret
sbb
push
in
cli
mov
cmp
sub
into
jle
aaa
cltd
clc
pop
lcall
xchg
jnp
dec
pop
adc
mov
mov
sub
aad
cmp
push
repz
dec
dec
cwtl
lcall
pop
mov
loop
std
enter
or
call
ljmp
push
pop
cmp
fadd
out
mov
xor
sub
add
incb
mov
lods
aad
pushf
vmovaps
iret
test
mov
dec
pop
mov
pop
out
pusha
fildll
ret
movsl
cli
inc
sbb
jns
mov
sub
in
mul
lret
cmp
je
mov
sbb
dec
jle
and
ret
loope
pusha
inc
jmp
xor
and
test
imul
or
push
pop
xlat
call
imul
and
mul
cmp
test
movsb
pop
js
rcrl
xchg
push
imul
pop
mov
jp
out
sub
xor
fstl
mov
sub
imul
xchg
mov
push
dec
vaddpd
testl
aaa
mov
rol
sbb
lods
mov
and
pop
mov
cli
test
imul
cmp
cwtl
and
out
or
mov
mov
cltd
xchg
in
call
in
js
cmp
out
cltd
xchg
aaa
sti
xor
lret
and
imul
mov
xchg
imul
sbb
mov
fdivrs
inc
jnp
addr16
mov
movsb
lds
cmc
xchg
mov
dec
pop
push
imul
in
movsl
cmc
add
lcall
iret
enter
jl
push
cmp
xor
cmp
inc
cld
push
push
xchg
sub
roll
mov
or
xchg
inc
fistpll
xchg
xorl
pop
ljmp
dec
test
pop
or
loope
mov
aaa
sbb
cmc
negl
cmp
loope
fcomps
imul
mov
daa
out
mov
sbb
mov
xchg
clc
in
push
ret
add
scas
mov
sub
andb
imul
stos
xchg
clc
nop
out
cmp
jb
shll
ret
pop
sti
mov
pop
fimuls
add
cli
mov
sub
popa
lcall
or
lds
pop
add
jbe
dec
inc
mov
lea
push
xor
mov
adc
inc
pop
test
ss
and
popa
daa
mov
xchg
dec
outsb
adc
cli
mov
inc
loop
inc
mov
insl
sbb
cmp
xchg
mov
mov
sub
ljmp
mulb
addr16
scas
ss
or
inc
pop
sbb
div
xor
mov
inc
cmp
xchg
inc
call
or
and
shll
jb
xrstors
das
jb
insl
sub
cmc
mov
push
push
daa
inc
sub
cli
lods
lret
je
jbe
mov
cmc
negb
xchg
push
xchg
cmp
out
aaa
dec
in
enter
call
fdivs
dec
or
into
ret
cli
add
in
sbb
dec
call
imul
sarl
aaa
xor
dec
shrl
adc
cmp
xor
or
xchg
hlt
pop
jmp
pop
jmp
aas
xor
mov
ja
call
call
pop
ret
adc
cmpsl
or
es
xor
out
pushf
sbb
sbb
inc
dec
in
inc
pop
inc
dec
lahf
or
and
adc
js
add
jae
neg
sub
insl
test
sbb
or
ss
rolb
jbe
cli
cwtl
or
dec
dec
dec
xchg
push
xchg
int3
jns
jo
add
loop
push
jle
ret
sbb
add
cmp
xchg
movl
cmp
mov
mov
aaa
fidivrl
addr16
push
lds
cmp
cmc
or
popa
xchg
mov
and
xchg
or
add
out
cmpl
xlat
lock
inc
bound
and
cmp
pop
fadds
movzbl
sbb
jmp
das
movsb
stos
fldt
test
dec
mov
sbb
adc
clc
pop
ffreep
in
lods
stc
out
sbb
lea
xchg
dec
std
xor
iret
pop
lea
lds
fsqrt
cmp
lods
mov
xchg
inc
cld
or
mov
sub
enter
mov
and
or
cwtl
or
and
and
leave
lret
jno
mov
xor
or
imull
ret
dec
dec
loop
xlat
test
mov
sbb
mov
in
push
and
in
sarl
cmp
fwait
push
test
dec
pop
popa
roll
sbb
and
dec
pop
xchg
cmpsl
push
roll
es
add
xchg
aas
jp
cwtl
mov
or
or
mov
inc
aaa
push
push
fdiv
mov
sbb
in
mov
lret
fisttpl
jp
lret
pusha
in
sarl
int
and
ficompl
mov
in
push
push
push
test
mul
daa
mov
add
ljmp
js
xchg
in
dec
xchg
cmpsl
rcrb
fcoms
jmp
dec
pop
mov
pop
pop
inc
sbb
rorl
cwtl
add
dec
or
adc
pusha
xchg
mov
cli
mov
fmull
mov
popf
out
loopne
push
aaa
mov
xor
sbb
ljmp
test
cmpsb
and
dec
shr
cwtl
add
fcmovbe
and
xlat
aad
in
leave
mov
mov
add
and
inc
notl
test
xor
addr16
imul
xchg
cmp
hlt
mov
xchg
push
sahf
push
sbb
dec
inc
adc
or
addr16
xchg
dec
movsb
lahf
or
popa
xor
dec
int
xor
in
xchg
mov
mov
imul
mov
add
inc
jmp
sub
ljmp
in
add
shll
sub
mov
js
xchg
mov
adc
or
in
and
jno
out
cli
xchg
out
xchg
add
bound
ljmp
pop
dec
cmp
dec
adc
cwtl
xor
mov
sub
frstor
jae
sbb
sbb
test
std
sub
xor
test
pop
add
push
or
and
popf
mov
xchg
mov
push
test
xor
or
sbb
or
mov
mov
inc
push
imull
mov
and
mov
and
cmp
cmp
popf
iret
in
fnstcw
int3
and
inc
adc
sbb
stos
daa
int
std
hlt
pop
les
xlat
xchg
sub
aaa
jbe
icebp
push
dec
movl
enter
inc
insl
out
xor
mov
and
add
dec
push
push
test
push
in
mov
sub
cwtl
stos
sahf
loope
out
testb
fimull
dec
stos
inc
cs
add
adc
fmuls
sub
sub
imul
or
and
mov
mov
inc
stc
mov
sub
cmp
xor
cmp
ret
jg
dec
mov
xchg
fmuls
pop
roll
aad
rorl
sbb
lahf
mov
cmp
or
loope
pop
mov
cli
push
fiaddl
test
push
pop
push
call
add
ljmp
mov
inc
xchg
imul
adc
mov
aaa
add
test
aaa
inc
testb
ret
movsb
hlt
and
fdivs
pop
xchg
pop
outsl
iret
andl
pop
repnz
mov
cmp
sub
mov
dec
cmp
mov
mov
stc
cltd
lcall
jmp
fimull
mov
cli
clc
popa
sbb
gs
test
test
xchg
sbb
mov
and
xchg
enter
jno
mov
sbb
ljmp
push
sbb
icebp
xchg
fdivl
dec
shrl
mov
xchg
inc
nop
test
adc
fnstsw
pop
lock
sub
lret
lcall
test
add
loop
bound
cmc
xor
dec
out
xchg
jbe
ljmp
add
jno
enter
pop
stos
popa
pop
cli
ret
cmp
pop
jp
cmp
leave
pusha
dec
cmp
outsl
inc
cmc
inc
xchg
mov
inc
popf
xlat
pop
xchg
cmp
hlt
sbb
fstpl
int
ljmp
mov
fsubs
xlat
test
fwait
cmc
ljmp
add
lcall
mov
stc
xor
xor
shlb
lds
mov
lret
sti
adc
lea
cltd
pop
enter
mov
xor
adc
pop
call
sbb
push
xchg
xchg
pop
out
mov
or
jp
cmpsl
mov
mov
pop
or
in
fstpl
insl
and
push
rcrb
pop
movsb
sbb
test
in
dec
rcrl
push
ja
cmp
mov
inc
cmp
sub
dec
je
pop
cltd
popa
addr16
cmp
sbb
test
mov
es
fs
xchg
adc
pop
addr16
sub
cmp
add
add
lds
lock
mov
mov
sbb
sbb
mov
cmp
adc
test
int3
into
and
loope
push
lds
dec
fisttpll
mov
mov
mov
mov
sub
cmp
repz
xor
cmp
out
add
mov
xorb
in
mov
or
aad
out
dec
pop
stos
xchg
push
mov
mov
push
gs
into
sarb
js
inc
mov
sub
movsb
jp
dec
dec
ljmp
push
adc
lods
xchg
mov
call
xchg
inc
cs
enter
cmp
mov
rcrb
push
call
mov
adc
aad
or
mov
in
sbb
call
call
pop
shll
inc
fidivl
sahf
push
cmp
mov
imul
jl
add
lea
push
fildll
jb
test
sub
fadd
fldenv
dec
fld
cmp
loopne
pop
mov
xor
mov
loope
aaa
xor
roll
js
ds
push
jge
sbb
mov
call
aaa
cld
sti
pop
imul
pop
mov
xchg
sub
repz
sbb
leave
sub
jle
mov
out
pop
mov
dec
cli
sub
vpackuswb
js
inc
das
xchg
aas
xchg
jno
sahf
cmc
xchg
cli
les
aad
fnstcw
dec
popa
ffree
negb
xor
and
adc
xchg
mov
adc
dec
mull
hlt
add
sbb
push
std
icebp
mov
test
jne
daa
lcall
ret
adc
call
mov
mov
lds
jg,pn
out
sub
fwait
mov
mov
inc
icebp
or
mov
hlt
imul
xchg
xchg
mov
push
dec
and
or
cmp
cwtl
jmp
aad
jb
jle
dec
xchg
dec
xchg
mov
pop
pop
push
lds
xor
in
ss
stos
dec
add
adc
daa
in
push
mov
aad
mov
adc
js
sub
dec
stos
cmc
cmp
ret
out
fwait
and
mov
aad
stc
sub
mov
stos
es
jp
je
cli
dec
movsb
push
clc
test
ss
out
xchg
icebp
testl
lret
sbb
pop
mov
push
testl
or
inc
adc
mov
ljmp
rcr
mov
mov
xchg
mov
daa
incb
movsb
test
std
sbb
xlat
xor
mov
push
lods
cmpsb
repnz
dec
testl
jo
pusha
lcall
stc
cmp
test
sub
xchg
sub
dec
inc
or
popa
test
clc
dec
mov
divl
adc
push
xlat
mov
shll
add
jge
ret
add
sti
and
jb
xor
mov
sbb
mov
lods
cmp
outsl
pop
in
mov
popf
cmp
mov
repz
pop
mov
lret
and
imul
sub
dec
or
mov
ret
dec
xchg
incb
inc
subb
daa
pop
std
mov
inc
loopne
or
movsl
sbb
xchg
scas
xorl
mov
fbld
lea
ret
ret
mov
iret
mov
and
ret
es
cli
push
lahf
pop
movsl
dec
lock
sbb
es
dec
cmp
push
cmc
fisubrl
adc
sarb
or
divl
cmp
xchg
scas
inc
mov
sbb
js
and
pop
shl
stos
cli
xchg
mov
dec
mulb
shll
pop
in
xor
add
sbb
xchg
xor
mov
hlt
and
xchg
out
mov
xlat
cmc
mov
mov
out
mov
adc
mov
pop
sub
inc
addr16
mov
enter
mov
sub
lea
js
fdivl
out
enter
or
cmc
std
pop
and
sbb
dec
xlat
or
or
cmp
clc
ds
mul
xor
mov
mov
jbe
fmuls
cmp
and
arpl
stc
outsl
xor
mov
insb
add
es
push
dec
sarb
inc
stos
xor
loope
imul
cwtl
jp
sbb
inc
dec
jbe
aaa
and
dec
testb
adc
shl
lods
das
pop
mov
fdivrs
add
and
sbb
iret
shl
cmp
cmp
cmp
fld
mov
fiaddl
jge
imul
mov
loopne
cmp
adc
mov
sbb
notl
rcrl
aad
jmp
jbe
add
or
test
aaa
xor
pop
js
sbb
fldpi
xchg
jb
imul
and
imul
or
daa
ds
lcall
stos
mov
dec
sbb
jmp
je
insb
dec
jb
nop
int3
xchg
mov
adc
out
rcr
std
enter
das
mov
ds
push
xor
lcall
jg
sub
daa
js
cmp
in
cmp
cmpsl
in
pop
xchg
sbbb
or
daa
mov
das
imul
push
inc
fcmovu
pop
hlt
xchg
in
dec
sbb
or
lods
pop
out
pop
in
jl
adc
mov
dec
mov
mov
cmp
movsl
js
push
xor
fidivl
addr16
subl
int
cwtl
or
xor
mov
xchg
cmp
pop
and
jbe
out
dec
mov
cltd
fwait
cli
sarb
imul
cmc
sarl
dec
popa
mov
clc
cmp
push
lds
sub
mov
ds
fcoms
dec
dec
shlb
pop
sub
out
xor
xor
or
lcall
push
js
cmp
dec
fisubs
dec
ljmp
out
mov
sub
or
sub
pop
loope
call
out
in
movsb
sub
idivl
flds
add
addb
push
fsubrs
sub
out
xor
xor
mov
pop
dec
addr16
loop
out
aaa
dec
ret
pop
and
dec
push
adc
mov
in
cmp
pop
sar
xchg
xor
mov
push
ret
out
rcrl
pop
mov
pop
xchg
icebp
lret
dec
lret
cmp
fld
mov
mov
or
cmpsb
in
adc
sub
lcall
adc
mov
mov
jg
mov
lds
std
mov
dec
jle
xor
cmp
push
rcrb
cmp
add
cmp
outsb
pop
push
jle
clc
enter
inc
mov
enter
outsb
xor
test
mov
cmp
mov
in
dec
jg
sub
mov
fdivrs
xor
inc
dec
mov
orb
jmp
xchg
popf
fcomps
ret
mov
add
inc
adc
lret
pop
aaa
loope
sub
pcmpgtb
mov
or
enter
add
cmp
ljmp
in
in
cmc
incl
dec
subb
dec
sahf
sub
pop
mov
pop
lret
xchg
lcall
mov
mov
mov
sbb
cltd
pop
pop
jp
sub
cmp
mov
cmp
scas
in
mov
xchg
lods
push
jbe
and
xlat
or
xor
jbe
js
and
movsb
xchg
mov
cli
aaa
or
sbb
shll
ret
ds
mov
mov
test
sbb
aaa
fidivrl
sbb
sbb
mov
stc
daa
add
pop
jns
mov
out
cmpsb
ret
std
sbb
test
mov
add
mov
gs
negb
push
aam
xlat
js
push
scas
jo
sbb
inc
dec
push
cli
or
in
dec
pop
adc
hlt
xchg
mov
push
das
imull
aaa
aad
or
dec
xchg
loopne
cmp
mov
shl
adc
cwtl
lret
out
cli
xor
jbe
push
xor
pop
frstor
je
imulb
mov
testb
aad
or
sub
fimull
sub
cli
cmpsl
xlat
mov
nop
icebp
out
aad
shl
mov
fs
sbb
pop
cmp
pop
dec
mov
ljmp
push
dec
sub
or
push
mov
insl
push
mov
lret
pop
xchg
or
in
xchg
pop
mov
sbb
call
adc
ljmp
hlt
out
xlat
or
adc
or
out
xor
xchg
je
pop
sub
cmp
jno
fmuls
addr16
or
cwtl
mov
xor
imul
andl
jp
and
xchg
jge
cmp
adc
loope
lds
scas
xchg
loopne
jg
enter
sahf
xchg
out
sahf
mull
dec
jo
shlb
dec
repz
imul
in
sub
xchg
mov
jbe
aaa
add
sbb
fmul
cmpsb
ret
or
outsl
push
mov
mov
ficoml
adc
cwtl
lods
notb
push
or
fndisi(8087
testl
call
dec
cmp
push
out
adc
ret
ljmp
in
mov
push
push
addr16
cltd
je
out
and
mov
xchg
lcall
stos
cld
movl
inc
and
aad
clc
inc
and
enter
xchg
cmp
adc
xchg
in
fwait
push
xchg
xchg
ret
cmp
xor
and
cmp
cmp
or
das
cmpsb
add
push
loopne
sub
aad
pop
or
es
jmp
rcrb
mov
pop
xlat
push
test
out
aad
push
sub
add
xor
jp
repnz
mov
movsb
dec
enter
xchg
cli
lcall
adc
sbb
cltd
lahf
sbb
xchg
and
xchg
sbb
sbb
inc
test
jg
sbb
movsb
dec
add
scas
add
cmp
js
out
test
or
mov
and
xchg
sbb
and
out
jecxz
decl
sbb
in
lea
or
out
in
inc
mov
push
mov
sbb
or
scas
xchg
out
mov
cli
jne
clc
push
push
inc
enter
ja
mov
xlat
pop
push
aaa
jp
mov
lods
sub
pop
cli
addr16
xor
insl
shrb
pop
lahf
lods
fidivrl
xchg
movsb
mov
mov
sub
xlat
negl
lcall
push
xchg
negb
stos
mov
sub
pusha
push
add
scas
js
cmp
fwait
xlat
pushl
imul
jp
mov
movsb
xor
addr16
jge
movsb
pop
lcall
rcll
cmp
cld
mov
pop
inc
dec
cli
inc
cmp
inc
testl
push
lret
jnp
cs
xlat
call
or
xor
popa
inc
movsl
test
mov
xlat
negb
in
inc
push
mov
mov
or
jns
inc
lret
and
sub
hlt
xor
mov
cmp
jbe
cmp
cmp
mov
sub
inc
clc
in
add
or
xor
lahf
cmp
cmc
dec
out
lds
data16
push
or
mov
aam
dec
mov
jne
sub
test
push
ret
mov
mov
cmp
pop
ja
dec
inc
xchg
mov
adc
mov
clc
pop
xchg
xchg
mov
sbb
or
lcall
or
fmuls
lock
aaa
push
or
bound
adc
clc
stc
xchg
sub
xchg
mov
js
dec
cltd
negl
daa
adcl
addr16
adc
andl
imull
fmul
loopne
cmp
xchg
js
sahf
pop
or
or
push
cwtl
testb
adc
xchg
in
xor
sbb
sbb
enter
movsl
out
add
je
daa
mov
aaa
mov
mov
fsubr
push
repnz
in
mov
lods
jmp
inc
lock
cli
call
inc
jbe
leave
je
leave
out
int
jl
xor
xchg
sub
sub
add
addr16
enter
or
xlat
mov
adc
mov
clc
sub
sub
stos
jmp
xor
xchg
fdiv
ljmp
adc
cmp
fisubrl
push
dec
out
pop
dec
or
sub
ret
mov
ss
inc
cmp
flds
in
inc
aaa
js
jp
xor
xor
mov
mov
movsb
and
lcall
xlat
loop
outsb
ljmp
stos
enter
sub
dec
push
jp
js
sub
xor
inc
push
mov
or
or
popf
and
in
movsb
fnstsw
test
das
mov
sbb
cmp
int
dec
jmp
test
mov
lds
scas
pop
cmpsl
mov
cmc
pop
and
inc
aaa
mov
jp
sbb
push
int3
aad
adc
imul
jmp
xchg
pop
dec
xor
in
inc
imulb
jmp
enter
and
sbb
and
cmc
sbb
ret
sbb
fisubl
xchg
jbe
adc
dec
sub
push
lds
mov
mov
fstpt
ret
sub
lock
das
neg
out
stos
xchg
pop
cwtl
mov
sub
pop
mov
int
or
xor
cmp
call
push
xor
testl
pop
cmp
xor
mov
jae
or
lds
stos
sub
in
adc
dec
inc
dec
sbb
adc
push
or
ljmp
sub
cmpsb
pop
cltd
pushf
stos
testl
mov
push
enter
xchg
dec
mov
daa
notb
jp
lcall
in
test
das
je
sub
push
rol
fwait
pushf
int3
dec
xlat
into
icebp
enter
lds
xchg
jno
cmp
sbb
push
ret
mov
loope
sbb
aad
popf
rcl
or
pusha
hlt
or
subb
lcall
and
jecxz
or
xchg
popa
sub
aad
popf
push
xlat
xchg
lods
out
test
fisttps
inc
and
sbb
ljmp
push
dec
dec
ret
test
addr16
push
mov
and
lods
dec
sub
test
daa
xchg
xor
xor
out
rcrl
lea
sub
arpl
daa
xchg
inc
stos
out
mov
and
mov
pop
jp
jge
je
in
fiaddl
cmp
rorl
mov
aaa
jo
xlat
or
cltd
dec
xchg
imul
xchg
movsl
cmp
dec
cmp
cmp
mov
add
idiv
dec
jp
dec
fwait
arpl
cmpsl
xchg
mov
ljmp
daa
dec
clc
fisubl
in
cmp
in
adc
pop
icebp
daa
fsubr
and
out
ljmp
pop
adc
sti
loope
ljmp
pop
cltd
xlat
cmc
and
call
xchg
inc
adc
jbe
mov
add
out
inc
jmp
xchg
std
xchg
test
int
fstps
jno
int3
xchg
call
mov
mov
xlat
mov
pop
lret
fwait
dec
mov
pop
rcrl
sub
adc
cmc
cld
outsb
cwtl
in
mov
cmp
and
lds
and
sbb
sti
scas
imul
mov
pop
jbe
lret
pop
jp
mov
stos
push
mov
fidivl
mov
sub
push
ja
or
ret
test
jmp
sbb
and
int
lret
push
hlt
daa
dec
enter
dec
arpl
in
in
mov
sub
mov
arpl
add
mov
pop
call
mov
ficoml
cmp
js
cwtl
imul
add
popf
cmpsl
sub
pop
ljmp
xorl
or
iret
fisubl
xlat
and
mov
xchg
inc
in
enter
outsb
in
or
sbb
or
cwtl
lret
aas
xchg
push
pop
ljmp
mov
sbb
enter
decl
movsl
in
mov
stos
inc
adc
js
cli
dec
in
aaa
lahf
xchg
adc
cmc
rcrl
and
add
js
pop
mov
mov
sub
out
sbb
mov
pop
or
bound
or
jecxz
or
cmp
clc
cmp
movsb
int3
cltd
outsl
mov
in
or
push
je
pop
ds
ja
clc
addr16
push
test
sbb
fists
cmp
mov
iret
cmp
shrl
and
sbb
jno
iret
popf
sbb
dec
imul
sbb
or
and
div
mov
xlat
cmp
push
cli
dec
aas
cmp
int
cmp
mov
subb
ficoml
sbb
call
adc
stos
lcall
lds
mov
xor
scas
clc
stc
ret
cmp
fmuls
mov
xchg
into
xchg
aad
aad
xchg
xor
sbb
adc
sub
add
jbe
pop
data16
mov
adc
and
xor
gs
cmovp
jb
xchg
or
inc
testb
es
daa
xchg
add
mov
out
or
enter
testb
dec
pop
pop
add
mov
in
clc
xor
sbbb
dec
sub
jp
mov
or
dec
cli
mov
lcall
addb
idivl
cli
mov
cmc
xor
jp
js
fadds
lret
inc
leave
push
outsb
mov
test
add
es
push
inc
testl
stos
out
insl
out
jmp
or
div
fmulp
push
fnstenv
xor
mov
rorl
imul
in
cltd
lret
xchg
div
cmp
data16
daa
into
icebp
enter
pop
cmp
ret
mov
out
fs
mov
jp
insl
xor
cltd
mov
xchg
hlt
xlat
jle
popa
xchg
inc
out
cmpsb
shll
loop
lods
test
cmp
inc
ret
sub
stos
ljmp
fdivl
sub
mov
daa
jo
or
pop
dec
sub
mov
pop
movb
ror
sbb
movsl
cmp
lret
dec
fst
movsb
cmp
xor
clc
xchg
ljmp
stc
lcall
mulb
or
enter
psubsw
lcall
cwtl
stc
subl
add
call
out
icebp
mov
aaa
jb
fwait
ljmp
jno
cmp
jbe
inc
enter
cmp
xlat
popf
sub
or
outsl
pop
xor
addb
xchg
clc
or
inc
out
fmuls
shr
test
fstp
xor
clc
xchg
fwait
call
sbb
fidivrl
lds
enter
cli
jno
dec
das
es
cmp
jbe
xchg
cmc
jl
pop
testl
call
mov
xor
xor
and
mov
pop
push
mov
lcall
push
xchg
push
fsubrs
subb
xorl
aad
lret
enter
call
mov
sbb
lcall
xorl
mov
ljmp
or
aaa
in
lcall
pop
inc
iret
call
sub
cli
jb
aaa
mov
mov
lods
add
and
testl
filds
fdivrp
or
sbb
jp
jg
mov
or
notb
add
jb
stos
sbb
xchg
sbb
xchg
sarb
imul
sub
cli
cmp
xlat
cmp
mov
sub
cli
xchg
aaa
lds
aas
xchg
fisttps
dec
cmpsl
jp
je
adc
inc
icebp
ret
pop
in
icebp
push
xor
xchg
call
cmpsb
cmp
mov
jp
sbb
in
aaa
ljmp
loope
sub
sub
or
jg
adc
test
jp
std
mov
lds
out
sbb
aaa
xchg
jp
add
pop
cmc
pop
loopne
in
xchg
xor
push
xchg
pop
test
out
loope
sbb
dec
out
shr
lea
push
dec
and
aad
iret
mov
not
cmpsl
lcall
inc
mov
in
dec
push
sbb
dec
pop
push
cs
sbb
pop
adc
sub
idivl
xor
aaa
cmp
enter
mov
shll
adc
or
xor
aaa
lcall
out
xchg
xor
cmc
dec
mov
in
orb
out
inc
js
sub
sbb
pop
je
rorl
popf
cmp
xor
lods
xchg
mov
mov
gs
mov
sbb
cmpsb
in
es
icebp
into
out
sub
add
lret
or
inc
mov
add
aaa
in
notl
jg
cmp
in
adcl
jg
out
cmp
xchg
dec
or
scas
rorl
lahf
into
in
inc
or
and
xchg
mov
or
mov
roll
push
mov
cli
movsl
gs
mov
pop
add
cmpb
cmc
mov
int
adc
cli
inc
int
clc
pop
cwtl
inc
loopne
inc
js
xchg
xor
xor
test
add
adc
xor
or
adc
cmpsl
jo
enter
ds
cmp
inc
rcll
pop
lret
fcom
lcall
xor
clc
push
call
fdivrp
add
jne
cmp
mov
imul
int3
add
inc
dec
sub
adc
xchg
clc
imul
jl
je
je
xor
sub
and
cmc
mov
mov
orb
xor
mov
in
mov
sbb
jp
and
or
ljmp
xchg
sub
aad
stc
cld
test
pop
call
sbb
sub
gs
ds
xchg
aad
inc
imul
cmp
aaa
xor
and
movsl
pop
adc
ret
push
ret
xor
push
sahf
lcall
cmp
xchg
or
pop
rcrb
xchg
pop
movsb
push
lock
je
push
rcrb
insb
jmp
adc
mov
pop
adc
inc
and
dec
imul
sub
inc
xchg
jp
lret
jbe
mov
sbb
jp
cld
inc
cmp
repnz
lea
xchg
mov
xchg
insb
xchg
or
sub
cmpsl
movsb
mov
shrl
lahf
or
inc
mov
dec
lcall
out
aaa
out
cmpsb
inc
out
insl
push
in
pop
mov
in
int
inc
push
cmp
cmp
fimull
mov
fnstcw
sbb
mov
enter
decl
cmp
sarl
jmp
xchg
fnstenv
mov
mov
mov
addb
scas
je
mov
mov
xchg
lea
testl
stc
enter
push
cwtl
and
dec
pop
dec
lds
adc
mov
sbb
jp
or
or
push
in
mov
jns
and
lret
cli
clc
add
mov
mov
fsubs
in
ss
in
mov
pop
movsb
lcall
rcrl
fisubrl
pop
xchg
mov
shrl
in
mov
xlat
adc
cmp
pop
dec
cli
mov
fiaddl
cmp
add
pop
fidivrl
enter
pop
fdivl
pop
mov
cmc
fistl
or
les
mov
adc
mov
enter
call
pop
daa
call
inc
idiv
mov
int
cltd
leave
or
lcall
das
negl
out
fs
mov
cmpsb
dec
cmp
sbb
push
aas
pop
pop
mov
addr16
cli
mov
cld
add
sbb
mov
in
add
cmp
cmc
or
add
mov
stos
sbb
sub
mov
in
addr16
imul
adc
in
push
cmp
fcoms
jmp
mov
and
int3
push
mov
mov
or
movsl
cli
mov
sbb
pop
fsub
testl
in
adc
int
cmp
les
adc
or
pop
and
or
push
sub
and
jp
scas
je
out
and
rcrl
rcll
ljmp
sub
mov
push
negl
idivb
and
cmpsl
push
xchg
loopne
mov
aaa
call
idivb
xlat
xor
jge
add
mov
push
push
fdivrs
mov
aad
out
inc
jp
dec
or
jmp
notb
ja
add
push
pop
movsb
clc
js
cmp
daa
push
xorl
mov
jge
sbb
data16
int
xor
pop
cwtl
int
sbb
add
lds
sbb
sbb
adc
sub
out
pop
lods
mov
mov
cmp
xchg
jge
jmp
addr16
cmp
shlb
add
nop
cmc
xchg
mov
test
mov
or
js
adc
pop
push
sar
add
addr16
pop
es
out
and
adc
or
out
sub
inc
xchg
leave
loopne
cmp
pop
clc
je
mov
adc
cmp
daa
push
in
adc
inc
jmp
dec
jp
xor
sbb
xchg
add
negl
adc
insl
inc
inc
push
sbb
lahf
addr16
mov
mov
fdiv
mov
loope
aaa
sbb
mov
jle
leave
lahf
cltd
lret
pop
mov
cmp
cwtl
push
jle
mov
dec
mov
in
mov
js
jp
lahf
and
in
insl
imul
les
lret
pop
repz
cwtl
add
mov
cli
idiv
inc
mov
call
jg
fimull
test
pop
cltd
and
dec
mov
mov
sbb
data16
jg
notb
xor
mov
test
and
negl
mov
or
lds
mov
lods
mov
out
aad
in
lahf
jno
mov
stos
dec
add
daa
cmp
insb
into
mov
pop
cmp
imulb
cmpsl
inc
ret
fcmovnbe
mov
pop
mov
divb
cwtl
mov
cltd
repnz
dec
xorl
loope
dec
cmp
out
xchg
outsb
in
cli
js
mov
fdiv
or
xor
sbb
dec
and
ljmp
stos
les
pop
inc
es
subl
out
xor
out
cmp
cmp
sub
aaa
xchg
subl
xchg
or
pop
ljmp
scas
xor
jle
or
int
jbe
das
dec
pop
xchg
sbb
rolb
inc
sub
push
lahf
cmpsl
gs
out
inc
mov
lahf
out
ret
gs
int
les
icebp
lcall
sub
or
loop
xorb
pop
fsub
mov
imul
ficoms
imul
movsl
rcrl
or
mov
stos
sbb
lea
or
inc
dec
mov
stos
lret
or
cmp
test
cmc
xchg
mov
and
aaa
daa
loope,pn
add
out
std
mov
or
scas
push
pcmpgtd
aad
hlt
shrl
movzbl
inc
sub
dec
in
scas
pop
cld
jle
dec
rcl
jns
dec
mov
sub
dec
xlat
sbb
and
inc
xor
inc
mov
in
cs
cmc
loope
call
addl
xor
cmp
adc
pop
in
sbb
stc
xlat
sbb
outsb
shll
pop
ss
in
xor
or
rcll
adc
fnstcw
xchg
lock
aaa
mov
inc
mov
adc
call
outsb
and
xchg
xchg
xchg
fsub
cmpsl
or
stc
sub
jmp
pop
jb
sbb
call
ret
sbb
mov
xchg
scas
sub
pop
lds
clc
mov
mov
xor
dec
add
orb
cmp
dec
cmp
ljmp
pushf
imul
fldcw
dec
cmpsl
ljmp
rclb
or
aad
lret
loopne
jbe
lret
sub
cmp
test
outsl
mov
call
imul
inc
orb
cmp
dec
cmp
ljmp
mov
jle
ljmp
ljmp
or
imulb
dec
or
aad
lret
nop
dec
dec
inc
stos
dec
in
jl
loope
cmp
push
shl
enter
dec
shlb
sub
lret
fcoms
enter
daa
inc
xchg
push
out
cmp
sub
cmp
int3
xor
sbb
and
mov
dec
pop
pop
xchg
cli
movl
ficoms
jp
cwtl
xchg
imul
cltd
xlat
sbb
aaa
idivb
mov
popa
push
cmp
push
or
shl
inc
sbb
aad
out
add
or
xchg
jp
or
mov
push
in
xlat
sti
cmp
mov
mov
jbe
mov
or
xor
mov
cmp
lret
adc
jbe
cmp
push
outsb
cwtl
sbb
push
movsl
mul
test
cmc
sbbb
push
loope
stos
vsqrtss
or
sub
or
xor
add
dec
mov
push
sbb
sbbl
mov
jb
lcall
pop
mov
cmp
lcall
jg
inc
scas
imul
stos
adc
and
call
in
xchg
ljmp
sti
dec
es
adc
mov
lds
xchg
mov
adc
dec
jb
cs
pop
mov
into
daa
out
sub
int
cmp
idivl
adc
jbe
mov
div
in
push
mov
subl
outsl
outsl
das
mov
insl
pop
push
sarl
xchg
jp
add
stos
sbb
adc
lret
inc
mov
sub
mov
push
xchg
out
daa
sub
mov
repz
cs
or
lahf
dec
push
lcall
cmpl
and
and
dec
lret
mov
mov
into
lret
push
and
out
dec
scas
lcall
imul
ret
ficoml
xchg
push
adc
push
addb
jmp
fisubl
bound
jnp
pop
dec
leave
adc
imulb
loopne
pop
xchg
ror
mov
mov
mov
out
jo
cmpb
dec
ret
mov
mov
into
ret
mov
repz
stos
stos
pop
lret
mov
int3
cli
lock
mov
es
push
cmpsl
ljmp
fimuls
and
jecxz
jl
inc
xchg
hlt
imul
dec
int3
imul
jg
in
test
imul
jb
in
and
cmpsl
cmp
scas
in
dec
pusha
repnz
inc
lds
repnz
xlat
js
push
fwait
push
vphaddwd
mov
loopne
add
jno
add
lret
pop
pop
cmpsl
lcall
cmp
testb
and
aad
add
fnstcw
adc
fidivrl
gs
xor
sub
add
or
cmc
test
xchg
jb
pop
inc
sbb
stos
add
cmp
pop
xchg
mov
fstpt
popa
mov
lret
mov
lret
ret
pop
lahf
inc
lcall
ljmp
mov
imul
or
push
jecxz
stc
sub
fdivp
mov
adc
and
mov
cwtl
ljmp
repnz
push
mov
loop
sub
pop
repnz
or
movsl
xor
addl
adc
or
jmp
cmp
cmpsb
arpl
mov
lret
jecxz
push
cmc
rcrl
mov
cmpsb
mov
cmpsb
push
mov
fsts
fs
and
jecxz
add
in
sbb
inc
kmovw
mov
fs
addb
mov
cmp
xor
xor
and
aam
push
mov
lds
jg
insb
inc
in
xchg
out
out
mov
dec
fld
jbe
and
add
ret
ljmp
mov
sbb
push
daa
in
loop
xor
adc
les
xchg
je
fwait
sbb
je
add
test
xlat
add
movsb
cmpsl
call
xor
dec
fnstcw
sbb
int
xchg
dec
xchg
fnstcw
jns
mov
sbb
in
loop
xchg
xchg
xchg
sbb
je
mulb
cmpsl
in
loop
xor
adc
les
out
add
cmpsl
in
loop
xor
cmp
les
xchg
je
out
in
loop
xor
mov
into
sbb
aad
fldl
in
jnp
ror
cmp
or
lret
and
jo
sbb
xlat
gs
out
inc
xor
xlat
movsl
int
out
test
out
in
fs
xlat
sub
jmp
into
jmp
into
jmp
and
iret
inc
lds
fists
sbb
push
xchg
adc
adc
call
add
mov
mov
fnstcw
sbb
dec
stos
lret
jmp
into
jmp
into
jmp
into
jmp
into
jmp
into
jmp
into
jmp
into
jmp
fimuls
daa
out
out
mov
inc
js
gs
xchg
imul
repnz
add
sahf
arpl
frstor
js
in
movsb
enter
frstor
aam
mov
xlat
add
cmp
call
bound
mov
xlat
rclb
inc
es
sbb
ljmp
sub
xlat
out
adc
mov
loope
pop
xchg
mov
mov
mov
mov
mov
fidivrl
sbb
xor
in
inc
xchg
fnstcw
xchg
xor
clc
pop
push
in
mov
and
jnp
mov
insl
cld
clc
dec
loop
rcrl
andnps
pop
jecxz
loop
aad
stos
cld
mov
or
sbb
xchg
fmuls
inc
mov
or
ror
jge
add
pop
mov
add
add
data16
dec
add
out
into
mov
add
gs
add
mov
sti
mov
dec
sahf
xchg
mov
inc
pop
sarl
jmp
xor
xchg
mov
mov
xchg
mov
xchg
sbb
jns
data16
or
scas
pop
cmc
data16
sbb
dec
js
leave
fsubrl
jb
leave
xlat
xchg
loop
iret
fucomip
ficomps
push
inc
stos
jecxz
addr16
jl
fbld
fldenv
mov
out
in
mov
fistpll
pusha
jp
sbb
popa
cmp
js
push
mov
in
jp
push
addr16
cmp
insb
sbb
cs
mov
adc
inc
cmpsl
dec
out
dec
out
out
xor
mov
dec
cmp
mov
mov
ds
add
out
xlat
out
jle
pusha
inc
ret
push
arpl
insb
mov
xchg
cli
push
adc
fisubrl
fcmovnbe
jmp
insl
cmpsb
xchg
insb
push
mov
nop
out
int
out
in
push
inc
bound
jmp
add
cmp
cmpsl
lds
xchg
fsubl
test
sbbl
sub
les
movsb
cmc
les
push
push
movsb
les
fwait
mov
insl
dec
mov
movsl
movsb
out
xchg
xor
xrelease
ja
and
fildll
insb
fisubs
add
sbb
cmp
roll
add
daa
fwait
icebp
jl
xlat
cmp
mov
stos
sbb
push
adc
call
xor
sbb
sub
gs
test
jg
inc
inc
aam
mov
pushf
movb
loop
movb
std
cltd
ja
sahf
test
mov
mov
leave
popa
aaa
leave
movsl
xchg
dec
lds
out
ss
inc
lds
into
fildl
adc
outsb
stc
cs
loope
test
inc
cmp
dec
mov
or
dec
loop
mov
test
test
in
loopne
xchg
sbb
pop
push
popa
and
aam
mov
stos
fwait
mov
test
adc
xchg
and
jge
clc
fstp
shll
cmp
inc
push
dec
loope
neg
add
aam
stc
push
stos
cmp
roll
or
and
mov
aam
aad
mov
xchg
shrl
add
sub
cs
lret
and
pop
add
fldt
roll
subl
stos
xor
cs
inc
fs
cs
and
stos
push
mov
fmuls
movsb
add
test
mov
jge
aaa
adc
dec
int3
xchg
sahf
jl
xchg
rorb
stc
test
mov
imul
into
nop
cmpsl
lds
xchg
lahf
daa
rcrl
cmp
inc
adc
imulb
fcoms
test
cmp
mov
dec
int3
add
bound
sbb
outsl
daa
sbb
xchg
sbb
insl
dec
insb
ret
aad
lock
add
xchg
jmp
dec
push
imul
ljmp
mov
data16
movsb
lcall
xor
jle
mov
stos
jle
pop
fs
movsb
daa
aam
jmp
xchg
mov
leave
rorl
adc
out
dec
jle
jg
sbb
xlat
or
pop
test
shr
gs
add
mov
mov
out
arpl
ret
xchg
in
call
cmp
mov
sbb
pop
addb
sbb
movsl
test
cld
dec
test
add
mov
out
sbb
pop
dec
sbb
cwtl
mov
jg
sbb
cmp
ljmp
add
mov
call
fmull
es
pop
push
packsswb
in
jmp
fsubl
stos
aad
ds
int3
insl
and
ljmp
mov
mov
inc
fsubs
leave
push
xchg
lret
cltd
cmp
sbb
shlb
add
or
sub
es
pop
or
and
hlt
or
movl
cmp
test
sub
or
dec
daa
aas
ljmp
test
pop
add
testb
or
jmp
or
sub
mov
xor
xchg
mov
les
sbb
add
cld
in
and
jbe
xchg
or
in
xlat
pop
scas
push
sbb
lods
add
jmp
lahf
or
cmp
addl
clc
ljmp
outsb
test
repz
faddl
sbb
movl
test
mov
pop
rorb
add
fwait
gs
lods
inc
cmp
sbbl
or
insl
or
adc
enter
cli
sub
mov
cmp
adc
jbe
adc
jne
mov
mov
imul
xchg
cld
add
dec
dec
xchg
pop
xorl
insl
mov
add
psraw
add
je
sbbl
pop
ljmp
testb
push
inc
pop
filds
add
test
inc
inc
or
push
testb
movb
jae
pusha
rorl
repnz
sbb
out
push
xchg
jle
iret
pusha
sub
leave
jg
xor
push
inc
sbb
adc
fsubrl
mov
clc
imul
push
idivb
xor
or
push
mov
loopne
gs
sbb
clc
inc
stos
push
mov
sbb
jno
loope
mov
dec
cli
and
xchg
lahf
push
arpl
loopne
test
enter
pusha
xchg
jnp
jge
pop
pop
in
sub
lock
aam
std
mov
mov
movl
in
cmp
sub
sbb
adc
mov
lds
ljmp
mov
cwtl
xchg
jns
mov
and
push
nop
jmp
sub
add
loope
sub
leave
fld
and
jo
test
loopne
or
inc
pop
mov
or
mov
les
js
loop
scas
iret
xchg
loope
adc
outsb
jecxz
adc
enter
push
insl
jmp
jnp
fnsave
mov
sbb
pop
mov
out
sub
xchg
addr16
dec
ret
cmpsl
testb
int3
cmp
or
loopne
and
imul
and
ficompl
xor
nop
pusha
dec
mov
xchg
leave
add
cmpsl
je
cmp
mov
dec
mov
pop
loope
mov
call
adc
dec
nop
pushf
jl
mov
enter
in
out
inc
add
push
xor
fsubs
inc
into
stos
jbe
in
negb
xchg
scas
pop
mov
cmc
inc
cwtl
xor
push
jl
mov
adc
jmp
gs
inc
cmp
sub
push
ret
cs
push
sub
inc
dec
lods
or
mov
enter
mov
xor
pop
imul
je
cmpsl
test
xor
jp
dec
out
push
sub
test
adcb
aad
mov
inc
sub
and
test
cmpsl
or
cmpsl
das
jl
test
sbb
hlt
data16
test
gs
or
sub
xchg
add
mov
sub
mov
or
sub
adc
int
insl
ljmpw
bswap
push
data16
xchg
sub
cmpsl
ss
jl
dec
add
pop
aaa
xor
out
mov
lods
loop
je
rcl
imul
push
lea
aad
mov
push
mov
inc
xor
inc
push
sub
ss
fsubs
fcoml
or
ret
out
inc
in
push
out
stos
shll
dec
push
adc
xchg
jmp
ret
xchg
sub
mov
jmp
int3
into
out
aas
mov
mov
mov
lods
add
imul
and
shll
movsb
stos
rcrl
fnstsw
dec
pop
add
inc
sarl
imul
outsb
add
jmp
xor
pop
adc
aaa
sub
insl
js
sub
sub
ds
push
int3
data16
pop
push
mov
lods
sub
loopne
adc
insl
in
jmp
imul
insl
in
xor
add
ret
fdivl
insl
xlat
shll
or
out
or
daa
add
cmp
insl
sub
pop
pop
or
insl
stc
mov
or
test
or
in
mov
pop
jg
pushf
or
fidivrs
and
inc
sub
xchg
sub
sub
cld
cwtl
or
rorb
movsb
pop
out
out
pop
dec
adc
mov
enter
movsl
mov
mov
and
or
jmp
inc
push
sbb
aad
in
pop
movsb
pop
inc
fs
sub
lea
shl
cwtl
loope
and
xor
jecxz
dec
ja
and
cmp
pop
dec
inc
add
add
push
mov
mov
lahf
fbstp
outsb
iret
push
and
stos
adc
inc
push
push
mov
push
jp
inc
out
adcl
pusha
dec
and
in
xor
and
lock
dec
cs
nop
into
shr
js
and
adc
aas
sbb
xor
adc
sahf
int3
lea
cmp
movsl
pop
lret
insb
in
dec
fistl
inc
call
movsl
fwait
test
ja
pusha
fs
insl
pop
dec
add
sahf
cmpsb
add
nop
pushf
jo
xor
sub
dec
mov
adc
and
or
or
popa
je
je
pop
add
ljmp
push
pop
les
stc
sub
fimuls
out
scas
inc
nop
subb
loop
test
call
imul
imul
loop
mov
adc
sbb
out
or
in
dec
enter
mov
movsl
sti
cmp
ja
mov
fsubs
mov
into
push
movsl
outsl
inc
sub
pop
dec
fsubrs
sti
in
jl
fmuls
inc
out
mov
out
rclb
movsb
ljmp
mov
xlat
adc
test
mov
mov
mov
pop
inc
or
test
inc
cld
imul
in
cwtl
mov
inc
roll
call
lock
loop
test
ret
scas
pop
pop
out
inc
cwtl
test
in
xchg
and
inc
mov
mov
ja
mov
push
adc
cmovno
mov
mov
mov
sbb
insb
lods
call
aam
push
adc
xor
shlb
nop
inc
mov
mov
inc
test
and
ljmp
sbb
ret
sbb
sub
push
int3
inc
into
inc
jge
lods
insb
inc
mov
mov
inc
out
sbb
xlat
xor
test
dec
pop
pop
or
jne
lods
dec
pop
add
inc
daa
pop
jp
dec
test
ja
test
dec
lods
lea
add
fadds
or
mov
ja
xor
xchg
cmpsb
iret
out
cmpsl
out
push
xchg
cmp
mov
pop
lods
inc
cmp
adc
jecxz
filds
jmp
inc
cwtl
cmpsl
or
mov
data16
sub
sub
xlat
and
lret
sahf
jmp
push
call
aas
jg
out
in
jg
xor
xor
hlt
lods
int
mov
test
add
adc
push
aas
and
in
dec
repnz
sbb
or
stos
fadds
mov
inc
and
test
inc
lods
adc
ljmp
sbb
bnd
nop
imul
js
out
xchg
adc
sub
xor
sub
test
stos
mov
ja
lahf
or
outsl
mov
cld
shll
adcl
dec
mov
mov
jo
es
mov
rcr
sti
lretw
and
mov
lods
add
jbe
add
cmpsl
ljmp
cmp
sbb
push
lahf
cld
int
outsb
movsb
out
xor
mov
ja
fwait
inc
js
or
movsl
les
ja
daa
fsubs
cmp
lock
aam
test
in
mov
adc
jb
mov
xor
add
outsl
test
push
sbb
ja
in
or
fwait
jns
push
pop
jmp
adc
popa
add
insl
fsubs
dec
mov
clc
shrl
out
stc
vminss
ret
or
out
clc
dec
push
sub
mulb
stos
shll
in
add
jge
insb
shlb
xlat
filds
fisttpl
repnz
sub
push
dec
push
mov
pop
inc
mov
int3
lahf
cmpsb
popa
daa
mov
xchg
inc
ljmp
push
mov
push
and
mov
pop
enter
inc
xchg
ljmp
dec
mov
mov
xlat
test
jecxz
xor
inc
cmc
mov
jg
add
add
xchg
ljmp
push
push
inc
push
movaps
inc
lret
out
mov
cmpsl
cltd
jnp
ja
popa
dec
mov
push
push
iret
inc
cld
out
add
sub
ret
inc
push
sub
pop
xchg
add
cs
xchg
push
push
cld
add
mov
insb
adcl
js
add
push
pop
xchg
pop
sub
hlt
inc
gs
stos
sub
or
sub
xchg
in
add
enter
inc
adc
out
arpl
ds
jae
inc
jl
nop
and
movb
add
adc
pop
sarl
xor
fsubl
pushf
xchg
lods
bound
orl
decl
mov
sahf
add
call
enter
aas
movsb
sahf
pop
ret
enter
cmp
pop
fwait
test
xlat
mov
cmpb
cmp
inc
sub
out
sub
lahf
jo
dec
enter
cwtl
out
je
cmp
pop
ds
adc
ss
jnp
roll
std
lea
popa
xchg
lahf
stos
daa
or
jmp
lds
jmp
jge
mov
adc
push
popf
ja
mov
or
cmc
cs
mov
mov
in
shrb
sub
ljmp
pop
imul
pop
xor
stos
xlat
sahf
xor
jecxz
pop
sub
popf
push
lret
out
pop
add
adc
enter
add
push
fxtract
jp
cmp
in
sbb
xor
push
nop
outsb
test
incb
enter
inc
dec
xchg
aas
es
dec
or
js
int3
dec
and
dec
clc
mov
repz
icebp
add
adc
sub
adc
dec
mov
in
int3
stos
or
test
ljmp
sub
push
bsr
mov
fdivr
add
adc
and
cwtl
adc
rorl
cwtl
or
mov
aad
stc
push
pop
or
mov
jae
mov
call
xor
push
add
add
in
add
mov
jecxz
push
cmpsl
xchg
cltd
inc
repz
outsl
jbe
xchg
xor
sahf
aaa
push
or
or
stos
xor
std
stos
xchg
mov
add
or
pop
movsl
das
jmp
lcall
insl
fdivrl
mov
jecxz
jl
or
loope
scas
add
int
pop
or
shrl
leave
cli
pop
lret
fwait
popa
mov
fimull
jmp
fnstsw
ret
lcall
rolb
inc
pop
lcall
insb
addb
or
push
sbb
shrb
push
pop
xchg
mov
xor
ret
mov
scas
dec
dec
push
mov
lods
fwait
sbb
inc
jae
sahf
mov
adc
data16
jmp
movl
lea
ja
stc
bt
pusha
imul
pusha
lea
jmp
jmp
lea
jb
jmp
jmp
stos
xor
push
push
inc
add
scas
fs
in
test
pop
outsb
add
jl
bound
pop
xor
test
decb
jns
pop
pusha
jbe
mov
addl
les
test
jb
adc
cmc
push
sub
movl
jmp
je
bt
clc
stc
cmp
pushf
lea
je
cmp
cmp
call
andl
inc
jno
lret
lods
inc
pop
or
push
rcll
cmpsb
fsub
cmc
sbb
mov
pop
fldenv
fs
and
adc
dec
adc
pop
mov
push
fs
and
test
adc
mov
arpl
aas
out
lods
add
aad
dec
std
repz
mov
mov
jae
adc
sbb
outsl
push
mov
inc
dec
divl
jae
pop
adc
ficompl
bt
sub
pusha
pushl
popl
stc
pushf
cmp
mov
call
call
mov
cwtl
lahf
lods
shlb
addr16
sbb
pushf
jnp
es
jo
and
out
ss
or
fstpt
cmp
insb
repz
adc
jns
push
push
pop
pop
mov
add
lcall
add
adc
add
sbb
jle
adc
jge
sbb
es
add
adc
add
add
jmp
cmp
cmp
pusha
lea
je
test
push
cmc
cmc
cmp
call
call
lea
jb
bt
cmp
jmp
lret
push
xchg
int3
pop
mov
sub
imul
inc
in
ja
nop
sbb
sbb
cmc
and
ret
push
add
xchg
or
dec
xchg
sub
xchg
addr16
test
jg
push
push
add
cli
sahf
ficompl
fldl
adc
hlt
mov
shll
fs
in
out
je
or
fbstp
aas
ret
outsl
icebp
dec
push
or
jg
push
or
insb
repz
test
jmp
sub
adc
cwtl
inc
xchg
push
cmpsb
int3
int3
popf
push
push
inc
packssdw
jecxz
adc
mov
shl
add
xchg
aas
adc
outsb
add
or
jb
adc
add
daa
mov
scas
adc
js
push
cld
adc
testb
cmp
adc
sub
add
gs
movl
push
pushf
mov
movb
push
pushl
ret
inc
shr
stc
repnz
mov
movsb
mov
in
mov
adc
dec
iret
jle
movsl
sbbl
mov
outsl
fdivs
lea
shl
adc
inc
aaa
int
cmp
lds
imul
xchg
jno
scas
adc
jmp
ret
jmp
stos
push
lea
jmp
jmp
push
rep
bswap
pop
jmp
pushf
push
movl
movb
movl
push
mov
pusha
lea
jmp
jnp
pushf
mov
inc
pushl
pushf
push
lea
jmp
cmp
cmpb
jmp
inc
cmp
roll
sbb
jbe
xor
xchg
sbb
aas
sbb
xor
mov
imul
mov
push
mov
dec
jg
pop
sbb
add
fcoms
adc
into
leave
leave
je
push
sub
dec
xor
aaa
in
bound
cmp
jmp
and
cmp
xor
sti
lcall
test
inc
mov
clc
push
insb
repz
inc
gs
mov
adc
pop
add
scas
pushf
pushf
mov
call
pushf
imul
push
pushf
lea
jmp
mov
cmp
pushf
xchg
neg
movsbl
mov
cmp
pusha
sub
movb
pushf
call
pushf
lea
ja
rcl
sub
btr
add
or
and
bsr
mov
push
cmc
mov
stc
call
pushl
lea
jne
pusha
push
movb
lea
mov
lea
cwtl
lea
pushf
pushf
movl
pusha
call
pop
jge
sbbl
outsb
add
push
addr16
mov
sar
adc
and
jbe
sub
daa
push
mov
sahf
lods
loope
push
je
xchg
add
leave
test
jns
push
sahf
fsubrl
or
lods
cli
cmpsb
adc
rcll
mov
jg
icebp
adc
cmp
add
mov
inc
daa
pop
stos
jg
les
pop
gs
sahf
adc
xchg
cmp
lea
jne
lahf
bswap
pusha
movb
pusha
setnp
mov
movsbl
push
movzbw
call
jnp
adc
cmpsl
addr16
fcmovnbe
xor
mov
orb
cmc
movsl
or
push
jl
loopne
mov
aam
arpl
mov
or
mov
aaa
addb
pop
sbb
sarb
pop
push
test
jge
cwtl
aaa
cmpsb
test
das
sub
adc
insb
dec
test
clc
test
jnp
sbb
adc
sbb
imul
fcomps
mov
repz
push
insb
cmpsb
mov
lock
or
xchg
out
dec
cld
jecxz
enter
in
mov
sub
push
les
sub
xchg
ret
jno
jb
and
imulb
sahf
adc
xchg
cmp
bt
mov
pusha
mov
cmpb
pushl
pushf
movb
movw
lea
jne
call
les
test
loop
sahf
jo
test
stc
or
fidivl
adc
pop
xor
sbb
mov
cmp
xchg
ja
fmull
mov
pop
lret
popa
adc
cmc
xor
je
adc
jmp
pop
sub
pop
dec
push
pushl
jns
push
jbe
fnstcw
pusha
lock
in
inc
push
jmp
pop
add
adc
xchg
shlb
sbb
jg
push
movsb
dec
ja
inc
loopne
sub
mov
sbb
jp
je
pusha
ret
adc
or
fisttpl
lods
mov
add
mov
push
add
jle
lock
push
ja
mov
pop
sbb
lret
stos
jns
rclb
and
pop
cmc
lods
push
mov
lods
lods
in
xchg
mov
test
dec
inc
sbb
mov
mov
aad
fdivrl
add
jge
insb
push
sub
out
jbe
shll
out
lcall
fidivl
push
outsb
test
dec
ret
jg
sbb
push
xor
push
fisubs
mov
cmp
dec
pop
pop
mov
flds
mov
lea
xor
clc
sub
lahf
and
push
mov
sbb
mov
mov
lcall
jae
lret
cmp
jge
fucomp
fcoms
cmpsb
loope
sub
jl
xchg
xchg
lods
imul
outsl
jle
mov
pop
bound
dec
loope
mov
push
dec
jl
sbb
cmc
jge
bound
add
cmpsb
dec
into
push
mov
mov
xchg
test
push
add
add
sub
jecxz
mov
gs
ret
or
out
dec
mov
aad
mov
mov
or
sbb
bound
ljmp
cmpsb
sti
pop
dec
int3
push
dec
mov
inc
loop
lea
andl
dec
repnz
mov
aam
add
lock
lahf
sbb
mov
rol
fldenvs
lret
fwait
inc
mov
sbb
nop
lea
mov
lods
mov
fldcw
xchg
inc
test
sbb
push
js
jbe
sbb
loope
test
dec
js
lcall
mov
cmp
mov
and
sub
outsb
pop
fildl
xchg
psrlw
gs
test
sbbl
mov
mov
sub
mov
jmp
jno
mov
cs
push
push
pushf
into
and
push
icebp
idivl
mov
push
add
sbb
popa
repz
lret
out
and
mov
icebp
push
dec
lahf
push
fiadds
cli
addr16
add
push
faddl
xor
mov
idiv
aaa
loopne
jle
pop
mov
pop
insl
mov
xchg
pop
mov
scas
cli
std
mov
push
fsubrl
insb
int3
mov
mov
xor
fnsave
cmp
sub
add
or
pop
xor
mov
inc
addr16
push
pop
cmp
pop
sub
push
faddl
je
jmp
mov
mov
xor
insb
outsb
sub
push
in
mov
aas
and
int3
sbb
jl
mov
mov
into
call
xchg
js
push
iret
xor
mov
mov
mov
and
aaa
push
or
pop
out
add
xor
lock
add
adc
and
neg
in
std
mov
sbb
xor
mov
mov
mov
ss
ja
ds
add
sarl
push
xchg
dec
and
push
push
out
std
fiadds
insb
pop
ds
shld
lds
iret
repnz
mov
push
enter
fildll
cli
sub
lcall
add
shrb
mov
cmpsl
sbb
imul
dec
mov
lods
dec
imul
outsl
pop
stos
gs
xchg
push
ds
std
fwait
aam
mov
insb
push
in
xchg
out
fisubrs
cmp
mov
loopne
sbb
jecxz
aas
fucom
lahf
addr16
loopne
jno
in
shrl
lods
pusha
sbb
xchg
xchg
cmp
adc
ffree
mov
fdivl
shlb
sbb
push
neg
dec
imul
mov
pop
cmc
mov
iret
cmpsb
cmp
push
out
shll
fwait
jmp
push
push
ret
addb
jecxz
ljmp
pop
aam
repnz
das
sbb
sub
push
push
test
test
jp
and
and
sti
loope
dec
mov
mov
adc
dec
int
mov
push
js
iret
aaa
or
sbb
int
cld
shlb
gs
pusha
repz
inc
mov
jne
cmp
sub
fwait
insl
rorl
sub
mov
or
sbb
call
cld
sub
pop
loopne
xor
in
lds
repnz
jg
and
add
in
xchg
and
xchg
inc
sbb
or
in
push
adc
jmp
aas
pop
add
jne
mov
jl
and
cwtl
into
fsubl
cmp
or
test
lods
mov
adc
cld
gs
shlb
and
jae
lods
inc
mov
adc
fs
mov
and
pop
cmp
repz
xchg
mov
lods
data16
outsb
add
js
in
push
test
nop
shlb
outsl
in
mov
cmc
inc
ret
stc
dec
and
xchg
jns
cwtl
push
mov
mov
and
addr16
cmp
es
stos
inc
repz
sbb
jle
fstl
pop
adc
repnz
add
sub
sbb
orl
mov
xrelease
fmulp
mov
divb
ret
sbb
pop
mov
movsl
sbbb
mov
cli
cmpsb
scas
adc
cs
or
fucomp
ja
rcll
pop
adc
jp
adc
and
aam
xchg
mov
adc
mov
jl
pop
push
imul
mov
in
xor
subl
lea
pmulhw
int3
shr
dec
idivl
sarb
adcb
xchg
push
fdivrl
mov
pop
adc
rol
shrd
mov
test
call
lea
jae
pusha
cmc
jmp
pushf
jmp
pusha
call
push
adc
cwtl
mov
ret
sbb
ja
roll
and
mov
and
pusha
or
ds
in
pop
fnstcw
jmp
in
js
xor
jge
shl
sbb
loop
xchg
and
pop
adc
pop
cwtl
movsbw
pushf
mov
movzbw
mov
movzbl
lea
jmp
cwtl
mov
pop
cwtl
lahf
movzbl
lea
push
push
jmp
mov
pushl
pushl
ret
push
push
lea
jb
push
pushl
ret
movl
movb
call
pushl
jmp
cmc
clc
xor
call
neg
shr
bts
pop
mov
inc
bsf
add
btc
stc
add
or
sub
mov
push
pushl
shr
cmp
test
cmp
lea
jp
je
call
inc
pushl
mov
adc
pushf
pushl
pushl
ret
xor
xor
shld
mov
jmp
or
test
bt
movsbw
add
bsf
adc
sub
rcl
shr
cmp
mov
push
add
neg
add
dec
rol
cmp
sub
mov
mov
call
mov
pop
mov
jecxz
mov
cmp
cmc
movsl
pusha
cltd
sub
cmc
and
std
pop
stc
jp
xchg
or
add
cmp
shll
mov
pop
shlb
lahf
xor
subb
jl
bound
fwait
cmp
push
sbb
aas
inc
cmc
and
xchg
push
mov
fidivrl
movsb
in
scas
fs
pop
add
adc
xchg
lahf
mov
ret
test
sub
in
cmpsl
ljmp
fs
ror
jno
cmp
inc
xchg
adc
and
fcomi
shll
jmp
push
test
stc
stc
cmp
and
jmp
mov
push
push
pushl
ret
call
push
jmp
call
pusha
pusha
pushl
adc
pushf
lea
jbe
pusha
lea
jae
call
call
cmp
pushf
lea
not
mov
push
push
jmp
sub
mov
call
lods
lock
orb
jp
push
adc
rcr
push
push
leave
xor
jmp
fiadds
sbb
push
into
scas
sbb
sbb
push
loopne
ja
imul
je
xchg
mov
jecxz
add
jmp
in
popa
shr
mov
fs
xchg
xchg
sbb
rorl
mov
out
pop
daa
sbb
jb
inc
mov
xor
xchg
dec
inc
aad
or
mov
fiadds
stc
call
sbb
mov
out
test
xor
jl
nop
add
pop
and
inc
imul
dec
inc
loope
push
xor
push
ds
mov
sub
orl
cltd
daa
push
pop
insl
aas
mov
loopne
stc
out
sub
pop
xchg
adc
add
pop
les
sbb
mov
or
sub
vxorps
in
lea
je
pushf
push
pusha
lea
jmp
push
lea
je
pushf
mov
pushf
push
lea
jmp
add
dec
outsl
arpl
inc
jb
gs
xor
xor
push
movb
pushl
pushl
ret
push
mov
lea
je
push
cmp
stc
pushl
cmp
pushl
jmp
repz
xor
dec
cmp
lock
fcompl
addl
vpcmpgtd
adc
adc
dec
and
push
insb
inc
es
cmp
lcall
xchg
cmp
scas
inc
sub
sti
popf
and
mov
in
mov
push
mov
hlt
popf
sbb
scas
adc
lret
pop
cmpsb
loop
test
sub
lods
not
int
nop
sbb
mov
data16
imull
aam
xchg
popl
xchg
mov
mov
dec
inc
lods
jo
dec
or
int
pushf
rolb
aad
pop
adc
mov
sti
sbb
and
jns
fidivs
xor
icebp
lods
aaa
xor
gs
test
jl
mov
or
jmp
movsl
xchg
mov
fsubp
mov
xor
in
inc
aad
aad
outsl
arpl
lock
lcall
pop
adc
sub
and
dec
inc
jmp
or
xchg
std
dec
and
movsb
push
lea
xor
push
out
add
mov
adc
and
mov
int3
pop
cmpsl
dec
xor
xchg
inc
in
or
shl
cmp
aam
fcmovnu
int3
stc
xor
stos
ss
sbb
adc
xchg
xlat
test
and
jae
call
lea
jne
test
xor
push
push
pusha
lea
jmp
pusha
btr
bt
add
add
rcl
mov
inc
mov
stc
push
repnz
push
push
movb
lea
jne
lahf
movb
call
push
lea
jb
clc
call
loopne
mov
and
iret
add
pusha
mov
or
imul
out
pop
xorl
xlat
jno
int
mov
jne
push
inc
pop
add
add
jge
imul
iret
neg
in
xchg
or
imul
lret
stos
cli
pop
jbe
jl
test
roll
imul
xchg
mov
xor
jmp
ja
stos
idivl
mov
scas
cmpsb
or
in
insl
dec
push
dec
cmpsl
fs
sub
je
fmull
dec
outsb
aam
xchg
pusha
mov
sub
jp
test
xchg
mov
xor
or
xor
add
dec
scas
mov
xor
jae
lea
jb
pop
test
aas
push
fsts
adc
rcr
iret
enter
push
cwtl
loope
xabort
mov
in
fwait
jp
jl
mov
push
daa
sbb
sub
stos
mov
or
and
pushf
pop
mov
xchg
or
sbb
pop
pop
out
add
lahf
adc
push
lea
push
frstor
lock
jge
sub
ret
mov
push
pop
pop
push
lret
jno
push
xor
stos
addr16
lea
xchg
dec
daa
jmp
fsubl
fucomip
cli
pop
icebp
call
adc
push
outsl
lahf
cmpsb
and
test
fsubl
stc
cltd
roll
int3
in
mov
add
gs
mov
and
ds
mov
dec
aaa
adc
imul
xchg
inc
and
pop
mov
fldt
add
fidivl
bound
std
xor
push
shl
xor
push
mov
mov
inc
out
and
fidivl
mov
sbb
std
push
adc
sub
sarl
sbb
out
sbb
fsubrp
cmc
adc
mov
ljmp
push
fs
cmc
push
shll
insl
add
sub
ss
loop
cmc
jmp
shlb
mov
aaa
sbb
inc
xlat
jecxz
push
xchg
inc
movb
dec
jbe
ret
and
scas
iret
mov
push
cmp
adc
repnz
sub
cmpb
mov
repnz
push
call
bswap
pop
pushf
pusha
pusha
mov
pushl
ret
movb
lea
jne
add
dec
sbb
shld
mov
test
clc
shrd
sub
push
neg
sar
lea
pusha
mov
sub
pushf
call
pushf
lea
jne
test
shrd
inc
mov
movsbl
pusha
pusha
sub
shrd
cmc
shl
lea
push
test
cmc
sub
pushf
mov
pushl
popl
call
clc
jmp
push
pushf
call
mov
clc
test
test
jmp
pushf
pushf
push
call
pushl
push
push
lea
call
cmc
call
mov
push
push
mov
lea
call
ja
pusha
mov
pushf
movb
pushf
lea
jmp
jmp
stc
repnz
repz
pop
mov
fiaddl
dec
cmp
cmp
aad
or
mov
outsb
ljmp
jae
in
and
mov
iret
loopne
imul
mov
adc
push
jl
cmpsb
xlat
in
fwait
aas
vmovdqa
pop
sub
adcb
scas
mov
outsl
jle
loop
sub
int3
int3
sti
adc
mulb
jecxz
xchg
test
call
xchg
jecxz
mov
in
repnz
test
pop
mov
js
mov
cs
sub
cmc
mov
and
jl
push
mov
insb
psubw
stc
lret
mov
add
mov
mov
data16
hlt
stc
or
sub
jp
adc
or
push
shrb
lods
insb
repz
sbb
mov
pop
adc
mov
adc
inc
gs
outsl
fs
gs
imul
add
jnp
add
xlat
loop
pop
mov
cmpsb
ljmp
sbb
push
jmp
mov
mov
ret
fimuls
xchg
or
sahf
cli
out
out
bound
ss
js
or
mov
and
mov
mov
into
cmpsb
sub
push
out
inc
popf
pop
mov
or
rcll
call
js
loop
sub
adc
lds
fistl
cmp
xor
xchg
xlat
mov
jns
mov
stc
adc
cs
jmp
clc
clc
sub
push
rep
movsbw
movsbw
not
mov
pusha
movb
push
lea
jmp
movl
movb
lea
jmp
jmp
inc
cld
cmpsl
xchg
or
inc
adc
andb
fsub
mov
xor
add
jecxz
repz
gs
test
adc
pusha
sub
leave
in
inc
adc
inc
jns
movsb
dec
cmp
jbe
hlt
xchg
add
xchg
out
xor
jne
sarl
fcmovnu
imul
push
fs
sub
in
testb
mov
mov
stos
aad
add
ret
ja
sbb
lcall
or
push
fdivrs
ljmp
or
mov
jno
pop
adc
fidivrs
std
jno
ja
mulb
insl
add
insb
fwait
aad
or
cmp
mov
xchg
ret
subl
aas
jg
sub
iret
outsb
gs
lret
scas
xchg
hlt
inc
mov
mov
das
sbb
inc
rol
dec
mov
iret
mov
adc
mov
adcl
mov
mov
pop
cmc
add
lock
in
sarb
shll
adc
adc
jge
icebp
mov
inc
in
push
add
sahf
nop
scas
in
mov
pop
mov
sub
fisubrs
test
mov
jecxz
test
iret
adc
adcl
bound
jo
push
cwtl
pusha
cmp
popf
push
mov
xchg
inc
xor
mov
out
pop
das
push
daa
adc
xor
rolb
movsb
or
sahf
out
mov
int3
mov
mov
xchg
mov
mov
out
pop
test
fcmovne
popf
test
cmp
loope
mov
lods
test
pop
rclb
mov
scas
popa
mov
mov
stc
cmp
dec
xchg
xchg
stc
test
xchg
gs
cli
in
jmp
adc
and
sub
cld
sahf
hlt
inc
mov
xor
mov
sbb
cld
dec
enter
mov
popf
mov
fsub
mov
fimull
in
mov
fistpll
shlb
xchg
inc
das
mov
cli
adc
cmp
stc
cmp
bt
call
fistpll
pop
pop
and
mov
outsb
jp
xor
pop
jecxz
ljmp
popf
or
dec
pop
pop
in
ret
in
cmp
sub
sbbb
inc
sub
lret
sub
dec
cmp
sub
jne
push
in
scas
adcb
sub
inc
and
dec
pushf
mov
push
mov
pushf
pushl
ret
lea
jb
pusha
clc
cmp
mov
call
add
cmp
imul
pop
lock
add
cmpsb
lods
sahf
pop
jp
mov
ret
ja
sbb
mov
dec
in
scas
pusha
or
adc
int
sbb
sub
das
add
pop
shll
loope
loop
sub
lret
push
pusha
imul
sbb
cmpsl
add
daa
or
ret
or
cmp
and
xor
sbb
imul
frstor
cmp
aas
repz
xchg
test
jecxz
es
jp
pop
lret
xor
xchg
push
hlt
insb
repz
cmp
mov
push
adc
jecxz
jmp
or
xchg
pop
mov
jo
push
jp
push
pop
jo
inc
sbb
call
mov
push
into
add
sbb
hlt
enter
mov
into
insl
loop
stc
cli
sbb
pop
dec
push
sub
cmp
inc
adc
icebp
cld
xchg
xchg
mov
sahf
aas
outsb
or
shr
jp
enter
pushf
lret
sub
xchg
add
test
insb
enter
hlt
mov
mov
into
dec
frstor
aam
xor
mov
xor
cmpb
mov
subb
pop
sahf
cs
in
add
inc
dec
in
leave
adc
fadds
mov
xchg
jg
fstpl
push
loope
jne
mov
jmp
iret
addr16
in
lea
add
fs
je
mov
movzbw
mov
movzbl
call
bt
cmc
cmp
jmp
lea
call
call
ror
btc
sub
ror
shr
lea
cmp
pushf
pushf
sub
pushf
bt
pushl
popl
pushf
cmp
test
call
pushf
lea
jne
pusha
mov
or
pop
inc
sub
adc
mov
movw
lea
call
xchg
aas
sti
loop
and
aas
push
jl
stos
mov
fisubs
mov
pop
pop
nop
xor
push
leave
movsb
in
iret
xor
movsw
test
cmpsl
addr16
adc
cli
dec
imul
mov
pop
movsl
shr
jnp
mov
fdivrl
js
pop
and
mov
sbb
incl
enter
insb
ret
stc
pop
jno
cmpsb
shl
add
pop
adc
dec
push
adc
imul
cmpsl
test
scas
into
imul
inc
jne
sub
fidivrs
mov
gs
sub
push
out
xchg
mov
lret
adc
mov
cmc
ror
pushf
call
xor
test
jb
xor
jmp
mov
fisttps
pop
mov
push
mov
mov
xorb
adc
faddp
ljmp
shlb
popf
mov
arpl
outsb
xchg
test
adc
push
mov
dec
sarl
into
incl
jbe
clc
jnp
shlb
and
adc
inc
sbb
lret
cmp
arpl
icebp
and
dec
jg
stos
in
sbb
scas
xchg
test
xlat
fildl
mov
rorl
dec
hlt
mov
popf
xchg
pop
mov
in
repnz
lds
jp
xor
repnz
dec
lods
int
mov
xchg
dec
jmp
cmc
inc
pushf
lcall
jno
ret
push
inc
xorb
call
xor
or
cmpsl
jg
loope
lcall
cmp
cld
xor
aaa
adc
test
int
ss
adc
out
dec
shrb
add
into
push
mov
mov
lods
ret
jmp
sbb
jne
in
cmpsb
cmpsb
push
stos
aaa
sbb
jl
mov
in
ret
lods
mov
cmp
cmpsl
sti
ljmp
and
in
pop
aad
adc
pop
cld
mov
or
sub
inc
adcl
cwtl
or
das
cmc
and
xchg
or
mov
adc
or
or
push
and
leave
shr
mov
or
fistpll
repnz
inc
pop
mov
mov
scas
popa
bndstx
lahf
out
cltd
mov
sub
repnz
fcoms
and
jnp
and
adc
notl
pop
or
stc
fmuls
or
lahf
fdivrl
pop
dec
push
mov
insb
popf
lret
loopne
xlat
dec
push
loopne
adc
lock
pushf
lea
jae
jmp
mov
out
and
pop
xorb
je
lea
jb
dec
stos
push
sbb
inc
ret
cmp
inc
call
out
pop
loop
sti
dec
loope
xchg
int
call
mov
out
jbe
aas
loope
or
adc
fsubrs
pop
loope
jno
clc
dec
lcall
sahf
scas
pop
pop
lcall
pop
daa
ljmp
add
adc
add
jbe
cmc
pushf
test
mov
lea
jne
pusha
pushf
pusha
mov
call
stc
pushl
cmp
push
push
push
lea
ja
pushf
call
jp
aas
push
divb
sbb
pop
inc
ja
fistl
inc
icebp
dec
test
mov
xchg
in
insb
push
pop
cmp
std
lea
int3
outsl
movsl
les
sub
push
loopne
sbbl
xor
stos
cmc
dec
arpl
mov
test
gs
push
or
mov
aad
clc
adc
sbb
and
call
cmp
push
cmp
pushf
mov
lea
js
jae
clc
clc
cmp
call
jmp
and
divb
pop
mov
mov
and
dec
cmc
sub
mov
dec
adc
fstpt
mov
sub
pop
mov
sahf
popf
insl
dec
add
xor
mov
xorb
in
dec
mov
loope
sbb
inc
cwtl
lds
adc
adc
pushf
mov
jge
dec
xchg
adc
pop
cli
jo
and
push
cmp
ja
push
sub
mov
test
and
jl
stc
sbb
sub
arpl
pop
xchg
xor
aas
adc
push
int3
jno
inc
and
movb
pushf
mov
pushl
ret
clc
sub
pushl
mov
lea
jmp
pushf
inc
pushf
pushl
adc
push
mov
pushf
pushl
ret
lea
jb
pushf
mov
pusha
pushl
ret
movb
push
mov
lea
je
jmp
mov
jmp
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
data16
pushl
lea
ja
xor
shr
sub
sub
movzbw
setge
add
dec
sub
adc
mov
call
movb
pusha
jmp
int
imul
insb
adc
orl
fistpll
out
shll
out
ja
sbb
ret
mov
inc
xchg
call
aad
sbb
js
call
or
inc
lea
sbb
mov
pop
add
sbb
fidivrl
mov
add
jo
repz
mov
dec
jns
pop
in
sti
fisttpl
inc
cmc
or
mov
xchg
adc
and
cmpsb
movb
push
lea
je
pusha
movb
or
lea
js
push
mov
pushf
lea
je
dec
dec
adc
or
xor
rcl
test
lea
mov
shld
mov
rol
inc
movsbw
shr
movzbw
pushf
pushf
not
mov
sub
ja
or
push
lea
jo
pushf
lea
je
jmp
mov
add
pop
jae
out
mov
test
sahf
sbb
adc
pop
adc
push
lods
in
sub
push
mov
aam
xor
in
or
pop
roll
call
xchg
nop
movsb
inc
sbb
pop
cmp
and
jne
rcl
lea
ja
pushf
movl
push
pusha
mov
lea
jmp
pushf
mov
or
jmp
sub
mov
insb
jmp
cmp
push
push
xor
in
std
fdivrl
mov
out
mov
dec
lcall
jg
aad
stos
scas
push
test
adc
push
test
add
test
test
loopne
cmpsl
ds
inc
cmp
loope
xchg
mov
and
imul
dec
push
push
test
addr16
adc
xchg
or
fs
jne
fcomps
mov
cwtl
notl
jae
movsb
mov
mov
inc
push
bound
cmc
pop
xchg
adc
loopne
jno
xchg
out
or
les
pop
mov
jae
jmp
sub
adc
in
and
pop
lods
sbb
ret
fld
push
cli
fwait
mov
cmpsl
orl
xchg
rclb
fistpll
pop
inc
mov
mov
sbb
mov
pop
cmp
fs
je
clc
cmc
call
cmp
call
sarl
je
subl
sar
or
pop
jecxz
inc
ja
pop
adc
mov
into
in
daa
imul
cmpb
in
pop
lcall
out
jb
cmp
dec
js
flds
mov
out
jno
pop
cmp
ljmp
jmp
sub
cli
xchg
popf
repnz
popa
outsl
repz
fucomp
cli
and
fimuls
sbb
adc
dec
std
dec
movsl
adc
fildl
pop
xlat
mov
add
jb
mov
scas
data16
scas
xor
loopne
pushf
call
push
call
lea
call
pusha
pushf
pushl
adc
jmp
mov
lea
ja
jmp
jmp
add
add
jmp
pushl
popl
call
lea
je
pusha
adc
add
add
bswap
sub
mov
rcr
bsf
shr
pop
inc
cmp
mov
rcl
jmp
pop
add
out
push
and
ficoml
iret
jb
mov
sub
sub
leave
cmp
xchg
cmp
mov
ret
and
mov
pusha
cmp
clc
enter
adc
inc
test
push
jno
mov
rol
in
lock
or
and
repnz
push
cmp
jmp
hlt
inc
out
call
xchg
push
scas
lds
mov
adc
add
fistpll
sbb
push
adc
push
mov
icebp
outsl
mov
mov
pop
mov
call
jne
sbb
ror
shl
bts
mov
test
add
cmp
movzwl
sar
not
mov
push
pushl
add
pushf
mov
stc
movb
test
pusha
jmp
add
push
add
nop
push
add
hlt
pop
add
lea
jb
call
push
call
push
movl
pushf
push
pushf
pushl
popl
pushf
mov
pushl
ret
cmp
call
adc
ret
add
mov
test
push
sub
mov
out
jl
cmc
sbb
push
add
scas
into
jbe
sub
mov
stos
dec
rcll
add
pusha
addr16
mov
lahf
scas
and
shrb
push
mov
jnp
loope,pt
adc
add
push
pushf
call
movsbl
mov
movzbw
pusha
movsbl
lea
pusha
call
mov
call
jmp
pushl
lea
je
push
cmp
pushf
pusha
call
jmp
call
stos
call
call
enter
add
add
lcall
add
adc
add
sbb
jle
adc
jge
sbb
es
add
adc
add
add
add
add
int
xor
cmpb
cltd
sub
mov
sub
fwait
daa
mov
dec
jle
push
out
into
sub
das
cld
test
inc
rcl
xor
push
cwtl
addr16
and
pop
mov
add
faddp
or
adc
lret
out
and
popl
mov
insl
mov
ret
mov
pop
repnz
mov
fwait
jg
into
ficomps
pop
cmp
arpl
lret
pusha
movl
pusha
movl
mov
mov
lea
jmp
cmp
call
test
movb
jmp
jmp
rcl
pushf
mov
call
push
push
mov
pushf
push
movb
mov
pushl
ret
call
stos
outsl
and
jmp
pop
jl
xchg
cmp
shlb
inc
push
les
mov
jae
jg
mov
cmp
sti
push
jg
sbb
lock
in
jecxz
sub
sub
jno
push
add
imul
mov
stos
les
cmc
dec
push
xchg
mov
mov
lcall
cmp
cmp
adc
pop
mov
shll
sub
ljmp
sbb
inc
cmc
sub
aam
shlb
jecxz
add
mov
test
xor
dec
xor
or
lods
testl
cmp
push
add
xor
sbbb
adc
cmp
test
pop
inc
cli
xor
dec
subb
jge
adc
xor
test
loop
mov
pop
mov
movsb
mov
add
adc
loop
pop
xor
movsb
or
pusha
cmp
int
mov
push
xlat
and
add
and
movsl
call
out
mov
out
into
mov
mov
sbb
lea
or
call
mov
es
in
in
mov
iret
outsb
jne
adc
or
ret
cli
cmp
pushf
lea
ja
mov
inc
inc
inc
inc
add
dec
xchg
aam
pusha
aam
or
mov
adc
call
test
bt
jmp
call
gs
fldcw
and
sub
dec
dec
push
stos
int
add
fidivrl
mov
mov
ret
xchg
lea
in
mov
daa
inc
orb
and
scas
ret
push
jbe
push
pop
cmc
insb
adc
mov
inc
pop
out
and
test
test
push
jmp
mov
pushf
lea
jmp
add
clc
bswap
rcr
rcr
mov
test
call
jmp
into
fldl
pop
mov
out
mov
loope
xor
js
jecxz
mulb
frstor
mov
dec
sub
sub
and
mov
jno
in
ficoml
or
scas
js
jmp
hlt
daa
add
int
fildl
aam
int
lods
into
adc
and
jo
cmp
in
sub
imul
xchg
subb
arpl
inc
dec
ljmp
adc
fiaddl
pushf
call
pusha
test
add
movb
lea
je
test
push
stc
stc
add
pushf
pushl
lea
jmp
sahf
mov
cmp
xchg
jo
aam
push
push
pop
xor
orl
leave
jae
aaa
inc
adc
cmp
in
popf
daa
enter
push
push
mov
mov
mov
mov
dec
add
ljmp
push
test
out
shll
out
sub
push
imul
sti
icebp
sub
pop
add
push
push
and
test
sbb
push
or
jbe
adc
in
inc
mov
jmp
stc
std
outsl
xchg
addr16
sbb
mov
sahf
ret
dec
push
das
jmp
push
adc
jmp
mov
fucomp
pop
aaa
out
jle
mov
adcb
imul
cmp
fwait
outsb
pop
adc
jb
andl
sahf
inc
mov
jb
mov
cmp
stos
cmp
ror
inc
push
add
in
outsl
icebp
inc
inc
sub
add
shll
fadd
inc
adc
popf
sarb
cmpsb
fs
fsubrl
fsubr
and
sbb
imul
jb
jmp
xchg
mov
push
cltd
pusha
std
loopne
outsl
clc
xchg
ljmp
jg
xor
js
inc
sub
iret
lcall
popa
sbb
mov
pop
and
pop
xor
jne
call
rcl
pushf
mov
sub
cmc
cmc
push
btc
sbb
shl
bswap
mov
bt
jmp
lea
ja
and
mov
rcl
ror
sub
sar
movzbl
bts
or
add
rol
shl
bswap
mov
dec
rcl
mov
test
push
repnz
mov
movw
pusha
lea
jne
mov
push
lahf
pushf
movb
cwtl
movzbw
setb
cwtl
mov
movsbw
movzbw
lea
call
lea
jne
pusha
cmp
call
sub
clc
cmp
pushf
lea
ja
push
imul
pusha
lea
jmp
push
xchg
mov
push
or
mov
cmp
jge
push
inc
pop
sub
xlat
sbb
inc
lahf
or
xor
sbb
jno
jne
lcall
jnp
aaa
pop
cld
movl
add
jg
mov
outsl
dec
mov
mov
pop
push
and
bound
shll
sbbl
nop
icebp
adc
insl
daa
or
lret
push
popf
jns
push
adc
dec
pop
lock
movsl
push
sahf
dec
mov
or
mov
ret
dec
aas
testb
push
cmpsl
fwait
pop
push
lret
lea
imul
sub
pop
fs
test
stos
mov
pop
or
out
test
xor
outsb
btc
pusha
jg
pop
aaa
push
iret
outsl
test
bt
xor
movb
pusha
lea
jmp
bsr
sub
bsf
cmp
mov
and
rcl
add
sub
ja
add
stc
mov
test
push
mov
stc
test
pushf
push
pusha
lea
je
clc
bt
cmp
sub
bt
call
mov
cmc
call
mov
mov
pushf
mov
mov
pushl
ret
movl
push
lea
jmp
mov
lea
jb
clc
stc
cmc
pushf
cmp
call
sub
call
xor
clc
pushf
jmp
mov
test
call
add
bt
call
push
pusha
lea
jne
shrd
bsf
mov
jmp
or
neg
mov
jmp
sbb
pop
mov
bound
out
sbb
mov
pop
push
xor
cs
xchg
mov
pop
cmc
pop
fwait
inc
push
ljmp
rorb
mov
mov
loopne
fisttps
xchg
cld
fstps
and
cmpsb
jo
push
jecxz
pop
mov
jnp
jp
movsb
in
mov
into
int
ss
scas
push
xchg
jbe
pop
bound
mov
fisubrs
mov
daa
addl
pop
push
cli
adc
sub
in
ja
loope
repnz
adc
pop
mov
aas
cmpsb
aas
in
popa
aam
dec
inc
jmp
ljmp
pop
out
sbb
les
mov
inc
sahf
shlb
shlb
xchg
dec
out
icebp
inc
adc
repz
adc
movzbw
bswap
mov
call
aam
dec
mov
call
cmp
pushf
lea
ja
add
sub
shrd
cmp
add
shl
shl
adc
mov
pushf
call
push
push
lea
ja
pusha
pushf
lea
jb
cmp
bt
cmpb
pushf
lea
jg
jne
xor
or
stc
mov
pushf
stc
bt
add
pusha
pushl
cmc
movb
movzwl
rcl
inc
mov
pushf
call
mov
lret
mov
inc
lods
fimull
negl
inc
inc
adc
add
xor
pop
orb
add
andl
fadd
mov
insb
pop
add
stc
frstor
add
fsts
add
enter
pop
sahf
or
xor
repnz
mov
mov
cmc
popf
clc
in
stc
je
xor
sub
sub
xchg
push
dec
lock
icebp
cltd
and
xlat
jb
adc
mov
mov
xor
stos
and
cmpsl
jae
xchg
mov
add
cltd
inc
mov
test
in
arpl
rol
call
mov
add
dec
mov
rcrl
sub
xchg
pop
fldl
andb
cmc
or
aad
es
xchg
pushf
popf
add
sub
jg
or
adc
inc
xchg
jns
mov
in
push
and
adc
divb
std
imul
fnstenv
lds
stos
push
adc
xchg
mov
adc
andl
loope
adc
adc
xorl
and
add
les
sub
mov
fnop
arpl
lds
push
mov
test
pop
or
inc
ljmp
aaa
jle
stc
jnp
adc
aas
xorl
jl
or
and
mov
pop
addl
aaa
mov
outsb
adc
je
inc
fisttpll
xchg
sbb
mov
data16
mov
pop
jmp
js
sub
adc
test
or
pop
sub
or
lds
jno
addl
sbb
ret
dec
nop
mov
jbe
lcall
sbb
inc
subl
stos
xor
jecxz
mov
sbb
xchg
repnz
sub
ret
dec
cmpsl
add
insb
mov
jnp
and
icebp
insb
sbb
sbb
or
rcll
mov
add
xchg
xor
xchg
mov
or
xchg
rcl
xor
in
adc
mov
adc
cmp
int
pushf
rcrl
mov
mov
in
cmp
mov
ss
push
push
add
xchg
std
pop
xchg
adc
add
cmc
shr
cmp
fcomip
sub
ffreep
add
fnstenv
cmc
in
adc
test
aaa
outsb
pop
scas
shr
adc
je
mov
xchg
fmulp
and
add
mov
es
inc
xchg
mov
sbb
pop
addl
push
or
jl
femms
mov
popf
adc
data16
or
cmp
and
xchg
dec
lds
mov
and
mov
in
mov
ret
sub
rcrl
pop
mov
call
xchg
aaa
dec
jno
sbb
or
iret
xchg
fidivs
dec
dec
imul
ret
xchg
adc
mov
cmp
fisubl
repnz
jg
add
lea
mov
adc
loop
loope
pop
inc
aam
rcrb
test
sub
and
jecxz
fldl
sbb
rcll
xchg
sbb
add
add
adc
push
mov
adc
mov
cltd
rclb
repnz
cmp
movsb
inc
iret
dec
mov
lea
aad
ljmp
adc
pop
imul
pop
and
and
les
mov
lods
mov
dec
mov
clc
push
out
push
fiaddl
call
cmp
pop
repnz
mov
into
fdecstp
fisttps
inc
xchg
xchg
bound
rcrb
mov
lret
push
fisttps
mov
xchg
insb
sbb
inc
push
fdivs
sub
popf
aad
push
mov
shll
mov
and
sbb
or
or
popa
test
or
loope
add
jmp
jo
xor
xor
std
dec
push
leave
jno
sub
in
jo
sub
xchg
inc
and
dec
add
adc
bound
insb
xchg
xchg
mov
int
jg
mov
loope
lock
xor
test
cli
pop
fwait
pop
inc
xlat
sub
pop
xchg
outsl
or
and
pop
xchg
loopne
insb
sub
add
lea
and
sahf
mov
xchg
popa
adc
out
or
fstps
xor
pop
jp
xchg
ror
mov
mov
mov
in
lds
ljmp
and
add
adc
cltd
adc
clc
cwtl
cmp
lcall
xor
push
mov
jg
add
loopne
mov
aas
sbb
push
inc
jns
shrl
cwtl
insb
lea
jb
lock
and
pop
gs
out
dec
call
sahf
mov
or
daa
push
mov
pop
shlb
sub
ja
jge
add
lea
cwtl
leave
lret
push
adc
scas
arpl
int3
popf
in
sbb
jg
mov
push
jae
push
movsl
in
push
sub
les
lods
mov
jmp
ret
push
or
mov
add
mov
jecxz
dec
jecxz
int3
in
loop
xor
xor
iret
mov
pop
mov
sbb
dec
js
loopne
pop
mov
or
adc
fldl
add
push
enter
in
idivb
mov
dec
sti
or
mov
je
mov
cltd
jae
inc
push
ja
mov
loopne
lea
sti
xchg
pop
dec
popf
inc
pop
in
lds
dec
xchg
fldt
add
loope
hlt
or
dec
and
icebp
ret
dec
ret
out
call
adc
mov
imul
sbbb
std
sahf
push
in
add
mov
lock
gs
loopne
mov
stc
call
xchg
or
and
add
inc
add
leave
mov
iret
inc
xor
and
clc
adc
jl
add
icebp
roll
xchg
pop
les
push
push
sbb
or
fnsave
xor
subl
lret
inc
movb
pop
mov
lds
push
push
cltd
in
mov
lret
std
xchg
xlat
sub
loop
sub
cwtl
adc
lods
add
fldln2
cwtl
cmpl
inc
addb
arpl
xor
or
sub
fs
das
cmpb
andl
add
adc
adc
sbb
mov
mov
mov
scas
lret
lock
sub
inc
dec
aas
icebp
push
fmul
xchg
add
repz
mov
xchg
test
js
frstor
pushf
arpl
dec
xchg
repnz
or
sub
or
adc
subl
jmp
add
jb
pop
in
js
pop
in
in
mov
adc
mov
adc
add
mov
xchg
mov
lret
fbld
or
shl
scas
mov
ficoml
in
mov
push
add
gs
adc
pop
cmpsb
jno
or
les
and
xchg
inc
out
insl
dec
decl
popf
imul
push
xchg
shlb
test
in
lock
decl
lret
in
mov
dec
push
es
pop
daa
fisttpl
jecxz
inc
sbb
int
push
add
push
loope
mov
inc
inc
and
cmp
and
test
scas
lret
adc
fldcw
pushf
lds
mov
jbe
xor
rcr
dec
sbb
sub
cs
adc
and
stos
or
jp
pop
sub
pop
fsubrs
inc
daa
aaa
jnp
std
pop
adc
adc
fstpl
xchg
push
insb
cltd
or
lar
aaa
inc
sub
movsb
fs
mov
dec
xchg
mov
or
movb
inc
fldl
or
mov
out
clc
cmp
sbb
jne
repz
cmp
push
stc
ret
insl
and
add
and
test
dec
sub
jae
repnz
imul
insl
push
push
xor
shrb
nop
cld
out
jb
dec
rclb
iret
inc
movsl
or
sti
ret
add
fists
and
daa
sti
dec
cmc
inc
adc
or
jmp
test
mov
and
jl
cwtl
inc
sub
push
push
cmp
mov
sub
mov
shrl
mov
add
int
loope
lea
lock
lods
das
push
popf
add
mov
mov
mov
sti
add
push
inc
add
pop
add
ror
movsb
test
out
decb
and
mov
jmp
test
sbb
sbb
cmp
xchg
adc
or
cmp
nop
inc
enter
adc
loope
push
sbb
add
rorl
mov
hlt
loopne
push
mov
rcrl
ljmp
fstps
sub
repz
push
out
or
add
pop
xchg
or
xor
or
movb
xor
inc
aam
subl
sub
adc
addr16
jnp
js
push
test
scas
shlb
gs
sarl
leave
testl
xor
jge
adc
rorl
mov
rorl
lahf
push
xor
lret
xor
sti
add
in
xchg
sub
add
inc
ret
vmovlps
test
push
shrl
aad
iret
fs
popa
cmc
or
add
fistps
es
dec
inc
push
lock
add
arpl
mov
je
add
lds
cmp
cltd
push
inc
rorb
xchg
xor
jne
andb
add
or
pop
cmpsb
dec
push
xchg
in
inc
sti
add
lret
cmp
sti
xlat
out
and
sub
xor
aaa
in
mov
or
add
out
test
fcoms
add
lcall
mov
pop
test
or
pop
cmp
sbb
sbb
enter
jp
jle
dec
out
jbe
lds
ljmp
mov
loop
testl
fs
mov
adc
sbb
cmc
inc
xchg
das
jge
sub
movsb
cmp
int3
int3
sub
adc
or
xchg
xchg
fs
bswap
pop
sbb
lcall
jle
out
xorb
roll
aas
ss
lods
and
subl
add
jae
dec
adcl
rcll
rclb
outsb
pop
mov
lret
jb
add
mov
mov
and
sbbl
leave
rolb
arpl
and
sub
xchg
ss
pop
iret
jo
ja
sub
and
push
in
dec
push
subl
lods
adc
add
in
push
mov
xchg
jge
xor
jl
fstps
call
aas
fsub
pop
push
lcall
adc
roll
xchg
sahf
test
pop
notl
adc
sbb
popa
xor
clc
dec
adc
lock
sbb
test
dec
enter
jae
aaa
lea
pusha
addr16
inc
ret
loope
or
iret
cmp
sub
aam
add
and
dec
scas
in
mov
xchg
mov
adc
jmp
sbb
pusha
fsts
sub
adc
xchg
stc
adc
adc
clc
roll
push
in
xlat
in
aad
or
jecxz
rolb
add
addl
addr16
je
push
dec
dec
and
push
sbb
enter
in
icebp
ss
pusha
pop
and
push
insb
in
add
hlt
iret
jge
adc
or
icebp
in
xchg
and
push
push
mov
mov
mov
dec
jo
adc
inc
fiaddl
push
push
cwtl
mov
push
mov
add
push
mov
clc
fs
xchg
js
push
adc
fidivrl
shlb
cmpsb
fnsave
shll
mov
jb,pn
mov
insb
jle
sti
icebp
xchg
nop
jno
and
dec
adc
movsl
je
lea
in
stos
or
hlt
lods
aam
loopne
rcll
js
pop
rolb
ljmp
mov
xorl
pop
or
or
xchg
cli
lret
sub
and
pop
movsb
sub
imul
inc
leave
sbbl
add
pushf
add
adc
and
mov
mov
push
cmpsl
add
mov
pop
insb
test
add
lea
ror
lcall
stos
pop
ffreep
in
inc
xor
mov
mov
movl
lods
sub
xchg
arpl
or
add
push
add
adc
scas
les
mov
push
in
pop
inc
cmp
and
adc
lret
dec
es
in
test
xchg
mov
or
and
add
add
push
int
add
mov
adc
sub
imul
pop
mov
outsl
insb
sahf
int3
lea
test
or
insl
pop
jg
cltd
jno
adc
clc
xor
fsts
ljmp
or
into
test
adc
push
test
inc
push
in
sbb
clc
jmp
daa
test
subl
rorb
jecxz
lds
call
xchg
pop
jg
insl
lret
add
push
or
icebp
or
mov
nop
fisttps
push
lret
fisttpl
lods
fisubrl
dec
sbb
in
popf
cs
add
sahf
sbb
jmp
mov
sbb
jnp
lea
lret
and
push
je
mov
mov
fsub
clc
mov
pop
je
out
add
ror
sbb
or
inc
mov
xchg
cltd
push
mov
adc
xchg
mov
dec
xchg
out
inc
test
xchg
inc
cmp
cmc
pop
ja
clc
sbb
push
fucom
xchg
cld
shll
xor
adc
push
jl
pop
adc
ljmp
test
xor
les
sbb
lds
add
mov
pusha
shrb
call
add
ja
es
add
or
lret
and
movsl
cmpsl
push
loope
jo
out
jmp
pop
movnti
aam
nop
add
ficoml
fucomip
loop
dec
add
jmp
add
cmpsl
ds
jg
add
leave
aaa
mov
sbb
sbb
je
cwtl
in
cli
dec
daa
dec
in
in
test
mov
mov
dec
push
aam
cmp
and
and
adc
dec
mov
repz
add
cwtl
adc
enter
mov
pop
hlt
add
nop
and
fcmovbe
xorl
iret
imul
fistpll
push
add
into
dec
xchg
or
nop
cmp
push
jle
dec
dec
aad
pushf
leave
lds
imull
mov
in
add
mov
xchg
aad
loope
popa
in
sahf
add
mov
or
int
repz
dec
shll
mov
js
cmc
daa
in
or
std
push
out
fcompl
hlt
out
js
dec
popa
stc
push
sahf
fimull
cltd
and
sub
and
loope
data16
fisubs
sub
and
mov
xchg
leave
das
add
or
out
pop
insb
cmp
mov
jne
lahf
dec
mov
add
in
sbb
cld
sub
fcompl
and
jp
imul
and
data16
fisubs
cmp
ja
shrb
aaa
popa
sbb
add
ja
pop
aad
rorb
dec
cmp
cmp
ret
inc
rcll
xchg
ss
cli
cmpsb
mov
insl
std
add
xorl
adc
outsl
loope
or
or
cli
aam
les
movsl
popf
add
popf
push
mov
mov
lret
mov
in
jmp
push
mov
pop
push
lods
rorb
ret
push
test
add
subl
push
lock
xchg
div
pop
das
inc
push
and
ror
arpl
lods
and
xchg
insb
pop
pop
sbbl
insl
pop
xchg
enter
xchg
add
mov
leave
sbb
dec
adc
adc
ja
or
dec
lret
sbbb
add
cli
sbb
add
sbb
fnstenv
popf
loope
ljmp
xor
adc
leave
loop
sarl
out
or
hlt
rorb
test
mov
mov
lea
imul
add
mov
sbb
jg
inc
or
add
ret
rol
loope
sahf
lcall
lcall
push
lret
sbb
and
xor
loopne
push
sub
lock
pop
icebp
loope
dec
xor
mov
mov
xor
fcmove
xor
pop
push
jg
or
cmp
or
xchg
push
push
mov
mov
popl
pop
cld
or
subb
insb
xchg
shl
sti
fmull
push
add
shr
scas
int3
fwait
or
and
or
push
test
arpl
mov
movsl
or
cld
inc
mov
out
push
pop
jg
or
cmp
cs
cs
xchg
test
xchg
xchg
loop
int
addl
lds
rcll
stos
in
outsb
lret
push
je
enter
or
sub
add
mov
mov
xchg
push
or
or
push
push
shrl
xchg
push
aam
dec
mov
in
mov
dec
xchg
mov
sar
push
lret
or
or
les
xchg
or
dec
jmp
add
iret
int3
pop
mov
movb
mov
xchg
push
mov
mov
mov
subb
enter
ret
les
clc
add
enter
inc
sbb
subl
enter
aad
push
inc
fmuls
xor
pop
xchg
stos
pushf
ret
fwait
push
roll
mov
dec
leave
add
aam
or
mov
lds
inc
clc
xchg
inc
or
mov
dec
add
push
orl
pop
pushf
les
sbb
fwait
or
lret
add
subl
or
inc
fildl
adc
in
xchg
test
aam
cwtl
or
mov
daa
sbb
test
inc
fwait
addb
test
into
xchg
int
or
pop
lds
aad
jnp
xchg
in
xchg
or
roll
cld
xor
xchg
fnstcw
push
add
or
popa
add
es
fs
in
dec
xchg
jecxz
adc
mov
subl
ljmp
imul
in
adc
sub
cli
push
lods
xor
lahf
jmp
cmpsb
shrl
aad
sarb
sbb
lea
add
cmpsb
daa
add
or
je
xchg
shrb
cmpl
dec
mov
lret
mov
mov
sti
rolb
jns
mov
lods
sub
inc
roll
loopne
andb
js
ret
lds
mov
js
inc
inc
popf
popf
or
sahf
sub
out
test
ss
fs
shrb
rorl
mov
push
sbb
pusha
xchg
mov
add
cmpsb
add
sub
pop
xchg
xor
shll
mov
int3
sarl
or
mov
inc
ficoml
mov
mov
jo
std
add
cmpsb
mov
push
test
ja
pop
nop
dec
shlb
xchg
mov
mov
popl
xchg
stc
and
test
mov
pusha
pop
dec
sub
test
sbbb
push
adc
pop
inc
rclb
cmc
in
add
call
int
out
xchg
addr16
stos
xchg
add
pop
shrl
sahf
mov
add
adc
in
sysret
leave
cmp
sti
xor
fisttps
ss
mov
or
add
nop
sub
fstl
scas
mov
pop
mov
cmp
ud0
cltd
sub
push
add
xor
out
or
pop
jmp
or
add
arpl
adc
add
clc
pushf
sub
dec
orl
add
lret
cmpsb
aad
or
fldenv
out
pop
push
cmp
lcall
incb
adc
hlt
lea
xchg
lods
test
loopne
aam
and
xchg
das
sub
add
ds
lea
push
pop
leave
in
call
add
int
adc
fstps
shr
inc
push
mov
xchg
cwtl
cli
testb
dec
repnz
in
adc
xor
ror
dec
fistps
lds
push
mov
add
mov
jge
testl
jb
lret
push
popf
lahf
adc
repz
xor
cmp
sbb
lock
push
nop
mov
fisttpll
jbe
xchg
call
inc
cmp
cmpsb
das
rol
jns
mov
scas
movb
in
fisubs
cld
xor
add
aaa
stc
clc
dec
push
hlt
addl
mov
or
push
add
mov
push
shll
pusha
test
adc
pushf
sbb
orb
adc
inc
add
dec
adc
add
push
rorl
int
push
adcl
mov
or
dec
stos
inc
fmul
cwtl
sarl
test
dec
or
lret
ljmp
cmp
hlt
xlat
or
jp
lret
outsb
enter
push
add
loopne
in
mov
adc
movsb
fsts
sbb
push
stos
stos
inc
dec
aaa
loopne
push
mov
push
ja
lods
mov
cld
int
loope
dec
push
xor
sahf
jne
pop
daa
mov
and
push
and
stos
ret
out
sub
xor
cmpsl
leave
inc
add
mov
jae
push
inc
shlb
push
inc
es
test
rorb
adc
dec
pop
sbb
mov
hlt
xor
mov
xor
leave
lods
add
xchg
sbb
adc
cwtl
mov
gs
or
sahf
movsl
sbb
mov
lock
es
or
loopne
loopne
push
add
add
pop
fistl
in
dec
push
pop
es
dec
cli
pop
mov
es
inc
pop
test
inc
sahf
push
call
adc
push
sub
clc
dec
enter
cmp
call
add
es
mov
cmp
fwait
das
and
clc
xchg
mov
xchg
push
jbe
loopne
test
nop
bound
int3
stc
mov
pushf
cmpsl
testl
push
nop
and
mov
jp
ja
add
mov
clc
aaa
sbb
mov
mov
sti
sbbb
push
loopne
cwtl
inc
shll
es
lods
sbb
xchg
push
jecxz
mov
stc
ror
in
add
adc
mov
push
mov
movsb
fs
clc
inc
inc
outsb
je
mov
enter
add
ljmp
or
push
cmp
shll
sbb
push
iret
jbe
inc
sbb
or
fnstcw
mov
jge
xchg
andl
sbb
imul
dec
xchg
cmp
mov
int3
pop
jmp
inc
xchg
fbld
xchg
cli
repnz
loopne
mov
and
jo
out
inc
in
lds
xor
push
push
push
push
repz
mov
dec
iret
inc
adcl
fmuls
adc
inc
and
int
jp
sbb
xchg
or
dec
mov
sub
fisttps
and
jecxz
mov
and
in
mov
scas
lock
add
and
adc
inc
add
sarb
cltd
rcrb
or
xor
mov
mov
nopl
jns
or
pusha
cmp
pop
repnz
jo
sub
pop
mov
movsb
in
add
fdivl
adc
mov
pop
jge
cli
data16
mov
addr16
inc
cmp
loope
or
popa
test
nop
mov
adc
pop
xor
or
out
push
lret
mov
jmp
lock
mov
mov
adc
int
incb
sbb
orl
mov
xchg
cmpsb
movsl
adc
or
dec
bound
lds
pop
dec
mov
xchg
xor
xchg
mov
clc
mov
sub
pop
adc
or
xchg
or
pop
jmp
pushf
sarb
push
jb
mov
cwtl
add
notl
inc
fsubrs
cmp
jp
sbb
lret
aas
cld
dec
inc
aas
cmp
hlt
add
loop
mov
out
xchg
shl
lea
ret
xor
rorl
or
in
mov
and
or
mov
dec
and
jecxz
sbb
sbb
adcl
aaa
adc
je
rorb
dec
inc
lds
xor
loope
adc
xchg
add
fnsave
outsl
adc
mov
lods
add
sbb
in
test
pop
rorl
xor
jns
xchg
adc
or
out
scas
inc
adc
movsl
push
or
sbb
mov
pushf
add
jle
mov
pop
call
push
enter
test
jecxz
loop
inc
cli
out
les
sub
and
adc
sbbl
pop
andw
scas
in
rorl
xchg
push
add
pop
in
inc
push
mov
int
mov
xchg
xchg
mov
or
jg
pop
pop
pushf
in
mov
adc
add
mov
jge
inc
mov
adc
out
rcll
pop
jge
dec
cs
adc
inc
mov
loopne
and
xchg
add
mov
in
arpl
rcll
add
mov
push
ret
push
out
or
mov
shlb
and
addl
or
in
push
push
fsub
scas
add
mov
shlb
hlt
dec
addr16
movsl
push
pop
adc
push
in
pop
scas
ja
mov
insb
jb
jecxz
mov
xchg
sbb
ret
dec
ficomps
cvtps2pi
ret
ljmp
xorb
and
loopne
jp
sub
xchg
xorb
fdivrl
mov
jg
mov
xchg
cwtl
mov
cwtl
xor
iret
or
and
cwtl
popa
fmull
idivb
mov
test
loopne
dec
mov
inc
fildl
push
xchg
sub
cmpb
in
stos
xchg
and
loope
cli
push
xchg
push
push
jno
adcb
outsl
push
adc
mov
sub
add
pop
dec
jge
in
jns
gs
xor
cmpsb
pop
in
xchg
and
in
mov
inc
sbb
repnz
rolb
pop
lea
rol
add
jmp
xor
fnstcw
and
add
mov
pushw
sub
cmp
aas
push
dec
add
cs
mov
xchg
xchg
iret
shll
inc
hlt
fstl
dec
sub
add
arpl
test
dec
push
and
adc
pop
in
addb
sub
inc
add
cli
or
jo
pop
mov
pop
into
mov
pop
dec
xor
mov
mov
sub
push
test
adc
aaa
out
or
and
pop
push
mov
mov
inc
rolb
add
pop
push
and
pop
add
add
or
mov
cmp
loope
add
std
orl
mov
fs
and
push
les
adc
fstpl
loop
arpl
cltd
sbb
fwait
add
mov
or
xchg
mov
call
fcomps
nop
inc
push
shrl
lock
dec
repnz
pushf
cmpsb
or
les
subb
int
in
stc
sar
jmp
xor
add
test
add
dec
test
adc
fwait
aaa
into
repz
jg
ss
sub
sahf
jp
es
sti
call
jcxz
mov
mov
mov
mov
jns
xchg
cmpsl
stos
ja
int
int3
or
mov
pop
inc
xchg
std
fcompl
push
in
add
lock
adc
mulb
out
add
roll
pop
fadds
xor
ret
lahf
ss
addr16
xchg
add
dec
loope
mov
addb
loope
mov
cmpsl
in
out
cli
mov
cltd
push
mov
xlat
mov
mov
cltd
sbb
and
dec
pop
xchg
filds
sub
inc
xchg
push
dec
xchg
scas
adc
or
test
cmp
xor
mov
xchg
loop
or
das
add
add
cmpsl
gs
fidivrl
mov
add
mov
call
test
or
das
add
cltd
out
mov
aaa
das
xor
out
cwtl
adc
lea
jl
add
loop
movsl
cmpl
pusha
or
pushf
and
add
pop
inc
mov
inc
mov
dec
jo
xlat
fwait
int3
loopne
adc
push
inc
repz
dec
nop
call
lock
inc
es
addr16
inc
icebp
add
jno
jae
push
punpckhbw
lock
xor
sub
test
lods
loopne
sub
clc
adc
pop
pop
xchg
mov
stc
mov
icebp
int
inc
aam
daa
cmpsl
add
mov
mov
stos
cmpl
xor
mov
into
jb
inc
ret
repnz
aaa
movsb
and
jge
or
fwait
xor
cmpsb
cmpsl
daa
loopne
pop
popa
out
int
cmpsb
lock
and
jne
scas
mov
push
pop
cmc
mov
inc
xchg
rcrl
cmp
sbb
xchg
add
les
add
inc
xor
das
out
test
push
adc
cmp
add
lods
int3
out
add
sbb
outsb
sbb
popf
xchg
add
and
test
xchg
mov
ret
roll
jmp
inc
mov
sarl
cmc
xor
out
test
out
int3
sbb
aam
stos
and
imul
inc
subl
xchg
incb
test
iret
xor
addl
ret
adcl
les
incl
fs
aaa
or
dec
fwait
int3
dec
popf
out
push
call
adcl
roll
mov
addb
rcll
push
inc
pushf
pop
mov
inc
lea
dec
and
add
sbbl
add
mov
test
inc
test
test
jge
jmp
testb
subl
repz
test
or
lret
daa
dec
aad
repz
mov
xchg
js
xchg
mov
pop
sar
movl
mov
add
lret
xlat
push
inc
aad
movl
int
inc
imul
dec
mov
jmp
inc
fmuls
subl
or
add
out
into
dec
lea
pop
mov
adcb
push
dec
leave
or
or
insb
or
lret
dec
mov
leave
pop
jbe
data16
sbb
les
xchg
add
test
or
push
mov
add
inc
mov
leave
add
or
adc
lret
or
jg
dec
ret
lret
dec
in
dec
cld
mov
adc
sub
mov
or
hlt
xor
add
inc
jp
jns
xor
dec
stos
test
orl
cli
cmp
int
or
out
aad
xlat
push
xchg
mov
sbb
loope
mov
test
aaa
jns
xchg
addr16
jmp
or
adc
popa
sub
add
daa
mov
push
sub
fidivrl
shr
sti
adcl
inc
inc
or
or
mulb
xchg
dec
scas
push
jbe
inc
aad
rcr
xor
lds
inc
enter
mov
insb
insl
mov
sbb
sub
jg
cmp
in
pushf
and
pop
rolb
adc
fadds
xchg
or
xor
inc
push
iret
sub
cltd
or
push
dec
fwait
out
mov
push
sub
stos
shrl
incb
sub
loop
jbe
cmp
sub
lcall
adcl
jmp
dec
fwait
sbb
fildll
sbb
mov
add
sbb
xor
imul
add
test
add
pop
fs
test
fmull
js
mov
test
jb
lods
or
pop
std
add
pop
xchg
enter
jecxz
adc
in
inc
sub
lret
test
dec
bound
mov
mov
cmc
popf
adc
push
ljmp
stc
roll
sbbb
fsts
test
lock
leave
in
outsl
icebp
pop
shl
adc
and
pushf
dec
xlat
je
jl
lret
pop
push
es
fistps
sahf
cltd
fmuls
jmp
fcoms
ret
sbb
xchg
and
insb
out
mov
dec
jle
lahf
aaa
shrl
xchg
std
xor
add
pop
sar
hlt
in
in
sbb
je
and
in
adc
ret
push
adc
cltd
push
mov
outsl
lret
daa
jecxz
push
ret
xchg
popf
xor
and
adc
xchg
xor
mov
jp
pop
xor
adc
addr16
lret
lds
mov
sbbl
rorl
adc
std
sub
cmp
xchg
jno
fstpl
mov
or
xchg
push
ss
rorl
aad
lcall
lock
data16
pusha
push
or
sbb
jnp
sub
jo
xor
rorb
or
adc
mov
push
inc
mov
in
add
stos
loope
shlb
stos
test
icebp
bound
adc
lock
push
and
mov
shrb
sub
in
sub
xchg
xlat
fbld
inc
add
inc
ss
frstor
rcrb
comiss
mov
pop
std
fisttps
mov
sbb
mov
sbb
and
addr16
mov
test
fimuls
cmp
xlat
or
xchg
pop
inc
push
xchg
xor
pop
imul
xor
sahf
subl
ss
push
in
lea
or
dec
xor
popa
movsb
adc
mov
push
add
jle
or
mov
daa
cmpsb
jp
cmp
and
std
jmp
sti
lahf
adc
outsl
pop
fidivs
dec
cmp
mov
sub
jl
xchg
xchg
dec
adc
xor
in
cmp
or
mov
hlt
inc
xchg
sub
jl
push
sub
xchg
xchg
andl
add
add
dec
fnstcw
and
das
push
push
rcrb
mov
mov
adc
jnp
imul
push
andl
rorb
aad
daa
add
insl
push
in
ret
enter
int
pop
dec
ja
lret
jmp
fcmovu
mov
jmp
ja
test
add
data16
xchg
repnz
jle
out
lret
and
stc
lret
add
adc
int3
shl
xor
push
lock
loop
push
pop
xor
xor
rcll
in
mov
cmpb
xchg
xor
or
outsl
pop
fisubrs
xlat
or
out
bound
and
popa
xchg
jle
icebp
or
adc
jae
xchg
jmp
xchg
cmc
adc
lahf
jge
test
add
fdiv
scas
insl
jo
or
test
or
push
add
or
or
arpl
pop
and
into
call
aam
int
or
cmpb
in
stc
fldl
jne
pop
movsb
mov
add
jmp
fidivl
scas
sub
pushf
in
shll
testl
add
adc
xchg
pop
ret
je
cmpl
xchg
add
repz
es
movsb
inc
movsl
jae
cmpl
lea
jmp
int
xchg
mov
fwait
and
mov
or
addl
ret
xlat
sub
lock
rcrl
leave
outsl
call
and
jb
inc
sbb
or
and
pop
pop
mov
js
ss
cli
push
ret
rcrl
xchg
cltd
xchg
insb
sbbl
or
add
adc
push
xchg
pop
push
sahf
je
cmp
enter
dec
rcll
cld
loope
test
lods
cmp
lret
sbb
cld
and
dec
aad
aaa
mov
jl
xchg
xchg
pop
and
fcomip
sti
int
sbb
jb
inc
jle
add
nop
mov
jcxz
icebp
inc
loop
mov
mov
dec
and
pop
addr16
pop
cltd
inc
int3
sub
pop
sbb
xor
out
xchg
jo
xor
pop
adc
dec
add
bound
add
loop
popl
call
popa
cld
sub
mov
pusha
pop
sub
lea
xor
pop
xchg
sub
filds
xchg
mov
mov
mov
pusha
xchg
mov
sub
loope
f2xm1
ret
call
xor
and
add
xchg
dec
cltd
inc
rcrl
paddsw
adc
adc
and
add
hlt
mov
rcrb
mov
leave
push
sbb
jecxz
arpl
mov
fwait
push
add
xor
aas
push
lea
bnd
movsl
add
adc
hlt
and
jo
daa
nop
pushf
xchg
mov
xchg
add
adcl
rorl
add
ljmp
xchg
popf
lock
cmp
mov
aas
out
sub
jg
ljmp
inc
arpl
sub
dec
lock
mov
sub
and
pop
mov
mov
pop
dec
xlat
inc
add
leave
lret
mov
add
ja
scas
jns
rorl
mov
ret
ret
pop
mov
or
and
pop
pop
xchg
or
fmuls
dec
mov
mov
andl
push
call
and
pop
loope
mov
sbb
or
in
or
cltd
adc
add
daa
jecxz
rcrb
lock
pusha
xchg
pop
movsb
sbb
xor
rolb
pop
adc
movsl
addr16
sbb
int
mov
in
test
fildl
addb
lcall
adc
fsubl
lds
xchg
pop
sahf
push
in
cmp
or
out
fucom
xor
lcall
ret
sub
lods
mov
mov
add
dec
cmp
dec
xchg
je
repz
push
and
push
shl
notl
inc
mov
stos
in
jl
jecxz
mov
or
cmpl
fsubrl
in
sub
adc
or
adc
dec
daa
movsb
jp
fdiv
dec
fnsave
scas
lds
repz
sub
loope
add
dec
jge
cmp
push
sub
add
jle
addl
xor
jnp
dec
repz
cs
hlt
xchg
cwtl
add
jge
add
pop
adc
adc
and
aaa
mov
sub
jbe
jl
test
sbb
xchg
push
mov
xchg
add
push
lcall
pop
repz
in
inc
mov
loope
or
in
xor
cmpxchg
fldenv
dec
jnp
pushf
popf
fucom
movsl
adc
test
arpl
jmp
xchg
xchg
add
add
jmp
dec
out
add
inc
mov
fs
mov
popf
fdiv
xchg
ljmp
mov
sti
divl
push
incl
test
mov
mov
adc
cmp
dec
clc
in
aaa
loopne
aad
call
cmpsb
jmp
ds
inc
mov
sbb
xchg
add
lock
shr
out
ja
int
mov
hlt
iret
fistpll
stos
jae
movsl
in
xchg
inc
sub
dec
pop
fistps
adc
stc
mov
jb
into
mov
adc
push
iret
ds
loopne
in
stc
aam
inc
pop
pop
dec
cmp
cmp
and
cltd
and
sbb
rcrl
imul
ret
inc
cli
shl
and
lock
pop
addr16
pop
out
andl
repnz
test
pop
mov
inc
dec
daa
dec
pop
rcrl
insl
daa
jecxz
clc
hlt
jmp
cwtl
jmp
data16
leave
sbb
movsl
add
xchg
jb
js
inc
shl
mov
aaa
xchg
in
adc
cmp
hlt
ljmp
mov
dec
mov
in
mov
cmp
mov
push
push
aad
jno
adc
or
add
jo
inc
movb
xchg
add
push
rorl
xor
insb
outsb
std
stc
push
std
loopne
int3
push
jne
loopne
and
xchg
jnp
jp
notl
cmp
xchg
sub
loop
repz
and
mov
and
mov
popf
add
sarl
dec
test
pop
lea
inc
pop
outsl
lea
xor
addl
mov
mov
cmp
lds
xchg
sti
push
xor
mov
push
xchg
inc
pop
lods
mov
je
adc
jecxz
leave
rcrb
xor
divb
inc
xor
lea
push
in
lds
xchg
inc
fiaddl
and
mov
movsl
xchg
daa
loopne
cmp
loope
and
xchg
popa
scas
andl
test
push
lds
mov
test
mov
loope
lods
sub
popa
jecxz
xchg
test
xchg
scas
shr
lds
mov
or
js
test
mov
or
fisttps
xchg
xchg
push
lret
xchg
push
sbb
js
pusha
push
test
fsubs
dec
fisttps
mov
mov
addb
aas
sbb
adc
ret
and
je
jp
movsl
pop
mov
sti
out
mov
ftst
daa
call
sub
or
jnp
ss
cmc
xchg
cltd
push
mov
mov
mov
jo
push
adc
add
cltd
pop
xchg
or
es
loopne
pusha
pushf
jbe
add
lret
adcl
in
sahf
cli
mov
sbb
sbb
mov
iret
lods
mov
mov
imull
cmp
lds
fwait
shll
push
shll
aad
xchg
fldl
aam
aam
mov
in
xor
mov
mov
mov
outsb
cmpsl
test
stc
and
push
aad
insl
and
and
loopne
mov
cmp
xor
mov
and
xor
xchg
pop
test
inc
xor
daa
push
xchg
xlat
js
fcos
int3
fndisi(8087
leave
rolb
aaa
sbb
scas
sbb
or
loopne
test
pop
xchg
fimuls
inc
clc
and
xor
xchg
subb
push
lea
sti
xchg
cmp
and
mov
scas
nop
mov
call
xor
xchg
fcoml
test
call
fiadds
stc
inc
inc
mov
and
xchg
adc
mov
and
mov
push
or
lods
push
aad
lods
xchg
and
rol
cmp
out
lret
cmp
adc
add
xchg
rcr
mov
pop
and
addl
mov
mov
fwait
add
push
cmp
push
repnz
aam
mov
jbe
icebp
add
dec
shrl
rorb
daa
ja
push
lcall
pop
adc
pop
mov
sbb
out
imul
mov
ficomps
dec
adc
stc
cmpsb
mov
or
aas
fistps
je
push
mov
clc
int
mov
xchg
push
mov
mov
clc
dec
sub
sub
cmp
nop
addl
push
adc
add
and
aam
push
sub
sub
ret
or
int3
mov
out
addl
add
adc
cltd
cmpsb
test
insl
aad
in
out
lcall
or
adc
xchg
mov
add
push
adc
stc
xor
sbb
mov
sbb
je
cld
xor
mov
push
nop
xchg
jle
ror
jg
and
sbbb
mov
push
add
pop
add
jo
and
xchg
lods
and
xchg
add
scas
cmp
lods
in
mov
rolb
stos
arpl
mov
mov
mov
mov
adc
outsb
lret
popa
push
js
int
loope
add
or
nop
insl
int3
cmp
idiv
scas
inc
xchg
loop
push
xchg
ljmp
inc
pop
mov
rclb
dec
cltd
add
push
push
push
cld
xor
shll
jnp
shl
int
jle
adc
push
call
stos
cld
adc
stc
fldl
xchg
insl
andl
lret
cmpsb
or
jl
lea
leave
add
add
jb
fidivl
sub
out
inc
pop
sti
testl
notl
push
rcrl
das
in
popf
in
repnz
push
xchg
or
sbb
lock
add
mov
xchg
loopne
dec
cmpsb
jmp
adc
in
mov
add
fcomp
std
xor
or
aaa
mov
mov
xchg
dec
mov
ret
sbb
adc
dec
imul
add
adc
sbb
inc
test
sub
aad
inc
jmp
and
out
and
popf
and
mov
stos
test
mov
mov
xchg
jns
mov
mov
add
xor
test
loop
mov
into
lret
add
jno
in
jmp
pop
sbb
bound
dec
in
push
jns
jmp
loopne
or
sub
and
lahf
jge
es
pop
or
mull
dec
int
fmull
cld
push
pop
or
inc
jmp
adc
rolb
mov
and
cmp
pop
add
pop
and
jp
ret
flds
cwtl
fxch
dec
out
nop
add
sub
out
ljmp
mov
adc
adc
pop
js
mov
add
inc
ret
mov
pusha
pop
ret
xchg
loope
lock
andl
and
jl
ss
scas
in
lret
adc
add
loopne
jnp
ret
jnp
xor
sbb
subl
cltd
fisttpll
inc
stc
das
les
into
push
ja
push
xlat
pusha
cmp
cmp
xchg
out
cmpsl
js
jg
xorl
lock
cmp
ljmp
sbbb
fistpll
loope
push
shll
xchg
adc
xchg
push
shll
dec
test
dec
cmp
xor
inc
cmpsb
out
mov
outsl
inc
add
xor
jb
ss
mov
mov
pop
adc
xchg
mov
add
mov
cmp
dec
aas
outsl
xorb
add
mov
sbb
jg
test
shlb
sub
add
jmp
loop
xchg
into
je
push
add
bound
mov
add
xchg
rorl
cmpsb
push
mov
or
cwtl
mov
dec
add
pop
sub
mov
sbb
xchg
xchg
pop
popf
adc
mov
enter
fmull
cmpsb
or
jno
inc
js
test
pop
xor
adc
adc
in
nop
les
mov
add
and
fcomip
js
jns
shl
add
jmp
sub
adc
inc
mov
iret
loope
popa
in
subl
cmp
dec
xchg
mov
into
shlb
xor
sub
inc
xchg
int
loope
push
push
xor
adc
sub
mov
enter
dec
add
int
inc
aad
add
dec
pop
add
cmova
mov
or
outsb
hlt
xor
lret
push
ss
sub
popl
adc
bound
add
loop
inc
adc
out
pusha
jl
mov
fsts
mov
outsb
jbe
xchg
fisttps
roll
xlat
cmpsb
ret
je
mov
cmpsl
push
in
xchg
push
in
aam
sub
into
sbb
jp
pushf
cwtl
pop
jbe
mov
or
mov
add
push
dec
and
mov
insb
incl
cmc
sbb
subl
or
xchg
pop
pop
repnz
lods
mov
push
int
clc
add
das
ds
rclb
stos
xchg
xor
jge
enter
pop
add
sbbl
mov
enter
xchg
and
rorl
mov
das
roll
sbb
adc
in
push
lret
add
xchg
idiv
loope
stos
fcompl
pop
cmp
xchg
cwtl
or
inc
imul
or
jecxz
repnz
lds
xor
in
movsb
xchg
mov
cli
jg
xchg
in
xchg
cmpsb
pop
and
jp
xlat
sbb
les
movsb
cwtl
and
cmpsb
push
lret
and
add
xchg
into
cld
cltd
insl
xor
jne
gs
js
rcrb
test
push
mov
scas
jbe
cld
int
repnz
push
dec
pop
inc
sbb
push
in
rcrb
lea
aam
and
loopne
pushf
push
lods
outsl
or
add
sub
shlb
int
rol
mov
adcl
rcrl
pop
ds
fs
pop
cmp
repz
sbb
pushf
add
out
adc
bound
xor
es
jge
xchg
inc
loopne
insb
fcomp
jb
aad
mov
shlb
daa
adc
iret
sub
js
fmull
data16
mov
into
push
lret
cmp
adc
fwait
imul
push
pushf
sbbl
add
pushf
pop
xchg
mov
mov
rorb
jns
test
pop
js
sbb
xchg
dec
repz
mov
cmp
add
fisubrs
sbb
testb
outsb
cmp
lea
adc
jo
mov
data16
jno
dec
xor
jg
xchg
xor
fisubs
sub
leave
shlb
out
data16
cmpsb
fdivrs
ss
jae
shlb
pop
iret
cmc
insb
test
and
ror
pop
sbb
add
into
cs
cmp
and
nop
dec
out
lret
cmp
adc
orb
sub
push
popa
icebp
adc
subl
or
adc
push
test
pop
mov
mov
in
lea
mov
leave
and
int
icebp
adc
push
mov
mov
adc
sub
xorl
out
enter
loope
adc
add
adc
xor
inc
or
dec
cltd
js
les
xlat
xorl
add
and
insl
or
pop
cmp
orl
sbb
mov
dec
sub
adc
inc
rcrl
push
fisttpl
lea
adc
mov
shll
hlt
into
adcl
fsubr
dec
mov
test
sub
mov
dec
mov
mov
call
ret
lahf
cmpsb
push
dec
xchg
pusha
mov
fcompl
sbb
push
aad
rclb
sbb
loop
stos
in
pop
mov
test
in
push
mov
mov
and
shlb
and
iret
loope
mov
test
inc
mov
stos
in
das
les
pop
pop
sbb
icebp
lock
mov
jae
xor
pop
xlat
xchg
and
addr16
mov
mov
sbb
imul
and
filds
add
and
dec
xor
mov
or
popa
orb
add
fwait
lret
shr
loop
and
repnz
mov
enter
pop
mov
mov
xchg
rcrb
jl
int
pop
add
jl
ja
add
je
xchg
sub
sbb
inc
add
sbb
or
int3
lea
push
cmp
adc
cwtl
gs
add
inc
push
roll
pushf
lods
pop
data16
ret
or
popa
jmp
test
push
adc
cmpl
mov
mov
xchg
cmc
or
push
jg
aad
add
or
adc
fisubrl
out
insl
insb
inc
pushf
xlat
outsl
mov
mov
pop
insl
pop
hlt
repnz
or
cmp
test
sti
iret
inc
add
ljmp
mov
cmp
inc
push
hlt
cmp
cltd
mov
std
repz
mov
inc
pop
adc
dec
push
fcompl
adc
jp
pop
icebp
movsl
popf
scas
jae
cli
or
add
xchg
ja
or
lods
and
jae
mov
insl
jecxz
jg
enter
sahf
and
lea
push
iret
inc
daa
inc
inc
add
test
push
lds
inc
dec
jmp
outsl
sub
je
add
fimuls
add
cmpsb
pop
xor
adc
and
adc
push
push
pop
xchg
mov
xchg
add
xorl
aam
add
add
push
shll
sbb
xchg
test
loopne
push
imul
adc
test
xchg
xchg
insl
cli
mov
mov
xchg
test
lods
cmpsb
dec
dec
sar
je
arpl
enter
aaa
push
pushf
adc
in
fs
loope
fistl
mov
add
icebp
or
clc
fmull
hlt
add
inc
ja
mov
fwait
add
sub
clc
inc
push
push
pop
ljmp
push
inc
jmp
inc
push
sub
shrl
mov
fcomip
xchg
jmp
dec
sub
sbb
sti
leave
test
daa
ss
in
adc
add
data16
les
mov
iret
subl
xchg
test
and
ljmp
sub
sbb
test
adc
sbb
mov
lds
imul
fnstcw
add
and
pop
jbe
sub
clc
ja
sbb
je
ret
lds
jge
add
pop
int
rcll
ret
imul
repz
fwait
sub
test
xor
and
pop
loope
jle
out
out
bndstx
adc
or
ss
popf
dec
rcrb
push
scas
je
push
lea
mov
adc
icebp
std
inc
mov
scas
xchg
and
icebp
lock
adc
pop
push
xchg
cmp
sbb
call
clc
std
add
xchg
popa
lock
jmp
xchg
out
ja
lods
popf
cld
arpl
test
loopne
fdivl
and
xchg
roll
fstpl
imul
out
lea
rcr
test
or
xor
mov
pop
fsts
push
mov
test
enter
add
jg
fistps
mov
ja
cmp
test
rclb
out
shrl
loop
or
rol
cmp
add
pop
pop
sub
mov
ja
add
mov
pop
popf
xchg
int
int
daa
aad
aam
data16
sub
add
std
shll
fstpl
sbb
xchg
sbb
fwait
cmp
lahf
mov
hlt
add
and
and
inc
mov
les
dec
rorb
and
jns
xor
xchg
add
xchg
pop
or
or
lea
or
sbb
xlat
mov
aad
sar
and
dec
outsb
dec
lahf
aas
lea
adc
fs
clc
pop
sarl
sbb
test
inc
push
or
xchg
iret
insl
xor
add
shlb
mov
cli
xor
addr16
sbbl
pop
repnz
push
xchg
hlt
dec
inc
sub
dec
inc
add
xchg
iret
or
cli
and
sub
call
ficomps
push
or
pusha
push
adc
sbb
jecxz
andl
push
pushf
xchg
in
and
lea
mov
mov
and
push
nop
mov
fwait
push
mov
cltd
out
std
fidivs
stos
inc
scas
dec
mov
pop
out
shl
shr
sahf
pop
fwait
mov
jge
and
xchg
test
enter
out
addr16
and
lsl
ror
jl
dec
popa
push
xchg
nop
jmp
into
rcl
sub
mov
add
test
dec
sbb
pusha
sub
das
pop
or
addl
jl
add
fimuls
or
addr16
loop
movsl
xchg
aas
sbb
xor
dec
andb
jle
stos
int
cld
in
out
inc
das
int3
nop
sbb
cmpsl
mov
arpl
aad
mov
mov
mov
out
adc
sbb
shlb
mov
pop
pop
mov
adc
jp
lods
inc
xor
add
in
ljmp
xor
and
addb
daa
mov
dec
testl
dec
add
dec
mov
test
dec
xchg
sahf
pop
sub
cmp
rclb
and
int3
xor
adc
hlt
jb
nop
push
sub
dec
pushl
or
pop
enterw
icebp
xor
lock
fmull
fistl
adc
add
inc
mov
fcoml
xchg
dec
jp
and
mov
fmuls
aas
jo
mov
adc
jle
int3
xor
sub
shll
mov
jmp
sub
inc
inc
xor
std
cli
stc
fsts
xor
insb
cld
je
cmp
xchg
sahf
pusha
dec
stc
xchg
test
and
outsb
lds
pop
lds
shll
in
pop
loope
clc
adc
in
stos
loop
js
add
testl
mov
ret
das
lret
sbb
out
add
pushf
sbb
js
add
icebp
das
hlt
std
mov
dec
mov
push
add
hlt
mov
fs
pop
fbld
imul
pushf
inc
dec
mov
push
pop
or
jge
pusha
pop
mov
push
loopne
push
lods
xchg
adc
mov
or
adc
xor
jecxz
in
jne
cwtl
clc
incb
push
and
fildl
gs
shr
xchg
xor
jb
xchg
xchg
nop
mov
iret
xor
jle
fwait
out
movsb
call
ret
std
pop
push
jo
pushf
fs
jne
js
xchg
push
dec
rcll
fcomps
inc
add
cli
or
leave
xchg
cmpsl
adc
mov
mov
in
stos
in
adc
aam
mov
lea
mov
and
outsb
out
flds
fadds
rol
loope
mov
addr16
and
sbb
xchg
subb
sub
imul
adc
clc
lahf
pusha
out
or
and
inc
addr16
mov
fwait
or
clc
pop
pop
xor
mov
inc
cs
sbb
adc
clc
xor
add
xchg
imul
cmp
addb
mov
xor
pop
sub
inc
or
xchg
xor
sti
loopne
adc
sahf
inc
jbe
les
test
in
loopne
adc
or
jge
sti
xor
out
ss
in
movsb
push
stos
test
js
jbe
jne
mov
sbb
pop
inc
xor
or
notb
sub
add
andl
js
ret
or
test
mov
dec
adc
mov
and
sbb
gs
jmp
inc
insb
fmuls
test
push
add
inc
sbbl
add
push
arpl
addr16
sahf
xchg
adc
and
cmp
loope
fisubrs
jmp
sub
dec
jge
or
mov
cltd
cwtl
mov
adc
test
and
xchg
in
inc
dec
dec
sbb
xchg
out
xor
cwtl
adcb
gs
js
mov
orl
leave
fisubl
or
ss
mov
inc
ret
add
dec
cwtl
xchg
jno
sub
je
imul
bound
int3
insl
adc
repnz
xchg
movsb
cltd
add
mov
push
dec
adc
jno
xor
cmp
xchg
scas
inc
lock
rolb
sub
inc
iret
xor
and
rorb
fstl
mov
or
lds
fildll
lret
std
pushl
test
pop
push
adc
mov
add
pop
lods
les
mov
loope
jns
mov
and
addr16
call
push
cmp
adc
mov
sub
inc
dec
mov
aaa
jecxz
faddl
cmp
or
push
push
mov
loopne
and
imul
add
addb
mov
push
gs
sbb
inc
mov
push
inc
icebp
insl
popa
rorl
ret
orb
or
mov
andl
rol
pop
mov
pop
and
stc
jno
out
adcl
push
stos
js
mov
mov
les
in
xchg
xor
xchg
movsb
mull
stc
incl
ror
push
sub
stos
cmp
shld
jb
sub
add
jo
or
int
push
ja
lds
jo
jno
pop
pop
add
jne
subl
inc
push
and
push
dec
paddsw
ss
and
rolb
mov
add
fnstsw
sbb
cltd
repnz
add
movsb
aaa
stc
push
mov
cmc
je
in
cmp
sbb
jmp
xchg
jmp
sub
int
in
iret
jmp
add
mov
pop
or
xor
clc
inc
hlt
inc
mov
add
push
cli
fildll
dec
xchg
mov
movaps
jp
and
ss
mov
inc
mov
inc
dec
pusha
mov
lret
repnz
pop
je
xchg
inc
xor
mov
aaa
and
cmpsl
mov
jmp
mov
xor
pop
jg
les
pop
daa
movsl
dec
fs
outsb
and
pusha
jmp
push
cmpsb
int3
adc
lret
adc
xchg
and
les
loope
cmp
arpl
shlb
mov
jae
push
fs
push
sub
aas
xchg
test
test
pop
jecxz
jg
or
adc
nop
sbb
pop
ret
xchg
inc
rorb
mov
pop
mov
jb
xor
loope
nop
add
inc
loopne
popf
test
rclb
add
das
loop
pop
mov
ror
push
js
nop
dec
and
in
daa
cmp
pop
scas
or
xchg
mov
sbb
lret
cld
or
lock
push
add
popa
or
jb
sbb
add
lret
pcmpeqd
xchg
das
clc
fs
scas
in
loopne
lret
cltd
fldt
movsl
lret
lock
dec
cwtl
and
push
mov
push
push
xor
mov
in
mov
and
rcl
dec
adc
jg
add
mov
sub
mov
mov
push
xchg
sarl
sahf
push
or
hlt
cltd
and
call
mov
mov
and
mov
loop
loopne
in
shlb
adc
in
shlb
mov
jb
pop
xor
popf
jg
jnp
push
adc
lret
sub
push
test
mov
repnz
adc
cmpsl
dec
lcall
push
cmp
xor
or
lods
ss
cmpsl
test
je
dec
mov
mov
stc
ljmp
cs
cmpsl
ja
xor
mov
movsl
jnp
jb
xchg
aaa
pop
inc
bound
fdivs
cld
ljmp
add
mov
clc
fimull
aad
jb
sub
shl
push
decb
xchg
arpl
or
xor
jb
lea
popa
push
sbb
sub
lock
or
mov
and
and
pop
hlt
ss
mov
jp
pop
icebp
or
ficoml
das
stos
shrl
mov
pop
bound
dec
int3
cltd
cltd
fbld
jl
pop
pop
fnclex
pusha
pushf
pop
and
xlat
daa
jbe
test
loop
mov
and
mov
and
mov
mov
jg
xor
je
notl
es
sbb
inc
rclb
sbb
sbb
sub
andl
xchg
mov
push
xchg
test
test
test
adc
xor
inc
xor
movsb
mov
xor
fdivl
test
in
mov
in
pop
sti
movsb
lret
sbb
or
es
push
add
xchg
jmp
xor
or
xor
jecxz
addl
add
adc
imul
dec
mov
push
fbld
fildl
and
and
pushf
in
pop
je
addb
or
fabs
add
sbb
sti
in
leave
lock
cli
adc
adc
fistpll
outsl
daa
data16
lea
out
lcall
fnstenv
test
jle
orl
insl
sbb
xchg
loopne
pop
add
rcrb
cmp
mov
enter
fcompl
aaa
adc
test
outsl
nop
shrl
jne
mull
loop
jnp
adcl
lret
ret
inc
xlat
faddp
push
mov
loopne
and
or
in
mov
jbe
outsb
addb
imul
xchg
lea
std
jbe
or
and
lcall
je
adcl
lea
add
pop
in
cmpsl
adc
or
pop
adc
lods
cmp
and
jne
call
leave
pop
or
xchg
jae
jg
jmp
ss
xchg
addl
roll
in
aad
dec
pop
int3
xchg
add
mov
stos
mov
hlt
xchg
adc
push
mov
rorl
ss
sarl
scas
pop
jno
adc
xchg
dec
pusha
jne
or
fcmovnb
rolb
jne
jnp
cmpsb
leave
nop
adc
mov
loopne
popf
leave
andb
fildll
adc
and
jno
xor
mov
in
es
push
jecxz
dec
fildll
add
adcb
addr16
aaa
fldenv
mov
inc
inc
ljmp
or
adc
je
jg
or
inc
jb
or
out
lock
jmp
xor
or
push
pop
rorl
scas
push
cli
adc
cmp
mov
xor
movsl
or
pop
insb
pusha
push
in
lock
movsl
out
push
pop
and
add
jnp
mov
loop
and
int
bnd
test
pop
xor
daa
shl
mov
movsb
and
pop
ja
fs
or
sub
fwait
add
mov
aas
rorl
repnz
mov
jno
lahf
add
dec
movsl
out
and
popf
fs
mov
es
das
popa
test
ror
dec
jae
push
jns
rol
and
sbb
inc
add
sti
mov
lods
call
clc
inc
add
scas
and
dec
loopne
adc
daa
and
aaa
pushf
xor
test
add
push
bnd
movl
xor
pushf
data16
pop
leave
js
shlb
enter
test
adc
sbbb
dec
pop
jmp
mov
subb
add
add
push
xchg
mov
or
push
fidivrl
inc
jns
mov
cmpsb
sarl
adc
ljmp
dec
aam
and
shrl
aaa
les
ljmp
mov
or
or
inc
and
int
call
add
std
adc
pop
add
add
leave
jg
sbb
fiaddl
test
and
push
call
cmc
leave
dec
clc
push
stc
cmpsl
mov
add
mov
adc
loop
fsubp
mov
add
and
adc
enter
sbb
inc
test
add
loope
adc
fldl
push
sub
int
rcll
ljmp
data16
loopne
mov
adc
jmp
pusha
or
stc
loope
shll
lahf
push
cmpsl
fisttps
mov
sbb
adc
inc
cwtl
testb
push
mov
or
adc
stos
insb
leave
out
xchg
xorl
fcmovnb
scas
xchg
pushf
leave
adc
jmp
jg
mov
dec
add
ja
or
inc
inc
xor
rorl
xor
cmp
scas
xor
push
add
or
or
xchg
jg
enter
or
push
or
out
dec
test
out
sbb
sub
mov
or
sub
inc
pop
test
adc
shll
mov
push
aam
lock
mov
cmp
jmp
mov
cmp
or
sbb
scas
cwtl
adc
mov
adc
push
add
xchg
hlt
inc
ss
pop
xchg
lea
dec
cltd
shll
aaa
dec
lret
dec
outsl
mov
jg
ds
lods
jo
fs
std
xchg
sar
mov
mov
jg
dec
inc
das
and
enter
movsl
xor
sbb
jg
cmpsl
cmpsl
xchg
mov
lds
cltd
fstl
in
leave
data16
or
xor
loop
popf
bound
mov
and
sbb
xor
rolb
xchg
fldl
movsb
loopne
sub
lahf
mov
inc
lret
shr
push
ljmp
xor
cmp
adcb
or
jle
xor
push
xor
dec
xor
dec
loope
mov
inc
adc
inc
sbb
jbe
movsl
lods
cs
cmp
sahf
and
clc
cltd
push
sahf
aam
stos
sub
xor
in
jge
sbb
add
xchg
add
divb
mov
insl
and
movsl
mov
fidivrs
outsb
push
sar
stos
dec
nop
dec
cmpsl
or
outsb
dec
ds
inc
aas
pop
in
inc
dec
fwait
addb
mov
lea
xor
push
mov
adc
fsubrl
xchg
and
xor
add
sub
test
fisttpl
jno
and
in
cmp
rcl
xchg
lods
addb
pop
dec
mov
xor
add
cmp
imul
mov
and
add
add
aaa
xchg
dec
mov
lock
and
aam
fnstsw
dec
xchg
sbb
adcl
hlt
xchg
jb
test
xchg
movq
push
fstpt
mov
mov
jle
addl
pop
ret
jmp
or
subb
xchg
xor
add
jne
sar
adc
push
adc
call
mov
fwait
push
pop
test
fcomps
inc
lea
xchg
in
mov
mov
add
arpl
adc
lea
push
mov
push
stos
inc
jmp
test
inc
shll
ror
outsl
jle
roll
lret
and
mov
push
jne
add
adc
nop
jecxz
adc
inc
imul
repz
ss
add
adc
jnp
push
adc
clc
dec
push
test
mov
mov
add
in
lods
and
mov
lahf
loop
and
mov
push
lret
cli
pop
adc
incl
iret
rol
push
pusha
roll
std
add
sub
sub
ja
or
push
ror
push
repz
inc
or
sbbl
fcmove
cmp
jmp
adc
rolb
xchg
xor
addl
cld
hlt
adc
insb
mov
fadd
add
xchg
mov
xchg
dec
add
push
enter
adc
call
sbb
out
xorl
add
mov
nop
aam
pop
xchg
test
adc
push
pop
fstl
adc
rcrb
repnz
shll
nop
mov
pop
popa
mov
fstps
push
add
and
adc
jo
add
xchg
mov
imul
pop
mov
mov
xchg
das
and
adc
jge
add
daa
femms
jle
lods
push
adc
mov
outsb
xchg
ret
sbb
out
or
imulb
cmp
ret
in
push
fiadds
mov
lea
mulb
call
rcll
in
in
lods
mov
sbb
cwtl
and
dec
add
movsl
add
mov
pop
clc
imul
je
or
stos
mov
or
popf
fs
mov
notb
test
adc
rcrb
jne
outsl
in
inc
pop
fldcw
mov
fmuls
popf
test
xchg
sbb
push
es
rclb
xorb
push
std
mov
ret
ficoms
lahf
mov
inc
ja
rcrl
prefetcht2
or
aad
jmp
inc
dec
and
pop
lcall
xchg
sti
fldt
cs
or
cmp
lret
and
dec
lret
stos
cmp
in
dec
and
push
imul
sbb
rcl
push
or
mov
mov
shl
in
inc
push
xor
adc
or
mov
sahf
push
movb
pop
jmp
mov
and
xchg
fcmove
daa
add
cmp
mov
test
jne
shll
push
cltd
xlat
and
aaa
xchg
or
xchg
in
in
lods
andl
mov
xor
jmp
test
lcall
loope
pop
mov
jle
sbb
bound
arpl
test
sahf
inc
data16
adc
lds
ss
push
mov
push
fsubrl
push
cwtl
fsubrs
leave
dec
cwtl
jo
bound
dec
jb
lret
add
das
and
xchg
scas
ja
cmp
mov
mov
add
bound
lds
pop
mov
push
js
push
jb
popa
or
add
bound
nop
mov
xor
cmp
and
jnp
popf
dec
sti
push
mov
add
or
popl
inc
sti
shrl
daa
out
xor
inc
mov
out
dec
xor
sub
push
inc
fisttpl
mov
or
rclb
out
xor
leave
sarl
adc
imul
or
dec
mov
je
push
inc
cltd
add
add
push
cmpsl
lcall
test
int
inc
mov
sbb
test
dec
lea
adc
xchg
adc
jge
jl
fisttpl
out
loope
aaa
ja
lret
js
arpl
gs
out
and
pop
jp
push
adc
sbb
je
int3
push
jnp
stc
fwait
and
stos
push
pop
test
add
cld
shl
dec
jnp
call
mov
ss
fists
out
enter
loopne
hlt
sahf
pop
cmp
inc
add
testl
je
das
adc
daa
rorb
pushl
into
jl
int3
inc
sub
aad
ja
xor
sub
dec
sarb
popa
outsl
mov
mov
stc
addr16
xchg
pop
sub
rcr
push
lods
imul
loopne
pusha
xchg
std
call
ss
clc
pop
mov
push
fisttpl
add
outsb
in
fcmovb
jns
clc
out
adc
jle
mov
ss
sub
mov
jg
call
loope
dec
xchg
lea
lods
je
mov
push
arpl
push
cmp
or
mov
std
cmpsl
sbb
cmp
jns
sub
clc
int3
inc
aaa
fidivrl
adc
xor
test
mov
in
add
fisubrl
mov
stos
mov
or
jns
mov
push
and
mov
addr16
out
addr16
push
fwait
int
xor
mov
mov
bound
leave
inc
and
adc
push
in
rcl
lods
lock
ds
test
inc
ja
sub
lods
popa
or
pop
and
xchg
or
add
dec
xor
stc
dec
sbb
xchg
lods
add
sub
out
xchg
lds
push
dec
dec
adc
stos
fdivr
stc
xchg
outsl
cmp
hlt
gs
dec
je
in
sbb
pop
xchg
dec
lds
rcrl
sbb
jecxz
es
adc
fwait
loopne
push
daa
in
cmp
or
leave
adc
pushf
dec
sub
xchg
pop
out
fwait
xor
shll
and
cmp
inc
dec
fmul
ja
mov
punpcklbw
mov
pop
mov
xchg
add
sti
testl
roll
mov
ss
out
and
imul
in
jns
jno
mov
inc
dec
push
pop
loope
cld
or
adc
dec
negb
sti
push
adc
sub
test
lea
cmc
test
out
add
loop
movsb
mov
and
andl
xchg
pop
mov
ja
xchg
pushf
push
cmpsb
mov
cltd
mov
inc
add
lea
test
call
inc
dec
ljmp
call
cmc
test
test
test
test
les
adc
leave
mov
pop
dec
dec
aam
jbe
add
not
add
add
hlt
fsubrs
dec
mov
test
dec
test
or
xchg
in
test
loop
xchg
testb
leave
dec
jbe
jp
cmp
mov
in
icebp
adc
mov
not
dec
addl
mov
je
aas
add
jne
add
mov
mov
add
push
dec
add
imul
data16
jmp
jmp
push
rep
cs
test
imul
pinsrw
add
leave
xchg
add
mov
les
push
dec
sub
call
add
fs
roll
test
add
add
adcl
or
incl
fld
mov
mov
mov
mov
inc
test
xchg
mov
into
adcl
addb
dec
rolb
or
sbbb
imul
rorl
mov
add
fwait
dec
rorl
push
dec
jg
or
jg
push
cmp
mov
dec
int
sbb
rorl
icebp
mov
les
enter
mov
sbb
lret
sbb
mov
or
test
inc
in
addl
mov
add
pushf
add
popf
add
push
lds
sub
xchg
push
add
push
mov
or
cmpb
ret
pop
aas
dec
cmp
xchg
push
test
rorl
add
cld
add
rorl
dec
mov
cltd
popa
fcmovnu
sbb
push
xor
icebp
rorb
cmpsb
rcll
mov
lea
jno
jnp
mov
cmp
mov
in
adc
mov
mov
fcmovb
sbb
loope
adc
mov
jg
and
iret
mov
int3
stc
jg
adc
clc
fisubrs
test
mov
fsts
loope
add
adc
mov
sbb
or
test
or
fdivrl
push
les
stos
or
jecxz
sub
add
pop
inc
mov
insl
es
xor
mov
or
and
xchg
imul
and
insl
into
in
add
sbb
sbbb
mov
add
pop
xchg
ret
adc
ror
fnstsw
or
sub
sub
jmp
jbe
movsb
cs
mov
addb
add
out
and
sar
pop
int
mov
insl
cmp
shlb
add
cmpl
pusha
and
sahf
in
pop
jno
pop
add
push
mov
dec
adc
add
cmp
int
sub
mov
cld
push
and
daa
jmp
cmpsl
lock
sub
and
dec
jecxz
jmp
insl
mov
jmp
jno
adc
jge
in
push
add
iret
stos
cltd
shrb
lods
ficomps
jge
inc
push
xorl
loope
xchg
scas
push
mov
fwait
loope
pop
scas
imul
rclb
stos
sbbb
frstor
inc
int
add
and
cltd
xor
or
dec
subl
imul
jns
ret
ja
sbb
xorb
pop
mov
pop
loope
pushf
mov
or
loop
cmpsl
sarb
jnp
rorl
sahf
aam
in
pop
mov
mov
decl
xchg
cmpsl
insb
lea
add
add
enter
or
out
subl
and
mov
cmp
cmpsl
sahf
subl
orl
cmp
addr16
test
fcmovnbe
mov
mov
cwtl
movnti
inc
inc
je
imul
leave
push
out
dec
pop
or
cmc
imul
pop
add
lds
andl
and
mov
sbb
dec
mov
aam
popf
or
and
pop
add
jle
in
scas
mov
xchg
push
cmp
add
loopne
into
xchg
lret
cld
stc
arpl
lret
mov
int3
pop
out
imul
or
filds
jge
popf
fnsave
jb
bound
pop
mov
sahf
rcll
ret
lock
mov
mov
mov
and
fsub
inc
fs
daa
and
nop
loopne
lcall
out
mov
int
je
add
mov
nop
mov
sub
adc
nop
add
mov
or
cmpsl
pushf
inc
adc
divb
into
loopne
pop
imull
subl
imul
adc
pop
test
sbb
roll
dec
adc
dec
ljmp
cmp
push
pop
xor
mov
ficompl
mov
clc
lock
xorb
pop
mov
scas
dec
mov
or
int3
mov
sbb
or
push
xor
leave
stos
popf
push
jae
enter
leave
dec
add
xor
je
sti
xor
adc
test
sub
xchg
xor
js
fdivl
sbb
out
mov
rolb
pop
xor
data16
rolb
rorb
sub
xchg
sub
loop
xlat
faddl
pop
push
loope,pt
aam
sub
cltd
test
in
push
xlat
jmp
jne,pt
pop
bound
mov
lods
jp
lock
int3
aaa
adc
sub
in
jle
xchg
dec
cmpsl
xchg
cmp
or
stos
daa
fsub
clc
js
jge
mov
and
fnstsw
imul
add
lods
mov
fcmovbe
orb
mov
arpl
mov
loope
rorb
sar
jp
ffreep
add
lods
les
fidivrl
pop
dec
or
cmp
xor
mov
or
test
scas
or
out
pop
enter
aaa
mov
scas
leave
test
jle
outsl
jnp
cli
pop
dec
andb
cwtl
and
lea
push
pop
add
outsb
xchg
xchg
or
mov
xchg
shll
sti
test
jne
mov
jecxz
std
mov
leave
sahf
aam
cwtl
or
mov
inc
push
test
adc
xor
orl
push
sarb
sbb
mov
pusha
mov
mov
std
dec
aas
es
pop
cli
int3
add
jbe
pop
pop
std
fbstp
icebp
adc
or
popf
shrb
fmull
std
fmuls
fisttpl
pop
insl
iret
push
or
in
fistpl
add
das
mov
mov
sbb
int
mov
les
push
bound
ret
orb
xor
out
stos
popf
sub
in
push
push
out
pop
pop
in
dec
cld
outsb
sbb
nop
jg
pop
in
pop
sbb
or
jg
add
insb
hlt
inc
adc
cmpsb
lret
jg
xchg
push
insb
popa
fnsave
pop
in
test
sbb
lret
pop
mov
iret
enter
sbbb
xchg
popf
mov
add
mov
int
or
shll
loope
adc
sub
pop
mov
movsb
add
ret
add
inc
pop
sbb
outsb
inc
jae
aaa
or
cmc
gs
fld
mov
dec
mov
into
addr16
aad
xchg
test
cmpsl
mov
lods
pushf
push
dec
jg
adc
cwtl
xor
or
mov
aam
mov
pop
mov
and
out
cld
xor
rcll
adc
lea
dec
lahf
shll
inc
xchg
ss
or
pop
pop
je
mov
push
pop
cmp
mov
aam
daa
cmp
lods
out
repz
push
in
test
rorb
xchg
decl
loope
and
pushf
lahf
mov
add
inc
clc
loope
lret
scas
fcoms
enter
sbb
lahf
cmp
ret
mov
pop
out
adcb
daa
cmp
add
shll
sar
add
jge
imul
cmc
dec
test
and
mov
mov
adc
mov
mov
inc
inc
call
ds
lods
lock
adcl
loopne
adc
xor
scas
xor
repz
push
sti
sarb
pushf
push
inc
sub
add
mov
std
mov
mov
lea
test
xchg
iret
dec
arpl
fadds
jb
mov
data16
push
pop
fiaddl
inc
enter
mov
repz
fiadds
fcoml
test
and
idivl
mov
xchg
mov
dec
xchg
xor
icebp
stos
popf
rclb
mov
out
and
jmp
loope
iret
call
jb
ret
cmpsb
jmp
sbb
jne
frstor
out
ljmp
cmp
std
cmp
iret
test
fdivl
cmp
lret
pop
mov
ljmp
cltd
or
inc
adc
ret
ljmp
pop
xor
and
mov
fisubrs
or
mov
and
xor
cmp
fs
pop
adc
adc
in
test
add
and
xor
mov
mov
add
mov
cmp
stos
nop
js
aam
add
xor
ret
aas
movsb
rorb
pop
mov
xchg
call
sbb
xchg
and
rorl
out
inc
loopne
popa
add
pop
and
insl
xchg
ljmp
test
xlat
cmpsl
dec
out
pushf
dec
and
xor
mov
fwait
out
out
dec
rcr
das
jb
cli
mov
dec
hlt
loope
mov
and
push
rorl
xor
test
ja
dec
and
je
daa
stos
in
idivb
push
jno
cmp
adc
cmpsl
int3
push
pop
std
int3
adc
add
cmp
call
stos
jle
in
pop
or
push
test
les
loopne
mov
fidivrs
rcr
loopne
clc
into
les
pusha
in
sub
lcall
mov
cmp
mov
shrl
decl
sbb
pop
xlat
cmpsb
jmp
ss
lahf
pop
sub
adcb
lds
cmpsb
push
sbb
add
xchg
in
lret
sbb
leave
pushf
ficomps
fs
mov
cwtl
adc
in
xchg
out
aas
je
rclb
ljmp
insb
popf
lea
push
pop
sbb
gs
mov
das
sub
jg
int
xor
adc
jnp
cwtl
or
daa
dec
or
aad
roll
mov
push
mov
leave
test
xchg
fwait
mov
pop
bound
and
orb
pop
shrl
pop
dec
mov
pusha
or
jno
mov
pop
aad
outsb
xchg
lret
fwait
ret
test
addl
ss
loop
sti
push
cld
movsb
add
sub
mov
push
xchg
mov
mov
outsl
rorb
pop
inc
dec
icebp
out
mov
sti
popf
or
adc
test
lds
pop
lods
imul
push
ja
jne
lock
inc
sti
sbb
orb
jbe
cmp
xchg
cmp
xor
rclb
in
and
sbb
push
in
and
mov
dec
fwait
test
and
sub
xchg
cmp
roll
add
rcrl
or
cmpsb
dec
add
aas
mov
sbb
in
xor
dec
adc
jnp
mov
cmp
sub
ljmp
out
aas
test
lock
add
jo
sub
lods
pusha
mov
shrl
xchg
dec
lock
jns
icebp
andl
inc
in
pop
mov
popf
rolb
inc
xchg
sbb
lret
push
inc
es
or
rclb
adc
mov
pushf
sti
stos
les
cmpb
js
test
sti
mov
jns
push
out
pop
adc
addr16
cli
pop
cltd
ds
rolb
or
or
fimull
dec
in
jmp
fldcw
mov
int
repz
lock
push
fstl
sarb
loope
mov
dec
mov
mov
jmp
popf
adcl
add
test
inc
pop
sub
cmpl
mov
aam
xor
pop
movsl
fildll
cmp
cmp
pop
add
mov
push
xchg
mov
cmp
je
add
and
nop
cltd
out
icebp
iret
flds
addl
jns
lret
adc
push
add
mov
adcl
pop
dec
rol
mov
pop
rcrb
mov
push
getsec
loope
icebp
sbbl
adc
imull
mov
and
jecxz
shlb
rcpps
mov
push
fmull
addl
loopne
dec
ret
daa
inc
mov
movsl
push
jmp
out
pop
cld
pop
daa
test
stos
pushf
flds
loopne
orl
sbb
js
adc
add
add
cmp
popa
mov
xor
jl
outsb
sbb
hlt
mov
or
xchg
dec
sbb
roll
adc
mov
arpl
arpl
push
pushf
xchg
je
and
push
mov
jp
cmpsb
xchg
adc
dec
rcr
mov
imul
in
or
mov
shl
in
out
jnp
bound
rolb
push
xor
movsb
inc
fs
shrl
pop
cmpsb
loop
loope
loopne
adc
xchg
je
pop
adc
sarl
xor
popa
push
rolb
in
and
daa
rolb
inc
test
mulb
aad
les
in
jne
and
shr
lods
movsb
dec
imul
popa
jecxz
cmp
insb
test
mov
xchg
push
es
sar
sbb
fdivrs
fwait
add
adc
leave
add
arpl
push
addr16
js
dec
rorb
in
inc
in
mov
movups
inc
add
enter
gs
ror
or
hlt
in
out
push
add
adcl
adc
sub
in
jecxz
mov
adc
dec
add
mov
inc
mov
ret
xchg
in
mov
mov
adc
nop
pusha
out
jns
sar
adc
or
sbb
roll
push
dec
ss
test
push
andb
jb
clc
sarl
pop
push
cli
aam
jae
fisubl
outsb
mov
xorb
pusha
lods
add
adc
dec
inc
orb
cltd
and
cmp
aad
mov
les
ds
mov
push
call
jmp
int3
cmp
dec
xorl
call
je
and
mov
outsl
int
les
mov
xor
loop
inc
sub
arpl
pop
pop
shrl
xchg
stc
in
lea
cltd
mov
pop
fiadds
lea
cmp
mov
sbb
adc
mov
cwtl
cmpsl
lock
ds
cmpsl
adc
dec
xchg
shrl
sub
pusha
adc
cwtl
lret
in
adc
xor
and
pushw
std
dec
push
popa
sbb
in
adc
loopne
adc
fildll
cmp
mov
and
dec
xchg
lock
inc
xor
add
arpl
out
ds
add
mov
lea
fucom
push
jb
cmpb
fidivs
xchg
jb
loope,pn
xor
mov
orl
cmp
cltd
jl
dec
in
adc
dec
insl
push
xchg
mov
pop
push
mov
or
add
lret
mov
sub
cmp
jbe
popf
inc
int3
jbe
int
call
xchg
and
andl
or
xchg
push
rclb
cmpsb
dec
fcomps
push
add
or
mov
sbb
in
xchg
nop
fdivr
popa
push
popa
leave
dec
xor
mov
xor
pop
movsb
je
mov
nop
jo
pusha
cmpsb
nop
fnstenv
jns
pop
mov
jbe
popf
mov
test
inc
lret
mov
into
cmpsb
ret
jo
push
mov
pop
test
sbb
nop
push
loopne
arpl
sbb
stos
ja
std
mov
cmpsb
jmp
out
rorb
jmp
roll
rorb
add
push
xor
adc
cs
rcrl
pop
inc
mov
int3
mov
jle
sbb
mov
andb
pop
in
or
lret
cmp
enter
mov
add
sub
mov
inc
adc
loope
fs
mov
push
inc
or
jo
or
mov
cltd
jno
mov
loop
mov
xchg
aaa
movsl
rcrl
mov
shlb
in
pop
in
and
sbb
shrl
int
popa
xchg
popf
pop
loopne
ds
dec
mov
adc
rorb
lds
xor
lock
arpl
mov
adc
jbe
outsl
cli
or
sub
scas
mov
adc
adc
mov
repz
arpl
outsl
in
jnp
shll
lcall
sub
jp
add
repnz
test
flds
xchg
push
adc
fs
lahf
test
addl
sub
movb
test
dec
sub
mov
addl
xor
push
in
add
call
adc
lea
xchg
mov
mov
leave
mov
ret
andl
add
add
xchg
add
xor
xchg
into
mov
sbb
repnz
les
rolb
mov
dec
aas
data16
dec
dec
mov
sbb
subl
andl
pop
dec
push
inc
dec
add
xor
or
xchg
dec
sbb
ret
inc
mulb
add
add
pushf
mov
ret
jg
addl
out
inc
add
mov
sub
xchg
xchg
clc
ret
xchg
add
push
push
cwtl
dec
roll
inc
sub
inc
xor
inc
add
jne
xchg
cmp
cwtl
dec
add
xchg
dec
push
gs
or
leave
or
or
test
aad
sub
mov
add
pop
and
clc
aad
aas
add
retw
push
or
insb
mov
orb
mov
lods
mov
add
ret
or
or
mov
pop
push
lds
sbb
xchg
ret
adc
rorl
movl
push
and
jmp
in
or
addb
xchg
add
sbb
lret
fiaddl
lds
mov
ret
adc
in
sub
test
jmp
test
inc
and
mov
inc
add
test
add
mov
out
dec
in
out
addb
sub
dec
push
enter
sbb
test
dec
jmp
mov
inc
sub
aas
xchg
or
in
inc
imul
mov
test
mov
nop
out
rcll
data16
cmp
mov
xchg
std
fcoms
push
pushf
mov
xchg
test
or
roll
mov
sub
roll
or
adc
fwait
add
negl
into
inc
lret
dec
test
js
shl
and
popf
inc
js
and
mov
sbb
add
loopne
inc
repnz
mov
adc
out
xchg
insl
shll
sub
jg
mov
dec
mov
cmp
loopne
and
jl
push
ds
ret
xor
cs
inc
push
cmpsb
nop
adc
xchg
test
ret
lock
ds
out
call
xor
sbb
notl
adc
stos
adc
popa
loope
cmp
rolb
push
or
mov
imul
rolb
ja
or
and
add
inc
push
repnz
adc
hlt
loop
shll
jbe
pop
sbbl
adc
addr16
out
dec
pop
jp
insl
in
icebp
and
sbb
mov
adc
jo
mov
add
test
aaa
adc
xchg
dec
mov
ret
mov
sahf
gs
mov
out
mov
addr16
nop
iret
iret
mov
dec
popf
adc
sarb
add
int
inc
ret
adc
aas
push
cmp
inc
xor
xor
and
fisubs
add
adc
jl
flds
add
ljmp
clc
push
or
mov
and
popa
popf
pop
jo
pushf
iret
pop
out
pop
cwtl
adc
cmp
xor
pusha
cmp
outsb
loope
mov
out
out
outsb
in
and
adc
out
adc
cmp
dec
sbb
stc
push
jo
mov
jmp
mov
adc
shll
mov
mov
int
in
pop
adc
cli
test
xlat
lock
insl
xchg
movsl
lods
repnz
mov
push
push
ja
xchg
cmp
std
stos
sub
fldenv
xlat
in
bound
cmpsb
daa
pushf
stos
or
fistpl
add
xchg
ja
in
xlat
sub
std
into
push
test
pushf
inc
and
and
loop
mov
ret
insb
ret
sbb
pop
imul
sub
cld
data16
mov
insb
fwait
jmp
cli
push
mov
push
mov
outsl
and
mov
lahf
add
or
call
jne
scas
fmull
je
test
mov
mov
lock
roll
sub
mov
jae
pusha
ret
shrb
add
push
and
aad
aas
fstl
aaa
sbb
xchg
jp
hlt
jge
in
lods
aam
jl
shll
cmp
adc
push
loope
push
jmp
mov
adc
lds
pop
xor
pusha
sbb
cwtl
sbb
add
cltd
xchg
stos
insb
or
or
mov
je
inc
adc
inc
dec
mov
xchg
inc
push
push
mov
addr16
pop
pop
in
mov
das
xchg
xor
stos
push
dec
fsubl
mov
mov
lock
mov
mov
mov
dec
scas
mov
enter
jne
dec
inc
popf
jge
or
dec
daa
add
jg
int
cmp
jge
xor
cmp
inc
test
mov
aad
jge
pop
cltd
add
mov
mov
mov
call
add
popf
adc
lret
out
jbe
arpl
xchg
push
push
mov
sub
mov
xor
or
fs
test
aaa
nop
mov
scas
fists
aam
jmp
mov
adc
sub
mov
and
clc
dec
sbbb
xchg
cmp
xchg
clc
and
xchg
mov
test
into
cmpsl
pop
lcall
adc
int
inc
hlt
bound
sbb
test
cmp
push
mov
xor
mov
mov
mov
incl
inc
sbb
lea
fdivrs
movsb
rorl
lods
and
mov
clc
or
sbbb
lock
shl
aaa
insl
stc
stos
rcl
cmp
push
push
aad
mov
adc
mov
outsb
sbb
and
fcompl
arpl
lret
inc
add
xor
int
mov
aas
jb
mov
arpl
or
ss
mov
stc
jg
mov
adc
into
call
add
clc
inc
xor
xor
push
lahf
dec
adc
mov
cmp
lcall
rcrb
rorb
in
lds
fistps
push
mov
bound
dec
insb
js
movsl
lods
push
xchg
clc
push
ror
scas
push
enter
push
mov
hlt
jecxz
push
sub
fmull
iret
and
test
call
mov
mov
fldl
xchg
add
xchg
lret
sub
aam
or
and
shll
mov
stos
inc
pop
or
lret
xchg
fidivl
stc
daa
lea
sub
push
mov
fmuls
mov
jo
push
enter
cmpsl
leave
cmpb
mov
mov
or
push
inc
jg
in
adc
sahf
sub
sub
jle
mov
out
mov
jb
dec
imul
jae
push
add
adc
ret
shlb
leave
shll
in
and
flds
add
dec
incb
inc
push
pushf
fimuls
sbb
mov
je
inc
sub
sbb
out
das
arpl
addr16
ljmp
loope
and
sub
sbb
sub
les
lea
push
ret
in
leave
mov
lea
lret
lret
andl
leave
imul
add
mov
pop
sbb
lretw
adc
stos
jb
js
inc
icebp
adc
cmp
jge
insl
or
mov
subl
inc
sub
cli
jb
push
add
inc
xor
imul
pop
jge
add
aaa
rorl
das
or
inc
inc
lods
xchg
mov
nop
sarl
xor
mov
and
js
rol
mulb
pop
lret
mov
lahf
mov
rolb
add
push
xchg
fcompl
js
mov
xchg
push
inc
std
adc
cmc
or
notl
test
or
xchg
loop
xchg
mov
or
push
out
sahf
ret
add
or
std
add
jmp
scas
aam
xchg
mov
inc
push
mov
xchg
pop
sbb
negl
jne
lcall
fs
xchg
xor
fists
sbb
lcall
pop
je
pop
add
adc
bound
je
imul
mov
sub
push
sbb
mov
xchg
mov
adcl
cli
xor
jno
in
mov
nop
xorl
in
xchg
aaa
add
or
mov
push
mov
addl
out
pop
cmp
test
mov
test
data16
call
repnz
add
mov
adc
rolb
mov
cld
or
shl
cli
lods
and
fs
xlat
js
insl
rol
push
jle
enter
inc
cli
je
mov
int3
pushf
xchg
lods
adc
cmc
hlt
pop
mov
xchg
out
loop
dec
mov
leave
jle
jmp
loope
push
clc
aas
jns
hlt
jb
xor
inc
mov
cwtl
mov
add
movsl
adc
ja
inc
inc
xor
iret
hlt
addb
testl
cwtl
pop
lds
add
bound
mov
dec
jp
loop
cltd
push
xchg
movb
or
jno
out
mov
inc
mov
pop
dec
movsb
inc
test
pop
in
ret
sub
imul
mov
mov
call
or
add
pop
cs
xchg
add
mov
xor
push
rcll
jne
inc
adc
addl
push
cmc
mov
call
mov
sbb
out
or
dec
fsubs
mov
test
je
inc
cld
or
inc
mov
lcall
push
cli
lock
add
ret
adc
mov
loop
fists
xchg
mov
cwtl
cwtl
jg
leave
sbb
mov
add
insb
loop
adc
scas
xchg
dec
and
aas
movl
dec
gs
call
ds
xchg
jg
dec
ljmp
orl
add
sbb
lcall
mov
test
subl
mov
je
ret
fistpl
int
sbb
add
jecxz
inc
fldt
shrl
sub
add
dec
cmpsl
fadds
arpl
rdpmc
cld
sbb
ret
xchg
leave
add
lcall
in
cmpsl
push
xor
pop
test
in
pop
mov
inc
lds
repnz
mov
fldcw
push
shr
roll
adc
xchg
sbb
leave
lcall
mov
pop
pushf
mov
or
sub
ret
inc
loope
push
dec
ss
add
outsl
int3
or
lods
shrl
sbb
int3
enter
adc
pop
addl
adc
lods
mov
add
adc
xchg
mov
popf
adc
adc
cmpsl
orb
push
cmpsb
shl
sbb
stos
scas
out
je
aaa
int3
jg
mov
cmpsb
xor
adc
fs
add
push
dec
mov
xor
jl
loope
sbb
xchg
and
outsl
nop
int
clc
roll
outsb
bnd
adc
cmp
pushf
dec
push
mov
enter
jno
push
ja
xchg
out
fsubrs
mov
mov
sub
testb
push
clc
ret
or
stos
stos
nop
cli
outsb
jo
fmuls
fnstcw
icebp
pop
out
je
out
push
sub
mov
pop
xor
movsl
jp
stos
loope
dec
mov
push
push
xor
xchg
adc
push
push
sub
shrb
lds
mov
add
fsubrl
hlt
push
ret
push
sbb
xchg
mov
out
pushf
dec
nop
outsl
mov
pop
filds
sbb
xchg
pop
sub
push
dec
mov
sub
sbb
repnz
ret
lcall
and
mov
nop
mov
pop
adc
push
bound
hlt
add
and
sub
popf
out
movsl
out
out
mov
jno
xchg
mov
mov
xor
pop
idiv
fwait
adc
adc
add
fmull
outsl
adc
loop
or
xor
movl
sbb
test
sbb
lods
mov
inc
les
dec
add
mov
fs
frstor
add
js
and
fst
aad
dec
push
pop
adc
fwait
add
ret
xchg
push
sbb
and
in
ret
call
repnz
out
test
or
je
jecxz
or
or
arpl
dec
sub
cmp
cmpsl
xchg
inc
adc
push
inc
inc
jo
neg
adc
inc
jbe
add
negb
ficompl
xchg
cs
call
jb
mov
pop
cmc
imul
xor
insl
ret
insl
pop
out
push
push
loope
adc
mov
popf
fs
cltd
inc
xor
ljmp
scas
jge
mov
sub
push
hlt
dec
adc
lret
jmp
sahf
push
cld
popf
xchg
inc
loop
lock
fcomps
pop
inc
dec
mov
add
mov
popa
add
push
inc
in
addr16
sbbb
lds
pop
adc
lcall
rcrl
xchg
pop
lret
movsl
popf
sub
dec
outsb
lock
push
sahf
mov
ret
sbb
or
dec
jb
rcr
aam
and
xor
rol
pop
out
sub
addb
mov
jp
incl
cmp
adc
sarl
adc
out
or
push
mov
add
in
arpl
sub
pop
movl
add
push
rclb
enter
add
and
pop
pop
jl
adc
or
loope
xchg
fisubl
pop
cmpsb
jp
pusha
int3
sbb
insb
and
push
decl
and
dec
sbb
xchg
cmp
or
dec
jne
or
lret
and
fiadds
loope
cmp
dec
ret
mov
sbb
mov
dec
dec
daa
mov
pop
je
adc
cwtl
cmp
adc
inc
xor
ja
sub
xchg
push
pop
mov
data16
inc
call
xchg
mov
cli
sbb
stc
pusha
push
addb
stos
out
add
mov
imulb
xor
shlb
push
dec
jecxz
scas
sbb
roll
ret
es
adc
mov
mov
xor
sbb
mov
xor
sub
adc
xchg
icebp
mov
jg
mov
lea
stc
jg
or
cwtl
leave
enter
adc
xchg
xchg
dec
mov
add
xchg
mov
test
sub
sbb
xchg
cmc
sbb
or
pop
insb
sbb
loope
sub
pop
movsl
jmp
aaa
or
pop
test
or
xchg
jecxz
xchg
sub
mov
lret
clc
pop
lea
or
mov
inc
mov
leave
shrb
mov
xor
icebp
mov
push
fs
call
ljmp
add
scas
adc
lock
shll
lds
push
lret
mov
mov
fistpl
cmp
xchg
adc
dec
mov
insl
gs
je
nop
or
in
insb
xorb
cmpsb
fs
adc
adcb
xchg
insl
sbb
ljmp
aad
mov
inc
and
nop
shrb
jae
sbb
ret
adc
ja
sbb
out
das
mov
in
or
inc
push
jne
shlb
and
mov
mov
add
and
mov
xchg
fbld
jge
add
mov
nop
inc
clc
mov
mov
andl
je
leave
xchg
inc
pop
dec
test
cmpsl
xchg
out
lret
cmpsl
and
adc
dec
xor
add
jmp
out
mov
fcoms
push
add
lret
lods
mov
bound
jne
adc
pop
adc
dec
xchg
push
add
adc
adc
push
outsb
lds
mov
mov
rdtsc
std
pop
jecxz
icebp
inc
or
jo
dec
cmp
xor
jl
outsb
es
ja
adc
xchg
lods
adc
dec
fisubs
jg
fiadds
jl
popf
iret
inc
in
xchg
adc
in
andl
pop
pop
fldcw
sub
popa
scas
sbb
fsubs
and
push
dec
pop
lahf
xor
mov
dec
call
stos
pop
mov
jb
add
adc
mov
add
xchg
jnp
je
sahf
and
xchg
subb
jno
iret
push
test
iret
pop
jmp
lock
pop
push
call
pop
hlt
int3
mov
leave
mov
pushf
das
sahf
adc
out
dec
sbb
push
xchg
movd
sub
adc
sbb
daa
or
jle
movsb
sbb
xor
mov
sbb
roll
enter
mov
fcompl
inc
pop
ret
adc
jecxz
cmp
adc
lods
mov
push
icebp
les
add
aaa
push
push
pop
vmovsldup
into
scas
add
jbe
fwait
adc
mov
xor
mov
std
int
out
adc
sbb
enter
movsb
lret
enter
popf
mov
jmp
test
int3
cmp
dec
add
mov
cmp
jg
data16
rolb
daa
mov
push
sbb
orl
add
outsl
shrl
iret
imul
and
mov
icebp
sarb
fwait
mov
jl
mov
daa
dec
imul
push
fbstp
xchg
das
sbb
xor
test
pop
sub
cmp
pusha
or
aaa
daa
jmp
cltd
adc
test
or
pop
jb
inc
vmovlpd
scas
js
cmpb
and
pop
mov
xor
jns
mov
cwtl
push
or
lock
or
add
xchg
sti
mov
pop
mov
sbb
gs
adc
rclb
add
and
andb
iret
ret
jns
cmp
out
mov
fst
rolb
or
adc
aas
push
repnz
mov
pop
and
fistpl
es
icebp
test
out
jl
pop
mov
fbstp
ja
xor
pmaxsw
loopne
lock
lret
pop
dec
inc
jo
out
dec
in
mov
inc
in
popf
jp
adc
cmp
dec
ror
jbe
sub
leave
inc
cwtl
push
pop
push
mov
fadds
shrl
mov
pushf
jl
pop
clc
sbb
arpl
aas
pop
or
and
pushl
dec
jmp
cmpsl
cltd
push
idivb
jle
repz
les
push
int
es
cmpsl
mov
popa
loope
adcb
in
icebp
add
into
int
adc
mov
cli
aam
lcall
xor
cmpsl
ja
jge
ljmp
jg
sbb
add
inc
rcrb
repz
addr16
pop
and
mov
insl
in
dec
fcom
flds
sub
outsb
cmp
pop
mov
call
push
ss
jno
and
clc
add
popf
loop
bound
dec
cmp
mov
addr16
xchg
lcall
imul
xor
xor
sub
sti
in
xor
and
fcoml
jle
clc
scas
test
cmp
shlb
pushf
fwait
stc
lret
ss
je
js
jmp
pop
ficoml
add
xchg
xor
mov
adc
cmp
sub
sub
test
xchg
rorb
xchg
fnop
add
jecxz
daa
shrb
aaa
sbb
and
add
lahf
mov
mov
lods
adc
xchg
jecxz
fisttpl
lods
lods
and
repz
test
add
outsl
ja
stos
push
inc
popf
dec
push
movsb
or
jb
idivb
mov
out
mov
inc
cmp
dec
cmp
mov
lret
jmp
inc
lds
or
je
xchg
xor
mov
jo
lds
mov
sbb
mov
mov
or
sub
test
adc
std
mov
loope
jg
enter
mov
hlt
insl
lret
lock
loopne
lds
pop
inc
cmp
sahf
lret
into
jmp
popa
pop
fucomi
sbb
and
sbb
add
test
test
mov
inc
dec
and
call
add
push
or
inc
lahf
inc
int
test
call
cmpsb
test
or
mov
bound
mov
mov
fiadds
cltd
or
pop
push
lret
or
leave
inc
add
les
leave
xchg
add
outsl
dec
mov
lahf
jl
inc
sti
add
add
push
fs
es
mov
das
pop
dec
xchg
dec
mov
sbb
cmp
daa
or
repz
adc
popa
addl
mov
sub
icebp
add
cmp
sub
in
mov
sbb
mov
sub
int3
movsl
in
call
test
add
int
loop
jmp
sbb
push
test
ret
jmp
or
pop
mov
jmp
add
mov
xchg
shl
test
test
mov
std
ret
leave
or
push
dec
fwait
dec
add
arpl
xchg
leave
stos
dec
xchg
jg
sub
xor
mov
dec
or
or
popf
adc
mov
les
or
imul
lret
inc
cwtl
inc
pop
inc
add
lds
in
or
daa
push
cwtl
lds
push
jbe
int
or
std
sbb
mov
or
jmp
in
in
push
in
out
rolb
ret
inc
push
xchg
add
dec
mov
add
inc
in
in
idivb
dec
pop
ret
roll
addr16
or
add
mov
pop
lea
mov
roll
add
orw
mov
daa
or
shl
or
test
inc
in
xlat
test
cmpsb
xchg
fs
xor
in
xor
sub
test
out
mov
add
dec
repnz
mov
push
fs
xchg
and
test
add
lea
pop
mov
jp
test
ljmp
xchg
add
repz
cwtl
and
popf
cmp
dec
inc
pop
je
dec
mov
rcrb
mov
add
xchg
cmpb
xchg
mov
jno
mov
push
mov
cmp
movsl
mov
sub
cli
cmp
into
das
into
shrl
rclb
movsl
dec
cmpsb
insb
adc
fldt
or
in
ja
xchg
adc
in
rorb
mov
sbb
mov
inc
hlt
lods
pop
or
in
pop
xchg
xchg
mov
fs
aad
push
inc
adc
test
cli
fdivp
jecxz
int
adc
pop
ja
jmp
fistl
adc
mov
xchg
dec
add
mov
ds
push
add
loopne
enter
xchg
in
cmp
out
jg
cmp
xor
push
jl
and
shll
orb
xchg
dec
sub
cmpsl
iret
loope
lea
adc
jb
scas
mov
add
cltd
lock
aas
out
loopne
cmp
xchg
or
inc
add
xchg
pop
cwtl
mov
dec
cld
fldt
cmovne
push
cmp
and
push
adc
mov
pop
mov
test
popa
adc
in
cmpsl
dec
xchg
xchg
rorl
adc
arpl
popf
add
jbe
scas
das
cmp
mov
inc
int
xor
add
pop
je
adc
push
or
inc
inc
push
jne
mov
scas
pop
xor
xchg
lea
cmp
sbb
shll
jmp
popf
add
js
add
adc
xor
leave
add
mov
pop
rorl
leave
jbe
movb
shll
cwtl
mov
cmp
inc
sub
or
in
or
scas
add
xor
xchg
test
cmpsb
adc
mov
test
jecxz
or
dec
push
inc
add
fld
and
xchg
xorb
incl
sbbb
stc
dec
les
int3
xchg
dec
or
out
add
fs
or
mov
inc
testl
jmp
icebp
ror
lret
ja
testl
mov
les
lds
mov
jg
push
ret
movb
add
into
dec
pop
stc
add
or
flds
or
xchg
mov
test
dec
add
ret
in
dec
xchg
mov
xchg
int
inc
addl
add
int3
dec
faddl
in
aas
add
or
pop
add
mov
add
inc
add
dec
cwtl
push
adc
ror
int3
or
or
mov
jge
daa
add
inc
in
xchg
es
test
out
sbb
andl
enter
add
movb
or
movb
pop
mov
lret
ret
mov
int
mov
or
push
loopne
xchg
inc
es
roll
mov
enter
rcrl
test
add
xchg
add
xchg
or
push
test
cltd
or
add
in
in
movl
sub
in
int3
inc
lods
inc
cwtl
xlat
add
mov
mov
inc
sti
or
push
add
or
push
dec
xchg
add
into
or
inc
imul
dec
add
leave
pusha
inc
repz
repz
call
outsb
inc
sbb
xor
cmp
mov
movsb
sbb
mov
into
shll
arpl
scas
and
sub
add
das
std
rorl
or
aaa
outsb
in
or
xchg
rcll
sahf
xor
dec
adc
iret
push
mov
inc
cmp
push
dec
push
imul
xlat
cld
mov
push
movl
sarb
sub
call
push
loope
pop
adc
lret
arpl
das
in
mov
mov
rorb
sti
or
imul
pop
dec
pushf
loop
int
xchg
xor
mov
out
mov
repnz
adc
cmpsb
or
add
movsb
mov
mov
icebp
dec
test
jnp
xor
imul
arpl
stos
cwtl
outsl
test
add
xchg
cmp
adc
dec
push
inc
add
fldl
dec
pop
add
and
roll
scas
je
xchg
mov
xchg
sarl
sub
and
mov
scas
pop
repnz
adc
imul
fwait
xchg
mov
imul
mov
test
and
scas
fimuls
insl
mov
push
test
add
jg
test
mov
call
rorl
mov
cmc
jmp
mov
cmc
add
sub
repnz
movsl
lret
cwtl
add
hlt
xchg
jle
dec
and
mov
jle
and
sbb
ret
xchg
inc
iret
push
cmc
cmpsl
movsl
inc
icebp
push
add
cli
adc
add
push
add
or
fmul
test
xchg
scas
das
sbb
lds
mov
fwait
enter
jns
stos
mov
inc
movsl
cmpsl
in
pop
ret
mov
jno
loopne
sahf
or
mov
cmp
xor
dec
xchg
fxch
inc
adc
loop
push
mov
sti
sbb
ljmp
fs
in
mov
rorb
xchg
add
add
fisttpl
stc
or
repnz
xchg
xor
data16
mov
clc
bound
in
fbld
lock
fdivs
imul
push
mov
lds
cmp
aaa
shlb
dec
int3
ret
and
cmp
cmpsl
dec
push
push
pushf
adc
test
xor
outsl
shll
icebp
shr
loop
xor
dec
adc
adc
call
insb
scas
xchg
test
gs
mov
add
adc
and
adc
lds
mov
jae
inc
into
xchg
shrb
pop
dec
ret
shrl
sbb
scas
dec
daa
insl
cltd
or
es
vmwrite
mov
in
hlt
dec
cmp
mov
inc
mov
push
dec
in
inc
imul
roll
call
dec
sbb
push
add
sbb
xchg
xchg
jnp
out
leave
add
in
cmp
loope
add
loopne
hlt
outsb
cld
cmpsl
in
into
jmp
cmp
negb
or
popf
or
xor
adc
shrl
mov
mov
nop
sub
mov
dec
pop
scas
pop
cmpsl
ja
in
popa
shrl
lea
insb
inc
and
push
inc
mov
adc
inc
call
sub
and
push
bound
cltd
loop
inc
push
add
lock
push
std
mov
dec
in
and
loopne
or
sbb
inc
repz
cld
aam
je
out
inc
leave
mov
pop
cwtl
xchg
jmp
popf
je
pop
cmp
pop
addr16
adc
or
scas
xor
push
ss
mov
push
bound
mov
or
cwtl
and
test
dec
test
cmp
lret
enter
jo
mov
cmp
mov
daa
cmpsb
add
sbb
sbbl
data16
inc
mov
push
dec
xchg
das
mov
fcompl
sub
push
movsl
xor
imul
sbbl
xchg
rcpps
adc
shrl
subb
add
test
adc
in
pop
dec
andl
add
jl
adc
enter
push
icebp
sbb
jbe
fldl
or
dec
arpl
iret
fsubl
movsb
leave
enter
loope
andb
pop
ret
int3
dec
push
jmp
or
adc
ja
lds
mov
mov
pmulhw
js
add
sti
add
or
mov
outsb
and
dec
xor
pop
aam
cwtl
mov
xchg
pop
adc
pop
dec
rcrl
addl
pop
divl
test
ja
adc
sbb
adc
jmp
out
imul
shll
jns
adc
cmp
ja
jmp
xchg
test
jmp
or
adcb
adc
sarb
xchg
popf
test
add
pusha
gs
sbbl
xor
inc
adc
in
xor
pop
push
test
adc
imul
lcall
push
dec
in
or
jle
aaa
sbb
add
push
shll
cmpsl
dec
inc
add
popf
mov
pop
nop
mov
scas
mov
shrl
push
es
and
in
rcr
push
mov
int
or
mov
sbb
out
gs
xor
or
addl
cmp
add
aas
int
add
or
fbld
add
dec
lods
xor
push
xchg
sbb
sub
mov
pop
inc
pop
mov
cmp
jb
mov
stc
push
in
orl
sub
scas
mov
orl
fcomps
subl
or
gs
cmc
add
mov
push
fiadds
int
popa
pusha
lods
mov
inc
inc
push
outsb
push
arpl
out
mov
les
jae
in
out
bound
jnp,pn
mov
jecxz
loope
adc
cmpb
and
dec
xor
xchg
add
xor
adc
jae
cmpsl
loopne
jns
lea
cltd
mov
pop
enter
fsts
xor
sbb
xchg
push
and
fldt
movb
aad
push
dec
mov
std
sti
adcb
aaa
mov
cmpb
ret
inc
add
and
sbb
push
cltd
mov
xchg
int
fcomp
test
inc
sbb
sbb
mov
inc
movsl
dec
sub
sub
sbb
jmp
mov
mov
push
inc
inc
addr16
addl
jne
cmp
cmp
cmp
mov
jle
adc
loope
lret
stc
roll
pop
outsl
out
and
fs
imul
call
andb
pushf
iret
insl
imul
inc
push
push
das
mov
aas
push
jp
enter
fs
std
dec
push
in
add
cmp
adc
sbbl
xchg
fimuls
push
pushl
and
imul
mov
cli
cmc
test
test
outsl
add
mov
lds
pop
xlat
jg
xor
rclb
add
mov
adc
add
test
cmpsb
mov
mov
dec
sbb
leave
xor
loope
xor
lcall
or
in
andl
dec
xorb
jo
sarb
js
enter
vcomiss
lock
je
adc
or
daa
loope
lahf
mov
cmp
std
lock
repz
add
int
nop
adc
add
rorl
xchg
mov
movsl
into
test
xchg
ffreep
mov
cmp
cmpsl
mov
mov
xchg
adc
aam
aaa
sbb
insl
sahf
mov
test
stos
loop
adcb
lods
cmpsb
xor
mov
cwtl
mov
jne
jge
out
dec
imul
or
hlt
dec
ror
sbb
out
dec
mov
cmp
dec
inc
xchg
xchg
mov
sbb
shlb
xlat
aaa
js
insl
mov
inc
cmp
enter
mov
sub
push
ret
scas
push
jge
bound
mov
inc
pop
mov
addl
cmp
sub
push
mov
xchg
data16
xlat
adc
fldpi
xchg
adc
xchg
loope
mov
outsl
or
insl
sarb
mov
mulb
push
push
mov
mov
sbb
push
xchg
lods
fldl
add
dec
loopne
cmp
adc
das
data16
rol
ljmp
mov
cld
sub
jl
faddp
cmp
fwait
les
mov
xchg
dec
dec
fucomip
xchg
loopne
dec
imul
lock
insb
fsubr
mov
pop
fwait
aaa
mov
int3
adc
test
test
lock
popf
lock
adc
adc
mov
inc
sbb
movsl
mov
popa
enter
sub
push
xlat
push
or
push
je
jl
mov
dec
or
stos
or
std
jg
fldl
mov
adc
xchg
mov
jns
push
jle
test
pusha
es
cmp
jo
or
jge
adcb
test
pop
test
call
loop
ja
inc
loope
stos
cmp
or
call
xchg
loopne
mov
lret
lea
lret
pop
lea
ljmp
inc
xchg
or
inc
sbb
cld
xchg
movsb
outsb
add
ljmp
xchg
daa
pushf
js
outsb
adcb
mov
ret
stos
pop
sub
cmpsl
divb
lcall
js
mov
test
adc
jbe
ret
or
xor
adc
cmpsb
add
adc
shrl
fsubs
f2xm1
hlt
adc
dec
inc
mov
cmp
dec
or
mov
sbb
jno
fadds
stos
pop
or
cwtl
pusha
cmp
es
stc
or
out
jns
xor
cmp
je
scas
mov
jbe
lcall
ret
pushf
stc
xchg
lds
mov
jg
pop
sbb
xchg
xchg
leave
shlb
nop
test
arpl
std
pop
call
vmread
mov
pop
adc
push
shr
push
adc
cmp
ja
inc
test
inc
jp
or
dec
scas
sub
mov
pushf
loope
mov
lea
adc
mov
add
test
mov
xchg
out
xor
call
aam
pop
push
and
mov
pusha
mov
pop
les
pop
into
aam
mov
mov
sti
das
mov
jb
sbb
std
push
xchg
pop
mov
dec
sarl
out
jns
adc
out
in
adc
pop
and
push
xor
inc
add
push
adc
test
dec
xor
xchg
leave
jb
mov
in
sbb
sub
ss
pop
pop
or
loope,pn
fcomp
ret
push
xchg
fsts
rcr
lock
mov
xor
sbb
sub
rcrl
shll
call
xchg
lock
loopne
rorl
fisttps
rcrl
mov
xchg
fcmovnbe
cmpsb
mov
es
push
divl
mov
sti
loopne
push
fmuls
and
les
mov
sub
sub
pusha
test
shll
loope
jo
das
dec
js
aam
or
outsb
mov
cmpsb
xlat
lret
mov
sti
jmp
inc
jo
fs
or
push
loope
mov
loope
or
jp
insl
out
out
or
sub
mov
sbb
pusha
in
inc
xor
in
jg
adc
xor
mov
cltd
dec
push
mov
xchg
pop
rol
mov
loop
aaa
mov
jle
mov
dec
pop
js
or
and
scas
dec
cld
sub
jns
in
out
hlt
outsb
dec
insl
pop
sbb
out
loop
loope
mov
sub
in
daa
xchg
fs
and
icebp
mov
mov
sbb
lret
ljmp
enter
xchg
scas
mov
movsb
jg
add
fadds
mov
inc
inc
push
lds
idivb
fimuls
data16
mov
stc
mov
mov
je
lods
adc
loope
dec
adc
pop
xor
je
test
loop
jnp
rcll
push
sar
mov
xchg
in
sbb
out
test
push
pop
mov
lcall
les
je
push
mov
adc
leave
in
popf
sbb
sub
adc
dec
adc
fisubrs
out
mov
scas
inc
adc
adc
adc
inc
popa
out
push
scas
pop
fcmovne
pop
fldt
add
jl
shll
roll
lret
lods
fsubr
les
sub
dec
inc
cld
or
inc
adc
mov
int
stos
dec
fists
into
js
add
insb
enter
cwtl
dec
iret
clc
out
and
lret
mov
push
in
push
rolb
loop
rolb
inc
adc
int
jmp
lea
jge
push
inc
xchg
pop
roll
outsb
jae
mov
or
jg
and
fisubrl
jo
addb
aam
lods
sarl
cmpsl
mov
push
lods
inc
adc
xchg
sbb
push
push
mov
xlat
test
cltd
sar
fmull
test
jle
jns
in
int
in
jg
rorb
aam
pusha
mov
sub
and
or
xchg
add
ss
mov
dec
xor
xchg
rorl
out
jnp
sub
cld
adc
mov
jnp
add
pop
or
roll
pop
adc
rorl
pop
out
dec
xchg
add
pop
or
lea
cmp
sub
fbstp
and
lcall
push
adc
push
mov
bound
rol
leave
lock
fcmovne
jne
mov
lcall
leave
shl
push
and
int
mov
incl
cmpsb
or
insl
pop
test
pop
dec
in
out
in
fdivs
mulb
sub
repnz
daa
add
adc
and
mov
imul
cmp
ja
ret
in
shlb
push
ljmp
sub
dec
stos
je
rorb
lret
add
xchg
cmp
cmp
icebp
pop
negl
stos
inc
push
popa
je
mov
nop
or
push
ss
jae
jbe
stos
movsb
in
mov
dec
ret
roll
xor
shll
dec
pop
and
cwtl
addr16
mov
add
aas
and
rolb
dec
and
mov
sub
add
out
adc
ror
dec
sarl
or
mov
out
xor
stos
ss
adc
jne
testl
popf
hlt
popf
subl
jle
popa
stos
or
test
dec
xchg
in
inc
push
cld
fsub
mov
push
cwtl
das
cmp
mov
rcr
jb
push
repnz
jno
push
je
mov
mov
sbb
fcmove
pop
imul
add
dec
xor
test
adc
cmp
sbb
iret
movsb
xchg
push
dec
xor
push
shll
imul
sbb
je
xor
adcl
scas
lds
jno
or
or
aaa
pop
push
adc
and
mov
or
sbbl
dec
daa
test
lock
faddp
push
pop
lea
leave
xchg
incl
cmp
in
mov
flds
in
test
sub
imul
or
std
bound
ret
out
repnz
dec
pop
add
mov
add
jae
popa
push
add
fldt
sbb
jecxz
movsb
inc
fnop
inc
adc
dec
xchg
inc
mov
das
in
jg
les
lods
push
inc
into
push
add
lcall
lea
test
adc
push
xchg
xchg
shll
nop
cmp
mov
push
popf
aaa
leave
push
aas
and
adc
jo
jg
inc
mov
mov
fcomip
ret
ja
xor
xrstor
jp
or
test
lods
aad
enter
loopne
call
mov
or
inc
push
mov
mov
mov
xor
hlt
inc
stos
add
mov
jl
rcrb
jle
inc
cmpsb
mov
fisttps
int3
pop
add
add
test
outsb
xchg
pop
cmp
add
inc
stos
hlt
sbb
jns
or
mov
ljmp
add
mov
sbb
xchg
idiv
mov
bound
shrl
dec
push
push
sbb
add
aas
cmp
ret
lea
push
jmp
pop
jg
aaa
jo
ror
inc
popa
sti
mov
inc
or
dec
lds
or
ds
xor
pop
jno
andl
add
dec
jl
insb
inc
bound
cmc
sub
enter
pop
shl
jg
fisttpl
test
pop
jne
mov
xchg
or
js
mov
push
push
push
mov
ss
shrb
xchg
clc
add
les
loop
inc
fnstenv
pushf
call
insl
test
sarb
adcb
push
fadds
inc
repz
lcall
loope
movsb
dec
pmullw
sub
or
out
sub
xlat
or
add
and
rcrb
std
push
xchg
pop
lds
push
mov
push
adc
ljmp
cltd
push
rcl
lahf
rcll
inc
lcall
cmp
data16
or
enter
inc
sub
popf
fwait
hlt
xchg
ret
aam
and
decb
jb
or
lds
les
push
aam
sbb
or
sbb
adc
inc
lret
aas
cmp
push
sbb
cwtl
rcl
add
lock
loop
and
cs
pop
dec
in
sub
adc
cltd
xor
lock
mov
insb
popa
xorl
jle
fidivrs
add
sbb
pop
sub
test
out
inc
or
movsb
adc
fs
es
decl
sub
scas
psubusb
mov
daa
outsb
in
inc
orl
push
mov
aad
inc
sub
adc
inc
cmp
inc
aad
adc
dec
xchg
call
jne
jmp
rol
inc
sub
incl
inc
jge
mov
jmp
das
lods
movsl
sarl
adc
lock
and
adc
mov
stc
and
inc
xchg
rcrl
sbb
es
sar
popa
mov
repz
stc
mov
xor
inc
test
in
sbb
mov
call
xchg
mov
call
sti
add
add
add
adc
dec
sub
pop
stos
shl
inc
mov
test
movsb
fisubrl
mov
sbb
hlt
test
fisubl
std
dec
add
inc
add
mov
loop
jmp
lock
xor
nop
hlt
mov
fwait
ljmp
pop
fisubrl
mov
mov
add
int
mov
mov
pop
in
jp
adc
stos
mov
loope
mov
cmp
lea
mov
mov
clc
hlt
sahf
test
cmpsl
xchg
xlat
push
add
jo
add
and
aad
addr16
inc
leave
jbe
shl
and
dec
test
cmp
inc
mov
icebp
lds
scas
add
push
test
mov
dec
push
xchg
cli
lret
incb
in
xchg
inc
or
inc
mov
dec
or
ret
lds
test
in
xchg
mov
in
pop
pushf
pop
les
xchg
add
jmp
mov
ret
lods
aam
lret
add
popa
pusha
xorb
add
mov
inc
nop
add
xchg
dec
xchg
andb
add
xchg
push
mov
es
fcmovnb
add
dec
nop
or
mov
rolb
inc
stos
mov
clc
xor
add
cmpl
in
push
mov
into
xchg
add
test
or
add
push
add
bound
int
adc
int3
enter
int
dec
daa
add
dec
test
mov
nop
mov
test
or
lret
or
test
lret
les
fildl
xchg
push
mov
test
dec
mov
or
test
rcll
mov
jle
cmc
add
push
test
hlt
xlat
xor
inc
popf
and
inc
int3
or
pop
in
push
or
cmpsb
call
out
in
inc
dec
popw
dec
subl
jmp
sub
in
or
mov
cld
xchg
inc
inc
or
inc
leave
mov
or
pop
sbb
sahf
les
clc
test
push
dec
imul
repz
orl
test
add
or
cs
jmp
jg
cmpb
inc
adc
sbb
ljmp
stos
xor
vcvtdq2ps
call
pop
ss
cwtl
mov
sub
xchg
lahf
adc
dec
out
add
movsl
outsl
cmp
push
pop
sbb
outsl
out
in
xchg
loopne
inc
inc
mov
xchg
sbb
lea
or
or
sub
call
add
xchg
fistpl
mov
inc
push
xor
push
sub
sbb
sub
fsub
imul
xchg
hlt
gs
lods
out
clc
add
repnz
sbb
or
jle
pop
inc
or
add
addr16
out
jmp
outsl
fucom
pop
imul
cmp
xchg
outsl
popf
add
xchg
out
jns
loop
dec
out
push
inc
add
incl
sti
and
and
insl
aad
insl
lret
loop
mov
lock
hlt
dec
pop
mov
dec
jg
fsub
xchg
mov
cli
dec
xchg
sbb
mov
insb
xchg
into
jge
dec
add
adc
sahf
push
push
std
mov
mov
pop
xlat
pop
pop
or
les
loop
scas
enter
pusha
mov
cmpsb
int3
bound
test
loope
outsb
mov
in
inc
jmp
push
mov
sub
aaa
xchg
dec
cwtl
in
cltd
push
mov
mov
cmp
lret
lods
cmp
stc
je
scas
dec
ja
sub
subb
ret
nop
icebp
fildl
insb
mov
cmp
mulb
mov
jg
loopne
add
pop
sbb
out
clc
ret
test
xlat
cmp
push
inc
js
mov
scas
jp
les
into
pop
shl
scas
jg
daa
or
addr16
adc
sub
cmp
fimuls
in
pop
inc
sbb
rcl
dec
add
sbb
daa
rcrb
out
jp
sub
jl
jge
sub
push
ret
mov
mov
xor
scas
cmpsl
movsb
mov
jne
sbb
xchg
inc
imulb
xchg
adc
sub
xchg
jge
adc
pop
pop
movsb
cltd
arpl
push
loopne
xchg
mov
popf
stc
sub
jbe
add
adc
cltd
les
mov
adc
push
xchg
sub
ds
or
mov
xchg
adc
adc
add
sbb
es
pop
test
cmp
hlt
test
dec
mov
pop
daa
loop
outsb
loopne
add
nop
xchg
lret
stos
test
xchg
mov
mov
test
pushf
inc
xchg
in
aaa
xchg
lahf
mov
sub
adc
sbb
sbb
shll
push
fwait
addl
jmp
dec
das
jle
cmp
test
inc
add
mov
pop
push
cmpsl
xor
repz
add
test
imul
push
jno
movsb
call
mov
inc
cmp
sub
sar
jmp
xor
pop
rol
fdivrl
add
sti
fsubrp
popl
jns
and
in
lea
outsb
inc
jmp
in
movsb
sbb
in
or
mov
xor
cltd
frstor
push
cwtl
popf
fucomi
shll
cmpsl
adc
fwait
sub
rorb
icebp
or
xchg
pusha
adc
push
sbb
data16
insl
mov
bound
in
add
cmpl
xor
repnz
mov
push
lahf
idiv
pop
and
sarl
mov
sarb
mov
je
test
mov
or
pusha
dec
jecxz
sbb
lret
mov
call
mov
je
adc
and
add
xor
aas
ret
sti
dec
fbld
fs
adc
inc
xchg
dec
sahf
jl
out
rorb
add
testl
test
and
push
push
mov
xchg
adc
nop
sbb
daa
repnz
jge
pop
sub
mov
and
fxtract
xchg
xchg
loope
push
cmpsb
cmc
inc
xchg
push
mov
adc
xor
addb
out
push
clc
fsts
adc
add
xlat
call
mov
or
pop
or
dec
ss
and
jge
xchg
jb
fdivrl
xchg
sub
xor
icebp
adc
mov
scas
addl
fs
mov
dec
or
mov
or
sub
pop
imul
add
filds
pop
testb
inc
mov
adcb
call
adc
xchg
push
out
inc
xchg
adc
cmpsb
add
mov
rorl
adc
leave
lods
pop
mov
jne
jge
ret
call
dec
fisubrl
sar
jle
jno
add
jae,pt
sub
lds
outsl
je
aam
fcompl
lods
cmp
xlat
push
cmpsb
andb
add
xchg
jb
fadds
clc
cmp
mov
outsb
cmpsb
rcll
push
push
in
pop
or
or
jb
fs
xor
outsb
sub
enter
push
or
aas
das
popa
data16
add
and
cwtl
daa
sbb
xlat
sbb
test
xchg
adc
push
adc
std
cmp
dec
cwtl
enter
out
cmp
gs
das
mov
dec
xchg
out
push
pop
xor
pop
or
shl
outsl
dec
stos
adc
cmp
xor
add
inc
dec
or
fcos
mov
xchg
sahf
jp
mov
and
mov
in
push
mov
pop
add
xchg
push
inc
test
je
and
fdiv
push
jmp
pop
sbb
xchg
mov
imul
xchg
pushf
xchg
in
add
sbb
jne
sub
adc
adc
int3
enter
sti
xchg
dec
add
add
pop
out
out
mov
mov
xchg
mov
ret
vmovntdq
dec
in
dec
outsb
push
mov
in
add
jns
bound
push
les
xchg
mov
enter
test
aas
gs
push
fnstcw
pop
test
cmp
ds
movsb
loopne
mov
and
dec
popa
fidivrs
bound
push
js
cmpsb
aam
jns
in
addr16
lods
add
clc
cmpb
lea
pop
loopne
icebp
popf
jmp
mov
fbld
and
mov
and
lret
or
mov
xor
cmpl
pop
pop
out
push
mov
mov
adc
fs
ja
sbb
inc
lock
xor
mov
lea
xchg
pop
dec
neg
mov
aam
inc
xchg
popf
add
add
and
add
add
sbb
enter
lods
sbb
ret
ljmp
ss
pusha
pop
imul
pop
add
arpl
es
jns
into
sub
lods
jp
mov
xchg
addb
mov
push
adc
andb
pop
cld
sbb
je
in
dec
cmpsb
pop
stos
pop
addr16
adc
pop
cltd
push
data16
addr16
andl
test
mov
mov
int3
sub
leave
ret
out
cmp
mov
hlt
scas
adc
inc
add
fnsave
push
lods
adcb
inc
fidivl
roll
jno
push
fcmovnb
and
mov
mov
and
out
push
jmp
push
jne
fstp
test
and
inc
adc
mov
sub
and
aas
and
dec
push
mov
fcoml
mov
and
add
adc
jbe
cli
dec
jne
sbb
mov
adc
cli
or
and
add
mov
mov
insl
mov
movsl
repz
aas
in
es
push
rclb
js
nop
test
or
int
or
push
andb
inc
jle
and
adc
ja
clc
sub
cmp
mov
ret
fadds
mov
cmp
in
mov
je,pt
dec
jl
or
test
pop
outsb
push
rcr
push
out
add
sub
in
bound
cs
sarl
mov
adc
add
in
mov
add
rolb
xchg
xchg
into
mov
rorb
imul
xchg
mov
dec
jmp
ljmp
leave
ss
add
or
adc
fdivrl
loope
adc
imul
sbb
mov
inc
mov
sahf
inc
insb
cwtl
call
mov
xchg
inc
adc
stc
and
mov
icebp
xchg
into
repz
stos
js
or
mov
lcall
fdiv
cltd
and
and
test
mov
in
jns
arpl
sub
or
jmp
sub
sbb
das
loop
call
cmpsl
scas
xlat
xchg
fisubrs
or
cmpsl
orl
sub
in
inc
and
jmp
addr16
inc
rorb
in
sbb
enter
cld
lahf
sbb
decw
push
xchg
lock
js
add
adc
fs
out
fidivl
js
adc
daa
inc
add
xchg
push
and
rolw
fnstsw
es
jae
fsubrl
fxch
aad
nop
sub
xlat
mov
adc
insl
inc
es
mov
cwtl
mov
mov
or
and
jmp
add
sti
loopne
adc
nop
dec
jecxz
ficomps
test
jecxz
test
or
roll
roll
decb
pop
rcrl
push
fcom
mov
icebp
adc
and
je
or
rcl
nop
pop
aaa
mov
push
rcr
sbb
sub
dec
dec
in
jns
aad
or
les
mov
outsl
aaa
pushf
les
mov
sub
loope
lock
test
pop
mov
cltd
mov
call
add
jp
push
subb
xor
hlt
push
lock
je
lds
lods
jmp
test
mov
inc
aaa
fsin
dec
subb
adc
xor
fwait
jne
push
ret
loope
pusha
inc
mov
xor
pop
pop
iret
cmc
adc
scas
adc
testb
pop
shrl
sbb
add
mov
xor
sbb
mov
ret
stos
pop
mov
push
stos
cmpsb
and
ror
jl
sbb
aaa
push
hlt
jae
insl
or
push
stos
je
sub
jb
stos
xchg
rorb
jmp
or
add
sub
mov
inc
jge
cmp
xor
add
fnstsw
out
aad
pop
sub
lret
mov
fs
push
daa
cmp
adc
mov
mov
cmpsl
or
xchg
add
sbb
cmpsl
fwait
xchg
mov
xlat
ljmp
pusha
dec
jo
test
jecxz
adc
call
jo
shll
mov
pop
imull
pusha
dec
popf
xor
andl
inc
xlat
xor
cltd
popf
stos
les
lret
push
or
icebp
xchg
into
cmp
popf
add
ds
pop
mov
iret
cltd
and
lcall
push
sub
mov
loop
clc
jecxz
out
loope
mov
test
add
lea
aaa
out
push
or
sbb
xor
pop
jg
aaa
hlt
add
xchg
dec
or
mov
cli
shrl
shll
lret
mov
int3
or
or
xorl
and
out
pop
push
rcll
lahf
ja
adc
and
mov
ret
mov
pop
popa
pmuludq
cmp
int
sbb
pop
pop
push
je
pop
mov
mov
fisubrl
ror
add
mov
mov
fisttpll
lret
pushf
push
andl
mov
stos
scas
mov
ss
jb
sti
popf
adc
and
lret
inc
cmp
loopw
das
out
or
mov
add
cmp
jnp
lods
icebp
or
push
or
cwtl
scas
mov
or
out
cmp
sbb
icebp
repnz
xor
repz
mov
test
sarb
mov
mov
mov
jg
test
in
cwtl
mov
cmpsl
nop
subl
sbb
fcomip
cmp
stos
roll
mov
jge
add
xchg
xor
cmpsl
scas
cmp
dec
out
adc
adc
pop
int
cmpsl
fadd
xorb
popf
addr16
jae
pop
dec
add
inc
push
lods
or
xor
jb
mov
xlat
cmc
inc
or
imul
ja
xchg
inc
xor
push
jae
adc
sbb
sbbl
loopne
call
data16
pop
in
push
jl
cmp
and
repz
sub
movsl
jg
add
cmp
ljmp
mov
dec
sub
cli
stc
lods
dec
cmpsb
push
cmp
cltd
rcl
imul
cmc
loope
xchg
fnstcw
cmc
add
sbb
xchg
std
mov
jno
addr16
loop
enter
test
pop
or
jb
enter
adcb
add
ret
and
lret
je
pop
adc
mov
xor
scas
jne
xor
fstl
fdivs
into
roll
nop
call
sub
mov
loope
ss
or
and
add
sti
stos
push
add
and
rorb
iret
loopne
adc
mov
ficomps
xchg
icebp
fwait
jb
aaa
sbb
std
rcrl
ret
gs
ffreep
cmpsl
dec
dec
sub
mov
and
call
lds
jl
dec
adc
cmp
push
int3
pop
andl
gs
inc
or
xchg
push
aaa
inc
xchg
xchg
rcrl
adc
lret
and
jo
and
sar
xor
sbb
rclb
cmp
gs
pop
leave
imul
cmp
mov
lock
les
loopne
sbb
add
or
adc
addl
clc
jbe
or
add
repz
cmp
push
inc
in
cwtl
and
outsl
pop
in
daa
out
out
ljmp
jo
push
mov
int
sbb
pop
add
mov
into
adc
or
test
pop
in
dec
push
adc
jle
repnz
fimuls
fimuls
xchg
add
xchg
shl
adcl
and
jo
mov
dec
adc
or
jae
fildll
xor
mov
push
lea
dec
fiaddl
ret
lret
cwtl
mov
adc
bound
test
pushf
cmpsl
in
xchg
mov
loope
and
rorl
sub
cs
lret
ss
scas
push
rcll
mov
push
cmpsb
loop
adc
sbb
xchg
adc
fsubl
std
sbb
ret
outsl
adcl
jo
or
adc
je
dec
cwtl
or
mov
adc
and
pop
push
dec
and
mov
add
sti
or
add
adc
adc
mov
dec
push
popa
xchg
orl
push
sub
and
mov
xchg
push
adc
sbb
cmp
ss
xchg
add
pop
aas
cmpb
in
std
jge
fmuls
test
cmp
lea
cmc
add
inc
repz
sub
in
lahf
rcrb
sub
inc
mov
add
and
inc
cli
jb
adc
sub
pop
mov
repz
leave
add
mov
sbb
enter
fsubrl
mov
push
movsl
sub
xchg
daa
sbb
mov
or
insl
scas
testb
stos
mov
and
sbb
dec
int
mov
and
inc
mov
andl
movsl
xchg
leave
mov
shr
xlat
out
daa
add
mov
mov
adc
sarl
daa
mov
addr16
shl
add
roll
lcall
xchg
xor
movsl
loopne
sub
push
adc
or
pop
sbb
pop
les
nop
shrl
add
add
in
mov
mov
js
inc
add
adc
int3
test
pop
xchg
xchg
xchg
pop
push
push
adcb
sbb
add
or
or
fbld
sub
fdivr
mov
or
loopne
and
xchg
mov
insl
and
pop
scas
cmp
push
loop
mov
jmp
sbb
adc
aam
popf
dec
negl
cmp
mov
adc
adc
loope
test
or
sub
mov
leave
jb
push
aaa
je
subb
mov
cmpsl
out
int
push
popa
out
or
sub
mov
or
lret
popa
mov
mov
lea
or
ret
push
jl
orl
lea
rcrb
outsb
in
arpl
mov
jle
int
cmp
fidivrl
repnz
xchg
in
mov
xchg
cs
out
cmp
xchg
xlat
int
rcll
aaa
loop
mov
pusha
mov
cld
cmpsl
pop
inc
test
or
and
or
lds
ja
push
loope
push
repnz
rorb
push
int
inc
ds
and
aad
fs
jmp
add
jb
fisttpl
fabs
insl
or
hlt
out
out
xorb
in
add
mov
ss
mov
and
lds
jg
dec
imul
loope
sub
pop
cmpsb
sub
ret
shrl
mov
xor
fstpl
addl
add
push
cmp
pop
stos
test
adc
call
cmc
subb
cmp
bound
sar
loop
add
fsubl
daa
or
xchg
movsl
push
and
ss
pop
loope
add
shr
mov
jnp
mov
hlt
je
mov
xchg
push
push
push
mov
imul
pop
decl
pop
xor
das
cmp
sti
pop
mov
nop
scas
aas
cmp
adc
pusha
add
icebp
adc
jmp
or
xor
leave
dec
arpl
aad
push
mov
outsb
nop
xor
xchg
xchg
or
mov
jo
xchg
cmp
loope
outsb
ss
cmp
mov
pop
pushf
test
mov
xlat
push
cmpsb
inc
hlt
lods
dec
daa
or
addr16
cmp
ret
cltd
fstpt
push
mov
mov
pop
xchg
add
mov
push
lds
mov
and
xlat
mov
test
bound
adc
fnsave
pusha
sbb
push
in
int
adc
pop
mov
push
xchg
or
sar
insb
pop
test
shr
mov
jg
fstpt
adc
adc
jb
lea
jecxz
clc
dec
jmp
es
fiadds
in
pushf
rcll
or
mov
inc
testl
fidivs
lds
adc
cmp
stos
cmpsb
js
jecxz
out
and
test
xchg
add
cmpsb
aad
leave
outsl
or
imul
rclb
inc
inc
out
rcrl
in
push
mov
xchg
fcomip
inc
xchg
shl
or
test
jecxz
dec
adc
mov
ljmp
and
pop
xchg
mov
outsw
adc
test
adc
mov
cmp
add
inc
std
shlb
lds
cmp
push
ss
and
push
mov
lods
aaa
aaa
adc
addb
cwtl
lods
dec
xor
std
pushf
repnz
cmp
sbb
iret
mov
inc
fcmovnu
dec
push
aam
je
loopne
inc
pop
sbb
cmp
or
dec
mov
in
lock
lret
sbb
scas
test
loope
or
jecxz
loop
mov
rclb
flds
dec
xchg
pop
sub
jbe
lock
imul
xchg
roll
out
rolb
xor
fisubl
ja
cmp
or
bound
dec
lea
and
std
gs
push
aad
adc
lods
jle
sbb
xchg
gs
mov
iret
lret
jb
loope
outsl
loopne
lds
jnp
mov
ljmp
ss
push
dec
icebp
pop
ja
fs
xor
mov
fmul
shr
push
jmp
ljmp
nop
bnd
shll
jnp
repz
cmp
ret
fwait
add
fcoms
lea
flds
xchg
dec
or
sbb
dec
mov
push
mov
dec
int
and
bnd
and
xchg
in
mov
shlb
in
fisubl
testb
mov
lock
or
shll
imul
lea
je
and
adc
pop
push
mov
sub
movsl
add
orl
loope
sub
aaa
ds
dec
mov
sbb
jb
or
mov
mov
jne
enter
popf
push
xchg
dec
inc
cmp
andl
push
stos
push
movsl
test
incb
ror
mov
or
mov
fmuls
int
inc
add
add
sbb
ret
in
and
cmp
orl
adc
sbb
xchg
fstl
pop
adc
pop
test
das
and
insl
sub
pop
add
sarb
ss
iret
mov
pop
push
les
repnz
jae
jg
xlat
inc
scas
loope
adc
jp
test
cli
cltd
hlt
dec
sbb
mulb
lahf
pop
test
push
popl
jne
pop
sbb
mov
fnstenv
mov
out
mov
popf
fbstp
ljmp
pop
xchg
xor
xor
adc
loopne
addr16
out
aas
add
loope
ficoml
xchg
jmp
mov
aas
leave
inc
xchg
jbe
push
in
lret
mov
jecxz
hlt
add
pushf
test
test
fcmovne
mov
out
inc
push
push
loop
ja
hlt
inc
out
jbe
xchg
jl
out
jno
int
aas
test
mov
sub
xchg
mov
pop
test
adc
sub
xchg
fcoms
imul
push
add
mov
mov
mov
push
sbb
addl
repz
add
popf
add
mov
add
fwait
add
jne
addl
pop
push
addl
mov
bound
push
mov
push
jmp
repnz
adc
dec
test
adcl
xchg
sbbl
and
lea
arpl
pop
add
inc
push
mov
sti
mov
sbb
pop
adc
push
mov
add
stos
test
xor
fs
fisttpll
repz
test
test
or
mov
ret
sub
xchg
lds
pop
or
in
add
aas
rorl
fstps
or
fldcw
ret
dec
mov
ja
or
or
aad
les
xchg
int3
dec
int3
dec
sub
inc
test
hlt
or
mov
std
in
fs
dec
in
inc
out
js
aam
enter
dec
sub
xchg
dec
adc
sbb
add
mov
pushf
and
jmp
add
xor
inc
aam
pop
into
xor
pusha
add
or
inc
push
lea
or
lret
add
dec
adc
lds
xlat
inc
in
movl
cmpsb
mov
add
push
lret
orb
or
sbb
sbb
sarl
imul
mov
clc
sub
dec
mov
adcl
xchg
adcl
roll
push
mov
incl
es
orl
inc
nop
xchg
add
mov
add
and
push
or
push
add
sbbb
lret
test
adc
ja
mov
jns
pop
cmp
aaa
loope
push
daa
xor
clc
dec
testl
leave
push
mov
mov
add
sbb
dec
dec
pushf
lea
in
sbb
xchg
mov
rol
pop
scas
lea
adcb
lcall
ficomps
jle
gs
push
test
inc
mov
shrb
das
cli
dec
shll
or
adc
adc
push
test
add
mov
cmp
test
je
add
mov
dec
mov
jmp
lods
sub
ret
mov
leave
pop
hlt
loopne
ror
and
aaa
or
dec
xchg
or
mov
leave
xor
clc
bound
adc
fwait
push
jbe
or
and
inc
jle
push
cmpb
fwait
repnz
add
xchg
cltd
cs
xchg
or
in
lret
pop
inc
das
mov
aam
popf
pusha
and
dec
push
rorb
mov
sarb
inc
cltd
or
pop
js
mov
fsubr
faddl
jae
add
add
fsts
lahf
loope
add
sahf
test
and
sub
mov
fstps
gs
mov
scas
sbbl
pop
adc
inc
mov
mov
movzwl
cmp
xchg
mov
rclb
cmp
repnz
push
sti
ja
sahf
bound
fmull
and
adc
xor
into
mov
lret
adc
jle
mov
lcall
xchg
push
sub
loop
pop
pop
dec
dec
dec
and
jge
outsb
sbb
jne
cmp
or
sub
stc
push
popa
xor
mov
push
loopne
mov
lods
mov
push
lahf
add
mov
loope
pusha
add
outsb
sub
pop
mov
arpl
int
mov
imul
lcall
xor
stc
andl
or
shrb
arpl
cmp
psraw
jmp
subl
ds
ss
pop
pop
ds
pop
aaa
push
loop
cmpsl
lea
dec
out
imul
xor
jmp
stos
jmp
lock
cmpsl
mov
pop
call
enter
mov
xchg
je
inc
push
pop
cmpsl
adcb
sub
adc
add
test
cmpsb
sbb
xchg
shlb
sbb
push
inc
xchg
aam
jb
adc
test
js
and
ss
pop
pop
push
sub
adcl
andb
in
into
push
ljmp
xor
push
subl
daa
mov
das
xor
fsubr
cmp
sbb
and
pusha
mov
jnp
lds
inc
hlt
and
mov
adc
sub
sub
jb
insl
jg
sub
add
les
adc
hlt
insb
dec
xchg
jno
jo
pop
popf
loope
pop
inc
cld
jge
mov
ret
xor
scas
into
out
insl
notb
rcll
pop
aam
lahf
mov
movups
mov
adc
divl
icebp
adc
js
push
pop
sub
add
mov
fsubr
leave
xor
push
std
dec
mov
cmp
js
jae
int
lea
fs
and
mov
pusha
fnstenv
or
fs
jne
js
je
inc
cli
xchg
arpl
mov
cmovle
imul
mov
push
repnz
data16
mov
je
icebp
xchg
cmpsl
adc
in
inc
mov
lock
cmp
in
fcompl
cli
test
or
xchg
pop
outsl
push
jne
jle
rorl
push
mov
push
xor
call
lods
pop
pop
mov
fs
cmp
jo
pop
fiadds
mov
in
js
or
jle
cmp
mov
jo
lods
lahf
cmpsb
into
ret
shrl
jno
mul
iret
cmpsl
jle
jmp
and
in
jle
ljmp
lock
inc
das
shlb
fistl
push
mov
shl
jp
xchg
iret
fsubrl
fsubs
add
sub
fnstenv
or
cltd
push
push
xor
adc
dec
insl
push
pop
outsl
sbb
adc
cli
lods
test
js
pop
add
mov
push
int
pop
rcll
inc
mov
cmp
rclb
cmp
mov
pop
lahf
sub
mov
int3
mov
cmp
int
xchg
dec
cwtl
sbb
mov
je
add
mov
lret
enter
mov
sub
lret
bnd
adc
ss
data16
pop
cltd
mov
and
adc
aad
mov
mov
sbb
and
adc
adc
inc
add
mov
xchg
ror
fwait
ret
dec
loopne,pt
or
push
movups
add
push
xor
and
pop
jg
mov
push
scas
mov
cmp
testb
mov
call
xor
mov
xchg
out
cli
in
inc
push
jl
dec
push
dec
mov
add
sub
pop
pop
mov
push
mov
adc
mov
imul
push
call
xchg
xlat
addl
addr16
push
add
aaa
mov
or
cli
jae
out
in
dec
cmp
fcmovne
pop
jmp
fisubl
inc
or
cltd
xchg
js
cwtl
push
cmp
mov
pushf
and
loope
cltd
mov
cmp
roll
push
aaa
in
scas
subl
leave
xchg
fnstenv
push
imul
pop
push
popa
jle
sbb
out
stc
dec
rcll
mov
call
dec
loope
and
cltd
push
cmp
iret
jae
xor
jg
aas
es
add
push
push
scas
gs
dec
and
imul
add
xchg
enter
mov
add
call
lock
pop
mov
pop
test
dec
shlb
add
jbe
pushf
adc
xchg
jne
test
push
or
add
xchg
loopne
out
ljmp
push
rcrl
fdivrs
hlt
in
mov
xlat
aas
lods
ret
repnz
subl
push
scas
adc
and
cmp
loop
adcl
add
orl
pop
fnsave
sbb
shrl
mov
and
xchg
jo
addr16
jae
andb
rcll
push
jle
mov
or
test
mov
adc
and
sub
add
or
imul
pusha
mov
and
lahf
repnz
push
sbb
ret
adc
and
dec
bound
dec
jo
in
imul
les
inc
dec
adc
popf
fdivr
mov
movsb
cltd
pop
loope
adc
add
push
nop
outsb
test
jl
inc
adc
jns
and
test
test
push
lock
sahf
pop
pop
add
mov
add
push
enter
inc
aad
mov
xchg
or
dec
mov
add
inc
push
out
jp
mov
cwtl
mov
xor
jb
cltd
push
scas
pop
xchg
ss
clc
popa
roll
enter
test
cmpsb
mov
cmp
ja
jmp
pop
or
jae
out
lea
push
jecxz
xchg
frstor
push
inc
test
out
jmp
in
fisubrl
push
pop
jne
add
or
xchg
repz
and
aas
daa
scas
cmp
push
scas
cwtl
das
in
test
or
mov
dec
ficoms
push
test
sahf
shrb
pop
mov
rcrb
lea
add
pushf
pop
stc
or
xchg
xor
stc
lea
push
mov
aaa
vpunpckhwd
in
adc
adc
sub
movsb
add
ds
mov
cmp
xchg
and
and
shlb
and
xchg
or
inc
movsl
scas
jbe
insb
xchg
js
xchg
sub
fiaddl
pop
iret
cmp
sub
mov
loope
sub
mov
mov
inc
and
add
mov
fsubrs
ds
aad
and
jnp
aad
add
push
js
add
sub
loope
rcrl
mov
mov
cs
dec
xchg
lret
pop
sub
pop
sbb
add
rolb
loope
adc
mov
mov
pop
in
push
dec
outsb
adc
imul
add
push
and
xchg
stos
inc
cmc
cmp
pop
dec
sahf
stos
and
in
mov
js
xor
or
loop
addr16
stos
jmp
frstor
sbb
rorb
adc
test
or
jnp
mov
cld
rolb
push
leave
cmpl
mov
or
rolb
std
mov
ds
cmc
in
adc
sbb
pop
dec
out
sbb
hlt
flds
cwtl
push
aad
rcll
mov
mov
lds
pop
xchg
arpl
mov
cltd
cmpsl
xchg
pop
mov
dec
cmpsb
hlt
cld
popf
dec
mov
or
leave
mov
pushf
xor
or
mov
adc
push
xchg
mov
and
xor
dec
js
sub
je
fstp
daa
or
mov
in
add
and
cli
loop
popf
pop
sbb
cmp
push
loop
dec
mov
xchg
adc
inc
adc
or
mov
adc
mov
nop
xchg
setge
push
sbb
xchg
xorb
and
inc
fisubl
inc
push
mov
enter
pop
adc
mov
jo
mov
cmpl
sbb
rol
sbb
jne
mov
and
mov
in
or
mov
pushf
pop
sbb
add
shlb
jbe
ss
mov
es
sub
cltd
push
cmp
mov
int
pop
xchg
testl
inc
xchg
push
xor
rcrb
xchg
xlat
call
gs
and
add
cmpl
mov
and
pop
mov
mov
test
insl
xchg
mov
icebp
xor
pop
fwait
and
sbb
dec
scas
xchg
or
jmp
out
dec
mov
pop
mov
repz
in
add
outsb
mov
fmuls
fistpll
loop
mov
leave
lods
aaa
shr
cmc
dec
inc
cltd
add
inc
cmp
push
stos
nop
ja
push
popf
orl
mov
or
idivl
outsb
test
xchg
adc
enter
stos
cmpsb
mov
ljmp
or
sbb
test
cwtl
mov
inc
sbb
je
jbe
cwtl
adc
aaa
add
mov
and
push
push
mov
adc
enter
rorl
mov
add
fdivs
push
jo
imul
mov
insl
mov
outsb
in
pop
daa
jb
and
xor
add
outsb
mov
cld
nop
mov
xor
bound
adc
fadds
mov
xchg
inc
cli
jb
add
int
mov
stos
or
int
rolb
mov
adc
fisubl
insb
fsubr
mul
mov
test
movsl
and
dec
sti
sub
xchg
add
fwait
out
aaa
lcall
xor
out
pop
fs
xor
and
sbb
push
mov
xchg
pop
lods
ds
add
shlb
jle
in
cld
ficompl
popf
mov
cmp
sbb
push
xlat
in
lds
push
or
inc
cmp
mov
adc
out
pushf
enter
jmp
pop
xlat
test
stos
add
into
popf
lods
test
add
adc
mov
dec
je
imul
cmpsb
and
in
repz
pop
and
or
dec
aaa
nop
push
sbb
js
shll
dec
mov
push
xchg
inc
stos
push
push
xchg
mov
cmp
cltd
jbe
scas
int
jb
push
pushf
mov
mov
mov
xchg
mov
lds
xchg
nop
imul
adc
jg
mov
push
leave
and
clc
aam
add
std
mov
out
mov
push
push
test
push
test
jg
movaps
dec
add
in
hlt
call
or
add
test
pop
xchg
or
xchg
stos
push
mov
enter
mov
addl
push
push
xchg
add
inc
aam
and
dec
push
push
xchg
addl
push
ret
xchg
lock
xchg
call
popf
and
pop
xor
rorb
inc
sahf
lods
test
jge
or
push
mov
leave
cwtl
dec
mov
push
dec
add
add
or
add
adc
xchg
inc
xor
jle
sbb
mov
test
les
int3
dec
les
fadds
and
add
sub
mov
int3
sub
hlt
jp
ret
sub
aam
mov
mov
mov
cmc
into
call
jae
pop
or
or
xchg
ret
mov
push
call
inc
pop
xchg
aad
mov
andb
xlat
test
addl
push
mov
add
jbe
or
addl
test
addb
in
imul
or
ret
sti
test
inc
mov
mov
pop
outsb
xchg
jle
popf
jg
pop
mov
adc
scas
fs
lret
or
adc
aad
dec
movb
mov
sbb
dec
lea
clc
test
xchg
ret
adc
lret
or
add
xchg
dec
jmp
pop
push
sti
or
leave
pop
movb
jg
xchg
call
lds
sub
jle
ret
jmp
out
jg
test
push
add
sub
jnp
push
ret
or
jg
xchg
roll
test
mov
cmpl
dec
sbb
jg
insb
rcrl
aaa
sbbl
add
or
jecxz
pop
cmp
shll
cli
adc
jg
mov
dec
mov
fmuls
sub
inc
adc
icebp
loope
sbb
bound
jg
pop
ret
lea
icebp
adc
or
arpl
xchg
sahf
mov
xor
push
push
or
pop
jg
pop
mov
cmc
pop
pop
ret
je
int
int
repnz
rclb
sub
les
shl
jb
lret
add
lret
sti
fdivrl
push
movsl
or
inc
xchg
popa
in
jg
or
or
cmp
test
or
add
popa
movsb
add
pusha
adc
lret
sub
in
loop
mov
adc
fdivl
xchg
orl
int
xor
into
shr
push
cwtl
in
cmpb
mov
faddl
adc
inc
pop
fnstsw
ss
jmp
mov
sub
fistps
icebp
imul
jns
jl
aad
test
shlb
sbb
aas
mov
mov
dec
add
push
popa
pop
add
xor
sbb
push
xchg
add
jnp
mov
icebp
pop
ja
push
cld
adc
jno
scas
pushf
cmp
xchg
cmp
popf
xor
ror
enter
nop
fcmovnbe
xchg
popf
mov
lock
or
js
add
movsl
mov
xor
outsl
pop
mov
mov
daa
sbb
dec
xchg
push
pop
jne
in
or
enter
fiaddl
mov
mov
sub
or
movsb
loopne
push
xchg
or
dec
lahf
hlt
or
add
jns
les
in
push
outsb
jno,pn
dec
mov
daa
mov
sub
test
dec
lahf
sbb
in
add
lds
jb
add
lea
lds
bound
in
into
pop
pop
mov
cmp
cltd
iret
shll
mov
es
arpl
aam
lods
sahf
bound
adc
jl
pop
popa
fildll
push
dec
aad
push
mov
movsl
rcll
xchg
fildll
pop
popf
adc
paddsw
adc
xchg
xchg
xchg
mov
mov
and
ret
dec
cmp
sub
fsts
push
imul
orl
add
jmp
imul
adc
shrl
push
hlt
test
test
sbb
jl
mov
loope
or
lret
popa
push
adc
fstps
pop
adc
inc
mov
xchg
pop
or
inc
leave
stos
pop
in
inc
xchg
pusha
mov
adc
mov
aas
imul
ljmp
xor
xchg
imul
xchg
lods
lods
ret
cltd
cmp
out
adc
scas
in
shll
les
hlt
sub
stos
or
call
xchg
sub
daa
mov
negl
and
insb
pop
jne
inc
push
xchg
xchg
stos
lock
ret
sub
loop
into
mov
dec
sti
pop
sbb
pop
out
mov
test
mov
shrl
fistpll
addb
jle
mov
mov
and
xchg
ss
iret
mov
inc
cmp
popf
push
mov
hlt
lahf
add
and
in
add
mov
mov
push
or
lea
push
test
add
add
addr16
mov
leave
daa
jle
jmp
cmp
and
mov
flds
or
cmp
push
rorl
loope
fldt
or
add
std
decb
gs
sbb
adc
sti
mov
into
sbb
pop
int3
ljmp
leave
inc
fcomps
push
bound
popa
jnp
mov
addr16
jmp
add
mov
mov
call
popf
mov
dec
cmp
clc
add
dec
dec
add
imul
stc
out
adc
mov
sarb
leave
mov
mov
loop
lcall
pop
pushf
mov
pop
xchg
jl
pop
les
adc
lods
in
inc
push
popa
cmpsb
imul
mov
lds
jmp
cld
xchg
mov
sbb
xchg
sbb
jmp
subl
mov
add
dec
loopne
shlb
push
fstl
movsb
adc
cltd
add
int
add
lods
loopew
mov
movsb
cs
adc
test
cmc
mov
sarb
inc
inc
dec
ja
mov
cwtl
adc
xchg
std
mov
xchg
fwait
inc
xchg
sbb
loopne
rorl
pop
mov
fsubrl
fstps
frstor
sub
jns
push
ljmp
push
adc
int3
dec
jmp
les
jae
pop
sub
or
sbb
dec
adc
pusha
dec
adc
out
mov
or
ss
daa
fucom
shr
push
movups
pusha
inc
mov
jo
insb
fstpt
aad
adc
jmp
fsub
int
and
pop
adc
loope
popl
ret
adc
sub
xorb
imul
ret
outsb
jge
pop
mov
push
insb
adc
adc
mov
das
mov
sahf
xchg
aaa
dec
push
loope
or
fcmovnb
in
dec
add
or
jmp
or
mov
dec
sub
mov
or
sarl
pop
inc
add
cli
xchg
out
ja
xchg
popa
add
push
fdiv
xor
popa
rcll
fmull
dec
or
dec
adc
arpl
adc
add
dec
cmp
pop
add
xchg
outsb
xor
hlt
cmp
fwait
pop
fidivl
aaa
or
gs
mov
je
dec
jp
mov
lea
aaa
fimull
adc
iret
hlt
loope
add
inc
fistpll
insb
sbb
icebp
aaa
loopne
pop
fisttpl
mov
aas
add
pop
int
fadd
fidivl
xchg
mov
bound
test
jo
orb
loop
mov
add
mov
popa
dec
sub
xchg
ficoms
add
mov
push
jb
dec
or
adc
shrl
icebp
adc
lret
hlt
dec
in
push
js
mov
leave
arpl
xchg
out
dec
test
mov
adc
add
int3
loopne
lea
inc
mov
and
mov
push
jmp
adc
ss
or
lea
inc
adc
cmpsb
cmp
movsb
cli
xchg
and
hlt
adc
jle
xlat
andl
jb
mov
mov
mov
leave
pop
daa
jmp
cmp
test
repnz
push
rorl
fnstsw
mov
popf
push
xchg
daa
xchg
add
data16
push
push
nop
fsub
and
sub
test
hlt
xlat
in
mov
jo
adc
xor
cld
orb
inc
mov
push
sarl
fs
mov
mov
push
dec
jae
nop
stos
cmpsb
hlt
dec
push
mov
scas
push
adc
sbb
bound
stc
add
push
pop
mov
clc
pusha
ret
lds
jmp
fnstenv
xchg
add
add
leave
mov
jle
ret
cltd
jmp
repz
jl
or
adc
into
inc
xor
mov
daa
dec
mov
imul
add
lea
and
stos
mov
sbb
add
loopne
cltd
adc
pop
jbe
orl
inc
lea
test
mov
mov
jne
imul
jl
ret
push
in
into
mov
or
fstps
loop
cmp
inc
fmuls
aas
in
jnp
aaa
jge
dec
test
hlt
pop
loop
ja
in
loop
out
testb
cmc
xchg
xchg
lods
lods
jno
and
or
jne
push
outsl
aad
pusha
lods
icebp
test
cwtl
push
mov
adc
mov
fs
push
shll
outsl
int3
mov
push
lret
lods
push
push
add
mov
gs
push
fdivs
pop
cltd
mov
pushw
pusha
mov
add
jbe
in
and
adc
fnstenv
push
cmp
fdivrs
rorb
add
das
inc
mov
or
mov
sbb
ss
dec
or
sbb
mov
in
add
orl
or
mov
or
aaa
aas
add
cld
cld
mov
push
mov
or
std
lock
sub
jbe
ds
cmpsl
shll
adcb
rcll
mov
lcall
push
cltd
inc
cwtl
dec
inc
sbb
test
or
insb
jmp
pop
lahf
push
jmp
ja
or
push
push
adc
push
test
in
or
rolb
inc
in
aaa
adc
inc
xor
push
cmp
into
xor
rclb
shlb
and
jmp
in
mov
cmpsl
ret
test
leave
mov
adc
lds
lea
xchg
inc
faddp
push
ds
mov
add
nop
adc
pusha
xchg
fdiv
call
les
cmp
or
cmp
push
popl
test
dec
gs
mulps
cltd
int
in
xchg
push
nop
jo
in
xchg
testl
add
sti
popf
popf
sbb
jmp
sahf
fildl
stc
or
push
sbb
push
jo
sub
xor
and
push
cmc
pop
scas
les
mov
nop
sub
enter
and
jmp
inc
xchg
fisubl
leave
pusha
imul
lock
cmpsb
adc
jmp
mov
sub
fisubs
pop
lret
xchg
or
xor
and
sbbb
out
pop
inc
shll
add
mov
ss
pop
inc
push
loopne
mov
test
sub
push
mov
dec
or
sub
cmp
cld
stos
popf
movsb
ffree
add
ret
shrb
test
lea
pop
mov
loopne
push
and
test
popf
int3
cmc
test
push
push
push
jmp
sub
sub
sub
das
push
ljmp
lcall
fists
je
or
cmp
fiadds
adc
add
in
mov
pop
or
adc
and
inc
inc
jae
sub
insb
lods
dec
inc
jo
xchg
int
loopne
add
sahf
jb
hlt
jno
push
scas
in
mov
jmp
mov
add
dec
rcrb
pushf
stc
sub
test
jle
fsub
icebp
rolb
fsubr
jae
adc
lcall
pop
jecxz
inc
inc
fmul
outsl
test
lods
pop
int
scas
pop
inc
dec
adc
add
daa
dec
cmc
sub
hlt
add
jg
push
clc
mov
movsb
je
in
out
icebp
jnp
sbb
cmp
mov
mov
repnz
das
inc
mov
aaa
jge
push
fcompl
dec
push
aaa
test
daa
arpl
mov
xchg
iret
mov
ss
and
arpl
sbb
popf
fdivl
daa
sti
push
lods
in
cmp
rcr
mov
out
pop
mov
inc
mov
shrl
cmpsl
arpl
xor
ljmp
dec
jne
mov
jo
mov
add
push
adc
or
enter
adc
jmp
lcall
push
pop
lret
imul
pop
outsl
je
xchg
xchg
lret
pop
je
pop
psllq
out
rorl
add
pop
out
imul
sub
stos
xchg
rorb
mov
add
jbe
repnz
fdivl
xorb
loope
mov
jl
in
pop
pop
pop
mov
cmp
xor
repnz
xorb
inc
sbb
in
orb
add
out
scas
and
fisttps
adc
popf
mov
pop
jb
pop
cmp
fldt
cmp
or
inc
icebp
and
outsb
add
aaa
pop
mov
pop
mov
mov
add
add
mov
xor
test
call
add
push
inc
pop
pop
test
jo
addl
mov
xor
in
scas
xchg
and
pop
movsb
test
push
leave
adcb
jle
add
shl
jno
xchg
in
dec
push
xchg
lds
jb
lcall
xchg
mov
mov
jo
jp
in
fldenv
das
mov
cltd
lds
addl
aas
and
push
movsl
mov
add
dec
push
cmpsl
shl
adc
sbb
xorb
push
das
divb
je
add
addr16
jle
movsb
mov
push
pop
int3
xor
stos
aaa
add
inc
stos
clc
xor
mov
add
test
xchg
inc
or
jle
andl
or
insl
enter
sbbb
inc
popa
in
lds
mul
mov
decb
ret
xor
adc
aaa
sbb
push
mov
jbe
xor
push
mov
adc
pop
loope
adc
jmp
xor
push
adcl
int
js
out
into
push
inc
pushf
je
pusha
mov
inc
pop
icebp
in
pop
xchg
dec
xchg
addr16
rcll
mov
loop
fs
inc
or
cltd
sbb
out
in
popf
js
fwait
imul
push
mov
imull
pop
sub
mov
mov
mov
hlt
lods
jmp
sbb
inc
jmp
in
jnp
mov
flds
nop
add
hlt
adc
fistpll
stos
jae
nop
loope
lea
cmpsb
fwait
and
inc
cmp
leave
cmp
mov
push
call
add
ret
es
mov
mov
xlat
repz
jnp
popa
cld
push
xchg
mov
add
cmp
je
pop
mov
mov
dec
jb
pop
xor
dec
arpl
mov
or
or
jo
fdivr
sbb
cmp
and
xchg
jbe
fldl
push
inc
adc
mov
fildll
mov
sub
dec
or
push
pop
mov
cmpsb
push
setge
ljmp
xlat
jb,pn
lret
shrb
in
aaa
insl
xlat
in
scas
push
clc
lahf
adc
and
mov
mov
ja
ret
push
fnstenv
mov
and
push
pop
addr16
mov
test
adc
jmp
sub
xorb
xchg
adc
jge
jge
pop
sbb
add
mov
or
roll
in
add
fidivs
lcall
mov
xchg
sbb
in
dec
lea
mov
ss
jecxz
scas
ja
icebp
loop
pop
pop
loop
inc
jmp
xchg
sub
imul
insl
mov
xchg
adc
gs
adc
xchg
or
jge
rcll
jb
loopne
jo
jne
or
jbe
cmp
adc
mov
adc
cwtl
mov
adc
xchg
popa
cld
push
xchg
aas
nop
mov
lahf
and
and
pop
jbe
dec
lret
out
fs
dec
jmp
jns
leavew
pop
inc
out
adc
push
inc
stc
mov
dec
repnz
lods
movsb
mov
cmc
push
ficoms
lds
push
xor
sbb
rolb
andl
and
call
push
dec
pop
push
add
xor
lahf
les
addr16
inc
jmp
pusha
cmc
adc
add
test
pop
pop
dec
ljmp
add
test
adc
insl
and
shll
shrb
out
test
add
cmovo
push
popf
pop
mov
in
sbb
inc
jge
popa
xchg
cmc
or
add
insb
test
loopne
xchg
mulb
or
fs
scas
inc
mov
pop
add
loop
out
xchg
outsl
imul
jmp
mov
xchg
std
in
mov
orb
hlt
mov
add
sti
loope
add
push
mov
adc
jnp
inc
mov
mov
les
sahf
mov
lock
ss
inc
in
popaw
divb
add
adc
pop
adc
ret
gs
mov
movsl
fwait
jbe
jne
test
mov
cmpsl
push
imul
imul
add
adc
fisubl
lods
pop
pop
mov
mov
xchg
jb
push
or
test
xchg
pusha
jecxz
jo
add
outsl
add
push
pop
push
in
pushf
mov
gs
lret
xlat
sub
adc
aas
push
js
cs
or
fdivl
pop
and
mov
sahf
sub
call
push
sbb
pushf
mov
xchg
data16
xchg
shl
add
subl
adc
and
mov
int3
lea
mov
orl
add
testl
ja
fcomp
addb
shrb
fldenv
adc
sbb
jns
frstor
inc
adc
leave
mov
ja
mov
sarl
lahf
pusha
daa
xchg
jl
decb
mov
fnstenv
adc
clc
and
cmp
daa
xor
add
add
jg
sahf
sbb
fidivrs
test
or
enter
sbb
or
pop
in
xor
adc
std
add
cmpsl
adc
outsl
xlat
mov
inc
stc
mov
mov
xor
or
das
lea
mov
addr16
outsb
adc
mov
aaa
leave
inc
out
xor
sub
roll
jnp
int
ror
and
sbb
cmp
ret
js
sahf
adc
jns
insb
fildll
pop
push
gs
xchg
pop
inc
jo
push
pop
xchg
gs
inc
movsl
test
or
jge
add
shll
or
outsl
out
cmpb
adc
mov
out
into
stos
rclb
pop
push
fildll
ret
mov
std
sbb
fstl
push
push
sub
mov
pop
pop
test
popa
leave
nop
adc
sahf
push
or
cmp
mov
mov
iret
sahf
rcll
add
fwait
mov
fistl
jns
mov
mov
sbb
mov
gs
nop
inc
cmp
push
inc
jp
pop
outsb
out
jmp
stos
lret
test
popf
test
pop
sub
fists
add
repz
inc
adc
in
loope
sbb
xlat
pushf
pop
jg
pop
testl
adc
loopne
scas
push
popa
test
test
sub
jae
movsb
es
adc
subl
es
ret
inc
inc
pusha
jl
xor
bound
int
sbb
roll
jle
sub
push
sahf
dec
shll
sahf
inc
dec
mov
xor
ror
pop
adc
xchg
stc
ss
pop
imul
movsl
push
or
arpl
loop
xorl
mov
gs
mov
sbb
sbb
lock
add
mov
test
mov
dec
fcompl
pop
ja
add
and
add
cli
xorl
jle
iret
and
hlt
mov
loopne
sbbl
inc
pop
adc
lahf
leave
roll
popa
xor
cmpsb
in
mov
xchg
lret
mov
dec
rolb
test
mov
iret
add
vdivss
sahf
inc
in
lods
mov
xchg
nop
mov
jmp
popa
stos
xor
addb
cwtl
sbb
sbb
sub
xor
or
add
mov
fiadds
push
push
and
fisttpll
ja
sub
int
adc
jg
push
xor
jl
in
jnp
ret
pop
mov
mov
lock
mov
inc
sbb
bound
sbb
loope
nop
push
shl
icebp
lds
sbb
or
pop
pop
sbb
push
xor
or
push
mov
dec
cli
test
mov
cltd
mov
mov
mov
in
push
cmpsl
xchg
arpl
icebp
push
insl
out
inc
loopne
popa
adcl
xchg
inc
aaa
cltd
dec
or
mov
pop
in
lcall
cmp
cmp
mov
cld
or
push
cltd
addl
inc
lods
lret
out
fxch
loope
pop
loopne
mov
std
mov
shlb
mov
in
mov
loopne
cmpsl
mov
mov
dec
pop
leave
jo
pop
data16
jb
and
icebp
leave
pop
adc
xchg
inc
or
popf
lds
cmc
insb
shrl
dec
dec
add
hlt
aaa
or
push
sar
out
mov
inc
or
pusha
test
xor
lods
subb
xchg
bound
xchg
or
adc
mov
xchg
add
xchg
mov
xor
push
repz
int
ficomps
adc
loope
xchg
test
dec
pop
add
into
mov
mov
inc
dec
mov
cmp
push
dec
mov
ror
jle
icebp
adc
mov
jmp
sbb
mov
inc
or
or
notl
push
xor
outsl
xchg
jo
add
add
hlt
mov
cli
mov
test
lcall
testb
dec
les
psllq
pop
or
pop
push
add
add
adc
inc
xor
dec
push
dec
loope
or
pushf
mov
scas
push
add
pop
cmc
insl
inc
leave
into
jns
adc
lahf
sub
xchg
push
call
and
sbb
jg
rorb
imul
rcrb
aas
add
incb
nop
loopne
mov
cmc
fisttps
add
out
js
xchg
xor
sbb
push
jecxz
test
xchg
xchg
xchg
aaa
push
jnp
mov
test
jl
push
scas
jb
or
push
sbb
hlt
fdivrs
out
dec
pushf
rol
dec
in
mov
push
inc
mov
or
mov
aad
adc
enter
pusha
ss
adc
dec
xchg
int
xchg
mov
ljmp
and
rcr
push
das
test
add
push
insb
push
add
adc
mov
mov
adc
xor
jb
mov
loop
loope
or
loopne
pop
xchg
les
pushf
inc
shll
and
adc
mov
mov
add
sbb
mov
jbe
test
loop
mov
js
adc
cmc
pop
sbb
xchg
mov
add
in
and
fcoml
push
add
adc
dec
adc
and
ficomps
mov
pop
aaa
outsb
addr16
sar
pop
adc
subl
fcmovnb
mov
jecxz
xor
sub
cltd
adcl
inc
push
mov
push
mov
incb
mov
inc
mov
add
movsl
rcrl
ret
jne
test
or
cmp
dec
jno
test
or
dec
in
loopne
fldlg2
mov
out
insb
mov
push
adc
jnp
std
call
ffree
dec
dec
and
into
add
push
jecxz
cmp
inc
fildl
insl
push
lcall
in
mov
push
es
stc
fcmovne
mov
and
out
add
jbe
pop
clc
push
cmc
insb
loope
mov
mov
scas
cwtl
mov
mov
es
jp
pop
xor
dec
stos
in
adc
or
mov
add
mov
stos
mov
loope
mov
and
xchg
ja
int
push
mov
insl
mov
into
add
out
xor
or
fcmovbe
cltd
mov
ljmp
add
imul
ss
rcrb
lds
push
inc
and
push
or
rorl
add
into
lret
and
xor
mov
fadd
pop
sti
ss
in
jmp
or
add
xchg
jl
movsl
stos
aad
xlat
shlb
shrb
jmp
mov
inc
stc
in
cmp
pop
ds
xchg
jge
test
mov
pop
js
fisubs
fsubl
frstor
mov
add
mov
add
loopne
or
rol
push
jl
mov
lods
mov
push
andl
mov
in
pop
andl
mov
ficoml
cmpsl
dec
nop
fadds
xchg
add
in
mov
shl
std
icebp
lcall
in
and
test
addr16
test
ret
stos
mov
shrb
jmp
sbb
add
or
outsl
aaa
fadds
ss
cmpsl
jb
inc
movsb
mov
data16
int3
bound
inc
sub
pop
scas
or
lahf
jno
rolb
push
stos
push
cmpsb
xchg
adc
sarl
cwtl
fcos
inc
ret
sarb
mov
ss
mov
das
xor
cli
mov
xor
pop
cltd
std
adc
push
ja
xchg
das
inc
sub
mov
mov
push
int
outsb
out
fsubrs
sahf
dec
lods
mov
push
adc
int
aaa
ret
shll
add
hlt
orl
scas
or
push
test
cmc
push
std
sbb
insl
ja
int
inc
jl
jno
ret
pop
dec
psubb
cwtl
sub
dec
jl
sbbb
xchg
pop
cmp
jl
fucom
jo
pop
cwtl
clc
loop
aam
push
cmp
sarb
mov
mov
dec
daa
dec
cmp
int3
or
push
dec
push
addr16
pop
cs
rorl
mov
or
mov
sbb
add
outsb
fists
fdivs
mov
mov
inc
sub
das
mov
mov
inc
push
fsts
stos
cmp
add
sbb
sub
sbb
ds
pop
mov
or
or
xchg
adc
in
in
inc
mov
test
sub
and
push
test
jmp
mov
and
cmp
jb
or
cmpsb
loope
xor
fcom
sbb
scas
inc
pop
and
sbb
add
push
mov
out
jle
add
sahf
jno
leave
sub
stc
ja
shll
cwtl
sbb
add
mov
push
jne
int
cmpsb
shll
adc
xchg
push
add
pop
mov
popf
orb
xchg
mov
inc
js
mov
or
mov
inc
pusha
call
or
dec
int
dec
mov
xchg
popa
orb
xor
loopne
scas
mov
inc
push
push
pop
mov
xchg
loopne
loopne
jg
mov
pop
and
lea
shlb
jb
or
adc
adc
scas
push
cmp
int3
popf
pop
pop
add
movsb
in
pop
les
add
xchg
xchg
pop
inc
sub
hlt
lahf
gs
subl
insl
and
aam
pop
jge
and
push
loop
pop
pop
push
loope
jg
popf
xor
add
sbbl
push
sbb
sti
inc
mov
jo
jge
pop
scas
js
lret
mov
in
mov
inc
fcmovb
in
out
xchg
iret
iret
cli
lcall
push
sbb
push
lahf
or
xchg
popf
fimull
jns
in
sbb
mov
in
pop
xchg
fxch
clc
adc
mov
xchg
js
shr
and
ret
les
pop
push
repnz
adc
aam
jl
xor
in
or
mov
pushf
sbb
orb
fimull
flds
xor
inc
adc
fs
adc
mov
jne
mov
mov
dec
ja
pop
ja
sub
outsb
push
pop
jns
faddl
les
stc
or
mov
in
shll
mov
outsl
pop
cld
mov
jne
xor
add
inc
jns
sbb
test
imul
xor
mov
add
jge
fchs
xor
mov
test
inc
int
mov
jl
push
movsl
clc
jne
sub
fidivrl
fcomps
sub
nop
test
xor
jp
jbe
sub
push
test
js
dec
xor
jmp
or
xchg
xorl
loopne
fcompl
sahf
arpl
sub
mov
sbb
xor
stc
outsl
jecxz
jno
cmp
pop
push
or
mov
mov
ret
rcrl
jne
outsb
and
jb
pop
mov
push
data16
mov
mov
lods
shlb
movb
je
aad
add
or
subl
cmp
pop
test
xchg
add
lahf
outsb
and
xlat
xchg
test
cld
mov
hlt
and
xchg
aaa
mov
insl
mov
mov
int
js
push
into
shlb
mov
pusha
insl
mov
cmpsb
rcll
add
leave
movsl
aaa
inc
and
add
push
in
push
shlb
in
scas
cmpsl
jbe
sbb
adc
aad
sub
add
add
daa
insl
xor
vmovq
cltd
out
mov
test
sbb
inc
or
add
cwtl
jecxz
fnstcw
jl
xchg
cmc
popa
pop
mov
scas
push
in
fwait
mov
jno
mov
push
ja
mov
inc
in
dec
mov
add
jg
mov
xchg
fidivs
test
and
fimuls
add
adc
clc
push
bound
sub
mov
adc
and
movsl
adc
xchg
push
add
rorl
cmpsb
scas
sbb
int
aam
aam
or
ret
jmp
jno
pop
or
jnp
leave
stc
mov
push
enter
loope
adc
cld
rclb
shl
popa
into
in
in
adc
loop
jae
cld
or
lods
push
cmp
xor
test
addb
mov
cmp
sbb
test
sbb
mov
shlb
stos
adc
jo
xchg
imul
enter
test
fucomip
mov
cli
int3
out
cmpsl
xchg
stos
xchg
xor
loopne
and
aas
repz
mov
fsts
mov
xchg
adc
addr16
mov
jbe
loopne
push
or
mov
iret
push
xchg
iret
xchg
adc
xor
push
sbb
pushf
mov
test
imul
es
or
shlb
dec
ja
dec
jno
pushf
add
sarb
rol
fadd
sbb
out
enter
push
gs
adc
pop
sbb
pop
sub
dec
push
fldl
movsb
movsl
movsb
mov
sbb
mov
lret
mov
stc
push
out
jbe
dec
repnz
inc
sarb
fiadds
movups
pop
mov
push
push
int
xchg
or
jmp
dec
mov
xor
mov
and
imul
cmpsl
add
mov
and
and
stos
or
in
ss
divb
xchg
into
fmuls
idivl
or
add
enter
adc
push
daa
add
pop
lahf
test
pop
lret
lahf
ficoms
push
jecxz
int3
push
cmp
jb
inc
fs
sbb
fimull
inc
in
xchg
inc
hlt
test
lods
sbb
jne
out
or
cltd
add
xchg
add
jb
jge
icebp
adc
add
pop
mov
imul
or
xchg
push
insb
shll
adc
fisttps
in
adc
clc
adc
std
out
call
sbb
in
mov
cltd
movl
sbb
push
ret
test
aam
loopne
jl
inc
xchg
mov
stc
push
add
mov
es
pop
cld
loopne
xor
stos
lret
clc
out
and
and
mov
in
sub
push
dec
pop
mov
lds
cmpb
pop
lock
xor
jne
orb
jmp
mov
insl
icebp
enter
cmp
adc
mov
mov
les
adc
adc
adc
int
mov
jae
out
loope
or
xor
fdivr
mov
fidivl
add
cmp
sarb
int
pop
push
std
sar
mov
inc
add
loope
loopne
out
test
pop
into
adc
mov
movsl
add
loope
fstp
mov
add
add
fwait
adc
rolb
xchg
mov
into
insl
xchg
stc
mov
jne
jg
adc
cmpsl
or
popf
jo
add
icebp
jp
fwait
adc
pop
mov
sahf
dec
stc
and
js
mov
movsb
cltd
jbe
adc
add
test
popf
andb
adc
mov
icebp
mov
inc
xchg
cmp
das
add
icebp
aas
test
mov
mov
fcmove
cli
stos
jle
test
push
xchg
fbld
imul
adc
cld
xlat
andl
jne
stos
inc
dec
xor
cmpsl
int3
in
pusha
fnstenv
repz
xchg
jg
pusha
adc
cltd
test
and
mov
lret
movb
int
mov
jno,pt
cld
int
outsb
sub
xor
xor
aas
push
lds
push
cmpsb
jl
xchg
xchg
lret
jmp
or
mov
mov
stos
mov
push
mov
mov
das
leave
ds
jmp
fsubs
pop
jno
loope
ljmp
test
clc
inc
sbb
in
testl
dec
inc
push
adc
call
lea
stc
rcrb
sbb
sar
or
xor
xchg
test
pop
cmp
xchg
je
xchg
cmpsl
int
push
lret
fisubl
int3
call
jecxz
or
xor
push
and
cmp
mov
sbb
adc
bound
pop
in
lret
lahf
bnd
jge
cmp
clc
lods
adc
sub
iret
scas
gs
pushf
lret
repnz
popa
aaa
in
mov
adc
insb
stos
stos
xchg
add
out
adc
pop
aaa
mov
xchg
gs
dec
mov
inc
and
jmp
pop
xor
fcmovbe
in
insb
js
xor
sub
xchg
xchg
adc
lcall
add
rorl
insb
add
sub
dec
imul
lock
and
into
fcmovnbe
mov
cltd
fmuls
and
out
mov
or
or
loope
movsl
je
xchg
pop
adc
xchg
fsubl
popf
or
jge
fmuls
shl
repz
jns
out
add
cmp
mov
sarb
lea
gs
outsb
mov
jmp
out
pop
adc
sbb
rorl
inc
loopne
test
cmp
ja
leave
sub
lds
add
outsl
add
das
pop
jmp
repz
dec
jge
outsb
add
add
mov
aam
fstps
inc
jmp
mov
loop
in
sub
popf
std
xchg
mov
fadds
in
aas
mov
mov
and
das
jmp
shrl
sub
cs
cmpsb
bound
mov
inc
dec
push
scas
lds
cmp
mov
xlat
add
mov
in
ficomps
or
cmpsl
mov
roll
sbb
cltd
mov
xchg
fs
push
mov
adc
ss
push
dec
gs
and
fnsave
iret
jmp
jo
rolb
outsb
or
jb
loop
je
cmp
shlb
lahf
sahf
dec
and
jp
push
xchg
mov
cld
fs
lods
jl
ret
push
cmp
iret
hlt
ljmp
mov
add
xchg
int3
cmpl
roll
call
push
xchg
arpl
mov
dec
mov
inc
loopne
les
js
je
mov
lret
add
repnz
outsl
or
mov
rcrl
fistpl
dec
sub
xchg
roll
mov
mov
inc
fcmovu
lret
dec
adcb
mov
mov
fwait
adcb
xorl
and
or
js
shr
sub
jecxz
int
cmp
inc
arpl
push
mov
fcoms
test
push
xor
lret
enter
or
imul
aad
adc
movsb
in
fs
call
adc
add
fidivl
popf
popf
inc
wrmsr
jbe
cmp
xchg
nop
es
jl
adcl
lds
loope
mov
mov
ret
or
in
jg
stc
adc
or
push
fidivs
jmp
xchg
push
std
gs
leave
inc
mov
jno
pop
jns
push
int
lcall
lods
push
jle
clc
pop
dec
insb
jl
mov
in
pop
popf
sbb
les
cmpsb
or
add
or
cmpsl
repnz
dec
dec
cmp
cmp
adc
andb
xchg
pop
pushf
in
push
les
jmp
sbb
popf
mull
xor
int
mov
pop
mov
mov
fdiv
test
les
xchg
sub
cmp
xor
push
jp
fsubr
sub
adc
ret
test
out
push
inc
pushf
cmpsl
jmp
inc
jae
cmp
aam
cmp
xchg
iret
in
out
and
sbb
rorb
fcoml
in
or
xchg
cmpsb
ret
xchg
rcll
inc
xlat
js
stos
mov
out
fldt
and
fwait
mov
or
pop
sbb
dec
dec
out
lret
ret
in
pop
cmp
cld
decl
xchg
inc
rorb
rorl
add
cmp
roll
lret
test
add
xor
add
mov
addr16
inc
jp
pop
rolb
scas
out
push
mov
or
cmp
in
jg
dec
pop
gs
and
fs
repnz
mov
mov
add
sarb
jp
rorl
lods
aas
leave
clc
adc
inc
imul
stos
or
in
movsl
sub
stc
mov
mov
js
loop
or
mov
test
pop
mov
into
cs
mov
or
mov
xchg
or
xchg
in
cli
leave
add
popf
mov
lret
test
into
loope
sbb
push
sub
cmp
int3
xchg
test
movsl
loope
leave
push
add
jo
mov
xor
mov
jb
nop
sti
inc
push
lea
sahf
hlt
adc
mov
nop
sbb
fwait
push
loopne
adc
imul
cltd
xor
cmp
ljmp
pushfw
xor
xchg
aad
add
cmp
pop
cmp
add
xchg
inc
cmp
mov
add
popf
adc
movsb
jl
rorb
jmp
push
adc
mov
mull
push
rorl
cld
jmp
bound
or
push
mov
sbb
mov
movsb
js
mov
movsl
dec
cmc
into
mov
sbb
sbb
daa
aaa
xchg
fdivr
pusha
ror
push
xor
jle
adc
hlt
aas
outsb
lret
pushf
jbe
enter
mov
xchg
xlat
repz
out
sbb
cmp
lds
test
loopne
mov
or
movb
lcall
loope
loopne
push
xchg
cmp
test
js
bound
mov
sub
roll
lods
cmp
clc
jns
sub
flds
xchg
xchg
test
jno
inc
inc
inc
xor
ja
sub
shll
mov
inc
test
pop
leave
sbb
xlat
insb
aad
js
lock
loop
shlb
add
inc
fwait
gs
add
dec
mov
or
sub
inc
ss
js
arpl
mov
cmpsl
xchg
and
mov
adc
pushf
mov
add
mov
test
mov
test
add
xor
ljmp
xor
es
loopne
inc
add
stos
xor
adc
pop
lds
rcll
mov
sarl
or
sti
out
jnp
sti
cmp
sbb
and
aas
out
test
sbb
pop
stos
sbb
jns
ljmp
mov
out
pushf
mov
or
scas
mov
and
inc
xor
mov
out
mov
adc
icebp
outsb
jno
js
mov
xchg
mov
xor
out
shlb
dec
mov
pop
mov
adc
sbb
test
sbb
cs
push
dec
push
cmp
dec
and
lret
push
andl
push
add
and
hlt
nop
decl
fstpl
dec
pushf
mov
pop
mov
push
stos
roll
loopne
loopne
divps
xchg
pop
in
movsl
rorb
or
or
fiaddl
cmp
lods
mov
fimuls
in
dec
or
nop
cwtl
and
push
sbb
sarb
sbb
xchg
shl
sub
push
in
mov
adc
fdivr
ss
rcrl
xchg
fs
mov
inc
adc
xchg
xchg
loope
sbb
ret
dec
lock
fldcw
loop
in
dec
mov
mov
shlb
pop
xchg
and
shrb
in
ss
xor
movsb
in
inc
scas
push
ret
enter
dec
cmp
dec
push
jne
mov
push
std
adc
loopne
and
sahf
data16
lock
pop
cld
pushf
pop
test
out
add
out
dec
rcrl
test
or
pop
loope
addr16
das
imul
in
roll
xchg
push
mov
jb
hlt
adc
mov
fldenv
in
test
in
and
cs
call
shlb
imul
cmp
mov
push
js
xor
xchg
mov
cwtl
and
and
repz
inc
jb
ss
xchg
scas
and
push
pushf
es
test
rclb
xor
mov
ss
scas
mov
or
inc
jnp
shrb
xchg
mov
sub
xor
xchg
movsl
jns
jmp
lcall
pop
sub
mov
push
mov
mov
or
lret
jne
cs
add
jle
sub
shr
cmp
popf
xor
cmp
mov
mov
xor
mov
adc
push
cltd
scas
xchg
lcall
inc
cmp
mov
and
jg
add
mov
ret
inc
xor
fnstenv
add
adc
xor
push
add
dec
jge
lock
lret
addr16
repnz
test
movsb
xlat
jmp
iret
push
push
lcall
or
jecxz
movl
jmp
popa
test
outsl
enter
xchg
xchg
pop
sub
mov
xor
pop
pop
lods
xor
mov
pusha
fcoml
mov
fnsave
mov
setg
sbbl
cmpsb
int3
andl
cmpb
pop
arpl
out
out
push
sub
call
push
dec
mov
sub
add
cmp
jmp
loopne
mov
mov
mov
loope
cmp
test
jg
xchg
mov
pop
push
out
aas
insl
sti
jae
aaa
mov
pop
jne
loope
mov
adc
jnp
pusha
cmp
pop
sar
xor
ja
mov
loopne
push
jo
mov
cs
repnz
jl
xchg
mov
imul
jmp
adc
nop
mov
adc
mov
ret
xor
or
jmp
shl
and
dec
dec
sti
aad
sub
mov
push
pop
xchg
push
filds
cmp
in
cmp
dec
pop
xlat
pop
sbb
fdivrs
pushf
and
sbb
inc
fcmovnb
xchg
loope
cwtl
adc
or
mov
mov
mov
fsubl
mov
imulb
push
js
stc
rclb
push
xor
adc
pop
cmpsb
outsb
stos
orl
and
mov
rorb
cmp
jmp
xchg
pop
pop
xchg
stos
js
aas
xchg
shll
cmp
mov
cmp
xchg
dec
mov
addl
ret
lock
mov
imul
inc
das
lea
push
inc
xor
adc
sbb
daa
mov
shrb
out
imul
mov
mov
sbb
add
dec
adc
cmp
daa
das
adc
pop
test
xor
stc
adc
test
mov
rclb
std
cmc
cmpsl
in
das
es
addl
jge
add
and
shll
addr16
inc
mov
mov
push
jp
mov
dec
mov
roll
enter
outsl
and
rcrl
or
mov
or
jg
mov
adc
ss
adc
pop
in
jo
cmp
adc
jbe
outsb
pop
test
mulb
pop
es
pop
jmp
inc
neg
adc
push
mov
xor
jge
scas
ficoml
je
adcl
ret
mov
ja
adc
pop
fildl
inc
add
inc
inc
jge
ja
cmp
inc
xchg
fistpll
call
int3
inc
push
das
mov
sbb
or
mov
sbb
jmp
dec
mov
dec
xlat
jae
lods
aad
pop
inc
jno
pop
mov
int3
test
pop
mov
cmp
test
push
shrb
push
std
push
and
mov
lret
push
and
aaa
pushf
mov
mov
add
ss
mov
rorl
in
lahf
hlt
push
aad
mov
add
insb
or
hlt
jnp
cmp
mov
xchg
fwait
mov
and
cmpsb
call
xor
int
rorb
shlb
mov
sbb
jp
mov
sbb
lret
popf
js
push
ljmp
pop
pop
mov
push
jle
and
mov
jno
xor
mov
cmpsl
cld
lods
es
cmp
insb
fisubl
jecxz
mov
lods
loopne
mov
jl
mov
in
loope
push
adc
daa
mov
and
inc
fcoml
je
push
push
mov
mov
inc
mov
dec
fcoml
cmpsl
jns
int
addr16
add
clc
mov
pop
shl
adc
loopne
mov
inc
imul
pop
sbb
inc
cmp
ds
xchg
aaa
add
jmp
in
ja
adc
push
lock
jnp
cwtl
bound
pop
and
lcall
xchg
in
add
mov
rorl
lret
cmp
stos
lret
push
and
test
insl
push
mov
out
mov
xchg
inc
imul
scas
jecxz
fistpl
xor
repnz
fimuls
xchg
jnp
mov
xor
push
fdivr
mov
ds
lahf
test
lea
add
inc
cltd
in
xor
jl
mov
insb
int3
in
sbb
push
das
pop
push
jg
js
lds
aaa
xor
and
jge
pop
lock
adc
add
mov
add
push
sub
push
mov
mov
xchg
je
inc
addl
push
pop
fists
lret
sbb
sahf
repnz
xlat
cmp
add
mov
lcall
xlat
sub
in
test
add
fsubrl
mov
jnp
mov
or
jge
rolb
sbbb
daa
outsb
int
mov
or
cmp
xor
shr
cld
int
xchg
jmp
mov
mov
leave
repnz
mov
popf
repz
add
rol
clc
and
inc
push
push
adc
aam
lahf
push
leave
popf
nop
stos
fistl
pop
call
jmp
movsb
lret
pop
int3
jge
scas
leave
daa
push
jmp
lods
xchg
fs
stc
test
sub
lcall
fisubrs
rolb
shll
je
lock
add
orb
das
stos
fwait
loop
andb
bound
inc
lret
cmp
fucomi
cld
push
outsb
fwait
rorl
cmpsl
stc
iret
mov
ljmp
mov
les
dec
das
pop
int
xchg
jb
sub
into
sbb
and
and
fcoml
sub
adc
sub
add
pusha
xor
dec
push
dec
pop
into
lret
shll
dec
or
psadbw
movsl
mov
mov
adc
rolb
loopne
hlt
imul
xchg
ss
xor
xchg
push
xchg
pushl
enter
sbb
dec
adc
sub
xchg
fnstcw
xor
adc
mov
add
or
aas
xor
xor
adc
imul
inc
leave
xor
jle
adc
mov
and
jge
into
dec
cmpsl
js
jnp
sbb
andb
cmp
pop
je
xchg
adc
into
mov
mov
push
incl
mov
sbb
icebp
mov
lret
test
cld
insb
jmp
adc
pusha
fcomps
je
and
cmpsb
popf
sbb
pop
jb
adc
add
aam
test
outsb
fbld
in
push
rol
push
inc
xchg
push
mov
jmp
pop
iret
cld
push
adc
inc
add
jmp
push
daa
pop
mov
push
aas
insb
int
dec
sub
cmc
mov
int
rorl
add
test
fidivrl
xor
ret
insl
pop
mov
sbb
or
ja
add
pop
fimull
xor
orb
out
xchg
pop
xchg
int3
call
lcall
jle
daa
outsb
aas
xchg
inc
cmp
jl
or
push
or
movsl
fmuls
nop
push
test
cmpsb
cmp
pop
shlb
pop
insb
fucomi
outsb
shlb
loope
adc
xchg
arpl
ss
shrb
mov
add
add
push
push
div
inc
test
flds
sbbb
push
jecxz
fsubl
and
sub
inc
pop
mov
cmp
repnz
imul
out
test
stos
xor
mov
enter
sahf
out
repz
pop
lahf
loopne
inc
add
and
fimuls
or
cmp
sbb
in
push
daa
in
popa
adc
adc
push
lea
popf
xlat
push
bswap
test
into
jmp
and
pusha
dec
sub
push
dec
rorb
sub
mov
dec
lret
les
push
rcr
mov
inc
jo
shll
add
out
inc
xchg
inc
xchg
shlb
gs
xchg
popf
lea
popa
pop
in
cmc
cmp
bnd
dec
push
inc
or
push
cmpsl
add
les
mov
xor
add
push
dec
insl
cmp
fisubrs
add
sbb
dec
xchg
loopne
dec
mov
repnz
ss
les
jns
xor
add
dec
mov
xabort
fs
add
pushf
xchg
bound
notb
cmp
cltd
cmp
xchg
out
add
rcr
jle
je
jp
jno
inc
and
orl
movsb
pop
push
sub
push
jecxz
pop
mov
mov
sbb
jg
sub
sub
addr16
sti
stos
test
fnsave
lock
mov
outsl
dec
sub
sbb
js,pt
outsb
or
jle
lea
jo
pop
sbb
sbb
push
adc
leave
mov
xchg
pop
stos
mov
es
ret
mov
ftst
in
lock
xchg
push
adc
in
adc
ds
mov
movsl
add
frstor
fdivrs
mov
and
xchg
xchg
dec
mov
xchg
subl
clc
mov
adc
cmpsb
sbb
jge
add
inc
pushf
orb
cs
xchg
mov
mov
cmp
repnz
cmp
jge
jbe
push
in
push
jmp
arpl
add
or
fucomi
jno
add
inc
xchg
push
call
fmull
mov
cs
scas
push
mov
popa
sub
clc
aad
or
or
sbb
or
in
adc
pop
in
xor
nop
xchg
sbb
arpl
mov
sbb
imul
test
lret
and
leave
mov
mov
cmp
pop
enter
push
and
ds
cli
xchg
or
inc
sbb
dec
lods
ljmp
or
inc
ja
lret
pop
lret
xor
shrl
in
or
cmp
jmp
jmp
test
leave
adc
or
adc
in
jle
bound
inc
inc
and
sbbl
push
push
loopne
cmp
sbb
stc
inc
fsubrl
push
jns
lea
dec
iret
loopne
cmp
push
or
std
xor
mov
jo
addl
push
xchg
repnz
arpl
xor
or
adc
stc
sbb
add
fmuls
mov
mov
push
loopne
sahf
test
mov
mov
dec
xchg
mov
mov
mov
flds
leave
lock
shll
mov
push
cmp
mov
sub
out
xchg
sbb
outsl
xor
stc
ss
nopl
jl
adc
test
inc
pop
je
dec
cmp
in
leave
mov
mov
xchg
jo
jecxz
adc
gs
js
jnp
xchg
pop
imul
icebp
xchg
sub
mov
pop
fs
dec
aad
mov
rclb
fildl
cmp
rolb
sti
les
jle
jbe
mov
pop
je
pusha
sbb
test
out
add
add
or
sahf
loop
inc
test
lods
inc
add
inc
and
mov
pop
jg
popf
cmpsb
xchg
adc
loop
jecxz
mov
cmp
or
xor
xchg
out
scas
shll
jp
jns
xchg
aad
decl
outsl
mov
jge
out
and
dec
cmp
lcall
xchg
hlt
sub
add
daa
lods
dec
cmpsl
jnp
inc
out
inc
cmp
shl
cmp
pop
rol
push
insl
scas
sbbl
adc
fcom
dec
lcall
add
sbb
inc
repz
out
rolb
arpl
mov
iret
outsl
rcll
adc
or
std
pop
cld
sti
fs
outsl
add
clc
hlt
push
inc
xchg
call
nop
loope
and
out
das
test
mov
or
xor
jg
ficoml
pop
lods
les
je
push
out
xlat
jg
jge
and
popf
push
and
jns
push
pop
shll
mov
lock
out
push
scas
fs
mov
sbb
dec
add
daa
jae
leave
add
rcrb
fucomip
gs
sub
inc
inc
mov
push
gs
inc
mov
dec
jbe
cmpsb
js
cmp
pop
xchg
lock
and
sbb
mov
sub
jmp
xchg
cmp
data16
loop
push
rcll
hlt
xchg
into
add
std
mov
mov
push
add
cwtl
and
mov
jne
rcrl
scas
test
inc
add
inc
mov
adc
sbb
mov
jecxz
inc
inc
pand
pusha
stos
dec
in
mov
mov
xlat
ss
or
xchg
lea
dec
xor
mov
movsb
faddl
test
int
jbe
call
mov
cwtl
je
ds
pop
incb
add
faddl
popf
outsb
jl
pop
pop
loopne
pushf
or
cmpb
leave
cmp
das
out
pop
in
hlt
outsl
xchg
sub
mov
and
lods
std
ds
jae
test
sbb
add
add
adc
out
andb
sahf
adc
gs
or
add
pop
pop
int
jg
adc
hlt
inc
call
enter
mov
pop
fildl
mov
or
sub
movsb
jbe
ret
mov
mov
adc
sahf
jl,pn
xchg
in
mov
insb
adc
movl
sbb
pop
dec
pop
ja
in
jo
roll
iret
xor
mov
jge
cmp
stos
arpl
enter
xor
dec
movsb
insb
out
jnp
cwtl
mov
adc
sub
and
jmp
mov
movl
pop
and
test
sbb
je
inc
lret
adc
push
xchg
mov
hlt
xchg
mov
rsqrtps
xchg
push
loop
imul
dec
jne
mov
jg
nop
cmp
dec
mov
inc
dec
mov
xchg
adc
out
jb
xor
and
rcl
lds
cmpl
lock
les
xor
dec
jns
xchg
push
add
push
cltd
push
fxch
call
inc
add
add
inc
xchg
adc
out
rcll
dec
xlat
jg
lods
add
lret
subl
or
lods
cmpsl
add
mov
adc
pop
shr
loop
addr16
cmp
sbb
mov
repz
adcb
ret
mov
aas
aad
mov
cmp
shlb
movsl
sbb
or
rolb
outsb
cmp
bswap
aas
adc
push
shrl
subb
xchg
push
dec
adc
hlt
jne
inc
fisttps
mov
xor
popa
andb
mov
jns
mov
cmpsl
jne
pop
add
xchg
popl
insb
mov
mov
mov
mov
loopne
movsb
popf
out
adc
xchg
mov
jbe
mov
cld
out
fsts
adcb
push
push
mov
or
fcoml
mov
dec
aaa
jo
push
dec
adc
movsb
jmp
ss
push
inc
movsl
sarl
jnp
mov
mov
in
add
gs
mov
std
rclb
xor
xchg
xchg
mov
xor
lret
cmc
add
xor
push
arpl
jl
aad
pop
cld
jbe
jecxz
pop
pop
gs
les
int
jb
adc
xor
test
popf
in
cmpsl
add
lds
mov
and
data16
repnz
aaa
jmp
jmp
adc
cltd
js
push
shr
pusha
xchg
mov
inc
adc
mov
hlt
and
into
add
xchg
mov
jbe
mov
xchg
out
mov
adcb
jno
or
add
mov
imul
loope
fldl
inc
enter
mov
bound
or
roll
jmp
and
nop
insb
rolb
hlt
mov
in
sub
add
leave
je
cli
sbb
inc
ror
cmp
shrl
or
xchg
and
cmpsb
or
or
xor
add
mov
push
push
clc
lea
movsb
in
mov
push
and
jno
shrl
test
ficoml
inc
mov
outsb
add
popa
mov
xor
push
push
dec
push
mov
dec
mov
mov
xor
aaa
sti
adc
mov
xchg
add
adc
outsl
loop
and
jae
out
popa
adc
mov
cmp
pusha
mov
add
mov
roll
jno
jno
add
jge
push
hlt
xchg
dec
lods
sub
into
out
add
sti
add
sub
mov
adc
pusha
test
sbb
or
inc
inc
jns
shr
push
jne
clc
shll
enter
psubb
movsl
jge
rolb
cmp
loopne
rolb
test
jb
add
lods
pop
adc
pop
fildl
xchg
push
push
fstps
fcoms
lret
repz
push
fwait
xchg
cld
push
sub
adc
xchg
and
lcall
sub
and
adc
dec
or
outsb
sbb
in
out
movsb
ja
cmp
adc
cmp
dec
movsb
or
dec
add
jecxz
and
test
lock
out
loope
mov
in
aas
sbb
mov
test
add
imul
jp
adc
or
xchg
or
xchg
fcmovu
je
mov
xor
clc
addl
fmull
jo
jge
jl
shrb
rolb
jb
rorb
lea
ss
stos
repnz
int
mov
add
test
push
das
lds
xchg
lahf
and
push
cmp
and
xorb
repnz
push
in
test
push
mov
loopne
std
insb
jp
js
or
fildl
hlt
or
pop
mov
dec
dec
or
xchg
mov
daa
push
or
adc
cmp
adc
jge
repz
push
sbb
push
pop
jle
mov
pusha
or
add
push
pop
jmp
jecxz
adc
jne
fcomp
adc
sahf
inc
jbe
addr16
aas
std
adc
je
mov
lret
push
or
mov
sbb
loope
or
push
pop
sub
mov
loop
inc
or
pop
aaa
and
lret
cmp
mov
jp
mov
adc
pop
lods
or
cmp
out
add
roll
ja
mov
mov
add
xor
hlt
dec
mov
adc
xor
xchg
loopne
cmp
mov
xchg
inc
outsb
inc
popf
and
and
inc
fbstp
push
shrl
cwtl
shrl
mov
cmp
in
lret
cwtl
in
dec
add
cld
sub
push
sbb
jb
lret
dec
sarl
addb
shlb
imul
push
out
push
scas
adc
cmpsl
cmpsl
test
xor
add
jne
and
jno
xlat
xor
push
adc
inc
xor
or
out
mov
xchg
addr16
cs
add
lret
mov
mov
rorl
jle,pn
add
sbb
dec
push
xor
scas
fisubl
push
dec
movsl
and
popa
push
lret
mov
cmpl
pop
push
mov
dec
or
xchg
mov
dec
movsb
xor
mov
mov
sub
xlat
loope
or
ds
daa
push
in
test
loopne
add
aaa
mov
js
inc
pop
fwait
inc
pop
call
mov
scas
add
repz
arpl
push
mov
movsl
mov
jae
inc
cmp
mov
popa
ss
jno
pop
outsl
sti
xchg
inc
jmp
test
fld
adc
iret
mov
cmp
or
shll
cld
mov
adc
mov
mov
cmp
mov
jl
addb
push
xor
repz
sbb
fnstenv
fidivs
ret
addr16
dec
and
sbb
adc
pusha
cmp
lea
and
jb
pop
inc
add
shll
pop
fwait
pop
popa
add
inc
xor
sub
in
adc
out
in
fmuls
std
fldt
stos
push
xchg
repz
scas
add
sbb
push
dec
xor
xchg
ja
clc
mov
sbb
adc
sub
sarl
pop
cli
sub
pop
cmp
push
and
shl
add
mov
add
cld
les
mov
icebp
xor
in
xchg
pop
xchg
dec
xchg
fidivrl
inc
push
popa
cs
dec
sbbl
and
divl
in
adc
lods
add
inc
ss
add
dec
mov
fcoms
mov
pop
push
push
inc
das
out
sbb
movsb
dec
xor
pushf
push
pop
inc
push
inc
adc
lret
and
iret
adc
cmpsl
cs
popf
jb
fmull
inc
mov
mov
cmp
xor
ja
pop
mov
movsl
andb
ss
pop
sahf
or
inc
shlb
adc
pop
mov
sti
add
clc
push
push
daa
dec
lds
adc
inc
mov
mov
roll
es
add
jno
rcll
loopne
movsl
fimull
or
repz
adc
sub
mov
stos
adc
cld
imul
lahf
test
add
or
pop
insb
test
mov
lahf
adc
insb
sub
sub
pusha
in
and
ficomps
testb
into
popa
call
adc
fsubrs
test
mov
insl
mov
jmp
popf
ret
add
lods
rcl
rep
push
cmpsb
imul
ja
and
jae
leave
fwait
cmp
mov
mov
daa
xchg
dec
sbb
jns
pusha
mov
lea
rcll
popf
adc
mov
inc
cwtl
inc
xchg
stos
bnd
sub
xorl
rorl
lret
subb
xchg
iret
inc
adc
sbb
lahf
inc
dec
push
rol
and
mov
mov
ds
loope
popf
mov
and
dec
mov
xor
rorl
mov
cmc
mov
std
sub
adc
enter
and
or
ds
or
sbb
call
mov
or
xor
xchg
dec
add
inc
sbb
rorl
loop
xchg
mov
or
jne
jle
jecxz
sbb
fcoms
ret
stc
push
int3
mov
add
pop
leave
or
mov
and
sbb
test
leave
jmp
ret
or
mov
add
push
or
imulb
mov
jl
add
in
lret
sbb
shrb
insl
mov
xor
sbb
loop
fistl
iret
out
pop
enter
je
or
test
push
xchg
out
loop
test
je
inc
sti
sbb
jo
adc
xchg
pop
xor
into
cwtl
mov
js
mov
insl
add
pop
push
or
jmp
repz
xchg
and
cltd
pop
sarl
bound
inc
mov
adc
cmp
xor
repnz
outsb
test
int3
jg
mov
adc
mov
rol
outsb
mov
in
popf
popa
and
fdivrl
iret
insb
data16
sub
lahf
hlt
out
adc
dec
nop
test
xor
loop
and
cmc
dec
mov
daa
pop
inc
mov
add
repnz
rclb
cmc
insl
cmpsb
add
sub
sbb
or
mov
call
pop
jg
adc
test
scas
movsb
push
cltd
sbb
adc
aad
sub
sti
enter
lret
sbb
inc
test
add
and
sbb
add
fdivs
jge
jg
popa
jle
mov
popl
or
daa
fldcw
pop
je
iret
xchg
pop
and
test
jge
push
mov
sbb
popa
ficompl
les
xchg
or
xchg
cwtl
push
nop
mov
inc
andb
lock
cmp
and
mov
sbbl
adc
shrb
hlt
and
xchg
adc
sub
fiadds
decl
pop
jg
mov
sub
mov
xor
inc
pop
cmp
jo
aad
call
add
adc
ja
imul
sbb
mov
cmp
xchg
stc
mov
and
lds
xchg
inc
add
enter
iret
outsl
in
push
test
mov
add
test
add
jno
inc
bound
adc
imul
xchg
mov
mov
pop
aaa
and
nop
inc
out
jle
or
xchg
pushf
add
mov
lahf
mov
or
dec
out
stos
xchg
mov
sbb
stos
mov
mov
or
cmp
dec
adc
fsubs
test
mov
cmpsb
adc
sub
fiadds
lock
mov
xchg
inc
rclb
add
cmp
sub
add
adc
test
mov
scas
jae
xlat
pop
or
data16
mov
pop
outsl
mov
mov
rol
and
jl
sbb
xor
xchg
push
bound
push
pop
in
adc
data16
sbb
pop
xchg
or
test
sub
enter
xchg
je
and
sti
sub
sbb
fstpl
iret
adc
adc
in
aaa
sbbl
lea
pop
adc
and
mov
push
loopne
mov
aaa
sahf
push
lret
mov
hlt
push
std
mov
jecxz
mov
mov
ret
lock
dec
cmp
shrl
rclb
das
jae
adc
mov
and
sbb
jp
ffree
or
push
push
adc
lret
jecxz
hlt
ljmp
call
int
xchg
sbb
repnz
popf
push
add
bound
cmpsl
mov
add
mov
push
addr16
inc
movsb
pop
xchg
mov
push
pop
push
sti
adc
leave
cmp
sub
mov
rcr
call
sbb
inc
rolb
adc
enter
ror
and
cmp
or
adc
enter
sahf
aam
into
sbb
fwait
stos
mov
outsb
je
inc
les
mov
sub
jmp
movsl
pop
inc
xor
icebp
jo
popa
pop
fs
insb
cltd
add
in
dec
cmp
dec
fcom
fnstsw
scas
sti
mov
sbb
test
out
cmpsl
hlt
xchg
shl
inc
jmp
repnz
jb
es
push
mov
jge
adc
push
sbb
pusha
sub
das
loopne
or
push
and
shr
fidivrs
dec
insl
adcb
bound
jnp
add
pushf
and
xchg
jge
or
daa
data16
ror
adc
add
test
hlt
lods
in
or
das
cli
fildll
cmp
scas
lds
call
cmpsl
mov
call
xor
xor
rorl
popa
nop
es
xchg
into
inc
movsl
out
mov
jle
lcall
ret
mov
sbb
arpl
or
cmpsl
addl
cld
adc
push
sbb
das
imul
sub
enter
adc
call
inc
xchg
jmp
ss
pop
dec
jl
mov
and
ret
popf
jg
mov
in
data16
shl
loop
cmp
out
hlt
pop
adc
and
cwtl
stc
mov
pop
xchg
subb
add
cmp
sub
or
mov
stc
les
dec
mov
aad
mov
xchg
test
or
mov
das
stos
test
pusha
cmp
xchg
daa
adc
jo
hlt
cltd
stc
aad
xchg
adc
in
adc
or
gs
xchg
in
out
sub
mov
push
sub
xchg
lret
cltd
jo
adc
and
push
xchg
shll
sahf
fmull
xor
inc
xor
rorb
cmp
or
rclb
and
push
orl
mov
or
sbbl
mov
push
leave
inc
imul
out
add
adc
or
aaa
adc
int
popf
push
nop
scas
sbb
leave
add
outsb
pushf
cmp
imul
inc
repnz
lret
mov
push
in
cmp
call
dec
dec
jg
xchg
adc
add
sbb
subl
sub
mov
cmp
fiaddl
insb
test
cmc
repnz
les
push
add
and
test
dec
adc
mov
xor
movsb
mov
in
idiv
fucomip
pop
fildl
js
inc
xchg
fdivl
lahf
rorl
insl
sbb
int3
or
inc
iret
mov
shll
xor
rcll
out
inc
loopne
lea
stos
add
dec
ret
mov
dec
add
movsb
cmp
and
ja
movsl
popa
and
out
mov
adc
mov
lcall
rcr
not
in
adc
repz
scas
rorl
test
movsl
add
or
test
sbb
push
or
mov
movsl
and
inc
scas
sbb
push
das
adc
inc
jl
sub
jae
sarb
pushf
push
ja
lret
add
loopne
cmp
xchg
cmp
pushf
test
hlt
jno
dec
outsb
das
adcl
insb
movsb
adc
in
add
stos
xlat
jno
push
in
or
in
loopne
mov
stc
xor
or
add
pop
jecxz
or
xlat
pop
cmp
mov
mov
cmp
jae
test
mov
xchg
les
out
push
loope
mov
xchg
in
mov
jbe
fst
arpl
loope
out
lea
mov
or
int
jg
mov
enter
and
mov
ret
dec
add
or
xor
xchg
and
std
roll
bound
mov
leave
add
lea
add
in
pop
push
cmp
int3
and
jns
inc
pop
sub
fnstsw
in
add
push
pop
scas
js
nop
add
mov
repnz
iret
adc
pusha
dec
imul
or
cwtl
pop
mov
mov
pop
addl
mov
pop
int
fmuls
in
fldt
xchg
rcr
btcl
mov
cmp
mov
lods
test
mov
adc
jmp
add
mov
jl
fldcw
mov
and
fcoml
inc
adc
sub
and
mov
movsb
add
cmp
scas
sbb
sbb
jno
jne
pop
jmp
enter
dec
mov
or
clc
int3
iret
xor
mov
enter
cli
fnstsw
mov
dec
enter
fdivr
inc
xchg
jg
adc
enter
xor
insl
pop
lock
lods
cs
test
mov
inc
and
or
pop
nop
loopne
push
bswap
mov
xchg
in
xor
fildll
bound
adc
add
bound
lahf
roll
xchg
int3
movsl
shrl
adcl
shrl
and
and
mov
loop
test
mov
xor
js
dec
adc
jb
mov
cld
js
add
loopne
sar
xchg
mov
sbb
andb
xor
xchg
loope
mov
hlt
xor
ljmp
add
jne
sub
outsl
punpckhwd
adc
stos
je
fbstp
jne
pop
mov
sub
loop
adc
mov
nop
and
aaa
xchg
vcvttss2si
ror
pop
sub
cmp
mov
inc
ss
sub
mov
xchg
ljmp
outsl
xor
int
mov
add
cltd
lods
push
mov
inc
out
int
mov
pop
ljmp
sbb
and
repz
psrld
in
add
fstps
les
xor
adc
sbb
rclb
and
mov
stos
mov
fisttpll
pop
adc
nop
jecxz
fcoms
insl
sbbb
scas
mov
lret
xor
mov
je
rcr
lret
pusha
and
sub
fmull
sarl
cld
and
rcrl
add
adc
loopne
sti
lds
rcrl
push
iret
shll
xor
add
test
dec
sbb
dec
mov
jne
insb
idivl
into
repnz
fists
dec
lea
icebp
pop
cmpb
dec
mov
in
pop
adc
popl
adc
hlt
lea
repnz
xchg
mov
subb
dec
rcrb
xchg
adc
pop
mov
sbb
inc
or
adc
pop
dec
lea
sarb
cmp
adc
icebp
cmp
pop
in
mov
dec
mov
rorb
jbe
lret
cwtl
ss
inc
mov
sub
ror
mov
pop
mov
jbe
push
dec
clc
cmp
sbb
cmp
aad
mov
add
and
out
inc
dec
xchg
adc
loope
inc
pop
incb
push
dec
or
jns
inc
loopne
test
je
out
xchg
add
add
pop
cmp
test
sahf
lret
mov
pop
out
add
xor
sbb
mov
test
cmpsl
xchg
fidivl
sbb
add
sti
mov
rorl
add
aaa
lcall
testl
xchg
and
cmp
outsb
insl
jb
xchg
dec
int
or
popa
dec
bound
lock
jno
add
cwtl
sbb
psrld
pop
ss
lea
neg
inc
sub
mov
mov
fldl
add
xor
filds
dec
adc
add
xor
enter
cmpsl
add
loope
dec
ss
cmp
dec
test
outsb
add
xchg
mov
dec
and
sbb
mov
scas
scas
jg
dec
insb
and
hlt
pop
mov
mov
sbb
loope
inc
orl
addr16
xor
adc
dec
decl
jle
dec
jge
sub
pop
xchg
rcll
mov
jle
jge
mov
jmp
push
adc
mov
adc
jbe
insl
mov
jmp
fstpl
jle
xchg
fwait
add
mov
pop
addl
add
repnz
pushl
es
sbb
push
pop
test
mov
pop
lcall
xor
and
xor
jge
mov
xchg
inc
mov
out
add
dec
imul
inc
inc
lcall
dec
mov
loopne
mov
lds
lods
push
pop
xchg
cs
adc
add
les
shll
sbb
lret
mov
fdivl
jl
daa
push
add
sub
sahf
mov
andb
cmp
fwait
xor
cmpl
test
add
leave
jno
sub
xor
ret
sub
add
fxtract
or
dec
pushf
dec
int
ret
mov
mov
cmp
aaa
out
leave
ret
sbb
inc
popa
in
fldlg2
xchg
das
add
scas
arpl
xchg
xor
or
test
nop
popf
push
inc
divb
sbb
xchg
and
lahf
sub
inc
adc
or
pushf
rcr
pop
lock
ret
push
cld
jge
and
out
je
adc
sub
or
mov
xchg
dec
das
xchg
dec
rcll
cs
push
imul
les
je
push
imul
add
pop
ficoms
inc
xchg
stos
sti
adc
fmuls
cmpsl
fldln2
xchg
nop
adc
add
xchg
sbb
inc
cmp
jge
lret
jne
loopne
or
sub
fisubl
sub
addr16
or
addr16
jb
movsb
je
xor
jns
jmp
mov
out
or
popf
pushf
movsb
push
xlat
mov
subb
test
push
std
dec
ja
push
hlt
roll
out
loopne
add
pop
imul
ja
icebp
push
adc
ljmp
loopne
push
jge
sbb
rcr
mov
push
and
lock
clc
movsl
aad
xor
jg
shrl
cwtl
inc
jne
addr16
inc
add
lret
push
fidivl
in
mov
pushf
pop
test
sub
aaa
mov
pop
xor
lods
xlat
lea
add
mov
ljmp
or
xchg
push
add
cmp
xorl
enter
sahf
push
jle
dec
mov
rorb
out
adc
mov
jp
jne
stos
lea
mov
xor
in
mov
add
mov
xchg
add
test
test
rolb
popa
rorl
sbb
repnz
gs
cmp
jae
lods
es
pop
in
fadd
sbb
shll
sub
push
push
bound
mov
add
popa
mov
scas
adc
xlat
cwtl
jmp
inc
dec
and
hlt
adc
cs
inc
mov
inc
test
fcmovnu
iret
rorl
out
rcrl
dec
lock
mov
push
cmpsb
xchg
iret
mov
dec
cmp
adc
int3
push
hlt
and
int3
call
push
cmpsb
dec
mov
dec
jge
adc
enter
rcr
addb
out
pop
inc
adc
int
scas
xchg
pushl
and
jbe
adc
sub
lahf
pop
or
xchg
sbb
xor
rol
popa
mov
adc
adc
je
add
cld
pop
sbb
push
test
push
pop
or
jns
cld
adc
sbb
test
sahf
inc
mov
aad
mov
fistpl
mov
test
jno
movsl
test
mov
sub
push
or
lea
inc
enter
rol
lret
popa
mov
pushf
out
mov
push
add
inc
jmp
lock
cld
sub
fsubrs
bswap
rcll
xchg
inc
pop
je
push
sbb
inc
rcr
roll
dec
insb
jl
mov
add
or
pop
push
lret
or
mov
nop
mov
mov
mov
loopne
js
jb
fmulp
cmp
loop
dec
inc
sub
or
mov
loopne
mov
push
mov
sarl
addr16
adc
addl
or
mov
mov
shr
ja
aaa
or
test
negl
xchg
or
fldcw
push
sub
dec
inc
xorl
add
lahf
inc
sub
sbb
in
out
push
ds
fs
xchg
mov
add
jp
adc
rorl
loop
xor
add
jl
rorl
adc
xchg
jb
or
xchg
popa
xor
xchg
xchg
addr16
mov
sub
xor
daa
mov
pop
cwtl
mov
jg
leave
outsl
dec
pop
push
ror
adc
insl
loopne
loop
mov
movsl
adcl
imul
in
repnz
test
rcl
nop
jl
xchg
pusha
test
cmpsl
inc
xchg
int3
lret
mov
mov
sub
and
jle
int3
mov
roll
mov
adc
pop
mov
jmp
add
fwait
push
popf
and
test
mov
pop
daa
test
adc
test
dec
cmpsl
add
int3
shl
and
cmp
cmp
jnp
inc
mov
or
je
and
sub
push
daa
xor
or
mov
loop
sarl
jge
dec
repnz
lcall
dec
push
in
cwtl
in
cmovl
or
fisubrl
xor
jp
hlt
dec
popf
aad
subb
xchg
movsl
mov
decl
add
nop
push
popf
push
jp
stos
in
or
in
test
mov
call
sbb
ret
mov
aaa
fisubs
les
jecxz
add
out
sarb
rcrl
cmp
roll
lret
inc
push
rcr
pop
sub
add
xchg
dec
popa
insb
xchg
adc
push
popf
xchg
pusha
mov
out
or
jmp
rcrl
dec
inc
add
les
into
jo
add
mov
pop
jge
xor
fldenv
xor
cli
sbb
stos
cmp
arpl
mov
pop
adc
cwtl
int
inc
adc
push
cmp
loop
mov
adc
mov
sub
mov
adc
lret
and
enter
fmull
lea
dec
es
in
notl
jg
push
and
stos
shrl
push
jg
hlt
dec
nop
mov
cltd
repnz
imul
fwait
inc
int
push
popf
or
jg
ret
pop
inc
fwait
mov
test
sbb
adc
xchg
pop
jno
or
cmpsl
in
es
xchg
sub
fadds
sahf
fisubs
xchg
punpckhwd
or
or
in
pusha
xor
pop
cli
psrlw
insb
mov
sbbl
repnz
fcmovne
int3
pop
lock
call
jne
mulb
cmpsl
xor
mov
in
adc
inc
jl
dec
cmp
jnp
mov
mov
xchg
pop
xor
enter
int
push
cmpsb
subb
mov
ret
or
mov
fdivl
icebp
stc
xchg
inc
mov
dec
or
and
dec
les
andl
mov
mov
inc
in
jb
mov
and
shlb
andl
add
push
imul
mov
mov
cmp
push
mov
pop
loopne
pop
inc
push
dec
test
inc
aaa
push
and
inc
sbb
push
inc
ja
loopne
mov
adc
jecxz
dec
jl
cwtl
jmp
mov
pop
pop
pop
mov
pop
movl
push
in
imull
mov
sbb
push
sbb
mov
sti
add
dec
repnz
cmp
mov
push
out
mov
mov
mov
dec
ret
movsb
aad
inc
call
hlt
rolb
cmp
lds
hlt
outsb
add
dec
sub
es
loop
andb
inc
popf
dec
shl
add
inc
cld
jp
int
loope
or
test
xchg
mov
out
xor
mov
sub
push
popf
jo
push
xchg
roll
icebp
adc
lods
fdivp
in
sbb
test
nop
ss
out
push
nop
jle
jb
jge
sbb
in
and
jne
aaa
jp
adc
andl
inc
jecxz
cs
in
mov
ljmp
xchg
in
and
add
lods
jge
xchg
mov
xor
mov
jl
popl
xlat
mov
lahf
dec
fcompl
adc
fnstsw
inc
insl
cs
sbb
inc
pop
lock
imul
arpl
sub
mull
fbld
adc
cmp
orb
sub
push
push
jbe
xlat
outsb
or
mov
and
sbb
in
and
dec
xor
inc
and
or
pop
test
lahf
jg
dec
inc
inc
shrb
mov
lahf
mov
imul
mov
pushf
ffree
push
leave
push
stos
xchg
scas
sahf
adc
adc
push
or
rclb
lret
loop
popf
icebp
int3
mov
sbb
mov
xchg
fcompl
dec
notl
inc
xchg
xchg
lods
sub
xchg
iret
inc
or
pop
cld
jb
mov
adc
sub
jg
mov
inc
shlb
mov
add
loope
adc
ss
sbb
push
lcall
mov
mov
scas
imul
xchg
hlt
cmp
cmpsb
jmp
mov
mov
lock
pop
loopne
dec
cmp
dec
das
add
test
sbb
and
and
mov
jno
cmp
mov
test
adc
jb
adc
loop
hlt
ljmp
inc
pop
data16
sbb
pop
ror
js
jb
adc
and
ffreep
movntq
adc
mov
sub
mov
pop
js
insl
call
loope
or
repnz
cmp
jmp
mov
or
xor
insl
dec
imul
inc
pop
lret
mov
cmpsl
pop
je
loopne
xor
data16
in
jle
ds
jo
js
jns
test
lret
movsb
xor
inc
imul
outsb
in
inc
and
add
xor
or
enterw
out
je
jno
in
mov
or
dec
pop
clc
push
cmp
inc
lret
lea
xchg
repz
inc
inc
icebp
loop
shr
fstpt
lahf
mov
xor
fnstenv
mov
sbb
pop
roll
loopne
or
fcom
or
adc
popf
ret
pop
or
or
in
jl
sub
xchg
mov
xchg
in
aas
cmp
loope
or
mov
mov
and
imul
or
sbb
fldl
or
mov
cld
adc
pmaxub
push
sbb
jb
pop
inc
add
add
dec
mov
pushf
in
inc
into
call
or
cmp
leave
xchg
cmp
cmpsb
loope
add
and
push
mov
into
fimull
and
test
or
outsl
imul
jp
or
adc
pushf
hlt
insl
shlb
and
popa
roll
mov
cwtl
js
scas
test
and
mov
js
fstp
lret
cmp
loop
add
aad
add
inc
imul
sbb
ss
xlat
iret
jle
stos
and
xor
lea
adc
or
cwtl
cmp
or
mov
shll
cwtl
inc
sub
je
pop
fiaddl
divl
mov
add
popf
and
push
arpl
data16
add
push
add
insb
inc
inc
jb
into
test
xchg
test
xorl
add
test
in
xor
test
xchg
scas
into
xchg
das
lret
or
test
pusha
add
pop
test
dec
add
leave
cltd
inc
mov
inc
popf
cmp
or
dec
sbb
insl
in
mov
test
push
not
test
rcll
add
dec
adc
lcall
shrl
add
out
add
or
inc
adc
adc
ror
or
lcall
out
in
in
and
xor
mov
push
mov
dec
cmp
xchg
enter
mov
xor
and
lods
dec
fs
dec
push
mov
aas
add
orb
jae
add
sbb
adc
sbb
add
je
shr
xlat
sbb
ret
or
add
adc
add
push
inc
push
mov
into
fs
int
mov
lds
in
test
push
decl
mov
jns
xlat
repz
int
shll
push
mov
lret
pushf
test
jno
addl
rorl
xchg
push
add
ret
ret
add
or
loope
in
leave
mov
xchg
add
lret
dec
lret
leave
leave
mov
dec
pop
lea
or
xchg
dec
orl
mov
or
in
inc
addb
or
inc
push
push
xchg
dec
addl
ficoml
in
dec
add
mov
lret
xchg
test
mov
adcb
jecxz
or
int3
dec
mov
mov
je
inc
test
mov
pop
int3
xchg
es
sbb
outsb
add
pop
sarl
inc
aaa
loopne
mov
sub
je
in
adc
iret
call
roll
fldcw
push
jae
mov
arpl
jle
dec
fs
in
add
in
mov
pop
xchg
dec
cmp
fcoms
and
adc
into
mov
xor
in
or
ja
out
inc
outsb
xchg
inc
mov
addr16
push
add
dec
adc
mov
cmpsl
xchg
test
or
fimull
mov
cli
popa
and
xchg
pop
dec
shll
aas
aas
je
fndisi(8087
sub
fsubrs
fisubs
xchg
pop
ds
dec
inc
xor
aaa
leave
adc
lea
inc
adc
jae
mov
fs
jb
xchg
out
or
mov
pop
fsubs
ljmp
test
lods
popa
mov
jb
fs
insb
clc
xchg
ret
add
xchg
cmp
jl
push
scas
out
outsb
sub
ret
or
test
loope
xchg
adc
pop
fwait
dec
xor
mov
aad
fimuls
cmp
dec
adc
lods
mov
fdivp
jg
add
fidivl
or
pushf
fimull
mov
inc
gs
xchg
fwait
testl
xor
sarb
mov
mov
dec
jecxz
xchg
dec
ret
push
mov
mov
test
add
cmc
pop
or
mov
sub
dec
js
loope
iret
sub
and
dec
and
jae
iret
popa
mov
push
call
push
pop
in
xlat
cmp
push
jns
xchg
jne
xchg
jl
dec
je
pop
mov
fcomps
add
dec
or
in
sub
in
mov
in
ss
fsub
adc
hlt
pop
ret
lret
mov
xchg
in
jae
xchg
jl
fiadds
mov
mov
xchg
mov
or
mov
std
ficoml
xor
cwtl
dec
xchg
lret
inc
lea
adc
jg
cwtl
mov
jge
popf
xor
cwtl
in
pop
add
sbb
cmpsl
mov
sbb
imul
int
cmc
in
out
cwtl
arpl
mov
add
add
ljmp
add
shlb
mov
add
mov
aas
mov
in
pop
mov
add
test
rcll
in
fs
out
inc
jb
jmp
mov
mov
arpl
dec
test
dec
xorl
sbb
mov
pop
call
jle
dec
inc
sbb
jl
or
add
pop
or
push
cmp
movsb
repz
mov
test
pop
xor
push
cmp
in
iret
loopne
clc
popf
add
push
jecxz
xor
enter
insl
mov
pop
pop
addb
call
rol
mov
mov
into
jo
xor
in
repz
pop
add
add
mov
sub
loope
shrl
faddl
cli
cmp
mov
and
addr16
cmp
test
xchg
inc
aad
imul
test
je
inc
movb
cmc
test
inc
xor
add
fimuls
sbb
gs
xor
test
popa
jmp
sub
and
sub
or
mov
cmpsb
daa
inc
test
in
xchg
mov
leave
add
ss
jg
fldenv
pop
and
mov
jmp
aad
xchg
scas
fucomi
push
mov
push
mov
fwait
mov
test
cmp
xchg
in
jmp
mov
aas
fidivrl
in
add
cmp
jnp
movsb
testb
jl
jecxz
jl
sub
mov
cltd
stos
rorb
xor
cmp
pop
imul
xor
pusha
cmpb
imul
mov
iret
repz
int
or
xchg
mov
and
inc
mov
rcrb
sbb
cld
scas
push
loope
mov
test
xor
scas
xchg
jecxz
in
fdivrs
fs
test
inc
sub
sarl
fucomi
dec
test
addl
fmuls
add
rep
and
ja
and
dec
enter
sub
dec
mov
dec
loop
daa
pop
lds
hlt
xchg
adc
cmp
sbb
leave
test
xchg
lock
andl
enter
mov
mov
jb
xor
in
pop
mov
call
loop
stos
mov
or
cmc
xchg
pop
nop
mov
jmp
mov
call
leave
sub
cmp
in
add
ret
sbb
pop
lret
inc
xchg
loope
jns
add
mov
in
decb
adc
cmp
add
std
cwtl
aaa
call
in
enter
loope
adc
cmpsb
mov
lahf
push
add
or
jb
shll
cmpsb
mov
dec
fst
mov
dec
lea
loop
lods
dec
xorl
jl
nop
test
adc
jg
jg
xchg
jnp
mov
adc
leave
sub
pushf
mov
adc
and
movsb
mov
daa
mov
enter
aam
cltd
lret
inc
mov
mov
andl
out
inc
fcomps
pop
and
push
jmp
and
adc
sub
jecxz
and
in
pop
jecxz
sbb
mov
movsl
xchg
push
xchg
aaa
dec
pop
add
push
cmp
test
test
push
sub
jp
insl
mov
aaa
test
or
pushf
cmpsl
loop
repnz
mov
mov
loope
add
adc
xor
adc
mulb
out
shll
add
or
fwait
loope
jo
loopne
mov
mov
int
mov
cwtl
jns
int3
test
ja
add
mov
int
ret
test
call
cmp
jmp
out
dec
and
rcll
loope
movsb
jno
in
jle
call
inc
add
into
movsb
adc
pop
jo
mov
mov
dec
cmp
and
add
xchg
add
test
cmp
insl
call
cmc
fmul
fcomip
int3
out
inc
jns
pop
mov
fsts
and
loope
jno
ficoml
pusha
push
cmp
push
sbb
loop
push
xor
sbb
mov
cmp
in
movsb
pushw
jno
or
bndstx
mov
outsb
push
cmp
inc
or
add
and
loope
out
rol
mov
inc
ret
mov
fs
enter
fidivrl
ret
stc
sub
jle
stc
call
sbb
fnclex
rcrl
mov
cmpsl
push
mov
jl
in
inc
inc
scas
in
adc
jo
fisubl
push
imul
and
dec
adc
enter
in
mov
addl
pop
or
in
nop
jmp
popf
xor
sbb
lcall
dec
and
cmp
xchg
out
hlt
and
sbb
enter
and
add
pop
sub
cmp
jbe
inc
in
xchg
pmaddwd
add
pusha
pusha
mov
jae
and
adc
sbb
or
lea
pop
add
dec
les
inc
adc
or
push
sbb
add
xchg
fsubs
cwtl
mov
aad
shl
scas
inc
dec
cmp
bound
and
xchg
inc
mov
jecxz
adc
xchg
jb
imul
jnp
and
addb
dec
pmullw
sbb
jns
das
les
int
testb
mov
into
pop
push
cmp
cmp
dec
arpl
adc
bound
orb
xchg
dec
adc
or
jbe
imul
mov
dec
sbb
jle
lret
add
sbb
es
pop
nop
cs
dec
mov
cmp
add
dec
je
cmp
inc
cmp
clc
std
sbbl
aaa
cmp
fcmovnu
call
ss
mov
ljmp
les
movsl
or
and
jb
loop
out
cmp
jle
mov
inc
jl
jnp
mov
add
cmpsl
or
cwtl
mov
inc
mov
stos
imul
shrl
sti
adc
out
pusha
lret
lcall
pop
ds
lods
push
mov
in
xchg
bound
adc
inc
mov
test
cmp
pop
imulb
cmp
xchg
add
jno
inc
xchg
inc
mov
cmp
pushf
pusha
movsb
inc
popa
cltd
sub
int3
xorb
js
insl
pop
pusha
xchg
sbb
xchg
or
mov
adc
dec
loope
sbb
jg
inc
add
mov
imul
hlt
popf
add
xchg
test
add
mov
js,pn
test
out
stos
adc
ret
cmpsl
push
mov
out
call
dec
jge
in
xor
movsb
sbb
xorl
mov
loope
add
bound
or
inc
add
sahf
xchg
in
mov
or
mov
leave
aam
mov
sbbl
addl
xor
xchg
out
push
add
lea
push
xchg
sub
icebp
insb
mov
negb
xchg
movl
inc
or
add
cmpsb
mov
mov
or
dec
jbe
adc
dec
and
shlb
scas
aam
add
push
movsl
or
xchg
xchg
in
add
sub
test
add
mov
test
mov
push
push
mov
mov
push
daa
or
pop
lcall
mov
test
mov
mov
lahf
push
nop
stos
test
sub
lret
outsb
bound
clc
cmp
test
ss
add
sub
mov
shlb
insb
jg
pop
inc
or
mov
in
add
lods
sbb
mov
fs
xchg
jae
mov
xchg
push
push
iret
aad
jmp
test
xlat
in
scas
inc
mov
add
inc
push
in
mov
sub
jg
dec
mov
mov
or
insb
jecxz
sbb
test
les
mov
xchg
sbbl
lret
dec
in
test
sbb
in
not
cs
test
push
sub
add
add
push
test
inc
mov
push
leave
or
mov
cwtl
push
imul
and
lret
inc
mov
push
mov
mov
sbb
subl
and
mov
test
enter
aam
std
sub
movsl
ror
mov
or
stos
orl
push
orl
loope
push
adc
aaa
xchg
gs
xorl
movsl
addb
add
add
add
push
out
movlps
cmpsl
mov
push
xchg
or
dec
in
mov
andl
or
loope
jnp
fs
shll
ljmp
mov
shl
cmp
mov
scas
adc
mov
insl
xor
mov
jno
insl
sbb
push
jmp
outsl
outsl
pop
stc
and
loope
xchg
clc
or
mov
imul
addr16
loopne
fwait
std
push
mov
les
out
fs
or
bound
jno
and
int3
push
lds
pop
sti
addr16
inc
add
mov
push
fsubrs
dec
outsl
xchg
push
dec
pop
jnp
aad
into
xor
mov
pop
inc
mov
stos
add
sbb
adc
fmull
hlt
fsubrl
mov
imul
xchg
shr
xchg
jmp
pop
gs
in
insl
push
inc
mov
mov
xchg
ret
outsl
sbb
scas
cwtl
lret
in
dec
inc
lcall
inc
add
mov
and
lahf
mov
subl
inc
aam
ja
sti
adc
mov
inc
pop
mov
adc
out
sub
adc
mov
repz
test
push
xchg
dec
cmp
xchg
call
mov
cmp
push
or
mov
lret
daa
andl
outsb
dec
aas
fmuls
add
sbb
inc
adc
cmp
inc
cmpsb
inc
sbb
mov
insb
xchg
shlb
data16
aaa
mov
xor
test
dec
sub
jp
into
mov
jo
data16
loop
adc
rorl
clc
ret
mov
push
in
jbe
xlat
stos
sbb
xchg
iret
cwtl
sub
dec
add
arpl
or
adc
lret
lret
xchg
ret
jle
cmpsl
loop
sub
mov
pop
cmp
roll
push
fistpl
mov
aas
outsb
pop
dec
jecxz
insl
rorl
xor
mov
fistps
dec
jecxz
stos
roll
push
and
jno
icebp
pop
in
std
test
add
mov
add
aam
mov
xchg
dec
add
ret
adc
mov
arpl
sbb
add
sti
arpl
cmp
or
adc
add
cmp
xchg
cmp
or
fbstp
jp
iret
mov
sbb
mov
mov
inc
outsb
inc
inc
js
stc
inc
daa
sbb
mov
in
dec
adc
inc
lea
push
xchg
lock
or
mov
loopne
insb
out
pushf
push
fistl
rcrl
loope
je
and
xor
daa
mov
or
aaa
je
dec
xchg
lea
push
or
test
outsl
jbe
push
into
int3
ja
sub
inc
fcmovnu
in
loopne
cmpsb
add
cltd
aaa
jge
mov
loope
sti
or
adc
pop
inc
pop
pop
mov
cwtl
inc
xor
adc
loop
insb
das
push
push
in
xchg
cmp
icebp
sbb
loop
mov
cmp
add
add
dec
add
mov
and
lahf
adc
daa
out
push
adc
xchg
lahf
jge
xchg
cmc
leave
sbb
push
xor
les
and
adc
mov
ds
call
movsl
push
mov
or
jne
adc
jmp
sub
mov
scas
cmpsl
jl
in
shll
lea
jge
rclb
jbe
add
push
int3
or
in
mov
hlt
inc
mov
lret
in
mov
dec
mov
ljmp
test
mov
mov
ljmp
cmp
cmp
jecxz
hlt
lea
call
movsl
loop
mov
sti
or
sub
mov
adc
sbb
data16
mov
test
test
adc
and
mov
daa
test
adc
push
into
negl
pusha
mov
test
mov
cmp
sub
xor
ror
ds
pop
orb
sbb
loop
test
pop
mov
dec
data16
inc
add
sbb
call
rorl
outsb
jecxz
jg
std
adc
jb
fs
mov
xor
fisttpl
push
sbb
push
dec
inc
aas
adc
mov
lods
push
hlt
push
clc
ret
repz
loope
add
cld
mov
popf
lea
fsubrs
inc
xor
jbe
les
inc
mov
mov
in
push
pushf
adc
cmpsl
addr16
and
shll
add
push
andl
xor
nop
in
testb
insl
fidivrl
mov
popf
fwait
sub
ss
cmpsl
sub
adc
push
mov
add
and
lods
fsubr
or
xchg
mov
xchg
xor
pop
or
loop
test
add
adc
inc
xchg
adc
popf
out
push
dec
add
xor
mov
and
ds
popa
movnti
dec
push
xchg
pushf
cli
popf
aaa
dec
jp
sub
ret
add
mov
mov
dec
les
pop
loop
je
mul
ja
mov
in
dec
adc
xchg
ret
sarl
push
outsb
or
jnp
sbb
mov
fiadds
scas
push
jbe
sub
mov
mov
daa
sbb
sub
push
mov
xor
ret
mov
fdivp
mov
jl
mov
and
mov
sbb
insb
dec
movsl
ds
xor
push
in
pusha
add
jecxz
mov
mov
push
lret
and
mov
add
mov
or
lds
in
xchg
push
cli
fwait
in
test
adc
xlat
movsb
or
arpl
push
sub
cmpsl
sti
mov
imul
or
inc
add
dec
push
movsb
cmp
fcomps
ja
push
pop
and
mov
lahf
pop
or
clc
mov
iret
cld
lods
js
pop
sarb
lock
sbb
jne
mov
mov
inc
enter
cmp
push
sbb
daa
lcall
jecxz
icebp
fsubrp
setp
gs
lods
insl
sbb
mov
xor
xchg
sahf
or
ret
pop
les
push
mov
fdivl
inc
cmp
test
add
or
mov
adc
subb
push
in
sti
adc
mov
dec
test
in
add
mov
imul
scas
call
mov
xchg
add
xor
andl
cwtl
out
adc
hlt
fidivrl
icebp
dec
mov
mull
add
xchg
sbb
stos
dec
xchg
je
cmp
mov
or
jo
test
mov
out
add
xor
and
mov
inc
lds
add
in
shll
inc
and
enter
xchg
add
add
and
hlt
mov
pop
ret
out
shl
aaa
cmp
inc
pop
shrb
loop
fwait
cs
sbb
test
push
in
cmp
fld
fists
add
sbb
rcrb
sbb
loopw
and
aam
xchg
pop
decl
hlt
cmp
xchg
xchg
aad
fwait
mov
addr16
dec
lret
xchg
xor
fsubs
pop
nop
adc
cwtl
mov
xchg
lds
mov
leave
xchg
nop
je
sbb
lret
adc
add
idivl
scas
sub
or
nop
dec
sbb
xchg
jb
outsl
mov
dec
cmp
push
adc
dec
push
daa
fcomps
add
test
jo
loopne
fcompl
dec
lahf
sbb
pop
dec
mov
mov
out
es
and
lds
jp
adc
adc
mov
ss
aad
adc
cmp
sbbl
cli
jle
cmp
test
insl
in
ss
and
jle
xor
inc
xchg
mov
loopne
sub
push
es
ret
dec
fdivs
push
cmp
lods
pop
add
and
sub
adc
popa
or
loop
xor
addb
fs
push
and
cltd
inc
mov
lcall
mov
jnp
mov
repnz
inc
xchg
xchg
adc
cmp
add
pop
jmp
and
sub
and
aad
xchg
mov
sbb
mov
add
push
xlat
adc
or
mov
fwait
pop
or
mov
idivl
rclb
push
mov
out
lret
enter
in
test
add
adc
jge
bound
push
push
ret
adc
sub
xchg
ret
cltd
push
push
add
mov
mov
add
sub
cli
and
mov
xchg
outsb
jl
test
rol
add
mov
or
in
test
outsb
imul
call
insb
hlt
sti
jmp
movsb
or
ret
in
fs
jmp
cwtl
js
outsb
or
paddsb
stos
push
pop
fstpl
in
mov
mov
push
or
sbb
push
loop
push
fstl
xchg
iret
insl
jecxz
div
inc
lret
pop
inc
rcr
adc
dec
dec
sbb
cmp
rorl
mov
add
fisttps
clc
xchg
xorl
mov
in
mov
movsl
inc
xchg
fs
popf
pop
and
loope
mov
mov
ret
shrb
aaa
dec
movsl
inc
add
inc
xchg
xchg
into
xorl
fistpl
enter
lods
fisubrs
xchg
add
push
loope
clc
mov
or
push
dec
pop
test
pop
or
cmpsl
mov
xchg
xor
adc
test
jb
insb
inc
rol
cmp
lds
je
call
lock
mov
xchg
mov
std
sarl
movsl
add
mov
outsl
out
inc
dec
cltd
inc
sub
jmp
jmp
xor
dec
and
fwait
sbb
push
in
cld
or
sbb
in
sbbb
dec
loop
lea
jle
data16
inc
adc
shl
bound
or
xor
lock
rorb
into
aas
js
pop
sti
pop
leave
adc
out
rcll
stos
fsubs
cltd
loop
sub
test
sub
in
mov
or
cli
add
or
iret
jecxz
or
dec
fwait
data16
push
out
aaa
push
mov
mov
cltd
mov
into
jg
aas
addl
mov
cwtl
dec
mov
cmp
test
xor
pop
pop
cli
sbb
in
add
pusha
shlb
mov
push
aam
orl
xchg
test
icebp
cmp
popf
sub
cmp
inc
int3
andl
aam
and
jns
push
mov
add
arpl
xchg
mov
mov
into
fldln2
mov
xchg
jo
mov
loope
xchg
xor
add
orl
iret
sahf
pop
test
sbb
mov
rolb
es
fsubl
das
or
nop
xchg
mov
adc
sub
std
test
fcmovnb
adc
pop
inc
or
in
addl
js
mov
in
into
or
fld1
xchg
int
mov
loope
xchg
cmp
mov
jl
inc
push
pop
cmp
test
adc
pop
shlb
scas
adc
mov
cmpl
loope
ret
jl
or
fdivs
lcall
popa
push
aas
dec
inc
xchg
outsl
push
stos
jge
adcl
ficoms
or
xor
aaa
fiaddl
pop
ficoml
iret
pushf
leave
aas
mov
pop
xchg
jbe
aas
mov
pop
fcomps
popf
pushf
sbbl
pop
divl
jle
movsl
xchg
or
add
das
aad
insb
xor
or
subl
ret
jp
imul
cwtl
or
xchg
add
ror
lea
aas
push
aam
orl
icebp
test
lret
adc
jp
subl
ret
aad
mov
inc
fidivrl
jl
dec
mov
cmp
xorl
std
aas
out
int
mov
mov
pop
xor
or
jmp
sbb
test
xchg
ret
inc
xor
daa
mov
pop
or
addl
mov
mov
sahf
nop
andl
daa
clc
hlt
repz
andl
mov
leave
mov
add
lea
dec
popf
push
scas
push
ret
in
xchg
cmp
cmp
roll
sbb
xchg
inc
ret
in
loope
clc
lea
orl
add
jnp
gs
mov
enter
repz
in
xchg
in
fldl
cs
test
push
test
pop
into
ljmp
pushf
jecxz
loope
mov
or
aaa
xor
mov
mov
lret
xchg
add
inc
mov
test
add
imul
sub
cwtl
shll
or
or
sar
xorl
cmc
out
test
dec
sbbb
inc
sbb
mulb
xor
loope
ljmp
orl
push
cld
std
sbb
repz
adcl
andl
notl
fs
icebp
out
popa
ja
cs
jg
sub
rorl
mov
orl
rcll
xchg
pop
push
xchg
repz
into
insl
mov
xor
aam
cmp
cmp
sti
fdivl
xchg
cmc
shrb
xchg
leave
xchg
inc
lahf
loope
sbb
lods
lock
std
cmp
xorl
xor
mov
inc
ss
lahf
jmp
icebp
sbb
sbb
or
bound
pop
xchg
push
adc
xorl
cmc
scas
mov
ss
add
dec
xor
mov
divb
mov
orl
int3
xchg
andl
dec
xor
jecxz
push
notl
test
orl
imul
gs
mov
lock
push
fnstsw
rcrb
xorl
mov
adc
scas
mov
lock
dec
sarl
or
or
mov
ror
mov
xor
sbb
lds
or
outsl
jecxz
call
sbb
loope
js
and
cmp
andl
or
inc
data16
icebp
sbb
loope
or
pushf
mov
sti
bnd
mov
aaa
add
xor
cmp
add
xor
jmp
loopne
mov
inc
adc
xchg
dec
leave
gs
sub
divl
roll
insb
push
jnp
data16
mov
dec
mov
mov
mov
cltd
jb
movl
push
ds
dec
jbe
mov
cld
mov
imul
cmpsb
mov
cmp
ljmp
icebp
wrmsr
imul
pop
or
out
mov
jl
push
pop
sbb
lahf
pop
jns
loopne
dec
fs
rorl
jp
in
or
enter
bound
test
rcrb
xor
pop
pop
cmp
pop
subl
add
in
into
push
xor
in
xchg
inc
sti
stos
subl
js
daa
jle
sbb
sbbl
outsb
and
jp
push
or
loope
lret
cmp
mov
clc
cmpl
jmp
sub
jg
mov
mov
hlt
lods
or
jbe
test
mov
sbb
imul
sbbl
xor
xchg
dec
cmp
lcall
rcl
or
orl
xor
adc
mov
or
cltd
jno
jecxz
dec
adc
ret
cli
popa
or
sbb
out
sub
or
mov
shl
dec
sbb
or
inc
popf
imul
iret
rclb
and
out
fldt
je
pop
dec
and
es
mov
xor
inc
aas
mov
sbb
imul
sbb
cmpsl
mov
pusha
mov
cmp
cli
mov
mov
ret
xor
shlb
xchg
jg
cltd
lcall
fsubrs
adc
jecxz
sbb
orl
ficomps
in
xor
mov
clc
scas
sub
dec
jno
xchg
ficompl
cmc
add
mov
xor
dec
call
pop
repnz
and
xor
cmp
sbb
or
repz
mov
mov
cmp
jg
test
push
cmp
notb
idivl
out
leave
icebp
jae
adc
shlb
cmp
es
ret
in
adcl
rolb
idiv
push
mov
cmc
imul
in
or
iret
adcl
mov
repz
jo
or
in
pop
aas
orl
mov
jg
cmc
fcoml
lretw
sets
push
push
imul
inc
outsl
jns
xchg
and
mov
cmp
aam
mov
and
inc
adc
int
mov
xor
pop
shll
mov
dec
in
push
jg
fmuls
sub
in
shrl
adc
inc
or
in
ret
cs
jno
lds
sub
mov
mov
test
or
in
cld
mov
push
orl
jecxz
xchg
add
cmp
mov
xchg
jae
push
cmp
sbbl
mov
mov
adc
aam
imul
rorb
or
lods
bnd
adc
adc
jo
adc
test
andl
cvtps2pd
sub
cmp
nop
dec
add
cli
and
pop
xchg
mov
int
in
dec
mov
xor
push
cmpsl
add
pop
mov
or
mov
sub
ds
xor
lcall
push
negl
mov
fcoml
adc
outsl
adc
jecxz
pop
sbb
or
push
xor
add
cwtl
in
in
mov
or
or
add
cmpl
ret
mov
or
mov
jbe
out
hlt
xor
push
scas
flds
add
push
cwtl
push
mov
cmp
lahf
ds
xor
ss
lea
movsl
cmpl
xchg
addl
adc
and
xor
adc
hlt
insb
loope
cmp
jb
add
or
stos
out
sbb
or
test
rcll
daa
adc
sbb
in
mov
outsl
mov
sbb
das
pusha
mov
lock
dec
push
jns
test
lds
in
mov
loope
leave
push
xchg
test
clc
inc
or
or
outsb
mov
push
scas
cmp
in
mov
xor
aaa
test
cmc
push
subl
dec
fldl
or
lahf
fcompl
sbbl
cmpsl
loop
jmp
add
xor
mov
pop
dec
in
ret
subl
inc
das
xor
int
mov
pop
addr16
stc
outsl
mov
dec
loope
adc
in
and
mov
shll
or
stos
icebp
xchg
out
sbb
push
cld
cmp
xor
mov
popa
and
in
inc
or
add
mov
sub
in
aad
xchg
fsubl
fiadds
loope
incl
repnz
shrl
jae
popf
xchg
add
outsb
arpl
and
adcl
pop
out
sub
jle
add
xchg
out
test
mov
mov
inc
cmp
add
jle
imul
pusha
push
adc
mov
subl
out
pushf
mov
test
out
sbbl
cmp
cwtl
lea
cmp
in
add
push
xlat
scas
mul
xor
ficomps
xorl
push
sub
adcl
enter
mov
ja
out
repz
or
addl
xor
mov
clc
jg
push
mov
add
cmp
test
xorl
xlat
call
fmul
icebp
lret
fnstcw
xor
inc
xchg
xchg
out
cmpsb
cmp
cmp
pop
cmp
add
cmp
lods
add
add
ljmp
sub
xchg
test
movsb
adc
inc
roll
sub
push
scas
sbb
loope
xchg
adc
ljmp
repnz
pop
adcb
xorb
mov
mov
sbb
in
call
dec
pop
pop
push
outsb
cltd
dec
test
cmp
aas
adcb
ljmp
bound
inc
xchg
notl
icebp
js
dec
push
sbb
fcoms
lahf
nop
mov
leave
and
out
xchg
cltd
subb
pusha
cltd
int3
test
jo
xchg
stc
xchg
xchg
inc
out
stos
cltd
sub
test
ljmp
xchg
mov
gs
adc
nop
mov
stc
testl
movsb
jecxz
and
pushf
inc
out
fadd
popl
mov
dec
xchg
and
push
push
dec
add
cmc
push
xor
xor
adc
inc
and
add
mov
test
and
std
mov
jne
xchg
mov
jbe
xchg
xor
inc
jmp
inc
xor
adc
jl
and
and
ret
in
xchg
cmc
xchg
clc
adc
lcall
ljmp
stc
jne
inc
dec
adc
adc
mov
ljmp
lret
shll
test
inc
out
push
lods
int3
pop
lret
xchg
cmpsb
xchg
and
shll
movl
and
add
mov
lds
movb
and
call
sub
adc
and
lea
mov
xchg
xchg
insl
out
nop
inc
pop
push
cmp
adc
inc
sbb
xor
inc
lcall
and
gs
movsb
leave
gs
mov
in
jae
aas
xchg
sub
jne
imul
lret
adc
dec
mov
and
inc
inc
jne
cltd
aas
inc
sbb
add
jae
lock
icebp
mov
aam
data16
lret
sti
insl
sahf
push
push
inc
lea
ffreep
testb
inc
xchg
or
push
into
cmp
and
outsl
xchg
cmp
dec
add
adc
add
xor
push
sbb
inc
int3
xchg
adc
aam
lahf
mov
adc
orb
ljmp
inc
add
data16
shlb
ret
sahf
pop
jne
add
ljmp
movsl
cwtl
cmp
xchg
rcll
xchg
movq
ljmp
daa
xchg
insl
mov
insb
and
call
ror
mov
dec
clc
bt
ror
cmp
cmc
pushf
not
clc
clc
mov
stc
cmp
movzbw
lea
jmp
mov
ror
cmc
pushf
push
cmc
not
jmp
testl
icebp
es
stos
call
jmp
adc
push
cmpsl
pop
xchg
inc
jo
notb
or
jbe
leave
call
xor
idivl
mov
subl
nop
dec
imul
repz
xor
cmc
or
cwtl
inc
cmpsb
cld
stos
ret
ljmp
mov
mov
pop
push
decb
in
dec
add
inc
xchg
or
xlat
add
or
into
insl
lods
std
adc
mov
arpl
mov
shrl
inc
outsb
push
cmpsb
ret
jecxz
push
mov
dec
dec
jne
fwait
dec
adc
ljmp
and
cmp
mov
sti
and
cs
add
xlat
out
in
sbb
sub
add
shlb
xor
lret
mov
jnp
or
lock
pop
xchg
ja
stos
call
test
movsb
roll
sub
inc
fdivs
cmp
sbb
cli
stos
mov
cmp
imulb
lahf
sub
loopne
sbb
dec
fwait
jbe
cmp
outsb
ret
xchg
daa
mov
or
clc
mov
jno
es
add
pop
xchg
lret
ss
lea
jne
jmp
push
shl
jmp
not
bt
clc
bt
bt
cmp
movzbl
lea
pop
mov
pushf
pushl
lea
jne
ja
pushf
pusha
lea
jb
bt
test
cmpb
push
movb
pushf
lea
jne
dec
mov
stc
add
bt
pusha
test
test
movzwl
add
clc
bts
adc
sar
mov
clc
stc
jmp
pusha
movl
pushf
push
push
push
lea
jmp
lea
je
cmp
push
movb
cmp
pushf
lea
je
pushf
pushf
pusha
lea
jmp
cmp
cmp
das
loope
pop
sbb
xor
jl
lods
jbe
mov
popf
sub
and
mov
or
adcb
bound
clc
out
pop
addr16
lea
inc
out
adc
xchg
cmc
push
bsr
and
loopne
ficoms
int
lahf
mov
das
popa
hlt
ljmp
mov
andb
or
inc
xchg
pusha
popa
sub
lcall
sub
bound
jne
bound
mov
daa
mov
push
clc
sub
lods
push
filds
sub
xor
inc
sbb
xchg
xchg
push
rcrb
push
xor
outsl
jmp
shrl
rclb
mov
mov
jne
lret
sbb
sub
pop
adc
pop
aas
mov
hlt
or
shl
jns
inc
jecxz
adc
orl
in
imulb
cmp
xlat
jno
sarl
ss
mov
pop
or
sub
sarl
mov
je
jnp
test
pop
sub
push
out
enter
lea
int
pop
nop
jmp
xchg
fadds
sbb
es
and
aaa
jbe
loopne
and
js
mov
iret
cmc
std
sbb
nop
mov
ficoms
ds
insl
popf
pop
push
bound
adc
xor
rcrb
je
adc
or
jb
jne
xor
imul
movsb
push
mov
xchg
sub
jle
sub
jne
adc
aaa
xchg
inc
in
imul
fstpl
mov
repz
imul
and
mov
sub
cmp
jl
push
adc
jecxz
pop
lea
jne
push
pushf
inc
push
lea
jo
pushf
inc
pushf
lea
jmp
call
pusha
repnz
call
xor
cmc
pushl
pushf
repnz
call
jmp
stos
push
pusha
pushl
lea
jmp
cmpsb
flds
ss
mov
push
outsl
mov
arpl
cmc
notb
and
comiss
enter
cmc
and
or
or
add
mov
in
rolb
fwait
dec
xchg
fldenv
adc
scas
insl
dec
bound
cli
aam
je
in
fnsave
and
inc
mov
fildll
sub
dec
imul
jle
dec
bound
cwtl
sahf
test
xchg
or
out
and
aaa
fs
icebp
andl
outsl
jmp
adc
repnz
adc
jg
jmp
pushf
jmp
jmp
movl
pusha
mov
pushf
push
push
mov
pushl
ret
pusha
repnz
mov
movb
pushf
lea
jne
neg
adc
mov
bts
pusha
sub
bswap
cmp
pusha
btr
lea
pushf
test
sub
mov
bt
pushl
popl
cmp
cmp
pushf
cmp
pushl
lea
ja
shr
shl
sub
movzbw
and
add
adc
btc
rcr
mov
pusha
shl
mov
pushf
clc
repnz
pusha
movb
lea
jne
jmp
lea
jl
push
pusha
pushf
pusha
mov
mov
push
mov
pushf
mov
pushl
ret
lea
mov
bswap
mov
lea
js
pusha
mov
lea
movsbw
lea
mov
pushl
call
or
mov
jl
test
call
cmp
enter
cmp
mov
mov
ja
inc
movsl
stos
cmpl
repz
pop
adc
dec
mov
cmpsb
sub
dec
pop
notb
pop
out
pop
stos
push
cmc
inc
cmp
pushf
pusha
lea
jae
movzbw
adc
mov
movzbw
or
cmp
or
mov
not
mov
bt
call
das
mov
sbb
xor
push
xchg
inc
std
lahf
and
pop
push
and
outsb
add
inc
and
stos
mov
jle
inc
fistps
adc
outsb
xchg
push
pop
cwtl
xor
pop
cmc
cmpsb
lret
nop
sub
xchg
mov
adc
fsubs
ret
and
je
not
add
shr
jmp
sub
push
test
mov
cmc
cmp
jmp
mov
pushf
shl
mov
bts
shr
sar
or
mov
jmp
pusha
call
push
pushf
movw
pushl
popl
mov
pushl
pushl
ret
jmp
lea
mov
pushf
pusha
movw
pusha
cmpb
push
pushl
jmp
mov
not
not
mov
lea
jl
pusha
pushl
inc
cmc
clc
test
xor
bt
movl
bt
jmp
push
mov
movl
pushf
pushf
push
lea
jmp
clc
pushf
pusha
bt
or
jmp
push
movl
pusha
pushl
movl
pushf
lea
jmp
pusha
test
mov
or
jmp
not
pushf
call
shr
pushf
lea
je
pushf
jmp
push
fisttpll
les
or
sub
add
dec
data16
xchg
cwtl
sub
pop
push
in
sbb
int3
adc
insl
pop
sbb
push
loopne
fucompp
call
dec
gs
inc
icebp
xor
notl
call
rorb
add
es
xchg
cwtl
mov
pop
test
lcall
sub
cmpb
jmp
cmp
mov
call
lea
je
push
movw
pushf
lea
jmp
ror
mov
call
pusha
lea
call
push
movb
lea
jae
call
jne
gs
xor
fs
insb
add
mov
movb
pushf
bswap
bswap
mov
not
cwtl
lea
call
jmp
cmp
call
sub
call
pushf
pusha
not
lods
pusha
stc
test
neg
clc
bt
call
jmp
jo
daa
js
das
fsts
sub
cmp
mov
inc
fs
cltd
out
in
cmp
or
lods
cmp
sub
sub
mov
enter
in
rcll
scas
jae
sbb
jge
rol
add
not
movzbw
mov
add
jne
pusha
movb
shr
jmp
lods
bt
neg
bt
lea
jge
pusha
ror
pusha
test
movb
movw
sub
pushf
clc
call
pusha
movb
lea
jae
xadd
ror
mov
jmp
mov
call
pusha
movl
call
mov
mov
movb
mov
pushf
pushf
pushl
ret
pushf
movb
jmp
sbb
int3
dec
insl
mov
loope
ficoml
imull
jb
pop
mov
mov
adc
lock
sbb
mov
daa
shll
rcr
out
into
sub
add
repnz
xor
sbb
sub
scas
mov
lea
add
inc
pop
test
out
andl
fwait
cmp
add
or
mov
add
and
testl
sub
xchg
pop
scas
xor
mov
shl
add
pushl
movl
pushf
movb
lea
jmp
lea
jbe
pusha
lea
jne
pusha
call
rol
xor
mov
cmc
test
repnz
push
pushf
pusha
lea
jne
pusha
movb
jmp
test
pop
jae
xor
out
sub
sbb
inc
fdiv
cmpsb
inc
push
pop
jl
or
inc
adc
fs
xchg
mov
in
xor
and
fwait
cmpb
push
ss
lahf
adc
add
in
push
xor
in
out
pop
je
mov
jnp
jne
mov
mov
hlt
fistl
jne
cltd
jb
dec
sub
cli
sbb
inc
sub
push
sub
divb
aad
xchg
fwait
pop
pop
mov
pop
sbb
das
pop
les
adc
rcrb
imul
pushf
pusha
push
push
lea
jae
pusha
jmp
bt
add
stc
cmp
push
movb
lea
jl
push
lea
jb
clc
push
cmp
jmp
add
mov
cmp
cmp
pusha
lea
jb
jmp
push
call
in
jmp
mov
or
out
push
jb
push
sub
fsubrl
ret
les
cmp
cmpsl
adc
inc
sahf
insl
jl
stc
push
and
cmp
xchg
push
les
jo
jl
push
mov
ljmp
push
dec
std
shl
cli
test
sbb
imul
xor
sbb
pushf
sub
stc
fldenv
cmp
sbb
sarl
std
imul
add
xor
jp
mov
sub
xchg
stos
cmp
mov
adc
repnz
lret
add
jbe
cmc
cmp
call
movl
mov
mov
push
pusha
mov
pushl
ret
lea
jne
and
ror
xor
pushf
bt
jmp
xor
push
mov
mov
jae
loop
push
ss
inc
push
add
mov
cli
shlb
test
into
sbb
in
pop
cmp
and
sbb
adc
dec
mov
ret
enter
mov
ret
sbb
frstor
cli
in
repnz
fildl
lods
push
imul
sarl
mov
mov
dec
sbbl
push
loop
jne
xchg
adc
ss
jmp
jmp
lea
jne
lahf
movb
lahf
push
pushf
pusha
lea
pushf
pushf
pushf
pushf
movl
call
jnp
pushf
push
mov
movl
mov
pushf
movl
push
pushl
lea
jmp
aas
fdivrl
jo
pop
mov
add
pop
in
sub
mov
jge
mov
add
inc
push
lret
aad
mov
mov
loope
xor
mov
add
inc
mov
movsb
rorb
sbb
and
fisubs
mov
push
insl
dec
pop
movsb
cmp
in
inc
lock
gs
add
rcl
insb
sahf
test
mov
jb
test
sub
xchg
js
rolb
xor
pop
pop
incl
fistl
out
inc
adc
repz
imul
movb
lea
jmp
pusha
pushf
pusha
movl
call
pushf
pushfw
popw
jmp
shrb
jae
pushf
in
rcrl
lock
mov
jo
cli
push
shlb
mov
cmc
push
sbb
dec
mov
and
and
push
mov
pop
fisubrl
push
push
das
and
addb
imul
popf
pop
cmp
lcall
mov
pop
lods
jnp
mov
jae
fisubrl
dec
mov
mov
or
mov
and
inc
and
inc
inc
inc
pushf
bt
bt
clc
xor
stc
call
pushl
movl
pushf
lea
jmp
imul
gs
xor
cs
insb
add
clc
sub
sar
cmc
add
rol
not
not
bts
mov
sbb
cmc
mov
clc
repnz
jmp
repz
push
call
or
pusha
movb
lea
jge
push
lea
jne
inc
mov
cmp
or
pusha
pusha
lea
je
push
sets
not
lea
lea
not
movzwl
jmp
jg
dec
dec
sbb
in
cmp
sub
inc
jmp
popf
and
xchg
sub
test
in
fimuls
push
fstps
fwait
ret
push
adc
add
push
xor
inc
mov
out
push
push
sarl
lods
cmp
mov
inc
mov
cmp
data16
rcr
addr16
mov
lods
lahf
cs
adc
push
sub
insb
sbb
testl
repz
insb
icebp
mov
cwtl
ljmp
repz
pop
mov
shl
test
xor
clc
bt
mov
movb
ror
push
jmp
popf
rdtsc
nop
push
jmp
adc
pushf
sbb
pop
sbb
dec
pop
or
fistpl
sbb
fistpl
sbb
fcomps
pop
sbb
pop
fwait
or
pop
fwait
pop
pop
pop
fmuls
sbb
fimull
sbb
pushf
pop
pushf
pop
or
xchg
xchg
pushf
mov
xadd
sar
mov
inc
rcl
push
sbb
xor
rcl
push
movzbw
rcr
push
shl
pusha
movzbw
mov
sar
jmp
sahf
inc
enter
cmpsl
je
push
arpl
insb
cwtl
inc
testl
pop
push
dec
fsubr
imul
shlb
repnz
lods
movsb
mov
pop
or
add
and
mov
int
cmp
and
push
cmc
or
xchg
test
adc
pop
cmp
sbb
push
stc
jae
sub
mov
push
pop
mulb
mov
int
pop
cmpsb
loopne
mov
mov
movl
add
push
mov
clc
cmp
pushf
pushf
test
jmp
push
jmp
sub
pusha
test
cmp
pushl
popl
movb
bt
pusha
cmp
movb
pushf
lea
ja
cmp
ror
shl
sub
cmp
btr
add
pushf
mov
jmp
add
dec
pop
mov
daa
cwtl
ret
stc
adc
flds
mov
aam
and
aaa
movsl
sbb
jne
add
pop
xor
mulb
outsl
mov
fists
push
jmp
mov
addr16
in
cmc
pop
xor
xchg
adc
inc
ret
add
outsb
cs
fidivl
cld
mov
aam
sarl
bound
stos
inc
adc
jo
jb
fstpt
ret
push
sub
sbb
pop
into
pop
lret
jbe
and
push
push
ss
iret
sub
cmpl
iret
jne
je
roll
dec
dec
shrl
jp
add
xlat
lods
jns
movsb
and
dec
nop/reserved
fsubrs
push
mov
repnz
add
call
xlat
mov
mov
jmp
sub
pop
inc
scas
add
cmp
pushf
gs
cmpsb
mov
push
outsl
in
mov
mov
pop
aas
pushf
gs
push
inc
jo
ljmp
es
mov
mov
mov
std
lahf
cli
test
dec
dec
imul
shll
xchg
lods
pop
out
sbb
cmp
sub
pop
jecxz
mov
es
jae
pop
jg
cmp
jecxz
ljmp
pop
neg
xchg
inc
xor
in
stos
dec
dec
adc
std
pop
stc
pop
imul
mov
push
push
mov
mov
push
inc
sbbb
test
sub
out
add
pop
ret
pop
orb
and
pusha
cmp
nop
fidivrs
mov
mov
stos
mov
int
adc
popa
out
jmp
fs
je
jmp
pushl
jmp
jmp
call
das
mov
test
sbb
xor
adc
push
mov
dec
roll
pusha
test
pop
adc
sub
mov
in
in
or
movsl
xchg
stc
push
pushf
faddl
testl
pushf
inc
leave
jle
dec
insl
orb
adc
roll
bt
shr
pusha
cmc
movb
movw
cmp
pushl
jmp
jmp
jns
in
xor
int3
mov
pop
outsl
outsl
nop
ds
push
cmp
jp
roll
push
add
inc
das
or
inc
das
or
imul
fmuls
bound
and
mov
ds
es
pop
pop
pushf
pushf
in
cmp
movsl
pop
adc
dec
and
loope
stos
ficoms
and
pop
mov
fs
ja
push
clc
pushl
push
imul
pusha
cmp
cmp
jmp
dec
xorb
int3
inc
sub
pusha
arpl
inc
data16
adc
cmc
es
movsl
out
popa
xchg
push
xchg
sub
sub
xchg
inc
sbb
or
lods
pop
scas
adc
sbb
jne
shlb
mov
scas
inc
dec
inc
add
cmp
xchg
push
ret
jne
lods
ret
jo
mov
arpl
fcmovu
push
or
xor
jmp
xor
or
lock
add
add
rcr
bsr
pusha
xchg
clc
lea
test
sub
cmp
aas
btr
not
push
pushf
not
not
bt
mov
stc
and
push
bsf
shl
sub
jmp
jmp
push
call
xor
sub
jnp
stc
stc
repnz
call
cmc
push
cmc
or
pushf
pushf
lea
je
bswap
lea
pushf
lea
not
movsbw
movzwl
pop
movzbw
pusha
lea
not
push
pushl
mov
movb
call
inc
xor
repnz
and
inc
gs
add
sub
jnp
and
rorb
outsl
out
pop
push
xchg
mov
je
cwtl
adc
mov
sbb
and
lods
stos
jnp
leave
popf
sahf
and
testb
loope
call
inc
lret
mov
jl
or
cvttps2pi
cmp
adc
or
jecxz
sahf
jns
out
sub
fs
lods
mov
subl
jle
mov
adc
pop
stc
pop
sub
mov
mov
cmp
shrl
cmc
dec
inc
mov
and
xchg
arpl
clc
xlat
mov
dec
into
sbb
outsl
push
jmp
in
xor
or
jge
inc
adc
dec
cmpsb
and
mov
fisttpl
cmc
dec
push
in
cmc
add
faddl
scas
into
add
sbb
ds
fdivl
mov
jge
inc
outsl
push
mov
daa
mov
sbbb
or
inc
ds
test
xchg
rolb
mov
aam
test
sbb
pop
icebp
inc
adc
icebp
pop
cmp
dec
icebp
iret
stos
shlb
mov
lret
movsl
inc
jo
lcall
loop
std
cmp
push
push
push
test
pop
fdivrp
fistps
inc
idivb
fists
adc
sbb
mov
out
mov
cltd
push
xor
or
cmp
test
mov
dec
lock
lods
pusha
xchg
aaa
xor
dec
cmpsb
lods
out
mov
xor
xor
nop
add
sahf
dec
dec
jae
xchg
xor
and
pop
inc
cld
mov
mov
add
iret
sub
push
popa
push
inc
sub
cltd
add
sub
jb
xor
pop
mov
jmp
sub
jnp
repnz
push
pushf
pushl
lea
jne
jmp
add
test
push
fstps
sub
hlt
and
pop
add
pop
int
pop
test
push
call
push
test
movsl
and
in
mov
hlt
xor
fmull
fwait
jns
clc
add
sub
or
mov
test
mov
js
fs
call
pushf
pushl
pushf
lea
jmp
inc
mov
call
pushl
popl
pusha
push
mov
pushl
ret
fs
mov
mov
jne
sub
call
shr
or
inc
add
xchg
jg
test
into
stc
arpl
popf
movsb
leave
push
mov
imul
outsl
daa
and
fsubl
push
and
push
sub
xor
push
jl
shrb
je
adcl
pop
xor
lods
jp
xchg
loope
sti
push
or
fcoml
pop
mov
and
inc
push
xor
cmc
adc
aas
lock
cwtl
cmc
inc
dec
jae
in
call
pop
fmuls
lea
aas
dec
lods
stos
dec
or
mov
aas
stos
jle
iret
sbb
xor
pop
mov
imul
push
fwait
das
fimull
scas
xchg
lea
or
hlt
jmp
outsl
mull
jg
or
imul
cltd
dec
fimull
inc
add
inc
cmc
jno
fld
adc
insb
insb
icebp
stos
fnstenv
daa
jb
movsb
leave
push
pop
mov
sbb
movl
jmp
movl
pushf
pushf
movb
lea
jmp
stc
push
shr
bt
movb
test
cmp
call
lods
movb
insb
rclb
int
mov
test
mov
push
adc
jo
les
cmc
sbb
sbb
add
int3
cmc
in
sbb
shlb
xchg
and
loope
iret
and
push
pop
ds
xor
sub
fwait
outsl
add
sub
pop
mov
shl
call
xadd
mov
bswap
das
mov
sub
shr
rcr
or
shl
bswap
mov
push
or
pushf
jmp
shr
push
test
imul
mov
lret
pop
jnp
xor
adcl
sub
push
mov
push
add
dec
mov
adc
pop
jge
mov
sbb
adc
ret
arpl
jne
shr
mov
cmp
bt
jmp
dec
or
int
sahf
inc
iret
dec
or
inc
pop
test
call
or
cs
push
mov
pop
push
fwait
jl
out
add
xor
setg
xor
sub
mov
cmp
mov
idivl
lock
mov
movsb
adc
neg
jae
stc
dec
or
lret
out
adc
rorb
mov
push
pop
mov
test
mov
pop
and
adc
mov
xchg
jo
sbb
ffreep
div
push
in
pushf
ret
test
movsl
pop
jge
in
push
xor
jl
jg
xchg
sahf
cmp
mov
or
ret
or
xor
pop
mov
inc
and
data16
pushl
inc
cmc
xor
rcl
jmp
call
mov
push
mov
push
lea
jmp
add
add
int
add
cmc
sbb
and
sbb
cmc
arpl
add
cmc
sbb
sub
sbb
xchg
push
add
cmc
sbb
cmc
pusha
clc
cmp
movw
lea
jae
jmp
pusha
lea
ja
mov
sub
shl
movsbw
sar
cmp
add
bt
call
cmp
pushf
jmp
pushf
push
pushf
pusha
ror
jmp
pusha
lea
call
call
mov
jmp
pusha
mov
movl
jmp
bt
ror
jmp
movb
lea
jne
pusha
pusha
lea
mov
pushl
pushf
pushf
lea
jmp
or
sbb
or
add
btr
add
sub
jmp
lods
lock
xor
mov
push
jmp
fsubs
ljmp
imul
or
xor
into
scas
sbb
fucom
jecxz
sub
push
mov
jl
subl
mov
or
pop
xchg
add
sub
into
sub
push
lea
rol
jns
or
mov
lahf
pop
mov
adc
incb
and
or
insl
cwtl
rorl
push
popa
jne
inc
and
out
fiadds
stc
out
std
fwait
cmp
pop
sub
loop
movsb
mov
out
xor
jae
rcrb
repnz
outsb
and
ss
shrl
rcrb
loopne
pop
cmp
jb
dec
push
inc
jecxz
stc
cmp
testl
fistpll
lcall
iret
xchg
adc
adcl
push
aam
sahf
cmp
or
pop
sub
fildll
jmp
ficoms
mov
pushf
movw
movl
jmp
push
jmp
lea
ja
cmc
pusha
movl
imul
movb
lea
jmp
jne
pusha
movb
movzbl
not
movzbl
mov
jmp
movl
mov
movw
mov
movw
lea
jmp
lea
jne
bt
pusha
test
pusha
xor
pushf
push
lea
jmp
dec
inc
jmp
mov
lea
je
rcr
add
pushf
sets
sub
jmp
sbb
push
adc
imul
fidivs
lahf
cmp
sub
rcrl
jp
mov
pop
mov
in
out
push
test
mov
mov
lods
add
and
mov
jbe
lahf
mov
rorl
daa
adc
xchg
xor
outsl
popa
fs
imul
add
inc
and
movsl
xchg
orb
xchg
xor
ljmp
test
jbe
fdivl
stc
jmp
dec
imul
adc
inc
imul
gs
inc
fidivrl
sbb
xchg
sub
ret
mov
or
sbb
rorb
jae
fbld
inc
sbb
das
dec
push
loop
adc
cmp
cmpsl
adc
mov
pop
push
les
lret
xchg
inc
jp
test
sahf
outsb
push
stos
push
fs
mov
ror
xchg
pop
scas
dec
or
popf
sti
push
push
mov
pop
idivb
fwait
outsb
aaa
cs
dec
dec
lcall
mov
bound
ds
mov
xor
fcompl
fs
dec
pop
jo
ss
adc
add
pop
mov
push
add
test
cmc
test
push
lea
ja
pusha
push
lea
je
clc
cmp
cmp
stc
sub
clc
pusha
clc
cmp
call
mov
lea
jae
pusha
sub
pusha
pushf
push
call
sub
in
pusha
jg
repz
inc
xor
clc
xor
xchg
sbb
mov
mov
dec
jmp
jmp
cltd
jge
adc
shrb
cmp
bound
pop
inc
out
pop
push
in
arpl
sub
daa
lret
sti
ljmp
mov
or
aas
adc
clc
pushf
inc
lcall
shl
push
sbb
push
test
sub
inc
iret
into
jbe
cltd
out
sbb
das
pop
xor
mov
lds
mov
sbb
pop
in
pop
jle
mov
jmp
jb
sbb
inc
xchg
lahf
jecxz
jp
mov
test
mov
sbb
mov
xchg
sbb
adc
mov
jmp
mov
cli
xchg
mov
sbb
cmp
mov
jmp
cmp
imul
fxch
dec
jmp
insb
icebp
mov
pushf
xor
lea
pop
mov
or
rcll
add
inc
and
pushf
and
shrb
add
lods
movl
pushf
pushf
pushf
pusha
lea
jmp
bt
push
bt
shr
call
icebp
cmpl
cmp
insl
jbe
xor
stc
adc
pop
mov
or
cmp
fisttpll
nop
je
sbb
xchg
cmp
popf
cmp
pop
fidivrl
imul
cmc
inc
cld
lret
push
mov
mov
xchg
push
orl
loop
jle
xor
shll
mov
shr
sti
fstp
and
push
pop
fcoms
dec
xchg
jns
hlt
pop
loop
movsb
iret
xchg
lods
int
out
stc
pop
lcall
ret
adc
shlb
pusha
lea
jmp
lcall
xchg
cmpsl
pop
sub
repnz
nop
aas
push
addb
xor
jb
das
mov
pop
in
bound
jne
mov
dec
jo
jne
mov
pop
mov
iret
mov
roll
pushf
mov
dec
sub
jmp
mov
push
push
push
rcl
cltd
pop
mov
lea
cmp
xchg
das
sub
pop
repnz
sbb
dec
shrl
pop
psubd
add
movsb
ja
mov
mov
popa
pusha
push
cmc
and
scas
fcomip
jno
fstps
mov
adc
adc
pop
icebp
push
cmpsl
loopne
adc
sbb
pop
mov
inc
dec
pushf
jmp
lea
xchg
lea
pop
push
mov
movzbl
mov
mov
pop
not
push
mov
pusha
pushf
push
pushl
ret
mov
lea
jb
jne
shrd
bsf
mov
clc
xor
push
dec
sub
shl
lea
call
call
lret
pop
mov
stos
pop
push
inc
out
xchg
shll
ds
pop
test
sub
mov
das
jne
mov
jmp
fstl
xchg
in
mov
andl
mov
pop
adc
enter
popa
rolb
xchg
movntq
mov
aas
loop
or
mov
and
out
les
mov
shlb
loop
scas
cmp
xor
enter
fxch
sub
insb
icebp
mov
or
push
adc
in
xor
xchg
jmp
lea
ja
sbb
sub
clc
add
bsf
lea
add
rol
mov
xor
neg
pusha
mov
jmp
dec
jmp
push
shlb
leave
pop
mov
push
xchg
mov
mov
mov
and
int3
mov
movsb
jns
mov
jl
mov
pushw
cltd
pop
iret
ljmp
jno
mov
or
movb
xor
jg
out
inc
jmp
jb
or
lea
aad
or
call
and
std
cltd
nop
mov
xor
adc
les
push
cmp
mov
jmp
loope
dec
mov
insl
dec
cmpsl
xor
or
fdivr
cs
and
in
fstps
add
stos
pop
rorl
cltd
leave
pop
out
cli
xor
aad
filds
push
mov
adc
push
fbld
inc
ficomps
movsl
pop
lods
pop
mov
jge
pop
shlb
and
sahf
mov
jbe
add
mov
jle
sub
jge
scas
mov
xchg
mov
sahf
out
sti
pop
push
clc
enter
pop
call
rcr
adc
cmp
and
std
pop
mov
pop
pop
jmp
jbe
push
push
add
sbb
mov
in
and
stos
pop
cmp
fdivs
push
int
addr16
loopne
dec
pop
jnp
mov
mov
mov
ljmp
mov
mov
mov
push
add
fnop
aad
mov
push
clc
enter
cwtl
inc
xchg
jmp
sti
adc
mov
insl
aad
dec
add
test
test
int
push
clc
enter
mov
xor
mov
cwtl
sar
pop
sub
push
xlat
cltd
test
push
test
shll
mov
out
xor
sub
jnp
jo
sbb
mov
das
sub
movsb
pop
jl
pop
dec
push
fwait
push
jmp
push
jmp
lea
jne
sar
bt
mov
or
shr
cmp
sub
jmp
jmp
scas
ret
aad
and
jmp
jge
dec
jnp
mov
pop
sbb
inc
pop
push
lock
in
insb
dec
ja
xchg
and
sub
adc
fld
mov
mov
das
aaa
sar
movl
pop
dec
fildl
inc
ja
push
pushf
lea
jmp
push
lock
std
std
mov
push
movsl
xor
daa
pop
ror
cmp
mov
pop
aad
xor
lods
out
insb
lods
jge
dec
in
clc
dec
inc
jge
jle
push
push
enter
fisubrs
adc
test
jge
mov
dec
test
inc
push
aad
in
xchg
push
xchg
push
bound
outsb
or
lods
sbb
dec
call
lea
je
cmc
sub
jmp
pusha
movl
movb
movl
pushf
pushf
pushf
mov
lea
jmp
je
xchg
cmc
sub
daa
jmp
call
addb
andl
ret
mov
outsl
movsb
inc
pop
mov
and
sub
pop
dec
mov
or
cmpsl
repnz
test
in
push
xor
test
repz
add
test
arpl
test
sti
adc
test
cltd
pushf
pushf
pusha
movl
movw
pushf
movl
push
movb
movb
movb
lea
jmp
push
bswap
pop
pop
movzbw
movzbl
mov
bswap
pop
pushf
mov
bswap
pop
pusha
pushf
pushl
ret
pushf
lea
jb
clc
test
cmpb
pushf
push
push
lea
jne
adc
pusha
sub
clc
mov
bt
bt
add
jmp
cmp
bt
add
push
movb
pusha
pusha
mov
movw
pushf
movb
pushl
lea
jmp
cmp
xchg
mov
enter
mov
notl
pop
pop
outsb
fwait
out
mov
mov
mov
lods
or
decl
adc
pusha
das
stc
mov
call
stos
fmull
xchg
mov
dec
dec
adc
call
call
mov
pop
out
sub
stos
or
std
xchg
mov
loopne
cltd
jae
sbb
adc
cwtl
insl
add
push
jle
iret
stc
inc
adcb
int
adc
hlt
push
jg
lods
sbbb
jo
in
ret
sub
insb
add
mov
fnstenv
push
icebp
nop
sbb
popa
push
ja
jecxz,pn
sbb
lea
lods
mov
in
add
cwtl
push
int
adc
push
arpl
or
pop
dec
int
call
mov
xchg
loopne
add
xor
das
inc
call
mov
fimull
push
jle
fnstenv
cmp
insb
icebp
pop
xorl
ror
pop
dec
loop
and
clc
add
rolb
sbb
bsf
mov
movzbw
mov
ror
clc
inc
adc
mov
ror
btr
btc
setns
mov
inc
rol
xadd
xor
mov
stc
bt
sub
lea
pusha
jmp
lea
ja
pushf
sar
sar
add
add
cmp
mov
jmp
jne
jmp
pushf
xor
xchg
inc
pusha
mov
pusha
pushf
mov
cmp
cmpb
lea
push
push
lea
jne
jmp
pusha
mov
jmp
bt
repnz
pusha
call
movl
push
movl
mov
lea
jmp
mov
not
setb
push
lea
push
movl
pusha
pushl
call
jp
out
cli
jl
mov
adc
mov
or
test
mov
sbb
xchg
xorb
sub
shl
or
pop
scas
loope
ljmp
in
or
lods
push
iret
push
fcoms
insb
or
call
js
and
sti
repnz
jnp
inc
mov
inc
aas
mov
jnp
das
mov
lret
mov
into
popf
mov
jno
fistpl
popl
cmp
mov
xor
cmp
jmp
sub
out
rclb
iret
push
pusha
imul
cmp
idivb
cmpsl
xchg
cs
and
jl
ror
add
rcr
cmp
lods
sub
icebp
icebp
sbb
enter
jp
in
jae
push
cmpsl
mov
repz
cmp
subl
test
inc
lds
icebp
out
test
mov
rcll
pop
inc
popa
shll
add
stos
pushf
lea
jmp
jmp
mov
movb
not
pushf
mov
bswap
mov
call
add
and
insb
push
popf
mov
in
cmpsl
mov
out
or
call
in
mov
and
and
mov
push
movsl
xchg
fsubrl
sbb
and
jns
xchg
mov
cmpsb
cmp
stos
push
imul
adc
fiaddl
inc
out
pop
mov
dec
ja
scas
add
enter
lcall
mov
fwait
in
sub
sub
mov
inc
decl
insb
out
in
in
cwtl
inc
push
jno
ds
cmp
sbb
inc
pop
cmp
push
add
in
mov
cli
cmpsl
sbb
adc
in
insl
push
push
inc
cmpsl
pop
xor
dec
jg
push
inc
or
adc
pop
adc
ret
mov
lods
jl
dec
push
add
mov
leave
lcall
jmp
jle
fwait
mov
pop
mov
or
bound
mov
imul
jb
aam
out
xchg
test
lret
lahf
out
cmp
lock
adcb
cmp
or
sahf
mov
xor
xorb
mov
aaa
bound
and
xor
push
in
loopne
aaa
hlt
mov
xchg
fcomps
aas
lds
mov
pop
loop
push
dec
cltd
cs
push
clc
les
cmpsb
int
gs
mov
add
jecxz
add
and
mulb
jne
xor
cs
lret
pop
call
cmp
inc
in
dec
loop
nop
sub
sbb
mov
cltd
and
mov
sub
jno
cmp
sets
adc
inc
push
data16
adc
dec
or
cmp
sbb
sub
cltd
and
jns
sub
jnp
xchg
jl
stos
sbb
xchg
ret
sbb
mov
adc
notl
in
jns
mov
out
addr16
cmp
cmp
fldl
in
ja
mov
addl
jns
popf
cwtl
sbb
push
mov
and
aam
pop
inc
cmp
ljmp
das
rclb
and
inc
incb
mov
mov
pop
dec
push
sub
adc
and
fldt
dec
xor
test
xlat
in
inc
cmp
popa
xchg
orb
je
sahf
inc
pop
jnp
ror
or
fadd
nop
xchg
sahf
mov
adc
push
or
pavgb
xor
push
js
mov
dec
dec
and
xor
push
xor
test
pop
arpl
mov
int
fwait
inc
ljmp
xor
pusha
add
inc
jle
cmc
in
mov
jne
push
aad
push
rolb
and
lret
push
push
jo
mov
sub
adc
xor
adc
insb
jae
mov
mov
jne
jne
xor
icebp
test
lcall
adc
push
xor
idivb
pop
adcb
insl
inc
pusha
or
and
jns
jg
xchg
jns
push
shld
mov
cli
xor
fistps
xor
or
popf
scas
or
out
sti
out
loope
test
les
js
and
mov
pop
daa
fldt
insb
and
pop
push
xor
lea
cmpsl
add
add
std
push
sbb
adc
push
mov
clc
vmaxpd
pop
push
mov
and
js
pop
inc
mov
pusha
sub
inc
xchg
push
xchg
push
lods
cmp
incl
repnz
lret
xchg
aas
or
movsb
cwtl
ret
lahf
inc
pusha
scas
dec
add
jo
xchg
jns
movsl
fcomps
cmpsl
mov
scas
xchg
push
ret
movsl
mov
cltd
sbb
rcll
jl
pop
cmp
in
dec
jle
fsubl
inc
xorl
mov
mov
lds
xor
inc
inc
cmc
mov
lods
mov
adcb
xchg
push
mov
push
or
or
cmc
mov
mov
and
mov
cli
in
test
lret
mov
fistpl
mov
add
aam
daa
inc
data16
leave
add
scas
mov
dec
adc
push
leave
jecxz
aad
mov
decl
int
or
mov
loope
movl
insb
mov
xchg
jle
mov
invd
and
rorl
add
xchg
mov
in
adcl
cli
cmpsb
dec
mov
data16
pcmpgtb
or
sub
jae
jg
and
adc
pusha
rolb
pop
aad
adc
push
add
test
cltd
sbb
in
fcoml
cmp
xor
mov
inc
mov
stos
xchg
add
push
int
fwait
or
mov
ret
cltd
cmp
add
icebp
aas
and
shll
or
addl
mov
les
pop
jecxz
inc
mov
lea
add
adc
dec
cmp
xchg
sub
insl
xchg
push
sbb
repnz
or
add
test
aas
test
jg
and
loopne
icebp
mov
rcrb
xchg
rcll
or
pushf
adc
adc
orl
pushf
xchg
or
popa
adc
sbb
cmp
add
ljmp
out
push
in
inc
mov
ljmp
dec
mov
add
inc
push
push
ret
xchg
inc
dec
mov
data16
enter
dec
xchg
mov
or
sub
push
les
rcll
incl
notl
xchg
scas
ret
into
shr
mov
xchg
in
jmp
push
inc
test
add
int
ret
and
add
and
add
add
sbb
dec
dec
int
ret
push
sbb
es
xchg
ret
sbb
aad
or
adc
push
sub
ret
mov
les
inc
and
add
push
sub
insl
sbb
or
in
add
add
mov
inc
dec
jmp
bound
jecxz
lds
inc
xchg
mov
sbb
in
ret
decl
int
add
mov
inc
add
in
ret
mov
pop
pushf
or
mov
int
sbb
in
ss
push
pushf
adc
jecxz
lds
sbb
in
ret
ret
in
shl
movsb
push
push
popf
pushf
adc
jecxz
int
inc
pop
lods
shrb
inc
adc
sbb
in
jecxz
sbb
je
int
jne
dec
pop
test
jecxz
orl
xor
rorl
or
push
adc
add
or
add
dec
adc
xchg
mov
push
sbb
pop
mov
test
shll
hlt
xchg
push
adc
test
or
push
or
xchg
dec
inc
add
inc
jae
notb
adc
xlat
mov
xchg
sub
sahf
ret
ret
pusha
push
adcb
test
sbb
push
decl
mov
repnz
loopne
inc
mov
out
dec
loope
or
xor
or
add
fisttps
jg
int
cld
and
lds
add
mov
jmp
dec
or
jno
add
dec
cmp
lret
pop
inc
adc
out
ret
mov
xchg
add
cltd
dec
cmp
adc
or
mov
dec
daa
adc
enter
xchg
les
add
xchg
out
xchg
add
icebp
inc
loopne
adc
int
xchg
cmpsl
or
fs
xchg
dec
xor
ret
adc
dec
out
or
je
xchg
icebp
adc
mov
and
ss
pop
movl
dec
adc
je
ret
mov
add
or
insl
aam
aas
out
adc
icebp
dec
das
pop
icebp
shll
mov
push
adc
adc
inc
adc
adcb
sbb
fiadds
nop
add
lret
or
out
movl
xlat
aad
xchg
and
add
add
push
add
adc
leave
cltd
mov
popf
or
and
xchg
lods
adc
in
pop
int
je
test
xchg
cmp
or
inc
clc
cmp
inc
or
inc
adc
leave
in
in
inc
popf
inc
xchg
and
sbb
inc
jmp
lods
inc
xchg
cmpl
icebp
jne
inc
push
jg
add
or
int
in
lcall
and
inc
imul
sbb
dec
aas
mov
xchg
dec
ret
dec
lret
test
in
xchg
leave
nop
rol
xor
ret
lret
pop
sub
pop
in
fwait
inc
call
ss
inc
test
inc
aad
adc
or
loope
mov
mov
aad
rclb
sbbb
and
sub
pop
or
or
jecxz
test
and
mov
lret
sti
adc
add
sbb
mov
addb
scas
add
jge
dec
push
insl
out
test
ja
push
jge
test
add
inc
pop
loope
or
aas
inc
cltd
in
inc
ret
loope
lods
mov
shlb
sbb
add
ret
cmp
xchg
sti
dec
mov
lea
add
aad
mov
enter
sub
cmpsb
lret
adc
lret
mov
dec
in
insb
add
mov
add
sub
or
mov
test
ret
dec
call
lea
xchg
ret
out
add
lock
movsb
cmovnp
dec
outsb
popf
jbe
xchg
cmp
pop
cmp
sbb
sub
lock
cs
lret
call
or
insl
je
add
test
mov
adc
mov
inc
lds
lock
ret
dec
xchg
add
xchg
enter
dec
pushf
or
mov
xchg
or
dec
adc
int3
stos
sti
es
mov
xorb
lock
mov
ja
out
add
mov
or
dec
andb
or
add
add
jmp
mov
iret
cli
in
add
shl
mov
int
leave
xor
add
and
lds
inc
sarl
sub
fwait
inc
fistpll
je
insb
sahf
gs
add
add
or
je
xchg
jecxz
mov
add
and
inc
inc
sub
repz
pushf
dec
int
mov
mov
or
mov
dec
dec
cmp
repz
or
jg
and
or
test
sar
xchg
xchg
dec
add
lods
repz
dec
add
fistpll
mov
or
mov
add
lods
cmp
rorl
int
lcall
dec
repz
or
or
ljmp
mov
add
mov
cs
std
aad
push
inc
test
or
xchg
cltd
xchg
inc
mov
mov
out
leave
mov
lret
test
xchg
inc
mov
rcll
inc
test
cs
mov
icebp
ss
arpl
push
dec
dec
mov
push
or
aas
test
scas
xchg
and
xchg
testl
xchg
les
add
push
xchg
mov
xor
or
lock
inc
or
mov
aas
in
int3
mov
or
test
je
enter
inc
sti
xchg
cmp
scas
jbe
mov
loopne
xchg
adc
cwtl
xchg
lods
or
testb
pusha
xor
in
les
jmp
add
jo
in
aas
in
les
adc
cli
out
inc
xchg
adc
scas
jae
aam
dec
adc
movsb
adc
popf
movsl
gs
xchg
cli
inc
mov
inc
notl
xlat
push
test
push
cmp
xchg
testb
sub
push
pop
stos
cwtl
pushf
xchg
xchg
iret
push
je
mov
or
test
mov
mov
pop
xchg
int
add
lods
mov
es
sbb
mov
pop
mov
mov
or
add
mov
ret
jo
dec
out
and
inc
xchg
loope
hlt
sarl
adc
adc
dec
mov
test
or
int
decl
mov
and
adc
and
mov
xchg
decb
dec
das
xor
dec
push
push
mov
sbb
or
inc
xchg
mov
or
adc
or
adc
lcall
int
cwtl
add
add
into
mov
ret
adc
insl
adc
inc
adc
dec
stos
dec
enter
dec
dec
cwtl
loopne
sti
mov
into
push
add
mov
xchg
xlat
int3
xchg
dec
dec
or
xchg
mov
aas
inc
xor
mov
aad
adc
inc
jecxz
or
pop
and
sbb
or
adc
add
or
ret
mov
aas
pushf
add
mov
les
add
icebp
inc
dec
std
aad
test
add
gs
push
loope
mov
add
jg
mov
pusha
add
xor
add
fucomi
sub
sbb
iret
mov
adc
mov
in
xor
les
fwait
ret
or
inc
lods
inc
xchg
adcb
mov
insb
sbb
je
cmp
inc
dec
lds
cltd
in
inc
push
loope
stos
inc
loope
leave
daa
icebp
xchg
jno
shrl
and
mov
add
repnz
into
adc
add
fistl
xchg
push
ja
mov
cwtl
or
in
mov
mov
inc
dec
pop
add
adc
dec
addb
dec
sub
mov
test
enter
inc
mov
or
mov
sub
add
dec
ja
dec
dec
cli
les
xchg
inc
outsl
add
dec
lcall
mov
cltd
push
lret
xchg
sbb
mov
enter
jg
lods
add
add
lea
sub
xchg
leave
adc
or
enter
sbb
add
push
andl
dec
xchg
lds
cmpl
dec
cltd
int
lods
add
test
cmp
or
test
jns
cmpl
add
insb
or
iret
inc
inc
bound
push
orb
pop
xchg
ret
shl
push
ror
dec
sbb
add
inc
mov
xchg
cltd
xchg
ret
or
inc
or
inc
insb
fwait
add
mov
aad
push
inc
les
lret
nop
inc
shll
dec
insl
loope
mov
push
inc
sbb
into
sbb
inc
xchg
or
xchg
push
shl
and
push
inc
pop
mov
mov
sbb
and
lret
enter
insb
push
or
insb
jg
add
xchg
int
sbb
dec
adc
loop
mov
rcl
adc
sbb
add
sbb
dec
jecxz
lds
loopne
in
dec
int3
leave
add
or
push
fstl
push
or
cltd
loopne
pushf
dec
add
add
sbb
or
lret
add
adc
in
push
les
adcb
sbb
shrl
adc
cli
dec
mov
adc
adc
jbe
inc
add
aas
inc
sub
jecxz
pop
fdivr
dec
out
or
dec
push
in
mov
enter
lea
int
js
leave
cmp
xchg
jmp
inc
rolb
int
and
jno
aam
add
js
push
out
add
inc
icebp
adcb
test
add
ret
lret
testb
add
aad
loopne
test
xchg
add
ja
std
or
and
dec
test
cld
xlat
test
aam
int3
js
in
push
inc
test
inc
imul
inc
outsb
aas
inc
xchg
push
adc
sbb
inc
jmp
lods
inc
insb
sbb
push
fwait
inc
add
sti
inc
jmp
lods
inc
insb
sbb
inc
add
sti
inc
or
test
mov
mov
adc
xchg
loopne
xor
add
adc
je
or
and
inc
jbe
dec
xchg
orl
test
mov
xchg
and
push
add
or
mov
mov
sbbl
mov
fucom
fs
mov
rep
rorl
mov
orl
aad
test
das
cwtl
push
movsb
sbb
pop
mov
sub
in
xchg
mov
adc
aaa
in
push
push
scas
mov
icebp
movsl
xchg
daa
es
dec
xor
sbbl
push
and
iret
pop
push
mov
fs
lds
lret
aas
jg
add
into
or
pusha
push
push
add
mov
cmp
lds
mov
pop
xchg
loope
subl
sub
sub
aad
mov
stc
dec
jnp
jmp
roll
adc
mov
pop
adc
nop
jns
xchg
jae
mov
hlt
jg
int
xchg
loopne
movb
fnstenv
rcl
xchg
fsubrp
xchg
inc
test
in
xlat
dec
aam
mov
dec
js
xchg
jecxz
orl
insb
das
lea
lahf
pop
icebp
int3
push
xchg
shll
sub
addr16
xchg
test
mov
or
xor
lret
test
add
jecxz
add
loope
jecxz
and
inc
addr16
mov
add
test
ja
pop
ret
sbb
add
idivb
and
idiv
dec
mov
adc
cwtl
les
adcl
mov
js
xor
aas
adc
inc
sbb
adc
lea
adc
pushf
add
inc
addl
sbb
sub
out
popf
pop
ret
xchg
push
mov
in
push
inc
addl
add
dec
pop
sbb
ret
add
roll
lret
add
in
ret
add
add
cwtl
add
pushf
add
or
in
ret
or
push
pushf
int
rol
inc
sbb
xchg
shll
ret
inc
or
pushf
jecxz
lds
sbb
in
ret
dec
or
dec
jecxz
insb
lcall
fldt
jg
adc
xor
inc
sub
add
dec
adc
adc
std
xchg
lret
xchg
cmp
xlat
dec
dec
mov
xchg
mov
xchg
lret
jb
movb
xchg
inc
out
orl
add
push
inc
mov
mov
imul
add
insl
push
inc
into
jns
inc
pop
add
jnp
inc
clc
push
lods
mov
push
cmp
jb
shrb
inc
insb
fldenv
add
dec
pop
pop
or
ret
or
in
cmp
dec
int
adc
cmpsl
ret
adc
rcr
movsl
xchg
add
loop
movl
cmp
pushf
sar
cmp
mov
mov
add
out
add
mov
jo
in
sbb
int
shr
loope
in
leave
negb
js
test
pop
xchg
icebp
clc
or
cmpsl
loopne
add
xchg
sub
orl
fstl
add
enter
or
int
dec
inc
hlt
mov
fwait
loope
xchg
testb
out
mov
lret
mov
xchg
fisttps
xchg
int3
addr16
out
push
sbb
cmp
loop
cmp
or
in
nop
les
call
xchg
test
lret
or
cmp
ret
xchg
pushl
ret
inc
fcmovbe
jg
mov
dec
mov
or
adc
ret
mov
testb
or
inc
popa
lds
dec
in
ret
inc
or
pushf
add
jno
jecxz
dec
or
inc
movlps
or
int3
aas
sbb
push
push
adc
add
pushf
adc
inc
or
adcb
or
sbb
aam
cmp
inc
je
pop
es
dec
add
lods
cltd
jg
xchg
push
xchg
dec
dec
mov
mov
mov
mov
mov
inc
pop
cltd
mov
mov
into
insl
adc
xchg
add
ret
or
add
mov
and
pop
sub
xchg
das
cwtl
int3
test
mov
sbbl
or
sbb
lods
inc
xchg
jg
in
push
pop
inc
xchg
dec
dec
in
add
inc
xchg
inc
jge
add
in
add
add
jge
mov
lcall
xor
add
or
mov
xor
leave
mov
mov
in
add
inc
xchg
mov
pop
fistpll
add
mov
xor
int
in
or
inc
enter
xchg
ss
pop
mov
jge
inc
ret
movsb
lds
movsb
cld
inc
test
mov
or
push
mov
jno
cld
xchg
aas
mov
dec
xor
test
enter
pushf
mov
leave
pop
inc
test
addb
sub
xchg
adc
or
pop
or
call
add
leave
push
inc
push
int
inc
add
or
or
dec
dec
cmp
inc
or
mov
sub
int3
xchg
dec
lret
sub
filds
sysret
pop
add
sub
ss
clc
add
sub
push
call
or
mov
popf
inc
or
dec
pushf
add
shlb
or
shll
push
inc
in
add
inc
add
mov
dec
adc
sub
orl
xchg
ret
mov
push
dec
test
push
adc
sbb
inc
dec
push
mov
out
mov
xor
sbb
mov
adc
pop
in
mov
add
adc
adc
push
push
adc
inc
loopne
or
dec
adc
lret
inc
call
lds
fisttps
sub
or
lcall
sbb
ret
popf
or
xchg
inc
test
shll
adc
addr16
sti
jg
add
rolb
int3
es
add
sbb
sti
mov
dec
xchg
adc
pop
addl
add
sbbb
cli
bound
or
jmp
addr16
out
push
ret
int3
cmc
es
ret
add
xchg
and
call
cmp
push
inc
dec
fisubs
xchg
decl
mov
fstps
jp
enter
jecxz
xor
xchg
add
xor
in
ret
fstl
fisttpll
sub
imul
add
int3
nop
loopne
mov
add
pop
lahf
into
dec
test
or
lcall
out
loopne
inc
xlat
ret
and
repnz
lea
mov
adc
push
movsb
mov
out
shl
inc
jmp
das
xor
mov
push
or
and
inc
jae
adc
add
push
pop
mov
xchg
inc
sbb
pushf
mov
mov
jg
lds
int
xchg
mov
in
add
imul
test
sub
gs
push
jbe
leave
iret
dec
lret
mov
sub
mov
inc
aad
mov
jecxz
testb
dec
mov
add
jns
les
roll
rclb
mov
test
adc
add
xchg
sub
jg
and
int3
push
fsubrs
cmp
push
push
add
add
cltd
in
rorb
jne
ret
add
and
mov
jbe
or
add
mov
or
add
sbb
insl
jmp
rolb
xchg
mov
dec
scas
movsb
test
rorb
pop
push
inc
fstpl
test
movsb
test
movsb
aad
inc
inc
into
cmc
and
sarl
inc
test
cmp
int
add
mov
movsb
fcom
inc
inc
ret
cmp
push
inc
popf
lret
push
push
inc
enter
inc
mulb
cmc
or
fnstcw
sub
cltd
lds
dec
pop
int
pop
icebp
orl
ss
cs
mov
ja
xchg
movb
orb
or
xchg
lret
jecxz
addb
add
mov
int3
sbb
loopne
leave
xchg
add
or
and
dec
in
mov
add
and
pop
or
add
push
inc
mov
sbb
push
leave
pushf
adc
jecxz
sahf
dec
push
or
xchg
sbb
int
dec
into
orl
xchg
rclb
jecxz
inc
sbb
js
or
mov
test
in
ret
mov
lds
sbb
hlt
notb
mov
int3
mov
in
ret
orb
pushf
add
ret
sbbb
enter
dec
or
dec
jecxz
lds
sbb
in
ret
jg
fistpll
cltd
test
add
mov
lds
sbb
in
ret
mov
mov
add
in
ret
add
add
add
pushf
push
jecxz
push
les
test
inc
in
repnz
adc
or
jge
scas
dec
jb
shll
and
sbb
mov
or
add
aas
lds
ret
repnz
sbbl
sbb
in
ret
dec
or
jecxz
lds
sbb
xchg
in
push
mov
and
mov
incb
incl
jae
add
fs
pop
addl
pop
arpl
add
add
mov
inc
adc
cwtl
ret
xchg
xchg
orb
or
add
test
add
clc
xchg
mov
add
add
test
xchg
fldl
test
mov
sbb
sbb
mov
ljmp
into
and
push
pop
leave
add
add
leave
int3
add
add
and
add
jne
jae
outsb
adc
cwtl
adc
xor
add
out
mov
cmp
adc
or
mov
call
cmp
icebp
adc
fistps
cwtl
or
or
movsb
test
mov
cwtl
sbb
or
test
test
incb
dec
dec
adc
outsl
ret
cmp
push
ret
cltd
add
mov
call
sub
dec
cmp
dec
ret
or
jge
ret
icebp
xor
dec
add
inc
jecxz
and
fisubs
into
push
int
arpl
dec
into
testl
xchg
into
and
push
push
add
or
test
daa
dec
sahf
jecxz
adc
or
dec
out
mov
mov
push
lcall
test
inc
into
jbe
rcrb
in
pop
push
add
sarl
mov
or
imul
inc
pushf
inc
add
or
cmp
roll
arpl
inc
add
inc
sbb
icebp
dec
std
cwtl
in
push
dec
shl
int
sbb
jg
cmpsb
dec
test
push
mov
or
mov
mov
and
push
add
jo
add
jns
mov
test
jmp
lret
dec
dec
inc
add
add
into
stos
xchg
les
or
mov
push
or
or
js
je
mov
xchg
or
xchg
or
movsl
fldenv
or
add
xchg
roll
xchg
or
cltd
add
dec
push
lods
inc
inc
jmp
sub
int
mov
xchg
or
pushf
xor
fs
mov
cs
xchg
mov
xchg
dec
xchg
jno
adc
sbb
test
pushf
int3
mov
leave
xor
inc
loopne
inc
add
xor
mov
push
cmp
shrl
popa
add
inc
push
push
pop
fisttpll
xchg
push
lret
or
dec
insb
into
jecxz
cmc
ror
inc
test
add
int
ds
mov
ljmp
add
mov
xor
rorl
in
cwtl
int
inc
mov
xchg
adc
dec
lret
push
mov
inc
mov
aas
mov
sarl
mov
lret
out
mov
clc
inc
test
popf
add
push
inc
add
inc
sub
xchg
cmp
sbb
xchg
xor
loope
ret
mov
cmc
pushf
aaa
mov
push
dec
sbb
mov
adc
ds
inc
cwtl
aam
inc
pop
fnstenv
lcall
fisttps
mov
add
cmpsl
in
mov
dec
lea
xchg
sti
shrb
push
fs
addl
xchg
pmullw
popa
sbb
addr16
pop
aaa
push
mov
mov
in
sub
adc
lcall
or
xor
test
je
xchg
out
mov
rorl
dec
add
cmpsl
mov
das
pusha
adcb
cld
enter
lds
sub
mov
ret
mov
fistps
dec
leave
push
mov
mov
les
shll
ret
scas
adc
addl
or
sbb
inc
fildl
xchg
leave
add
int3
cwtl
mov
add
push
dec
xchg
push
orb
pusha
adc
push
dec
adc
pusha
adc
inc
xchg
mov
xchg
mov
shll
dec
adc
add
push
adc
add
lds
xchg
or
movsl
inc
mov
inc
xchg
lea
adc
mov
test
push
js
mov
pop
mov
rcll
into
xchg
mov
adc
rcrl
or
mov
dec
mov
push
dec
lret
mov
inc
out
into
xchg
xchg
int
call
sbb
hlt
test
pushf
xchg
dec
sbb
in
ret
push
or
and
lds
inc
dec
xchg
sbb
sbb
in
ret
mov
leave
pushf
or
dec
lds
shl
xchg
adc
ret
add
jecxz
lds
sbb
in
ret
incl
hlt
jecxz
cmp
enter
dec
pushf
or
lret
sbb
xor
xchg
add
lds
fwait
dec
xchg
add
jecxz
lds
sbb
in
ret
mov
dec
pushf
or
dec
adc
xchg
lcall
nop
mov
jecxz
ret
adc
enter
lds
sbb
in
ret
mov
into
pushf
jecxz
lds
or
xor
or
pushf
inc
jecxz
lds
sbb
in
ret
lea
sbbb
lds
sbb
in
ret
or
pushf
mov
int3
sbb
in
ret
addb
jecxz
lds
dec
ret
pop
or
pushf
dec
jecxz
lds
sbb
in
ret
rorb
pushf
ret
arpl
pop
adc
in
ret
dec
or
lds
push
in
ret
lea
rcrb
lds
add
out
xchg
int
pop
inc
add
ret
cmp
jno
pop
mov
andb
testl
and
add
inc
mov
nop
push
lret
addl
ret
sbb
or
xchg
mov
subl
mov
pop
outsl
inc
inc
inc
push
movsb
or
fisttps
inc
xchg
add
add
sti
inc
jmp
lods
inc
xchg
addb
xor
inc
les
inc
cwtl
fldl
cmp
mov
iret
cmp
xor
push
cmp
push
inc
lds
inc
cmc
or
cltd
or
lock
add
aaa
dec
or
into
and
or
sub
loope
pusha
xchg
mov
mov
int
stos
cmovno
hlt
js
es
pop
addb
in
or
adc
mov
inc
inc
adc
adc
sub
mov
sub
push
or
sub
and
xor
ret
mov
in
inc
mov
or
and
add
dec
and
aas
mov
cwtl
or
ror
inc
test
lds
inc
add
ret
movsl
lcall
dec
mov
addl
jnp
int
add
divl
add
jo
test
mov
adc
pusha
jg
pop
adc
adc
inc
mov
mov
loopne
or
push
lds
push
aad
in
adc
push
in
jmp
jae
mov
dec
mov
repz
mov
call
push
or
inc
ret
lret
add
lods
cmc
fs
inc
out
imul
mov
pusha
inc
push
out
pusha
enter
xor
inc
add
add
push
pop
inc
sarl
pusha
rolb
push
xchg
inc
add
mov
sbb
sti
sbb
scas
ret
repnz
add
pushf
mov
cmc
aad
in
mov
add
call
inc
loop
xchg
nop
xchg
int
sbb
and
or
loop
sbb
les
pushl
dec
ljmp
add
xchg
call
sbb
jg
add
dec
pop
xchg
pop
gs
inc
lock
and
ret
dec
mov
xlat
and
int
xchg
and
push
pop
rolb
sbbl
pop
xchg
sub
add
cwtl
jg
test
add
sbb
add
xchg
or
push
adc
dec
inc
js
adcb
sahf
push
and
push
orl
in
inc
mov
add
je
aas
sub
les
xchg
roll
pop
shrl
mov
sbb
enter
jmp
sbbl
outsb
sbb
mov
sysexit
sub
push
jbe
xor
daa
and
fisubrl
mov
inc
sbb
in
xor
shll
ret
roll
jg
or
push
lcall
sti
pushf
jmp
fwait
lds
ds
and
or
in
hlt
dec
rcrl
lret
adc
es
lods
dec
push
adc
rol
add
in
xlat
not
xchg
loope
out
xor
loopne
or
cmc
mov
cmpsb
cmp
mov
inc
sbb
out
add
jo
popf
xlat
cmp
sbb
ret
mov
aad
sbb
lcall
cld
in
iret
and
cmp
shrl
adc
mov
xor
fwait
xchg
dec
orl
adc
cli
in
xor
pop
inc
push
sbb
test
cltd
ret
add
leave
ret
adc
sbb
xor
in
sbb
jg,pt
mov
and
je
add
inc
or
mov
lcall
adc
xor
add
jg
pusha
sub
cmp
ljmp
dec
pop
xchg
pusha
fildl
or
js
test
enter
push
stos
xlat
lret
mov
mov
push
push
push
shlb
xchg
add
orl
dec
insb
aad
adc
adc
pop
pop
in
test
and
push
xchg
fmull
lea
xchg
mov
xchg
scas
orl
mov
add
mov
addb
and
stos
pop
or
in
js
rcll
mov
xchg
ret
sub
adc
addr16
enter
mov
lds
sbb
xchg
xor
rcl
cmp
gs
icebp
push
test
gs
rcrl
inc
inc
cs
iret
lret
jl
lock
hlt
je
jo
xchg
or
ja
aad
mov
or
add
mov
xchg
idivl
aam
mov
call
xchg
mov
sbb
stos
ss
and
adc
and
or
push
sub
es
lds
inc
notb
dec
cmp
and
in
sub
out
jecxz
stc
xchg
out
dec
cmp
lods
hlt
decb
mov
lods
sub
cwtl
rcll
jne
flds
adc
shll
arpl
mov
jno
pop
test
hlt
nop
xchg
es
enter
fwait
sub
mov
icebp
xchg
mov
cmp
sti
push
adc
push
out
jg
cmp
jge
xchg
and
jg
data16
jbe
cli
subl
pushf
cltd
aas
or
xor
xchg
pop
jge
leave
push
sbb
mov
mov
gs
into
mov
dec
inc
xchg
and
ljmp
out
add
sub
push
adc
mov
add
mov
gs
mov
pushf
imul
mov
or
inc
pop
add
sub
adc
enter
gs
loope
mov
dec
adc
add
in
or
pushf
test
push
adc
or
rorl
leave
sub
sbb
sub
add
adc
jbe
or
inc
push
pop
and
fcompl
orb
push
dec
int
push
je
test
aad
dec
out
scas
fsubs
inc
mov
jg
push
add
sbb
cmp
add
lret
pop
cwtl
or
inc
popf
cmp
inc
or
xchg
dec
sbb
loopne
and
mov
inc
and
jg
pop
out
add
sub
les
aaa
sub
xchg
xchg
aaa
add
add
inc
sbb
xchg
dec
cmp
ffree
inc
or
sbb
cmp
or
cmp
rcr
inc
or
xor
mov
xor
dec
cwtl
and
fnsave
dec
hlt
xchg
lds
inc
std
jnp
test
sbb
mov
inc
cltd
xor
push
or
sahf
mov
dec
sbb
adc
dec
xchg
inc
push
loope
mov
rorl
xchg
pop
inc
imul
int
inc
or
out
mov
add
push
mov
xor
cwtl
or
addl
jmp
adc
data16
mov
mov
incb
jmp
mov
cwtl
add
les
decl
in
ljmp
adc
add
test
xchg
movl
push
xchg
sti
adc
or
scas
jecxz
xorl
jae
jl
pop
mov
out
push
xor
nop
dec
sbb
cmpb
cmpb
add
xchg
subl
inc
loop
pop
dec
in
sub
xchg
xchg
mov
dec
inc
pushf
mov
push
lea
dec
or
mov
test
push
mov
les
adcl
rcr
cmp
inc
pop
pop
inc
or
lods
pop
add
repnz
dec
inc
xchg
adc
sub
loop
mov
sahf
lods
jbe
inc
in
xchg
loop
sahf
mov
je
in
aaa
les
add
xchg
test
or
popa
jl
add
into
pop
sti
push
xchg
dec
add
dec
stos
pop
les
movsb
pop
test
int
mov
mov
or
mov
aad
xchg
ffreep
jns
inc
dec
ret
and
xor
in
mov
push
dec
or
dec
aad
xchg
pop
dec
xchg
mov
mov
xchg
leave
rorb
sbb
data16
xchg
mov
dec
add
in
dec
adc
lcall
or
adc
or
lcall
mov
lcall
inc
mov
in
cmpps
xchg
mov
int
and
or
repz
cli
cmp
roll
mov
lds
out
inc
test
pop
add
mov
in
push
add
cwtl
mov
or
or
inc
lret
mov
lret
xchg
loope
inc
and
or
fisubl
int3
cwtl
sbb
dec
int
xor
dec
ficoml
dec
dec
cmc
add
inc
ficoml
sbb
ret
or
mov
out
aad
in
mov
ret
aas
mov
xchg
dec
sub
leave
inc
mov
mov
enter
inc
mov
insl
pusha
lret
dec
daa
or
xor
dec
pusha
into
add
inc
mov
lret
into
dec
call
or
mov
add
mov
int3
dec
xchg
add
scas
ds
sub
push
iret
les
out
movsl
les
out
rclb
cmp
aad
jmp
dec
sbb
out
rorl
out
mov
add
inc
inc
cmp
dec
lods
xchg
add
or
and
int
jg
cmp
adc
or
orb
xchg
clc
mov
push
je
add
jns
add
dec
orl
stos
mov
xor
jl
push
pop
add
jns
or
adc
jns
pushf
dec
test
pusha
hlt
ret
aas
out
add
push
mov
xchg
aas
add
push
dec
adc
ret
int3
daa
dec
xchg
fstl
inc
into
adc
xchg
add
daa
mov
or
dec
dec
adc
xchg
gs
lret
xchg
inc
mov
adc
and
inc
xchg
push
ret
xorl
out
jb
mov
inc
movsb
bound
leave
divl
push
ljmp
rcrb
test
testb
ror
inc
cmc
xor
enter
sub
xchg
je
lea
sub
dec
test
inc
xor
pop
pop
sahf
lds
sub
pop
adc
xorb
int3
inc
mov
push
inc
sbb
sbb
or
or
adc
in
int3
pop
aam
hlt
xor
push
test
wbinvd
xchg
leave
call
inc
cwtl
xchg
lret
fnsave
fs
les
xor
xlat
aad
xchg
push
ret
std
pop
mov
dec
inc
cmc
ror
mov
jl
mov
xor
add
mov
pop
inc
or
or
mov
std
and
dec
lds
cwtl
mov
mov
mov
adc
jl
or
pushf
jbe
mov
clc
cmp
in
cmpsb
and
add
les
int
cltd
incb
jle
add
aam
addb
or
dec
mov
xchg
fisttpll
faddl
loop
fimuls
ret
cltd
xchg
add
in
add
xchg
test
movl
xchg
mov
lret
xchg
inc
dec
lcall
xchg
insb
mov
mov
fldl
imul
orb
out
les
or
ss
int
push
inc
mov
les
add
push
ljmp
inc
int
test
sarb
jmp
inc
cmp
enter
les
add
rorb
dec
fwait
les
add
sub
mov
xchg
mov
leave
or
xchg
inc
leave
add
xchg
add
xlat
push
sub
xchg
add
mov
enter
fldl
push
ret
inc
mov
or
pop
inc
cld
adc
repnz
or
or
dec
test
push
add
cmpsl
xchg
inc
push
xor
rolb
mov
cmovnp
adc
gs
pop
mov
sub
mov
jae
add
or
ret
mov
dec
insb
ret
push
inc
or
les
movsl
loop
adc
test
xchg
int3
testb
inc
inc
andb
mov
mov
inc
insl
or
adc
sbb
in
ret
pushl
or
inc
mov
shrl
jecxz
lds
ret
test
dec
sbb
pop
adc
cmpsb
cs
test
sub
add
lea
cmp
dec
or
cmp
imul
add
or
inc
icebp
scas
adc
inc
cmp
jg
push
or
cmp
inc
addr16
pop
adc
mov
int3
cmp
inc
xchg
loope
hlt
and
or
cmp
mov
fs
or
mov
or
sub
jecxz
inc
fadds
mov
fidivrl
push
cmp
mov
lcall
or
test
sbb
repz
dec
inc
adc
or
sbb
adc
push
mov
inc
repz
lcall
insb
lcall
insb
aam
xor
dec
push
or
or
cmp
hlt
scas
stos
and
or
call
pushf
or
or
push
add
dec
dec
adc
inc
movsb
fcoml
cmp
into
dec
lcall
in
xchg
test
mov
int3
cwtl
add
lds
add
sbb
ss
rcr
pop
out
sub
pop
add
in
lea
mov
fstpl
add
xchg
lret
add
cmp
push
inc
xchg
xor
sbb
in
ret
cmp
jns
int
sbb
in
cmpsb
in
or
inc
inc
dec
fnstenv
mov
dec
pop
fwait
xchg
das
aam
dec
insl
adcb
jbe
flds
inc
dec
call
popa
mov
ffree
jne
add
iret
dec
jbe
ret
test
aaa
mov
ret
sbb
add
inc
aas
flds
in
shrl
inc
mov
movb
sub
jge
dec
sub
mov
lret
pop
or
clc
inc
jno
ret
filds
cmp
leave
or
int
fmul
pop
jl
iret
call
xchg
or
movsl
les
rorl
int
mov
ja
fnstcw
push
data16
in
popf
jmp
ficomps
leave
inc
dec
outsb
pusha
or
inc
icebp
sub
in
adc
pop
les
jl
shrb
lea
jo
sub
jg
push
sub
mov
pushf
mov
add
sub
in
popf
jg
aaa
mov
enter
jl
jns
adc
lahf
inc
dec
sbb
or
dec
adc
push
add
subl
or
lds
call
or
mov
xchg
sbb
adc
mov
mov
jmp
das
dec
andb
or
shll
mov
inc
jne
mov
or
pop
mov
adc
add
xchg
into
push
mov
shrl
mov
xchg
je
in
or
adc
pushf
lahf
leave
lahf
pushf
add
test
outsl
test
xchg
add
mov
push
mov
push
mov
or
std
add
add
test
inc
test
sbb
and
cmpsb
loopne
mov
mov
sub
add
add
out
adc
xchg
popf
inc
out
test
dec
and
hlt
inc
xchg
xchg
adc
dec
cwtl
addl
outsl
enter
add
or
inc
cwtl
add
and
or
push
mov
out
lret
aas
and
mov
add
fstpt
dec
sbb
xorb
xchg
inc
filds
or
cmp
mov
into
xlat
xchg
or
sbb
arpl
adc
clc
pop
test
xchg
subl
in
mov
les
ret
or
imul
adc
dec
mov
cmc
add
mov
add
aad
loop
lret
cmp
mov
cmp
xor
loope
dec
jnp
test
and
pop
mov
enter
stos
js
or
dec
lcall
and
pop
and
push
lea
ret
pop
je
dec
push
jae
or
or
mov
xchg
inc
pop
gs
test
adc
int3
add
int
and
or
mov
stos
jl
mov
mov
test
or
jg
mov
stos
gs
repz
xchg
and
push
xchg
add
push
or
push
ljmp
add
sti
adc
sbb
in
ret
repnz
add
pushf
mov
cmc
lds
jp
mov
or
mov
out
push
mov
inc
mov
sbb
add
xchg
aaa
les
insl
mov
xor
inc
inc
xchg
mov
in
fisttps
xchg
or
ret
inc
cld
scas
je
mov
leave
int3
loop
fmul
decl
sbb
cmp
rorb
inc
push
ffreep
int3
xor
fnstcw
dec
fisttpl
in
loop
aam
inc
push
aas
aas
ret
faddl
aam
lret
inc
fdivrl
dec
aas
scas
into
call
adc
aas
fildl
shr
dec
add
dec
inc
mov
inc
sub
inc
mov
pop
mov
frstpm(287
and
enter
movl
or
leave
lahf
ljmp
xchg
jmp
mov
pop
aam
frstpm(287
sub
inc
enter
inc
daa
fcoml
lcall
aas
sbb
adc
fildl
daa
fcoml
daa
test
jbe
sub
add
dec
add
mov
add
shl
dec
dec
push
inc
test
or
adc
lock
or
fwait
inc
ret
jo
sti
test
adc
lock
inc
pause
xor
mov
rol
mov
or
aas
aaa
adc
andb
sbb
pop
mov
mov
cli
addl
sbbb
out
adcb
inc
inc
jg
ret
xchg
aaa
add
lahf
cltd
or
je
add
ret
add
in
dec
inc
int
lahf
add
addl
cwtl
mov
lret
or
inc
pop
inc
or
mov
gs
or
adc
jg
jo
jo
js
or
test
dec
dec
or
les
mov
test
inc
add
sub
addr16
enter
into
adc
xchg
daa
push
add
icebp
xorb
lret
xchg
les
sbb
jg
lret
mov
mov
negb
int
dec
inc
adc
in
insl
inc
add
inc
adc
aad
mov
mov
adc
testl
ljmp
fldl
or
ret
xchg
popf
or
and
jbe
movb
add
and
add
mov
outsb
mov
test
push
test
xchg
rcr
push
mov
orl
or
mov
xchg
mov
dec
add
and
movsb
add
enter
jo
mov
dec
js
dec
cmc
jecxz
inc
outsb
xchg
jo
add
inc
fildl
cmc
push
int
outsb
out
ret
push
not
test
or
cmp
aas
outsb
int
dec
dec
mov
dec
dec
ror
add
ja
and
jbe
inc
mov
sbb
arpl
mov
dec
lcall
outsb
or
push
jb
dec
mov
sbb
dec
lcall
xor
adc
mov
pop
fisttps
adc
nop
dec
and
js
mov
dec
cld
mov
dec
or
or
scas
dec
clc
inc
add
pop
inc
xchg
ret
fisttps
adc
ret
lock
int
inc
ret
jl
xchg
xchg
cld
add
dec
pushaw
inc
mov
lock
add
adc
mov
ret
push
lods
test
jl
leave
orl
leave
inc
inc
cmp
dec
mov
dec
xlat
inc
ljmp
mov
dec
push
ret
or
or
mov
inc
nop
rol
adc
test
xchg
test
mov
jne
inc
mov
sahf
xor
push
xchg
and
xor
or
dec
xchg
loope
xchg
add
jl
aas
dec
pop
xorl
addl
sub
xchg
pop
es
out
shlb
add
es
mov
adc
add
dec
mov
hlt
add
xor
dec
xorl
ffree
in
mov
rolb
dec
or
decb
mov
addl
mov
clc
xor
int
into
test
lcall
inc
clc
inc
add
sbb
outsl
int
repz
mov
push
xorb
pop
xor
or
sub
filds
sbb
add
repz
lret
in
sbb
sub
scas
or
adcb
sub
or
rclb
sub
add
cmp
jns
mov
lds
sbb
xchg
xor
loope
ret
mov
cmc
pushf
aaa
jecxz
lds
jge
mov
out
pushf
xor
out
ljmp
out
or
test
mov
flds
lret
mov
lret
add
decl
cmp
out
cmp
jecxz
mov
or
mov
mov
pop
or
xchg
int3
mov
int
fldt
sbb
lret
add
dec
call
subl
push
mov
fstpt
call
or
mov
mov
dec
lret
aaa
in
test
cmp
test
xchg
ret
into
jbe
repz
int3
mov
bound
ret
ds
inc
sbb
or
int
aaa
filds
push
xor
rcr
jns
int
push
mov
xchg
dec
mov
or
lods
ret
pop
push
inc
jle
adc
filds
push
add
lret
sbb
inc
inc
add
clc
push
dec
xor
push
lret
or
add
or
pop
mov
jmp
lahf
call
mov
mov
jbe
clc
pop
mov
int
and
inc
in
add
aam
jg
lahf
in
and
mov
test
inc
or
mov
pusha
fnstsw
inc
into
add
je
xlat
sbb
pop
mov
loopne
les
pop
out
jg
daa
or
xor
rolb
sbb
shll
test
jbe
jmp
mov
fsubl
enter
rcrl
dec
sbb
scas
jl
mov
dec
cmp
ds
les
addr16
mov
loope
pop
sbb
dec
movsb
adc
hlt
jge
shl
adc
dec
lds
cmp
into
int3
aas
int3
xchg
add
mov
mov
xchg
push
mov
jecxz
push
in
mov
add
xchg
inc
pushf
xchg
fs
lcall
add
cmc
push
ss
test
aam
or
in
inc
mov
or
xchg
in
call
icebp
add
xchg
add
popf
mov
add
xchg
addl
movsb
xchg
inc
push
ss
inc
ret
test
int
jecxz
inc
sbb
xor
add
sarl
les
insb
inc
xchg
jbe
and
xchg
in
xor
sbbb
clc
lea
xchg
cmp
or
add
pop
repnz
adc
iret
les
inc
sub
lret
xchg
or
rolb
dec
pushf
push
add
aad
xchg
je
ret
cs
inc
mov
test
xchg
mov
mov
popf
addl
or
or
je
nop
sub
inc
adc
xchg
lea
popl
add
xchg
inc
inc
dec
mov
inc
mov
inc
adc
xchg
xor
xorb
push
lea
in
mov
dec
lds
dec
jae
test
or
popf
sub
xchg
dec
roll
xchg
mov
inc
movsl
repz
and
sbb
sbb
xchg
loope
pusha
add
pop
mov
addl
xchg
enter
and
xchg
icebp
mov
mov
in
mov
mov
or
test
sub
test
loop
mov
ss
mov
sarl
int3
adc
aas
xchg
je
dec
lea
or
dec
repz
scas
hlt
enter
cmp
mov
lret
movsl
xchg
scas
in
and
sbb
sbb
lret
mov
sub
pop
stc
les
jecxz
sub
sbb
mov
sbb
sbbb
fcmove
add
and
popa
vmovq
fisubrl
inc
mov
pop
orb
cmp
clc
cmp
push
xchg
in
sbb
push
mov
sti
stos
xchg
test
lret
fstpl
fmull
or
inc
aaa
inc
ljmp
nop
cmc
add
test
addb
sub
push
into
imul
pop
xchg
lret
out
repz
xchg
out
out
lret
add
stos
cli
cmp
xlat
lret
mov
pop
int3
jne
dec
sbbl
inc
repnz
sarl
test
movsb
mov
pop
pop
add
stos
nop
int
test
dec
sub
push
movsb
sbb
pop
lds
sti
jns
xorl
popa
push
cmp
aaa
imul
int
jle
cmc
fsub
icebp
jecxz
inc
test
dec
push
mov
sub
outsb
test
cld
enter
lds
inc
popa
mov
test
inc
add
lcall
ljmp
sub
xlat
cli
mov
mov
sub
push
andl
or
out
cmp
inc
mov
in
add
mov
shll
add
and
lds
rcl
push
xchg
insl
dec
and
je
pop
jle
aad
fcmove
jbe
add
dec
loop
lret
loopne
sbb
enter
ljmp
in
dec
and
xlat
dec
daa
out
add
in
jno
add
cmc
or
adc
xchg
mov
xchg
in
lret
inc
dec
aad
stos
push
dec
es
jp
sbb
adc
mov
and
subl
ss
cmc
xor
aaa
sbb
lds
sbb
sbb
ficoms
xchg
xor
out
ret
int
ja
mul
out
pop
adc
mov
popa
das
out
jnp
andl
mov
push
xchg
je
jge
add
lods
or
imul
lds
dec
shlb
jb
add
out
in
mov
push
out
in
fs
mov
es
adc
cs
jecxz
xchg
push
dec
jmp
cs
movsl
mov
in
idivb
xchg
jecxz
push
jns
add
push
addl
dec
out
or
xlat
in
dec
aas
ss
mov
sbb
daa
in
cmp
jmp
lret
add
cmc
cmp
hlt
sub
cli
out
not
pop
push
or
adcl
adc
xorb
iret
cvtps2pd
push
and
or
sbbl
xchg
pop
rcrl
loope
xor
rolb
mov
sbb
cmpsl
xchg
fs
add
loope
pop
mov
pop
mov
push
mov
cmpsb
enter
dec
fwait
jns
lret
pop
push
loopne
xor
cmp
xchg
add
shrl
inc
jecxz
stos
rcll
adc
xchg
roll
cmp
add
jle
fisubs
sub
sysret
add
data16
xchg
sub
inc
test
sub
push
mov
test
mov
inc
stos
nop
jbe
test
inc
js
add
lea
ja
or
movsb
dec
enter
jp
dec
jne
xor
add
cld
mov
dec
loope
lea
les
jecxz
addb
test
sub
push
sbb
arpl
cmpl
cmp
popa
or
movsl
and
adc
jle
and
jns
sub
and
out
call
xchg
clc
cmpsb
xorb
mov
mov
out
aas
stc
inc
mov
inc
mov
or
push
int3
shlb
repz
xchg
jg
and
mov
or
mov
out
lret
or
mov
mov
sbb
jecxz
xlat
dec
xlat
js
cli
inc
fs
or
xchg
sti
xchg
inc
lods
in
inc
and
adc
cwtl
add
flds
xchg
jecxz
fmull
xor
adc
popa
cltd
pop
pop
idivb
les
xchg
dec
xchg
lret
xchg
rcl
out
outsb
movsb
imul
gs
mov
mov
shl
mov
xlat
mov
jbe
test
les
or
stc
mov
test
jg
jne
iret
inc
fs
int3
andb
sbb
int
inc
xor
inc
mov
dec
sbbl
sbb
out
lcall
xlat
scas
fisubl
sbb
and
aad
jle
inc
ss
les
sub
inc
or
add
sub
fs
or
test
repz
lds
test
inc
ret
mov
cmpb
mov
aad
cmpl
ss
or
or
mov
arpl
mov
into
mov
jge
push
stc
addl
push
xchg
adc
fcmovbe
cli
mov
test
test
cmc
or
adc
iret
inc
int
clc
or
cltd
loop
add
into
add
mov
xchg
call
pop
add
stos
shl
pop
enter
test
aas
or
xchg
test
push
or
push
clc
add
xlat
mul
add
adc
repz
jecxz
xor
imul
rol
stc
ret
push
arpl
fs
cmp
lods
adc
mov
dec
sub
clc
dec
lds
cmp
sbb
loope
mov
inc
scas
jp
add
inc
or
jo
dec
jnp
mov
or
sbb
adc
divb
sbb
dec
fcomps
fs
clc
jle
dec
xchg
jb
or
pop
xchg
add
mov
ljmp
cwtl
enter
push
jg
xchg
mov
mov
xchg
rol
je
dec
out
mov
imul
mov
arpl
mov
test
inc
lret
xchg
mov
fs
mov
xlat
ljmp
or
lcall
sbb
add
or
xchg
mov
jae
lret
mov
inc
adc
pop
test
inc
or
add
cmc
push
or
adc
or
je
xor
int3
insb
clc
test
iret
gs
neg
lret
mov
mov
inc
pop
test
fisttps
cmpsb
lret
rol
mov
decb
jp
pop
sbb
cmpl
jns
sbb
cld
jg
inc
mov
or
add
add
cmp
adc
and
mov
ret
mov
aas
sbb
pop
test
mov
add
or
shlb
ret
test
les
enter
pop
movsb
repz
adc
jp
xor
fimull
push
pop
popf
inc
insb
xchg
inc
or
inc
or
cmp
add
dec
loope
xlat
or
xor
pushf
mov
or
iret
push
push
or
popf
in
mov
dec
or
inc
pop
imul
test
pusha
popf
push
leave
mov
adc
aaa
in
xchg
cltd
lcall
mov
popl
mov
inc
lcall
repz
dec
mov
stos
ficompl
push
cli
pushf
inc
int3
lret
lds
or
iret
in
pop
xorl
add
inc
clc
add
lret
lds
inc
mov
dec
int
cmp
loopne
mov
or
or
clc
movsl
sbb
sbb
inc
movsb
enter
jno
sub
jmp
inc
cmp
and
cmp
sbb
iret
ljmp
call
xchg
inc
dec
cmp
sbb
or
mov
lock
jns
pop
mov
inc
lock
cmc
aas
leave
dec
lock
mov
xchg
inc
xchg
and
in
mov
or
inc
jg
test
movsl
rclb
mov
ret
or
inc
cmc
ret
adc
dec
shl
jg
rclb
jno
push
jne
mov
loop
int3
pinsrw
or
mov
movsb
repz
dec
adc
stc
xchg
sbb
or
int
push
test
clc
add
repz
add
rol
sbb
cmp
jp
mov
jne
in
rclb
xchg
mov
sbb
add
or
lcall
scas
sbb
xchg
sbb
fs
in
dec
imul
enter
pop
test
fistpll
shll
ret
pop
mov
xchg
inc
pop
or
nop
enter
pop
cmpsb
inc
hlt
call
push
or
pop
arpl
je
aas
push
xor
dec
add
int
repz
pushf
mov
cmp
out
fwait
xchg
and
pop
xchg
dec
add
add
add
mov
push
ljmp
push
sub
leave
lcall
ss
int
or
or
dec
repz
mov
out
xchg
fcoml
cld
jne
int
add
mov
cmp
sar
push
lea
pop
xchg
lret
sbb
das
jne
les
loope
scas
shll
daa
in
cld
stos
mov
dec
push
rcl
arpl
adc
loopne
sub
sbb
inc
in
cmpsb
push
pop
add
or
xchg
pop
ret
cmp
ret
sbb
ja
roll
in
test
fbstp
push
sti
push
mov
ret
lea
shlb
shll
mov
fcom
xchg
mov
leave
sub
adc
or
out
pop
sbb
adc
leave
decb
pop
adc
in
push
adc
inc
add
loope
in
shr
dec
push
push
add
add
mov
stos
insb
mov
movl
add
dec
add
jno
dec
lahf
in
push
push
dec
or
enter
jg
mov
push
imul
inc
mov
popa
cwtl
adc
subl
push
mov
jmp
inc
xchg
or
dec
dec
mov
sbb
xchg
clc
orb
mov
shrl
dec
or
movb
mov
xchg
push
cmpsl
enter
loope
xchg
iret
test
ss
xchg
ljmp
inc
mov
in
aad
outsl
in
in
cmpl
lock
ljmp
insb
cmpsl
inc
imul
test
mov
or
rcl
or
or
fidivl
outsl
cmp
gs
or
notb
cwtl
and
sub
or
jns
fdivs
inc
in
mov
ss
lods
mov
es
mov
add
out
sub
cli
cwtl
mov
xlat
dec
out
and
leave
or
fsubrs
dec
xorl
pop
out
retw
add
ret
add
mov
xchg
imul
fs
les
xchg
mov
clc
push
cmpsb
sbb
cld
fs
pop
add
lock
inc
xchg
popaw
imul
push
xor
imul
subl
inc
test
xchg
fwait
dec
adc
lahf
or
inc
add
shrb
jp
icebp
cmpsl
mov
sarb
sbb
fistl
push
cli
sub
rorl
xchg
push
inc
add
jo
or
cmp
push
mov
ret
lahf
adcl
push
xlat
mov
mov
push
clc
test
sub
faddl
arpl
pop
rol
ja
lahf
xchg
inc
bsf
lds
orl
cmpsb
gs
xorl
or
jecxz
iret
insl
dec
or
xchg
inc
lds
es
sti
and
test
push
dec
pop
mov
push
out
lea
or
lds
cmpsl
sbb
dec
incl
lds
into
dec
nop
clc
mov
mov
or
call
enter
int
and
or
decl
pop
xor
sub
divl
imul
push
fbld
mov
mov
cmp
inc
outsb
inc
leave
add
insb
xchg
lret
loope
mov
jp
push
inc
xchg
leave
push
test
dec
outsb
in
xor
or
sbb
xchg
enter
pop
mov
jbe
clc
jg
add
or
add
inc
flds
movsb
lea
and
cmp
inc
push
inc
insb
int
enter
out
mov
gs
push
mov
dec
lretw
mov
aas
push
pop
ja
lds
push
aad
in
scas
jnp
jbe
test
mov
xor
in
test
loop
or
or
insl
lret
xchg
arpl
mov
iret
xchg
daa
dec
xchg
add
push
dec
fs
xchg
aas
add
insb
inc
fmuls
lret
add
fadd
int3
sub
cmp
push
into
sahf
movb
roll
xlat
movb
cmpsb
ret
fisttpll
cmp
xchg
sbb
ljmp
pop
add
cltd
and
pop
xchg
sub
jl
mov
inc
ror
add
into
add
ljmp
fs
inc
jg
lret
sub
jno
adc
or
xlat
mov
dec
add
int
or
xchg
roll
leave
leave
movntq
cmc
int
call
pop
cltd
leave
cli
xlat
mov
sub
mov
add
addb
mov
xchg
sbb
lock
hlt
aam
mov
push
fidivl
jmp
aad
dec
int
sbb
xchg
rorb
inc
fistpll
sti
sti
lds
movsl
inc
negl
xchg
jg
add
into
dec
lret
adc
push
aaa
or
repz
pushf
inc
jmp
inc
cmp
adc
repz
add
js
loopne
dec
aad
adc
xchg
dec
sub
adc
mov
inc
in
out
xlat
pop
popf
aaa
xchg
sbb
pop
sar
cmc
in
outsb
sti
fwait
aad
and
int
dec
inc
pushf
ret
push
aad
or
or
cmp
int
adc
enter
shrb
movsb
test
push
mov
mov
fmull
push
aad
outsb
in
dec
lods
out
sarl
xchg
and
or
mov
lods
xor
faddl
hlt
loop
sub
mov
inc
dec
sub
mov
push
inc
xchg
mov
cmp
enter
nop
and
fs
idivb
adcl
sub
sbb
jg
adc
pop
lock
sub
jo
and
push
inc
fcomps
leave
inc
mov
and
cmp
cld
and
mov
lret
dec
mov
dec
ljmp
test
inc
dec
js
mov
push
pop
pop
cwtl
adc
lret
lods
sub
or
lcall
jmp
pop
aam
mov
out
mov
cmc
pop
or
adc
pushf
cmp
cmc
dec
xchg
and
nop
movsb
xchg
test
iret
pop
scas
int
sbb
dec
rorl
dec
lds
test
fcoms
subl
dec
mov
jno
pushf
adc
sbb
mov
or
xchg
mov
and
je
lret
enter
in
or
repz
xchg
les
mov
adc
js
dec
shll
lret
add
jecxz
div
push
push
fs
mov
or
or
insb
fadd
test
sub
lret
xchg
ja
lea
xchg
icebp
jo
mov
push
and
subl
mov
adcb
add
push
fwait
xor
sub
cwtl
aam
subl
mov
leave
pop
cmp
adc
ret
cmc
or
leave
test
in
aam
pop
movsb
cmp
dec
orl
in
hlt
mov
repnz
aaa
movsb
lods
test
mov
pop
rcrb
lock
lea
sti
vcmpps
pusha
xor
inc
jbe
loopne
xchg
fsubs
push
aad
scas
jmp
lds
push
dec
sarb
xchg
addr16
adc
jnp
mov
dec
lods
ss
mov
inc
jns
mov
aad
jl
adc
dec
cmc
add
jno
dec
outsb
movl
lahf
adc
les
sub
xchg
incl
cmp
loop
roll
jbe
mov
inc
mov
and
sbbl
stc
repnz
enter
popa
sbb
adc
sub
cli
mov
mov
xchg
xor
push
sub
lret
mov
push
jg
and
adcl
mov
jg
and
dec
sub
in
leave
sub
pop
push
js
inc
loope
add
out
jo
inc
cld
pop
incl
sub
pop
pop
cwtl
or
rol
push
movsb
xchg
loope
and
icebp
movsb
cwtl
xchg
mov
cmp
push
int
sahf
enter
popa
cld
inc
dec
xor
sub
mov
push
call
popa
inc
test
xchg
enter
mov
sub
cmp
test
mov
fucom
sbbb
cmpb
bound
adc
inc
sub
jge
inc
pop
hlt
mov
pop
fadd
dec
shlb
daa
cmp
sbb
lds
inc
shrl
jo
in
call
les
pushf
int
inc
mov
out
fsubp
or
test
call
out
test
mov
insl
dec
inc
push
xchg
or
jnp
rorb
cmpsb
cmp
push
pushf
imul
cs
les
sbb
std
iret
mov
orl
ds
xor
rorl
adc
or
pop
dec
fwait
daa
mov
sbb
or
push
addr16
leave
push
sub
clc
pop
add
mov
dec
xchg
mov
sbb
imul
xor
hlt
sub
sub
aaa
test
icebp
stc
rol
daa
sbb
or
lea
mov
incl
cmpsl
cmpsb
roll
dec
dec
inc
fcoml
loop
jecxz
fdivl
enter
sbb
pop
push
add
cmp
test
rcll
xorl
jecxz
les
jns
fwait
pop
xchg
mov
dec
add
xchg
xchg
ret
dec
pushf
inc
in
lret
jl
insl
or
out
enter
les
sbb
adc
leave
and
shlb
subb
daa
mov
jbe
add
ret
enter
jbe
inc
fldcw
jp
jo
adc
dec
add
add
lods
push
add
mov
call
jnp
and
inc
test
inc
or
add
inc
dec
push
ret
pop
in
cmp
adc
shrl
ret
ret
hlt
in
js
xchg
in
inc
leave
lock
in
mov
push
roll
call
ja
cwtl
lret
out
daa
fiaddl
or
test
inc
cs
push
dec
push
mov
jecxz
movsb
adcl
ljmp
adc
loope
inc
mov
aam
inc
fdivl
cmp
pop
enter
xlat
out
or
clc
inc
xor
fwait
or
or
mov
dec
mov
jl
cli
hlt
mov
add
cmpsl
push
sbb
xchg
clc
test
test
enter
ss
xlat
push
loope
jp
ljmp
inc
mov
ljmp
test
arpl
stos
pop
mov
jmp
push
leave
std
mov
adc
test
jae
sub
xchg
pop
les
and
mov
mov
ret
push
fistpll
leave
test
mov
add
addr16
ror
es
cmp
add
fmul
lret
test
aam
call
inc
cwtl
push
inc
aam
add
inc
mov
cmp
mov
in
insb
sti
inc
or
push
mov
or
cli
out
test
lea
ret
stos
sbb
sbb
lret
inc
fs
test
add
mov
or
fisttps
std
fnstsw
push
or
cmp
push
imulb
inc
jne
xor
mov
imul
pop
cmp
aaa
mov
ds
fcomip
or
or
bound
cmp
incl
enter
xchg
or
adc
je
dec
jge
fiadds
dec
ljmp
push
add
xchg
add
dec
push
movb
pusha
xor
lds
inc
out
mov
jno
sbb
call
xchg
gs
pop
sub
cmp
inc
fs
jno
and
inc
inc
test
jmp
or
orl
out
xchg
dec
addr16
popa
aas
add
ss
xchg
add
inc
shll
retw
mov
dec
pushf
shl
jne
inc
jecxz
ror
jl
orl
jge
cltd
push
add
js
dec
or
fadds
mov
push
dec
loope
divl
shll
sbbb
test
adc
pop
xchg
loope
add
ljmp
cmp
sbb
imul
or
push
push
mov
xor
push
jg
mov
ja
arpl
addr16
ja
inc
or
dec
insb
push
adc
stos
test
ljmp
push
shlb
or
cmpsb
pop
cli
jp
lret
movsb
or
push
orb
popf
sbb
push
inc
inc
cmc
test
add
movsb
jbe
in
add
sub
pop
add
lret
mov
dec
pop
pop
dec
movsb
mov
mov
jp
and
inc
in
mov
sbb
imul
les
adc
enter
pushf
or
sub
add
cmp
xchg
call
repz
add
ljmp
or
inc
filds
faddl
lret
addl
xchg
or
test
mov
fs
pop
pushf
add
push
mov
iret
ror
decl
scas
xchg
mov
add
orb
inc
call
inc
xchg
mov
aas
gs
out
inc
les
call
fistl
push
push
or
adc
mov
js
jb
ljmp
movsb
sbb
ja
sub
inc
ror
mov
movb
test
xchg
push
dec
lret
push
add
add
push
lods
xor
add
jbe
loop
in
and
push
cltd
je
pop
inc
push
dec
loope
fwait
mov
inc
iret
and
in
and
movsb
pop
addb
and
or
add
xchg
jg
arpl
lret
jmp
lods
or
add
jecxz
int3
mov
lods
dec
aad
mov
mov
push
pop
or
test
arpl
add
pusha
in
pmaddwd
dec
out
test
inc
xchg
testb
and
push
xchg
sub
mov
pop
inc
jecxz
pop
fs
or
adc
jns
add
sub
mov
push
adc
or
sbb
daa
xchg
test
mov
addb
add
pusha
sub
aad
sbb
adc
xchg
sub
test
cmc
dec
fmuls
push
push
mov
jl
stos
inc
or
movsb
pop
andl
lret
mov
pushf
test
sub
loope
fistpll
dec
pop
loop
sub
or
xchg
or
roll
insb
dec
xchg
flds
ds
cmc
cmp
sbb
push
lods
or
test
or
mov
test
cli
jmp
js
pusha
lret
aad
clc
add
into
inc
stos
pop
imull
inc
test
decl
add
dec
int
in
and
leave
mov
or
out
adc
xchg
add
xchg
out
sbb
mov
mov
ljmp
jecxz
addb
cs
inc
sub
gs
cmp
mov
stos
mov
mov
scas
jecxz
sarl
lea
pop
adc
cli
dec
inc
aam
out
rolb
dec
test
push
sub
movsl
sub
dec
adcl
in
enter
negl
aas
movsw
dec
push
cli
out
mov
ficompl
outsb
or
into
ret
fs
and
sub
mov
mov
or
cli
lea
cwtl
inc
rol
rorb
inc
mov
inc
sub
sarl
xchg
push
cmpsl
xchg
sbb
sbb
add
fadd
dec
enter
in
cwtl
out
dec
lock
int
lods
lock
mov
int
cs
mov
mov
ret
adcl
mov
cwtl
mov
incl
inc
les
ss
ret
stos
int
rcll
or
test
pop
jne
loope
clc
je
or
add
sarl
dec
daa
jp
add
inc
jb
out
fldcw
enter
adc
cwtl
mov
test
js
mov
xchg
hlt
mov
pop
jns
or
pop
inc
sbb
clc
jbe
sbb
les
int3
fwait
cltd
imul
pop
jl
xchg
into
cmp
in
es
mov
mov
addl
push
sar
mov
jp
movsb
aaa
lahf
daa
mov
mov
enter
mov
adc
cmpl
fisttpll
pop
test
mov
je
mov
push
cmp
sub
inc
rcrl
movsb
mov
dec
inc
mov
mov
push
fstpt
fwait
stos
adc
mov
leave
data16
pusha
lret
add
dec
lret
leave
dec
ret
in
rol
int3
push
call
fs
xchg
pop
lret
call
lds
test
movsl
and
inc
adc
pop
test
test
cmp
mov
dec
add
test
adc
test
jmp
call
or
jmp
out
les
inc
xor
ljmp
shrb
mov
cwtl
movsl
inc
les
mov
or
and
inc
aas
popf
sbb
add
test
lret
dec
jmp
inc
arpl
int3
testb
or
xchg
pop
inc
nop
ljmp
xchg
les
pop
aas
int3
lds
ljmp
into
fs
pop
mov
dec
shrl
dec
aas
lcall
mov
jns
and
fcom
leave
jmp
xchg
stos
mov
push
insb
adc
adc
enter
mov
inc
inc
jl
sbb
xchg
dec
pop
inc
sbb
dec
xchg
xchg
cltd
cmpsb
out
stc
aad
xchg
cmc
clc
mov
addr16
enter
and
dec
cmp
adc
movsb
mov
test
data16
les
cwtl
push
pop
add
cmp
enter
out
pop
cmpsl
test
aam
scas
push
sub
in
mov
pop
shll
jmp
add
or
pusha
cmpsl
inc
negl
xchg
xorl
es
les
add
pop
mov
pop
xchg
decb
sub
mov
add
jmp
stc
arpl
test
xchg
daa
or
add
sub
pop
outsl
sub
fxch
jnp
dec
adc
imulb
test
xchg
adc
mov
les
jnp
arpl
pop
mov
fs
clc
call
xor
leave
mov
xor
mov
sub
ja
sbbb
mov
xlat
mov
mov
hlt
xchg
mov
leave
and
or
call
enter
icebp
add
aaa
test
jle
jae
daa
imul
mov
dec
inc
inc
dec
mov
sub
or
in
push
add
leave
lods
jbe
ss
adc
aas
xorl
mov
rcr
mov
dec
enter
sarb
sub
mov
inc
test
dec
inc
lret
aaa
inc
xchg
cmpb
lods
in
inc
leave
dec
leave
inc
leave
mov
push
dec
lret
adc
rorb
sbb
inc
cld
jg
insl
mov
and
dec
in
bound
adc
fucompp
movsl
xlat
jp
inc
les
dec
or
stc
push
mov
pushf
lea
inc
and
fisttps
mov
sub
call
jg
cmp
fsubs
test
test
jns
push
sub
inc
inc
andl
nop
push
mov
cs
add
fcmovne
or
stos
dec
adc
insl
mov
push
data16
leave
fisubrs
int3
test
ror
xlat
and
vmovups
daa
test
cmpsb
pop
lods
dec
mov
call
xor
xchg
loop
mov
or
xchg
xchg
inc
or
fdivs
ljmp
lret
dec
or
popa
pop
insb
movl
dec
inc
adc
sub
pop
lret
mov
and
inc
das
push
test
inc
push
icebp
pusha
clc
mov
ja
int
mov
push
sub
pop
lret
or
fcoms
ljmp
int3
sti
ret
int
cs
add
cld
xlat
cmpsb
outsb
dec
inc
mov
movsb
push
fs
ret
les
inc
jmp
hlt
daa
push
xorb
out
pop
lahf
mov
aad
pop
dec
and
leave
ret
inc
pop
cmpsb
adc
dec
enter
sub
enter
stos
add
inc
xchg
dec
xor
fs
mov
daa
or
stos
or
jnp
leave
mov
inc
or
inc
ljmp
aas
out
jl
fisttpl
loopne
cwtl
sbb
adc
cmpsb
cmp
andl
dec
test
fisttps
shll
or
test
sub
enter
cli
inc
rcrl
fwait
pop
add
and
fs
mov
or
clc
je
pop
mov
sbb
mov
test
fisttps
pop
enter
xor
dec
andl
es
lods
and
pop
nop
inc
js
incl
stos
cwtl
lret
xchg
iret
xlat
dec
adc
mov
push
in
add
xchg
loop
shl
ja
and
adc
lret
test
pushf
sub
iret
scas
xchg
inc
inc
sub
push
ss
mov
in
movsb
pop
aas
movsb
xchg
inc
popf
add
mov
aam
mov
add
pop
mov
xor
cmp
test
cli
cmpsl
ljmp
cwtl
fildl
xchg
cmp
mov
test
lock
stos
test
pop
je
jns
dec
shr
jo
inc
inc
push
mov
not
inc
dec
lea
call
faddl
mov
mov
inc
mov
ret
divb
sub
jo
insb
out
daa
in
loop
cmova
mulb
push
out
pop
divb
xlat
dec
fucom
jbe
xchg
imulb
inc
les
aas
cld
imul
mov
xor
push
daa
jo
test
int
xchg
mov
in
subb
test
adc
pop
das
mov
push
cmp
or
mov
pop
mov
xchg
outsb
daa
test
arpl
movb
pop
cwtl
loope
xchg
mov
xor
fsubl
stos
aad
push
nop
icebp
mov
js
insb
jp
jmp
dec
mov
xchg
mov
cmp
addr16
push
lds
nop
inc
out
xchg
lret
sbb
or
imul
cmp
aad
cmp
clc
rol
inc
sub
dec
inc
int
xchg
cwtl
dec
inc
cmpsl
sub
in
mov
add
imul
or
call
mov
lret
push
dec
or
inc
mov
inc
rcr
inc
push
lea
pop
or
loope
sbb
cmp
inc
dec
dec
pop
mov
or
xchg
jl
dec
fildl
int
mov
mov
pop
sarl
leave
cmpsl
cbtw
cmpsb
pop
sub
sub
pop
inc
loop
lret
or
add
add
cmp
or
fdivl
test
add
or
test
dec
data16
test
adc
or
xor
test
test
mov
cmc
or
mov
add
sbb
loopne
inc
test
adc
inc
fwait
mov
sub
mov
or
pop
int
jl
les
or
inc
pop
lds
or
lahf
test
pop
dec
cmp
outsb
sub
hlt
or
dec
mov
pop
mov
test
inc
mov
test
mov
sub
aam
sub
xchg
out
leave
jbe
loop
dec
sub
jg
gs
inc
fabs
mov
add
cltd
test
inc
les
inc
xchg
add
and
mov
dec
lea
mov
imul
mov
pop
daa
stos
les
out
aaa
stc
into
lods
pop
leave
movsb
sub
adcl
adc
out
loope
pushf
rcrb
mov
inc
cmp
jp
and
sub
enter
and
mov
mov
fmuls
lret
ficompl
cmp
push
loop
and
dec
mov
leave
sbb
add
test
nop
in
popf
je
xlat
or
lret
cltd
cs
sub
push
roll
fistpl
add
sub
cmp
dec
stc
dec
dec
mov
mov
call
inc
icebp
cmpsl
lret
fsubs
lcall
cli
js
enter
fs
lcall
pushf
enter
out
cmp
add
pop
pop
mov
incl
mov
push
outsb
fld
sub
xchg
or
pushf
gs
sub
sub
clc
fnstcw
pop
add
dec
adc
cmp
adc
loope
xor
int3
jmp
sbb
or
push
in
mov
add
fcoms
clc
aas
ss
shl
in
aam
add
test
imul
pop
movsl
mov
mov
sbb
imul
hlt
sub
dec
dec
push
lret
pop
xorl
jnp
push
inc
xchg
into
jg
cmp
or
mov
loope
mov
xchg
aas
pavgw
popf
or
arpl
mov
and
jmp
lea
jo
shlb
imul
aas
in
mov
stos
push
or
popw
sub
fldenv
enter
cltd
fisttps
or
fidivrs
fbld
cmpsl
ret
and
fisubrl
in
sbb
test
test
mov
test
xchg
imul
insl
in
mov
test
int3
cmpsb
fmul
dec
sbb
scas
sarl
popl
lds
push
test
rorl
ret
in
sub
push
add
arpl
test
jmp
mov
sarl
add
cmc
cmpsl
xchg
fnstsw
enter
fs
cmp
aam
test
xchg
mov
or
loop
mov
jecxz
xchg
out
inc
dec
push
test
inc
imul
out
daa
jle
add
mov
out
popa
ret
fimuls
inc
mov
inc
in
arpl
xor
fstps
or
lea
enter
test
pop
sbb
or
adc
fadd
and
fs
mov
xchg
enter
sub
or
jp
dec
mov
iret
jecxz
xlat
scas
xor
lcall
mov
dec
cmp
xchg
gs
out
lds
test
in
test
pusha
rol
sbb
jp
fmull
xchg
ja
inc
outsl
data16
into
jbe
push
push
xor
ljmp
dec
imul
jl
pusha
inc
dec
mov
daa
mov
push
arpl
mov
inc
mov
test
fisubl
and
lods
movb
movsb
sub
and
cmc
mov
in
push
add
loopnew
inc
push
xlat
test
sub
ret
clc
test
sub
add
arpl
add
into
nop
xchg
dec
mov
daa
test
mov
aaa
jnp
dec
mul
mov
into
lock
add
test
inc
dec
es
mov
push
movsl
pop
leave
fadds
enter
mov
sbb
int3
add
mov
inc
inc
popa
pop
movsb
push
dec
in
loop
add
sub
les
cmp
adc
pusha
in
mov
loopne
xchg
mov
lods
push
andl
out
loop
leave
or
insb
out
ret
ds
xlat
mov
out
dec
mov
jbe
inc
sub
dec
xchg
cmp
fldt
and
enter
lds
xor
enter
mov
cs
leave
sub
mov
jmp
or
sub
fimull
enter
loopne
loopne
inc
inc
lret
xchg
pop
fnstenv
leave
into
cmp
aas
out
adcl
jge
add
andl
sub
push
inc
xchg
int
ja
adc
lods
push
mov
xchg
jle
aam
in
icebp
jecxz
xor
iret
inc
push
adc
jmp
and
dec
lret
dec
and
sub
push
inc
shll
jne
lahf
jae
xchg
andps
sbb
hlt
mov
xchg
and
daa
or
adc
add
cmp
movsl
dec
push
jg
dec
out
movsb
add
or
sub
jbe
mov
add
xchg
xchg
les
lea
xchg
add
inc
add
dec
inc
push
insb
or
pop
mov
inc
aaa
mov
incl
fwait
xor
sbb
aam
xchg
sbb
rcll
jl
and
sarl
push
cmpsb
cmpl
mov
lret
and
jmp
test
mov
xchg
jg
testb
shl
or
stc
mov
push
pop
ss
jl
push
xchg
icebp
push
hlt
inc
xor
mov
test
inc
je
lds
xchg
imul
pushf
scas
or
mov
test
mov
data16
test
push
add
fwait
shl
das
xchg
mov
int3
jg
mov
push
xchg
sbb
addb
and
fcmovu
or
stc
dec
mov
cmp
and
scas
add
clc
mov
mov
in
lcall
inc
jmp
pop
cmp
or
fisttpl
push
negb
mov
idiv
or
ret
pop
icebp
mov
repz
je
sbb
xchg
add
lods
addl
jns
or
pusha
fwait
incl
test
add
push
les
test
xchg
icebp
shl
mov
and
lret
xchg
dec
in
add
mov
inc
mov
push
int3
mov
dec
les
adc
je
roll
jp
jle
push
or
test
mov
into
xacquire
xor
push
or
mov
les
mov
std
mov
add
mov
mov
add
dec
xchg
in
rol
sub
or
cld
push
addl
rol
adc
cmp
adc
pop
mov
les
lods
jg
test
push
clc
mov
push
push
stc
int3
adc
sbb
or
sub
sub
add
cwtl
leave
decl
mov
aas
ret
jno
push
addb
les
xchg
js
inc
repz
pusha
mov
jle
sbb
xchg
push
hlt
mov
in
add
jmp
imul
shll
cltd
int
jmp
mov
push
or
jecxz
cmp
sub
es
and
gs
or
pop
xchg
xchg
xor
push
inc
xchg
push
cmc
push
dec
cltd
mov
movsl
cmp
mov
pop
das
test
ret
gs
inc
aad
mov
pushf
cmovl
fiaddl
inc
push
call
out
rcl
push
cltd
test
jo
or
in
inc
ret
inc
jne
aaa
neg
mov
push
mov
and
imul
or
fs
les
mov
ret
mov
aam
mov
xor
inc
xor
inc
push
sbb
orb
mov
lret
lea
lahf
or
adc
jnp
add
loope
repz
shlb
or
xchg
roll
mov
sub
inc
mov
mov
ret
or
add
mov
xchg
adc
mov
ret
lret
cmpsl
or
lcall
data16
xor
mov
dec
xchg
inc
sub
int
lods
mov
mov
pusha
subb
cmp
movsl
sbb
or
and
xchg
xlat
cmpsl
sub
xchg
xchg
adc
inc
fstpl
outsb
mov
cmp
inc
and
and
sbb
loope
test
stos
push
addl
adc
test
loope
xor
jne
test
es
into
addl
cli
in
dec
mov
subl
pop
pop
push
shlb
fwait
push
xchg
inc
fmuls
mov
jmp
sahf
mov
cmp
cmp
mov
xsaveopt
into
push
mov
adc
mov
and
pop
mov
xchg
xchg
xor
lahf
or
jecxz
cwtl
les
or
sbbl
or
sub
mov
fs
mov
imul
js
loop
push
test
mov
jle
adcl
orl
fmuls
jns
xor
int
mov
xor
dec
push
adc
jae
jp
fisttps
fxch
fs
or
mov
dec
mov
dec
mull
or
ja
mov
jns
mov
mov
mov
test
fwait
or
add
jb
test
mov
xor
xorl
pop
std
xchg
mov
sbb
fcmovbe
push
aas
lea
test
in
adc
lea
sti
inc
mov
lret
fisubrl
mov
or
insb
lods
mov
dec
mov
mov
lds
fucompp
xor
mov
mov
lcall
ret
movsl
mov
fnstsw
cld
xor
jo
stc
jmp
pop
jmp
pop
rorb
cli
lods
or
shll
mov
movsl
lcall
adc
mov
imul
es
mov
call
inc
or
xor
icebp
mov
mov
xchg
cmp
cmpl
cs
mov
mov
testb
xchg
stos
adc
shlb
lcall
pusha
dec
popa
roll
xchg
adc
xchg
loopne
adc
inc
or
and
xor
clc
cmpsl
enter
mov
lcall
aas
mov
or
jg
push
fiadds
pop
push
or
shlb
or
fxch
add
adc
cmp
orl
or
or
push
out
inc
cmpl
orl
mov
into
es
add
sti
movsl
fs
adc
ret
sbb
push
cmpl
ljmp
int3
imulb
adc
fstpl
push
int
mov
jmp
andl
cwtl
ss
out
mov
or
ret
mov
dec
sub
in
add
mov
push
sub
cmp
pop
xchg
jmp
lds
icebp
je
fistps
sub
mov
cmpsl
test
hlt
icebp
lea
xor
jo
mov
xlat
xor
loope
xchg
add
loop
shld
lea
push
add
test
xchg
jae
push
dec
mov
addr16
mov
adc
aaa
push
or
pusha
jno
xchg
and
fistps
pop
or
int3
xor
aam
out
adc
lds
addr16
mov
sub
popa
jne
les
mov
out
testb
ljmp
mov
and
pop
les
push
popa
pop
cltd
jns
sahf
addr16
int
je
loope
and
dec
mov
mov
push
dec
push
xchg
add
test
and
ja
sarl
cli
ss
inc
pushf
stc
xchg
push
jb
in
stc
xchg
ret
fsub
stos
add
pop
jmp
mov
inc
mul
addr16
les
icebp
jecxz
sub
bound
mov
fwait
out
mov
sub
in
or
outsl
shlb
in
mov
inc
insb
push
js
push
push
in
push
adc
inc
xchg
daa
push
mov
pusha
out
std
push
into
sub
and
loope
mov
lock
mov
je
add
jo
insl
mov
gs
inc
and
icebp
inc
sbb
mov
lock
mov
ljmp
cltd
adc
addl
aam
ljmp
jecxz
cmc
add
push
lret
movsb
stos
std
sub
add
xchg
int
or
add
add
test
cld
add
aas
pop
aas
out
adc
in
enter
cmpsl
xchg
inc
push
orl
orb
ja
pushf
lcall
xor
jns
mov
mov
cld
jle
fsubl
fstpl
pop
dec
xchg
push
shll
fisubrl
inc
mov
mov
sar
mov
sbb
lcall
mov
arpl
mov
shll
inc
movsl
sub
loope
test
lea
jl
subl
dec
movsb
icebp
lock
mov
movb
mov
je
lea
xchg
arpl
push
icebp
scas
fwait
xor
loope
hlt
cmc
loope
fbstp
orb
in
jecxz,pn
xchg
mov
cwtl
adcb
lcall
mov
pop
sti
adcb
test
xchg
mov
dec
inc
fs
mov
sbbb
jge
adc
jecxz
pusha
or
mov
mov
add
fisubs
outsb
sarl
leave
mov
xor
rorl
push
adc
or
mov
aad
jnp
mov
cmpsb
clc
xchg
jne
xchg
js
pop
leave
add
jg
push
sahf
xor
gs
shll
in
hlt
ss
push
inc
xchg
xchg
mov
mov
xchg
pop
xchg
inc
es
xor
adcl
cmp
les
mov
test
mov
push
sahf
adc
sbb
mov
push
arpl
lahf
in
leave
sub
cld
and
jecxz
in
pushf
jecxz
xchg
push
pop
mov
and
jno
push
out
push
xchg
ret
arpl
repz
sti
jecxz
in
or
fcoml
insb
cmc
ret
mov
fimuls
ret
add
jne
loope
push
cli
mov
test
lods
mov
add
std
lds
leave
out
ss
inc
movsb
or
adc
movsb
inc
mov
inc
repz
lea
push
and
push
xchg
pop
add
add
lret
xchg
lods
sub
inc
cmp
into
add
loopne
out
push
mov
into
inc
lods
into
sub
repnz
inc
add
xor
add
mov
insb
clc
in
cld
dec
std
xor
in
or
dec
shll
in
hlt
inc
cmp
roll
cmp
fs
mov
adc
gs
test
rcll
jbe
xlat
aam
mov
sahf
add
jecxz
je
scas
lcall
cmpsb
and
movsb
jbe
xor
inc
push
push
repz
mov
aam
jg
repz
fdivl
add
xor
int
test
or
andl
xchg
inc
mov
test
xor
test
dec
cmpsb
or
dec
aad
test
imul
mov
or
shll
inc
loope
lods
fists
icebp
add
lods
lcall
push
nop
call
lds
add
xor
cwtl
shll
pop
fildl
adc
adc
insb
icebp
sub
mov
ja
dec
xchg
das
xchg
shrb
loope
xchg
repz
adc
out
rcr
xchg
or
out
xchg
test
adc
and
lods
pusha
lds
je
adc
in
repz
aad
cmp
mov
inc
cld
leave
icebp
pop
adc
out
sub
es
mov
xor
out
add
mov
add
mov
cmp
into
mov
rcr
and
cmp
xchg
iret
cmp
enter
pop
or
add
inc
jo
loope
mov
pop
cmpsl
push
pop
ret
pop
xor
xchg
adc
pop
mov
sub
mov
pop
dec
pop
sbb
fadd
mov
xchg
mov
inc
sbbb
out
push
les
into
orl
cmc
add
jecxz
fmul
add
jecxz
leave
ljmp
and
je
cmp
roll
xchg
loope
nop
test
lea
inc
in
lods
lret
jecxz
mov
mov
imul
stc
xorl
sub
addr16
xchg
cmc
in
sahf
dec
inc
int
dec
ret
icebp
fisttps
sub
inc
mov
in
loope
jb
mul
mov
cmpsl
call
jge
test
jge
sub
mov
stc
adc
or
add
js
push
sarb
xchg
ret
xor
addr16
sbb
mov
or
adc
sbb
adc
mov
and
ret
mov
je
sarl
xchg
and
push
adc
mov
fbstp
mov
nop
loope
leave
mov
cmp
inc
gs
out
jl
mov
lret
out
mov
push
sbb
pop
insb
adc
int3
jnp,pn
cmpsl
test
or
jne
mov
inc
sub
xchg
shll
push
xchg
pop
loope
shr
push
outsl
sbb
icebp
or
icebp
div
roll
add
add
inc
fs
and
inc
stos
inc
lahf
je
cli
inc
push
movsb
in
add
push
jge
dec
and
xor
inc
mov
xor
sbb
in
add
aad
xchg
icebp
sbb
stos
adc
sub
push
xchg
mov
in
add
sbb
loope
mov
daa
fistpll
mov
xor
add
or
cmc
fiadds
insl
adc
jnp
pop
xchg
cmp
xchg
jg
xchg
xchg
xchg
andl
lcall
add
in
sbbl
ljmp
arpl
xorl
and
gs
vmovapd
and
sbb
push
fsubs
aaa
pop
pop
andl
or
inc
push
sbb
imul
cmp
sbb
in
cmp
or
imul
ds
push
subl
cmp
in
std
int
and
addl
rcl
subl
fucomip
mov
add
bound
shlb
xor
adc
jmp
arpl
incl
xchg
mov
stc
das
imul
push
and
xchg
or
xchg
cwtl
xor
test
in
subl
adc
imul
adc
nop
sbbl
xchg
lret
outsl
sub
xchg
jmp
shld
test
pop
fcomps
push
xor
mov
outsl
out
mov
adc
frstor
pop
scas
mov
sarl
sbbb
jle
cmp
push
mulb
stos
jecxz
or
filds
mov
push
orb
xchg
cmpl
dec
imul
mov
inc
rol
sbb
mov
cmp
pop
ret
shlb
shl
inc
xchg
inc
pushf
addl
jbe
mov
jae
cmp
icebp
and
pushf
push
adc
pop
mov
test
into
cmp
stos
andl
pop
scas
insb
mov
jge
mov
loopne
or
jg
jns
inc
adc
mov
or
lret
nop
shll
push
fistpl
push
std
jp
out
adcl
movsb
xchg
and
repz
js
xor
sbb
cmp
orl
mov
xchg
jne
daa
pop
cmp
fiadds
mov
push
gs
mov
cmpsl
cmp
or
xor
sbb
addr16
pop
xchg
add
adc
add
movsb
shlb
pop
rclb
les
jp
xlat
fisttps
xchg
fucomi
imul
lea
xlat
sub
mov
fbstp
sub
xchg
mov
cmp
inc
xchg
cmpb
test
mov
andl
pop
sub
add
xchg
mov
pop
mov
adc
ficomps
sbb
pop
in
xchg
in
sub
movsl
or
pop
orb
sti
bound
outsl
orl
daa
pop
and
sti
sbb
in
and
pop
out
jecxz
orl
xor
shrb
and
xor
push
pop
cmpsl
xchg
xchg
sarl
cmp
rolb
imul
push
fistpl
out
xor
outsb
sbb
inc
xchg
pushf
and
inc
mov
cmp
mov
andl
andb
addl
stos
add
fnsave
adcl
sbb
sbbl
dec
hlt
ljmp
mov
adcl
filds
mov
pop
push
iret
into
jnp
movsb
bound
mov
xchg
cmp
jns
adc
push
mov
call
jnp
ret
xorl
mov
test
call
and
pop
jg
push
pop
cmp
out
sub
into
jo
dec
ficompl
lret
or
adc
orl
mov
inc
sub
cmc
sbb
in
push
jns
ret
or
sub
inc
pop
dec
sub
orl
push
dec
xchg
insl
out
sub
jno
xchg
jge
cmp
jg
repnz
int
pop
xor
icebp
jg
cmpsb
rclb
subb
push
sbb
xor
or
scas
mov
cmovne
xchg
inc
or
in
loope
jle
ja
push
test
mov
xchg
mov
mov
cmp
dec
andl
or
inc
aaa
out
mov
lods
cs
xlat
pop
sbbl
ljmp
inc
adc
xor
mov
mov
int
cli
mov
push
movsb
mov
js
pop
dec
popl
adc
and
hlt
shr
add
adc
roll
gs
sahf
xor
outsl
sub
xor
andl
icebp
aad
sbb
push
jmp
jge
pop
andl
aas
popf
or
roll
enter
test
idivl
adc
add
addl
outsb
sbb
mov
bound
mov
push
push
mov
inc
in
dec
jg
adc
cwtl
imul
insl
push
dec
repz
addl
sub
cmp
xor
cmpl
jne
jns
je
dec
mov
pop
mov
jo
cmpsb
bnd
fwait
sub
add
lods
mov
jp
inc
out
mov
or
test
xor
add
cltd
pop
mov
cs
int
xlat
jno
push
jmp
inc
ljmp
imul
push
and
and
mov
mov
xchg
mov
sbb
fistpll
add
and
icebp
push
scas
pop
fidivrs
cmp
mov
imul
sbbl
jmp
and
xor
clc
xor
push
push
and
icebp
fistpll
cmpsl
lea
js
and
mov
jp
push
cmp
lret
daa
mov
loopne
adc
aad
orb
dec
orl
inc
inc
xchg
aam
jnp
insb
test
xorl
jne
das
mov
jno
xchg
je
mov
xor
loopne
sbb
lret
xorl
ficomps
mov
jg
inc
sub
outsl
js
jmp
sti
and
cmp
mov
movsl
in
sub
or
into
dec
and
dec
sub
mov
mov
ds
lods
jo
xchg
xor
addl
add
orl
fldcw
cmp
adc
adc
lods
xchg
out
sbbl
mov
cmp
and
jb
gs
clc
jb
mov
data16
loope
sbb
mov
in
cmpl
pop
rcl
xchg
mov
not
cmp
shr
pop
in
mov
xorb
cwtl
negl
cwtl
out
pop
aad
mov
stos
sub
jmp
push
jg
in
push
jp
scas
mov
mov
dec
add
xchg
je
mov
and
sbb
es
orl
xchg
jmp
jae
aad
cmp
sub
fistpll
arpl
test
dec
cmpsb
mov
inc
adcl
push
push
jae
adc
mov
mov
mov
mov
clc
int
xor
pop
mov
xor
repnz
popl
mov
lcall
and
insl
inc
cmp
in
bound
andl
cmp
sub
cmpsb
mov
mov
mov
mov
mov
and
inc
andl
lahf
popl
xorl
fisubs
mov
mov
mov
leave
dec
jmp
pop
dec
icebp
push
push
rcr
and
xor
inc
pop
pop
in
aas
jecxz
sahf
sub
jae
imul
push
adc
stos
aad
mov
adc
jmp
vpmacssdql
aad
fs
mov
loope
mov
push
aas
sbb
dec
mov
adc
les
pop
xor
jg
add
adc
cmpsl
divb
test
test
xchg
cmc
inc
aas
shrl
test
sub
push
jle
mov
fwait
xchg
mov
adc
fldcw
jae
mov
inc
pop
xchg
mov
sbb
icebp
pop
movsb
adc
in
fcomp
ja
jo
lcall
mov
inc
jmp
xchg
ljmp
xor
loope
inc
rorl
icebp
and
pop
movsb
and
adc
pop
ret
ja
daa
adc
xchg
les
xchg
add
lods
add
cmp
add
ret
xor
repz
mov
lods
sarl
call
add
adc
add
mov
repz
xchg
mov
fs
jne
push
rcl
popa
mov
dec
sub
add
inc
pop
out
loope
out
sbb
mov
sub
add
cmc
icebp
xchg
movsl
vcvtpd2psx
inc
icebp
sub
push
or
outsl
ret
roll
sarl
adc
repz
mov
add
and
test
in
or
outsl
ret
xor
add
fwait
mov
jmp
and
add
and
cmp
push
test
test
fs
cwtl
adc
test
pushf
mul
data16
cmpl
push
and
or
sarl
in
mov
mov
js
shlb
cli
xchg
and
andl
std
mov
mov
test
in
arpl
pop
les
sub
dec
or
dec
in
or
mov
and
pop
xchg
and
rol
add
es
sbb
sbb
addr16
or
jmp
pop
cmc
cmp
xor
leave
mov
sub
jae
jae
lds
aad
test
inc
leave
xchg
add
mov
push
imul
cmc
add
xchg
mov
cmp
mov
mov
nop
inc
pop
push
xchg
adc
addl
sti
jge
sbb
adc
loope
push
clc
xor
into
sbb
repz
shl
sub
cmpb
pushf
fwait
rorl
inc
and
adc
inc
and
dec
loopne
add
jno
sub
repnz
lods
jle
inc
push
push
test
lret
addl
sub
sub
inc
in
xchg
add
nop
aad
mov
cwtl
icebp
inc
fndisi(8087
pop
mov
add
add
push
add
inc
add
repnz
out
add
sbb
scas
addb
inc
mov
pushf
mov
and
pop
xchg
test
push
sbb
xchg
sub
xchg
mov
cmp
xchg
inc
add
xchg
jae
popf
int
pop
popa
in
xchg
cwtl
popf
xchg
test
add
mov
and
mov
rep
ret
push
sbb
push
loopne
cltd
or
or
sahf
inc
ret
pusha
push
leave
leave
data16
es
data16
movsb
fmul
test
inc
in
fists
data16
inc
leave
sub
aad
sub
in
push
out
xor
in
or
push
push
jmp
inc
xchg
insl
inc
mov
ret
push
push
out
xchg
arpl
in
popa
adc
ret
mov
and
push
inc
aad
add
and
or
xchg
leave
sbb
pop
loope
fnstsw
fs
pop
flds
fs
mov
sbbl
mov
loop
push
add
sti
out
loope
and
xor
addr16
jae
fs
test
add
sub
repz
iret
sahf
pop
mov
lds
clc
mov
je
adc
dec
sub
jecxz
test
loop
xchg
pop
ror
sub
xor
mov
test
mov
add
xchg
movsb
lods
mov
mov
push
aam
xor
rolb
mov
inc
idivl
test
xchg
inc
cmp
mov
lahf
add
push
xchg
sub
lcall
popf
mov
stc
xor
pop
xchg
mov
xor
push
ret
cmpl
sbb
push
in
xor
repnz
xchg
stos
lds
dec
mov
cmp
loop
jp
subl
test
inc
xlat
xor
mov
jg
orb
and
cltd
sub
xor
mov
dec
dec
mov
dec
jno
jbe
mov
fwait
pushl
loope
fbstp
and
push
fiadds
or
lds
into
fldl2t
dec
sbb
scas
test
enter
sub
aam
cltd
xor
fidivrl
mov
mov
ja
and
xor
push
jne
mov
ret
lret
loopne
add
pop
int3
sbbl
mov
je
sbb
xlat
fs
add
xor
shr
push
sub
fadds
jne
pop
and
lret
jnp
and
dec
rolb
aad
push
repnz
pop
loope
cmp
jae
ds
orl
mov
sbbl
add
sbb
or
adc
lret
pop
or
rorb
cltd
push
ds
xchg
add
xchg
inc
mov
popf
mov
jnp
sbb
rcl
mov
call
sbb
cmp
push
gs
faddl
push
push
pop
mov
push
loope
inc
cmp
mov
insb
add
ret
nop
in
call
popf
sbbb
xor
adc
push
push
roll
mov
xchg
push
cmpsb
test
add
inc
ljmp
mov
mov
add
int
xchg
push
mov
leave
and
ds
sbb
lock
fistpll
mul
xor
and
xor
out
xchg
jecxz
sbb
add
fsub
xchg
mov
xor
scas
ss
pop
ja
out
sub
enter
repz
js
rep
test
push
ret
subl
cmp
inc
jg
cmpsl
in
push
sbb
dec
xchg
mov
add
out
out
in
and
movb
cmpsl
pop
push
push
in
add
bound
inc
test
rolb
jecxz
mov
lret
leave
jmp
roll
dec
leave
addr16
and
mov
inc
mul
push
mov
inc
cmp
jo
jp
les
rorl
out
not
int3
arpl
and
pop
add
jmp
int
xchg
ljmp
dec
les
inc
jae
jmp
add
mov
inc
rorl
cmc
mov
rep
test
arpl
cmp
fsubl
out
shll
outsb
mov
je
mov
mov
icebp
adc
xchg
fs
mov
cmp
gs
cmc
adc
xchg
jno
xchg
cmpsl
inc
add
ret
or
push
roll
xor
push
lds
pop
mov
xchg
test
stc
add
es
sbb
decb
sahf
sti
insl
add
xor
add
icebp
leave
push
mov
inc
faddl
add
or
out
adc
add
pop
in
mov
xor
push
rcrb
mov
sub
xchg
pop
dec
aam
shr
and
ret
adc
cmpsl
ror
jbe
xchg
mov
scas
sbb
cmpsl
add
xchg
sbb
subb
cmpsb
cmp
mov
aam
mov
mov
jo
push
push
mov
js
jl
sub
nop
add
sub
pop
out
xor
xchg
xchg
pop
xchg
adc
xchg
repnz
test
mov
mov
fcomip
flds
mov
mov
cwtl
adc
cltd
push
cli
mov
mov
or
fisttpll
mov
clc
and
mov
int
repnz
mov
fs
pop
lcall
fs
and
and
call
in
repz
cmp
rol
out
add
mov
je
mov
test
mov
cmp
mov
repz
rcl
scas
mov
xchg
daa
cli
inc
sbb
loopne
ret
jmp
xchg
jne
xchg
fmulp
mov
mov
mov
pop
or
shll
sti
jecxz
xchg
lds
inc
movsl
frstor
les
sub
cmp
push
out
dec
push
cli
shrb
or
mov
ljmp
add
cmp
rolb
fsubrl
push
loope
cld
cmpsl
cmc
in
pop
sub
ss
mov
jbe
or
xor
call
mov
leave
out
les
jmp
test
adc
xchg
and
cmpsb
insb
inc
bound
inc
imul
inc
add
aad
fstpt
add
ss
movsb
rorl
test
xchg
ret
cmp
mov
int
inc
popa
add
add
cmp
and
adc
xor
and
nop
loope
adc
sbb
xor
lcall
mov
xchg
scas
cmp
mov
add
int
adc
sbbb
mov
dec
pop
negb
das
mov
sar
pop
add
es
or
sbb
cmpsl
inc
mov
cmp
and
ss
pop
and
add
cbtw
es
adc
xchg
rorl
shl
lret
jp
out
ret
mov
mov
sti
pop
ret
das
lock
idiv
out
xchg
or
gs
in
in
repz
add
inc
int
sbb
cmpsl
cltd
pop
or
int3
in
jecxz
add
inc
adc
xchg
mov
xchg
in
loop
mov
loope
ror
add
aas
into
scas
mov
add
xchg
adc
and
cmp
ss
mov
in
cmp
cld
rorl
or
aad
xor
dec
mov
add
in
pop
mov
sbb
sbb
mov
xchg
mov
lds
mov
ds
xor
js
loop
lret
mov
xchg
push
adc
mov
iret
test
jg
cmc
sarl
mov
sub
pop
into
jae
xor
ds
rclb
pop
cmp
out
psubq
mov
leave
cmp
mov
mov
push
pop
mov
xchg
pop
lcall
mov
add
push
mov
movsb
roll
sbb
push
ja
push
jns
mov
lds
push
sbb
jne
popf
int
adc
or
add
pop
arpl
movsl
stos
shll
add
cli
sbb
add
frndint
add
inc
push
dec
in
adc
rcrl
mov
add
test
pushf
push
movsl
pop
sbb
das
lahf
lret
in
adc
xchg
nop
daa
pop
xchg
adc
xchg
inc
icebp
mov
out
add
fcomip
daa
movsb
lret
push
xor
mov
int3
daa
or
mov
mov
or
pop
add
xor
cmp
push
rcrl
decl
add
push
pop
test
icebp
pop
xlat
jne
in
out
jbe
push
jne
ja
mov
outsb
xchg
pop
pop
mov
sbb
jbe
ficoms
mov
mov
pop
es
sub
pop
adc
daa
sub
les
into
inc
dec
dec
test
aas
sti
insl
fdivl
test
xchg
dec
jmp
mov
fcmovbe
sub
add
aas
adc
addr16
pushf
inc
push
mov
dec
inc
icebp
pop
xchg
outsb
mov
dec
test
push
and
imulb
out
xchg
adc
ret
testb
pushf
jecxz
lds
and
cltd
mul
mov
add
test
xchg
data16
mov
sbb
pop
sti
mov
mov
addr16
push
imul
das
lods
cmc
add
call
das
clc
dec
push
test
daa
cmc
test
rcrl
rclb
and
aas
jmp
mov
jp
xchg
test
inc
mov
add
lcall
push
xchg
or
and
sub
out
stc
push
xor
xor
and
adc
popf
sbb
dec
sbb
test
pusha
mov
fs
clc
test
icebp
push
pop
mov
in
mov
mov
ljmp
lahf
arpl
add
aaa
inc
cmp
fs
jge
cwtl
push
imul
pop
adc
push
out
inc
je
jmp
sti
cmp
shrl
sbb
out
shlb
lock
inc
mov
in
xchg
loope
mov
xchg
xchg
sub
addl
add
int3
mov
cmpsl
push
daa
insl
mov
jb
pop
aaa
mov
xor
lcall
call
lret
adc
ret
cs
clc
ljmp
dec
loopne
adc
xchg
aaa
int
cmpsb
xchg
mov
pop
xor
daa
int3
xchg
jbe
in
xchg
push
or
xchg
push
mov
add
leave
or
inc
mov
mov
xchg
push
sbb
sbb
pop
pop
incl
mov
lcall
jnp
shl
or
xchg
push
dec
cmp
cmp
adc
lret
cmp
add
and
loope
mov
xorl
add
sti
outsl
bound
sub
into
loopne
sbbl
sbb
dec
outsb
sbb
or
lret
or
mov
dec
sbb
ret
insl
cmp
mov
movsl
jge
sbbl
xchg
inc
push
pop
int
mov
adcl
adc
mov
clc
push
fwait
sbb
lret
lret
mov
dec
sub
pop
sbb
pop
dec
cmp
jnp
cmp
dec
outsl
daa
jge
out
dec
jl
xor
adcl
sbb
add
mov
and
push
sub
xor
mov
or
mov
and
daa
jle
jb
mov
popa
test
divb
sub
or
leave
mov
sub
mov
adc
and
dec
cmc
cmpb
mov
popl
repnz
sbb
subl
jno
adc
push
sub
push
add
jecxz
icebp
push
xor
sahf
jno
je
cmc
xchg
ss
arpl
stc
sub
push
addr16
sub
sbb
js
decb
lahf
je
mov
ljmp
mov
xchg
inc
cmpl
mov
mov
les
xor
das
add
popf
cmp
cmp
add
in
sbbl
jmp
jnp
loopne
aas
inc
push
mov
icebp
inc
mov
or
mov
insl
fnstenv
adc
xchg
lahf
rcr
dec
addr16
sub
jp
call
dec
lahf
mov
xor
xchg
pop
icebp
add
mov
scas
fwait
cmpsl
xor
ficoml
fbstp
sub
xor
mov
inc
subl
fadd
test
stc
jmp
pushf
mov
mov
orb
jne
stc
mov
add
arpl
lahf
ljmp
into
ss
sub
jo
cltd
mov
roll
js
or
jne
rorl
gs
jne
add
xchg
mov
int3
mov
fistpll
arpl
pushf
cli
cs
xlat
push
add
pop
addl
scas
pop
mov
mov
repnz
addl
pop
inc
mov
xchg
mov
pop
scas
ja
mov
xchg
xchg
jg
mov
scas
jnp
jle
aas
divps
xlat
daa
enter
stc
lock
mov
mov
mov
imul
sti
shll
pop
icebp
in
gs
scas
insb
cmpl
jns
jne
imul
push
xor
xchg
xchg
pop
xchg
fidivrs
mov
movsl
push
sbbl
jno
pop
icebp
std
subl
add
mov
sbb
jne
sbb
push
imul
lock
loopne
adc
or
mov
sub
mov
inc
adc
pop
aaa
push
sub
adcl
push
movsb
push
cmpsb
ficoml
cmpsl
test
stos
std
out
xchg
repz
xchg
ja
std
jg
or
inc
cmp
subl
ror
sbb
orl
dec
je
fmuls
sbb
or
stos
imull
xor
or
pop
lea
mov
scas
ljmp
cld
mov
shrb
xchg
loope,pn
sahf
mov
mov
loope
movsb
xor
push
ja
xorb
jns
jbe
push
rcll
jecxz
sarl
cwtl
lods
cwtl
add
std
jecxz
cmp
pop
mov
inc
shl
mov
push
in
shll
je
repnz
pushf
shrl
pop
mov
aas
or
ret
shl
pop
popa
loope
fs
mov
dec
and
pop
mov
or
shll
xor
push
sbb
call
dec
test
push
stc
movsb
test
in
add
or
sub
jo
xor
pop
inc
das
sbb
pop
xchg
dec
xor
iret
push
jecxz
mov
inc
decb
and
lods
das
and
add
xchg
jecxz
xor
dec
pop
std
jge
lock
sub
mov
mov
movsb
ret
adc
out
xor
je
sarl
in
out
leave
icebp
mov
outsb
pop
dec
cmp
roll
ja
push
cli
jns
dec
outsl
add
jecxz
push
int3
xchg
dec
adc
xchg
inc
adc
xchg
cmp
out
arpl
dec
dec
cmpsl
mov
sbb
push
push
iret
mov
movl
or
or
fsts
adc
movsl
pop
pop
mov
add
daa
hlt
mov
je
and
je
mov
mov
in
push
clc
xor
scas
xchg
cmpsl
inc
xor
mov
insb
out
lahf
mov
popa
popl
or
and
dec
mov
mov
cli
lret
sbb
pop
cmp
movsb
into
cmpsb
movsl
repz
adc
sbb
cltd
dec
adc
popf
adc
xor
movsb
nop
pop
sbb
cmp
sysexit
mov
add
clc
or
mov
cmc
dec
add
pop
dec
pop
ret
cmc
adc
out
push
enter
inc
dec
mov
andb
sbb
adc
mov
mov
adc
fld
sbb
dec
out
data16
pop
jp
std
mov
loopne
imul
jnp
leave
add
xor
inc
rcll
mov
xchg
call
sbb
fstl
test
adc
loope
je
in
inc
add
scas
push
mov
outsl
test
in
out
jmp
lods
xchg
lods
repz
mov
and
lods
out
xor
sbb
mov
or
jnp
es
ret
subl
sub
push
push
fimuls
out
adc
icebp
push
daa
jne
cmp
addl
inc
or
push
push
movsl
mov
push
sub
mov
iret
in
adc
sbb
dec
jl
gs
mov
push
imul
aas
repz
int
adc
mov
or
test
adc
insl
xor
in
inc
jne
jbe
sbb
cmpsl
cmp
mov
push
pop
in
xor
inc
inc
out
inc
lcall
xlat
push
cmp
aam
das
arpl
push
in
and
imul
in
adc
xor
jle
and
cmpl
push
orl
mov
clc
aaa
cli
sbb
filds
hlt
orb
js
xorl
push
pop
lret
and
xor
into
sbbl
in
out
add
mov
dec
or
mov
cmp
pop
pop
lea
cmpl
push
mov
add
nop
sbb
xor
into
add
pushf
cmc
test
aad
sub
movsb
mov
push
pop
and
sti
mov
mov
imul
pop
js
sbb
jbe
or
sub
sbb
push
or
jmp
mov
int
flds
mov
rclb
div
lods
cmp
jns
orl
fmul
lock
xor
mov
mov
scas
nop
aad
sbb
xorb
xchg
jb
mov
subb
loope
pop
sub
sub
or
es
adc
dec
add
and
cmc
mov
pop
and
xchg
push
cmpsb
mov
jae
xor
jmp
negb
xor
aam
sbb
mov
xchg
pop
xlat
cmpl
dec
add
addr16
dec
or
pop
andl
ret
push
add
orl
pop
ss
pop
stos
lock
movsb
mov
cmp
pop
or
ret
sbb
xchg
mov
push
fiadds
push
adcl
imul
int3
sbb
subl
xlat
push
sti
adc
and
ret
jp
aas
out
jecxz
adc
sub
or
jb
adc
cmp
push
mov
xorl
lods
imul
aas
outsl
and
or
cmp
mov
mov
inc
inc
addb
push
xor
mov
xchg
and
scas
sbb
add
xchg
enter
insb
mov
btr
call
shl
inc
mov
insb
push
test
or
sub
mov
mov
imul
push
cmp
xchg
cmp
xor
roll
cmp
mov
cli
and
repz
mov
shll
cmp
jg
enter
ret
out
mov
push
push
mov
mov
cwtl
addb
push
cmp
addl
dec
adc
pop
ficompl
xor
or
dec
popf
cltd
icebp
push
mov
inc
pop
pop
subb
test
xor
and
add
cmp
popl
jb
xchg
and
iret
xchg
stc
add
pop
cld
icebp
xchg
in
xchg
pushf
add
jg
arpl
fnstsw
in
pop
mov
rorl
or
clc
mov
ljmp
and
xorl
jp
jb
xlat
dec
mov
and
and
cmp
mov
jns
aas
outsb
or
or
lock
sub
or
sbb
pop
cmp
pop
xor
sbb
xor
loopne
mov
cmpsl
or
orl
incl
repz
arpl
sbb
dec
imul
and
fistps
sarl
cmp
add
sbb
adc
insb
lock
movsb
jle
incl
or
cld
ret
mov
sbb
jno
mov
xorl
cmp
fcmovu
pop
jmp
cli
mov
ret
pop
subl
imul
ja
sbbl
je
sub
enter
sbb
ficompl
shrl
or
cmpb
mov
addr16
push
mov
sub
and
daa
cmpl
push
pop
cmpl
or
cli
and
mov
pop
jae
pop
inc
mov
mov
mov
scas
mov
jecxz
test
pushf
andl
jo
mov
subl
sub
loop
adc
std
mov
inc
fcmovb
jnp
and
and
repnz
fstpl
adc
loop
icebp
mov
adc
push
pop
popa
mov
int
repz
inc
lods
add
in
mov
or
adcl
xor
mov
les
sti
loopne
bound
mov
mov
push
add
fnstcw
sbb
rsqrtps
fsubr
lods
sub
sub
popa
jae
mov
mov
repnz
ret
inc
pop
pop
mov
and
cs
mov
xchg
nop
ret
cmp
add
or
in
loope
sub
stc
shll
xlat
bound
stos
cmp
xchg
mov
sbb
out
xchg
incb
sub
xchg
pop
push
cwtl
stos
adcl
fdivrl
and
aam
les
sarl
jno
stos
jne
roll
push
icebp
js
xor
shlb
mov
sahf
jl
xor
sbb
movsl
sti
call
push
test
stos
push
ss
rorb
cmpsl
pop
xorl
in
pop
adc
and
pop
mov
mov
jg
clc
xor
pop
addr16
or
dec
movsb
xchg
test
dec
ss
and
addr16
and
mov
pop
cld
or
lds
mov
add
pop
insb
aad
mov
push
mov
mov
int
push
loopne
das
lret
xor
jle
fiaddl
bound
lcall
jp
sbb
pop
dec
lods
or
xor
out
loope
inc
cmp
fwait
orl
jp
push
pop
sub
xchg
lods
jl
jle
lcall
jb
out
inc
add
sbb
push
mov
xchg
xorb
add
ja
xchg
stos
jle
mov
fbstp
mov
xor
in
movsl
pop
and
cwtl
mov
inc
sbb
pusha
add
bsf
stos
xor
mov
jbe
scas
or
cmpb
dec
cmp
les
mov
int
jge
adc
andb
adc
push
sub
add
mov
inc
iret
sub
adcl
mov
pop
icebp
or
js
bound
adc
mov
xor
ja
decb
sbbl
xor
cli
cmpl
arpl
popa
sub
icebp
pop
ljmp
push
push
adcl
cmp
addl
push
push
stos
push
clc
test
jp
mov
push
push
cmc
and
sti
or
mov
xorl
loopne
cli
cmp
sbb
rcrb
repnz
js
xor
orl
in
push
jmp
and
mov
add
mov
dec
lds
orl
pop
xchg
and
xlat
cmp
and
das
je
dec
adc
insl
sbbl
cmp
sbb
scas
mov
das
pop
inc
andl
shr
subl
inc
pop
add
js
pop
sub
fmull
movsl
and
xor
add
icebp
aad
xor
mov
xchg
or
dec
xor
cmp
call
sbbl
xchg
fs
popf
rcrl
dec
sbb
add
addl
sub
addl
push
cmpl
sbb
adc
fxtract
clc
subl
stos
mov
scas
repz
mov
sbb
push
lds
jns
mov
mov
mov
outsl
lea
arpl
jge
sbb
stc
push
pop
leave
mov
pusha
sub
push
dec
ret
call
or
xor
scas
cmp
mov
mov
orl
popl
and
xorl
inc
and
addr16
sub
jl
loop
xor
clc
mov
adc
rcrl
pop
addl
scas
out
dec
lret
into
andl
and
adcl
adcl
fcompl
push
mov
cmpsl
push
roll
fstpt
rclb
ret
or
and
inc
sbb
pushf
adc
icebp
sbb
mov
adc
jb
cwtl
xchg
fistpll
mov
std
jmp
adcl
mov
sarb
inc
mov
pop
push
outsl
into
loope
repz
pushf
mov
scas
ss
push
add
mov
sbb
add
xlat
movsl
add
adcl
shl
in
sbb
and
movsb
mov
xchg
mov
jno
dec
add
ret
mov
subb
sbbl
mov
push
sbbl
roll
sahf
imul
outsb
mov
ret
mov
in
adc
and
lods
cld
fldt
dec
insl
sub
loope
fmull
push
sbbl
addr16
cmp
mov
int
rorl
outsl
lret
adcl
icebp
jne
add
mov
rolb
xchg
jp
cmpl
cmc
movsl
jle
jns
das
adc
mov
jne
mov
test
or
jmp
mov
or
xchg
mov
fidivrl
mov
je
lods
mov
and
push
fdivrp
mov
xchg
sahf
xor
pushf
iret
sbb
pop
inc
in
hlt
addl
mov
loope
and
fidivl
jno
dec
cmp
popa
sub
mov
fldcw
adc
out
movl
jg
icebp
std
dec
add
test
pop
or
mov
ja
inc
pop
mov
dec
das
fucomip
jp
xor
inc
loop
sub
dec
cmpsl
inc
cmp
mov
adc
fcompl
ja
test
adc
fidivl
mov
xor
push
mov
mov
jg
andl
cmpl
push
repnz
ja
orl
andl
iret
pusha
xor
xchg
push
jg,pt
int
mov
push
ficoml
sub
andb
ja
mov
mov
ret
push
sbb
sub
icebp
jmp
or
mov
sbb
std
subb
movsl
xor
into
mov
jl
shl
ficoms
sbb
and
sti
inc
minps
sahf
jne
call
enter
cmpl
sahf
adcl
jo
push
daa
jl
cmpl
adc
inc
and
loopne
mov
and
bound
cmp
inc
pop
repz
jmp
xor
cltd
outsb
dec
sub
xchg
jge
add
add
insl
adc
inc
adc
loope
adc
in
data16
clc
add
mov
dec
out
test
mov
pop
popf
fiaddl
fsubrl
xor
xchg
orl
inc
dec
lea
cmp
pop
bound
jl
xorl
sub
jmp
and
shl
js
inc
pop
dec
or
outsl
xchg
mov
mov
xor
jle
inc
or
mov
jnp
orb
push
pop
sbb
mov
add
je
jae
pushf
push
inc
push
sub
mov
movsl
sete
movsb
push
mov
lods
icebp
xchg
cmp
lea
int
xor
mov
xor
sbbl
je
pop
aas
jo
push
mov
lods
pop
dec
and
or
and
pop
mov
jb
hlt
mov
inc
adcl
mov
aas
sbb
das
xchg
and
or
mov
add
aaa
subl
jb
and
dec
inc
test
in
mov
mov
and
jmp
mov
leave
lret
inc
jge
cmp
lock
rorb
ss
les
xchg
pop
mov
adc
data16
cld
jo
add
mov
adc
push
dec
jg
add
push
mov
lock
cmp
push
mov
mov
imul
ficoms
push
out
out
cld
inc
inc
cmpl
or
arpl
pop
shlb
push
mov
or
mov
roll
jae
adc
cmpl
js
and
movsb
push
dec
orb
jns
out
mulb
sahf
mov
dec
ja
xchg
sub
sbb
inc
jno
adcl
mov
shlb
sbb
pushf
mov
inc
es
mov
orl
sbb
push
add
xor
pop
notl
sarl
sub
mov
add
jmp
in
pop
rol
pop
ds
fs
js
bound
sbb
int
mov
sub
jl
popa
jg
and
adcl
clc
cmp
mov
adc
arpl
movsl
sub
loopne
sbb
mov
inc
sbb
lcall
or
mov
mov
push
repnz
or
and
into
sub
nop
aaa
daa
sub
cmp
sbb
test
mov
dec
mov
repnz
stc
addl
cmp
mov
cmp
push
into
in
pop
aaa
icebp
jmp
push
andb
iret
xchg
adc
fcoms
pop
xchg
inc
ffreep
jg
inc
nop
sbbl
add
popl
xchg
xchg
andl
sti
push
fildl
mov
shll
lret
sub
pop
das
adc
xorb
xor
cmp
in
adc
subl
jecxz
or
pop
rclb
push
sbb
lock
jb
adc
ss
pop
and
cmp
jno
bound
out
inc
andb
cmp
push
icebp
ret
mov
movsb
mov
scas
mov
cmp
jne
lods
pop
iret
pushf
int
sub
loope
mov
xchg
inc
dec
ret
mov
imul
pop
push
orl
cmp
loopne
push
js
ds
mov
jp
xor
jmp
mov
orl
clc
pop
orl
inc
mov
int
add
xchg
xorl
clc
inc
idivl
cmc
xchg
ja
pop
outsl
xchg
fisttpl
pop
xchg
cli
sub
fldl
lds
in
mov
cmp
mov
cmc
xchg
dec
sahf
into
mov
push
inc
mov
mov
jns
sub
mov
cwtl
sbbl
cmp
lock
xchg
stos
loop
scas
fadds
xchg
fistpll
stc
aas
mov
sbb
inc
and
sbbl
inc
cmpl
mov
repnz
lret
lcall
cmp
pop
add
mov
cs
stos
pop
add
jecxz
xchg
push
xchg
fnsave
adc
or
mov
mov
or
repz
test
out
movsl
cmc
mov
push
sub
lods
in
mov
repz
cmp
out
sub
xchg
jo
fs
and
bound
jmp
xor
sub
mov
js
mulb
leave
call
push
lds
ret
es
or
call
nop
and
js
mov
subb
ret
popa
les
sub
jbe
jle
insl
mov
ret
push
inc
xlat
in
jne
lock
hlt
int
xor
mov
xchg
mov
fmul
je
mov
mov
inc
lods
imul
xchg
je
mov
insb
push
int
inc
shrl
xor
mov
adcl
cmp
fiadds
fcmovnb
dec
sbb
push
xchg
mov
movsb
shll
dec
mov
insb
sbb
sub
dec
lock
xchg
loopne
addr16
mov
fwait
and
insl
adc
and
add
lods
in
pop
and
pop
mov
aaa
cwtl
push
xchg
adc
data16
test
int
or
rcll
cmpsb
dec
sub
inc
ret
pusha
incl
add
ret
test
adc
xchg
jmp
pop
sahf
or
and
sbb
ds
aam
xor
ja
in
outsb
xor
jb
add
mov
fidivl
inc
and
hlt
leave
fs
and
and
xorb
push
push
add
add
std
daa
inc
repz
inc
outsb
xor
jo
mov
fwait
add
test
push
xor
mov
cmpl
lret
mov
lds
in
movsl
cs
loope
mov
stos
cwtl
push
jmp
xchg
shll
in
jb
mov
clc
test
ficoml
lds
out
add
inc
inc
jbe
rolb
sbbl
sbb
pusha
lds
push
aas
repz
loop
push
pop
es
xor
xchg
xchg
fsts
mov
rcll
adc
xor
in
icebp
outsb
dec
mov
call
pop
xchg
test
jmp
mov
inc
jbe
repz
scas
push
sub
jno
dec
cltd
add
ja
jo
xchg
inc
je
mov
lods
std
rorl
jmp
filds
out
ret
mov
xor
xor
hlt
loope
mov
sbb
in
xor
test
add
mulb
adc
shl
inc
addb
pop
fsubr
and
sbb
les
xor
test
je
loop
mov
pop
xlat
add
add
insl
pusha
fwait
jecxz
repz
cmp
inc
int
ljmp
xorb
push
mov
mov
je
movsb
fisubrl
lahf
and
pop
inc
add
cmp
mov
push
jne
mov
ja
imul
ljmp
or
mov
dec
mov
push
popa
aaa
pop
andb
inc
andb
iret
popf
ss
add
gs
ss
push
fs
aam
mov
inc
mov
xorl
cmp
cltd
icebp
ror
xchg
jmp
mov
cmpsb
mov
ja
xchg
cmp
jle
out
sub
sub
mov
sub
pop
and
xor
push
add
cmp
pop
nop
cmpsb
xchg
adc
mov
mov
mov
in
add
cmp
xor
mov
mov
cmp
adc
shll
je
xchg
icebp
int
test
and
add
mov
mov
sub
loopne
and
insb
and
sub
inc
repz
xor
and
repz
add
test
adc
leave
icebp
out
les
sarl
fs
pop
mov
popa
aad
mov
mov
pop
in
mov
xchg
or
rol
sbb
cwtl
xor
inc
inc
rcll
aas
xchg
iret
push
add
pop
ja
mov
add
frstor
call
roll
inc
cwtl
fnstenv
xor
cmp
add
test
sarl
mov
cwtl
and
add
push
or
dec
adc
pop
inc
pusha
jae
popa
jmp
or
dec
push
loop
cmpsb
cmc
mov
mov
adc
push
cmp
push
jle
icebp
pusha
inc
cmpsb
clc
aas
movsl
roll
call
dec
in
or
jp
shlb
test
or
jg
cmpsl
jb
push
das
rolb
inc
iret
inc
int
dec
in
cli
mov
frstor
stos
mov
xchg
sub
sti
jbe
sub
push
dec
test
int
movsb
or
ret
adc
mov
jno
std
mov
and
repnz
fmulp
mov
lea
jecxz
call
je
cmc
notl
ss
icebp
into
mov
or
addl
add
or
lcall
ljmp
pop
aas
test
sub
mov
movsl
sbb
mov
sti
jmp
rcrl
js
mov
loope
jmp
loopne
loope
fs
test
dec
pop
icebp
push
loopne
int
adc
lock
adc
sbb
inc
out
add
push
andw
movsb
pusha
jge
shl
mov
outsb
arpl
fadds
inc
xor
loopne
fcomps
fcmovbe
testb
sub
repz
cmp
rcl
loope
cwtl
sub
or
dec
mov
xchg
inc
shr
movsb
xchg
cmp
sahf
daa
test
inc
daa
cmpsl
xor
cmp
add
xor
or
dec
dec
inc
cmp
fnstsw
mov
ret
sbb
and
mov
cwtl
cmp
sub
out
jae
loope
inc
rorl
mov
movl
pop
lods
outsl
push
fimull
push
cmp
pushf
push
test
mov
push
je
mov
les
sbb
xchg
out
mov
xchg
xchg
hlt
and
sub
push
or
add
mov
gs
mov
popf
fs
in
cmp
inc
mov
or
xor
adc
gs
mul
roll
cmp
push
dec
hlt
in
gs
out
lret
mov
push
frstor
xchg
add
or
mov
sti
movsl
add
hlt
push
push
clc
jb
stos
orl
clc
fdiv
cmp
incl
jp
mov
sub
aam
sbbl
insb
cmpl
stos
pop
call
or
ja
lcall
les
jnp
sub
icebp
lret
mov
or
mov
mov
cmp
ljmp
sbbl
or
popa
scas
sbb
mov
sti
rolb
bound
sahf
adcl
push
pop
sysenter
mov
pop
xchg
and
xor
pop
pop
xchg
lahf
sub
test
or
orl
outsl
popf
out
mov
aaa
arpl
sbbl
jmp
and
add
xchg
inc
lret
and
fidivs
popf
mov
es
fistps
in
sbb
daa
andb
jle
push
jmp
dec
or
mov
and
mov
adc
or
shll
inc
dec
mov
dec
ss
lods
movsb
andb
sbb
and
mov
inc
adcl
push
scas
jle
fwait
push
cmp
lcall
add
and
aad
jle
inc
xorb
inc
lret
sbb
hlt
pop
aaa
std
mov
add
clc
orl
inc
addr16
push
loop
subl
jno
orl
mov
cmpsb
nop
adc
push
mov
inc
mov
cmp
mov
lds
mov
dec
add
add
lahf
push
lret
rcrl
dec
xchg
mov
lahf
fsub
pop
in
mov
xor
push
sub
ja
cmp
and
lock
adc
lsl
mov
cmc
arpl
add
inc
push
loope
lock
outsb
std
jo
mov
lock
ficoms
loop
xchg
scas
xor
out
fs
add
cltd
aas
fs
adc
mov
movsb
dec
movsb
pop
test
add
inc
iret
flds
pop
inc
cs
mov
push
mov
xor
inc
xchg
addb
mov
pusha
lods
insl
inc
adc
or
or
add
xlat
push
int3
cmp
test
popa
mov
jg
dec
mov
je
adc
jl
pop
mov
adc
es
mov
cmp
in
insb
call
mov
jmp
adc
add
add
and
jecxz
movsb
xor
ja
sti
or
fwait
xchg
pop
mov
je
aad
shr
jecxz
mov
repz
jecxz
pop
fstps
dec
pushf
mov
sbb
push
sbb
movsb
sbb
aaa
lods
dec
adc
add
xchg
jns
xchg
adc
fsubrs
ret
jbe
add
shl
scas
push
dec
gs
hlt
pusha
xor
adc
jno
test
mov
repnz
push
hlt
sti
cmp
popa
ljmp
inc
adc
mov
sub
push
push
hlt
cmp
cltd
mov
push
xor
out
in
xchg
xchg
cmpsb
push
mov
aam
in
int3
xchg
data16
test
negl
ror
jns
idivb
stc
lret
gs
sbb
cmc
loope
mov
jp
popa
scas
jns
xchg
test
scas
jns
mov
inc
jecxz
clc
ror
mov
jno
mov
xor
mov
cwtl
mov
cmpsl
push
jb
mov
xchg
sub
addr16
add
loope
cmp
int
jbe
xchg
ljmp
dec
xlat
pop
xchg
out
into
in
mov
repz
mov
test
icebp
test
push
or
ja
shrl
testb
lock
or
mov
sahf
shll
push
or
xchg
in
int3
push
out
andl
loop
jne
js
or
sbb
notb
stos
adc
jno
bound
sub
fwait
pop
cmpsl
repz
ret
lcall
mov
xchg
and
mov
jl
call
notl
icebp
mov
dec
nop
sbb
subl
rclb
jno
or
gs
lret
subl
xchg
orb
inc
mov
push
popf
adc
bound
inc
movsl
push
sbbl
inc
das
add
inc
movsb
mov
dec
push
stos
test
subl
push
push
shll
xchg
inc
in
cmpsb
jno
xchg
adc
subb
xor
xor
ds
lds
xor
pop
sbb
mov
mov
mov
pushf
andl
add
cmp
add
push
lods
pop
push
or
sbbl
mov
sahf
das
push
push
scas
fwait
sbb
inc
mov
xchg
cltd
adc
mov
int
xlat
xchg
inc
adc
testl
cmpl
xor
mov
repz
shrl
inc
adc
dec
call
fsubs
popl
out
add
jns
jno
ljmp
popa
movsl
push
mov
adc
push
add
pop
mov
add
jmp
int3
sub
xor
dec
sbb
xor
mov
mov
subl
xchg
and
or
repnz
sbb
leave
das
add
push
pushf
inc
cmp
mov
or
jge
or
lea
ret
popa
add
call
shlb
js
adc
sbb
dec
cmp
mov
loope
pusha
dec
addb
ds
lea
imul
sbb
cmp
adc
push
insl
and
xchg
hlt
imull
xchg
shlb
jns
or
enter
out
sbb
rcrl
push
stc
out
pop
or
xorl
ret
lock
pop
clc
mov
out
sbb
iret
ror
jmp
mov
sub
sub
jbe
mov
xorl
fisttpll
cmp
cmpsl
fildl
sbb
lahf
adc
mov
dec
inc
mov
add
xor
push
ja
lahf
adcl
bound
jl
cli
fs
sarl
jae
lahf
subl
push
mov
mov
mov
mov
inc
lds
jae
lock
icebp
mov
in
inc
sub
mov
pop
mov
insl
sbbl
stos
jns
subl
mov
scas
scas
fldcw
or
push
mov
lds
cmp
inc
adc
xchg
fldenv
mov
call
add
sarl
leave
pop
jb
or
test
and
insl
or
rol
inc
jno
fisttps
pop
sbb
sub
insl
pop
scas
sbb
jne
mov
clc
jecxz
and
sub
sbb
out
pusha
lcall
mov
sub
xchg
cmp
xchg
subl
mov
andl
ja
int
fisubs
adcl
ret
push
adc
fldl
pop
hlt
in
and
fisttpl
xchg
add
mov
fmulp
cmp
jae
fwait
or
or
mov
cmp
inc
aam
xor
push
insl
aad
pop
fwait
push
mov
inc
daa
std
pop
dec
adc
rcl
mov
and
rclb
fcom
cltd
mov
cmpsb
movsl
adcl
dec
sbb
rolb
std
scas
add
subl
mov
bound
sbbl
push
sub
cmpl
leave
icebp
gs
mov
add
ret
in
arpl
imul
lret
scas
mov
adc
inc
sub
xchg
adc
dec
ds
mov
mov
pop
xor
popa
rolb
cs
jecxz
add
mov
pop
sti
into
cmpl
and
andl
lods
scas
movsb
addl
aam
push
sahf
orb
cmp
scas
cmpl
adc
ds
mov
int3
cld
dec
jnp
ret
sub
insb
out
push
aaa
dec
sub
movsb
rorl
mov
dec
mov
orl
pop
pop
sbbl
pop
cmpl
xor
js
lret
sub
insb
dec
jge
fidivrs
mov
pop
push
jge
pop
jbe
xchg
push
jmp
sti
sahf
jge
decb
mov
outsl
jb
sub
xor
das
test
out
fwait
jmp
cmpb
ja
or
dec
dec
pop
shll
jge
jae
xchg
pop
cmp
imul
dec
mov
out
stos
ja
loope
addl
insb
cmpl
jo
adcb
in
jno
mov
cmpsb
fistpl
mov
insl
jns
sub
jg
dec
push
push
xchg
fiaddl
loop
sub
int3
shll
addl
sub
and
aad
int
js
std
clc
pop
jne
adc
inc
adc
xchg
and
divl
arpl
mov
adc
mov
icebp
add
jle
and
mov
pop
and
mov
inc
mov
pop
enter
mov
push
push
xchg
xorl
aad
lock
sarb
inc
xor
mov
mov
repz
dec
sub
es
out
add
imul
sbb
push
movsl
repz
xor
sub
call
xlat
fiadds
sarb
subl
cmpsb
pop
dec
adc
mov
loopne
pop
cmc
fsubrs
and
push
sub
test
mov
cmp
neg
dec
jb
ret
addl
sbb
enter
and
jmp
dec
xor
push
movsb
repnz
cmp
and
and
adc
mov
sub
or
inc
loope
xorb
pop
mov
jbe
pop
sahf
add
mov
mov
dec
cmp
jp
mull
mov
mov
ret
subl
adc
mov
dec
addl
mov
mov
sbbl
xlat
jno
arpl
repz
je
lock
push
mov
rcll
push
loopne
dec
gs
std
sub
mov
cld
ja
fwait
cmp
nop
inc
mov
or
adc
sub
jmp
sbb
add
mov
std
xchg
test
adc
loope
push
ficoml
test
imul
inc
jg
xchg
fs
add
pushl
pop
mov
jb
dec
adc
and
repz
lods
into
test
bound
stc
lods
test
bound
nop
jne
popf
rcr
dec
sub
xlat
xchg
lret
jle
repz
rep
adc
xor
das
fs
mov
add
add
ljmp
sbb
add
cmp
pusha
jns
subl
pop
rcl
jbe
orl
mov
pop
addr16
inc
mov
movsb
xchg
adc
push
xlat
movsl
mov
repz
mov
cmp
bound
dec
mov
popf
or
repz
push
push
in
adc
cltd
cmpb
adc
jae
into
fwait
repz
jmp
and
jns
loop
outsl
ss
out
rcrb
movq
push
fsts
repz
cs
rcrl
xor
repz
ret
cmp
mov
jmp
and
repz
jb
test
mov
js
in
inc
es
add
push
icebp
mov
and
mov
jbe
pop
sti
hlt
or
test
mov
into
inc
mov
mov
inc
shlb
je
push
xchg
push
add
dec
push
xchg
jbe
movsb
rcrl
jge
popf
pop
loopne
mov
pop
and
xchg
xchg
xchg
lahf
insb
push
add
xlat
outsb
push
jbe
pop
insb
lock
jbe
inc
cmp
std
jmp
push
cmc
test
xchg
fldl
cltd
lods
test
leave
jb
lret
cmp
jbe
cmp
push
cltd
xchg
jbe
jmp
pop
jmp
pop
push
test
jbe
dec
dec
add
sti
or
rorl
enter
xor
xor
mov
xchg
in
inc
dec
sarl
xchg
inc
loop
inc
or
xor
jnp
es
stos
je
aam
or
dec
lds
inc
insl
mov
ljmp
mov
ja
dec
xchg
add
add
call
fwait
xchg
aam
adc
sub
cmpsb
adc
xchg
mov
push
jae
mov
test
outsb
jecxz
dec
xchg
inc
jl
les
push
test
repnz
or
dec
inc
pop
jmp
roll
xor
ret
sbb
and
push
repz
inc
add
sarl
jmp
jns
sub
ret
add
popa
xor
xor
add
icebp
sarb
mov
jge
fidivs
test
xor
insb
add
js
mov
ret
in
mov
das
insb
add
and
nop
inc
lods
jae
mov
cmp
dec
inc
jns
xchg
rol
mov
add
cmp
fiaddl
mov
mov
and
pop
sbbl
dec
jge
pop
dec
rorb
inc
cmp
xchg
sbb
push
cmpl
arpl
xor
fsts
jno
fidivrs
adc
xor
sub
xchg
sbbl
iret
in
je
mov
jae
add
mov
xor
jmp
aaa
sub
adc
je
stos
mov
add
inc
sbb
xorl
jbe
aam
inc
subb
xor
inc
or
jg
inc
mov
std
cmpl
lock
xchg
insb
lcall
repnz
es
arpl
orl
imull
xor
mov
jae
into
subb
stc
lea
or
sub
sbb
push
sbb
inc
push
int3
push
ja
inc
jg
pop
and
into
out
or
test
lds
stos
cmc
and
jg
ficompl
lea
add
lods
pusha
das
test
inc
and
push
adc
out
sbb
in
bound
orl
fdivs
out
pop
cmpsb
sub
gs
clc
mov
bound
lods
sbb
sbb
push
adc
jns
sub
push
sbb
sti
imul
sub
dec
hlt
roll
xor
push
cs
scas
dec
mov
shlb
cmp
add
xchg
and
xor
aad
stos
inc
sbbl
fisttpl
dec
sbb
fwait
lret
fadds
andl
gs
jnp
bswap
shlb
mov
lods
dec
inc
sbbl
in
inc
repnz
jne
orb
xor
adcl
les
test
or
mov
je
sub
mov
dec
adc
sbb
cmpsb
dec
out
fld
or
cmp
adc
mov
sti
test
pop
mov
pop
mov
sbbb
cmpl
jle
addl
jae
jge
inc
cmpsl
sub
cmp
xchg
adcl
dec
push
sbb
mov
mov
jp
jmp
sbb
adc
stc
int
jne
jnp
rorl
lret
addl
in
inc
or
xlat
cmp
adc
int
push
xchg
mov
test
bound
xor
rcrl
ja
ficoml
iret
add
ret
mov
jno
outsl
into
mov
in
roll
xor
or
lods
jge
addl
sti
xor
and
addl
fstps
popf
ja
inc
jl
addl
jae
orl
add
jg
mov
subl
int
subl
stos
lahf
and
in
ret
cmpsl
lfs
mov
fwait
dec
xor
sub
scas
dec
cli
xchg
mov
mov
subl
into
nop
push
push
xorl
pop
push
es
and
inc
dec
sub
int3
push
xor
in
jne
xchg
out
jb
test
rcrl
inc
cli
rorl
adc
aad
sub
mov
or
and
pop
andl
out
loop
repnz
mov
and
pop
xorb
cmpl
out
xchg
pop
pop
mov
je
into
packssdw
ret
mov
fisttpll
inc
pushf
xchg
loope
or
repnz
jg
fsubp
addl
fbstp
jbe
xchg
xchg
dec
addb
pop
in
lods
int3
inc
sbb
and
lret
mov
in
push
daa
jns
jp
cmp
adc
jecxz
arpl
fildll
push
fdivrl
inc
addl
mov
faddl
jmp
push
repz
enter
sub
push
push
pusha
sbbl
mov
popf
mov
xchg
ret
cmp
xchg
inc
cmp
in
sbb
js
jg
and
cli
fiaddl
cmp
mov
outsl
and
xchg
mov
mov
lahf
jg
cmpsb
scas
sahf
xchg
sbb
jmp
std
in
add
cmc
or
dec
daa
lock
call
inc
aaa
stc
addr16
lcall
test
mov
mov
push
je
mov
inc
test
mov
fbstp
ja
inc
hlt
scas
fldl
outsb
adc
or
iret
aam
xor
js
cmp
or
pushf
adcl
mov
xorl
mov
imul
andl
cmp
push
movsb
arpl
sub
rcrl
sti
push
jne
jp
call
sbbb
dec
sahf
in
icebp
stc
xchg
rclb
call
and
inc
mov
push
mov
rol
adc
rclb
inc
and
sub
push
jno
add
fsub
jae
xchg
xchg
cltd
repnz
loop
int
xor
adc
jne
pop
enter
sbb
push
arpl
cltd
fsubrp
sub
mov
cltd
or
movsl
or
add
xor
icebp
mov
pop
aad
adc
cmp
add
dec
jmp
or
pop
sahf
mov
mov
loopne
push
pusha
lods
jmp
rcrb
andb
mov
lret
jns
and
xchg
or
cmp
aad
sub
shrl
adc
enter
std
and
int
xor
mov
leave
lret
xchg
imul
pushf
xorb
or
jae
test
aaa
pop
loope
push
sub
das
push
or
push
subl
aaa
in
xchg
mov
mov
sbb
mov
xchg
add
sbbb
int
icebp
cmp
lock
sahf
add
icebp
and
bound
test
cmp
push
xchg
repz
icebp
inc
sub
add
pop
or
fiadds
cmpsb
pop
mov
into
sahf
repz
jae
sub
xlat
out
inc
and
out
fsts
mov
and
mov
scas
lgs
mov
dec
lea
jge
push
int
lods
std
fstl
mov
xor
pushf
out
pop
lock
sarl
into
jge
add
and
mov
fstps
push
or
cmpsl
jne
xchg
inc
mov
int
jbe
jb
jns
cltd
pop
loopne
mov
sbb
add
cwtl
xor
adc
lods
aas
loope
add
les
xor
pop
out
icebp
xchg
int
pop
dec
daa
rcrb
pop
mov
xchg
dec
mov
and
mov
mov
and
aaa
int3
jge
jmp
aam
inc
add
lods
rcl
test
jae
xor
insl
insb
cmpsl
jbe
mov
mov
mov
shl
aam
call
or
pop
popa
push
pushf
pop
ffree
fs
push
popa
jbe
cmp
test
fwait
in
mov
mov
or
std
pop
loop
mov
xchg
pop
popa
scas
cwtl
sbb
sub
mov
loope
xchg
cmp
imull
lcall
scas
jecxz
fmull
mov
push
xchg
addr16
pop
jecxz
out
cmc
adc
scas
out
pop
jno
ljmp
sbb
movl
mov
adc
adc
ret
test
lods
clc
into
sbb
fnstenv
fwait
add
rol
push
movsb
mov
push
push
stos
mov
leave
jno
jecxz
int3
adc
enter
push
in
rcll
push
sbb
push
aaa
mov
ret
insb
les
cltd
subb
lahf
push
mov
sets
or
mov
xchg
xor
out
sqrtps
mov
mov
inc
in
xor
arpl
js
jl
jecxz
mov
je
push
dec
adc
rorb
jge
pusha
lahf
rcll
das
jge
in
pop
jns
dec
push
fs
add
hlt
shll
js
xchg
test
bound
ret
add
cmc
xchg
repz
orb
test
push
pop
es
sbb
aam
mov
sbb
cmpxchg
sub
cs
outsl
sarb
pop
int
pop
popa
in
arpl
movsb
jecxz
ret
inc
push
or
lds
and
pushf
mov
leave
add
imul
mov
sub
jecxz
mov
pushf
mov
xchg
jbe
mov
sub
sar
aad
inc
mov
mov
dec
sbb
xor
lds
lods
or
outsl
ret
mov
inc
ret
leave
icebp
out
aad
xchg
je
add
sbb
ret
add
inc
xchg
adc
mov
lret
add
mov
std
in
in
push
add
mov
sbb
cmp
or
loopne
fucomip
add
fbld
arpl
icebp
repz
adc
mov
repz
scas
fistpl
cmpsb
repz
push
push
les
xor
sbb
xor
rorb
lock
and
mov
xchg
rcll
shl
pop
adc
inc
dec
sub
enter
inc
icebp
push
aam
insb
cli
xchg
cwtl
push
arpl
push
test
cmp
add
pop
xorb
lock
leave
xchg
dec
addr16
lcall
movsl
iret
dec
mov
test
or
insb
test
js
insl
test
xchg
mov
xor
ret
int3
mov
mov
popa
icebp
mov
xchg
adc
or
outsl
shr
pop
popl
rcr
and
mov
rcll
dec
ds
jne
jg
insl
loopne
ds
and
xchg
sarl
in
test
xor
add
sahf
fistps
and
lods
cmpsl
jno
adc
and
aad
sub
push
aas
rcll
es
and
jno
enter
pop
lods
add
es
loope
test
mov
or
pop
mov
daa
dec
adc
dec
nop
lcall
mov
push
cmp
or
mov
add
push
movsb
jecxz
xchg
xorb
shll
jge
dec
and
aaa
mov
ficomps
dec
rep
hlt
dec
es
movsb
cmp
pop
pop
mov
icebp
mov
adc
rorl
pop
test
jecxz
xor
ljmp
cmc
mov
add
into
pop
popa
pop
lcall
mov
cmp
fwait
pushf
call
add
cmc
push
push
push
fldl
pushfw
mov
add
mov
adc
and
fs
cmc
pop
test
mov
dec
inc
pop
mov
add
lcall
mov
xlat
mov
ret
push
inc
xchg
xchg
fsts
fs
sub
add
clc
aas
sbb
ret
js
imul
ja
mov
and
sub
jns
jmp
cmp
sub
aaa
dec
rep
test
and
sbb
cwtl
addb
pushf
pop
test
cmp
xlat
pop
mov
mov
mov
fcmovnbe
xchg
test
jmp
and
int
fsubs
inc
dec
pop
clc
inc
and
ret
or
sub
mov
mov
test
mov
jge
or
pop
cmp
leave
xchg
mov
popa
fistps
push
cmp
pushf
cmp
cmp
sub
and
pop
repz
cmc
inc
jbe
repz
aam
add
sub
and
rcll
dec
pop
popf
les
cmp
jbe
mov
mov
ljmp
sbb
sub
daa
in
shll
aad
add
dec
in
insb
aaa
mul
aaa
push
mov
shlb
pop
push
pop
mov
int3
std
xchg
dec
mov
lcall
pop
jmp
ret
rcll
test
inc
sarl
push
pop
and
lds
movl
out
xor
xor
les
pop
jmp
cmp
xchg
inc
and
sub
jae
jns
lret
int3
pop
cmc
inc
jmp
test
add
cmc
or
sub
push
lret
test
add
lcall
push
xchg
pop
lds
shll
xchg
cmp
xchg
es
mov
repz
shrb
add
in
inc
adc
cmpsl
in
daa
or
push
int3
aaa
pop
ret
sub
ret
leave
xchg
rclb
shll
mov
imul
enter
sbb
les
scas
out
aad
jns
mov
sar
sbb
pop
jmp
repz
insl
jp
lcall
out
mov
sub
dec
xchg
mov
adc
jae
sarl
dec
in
aam
insb
int
pop
popa
in
popa
aam
repz
movsl
int
xor
push
sahf
mov
test
add
inc
mov
insl
fisttps
jbe
repz
fsubrl
repz
lods
ret
ret
or
shl
in
sbb
add
shlb
ds
jb
mov
fs
sbb
test
xchg
adc
adc
push
cmc
data16
out
mov
xor
jecxz
and
pusha
cmp
or
or
add
inc
repz
mov
sbb
mov
push
pusha
sahf
mov
dec
push
aaa
mov
jle
sub
les
push
ja
xor
sarb
sub
ja
aaa
lcall
mov
dec
shlb
pop
xchg
leave
loopne
mov
xchg
adc
cmpsl
mov
scas
dec
mov
pop
mov
test
inc
popa
aaa
ret
mov
pop
shlb
mov
es
mov
sub
daa
rcl
mov
leave
sbb
add
add
rol
xor
push
inc
dec
jg
xchg
repz
cmp
popa
scas
mov
xchg
mov
icebp
out
adc
and
cmpsl
test
ficoms
jnp
mov
and
mov
fistpll
add
mov
aas
add
mov
mov
cmc
push
add
xor
gs
adc
inc
leave
xchg
dec
add
adc
imul
addr16
add
movsb
add
adc
xor
pop
dec
and
adc
fsts
jnp
sub
mov
mov
fs
mov
test
mov
pop
xchg
jae
jbe
enter
out
subl
rclb
js
mov
mov
pop
lcall
in
fmulp
lahf
icebp
scas
adc
out
hlt
xchg
or
adc
pop
rol
xchg
add
pop
mov
xor
push
ja
mov
repz
adc
sti
add
cwtl
aam
inc
out
leave
lcall
scas
je
sbbl
sub
mov
xchg
xchg
jo
mov
push
and
test
pop
xchg
add
or
sbbl
call
icebp
pop
fsts
add
lret
push
jns
testl
sub
jecxz
and
jmp
pop
or
pop
aam
shlb
lods
icebp
lea
stos
call
call
in
push
icebp
mov
aam
and
fwait
mov
call
arpl
cwtl
mov
hlt
adc
fwait
or
add
arpl
mov
push
int3
in
outsb
push
fadds
movsb
fsubs
subl
icebp
adc
mov
and
fdiv
mov
mov
push
mov
test
mov
sahf
inc
mov
in
push
pop
repz
and
jno
jecxz
aam
add
xchg
xor
sbb
or
jmp
sub
test
pushf
push
fwait
ss
xchg
data16
fcoms
mov
inc
clc
call
sahf
sbb
sub
inc
fcom
rol
hlt
mov
arpl
inc
pop
dec
cld
sub
and
mov
call
mov
hlt
data16
push
cmp
dec
inc
jg
les
aam
icebp
mov
mov
or
jnp
test
in
arpl
ja
sbb
outsb
push
xchg
outsb
xor
repz
xor
jmp
aam
push
mov
push
jbe
and
mov
push
outsb
repz
inc
add
test
dec
mov
adc
daa
push
fdivs
fcoms
repz
mov
xchg
ja
xchg
movsb
je
add
pushf
icebp
mov
out
and
xchg
xor
outsb
repz
sbb
xchg
rcll
cld
or
xchg
test
out
icebp
mov
outsb
xchg
xor
cmp
cli
xchg
adc
rcrl
shlb
push
loopne
pusha
mov
int3
repz
jecxz
outsb
or
sahf
xchg
jb
inc
add
add
xchg
mov
in
movsb
push
pop
clc
xor
stos
cli
icebp
xlat
ljmp
mov
mulb
mov
enter
cmp
inc
rol
mov
in
lahf
lret
out
fs
cmpsl
sub
loope
add
add
lods
cmp
daa
mov
push
xor
dec
mov
xchg
fbld
adc
movsb
int
push
loop
lret
cmc
push
or
jns
mov
inc
push
pop
fwait
mov
addr16
gs
icebp
cmp
loope
pusha
push
loopne
loopew
lcall
add
cltd
into
pop
pop
cmp
adc
sbb
or
aaa
sbb
test
jae
cmc
inc
test
hlt
mov
adc
enter
insl
cmp
aas
roll
rorl
gs
shrb
loop
jmp
into
loop
add
es
dec
ja
sbb
cmp
das
loopne
fcoml
pop
or
in
repz
shlb
mov
mov
testb
daa
mov
repz
ror
call
leave
in
inc
hlt
nop
and
or
jb
inc
and
scas
or
cwtl
jecxz
sub
or
rorl
inc
adc
xchg
add
dec
in
cltd
popf
addr16
adc
mov
or
sbb
repz
inc
int3
xor
arpl
or
ret
push
pop
sti
jo
lds
mov
add
add
jp
mov
add
jno
lods
mov
pop
and
into
and
stos
dec
repz
cmc
push
mov
cs
das
dec
adc
mov
add
xor
and
jge
enter
sarb
and
mov
xchg
cmp
cwtl
mov
aad
jp
rcrl
mov
ss
fnstenv
pop
rcl
aam
aaa
enter
ljmp
mov
shll
push
scas
je
enter
lret
dec
adc
sbb
add
or
or
loope
xlat
stos
movl
sbb
mov
lret
les
mov
mov
push
shlb
out
test
pushf
and
iret
or
mov
mov
sub
inc
adc
add
cmp
jae
mov
stos
or
movsb
rorl
cmpb
jmp
jecxz
mov
sbb
in
and
out
or
fmuls
repz
and
xlat
or
fisttps
addr16
cmp
cmp
gs
add
mov
jp
out
xchg
or
pop
es
je
dec
stos
sub
or
add
adc
dec
fsub
cmp
ffree
icebp
adc
in
scas
fwait
mov
pop
mov
fs
out
dec
xchg
loope
roll
les
sbb
bound
stc
jmp
je
dec
test
imulb
mov
dec
bound
jecxz
lods
mov
test
insl
lahf
subl
jno
push
ret
mov
sub
call
add
data16
add
repnz
fiaddl
lret
adc
mov
out
orl
cltd
lret
inc
xchg
addl
in
addl
push
daa
and
xorl
loop
inc
mov
push
fcmovne
push
fiaddl
sarb
test
lret
or
test
inc
icebp
dec
pop
out
sub
addr16
pop
shlb
adc
rcrb
pop
inc
push
or
inc
ss
movsl
idivb
addl
cmp
aaa
andb
orps
dec
jo
dec
and
sbbl
xchg
or
dec
repz
push
mov
pop
xor
scas
or
cmpsl
jecxz
and
mov
and
cli
rcll
ret
pmaxub
sahf
cmp
pop
fadds
and
outsl
push
orl
loope
mov
mov
icebp
or
or
lods
inc
sar
dec
andb
inc
dec
xchg
or
int3
xor
jecxz
movsl
adcl
inc
add
fmuls
fxch
and
or
cmp
xor
pop
xor
bswap
push
test
je
sbbl
add
inc
cmpl
mov
addr16
mov
push
mov
mov
ljmp
mov
shlb
jne
fmul
ja
and
popf
out
mov
in
mov
inc
mov
mov
notb
cmpl
adc
js
mov
in
xor
shll
fwait
xor
add
popf
arpl
sub
jno
fnsave
pop
xchg
aam
xor
xchg
dec
or
or
lcall
lock
fs
aaa
pop
xor
pop
mov
cs
cmpsl
add
cmpl
stos
ja
pop
mov
cld
xchg
xorl
mov
subl
out
repnz
add
gs
push
pushf
jmp
in
loop
jno
push
jmp
cmp
clc
les
xor
inc
pushf
test
call
div
xchg
stos
pop
mov
repnz
push
xorl
iret
outsl
or
aam
lret
cmp
dec
stos
push
rolb
out
int
mov
add
popa
imul
fildll
stc
jle
orl
and
push
pusha
add
adc
leave
test
xor
xchg
and
sub
and
subb
notb
mov
je
idivb
add
xor
das
test
mov
xchg
inc
add
or
mov
repz
arpl
mov
mov
jbe
scas
aaa
add
test
insb
les
mov
shll
int
push
repnz
roll
cmp
dec
aas
das
add
in
stos
sbb
and
adc
into
scas
push
and
push
jne
pop
mov
cmpl
sub
sar
sbb
xchg
addr16
bound
fists
push
add
push
std
sbb
movb
xchg
xor
ficomps
push
xchg
mov
in
test
dec
cmp
push
out
out
cs
xorl
push
mov
mov
mov
ja
jae
movsb
bound
pop
jne
inc
pop
mov
loopne
lea
insb
inc
addr16
loop
xchg
or
lods
ss
ret
sub
add
dec
xor
xchg
leave
popa
lods
mov
pop
test
xor
rclb
xorb
sbb
cmp
js
push
mov
xchg
sbbl
int3
mov
dec
xor
orl
xor
es
mov
arpl
lret
subl
cltd
or
in
and
sbb
push
or
xchg
sarb
pop
xchg
xchg
pop
aas
or
imul
pop
imul
sbbl
xchg
inc
in
mov
cmp
jnp
sub
xchg
cmpsb
mov
mov
lods
push
dec
xor
scas
movsb
push
icebp
and
cmp
movsb
cld
inc
mov
subl
hlt
mov
aas
mov
mov
pushf
sbbl
call
cmp
dec
add
cmpl
fisttps
inc
push
test
bswap
push
dec
cmpsl
adc
jl
mov
pusha
and
ret
insl
sbb
xchg
iret
dec
add
mov
and
lahf
mulb
xchg
lret
xor
nop
aas
pop
into
adc
subb
inc
pop
loope
ds
test
cmpsl
aas
jo
or
xorl
movsl
sub
mov
mov
lock
addb
cmp
push
dec
fmul
add
mov
and
jns
das
movsl
jg
sti
mov
andl
inc
dec
dec
xor
adc
add
mov
movsb
outsl
mov
adc
ss
xchg
arpl
and
jp
jo
inc
xchg
mov
repz
cmp
orl
rclb
inc
sbb
sbb
xlat
scas
mov
pop
adc
pop
cmc
xor
push
mov
mov
jbe
cmpb
mov
lret
cmpl
adc
jne
push
mov
ja
fildll
adc
mov
sbb
not
mov
das
lret
jb
dec
mov
mov
ljmp
and
shr
scas
xor
lea
adc
test
push
jmp
loope
ds
lds
repz
jp
loopne
xchg
aaa
nop
loopne
jne
add
xor
pop
bswap
and
scas
loop
fists
das
ja
lcall
and
cmp
rcl
scas
fisttps
leave
inc
loope
gs
and
movl
fwait
call
xor
push
jae
jmp
xchg
ljmp
add
enter
add
mov
mov
jmp
xor
sub
and
or
push
xchg
xchg
xchg
pop
lods
sbb
xchg
cmp
rol
scas
test
or
sbb
js
cmpb
in
adc
xlat
or
es
fsubs
push
rorb
test
push
add
test
mov
pop
ljmp
mov
sub
andb
fbstp
mov
push
adc
movsb
ss
ljmp
jmp
push
ss
popa
loope
les
mov
push
icebp
fadds
test
cmc
pop
cmp
mov
mov
cmpsb
cli
xor
cmp
xor
dec
lock
in
sub
sub
mov
sbb
bound
inc
mov
test
add
pusha
insl
sbb
addl
inc
int
cmp
out
jg
aas
in
in
sub
adcb
mov
js
inc
test
in
lds
outsl
lcall
pop
cmp
daa
rorb
mov
test
hlt
jmp
push
xor
cwtl
jo
mov
mov
flds
mov
pop
cmpsl
mov
cmp
inc
mov
jmp
push
xchg
sti
test
lds
mov
mov
push
mov
lcall
sti
pop
fbstp
mov
test
mov
cld
pop
outsb
or
jno
add
enter
lahf
js
rorb
movsl
pop
popl
xor
lret
rcrb
push
xchg
cmpl
xchg
and
pop
fidivrl
mov
ljmp
push
mov
jge
sbb
add
or
inc
inc
pushf
lcall
ljmp
xor
icebp
xchg
cmp
repz
sbbb
xor
cs
cld
adcl
inc
mov
jo
mov
adc
dec
orl
cwtl
ds
cmp
cmp
arpl
xor
hlt
push
int
pop
je
dec
sahf
dec
sbb
orl
lea
xor
mov
cmp
jb
fidivl
or
cmp
shrb
jno
andl
push
jmp
inc
dec
xorl
xor
gs
push
jp
jge
xor
mov
sub
dec
ljmp
mov
xorl
in
xor
jns
loope
push
loope
outsl
test
fidivl
mov
orl
in
fisttpll
lds
ret
xlat
sub
sbbl
sbbl
sbb
fbld
es
add
xchg
fidivl
insl
or
bound
andl
sbb
cmpl
stc
adc
cmp
nop
add
jg
mov
test
icebp
fnstenv
gs
push
pop
inc
xchg
jg
jns
adc
jg
and
outsb
shll
cld
pop
lea
fwait
insb
test
pushf
ss
stos
jmp
lahf
mov
inc
lds
and
test
cmpsb
stos
int
cmp
adcl
cmp
xchg
sub
mov
bound
xlat
jne
push
fmul
add
fwait
aas
mov
jp
pop
sub
pop
sub
jge
mov
scas
mov
ud2
mov
dec
pop
das
cmp
jne
std
movsb
cmp
lahf
adcl
mov
mov
ja
cwtl
cmp
fsubrs
sti
ljmp
mov
enter
mov
jne
pop
ret
jnp
pushl
pushf
mov
pop
inc
movsl
xchg
xlat
cmpb
popf
jle
aaa
enter
or
and
cmc
jns
push
push
test
xchg
inc
sub
ret
pop
les
sbb
mov
cmp
xor
mov
ret
lock
bound
mov
popf
jg
mov
add
cmpsb
inc
lahf
and
fisttpl
aad
arpl
in
fisttps
vmovaps
xchg
mov
xorb
stos
inc
hlt
roll
add
pop
xchg
test
add
sub
orl
cmpsb
jg
xlat
sub
out
scas
leave
pop
mov
mov
mov
fwait
orb
enter
pop
out
xchg
xor
pop
sub
pusha
insl
pop
loop
sbbl
push
out
scas
cmp
cmp
mov
rolb
cs
fstl
xchg
pop
subl
aas
pop
jns
roll
ljmp
xchg
and
push
imul
fwait
push
add
pop
push
sub
test
and
test
sub
mov
mov
sbbl
xlat
add
and
adc
mov
insl
xchg
pop
xor
aam
rolb
add
add
sbb
ficoms
enter
rolb
push
addr16
and
xchg
dec
xor
jp
mov
cmpb
pop
repz
pop
mov
xchg
inc
popa
jne
mov
xchg
mov
jp
adc
fbld
mov
call
dec
fsub
mov
pop
mov
sbb
rcrb
enter
jne
test
mov
daa
stos
inc
loopne
jge
mov
push
jmp
add
or
jle
cmpsb
adc
inc
or
inc
xorl
clc
or
je
push
enter
mov
sbb
push
fnstcw
push
dec
xchg
bnd
shl
xor
xor
mov
ret
test
push
pusha
popf
mov
lock
nop
out
mov
lods
std
shl
jle
sub
ljmp
movsb
mov
ficompl
xlat
sub
into
inc
movsb
xchg
push
jb
outsl
push
test
mov
mov
fnsave
lods
inc
mov
int
leave
push
icebp
sbb
rcll
lret
fmulp
or
mov
inc
inc
xor
jle
icebp
in
loopne
into
mov
cli
push
jae
inc
in
dec
test
jns
push
ror
orb
lahf
sub
cmp
and
addl
or
inc
xor
out
pop
dec
out
and
inc
test
sub
imul
mulb
andb
push
addl
popa
mov
rcl
sbb
mov
adc
sbb
inc
xchg
jb
loopne
pusha
repnz
mov
inc
lea
std
fistpll
ficomps
or
xor
mov
jle
mov
repz
dec
pop
daa
rol
inc
push
in
out
icebp
cmpps
sub
aam
pop
imul
inc
adc
xchg
mov
scas
lcall
mov
jp
or
fimull
xor
mov
adc
ja
cwtl
mulb
mov
popf
pop
fidivl
xchg
rol
in
xchg
add
lods
xor
hlt
das
movsl
in
pop
rorb
test
les
mov
icebp
mov
adcb
hlt
test
or
fs
hlt
decb
ret
or
daa
mov
icebp
inc
mov
mov
and
and
in
jno
inc
cmp
xchg
mov
push
adc
pop
mov
test
je
ret
mov
aaa
jg
mov
cmp
push
pop
and
loopne
mov
cmc
xchg
and
mov
dec
test
xlat
js
or
cmp
sub
aad
cmpl
dec
push
popl
push
pop
jae
subl
mov
sbbl
sub
add
psubusb
sarb
lods
insl
xorl
movsl
and
fisubl
mov
inc
adc
xchg
push
sbb
add
repz
adc
inc
les
xchg
cmpsl
out
ss
xchg
inc
mov
test
jg
adc
sbbl
pop
mull
aad
mov
dec
xchg
leave
cld
or
push
in
add
outsl
xor
or
lds
lea
clc
cwtl
jns
jnp
mov
mov
xchg
aad
pop
xchg
pop
mov
popa
xor
scas
int
xor
xchg
andl
cmp
test
or
pop
mov
aam
adcl
imul
cmp
sub
sbb
pop
inc
idivb
mov
inc
lea
add
jp
subl
orb
jne
scas
in
mov
shll
out
loopne
xor
jg
push
pushf
into
imul
xchg
jno
dec
cld
cmp
nop
xchg
add
subb
mov
jno
popf
inc
mov
out
push
icebp
ljmp
in
lahf
push
mov
cmpsb
hlt
xor
mov
dec
adc
mov
cwtl
aaa
lret
ret
shll
hlt
jbe
outsl
sarb
jp
push
add
test
aam
fbld
inc
into
mov
cltd
sbb
sahf
adc
je
xchg
out
imul
test
in
jno
or
xor
icebp
xorb
in
and
out
bound
jmp
ret
ds
aad
loope
repz
test
icebp
sub
sub
xor
stos
dec
aaa
xor
test
inc
adc
inc
lds
and
cmp
or
popa
orl
rclb
mov
cmpsb
bound
inc
mov
gs
mov
clc
adc
and
pop
leave
rcll
ja
pop
repz
add
fisubl
repz
lahf
insl
mov
add
mov
popf
dec
inc
pop
xor
lods
das
or
lret
sub
rolb
mov
or
or
fsubrs
ljmp
xorl
inc
mov
dec
mov
movsl
mov
gs
or
enter
xorl
lret
jno
aad
dec
addr16
loopne
addl
out
mov
jecxz
xchg
shlb
outsb
sahf
jmp
out
lods
and
mov
push
movsb
mov
mov
jecxz
and
and
mov
or
adc
pop
push
add
xor
sbb
sahf
adcl
xchg
orl
fnstcw
jl
cs
and
dec
xor
xchg
sub
pop
ficompl
int
jle
or
icebp
cmpsl
lea
pop
pop
inc
push
xchg
outsl
test
pmaddwd
stos
adc
shlb
inc
push
sbb
mov
addl
xor
mov
mov
lahf
sbbl
and
movsb
popf
lcall
mov
dec
aad
inc
test
pop
movsb
mov
jl
imulb
stos
sbb
fwait
or
jle
aam
push
push
fstl
lods
movsb
jb
jns
test
mov
and
in
cmp
cwtl
inc
cmpl
mov
roll
mov
fstl
mov
ret
mov
jp
push
sbb
insb
addl
in
cmpl
aas
mov
push
loop
mov
xchg
mov
jmp
jbe
mov
je
adc
add
push
inc
adc
mov
test
outsl
mov
jb
sub
roll
xchg
inc
push
leave
sub
rcr
mov
pop
dec
xor
je
movsb
push
int3
std
inc
test
sub
sub
arpl
sti
test
loope
cmp
xchg
cwtl
pop
cmp
or
or
pop
dec
push
mov
and
out
cmc
mov
jbe
sbb
out
sar
adc
icebp
pop
inc
xchg
int3
movsl
inc
jmp
inc
cmc
out
xchg
pop
push
lods
xchg
mov
mov
jae
push
test
xchg
call
push
movsb
push
push
and
sub
jle
fcompl
fisttpll
loope
xor
xchg
adcl
clc
xchg
js
mov
roll
in
mov
out
cwtl
add
cmp
xchg
inc
enter
fsubrl
jle
rol
lds
and
cmpl
add
scas
je
lret
mov
and
rcl
daa
movb
push
int
test
imul
cmpsl
jle
mov
adc
data16
sbb
popa
aaa
shr
test
dec
xchg
mov
mov
jge
andl
fisttps
xchg
jp
inc
jecxz
arpl
mulb
popa
mov
hlt
aaa
fs
rorl
inc
xor
pop
jne
in
inc
les
popa
sub
mov
inc
cmp
insl
jo
push
inc
iret
test
sahf
or
inc
idivb
test
add
jae
xor
jmp
mov
cmpl
mov
imul
sarl
xchg
add
pop
jne
inc
push
loop
dec
addb
xchg
cmpps
arpl
arpl
cmc
pushf
dec
pop
lahf
cmp
pushf
ret
dec
test
imul
add
or
pushf
inc
rclb
mov
in
dec
adc
rolb
xchg
pop
mov
inc
lcall
leave
add
pop
jbe
mov
nop
lahf
adc
jnp
test
nop
adc
or
lds
pushl
sahf
rcrb
inc
xchg
mov
repnz
mov
mov
xor
inc
out
in
adc
and
push
add
sahf
sbb
mov
or
mov
push
sbb
mov
cmp
loope
push
stc
rcrl
daa
and
mov
subb
push
fnsave
call
lods
repz
dec
xchg
mov
or
les
adc
ret
cs
cld
jecxz
ss
cmpsb
push
mov
mov
jecxz
ja
ljmp
outsl
pop
int
clc
js
inc
mov
sub
scas
fwait
cmovb
adc
or
jl
in
add
mov
ret
fwait
or
mov
ret
cmp
aaa
sub
lds
dec
ljmp
clc
ret
leave
test
inc
xchg
les
ror
xchg
inc
stos
mov
jge
es
pushf
pop
jecxz
ret
test
test
and
loopne
cld
pusha
sbb
addb
pop
pop
arpl
mov
jbe
push
arpl
fs
in
scas
adc
pusha
jle,pn
outsb
mov
into
fisubrl
out
gs
pusha
ret
aaa
icebp
std
icebp
cs
repnz
mov
dec
sbb
mov
push
stos
fstpt
add
es
orl
shl
lret
sbb
mov
loope
xor
rcl
les
sti
xchg
add
dec
inc
pusha
xchg
lods
pop
test
add
pop
jmp
loop
and
js
popl
and
ss
je
fisttpll
or
stos
and
lea
cli
nop
xchg
test
xchg
ret
sarl
popa
xor
add
mov
sbb
inc
inc
popa
testl
stc
add
jle
pop
test
fcomps
mov
mov
and
mov
addb
add
mov
pop
je
mov
xor
loop
jecxz
aad
movsb
pop
mov
sub
xchg
cmc
out
xchg
roll
xchg
addl
add
pop
decl
sub
add
std
lea
inc
cmpl
dec
dec
inc
nop
or
test
push
and
xchg
repz
loopne
dec
dec
inc
inc
repnz
fcomi
inc
xchg
fcomi
inc
xchg
fstpt
pop
bound
sub
inc
cmp
loop
jecxz
push
push
aam
test
incb
or
push
icebp
mov
mov
cmp
repz
mov
inc
adc
jae
jmp
and
add
add
xchg
mov
push
pop
jb,pt
shl
sahf
mov
fnsave
inc
icebp
sub
add
movsl
outsl
ret
xchg
out
ja
pushf
pop
jg
loop
in
adc
iret
mov
out
push
cwtl
lcall
lods
jle
add
mov
filds
jmp
push
repz
dec
pop
clc
mov
bound
lds
leave
sub
pushf
je
and
push
fwait
push
jae
xchg
in
lcall
fs
cld
lcall
adc
leave
mov
test
mov
fs
add
data16
xor
nop
sub
inc
callw
or
subb
cltd
cmp
aam
les
push
push
or
lods
and
les
enter
and
les
adc
inc
and
xchg
and
cli
xchg
mov
push
rcrl
push
add
iret
xchg
test
sub
xor
push
repz
fwait
ss
scas
sbb
in
rcrl
pushf
repz
sbb
mov
and
shll
add
in
mov
push
addl
fisubs
xchg
mov
xor
add
popa
mov
cmc
cmp
mov
in
ret
and
add
xchg
xchg
cmp
repz
test
pop
and
in
movsl
loopne
pusha
xor
mov
cmp
out
mov
lds
adc
xor
mov
adc
call
sub
sar
xor
dec
xchg
gs
inc
int3
stos
sarb
std
adc
sub
mov
jge
pusha
push
adcl
mov
lds
jb
inc
test
xor
jb
xorl
stos
dec
mov
lret
xchg
pusha
add
sub
int3
insl
cmp
fadds
rorb
mov
mov
xchg
jnp
test
das
aas
and
in
into
push
mov
jnp
movl
mov
dec
add
andl
mov
pop
mov
mov
adc
mov
adc
sbb
xchg
loop
push
ficomps
lahf
inc
add
adc
add
add
pop
mov
das
mov
lods
std
inc
push
mov
sahf
icebp
in
xchg
mov
les
mov
inc
das
out
jo
or
mov
xchg
and
xor
mov
mov
jmp
loop
inc
ret
mov
fwait
test
mov
sti
push
jmp
test
sub
fs
ss
mov
test
aam
test
je
push
imull
push
xor
and
xchg
adc
add
movsb
jbe
insb
popa
loope
icebp
xchg
pop
clc
movsl
push
push
in
xchg
leave
inc
shll
mov
shll
pop
lds
int3
inc
cmpsl
cmp
jmp
jmp
sub
cmp
jbe
shlb
cmp
loope
test
js
test
dec
dec
je
xorb
icebp
lds
addl
pop
push
sub
sub
pop
loop
dec
and
push
and
cwtl
xchg
jae
mov
cmp
in
loopne
inc
scas
dec
divl
xchg
icebp
inc
mov
mov
jb
test
hlt
and
mov
enter
sbbb
adc
xchg
clc
add
in
jbe
xor
inc
xchg
mov
add
cs
push
and
xor
add
xor
adc
jmp
fcoml
mov
sbb
fdiv
inc
sbb
sub
test
pop
aas
cmpsb
leave
sub
scas
mov
test
cld
sti
mov
cmp
inc
push
sbb
jne
ret
movsb
inc
jbe
repz
fwait
add
je
data16
or
push
cmp
cmp
insl
stos
mov
or
aam
movsb
inc
mov
test
lahf
data16
add
jl
je
mov
test
jb
shlb
and
xchg
into
inc
dec
popf
sbbb
test
test
xchg
faddl
ja
cmp
cmp
jo
ja
mov
or
nop
mov
or
xchg
clc
adcl
sub
mov
stos
data16
in
repz
xchg
insl
ss
ss
mov
aas
pop
xlat
mov
popa
lds
adc
mov
insb
leave
imul
sub
dec
shll
adc
mov
xchg
sub
cwtl
fwait
push
data16
out
sub
and
ret
cmpsb
out
xchg
cmp
fcomps
fcomps
flds
sti
mov
ds
ret
or
repnz
mov
stc
mov
xlat
daa
inc
cmp
adc
sbbb
push
in
cmp
and
push
out
lret
cltd
leave
xchg
add
dec
in
sub
fstl
je
sbb
push
lea
add
rol
rorl
adc
mov
iret
in
adc
aad
fcoms
jbe
xor
mov
je
jns
in
mov
sbb
pop
jp
jae
inc
enter
out
cmpl
jg
mov
enter
dec
sub
sub
clc
add
test
out
lock
in
xlat
out
pop
addl
mov
pop
lcall
test
test
pop
jb
dec
inc
push
xchg
out
xchg
scas
cmp
push
jle
inc
rorl
mov
adc
push
sbb
cmpsb
inc
mov
cwtl
add
push
repz
lea
adc
pop
add
dec
mov
mov
xchg
mov
test
xchg
cli
hlt
and
out
les
pop
jge
pop
aas
mov
push
stos
cmc
fisttpl
sub
out
into
adc
aaa
ja
insb
test
jo
outsb
sbbb
ds
mov
es
fwait
wrmsr
fs
mov
test
in
jmp
and
or
int
pop
popa
jmp
mov
fcmove
or
mov
pop
xchg
out
push
aaa
aad
xchg
loopne
popl
lods
push
je
test
sub
ds
mov
pop
or
jmp
ret
aam
sbb
test
in
mov
rcrl
mov
sub
js
outsl
ror
mov
and
mov
stc
addr16
ret
push
lds
jecxz
inc
mov
cltd
inc
ljmp
fdivs
lds
test
popa
dec
sbb
xchg
xchg
popa
addl
js
out
xchg
xchg
pop
call
fs
lahf
or
cmp
cmp
cmc
pusha
or
and
sub
into
repz
or
cmpsb
lds
xorb
sbb
jle
arpl
data16
movsb
cmpsb
mov
dec
cmp
cltd
pop
aas
mov
cmp
insl
adc
lds
int
pop
popa
push
insl
mov
adcl
mov
xchg
jmp
movsb
mov
pushl
js
mov
test
clc
aas
mov
in
push
sarl
sbb
xchg
fs
pop
jecxz
les
and
and
push
ret
push
sbb
js
sub
adc
out
icebp
cmp
lods
or
xlat
fdiv
out
loope
out
add
xchg
icebp
jne
xor
adc
or
add
add
mov
sbbb
jmp
ss
xchg
shl
sarl
in
or
jno
sbb
inc
push
xor
xor
ss
xlat
cmpsl
out
inc
movsl
call
add
lds
dec
push
and
clc
sbb
orl
add
xchg
adcl
adc
jg
lds
mov
push
test
jg
adc
int
xchg
dec
test
mov
int
nop
xchg
or
clc
mov
pusha
mov
je
sbb
lahf
or
std
mov
inc
shrb
in
sar
je
ficoml
popf
mov
push
pusha
or
add
add
and
scas
out
ljmp
or
inc
fstps
cld
sbb
jmp
roll
mov
test
jle
adc
dec
inc
adc
jmp
inc
add
sahf
das
mov
stos
push
je
mov
icebp
int
ds
sbb
in
mov
mov
pop
sbb
add
pop
inc
and
test
jge,pt
popa
xor
push
add
int
popf
mov
lret
test
dec
in
repz
mov
mov
lds
mov
pop
adc
adc
xor
jp
add
inc
and
xor
pop
fiaddl
scas
in
inc
jg
dec
into
sbb
outsb
xor
cli
push
loope
xor
mov
add
test
xor
adc
test
shll
fs
dec
lds
sarl
inc
cmp
inc
mov
xchg
aas
lret
xchg
cli
pop
pop
ss
dec
mov
cmp
mov
arpl
pusha
insb
dec
mov
popf
xchg
cmc
and
adc
dec
mov
in
fwait
in
ret
subl
enter
and
sub
mov
stos
popf
mov
pusha
dec
cmpl
repz
inc
cmp
roll
clc
js
ret
adc
icebp
in
repz
clc
shl
lods
lds
popa
in
jge
repz
fs
mov
xchg
add
jbe
test
jge
outsw
rolb
push
jae
leave
popf
mov
sbb
cmpsb
ds
inc
add
xor
inc
mov
lea
int
in
int
ja
sarb
or
add
and
fldl
lock
inc
int
xchg
pop
orb
cs
call
xchg
add
lcall
ficomps
mov
mov
xchg
movsb
repz
in
loopne
push
test
xchg
ret
mov
xchg
test
mov
into
loop
ljmp
adcb
sbb
lcall
mov
mov
xchg
movsb
cmp
repz
mov
adc
cmp
test
push
or
add
ret
fxch
xchg
movl
mov
xchg
mov
or
fdivs
mov
sub
mov
clc
data16
loop
clc
mov
or
out
imul
inc
js
loop
into
push
pop
js
movsb
enter
cmp
fmul
mov
fdivs
push
nop
fwait
in
inc
fadds
add
pop
jmp
and
mov
popf
js
sbb
orb
xchg
pop
cmp
pop
xchg
pop
ljmp
mov
fcmovu
fidivrs
cltd
add
ljmp
mov
mov
fsts
cmpsl
scas
test
or
aam
loope
in
clc
or
outsl
ret
lods
fadd
clc
out
aad
fstpl
jmp
sub
scas
mov
test
add
scas
mov
add
test
adc
sub
mov
mov
outsb
aam
fists
inc
sbb
pop
outsl
push
adc
mov
sub
add
and
fsts
ds
add
insl
or
add
test
inc
lret
push
mov
pop
lock
mov
into
loop
jg
push
jge
xor
stc
mov
push
out
push
loope
icebp
in
das
aaa
mov
in
sub
pop
fiadds
dec
mov
and
repnz
or
and
test
out
adc
cmp
pop
add
pop
xor
sbb
hlt
cld
test
fmull
lret
or
jge
daa
popf
cmp
mov
dec
cmp
aas
pushf
push
cmp
or
outsl
ret
inc
lea
sti
xchg
push
lcall
jecxz
inc
ret
ret
fs
je
ret
in
and
xchg
jns
mov
nop
pop
test
jle
shll
outsb
mov
add
add
mov
or
inc
inc
loop
pop
inc
cmpsb
jno
sub
sbb
ljmp
shr
je
repz
jae
leave
xchg
out
mov
outsl
ret
fs
adc
xchg
repz
movl
and
adc
xor
rcrl
lods
sub
and
es
mov
fsts
inc
xchg
xlat
shll
pop
mov
je
mov
sub
add
rcll
bound
bound
int
roll
scas
mov
movsb
stos
xchg
loop
and
movsb
mov
mov
or
outsl
ret
xchg
xor
mov
notb
push
out
or
jbe
int
hlt
inc
inc
push
sbb
jne
dec
aam
push
add
add
jl
mov
dec
insb
test
jno
pop
and
add
outsl
ret
dec
ljmp
push
addr16
rep
mov
ljmp
mov
aaa
jns
rep
int
add
mov
mov
mov
and
xor
data16
pop
mov
jbe
and
xor
jnp
inc
or
mov
in
in
int3
mov
ja
dec
mov
jo
call
cwtl
pushf
add
mov
gs
mov
pop
test
xchg
and
out
adc
je
mov
nop
mov
push
mov
mov
negb
mov
cmc
mov
shll
cmc
test
xchg
shrl
xchg
jecxz
jmp
aaa
jecxz
mov
push
lock
nop
push
adc
jb
leave
pop
icebp
cmpb
enter
mov
sbb
inc
mov
inc
call
and
xchg
dec
aad
movsb
mov
pop
xor
xchg
js
mov
das
mov
add
and
adc
nop
push
shrl
pop
jmp
pushf
pop
push
clc
pop
ss
test
gs
xor
popf
adc
fcmovnb
int
sbb
hlt
jb,pt
cld
daa
jne
loopne
mov
into
fwait
inc
mov
hlt
in
hlt
xchg
leave
sub
sahf
mov
add
pusha
addr16
lcall
or
push
gs
lret
outsl
shrl
xor
dec
stos
cmp
mov
int3
xchg
push
fcmovne
cmp
or
daa
in
dec
int
or
mov
lcall
add
jb
loop
out
mov
mov
hlt
mov
jmp
cs
in
test
jbe
mov
cmp
push
cmp
mov
imul
or
outsl
ret
adc
imul
jae
add
mov
sbb
cmp
mov
jmp
pop
adc
mov
push
shll
sub
sub
cmp
outsl
ret
repnz
out
arpl
std
aas
lock
decb
orl
xchg
test
jnp
out
test
incb
int
shrl
xchg
cmpsb
adc
xchg
dec
sub
addb
lret
xchg
adc
xchg
adc
lret
push
insb
in
pop
addr16
jnp
hlt
in
inc
in
lret
cmpsb
sti
push
cmc
mov
scas
int
xchg
leave
icebp
call
lds
jle
mov
or
fwait
push
aad
inc
test
aad
stos
cmc
xor
mov
sub
add
adc
mov
mov
cmpsb
adcb
dec
xor
and
and
stos
jno
and
inc
je
ficoms
pop
and
or
loop
push
mov
pop
aas
and
shll
cmp
test
xchg
pop
test
lea
jl
test
adc
outsb
mulb
leave
ljmp
or
pop
popa
in
pop
call
dec
jl
xor
pop
jo
pop
dec
sbb
rcr
scas
or
je
mov
rcrb
jge
or
repz
pushf
fnstenv
xchg
xchg
push
nop
push
andl
aam
mov
inc
pop
cmp
adc
xor
movsb
mov
fistpll
in
push
adc
sub
das
lods
pop
inc
sbb
lret
mov
jg
lds
in
dec
cmp
add
cld
aaa
mov
pop
popa
loope
adc
leave
repz
out
les
aam
fwait
add
rcl
out
les
inc
cltd
fsts
add
mov
movsl
or
mov
push
test
sbb
dec
mov
ficoml
andl
jge
sub
or
testb
test
inc
jb
into
xchg
mov
test
into
test
push
dec
leave
xchg
scas
and
sub
cmp
bound
add
sbb
stos
or
cmp
hlt
scas
iret
xlat
add
jns
adc
push
sti
shlb
pop
addr16
dec
pop
xchg
addb
pop
into
loop
xor
and
pushf
cli
xorl
dec
into
mov
rorb
rorl
jo
push
jmp
ret
arpl
cmp
enter
mov
ja
cltd
and
mov
lds
lahf
insb
xorl
jmp
push
inc
hlt
ret
mov
fs
loop
xchg
mov
and
rcll
outsl
ret
push
adc
mov
idivl
cwtl
enter
xor
mov
xor
mov
jle
in
lods
aaa
xchg
sub
stc
mov
ja
adc
pusha
push
add
cmp
mov
orl
inc
xor
lods
add
in
mov
movsb
lcall
adcb
cltd
mov
shrb
jae
inc
jnp
mov
leave
hlt
inc
jle
mov
ds
loopne
lret
xor
rcr
in
mov
test
mov
popl
jl
dec
jmp
mov
icebp
sbb
aaa
inc
cmp
test
dec
mov
std
jbe
xchg
jne
fnstsw
cltd
lret
popa
adc
repz
clc
aad
pop
push
sub
das
sub
mov
int3
jmp
mov
lods
dec
xor
ja
out
ljmp
cwtl
aas
loope
pop
hlt
mov
adc
mov
lret
add
adc
add
adc
sub
mov
cmp
adc
xchg
and
mov
xor
ds
mov
jecxz
push
xor
pop
mov
or
jno
dec
push
lods
push
push
pushf
add
or
pop
pop
mov
movsb
shrl
jg
jne
mov
xchg
dec
int
lds
pop
les
into
js
sbb
cmp
mov
pop
jno
fldl
xlat
ljmp
in
or
out
or
xor
lea
subb
addl
fwait
push
mov
aas
mov
out
jecxz
aas
rorl
aaa
mov
xor
mov
sub
fimull
fs
mov
xchg
inc
imul
test
repz
sbb
jl
mov
stos
mov
orb
pop
ret
test
fisttps
repz
adcb
or
push
xchg
ss
adc
loopne
mov
ss
loope
mov
pop
xor
repz
lea
or
test
test
orl
and
mov
dec
mov
imul
jmp
jmp
or
outsl
ret
mov
mov
push
xor
shll
addl
movsl
pop
jns
pushf
idivb
out
decb
cwtl
push
gs
jae
daa
mov
mov
cmp
fdivrs
jb
adc
pop
popa
xor
jecxz
shll
xor
popa
cmp
ljmp
adc
popl
pop
pop
mov
out
mov
movsl
cmp
pop
jecxz
es
or
xchg
aaa
aaa
mov
xlat
pop
pushf
push
sub
mov
cmp
inc
cmp
rorl
cmp
in
add
sbb
in
sbb
cmc
ss
sbb
decb
sahf
xchg
or
fs
aas
cmp
or
cmp
lds
jnp
mov
fdivs
orb
hlt
mov
popf
add
dec
push
lret
pop
push
adc
and
shlb
xchg
pop
add
loope
cwtl
jecxz
imul
int3
mov
and
jge
xor
out
fs
cmp
std
mov
jle
pushf
decl
xchg
mov
pusha
adc
inc
inc
jmp
inc
fiadds
imul
xchg
sbb
cmp
or
jne
xchg
or
icebp
ja
js
mov
pusha
xchg
mov
cmpsb
movsb
inc
xchg
fisubl
xchg
mov
push
and
stc
rcrl
pop
lods
fildl
xlat
push
shll
leave
sbb
pop
adc
cmpsb
jge
stos
fildl
dec
adc
dec
push
repnz
adcb
sbbl
mov
jbe
xchg
lcall
add
lcall
push
jo
jbe
xchg
rorb
scas
adc
xchg
mov
outsl
ret
inc
jbe
or
cmp
add
cmpxchg
mov
stos
nop
pop
addl
jns
icebp
mov
lods
cmp
mov
out
je
push
xchg
mov
xchg
pop
int
pop
popa
je
inc
inc
nop
pop
inc
lds
pop
cmp
icebp
imul
rorl
cmp
inc
aam
xchg
jb
scas
xor
and
mov
add
lods
sbb
loop
jle
pop
out
sub
bound
mov
adc
or
loop
sbb
inc
inc
outsb
lret
sahf
orl
xchg
imul
mov
movsb
mov
ja
jbe
mov
add
inc
insb
dec
jb
xor
or
sahf
out
sbbl
adc
aad
push
add
sub
fnstenv
add
lds
xor
dec
mov
jb
mov
addl
aas
mov
movsl
addb
adcl
fscale
cmp
or
xchg
subb
test
inc
pop
push
subl
sbb
loop
mov
iret
sbb
cmpl
imul
xchg
fistpll
std
pop
xor
mov
incl
lea
in
movsb
xor
mov
xlat
push
movsl
mov
out
inc
out
sbb
pop
icebp
cmp
lods
mov
imul
bound
pop
incl
push
adcl
aam
movsl
insb
mov
cltd
inc
cltd
les
pop
cmp
sbbl
xchg
xchg
scas
add
aam
jle
dec
mov
arpl
and
cmp
mov
push
sbbl
js
icebp
out
punpckhbw
roll
cmc
sbb
fbstp
ror
lds
xor
pop
push
cmpb
sbb
test
sub
daa
call
inc
mov
add
popa
and
add
sbb
inc
or
pop
or
mov
fists
pushf
call
into
sub
loop
es
insb
cmp
int
mov
cmp
ds
andl
std
inc
sub
mov
repnz
jnp
roll
sti
sbb
mov
mov
subl
lret
xorl
insb
lahf
dec
subl
jo
jmp
mov
inc
sub
or
push
bound
pop
out
push
scas
orl
pop
cmp
arpl
pop
inc
push
mov
repz
rcr
sbb
inc
icebp
aad
fsubrp
mov
mov
inc
adc
loop
xchg
lock
mov
jbe
inc
mov
sbb
mov
pop
test
xchg
les
xor
call
push
lcall
icebp
adc
add
test
bound
pop
cltd
sbb
jno
out
aad
pushf
cmp
inc
mov
cmp
into
test
std
das
mov
inc
enter
sub
pop
or
or
mov
push
test
pop
pop
add
cltd
sub
aad
and
add
cmpsb
dec
fcmove
push
push
xor
inc
out
xor
cmpsb
inc
xchg
xchg
push
imul
popf
mov
not
inc
fdivrl
adc
or
movsb
ds
pop
jmp
mov
hlt
xor
xor
dec
sub
sub
mov
faddl
dec
nop
mov
iret
or
and
inc
iret
cmpb
pop
push
ss
jp
mov
or
icebp
out
inc
cmp
add
icebp
sbb
repz
mov
lods
mov
and
sub
adc
repnz
ss
loop
inc
sbb
mov
xchg
out
and
dec
cmp
inc
adcb
fs
mov
xor
xchg
push
int
cmp
lahf
sbb
push
movsl
jl
movb
gs
mov
imul
xchg
dec
dec
dec
leave
mov
mov
fs
lret
xchg
inc
loope
xchg
pop
lahf
adc
repz
pop
movb
inc
xor
pop
cli
add
ret
aas
lods
add
ss
stos
out
mov
lods
loopne
add
mov
and
inc
repz
leave
out
and
sub
xchg
pushf
adc
jecxz
sbb
in
roll
out
test
add
test
adc
rolb
and
and
mov
orb
cmc
xchg
repz
loop
fldt
cwtl
xor
mov
in
outsb
or
repnz
ret
test
cmp
popl
icebp
pop
push
add
mov
test
icebp
add
cwtl
add
mov
mov
mov
test
sahf
cmp
popl
rol
or
mov
gs
cs
leave
test
sbb
adc
jmp
inc
roll
jecxz
fiaddl
push
pusha
sahf
mov
rorl
std
jb
xchg
cmp
inc
stc
xchg
pushf
push
cmp
shl
cmp
aam
mov
out
sahf
xchg
and
and
jmp
adc
ljmp
xchg
cmp
ds
test
shl
jl
ja
pushf
mov
inc
mov
add
adc
into
js
outsl
ds
repz
popa
xor
out
adc
cmc
mov
mov
dec
dec
xchg
and
jl
jecxz
mov
pop
insb
mov
dec
mov
cmp
xchg
aam
add
icebp
adc
imul
cmp
xchg
test
xor
addr16
into
pop
popa
xchg
add
adc
in
mov
test
sub
or
outsl
ret
stos
test
cmp
outsl
out
loope
push
add
cmc
and
sub
adc
xchg
pop
xchg
lds
icebp
push
jae
leave
test
add
insb
cmc
repz
pop
popa
test
or
outsl
sar
xchg
std
aam
repz
rep
test
test
ds
leave
rcr
in
aad
pop
stos
sbb
sarb
inc
rclb
cmp
sbb
lahf
test
out
in
stos
int
loopne
loop
out
loopne
loopne
lods
pop
fcoms
pop
sbb
pop
fs
sbbb
add
jno
sbb
test
pop
fdivs
inc
test
leave
xchg
movb
repz
adc
xchg
inc
and
call
add
pop
addb
cwtl
xor
or
push
mov
and
pop
clc
shll
push
test
dec
ror
jmp
push
rcrl
or
pop
clc
into
mov
leave
mov
pop
sub
inc
je
push
and
push
mov
push
cmp
imul
stc
mov
sar
js
xor
cli
cmp
push
hlt
jae
jnp
mov
inc
repz
rorl
outsl
inc
xchg
mov
inc
cmpsb
dec
ret
cmp
mov
xlat
push
out
roll
jg
add
mov
or
mov
mov
adc
sub
repz
mov
clc
sub
push
pop
mov
das
cmc
icebp
xchg
ss
mov
or
pushfw
jbe
mov
daa
sub
mov
repz
rcll
jecxz
mov
bound
xchg
dec
mov
loop
into
mov
sbbb
nop
mov
mov
test
out
loop
xor
loopne
add
push
ljmp
dec
pop
aad
inc
push
mov
iret
mov
fcomp
and
jne
cmc
movsb
fbld
fldenv
loop
xchg
push
loopne
adc
int
pop
sbb
add
sbb
cmc
fcom
inc
out
cmc
xchg
fists
flds
loop
fmuls
dec
push
dec
fsub
push
loop
xchg
inc
mov
hlt
xchg
hlt
push
mov
pushf
cli
mov
push
scas
sti
mov
lret
push
je
in
sbb
add
outsl
ret
dec
testb
ljmp
add
pop
mov
icebp
and
add
mov
aam
int
pop
popa
xchg
loopne
adc
mov
imul
dec
pop
hlt
or
add
mov
dec
out
ret
es
into
enter
and
ss
pushf
imul
bound
shrb
xchg
adc
fnsave
test
mov
test
dec
ret
leave
sub
or
out
shll
bound
jecxz
and
jecxz
adc
mov
mov
pop
cmp
adc
adc
xchg
add
mov
adc
dec
clc
and
mov
mov
and
push
xchg
or
jae
xor
push
lds
lock
out
ror
in
xchg
jecxz
or
cmpsl
in
repz
in
scas
cmp
leave
jae
sub
cmp
and
int
pop
stos
jno
push
cmp
or
dec
or
loop
out
rcll
mov
ret
pusha
push
pop
int
scas
jbe
xorl
dec
inc
jecxz
loope
jno
xor
js
pop
stc
stos
xchg
xor
fcmovnu
mov
das
cwtl
sbb
or
xlat
rcl
jge
pop
mov
sbb
jmp
pop
das
cmp
push
cli
sub
inc
mulb
mov
mov
sbb
cmp
and
mov
cmpsl
dec
shrl
xchg
cmp
sub
nop
hlt
mov
popa
aaa
cli
out
xor
dec
test
std
icebp
mov
jb
out
roll
daa
icebp
jecxz
ss
fsubs
icebp
jge
jb
lock
xchg
cmp
dec
add
jle
jnp
xchg
mov
stc
jmp
dec
test
cmc
daa
scas
out
rcl
movl
fmul
and
or
cwtl
jg
out
jmp
aaa
in
mov
cmp
ret
pop
sbbl
xchg
jle
dec
in
push
mov
lock
mov
jp
push
jmp
fadds
pop
std
sahf
sti
into
and
pop
jns
addl
dec
mov
cmp
ficoms
insl
add
adc
loope
inc
loop
hlt
xor
adc
lods
loopne
xor
addl
adc
hlt
xchg
ds
sbb
mov
or
jno
hlt
jmp
mov
insl
jbe
jno
pushf
pop
les
fsts
enter
ljmp
std
mov
incl
fnstenv
mov
xchg
not
pop
fisubrl
icebp
test
dec
sti
xor
xor
or
cmp
mov
test
mov
or
sub
pop
out
popf
data16
sub
in
cmp
jmp
out
out
jae
inc
push
push
sbb
loope
aas
aas
push
adc
ljmp
pop
cmp
popf
rorl
add
int3
xchg
mov
sub
or
cmp
fs
cmc
clc
add
sbb
xor
xchg
negb
and
pop
pushf
inc
fyl2x
mov
dec
daa
loope
mov
dec
ret
or
xor
icebp
cmp
outsb
add
popa
mov
adc
cmpsb
scas
inc
push
add
mov
or
outsl
push
in
mov
test
sar
cmc
pop
test
movsb
movsb
std
outsb
mov
out
ror
pop
shl
adc
mov
fcoml
mov
adc
adc
mov
or
test
test
lock
sbb
sub
inc
leave
notb
xchg
mov
in
mov
jb
inc
int
mov
aad
aad
clc
dec
adc
lahf
jle
push
test
inc
pop
or
xor
mov
xchg
inc
xchg
movsl
in
mov
lcall
dec
and
popf
out
test
jmp
sub
idiv
andl
add
and
loop
leave
std
lock
repnz
int3
lret
mov
mov
rolb
sub
subl
cmp
cmp
ds
xor
int3
sub
push
stc
jmp
mov
lcall
sub
and
test
adc
in
sub
aam
fs
xchg
shll
test
in
enter
mov
cmp
fs
addr16
mov
lret
gs
mov
sbb
pop
mov
xchg
jmp
or
jg
pop
pop
sahf
subl
dec
pop
mov
mov
mov
sti
mov
and
popa
push
mov
cmp
andl
scas
sbb
mov
jb
outsl
popf
sub
dec
sub
push
add
xchg
cmp
mov
negb
xchg
cmp
jb
andl
out
xor
inc
mull
lds
or
sub
cs
in
jb
xor
cmpl
and
fwait
cmp
xor
sub
aaa
cmp
mov
orl
and
mov
xor
test
popa
mov
push
pop
mov
orl
cmp
jno
test
insl
xor
mov
clc
jae
jo
test
add
imul
jp
sbb
push
rorb
mov
mov
push
mov
cs
inc
repz
cmp
sbb
push
sarb
sub
xchg
shll
mov
sub
sbb
add
pop
icebp
popf
scas
cmp
jnp
mov
or
sub
sub
stos
clc
jb
jo
cs
mov
lea
xlat
or
dec
loopne
jae
or
xor
stos
leave
push
jbe
dec
out
movsl
mov
push
and
push
adc
cmp
adc
mov
mov
adc
lcall
daa
jnp
inc
jns
movsb
loope
cmp
inc
pop
mov
test
scas
je
roll
std
subl
aas
gs
jle
loopne
insl
icebp
mov
iret
add
out
ret
mov
mov
mov
test
test
popf
popa
addl
lock
push
jae
pop
and
ret
pop
subl
popa
icebp
pop
enter
ds
movsl
mov
div
sub
xchg
pop
pop
sarb
dec
pop
ret
icebp
and
lods
sbbb
sub
pop
fidivl
xor
clc
push
imul
or
adc
jge
cld
movsb
sbbb
addl
dec
sub
rcrb
test
ljmp
andb
out
inc
in
fcoml
ds
test
and
mov
movsb
cltd
sub
sahf
test
cmp
sti
push
inc
rorb
dec
movsl
aam
and
mov
sbb
or
hlt
xchg
xchg
adc
insl
ret
cltd
fisubs
push
mov
cmpsb
xor
and
aas
outsl
stos
sbb
test
xorl
inc
mov
stos
mov
add
and
xchg
dec
mov
fisubl
in
bound
lret
or
andl
fcmovbe
pushl
mov
jns
scas
xlat
test
fiadds
sub
cld
movsl
ret
mov
test
sbbl
jl
icebp
sbb
sub
dec
negl
jo
jg
mov
scas
test
shlb
pop
pop
inc
jb
mov
push
push
aad
add
and
or
inc
add
push
mov
je
test
lock
cmpsb
sub
mov
in
push
jg
and
subb
pop
mov
das
idivl
inc
ret
andl
push
into
sbbl
and
inc
mov
subl
dec
cmpl
imul
jge
mov
mov
mov
add
hlt
cli
pop
push
andl
ljmp
out
adc
xchg
push
ja
xchg
dec
dec
jns
push
jp
mov
es
and
mov
cmp
testl
loopne
cmpsb
nop
jno
ret
mov
lock
sbbl
inc
test
movsb
test
test
mov
les
adc
xorl
jmp
pop
mov
incl
push
and
sbbl
fildl
rolb
sub
das
jp
andl
mov
mov
push
xorl
sbb
sti
cli
sbb
icebp
add
push
mov
subl
in
xorl
cwtl
xor
sahf
inc
lea
repnz
clc
addl
xor
inc
add
or
fmuls
addl
or
pusha
outsb
xor
jecxz
icebp
jnp
mov
sbb
inc
mov
fldl
test
sbb
repnz
ror
adc
stos
or
mov
jge
leave
insl
inc
mov
adc
gs
dec
adc
dec
loope
mov
andl
in
push
push
popa
vcvtdq2ps
andl
js
loope
inc
into
mov
test
test
int
cmpl
inc
dec
mov
shl
imul
cmp
jnp
jp
in
aam
jns
shll
xchg
jge
cmp
jg
push
xor
add
and
mov
dec
sbb
push
push
or
int3
pop
roll
or
int
push
in
hlt
dec
lea
and
js
lahf
andl
mov
mov
in
jno
xor
scas
test
enter
test
mov
arpl
cli
or
mov
push
cmpsl
inc
scas
fmull
xchg
pop
add
and
pop
ficoml
sub
lcall
push
push
mov
adc
out
shlb
pop
jp
or
test
orl
dec
jns
subl
imul
inc
sbb
mov
sbb
mov
fldenv
dec
outsl
mov
or
cmpsb
mov
mov
push
mov
pop
push
jecxz
insl
mov
xor
mov
pop
pop
push
xor
mov
mov
pop
js
es
mov
test
out
lret
adcl
aad
mov
xchg
mov
mov
aaa
mov
shl
orl
sbb
mov
in
push
sbb
lea
mov
mov
sub
es
icebp
push
mov
add
cld
sbb
loop
popf
cmpl
bound
idivl
mov
mov
jg
andl
mov
rclb
cmp
sub
imull
xor
loopne
xor
subb
stc
inc
outsb
or
les
movsb
fildl
scas
pop
jp
mov
push
mov
mov
fwait
mov
ljmp
add
into
dec
push
xchg
icebp
mov
fmuls
fisubrl
adc
dec
adc
repnz
push
jge
test
push
mov
jnp
and
popa
subl
pushf
test
mov
mov
push
mov
sub
mov
subl
push
cmp
jle
inc
mov
ds
ror
pop
xor
fcoms
or
in
lea
xor
and
push
mov
cwtl
jge
mov
and
mov
imul
cmc
or
xchg
mov
jl
es
aam
jne
and
mov
xor
insb
inc
dec
inc
mov
xor
loope
stos
and
leave
outsb
aas
mov
mov
and
andb
pop
rolb
fmull
xchg
popa
xor
ja
jmp
inc
and
enter
popf
sub
cmp
dec
loop
xchg
sbb
sbbb
je
pop
jae
mov
shlb
stos
adcl
dec
test
addl
cli
and
movsb
xchg
fstpl
fstpt
ds
outsl
pop
negb
aaa
adc
popf
cmp
addl
subl
sahf
into
out
xorl
mov
dec
and
inc
js
mov
cmp
push
pop
pusha
cmpsb
mov
bound
cmpb
ljmp
test
popa
nop
xor
sub
popa
cli
mov
aam
stos
in
xor
lea
xor
inc
pop
mov
jbe
mov
fildl
sbb
cmp
mov
adc
inc
movsb
mov
mov
cwtl
mov
movl
xor
ret
sub
mov
aad
or
push
and
and
pop
mov
mov
pop
inc
cli
andl
pop
add
cmp
pop
mov
xlat
insl
sub
mov
sbb
add
dec
pop
or
xlat
push
je
jns
leave
pop
lea
sbbl
loop
xorl
iret
jne
dec
inc
mov
cmp
imul
xchg
movsb
adc
mov
outsl
jg
adc
repz
mov
mov
pslld
icebp
fwait
test
inc
mov
lea
pop
out
xor
rcrl
xchg
ret
movb
mov
mov
movsl
cld
push
push
and
sub
out
test
mov
lock
popa
pop
or
sbbl
add
das
add
or
sarb
xor
mov
scas
jno
dec
scas
rcrb
bound
inc
push
sub
lret
rolb
pop
std
lods
mov
xor
pop
call
cmp
cld
stc
lods
push
sbb
in
aas
rolb
leave
out
int
add
adc
sarl
or
add
pop
pop
jo
fs
cmc
mov
andl
adcl
adc
sti
shrb
and
sub
push
repz
sbbl
add
ficomps
jo
adc
aad
popf
shrl
lret
movsl
out
cmpsl
push
sub
or
fadds
fst
xor
and
icebp
cli
dec
notl
addr16
sbbl
mov
adc
in
ds
in
bound
xor
ficomps
jmp
hlt
test
xor
mov
out
xor
mov
lahf
mov
pop
cli
ja
sub
repnz
mov
adc
andl
push
adcl
or
mov
dec
ficomps
lea
je
sbb
les
add
test
add
pushf
ja
inc
pop
dec
or
aad
icebp
xor
stos
das
push
dec
cmp
rcll
xchg
adc
mov
testb
mov
push
mov
je
pop
xorb
inc
out
pop
std
andl
cmpsl
mov
inc
test
sbb
adcl
pop
loop
pop
jge
inc
out
movsl
mov
mov
pop
mov
cld
sbb
mov
push
pop
int3
sub
push
cli
mov
push
mov
mov
mov
pusha
in
mov
xchg
into
daa
std
inc
inc
pop
xchg
sub
or
lea
adc
lods
pop
lea
loope
push
mov
addr16
in
cmpsl
jns
xorl
mov
push
adcl
mov
or
pop
ret
popf
outsb
test
mov
push
mov
sbb
pop
inc
xchg
add
sub
icebp
mov
ret
filds
fstps
fadds
repz
inc
mov
pop
adc
call
add
xorl
pop
movsb
outsl
lods
scas
mov
lods
out
outsb
xlat
sbbl
icebp
sbb
enter
pop
cmpl
push
mov
loopne
mov
outsb
xchg
orl
js
imul
mov
or
and
ret
mov
addl
rcll
push
xchg
push
pop
fldcw
inc
ret
negl
xor
cmp
lea
pop
mov
cld
sub
xchg
shlb
mov
or
movsl
cmp
outsl
bound
mov
pop
cs
adc
adc
dec
mov
loop
movsb
test
pop
mov
mov
cmpsl
jb
mov
andl
cmp
insb
mov
test
xchg
cli
pop
adc
push
lods
mov
jb
jge
rolb
xor
inc
stos
sbb
pop
mov
movsb
lods
aam
test
pusha
sbb
mov
cmp
jo
movsl
cmpl
mov
add
pop
lods
jp
mov
xchg
inc
cli
cmp
cmp
pop
mov
je
jge
adc
das
cmpl
add
jno
inc
sahf
mov
xchg
dec
out
jp
push
shrb
jb
minps
mov
and
jecxz
ret
xor
push
rcll
arpl
cmc
xor
sbb
mov
and
or
adc
jae
xor
ficompl
xchg
outsb
lods
sbb
aas
xchg
xchg
cmpl
xchg
push
sbbl
adc
xor
inc
adc
xchg
xchg
dec
jns
adcl
mov
int
push
lea
mov
dec
xlat
jne
inc
mov
scas
sub
ljmp
pop
dec
in
mov
stos
adc
mov
push
ret
cmpsb
push
push
mov
lods
cmp
and
pop
mov
and
push
inc
jge
adc
arpl
aaa
call
fdivp
bound
sbb
ss
stos
test
sbbl
adc
inc
mov
and
lods
test
orl
or
shl
mov
pop
rcrl
cmp
mov
cmc
mov
add
roll
mov
aam
push
pop
xlat
faddl
and
cmp
mov
inc
call
dec
outsl
test
shlb
push
add
popa
or
jp
dec
adc
movsb
sub
fmulp
mov
outsb
fildll
insl
dec
jnp
jb
pusha
mov
sub
popa
pop
pop
jne
push
stc
aam
ror
ja
inc
mov
cli
dec
lcall
insl
sub
mov
clc
stos
mov
jg
mov
add
xchg
repnz
insl
mov
xlat
fldenv
fcomp
push
fisubrl
push
push
cmpl
and
xchg
dec
cs
xchg
adc
and
dec
mov
lahf
addl
mov
cli
loopne
lds
subl
xor
mov
push
outsb
stc
push
jp
pop
pop
mov
pop
and
data16
mov
subl
jb
testl
sub
or
pop
pop
icebp
addl
incb
ss
repnz
push
pop
enter
mov
shl
stos
insl
jne
inc
loope
mov
mov
loop
out
jnp
test
mov
je
mov
icebp
inc
sbb
and
adc
sahf
arpl
adcl
aas
lcall
inc
dec
mov
add
jb
mov
popf
adc
mov
and
iret
jecxz
push
sub
lock
lds
push
loopne
cmp
cmpsl
inc
daa
cmpsb
xorl
imul
in
mov
cmpsl
mov
cmpsb
addr16
xor
xchg
add
push
outsb
in
inc
sbb
or
mov
xor
mov
or
jmp
pop
movsl
jle
dec
idivl
add
mov
lods
sti
das
int3
andl
lcall
inc
pop
mov
mov
cmp
adc
aaa
and
das
popa
scas
addl
cmp
and
mov
mov
sbbl
rolb
scas
clc
jae
pop
xor
mov
js
je
or
push
mov
int3
sub
pop
lea
mov
sbb
adc
int
vpsubq
fcompl
pusha
adcb
pop
xchg
or
je
cli
dec
sbb
xor
subl
xor
hlt
jle
ret
sbbl
insl
and
pop
orl
sahf
int3
cli
mov
in
cmp
popf
xchg
xchg
test
and
daa
mov
aas
divb
jo
bound
add
push
add
icebp
push
pop
mov
xchg
lahf
or
int
xchg
mov
ss
sahf
sub
roll
sub
imul
andl
mov
add
cwtl
and
cmp
cmpsb
mov
adc
jmp
xchg
sbb
loopne
add
notl
fldenv
mov
lods
les
mov
jle
ret
xchg
and
ljmp
inc
mov
xor
arpl
cmpsl
loope
std
jb
addr16
subl
sub
xlat
mov
pop
mov
xor
mov
pop
loopne
push
cmp
pop
stos
les
icebp
cmpl
outsl
adcl
fcmovnbe
subl
flds
lods
lods
xor
adcl
adc
iret
xorl
push
pop
or
jae
repnz
addr16
xlat
fmuls
jp
mov
xchg
fisubl
and
dec
ds
xor
adc
lahf
push
xchg
fsubr
nop
ja
stos
and
mov
mov
xchg
in
stos
push
int3
mov
pop
test
in
jb
gs
or
cmpsl
cli
xor
dec
jne
sbb
inc
push
rolb
jae
divl
subl
cmp
ret
arpl
sub
mov
dec
pop
push
bound
pop
repz
sub
xchg
imul
push
mov
dec
subl
push
cmp
sahf
std
mov
pop
enter
rcr
sub
sarb
xor
lcall
jae
adc
push
sbb
mov
rcr
out
or
dec
pushf
andb
jno
sub
pop
mov
aaa
mov
mov
subl
push
add
dec
sub
outsl
mov
adcl
test
test
inc
sbbl
mov
add
lahf
xchg
pop
mov
xor
popa
push
inc
adc
add
ds
mov
sub
sbb
nop
xorl
in
xchg
popa
jle
loopne
and
das
jo
aad
mov
push
mov
scas
cmp
xchg
dec
out
movsl
pop
leave
addl
pop
jno
push
mov
in
xor
jge
arpl
imul
push
aam
pop
rorb
sub
andl
xor
inc
mov
lock
aaa
pop
lret
in
cmc
cmp
fistl
xor
mov
pop
mov
scas
subb
xor
jle
and
in
int
mov
cmp
xorl
xchg
cmp
stc
jb
jge
icebp
xor
cmp
imul
dec
mov
jle
lahf
jb
dec
mov
repnz
pop
cmp
mov
popa
adc
jns
adc
and
mov
mov
stos
sarb
dec
out
sub
jne
cmc
ret
adc
mov
add
pop
xor
mov
adc
mov
cmpl
mov
sbb
int3
and
jp
jno
pop
jnp
inc
xchg
loopne
mov
dec
push
jmp
dec
cmp
push
orl
loopne
jno
or
ret
inc
jge
push
lahf
mov
sbb
xchg
mov
jo
loopne
mov
mov
mov
mov
fdivrl
test
mov
les
adc
dec
mov
inc
ja
test
lock
pop
cmpsl
pushf
lret
sub
cmp
out
inc
loopne
xor
test
and
sti
pop
inc
xor
push
jge
bound
sub
adc
cmp
sbb
sub
andl
ss
jno
mov
adcw
inc
push
out
xchg
jl
fidivl
push
jno
or
das
push
iret
rolb
cmp
fcomps
sub
adc
sub
jno
fimuls
jg
push
aaa
addl
sbb
aam
mov
es
cmp
inc
mov
add
adc
sub
push
or
das
cmp
xorb
cmpb
lahf
sub
push
sbb
fdivs
jno
lea
sbbl
je
xchg
test
cli
movsl
push
fidivrs
add
adc
cmp
in
call
cmpl
inc
cmp
adc
add
adc
mov
movsb
mulb
sbb
mov
fwait
xchg
test
movsl
mov
push
lods
ja
movups
add
les
push
mov
xlat
mov
test
repnz
adc
fstl
push
shll
gs
jecxz
icebp
rclb
or
dec
push
and
and
sbb
out
and
sti
in
add
ret
enter
ret
xchg
or
add
ret
and
add
test
shrl
mov
arpl
xchg
adc
cmp
cwtl
shl
push
daa
mov
call
mov
inc
nop
fsts
push
add
loope
and
pop
mov
fnstenv
push
sub
lret
ficomps
xlat
dec
in
cmp
sub
test
in
push
pop
add
call
xchg
jnp
cli
ret
fcmovbe
sub
sbb
xchg
mov
pusha
hlt
in
or
lds
xor
ljmp
and
adc
xlat
sub
pop
push
les
mov
xchg
push
xchg
fisubrl
cmp
ljmp
sbb
dec
jmp
pop
cmp
icebp
mov
test
cmp
pop
stc
and
dec
lret
cmp
movsb
sti
jge
lcall
ljmp
adc
add
cmc
push
jo
cltd
jae
imul
or
inc
ss
pusha
lds
sub
imul
aam
stc
je
cmp
push
sub
xchg
add
aaa
cmp
in
movsl
test
stos
add
adc
in
mov
or
mov
push
inc
pushl
ret
je
fmull
mov
inc
mov
lret
add
sub
or
xlat
xchg
aas
sub
sahf
sub
xchg
out
test
xchg
sbb
jg
cltd
xchg
popf
aaa
pop
jo
in
mov
je
popf
xchg
popf
popf
mov
popf
sbbl
lret
call
or
ret
cmc
stos
mov
mov
icebp
mov
add
or
or
gs
stos
and
cmpsb
xchg
shrb
adc
push
mov
fnstenv
inc
mov
xlat
lret
movb
jge
movsl
sbb
pop
xchg
or
or
cmp
xchg
test
testl
fs
or
pop
mov
dec
dec
xchg
addl
push
xor
or
imul
or
testb
push
out
inc
je
fdiv
or
mov
sub
ss
ret
sub
lds
and
or
adc
mov
cmp
adc
out
push
push
insl
aad
cli
sbb
xchg
ss
insl
mov
addb
fwait
jp
xlat
cli
cmpsb
popa
daa
cmc
mov
jae
test
xchg
xchg
test
lret
cmp
xor
xchg
adc
pusha
pop
push
xlat
incb
or
sub
sub
mov
mov
fwait
shll
addl
push
clc
js
andb
and
inc
mov
add
lds
scas
sub
xchg
notb
out
repz
pop
out
push
clc
xchg
mov
subl
mov
nop
sbb
loopne
movsl
cmpb
les
ljmp
pushf
mov
mov
sbb
xlat
pusha
mov
mov
pop
cwtl
call
outsb
aam
mov
popa
adc
pop
lret
inc
fsubrs
pop
movsl
leave
in
iret
jp
iret
sub
adc
jb
jg
lds
movsl
mov
cltd
enter
adc
and
mov
xchg
push
jmp
mov
pop
push
movsb
push
in
nop
push
das
push
xor
mov
inc
ljmp
jp
data16
sub
leave
fimull
sub
shlb
add
mov
lret
movsl
incb
mull
clc
into
imul
notl
sbb
push
shl
lea
imul
jle
fsubrl
mov
inc
pop
cmc
mov
sbb
fs
mov
mov
push
xchg
and
mov
les
mulb
sti
push
into
mov
cmp
cmp
mov
test
gs
or
lcall
icebp
mov
sahf
or
inc
sbb
xor
and
cmp
add
rol
adc
icebp
fs
and
mov
bound
xor
mov
dec
sbb
xor
in
mov
and
mov
mov
add
les
adc
in
xchg
ret
divb
sub
pushf
shl
sbbl
popf
nop
ss
clc
and
jmp
enter
je
cmp
push
push
mov
out
in
loopne
stc
lret
xlat
cmp
push
add
adc
frstor
mov
mov
adc
popa
xlat
jb
sbb
mov
iret
cmp
out
mov
fisubs
inc
xor
and
push
pop
mov
in
xchg
or
jecxz
mov
les
repz
aam
fwait
out
and
adc
ret
sbbl
push
jmp
add
lds
adcl
ss
fs
cld
sub
mov
les
repnz
arpl
lret
addr16
ret
fisubs
jb
push
cmp
sub
jo
orl
or
orl
sbb
sbb
push
sbb
adc
push
insb
imul
pop
bound
adc
das
test
insl
dec
pop
orl
sbb
lcall
outsb
out
orb
xchg
adc
test
jmp
cmp
jmp
add
dec
sbbl
sub
iret
movsb
mov
outsl
stos
sbb
sbbl
divb
iret
andl
js
out
pop
cmp
out
bound
and
xchg
jne
push
jl
and
stos
fcomps
sub
xor
mov
and
out
cld
mov
xorl
ret
enter
cs
or
andl
iret
aaa
daa
loop
pop
imul
xchg
lods
pop
and
xchg
jp
xchg
test
xor
rcrb
cs
jo
jp
cmpl
xchg
mov
fsubs
out
or
dec
pop
testb
imul
cmc
ja
jecxz,pt
adc
sahf
xor
jae
adcl
filds
subl
add
sti
push
aam
lea
push
popa
pop
je
push
icebp
mov
inc
ret
cmpsl
adc
stos
mov
mov
cli
and
clc
push
aaa
push
daa
mov
aas
jns
data16
test
xchg
sbb
sbb
xor
nop
mov
xchg
inc
lods
jbe
pop
inc
and
popf
adc
lret
in
adc
cs
out
andl
xchg
iret
and
sti
pop
lock
mov
andl
dec
ficompl
cmp
orl
pop
in
outsl
jecxz
addr16
add
shl
jmp
subl
xchg
and
andl
mov
adc
add
add
xlat
shll
and
or
leave
xorl
and
jge
adc
push
dec
jns
jmp
adc
je
xchg
orl
jecxz
sbbl
fldt
rol
push
fdivrs
adc
jno
enter
jns
aad
fistpl
push
push
xor
adc
popa
mov
iret
push
sbb
js
mov
sub
repz
iret
jle
loop
jp
mov
sbb
out
mov
dec
out
outsl
movsb
icebp
sub
out
outsb
mov
add
sbb
xchg
std
cmp
data16
and
jb
ret
or
and
or
cmp
in
orl
repnz
repz
ret
sti
sbbl
sub
mov
mov
mov
loope
sahf
jg
inc
jb
jp
out
dec
fildl
addr16
mov
adc
in
dec
xor
repnz
mov
adc
and
popl
shlb
out
lock
mov
fistpl
cmpsb
xchg
and
lock
jg
je
orl
dec
insl
mov
popa
js
xlat
dec
xchg
mov
subl
inc
test
sub
inc
repnz
sub
push
cmpl
mov
pushf
add
xor
insb
mov
mov
cmp
jmp
loope
xlat
add
cmpsb
mov
data16
dec
and
mov
out
fpatan
mov
es
adc
pushf
addl
or
and
imull
stos
and
sub
lds
pop
sbbl
and
sbb
addl
out
movsb
jle
push
inc
sbb
lods
bound
push
incl
sbb
jge
sti
rol
aas
lea
xor
call
mov
pop
push
rclb
imul
loope
mov
ss
cmpb
adc
inc
or
pop
xor
fmull
ret
push
popf
jno
push
fiaddl
mov
inc
xchg
inc
in
dec
adcl
push
pop
fsubrs
lahf
imul
mov
shrl
fstpl
or
imul
addl
sub
icebp
jge
lock
or
sbbl
daa
or
mov
jae
xorl
outsl
inc
das
in
rolb
movl
icebp
or
push
cmp
mov
scas
and
and
into
ds
add
sbb
fdivs
inc
mov
pop
sub
loope
shlb
mov
or
xor
sub
movsl
cmc
inc
pop
add
dec
aam
and
cmp
movsl
enter
int3
int
and
inc
sub
sbb
push
jne
insl
fistpll
xchg
mov
les
add
lods
lahf
mov
repz
push
push
std
push
mov
adc
cmp
and
test
xchg
or
adc
mov
cmc
sbb
and
iret
mov
mov
dec
lods
orl
inc
xor
pop
fxch
sahf
shll
les
cmpl
jge
push
subl
out
and
mov
insb
cmp
pop
cmc
cltd
insb
jmp
sub
movsl
call
roll
ret
out
in
xorl
cmp
cwtl
mov
mov
and
shlb
leave
hlt
push
and
movsl
stos
rorl
mov
cmpl
out
int
jmp
pop
je
dec
cmp
icebp
mov
cmp
mov
mov
xorl
sahf
cli
xchg
mov
mov
icebp
inc
movsb
arpl
jbe
sbb
pop
jno
out
pop
cmp
cmpb
or
xlat
addr16
jle
inc
js
jp
inc
sbbl
movsb
subl
pop
fbstp
mov
mov
xchg
or
lahf
push
push
jae
cmp
and
xchg
xchg
push
stc
mov
orb
sub
mov
mov
jne
out
int3
cmpsb
sbb
std
shrl
adc
jns
xchg
addl
inc
cmp
dec
stos
clc
dec
jmp
sub
or
fistpl
xor
mov
and
jb
out
divps
sbb
fisttpl
test
in
inc
push
xchg
cwtl
adc
mov
icebp
cmc
jo
xor
and
dec
aad
xor
and
dec
inc
xchg
loop
in
adc
mov
mov
mov
xchg
cmp
outsb
push
cmp
das
mov
and
insl
outsb
cmpl
or
out
sti
mov
jecxz
sub
outsl
call
mov
fdivp
pop
aas
xor
xorl
pop
sbbl
pop
adc
loop
sub
and
sti
xchg
mov
cmp
fnstcw
sahf
orl
lods
push
adc
dec
pop
jge
xchg
mov
cmp
push
adc
dec
xor
jg
mov
stos
push
mov
or
push
movl
push
push
add
mov
xchg
mov
in
jecxz
fs
xor
sub
repz
push
inc
aad
add
and
xor
cmp
ljmp
out
jae
into
cwtl
cmpsl
in
push
inc
cmp
call
xchg
push
ficoml
mov
lods
mov
orl
push
std
mov
and
cmp
sub
in
or
xorl
jge
sbb
sub
inc
loope
mov
pusha
stos
mov
pop
push
subb
xor
sub
int3
mov
xchg
xchg
movsb
cmp
inc
and
lret
stos
sbbl
push
or
sarb
xchg
shrl
lds
jns
idivb
push
push
aaa
sahf
and
gs
daa
dec
sub
shll
mov
ficompl
rcr
outsb
sub
cli
pusha
jo
pushf
pop
mov
fs
sub
subl
mov
int3
dec
fldt
mov
aam
inc
mov
jno
movsb
push
ljmp
dec
rorl
fmuls
push
push
sarl
or
cmc
jg
cmpsl
add
sub
rclb
loope
pop
and
in
dec
cmp
ja
pop
xorl
fiaddl
add
testl
push
loopne
addl
xchg
out
xor
jge
enter
inc
clc
pop
subl
xorl
dec
out
leave
or
cmpsl
lds
cwtl
xchg
jbe
adc
adc
xorl
into
ja
adc
jb
shrb
ljmp
adc
jnp
or
pop
push
icebp
fidivrl
int
into
in
add
and
inc
jge
test
clc
mov
addl
shrl
push
aam
push
cli
add
cmpl
pop
and
jge
or
sub
xlat
insb
subl
loope
ljmp
mov
cltd
mov
iret
nop
pop
pop
orl
jnp
sbbl
std
xchg
repnz
call
and
in
and
xor
loopne
inc
xchg
ds
fisubrl
ret
rcll
loope
lock
fwait
andl
shrb
test
mov
mov
add
lret
icebp
cmp
fldcw
ljmp
inc
in
cmp
sbb
subl
sub
jo
iret
outsb
test
adc
aam
lods
adc
insb
les
ljmp
jge
int3
inc
test
mov
and
jo
cmpl
add
sub
or
sub
std
xchg
jne
mov
in
xor
jo
int
sub
cmp
pop
sub
movsb
xchg
push
pushf
movb
or
push
xorl
xchg
stc
fidivrl
inc
out
or
subb
icebp
fcom
push
scas
fnstcw
pop
cmp
mov
or
sub
jo
dec
jns
sbbl
mov
cmp
mov
clc
jbe
add
mov
sbb
clc
ret
std
inc
repnz
lea
mov
sbb
xchg
pop
sub
lods
mov
popf
test
sbb
lret
cmp
or
adc
das
adcb
stos
adc
xchg
pushf
ret
xor
and
push
pop
addl
fldl
jmp
mov
ja
cmc
jbe
inc
out
mov
mov
lods
daa
mov
or
mov
pop
rolb
sub
out
movsb
cld
xchg
mov
lcall
pop
mov
pop
cmp
shlb
inc
cmp
pushf
cmp
sbbl
adc
std
push
sbb
dec
inc
pop
js
cmp
andl
jmp
icebp
xorl
dec
pushf
orl
mov
out
xor
or
dec
mov
push
jns
subl
sbb
movsb
push
push
inc
adc
aad
outsb
fwait
shll
xorl
cmp
sub
testl
dec
orl
push
cmp
orl
jne
ljmp
add
lods
aaa
xor
orl
sub
outsl
xor
pop
dec
pushf
and
push
mov
and
dec
xchg
addl
scas
jne
sbbl
lcall
outsl
sbb
and
repnz
cmpsb
xchg
insb
scas
mov
hlt
sarb
jnp
push
inc
adc
orl
div
xlat
sbbl
jnp
ret
test
test
out
mov
jae
push
addl
push
mov
addl
pop
mov
push
push
xchg
repnz
outsb
xor
jae
add
int
mov
shlb
mov
arpl
fwait
lock
fadds
pop
push
lds
aas
and
cli
popa
sub
pop
ja
clc
int
sbbl
test
pop
pop
cmp
outsl
outsb
inc
xchg
insb
or
addl
dec
movsl
movsl
out
xor
mov
jo
aad
inc
xchg
dec
mov
cwtl
fldz
xlat
push
mov
ret
xchg
insb
or
mov
data16
fldl
xchg
push
mov
pusha
or
cld
into
loop
sub
test
cli
movsl
repnz
jns
adc
sub
and
or
subl
pop
pop
cli
icebp
sbb
fwait
adc
jmp
insb
stos
imul
push
subl
popf
xor
cmp
sbbl
jnp
xor
dec
or
xchg
repnz
movsb
push
pop
push
jne
mov
icebp
sub
or
cwtl
adcl
lret
fadds
lock
add
lahf
aas
jns
sbbl
cmp
lods
mov
xor
and
push
sub
add
or
add
imul
xor
sbb
mov
repz
int3
fnstenv
addr16
scas
cld
test
dec
aas
jbe
fmul
inc
insl
inc
xorl
inc
lock
push
push
add
inc
dec
cmpsb
push
sbb
loop
and
pop
sbb
roll
push
cmpsl
inc
mov
sbbl
outsl
movsb
out
inc
cmc
test
and
movsb
push
sahf
push
add
inc
mov
add
cmp
movsb
lcall
jns
mov
xchg
push
icebp
dec
cltd
sbb
sbb
adcl
push
out
xlat
mov
or
sbb
subb
mov
iret
and
sbb
pop
in
adcl
les
sahf
inc
mov
out
loope
mull
fistl
dec
lret
movsl
addl
fcoml
mov
push
sub
xchg
inc
sarl
test
mov
add
int3
xor
mov
nop
or
xchg
mov
sbb
add
icebp
mov
fmull
data16
mov
xchg
or
lea
mov
or
popa
mov
push
mov
lret
cltd
out
cmp
mov
sbb
jle
ds
fidivl
jno
mov
jg
imul
into
lea
add
shlb
lock
mov
loop
push
clc
aad
push
push
mov
or
lods
cmpsl
jmp
jg
roll
and
subl
adc
mov
cltd
inc
xor
jns
push
and
cmp
xchg
lcall
mov
push
pop
cli
mov
mov
dec
mov
fs
push
andl
and
ficomps
mov
adcl
test
clc
and
sbb
lods
stos
sbb
mov
mov
movsb
jo
lods
sbb
cli
push
mov
loope
push
int3
jmp
ja
mov
stos
roll
sbb
cltd
shlb
dec
mov
xor
add
add
in
in
mov
in
mov
xor
into
push
jo
push
cld
push
popa
xchg
pop
fistpl
push
mov
cmp
adc
push
cmpl
bound
add
jp
jno
imul
mov
cmp
daa
repz
mov
jbe
cwtl
test
out
loope
movsb
sarl
movsl
arpl
mov
cmpsb
outsb
cmpl
fadd
push
xorl
mov
xchg
pop
loope
inc
ljmp
mov
jne
dec
jge
xor
je
mov
inc
mov
jbe
or
add
pop
cs
call
adc
stos
andb
imul
mov
mov
push
sbb
ja
add
out
adc
cmp
movb
sub
mov
jecxz
lcall
xchg
adc
cwtl
mov
mov
adcl
ret
inc
add
insl
jle
mov
cmp
orb
mov
popf
fisubs
aas
sbb
xchg
das
sbb
int
lea
mov
mov
gs
pop
pop
shlb
scas
mov
daa
orl
enter
fcompl
imul
pop
inc
int
mov
test
loopne
mov
mov
dec
sbb
jns
sbb
adc
je
dec
mov
in
adc
and
xchg
inc
das
lock
adcl
mov
gs
inc
mov
in
bound
ljmp
adc
enter
lds
inc
xchg
pop
mov
push
stos
mov
sbb
lcall
push
aad
fs
dec
cmp
adcl
aaa
adc
scas
mov
inc
test
scas
pop
mov
mov
inc
jl
dec
icebp
scas
dec
lea
test
add
adcl
lods
rol
and
sbb
scas
cmpsb
stos
insl
jl
jge
sbbl
dec
mov
push
push
jl
xor
mov
jne
mov
adcl
pusha
aas
lcall
sbb
push
mov
jnp
push
push
push
cmpl
pushf
sub
xor
daa
jae
orl
inc
mov
xor
fs
addl
pop
subb
movsb
int3
push
into
mov
add
aas
inc
mov
sbb
inc
xchg
xor
adcl
pop
inc
jno
subl
fmull
imul
subl
dec
icebp
cld
sbb
lahf
fs
jg
inc
sbb
cmpsl
adc
lea
add
jae
inc
test
scas
and
repz
dec
shl
mov
add
adc
adcb
sti
jl
mov
fstpt
push
push
ret
jne
cmp
lods
not
enter
incb
lret
out
ret
xor
stos
mov
fcoml
js
scas
mov
cmp
inc
divl
adc
push
cltd
push
jg
pop
psraw
stos
cmc
outsb
insb
adc
inc
nop
xor
cmpsb
shl
cmp
add
pop
cmpl
xor
xorl
pusha
je
pop
addl
lcall
lods
xor
lss
leave
lock
sub
adc
stc
inc
fwait
or
jle
mov
sub
push
mov
jl
mov
adcl
mov
int3
adcl
inc
xchg
xchg
and
mov
repz
mov
movsb
push
mov
push
adc
ja
mov
xchg
stos
adc
sub
xor
add
movsl
push
mov
imul
movsb
adc
out
repnz
fiadds
cmp
es
add
xchg
mov
rcll
push
arpl
test
or
rorb
leave
push
test
or
orb
jno
setnp
add
lahf
popf
daa
jg
sub
cmpl
dec
mov
cmpl
shr
mov
lahf
jne
insl
cmp
dec
or
lret
flds
cmp
xchg
cmpsb
loop
nop
fdivrs
fldt
lahf
xor
cs
sub
pop
push
adc
push
adc
test
loop
xchg
movsl
outsl
inc
push
jo
aad
cltd
or
cs
loope
add
add
xor
cmpsl
pop
and
xchg
aas
inc
lock
subl
hlt
push
xorl
sbb
subl
leave
ret
sbb
jae
mov
pushf
jne
repz
js
push
pop
movb
or
mov
adcl
bswap
imul
lock
aas
inc
cld
xchg
push
daa
mov
int
and
testb
orl
loopne
movsb
ret
sub
inc
jo
mov
adcl
xchg
aas
scas
outsl
dec
add
adc
leave
xchg
push
push
and
test
outsl
push
neg
loopne
mov
jns
push
mov
inc
or
mov
stos
pusha
rcll
adc
out
movsl
jno
xor
outsl
jne
jg
cwtl
test
loope
std
mov
mov
pushf
jmp
push
ljmp
mov
xorl
or
add
mov
dec
add
sbb
adc
cmp
test
inc
xchg
sub
icebp
popa
mov
or
or
mov
sbb
jae
mov
mov
xchg
and
insb
outsb
pop
mov
pushf
outsl
jns
mov
addl
rorb
sbb
scas
subl
fsub
lcall
xchg
jno
fldl
jns
dec
or
lahf
and
sub
subl
mov
sub
inc
imul
lret
xor
out
stos
push
mov
js
sbb
nop
cmp
add
pop
xchg
clc
xchg
push
aam
ret
mov
mov
xor
xor
sub
adc
cmp
fimull
jecxz
cmpb
sbb
adc
addl
outsb
or
ficoms
rorl
jbe
arpl
sbb
pop
imul
xchg
daa
or
cmp
sbb
cmpsb
xor
push
ds
xor
or
xchg
cwtl
xchg
push
inc
mov
movsl
or
inc
frstor
mov
andb
xchg
pop
push
xchg
out
imulb
leave
adcl
jno
inc
jns
rcrl
jg
xchg
lea
push
outsb
pusha
inc
outsl
mov
adc
pop
or
ret
xchg
jle
and
cmpl
mov
orl
push
lret
in
mov
sbb
sti
xorl
rclb
outsb
xlat
addr16
adc
int3
push
inc
and
ja
jb
mov
imul
icebp
int3
repnz
adc
or
andl
xchg
sbb
out
js
mov
mov
mov
add
xchg
cwtl
sbb
ret
add
cmp
inc
cmpl
movsl
inc
rolb
xlat
jbe
xchg
gs
mov
subl
xor
pop
bound
jns
push
mov
push
in
sbb
lods
sbb
enter
jno
adc
mov
insl
out
cmc
adc
mov
sti
into
inc
add
cmpsl
lret
mov
subl
jae
aam
xor
sub
js
sbb
orl
sbb
pop
push
lcall
notl
xchg
mov
loope
pop
fcomp
jp
xchg
je
xchg
jle
pusha
mov
pop
pop
mov
imul
push
in
int
shlb
notb
fmul
out
and
cmp
clc
aaa
mov
push
std
xor
orl
mov
mov
pop
cltd
pop
ret
mov
movsl
icebp
mov
xor
cmp
or
push
fbld
xlat
in
mov
ss
repnz
dec
hlt
mov
jge
lea
subl
cmp
sub
hlt
lds
push
add
data16
xor
mov
and
nop
pop
mov
sub
test
daa
mov
xor
out
sbbl
add
pop
test
je
sbbl
fstps
add
cmp
or
imul
jmp
mov
adc
jg
xorl
adc
or
fildl
lret
roll
call
les
icebp
mov
bound
repnz
inc
inc
inc
pushw
imul
sbb
xor
aaa
adc
mov
pop
sbb
jb
cli
into
pop
add
mov
sahf
mov
inc
stc
dec
loope
imul
pop
xor
mov
gs
dec
fisttpl
mov
roll
fistps
sub
jp
ret
inc
dec
shll
notb
xchg
gs
sar
roll
mov
andb
and
add
mov
cmpsb
jmp
sub
stos
dec
mov
push
xor
pop
or
dec
pusha
pushf
fstp
test
je
adc
add
sbb
imul
adcl
ror
xorl
hlt
sbb
cmp
sbb
adcl
addb
jne
xchg
mov
xchg
popa
jg
jbe
pop
mov
mov
cmp
stos
je
pop
imul
mov
lret
and
pop
add
or
and
jg
movsb
push
sti
xor
clc
loopne
fstpt
aam
cmpsb
or
xchg
pushf
push
cmpl
inc
icebp
xorl
and
lock
sbb
sahf
addr16
faddp
add
inc
mov
mov
fildll
pop
std
testb
jge
xchg
sbb
xor
or
loop
mull
push
add
enter
push
rcr
mov
inc
cmpsl
sub
outsl
push
add
dec
xchg
cltd
andl
je
xor
sbb
nop
sbb
sbb
push
or
mov
add
push
arpl
ret
push
adc
das
scas
into
ja
xchg
mov
daa
rolb
adcl
or
or
sahf
mov
adc
lock
out
push
jg
sub
mov
pop
fiadds
lret
fsub
out
mov
rolb
xor
sbb
dec
ret
sahf
scas
push
rcrb
icebp
gs
push
mov
das
arpl
mov
adc
lret
and
or
cld
and
inc
cwtl
orb
xchg
dec
xor
adc
cld
lcall
mul
dec
test
outsl
subl
xor
xlat
or
pop
lcall
xchg
and
subl
mov
xor
test
inc
adc
das
cmpsb
mov
mov
fstpl
cmpl
fmulp
dec
mov
ret
add
lods
mov
sbbl
fisubl
xor
loop
addl
insl
adcl
into
fsubl
inc
andl
xchg
repz
xchg
mov
outsl
testl
mov
loopne
ja
test
fst
lret
sbb
andl
jbe
fwait
test
xorl
xchg
adc
jmp
subl
stc
xor
imul
std
jl
iret
xor
xchg
pop
lods
sarb
subl
out
dec
push
jp
xor
push
sub
push
jge
jne
sbb
add
mov
testl
xor
xchg
sub
loop
and
jno
adc
push
out
in
xorl
cmp
mov
xchg
dec
fistps
jbe
pop
repz
divl
sub
push
sub
and
jmp
mov
pusha
adc
sbbl
pop
imull
adc
sahf
icebp
sbbl
cli
rcl
daa
scas
lea
sub
cmpl
jge
pop
orl
faddp
lcall
scas
pop
xor
dec
jmp
xor
nop
or
subb
jbe
cmc
test
js
xor
in
xorl
movsb
psrad
add
outsb
or
mov
lret
or
cld
movsb
sbb
sbbl
mov
jns
mov
xchg
adc
pop
sbb
fisubs
jge
dec
dec
cmpl
mov
into
jno
lods
int
add
rcl
addl
ror
mov
mov
ja
pushl
dec
and
iret
jns
das
mov
cmp
jne
jbe
rorl
jp
sbb
sub
movsb
cmp
fisttpll
mov
cmp
bound
lock
sti
adcl
loope
andl
mov
mov
lcall
sbb
inc
int3
icebp
fsub
mov
cmc
xor
mov
mov
rclb
mov
outsl
cmpl
sbb
mov
jnp
dec
ja
jl
xlat
clc
int3
subl
jmp
mov
xor
inc
icebp
pusha
cld
add
push
jae
test
lcall
les
xor
sbb
imul
xchg
mov
test
popa
jno
and
pop
rcrl
jp
mov
pop
xchg
push
mov
mov
adc
cwtl
lahf
test
pushf
addl
sbb
lods
gs
sub
iret
fsubr
shlb
push
dec
add
addl
loop
mov
jne
in
ret
inc
rolb
aam
mov
jo
jg
andl
jp
lcall
mov
fwait
xor
sub
xorl
test
add
outsb
sbb
jb
mov
test
aas
and
adc
mull
scas
inc
mov
andl
xchg
rclb
orl
sbb
xor
jb
xchg
pop
cltd
mov
inc
aad
cmp
dec
faddl
ljmp
xor
mov
pop
push
mov
mov
outsb
fimull
mov
sbb
inc
ret
pop
jbe
mov
dec
daa
dec
test
orl
data16
stos
add
test
jl
jne
iret
mov
push
add
jo
leave
sub
mov
pop
xchg
stos
cmc
mov
pop
pop
sub
stos
dec
or
pop
cmpsb
fwait
and
push
sahf
andl
pop
mov
xor
sub
xor
lea
fst
enter
adc
dec
jg
popa
pop
insl
xchg
ret
mov
mov
xorl
sbb
fcoms
dec
xchg
mov
mov
adc
cmpsb
push
dec
jg
into
outsl
lret
mov
in
sub
andl
repnz
shrb
push
pop
pop
enter
repz
int
jno
mov
ret
mov
sbb
test
jb
mov
dec
push
mov
cmpl
xchg
ret
into
mov
aad
inc
lret
xor
test
mov
ret
inc
mov
xchg
push
mov
push
loop
cmp
loopne
int
adcl
xchg
subb
arpl
or
adc
and
jle
out
add
dec
mov
lret
push
cmp
push
adc
pop
loopne
loope
mov
iret
sub
movsb
push
mov
icebp
cmp
jg
decb
adc
and
stos
std
aas
stc
inc
xchg
add
ljmp
adc
in
je
or
das
loop
scas
orl
adc
jo
sbb
cmpl
xchg
addr16
and
jno
enter
mov
and
add
js
aam
mov
mov
sbb
fisttpll
shl
cmpl
ja
mov
mov
into
jle
inc
sbbl
scas
jo
leave
fisubl
xchg
pop
mov
insl
or
fadds
lahf
outsl
xchg
stc
lcall
pop
lret
mov
push
mov
lea
out
addl
sbb
and
mov
mov
cmp
gs
jg
cmp
inc
adc
rclb
jne
je
stos
orb
inc
std
scas
lea
xor
repnz
mov
inc
cmpl
xchg
push
mov
fsubrs
movsb
cmp
mov
sub
movl
cmp
fiadds
std
sahf
and
jo
inc
cmpsl
mov
sbb
inc
orb
bound
in
pop
cmp
sti
repz
sbb
movsl
in
rcrl
ret
sbb
mov
and
js
pop
mov
push
repz
or
stc
subl
and
test
cmpl
and
mov
mov
inc
xchg
out
add
cli
lahf
orl
scas
pop
mov
adc
inc
mov
inc
stc
mov
sub
pop
nop
inc
jne
lods
cmpl
dec
push
mov
addl
cmp
xor
je
orb
adc
sub
cwtl
jle
das
gs
and
jae
pop
fstpl
and
xor
or
push
aam
movsb
add
jecxz
inc
arpl
cmpsb
inc
xor
mov
pop
xor
xchg
dec
stc
pop
or
scas
dec
xchg
pop
add
lods
jg
xorl
orl
addl
inc
int3
mov
outsb
fldcw
pushf
addl
out
dec
stos
aad
add
sbb
or
and
jb
test
icebp
gs
mov
pop
dec
subl
es
aad
sbb
jl
mov
int3
outsb
and
lcall
stos
mov
pop
lahf
xor
pop
inc
mov
adcb
cs
andl
stos
inc
sub
add
adc
add
dec
push
adc
das
mov
testl
sub
pop
and
ret
cmpsb
mov
add
bound
movsl
inc
popa
and
and
sbbl
jns
mov
std
pop
jb
pop
inc
xor
mov
xchg
cmpb
jnp
jno,pn
sahf
adcb
dec
inc
adc
pushf
outsb
xor
cmp
inc
jg
hlt
clc
xorl
insb
mov
shrd
and
fisubrl
inc
out
insb
out
out
pop
ret
into
adc
jno
and
je
xor
sbb
sub
daa
orl
mov
jno
inc
pop
push
dec
sub
adc
mov
cwtl
pushf
inc
cmp
cmp
call
fcoml
push
adc
push
jbe
ljmp
dec
dec
inc
call
adc
inc
jp
fsqrt
or
xor
js
aas
addr16
jg
push
pop
add
inc
scas
outsb
test
rolb
andl
xor
iret
cltd
movsl
call
lock
mov
mov
mov
push
movsb
js
xchg
push
pop
roll
cmp
pop
push
inc
sahf
ror
out
mov
jecxz
fistps
shlb
sbb
xchg
push
in
les
into
rolb
pop
test
inc
sbbl
fidivrl
pusha
aam
xchg
clc
jmp
fists
ret
movsl
cmp
add
xchg
xchg
andl
mov
mov
jne
mov
unpckhps
push
mov
in
push
pop
nop
dec
sub
loope
jg
adc
inc
xorl
xchg
aad
add
cmpl
jns
mov
inc
cmp
xchg
call
outsb
mov
andl
ljmp
in
out
mov
xchg
or
mov
jne
fsubl
rclb
pushl
and
daa
add
xor
imul
das
mov
fldl
cmpsb
cld
sbb
and
int3
hlt
mov
insb
sbbl
xlat
pop
shll
mov
in
xorl
or
mov
and
icebp
fwait
cmp
shrl
shr
insb
jp
pop
loopne
adcb
cli
sbbl
movsl
push
iret
cltd
push
icebp
xor
ds
jb
pop
mov
sub
mov
pop
xchg
aaa
mov
dec
xchg
or
cmpl
mov
pop
mov
lods
inc
ljmp
push
es
lret
les
xor
add
xchg
int
lods
mov
jle
push
jge
pop
mov
outsl
pusha
inc
push
lea
and
xlat
stos
mov
xchg
dec
pop
mov
pop
mov
subl
dec
gs
ret
popa
jb
jnp
lcall
and
xchg
jmp
arpl
scas
adc
lods
and
repnz
xor
outsl
cli
notl
xchg
in
add
addl
add
push
cmpsb
fdivrl
xor
lods
testb
cwtl
cmp
cmpsl
xorl
popf
sub
inc
mov
jo
jle
push
bound
xchg
outsl
xor
adc
adc
orl
jo
fiadds
dec
not
fadds
jne
xchg
push
cmpl
xor
mov
mov
dec
xchg
sub
sbbl
pop
cmpb
mov
rcll
jecxz
sbb
mov
mov
mov
jmp
jns
cvtps2pi
lcall
inc
out
mov
enter
movb
jmp
pop
push
orl
lods
out
sbb
mov
icebp
inc
orl
push
aam
xchg
in
fdivrs
cmpsl
mov
addb
inc
js
addl
ja
andl
js
mov
mov
sub
call
lret
jmp
shll
push
jle
mov
cmp
movsb
and
mov
fildl
scas
jecxz
xchg
inc
sarl
xor
push
inc
mov
cmpsb
cmp
dec
sub
imul
mov
sbbl
ficoml
inc
mov
and
out
repz
clc
subl
pop
mov
xor
stc
mov
xorl
lret
hlt
add
popf
adc
xchg
sub
push
daa
jp
push
and
in
rep
addr16
push
call
mov
cmpl
das
std
sbb
jp
bound
xchg
ficoms
ljmp
daa
sbb
and
mov
xchg
pop
or
cli
addb
sub
pop
push
cmp
outsl
sti
lcall
mov
lret
loope
popf
ret
jecxz
mov
xchg
jle
int
sbb
pop
mov
fnstsw
xchg
ja
pop
cmp
pop
pusha
dec
add
sub
addr16
fdivrs
lea
mov
pop
lock
push
sub
push
jne
sub
mov
sub
xchg
cmp
mov
mov
imul
adc
push
adc
or
imul
repnz
incb
je
xchg
jns
mov
sarl
sbbb
jle
add
fistpl
aad
cmp
and
jns
loopne
addl
hlt
daa
les
add
dec
pop
jl
fcmovne
pop
sub
push
mov
int3
jle
dec
pop
add
cmp
xchg
fwait
ret
rorl
or
jae
jb
pop
lcall
dec
adcl
ja
xor
das
mov
out
repnz
sbb
stos
sbb
xorb
lret
pop
pop
subl
cmp
cmp
xor
and
adcl
or
jg
jp
add
lock
cltd
subl
adc
scas
cmp
add
movsl
jne
cmp
adc
repz
xor
and
les
subl
mov
dec
add
xor
mov
mov
lahf
out
aad
push
andl
inc
cmp
rolb
lea
sbb
xor
andl
inc
hlt
sbb
add
mov
fwait
icebp
int3
and
into
lret
cmp
pop
aad
xor
enter
xchg
lret
mov
inc
hlt
icebp
lock
push
dec
jl
dec
aad
xorl
out
movl
xor
xchg
lock
leave
xchg
push
pop
xor
lahf
inc
sbb
aas
xchg
and
jmp
ret
push
jb
lock
scas
push
cmp
lods
fdivp
mov
fs
orl
test
mov
fcompl
not
out
or
mov
push
push
adcl
add
andl
shrb
nop
sahf
pop
inc
out
pusha
add
mov
lret
lcall
scas
in
push
cmp
pop
xchg
orl
adc
jae
std
lcall
scas
dec
mov
dec
pushw
mov
testb
mov
xor
inc
into
dec
pop
popa
sbbl
pushf
adc
xchg
mov
add
scas
enter
pop
adc
mov
mov
or
pop
out
std
cwtl
test
mov
xor
pop
mov
addl
push
loop,pn
ret
adc
call
mov
inc
imul
push
cmp
dec
imul
cmp
out
adcl
scas
mov
fnsave
cmp
call
cmp
sbbl
test
inc
test
lock
mov
mov
xor
cwtl
sbb
cli
aas
not
cmpsb
movsl
stos
mov
insb
mov
stc
xchg
pop
adcl
dec
jno
jp
jge
in
inc
andb
enter
push
pop
xchg
and
xor
loop
subl
repz
add
aaa
mov
pop
mov
jg
adcl
lret
mov
mov
subl
aad
push
sbb
or
in
xor
mov
mov
jns
subl
inc
and
loop
sbb
inc
inc
sub
mov
sub
inc
push
movsl
mov
sub
or
cmpb
mov
cmpl
add
imul
cmpl
popa
and
or
cmpsb
jbe
add
push
sub
fsubr
int3
popf
inc
adc
outsl
cli
and
mov
or
inc
lret
cmp
xor
pop
das
dec
adc
or
pop
inc
cmpsl
xor
test
gs
movsb
sbb
lods
or
shrl
cmp
xchg
xchg
fwait
push
and
cmc
out
mov
addl
jnp
or
add
cs
or
xorl
outsl
or
loope
cmp
and
lea
push
orl
adc
push
mov
add
or
add
push
lds
cmp
or
mov
jb
pop
sahf
xor
dec
sti
subb
sub
mov
sarb
orl
mov
mov
out
cmpsl
xchg
imul
jg
xchg
addl
inc
jno
add
or
les
or
jnp
xchg
aad
scas
pop
xor
loope
push
repz
pop
xchg
push
shlb
jp
stos
leave
xor
mov
repnz
adc
pop
adc
jno
pop
push
mov
int3
dec
addl
pop
push
lock
mov
xchg
cmpsb
fildll
lcall
xor
inc
mov
addr16
push
cltd
xorl
and
cmc
add
push
adc
test
push
xor
and
fwait
push
lret
ds
xchg
mov
call
cld
push
fs
outsb
or
xor
popa
jl
inc
mov
and
mov
jle
sbbb
add
repz
xchg
andl
xchg
pusha
mov
test
mov
imul
fcmovnb
push
subl
repnz
insl
xchg
dec
adcb
mov
les
cwtl
stos
pop
xor
call
jne
ss
adc
sbb
mov
push
scas
repnz
add
aam
pop
out
leave
sar
jo
mov
pop
mov
outsl
mov
push
mov
mov
jne
stc
fiaddl
mov
pop
lods
andl
push
mov
xor
jne
inc
insl
dec
jae
test
mov
push
jno
repz
add
dec
jo
imul
push
loopne
scas
pop
cltd
pop
push
push
out
xchg
pop
inc
lret
and
out
sbb
push
lahf
jo
xor
push
ret
stc
fstpt
ljmp
mov
mov
mov
cmp
rcl
test
or
pop
es
roll
xchg
in
sbbl
adc
filds
mov
jge
xorl
pushl
cmpl
pop
sti
sbb
add
xorl
cmp
stos
in
imul
fs
push
jp
adc
cld
sub
cli
sbb
push
cld
hlt
loope
loopne
pop
xor
lahf
sbb
dec
sbb
test
fsts
lea
orl
push
gs
rclb
cmpl
pop
jge
ljmp
push
shlb
loop
nop
fidivl
fisttps
add
adc
mov
sar
sub
cld
fwait
leave
lock
pop
subl
sarb
dec
sbb
pop
lcall
inc
ja
cltd
scas
push
std
les
mov
or
xchg
xor
add
mov
subl
sbb
jnp
stos
inc
loope
ja
sub
xchg
enter
dec
dec
sbb
bound
push
mov
call
jno
xchg
ficomps
push
xchg
sbbb
jl
or
adc
push
jecxz
mov
enter
mov
js
and
xchg
dec
cltd
mov
sub
mov
out
dec
inc
cmp
lea
ret
icebp
hlt
aaa
add
icebp
mov
data16
scas
inc
mov
dec
xchg
lods
int3
mov
push
push
push
cmp
inc
outsl
pop
fwait
mov
jge
insb
mov
leave
daa
sbbl
adc
and
push
mov
ss
xchg
push
adc
jno
jg
or
mov
mov
sbb
mov
dec
nop
aaa
pop
adc
repnz
lahf
mov
stc
sub
push
xchg
in
cmpsb
addl
mov
fildl
push
pop
inc
cmpl
mov
push
movsl
push
icebp
sbb
lods
and
jnp
adc
pusha
decl
xchg
and
loop
inc
movsb
sbb
push
fistpll
dec
sbb
andl
aad
add
lcall
jle
mov
xorl
movsl
adc
sbb
mov
lods
mov
dec
dec
mov
jns
bound
push
subl
pop
mov
xor
dec
out
fs
jae
js
mov
jl
aam
cmp
adcl
lret
cmp
sub
ss
mov
cs
dec
cmpl
add
out
add
sbbl
lods
sbb
xor
loopne
or
adc
dec
movsb
lods
adc
push
sarl
cli
aam
int3
pop
pushf
and
fs
fiadds
std
mov
orl
adc
icebp
sub
outsl
cmc
push
push
enter
or
pop
fisttpl
rep
in
daa
imul
data16
jmp
call
fs
fucomp
or
outsl
js
cli
dec
addl
inc
ret
jp
imul
or
fmul
je
outsb
xorl
lods
jle
icebp
iret
and
je
pop
scas
or
int
xor
lods
push
fisttpll
ds
rcrb
add
cs
scas
cmpl
iret
shlb
xchg
sub
xor
xlat
setge
orl
sbbb
xor
fcmovne
lods
aad
push
adc
loope
outsb
mov
jo
adc
mov
cmp
jg
mov
andl
pushf
sub
adcl
pushl
stos
xor
add
sbbl
mov
add
mov
xor
ljmp
sub
mov
adc
cwtl
or
shlb
scas
lds
cmp
andb
roll
andl
push
pop
shrl
ljmp
mov
mov
imul
adc
pop
dec
or
cwtl
jo
and
xchg
sub
pop
icebp
imul
cmpl
jge
mov
arpl
cmpsl
pusha
clc
aam
mov
fcoml
call
xor
cmp
mov
inc
fs
mov
inc
mov
pop
scas
ljmp
testl
mov
mov
leave
push
popf
or
mov
fistl
sarb
aas
mov
loopne
mov
pop
notl
add
sahf
or
loope
push
lret
fimull
mov
adc
mov
jo
mov
xor
sbbl
pop
int3
fs
cld
into
bound
mov
xor
aad
movsb
out
add
pop
lods
push
or
aas
orl
pop
adc
subl
push
mov
mov
lea
ljmpw
adc
hlt
scas
sub
pop
cmp
movsb
loopne
scas
sub
push
addl
sub
mov
push
add
jae
and
mov
aad
inc
mov
xorl
or
sti
cmpsb
mov
int
adc
lea
xchg
and
iret
inc
push
push
cmpsl
mov
sbb
cltd
adcl
cmp
testl
test
mov
xchg
pop
sbb
jp
mov
jg
jmp
push
ss
mov
cmp
js
cwtl
sbb
andl
mov
adc
adc
out
adcl
xor
clc
mov
push
gs
mov
icebp
movsb
push
xchg
push
ds
push
std
sub
cld
push
notb
jle
ret
push
es
and
jecxz
cmp
shr
aaa
data16
icebp
daa
lock
mov
push
std
sbb
or
pop
sbbl
mov
mov
add
andl
andl
ds
and
lret
sub
cmp
xor
mov
cmp
xchg
xor
shl
mov
mov
mov
jg
sub
les
sub
into
mov
iret
loop
movsb
push
test
rcrb
mov
sub
jmp
lcallw
push
les
rcl
subl
ret
xchg
add
pop
movsl
frstor
mov
aas
sbb
xorl
pushf
int
push
and
mov
xchg
sub
pop
jne
in
sbbl
lea
jmp
arpl
cmpsl
ret
xchg
xchg
and
jle
loopne
and
ss
jp
das
movsl
pop
sub
or
dec
addl
or
mov
loop
mov
pop
adc
sbb
popa
cmp
push
adc
loopne
mov
not
mov
push
js
pop
ret
aaa
subl
jle
mov
adc
add
mov
mov
fistpl
lods
sbbl
push
xchg
loope
aas
cwtl
mov
sub
add
cmp
insb
fnstcw
rcl
stos
imul
inc
shl
and
repnz
mov
test
adc
movsl
fisubl
subl
mov
movsb
xor
stos
inc
scas
ss
cwtl
test
jle
xlat
adc
mov
cli
mov
leave
addl
loop
adc
mov
fiadds
out
xorl
jl
push
inc
daa
andl
xorl
loope
je
int3
xchg
ja
test
scas
das
jbe
add
xchg
xchg
mov
xor
push
pop
jl
popa
lods
ljmp
dec
jmp
mov
adc
and
sub
int3
sbbl
aas
lock
sub
or
xor
and
mov
pop
fisttpll
subl
mov
adc
ja
add
pop
mov
dec
mov
fldt
cmc
into
out
add
daa
mov
jne
pushf
icebp
cmp
fs
xchg
xor
pop
aaa
adcl
cmc
push
mov
add
into
sbbl
fwait
cmpl
loop
adc
mov
cmpsb
sbb
popa
or
or
in
add
ds
jl
push
xor
ljmp
mov
lds
push
mov
addl
pop
pop
subl
and
xor
rorb
cmpsl
scas
lea
mov
jne
arpl
fsubrs
dec
lods
push
loope
mov
jecxz
outsb
je
or
iret
jnp
mov
jno
lahf
shll
mov
cli
lea
sbb
faddl
inc
add
clc
add
mov
lea
mov
test
and
enter
fadds
mov
mov
mov
imul
jno
sub
and
inc
testl
mov
pusha
fsts
add
faddl
icebp
ret
jno
inc
jns
adc
lret
pop
and
adcl
icebp
mov
test
xchg
daa
mov
mov
lea
cltd
adc
mov
adc
movsb
inc
shrb
or
inc
mov
xchg
jle
std
sbb
outsb
sbb
sub
cs
cmp
dec
rcl
cli
adc
adc
lahf
fadds
andb
or
mov
lock
cmp
addl
mov
imul
or
adc
xorl
adc
popa
aas
cltd
mov
enter
icebp
and
cmp
icebp
or
loop
pop
cmp
sbbl
aam
or
mov
mov
mov
out
nop
mov
mov
mov
cmpsl
mov
movb
out
add
mov
xchg
add
std
lock
cld
jnp
outsb
lcall
push
cmp
mov
add
xchg
ds
jne
rorb
scas
inc
jb
xorl
jg
subl
or
mov
jns
and
arpl
pop
imul
push
xchg
paddsb
sbb
movsl
pop
add
jl
mov
mov
test
iret
lods
sub
jns
loope
fistpll
cli
mov
pop
pop
mov
ss
or
dec
in
mov
pushf
pop
test
scas
pop
ret
push
fdiv
subl
jl
nop
push
les
loope
push
adc
aad
loopne
insl
xor
stos
sub
addl
pop
rclb
testb
adcl
cmpsl
and
mov
inc
inc
sbb
and
icebp
fiadds
mov
pushf
dec
ret
addl
push
imulb
loopne
xor
dec
insb
xchg
call
in
mov
xor
push
dec
mov
loop
mov
aam
lahf
adc
mov
mov
or
cmp
scas
subl
int3
inc
jle
mov
mov
mov
sbb
adc
xor
pop
in
jb
pop
subl
loopne
scas
xor
adc
mov
xor
and
insl
cmp
or
mov
fidivl
inc
fs
insl
lea
out
dec
lret
sub
out
mov
outsb
mov
jle
jge
cmpl
adc
xchg
aam
xor
out
icebp
inc
daa
mull
fsubrp
movsb
lock
add
dec
jge
into
mov
mov
xor
arpl
xor
dec
out
icebp
stos
jge
and
in
outsl
loopne
movsb
mov
xor
push
rorl
addl
pop
adcl
rcrb
dec
scas
mov
je
jle
mov
xor
jp
inc
mov
movsb
ds
mov
stos
push
pushf
mov
out
push
lods
sub
loopne
imul
lods
adc
push
addl
cs
or
cmpl
mov
testl
cmpsb
dec
repz
push
mov
adc
fbld
and
repz
mov
test
nop
scas
repnz
xchg
fiaddl
scas
xor
mov
push
jecxz
call
lods
nop
stc
jge
jae
push
jb
lock
lds
mov
mov
mov
lret
mov
push
pop
add
ret
mov
push
ds
mov
popa
scas
push
inc
sub
jae
and
mov
jge
push
prefetch
cmpsb
aas
dec
es
jne
jp
add
bnd
dec
adc
sti
and
stc
sarb
or
mov
xor
lods
fists
mov
ja
adc
ss
push
xchg
sub
stos
test
mov
mov
pop
mov
jbe
clc
in
or
test
arpl
push
mov
imul
sub
pop
fimull
jns
push
xchg
xor
imul
or
xchg
jo
inc
movsb
xchg
jb
scas
out
aas
imull
xor
lahf
fcompl
cmp
orl
filds
lock
pop
adc
addr16
push
cmpl
mov
cmp
lret
icebp
das
sub
jge
dec
xorl
xchg
jl
fincstp
cmc
int
mov
cmp
das
mov
add
subl
sbb
addl
add
sbb
js
int3
xor
ret
xchg
movsb
arpl
pop
ds
sbbl
push
aad
loope
scas
xlat
loopne
test
inc
orl
lds
ss
adc
in
scas
andl
inc
stos
sbb
or
xor
ljmp
xor
jge
cvtps2pd
lret
jg
stc
imul
fimull
mov
dec
in
cli
aaa
add
popa
sbb
mov
add
jo
test
push
inc
dec
mov
add
mov
pop
lods
cmc
insb
xor
clc
lret
mov
lcall
pop
dec
daa
in
dec
dec
dec
push
or
pop
cltd
aas
mov
xchg
push
subl
loop
push
cli
push
xor
pusha
pop
cwtl
pop
test
xchg
sub
insb
push
inc
mov
mov
dec
sti
sbb
insl
aas
inc
or
add
repz
movsb
imulb
int3
push
shrb
clc
adc
cmpl
in
cmp
fld
outsb
push
filds
popa
add
mov
subl
stos
xchg
sub
mov
sti
mov
inc
pop
cmpsb
lea
push
lcall
mov
int3
xchg
inc
or
add
lahf
mov
cli
sbb
cmpsb
dec
js
test
push
dec
imul
and
push
shll
adc
mov
add
xor
push
cmp
fucomp
mov
add
pop
repz
pop
movl
mov
or
dec
dec
pop
xchg
ret
incl
out
repnz
mov
mov
mov
test
movsl
test
mov
lds
jne
imul
mov
sub
stos
xchg
adc
ret
pushf
sub
lahf
adcl
mov
stc
popf
cld
jae
add
pop
bound
pusha
pop
fisttpl
dec
popa
cld
inc
cmpl
lret
sbb
cmpl
push
cmp
push
inc
pop
dec
mov
in
mov
rcll
pop
or
xchg
test
mov
adc
lret
cmpsl
aas
ja
push
xchg
sahf
andl
imull
out
push
mov
sbbb
js
xchg
inc
sahf
fimuls
bound
mov
xor
repnz
ret
cmp
push
call
or
add
dec
cli
mov
or
push
jbe
mov
jmp
xchg
sub
punpcklwd
sub
add
je
stos
lods
test
xor
mov
rol
xchg
mov
in
sub
or
pop
xor
mov
xchg
and
push
inc
jb
roll
sbbl
adc
add
aam
cmp
test
imul
sti
or
jg
imul
sbb
in
cmp
mov
icebp
lock
ret
pop
and
sbb
add
push
sbbb
jbe
sbb
xchg
lods
lea
aas
rcrb
xchg
test
aad
xchg
mov
xchg
inc
loop
mov
xor
sar
adc
cli
call
or
jno
sbbl
mov
imul
rolb
add
ljmp
adc
cmp
sbbl
outsl
adc
orl
jl
cmp
daa
fcmovnbe
add
jo
or
cli
pop
lcall
ret
cmpl
mov
cmp
movsb
hlt
addr16
add
adcl
xorl
fcomps
lret
add
sbb
insl
cmp
mov
sbbl
push
dec
adcl
outsl
mov
jns
mov
xorl
sbb
sub
mov
mov
jno
sub
push
jbe
mov
cmp
jmp
add
movl
xor
push
cmp
pop
mov
or
mov
test
in
faddp
mov
cmpl
push
push
mov
sbb
movsb
repnz
daa
inc
out
movsl
sbb
add
cmp
fwait
ss
into
cltd
push
lahf
cmpl
mov
xorl
or
imul
adcl
push
scas
or
inc
call
sbb
and
mov
mov
out
push
in
xchg
sub
rorb
inc
repnz
mov
xor
popf
xor
inc
subl
push
out
mov
xor
sbb
mov
cmpsl
xor
jle
jg
and
ljmp
xor
adc
ljmp
into
mov
inc
jle
mov
cwtl
subl
gs
sbb
mov
xor
in
jbe
push
test
inc
cltd
in
sti
das
adcb
adc
andb
xor
hlt
xor
mov
jmp
pop
sbbl
push
popl
out
loope
mov
adc
mov
jecxz
fcmove
pop
mov
addr16
andl
scas
mov
orl
push
lds
push
loop
popa
clc
mov
lret
subl
and
fs
cmpsb
dec
lods
push
cmpl
ret
xchg
testl
pop
aad
xor
in
pop
mov
in
loope
addl
imul
movsl
notl
xorl
imulb
aam
sbb
jecxz
mov
cli
xor
shlb
sub
inc
add
ret
das
and
pop
cmp
pop
mov
mov
sbb
enter
les
bound
ljmp
stos
dec
cs
in
icebp
iret
mov
or
das
dec
subl
dec
pop
roll
jmp
sub
fisubs
incl
pop
mov
xor
fnsave
mov
das
enter
jae
je
dec
mov
inc
sar
mov
mov
call
sahf
sbb
add
fsubs
push
out
iret
pop
sbbl
push
je
pop
and
loope
outsb
pop
jg
iret
push
mov
out
lahf
aaa
addb
in
sbbl
sub
xchg
out
out
in
mov
mov
loop
pop
hlt
mov
mov
js
faddl
and
movsl
test
mov
inc
fiaddl
mov
push
xorl
aam
xor
sub
ja
in
adc
out
pop
mov
mov
cs
and
inc
jns
cmpl
call
cli
fldenv
icebp
add
cmpl
and
sub
subb
add
lahf
xor
or
orl
jge
andl
mov
push
cmp
rclb
adc
jno
jg
inc
int
jnp
sbb
inc
adc
sbbl
aas
pop
xchg
lahf
lock
mov
pushf
jmp
in
dec
test
mov
cmc
xor
jns
lea
fildll
adc
pop
pop
das
icebp
and
adc
mov
mov
dec
test
push
imul
lock
subb
xorl
ja
mov
fisubl
jl
adcl
movsl
pop
add
imul
sbb
and
jne
mov
xor
or
fidivs
mov
fnstsw
enter
mov
mov
loop
orl
in
orl
shrl
ret
mov
jb
mov
pop
inc
mov
xchg
adc
pop
and
mov
xchg
std
mov
pop
pop
sbbl
jmp
sub
push
ss
mov
jo
in
mov
inc
in
cmp
rorb
cld
int3
ja
aas
stos
push
jnp
lods
test
push
test
adc
inc
cmpsl
sbbl
pusha
cli
dec
mov
and
in
adc
movsb
aad
dec
mov
adc
fidivl
imul
fdivrp
mov
stos
push
subl
in
adc
in
aas
sbb
jle
fcmovbe
out
sbb
cld
cmp
push
movsl
pop
adc
pop
sub
icebp
jns
push
call
pop
mov
cmp
pop
cmp
sbb
insl
xor
mov
popf
jo
cmpl
subb
in
inc
jb
xchg
fcoms
icebp
xor
movsb
and
jno
cmp
sub
test
fldl
pusha
orl
lret
ljmp
push
lcall
inc
lds
sub
outsl
int
sbb
rcrl
mov
add
add
test
dec
xor
stos
out
push
lea
mov
inc
dec
insl
xchg
scas
jbe
loop
xorl
add
outsb
gs
dec
pop
inc
add
adc
sbbl
push
out
cwtl
mov
jl
outsl
pop
xorl
rep
mov
mov
xor
hlt
xchg
mov
stos
xor
mov
outsb
inc
adc
pop
cmp
jno
rolb
jne
xchg
clc
outsb
cmpsl
cmpl
movsb
jmp
mov
xchg
imul
inc
ja
out
adcb
daa
sbb
or
inc
xchg
xchg
shlb
pop
inc
inc
fcompl
inc
xchg
add
pop
push
in
pop
dec
loop
jle
shll
jecxz
movb
out
pop
mov
sti
mov
xchg
rclb
xorl
sbb
in
or
mov
mov
adc
pop
adc
stos
mov
jmp
mov
pop
sti
lcall
stc
push
push
dec
push
stos
push
pop
std
sub
fcmovu
push
adc
push
sbb
enter
add
add
rolb
repz
or
stos
movsb
bound
test
imul
jecxz
pop
ja
add
bound
jo
cmp
aas
es
cwtl
adc
mov
inc
cmp
adc
cmp
ss
and
out
insl
cld
xorl
shrl
pop
mov
std
push
ja
mov
mov
out
xchg
push
ja
or
pusha
xor
xchg
push
test
inc
push
popa
mov
test
movsb
mov
cmpl
cmp
pop
jae
cmp
addl
mov
imul
mov
jg
in
xor
fidivrl
xor
nop
adc
xorl
insl
pushl
push
cmpl
mov
lret
xchg
xchg
ljmp
mov
cwtl
lea
js
or
push
out
push
roll
cmpl
fst
rorl
mov
xor
fldcw
sahf
pop
shl
add
in
xchg
ret
enter
in
jle
pop
pop
jo
jmp
cmc
push
rcl
sbb
popl
out
addr16
data16
in
push
inc
xorl
bound
mov
mov
orl
loop
inc
xchg
ret
inc
stos
mov
into
adc
and
xor
inc
aam
je
xchg
adc
mov
cmpl
push
pop
mov
mov
lods
mov
mov
lods
push
rcll
ror
cmpl
mov
push
or
sbb
mov
das
clc
push
sbbb
out
imul
stos
scas
add
sub
mov
cmpl
mov
icebp
jb
imull
sbb
je
loope
orl
icebp
flds
movsl
lahf
inc
mov
cmp
dec
mov
cwtl
mov
jno
stos
inc
outsl
xorl
fwait
sarb
pop
inc
lcall
or
dec
push
fadds
sub
push
dec
jnp
xchg
lret
jo
mov
mov
xchg
stos
outsb
jne
insb
push
data16
xchg
and
jo
jge
dec
cmp
jnp
jne
dec
andl
sbb
adc
sub
ss
movsb
movsl
fdivrs
aas
sbb
cltd
imul
or
adcl
xor
push
and
inc
adc
jns
jge
in
gs
mov
dec
xor
mov
jnp
dec
cmp
cltd
outsl
xchg
adc
cs
pop
mov
jl
or
push
push
mov
sub
xchg
mov
pop
pop
mov
out
outsb
fnstenv
sbb
mov
jg
lods
cmpl
jbe
push
mov
ja
add
mov
stos
outsl
cli
orl
rclb
pop
cmp
inc
jae,pn
rcrb
subl
sbb
out
or
add
and
push
jo
xor
and
mov
jmp
sarl
sti
or
loope
lret
in
adcl
push
into
popf
adc
and
push
lea
mov
pop
or
icebp
and
bound
dec
add
out
lods
mov
sub
ljmp
sub
ret
insb
aam
push
cmpl
cli
push
mov
out
mov
aas
or
inc
in
cld
push
andl
add
aam
fwait
xor
pop
fnsave
add
insl
cmpb
nop
shrl
outsb
stc
popf
fs
in
popa
lods
movsb
pop
cmp
ret
xlat
mov
fidivrs
sub
aam
cltd
xor
and
add
sbbl
or
mov
mov
aas
je
jge
sbbl
enter
cmp
cs
in
add
inc
adc
shrl
inc
mov
push
dec
xor
jmp
jns
lea
dec
ja
movsb
mov
lahf
sbb
notb
cmpsb
sub
or
stos
and
xor
aad
push
mov
dec
popf
hlt
test
jno
mov
test
adcl
cmp
addl
xchg
cmp
rolb
scas
addl
pop
test
jmp
xor
push
jne
subl
call
sub
sub
xchg
xor
cwtl
sbb
mov
sub
rorl
or
fiadds
xchg
dec
lcall
xor
aam
addl
pop
aas
mov
xor
test
out
xor
mov
jns
xorl
adcb
cmp
enter
mov
xchg
adc
fildl
aad
inc
mov
loop
mov
mov
cltd
mov
jmp
mov
jmp
dec
andl
aas
into
mov
out
pop
ret
test
fdivs
aaa
cmp
and
imul
outsb
xor
ret
pushf
mov
push
inc
mov
outsl
sbb
orl
mov
lods
xchg
fadds
gs
push
sbbl
jae
xor
pop
and
mov
mov
fwait
inc
cmp
push
pop
sub
cmp
xor
inc
dec
mov
mov
je
jbe
clc
cmpsb
out
sub
dec
dec
and
xor
xchg
loope
xor
cmp
push
fsubrs
insl
out
mov
loope
arpl
adc
inc
or
iret
adc
andb
cmp
adcl
mov
repnz
mov
jle
dec
cmpsb
adc
addr16
dec
and
es
icebp
jnp
out
mov
std
sbbl
cmp
fisttps
jbe
aad
mov
in
inc
jp
pop
test
rolb
and
pusha
cltd
fidivrl
fyl2xp1
dec
lea
xor
sub
inc
mov
sbb
aam
xlat
lea
test
andl
dec
add
and
xchg
pop
int
fidivrs
push
push
mov
rcrb
stos
push
jg
in
insl
inc
movsl
pop
jae
or
pop
fnstsw
xchg
cmp
stos
pop
pop
test
bound
cmp
loop
mov
aam
addr16
testb
mov
aad
pushf
in
xchg
cmpb
aaa
mov
inc
ficoms
subl
aad
lcall
cmp
outsl
andl
mov
mov
sbbl
enter
lds
sbb
sbb
in
movsb
adc
and
pop
mov
pop
cmpsl
jno
sbb
xchg
icebp
sub
shrl
push
subl
test
push
sbb
adcl
mov
and
jl
push
sbbl
xor
loop
mov
jno
inc
xchg
or
roll
sub
popa
xchg
aaa
fisubs
sarb
xor
pop
into
movsb
pop
andl
aad
fcmove
inc
in
shr
mov
mov
adc
push
shrl
dec
dec
in
mov
ret
xchg
iret
and
and
xlat
sbb
xor
pop
inc
inc
adc
or
testb
jecxz
pop
in
mov
pushf
movsl
cmpsl
xchg
scas
ja
mov
test
cmp
jmp
cltd
add
sub
out
flds
test
cli
stos
mov
or
jle
xchg
xchg
fisubl
sbb
mov
xor
sub
xchg
in
inc
addl
das
sbb
push
cmc
call
dec
mov
dec
pushf
in
pop
loope
add
inc
call
sub
daa
out
pop
enter
je
ror
call
shrl
push
cmp
popf
rcrb
orl
push
sub
xchg
inc
cltd
loop
ds
pop
sub
pop
xchg
mov
fsubr
pushf
jecxz
roll
outsl
cld
mov
push
push
push
dec
xor
mov
lock
ljmp
and
sbb
mov
clc
and
sbbl
imul
xorl
inc
mov
repnz
je
jne
sub
mov
push
xorl
cmpl
enter
jl
dec
stos
dec
mov
inc
das
test
inc
movsb
push
ljmp
loope
adc
mov
xchg
pop
aas
mov
mov
sbbl
mov
push
lock
divb
inc
dec
les
test
insb
sbb
push
data16
mov
out
pushl
fidivl
insb
movd
ds
test
addr16
fsts
add
mulb
sub
inc
les
adc
add
fisttpl
sub
add
int3
test
popa
popl
push
imul
adc
aam
and
clc
ffreep
mov
dec
aaa
mov
xlat
push
mov
ds
mov
cmp
push
and
addl
push
mov
hlt
inc
xorl
ds
pop
mov
and
orl
sub
in
dec
gs
jl
andl
data16
fs
test
mov
popl
int3
ficoml
push
pop
adc
jg
inc
add
cmp
mov
mov
xorb
and
mov
cli
sbb
or
lcall
les
pop
inc
insl
sbb
mov
gs
outsl
mov
mov
xchg
frstor
push
sbb
test
jle
lcall
xchg
adc
js
and
jecxz
loopne
and
ja
sbbl
push
subl
sahf
filds
insb
outsb
cmpsb
or
ret
loop
mov
add
loope
repnz
lahf
dec
lea
cmp
push
add
les
mov
imul
out
cmpl
push
popl
jae
call
sar
cli
enter
mov
ret
push
inc
sbb
xchg
xchg
nop
push
mov
in
stos
push
or
mov
fldcw
repz
xor
pop
cltd
pop
cmc
jne
add
adc
sub
xchg
fadd
xorl
ljmp
out
subl
and
sub
pop
xchg
adc
push
lahf
jg
into
jge
xor
dec
adc
fnstsw
hlt
paddusw
cwtl
fucomi
or
dec
les
outsl
jp
sub
fldl
iret
ret
orl
jbe
mov
pop
andl
test
inc
xor
xchg
repnz
sbbl
pushl
repnz
cmpb
out
movsl
mov
imul
xchg
scas
dec
pop
bound
sbb
push
in
jmp
jmp
sub
mov
mov
push
sbb
in
xchg
test
adc
adc
cmp
enter
testl
inc
scas
and
add
and
inc
mov
xchg
aam
frstor
and
fists
jnp
xorl
insl
xor
mov
pop
cmp
mov
sub
dec
add
inc
jle
xor
ljmp
pop
outsl
push
xor
jecxz
xchg
mov
mov
mov
es
into
dec
cmpsb
test
lcall
xor
sbbl
je
lods
cmp
sub
inc
stc
mov
shrb
sbb
xor
jmp
es
push
pushf
jl
sbb
and
push
mov
div
xor
adc
lret
aaa
test
lahf
inc
push
mov
test
mov
shr
jne
mov
mov
divl
repnz
and
shr
xorl
cmpsl
insl
sbbl
pusha
cmp
outsl
sub
mov
push
aad
xorl
les
pop
fadds
add
test
aas
repz
inc
jmp
cmp
gs
pushf
xor
cltd
mov
aam
jg
andl
sbb
mov
sub
bound
mov
imul
or
adc
mov
adcb
js
jle
movsb
dec
cltd
pop
jg,pt
mov
sbb
stos
cmpl
push
or
or
push
fsubs
fstpl
ret
hlt
shl
add
jg
add
roll
insl
scas
xor
inc
mov
inc
repz
mov
test
or
mov
dec
cmpsl
and
push
sub
cli
fcom
pop
std
mov
mov
pusha
imul
and
lds
icebp
fcoms
lret
jle
aad
sahf
popf
inc
loope
iret
std
or
adc
int
sbb
cmp
js
bound
leave
mov
aaa
push
mov
repz
shrl
ljmp
push
push
test
mov
idivb
scas
inc
mov
outsl
test
ljmp
or
cmpl
xor
ret
adc
mov
xchg
mov
fisubrs
inc
clc
adc
mov
xchg
jecxz
xor
adc
sbb
je
fidivrs
jl
pop
pop
xorl
dec
stos
dec
add
pop
push
cmp
xchg
lcall
das
mov
subl
sahf
adc
xorl
mov
xor
push
fisttpl
inc
sarl
clc
jne
cwtl
cltd
insl
cmp
mov
js
mov
sub
jae
scas
cmpl
fistps
xlat
and
aam
or
xorl
stc
outsb
push
dec
dec
mov
fs
in
lods
orl
xchg
aad
rcll
in
jns
mov
cltd
pop
cmp
lret
std
les
fistpll
addl
fisubrs
popf
or
jg
push
popf
cmc
sbb
inc
mov
mov
addl
pop
cmp
jno
xor
add
in
test
sbb
mov
rolb
jns
sahf
cli
mov
lods
dec
mov
lds
xorl
add
jmp
push
enter
je
leave
dec
mov
addb
adc
cltd
andl
mov
pop
int
call
lods
jmp
mov
sbb
push
or
mov
sub
loope
push
inc
mov
ret
sarl
jno
rorl
pop
ja
pop
movsb
rolb
or
or
test
les
adc
pop
cmp
subl
sbb
adc
jp
or
mov
pushf
imul
popa
mov
rcl
jbe
cld
js
inc
sbb
popa
scas
aas
dec
pop
test
push
stos
xor
pop
cs
inc
jne
adc
mov
cmpsl
mov
shr
pop
xchg
int
mov
shr
pusha
add
xorl
push
inc
mov
mov
inc
jg
stos
insl
cmpl
adc
out
lods
jns
sbb
and
sbbl
das
imul
push
jnp
and
cmpb
add
pop
enter
movsb
jmp
mov
jae
jno
jnp
lcall
faddl
rorb
dec
dec
je
mov
or
add
or
mov
pop
les
mov
test
cmp
cmp
outsl
into
xorl
xlat
aas
cmp
pop
or
lret
ret
jp
pop
xor
sub
push
inc
adc
sub
scas
sar
popf
or
aaa
cmpl
idivl
aas
xchg
sub
repnz
adc
lcall
cmp
sbb
cltd
icebp
xchg
or
das
arpl
add
dec
icebp
imul
hlt
push
cmp
cmpsl
pop
bound
mov
jnp
push
xchg
push
pop
ja
sub
jp
cmp
cmp
insb
adc
xchg
ja
icebp
iret
bound
les
or
sbb
test
cli
mov
icebp
xchg
daa
pop
xor
pushf
mov
loope
inc
ljmp
xor
jl
and
sub
ds
cmp
dec
adc
popa
jne
pop
aaa
mov
sahf
push
pop
pushf
jb
mov
rol
cmpl
lcall
call
out
jnp
lea
lds
fndisi(8087
sahf
ret
push
jmp
mov
push
dec
pop
or
inc
sub
xchg
mov
inc
nop
insl
adc
jle
push
xor
xchg
fldt
fiadds
xchg
push
sbbl
out
mov
stc
mov
int
pop
icebp
add
adc
xchg
or
sbb
and
sbb
testb
mov
lcall
cld
into
pushf
sub
mov
cmp
lcall
adc
mov
mov
mov
data16
xchg
sahf
lcall
addl
and
orl
addl
mov
xlat
or
orl
in
adc
xchg
stos
popw
fisttpll
dec
and
mov
imul
or
flds
sti
lods
fidivl
mov
lds
pusha
adc
sub
fsubr
xchg
popa
mov
adc
scas
xchg
cmp
insb
jno
jmp
xor
out
lahf
add
add
stos
mov
jmp
adc
jge
sub
dec
xchg
add
push
int3
in
dec
adcl
lret
xorl
popa
sub
idivl
push
xchg
mov
add
adc
mov
adcl
pushf
test
insl
push
adc
mov
sti
jae
jmp
lods
lcall
xchg
push
and
sti
push
xor
sbb
subl
mov
icebp
fistpll
xlat
xchg
lods
pop
cmc
or
out
out
test
gs
lcall
ljmp
or
xor
pop
stos
dec
xchg
mov
stos
int
fists
dec
xor
dec
cmpl
aad
inc
sbb
loope
sub
lahf
push
std
dec
addl
push
int3
ror
ss
loope
lahf
xrelease
and
lahf
int
sub
add
sub
mov
push
popa
pushf
xorb
xchg
std
inc
mov
rcl
mov
dec
fnsave
adc
lock
fs
addl
xchg
sbb
aam
mov
jne
std
sub
cltd
mov
icebp
movsl
test
lea
das
out
shl
enter
xchg
pop
lcall
xlat
fucomip
jle
push
inc
repnz
push
cwtl
cmc
inc
subl
in
xchg
iret
fdivrl
and
inc
pop
push
or
movsb
dec
cmp
loope
jno
or
sub
cmp
lea
mov
adc
loopne
out
scas
cmp
pop
pop
mov
rorl
inc
dec
ficoml
jb
ret
jno
ljmp
jns
addl
mov
loope
xor
xor
ret
mov
lock
mov
decl
lods
jmp
add
sbb
mov
mov
mov
xchg
or
adc
loopne
xchg
cmp
inc
mov
cmpsl
lahf
in
push
mov
sub
loopne
mov
dec
test
sbb
sbbb
xor
icebp
mov
push
push
push
cwtl
xor
icebp
std
fdivrs
jbe
dec
leave
test
addl
push
jnp
sub
fcomp
add
add
out
sbb
imul
jmp
sbb
lods
lea
xlat
adc
bound
gs
data16
inc
enter
sub
es
fmul
stos
in
mov
lods
andl
jge
dec
sbb
cmp
lods
mov
xchg
sub
out
push
repz
or
addb
ret
jmp
xor
das
ficompl
xorl
xor
inc
loope
inc
movsb
fwait
cmp
push
mov
syscall
arpl
sahf
stos
jp
aas
fiaddl
orl
mov
sbbl
inc
push
out
adc
test
into
xchg
cmpsl
ds
popf
mov
ret
sbb
and
add
xchg
mov
mov
rorb
inc
adc
enter
movsl
cmp
mov
subl
add
movsl
pop
data16
and
cli
jmp
adcl
pop
jp
std
mov
xlat
rcr
add
clc
xor
icebp
push
leave
mov
in
jecxz
imul
sbb
mov
and
sub
mov
cs
push
cltd
icebp
cmpl
or
sti
mov
rclb
nop
andl
insb
hlt
mov
aam
add
mov
lods
jbe
xor
cmp
into
fadds
lret
in
dec
inc
mov
int
into
xor
xchg
js
xor
add
jle,pt
lea
cmp
sbb
jg
fsubrl
inc
jno
push
mov
lock
int
stc
xchg
jg
enter
xchg
loop
mov
shrb
movsb
push
pusha
mov
dec
ret
loopne
ds
cmp
dec
xor
lahf
sbbl
iret
adc
sahf
pop
hlt
xchg
xor
out
sub
push
mov
mov
pop
in
cmp
sbb
xor
lret
jmp
lcall
cmc
movb
jl
cmp
inc
xchg
sahf
xchg
mov
push
fidivrl
inc
int
lods
mov
jnp
mov
push
rolb
popf
inc
and
mov
mov
scas
mov
xchg
mov
int3
mov
pop
xor
jbe
data16
adc
sbb
adc
fs
or
fidivs
or
jp
sbbl
arpl
cmp
cli
inc
adcl
jecxz
orl
push
mov
dec
loopne
inc
mov
xlat
cli
cmp
lret
out
adc
push
xchg
xchg
adcl
outsl
cmc
pop
andl
xchg
cmp
sar
pop
test
xor
push
mov
mov
lods
fwait
mov
cmp
add
in
mov
fadds
adc
mov
cmp
fwait
cli
out
stc
jg
xor
push
lret
mov
mov
push
mov
jge
xor
mov
mov
cld
in
push
xor
sub
and
jb
out
in
subl
aas
pop
inc
xchg
into
mov
ret
cld
cmp
sbb
sbb
pusha
mov
add
cmp
aam
repnz
lea
ljmp
or
ds
pushf
add
adcl
movsl
fs
inc
inc
outsl
mov
jno
aas
sbb
pop
test
jle
mov
aas
jo
adc
imul
cmpl
adcl
mov
lea
pop
addl
sub
nop
mov
dec
lret
cwtl
dec
bound
xorl
bswap
jne
stos
adc
xor
imul
mov
mov
add
and
int
pop
orl
jg
sbbl
pop
inc
rcrb
out
test
gs
mov
push
dec
imul
mov
mov
add
mov
pusha
movsl
xor
inc
mov
ret
inc
mov
lret
gs
movsl
arpl
sub
sub
sbb
mov
jmp
ljmp
rcrl
adc
push
idivb
xchg
add
sub
cmpsl
int
mov
cld
mov
sbb
push
stos
mull
add
push
dec
adc
arpl
mov
push
imul
fadds
jo
mov
pop
rcrb
or
fisttps
and
in
push
cmp
add
lret
xchg
in
fadds
test
mov
adc
mov
xor
mov
insb
push
push
adc
subl
aaa
mov
lods
or
pop
adc
push
scas
push
jecxz
aad
mov
lock
jp
aam
lea
inc
int3
outsb
xor
ret
or
mov
sub
xchg
iret
pop
sub
sahf
sbb
mov
cmpsb
adc
or
cmp
cmp
fstpl
push
xchg
sar
push
andl
xlat
cmp
pop
insb
or
sbbl
repnz
aam
ss
idivb
pop
push
ret
subl
cmp
into
popa
jl
addl
jns
sub
xchg
pop
sub
fisttps
pop
mov
loope
fisubrs
mov
out
std
jg
pop
subl
mov
iret
sahf
mov
mov
subb
icebp
test
bound
pop
push
or
jae
hlt
inc
mov
push
and
jmp
cli
inc
mov
jg,pt
jg
icebp
cmpsl
cmp
stos
and
dec
inc
sbb
data16
sbbl
mov
fsubr
test
inc
sbb
call
es
jae
mov
mov
daa
outsl
fmull
push
popl
arpl
ds
lds
clc
cmp
fimull
jb
ljmp
inc
add
mov
cmc
aaa
ds
mov
sub
dec
sbb
clc
or
inc
lock
cmpl
pusha
pop
sbbl
or
lea
rolb
div
lret
icebp
mov
cmp
and
adc
xor
lds
je
fldcw
add
pop
pop
fwait
lret
lret
orl
packuswb
ret
xor
orb
lcall
loope
jb
inc
and
fisttps
stos
addl
ret
sub
arpl
jle
mov
rolb
dec
sbb
xor
push
repnz
xchg
cli
mov
mov
rorl
sub
adc
orl
sub
jbe
out
mov
rcl
int
jne
mov
xchg
cmp
inc
mov
sbbl
cmpsb
int
pop
xorl
js
test
mov
pop
push
inc
jo
cmpl
sub
xchg
in
dec
xorl
std
orl
outsl
scas
pop
and
jecxz
orl
xorl
mov
jno
into
shl
xchg
xchg
jg
loope
dec
add
adc
push
insb
test
xor
cmp
dec
ja
mov
mov
and
jae
hlt
xor
push
and
push
in
xchg
mov
gs
push
inc
sbb
enter
xchg
scas
mov
or
push
dec
sub
jae
loop
sbb
and
cmpsl
loopne
xor
das
push
jmp
sbb
xchg
sub
ficoms
aaa
pusha
subl
fists
pushl
and
xor
xchg
inc
sub
mov
and
sbb
pusha
fists
xchg
mov
orl
sbb
addl
push
add
jb
fwait
imul
push
mov
mov
adc
adc
icebp
fs
push
mov
cmp
push
sub
sbb
and
mov
mov
loopne
lds
cltd
inc
data16
mov
pop
pop
sub
insl
or
cmp
andl
out
pop
jecxz
loopw
xorl
pop
out
lcall
xor
bound
ljmpw
push
out
push
jg
fchs
rorl
push
daa
or
push
sub
cmpl
add
adc
in
pop
or
or
adc
mov
inc
mov
popa
adc
adc
dec
bound
movsl
and
and
std
jne
or
inc
push
sub
mov
push
inc
test
push
adc
cmpsb
or
sbb
pop
jg
xchg
adc
mov
nop
mov
and
icebp
test
fildll
jg
cli
std
push
dec
adc
adcl
popf
and
push
sbbl
lahf
pop
shl
or
mov
les
pop
pushf
aad
mov
in
xor
das
addb
pushf
sub
insl
jae
addl
push
mov
push
loope
rorb
xor
or
pop
xchg
xlat
pushf
mov
aad
and
jno
dec
mov
xlat
mov
ret
sbbl
jl
subl
daa
jno
add
and
mov
enter
outsl
sbb
cmp
jp
adcl
xchg
jbe
lock
lcall
inc
loope
lret
or
pop
mov
adc
and
mov
mov
iret
sub
push
add
int3
cmp
dec
daa
jno
cli
mov
push
shlb
xchg
cmp
pop
and
add
test
leave
loope
cmp
data16
in
or
push
add
and
dec
add
pop
mov
lcall
adc
pop
ret
mov
cmc
pop
cmp
mov
and
jg
jno
sub
pop
mov
clc
sbb
fdivrl
adcl
jbe
and
mov
adc
and
rorb
loope
mov
and
cmp
roll
or
loope
add
cltd
cmp
dec
movsb
cwtl
addl
mov
aas
outsl
subl
add
lret
clc
in
push
lcall
jecxz
out
xchg
movsb
shr
push
mov
out
dec
subl
subb
iret
test
sub
adc
adc
adcl
loopne
mov
cld
imul
test
into
adc
inc
sub
xchg
or
push
lock
cmc
cltd
sbb
and
xchg
xchg
nop
shrb
gs
mov
push
test
cmp
cmp
mov
mov
mov
sub
imul
adc
push
adc
sbbl
jg
imul
xchg
mov
jl
in
xor
adc
sbb
stos
adc
je
hlt
pop
xor
loopne
and
stos
cmp
popa
xchg
and
xlat
in
movsl
imul
fwait
pop
paddq
popa
ret
popl
cmp
sbb
jg
mov
out
mov
inc
add
mov
and
loopne
loop
pusha
imul
andl
out
xchg
push
stos
push
arpl
sub
inc
stos
push
addl
lods
adc
outsb
ret
xor
pusha
or
push
insl
icebp
mov
mov
mov
mov
push
and
in
mov
push
es
push
cmpsb
ljmp
mov
adcl
and
sub
movsb
adc
nop
push
xor
jmp
scas
jle
push
jmp
lea
popa
mov
faddl
in
xchg
scas
and
ds
push
xorb
jp
jl
push
out
xchg
inc
aaa
stos
xchg
fists
add
popf
add
add
jl
pusha
inc
cmpsb
das
orl
xchg
outsl
xor
sub
jo
push
int
fwait
sub
loop
adc
fsubs
xorl
out
lds
stos
dec
xchg
popf
cmp
sbb
or
xor
push
inc
sbbl
outsl
mov
sbbl
mov
or
xchg
enter
shl
mov
mov
sub
mov
nop
sbbl
stos
lods
xor
add
add
mov
mov
gs
rorl
inc
fistps
nop
test
orl
jp
sbbl
ret
xor
add
adc
outsl
inc
lahf
test
dec
mov
sub
shl
fstl
pop
inc
sbb
push
test
subl
roll
enter
xorl
in
mov
call
push
jmp
xor
out
lahf
andl
stos
es
les
stc
outsb
inc
adc
scas
mov
xchg
imul
dec
inc
push
jle
mov
es
cld
cmpsb
das
add
or
aad
xor
sub
test
adc
push
xchg
cli
jl
xchg
or
scas
sbb
loopne
das
aam
popa
xorl
pop
aas
add
sub
push
jmp
xchg
inc
es
outsb
jb
aad
jb
adc
movsl
mov
cmp
sbb
mov
hlt
rol
jns
cs
jae
cmc
js
mov
insl
lea
push
pop
mov
pop
cltd
inc
addl
lcall
xchg
add
outsl
inc
lds
or
jmp
adc
push
orl
cmp
jno
pop
imul
bndldx
movsl
out
cmpl
pop
das
js
jne
cli
cmp
cmove
cmpl
jmp
sti
shll
lods
repz
add
jecxz
add
inc
adc
ret
enter
pslld
dec
fildll
arpl
jnp
popf
fdivr
andl
pop
adc
ljmp
push
xchg
push
pop
nop
add
and
inc
xchg
divl
andl
xor
fldcw
push
test
clc
fistpll
movsb
jle
add
mov
hlt
inc
into
sbb
out
lods
insl
sub
sub
jmp
cltd
or
cmp
stc
int
aad
mov
push
and
add
divb
fmull
adc
outsb
sub
call
nop
adc
or
roll
ljmp
xor
sbb
push
popa
lret
mov
cltd
in
frstor
rol
out
mov
popa
xor
ficomps
mov
lods
jne
out
inc
jo
adcl
jmp
orl
mov
sbb
in
roll
mov
mov
ds
or
push
xorl
cmpl
pop
negb
leave
popf
ds
es
lods
adc
pop
sub
mov
les
int3
cmp
clc
cmp
mov
in
mov
xchg
loopne
mov
or
bound
dec
insl
loope
sbbl
xor
idivl
sbbl
inc
pop
add
andb
orl
fsubrl
subl
ljmp
aas
hlt
je
xlat
das
adcl
popa
cmp
mov
xor
push
filds
jmp
fiadds
icebp
pop
fisttpll
imul
jecxz
adcl
mov
loope
clc
inc
stos
fs
in
scas
and
xor
jnp
repnz
ss
stc
cmpsl
fs
mul
mov
mov
icebp
repnz
ss
bound
jge
lret
shl
scas
inc
insl
pushl
adc
mov
mov
xor
ljmp
xorl
ret
jnp
mov
or
mov
data16
sbb
gs
cmpl
dec
or
cmp
pop
xor
leave
pushf
pop
sub
subl
cwtl
fstpt
mov
scas
hlt
out
and
push
icebp
dec
sbb
jo
sub
fadds
lea
adc
push
pop
iret
scas
enter
push
cs
mov
or
adc
cmpsb
jne
cmp
mov
mov
cmpsl
outsb
test
mov
inc
inc
mov
in
ja
push
xchg
cmpsl
adc
test
cmp
daa
sar
imul
subl
xor
sub
inc
in
xchg
and
xchg
arpl
negb
adc
sbb
mov
adc
mov
les
jg
dec
xor
lcall
xorl
bnd
pop
mov
mov
or
adc
out
aam
andb
push
dec
subl
repnz
adc
sbb
aas
jnp
loope
xor
out
cwtl
xchg
fistpll
adc
xor
clc
iret
mov
sbb
jmp
pop
cmp
xorl
gs
push
mov
push
xor
or
cwtl
insb
dec
xchg
pop
ds
fnstsw
movb
stos
sub
fidivrl
pop
out
xor
orl
mov
mov
cmp
push
or
test
insb
adc
add
hlt
xor
jo
fcmove
inc
jbe
and
int
and
leave
sbb
ja
ret
sub
pop
jle
and
cwtl
lock
movsl
scas
push
lods
pop
pop
clc
jecxz
dec
loop
dec
push
leave
push
rol
bound
cmpl
repnz
scas
adcl
push
mov
hlt
xor
sarb
aaa
in
js
add
xchg
fstps
adc
push
andl
sub
outsb
push
lea
xor
ja
lcall
popa
xchg
mov
jnp
cmp
mov
add
inc
xchg
ljmp
inc
leave
subl
into
icebp
orl
mov
sub
cmp
sbb
addr16
clc
loop
push
mov
iret
xorl
jb
andl
call
adc
mov
inc
subl
out
sbbl
out
lods
dec
sub
push
adc
fmuls
stos
adc
shl
and
pop
add
rorb
xorw
orb
je
jge
pushf
sbbl
xorl
in
sub
mov
ret
nop
pop
sub
xor
ss
repnz
mov
test
dec
icebp
jb
push
mov
cs
and
inc
mov
and
sub
mov
push
inc
pop
cltd
xchg
sbb
jg
mov
jg
mov
add
lea
push
sub
orl
inc
adc
xorl
sbb
lret
movsb
int3
mov
iret
daa
faddl
mov
jae
je
rcll
movsl
mov
loopne
in
pop
enter
outsb
mov
pop
pop
leave
imul
cmp
sbbl
sbb
push
mov
jns
addl
mov
pop
daa
or
xchg
cmpl
decb
arpl
adc
sub
lret
pop
mov
test
or
je
icebp
mov
adc
xchg
sub
add
test
sahf
cmp
popf
mov
pop
xchg
add
jg
xchg
mov
ljmp
xorl
pop
xchg
inc
insl
adcb
ret
jno
push
imul
sbb
sub
mov
cmpb
andl
mov
inc
mov
scas
loopne
add
stos
xchg
imul
push
fs
mov
cwtl
cmp
test
andl
sbb
cmpsb
mov
add
push
insb
jg
fwait
adc
mov
dec
testl
mov
leave
and
imul
or
into
lods
push
mov
adc
and
xchg
das
ret
pop
adc
outsl
pop
sub
out
rcr
xorl
rolb
mov
les
std
adc
aad
fldcw
outsl
pop
sub
cli
lahf
or
jl
aam
mov
push
inc
cmp
insl
les
int
or
loope
jecxz
cmpsb
mov
out
ret
push
stos
int
and
testb
ss
add
fstl
stos
pusha
jecxz
daa
pop
icebp
lahf
mov
dec
movsb
or
jb
sbbl
lahf
les
arpl
xchg
fmuls
cmpsb
icebp
inc
pop
cmp
mov
sub
ja
jmp
insb
popa
inc
mov
jno
push
and
cli
jns
cmp
mov
and
out
or
cld
or
push
test
pop
in
cli
push
lock
out
das
movsb
mov
in
mov
out
xchg
mov
subb
inc
ljmp
jb
and
cmp
push
scas
jmp
mov
ljmp
in
clc
pop
imul
sub
mov
sbb
enter
test
iret
aad
inc
mov
jp
cli
fisttpll
addr16
fdivrs
lret
enter
sti
mov
jbe
dec
test
jno
std
out
adcl
cmp
loopne
ja
jbe
pop
in
lods
add
mov
lds
adc
loopne
icebp
scas
stos
std
push
inc
add
add
mov
fstpl
add
adcl
jmp
adcl
dec
movsl
and
fstps
xchg
push
loop
and
push
shll
cmp
cmpl
add
sub
inc
cmp
add
jp
rol
cltd
fidivl
sub
je
or
push
pop
mov
and
cmp
andl
addr16
sbb
in
inc
pop
xorl
add
movb
pop
push
jg
sbb
xor
imull
sbbl
sbb
sub
mov
in
aam
push
cmp
jle
sar
push
shll
push
lock
jne
fmull
mov
pop
fcomps
xchg
movsb
scas
jb
int3
outsl
xchg
xor
ss
sbb
lcall
outsb
pushf
imul
call
mov
mov
jne
xor
inc
loope
flds
jb
push
fldl
orl
mov
dec
add
jb
jns
push
cltd
cmp
push
scas
aas
xchg
outsl
stc
mov
add
push
andl
sub
mov
adc
icebp
cmp
mov
cld
dec
pop
adcb
mov
fcmovne
in
icebp
rolb
dec
sbb
stos
insb
dec
adc
add
and
xchg
aad
cmc
cs
xchg
bound
mov
mov
pop
mov
xorl
sbb
sbbl
mov
cmpl
dec
sbb
js
push
shll
pusha
mov
jae
pop
add
scas
pop
bound
jnp
mov
xchg
mov
repnz
jecxz
lea
jo
mov
and
dec
sbb
jo
insb
out
ret
dec
clc
xor
push
daa
jg
rcrl
mov
jne
into
cmpw
xchg
adc
nop
sbbl
dec
mov
push
cld
lods
filds
sub
dec
push
lret
leave
cltd
inc
rorb
sub
jle
ljmp
xor
pop
loope
dec
inc
mov
ret
adcl
mov
sbb
cs
out
cmp
sub
iret
ret
mov
aaa
mov
sahf
ret
scas
cs
pushl
cmp
or
sarb
add
addr16
subl
sbb
inc
pop
push
ret
into
jg
or
sub
insb
jmp
mov
sahf
enter
mov
sbb
into
push
insb
hlt
outsb
ja
sbbl
xorl
jb
xor
mov
aas
and
cmp
lea
icebp
push
and
or
jp
mov
jg
sahf
imulb
out
imul
ret
in
dec
daa
addl
in
movsb
je
jl
popf
arpl
aam
jle
rcrl
ret
mov
mov
push
popl
lret
icebp
mov
repnz
mov
lcall
push
icebp
int
push
mov
adc
or
pop
lret
lahf
fisubs
mov
mov
add
scas
xor
add
subl
daa
push
ret
insl
repz
jl
pop
adc
addl
pop
push
dec
lret
adc
dec
sub
pop
jle
filds
lret
addb
mov
mov
cmp
and
add
dec
cmpsl
jp
mov
dec
idivl
xor
mov
xchg
push
orl
add
jmp
xchg
jge
scas
mov
pcmpeqb
es
aad
push
cmp
mov
pusha
sub
pop
sbb
inc
cmp
mov
inc
loopne
jb
repnz
sarl
call
xorl
cmp
aas
inc
loop
jb
cmp
sub
pop
popf
roll
out
sti
jge
sub
js
jb
jnp
push
mov
frstor
xchg
add
mov
fcompl
jo
xor
sbb
aam
and
mov
es
and
and
movsl
xor
gs
jl,pn
sub
xchg
daa
mov
add
and
sbb
adc
stos
inc
mov
xchg
repnz
fdivrs
jg
dec
mov
sbb
int3
test
cli
inc
subl
xchg
jecxz
xchg
out
xor
dec
add
cmc
push
cwtl
and
test
cli
nop
push
lret
lea
call
pop
lock
xor
das
outsl
ljmp
cmp
lret
sub
sub
test
pop
xlat
cmp
icebp
das
mov
lcall
dec
iret
or
xor
xor
cmc
xor
and
inc
sub
mov
or
aas
mov
pop
sbb
outsb
xchg
or
jmp
sbb
pop
push
insl
dec
aas
mov
or
lea
adc
jl
or
imul
pop
sub
push
inc
daa
in
fwait
or
andl
mov
rcr
cmp
dec
inc
mov
divl
inc
adc
pop
add
sbb
pop
std
or
lock
push
daa
cmp
sbb
inc
les
xchg
out
test
jp
ja
push
pop
ret
mov
mov
jg
xor
mov
test
dec
mov
push
std
jnp
jl
push
adc
bound
cmpsb
je
mov
mov
cmpl
push
pop
sub
mov
add
dec
xor
inc
iret
cmpl
pop
xor
outsb
push
loop
test
and
mov
cmpsl
fbld
mov
popf
push
xor
jmp
jle
ss
sbbl
mov
fcoml
pop
roll
mov
or
fmuls
testb
xchg
dec
int3
mov
pusha
aaa
ss
aas
push
xor
push
daa
xorb
or
mov
sbb
lret
and
cmpsl
imul
sbbl
lods
mov
addl
sub
mov
hlt
out
adc
inc
inc
sahf
cli
sbbl
xchg
cmp
fnstenv
test
xchg
enter
mov
mov
mov
hlt
mov
ror
sub
mov
push
mov
ds
out
mov
lds
sbb
xor
ss
daa
pop
cmp
insl
xchg
push
jecxz
mov
lea
cmp
sbb
hlt
ficoml
xor
inc
dec
mov
testl
imul
sbbl
loopne
sbbl
dec
faddl
fisubrl
xchg
out
out
icebp
or
cmp
orl
clc
pop
inc
cmc
sbb
jno
sbb
xchg
mov
push
add
adc
fistpl
push
cs
mov
or
push
aaa
outsl
rcr
cmc
icebp
or
notb
cmp
mov
and
sub
xorb
cld
lea
mov
cmc
and
pop
dec
xor
xor
aas
pop
push
cli
incl
pop
inc
scas
in
stc
outsb
and
mov
rolb
aaa
mov
shl
cmp
mov
loope
stos
lea
repnz
out
cltd
aas
pop
int
aas
xchg
aam
insl
loope
pushf
iret
ljmp
xchg
nop
pop
dec
cwtl
orl
ja
outsb
mov
mov
or
loop
out
or
dec
xchg
dec
andl
incl
add
stc
push
filds
dec
lods
scas
jle
jmp
xor
xchg
mov
in
lea
ja
mov
pop
and
and
sbbb
loope
imul
sub
test
fimuls
jns
jg
movsb
into
adc
bound
xchg
fsubl
add
lock
xchg
repz
ret
cmp
lds
shlb
mov
and
mov
fisttps
orb
jp
or
orl
sbb
fidivrl
sahf
and
leave
mov
and
call
das
and
lock
daa
int
aaa
repnz
inc
mov
add
subl
mov
push
dec
stos
sbbl
shrb
arpl
cmp
mov
pusha
dec
mov
push
movsb
rorl
testb
dec
sbb
mov
cli
roll
mov
cmp
lret
lahf
xchg
mov
jmp
and
clc
mov
sub
xchg
notb
fisttpll
ret
pop
pushf
cmp
dec
add
add
orl
inc
mulb
push
add
or
sbb
cmpsb
sub
push
stos
xchg
ficoml
sbbb
cwtl
adc
outsl
xchg
jns
jle
mov
test
mov
xor
xor
ret
xor
test
mov
test
sub
xabort
nop
mov
icebp
sbb
pop
push
push
cli
out
loope
xchg
insb
mov
mov
jb
jg
or
movsb
pushf
loope
add
in
orl
into
movsl
add
jmp
inc
inc
mov
nop
push
andl
sbb
mov
jb
cltd
pcmpeqw
or
popf
loopne
cmpl
push
movsb
clc
cmp
push
xchg
xorl
arpl
sbb
adc
cmp
roll
cmp
xorl
pop
dec
sub
cli
push
inc
addl
xchg
ds
push
mov
sbb
jne
mov
mov
sub
ficoms
movsl
jo
xor
mov
icebp
out
sub
xchg
dec
das
cli
xchg
jnp
rcrl
orl
sti
aas
inc
jo
mov
je
je
cmpl
push
dec
push
mov
jnp
mov
xor
insl
and
rolb
enter
je
adcb
lea
inc
aas
cmpsl
enter
cmc
loop
les
cmp
out
fildll
push
push
adc
out
popa
in
sarl
sbb
cmp
jae
push
inc
sbb
pop
inc
rolb
addl
ds
out
pop
add
xor
push
lods
stc
bound
stos
icebp
pop
mov
jbe
mov
leave
adcl
jmp
in
es
flds
mov
mov
adc
stos
push
push
bound
inc
xchg
loope
xchg
cmpb
movl
icebp
jmp
sbb
inc
ja
push
mov
and
dec
ret
add
or
xor
inc
outsb
insb
push
mov
mov
xchg
xor
mov
push
es
sbbl
add
inc
sub
pop
loope
faddp
xchg
hlt
xchg
lea
sub
mov
ss
stos
cmpl
mov
lods
popl
mov
adcl
sbb
addb
push
cmpl
ds
xchg
jmp
iret
icebp
icebp
inc
hlt
inc
popf
shrl
push
movb
sbb
icebp
loope
pop
test
and
repnz
xor
mov
or
fdivrs
test
cmp
test
and
mov
fs
lock
stos
add
mov
inc
movsb
ret
stos
xchg
mov
sbb
adcl
popf
jo
std
adc
sbbl
sbbl
subb
sub
imul
inc
jo
adc
ds
dec
je
addl
rcrl
jecxz
subl
inc
cmp
xor
xlat
push
test
sbb
in
nop
xor
dec
pop
andl
lcall
jae
daa
sub
dec
lea
out
xchg
mov
lock
iret
fdiv
test
adc
std
sub
mov
out
add
ds
mov
bound
push
cmpl
loop
shlb
outsb
mov
sbb
inc
jle
cmp
fucomip
mov
push
lock
mov
inc
jg
ret
dec
xor
hlt
xlat
es
cmp
test
iret
std
mov
xchg
lods
outsb
jge
mov
mov
inc
jns
xor
fiadds
js
add
xchg
mov
xor
addl
stc
add
push
stos
ret
cs
push
add
andl
inc
or
add
test
sub
dec
pop
test
add
inc
inc
mov
adc
testl
fldz
test
into
and
mov
push
inc
mov
outsl
insl
outsb
add
test
adc
or
push
cmpl
dec
mov
pusha
xchg
or
pushf
scas
xchg
xchg
sbb
sahf
push
stc
fdivrs
mov
jle
sbb
sahf
cmpsb
and
push
pop
test
aaa
icebp
cwtl
rolb
dec
cmpsb
je
push
sub
sbbl
insl
loope
aam
cmpsb
xor
jnp
out
adc
xorl
fucomp
jg
cmp
dec
loop
out
popa
adcl
dec
jbe
sbbl
dec
insb
icebp
pusha
xchg
dec
or
sbbb
add
jg
and
je
mov
pop
cmp
sub
mov
gs
xchg
add
test
test
xor
in
sub
xchg
jno
out
enter
jg
xor
xchg
or
sbb
out
lcall
in
jp
push
sub
pop
push
lods
pop
cwtl
xorl
sbb
xorl
loope
ds
in
sbb
dec
sbbb
mov
mov
scas
pushfw
mov
jmp
rclb
mov
sub
xchg
lahf
daa
gs
cmp
and
or
in
popa
mov
out
add
test
imul
in
call
or
mov
add
push
in
xor
pop
iret
lods
or
push
mov
or
sbbb
mov
or
mov
leave
andl
dec
mov
aas
fdivrs
test
jo
push
lcall
inc
lock
outsl
jge
sbb
in
pop
push
cmp
notb
filds
lock
or
adc
cld
orl
mov
js
cwtl
add
jg
adcl
and
add
shll
je
mov
arpl
popa
cmp
movsb
sbb
mov
out
jbe
femms
sbb
sbb
or
repnz
icebp
loopne
mov
lret
enter
xor
cmpsb
mov
cmpl
aas
pop
iret
pop
mov
add
and
cltd
pop
jg
arpl
andb
xor
add
mov
shlb
movsb
fwait
test
inc
adcl
loopne
addl
enter
adc
mov
imul
cmp
dec
adc
xlat
pop
add
pop
jbe
mov
pusha
xorl
mov
rcrl
mov
stc
add
add
adcl
pop
aad
xorl
push
out
add
sar
cmc
dec
mov
inc
js
inc
xor
dec
mov
movsl
cli
xlat
mov
or
jns
mov
lock
popf
stos
fsubp
pop
jo
bound
and
lret
dec
pop
lods
xchg
push
push
bound
jo
sbb
test
push
dec
nop
addl
jbe
adcl
xchg
mov
orl
push
daa
mov
jg
testb
jns
jne
nop
lods
inc
pushf
gs
hlt
lods
sarl
shl
aam
mov
int
lret
xchg
stos
sub
cmpl
dec
fsubrl
sbb
xorl
mov
lock
sub
lds
ljmp
in
mov
add
out
arpl
or
int
xor
ss
pop
subl
xchg
je
cs
stos
data16
into
ljmp
aas
push
fsubs
dec
mov
in
jne
xchg
jne
push
cmpsl
xchg
xchg
push
xchg
jg
repz
rcr
shrb
pop
jns
test
cltd
sub
sbbl
pushl
push
movsl
lahf
sub
or
mov
cld
std
mov
insl
mov
jns
sarl
push
xor
movsb
notl
inc
test
subl
or
pop
dec
sub
sbbl
xchg
movb
stc
jmp
adc
sbb
pop
jl
or
pushf
xorl
arpl
test
cli
nop
subl
dec
aaa
cmpsl
pushl
movsb
mov
jno
dec
lret
mov
mov
outsl
pop
je
rcll
cmpsl
adcl
push
add
mov
movl
cmpsl
lret
mov
fistpl
aas
fmuls
sbb
jmp
sub
cli
and
xorl
sarb
inc
jg
mov
enter
fildl
dec
jecxz
push
cmpsl
xchg
roll
push
mov
jbe
or
mov
mov
stos
lret
sahf
and
inc
inc
movsl
dec
jle
mov
fistpll
lcall
sub
orl
outsb
fildll
test
mov
movsb
mov
adc
mov
outsb
loopw
insl
mov
rcl
mov
clc
orl
push
pop
dec
add
dec
fsts
mov
push
pop
xchg
outsl
je
icebp
add
fildll
or
call
aaa
mov
out
inc
dec
clc
jbe
xchg
aam
imul
pop
es
in
stos
and
pop
inc
mov
les
mov
aas
mov
shll
in
subl
orl
or
shll
repz
mov
dec
test
inc
xchg
mov
pop
cmp
inc
mov
repz
push
add
popa
xchg
out
pop
or
bound
xchg
out
xor
jo
mov
sbb
inc
lock
out
ret
adc
fsubs
ds
rorb
test
sbb
and
pop
mov
and
js
lock
lahf
ja
je
test
xchg
xchg
into
int3
fmuls
popa
add
inc
roll
sub
scas
andl
movsb
push
test
lcall
jp
push
xchg
lea
sub
adc
cmp
sbb
addr16
shlb
lret
and
icebp
push
cmc
mov
jb
sti
andl
ss
jecxz
addr16
jmp
inc
fimull
sbb
or
push
sub
movl
sahf
fdiv
push
icebp
adcl
call
push
xor
xor
incb
subl
adc
loop
mov
in
call
xor
outsb
and
ret
pop
shrb
in
hlt
leave
sub
sbb
lods
out
add
mov
push
xor
loope
stos
sbb
and
xor
aas
push
inc
mov
inc
mov
xor
sub
sbb
lret
xorl
loopne
outsl
xchg
dec
jg
out
dec
mov
mov
mov
lcall
andl
jbe
or
and
mov
jmp
fsubrl
mov
mov
cmp
and
pop
jno
mov
out
inc
repz
and
push
mov
mov
sbb
mov
push
inc
mov
int3
add
xchg
push
ret
xchg
xorl
jnp
ret
sahf
xchg
mov
mov
movsb
push
xchg
cs
mov
xchg
or
push
sbb
sub
mov
pop
addb
cmp
stos
mov
and
or
xchg
lret
xchg
andl
push
pop
and
js
andl
inc
ss
divl
pop
lea
inc
inc
aaa
fcom
subl
ljmp
cmp
xchg
jp
xor
mov
xor
adc
test
clc
addl
xorl
out
jns
movsb
cmp
adcl
frstor
add
lods
pop
insl
imul
sub
xchg
adcl
hlt
outsb
or
fwait
les
push
xor
push
pop
aas
lahf
daa
inc
mov
xorl
xorb
ss
orb
aad
mov
and
or
push
xchg
outsl
xorl
call
ss
mov
mov
and
cmpsb
jb
add
repnz
sbb
outsb
out
gs
cmpl
js
sbbl
inc
leave
lcall
pop
push
xor
aaa
inc
jno
pop
inc
shlb
push
testb
in
icebp
ret
mov
outsl
or
ret
xchg
add
sbb
jge
div
test
jno
push
mov
dec
xor
test
rclb
xor
daa
cld
outsl
mov
pop
sbb
ret
sub
aas
or
sbbb
xor
ss
mov
dec
movsb
push
cmpsb
ds
pop
mov
das
cmc
fimull
rclb
scas
cld
push
dec
cs
jbe
cltd
aas
call
in
loop
subl
or
xchg
mov
mov
ljmp
ret
call
push
xor
and
je
adc
inc
fiaddl
fcmove
xor
lods
insb
popf
ret
pop
add
orl
sub
sub
ds
out
es
das
sub
xor
imul
pop
cmp
sub
in
jmp
subl
xor
and
jl
adc
pop
fmul
xchg
cli
inc
jns
pop
adc
cmp
pop
scas
in
cmp
pop
cmp
inc
sub
std
aad
sahf
sbb
lea
mov
adcl
ficomps
jnp
mov
daa
subl
jmp
jo
mov
icebp
jmp
or
mov
pop
addb
xor
int3
insl
cmc
jmp
icebp
ror
out
fcmove
add
add
or
fldcw
or
lret
mov
push
cli
mov
sbb
test
jae
aam
add
adc
or
test
mov
jge
jp
mov
mov
cmpl
adc
pop
lods
xchg
int
cmp
sbb
push
out
popa
cmp
xchg
or
ljmp
mov
subl
sti
mov
adc
pop
aam
call
lcall
push
add
sbb
inc
add
movsb
xor
outsl
cmpsb
rorl
mov
sbbl
or
lea
pop
iret
pop
movsl
mov
andl
repnz
pop
mov
dec
out
inc
xchg
repz
push
lahf
push
lcall
fcmovb
sub
jo
sarb
add
dec
xchg
pop
pop
add
mov
lods
or
xor
mov
add
jle
sahf
xchg
pusha
pop
xchg
inc
iret
mov
push
jo
ret
movsl
sub
pop
jmp
mov
je
ss
mov
into
inc
popa
cmp
mov
push
in
adc
std
es
push
xchg
add
and
xchg
lods
mov
imul
sub
lds
gs
aaa
cmc
out
les
test
les
sahf
movsb
idiv
pop
lea
imul
cmpsb
sti
inc
fs
call
sub
loopne
pop
popf
inc
mov
adcl
fildl
jbe
add
mov
cmpl
cmpl
mov
test
mov
negl
xchg
subl
mov
pop
popf
repnz
pop
push
addl
sbb
loope
jle
fwait
inc
mov
shll
xchg
pop
in
ss
enter
xchg
xchg
mov
scas
cmpsl
mov
adc
mov
popl
dec
dec
icebp
jb
xor
pop
sbb
add
popf
ds
add
cmp
pop
inc
pop
pop
test
cmpb
inc
xchg
xor
out
outsl
ret
sub
test
je
cmp
roll
inc
imul
sub
idivl
xchg
icebp
push
xor
fcmovnbe
pop
mov
sbbl
sub
xchg
mov
mov
mov
add
lret
xchg
push
push
cld
dec
inc
das
iret
andl
outsl
pop
lock
in
mov
mov
mov
adc
aad
bound
rolb
imul
adcl
std
mov
adcl
add
subl
mov
xchg
inc
popa
jae
scas
andb
out
addl
dec
mov
lret
fidivrl
out
mov
sbb
jecxz
jo
inc
scas
xchg
mov
adc
xor
or
dec
adc
test
cmpl
movsl
jl
out
or
je
cmp
sbb
adcl
stos
pop
sti
lods
or
add
xor
inc
pop
mov
xchg
cmp
xor
clc
mov
mov
popf
stc
addr16
and
cmp
into
or
das
popf
hlt
jo
xlat
push
aad
dec
jmp
mov
int3
mov
xchg
jmp
add
xchg
dec
loopne
push
mov
push
mov
or
notl
js
addl
gs
mov
jg
fadds
mov
andl
jmp
dec
push
stos
test
mov
ret
mov
sbb
lret
stc
cwtl
insb
mov
out
mov
pop
pop
push
fs
in
ficomps
cmp
es
jae
sub
aaa
out
jne
mov
mov
mov
cmpl
mov
movl
xchg
ficompl
mov
mov
pop
inc
jge
inc
xor
test
inc
lea
mov
sbb
dec
ret
mov
loope
jecxz
stos
movsb
dec
inc
jno
test
push
cmp
inc
das
loop
popf
cmpl
bound
pop
push
leave
int3
lcall
daa
mov
scas
push
xor
inc
repnz
decl
imul
and
sub
cmp
dec
in
out
les
incl
orl
mov
aaa
mov
pushf
andl
push
mov
sbb
adc
out
inc
mov
in
cmp
pop
gs
jns
lea
mov
jp
ljmp
mov
aas
stos
daa
sub
inc
mov
dec
inc
sbb
fadd
lds
mov
sbb
mulb
pop
mov
pop
adc
xlat
fiaddl
sub
mov
scas
lret
mov
subl
push
sti
cmpl
data16
dec
push
sahf
cmpl
xchg
loopne
mov
inc
imul
aad
data16
fsave
movsl
xor
rcl
xor
pop
add
sub
xorl
or
mov
popa
or
sarl
movsl
in
mov
and
push
pop
stc
aas
inc
push
lea
sti
cmp
cli
mull
pop
stos
in
mov
dec
sub
movl
add
sbb
mov
scas
cld
adc
pop
mov
rcr
cs
in
ss
ret
mov
cmp
cli
or
xorl
subb
lret
mov
subl
push
pop
decb
cmp
push
mov
xor
push
push
dec
fstl
fists
popf
in
jb
gs
shlb
sub
out
and
xorl
pop
push
inc
test
jne,pn
jns
mov
sub
sbb
cltd
or
lret
adc
add
ds
adc
pop
orl
aas
mov
aaa
sub
dec
nop
jmp
call
dec
testb
ret
sub
mov
mov
movsb
insb
test
aad
adc
cmpsb
in
mov
lcall
or
push
bound
adcl
dec
fcmovu
lea
mov
fs
rorb
sbb
notb
movsb
jno
or
repnz
sarb
mov
mov
sbbl
mov
sub
xchg
aaa
cwtl
xorl
rolb
dec
jbe
push
jno
xchg
fwait
in
mov
aas
push
lahf
adc
push
cmp
cmp
lods
mov
adc
loop
mov
int
mov
stos
insl
sbbl
movsb
lea
push
cmpsl
fidivrl
cmp
imul
bound
mov
loop
dec
add
call
adc
adcl
cmp
ss
jle
xor
cmpsl
fcompl
jl
insl
jmp
and
mov
sbb
xor
aaa
lea
adc
and
mov
xchg
stc
mov
xor
aas
movl
dec
inc
fisttpl
fwait
mov
lds
and
push
sbb
xchg
or
andl
int
out
mov
mov
push
inc
jae
outsb
ljmp
xchg
rcrl
jns
call
cwtl
xor
mov
inc
jecxz
imul
sbb
out
or
sahf
xor
and
mov
fstpt
xor
aaa
or
jecxz
in
daa
push
cmp
inc
test
test
insl
outsb
mov
in
inc
hlt
sub
pop
jge
or
movsb
adc
lods
leave
int
cmpb
das
and
hlt
xchg
jl
xorl
das
incl
jecxz
js
fistps
stos
or
lret
or
divl
push
jne
xor
lods
ficomps
mov
mov
or
sub
mov
test
bound
iret
je
mov
inc
sbb
jle
xor
xchg
out
cmp
sahf
ret
mov
dec
mov
push
test
lock
mov
adc
pop
dec
div
shll
jmp
das
mov
or
pop
mov
push
add
adc
inc
popf
cld
add
je
loop
das
xor
cwtl
xchg
or
add
xchg
sbb
fmuls
pop
cmpl
aas
jge
sub
arpl
clc
xchg
xor
outsb
int3
and
mov
sub
fildl
push
dec
inc
mov
test
mov
xlat
sbbl
fwait
aam
sub
jg
xchg
ret
jns
xor
cld
das
or
cmpl
inc
sbb
add
pushf
shll
int
lea
sub
out
or
push
xchg
rorl
cmp
repz
push
test
testl
mov
pop
bound
aam
mov
pop
movsl
cwtl
addl
imul
pop
notb
lret
out
jg
rcrl
testl
mov
lar
cmpl
sbb
mov
addb
or
outsl
lcall
test
jmp
push
addl
inc
mov
jo
call
sub
jns
push
fsubrl
jne
mov
ja
fsubp
sbb
mov
pop
mov
mov
aaa
mull
xor
in
xor
xor
movsb
icebp
sahf
mov
add
cmpb
mov
call
fiadds
mov
adc
push
test
cs
push
or
fs
outsl
in
cmp
inc
push
enter
push
mov
fadds
cwtl
xchg
mov
dec
repnz
lret
mov
cmpb
xchg
adc
sub
stos
xchg
cmp
mov
dec
xor
jb
outsl
repnz
shlb
imul
mov
mov
or
cmpsl
loop
outsl
dec
push
test
xchg
mov
jg
daa
call
fcomps
and
outsl
mov
mov
sub
adc
test
push
cmp
jl
push
nop
inc
idivb
aas
add
push
mov
imull
push
shll
in
icebp
cmp
xor
pop
pop
or
sbb
sbbl
mov
lock
lahf
iret
mov
adc
and
and
xor
out
repz
lret
pop
mov
pop
and
inc
movsl
dec
mov
addr16
test
enter
fildl
cmp
nop
and
in
jg
repnz
jno
xor
inc
popf
sbbl
xor
je
mov
stos
fisttps
jno
repz
pop
outsl
out
js
movsb
movsl
cmp
cltd
out
cli
or
test
test
xor
dec
subl
fmul
jg
ljmp
jecxz
pop
and
mov
insl
add
movsl
mov
dec
jle
jb
test
adc
stos
dec
jo
inc
dec
mov
pop
or
lea
xchg
out
ljmp
dec
push
fdivrs
int
mov
sbb
scas
insl
imul
out
loopne
inc
xor
inc
das
jmp
lcall
mov
xor
testb
or
jmp
mov
fidivrs
stos
mov
mov
out
lods
aas
pusha
sbbl
mov
pop
fisttpll
cmpsb
subl
jle
inc
sbb
loope
sahf
lods
cmp
xchg
mov
or
outsb
cmc
addr16
sub
fcomp
pop
xchg
mov
mov
aas
fdivl
mov
lcall
adc
ret
out
rorl
xor
dec
inc
out
sub
pop
xchg
xor
outsl
sub
xor
adc
and
jl
jno
mov
pop
andl
inc
imul
fs
mov
or
jmp
sti
test
pop
jb
js
mov
cmpsl
paddw
scas
je
sbb
xor
stos
jne
cmp
fsts
in
dec
test
sub
sbb
cs
stos
mov
scas
mov
cmpl
dec
sub
imul
jp
add
subl
scas
cwtl
orl
popf
movsl
inc
push
push
add
adc
adc
dec
mov
dec
cmp
ljmp
jnp
decb
movsb
fmull
lods
push
jmp
subl
lea
pusha
pop
iret
mov
test
outsl
mov
add
sarl
pushf
jge
sub
out
inc
insb
icebp
and
scas
jns
pushw
xor
orl
cs
fidivrl
sub
jl
dec
inc
cli
stc
inc
sbb
jp
cmp
xor
aaa
daa
lock
mov
fwait
movsb
stos
jne
pop
mov
xor
rolb
dec
rorl
or
cmp
mov
xchg
pop
stos
scas
mov
dec
subl
aas
js
mov
push
sbb
pop
mov
sbb
andl
push
jge
sbb
cmpsb
xor
jmp
subl
adc
xor
insl
add
xor
push
in
icebp
stos
sub
scas
sbb
and
mov
fdivp
and
adc
scas
pop
cmpl
xor
fcomi
xchg
sub
jbe
cmp
aas
int3
jg
xor
gs
jo
mov
mov
mov
pop
jle
xor
popa
xchg
sbb
mov
imul
inc
xchg
addl
dec
shll
add
add
ret
lods
add
lea
push
mov
cld
push
cmpl
jmp
pushf
stos
inc
fstpl
cmp
fwait
jbe
subl
leave
or
in
sti
xor
pusha
stos
cmp
mov
out
and
insb
fisttps
xlat
cs
das
sarl
mov
js
mov
pop
lods
rcll
stc
loope
lea
fidivrl
inc
mov
scas
loop
jno
push
orl
fstpl
insl
adc
add
mov
mov
pop
xchg
jg
push
test
pop
std
jno
dec
and
bound
out
mov
xorl
dec
adc
jmp
pop
mov
cli
sarl
adcl
xor
gs
jne
adc
test
mov
jns
inc
std
popl
mov
loop
pop
bound
mov
add
pop
ret
loope
add
pop
inc
xchg
lea
addr16
cmpl
std
hlt
xorl
dec
mov
ljmp
jnp
inc
idiv
stos
roll
pop
loopne
or
inc
jmp
js
jnp
insb
inc
mov
pop
xor
jne
shll
sbbb
jle
push
sbbl
nop
jnp
cld
push
jge
sub
rolb
out
addr16
mov
xor
jb
adc
call
pop
inc
xor
push
orl
popa
std
in
pop
sbb
mov
jns
xor
outsb
pop
shlb
jle
or
scas
sub
xorl
sbbl
pop
xor
xchg
xchg
push
mov
sub
in
xchg
sbb
adc
test
js
xorl
cmp
loopne
popf
cmc
inc
jp
loope
out
jge
cmpsb
rolb
mov
jo
adc
jg
add
mov
cmp
xor
sbb
or
push
jnp
lds
imul
jne
xor
jnp
test
test
ljmp
in
lea
jge
lods
fsubl
sub
sbbl
and
popa
xchg
ret
out
dec
mov
ljmp
push
sub
sbb
mov
mov
addl
test
sbb
data16
fstl
repnz
sbb
jecxz
push
insl
or
xor
mov
repnz
and
pop
lret
and
mov
enter
mov
pop
and
lcall
addl
dec
enter
push
pop
nop
insl
lcall
jns
hlt
xchg
rcl
adc
mov
addl
push
lahf
fs
xchg
loop
jge
xchg
leave
andl
xor
pusha
jbe
adc
mov
dec
andl
call
pop
add
mov
jns
cmp
cs
xlat
cmp
cli
mov
sub
jo
push
cmp
loop
xor
clc
cwtl
stc
push
sahf
mov
push
xorl
outsl
cmpsb
loopne
aas
xlat
ds
mov
sub
adc
faddl
sbb
test
lret
lret
jno
roll
jl
sub
adcl
ret
in
enter
std
pop
xchg
xor
or
daa
vmwrite
aas
sbb
out
mov
mov
inc
dec
out
sbbl
call
dec
xchg
mov
aas
push
fnstsw
xor
xchg
push
rcrb
xchg
mov
repz
jno
mov
pop
xchg
fs
cmp
push
mov
aad
sti
xchg
inc
int
ret
adc
iret
sbb
int
pop
mov
shlb
into
xchg
subb
add
xorl
sahf
cmp
push
add
or
nop
jbe
xor
arpl
test
inc
ljmp
pop
add
and
pop
popl
flds
insb
fdiv
cmpsl
inc
aaa
outsb
jg
rolb
xor
pop
shrb
rorb
iret
or
pop
mov
pop
lods
fnop
rorb
movsb
push
jnp
jge
mov
ss
sbb
pcmpgtb
cmp
loopne
in
xor
daa
sub
mov
repnz
movsb
fs
mov
filds
mov
leave
pop
mov
iret
push
sub
cmp
xor
cmpsl
xor
int
imull
adc
popf
xchg
or
orb
loope
mov
cmp
pop
lea
cli
jns
mov
push
jmp
mov
out
mov
xchg
stos
add
ret
movsb
dec
push
and
rcll
orl
mov
jmp
lock
lods
cmpl
mov
xlat
mov
addl
push
jo
cmp
mov
shll
inc
stos
data16
lret
aad
sub
mov
push
ljmp
xlat
stos
cli
xchg
fwait
pop
sbb
mov
dec
out
adcl
cld
loope
and
fs
mov
xchg
mov
orl
pop
xor
sbb
push
call
in
stc
mov
aas
addb
adc
push
js
xchg
mov
subl
xor
out
or
outsb
cmp
and
add
xchg
jo
in
sub
lcall
loope
inc
push
mov
jg
pop
icebp
sti
cmp
aam
pop
jg
mov
iret
push
dec
outsl
inc
scas
mov
mov
roll
repz
xchg
mov
hlt
xor
xchg
out
inc
iret
lods
sub
aaa
loop
aas
mov
in
cmpl
andl
push
push
push
or
subl
push
pop
daa
fnstenvs
scas
jb
repnz
popf
dec
icebp
orl
mov
xor
test
push
mov
cmp
loop
pop
or
add
inc
lea
xorl
adc
xchg
sbb
xor
aad
xor
dec
divb
pushf
adcl
cmpsl
pop
scas
jno
insl
inc
ja
dec
cmp
or
mov
test
cmc
lret
add
andl
jmp
jl
and
rcr
mov
mov
or
add
das
outsb
adcb
insb
lahf
pop
xor
ja
dec
shl
jns
or
rcll
ret
enter
xor
dec
inc
xlat
adc
push
sbb
dec
push
sti
pop
rorl
sub
test
pop
jle
mov
imul
push
scas
xchg
or
pusha
inc
or
fidivrl
aam
cltd
xor
ds
sbb
loope
fcmovnbe
orl
xor
jmp
sub
subb
inc
push
xchg
jge
xchg
fsub
mov
orl
cmpsb
mov
or
jp
icebp
cmovb
sub
outsb
imul
into
shr
push
mov
mov
movsb
xor
aad
repnz
push
jae
xlat
test
cmc
stos
ret
andl
adcl
fsubs
in
lret
or
lods
add
push
ljmp
cmpl
cmp
subl
pop
xchg
mov
aaa
lock
jae
mov
pop
push
subl
xchg
mov
pop
sahf
imulb
mov
jmp
nop
xchg
divl
adc
fimuls
jp
push
fwait
jnp
repz
test
mov
add
inc
cltd
inc
xor
das
push
adc
mov
icebp
sub
mov
outsb
or
test
push
pop
xor
adc
pcmpgtw
and
ljmp
lcall
pop
outsb
icebp
push
jb
aam
rolb
fists
icebp
or
jle
and
andl
push
fisttps
mov
sti
je
inc
mov
add
std
orl
enter
sub
jecxz
addl
movb
cmpsl
sub
arpl
les
jnp
mov
gs
inc
stc
or
cmp
sbb
cmpl
add
shrl
lret
cli
cmp
xor
or
adc
ja
fwait
nop
shlb
cld
mov
insl
lea
imul
mov
or
push
jp
xor
imul
insl
clc
xchg
jno
hlt
nop
dec
cmpsl
arpl
out
andl
ja
and
push
xchg
jle
daa
jge
call
xchg
aas
icebp
lods
mov
mov
ljmp
jle
cmp
add
aad
jb
lea
lea
les
ds
jns
xor
sub
icebp
std
adc
adc
jo
sbb
imul
pusha
cmp
enter
mov
scas
aas
jb
je
inc
dec
cmp
test
sbb
jl
jno
sub
rorb
jge
push
adc
sbb
push
lret
sarl
jmp
loope
movsl
leave
mov
mov
cmpl
mov
cmpsb
adcb
push
les
iret
cmpsl
cs
sub
aam
clc
outsb
orl
sarb
lahf
into
add
test
push
jp
hlt
je
andl
push
aad
aaa
fiadds
xchg
into
jmp
insb
add
pop
mov
popf
pop
push
xchg
out
jne
sbb
loope
mov
add
sbbl
sbb
insb
sub
push
jne
pushf
mov
mov
jne
sbb
dec
shrl
sbb
popf
out
nop
cmpsb
mov
sub
xchg
mov
movsl
jae
dec
xor
lcall
movsb
mov
jae
inc
mov
test
imul
lods
mov
outsl
sbb
lock
mov
cmpl
lods
jecxz
call
ret
pop
pop
es
popa
in
sbbl
push
add
jge
jl
incl
movl
adcl
mov
and
fidivrl
or
ficomps
sub
sub
andl
xchg
or
jnp
push
mov
jo
pop
frstor
out
sti
xorl
jb
dec
jge
push
inc
pop
insb
lock
and
inc
dec
adc
or
dec
ret
lock
bound
push
xchg
sub
sbb
fwait
jo
movsl
lahf
xchg
rcl
imul
mov
pop
sbb
cmc
es
xor
shll
push
mov
fcmovu
cmpb
rorl
popa
push
stc
add
lea
jne
test
push
clc
or
sarl
mov
and
mov
push
xlat
shlb
cmp
xchg
stos
adc
sti
int
jb
imull
js
jne
imul
ret
mov
mov
push
cmp
xor
fwait
dec
xchg
int
push
mov
cmpsl
mov
mov
fstpt
or
jne
testl
jbe
in
xchg
cmpl
xchg
push
mov
pop
inc
cmp
lds
ja
dec
jmp
and
jg
and
loopne
sbbl
push
xchg
std
aam
ja
add
xor
imul
subl
ficompl
cmp
lea
mov
orl
pop
cmp
test
xchg
adc
mov
sbb
subl
mov
cli
loope
pop
jge
js
clc
xor
xchg
outsb
xchg
cmc
leave
xor
push
jg
push
push
inc
cld
xor
pop
xchg
xchg
out
insb
pop
lods
mov
xorl
call
dec
xchg
rclb
pop
mov
imul
out
adc
cmpsl
sub
mov
test
fists
insl
pop
aad
push
push
fwait
mov
mov
stc
stos
push
mov
inc
inc
push
pop
nop
int3
imul
lret
mov
aam
stos
mov
inc
icebp
ljmp
inc
adc
js
mov
imul
cmp
or
xchg
push
roll
xchg
repnz
fstpt
orl
lods
ja
scas
sub
mov
icebp
pop
das
or
mov
or
dec
push
pop
repnz
adc
mov
hlt
pop
fmul
sbb
fldcw
add
je
and
es
mov
xchg
adc
xor
outsl
adc
mov
sysexit
jo
loope
rolb
call
inc
and
mov
jmp
cmpl
mov
loopne
jae
add
pushf
sbbl
dec
ja
sbbl
stos
in
adc
push
lods
sub
dec
inc
mov
fldcw
push
out
mov
dec
sbb
jp
sub
mov
xor
outsl
lea
xor
jp,pt
push
mov
cmpsb
js
mov
ss
fstl
icebp
lock
or
xchg
sbbl
cli
pop
xor
lods
pop
outsl
cmpsb
cmp
xlat
insb
pop
rolb
addb
or
clc
lret
jecxz
add
and
outsb
stc
int3
inc
adcl
mov
ret
push
xlat
ror
stos
inc
cmpsb
subl
rcll
mov
mov
adc
jp
dec
mov
pop
sbb
popa
mov
or
pop
outsb
inc
adc
rolb
xorl
xchg
dec
mov
jb
daa
push
imul
lea
in
sbb
xor
adc
sub
fdivrs
adc
or
mov
loop
mov
sub
mov
jne
outsl
mov
fstl
and
clc
jbe
in
adcl
dec
push
xorl
pop
inc
sub
xor
faddl
sbb
pop
xchg
orl
movb
sti
aam
sbb
ja
mov
push
pop
cmovno
cmp
cmp
andl
mov
inc
dec
xor
outsb
pop
push
fwait
insb
push
retw
pop
mov
je
dec
sbb
fiadds
bound
mov
xor
pop
xchg
or
jb
add
lods
arpl
cmp
xchg
pop
push
xorl
jg
inc
mov
and
pop
cmp
push
cmovp
pop
mov
sbb
or
pop
jno
ds
aad
or
in
jle
adc
cmp
inc
lahf
mov
push
pop
cmp
ret
fidivl
add
push
mov
mov
shl
shlb
sub
push
push
gs
xchg
cli
rcrl
mov
mov
sti
pop
xchg
sbb
pop
adc
pop
imul
rolb
dec
pop
mov
pop
pusha
in
iret
cmpsb
gs
jp
lret
inc
adc
push
push
jg
jne
pusha
mov
cmpsl
adc
ret
xchg
jmp
mov
sub
scas
xchg
pop
xchg
mov
or
and
outsl
les
push
mov
and
bnd
mov
sub
mov
cli
stos
dec
push
es
fcompp
imul
imul
outsb
mov
faddl
sti
mov
mov
sbb
sub
pop
sbb
sbbl
jp
shrl
mov
and
aam
pop
or
adc
shl
cmp
mov
jge
mov
popf
shl
int
and
add
cs
addl
movsl
pushf
andl
sti
loope
push
lret
pop
cmp
orl
or
mov
les
call
pop
popa
dec
push
lret
sbbl
fcompl
pop
mov
enter
icebp
lret
sbb
retw
sbb
daa
lret
xchg
fdivp
mov
orl
inc
aas
icebp
lea
pop
cmp
nop
xor
mov
xor
enter
je
add
push
jae
or
sbb
outsl
sbb
dec
cmp
sarl
daa
pop
mov
cld
jle
cmc
test
push
xchg
xlat
mov
je
cmp
orl
pop
call
jge
or
sbb
and
adc
mov
pop
cmp
mov
or
or
push
repnz
fadd
cmpsb
xchg
popf
xchg
add
mov
add
jg
dec
push
fnstenv
sub
cmpl
out
add
add
addl
cs
repz
std
in
aas
cmpsb
sub
arpl
add
sub
xchg
pop
mov
popf
sub
add
xor
hlt
inc
mov
pop
mov
andl
xlat
pop
and
mov
or
imul
icebp
jmp
lods
mov
sub
scas
pusha
mov
fnsave
sbbl
xorl
js
mov
call
fs
mov
out
inc
mov
imul
mov
jns
push
cli
mov
pop
dec
inc
repnz
xor
addb
jae
push
ret
sbb
bound
xchg
inc
sub
sbbl
or
pop
fists
ds
fdivrp
and
sbbl
or
add
das
xchg
cld
xor
xchg
push
popf
sub
xor
inc
jno
fmuls
mov
pop
scas
sub
stos
imul
addr16
push
push
out
sarl
inc
movsl
add
mov
inc
jle
mov
scas
popf
push
inc
lods
in
mov
dec
and
pcmpeqd
cmp
dec
jne
int3
lods
jl
mov
lea
les
xorl
insb
aad
adcl
jle
mov
xor
sub
insl
iret
push
jl
aaa
cli
scas
andl
jae
fadd
hlt
push
fstpl
sbbl
cmp
lahf
mov
movsb
nopl
sbb
pop
lret
adcl
sbb
daa
lods
xorl
scas
insl
push
addr16
xchg
pop
int
sbb
in
push
mov
inc
xorl
jmp
push
pushf
cld
push
in
xchg
or
mov
adc
mov
mov
insb
add
xor
movsb
js
xchg
lahf
aas
mov
roll
jmp
aad
xlat
test
sti
pop
fimuls
popf
xchg
outsb
mov
outsl
cmp
cmc
or
data16
test
loope
ret
sbbl
lahf
mov
in
inc
shlb
mov
jb
test
cmp
out
icebp
dec
sbb
pop
rcl
push
scas
pop
lods
nop
jb
inc
adcl
imul
movsb
adc
daa
repz
iret
add
rcrb
fs
insl
and
icebp
lods
popf
push
test
loope
xor
jecxz
scas
cltd
rorb
add
aas
data16
jns
adc
add
sbbl
push
dec
jmp
rorl
fistl
jnp
lret
xchg
subl
rclb
test
stc
sbb
sahf
xor
mov
scas
mov
inc
xchg
fldcw
cmc
in
faddl
addb
mov
arpl
loopne
mov
js
lea
popa
flds
inc
xchg
mov
stos
rolb
or
aas
adc
adc
mov
test
inc
arpl
loopne
ja
xor
pusha
add
sbb
in
adc
xchg
int
mov
mov
call
popa
mov
mov
scas
xchg
andl
nop
dec
cmp
xor
ja
or
addl
iret
ficompl
testl
stc
or
mov
and
mov
xchg
cli
lock
les
sub
cmp
pop
inc
xchg
stos
adc
and
jge
movsb
cmp
rcrb
andl
push
mov
test
push
sbbl
jg
orl
mov
cmp
push
push
inc
call
cmp
mov
xchg
inc
add
push
in
add
jnp
mov
les
aas
dec
inc
test
pushf
hlt
outsb
and
xchg
aam
jmp
lret
jg
rolb
dec
out
stos
inc
icebp
xor
fdivr
or
addl
xor
mov
loop
xorl
mov
movsb
enter
mov
loop
push
out
imul
mov
push
test
iret
mov
adc
sub
push
or
pop
dec
adc
mov
push
subb
push
nop
cmp
pop
xchg
cmp
push
inc
test
in
mov
test
push
movsl
xor
loopne
aam
sahf
inc
jmp
inc
mov
loope
outsb
xchg
add
and
push
sti
dec
andl
ja
mov
in
jecxz
loopne
call
imul
jp
mov
fimull
or
push
adc
pop
sahf
shll
jnp
orb
sbbl
or
rep
fistl
out
sub
and
pop
mov
movsl
adc
dec
mov
lret
icebp
ror
testb
lods
add
inc
xchg
push
mov
mov
sub
cli
ja
mov
icebp
inc
imul
mov
xchg
inc
xlat
sbb
xor
in
int
les
roll
shrl
outsl
sbb
pop
subl
gs
cmp
orl
lods
add
int3
loop
and
in
jmp
mov
sarl
add
mov
outsl
andl
inc
stos
insb
add
lods
adc
push
je
rorl
test
lcall
lret
xor
cmp
and
add
push
or
loope
xchg
push
or
cltd
pop
mov
and
adc
hlt
ror
cmpl
adc
mov
out
pop
les
dec
lret
nop
outsb
incl
inc
loope
pop
xor
andb
js
lods
cmc
lods
imul
inc
repz
pop
add
xor
mov
mov
pop
xor
fnsave
es
cwtl
ret
faddl
lods
ds
adc
push
test
sub
nop
adc
and
in
and
cmp
ljmp
sub
dec
popa
xor
in
xchg
push
clc
xchg
movsb
in
ds
shrb
iret
scas
testl
jecxz
mov
sbb
add
inc
sbb
cmp
jg
ret
rorb
stos
mov
sbbl
negl
xor
dec
movsl
dec
outsl
mov
push
shr
test
arpl
mov
sbb
mov
jo
outsl
adcl
repnz
dec
inc
mov
loope
xchg
sbb
cmpl
mov
sti
adc
or
or
pop
test
adc
lret
jle
cmpl
pushw
and
mov
adc
incb
mov
subl
daa
xchg
sbbl
movsb
xor
cmp
stos
sub
jnp
jno
mov
pop
jge
scas
dec
adc
fwait
xor
add
inc
dec
cltd
push
bound
push
int3
jmp
sbbl
insb
xchg
pop
dec
add
test
testl
lret
incl
sbb
push
mov
inc
lret
cmc
xorl
jne
aam
inc
jp
lea
insb
call
mov
cmpl
test
push
cmpsb
dec
mov
pop
lea
jno
or
icebp
jbe
mov
adc
xchg
mov
push
orl
adc
jp
lret
add
js
insb
lods
cmp
xrelease
xor
enter
sbbl
rcrl
scas
push
insl
cmpl
scas
pop
mov
lods
int3
xor
dec
jb
nop
lret
bound
lock
jge
xchg
adc
cmc
dec
mov
and
imul
addl
fiadds
orl
mov
out
cld
int
cmp
mov
dec
cmp
mov
movb
xchg
js
xchg
cmp
mov
mov
popf
dec
mov
xor
mov
sub
imul
mov
in
push
and
enter
dec
mov
adc
push
mov
cmp
pop
andl
add
pop
addl
mov
or
out
mov
sbb
cmpsb
rcrl
test
into
lret
pusha
call
clc
mov
jge
mov
and
jno
int3
aaa
loopne
sub
add
xchg
or
cs
shlb
int
call
lcall
sub
jp
jno
dec
fidivs
aas
jg
subl
and
mov
aas
insl
out
repnz
in
movsb
and
lea
xchg
mov
lods
fisubrs
les
rcr
fmull
fstl
adc
inc
pop
push
push
jle
xchg
mov
jg
insb
lock
jno
sbb
cld
jns
outsl
mov
pushf
pop
ret
daa
icebp
les
mov
xor
sbb
and
orl
pop
jo
or
fwait
leave
xchg
push
cmp
aad
fs
mov
xor
cmpl
jnp
out
and
adc
icebp
pop
fwait
cmc
clc
pushl
xor
cmp
or
add
inc
dec
movb
adc
nop
and
aad
or
jns
sub
and
sbb
sub
int
out
or
push
divl
in
arpl
imul
or
fstpt
xor
movsb
aad
push
rep
xchg
cmp
cmpsb
fldenv
lea
pop
cld
xor
jnp
pop
mov
rcrb
push
pop
push
repnz
jns
ds
sub
ss
stc
xlat
xorl
pop
push
sbbl
pop
xor
outsb
ficompl
cmpsb
fmuls
aas
mov
into
pushf
jg
push
mov
mov
in
loope
call
in
dec
xchg
or
push
xorl
stc
mov
in
push
mov
sti
xor
add
jo
ret
rcrl
fildll
jbe
sbb
sahf
sub
jge
adc
fbld
mov
and
scas
ret
xchg
mov
or
cmpsl
add
jo
stos
pusha
lods
adc
stos
mov
retw
imul
push
cmpsb
in
jnp
std
enter
pop
scas
addl
xor
pop
out
xchg
insl
mov
loope
cmp
jmp
add
mov
push
dec
sbb
mov
loop
jg
jge
jo
movsl
inc
xchg
xor
icebp
add
subl
adc
bound
das
andl
cmp
sbb
pusha
xlat
xor
inc
sarl
ja
adc
out
arpl
pop
mov
add
or
mov
xchg
jecxz
add
sbb
arpl
sbbl
scas
push
loop
inc
mov
popf
lea
mov
lret
dec
mov
pop
cld
push
test
sbb
jae
xchg
inc
mov
mov
movsb
outsl
push
subl
imul
ret
loope
xor
divb
pop
sub
test
out
xlat
ds
mov
in
repnz
pop
cli
xor
mov
sar
pop
addr16
push
andl
inc
shlb
push
cld
dec
adc
test
fcmovb
pushf
subl
mov
adcl
sub
adc
push
cld
rcll
int
or
ret
stos
mov
int3
push
mov
jns
loope
push
sahf
fstps
lea
adc
mov
shlb
out
mov
je
push
push
aaa
subl
xor
test
negb
xchg
repz
rcr
rcll
subl
mov
scas
cmpl
jecxz
jne
cmp
mov
iret
cmpsb
mov
sahf
cmp
cmp
adc
pushf
mov
orl
push
cmpsl
pop
xor
mov
inc
aad
mov
mov
iret
xor
lea
inc
xchg
popa
popa
xchg
xchg
pop
test
fnstcw
xchg
mov
test
icebp
ds
mov
movsb
push
sar
xchg
adc
fisubl
push
movsb
stos
in
out
mov
xor
sbbl
cmpsl
frstor
lahf
adc
sbb
jle
jae
adcl
pop
sbb
adc
jecxz
mov
xchg
orl
mov
cmp
push
inc
sub
pop
std
pop
pusha
mov
into
fisubs
xor
popf
push
and
push
movsl
popa
cmpl
dec
xor
orl
scas
out
in
lahf
inc
in
inc
mov
flds
pop
movaps
inc
loope
inc
es
cmc
cmp
addr16
push
addb
push
fisttps
test
add
scas
mov
fidivl
pop
pop
out
sub
and
lret
xor
lahf
sub
addl
sbb
push
lahf
pop
filds
cmpsb
and
adc
jl
pop
in
add
adc
sbb
cmpl
cmpsl
idiv
xorl
test
bound
inc
shlb
push
and
adc
pop
push
cmpl
mov
inc
daa
movsl
incb
sub
sub
in
pop
je
mov
mov
pop
mov
pop
xor
and
dec
adc
mov
lahf
or
into
adc
pusha
mov
aas
inc
xchg
scas
subl
lret
testl
jb
mov
test
bound
mov
and
sbb
inc
push
lds
dec
das
loopne
sub
packuswb
flds
outsb
mov
xor
mov
dec
mov
cmpl
int
xor
and
ja
dec
add
cld
pop
ret
enter
outsl
mov
in
stos
add
push
sub
insb
out
xchg
fisubrl
xchg
cmp
xchg
adc
add
iret
imul
or
mov
movsl
push
sbb
adc
les
movsb
inc
out
dec
test
sti
test
dec
mov
jg
ret
or
jmp
test
adc
addr16
mov
addl
xchg
mov
je
pop
dec
sbb
shl
xor
add
and
push
sub
mov
les
sub
out
shll
test
mov
repz
mov
and
scas
js
adc
shr
cmp
push
test
dec
outsb
pop
insb
sbbl
fcoms
inc
sbb
test
lods
sub
sub
shl
cmp
dec
test
pop
movl
adcl
filds
adc
jge
test
mov
inc
test
mov
cmp
adc
insb
cmpl
rorb
jbe
int3
pop
adc
add
fcompl
cmp
sub
lods
xor
pop
lahf
jg
jns
loop
xorl
cld
adc
lds
fsubr
xor
jns
sub
mov
pop
mov
lcall
addl
jmp
orl
call
xchg
loop
div
pop
xchg
push
sahf
fimuls
ljmp
push
jne
xor
inc
popa
add
add
out
call
dec
ret
cld
stos
clc
fistpll
xlat
sbbl
in
arpl
data16
insb
std
mov
dec
add
cmp
test
sub
add
xchg
icebp
dec
out
cmp
lret
std
ret
orl
mov
fs
and
repnz
loopne
int
push
push
cwtl
adc
push
xchg
xchg
popa
cmpsl
adc
xor
push
inc
movsl
movsl
mov
pop
enter
dec
push
jno
lret
cmp
daa
xorl
push
leave
xorl
ds
sbbl
xchg
or
subl
push
je
mov
cmp
stos
mov
scas
mov
rcr
dec
xor
cmpsb
and
jge
int
adcb
add
testb
jb
pop
or
cmpl
dec
cmp
aam
hlt
sub
sub
xchg
andl
test
hlt
std
push
sbb
dec
xorl
pop
outsl
sbbl
cmp
shll
inc
push
jle
dec
iret
jp
pop
jo
or
inc
push
jl
pop
adc
push
mov
dec
ljmp
sbb
sti
xchg
pop
cmpl
out
xorl
stos
jne
mov
sahf
lods
xorl
scas
aad
addl
pop
mov
mov
push
xchg
jbe
subl
aad
xchg
fwait
push
and
xchg
insl
mov
mov
xor
cmp
pop
inc
mov
mov
jnp
cmc
jge
mov
push
out
push
jno
cmp
test
pop
sbb
cmp
mov
jmp
push
jg
sbb
xchg
incb
in
jae
cli
out
cmpl
iret
stos
sbb
lea
rcr
loope
xor
jmp
hlt
mov
aaa
jge
push
mov
inc
fsts
jmp
cmpl
push
sbb
jle
shl
int
mov
mov
add
mov
inc
jl
adc
mov
adc
mull
sahf
mov
or
push
dec
loope
sub
pop
mov
arpl
fnstsw
repnz
stos
mov
cmp
icebp
push
repnz
in
pop
xor
ljmp
jge
or
pop
fisttps
lods
and
subl
mov
dec
adc
push
pop
out
nop
bnd
out
and
sahf
sbb
mov
jl
jns
ret
lret
mov
cld
hlt
lds
fnsave
xor
cmp
and
sub
or
sbb
stc
adc
fsubl
mov
orl
ds
jg
scas
clc
jl
sub
pop
jecxz
push
push
stos
popa
mov
sub
jo
pop
cmp
in
jne
sub
repz
ret
cmp
mov
int3
addr16
ret
test
add
push
movsb
scas
lahf
aad
dec
and
setbe
sarb
js
push
out
inc
pushw
subl
jns
push
les
nop
add
andl
mov
imul
and
or
push
cwtl
pop
test
or
or
cmpsb
mov
stc
insb
rcrb
inc
xorl
rolb
outsl
inc
cmp
xorl
cmp
int3
xlat
out
pop
mov
subl
sub
sbb
inc
cmp
push
cmpl
inc
fadds
xchg
pop
test
sub
ret
adc
adcl
sbbb
ss
add
push
cmc
scas
fimull
adc
mov
jae
cmpsl
mov
sar
inc
or
xchg
fnstenv
lods
js
adc
lcall
shrl
fsubl
loope
push
xor
cmpl
iret
xchg
sub
insl
mov
inc
cwtl
mov
out
cmp
jne
xchg
call
int
sbb
jmp
loope
xchg
daa
and
xchg
jae
aaa
je
subl
cld
sbb
pushf
int
fadds
push
ror
aas
xor
lock
inc
xchg
pop
xchg
sbb
fdivs
add
push
outsb
xchg
dec
test
jns
push
or
push
adc
mov
pop
xorl
sub
pop
mov
shll
pushf
out
ret
ret
adc
adcl
in
addl
push
xchg
outsb
data16
adcb
das
jae
mov
jbe
and
sub
mov
cmpl
shrb
dec
xchg
push
inc
in
data16
mov
mov
imul
lret
push
pop
push
xor
jmp
pop
xor
mov
and
add
bound
into
test
aas
sub
lds
sti
mov
sbb
outsb
int
dec
popa
xor
and
std
push
cmpl
sub
icebp
push
outsb
add
push
js
out
shll
out
fcoml
push
jecxz
ljmp
mov
pop
inc
sub
push
data16
sti
movl
rcl
clc
lods
into
mov
push
cmc
lcall
bound
and
pop
mov
dec
faddl
call
rcrb
cmc
push
stos
in
fwait
andl
push
inc
push
or
test
xlat
cmpl
and
dec
into
dec
ficoml
mov
lods
inc
mov
dec
cli
xor
mov
mov
xchg
andl
inc
xchg
adcl
jge
push
ljmp
or
cli
mov
out
out
rorl
mov
addl
fistl
fiaddl
loop
adcl
inc
adc
or
sbb
test
jg
faddl
jp,pt
pop
ss
jno
leave
sbbl
mull
loopne
add
ds
out
mov
fstpl
cmpsl
ficomps
movsl
cmp
lods
mov
dec
sub
ljmp
fcmovnbe
mov
popf
push
ret
int3
xchg
into
and
push
sbb
inc
dec
movsb
movsb
mov
loope
std
dec
sbb
xchg
subl
out
jle
icebp
ds
mov
dec
add
sbbl
insb
test
std
outsl
mov
ja
and
lods
mov
add
lock
push
andl
pop
push
les
pop
fwait
xchg
int3
push
cmpsb
stos
dec
andl
cmpl
movsb
add
mov
xor
cwtl
cmp
cmp
adcl
xchg
inc
data16
xchg
sub
pop
jae
subl
sub
mov
xchg
test
in
fldl
dec
xchg
out
mov
push
pop
jmp
outsl
out
push
addb
sub
mov
mov
dec
jp
subl
jo
imul
ret
hlt
cmp
cli
andl
mov
loop
or
enter
mov
lods
lret
scas
sbbb
mov
jl
repz
rolb
push
fwait
push
fbld
pop
mov
push
xor
xor
mov
lds
loop
dec
pushf
add
fldenv
xor
fisubs
mov
icebp
inc
lret
inc
sbb
mov
lds
sbb
sub
sub
addl
jecxz
clc
cmpsl
push
mov
shrl
mov
nop
lods
mov
sub
cld
push
pushf
mov
adcl
dec
xlat
push
andl
xchg
xchg
xchg
orl
adcb
bound
xchg
adc
push
sbb
dec
jg
xor
sbb
sub
lret
subb
xor
push
inc
add
rorl
push
repz
movsl
fiadds
mov
inc
bound
das
cli
xor
lahf
repnz
jns
mov
ret
push
scas
mov
jb
fcmovu
out
loope
rclb
pop
mov
loope
adc
pushf
jb
xorl
xor
fcoml
sub
or
lds
adc
adc
bnd
push
xor
iret
lods
inc
pusha
cs
movsb
arpl
cmpsl
test
mov
push
shll
push
test
jecxz
xor
cmp
scas
cmp
xor
loopne
add
inc
or
orl
mov
jno
jecxz
xor
sbb
outsl
pop
push
das
in
fiaddl
in
out
sahf
xorl
fcoml
sbb
arpl
repz
add
sub
mov
jl
xchg
push
dec
in
mov
fcoms
scas
pop
adcl
xor
addl
xchg
push
movsl
subl
adc
mov
mov
test
fcoml
jne
mov
ja
hlt
push
inc
scas
xorl
lods
loopne
out
jg
repz
inc
sbb
outsb
divl
jle
inc
popa
mov
xor
mov
cmpsl
test
addl
or
sub
push
pop
jo
dec
stos
cwtl
fwait
add
cld
mov
cltd
adc
stos
shll
fisubrl
adc
sbb
pusha
xor
add
adc
adc
cmpl
pop
sbbl
mov
xor
push
mov
imul
cmpl
mov
out
cmp
mov
adc
cld
sahf
gs
rcrl
jae
loopne
cmp
test
stos
lods
xchg
scas
cs
mov
pushf
and
faddl
aad
test
test
stos
lea
into
sub
orl
push
cli
or
pop
or
movsb
dec
mov
jb
mov
mov
or
cmpsb
inc
icebp
and
mov
sub
dec
movsl
pop
sar
or
jo
inc
pop
ds
mov
jg
sbb
shr
out
cmp
push
aad
and
lret
mov
push
inc
aas
xor
jo
fdivrs
xchg
shr
inc
fs
add
or
cmp
sub
cmpsb
xchg
sub
jnp
mov
lods
jae
xchg
jle
stos
fs
out
mov
icebp
mov
les
mov
aad
push
dec
out
sbb
sbbl
jge
jmp
paddq
cmp
mov
daa
jmp
stos
xchg
pop
std
ja
mov
aam
inc
mov
jo
pop
pop
leave
cmp
pop
outsl
or
xor
xchg
adcl
add
xchg
or
roll
addr16
and
pop
in
fnsave
jno
outsl
sbb
shlb
imul
xchg
inc
es
and
cli
xchg
mov
addl
mov
xorl
cmp
push
icebp
xchg
mov
bnd
mov
sarb
mov
fsubs
jecxz
sarl
hlt
lea
add
jp
cmpsb
jle
mov
icebp
inc
and
test
mov
scas
cmp
and
fdivrl
sub
movsb
ja
pop
inc
jg
xor
idivl
and
sbb
sub
fs
orw
jns
mov
mov
cmp
orl
movsl
inc
lods
jecxz
jae
xchg
jl
cmpl
arpl
lods
xor
jle
mov
xor
rolb
je
mov
inc
cld
sbb
arpl
xor
mov
addl
inc
mov
pushf
lahf
mov
mov
dec
adcl
sti
xchg
je
dec
pop
cltd
sub
addl
mov
pop
mov
and
in
cmc
add
mov
and
lcall
subl
push
mov
nop
adc
sbbl
pop
sub
in
daa
sub
loope
mov
pushf
aas
in
aam
or
cmp
push
addr16
xor
jo
test
repnz
inc
sbb
add
ss
int
mov
adc
mov
mov
lret
sub
xchg
sub
xchg
jb
fs
imul
out
movsb
stos
xor
ret
adc
jg
push
fbld
arpl
cmovge
imul
fsubr
movl
adcl
in
lahf
xchg
push
xor
aad
push
scas
pop
shr
mov
add
aaa
add
and
mov
hlt
adc
dec
hlt
shr
hlt
stos
pop
loopne
jo
mov
int3
sbbl
movsb
in
cmp
mov
mov
adc
je
cmp
out
xor
icebp
popf
dec
pop
jnp
pop
or
cmpl
aad
mov
sahf
add
jo
insl
cmpsl
dec
mov
xchg
lret
mov
jo
ret
mov
loope
mov
mov
movsb
subl
mov
jne
push
xor
sahf
aad
or
andl
lods
or
inc
test
dec
xchg
aad
out
mov
mov
addl
or
xchg
add
inc
stos
fistpl
xchg
fsub
shl
imul
dec
rorb
dec
dec
aam
xorl
xor
adc
outsb
sbb
cmpl
mov
scas
into
xchg
out
pop
xor
mov
or
inc
sbbb
sbbl
jecxz
jle
cmp
daa
and
stos
jecxz
jno
pop
mov
xor
ljmp
push
jo
xchg
test
xchg
pop
or
outsb
das
xor
outsl
inc
mov
stos
fsts
lock
cmp
xorl
push
adc
lcall
mov
and
sub
mov
cmpl
es
mov
xorl
jne
sub
xchg
jns
push
sub
and
aad
lret
mov
inc
dec
ret
push
fmuls
inc
mov
cmp
xchg
das
es
repnz
pop
push
pop
addr16
inc
or
adc
jb
cmp
outsl
movsl
cmpl
sbb
mov
push
add
xchg
xchg
icebp
test
out
add
mov
dec
andl
jno
imul
cmpsb
jb
aad
int3
or
into
or
icebp
lock
mov
sub
lret
jp
inc
andl
and
cmp
inc
inc
movsl
xor
ja
sbbl
loopne
cld
mov
arpl
sub
mov
leave
jae
mov
into
js
stc
mov
out
lods
pop
push
ret
mov
stos
es
xor
loop
add
sahf
cli
xor
xchg
insl
out
mov
lcall
bnd
dec
push
xchg
sub
pusha
dec
mov
xlat
lds
pop
andl
insb
inc
sub
sbbl
mov
adc
cmp
pushf
and
fimuls
sub
imul
cmp
fs
add
cwtl
vpandn
xor
stc
mov
adc
or
mov
sti
or
hlt
add
push
rcrl
mov
mov
mov
dec
xor
and
or
cs
iret
xchg
cmpl
mov
inc
fadds
sarb
mov
gs
sub
cli
iret
movsb
loop
sub
mov
addl
scas
loopne
sbb
mov
sub
adcl
ja
jns
sbbl
insb
mov
ja
les
in
xor
inc
cli
push
lcall
jle
sti
fcmovne
loope
jb
xor
jnp
lea
mov
jp
dec
push
sbbl
loope
repnz
loop
iret
pop
add
push
hlt
sub
lods
adcl
icebp
mov
push
cmp
outsb
sahf
push
add
pop
mov
aam
nop
adc
xchg
fwait
add
pop
arpl
mov
jg
sbb
adc
fimuls
orl
notb
xchg
addr16
add
arpl
subl
andl
call
pop
xchg
sub
insb
orb
sbb
in
andl
ss
xor
cmc
push
js
cmpb
sub
in
inc
jmp
nop
sub
adc
loopne
fsubrs
sub
dec
sbb
mov
repz
mov
mov
push
movsl
iret
cmpl
mov
andl
test
outsb
push
jle
add
mov
repnz
xor
js
mov
cli
pop
xchg
or
in
testb
enter
and
xorl
ret
mov
stos
sbb
lahf
outsb
dec
mov
jnp
cwtl
jno
push
pusha
andl
sti
pop
mov
fwait
or
test
sub
cmpl
mov
mov
roll
stc
jmp
and
sbbl
aas
lods
subl
js
icebp
sub
in
fsubl
ror
addl
ficompl
jb
ficoms
xor
stos
mov
subl
fs
xchg
mov
das
add
xchg
divl
pop
insb
mov
test
aad
daa
sub
dec
sti
mov
andl
jns
outsl
je
in
ljmp
orl
fsubrs
sub
rclb
adc
xlat
lahf
xor
ret
iret
cmp
pop
xchg
push
hlt
ret
sub
aas
xchg
xchg
pop
ljmp
jnp
adc
lea
stc
cltd
bound
sbb
mov
outsl
rcrb
mov
pop
or
sub
xor
out
ja
mov
in
sbbl
ds
out
cvtps2pi
sbbl
nop
imul
loope
in
scas
mov
gs
stos
subl
xor
rcll
jle
lea
dec
sbbl
adcb
mov
pop
jnp
mov
jge
add
adc
sub
cmc
into
and
sbb
cmp
or
rolb
dec
cmpsl
stos
cmp
loope
cwtl
adc
xlat
pushf
dec
addl
dec
loop
adc
cmp
adc
sbb
scas
out
aad
outsl
fdivrl
xor
or
les
cmpsl
add
out
ret
lods
lea
cld
popa
fidivs
andl
insb
addr16
jp
adc
dec
adc
mov
dec
or
loopne
adc
dec
icebp
inc
test
loopne
test
aad
orl
cli
mov
or
push
add
imul
leave
lcall
iret
cwtl
mov
dec
xor
stos
adc
cmp
cwtl
je
and
addl
rorb
sub
mov
dec
imul
mov
sbb
fidivs
jae
sub
sbbl
pusha
sahf
int
aad
into
filds
adc
mov
jne
mov
ficoml
ja
mov
inc
scas
out
icebp
lret
push
clc
pushf
imul
jbe
pop
lds
dec
dec
in
sub
or
lahf
push
inc
inc
cld
sbb
jge
cmpsb
dec
arpl
xchg
pop
enter
movsl
imul
int3
movsl
mov
xor
scas
xchg
pop
aas
stos
int
arpl
add
andl
push
cmp
jnp
mov
xor
mov
in
and
jns
cmpl
inc
orl
jns
jbe
cmp
dec
xchg
ror
dec
xchg
jmp
mov
test
ja
push
sub
pushf
sbb
sub
lcall
add
adc
jno
cmp
pop
inc
jge
test
inc
and
in
js
lahf
aas
mov
movb
push
addl
dec
inc
es
inc
subl
and
in
pop
ds
jg
mov
dec
mov
mov
sarb
push
or
fstp
lea
out
push
sbbl
sbb
jns
pop
jno
and
into
aas
inc
and
and
mov
imul
in
mov
imul
leave
adc
push
mov
imul
cmp
insl
andl
out
mov
push
test
roll
push
add
sbbl
sti
cwtl
sbbl
jns
add
add
lret
dec
xor
gs
rorl
cwtl
test
jmp
fsubs
pop
pop
push
pop
mov
outsl
imul
loope
fdivp
push
fwait
in
jg
mov
or
dec
jge
inc
cmp
lock
cmp
test
cld
test
and
and
ret
lcall
inc
push
or
addr16
fsts
fbld
and
incl
lods
mov
adc
pop
cwtl
gs
add
jge
push
out
fucomi
mov
xor
icebp
and
movsl
mov
push
push
insb
clc
cmp
xor
jnp
add
and
insb
inc
gs
aam
jo
cmpl
lea
cltd
mov
subl
outsb
sub
xor
inc
lret
popa
jl
out
push
inc
cmpl
add
sub
stos
aad
test
jo
outsb
pusha
nop
sub
or
xchg
fucomi
push
orl
aas
mov
ja
pop
loop
mov
dec
ljmp
cmc
imul
jbe
sti
loopne
outsb
jns
adcl
dec
out
lahf
icebp
jno
cmp
sbb
fldenv
lcall
mov
xchg
icebp
inc
pop
aam
inc
nop
dec
lea
hlt
inc
orl
mov
cld
or
cmp
sub
push
lods
adc
pop
xchg
xchg
mov
push
addl
pop
mov
pop
sbb
adcl
aaa
mov
pop
repnz
andl
mov
push
test
add
jg
insb
mov
std
jg
inc
ficoml
push
test
daa
mov
inc
cmp
lods
and
cld
popa
stos
inc
fists
adc
push
lahf
andl
lods
ret
pop
sbb
sub
lahf
push
push
inc
inc
jno
xor
popf
cld
mov
mov
lock
dec
movb
stc
xchg
push
data16
pop
inc
jns
jns
push
pop
andl
mov
jno
repz
mov
sti
and
mov
dec
inc
jae
jbe
mov
xchg
fisubrs
push
xor
or
sbb
pushw
andb
loop
jnp
add
test
in
in
divb
dec
mov
mov
cltd
rcl
xorl
xchg
fiadds
lods
out
cs
int
push
filds
loope
ret
gs
mov
inc
xor
sub
ret
andl
shlb
sub
and
imul
lahf
add
cmc
cmp
adc
cmp
pop
push
xor
dec
lea
out
es
sbb
pop
jne
cmp
ss
push
mov
or
or
cli
mov
mov
stos
sub
or
lahf
dec
push
movsl
mov
ja
add
imul
and
cmp
pop
or
and
add
fisttpll
arpl
scas
pushf
pop
add
adcl
ror
mov
jge
sbb
ret
mov
mov
sti
adc
or
mov
xor
inc
addl
nop
rolb
int
test
shrl
adc
sbb
mov
xor
mov
enter
ljmp
in
js
adc
xlat
adcl
xor
test
inc
mov
scas
aam
sub
jge
insl
cmp
pop
xchg
inc
jb
push
mov
xor
mov
cld
fdivrs
push
sbb
mov
xor
arpl
scas
xor
push
sbb
adcb
jns
xchg
cli
dec
add
push
sahf
scas
adc
je
fcoms
sbb
push
and
les
xorl
jge
cmp
adcl
fbstp
movsl
pop
push
push
cmp
adc
sub
lret
lods
or
xor
or
sbb
pop
mov
or
add
es
je
aam
dec
and
call
xor
test
and
pop
mov
inc
ja
orl
movl
test
mov
jns
fisttps
pop
pushf
loope
outsl
fdivl
ds
aam
jmp
adc
addb
mov
xchg
repnz
add
scas
cld
hlt
pop
xor
stos
or
push
sub
pop
cmp
push
dec
add
outsb
xor
mov
andl
xor
andl
loopne
jg
int3
out
into
mov
loop
outsl
cwtl
inc
add
ds
into
testb
dec
adc
and
sub
aam
dec
sbb
pusha
call
xchg
push
subl
je
out
fistpll
pop
nop
inc
mov
mov
add
adcl
push
lods
scas
xor
mov
inc
jb
clc
jge
fldenv
pop
adcl
cmp
push
scas
js
sti
inc
outsb
fisttpl
and
loope
mov
stos
mov
jg
jecxz
ret
test
outsl
adcl
mov
inc
inc
iret
aaa
jo
xor
pop
enter
mov
sub
mov
sarb
xor
loopne
icebp
mov
mov
lock
sbb
mov
divb
xchg
ret
fs
mov
xor
idivb
adc
outsb
sbb
mov
pop
enter
test
sbb
lea
or
and
mov
rolb
leave
aas
in
call
jmp
ljmp
andl
pop
test
fadds
test
adc
mov
shlb
xchg
xor
fs
mov
outsb
push
push
andl
mov
or
adc
inc
sarl
dec
or
negb
aaa
lods
subl
lret
std
xorl
lret
repz
testb
aas
jnp
mov
loope
cs
add
xchg
addl
inc
ja
sub
cmpsb
leave
cmp
in
cmp
sti
and
or
jno
filds
icebp
cli
mov
lret
orl
add
jno
sbb
out
fldl
cmc
ljmp
movsb
inc
pop
lea
mov
sbb
pop
stos
sub
xchg
bound
rclb
lret
mov
pop
xchg
jg
insl
push
bound
jecxz
cmp
cmp
mov
cs
test
out
sub
adc
fisubs
popl
xor
adc
test
pop
jmp
sbb
cmp
add
mov
insl
mov
call
mov
mov
js
xchg
mov
iret
pop
movsl
xchg
mov
cmp
sub
popf
nop
subb
orl
jl
repz
movsl
pop
push
mov
mov
adc
push
andl
shlb
inc
xor
mov
dec
popa
adc
mov
mov
mov
fisttps
ds
not
xor
sbb
shll
or
out
imul
sub
push
adc
test
jp
cmp
adcb
cmp
stos
dec
sbb
adc
cwtl
loop
std
add
mov
mov
add
add
pmaxub
and
cmp
outsb
iret
sti
sub
addl
pusha
loopne
xchg
js
mov
aas
bound
cmpl
sti
xchg
inc
mov
jge
adc
xor
push
push
xchg
subl
and
je
and
inc
orl
cld
sbb
fsubr
loope
int
data16
lds
lea
adc
lcall
lret
sbb
add
orl
sbb
pop
fstpt
push
cmp
cmp
fstl
nop
sbb
dec
aas
sbbl
sub
sub
addl
xor
push
xor
cmp
cmp
cmp
in
js
fs
rcll
add
test
movsl
push
xchg
orl
pop
subl
pop
xchg
and
subl
movb
sub
inc
inc
fisttpl
cmp
scas
ljmp
repnz
enter
and
fwait
mov
movsb
mov
cmc
push
jmp
repz
mov
std
and
xchg
mov
xchg
xor
hlt
xor
and
scas
aas
int
or
enter
bound
xor
cmpl
pop
jnp
push
inc
and
int
in
adc
adcl
mov
jg
mov
fwait
add
sahf
sub
inc
icebp
xor
inc
xchg
inc
cmp
mov
cwtl
ljmp
adc
push
sbb
ja
inc
mov
mov
loope
fcompl
jge
jg
dec
les
mov
mov
mov
out
cmp
xchg
xchg
pop
roll
outsb
loopne
inc
push
ffreep
mov
outsl
orl
call
jnp
je
addl
jecxz
sub
or
mov
lods
andl
lahf
aas
movsb
push
rcr
clc
adcl
data16
mov
xorl
push
fisttpll
mov
nop
cmp
jns
nop
mov
repz
inc
test
xchg
sbb
add
ss
and
sub
jno
pop
imul
add
dec
and
pop
push
mov
loop
ss
jp
subl
jecxz
push
mov
cwtl
add
lea
cmc
xor
mov
cmp
subb
jae
out
adcl
lods
icebp
pop
iret
pop
outsb
lods
sbb
push
lret
inc
and
ret
xlat
cmp
cmp
iret
call
cmc
and
jb
or
adc
lds
or
inc
aam
movsb
lahf
outsl
mov
das
shlb
sbb
sti
test
jne
dec
add
xchg
stos
lret
mov
sub
stos
xor
inc
and
les
dec
cmp
mov
mov
mov
test
pop
jne
ja
adc
daa
jns
add
mov
lods
arpl
stos
out
adc
fwait
aaa
add
mov
andl
popf
pop
or
test
rorl
add
adcl
sbb
mov
xor
lret
sub
xchg
lahf
sub
ljmp
shlb
add
repnz
stos
xlat
xchg
push
cmp
pop
jecxz
mov
xchg
xor
fwait
ret
enter
sbbb
and
add
ret
or
sahf
enter
cmp
push
pop
rolb
pop
imul
sub
cmp
divb
pop
aas
and
shll
repz
push
incl
mov
daa
cmp
repnz
je
ror
mov
adcl
jo
or
mov
xchg
push
test
xchg
sbb
pop
jne
add
dec
fisubl
push
repnz
mov
aad
sub
cmp
orl
push
sub
cwtl
outsb
imul
mov
into
or
mov
out
xchg
pop
adc
clc
pop
jge
xorl
fwait
cmc
and
adc
push
orl
xchg
pop
stc
cmpl
imull
les
adc
movsb
decb
lahf
cmc
outsl
dec
and
and
or
push
mov
adc
sbb
push
sti
fadds
mov
not
xchg
xor
xchg
imul
add
aad
inc
add
mov
out
out
mov
data16
sbb
cmc
fcom
pop
mov
cwtl
jno
pushf
sbb
rorl
lea
aas
hlt
dec
sub
cmp
insb
in
in
pusha
leave
xchg
jb
aaa
inc
mov
push
pop
subl
jmp
pop
leave
mov
cltd
repz
stc
in
xchg
mov
jecxz
icebp
lods
aaa
cli
pop
dec
orb
in
and
orl
repnz
dec
frstor
inc
loope
fcmovb
and
adcl
int
js
movsl
divb
pop
lcall
xchg
xor
adcl
or
scas
addl
movsb
imul
addl
sub
push
subl
lret
mov
pushf
cli
rcrl
in
imul
push
lods
push
lea
dec
rcll
cmpsl
xor
xor
subl
in
aas
adc
xchg
outsl
test
cmp
jle
xchg
or
add
lods
lcall
rclb
push
sbb
sbb
mov
outsl
add
stos
inc
jns
push
idivl
cmp
rorb
mov
out
add
addl
lcall
mov
inc
mov
xor
push
ret
jns
sub
aam
xor
test
in
xor
xor
arpl
fcomps
lcall
fcoms
dec
sbbb
subl
in
std
out
jge
stc
jbe
subl
jns
dec
cs
push
mov
loopne
and
lods
or
ret
jmp
sub
mov
cmp
je
mov
stos
roll
add
sub
testb
inc
add
movsb
out
jmp
mov
jne
push
fstp
aas
xorl
out
in
add
sub
or
push
push
xorl
adc
cli
dec
adcl
xorl
inc
outsb
insl
inc
mov
cmp
stos
movsl
into
lahf
addl
add
std
inc
call
nop
inc
and
fsubl
jnp
add
sbbl
movsb
adc
in
pop
js
icebp
cli
add
cmp
push
lea
sub
xor
in
mov
outsl
mov
repz
aas
inc
cmpsb
sub
jno
mov
push
loope
rcrb
and
lea
cmc
inc
nop
adc
das
add
adc
xor
mov
xor
rcll
xor
les
ret
cmpl
jmp
mov
cmc
sbb
movsb
lret
inc
ja
push
subl
and
add
imul
cmpsl
jp
mov
xor
mov
xchg
fdiv
stos
filds
int3
xorb
jne
cwtl
add
loopne
sbbl
ds
add
bound
bound
stc
cmp
xor
and
cs
sti
jl
push
sbbl
dec
sub
pop
es
push
sbb
xor
mov
aas
lea
dec
add
lods
mov
test
lea
movsb
imul
dec
pop
mov
outsl
imul
lock
loope
adc
xchg
fs
or
test
push
adc
push
loop
andb
testl
js
icebp
out
es
in
jmp
xor
stc
inc
jmp
std
xor
es
lret
subl
mov
xor
jmp
add
pop
fnstcw
push
push
popf
out
shlb
ja
or
cmpl
divl
movsb
out
sub
fwait
cmc
aas
mov
inc
push
into
cli
iret
cmpl
rcrl
leave
outsl
sub
jecxz
and
test
mov
xchg
mov
cmp
xorb
mov
je
cmpsb
orl
in
mov
sbb
icebp
mov
mov
sub
outsb
cmpl
jnp
jmp
cmp
adc
mov
sbbl
mov
pop
pop
push
sbb
jp
and
nop
push
icebp
and
sub
sbb
dec
fisttps
xorl
push
sub
sbb
adc
push
adc
mov
mov
repnz
addb
jbe
push
add
cmpsl
sub
imul
push
add
inc
mov
lods
popf
ds
je
scas
int
adc
lds
data16
xorl
daa
or
xor
arpl
jnp
adc
mov
cmp
cmpl
icebp
jl
movsb
pop
insb
dec
lret
add
mov
loope
bound
add
mov
push
pop
fwait
cmp
faddl
mov
js
adc
mov
stos
add
mov
insb
es
pushf
outsb
adc
xor
lretw
mov
mov
and
cmp
es
mov
xchg
cmp
mov
jle
xchg
out
sub
xchg
dec
bound
fxch
mov
push
jb
mov
mov
xchg
cld
icebp
sbb
mov
cmp
mov
sahf
repz
mov
fisubl
add
sub
rol
xor
daa
loopne
mov
repnz
mov
sbbl
inc
in
imul
lods
push
outsb
inc
in
rcr
xor
xchg
dec
pop
mov
xchg
arpl
sub
cwtl
pop
fwait
mov
mov
daa
xchg
sub
std
xchg
jo
out
add
enter
fst
mov
fisubs
pop
or
adcl
cwtl
xlat
addl
pusha
xor
mov
incl
es
js
pop
xor
or
xchg
push
adc
loope
in
icebp
xchg
imul
or
push
addl
mov
adcl
mov
xorl
and
pusha
subl
jbe
sub
outsb
into
add
xor
jle
rclb
test
push
lds
mov
cmp
mov
out
adcl
int
mov
inc
outsb
les
xchg
mov
test
mov
xchg
mov
xchg
sti
loop
push
scas
jmp
insb
repz
inc
int
fcomip
or
mov
inc
sub
and
and
mov
iret
fadds
xchg
imul
xchg
test
iret
jmp
mov
aam
sbbl
hlt
cmpsl
xchg
sub
into
xor
call
icebp
or
ss
nop
int3
fucomi
clc
cmp
into
lods
mov
mov
mov
mov
arpl
leave
push
or
cmpsl
push
mov
test
xchg
test
rorb
sarb
out
sbbl
cwtl
sub
add
mov
shll
imul
sbb
inc
pop
data16
push
jb
dec
mov
imul
jne
push
orl
cld
popf
fs
add
mov
xorb
adc
sub
lods
mov
mov
or
aas
push
sub
cs
popa
stos
subl
fiadds
xor
icebp
loop
cmp
adcb
sbb
pop
pmaxsw
andl
xchg
outsl
andl
sub
aas
pop
sub
xchg
repnz
icebp
mov
fwait
sub
daa
cld
pop
or
and
outsl
test
mov
addl
or
ds
sbbb
jmp
cmpsl
aaa
xor
add
repz
mov
mov
sar
push
movsb
xor
lods
cmpb
inc
cltd
orl
jb
jmp
and
cmpsl
sbb
push
cwtl
fisubrl
into
arpl
inc
mov
sbb
dec
leave
arpl
fwait
adc
cmp
lods
addr16
mov
out
jg
inc
aad
push
mov
cmp
jp
add
add
adcl
xor
xchg
jge
adc
jmp
pop
xchg
out
push
inc
push
sti
subl
xorl
out
ret
aad
sbb
adc
add
mov
fistpll
mov
roll
mov
jmp
addb
das
sbbl
jp
add
sti
xor
mov
add
pop
mov
cmc
rcr
andb
aaa
rclb
xor
andl
cmpsl
movsl
flds
int3
xchg
popf
icebp
mov
cs
fnstsw
jne
decl
pop
pushf
clc
ror
test
push
jno
jo
lahf
push
stos
xor
sbbl
test
xchg
xchg
xchg
andl
addr16
andl
andl
mov
insl
fidivrl
xchg
push
push
orl
add
push
inc
mov
clc
xchg
dec
fidivrl
adc
test
mov
pop
jl
addb
xorl
fists
sahf
sbb
into
add
test
sbb
nop
mov
test
pop
pop
add
lods
pop
sub
xor
sbb
fistl
sub
mov
or
inc
imul
adc
inc
lret
mov
popa
add
orl
loope
adc
cld
mov
fwait
xor
add
decb
nop
inc
mov
out
sub
mov
iret
sti
subl
les
and
push
inc
sub
loop
pusha
addb
icebp
jmp
imul
push
sbb
shlb
mov
icebp
rorb
sahf
pop
mov
cmpsb
xchg
mov
aaa
cmpl
cmp
lahf
xor
xor
jb
dec
movsb
les
pop
rorl
icebp
fs
call
and
clc
adc
pop
xor
ds
push
int
and
outsl
push
std
shrl
mov
xor
mov
je
gs
cmc
cmpsl
addl
mov
xorl
pop
inc
movsl
gs
in
add
cwtl
lea
outsb
inc
addl
xchg
mov
pop
jge
adc
xor
mov
int
pusha
pop
enter
push
test
fwait
inc
imul
adc
adc
cmpl
addl
jbe
subl
imul
ljmp
mov
orl
mov
dec
pop
xchg
sahf
lods
jo
dec
adc
mov
shrl
rcll
xor
imull
out
adcl
jns
movsb
mov
cmp
addr16
xor
adcl
sarb
aas
aaa
adcl
fidivrl
dec
subl
mov
out
outsl
nop
add
or
fnsave
rcll
xorl
mov
cmp
je
mov
daa
and
movsb
sub
lret
or
cmpsl
cmp
je
fstl
orl
lock
xor
call
js
dec
rolb
mov
push
dec
inc
xorl
inc
popa
sub
jp
mov
sub
gs
cmp
jg
cmpl
jmp
and
sbb
aas
lcall
add
cmp
es
insl
and
jmp
lahf
or
addl
dec
jne
add
roll
testl
or
movsl
cmpsl
imul
ret
mov
outsb
roll
sub
jns
adc
pushf
enter
call
mov
mov
sbb
repz
cli
push
jmp
aad
jmp
xorl
jge
push
adc
iret
subl
push
push
inc
scas
into
mov
mov
push
inc
add
gs
subl
fildl
xor
loop
call
cmp
shlb
ljmp
xor
and
xchg
fs
add
cmp
nop
adc
add
movsb
movsb
push
mov
in
cmp
cwtl
xor
and
subl
shlb
xchg
jno
push
icebp
jmp
in
outsl
mov
or
jns
mov
xorl
pop
popf
sbbl
frstor
sbbl
les
add
cwtl
push
push
test
jnp
shlb
add
xor
out
push
loope
rorl
xchg
inc
rol
mov
xor
cmp
or
mov
loopne
iret
jb
or
ja
push
adc
inc
fdiv
test
xor
xor
mov
outsb
jae
fcomps
mov
inc
xor
pop
xor
jae
stos
and
jge
mov
stc
int
push
lcall
mov
mov
pop
jge
sbb
sbb
subl
loopne
adc
or
leave
orl
and
push
aaa
sub
addr16
jge
dec
sbb
and
in
enter
andl
cmp
dec
insl
out
js
call
ja
dec
iret
push
jne
pusha
scas
cmpb
pop
fldt
jmp
push
push
and
imul
push
sub
push
push
adc
subl
push
mov
fadds
lock
loopne
lds
or
ja
je
cli
repnz
mov
xchg
inc
andl
or
inc
lret
mov
enter
lret
arpl
sar
pop
jbe
xchg
das
pop
scas
dec
cmp
push
pop
and
movsl
ja
ficomps
rcrb
mov
dec
mov
push
inc
pop
pop
inc
sbbl
fs
and
rolb
add
loop
xchg
test
sub
pop
mov
fsubl
subl
clc
es
push
fcom
data16
ljmp
loopne
into
fcmovnu
loop
bnd
add
mov
sahf
andl
orl
popf
cmpsl
insl
out
push
imul
sbb
jno
pop
or
andl
mov
xor
pushf
adc
push
rcl
aas
lea
lea
sbb
add
push
imul
shlb
jbe
pusha
cmp
into
icebp
loop
fcomps
negb
lcall
adcl
push
fidivl
mov
in
jns
pop
loop
les
inc
aam
adc
movsl
xchg
xorl
pop
repnz
pop
adc
jg
mov
and
xlat
loopne
sarb
xor
aam
cmp
fsubrp
ds
movsl
idivb
fiaddl
into
outsl
sub
subl
faddl
inc
rcrb
add
test
adc
subl
pop
mov
pop
loopne
xor
stos
sbb
jns
subl
je
adc
mov
enter
das
test
mov
pop
sti
mov
cmpl
or
or
pop
in
icebp
xchg
sub
outsl
inc
stc
shll
addl
cmp
imul
push
movsb
inc
jae
lock
fnstsw
mov
insl
lcall
mov
and
add
jecxz
push
es
adc
stos
jnp
xorl
cmp
imul
xor
mov
xchg
lea
stos
andl
mov
cmp
jecxz
mov
in
aad
xor
cwtl
fcomps
enter
roll
pop
nop
mov
mov
add
xor
mov
fcoml
addl
ficompl
adc
mov
repz
mov
pop
dec
scas
pop
push
pop
inc
inc
cmp
insl
icebp
mov
sbb
and
int3
push
mov
push
xchg
mov
mov
jne
pop
cltd
pop
fdivl
cmpsb
repnz
pop
push
rorl
in
cltd
cmpl
iret
nop
addr16
loop
mov
mov
push
icebp
push
and
sahf
cmp
cmp
cmpsl
adc
dec
adc
pusha
gs
addl
incb
jno
aaa
loopne
jecxz
mov
xchg
and
and
je
cmpsl
in
push
add
outsl
ja
aad
int3
jmp
sub
xchg
push
test
push
dec
push
xor
subl
das
sbb
dec
adc
loope
scas
push
cmp
lods
jg
fnstsw
orl
dec
push
mov
fimull
andl
loop
dec
stos
pop
stc
pop
cld
es
jb
or
cmp
and
xor
out
lea
ja
mov
push
ljmp
xlat
sub
cmpsb
ljmp
mov
ret
test
pop
fldl
iret
jmp
subl
rclb
outsb
fcmovnu
or
sbbl
outsl
xor
sbb
pop
inc
pop
data16
bound
xchg
gs
and
lds
out
out
ret
jno
jmp
add
or
enter
adc
test
mov
sbb
jno
adcl
fildl
xlat
out
xchg
pop
das
subl
sbb
ret
loop
addb
movsb
push
movsl
push
cmp
rclb
ret
stos
mov
inc
lcall
mov
adc
int
clc
mov
aad
jne
aas
orl
cwtl
inc
dec
mov
enter
cld
pop
and
mov
xor
jbe
xorl
arpl
fildl
pop
into
in
loope
mov
jns
outsl
lret
mov
stos
out
lea
jnp
sbb
aad
or
pmaddwd
mov
andl
or
lea
stos
adc
in
daa
jp
cmpsb
ljmp
in
pop
pushw
and
gs
out
xor
outsl
push
fadds
xchg
push
pop
jle
pop
sahf
jnp
sahf
add
xor
sbb
mov
loopne
cmpl
push
out
rolb
popa
push
icebp
loopne
push
iret
xlat
or
addl
adc
jle
dec
mov
ror
jmp
lods
mov
and
test
mov
ret
jge
subl
xchg
push
cs
xchg
es
icebp
inc
rorl
or
mov
in
push
mov
xchg
push
imul
inc
push
aaa
stc
icebp
aas
jo
outsb
pop
std
sbb
add
pop
xchg
insb
mov
jns
cwtl
sbb
aas
dec
aaa
ljmp
repz
cmp
and
xor
pop
stos
lret
dec
and
xchg
or
subl
sub
and
jbe
stc
mov
int3
add
sti
sub
out
ljmp
dec
insl
iret
mov
and
add
inc
inc
dec
sti
adc
popl
mov
mov
pop
mov
rclb
xchg
jbe
prefetch
sub
jmp
xor
jae
and
test
or
sarb
popa
mov
cltd
fisttpl
mov
pop
lods
sbb
inc
inc
mov
cwtl
pop
adc
mov
xchg
scas
cld
inc
xor
mov
mov
cld
push
repnz
arpl
xchg
xor
insl
pop
jg
mov
lahf
mov
std
js
sbbl
test
xchg
push
jmp
or
pop
push
icebp
jno
push
stos
jle
or
sti
sbb
mov
pop
out
sarb
or
mov
push
pop
mov
repnz
push
mov
dec
sub
jne
xchg
imul
mov
dec
xor
aas
jmp
pusha
mov
arpl
stos
cmp
shr
sti
mov
fld
mov
jno
xor
mov
cli
xlat
mov
bound
cli
mov
jge
push
sti
inc
aas
jl
pusha
aaa
fidivrl
cmp
das
sbb
inc
pop
xchg
aas
lcall
mov
mov
loopne
lods
mov
adc
inc
pop
xchg
out
push
sub
xchg
xchg
mov
inc
mov
xor
push
rcrb
jp
out
inc
imul
es
push
mov
fdivl
push
sub
cmp
mov
inc
pop
scas
push
jg
mov
andl
pop
enter
add
jnp
pop
push
aas
aaa
incb
in
or
dec
sbb
subl
test
xor
adc
lock
adc
cltd
adc
jbe
jnp
xchg
mov
sarl
sbbl
mov
subl
push
gs
mov
pop
xor
adc
pushl
mov
fs
fnsave
mov
xchg
movsl
mov
push
dec
jns
mov
test
orl
cmp
inc
cmp
inc
add
orl
into
scas
rorl
imul
jg
mov
xchg
lret
dec
fiadds
fistpl
or
movsb
dec
jecxz
cmc
pop
inc
mov
xchg
cmpl
xor
sbbl
and
pop
loope
xchg
mov
mov
cmpb
fcomip
mov
loop
add
push
mov
mov
xor
pop
scas
jns
dec
popa
or
cmpsl
rcl
and
movsl
cmp
mov
pop
or
mov
or
adcl
add
xor
xchg
icebp
jmp
orb
pop
mov
out
movsl
push
pop
mov
xchg
orl
into
pusha
mov
cmp
pop
data16
in
sub
jne
andl
dec
cmp
sub
jbe
js
faddl
jne
inc
cltd
jg
addr16
aam
sti
pop
adcl
ret
xorb
mov
adc
sub
mov
and
addl
inc
stos
xor
outsb
testl
pop
mov
orl
inc
jecxz
insb
pop
bound
xor
dec
xchg
in
jmp
cld
and
subl
jo
mov
add
loop
sti
xor
push
int
or
fidivrl
xor
pusha
jle
jbe
les
xor
repnz
jo
ja
pop
sub
xchg
or
jp
cmc
push
sbbl
lea
rorl
ds
sbbl
mov
pop
fildl
enter
arpl
fbstp
mov
ja
xlat
insl
push
mov
ficoml
mov
lret
repz
jl
das
in
adcl
push
inc
jp
inc
lea
and
fstpt
jg
xor
adc
cltd
fisttps
inc
cmp
rol
subl
jno
or
imul
pop
popa
dec
dec
lods
jp
dec
sbbl
filds
push
cs
add
inc
shr
es
popa
jne
outsb
push
mov
lret
sub
xchg
lods
mov
stc
xchg
sub
jmp
lret
ret
in
jno
sbbl
sub
mov
push
ljmp
loop
inc
pop
mov
fwait
adc
ja
vrcpss
gs
pop
data16
repz
or
addl
popf
jno
shll
popf
hlt
dec
mov
xchg
mov
lahf
mov
inc
and
and
add
cld
incl
std
inc
mull
or
mov
push
push
loop
cmpl
ret
flds
inc
lods
fs
push
rorl
xorl
xlat
clc
insl
add
cmpl
arpl
mov
sub
mov
stos
aas
sbb
fisttpll
jnp
fisttpl
in
dec
jns
rcrl
xchg
inc
cmp
push
inc
pusha
fdivs
mov
mov
icebp
int3
xor
loopne
xchg
shrl
mov
xor
outsl
lods
dec
iret
inc
rorb
lret
in
enter
ljmp
mov
cltd
stos
push
jecxz
xor
xchg
mov
sbb
clc
sbbl
aaa
push
adc
mov
aad
lock
int3
sbb
adc
scas
inc
pusha
inc
or
jne
mov
decl
pop
orl
pop
movsl
outsl
ds
jne
je
fldcw
fs
mov
pop
rol
add
pop
lahf
pop
cmpl
ljmp
cmp
stos
mov
sbb
push
pop
cmp
jb
scas
add
jbe
jno
mov
add
sbb
es
mov
mov
filds
call
bound
sbb
rcrb
mulb
inc
add
in
mov
orl
sub
mov
mov
push
push
stos
dec
orl
xlat
lcall
adc
jmp
adc
ja
dec
or
fcoms
mov
dec
rcrl
mull
and
mov
popf
lahf
adc
xchg
andl
bnd
imul
addl
adc
rcll
inc
sub
mov
lea
rolb
cmp
lods
mov
jne
hlt
scas
lea
clc
pop
or
adc
loopne
gs
arpl
popf
dec
nop
movsb
or
loop
pop
mov
mov
int
dec
xchg
sbb
cltd
mov
stc
popf
enter
jns
outsl
mov
add
jecxz
jmp
ja
mov
fstl
out
dec
jg
xor
sbb
push
ror
or
dec
aam
xor
adc
push
loop
inc
mov
inc
mov
adc
mov
cmp
iret
lods
xorl
and
inc
ds
and
lea
xchg
sbb
outsl
xor
xchg
pop
inc
lds
add
movsl
cmp
out
and
push
sbb
or
sbb
dec
adcb
or
outsb
hlt
addr16
and
jns
addb
cli
mov
mov
lods
mov
jno
push
push
imul
sub
ja
mov
lock
sub
loopne
push
loop
loop
add
jae
lds
fiadds
sahf
jnp
dec
xchg
and
in
pop
sbb
enter
pop
jno
adcl
insb
addl
mov
or
mov
pop
and
mov
bnd
ds
xchg
sub
enter
stos
add
or
lods
mov
add
hlt
mov
jnp
dec
call
sbb
mov
jo
popf
pop
mov
and
dec
cmp
sub
or
mov
dec
shll
inc
ja
imul
sbb
cmp
pop
jno
je
or
xchg
or
stos
xchg
rcr
push
adcl
js
dec
bound
ds
sbbl
jp
das
jo
push
sub
ret
sub
out
or
std
lret
das
cmp
mov
into
sbb
ret
xchg
fcoml
inc
xor
lods
mov
outsl
mov
fistpll
pop
jns
jnp
imull
in
sub
adc
outsl
xorl
push
orl
clc
ljmp
shll
pop
cmp
ljmp
lea
pusha
pop
insb
mov
mov
xchg
xchg
cmpsb
sbb
inc
mov
jl
pop
pop
leave
jns
icebp
call
push
stc
incl
xor
jge
sub
mov
fmul
orl
mov
cmp
sbb
mov
outsb
iret
ss
add
pop
push
cmp
out
or
jns
ss
xorl
mov
cli
dec
andl
and
or
push
inc
lret
pushf
dec
push
rcr
xor
outsl
mov
ja
or
push
sbb
es
sub
cmp
mov
mov
add
ud1
cmpl
mov
aam
jle
js
ret
lea
pop
out
cmp
repz
xor
pop
incl
xchg
mov
and
jg
popa
xchg
mov
iret
fimull
mov
adc
sub
mov
gs
nop
mov
call
out
inc
push
ret
sbb
nop
mov
cmp
mov
mov
test
push
mov
ret
jl
add
ss
jns
mov
push
and
je
jmp
mov
push
daa
pusha
sub
pop
pop
or
mov
mov
xorl
popl
addl
test
cmp
sbb
cli
inc
subl
and
inc
and
dec
movl
lret
adcl
sub
sbb
lea
fstps
imul
shl
cmc
cwtl
adc
cmp
roll
icebp
or
add
cmc
lcall
outsb
jmp
sub
jb
pop
insb
iret
jl
cmpsl
dec
mov
stos
div
sub
out
in
pop
xchg
mov
das
cwtl
enter
notb
xchg
outsl
add
jg
cmp
repz
xchg
mov
and
pushf
int
adcl
mov
xchg
pop
mov
inc
xchg
and
or
inc
mov
mov
lahf
sub
les
divb
or
das
hlt
sub
aaa
jbe
aad
js
jg
lods
sbb
sub
cmp
cmp
jge
lcall
orb
pushf
js
inc
pop
jae
fcoml
xor
jmp
int3
daa
ss
mov
std
xor
adc
jo
dec
lea
cmpsl
adc
sbb
cld
xchg
sbb
and
inc
fdivl
daa
icebp
mov
hlt
push
mov
adcb
pop
call
jno
sub
loopne
mov
loope
dec
mov
adcl
outsb
push
les
inc
cltd
jns
cli
mov
sub
add
cmpsb
xchg
jnp
jecxz
mov
push
bound
sbb
push
aad
or
sbb
pop
dec
int
mov
loop
cmp
mov
jle
iret
popa
xorl
lahf
arpl
cmpsb
inc
mov
sbbl
subl
aad
pop
adcb
push
pop
pop
mov
and
cmp
movsl
pop
or
inc
pop
mov
mov
mov
mov
dec
aaa
les
ror
lret
dec
pushf
aas
jno
push
jl
adc
int
out
icebp
mov
sti
and
mov
daa
mov
push
cltd
mov
add
scas
orl
jne
mov
jno
xor
cmp
pop
out
or
ljmp
shrl
sarl
dec
iret
pop
faddl
leave
mov
adcl
test
sub
ret
pop
dec
testl
movsb
fistps
cmpsb
movsb
mov
icebp
cmp
dec
cmp
sbb
sbb
sub
cmp
leave
subl
pop
movsl
aam
out
sub
mov
jb
push
adc
jecxz
stc
mov
sub
mov
sub
jbe
jecxz
lea
popa
jo
or
or
fcompl
adc
jge
dec
mov
pop
jb
popa
pop
stc
mov
fwait
arpl
insb
mov
adc
int3
push
shl
adcl
sub
movsb
jle
xor
mov
ja
cltd
lret
orl
imul
pop
les
bound
cwtl
movsb
and
jg
iret
mov
insl
lods
dec
outsl
mov
push
mov
cmp
shrb
orl
xlat
mov
int3
xchg
pop
inc
insl
push
sub
icebp
mov
mov
mov
ficomps
rcr
dec
or
sub
jnp
push
lock
dec
icebp
jno
pop
dec
dec
and
xchg
mov
addl
xlat
or
pop
out
std
xor
mov
or
cld
mov
das
push
jle
bnd
xor
mov
cmp
movsl
je
orl
and
adcl
clc
pop
mov
lods
sub
push
test
mov
aad
js
in
mov
xchg
sub
stos
mov
push
icebp
jmp
push
inc
add
subl
pusha
inc
fdivp
sbb
iret
sbb
mov
icebp
dec
xchg
push
jno
push
xchg
test
addr16
aaa
leave
pop
nop
pop
clc
xchg
lds
cmpsb
add
mov
sub
inc
push
pop
jnp
mov
sub
ret
fwait
sbb
orl
loop
mov
pushf
pop
lret
cmpl
push
add
xor
mov
test
mov
in
or
insb
mov
repnz
xor
xchg
outsb
adc
jo
and
add
mov
pop
stos
out
scas
jne
xorl
dec
lods
mov
jge
xchg
cmp
pop
lock
sbbb
out
test
adc
inc
shlb
jg
jnp
sahf
jae
ret
cli
jp
ja
adc
jne
jbe
jmp
sub
subl
xchg
and
mov
sbb
cmp
sub
sarb
fisubrs
mov
adc
out
popf
or
lock
mov
insb
aas
sbb
push
pop
xchg
xchg
push
cli
inc
ja
shrb
add
sub
fdivs
xchg
mov
pop
xchg
mov
daa
xor
in
test
loop
push
or
cmp
xor
pop
mov
add
sbbl
mov
or
stos
clc
and
pop
add
icebp
andl
mov
adc
and
sbb
jp
push
push
lods
bound
loope
ret
jbe
jnp
push
leave
sub
cmp
jge
lahf
pushf
icebp
mov
das
add
mov
sub
stos
std
cmpl
mov
pop
jo
imul
les
mov
mov
inc
dec
into
sbb
in
clc
mov
and
dec
fwait
xorl
mov
add
add
or
fwait
xchg
repz
jae
mov
dec
and
pop
inc
ret
jecxz
cmpsl
cmp
push
jo
lahf
xor
imul
js
sbb
jns
lea
jg
add
cmp
xor
xchg
cltd
orl
aam
xor
sub
mov
icebp
push
ficoms
dec
push
xor
pop
pop
mov
popf
in
scas
ficoml
cmove
mov
fistpll
aam
push
and
mov
movsb
mov
adc
adcl
xor
inc
mov
lea
cmp
iret
dec
daa
out
add
push
push
divl
adc
fwait
rorb
mov
dec
lret
inc
xchg
cmp
inc
popa
xlat
lods
and
adc
in
fstpt
andl
or
pop
mov
push
lods
pop
add
loop
and
fiaddl
lahf
lock
leave
imul
add
adc
cmp
repnz
adcb
pop
inc
jns
and
gs
dec
cmpsb
push
inc
je
cwtl
add
jge
out
and
add
loope
push
lea
bound
test
ja
scas
sbbl
xchg
aam
inc
test
push
dec
pushf
nop
arpl
mov
mov
andl
sub
frstor
sbbl
xrelease
adc
movsb
cli
cwtl
mov
cmp
leave
insl
sub
xchg
mov
xor
gs
sub
sbb
outsb
adc
add
inc
icebp
sub
mov
jns
xor
xchg
pushf
dec
ljmp
cltd
sbbl
inc
sbb
clc
push
mov
add
jle
pop
cmp
mov
xchg
mov
cli
pop
in
pop
roll
jb
adc
sahf
sbb
push
ret
inc
test
clc
and
std
mov
jmp
sbbl
adcl
mov
sub
bound
sbbl
andl
cmp
pop
mov
sub
mov
mov
movsl
in
xor
hlt
xchg
loopne
xorl
popa
mov
mov
lods
or
add
mov
xor
xor
andl
vmwrite
out
mov
out
orl
cli
adcl
js
xor
inc
out
add
rcrl
cmovae
pop
test
imul
clc
add
xchg
aaa
or
test
xchg
push
jne
sub
test
adc
jno
aam
mov
cmp
outsb
jnp
cld
push
bnd
out
inc
stc
dec
bound
push
jmp
adc
loopne
cmp
ljmp
xor
xchg
jmp
dec
addr16
lods
sub
sti
adcl
dec
daa
scas
outsl
sub
subl
mov
rorl
inc
add
sbbl
cmp
dec
xor
shr
inc
in
mov
aad
icebp
jle
dec
repnz
cmpl
jne
jge
jl
sub
and
sahf
out
fdivrs
ss
das
jnp
xchg
mov
jg
xorl
mov
rolb
int
xchg
loop
cmp
push
mov
insl
scas
mov
xor
xchg
lea
insb
and
adcl
xchg
mov
inc
lods
push
jae
es
ljmp
dec
push
andl
adc
sub
sbbl
xchg
pop
orl
mov
movsl
xor
imul
add
lods
xorl
iret
dec
addl
push
lret
jno
dec
xchg
pop
add
lea
aam
pushf
mov
in
adc
sbb
xchg
jbe
xchg
ss
xor
mov
jbe
push
add
movsl
shlb
cli
mov
xchg
inc
fs
outsl
pop
sub
xchg
aaa
imul
sbb
cltd
push
sarl
sahf
ljmp
popf
cmpsb
and
out
xorl
cmp
subl
pop
into
sbb
imul
orl
clc
cmp
in
or
dec
sbb
ret
inc
out
fildll
jnp
push
mov
lea
push
sbb
notb
inc
movsl
push
or
lret
fsubr
sbb
shl
in
enter
pop
daa
xchg
nop
dec
sub
push
mov
pop
xchg
xchg
sbbl
adc
cmp
adc
dec
mov
mov
cs
mov
aad
xchg
or
test
into
icebp
test
lret
lea
sub
xchg
and
ljmp
jge
arpl
mov
mov
fwait
daa
mov
xor
js
adc
push
dec
pop
outsl
aas
lret
add
inc
mov
inc
add
call
pusha
xchg
jb
cltd
adc
shll
jge
in
mov
push
or
cmc
add
sysenter
in
xor
stos
or
faddl
imul
cmpl
cs
sub
into
add
pop
std
jl
test
add
outsb
jno
xchg
sub
cmpl
xor
mov
cmp
mov
icebp
shrl
andb
jno
mov
in
bound
pop
stc
jl
sbb
lret
test
test
mov
sbb
or
inc
sub
mov
in
mov
xor
arpl
lahf
push
pop
inc
sub
sub
sbb
movsb
or
mov
test
pop
mov
imul
outsl
xchg
data16
inc
xorl
sub
add
add
xchg
cwtl
mov
out
scas
outsl
mov
lahf
cmovno
movsl
push
pop
sub
mov
imull
pop
insl
jno
loope
lds
add
and
rcll
fdivl
jmp
mov
cmp
stos
inc
icebp
xchg
xor
sbb
xchg
in
cmpl
push
dec
mov
push
push
enter
ret
mov
mulb
push
mov
mov
and
jnp
mov
cli
jmp
add
xchg
mov
cmpl
sahf
stc
addr16
iret
subl
ret
adcl
mov
cmp
sbbl
and
pop
ret
dec
rcl
mov
clc
icebp
sub
outsl
adc
out
psubsb
pop
sbb
dec
ror
mov
cltd
lea
fs
jno
cmp
sbb
es
push
xchg
je
lcall
andl
subl
rcll
mov
mov
repz
xchg
int3
dec
mov
push
cld
rol
ja
sub
ljmp
int3
sbb
inc
insl
andl
or
xchg
daa
adc
cmp
popa
adc
xchg
xor
push
sbb
sub
cmpsl
push
push
cmp
jp
rolb
sahf
mov
icebp
aaa
xor
out
ficoml
inc
inc
lds
insb
sahf
cmp
jno
lea
cmp
dec
and
and
cltd
loopne
pop
xor
movl
cmp
fistpll
orl
jge
lret
mov
movsb
inc
test
out
ja
xor
xor
inc
andl
aaa
fcmovu
clc
gs
fnstsw
xlat
stos
shlb
andl
push
negl
shl
repnz
lcall
pop
incb
adc
cwtl
xor
cmp
mov
cmp
jno
and
subl
sbb
mov
mov
pop
incb
scas
jl
arpl
out
and
adc
sbb
or
push
data16
lret
outsl
or
lods
je,pn
cmp
mov
and
orl
orl
mov
and
das
xchg
jno
mov
lahf
or
xchg
sbbl
mov
jns
mov
jne
ss
shrl
mov
stc
test
mov
mov
rolb
and
add
push
jmp
fstpt
daa
and
sbb
push
and
xor
sub
cmp
pop
aam
jno
xor
and
pop
xchg
xchg
xchg
xadd
ret
movsb
aam
jb
xchg
add
lock
cmpl
mov
lods
loop
clc
cmpb
inc
es
mov
jmp
movsb
loopne
cmp
addl
mov
adc
xchg
rcll
xor
ret
or
cmp
mov
dec
sub
mov
sub
inc
clc
pushfw
movsb
outsb
adc
icebp
popa
aaa
repnz
das
xorl
jle
add
adc
data16
call
aam
pop
repnz
push
cltd
ja
adc
icebp
mov
insb
int
sbb
sbbl
pusha
lods
and
pop
aas
out
mov
popf
sub
idivl
push
ja
lods
xor
ret
cwtl
je
mov
add
dec
cltd
rorb
push
pusha
dec
mov
outsl
push
xchg
dec
add
adcl
clc
push
mov
loop
aam
mov
sub
aas
data16
cmp
rcr
xchg
push
sbb
sarl
cmpsl
sbbl
push
inc
sbbl
stos
push
push
in
and
shrb
adc
push
dec
push
in
loope
enter
or
rolb
pop
adc
repnz
sub
sbb
add
or
sub
test
dec
fcoms
inc
mov
das
fwait
add
xor
mov
inc
shr
fldl
idiv
xorl
xchg
bound
icebp
enter
push
and
test
les
mov
jno
js
test
mov
adcl
sahf
cmpsl
subl
dec
or
mov
sub
cs
or
cmp
jns
pop
and
push
lods
jno
or
sub
nop
sbbl
shll
mov
jg
cltd
ljmp
inc
mov
shll
add
xchg
mul
add
popf
in
repz
ret
add
lret
movsl
xchg
jne
repz
subl
add
add
repnz
xchg
push
sti
les
test
cmc
sub
add
in
xor
loope
lea
test
add
xor
loope
hlt
andb
aas
adc
jecxz
mov
rolb
fcmovu
lcall
cmp
repz
mov
xchg
mov
dec
inc
jmp
shll
jg
lea
mov
notb
mov
xchg
adc
iret
jne
push
mov
mov
add
icebp
orb
cs
pushf
adc
test
mov
mov
pop
mov
fldenv
pop
jns
xchg
lds
shll
xchg
out
dec
out
xor
rcll
je
shl
pop
mov
ffree
pop
loope
pop
fs
in
add
xchg
sub
mov
push
shrb
jo
inc
iret
mov
icebp
lds
in
mov
add
and
add
cmp
xchg
jmp
inc
sub
xchg
or
and
icebp
or
dec
lea
xor
les
dec
or
not
dec
cmpsb
cmp
jg
fcoms
fstl
in
iret
push
sbb
xchg
inc
inc
adc
or
fs
adc
popa
xchg
xchg
mov
xchg
cli
inc
lret
loope
mov
inc
pop
jb
dec
cmp
add
mov
xor
sbb
loope
add
ret
add
test
dec
popl
aad
inc
cmp
cs
loope
jb
mov
popf
dec
xlat
jns
sub
fdivs
out
je
mov
add
cwtl
dec
lret
loope
push
icebp
outsb
sub
ljmp
jmp
sub
pop
xchg
flds
add
sub
xchg
xchg
cmpsl
dec
cwtl
cmpsl
stos
imul
stos
insl
clc
dec
aad
cwtl
inc
sub
mov
pop
lcall
fistpll
notb
rcll
xor
xor
and
xchg
dec
add
movsb
xchg
xchg
mov
in
les
add
and
mov
stos
movl
inc
mov
inc
cmp
sub
fs
push
jo
and
add
movsb
mov
adc
fprem1
or
cld
jp
enter
dec
xor
das
fwait
std
aas
in
jb
sub
inc
sub
dec
shll
repz
mov
andb
or
mov
jns
jecxz
adc
fs
inc
or
out
inc
xor
mov
inc
aad
sbb
scas
in
je
clc
xchg
jge
stc
xchg
outsl
flds
and
or
movsb
push
in
stos
jecxz
popfw
rcl
mov
pop
icebp
gs
test
cmc
xchg
mov
dec
out
push
add
adcl
sub
jae
or
icebp
int3
cmp
pop
outsb
movsl
mov
into
leave
dec
xorb
and
or
mov
subl
and
je
lock
insl
ret
roll
bound
fs
add
mov
imul
test
add
lret
and
ja
xlat
jb
out
mov
test
cmp
mov
pop
pushf
cmp
mov
xchg
fcmovnb
in
xor
cltd
test
mov
mov
add
xchg
mov
add
mov
cmp
or
dec
test
mov
sbb
ret
shlb
insl
fldl
mov
inc
movsb
roll
dec
cltd
aaa
in
idiv
cmc
add
inc
add
in
mov
xchg
es
or
dec
fdivp
dec
movsb
mov
les
int
xor
jecxz,pn
mov
dec
adc
outsl
mov
mov
dec
in
scas
sub
icebp
sbb
arpl
in
daa
inc
sub
cmpsb
push
loope
lods
in
stos
in
je
test
xor
cmp
or
fs
sub
cmp
in
filds
cmp
jbe
add
scas
lea
jmp
stc
dec
inc
xor
mov
sub
xchg
sarl
or
inc
imul
pop
lods
add
icebp
inc
push
xor
in
jp
lcall
add
mov
adc
push
mov
add
inc
out
and
stc
add
les
movzbl
retw
movsb
add
mov
ret
mov
dec
adc
and
push
xchg
movsb
loope
jbe
jecxz
xchg
in
jbe
push
xchg
arpl
inc
jmp
push
arpl
and
mov
push
mov
loop
les
add
dec
add
and
out
push
cmp
hlt
xor
and
mov
imul
add
into
or
add
out
and
adcl
inc
xchg
icebp
in
pop
xchg
shrl
rcll
in
add
clc
hlt
out
push
call
rorl
negl
xor
adc
in
xchg
mov
jg
push
mov
hlt
push
insb
fcoml
push
inc
out
and
and
test
xor
cltd
jo
sub
sub
push
test
data16
sbb
dec
inc
ret
aad
xchg
dec
pop
xor
jle
jno
and
mov
cmc
cmpsb
dec
inc
pop
inc
je
adc
inc
aad
cmp
fs
jae
jecxz
je
sahf
mov
fldenv
adc
sub
popa
gs
test
daa
push
lods
jo
mov
test
inc
add
lods
inc
in
mov
aam
lods
jo
les
jno
pop
cmp
arpl
rcrl
cwtl
jmp
push
inc
movsl
sub
xchg
mov
fbld
xor
pop
sbb
enter
add
mov
ret
jbe
or
inc
mov
pop
js
leave
cltd
xor
sbb
dec
ja
mov
sbb
cwtl
aam
test
sbbl
sub
aad
mov
cmpsb
hlt
out
enter
les
dec
cmc
shl
arpl
loope
xor
iret
dec
lds
lds
sub
dec
test
jmp
les
adc
test
test
add
fwait
xchg
mov
add
push
and
idivl
mov
cmpl
dec
in
xchg
ret
fs
aam
or
adc
xor
add
mov
sti
int3
in
into
movsl
lcall
les
aad
dec
push
mov
lods
xchg
repz
mov
dec
xchg
mov
vpcmpgtb
or
rol
test
test
arpl
hlt
jb
fisttpl
icebp
inc
add
hlt
xchg
in
inc
pop
mov
repz
mov
xor
js
push
orb
ret
add
push
ss
mov
fwait
in
popf
lret
xchg
xchg
xchg
jbe
js
test
ja
movsb
mov
int
leave
adc
rol
xchg
lcall
lcall
xchg
test
xchg
push
fisttps
mov
into
inc
cmp
mov
and
cld
adc
int
dec
inc
pushf
andl
add
lea
aaa
insb
or
add
into
inc
cmc
mov
enter
xchg
sbb
inc
mov
sbb
test
sub
push
test
sbb
test
sub
insb
add
xchg
inc
adc
inc
cmp
loop
mov
in
pusha
mov
mov
or
push
or
pop
dec
or
andb
out
test
jnp
out
fadd
pop
adc
imul
pushf
aam
dec
ret
and
hlt
addl
andl
push
call
mov
add
scas
adc
or
loope
sub
into
stos
lret
jbe
jae
push
stos
fnstenv
jbe
iret
jg
rcrb
sub
mov
add
or
add
stos
fnstenv
sbb
xor
stos
insb
dec
lcall
enter
aad
sub
cmpsl
mov
mov
inc
aam
and
inc
int
incb
fidivrl
icebp
jmp
inc
adc
inc
mov
pushf
notb
into
loope
repz
lret
mov
ret
data16
xchg
repnz
jb
adc
cmp
jl
xor
cmpsl
push
cwtl
jg
call
in
add
test
or
loope
dec
orb
dec
test
test
mov
dec
aas
sub
add
test
pop
pop
insl
inc
mov
loope
icebp
cltd
rcll
dec
idivb
rcrl
jmp
push
mov
sbb
aam
dec
insl
rep
xchg
mov
push
arpl
ret
stc
sbb
adc
bnd
imul
sub
add
xchg
in
mov
shll
lds
es
push
addl
pop
dec
push
mov
xrelease
sarl
xchg
or
jg
fldenv
roll
inc
in
push
pop
dec
add
push
test
out
lea
and
inc
push
inc
mov
adcl
addr16
lret
push
mov
mov
or
inc
adc
imul
lcall
repz
jae
movb
pop
mov
int3
fnstcw
adc
ret
movsb
in
sbbl
inc
or
dec
pop
insl
sti
ret
xchg
mov
test
adc
add
aaa
xor
enter
inc
pop
inc
lahf
cmp
adc
inc
clc
inc
inc
jle
inc
pop
jno
rol
scas
xchg
or
jnp
je
dec
xchg
xor
mov
and
push
test
ljmp
popf
aam
jae
push
inc
test
testl
mov
subb
or
xor
hlt
jae
mov
pop
int
fsts
mov
add
mov
jecxz
je
rol
int
je
daa
inc
mov
repnz
test
in
sarb
xchg
into
add
xchg
push
cmp
cmp
dec
repz
xchg
cmpl
or
mov
int3
jp
or
test
push
push
push
and
xchg
inc
incb
xorb
adc
add
inc
inc
inc
out
dec
inc
fdivrl
xchg
cli
pop
loope
les
inc
xchg
inc
in
jae
mov
loop
mov
inc
add
lock
ror
xor
lcall
inc
inc
push
adc
xchg
sub
ret
imul
fsubrl
roll
push
mov
jp
add
cmpb
add
mov
adc
lock
inc
lret
and
mov
insb
mov
inc
arpl
inc
test
xchg
pop
mov
test
mov
jbe
loope
and
lahf
add
cmp
cwtl
and
add
add
dec
aam
add
mov
or
jae
and
dec
leave
or
test
lret
pminub
dec
push
or
test
pop
add
shl
add
fldenv
sub
andb
dec
sti
adcb
ret
and
and
inc
xchg
push
xor
pop
inc
shrl
mov
repnz
jbe
adc
shl
and
push
and
dec
adc
adc
outsb
in
mov
sub
js
adc
mov
into
inc
mov
cmc
add
inc
lahf
mov
orb
jecxz
dec
repz
sahf
fs
loope
shl
push
inc
div
sarl
jns
shll
xor
mov
mov
cmp
les
adc
push
push
xchg
je
xor
mov
xor
stos
sub
pop
jp
xor
sub
bound
fdivl
lret
cs
mov
jae
cmc
sub
xor
jae
in
lds
out
in
pop
inc
dec
ret
jp
and
or
jae
lods
and
push
lcall
or
cmc
je
nop
adc
test
enter
inc
roll
imul
jg
test
cmpsl
movsb
insb
mov
inc
lret
fs
ficoml
rclb
test
mov
sar
je
jle
sub
sub
les
jo
lds
jp
and
insb
inc
repnz
int
push
inc
mov
iret
addr16
pop
xor
cmp
imul
inc
insb
outsl
lret
int3
test
lret
mov
or
add
dec
daa
clc
icebp
frstor
cmp
out
leave
or
test
lret
xchg
sub
adc
dec
add
push
pusha
icebp
sub
push
dec
xchg
cmpsl
xchg
cwtl
std
lcall
sbb
jmp
xchg
bound
xchg
lret
inc
lds
rolb
or
fstps
shll
sub
arpl
in
lcall
xchg
mov
fists
cmc
jbe
mov
repz
les
push
dec
into
or
ret
movsl
dec
sti
mov
out
repz
ret
mov
pop
arpl
jbe
xchg
or
scas
daa
ja
push
or
stos
dec
jae
mov
lods
push
lret
sub
push
out
xchg
lods
les
cld
into
cs
push
xchg
or
jbe
lret
in
in
jo
fisttps
mov
cwtl
aad
dec
cmp
xor
movsb
cmpsl
icebp
mov
gs
mov
pushf
inc
sub
push
aas
or
xchg
inc
adc
or
cld
dec
mov
jg
jae
sub
shrb
cld
jnp
push
bound
jl
push
pusha
push
mov
lods
in
ss
push
xchg
lods
xchg
outsb
arpl
mov
dec
push
mov
pushf
jecxz
mov
cmp
add
dec
sub
mov
icebp
adc
and
push
test
pop
push
or
enter
adc
dec
outsb
ret
dec
ret
sub
adc
fwait
or
ljmp
test
mov
popf
lret
shll
leave
push
jg
pushw
ret
je
and
inc
fcom
adc
pop
test
and
arpl
and
mov
dec
dec
push
bound
mov
xchg
loope
xor
test
xor
mov
and
inc
xlat
ja
inc
or
jg
cld
inc
popa
cmovl
lds
dec
adc
mov
cs
xchg
inc
loope
push
shl
roll
inc
lods
in
mov
imul
adc
mov
or
insl
mov
rcl
pop
repz
adc
adc
fs
mov
pop
ret
imul
add
repz
addr16
pop
ds
inc
leave
mov
jecxz
pop
inc
test
test
mov
xchg
aas
popa
mov
inc
stos
xchg
add
push
inc
cltd
out
jnp
xchg
cmc
cmp
int3
icebp
in
cmc
or
xchg
or
sbb
ret
add
jae
nop
push
fstpt
pop
xor
cmp
pop
dec
fs
fwait
jae
or
test
jecxz
into
adc
or
mov
inc
adc
shlb
rorl
mov
in
loopnew
inc
cmpsl
or
and
push
mov
mov
add
xor
cmpsb
adc
xchg
adc
test
hlt
inc
jnp
out
pop
aas
ret
outsl
mov
paddq
inc
mov
add
pop
mov
add
fdivl
adc
pop
add
andl
or
lahf
pop
les
stos
jmp
ret
jb
mov
or
jle
adc
addl
push
mov
sbb
es
push
sbb
rcll
xchg
in
aam
movsb
xor
test
xchg
sbb
sub
cwtl
aam
sub
sub
dec
dec
jae
arpl
mov
push
sbb
sbb
enter
or
rol
addb
pop
pop
sbb
xor
mov
jns
push
movsb
and
in
int
xor
push
rcrl
or
inc
dec
mov
and
mov
iret
lods
jg
inc
in
or
mov
je
aas
xlat
inc
xor
dec
mov
pop
cld
inc
xchg
dec
xchg
or
cmp
add
fldt
mov
push
jae
pop
add
cld
dec
mov
leave
int
idivb
leave
mov
movl
mov
add
dec
inc
mov
push
mov
je
sbb
test
pushf
xor
mov
ds
xor
jno
add
push
es
loop
outsl
pop
jae
add
scas
test
mov
pop
pop
or
arpl
xchg
lds
pop
iret
xchg
icebp
int3
or
adc
shll
adc
cmp
add
ja
in
add
xor
push
imul
addr16
js
add
pop
mov
mov
mov
lds
push
xor
sahf
push
add
add
xor
and
daa
mov
cld
ret
popa
into
mov
insb
test
out
adc
cmc
sub
lea
inc
jo
mov
dec
push
pop
dec
icebp
mov
jp
and
shr
pop
mov
or
aad
or
fiadds
inc
iret
out
adc
cld
inc
inc
jns
or
mov
jmp
bound
mov
sub
push
aam
test
dec
push
sub
jmp
addb
fwait
sub
fucom
cmp
dec
or
push
mov
xor
mov
jecxz
adc
add
lret
cmp
xlat
dec
mov
or
lods
sbb
test
mov
out
bound
sbb
dec
inc
pop
mov
addl
test
inc
jne
xchg
pop
out
jo
inc
pop
add
mov
pop
mov
rol
inc
repnz
adc
inc
mov
xor
nop
cmpsb
mov
aad
in
movsb
fsubrs
sti
pushf
sub
xchg
fbstp
or
xchg
out
inc
outsb
mov
push
imul
lds
pushf
lea
adc
lods
ret
adc
int3
incb
bound
adc
hlt
adc
mov
dec
inc
sahf
je
sub
inc
adc
adc
xchg
push
or
or
cmpsb
and
test
loopne
mov
dec
leave
icebp
inc
and
xchg
add
sub
fcmovnb
stos
push
dec
add
mov
lods
or
xchg
loope
jl
test
test
leave
xchg
dec
push
pop
sbb
xchg
mov
cmpsl
xchg
lahf
mov
xchg
and
call
jecxz
dec
lds
call
cld
and
mov
or
push
sub
or
sub
and
insl
lcall
std
jno
out
push
and
cld
rcrl
mov
sub
stc
dec
jecxz
rol
sub
stc
fsubrs
fcomp
nop
pop
inc
dec
cli
in
js
popa
mov
lods
push
mov
jbe
scas
mov
xchg
fldl
mov
inc
mov
pop
popa
shll
repz
mov
add
xchg
gs
jne
shrl
xchg
les
in
inc
mov
xchg
movsl
rol
inc
xchg
lret
cmp
bound
pop
les
ja
cmpsb
cmpsl
in
or
cmp
push
shrl
rclb
fucom
add
gs
add
push
leave
xadd
push
leave
mov
jns
inc
sbb
xchg
les
fs
call
lds
cmpsl
inc
popa
das
lret
dec
xchg
int3
iret
mov
js
aas
inc
sbb
push
andl
js
pop
int
jecxz
fucom
mov
push
inc
dec
mov
ret
test
mov
in
movsl
inc
xchg
mov
in
jl
push
cmp
cmp
in
jle
sub
mov
pushf
push
inc
out
adc
in
mov
rcll
cltd
push
outsb
and
jo
jl
cmc
dec
push
jae
adcl
call
test
es
rcrl
shr
jmp
int3
pushf
xorl
sub
dec
in
or
mov
aad
or
ret
xchg
jae
mov
sbb
mov
cs
push
mov
inc
roll
gs
cmpsl
or
shll
loopne
push
mov
add
idivl
jae
fimull
or
rcrl
add
daa
push
mov
int3
inc
add
add
add
adc
add
subl
and
add
cmp
orb
xor
or
outsl
adc
cwtl
add
push
jno
xchg
ret
push
inc
and
mov
mov
sub
or
xor
inc
mov
jae
pop
test
loopne
xchg
lds
cmp
add
mov
cltd
inc
sbb
adc
xor
ret
fisttpl
xchg
mov
int3
inc
movsb
je
and
sub
cmp
ret
add
jne
dec
in
jo
addr16
jbe
enter
loop
jecxz
aad
jae
xchg
xor
mov
push
dec
fcompl
int
push
test
rcll
addr16
jae
lock
fs
mov
adc
mov
insb
adc
movsl
mov
mov
cmp
lds
or
repnz
or
lcall
cmpsl
pop
dec
sbb
xchg
in
bound
cmpsl
xchg
push
pop
mov
dec
mov
sub
dec
insb
mov
int
jne
xchg
dec
ds
mov
inc
in
jb
les
movsl
xchg
dec
or
inc
cmp
mov
push
in
inc
cmc
je
and
shll
sub
xchg
push
mov
cli
pop
mov
add
push
into
fists
lea
lret
pop
and
fbstp
or
xchg
or
aad
lds
inc
cmp
jp
shll
ret
jae
insb
pushw
push
mov
mov
hlt
es
mov
roll
lods
int3
cld
push
std
or
push
jp
cwtl
jge
out
ret
or
cmpsl
push
pushf
cli
mov
dec
mov
add
add
or
sbb
mov
dec
fistl
addr16
outsl
inc
adc
push
inc
lds
push
jg
cmp
lock
mov
and
pop
dec
in
mov
fstp
xchg
add
ret
aad
mov
ljmp
sti
lea
add
pop
mov
jge
lret
cmp
push
es
call
add
scas
pop
rcll
repnz
dec
insb
sub
adc
cmpsl
ret
inc
lea
adc
sub
push
pusha
mov
and
push
mov
add
addr16
testb
stos
dec
outsb
or
inc
enter
pop
sbb
jne
or
sub
stos
push
sub
or
xlat
mov
test
dec
in
repnz
mov
imul
push
dec
add
pushf
leave
test
adc
arpl
xchg
xor
jle
sub
rcll
inc
jno
movsb
push
in
push
or
pop
sbb
push
push
mov
lds
nop
ret
cwtl
insb
sbb
mov
adc
inc
cld
or
sahf
test
icebp
fisttps
in
adc
movsb
sarb
add
jbe
shrb
aaa
xor
shl
jns
mov
pop
xchg
into
mov
outsb
mov
lahf
push
inc
jle
xor
xchg
xchg
inc
aad
ds
lret
jle
sbb
cmp
enter
out
push
addl
imulb
xchg
arpl
inc
inc
ret
ja
insb
pop
lcall
mov
or
inc
jnp
adc
dec
leave
xchg
adc
outsb
notl
mov
mov
dec
push
cmp
gs
rolb
in
stos
adc
pop
ret
mov
and
shl
inc
jb
inc
cld
stos
push
inc
push
dec
es
jp
mov
mov
lods
jecxz
inc
int3
adc
mov
ret
in
cs
cmpsb
mov
ret
xor
adc
call
test
ror
out
aam
inc
cmpsb
mov
mov
shll
inc
repz
pusha
aaa
sbb
je
stos
sub
jmp
push
sbb
les
shlb
pop
jmp
push
addr16
inc
sub
es
dec
push
and
scas
hlt
out
pop
xlat
inc
dec
lds
jg
cld
lret
imul
adc
push
ret
lods
movsl
inc
sub
cltd
repz
xchg
int
imul
leave
cmp
iret
out
testb
jp
push
fcmove
mov
rorb
arpl
add
pushf
jbe
push
ja
or
in
ret
mov
dec
ss
inc
negb
ss
fnsave
sahf
mov
push
ret
adc
add
jnp
pushf
mov
dec
dec
sub
sub
mov
sbb
fdivr
outsb
xchg
sub
fdiv
push
adc
ss
mov
add
add
lcall
and
adc
xchg
les
inc
xchg
or
adcl
fisttpl
push
clc
push
xor
xor
iret
mov
scas
xor
jno
jne
pop
enter
test
cld
fadd
inc
popf
icebp
stos
es
inc
mov
cmpsl
int3
out
pop
or
push
pop
in
push
sti
or
xor
push
cwtl
or
mov
dec
mov
inc
lret
test
pusha
and
add
scas
loope
lods
xchg
mov
inc
sbb
in
ret
dec
and
or
jo
adc
in
loopne
sbb
sub
sarb
lahf
pop
push
fidivrl
jmp
adc
sar
sub
jg
or
dec
mov
xchg
test
or
mov
inc
xor
cmpsl
arpl
into
jo
fsubp
inc
inc
or
mov
mov
outsb
inc
js
adc
leave
xchg
mov
lret
mov
cmp
ret
dec
xchg
jb
mov
dec
lock
lret
jge
add
mov
push
pop
sbb
rolb
xor
lds
ret
fistpll
call
aam
fs
fiadds
xlat
das
mov
cld
iret
arpl
push
mov
jnp
out
pop
lds
shll
ss
int
vcvttps2dq
inc
inc
adcb
adc
test
pop
mov
imul
ss
fld1
rolb
mov
push
xchg
add
mov
outsl
dec
mov
not
decl
adc
mov
fisubrs
push
sub
fsubp
test
jbe
pop
and
hlt
jl
rorb
push
mov
push
mov
dec
cmp
in
dec
scas
jne
dec
subl
mov
repz
in
cmp
jp
mov
fs
hlt
les
xchg
xor
mov
out
stc
in
sub
pop
fbld
add
jge
cld
mov
push
inc
xchg
inc
push
les
mov
add
push
adcl
mov
mov
dec
scas
hlt
test
push
aad
jae
or
or
add
jmp
inc
int
mov
dec
mov
movsl
push
dec
adc
lods
jae
mov
fildll
cmpsl
imul
insb
mov
mov
xor
ss
jge
fnstcw
or
and
cmp
push
movsb
pop
int3
xlat
add
mov
js
inc
call
mov
xchg
xor
icebp
xor
ret
add
rcll
xchg
pusha
dec
add
inc
xchg
and
fdivrp
xchg
int
rcl
insb
cmp
int3
les
fs
xchg
push
les
pusha
mov
imul
rol
mov
add
xor
mov
sub
rolb
xor
ret
int3
or
ret
dec
test
push
xor
xchg
pop
mov
nop
jecxz
or
mov
jecxz
mov
or
movsb
out
cmp
test
mov
dec
ja
in
push
inc
xorb
add
test
adc
into
push
mov
sbb
js
pushf
das
mov
subb
das
sbb
push
inc
sbb
sbb
test
pop
pop
test
addb
push
mov
into
add
inc
xchg
xor
xchg
add
adc
inc
test
jae
sub
push
xor
pop
and
mov
mov
rorl
xchg
daa
je
out
movsl
dec
sub
aad
lcall
push
mov
leave
mov
test
aaa
pop
int
sbb
lret
inc
or
or
ss
sti
loopne
dec
mov
fcom
pop
mov
sub
inc
push
cld
loope
aad
cmp
mov
movsl
sub
icebp
fists
imulb
shl
ret
std
mov
lret
mov
jae
mov
sub
pop
sbb
repz
mov
fcoms
rol
les
xchg
or
pop
sti
aad
inc
push
cmp
les
adc
dec
pop
mov
fstl
subl
push
lahf
int
cmp
fwait
sub
dec
sbb
mov
cli
test
jb
push
roll
push
jno
jle
cmc
vpaddsw
cmc
aam
in
daa
ret
pop
xchg
shl
fistpl
cwtl
adc
jmp
inc
jle
pop
inc
adc
lods
ror
rclb
jae
lret
arpl
xchg
sbb
add
sub
js
fildl
mov
pop
jg
shl
or
lret
add
popl
inc
xor
cmp
pop
inc
adc
mov
movsb
aas
mov
jno
pop
adc
aas
nop
sarl
fidivrl
test
repz
sbb
sub
dec
js
inc
rorb
fisttpll
dec
and
push
mov
or
jno
test
aad
dec
adc
add
test
fidivl
rorl
pop
inc
dec
xchg
dec
mov
addr16
inc
xchg
aas
jecxz
inc
aad
dec
mov
cmpsl
mov
enter
xor
roll
dec
in
push
adc
popl
ss
and
mov
out
inc
lret
shrb
cs
cli
addr16
cmp
pop
xchg
repz
mov
iret
mov
hlt
js
sbb
xor
inc
add
inc
rorl
sbb
jp
push
dec
xlat
jmp
mov
or
mov
stc
movsb
and
jmp
bound
inc
fucomi
xchg
sub
sbbl
test
xchg
jmp
test
sbb
sub
ja
mov
outsb
scas
into
fadd
mov
ds
je
arpl
ret
roll
xchg
dec
push
adc
ljmp
lods
jo
hlt
test
push
scas
jne
mov
inc
icebp
dec
xlat
les
into
lods
add
rorb
inc
call
or
stc
push
repnz
cltd
adc
inc
inc
mov
add
xchg
dec
mulb
les
mov
shl
mov
pop
fcmovnb
test
or
cmpsl
in
xor
sbb
adc
dec
mov
insl
std
mov
mov
repz
js
fisttpll
rol
or
push
sbb
lods
and
lea
or
adc
jp
or
gs
mov
mov
xor
add
jae
cmp
mov
mov
or
fcoml
xor
and
enter
test
in
and
pop
mov
lret
push
ja
push
xchg
push
pop
les
sub
fldt
mov
add
pop
inc
fildl
inc
rcr
inc
shrl
and
cld
and
hlt
or
pushw
mov
push
inc
shrl
add
adc
loope
mov
cmc
pop
add
scas
inc
mov
mov
test
repnz
sbb
idivb
jno
xchg
or
ret
aas
inc
mov
lret
inc
faddl
aas
mov
lds
push
mov
int
fiadds
ss
add
and
dec
aas
add
pop
ret
inc
and
xchg
mov
jp
lcall
add
cmpsb
out
pop
orb
sarb
jg
lcall
into
dec
dec
sub
add
fists
adc
arpl
in
lcall
sub
les
in
xchg
aad
sub
in
shlb
xchg
jp
scas
cmp
push
sub
dec
inc
or
lds
testb
or
test
sub
and
cmp
or
push
pop
add
mov
icebp
lcall
aad
pop
pop
sub
jmp
iret
shl
aas
out
and
or
ss
rorl
adc
cs
arpl
sar
add
leave
sarb
stos
leave
aaa
mov
inc
cmpsl
xchg
dec
out
outsb
inc
mov
jmp
xor
push
or
leave
push
jne
mov
lock
outsl
xchg
and
in
out
push
popf
mov
lret
sbb
addr16
xor
shrl
movsb
int3
sahf
jl
inc
shll
shrl
ljmp
jns
jnp
mov
jecxz
cmc
sbb
imull
add
dec
cmp
xor
jno
les
or
dec
ret
mov
mov
stos
int
or
mov
lret
sub
fsub
adc
pop
ss
pop
add
in
js
incl
cltd
xchg
movsl
es
mov
sub
sahf
aam
mov
fbld
lcall
int
inc
int3
add
mov
sbb
test
je
int
inc
mov
lret
aaa
cmp
or
jno
ret
and
pop
clc
aas
frstor
add
inc
cld
shr
repnz
mov
lret
cmpsl
rol
lea
inc
adc
test
incb
add
add
push
fiadds
test
ret
aam
or
add
jle
add
ds
xchg
sub
lea
sbb
xor
dec
stc
mov
add
jae
xor
jmp
rorb
sti
inc
add
stos
or
dec
add
xchg
aaa
out
jecxz
icebp
xchg
sub
adcl
stos
xor
xchg
inc
test
ffreep
adc
popf
gs
xchg
cmp
sub
iret
enter
inc
add
imul
lods
je
mov
mov
stc
xor
sub
sub
sbb
les
outsl
shrb
dec
loop
fisttpl
mov
enter
rcrb
and
in
inc
lods
push
add
inc
das
aam
test
or
mov
je
rcrb
mov
inc
test
adc
in
stc
pop
aaa
inc
add
jb
pop
sub
cmpsl
into
ds
xchg
test
xchg
stc
ret
fsts
movsl
add
mov
ja
mov
push
and
js
push
add
ret
inc
pop
add
ret
ss
pusha
cltd
xor
iret
shlb
mov
ljmp
mov
sub
ror
add
xchg
lods
cmp
cmpsl
push
jns
shr
mov
jae
xchg
push
push
push
add
sub
fmulp
cmp
js
mov
addl
jp
pop
push
in
aam
and
call
inc
jo
add
push
out
inc
call
stos
add
mov
jo
stos
add
test
jo
stos
add
xchg
aam
shrl
jo
stos
add
cmc
aam
xor
add
add
std
add
sbb
loop
sub
enter
mov
adc
gs
test
cmp
or
push
pop
and
adc
sbb
push
ljmp
movsl
cmp
addl
pop
sbb
in
arpl
test
and
jnp
shrl
mov
shrb
out
shll
sub
fcoml
jno
loope
adc
stos
adc
inc
sbb
push
stc
add
xchg
xchg
cli
mov
jecxz
mov
arpl
xchg
sbb
xchg
or
icebp
jae
inc
shlw
cmp
ret
sarb
push
jnp
and
adcl
add
in
push
xlat
lock
mov
xchg
call
cmp
andl
fildll
out
test
loope
int3
push
test
xchg
adc
pop
inc
push
fiaddl
std
loopne
iret
lret
mov
addr16
sub
leave
pop
jecxz
add
add
jge
loop
add
add
cmpsb
dec
ja
ret
in
dec
aas
outsb
gs
loopne
push
loopne
add
leave
out
cwtl
cmpsl
iret
cltd
cmpsb
in
or
shrl
es
jo
inc
sbb
js
nop
jecxz
inc
lret
cld
pop
cmp
sbb
jo
add
ret
or
pop
sub
pop
shr
lds
loop
sub
adc
add
inc
pop
out
jae
push
xchg
mov
aad
sti
jae
xchg
push
adc
cli
mov
mov
pushf
jecxz
int
mov
sbb
adc
movsl
pop
filds
adcl
or
in
mov
frstor
adc
cli
cmp
pop
add
rolb
mov
stos
sub
add
sbb
lahf
or
cmpsb
add
dec
add
cmc
and
js
inc
xor
push
add
dec
add
jns
xchg
roll
les
adc
xor
ss
mov
cmpb
sub
sub
mov
jne
and
fs
in
in
fwait
shll
jb
sbb
icebp
or
jmp
add
pop
mov
or
test
cwtl
push
xchg
loope
cmpb
mov
shrl
shlb
xchg
xor
push
pop
js
add
out
adc
loope
lret
lock
scas
ds
out
dec
mov
and
mov
nop
leave
ret
lret
cmp
mov
dec
int
xchg
xchg
cli
add
in
mov
xor
cmp
pushf
sub
stc
inc
add
orl
insb
cmc
shll
cmc
les
clc
leave
leave
std
insb
xchg
cmp
xchg
or
xchg
roll
pop
std
mov
mov
mov
out
or
or
pop
sub
xorl
jge
shlb
cmpsl
movsb
and
lcall
sbb
arpl
add
lds
js
loop
xchg
inc
jecxz
cmpsl
mov
std
lcall
mov
inc
sbb
jne
push
jmp
test
stc
shl
std
lods
inc
xlat
adc
in
les
rcrb
sti
dec
subb
aad
mov
ss
data16
in
loope
xchg
lods
int3
inc
inc
add
xchg
int
aas
push
pop
shll
pop
add
ret
or
movsl
adc
push
xor
xor
or
inc
dec
mov
lods
push
mov
jecxz
sub
rcll
xchg
rclb
jmp
push
into
sub
mov
aaa
aad
lds
add
dec
icebp
cmpsl
test
adc
xchg
pop
cmp
repnz
or
adc
sub
cmp
adc
adc
jno
sub
cmp
sahf
pop
cmpsb
stos
xor
hlt
ss
mov
jno
mov
mov
mov
add
jb
mov
in
push
push
or
dec
dec
leave
cmp
push
cmp
sarl
ror
mov
aas
fcmovb
ljmp
push
or
mov
mov
jecxz
cmp
jno
movb
xchg
xchg
es
jb
sbb
icebp
andb
pop
or
dec
dec
nop
movsl
fs
push
and
lds
rol
popa
ret
lods
mov
aam
loopne
arpl
inc
sahf
or
jno
in
inc
xchg
sub
lcall
out
pop
xor
in
fsubs
jg
add
scas
stos
cwtl
ss
xchg
cwtl
and
aad
sub
daa
fcmovnb
call
out
mov
and
call
add
addb
sarl
jne
ja
sub
stos
pop
inc
jno
jne
mov
lcall
push
ss
enter
fcomps
cmpsl
fidivs
mov
jp
pop
inc
movsl
lock
jecxz
out
jne
push
inc
dec
push
lods
mov
adc
pop
sbb
xor
es
mov
inc
dec
dec
cmpsl
adc
and
cmp
and
mov
xor
sbb
emms
out
mov
jp
push
sub
pop
pop
or
mov
cmpsl
addr16
jns
sub
and
xchg
xchg
imul
imul
fcos
mov
inc
in
ljmp
xchg
test
lea
pusha
cltd
or
mov
dec
lret
sub
mov
cmp
ds
lods
loopne
jge
sbb
in
enter
shrl
cmc
gs
pop
lods
mov
les
lds
cmp
mov
xchg
or
jmp
push
and
jno
out
mov
xchg
call
adc
fwait
mov
dec
repz
cmpsb
inc
in
dec
push
or
jecxz
popf
inc
movsl
outsl
or
fisttpll
lods
push
inc
mov
push
mov
lods
inc
enter
sbb
push
xor
push
test
test
in
add
xchg
je
pop
xchg
dec
cltd
cmpsl
movsb
loop
shll
and
mov
sti
dec
sub
sub
dec
mul
hlt
test
push
lock
loop
push
mov
mov
inc
dec
cmp
dec
rcr
mov
sub
out
repz
out
shrl
ret
push
jo
add
in
push
inc
addr16
gs
push
dec
ror
je
out
daa
push
cmpsb
xchg
pop
dec
mov
pop
or
cmp
jb
mov
dec
outsl
loop
push
jp
mov
arpl
mov
sub
xchg
jb
out
jae
leave
or
mov
dec
cmp
sbb
int
scas
mov
add
dec
mov
lds
rcrb
jle
in
ret
xor
sbb
jg
dec
shrb
sbb
dec
add
cmp
jnp
into
imul
xchg
insb
inc
jecxz
addr16
or
mov
push
mov
cmp
dec
int3
sub
popa
pop
test
mov
arpl
jmp
loope
repnz
pop
ss
loope
dec
push
leave
mov
addb
in
addl
popa
jbe
and
test
inc
int3
test
inc
add
xlat
int
roll
or
leave
test
add
aaa
arpl
ss
adc
cli
push
or
push
jecxz
sub
add
faddl
std
aad
xor
test
or
pusha
inc
ds
adc
imul
jno
jmp
inc
data16
or
outsl
outsb
sub
stos
ret
xchg
dec
mov
jle
mov
in
aam
loop
push
xor
mov
mov
lea
cmpsl
faddl
ret
cmp
xchg
inc
roll
add
call
sbb
sbb
sbb
xor
in
push
mulb
mov
rcll
sub
fcoml
mov
les
push
mov
stos
adc
cmp
repz
dec
popa
inc
mov
ss
inc
gs
adc
inc
dec
adc
int
test
cs
push
sub
add
inc
and
pop
adc
fstl
pushf
movsl
push
mov
pop
in
add
push
jno
je
fs
fldl
sub
sub
out
add
inc
or
stos
pusha
pop
loope
sbb
fcomp
fwait
cmp
std
inc
push
sti
imul
test
xchg
mov
bound
leave
mov
popf
pop
pop
lcall
je
jecxz
xchg
lret
clc
lcall
fidivrs
sbb
repz
sbb
inc
add
mov
out
inc
add
addl
shlb
cli
imul
sub
data16
push
inc
sbb
je
sub
sbb
pop
mov
test
out
mov
lretw
pop
shlb
je
in
xchg
xchg
sbbl
in
negl
xchg
pop
test
out
jbe
mov
add
sahf
pop
inc
in
jmp
js
adc
cmpsb
add
lds
lods
ret
cmp
leave
dec
cmp
ret
int
and
push
adc
leave
xchg
mov
test
lret
leave
add
xor
adc
inc
mov
mov
jecxz
out
pop
dec
adc
mov
gs
cs
into
xchg
hlt
add
push
jecxz
cmp
test
jns
loopne
daa
mov
sti
cli
dec
adc
aas
mov
mov
ja
clc
push
sub
out
hlt
pop
in
dec
fs
jmp
mov
add
xchg
push
jp
inc
lret
cld
testl
inc
les
mov
enter
fbld
dec
insb
push
add
or
push
mov
inc
jbe
repnz
or
xchg
int
ljmp
inc
sbb
imul
fcomps
or
or
dec
jae
dec
mov
lret
fs
aam
jle
stos
dec
mov
inc
or
mov
and
bound
or
pop
sub
pop
jl
xor
or
mov
stos
jecxz
int
xchg
mov
enter
xchg
xlat
mov
cwtl
dec
push
outsl
leave
or
jns
pusha
xor
dec
fxch
inc
adc
int
add
xorl
adc
out
pop
adc
ffree
add
jmp
scas
test
sbb
and
mov
gs
jbe
mov
mov
mov
cmpsl
pop
lds
stos
and
loope
test
icebp
leave
aad
loopne
lds
jmp
xor
lds
in
lods
mov
inc
lahf
ffreep
add
cld
shlb
dec
xchg
pop
out
mov
das
cmp
inc
movzwl
mov
cli
cmp
mov
push
popa
adc
fadd
and
fcmovnb
add
les
lock
cmpsl
inc
jecxz
xorl
inc
shr
sub
hlt
loope
push
addl
dec
test
cwtl
xchg
mov
movsl
jbe
dec
cwtl
ljmp
popa
add
or
inc
add
and
pop
lds
xor
xchg
icebp
daa
jecxz
push
out
adc
mov
cmp
mov
push
push
push
mov
push
and
lret
mov
movsl
int
out
pop
xchg
mov
popf
add
dec
or
push
mov
inc
add
pushf
enter
or
sbb
les
call
xchg
cmpsb
jl
test
out
gs
xchg
cld
insb
mov
ret
or
xchg
mov
mov
or
push
inc
jae
push
out
mov
sbb
push
jnp
xlat
inc
ret
add
cld
dec
add
enter
jnp
leave
ror
push
lock
cmovle
ret
into
or
push
iret
xlat
into
inc
in
out
inc
inc
or
jno
movl
push
aas
add
movsb
xchg
rorl
test
xor
mov
xchg
xchg
mov
add
sub
int3
stc
sbb
in
cmp
pop
inc
adc
mov
icebp
adc
xor
mov
push
test
sub
iret
pop
ret
add
push
test
iret
adc
pop
rorl
sahf
mov
mov
lahf
jl
push
lods
xchg
mov
push
mov
and
jge
lret
dec
aas
cmc
xchg
fs
or
mov
or
cwtl
adc
je
xchg
mov
test
cmp
mov
and
jp
call
inc
jae
stos
arpl
stc
dec
and
fcoml
rcl
sbb
jno
stos
fs
and
ljmp
cmp
imul
lods
popa
rclb
jmp
sti
leave
mov
ljmp
jno
or
sub
push
sti
xorb
dec
add
sahf
cmp
cmpsl
adc
dec
lds
data16
mov
daa
push
jp
push
pop
push
stc
mov
mov
or
push
push
test
mov
fnstcw
or
les
jnp
outsl
mov
js
xchg
lods
sahf
daa
fisubs
xchg
inc
and
cmpsb
or
push
in
mov
cmpsb
mov
pop
enter
ret
mov
jb
cmp
test
out
add
push
push
test
sbb
pop
mov
sbb
clc
in
movsl
lods
ret
mov
call
sbb
adc
sbb
add
pop
clc
mov
and
mov
orl
xchg
and
jae
fs
stos
and
mov
icebp
fdivrs
ret
mov
cli
lods
sbb
inc
addl
pop
xor
mov
fs
inc
xchg
movsb
push
fdivs
dec
adc
jle
dec
pop
pusha
sub
and
cmpsl
jecxz
sub
scas
jecxz
inc
push
and
sub
adc
xchg
lcall
lret
aad
push
in
inc
addl
adc
pushf
and
lds
fidivs
xor
aas
movsl
cmc
stos
out
inc
adc
loop
xor
outsb
cmp
push
jp
imul
xchg
push
insl
pop
iret
in
punpcklwd
daa
push
outsl
or
mov
pop
ja
inc
cmpsl
repnz
rorb
gs
inc
pop
jle
jp
sbb
or
dec
jnp
mov
shl
mov
cmp
pop
mov
lcall
jne
add
test
test
fldenv
xchg
les
jne
dec
lds
mov
add
add
inc
cmpsl
jg
add
cmp
loopne
dec
int3
test
adc
mov
mov
inc
jae
sub
jne
std
mov
and
add
aas
dec
adc
ret
pop
into
decl
adc
adc
push
aaa
gs
aaa
movb
inc
jns
fs
inc
int3
test
adc
icebp
loope
sarl
mov
and
cltd
cwtl
mov
xor
into
xchg
call
sar
adcl
inc
je
jae
add
loope
mov
inc
sbb
addr16
aas
ffree
xchg
mov
or
jae
stos
js
les
clc
rorb
dec
jo
sub
xlat
jne
loopne
ret
mov
in
loope
xchg
movsl
in
fistps
imul
addr16
adc
rcrl
add
lcall
lods
ja
cli
rcr
jbe
mov
xchg
xor
loope
pop
jp
and
enter
adc
inc
dec
xor
testb
mov
mov
inc
sub
loopne
push
pushf
mov
mov
aad
and
cmp
lds
and
fcmovne
mov
call
and
ret
pop
jge
mov
adc
xchg
mov
mov
mov
and
test
cmp
ljmp
add
push
sub
dec
mov
and
into
test
test
sti
mov
jno
inc
pop
in
mov
cmp
je
xchg
adc
popf
inc
jbe
dec
dec
inc
adc
pop
lcall
inc
mov
pop
xchg
and
mov
fwait
test
repz
ljmp
leave
xchg
loope
and
push
jae
fiaddl
jecxz
rcr
cmp
test
pop
dec
in
sbb
pop
add
lds
add
punpckhwd
or
jns
ret
add
cmovns
pop
push
lea
mov
mov
js
lret
fs
or
pop
lcall
xchg
sbb
test
mov
pop
lcall
mov
jl
pop
mov
ss
mov
test
daa
jecxz
adc
pop
jnp
incl
xrelease
outsl
xor
jb
ret
test
fwait
in
pop
call
lea
pop
and
enter
jecxz
roll
inc
xchg
into
mov
iret
push
fistpll
pop
clc
lret
xchg
enter
into
adc
shl
pop
sbb
pop
clc
xchg
add
xchg
cmpsl
dec
xor
in
push
int3
dec
ret
shrb
inc
adc
inc
jecxz
in
mov
jae
movsb
loope
xchg
mov
inc
or
daa
sbb
mov
add
pop
adc
loope
icebp
add
cltd
add
cmp
inc
cmc
fistps
cmc
int3
shrl
cmpl
or
pop
hlt
and
or
std
adc
out
int3
jecxz
xor
iret
mov
push
and
pop
ret
dec
dec
icebp
shll
lahf
ffree
mov
jecxz
int
xchg
or
loope
aaa
and
add
mov
jecxz
pop
pushf
xchg
js
sub
jmp
inc
loope
ret
cmp
sahf
imul
inc
inc
add
cltd
lret
enter
mov
dec
pop
dec
add
jl
or
fs
rcrb
cmpsl
jmp
out
xchg
inc
inc
jno
xchg
scas
mov
test
xorb
inc
je
inc
cmpsb
dec
inc
dec
cmp
add
sub
cld
call
fs
adc
int
pusha
addl
mov
pop
mov
pop
in
push
in
movsb
pop
fs
rorl
cltd
push
testb
loop
stc
and
mov
in
adc
mov
pop
cmpsl
in
xchg
inc
xchg
test
hlt
add
add
add
mov
inc
popa
pop
dec
jb
xor
or
nop
add
js
lds
out
test
enter
mov
lods
aam
aam
ror
cmc
push
xchg
inc
cwtl
inc
icebp
adc
push
xor
add
adc
mov
xor
loopne
or
stos
in
mov
lcall
js
scas
mov
idiv
mov
jbe
or
push
adc
lods
lds
test
ret
ds
adc
dec
and
dec
aam
cwtl
cmp
cmpsl
jbe
push
jo
dec
sbb
ss
bnd
inc
mov
js
mov
xchg
or
sub
fs
scas
lea
mov
mul
fadd
sbb
add
and
or
dec
dec
leave
leave
fstpt
lret
loopne
pop
dec
repnz
adc
mov
addl
inc
test
jne
jmp
and
and
test
inc
add
xlat
dec
push
inc
int3
icebp
mov
test
inc
sbb
bound
dec
mov
in
ret
push
cmp
cmp
imul
inc
mov
xchg
mov
test
inc
inc
lea
mov
add
cltd
add
dec
sub
jbe
mov
or
lahf
mov
dec
dec
in
inc
mov
mov
push
repnz
inc
das
testb
adc
and
bswap
in
test
inc
adc
shrl
push
add
out
mov
out
jb
mov
orb
pop
lcall
fsubp
push
pop
pop
repnz
test
inc
test
xor
pop
ss
ds
mov
jmp
xchg
jo
mov
int3
jp
into
pusha
mov
lods
in
shll
ljmp
sarl
inc
outsb
inc
leave
mov
lods
int
dec
int3
mov
cld
sub
out
jno
nop
fsubs
rcll
iret
int
jecxz
movsb
mov
push
mov
jl
pop
mov
ja
push
dec
imul
adc
cmp
mov
pop
mulb
test
pop
stc
dec
jne
jmp
test
add
adc
or
out
das
jecxz
push
add
fwait
das
hlt
daa
dec
push
scas
jg
add
les
mov
inc
adc
adcl
cmpsl
pop
int3
sbb
inc
mov
shll
jecxz
call
fs
cli
rorb
xchg
mov
movsb
pop
orb
fldt
xor
dec
xchg
out
arpl
or
in
dec
dec
cltd
in
and
in
push
test
dec
lds
dec
push
pop
arpl
ret
enter
adcl
push
cmp
mov
mov
xchg
clc
add
dec
aaa
sub
out
arpl
xchg
xchg
cmpsl
and
call
dec
test
inc
mov
inc
xchg
inc
xchg
sti
dec
push
jbe
inc
pop
ret
inc
aas
sub
insb
mov
pop
push
not
hlt
test
xor
int
inc
jnp
xchg
in
inc
sbb
mov
pop
xchg
in
push
ficoms
and
sti
mov
out
inc
mov
dec
pop
inc
pop
pushf
push
pop
pop
xor
and
mov
das
stos
push
repnz
ja
dec
add
mov
insb
ret
rorl
ret
or
inc
mov
mov
addr16
mov
lret
push
mov
cmc
inc
scas
fldenv
lock
fiaddl
test
in
mov
jo
dec
les
cmc
xor
stos
dec
mov
cmp
inc
mov
lcall
lret
fmuls
pop
jp
push
adc
fistpl
lret
add
mov
add
or
dec
int3
mov
xchg
mov
adc
outsb
cmp
sbb
sbb
adc
sub
inc
xchg
jmp
cmp
mov
loop
mov
xchg
pop
hlt
enter
rcll
inc
pushf
cmp
adc
in
mov
mov
mov
out
mov
and
sbb
push
push
mov
add
dec
push
jb
lret
inc
imul
cwtl
mov
pop
jbe
fists
pop
in
and
jno
in
pop
add
dec
pop
repnz
cltd
fs
ja
loope
add
fisttps
pushf
push
ja
xchg
arpl
ja
xor
xchg
adc
mov
das
sbb
mov
sbb
rcr
shll
xlat
cwtl
lock
es
push
rclw
jo
in
or
push
faddl
pop
jns
add
push
pop
addl
cmpsl
adc
jge
jmp
dec
and
fisubrs
xor
testb
arpl
sub
xchg
or
xor
cwtl
into
dec
cmp
fmul
jns
add
into
in
add
mov
pop
and
push
lds
sahf
fbstp
icebp
cmpsl
cltd
mov
jo
xchg
and
cli
xchg
jbe
sbb
jbe
add
aas
or
gs
movsl
fadds
add
push
fdivr
jae
leave
xchg
pop
xor
rcl
lcall
mov
sub
es
fs
cwtl
mov
mov
dec
dec
js
mov
sbbl
roll
fbstp
roll
movsb
lret
rclb
adc
jp
mov
lods
dec
orb
aad
mov
fcmovnb
lret
or
jbe
add
fsts
jge
lret
pop
test
xchg
and
xchg
or
fnstenv
out
arpl
jb
into
jns
rorl
xor
out
mov
pop
add
hlt
or
jb
inc
sub
adc
or
fsts
cmp
add
add
leave
icebp
add
repz
inc
repz
pushf
or
mov
inc
lds
or
decl
lret
or
int
test
add
jg
or
dec
xchg
fstl
lods
or
imul
sti
sbb
fnstenv
push
loope
cmp
les
rorb
jg
pusha
loope
add
inc
mov
int
mov
or
inc
inc
out
adc
or
cltd
rolb
add
decl
iret
add
mov
out
xchg
lret
sub
pop
push
mov
out
cli
jns
lcall
shlb
jg
lret
add
xlat
aad
add
dec
xor
sbb
sbb
inc
sbb
xchg
mov
inc
sbb
mov
add
push
repz
test
jmp
mov
movsl
push
adc
imul
lods
inc
pop
mov
enter
aad
sub
roll
push
orl
add
push
jmp
int
cmpsl
and
add
fisttpl
jp
mov
inc
stc
mov
je
inc
jbe
rcrb
adc
sub
ret
hlt
jae
pop
push
sahf
pop
pop
jne
outsl
pop
pushf
rcll
stos
or
stos
leave
pop
sbb
aas
adc
leave
pop
les
loop
push
scas
stos
lds
cs
mov
clc
add
fsubrl
and
test
fsubrl
inc
daa
inc
dec
in
push
arpl
xchg
mov
lock
int3
pushf
xchg
pop
push
icebp
cmp
push
cmc
into
andb
add
test
or
in
stos
mov
xchg
rcll
clc
xchg
cs
int
or
inc
pop
int
pop
xchg
cld
inc
add
push
push
xchg
leave
sub
mov
loope
add
push
popf
pop
fs
pushf
fldenv
mov
mul
rolb
jp
addr16
lods
adc
jae
fnstenv
xor
lcall
repnz
dec
xchg
jle
inc
daa
bound
mov
loop
mov
add
mov
mov
mov
ds
pop
mov
dec
mov
fcmovnu
insl
sbb
loope
in
xor
inc
xchg
dec
pop
inc
les
rclb
add
sbb
repnz
in
xchg
xchg
aad
pop
imul
jle
xchg
push
cmp
arpl
push
cmp
mov
leave
push
sbb
fwait
mov
jb
cmp
mov
jecxz
push
push
inc
sub
jns
daa
test
or
jbe
add
xor
add
sub
enter
aaa
ficoml
fistpll
mov
push
pusha
mov
lea
xchg
leave
push
outsb
jmp
add
decl
les
fstpt
inc
inc
pop
jno
hlt
test
in
pop
xchg
jns
jbe
sarl
xchg
dec
inc
xchg
mov
xchg
jecxz
loope
mov
xchg
add
aas
mov
mov
rorl
sub
test
jp
leave
cmp
jecxz
cmp
js
jmp
or
mov
xor
in
or
das
lds
jne
or
push
pushf
bound
or
movsb
into
fidivrs
inc
pop
mov
sub
decl
xchg
mov
add
aaa
add
mov
mov
xchg
adc
pop
add
xchg
or
ficompl
pop
and
add
mov
pop
sarl
dec
pusha
add
insb
jae
pop
fsubl
xor
shlb
in
je
sbb
repnz
aaa
sahf
push
in
aaa
ja
adc
rcl
xchg
cs
out
xchg
inc
sub
cmpsl
pop
add
lods
sbb
mov
iret
les
call
xlat
aam
fnstenv
mov
mov
shll
shll
ret
xor
add
jns
xchg
inc
jnp
and
sub
cld
xchg
jle
cmc
inc
jg
arpl
mov
cwtl
xchg
fidivs
jl
jnp
aad
xor
ret
imul
test
imul
dec
cmp
add
sbb
mov
nop
call
lods
jl
push
xor
stc
cwtl
mov
test
dec
addl
push
scas
xor
mov
mov
dec
pop
jmp
xor
dec
or
pop
ja
ds
mov
xchg
push
cmpsl
adc
leave
insb
cmp
inc
enter
sahf
loop
mov
mov
cvtdq2ps
loope
dec
fsubrl
fsubrl
lret
ss
addr16
xor
mov
and
mov
in
jo
sub
enter
jns
mov
xchg
mov
int
sbb
js
add
dec
mov
or
cli
jp
arpl
jge
mov
test
nop
ret
or
xchg
imul
or
mov
mov
sti
dec
jbe
aad
int
data16
mov
cmp
cmpsl
mov
pop
dec
mov
int3
push
push
iret
dec
addr16
xor
js
mov
jle
mov
add
mov
jo
mov
lea
xor
cmpsl
xor
loopne
dec
inc
clc
sub
movsb
xchg
fstl
pop
test
dec
cltd
fsubs
daa
cmp
aaa
inc
mov
psrlw
out
pop
jne
and
xchg
pop
lahf
test
cltd
movsb
loop
mov
xchg
ja
pop
cmpsl
add
lret
add
inc
sub
inc
icebp
pop
shll
ficoms
loopne
dec
out
iret
jl
and
mov
sti
nop
cs
cmp
push
cmpsw
lods
iret
and
add
jne
imul
or
push
out
adc
cwtl
add
fwait
push
ret
repz
es
push
in
mov
or
mov
xchg
or
push
leave
movl
test
cld
dec
leave
jb
cmp
mov
jmp
cli
loop
adc
mov
mov
out
inc
mov
aas
lret
add
ja
out
push
rorl
xchg
dec
pop
jp
mov
sub
xchg
sub
mov
loope
test
dec
ret
insb
inc
and
test
or
js
adc
add
mov
jle,pt
lret
cmpsb
ret
jb
js
pop
jp
jp
push
je
inc
add
sbb
dec
out
das
sub
outsb
lds
xchg
stos
ss
mov
add
adc
loope
add
xor
jns
xchg
hlt
out
inc
adc
sub
movsl
ss
jp
xlat
lods
lds
xor
arpl
out
pop
pop
push
inc
inc
lahf
lea
sbb
xlat
enter
push
imul
fimull
dec
push
jns
jp
jnp
out
jb
mov
test
sbb
cld
mov
dec
push
sbb
cmp
ret
shl
pop
lds
jns
add
aam
inc
mov
sti
into
pushf
mov
push
push
dec
inc
leave
loope
cmc
in
filds
mov
or
in
jnp
or
xlat
adc
push
mov
inc
ror
cmp
xor
incb
dec
das
inc
push
push
lds
dec
into
scas
dec
adc
test
sub
push
sbb
mov
test
or
test
pop
in
adc
xchg
pop
pusha
add
cmpsb
ret
push
pop
clc
scas
mov
mov
adc
dec
enter
adc
lcall
mov
or
sti
mov
dec
loop
lods
pop
xor
xchg
or
test
mov
pushf
sbb
push
jp
test
push
ss
dec
dec
ret
test
pop
mov
out
xorl
or
mov
out
out
sarb
cmpsb
rclb
in
xor
inc
cs
dec
hlt
mov
adcb
or
sti
pop
mov
or
jo
push
lahf
addr16
xchg
dec
mov
xchg
sub
mov
fnstsw
fistl
inc
push
pop
add
cmpsl
mov
jmp
xor
std
in
test
insl
jmp
mov
cmovl
jg
jg
mov
nop
mov
out
cmp
aad
adc
out
sahf
sub
aaa
dec
xchg
xlat
jecxz
or
sbb
or
pop
or
fs
fs
cmc
adc
pop
lcall
mov
jae
mov
adc
ficoml
sbb
je
pop
jno
fldcw
daa
jmp
push
test
addr16
in
rorb
cmp
xchg
sub
jmp
in
mov
call
aas
sbb
lds
outsl
test
pop
sbb
sarl
enter
pop
fsts
mov
mov
cmpsl
mov
pop
mov
dec
into
mov
cmpsb
sub
jmp
repnz
ja
dec
daa
mov
fists
inc
xchg
lahf
sbb
inc
jae
dec
mov
cmpb
nop
fnsetpm(287
xchg
fcmovne
rol
ret
movsl
in
jb
fnsave
mov
adc
sahf
xor
xchg
inc
mov
lods
dec
js
gs
xchg
pop
in
mov
fst
pop
push
mov
mov
ja
int3
out
pop
jmp
enter
or
je
mov
mov
shrl
outsb
mov
fstps
mov
sbb
push
roll
movsl
es
dec
mov
sub
shll
lods
repz
repz
lds
mov
mov
pop
mov
cmp
push
repnz
mov
xchg
outsb
ret
icebp
mov
adc
imul
push
and
pop
mov
xor
push
int
arpl
adc
mov
leave
je
push
add
test
push
jne
fs
mov
call
mov
mov
aas
mov
inc
jae
cmpsl
mov
lcall
ret
sub
mov
lock
int
shll
push
into
outsb
loop
sub
push
ret
cld
pop
lret
fildl
shrl
in
cmp
fcmovu
ss
inc
pop
outsb
lret
inc
sub
clc
xlat
add
int
int
shr
pop
lods
cmpsl
mov
fsubrp
dec
jp
push
mov
call
nop
movl
jbe
add
push
cmc
inc
mov
stos
or
jbe
add
cltd
clc
cmp
xor
lods
cmp
inc
pop
insl
push
test
mov
inc
sub
or
jo
mov
and
push
push
mov
xchg
test
add
mov
inc
xchg
mov
pop
push
jns
out
xchg
jmp
popf
push
aaa
clc
add
xchg
bound
cmpsb
inc
subl
pop
and
add
or
out
rolb
mov
roll
dec
sbb
sahf
vpunpckhbw
fsubrl
decb
shrb
push
shll
inc
or
aad
test
xor
hlt
icebp
incb
xchg
fs
jp
xchg
daa
push
mov
movsl
es
dec
fisubs
cmp
mov
inc
pop
int
into
mov
fisttpl
cmp
filds
xor
or
jg
xor
inc
pop
imul
aas
ds
ficomps
aas
pop
je
adc
mov
mov
jmp
add
cmp
add
xor
stos
lret
dec
mov
jns
hlt
mov
insb
xchg
mov
daa
inc
adc
mov
loope
mov
lods
int
pop
popl
jl
xor
xor
add
sbb
jno
imul
jmp
pop
hlt
test
cld
hlt
repz
outsl
dec
mov
adc
inc
inc
hlt
adcb
dec
xchg
roll
push
xor
jg
ficoms
adc
xor
push
jno
add
push
mov
xor
add
mov
add
or
xchg
into
or
aaa
dec
sub
or
push
push
mov
jo
jecxz
xchg
inc
lods
arpl
mov
xchg
adc
cli
pushl
mov
add
mov
mov
orl
sbb
jmp
cmpsb
movsl
ror
or
int3
repz
push
lods
rorl
push
lock
fbstp
mov
insb
jp
repnz
mov
into
xchg
xor
daa
sub
push
jno
lret
inc
call
fs
jle
or
pop
mov
lss
jnp
mov
push
dec
sub
sbb
movsb
clc
inc
fcoms
sub
add
xchg
test
push
dec
cmpsl
inc
xchg
push
fs
lds
icebp
jmp
adcl
out
or
in
xchg
or
jae
cmpsb
and
dec
pop
inc
add
loopne
or
mov
pop
sub
xchg
outsb
pusha
jg
or
or
fndisi(8087
fbld
cld
xchg
or
add
lss
xor
aam
cmpsb
into
xor
lds
daa
in
dec
add
repz
js
pushf
ret
ficoms
xor
cwtl
ret
movsb
xlat
cwtl
mov
cmp
dec
popa
jo
cmc
sbb
outsb
lods
out
cmpsl
add
shr
pop
adc
test
sub
jecxz
andb
jmp
mov
pop
ret
dec
jmp
inc
cmpsb
mov
adc
adc
dec
mov
inc
pop
jnp
ret
xor
and
jg
jne
xchg
cwtl
mov
mov
pop
jecxz
jl
xlat
sub
pop
les
dec
insb
test
outsb
mov
test
inc
lret
jge
add
insb
shll
push
ret
inc
xor
mov
loop
aad
jg
ficomps
cmpsl
jns
fimuls
mov
filds
sub
sbb
inc
push
inc
fistl
adc
daa
movsw
test
stc
ret
in
cld
insb
xchg
rorl
inc
lds
mov
jle
add
xchg
cmp
call
inc
mov
test
cltd
repz
pop
lock
mov
dec
xor
mov
mov
jns
mov
sub
and
movl
sub
dec
loope
cs
cmpsb
lea
jecxz
fisubs
xchg
fstpl
lock
xchg
jno
fadds
js
or
int
and
push
cmp
orl
dec
xchg
mov
pop
arpl
cmpsl
pop
and
movsb
mov
xchg
xchg
lea
loopne
shl
fdivrs
test
andb
mov
rep
and
mov
ret
pop
jp
lret
adc
and
pop
inc
movsl
xor
pop
jmp
movsl
xchg
xchg
xchg
mov
test
daa
cmp
sahf
mov
xchg
jae
push
or
aaa
jo
aad
ret
imul
addr16
add
dec
ret
pop
mov
inc
movsl
xchg
pusha
out
daa
push
cmpsl
les
mov
shll
in
pop
lock
pop
test
es
stos
pusha
repnz
mov
cli
lds
cmpsb
shrl
xchg
and
mov
int
orl
push
ret
loop
add
mov
les
frstor
outsl
in
jno
stc
cmp
inc
jecxz
mov
cmc
or
dec
xlat
enter
xchg
inc
cmp
lds
mov
ret
and
mov
shlb
and
faddl
je
jbe
sbb
dec
mov
dec
xor
and
std
ret
stos
mov
loopne
mov
mov
inc
addl
sbb
shll
jg
dec
and
sbb
push
cmc
mov
loope
rcrb
test
leave
imull
inc
add
stos
jmp
popa
rcrl
lahf
pop
ss
mov
xchg
xchg
pop
or
lock
lds
cs
mov
inc
pop
pop
add
jmp
and
mov
mov
push
fs
mov
or
repnz
dec
in
jmp
inc
icebp
out
sub
stos
mulb
xor
roll
out
xor
icebp
lods
mov
popf
cmpsb
jl
cmp
insb
dec
rclb
xor
sarb
or
jge
jb
repnz
mov
inc
shlb
xlat
fs
mov
and
mov
inc
mov
cmp
lds
inc
dec
xchg
cwtl
push
mov
push
add
fildl
mov
int
or
ficoms
and
test
dec
or
dec
dec
dec
inc
mov
aaa
pop
mov
jns
cmc
or
jne
and
mov
xlat
or
pop
and
lcall
mov
js
scas
mov
repz
xchg
inc
sbb
clc
fmul
incb
dec
lret
repz
jmp
dec
sub
ja
mov
rorl
cld
pusha
push
ret
je
shll
lret
xor
mov
jmp
dec
cmp
push
xlat
xchg
fs
pop
push
or
adc
outsl
and
jae
call
dec
jle
ror
daa
xchg
sbb
aam
inc
jecxz
mov
test
xchg
push
xor
xchg
rolb
nop
cmpsb
add
cltd
icebp
arpl
and
xchg
lods
shll
leave
cmpsl
sti
leave
cmp
aam
mov
movsl
push
ss
test
test
dec
dec
cmp
cmp
in
xorl
loope
mov
jne
leave
mov
inc
inc
and
push
dec
xor
dec
in
loope
lahf
or
push
pop
mov
jbe
test
repnz
and
in
ret
add
cmp
mov
test
shrb
subl
rorl
movb
out
add
inc
mov
inc
add
sub
or
arpl
inc
fldl
imul
jae
pop
imul
mov
or
or
shll
dec
in
fs
xlat
xor
xor
out
rorl
imul
xchg
add
ffreep
cwtl
mov
xchg
dec
lret
jge
and
or
andl
test
mov
dec
add
mov
push
call
adc
lds
inc
flds
mov
xchg
lds
leave
pusha
dec
jnp
fisubs
inc
cmp
int
push
xchg
jle
pop
js
gs
rep
aad
xchg
xor
mov
fs
aam
fwait
cmp
cmp
mov
fisubs
push
jne
pop
nop
imul
mov
in
insl
mov
lods
sub
es
lock
or
loopne
or
loope
cmpb
dec
cmp
orl
mov
loope
fidivrl
and
sbb
repz
addl
add
mov
or
loope
test
jae
adc
es
popf
lock
xchg
xor
popf
cmpl
stos
pop
movl
add
push
mov
das
inc
pop
mov
ret
adcl
stos
dec
sub
push
fwait
pop
push
cli
adc
stc
pop
and
subb
ljmp
and
rorl
jns
mov
ja
daa
or
and
fs
test
ja
fcmovnbe
mov
les
mov
push
iret
scas
jnp,pt
xchg
xchg
mov
add
mov
push
insb
fs
and
js
fbld
je
jge
jo
xchg
fsts
push
dec
js
or
fnstenv
mov
ljmp
adc
pop
xor
or
and
sub
enter
adcl
outsl
es
push
into
jmp
sub
lcall
push
test
psllw
leave
and
push
xor
hlt
test
loope
adc
lds
cmp
pop
sbb
rorl
inc
mov
lods
dec
add
add
cmp
mov
xor
mov
and
testb
in
scas
push
dec
jecxz
cmc
mov
push
jge
mov
jge
dec
in
inc
and
pop
or
mov
xchg
xchg
test
xor
out
loop
adc
cmc
fcomip
cwtl
lds
jecxz
in
inc
pop
sub
clc
mov
cmc
test
or
or
jns
add
test
add
in
bound
adc
push
push
shrw
sbb
or
dec
orl
mov
jne
rcrl
cmc
xor
fs
push
inc
test
hlt
loop
mov
sbb
mov
ss
lret
jl
rorl
add
inc
adc
push
addb
xor
add
cmpsl
enter
in
push
adc
xor
or
mov
test
or
stos
mov
sbb
xchg
in
inc
jmp
ret
out
adc
adc
js
dec
js
pusha
push
push
xchg
cmp
jecxz
xchg
xor
add
cmc
arpl
fiadds
or
cmp
inc
mov
das
ja
or
loope
or
adcl
andb
scas
jae
or
js
inc
cmp
pop
add
lds
sub
inc
pop
mov
cmp
jb
test
rcrb
mov
pop
add
push
mov
add
pop
dec
mov
loop
jecxz
and
sbb
stos
inc
push
add
insl
aas
cmp
sub
jno
lret
ss
or
mov
loope
fmul
sarl
push
jge
mov
mov
lds
roll
and
pop
add
shlb
pop
mov
test
pop
pop
push
outsb
je
dec
movups
mov
bound
or
xchg
add
addl
jecxz
mov
push
push
push
sub
fistl
gs
xor
and
sbb
adc
leave
sub
pop
bound
dec
test
xchg
xchg
stc
mov
filds
pop
out
fidivrl
stc
lret
test
icebp
inc
andb
mov
mov
fisubl
or
dec
or
push
xchg
push
cmp
add
dec
xor
xchg
sbb
imul
lods
loope
icebp
les
mov
jae
rcll
shll
mov
cmp
add
mov
jmp
add
fs
pop
jae
add
push
dec
jmp
cld
imul
push
xlat
icebp
out
rol
xchg
xchg
xorb
pop
in
mov
insl
int3
or
js
addr16
pop
adc
jns
movsl
xchg
jb
sub
cmpsb
or
sub
sbb
loope
rcrl
dec
scas
mov
insl
mov
sarl
push
aas
xorl
sub
dec
xor
fiadds
outsb
rclb
adc
sub
cmp
int
mov
sub
xchg
sbb
sbb
imul
dec
pop
xor
cs
shll
stos
push
loope
pop
aas
dec
dec
mov
sub
cli
rcrb
lcall
cmp
inc
xchg
rol
fstl
mov
or
in
addr16
jb
adc
push
das
fisubrl
mov
mov
inc
xorl
rol
add
inc
mov
mov
lods
rcl
cmpsb
mov
sub
push
pop
push
je
sti
sbb
das
sub
lret
nop
mov
cmpsl
iret
sarb
cmpsb
pushf
or
cli
int3
dec
insb
rol
les
add
inc
adc
or
sahf
es
pop
dec
insb
cltd
je
fiaddl
hlt
and
xchg
fadd
hlt
in
stos
sub
adc
jo
lret
jg
mov
pop
pop
dec
or
rolb
add
sub
adc
loope
inc
loopne
and
fdivrl
jg
mov
add
pop
sbb
fsubl
xlat
jmp
into
jno
add
or
out
xor
adc
sahf
dec
push
lea
pop
repnz
daa
add
ss
mov
pop
pop
notl
out
int3
mov
pop
inc
dec
int
mov
arpl
xor
loope
lea
push
inc
xor
lds
inc
pop
inc
mov
jmp
fucomp
xchg
push
push
add
mov
adc
fisttpl
pop
push
dec
popa
fsubr
push
fists
push
mov
lea
add
inc
cmp
sub
and
push
push
mov
lods
lret
and
adc
sti
mov
sub
mov
sbb
xchg
cs
xorl
ret
call
ret
inc
dec
test
ret
jb
ja
bound
sub
jmp
sbb
shrl
nop
cmp
xchg
dec
movsb
dec
inc
cs
shll
dec
jl
sub
jle
lods
mov
ret
in
enter
mov
push
test
sbb
outsb
iret
mov
lret
divb
rcl
shll
xchg
jb
add
mov
das
push
add
and
sbbb
adcl
roll
inc
pop
sub
xor
repz
in
push
or
into
mov
fsubr
ret
inc
out
stos
mov
leave
rol
push
mov
mov
or
outsb
ret
and
xor
inc
xlat
ss
gs
addr16
mov
pusha
xorl
jp
inc
cs
addl
shrl
mov
inc
xchg
pop
test
repz
inc
syscall
mov
sbb
mov
cld
daa
popa
xchg
mov
add
decl
pushf
sub
mov
xchg
test
push
in
and
out
push
faddl
push
int3
mov
sub
ds
andb
xchg
ret
test
into
add
dec
and
mov
push
add
dec
pusha
push
sbb
mov
xor
cltd
int3
mov
jmp
push
and
adcl
ret
loopne
add
loop
lea
imul
inc
jno
inc
mov
sub
mov
adc
pop
mov
mov
add
mov
movb
mov
pop
cmpb
add
hlt
out
je
mov
cmc
icebp
xchg
js
add
out
lds
sbb
test
enter
ds
push
inc
lods
fld
movsb
out
aam
mov
inc
enter
icebp
xchg
loop
adc
or
xchg
xchg
hlt
mov
push
les
sub
pop
xchg
xor
jge
adc
loopne
or
adc
or
add
enter
cmpsb
cwtl
add
adc
cmp
cli
enter
insb
cwtl
pop
inc
fld
test
or
mov
cmc
mov
fstpt
or
xchg
loope
inc
loope
xadd
fcompl
dec
jmp
data16
mov
icebp
loop
out
and
sbb
out
aam
or
loope
sahf
pop
insl
aaa
insl
dec
adc
add
push
mov
inc
sarl
dec
mov
xchg
scas
xchg
sub
repnz
je
xchg
loope
cmp
add
or
inc
in
mov
loope
inc
inc
xor
sbb
xchg
insl
inc
movsb
jo
adc
lahf
xchg
mov
lods
addr16
mov
or
aaa
test
sbb
sub
imul
test
lds
inc
dec
or
fsts
xor
xchg
je
mov
out
shll
mov
mov
loop
adc
xchg
repz
fwait
jmp
xor
in
inc
sbb
sti
or
mov
rclb
mov
inc
add
loope
mov
pop
dec
push
and
lret
jecxz
fistps
push
jae
es
cmp
mov
mov
es
mov
int3
sub
dec
fisubl
cmpsb
call
xor
push
adc
jmp
jmp
and
add
cmc
loope
fistps
jle
int
cltd
add
mov
jne
add
push
ret
test
ret
inc
inc
mov
jmp
mov
xchg
cmp
inc
xor
test
pop
cmc
repz
lret
sub
lods
mov
fabs
stos
ficoml
mov
stos
lret
push
jle
sbb
aad
loop
or
in
jg
lcall
jne
popa
addr16
sbb
mov
pop
cmc
test
lret
loope
jnp
xlat
inc
loop
lock
inc
adc
push
pop
leave
cmpsl
push
ret
inc
pop
inc
inc
roll
mov
adc
ror
bsr
data16
popa
arpl
test
in
mov
iret
fwait
shll
pop
inc
lds
insl
or
js
push
movsl
push
xchg
xchg
std
and
push
mov
loope
lret
icebp
jp
dec
fcmove
dec
sub
dec
out
push
outsb
push
and
xchg
add
sarl
je
gs
or
je
mov
inc
xor
push
test
stos
xor
mov
ret
out
cmp
fwait
inc
mov
enter
jecxz
mov
sbb
shr
inc
jb
test
xor
movsb
jne
ljmp
sbb
xchg
sarb
fiadds
imul
or
orl
mov
add
into
ljmp
pop
fstpl
mov
or
inc
shrb
mov
bound
push
out
xchg
pushf
inc
and
or
or
mov
xchg
and
cmpsl
pushw
int3
pop
call
data16
pusha
lds
clc
add
fcmove
mov
sub
jle
ror
sub
in
adc
std
xchg
cmp
in
xchg
jns
int3
fld
adc
add
adc
push
clc
test
xchg
xchg
ret
inc
dec
ficompl
pop
movsb
rolb
mov
inc
ret
cmp
dec
and
cmpsl
cmp
repnz
inc
mov
jecxz
dec
pop
repz
pop
jmp
inc
cmpb
jae
pop
pop
or
cwtl
ret
jae
pop
mov
shll
test
add
or
out
movsb
outsb
call
cmp
push
pop
ss
mov
xchg
les
add
cmp
scas
cmp
scas
sub
insb
shlb
pop
test
cmc
inc
pop
mov
dec
push
mov
test
and
mov
aaa
cwtl
pushf
cmp
adc
mov
cmp
outsl
adc
adc
add
fldl2t
xchg
pop
je
testb
pop
lahf
gs
jo
xor
inc
dec
shrl
adc
cmp
arpl
inc
adc
cmc
push
dec
nop
in
push
mov
or
or
jno
mov
push
mov
in
add
xor
popa
loop
lods
pop
xor
in
pop
orl
cmp
or
jle
into
xchg
insb
jbe
dec
out
sbb
ffreep
mov
ss
add
inc
jecxz
cmc
dec
repz
or
jno
pop
mov
test
inc
cmc
js
lds
jno
xchg
sub
daa
push
xchg
cwtl
xor
hlt
and
jb
ss
push
out
xchg
xchg
inc
lods
std
pop
lahf
adc
movsb
out
les
data16
stc
mov
call
pop
jle
pop
push
add
fcoml
les
in
pop
movsl
and
psubb
ds
lahf
aaa
daa
sub
mov
xlat
mov
inc
mov
xor
and
dec
and
mov
lods
ret
mov
jo
popf
sti
test
add
inc
mov
inc
jae
push
out
aaa
sbb
mov
fxtract
or
jge
or
inc
aaa
mov
mov
pushf
lret
fldt
subb
outsl
shrb
ja
and
outsb
lods
jge
cwtl
mov
call
add
or
add
and
lea
scas
clc
xor
xchg
add
movsb
icebp
lea
add
insl
pop
inc
xchg
jno
xor
mov
inc
in
loopne
mov
sahf
gs
shll
inc
xchg
lds
test
stos
or
xchg
add
fiaddl
push
add
and
mov
lcall
arpl
jecxz
sti
sub
mov
lea
dec
pop
insl
movl
inc
ss
movl
lahf
scas
mov
dec
movsb
jae
pushf
loope
cmpsb
jmp
daa
clc
push
fsubr
sbb
xchg
cmp
jne
pop
mov
mov
fldenv
cltd
push
icebp
je
xchg
add
cmpsl
in
sub
mov
cmp
sbbl
push
lock
mov
pop
add
in
and
in
loop
aam
in
mov
loope
out
jae
hlt
int
mov
adc
out
xor
fcmovbe
loope
push
sahf
push
fs
ja
lret
cmp
movsb
sbb
invd
inc
lock
push
pop
adc
incl
dec
xchg
push
inc
ret
enter
pop
and
lock
cli
mov
outsb
out
add
push
or
or
in
ret
push
or
xchg
test
shl
mov
aam
mov
mov
jmp
in
repz
sti
in
inc
aad
ret
jb
sahf
xlat
add
in
mov
hlt
inc
test
fs
dec
mov
test
test
jb
out
or
cmpsl
add
nop
fs
dec
jp
mov
or
adc
xchg
jp
int
sbb
add
ret
shl
inc
sub
imul
xor
mov
fsubs
mov
sti
jl
and
adc
into
adc
mov
inc
mov
popa
loop
and
sub
xchg
gs
xlat
and
sub
jp
mov
mov
mov
repz
xor
cmpsl
aam
jo
mov
into
jo
inc
out
aaa
lcall
mov
add
jge
lea
adc
ficoml
es
call
mov
jecxz
into
cmp
push
xor
daa
ffreep
pcmpgtw
in
push
popf
icebp
mov
inc
push
and
mov
or
fisttpl
sbb
cmpsb
push
cmp
push
lret
addr16
sub
push
gs
adc
fldenv
addl
jae
adc
movsb
lret
lods
or
add
add
adc
in
push
push
mov
xchg
mov
mov
iret
jmp
in
loopne
test
leave
lds
xor
jmp
dec
mov
sub
dec
push
insb
mov
inc
dec
iret
aas
mov
push
sub
push
je
or
pop
xor
imul
adc
roll
dec
inc
js
faddp
out
mov
add
in
lock
rol
test
cltd
xchg
inc
jns
scas
xlat
xchg
sub
inc
cmc
add
rcll
js
sbb
add
or
jb
pop
call
les
jne
cmpsb
mov
dec
mov
test
dec
cwtl
jo
cmc
jecxz
test
gs
lds
jnp
fnstenv
inc
cmpsl
imulb
add
rcl
mov
jp
dec
shlb
ret
inc
add
inc
mov
mov
loopne
mov
dec
cld
into
mov
pop
mov
cld
imul
insl
adc
sub
imul
aad
dec
sub
jecxz
out
xchg
mov
or
fdivrs
int3
xchg
leave
movsb
xchg
sbb
ret
imul
scas
pop
cmpsl
jecxz
cwtl
fstps
popa
inc
mov
mov
mov
mov
mov
out
mov
test
addb
mov
addl
ret
fisubl
imul
xor
roll
add
mov
jmp
loopne
push
sti
fbld
lock
scas
ret
mov
push
sbb
sbbl
push
push
and
jp
dec
lret
insl
dec
add
adcl
xchg
mov
mov
xchg
or
imul
loop
loopne
inc
inc
test
repnz
pop
add
sbb
dec
js
add
aam
loop
faddl
test
xor
pop
leave
call
add
test
lock
mov
sti
popa
das
sti
mov
fs
test
lds
add
add
jbe
loope
imul
gs
push
addr16
test
mov
loope
cmp
sbb
out
add
mov
repz
std
inc
push
inc
icebp
pop
scas
xchg
dec
xchg
outsb
pop
pop
and
fucom
sub
scas
cmp
data16
out
push
jns
aaa
mov
repz
das
and
mov
xchg
rcl
xchg
ret
aam
jae
and
aam
sub
clc
fsubl
sbbl
xchg
or
pop
adc
call
pusha
add
mov
pop
leave
cld
push
out
mov
arpl
xchg
fld
push
out
loop
addr16
mov
sbbb
jbe
into
cwtl
xchg
addr16
push
in
push
inc
sbb
call
test
insb
sti
cmp
out
sarl
mov
sub
jle
arpl
loope
pop
cmp
fwait
xchg
xchg
test
xchg
ja
call
sbb
push
push
adc
dec
add
stos
mov
cmpsl
cmp
or
ja
arpl
lds
xlat
xor
ja
jb
xchg
icebp
jbe
add
stos
int3
insb
lds
cmp
aas
mov
ss
ret
int
dec
into
xor
loop
xchg
call
lahf
aad
ss
jp
ss
fisttpll
fbld
imul
sub
mov
mov
push
out
inc
loop
nop
jecxz
lods
sahf
jns
xor
popa
and
inc
mov
jb
cmc
in
push
push
sub
les
imul
push
jecxz
rol
out
sub
xor
xlat
sub
inc
icebp
addr16
addb
loope
cmc
enter
pop
xor
push
jae
ret
arpl
sbb
in
lds
sbb
fcomps
lret
mov
push
stos
fs
sub
in
or
daa
dec
aaa
adc
aam
fs
sub
add
addr16
sub
loopne
push
jecxz
fnstsw
mov
jmp
int3
cwtl
fxch
jbe
lcall
mov
hlt
add
mov
aaa
gs
ficoml
ds
out
jg
or
repz
fcom
jb
inc
dec
or
or
xchg
les
cmp
dec
mov
outsb
or
into
in
adcl
push
xchg
ret
int
mov
cmp
mov
push
icebp
nop
or
stos
jmp
xor
xor
jle
into
sbb
add
mov
cmpsl
arpl
hlt
jle
int3
xchg
and
loop
sahf
loop
jnp
int
jge
fdivl
mov
mov
mov
mov
inc
hlt
icebp
fldenv
mov
adc
into
dec
mov
jae
mov
dec
cwtl
cmp
ret
js
int3
jo
sub
sbb
push
xchg
and
lret
adc
rcrl
adc
mov
or
out
inc
lds
dec
ja
mov
mov
adc
push
lea
popa
shll
pop
inc
dec
mov
mov
push
in
xor
inc
testb
lods
push
mov
outsl
test
nop
xchg
icebp
mov
into
and
in
jmp
push
cmpsl
adc
xchg
fcomp
data16
ja
xor
inc
mov
or
lods
vmovaps
mov
jbe
mov
pop
cwtl
test
in
xor
add
xchg
lcall
or
jne
sub
test
enter
pop
repz
je
cmp
jo
int
jmp
cmp
mov
xchg
test
sub
inc
add
pop
dec
stos
push
lock
loope
roll
add
lods
insb
lret
stos
aaa
add
adc
fbld
push
xor
icebp
fstps
cmpsl
mov
fmul
shr
dec
jae
and
cmp
popa
jns
cmpsl
out
ret
fcomps
aaa
xchg
xchg
aas
lods
jmp
inc
dec
adc
sbb
in
ret
inc
aad
mov
mov
or
adc
pop
or
icebp
jle
scas
in
inc
shlb
dec
mov
xor
mov
in
or
aaa
or
pop
out
aam
push
and
fs
push
stos
outsb
cmpsb
pop
add
push
push
jns
or
dec
ret
je
add
inc
jp
push
fadd
ret
les
xor
stos
push
adc
sarl
xchg
push
cmp
arpl
cmp
cmpsl
je
cmp
mov
fsub
mov
push
scas
adc
adc
xor
ret
loope
enter
mov
cmc
xchg
je
insb
loope
hlt
or
lret
dec
xor
jns
cmpsb
frstor
adc
in
inc
xor
imul
adc
cmp
lret
mov
rcll
jae
mov
mov
repnz
mov
ret
hlt
lret
xchg
in
mov
xor
aam
int
cmp
or
mov
push
add
xchg
sbb
sbb
scas
mov
roll
xlat
imul
arpl
jl
or
int
fdivs
or
dec
les
fsts
xchg
mov
cmp
inc
stos
add
add
xchg
mov
adc
les
shll
sub
mov
loope
mov
push
jb
jb
sbb
pop
out
and
stos
roll
xorl
push
or
aas
orb
dec
sub
ljmp
adc
stos
xlat
mov
jno
ja
mov
xchg
in
xchg
rcll
mov
mov
loope
loope
mov
pop
dec
jmp
jg
push
jmp
mov
mov
fisubl
fcomps
pop
in
jecxz
sbb
std
jl
pop
out
cltd
test
test
jl
mov
stos
out
sub
in
ljmp
loope
lds
or
shll
sbb
and
arpl
add
test
mov
inc
jg
push
bound
andl
sub
xchg
gs
mov
andb
push
cli
lds
es
into
repz
dec
test
push
bound
sahf
repz
push
sub
cmpsl
mov
dec
sub
sub
xchg
fwait
test
cli
sub
ss
inc
sub
mov
ftst
outsb
imul
repz
jo
adc
dec
into
push
or
movsb
push
loopne
dec
fsubl
sub
push
sti
sub
push
js
in
loope
je
outsl
mov
dec
lret
add
in
xor
mov
fcompl
leave
jmp
divps
arpl
leave
loope
cmp
sbb
add
leave
xchg
sarl
ljmp
paddw
pop
pop
add
es
mov
push
xchg
movsl
ret
pop
rcrb
aad
jns
loope
dec
mov
cmpsl
icebp
pop
inc
push
jbe
add
test
add
cmp
cmp
xchg
int
rcrl
daa
int
mov
sbb
or
cmpsl
xchg
repnz
cmpsb
mov
shlb
popf
add
loopne
adc
mov
test
in
in
rorl
mov
jno
mov
xchg
mov
orl
mov
fs
arpl
cmpsl
mov
cwtl
xor
xchg
jp
cmpsb
dec
shl
loop
mov
out
insb
mov
add
rol
xlat
or
cmpsb
in
xlat
inc
aaa
mov
aaa
insb
mov
add
sbb
in
xchg
out
xchg
adc
flds
loop
push
mov
std
int3
mov
inc
cmp
add
shll
xchg
push
sbb
inc
shlb
sub
push
data16
ret
scas
leave
xchg
scas
mov
pusha
in
lods
mov
ja
addr16
cmp
loope
pop
loope
push
fsubrl
push
mov
inc
cmp
push
movsl
cmpsl
es
xor
in
loope
push
sbb
aam
fisubrl
mov
dec
daa
fisubrs
or
stos
call
in
mov
subl
adc
pop
sbb
cmc
icebp
cmp
mov
inc
loope
icebp
push
mov
jp
stos
dec
ud2
lds
fcmovbe
add
shlb
nop
sub
inc
loope
mov
movl
jle
lahf
jl
push
xor
mov
jne
push
xchg
in
cmpsl
cmp
jbe
jns
dec
cmc
jbe
pop
rorl
xor
mov
or
mov
or
lods
in
je
xchg
loope
fsts
add
or
jne
sbb
add
mov
and
pop
in
and
arpl
inc
jo
inc
pop
fldcw
mov
out
cmp
out
lret
xchg
pop
lcall
and
mov
mov
in
dec
lcall
loopne
push
repz
inc
inc
dec
pop
jle
lds
movsl
daa
push
fwait
enter
in
jle
xchg
xchg
mov
aad
call
sub
mov
arpl
aas
ret
aam
test
mov
or
xor
jecxz
cmc
dec
repz
movsl
fistpll
and
mov
gs
test
daa
jecxz
mov
aam
ss
mov
dec
mov
cld
cmc
xchg
in
orl
das
mov
test
pop
inc
push
xchg
add
jno
ret
push
and
movsl
inc
cmpsl
testb
out
dec
mov
pushf
mov
sahf
jne
std
mov
xorl
lds
cltd
or
sbb
loope
ret
dec
add
lds
mov
sub
movsb
call
js
cltd
std
repz
or
imul
pop
mov
mov
gs
add
aas
xor
jmp
std
xchg
add
fwait
dec
shll
inc
pop
roll
jecxz
xchg
call
icebp
cmpsb
or
or
dec
xor
loop
in
mov
jmp
out
popf
push
dec
sub
jmp
test
mov
push
xor
dec
mov
mov
aas
xchg
xorl
xchg
xorl
mov
fstps
stc
inc
in
jg
adc
subl
xchg
add
and
xchg
push
fs
outsb
and
sub
rcrb
into
sbb
in
ret
push
or
pushf
mov
int
stc
leave
inc
mov
mov
xor
add
mov
lret
outsb
fisttpl
sysret
jecxz
jge
test
out
test
addr16
or
test
loope
mov
mov
push
inc
jbe
les
mov
fwait
jbe
mov
add
cmpsb
test
lahf
lds
mov
xlat
sbb
pop
ljmp
lret
and
sub
mov
int
cmpsl
xor
lcall
or
loopne
movsl
sub
pop
push
fdivr
lret
dec
out
cmc
push
leave
inc
addl
add
ss
mov
sbb
ljmp
xrelease
cld
inc
pop
repz
loope
movsb
cmpsb
push
pop
jno
enter
mov
outsb
lcall
scas
xchg
ljmp
dec
push
in
add
mov
push
loope
add
popa
adc
in
icebp
fs
sub
inc
pop
mov
das
out
in
adc
fnop
inc
cmp
or
loop
adc
cmp
xchg
or
inc
les
cmp
jnp
es
xchg
or
or
adc
mov
arpl
test
adc
icebp
fdivrs
loopne
dec
sbb
sbb
push
rclb
inc
into
shl
leave
push
int
dec
sub
cmp
mov
xchg
rcrl
mov
shlb
out
sub
push
or
sub
arpl
xchg
rcll
cmp
sbb
cmp
push
rcrb
pop
lock
cmp
lret
or
and
lds
jmp
mov
mov
loopne
xor
les
icebp
fistpl
xchg
imul
dec
cmp
or
cmp
xchg
popa
gs
aad
test
es
nop
adc
fnstenv
fidivrs
xchg
xor
das
or
in
mov
shlb
pusha
mov
adc
fs
mov
mov
mov
xchg
aas
sbb
fs
xorl
inc
jnp
xor
or
lods
sub
jne
es
lcall
xor
sbb
pop
mov
xchg
mov
cmpsl
insl
sbb
fs
ret
xchg
rep
push
mov
out
xor
add
add
icebp
movsl
repz
cmc
nop
pushf
or
and
or
dec
test
add
xchg
insb
jae
pop
adc
add
push
cmpsb
inc
mov
mov
inc
dec
test
pusha
jg
repz
mov
jp
repz
dec
mov
enter
js
mov
pop
jmp
add
frstor
lods
mov
bound
loopne
pop
idivl
xchg
aaa
icebp
sbb
mov
outsl
inc
adc
shrb
dec
rcrl
cs
add
rol
sub
add
rcl
lret
push
test
jle
les
into
dec
sbb
lods
xchg
in
shrl
jecxz
cmp
or
js
sub
push
ds
int
cmp
aad
ljmp
sbb
je
dec
xchg
les
mov
orl
push
inc
cmovb
jne
fidivrl
cmpsb
ljmp
sub
and
xchg
iret
or
jp
add
dec
and
sbb
ss
xchg
push
cwtl
dec
stc
lcall
dec
mov
pop
sub
ljmp
jne
loope
or
xchg
or
outsl
sbb
mov
fwait
and
les
jb
mov
cmp
sbb
imul
test
add
xchg
mov
pushf
jp
inc
jle
adcl
stos
lds
inc
mov
mov
inc
lret
cmc
out
cmpb
rolb
icebp
outsb
push
mov
fdivrl
and
jno
or
repnz
add
or
scas
or
xchg
inc
cmpsl
icebp
popa
push
rorl
cmp
inc
cmp
cltd
and
jl
loop
dec
sahf
ror
adc
movsl
push
call
outsb
jp
int3
cmp
rol
jmp
rcl
out
mov
or
adc
adc
xchg
dec
in
and
push
js
xchg
add
xorb
call
rorl
add
data16
shlb
or
inc
mov
dec
popa
and
push
out
add
outsl
and
or
aad
in
cld
adc
test
push
add
inc
mov
adc
cmp
dec
inc
jae
pushf
push
test
jl
add
jno
xor
loopne
xchg
adc
dec
jecxz
pop
sub
andb
fcoms
pop
sub
and
inc
fmulp
sub
xchg
cmp
jno
xor
xchg
std
inc
mov
fbstp
or
push
mov
std
mov
les
xchg
add
loope
xchg
or
xchg
int
icebp
mov
adc
xchg
sub
xor
or
fimull
icebp
and
mov
jo
les
inc
or
or
and
rorl
icebp
clc
imul
sub
fcmovnbe
inc
or
xchg
or
outsl
xchg
add
inc
sub
call
inc
sub
nop
mov
push
jecxz
cmovbe
sti
push
mov
sti
outsl
loope
xlat
xchg
push
push
cltd
xor
mov
lock
add
fwait
dec
lods
mul
xor
jle
jno
sub
jns
dec
or
dec
inc
xchg
addl
into
jb
inc
inc
lock
inc
movhps
and
lds
mov
outsl
enter
add
dec
push
add
adc
in
call
cmpsl
cld
add
jl
mov
mov
fimuls
mov
inc
sbb
mov
sub
jb
cmpsl
or
cmp
ljmp
lds
test
stos
mov
pop
inc
scas
icebp
leave
cmp
jecxz
aam
xchg
cli
je
xchg
sbb
lret
loopne
sub
pop
movsl
cmp
lds
jno
cmp
cli
or
sbb
cmpb
es
imulb
loopne
das
mov
mov
std
rol
jle
fistl
scas
out
shl
dec
out
hlt
scas
imul
cli
or
mov
pop
adc
pop
out
lret
xchg
fldt
or
cmc
or
ja
jle
mov
push
xchg
add
mov
pop
xchg
in
rclb
cmp
loope
jle
xchg
ja
test
dec
dec
inc
leave
mov
shrb
insl
loope
rcll
inc
incl
and
fisttpl
leave
test
xor
sub
add
add
sub
add
mov
add
xchg
shlb
dec
test
sub
mov
jo
xlat
leave
test
lods
sub
add
lds
add
mov
test
mov
sub
aas
push
add
rorb
in
and
popf
repz
push
test
in
push
xor
test
cmpsl
xchg
std
int
mov
loopne
dec
loope
add
pop
jl
scas
sub
movsb
shll
adc
mov
in
sbbl
pusha
jbe
sub
jo
imul
cmp
or
jmp
hlt
sub
adcb
or
inc
nop
pushf
in
lret
add
iret
imul
leave
insb
inc
lock
push
cmp
repz
cmp
and
or
or
mov
inc
shrb
sub
add
mov
xor
dec
adc
mov
cs
out
dec
rcrl
lahf
xchg
jne
gs
xchg
xchg
cmpsl
in
out
shl
and
mov
out
adc
stc
out
push
adc
and
sub
enter
push
inc
cwtl
mov
push
loopne
mov
jno
or
fldenv
push
inc
jecxz
mov
push
xchg
push
inc
pop
jo
xor
clc
imulb
mov
push
fisttps
cmpsb
mov
fsts
inc
xchg
mov
push
adc
arpl
loopne
dec
mov
cltd
out
test
les
lcall
rolb
mov
inc
cmpsl
repnz
out
jbe
mov
aaa
mov
jb
lods
jae
and
mov
in
pop
mov
add
rcll
ds
mov
pop
jo
incl
jne
add
mov
push
push
filds
nop
push
sub
cld
xlat
movd
fwait
lods
fnsave
push
out
in
mov
xchg
inc
jae
out
dec
flds
pop
loope
mov
mov
cmpsb
scas
repnz
cmpl
or
pop
test
pop
push
pop
mov
xchg
icebp
test
mov
mov
inc
sub
jg
pop
ret
adc
scas
push
cwtl
xchg
cmpsb
push
jge
lds
test
in
add
mov
iret
push
or
inc
mull
xchg
scas
test
fsts
and
scas
or
xor
fisubs
mov
lcall
les
add
mov
arpl
stos
push
push
sbb
jg
pop
aas
pmaxub
and
add
sub
pusha
in
data16
pop
push
dec
and
scas
pop
in
test
movsb
leave
je
lcall
and
push
repz
xor
dec
hlt
pop
loopne
call
mov
shlb
mov
loop
sahf
scas
leave
popa
pop
outsl
les
shl
add
inc
repnz
dec
repnz
imul
or
ds
loopne
mov
test
out
outsb
addr16
test
dec
hlt
in
imul
icebp
mov
dec
add
outsb
pop
sub
mov
lods
fildl
mov
inc
and
cmp
mov
js
test
cmpsl
push
mov
push
fbld
mov
je
adc
inc
or
mov
inc
mov
popf
mov
xchg
mov
int
cmpsl
test
outsl
aas
add
mov
cmpsl
cmp
in
aad
pop
call
shrl
inc
adc
addl
mov
inc
adc
inc
mov
scas
cwtl
ret
ja
inc
stc
push
in
test
mov
dec
mov
into
int
lods
push
int
push
fs
cltd
lds
test
enter
ljmp
adcb
cmpsb
insl
cwtl
inc
or
enter
inc
jns
xchg
fisubs
push
aad
scas
or
jae
fsubs
outsl
jg
movsl
ret
mov
inc
pop
push
hlt
in
sbbl
push
or
mov
cmpsl
mov
sub
push
enter
out
cltd
xchg
push
xlat
adc
es
xchg
test
int
jecxz
shll
int3
lcall
adc
sti
shrb
add
jg
mov
fwait
xchg
cli
in
push
in
repnz
out
xchg
xchg
andl
add
lds
add
cltd
mov
arpl
and
clc
scas
push
ja
xor
inc
jnp
xchg
ret
out
out
enter
ret
add
loope
lods
mov
xorb
out
neg
and
jecxz
shl
push
jns
xchg
ret
jp
or
rcll
pop
inc
pop
stc
dec
push
jle
aad
repnz
insl
adc
pop
clc
fwait
adc
push
or
sbb
jnp
bound
lcall
mov
and
add
xchg
enter
clc
fdivl
adcb
rcl
adc
enter
shlb
sub
aad
js
xor
fildl
mov
add
cmp
insb
hlt
xchg
sub
push
cmc
je
cmp
ss
mov
mov
or
test
xor
lds
loope
inc
in
xchg
pop
mov
jmp
arpl
add
xor
xchg
dec
xor
test
outsb
rep
add
push
mov
sbb
mov
cltd
xchg
and
sbb
push
out
or
loope
xchg
push
mov
cs
in
adcl
fadds
rcrl
int3
jb
ret
and
outsb
insb
lret
cld
outsb
lret
inc
inc
adc
add
mov
cmpsl
xchg
shll
mov
xchg
inc
sub
mov
xor
add
jo
inc
jmp
xchg
fldenv
jne
mov
and
stos
in
mov
push
mov
mov
test
ror
cwtl
stc
repnz
dec
and
into
xchg
xor
movsb
jl
and
pop
rcll
add
insl
push
in
add
sub
lahf
fwait
pop
cmpsl
repz
mov
in
hlt
insb
mov
mov
or
les
add
lea
push
loope
popf
pop
jecxz
in
pushf
mov
aam
pop
add
xor
fldenv
add
roll
adc
cltd
arpl
imul
add
pop
adc
adc
test
enter
add
es
leave
ss
sub
ffree
cmpb
iret
inc
or
jg
xor
aas
pushf
or
and
movsb
push
clc
inc
jg
mov
sahf
pop
dec
inc
cld
lcall
pop
add
movlhps
add
out
sub
sub
jno
sbb
repz
cmp
iret
mov
mov
xor
test
mov
sub
lds
mov
xchg
aas
sbb
dec
dec
in
pop
nop
add
inc
loope
adc
testl
cmp
insb
int3
test
or
test
movsl
pop
sub
push
in
push
pop
pop
and
add
sbb
shrl
mov
ret
mov
and
ds
push
fnstenv
jbe
out
pushf
cmp
sub
mov
cmp
add
leave
jns
pop
fwait
push
xchg
pop
shll
out
les
fisttps
and
int
mov
adc
rorl
jno
sub
sbb
ret
orb
sub
jmp
inc
addr16
out
add
cs
mov
mov
movsl
pminub
je
fdiv
jo
push
fs
les
mov
mov
mov
adc
je
mov
mov
insb
sarl
push
rcrl
es
in
mov
sub
repz
or
mov
insb
insb
inc
sub
xchg
lds
les
inc
push
xchg
adc
pop
movsb
and
dec
inc
lea
cmpsl
inc
sub
jno
mov
stc
fists
add
xchg
and
fimuls
or
je
insb
fsub
mov
inc
enter
inc
iret
fnstenv
mov
inc
mov
flds
pop
loope
fucom
rol
gs
and
mov
pop
ret
pop
shlb
push
andb
data16
movl
add
push
inc
sub
xor
ss
jo
stos
inc
dec
and
mov
push
cmp
mov
add
push
jmp
xor
adc
in
test
xor
or
sbb
cmp
xchg
xor
mov
in
push
push
icebp
ja
mov
je
cmp
xchg
dec
lods
incl
or
adc
popf
lds
xchg
or
and
or
lret
mov
jbe
inc
cwtl
jo
adc
sbb
dec
dec
in
cmpsl
ja
cld
xchg
dec
dec
in
imul
xor
mov
push
jnp
push
ret
ret
cmp
xchg
push
negb
js
and
lock
xchg
or
cmp
or
push
add
shlb
add
push
sub
or
cltd
rol
test
sbb
out
mov
mov
int3
inc
test
sbb
xchg
int3
nop
jmp
inc
ss
cmp
mov
add
enter
fsub
out
mov
xchg
loope
inc
jbe
test
cmp
xchg
dec
mov
pop
ja
inc
push
je
xor
add
lock
mov
mov
cmpsb
pop
in
xor
add
inc
adc
lds
xchg
pushf
mov
mov
xlat
loope
sub
aad
popf
loope
sub
cli
mov
inc
adc
sbb
or
imul
and
stos
popf
and
xor
mov
repz
call
push
inc
pop
lods
ss
sub
cmpsb
mov
mov
push
mov
inc
or
fdivrl
dec
int3
fs
inc
ja
inc
mov
mov
dec
aaa
and
outsb
push
in
cmp
mov
mov
lds
fs
mov
cmp
push
sbb
inc
js
in
loopne
push
icebp
push
leave
jbe
sbb
sti
or
adc
or
leave
test
xchg
inc
pop
aam
mov
test
push
add
and
add
pop
xor
or
inc
test
sahf
lcall
adc
rcrl
cmp
push
xchg
les
jae
mov
pop
fadd
mov
jge
mov
out
mov
call
lods
in
movsl
hlt
sbb
xor
mov
je
inc
xor
and
xchg
into
xlat
push
out
inc
aaa
ret
cmpsb
sub
add
out
pop
dec
pop
cli
inc
ljmp
pop
inc
js
inc
xchg
call
lods
xchg
mov
push
mov
cwtl
lods
inc
jecxz
xor
mov
je
cltd
icebp
adc
ljmp
inc
fisttpl
aaa
arpl
push
arpl
xchg
adc
movsl
mov
movb
test
add
idivl
mov
sub
popa
xor
mov
xor
xlat
mov
dec
stos
call
or
inc
jns
add
shl
push
incb
push
ret
inc
mov
jae
out
add
or
adcl
inc
cmpsl
mov
ljmp
shl
mov
mov
bound
test
mov
mov
test
shll
in
andb
sbb
or
fs
dec
cwtl
fisubrs
dec
cmp
xor
int3
mov
sub
shlb
and
test
inc
push
sbb
dec
xchg
jecxz
push
ss
and
loope
int3
jns
out
stos
mov
pop
add
stos
sti
hlt
test
cmp
imul
xchg
insl
je
mov
push
in
push
test
fisubl
adc
jg
icebp
or
cmpsb
out
pop
push
cmp
test
test
or
adc
addl
aad
ja
in
out
psraw
adc
or
lret
and
push
jnp
cmpsb
in
add
jmp
jbe
push
or
adc
adc
inc
loope
out
les
dec
test
mov
inc
popa
mov
sbbb
push
bound
lods
mov
lds
jp
push
enter
insb
mov
roll
pop
fldenvs
cmp
fwait
add
mov
int3
xor
movsl
lods
or
lret
arpl
lcall
jbe
cmp
mov
ret
mov
xchg
inc
inc
aas
int
jle
mov
mov
int3
les
mov
jl
inc
in
mov
les
adc
pop
cltd
loope
inc
dec
in
mov
pop
mov
xlat
ss
inc
mov
mov
icebp
inc
mov
jne
lcall
repz
repz
xchg
in
jg
call
sti
lcall
test
jp
mov
or
aam
lahf
leave
cmp
push
cs
mov
jne
push
fs
mov
push
loopne
jmp
add
ret
in
cmp
orb
adc
mov
mov
dec
add
dec
cld
dec
jno
sub
fimull
mov
sub
or
jbe
fwait
lcall
mov
mov
aad
xor
ret
jo
mov
sub
gs
mov
mov
pusha
sub
mov
push
dec
fs
ja
adc
testl
adc
lret
sub
or
mov
movsb
push
push
mov
dec
xor
mov
xor
mov
adc
dec
push
add
test
mov
lea
pop
ret
ret
movsb
scas
popa
jle
rcrb
aaa
dec
sahf
or
jbe
hlt
or
and
scas
push
mov
scas
pop
movsl
gs
cltd
mov
xchg
jbe
sbb
out
push
add
cltd
dec
fucom
cmp
mov
loope
dec
xlat
push
cmp
mov
test
adc
mov
in
mov
lods
xchg
call
pop
add
dec
push
popa
dec
sub
xchg
xchg
or
pop
ret
mov
movsb
pop
or
les
push
sub
addr16
int
loope
dec
roll
rcr
cmp
shlb
jmp
pop
add
mov
lds
pushf
mov
dec
mov
inc
push
dec
dec
into
push
adc
sub
stc
dec
repz
fs
and
je
ffree
rorl
xchg
cmp
mov
in
xchg
ror
fldenv
mov
inc
inc
movsb
mov
inc
clc
ss
rorl
adc
les
pop
xchg
add
push
sbb
cs
pusha
lock
out
ret
daa
iret
inc
adc
jbe
loope
dec
add
jmp
in
in
cwtl
jmp
push
aad
insl
js
movsb
std
ficomps
jmp
sub
pop
lret
adc
and
rorl
cmpsb
jmp
and
dec
test
insl
into
outsb
add
mov
bound
add
ret
cmc
xchg
fisttpl
nop
mov
not
je
jo
es
pop
xor
test
lret
cld
jecxz
sahf
das
inc
fadds
push
test
mov
push
in
pop
cli
or
aas
cmc
loope
divb
mov
mov
jae
mov
test
ja
mov
dec
mov
insl
ljmp
add
fcmove
mov
cmc
rolb
sub
ret
les
cli
add
xchg
icebp
pop
inc
nop
push
outsl
jb
adc
loopne
lret
dec
push
stos
out
enter
mov
aam
inc
cmc
dec
orl
inc
pop
outsl
outsb
jecxz
test
dec
in
rolb
mov
or
decb
add
imul
adcb
in
loopne
jno
cmp
mov
xchg
add
mov
mov
sub
into
or
mov
jmp
loopne
inc
push
popa
out
shll
fistl
les
xor
xchg
loope
sarl
mov
icebp
scas
scas
sti
mov
dec
cmc
or
lds
fdivrl
xchg
int
inc
iret
inc
xor
or
push
loop
out
les
xor
rcll
inc
adc
lds
xchg
dec
inc
fdivrl
pop
aas
hlt
lcall
inc
mov
pop
outsb
divl
lods
push
je
xorl
ret
xchg
imul
pop
dec
sbb
adc
or
in
jbe
call
out
add
jne
cmp
mov
outsl
out
mov
mov
inc
jle
test
mov
aas
dec
test
pop
add
hlt
mov
or
lret
mov
or
shr
mov
mov
mov
dec
ljmp
or
in
jecxz
cmp
lret
and
push
test
bound
adc
add
in
outsb
jno
lea
cmp
lret
mov
adc
stos
inc
mov
jl
mov
sub
and
and
les
cmp
mov
push
rcll
cli
in
scas
pop
cltd
lods
shl
arpl
pushf
cmc
dec
loopne
lods
loope
adc
mov
push
fwait
adc
adc
loope
xchg
sarl
dec
ret
adc
insl
test
add
cs
xchg
cmpsb
aas
xchg
sbb
roll
xchg
std
add
xchg
test
fsts
push
and
adc
fbld
in
aad
push
mov
adc
pop
push
jmp
pop
xchg
loope
rcr
or
mov
aam
or
add
adc
xchg
cs
add
jecxz
lds
dec
sbb
in
clc
or
add
pushf
lret
jecxz
cmpsl
dec
xlat
les
lods
dec
hlt
js
push
subb
andl
jo
adcb
sub
movsl
lds
inc
adc
in
shl
xor
jb
sub
mov
or
int
mov
test
jmp
xchg
int3
dec
psrad
rol
les
dec
movsb
sar
lret
fsubs
ret
lret
mov
orl
jo
ret
pop
int3
mov
into
adc
in
rol
testl
test
ret
inc
push
mov
or
and
pop
shrl
xor
fldl
ret
add
push
lcall
in
dec
daa
add
cli
es
jo
jbe
cmp
xchg
enter
jecxz
pop
mov
sbb
cld
les
jp
jmp
inc
jae
inc
push
cwtl
push
mov
push
push
mov
mov
mov
movsb
in
imul
mov
aad
loope
nop
push
dec
in
xor
push
lds
or
lret
lahf
sub
int
out
int3
ror
sbb
and
xadd
lds
mov
xchg
add
jns
lret
inc
dec
ffree
icebp
pop
or
ror
loope
or
in
xchg
xlat
push
adc
mov
inc
pop
repz
pushf
sbb
sub
cmc
xchg
mov
mov
mov
add
mov
mov
push
adc
push
scas
je
or
call
stos
dec
fisubs
mov
or
inc
test
and
ja
inc
insl
aas
loope
jno
add
push
and
std
mov
aas
orl
add
jg
xchg
xor
push
and
xor
mov
add
jmp
and
lcall
icebp
scas
sub
nop
sub
xchg
xchg
call
movsl
or
movsb
les
lods
ds
aad
push
xchg
xchg
xchg
inc
shll
jmp
pop
sub
xchg
or
in
jb
or
jecxz
int3
inc
adc
cmp
or
imul
dec
js
dec
inc
sbb
xor
add
or
mov
adc
je
mov
mov
test
jg
daa
mov
xchg
pop
scas
add
inc
int
dec
mov
xchg
xchg
sub
int3
mov
xchg
cmp
inc
aaa
xor
inc
outsl
cmp
xchg
addr16
push
stc
int
adc
movsb
xchg
in
daa
out
inc
fs
cltd
push
and
sbb
mov
xchg
adc
icebp
xor
mov
icebp
mov
add
shll
testl
jae
mov
mov
jb
aaa
in
add
dec
leave
jns
xchg
add
add
mov
jmp
cwtl
dec
aaa
ret
fs
in
mov
out
enter
les
xor
sbb
lock
mov
notl
popa
add
das
xor
lahf
mov
inc
test
filds
add
push
sbb
adc
xor
jle
imul
mov
mov
icebp
mov
insb
icebp
adc
add
adc
mov
xor
push
outsl
pushf
dec
xorl
push
dec
js
mov
clc
cmc
push
subb
das
dec
test
mov
push
dec
mov
es
mov
hlt
into
movsl
sub
das
into
push
sbb
xchg
int3
test
jno
inc
xchg
mov
sbb
push
add
mov
push
hlt
push
rcll
add
mov
jg
mov
or
lahf
int3
push
les
mov
add
in
cli
mov
test
repnz
enter
jecxz
mov
call
pop
mov
push
ret
ds
mov
add
mov
cmpsb
lahf
push
shll
xchg
les
pop
lahf
mov
mov
add
push
and
pop
insl
lret
bound
out
mov
xchg
mov
and
sbb
test
jge
sahf
or
ret
push
inc
push
dec
cli
add
jno
mov
mov
mov
mov
lds
adc
sub
ljmp
mov
cmp
fldcw
les
mov
mov
in
inc
imul
jg
cmp
and
test
dec
test
mov
push
aad
popa
mov
dec
or
push
sub
mov
rolb
pop
pop
push
pushf
lret
mov
pop
inc
mov
xchg
aad
push
call
adc
mov
mov
sub
add
ret
add
jp
test
inc
cmpl
pop
push
loop
cwtl
mov
js
int3
inc
aad
movsl
xor
push
rcl
stos
mov
sub
inc
push
movsb
cwtl
insl
xor
flds
sub
push
int
call
test
pop
fucomi
aaa
add
je
sub
lahf
sti
sbb
inc
mov
mov
xchg
inc
mov
xchg
mov
mov
loop
movb
jne
inc
adc
gs
inc
movsb
xchg
push
cmpsb
test
test
sub
dec
pop
sbb
mov
ret
cld
mov
sti
insl
mov
pop
xchg
push
mov
aaa
sub
jp
mov
xchg
movsb
addr16
push
loope
repz
in
push
pop
push
pushf
ret
or
bsr
popf
mov
push
add
int3
or
test
mov
fldcw
je
jecxz
cltd
mov
aas
push
hlt
add
inc
pop
add
mov
adc
inc
push
ret
fwait
sahf
cmp
xor
mov
aam
cmc
cli
push
mov
icebp
xchg
int
movsl
lret
in
iret
inc
fisttps
xor
inc
add
les
addr16
inc
xor
push
xchg
out
mov
lret
dec
popf
psadbw
jns
lock
hlt
dec
add
test
imul
mov
les
fxch
shl
inc
cltd
xchg
testb
sbb
inc
add
out
leave
or
xchg
dec
add
jb
add
fstpt
mov
jae
jge
adc
orl
jbe
push
adc
mov
in
loopne
pop
shrb
mov
lea
ficoms
xlat
pop
jb
jg
addb
daa
inc
loop
inc
adc
clc
mov
add
out
xchg
or
adcb
rclb
fs
mov
sbb
xchg
stos
pop
dec
in
pop
pushf
iret
sahf
in
aam
pushf
push
cli
sub
test
insb
adc
les
inc
xorl
hlt
jno
xor
out
in
scas
imul
pop
jl
cmp
mov
mov
mov
xor
pop
out
xor
dec
push
mov
flds
filds
fiaddl
sub
negl
dec
je
xlat
xchg
pushf
push
sbb
adc
ss
popa
push
jecxz
gs
push
xchg
push
or
dec
inc
into
xchg
inc
fnsave
cmpsb
lods
repz
inc
jmp
adc
fildl
dec
dec
and
add
mov
in
xchg
xor
icebp
cmpsl
scas
xlat
orl
aas
out
push
push
mov
inc
fmuls
and
scas
adc
add
dec
xor
hlt
pop
add
sbb
or
test
and
lods
lock
int3
sub
loope
adc
xchg
pop
ds
and
or
loope
pop
call
or
adc
movsl
push
or
lods
dec
adc
or
lods
xchg
hlt
add
aad
push
add
push
ret
dec
mov
or
test
add
cwtl
or
or
or
lods
cmp
or
loope
rorl
or
add
push
xor
mov
sub
and
cld
add
or
int3
mov
insl
adc
add
push
orl
sbbb
lea
sub
sub
test
or
or
es
cs
push
fiaddl
sbb
mov
pop
inc
out
movsl
ret
repz
pushf
push
cltd
mov
pop
mov
movsb
cld
pop
xchg
cmpsl
test
sbbl
sub
jns
repnz
and
sub
loope
popf
inc
dec
lret
ret
shl
dec
ret
ret
lods
dec
mov
test
ficoml
add
xchg
mov
and
loope
in
dec
jg
push
mov
xchg
mov
pusha
inc
push
dec
sahf
dec
test
or
add
ss
pop
lret
je
add
inc
dec
inc
lds
mov
and
addl
mov
mov
ret
pop
mov
dec
adc
add
leave
incl
adc
pushf
or
or
or
or
pop
or
pushf
add
dec
ret
xor
lds
mov
adc
scas
dec
pop
xchg
inc
mov
or
xchg
stc
rcr
in
shll
enter
mov
stc
rcll
popf
andl
sti
icebp
add
inc
dec
fwait
push
test
out
push
loop
cmp
or
mov
mov
xchg
xchg
aas
xchg
add
les
je
xor
adc
push
in
in
loop
out
rcll
test
push
lods
mov
ret
leave
shll
inc
add
or
pop
inc
inc
sub
jecxz
insb
mov
fiaddl
js
dec
dec
loopne
inc
push
cmpsl
int3
jmp
fdivr
rolb
mov
cmp
inc
fstp
or
stc
mov
add
xor
nop
add
clc
jbe
and
lock
cmp
aam
arpl
add
movsl
inc
xchg
mov
push
inc
call
xor
fsubrl
xor
clc
ja
cmp
and
sub
imul
jg
dec
test
sub
call
loope
lcall
in
js
nop
outsl
shrb
sbb
add
lcall
mov
cltd
mov
push
std
iret
scas
mov
inc
stos
pop
ficompl
pop
and
jno
mov
xchg
inc
inc
push
mov
int3
sub
cmc
sbb
ja
sti
mov
pop
test
inc
int
js
pop
sbb
sub
mov
mov
pop
add
test
ja
push
out
fnstcw
popf
cmp
lahf
lahf
repz
mov
push
lods
or
cmc
call
addr16
aaa
pop
or
inc
in
icebp
jge
sbb
mov
outsb
cs
fs
dec
cmc
mov
mov
dec
in
jno
loope
sbb
loop
jno
ret
dec
fidivrs
sarl
sbb
or
adc
add
or
mov
sahf
in
loopne
js
jle
mov
and
in
bound
xchg
inc
leave
add
sti
mov
dec
or
inc
xchg
jmp
neg
mov
stos
sbb
clc
sbbb
mov
outsb
xchg
pop
aad
dec
or
shlb
stc
shll
pushf
cmp
test
stc
sarl
cli
jne
pop
push
jg
mov
jne
lea
or
push
xor
or
in
xlat
dec
pusha
das
repz
mov
jp
cmp
add
pop
cmpb
cmp
dec
fisubrs
inc
aas
mov
in
mov
or
push
sub
and
lret
out
xor
ret
jmp
fxch
push
add
adc
dec
inc
add
scas
inc
rolb
mov
cld
lods
leave
xlat
in
pop
add
ret
cmpsl
or
xorl
jmp
rcll
gs
lds
sub
das
test
or
mov
orl
mov
mov
cmp
lahf
rcrb
xchg
out
shrb
push
sbb
cmp
lret
std
sub
jmp
mov
cmp
aaa
jle
movl
call
push
jp
aaa
dec
xchg
in
insb
and
repz
adcb
add
and
roll
ljmp
mov
cmp
les
mov
adc
mov
and
cmp
outsb
cwtl
sbb
pop
bound
lret
ss
lods
sahf
call
add
sbb
aam
mov
mov
inc
dec
outsl
js
xorb
xchg
aam
mov
inc
and
inc
and
mov
adc
push
mov
mov
xchg
cmpb
fisttps
test
sub
mov
pop
out
jb
sbb
jns
jecxz
enter
stos
mov
loop
enter
push
jbe
aas
lcall
pop
dec
mov
call
add
xchg
pop
jae
imul
inc
mov
mov
push
jns
jnp
cmp
ret
jge
sbbl
sahf
pop
in
jnp
inc
xchg
popa
leave
add
add
lds
inc
pop
lods
clc
pop
sbb
shr
movl
xor
sti
scas
mov
push
and
xor
ljmp
jecxz
cltd
lea
fsubl
loope
mov
adc
xchg
xchg
call
xor
mov
xchg
inc
mov
xchg
adc
jbe
test
mov
mov
ret
js
lods
jnp
adc
mov
inc
inc
loopne
and
stc
xchg
mov
test
inc
mov
push
or
cmc
mov
adc
bound
xchg
push
sub
sub
sarl
xor
mov
test
push
cmpb
mov
shrl
call
fadd
lods
fsubp
and
int
inc
xorl
repnz
sbb
arpl
mov
or
xchg
fcomps
stc
and
or
mov
lock
push
jns
outsl
dec
into
and
jae
jge
or
insb
fisubrl
cmc
in
sbb
push
pop
clc
sahf
in
icebp
push
data16
fildl
lods
jno
jae
cmc
add
das
jno
jns
cmp
lds
mov
mov
or
hlt
mov
fmuls
lcall
mov
add
jge
fisubrs
aad
jno
arpl
mov
add
or
icebp
rolb
icebp
xchg
test
cmp
add
sbb
icebp
rol
or
mov
lods
sbb
or
outsb
test
mov
mov
mov
repz
xchg
dec
sahf
sti
shll
shll
ss
clc
inc
outsb
dec
das
mov
hlt
pushf
or
lret
mov
add
gs
repz
pushf
inc
int
roll
sub
push
mov
imul
aad
mov
adc
cmc
sub
sub
repnz
arpl
cmp
or
pop
mov
test
lods
sahf
cs
add
xabort
ret
push
adc
popa
sbb
jecxz
jg
js
jb
mov
inc
rcrl
mov
cmp
sbb
mov
enter
enter
push
push
or
xor
inc
data16
lret
jge
mov
enter
jge
jge
sub
cmp
nop
mov
xchg
inc
xchg
xor
addr16
scas
sarl
lds
xlat
mov
cmp
cmp
jecxz
push
cld
mov
aad
mov
inc
mov
pop
addr16
iret
fcomp
cmp
mov
mov
inc
mov
lods
adc
lds
hlt
xchg
sbb
push
xchg
arpl
inc
adc
mov
adc
lds
dec
cltd
add
jno
mov
lods
add
or
adc
lds
or
ret
ret
es
outsl
lret
stos
push
rorl
or
dec
popa
push
ret
ret
scas
mov
mov
adc
sbb
mov
or
scas
adc
mov
lock
mov
aaa
and
or
lods
lret
test
or
mov
test
dec
pop
mov
pop
and
inc
sarl
mov
sti
aaa
pop
les
nop
rcr
xorl
cs
fdivl
out
adc
stos
repnz
test
lds
fcoml
inc
fcomps
aam
mov
repnz
icebp
lods
int3
dec
sub
test
insl
ja
pushf
rcrl
fmull
dec
or
rorl
adc
add
and
pushf
jno
cmp
xchg
add
dec
repnz
add
in
add
inc
loope
mov
dec
add
jmp
or
enter
push
repz
mov
inc
jl
or
sub
pop
std
add
ret
lcall
lds
and
sub
in
mov
sub
les
shll
mov
push
adc
sti
loope
test
xor
inc
cli
push
mov
pop
jb
pop
inc
incb
test
mov
dec
jle
lahf
idivl
mov
inc
mov
int3
mov
in
loopne
test
lea
jg
test
int3
cmp
and
jecxz
stos
lock
out
add
stc
push
jecxz
inc
or
mov
inc
push
sub
mov
xchg
mov
test
sub
mov
popa
adc
and
cmpb
and
fiaddl
mov
rcrb
pop
rol
inc
adc
pusha
push
andb
jg
mov
jb
or
mov
inc
rorl
pop
push
imul
sbb
adc
pop
jno
xor
fs
jo
cmp
mov
in
or
rcrl
mov
sbb
shl
xchg
mov
andb
jns
dec
jle
jae
aam
loope
loop
xor
rol
push
insl
or
xchg
and
dec
jns
outsl
orl
jns
scas
mov
mov
mov
mov
push
sbb
rolb
add
and
movb
mov
sbb
jecxz
movsb
push
fs
pop
jmp
out
es
in
test
jecxz
lahf
sti
dec
in
repnz
daa
push
or
loope
je
in
ja
mov
dec
bound
rclb
add
and
or
enter
push
arpl
and
cmp
fcmovnb
push
daa
or
test
add
movsb
dec
or
dec
outsb
jl
sub
in
decl
or
mov
or
dec
ds
pop
xchg
je
mov
lds
and
cmp
adc
dec
pop
pop
std
jp
pop
push
rclb
addl
add
leave
pop
in
cwtl
adc
and
je
push
xor
fisubrl
inc
add
addb
loope
xchg
divl
mov
mov
pushf
mov
inc
inc
or
mov
sub
not
dec
inc
sbb
jl
adc
adc
ljmp
test
jmp
xchg
xchg
dec
gs
mov
inc
ret
mov
jecxz
sub
inc
mov
mov
ret
sahf
adc
mov
xchg
xor
cmp
and
push
ljmp
push
inc
cli
icebp
stc
shlb
sahf
inc
rorl
test
push
mov
rcrl
out
lods
es
lahf
cmp
jno
or
jmp
adc
add
dec
sub
leave
inc
cmp
xorb
add
insl
sbb
gs
out
ret
dec
sarl
shll
mov
push
cmp
push
fdivr
lds
push
test
daa
sub
arpl
or
ficoml
inc
cld
mov
in
jbe
imull
sbb
pop
ret
xchg
fcompl
test
xor
pop
pop
pop
lahf
xchg
dec
push
in
mov
jnp
out
or
in
jge
add
out
inc
mov
push
and
shlb
int
je
xchg
cmp
xchg
mov
cmc
pop
sub
jmp
jmp
fs
xchg
leave
or
pop
sbb
adc
pop
icebp
xchg
cmp
xor
aad
dec
arpl
xchg
pop
lcall
mov
pop
mov
outsl
xor
rcrl
pop
test
xor
ret
inc
int
ret
add
scas
jecxz
imul
nop
imul
repz
jg
dec
loope
call
cmp
movb
mov
add
dec
xchg
or
hlt
mov
mov
push
mov
movsl
or
mov
mov
mov
dec
jge
sbb
lahf
jecxz
xchg
test
leave
cmp
adcb
jg
mov
ret
int
test
addb
into
or
leave
or
subb
divb
cmp
movsl
and
pop
les
and
into
dec
mulb
add
rolb
pop
sub
dec
movsl
lahf
sahf
ljmp
sahf
out
lds
ja
enter
dec
cmp
sub
lcall
and
aam
in
mov
and
jp
mov
push
xor
cmc
lods
mov
sub
nop
in
mov
shl
pushf
rcll
mov
leave
ret
cmp
int
pusha
adc
rcll
aad
mov
add
and
outsb
imul
lock
ljmp
push
dec
popf
xchg
stc
adc
mov
or
xchg
or
orl
imul
or
in
imul
enter
clc
dec
rcl
int
mov
loope
inc
fisttps
mov
adc
dec
and
cmpl
test
mov
mov
xchg
adc
lds
add
movsb
out
jg
andb
dec
adc
inc
inc
addr16
out
cmp
lret
es
cwtl
clc
in
stos
aad
adc
aad
add
lock
cmp
mov
adc
lcall
shll
pop
mov
arpl
scas
hlt
jbe
jae
leave
sbb
js
jb
xchg
fidivs
hlt
xchg
add
shlb
inc
sbb
in
or
and
jae
imul
rcr
cmp
sahf
ljmp
and
hlt
test
roll
sub
rcrl
int3
mov
inc
mov
push
jmp
repz
roll
adc
out
push
mov
inc
aas
push
xchg
jg
jno
subb
mov
int3
mov
addr16
loop
out
adcb
lock
adc
sbb
inc
int3
jmp
leave
adc
ret
jg
xorb
jg
mov
mov
lea
xchg
xchg
lahf
jecxz
xchg
xorl
mov
sbbb
mov
add
sub
into
or
sub
popf
in
outsl
popa
stos
test
cmp
je
ror
mov
cld
je
mov
sbb
jns
nop
cwtl
push
arpl
xchg
addr16
addr16
ficoms
push
ljmp
loope
and
jbe
cmpsl
aaa
repz
ljmp
roll
into
xchg
addr16
xchg
inc
lds
shr
sub
loope
rol
inc
ja
fildl
mov
inc
scas
or
inc
push
inc
repz
pop
lds
in
shll
mov
or
lea
in
ret
mov
xchg
sbbl
ret
filds
lods
jecxz
into
addr16
push
mov
and
in
fsubrs
loopne
nop
aas
mov
cmp
push
popf
outsb
or
pop
imul
inc
inc
sbb
ret
or
into
push
add
push
or
adc
mov
add
fs
mov
fcoms
ss
jae
inc
adc
lds
bound
lahf
fs
push
data16
jbe
hlt
xchg
movsb
movsb
and
sub
ret
xchg
adc
call
in
jnp
hlt
push
mov
mov
pop
mov
pop
inc
test
pop
add
sti
scas
fwait
mov
xchg
push
push
cli
jb
cmp
psubsb
pop
movsb
sbb
fnsave
ljmp
xor
aaa
test
outsb
sbb
dec
gs
or
arpl
mov
ds
out
xchg
movl
int
ss
bound
or
negb
dec
sub
filds
pop
addr16
fbstp
cmp
mov
inc
hlt
xlat
and
inc
xlat
dec
jb
test
icebp
push
push
aam
push
xor
mov
adc
mov
clc
mov
mov
leave
or
mov
out
or
clc
andl
pushf
push
xorb
cmp
orb
subb
or
sub
addr16
bound
je
int3
lahf
dec
in
push
lcall
lret
enter
les
jg
out
arpl
in
jno
loope
add
mov
nop
dec
mov
arpl
leave
adc
arpl
popf
add
inc
sub
stos
ss
cs
in
iret
mov
call
push
mov
jno
aas
lds
daa
aam
sub
jnp
sbbl
mov
mov
or
ljmp
dec
dec
lods
cltd
hlt
into
pop
or
sbb
shrl
mov
enter
test
push
push
push
out
or
or
cmp
sbb
mov
and
out
push
mov
repz
add
out
repz
rcl
xchg
out
push
dec
in
cs
inc
lret
rorb
sbb
jmp
fdivrs
pop
sub
leave
lret
or
push
add
or
enter
lahf
dec
std
mov
or
sub
int3
in
xchg
scas
repnz
xchg
add
loop
ret
inc
mov
ret
icebp
je
dec
adc
in
ret
lea
mov
mov
in
ret
test
sbbl
sbb
and
daa
in
ljmp
xor
popl
rorl
jge
or
lcall
xlat
sti
jecxz
or
ror
jge
xchg
popf
xchg
rol
inc
insl
dec
into
add
insl
cld
push
subb
push
inc
ss
aas
adc
inc
jg
inc
xor
sub
inc
movsl
das
insl
inc
idivl
jmp
push
and
lcall
cld
in
rorl
shrb
ret
and
ss
cmp
sub
and
xchg
hlt
loope
inc
cmp
mov
mov
inc
jae
enter
xchg
pop
pushf
orl
sub
loop
adc
add
mov
xor
sbb
loop
sub
sub
jns
push
pusha
out
es
in
js
lahf
xchg
pop
jbe
sbbl
adc
addr16
mov
and
inc
push
mov
ja
loope
inc
cli
xorb
xor
js
fistps
jp
jnp
repz
inc
inc
jge
aad
jae
scas
sbb
jbe
repz
add
int
popa
fucomi
sub
outsb
stos
mov
or
ljmp
mov
aam
cwtl
inc
into
mov
pop
arpl
or
inc
push
es
cmp
mov
jecxz
ret
pand
add
push
and
shl
inc
cmpsl
push
adc
ret
aam
ret
cltd
enter
inc
mov
and
dec
pop
or
add
or
fisubl
test
mov
xchg
mov
mov
and
xchg
imul
push
cmpsb
lds
adc
cmp
xchg
mov
dec
cli
jl
adc
fdivl
sbbb
pop
ss
dec
insb
mov
clc
add
loope
xor
cmp
push
test
jp
aam
cmpsb
mov
insb
ret
xorb
inc
neg
jae
icebp
mov
xchg
push
and
pop
dec
sti
leave
cmp
ja
call
dec
add
call
add
dec
add
js
test
or
test
aas
loope
stos
or
mov
add
add
pop
xchg
cmp
inc
xchg
inc
roll
lcall
in
push
inc
int3
push
pop
leave
outsb
out
push
push
mov
push
sbb
mov
cmp
mov
or
and
filds
or
shr
xor
pop
psllw
dec
les
loope
icebp
aam
xor
rorl
xor
aaa
int
mov
out
nop
xor
adc
push
and
dec
imul
arpl
jns
sub
insl
or
push
leave
add
out
enter
lret
push
dec
mov
mov
fsts
fldenv
mov
xlat
divl
push
push
ficompl
inc
in
mov
rol
repz
jle
in
cmp
hlt
adc
cmpsb
dec
mov
and
mov
cmp
mov
arpl
movsl
mov
fisttps
push
repnz
es
pusha
jge
dec
adc
ss
or
mov
loope
mov
mov
mov
push
jno
pop
or
inc
xchg
add
add
pop
cmpsl
and
inc
xchg
and
fdivp
add
adc
repz
aas
fdivrs
mov
fs
insl
and
push
lods
divb
popf
and
daa
cmp
sub
sahf
and
aam
popf
call
mov
and
and
or
adc
pushf
pop
pushf
mov
mov
int3
pop
jle
enter
inc
add
push
mov
inc
dec
pushf
loope
xchg
xorl
in
icebp
pop
sar
in
inc
push
add
lcall
push
test
sub
dec
ret
sahf
xor
add
ds
adc
inc
jns
mov
pop
push
arpl
cmp
ret
pushf
add
pop
sbb
jmp
int
fnsave
lret
jo
loope
sub
daa
cmp
xchg
mov
jno
sbbb
movsl
fistps
movsl
jecxz
in
jecxz
test
lods
xchg
in
fdivs
leave
lret
lds
cmpsb
lahf
dec
lods
arpl
icebp
jo
sub
data16
clc
movl
xchg
shlb
xchg
jb
sub
aaa
scas
mov
addr16
or
mov
dec
adc
adc
inc
jg
fsubrs
xchg
ret
ja
or
xchg
jecxz
or
pop
mov
or
pop
in
test
xchg
in
inc
mov
icebp
jno
cmp
dec
arpl
jno
les
add
rorl
cmp
cmpb
inc
ret
cmp
and
lods
insb
mov
stos
pop
daa
call
stc
mov
cltd
shlb
mov
sub
mov
rorb
cmp
jae
enter
cmp
roll
add
in
leave
loope
lea
adc
xchg
into
and
ja
cwtl
inc
mov
outsl
inc
pop
xlat
mov
xchg
add
fs
xchg
xchg
inc
je
js
movsb
push
add
dec
dec
inc
test
sbb
in
cmpsb
xchg
cwtl
jbe
add
jecxz
cmpsl
aas
lods
jbe
mov
xor
dec
adc
xor
shlb
lds
imul
int
lea
dec
stos
movsl
adc
fstp
or
pop
sahf
sub
adc
mov
push
in
sti
or
es
js
xor
sbb
paddsb
sbb
inc
cmp
test
dec
mov
mov
scas
imul
add
xchg
push
xor
or
out
add
push
aaa
cmp
xchg
ret
push
pop
aaa
pop
pop
out
xorl
pop
push
out
lret
imul
mov
nop
aas
sub
sub
in
mov
pushf
lret
mov
or
je
pop
and
mov
xchg
inc
hlt
dec
ja
inc
hlt
lret
jl
adc
or
mov
cwtl
pusha
mov
dec
mov
mov
or
or
ficompl
stc
in
movsb
push
inc
or
inc
testb
inc
push
add
or
sbb
cmp
jno
repz
add
movsl
out
pop
fsubs
decb
inc
xor
xlat
push
lds
mov
adc
add
fsubrl
leave
imul
cld
push
jns
addr16
hlt
mov
mov
in
add
xchg
cli
or
lods
cmp
mov
add
and
mov
imul
ret
push
rcll
dec
xchg
pop
ror
mov
sbb
pop
sbb
or
adc
dec
lcall
daa
mov
daa
pop
pop
int3
stos
sub
lret
xchg
xchg
add
sbb
adc
ds
jno
xor
je
pushf
icebp
out
icebp
into
xchg
cmp
repz
int3
aam
lea
in
cmp
pusha
dec
cwtl
cs
mov
pop
dec
ret
pop
or
adc
scas
jbe
mov
jns
mov
leave
or
dec
cltd
xchg
mov
loope
aas
lret
ret
mov
mov
jbe
or
inc
ret
or
pop
jnp
shrb
cmpsb
add
sbb
dec
cmp
pushf
xchg
sbbb
jmp
add
js
shrb
pushf
pop
mov
lea
or
sub
sub
add
cmpsb
dec
rol
and
divb
lock
xchg
loope
loope
movlps
xchg
jmp
stos
xor
inc
mov
dec
int
sub
mov
stos
xor
xor
je
mov
pusha
push
adcb
inc
xor
fisubrl
call
xchg
inc
adc
cli
leave
xor
les
cmp
mov
mov
inc
xor
roll
push
movsb
orb
adc
jg
subb
sub
ret
out
test
mov
in
ret
inc
push
lea
hlt
fcmovb
xchg
xchg
fcmovb
inc
jbe
mov
out
dec
sbb
adc
and
lahf
not
xchg
pop
aaa
sbb
or
cmova
pop
and
mov
das
jg
mov
jbe
rorl
fcomi
add
cmc
and
inc
pop
sahf
cmc
xor
mov
cmp
push
sbb
ficoml
xor
int
xor
or
mov
dec
cmp
inc
jae
nop
test
or
cwtl
xchg
adc
mov
push
aas
xchg
fwait
ja
mov
dec
mov
xor
bound
inc
test
out
xchg
xor
inc
mov
popa
testb
lock
jle
push
orb
ds
outsb
test
pop
cmc
jb
push
out
sub
cmc
inc
xchg
dec
inc
daa
push
stos
in
dec
test
mov
inc
out
mov
aad
jmp
out
out
mov
adc
cmp
test
dec
xor
push
js
rorb
dec
mov
add
inc
inc
fsubl
ret
int
out
andl
cld
jge
mov
push
cltd
pushf
in
push
aad
add
mov
ret
leave
pop
jno
dec
stos
shll
ds
out
lret
add
mov
sbb
in
add
inc
mov
fiaddl
sti
xor
test
xchg
add
xchg
inc
pop
inc
call
mov
jp
je
in
sahf
aam
ja
test
cwtd
mov
fwait
scas
scas
cmp
shll
loope
idivb
mov
repnz
test
popf
pushf
sub
lods
xchg
cmp
xchg
das
jbe
pusha
loope
fwait
imul
out
jb
xchg
mov
mov
xor
inc
in
ret
inc
loope
icebp
in
icebp
testb
out
jb
mov
cmc
mov
jg
das
cs
pop
call
jmp
imul
lods
ficoml
js
mov
sbb
rolb
sti
mov
daa
add
arpl
sub
ret
adc
push
mov
inc
repz
inc
mov
repz
or
int3
pop
sbb
in
mov
sbb
mov
dec
daa
ret
sbb
adc
repnz
jo
pop
cmp
jno
xchg
mov
push
jb
xor
sbb
sub
dec
xchg
inc
daa
and
or
cmpsl
dec
stc
test
and
add
movl
repz
clc
jmp
je
inc
fadd
fdivrl
arpl
and
push
loopne
jno
adc
xor
movsb
out
mov
shl
add
or
xor
rcrb
xor
cli
cmc
fsts
leave
fsts
push
ja
add
jle
jg
push
cld
mov
incl
adc
enter
sbb
pop
mov
push
pop
mov
mov
cld
pop
add
daa
ss
or
mov
fs
mov
add
lret
fnsave
push
test
and
mov
dec
adc
mov
xor
ss
cmpsl
lcall
addr16
test
test
inc
leave
xor
in
ss
movzbl
pop
cmp
or
cltd
add
mov
test
push
push
arpl
inc
scas
mov
inc
xchg
jb
push
pop
fistpl
int3
add
or
movsb
push
cwtl
or
cltd
jl
imulb
and
mov
mov
arpl
imul
pop
cmpsl
jge
call
xlat
dec
push
sub
fsts
push
out
icebp
adc
pop
sub
adc
inc
adc
xchg
hlt
movsb
out
je
out
and
and
push
cmc
sti
push
roll
fisttpll
mov
mov
fcoms
ret
int3
inc
mov
inc
jl
jge
fdivl
out
mov
sbb
lods
cs
push
pop
push
add
ret
lret
cwtl
or
scas
call
mov
add
add
jge
and
jb
orl
loope
or
mov
cmp
je
push
pop
jno
in
insl
fnstenv
mov
add
jbe
mov
xor
jno
mov
xchg
stos
insb
xchg
dec
xchg
pop
fwait
xchg
xchg
mov
outsb
sbb
lret
cmpsb
lahf
iret
hlt
imul
dec
xor
mov
mov
push
popa
sarb
inc
push
out
cmp
je
outsb
jl
xchg
cwtl
cs
pop
xor
add
les
sbb
cs
fs
loopne
xor
or
lods
cmc
inc
push
jbe
xchg
jne
mov
int3
rorl
mov
test
fsubrs
lret
mov
cmpsl
rcll
test
mov
adc
pop
xor
push
dec
test
test
mulb
adc
lret
xchg
cwtl
xor
push
loope
nop
les
sub
xor
into
add
into
test
repz
add
xor
push
add
mov
movsl
or
jbe
scas
or
inc
into
cltd
push
jno
and
push
mov
insb
sub
je
fwait
mov
int
lods
add
out
dec
in
jge
roll
ss
dec
fiadds
test
lret
shl
cmp
jl
int
or
push
les
sbb
stos
inc
mov
xchg
push
or
pop
out
or
js
cmp
das
imul
ds
mov
ljmp
loop
xor
push
mov
mov
and
cmovbe
xchg
lret
inc
inc
push
hlt
xor
adc
fistpl
arpl
les
aad
inc
movsl
dec
adc
in
fcomip
inc
lea
stos
jmp
stc
adc
dec
sbb
mov
xchg
in
xchg
cmp
inc
mov
fisubs
popa
lcall
pop
sub
mov
hlt
xor
jecxz
adc
xor
dec
out
repnz
movsb
inc
mov
icebp
es
out
imul
je
ret
mov
stos
jp
bnd
jae
roll
dec
jb
jp
clc
fists
jp
ret
shl
adc
out
es
jp
pop
jo
push
in
cwtl
cmpsb
adc
in
ret
aad
xchg
rcll
loope
in
pop
lds
data16
sub
int
outsb
dec
mov
les
jecxz
outsb
xor
xchg
dec
jecxz
mov
fdivl
cmp
cmp
push
repz
inc
jl
sub
pop
push
dec
fnstsw
mov
scas
jg
ret
sti
mov
rcll
jmp
mov
repz
and
cmc
xchg
inc
in
add
shrb
test
push
and
scas
xchg
les
sbb
les
ret
xchg
inc
mov
arpl
stos
jne
sti
push
adc
dec
mov
ds
cltd
fs
ss
jns
adc
lods
out
dec
jns
sahf
xchg
bound
mov
stos
aam
loope
add
mov
pop
cltd
test
incb
rcrl
pushf
and
std
or
leave
hlt
lcall
in
xor
cli
inc
call
fdivrs
lea
sbbl
jbe
add
jp
inc
jl
mov
mov
jb
add
jg
repnz
mov
jle
icebp
fnstenv
iret
enter
or
sbb
dec
xor
jne
mov
js
cmp
push
inc
mov
push
xor
scas
ja
js
push
addb
jge
into
ja
aad
jae
insl
bnd
in
jecxz
pop
test
out
insb
jno
in
xchg
movsl
in
xor
add
out
cmp
dec
fistpl
lds
push
in
ljmp
cltd
je
jns
sub
push
jle
jns
cmp
jns
jmp
pop
and
jns
push
push
call
xchg
jne
push
lret
sbb
in
or
dec
mov
inc
push
mov
daa
xor
int3
pop
jle
int3
or
aas
mov
mov
cmp
mov
clc
dec
adc
jmp
call
ss
lds
jno
lcall
dec
push
jg
sub
pop
fldenv
scas
xchg
push
movsb
rclb
cs
ds
xchg
inc
inc
sarl
cli
and
fstpl
nop
out
or
xchg
lret
ss
mov
lret
les
bound
cwtl
nop
cli
in
inc
clc
and
mov
int
je
and
or
cmp
arpl
dec
adc
sbb
out
mov
and
aam
not
repz
fistpl
push
cmp
sub
or
xor
mov
push
nop
loop
aam
pusha
xor
ret
mov
cmp
fnstcw
or
xor
fs
pushf
std
fildll
xor
clc
arpl
rclb
sti
and
xchg
shll
rol
stos
ss
das
adc
mov
mov
xlat
mov
out
or
cmpsl
add
hlt
xor
in
jbe
mov
bound
mov
cmpsl
xchg
push
push
mov
dec
fists
fisubrl
xor
add
mov
xchg
mov
jl
ja
pop
lahf
pusha
ret
or
or
int3
mov
in
outsl
pusha
or
xchg
test
or
xchg
repz
add
mov
test
and
fadds
dec
lock
lret
inc
push
addl
xchg
fdivs
mov
inc
sbb
rcrb
ja
sbb
push
loopne
je
push
push
lahf
push
fisttpl
in
push
mov
mov
mov
pop
mov
nop
jb
xchg
ja
add
in
mov
add
data16
xor
loope
inc
fisubl
dec
mov
fs
mov
imul
rcrb
cmp
call
xchg
call
xor
scas
sbb
daa
add
incb
ficoml
dec
iret
add
dec
in
dec
push
sub
sbb
mov
sbb
lret
dec
mov
in
or
xchg
shll
popa
xchg
jbe
rcrl
mov
mov
inc
and
in
out
inc
movsb
lcall
or
push
fldt
in
movsb
cmp
mov
fistl
lea
test
pop
sbb
add
aam
jmp
sbb
rcrb
dec
dec
mov
mov
cmp
pop
sub
sbb
sub
outsl
mov
or
mov
xor
daa
cmp
add
cmp
mov
jle
pop
xchg
out
pop
addl
out
mov
ljmp
ds
sbb
cmpxchg8b
mov
mov
push
and
mov
mov
inc
adc
icebp
mov
mov
mov
push
jne
rcl
mov
int3
clc
jne
fisubrl
aas
mov
mov
js
add
jg
insl
inc
xchg
lret
dec
and
jge
into
dec
fdivrl
lock
inc
jmp
push
in
fsubrs
or
cmpb
int
ljmp
xchg
mov
add
or
inc
call
fbld
mov
mov
xor
jmp
xchg
xor
lahf
cmc
lret
sbb
or
inc
leave
stos
xchg
dec
pushf
lds
sub
test
inc
add
xchg
cmp
test
cltd
inc
mov
sub
repz
push
and
mov
test
add
sbbb
test
shr
inc
xor
dec
or
daa
popa
out
loope
repnz
leave
mov
mov
aaa
pop
repnz
inc
std
cwtl
and
adc
shlb
fs
fnstsw
mov
dec
jmp
shr
fwait
movsl
testb
inc
sbb
pop
movsb
in
stos
dec
xchg
inc
ss
push
inc
cmp
jae
fcmovbe
orl
hlt
jbe
out
add
es
mov
push
hlt
ret
cmpsb
dec
ja
mov
cmp
inc
test
push
dec
addr16
cwtl
stc
push
lods
pop
daa
fsubp
and
add
bound
jmp
xor
xor
test
mov
ljmp
mov
rol
xor
imul
mov
push
adc
es
inc
pop
inc
jmp
push
inc
xchg
mov
stos
xchg
scas
mov
fdivrl
scas
movb
aad
mov
addb
test
shlb
dec
dec
fidivs
cli
mov
add
mov
fs
stos
imull
inc
sub
ja
push
bound
repnz
sbb
cmpb
xchg
pop
arpl
in
jecxz
loope
cmp
icebp
lds
cwtl
mov
cmp
and
xor
cbtw
xor
mov
and
in
mov
push
test
or
xchg
and
adc
imul
adc
imul
mov
leave
jno
add
and
cmp
test
sbb
xlat
pop
and
add
mov
push
mov
push
mov
cld
ljmp
xor
sbb
pop
dec
je
cld
mov
call
mov
cmpl
outsb
out
dec
ffreep
sbb
in
mov
inc
xchg
loop
add
cmpsb
fs
sbb
mov
inc
ret
fdivl
add
ficompl
add
xorb
aad
sub
sub
mov
xchg
pop
xchg
imul
rclb
cld
ret
movsb
mov
daa
fstp
xchg
ret
movsl
push
cld
aam
push
in
push
mov
xchg
repnz
xor
in
mov
test
cmp
cmp
inc
mov
movsb
sbb
frstor
inc
push
pop
pushf
xchg
inc
sub
push
test
outsb
xor
mov
pop
scas
push
rclb
aad
sbb
cmpsl
sbb
cwtl
inc
pop
in
nop
jne
iret
push
lahf
or
pop
lahf
shl
dec
inc
mov
inc
pop
imul
enter
mov
in
test
cmpsl
leave
ret
push
fwait
ret
pop
inc
mov
add
cltd
js
inc
sbb
and
push
ret
push
dec
aaa
jge
sub
xchg
outsb
js
fisttps
jl
mov
pop
outsb
push
leave
or
lds
jecxz
test
insl
daa
sub
inc
ror
in
bound
jl
repnz
push
add
mov
mov
pop
mov
adc
pop
bound
xor
pushf
es
shrb
adc
xor
call
pushf
test
or
inc
adc
cwtl
dec
sbb
call
lods
sarb
xchg
mov
xchg
cmc
test
mov
add
and
inc
mov
ljmp
call
sub
imul
adc
pop
inc
or
mov
lock
flds
aas
cmp
insb
mov
loop
es
mov
rdpmc
je
mov
insb
loope
pop
fnstenv
rcr
out
mov
cwtl
dec
std
ret
or
arpl
mov
xchg
and
add
mov
in
jnp
pusha
repz
clc
imul
negb
push
xor
push
test
mov
or
dec
push
ret
test
lcall
inc
aaa
cmp
pop
pop
in
in
pushf
es
icebp
les
inc
add
rcl
mov
sub
in
test
popaw
fsubrs
dec
pop
inc
xchg
xor
arpl
cmpsl
or
mov
stos
ss
mov
out
xchg
addb
and
aam
in
jns
mov
cld
lods
mov
push
sbb
cmpsl
and
push
adc
xor
xchg
add
icebp
fisttps
or
xchg
iret
leavew
outsb
push
and
pop
dec
fisttpl
pop
in
or
mov
xor
fiaddl
idivl
ja
dec
jp
sti
push
cmp
xchg
daa
shl
mov
int3
test
aas
movntps
or
mov
scas
cmp
lds
out
pop
dec
sbb
adc
pushf
xor
cmp
inc
jb
test
mov
ja
cmc
cmp
inc
xor
mov
aad
jle
in
pop
push
dec
les
ret
insb
and
gs
mov
cmpsl
test
mov
loope
idivb
ret
mov
push
jle
sbb
pushf
aas
mov
mov
mov
test
ret
sahf
das
outsb
or
ret
mov
jle
mov
pop
or
inc
aas
gs
and
pushf
lret
sbb
sub
mov
mov
sbb
xchg
dec
dec
outsl
imul
xchg
cwtl
or
xor
xor
lods
loope
movl
lret
sbb
aaa
inc
inc
push
and
mov
cmpsl
mov
shll
mov
sub
sbb
lret
mov
push
in
fdivrs
push
int
pop
aad
int
push
dec
enter
cmp
inc
jne
and
ret
push
jne
int3
ret
sbb
push
sbb
add
fsubrp
dec
fimull
shll
in
loopne
sbb
sbbb
xor
bound
fs
scas
or
movb
jp
and
mov
jge
jecxz
xchg
flds
dec
mov
pop
xchg
mov
push
mov
mov
cmpsl
push
mov
mov
out
or
pop
lcall
ss
sbb
dec
lea
add
mov
push
into
insl
mov
push
incl
mov
xchg
mov
bound
popl
dec
adc
loope
mov
sub
jle
xor
sti
scas
jnp
js
lods
cmp
adc
popa
add
in
lock
jmp
mov
int
inc
mov
movb
gs
hlt
push
cmp
add
fldenv
test
adc
cmp
std
pop
pop
mov
cmp
movsb
xchg
push
rorl
lds
loopne
push
lds
xchg
xchg
jecxz
leave
mov
ljmp
xchg
mov
inc
loopne
fmuls
stc
aaa
xchg
lods
fimull
shr
call
add
jl
call
xchg
sbb
loope
test
test
in
shr
xor
push
mov
cmp
in
inc
xchg
add
or
dec
stos
repz
loope
andl
push
mov
loope
push
add
jae
repz
mov
cwtl
je
jle
in
adcl
repz
cmp
rcr
int
shr
test
ss
dec
xlat
movsb
xchg
gs
repnz
jbe
jo
jns
addl
popa
add
shrl
or
dec
int3
mov
testl
outsb
push
jl
loopw
push
js
pop
int
out
mov
jg
shl
cmp
js
loopne
mov
lret
push
into
adc
dec
popa
ss
or
add
jle
jnp
out
and
sbb
dec
imul
sub
adc
or
lods
cwtl
dec
sbb
adc
mov
test
les
pop
or
movsl
jge
xor
outsb
adc
mov
repnz
xchg
aas
icebp
add
cltd
adc
xchg
repnz
ret
repnz
push
rorl
pop
daa
sub
sarl
leave
sbb
icebp
jae
sbb
push
add
push
sub
es
enter
push
push
xchg
cli
data16
stos
jbe
or
or
mov
divb
mov
inc
mov
int
je
scas
sbb
dec
pop
enter
data16
fcomps
jg
fstpl
and
jno
push
xchg
lret
push
ret
or
mov
test
mov
cmp
mov
test
jl
mov
inc
mov
mov
push
or
stos
jg
or
or
jo
push
aad
cmp
adc
ffreep
xchg
pop
jg
movl
je
push
pop
fildl
in
shlb
push
mov
and
mov
inc
mov
loopne
loope
or
fsubrl
mov
in
sub
and
sub
inc
xor
popa
jmp
dec
loope
out
icebp
shr
negb
fcomps
scas
inc
sbb
rcl
lock
daa
hlt
dec
hlt
lret
lret
loop
das
push
jl
add
dec
or
or
sbbl
mov
insl
in
lret
push
mov
iret
and
rorl
xchg
inc
xchg
inc
add
adc
add
cmc
ret
repz
xchg
inc
inc
test
hlt
mov
data16
ror
add
in
push
sbb
inc
cmc
mov
add
mov
inc
inc
int3
mov
mov
or
xor
test
inc
or
add
lret
std
or
and
pushf
and
sbb
add
rep
shl
sbb
jae
lock
mov
sarl
or
js
repz
test
pop
data16
icebp
daa
in
pop
fsubl
adc
or
shll
mov
or
mov
movsb
lret
jns
xchg
mov
enter
add
inc
mov
aaa
mov
cmp
in
sub
fnsave
inc
mov
adc
xlat
mov
sub
push
adc
in
xchg
lcall
mov
xchg
movsb
scas
jo
in
test
cld
cs
jne
add
loopne
jne
es
ret
pop
lret
jl
loopne
jno
jp
or
sbb
and
inc
ss
xor
test
or
inc
inc
rol
and
and
les
fwait
repz
sbb
jge
adc
fs
mov
jb
add
ds
into
dec
lods
or
add
scas
test
push
adc
mov
aam
mov
dec
cld
sub
scas
aad
inc
cld
xor
repnz
sbb
fs
jmp
xor
cmpb
push
ds
dec
repnz
test
lds
fiadds
cmp
sub
test
mov
ds
adcb
add
packssdw
int
loope
mov
sahf
inc
adc
aam
loope
mov
mov
arpl
inc
pop
pop
ja
les
mov
and
les
or
addr16
mov
enter
ror
dec
fisubrs
add
addr16
or
and
loope
lods
cmc
lahf
adc
and
loop
add
xchg
mov
repnz
addr16
repz
xchg
int
add
sbb
lcall
or
int
out
and
push
xchg
cmc
dec
test
jmp
sbb
or
es
inc
out
arpl
fs
xchg
ja
aad
mov
dec
ds
inc
jecxz
inc
sub
adcl
ja
aam
mov
xchg
or
call
add
repz
aas
or
stos
aad
stos
insb
test
jp
adcb
mov
test
dec
cmp
mov
sarb
mov
cmpsl
sbb
and
ds
add
cmp
or
cmp
cmp
nop
xchg
mov
xor
shrl
mov
ja
cld
inc
cmp
ret
xchg
and
jo
div
xor
aad
sbb
push
add
inc
outsl
int3
push
insl
add
inc
mov
jbe
in
mov
sub
andl
xor
xchg
mov
mov
lods
in
jecxz
in
jmp
push
xchg
pop
mov
mov
xchg
adc
in
xchg
mov
and
ret
out
xor
ret
push
aad
push
lahf
mov
inc
push
ret
aam
inc
push
inc
pop
movsl
in
dec
inc
cmp
rep
mov
dec
xchg
add
in
cmc
hlt
ss
cmp
cmp
roll
enter
mov
mov
hlt
shrb
out
ds
test
dec
jecxz
jae
jb
dec
imul
sub
xlat
push
in
mov
xor
mov
xchg
stos
mov
stos
mov
push
in
pop
sbb
notl
jno
int3
mov
ret
dec
dec
push
in
cmpsb
ret
dec
inc
fdivl
mov
mov
jecxz
xlat
xchg
pop
je
add
out
movb
or
shlb
dec
hlt
dec
add
pop
shl
mov
cmc
rcl
ret
mov
lods
pop
sub
jno
ret
mov
je
sarb
push
loope
inc
pop
add
dec
adc
int
mov
data16
push
jne
mov
inc
mov
test
leave
cmp
sar
jb
inc
mov
jle
shlb
pop
ret
mov
addb
cs
adc
and
pop
aad
add
sub
push
cs
pop
in
shlb
mov
mov
cli
pop
xor
out
test
cmpsb
add
ss
data16
jp
push
iret
xchg
fwait
adc
adc
fimuls
mov
xlat
mov
int3
out
les
es
lds
loope
push
dec
out
mov
and
inc
es
test
or
push
leave
adc
cmp
loop
hlt
mov
xchg
arpl
pop
jns
stos
cld
outsl
pusha
xchg
and
pop
test
xchg
push
in
fcmove
xor
es
icebp
mov
dec
push
mov
adcl
push
mov
dec
repnz
leave
and
dec
dec
roll
pushf
mov
dec
dec
hlt
in
cmpsl
movl
lea
mov
push
test
or
fistl
pop
cmpsb
add
scas
stos
lea
roll
enter
adc
cmp
push
ds
cmp
cltd
mov
mov
cmp
cmp
or
roll
mov
roll
lea
add
cld
lods
mov
mov
int3
xchg
aam
outsb
adc
int3
pusha
pop
mov
xchg
insb
repnz
inc
ss
outsl
or
cwtl
xchg
add
lods
roll
outsl
or
sbb
and
lock
rcll
or
scas
cmp
pop
mov
ss
movb
sbb
pushf
ja
push
pop
stos
jbe
addl
fldt
pop
inc
sub
and
or
mov
rol
add
push
xor
out
verr
dec
and
lret
adc
jne
sub
xlat
mov
mov
loop
push
movsl
mov
fnstenv
fnsave
je
jle,pn
push
loopne
lock
and
int3
enter
mov
mov
les
sbb
cmpsl
or
scas
js
sbb
outsl
cmpsl
fildll
clc
or
sub
das
pop
pop
xchg
adc
mov
xchg
mov
in
push
or
inc
pop
lret
cwtl
inc
inc
into
jg
jb
and
aaa
and
mov
mov
dec
jbe
inc
addr16
inc
loope
mov
xchg
test
mov
pusha
add
dec
mov
add
fstps
push
xchg
push
inc
jbe
adc
and
clc
xchg
jne
cmpsb
cmp
lock
and
jge
fdivl
sub
int
inc
jg
sub
mov
cmp
or
add
sub
jle
jmp
push
loope
leave
in
insl
add
jmp
push
mov
pop
push
xchg
pop
push
les
adc
cmc
xchg
addl
xchg
in
pushf
mov
adc
adc
fdivr
dec
add
cmp
pop
mov
lods
test
pop
mov
lock
filds
insb
cmpsb
in
inc
enter
scas
lcall
cmp
fisubs
xchg
stos
mov
push
lock
adc
les
xchg
mov
mov
loope
out
inc
push
add
roll
pop
adc
sti
fstpt
lret
jno
movsl
cs
cmpsb
mov
in
ret
xchg
push
and
jnp
in
jno
repz
and
scas
aaa
sbbb
jl
or
test
jle
mov
add
mov
inc
data16
out
xor
ja
inc
cmpb
hlt
mov
push
flds
shr
adc
faddl
mov
jle
mov
mov
and
popf
adc
cmpsl
ljmp
sti
add
push
pop
xorl
shll
sar
xchg
out
sarb
lret
les
xor
outsl
scas
xchg
add
dec
fldenv
in
fldt
and
dec
pushf
xchg
pushf
and
mov
lcall
fwait
adc
add
cmp
adc
pop
jp
pop
ljmp
or
jl
jge
movsl
loope
xor
fstpl
push
test
inc
mov
loop
jnp
int
dec
aam
incl
push
xchg
test
scas
xchg
xchg
pop
std
mov
mov
jp
pop
xor
pop
mov
fnstcw
push
aad
jae
mov
dec
test
inc
shr
bound
pusha
clc
daa
lahf
mov
lea
out
jmp
aad
add
add
cli
jle
mov
add
or
shrl
cld
test
lods
cmp
jne
cs
ja
add
ret
dec
das
lcall
cld
repz
in
js
addr16
sub
iret
lahf
pop
aas
and
xchg
outsb
xchg
adc
sbb
jnp
cmpsb
and
push
adc
xor
into
jle
pop
mov
mov
jb
inc
iret
outsb
ljmp
loope
roll
or
sbb
ror
xchg
xor
popa
test
jecxz
add
ret
lods
enter
add
cwtl
push
sub
imul
je
stc
and
shll
sbb
inc
mov
fsubrl
add
ja
pop
and
sarl
cmp
sbb
mov
mov
nop
movb
jns
and
adc
repz
hlt
subl
mov
jmp
jmp
ss
adc
notb
mov
or
fs
mov
lods
push
xchg
push
or
adc
push
iret
fwait
mov
ret
mov
cmp
xchg
xchg
movsb
xor
ljmp
xchg
sub
rcl
pop
xchg
xor
xchg
cwtl
adc
push
lds
mov
mov
lcall
inc
shlb
into
mov
mov
mov
jae
daa
daa
xchg
sub
mov
mov
jne
outsl
push
xchg
je
or
push
add
sbb
and
les
sub
in
xlat
enter
push
mov
inc
mov
mov
adc
cli
ret
and
ret
jg
mov
jae
out
repz
lods
xor
dec
aam
mov
adc
pop
adc
xor
and
mov
push
and
ja
add
ret
push
jae
mov
add
push
or
fstpt
jp
and
pop
inc
psrlw
and
ret
out
lahf
adc
aas
stos
inc
add
clc
fisubrs
inc
and
scas
push
daa
fcoms
inc
xlat
push
sub
xchg
mov
xchg
test
pop
mov
mov
jne
fwait
repnz
js
mov
cmpsb
jnp
xor
xor
cwtl
mov
bnd
dec
xchg
adc
cltd
mov
inc
xchg
fstpt
mov
mov
dec
mov
and
xor
ss
xchg
test
add
inc
push
mov
cld
cs
pusha
in
pop
jae
push
xchg
std
adc
inc
je
in
bound
xlat
and
sub
gs
push
hlt
repz
or
ffreep
pop
xor
or
cmp
lods
push
pop
jle
fistps
notl
hlt
dec
adc
aad
rol
jns
sbb
mov
push
xchg
dec
lahf
repz
cwtl
repnz
adc
les
mov
add
inc
mov
mov
cmpsl
jecxz
mov
and
add
jae
pushf
jge
xor
pushf
cmp
mov
jecxz
add
ficomps
stos
jecxz
fistps
movsl
sarl
mov
repz
mov
xorb
loopne
insb
cmp
jb
pop
and
sub
inc
stos
jle
shll
push
ret
sbb
adc
jmp
lret
lods
sbb
popf
add
push
mov
out
xchg
insb
mov
sub
popa
js
mov
jecxz
mov
mov
inc
dec
mov
jbe
pushf
test
lcall
jp
jecxz
mov
shr
shlb
mov
inc
cwtl
or
pop
add
fadds
aas
gs
dec
sub
lcall
test
call
jb
data16
fisubrs
gs
pop
jae
cltd
test
xchg
pop
mov
imul
fs
sti
mov
lods
mov
lds
xchg
push
jp
fiaddl
imul
mov
xchg
add
sub
xor
scas
mov
mov
gs
mov
leave
test
push
sub
xchg
mov
dec
daa
clc
jmp
inc
mov
fwait
pop
mov
lret
mov
test
mov
cmp
add
cltd
lea
push
out
pop
mov
xchg
loope
cmp
pop
fnstcw
inc
test
xchg
popf
push
insb
sbb
stc
inc
adcb
lods
leave
push
in
jmp
gs
dec
fs
insb
gs
mov
push
imul
sub
and
lret
rcr
sarl
adc
out
cmp
jae,pt
cld
test
xchg
das
stc
enter
sahf
sub
inc
fistps
or
gs
fcoml
push
jecxz
push
inc
scas
lret
int
lcall
cmp
cltd
add
ja
mov
lret
sub
outsb
and
lret
lds
cmp
mov
sub
imul
lcall
sub
dec
dec
leave
inc
arpl
inc
add
mov
jns
add
dec
sbb
xchg
pop
mov
lret
add
pop
gs
add
mov
pusha
call
dec
les
dec
fwait
leave
stos
add
je
sub
jmp
or
out
int
dec
jmp
inc
loope
inc
lret
mov
mov
js
sub
pop
sub
or
psubq
inc
call
cmp
int
dec
ror
test
mov
cli
pop
mov
ret
gs
btr
cltd
xchg
push
and
sub
pop
pop
inc
into
pop
mov
dec
lret
mov
xchg
icebp
cld
jecxz
inc
push
ds
fisubs
and
xor
xchg
lret
lcall
sub
adc
aad
int3
popf
gs
jmp
int3
stc
gs
cmp
or
pop
cmc
aas
xor
leave
add
xchg
or
xchg
icebp
xchg
out
int
sub
sbb
push
mov
je
sahf
or
lcall
add
or
sub
sbb
lods
movsb
js
cmc
cmpsl
add
rclb
in
and
sub
xchg
mov
inc
mov
aad
cmc
jmp
cmc
sbb
inc
cltd
mov
inc
pusha
pop
inc
lret
std
inc
cmp
inc
dec
out
jecxz
rcrl
leave
test
lods
pop
mov
or
xchg
mov
jbe
insl
sub
addr16
push
mov
mov
inc
out
jmp
adc
lods
xor
mov
inc
std
pop
adc
into
testb
mov
sar
lea
xor
cltd
xor
sti
inc
insb
mov
insb
das
adc
imul
stos
and
jns
push
shlb
add
rcrb
cmp
cmp
xchg
pop
push
mov
mov
addr16
stos
rol
xchg
test
aas
mov
xor
or
or
ret
mov
xchg
pop
daa
jb
or
mov
lds
jg
add
xchg
xchg
pushf
add
ret
mov
sbb
sub
insb
les
mov
in
dec
push
aas
and
mov
fdivl
push
mov
adc
jl
je
dec
repnz
jbe
dec
loope
fmull
pop
inc
loope
add
mov
inc
jno
imul
adcl
mov
add
ds
idiv
jno
filds
rcrb
pop
outsl
xor
das
push
jp
dec
sbb
xchg
inc
scas
outsb
sti
jbe
das
adc
ficompl
push
fyl2x
cmp
push
fistpl
or
mov
xchg
je
ja
aam
les
adc
cmp
jl
mov
shll
jae
test
or
dec
sbb
fisubrl
cmpsl
push
test
pop
testl
push
shr
jmp
rcll
xchg
mov
mov
movsl
inc
insl
mov
cltd
push
ss
cmc
test
out
hlt
sub
ret
or
mov
jae
test
sbb
fidivl
sbb
mov
fcoms
in
icebp
bound
jecxz
es
ljmp
push
dec
pop
ja
push
push
and
cli
inc
jge
add
hlt
mov
repnz
mov
sti
xchg
sti
pop
xchg
sub
jle
popf
sbb
scas
push
mov
fisttps
pop
mov
mov
push
pushf
icebp
leave
adc
push
rcr
and
add
sbb
push
adc
dec
ret
dec
xchg
and
mov
bound
and
jp
push
vsqrtps
stos
xor
imul
test
and
jg
pop
lret
das
and
cmpsb
jecxz
ss
inc
add
add
dec
push
push
enter
in
popf
xlat
add
xchg
push
mov
jle
xchg
lret
add
mov
cmpsl
data16
sbb
jbe
inc
mov
jbe
push
pop
cs
lds
jns
mov
inc
mov
jae
cmpsb
aam
and
mov
mov
pop
iret
mov
inc
pushf
xchg
pop
jno
mov
cld
inc
popf
fsubs
dec
xor
inc
pop
imul
cmp
incl
and
aaa
roll
lret
sbb
and
adcl
leave
lods
or
push
dec
jmp
or
pop
rorb
pushf
ficompl
mov
pop
mov
rcrb
xor
jae
and
add
adc
fs
lds
mov
sarl
sahf
cmpsb
cmc
xchg
pop
mov
xor
pop
dec
lods
xorl
mov
xchg
divl
mov
mov
shrl
adc
or
pop
fisubrs
xchg
lret
js
push
je
std
iret
ljmp
test
jp
repz
push
jl
fistps
test
movsl
aam
repz
lcall
adc
clc
test
sub
stos
or
loopne
insb
loope
pop
paddd
test
dec
xor
mov
cs
icebp
inc
stos
arpl
test
bound
cs
mov
ret
loop
xchg
adc
pop
add
mov
scas
inc
dec
xchg
or
movl
cmp
shl
pushf
pop
cmpsl
mul
jb
push
sub
push
xor
inc
addb
sub
sbb
cmp
push
sahf
cmp
xchg
cmp
and
add
mov
jb
dec
les
ret
xchg
push
rcl
mov
adc
mov
in
adc
dec
mov
xor
jbe
mov
lods
push
inc
xchg
roll
add
test
adc
inc
push
addl
xchg
je
push
in
dec
mov
test
or
add
leave
and
mov
add
mov
aad
sub
mov
rcll
jmp
cwtl
lea
xor
pushf
and
cmp
or
test
shl
dec
icebp
mov
cmp
sbbl
xor
adc
bound
scas
ljmp
adc
pop
lcall
imul
inc
lcall
je
shrl
out
cld
jge
cli
inc
pop
mov
mov
push
ret
xorl
cmpsl
cmpsb
loopne
jno
lods
scas
push
jp
insb
mov
sub
fwait
stc
mov
push
test
pop
aad
rol
data16
test
hlt
movsb
push
clc
add
push
rcl
dec
push
jecxz
ret
loop
dec
xchg
aaa
test
faddp
std
mov
jae
fs
dec
and
les
rorl
jmp
mov
stc
dec
dec
loopne
hlt
cs
fs
test
out
push
daa
xchg
dec
test
xchg
inc
xchg
leave
fmull
cmpsb
dec
cli
imul
test
ret
dec
cmp
mov
jb
xchg
push
ret
mov
xchg
test
mov
jmp
mov
pop
cmc
xchg
or
cmpsl
leave
pop
push
and
pushf
iret
push
arpl
inc
push
cmp
cmc
and
test
aas
mov
pcmpgtw
inc
repz
mov
imul
leave
out
movsl
xchg
aas
mov
test
lock
cmpsb
test
aas
mov
test
lret
mov
mov
cwtl
cld
jle
adc
pop
dec
xchg
aas
pop
or
xor
stc
leave
xchg
and
ror
add
les
dec
call
add
xor
pop
test
xchg
inc
js
pop
scas
mov
sub
fdivl
ret
cmpsl
insl
sub
or
dec
mov
int
sub
inc
sub
cltd
mov
mov
mov
jecxz
pop
popf
rcrl
add
or
and
hlt
lcall
movsl
mov
pop
mov
sbb
push
push
lret
gs
inc
movsl
push
xchg
xor
xchg
ret
mov
dec
fidivs
push
sub
fistl
jb
dec
dec
cmpsb
leave
sahf
push
xchg
test
or
rcll
int
popa
ja
jmp
inc
fists
sbb
and
xor
inc
bound
inc
mov
cli
pop
sbb
fmul
stos
cmc
xor
insb
fcoms
push
inc
sbb
add
dec
add
lds
xchg
cmpsb
jmp
movsl
mov
cmpsb
repz
lret
cmpsb
cli
dec
pushf
loopne
jmp
out
mov
mov
cwtl
mov
cmpsb
lcall
test
scas
repz
fdivs
gs
mov
push
sbb
push
jecxz
cmpsb
lret
lahf
mov
inc
rcll
jnp
out
pop
loop
test
ss
push
sub
ret
jecxz
aad
js
scas
add
mov
sub
sbb
sub
call
shl
ret
aad
or
test
cmp
cmpsl
xchg
cmc
lcall
xchg
dec
xor
or
mov
mov
dec
ss
push
sbb
dec
movsl
or
lds
arpl
gs
scas
dec
inc
lea
rol
shlb
dec
push
mov
pop
sub
dec
or
mov
jl
xor
cmp
fs
mov
adc
in
test
push
leave
aas
arpl
xchg
inc
xlat
jg
inc
dec
push
and
shrl
xchg
sbb
or
out
and
sbb
fcoms
std
imul
xor
pop
jne
ss
ss
movsl
sbb
mov
out
ret
movsb
lcall
adc
push
lds
in
ret
push
test
mov
lds
mov
add
xchg
stos
xchg
call
clc
outsl
mov
insl
adc
xchg
dec
ret
push
sbb
inc
mov
loopne
dec
hlt
je
xchg
popf
inc
push
pop
sbb
mov
add
imul
mov
xchg
sub
push
push
mov
cmc
in
mov
je
mov
rcrl
xchg
orl
cs
in
repz
xchg
je
push
mov
add
xchg
mov
in
push
pop
repnz
cwtl
daa
mov
add
push
xchg
sarl
mov
push
fistpll
mov
mov
lret
push
push
outsb
test
push
ret
jl
push
scas
sahf
jp
xchg
lcall
addr16
mov
ret
sbb
shrl
mov
dec
jge
out
pop
shl
arpl
in
daa
sbb
fs
fld
add
adc
addr16
fimull
inc
mov
mov
lret
add
adc
sub
xor
cwtl
mov
call
in
push
inc
js
jge
dec
or
out
dec
sbb
jo
mov
setnp
aam
loop
aas
mov
negl
xor
ds
rol
cmp
clc
mov
and
test
push
test
int
mov
and
xchg
inc
xor
repz
adc
aam
jecxz
stos
dec
jg
in
push
xchg
xchg
test
inc
jo
mov
sbb
mov
shl
out
dec
add
xchg
je
mov
xchg
pop
jp
in
cmc
push
mov
loope
sub
cmp
sub
and
imul
das
adc
lea
sub
sbb
hlt
cmpsl
ja
fbld
push
inc
pop
push
shrl
out
lret
ss
aas
imul
es
inc
out
xor
shll
les
or
push
xor
push
nop
outsb
into
test
cltd
call
xchg
inc
test
loopne
xlat
rorl
ud1
call
jne
xrelease
fs
test
inc
mov
jb
out
adc
xchg
aas
shll
sub
lods
repz
loopne
or
jae
inc
or
pop
sbb
mov
push
mov
aam
adc
push
loopne
xchg
testl
dec
lds
push
mov
xor
push
lahf
inc
pop
jmp
fs
push
jo
cld
fsub
loope
fs
imul
mov
xor
sbb
add
mov
add
test
xchg
mov
pop
aas
push
cmp
pop
inc
movsl
mov
ficoml
or
test
jno
mov
adc
mov
outsb
insb
dec
push
sarb
push
sbb
jbe
ret
pop
scas
vshufps
test
das
call
jae
cmp
inc
cli
cmpsl
sar
int
inc
pop
call
int
sbb
int
outsb
jmp
test
or
sub
lods
mov
sub
out
mov
in
push
cmpsb
scas
or
int
xchg
or
xlat
shl
addr16
mov
repz
sbb
aad
xchg
or
loopne
inc
scas
mov
fs
xchg
mov
xor
xor
jp
sub
into
arpl
dec
movsl
std
adc
xor
out
ds
data16
mov
loope
lds
icebp
in
adc
out
int3
aas
outsb
mov
sti
clc
or
jp
adc
mov
xchg
add
xchg
loopne
lcall
and
sbb
test
ret
movsl
loop
mov
js
ret
pushf
rcll
jp
or
add
insl
jp
mov
popa
and
cmpsb
icebp
dec
nop
ds
mov
xchg
fisubrl
xor
sbb
xchg
or
leave
pop
jno
push
data16
hlt
arpl
adc
mov
fmul
inc
test
hlt
insb
popf
cld
mov
notl
pop
inc
and
jecxz
xor
mov
es
mov
aam
inc
xchg
xchg
adc
mov
push
dec
sub
rcrb
clc
bound
mov
imul
sbb
add
adc
int
mov
adc
bound
adc
in
int
int3
or
daa
or
fstp
and
xchg
loope
dec
fs
adc
mov
push
cltd
fs
xchg
pop
push
sub
inc
xor
pop
sbb
mov
add
ret
fsubl
ret
outsl
in
cmp
scas
shll
push
cld
mov
mov
ret
out
and
call
jbe
out
mov
push
mov
orb
push
sbb
sti
test
fldenv
inc
or
loope
addr16
sub
gs
jo
push
adc
jecxz
mov
mov
jl
les
into
add
xlat
sub
inc
stos
push
xchg
add
cmpsl
jno
loopne
mov
ds
inc
loope
xor
aaa
cmp
dec
imul
dec
inc
or
cld
cmp
sub
out
ret
insb
jp
test
or
nop
data16
xor
inc
adc
aas
jge
cld
jnp
cli
xchg
cli
rcrl
add
inc
xchg
xchg
cli
jmp
and
icebp
pop
push
adc
add
nop
and
jp
ret
sbb
add
jb
out
pop
adc
xor
pop
int
sub
mov
fadds
das
pop
fxch
mov
add
out
xchg
mov
lcallw
rolb
push
aam
jns
in
push
or
ljmp
cltd
inc
fs
jne
xlat
adc
add
outsl
and
mov
in
icebp
push
lahf
or
scas
push
xchg
xchg
sbb
add
imul
lret
div
add
shrl
roll
xor
dec
jg
pop
xchg
movsb
lret
mov
or
arpl
or
ss
loope
xchg
inc
in
adc
inc
xchg
pop
cli
out
fsubrs
push
daa
pop
push
in
andb
add
mov
mov
test
xchg
inc
fs
push
xchg
xor
and
sar
add
and
adcb
add
add
or
ljmp
dec
hlt
push
jecxz
lret
dec
sbb
in
ret
xchg
inc
pushf
pop
test
or
cmp
mov
das
arpl
dec
inc
inc
sarb
popa
sbb
ffreep
jp
pop
mov
jno
ret
mov
mov
aas
les
leave
cmp
sbb
loope
xchg
dec
push
ffreep
dec
add
lds
or
dec
xchg
add
test
leave
cmp
sbb
loope
xchg
inc
push
ffreep
inc
add
in
push
not
test
adc
inc
push
dec
leave
cmp
sbb
loope
xchg
dec
push
ffreep
dec
add
lds
or
dec
xchg
xlat
xchg
inc
lahf
jecxz
dec
ljmp
loope
xchg
inc
push
ffreep
inc
add
cmp
push
test
mov
rclb
out
push
stos
xchg
dec
push
ffreep
dec
add
lds
or
dec
xchg
jbe
dec
lahf
jecxz
dec
cmc
leave
cmp
sbb
loope
xchg
inc
push
ffreep
inc
add
lds
or
inc
xchg
xor
or
test
pop
scas
repz
aad
push
sbb
in
repz
dec
lds
add
lods
xchg
in
sarl
inc
jne
or
mov
in
repz
dec
lds
add
sub
test
scas
repz
aad
push
testl
dec
lds
add
lods
xchg
in
rcrl
inc
jne
or
xchg
or
mov
addl
repz
dec
lds
add
sub
or
scas
repz
aad
push
daa
or
mov
orl
repz
dec
lds
add
lods
xchg
in
rol
inc
jne
or
imul
dec
lds
add
sub
or
scas
repz
aad
push
in
dec
mov
orl
repz
dec
lds
add
lods
xchg
in
rcrl
inc
jne
or
mov
inc
mov
addl
repz
dec
lds
add
sub
or
scas
repz
aad
push
or
in
repz
dec
lds
add
lods
xchg
in
rol
inc
jne
or
and
movsl
inc
cmpsl
mov
insb
pop
stos
push
sub
mov
sub
cwtl
insb
mov
xchg
insb
mov
push
mov
xchg
insb
mov
xorl
subl
cmpl
cmpl
pmulhw
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
xchg
xor
cmp
and
and
and
mov
xchg
hlt
mov
hlt
scas
hlt
nop
hlt
mov
popf
inc
push
mov
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sub
inc
jg
mov
mov
rorb
dec
adc
lods
sbb
dec
rorb
add
inc
cmp
push
inc
ss
cmp
dec
cmp
jle
adc
adc
pcmpeqb
movsb
adc
iret
mov
lea
pop
inc
js
cmp
jl
and
mov
xor
mov
mov
lea
into
lcall
dec
rcrb
dec
shrl
push
js
shll
shlb
lods
ss
test
in
xchg
sbb
subl
addr16
mov
sub
sub
mov
mov
mov
cmpsb
and
sbb
cmp
in
xchg
rolb
sbb
int3
push
mov
fdivrs
fsubs
in
push
loope
sbb
fs
mov
in
mov
in
arpl
loopne
in
push
jle
cmp
pushf
and
icebp
ja
push
jp
or
sbb
bound
xor
addb
jmp
insl
repnz
rol
inc
jmp
push
mov
addb
nop
and
push
fwait
sub
add
cbtw
fs
aad
or
sub
shll
xor
jp
and
mov
mov
jp
adc
aaa
int
cli
mov
inc
cmp
loope
xor
lret
aaa
mov
xlat
sar
jl
xchg
jne
fildl
xchg
loop
and
loope
in
add
outsl
or
lret
in
test
mov
jge
or
aas
imul
dec
dec
pop
fcmovbe
add
inc
adc
in
push
pop
add
jl
mov
adc
add
dec
jl
mov
adc
add
pop
jl
mov
adc
add
dec
jl
mov
adc
add
jecxz
xor
lods
aad
mov
dec
jl
mov
adc
add
push
jecxz
xor
lods
aad
mov
dec
jl
mov
adc
add
dec
sbb
xor
dec
aad
mov
dec
jl
mov
adc
add
dec
jl
mov
aad
loopne
xchg
dec
jl
mov
adc
add
dec
jl
mov
adc
add
jecxz
xor
lods
aad
mov
dec
jl
mov
adc
adc
add
in
movsb
icebp
xchg
and
std
int
mov
test
mov
fistps
jne
or
mov
into
xchg
lcall
xchg
shl
xchg
leave
lahf
jecxz
lret
lock
enter
lds
dec
repz
dec
shl
mov
in
repnz
out
int
int
into
test
insb
lret
les
pop
repz
dec
push
lods
xchg
in
rcr
lds
js
inc
lock
or
loope
hlt
inc
cmp
jmp
xchg
mov
mov
xchg
or
xlat
repz
dec
sbb
lods
xchg
in
shrl
jne
or
test
or
mov
add
dec
repz
dec
daa
adc
jne
js
inc
mov
rcrb
insb
int
mov
out
lret
dec
addr16
lods
xchg
in
shr
jne
or
test
or
mov
add
push
les
inc
aad
popa
out
xor
sub
test
int
ffreep
into
add
or
int3
xchg
aad
leave
lahf
jecxz
lret
cmp
or
loope
hlt
dec
cmp
mov
xchg
cmc
xchg
ret
lahf
jecxz
les
leave
jno
and
ret
mov
mov
mov
in
repz
cmp
lret
cmp
int3
or
leave
lods
xchg
in
shr
jne
or
test
add
cli
repz
dec
pop
adc
jne
dec
mov
test
push
jp
cmp
or
loope
xchg
lret
push
ffreep
int3
add
or
lret
xchg
lahf
jecxz
enter
lds
sbb
sbb
or
mov
add
sub
repnz
ret
mov
mov
mov
adc
sbb
loope
xchg
lret
push
ffreep
int3
add
or
lret
and
jmp
insb
xchg
mov
xchg
jmp
insb
xchg
mov
xchg
jmp
or
mov
xchg
jmp
adcl
sbbl
sbbl
fistps
push
mov
mov
mov
mov
cmp
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
adc
push
xor
cvttps2pi
leave
jg
push
xchg
pop
mov
xchg
dec
mov
xchg
dec
mov
nop
dec
mov
popf
dec
mov
dec
fwait
dec
mov
dec
cltd
dec
mov
dec
xchg
dec
mov
cwtl
dec
mov
mov
test
pusha
lret
push
int
ret
test
dec
cmp
pop
sbb
in
xor
adc
xor
paddsw
in
adc
xor
sbb
popf
lds
in
pop
movsb
mov
xor
rorl
inc
inc
movsb
je
sub
sub
or
pop
xchg
xor
and
dec
inc
xchg
push
push
es
adcl
outsb
out
loopne
add
je
insb
inc
push
xchg
ret
fwait
jecxz
and
adc
outsb
sbb
imul
xor
xor
outsb
test
aam
ret
call
and
adc
punpckhwd
jg
cmc
iret
xlat
mov
stos
dec
mov
and
dec
movsl
push
mov
xlat
and
lods
lret
pop
mov
daa
lods
push
daa
les
sub
repnz
push
popf
push
rcll
lcall
test
push
mov
mov
mov
sub
in
fisubl
cmpsl
call
jns
out
sub
mov
mov
mov
test
in
movsb
arpl
pop
jecxz
mov
popa
adc
xor
rol
mov
push
mov
cmpsb
les
adc
mov
test
or
pop
movsl
mov
movsl
pop
test
fs
add
ss
mov
sbb
and
ret
enter
add
push
add
adc
rcrb
in
or
dec
jmp
ret
loope
dec
out
ret
xchg
leave
or
xor
std
jl
mov
jg
es
dec
pusha
arpl
xchg
dec
inc
fidivrs
xchg
loope
and
cmpsl
mov
inc
gs
or
enter
pinsrw
pushf
or
jecxz
xor
lods
aad
mov
dec
jl
mov
adc
add
cmpsl
jecxz
xor
lods
aad
mov
dec
jl
mov
adc
add
jecxz
adc
or
aad
mov
dec
jl
mov
adc
add
dec
jl
or
aad
mov
dec
jl
mov
adc
add
dec
jl
mov
adc
adc
mov
adc
add
dec
jl
mov
adc
add
cmpsl
jecxz
xor
lods
aad
mov
dec
jl
mov
adc
add
jecxz
adc
or
aad
mov
dec
jl
mov
xor
dec
add
pop
adc
push
jle
and
dec
test
xor
push
mov
jecxz
lret
or
jbe
popa
jp
dec
fs
stos
dec
mov
jg
mov
jb
fdivl
push
sahf
in
mov
mov
popa
mov
push
inc
xor
shrl
mov
shlb
inc
icebp
mulps
test
in
fiaddl
into
test
lret
pusha
enter
movsb
xchg
les
lahf
inc
aam
das
hlt
movsl
enter
aam
jo
cmp
xor
aas
sbb
andl
dec
cld
inc
and
lds
fs
mov
pusha
lret
das
dec
xor
mov
jg
cmp
xchg
jl
push
push
sbb
imul
xor
xor
cmp
inc
cmp
clc
int3
jecxz
push
push
xlat
push
xchg
push
imul
cwtl
ret
std
call
mov
cmp
ret
mov
jae
push
mov
and
cmovae
cli
fistpl
cmpsl
andb
sti
adcb
orb
mov
mov
jecxz
or
int3
pop
dec
or
int3
lcall
pop
insl
or
lcall
add
add
test
inc
test
add
stc
shl
dec
icebp
aas
inc
cmc
push
add
faddl
mov
ror
mov
inc
in
jg
repz
mov
add
sub
mov
andb
cmpsl
mov
inc
and
fistl
lea
shll
je
icebp
cld
iret
int
push
inc
push
jmp
aaa
test
pop
push
jae
sbb
in
xchg
ret
cmpsb
ds
push
je
push
sbb
xor
inc
cmp
sbb
mov
xchg
push
call
ror
adc
xor
or
outsl
int
add
rcl
shlb
les
sbb
out
cmp
aam
add
mov
flds
nop
cmp
xchg
out
push
and
mov
fadd
or
pop
inc
jae
es
clc
mov
sbb
and
test
inc
aad
push
addr16
fs
es
daa
pop
insl
bound
aas
sbb
xor
jb
jnp
les
and
mov
ja
int
arpl
sbb
xor
inc
popf
adc
stos
out
js
xor
jae
js
out
push
aas
push
call
js
stos
fs
mov
fs
inc
mov
icebp
daa
sbb
stos
and
adc
cmpsb
enter
in
in
fisttpll
mov
movsl
or
push
xchg
sub
sbb
repz
mov
ret
inc
add
gs
jno
aas
sbb
dec
shr
mov
sar
into
in
cmc
or
in
pop
jns
xchg
ror
mov
ret
inc
stos
imull
lret
cs
cwtl
sub
mov
out
and
xchg
enter
rcrb
inc
pop
inc
adc
push
add
sbb
je
cmc
cmp
imul
into
dec
cmp
xchg
inc
rclb
loope
out
push
outsl
dec
xchg
rorl
ret
shll
jl
xor
je
jbe
and
popl
loopne
mov
fs
xor
or
adc
mov
jae
jmp
je
lock
ljmp
and
enter
add
adc
lret
add
push
cli
jo
add
loop
outsl
mov
aam
add
ret
jg
dec
addl
sub
cmc
scas
sbb
jne
cmp
mov
mov
ss
inc
cmp
mov
in
xchg
mov
pop
xchg
mov
sti
push
push
jnp
cmp
aaa
out
inc
movsb
les
rcll
cltd
add
fnstenv
into
xor
add
jmp
mov
pop
stos
hlt
in
jbe
test
je
xor
xchg
dec
push
test
test
notl
sub
xchg
add
cmp
xchg
xor
pop
xor
repz
cmp
pusha
and
imul
mov
ss
or
pop
pop
loope
xlat
dec
inc
es
leave
mov
dec
imul
xchg
out
jl
xchg
icebp
scas
mul
dec
fbstp
mov
cwtl
arpl
push
mov
negl
icebp
mov
add
icebp
sbb
lcall
rorl
loop
test
or
mov
inc
iret
hlt
mov
in
shll
add
sahf
lods
jae
xchg
mov
in
out
call
loop
test
rcr
xlat
jl
pop
in
leave
jbe
sarl
mov
icebp
jg
rcl
mov
xor
jecxz
iret
and
sbb
rol
shl
dec
cld
leave
jbe
shrl
stos
pop
or
es
sahf
ja
arpl
mov
fs
shll
aaa
and
xchg
jle
lods
je
nop
inc
sub
xor
repz
and
cmp
out
arpl
mov
in
icebp
mov
cmp
dec
les
neg
or
or
int3
and
adc
cld
and
pop
out
mov
sbb
orb
xchg
sub
jae
shll
imul
das
mov
in
sahf
dec
xor
mov
mov
ret
in
xor
daa
adc
xor
sarl
cmp
push
dec
leave
jbe
add
mov
or
jecxz
sbb
xlat
cmp
cmpsb
add
xor
rorl
jns
pusha
es
cvtdq2ps
in
int
add
sbbl
jae
adc
inc
pusha
mov
stos
leave
daa
sub
inc
adc
popa
fistpll
sbb
push
popl
test
push
add
repnz
ss
int
adc
push
dec
dec
mov
es
or
in
adc
in
arpl
fwait
aam
testl
fs
aam
pop
xor
leave
sub
mov
jae
xchg
xchg
xlat
dec
cltd
fld
sti
jecxz
arpl
push
jmp
xchg
lods
cwtl
roll
cmp
scas
xor
pop
lods
aaa
push
or
in
je
xor
jns
sti
mov
mov
add
cmpsl
je
xchg
in
push
das
test
xlat
mov
icebp
lcall
in
aam
inc
testl
inc
call
stos
and
pop
or
inc
adc
add
sub
addr16
xchg
push
adc
inc
mov
sbb
sub
test
inc
jbe
cmp
pusha
es
jle
fmuls
addr16
notl
test
shll
inc
scas
inc
cltd
xchg
dec
add
stc
fstps
push
inc
cmpl
jne
mov
pop
push
enter
mov
leave
js
movsb
jge
sub
mov
push
je
inc
pop
inc
inc
mov
movsb
mov
aad
insb
pop
mov
in
in
popa
push
push
jbe
insb
xchg
mov
cmp
mov
inc
mov
sbb
or
sbb
mov
cmp
test
leave
xchg
add
dec
jbe
inc
mov
outsl
pop
dec
xchg
push
mov
cmpsl
add
inc
mov
sub
mull
cmpsl
ljmp
popa
and
xchg
pop
add
rcrl
add
movsl
inc
cmpsl
xchg
add
pop
les
or
ss
clc
imul
out
sbb
push
and
int
jae
lods
lahf
sahf
les
jae
xchg
sbb
test
fadds
sbb
inc
and
cmp
add
loope
sbbl
insb
leave
pop
cmc
ror
adc
jne
in
pop
ss
and
lds
daa
xchg
dec
add
lods
sub
push
xchg
fs
loopne
enter
je
mov
add
cmp
ret
adc
mov
fs
pusha
dec
inc
pusha
fdiv
sub
loope
out
lret
jp
xor
insb
inc
push
add
inc
jae
icebp
mov
cltd
jns
scas
mov
fmul
nop
mov
pop
ja
insb
inc
add
jno
add
xor
pop
out
popa
int
xchg
hlt
js
mov
test
lret
sarl
mulb
pop
xchg
cld
and
das
push
andb
out
rol
jg
movsb
xchg
mov
jo
je
jg
je
lock
mov
jo
ss
dec
loop
lcall
mov
lcall
orb
jne
adc
sbb
fistl
mov
or
mov
and
sarb
mov
mov
sbb
inc
cwtl
adc
shll
pop
pop
jne
jo
cld
push
movsb
mov
push
inc
test
mov
je
test
xor
pop
clc
shll
into
sti
test
xor
mov
add
inc
and
push
add
je
inc
push
lods
les
mov
imul
add
or
aaa
sbb
adc
jp
pushl
add
aaa
je
mulb
mov
inc
mov
push
cli
and
jge
fldt
lea
xor
lock
mov
jp
mov
xchg
es
mov
imul
push
jp
jg
xor
mov
or
loopne
mov
mov
sub
loopne
pop
sub
test
shrb
test
andl
or
ss
addl
movsb
inc
dec
jecxz
cmp
xlat
dec
or
jecxz
push
popa
push
mov
call
xchg
add
jo
iret
mov
push
adc
xchg
js
push
mov
lods
adc
aaa
ja
pop
jne
lock
cmp
pop
ret
mov
ret
inc
jbe
sti
xchg
and
inc
adc
lcall
fldl
loop
in
test
push
pop
stos
cmpsb
add
test
and
or
test
shll
cwtl
adc
and
jbe
loopne
mov
into
pop
inc
xor
mov
loope
mov
sti
inc
xor
dec
test
shll
mov
adc
pop
loope
mov
scas
jo
jbe
adc
sub
aad
xor
cmc
adc
outsb
lods
jb
popa
or
es
cmp
mov
pop
ret
or
xor
jg
jp
leave
push
pop
push
or
dec
or
ror
in
push
xor
and
push
shrl
mov
imul
aam
fiadds
rol
test
dec
roll
dec
repz
or
push
sti
jg
sbb
aam
sbb
out
inc
xor
pop
cmp
sbb
and
inc
mov
rcrb
leave
sub
leave
mov
shll
ds
arpl
and
jne
push
fldenv
xchg
mov
inc
repz
roll
mov
insb
push
xor
xor
mov
cmp
ja
or
imul
leave
je
adc
xchg
or
mov
rorl
faddl
shlb
mov
ss
outsl
inc
xchg
stc
jno
lea
push
popa
mov
popa
in
test
into
mov
xor
hlt
mov
repz
imul
loope
pop
sbb
mov
jle
or
add
mov
xor
mov
fldenv
call
mov
nop
test
mov
es
outsb
push
sbb
enter
icebp
jb
insb
jmp
icebp
mov
ja
mov
jmp
js
data16
inc
aam
sub
bound
sub
test
sbb
int
les
js
cmp
repz
ret
jb
andb
outsl
int
gs
pusha
or
adc
push
in
mov
int
inc
inc
sub
in
inc
fstp
adc
adc
in
jns
cmp
enter
test
shll
out
adc
mov
je
ss
gs
scas
testl
scas
or
fstpt
scas
je
jmp
mov
test
cmp
mov
adc
ds
jns
int
sbb
mov
fisubl
in
dec
adc
pop
mov
mov
hlt
jle
loopne
movl
dec
rcll
gs
cmp
nop
aam
mov
insl
cmp
sbb
xchg
scas
lods
movsl
adc
cmp
xchg
fldl
sub
imul
mov
out
xchg
jle
fmuls
and
mov
cmp
jns
and
jo
hlt
xchg
push
dec
movsl
or
outsb
mov
pop
enter
xchg
rorl
loop
inc
mov
xor
and
or
inc
pop
or
push
daa
test
mov
stc
dec
ljmp
mov
sbb
mov
jnp
dec
scas
dec
xchg
jae
and
xchg
loopne
cmp
call
adc
shll
xchg
ja
xchg
movsb
cmpsb
jle
dec
mov
lret
lods
and
out
or
inc
pushf
dec
pop
sub
sub
nop
xchg
enter
lds
sbb
stos
or
pop
mov
fidivl
jno
cmp
mov
mov
cmp
jae
xor
push
add
cmp
sub
movsl
in
outsb
sbb
push
sbb
push
inc
test
into
mov
and
mov
jno
test
xlat
stos
and
movsb
out
in
mov
pop
inc
test
dec
mov
movsb
cmpsb
inc
gs
fs
lahf
mov
mov
mov
dec
xchg
gs
cmp
mov
stos
cmp
lds
dec
mov
pop
mov
push
rcll
dec
les
adc
cmp
pop
daa
aad
xchg
lock
imul
test
mov
add
or
add
roll
dec
pushf
mov
les
jae
test
mov
aam
adc
push
test
aas
divl
in
data16
jae
test
dec
cmp
test
mov
test
add
cltd
dec
add
mov
aas
xchg
icebp
mov
mov
aaa
pop
inc
loope
pushf
jecxz
mov
cld
mov
cwtl
imul
jnp
jbe
les
test
jb
xchg
lret
arpl
cwtl
add
mov
mov
jmp
adc
sbb
sub
pop
push
fdivp
sub
jnp
das
movsb
jno
daa
shlb
and
int
xor
inc
jecxz
outsb
mov
and
sub
or
mov
mov
sub
mov
ret
shl
loope
rcll
inc
out
or
ror
add
lret
mov
lret
leave
pop
shrl
lds
jmp
sbb
mov
push
or
mov
or
data16
inc
xchg
shll
mov
inc
pushf
push
fiaddl
and
test
iret
lds
sub
out
mov
or
lahf
push
xor
fwait
loopne
mov
jbe
xor
fildll
and
cld
cli
ret
jge
push
and
fisubrl
sbb
clc
pop
push
pop
add
inc
push
inc
xchg
xor
sub
cmpsl
add
sub
dec
adc
mov
push
ljmp
pop
repnz
stos
insb
cmp
in
push
and
adc
inc
repz
lcall
push
es
mov
rorb
lret
aad
mov
movsb
ret
push
xchg
dec
push
add
jbe
test
in
inc
gs
xchg
adc
out
jns
je
lcall
fcoml
push
test
filds
adc
push
outsb
pop
mov
mov
xor
push
xor
loop
movsb
clc
adc
lcall
mov
imul
ljmp
in
cmpsl
aad
cwtl
lock
sbb
mov
add
fcmovnu
enter
sar
add
cs
xor
sbb
push
add
les
and
or
add
mov
jae
outsb
xchg
jp
cld
pop
test
outsb
inc
rclb
gs
xor
sub
inc
inc
pop
inc
mov
push
arpl
icebp
mov
testb
popa
push
pop
int3
nop
dec
xchg
jno
repz
push
pushl
fs
insb
scas
negl
clc
scas
push
orl
and
add
or
mov
inc
lret
inc
sub
dec
and
push
mov
add
mov
repnz
xchg
test
and
cmp
fistpl
inc
roll
push
inc
or
dec
cwtl
adc
lods
fisubs
inc
lods
lret
sub
or
xchg
lret
inc
mov
or
call
add
xchg
addl
mov
cli
xchg
out
mov
and
xor
add
fst
push
arpl
xchg
jmp
aas
outsb
jg
loope
cmp
xchg
fsubrs
push
sub
jp
pop
lock
pop
out
mov
cmp
mov
mov
inc
push
test
cmpsb
lds
or
pop
inc
push
and
sbb
lods
xchg
pop
cmp
and
add
lret
lret
mov
cwtl
adc
adc
gs
lcall
mov
xor
cmpsb
adc
sub
dec
adc
sbb
je
inc
xchg
mov
adc
dec
push
add
cld
insb
in
inc
loop
cmp
ret
and
imul
shl
or
push
loope
cmp
adc
or
sbb
inc
cmp
push
mov
sub
ficompl
stos
das
cmc
sbb
subl
cmp
repz
movsl
cmp
cli
xchg
add
mov
fwait
aad
pop
clc
cmpsb
dec
mov
lea
push
sti
mov
sub
test
in
es
jle
pop
mov
loope
aaa
mov
daa
out
test
add
rorb
jo
test
in
pop
and
scas
sub
sub
mov
lods
shll
mov
aad
mov
testb
fsts
shlb
pop
or
test
mov
and
and
jecxz
sub
data16
pop
adcl
cmpsb
xor
scas
mov
xor
jp
aam
mov
pushf
jp
in
add
mov
xor
vunpcklps
sbb
adc
pop
cli
add
pop
cmp
pop
jl
rolb
adc
add
mov
daa
adc
out
push
in
xchg
aam
loope
icebp
ftst
xor
adc
popa
add
adc
mov
jnp
adc
lods
dec
pushf
in
int
sarl
movsl
cmp
jmp
mov
lods
repz
mov
jnp
leave
test
push
mov
xor
inc
outsl
in
sbb
mov
out
je
sbb
mov
ss
je
adc
fsubr
inc
sub
adc
loope
pusha
outsb
fistpll
repz
inc
cmp
out
inc
inc
dec
int
inc
pop
mov
fiaddl
push
sbb
inc
mov
push
sub
xchg
xor
fimull
xor
jmp
ret
nop
ret
inc
leave
dec
into
sahf
js
pop
add
mov
shl
and
xchg
pop
mov
lret
pop
jp
or
push
mov
std
pop
jae
ret
gs
cmpb
mov
int
xchg
mov
cld
data16
and
pop
pop
xchg
rclb
out
cmp
movsb
shl
xor
lds
sbb
out
call
sbb
xchg
and
cmp
sbb
inc
inc
add
lret
dec
pop
jae
jno
dec
mov
sub
inc
mov
sub
jmp
cld
aam
add
push
add
mov
imul
xor
sbb
sarl
or
sub
repz
scas
loope
hlt
orb
test
inc
cmpsl
arpl
aaa
dec
cmpsl
leave
xchg
pop
pop
aas
ljmp
xchg
insl
lock
inc
add
lret
sbb
cmp
or
mov
mov
fists
xchg
or
push
xchg
aas
stos
movsb
cmp
je
dec
jl
pop
dec
xchg
test
aam
inc
into
outsb
cmp
adc
fmuls
mov
repz
jbe
and
mov
hlt
lods
mov
xor
pop
test
add
mov
les
add
xchg
lret
enter
cltd
inc
mov
or
dec
addr16
cmp
loopne
in
push
loopne
in
push
shlb
push
test
leave
pop
insl
push
push
int
icebp
or
inc
mov
mov
loope
aam
mov
push
aaa
int
mov
sahf
inc
fs
push
ret
lods
xchg
out
movsl
insb
adc
and
test
xchg
add
add
jge
out
ret
or
jae
test
inc
add
out
lret
xchg
xchg
sbb
addr16
imul
push
lret
aas
xchg
inc
xchg
in
mov
mov
mov
rcr
adc
or
push
int3
xor
or
inc
movsb
lcall
sub
out
and
or
xor
jp
clc
xchg
add
test
fisttps
lcall
movl
in
daa
pop
dec
jmp
into
xor
repnz
xchg
jne
es
cmp
ficomps
lahf
or
mov
insl
inc
mov
jl
push
adcl
mov
call
pop
cmp
push
fs
and
mov
mov
dec
jge
rcl
lret
int3
inc
dec
xchg
or
mov
int3
filds
movsb
lcall
pop
cmp
push
int3
xor
mov
inc
lcall
inc
push
inc
lcall
and
int3
cmc
dec
int3
js
or
inc
aad
sbb
push
fptan
ss
jl
in
and
out
gs
xchg
jecxz
ror
mov
movsl
pusha
and
aas
test
test
ret
hlt
lods
rorl
je
ficompl
test
and
leave
lret
scas
cld
mov
mov
daa
dec
inc
leave
cwtl
push
test
cmc
lds
push
and
cmpsl
xchg
cwtl
je
xchg
pop
jg
cs
shll
mov
fwait
pop
stos
push
add
add
xor
mov
sbb
jg
mov
inc
fmull
shrl
push
xor
ljmp
shl
lds
mov
fnstcw
add
inc
fs
lret
pop
dec
lock
xor
xchg
pop
stos
fiadds
out
add
aad
mov
xchg
stos
inc
call
mov
xchg
lods
and
sbb
data16
pop
cmp
xchg
idivl
inc
push
ljmp
push
fwait
lret
mov
inc
outsb
pushf
jge
jae
fs
les
repz
int
addr16
fcmovnbe
pop
fbstp
mov
out
adc
xlat
add
cwtl
add
mov
stos
inc
out
out
lods
fsubp
insl
mov
push
mov
mov
adc
push
iret
jnp
test
data16
test
in
push
xchg
lret
arpl
loopne
in
dec
push
inc
dec
jne
loope
cwtl
pushl
aam
sar
hlt
mov
push
roll
lds
mov
xchg
test
jbe
data16
mov
hlt
int3
mov
aam
faddl
ror
mov
loopne
pop
into
push
test
sbb
shll
mov
mov
mov
fdivl
mov
fists
test
xchg
pop
in
ret
adc
jecxz
int3
xor
into
gs
in
pop
in
mov
in
sarl
ror
or
or
push
fs
push
leave
inc
mov
out
roll
aad
iret
int
shlb
ret
lret
dec
mov
cmp
pop
bnd
cs
dec
adc
ret
les
test
adc
xchg
pushl
push
shll
inc
lea
jge
int3
dec
mov
adc
test
xlat
inc
and
mov
les
inc
or
loope
xchg
inc
push
ffreep
inc
add
in
mov
pushf
mov
xchg
mov
cmp
mov
pushf
cmp
xchg
mov
dec
push
in
mov
pushf
xchg
aas
xchg
mov
out
in
mov
pushf
lret
mov
cmpsb
push
in
mov
pushf
mov
cmp
mov
in
mov
pushf
mov
movsb
test
xchg
xor
movsb
test
xchg
xor
xor
bound
pushf
lahf
jecxz
and
push
test
mov
movl
int
dec
ret
mov
push
xchg
lds
or
inc
sub
adc
sub
push
fbstp
mov
or
dec
pushf
in
jle
mov
in
jae
push
dec
or
dec
mov
dec
mov
pushf
in
jle
mov
or
int
inc
test
outsb
loop
inc
xchg
add
jg
mov
faddl
ljmp
out
fcoms
pop
inc
cmpsl
dec
mov
ljmp
inc
aaa
pop
out
add
dec
les
pushf
cmc
loop
xor
xlat
mov
stos
sbb
je
push
cmpsl
in
loop
xor
gs
sbbl
je
mov
cmpsl
in
loop
xor
sbb
je
mov
in
loop
xor
cmp
je
mov
pop
xor
ljmp
add
mov
add
aas
adc
jbe
cmp
lds
movl
fistpll
mov
aas
in
dec
cli
fsts
cli
je
lret
ljmp
repz
sbb
je
mov
xor
lret
ljmp
in
loop
xor
orl
inc
and
mov
mov
or
cmp
mov
ret
loopne
adcl
mov
adc
sbb
in
fisubrl
aas
sbb
add
sub
jp
mov
mov
fld
rol
jge
arpl
nop
push
lds
mov
inc
mov
dec
mov
adcl
in
adc
cmpsl
mov
addr16
add
and
xchg
pop
movsl
sbb
push
xor
sarl
les
adc
sbb
mov
and
mov
fs
shrl
call
inc
jp
ret
scas
mov
js
add
lret
mov
enter
pop
cmp
icebp
sub
shll
iret
xchg
cld
xchg
mov
cltd
push
loope
dec
cwtl
adc
push
loope
inc
gs
cmp
enter
jge
mov
lea
mov
dec
mov
adc
divb
add
push
or
push
test
inc
pop
and
cmp
into
xchg
jae
dec
adc
scas
int
stc
movsl
out
inc
mov
inc
out
add
xchg
out
les
push
imul
movsl
mov
mov
xor
inc
adc
ss
fs
scas
mov
or
cmp
icebp
ja
test
mov
xor
jnp
sarl
test
shlb
jmp
movsb
nop
push
in
aam
mov
cli
or
lahf
in
bound
jae
lahf
in
fimull
xor
ljmp
out
mov
inc
mov
fs
pop
loopne
cwtl
push
xchg
aaa
and
cmp
mov
xchg
call
loopne
movsb
roll
mov
test
dec
loopne
and
aad
fwait
sub
xlat
xchg
into
jecxz
je
mov
or
lcall
inc
test
lods
cmc
xchg
shl
add
int3
push
fistpll
loop
sub
lret
int
push
in
ljmp
jecxz
das
iret
mov
stos
pop
int3
call
cmpsl
enter
call
inc
clc
pop
add
mov
in
lahf
mov
mov
pusha
pop
dec
or
imul
in
sarl
jnp
call
add
fs
adc
out
lea
int
arpl
pop
arpl
dec
sub
mov
pusha
pop
dec
imul
adc
adc
aas
test
stc
cltd
shrl
cwtl
lret
mov
sub
mov
inc
in
cs
and
jb
push
je
pushf
and
and
icebp
ficoms
fcmovnbe
in
bound
arpl
fs
mov
stos
adc
inc
xor
push
pop
dec
adc
inc
fdivs
call
pop
cmp
push
add
inc
cltd
sub
test
add
test
or
rorl
cmp
mul
les
repz
dec
xchg
aad
out
popf
mov
or
lcall
inc
adc
imul
fldenv
ret
test
inc
test
les
lahf
dec
ja
repnz
cwtl
pushf
dec
dec
fstl
pushw
adc
jg
sub
cltd
into
mov
push
mov
adc
mov
into
movsb
sub
and
fs
mov
movsb
mov
mov
xor
icebp
hlt
dec
gs
sarl
clc
push
cmp
push
xchg
popaw
inc
outsl
inc
cs
add
cmc
call
adc
stos
jnp
or
push
push
xchg
xchg
lret
or
dec
mov
pop
cmp
int3
or
dec
jnp
inc
shrl
inc
pop
out
adc
imul
sbb
and
push
cmp
push
mov
cwtl
add
fwait
jg
adc
pop
dec
loope
jmp
lods
int
and
sub
loope
dec
in
ljmp
pop
mov
mov
fsubl
cmp
inc
fbstp
les
test
mov
xchg
pop
xchg
inc
sub
dec
mov
ret
add
pushf
mov
movsb
fcoms
jle
test
jle
inc
mov
adc
xlat
add
mov
adc
rclb
add
dec
fstps
roll
pop
lods
jns
int
xchg
jne
jae
sub
leave
adc
lcall
inc
xchg
fstps
adc
lock
sbb
in
pop
fmul
out
icebp
cmp
lret
or
adc
aas
fdivrs
sahf
sub
add
test
rol
xchg
cld
inc
push
add
outsl
mov
inc
sbb
out
add
push
dec
sbb
lret
mov
cmp
es
mov
out
adc
ror
fcmovu
mov
push
or
popa
adc
sub
addr16
cwtl
sub
add
popf
hlt
test
xchg
out
and
mov
inc
xchg
enter
lods
in
dec
cld
cmc
inc
fbld
int
je
shlb
mov
dec
dec
pop
xor
add
inc
fldcw
or
dec
mov
mov
cmp
in
sbb
push
mov
xor
pop
xor
sbbb
fldcw
or
int3
out
repnz
xchg
jmp
cmc
test
mov
push
ljmp
test
lret
cltd
inc
mov
push
xchg
je
mov
in
fistpll
jae
inc
xor
mov
mov
cltd
add
lods
mov
test
sub
mov
mov
stos
out
inc
iret
inc
pop
pushf
inc
mov
nop
sbb
xchg
xchg
cltd
xchg
jmp
mov
loope
aaa
fs
stos
pop
jo
jp
mov
rorb
xchg
dec
cmp
lods
loop
jo
jmp
push
or
lahf
cmp
or
mov
test
ret
jne
add
sub
lret
or
mov
aas
cmpsl
ss
les
loop
imul
push
les
sub
mov
les
out
lahf
push
into
les
lret
fimuls
clc
int3
les
sbb
loop
lret
ffreep
mov
cmp
enter
lret
fxtract
lods
insl
imul
test
popa
jle
popa
pop
fwait
xor
dec
test
adc
addr16
xchg
mov
sbb
je
xlat
cmpsl
in
ret
lret
mov
je
orl
or
enter
sub
mov
jge
repz
dec
dec
divb
push
mov
popl
adc
dec
scas
iret
jge
les
lret
or
stos
mov
jl
cmc
fbld
jge
out
mov
loopw
movsl
ret
hlt
fs
mov
xor
fs
mov
jge
in
adc
lds
add
or
fs
mov
jge
negb
mov
test
rep
hlt
fs
mov
aaa
movsl
dec
mov
movsl
ret
sub
sub
ret
ss
fs
mov
in
push
test
jbe
flds
jmp
cmpsl
sbb
mov
pop
add
jnp
cmc
lock
popf
mov
aam
int
ret
mov
mov
pushf
into
rcrb
pushf
xchg
int
bound
pop
inc
push
lret
cmp
int3
xchg
jge
repz
dec
int
movl
cmpsb
add
roll
shr
xchg
out
or
inc
into
repz
fsubrp
push
pusha
xor
std
lock
and
repz
in
push
push
icebp
sub
mov
pop
or
test
rcl
testl
push
gs
push
cs
mov
push
add
imul
mov
mov
sbb
adc
scas
sbb
xlat
dec
or
lods
jo
push
pop
int
cmp
loope
inc
insb
fstl
icebp
or
rol
int
insb
int
jmp
push
inc
jl
and
fs
ret
xchg
or
shll
sub
jecxz
lea
mov
arpl
or
rcl
mov
ljmp
loop
xor
repz
mov
xor
sbb
lret
or
xchg
nop
fadds
scas
xchg
xchg
sbb
je
xchg
cmpsl
in
loop
pop
bound
push
cmpsl
lds
mov
mov
inc
cmp
or
jns
ja
mov
loop
inc
mov
inc
pushf
inc
test
gs
jmp
into
in
out
loope
xchg
and
jmp
push
pushf
into
xor
lea
inc
add
flds
in
lret
jo
jecxz
in
xchg
test
inc
adc
inc
fisubs
mov
je
aam
lea
les
or
fwait
jmp
add
ror
mov
in
xor
loope
cmp
add
inc
call
jg
dec
mov
add
adc
inc
mov
test
les
adc
pop
imul
lret
push
and
fidivrl
mov
lret
call
dec
jmp
pop
into
ds
add
mov
push
addb
test
mov
inc
or
cmpsl
in
loop
xor
lret
fisubrl
mov
push
mov
std
leave
out
les
dec
add
mov
or
shrl
les
add
xchg
or
loop
dec
test
ffreep
xchg
mov
xor
rolb
lock
arpl
lret
and
psubusb
lcall
ret
push
xor
mov
or
test
push
int
insl
inc
and
imul
pop
sub
push
sub
sub
mov
lds
mov
mov
lock
fiadds
sub
inc
stc
pop
sbb
jmp
ja
mov
flds
cmp
inc
out
xchg
push
xor
jmp
mov
add
rorl
sub
jmp
fsubrs
test
adc
in
jecxz
mov
pop
inc
ss
fiadds
sbb
in
ret
mov
xchg
sbbl
add
lcall
and
mov
mov
fadds
int
ret
xor
insb
pop
xchg
test
lods
filds
and
cld
push
mov
mov
out
add
inc
mov
loope
push
inc
pushf
add
dec
leave
push
xchg
iret
mov
mov
xchg
mov
xchg
sarb
mov
je
add
pmaxsw
cltd
pop
jae
incb
jecxz
sarl
shrb
packuswb
mov
hlt
loope
jns
sub
cmp
aas
jmp
add
pop
adc
and
test
int
and
frstor
add
lea
xor
add
insb
out
inc
add
inc
adc
insb
mov
inc
pusha
or
inc
sub
insb
lahf
jg
and
out
cmp
mov
inc
out
add
fstp
jae
push
mov
dec
pop
lret
mov
das
mov
in
repnz
adc
push
icebp
je
sbb
jge
dec
mov
stos
push
xchg
mov
psllq
lahf
gs
sbbl
inc
bnd
dec
jae
push
mov
arpl
lea
pop
cltd
xchg
mov
push
add
ret
mov
je
inc
inc
ror
in
push
xchg
pusha
scas
lahf
icebp
add
pop
xchg
jp
outsb
adc
adc
and
sbb
in
outsb
pusha
pop
xrelease
mov
jae
psllw
jae
std
mov
shlb
inc
and
leave
mov
jb
mov
inc
rcl
int
out
loopne
out
test
lea
rclb
ss
lds
dec
push
int3
shll
int
add
xor
fnstsw
leave
jns
fcoml
cs
inc
fcomi
imul
test
enter
leave
xchg
jge
mov
dec
lret
pusha
mov
pop
lret
sbb
inc
lahf
jmp
and
mov
ficoml
jbe
lods
and
out
push
cmp
popf
mov
les
mov
scas
in
inc
daa
sbbl
jmp
in
cmpl
xor
mov
fdivl
lret
call
js
stc
xchg
push
push
and
je
inc
lds
xchg
test
sbb
es
out
dec
aaa
pop
pop
hlt
fdivrs
jecxz
les
xor
jecxz
push
inc
cmp
fstl
aaa
mov
or
in
lea
and
push
rclb
incl
lcall
mov
xchg
int3
add
add
in
xchg
aas
xor
mov
xchg
jae
outsb
mov
add
imul
add
lcall
push
test
mov
wbinvd
cmp
or
adc
fucomi
mov
or
fsub
and
aam
or
flds
adc
cltd
repz
inc
xor
cmpsl
outsl
or
leave
xor
or
das
or
leave
lds
scas
xor
jmp
and
add
xchg
and
fdiv
jl
sbb
je
sub
inc
mov
lahf
or
xchg
inc
inc
sbb
cltd
fs
adc
enter
and
test
jbe
xchg
pushf
test
add
ret
ret
xor
and
jg
cwtl
jp
cmp
sbb
subb
aam
popf
and
ret
jecxz
lcall
add
xchg
outsb
jmp
adc
out
cmc
lods
scas
add
stos
add
sbb
xchg
push
or
movsl
pop
xchg
stos
add
je
out
push
je
cmp
iret
fbld
inc
lds
inc
push
in
mov
rcll
jns
push
sbb
stc
lds
inc
and
xchg
mov
cli
jecxz
movsb
jns
add
insl
xchg
movsl
rep
fisubrs
sbb
into
imul
outsl
out
push
and
jmp
lahf
jb
xchg
shrb
sbb
sub
xchg
and
ljmp
jmp
adc
push
mov
cmp
gs
add
xor
jns
repz
gs
pop
adc
ja
nop
inc
jae
lret
mov
xor
hlt
cltd
add
mov
lret
fs
movsb
ljmp
adc
xchg
jae
mov
addr16
rorb
jnp
pop
sbb
lret
test
insb
leave
ljmp
xor
lret
outsl
jl
into
sbb
push
lds
aas
sbb
pop
mov
push
fs
xchg
inc
sub
or
sbb
in
inc
jmp
mov
xchg
vxorps
fcmovne
jns
fdivrl
pop
dec
pushf
adc
jecxz
cs
pop
sarl
add
pop
sahf
lret
mov
cld
xor
mov
xor
cmc
lods
aaa
imul
xchg
adc
test
cmp
aas
rcr
pop
daa
mov
in
jae
add
leave
dec
cltd
push
test
jbe
push
mov
test
inc
and
stc
in
push
pop
pusha
bound
std
call
shrl
or
xlat
jmp
test
jge
lds
mov
mov
out
mov
aad
aaa
repnz
jae
mov
in
pop
leave
jl
hlt
xchg
inc
mov
adc
mov
inc
mov
xchg
cmp
mov
arpl
test
dec
mov
rclb
jle
xlat
test
mov
jae
mov
aam
adc
test
fsts
xchg
pop
inc
or
pop
sub
xchg
jmp
repnz
cmpsl
insl
xchg
nop
mov
cmc
roll
fistpll
add
cwtl
inc
mov
and
rol
sub
xorb
je
pop
dec
bound
out
add
subl
stos
lock
dec
in
jb
xchg
and
add
js
insl
outsl
push
pusha
xchg
inc
int3
inc
add
add
test
lds
push
inc
inc
xchg
js
in
push
inc
loope
fs
add
hlt
int
mov
ljmp
test
jp
lods
mov
test
mov
test
dec
test
cmp
test
cmpsb
inc
test
dec
add
comiss
mov
repz
jp
test
cmp
ljmp
mov
cmp
xor
adc
das
mov
cmp
test
sbb
cmp
stos
add
pushf
mov
test
xor
test
repz
mov
repz
mov
xchg
mov
xrelease
test
movsb
hlt
shlb
mov
add
xor
jo
and
out
adc
repz
mov
mov
test
test
xchg
add
push
mov
sbb
test
dec
cmp
mov
add
mov
int
rep
cmp
insb
add
inc
xor
mov
aas
je
test
aad
fwait
cmpb
mov
out
adc
xchg
test
push
pushf
inc
lahf
jecxz
dec
roll
loope
mov
in
scas
repnz
push
mov
and
scas
xor
pop
scas
xor
inc
dec
xor
imul
fiaddl
jp
bound
or
dec
jecxz
mov
push
sub
loop
sub
test
xor
aam
lods
adcl
lret
jbe
jecxz
popa
xchg
jg
push
andl
push
sbb
xor
cmpsb
pop
mov
negl
mov
mov
xchg
cmp
test
mov
sbbb
jne
lret
or
idivb
xchg
into
dec
or
jbe
ja
addl
fs
mov
or
loope
addb
jnp
push
xchg
andb
adc
jmp
and
fwait
xchg
add
xchg
mov
sub
sub
mov
jns
cmpsl
lret
lahf
leave
push
xorl
and
mov
arpl
call
jbe
jmp
jg
pop
xchg
add
xor
movsb
dec
sub
lods
cmp
dec
inc
pushf
jnp
jmp
leave
in
int
je
xor
out
fs
or
xor
cltd
ret
jbe
push
les
aaa
cmp
shll
add
xor
outsl
test
jo
and
mov
xor
xor
rcrl
fs
lods
sub
add
xor
mov
push
loopne
in
idivl
pextrw
je
sub
sub
and
test
movsl
js
add
mov
lds
cltd
or
mov
cmpsl
dec
fildl
fcoms
clc
xchg
out
imul
pop
pop
cld
loopne
push
mov
icebp
pop
cmp
ret
add
lds
lds
pushf
xorb
mov
insl
mov
push
lret
pop
les
pop
out
or
and
sub
xchg
mov
shrb
dec
xchg
aam
jmp
or
mov
and
xor
stos
sbb
xchg
adc
addr16
inc
xchg
push
or
lods
xchg
xchg
inc
hlt
jae
adc
popf
push
out
mov
mov
add
adc
lock
pop
sub
sbb
jb
dec
mov
dec
push
push
jne
xor
cltd
into
mov
in
repnz
lds
and
pop
ljmp
mov
jb
inc
jno
xchg
inc
loope
movsb
or
inc
mov
les
in
push
loopne
jo
and
or
pop
rorb
hlt
jno
jle
les
add
mov
loope
mov
icebp
jbe
xor
enter
push
scas
test
hlt
fidivl
in
out
push
je
outsl
insb
hlt
jmp
mov
or
mov
test
leave
xor
or
jecxz
lds
push
jae
fs
mov
ret
test
cld
inc
or
xchg
fwait
cwtl
inc
gs
in
aas
test
pop
inc
pop
fwait
test
fnsave
movl
mov
mov
in
jle
aaa
shl
leave
cmc
test
sar
test
rcll
jg
loope
in
ret
dec
and
cmp
pop
inc
scas
adc
stc
dec
adc
inc
push
cmp
mov
push
mov
inc
add
loopne
mov
add
in
xchg
pushl
pop
in
or
pop
leave
dec
or
cmpsl
fs
xchg
dec
fsubrp
or
lcall
stos
ret
addl
inc
xor
addr16
rol
xchg
dec
loopne
popa
mov
roll
lds
mov
mov
push
push
stos
mov
mov
fcmovnb
cmpsl
in
lea
mov
sbb
sbb
int3
aam
sub
ret
adc
leave
push
pop
out
inc
mov
mov
les
pop
push
xchg
xchg
lds
inc
out
pushf
inc
lahf
andl
or
add
push
lcall
cmpsl
arpl
adc
sti
call
test
mov
sbb
mov
mov
lods
sbb
and
pop
add
leave
sarl
jmp
xchg
in
les
jg
inc
fcompl
jl
lahf
push
push
insl
pop
fadds
int
dec
pop
lds
aad
push
add
fwait
inc
int3
ror
dec
and
push
incl
fdivs
mov
in
insb
shll
inc
and
mov
mov
test
repnz
jmp
leave
adc
mov
push
mov
cmp
test
fsubp
inc
ret
scas
pop
cwtl
pop
pop
ret
dec
jg
xchg
cltd
into
dec
mov
notl
dec
inc
adc
aad
mov
xor
and
push
fs
push
pop
mov
sub
mov
in
and
mov
movsb
inc
fwait
cs
cmpsb
sbb
sbb
ret
sbb
shll
adc
add
fcmovne
test
ret
mov
jb
xchg
sbbb
dec
sub
xchg
pop
aaa
mov
xor
notl
insl
stos
mov
pop
push
lcall
sbb
jo
jecxz
les
pop
into
jo
in
dec
divl
sub
xor
add
jmp
dec
xchg
loopne
sub
mov
xor
loopne
xlat
and
cmp
rol
mov
leave
ds
pop
ss
or
xchg
std
test
mov
pop
mov
shlb
out
cli
repz
push
jmp
arpl
aas
mov
jmp
or
jmp
push
xor
xchg
mov
mov
es
dec
sub
je
es
lret
sbb
pop
inc
loope
dec
adc
jp
fs
je
xchg
mov
cli
xor
and
jp
addb
cli
and
mov
leave
pop
sbb
arpl
in
ret
or
aaa
vpavgw
aam
mov
ret
lret
push
sahf
test
and
mov
int3
cmp
mov
push
pop
hlt
xor
enter
jo
les
inc
pop
or
mov
fbstp
fs
push
test
cli
fstpt
jnp
leave
and
imul
cwtl
adc
add
push
push
mov
aad
aas
lock
pop
sahf
inc
rcll
repz
in
mov
movl
and
pop
cmp
xor
push
mov
inc
xchg
outsl
add
ja
mov
adc
jp
jl
enter
inc
insb
mov
in
shl
pop
jmp
mov
or
push
inc
imul
xchg
aam
add
jl
add
ret
adc
push
jge
fimull
jb
sbb
lods
cwtl
test
xor
popa
fisttps
adc
add
stos
fcmovnu
dec
xor
je
jbe
mov
shrl
push
lret
mov
mov
push
xchg
data16
sbb
inc
push
mov
mov
and
fsubs
xchg
lret
movsl
mov
and
adc
sbb
jecxz
pop
fiadds
mov
dec
and
out
in
mov
inc
jb
inc
insl
adc
jbe
and
pop
pushf
jp
repz
shrl
inc
cmpsl
inc
mov
cmp
or
cmp
mov
jmp
int
cld
sub
or
dec
cmp
in
loopne
imul
jb
push
das
jno
adc
or
mov
outsb
es
jmp
sub
rcll
adc
push
xor
cmpsb
aad
in
mov
les
aas
mov
mov
stos
sub
sbb
mov
sub
mov
les
jbe
addr16
xchg
loopne
and
fcompl
xchg
or
imul
repnz
fwait
shlb
inc
arpl
ficomps
pop
add
test
mov
ret
pusha
mov
icebp
test
dec
jge
ret
inc
inc
into
sbb
in
rorl
out
push
jecxz
or
inc
addr16
aas
rcrl
int
or
addl
lret
sarl
pop
jge
lods
out
add
push
adc
or
mov
add
jnp
int
add
int
cmp
push
add
mov
repz
or
repz
dec
lds
les
add
add
in
add
aad
mov
push
fists
sub
pushf
push
add
mov
repz
or
pop
dec
lds
lods
cmp
add
inc
not
test
pop
ffreep
add
int
push
mov
or
or
pop
lahf
jecxz
or
add
cmp
or
add
sub
push
loop
int
push
or
repnz
or
or
or
pop
les
or
mov
add
dec
inc
clc
add
or
xchg
add
nop
test
inc
lahf
jecxz
add
insb
or
push
sbb
repz
aad
shl
sub
push
filds
movl
movl
push
aaa
mov
xchg
les
jmp
mov
shl
xchg
xchg
xor
xchg
ret
fbstp
push
pusha
mov
shl
cli
dec
lods
xchg
xor
mov
pop
ffreep
or
int
push
mov
xor
mov
testl
or
loope
xchg
or
ret
or
out
or
or
test
push
or
pushf
add
and
lahf
jne
xor
aad
mov
dec
push
clc
inc
or
loope
xchg
or
add
lds
cmp
or
add
mov
repz
and
push
lods
cmp
or
add
adc
test
dec
lods
xchg
and
sbb
or
lea
and
jnp
sbb
sub
out
sub
sub
fisubs
call
xor
pinsrw
cwtl
xor
sbb
ds
les
sbb
cmp
sbb
cmp
cwtl
cmp
pop
les
sbb
ret
movsl
xor
push
adc
jno
cwtl
hlt
mov
hlt
xchg
hlt
mov
xchg
hlt
mov
xchg
hlt
mov
xchg
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
inc
mov
sbb
mov
mov
mov
mov
cmp
sbb
cmp
sbb
xor
jmp
in
xor
adc
xor
adc
xor
adc
mov
ret
add
sbb
in
addb
inc
or
inc
or
cmp
push
xor
xor
add
adc
nop
add
or
xchg
or
or
or
pop
popa
pop
sbb
out
xchg
xchg
sbb
lods
push
add
or
and
mov
in
dec
mov
loopne
lahf
int3
mov
dec
or
mov
loop
cmp
stc
les
mov
ss
hlt
js
push
dec
sbb
add
sbb
movsb
popf
test
leave
aaa
testl
nop
jp
testb
xorl
je
inc
jb
mov
dec
and
inc
mov
adc
lahf
inc
or
pop
stc
mov
test
sbb
add
lods
ss
lods
inc
sub
pop
push
loope
mov
mov
mull
mov
iret
loope
hlt
std
leave
cmp
cmc
xchg
rorb
repz
icebp
xchg
jno
mov
inc
jecxz
jmp
scas
or
inc
shrl
movsb
mov
sbb
test
mov
cmp
jbe
lds
jno
les
mov
fisubrl
jmp
hlt
cmp
int
dec
pop
jb
or
xchg
xchg
in
mov
scas
arpl
or
cmc
pop
or
add
insb
aad
push
add
mov
push
mov
pushf
mov
cld
pop
jle
sarl
gs
int
dec
call
xor
hlt
jb
xlat
push
adc
jp
addr16
or
mov
and
lcall
mov
push
add
xor
dec
mov
test
test
push
lret
sbb
shrb
arpl
jecxz
and
imul
push
jne
xchg
pop
arpl
and
sti
mov
or
imul
mov
dec
fimuls
jp
lock
incl
mov
test
nop
imul
int
jecxz
addl
nop
inc
mov
sub
xchg
in
out
fsubp
sub
iret
call
dec
sub
jbe
xchg
xchg
arpl
in
in
ret
das
xor
pushf
popf
test
dec
test
add
daa
jp
and
pop
ss
xchg
popf
jns
mov
in
xchg
repnz
in
rol
out
or
push
popf
mov
ja
dec
mov
mov
cmpl
les
or
addr16
es
adc
jns
sub
xchg
insb
loope
inc
inc
clc
mov
shl
jbe
push
rclb
pop
and
mov
xchg
xor
dec
test
enter
lahf
xchg
mov
dec
and
in
mov
in
and
jne
inc
outsb
out
or
inc
inc
in
les
test
sbb
in
cmp
pop
push
jnp
imul
out
adc
ret
repnz
gs
adc
mov
dec
or
add
rolb
mov
lods
xchg
outsb
ljmp
jae
lcall
dec
movl
xlat
int
aas
dec
or
repnz
or
and
add
mov
lret
pop
add
loopne
xchg
dec
jl
mov
adc
add
dec
jl
mov
adc
add
jecxz
xor
lods
aad
mov
dec
jl
mov
adc
add
push
jecxz
xor
lods
aad
mov
dec
jl
mov
adc
add
dec
sbb
xor
dec
aad
mov
dec
jl
mov
adc
add
dec
jl
mov
aad
loopne
xchg
dec
jl
mov
adc
add
dec
jl
mov
adc
add
pop
jl
mov
adc
add
dec
jl
mov
adc
add
jecxz
xor
lods
aad
mov
dec
jl
mov
adc
add
push
jecxz
xor
lods
aad
adc
adc
ret
ret
and
out
test
repz
xchg
ja
or
icebp
jmp
out
adc
loope
sarl
repnz
test
in
mov
sbb
jl
icebp
dec
shrl
gs
mov
popa
xchg
and
xchg
mov
ljmp
pop
ljmp
add
loope
xor
add
nop
adc
xchg
fs
test
xor
mov
or
pop
push
int
add
push
sbb
or
lret
cmp
test
xchg
testl
pushf
fs
arpl
dec
mov
decl
fptan
dec
mov
dec
mov
aaa
out
rol
les
add
and
push
int
add
push
arpl
fists
adc
scas
sbb
pop
add
inc
add
outsb
mov
or
out
mov
leave
loop
or
push
int3
sub
mov
int3
mov
int3
scas
xchg
mov
int3
jl
dec
sbb
aas
cmc
xchg
or
mov
repz
rorl
aaa
mov
call
cmp
push
mov
scas
or
and
xchg
mov
fisttps
inc
mov
in
scas
mov
repnz
mov
insl
pushf
pop
mov
movsl
insl
sbb
mov
jp
and
mov
xchg
jmp
mov
add
cmpsl
xchg
cmc
inc
or
sbb
leave
xchg
push
movsb
push
cmpsb
pop
cmp
je
mov
jns
ret
or
xor
lcall
addl
mov
xchg
or
cmc
or
xchg
or
mov
add
mov
push
or
movb
leave
mov
repz
leave
mov
cmp
mov
leave
mov
mov
push
popa
mov
mov
imul
xchg
cwtl
mov
test
cmc
mov
mov
add
es
cmp
test
ja
pop
test
jno
mov
sub
push
cmc
xchg
jno
aas
stos
popl
decb
scas
ja
push
xor
jb
je
ja
loop
scas
mov
sub
push
sbb
mov
pusha
mov
sti
cmp
scas
jnp
or
mov
shl
adc
imul
push
and
push
mov
mov
fs
push
add
dec
cmp
mov
inc
dec
cmp
and
or
sub
pminub
int
das
je
imul
xlat
push
xchg
cmp
xchg
inc
inc
std
jbe
and
addr16
push
rcl
imul
lods
xor
mov
xchg
cmc
xchg
pop
xchg
and
in
insb
fucomp
mov
inc
jnp
les
mov
and
ficompl
cmc
or
ds
xlat
jae
cmp
int
ret
bound
in
ds
pop
cmp
fadd
cli
out
insl
push
mov
sub
loope
movsb
int3
xchg
xchg
cmp
inc
movsb
mov
stos
subb
cld
movsb
es
sub
push
je
repnz
loope
movsb
dec
push
pop
mov
sbb
mov
hlt
or
enter
rorl
in
inc
ror
jne
out
cmp
lods
sub
je
cmp
sub
repz
xor
out
and
adc
pop
movsl
dec
in
xor
rorl
daa
test
aad
fs
repz
jecxz
hlt
scas
pop
or
stc
mov
dec
inc
imul
fprem
shl
dec
xor
or
cmp
fs
cli
push
cmp
ja
cmp
mov
mov
fs
out
inc
mov
mov
aaa
or
pop
lret
lea
jp
es
pop
int3
inc
sub
mov
mov
xchg
lds
sarl
pushf
sub
hlt
mov
adc
movsb
je
fs
pop
ret
mov
mov
inc
in
pop
rcll
jmp
xchg
mov
shll
sbb
xor
cmpsb
and
mov
int3
jne
or
push
and
jmp
aam
incl
dec
imul
or
mov
inc
pop
and
inc
shlb
inc
mov
fs
pop
fcmove
lret
push
rorb
sub
cmp
xlat
inc
mov
and
cltd
inc
dec
shlb
orl
test
and
sub
dec
fwait
incb
inc
ficoml
inc
mov
dec
push
rcll
data16
inc
je
pop
sbb
push
je
dec
push
stc
movsb
add
int3
push
and
out
mov
cmp
mov
mov
xchg
pop
nop
int
frstor
xor
sbb
dec
and
adc
pop
call
cltd
or
cmp
mov
adc
inc
mov
pop
xchg
ud0
mov
testw
sub
mov
sbb
insb
mov
add
xchg
cmp
push
push
cmpsb
xchg
in
shl
jnp
clc
movsl
cmp
lret
cld
push
pop
idivb
popa
imul
lcall
push
mov
into
mov
jecxz
add
pop
xchg
je
fdivl
cmpsb
pop
and
xchg
aad
push
mov
adc
sbb
int3
dec
xchg
ljmp
adc
mov
xchg
inc
fcoml
inc
pop
mov
lret
or
xchg
stos
rcrb
out
sbb
jno
subl
test
pop
or
inc
or
mov
push
dec
mov
xchg
addr16
dec
jmp
outsb
popf
push
shll
or
jno
movsb
movsl
call
movsb
je
mov
les
push
adc
mov
cmpl
fsubr
jne
movsb
mov
mov
in
in
fists
int
jno
ljmp
enter
mov
in
push
adc
push
sub
xchg
fiaddl
cmp
dec
rcr
jno
mov
jbe
or
fisttpll
xor
add
inc
test
fcoms
mov
pop
add
mov
xchg
adc
cs
repz
push
out
fstl
fistpl
add
jbe
xor
leave
dec
add
bound
or
cli
test
mov
sahf
fsubrs
lea
inc
xor
sub
push
lock
push
adc
loope
inc
xchg
cmp
aas
sub
adc
sbb
aam
scas
and
ficompl
push
mov
dec
jmp
bnd
push
scas
xchg
pop
icebp
inc
les
stc
daa
pop
pop
pop
scas
sbb
dec
push
lret
adc
aaa
fldenv
add
lret
ss
sub
inc
mov
add
xchg
test
inc
pushf
movsb
mov
fs
mov
dec
pusha
sarl
or
sbbb
inc
push
sub
gs
pop
insb
ss
fwait
pop
pop
lods
add
arpl
addl
cltd
fs
push
mov
lcall
into
pop
lcall
mov
outsb
lods
test
or
aas
jns
fldenv
lret
or
pop
mov
cmp
repz
push
xor
insl
adc
mov
sbb
lods
mov
or
adc
mov
sti
rcrb
pop
mov
cmp
mov
mov
inc
mov
mov
xchg
pop
lret
inc
in
movsb
push
test
ror
or
das
mov
or
sub
fwait
xchg
test
jecxz
cmpsl
cmp
jg
lret
imul
popf
fidivl
xchg
cltd
push
adc
jp
gs
add
cmp
xchg
or
pop
jp
jns
scas
push
rcr
mov
cmp
lret
and
mov
sub
jno
test
je
cs
mov
in
mov
in
push
adc
adc
rorl
decl
sub
mov
in
inc
test
xchg
enter
and
gs
jb
shll
xor
jbe
pusha
pop
jns
cmpsl
les
idivb
mov
xchg
int
inc
into
jb
inc
sbb
dec
adc
test
mov
leave
adcl
adc
inc
mov
dec
jmp
or
add
sbb
out
jl
inc
clc
ret
repz
mov
inc
aaa
jno
imul
xchg
xchg
arpl
cmp
mov
cmp
push
repz
je
into
xlat
cltd
add
sub
test
jp
sub
cltd
out
dec
adc
push
push
cltd
push
xor
push
in
and
aad
jp
mov
es
pop
or
sarl
push
arpl
xchg
in
in
push
and
xlat
int
xor
int
and
cmpsl
ret
fwait
jae
fst
jno
clc
mov
dec
sbb
and
je
scas
push
repz
cld
inc
jae
mov
test
or
pushf
or
shrl
cmpsb
fwait
stos
stos
lcall
sub
or
mov
adc
imul
and
inc
fstpl
lea
push
dec
les
push
stos
test
xchg
push
and
js
loop
out
mov
sti
adc
add
sub
daa
dec
gs
cltd
adcl
ret
ljmp
jne
shl
jbe
ret
sbb
arpl
adc
mov
xor
aaa
xchg
push
out
loope
jbe
mov
xchg
mov
popa
enter
gs
fmull
rolb
out
aaa
gs
popa
cli
in
sti
dec
jmp
mov
pop
jmp
pop
sub
dec
inc
push
stos
shll
movsl
arpl
or
sti
imul
test
aad
adc
mov
cmpsb
inc
pop
dec
les
or
xchg
cltd
ret
in
mov
cmp
xlat
es
scas
and
mov
aad
popa
inc
mov
mov
int
addb
jecxz
xlat
mov
es
test
mov
mov
add
jmp
add
sbb
push
aaa
pop
xor
add
cmpb
inc
lret
xor
dec
sub
lret
pop
dec
mov
out
test
pop
add
sub
dec
mov
loope
cmp
mov
outsb
orl
mov
fildll
jmp
add
add
movsb
sbb
mov
repz
test
ds
mov
loope
jecxz
inc
ret
mov
nop
clc
mov
ret
rcrl
or
push
push
mov
enter
push
jmp
aad
popa
xor
fadds
rcr
in
mov
pcmpgtw
mov
jecxz
iret
push
sub
xorb
fisttps
roll
daa
loop
insb
and
lret
int
push
or
push
mov
inc
and
sbb
aam
pop
fucomi
push
mov
adc
or
test
push
mov
je
mov
movsl
mov
cmpsl
repz
push
jp
xchg
xchg
add
or
shl
pop
and
lods
in
repz
mov
divb
push
jmp
mov
ret
push
adc
mov
ret
sbb
xor
mov
out
inc
leave
shl
fs
pop
shr
and
sarb
outsb
int
jmp
push
xor
repz
movsb
lock
jns
push
ret
and
cmc
sub
push
push
xor
xorl
aas
add
mov
cmp
in
and
pop
call
pop
sub
pop
daa
and
mov
cmp
addr16
jnp
add
mov
test
pop
ret
jmp
fcomip
aad
and
sti
test
cmpsl
xchg
dec
fldt
ds
mov
xchg
rcll
mov
xchg
in
ja
or
or
fldl
xchg
adc
in
adc
or
into
add
stc
dec
ljmp
inc
add
test
mov
cmpl
push
orl
out
cmc
xchg
lods
cmp
add
jbe
mov
sbb
and
cmp
ljmp
add
dec
loop
pop
pop
push
pop
lea
stos
nop
and
push
xchg
push
mov
mov
mov
aam
mov
js
dec
push
or
inc
int3
clc
fwait
je
rorl
sub
pop
inc
movl
dec
gs
dec
sbb
call
pop
mov
sbb
icebp
or
shll
sarl
sbb
dec
push
out
mov
mov
loop
arpl
add
pop
or
and
jmp
inc
movsl
dec
push
xchg
out
aam
insl
out
xchg
aas
dec
pop
inc
in
xor
sub
push
inc
jp
test
addl
insl
adc
xchg
lds
movsb
and
add
mov
add
fcoms
js
scas
jl
lea
cmc
xor
adc
push
mov
rcrl
in
add
fstl
add
into
sub
dec
lret
xchg
inc
pop
xchg
cmp
push
into
mov
cmp
push
repnz
add
cltd
inc
xchg
inc
mov
inc
fisubl
aas
popf
mov
lahf
dec
jbe
xor
dec
or
xchg
cld
add
in
rol
xchg
mov
add
inc
in
movsb
cwtl
shrl
and
loopne
sbb
ss
mov
sbb
addl
push
xchg
or
test
or
push
add
dec
je
mov
cltd
mov
pop
mov
push
and
sti
outsl
loopne
aas
xor
pop
push
leave
mov
push
sarb
dec
mov
idivl
dec
shlb
aam
push
inc
or
int
sub
dec
je
mov
aam
les
push
aam
aam
fwait
jae
in
pop
xchg
lret
aad
shll
fisubs
es
inc
je
or
mov
sbb
mov
loope
push
and
loop
dec
sti
dec
loope
mov
test
imul
jle
add
cwtl
adc
jb
mov
fimull
jp
fcmovnu
call
sub
das
cwtl
data16
imul
icebp
lcall
lods
mov
test
inc
add
subl
out
pop
out
scas
arpl
sti
rcl
xor
mov
sarl
or
enter
ficomps
inc
xor
and
test
xchg
lea
dec
jecxz
jg
mov
aam
mov
rorl
sbb
leave
ret
adc
dec
ret
loop
imul
aam
sahf
adc
pop
movsl
and
repz
stos
dec
scas
test
test
loop
cmpsl
mov
xor
mov
adc
push
int
sub
jge
and
fldl
test
in
insb
out
idivb
or
pop
aad
ljmp
mov
push
dec
sarl
aas
xchg
pop
scas
ljmp
mov
roll
xor
inc
add
and
adc
add
ds
test
or
mov
xchg
jp
sub
addr16
shl
push
inc
mov
jle
push
lock
or
movsl
add
jno
mov
sbb
in
push
pop
ret
lahf
inc
cmp
jmp
add
sbb
test
shll
data16
mov
xchg
or
and
jmp
pop
jbe
and
loopne
insb
jmp
int
mov
loope
mov
dec
test
mov
add
fcoml
inc
xchg
lods
pop
rolb
decb
xchg
push
cmpsl
inc
xchg
test
cwtl
mov
ret
pop
movsb
dec
add
scas
in
pusha
mov
xchg
ljmp
mov
or
cwtl
cmpsb
mov
fs
das
fst
ror
sti
cld
js
in
xchg
fld
cmc
xchg
mov
xchg
mov
test
mov
in
mov
aam
mov
fstpt
xchg
rol
lahf
mov
je
cwtl
aam
push
test
bnd
add
cmpsl
in
aaa
mov
pop
int
jp
push
sbb
fsubl
in
aam
mov
and
push
aaa
xchg
inc
push
std
sub
pop
popf
xor
fstps
in
cmpsl
sbb
movsb
lret
sarl
test
jns
inc
out
or
pop
inc
inc
or
cmp
jno
ror
rcl
lret
push
or
add
cmp
les
lahf
or
loope
call
lret
hlt
bound
icebp
out
mov
mov
roll
mov
hlt
inc
or
sbb
mov
jecxz
cmp
pushf
inc
fbstp
sbb
mov
adcl
xchg
xor
xchg
in
mov
hlt
dec
mov
les
add
test
push
xchg
xchg
rolb
mov
shl
adc
loopne
arpl
shll
inc
enter
push
push
mov
pop
sub
mov
sbb
pop
add
movl
movl
jae
leave
mov
sub
es
ljmp
hlt
stos
cs
ljmp
hlt
stos
es
ljmp
hlt
sbb
dec
pop
dec
hlt
negb
hlt
sbbb
pop
sub
sbbb
pop
sub
pop
and
pop
and
pop
hlt
sub
hlt
mov
mov
hlt
mov
mov
hlt
mov
mov
hlt
shl
adc
rcl
enter
jae
test
inc
fnstcw
add
shlb
sub
push
test
and
mov
std
repz
push
add
rcrl
mov
aas
stos
pop
add
test
sub
out
icebp
dec
popl
dec
mov
mov
popa
cmc
inc
push
sbb
inc
pop
pop
mov
xor
add
test
xorl
hlt
inc
lahf
lcall
cmc
add
fldcw
lcall
or
push
stos
or
lret
push
xlat
sbb
pop
fwait
test
sub
mov
mov
pop
test
cmp
push
adc
sti
cs
outsl
mov
cmp
arpl
icebp
rclb
pop
jmp
and
inc
popl
push
mov
push
inc
rcrl
and
cmp
and
cltd
hlt
sub
inc
or
sub
pushf
add
incl
adc
mov
and
mov
out
je
mov
das
add
pushf
inc
push
jecxz
xchg
mov
repz
cwtl
cld
jg
push
cmp
movsb
arpl
mov
mov
loope
add
sbb
out
mov
pop
xchg
cmpsb
outsb
inc
test
pushf
ret
adc
daa
pop
xchg
and
rcrl
aam
fwait
push
outsb
xor
push
cmp
mov
repz
inc
fs
test
lfs
cltd
and
rolb
lock
adc
and
movsb
mov
xor
xor
mov
shl
ret
pop
test
addr16
andps
rcll
out
push
mov
loope
loope
sti
mov
mov
xor
rorl
mov
shlb
pop
aam
and
jecxz
mov
shr
pop
dec
mov
je
push
out
in
mov
pop
in
out
in
mov
iret
push
or
push
dec
in
add
lret
cmp
outsl
into
push
push
mov
js
add
add
js
and
fs
mov
push
mov
test
leave
push
popa
ss
bound
flds
and
roll
adc
adc
and
inc
mov
sbb
and
pop
test
dec
jmp
cmp
loope
cltd
xlat
daa
dec
int
cmp
jecxz
ret
dec
hlt
cmpsb
enter
data16
in
fs
cmpsb
hlt
daa
shl
ds
jle
mov
push
adc
cmp
cld
inc
or
push
dec
hlt
jnp
enter
ja
mov
icebp
push
in
inc
inc
mov
add
ret
pop
pushf
xchg
push
nop
test
fnstenv
add
mov
and
mov
jg
inc
mov
out
and
mov
cmc
or
pop
pushf
push
push
fwait
test
test
test
je
mov
movsl
add
rolb
adc
pushf
test
sub
les
jecxz
mov
dec
loope
mov
fs
aam
test
jmp
lock
in
dec
pop
aam
mov
stos
mov
dec
mov
les
inc
movsb
testl
mov
lcall
push
faddl
test
add
lahf
into
loopne
xor
xchg
inc
jb
dec
xchg
push
gs
mov
inc
cmp
xchg
addl
xor
loope
inc
jno
test
pop
push
sub
js
dec
jl
cmc
lret
sar
gs
loopne
ficoml
or
test
es
xchg
jae
fs
jmp
shrb
out
sbb
push
out
leave
mov
push
jns
xor
iret
or
aam
push
xchg
fs
fcoml
jbe
mov
notb
clc
in
test
gs
mov
lods
xchg
gs
ss
imul
daa
fnstenv
or
mov
mov
push
xchg
imul
jae
and
pop
sbb
push
rcll
loope
jp
jnp
mov
orb
test
xchg
rorl
sbb
sti
mov
xor
xchg
dec
enter
aas
xchg
andl
xchg
cltd
xor
xchg
inc
add
push
fstl
jb
hlt
jbe
das
dec
cmpsb
and
xchg
out
or
adc
gs
in
xchg
enter
sub
cwtl
rol
mov
push
push
jg
in
lds
inc
inc
pushf
and
and
mov
mov
or
cli
icebp
mov
ret
or
movsl
jbe
lret
lret
push
xchg
int
mov
je
popa
ret
ret
or
sbb
dec
mov
test
ds
enter
dec
mov
cmc
test
jb
test
fsts
enter
lds
xchg
mov
push
in
add
pop
ffree
out
lea
xchg
mov
or
cmp
and
gs
and
push
ret
or
cmp
mov
pop
jmp
fwait
push
test
mov
xor
adc
and
les
jge
les
jne
add
cmp
ret
xchg
loopne
push
adc
jge
mov
pop
mov
xchg
mov
ret
adc
imul
xor
adc
insl
imul
ja
clc
cmp
aaa
mov
cmp
aaa
into
insl
mov
fdivrs
push
and
dec
and
cmovs
cmp
push
in
ret
xor
pop
lcall
push
das
mov
ret
push
add
hlt
jp
cmp
insb
dec
mov
or
aaa
pop
mov
dec
sub
inc
inc
mov
fs
stos
movl
xor
shld
push
push
movsb
cmpsl
cmp
mov
sub
inc
sub
inc
sub
push
adc
arpl
mov
in
arpl
sbb
dec
push
inc
pushf
arpl
les
xchg
shlb
les
push
fisubs
or
add
loope
add
cwtl
cmp
int
jp
xchg
pop
mov
mov
xchg
das
movsb
ret
call
ja
add
inc
loope
sti
push
or
pop
das
sahf
movsb
and
inc
jno
cmpsb
or
push
pop
sbb
pop
add
and
xchg
divb
mov
push
dec
mov
dec
mov
arpl
or
loop
std
adc
out
or
lcall
xor
lret
test
stos
js
lret
fsubrl
inc
push
cmc
push
push
cmp
dec
jge
jns
jmp
cli
and
mov
insb
push
mov
or
lret
sbb
push
int
fistpl
mov
in
jge
aam
pop
out
xchg
sbb
inc
inc
scas
in
test
sbb
mov
xor
mov
dec
mov
pop
mov
push
test
xchg
out
xor
mov
incb
dec
and
sub
gs
jmp
and
cwtl
ret
gs
addr16
leave
lret
add
pop
nop
movsb
andb
test
dec
dec
mov
push
and
ds
rclb
pop
es
mov
or
fwait
jp
xchg
push
push
ja
adc
jbe
add
mov
call
push
add
enter
pop
mov
cli
and
sbb
or
dec
int3
stc
dec
add
lcall
xchg
cmova
movsb
lcall
shll
jb
loop
mov
push
test
xor
pop
int3
inc
movsb
cmp
mov
or
or
xchg
inc
add
pushf
push
cmp
push
jmp
outsl
andb
outsl
scas
pop
dec
push
stos
sub
dec
or
test
push
ret
sub
push
loopne
add
dec
loope
and
dec
mov
lret
add
sub
test
add
cmpsb
aad
dec
pop
add
push
sub
xchg
mov
mov
xor
xor
xor
xor
mov
adc
jae
add
leave
mov
sub
call
xchg
add
xchg
add
test
shrl
mov
mov
outsb
sbb
xchg
lds
adc
mov
adc
pushf
add
jecxz
lds
sbb
in
ret
inc
or
mov
and
addr16
adc
add
scas
imul
int
or
inc
jecxz
aas
adc
stc
xor
rorl
or
sub
cmpsl
dec
jge
test
pop
cmpsb
stc
flds
push
fisttpl
add
pop
lods
cli
int3
add
inc
int
push
xchg
mov
ja
jl
mov
rclb
ret
sbb
adc
pop
push
subb
mul
and
fnstcw
pushf
popa
dec
add
test
mov
inc
jecxz
hlt
xchg
cmc
sbb
lds
clc
pop
pop
pop
or
insb
arpl
add
lret
push
cmc
inc
mov
xchg
repz
xchg
sub
test
and
mov
les
pop
xchg
jmp
cmp
adc
push
mov
test
pop
mov
pop
dec
hlt
loope
out
int
rcll
sbb
jp
mov
dec
push
or
inc
push
addr16
ret
int
aad
out
xchg
daa
jl
ret
aaa
inc
xor
lods
xchg
shll
loope
push
pop
lock
jg
and
push
mov
loope
fnstenv
fsubs
ret
ja
fisubs
mov
ljmp
jge
lea
dec
xor
jmp
aam
insb
icebp
int
push
or
icebp
adc
mov
cmpsl
xlat
xchg
test
sub
clc
xchg
push
and
scas
dec
flds
dec
rcr
mov
xchg
sub
push
sbb
or
mov
or
pusha
jecxz
adc
jle
cli
sbb
dec
jmp
xor
or
push
repz
ljmp
into
sbb
push
mov
mov
jecxz
adc
pop
dec
push
test
das
dec
gs
adc
repz
mov
mov
in
dec
dec
mov
outsb
xor
sbb
inc
call
or
les
imul
cmp
jns
mov
push
movsl
in
sub
jno
push
dec
add
enter
cs
push
mov
mov
imul
sub
push
add
mov
adc
pop
or
sub
or
or
dec
inc
leave
sbb
and
sub
dec
adc
int
add
sub
js
aam
xchg
fbstp
mov
pshufw
jae
fnstcw
or
add
arpl
stos
daa
inc
add
mov
sbb
leave
hlt
jae
scas
dec
jge
fs
aad
gs
jmp
sub
jae
sub
fcomp
test
sahf
fildll
push
lret
enter
xlat
pop
sbb
ret
fdivs
hlt
inc
lds
push
aas
inc
cmp
lods
rol
or
cmp
and
jae
sub
imul
xchg
inc
aad
adc
nop
fs
sarl
repnz
cmpsb
dec
xchg
mov
xchg
xor
in
xor
stc
push
xor
movsb
sub
xor
xchg
cwtl
jge
lds
roll
test
idivl
cmpsb
les
xchg
mov
std
cltd
or
out
pop
dec
jp
mov
inc
ret
ss
mov
mov
xor
test
push
xchg
mov
cmpsb
add
cmp
insl
push
add
jb
out
jg
popa
inc
dec
cmpsl
add
jg
dec
bound
or
mov
add
popf
test
pop
sbb
pop
int3
adc
inc
xor
cmp
or
or
aad
cmpsb
mov
sub
inc
mov
pop
insl
sbb
sub
push
ja
rolb
ret
js
mov
insb
mov
pop
and
lods
shll
out
inc
jnp
push
pop
push
arpl
sar
adc
movsb
jae
mov
adc
sub
insb
adc
xor
test
pop
shrl
in
add
daa
cmp
filds
push
cmp
insb
test
cmc
loopne
jg
or
lahf
mov
cmpsl
in
xor
lcall
and
lcall
scas
xchg
int
cwtl
sti
iret
and
dec
dec
in
jle
ja
test
push
adc
jnp
nop
mov
sbb
mov
inc
shll
nop
fldenv
mov
jne
pop
push
push
dec
and
scas
enter
movsb
mov
ds
je
aaa
shl
aas
gs
repnz
loopne
inc
dec
and
fcomi
aad
mov
into
mov
add
jae
rcrb
push
mov
xor
cmp
mov
mov
mov
sahf
dec
and
test
cld
mov
enter
mov
jnp
hlt
xor
cmp
cmp
push
clc
stos
jno
inc
or
adc
mov
jb
inc
sub
iret
ret
or
mov
into
inc
inc
or
out
or
mov
arpl
ret
add
fdivl
loopne
push
aad
loopne
lret
ds
js
ret
je
subl
int3
leave
ljmp
mov
inc
and
dec
cwtl
jmp
je
movsb
jp
jns
aam
cmpsb
or
xor
inc
inc
stos
jle
xor
jmp
add
leave
test
ss
mov
gs
inc
arpl
enter
in
jecxz
xor
pop
and
in
scas
and
pop
int3
and
and
lret
and
push
shl
cmovle
cli
adc
ljmp
adc
insb
adc
xchg
pop
cld
in
add
cmc
push
push
mov
aam
push
mov
xchg
mov
sub
stos
cmp
arpl
sti
or
xor
fs
jb
jne
adc
add
in
mov
adc
sub
flds
arpl
mov
mov
xlat
mov
jo
mov
xchg
push
es
xor
lret
flds
add
xor
jae
push
jmp
fcomps
dec
fcmovb
mov
faddl
dec
aaa
sbb
lods
decb
xchg
inc
rolb
inc
test
ret
movsb
push
cmovg
jns
sbb
shll
shrl
push
xchg
jp
ret
jne
adc
int3
test
addl
add
int3
les
enter
push
outsb
sub
stc
jg
clc
ret
dec
mov
js
mov
imul
pop
jp
cli
testb
mov
xchg
shll
xchg
sbb
add
and
push
in
bound
pop
scas
mov
sub
mov
movsl
push
jecxz
ret
nop
mov
xchg
push
ret
or
inc
dec
push
or
pop
outsl
imul
test
inc
movsl
cltd
sub
cmp
popl
adc
test
and
xchg
arpl
adc
push
arpl
add
mov
jg
je
xor
out
sub
aaa
div
aas
push
mov
pop
cs
dec
fs
inc
test
stc
test
mov
inc
inc
inc
mov
shrl
mov
bound
test
xor
lds
jmp
dec
mov
fs
mov
xchg
mov
push
or
push
and
pop
push
outsb
mov
int
xchg
mov
mov
ret
ljmp
push
sbb
or
loop
fwait
sub
pushf
xchg
es
test
xchg
cltd
inc
xor
jne
addl
jg
or
and
cmp
lret
mov
add
push
jmp
or
sub
mov
into
data16
fmull
and
add
jno
sub
jne
adc
movsl
hlt
push
inc
adc
and
orl
test
or
xlat
stos
stos
adc
xchg
sbb
je
jo
fcomps
and
test
xorb
adc
hlt
dec
or
and
enter
test
les
mov
or
xor
aam
hlt
repnz
push
stos
xor
push
mov
xor
jno
xor
dec
cli
outsl
fs
leave
inc
shll
loopne
or
les
cs
jno
pop
out
and
inc
push
dec
int3
les
out
scas
fwait
mov
lds
test
sarl
jecxz
mov
test
fidivl
mov
sub
aad
sbbl
sbb
mov
sbb
aam
pop
xor
inc
mov
push
sub
mov
cmp
inc
lret
push
nop
leave
mov
add
push
fwait
cmp
dec
jns
or
cwtl
dec
cmp
push
repz
add
fwait
ror
push
mov
mov
xchg
push
mov
movsb
mov
sti
jmp
rcrb
sbb
test
push
and
push
push
xchg
cmp
sub
mov
xor
mov
jae
xchg
call
xor
add
adc
ss
inc
in
gs
jae
test
int
lds
or
mov
ljmp
out
xchg
shrl
loope
sarb
pop
push
jb
imul
pop
push
inc
xchg
dec
jno
jb
push
andb
lds
sub
xor
cmp
xchg
mov
mov
pop
xchg
jnp
xor
xor
cmc
fsubrp
enter
push
daa
arpl
add
lret
test
inc
pop
sub
shll
roll
call
in
or
mul
xchg
jne
add
movsl
decl
or
test
cmpb
or
fdivrs
mov
pop
loopne
or
test
xchg
imul
jns
jbe
stos
mov
dec
push
je
mov
leave
xchg
in
shll
pushf
je
insb
dec
xchg
dec
int
mov
inc
jge
aad
xorb
add
pop
sahf
dec
mov
mov
test
xchg
add
rcrl
mov
test
sbb
xorl
into
cs
cld
xchg
addl
dec
push
call
add
loope
push
ret
dec
iret
add
and
movb
movsl
out
dec
test
cmp
cltd
add
outsl
popa
dec
test
push
rorb
mov
inc
movl
jbe
pop
mov
leave
mov
imul
cmp
sub
dec
lds
leave
or
cmc
test
loope
mov
xchg
aaa
test
mov
repz
jecxz
int
rcll
jecxz
cltd
mov
push
cmpsb
aad
imul
pop
leave
inc
test
insb
push
int
in
roll
leave
aam
imul
in
fidivrl
or
mov
insb
sbb
pop
cltd
aad
pop
insb
mov
rcrb
movsb
pop
out
mov
mov
les
out
mov
xchg
mov
jnp
psllq
jnp
adc
out
rorl
fnstenv
dec
xchg
pop
and
lret
adc
es
je
gs
rcr
ss
shl
scas
cmp
or
lahf
push
subl
push
push
sbb
inc
les
push
push
loope
cmp
scas
add
xor
hlt
subl
shll
mov
mov
pusha
or
in
add
in
fildl
fldl
push
pop
in
insb
inc
dec
xchg
xor
in
or
pop
shll
xor
push
dec
xchg
sbb
xlat
xchg
xor
mov
xchg
fs
add
adc
xchg
or
jmp
or
pop
fs
dec
rcll
lds
push
cs
lcall
fisubs
pop
repz
sub
pushf
sbbl
lret
mov
nop
push
out
xor
ret
xor
stos
sbb
or
xchg
sbb
mov
add
xchg
push
pop
and
mov
or
xchg
xor
aas
add
ss
adc
mov
icebp
inc
dec
mov
push
and
imul
xchg
mov
loope
loope
int3
add
push
or
mov
xchg
js
ljmp
test
add
rol
sbb
rolb
lret
shll
call
sbb
xor
rcll
inc
sbb
insb
mov
xchg
lcall
stos
add
mov
arpl
faddl
add
lret
or
push
and
js
in
test
inc
add
push
jp
sub
dec
pop
adc
and
int
je
inc
adc
xor
js
jmp
jno
negb
shll
test
loope
call
lock
inc
fstpt
jnp
test
cmp
mov
dec
xor
mov
cld
andl
mov
lods
and
in
clc
xchg
repz
push
clc
lds
fldt
pop
pop
enter
sarl
mov
push
adc
scas
mov
mov
hlt
pop
scas
mov
pop
lds
add
adc
or
jo
lds
xor
test
inc
clc
cltd
pop
xchg
push
xchg
mov
daa
mov
sti
out
jmp
push
inc
pop
push
into
adc
jne
int
xchg
test
test
adc
pop
or
add
and
daa
dec
in
push
ret
mov
ss
add
push
push
inc
addr16
imul
xchg
add
push
push
or
push
call
xor
les
push
adc
xchg
ja
sub
shl
jo
cwtl
adc
test
mov
pop
scas
pop
cmc
roll
cmp
test
shll
ss
dec
lods
mov
shll
or
push
movsl
cmp
lahf
cmp
push
or
cld
out
cld
sub
ljmp
mov
cmpsb
jecxz
roll
leave
inc
mov
jecxz
or
test
pop
les
jecxz
push
push
push
out
rol
xchg
or
int
mov
and
repz
xor
rorb
icebp
jl
or
mov
call
test
insl
ljmp
mov
ret
in
loopne
clc
loope
jecxz
test
insl
inc
dec
or
and
lds
mov
jbe
out
push
fadds
lds
ret
mov
or
lods
add
or
or
mov
in
rclb
mov
mov
subl
sub
test
adc
sbbb
fdivrl
xchg
movsl
lret
mov
sub
cwtl
call
ret
aaa
or
push
jecxz
lds
xchg
jecxz
mov
xchg
pop
sbb
hlt
push
notb
adc
jecxz
pusha
lds
push
lods
xchg
lds
leave
sbb
in
ret
pop
test
jae
out
xlat
adc
ret
or
sbb
je
mov
jle
xchg
push
in
fsub
ja
movsl
xchg
jge
mov
ja
pusha
pusha
clc
cmc
imul
stc
bt
add
push
lea
jmp
jmp
fldln2
insl
pop
mov
popf
fxch
je
inc
data16
sub
mov
jbe
mov
es
adc
xor
jecxz
movsb
cmp
ljmp
lds
push
mov
movsb
mov
subb
sbb
scas
fists
push
jp
and
sbb
aad
fdivp
mov
mov
jl
pop
push
scas
sub
imul
push
adc
inc
or
dec
dec
scas
push
jb
movsl
inc
cli
sbb
cmp
xlat
aaa
nop
or
hlt
fcmovne
leave
push
xchg
ss
push
scas
cmp
xor
int3
pop
cmp
clc
das
inc
mov
fwait
setb
mov
iret
adc
call
in
jbe
mov
mov
lret
dec
add
int3
lods
js
in
jecxz
or
adcb
fcomps
and
fdiv
ljmp
sub
imul
fnstsw
fnstenv
inc
dec
iret
daa
popa
stos
sub
add
repnz
xor
jbe
fnstenv
scas
mov
dec
lret
shll
inc
or
pop
dec
lock
lea
jbe
loopne
sbb
or
add
scas
jle
popf
imul
mov
xor
les
mov
pop
pop
mov
adc
lds
or
aad
pop
lret
push
mov
xchg
call
pop
push
test
dec
daa
insb
pop
jg
iret
lods
jne
adc
xor
scas
xlat
imul
mov
sbb
sub
inc
test
mov
cld
sahf
loop
pop
cmp
and
arpl
das
mov
xor
adc
jbe
lods
dec
out
mov
pop
xchg
imul
loopne
fcoms
jno
cmpsb
xor
xorb
lock
and
add
push
mov
or
ljmp
test
addr16
jne
arpl
call
pop
xchg
cmp
and
ljmp
xchg
jo
movl
push
lea
jmp
pushf
mov
pusha
push
lea
jmp
dec
call
lahf
aaa
dec
stos
sub
or
loope
cli
mov
mov
xchg
mov
inc
mov
shll
dec
mov
add
adcl
push
push
xchg
aad
out
sti
faddp
mov
dec
jns
inc
inc
xchg
leave
and
loop
dec
loop
or
push
pop
add
mov
xor
addr16
cwtl
dec
iret
lahf
cmpsl
dec
shl
add
ds
imul
cmp
and
dec
sbb
movb
movsb
mov
call
cmpsb
push
or
lahf
sub
cld
int
sahf
add
iret
outsl
push
jne
adc
xor
loope
sub
adc
adc
lea
ja
cmp
cmp
cmp
cmp
add
bt
or
call
push
jmp
cmp
cmpb
pushf
push
mov
pushl
lea
jmp
movw
lea
je
push
add
cmc
pusha
cmp
call
lea
je
cmp
stc
stc
jmp
pop
test
cmp
loopne
fidivs
aaa
push
push
cli
or
out
or
into
add
push
arpl
int3
pop
out
cwtl
jg
clc
dec
cmp
cli
nop
jmp
add
mov
aam
pop
xchg
data16
jmp
lea
je
pushf
mov
lahf
lea
pushf
pushf
pusha
pushl
xchg
mov
call
clc
call
pushf
lea
jp
pushf
lea
jae
bts
mov
clc
cmp
jmp
jecxz
sbb
dec
jbe
cmp
repz
xor
stos
cmp
mov
mov
push
ret
mov
xor
dec
add
in
movsl
mov
cltd
xchg
lea
pushf
and
mov
add
fimull
mov
inc
adc
repnz
sbb
and
inc
sbb
inc
jmp
pushf
call
pusha
test
call
stc
cmc
pusha
sub
cmc
movw
pusha
clc
shr
push
pushf
lea
je
jmp
cmp
pusha
sub
jmp
push
cmp
pusha
push
movb
jmp
dec
cmp
adcl
hlt
jnp
pop
out
xchg
cmp
jae
ljmp
jae
insb
pusha
mov
testb
cmp
scas
push
adc
jns
sbb
shr
push
jg
inc
xorb
call
dec
popa
sbb
icebp
inc
adc
imull
cmp
pushf
mov
lea
ja
sub
sub
shrd
rol
add
rcl
btc
sub
setbe
mov
cmp
and
call
mov
rclb
clc
leave
add
cmp
add
scas
ficoms
mov
lret
and
rcrb
jae
filds
movsl
andl
aam
sbb
clc
and
subb
mov
mov
mov
xor
mov
aaa
out
rol
push
daa
add
rorl
movsl
dec
push
jne
adc
or
cmp
cli
jmp
push
sbb
and
call
call
pushf
lea
jne
pushf
movw
mov
call
pushf
stc
repnz
push
pusha
push
lea
jne
bts
shr
mov
inc
bsf
rcr
rcl
sub
shrd
btc
sub
mov
clc
cmp
sub
cmc
pushl
pusha
pusha
clc
call
lea
jne
shl
shrd
bsf
sub
bsf
clc
mov
cmc
clc
sar
cmp
add
and
mov
pusha
cmp
test
call
bound
inc
inc
sbb
or
ljmp
testb
pusha
mov
fld
sar
sbb
mov
scas
jle
cli
add
leave
adc
xchg
lock
dec
mov
sub
out
shrl
fsubs
inc
mov
push
loop
das
inc
pop
adc
jo
and
xchg
cli
jmp
push
in
mov
scas
pushl
call
cs
out
int
and
stc
lcall
sub
jle
pop
adc
mov
bound
push
popf
clc
jecxz
ret
iret
movsl
xor
sub
sbb
xchg
ds
ret
xchg
imul
fs
xchg
cs
pusha
sbb
push
adc
out
mov
mov
scas
test
pop
mov
mov
adcb
scas
fmull
xchg
insl
jns
add
cmp
into
andl
adc
push
in
data16
ljmp
jno
in
rolb
dec
insb
sbb
scas
mov
fcoms
pop
add
and
icebp
cmp
mov
xchg
je
xchg
lods
cmp
add
ret
fwait
pop
pop
push
mov
jmp
insb
out
sbb
push
aad
and
stos
jae
sahf
icebp
mov
dec
loop
push
pop
xchg
enter
push
fwait
pop
pop
out
popl
sub
sub
and
push
sbb
pop
std
movsb
popa
movsl
or
mov
pop
mov
fwait
pop
pop
inc
fcoms
repz
mov
jo
cmc
sbb
popf
xlat
out
mov
adc
mov
pushf
pushf
lea
jne
pusha
lea
call
push
lea
jmp
jmp
pushf
jmp
js
push
adc
inc
mov
dec
sub
inc
popa
xorl
dec
dec
sub
xchg
dec
xchg
in
add
std
movsb
dec
std
lods
mov
sbb
mov
add
mov
mov
sub
push
jbe
xchg
xchg
out
popf
movsb
popa
mov
scas
testl
pusha
mov
sub
sub
cli
pop
pop
sbb
xor
in
inc
jae
lods
out
repz
int3
jo
mov
mov
push
sahf
rolb
fcmovnb
ja
dec
pop
sub
rol
mov
mov
mov
pop
test
sbb
shl
or
loop
sub
sbb
jbe
xchg
inc
and
jno
jg
out
pusha
mov
or
add
faddl
jmp
in
repz
cwtl
fdivrl
lcall
shll
jnp
push
mov
into
pop
out
and
or
aad
xor
push
mov
sbb
xor
hlt
and
jb
adc
subl
out
fnstenv
insb
cmc
mov
rep
scas
adc
dec
jl
adc
pusha
call
popl
pushf
seto
movsbw
mov
movzbw
movl
pop
setns
lea
pusha
jmp
call
mov
cmc
mov
not
mov
clc
pushl
cmp
pushl
push
push
lea
jbe
shld
mov
cmc
or
add
and
movsbw
bt
adc
mov
and
btc
add
pusha
bt
movl
add
stc
bswap
mov
add
cmc
stc
cmp
cmp
pushf
pusha
pusha
mov
lea
jbe
adc
shld
add
shrd
sub
sar
xor
mov
cmc
mov
mov
shl
bsf
add
bsr
rcr
movzbw
sbb
shr
bswap
shl
lea
mov
movzbw
adc
add
movzbw
push
not
movsbl
mov
lea
pusha
call
and
dec
fidivrs
mov
rcrl
ljmp
lahf
imul
sahf
dec
push
cmc
sbb
loopne
mov
pusha
js
aad
ficompl
cmc
mov
adc
out
push
adc
loopne
inc
rcrb
jmp
cmc
pop
repz
dec
in
inc
aad
jl
mov
jnp
jae
add
push
push
ljmp
push
sahf
andl
jle
lea
popf
int
shll
inc
xor
daa
insb
in
adc
fs
popl
outsl
sbb
sbb
stos
dec
mov
and
scas
push
hlt
or
aam
dec
mov
mov
push
bnd
dec
sahf
adc
sbb
xor
sub
add
add
movsbl
lahf
lea
jmp
test
inc
clc
mov
shl
mov
shl
mov
pusha
jmp
test
test
cmp
pusha
add
jmp
push
lea
pushf
mov
pusha
push
mov
movsbw
lahf
mov
movsbw
bswap
pushl
mov
lea
jmp
pushf
lea
jne
call
movl
pushl
pusha
call
cmp
pusha
push
pushf
movb
lea
je
bt
jmp
dec
jbe
cmp
or
jne
into
dec
xchg
mov
movsb
cmpsb
and
outsb
aam
mulb
or
outsl
sbb
leave
lret
sti
popa
scas
or
cld
sbb
xchg
or
jno
loopne
call
fidivrs
dec
daa
aaa
mov
stos
xor
insl
jo
push
iret
andl
mov
pop
cmp
xor
cmp
dec
pop
dec
mov
loopne
out
sbb
and
add
pop
jae
mov
popa
inc
cmc
or
aaa
out
clc
daa
mov
cmp
add
mov
inc
ffreep
outsb
nop
inc
std
jecxz
mov
mov
js
sbb
mov
int
inc
sarl
movsl
sbb
nop
nop
mov
cld
and
mov
pusha
adc
std
dec
cli
jg
mov
popa
pop
addl
mov
mov
xchg
dec
out
sbb
adc
dec
or
mov
fdivs
les
xor
repz
dec
push
push
xchg
jo
andl
or
mov
out
int
iret
outsb
sub
inc
iret
xor
lods
sbb
and
call
lods
lcall
sahf
test
inc
lahf
das
jp
lcall
movsl
adc
push
aam
popl
push
sarb
lock
cmp
insb
sti
jo
mov
pop
jo
sub
push
mov
sub
cmc
mov
popf
push
call
adc
ret
mov
movw
call
pushf
call
call
pusha
movb
lea
jae
xchg
xchg
mov
inc
jmp
push
pusha
call
lea
jae
dec
add
adc
btr
mov
rcl
shrd
mov
or
mov
cmc
clc
test
sub
call
pop
stc
xor
jmp
ja
pop
leave
add
sub
add
push
subl
popf
in
or
and
inc
mov
clc
in
lods
mov
je
sbb
movsb
arpl
inc
stos
subl
shll
xchg
inc
call
mov
shr
filds
mov
jecxz
jecxz
btc
add
not
call
lea
je
push
push
lea
jmp
movw
test
shr
bt
jmp
test
jmp
cmp
push
lea
ja
bswap
push
mov
movzbw
mov
setnp
mov
lea
movzbw
mov
push
not
mov
mov
pushf
pushf
pushf
mov
jno
pushf
mov
pusha
pushf
pushl
ret
lea
jne
das
sub
shl
bt
mov
pushf
and
rol
add
sbb
rol
mov
stc
bt
stc
stc
test
jmp
jmp
pusha
pushf
lea
je
cmc
cmp
pusha
cmp
lea
push
movb
call
ror
lea
jns
stc
sub
test
test
stc
push
pushw
popfw
pusha
lea
jnp
inc
pusha
push
adc
lea
pushf
pushl
ret
push
pusha
mov
movb
lea
jmp
jmp
push
cmp
fstps
mov
sub
testb
pusha
outsl
std
cs
jmp
mov
add
add
push
std
sub
and
jmp
mov
xchg
sbb
inc
push
xchg
lods
lea
pop
divl
rclb
int3
or
inc
insb
jo
cmc
test
lret
shlb
jmp
mov
pushf
fcmovne
sarb
dec
inc
adc
dec
xchg
fistl
aam
xchg
cmp
mov
shrb
xchg
lcallw
in
notb
inc
adc
call
cli
cmp
fisttpll
scas
xchg
jg
xchg
mov
and
or
and
imul
sarl
add
les
jbe
test
mov
jle
mov
push
cmp
int3
mul
das
shrl
mov
stc
aaa
pop
popfw
and
pop
push
sbb
addb
mov
out
rol
aas
xchg
xchg
cmp
ja
mov
sub
sub
fstpl
xchg
push
test
adcl
addr16
data16
or
cmp
imul
cmpsl
aaa
or
mov
inc
cmp
int
pop
popa
mov
cmp
test
shr
mov
mov
stos
jnp
mov
js
jecxz
cli
xchg
xchg
xor
adc
push
mov
adc
xlat
ja
fwait
inc
dec
sbb
out
mov
testl
lea
outsb
adc
mov
lock
push
lods
mov
stos
pop
or
sub
adc
cwtl
scas
sbb
and
enter
loope
in
nop
fstp
xchg
push
or
jo
xchg
add
cld
jg
jns
fstpl
lret
or
pop
sub
pop
fprem
push
mov
cmp
test
insl
popa
jmp
push
jg
lods
mov
mov
clc
or
fldl
xacquire
and
into
mov
ret
fcoml
pop
cmpsb
pop
mov
sti
call
call
pusha
pusha
pushl
lea
je
jb
bt
shrd
add
shrd
push
bswap
xchg
sub
movzbw
stc
xchg
shr
dec
call
arpl
or
pop
mov
fs
mov
outsb
sbb
inc
in
lahf
pushf
into
pop
adc
andb
in
mov
repz
loopne
pop
lret
cli
ljmp
mov
inc
xchg
push
es
mov
inc
push
iret
call
sbb
jp
loope
insl
mov
sbb
push
fwait
shll
ret
scas
mov
xlat
jle
push
add
dec
in
mov
inc
ljmp
lock
in
ljmp
fcoms
pop
cmpsl
pop
movsl
dec
pusha
push
call
inc
pushl
movl
mov
pushf
adc
mov
pushf
pushf
pushl
ret
push
fwait
pop
sbb
sahf
pop
sbb
pop
pushf
pushf
fistpl
push
lea
jne
setb
pushf
mov
cmp
mov
btc
clc
sub
movzbl
lea
jmp
bt
pushf
cmc
push
or
call
call
pusha
lea
jae
clc
clc
cmp
cmp
jmp
push
movw
lea
jne
btr
dec
adc
ror
mov
ror
bswap
pusha
sbb
sub
rcr
cmp
movzbw
and
lea
pusha
movb
sub
cmp
clc
bt
pushl
popl
pushl
cmp
call
adc
mov
lea
jmp
mov
jmp
shl
test
test
xor
repz
mov
jne
pop
pushf
shll
sub
nop
cmp
sbb
xchg
inc
inc
stos
dec
repz
inc
add
cmpsb
push
cmp
adc
mov
out
in
mov
es
jno
cmc
shlb
push
mov
iret
pop
pushl
mov
mov
xchg
mov
lahf
repnz
xchg
mov
fstps
cld
rcl
insl
push
sbb
mov
je
pop
test
mov
mov
dec
jb
pop
adc
sbb
andl
sub
xorps
std
dec
bound
insl
jo
jl
in
sbb
mov
mov
jmp
sahf
leave
sahf
movsb
and
mov
or
or
test
mov
jmp
adc
add
pop
mov
mov
xlat
adc
mov
push
cmpsb
test
int
dec
and
in
loopne
cld
jl
push
xchg
cmp
hlt
shr
pop
adc
lea
das
fcoml
flds
dec
leave
xor
jle
mov
shll
ret
push
jae
pop
pushf
jmp
jae
inc
lcall
xchg
jno
fmuls
jl
fsubs
iret
xchg
fbstp
sti
mov
or
push
loope
cltd
cmp
sub
rcrl
je
xor
call
pop
mov
enter
ds
mov
and
js
push
data16
pusha
in
push
ror
movsb
or
inc
or
sub
jecxz
ffree
mov
fistps
jg
push
adc
xlat
inc
sbb
aas
mov
dec
jns
call
pop
dec
xlat
add
loope
cmc
cld
mov
push
and
mov
and
popa
test
inc
sbb
incl
movb
call
push
rorl
mov
push
insb
cmc
scas
gs
xchg
popf
cmpsb
inc
cmp
jg
adc
das
scas
repz
movl
jmp
lea
lea
lea
push
movl
call
push
cmp
call
movzwl
sar
shr
mov
cmp
pushf
add
call
cmp
pushf
pusha
lea
jae
bswap
jmp
ror
call
mov
or
pop
mov
jmp
or
jl
leave
push
pop
mov
mov
adc
in
rcrl
leave
add
test
repz
movsl
orb
sub
inc
push
icebp
jl
jp
mov
jbe,pt
xor
push
adcl
sub
sbb
test
adc
mov
movzbw
movb
cwtl
call
loopne
lock
and
sarb
jo
mov
push
sub
ret
outsb
imul
and
mov
mov
enter
lret
push
movsl
mov
out
and
adc
pop
repnz
and
out
loop
std
sub
mov
cltd
lods
rorb
sbb
jmp
adc
cld
pop
sub
and
call
pusha
jmp
daa
movsb
aas
push
popa
out
lds
add
push
jge
mov
movsb
mov
test
mov
enter
iret
cmp
adc
fldenv
adc
add
fsts
hlt
sbb
dec
jl
into
mov
or
das
ljmp
jp
fwait
sub
add
adc
pusha
mov
xchg
ds
incl
add
and
sti
pushl
add
ss
shrl
jecxz
sbb
or
jl
ja
cmp
push
or
cmpb
in
jo
jp
rcr
pop
inc
dec
sub
mov
int
mov
stos
adc
insl
push
sbb
dec
popf
jnp
and
jns
inc
outsb
and
mov
pop
xor
xor
les
mov
js
std
jge
call
and
imul
pop
mov
lret
jnp
outsl
pusha
inc
mov
xchg
cmpsb
mov
inc
popa
cli
sub
fs
sub
dec
int3
add
fidivl
not
and
inc
in
jg
lret
sbb
clc
push
lds
or
fdivr
add
stos
mov
cmpsb
pop
aad
xor
icebp
mov
lahf
das
jp
lea
fsubl
call
stos
sub
in
sub
aaa
jmp
js
movsl
ret
jae
or
inc
xor
nop
cmp
movsl
adc
sbb
xchg
stos
pop
out
daa
lret
adc
ficoms
cmp
call
sub
pop
mov
cmpl
stc
sbb
add
insl
xorl
pop
aaa
add
or
lcall
movsb
and
sbb
dec
and
mov
lret
lods
inc
cmp
in
lock
fisubl
mov
adc
mov
icebp
and
push
dec
cld
or
fsubrl
leave
fdiv
xchg
test
fldcw
aas
das
sub
fmuls
je
adc
jbe
mov
pop
mov
jb
loopne
imull
sbb
pop
jl
push
loope
xchg
fldcw
dec
repnz
pop
mov
or
xchg
sbb
repnz
xchg
lret
xor
jle
inc
xchg
or
inc
push
test
ret
pop
fs
div
stos
rcl
mov
adc
nop
push
xchg
xor
jns
idivb
or
cmpsb
hlt
les
mov
pushf
stos
shrb
loop
ljmp
mov
rorb
xchg
jecxz
xor
repz
jno
dec
mov
in
push
insl
inc
adc
push
xor
inc
test
and
cmp
pop
xchg
incl
mov
pop
fstl
sub
loope
call
ss
fmuls
out
dec
dec
dec
outsl
leave
xor
jecxz
lret
arpl
mov
and
or
test
fildl
fwait
dec
inc
cmp
in
scas
arpl
push
push
jecxz
pop
mov
aam
sbb
dec
idivb
xor
cmp
pop
fmulp
rcl
xor
xlat
push
and
push
push
cmpsb
aad
test
stc
inc
repnz
xlat
xchg
sti
outsb
add
mov
xchg
repnz
dec
adc
ljmp
sti
call
call
adc
pusha
lea
call
push
call
mov
lea
push
call
push
outsl
lahf
cmp
nopl
pop
fldl
cmpsl
inc
into
pop
or
lods
mov
xchg
pop
ret
loopne
popf
pslld
xor
mov
jecxz
mov
or
mov
iret
lds
and
rcrb
repz
adc
ret
jno
shl
xchg
insb
cmc
test
subb
loop
shlb
pop
mov
cpuid
nop
pusha
pusha
lea
je
pushf
movl
pushf
pusha
mov
movl
push
pusha
lea
jmp
pop
and
lock
rcrb
jbe
dec
pop
outsl
es
jbe
ss
out
pop
cmp
in
les
push
and
mov
cmp
movsl
jmp
mov
fstps
fcmovnu
sbb
bound
pop
lret
subb
inc
addr16
mov
jno
rcrb
in
push
imul
dec
cmp
xchg
pop
subl
int
pop
add
pop
mov
or
add
lret
dec
std
mov
pusha
adc
mov
push
insb
stc
in
add
pushf
or
push
lea
movsb
xor
call
mov
in
mov
mov
testb
xchg
push
lock
add
adc
pop
cld
pop
add
add
add
add
add
add
add
add
push
add
push
add
add
add
add
add
push
add
rcrl
in
or
xchg
push
dec
stc
aam
cmp
bt
and
xchg
xchg
lods
sub
mov
movsb
sub
sbb
push
test
and
or
xor
or
add
shlb
jbe
aas
cmc
test
or
mov
std
mov
adc
sahf
bound
xchg
fs
and
in
lods
pop
scas
or
dec
call
xchg
mov
fwait
mov
icebp
or
lret
xchg
jo
jmp
mov
or
sub
sub
add
mov
adc
fs
leave
or
jns
xor
arpl
mov
inc
pusha
xchg
insl
xchg
test
mov
hlt
mov
xchg
xchg
popf
mov
add
push
jl
adc
mov
cmp
xor
mov
dec
lods
inc
ds
imul
pop
dec
pop
xor
pop
loope
push
jbe
dec
nopl
rcll
ret
scas
dec
mov
ja
mov
push
ss
or
lea
cmp
and
leave
cmc
and
add
mov
and
mov
imul
ret
shrb
aas
and
fisttps
into
dec
mov
clc
cwtl
jl
inc
ljmp
sub
mov
adcl
pop
xor
pop
pop
inc
aam
rclb
es
xchg
mov
in
mov
shlb
push
outsb
insl
jmp
out
dec
mov
lcall
in
mov
loopne,pn
mov
in
mov
push
rcrl
add
sbb
xchg
lret
mov
popa
jmp
ljmp
cmc
lea
and
sahf
mov
imull
pushf
iret
pop
mov
hlt
adc
xchg
test
call
rolb
inc
popa
pusha
pop
cmpsb
pop
jno
stc
adc
mov
lret
je
mov
adc
inc
sbb
cltd
inc
movsb
popa
sub
pop
push
data16
mov
fists
mov
adc
mov
push
sbb
scas
pop
cwtl
ja
fptan
rep
mov
pop
psllw
add
mov
push
mov
xor
stc
decb
or
push
addr16
mov
inc
dec
sub
mov
pushf
push
or
jge
or
and
pusha
push
pop
or
dec
cmp
cmp
pop
ljmp
sahf
jmp
cli
mov
push
mov
sbb
jo
push
rolb
pop
pop
mov
xchg
inc
es
adc
dec
sbb
mov
iret
icebp
jle
or
xlat
lcall
loop
lods
out
jne
and
stos
add
push
xor
das
pop
sub
xor
adc
stc
fucomi
mov
lods
fsub
push
loopne
xlat
jecxz
jg
adc
dec
lcall
out
in
ret
stos
push
pop
js
sub
pop
jg
out
mov
jp
sbb
fisubrl
stc
rcl
jnp
cld
fdivrl
and
aas
pushl
push
mov
adc
mov
jae
add
push
adc
iret
inc
jae
jle
std
push
shrb
dec
inc
inc
or
imul
aam
mov
xor
lret
and
stc
xchg
add
test
jge
mov
mov
sahf
inc
inc
fwait
xchg
jecxz
mov
repz
mov
js
push
aad
xchg
sti
sbb
cmp
dec
gs
pop
pop
jns
mov
das
or
call
dec
add
jno
data16
sahf
fisubrs
sti
push
std
inc
cmc
ss
mov
adc
fcoms
add
dec
mov
test
rorb
rol
sahf
shll
mov
imul
xor
and
inc
pop
aam
ljmp
adc
cld
mov
xchg
aad
imull
repz
icebp
jl
gs
add
mov
or
mov
or
xchg
mov
out
inc
pop
push
lods
xor
dec
mov
int3
mov
jecxz
dec
data16
xchg
jmp
lret
movsb
or
push
mov
hlt
popa
dec
pushf
repnz
dec
mov
cmp
and
add
arpl
xlat
dec
inc
xchg
lret
aam
mov
ficoms
jbe
ljmp
push
sbb
jmp
inc
arpl
idivl
arpl
lahf
or
cmpsb
repz
sbb
aam
hlt
jno
loopne
pop
repz
stos
fstps
mov
sbb
jp
rolb
mov
sub
cld
fs
loop
add
mov
lods
dec
fisubrl
and
sub
leave
aad
push
mov
or
sub
pop
ret
push
adc
in
movsl
or
jae
mov
sub
jb
xor
cmp
fidivs
inc
stos
shll
mov
xchg
push
xchg
mov
inc
xor
inc
insl
outsb
ljmp
insl
xchg
test
out
push
mov
ss
or
dec
es
mov
add
or
das
lea
jmp
scas
pop
pop
divb
mov
les
pop
dec
fimull
das
hlt
sbb
cmc
push
add
inc
icebp
pop
mov
fistpll
dec
mov
aad
leave
inc
orl
aam
das
push
stc
xchg
inc
mov
lahf
shll
sub
stos
lret
mov
sahf
hlt
clc
shrl
adc
scas
inc
fdivrp
adc
mov
lcall
das
fcomps
and
xor
sti
je
in
repz
sbb
push
adc
adc
lret
push
pop
scas
adc
lahf
pop
adc
ds
jle
fnstsw
test
das
jns
inc
xchg
sbb
insl
jge
orb
sar
add
push
out
stc
and
into
ret
push
inc
xor
popf
mov
icebp
daa
test
xorl
or
mov
mov
dec
lea
dec
out
insl
repnz
ds
testl
push
mov
mov
repz
fidivl
iret
fs
sub
movsb
addr16
mov
rolb
mov
movsl
sbb
jmp
jne
or
push
pushf
jns
sysexit
jbe
jbe
arpl
and
sub
loopne
mov
or
and
sarl
es
inc
stos
mov
out
lea
push
xchg
xor
sbb
enter
loopne
aam
call
inc
jne
add
sbb
add
sti
xchg
or
jae
stos
fwait
xor
xchg
push
dec
in
std
mov
pop
in
test
arpl
test
loope
pop
test
or
out
inc
xchg
fstl
mov
jg
pop
or
lahf
and
mov
pop
pop
fnsave
push
jno
cli
xchg
jl
stc
mov
test
sbb
test
into
in
and
cmp
pop
bound
adc
mov
aad
test
shlb
int3
fwait
repnz
cltd
mov
sub
inc
fwait
loope
andl
pop
outsl
lcall
aam
jp
add
leave
adc
in
daa
pop
inc
or
popa
pop
in
xchg
inc
dec
cmp
je
cmpsb
jo
lods
mov
lods
aam
xchg
mov
int
inc
fstpl
sbb
subb
popa
lods
enter
sub
and
lret
mov
xlat
push
mov
lret
mov
notl
and
or
loop
pusha
mov
pop
rcl
xor
mov
fildl
pop
mov
push
jecxz
jmp
pop
fwait
mov
dec
add
ljmp
inc
inc
loop
sbb
xchg
aad
jne
or
jp
jl
pusha
dec
mov
bound
push
jecxz
jbe
shrl
in
mov
fnstsw
roll
xchg
mov
jae
push
lcall
inc
pop
add
scas
jbe
fstpl
loop
ds
xor
dec
pop
test
out
nop
rcl
arpl
daa
fiaddl
insb
leave
mov
ds
or
out
or
inc
movsl
rorl
insl
cmp
xor
xor
les
ret
movsl
test
in
decb
jmp
out
pusha
lahf
pop
push
sbb
cmp
dec
bound
pop
mov
jno
hlt
mov
arpl
sbb
ret
popf
addr16
lds
cwtl
pop
xchg
mov
or
into
dec
ds
popf
mov
les
iret
jo
shlb
das
and
outsl
pop
fstpt
sbb
and
push
mov
dec
int
jp
mov
das
inc
leave
lock
and
xor
clc
subb
int
sbb
mov
jl,pn
fwait
orb
lret
cmp
pop
dec
cmp
setno
sub
inc
and
push
gs
mov
adc
test
mov
cmp
mov
scas
pop
insl
out
push
xor
pop
inc
sub
rcll
sbb
int3
sbb
ljmp
movsl
lret
inc
adc
fisubl
imul
inc
aam
lret
repz
adc
xor
aaa
jns
jp
jg
aas
add
cmpb
mov
xorb
xchg
cs
jmp
push
pusha
jo,pt
imul
test
or
mov
xor
rolb
dec
cmpsl
or
pop
cmp
mov
mov
mov
insl
outsb
xchg
push
cwtl
xorb
rorl
test
sbb
and
jg
cmc
mov
pop
ret
in
fists
ret
fidivs
push
cmpsl
imul
inc
mov
fs
mov
push
loope
aaa
fbld
adcb
mov
xchg
aad
mov
push
lcall
lods
and
mov
jmp
pusha
fisubrs
daa
mov
mov
mov
push
int
sbbb
jle
je
shrl
dec
xor
movsb
std
jle
fstps
push
cmc
cltd
les
popf
add
in
sub
das
outsl
lcall
xorb
push
jb
xor
ja
inc
dec
fcmovbe
xor
iret
ror
mov
pop
xchg
adc
inc
pushf
clc
xchg
cmp
mov
nop
das
push
iret
out
aaa
sub
and
xor
and
dec
push
cwtl
adc
fstl
push
popf
sbb
movsl
movsb
push
es
push
mov
or
arpl
rcrb
xor
repnz
pop
lock
loop
or
sub
mov
ds
rorb
dec
pop
add
pushf
lea
jne
rol
btr
mov
btc
sub
shld
and
mov
cmc
stc
cmp
sub
bt
stc
call
cmp
bt
clc
add
mov
lea
jmp
movb
movw
pushf
xchg
cwtl
movsbw
movl
pushl
pop
jmp
cmp
clc
pusha
call
jmp
mov
jmp
call
pushl
pushf
popl
pusha
pushl
popl
push
push
movb
lea
jmp
mov
pushf
push
pushf
movb
lea
jmp
test
mov
cmp
or
pushf
lea
je
cmp
bt
xor
pusha
xchg
pushf
mov
call
call
pushf
popl
pushl
pushl
pushl
popl
mov
lea
jmp
cmc
bsr
stc
rol
and
jmp
call
pushl
push
pushf
pushl
popl
movb
push
mov
lea
jmp
add
pusha
pushf
push
lea
jmp
pusha
cmc
test
sub
push
mov
push
pushf
lea
jmp
mov
bt
pushl
popf
pushl
mov
lea
jmp
jmp
jmp
mov
pushf
popl
lea
jo
pusha
pushl
popl
pusha
pushf
push
pushf
lea
jmp
test
add
cmp
clc
sub
jmp
rol
bswap
bts
notl
das
aaa
xor
mov
bt
call
stc
ror
mov
pushf
pusha
sub
pushf
ror
cmp
cmc
cmc
xor
cmp
cmp
add
clc
call
ror
aam
shr
mov
shr
bsf
sub
rcr
pop
cmc
movzbw
rcl
movsbw
pop
shl
movzbl
sub
pop
bts
std
sub
popf
xchg
lea
push
movzbw
mov
cltd
xchg
bswap
mov
pusha
mov
jmp
cmc
mov
setge
rol
and
pushf
mov
pusha
clc
test
cmc
add
call
test
xor
jmp
lea
jmp
movb
lea
jb
push
mov
pushf
movb
push
mov
lea
jmp
pushl
popl
push
pushl
push
movb
lea
jmp
jmp
mov
mov
push
pushf
lea
jmp
sub
clc
cmc
call
mov
or
or
mov
pusha
rcr
add
lea
jns
sete
mov
pushf
call
pushl
popl
push
push
lea
jmp
shl
mov
bt
mov
jmp
mov
pusha
lea
jmp
lea
call
push
pushl
pushf
divl
jmp
call
clc
mov
shl
or
mov
call
pushl
popl
pusha
pushf
lea
jmp
jmp
rcl
mov
stc
cmp
cmp
add
push
pusha
lea
jmp
push
mov
mov
mov
lea
jmp
jmp
jmp
bswap
movsbw
mov
pusha
mov
mov
pusha
push
jmp
pushf
popl
call
pusha
call
mov
pushf
push
lea
jmp
pushf
mov
mov
pushf
push
lea
jmp
movzbw
dec
inc
xor
shrd
rol
xor
btc
rol
inc
add
call
jmp
pushf
xor
rcl
shld
add
bts
movsbw
setne
shl
sub
sar
rcl
movsbw
shl
mov
test
add
jmp
lea
cpuid
test
stc
sub
jmp
push
stc
ror
pushl
neg
call
mov
pusha
pushf
lea
jmp
sub
test
shr
pusha
push
pushf
mov
pushf
call
pusha
pushl
pushl
jmp
call
call
shld
sbb
sub
lahf
mov
and
xor
bt
mov
jns
clc
test
sub
stc
shr
call
cmp
pushl
test
bt
pushf
cmp
add
std
jmp
pushl
popl
mov
lea
jmp
pushl
popl
pushl
pushl
lea
jmp
mov
pushl
movb
mov
push
lea
jmp
pusha
pushf
pushf
mov
push
jmp
pusha
lea
jmp
bsr
mov
bt
push
test
add
pushf
pusha
mov
pushf
lea
jmp
lea
jne
cmc
xorb
lea
pop
push
lea
jmp
dec
rcl
xor
cmp
mov
seta
or
jmp
jmp
lea
push
jmp
jmp
call
mov
jmp
add
add
sub
test
cmc
cmp
mov
cbtw
cmc
pushl
stc
bt
cwtl
stc
cmc
sub
mov
mov
pushf
mov
pushf
call
jmp
pusha
pushl
popl
mov
push
lea
jmp
and
movb
mov
push
pushf
popl
lea
js
pusha
pushl
popl
pusha
movw
lea
jmp
shl
pushf
movb
jmp
pushf
lea
pushl
pusha
pushl
mov
mov
pushl
lea
jmp
pusha
lea
jae
bts
mov
stc
push
movw
add
pusha
pusha
mov
jmp
sub
jmp
call
cmc
call
cmc
sub
bt
jmp
movw
pushf
rep
lea
stc
mov
neg
movzbl
stc
cmc
mov
call
add
mov
pushf
mov
pushf
mov
lea
jmp
add
mov
stc
push
sub
bt
stc
add
pushl
pushf
popl
mov
mov
pushf
pushl
popl
pusha
pushl
lea
jmp
clc
bswap
mov
call
sub
rcr
sar
mov
bt
test
push
test
add
mov
lea
jmp
mov
pushf
jmp
dec
inc
movzww
stc
clc
cmc
xchg
pushf
test
xor
cmc
pushf
sub
sub
jae
bt
xor
jmp
dec
mov
bt
push
stc
add
movb
mov
pusha
pushf
lea
jmp
movl
btc
shld
lea
shl
mov
push
bsf
xadd
xor
ror
not
neg
sub
rcl
xadd
lea
neg
cmc
shl
lea
lea
ror
dec
cmp
sub
push
xadd
btr
cmp
lea
stc
btc
mov
clc
not
bts
add
and
bsr
pushf
bswap
mov
neg
btc
add
not
push
dec
xor
pop
xor
bt
rol
btc
call
call
lea
cmc
push
bt
pushf
add
pushf
movb
mov
push
push
pushl
ret
movw
push
mov
jmp
jmp
movzbl
bswap
pushf
mov
call
push
movsbw
jns
mov
mov
push
setne
call
cmc
bsf
clc
cmc
mov
stc
pusha
cmc
add
push
push
lea
jmp
mov
neg
cmc
xor
test
pushf
stc
cmp
mov
clc
pushl
sub
call
jmp
pushl
popf
pusha
pushf
pushl
movl
lea
jmp
dec
cmc
jb
bt
ror
cmp
stc
push
neg
pusha
clc
cmp
bt
xor
bt
stc
bt
pushf
mov
bt
sub
push
call
pusha
lea
jmp
xor
cmp
pusha
shr
mov
stc
pusha
sub
clc
ror
pushl
clc
stc
xor
call
lahf
lea
lahf
mov
movb
pushf
movl
call
cmp
xor
jmp
movzbl
jmp
jmp
push
bswap
movsbw
mov
lea
push
jmp
pushf
popl
jmp
mov
movw
movb
mov
lea
jmp
add
xor
pop
mov
jl
pop
cltd
lret
fwait
push
add
testl
pop
fwait
rolb
pop
lahf
leave
add
xlat
add
int3
add
movl
pop
mov
add
test
pop
fwait
push
add
lret
mov
add
push
add
addl
cltd
lret
mov
int3
add
rolb
pop
cwtl
test
pop
test
add
mov
pop
mov
lahf
add
jl
pop
xchg
xchg
pop
lcall
pop
xchg
xchg
pop
cwtl
add
add
jae
pop
mov
add
movsl
add
xlat
add
and
pop
xchg
repnz
jae
pop
mov
mov
pop
lea
pop
lcall
pop
movsb
xor
pop
mov
add
and
pop
xchg
pop
test
add
test
pop
movsb
xor
pop
popf
push
add
pop
add
xor
pop
mov
add
sbb
pop
xchg
pop
add
testl
pop
xchg
pop
add
movl
pop
mov
imul
pop
xchg
xchg
pop
mov
add
push
add
mov
pop
mov
testl
pop
popf
push
add
test
pop
cwtl
add
add
add
cmp
pop
xchg
pop
add
pop
add
xchg
pop
cltd
jge
pop
xchg
pop
lcall
pop
movsl
cmp
pop
fwait
rolb
pop
fwait
in
pop
xchg
pop
add
jg
pop
cltd
mov
add
testl
pop
mov
add
cmpsb
add
xor
pop
xchg
testl
pop
xchg
testl
pop
mov
cwtl
add
mov
pop
mov
add
mov
add
mov
add
int3
add
push
add
leave
add
cmpsb
add
rolb
pop
cwtl
test
pop
xchg
pop
lcall
pop
mov
test
pop
movsl
cmp
pop
cltd
mov
add
test
pop
lcall
pop
mov
test
pop
cwtl
test
pop
mov
pop
mov
test
pop
xchg
repnz
mov
add
test
pop
xchg
rolb
pop
mov
pop
mov
test
pop
mov
pop
movsb
lods
add
repnz
test
pop
mov
add
xchg
add
repnz
test
pop
mov
lea
pop
mov
test
pop
fwait
in
pop
lcall
pop
cltd
test
pop
mov
push
add
repnz
test
pop
xchg
xchg
pop
xchg
pop
mov
test
pop
lahf
add
lods
add
repnz
test
pop
mov
pop
cmpsb
int3
add
repnz
test
pop
mov
jp
pop
mov
test
pop
movsl
adc
pop
mov
repnz
test
pop
test
add
push
add
sub
pop
lcall
pop
xchg
add
pushf
add
xchg
pop
lcall
pop
lahf
arpl
pop
xchg
add
xchg
pop
xchg
repnz
xor
pop
fwait
in
pop
lcall
pop
lahf
arpl
pop
fwait
push
add
cmpsb
add
rolb
pop
mov
add
pop
add
mov
add
sbb
pop
test
add
xchg
add
data16
and
pop
mov
mov
pop
lahf
add
add
add
pop
add
in
pop
mov
add
cwtl
add
xor
pop
fwait
in
pop
mov
cmp
pop
mov
add
data16
jl
pop
mov
add
sub
pop
lcall
pop
cwtl
test
pop
mov
jge
pop
mov
add
jl
pop
test
add
sbb
pop
test
add
lret
lcall
rolb
inc
and
lahf
clc
mov
pushl
test
test
pushf
sub
pushf
jmp
pushf
sub
mov
call
sub
pushf
pushf
jmp
sub
jmp
pushf
mov
mov
mov
pushf
pusha
pushf
jmp
jmp
ror
rol
aad
das
mov
pushf
cmc
bswap
cmc
cmp
xor
cmc
add
test
push
not
pushl
xor
jmp
cwtl
stc
add
jae
clc
sub
push
pushf
push
call
lea
mov
bt
shl
push
pusha
shr
call
sub
pusha
shr
btc
movzbl
neg
clc
sub
movzbw
clc
call
pushf
popl
jmp
pusha
lea
mov
xchg
xchg
xchg
pop
mov
lea
bswap
pushf
xchg
bswap
pusha
lea
repz
popl
push
bts
ror
shr
mov
bsr
xchg
ror
btr
pushl
popl
movsbw
inc
call
movb
movb
mov
jmp
pushf
mov
pushf
pusha
pushl
movb
lea
jmp
sub
and
mov
bsr
cmc
mov
lea
shld
call
mov
jmp
pushf
popl
pushl
push
pusha
pushl
pushl
popl
pushl
pushf
mov
pushf
lea
jmp
pushf
mov
mov
movb
pushf
lea
jmp
pushl
lea
jno
mov
js
push
pushf
pushf
popl
mov
pushl
popl
pushf
movb
push
lea
jmp
movl
call
bswap
shr
inc
mov
clc
rcr
sub
movsbw
mov
cmc
pusha
pushf
clc
add
movb
pushf
jmp
pushf
lea
jne
bt
xor
push
xchg
lea
jo
push
pushf
movl
movw
lea
jnp
push
push
movb
movb
pusha
pushl
ret
mov
pusha
pushf
pushl
mov
lea
jmp
pushf
mov
lea
jns
pusha
pushl
pushf
popl
pushf
pushl
popl
push
lea
jmp
and
pushf
cmp
pusha
call
mov
pushf
lea
jmp
cmp
jmp
sub
jmp
std
cld
jmp
pushf
popl
jmp
call
pushl
mov
mov
pushf
lea
jmp
jmp
pushf
popl
lea
jns
pusha
pushl
popl
movw
pushl
lea
jmp
and
bts
movzww
pushf
xchg
clc
xor
clc
call
pushf
movw
mov
pushf
pushf
pushf
lea
jmp
cmc
test
jmp
mov
movb
push
movb
lea
jmp
pusha
rdtsc
mov
lahf
not
not
jmp
lea
cmc
cmc
xor
stc
test
stc
sub
pushf
pushf
mov
pushf
lea
jmp
call
not
not
jmp
pushl
pushf
popl
call
mov
movb
mov
movw
mov
lea
jmp
call
movb
jmp
add
pushf
mov
lea
jmp
push
lea
jmp
movb
movl
push
mov
pusha
push
push
mov
pushf
mov
mov
push
mov
pushf
lea
jne
adc
test
cmc
jmp
push
call
test
mov
pusha
cmp
add
pusha
call
pushl
popl
movb
pushf
pushf
lea
jmp
shl
mov
clc
call
call
add
daa
movzbl
mov
ror
pushf
mov
pushl
jmp
jmp
pushf
lea
jmp
jmp
bt
sub
rol
neg
movzbl
sub
sub
ror
ror
xor
test
lea
pushf
jmp
pushf
push
lea
jmp
pusha
jmp
stc
lea
mov
clc
add
push
push
push
pushf
lea
jmp
push
lea
jmp
pushf
dec
push
lea
jmp
mov
movzbw
movsbl
bswap
mov
mov
push
movw
lea
lea
cld
xchg
lea
std
mov
mov
std
call
mov
clc
sub
mov
mov
jmp
lea
jl
mov
jmp
rcr
adc
sar
mov
cmp
rcl
add
mov
mov
jmp
add
stc
bsr
movzbl
pusha
test
adc
rol
mov
cmc
pushl
cmc
bswap
clc
cmp
clc
call
call
mov
movw
pusha
pushf
lea
jmp
mov
call
pushf
pushf
mov
push
pushf
lea
jmp
shrd
jmp
call
mov
stc
mov
movb
pusha
add
stc
shld
push
jmp
sub
je
bt
clc
xor
pusha
mov
dec
lea
ja
cmc
ror
jmp
cmc
xor
pusha
pushl
pushf
dec
cmp
clc
stc
cmp
xor
jmp
push
movw
mov
mov
push
pushf
pushf
pushf
pushl
ret
mov
movzbw
test
shrd
shld
mov
pusha
bt
bt
lea
jnp
not
jmp
jmp
call
pusha
add
movw
pushf
mov
mov
lea
jmp
cmc
bt
xor
stc
sub
pusha
pushf
push
call
add
xor
mov
pusha
cmc
test
sub
push
mov
pushf
pushf
lea
jmp
call
call
movzbw
call
mov
push
lea
jmp
btr
clc
mov
jmp
cwtl
mov
pushf
mov
jmp
push
lea
jo
push
lea
jmp
pushf
popl
pushf
pushl
popl
pushf
pushl
push
lea
jmp
mov
pushf
popl
pushf
jmp
push
push
dec
sub
jl
bt
test
stc
sub
js
pusha
mov
pushf
pushl
pushf
pushl
lea
jmp
ror
adc
mov
movzbl
jmp
ror
not
shr
btc
mov
cmp
mov
stc
bt
pushf
movw
sub
stc
bt
pushf
shl
call
stc
jmp
mov
push
movb
call
push
pusha
xor
cmp
stc
push
sub
pushf
mov
mov
lea
jmp
aaa
test
mov
cmc
sub
jmp
pushf
mov
jmp
lea
jne
bt
jmp
add
jns
test
sub
cmc
bt
bt
shr
call
das
mov
pusha
mov
test
stc
add
call
or
pusha
pushf
mov
lea
je
pushf
pusha
movb
sub
push
cmp
call
push
call
cmp
add
call
pushf
popl
call
pusha
movzbl
test
bt
cmp
push
xor
call
jmp
movzbw
mov
push
pushf
call
jmp
mov
jmp
pushf
mov
pusha
lea
jmp
movb
mov
pushl
pushl
ret
bt
mov
rcr
mov
rcl
call
mov
push
lahf
pusha
mov
lahf
pusha
movsbw
mov
call
pusha
mov
pushf
mov
movb
lea
jmp
call
movl
jmp
jmp
jmp
ror
lea
movzbw
lea
jl
dec
ror
shld
adc
xor
adc
add
or
not
shld
sub
call
pushl
popl
mov
pushl
lea
jmp
pusha
lea
jmp
pusha
jmp
jmp
pushf
call
jmp
pusha
pushl
popl
movb
pushf
push
mov
lea
jmp
pusha
pushl
pushl
mov
lea
jmp
mov
pushf
setle
cltd
rdtsc
mov
pop
cltd
rdtsc
mov
pop
mov
pushl
pushl
push
pushl
ret
call
shl
sub
jmp
movw
xchg
call
not
lea
dec
dec
push
btc
setnp
xor
neg
neg
stc
pop
add
cmp
shrd
sub
shld
movzbl
clc
stc
mov
bt
pushf
cmp
or
push
lea
je
stc
sub
cmc
pusha
pushl
stc
xchg
call
add
jns
stc
mov
clc
pushf
jmp
pusha
call
xor
sar
add
setns
xor
jmp
bt
pusha
not
pushf
sub
pushf
test
movb
and
pushf
push
call
popl
push
pusha
lea
jmp
test
cmpl
call
rcl
btc
lea
clc
cmp
push
lea
ja
ror
aam
mov
bswap
daa
lea
rol
or
sbb
sub
push
ror
sar
lea
cmp
pop
ror
or
and
test
stc
and
sub
call
or
call
call
pusha
pusha
mov
push
pushf
lea
jmp
not
stc
cmp
ror
or
neg
clc
xor
movsbl
lea
jae
and
rcl
call
push
pushf
lea
jmp
inc
mov
decl
pushf
lea
jne
push
pushl
pusha
pushf
mov
mov
pushl
mov
lea
jmp
mov
mov
movb
lea
jmp
sbb
test
mov
push
bt
add
clc
pusha
cmp
shrd
pushf
jmp
pusha
lea
mov
pushf
mov
call
call
mov
mov
pusha
jmp
aaa
pushf
xor
daa
mov
and
sub
clc
rcl
mov
jmp
pushf
mov
mov
pushl
ret
pushl
push
call
jmp
add
daa
rdtsc
push
pushf
pushf
sub
mov
mov
lea
jae
push
mov
pusha
pushl
lea
jmp
pusha
movw
mov
mov
lea
jmp
xchg
pushf
bt
cmp
pushf
mov
cmp
call
xor
jmp
mov
cwtl
shr
push
mov
xor
clc
shr
sete
mov
cmp
test
not
cmc
clc
test
clc
not
push
test
cmc
clc
and
mov
jmp
push
pushf
popl
pushf
pushl
popl
pushf
movb
lea
jmp
call
jmp
sub
call
neg
mov
bts
sbb
pushf
ror
xor
bts
sub
xchg
pusha
add
neg
push
xor
lea
jmp
inc
mov
cmc
jmp
movzbw
not
movzbl
sub
jno
stc
pusha
cmc
mov
cmc
jmp
not
push
cmp
pusha
not
test
mov
jmp
pusha
jmp
pushl
popl
pusha
pushf
pushf
movb
lea
jmp
call
rol
shl
neg
mov
mov
stc
call
sub
test
pushl
cmp
cmc
and
movw
push
pushf
popl
pushl
jmp
movb
pusha
pusha
xchg
push
call
pushf
push
mov
pusha
mov
pushf
push
call
add
sub
bswap
inc
rcl
mov
btr
btc
cmp
add
dec
jmp
mov
jmp
jmp
mov
lea
jne
cmc
cmp
bt
test
sub
pusha
pusha
jmp
xor
jmp
pushf
test
sub
pushl
pushf
mov
pushf
lea
jmp
jmp
pusha
cmc
bt
sub
mov
push
pusha
mov
shr
mov
mov
pushf
jmp
pushf
jmp
movsbw
mov
clc
cmp
add
pushf
pushf
lea
jmp
call
mov
stc
call
mov
push
mov
lea
jmp
cltd
dec
mov
adc
cmc
mov
cmp
add
pushf
jmp
jmp
pushf
bt
cmc
add
push
movw
mov
mov
push
lea
jmp
xor
bt
cmc
sub
lea
jge
mov
push
pushl
lea
jmp
call
clc
mov
pushf
shl
mov
pusha
pushf
stc
sub
bt
cmp
cmp
shr
mov
jmp
movw
mov
call
cmc
test
mov
cmp
bt
sub
pusha
call
mov
pushf
pushl
pushf
pushf
popl
push
pushf
jmp
movw
mov
pushf
pusha
mov
mov
mov
pushf
movb
movb
lea
jmp
pushf
add
push
call
lea
bt
bt
add
jmp
pusha
mov
jmp
mov
jmp
and
shl
sar
btr
mov
clc
stc
pusha
sub
jmp
movw
mov
pushf
push
pushf
lea
jmp
shl
ror
mov
shl
xor
shr
sbb
lea
sbb
test
xor
bt
sub
adc
xor
not
btr
btc
clc
ror
movsbw
push
push
neg
pushf
and
cmp
pushl
xor
bt
sub
add
add
mov
pushf
mov
pushf
pusha
add
pushl
mov
push
push
push
push
lea
jmp
shl
bswap
rcl
dec
not
neg
neg
xor
shl
xor
shrd
adc
jmp
jno
pushf
dec
clc
pusha
stc
lea
call
mov
jmp
or
ror
cmp
mov
pushf
cmc
add
pushl
push
movb
pushf
popl
pushf
jmp
or
add
mov
test
add
pusha
call
mov
push
call
sub
bt
jmp
bswap
shrd
bts
and
mov
push
stc
add
mov
pushf
lea
jmp
aaa
cwtl
mov
push
shl
lea
rol
mov
call
pushf
popl
call
pushf
lea
jmp
mov
call
mov
movb
push
pushf
lea
jmp
pushl
popl
pushl
pushl
pushf
lea
jmp
btr
rcr
sbb
and
mov
jmp
pushf
mov
call
jmp
call
push
cmp
add
pushf
lea
jmp
mov
pushf
btc
daa
mov
call
push
pushf
pushf
movl
push
mov
pushf
mov
push
pushl
pushl
ret
pushl
pushf
push
mov
push
pushf
pushf
push
lea
jmp
call
jmp
movw
push
mov
pushl
pushl
pushf
lea
jmp
mov
mov
mov
jmp
setae
xchg
not
push
pushf
mov
movzbw
movzbw
repz
shld
inc
push
cmp
cmp
pushl
xor
mov
mov
dec
push
rcr
mov
call
pushf
movb
pusha
mov
mov
movb
pushf
mov
pushf
pushl
ret
push
dec
call
jmp
push
push
pushl
pushl
lea
jmp
push
pushl
pushf
popl
push
pusha
pushl
popl
pushf
pushl
lea
jmp
mov
pushf
lea
jmp
sub
bt
jmp
sar
stc
sar
mov
stc
stc
cmp
sub
pushf
pushf
add
call
jmp
call
dec
pushf
test
pushf
lea
call
pushf
cwtl
mov
clc
add
call
cmc
test
sub
clc
bt
stc
cmc
ror
test
bt
pusha
pushf
xor
cmp
add
clc
push
call
push
mov
pushf
pushf
mov
lea
jmp
mov
lea
pushf
lea
jmp
pusha
jmp
movzbl
pop
mov
cmc
bt
call
movb
ror
clc
pusha
stc
neg
cmp
xor
bt
stc
mov
stc
sub
mov
mov
pushf
mov
pushf
lea
jmp
mov
pushf
push
sub
pushf
shl
call
test
mov
shl
not
bsf
mov
test
bt
add
jmp
pusha
mov
lea
jmp
