or
daa
add
xor
mov
mov
mov
push
inc
mov
pop
ret
and
or
rclb
jbe
aad
sbb
sub
push
sbb
sbb
enter
aam
and
mov
aas
cmpsb
jmp
repnz
shl
mov
xchg
daa
inc
lea
push
mov
push
mov
repz
inc
in
imul
mov
mov
adc
or
out
imul
mov
sub
fnstsw
xchg
pop
jl
cwtl
cltd
jbe
orps
cmc
jl
shlb
in
cmpsb
mov
inc
inc
mov
lcall
push
inc
bound
cmp
or
test
mov
cmp
jmp
xchg
or
lret
imul
push
cmc
je
mov
mov
or
nop
ficoms
xchg
jmp
xchg
icebp
inc
xorl
sub
add
movsb
in
sub
adc
popa
out
out
xor
imul
dec
push
cs
ljmp
xchg
mov
sub
fistl
mov
leave
call
pop
push
jns
aaa
inc
enter
bound
xchg
iret
sub
fbld
loope
in
scas
lret
fisttpl
push
sub
shrl
insb
pop
push
popa
je
adc
repz
and
cmpl
sbb
adc
mov
loope
into
jmp
rolb
cli
cmpsl
mov
mov
ss
add
mov
dec
out
inc
inc
cmp
ja
gs
adc
xchg
push
stos
dec
pop
es
sub
push
in
loope
xchg
add
es
cmp
pop
into
xchg
lods
adc
sub
jg
xlat
jg
fisubs
cmpsl
push
stos
ds
lret
pop
adc
jg
xor
pop
mov
lret
pushf
test
cmp
ljmp
imul
sbb
or
and
adc
xor
lock
xchg
ss
fcoms
mov
popa
pcmpgtw
lods
cmp
fisubrl
clc
daa
inc
decl
adc
imul
mov
jns
lahf
mov
mov
fsubr
pop
mov
pop
in
adcl
xor
inc
and
in
cmpsb
in
lret
call
fs
mov
stc
pushf
mov
pop
push
pop
adc
popa
mov
or
pop
xchg
sbb
and
dec
inc
flds
xlat
iret
lret
das
mov
dec
nop
and
test
in
sub
jecxz
cmp
inc
sub
mov
in
je
or
loope
add
or
adc
ss
pop
aaa
xchg
ficoms
imul
mov
cmp
adc
cmp
sbb
add
cmpsb
jle
cmpsl
dec
lock
ja
out
pop
dec
addr16
mov
enter
loop
rcrl
ror
mov
mov
cs
shlb
cld
pop
cmp
sub
cmp
dec
aam
call
and
scas
mov
out
mov
push
rorl
loope
cld
imul
dec
add
pop
mov
xchg
gs
fidivs
push
sbb
adc
out
fdivrs
out
andl
lods
and
fwait
jo
xor
movsb
popa
mov
insl
aad
ss
mov
es
dec
mov
aaa
popf
lahf
xchg
and
xor
arpl
lea
int3
lods
dec
insb
mov
imul
lods
loop
shrb
push
daa
andb
adc
fstl
xchg
jmp
lods
ja
sub
sbb
clc
sbb
mov
loopne
fnstcw
mov
arpl
xchg
cwtl
ficoml
mov
pop
ja
pop
sub
jecxz
fs
call
lahf
mov
loope
mov
push
mov
das
js
pop
cmpsb
jo
xor
fidivrs
mov
xor
jae
lods
aaa
mov
ss
cmp
test
leave
mov
xchg
mov
mov
int3
jg
pop
adc
pop
push
repnz
sbb
xor
pop
pop
pushf
lods
rcr
jle
or
jne
dec
sub
loop
inc
shll
mov
cmp
mov
or
fisubrs
add
in
movsl
xchg
popf
or
out
push
jb
dec
out
and
insl
dec
dec
or
pop
inc
mov
inc
das
repnz
lret
sub
in
test
and
icebp
sahf
imul
pop
addr16
push
pop
jmp
mov
lahf
add
scas
push
mov
lods
or
cli
mov
mov
xchg
stc
addb
out
jno
aas
fisubrs
stos
sbb
dec
mov
aas
in
sarb
add
nop
aas
jecxz
jecxz
jnp
cmp
hlt
mov
jmp
movsb
cs
cmp
mov
rorb
cmp
out
mov
lret
sbb
jl
aaa
inc
cmp
ja
adc
popf
dec
pop
nop
xchg
pop
fld1
scas
pushf
push
mov
out
pop
mov
outsl
jnp
dec
es
inc
je
cwtl
mov
xchg
mulb
mov
jne
cltd
adc
jnp
pop
cwtl
sti
dec
add
jmp
pop
mov
pop
pop
inc
ss
divl
mov
xchg
dec
aam
orb
or
loop
idivb
in
jecxz
rcl
fs
dec
sub
mov
mov
cmc
dec
mov
xchg
xor
js
out
sub
inc
push
nop
mov
xchg
hlt
loop
jecxz
insl
notb
sbb
push
inc
push
and
sbb
push
xchg
xchg
cmc
xchg
mov
imul
inc
push
cmp
pop
cld
mov
push
test
pop
jl
push
sub
pop
push
cmp
pop
cld
lea
push
shl
pop
push
pop
push
push
mov
pop
pop
push
push
jge
push
inc
pop
pop
pop
mov
stc
stc
or
cmc
nop
jmp
jmp
call
cld
push
sub
pop
and
ror
push
je
test
pop
jne
push
mov
pop
cld
pop
cmc
jmp
cli
add
push
test
jno
imul
push
cwtl
sub
in
pop
jl
test
push
adc
gs
xor
aas
add
pop
jbe
push
mov
pop
jmp
sbb
inc
xor
adc
scas
lcall
xor
jnp
push
xchg
addb
cmp
inc
mov
std
mov
jae
add
test
clc
sub
loop
jecxz
dec
lret
ffreep
xchg
int3
dec
pusha
faddl
mov
repnz
or
gs
shll
xor
cmc
push
add
push
pop
pop
clc
jp
push
sub
pop
jp
jae
jp
test
jp
jp
ja
not
not
push
push
and
pop
pop
add
jbe
cmp
lea
mov
xchg
jl
cld
loop
jecxz
orl
push
mov
ret
movsb
das
adc
sub
push
sub
pop
stc
stc
testl
je
push
push
add
pop
push
movzbl
xor
sub
sub
cmp
mov
loop
pop
loop
jecxz
inc
sub
and
pop
mov
int3
dec
ss
jmp
mov
or
add
rol
push
push
pop
pop
jno
jo
test
push
test
pop
jmp
push
xchg
xor
pop
jp
mov
aaa
mov
dec
mov
cli
sbb
out
lahf
and
adc
mov
xor
mov
push
xor
pop
pop
push
xor
pop
mov
inc
inc
inc
inc
jmp
adc
sub
fnstsw
mov
pop
outsb
test
js
jns
add
lcall
add
mov
aad
mov
call
aas
inc
xor
jmp
dec
mov
push
icebp
movzbl
fimull
dec
rorb
scas
rclb
int
add
push
call
sahf
cmp
mov
shlb
jae
loopne
sar
push
mov
mov
xor
sbb
xlat
dec
jo
fs
pop
dec
jne
push
movzbl
push
or
pop
jp
jne
cmp
push
jno
push
mov
pop
pop
rol
mov
jne
jle
push
xor
pop
and
nop
xchg
test
push
push
or
pop
pop
loop
pop
xor
jl
push
push
push
inc
pop
pop
pop
clc
jbe
shr
inc
dec
stc
loop
jecxz
iret
cmp
push
call
shrb
jno
out
lret
aad
ss
xor
cltd
adc
jnp
cmp
mov
push
lods
mov
add
subb
inc
xchg
in
dec
and
pop
jne
sahf
int
inc
test
inc
mov
fldcw
enter
mov
stos
cmp
das
shlb
insb
jae
cmp
subb
clc
lods
sbbl
push
xchg
mov
ja
in
jecxz
lock
add
pop
xor
je
push
sub
pop
ja
push
and
pop
shl
jnp
push
jae
ja
cmp
pop
cld
xchg
xchg
sbb
mov
in
outsl
stos
mov
xor
xor
aaa
and
aam
test
aam
jl
dec
jl
out
or
pop
pop
mov
push
push
push
sarl
das
cmpb
into
popf
jns
sahf
jbe
in
jbe
xchg
cwtl
jp
jmp
xor
jae
lods
add
popa
dec
ljmp
or
arpl
ja
mov
and
ja
jmp
pop
stos
nop
in
push
inc
ljmp
push
inc
mov
lret
push
shr
jo
cmp
or
sub
shr
jo
cmp
or
sub
shr
jo
cmp
or
sub
shr
jo
cmp
push
mov
push
dec
mov
push
subl
or
ror
lcall
add
dec
addr16
mov
idivb
xor
lock
jno
mov
aas
mov
flds
push
xchg
mov
aam
je
fcom
pusha
jl
mov
or
int3
or
pop
pop
mov
push
push
push
roll
das
or
or
ret
inc
push
sahf
jbe
in
jbe
mov
jmp
xor
pusha
out
xchg
pop
mov
les
adc
jp
sbb
js
mov
cmpsb
mov
or
in
cmp
in
jo
cmp
sbbl
in
jo
cmp
sbbl
cld
jo
cmp
adcl
in
jo
cmp
addl
in
jo
cmp
push
nop
push
push
adc
push
xor
or
ror
jmp
push
add
dec
xor
testb
mulb
lret
inc
and
jno
mov
flds
pop
xchg
mov
popf
and
test
test
shll
push
mov
or
lret
or
pop
pop
mov
out
push
rorl
cs
adc
orb
mov
push
sahf
jbe
in
jbe
and
cwtl
jp
out
xor
mov
aaa
pusha
mov
popa
push
mov
outsl
lds
pop
jnp
inc
lret
clc
addr16
mov
fsub
arpl
pop
loopne
sub
jno
fs
sub
shr
jo
add
sub
shr
jo
cmp
rolb
repz
pop
rolb
lock
pop
rclb
mov
push
add
or
ror
ljmp
xor
test
mulb
xchg
inc
and
pop
jno
mov
flds
call
and
test
pop
test
shll
fildll
or
pop
pop
mov
mov
push
rcll
adcb
into
popf
aam
sahf
jbe
in
jbe
in
lds
xor
leave
xor
movl
push
les
adc
or
sbb
addr16
mov
mov
lcall
in
sub
in
jo
cmp
sub
shr
jo
cmp
sub
sub
shr
jo
cmp
daa
rolb
mov
rolb
mov
rclb
mov
push
orl
into
pushl
dec
xor
mov
notb
inc
and
and
mov
mov
flds
mov
mov
das
and
test
pop
test
shll
test
jl
or
pop
sahf
pop
pop
mov
jns
push
rcr
shrl
adc
sbb
or
ror
popf
popf
sbb
jbe
mov
cwtl
jp
out
xor
leave
xor
nop
xorl
dec
xchg
dec
scas
push
les
les
adc
aad
sbb
addr16
mov
movsb
mov
arpl
in
xchg
xor
in
icebp
shr
jo
cmp
idivb
in
jo
cmp
repz
in
jo
cmp
lock
add
push
dec
inc
data16
xlat
scas
sti
scas
sbb
out
fistpl
cmc
out
test
xchg
add
mov
popf
fidivrl
sbb
lea
call
notl
movsb
scas
cs
inc
inc
dec
cmp
jge
dec
std
push
mov
add
ljmp
inc
cs
sbbb
mov
sbbl
fwait
xchg
lock
aas
repz
lret
int
lret
mov
stos
dec
mov
jnp
fwait
in
hlt
cmp
add
lock
ret
pushf
rcrb
pop
push
outsl
adc
jle
adc
shrb
and
mov
and
mov
inc
and
pop
pop
repz
xchg
test
sub
mov
cmp
movsl
xchg
push
pop
mov
push
ss
or
lret
and
daa
jg
adc
lret
jle
popa
mov
fidivrs
and
test
dec
shrb
outsl
mov
sbb
enter
or
in
pop
rcrl
add
cmp
dec
pushf
hlt
push
fisttps
cwtl
test
je
stos
push
nop
or
orl
sar
mov
icebp
pop
outsl
or
mov
es
jmp
mov
mov
inc
mov
inc
mov
aam
mov
dec
push
testl
adc
sbb
push
mov
loope
or
push
fnstenv
loope
jae
or
cld
jbe
and
pop
mov
sub
and
sbb
sub
out
push
mov
ss
adc
cmp
sbbl
cmpsl
jae
push
push
call
in
sub
adcl
shlb
add
aaa
lcall
and
dec
xor
mov
arpl
xor
mov
out
mov
xor
outsl
sbb
pop
xchg
sub
in
or
add
pop
add
mov
mov
push
cmp
dec
das
mov
ficoms
mov
add
adc
mov
inc
jge
adc
cmp
inc
mov
sub
xorb
flds
ss
cmp
push
daa
test
daa
cmp
fistpl
es
inc
xlat
xchg
arpl
dec
mov
inc
test
cltd
in
icebp
pop
les
lds
sub
push
add
push
in
dec
xor
repz
pop
sub
addr16
xchg
mov
adcb
pop
or
pop
jae
neg
cli
jbe
icebp
test
dec
xchg
fucomip
pop
das
push
ljmp
xchg
in
fmulp
and
jo
ds
adc
inc
ja
push
sbb
aam
addl
rcrb
adc
dec
dec
push
pop
cmp
in
enter
adc
mov
fidivl
das
xchg
insb
push
fimuls
push
jns
mov
ret
sub
push
jp
mov
ja
in
mov
sbb
in
movsl
dec
inc
mov
inc
add
aad
outsl
jp
call
mov
insb
mov
std
push
cmc
dec
add
mov
ljmp
sub
fndisi(8087
ja
loope
jnp
lret
mov
outsl
ds
mov
fidivrl
test
dec
repnz
mov
push
dec
daa
call
xchg
sahf
sub
decb
or
pop
xorl
mov
jecxz
loopne
in
scas
ret
out
xchg
push
adc
cmp
inc
push
in
mov
mov
ret
push
add
out
aas
js
xor
xchg
add
fstpt
in
popa
cwtl
mov
gs
imul
push
imul
stos
push
dec
xchg
xchg
push
add
fwait
push
mov
data16
xor
add
inc
cld
nop
xchg
movsw
cmpsb
mov
dec
pop
adc
mov
fcmove
adcb
sub
leave
cmp
ljmp
popf
adc
outsl
lret
ja
push
push
sub
dec
sbb
sarb
inc
outsl
mov
add
sbb
lea
andb
daa
iret
sbb
mov
jle
mov
cmc
push
popa
adc
pop
inc
xlat
adc
test
mov
into
jmp
in
enter
sub
shll
dec
dec
popa
lods
scas
stos
pop
arpl
es
je
ljmp
xchg
or
aad
cmp
xchg
mov
arpl
xchg
testb
rolb
cmp
aam
popf
hlt
lcall
mov
shll
cs
cmp
out
sahf
popf
ljmp
loopne
jl
hlt
xchg
add
call
dec
sti
and
inc
scas
loop
push
mov
cmpsl
cmp
bound
jge
or
rcl
pop
add
shrl
or
adc
push
aad
mov
mov
insl
test
fidivrs
inc
inc
sub
jno
icebp
imul
push
outsl
loopne
cs
and
push
ret
leave
clc
sahf
sub
inc
mov
mov
fs
test
xlat
rcrb
xchg
roll
adc
dec
xchg
sub
rolb
scas
jbe
cmp
clc
cmp
and
pop
mov
jns
arpl
pop
add
shr
jo
stos
lret
mov
jmp
add
jb
xchg
rcll
xchg
fsts
push
dec
addl
xor
add
subl
stc
jle
and
stos
cmp
or
inc
mov
xor
enter
push
mov
xor
cmpsl
pop
inc
add
pop
and
loop
out
pop
push
sbbb
stos
jge
add
push
aad
cltd
lods
dec
cmpsb
dec
push
lret
cwtl
sti
and
fisubrs
dec
call
call
xor
pop
cmc
pop
inc
aaa
lock
sti
pop
lcall
sbb
xchg
rolb
jb
les
fwait
pop
sub
hlt
or
sub
push
shlb
imul
sub
adc
mov
insl
mov
lods
mov
push
add
xor
jnp
mov
add
divl
divl
loopne
cs
jmp
inc
mov
dec
xchg
in
mov
cmp
jnp,pn
xor
mov
sbb
mov
je
or
test
shlb
es
pop
xlat
sbb
call
dec
pop
test
cs
hlt
imul
cmp
pop
bnd
icebp
xchg
sbb
jne
das
xchg
inc
ss
stos
jbe
ljmp
mov
inc
xor
inc
aaa
cwtl
or
repnz
out
sbb
jb
jne
shll
cmc
lret
lds
push
stc
push
pushf
test
std
sti
adc
cwtl
sbb
repnz
mov
pop
jmp
pop
pop
mov
pop
fwait
mov
or
in
push
gs
mov
mov
add
mov
jno
jp
test
xchg
jl
aaa
pop
jecxz
push
std
pushf
mov
inc
orl
mov
fsubrp
mov
jb
sbb
sarl
ja
mov
into
sub
and
cmpsl
sub
inc
mov
sub
in
dec
ret
xchg
lret
or
xor
jg
inc
test
js
ss
jbe
ljmp
cltd
repz
mov
lods
loop
adc
pop
fs
jo
int
mov
lods
xchg
push
pop
push
jo
lahf
push
imul
hlt
int
adc
dec
ja
mov
cltd
sbb
lret
or
dec
jp
pop
jp
mov
andl
and
xor
inc
gs
inc
xchg
xchg
mov
std
loopne
xchg
and
mov
jne
inc
sub
lcall
jne
add
mov
xchg
jae
inc
sarb
xor
pusha
das
cwtl
jle
mov
jnp
cltd
insb
jp
cltd
pop
or
mov
xor
add
jo
xlat
mov
imul
mov
adc
add
stos
inc
jbe
jge
sub
or
icebp
icebp
addb
nop
call
xor
inc
inc
mov
aas
dec
adc
stc
cmp
xchg
outsl
loope
inc
push
cltd
loope
pop
push
push
xlat
test
xor
jne
sbb
mov
xchg
test
pop
or
push
cmpsb
test
cld
aad
shr
ret
mov
mov
aad
mov
bound
repnz
pop
mov
lret
cs
shlb
aas
lods
pop
stos
fldl
jp
push
sub
aam
test
scas
push
adc
test
dec
xor
cmp
nop
jmp
dec
pop
cmpsb
adc
scas
lahf
xor
inc
scas
imul
test
iret
aam
jbe
icebp
lock
xchg
add
adc
xchg
xchg
sahf
xor
std
sahf
pusha
inc
push
repnz
cmp
xlat
popa
aad
xor
pop
mov
and
lods
cmpb
int
xchg
mov
or
pop
imul
adc
popf
leave
mov
aad
lods
popa
or
or
jmp
pop
enter
pop
fbstp
dec
sub
jo
shlb
dec
das
mov
dec
scas
jbe
int3
and
and
je
cmp
arpl
cmp
sub
clc
in
je
into
insb
imulb
or
mov
xchg
rorb
in
inc
xor
mov
adc
dec
subl
dec
sbb
rcrb
push
les
popa
mov
repnz
xchg
stc
pop
add
inc
fxch
pushf
jecxz
and
test
movsl
sub
in
jecxz
sub
adc
pop
adc
cmc
or
lds
xchg
xor
mov
jne
push
outsl
scas
mov
cmp
mov
xor
scas
dec
inc
jno
push
xchg
jl
xchg
mov
jmp
xchg
out
shlb
jmp
fnstcw
fs
scas
xor
sub
out
fnstsw
xlat
jmp
leave
lods
add
mov
test
pop
mov
dec
mov
xchg
jno
push
test
xor
jle
in
jns
and
or
in
or
or
adc
iret
cld
xorb
mov
push
shlb
dec
add
cwtl
dec
push
mov
jecxz
lods
xor
mov
xchg
add
aam
es
repz
pop
jecxz
dec
or
and
push
scas
repz
xchg
push
sub
fs
mov
xchg
dec
dec
js
xchg
dec
mov
paddq
push
dec
mov
dec
sbb
dec
clc
int3
add
int3
push
add
sbb
cmp
add
popf
es
mov
imul
sbb
popa
push
inc
mov
out
inc
mov
xor
sbb
jle
js
pop
int
mov
stos
fdivrp
inc
jecxz
mov
mov
or
mov
fsubl
or
mov
leave
adc
lahf
je
pushf
mov
call
inc
jecxz
sub
stos
adc
iret
jno
xor
inc
cmp
aad
mov
pop
mov
push
dec
jnp
inc
mov
sub
stos
stc
dec
mov
flds
sub
mov
sbb
fidivs
push
push
leave
mov
cwtl
es
mov
mov
out
ljmp
and
cmp
sub
xchg
lods
les
push
repnz
jge
fistpl
or
outsl
outsb
outsb
loopne
inc
dec
mov
decb
cld
cli
add
adc
repz
add
sub
or
mov
sub
loope
pushf
or
or
cld
dec
dec
das
js
nop
and
xchg
ret
mov
daa
mov
jno
sarl
in
xchg
add
ss
gs
mov
clc
fmuls
sbb
out
jg
jns
in
dec
mov
movsb
test
pop
inc
ss
ljmp
xor
fldenv
in
bound
mov
fs
aad
pop
pusha
push
mov
andl
test
cmpsb
sti
xor
xorb
adc
xor
or
adc
mov
jp
and
pop
aas
sar
fidivrs
cmp
gs
sbbb
test
fdivrs
xchg
test
jno
cld
dec
jmp
cmpb
xor
xchg
dec
rorb
xor
inc
push
mov
sub
nop
mov
call
mov
mov
pop
shlb
and
mov
repz
xchg
addr16
mov
leave
scas
push
dec
dec
add
mov
pop
lods
rcrb
sbb
and
mov
int
in
mov
dec
cmp
out
andl
ret
sub
movsb
add
and
mov
sarb
push
mov
and
fistpll
lret
and
mov
fidivrl
lds
and
mov
call
sub
push
fyl2x
repz
imulb
pop
sbbl
incl
sbb
sbb
inc
jb
out
fwait
sbb
sbb
jg
fistpl
push
pop
ljmp
fldl
sbb
mov
or
daa
cmp
mov
loop
cld
inc
mov
out
shrb
jp
popa
lds
pop
lods
orl
jle
psubd
push
scas
inc
addb
out
orl
leave
cmp
mov
in
sahf
lea
aas
enter
mov
sub
pop
jmp
addr16
xchg
cmp
mull
xchg
daa
add
dec
and
fbld
mov
lahf
adc
cwtl
jae
repnz
fdiv
arpl
mov
fisttps
movsl
int3
loopne
test
out
sbb
fisttpll
cmpsb
outsl
mulb
into
stos
out
aas
aam
insb
push
jmp
in
fcomi
ljmp
sub
sub
or
dec
dec
inc
xor
sbb
fmuls
mov
dec
cmp
mov
jecxz
jl
mov
cli
fidivl
and
inc
mov
sub
nop
add
inc
mov
xchg
loop
fdiv
xchg
inc
clc
dec
jg
push
push
out
pop
iret
mov
imulb
push
leave
out
fistps
cmp
ret
ret
dec
int3
adcb
push
fwait
or
es
ja
lcall
cmp
xor
cmp
inc
or
xchg
pop
sbb
mov
xor
mov
xchg
jne
pop
sbb
push
popa
push
cld
mov
jp
xchg
cmpsb
jne
mov
and
sub
inc
jae
addl
outsl
test
aam
movl
adc
cmp
ja
andl
push
xlat
repz
gs
pop
mov
sahf
pop
dec
icebp
test
fwait
push
push
xor
stos
arpl
lods
adc
pushf
outsb
and
scas
pop
js
mov
mov
shll
sub
mov
ret
dec
icebp
popf
xlat
jl
inc
and
scas
std
jnp
popa
ret
stc
push
jbe
mov
jmp
push
les
out
mov
add
cmp
ret
mov
inc
in
mov
cmp
mov
out
cmp
mov
rol
mov
and
and
imul
cld
or
pop
stos
adc
dec
int
mov
insb
aam
rclb
lods
pop
out
and
ja
push
sub
jmp
adc
pop
jo
out
sbb
cmpsb
mov
aaa
jl
call
pop
call
mov
push
jo
push
sub
sbb
push
aam
and
in
fcom
push
sub
xorl
mov
fdivrl
pop
sbb
mov
jmp
inc
push
push
mov
popa
repz
jmp
jnp
sbb
mov
push
dec
cli
call
sti
push
insl
push
and
scas
mov
das
hlt
push
test
push
jbe
std
daa
subl
jae
jmp
mov
arpl
and
pop
dec
mov
mov
xor
add
out
sub
aad
rcrb
movsl
mov
int
mov
ret
in
ret
inc
adc
outsl
das
sub
sub
pop
dec
ret
cld
or
mov
jne
xorl
lea
rclb
stc
sbb
fimull
inc
repnz
fucom
push
aad
mov
arpl
jae
sub
fidivs
fs
lret
pusha
jns
push
mov
in
pop
leave
inc
fwait
cmp
cld
movsl
inc
sar
fs
rcrb
sbb
mov
sbb
repz
js
aas
push
daa
push
ss
push
clc
ljmp
cmp
sbb
hlt
and
jo
and
std
rolb
push
ja
mov
cmp
xchg
ljmp
cmp
mov
xlat
xor
mov
sbb
imul
xchg
or
inc
add
fucomi
in
dec
sub
mov
aad
movsl
stos
arpl
mov
lret
mov
inc
js
lods
push
dec
pusha
popa
cmp
xchg
test
or
push
pop
and
sbb
push
mov
ja
inc
scas
inc
pusha
pushf
and
je
mov
and
icebp
sbb
mov
mov
jo
fimull
mov
dec
inc
inc
outsl
in
mov
mov
xchg
test
dec
add
shlb
cs
xchg
inc
or
fsubrl
je
addr16
call
xor
lds
pop
mov
or
push
test
fmull
sub
jp
sub
xchg
or
mov
and
not
mov
call
xor
in
inc
mov
xor
mov
and
mov
jg
cmp
mov
pop
lock
ret
sti
push
enter
adc
stc
mov
std
xor
or
push
test
push
sbb
push
mov
jno
stc
in
shr
adc
sub
neg
jecxz
sub
aam
push
cmp
or
jl
iret
jmp
and
repz
aam
inc
pushf
ds
arpl
call
or
sti
outsb
jb
inc
pop
inc
adc
gs
jge
pop
stc
gs
loope
fcoml
notb
mov
xchg
test
roll
ja
dec
lea
leave
push
stc
inc
inc
sbb
bound
xor
hlt
imulb
in
fldenv
xchg
aas
incb
add
stos
cmc
pusha
xchg
lock
lahf
pop
out
push
push
jnp
mov
adc
dec
into
test
lsl
sub
clc
or
and
enter
cmc
sub
mov
xchg
dec
fistpl
dec
adc
lods
dec
jnp
adc
imul
scas
fimull
js
or
data16
sbb
jp
or
in
fisttps
mov
movsl
clc
sub
inc
inc
or
adc
jb
mov
mov
mov
idivl
and
xlat
mov
mov
mov
repz
cmp
sub
jecxz
mov
ss
fnstcw
push
sahf
loop
fnstcw
and
dec
jge
mov
or
icebp
push
das
sub
int
sub
test
pop
mov
ret
stos
nop
push
xchg
shlb
dec
jl
and
hlt
decb
dec
mov
dec
mov
incl
cmpsb
push
popa
dec
add
fcoms
mov
adc
loop
dec
in
jb
mov
adc
lcall
jne
inc
enter
adc
arpl
mov
push
push
insb
jo
shll
cmp
arpl
loopne
lds
adc
add
mov
cmp
inc
data16
jmp
stc
mov
cmp
sbb
cld
iret
aas
jne
or
repnz
sahf
movsl
cmp
mov
cmp
and
mov
jmp
or
das
pop
mov
inc
das
cmpsb
push
sub
xchg
jmp
daa
inc
stos
insl
roll
cwtl
repnz
mov
cmpsl
scas
push
cmovb
dec
loop
dec
je
fisttpl
xor
mov
lods
inc
aad
dec
push
in
pop
sub
xor
mov
xor
cmpsl
out
mov
test
add
add
adc
add
and
sub
loope
xchg
mov
push
mov
cmp
mov
cmpl
pusha
cmpsb
jl
les
aam
into
sahf
dec
scas
xchg
lock
push
cmp
sbb
fsubs
mov
cmp
jne
pop
xor
jbe
ficoms
gs
pop
cmp
int
xchg
sbb
jbe
das
mov
and
push
xor
fiaddl
pop
std
lock
les
dec
pop
jp
sub
and
shrl
es
test
cmp
mov
data16
push
idiv
mov
push
xchg
xor
call
dec
xor
push
adc
add
cmp
pop
daa
cltd
mov
and
daa
sahf
mov
and
outsl
push
push
daa
cmpl
push
push
daa
cmpb
mov
popf
int3
ds
sbb
push
xor
js
daa
das
movsl
jns
sahf
ret
pop
mov
add
imul
fwait
bound
in
jecxz
add
adc
loope
popf
movsl
fwait
roll
into
mov
jle
mov
dec
push
xchg
dec
jae
cli
jo
pop
dec
divb
inc
jo
cmp
fisttpll
out
mov
je
data16
outsb
test
adc
xchg
enter
out
mov
or
lods
js
ds
xor
lock
repnz
loop
push
xchg
pop
in
sbb
gs
lcall
mov
mov
lods
stos
and
clc
dec
sub
adc
and
adc
lahf
sub
cltd
scas
xchg
jl
adc
and
gs
je
mov
jmp
je
stc
fcoms
cmp
xchg
sti
pop
stc
leave
xchg
mov
jnp
scas
xchg
rcrb
fxch
mov
adc
inc
sub
rclb
dec
popa
out
inc
js
xchg
xchg
imul
popa
push
insl
aam
dec
inc
and
pusha
inc
or
scas
mov
sub
jbe
lock
mov
mov
jbe
es
addr16
inc
pop
mov
push
jecxz
lock
testl
dec
sub
subb
cltd
sub
addb
push
arpl
es
pop
outsb
faddl
xadd
jbe
jno
jo
jae
jo
xchg
bound
lahf
and
into
xchg
fisttps
jg
scas
mul
das
sub
pop
adc
mov
ds
les
xor
pop
movsb
dec
loope
iret
fmuls
jno
bound
das
scas
inc
xor
pop
jnp
add
jns
lret
mov
orl
inc
mov
sub
rorb
mov
mov
xchg
stos
cwtl
jle
xor
push
adc
mov
dec
xchg
adc
out
nop
sub
jecxz
aas
pop
inc
rorl
fs
sbb
and
pop
out
pop
jno
fs
dec
cmp
mov
ja
ret
hlt
clc
fstps
mov
jl
icebp
aaa
pop
imul
loopne
icebp
lahf
lcall
mov
hlt
inc
sbb
gs
add
popa
stc
xor
in
lods
or
imul
xchg
jmp
test
dec
daa
dec
inc
in
movnti
sub
and
jne
cmp
push
xchg
mov
sub
xor
shll
arpl
sub
data16
push
jmp
fcompl
ljmp
push
inc
cmpl
mov
xchg
cwtl
nop
add
je
xchg
adc
scas
inc
push
and
ret
decl
fsubrs
cmp
movd
out
jecxz
pop
push
jle
out
bound
in
xor
push
aam
fwait
not
sub
lret
pop
sahf
and
add
mov
mov
add
push
in
pop
movsb
cmp
and
mov
jne
inc
in
arpl
or
out
cmp
and
into
cmp
mov
movsl
push
pop
clc
stos
cmp
sbb
hlt
fmull
push
stos
popa
gs
push
adc
movsl
inc
movsl
out
xor
jp
add
inc
leave
iret
jecxz
aaa
and
pop
jae
mov
js
xor
shl
fwait
jmp
xor
dec
shl
test
jmp
sti
es
int
sub
jge
jnp
xchg
dec
push
mov
mov
push
fistpl
mov
and
pop
mov
addr16
sbb
xchg
adc
fwait
cmpsb
shl
jl
aad
push
insl
hlt
xor
mov
into
fists
mov
adc
jmp
adc
sbb
dec
in
movsb
push
xchg
loop
inc
ja
fnstenv
pop
enter
out
add
mov
sahf
cltd
lret
and
sub
flds
and
icebp
pop
test
cmpl
in
sbb
rorl
lcall
pcmpgtb
jbe
mov
loopne
push
pop
icebp
dec
mul
repnz
movl
call
xchg
and
testb
mov
orl
sbb
xchg
sub
ret
push
iret
and
dec
xchg
or
rorb
pop
push
mov
jmp
or
pop
jne
push
mov
inc
aam
adc
pop
cltd
jecxz
xchg
test
js
rcl
gs
pop
movsl
mov
and
add
pushf
pop
or
call
jg
add
xabort
mov
mov
idivl
cmp
dec
and
or
bound
fs
mov
inc
push
test
mov
fnsave
mov
in
fdivrl
sub
insl
jecxz
mov
inc
nop
testb
imul
stos
xor
jl
lods
ljmp
sti
gs
cli
inc
xor
lret
clc
leave
jmp
mov
lods
push
fmull
add
xor
lret
imul
fucomp
test
mov
sbb
ror
adcb
sub
test
sub
fwait
xor
fistps
sbb
push
test
mov
outsb
inc
mov
cmp
inc
mov
push
testb
or
stos
push
xchg
rclb
test
adc
ljmp
mov
imul
or
pushf
addr16
popa
mov
mov
mov
loopne
adc
xchg
stos
pop
inc
xchg
stos
dec
cmp
sbb
test
popf
mov
inc
rclb
and
fsub
loop
in
sti
fcomps
sbb
push
sub
jnp
jbe
daa
sub
xchg
mov
pop
pushf
jb
shlb
loop
mov
test
lcall
jg
or
xchg
outsl
mov
outsl
xchg
hlt
lcall
or
test
pop
cmp
or
jb
int3
pusha
lods
jnp
pop
cmp
xchg
aaa
scas
mov
aaa
ficoms
pop
fnstenv
pushf
out
sbb
les
lret
mov
mov
cld
push
push
es
push
add
pop
xorb
shll
popa
mov
pop
pop
lock
cmp
cmp
es
inc
mov
adc
fnstsw
icebp
test
mov
lea
dec
cmpb
adc
dec
xor
inc
push
call
ret
cli
sub
sbb
xchg
cmp
xorb
push
mulb
push
cmc
in
lods
sub
enter
mov
pusha
faddp
dec
icebp
lods
or
dec
test
add
xor
fimuls
pop
mov
adc
shufps
inc
or
adc
aad
adc
jle
dec
sub
dec
test
repnz
mov
sub
ss
jne
or
jmp
inc
sahf
push
test
adc
into
int3
fstps
and
insl
sbb
mov
mov
adc
ret
insb
xchg
mov
push
dec
dec
xchg
hlt
sub
xor
push
mov
jge
fiaddl
aad
jns
dec
jo
shl
mov
imul
je
leave
push
xchg
adc
data16
jge
cmpsl
repnz
xorl
sbb
clc
mov
adc
jae
mov
lds
xor
aad
push
gs
add
std
loop
xchg
mov
pop
ds
sbb
xor
mov
std
adcb
mov
outsb
mov
nop
jg
push
mov
push
xor
inc
and
lea
shll
mov
dec
or
xor
jo
mov
inc
iret
je
jp
jg
loope
pop
shl
mov
fadds
adc
dec
ljmp
lods
pop
popa
in
and
loopne
sub
add
lock
rcr
add
sbb
shr
push
push
xor
cmp
mov
jne
or
ss
ja
cld
out
adc
popa
adc
aas
insl
sub
sbb
inc
rolb
addr16
xchg
sub
imul
std
test
jecxz
mov
fildll
ljmp
ret
push
push
and
mov
loopne
fdivrl
loope
insb
aad
js
jnp
push
cmp
test
cwtl
jne
sub
sub
mov
mov
jmp
mov
pop
cmp
adc
mov
jp
rcr
and
push
mov
loopne
mov
cmp
sahf
xchg
lea
out
cli
sbb
andb
inc
into
insl
push
popf
gs
insl
pop
scas
sbb
lcall
sub
adc
and
cmp
mov
mov
xchg
xor
ja
dec
xor
xchg
xchg
cs
fsubrs
lea
inc
xchg
out
mov
add
gs
outsb
test
sbb
cmp
add
lods
clc
dec
cwtl
jp
test
int3
push
fcomps
and
sbb
push
arpl
fsubr
pushf
rcll
in
push
or
sbb
push
sti
outsb
fistl
es
mov
mov
insb
inc
add
xchg
and
cld
sbb
insl
xcrypt-ofb
cmpsl
sub
es
jmp
add
outsb
out
dec
pop
add
ret
outsl
pop
arpl
pop
lret
cmp
test
pop
push
mov
dec
mov
cld
arpl
dec
fstps
xlat
add
fwait
jl
sbb
popf
cld
dec
jge
fst
out
jge
mov
rcrl
mov
push
adc
and
sbb
test
mov
push
xor
dec
adc
insb
test
lea
jo
ds
cltd
pop
cmp
cmp
std
or
lods
adc
stos
out
mov
inc
out
mov
jmp
push
mov
nop
mov
dec
cltd
cmp
icebp
mov
add
sub
leave
push
dec
mov
pop
loope
pop
dec
rcrb
pop
push
dec
add
push
push
in
push
mov
add
sub
data16
mov
xchg
push
fld
mov
loopne
ss
fdivrl
mov
fstpl
mov
or
cld
xor
jae
add
inc
jecxz
push
cmp
cmp
inc
mov
cmp
test
sub
scas
add
out
push
xchg
jne
jae
in
cmc
outsb
jle
imul
clc
into
cmp
test
mov
data16
cmp
mov
imul
add
das
sbb
xchg
ret
mov
cmpsl
push
jae
scas
cmp
xor
mov
add
lcall
fcmovb
and
jns
lds
std
mov
xor
frstor
sbb
in
add
jne
outsb
aaa
mov
popa
mov
mov
mov
or
jo
cmp
xchg
pop
adc
dec
mov
out
xchg
pop
sbb
and
clc
sbb
mov
sbb
aas
stc
outsl
xor
stos
mov
loop
pop
sbb
scas
mov
push
jbe
dec
mov
movsl
cld
dec
or
test
mov
stos
loopne
fnsave
addr16
insl
lahf
dec
mov
mov
jne
inc
dec
adcb
inc
xor
stc
iret
dec
repz
or
and
mov
loop
aaa
arpl
icebp
lods
les
adc
add
lret
cmp
inc
push
fs
mov
mov
ret
inc
test
cmc
xchg
popf
pop
cmp
pop
or
test
repnz
test
lret
imul
inc
cld
scas
arpl
lret
add
lcall
loopne
pop
sub
ret
xchg
cmp
pop
test
push
mov
loopne
sti
and
pop
das
outsl
dec
cmp
fistpl
pop
lret
das
loopne
push
adc
push
repz
push
test
enter
cmp
xor
subb
lahf
test
fdivrs
imul
repz
out
mov
dec
popf
mov
sbb
daa
mov
clc
jle
shlb
sarb
fwait
mov
dec
and
adcl
stos
jnp
mov
mov
jge
cltd
xor
stos
sub
dec
sub
sti
pop
aad
lcall
or
sbb
push
ss
xor
pop
mov
js
aas
out
jecxz
jmp
ret
cld
and
loopne
lret
xor
mov
dec
pop
arpl
push
xor
out
sub
jl
push
xor
sarb
nop
int3
mov
ret
dec
jae
mov
fadds
cmp
bound
pop
xchg
xor
jno
jl
in
enter
roll
jb
jae
es
insl
movsl
jle
xchg
jmp
cli
dec
in
and
sbb
outsl
inc
xchg
cmp
dec
jp
stos
scas
cld
jb
inc
out
lea
mov
sar
scas
cmp
stos
fs
fnstcw
stos
jg
dec
sub
xor
jns
sub
aam
std
adc
in
jbe
mov
or
je
jo
pop
ds
fisubrl
je
in
outsb
scas
into
mov
popf
add
mov
clc
in
jnp
xchg
sbb
cmp
fidivl
mov
int
adc
inc
fcompl
adc
hlt
repz
push
dec
clc
pop
outsl
out
fdivl
inc
or
stos
jb
out
cmp
mov
sahf
jmp
repnz
clc
sub
frstor
or
lret
rclb
pushf
mov
das
shrl
mov
xor
adc
lahf
push
cmc
cltd
push
push
loopne
xor
cwtl
dec
mov
mov
xchg
adc
sbb
or
push
push
add
repnz
sub
add
inc
pop
jecxz
cmp
pop
je
jge
cwtl
pop
lret
aad
xchg
not
mov
out
jmp
andb
repnz
mov
jmp
sti
add
xchg
xor
or
adc
ss
out
mov
fcomi
mov
pop
std
adc
mov
stc
mull
jp
in
ret
cs
push
mov
mov
sbb
inc
ret
nop
out
shrl
or
sub
je
out
ss
sbb
jns
ret
into
popa
add
addl
dec
xchg
ss
rcrl
das
popf
sub
jne
cmp
push
cwtl
out
push
aas
jnp
xchg
in
ror
ror
test
jl
jae
popa
push
loope
fistpl
out
ficoml
mov
icebp
or
mov
out
popa
outsb
scas
loope
cmp
cli
bound
mov
fdivl
pop
add
fistps
cmp
jb
push
mov
ja
dec
test
outsl
pop
test
sbb
jne
lret
xorl
mov
in
jmp
bound
xor
sahf
cwtl
fldl
xchg
lcall
inc
push
dec
xor
or
sbb
cmc
cmpsl
std
mov
adc
jnp
in
aas
js
out
cmp
pusha
addb
leave
or
or
lds
push
lcall
std
cmp
test
rcrl
jo
hlt
fbstp
or
cmpsb
dec
enter
sub
mov
dec
xor
or
jnp
test
dec
neg
mov
lret
pop
cld
repnz
aaa
in
lret
mov
mov
sbb
sub
bound
dec
in
sub
xchg
mov
movsl
xor
mov
sti
adc
negl
sar
hlt
add
idiv
dec
pop
addr16
mulb
lcall
push
mov
addps
iret
or
data16
xchg
stc
jmp
ljmp
lcall
cltd
push
xchg
pop
pop
dec
in
out
aam
mov
test
xor
ss
add
out
jmp
and
sub
mov
lcall
inc
enter
push
adc
ficoml
hlt
xor
outsb
stos
xchg
daa
inc
movsl
stc
lea
and
bound
daa
adcb
sti
fcompl
fcmovne
test
mov
cmpsb
pop
loop
test
cld
es
lea
xchg
dec
dec
inc
pop
cmpsl
ud2
xchg
xchg
jnp
jns
outsb
iret
les
jo
lods
xor
movsl
or
into
mov
mov
cmpsl
or
mov
pop
pusha
push
or
push
mov
fdivrl
adc
push
lods
leave
or
dec
or
outsl
xor
out
mov
and
cmc
push
mov
add
sub
xchg
push
xchg
jno
test
mov
xlat
nop
xor
div
dec
incl
jae
jne
out
in
sbbb
mov
push
ret
xchg
ss
mov
shrl
mov
or
xchg
cli
out
in
mov
aad
xchg
out
out
enter
imul
cmp
daa
mov
icebp
int3
and
aaa
mov
pop
adc
cmp
out
dec
push
add
int3
idivb
mov
mov
idivb
testl
ljmp
jmp
add
sahf
jne
dec
idivb
and
enter
xchg
loope
adc
enter
rcrb
lret
cmp
loopne
ljmp
cmp
xor
ret
filds
out
cmp
das
lea
mov
add
mov
xadd
imul
clc
add
or
add
aad
lahf
mov
mov
mov
cld
test
xchg
popf
sete
les
pop
dec
push
and
aaa
insl
mov
int
sbb
ret
push
fadds
mov
dec
nop
pop
sub
pop
lret
dec
cltd
test
sbb
pop
sahf
mov
dec
cmp
popf
inc
or
cmpsl
addr16
push
nop
adc
add
pop
cld
jecxz
das
ljmp
mov
sbb
fsubrl
push
adc
xor
cltd
testl
divb
repz
repnz
sub
inc
arpl
pop
imul
pop
hlt
jae
cmp
fxch
sub
or
repnz
test
testb
pop
popf
cmpsl
push
adc
in
pop
int3
fstpt
repnz
ficoml
inc
adc
in
mov
mov
mov
jmp
xlat
xor
rorl
inc
push
ljmp
or
xor
xor
mov
lods
and
jmp
js
sub
adc
pushf
cld
clc
xorb
adc
mov
ljmp
out
es
aaa
push
mov
movsb
pop
xlat
lods
adc
sahf
pop
xchg
pop
dec
stos
icebp
loopne
lods
cmpsb
js
insb
shrl
jle
js
test
inc
cmc
cmc
push
ds
loop
xor
stos
daa
aaa
fs
cmc
mov
ds
cli
fcomi
fisubs
mov
shl
or
lds
xchg
arpl
push
push
stos
sub
mov
lahf
repz
test
divl
jae
mov
out
ret
es
dec
dec
sahf
aaa
ja
fxch
mov
movsb
mov
mov
rorb
addr16
gs
in
outsl
inc
fnstsw
pop
insb
jbe
sbb
cmpb
and
cmp
imul
bound
push
insb
insl
jecxz
subb
and
push
and
inc
push
pop
xchg
push
lods
mov
loop
in
push
stos
daa
popf
adc
lods
aaa
adc
leave
inc
xchg
fwait
jnp
int3
into
inc
div
mov
sub
mov
jl
stc
addr16
iret
inc
repnz
adc
add
jae
fimull
push
or
loope
mov
cmpsb
jl
pusha
and
out
pop
les
sub
or
mov
add
mov
xchg
and
ljmp
or
cmc
mov
enter
xor
jg
fs
sub
fcmove
dec
xchg
pusha
es
ret
in
sub
sbb
and
xchg
mov
dec
enter
pop
xchg
loopne
or
cmp
sbb
outsb
adc
addr16
loopne
nop
cwtl
mov
insb
mov
cmp
jb
push
cmp
rolb
sbb
in
mov
and
add
test
mov
xchg
jmp
jns
into
or
incb
xchg
adc
xchg
adc
dec
mov
mov
dec
and
jl
test
test
pop
push
les
repnz
sti
or
fnsave
push
rorb
pop
ja
daa
imul
test
xor
inc
add
mov
ficompl
call
cmp
sbb
lods
jg
jmp
lods
mov
xor
xchg
pop
adc
movsb
fisttpll
shl
and
sti
fidivrs
or
mov
push
pop
pusha
push
jecxz
xor
push
aam
hlt
sub
xchg
cmp
fdiv
gs
dec
test
adc
or
and
sub
repz
loop
shlb
fldt
jne
shr
push
shll
clc
pop
and
inc
mov
dec
rcrl
xor
xchg
cmp
push
push
rcr
fwait
das
lea
lret
pop
arpl
push
lock
lret
adc
xchg
cmp
and
adc
fmuls
or
mov
cmp
mov
jne
lods
out
sbb
scas
adc
push
sarl
jns
mov
mov
in
jp
ljmp
cld
dec
sub
ss
in
sbb
xchg
sti
pushf
mov
pop
andl
push
dec
sub
insl
aam
popa
xor
jmp
add
mov
sti
mov
inc
fidivl
movsb
inc
idivl
xchg
and
ret
test
in
out
jo
jmp
das
lds
sahf
inc
shr
mov
sbb
push
mov
push
mov
imul
je
and
sub
inc
test
jmp
jg
inc
sub
rorl
dec
mov
or
mov
call
sbb
icebp
sub
data16
ds
or
sti
and
in
mov
mov
sti
hlt
lret
mov
loop
outsb
notb
xor
out
scas
inc
and
mov
inc
add
jb
sub
shll
pop
scas
cmpsl
and
cmp
jne
xchg
out
popa
sbb
push
push
lret
adc
shl
clc
cmp
pop
xchg
mov
fdiv
popa
dec
cs
pop
sbb
jle
dec
filds
arpl
xor
sub
ja
and
out
mov
hlt
pop
in
mov
addr16
loopne
add
pop
pop
adc
mov
xlat
aam
pusha
jge
push
xchg
repz
inc
je
jno
nop
nop
rcll
inc
pop
sub
add
fisttps
mov
jnp
mov
popa
faddl
rorl
sahf
dec
pop
daa
add
xchg
pop
mov
mov
jno
stos
stc
inc
cmp
adc
test
jo
add
js
sub
cmpsl
cltd
inc
mov
in
jle
jne
fcoms
or
pop
dec
dec
pop
jmp
sarl
imul
mul
push
mov
sbb
mov
cmp
mov
and
pop
add
sbb
mov
fstl
add
lcall
adc
pop
dec
int3
outsb
and
sub
arpl
xor
mov
adc
jbe
sub
fst
dec
clc
testb
out
rcrl
lds
cmpsl
jb
mov
mov
mov
dec
rolb
je
sub
sti
jno
or
mov
sbb
pop
iret
std
lods
pop
xor
xchg
cld
movsb
lods
lcall
cli
push
test
pop
test
push
push
sbb
push
in
push
jmp
or
in
mov
jae
repz
mov
or
push
addr16
fisubs
rcrl
in
and
xchg
mov
cmp
push
cmp
in
lcall
cmp
and
push
pop
or
or
dec
adc
call
sti
jb
paddusb
pop
stos
cmp
in
adc
fdivp
aaa
push
pop
andb
mov
xorb
ss
xor
sahf
je
nop
cwtl
hlt
xchg
push
sbbb
sbb
jb
sti
ret
adc
out
les
hlt
int3
push
out
mov
fcompl
xchg
jmp
xchg
lods
fcmovnu
jns
mov
rclb
jecxz
dec
or
cmpsb
jmp
sarb
cmpsl
faddl
inc
mov
jmp
xchg
inc
addr16
push
mov
mov
aas
jecxz
popf
sub
loopne
pop
add
xchg
push
jae
push
inc
test
xchg
pop
mov
adc
jae
pusha
sahf
push
pop
outsl
je
aaa
sbb
ret
xorb
jb
pop
das
out
movsb
inc
dec
lock
dec
bound
inc
or
cmp
pop
cltd
sbb
movsl
jle
in
and
ficoml
push
fldenv
adc
lret
sub
mov
in
insb
pop
imul
inc
sbb
out
dec
fldcw
sti
cmp
gs
aaa
addl
stc
push
add
mov
sti
sub
sbb
cmc
aad
pop
mov
or
jp
cmp
inc
jno
fs
dec
push
insb
mov
xchg
dec
jb
dec
cmpsb
mov
and
cmp
xorl
clc
xor
push
js
xchg
into
cmp
es
sbb
xor
sub
call
push
xor
push
or
mov
jns
aaa
xchg
addr16
aas
rol
sbb
div
mov
push
shrl
pop
lods
test
rclb
push
mul
pop
call
mov
cmp
mov
pusha
ljmp
pop
add
ljmp
sub
sub
sarl
add
push
outsb
inc
test
rcl
jbe
stos
jae
pop
mov
jge
lahf
lods
lret
adc
xchg
sti
and
inc
into
cmp
sub
ja
scas
pop
lret
ds
pop
pcmpeqw
fs
popf
fiaddl
leave
xlat
sub
add
jne
aad
push
leave
or
fcmovb
lcall
mov
xchg
mov
lods
mov
xchg
leave
jle
sub
out
lds
adc
lea
sti
sbb
mov
rol
push
inc
mov
add
jbe
fcoms
adc
shrl
mov
aam
add
sub
scas
out
in
dec
test
jns
push
mov
ret
jge
mov
pop
cli
inc
pop
ret
jns
js
inc
push
add
pop
add
push
mov
out
sbb
push
inc
bound
adc
xor
bound
pop
mov
jge
ja
inc
lea
addr16
out
adc
fildll
mov
arpl
jne
jg
scas
push
pop
and
add
gs
push
fs
repnz
xchg
popa
mov
test
imul
movsb
int3
add
cltd
ret
jo
std
in
dec
add
fstpt
outsl
in
xor
sub
jno
push
insl
lret
jne
adc
xchg
add
shll
or
xchg
xchg
rorl
rol
pushf
aam
mov
ljmp
outsb
mov
aas
jle
xchg
jle
addr16
push
lahf
icebp
paddw
mov
icebp
xor
mov
mov
and
dec
rol
addr16
je
scas
add
ds
fists
dec
lret
out
push
cltd
sbb
sti
mov
out
lret
push
cli
add
or
nop
mov
cmp
mov
jo
jmp
cmp
sbb
xor
push
inc
scas
or
inc
push
jge
pop
test
repz
inc
sbb
dec
and
shrl
mov
xchg
popf
adc
xchg
jnp
dec
movsb
mov
dec
jae
aam
adc
mov
mov
mov
filds
daa
cwtl
dec
fwait
outsb
sti
dec
cwtl
icebp
ds
jp
pop
xchg
pop
outsl
leave
xor
sbb
nop
mov
mov
add
sti
pop
cmpsl
pop
lcall
ficoms
inc
or
pop
push
stc
pushf
pop
add
mov
push
mov
xchg
dec
sub
xchg
sbb
andb
add
fstpt
insl
mov
test
dec
mov
cmpsl
pop
sahf
adc
pop
popf
and
inc
xchg
sbb
loop
adc
sbb
test
xor
test
sbb
adc
loop
shrb
or
hlt
dec
mov
mov
outsb
and
xor
push
mov
pop
into
xor
inc
and
out
cli
lods
xchg
mov
test
jg
lock
push
enter
outsb
jge
es
xchg
imul
push
les
lods
push
pop
pop
punpckldq
inc
xor
aas
inc
and
dec
jmp
mov
test
dec
shl
rolb
mov
pop
cmc
std
sarb
jge
xlat
jne
sbb
push
cmpl
dec
cli
fbld
lds
rclb
sbb
mov
addr16
pop
sub
cmp
aaa
add
pushf
scas
mov
xchg
negb
and
into
enter
divl
mov
sahf
in
and
es
int
js
mov
xorb
lock
fidivl
xor
mov
mov
pushf
and
and
and
addr16
das
push
adc
outsb
pop
sbb
pushl
mov
and
mov
and
and
test
jb
mov
pusha
test
fisubrl
mov
xchg
out
das
pop
inc
sbb
mov
outsl
sub
gs
es
loope
mov
push
std
dec
pusha
adc
inc
pop
push
out
mov
mov
lods
or
ret
or
adcb
test
sub
popf
mov
sub
pop
negb
bound
aas
jnp
pop
push
fidivl
cld
cmc
out
xor
ja
cmpl
lcall
add
addr16
ret
bound
mov
jb
fiadds
xor
xchg
push
jmp
push
nop
les
sbbl
pop
loopne
mov
pop
inc
rclb
inc
shlb
push
fildl
adc
sahf
outsl
jl
mov
outsl
das
imul
loop
loop
nop
sub
inc
pop
js
popa
jmp
jl
mov
sti
out
jp
stos
mov
popf
cmp
mov
sahf
mov
cmpsl
mov
stos
cmpsb
cmp
outsb
xchg
mov
into
push
mov
jmp
pop
and
sbb
xor
inc
dec
jmp
dec
sbb
fwait
gs
gs
cwtl
xchg
aas
popf
cltd
lret
lcall
daa
pop
lahf
jnp
and
mov
mov
adc
sbb
fmuls
mov
bound
mov
mov
sbb
jb
imul
dec
jne
loop
test
scas
jnp
mov
in
xor
fcompl
fbld
movsl
add
lahf
sbb
or
call
mov
push
out
mov
cs
add
add
adc
mov
stos
fsubs
pop
lcall
cltd
cmp
pop
enter
pop
pop
xrelease
imul
out
adc
jge
inc
mov
movsl
dec
icebp
or
push
xor
popa
adc
imul
div
enter
xchg
pop
sti
scas
jo
dec
clc
and
jbe
cmp
insl
dec
outsb
and
xchg
mov
cmp
push
jle
rcrl
mov
dec
out
fldl
cs
mov
push
lock
subl
pushf
cld
nop
outsl
jae
fiaddl
es
sbb
fidivl
mov
sub
pushf
mov
pop
pop
sub
lcall
icebp
pop
adc
out
icebp
adc
xor
and
sub
ds
add
pusha
imul
adc
inc
xorb
aas
sub
push
loopne
push
pusha
out
sub
push
push
shl
xchg
cmp
gs
inc
mov
pop
repnz
xor
fbstp
sbb
inc
lret
sub
test
xchg
mov
adc
imul
insl
out
xchg
shl
xlat
cld
sub
rorl
bound
xor
mov
xchg
xchg
sbb
mov
mov
push
mov
fadds
push
stc
cld
push
push
mov
outsl
add
xor
mull
out
xor
fwait
pop
sbb
push
lods
cmp
mov
xchg
add
jb
rcrb
mov
inc
les
enter
std
dec
add
cmc
test
cmp
cmp
gs
add
stos
dec
and
cmp
aad
fsubl
or
push
repnz
push
inc
ret
rorl
xor
out
mov
mov
sbb
pop
push
mov
ret
adc
dec
mov
int3
inc
push
fbstp
imul
dec
rcll
fsubrl
ljmp
faddl
ljmp
mov
ret
mov
cmc
xor
mov
loop
add
movsl
push
xor
mov
lahf
std
pop
rcll
adc
mov
adcb
pusha
jne
jmp
sub
pusha
xor
insb
js
lds
in
ret
mov
loop
cmp
sub
in
jae
mov
jno
jmp
push
xor
adc
pop
cmc
jbe
ret
popf
rcrb
ja
inc
popa
xchg
in
fadds
xchg
mov
lods
aam
cmp
xchg
inc
fdiv
lods
sub
or
dec
xchg
mov
jo
fldt
pop
mov
dec
lods
bound
dec
sbb
mov
and
xchg
xchg
sti
popa
insl
out
fwait
sub
insl
cmpsl
inc
push
idivb
in
ss
xorb
pop
lds
nop
mov
push
fnstcw
bound
gs
jle
cs
shll
into
mov
enter
adc
xor
inc
pusha
mov
xchg
das
enter
mov
sub
rclb
xchg
mov
jbe
mov
sbb
aad
data16
push
jecxz
test
notl
in
mov
mov
mov
hlt
push
jp
xlat
dec
nop
jne
fwait
dec
mov
fnstcw
in
dec
push
pushf
xchg
in
add
inc
dec
lahf
push
and
jecxz
inc
cmc
out
sub
push
fcomp
out
cld
inc
loope
test
imul
cmpsb
out
lcall
fnsave
xor
pop
in
mov
and
inc
hlt
mov
ret
xchg
xchg
lds
and
inc
cs
lahf
sub
mov
mov
mov
rcrl
or
adc
mov
push
lea
cmc
enter
xchg
leave
mov
jbe
lods
xchg
and
insb
repz
lcall
and
pop
fs
inc
cmp
xor
xor
lea
sti
dec
dec
std
jne
lods
mov
jecxz
pop
xchg
sti
insb
cmpsb
sub
mov
pop
lret
dec
out
xchg
fsubrs
mov
int3
mov
fnsave
mov
xor
bound
clc
mov
rorb
mov
pop
pop
xlat
mov
adc
pop
call
je
or
and
arpl
repz
outsl
xor
out
mov
pop
cmp
mov
in
cmp
xchg
pop
sub
xor
in
xchg
pop
push
push
out
sarb
cltd
dec
mov
or
scas
push
fiadds
push
xor
mov
sbb
cmc
lret
adcl
fdivr
repnz
pop
adc
push
add
fdivr
rcl
jo
fdivrl
orb
mov
cmp
popa
arpl
jo
xchg
mov
mov
mov
or
int
dec
mov
icebp
ret
cmp
addr16
sbb
mov
clc
inc
in
pusha
pop
mov
or
add
leave
add
leave
jnp
pop
pop
outsb
movswl
jg
or
fisttps
dec
test
cmp
jge
stc
mov
mov
push
push
mov
lcall
in
pop
lods
jle
cs
mov
das
jecxz
out
jb
out
movsl
push
mov
cmp
adc
sub
lock
out
stc
pop
xchg
inc
fisttps
lea
cmp
mov
rcrl
push
and
dec
aad
mov
lds
adc
xor
lcall
pop
sub
adc
imul
aam
jbe
pop
div
inc
negb
sub
es
lahf
jns
jno
pop
cmp
xchg
cltd
cmp
out
dec
imull
xchg
adc
or
shlb
mov
mov
xor
and
pop
call
fdivrl
jp
xor
fs
pop
sub
mov
xchg
test
nop
scas
orb
dec
es
xchg
cmpb
jbe
or
stc
inc
jno
cwtl
ljmp
dec
inc
aad
ds
mov
popa
jne
lret
mov
cwtl
sbb
aaa
cs
pop
shll
cld
divl
inc
in
xchg
mov
in
ret
pop
jl
inc
aam
insl
mov
imul
dec
fld
jno
adc
leave
ja
mov
sti
call
sbb
data16
or
dec
pop
push
out
fildl
shll
js
mov
fwait
out
or
ret
adc
push
fildll
push
scas
data16
jo
pop
adc
cmp
in
mov
jge
fimuls
std
mov
dec
push
jecxz
inc
rorb
aaa
or
nop
cmc
lods
popa
js
xor
movsl
or
cltd
adc
mov
movsl
xor
pop
cmpsl
mov
gs
std
fdivl
pop
or
push
pop
js
dec
mov
mov
inc
arpl
es
dec
iret
mov
bndstx
mov
dec
add
les
sub
xlat
adc
mov
idivl
lcall
adc
movb
pop
sbb
std
xor
movsl
lock
add
push
dec
shlb
movsb
mov
mov
rcll
jecxz
loope
add
insl
lahf
daa
xchg
push
loope
or
daa
adc
adc
cmpsb
pushf
fadds
fstps
aas
imul
inc
inc
cmp
xlat
fsts
addr16
push
mov
andb
dec
cs
addb
sahf
inc
jns
add
add
dec
sahf
inc
fwait
push
add
mov
push
sahf
inc
jmp
rol
mov
xchg
push
rolb
xchg
and
sar
pop
ror
aas
xchg
cmp
inc
addr16
sub
inc
lret
cld
pop
popa
fmull
daa
popa
push
add
iret
jne
or
lea
gs
fidivs
pop
cmp
push
in
adc
jbe
shll
movsl
or
es
bound
cltd
outsl
pop
out
push
add
mov
fs
push
cmpsl
icebp
mov
stos
inc
inc
inc
mov
fisttpl
sbb
sbb
push
and
push
sbb
push
sbb
bound
stc
incl
adc
sbb
js
and
lods
fiadds
and
das
insb
jp
clc
addr16
dec
mov
shll
call
sbb
sub
push
lds
popa
xor
jecxz
stc
aaa
jmp
out
cs
fistl
pop
xchg
lret
call
mov
aad
and
sub
mov
scas
lret
sub
mov
das
push
mov
adc
data16
xor
cwtl
test
sbb
sarl
mov
sub
push
pushf
xchg
lea
fildll
inc
inc
mov
add
test
pop
pop
xchg
fmuls
daa
aaa
enter
enter
inc
pop
adc
xchg
push
or
xchg
aaa
mov
dec
and
xchg
xor
push
daa
or
test
adc
push
add
sub
mov
notb
loop
pop
fwait
loopne
xor
subl
cwtl
mov
cmp
data16
jbe
xchg
cwtl
xchg
cmp
push
and
pop
push
sub
jmp
das
gs
adc
test
imul
bnd
outsl
or
cltd
je
add
xor
lret
hlt
scas
or
or
lret
sbb
daa
fildll
scas
and
dec
and
imul
pop
idiv
push
and
divl
dec
aad
sbb
sub
mov
int3
repnz
adc
dec
sbb
push
jo
dec
sub
lock
push
xchg
jmp
aas
xor
add
fistpll
xchg
gs
icebp
bound
xlat
cmpb
xlat
inc
and
pop
popa
push
dec
outsl
repz
xchg
shr
pop
vmaxss
jle
int3
pop
lods
les
and
cld
shll
mov
test
mov
sbbl
inc
in
in
pop
outsb
cld
movsl
add
xchg
xor
imul
push
ret
inc
adc
sbb
jp
clc
or
out
shr
hlt
mov
fnsave
xor
ja
in
leave
push
mov
test
popl
mov
stos
push
daa
shl
lea
leave
jb
scas
out
enter
mov
cmc
cmp
adc
push
add
dec
mov
rcrl
lods
push
in
icebp
test
outsl
or
fiadds
xchg
push
ja
fdivl
into
jns
cmp
xchg
mov
dec
mov
loopne
lret
push
sti
imul
in
divl
loop
pusha
ljmp
and
in
jbe
xor
int3
jp
mov
dec
jbe
rolb
shr
cmp
inc
inc
out
addr16
lcall
call
dec
sub
jnp
jp
mov
cmc
dec
ss
fnstsw
mov
xchg
out
add
or
cli
push
push
xor
jno
lock
icebp
add
push
sti
or
jge
in
clc
push
pop
pop
xchg
arpl
and
adc
call
outsl
push
iret
push
mov
gs
sub
hlt
sti
loopne
mov
ljmp
xchg
clc
cmp
push
inc
jmp
ss
stos
mov
push
scas
nop
mov
pop
dec
cmp
cmp
ss
dec
xchg
mov
pop
mov
inc
push
lcall
test
push
xchg
mov
push
jmp
dec
cmpsb
and
out
pop
bound
fwait
fs
inc
int3
jp
adc
out
sub
mov
insb
arpl
popa
mov
xchg
mov
sub
in
add
xor
sbb
lahf
fcomp
negl
mov
sti
add
mov
popa
xor
and
aas
call
sub
xchg
int
ror
mov
cs
or
dec
scas
gs
lock
insb
and
mov
fcoms
sbb
add
dec
fisttpl
and
in
mov
add
aas
inc
adc
popf
test
fwait
or
sbbb
mov
call
ret
mov
mov
lret
jl
fists
push
fsts
jmp
sbbb
fidivrl
mov
in
inc
cmp
rclb
jae
movsb
pop
push
and
pusha
rclb
jecxz
ror
jb
sbb
push
bound
test
lock
mov
xchg
jne
push
out
stos
loop
mov
je
and
imul
mov
lds
and
repz
loope
mov
test
test
aam
loope
popa
cmpsb
cmp
ss
dec
push
push
push
ficoms
jg
inc
cld
outsb
dec
mov
and
mov
jge
push
dec
fistpl
stos
fsubl
mov
cmpsb
leave
ss
dec
ljmp
dec
cltd
or
pop
into
and
xor
sbb
out
jge
arpl
test
jge
and
dec
imul
aad
inc
jl
stos
cld
test
or
in
inc
mov
dec
sbb
out
inc
push
mov
cmpsl
notb
movsl
rorl
mov
adc
xor
dec
sbb
or
jb
pop
mov
leave
mov
jl
sbb
fnsetpm(287
movsl
in
mov
inc
pop
adc
sbb
jge
xchg
shll
lock
in
cmp
pop
daa
cmpsb
cmp
fldpi
mov
inc
outsl
and
cmp
movsl
testb
ret
add
and
aam
lods
pusha
lret
std
sarl
xor
leave
sub
cmp
inc
int3
inc
cmp
push
lret
jno
sub
jns
filds
insb
sbb
out
adc
lret
sysret
repnz
ficomps
xchg
dec
and
add
rolb
cmp
or
jbe
pop
mov
in
ljmp
sbb
dec
loopne
mov
loop
mov
jp
inc
scas
jmp
xchg
je
and
xchg
popa
xchg
pop
cmp
aas
push
xchg
lahf
test
sub
mov
fsubl
mov
mov
xor
cltd
and
cmp
or
cvttps2pi
adc
fcoml
popa
in
loope
xor
sbb
lods
mov
sub
mov
jg
popf
mov
sbb
pop
arpl
repnz
jecxz
add
cld
jbe
mov
jmp
jg
sub
out
inc
and
sub
push
insl
push
cltd
dec
xor
push
test
pushf
cmc
mov
mov
sbb
icebp
aam
and
mov
aaa
adc
add
pop
repz
fdivr
cmp
or
insb
mov
xchg
mov
pop
cltd
or
xchg
add
movsb
push
adc
xor
lock
and
insl
and
pop
inc
shl
adc
addr16
pop
or
repnz
pop
mov
jb
test
in
roll
fildll
xchg
lret
ja
sahf
push
push
mov
xor
xchg
xchg
lds
test
xchg
mov
int3
and
cmp
mov
cld
jg
mov
pop
xor
mov
and
jp
out
and
shlb
cmp
mov
daa
mov
sbb
subb
pop
jae
xor
jne
mov
pop
imul
sbb
into
ljmpw
xor
iret
inc
movntq
out
jae
addr16
inc
xor
mov
cli
dec
out
mov
pop
cmp
repz
fld
out
mov
mov
jmp
jge
outsl
cmp
mov
jmp
adc
incb
fistps
ret
inc
movsb
mov
in
iret
inc
fists
inc
hlt
sar
pop
adc
push
test
mov
pushf
mov
outsl
mov
jge
sbb
jmp
dec
clc
mov
dec
sbb
cmp
sub
jecxz
and
inc
sub
in
ret
movsb
mov
loopew
or
xor
mov
in
lret
mov
mov
fstps
fcomps
cmp
mov
xchg
gs
test
xlat
outsl
leave
push
and
or
sub
ss
aas
arpl
sarb
cwtl
dec
inc
xchg
es
mov
push
iret
xchg
andl
dec
shlb
pop
pop
jbe
jmp
adc
pop
faddl
outsb
cmpsl
fadds
and
jae
add
mov
xchg
das
clc
inc
sarl
in
adc
xchg
mov
repz
mov
xchg
jae
stos
fwait
std
push
push
lret
clc
mov
test
mov
mov
int3
fsubl
mov
push
lea
hlt
pop
movsb
pop
inc
aam
ret
repz
aaa
dec
leave
mov
lcall
xchg
push
xlat
clc
les
adc
mov
and
adc
fldcw
fs
shlb
jo
inc
push
push
or
scas
cmpsl
test
hlt
push
sarl
pop
jnp
sbb
fiadds
cwtl
adc
adc
pop
shll
aad
pop
inc
roll
push
out
jg
dec
cmp
out
jmp
fdivs
loopne
jno
bound
or
addr16
mov
dec
jl
bswap
call
mov
adc
icebp
sahf
out
aaa
inc
and
aaa
dec
push
and
inc
fldcw
adc
fmuls
je
mov
or
icebp
mov
repz
cmp
sbb
popf
lods
cmp
push
jne
cwtl
lcall
rorl
xchg
inc
jp
incb
jge
pop
es
fisttpll
push
aas
or
scas
sub
push
aaa
or
xchg
dec
sub
shrl
mov
mov
stos
mov
jno
stc
add
pusha
or
pop
scas
mov
jnp
inc
imul
pop
out
mov
mov
and
loop
xchg
js
or
mulb
andb
shr
mov
ret
push
andb
data16
movl
cli
push
adc
mov
mov
das
jo
ret
inc
mov
push
into
lds
cld
push
roll
mov
lock
cmpb
or
inc
cmpsb
iret
push
iret
movsb
adc
jle
mov
dec
jns
sahf
mov
jge
stc
addr16
pop
fmul
pop
test
nop
pop
ja
add
adc
icebp
in
inc
inc
imul
xchg
dec
ljmp
jb
mov
mov
mov
add
cmp
xor
dec
icebp
pusha
lahf
cwtl
lods
ljmp
pushf
fs
push
fidivrl
insb
mov
sub
roll
adc
iret
inc
rol
rcrl
lock
and
insl
push
mov
pop
mov
aam
test
loop
jne
xchg
scas
jecxz
fsts
dec
mov
push
mov
insl
out
pop
push
imull
jle
lea
dec
rclb
sarb
and
and
sbb
pop
lret
pop
aam
hlt
mov
mov
fmuls
insl
adc
insb
fisubl
addb
cmp
inc
ja
or
test
out
rolb
ss
sbb
incb
rcr
cld
xchg
xor
mov
dec
dec
sahf
pop
imul
pop
mov
test
fnstenv
ret
cli
in
pop
ret
cld
shr
addl
pop
lcall
push
mov
andb
fdivrp
mov
in
or
jg
lock
inc
pushf
push
jnp
and
mov
fldcw
loop
push
shrl
or
icebp
mov
and
insl
aad
cli
xchg
pop
orl
out
sbb
jle
icebp
aas
das
xor
lods
into
lock
int
pushf
fldl
sahf
cld
out
mov
lea
movsb
push
lret
adc
out
mov
xlat
call
test
jmp
mov
in
cli
dec
jp
mov
mov
and
stos
movsb
push
cmpsb
add
sti
mov
aaa
inc
fmull
sub
mov
pop
orl
push
mov
inc
cld
shll
pop
jno
mov
add
icebp
cmpsl
aaa
loopne
lods
xor
adc
fnstcw
jg
repz
jg
cmp
push
sahf
sbb
or
adc
das
std
xor
ret
enter
hlt
jle
push
out
add
pop
mov
push
mov
mov
sbb
and
in
sti
adc
pop
mov
push
dec
in
pop
rorb
push
inc
cmpsl
stc
or
pop
testl
and
xchg
adcl
enter
xor
cmp
gs
cwtl
clc
sub
push
stos
orb
clc
fwait
mov
dec
hlt
sub
mov
mov
das
push
ja
js
sbb
loope
xchg
pushf
icebp
ljmpw
inc
sbb
iret
mov
jo
rol
cld
adc
inc
mov
fnstcw
push
sbb
pop
inc
sub
ret
adcb
imul
aam
arpl
js
outsb
mov
pop
sub
jp
bound
scas
decl
sub
jbe
cmp
or
sub
lret
dec
notl
stos
out
adc
xchg
add
mov
pusha
cs
ljmp
jne
inc
push
push
mov
sub
dec
fldenv
je
bts
fwait
mov
sub
sub
xchg
dec
sbb
lds
stos
mull
mov
andb
insb
movsb
inc
mov
xchg
fs
pop
sub
and
lods
lahf
cmp
test
mov
cmp
cmp
add
push
imul
adcl
xor
lds
push
mov
mov
push
clc
add
outsl
jle
cmp
mov
das
xor
lea
loope
jbe
xchg
in
daa
and
lret
icebp
jge
mov
pop
aad
cmp
mov
push
and
mov
cwtl
je
repz
sub
ret
pop
sbbl
ret
adc
mov
sub
hlt
and
push
test
arpl
mov
ret
sub
inc
cmp
jge
mov
outsl
mov
adc
popf
arpl
xchg
cmp
mov
std
push
jns
jle
inc
dec
insl
pop
ds
add
scas
insl
adc
ret
or
jne
je
sbb
xchg
repz
in
int3
mov
fimull
add
hlt
jae
jns
aad
jp
lods
ret
jmp
mov
ror
sub
mov
mov
jns
inc
test
sub
sub
sar
cmp
xchg
fsubs
push
jnp
or
and
filds
jae
sti
add
mov
sarb
xor
push
inc
in
icebp
jno
xchg
xor
mov
hlt
xor
lahf
fcompl
pop
stos
cmp
xchg
jbe
scas
sbb
xor
inc
adc
mov
xchg
fmull
fnstcw
repz
pop
in
enter
pop
cmp
icebp
iret
mov
dec
mov
dec
mov
xor
mov
cmp
mov
jbe
ror
dec
inc
sub
lock
mov
push
or
gs
rcl
insb
inc
mov
icebp
add
cmp
jnp
adc
push
loop
pop
in
sub
inc
rcr
insl
repnz
dec
jmp
mov
cmp
dec
insb
daa
dec
sbb
push
shll
push
xchg
cs
dec
xchg
nop
xor
dec
int3
pop
loope
jno
inc
xor
test
loop
sbbb
test
mov
xor
into
and
je
rcrb
ret
inc
mov
decl
mov
test
in
push
fs
imul
add
push
sub
jns
and
pop
add
rcll
pop
rcl
add
xor
aad
fildl
cmp
daa
rcrl
lds
in
mov
jmp
xor
mov
ljmp
pop
cmpl
dec
fwait
sub
lea
insl
inc
fstpl
jmp
iret
in
or
movsl
jnp
or
ds
xchg
sahf
xchg
fdiv
leave
mov
mov
lcall
loop
mov
sbb
jne
mov
imul
xor
lcall
xchg
pushf
lahf
and
or
andl
insl
in
jecxz
xchg
mov
lret
push
jns
icebp
mov
push
nop
dec
mov
stc
mov
out
jecxz
fstpl
mov
mov
jle
mov
leave
pop
jle
push
ss
ret
movsb
addr16
pushf
test
test
cmp
adcl
es
ret
sahf
pop
mov
jmp
mov
push
aad
lds
pop
jmp
xor
mov
hlt
test
push
scas
ss
psrlq
sti
push
and
out
lcall
sub
push
aaa
cmp
movsb
jnp
adc
repnz
sarb
mov
mov
data16
sub
cmpsl
sqrtps
sbb
aaa
je
icebp
mov
test
push
test
sbb
add
push
js
vpshufhw
mov
mov
loope
xor
ja
test
cmc
cli
lcall
out
int
aam
xchg
int
mov
movsb
mov
xchg
fsubl
xchg
scas
stos
xchg
sub
data16
lret
xor
js
mov
mov
mov
inc
mov
lock
mov
lods
xorl
mov
xchg
mov
adcl
pop
pop
cmp
push
out
insb
shr
sbb
mov
push
pop
xchg
dec
bound
adc
push
sub
dec
or
jmp
imul
push
pop
jns
jno
inc
add
ljmp
daa
and
pop
add
fsts
ret
or
sbb
icebp
adc
or
mov
mov
mov
adc
add
jg
xchg
push
pop
dec
sub
repz
arpl
lods
mov
mov
sub
mov
xchg
imul
mov
enter
dec
mov
sbb
aas
lcall
leave
movsb
xor
jl
inc
mov
push
arpl
pop
pop
and
sub
fsubrp
adc
jnp
sbb
testl
mov
roll
mov
filds
cs
pop
push
adc
push
cmpb
mov
popf
or
and
push
mov
and
inc
clc
sbb
add
addb
into
imul
push
cmpsb
pushf
int
jmp
mov
xchg
cmpsl
int3
mov
out
jns
inc
xchg
loope
cmp
pop
fdivr
shll
pop
andb
es
sub
int3
lock
lds
pop
lods
insl
loopne
or
imul
lods
mov
stc
dec
sub
insb
mov
add
xor
push
repnz
jl
insb
mov
rorb
adc
pop
pop
add
lock
in
cli
es
push
pop
neg
shll
push
sbb
push
mov
mov
sub
or
ret
vpshlq
fisubl
push
clc
cmc
enter
push
inc
jecxz
pusha
mov
xchg
negl
and
gs
pop
addl
push
jp
mov
andb
outsl
scas
pop
xchg
dec
add
xchg
iret
into
in
pop
mov
fcomp
inc
or
loopne
stc
push
mov
testl
mov
mov
in
push
ret
sub
push
xchg
and
cwtl
xor
rcl
jb
cmp
dec
xchg
fmull
mov
mov
cmp
sub
cmp
xor
int
jns
incb
clc
insl
jp
sub
daa
and
jbe
not
or
mov
xlat
dec
stos
push
iret
int3
adc
addl
sbb
lods
xor
jo
dec
sub
mov
imull
icebp
mov
jg
xor
add
xchg
negb
adc
xor
jo
and
stos
inc
rol
popa
mov
inc
faddl
insl
aaa
rdtsc
xchg
fwait
cltd
fcoml
fnsave
mov
push
adc
lahf
mov
mov
int3
or
bound
ret
gs
arpl
in
les
fcoms
pop
sub
jns
sbb
aam
out
add
mov
mov
cmp
pop
dec
dec
lret
loopne
data16
je
xchg
push
cmp
out
mov
dec
ficoms
push
andb
rol
dec
push
movsb
insl
sbb
enter
repz
inc
inc
cltd
xchg
sbb
pusha
sbbb
push
fbld
movsb
mov
inc
or
fnstsw
andl
pop
mov
mov
cmpb
or
je
loope
mov
fdivrs
cmp
cld
jb
cmpsb
xor
lods
or
adc
mov
adc
fmul
addl
fidivrs
mov
ljmp
and
adcb
cmp
loope
inc
lahf
adc
push
xchg
jle
lret
dec
inc
push
ds
dec
jno
and
pop
xorb
push
adc
jno
xor
lods
mov
xor
repnz
push
xchg
dec
pop
mov
push
out
ljmp
mov
lds
out
ret
pop
clc
jbe
rclb
movsl
fldl
int3
in
shll
pop
push
push
cmp
lods
mov
pop
xor
push
mov
xorl
xchg
add
push
jmp
sub
mov
inc
bound
cmp
outsl
ljmp
lods
jb
in
test
xor
cmc
xor
mov
pop
into
xchg
xchg
rcll
push
jae
mov
pop
scas
jge
int3
lret
lock
adc
sub
lcall
mov
aad
mov
cli
sub
out
out
sbb
imul
jbe
cli
mov
mov
dec
and
pop
cltd
push
orb
roll
icebp
mov
andl
or
cmpsl
xor
repnz
inc
rcrl
rorl
adc
aaa
imul
add
push
xchg
sbb
pop
in
icebp
or
rorl
xor
or
mov
repz
dec
loope
scas
in
adc
dec
jb
pop
aam
cltd
and
push
movl
stos
xchg
push
stos
jmp
arpl
xchg
pop
dec
insl
cs
sub
pop
fimuls
les
das
or
popf
div
loop
sbb
push
adc
movsl
lods
xor
or
scas
add
push
push
inc
mov
mov
xchg
lock
fidivrl
mov
repz
push
add
cmpl
cmpsl
jno
adc
ret
mov
lock
jmp
push
leave
sti
mov
pop
lret
dec
jb
pusha
jb
adc
xor
shll
ret
push
and
gs
xchg
cmp
inc
outsb
jg
dec
mov
sbb
sahf
xchg
and
iret
adc
decl
mov
shrl
pop
mov
inc
aaa
push
arpl
popa
mov
xor
mov
pop
mov
cmp
subb
stos
leave
sti
jecxz
mov
clc
sub
dec
adc
cmp
aaa
push
rcr
fdivl
jp
xlat
jae
js
int
push
sti
mov
call
add
jecxz
pushl
fs
imul
fdivl
push
mov
jl
loope
push
push
push
inc
ret
outsl
xlat
mov
lcall
std
dec
jg
pop
je
andb
stc
repnz
inc
xlat
pop
sbb
cmc
ds
jno
jp
pop
aad
fisubrl
xor
lods
aaa
jnp
sub
jl
fmull
xchg
sbb
inc
pop
ret
test
add
jbe
pop
mov
addr16
xchg
xchg
int
or
cli
push
rcr
inc
cmp
and
mov
mov
insl
ljmp
loop
add
pcmpeqd
inc
loop
or
mov
adcb
icebp
mov
or
push
dec
fwait
out
shlb
out
incl
push
js
sbb
sub
inc
and
int3
or
mov
scas
mov
pop
cmpsl
adc
add
dec
cwtl
adc
data16
adc
shlb
jmp
or
ds
pop
fcoml
cmp
or
xor
dec
add
sub
sub
ret
sbb
mov
lss
xchg
inc
mov
std
jl
sarb
dec
cld
adc
out
pop
xchg
test
into
outsb
or
dec
into
sub
dec
mov
and
std
mov
psrlw
dec
mov
sub
push
in
fsubl
fld
movsb
pop
sbb
jbe
jge
cmc
call
fbld
and
jle
add
sbb
xor
out
cwtl
sbbb
xchg
sub
push
pushf
inc
cmp
jae
iret
jmp
xchg
scas
icebp
push
test
dec
pop
cmp
sahf
sub
adc
mov
push
jo
sub
sahf
cltd
sub
fldln2
std
sub
xchg
push
mov
inc
imul
mov
cmp
push
inc
mov
insl
fs
out
imul
bound
add
repnz
out
inc
imul
mov
xchg
or
mov
jmp
imul
sbb
fdivl
or
scas
stos
pusha
sub
add
mov
sub
jno
dec
xor
aas
xchg
jne
divb
lcall
aad
push
jecxz
pop
insl
arpl
xchg
cmpsl
icebp
data16
int3
into
dec
sbb
pop
push
out
test
sub
sti
and
lcall
sub
inc
hlt
sbb
lods
cmpsb
stos
insl
sbb
mov
xor
repz
jns
and
inc
in
popa
pop
inc
rorb
push
push
insb
loop
push
mov
dec
mov
pop
mov
jnp
rcll
aad
jbe
mov
jno
jle
inc
mov
in
push
call
push
jg
sarl
or
scas
out
xor
adc
jb
ret
ja
pop
les
add
popf
cmpl
in
and
or
cli
mov
push
fst
dec
pop
shlb
jle
icebp
ljmp
inc
pop
xchg
rclb
or
aad
nop
imull
dec
dec
cmc
test
sub
ss
popf
orb
bound
jp
xchg
mov
pusha
jns
push
in
mov
pop
jge
adc
xor
fs
mov
mov
adc
add
movsl
je
test
arpl
movsb
and
loop
push
push
repz
and
sahf
mov
ss
xlat
add
test
dec
add
sub
jge
xor
rcl
sub
lock
fidivs
nop
push
or
ja
sbb
lods
inc
das
pop
push
outsl
adcl
out
movsl
push
das
push
outsl
dec
cmp
dec
xchg
daa
or
out
nop
int3
gs
jnp
pop
cmpsb
orb
push
and
lahf
ja
xor
push
out
jne
mov
cmpsb
arpl
ss
nop
jp
inc
cmp
push
sbb
mov
xchg
int
out
mov
push
push
push
mov
in
inc
enter
jb
pop
dec
pop
xchg
pop
inc
mov
loopne
test
int3
fsubrl
lea
mov
scas
jg
xor
test
cmp
adc
dec
sub
and
mov
mov
xchg
mov
cld
push
testl
xchg
cmp
xor
lcall
pop
jp
jg
push
jns
jmp
jecxz
add
in
or
lods
jp
push
pop
jne
mov
adc
movsb
xchg
repnz
fcmovne
jmp
cmp
or
jnp
push
loop
cwtl
cltd
push
pop
enter
sbb
pop
das
ja
adc
aas
xchg
rolb
cld
xchg
and
mov
iret
jnp
inc
cltd
ret
dec
push
inc
lahf
sbb
or
hlt
nop
mov
in
add
push
lret
fxch
add
add
mov
push
mov
subl
in
jo
mov
xchg
out
cmp
xchg
dec
jecxz
fcmovb
imul
dec
cmp
pop
sbb
adc
not
xchg
inc
xor
adc
sbb
data16
xor
mov
popa
bsf
int
lds
ss
cmp
add
jg
jns
push
inc
dec
fwait
jno
xor
ds
or
dec
daa
inc
sbb
push
pop
popf
mov
xlat
std
xor
jp
push
xchg
dec
mov
mov
rclb
lcall
aaa
pop
test
bound
push
sub
mov
adc
jnp
sahf
push
in
add
mov
sbb
sub
lahf
outsb
push
je
jp
leave
inc
push
push
int3
adc
popf
shlb
cmpsl
mov
jns
pusha
inc
cmp
mov
cs
mov
cmp
xor
popa
mov
arpl
mov
es
out
daa
and
push
xor
fnstsw
cs
movsl
aaa
cmp
inc
pop
mov
and
xchg
adc
xchg
call
lock
inc
xorb
std
stos
cmp
das
push
push
orl
shrb
test
adc
mov
cmpsb
in
lock
dec
test
inc
loopne
ljmp
mov
add
and
aas
jle
mov
mov
lret
mov
and
jae
xor
cmp
xor
xchg
aaa
rclb
pop
lea
push
fistpll
popf
out
cmpl
add
add
xchg
out
scas
mov
sarb
sahf
cmp
xchg
jnp
sbb
jbe
and
jle
fidivs
in
sbb
jnp
daa
cld
addr16
or
mov
ss
dec
mov
popf
and
xor
imul
jae
pushf
lds
and
and
adc
loop
mov
mov
pop
cld
rorl
jge
rcr
adc
fs
call
add
add
gs
ss
hlt
lods
int
arpl
dec
cmc
sbb
in
out
jb
jmp
icebp
jmp
dec
dec
pop
xor
jbe
and
or
jb
and
dec
dec
insb
in
mov
das
mov
inc
xchg
jecxz
rclb
jnp
flds
outsb
push
and
ja
ret
std
cs
ficoml
add
cmpb
sarb
or
mov
je
ss
xor
adc
mov
pusha
inc
xchg
outsl
sbb
xchg
mov
dec
in
adc
or
lret
pusha
int
and
or
inc
fs
sub
xchg
inc
lahf
sub
scas
pop
lret
cs
mull
movsl
mov
mov
dec
xor
push
pop
sbb
cmp
into
lcall
cmp
clc
cmc
ret
cmp
xlat
leave
sbb
sub
fdivrl
sub
cmp
pop
jo
push
out
ss
mov
adc
mov
and
push
or
mov
dec
push
xor
push
pop
clc
lea
std
push
mov
and
push
or
xor
and
cltd
sbb
adc
add
test
inc
inc
leave
pusha
aad
xor
les
int
in
xchg
mov
fldl2t
xor
out
cmp
sbb
mov
out
xor
inc
rolb
mov
pop
xor
outsl
fs
push
sub
lret
arpl
insb
outsb
inc
adc
inc
adc
test
fisttps
push
pop
mov
push
adc
dec
adc
lock
aas
mov
dec
or
je
xor
stos
mov
fcompl
mov
bound
leave
pop
pop
lods
stc
icebp
xlat
std
adc
push
adc
push
mov
fcmovnb
out
movb
addr16
int
sbb
cli
add
arpl
pop
push
pop
sub
sahf
push
data16
mov
dec
and
jmp
xchg
inc
dec
fwait
adc
cmpsl
sub
sbbb
push
adc
mov
mov
add
fsubr
sub
and
jmp
movsb
xor
xor
out
shlb
movsl
fsubr
movl
and
scas
pop
je
repnz
aad
cmp
incl
lods
stc
or
int3
inc
shlb
outsb
clc
inc
adc
in
in
dec
mov
sub
cld
push
jge
and
mov
push
pop
pusha
fs
adc
or
jle
icebp
or
outsb
mov
cmp
dec
cs
dec
xchg
jle
inc
mov
mov
or
xor
test
lret
cmpsl
cwtl
insl
pop
adc
iret
lods
fsub
les
xchg
daa
push
cwtl
imul
pop
sub
sbb
dec
sbb
cmpl
gs
jne
pop
outsb
rcr
inc
test
dec
mov
ret
lock
and
hlt
adc
xor
addr16
test
add
adc
sub
cmp
icebp
inc
push
pop
shr
xor
mov
xchg
jb
pxor
sbb
pop
and
or
xchg
xor
push
mov
dec
push
fidivs
add
int
or
shll
push
sbb
out
sub
lea
jmp
adc
xor
xchg
mov
inc
mov
movsl
and
lcall
stos
push
insl
push
sbb
mov
iret
loopne
push
sub
mov
lret
dec
push
jo
pop
daa
mov
cmpsb
push
push
clc
lock
inc
push
sub
cmpsb
call
sbb
dec
adc
out
lea
je
sbb
sti
cmp
jo
dec
cld
lods
and
inc
jle
jmp
outsl
push
stc
sub
gs
lret
or
jp
dec
out
or
inc
lret
jecxz
inc
pushf
pop
nop
fwait
enter
and
mov
mov
push
in
scas
pop
sbb
scas
sub
xchg
inc
imul
xchg
or
mov
fisubl
jne
lea
jge
pop
sbb
insb
popf
sarl
mov
sbb
lcall
cmp
inc
mov
data16
andl
es
arpl
xchg
mov
jge
sahf
loop
imul
in
jl
sub
mov
mov
xchg
or
imul
aam
cmpsl
dec
add
xchg
cmp
mov
xchg
daa
inc
add
pop
aas
outsb
dec
fnstsw
mov
jmp
ss
jg
xor
outsl
sub
mov
jae
xlat
and
outsl
out
mov
mov
jno
mov
inc
pop
jno
movsb
mov
pop
lods
sarl
xor
and
jno
shr
rclb
pop
in
xchg
test
inc
mov
mov
sbb
in
jb
inc
dec
pop
popa
inc
mov
mov
ljmp
mov
lret
hlt
or
dec
insl
sub
jmp
dec
dec
sar
testb
sbb
and
jno
hlt
fcmovb
in
and
int
das
pop
mov
aaa
int
and
xor
int
mov
sbb
sub
pop
lds
adc
xor
rorb
imull
pushf
shr
cld
xchg
push
roll
ss
fs
xor
shrl
push
adc
jno
xchg
push
insb
scas
pop
jo
sub
mov
fs
jnp
lret
out
add
out
fwait
mov
in
mov
ret
add
je
int
out
add
mov
or
in
xlat
mov
mov
mov
sbb
popf
je
xchg
mov
cmp
fprem
das
or
xorb
jmp
and
test
push
xchg
cli
popa
pop
sub
int3
lds
dec
and
andl
sub
sti
pop
imul
and
mov
jno
aad
fidivs
xlat
sbb
sbb
mov
aam
xlat
int3
mov
bound
fnstenv
sub
xorb
std
aas
loopne
lret
push
sar
clc
push
outsb
xchg
pop
ds
test
sbb
int
sub
lret
mov
std
push
xor
mov
sub
push
push
lcall
push
xchg
jge
cmp
test
inc
pop
mov
cmp
inc
dec
xor
push
inc
mov
push
fisttps
in
incb
jmp
or
pushf
jno
add
lahf
leave
adc
insl
push
jae
sub
xor
stos
and
or
leave
dec
daa
mov
mov
push
int
lods
mov
cmc
sahf
pop
out
nop
dec
xchg
in
sbb
pushf
inc
sub
mov
inc
adc
push
adc
jno
inc
mov
sbb
jns
mov
in
rcll
cmp
aas
or
inc
push
popf
ja
hlt
adc
clc
push
ror
push
in
pusha
aas
in
loop
fs
test
rcll
movsl
mov
push
les
xor
mov
pop
mov
jnp
cmc
fiaddl
mov
jns
dec
sbb
addl
mov
pop
jg
or
jl
movsb
add
cmp
shll
daa
jnp
enter
fmuls
test
xchg
test
scas
or
jb
push
and
xchg
inc
ficompl
jns
mov
push
pop
daa
mov
inc
push
cmp
je
outsl
push
mov
int3
les
andl
test
sbb
in
xor
push
stos
scas
mov
inc
add
or
mov
aaa
popf
aam
nop
mov
inc
inc
dec
push
je
mov
push
js
rcrb
lret
call
adc
dec
sarb
push
jo
imul
inc
fs
ds
xchg
data16
lea
adc
mov
mov
stc
lock
mov
lahf
and
sub
fildl
inc
lds
push
cmp
cmpsb
dec
ds
and
gs
xchg
mov
and
add
jae
adc
add
stc
sarl
or
jne
mov
push
xchg
insb
stc
jle
dec
mov
inc
out
cmp
mov
xor
stos
fcoml
push
and
and
pusha
incb
jl
lods
fiaddl
icebp
mov
dec
mov
mov
inc
xor
cld
shlb
xor
lahf
aas
pop
sub
nop
xchg
add
addr16
or
push
not
cwtl
pushf
xor
pusha
ret
popa
xchg
mov
dec
iret
sbb
arpl
rolb
divl
loopne
out
xchg
mov
subl
xchg
pop
lods
mov
mov
pop
ljmp
ret
lahf
fildll
sbb
mov
fisubs
push
test
out
incb
repnz
iret
test
lods
mov
add
mov
vmovapd
mov
xchg
cld
pop
jecxz
jmp
mov
jns
mov
xor
leave
into
orb
xchg
xchg
sbb
and
test
ret
loop
outsl
cmpsb
push
jbe
cmp
push
inc
xor
xchg
sub
test
in
push
into
sub
loope
push
out
pop
jg
mov
jbe
push
cmp
in
addb
xchg
cs
or
adc
in
or
in
xlat
in
sti
pop
in
hlt
in
push
mov
sub
sub
xor
pop
adc
stos
sbb
imul
sti
adc
loope
xchg
jl
xchg
mov
mov
jle
adc
xchg
popf
daa
clc
ret
cmp
or
inc
lret
jnp
inc
sahf
xchg
fistpll
xor
cmpsb
dec
or
into
sbbb
loope
mov
lds
in
in
test
jbe
rcll
dec
dec
std
dec
adc
adc
or
pop
mov
cmp
mov
push
enter
xor
pop
pushf
imul
scas
push
xchg
push
pop
lds
rcll
mov
out
xchg
xchg
scas
mov
mov
popf
icebp
movsb
or
inc
sub
pop
mov
jge
mov
dec
inc
lock
mov
push
call
mov
sahf
cmp
xchg
lods
or
mov
cmc
push
cmc
jp
loope
test
ljmp
faddl
or
loope
add
dec
in
xchg
cmc
pop
in
xchg
imul
out
andl
inc
inc
sub
fdivs
xchg
ret
mov
lds
jae
sbb
push
cmp
sub
pop
outsl
aam
in
xchg
pushf
mov
jl
loopne
xor
adcl
jae
ret
dec
inc
popa
inc
jge
mov
mov
enter
je
mov
sahf
jno
dec
jmp
inc
cmpsl
fldenv
pushf
xchg
push
adc
push
lret
jle
sqrtps
add
pop
scas
inc
adc
iret
ds
cld
mov
cmp
xor
jl
mov
inc
stc
std
pop
sub
mov
pop
sbb
push
fs
lret
clc
out
pop
popa
mov
addr16
pop
jns
rorb
out
das
pushaw
fdivrs
fldt
popf
xor
inc
or
add
scas
lods
mov
gs
repz
sbb
mov
sti
or
int3
cmpsb
in
repnz
sbb
icebp
fiaddl
xor
arpl
lea
cmp
pop
dec
fstpt
pop
adc
or
lods
sub
in
push
pushf
test
lret
mov
hlt
ret
or
fisubl
mov
outsb
pop
and
adc
inc
or
test
fs
into
xor
mov
lahf
mov
loope
cmp
push
imul
shr
popf
jge
adc
call
mov
cmc
je
xor
inc
mov
test
cmc
repnz
ret
fistpll
adc
jmp
loop
ret
mov
mov
push
movsl
lods
sub
add
std
aad
adc
xor
adcb
mov
xor
cmpl
pop
mov
call
out
test
dec
cli
lods
mov
mov
push
ljmp
mov
in
pop
imul
cmp
mov
and
jno
add
mov
inc
js
out
leave
push
xchg
shlb
aam
add
iret
jmp
sub
into
sub
pop
cmp
jbe
mov
fcmovbe
stc
ucomiss
adc
push
xor
mov
xor
cltd
imul
lret
pushf
inc
pusha
rorl
jnp
das
fsubp
sub
int
pop
das
outsb
cmp
add
ljmp
ja
adc
sti
push
sbb
pop
lcall
out
fimuls
inc
mov
fsubrp
adc
movlhps
mov
imul
test
mov
dec
or
inc
push
jecxz
pop
mov
fs
lods
dec
jmp
mov
outsb
int
add
xchg
mov
push
addb
adc
mov
fisttpl
repz
fs
pusha
popf
xchg
xchg
push
xchg
cmp
push
bound
outsb
in
test
mov
inc
xchg
mov
sarb
lods
das
fisubl
push
stc
cmpb
jne
pop
mov
jmp
sub
jecxz
popf
mov
push
and
dec
sbb
shrb
jnp
push
fisubs
inc
ss
fdivrl
ds
cmovl
jnp
jno
jmp
mov
xchg
iret
push
aad
sbb
mov
jp
jae
movsl
int3
inc
inc
adc
nop
adc
push
fbstp
popl
adc
rcll
pusha
lret
test
out
data16
sbb
or
push
jnp
inc
in
adc
jo
push
addpd
popf
ds
or
sti
shrl
pop
pop
das
popf
push
sub
jo
into
cmp
add
push
div
fstps
xchg
inc
jne
cli
fstps
cmp
jnp
pop
mov
fldcw
push
fisttpll
add
mov
les
and
dec
push
push
dec
test
inc
and
xchg
ljmp
movsl
scas
xchg
aad
push
mov
xchg
repz
mov
sti
fisubrs
add
jmp
dec
mov
or
push
inc
fistl
test
lds
out
aaa
aad
fistps
cmp
push
mov
sbb
lods
cs
rorb
or
fcoml
mov
rorl
dec
xor
mul
test
mov
dec
pop
pop
xchg
data16
es
test
pop
lea
xchg
sahf
pop
fs
mov
jecxz
movl
cmp
stc
add
xor
or
jae
xor
fcompl
sbb
mov
mov
sbb
xor
jbe
sbb
mov
pop
and
or
or
adc
pop
mov
cmp
and
stos
ret
cmpsl
sbb
xor
dec
dec
sub
sarb
push
imulb
dec
add
stos
arpl
cs
xor
cmpsb
sbb
cmp
ret
inc
cmp
jge
scas
pop
fs
mov
fwait
stos
insl
adc
add
je
ret
pop
fistl
hlt
fdivrl
lret
inc
outsl
outsl
cmp
add
cmc
cli
and
mov
xchg
jmp
dec
jnp
pop
sbb
sub
xor
lods
mov
fstps
inc
addl
or
paddw
pop
xchg
cltd
cli
nop
pop
xchg
les
fs
push
pop
in
les
arpl
sbb
ret
inc
insl
jle
bound
hlt
dec
adc
insl
jge
popa
and
dec
adc
ret
dec
insl
js
jl
and
ret
shll
add
add
dec
lock
dec
push
add
cltd
push
push
sub
jle
dec
popa
dec
xchg
adc
das
mov
adc
sub
fadd
mov
stos
in
adc
xchg
mov
mov
jmp
icebp
clc
pop
popf
push
xor
xorb
mov
popf
xchg
mov
pop
stc
inc
data16
jno
in
inc
das
adc
call
xor
sti
jns
iret
mov
sbb
test
or
push
aas
lret
cwtl
dec
and
lcall
add
leave
pushf
je
movsb
push
addr16
sub
mov
data16
pop
xor
mov
stos
pop
lea
push
int3
push
mov
leave
cmp
sbb
into
cli
push
in
out
ds
roll
int
rol
mov
jge
xor
xchg
adc
xchg
js
stos
push
xor
scas
mov
ss
in
push
in
sbb
cltd
xchg
jbe
lcall
and
mov
adc
ficoml
jge
mov
and
adc
ret
fucom
mov
mov
jg
cmp
mov
out
cmp
adc
lds
rolb
fildl
xor
sub
lods
xor
test
xchg
mov
cld
dec
cmp
stos
inc
push
mov
shrb
cmpsb
mov
dec
push
lret
mull
mov
xor
and
nop
push
imul
lock
mov
mov
rcr
lods
pop
je
push
int3
cmp
jne
test
ret
enter
es
ljmp
cli
mov
xchg
and
aaa
or
mov
test
aam
inc
push
dec
pop
iret
idivl
cli
test
pop
jae
cmp
ret
push
adc
shrb
inc
inc
pop
jb
cmpb
mov
sub
push
jp
testl
mov
popl
cmpl
sbb
fs
popl
inc
loopne
sbb
inc
dec
cwtl
enter
cltd
jge
push
into
lahf
in
jg
dec
and
mov
jno
sbbb
sub
shr
std
cmp
pop
push
push
and
stc
faddl
std
je
cmp
int3
jg
jl
out
push
pop
xchg
xchg
jle
inc
lea
adc
adcl
adc
xchg
icebp
repz
xchg
and
xor
xchg
test
or
lcall
dec
cmp
cmpsl
stos
mov
adc
lods
test
push
push
add
ss
jo
push
sarl
adc
sbb
aaa
pop
adc
mov
jo
mov
mov
popf
and
and
idivb
addl
push
call
xchg
ficoml
fists
and
sub
jle
jecxz
les
sub
mov
push
aaa
mov
push
xlat
push
pop
or
das
inc
out
inc
jmp
int
in
sub
xchg
or
repnz
and
adc
pushf
and
xchg
pop
aas
or
aas
cli
sahf
lret
jmp
jge
loope
insb
loope
xchg
cwtl
hlt
mov
mov
mov
in
iret
jmp
rolb
inc
or
pop
inc
jb
popa
lcall
mov
xor
test
scas
add
leave
aam
les
sub
ret
cltd
and
xchg
adc
push
imul
jmp
jecxz
dec
shll
push
push
test
push
in
push
loop
or
and
js
sahf
jb
loop
popf
adc
loop
repz
adc
sub
fsubrl
mov
xor
ljmp
inc
out
xchg
cmp
adc
jge
mov
cmp
xchg
aaa
dec
pushf
sbb
icebp
inc
add
add
pop
incl
adc
shll
faddl
inc
ds
sbb
and
mov
std
and
repz
fcos
loopne
mov
outsl
stc
push
push
push
push
call
jne
in
mov
adc
ljmp
repz
sub
enter
mov
push
add
pop
push
adc
fnstcw
jecxz
inc
frstor
lds
iret
repnz
rcrb
adc
addr16
and
test
adc
adc
and
aaa
mov
lds
cltd
push
fbld
cmpsb
lahf
pusha
pusha
jo
xor
out
movsl
push
aad
inc
pushf
jae
pop
ds
cltd
and
mov
stc
sub
pop
adc
cmp
enter
fwait
mov
inc
pop
mov
pop
cltd
cltd
add
cli
mov
push
data16
xor
ss
in
repnz
inc
out
or
jbe
cmpsl
shr
fldt
and
fcompl
jae
test
jns
cmc
repnz
jmp
jb
mov
mov
ret
sbb
push
sub
xchg
xchg
xchg
in
push
mov
xor
stos
jge
push
mov
xchg
js
nop
sti
lret
lahf
out
xchg
and
daa
dec
pop
mov
xor
and
cmpsl
mov
or
mov
xchg
sub
dec
inc
rolb
popf
lods
lret
xor
aam
xchg
xchg
sti
adc
movsl
imul
jl
jns
int3
mov
inc
mov
push
and
fidivrs
lcall
into
movsl
mov
xchg
sub
add
out
inc
mov
dec
int3
xchg
mov
call
out
cli
mov
or
imull
adc
sub
mov
cli
clc
out
xchg
mov
xchg
loopne
mov
mov
or
fsubp
jo
neg
fnstcw
and
div
addr16
xor
jne
and
sub
mov
jne
mov
dec
sbb
js
andb
daa
dec
adc
mov
lods
gs
jns
or
ret
clc
mulb
mov
inc
xor
lea
and
neg
pop
push
push
push
cmp
sarl
cmp
test
adc
enter
add
lods
stc
hlt
cs
sbb
cmc
xchg
jb
and
add
or
test
test
fnstcw
jb
sbb
push
jg
int3
std
test
or
jb
ljmp
js
das
push
addl
and
xor
dec
pushf
dec
inc
adc
out
clc
or
dec
cmp
enter
mov
sub
xchg
xlat
or
imul
fs
arpl
push
pusha
iret
pop
sbb
leave
clc
push
jno
loopne
jo
xor
pop
push
cli
int
xchg
dec
addr16
leave
js
and
add
add
xor
cvtpi2ps
andl
daa
inc
inc
xchg
fistps
addr16
jae
pushf
or
inc
mov
ja
or
je
jg
lock
std
and
jbe
xchg
cmpl
icebp
mov
decl
sbb
xor
jmp
idivb
pop
xchg
adc
fnstsw
aad
aaa
cmp
xchg
pop
push
sbb
rcl
mov
cmp
sub
scas
jp
xor
dec
sub
fimull
outsl
inc
sub
negl
cwtl
ljmp
shlb
xchg
mov
imul
hlt
jbe
clc
xlat
outsl
pop
mov
mov
jle
fdivp
xor
jg
push
push
add
aam
adc
adc
mov
xchg
jle
mov
insl
arpl
lret
xor
sbb
mov
add
push
and
inc
in
pop
or
and
outsb
or
mov
inc
jae
mov
pmulhuw
pop
lret
and
mov
loope
or
lahf
adc
insl
xchg
cmp
call
out
mov
lea
add
jp
subb
fcomp
xor
pop
fs
jb
jecxz
out
sub
mov
std
push
add
pop
push
in
or
xor
clc
pop
jle
sub
pop
jg
push
adc
mov
xchg
xor
stos
sbb
lds
mov
xlat
jp
cmp
or
adc
sbb
mov
push
xor
mov
cs
xorl
enter
adc
fiaddl
lods
sbb
and
push
add
inc
sub
fsubrl
in
cmpsb
lods
sub
jno
cs
scas
call
outsl
shlb
pop
add
mov
pop
or
mov
add
cmp
cmpsl
imul
mov
add
mov
sbb
shl
and
lods
sbb
in
push
or
push
sbb
jo
or
mov
mov
aam
imul
test
jo
hlt
xlat
adc
push
mov
sar
dec
lods
mov
inc
add
jg
test
inc
inc
dec
mov
loop
les
or
int
adc
lods
enter
sar
ds
sahf
push
mov
lea
adc
push
shrl
push
mov
mov
icebp
xor
push
mov
mov
out
jmp
add
rcr
shll
adc
mov
arpl
loop
jo
fdivrs
call
daa
mov
movsb
cmc
or
mov
adc
sbb
jns
addr16
cmp
push
es
xor
repz
xor
gs
roll
xchg
incl
jle
dec
pop
jmp
add
and
mov
sub
imul
mov
decl
jnp
inc
enter
inc
fsts
sbb
call
imul
jle
cmp
ret
pop
push
xchg
dec
mov
mov
adc
out
xchg
sub
push
jmp
out
xchg
jnp
pop
clc
and
sbb
ss
cmp
bound
js
jne
fdivr
cmp
ds
sub
sahf
cmp
sub
out
data16
je
cmp
aad
sbb
lds
xor
mov
std
loop
enter
mov
sub
and
mov
shlb
pop
push
scas
jecxz
int
decl
sti
cld
rorl
loop
push
add
adc
xchg
mov
xchg
nop
push
cwtl
pop
and
out
ja
inc
in
fbstp
ljmp
and
daa
lret
add
xchg
mov
jmp
xchg
lock
jg
fsubs
push
mov
mov
fcomip
sbb
lds
sahf
sub
adc
sub
cmpsl
daa
sub
fimuls
xchg
jl
in
inc
sbbb
sub
sub
fsubl
test
inc
and
iret
inc
repnz
sti
pusha
sbb
push
jbe
mov
fmull
rcrb
add
jnp
aas
or
adc
sbbw
insb
lcall
xorb
inc
xchg
hlt
inc
loop
sbb
cmpsb
inc
cwtl
loope
subb
fwait
push
hlt
mov
or
mov
jp
shlb
lds
in
fstpt
mull
dec
movsl
inc
roll
out
xor
sti
xchg
mov
or
std
sbb
test
jl
clc
sahf
sahf
add
sub
in
outsb
cmp
inc
dec
lea
lret
push
sub
jns
add
dec
or
inc
ljmp
jle
sti
xchg
out
pop
mov
ds
int3
sbb
cmp
xor
pushf
cltd
repz
or
popa
sbb
sub
cmpl
or
orb
mov
or
loope
out
loope
push
add
mov
push
adcb
sbb
lds
das
mov
fstl
xlat
in
out
aad
add
push
mov
into
or
lock
lret
xchg
repnz
bound
mov
or
gs
push
mov
fcoml
push
in
dec
push
and
ss
outsb
js
flds
lods
add
and
ljmp
fs
loope
jbe
jecxz
lret
mov
ljmp
mov
mul
and
stos
lods
hlt
cmpsl
add
pop
mov
call
orl
mov
and
mov
cmc
leave
adc
pop
mov
xchg
loope
subl
push
fcoms
cmp
sub
xchg
andb
fsubr
data16
pop
pop
adc
sub
jno
imulb
push
xchg
xor
lea
push
inc
cmp
push
pop
mov
mov
das
sub
sub
nop
sub
add
dec
fildl
dec
mov
cmp
cmp
mov
subl
int
fbld
test
jbe
xor
fildll
cmp
and
cmp
test
dec
pop
mov
jns
cmpsb
fldz
lcall
xchg
mov
ret
test
mov
std
iret
dec
xchg
jb
clc
sbb
imul
xor
outsb
mov
fimull
mov
pop
inc
outsb
push
aam
in
sbb
add
vpshad
out
lock
dec
mov
outsl
enter
xchg
out
js
sti
rol
sbbl
iret
addr16
mov
cmpsl
nop
loope
xor
xor
subb
mov
dec
xor
scas
cwtl
ror
into
push
das
pushf
sbb
xor
stos
cltd
xor
in
int
aas
inc
movsb
ja
push
sbb
subb
call
insb
mov
pusha
sub
mov
push
sub
aaa
rcrl
and
cli
push
call
mov
xchg
dec
movsl
or
sbb
push
xchg
popa
es
mov
cmp
sbb
mov
cmpsb
sub
adc
sbb
in
pop
inc
shlb
push
and
or
aad
xchg
push
adc
cmc
dec
out
pop
popf
xchg
bound
cwtl
adc
mov
add
imul
hlt
enter
scas
icebp
imul
sbb
pop
and
push
clc
or
aam
stos
xlat
dec
les
xchg
jae
xchg
sbbb
xor
mov
ret
adc
mov
call
sub
sbb
adc
pop
sub
je
add
xor
lret
add
test
cld
add
imul
in
imul
leave
outsl
xchg
shl
and
iret
lcall
dec
dec
pop
mov
xor
cltd
lods
idivb
inc
aaa
sub
fldcw
mov
sbb
mov
push
jge
int
add
cmp
xlat
insl
jecxz
das
repz
xor
xchg
aaa
jae
pop
mov
pushw
aas
aaa
mov
popf
mov
push
les
cltd
outsl
enter
pop
mov
xor
ds
nop
leave
adc
push
add
ror
insl
xchg
fstps
arpl
test
push
cmpps
adc
cltd
mov
pop
xor
popf
mov
push
and
add
pop
dec
xchg
pusha
push
jle
jb
js
dec
iret
xlat
ljmp
inc
sbb
and
hlt
xchg
out
inc
fistl
push
repz
and
push
lods
mov
sbbb
jp
and
pop
xor
lcall
jmp
mov
enter
or
scas
popa
fidivl
int3
add
mov
mov
in
scas
js
dec
jg
pop
fildll
inc
cmp
outsl
es
insb
cmp
xor
sub
and
pushf
jmp
xchg
std
push
pop
stc
shll
sbb
insl
outsl
iret
rcrl
jbe
hlt
mov
js
cmp
rorl
or
sbb
jle
cmp
fimuls
xorl
fsubrp
std
and
xchg
cltd
mov
shlb
and
orb
sbbb
shrl
mov
push
or
push
ljmp
xchg
mov
mov
push
pop
loope
mov
ds
cmp
imul
ljmp
cmp
out
es
push
test
jnp
ret
cmp
lods
mov
dec
movsb
fs
nop
mov
jno
adc
xchg
loop
lods
arpl
insl
lret
push
mov
sbb
test
jb
loope
cmp
mov
mov
hlt
sti
push
scas
pop
cmc
mov
pop
dec
repz
adc
andb
xchg
lea
cmp
xchg
repnz
mov
dec
in
add
fwait
mov
stc
jl
cmp
mov
inc
arpl
mov
jl
scas
fistps
into
jl
shrl
pop
and
sub
xchg
add
outsb
fcmovnb
cwtl
scas
cmpps
test
adcl
jg
lret
insb
pop
lret
mov
jne
into
mov
lea
add
cmp
mov
cmovl
push
adc
cmp
data16
fldl2t
dec
and
imul
mov
xor
xchg
inc
jne
sbb
xchg
inc
push
jb
imul
adc
cmp
cs
call
cmp
and
test
push
jo
les
or
jo
sub
push
movsl
dec
ds
sbb
mov
test
fwait
loopne
lods
aas
mov
ret
pop
stc
and
mov
movsb
lcall
popf
xor
mov
sahf
cmp
das
test
pop
and
jmp
sub
std
pop
mov
push
pop
cld
or
rcr
xlat
mov
mov
xchg
push
mov
mov
mov
mov
xchg
stos
outsb
fstpt
mov
inc
ja
test
loopne
pusha
sub
mov
sub
push
sub
cld
int
faddl
add
fnstenv
jp
in
aad
movl
pop
xor
dec
aas
data16
push
sbb
jnp
imul
insw
data16
push
or
xchg
xchg
dec
call
lock
jno
dec
mov
ret
jmp
in
jp
jbe
sbb
rcrb
scas
pop
push
dec
mov
stc
lods
and
jle
push
xchg
adcl
fadds
sub
mov
or
add
movsb
sti
push
xor
dec
pop
add
imul
sub
pop
mov
adc
and
and
jp
mov
stos
lret
and
mov
out
xchg
bound
xchg
inc
jl
pop
adc
mov
fdivrl
popa
flds
mov
lret
lock
mov
lock
arpl
jmp
jmp
popf
push
fdivrs
ss
xchg
sbb
in
insl
div
loope
scas
xchg
movsl
hlt
enter
push
lods
mov
xchg
cwtl
mov
add
daa
mov
sub
sub
in
push
imul
arpl
bound
cld
mov
or
mov
sub
sub
mov
mov
gs
push
frstor
aad
aaa
or
pop
jecxz
clc
lods
daa
mov
cld
mov
sbb
mov
test
xor
adc
xor
mov
xchg
sbb
push
loope
lods
das
rclb
cli
stos
mov
loopne
out
sarb
inc
mov
je
dec
xchg
jns
adc
dec
test
fsubp
ljmp
movl
jno
pop
shll
fnstcw
adc
xchg
pushf
leave
push
mov
mov
cmc
fisttpll
sbb
movsl
aaa
in
adc
ss
mov
aad
popa
dec
mov
adc
xchg
clc
addr16
pop
or
and
repnz
es
test
jmp
xchg
or
or
cwtl
cmp
rcr
mov
jno
ja
repnz
fsubrs
xchg
daa
in
xchg
push
push
ds
sbb
scas
iret
outsl
jnp
in
gs
dec
xchg
cmp
gs
jge
mov
lds
add
clc
dec
orl
rol
in
and
das
cltd
xchg
das
xor
loopne
fwait
add
and
mov
into
inc
test
leave
mov
insb
or
leave
or
push
enter
jb
cmc
push
jge
sbb
xchg
stos
push
lahf
into
jp
xchg
ss
jg
rolb
and
push
pop
push
push
mov
cmc
in
rcrb
xorl
inc
mov
ss
ljmp
cmp
movsb
xchg
sbb
push
push
movsl
test
inc
gs
mov
xlat
adc
jecxz
inc
ljmp
xchg
inc
jle
lds
aad
push
hlt
sti
fidivrs
nop
rclb
dec
bound
sbb
xor
jg
push
icebp
sub
ja
push
pop
jne
aam
loopne
push
and
rolb
rol
fwait
mov
lea
jmp
pop
and
aam
cltd
fs
rcrl
and
mov
sub
sub
push
loopne
cmp
std
mov
sbb
add
jo
ret
pop
or
sub
add
outsl
mov
cld
call
mov
inc
cmpsl
icebp
insl
ja
adc
mov
mov
sbb
lahf
adc
inc
pop
add
sahf
mov
ja
ret
fmulp
call
inc
lods
pushf
in
loopne
btr
jbe
adc
dec
cwtl
outsl
lds
addr16
cltd
outsl
scas
movsl
or
icebp
or
daa
inc
stos
std
sub
dec
adc
mov
pop
call
adc
cmp
sbb
lret
or
pop
aad
pop
xchg
pop
jne
or
jmp
outsb
repz
sbb
mov
scas
idiv
icebp
mov
adc
jg
mov
subb
cmp
cs
mov
ss
sub
js
cmpsl
add
jge
and
push
jmp
mov
push
push
cmpsl
rcrl
hlt
insb
icebp
daa
add
pop
rclb
cmovne
test
leave
lods
inc
pop
out
xor
test
xchg
lods
xor
ljmp
xlat
aam
lcall
cmp
mov
pop
aam
pushf
mov
and
xor
mov
mov
pop
sbb
fildll
lods
aaa
mov
gs
adc
hlt
mov
shrl
push
cmp
jg
fdivs
mov
dec
insl
add
dec
push
xlat
shll
sub
ret
int
adc
adc
fstpl
sahf
rorb
mull
or
mov
ucomiss
gs
sbb
push
xchg
cmc
clc
cwtl
icebp
imul
mov
jno
stos
ret
stos
cwtl
jge
pop
insl
sub
cmp
aam
aad
mov
sub
xchg
inc
push
xchg
and
jp
jnp
call
adc
push
imul
xor
sbb
nop
adc
subl
test
scas
scas
xchg
lcall
int
pop
idivb
xchg
cmc
inc
jmp
in
push
fs
add
jle
sub
testb
imul
sbb
stos
dec
flds
jo
dec
push
bound
pop
xchg
push
cmp
sbb
cmp
lret
imul
adc
out
aam
dec
cmp
cmp
in
sahf
add
pop
out
fs
rcrb
mov
sub
inc
xchg
popa
out
fnstsw
sbb
enter
into
adc
mov
repz
loopne
sbb
pop
arpl
or
dec
inc
xchg
mov
stos
repz
pop
cmp
mov
push
mov
ficoms
aaa
stc
sub
popl
mov
dec
push
cli
and
fsubl
nop
and
inc
adc
mov
mov
xlat
js
shrl
jno
outsl
mov
adc
adc
in
dec
ja
cmp
mov
or
mov
adc
push
cs
sub
int3
int
cmpsl
sar
sbb
rcll
push
sahf
cmp
popf
add
push
sub
and
and
in
sti
push
cli
push
xchg
jge
mov
rolb
cmp
jl
pop
test
js
sub
sub
or
js
icebp
sub
add
xchg
jp
xchg
dec
push
push
into
add
cmp
lret
cmp
fildl
imul
xchg
mov
fidivl
leave
pusha
jnp
mov
xor
push
sbb
push
jae
cmp
shlb
xchg
pop
xchg
neg
popf
aam
imul
sbb
cmc
fnstenv
dec
sbb
xor
test
cmp
lea
stos
mov
mov
loopne
add
inc
out
cmp
mov
dec
add
xchg
rorl
fdivl
xchg
jae
in
push
inc
add
xchg
mov
loopne
sar
or
inc
mov
xchg
cld
arpl
je
cld
mov
loopne
loopne
or
mov
xor
stos
or
lcall
cmp
add
hlt
dec
and
mov
cmp
add
fidivrl
xchg
in
std
jmp
aas
arpl
mov
lcall
out
fwait
mov
sub
sbb
int
jae
popl
pusha
jae
or
fmul
or
lea
dec
push
lods
std
imul
lods
in
inc
les
inc
mov
das
pop
or
mov
addr16
clc
out
mov
popl
add
pusha
lods
adc
mov
loopne
filds
and
popf
cmc
call
call
pop
adc
push
ret
jmp
rcrl
mov
sbbb
mov
ss
push
add
mov
cmp
inc
mov
mov
das
sti
clc
es
pop
jno
sbb
int3
jmp
adc
mov
ret
jbe
in
enter
cmc
push
jmp
ds
mov
push
adc
push
loopne
jp
lds
aam
test
push
or
mov
dec
fnsave
push
loop
mov
ss
fimull
jmp
push
dec
rep
cmp
push
insl
fdivrs
or
sbb
pop
scas
leave
repz
xlat
add
dec
mov
les
sbb
xor
jl
xchg
mov
mov
shlb
lds
mov
mov
fucom
cmp
pushf
jno
test
dec
mov
push
jle
adc
sub
lods
lahf
add
xor
int3
arpl
leave
adc
adc
cltd
cmp
cmovs
mov
inc
pop
jo
pop
mov
cmpsl
adc
jnp
rolb
jns
dec
popa
pop
jecxz
jb
ljmp
push
mov
add
push
pop
inc
sar
sti
xchg
mov
pop
mov
sbb
mov
adc
mov
mov
cmp
outsb
es
icebp
dec
inc
daa
sbb
mov
gs
nop
fwait
mov
sub
push
cmp
call
das
adc
stc
sub
insb
jmp
mov
mov
xchg
das
cmp
das
mov
lods
das
add
insb
stc
cmp
mov
das
inc
jmp
mov
pushl
jmp
push
int3
and
cmp
sub
adc
dec
lret
test
xor
imul
shrl
leave
call
ds
movsl
push
test
pop
push
dec
push
cmc
out
or
push
lret
aad
ss
mov
lahf
cmp
jp
jo
sti
sbb
jb
cmp
ficoms
aam
push
xor
cli
mov
pop
fisubl
cmc
mov
stc
inc
imulb
inc
inc
adc
and
decl
cmp
andb
aas
mov
ljmp
jnp
rcrb
popa
loop
jbe
mov
dec
dec
push
je
push
mov
xor
mov
pop
mov
das
xchg
xor
push
lock
pop
fisubrs
cmp
insb
lods
and
push
aaa
mov
aaa
adc
pop
adc
inc
and
pop
add
cmpsl
les
xchg
xor
inc
out
xchg
inc
inc
cmp
into
and
add
rcr
imul
dec
sti
bnd
sbb
add
xchg
icebp
or
cmp
cwtl
mov
push
sbb
mov
je
out
bound
xchg
xor
popa
outsb
notb
rorb
mov
mov
test
push
shlb
mov
addr16
dec
pop
add
pop
adc
jle
test
jg
pmuludq
xor
sbb
pop
pop
jno
je
dec
dec
sub
push
mov
xchg
bound
xor
loope
or
pop
lds
test
push
and
push
jns
lahf
adc
sub
pop
shll
mov
mov
ja
enter
std
fimuls
int
gs
mov
adc
sub
push
pusha
push
pop
inc
cmpsl
or
xor
dec
ss
add
fmull
push
stos
dec
cmpsl
addl
js
jg
mov
std
mov
or
loopne
sub
add
pushf
leave
xchg
push
repz
dec
push
aad
cmp
xchg
or
and
cmc
lods
lcall
lret
and
inc
dec
and
nop
mov
mov
xchg
mov
pop
roll
mov
cmp
sbb
jne
inc
fstps
fs
sbb
sub
sbb
lock
jne
cld
ret
sbb
inc
aaa
add
xchg
xorb
fsubrl
dec
mov
decl
lret
sbb
xchg
pop
imul
pop
cmp
sbb
addl
mov
cmpsl
shl
sub
and
ud1
adc
mov
fisubrl
xor
pop
addr16
push
adc
dec
std
push
enter
rcrb
push
or
cwtl
nop
loopne
xchg
xchg
pop
das
std
pop
cmp
inc
pop
loope
mov
test
test
and
jne
pop
add
fbld
dec
in
repnz
lahf
loop
jnp
cmpsl
adc
mov
fidivs
jb
int
into
lahf
test
std
packssdw
cmp
outsb
mov
jmp
jno
lea
mov
rcrb
in
or
mov
mov
push
mov
cmp
pop
mov
cmc
xchg
jg
inc
imul
out
pop
int3
fwait
test
push
mov
scas
add
outsb
add
nop
mov
daa
jmp
jmp
lds
ret
or
mov
mov
push
test
aam
push
sbb
xchg
bound
call
rorl
mov
and
xchg
addr16
xchg
jno
xor
out
pop
mov
in
or
insb
pop
lcall
sub
xchg
movsl
loope
clc
lahf
imul
loopne
sub
xor
imul
cmp
push
ss
jle
add
fdivl
je
out
xor
in
cld
dec
cmp
mov
xchg
test
sbbl
arpl
xchg
int3
in
sub
sysret
aad
jl
mov
pop
jle
out
inc
adc
arpl
dec
mov
ja
int
jl
insb
shlb
pusha
jl
inc
xchg
push
mov
inc
es
push
stc
xchg
mov
mov
mov
cmpsl
imul
cmpsl
sub
mov
aam
mov
scas
popl
fdivl
cmp
fs
adc
andb
adc
push
mov
mov
rcr
pop
aas
pop
test
test
xchg
sar
mov
std
rcll
cmpsl
jecxz
xlat
loopne
dec
gs
or
jle
das
jno
leave
jg
fiadds
xchg
fndisi(8087
negl
jmp
mov
pop
ror
mov
or
out
sbb
jb
jbe
cmp
or
push
xchg
push
std
jmp
out
inc
and
jne
movsb
add
xchg
sub
xor
adc
push
mov
sbb
les
push
xchg
inc
stos
lret
mov
sbb
inc
ja
xchg
ret
jecxz
xor
and
push
test
lds
xchg
dec
adc
jg
sbb
icebp
xor
xchg
xchg
fsubrs
cmpsb
xor
loope
adc
repnz
out
inc
fbstp
cmpsl
xchg
inc
leave
loope
mov
mov
xchg
je
out
ret
imulb
xchg
lods
lret
xor
jo
out
clc
adc
xor
jmp
mov
cmp
lea
mov
sub
push
cs
fsts
pop
cld
pushf
sbb
dec
sti
sub
inc
jo
push
push
or
inc
sti
mov
or
and
pop
enter
mov
imul
jno
lea
xchg
xor
leave
or
sub
mov
sti
or
inc
sbb
pop
aaa
push
out
das
mov
cmp
jno
lds
aad
dec
mov
mov
adc
cld
sub
push
and
sub
sub
lahf
mov
cltd
and
fbld
clc
jnp
clc
lods
push
imull
inc
pop
out
mov
sarb
adc
sbb
roll
mov
fcmovbe
rclb
jnp
pusha
or
pop
std
hlt
sbb
xchg
cmpsb
gs
jmp
jbe
lretw
stc
incb
mov
in
rcrl
out
lret
into
cmp
loop
pop
rorl
push
iret
in
sub
inc
ljmp
inc
dec
push
mov
pop
out
repz
sbb
in
cmp
pop
add
int
mov
mov
mov
dec
mov
cmp
les
fisttps
aad
push
mov
cmp
les
jo
sub
jecxz
xor
inc
xchg
pusha
pop
jo
add
dec
jle
aam
sub
enter
mov
ds
pop
cmc
xor
adc
pop
pop
jo
push
xor
repz
int3
pop
bound
out
test
hlt
call
mov
jns
lcall
mov
dec
out
movl
sbb
or
and
and
subb
mov
das
push
xchg
mul
incl
scas
jle
sub
int3
rclb
and
or
mov
jb
jbe
adc
dec
push
psubq
mov
repz
xor
xlat
inc
lret
sub
jmp
imul
roll
scas
popa
ljmp
mov
mov
out
es
sub
test
inc
mov
sbb
push
rolb
ja
in
dec
leave
jl
sub
and
pushf
ror
out
and
outsl
pop
and
mov
fldenv
popa
xchg
pop
mov
gs
repnz
cmp
pop
mov
ret
sahf
mov
clc
lods
test
mov
xchg
aam
mov
or
inc
ror
or
cmpsb
mov
mov
test
mov
xlat
loop
push
sbb
repnz
pop
lds
mov
pop
push
bound
mov
mov
jbe
push
add
insb
jl
rorl
push
cwtl
or
cmp
jne
adc
shrl
sub
sub
imul
add
xlat
xchg
sahf
fnsave
or
cmp
sahf
mov
movsb
and
inc
and
loope
push
xchg
addr16
shll
imulb
or
rcrl
test
test
mov
add
mov
adc
push
jl
js
push
lcall
or
dec
jl
decb
lcall
repnz
sub
out
icebp
sub
push
out
decb
mov
faddl
mov
sub
or
fnsave
mov
ds
aas
push
insl
mov
mov
movsb
add
loopne
mov
fs
and
sbb
cmc
sub
in
mov
jb
xchg
mov
dec
cmp
hlt
je
lcall
and
ret
adc
enter
mov
mov
pop
xchg
fwait
cvtps2pi
out
cmp
lods
push
mov
cld
fistpl
adc
popf
xchg
mov
xor
ja
dec
xchg
sub
or
push
jmp
gs
mov
mov
fstp
movsl
addr16
or
lea
inc
cmp
out
rcl
pop
lds
push
xchg
push
sub
rclb
sub
add
or
inc
sbb
loope
lods
mov
xchg
dec
ret
into
pusha
in
test
sahf
scas
jno
xchg
sub
or
sub
xchg
cmp
pop
dec
sbb
jns
adc
fcmove
outsb
xor
dec
cwtl
lock
inc
cld
lods
mov
or
cmp
fs
stc
mov
push
loope
xchg
cld
loope
lret
hlt
pop
jl
adc
sahf
loop
scas
xchg
sbb
andl
mov
dec
fstpt
add
push
pop
sbb
dec
jbe,pt
mov
in
setnp
and
push
idiv
xor
jl
cmp
push
add
ljmp
or
cmp
push
mov
daa
fucomip
mov
mov
xchg
pop
push
iret
insb
fwait
stos
inc
adc
push
dec
xor
mov
fmull
sub
inc
lds
jbe
out
call
lcall
xchg
push
repz
out
xlat
inc
adcb
ds
xchg
lret
arpl
dec
test
sbb
data16
int3
mov
push
shlb
and
sub
mov
jmp
jge
rol
add
pop
fdivp
push
mov
pop
pop
add
or
jp
lods
ljmp
popa
mov
aas
shlb
icebp
movsl
xchg
xchg
pop
xor
fnstcw
push
cli
push
lods
xorb
fisttps
fists
xchg
sub
fistpll
inc
xor
mov
adc
aaa
fnstcw
adc
xor
mov
adc
cmp
mov
fs
or
inc
lds
out
in
mov
loop
fadds
test
jo
xchg
jb
add
xor
in
sub
rcr
aaa
addr16
gs
hlt
imull
loop
std
xlat
mov
lds
roll
lahf
shrb
aaa
sbb
rorb
out
cmpb
push
jg
int3
mov
mov
lahf
data16
and
and
push
lock
shlb
push
add
pop
or
cmp
shll
addl
into
mov
dec
in
cli
pushf
adc
lea
fistpl
rolb
repz
pop
cmp
pushf
jo
scas
enter
add
mov
or
je
mov
inc
cmp
ja
mov
lret
call
mov
cmp
ficoml
loopne
stos
or
pop
lods
in
int3
sbb
sti
js
jmp
push
fcmovne
xor
jbe
and
pop
das
popa
mov
pop
push
arpl
push
adc
cmp
iret
cmovno
addr16
push
fildll
xchg
xchg
rclb
ret
xor
scas
inc
pop
push
jo,pn
shrb
mov
add
enter
pop
xor
pop
push
cmp
add
mov
cs
xchg
and
test
leave
shlb
fstps
es
out
iret
data16
or
sub
es
xchg
imul
out
adc
mov
jp
pop
xor
add
fdiv
aad
loope
cmp
mov
int3
in
ja
movsb
cmp
lock
mov
xor
jns
filds
xchg
xchg
and
pop
mov
scas
or
bound
das
shll
mov
adc
xor
and
jno
icebp
xchg
mov
loopne
jns
lcall
outsl
outsl
inc
es
xor
sub
mov
inc
callw
cmp
push
dec
aas
or
jae
push
mov
push
xlat
sahf
stos
les
mov
cmp
or
lds
in
subb
fsubs
jge
cltd
sbb
adc
in
repz
aad
insl
ret
pusha
out
pusha
and
or
testl
out
inc
loopne
test
adc
js
scas
xlat
inc
fistl
jecxz
cmc
xchg
arpl
mov
inc
inc
push
rolb
cmpsl
xor
daa
imul
dec
daa
data16
adc
addl
hlt
sub
lret
mov
push
cltd
ja
push
gs
fistpl
or
orl
rcrl
xchg
sbb
adcl
sahf
pusha
jno
inc
cmc
jle
rorl
popf
sub
sbb
push
cmpsl
xor
jbe
leave
adc
out
inc
lock
mov
push
cmp
loope
sub
lods
inc
pushf
cmpsl
ror
std
loope
imul
xchg
sub
pushl
lcall
movsl
push
arpl
cs
xchg
xor
sub
hlt
cmpsl
mov
dec
inc
ljmp
xchg
in
mov
jo
adc
sarb
data16
scas
loopne
or
cmp
xorb
mov
push
adc
or
movsb
push
ds
adc
add
sub
xchg
shrl
call
push
dec
into
mov
cmp
dec
cmp
push
push
pop
nop
jae
inc
sbb
dec
sub
mov
and
xchg
imul
mov
mov
and
arpl
pushf
in
shlb
fimull
scas
jno
dec
aad
test
out
jmp
rclb
lods
mov
mov
xchg
cltd
pop
sub
fimuls
mov
lcall
adc
stc
fcoms
out
xor
lock
scas
cltd
push
sti
jmp
push
aad
mov
mul
pop
inc
ss
cwtl
test
mov
and
xchg
rcrl
fs
sub
adc
or
int
xchg
inc
cmp
mov
sub
cmp
jecxz
aam
pop
and
cmpsb
in
stos
jp
mov
push
les
add
leave
xor
push
and
in
adc
popfw
sahf
dec
ja
int
xchg
add
jne
sub
jg
dec
fs
out
stc
movsb
pop
adc
jecxz
mov
mov
lahf
sbb
xchg
xchg
in
inc
xchg
idivl
xchg
mov
rcrl
fmul
mov
repz
loop
sub
aas
sbb
and
lock
push
arpl
push
orb
daa
dec
dec
ret
fimull
mov
inc
std
outsb
out
jmp
lahf
fsubrs
jnp
push
std
cwtl
sub
cli
insl
sti
push
pop
out
nop
sub
sub
rorl
push
arpl
mov
aad
je
scas
sbb
stc
push
mov
nop
adc
jne
data16
cmp
mov
and
mov
les
sbb
xor
push
hlt
or
dec
or
movsl
dec
fadds
les
cmp
cmc
mov
fmulp
aam
or
xor
hlt
sub
cmpb
xlat
dec
in
cmovle
mov
mull
movsb
movsb
addr16
xchg
popa
call
pop
xor
xchg
pushf
in
sbb
scas
jmp
mov
dec
jb
sbb
ljmp
clc
or
rolb
adc
paddq
mov
jmp
fwait
call
rolb
sub
ja
pushf
sbb
sub
popa
and
mov
mov
fs
mov
inc
jnp
lea
rclb
sub
loope
xchg
clc
push
cld
or
adcb
mov
out
ffree
mov
xor
and
fxch
xchg
lret
xor
pop
test
sub
insb
mov
fimull
jp
add
inc
cmp
or
xor
mov
iret
push
arpl
imul
jae
repnz
cltd
movsl
cli
test
inc
push
scas
jp
cld
out
sub
in
std
std
and
in
cld
push
sub
in
std
clc
and
in
cld
push
sti
out
in
inc
div
lret
xchg
jbe
xchg
mov
sbb
push
push
loop
xor
and
cmpsb
arpl
add
pop
push
lds
repz
fidivl
xor
int3
leave
shlb
xor
lock
xchg
jns
ficomps
stc
xchg
push
fdivp
filds
scas
hlt
iret
push
or
lahf
in
add
push
lods
pop
xor
pusha
int
pop
add
loopne
xor
fistps
subb
dec
lds
ja
pop
cmpsb
enter
adc
jg
add
iret
icebp
mov
mov
pusha
cmpb
cltd
lcall
mov
std
cmp
xchg
push
push
cld
mov
popa
adc
lods
jb
fdivs
scas
mov
call
mov
mov
inc
dec
nop
cmp
cwtl
jge
fadd
jbe
rcrl
mov
pop
out
outsb
mov
jo
insl
xchg
jns
pop
or
fsubrs
ret
sub
and
inc
addr16
lods
xlat
dec
mov
inc
pop
push
test
fbstp
call
roll
mov
adc
sub
int3
lahf
inc
dec
cmp
scas
sbb
push
cltd
cmp
add
inc
test
sbb
mov
fdivp
fsub
mov
or
or
aas
cmp
mov
pop
fisubrl
inc
xor
out
je
subl
lods
mov
aaa
das
dec
cmp
aam
push
aam
fistpll
enter
pusha
loopne
imul
push
aas
sub
lods
inc
into
and
jecxz
mov
pop
jl
mov
call
pop
mov
jp
pop
test
lods
repz
inc
adc
jo
aam
or
push
ljmp
out
mov
int
stc
mov
mov
mov
adc
imul
xchg
adc
repz
push
cmp
movsl
stos
mov
or
cmp
adc
adc
push
fs
xchg
cmc
or
or
lahf
push
fisubs
cwtl
outsb
adc
bound
in
mull
das
fisubrl
xor
jnp
inc
jns
mov
mov
imul
sub
xchg
out
mov
push
lea
cmp
cld
mov
pop
xlat
jbe
mov
adc
jg
xchg
jge
js
es
adc
jg
xchg
dec
pop
sbb
add
xlat
pop
jg
xchg
pop
pop
vmread
std
xlat
fs
inc
push
mov
and
cli
mov
pop
push
pop
xchg
gs
mov
xor
mov
or
pop
mov
int3
jo
ficoml
call
pop
and
mov
or
push
cmc
bound
xchg
xlat
mov
unpckhps
push
outsl
jo
dec
push
popf
sbb
mov
movsb
imul
jl
into
fcompl
movsl
mull
pusha
push
aam
insl
shl
lods
fldt
addr16
sub
or
inc
fildl
mov
mov
outsb
lret
test
add
lahf
sbb
adc
int
push
fstpl
jl
jge
sub
or
mov
out
cmp
pop
cli
movsl
les
jl
cmp
loop
mov
cld
sbb
outsl
inc
in
xchg
cmp
je
out
repnz
cld
lds
inc
push
lods
std
adc
int
sahf
sbb
int3
mov
loopne
xchg
xor
sbb
push
xor
add
and
int
ret
jmp
add
popa
ja
xchg
mov
rorb
adc
cmp
inc
ss
jbe
fcoml
int
mov
rorl
jl
add
mov
jl
int
xchg
clc
lds
or
xchg
mov
lea
adc
test
int3
push
mov
aad
sbb
mov
icebp
pushf
cmp
into
mov
movlps
xor
cwtl
in
push
je
cwtl
or
pushf
ret
mov
adc
popa
cmc
fs
negl
in
mov
fisttps
outsl
cwtl
outsl
mov
test
lock
aaa
std
notl
sbbb
push
sbb
ss
paddd
sub
cs
mov
mov
inc
scas
cmp
cmp
inc
jge
push
lds
pop
and
popf
adc
pop
test
and
sub
mov
adc
mov
inc
dec
out
mov
scas
lods
pop
push
cld
lret
adc
mov
jo
add
jno
dec
sarl
pop
xchg
or
mov
inc
or
add
in
dec
xchg
imul
and
xor
push
dec
ss
or
lea
pop
aaa
das
push
dec
fistl
cmp
or
push
lcall
cli
sub
dec
xor
enter
pop
sub
loop
fistps
loope
mov
lret
ret
pop
add
push
adc
rclb
push
xor
test
cmc
sahf
jb
call
dec
pusha
clc
movsb
push
or
lret
out
mov
fidivs
in
test
orb
imul
arpl
inc
in
push
enter
xchg
inc
pop
fcmovb
daa
cmp
cmpsb
or
pop
mov
xor
mov
sub
cmp
mov
cmp
lock
gs
dec
cmpsl
popa
xchg
and
inc
xor
xchg
sub
aad
movsl
jecxz
push
adc
push
cmpsl
cli
inc
subl
mov
pop
xor
xor
imul
sbbb
push
sub
fldcw
push
xor
clc
pusha
pop
adc
stos
lahf
subb
mov
adc
aaa
fildll
ss
push
ret
sbb
outsl
jecxz
dec
xchg
in
adc
orl
popf
ja
out
out
ret
jp
mov
push
movsb
or
aas
and
dec
es
push
adc
adcb
push
fwait
xchg
dec
in
cmp
aam
repz
repz
stos
pushf
jmp
es
cmc
pop
push
push
push
nop
psubd
fisttpll
push
aad
lock
jae
cmc
mov
or
mov
push
mov
hlt
dec
push
mov
xchg
outsl
into
inc
sub
out
arpl
ds
aad
ret
cmpl
or
fdivr
imul
pop
cmpb
das
xor
jae
pop
inc
rclb
gs
lods
mov
pusha
ja
add
mov
cs
jp
enter
or
outsb
lea
push
and
mov
dec
mov
sbb
adc
js
mov
mov
loope
or
mov
mov
loope
cli
or
mov
fdivrp
andl
popa
xchg
push
jb
cmp
aad
mov
cltd
add
or
daa
fnstenv
dec
dec
addr16
pop
jmp
sbb
mov
fdivl
xchg
pusha
or
int
jecxz
mov
jecxz
fdivrp
popf
ds
sbb
dec
sbb
jo
xchg
and
inc
lret
and
ja
inc
jecxz
pop
pop
cmc
pop
lds
or
sarb
insb
mov
push
cli
aas
lds
xor
cltd
mov
mov
sbb
pavgb
mov
in
mov
loopnew
in
and
sbb
fimull
lahf
aam
mov
xor
jl
xchg
adc
ss
adc
rcll
cmp
popa
inc
adc
fildll
faddl
xor
inc
mov
hlt
fwait
mov
iret
push
jmp
inc
or
inc
fbld
je
xchg
into
xor
mov
inc
das
mov
adc
aad
adc
dec
or
jle
inc
notl
divb
es
adc
push
jge
shrb
in
add
xchg
stc
xchg
jmp
aas
mov
repnz
inc
shl
popf
cmp
popa
xor
leave
jns
scas
pusha
push
mov
sbb
mov
jge,pt
out
mov
jno
nop
xor
cli
jnp
sbb
sub
icebp
hlt
inc
mov
ret
pushf
pop
divl
out
shlb
cmp
cmp
push
mov
or
enter
and
jmp
xchg
movsl
sbb
dec
jl
sarl
cmp
xor
test
call
outsb
ds
das
pop
mov
enter
sub
xchg
hlt
es
inc
xlat
or
loop
and
pop
es
jecxz
loop
testb
pop
pop
notb
std
or
jle
mov
cmp
imul
gs
mov
lock
fcoms
lret
inc
aaa
xor
std
fcmove
outsl
in
nop
xlat
adc
xchg
cmp
jae
ds
adc
jge
dec
in
imul
iret
ret
nop
push
adcb
data16
in
daa
mov
repz
sbb
andl
gs
js
inc
outsb
scas
cmp
and
mov
lea
ret
out
xor
int
mov
popa
jl
lret
mov
or
sbb
dec
mov
mov
xacquire
push
push
sub
lcall
bswap
xchg
outsb
and
cmpl
pop
leave
pop
pop
enter
pop
add
add
sub
popl
loopne
mov
inc
push
jecxz
addb
jg
in
outsl
mov
jbe
mov
ds
movsl
mov
cmpl
aad
loopne
add
jae
pusha
pop
int
xchg
jecxz
sti
add
test
push
out
xor
test
xlat
js
lcall
jne
push
pop
fcompl
stc
mov
add
cltd
out
sar
insb
pop
mov
jg
in
lahf
or
jns
pop
pusha
xchg
cmc
inc
sahf
cmp
pop
sub
xchg
mov
lods
mov
adc
fwait
cmc
and
fisttps
mov
xor
mov
in
dec
outsl
and
stc
jne
or
push
pusha
out
xor
mov
cmp
outsl
shrb
int3
subl
cmp
dec
cmp
loop
mov
loope
pop
mov
jae
jnp
iret
scas
loopne
push
outsb
hlt
push
scas
or
insl
lret
leave
in
lods
repnz
jno
adc
pop
dec
jae
pop
sub
js
cmp
jmp
rorb
fs
gs
sbb
and
or
mov
or
pop
ja
sbb
xor
inc
into
or
mov
ds
into
insb
ja
xchg
negb
popf
mov
icebp
xchg
pushf
imul
xchg
aam
je
xchg
in
fildl
fdivr
dec
xchg
fildll
aam
cmp
les
gs
mov
mov
push
sub
push
sub
jg
in
adc
jmp
dec
jo
jb
dec
lea
and
dec
enter
inc
lea
sbb
aad
jge
lea
sbb
dec
repnz
jge
pop
mov
lret
lds
cwtl
dec
repz
jnp
adc
push
pop
xor
mov
mov
lcall
lods
rcl
jno
rcrl
out
push
add
and
mov
push
jle
push
sbb
push
imulb
cmc
inc
in
adc
cmpl
shrb
jnp
sti
add
dec
dec
ss
mov
xchg
lea
cmp
pop
sbb
lcall
xchg
and
xor
aam
leave
dec
aam
xchg
cs
addr16
mov
sub
popf
lea
mov
pop
arpl
lahf
add
jbe
dec
sub
mov
sbb
stos
bound
ret
mov
cmpsb
add
pop
xor
aam
inc
mov
sbb
jl
bound
cmpsl
mov
ja
nop
and
negl
pop
fcmovnu
adc
test
push
inc
cmpsl
ud2
lret
add
stos
out
mov
push
mov
mov
dec
addb
icebp
repz
push
fmuls
icebp
xor
mov
mov
sbb
pop
mov
mov
sub
dec
jecxz
ss
mov
or
out
jbe
mov
fwait
cmp
dec
cmpsl
pop
jmp
xlat
push
ja
adc
in
sti
inc
in
repnz
xchg
lcall
sub
jp
xchg
mov
mov
mov
inc
and
int
mulb
xchg
push
scas
pop
rorl
fs
inc
add
data16
loope
outsb
dec
inc
dec
insl
cmpsb
int
cltd
sbb
add
insl
mov
loopne
mov
in
fsubrp
pop
pop
dec
in
cmp
jg
outsl
add
nop
adc
mov
cmp
or
jnp
lds
fcmovbe
aaa
dec
jecxz
ljmp
bound
arpl
sub
mov
loopne
and
push
xchg
fsubrs
mov
sub
out
lods
movsl
xor
push
lcall
and
adc
jle
push
jg
mov
rcl
cli
jo
testb
push
mov
sbb
loop
xchg
stc
or
ss
jp
pop
inc
xor
into
lret
je
pop
inc
push
stos
adc
call
jle
sti
dec
mov
jge
test
decl
shll
orl
dec
xor
addr16
popl
dec
shll
pop
adcl
xor
or
pop
add
mov
fiadds
dec
xchg
lods
adc
rclb
out
adc
mov
cmpsb
mov
jge
xchg
inc
push
lret
sbbl
inc
xor
outsb
rorb
sahf
adc
dec
xor
jp
out
mov
jae
mov
incb
les
stc
test
sbb
roll
pop
add
in
cltd
es
inc
incb
sbb
xlat
xchg
dec
movsb
rol
xchg
repz
fldt
add
or
mov
or
test
xchg
push
scas
jg
pop
insb
cmp
ficomps
mov
jae
outsb
mov
push
es
dec
jns
cmp
out
decb
and
rcr
dec
jmp
std
jg
loop
push
or
xor
push
shrl
ret
lret
das
and
or
add
dec
inc
pop
pusha
dec
mov
mov
icebp
push
mov
adc
js
lock
mov
int
lods
mov
lcall
or
add
aad
into
out
xchg
aas
adc
jmp
push
xchg
stos
jmp
cmp
leave
lock
xchg
enter
ljmp
js
je
ss
cmp
call
insl
shll
repz
xchg
jmp
pop
sti
sbb
js
mov
xor
roll
inc
dec
adc
adc
sahf
cmp
fisubl
fiaddl
in
or
gs
mov
loop
jp
inc
dec
outsl
out
fbstp
aaa
xor
or
scas
xchg
insb
cwtl
and
xor
cmp
xchg
lcall
xorl
out
fisttpll
loop
or
xchg
inc
xor
lds
xchg
lods
idivb
pop
das
pop
bound
xor
int3
cs
lea
push
cltd
ljmp
lret
sbb
push
insb
fisubl
notb
shll
xor
lds
push
mov
adc
inc
scas
in
lret
icebp
mov
inc
xor
fwait
sahf
shrl
jp
mov
sahf
inc
pop
leave
inc
dec
lret
or
sbb
fistl
xchg
mov
sbb
dec
xor
imulb
mov
je
inc
xor
mov
and
and
pusha
loopne
lock
loope
pop
mov
fwait
and
rol
and
pop
add
daa
cmp
ds
pop
cld
cmp
push
sbb
inc
mov
out
sahf
fidivrl
add
mov
mov
lea
mov
dec
push
push
ret
imul
sbb
mov
pop
stos
push
and
mov
xchg
repz
or
inc
cmp
sti
out
or
mov
shlb
jg
and
xchg
push
push
mov
jg
cmp
fcoms
pop
and
addr16
xor
cli
orl
sti
ss
pop
jecxz
lret
push
lcall
xchg
addr16
lock
mov
mov
lock
push
pop
fmuls
jbe
call
sub
add
and
mov
cwtl
in
dec
jmp
jne
ss
mov
std
adc
popl
xor
push
pop
jl
cmp
adc
dec
pop
push
mov
jl
sarb
jne
data16
push
and
inc
out
jno
cmp
movsb
and
xchg
outsl
and
imul
xchg
mov
push
sub
addr16
mov
shl
dec
mov
jne
inc
xor
gs
out
lock
icebp
mov
and
std
ret
sub
add
cmp
inc
mov
pop
cld
ds
cli
jecxz
out
fnstenv
mov
test
pusha
out
adc
dec
and
jl
sub
js
div
inc
shll
pop
loope
ret
mov
mov
sub
and
push
aad
sarb
repnz
or
rol
add
add
std
mov
lods
es
or
addr16
adc
int
jp
mov
or
test
xor
ljmp
adc
movsl
add
jl
fs
xor
les
sub
mov
sbb
mov
ficoms
add
rol
int
hlt
shll
mov
adcl
loop
mov
inc
mov
sbb
mov
dec
jl
ljmp
jg
shrl
push
cmpsl
loopne
cmpsb
scas
repz
out
hlt
xrelease
rcll
dec
insl
cli
testb
out
xchg
pop
imulb
mov
stc
cmpsl
push
dec
xor
mov
inc
adc
adc
repnz
ret
push
shl
ja
roll
sub
enter
js
adc
lods
rorb
dec
xchg
dec
xchg
addr16
aam
mov
mov
sbb
rorb
xchg
in
lods
mov
movsb
inc
repnz
jnp
push
or
outsl
push
in
in
dec
div
jge
stos
jne
test
cmp
in
call
popf
inc
or
sarl
loop
cmpsl
cltd
cmp
sub
paddsw
repnz
or
cld
scas
sub
xchg
mov
xor
cld
or
cmpsb
in
cli
mov
cmp
je
add
loopne
sbb
cmpsb
jle
inc
inc
push
add
es
sub
push
jns
femms
xor
lret
mov
outsw
test
jnp
pop
test
ljmp
out
dec
mov
and
jmp
lea
cmp
adc
sbb
jbe
ljmp
add
mov
int3
out
iret
rcll
cmp
add
daa
pop
sbb
xorl
mov
mov
pop
mov
mov
jmp
jmp
mov
insl
and
dec
cmp
imul
repz
rcl
jnp
cwtl
pop
dec
dec
jecxz
shlb
test
repnz
popa
dec
push
mov
xchg
jnp
ja
scas
mov
push
add
sub
xchg
and
ljmp
aas
sub
push
aam
cs
scas
popf
stos
addr16
cmp
xchg
inc
or
nop
lcall
jmp
push
cmp
xor
xor
jle
sub
adc
rolb
cld
xchg
adc
add
in
test
lea
jecxz
js
mov
adc
pop
push
cmc
repz
mov
aam
xchg
insl
iret
jae
and
mov
aam
inc
lret
js
inc
jo
pusha
xchg
shll
jo
dec
hlt
stc
jg
aam
hlt
jno
jo
sub
fidivrs
call
pusha
cs
pop
mov
inc
sub
idivl
xor
fwait
jne
or
pop
leave
pop
sub
mov
cmp
jge
jne
sar
xchg
pop
jb
in
jp
sub
sbb
test
mov
addr16
xchg
in
fwait
adc
dec
pop
add
loopne
enter
adc
jp
add
daa
in
add
or
adc
mov
scas
incl
call
loop
push
ss
and
test
popf
sub
leave
je
das
arpl
shr
lods
and
add
in
in
lret
movsl
sahf
or
push
mov
push
add
dec
stos
dec
xchg
js
sbb
jmp
or
mov
pop
daa
sqrtps
sub
pop
jmp
div
test
shlb
aas
imul
test
inc
arpl
in
push
bound
dec
insl
inc
xor
jae
sarb
loopne
das
adc
jnp
jo
mov
ficoms
ret
lods
pop
add
inc
icebp
movsb
cmp
pop
mov
idivl
in
mov
inc
scas
stc
xor
push
push
shlb
icebp
sbb
inc
add
pop
arpl
sbb
cmp
data16
pop
enter
sbb
loop
pop
leave
pop
push
adc
aad
jmp
xchg
cmp
push
rorl
orb
xorb
pop
push
mov
jnp
int
cmp
ss
pop
jecxz
or
bound
jnp
pop
mov
int3
fiaddl
insl
dec
ret
push
dec
imulb
clc
out
jbe
xchg
pop
bound
rcrb
and
jo
mov
adc
mov
fildl
mov
out
adc
in
stc
jge
cmp
mov
sbb
fwait
jbe
std
pop
mov
lods
mov
ss
leave
not
fcompl
sti
cld
sbb
mov
enter
xchg
imul
pop
jle
scas
clc
shll
xor
pop
dec
loop
negl
xor
imul
scas
shll
adc
test
sbb
repnz
rcll
sbb
stos
cmc
aas
outsb
in
xchg
addr16
clc
stos
mov
pop
ficoms
nop
mov
icebp
arpl
cmpsb
sti
xchg
out
add
mov
cmp
popf
inc
inc
fisttps
sbb
lea
cltd
and
mov
xor
mov
push
pop
sbb
loope
aas
dec
pop
out
jp
inc
or
lret
xchg
and
push
aam
xorl
test
mov
dec
adc
jnp
mov
pushf
sbb
push
or
adc
div
xor
push
sbb
cmp
cmp
iret
cld
fdivl
mov
jo
or
pop
add
test
js
push
rcrl
mov
popa
dec
sbb
std
xchg
cli
test
cmp
sbb
andb
mov
cli
push
push
add
push
jae
push
cmp
dec
add
mov
and
pushf
mov
pop
mov
or
call
mov
test
xchg
and
cmp
test
ror
jl
sub
mov
dec
sub
xchg
cwtl
push
les
cmp
jp
sti
lds
out
inc
lahf
int3
imul
sti
jle
iret
icebp
and
ja
je
mov
xchg
addb
sub
adc
rol
sub
add
aas
jbe
out
nop
or
int
std
mov
inc
pop
rolb
lods
fldl
ss
gs
pop
in
push
sti
into
vmovaps
dec
cmp
pop
xorb
pop
cs
dec
push
lcall
mov
lods
cld
xchg
cmpsl
outsl
mov
jmp
inc
push
imul
mov
and
jb
out
loope
insb
retw
loop
lods
and
and
xchg
je
cmpsb
sbb
mov
cwtl
shl
ret
add
stc
and
sbbb
jno
dec
imul
jle
sbb
or
mov
dec
movsl
sub
adc
mov
mov
cmp
jecxz
outsl
rorb
cmp
xchg
push
adc
test
mov
imul
lds
and
fldenv
and
dec
cmp
or
inc
adc
popa
subl
push
aas
test
xchg
adc
rcrl
insb
cmpb
mov
daa
or
nop
xchg
xor
pushl
in
jo
ds
mov
sbb
mov
sbb
outsl
jmp
int3
rclb
fdivr
les
sub
aaa
sub
fistpl
mov
test
jg
push
int3
cld
inc
sahf
adc
sub
insb
jno
dec
aaa
test
cmc
or
int
cmp
jg
inc
dec
repz
push
or
pop
dec
add
test
push
gs
or
jmp
mov
and
or
aas
fs
adc
xor
push
std
mov
filds
mov
in
shrb
mov
jno
mov
je
outsb
test
fucomi
add
cmc
sub
mov
sbb
cmc
xchg
imul
js
out
xchg
push
out
and
jle
fisubl
push
ljmp
fcom
test
daa
dec
xchg
add
lret
inc
mov
mov
rep
push
adc
outsl
in
add
pop
aas
xor
inc
or
and
scas
psubusw
divb
xchg
dec
rolb
mov
stos
js
jl
mov
out
push
push
or
inc
flds
aas
es
rcll
sbb
arpl
or
dec
cs
daa
xchg
test
sub
loopne
jns
jmp
inc
movl
pop
imul
outsl
sub
xchg
and
cmp
call
paddusw
pop
sub
push
lcall
inc
into
xchg
fwait
mov
pop
in
jp
or
inc
and
inc
mov
dec
mov
repnz
cmp
inc
gs
pushl
add
and
fs
ss
insb
jp
xchg
movsl
mov
mov
inc
inc
cmpsl
subb
push
movsl
into
mov
xchg
shl
fs
outsl
sub
in
ret
in
cltd
adc
stc
hlt
fs
mov
ljmp
sbb
push
out
xor
mov
pop
or
adc
or
jo
test
scas
testl
adc
ljmp
movsl
xchg
jne
fs
pop
shll
js
push
jecxz
stc
outsb
jnp
fs
in
and
sarb
cmp
sbb
push
sub
nopl
cmpsb
mov
push
jno
or
push
in
push
fsts
ret
sub
push
mov
or
mov
aas
test
cmp
and
test
sub
jl
arpl
push
js
int
inc
push
sub
outsl
add
xor
mov
add
sbb
fsubs
or
jecxz
stos
stos
jecxz
sub
insl
push
xor
rcrb
lret
sbb
add
lea
mov
cmp
inc
push
cmp
gs
xor
xchg
test
loop
lcall
sbb
mov
test
ret
je
xchg
fadds
and
or
loop
and
push
xor
addl
imul
decl
mov
mov
clc
mov
mov
adcb
mov
cmpsb
outsb
inc
out
shll
jl
cmp
jae
cld
vmread
and
inc
push
rcrb
jb
imul
cmp
cld
xchg
inc
jo
mov
stc
and
push
and
adc
cmp
icebp
sbb
mov
inc
and
nop
sub
ja
push
cmp
out
inc
mov
fcoms
in
ss
dec
fistl
dec
int3
push
xchg
pop
je
test
subb
or
lods
xchg
add
es
jbe
pop
mov
push
cltd
mov
or
je
pop
xrelease
inc
xchg
std
cmp
push
xchg
or
push
push
jecxz
xchg
cmp
push
mov
insl
sahf
sub
sbb
jecxz
pop
das
aas
std
fnstcw
scas
inc
add
js
lahf
fstl
hlt
cltd
addb
cmpsb
mov
mov
mov
sbb
add
jecxz
cli
and
xchg
ret
pop
pop
loop
jg
xor
insl
xorb
push
xor
out
push
sti
ret
push
lahf
clc
iret
and
stos
sub
mov
xchg
pop
aaa
push
mov
sbb
cmp
jno
out
rcrb
jno
loop
cmp
jns
push
push
lods
pop
out
sub
or
fists
fidivl
jge
ret
popf
idivb
xchg
mov
test
shll
inc
xchg
mov
mov
dec
in
lcall
dec
sahf
fnstsw
cmpsb
imul
cltd
insb
and
dec
mov
push
stos
xor
fdivrl
adc
jg
push
jae
andb
inc
dec
stc
sbb
add
enter
pop
xor
ljmp
dec
mov
xchg
pop
cmpsl
mov
inc
icebp
aam
or
movsl
pushf
int3
pop
adc
inc
inc
int
inc
lock
dec
or
xchg
in
es
loope
fmul
pop
lahf
pop
movsl
out
daa
cmpl
jns
repnz
mov
push
dec
dec
ret
jb
xchg
push
or
aad
loopne
mov
jbe
and
mov
mov
mov
leave
adc
jno
outsb
in
push
inc
jg
jbe
scas
jno
or
cmp
lahf
lds
jmp
mov
stos
out
pop
out
cmp
mov
stos
lock
mov
fdivs
push
sbb
mov
mov
mov
dec
shrb
loope
fs
pop
js,pn
mov
lret
sub
out
or
xchg
lock
das
mov
out
cwtl
xchg
mov
push
mov
inc
lods
pop
loope
cltd
stos
cltd
std
or
adc
test
jb
aam
insl
add
and
test
jno
lea
gs
nop
loopne
xor
push
mov
mov
xchg
leave
gs
jo
cmpsl
ss
les
lea
dec
adc
pop
test
adc
ret
lcall
mov
stos
push
sbbb
cli
pop
mov
dec
call
cs
jbe
cmp
inc
xchg
xchg
test
dec
mov
jl
cmc
sbb
pop
pop
fbld
mov
imul
scas
xor
cmpsl
pushf
nop
add
lret
std
inc
ss
shlb
xchg
bound
cmp
outsb
pop
xor
or
cmpsb
push
outsb
call
lret
es
cmpsb
repnz
cmp
clc
imul
xor
fidivrl
jno
push
dec
divps
push
lret
movlps
push
xor
or
jnp
adc
gs
lock
or
pop
sbb
push
push
xor
repnz
xchg
mov
pop
mov
inc
mov
push
lcall
dec
frstor
loope
xor
cld
pop
sbb
popa
adc
and
jmp
movl
sbb
push
adc
dec
bound
das
adc
mov
inc
sbb
repz
in
lock
scas
mov
push
or
xor
xor
add
loopne
mov
pop
sbb
mov
mull
xchg
dec
ds
decb
and
sahf
sub
lods
pusha
out
dec
fmull
push
jmp
or
jnp
mov
push
int3
fdiv
jo
xchg
in
out
daa
insl
cmc
cmp
in
clc
pop
fs
add
int3
repnz
xor
mov
addl
mov
sahf
push
je
gs
cld
add
xor
xor
les
inc
sbb
mov
mov
std
push
inc
insl
mov
jp
jmp
insl
or
mov
cmp
mov
cmc
pop
jbe
out
test
test
jg
mov
add
in
loop
fdivrl
inc
inc
cmp
mov
cld
frstor
add
shlb
imul
int
sub
cmp
push
mov
push
pop
sub
add
lods
xor
add
sub
mov
mov
pop
dec
cmp
popf
mov
ljmp
subl
shrl
je
push
fmuls
or
push
into
xchg
stos
push
and
stc
xchg
push
and
mov
int3
mov
mov
adc
jb
adc
dec
xchg
push
push
pop
xchg
jmp
in
das
js
or
or
mov
movsb
popa
mov
mov
xor
lahf
in
mov
in
jae
mov
sbb
dec
or
xchg
outsb
rcrb
sub
cmp
ja
outsl
enter
sub
aam
push
adc
push
das
fdivrl
std
aam
adc
xchg
and
test
inc
mov
jmp
addr16
out
push
adc
mov
fdivrs
jecxz
data16
fwait
test
fmul
push
mov
loope
frstor
mov
xor
jae
adc
jle
mov
sbb
in
mov
daa
xor
fwait
mov
push
jge
xor
test
pop
movsl
test
add
push
fbstp
mov
daa
pop
inc
scas
decb
es
lods
fwait
jl
add
dec
loopne
sbb
adc
and
icebp
cwtl
aaa
pop
mov
jp
mov
je
subb
xor
pop
push
pop
push
mov
mov
xor
iret
push
sbb
xchg
les
jbe
cmp
and
in
mov
dec
int
cmpb
push
mov
dec
lock
int
sbb
loopne
cmp
pop
mov
or
popa
loopne
aaa
clc
les
pop
mov
clc
cmc
push
xchg
aad
or
xchg
cmp
cs
cmc
sub
jb
orb
aam
lds
hlt
inc
test
pushw
and
repz
adc
stos
and
in
jae
repz
mov
insb
mov
out
fsubrl
xchg
xchg
imul
cmp
mov
fimuls
xor
outsl
jg
cs
in
aaa
cmp
cmpsb
outsl
sbb
les
lods
repz
jne
popf
and
mov
xchg
sbbl
inc
fists
jns
movsl
addr16
mov
call
scas
mov
stos
fsubrp
fs
imull
and
jb
xchg
dec
shlb
adc
sbb
pop
sub
xchg
push
jl
lcall
and
aas
add
icebp
loope
jle
adc
dec
imul
sub
push
in
mov
mov
mov
push
in
push
add
outsb
adc
in
inc
or
fiadds
data16
ss
dec
imulb
ds
xchg
fisttpl
idivl
mov
mov
ret
scas
mov
push
repnz
cwtl
and
inc
mov
lret
dec
inc
mov
incb
push
int3
sarl
mov
negl
cmp
mov
int
cmpsb
mov
sti
push
adc
lods
out
out
inc
sbb
scas
sub
xchg
arpl
mov
jbe
push
pushf
stos
sti
jbe
pop
xor
adc
std
movsb
sbb
test
mov
mov
pushf
xor
sub
lcall
cmpsl
into
dec
fdivrl
mov
clc
cmpb
stos
sbb
inc
in
pop
pop
push
lea
pop
sbb
push
cltd
pop
jp
imul
cmc
and
out
mov
loop
mov
pop
or
mov
enter
sub
mov
xchg
sub
lcall
pop
imul
xchg
hlt
pushf
sub
clc
dec
and
mov
inc
add
aaa
inc
mov
lret
mov
cmp
jmp
add
sbb
and
mov
stos
test
jne
push
or
pushf
add
movsb
pop
test
adc
adc
or
stc
cmp
outsl
mov
fidivrl
pop
and
mov
arpl
dec
mov
cmpsl
ja
mov
nop
cmp
scas
xchg
aas
jp
jnp
loop
xchg
mov
jle
adc
jge
add
adc
mov
das
xchg
das
jb
cmp
inc
dec
mov
cmpb
or
inc
inc
mov
insb
nop
sub
out
sub
das
push
in
sub
xor
lods
mov
sub
push
pop
xor
ds
mov
fxch
xor
pop
out
pushf
aas
into
daa
repnz
or
adc
adc
aaa
dec
enter
sbb
push
incb
stc
aas
xchg
or
daa
mov
jns
push
daa
cld
jo
iret
cmp
fadd
xchg
jmp
sub
shrl
int
lods
lret
scas
xchg
pusha
mov
inc
add
xor
roll
and
in
sbb
xor
aaa
nop
inc
test
or
jg
lret
xor
pop
xor
enter
repz
or
mov
dec
jl
xlat
push
or
bound
push
push
repnz
jo
icebp
jl
or
dec
push
cld
jp
dec
shlb
and
mov
test
repz
add
std
mov
mov
movsb
js
out
or
push
rorb
jne
dec
aaa
fidivs
push
xor
call
or
xor
dec
sbb
arpl
push
pop
xor
pop
xchg
int3
mov
pop
inc
mov
cmp
rcr
mov
loopne
push
jne
push
add
js
dec
cs
rclb
rcr
imul
cmpsl
mov
or
test
cli
mov
insl
cmp
aaa
jecxz
add
fcoml
cmpsb
mov
or
or
cmp
pop
or
dec
lret
mov
out
lcall
mov
mov
dec
cmp
cmp
leave
cmp
add
loopne
rol
leave
cmpsb
cld
std
dec
add
xor
pushl
pop
notl
adc
dec
lahf
fdivrs
daa
lock
bound
ja
lret
mov
pop
dec
xor
xchg
aad
push
movsl
mov
sahf
rcr
cltd
pop
sbb
jge
cwtl
test
sbb
ljmp
daa
cld
mov
pop
add
mov
out
in
fs
inc
std
xchg
dec
in
pop
inc
pop
or
mov
iret
or
sbb
jae
imul
rolb
stos
add
sbbl
dec
push
sub
stos
sti
adc
stc
sbb
xchg
rorl
sbb
sbb
pop
xchg
adc
xchg
out
int
out
add
repz
mov
pop
push
es
shl
inc
rcl
mov
jmp
xor
dec
inc
dec
aam
dec
sbb
dec
loop
and
shrb
popa
xor
cwtl
xchg
pop
pop
lcall
gs
mov
adc
cmpsw
test
aad
or
push
dec
movl
xor
and
and
cmp
mov
adc
ja
test
pop
jle
ds
jo
cmp
jmp
add
test
jns
pop
dec
test
inc
ret
mov
jo
push
pop
es
cli
lds
push
arpl
pslld
in
popa
mov
jae
cmp
mov
push
orl
mov
add
call
mov
add
mov
pop
sub
jae
add
cmpsb
mov
loop
out
lods
sbb
fistl
fcompl
pop
ret
mov
inc
imul
stos
xor
outsb
dec
pop
fstl
movsl
sbb
xchg
shr
xchg
cmp
pop
mov
fildl
aam
cmp
push
mov
clc
test
dec
call
into
icebp
push
inc
aad
mov
mov
push
pop
sub
mov
sbb
nop
mov
or
ja
push
xchg
int
mov
clc
test
hlt
movsl
jecxz
jno
cmpsl
xchg
push
cmp
cli
in
popf
xchg
xchg
cmp
pop
pop
adc
mov
stc
dec
imul
icebp
lret
pushf
push
stc
int3
fs
andl
fwait
int3
imul
jbe
addr16
out
mov
dec
lret
fstpl
pop
cmc
mov
imulb
adc
mov
lock
fs
xchg
mov
jb
mov
jecxz
outsl
mov
in
mov
inc
pop
inc
sbb
add
clc
cmp
push
mov
cmp
add
mov
stc
xchg
mov
ss
sbb
out
movsb
or
test
add
adc
sbbl
fsubr
icebp
and
xor
sub
ret
std
push
andl
addr16
roll
sbb
daa
pop
insb
and
subl
jae
mov
mov
aas
xchg
test
push
and
scas
xor
and
mov
sbb
or
xchg
pop
and
adc
cmpsb
push
push
mov
xor
scas
dec
dec
data16
push
in
adc
cmp
dec
nop
sbb
test
mov
scas
outsl
or
or
push
sub
pop
mov
xchg
shll
ds
mulb
adc
jp
sbb
out
jmp
std
test
lret
out
sub
outsl
mov
or
inc
or
jmp
outsl
cld
clc
or
mov
in
cmp
imul
les
cwtl
fdivl
dec
fldenv
gs
je
notl
popf
sbb
fwait
push
rorb
addps
out
in
nop
push
mov
outsb
shlb
cmc
push
aaa
and
and
xor
nop
pushl
pop
push
out
mov
test
sub
mov
cmp
ficomps
adc
int
test
test
adc
dec
jae
mov
sbb
lret
sub
lret
aam
lahf
jp
pushf
xchg
sahf
lret
loope
test
mov
aaa
int3
pop
data16
lahf
jo
lods
in
mov
cwtl
mov
ds
lahf
pop
jnp
or
fdivl
xchg
sub
sbb
fiaddl
daa
and
push
rcll
cmp
gs
xor
push
mov
lahf
outsl
pop
je
add
or
mov
in
cmpsl
or
jne
cmpsb
mov
fstp
test
pusha
jb
std
std
sbb
imul
mov
sub
jecxz
sub
or
insb
jp
mov
call
lods
sbb
xchg
mov
push
in
into
push
js
js
jmp
out
xor
cmp
iret
mull
add
int3
in
rorb
loope
push
push
pop
insl
loopne
and
or
ret
nop
fwait
aad
pusha
mov
cmp
gs
scas
xor
dec
mov
xchg
xchg
xchg
shrb
pop
adc
dec
enter
loop
mov
stc
sub
notl
dec
aas
test
fsubr
int
icebp
dec
addb
cli
or
hlt
adc
insl
or
outsl
jbe
pop
stos
push
sbb
shll
or
cs
dec
push
fwait
push
pop
push
xor
mov
icebp
adc
inc
fmull
jmp
cmp
push
in
cmp
xchg
xor
inc
arpl
pop
mov
adc
and
data16
mov
cmc
inc
mov
fisubl
daa
orl
sub
enter
popf
test
imul
and
mov
out
xchg
jecxz
adc
icebp
cmp
xor
loopne
dec
leave
mulb
adc
xchg
mov
jle
and
xor
rcll
bound
dec
and
xchg
aad
adc
add
adc
outsb
mov
in
mov
in
jg
ret
loop
imull
popa
lcall
xchg
jle
in
mov
push
add
ss
aad
jp
es
jge
add
push
push
ror
add
xchg
pusha
popa
fists
push
sti
pop
scas
int3
sbb
dec
dec
shl
movsb
add
adc
cmp
ja
mov
sub
lock
lret
ds
outsl
rorb
scas
subb
pop
sbb
int
adc
sub
cmp
dec
pop
xlat
add
pusha
and
lods
in
aad
cmp
xchg
dec
xor
fmull
adc
fwait
lcall
repnz
sub
loopne
xor
sub
push
insb
negl
xlat
rcrl
mov
inc
cld
push
pop
sbb
mov
jb
xchg
lret
push
lret
psrld
in
xchg
repnz
stos
sbb
lea
xchg
mov
or
aam
les
in
sti
mov
jnp
mov
cs
xchg
in
int
jns
in
ja
rorb
loopne
cmp
call
leave
lahf
dec
sub
stc
mov
xchg
outsl
hlt
jno
hlt
ret
leave
fsub
in
lahf
in
in
pop
rcrl
jns
fldcw
lea
in
mov
ret
adc
ja
cmpsb
jmp
ror
int
xor
xchg
movsl
or
jge
lock
jo
mov
sbb
arpl
sahf
xchg
xchg
push
sbb
lock
inc
jl
and
jns
aam
add
cmpsl
jl
mov
in
inc
mov
idiv
push
dec
in
jg
and
loope
les
push
inc
push
add
push
adc
xor
repnz
adc
inc
push
out
stc
xorl
sbb
jmp
loop
test
lea
clc
fsubl
pop
inc
adc
add
inc
jno
mov
jmp
jmp
jmp
mov
or
sub
sub
xchg
pop
fwait
lahf
clc
jl
or
mov
jmp
xor
mov
and
je
out
inc
loopne
dec
pop
vpmuludq
jae
mov
jle
call
adc
jp
fwait
imul
or
jns
xchg
or
rclb
mov
xchg
outsl
sbb
stos
stos
lcall
dec
bound
pop
fstpl
jp
lcall
test
icebp
push
mov
push
jecxz
mov
test
ss
dec
jmp
sbb
scas
cmp
and
fistpll
sbb
push
add
mov
xor
iret
add
mov
mov
aad
lahf
mov
icebp
imul
out
cmc
and
inc
jnp
sbb
xchg
imul
add
adc
jl
leave
decb
incl
xor
sub
ds
iret
jle
mov
cld
lahf
fidivrl
stc
pop
xchg
inc
mov
sbbl
sbb
fsubl
mov
xchg
xor
add
ja
push
jl
daa
push
je
cltd
addb
jmp
xor
hlt
cmp
dec
mov
push
fs
sbb
xchg
aaa
cmp
push
icebp
cwtl
in
and
push
mov
inc
xorb
mov
not
mov
lods
sbb
mov
jmp
outsl
out
pop
mov
fs
lea
xchg
test
ficoms
pusha
cltd
sbb
sti
inc
mov
outsb
aad
push
dec
fldenv
pop
insb
repz
fwait
scas
push
inc
push
pop
dec
sbb
fadds
cld
out
int
push
mov
adc
jo
cmpsb
pop
mov
and
fbstp
xchg
and
in
loopne
sbb
jb
lcall
cmp
push
mov
mov
push
insb
in
pop
push
ret
sub
scas
push
addl
dec
leave
daa
dec
push
push
jne,pt
addr16
xchg
lods
pop
std
imul
mov
aas
adc
in
out
fstl
cmpsl
out
in
jle
rorb
ljmp
mov
rclb
jg
fstp
push
pop
and
xchg
sbb
xorb
add
orb
add
loop
pop
cmp
sarl
xchg
loopne
sub
inc
mov
dec
inc
test
cltd
dec
cltd
jp
adc
sbb
adc
jns
inc
out
shrb
in
cmpsb
dec
sub
test
jmp
divl
jl
pop
clc
jmp
loope
loopne
jnp
mov
imul
ljmp
fisttpl
stc
fs
pop
neg
mov
insb
fxtract
xor
xchg
movaps
out
icebp
adc
inc
xor
push
lea
cs
les
push
jbe
jbe
in
mov
sub
inc
xor
jp
enter
int3
mov
popl
jae
sub
xor
mov
jmp
jmp
jns
jns
out
in
cmpsb
jecxz
xchg
test
add
sarl
sub
pop
sub
shr
xchg
jmp
pusha
xchg
fdivr
dec
mov
lock
add
or
mov
mov
jbe
sbbl
loope
xor
gs
dec
dec
lea
pop
add
pushf
pushf
pop
cmp
cld
fnstsw
je
jg
sub
pop
fiaddl
sbb
nop
pop
jae
adc
shll
cmc
push
mov
add
imul
arpl
add
xchg
lahf
fidivrl
hlt
mov
in
movsb
mov
mov
sahf
push
inc
cmp
ret
mov
ds
adc
jb
mov
mov
jae
mov
rcrl
add
xor
mov
inc
rcrl
lea
mov
ret
cld
sbb
cmpsl
outsb
or
enter
jns
jmp
inc
jle
pop
sbb
hlt
gs
dec
pop
cmp
inc
fwait
sbb
mov
add
push
dec
sub
shll
in
xchg
popa
mul
dec
scas
dec
cmp
dec
and
sbb
in
cmp
sbb
sbb
mov
sbb
pop
les
stos
push
into
ljmp
popf
dec
cmp
adc
cmp
je
mov
push
dec
sub
aaa
sbb
mov
out
xchg
mov
ret
cmp
add
or
jg
mov
push
inc
or
pop
int3
mov
xchg
adc
and
or
push
add
pop
lahf
mov
push
xchg
loope
push
pop
lods
je
dec
imul
call
cmp
outsb
xchg
mov
xor
addr16
xchg
rol
iret
pop
mov
mov
ret
jl
pop
xchg
and
sub
nop
pop
jmp
js
decb
push
inc
pushf
arpl
sbb
or
jo
push
addr16
dec
mov
jo
xchg
mov
aaa
test
pusha
push
xchg
outsl
adc
jb
xchg
pop
mov
loope
cmp
dec
xor
mov
std
ss
fistpl
pop
xor
decb
insl
sbb
shlb
cmp
xorb
sbb
rcll
and
xor
pop
in
push
inc
pop
cli
lcall
lea
mov
cs
gs
mov
and
xor
xchg
and
and
sub
in
in
xlat
cmp
stos
pop
mov
fidivs
test
jns
pop
call
mov
mov
mov
ja
or
pop
mov
mov
dec
push
mov
pop
push
push
sbb
xchg
callw
lods
nop
lea
mov
mov
sbb
mov
popa
sbb
nop
inc
dec
push
inc
adc
cmp
mov
lods
js
xor
xchg
fsts
popf
mov
imul
inc
test
daa
aas
into
xchg
cmp
movsl
mov
sub
scas
cmpsb
push
ljmp
pop
mov
mov
cmpsl
jp
xor
sub
push
jae
movsb
mov
popf
xlat
js
adc
leave
cmp
push
jle
aaa
insl
cmp
movsl
mov
xor
fs
icebp
leave
ret
and
mov
sub
pop
int3
cmp
xlat
leave
sbb
movsl
ret
cmp
dec
fnstsw
add
shlb
out
std
int
negl
inc
sbb
ss
repz
hlt
cmc
inc
es
push
and
sub
pop
jge
js
lods
loopne
jo
xor
dec
das
pop
xlat
cmp
movsb
jae
loop
pop
aaa
lahf
sbb
or
xchg
es
or
stos
xor
daa
das
fldenv
lods
aas
inc
mov
adc
jo
mov
cmp
dec
sub
mov
iret
xor
fidivl
mov
jo
je
int
scas
push
jae
jo
cmc
test
cli
mov
pop
mov
aad
mov
and
cs
lcall
jns
mov
in
adc
sbb
jecxz
xchg
frstor
test
xor
xchg
in
lds
add
cltd
hlt
xchg
jbe
out
imul
add
dec
add
and
cmp
xchg
fadd
xchg
int
sbb
inc
push
inc
icebp
push
addr16
aas
add
in
xchg
add
dec
mov
and
pop
imul
ret
xor
jmp
andl
sbb
jbe
repz
push
out
jno
inc
test
pop
xor
jns
or
cmp
adc
and
jg
nop
or
aad
test
xchg
fwait
cmpsb
and
les
fsub
popa
sti
cmp
pop
cmp
add
or
and
jns
test
jecxz
dec
inc
std
sbb
jl,pt
dec
out
sub
sub
jo
mov
inc
mov
ficoml
xchg
int
inc
out
rorb
xor
sbbl
lock
mov
cwtl
adc
cmp
jle
aam
jbe
in
cmp
aas
xchg
ret
ret
out
jl
or
adc
sbb
loopne
jns
je
sub
loopne
adc
mov
xor
xchg
sar
fists
jp
fists
xor
jo
and
sub
push
mov
cmp
pop
insb
sub
pop
and
xchg
fistpll
mov
xchg
mov
in
mov
pop
push
fsubs
jb
call
xchg
mov
jecxz
xchg
daa
hlt
arpl
mov
adc
ja
pop
sbb
leave
mov
mov
outsl
mov
in
mov
test
jns
inc
ljmp
and
mov
lods
icebp
aam
sbb
inc
pop
pop
pop
fildll
stos
and
clc
popf
push
in
aaa
andb
outsl
ss
mov
ja
pop
mov
mov
mov
mov
and
xor
out
xchg
popf
xchg
sub
ds
dec
sub
mov
cmp
push
lock
fildll
fildl
add
xorl
ffreep
dec
jno
adc
mov
pusha
cwtl
dec
jnp
jns
push
out
push
stos
jo
cmp
cs
xor
in
daa
scas
push
add
and
faddl
xchg
lret
das
ja
inc
ljmp
push
xor
int
add
pop
aad
inc
orl
jecxz
lds
jb
mov
ret
jbe
aam
ficomps
pop
ficoms
mov
push
sub
ret
xchg
sub
mov
arpl
xchg
lahf
push
andb
mov
leave
in
movsl
loopne
outsb
mov
or
adc
push
xchg
push
adc
cmp
sub
roll
je
bound
cmp
cltd
xchg
addr16
or
insl
push
jge
add
adc
cmpsb
mov
adc
cltd
pusha
insl
jmp
sub
ret
xchg
adc
jb
jns
in
icebp
pop
mov
outsl
je
daa
addr16
push
les
pop
nop
or
add
xchg
adc
xchg
xor
fiadds
fmul
jno
out
sbb
shrl
mov
adcl
inc
sub
mov
imul
cmp
mov
mov
insb
pop
sub
pop
push
hlt
lret
add
jge
sub
mov
or
cmpsb
sti
repnz
push
mov
insb
addr16
loope
std
lods
and
pop
mov
rclb
lss
loopne
ss
dec
repnz
call
loope
sbb
addr16
addb
add
call
xchg
dec
and
push
and
test
or
nop
xchg
pop
jge
iret
bnd
imul
outsb
iret
pusha
xor
xor
lahf
pop
mov
jp
pop
into
addr16
mov
fidivl
adc
push
outsl
das
lret
fimuls
mov
arpl
adc
mov
or
mov
popa
jnp
in
sbb
loopne
inc
push
aaa
test
jl
popa
cmc
clc
in
jb
jbe
ljmp
pop
nop
cmc
push
test
xor
add
sub
jmp
pushf
cmp
mov
jmp
jecxz
add
test
and
test
mov
push
das
daa
movl
jge
push
mov
subb
mov
jp
pop
sub
sbb
frstor
mov
add
pop
jb
test
jecxz
add
xor
or
xchg
xor
lcall
jg
sbb
jecxz
inc
mov
mov
pop
sub
mov
outsb
in
adc
mov
movsl
push
mov
scas
test
push
add
adc
insb
pop
and
xchg
mov
adc
mov
loopne
push
inc
and
jmp
nop
cmp
xchg
test
pushf
push
adc
sbb
fidivl
fmuls
stos
xchg
jns
in
test
jnp
inc
jne
aam
dec
sbb
fldt
mov
sub
in
stos
loop
sbb
mov
or
jl
sub
jb
ja
insl
mov
adc
mov
pop
cmpb
push
std
in
incl
bound
das
xchg
xlat
sub
inc
cld
mov
mov
xor
jl
lahf
ret
mov
or
es
pop
stos
addr16
ret
fld
push
mov
xor
loopne
ss
xorl
cltd
push
sub
jge
daa
pushf
incb
iret
push
add
subb
int3
gs
xor
push
stos
rcrb
mov
fs
inc
loop
std
or
jge
lea
pop
cs
aaa
pcmpgtd
pushf
adc
push
mov
mov
mov
dec
fsubrp
sub
pop
icebp
rclb
cltd
inc
std
ret
bound
movsb
into
adc
push
push
loope
subb
jbe
cmp
sub
jns
cld
insl
repnz
inc
sbb
ljmp
movsb
or
mov
cwtl
das
cmp
out
std
ljmp
and
sbb
mov
stos
dec
shr
mov
hlt
or
add
xchg
enter
popl
cmp
sarl
jbe
mov
and
ja
rcr
sbb
jl
out
insb
inc
jp
mov
mov
mov
add
sbb
sti
jge
dec
mov
fistl
hlt
xor
subb
sbb
and
sbb
jbe
inc
ret
jmp
jns
sbb
or
stc
dec
lcall
call
ret
jae
mov
in
negb
aaa
cmc
push
ret
mov
xchg
test
pop
and
subb
test
addr16
adc
insb
add
xchg
stc
lret
clc
push
dec
push
in
inc
inc
mov
xor
lods
pop
add
add
dec
into
xor
cmp
or
push
cwtl
cmp
inc
push
mov
xchg
iret
push
pop
fs
shr
dec
clc
inc
fdivr
lods
enter
sar
mov
daa
nop
popa
pop
shll
add
adc
mov
in
xor
sbb
adc
xor
movsb
jo
std
xor
test
clc
add
cs
cmp
fdivl
stos
sub
cmp
fmuls
ljmp
fwait
mov
push
and
shrl
or
insb
lret
mov
stos
imul
lret
cmp
mov
mov
int
mov
and
sbb
xor
movsb
or
push
imul
add
mov
mov
fidivrl
mov
jo
xchg
std
rcl
jne
sub
call
call
xor
mov
jl
in
repz
jno
daa
movsb
add
je
fs
cmp
cltd
enter
push
test
mov
mov
aaa
jecxz
pushf
rcrb
xchg
jb
sbb
fdivrl
dec
call
pop
and
outsb
ljmp
or
mulb
mov
mov
pop
or
push
jnp
push
dec
shrl
push
bound
arpl
iret
and
arpl
lret
jmp
add
mov
mov
cmp
or
movsl
push
adc
mov
jb
cmc
xchg
xchg
mov
jg
pop
or
daa
les
add
int
or
cmp
and
xor
movsl
mov
and
push
cmp
enter
xchg
lcall
cmpsl
addr16
lret
cmp
jne
push
cmpsl
fs
lock
add
jae
jo
xchg
data16
sub
xrelease
xor
pop
lcall
jne
sbbl
icebp
adc
cmp
cwtl
and
push
stos
mov
orl
adc
pop
sbb
sbb
nop
xor
lret
adc
lock
rcl
pop
mov
sub
or
push
pop
sbb
cmp
leave
outsb
mov
subb
sbb
jmp
ret
push
cmpsb
mov
cli
icebp
mov
adc
jmp
pop
pop
pop
mov
mov
lods
xchg
xchg
add
out
inc
test
push
pop
xor
fcoml
push
and
xchg
ret
dec
xor
es
gs
dec
xchg
movsb
mov
or
and
es
fildll
cmc
iret
jae
mov
mov
sub
shll
inc
or
imul
fsubp
fisubs
mov
mov
push
addr16
lock
rclb
test
pop
mov
and
call
push
jno
pop
cmp
adc
aas
daa
call
fs
lods
dec
lods
mov
inc
add
cmp
add
dec
dec
jmp
shlb
clc
les
inc
std
enter
cmp
jge
stos
in
adc
cmp
outsl
in
cmc
icebp
mov
ljmp
pusha
cld
lods
mov
aad
orb
aas
out
rcrl
xchg
cltd
xorb
xor
mov
push
cmp
sub
mov
pop
cld
fwait
adc
or
test
or
das
sub
sub
mov
sbb
jno
dec
and
pop
ret
mov
rorl
add
or
jmp
or
or
sub
xchg
cmc
xchg
jl
cmpsl
outsb
stc
data16
xlat
mov
xor
push
in
outsb
repnz
xor
jns
repnz
add
clc
ljmp
lock
shll
loope
sbb
fistps
mov
jnp
pusha
jg
movsb
insb
out
push
ds
sub
rcr
cmp
or
insb
cmpsl
cmp
jns
stc
arpl
pop
mov
test
sbb
pop
cld
lret
cmc
movsl
stos
lret
push
rcrl
insl
add
pop
dec
int3
mov
test
jle
sbb
xor
adc
fimuls
cmpsl
iret
bound
lods
jb
rclb
or
push
or
loop
in
and
adc
cmpsl
fldl
push
and
in
test
pusha
cmp
sbb
sub
sarl
ret
fisttps
xor
xor
repnz
leave
jge
leave
add
hlt
fimuls
rol
js
mov
cltd
pop
popa
mov
hlt
add
jnp
les
arpl
push
sub
mov
cmp
es
cmp
xor
faddl
or
push
inc
icebp
ss
sub
lods
out
cmpsb
mov
shr
inc
dec
ret
inc
int
nop
lea
data16
xchg
js
add
iret
repz
fisubrs
call
mov
xor
inc
rclb
and
cmp
gs
loop
dec
and
push
call
enter
cs
and
dec
mov
fwait
es
add
fwait
pop
shr
xor
xor
dec
push
les
dec
xchg
daa
sarb
mov
and
subl
insb
cltd
jle
cltd
pushf
mov
bnd
lods
xor
mov
adc
or
add
mov
mov
scas
lcall
hlt
scas
sbb
xchg
dec
clc
push
xchg
mov
stos
roll
aaa
scas
xor
xchg
sbb
mull
and
cmpsb
inc
ja
or
shrl
jl
dec
pop
int
ss
movsl
sub
xor
les
fadds
push
rorb
adc
rolb
sub
adc
outsl
dec
jp
or
sti
clc
lods
or
push
fidivl
mov
inc
mov
add
pop
imul
incb
in
xchg
out
in
cmp
data16
idivl
inc
inc
mov
cld
jno
xlat
adc
ja
mov
dec
dec
ret
pop
mov
dec
arpl
fwait
xor
arpl
lret
add
jnp
lcall
adc
loope
pop
fidivl
leave
ret
in
es
push
push
inc
sub
aad
aad
pushl
push
scas
int3
add
arpl
jns
jns
mov
sbbl
cmp
mov
loop
sbb
fstl
movsl
scas
mov
cmpsb
pop
xor
jp
sbb
fadd
insl
insl
stos
ja
xor
or
out
and
mov
adc
in
sti
ja
in
icebp
shl
test
ficomps
dec
lret
mov
mov
sub
outsl
subl
xlat
aaa
mov
je
ljmp
push
xor
mov
aad
adc
loope
fnsave
int3
jge
sub
mov
scas
filds
mov
mov
jp
mov
sub
fcmovu
mov
jns
sete
xor
sbb
addr16
pop
adc
ja
cli
lods
repz
mov
dec
in
push
sbb
in
aad
fsubr
or
mov
cmp
mov
sahf
daa
popf
mov
bswap
and
jne
mov
cmp
lahf
cmpsl
push
data16
dec
xlat
imul
xchg
xor
fwait
ret
sub
mov
inc
or
popa
push
inc
outsl
ds
mov
xchg
xchg
jb
mov
mov
xchg
ficomps
mov
fs
cltd
xchg
subl
enter
lea
and
mov
imul
lods
in
aad
mov
pop
mov
out
loope
push
xchg
mov
mov
sbb
lret
pop
insb
push
and
jb
negb
imul
test
cmp
cmc
mov
inc
xchg
jbe
outsb
mov
test
cmpsb
sbb
push
push
rcrb
mov
cmp
in
test
lods
sub
and
lods
out
mov
xchg
push
out
idivl
cmp
add
fidivs
fcmovb
sbb
sbb
add
insl
outsl
imul
xor
cli
dec
test
test
inc
outsl
mov
dec
shl
das
jge
xor
test
test
push
test
push
mov
scas
jge
xlat
mov
outsl
mov
xchg
xchg
adc
or
cmpsb
aas
imull
adc
inc
divl
fsubp
cld
dec
xor
pop
iret
loopnew
mov
in
mov
fwait
cmc
cmp
xorl
mov
mov
clc
sahf
dec
scas
jae
loop
jecxz
jno
loopne
aam
add
add
pushl
mov
sub
add
push
fimull
mov
inc
inc
insl
loop
mov
pop
dec
imul
and
mov
sarb
lcall
in
fstpl
add
push
ja
fdivrs
fldt
push
or
ja
cmp
mov
or
lods
dec
fisubl
jns
cld
sub
movsb
popf
inc
ret
mov
rcl
push
aas
push
mov
sbb
mov
aad
cmp
sbb
or
xchg
lock
icebp
jp
test
dec
stc
popa
inc
xchg
adc
jl
xor
mov
outsl
lods
fdivs
in
roll
rorb
push
pusha
out
mov
xchg
xchg
call
cmp
lock
mov
pop
and
sahf
aam
pop
es
xchg
int3
ss
or
pop
in
mov
sub
sbb
adc
cmpsb
inc
xchg
and
jae
cmp
mov
fstp
inc
sbb
adc
push
rorl
mov
add
adc
imul
cmp
xchg
stc
lock
jle
cmp
or
subb
mov
pop
pushf
mov
mov
popa
out
fs
std
mov
mov
mov
int
out
and
xor
xor
inc
aam
inc
aas
testb
xor
aaa
inc
pop
out
leave
xchg
jnp
jbe
out
je
fistpl
std
inc
stos
sub
mov
enter
xor
mov
add
insb
mov
sub
test
aas
sbb
dec
js
push
in
pop
xor
mov
pop
pop
mov
pusha
daa
iret
adc
hlt
das
int3
shlb
rcll
enter
and
outsb
arpl
shlb
sub
mov
xchg
xchg
scas
or
pop
into
fld1
mov
inc
das
scas
add
pop
cltd
push
insw
paddb
or
xlat
popf
xor
mov
jb
cmp
std
add
jb
movb
push
test
sbb
fs
xor
scas
dec
inc
dec
push
ja
sub
pop
xchg
xchg
ret
call
fsubs
xchg
aam
les
mov
xor
jno
xchg
or
or
add
xchg
outsb
insl
dec
add
jne
jbe
lahf
pop
jp
xchg
sub
inc
cmp
lcall
adc
xor
das
sub
addr16
pop
xchg
repnz
push
mov
aas
daa
cmp
jbe
xchg
sbb
std
mov
add
dec
and
and
pop
test
ret
and
loop
outsb
dec
je
repz
jp
addb
in
mov
mov
in
add
test
lods
jecxz
xor
data16
mov
xchg
mov
add
fisubl
ss
stos
fwait
test
pop
scas
ret
inc
or
dec
pop
lret
sbb
sbb
jae
sbb
test
and
inc
xchg
movsl
popa
adcl
daa
or
ljmp
stos
fldenv
je
js
cmp
xor
jl
sti
adc
push
movl
mov
and
mov
inc
scas
data16
pop
loopne
outsb
xchg
jns
push
and
jg
int
mov
sbbb
push
adc
pop
cmp
jb
in
xchg
pusha
pop
aad
loope
out
sub
xchg
mov
adc
push
mov
xchg
lods
inc
xchg
sub
loop
arpl
xchg
outsb
jnp
fimull
adc
dec
rcl
hlt
inc
out
int
pop
cmpsl
test
pushf
lret
clc
fs
or
pop
sub
pop
fsts
jl
push
cwtl
addl
fistpl
dec
and
and
mov
das
mov
into
ficoms
xchg
lret
dec
into
in
xor
jb
js
push
jp
mov
popf
adc
add
sub
mov
xor
add
fcmove
test
rorl
outsl
test
jo
stos
dec
mov
aad
pop
movsb
enter
fdivl
fistpl
into
movsl
stos
mov
enter
adcb
mov
sbb
es
cmp
adc
in
mov
dec
add
pop
mov
sbb
cld
dec
or
cwtl
add
imul
out
push
xchg
jnp
sbb
sarl
pop
rcrb
xchg
out
add
jbe
cld
push
push
sar
addr16
mov
jl
push
jp
insl
das
pop
ror
adc
imul
fidivrs
fs
sbb
xchg
xor
dec
lea
cmp
jg
mov
and
pop
jp
pop
sbbl
fwait
loop
aaa
pop
xlat
sbbl
jns
jge
ds
shr
jns
sbb
and
js
dec
push
xchg
or
pop
push
add
xor
jle
adc
mov
push
cltd
jno
jle
aaa
scas
cmp
popf
cmc
out
pop
xor
lock
xchg
sarl
cmp
int
push
popa
call
adc
testb
xchg
cmp
jbe
sub
mov
or
mov
mov
mov
aas
xor
dec
and
dec
adc
push
imul
mov
xchg
cli
insb
inc
xor
cmp
cmp
dec
pusha
sbbl
outsb
in
xor
xchg
cmc
out
in
leave
sbb
mov
mov
pop
push
sarb
push
adc
xchg
out
sub
add
and
cmpsb
jb
dec
outsl
jmp
mov
cmp
xchg
insb
mov
jns
in
fs
inc
adc
xchg
aad
in
push
ffree
insl
xor
dec
roll
push
pop
fistpl
into
pop
pop
sub
dec
push
cmp
loope
clc
adc
fcmovnbe
imul
mov
mov
stos
fcom
mov
cmp
xchg
pop
adc
insl
arpl
daa
pop
jp
out
shrb
xchg
push
sbb
push
bound
push
addb
sarb
cmpsl
mov
cmp
repnz
add
aad
bound
ja
sahf
pop
mov
shrb
fs
decl
rolb
mov
fidivrs
insb
leave
mov
push
nop
adc
or
iret
js
jge
mov
lahf
shrb
arpl
js
cmp
test
push
mov
fcmovnb
movsb
cmpsl
and
jns
jle
movsl
dec
pop
xor
sub
std
iret
roll
int
jg
in
in
inc
lods
lds
add
mov
xchg
xchg
push
xor
jo
push
movsl
lcall
sub
nop
mov
fisubs
pop
loop
dec
sub
rcr
mov
test
push
popa
rcrl
jnp
xchg
mov
cli
pop
and
cmp
add
adc
push
xor
movsl
inc
or
jmp
scas
jbe
xchg
xor
xchg
and
test
mov
mov
or
jge
xchg
pop
mov
insl
out
iret
sub
pop
in
inc
add
jb
leave
add
sub
out
js
pushf
rorb
ss
mov
lret
push
pop
mov
mov
cli
int3
pop
sbb
mov
jbe
sub
push
cmp
mov
clc
movsl
dec
repz
js
inc
jg
mov
ret
add
mov
inc
xor
test
dec
mov
popf
inc
mov
and
fs
out
mov
push
add
xchg
lods
fmull
cli
jp
in
xchg
mov
enter
cmpsl
add
fmuls
into
mov
adc
mov
add
push
sbb
lcall
dec
lret
in
stc
push
lds
ljmp
mov
adc
jnp
pushw
das
cmp
add
lods
pop
pusha
test
test
adc
out
jle
sub
aam
mov
jmp
adc
mov
cmp
rol
fsubs
outsl
int3
mov
rolb
scas
xor
or
pushf
mov
aam
fldt
xchg
lds
rol
outsb
shl
rclb
push
push
or
jns
mull
into
jbe
out
pop
push
mov
sbb
leave
mov
clc
cli
xor
jle
pop
ficoml
into
dec
jbe
lods
push
shll
mov
mov
cmpsb
xchg
mov
pop
pop
jns
or
cmp
xor
cli
jb
test
mov
repnz
dec
ds
cli
inc
ret
in
repnz
sbbb
lods
jo
fwait
jmp
push
fs
inc
icebp
arpl
push
lcall
cwtl
fnstcw
pop
xchg
push
in
andb
ss
in
jp
pop
call
lahf
rcr
aam
stc
pop
bnd
int
popf
das
push
sbb
pop
jae
add
xlat
sbb
mov
inc
out
jns
mov
sbb
xchg
or
call
jns
popf
imul
sbb
cmp
jge
std
rorb
mov
xor
aas
ror
sbb
lock
lret
cltd
cld
jge
mov
ja
ja
adc
gs
cltd
fiaddl
mov
xor
test
mov
mov
pop
inc
mov
sub
push
in
mov
or
imul
sub
add
xor
or
insl
xchg
into
scas
jle
cmp
repz
icebp
addr16
lret
lret
imul
xchg
sub
xchg
dec
xchg
inc
cld
aam
mov
fcmovu
adc
dec
mov
xchg
cmpb
out
bswap
or
or
scas
icebp
mov
cmp
jl
sti
repz
inc
xor
js
xchg
jg
jnp
loope
add
mov
popf
ds
scas
jmp
dec
sarb
adc
lahf
push
dec
iret
mov
add
xchg
sub
push
adc
pop
mov
out
stos
out
fisttpll
ljmp
das
dec
jns
mov
rclb
pop
jl
jno
xchg
xchg
mov
add
sub
stos
jno
cmc
mov
fs
jb
xchg
es
scas
pop
mov
mov
inc
les
repnz
imull
xchg
lret
xchg
jno
mov
jb
pop
inc
cmp
dec
dec
sbb
fbld
jno
sub
shrl
std
fildll
inc
cmp
in
jg
in
lcall
mov
or
inc
call
and
jle
out
in
mov
mov
into
cwtl
inc
negb
pop
leave
adc
xchg
loope
add
jl
adc
pop
aad
adc
call
xchg
pop
roll
or
fsubs
fbld
mov
xchg
mov
mov
push
pop
call
dec
mov
pushl
outsl
sarb
cli
dec
lea
dec
pop
adcb
push
push
add
cmp
insb
sahf
clc
popa
xor
imul
add
fstl
insl
mov
into
cld
jge
movsb
and
ljmp
mov
pop
and
jp
daa
sbb
int3
divl
dec
sahf
out
cmp
xor
mov
mov
jne
ret
mov
push
ret
rcrb
imull
cmp
inc
lock
into
push
xchg
pop
or
je
xor
push
ret
mov
ss
xor
mov
mov
sbb
push
adc
sbb
stc
add
in
xor
or
inc
jp
leave
sub
or
ror
push
ret
jo
adc
fimuls
test
and
or
sbb
cld
pop
movsl
jmp
fimuls
dec
das
out
aas
push
lret
pop
das
clc
dec
push
loope
pop
out
addb
or
rorl
or
pop
pop
xchg
jnp
xorl
insb
cmp
jp
inc
mov
ss
mov
fs
push
addr16
or
into
iret
cmc
das
push
mov
lahf
push
xor
scas
lods
cmpsl
adcl
std
sbbb
cltd
cmp
and
outsl
or
jle
pusha
dec
daa
into
les
push
and
sub
mov
out
mov
inc
daa
xchg
pusha
je
jecxz
xchg
add
push
and
inc
dec
xor
ljmp
cmp
push
mov
jp
outsb
push
sub
stos
rcr
int3
push
rcrb
jmp
mov
dec
jo
sbb
pop
adc
movsb
mov
pop
leave
mov
lret
ja
das
lea
push
ja
xchg
rcrl
pop
subl
sti
dec
xor
mov
std
sbb
das
es
rorl
jo
repz
rolb
push
cmc
push
xchg
lret
lret
pop
das
icebp
sbb
dec
int3
xlat
or
and
daa
pop
fistpll
fldcw
or
pop
xor
adc
sub
daa
call
pop
rcl
or
int3
mov
cmpsb
pop
jns
pushf
mov
dec
pop
fldpi
lcall
loopne
and
inc
add
negl
or
or
push
sub
roll
push
clc
aaa
and
sub
in
inc
cltd
mov
jbe
sbb
movsb
filds
mov
int
pop
dec
daa
aad
outsl
adc
push
adc
pop
xchg
mov
cmp
mov
jp
andl
movsb
aaa
sbb
pop
jl
add
or
xchg
test
xor
sub
divl
out
and
xor
outsb
push
push
rorb
loopne
cmp
lret
loopne
sub
add
pop
ret
dec
mov
aas
jno
push
and
sub
outsb
mov
mov
es
mov
fsubs
sahf
adc
roll
pop
xchg
sbb
fldcw
addr16
mov
loope
pop
pop
inc
adc
loope
addl
mov
loop
adc
sbb
cwtl
mov
push
in
sbb
jae
dec
xor
and
push
stos
push
inc
loope
mov
sub
push
xchg
roll
lret
testl
insl
repz
push
lret
sub
or
out
pop
jno
push
and
call
pop
xchg
dec
das
mov
aam
xchg
mov
rorl
fwait
or
mov
pusha
loope
mov
sbb
dec
cwtl
mov
and
imul
fmuls
jle
xchg
out
adc
jl
sub
out
jnp
push
pop
and
ds
xchg
repnz
mov
sbb
je
fistpll
xor
mov
add
aas
rcrl
add
testb
dec
in
and
xor
lcall
sbb
xchg
pop
mov
in
adc
pusha
adcb
mov
xor
mov
aaa
pop
into
lock
scas
sub
lods
iret
mov
repnz
cmpl
inc
or
mov
cltd
shl
in
and
ds
fdivrs
fstps
jl
out
and
sti
test
inc
enter
cmpsl
mov
xor
orl
pushf
inc
add
pop
cmpsb
adc
adc
xchg
out
jmp
shlb
mov
leave
fcoml
mov
mov
add
out
xor
mov
inc
pop
and
stos
aam
push
push
sub
stos
data16
arpl
outsb
popf
adc
dec
repnz
lock
shlb
fdivl
enter
mov
shll
add
sub
push
pop
adc
inc
adc
arpl
loopne
mov
jp
decb
xor
loopne
mov
jp
incb
arpl
stos
pop
xchg
sub
mov
bound
loope
inc
mov
arpl
lahf
jne
jo
int3
imul
xor
aam
popf
add
sahf
fdivp
fistpll
aas
es
sbb
dec
fildl
clc
andl
push
stos
jno
xor
dec
cmp
fwait
push
inc
cmp
loop
sub
mov
mov
xor
jbe
call
in
daa
clc
pop
cmc
test
fnstcw
mov
mov
adc
pusha
add
iret
inc
mov
inc
push
mov
pusha
sub
inc
aaa
loop
jnp,pn
xchg
jno
xor
ds
add
in
in
xor
stc
loopne
pop
mov
leave
ds
iret
inc
jle
inc
loope
sub
lcall
cmp
and
cmp
sahf
xchg
int3
jecxz
stc
mov
bound
lock
mov
movsl
add
imul
aaa
or
add
fcmovnb
cli
out
jo
mov
add
sub
pop
mov
mov
xchg
mov
jp
adc
aas
repz
or
and
jle
shl
scas
dec
fstpt
jge
inc
jp
push
cwtl
ret
movsl
adc
lahf
dec
mov
out
ljmp
adc
dec
or
sti
loop
push
mov
jecxz
ret
mov
fdivrs
cmp
push
xchg
outsb
push
xor
outsl
add
pusha
mov
pop
or
dec
cltd
dec
and
out
inc
mov
stc
mov
push
loope
dec
dec
pusha
or
lret
mov
pop
aad
xchg
sbb
jl
sub
inc
fiadds
insb
mov
add
ret
cmc
sbb
inc
sbb
ret
adc
sub
adcl
pop
movsl
leave
push
add
or
mov
leave
mov
filds
xor
movsl
mov
or
pushf
mov
push
icebp
enter
cltd
stos
and
mov
ja
push
ja
int
sbb
dec
lahf
scas
and
xchg
cmpsb
mov
push
lods
aas
push
add
addr16
arpl
call
adc
and
sbb
push
mov
push
decb
nop
sub
call
outsb
jnp
incb
lcall
imul
add
pop
mov
insb
incb
nop
sbb
out
lcall
gs
imul
push
or
xor
scas
cld
inc
sub
mov
inc
inc
mov
sbb
cmp
lea
shll
and
xchg
or
dec
in
mov
lds
out
sub
cmp
xchg
ret
mov
mov
int
jp
mov
mov
and
mov
push
mov
lods
pop
fwait
cltd
negl
loop
jg
and
insl
fucomi
addr16
ret
divb
xor
call
out
fcmovnu
mov
adc
fsubs
shll
mov
push
mov
in
andb
pop
test
jb
fstl
scas
pop
mov
adc
lea
fistps
sub
or
stc
lret
in
sbb
rorb
jbe
sbbb
lcall
out
jne
pop
push
mov
sbb
repnz
push
int3
pop
je
nop
shll
jae
add
add
jmp
adc
mov
adcb
clc
shrb
mov
adc
lds
out
lcall
jae
inc
cmp
jecxz
fnsave
sub
outsl
pop
add
mov
and
adc
adc
pop
pop
cmp
sbb
notl
mov
push
orb
jl
mov
jg
pop
mov
cmp
cld
adc
int
ljmp
fsub
or
rcrl
iret
stos
push
adc
icebp
add
pop
cmp
loopne
imul
lods
jnp
add
xchg
adc
and
enter
pop
jns
adc
jge
mov
sbbl
hlt
sbb
imul
dec
popf
mov
mov
fwait
into
stc
dec
jae
inc
inc
pop
rcrb
jb
stos
xlat
push
aam
inc
js
inc
pop
jbe
pop
out
xchg
out
ds
push
pop
call
push
in
out
ja
pop
daa
imul
and
xchg
sub
pop
mov
xlat
outsl
mov
aad
mov
jmp
or
sbb
cmp
jae
negl
inc
mov
mov
gs
inc
jno
mov
cltd
leave
js
or
out
adc
push
or
jl
or
push
jl
or
sbb
xchg
lcall
adc
loop
ss
mov
pop
jmp
imul
out
mov
mov
push
push
sti
aaa
imul
scas
ret
adc
fwait
adc
push
ds
dec
inc
cmp
xor
pusha
es
shrl
daa
aam
adc
cld
mov
icebp
jmp
adc
sub
mov
stos
aam
xchg
jns
fnstenv
clc
push
xor
inc
andl
jno
stc
and
scas
fists
stos
push
in
cmpsb
mov
repz
rcrb
out
iret
scas
inc
lcall
jb
fs
or
sbb
sbb
jmp
sarl
push
or
mov
dec
leave
lahf
mov
mov
iret
pop
pop
dec
lahf
loop
inc
push
sbbl
insb
cmp
lret
es
mov
inc
lcall
in
out
data16
iret
dec
jge
xor
in
inc
push
mov
mov
jb
aad
call
push
jnp
shl
ljmp
imul
fistpl
mov
xor
fmuls
cmp
cmp
ds
sahf
sub
pop
xchg
test
sub
jnp
jge
inc
dec
pushf
add
sbb
pop
fiaddl
xchg
or
add
gs
mov
les
movsl
and
and
jmp
mov
inc
popf
adc
inc
sbb
cmp
xchg
and
xor
icebp
rcll
mov
scas
int
aaa
cs
mov
mov
jp
addl
fstpt
sub
adcb
cmpsl
jae
and
xchg
sub
in
shl
pop
popa
jmp
fmul
je
call
int
pop
addr16
jg
xacquire
jb,pn
pop
sub
push
and
and
lods
repz
aad
sbb
subb
scas
cmpsb
sub
mov
cmpb
jp
lret
xchg
jns
or
or
repz
in
xor
push
jp
test
mov
mov
adc
insb
clc
bsf
push
std
iret
sub
push
es
xchg
imul
sbb
pop
xor
or
out
hlt
or
in
pop
leave
pop
and
push
bound
sub
sti
dec
jle
xchg
fstl
or
rcrl
fsubrl
movsb
out
lcall
mov
rcrb
in
int
xchg
iret
xchg
and
sbb
mov
and
in
cmp
add
pop
xchg
jge
iret
dec
jg
jae
inc
lret
sti
mov
pop
aaa
ret
add
test
inc
cwtl
int
cltd
xor
mov
sub
dec
or
incb
xchg
out
mov
xor
clc
aaa
stos
repnz
rcr
mov
jo
xchg
inc
mov
imul
sbb
pop
push
out
out
cmp
arpl
pusha
sub
aam
xchg
mov
lods
dec
sahf
repz
adc
ret
push
xchg
mov
enter
push
sub
outsl
and
out
enter
pop
xor
stos
and
add
cmp
rclb
into
je
inc
sub
inc
pusha
insb
ret
popa
xchg
fs
cmpsl
insl
adc
mov
cmp
inc
push
popa
xchg
rclb
std
arpl
test
jbe
inc
xchg
xor
jnp
add
les
xlat
rclb
hlt
adc
lahf
xchg
pop
inc
mov
iret
mov
jg
add
fucom
mov
popa
and
lea
cld
mov
fistl
xlat
test
aam
call
clc
pushf
mov
dec
mov
or
lcall
sti
testl
loop
es
imul
mov
das
and
loope
push
mov
es
sbb
add
sbb
push
jae
ret
ficompl
scas
iret
adc
jo
popf
test
lret
out
repz
or
sahf
sbb
and
mov
incl
xlat
in
lds
mov
ror
lds
xchg
imul
sarw
mov
push
scas
mov
je
mov
cmp
aaa
jns
outsl
movsb
jno
jne
iret
cmpsb
sbb
cmp
cwtl
cltd
mov
std
jmp
jle
jno
cmp
dec
dec
mov
jmp
cltd
pop
pop
insl
out
push
insl
adc
mov
frstor
push
popa
fucomp
cs
movsl
loopne
arpl
aad
mov
aaa
mov
dec
inc
lds
xor
mov
mov
jo
int
push
cmpl
mov
pop
sub
scas
aad
jae
inc
jl
clc
xchg
pop
sbb
fwait
cld
add
insb
push
fsts
jns
repnz
add
mov
stos
sbb
push
mov
inc
lods
js
daa
pop
push
sar
fdivs
imul
into
pop
and
das
aaa
cmp
xchg
sub
ds
fs
push
ss
add
repnz
cmp
xchg
call
adc
mov
xor
cs
mov
loopne
xchg
js
xchg
sbb
jb
jbe
cltd
jae
push
fstl
cmpl
test
inc
cmp
sti
push
outsl
insl
cmpsb
jo
jmpw
lret
jnp
push
fadds
aaa
or
incl
fwait
mov
xchg
das
aas
imul
lods
pop
fs
jge
cmp
and
dec
add
jge
pop
and
xor
inc
int3
enter
cmpsl
dec
imul
in
mov
or
adc
fmulp
imulb
int
jl
push
sti
es
icebp
mov
cmc
xor
xchg
pushf
inc
pop
sub
loope
int
sti
or
repz
outsb
sti
in
adc
shll
sti
std
repz
jecxz
jbe
sti
clc
repz
jecxz
add
add
mov
jecxz
sbb
mov
pop
jbe
mov
es
cwtl
mov
rcll
stos
and
and
dec
push
das
outsb
sub
stos
bnd
stos
xlat
cmc
mov
nop
jmp
xchg
jbe
loope
dec
enter
test
adc
cmc
cltd
nop
xor
mov
subl
mov
cs
out
sbb
jnp
mov
sbb
mov
mov
fisubl
fdivrl
mov
mov
xor
jp
jmp
jno
pop
dec
or
or
dec
inc
dec
test
cmp
loop
fsubr
test
mov
ret
stos
mov
or
outsl
xchg
out
loop
out
shrb
shll
aad
jle
push
aaa
insb
lds
mov
adc
sarl
imul
shlb
imul
cmp
cmp
dec
nop
add
adc
xor
fsubl
test
rcrl
push
and
das
adc
sub
jbe
dec
cltd
mov
mov
loopne
addr16
lret
jecxz
in
pushf
adc
mov
lds
addr16
out
outsl
inc
cmp
and
push
lods
js
nop
loope
stos
mov
xlat
popf
insb
cmp
dec
sbb
mov
and
frstor
pop
cld
aas
ret
cmp
jb
std
lock
sbb
stc
fisubl
jnp
stos
add
bound
push
xor
aaa
or
fs
ljmp
scas
jecxz
sti
xor
test
lret
fcoms
in
xor
jge
sbb
xor
popf
das
not
in
jae
aas
or
xchg
and
sbb
cs
cmc
out
dec
adc
repnz
sub
nop
cltd
and
push
xchg
mov
xchg
js
pop
outsl
cli
push
jle
or
outsb
loope
jp
mov
aas
jle
add
pop
and
xchg
stos
sub
fnstenv
test
scas
insb
xchg
adc
inc
adc
pop
lods
lret
repz
popa
sub
mov
sahf
add
aad
popa
push
lods
dec
test
or
in
pop
xchg
mov
push
out
in
sbb
fmuls
ljmp
lea
add
xor
dec
mov
adc
xlat
lahf
ss
push
jp
jl
or
xchg
push
dec
pop
je
outsb
lahf
outsb
xlat
jo
push
or
xor
sbbb
data16
addr16
in
fidivs
mov
rorb
or
les
scas
cli
hlt
lahf
loope
pop
movsb
pop
add
and
inc
in
out
gs
daa
push
dec
cmc
call
push
and
in
or
push
cmpsb
sub
lret
popa
out
ja
loope
arpl
pushf
add
in
fisttpll
jmp
push
fldt
pop
aad
pop
ss
stos
push
leave
iret
aas
call
mov
lds
push
jmp
or
dec
int
mov
dec
sub
sub
cmpsl
push
ret
dec
dec
mov
in
or
sbb
jmp
jb
lret
int3
inc
into
pop
fidivrl
cmp
rclb
gs
sub
cltd
mov
lcall
mov
mov
btsl
enter
push
pop
inc
dec
pop
sahf
cwtl
jge
sub
mov
nop
pop
xchg
mov
leave
sbb
sbb
fldcw
mov
cmp
inc
mull
xchg
pop
jle
pop
fndisi(8087
testb
dec
and
loope
xchg
rcrl
mov
jecxz
xchg
xlat
pop
dec
wbinvd
adc
cmc
sbb
pop
and
sti
mov
pusha
pop
cli
outsb
push
sbb
iret
cmp
sub
fst
push
jmp
adc
lret
dec
lea
or
into
repz
add
inc
pop
xor
ja
cmp
ljmp
test
vucomisd
stc
inc
lock
dec
sub
mov
and
movsl
outsb
scas
cld
ds
mov
push
adc
lea
jae
push
push
add
in
jge
mov
sub
jo
jg
sbb
gs
dec
push
clc
ret
insb
xlat
sub
dec
scas
outsb
push
mov
aaa
std
movsl
or
hlt
push
dec
pop
out
xchg
pop
pop
jns
add
mov
and
mov
dec
lea
fmull
jae
loope
fldpi
rorl
mov
lods
dec
pop
les
loope
xor
push
xchg
pop
mov
lahf
stos
and
inc
xor
aad
xchg
lds
in
dec
enter
fcomps
stos
pop
or
cltd
xchg
adc
in
inc
xor
sarl
inc
push
xchg
sub
outsb
test
call
xchg
push
addr16
addl
or
sbb
cmp
pop
mov
inc
xor
cmpsl
or
push
int
xor
xchg
mov
jo
sahf
pop
xchg
jge
stos
inc
cmp
push
sbb
fcmove
fnstenv
stos
push
push
fisttpl
mov
aaa
fsubp
xchg
ss
call
cmc
mov
adc
flds
clc
jnp
push
bound
jecxz
mov
dec
inc
cwtl
sahf
add
bound
stc
cmc
cli
mov
mov
and
lahf
pop
mov
inc
jno
lods
mov
cli
rcrb
jg
xor
xchg
call
push
or
rcrb
or
mov
lcall
mov
std
lock
lods
jg
pop
movsb
xchg
rcrl
cs
jnp
jb,pn
dec
mov
nop
inc
rcll
sbb
iret
xor
outsl
cmp
fsincos
push
and
xchg
call
fnstsw
push
sahf
cmpsb
or
in
add
arpl
pop
xlat
mov
repz
rolb
arpl
pop
jmp
stos
stos
cmp
pop
mov
cmpsb
scas
std
pop
cmp
arpl
sub
add
out
and
in
inc
shlb
mov
shlb
jmp
dec
jbe
adc
loop
icebp
fidivrs
sub
lods
sub
popf
sti
xor
js
out
loope
fsubs
jnp
fnsave
repz
fimuls
je
cmpsb
pop
xchg
and
jge
dec
imul
test
add
adc
leave
push
sbb
mov
xchg
jg
popa
popf
sarl
jp
loop
xchg
decl
push
js
mov
rorl
insb
dec
adcl
movsl
pop
jmp
lds
or
hlt
dec
add
lods
xor
mov
fsub
repnz
loope
daa
push
in
mov
lds
lock
in
in
mov
sub
xor
cli
fisubrl
xchg
adcl
pop
adc
movsl
pusha
lods
fwait
adc
in
pop
ds
outsb
mov
test
or
lret
cwtl
ficoms
mov
cs
loopne
rcrb
push
ds
arpl
enter
loopne
leave
ret
divl
outsl
dec
pop
dec
lahf
popf
dec
mov
or
sbb
mov
sub
std
lock
into
in
adc
jne
mov
fisttpll
mov
call
xchg
flds
jl
dec
sarb
or
sbb
pusha
enter
bound
stos
mov
xchg
cmpsb
sbb
idivb
xlat
adc
sbb
cmp
inc
mov
aaa
lahf
push
jne
jns
xchg
mov
or
bound
push
lret
ret
rol
and
inc
stos
ret
out
mov
std
into
mov
sbb
push
into
movsb
ds
fidivrs
xchg
popf
imul
in
inc
mov
mov
cmp
xchg
int3
aas
mov
push
or
rolb
test
pop
sub
push
inc
mov
sub
and
imul
mov
mov
push
mov
push
ljmp
xor
sahf
and
imul
lea
cltd
jns
mov
or
adc
inc
rcrl
push
outsb
leave
mov
mov
pop
outsb
inc
add
push
or
fwait
pop
jge
fmull
fadds
mov
stos
jnp
xchg
fdivrs
ds
mov
faddp
aas
cs
push
or
jnp
sti
xchg
sub
cld
imul
xchg
insb
mov
xor
mov
outsb
add
test
popa
sbb
pxor
or
xchg
lahf
hlt
jne
jnp
sub
dec
add
xchg
jge
jne
adc
scas
addb
jle
push
nop
xlat
xchg
adc
insl
inc
cmpsb
sarl
ds
icebp
adc
push
sbb
mov
push
nop
mov
lods
repnz
mov
lock
in
iret
scas
xchg
jg
test
orb
sbb
adc
dec
or
jge
icebp
push
je
jbe
dec
jmp
dec
shlb
aad
imul
test
dec
jb
dec
mov
jle
inc
dec
data16
jmp
orb
js
mov
jbe
mov
popf
sub
aaa
mov
int3
sub
ja
pushf
sahf
push
notl
out
movsb
dec
imul
mov
rol
or
jb
sti
cli
xor
rcl
sbb
dec
mov
sub
enter
dec
sub
cmpsl
sti
jecxz
out
rorl
sbb
outsl
insl
jl
arpl
xchg
cs
jl
mov
jmp
cmp
jge
vmovupd
movb
scas
test
enter
shll
psllq
sbb
pop
clc
addl
hlt
push
mov
dec
roll
xor
test
and
pop
inc
mov
add
xchg
mov
lret
sub
push
loopne
sbb
cmp
adc
jp
add
dec
dec
stos
push
push
jp
sub
mov
push
out
mov
inc
jecxz
xor
or
iret
std
subl
into
stos
js
mov
cmp
adc
aad
je
lds
or
sub
ds
add
sbb
scas
xor
out
xchg
adc
pop
rcrb
inc
int3
popf
in
fldl
xor
icebp
push
imul
icebp
aas
sbb
xor
xlat
imul
outsl
sarl
mov
shll
adc
sub
xchg
or
inc
or
add
or
mov
fwait
xchg
or
pop
lock
insb
cwtl
mov
cmp
xchg
nop
addb
dec
jno
dec
repz
or
fcmove
push
scas
cld
mov
loopne
aad
in
scas
pop
sbb
inc
or
inc
jns
popa
in
fucomip
or
fstpl
push
adc
pop
inc
push
cmp
aad
fcomps
and
das
pop
xchg
jg
or
fwait
pop
xor
iret
test
pop
cmp
xor
int3
pop
rcrl
ror
push
pop
out
dec
or
dec
or
fidivl
add
iret
sbb
pop
stc
enter
enter
fisttps
scas
dec
or
insl
inc
sbb
inc
ret
or
iret
and
dec
mov
in
add
jns
xor
fst
pop
inc
cmp
mov
shrb
cltd
add
iret
gs
jno
pop
cmp
sarb
push
mov
pop
and
jae
xchg
lea
dec
bound
pusha
stos
push
nop
mov
lods
lret
arpl
pop
fsubrs
mov
xor
das
cwtl
xchg
lcall
in
adc
movsl
dec
enter
test
ret
leave
sub
mov
cmp
xchg
rcrb
or
stos
popf
repz
cmp
jl
aad
lds
das
outsb
shlb
sbbb
sbb
mov
add
cld
into
stos
xchg
push
dec
stos
pusha
or
repz
in
loopne
outsb
bound
dec
fsubrl
pop
sub
shll
std
inc
hlt
ret
inc
inc
clc
stos
outsl
push
push
add
dec
es
or
mov
xchg
insl
jns
push
dec
push
jo
xor
pop
call
inc
mov
xor
pop
jbe
sub
mov
sbb
out
mov
add
sbb
push
ljmp
lahf
icebp
das
into
and
insb
inc
xchg
xchg
xor
push
hlt
xchg
inc
sbb
sub
jge
jle
arpl
add
imulb
into
and
hlt
or
leave
cmpl
or
mov
push
cmovs
fs
aam
ljmp
jae
xchg
aas
and
xor
xchg
hlt
push
xchg
fwait
pop
fsubrs
daa
out
aad
pop
sahf
dec
stos
loop
dec
mov
fiaddl
jne
ds
or
sbb
sbb
push
mov
leave
sub
out
icebp
mov
mov
enter
and
in
xchg
nop
and
dec
fmuls
ss
popf
push
adc
sti
dec
pop
int
jp
rolb
es
mov
lock
outsb
xorb
push
pop
iret
in
sbb
test
dec
ljmp
jno
push
jb
std
add
or
gs
testb
fwait
and
je
push
movsb
or
and
mov
inc
xchg
cmp
or
jb
add
mull
add
cs
jne
push
mov
cmp
mov
orl
inc
shl
push
jb
jle
cwtl
lds
sbb
subb
orb
xchg
sbb
jns
clc
out
idiv
dec
inc
sbb
add
jp
jecxz
mov
pop
pop
push
xchg
or
push
mov
inc
mov
jl
nop
popf
and
and
cmpsl
xor
jp
stos
jae
mov
xor
lret
xchg
lea
adc
lock
aam
scas
icebp
cltd
sbb
push
enter
sub
out
mov
outsl
call
push
adc
in
mov
xchg
inc
lock
insb
fbld
mov
aad
add
std
jo
sarl
jge
fs
dec
loop
pop
andb
rcrb
or
xchg
push
gs
inc
mov
cli
sub
arpl
and
enter
out
lcall
pop
mov
and
les
movsb
or
rclb
out
cmp
xor
mov
lret
negl
pop
mov
loopne
repnz
push
and
repnz
sbb
sub
fsubr
cmc
adc
sub
jno
fsubs
mov
lds
push
inc
and
aaa
shll
lret
rolb
mov
or
test
mov
pop
sub
mov
addr16
xor
in
xchg
inc
pop
push
adc
ffree
mov
ja
and
mov
mov
pop
nop
movsl
iret
loop
xchg
cwtl
mov
adcl
mov
dec
or
adc
mov
adc
pop
repnz
cwtl
push
xor
in
lock
push
xchg
mov
xor
jne
in
shl
lret
sub
cmp
pusha
pop
ljmp
push
dec
cmp
and
mov
out
lods
and
loopne
or
outsl
xor
jg
add
mov
push
lods
adc
xor
xchg
cmp
dec
lret
push
pop
jmp
ret
pop
loop
inc
dec
sbb
loop
cmpsb
jb
push
pop
and
sub
lods
and
bt
and
adcl
and
cmp
jb
fcoms
push
fs
xchg
jle
inc
xchg
rcr
js
test
lret
mov
mov
or
lds
test
inc
adc
mov
add
add
jb
mov
jmp
lds
adc
xor
mov
adc
or
mov
int3
int
insl
jne
imul
shlb
sar
push
adc
stos
pop
push
jmp
jp
daa
cmp
jmp
out
out
mulb
xor
ss
call
repnz
cmp
xchg
test
test
jno
pushf
aad
imul
fwait
add
mov
push
in
push
xlat
xchg
fstps
aaa
in
sbb
push
out
jnp
xchg
shlb
push
mov
and
in
add
jns
imul
dec
fwait
pop
dec
pop
das
sbbl
xchg
xchg
jecxz
ss
push
mov
lea
incl
xchg
outsb
cmc
scas
mov
add
decl
int
mov
and
repz
int3
stos
cmp
mov
mov
adc
mov
lahf
add
mov
sahf
sub
sbb
add
jb
imul
jb
das
fwait
inc
and
dec
xorl
fstp
push
daa
mull
mov
or
mov
lock
cli
adc
call
stos
pop
nop
data16
push
out
lods
movsb
test
jo
aad
ja
push
out
sub
cmp
movsb
enter
mov
pop
in
push
arpl
popf
lcall
addr16
ret
fcomp
xchg
push
jo
push
mov
xor
cwtl
nop
lcall
leave
sub
cmpsl
addl
pop
in
daa
mov
push
stos
cmpsb
cmp
pop
xor
sub
out
std
dec
aam
pop
sbb
push
js
dec
imul
jnp
mov
and
ret
incb
mov
shlb
inc
xor
pop
xchg
lret
mov
or
xor
pusha
lahf
xlat
inc
std
adc
into
addr16
das
mov
leave
xchg
popa
push
stos
inc
data16
push
sbb
outsl
cltd
rolb
or
dec
in
decb
fnstsw
sbb
loope,pn
mov
mov
mov
cld
jbe
sub
das
jl
sub
test
dec
arpl
nop
lods
or
or
mov
mov
icebp
and
push
mov
mov
mov
xor
inc
jl
xchg
pop
xchg
mov
sbb
int3
dec
lahf
sbb
pop
pop
push
sbb
ror
popa
daa
add
dec
aad
xchg
push
iret
xchg
fcoml
cmp
push
push
jb
addl
or
mov
dec
sbb
push
cmpsl
pop
unpckhps
xor
addr16
sub
add
cmp
xor
pop
mov
jle
cmpsl
sbb
aaa
or
aas
lret
xchg
jns
rcr
mov
test
xchg
adc
and
xchg
mov
xchg
test
pop
xchg
push
mov
outsl
push
push
jae
dec
inc
je
jp
add
push
sbb
jg
in
or
imul
subl
xchg
neg
add
test
mov
jae
cli
loopne
lods
lcall
fsubr
repz
jbe
mov
mov
push
popf
sbb
stc
imul
popa
das
add
lcall
sbbb
sbb
add
add
sbb
add
add
and
add
add
sub
sbb
add
add
das
add
cmpsl
ss
and
mov
jl
inc
xchg
jg
or
push
cld
mov
xor
repnz
add
dec
into
pmaxsw
xor
add
arpl
ret
or
sub
in
repnz
mov
testl
jl
push
xchg
mov
data16
iret
pop
pusha
daa
outsb
and
mov
nop
sahf
and
inc
leave
mov
pop
ror
imul
movsl
mov
scas
cld
push
mov
das
push
push
mov
sub
loope
pusha
adc
stc
add
cmp
iret
xor
test
out
cs
jne
cmp
loop
dec
pop
adc
out
jns
xor
sub
add
ds
stc
call
mov
jns
xchg
mov
ss
fbld
jne
ljmp
xchg
pusha
mov
pop
sbb
sub
xor
push
fcmovu
mov
je
sbb
mov
mov
xor
rcrl
insl
jl
lock
clc
jno
fucom
add
fisttps
push
dec
inc
fmulp
jns
cs
inc
push
popa
lret
inc
pop
mulb
je
mov
push
in
add
test
push
or
inc
out
les
outsb
in
sbb
aad
mov
cmp
mov
ljmp
dec
jge
cmpsb
imul
jg
mov
inc
lret
dec
pushf
fwait
sub
cmp
sbb
cmp
mov
mov
bound
out
pusha
fcoms
fld
pop
ffreep
les
lret
std
pusha
int
int
dec
inc
jb
dec
addr16
out
push
mov
add
ljmp
or
call
or
mov
mov
aam
addb
xchg
shrl
push
sar
es
rcll
mov
fwait
xchg
loopne
mov
mov
or
fldl
mov
mov
mov
mov
aam
aam
and
int
loopne
cmc
cmp
mov
push
das
in
inc
or
fstps
iret
cmp
mov
xchg
mov
dec
sbb
mov
andb
mov
bound
jae
imul
imul
push
idivl
notl
jae
idivl
cwtl
and
negl
and
daa
cmp
in
insl
fmuls
mov
dec
repnz
cmp
std
addr16
cmp
lods
jl
mov
aaa
pop
jbe
ficompl
sbb
mov
cmp
xor
pop
jge
loop
inc
cmp
and
pop
xor
aad
addr16
cmpsl
cmp
adc
inc
stos
pop
push
out
in
das
add
jge
mov
push
xor
in
mov
fistps
adc
and
sti
jle
fcoms
aaa
jecxz
xchg
mov
push
xor
cmp
es
jle
lods
inc
add
or
imul
xchg
dec
ret
cltd
out
mov
mov
stc
stos
lret
and
sub
daa
ficoms
out
jle
cmp
fidivrs
push
and
lret
jmp
cwtl
dec
sub
inc
jge
xor
iret
mov
sbbb
aad
jecxz
lret
sub
mov
shll
adc
outsl
div
js
push
test
mulb
fsubrl
push
lods
jmp
roll
mov
sbb
cmp
xchg
cmpl
or
dec
mov
mov
adc
mov
cld
add
and
inc
jae
jge
inc
dec
cmp
fneni(8087
ret
in
cld
xchg
mov
testl
adc
rorb
scas
mov
jne
movsb
push
js
mov
xor
test
jo
inc
sbb
test
es
andb
unpckhps
shlb
inc
repz
popf
sbb
imul
push
xor
mov
jo
mov
popa
aaa
aad
roll
sbb
lahf
in
in
push
sbb
xchg
dec
xchg
pop
jp
in
mov
mov
push
sbb
mov
fs
pop
xor
scas
out
dec
cwtl
xor
mov
sarl
test
adc
sahf
ret
daa
adcl
mov
jnp
insb
sti
adc
stos
test
fs
mov
insb
fldt
or
pushf
repz
xor
adc
dec
outsl
cmc
test
pop
jnp
push
sbb
stos
push
pop
cli
hlt
push
inc
andb
test
fstpl
or
and
ds
or
jp
and
or
daa
or
sbb
testb
mov
adc
sub
or
idivl
dec
mov
push
inc
pushf
xchg
jae
inc
lock
aas
jp
adcl
mov
lock
pop
mov
mov
dec
mov
push
pushf
sbb
idivl
xlat
das
stos
arpl
popf
loopne
cmp
loopne
or
dec
mov
inc
jns
xor
mov
or
sbb
pop
enter
sbb
loop
es
lds
cmpl
cwtl
imul
cmp
inc
ret
sub
xchg
jge
xchg
cmc
mov
outsl
mov
adc
mov
push
das
adc
outsl
into
sbb
jbe
dec
xor
test
mov
adcl
sti
or
xor
and
nop
xor
mov
or
pop
cli
inc
dec
cmp
mov
cwtl
jg
jo
jecxz
push
or
icebp
inc
cs
push
test
je
clc
push
bound
pop
inc
add
and
push
push
int3
testb
push
mov
sti
in
in
pop
jmp
gs
or
cs
push
sub
and
ss
sarb
sub
adc
data16
or
push
adc
adc
or
fistpl
xor
mov
push
insl
and
lahf
das
push
cmc
movsl
lahf
and
and
clc
lock
mov
dec
xchg
cmc
lea
xlat
push
push
adc
int
jno
divl
or
push
int
dec
mov
insl
out
adc
hlt
push
cmpsb
jecxz
push
push
mov
sbb
je
insb
or
pop
sbb
sti
in
pop
repnz
lret
out
jb
or
xchg
mov
or
mov
xor
adc
sbb
inc
outsb
push
fcom
ret
shrl
inc
gs
loope
pop
lods
mov
test
sbbl
icebp
adc
inc
ljmp
push
push
int3
pop
ja
daa
je
dec
and
fdivs
aaa
adc
add
leave
xchg
push
fsubs
xlat
inc
scas
fidivs
add
mov
inc
dec
fucomp
test
sbb
cmpsb
add
adc
jmp
sarl
outsb
cli
dec
lods
or
xor
mov
out
imul
loop
jno
cmpsl
call
push
in
out
add
push
mov
cmp
lods
or
mov
rclb
xor
movsl
sbb
jb
fisttps
ljmp
inc
mov
push
cmpsl
cmp
sbb
ret
cld
sbb
les
cmp
stos
popa
fimuls
jbe
cmp
fwait
pop
out
sub
pop
xchg
xchg
sub
sti
or
rcrl
push
loope
push
add
inc
stos
cmc
pop
arpl
or
ffree
push
jae
jmp
mov
inc
sub
inc
enter
inc
adc
xor
dec
mov
pushf
sbb
pop
sbb
push
pop
out
xor
inc
xorl
outsl
sub
cwtl
lcall
pop
push
shlb
loopew
repz
jbe
movsb
movsl
repnz
or
xorl
filds
sbb
dec
mov
xchg
and
pop
lea
jl
lods
mov
cltd
lcall
in
mov
adc
jge
cmp
dec
pop
jmp
mov
out
pop
or
sbb
das
mov
sub
sub
mov
dec
dec
sub
cmc
jmp
jae
jno
mov
xchg
outsb
loop
clc
mov
call
daa
out
jmp
xchg
add
es
inc
outsl
ljmp
push
addr16
aam
xchg
cli
addr16
add
sahf
add
add
add
push
addl
add
add
push
addb
add
add
test
enter
push
and
cmp
xlat
into
mov
push
add
jmp
scas
pop
cld
nop
movsb
imul
and
rolb
packuswb
fistl
popf
loop
xlat
stc
fbld
xchg
lret
fstpl
ljmp
pusha
lock
lret
scas
adc
inc
insb
jg
hlt
add
push
out
adc
push
cltd
mov
loopne
mov
cmpsl
pop
mov
or
mov
out
adc
inc
or
sbb
lock
dec
std
roll
pop
ds
rcl
inc
and
jle
out
mov
mov
mov
mov
xchg
cli
and
lds
ljmp
lahf
jecxz
mov
in
test
or
xchg
gs
add
inc
daa
mov
jns
mov
inc
push
mov
es
dec
ljmp
mov
orl
pop
push
jno
cmpsl
inc
jl
push
jb
mov
mov
pop
add
and
es
cmc
aam
and
pusha
jns
xchg
xchg
fldenv
inc
imul
lock
repz
orl
or
loopne
pusha
sbb
arpl
mov
mov
leave
xchg
scas
push
pop
popl
xchg
push
sbb
in
out
pop
mov
jbe
xchg
push
outsb
dec
cmp
mov
cmp
addr16
mov
sti
sbb
dec
sbb
or
repnz
ret
mov
jns
or
cli
jg
ret
push
lret
int
fldenv
repz
dec
sub
jno
xchg
cmp
out
iret
call
data16
icebp
out
loop
adc
adc
dec
std
jno
les
or
lret
fsubl
jne
mov
jle
shll
in
jo
scas
js
cmp
xchg
adc
popf
mov
repz
lret
pop
int3
pop
lret
aad
pusha
lret
adc
in
fdecstp
adc
out
cmp
xor
sbb
out
in
mov
mov
pop
add
inc
xchg
gs
cmc
mov
sahf
andl
pop
or
jle
push
outsb
inc
mov
sbb
gs
inc
push
mov
repnz
iret
push
mov
repnz
lret
hlt
mov
xchg
repnz
mov
subl
fcomps
add
nop
add
lcall
fidivl
mov
inc
mov
xchg
jle
xor
lock
call
mov
jb
clc
xchg
sbb
push
sbb
nop
mov
ret
add
sbb
hlt
mov
ret
sub
xchg
xor
mov
in
push
jnp
adc
enter
adcb
xlat
or
jge
pop
mov
loope
jmp
sbb
inc
push
pop
pop
aam
cli
jnp
cmpb
idivl
xchg
fsubrs
lods
pop
movsb
jno
dec
lods
in
add
lahf
clc
fnstcw
jns
stc
mov
and
loop
insb
andb
push
subb
into
push
ds
repnz
mov
dec
and
pop
sbb
mov
inc
int3
out
mov
adc
mov
sbb
je
sti
adc
ret
iret
frstor
cmp
test
repz
jmp
cmp
arpl
sub
test
and
aaa
cmp
sub
mov
loop
lods
ret
outsl
xchg
lods
repnz
dec
mov
sbb
cmp
js
ret
inc
adc
mov
xor
and
xchg
mov
mov
xlat
add
xlat
cwtl
or
test
cmpsb
cmp
lock
jb
inc
addr16
shll
and
addb
das
or
insb
dec
popf
inc
pop
xchg
pop
adc
inc
adc
sti
push
loope
mov
je
jl
insl
jge
rep
test
push
cmp
pop
mov
xchg
lretw
rcl
fnop
sbb
inc
jmp
push
mov
mov
xor
gs
mov
pop
movsl
push
lods
cmp
or
add
dec
repnz
sti
lea
sarb
pop
and
scas
add
pop
stos
stos
fwait
mov
mov
fisubrl
ja
test
xchg
dec
fwait
pop
andl
sbb
gs
cmovne
xchg
push
mov
adc
mov
outsl
lahf
push
inc
not
popf
sbb
adc
push
stc
add
xchg
mov
push
outsb
or
movsl
daa
cmp
xor
cmp
insb
xor
or
cli
or
or
lds
repnz
popf
mov
popf
ret
repnz
es
sub
outsl
outsb
aam
mov
movsb
mov
jae
inc
mov
int
movsl
xor
mov
call
clc
or
lds
lods
dec
jo
imul
out
pop
inc
scas
adc
dec
pushf
xor
test
xchg
add
aaa
mov
xchg
aas
adcb
out
xor
pop
adc
push
icebp
shrl
loop
popa
shrl
mov
cmpsl
xor
dec
fwait
pop
xchg
dec
daa
cltd
push
cltd
jnp
sub
bound
ljmp
test
mov
out
test
mov
push
jb
push
fbld
sarb
add
dec
cs
popf
mov
or
jle
dec
test
mov
cmp
or
cmp
lahf
insl
pusha
xor
icebp
pop
fnsave
shlb
pop
add
mov
div
xor
and
and
mov
mov
cmovbe
test
test
aam
jl
popa
jl
loope
or
pop
pop
mov
xlat
mov
shrl
shrl
cmp
or
or
mov
pushf
jbe
into
ja
adc
cwtl
jp
enter
sub
pusha
int3
push
adc
or
idiv
bound
jge
sub
mov
in
divl
cli
xchg
rorl
test
lods
jo
push
jno
in
xlat
sub
jmp
jno
in
aam
in
jo
in
jo
dec
jno
in
roll
jo
dec
jno
in
into
sub
loopne
jo
dec
jno
push
lret
push
push
push
lods
push
push
xorl
into
fcmove
jmp
add
push
addr16
mov
mulb
lock
and
mov
mov
mov
fadds
call
and
test
test
iret
pusha
jl
stos
jl
pop
lds
pop
mov
mov
push
shrl
shrl
add
or
into
popf
jbe
sahf
jbe
fnsave
jp
cwtl
jp
jp
aaa
mov
aaa
pusha
jo
pusha
push
jb
push
les
les
cld
jp
push
mov
push
mov
mov
mov
sub
test
jo
in
jo
sbb
sub
mov
jo
sbb
in
popf
sub
scas
in
jo
pop
jno
in
lcall
adcl
in
xchg
sub
test
jno
push
xchg
push
push
push
jbe
push
cmpl
into
ja
into
jmp
jmp
sbb
xor
and
and
adc
lock
lock
mov
mov
aam
test
push
test
test
cwtl
pusha
jl
jae
or
or
sbb
mov
ror
shrl
shrl
into
cs
or
into
popf
jbe
popf
jbe
cmpsb
jbe
jp
cwtl
jp
lahf
jp
aaa
xorb
cmp
pusha
push
cmp
les
jecxz
in
push
cmp
and
xchg
out
addl
inc
int3
and
out
ss
or
test
sub
add
add
xor
add
dec
jo
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
