mov
push
mov
hlt
jg
clc
adc
mov
insl
gs
xchg
lea
fst
int
std
cmc
in
in
sbb
add
pop
jp
fidivrs
bound
cltd
mov
mov
enter
out
imul
dec
std
dec
jae
pushf
push
xchg
sbb
add
movsb
stos
ret
sti
repz
repz
stos
daa
xor
js
jge
lock
sub
lock
mull
adc
adc
dec
inc
lret
jecxz
cwtl
adc
add
pop
int3
inc
jo
call
mov
je
js
inc
lret
iret
mov
into
jnp
out
inc
sbb
rsm
cmp
das
sbbl
in
jp
outsl
lcall
scas
push
divl
pop
sbb
or
inc
adc
push
xorb
xchg
add
aam
push
cld
sahf
push
push
outsb
add
push
mov
jge
insl
adc
ljmp
popa
cmc
shll
loop
into
sub
pop
lea
pop
cld
mov
bound
sub
xchg
or
sbb
loope
push
test
fdivl
sub
jne
addr16
jnp
jmp
adc
int
fidivs
cltd
sbb
dec
pop
jnp
fisttpl
lock
enter
adc
scas
xor
mov
adc
outsb
sub
pop
mov
pop
nop
inc
mov
nop
bound
and
sub
pop
xor
pop
jnp
icebp
jmp
nop
push
push
and
mov
shlb
xchg
push
ljmp
dec
inc
jge
out
sbb
nop
cmp
and
insl
movl
mov
push
jle
cmp
cmpsb
pusha
xor
mov
jl
lods
movsl
stos
int3
lock
in
in
or
jp
jmp
xchg
fists
int
sbb
gs
push
pop
push
cmpsb
test
repz
dec
pushf
dec
out
xor
in
jo
into
lcall
setg
repnz
pop
rorb
xor
iret
cmp
andb
arpl
xchg
mov
sti
push
sub
xor
cld
inc
test
inc
mov
insb
ljmpw
mov
pop
ror
sub
mov
or
fistpl
insl
scas
in
adc
push
push
push
sbb
in
out
outsl
movsl
int3
jnp
ret
data16
das
mov
pop
idivb
and
push
imul
inc
dec
jae
mov
insl
jae
lret
sbb
push
mov
cmpsl
xlat
out
push
xor
repz
or
nop
mov
cmp
hlt
enter
aam
cld
sbb
jg
xor
jno
stc
aam
lea
push
insl
popf
xchg
mov
popa
repz
adc
dec
leave
out
mov
inc
adc
sub
js
mov
scas
bound
pop
add
bound
iret
dec
dec
or
pop
xor
pop
push
lds
les
mov
xchg
sbb
dec
hlt
cmp
insb
stos
mov
lods
in
rolb
push
mov
push
push
xchg
fisttpl
imul
lods
jmp
jb
cmc
xor
sbb
stos
and
adc
push
mov
xchg
mov
in
adc
loopne
popa
xchg
out
pop
aas
aaa
mov
sub
dec
inc
pop
add
mov
aaa
icebp
mov
mov
and
rclb
jecxz
dec
or
mov
mov
pusha
adc
sahf
sbb
loope
hlt
in
in
sub
add
adc
mov
xchg
mov
cmpsl
and
sub
vpcmpeqb
sbb
or
jo
pop
jae
mov
cwtl
xchg
push
lds
xchg
add
mov
pop
jg
jecxz
loop
adc
daa
lock
and
mov
ror
sar
sub
ss
push
xchg
call
cmp
sub
jns
cmpsb
into
imul
mov
nop
fiaddl
ljmp
loopne
and
or
xor
push
iret
push
out
out
pop
lea
leave
sar
pop
push
dec
inc
sub
cs
mov
aam
les
xchg
mov
mov
push
dec
inc
xor
dec
pop
lea
pop
mov
fistpll
outsl
addr16
ret
pop
mov
ja
push
lcall
cmpb
insb
fs
adc
add
xor
popa
cltd
or
lock
jge
insl
inc
shll
adc
adc
add
out
pop
fnsave
ss
std
cmc
in
in
nop
mov
xchg
lods
dec
inc
jp
xchg
add
aas
lahf
popl
cmp
sub
pop
popl
fbstp
cmp
sub
mov
xor
and
push
dec
call
jp
imul
adc
out
xor
and
fidivrs
xor
imul
aad
pop
std
sub
or
clc
jne
inc
push
push
scas
cmpsl
iret
insl
loope
adc
push
dec
add
xor
and
xchg
cmc
and
mov
pop
jbe
push
push
ds
xor
and
in
pop
subb
imul
pop
popa
ret
aas
aaa
gs
cmp
lods
movsl
fst
int
test
in
rcrb
xor
and
cmp
push
out
pusha
inc
dec
addr16
xor
dec
pushl
xor
sbb
or
cmp
enter
inc
pop
xor
sbb
mov
jmp
inc
xor
xor
std
cmc
lret
push
rorl
js
push
dec
inc
mov
mov
jl
xor
lret
stos
ljmp
jno
popa
cltd
cmp
mov
stc
icebp
fmuls
ror
ds
push
dec
inc
jle
outsb
data16
in
inc
popa
insl
js
xchg
pop
mov
clc
cwtl
nop
mov
adc
lock
or
adc
lret
cltd
xchg
mov
or
dec
ds
push
push
ds
pop
pusha
dec
inc
fs
inc
ret
repz
cmp
imul
arpl
popw
aas
aaa
das
dec
mov
sub
sbb
in
jo
sbb
iret
pushl
bound
jl
insb
inc
shrb
mov
pushf
leave
mov
push
loope
movsb
int3
dec
jnp
dec
and
add
leave
es
ret
ds
pop
sub
cmp
aad
lds
push
jb
pop
push
pushf
inc
jp
push
lods
xchg
mov
mov
and
jns
loop
adc
xor
and
ror
call
cmpsl
cli
fwait
xchg
mov
lods
fmull
add
push
popf
insb
andb
push
dec
add
pop
pop
dec
cld
pop
icebp
scas
lock
negb
loope
stos
or
cmp
pop
lahf
jns
jns
jo
cltd
xchg
addl
ror
sar
jmp
ds
push
test
jle
outsb
loopne
xchg
mov
mov
enter
out
out
pop
sysret
ds
das
mov
outsl
addr16
push
popl
pop
dec
mov
adc
xor
xor
and
xlat
enter
lods
jecxz
loop
std
in
jg
aam
into
cld
add
mov
cmp
gs
shlb
je
push
std
das
or
cmpsl
outsb
fdivl
and
les
mov
pop
jb
arpl
pop
into
xor
imul
repz
lahf
mov
push
jno
int
fdivr
jnp
arpl
lret
xchg
pop
jmp
test
sub
inc
sub
sbb
je
clc
lds
mov
aas
cmp
in
icebp
test
add
cmp
jl
dec
sbb
int3
test
cmpl
mov
xor
dec
xor
pop
sub
out
adc
sti
and
fdivs
mov
fisubrl
dec
push
insl
test
push
repz
dec
lds
add
scas
das
in
into
mov
pop
push
mov
jae
mov
insb
inc
je
pop
outsb
nop
add
jb
cmp
and
orl
sub
sbb
or
popf
sub
outsl
mov
push
sbb
jb
pop
sbb
mov
pop
push
mov
jg
popf
les
stc
jns
sti
mov
outsb
sub
dec
inc
mov
pushf
xchg
sub
inc
fdivr
test
in
and
jmp
push
add
std
sbb
stos
fnstcw
mov
mov
notl
sbb
lock
jae
movsl
jp
push
mov
std
push
xor
nop
in
dec
adc
imul
cs
in
rcl
mov
adc
lret
add
pop
sub
sarb
xchg
rcr
cwtl
cs
push
mov
movsl
ja
mov
leave
fbld
dec
sets
daa
mov
leave
fcomps
insb
aas
mov
dec
cmp
dec
iret
pushf
or
adc
test
pop
adc
pusha
lret
and
cltd
mov
call
cmc
xor
jmp
sbb
mov
adc
aam
mov
addl
push
out
push
or
and
out
adc
cmp
sub
lds
pop
sub
dec
cmp
daa
int3
daa
jne
inc
fnstenv
icebp
stos
int
or
enter
push
loope
sub
jnp
ss
sub
cmp
or
fisttpl
xor
popf
xchg
arpl
cmp
cmpl
pushf
push
pop
pop
out
lcall
mov
bound
pop
loope
inc
or
or
push
sbbl
jecxz
sarb
mov
dec
mov
std
stos
sar
imul
loope
jb
inc
add
fistps
ljmp
hlt
mov
xor
lret
out
push
xlat
stc
out
jp
sub
inc
pop
sub
jnp
into
mov
xchg
int3
iret
loope
repz
loop
pushf
loop
jne
lds
scas
add
jno
inc
jmp
and
push
sbb
gs
ret
int3
xchg
inc
mov
cmc
mov
push
xchg
pop
les
cmp
icebp
xorl
dec
inc
inc
divb
stos
xor
adc
mov
xor
aaa
je
scas
orl
popa
xor
addr16
mov
cmp
push
or
shll
sbb
cmc
adc
and
cmp
ja
repnz
call
mov
or
shl
mov
or
movsl
cmovge
in
sub
es
pop
pop
dec
scas
fldlg2
lret
dec
xchg
cmc
outsb
repz
pop
mov
sub
mov
xor
jne
lcall
imul
and
jo
or
and
mov
stc
push
decl
in
or
push
adc
xlat
dec
add
in
jl
bound
mov
xor
xchg
xchg
ret
jmp
fisubs
outsb
inc
adc
xchg
cs
mov
cmc
aaa
pusha
ficompl
imul
out
sti
mul
mov
adc
fmuls
dec
lds
pusha
mov
movsb
mov
in
jg
shlb
and
dec
jae
loope
pop
lods
or
mov
es
xchg
mov
mov
lods
std
cld
and
sub
fidivrs
mov
push
add
ss
pop
push
ret
subl
or
into
cmpsl
mov
mov
lea
bound
stc
or
sub
in
or
adc
cs
mov
jle
enter
jmp
push
adc
rorb
sbb
sub
or
out
jge
sub
push
fisubrs
pushf
inc
mov
sbb
pop
mov
mov
jge
dec
cmp
loope
xchg
push
jp
xlat
inc
popf
xchg
shr
aaa
inc
stc
adc
popf
lock
int3
data16
inc
clc
xor
add
and
dec
dec
add
dec
mov
in
push
pop
dec
dec
repnz
repz
mov
cmp
adc
lret
push
fwait
clc
pusha
fwait
lods
popf
sahf
and
mov
shr
add
test
aad
sub
or
rcrl
lahf
aas
fldcw
mov
sub
or
push
sub
adc
mov
call
mov
mov
or
mov
test
jg
inc
fidivrs
cmpsb
inc
add
mov
mov
cmpsl
fcmove
dec
leave
cld
cltd
sub
add
and
icebp
inc
sub
mov
sub
push
scas
stc
dec
mov
adc
lahf
push
jns
jmp
and
mov
idiv
pop
imul
stc
pop
shrl
scas
shll
fisttpl
sbb
icebp
lods
stc
cmp
decl
mov
dec
cmpsb
mov
les
out
push
popa
sub
adc
or
pop
fstpl
in
lahf
jge
imul
pop
pop
mov
int
xchg
xor
push
pop
dec
sbb
mov
adc
popf
in
mov
ficoml
mov
pop
push
gs
movsl
jne
lock
adc
sub
arpl
mov
lock
push
sbb
sbb
scas
pop
mov
mov
dec
or
out
cmp
xchg
cld
jns
mov
cwtl
xor
mov
outsb
out
insl
inc
arpl
sbb
mov
xchg
sub
aas
sbb
cs
sub
into
pop
xchg
cld
iret
lahf
mov
filds
inc
push
ds
xor
test
fdiv
jmp
insb
jl
inc
jo
add
divl
mov
fdivrl
iret
aaa
mov
dec
push
in
pushf
pop
cmp
out
push
sahf
adc
add
push
cltd
mov
push
js
in
je
pop
push
in
gs
pop
hlt
or
lret
cmp
sbb
out
fdivl
sub
jg
cmp
loope
mov
and
fcmovb
pop
pop
xchg
gs
mov
pop
cltd
xor
rorl
xchg
mov
arpl
adc
loope
jecxz
dec
inc
jle
outsb
sbbb
mov
ljmp
or
mov
insl
into
stos
mov
les
pop
sbb
push
test
add
cmp
shrb
call
sti
add
jecxz
inc
cltd
jp
cmpsb
or
out
cmp
stc
scas
push
dec
dec
pop
adc
push
or
push
mov
sub
int3
outsb
nop
negl
andl
outsb
pop
popa
inc
push
fptan
scas
push
imul
ds
test
das
fsubr
sub
xchg
xchg
dec
mov
insb
movsb
jl
sub
inc
xor
aaa
push
iret
mov
aaa
enter
in
pop
stos
rol
add
dec
fimull
jo
or
pop
in
xchg
pop
nop
sub
fs
lea
sbb
pop
mov
pop
lea
cmc
test
or
cltd
iret
ror
lock
mov
into
ss
rorb
jg
in
popf
movsb
mov
adc
xchg
mov
subl
cli
jecxz
je
xor
shl
mov
xor
sub
clc
adc
xchg
aas
js
and
cltd
jmp
xchg
dec
cmp
icebp
mov
loop
jmp
ret
xchg
push
cld
add
lods
inc
pop
gs
push
call
sub
mov
shlb
mov
xor
mov
in
arpl
push
or
push
mov
mov
pop
dec
scas
cli
adc
push
dec
mov
inc
ds
into
aam
sbb
popf
dec
scas
ror
test
xchg
or
mov
bound
cmc
pop
xchg
xor
adc
push
ret
mov
adc
aaa
push
scas
add
adc
shll
jle
pop
cmp
and
mov
mov
jno
jo
mov
cmc
cmp
mov
inc
mov
out
adc
and
pop
std
sub
add
lock
xchg
jno
call
mov
cwtl
or
push
or
nop
sub
jno
mov
fsubrl
daa
in
jne
cmp
xor
mov
or
ret
pushl
add
test
sub
aad
inc
and
das
adc
clc
scas
and
iret
adc
outsb
jns
mov
xchg
int
push
push
jmp
bound
add
stos
fsts
add
push
jge
clc
ret
rorl
mov
popf
daa
scas
fsubp
sub
dec
or
aas
movb
mov
in
ljmp
sbb
xchg
out
jmp
and
sub
loopne
cs
and
cs
dec
inc
xor
push
fwait
jp
stos
in
sub
sbb
mov
mov
mov
jb
mov
clc
int
mov
lds
icebp
movsb
mov
outsl
loop
jno
insl
dec
mov
push
dec
push
int3
mov
xor
addb
nop
jns
xchg
loopne
cmp
and
mov
arpl
popa
jnp
cmpsl
mov
test
test
orl
sbb
hlt
adc
out
xchg
mov
fwait
jno
clc
lahf
loopne
dec
xor
jle
lods
and
xchg
in
and
xchg
dec
add
cltd
les
jns
jne
lret
push
dec
dec
dec
pop
pop
mov
xchg
scas
in
jne
xchg
xor
pop
push
cmp
mov
insb
xorl
dec
add
rep
push
adc
jns,pn
and
mov
mov
jno
pop
hlt
inc
popa
out
repnz
cld
call
jns
out
movl
cmp
lea
cmc
fisubrl
outsb
mov
aam
les
cmp
dec
shlb
inc
and
sub
and
jo
out
sbb
mov
fwait
jp
cs
test
hlt
or
push
rorl
stc
xlat
lea
pop
call
negb
cmovl
fwait
andl
push
lret
es
cld
scas
dec
mov
inc
repz
cmpsb
mov
adc
in
pop
rorb
cmp
insb
scas
jle
add
cmp
sub
dec
jmp
xchg
dec
push
or
scas
or
cli
loop
fcompl
push
ffreep
xchg
dec
cmp
cmpsl
jge
inc
xchg
scas
mov
ret
cld
in
repz
and
ja
cmpb
insb
dec
lock
push
lds
adc
sbb
movsb
and
mov
cld
pop
out
cmp
mov
pop
cmp
jge
lret
daa
or
mov
lret
fldl
out
or
pop
js
icebp
insl
push
stc
push
bound
cmpsl
js
or
cmp
in
dec
fimull
cmp
fwait
test
outsb
inc
xchg
or
push
gs
mov
fwait
dec
push
mov
xor
bound
ljmp
add
movsl
mov
and
divb
jb
popa
mov
xorl
mov
and
in
scas
or
sbb
roll
push
and
pop
mov
sbb
dec
fldt
loopne
mov
cli
dec
out
cmp
aad
test
dec
mov
mov
fs
aam
push
loopne
push
add
data16
ret
and
js
lods
mov
xchg
lods
add
lods
mov
xchg
cmp
pop
loop
adc
cmp
mov
cmp
hlt
jns
js
add
fistpll
ret
mov
cmc
leave
cmp
xor
adc
pop
mov
or
lret
jmp
movsl
mov
push
ret
jnp
add
push
pop
xor
or
xlat
daa
jecxz
fcomip
pop
lahf
mov
or
xchg
cmpsb
jno
pop
cltd
dec
lods
insb
shlb
filds
fistpl
scas
inc
xchg
notb
cld
js
jle
into
adc
and
jbe
ljmp
jp
jbe
jl
and
movsb
scas
dec
pop
shlb
icebp
out
sbbb
xor
int
js
jge
xor
int3
mov
std
fstpt
in
mov
sub
adc
mov
inc
mov
lods
xchg
pop
ds
shlb
mov
test
loop
jo
mov
jl
lods
add
into
xorb
add
rcrb
daa
inc
rcll
subl
out
cli
pop
push
rcrb
or
sub
xchg
lcall
outsl
movsb
xor
imul
cltd
xchg
lret
dec
or
into
daa
and
imul
xchg
sub
xchg
add
mov
in
add
lret
xor
jg
or
jo
mov
adc
mov
insb
mov
push
dec
cltd
ror
rclb
imul
ret
out
sbb
in
jbe
test
dec
xchg
divl
xchg
cmp
add
call
xchg
pop
shr
idiv
xor
push
cld
lods
das
ficoms
sbb
leave
pop
or
fisttps
bound
push
inc
sahf
subl
int3
insl
mov
dec
ret
sub
mov
imul
jp
adc
leave
jecxz
std
adc
cmp
mov
push
push
mov
sub
ljmp
es
ja
cmpsl
pusha
pop
adc
call
mov
adc
xor
cmp
and
xor
into
and
arpl
mov
pop
rcl
adc
and
stc
out
mov
vmread
ja
std
shlb
sahf
mov
xlat
stc
shrb
popa
cmp
cmp
cs
test
sub
negb
aad
mov
outsl
xor
sbb
in
jne
sbb
adc
xchg
or
push
mov
shl
mov
nop
test
mov
mov
mov
into
xchg
popf
lret
add
jb
ds
out
add
ret
push
cmp
pop
xor
add
cmp
imul
pop
push
mov
pop
or
test
aaa
and
lret
pop
or
aam
lret
mov
mov
and
adc
loope
js
loope
in
adc
int
jge
cmpb
push
pop
sub
leave
mov
repz
fsubp
xor
mov
sub
emms
popf
xor
sub
call
aas
pushf
daa
or
jbe
mov
aam
mov
mov
fsubrp
or
test
je
imulb
xchg
out
movsb
adc
jns
outsb
fs
jge
mov
mov
push
cmp
scas
les
and
mov
ds
repz
xor
sub
stos
mov
add
xor
rorl
scas
scas
adc
mov
xor
insb
imulb
jg
pop
push
ret
inc
ss
push
xchg
lret
mov
cmp
dec
xchg
mov
xor
test
repnz
mov
inc
pop
adc
jmp
adc
or
mov
lods
sbb
inc
sti
mov
jns
int3
test
push
pushf
cmpsl
dec
aad
mov
scas
ficomps
daa
sbb
inc
outsb
fsubrl
add
pop
sahf
out
and
out
mov
mov
or
mov
or
inc
inc
mov
out
scas
xchg
jae
pop
aas
mov
sbb
jmp
mov
jl
adc
sub
push
movsl
test
enter
shlb
push
stos
adc
mulb
jg
sub
cltd
out
lret
pop
in
clc
sub
scas
and
test
mov
pop
mov
movsb
fdivp
nopl
das
xlat
jp
cmp
add
mov
mov
cld
mov
sarl
sbb
jo
dec
clc
lcall
add
fs
jecxz
mov
cwtl
test
sub
icebp
insb
push
adc
add
sbb
lea
add
imul
repnz
std
pop
sbbl
aaa
test
mov
sub
or
inc
add
jmp
pop
roll
jns
pop
push
aaa
inc
cs
icebp
cmc
mov
mov
pop
push
push
mov
loope
add
leave
add
pop
or
aaa
testl
repnz
enter
scas
mov
mov
pop
add
aas
andl
pop
mulb
fs
xchg
sbb
adc
xchg
outsb
stc
inc
sbb
jl
xchg
push
sbb
xchg
sbb
ja
aas
pop
popa
push
jmp
mov
pop
bound
xor
inc
repnz
xor
and
jg
ja
pop
call
xlat
jns
cmp
sub
fisttpl
pop
cmc
es
or
jb
cmp
push
pop
jns
fxch
cltd
adc
or
or
mov
imul
das
call
mov
mov
xchg
mov
xor
cli
dec
pop
mov
stc
andl
es
loope
jg
xorb
xchg
popa
mov
push
fldenv
adc
lods
fsub
aad
add
push
sub
sub
sbb
push
inc
dec
outsl
and
jmp
sbb
push
inc
sbb
int
test
push
lds
das
lods
jp
cmp
lcall
sub
shlb
xchg
hlt
mov
mov
lods
push
lret
je
inc
stos
jmp
sub
jmp
sub
mov
dec
cmp
aam
insl
or
lds
pop
call
cmp
or
inc
mov
dec
mov
push
test
nop
push
adc
adc
xchg
xor
adc
inc
xchg
xchg
adc
sbb
mov
mov
xor
or
inc
fcmovb
out
mov
mov
or
popf
lea
lcall
lret
iret
jge
stos
jne
cld
cmp
dec
or
stos
lods
adc
sahf
sahf
cs
inc
scas
rep
add
in
lods
sbb
jg
jecxz
out
cmp
jmp
push
bound
in
mov
into
xorb
lods
jo
int
stos
adc
and
cmc
push
lds
pop
push
pushf
add
pop
test
or
cwtl
outsb
or
cmpl
pushw
mov
cmp
mov
adc
les
out
sbb
sub
pop
mov
test
shll
mov
arpl
push
lret
push
fisubrs
jle
clc
movsb
add
bound
test
adc
mov
out
xchg
adc
add
and
add
inc
lret
inc
push
mov
pusha
shll
ret
pop
in
lcall
push
dec
mov
jae
pop
xor
xlat
inc
cld
gs
inc
push
inc
jno
pop
jns
call
sub
xchg
fcoms
xchg
imul
cld
pop
loope
test
sbb
test
xor
fbstp
xchg
rorb
fsts
inc
lea
ss
dec
ret
test
mov
jp
push
and
aas
stos
sbb
js
ljmp
movsb
xor
mov
jae
imul
ret
in
rorl
jnp
rclb
js
js
inc
sahf
xchg
sti
test
cmp
pusha
sbb
or
mov
and
mov
xchg
xor
pop
inc
ljmp
push
pop
mov
xchg
fidivrs
call
popa
fistpl
mov
mov
fbld
add
xchg
lock
mov
data16
popf
mov
push
sarb
pop
ss
add
or
and
and
adc
cld
and
or
mov
cmpsl
ret
gs
scas
lcall
call
pusha
scas
je
and
ss
inc
push
xor
jge
lods
cli
mov
xchg
mov
gs
jns
push
or
inc
pop
jle
mov
pop
cmc
pop
pop
jmp
dec
fcmovnbe
loope
dec
gs
or
jmp
popl
mov
dec
mov
pop
out
mov
mov
xor
add
dec
jp
xor
inc
and
idivl
cmp
ds
hlt
push
test
sbb
add
cmp
jae
sub
shlb
inc
push
pop
in
outsl
xor
scas
sbb
push
mov
sbb
js
aam
mov
xor
fs
call
outsl
in
xchg
clc
cmp
mov
lcall
shll
stc
add
inc
sbb
ja
fbstp
divl
into
jge
pop
pcmpeqb
addr16
notl
aaa
es
addr16
das
int3
repz
fbstp
pop
out
sti
lret
or
sbb
mov
cmp
sub
cs
lahf
sti
pop
lods
xchg
mov
loope
or
lock
movsl
push
jo
es
jne
push
push
test
mov
fbstp
mov
lock
jl
pushf
jb
das
or
push
fs
inc
inc
pop
or
enter
cmc
sub
enter
popa
aad
lods
adc
bnd
je
dec
xor
mov
fiaddl
add
jecxz
lcall
ret
mov
test
enter
pop
dec
icebp
cmp
mov
pop
popf
pop
mov
inc
test
push
inc
fwait
push
push
movsl
fsubs
mov
into
xchg
and
inc
xorb
sti
in
mov
jns
lea
dec
inc
je
mov
sub
les
pop
or
imul
jnp
ret
lods
cs
push
mov
je
xor
or
add
xor
ds
test
nop
jg
lea
jae
jl
aas
lret
sarw
pushf
inc
repz
and
bound
lea
mov
or
or
jbe
dec
aaa
jg
adc
cmp
xchg
dec
pop
and
jmp
imul
jae
mov
fisttps
sti
mov
mov
loope
xchg
stos
test
fcmove
imul
bnd
mov
xchg
mov
loope
das
rcrl
repz
push
mov
cs
mov
cmp
mov
lahf
push
aaa
leave
jae
jecxz
int3
arpl
jp
jge
mov
inc
adc
xchg
add
mov
mov
cmp
movsl
hlt
subl
mull
lret
jecxz
xor
jbe
pop
out
in
pop
ret
data16
add
mov
mov
scas
subl
jno
add
lcall
pushf
mov
adc
mov
movb
mov
mov
in
inc
sub
jns
loop
lock
inc
stos
pop
cs
test
sbb
hlt
jle
notb
inc
out
mov
mov
add
iret
or
out
ds
scas
pop
mov
insl
addl
add
stos
xchg
rcl
sbb
jo
andb
adc
mov
loopne
mov
int3
xchg
mov
adc
gs
or
adc
push
lret
in
ret
sub
or
sub
fisttps
addl
sahf
lods
sahf
xor
addr16
pop
push
cmp
cmpsb
push
push
lods
add
jne
push
cmpsl
jg
jg
iret
fucom
ljmp
jmp
faddl
xchg
dec
enter
and
mov
imul
das
sub
mov
mov
pop
jmp
lds
or
inc
ljmp
inc
clc
decl
rorb
pushf
leave
addb
xchg
cmpsl
stos
xor
cmc
dec
imull
cmpsl
fistpl
pop
mov
shl
xchg
mov
xor
mov
mov
ja
imul
and
mov
imul
mov
adc
inc
cli
and
call
mov
stos
and
cld
mov
mov
fnsave
xor
push
sbb
xor
enter
je
sub
out
mov
enter
enter
pop
pop
add
mov
pop
pop
cmp
pop
push
add
mov
les
notl
testl
dec
cwtl
adc
pushf
pop
scas
add
jae
sub
push
sbb
push
pusha
mov
lds
mov
xchg
imul
mov
lahf
cli
int3
xor
xchg
adc
sub
imulb
xor
gs
pop
cmp
sub
sti
mov
imul
mov
or
xchg
push
icebp
sub
cmp
iret
call
sar
lea
sahf
mov
nop
xchg
mov
mov
repz
pusha
incl
mov
and
popa
push
push
cld
add
jge
dec
push
xor
jbe
imul
sbbb
lahf
mov
adc
popa
jmp
fidivs
inc
lods
add
jbe
push
jbe
jg
outsb
mov
sti
push
fbld
push
adc
icebp
sbb
cmpsb
push
inc
jmp
mov
add
in
sub
jb
mov
and
les
mov
hlt
sbb
jge
jnp
stos
lods
xchg
and
inc
adc
mov
lods
test
add
imul
lret
xchg
push
imul
fwait
xor
call
jo
and
add
inc
in
gs
sbb
or
jmp
jbe
xor
mov
sbb
xor
test
push
mov
outsb
loop
lds
push
repnz
addr16
int3
fists
arpl
arpl
jno
sahf
dec
dec
push
loopne
leave
test
aam
enter
sbb
js
dec
cwtl
test
xlat
push
sbbb
std
in
inc
stos
imul
ret
out
aaa
out
push
loopne
scas
xor
jno
mov
out
xor
pop
pop
dec
pop
and
inc
cld
or
push
lods
lock
or
adcb
sub
scas
ss
cs
lea
fldenv
xor
out
sbb
dec
roll
stos
shll
xlat
xor
mov
outsl
jo
int3
adc
test
jle
cltd
mov
adc
jp
cltd
push
lds
enter
push
ss
lcall
aaa
push
jbe
fcmovnbe
pop
call
mov
dec
int3
inc
sub
and
pop
jbe,pt
shlb
cmpl
ds
test
xlat
mov
sub
inc
inc
popf
popa
jge
and
add
or
dec
xor
mov
js
cmpsl
push
sub
add
fs
xchg
or
inc
pop
pcmpeqb
loop
scas
out
add
jp
pop
gs
inc
xchg
adc
cmpsb
ret
mov
push
mov
mov
ret
push
imul
xor
scas
mov
xor
xchg
bound
cmp
in
in
pop
nop
or
stos
adc
ljmp
or
jl
cli
jnp
das
js
cld
mov
mov
sub
mov
cmp
jo
adc
add
inc
outsl
xchg
pusha
sar
ret
adc
cmpsl
pop
sub
lock
mov
and
dec
add
push
clc
mov
rorb
inc
sub
stos
faddl
shl
lahf
cmp
push
jne
mov
push
aas
push
push
xor
adc
lea
bound
and
mov
push
jmp
push
daa
inc
and
shll
das
loopne
sub
xchg
mov
out
mov
mov
pop
cmp
testl
cmp
xchg
sbbl
cld
sub
je
fcomps
andl
int
aas
lea
sbb
mov
push
test
push
mov
call
cmp
xchg
movsl
and
or
inc
out
cmp
inc
int
pop
mov
adcl
jne
cmpb
lods
sub
jbe
sub
xorl
inc
push
mov
enter
xchg
add
and
dec
or
jno
repnz
adc
cmp
call
ret
jo
hlt
dec
xlat
jecxz
sbb
push
push
lock
je
nop
fildl
mov
sahf
cmpsb
inc
sti
fldcw
xchg
cmp
cmp
rorl
add
dec
cli
xor
inc
xchg
pop
jg
lods
mov
xchg
push
xlat
fdivs
jb
pop
into
pop
getsec
dec
aad
or
add
sbb
cmp
pop
nop
es
stc
pushl
xchg
clc
bound
xchg
sub
xchg
jp
push
dec
and
rep
or
dec
inc
notl
sub
test
fnsave
jnp
cmp
adc
das
scas
popa
dec
cmp
lds
std
xor
aas
ret
push
mov
pusha
adc
mov
adc
sbb
push
jecxz
or
sub
push
cld
sub
les
pop
inc
cmp
cs
cmp
sbb
inc
jle
mov
lret
std
add
adc
clc
fisubl
inc
and
cmp
adc
sub
push
test
adc
aaa
mov
loope
inc
sub
jne
jae
shll
or
jb
xchg
in
mov
cmp
call
loop
mov
int3
negb
insb
fldenv
out
lods
std
icebp
fucomi
in
scas
add
out
or
dec
add
push
daa
enter
enter
arpl
push
je
jp
mov
jne
pop
push
pushf
stos
subb
rorb
scas
xor
and
xchg
jae
cmp
nop
xchg
mov
outsb
sahf
mov
dec
clc
test
repnz
aas
adc
inc
cmc
or
aaa
into
ret
jae
movsl
mov
mov
jb
xchg
cmc
sbb
cld
push
lret
sbb
jnp
xchg
les
pop
and
mov
mov
or
imul
jno
pop
cmp
inc
sub
push
sahf
aam
sub
das
xor
iret
xchg
cs
sahf
lds
les
ss
add
lahf
xor
dec
in
add
aas
mov
xchg
mov
sbb
sub
insb
mov
scas
das
loope
das
inc
jg
sbb
fcompl
ljmp
pop
shrb
pop
fmul
js
xchg
testb
lahf
packuswb
outsl
ja
fimull
dec
fadds
mov
and
and
jne
mov
cmp
jge
and
xchg
push
cmp
dec
dec
inc
push
mov
dec
leave
jb
imul
and
mov
xor
aas
add
js
mov
push
add
xchg
mov
shl
xchg
inc
xchg
leave
aaa
pop
sbb
xlat
leave
push
cli
fcmovnu
pusha
cmp
dec
inc
stos
push
cmp
sub
pop
jp
scas
xor
lock
push
push
not
lds
je
push
lret
xor
mov
or
jae
xchg
adc
lcall
hlt
pop
mov
test
stos
mov
hlt
pop
mov
push
into
mov
sbb
or
push
nop
dec
std
adc
sbb
mov
call
mov
out
in
add
xchg
cwtl
cmpl
fistpl
dec
das
arpl
sub
movsl
pop
aad
jmp
mov
call
mov
or
sarl
push
mov
or
ja
xlat
jecxz
adc
inc
dec
insb
test
es
leave
jl
jb
xchg
lcall
fstl
inc
lods
xchg
ja
fimuls
test
push
stos
stos
lods
movsb
mov
mov
pop
stos
mov
add
movsb
pusha
lods
dec
pusha
push
push
jecxz
lock
popa
push
jb
dec
cmpl
je
in
test
sbb
pop
cwtl
push
out
jnp
das
enter
movsl
stc
push
cltd
mov
ljmp
cwtl
adc
nop
dec
out
insb
jecxz
test
mov
lods
xchg
mov
or
jmp
rol
dec
ret
xchg
pop
inc
es
and
loope
xchg
pop
fs
cs
jp
aad
inc
jmp
stc
mov
pop
call
mov
test
push
push
loop
call
je
inc
rol
mov
out
jns
and
scas
jnp
xlat
sbb
enter
cs
or
popa
mov
mov
jno
dec
sub
fcom
inc
dec
les
cmp
movsb
push
push
cmc
fwait
xor
xor
push
or
sbb
out
lods
lret
sbb
adc
pop
das
adc
jbe
or
adc
fdivrl
test
fwait
dec
cld
add
cld
dec
xor
into
call
rclb
mov
pop
jae
jbe
test
dec
push
fld
rorb
pop
enter
inc
mov
sbb
mov
pop
cmp
and
and
pop
and
pusha
xor
cltd
or
icebp
xor
pusha
pop
dec
in
in
dec
popf
stc
je
pop
mov
sti
dec
cmp
xchg
jp
mov
nop
scas
ret
out
xchg
shl
ret
in
fsts
xchg
mov
mov
dec
jg
dec
xchg
fisttps
push
dec
clc
repz
and
push
adc
mov
xor
dec
xchg
jo
jnp
incb
ljmp
iret
loope
jb
mov
sti
mov
inc
dec
and
test
pop
shlb
adc
lret
bound
jge
xchg
or
into
sti
js
mov
fsubrp
in
mov
nop
nop
sbb
stos
enter
daa
jg
xchg
loopne
leave
mov
or
leave
inc
iret
mov
in
outsl
sbb
mov
push
scas
pop
cli
mov
data16
lods
daa
movsb
nop
pop
je
arpl
repz
std
jno
mov
fnsave
dec
xlat
arpl
add
fisttps
or
mov
adc
in
sub
in
adc
cli
scas
push
push
mov
popf
dec
mov
xchg
dec
dec
push
dec
andl
jl
mov
sbbl
inc
cli
cmp
xchg
popa
sti
sub
xor
xchg
fdivp
mov
mov
sub
xor
bound
and
mov
and
add
dec
inc
push
movsb
jno
stos
adc
pusha
test
fcomp
mull
imul
insl
ds
jb
sbb
and
and
shrb
add
mov
xor
shlb
or
rolb
andb
cmc
sub
in
push
cld
cmpsb
dec
or
mov
and
lock
xor
push
movsl
xor
stc
cmp
loopne
sbb
out
xchg
int
sub
xchg
imul
addr16
lea
push
and
mov
cmpsl
fsubp
in
sub
outsb
pop
sub
mov
xor
dec
aas
idivb
lret
lods
sbb
jbe
sarl
hlt
sub
inc
iret
xchg
mov
jbe
cmc
and
xchg
shr
test
mov
lcall
fs
jmp
adc
fwait
imul
ljmp
inc
jecxz
jge
jne
and
pop
mov
rorl
mov
jmp
mov
jp
mov
xchg
stos
mov
mov
mov
subb
mov
push
lds
icebp
loop
xchg
in
popf
add
fsubs
pavgw
iret
sti
leave
std
xor
and
out
lea
or
sub
and
mov
jns
mov
daa
sub
add
inc
nop
insb
sbb
lods
int3
stos
sub
outsl
decl
fldln2
inc
xchg
pop
push
repnz
fnsave
cmpsl
in
mov
inc
mov
icebp
cmc
pop
jmp
mov
jecxz
jge
sub
mov
fiaddl
push
pop
xor
mov
adc
or
adc
inc
hlt
add
cmp
sub
xchg
lea
lcall
mov
dec
dec
xor
por
ljmp
lret
fstpt
mov
scas
out
sahf
mov
test
sub
jmp
hlt
dec
jg
push
lock
xchg
das
mov
ret
adc
jae
sbb
mov
jge
xchg
jbe
sub
jno
mov
dec
movsb
push
lret
inc
mov
std
adc
push
into
bnd
popa
mov
and
lret
mov
leave
add
pop
out
xor
test
fists
jp
cmp
ficoml
aam
or
lret
xor
dec
sarb
cld
ret
and
fucomp
into
out
push
movsl
cli
loop
or
pop
jge
ja
dec
jg
stos
iret
test
fbstp
out
xchg
test
xor
jne
stos
xor
lcall
mov
jns
bound
sbb
mov
and
sbb
in
stos
cmc
and
test
add
push
fdiv
inc
xorl
int3
sub
cwtl
cld
imul
cmpsb
call
loopne
lock
addb
sub
add
lods
push
js
jg
mov
lods
loop
jbe
lahf
ja
xor
call
xchg
int3
jno
nop
push
add
daa
in
repz
stos
cmp
addr16
mov
cmp
es
arpl
jg
mov
out
imul
aam
sub
mov
outsb
scas
test
rolb
jnp
fdivrs
xchg
cmpxchg
mov
in
faddl
add
inc
lahf
and
std
mov
mov
lods
ss
and
fisttpl
mov
cmp
sbb
popf
je
mov
adc
shlb
xor
cmc
mov
lret
mov
xchg
fmull
lods
adc
stos
cmp
push
testb
mov
xchg
loopne
test
lret
jbe
cmc
enter
daa
es
jo
popa
out
fwait
push
loopne
inc
jp
mov
xorb
mov
stc
notb
or
movsl
loopne
into
out
mov
add
dec
pop
jnp
sub
or
imul
mov
aaa
fdiv
cmpsb
fwait
lds
sub
repz
inc
dec
push
mov
dec
pop
jmp
push
cltd
add
mov
xchg
pop
in
mov
lods
mov
loop
add
adc
emms
or
jns
dec
imul
mov
sbb
sbb
jecxz
mov
sbb
in
inc
push
pop
iret
dec
adc
jne
xchg
negl
cmp
xlat
nop
shlb
sbb
je
add
xchg
popf
mov
hlt
mov
call
loop
pop
sbb
jl
mov
cmpl
adc
sub
mov
sbb
stos
xor
shlb
mov
loop
xor
xchg
iret
je
and
cmp
xor
jnp
aad
cwtl
push
lods
add
jno
mov
ja
jns
mov
xchg
push
jp
jns
test
push
mov
fldenv
scas
mov
mov
sahf
out
sbb
outsl
and
pop
arpl
in
iret
das
cmp
stc
ja
pop
or
test
es
out
sbb
in
and
xchg
push
test
sub
icebp
mov
inc
mov
jp
lret
add
in
outsb
and
mov
sub
inc
inc
or
pop
adc
xchg
xor
movsb
push
mov
xlat
xchg
sbb
xor
cltd
rol
outsb
xchg
add
lahf
mov
inc
mov
leave
adc
lret
push
pop
bnd
rorl
mov
dec
roll
push
mov
mov
xor
lds
imul
adc
push
adc
xchg
lock
jl
out
dec
das
mov
push
rolb
pop
cmpsb
pusha
jl
xor
xorb
mov
icebp
mov
mov
sahf
dec
add
in
imul
or
mov
adc
rclb
sbb
xor
imul
movsl
sub
pop
inc
popa
ss
test
sbb
enter
or
out
xchg
jae
or
insb
roll
cmpsb
adc
sbbl
stos
dec
adc
mov
scas
sbb
and
rcrl
jb
or
inc
cmp
sbb
xor
and
cs
mov
lock
push
xor
pop
dec
frstor
push
mov
mov
jo
add
and
lahf
and
call
jb
mov
cmp
mov
push
sub
xchg
popa
or
adc
mov
in
jno
cwtl
jnp
sbb
insl
sub
lea
jno
sbb
es
icebp
or
test
push
fists
les
jne
fisubrs
les
adc
xchg
mov
int
outsl
or
divl
jne
jg
pushf
out
roll
scas
sbb
cmpsl
jo
adc
xorb
inc
mov
inc
in
test
mov
lds
or
fxch
shlb
jmp
fnstcw
sub
fcoml
mov
inc
xor
popf
xor
fs
out
push
ret
pop
cs
and
lret
inc
cmp
xchg
cmp
xor
js
inc
popf
adc
daa
xlat
push
sbb
test
inc
mov
loopne
lock
mov
mov
mov
xor
or
jmp
pop
call
sub
orb
insl
mov
fnstcw
in
add
movsb
xchg
dec
and
mov
pop
xor
mov
jl
test
mov
pusha
mov
pop
popa
ret
and
ss
dec
xchg
popf
imul
jge
sub
add
fimull
or
out
jecxz
push
orl
mov
sbb
push
sahf
ret
out
fcom
call
aaa
and
jle
fisttps
adc
inc
hlt
leave
adc
shlb
inc
out
fmul
in
fnstenv
or
mov
mov
mov
xor
xchg
jecxz
sub
icebp
push
mov
rol
mov
xchg
sub
or
sbb
inc
mov
cwtl
jmp
add
int3
int
xchg
jo
clc
fmul
sbb
jnp
push
jb
sbb
ret
xchg
mov
decb
pop
mov
push
xlat
lods
pop
cmp
mov
rcrb
jmp
rcr
fnstenv
ljmp
or
or
leave
testl
clc
hlt
push
xchg
loope
out
push
cwtl
pop
loope
xchg
pop
add
xchg
inc
push
popf
inc
pop
cwtl
mov
add
xor
addr16
xor
pop
stos
lods
cmp
mov
pop
std
jno
sbb
inc
scas
shld
popa
pushf
loope
push
push
xchg
sub
in
sbb
push
sbb
test
cmpsb
and
jp
adc
repnz
es
and
loop
xorb
push
decb
push
insl
and
jo
mov
fimull
add
mov
fnstsw
lcall
test
mov
add
jns
movsb
or
cmp
idivb
lret
pop
cmpsb
sbb
add
in
cmpsb
lds
dec
push
sub
popf
jnp
mov
mov
or
lea
xorl
mov
fwait
jne
fs
jae
jo
xchg
jne
or
mov
movl
push
mov
insb
int
dec
and
sbb
imul
sbb
pop
push
xor
mov
sub
xchg
scas
js
std
imul
insl
aam
dec
push
or
push
push
sbb
aam
xchg
out
out
pusha
decl
std
cli
iret
pop
adc
dec
iret
aad
pop
add
std
fisubl
shlb
push
repz
lods
sti
xorl
repz
rclb
jg
leave
cld
arpl
cwtl
fimull
pusha
aad
sarl
cli
cmc
jne
or
mov
jb
fnstcw
in
add
fidivrs
xchg
aas
push
ja
test
or
and
movsl
xchg
mov
pop
repz
jae
dec
subl
fldt
sbb
call
mov
pop
push
push
xchg
aas
stc
and
or
xchg
xor
sub
jl
sub
aam
pop
mov
cs
adc
adc
sub
mov
std
or
repz
jns
repz
dec
sbb
add
add
sbbb
sbb
int
add
adc
cmc
push
mov
test
and
or
ror
adc
push
sbb
jle
mov
jl
mov
mov
fwait
jnp,pn
mov
in
add
push
rcrl
das
addr16
lahf
sub
mov
cmpsb
jecxz
xorl
stc
push
pop
lea
lret
xchg
fcmovbe
outsb
inc
mov
sub
clc
sub
push
scas
fiaddl
adc
or
add
out
dec
or
pop
std
fcomp
mov
mov
ficoms
aaa
out
subb
loop
cmp
lret
mov
xchg
sub
out
and
mov
pushf
lcall
addr16
mov
sbb
cmp
ror
sbb
ss
xchg
mov
mov
add
jmp
xchg
rorb
aas
or
adc
cltd
sub
add
arpl
push
outsl
cmpsb
push
sbb
dec
jg
pop
xchg
dec
insb
cmp
dec
mov
xchg
stos
xchg
js
mov
jns
repnz
sbb
sbb
cmpsl
cmpsb
mov
adc
mov
xor
addr16
inc
mov
clc
mov
movsl
push
cmc
loopne
add
repz
negb
push
mov
popa
loop
xchg
xchg
or
push
test
ficompl
call
inc
ljmp
pop
inc
push
and
dec
ret
adc
pop
and
movsb
lret
mov
mov
sbb
clc
in
jle
aad
adc
mov
pop
fcmovb
jns
test
addr16
in
mov
mov
mov
mov
ds
popf
inc
addr16
bound
or
mull
outsb
stc
rorb
loopne
mov
mov
jno
mov
adc
jbe
test
jecxz
aam
inc
inc
in
fisubs
cld
je
mov
sbb
or
xchg
push
ljmp
pop
mov
hlt
pop
in
add
mov
fidivs
movsb
xor
push
mov
imul
push
lock
out
push
movsl
loope
jg
ds
es
rorl
sub
jb
dec
jp
mov
cs
call
cmp
ret
mov
adc
lods
xchg
or
test
ficompl
cmp
lods
dec
in
das
ret
movsl
sub
or
push
xchg
jl
xor
stos
jno
and
inc
ret
xchg
addr16
leave
add
adc
idivl
dec
leave
inc
xchg
jae
inc
scas
sub
pop
ss
push
mov
xor
dec
adc
popf
sub
push
test
lods
add
repnz
mov
and
xchg
fldenv
test
in
gs
pop
inc
adc
adc
cwtl
gs
cmp
mov
dec
jo
scas
mov
fnstcw
xor
mov
lock
jg
int3
pop
out
dec
xchg
pushf
subl
loope
sub
bound
rdmsr
jae
dec
add
lods
cmp
fistl
push
sti
add
in
xchg
push
mov
add
and
int3
pop
inc
xor
cmp
stc
subl
sbb
js
xor
jo
and
mov
sub
je
mov
mov
sub
and
shrb
mov
adc
mov
xlat
sbb
push
insb
test
mov
dec
push
sub
mov
sti
push
negl
mov
and
data16
or
dec
inc
dec
in
adc
pop
cmp
repz
or
inc
icebp
dec
inc
arpl
test
sub
rolb
popf
adc
andl
cmp
je
mulb
sub
mov
xchg
xchg
insb
andl
daa
push
popa
and
rcr
dec
leave
xchg
aaa
mov
xor
and
stos
loop
jp
cmp
sbb
lods
nop
sub
add
fstpt
pusha
loopne
push
sub
xor
xchg
outsb
xchg
jp
jne
scas
xchg
cmp
or
mov
xchg
push
sub
rcl
leave
add
lods
repnz
lcall
popa
ss
xchg
dec
xor
xlat
loop
lods
and
cmpb
jb
mov
rcrb
cmc
fdivs
rcrl
out
aas
xchg
cmp
pop
fsubr
mov
jecxz
je
fistpll
aam
idivb
pop
adc
inc
cmc
jns
mov
loop
cltd
push
sbb
mov
push
sub
pop
jbe
xor
sub
xchg
dec
inc
imul
imul
push
mov
mov
call
jl
dec
repz
sbb
loop
insb
xor
push
nop
test
out
and
xchg
sbb
sub
push
and
xchg
cmp
cmp
outsb
mov
xchg
test
shrl
jp
push
dec
mov
lahf
pusha
pop
sbb
jo
in
pop
jmp
sbb
bound
and
rcr
mov
sbb
insl
cmp
ljmp
cld
scas
mov
outsl
test
mov
fidivl
or
stos
fsubrs
xor
nop
out
pop
push
cmp
dec
and
arpl
mov
pop
adc
popa
shrl
xchg
or
jge
cmp
shrl
push
and
fldln2
jecxz
cmp
mov
outsl
repz
adc
sbb
sbb
cwtl
push
and
adc
and
xchg
js
int3
sub
dec
xchg
repz
or
add
pop
mov
cwtl
lods
inc
jecxz
aas
adc
leave
mov
mov
sti
subb
jno
cmpsl
mov
xchg
jmp
into
and
scas
rcrb
pop
lea
mov
xchg
test
imul
xor
and
cmp
lcall
cmc
dec
inc
sub
ljmp
leave
jae
push
mov
add
lds
jnp
das
aas
test
jns
adc
lock
loopne
mov
push
add
mov
cli
inc
stc
insb
test
mov
fisubrl
mov
imul
xchg
adc
mov
mov
loop
jp
repz
mov
sub
jl
shl
or
adc
mov
mov
or
sbb
push
mov
stc
cltd
or
gs
adc
outsl
int
ror
in
jecxz
ret
decl
mov
push
or
pushf
mov
bnd
sub
in
pop
mov
dec
and
movsl
fwait
xchg
push
jo
sub
jle
or
cmp
outsb
enter
iret
cmp
idivl
dec
ss
and
test
xchg
cmp
pop
xchg
push
cmp
xchg
mov
inc
xchg
pusha
lods
push
push
cli
leave
sbb
or
fbstp
lret
mov
jae
xor
outsl
rcrb
pop
add
loop
outsb
sub
xor
inc
adc
xor
xor
xor
mov
sub
cld
pop
fdiv
sbb
add
sub
jg
sbb
stos
rclb
ja
xchg
nop
jecxz
cmpsb
xor
dec
cmp
xlat
inc
ljmp
lods
sbb
test
insb
xchg
add
mov
and
and
push
push
aaa
movsl
mov
mov
push
gs
or
in
xor
nop
jmp
dec
insl
dec
in
sub
mov
pop
andl
mov
shl
jb
mov
dec
dec
addb
rclb
sbb
insb
shrl
mov
mov
dec
sbb
pop
push
sti
clc
ss
xchg
jle
pop
sub
dec
dec
or
pop
push
out
xor
roll
mov
xchg
xchg
mov
cmpsb
mov
scas
das
int
mov
imul
hlt
push
test
mov
out
xchg
data16
xchg
insl
add
clc
fldcw
sbb
pushf
push
fcompl
sub
data16
sub
pusha
fdivrl
jmpw
sub
mov
outsb
mov
mov
lcall
mov
test
mov
bound
push
adc
sbb
and
in
test
cmpsl
jne
lds
dec
stos
addr16
dec
sbb
xor
push
jns
addr16
lods
sbb
xchg
add
mov
jecxz
mov
out
insb
loop
xor
stos
xchg
ret
push
push
pop
jnp
mov
sbb
jno
xor
call
adc
out
nop
fstpt
mov
and
inc
mov
inc
push
mov
rorb
sub
int
xlat
imul
push
add
outsb
xlat
ds
push
and
add
clc
pop
inc
mov
movb
pop
push
outsl
xor
mov
outsl
mov
hlt
push
pop
push
inc
das
inc
ja
rcl
mov
fsubrs
sbb
and
subb
insb
cmp
add
fistps
mov
xor
aaa
jae
test
fstps
mov
push
xor
fcmovb
xor
mov
or
mov
mov
out
mov
push
fildll
std
decb
sarl
push
jae
sub
mov
push
and
mov
nop
cmp
sbb
adc
std
inc
fidivrl
outsb
or
push
pusha
test
push
adc
cmp
mov
sahf
icebp
testb
sbbb
pop
add
std
adc
test
add
and
jg
pop
call
loope
xchg
mov
adc
add
dec
xor
and
cmp
outsl
xor
xchg
dec
in
dec
ja
scas
lahf
insl
cmp
dec
fxch
mov
ja
sub
inc
pop
jl
mov
dec
inc
and
movups
test
aam
mov
imul
push
shlb
mov
pop
inc
add
adc
into
mov
rorl
jmp
rcrb
addb
adc
cltd
movsl
jnp
mov
xchg
fistps
movsl
rcl
pop
inc
mov
ds
rcll
fistpll
nop
sbbl
subb
enter
cmp
mov
call
sub
jae
pop
mov
mov
xor
mov
clc
jnp
or
aad
xchg
and
cmpsb
lds
sti
rcrb
inc
outsl
icebp
adc
in
fisttps
leave
fstpl
xlat
push
mov
into
lds
push
jae
jl
mov
fs
shlb
std
icebp
aam
shlb
idiv
dec
jno
test
jmp
xor
cli
mov
insl
fs
sbb
call
sti
fwait
pushf
dec
xor
jo
xchg
ds
or
sbb
add
lret
test
in
adc
fisttpll
sub
xchg
xchg
and
sub
mov
or
pop
ret
aad
fiaddl
dec
inc
cmp
pop
add
shl
and
mov
inc
mov
mov
xor
pop
add
loope
nop
hlt
es
rorb
and
mov
repnz
call
mov
lock
xchg
in
xor
sbb
push
sahf
xor
test
outsb
nop
pop
mov
push
dec
incl
inc
push
leave
pop
cmp
push
pop
add
inc
cs
push
int
ljmp
idiv
inc
pop
movsb
xor
pop
sbb
lods
xor
idiv
cmp
push
ret
gs
mov
test
icebp
jae
and
adc
sub
iret
xchg
and
fmulp
addr16
mov
repnz
fwait
and
test
icebp
mov
movsl
and
jl
sbb
adc
push
jbe
mov
lea
and
inc
popa
rolb
scas
lcall
inc
dec
mov
sbb
jmp
pop
std
fisubrs
int
mov
or
or
dec
jg
mov
push
les
addb
insb
lds
adc
enter
mov
jge
andl
loop
sub
das
push
pop
add
int3
test
aas
nop
pop
adc
sub
jg
mov
jecxz
and
jns
mov
mov
je
adc
popa
jl
sub
xor
cmp
pop
jmp
mov
sbb
inc
mov
inc
daa
ljmp
jns
arpl
daa
scas
loope
mov
out
aad
scas
hlt
cltd
es
dec
daa
add
and
push
add
sbb
aad
imul
push
jecxz
dec
dec
cmp
das
pop
sbb
mov
stos
inc
ficomps
xchg
push
mov
sbb
or
stos
jae
xor
jge
test
fnstcw
pop
fsts
push
ljmp
shrb
dec
dec
fmull
adc
cmp
stos
icebp
repz
sub
fwait
cmp
xor
xchg
cs
mov
int3
lods
sbb
ds
rorb
popf
pop
mov
loopne
xchg
jecxz
dec
mov
sbb
jno
pop
imul
cmp
lret
aas
pop
repnz
cmp
adc
and
and
negb
nop
xchg
popf
popa
jns
mov
jge
lods
cmpsb
rcrl
std
adc
adc
xor
mov
movsb
dec
data16
add
mov
in
cmpsl
xor
or
add
sbb
or
in
outsb
imul
shr
sbb
pop
pop
aas
add
popf
scas
xchg
in
popa
xor
pop
jecxz
or
test
push
lahf
dec
pop
xchg
call
push
adcb
rorl
mul
test
jge
pop
fimuls
movsl
fnstsw
cmp
pop
and
jle
fstp
jg
xchg
jno
sub
xchg
mov
jmp
stos
mov
idivl
js
pop
sti
cs
push
adc
shll
leave
test
out
je
lcall
das
mov
add
cmp
das
in
xchg
stc
or
icebp
orl
mov
cmp
push
ficompl
lods
jmp
mov
int3
sbb
and
push
pop
cmp
in
add
push
sbb
in
jb
pushf
xchg
mov
add
push
push
jmp
dec
pop
cmp
sti
inc
push
movsb
pop
xchg
mov
ljmp
lcall
sub
mov
leave
pop
or
adc
jno
lret
sub
dec
repz
or
mov
push
add
lds
and
push
inc
lcall
std
call
out
xor
cmp
pop
aad
lock
sub
add
test
sti
rcrb
test
mov
aam
inc
xchg
sub
stos
in
cwtl
fst
stc
xor
dec
icebp
stos
sbb
pop
push
inc
and
fldl
adc
add
jmp
or
rcll
mov
ror
pop
mov
add
fimull
js
xchg
and
pushf
pop
cltd
mov
dec
xor
test
adc
jae
out
push
sub
int
je
pop
pop
push
jbe
fs
xchg
nop
fdivrl
sarb
fs
inc
fistl
pop
adc
int3
clc
lods
mov
out
inc
out
adc
pushf
mov
scas
add
inc
push
stc
inc
mov
push
movsl
es
cwtl
push
jns
xchg
xchg
out
mov
sbb
scas
add
push
aam
loop
cmp
mov
adc
inc
mov
lret
jl
cmp
ret
xor
stos
jecxz
std
add
sub
xchg
aad
scas
mov
aad
cmp
inc
cmp
je
shr
mov
mov
lock
and
xchg
jns
jno
push
xchg
clc
pop
arpl
lds
jmp
mov
pop
dec
xchg
aad
jecxz
jae
lahf
mov
lahf
testb
into
aas
push
xchg
into
adc
push
outsl
xchg
sub
push
lahf
dec
xchg
cltd
mov
andl
sbb
mov
js
mov
sbb
in
inc
mov
push
inc
lods
fistps
std
lret
fmuls
sarl
frstor
enter
pop
sbb
jg
out
movsl
sub
xchg
or
cmc
incl
fsubs
fiadds
loop
int
sbb
hlt
call
sbb
xor
aad
and
aaa
jge
mov
push
mov
subl
xchg
cltd
mov
dec
imul
aaa
jl
pushf
mov
push
mov
cs
dec
xor
adc
mov
das
addr16
loope
rclb
loopne
push
es
cmp
or
adc
cwtl
xchg
xor
out
loopne
mov
sbb
pop
pop
movzbl
fsubs
aaa
jns
aaa
std
push
out
push
jl
inc
in
xchg
xlat
mov
xchg
sub
pop
divb
arpl
mov
mov
movsb
push
cmpsl
inc
shll
jl
or
mov
int3
jp
cwtl
test
sub
cmc
push
clc
sbb
lock
cmpsl
cld
mov
arpl
pop
add
sub
push
leave
rorb
jb
out
sub
js
fdiv
enter
or
insl
popl
jns
cli
es
xchg
xor
loope
mov
popa
mov
xor
repnz
jmp
jg
adc
inc
mov
xchg
xchg
push
adc
pop
mov
add
push
lods
clc
jb
in
cltd
std
repz
loopne
loop
sbb
cli
imul
pop
push
mov
and
jno
arpl
decb
rcrb
sub
sbb
ret
cs
or
out
rorb
lods
push
inc
pop
jg
push
mov
sub
xchg
iret
in
xor
cmpsb
cmp
jmp
les
cmpsl
lds
xchg
int3
repz
dec
adc
pop
int
xchg
xchg
mov
aas
pushf
lds
jbe
clc
ficomps
xchg
outsb
add
push
clc
cmp
push
int
pop
ja
sub
xchg
jnp
hlt
iret
and
mov
inc
add
ljmp
inc
fucomp
inc
xor
jno
repnz
mov
xchg
mov
ret
or
fdivr
mov
mov
outsl
stc
xchg
dec
dec
jno
mov
test
fcmovu
push
idiv
or
shrl
mov
xor
push
fdiv
mov
mov
mov
sarl
pop
out
rcrl
bound
popf
ja
mov
into
divl
add
sub
aam
filds
sbb
mov
jp
xchg
mov
stos
enter
aas
into
inc
loop
loope
adc
mov
cmp
mov
mov
bound
cmpsb
pop
mov
push
xchg
dec
sub
inc
cmp
bound
popa
jmp
cmp
cmp
fwait
pop
insb
lods
jge
scas
mov
cmp
sub
es
push
add
iret
push
pusha
int3
jno
pushf
lret
fs
cmp
into
push
sar
sub
pop
dec
and
repz
inc
cmp
pop
test
xor
pop
out
scas
clc
enter
pop
adc
sbb
je
cmpsl
fidivrs
test
sbb
or
lock
loopne
cmp
jne,pn
in
outsb
push
and
adc
dec
jne
adc
sub
adc
dec
push
std
sbb
sub
push
push
xchg
dec
jo
in
add
incl
sbb
icebp
cmpsb
inc
and
in
int
aaa
in
mov
enter
cmp
aas
out
fdivrp
sub
xchg
jge
cmpb
push
int3
ficomps
data16
pop
inc
test
negb
mov
jns
bound
lods
in
mov
fadds
std
mov
out
aaa
jae
aaa
mov
out
lods
std
cmp
pop
aad
pop
sub
sub
popl
or
pusha
mov
in
pop
gs
or
les
rcll
fdivl
sub
sbb
jmp
push
cli
mov
push
sub
adc
jmp
lods
sbb
test
test
es
push
xor
inc
cmp
test
jmp
mov
xor
add
stos
in
add
fldcw
addl
xchg
stos
xchg
mov
scas
jp
pop
push
lret
idivl
add
or
add
jmp
adcb
jmp
stc
jb
stos
stos
inc
lcall
aas
push
sbb
cmp
adc
les
hlt
or
jmp
and
cwtl
cwtl
roll
and
cmp
test
mov
out
sar
add
data16
int
sbb
push
push
mov
loop
xchg
mov
jge
cmp
jmp
push
pop
scas
jecxz
inc
push
add
sar
cmp
int
jmp
loop
scas
pop
andl
mov
addr16
xchg
dec
cmp
dec
test
je
sbb
bound
addb
pop
outsb
aaa
cmp
mov
and
pop
cmp
outsl
push
mov
push
ljmp
mov
ds
mov
fld1
inc
sahf
hlt
movsl
divl
xchg
scas
andb
rcll
verr
mov
jmp
jp
sbb
sti
cmp
mov
mov
hlt
add
loopne
repz
test
pop
sub
aad
lret
dec
aam
pop
mov
pop
dec
xchg
mov
les
mov
stos
mov
jo
test
ja
lret
add
xlat
adc
aaa
adcb
xor
sbb
lods
shlb
inc
int3
clc
frstor
push
inc
xlat
ljmp
inc
into
leave
test
cli
lods
jmp
addr16
jg
xchg
push
mov
pop
inc
xchg
mov
lcall
nop
bound
add
rcll
cmpsb
adc
sbb
mov
pop
daa
mov
stos
mov
mov
das
jl
scas
mov
les
or
adc
mov
cmp
roll
mov
sub
js
loope
ja
cli
ss
mov
and
mov
scas
sbb
adc
push
add
pop
dec
sub
lods
dec
daa
rol
aad
repz
dec
pop
push
sbb
inc
push
push
scas
add
movsb
mov
xor
mov
pusha
aas
inc
mov
int
adc
les
adc
push
add
imul
shrb
dec
movsb
xlat
sbb
push
addr16
int3
or
push
and
mov
dec
mov
sahf
cmp
sbb
lret
mov
sti
mov
pop
and
or
mov
xchg
pop
push
or
adc
daa
out
addr16
out
orl
jp
mov
xor
out
sti
push
pop
lret
push
pusha
test
mov
lds
pushf
sahf
cmp
inc
scas
movsb
jp
xor
in
ljmp
in
xchg
insb
mov
test
mov
scas
lods
cs
sbb
out
add
add
cmc
es
mov
cmp
xor
xchg
cltd
sub
outsb
fnsave
inc
jmp
mov
das
xor
idiv
jp
pusha
ret
testl
test
aad
stos
call
dec
xor
les
or
xchg
stos
mov
lock
les
aas
stos
in
push
and
xlat
xor
mov
sub
clc
pop
lret
push
xor
sahf
out
in
adc
lahf
mov
xlat
dec
fidivs
stos
scas
sub
cmp
jle
arpl
outsl
mov
hlt
cmp
addl
out
sub
cmpsb
movsl
mov
insb
jecxz
and
dec
sbb
xchg
add
fstps
push
addr16
stc
outsb
mov
popf
or
je
pop
mov
mov
gs
inc
cmp
mov
ret
outsb
inc
sbb
and
popa
sub
sbb
jg
rcll
sahf
sub
int
xchg
dec
call
fs
or
test
fidivs
lds
insl
xlat
sbb
jp
add
adc
inc
mov
fnstenv
adc
outsb
scas
popl
mov
sub
divb
js
insl
iret
inc
jne
aaa
in
pop
mov
inc
pop
add
out
ret
push
pusha
in
and
out
enter
repz
int
pop
dec
or
enter
add
inc
xor
push
fwait
xor
or
sub
insl
daa
jnp
fildll
jg
jnp
pop
adc
cmp
aaa
sub
rcrb
js
add
movsb
mov
movsb
mov
or
aad
popa
jmp
add
jmp
mov
cmp
in
mov
loop
lahf
push
sub
dec
loope
gs
stos
dec
stc
imul
or
sub
lea
in
out
sbb
icebp
jmp
mov
xchg
mov
pop
dec
adc
mov
sbb
stc
mov
nop
cmp
repz
add
scas
inc
ljmp
jbe
inc
pop
scas
aas
into
sub
sub
xor
das
inc
lods
pop
jno
fidivrl
sbb
div
and
ret
loop
mov
pminsw
and
inc
imull
mov
xchg
scas
or
in
fs
aas
or
stc
sbb
adc
rclb
dec
icebp
nopl
and
clc
or
movsl
push
xchg
mov
repz
sbb
xchg
ljmp
xchg
sahf
adc
pop
jnp
pop
pop
sub
push
imul
mov
sbb
adc
test
gs
pop
xchg
shll
fists
jnp
mov
in
dec
pop
or
push
dec
xchg
sbb
adc
adc
dec
pop
int
es
fdivs
mov
ficoml
aad
adc
jns
fwait
sbb
inc
xchg
pop
mov
popf
and
lds
stos
push
adc
mov
push
adcl
push
dec
flds
imul
movsl
xchg
jge
push
mov
jbe
mov
xor
aas
push
xor
sub
in
push
int
add
roll
pop
subl
mov
pop
repz
sub
out
adc
popf
in
or
sahf
or
add
aad
pop
loope
xchg
nop
sbb
add
stos
pushf
inc
out
jno
test
sahf
mov
inc
pop
fwait
lock
clc
pop
sbbb
test
jp
pop
loop
xchg
xor
cwtl
inc
add
test
pop
pushf
sub
dec
mov
mov
mov
leave
mov
cmc
lods
addr16
add
repz
pop
push
test
adc
xchg
add
push
test
lods
insb
inc
and
js
cmpsb
cs
movsl
ja
dec
in
and
out
test
inc
xchg
fdivp
fisubs
orb
cld
mov
je
dec
push
xchg
push
push
jae
lahf
out
ja
pop
jb
mov
insb
xor
sahf
gs
sbb
pop
cmp
outsb
es
rcrl
mov
sbb
xor
insl
addb
and
sub
pop
ror
lock
mov
jb
sbb
jp
inc
jo
sub
test
dec
cmp
mov
subl
dec
call
mov
add
dec
call
jae
sbb
or
cmpsb
adc
xor
adc
dec
push
pop
jmp
movsl
add
push
aaa
std
pop
inc
pop
aad
emms
mov
jge
cmp
mov
mov
push
out
insl
iret
mov
mov
lret
sbb
push
aaa
jae
jns
mov
jl
lea
cmp
dec
xor
and
fisubl
rolb
out
jmp
mov
adc
inc
xchg
iret
icebp
cltd
mov
mov
repz
shr
lods
mov
pop
pop
mov
fs
sbb
pop
nop
stos
or
sbb
xchg
fisubrs
mov
repnz
jb
jg
bound
push
dec
rol
cmp
and
xchg
sahf
xor
push
push
sub
jl
pop
xchg
push
pop
scas
out
mov
mov
mov
add
mov
push
cmp
lea
dec
mov
repz
mov
add
inc
popa
pop
dec
movsb
test
arpl
xchg
sub
dec
insb
scas
cwtl
mov
jge
ja
inc
lods
ljmp
pop
cmp
mov
add
jle
jne
aad
sti
add
jbe
iret
mov
arpl
pop
mov
cmp
xchg
ret
sub
or
sub
sbbl
mov
add
or
std
add
xor
push
rolb
filds
aad
xchg
into
test
or
enter
sbb
add
sahf
fsubs
idivb
or
repnz
stc
aad
rcll
dec
repz
inc
and
cmp
aaa
sub
push
xchg
iret
lret
pusha
push
ffree
call
xchg
mov
ja
negl
push
add
dec
jne
test
mov
mov
ss
adc
jno,pn
push
jecxz
dec
jl
subl
mov
add
push
pop
xchg
add
cmpsl
or
add
out
mov
and
mov
mov
movsb
and
pusha
xor
shlb
sub
adc
push
lds
push
in
xchg
and
inc
mov
sbb
insb
dec
cli
fcmovnbe
pushf
bound
cmpb
mov
hlt
sub
push
cltd
mov
mov
push
rol
dec
jne
popa
mov
std
add
es
imul
repnz
out
jno
mov
loope
mov
xlat
sub
idiv
nop
and
sub
inc
and
lret
sub
lahf
mov
push
lods
pop
cmc
pop
neg
mov
adc
add
es
icebp
insl
jne
bound
icebp
popa
push
push
mov
fists
outsb
sub
loop
mov
out
pushf
adc
or
test
add
fisttpl
outsb
iret
sub
xor
cli
adc
inc
pop
ljmp
es
stc
mov
lea
jne
adc
pop
push
stos
sbb
xchg
mov
mov
dec
inc
lret
scas
mov
fisubrs
sub
iret
and
xor
mov
add
add
iret
ljmp
add
dec
scas
sub
push
in
cmp
mov
pop
les
mov
hlt
mov
sbb
push
insb
dec
js
pop
cwtl
clc
jge
pop
sub
dec
adc
out
jle
rorb
rorb
test
mov
daa
inc
cmp
push
mov
sbb
std
push
cmp
push
enter
inc
ret
sahf
mov
repnz
cmp
insl
or
out
cmpsl
dec
and
outsl
ljmp
add
out
or
jo
adc
or
push
mov
cmp
addr16
xor
and
pushl
daa
push
pop
push
loope
mov
daa
sub
mov
test
das
sub
jno
xchg
xor
mov
mov
push
and
aam
rcl
or
jo
inc
fnstenv
mov
sub
in
stc
xorl
popa
inc
imul
xor
leave
push
push
mov
jecxz
inc
loope
jae
push
movsl
push
mov
add
int3
or
xchg
test
orl
jnp
xchg
ret
jecxz
cli
or
dec
lret
dec
pop
mov
into
insb
jmp
inc
pop
rorb
xor
sub
jle
shl
cmc
mov
mov
out
push
cmp
xor
mov
or
adc
pop
mov
aaa
mov
out
out
ds
lahf
add
push
aad
mov
jo
dec
xchg
out
jne
repz
rcr
popf
pop
cmc
xchg
mov
mov
dec
aad
mov
cmc
or
out
outsl
cmp
in
and
adcb
scas
jmp
pop
pop
data16
mov
call
fwait
das
xor
pushf
xchg
in
mov
movsb
jno
sbb
jecxz
scas
andl
or
pop
cmpsb
addl
fsubrl
mov
sar
call
dec
jo
mov
into
repz
int
and
jae
lds
sti
ficoml
fimuls
or
dec
aam
lods
shrb
xchg
imul
adc
andb
add
jl
loopne,pt
stos
into
aam
lods
inc
push
cmpsb
mov
clc
mov
roll
ds
outsl
pop
lds
and
mov
movsb
push
mov
mov
arpl
mov
or
inc
hlt
aam
arpl
les
shr
jecxz
mov
repz
pop
mov
popf
dec
xor
sbb
cld
jbe
into
pop
out
mov
es
dec
fidivl
iret
pop
and
lds
jecxz
and
mov
icebp
pop
and
pop
inc
xchg
xor
data16
or
cmp
je
mov
shlb
in
fs
adc
test
jbe
xchg
mov
insl
fwait
sbb
inc
adc
cmpsb
inc
repz
pop
pop
loopne
es
mov
push
or
xchg
mov
aam
fidivl
jge
mov
pop
jmp
or
push
dec
add
mov
mov
rcll
fs
xor
scas
ret
aad
and
jbe
int3
addr16
nop
mov
aam
mov
scas
xor
push
pop
enter
sbb
xor
push
adc
jbe
stos
add
inc
imul
pop
pop
ficoms
imul
mov
test
imul
je
push
xchg
pop
push
out
js
pop
push
inc
out
mov
sbb
mov
jne
xchg
and
lahf
pop
xchg
or
test
sub
movl
fwait
imul
mov
lea
insl
fwait
notl
sbb
mov
inc
inc
setge
jb
fdivs
stos
xor
aaa
cmp
mov
movsl
jg
insb
shrb
or
sbb
xorb
xchg
pop
scas
ret
mov
cltd
pop
mov
ds
leave
dec
rcrb
sbb
adc
mov
hlt
pop
pop
in
repz
or
dec
xor
aaa
out
int
out
stc
sar
stos
scas
orb
iret
rclb
inc
nop
into
fwait
lods
jle
mov
test
and
add
fwait
mov
pop
lods
and
clc
jg
xchg
xchg
cwtl
xchg
aad
adc
fcoms
mov
xchg
mov
cltd
ror
sub
sub
cmp
inc
mov
rcr
dec
testl
lock
popf
fstps
jnp
pushf
jns
out
dec
insb
lahf
xchg
in
cli
mov
cmpsl
mov
cltd
jmp
cmc
fidivrs
hlt
loopne
cmp
push
mov
pusha
nop
arpl
mov
push
push
icebp
xor
push
pushf
enter
popa
sbb
loopne
sub
pop
lods
push
mov
test
add
iret
outsl
fcom
dec
and
sub
jg
mov
push
ret
jno
jg
dec
out
shl
and
cmp
inc
cmp
aaa
add
jb
add
mov
and
std
xorl
mov
adc
cmpsb
ret
shlb
xchg
sbb
sub
add
je
pop
ds
daa
clc
sbb
popf
out
aaa
push
sub
lods
xor
imul
inc
and
xor
cmpsl
dec
mov
or
jl
fs
mov
cmp
ret
repz
push
jle
add
aam
jl
loop
shll
xchg
sti
dec
bound
lret
pushf
mov
sub
inc
jnp
push
dec
ds
xor
cli
mov
repz
in
lahf
mov
lahf
dec
cmc
test
leave
jbe
mov
or
arpl
addr16
add
outsl
dec
lret
sub
xchg
push
sub
mov
pop
mov
adc
push
push
xlat
sub
jg
or
or
jnp
and
push
inc
mov
add
jae
fldt
cmpsl
ret
in
es
add
imul
inc
rcr
fs
mov
out
stos
dec
idivl
mov
insl
or
imul
mov
xchg
test
sbbb
in
js
scas
aaa
xchg
inc
std
mov
ret
dec
xchg
cmp
dec
add
xor
jne
dec
in
add
or
mov
adc
into
push
shrb
or
lods
mov
cmpsl
jno
scas
idivb
xchg
inc
dec
fstl
mov
fnstenv
jge
jp
mov
aas
jl
inc
dec
inc
jbe
sub
scas
or
inc
fidivl
or
sbb
cmp
arpl
mov
and
outsl
leave
lock
iret
loope
xchg
hlt
xchg
sub
cmp
xor
adc
icebp
push
push
add
mov
mov
aam
xchg
and
sub
mov
jns
aaa
inc
hlt
sbb
mov
ds
lods
sbb
fwait
mov
cld
lods
sub
push
std
ds
rorl
rcrl
insb
push
jge
js
stos
xor
ret
aaa
xor
cmp
pop
push
enter
jae
and
rclb
lret
push
clc
or
insb
adc
or
mov
jge
clc
rorl
pop
push
xchg
outsl
jecxz
xchg
fbld
arpl
dec
daa
andl
pop
mov
lret
jno
aaa
or
movb
mov
std
jo
ficompl
xor
ds
jb
dec
dec
scas
and
pop
inc
cmc
shrb
into
pushf
add
add
inc
mov
in
push
xchg
or
or
mov
dec
jb
cmp
cs
fdivrl
sub
xor
add
mov
rcrb
popa
mov
lea
daa
jp
and
stos
jecxz
or
mov
pop
out
push
aas
addl
ret
xlat
pop
mov
dec
mov
push
aam
mov
sahf
sbb
lds
add
test
and
pusha
add
xor
lret
mov
jne
stc
xchg
cmp
sahf
mov
pop
test
test
cmp
insl
ret
neg
loope
bound
jb
ljmp
icebp
fwait
movsl
hlt
mov
mov
inc
rorl
in
sbb
pop
dec
andb
mov
inc
fwait
mov
add
lcall
push
inc
je
xor
je
popf
cmc
jmp
push
addr16
and
xor
jle
or
sbb
inc
stos
jg
and
fwait
stos
imul
sbb
or
clc
in
and
fstps
or
mov
js
lcall
outsl
orb
pop
ds
adc
mov
jecxz
mov
sbb
inc
dec
js
mov
jns
cmp
lds
mov
jmp
push
cmc
or
or
mov
pusha
pop
popf
push
dec
push
insb
rcl
push
sbb
daa
enter
mov
addr16
and
bnd
jnp
pop
repnz
jecxz
or
fnstenv
call
pop
sbb
add
add
pop
push
ja
dec
pop
fildl
in
or
xor
and
mov
mov
dec
cltd
cwtl
dec
cmp
int3
mov
out
adc
stc
loop
ret
lahf
mov
fsts
mov
add
add
das
jne
ss
ljmp
and
push
inc
push
inc
pop
dec
test
arpl
and
or
shlb
mov
pop
pop
dec
test
incb
inc
add
jg
mov
inc
xor
pop
add
test
xchg
xor
xchg
push
mov
stos
mov
sbb
jmp
fcoml
test
pop
mulb
je
inc
dec
fstps
in
jmp
popf
shll
ss
adc
in
out
stc
cmc
pop
sub
iret
adc
add
pop
sub
jae
imul
aad
xchg
sub
es
sub
test
in
inc
dec
add
jnp
mov
icebp
aam
cli
inc
enter
mov
inc
imul
shll
addb
jmp
in
ret
cmpsl
out
adc
mov
cmpsl
or
mov
leave
xor
jns
xchg
call
sbb
fsubr
fadd
scas
sub
or
out
stos
jge
cmp
test
push
je
add
push
inc
or
adc
cmpsl
add
jns
pusha
xchg
pop
repnz
jae
mov
outsb
mov
cwtl
dec
jns
or
lret
xchg
add
lcall
addb
hlt
and
mov
inc
je
dec
ss
lods
test
cmp
sahf
and
push
subb
or
xchg
sbb
xor
lret
loop
inc
mov
dec
mov
mov
ret
sbb
in
jb
shr
fwait
fwait
test
jo
xor
jne
shrl
cmpsb
rolb
pop
pop
sub
insb
test
mov
mov
stc
jne,pn
xor
fdivr
pushf
mov
sti
sub
dec
dec
popa
mov
cmp
outsb
fwait
jecxz
jge
std
test
cmp
jne
push
sub
int3
xchg
in
or
mov
gs
sub
cwtl
cmpsl
mov
mov
pop
insl
push
xchg
idivl
inc
dec
fwait
mov
cmp
xchg
mov
or
idiv
stos
cmpsl
xchg
rorl
loopne
bound
into
addr16
dec
mov
shr
in
mov
clc
push
pusha
xchg
movsl
or
dec
sysret
aam
cli
sti
adc
inc
repz
jge
dec
sub
sbbl
sub
mov
or
add
rcll
pop
lahf
dec
stos
hlt
mov
fcompl
sbb
or
sbb
and
fmull
ret
outsl
jle
dec
or
cwtl
imull
pop
fwait
mov
jbe
jae
nop
and
cmp
jo
add
dec
xorl
mov
ret
inc
xchg
clc
xor
lds
fstps
and
mov
pop
std
push
adc
cmpl
ficompl
jmp
ds
repnz
daa
inc
cmpsb
lret
cmpsl
enter
pop
dec
sbb
jecxz
sarl
stos
fcomps
pusha
out
mov
or
mov
lock
push
into
lds
sti
lahf
sbb
loope
and
and
push
aad
loop
jle
push
shll
iret
je
xchg
mov
fcmovu
jb
mov
fnstenv
xchg
jne
enter
nop
sahf
test
shr
cmp
and
mov
xor
xor
push
push
out
mov
jno
aad
ljmp
shll
leave
in
add
fistps
xor
mov
or
xchg
jno
cmp
pop
insb
sub
popf
test
jae
mov
push
js
rcll
aaa
xchg
fcomp
out
int3
pop
shr
mov
inc
repz
sti
or
adc
dec
add
pusha
popf
mov
cmp
inc
shll
xchg
dec
mov
and
ja
hlt
mov
test
mov
enter
dec
mov
jne
xor
es
xchg
pop
jge
cmp
cmp
movsl
je
xor
insl
dec
push
int3
fs
mov
mov
fs
lret
ja
std
aad
inc
test
daa
insl
push
and
lea
cltd
xchg
and
ret
cwtl
inc
jl
adc
idivb
in
mov
or
push
xchg
testb
or
iret
mov
pop
or
sahf
and
ds
pop
cmp
dec
dec
pop
inc
jo
mov
xor
cli
sti
add
fwait
adc
fisubrl
mov
sti
jp
sub
cmpsl
or
int3
sahf
cmp
insl
fnstsw
insl
pop
jns
repz
or
bnd
add
sub
sbb
mov
push
mov
imul
stc
mov
inc
test
loope
outsl
xchg
mov
movsb
xchg
stc
ret
cmp
mov
nop
push
fnstcw
popf
sbb
push
call
cmpsb
fucomip
repnz
sub
das
inc
mov
xor
outsb
mov
fstpl
mov
cs
pushf
lock
int3
and
pop
pop
jb
negb
sbb
push
push
cmpsl
push
sbb
fstps
mov
cli
out
dec
mov
sub
fisttps
test
adc
push
cmp
pusha
pop
pop
ret
inc
jns
lret
fwait
movsb
pop
pop
addr16
lret
dec
sahf
test
test
pop
int
ljmp
pop
mov
mov
push
enter
dec
lods
and
and
dec
enter
in
xchg
add
add
mov
leave
sbb
fistpl
xchg
imul
adc
jp
arpl
pusha
or
inc
pop
cmp
loop
popf
out
jg
enter
add
stc
jno
add
sub
push
or
push
nop
mov
jmp
sub
xor
xor
sub
test
xchg
cmpsb
pop
stos
dec
pop
jmp
hlt
nop
xchg
and
jo
and
popa
loop
push
out
fdivl
add
imulb
cmp
lock
insb
and
insb
in
lods
inc
shr
inc
test
mov
outsl
inc
roll
or
xor
pop
or
aam
xchg
ror
fsin
popf
adc
jnp
push
cmpl
or
cs
sar
loopne
mov
out
sub
ficomps
mov
cld
and
and
fwait
mov
stos
inc
inc
rcll
mov
inc
jge
sub
nop
cltd
pushf
mov
stc
push
out
cld
out
aad
push
sbb
js
out
repz
pop
lock
dec
mov
mov
and
inc
dec
mov
popa
out
lock
nop
push
enter
insb
fadd
push
in
dec
pop
jns
fcoms
xchg
jecxz
clc
mov
xor
inc
lea
mov
sub
test
jge
cmp
fimull
mov
outsl
out
xchg
cmp
mov
call
insl
imulb
xchg
sub
mov
test
mov
mov
cli
xor
sub
fiaddl
xor
popa
jmp
adc
int3
dec
lcall
insb
cmp
fbstp
add
inc
into
xor
jo
and
push
cmp
sbb
cwtl
sahf
jle
push
push
out
jo
imul
mov
imul
popa
psllq
insb
fmuls
push
xor
je
dec
jg
pop
popl
cltd
jnp
pusha
inc
pop
jle
adc
pop
outsl
pop
mov
mov
cs
mov
insl
xor
jle
sbb
xor
xor
enter
insl
xchg
sbb
push
pop
pop
cmp
data16
push
jns
es
add
sbb
xchg
mov
pop
add
pushf
call
cmp
dec
xor
push
inc
and
sub
ret
xchg
addr16
dec
mov
mov
sub
inc
dec
inc
jle
orl
xchg
cld
cmp
rcrb
mov
jl
sarb
jnp
stos
into
pop
jne
mov
jecxz
mov
lds
loop
adc
and
jecxz
mov
sbbl
jl
dec
pop
or
mov
push
jmp
mov
add
adc
xor
add
notl
mov
jns
mov
push
pop
stos
leave
ja
outsb
mov
scas
xorl
mov
movsb
je
sarb
pop
jnp
cmp
push
pop
lea
sbb
aaa
mov
mov
and
and
pushf
push
pop
in
mov
repnz
pop
mov
pop
cwtl
pop
mov
lret
or
lea
pop
je
repz
bound
and
push
jnp
js
mov
rorb
add
incb
inc
clc
xor
mov
push
popf
movsl
test
adc
jl
ja
pop
xchg
mov
cwtl
into
xchg
pusha
or
cltd
lock
dec
push
push
pushf
ds
push
jecxz
adc
cmp
pop
jno
pop
andl
jns
icebp
and
test
jecxz
xchg
mov
xchg
fs
or
adc
pop
in
data16
ds
jns
cmp
inc
add
inc
js
or
and
mov
les
mov
in
loope
mov
aad
pop
pusha
pop
pop
xor
dec
xor
movsbl
mov
test
adc
sbb
sub
mov
or
cmp
js
aas
add
dec
inc
pmulhuw
test
push
hlt
sub
sbb
out
stc
or
fiaddl
imul
jmp
push
mov
sbb
mov
jne
xor
jmp
mov
add
cmp
pusha
xchg
popf
dec
sub
stc
repz
in
adc
fidivl
aas
and
sbbl
add
or
push
sbb
sbb
mov
arpl
mov
popa
mov
pop
mov
fisubs
inc
iret
mov
sahf
jbe
cmp
xchg
out
inc
into
stos
cmc
pop
push
testl
in
and
xchg
pop
push
lea
je
popf
setge
orb
mov
test
fcmovnbe
mov
shlb
int
mov
insb
or
insl
pop
sub
xor
inc
dec
mov
sbb
pushf
fwait
dec
mov
cld
sub
xor
xor
bound
ret
pop
ljmp
pusha
sub
dec
xchg
push
mov
enter
unpcklps
clc
mov
daa
or
mov
sbb
insl
adc
sub
sbb
fisubs
leave
cmp
inc
rcrl
push
in
fcoms
jle
fcoml
mov
xor
sub
or
pop
jno
icebp
call
addl
xchg
fs
stc
mov
push
lods
push
mov
int
insl
mov
stos
out
pop
lret
popa
jno
test
rorl
add
lcall
arpl
dec
push
xchg
fsubs
jmp
lret
mov
in
mov
push
out
cltd
mov
lahf
addr16
fwait
xlat
arpl
fprem
es
sub
cmp
pop
dec
dec
lahf
pop
nop
mov
push
sbb
inc
xchg
mov
leave
lods
shll
mov
cmp
lods
pop
mov
scas
aaa
jl
inc
cmp
icebp
sbb
jnp
jb
pop
nop
mov
xchg
pop
rcll
cmp
xchg
pop
lcall
in
rolb
insb
push
pop
in
mov
mov
or
push
into
sub
mov
lret
mov
daa
inc
data16
shrb
cli
data16
repz
sbb
scas
adc
sbb
mov
int
sbb
cmp
or
fwait
jmp
sub
push
loope
push
jno
inc
mov
mov
xor
inc
dec
into
dec
outsb
mov
inc
out
push
mov
xchg
dec
dec
jmp
dec
ljmp
mov
aad
pop
sti
fdivl
ret
clc
push
sbb
cmpsl
lock
mov
add
inc
loopne
mov
cmp
sbb
data16
xor
jbe
sub
pusha
sbb
insb
pop
xchg
pop
mov
or
adc
sub
sbb
sub
xchg
xor
add
ljmp
dec
dec
lock
rcrb
jno
gs
mov
jmp
push
xchg
mov
mov
lret
dec
dec
and
mov
orl
fdivl
push
pop
push
outsb
pop
sbbb
testb
mov
je
cli
imul
sbb
ss
xor
js
jmp
sbb
add
dec
dec
subb
mov
lret
or
negl
sbb
rcrl
repz
push
leave
in
mov
out
enter
push
test
sahf
and
xor
in
cmp
in
add
push
in
mov
imul
adc
and
call
daa
sub
and
test
and
push
add
xorb
cmpsb
rcll
mov
scas
inc
inc
dec
mov
or
cwtl
clc
into
pop
sahf
sub
enter
mul
ja
fstps
insl
outsb
pop
or
mov
xchg
and
dec
lea
jo
pop
and
rcrb
adc
mov
aad
test
mov
fxch
push
add
mov
pop
daa
dec
iret
stc
movsl
es
cs
mov
mov
ficompl
lahf
and
movsb
pop
out
jbe
push
insb
icebp
xchg
and
scas
insb
mov
mov
and
jp
pop
hlt
les
sbb
push
mov
mov
inc
cltd
dec
in
lds
jecxz
mov
push
mov
jns
aad
ds
jb
mov
fsub
push
pop
xchg
or
sub
dec
xor
jno
adc
jmp
xchg
rcl
mov
adc
faddl
jb
push
nop
test
sahf
push
inc
js
stos
add
insl
lret
dec
arpl
cmp
shr
pop
cli
mov
lock
cltd
mov
andl
push
mov
push
pusha
fisubs
lock
nop
pop
das
and
mov
repnz
pop
mov
cwtl
pop
xchg
xchg
dec
aas
adc
ds
mov
add
test
lods
adc
mov
mov
dec
jl
imul
jo
sbb
mov
dec
fwait
adc
mov
push
repz
dec
data16
dec
test
in
inc
dec
and
dec
lret
push
jl
xchg
lcall
jnp
xchg
movsb
mov
sub
inc
adc
pop
xor
inc
mov
movaps
fisttpll
stos
jo
xchg
notb
arpl
inc
mov
pop
insl
stos
jecxz
xchg
jmp
repz
mov
sub
arpl
test
push
scas
mov
idivb
pop
sub
jp
cld
fnstenv
and
addb
shlb
mov
icebp
sub
lea
repnz
mov
adc
push
cmp
test
sub
mov
inc
xchg
jl
sub
lods
enter
lea
fdivl
add
cmp
xor
addr16
enter
sub
ficoml
test
mov
scas
out
leave
scas
ret
nop
fistps
xchg
sub
push
fists
jb
out
pop
insb
pop
sbb
dec
mov
cmp
lock
sub
gs
mov
aaa
cltd
mov
adc
pop
mov
mov
enter
mov
sbb
mov
inc
stc
or
lahf
call
pop
cmp
pushf
dec
add
ss
dec
cld
jecxz
inc
das
inc
fisttpll
xchg
mov
test
cwtl
popa
pop
sbb
xchg
test
mov
pushf
in
pop
and
rcrl
sbb
cmp
adc
xchg
xor
shl
adc
aaa
dec
xor
aas
pop
test
jmp
data16
outsl
mov
jnp
push
xor
push
les
and
es
add
lret
and
sbbl
mov
inc
das
scas
enter
xlat
outsb
test
xchg
int3
cmp
ds
push
fadd
lods
jle
sbb
movl
sbbl
out
addr16
adc
and
int
dec
mov
lcall
adc
push
add
jbe
jb
jle
or
mov
add
pop
push
inc
add
outsl
xor
sbb
iret
inc
hlt
lods
jmp
adc
lea
movsl
out
js
mov
mov
sbb
xor
sbb
repz
gs
loope
fdiv
add
jns
dec
push
lods
cmp
mov
pushf
xor
and
push
mov
or
push
xor
shrl
fdiv
test
es
cld
adc
inc
jle
mov
fs
cmp
push
xchg
outsb
mov
or
js
adc
sub
fsts
lahf
xchg
jecxz
mov
push
lods
xchg
jl
pop
pushl
add
in
repnz
aad
rclb
dec
fs
and
ja
jge
das
xlat
adc
std
jp
inc
mov
adc
inc
cmpsl
pop
push
lahf
pusha
hlt
sbb
shr
lret
mov
sub
adc
mov
dec
push
xchg
roll
jge
cmp
ja
push
sub
lcall
lcall
enter
out
pop
lea
sbb
cmp
je
push
jp
sub
lcall
imulb
or
stos
and
jmp
xchg
es
dec
ljmp
arpl
scas
mov
out
xchg
ss
sub
mov
adc
pop
dec
ficoms
xchg
cmp
ret
or
in
fistpl
iret
movsb
mov
pop
cmpsb
mov
cmp
and
xor
shlb
out
jle
sbb
stc
std
iret
movsb
jo
adc
pop
mov
aad
test
inc
xorb
or
pusha
icebp
repz
enter
jb
repz
shrl
ss
int
push
orb
aas
nop
idiv
xchg
popf
jo
fiaddl
mov
aam
xor
test
ljmp
xchg
xor
out
mov
inc
cmp
cmp
nop
les
pop
mov
xchg
inc
mov
stc
stos
mov
shll
cli
mov
shr
push
add
adc
jecxz
in
dec
and
sub
cmp
cmp
sub
xchg
xlat
and
rcrb
aam
xlat
xor
sub
sbb
dec
push
mov
mov
cmp
dec
std
loop
cmp
test
mov
das
leave
or
mov
xchg
adc
inc
sbb
and
js
sub
xchg
loopne
popa
iret
inc
fsqrt
flds
or
mov
pop
push
xchg
push
mov
daa
adc
js
jp
jecxz
clc
and
setp
jge
fiaddl
mov
in
inc
xor
pop
es
fsubl
sub
push
lea
cltd
jge
or
jnp
test
add
and
hlt
mov
cmpl
jne
ss
lret
sub
jp
ljmp
jns
cmp
jae
out
mov
or
rcll
popf
imul
push
push
loopne
inc
in
leave
in
lods
cmp
pop
pop
cld
lret
ss
pop
mov
sahf
jge
dec
push
jo
jl
cmp
adc
in
call
dec
xchg
int3
repz
rcll
int3
inc
mov
jle
cmpsl
sub
enter
inc
xor
loop
or
inc
mov
dec
insl
cmc
fs
jle
push
xchg
imul
loop
xchg
mov
sub
fstpt
mov
aas
aad
mov
call
das
sbb
rorb
and
repnz
sub
pop
cmp
andl
leave
cld
mov
lea
in
sub
sbb
mov
dec
add
mov
jg
sbb
mov
sbb
in
fmull
mov
es
fabs
je
div
pop
lea
hlt
popf
pop
in
mov
stc
mov
fadds
in
mov
pushf
adc
and
fistpll
xchg
xor
mov
xchg
nop
out
sbb
sub
std
cmpl
sbb
cmp
fcoms
aaa
ret
mov
nop
shrl
jne
dec
sbbb
mov
pop
pop
add
neg
jnp
clc
shll
pop
mov
sub
cmp
repz
dec
mov
das
test
xchg
loopne
inc
adc
add
push
pushf
inc
fidivs
adc
addr16
mov
dec
xor
xchg
pop
movsb
or
or
fcoms
js
xchg
lods
or
les
jne
fsubrs
mov
xor
stos
sbb
insb
iret
je
xchg
xorb
pop
cmp
stos
lahf
sbb
gs
mov
cwtl
xchg
cs
jne
mov
xor
sbb
lock
loope
imul
pop
and
lret
ss
std
dec
pop
jp
xor
in
sub
mov
jo
push
iret
test
sbb
push
ret
sahf
shrl
scas
lods
mov
push
repnz
imul
aam
push
push
mov
jae
sub
popa
sub
je
dec
mov
jg
jmp
test
je
imul
and
test
insb
inc
adc
dec
pop
mov
jno
and
int3
pop
jno
push
ja
std
idivb
aaa
rorb
notb
push
mov
adc
popl
mov
jmp
or
jle
jb
adc
test
jae
xor
hlt
pop
push
mov
mov
jne
jmp
andl
sub
das
ficompl
pop
int
mul
pusha
das
lret
xchg
insb
pop
push
pushf
aam
jle
test
adc
pushf
xor
sub
int3
or
mov
fwait
bnd
xchg
inc
ljmp
arpl
xchg
cwtl
mov
ror
mov
stos
inc
pop
cmpsb
movsb
mov
add
mov
scas
xchg
repz
movsb
adc
iret
dec
mov
push
aam
xchg
adc
pop
adc
outsb
and
lock
loopne
inc
sahf
cmp
or
inc
test
xchg
inc
xlat
pop
cwtl
sbb
jno
adc
daa
movsb
push
mov
mov
fstpl
bound
movsb
imull
movsb
push
hlt
mov
cmpsb
out
std
lret
mov
mov
xchg
mov
cmpsb
pop
pop
jecxz
sub
push
out
and
addr16
in
sbb
pop
push
push
xorb
add
call
add
mov
dec
mov
xor
sarl
xor
inc
js
les
mov
out
mov
mov
jbe
xlat
and
faddp
add
aad
add
out
les
aas
push
pop
mov
dec
les
aam
popf
in
xlat
out
ss
pushaw
sbb
loop
imul
sub
mov
and
daa
sub
inc
mov
rcrb
fldl
or
sub
sub
outsl
pop
sub
jl
subb
test
mov
dec
aam
sbb
in
mulb
sbb
outsl
sbb
cmpl
adc
cli
rcrb
fisttpl
and
fwait
cmp
arpl
pop
mov
inc
or
inc
sub
pop
sbb
inc
in
cld
push
and
sbb
mov
pop
stos
int3
dec
dec
mov
hlt
cli
test
loopne
stos
sub
jp
scas
popa
popf
mov
ret
mov
rcr
add
dec
sub
mov
repnz
jmp
stc
adcb
cmc
xchg
clc
and
mov
ret
cmc
cmp
sub
call
enter
lock
mov
add
push
in
inc
fmuls
testl
ja
mov
mov
fdivrl
jnp
add
xchg
stos
cltd
jecxz
or
or
dec
iret
inc
lret
aas
add
call
pop
fcom
mov
jecxz
xor
sarl
mov
push
sbbb
or
cltd
push
or
pop
pop
or
bound
pop
adc
mov
vunpckhps
bsf
mov
pop
in
fcoms
lea
lods
mov
bound
jne
pop
xor
jge
mov
sbb
jne
add
sbb
or
and
inc
push
repz
jl
or
sub
clc
test
idivb
pop
mov
or
mov
xchg
sahf
dec
cli
lods
xor
mov
pop
mov
es
nop
jmp
jno
push
mov
addr16
popf
lahf
loopne
mov
sbb
mov
mov
lret
mull
ds
mov
jge
ja
out
pop
lods
dec
std
aad
jno
movsl
mov
cmp
test
xchg
inc
js
pop
pop
mov
test
adc
in
lret
fbstp
add
add
insl
dec
cmpsl
cmp
sub
repz
fisttps
cltd
and
inc
aaa
stc
jl
movsl
xor
mov
lds
in
test
pop
subl
cld
push
stos
adc
mov
push
xchg
lds
cmp
fisubrl
xchg
mov
push
popf
insl
xchg
rorb
push
outsb
pop
xchg
mov
popa
dec
mov
cli
mov
int3
repnz
mov
xchg
hlt
nop
add
or
adc
fcomps
shl
test
lods
js
outsb
jmp
pushl
mov
sub
mov
and
pop
and
xlat
jno
les
cmpsl
mov
mov
adc
imul
icebp
into
stos
test
xor
mov
es
rol
jnp
fsubp
sub
mov
mov
je
sbb
sub
daa
push
or
and
inc
mov
pop
stc
fistps
aas
ret
inc
xchg
popf
ds
lea
movsb
jle
mov
pop
les
inc
into
hlt
sbb
cmpsl
pop
popa
pop
jb
popa
out
popf
pop
aad
lea
and
mov
or
sub
enter
or
jnp
lea
xor
aad
insl
and
sti
mov
xor
rorl
inc
stc
or
inc
cwtl
cs
outsb
and
jae
stos
leave
lret
or
fucomp
push
sbb
fdivrs
sbb
add
imul
sti
fidivs
jecxz
lahf
mov
inc
pop
stos
imul
sbb
scas
aaa
pushf
leave
push
inc
add
xchg
out
aam
js
sahf
adc
es
clc
xchg
int3
adc
xlat
push
mov
nop
sarl
mov
shlb
inc
xchg
add
jns
loope
cmp
cltd
mov
clc
pop
push
pushf
push
minps
fistpll
mov
add
test
jge
cmp
arpl
in
outsb
orb
mov
jge
movsl
hlt
test
fnstcw
push
out
call
add
xchg
inc
clc
xlat
add
pop
jmp
push
es
or
sbb
pusha
daa
mov
push
jo
iret
pop
lret
iret
mov
or
mov
or
out
loopne
loop
int
je
xor
dec
lock
mov
pop
outsl
imul
ret
pop
notb
enter
sbbl
pushf
mov
popa
subl
adc
pop
mov
das
xor
push
es
fwait
mov
dec
roll
dec
jmp
inc
outsl
fisubrs
add
inc
fcmovnbe
pop
aaa
and
loop
pop
sub
inc
mov
scas
dec
push
jmp
pop
push
jno
int
jmp
pop
scas
popl
push
stos
mov
sub
bound
add
jmp
push
dec
xchg
addr16
jmp
mov
call
mov
ss
push
and
hlt
push
pop
mov
mov
mov
dec
int
mov
sarl
xchg
shl
or
popa
jns
or
push
std
loope
imul
fadd
mov
les
hlt
push
loopne
sub
adc
das
inc
dec
loopne
jne
fcomip
cmp
sbb
movsl
inc
std
mov
repnz
pop
mov
into
repnz
and
xor
push
cld
scas
cmp
imul
adc
fidivrl
aad
cmp
rol
jnp
add
sbb
scas
xchg
xor
mov
out
ljmp
pop
nop
nop
dec
andb
sub
pop
mov
or
iret
mov
dec
cltd
and
mov
popa
popf
rcl
mov
xchg
int3
push
dec
mov
cs
lret
xchg
jmp
and
cmp
jp
cmpsb
testl
sub
inc
lret
xor
xor
aaa
adc
repnz
xlat
cli
jp
fldl
push
fidivs
aad
in
push
es
loope
in
push
cmp
cwtl
mov
cmp
mov
and
jecxz
push
in
aas
mov
int3
stos
in
mov
mov
xchg
dec
xchg
jae
inc
incb
in
enter
movsl
ss
lret
sub
mov
xchg
jle
lret
sbb
movsl
repnz
jecxz
gs
mov
aas
fs
cmp
or
jmp
xchg
jge
xchg
orb
outsb
dec
daa
sbb
stos
cmpxchg
dec
hlt
loopne
push
je
inc
mov
xor
add
mov
clc
incb
roll
stc
loope
fmuls
daa
jmp
out
push
mov
jge
jg
jl
aas
xchg
jae
fsts
cmp
orl
fs
shlb
inc
int3
adc
je
nop
mov
pop
shr
xor
aaa
mov
enter
fs
mov
negb
dec
mov
push
shl
and
mov
xchg
mov
mov
mov
push
jo
pop
inc
sti
xor
mov
cmpsl
shll
xor
and
adc
into
int
stos
or
jge
ret
rcrb
cmp
fsubr
mov
lret
push
sar
mov
xchg
in
inc
andl
mov
ror
xor
pusha
jae
cld
sarb
jmp
jbe
aaa
mov
outsl
fsts
orl
xorl
xchg
or
adc
jle
push
pop
pop
data16
imulb
pushf
lcall
mov
dec
ficomps
adc
mov
call
inc
jnp
sbb
push
cmpsb
sbb
and
mov
xchg
xchg
popf
daa
push
mov
outsl
cs
jge
shll
sbb
out
loope
dec
lea
insl
outsb
insb
stc
filds
shl
mov
jmp
xchg
xor
mov
dec
lcall
leave
sbb
pushf
fdiv
stos
jns
es
inc
sahf
adc
loop
mov
popa
push
cmc
push
cld
cli
or
cmpl
adc
push
push
dec
mov
push
rorl
mov
inc
jle
pushf
pavgw
aas
mov
andl
sbb
adc
dec
dec
iret
and
hlt
jge
test
fcmovnbe
outsb
xor
movsb
xor
psllw
cmpsb
xlat
in
sbb
adc
lock
popa
sahf
imul
pop
in
mov
mov
leave
cmp
cmpsl
and
push
cltd
daa
or
xchg
ds
mov
inc
in
filds
shrl
int3
push
add
std
add
out
add
in
dec
fisubrl
pop
jmp
pop
mov
hlt
and
adc
pop
js
jge
and
adc
fildl
add
shrl
xchg
or
push
aad
cmpsb
xchg
cs
mov
imul
xchg
arpl
in
push
adc
push
cmpsb
push
imul
push
loope
mov
rorl
or
popw
inc
ret
mov
scas
mov
addl
xchg
scas
xor
sub
out
fwait
mov
ja
aas
loop
mov
call
mov
bound
ja
std
jae
and
sub
call
add
dec
iret
mov
mov
cmpsl
sbb
mov
insb
and
jmp
sbb
add
mov
daa
jecxz
pushf
lods
lret
jge
add
or
add
or
ljmp
loop
inc
mov
bound
sub
mov
std
xchg
jp
mov
jge
push
dec
sub
lcall
arpl
icebp
leave
repz
ftst
icebp
cmp
ja
xor
add
fdivrl
nop
shll
and
dec
sub
mov
gs
add
fcom
icebp
jb
inc
jae
lahf
rorl
inc
test
aad
mov
xor
nop
call
mov
pop
inc
jmp
fsubrs
pusha
push
dec
lock
push
das
lods
mov
push
pop
push
push
adc
sub
mov
out
pop
pushf
adc
inc
xlat
inc
mov
pop
test
gs
out
pop
enter
dec
ja
or
cmpsb
rep
lahf
and
jp
shlb
jg
sbb
mov
cmp
mov
not
lahf
lcall
cltd
jle
mov
std
or
jmp
jl
popf
popa
loop
jno
imul
pop
mov
sub
andl
add
test
std
xchg
jo
mov
call
jbe
insb
pop
sub
data16
pop
fwait
mov
and
pop
pop
rcrb
jl
fistl
lret
sub
add
jns
bound
jl
xor
push
lock
repz
pop
fmuls
push
push
add
lahf
andl
sbb
sub
imull
sub
and
xchg
scas
adc
or
mov
push
imul
inc
jg,pn
sub
cmpsl
and
push
push
shll
xor
push
and
scas
cmp
mov
pop
xor
movsl
mov
bound
test
test
push
sti
inc
mov
lcall
adc
jne
inc
xchg
arpl
enter
das
dec
or
push
repz
mov
mov
push
adcl
ljmp
fistps
rorb
xor
ja
pop
mov
jge
xor
push
movb
outsl
shl
shld
xlat
sbb
and
lock
faddp
add
pop
mov
fcmovnb
xlat
insl
bound
cmp
shll
cmpsb
mov
inc
pop
mov
cmc
ret
mov
dec
sbb
cmp
scas
xor
call
je
popf
inc
in
fs
in
into
wrmsr
in
call
xor
int3
loope
jns
sub
lock
and
pop
nop
lret
sbb
mov
icebp
int3
cmp
movsb
ja
jae
jg
pop
loopw
sbb
lock
pop
ljmp
loopne
sahf
push
outsb
out
daa
fsub
in
dec
cltd
cs
loop
aam
sub
pop
adc
insl
or
and
push
push
xor
aas
rcll
push
sub
xchg
inc
in
pop
sbb
or
aaa
inc
stc
cs
and
andb
lods
imul
mov
pop
pop
and
mov
cltd
fstpt
xor
mov
lods
pushf
nop
jae
repnz
lods
mov
not
into
leave
jl
jge
leave
sbb
enter
mov
and
shlb
inc
movsb
jg
xchg
xchg
out
inc
cmp
mov
xchg
out
jl
leave
pushf
sbb
fsubs
sbb
cltd
aam
jb
loope
hlt
hlt
shrb
dec
dec
in
adc
dec
mov
pop
frstor
lea
cmp
jae
insb
add
sub
jg
sbb
test
inc
and
xor
xor
out
fisttps
xchg
jne
out
mov
lret
test
sub
jmp
xchg
push
adc
je
adc
movsb
pusha
lea
mov
fistpl
inc
push
pop
pusha
adc
daa
cmpsl
push
push
jl
insb
push
insb
fbstp
push
jne
dec
mov
rclb
rorb
in
out
mov
sbb
or
insl
xorb
stos
fmul
js
push
jmp
push
pop
xchg
psubb
lahf
cmpsl
mov
and
in
mov
add
cmp
inc
pop
jg
sub
xchg
imul
mov
sbb
push
leave
lret
bound
sbb
jbe
std
outsb
mov
fidivs
push
movb
fidivrs
cmp
clc
jle
pusha
jle
out
inc
mov
xchg
push
das
andl
mov
pop
xlat
mov
push
ss
out
mov
loop
movsb
in
cmp
gs
cli
les
ucomiss
push
sbb
push
mov
je
dec
xchg
int
adc
inc
lret
pushf
movsl
rcl
xchg
lret
hlt
out
jl
std
dec
inc
jp
in
pop
pop
inc
mov
jl
push
or
push
pop
xor
pop
stos
ljmp
adc
loop
arpl
add
call
sbb
mov
dec
dec
and
xor
loop
inc
or
add
hlt
jg
ja
cli
xor
sahf
pop
sbb
mov
mov
xor
aaa
shrl
mov
inc
mov
in
push
sahf
fs
mov
or
or
mov
jl
test
dec
cmp
out
xor
loop
mov
mov
push
xchg
or
lock
xor
insb
xchg
aas
jae
push
aaa
mov
clc
inc
sub
enter
aaa
ds
iret
adc
lcall
cmp
test
outsb
sbb
mov
lret
push
sbb
lds
bound
jb
mov
cmpl
bound
jns
add
add
xor
xchg
movl
ds
in
subl
in
rclb
push
add
mov
inc
push
xchg
enter
push
imul
xchg
jmp
outsb
jnp
xchg
stos
imul
mov
jmp
push
test
adc
xchg
divb
add
test
jl
xchg
js
and
xor
and
xor
orb
scas
add
jnp
lret
lea
lret
rol
incb
inc
rcrb
into
add
add
aaa
jmp
mov
adc
ret
add
jbe
jg
clc
lret
rcl
mov
ja
out
or
lock
cli
dec
and
add
icebp
sub
cmpsb
pop
sub
ds
test
or
subl
adc
testb
dec
push
fisttps
xor
cmp
xor
and
mov
sbb
sbbl
sti
andb
sti
lcall
scas
adc
push
int
jno
xor
mov
dec
inc
inc
sub
push
fisubs
cmp
insb
pop
fldenv
mov
lcall
dec
inc
inc
mov
lods
in
xlat
xchg
clc
jae
je
pop
mov
nop
jg
inc
push
insb
pop
movsb
jbe
les
lods
jo
mov
cmpsb
popa
mov
sub
pop
lret
adc
pop
cmp
adc
or
mov
loope
aad
lret
inc
ret
fwait
int
pushf
push
js
in
pop
dec
push
in
lcall
scas
pop
int3
ljmp
and
or
pusha
clc
or
imul
fs
int
shrl
cmp
in
mov
or
adc
pop
subb
dec
sub
jg
adc
rcrl
adc
cmpsb
inc
or
add
mov
out
test
js
std
lahf
stc
out
and
ds
sbb
mov
xor
rol
ja
testl
out
fbld
pop
iret
mov
aad
mov
and
movsl
leave
daa
push
lds
pop
dec
dec
add
clc
mov
out
je
test
cmp
jle
fsubrs
repz
test
repnz
mov
cmc
decl
sbb
shl
notb
inc
sahf
repnz
xor
adc
mov
arpl
imulb
inc
xchg
adc
aaa
and
mov
mov
jmp
jo
inc
test
insl
out
stc
mov
repnz
sahf
xlat
pop
adc
adc
insl
call
and
rorb
sbb
mov
adc
pop
sbbl
data16
cwtl
imul
mov
xchg
xor
out
mov
nop
bound
stos
pop
mov
sub
idiv
cmp
pop
and
dec
out
cmpsl
scas
push
pop
jl,pt
lods
fisttpll
mov
lea
or
dec
or
jl
out
aas
adc
outsl
repz
sarb
xchg
pop
cmp
mov
repz
scas
shlb
xor
lret
pop
add
mov
fsubrl
inc
int3
jnp
jp
fldenv
add
sub
jle
xor
xchg
add
xchg
aas
ja
add
xor
out
in
pop
dec
pop
daa
mov
pop
push
xchg
data16
mov
push
xor
ret
mov
cmp
test
mov
enter
int3
jge
int3
stc
xchg
shr
pop
fisubl
xor
loopne
push
mov
jecxz
outsl
add
aam
mov
or
daa
repz
pop
xlat
scas
nop
test
xchg
ja
insb
scas
loop
jmp
mov
idiv
std
push
sbb
test
adc
push
sahf
pop
insb
xchg
mov
dec
cmpsl
lahf
icebp
cmpsb
fsubr
pop
pop
ficomps
aaa
jo
dec
rorl
push
dec
cmp
mov
das
bound
arpl
cmpl
mov
cmp
inc
and
xchg
pop
pop
lcall
aam
cmovno
das
stc
cmc
fildll
insl
mov
jge
jnp
dec
pop
dec
mov
mov
or
dec
insl
repnz
ret
sti
mov
sub
in
dec
cmp
push
int
js
xor
out
mov
sub
test
xor
sbb
lahf
std
imul
or
repz
pop
push
gs
and
shll
shrb
lds
imul
gs
cltd
lds
inc
and
push
rorl
cltd
or
dec
mov
or
jnp
adc
pop
sbb
xchg
aad
or
and
xor
xchg
mov
jb
xor
cmp
hlt
or
clc
jg
inc
idiv
bound
fbstp
mov
imul
outsb
rorb
mov
push
and
fisttpll
repz
test
addr16
sbb
xchg
mov
lds
shrb
mov
aaa
scas
add
and
insb
mov
insb
fwait
out
xchg
pop
sbb
push
aam
test
jae
mov
clc
pop
pop
sti
mov
xor
imul
cmp
adc
les
lods
rorl
flds
loope
jae
popf
mov
pop
sbb
inc
fwait
mov
mov
xor
sbb
cmp
enter
cltd
movsl
adc
enter
in
push
cmp
mov
js
sub
pop
aam
ds
arpl
stc
fs
add
pop
iret
lock
subl
fwait
push
push
imull
test
mov
shrl
scas
movsl
pop
adc
aas
pushf
lds
cmp
and
mov
out
outsl
xor
mov
or
stos
cmp
sbb
xor
movsb
lea
pop
sbb
inc
add
pop
das
mov
dec
ror
mov
or
push
fdivl
or
adc
push
jnp
add
inc
or
and
cmp
sub
cmp
mov
ret
loope
mov
inc
adc
dec
mov
xor
ljmp
jbe
lea
or
mov
add
int
je
lret
outsl
fwait
enter
cmp
pop
lcall
icebp
mov
mov
les
cltd
pop
inc
mov
icebp
or
sti
mov
shl
lcall
icebp
fs
stc
and
push
outsb
mov
push
jg
ret
dec
outsb
pop
pop
outsl
repz
push
and
fadd
sub
mov
es
data16
scas
push
ret
fcmovnu
roll
sbb
les
inc
aad
jno
push
jl
inc
mov
or
jp
scas
inc
leave
xchg
rclb
sub
in
mov
ret
dec
fcompl
or
xchg
cs
sbb
in
adc
icebp
iret
push
rolb
iret
adcl
pop
pop
dec
pop
mov
movswl
sbb
inc
mov
out
into
bound
int3
inc
xor
cmpb
stc
push
mov
or
mov
fsave
dec
jns
fnstsw
ret
push
add
loopne
cmp
stos
bound
fldl
nop
sbb
fs
lea
loopne
mov
stos
mov
push
int
scas
es
test
jg
xchg
xor
pop
push
sub
pop
push
mov
mov
sbb
pop
push
movb
mov
sbb
pop
sub
testl
outsl
push
lahf
popa
dec
sti
mov
inc
mov
iret
jg
xor
add
xchg
mov
mov
adcb
jecxz
subl
loope
pop
icebp
lea
addr16
aad
cmp
cmp
in
fcmovb
aam
jmp
ret
repz
pop
fsubrs
out
pop
mov
sbbl
aam
jbe
int3
mov
movsb
les
mov
out
popa
cmp
lds
inc
sbb
inc
into
dec
dec
xchg
scas
mov
add
movsb
sub
pop
mov
pop
add
jne
push
hlt
sti
test
jo
into
sahf
fistpl
xchg
xor
stc
mov
add
dec
sarb
mov
sub
cmp
inc
loopne
lret
mov
sbb
mov
popa
push
push
in
mov
lock
rorb
cltd
and
dec
cwtl
dec
mov
out
xchg
lret
sbb
gs
mov
push
clc
sbb
pop
addr16
fimuls
ljmp
cmp
aad
sbbb
les
mov
sub
scas
in
mov
jge
add
ja
or
std
dec
inc
ja
mov
incb
push
cld
or
or
rclb
adc
pop
imul
fstp
dec
jb
push
test
and
inc
enter
bound
test
push
jecxz
cmpsl
shr
sbb
sbb
dec
xor
xchg
imul
std
jg
or
pusha
adc
pop
cmp
adc
outsl
dec
dec
pop
and
jns
sub
push
gs
cs
jl
push
jecxz
jne
mov
ret
xor
call
adc
dec
leave
mov
ljmp
sahf
jo
test
out
and
cld
push
push
inc
add
sub
clc
gs
cmp
sbb
or
icebp
lret
add
cltd
fwait
mov
aad
fwait
stos
jg
pop
xchg
lahf
xchg
cmp
pop
jg
xor
xor
jae
movsl
push
mov
sub
stos
in
jae
mov
cmpsb
add
jns
lods
fdivl
int
mov
pop
mov
jns
sub
lea
lret
mov
movsl
xor
iret
jno
mov
inc
fmulp
jmp
mov
and
and
dec
cmpsl
inc
in
fadd
cmp
nop
sub
jno
pop
jg
rclb
mov
rdtsc
fimull
in
popa
data16
in
pop
mov
xchg
pop
fstps
inc
sub
or
inc
mov
mov
aam
and
sti
xlat
adc
and
mov
xchg
ja
inc
xchg
push
cli
clc
sub
inc
mov
jg
sbb
push
rolb
sub
popf
or
les
jecxz
mov
out
mov
shl
mov
xchg
inc
lea
cmp
nop
je
sbb
sbb
push
inc
cmp
mov
bound
dec
xor
xlat
or
mov
mov
sub
les
je
lcall
andb
adc
xor
inc
test
add
and
js
cmp
cmpsb
inc
mov
enter
pushl
push
rclb
jle
out
andl
mov
loope
mov
and
mov
mov
push
scas
sub
pop
out
sbb
cmp
dec
movsb
inc
pop
lret
loop
dec
ss
jno
daa
dec
and
push
mov
or
dec
aaa
inc
xchg
xchg
mov
repnz
push
sub
mov
cmp
in
jo
repnz
js
mov
outsl
rclb
ret
or
xor
and
adc
loope
pushf
push
loopne
cltd
fwait
test
mov
mov
cld
push
cmp
in
cmc
lret
mov
ror
rclb
outsl
push
std
js
or
ss
inc
loopne
adc
imul
popf
mov
dec
rclb
inc
setns
lret
or
outsb
dec
dec
or
sbb
and
lcall
mov
push
xlat
dec
sub
aaa
mov
xlat
cld
das
test
cmp
sbb
out
pop
pop
push
xor
in
xchg
mov
hlt
sub
das
sub
mov
inc
mov
push
mov
xorl
add
in
dec
xor
stos
cli
ljmp
adc
sbb
mov
cs
aas
fiadds
lods
in
repz
mov
jbe
loopne
push
adc
mov
xchg
jecxz
or
add
or
adc
inc
imul
into
adcl
ss
test
aad
add
jno
je
imul
mov
mov
push
pushl
mov
mov
je
jb
or
stos
addr16
dec
sbb
mov
ret
sub
pop
decb
mov
sbbl
loopne
mov
lcall
dec
or
lret
ss
fnstenv
dec
push
cltd
das
and
push
and
inc
dec
and
rcll
outsl
inc
sbb
in
jle
test
push
pop
push
jecxz
pop
ds
xor
jae
repnz
pusha
daa
jmp
testb
lods
nop
mov
dec
mov
leave
and
add
mov
fstpl
xchg
iret
ret
out
adc
push
sbb
mov
cmpsb
jns
out
add
insl
jbe
cmp
pop
adc
repz
addr16
outsb
cmp
mov
xor
jmp
push
jne
adc
cpuid
jg
sbb
cli
into
pop
scas
push
jmp
xor
xlat
rcrl
push
jae
rcrb
lds
and
jge
jecxz
das
fidivrl
lods
mov
cbtw
dec
push
and
mov
sub
addr16
pop
out
inc
mov
fcmove
mov
lret
es
out
lahf
mov
sub
lea
adc
cmp
mov
jo
ret
call
mov
rolb
int3
call
mull
dec
xor
lret
fstl
loope
adc
inc
push
or
stc
and
pop
inc
movsl
pusha
dec
lods
test
xor
mov
out
add
scas
inc
inc
rolb
pop
mov
dec
mov
inc
shl
mov
mov
adc
hlt
xchg
cmp
in
sub
push
mov
mov
lahf
call
testl
arpl
sbb
ja
add
cld
jb
lcall
test
mov
scas
fcoms
fisttpll
jecxz
xor
jmp
xchg
cmp
inc
aad
or
lret
das
adc
push
ret
mov
in
push
das
pop
pusha
dec
jnp
movsb
xor
sub
fwait
mov
mov
add
arpl
cltd
jnp
lds
daa
sti
dec
push
dec
ss
in
mov
and
mov
sbb
add
jl
mov
push
sbb
xor
ss
fs
xchg
sub
or
lret
xor
mov
imul
ret
test
jge
ficomps
sahf
in
pop
push
out
out
mov
cmc
fsubrs
xchg
or
movsl
pop
imul
jo
or
jno
out
negl
stos
cmpsl
addr16
xlat
fwait
jmp
fucomp
loop
cmpsl
scas
pop
jae
addr16
sbb
xchg
sbb
xchg
cmc
ljmp
cli
out
int
jle
fmul
dec
sbb
test
rcrb
push
aad
xor
xchg
lods
and
add
sbb
mov
cwtl
mov
xchg
jae
adc
jge
addr16
sbb
jp
out
dec
aad
pop
loopne
sarb
cli
lret
xchg
mov
jp
mov
mov
lcall
ss
mov
and
xchg
test
ds
or
stos
pop
out
movsl
repz
dec
sbb
roll
or
inc
out
testl
je
rol
stc
rorl
outsl
test
pushf
mov
pop
rcl
das
gs
lcall
dec
iret
mov
dec
xchg
adc
test
xchg
pop
call
ret
lods
cmpsl
andb
ss
cmp
int
mov
ja
aad
scas
lea
mov
dec
mov
test
leave
dec
push
mov
mov
or
jmp
mov
sahf
sub
adc
mov
jmp
loope
ret
test
enter
or
leave
inc
xor
pop
xor
sahf
and
jl
xchg
xchg
outsl
fiaddl
lock
fsubrs
int
xlat
cwtl
adc
stc
cmp
cmp
addl
bound
ret
sbb
pop
testb
inc
sbb
test
rep
outsb
push
xchg
ljmp
adc
imul
dec
inc
or
aaa
jnp
sbb
or
movsl
dec
xchg
fisubl
xor
fwait
popa
jl
mov
fidivrl
xchg
loopne
pop
jp
enter
pop
dec
xor
ja
popf
jo
sti
push
jle
test
hlt
add
das
adc
cmc
mov
bound
rclb
and
js
pop
int
in
inc
lahf
jp
dec
cmpsb
mov
and
or
mov
cmp
mov
cli
scas
cld
addr16
dec
fisubrl
jae
fcmovnu
test
mov
push
or
adc
ja
andl
xchg
loopne
out
outsb
mov
leave
std
aad
scas
cmpsl
mov
sbb
cmp
mov
outsl
push
adc
and
mov
inc
sub
imul
jge
push
adc
repz
and
xbegin
mov
shll
jb
out
ret
adc
or
cli
sub
mov
fistps
int3
in
jo
sub
mov
pusha
pop
sarb
mov
mov
push
ja
adc
outsb
imul
add
insl
or
stos
sub
pop
pop
mov
in
xchg
pushf
imul
hlt
sbb
jns
cmp
repz
mov
movsl
mov
in
push
lret
mov
ret
pop
cld
stos
into
jbe
adc
sbbl
jl
mov
movsl
dec
add
cltd
xorl
jmp
or
gs
sub
test
fidivl
xor
ret
push
bound
adc
out
outsb
ja
lret
jnp
out
mov
int
inc
inc
xchg
pop
xor
addr16
inc
loop
popa
dec
adc
xor
lret
rcll
mov
out
xchg
adc
sbb
mov
mov
xor
and
pop
int3
in
mov
sarb
pop
dec
push
sbb
or
xchg
xchg
and
mov
aas
mov
inc
jne
div
adc
jp
movsb
adc
outsb
or
movsb
mov
sub
xchg
in
xchg
fnsave
popa
int
out
pop
cmp
aad
sar
aad
ja
cld
sub
stos
add
movsl
inc
gs
ret
fsubl
insb
adc
and
xchg
xchg
pop
add
pusha
add
fwait
or
add
lods
push
dec
inc
lods
xor
mov
jmp
mov
aam
cmp
push
mov
xor
or
jg
cwtl
pop
int3
sub
mov
push
movb
out
mov
imul
jnp
fs
pop
jbe
mov
sar
scas
cltd
mov
xor
jl
jmp
mov
outsb
rcl
mov
sub
mov
push
insb
mov
fisttpll
xchg
loopne
add
cmp
mov
xor
jp
or
inc
mov
xchg
pop
jl
leave
fiaddl
scas
push
lods
movsl
divl
shl
xchg
add
hlt
or
iret
xor
fnstsw
in
push
adc
daa
mov
rol
mov
push
int3
outsl
mov
int3
adc
rolb
lods
fistps
xchg
fs
mov
mov
dec
sub
ja
stos
adc
pop
loopne
das
outsb
enter
sub
xor
scas
shlb
push
je
movsb
lock
cli
add
lods
or
sub
jns
push
lret
in
pop
sti
adc
pop
jo
inc
leave
xor
push
ljmp
loop
mov
xchg
add
js
sbb
fsub
xchg
lahf
pop
in
pusha
inc
dec
dec
shlb
mov
xchg
push
into
mov
inc
or
repnz
adc
mov
lret
stos
loop
divb
pop
cmpb
or
iret
push
inc
pop
cli
jne
cmc
popa
adc
ja
testl
orl
dec
jmp
cli
call
pop
and
xor
pop
pop
push
push
adc
ja
xchg
sbbl
pop
stos
sub
imul
test
aas
pop
push
dec
dec
fsts
xchg
fwait
jno
adc
jb
mov
cmp
cmc
in
add
or
mov
add
add
mov
loopne
subl
push
jno
xor
push
js
sarl
sbb
cmpsb
fisubl
loopne
vrcpss
mov
divl
es
cmc
mov
mov
mov
mov
mov
fildl
and
inc
ret
out
cmpsl
and
add
insl
fcmovu
out
jl
test
std
mov
cld
and
jbe
lret
mov
pop
jbe
rolb
testl
mov
mov
jl
pusha
xchg
decb
adc
incl
hlt
xchg
adc
mov
push
dec
imul
adc
xchg
push
cmpl
loope
lods
adcl
jmp
movsl
movl
out
lods
flds
xchg
aas
xor
sbb
ret
xchg
pop
push
sbb
push
xor
pusha
rol
pop
dec
xchg
movsl
lcall
scas
mov
mov
mov
pop
outsl
ret
and
testb
sbb
pop
test
pop
cmpl
out
in
loopne
mov
sbbl
cmp
shll
push
dec
adc
imul
dec
push
stos
jmp
test
data16
aaa
dec
and
mov
repnz
ds
or
daa
sar
xchg
xor
je
jne
ret
cmp
and
nop
adc
shlb
push
and
enter
popf
xor
or
jg
cld
mov
jecxz
jmp
jp
mov
fidivl
or
insb
call
les
out
cld
cmp
jne
mov
arpl
in
mov
lret
push
and
roll
shl
pop
jb
mov
mov
pminub
pop
fisttps
jo
pop
inc
jg
fneni(8087
inc
mov
push
fsubrl
or
scas
rcrl
sub
jbe
push
sub
shrl
jecxz
sbb
sub
in
mov
in
out
stc
test
pop
pop
int3
xor
fisubrs
loopne
xchg
mov
icebp
add
mov
push
jmp
pusha
mov
shrb
imul
outsb
cs
ror
xor
mov
loope
adc
movsb
dec
cmp
sti
xchg
xor
adc
lods
lock
in
cld
cmc
mov
in
push
pop
bound
daa
stc
jae
sub
pop
mov
and
ret
pop
out
mov
lcall
jge
stos
fisttpl
addr16
mov
lods
rolb
inc
lret
sbb
xor
mov
inc
xlat
mov
mov
and
out
out
fstpt
push
enter
adc
pop
inc
pop
sbb
push
pop
add
lret
push
push
xchg
dec
pop
jmp
xchg
nop
jns
and
mov
sub
adc
cwtl
cld
aas
clc
dec
aas
fdiv
jns
pop
jmp
dec
xlat
cmpb
push
xchg
xchg
lds
je
aam
jns
rcrb
test
xchg
mov
addr16
loope
xor
in
stos
pop
repnz
inc
inc
ficomps
jle
stos
xor
iret
dec
ja
and
cmc
xchg
scas
mov
das
fstpl
cld
test
and
pop
or
adc
popa
mov
sahf
fcoms
or
jns
cmp
fcoml
enter
bndstx
aas
das
cmc
cli
je
loop
jns
fs
xor
sti
jg
push
enter
sbb
xchg
dec
sti
call
lcall
add
xchg
sub
popa
adc
insl
mov
ret
pop
and
cwtl
mov
fstps
mov
push
xor
dec
sbb
pop
sahf
push
js
rcl
rorl
shll
lahf
leave
xchg
adc
xor
jnp
sub
popa
out
out
mov
fistps
xchg
mov
jmp
or
sbb
push
ss
pushf
lock
dec
repz
pop
jae
in
xchg
cld
xchg
jbe
out
out
add
je
int
jnp
gs
xchg
mov
xorl
shll
repnz
adc
rcrb
cmp
or
xchg
mov
stos
pop
inc
mov
sbb
lock
sub
scas
fstl
popa
sti
movsl
fcoms
adc
mov
sbb
mov
pop
pop
pusha
test
xor
jb
xchg
inc
test
test
clc
cmpsl
cs
mov
stc
fwait
pop
arpl
adc
sar
mov
fwait
sub
mov
ss
pop
pop
jle
lret
cmpsb
int3
xchg
inc
into
pop
iret
enter
adc
out
dec
fwait
imull
jae
adc
pop
lcall
leave
mov
jns
jmp
in
add
dec
fnsave
inc
mov
jecxz
in
fdivrp
cmp
adc
pop
dec
adc
inc
jmp
and
popf
add
lds
push
mov
imul
mov
mov
jo
stc
jbe
sbb
mov
mov
daa
lret
fldcw
clc
sbb
andl
adc
mov
mov
jecxz
sarb
cmp
mov
add
push
xchg
test
jg
sbb
mov
nop
pop
adc
dec
dec
fcmovb
pop
add
out
cmp
ss
push
jl
cmp
xor
pop
mov
push
jp
adc
imul
xchg
addb
arpl
adc
lock
out
mov
call
xor
xor
insl
aam
jb
push
and
or
call
add
mov
dec
or
push
adc
les
xor
das
fcmovbe
pop
pop
jp
mov
push
sbb
and
fcmovb
inc
aam
adc
rcll
ss
popf
pop
jmp
scas
dec
mov
scas
shlb
dec
xchg
sub
imul
add
mov
ljmp
push
arpl
out
frstor
jmp
and
data16
out
xor
push
inc
pop
pop
add
inc
pop
mov
or
sahf
enter
inc
cmp
in
sbb
or
push
mov
jns
add
xchg
fdivl
cmp
sti
mov
rorb
js
fisubrl
insl
fs
addb
je
xchg
cmp
xor
jb
gs
mov
dec
in
mov
push
push
mov
jne
fnstsw
scas
adc
shrl
jnp
xlat
mov
and
scas
pusha
fucomp
pop
jl
in
mov
push
lods
mov
or
xor
jp
sbb
jae
xchg
or
cmp
cld
stos
adc
sbb
or
xor
cmp
aam
js
mov
and
add
push
inc
dec
push
xor
gs
in
lods
xchg
ljmp
pop
mov
clc
ss
sbb
or
ss
mov
cwtl
jecxz
push
outsl
dec
fsts
or
ljmp
cmp
cwtl
add
mov
inc
xchg
xchg
add
mov
fsubs
daa
push
jo
mov
stc
out
pop
push
mov
ficomps
pop
mov
fistpl
mov
sub
xor
mov
repnz
pushf
mov
inc
mov
xchg
cmp
into
cmpsl
pushf
jne
cmp
mov
mov
pop
fisubrs
xor
imul
xchg
lahf
lret
mov
xchg
enter
push
pop
jns
iret
mov
jbe
add
lret
and
pop
aam
inc
add
push
arpl
fsts
sti
jb
in
pop
cmp
daa
lods
aad
jbe
inc
mov
dec
mov
cmp
and
mov
add
pusha
or
lds
push
sti
add
bound
add
ret
sub
jns
jno
hlt
cld
xlat
cmp
cmpsl
xor
clc
cmp
popa
loopne
dec
loopne
std
lea
dec
mov
or
inc
fnsave
pusha
push
aad
cmpsl
xor
pop
sbb
test
xchg
sub
adc
mov
mull
jmp
js
push
jo
call
inc
push
aad
daa
fsts
mov
addb
lret
addb
inc
push
and
iret
add
pop
outsb
inc
xchg
hlt
fsts
out
pop
lock
ficomps
aad
adc
mov
lds
insl
ficomps
push
cwtl
in
pushf
xchg
xor
nop
cmp
lds
xchg
mov
or
inc
inc
push
cld
jp
cmc
or
or
push
mov
dec
fwait
inc
mov
dec
cmc
jne
mov
mov
js
xorl
xor
push
xor
dec
jg
or
mov
jecxz
push
add
gs
jmp
jne
xorl
enter
fcom
pop
rorb
or
shrb
mov
in
jno
cmpsl
out
xor
fcmovbe
sbb
in
shlb
xor
jg
xchg
push
pusha
es
leave
iret
in
jae
inc
mov
insw
orb
bound
out
adc
adc
dec
ja
cwtl
cmp
or
daa
aaa
lds
add
ss
push
int3
scas
xor
xor
hlt
movsb
or
mov
jmp
jne
scas
push
inc
shlb
push
movsl
mov
xchg
dec
in
jge
or
and
or
mov
aaa
sbb
ljmp
ret
or
jb
out
fstp
je
nop
fs
scas
faddl
or
loopne
xchg
cmp
mov
in
filds
cwtl
push
inc
adc
pop
cmc
addl
fisubl
pop
jge
addb
sub
in
mov
cmpsl
lret
push
push
addr16
repz
mov
mov
das
into
es
aam
mov
push
xor
cs
les
mov
cmp
dec
movsb
push
xchg
addl
jno
sub
aad
leavew
out
int
add
movntq
lods
je
cs
xor
movsb
das
dec
xor
add
mov
ja
dec
inc
lods
sub
adc
sub
lods
mov
mov
xor
stc
mov
ja
xorb
inc
and
cmp
data16
gs
loop
movsb
adc
inc
fisttpl
jp
mov
xor
sub
jns
jo
push
popf
mov
dec
fadd
rorb
test
and
in
nop
adc
and
popa
stos
xor
xchg
loopne
sbb
inc
js
push
ljmp
fistpl
push
xchg
add
scas
jnp
dec
stos
push
movb
jbe
pop
shll
dec
pop
sub
shr
or
icebp
xchg
gs
cmp
xchg
xor
hlt
mov
and
jg
add
test
pop
loope
jmp
ss
add
cwtl
jnp
sbb
scas
andb
cld
outsl
insl
cmp
out
bound
ja
xchg
mov
sub
out
ds
jecxz
inc
mov
lods
xlat
in
stc
bound
jge
xchg
adc
jl
test
mov
jmp
push
test
push
lea
sbb
into
lret
std
or
or
rorl
iret
jno
lret
shr
lret
xor
fwait
inc
mov
xor
adc
mov
pop
push
mov
mov
icebp
adc
push
fnstenv
inc
push
inc
nop
pop
and
stos
hlt
fstp
add
pop
sub
push
andnps
cmpsb
popf
mov
dec
enter
adc
adc
sub
test
aaa
pop
orl
scas
pop
pop
loopne
js
cmp
rcrl
cs
mov
pop
test
cmp
scas
sub
mov
fdivrp
divb
ds
mov
lahf
mov
mov
adc
push
cmpsl
lods
jge
scas
pusha
mov
mov
pop
push
loop,pn
lock
or
inc
jo
sahf
push
lahf
testl
fsub
stc
mov
loope
loop
mov
lods
popf
jb
lahf
jl
xchg
and
popf
in
adc
inc
dec
and
pop
fcomi
fwait
add
ret
add
mov
or
push
movsb
dec
xlat
adc
test
incl
fiadds
sub
repz
shrl
or
push
rolb
inc
ficompl
lret
jns
sahf
adc
cmp
xchg
xor
pop
imul
cmc
mov
push
cld
loopne
sub
fwait
dec
jbe
iret
push
sbb
mov
call
lret
and
sbb
push
lretw
aas
enter
stc
add
js
mov
iret
or
inc
xchg
jp
sbb
xlat
cmc
jle
fisubl
mov
aaa
push
or
pop
jp
lock
sub
lds
cmp
or
out
inc
mov
dec
cmp
pop
add
jle
sbb
pop
pop
sahf
xor
sub
lds
subb
clc
js
xchg
movsl
jg
push
jae
movsb
ret
add
mov
jo
in
fisttps
stos
mov
ret
mov
scas
je
lea
loopne
lods
cmp
dec
icebp
push
adc
jp
xor
and
mov
je
inc
repz
dec
scas
pop
jnp
pop
icebp
mov
enter
mov
mov
push
fs
cmp
in
or
push
inc
mov
push
es
into
xchg
fwait
hlt
inc
scas
lock
or
cmp
pop
inc
addr16
jmp
les
aas
pop
mov
pushf
ret
mov
adc
adc
pusha
les
and
pop
push
pop
pusha
stos
aaa
xor
push
mov
bound
xor
mov
cli
or
stos
xchg
lcall
pop
or
push
std
fwait
aaa
dec
leave
sti
ret
or
test
sbb
and
adc
hlt
cld
jl
addr16
sbb
fwait
ja
insb
insb
je
movb
add
call
jl
bound
sub
imul
add
lods
mov
rcrl
sbbl
add
loopne
xor
cmp
fcmovnbe
jns
insb
push
adc
scas
icebp
cli
or
test
out
adc
jne
mov
test
inc
jns
icebp
cmp
sahf
mov
cmp
gs
int
push
jno
push
sbb
and
test
subl
sub
cmp
ja
popa
cmp
in
mov
add
jmp
loopne
movsb
push
orl
das
xchg
movsl
pop
leave
ljmp
jb
fimull
cmp
scas
ret
mov
iret
adc
mov
and
jae
gs
and
mov
aaa
xor
stos
sbb
dec
js
cmp
fisttps
stos
cmp
push
imul
lods
mov
mov
jns
xor
ss
adc
add
mov
xor
sbb
and
inc
or
and
sti
cmp
out
negb
rcll
pop
mov
cltd
repnz
outsb
mov
pop
addr16
pop
xlat
inc
mov
test
sbb
xor
or
in
fwait
sub
movsl
fmull
rorl
test
int
mov
jae
orl
xchg
mov
cmp
stc
gs
pop
mov
mov
dec
into
int3
adc
lret
imul
lods
pop
xor
pushf
outsb
mov
lret
fsubs
cmp
ljmp
xor
mov
xor
scas
dec
in
adc
adc
xchg
js
push
popa
in
call
fistl
fcompl
xor
inc
and
jo
xorb
movsl
push
jp
and
xsaveopt
lret
btrl
cli
lea
mov
push
lcall
cmp
pop
inc
ret
cmpsb
xchg
adc
xchg
pop
dec
jnp
mov
int3
pop
pop
into
cmp
jo
sbb
xlat
push
adc
and
test
sub
fsubr
mov
mov
pop
scas
cmp
jo
adcl
inc
fcoml
jbe
cmp
lcall
and
loopne
and
pop
sub
fwait
ljmp
or
lds
sbb
sahf
jp
in
fs
mov
or
add
shl
dec
imul
sbb
add
ja
imul
int3
sbb
jmp
lret
shlb
mov
add
sarb
clc
nop
jmp
js
loopne
inc
fistl
test
push
mov
mov
jno
sbb
cmpsb
sahf
lds
and
loopne
add
mov
stos
fildl
or
and
loope
dec
jns
into
push
sbb
add
push
xchg
and
jecxz
je
push
adc
cmp
mov
dec
push
jg
lods
mov
inc
pop
cmpsb
pop
or
jg
stc
jge
mov
idiv
aad
inc
jbe
jae
pop
and
cli
jo
cli
and
iret
push
inc
and
fsubl
stos
mov
dec
rcrb
or
inc
sti
call
mov
xchg
cmp
sbb
pop
insb
push
sarb
sbb
xor
jo
in
loopne
or
jmp
lods
mov
jp
sub
add
mov
in
lock
mov
jmp
fwait
sti
icebp
mov
mov
data16
fcmovne
bswap
mov
xor
frstor
adc
lods
dec
push
sarl
inc
sbb
loope
test
test
in
lds
out
xchg
stc
sbb
call
ret
pop
sar
mov
pop
roll
loope
sbb
or
inc
out
ror
mov
or
jne
sbb
int
lds
mov
test
mov
je
jle
cs
sbb
pop
dec
xchg
in
aam
xor
cmpsl
mov
mov
jo
sbb
mov
aaa
adc
lods
cmp
ret
out
mov
mov
ljmp
inc
orl
jg
xchg
stc
imul
test
mov
fcmovnb
mov
hlt
xchg
out
and
inc
lahf
loop
push
cmpsl
imul
or
enter
xlat
xchg
mov
std
pop
mov
xchg
ljmp
jg
pushf
cmpsb
sub
adc
enter
arpl
scas
incl
jne
aas
pop
loope
xchg
push
daa
inc
pop
test
inc
mov
fwait
das
arpl
jge
sbb
bound
cltd
stos
add
inc
jne
hlt
sbb
clc
sbb
out
iret
dec
jge
sbb
mov
cmp
xchg
mov
add
rcrl
xchg
xor
push
out
aaa
cmp
jle
adc
inc
daa
adc
in
pop
loop
jmp
mov
mov
fisubs
loop
xchg
sub
cmpsl
mov
andl
scas
es
adc
out
jbe
and
mov
mov
sbb
xor
dec
or
lret
push
imul
xor
fists
arpl
jnp
imul
jbe
pop
mov
insb
outsl
in
movsb
lret
dec
fcom
pop
test
cmp
push
inc
fs
ja
int
test
lods
ss
jmp
andb
mov
xchg
xlat
jl
adc
or
imul
pushf
or
jecxz
inc
cmp
pushf
jo
push
arpl
stos
lahf
lods
aam
rorb
mov
xchg
fs
pop
push
daa
int3
dec
aaa
lcall
jo
stos
lods
loop
jb
cmc
imul
ficoml
lods
imul
push
js
pop
rcr
test
push
cli
inc
ror
out
mov
imul
das
frstor
cmp
imul
mov
lahf
mov
add
or
sub
shll
pop
cmp
lcall
xchg
test
mov
mov
ja
dec
mov
cmc
push
inc
lock
add
sbb
add
push
mov
push
lret
jb
subb
xchg
add
cmp
lret
and
jns
pop
jp
pop
xlat
xchg
sub
pop
fbstp
inc
push
mov
je
lret
test
sub
xor
stos
insl
adc
and
cmpsb
sti
repz
lods
xchg
xchg
repnz
jle
jp
movsb
jb
popa
inc
or
add
sbb
cmp
or
imulb
mov
or
out
lock
xor
inc
cltd
pop
mov
mov
lahf
xor
or
cmpsl
jge
dec
xchg
adc
mov
insb
cli
dec
shll
dec
and
sahf
cmp
stc
mov
mov
mov
lret
ret
lret
mov
mov
std
add
es
ret
push
gs
sbb
mov
sbb
pop
notl
sbb
mov
hlt
xchg
ftst
fildl
lahf
push
and
push
pop
push
mov
xchg
mov
push
fisubrl
outsl
pop
sar
inc
pop
js
dec
pop
ljmp
mov
iret
adc
scas
fmull
call
jmp
cmp
and
outsb
xchg
jg
push
xchg
into
cmpsl
xchg
dec
lods
push
idiv
inc
addb
jbe
push
or
test
sbb
mov
stos
push
inc
pop
je
jp
xchg
ds
fsubrs
bound
push
dec
insl
xor
inc
popa
sbb
shll
lret
or
cmpl
int
mov
push
cmp
mov
jmp
jmp
xlat
fistl
ret
fisttps
dec
xor
push
or
jle
rcrl
ret
sarl
xchg
fwait
adc
mov
int
movl
push
add
lods
lock
push
mov
push
sahf
clc
sbb
clc
cmp
mov
sub
inc
fsubs
loop
ret
aas
movsl
iret
aaa
mov
cltd
mov
push
push
push
add
pushf
mov
jae
add
fistl
enter
pop
imulb
aad
repz
test
mov
test
je
and
in
or
cmp
popa
inc
inc
sbb
pusha
push
xchg
sub
push
in
mov
test
add
sbb
pop
mov
jae
fldl
push
dec
lea
adcb
mov
push
aam
cli
sahf
cmp
adc
mov
sbb
imul
pusha
xchg
jmp
repz
lock
loop
das
adc
xchg
jg
pop
outsb
cwtl
fdivs
enter
in
cmpsl
xchg
loopne
adc
push
pop
mov
xchg
cs
addl
movsb
adc
xorb
or
cmpl
pop
mov
jns
loopne
setae
add
sub
dec
sub
movsl
xor
sbb
mov
push
popf
inc
inc
xchg
sbb
imul
gs
push
adc
push
lfs
cmp
shlb
xor
adc
jnp
xchg
xchg
mov
sbb
testl
repnz
inc
lods
jge
jmp
shll
mov
adc
push
inc
scas
ret
ret
mov
aas
dec
inc
flds
mulb
fistpl
mov
sti
or
sbb
into
ret
je
loopne
insl
into
subb
push
stos
insb
sbb
and
stos
pushf
jg
pause
stc
ja
push
dec
mov
cmp
pop
pop
cmpsl
cmc
mov
loop
cld
lods
imul
aaa
cmpsb
lahf
lods
adcb
push
in
mov
adc
ret
fdivs
fmulp
fstl
xchg
dec
ficoms
loope
cmp
rclb
mov
dec
sub
adc
xor
nop
jno
lret
push
inc
cli
in
das
std
hlt
sbb
inc
rclb
jg
mov
outsl
and
repnz
cld
pop
ds
repnz
xorb
inc
push
mov
sub
cmp
jb
mov
cmpb
mov
shll
cs
xchg
sbb
cmp
orb
faddl
sub
or
jle
addl
dec
data16
sbb
xchg
lret
lcall
cli
inc
cli
xor
aas
or
jle
jnp
push
dec
mov
pop
push
jge
sbb
mov
or
mov
movsb
jns
sub
adc
dec
sbb
jns
jae
mov
dec
xchg
xchg
sar
xorb
std
and
jl
cmp
repnz
mov
loop
out
es
pop
push
out
dec
mov
loop
fnstcw
mov
dec
ja
xchg
shll
mov
mov
jg
push
mov
pushf
call
les
push
sti
test
aam
loope
subl
stos
adc
lea
mov
sbb
mov
adc
es
sbb
mov
dec
mov
pop
icebp
sahf
lahf
sbb
pop
fidivl
dec
mov
sub
test
or
cs
pushf
clc
mov
jp
push
hlt
jo
cmp
cwtl
movsl
repz
pop
rcrl
ss
xor
jb
sub
mov
aad
movsl
insl
js
loopne
nop
xchg
xchg
arpl
ds
xchg
bound
add
not
sbb
add
push
pusha
imul
jb
pop
jae
mov
pop
pop
clc
push
test
and
jne
clc
incb
adc
xor
inc
cld
and
insb
mov
or
aas
cli
imul
outsb
xchg
jae
xchg
lods
cmpsb
iret
lret
dec
inc
rorl
jns
add
dec
cltd
int3
mov
xchg
or
dec
add
xchg
stc
test
scas
and
cmc
cli
add
hlt
test
cwtl
pop
push
adc
popaw
daa
add
xlat
cli
int3
mov
repnz
and
inc
pop
xor
arpl
sarl
add
mov
push
cmp
push
ficoms
pop
sbb
sti
in
mov
mov
fwait
add
xchg
sbb
insl
jecxz
fimuls
jns
sub
xchg
imul
cmc
test
pop
insb
outsb
sarl
in
movsl
xchg
pop
xchg
mov
cld
xchg
push
mov
nop
bound
dec
sbb
adc
xor
xchg
pop
mov
sub
into
enter
es
mov
and
cmp
rclb
daa
gs
pop
loopne
loop
mov
test
cmp
xchg
loopne
mov
dec
andb
xor
outsb
cld
cmc
dec
or
lock
pop
movsl
inc
iret
or
inc
sbb
nop
insl
fucomi
js
add
out
mov
cmp
mov
inc
xor
daa
jnp
cmp
jge
pop
test
cs
pop
jmp
mov
testb
loope
jns
mov
in
and
insl
jbe
lods
into
ficoml
xchg
push
pop
int
lea
mov
ficoms
xchg
adc
mov
sbb
inc
mov
ja
ds
rorl
mov
mov
jb
sub
fadd
push
popa
das
cltd
test
pop
lret
sub
das
mov
cmp
or
aam
push
test
sub
addr16
pop
outsl
jmp
sahf
add
addl
lret
imull
mov
sub
cmp
rorl
test
push
sarl
pop
add
pop
ja
iret
inc
cld
mov
addr16
adc
ss
sbb
insl
xchg
push
in
mov
xor
ds
insl
adc
mov
test
xlat
shll
testl
cld
mov
cmpsb
imul
dec
cmp
inc
xor
fcoml
mov
ljmp
push
pushf
out
movsb
or
mov
sub
sub
les
jg
in
cmp
shlb
jbe
cmp
push
xchg
and
inc
xchg
mov
enter
loopne
jg
cmp
movsl
daa
adc
out
int
pop
sahf
imul
je
jecxz
sub
jecxz
and
push
pmovmskb
int3
xchg
adc
add
arpl
inc
mov
inc
daa
push
icebp
mov
inc
das
pop
test
lret
call
push
add
push
xor
shll
jne
pop
mov
push
push
cmp
daa
rclb
cltd
jmp
sbbb
inc
inc
xchg
ret
or
sub
jns
std
push
ds
cmp
push
add
cmp
cmpsl
and
mov
in
and
fidivs
inc
fimuls
xchg
cmpl
cmp
imul
sbbl
mov
pusha
mov
xchg
ss
adc
mov
dec
ss
mov
push
in
add
gs
xor
jne
add
test
popa
pop
or
cmp
loopne
cli
push
dec
inc
lahf
push
sahf
inc
pop
xchg
arpl
mov
fsubl
cmp
into
addr16
adc
sub
std
in
out
add
sub
out
nop
rolb
mov
pop
xchg
lahf
inc
sub
push
int
jo
loope
les
out
inc
lea
aaa
test
dec
fwait
or
shrb
inc
scas
push
pop
shr
pop
pop
sti
add
pop
pop
cmovns
ret
testb
mov
cmpsl
or
icebp
out
cmp
and
in
jns
movsl
movsl
dec
mov
jp
rcll
ret
cmp
mov
mov
xlat
add
pop
iret
mov
loopne
or
sbb
insl
mov
mov
pushf
loopne
pop
sub
ds
stos
into
popf
pop
inc
or
js
sarl
pop
mov
repz
dec
mov
mov
je
sbb
xor
jb
lcall
enter
pushf
lds
loop
repz
inc
and
jmp
adc
or
lds
push
bound
add
sub
xchg
aaa
shl
in
mov
add
hlt
repnz
roll
adc
rcr
xor
push
fwait
pop
pop
sub
aaa
jbe
add
imul
or
cmpsb
fsubl
sbb
pop
bnd
shr
adc
mov
lret
jge
add
dec
mov
jnp
pusha
loope
xor
pop
jnp
xor
inc
ss
loop
setbe
aaa
push
loop
mov
cmp
out
jg
lret
jns
daa
test
hlt
jb
movsl
dec
push
fistpll
push
inc
lds
popf
lods
cmp
sub
cmc
decb
sub
js
jns
cmp
das
outsl
pop
pop
mov
xor
out
mov
pop
push
insl
push
mov
int3
cld
pushf
xor
mov
ficomps
jns
fnsave
fistl
pusha
xchg
dec
push
mov
jno
arpl
lods
movsl
addb
pop
pop
adc
inc
adc
dec
mov
xchg
loope
sbb
inc
outsl
add
sbb
cmp
push
repnz
or
lods
cmp
rcrb
jnp
lcall
imul
shlb
iret
dec
setne
mov
rol
xor
sub
adc
fdivs
imul
neg
cmp
mov
dec
and
pop
mov
incb
xchg
mov
aaa
cmp
jbe
cmpsb
cmpsb
mov
cmp
push
andl
push
es
add
mov
out
pop
lds
mov
aam
pop
cmp
mov
pop
scas
cmpsb
pop
leave
and
lock
adc
xchg
adc
adc
mov
stos
cmpsl
adc
mov
mov
and
rorl
and
loope
sub
fwait
push
cmp
sti
shll
stc
scas
addr16
std
push
mov
cmpsl
dec
je
push
shll
sbb
push
adc
cltd
adc
daa
movsl
push
not
mov
fcmovne
shrb
andl
xlat
cmp
gs
out
flds
cmpsl
fs
push
add
xchg
dec
enter
lods
push
stos
fsubrp
aas
cltd
lods
shll
rcll
jecxz
aad
dec
mov
add
mov
push
xchg
je
sbb
lcall
pop
mov
pushf
aad
or
and
nop
pop
or
sahf
xlat
mov
bound
pop
in
rclb
ficoml
inc
sbb
out
mov
jg
lods
mov
sub
mov
pop
pop
or
dec
cli
xor
arpl
divb
inc
fwait
sbb
dec
xchg
inc
hlt
repnz
pop
xor
pop
call
xlat
leave
xchg
sbb
mov
mov
out
mov
xchg
lds
jo
cmp
cmp
lods
nop
xchg
out
ss
mov
shll
jg
loopne
xor
xchg
out
add
loop
xchg
loop
jl
outsb
sbb
or
mov
loope
int
cs
dec
int
cli
inc
xlat
xchg
jp
ficoml
mov
push
popa
xchg
pop
xchg
xor
cld
imull
cmc
mulb
add
mov
mov
out
rcrl
xchg
xchg
shrb
stc
test
sbb
ss
push
dec
cli
fs
or
lods
lods
cmpl
dec
lods
insb
lea
mov
mov
out
inc
out
xchg
jmp
imul
daa
mov
lcall
adcl
add
shl
loopne
lods
inc
inc
add
push
or
xor
in
insl
lds
mov
mov
scas
dec
pop
push
sbb
ret
insb
jbe
popa
cwtl
fdiv
pop
jp
mov
inc
aam
fs
mov
mov
sbb
mov
jp
imul
movsb
fs
icebp
add
cmp
pop
xchg
pop
lea
lahf
lock
adc
xchg
mov
out
into
mov
outsb
pusha
cmp
mov
and
sarl
ljmp
jno
ss
dec
aas
add
gs
and
out
mov
mov
data16
lret
dec
negl
mov
inc
cmp
dec
pop
xor
rcl
adc
cld
mov
mov
mov
dec
mov
inc
outsb
out
test
std
jns
popf
gs
pop
xchg
sbb
shrb
add
popa
pop
dec
cmp
scas
pop
mov
addr16
mov
sti
lret
push
inc
jno
mov
cmpsb
ljmp
mov
das
inc
repz
and
gs
pop
cmc
lret
int
ja
adc
out
mov
jns
mov
inc
adc
shll
xchg
dec
pop
push
jge
jne
dec
loopne
sbb
push
jbe
jmp
aad
idivb
cwtl
test
jb
jecxz
fdivs
xlat
loope
mov
push
pop
lahf
add
scas
mov
mov
mov
cli
aas
iret
ret
push
jmp
iret
cld
and
mov
sub
test
int3
test
sbb
in
daa
into
jecxz
aas
inc
jb
pusha
sub
inc
pop
xchg
push
ja
outsb
jo
push
lcall
dec
jmp
les
mov
das
push
movsl
pop
push
mov
add
and
aas
xchg
rcl
filds
es
cmc
xchg
and
or
sub
cmp
test
pushf
hlt
cmp
sbb
pop
js
popf
xor
xor
mov
sub
pop
dec
out
dec
mov
inc
mov
cmc
lahf
stos
ja
imul
xor
sbb
cmpb
testb
pop
xchg
enter
ds
movsb
pop
sarl
outsl
cmp
sbbl
sahf
sti
andl
lret
testb
push
pop
xchg
imul
xor
mov
mov
xchg
cmp
mov
aad
fwait
scas
andb
pop
mov
mov
jno
cmp
das
xchg
mov
or
inc
mov
repz
add
inc
cs
jle
test
or
xorb
stc
orl
push
hlt
ss
scas
ficoms
iret
js
ja
insl
rorb
pop
mov
jp
lods
mov
sbb
xor
aad
lods
insb
dec
lea
cli
xchg
in
gs
mov
mov
fsubr
sarb
sahf
adc
ja
gs
fstps
out
movsl
ja
aad
cmpb
movsl
mov
add
xor
ljmp
enter
xlat
push
movsb
jbe
mov
js
fwait
cmpsb
jp
jl
add
jbe
add
repz
mov
push
clc
dec
sub
xchg
push
cmpsb
arpl
mov
icebp
scas
sbb
aas
pop
xor
jg
mov
adc
stos
test
push
inc
inc
outsl
pushl
xor
ficoms
in
and
scas
out
les
cs
xchg
dec
mov
adc
gs
xor
push
aad
imul
leave
jmp
std
jae
xor
push
testl
push
out
jno
adc
loope
and
scas
icebp
jne
dec
pop
repnz
xor
pop
mov
data16
inc
dec
mov
cltd
icebp
inc
hlt
int
js
xor
lds
idivb
in
dec
cwtl
cmp
das
sahf
and
popl
mov
dec
or
cmp
ds
lret
lods
mov
cmp
mov
sub
in
neg
sub
jne
pop
pop
mov
cmp
das
jbe
fdivl
sar
push
daa
scas
push
mov
ss
push
mov
rclb
stos
loopne
test
cwtl
sub
lahf
or
rolb
mov
cmp
flds
inc
inc
mov
fisubl
orl
insl
lods
hlt
xchg
iret
mov
das
out
xchg
mov
jmp
insl
fstl
addr16
push
mov
jo
out
push
dec
pop
icebp
xor
test
xlat
das
inc
notb
scas
pop
mov
mov
sahf
mov
imul
test
cli
cmpsb
or
jg
sar
arpl
push
cmpsb
inc
mov
cmpsl
sub
daa
movsb
cld
popa
fwait
cwtl
or
pushf
lods
mov
imul
insb
or
push
push
pop
sahf
rorl
in
adc
leave
stc
cmpsl
mov
xlat
push
or
imul
push
mov
sbb
pop
xchg
mov
adc
daa
and
pop
arpl
repz
addr16
outsb
and
hlt
or
or
mov
data16
test
push
xchg
xchg
adc
mull
aas
push
mov
push
imul
or
iret
mov
fsts
cmp
cmpl
insl
je
xchg
xchg
jbe
mov
adc
push
clc
sbbl
inc
mov
iret
cmpsl
adc
push
ja
mov
rolb
push
rorb
sbb
sbb
mov
mov
mov
insl
cmpsl
repnz
psubw
fwait
cld
add
out
in
shlb
xor
mov
lock
pusha
clc
mov
and
enter
jg
fdivrl
lret
je
das
mov
fwait
xchg
cmp
fsts
sbb
xlat
inc
pop
add
cli
scas
or
push
inc
int
sbb
adc
lds
imul
push
aam
fistl
sub
ffreep
jb
fistl
push
call
repz
dec
or
rclb
pusha
push
test
lds
ret
jge
arpl
cltd
loope
int3
mov
pop
in
popa
dec
or
movsb
xchg
jns
out
and
fcomip
filds
pusha
push
inc
test
outsb
arpl
jns
mov
sbb
xor
cld
sub
xchg
lcall
mov
xchg
jns
jge
push
mov
or
ffreep
push
dec
lock
add
aam
mov
adc
xor
sbb
push
test
or
mov
lcall
lods
leave
ss
cmp
out
movsl
cmp
enter
stos
inc
insb
in
pop
jecxz
cs
inc
loop
test
dec
xchg
shl
lods
jp
and
insb
inc
enter
cmp
cmpsb
lock
adc
add
repz
pop
ss
cmpsl
cmp
je
mov
cmpsl
jne
push
loopne
adc
or
inc
scas
xlat
jb
subl
fs
orb
sub
arpl
fsqrt
call
jl
test
aaa
shll
imul
orl
leave
outsb
pcmpgtd
mov
adc
sahf
pushf
lret
punpckhwd
pop
sub
mov
sti
dec
loopne
aas
cmp
sub
mov
mov
fsubs
cmpsl
stos
das
popf
sub
or
and
jno
loope
cltd
repz
lods
out
into
dec
iret
popf
mov
xor
hlt
or
arpl
add
xchg
mov
mov
out
cmp
jnp
out
ficomps
mov
lcall
xchg
nop
dec
push
in
jae
es
xchg
fmulp
mov
outsb
in
jb
sub
cmpsb
sub
jb
jbe
gs
cmp
xchg
jg
repz
push
mov
insb
sbb
stos
cs
cmp
or
pop
jp
xor
data16
pop
sti
incl
in
test
insb
mov
adc
sbb
mov
std
fists
cmp
sub
mov
push
add
and
sbb
add
sti
daa
lret
movsb
cmp
dec
sbb
mov
fcompl
mov
push
mov
sub
sub
xchg
or
sub
das
lcall
mov
icebp
pop
or
add
mov
add
int3
jnp
lret
rclb
jmp
inc
sub
jg
lea
xchg
lcall
repnz
mov
popf
frstor
push
pop
or
lods
leave
in
fbld
mov
jnp
mov
sbb
js
jecxz
or
push
imul
pop
pop
xchg
push
pop
cmp
adc
push
shlb
jecxz
scas
push
fwait
push
outsb
mov
rcl
inc
mov
adc
lods
xor
les
js
mov
aas
es
and
ret
aas
mulb
fimuls
stc
add
fisubrs
mov
aad
cwtl
jle
aas
pop
xor
lret
aad
cs
or
lret
cmpsb
mov
int3
or
inc
add
call
dec
add
mov
cltd
dec
ljmp
repz
jl
addr16
inc
and
jae
outsb
push
bound
push
pop
imul
fstpl
jp
and
push
call
stc
push
push
movsl
bound
and
xchg
and
lcall
ret
jno
cwtl
imul
pop
fists
mov
out
xchg
mov
sbb
rcrl
notl
ljmp
es
data16
data16
in
dec
xchg
sar
icebp
lock
add
and
out
jbe
test
test
inc
jne
sbb
adc
mov
ret
pop
jle
lods
sub
add
jno
insl
stos
insl
cmpsl
xor
fucomp
xlat
shlb
mov
insl
and
std
lock
adc
mov
test
daa
mov
xorb
fbstp
jle
mov
xor
mov
lods
sub
lea
repnz
pop
or
jmp
popf
jmp
es
mov
push
pop
mov
sbb
mov
or
popf
fiadds
adc
and
fs
testl
mov
sar
sti
inc
scas
push
mov
ss
add
push
outsb
jae
test
xchg
sbb
pusha
mov
push
inc
push
xchg
push
push
loopne
sarb
jmp
fisubrl
jecxz
cltd
stc
mov
jbe
in
dec
cmp
inc
sub
sbb
int3
xchg
mov
xor
add
das
fnstenv
cs
ret
fucomi
mov
into
push
pusha
add
cmpsl
and
and
sti
test
adc
ret
fbld
xor
adcb
loop
or
imul
dec
imul
push
dec
add
add
pop
jle
fwait
test
jne
ss
imul
adc
push
add
pusha
outsb
xchg
je
lds
xchg
int
push
mov
test
add
xchg
repnz
test
cmp
fs
mov
mov
mov
stos
pop
pop
nop
mov
jl
shll
or
insb
out
inc
mov
loopne,pn
sbb
dec
sahf
mov
sub
cmc
mov
loope
jmp
add
jbe
and
int
aad
pop
mov
push
repz
fstpl
cmp
test
sar
sbb
test
aaa
mov
sti
xchg
scas
dec
test
adc
mov
mov
jno
into
adc
jge
cmp
lahf
fisubs
call
pop
mov
sbb
sub
fisubrl
cltd
add
fwait
shr
stc
mov
and
fists
xchg
jp
aad
rclb
lcall
popf
sarb
inc
pop
movsb
sti
add
xor
pop
mov
orb
adc
jae
mov
test
mov
ficompl
dec
push
div
rclb
in
insl
stos
mov
sahf
ss
loop
mov
rorb
insb
stos
fstps
mov
adc
adc
jb
inc
sbb
xchg
mov
push
shrb
jl
arpl
mov
rorl
rorb
ret
and
jno
mov
pusha
test
cs
mov
fisttpl
xchg
adc
mov
movsl
aam
xor
xor
pop
loopne
mov
scas
shrb
xlat
daa
push
and
cli
test
lods
icebp
push
leave
dec
jne
push
rcr
incb
in
push
sbb
stos
aad
aam
jb
out
sub
push
push
mov
ret
cs
jecxz
xchg
lret
mov
cmp
lods
int
cmp
inc
ds
enter
lahf
cmp
or
push
fs
jno
lahf
sbb
cmpsb
js
dec
add
xchg
movsl
pand
mov
mov
in
outsl
incl
sti
pusha
jmp
jne
test
xchg
rol
jmp
jb
scas
rol
xchg
sbb
insl
ja
test
mov
cmpsb
jle
hlt
inc
fmuls
push
push
adc
pusha
aaa
loopne
out
dec
cmpsl
data16
push
out
xorb
filds
std
mov
xlat
inc
dec
pop
xchg
jno
pop
movsl
push
ret
les
movsl
test
aaa
mov
or
cld
xchg
lods
sarl
outsl
rorb
mov
adc
pop
cld
adc
and
push
rclb
int
xor
sub
push
leave
cs
mov
fldenv
jb
cwtl
mov
stos
outsb
dec
add
pop
adc
add
leave
test
cmp
imul
pushf
stos
test
test
dec
add
add
sbb
adc
pop
add
mov
cwtl
scas
sub
lea
rcr
std
adc
or
mov
insl
xlat
jg
or
mov
mov
daa
lcall
sbb
xchg
mov
mov
mov
cltd
xchg
push
iret
jb
je
jle
call
scas
lcall
into
insl
and
aaa
dec
bound
les
push
call
mov
test
cmp
jmp
iret
pop
jne
adc
and
test
lock
cmp
or
aad
cmp
jno
fwait
adc
call
mov
add
lds
fwait
mov
and
mov
xchg
add
movsb
subb
test
addr16
mov
loop
or
add
adc
jmp
hlt
jo
jb
mov
xchg
inc
add
jo
in
fwait
pop
fistpll
in
mov
or
pusha
jo
mov
out
and
sahf
adc
push
fisttps
xchg
psubusb
lcall
leave
dec
jg
scas
lods
gs
mulb
mov
cltd
inc
xchg
pmulhw
mov
insb
leave
lds
cmp
push
lret
fistps
push
xor
lock
mov
mov
adc
cmp
cmp
xor
or
outsb
adc
xchg
add
lods
xor
mov
jnp
das
lcall
fwait
rclb
jno
and
push
mov
push
sbb
rorb
and
pop
sbb
in
clc
push
insl
dec
loope
mov
cmp
es
orb
dec
push
sbb
out
mov
sbb
cmpsb
lea
pop
add
dec
lcall
jb
xchg
lcall
pop
clc
mov
aas
xchg
jmp
test
add
rcr
sarl
cmpsb
inc
fwait
repz
mov
aam
add
mov
push
and
mov
cmp
stc
mov
lret
mov
ds
bound
lds
pop
fidivs
rorb
jmp
in
lret
lret
mov
adc
jle
sbb
outsl
mov
ror
lods
mov
lcall
mov
xchg
or
jno
fists
dec
gs
in
insl
cmp
dec
adc
dec
xchg
je
mov
in
xchg
out
sub
or
int3
push
mov
scas
pop
mov
xor
sub
mov
xor
test
mov
push
testb
jnp
je
aas
cmp
cld
or
pop
fucomp
arpl
mov
pop
ret
mov
insb
arpl
push
adc
shlb
not
xlat
dec
mov
pop
inc
subb
mov
fwait
cmp
insb
leave
xchg
mov
mov
or
cs
je
mov
into
push
loope
pop
stc
test
es
pop
xchg
in
lods
push
in
adc
xor
insb
sbb
sub
pop
cwtl
push
xchg
cmp
sub
dec
dec
jne
mov
loop
repz
push
and
jae
adc
add
inc
pop
pusha
les
test
outsl
stos
or
in
jae
pushf
dec
push
and
cmpsl
push
push
test
adc
movsl
imul
push
dec
sbbb
movsl
in
jp
outsl
lock
pop
andl
imul
adc
sbb
loop
dec
adc
push
adc
dec
mov
repnz
sbb
mov
sbb
adc
jmp
rolb
out
mov
mov
xchg
cwtl
into
cmpsb
test
mov
and
xchg
xor
push
xchg
and
jnp
iret
pop
sub
lret
test
cltd
mov
or
sahf
push
icebp
popa
sbb
outsl
popf
mov
lret
pop
lds
neg
fdivs
test
or
ds
mov
adc
cmp
pop
out
subb
or
out
jg
xchg
inc
imul
cmpsl
into
jecxz
pop
sbb
mov
outsb
or
add
push
push
aad
pop
pop
mul
jg
add
test
in
inc
and
imul
call
in
mov
cmc
call
push
fnstsw
xor
sbb
int
pop
jae
push
push
mov
lcall
lahf
mov
je
arpl
pop
sahf
and
fiadds
inc
call
in
and
decb
shll
pop
popf
jb
mov
push
fidivl
sbb
in
lods
clc
cmpsb
gs
add
jbe
fwait
nop
push
xchg
jb
mov
mov
decb
adc
cld
ret
lcall
cli
pop
jns
jbe
pop
imul
mov
loopne
pop
sar
mov
mov
shrl
and
jge
out
jne
test
inc
or
inc
push
imul
dec
out
mov
and
in
popf
mov
dec
iret
jg
jmp
addr16
shl
jecxz
pop
mov
fs
mov
pop
push
sbb
mov
add
inc
jne
outsb
sub
inc
cmp
lahf
enter
lock
mov
adc
mov
xor
mov
daa
mov
mov
push
icebp
mov
int3
outsl
mov
cmc
cmp
adc
inc
in
scas
jecxz
movsl
dec
xchg
lret
in
lret
adc
pop
fsubrl
movsl
fiaddl
leave
rolb
imul
add
cmpsb
push
xor
inc
mov
inc
lahf
icebp
ss
and
add
inc
rorl
lahf
mov
pop
sti
fisubrl
ficoms
inc
adc
rcll
dec
xchg
push
inc
rorb
rcr
or
xor
mov
sub
rcrl
roll
movsb
stos
scas
add
fisttps
test
push
loopne
pop
xor
imul
push
or
cmp
dec
cmp
addr16
sub
push
jo
mov
sbbl
pop
shrl
mov
xchg
mov
lcall
adc
sbbb
lcall
imul
add
aam
stos
cs
out
shl
mov
inc
mov
adc
jo
inc
ds
sbb
xchg
dec
xor
xor
in
pop
les
jmp
jmp
sub
in
enter
lds
pop
out
inc
mov
ss
pop
jae
push
popa
add
push
jo
push
into
iret
push
daa
into
and
sbb
lahf
leave
cmp
stos
pop
outsl
lock
in
mov
sbb
inc
mov
daa
sub
lods
lds
add
inc
gs
mov
scas
out
daa
repz
dec
adc
mov
push
pop
pop
aaa
adc
xchg
mov
in
mov
aaa
je
dec
and
das
pop
repz
mov
xchg
sbb
pop
dec
lock
je
sub
mov
and
xor
rclb
scas
and
add
sub
sbb
jbe
mov
mov
js
in
enter
dec
aam
popa
stos
pop
das
out
pushf
and
call
and
add
iret
es
nop
inc
sub
cmp
ljmp
loope
xor
aaa
iret
adc
inc
stc
sub
pushf
faddl
dec
mov
bound
loope
pop
pop
iret
into
movsb
xchg
adc
push
lcall
inc
cmp
in
inc
sub
cmc
loopne
sbbb
cld
push
pop
push
jns,pn
xor
mov
xor
std
and
xchg
add
aad
out
push
xor
lods
shrl
test
jmp
xchg
push
inc
sbb
scas
jne
or
les
in
fwait
pop
subb
bound
adc
test
insl
sbb
cld
cmp
inc
xlat
sbb
cs
jmp
sub
sti
pop
insb
cmp
mov
int
mov
cli
jb
in
pushf
inc
cld
mov
jnp
jg
mov
shlb
pop
push
inc
mov
mov
test
xchg
enter
dec
jge
jno
dec
mov
daa
cwtl
fbld
sbb
in
imul
enter
xchg
mov
and
pushf
repnz
mov
xrelease
mov
or
pop
cmp
popf
adc
fistps
stos
lahf
lcall
sub
adc
sub
mov
iret
dec
aas
push
and
xchg
push
negl
inc
push
or
lret
insb
sbbl
in
jns
sbb
sub
dec
out
incl
xlat
jo
xor
shrl
fisubs
incb
out
fmul
fmul
das
out
jns
cltd
sarl
xchg
icebp
testl
movsb
jns
jb
sbb
add
pushf
adc
cmp
pop
testb
cmp
in
sub
out
and
lock
pusha
pop
xor
lods
sub
subb
gs
daa
pushf
scas
aam
mov
loopne
js
test
mov
and
mov
xchg
cmp
js
dec
pop
add
xchg
fmull
and
mov
loopne
push
or
ret
sbb
sbb
and
les
rcrl
push
mov
push
addps
mov
mov
lock
lahf
repz
pushl
fsub
xchg
xchg
lret
movaps
cld
adc
xchg
xchg
xchg
scas
mov
movsb
lds
out
xor
xchg
outsl
jno
adc
out
sbb
test
and
dec
fisubs
xchg
mov
imulb
pop
inc
lea
mov
push
push
ret
push
mov
xor
out
movl
lahf
add
cmp
xchg
pushf
pop
and
mov
int3
sub
shrb
rcrl
popf
fldt
out
xor
and
inc
aaa
sbb
addl
and
cmp
mov
or
inc
xchg
adc
dec
out
fistpl
lock
mov
push
xchg
or
add
loopne
stos
stos
dec
nop
jae
sbbl
fimull
sbb
fiaddl
aaa
popf
mov
and
or
adc
cmp
xor
icebp
iret
and
mov
adc
outsl
mov
dec
dec
push
mov
es
test
xchg
jae
nop
jg
inc
imul
mov
out
jle
sbb
pop
cmpsl
inc
mov
call
sub
xchg
cmp
test
stos
push
in
pushl
movsl
notl
push
stos
push
jno
sbb
xchg
subl
fdivs
sub
loope
div
push
das
pop
jne
add
sbb
mov
pop
add
test
pushf
in
inc
cli
in
in
stos
loope
lret
test
add
outsl
sub
loop
dec
xchg
pop
loope
inc
sub
add
shl
movsl
and
or
clc
push
jecxz
or
fnstsw
mov
movsb
shl
in
lcall
mov
data16
fldenv
icebp
popa
mov
and
push
adcl
inc
xor
xchg
imul
mov
shr
jae
push
sarb
add
xchg
and
shrb
mov
icebp
push
jle
in
cmp
dec
mov
test
cmp
ja
dec
pop
sbb
negb
xor
pop
fildll
scas
cli
call
dec
hlt
mov
out
cmp
icebp
xchg
jg
test
shll
xor
leave
das
or
icebp
adcl
cli
hlt
jg
jl
jmp
adc
sbb
xchg
fwait
lods
insl
jb
in
push
mov
jge
movsl
pop
dec
inc
bound
push
scas
mov
lods
pop
fidivs
test
rep
test
mov
push
hlt
es
dec
mov
cwtl
in
rorb
test
popf
test
sub
repz
sti
repnz
fucomi
adc
repz
fwait
and
icebp
lret
mov
push
xor
mov
pop
ret
push
push
mov
div
lcall
imul
imul
das
ret
fnstcw
and
mov
add
mov
or
xor
jmp
lcall
jecxz
cmp
cmp
pop
lret
dec
mov
int3
pop
leave
loope
out
and
fildl
cmp
push
ret
scas
cltd
mov
into
int3
jmp
and
fs
push
mov
sub
mov
xchg
in
xor
mov
stos
popf
jecxz
mov
push
pop
fists
add
fwait
or
cmp
jecxz
lds
or
cmpsb
stos
dec
popf
add
xchg
push
cli
rclb
mov
aad
sarl
xchg
cmp
push
mov
loope
adc
jae
fnstenv
test
scas
pop
or
mov
fld
mov
push
sbb
or
mov
pop
ss
cli
cmpsb
mov
inc
dec
mov
pop
mov
xchg
xchg
test
lret
addr16
adc
loope
stc
repz
adc
es
enter
sub
xor
mov
pop
dec
xor
pop
inc
addb
nop
enter
jge
add
andl
out
movsl
push
test
rcr
fidivs
loop
push
std
shlb
les
cltd
enter
stc
insl
adc
dec
xor
pop
jno
mov
testl
lods
push
and
shrl
and
add
or
mov
inc
mov
or
jnp
dec
sbb
ljmp
jle
popa
or
cmp
bnd
sbbb
sbb
pop
dec
es
mov
xchg
int3
pop
pop
or
jae
call
aad
push
ret
cmp
rorl
cmp
test
inc
dec
add
sbb
push
pop
add
arpl
jnp
dec
sti
mov
pop
pop
pop
cmp
adc
push
vmread
popf
subb
mov
les
fs
push
sbb
out
int3
pop
add
fsubs
cmp
ret
pop
push
divb
mov
sub
cmp
dec
xchg
and
jge
xchg
lcall
ja
int3
std
pop
inc
cs
pop
mov
fwait
jns
xchg
xor
int
cmp
das
mov
fsubrs
push
xor
and
loope
std
movsl
scas
clc
jb
push
push
mov
push
mov
push
push
imul
inc
cli
sahf
jmp
lcall
pop
sbb
outsb
mov
sbbb
sahf
jns
andl
fldt
pop
lcall
inc
pop
in
cmp
push
nop
push
imul
fmul
sbb
lock
xchg
xchg
inc
adc
test
movsb
inc
dec
ficoms
imul
cltd
pop
pop
xchg
mov
add
les
pusha
cmp
shlb
push
in
cmp
les
jae
mov
into
repz
inc
xor
aad
mov
lods
cmp
add
inc
sub
loopne
adc
call
stc
and
test
or
push
mov
imul
imul
cmc
cmp
outsb
clts
cmpl
popf
jl
mov
mov
sbb
push
fcmove
shlb
js
adc
inc
fiadds
in
or
dec
mov
adc
int3
mov
lea
mov
insl
or
in
bound
push
and
add
pop
inc
ret
lock
mov
movsb
sbb
mov
popf
jnp
mov
and
and
cmp
mov
int
imul
xor
mov
in
test
push
sub
dec
into
arpl
pop
xchg
push
movsl
xchg
or
xchg
out
inc
roll
sub
mov
push
pop
lea
push
out
in
jbe
inc
fsubrl
jg
jmp
out
xchg
mov
in
data16
xor
iret
mov
je,pt
mov
pop
xchg
xor
gs
pushf
dec
ja
repnz
fistl
cmc
dec
xchg
mov
shrb
or
pop
jge
test
push
jne
enter
mov
nop
inc
sub
inc
sub
jecxz
or
push
jae
clc
stc
call
lcall
imul
xchg
pop
dec
sub
add
in
ret
stos
loope
jnp
into
dec
pop
repnz
xor
mov
mov
notb
icebp
sbb
inc
aas
jg
ret
popa
jns
or
outsl
inc
dec
outsl
mov
inc
leave
mov
pop
out
pusha
stc
fildll
inc
cmp
xchg
pop
push
jg
cwtl
sbb
movhps
scas
xchg
lea
cli
push
shl
push
push
imul
stc
movsl
inc
mov
dec
fsts
insl
mov
and
divl
mov
bound
divl
xchg
in
mov
stos
daa
and
fldl
fadds
push
sbb
xor
imul
push
fisttpll
stos
pop
push
cli
fld
jno
sub
pop
jge
loopne
or
call
mov
xchg
faddl
xor
pop
and
arpl
clc
lock
dec
pop
fwait
call
mov
lcall
inc
add
cmp
cmp
mov
outsl
sti
sub
push
mov
mov
push
addr16
leave
js
add
fistps
repz
shll
lock
cmp
pop
mov
mov
adc
fldcw
cs
bound
xchg
jp
and
cmpsl
inc
clc
popa
nop
mov
pop
ret
mov
xchg
outsl
stc
loop
in
loop
ret
shll
pushf
or
leave
cmp
jae
jecxz
mov
cmp
je
out
arpl
and
jle
push
dec
adcb
sub
cmp
sbb
sti
pop
xlat
sub
ret
add
jg
sub
dec
xchg
sbb
test
mov
xor
call
shlb
daa
or
dec
repnz
sti
pop
lret
clc
pop
mov
sub
imul
orb
dec
addr16
icebp
movsb
or
mov
in
rorl
es
imul
idiv
inc
cltd
pop
adc
mov
push
inc
sub
enter
rcr
jno
test
xor
cmp
test
cmpsl
icebp
pusha
aam
stos
movsl
dec
jae
adc
pop
jecxz
jp
sub
dec
or
xchg
xchg
fs
pop
int3
push
pop
cmpsb
pop
sub
jno
mov
xor
add
xor
add
adc
add
mov
sahf
fcomi
push
or
or
cs
push
mov
movsb
inc
adc
out
sbb
adc
shll
pushf
movsb
lret
mov
sbb
inc
adc
cltd
mov
jb
pop
ficompl
shll
movsb
in
cmp
rorl
iret
mov
movsl
sbb
ret
and
sbb
pop
in
movsl
ds
xchg
xor
cmp
in
fbstp
js
mov
jge
ljmp
mov
sbb
mov
cmp
xor
jns
mov
pop
adc
and
mov
mov
mov
mov
cmp
ja
cmp
negl
cli
fwait
mov
mov
je
push
fsubrp
rclb
jle
int
sub
and
push
incb
push
dec
xor
stos
movsl
rorb
sbb
hlt
roll
xor
stc
push
mov
cltd
cmpsl
imulb
xor
iret
stc
mov
adc
cmp
lds
lcall
or
add
pop
xlat
mov
stos
pop
mov
inc
dec
dec
hlt
int
fs
lea
sub
adc
rcl
arpl
cs
inc
adc
pop
mov
jne
loopne
dec
inc
adcl
mov
cltd
scas
test
testb
dec
add
je
lds
ss
push
add
jmp
dec
inc
out
imul
cltd
arpl
mov
dec
std
fisttpll
xchg
pushf
adc
push
ja
aas
aad
lds
pop
jb
popa
outsb
xor
fstps
lds
mov
sahf
jb
add
cmpsb
loope
push
popa
push
adc
sbb
scas
xor
lods
jb
ja
mov
leave
into
pop
dec
les
and
shrl
xlat
jbe
xchg
test
cld
movsb
mov
dec
fsubp
addr16
stos
sub
mov
adc
notl
or
push
xchg
ret
sahf
lcall
sub
stos
jb
push
lcall
mov
xchg
sbb
andl
push
cltd
add
lret
jae
movsl
loopne
sahf
push
jmp
imul
push
out
cmp
fidivs
and
add
ret
and
jnp
push
push
mov
enter
xorl
clc
sbb
sti
mov
cwtl
adc
jb
xchg
mov
pushf
xchg
enter
rcr
pop
xchg
in
push
jmp
sbb
dec
push
fs
out
pusha
cmp
test
iret
push
mov
ds
test
movsl
mov
lret
dec
pop
mov
adc
adc
in
insb
dec
and
and
pop
sahf
leave
push
mov
aaa
xor
xchg
mov
negb
mov
and
jle
lods
dec
fdiv
or
in
lcall
sbb
jmp
mov
xor
rol
pop
mov
or
lahf
inc
pusha
and
sub
shll
out
add
push
add
or
cmp
push
mov
inc
adcb
jae
ret
inc
push
add
sbb
adc
lds
mov
cs
sbb
xor
bound
push
into
sub
mov
sbb
jmp
mov
lret
mov
test
add
jne
pop
inc
fwait
pop
mov
inc
mov
in
push
lods
mov
sti
xor
sbb
dec
scas
pop
mov
roll
dec
js
fs
jne
icebp
sbb
inc
mov
xchg
in
xchg
fidivrs
out
ja
add
insb
push
stos
call
scas
aam
lcall
aad
and
xlat
push
or
and
dec
jl
push
jnp
mov
cli
pop
adc
stos
mov
neg
pop
pop
mov
mov
mov
insl
adc
add
xor
xor
fnstcw
add
xchg
rcll
inc
adc
lret
cmp
xlat
xor
repz
test
fsubs
lods
fcomi
stos
out
lret
rcrl
dec
or
sbb
ret
fcom
adc
test
push
daa
sbbl
inc
and
fbstp
aaa
rclb
cmc
mov
cltd
or
jle
jecxz
das
xor
xchg
inc
push
push
inc
mov
out
sbb
jbe
fmul
jmp
or
cs
inc
repnz
dec
movsb
in
pushf
inc
xchg
jg
cmp
gs
repz
and
mov
lcall
jb
jl
jb
sub
xor
cmp
mov
adc
pop
jae
pop
mov
push
lds
stos
cmp
sbb
mov
push
xchg
leave
adc
popf
stos
mov
push
lcall
nop
jo
and
scas
and
popa
in
mov
inc
mov
cs
fcoml
stc
pushl
out
jbe
out
cmp
inc
xor
sbb
popf
andb
gs
fwait
mov
insl
popf
rcll
testl
xor
in
pushf
jp
cmp
cld
sti
imul
pop
shrl
mov
into
dec
push
cmpl
fistpl
mov
aas
sahf
popf
lds
jg
or
loopne
jae
repz
cwtl
ss
addl
mov
push
lret
mov
xchg
inc
xchg
rorb
adc
lcall
mov
mov
ss
push
dec
sbb
xchg
inc
and
xchg
and
adc
xor
or
and
inc
xchg
or
pop
pop
mov
mov
enter
mov
lret
add
sub
jge
into
lea
dec
pop
aaa
fs
xchg
pop
nop
mov
ljmp
xchg
shrb
add
repz
push
cltd
add
mov
and
pop
mov
mov
fbstp
test
or
das
mov
adc
cmp
sbb
push
scas
out
mov
test
movsb
and
enter
dec
xor
aaa
out
in
jmp
mov
movlps
inc
pop
int3
mov
dec
mov
jno
lods
xchg
rclb
in
fcomi
andl
xchg
pop
fstl
addr16
loopne
leave
dec
lods
adc
xchg
inc
sarl
lods
fucomp
jne
pop
in
sti
and
xlat
mov
loope
pop
stos
inc
inc
test
repnz
inc
pushf
cmp
cmp
pushf
mov
push
dec
xchg
adc
es
ret
js
dec
sbb
addb
and
arpl
outsb
movsb
imul
jecxz
dec
movb
call
add
loopne
xor
fbld
push
pop
shrl
rorl
inc
mov
mov
mov
sti
pop
mov
rol
mov
add
jmp
mov
pop
sub
les
pop
sbb
jb
fs
ja
nop
dec
or
filds
loopne
mov
dec
pusha
fisubrl
enter
lret
movsb
mov
les
jge
in
and
mov
mov
lahf
mov
fsub
enter
call
imul
enter
or
decb
mov
mov
lods
enter
call
jle
jle
mov
push
mov
pop
test
pop
lock
decb
rcrl
ds
cs
pop
jmp
and
outsb
ficompl
lods
scas
mov
aam
dec
fdivp
jbe
lret
enter
dec
dec
sbb
adc
xor
mov
stos
pushf
cld
push
rcrb
sub
pop
add
jl
insl
in
pop
lea
mov
es
sar
push
sbb
fldt
cmp
lods
and
incl
shl
push
inc
shlb
bound
mov
jl
dec
pushf
xor
scas
in
scas
adc
push
mov
gs
xchg
cwtl
test
mov
movsl
mov
mov
outsb
cmp
pop
cmpsb
popf
shlb
insb
lock
loopne
sbb
scas
cmp
sub
push
dec
push
jns
sub
xor
adc
xchg
aaa
xor
dec
lock
cmp
cmc
mov
out
out
push
xchg
jno
push
xchg
lahf
sbb
cmc
arpl
jb
push
scas
jb
fnstcw
push
in
loopne
jmp
lret
pop
and
jp
push
fldt
sub
decb
or
cmp
cld
jle
jg
mov
xchg
push
int
add
daa
orl
mulb
inc
frstor
mov
pop
lods
push
movsb
mov
mov
ss
add
stos
or
ret
xchg
xor
mov
or
xor
sarb
gs
cltd
cmc
mov
testb
adc
add
pop
push
push
dec
dec
jo
pusha
xchg
add
in
imul
mov
aaa
notl
jns
adcb
mov
add
jo
iret
and
mov
insb
lret
scas
sbb
sarb
les
enter
outsb
int3
adc
inc
cltd
jns
pop
dec
js
jle
scas
lea
jb
icebp
addl
sub
push
inc
pop
pop
pop
ljmp
jp
addr16
lock
jns
inc
inc
mov
push
mov
addr16
xchg
add
cmpsl
cmp
pop
jmp
xor
nop
xchg
mov
mov
mov
pop
cmpsb
push
sbb
and
dec
lock
push
push
mov
lcall
hlt
lods
loope
or
icebp
pop
shlb
sbb
leave
cltd
adc
dec
mov
je
or
scas
ds
xchg
pop
jmp
and
or
ljmp
add
ja
ljmp
pop
daa
lahf
push
pop
inc
jmp
cmc
jp
shll
and
xor
cs
inc
dec
test
js
ficompl
xchg
data16
adc
sub
pop
jbe
pop
jns
mov
aaa
test
mov
xor
inc
xor
mov
ret
test
sar
clc
fcom
sar
arpl
pop
pop
pusha
mov
cwtl
pop
push
mov
mov
lret
andb
mov
ds
popa
add
out
notl
movsb
test
lret
mov
rcrb
mov
shlb
rcrb
rorl
push
mov
hlt
aaa
adc
dec
adc
js
jmp
pop
xchg
ret
mov
nop
in
mov
cli
sub
das
fwait
xchg
scas
cmp
push
lcall
xor
jecxz
xor
push
push
icebp
and
sbb
popf
fucomp
test
test
xchg
ret
add
add
rcl
dec
aas
mov
pop
and
adc
ljmp
mov
inc
insl
mov
loopne
sbb
sbb
lods
out
fs
lahf
ds
js
mov
and
xchg
in
in
jnp
jle
add
and
fdivrs
shrb
sub
and
push
xchg
inc
scas
inc
pop
jno
lcall
jo
test
call
or
xchg
bound
fisttpll
dec
popf
aam
sub
mov
inc
jp
pop
sbb
fimuls
xchg
ret
in
repnz
daa
test
and
popa
dec
popa
sub
sarl
push
inc
xor
lock
out
scas
push
fs
and
cmc
aam
push
data16
sbbb
inc
in
call
jo
test
jp
cmp
inc
lock
inc
arpl
push
lods
xchg
and
lds
pop
in
fsubl
cmpsb
or
cmp
sub
leave
jb
lcall
movsb
cmp
and
push
pushf
inc
push
jae
cltd
or
les
popf
or
cmpsl
das
jle
pop
push
adc
xor
shrl
cs
lcall
push
jg
jle
push
push
repz
insl
mov
mov
movsl
out
out
pop
out
movsl
mov
out
jmp
sub
or
addr16
xchg
sbb
scas
fists
mov
jae
ficoml
lods
xor
mov
jmp
fsub
int3
pop
cld
mov
or
xchg
ss
and
sti
stos
add
xchg
and
jne
jp
xchg
gs
xchg
aaa
test
lock
jmp
mov
adcb
mov
inc
mov
gs
imul
sti
sub
adc
and
dec
sarl
repnz
sub
stos
ljmp
mov
shrb
loopne
sbb
lahf
and
flds
and
pushf
enter
cmp
cwtl
iret
adc
cld
in
mov
xchg
dec
out
ja
inc
lcall
push
ficoml
rol
push
adc
push
sub
or
xor
ret
pop
sbb
int
mov
popa
ljmp
aaa
jno
iret
loop
loopne
dec
mov
popf
enter
call
fiadds
cmpsl
push
stos
push
and
mov
hlt
or
fidivrl
fisubrl
or
and
xchg
sti
jb
sub
loopne
lods
xor
lcall
push
sbb
fs
dec
scas
rcl
lahf
mov
test
mov
or
jns
sbb
and
fwait
cmp
ret
pop
shr
and
je
std
aam
lahf
add
test
mov
push
cmp
and
popa
pop
mov
sbb
sub
mov
jnp
iret
ss
es
pop
fcompl
int
mov
mov
mov
ret
stos
push
or
jl
aaa
test
inc
rcl
in
adc
pusha
cmp
stos
mov
int
push
outsb
test
mov
jns
stos
push
mov
push
addl
push
cmp
jns
leave
mov
sub
ja
loopne
jae
pop
sub
xchg
inc
and
xor
outsl
and
bnd
popa
std
into
push
and
mov
mov
lahf
jmp
xor
ljmp
enter
mov
dec
and
test
out
mov
inc
mov
mov
mov
mov
loop
xchg
scas
push
mov
in
sub
lret
testb
lock
popa
or
mov
sub
in
imul
sbbl
hlt
cwtl
pop
sbb
pop
test
cwtl
call
lcall
mov
cmpsb
ja
fscale
jl
mov
mov
xchg
jge
int
mov
adc
push
push
inc
and
icebp
adc
mov
fcoml
imul
and
or
mov
es
or
inc
aad
loope
inc
ret
jne,pn
test
imul
xor
out
arpl
jl
sbb
dec
xchg
std
iret
in
cmpsb
neg
cmp
fdivrl
out
stc
xchg
push
ss
int
idiv
xchg
sbb
or
orl
loope
out
push
push
and
les
push
pushf
stos
aaa
jno
mov
jb
repz
cli
cmc
mov
pop
cli
cltd
adc
fdivrs
int
jb
mov
insb
inc
subb
lret
and
mov
je
sahf
inc
xor
inc
addr16
xchg
das
xchg
daa
xor
test
mov
outsb
or
adc
out
jbe
inc
cmp
ficompl
lret
jbe
cmp
mov
push
std
xchg
push
cmpsl
add
mov
jle
pop
pop
cwtl
rorb
jne
insb
jl
pop
shr
lods
jle
mov
cmp
imul
repz
movsb
pop
mov
mov
pop
sbb
ret
pop
push
fsubrl
inc
pop
loopne
dec
xor
inc
dec
int3
imul
stc
and
push
xchg
inc
shlb
sub
xchg
sub
insl
jp
test
and
test
inc
push
adc
negl
add
int
jns
jg
scas
adc
ret
imul
rorb
aas
lret
xchg
cmp
xchg
ret
call
out
push
jge
mov
scas
das
inc
lcall
mov
jp
or
xchg
into
or
je
cmp
add
icebp
rcrl
push
cmp
stos
test
pusha
lds
push
sbb
rcl
jne
adc
imul
mov
pop
dec
call
adc
test
push
std
dec
and
or
je
shll
push
cli
mov
scas
and
rcll
outsl
and
add
notb
popf
xchg
test
js
out
jae
movsb
push
enter
call
imul
mov
fdivrs
movsl
cli
sbb
imul
or
jmp
cld
xor
test
lods
sbb
scas
icebp
stos
push
jae
outsb
cmp
mov
je
sbb
shlb
fwait
cmp
repz
jo
aad
fdiv
lahf
out
adc
outsl
popa
sbb
or
inc
jnp
sub
cli
cmp
dec
jae
mov
sub
pop
mov
test
pushf
jg
jecxz
inc
mov
loope
adcb
mov
xor
jecxz
and
je
xchg
dec
movsl
jge
stc
mov
ror
mov
cmp
movsb
bound
push
ret
sub
dec
ja
lret
ret
xor
jmp
nop
nop
cmp
xchg
xlat
stos
xchg
push
sub
and
in
lcall
sub
push
mov
stos
fnstsw
mov
std
xchg
xchg
mov
in
adc
leave
jne
xchg
pop
popl
scas
aam
cld
stc
and
jge
cld
repz
subps
sub
call
jmp
jl
xchg
inc
xor
mov
les
add
imul
adc
ret
movsl
xor
lahf
insb
jl
xchg
mov
test
lods
lds
popf
jbe
fisubs
sub
inc
cmp
sti
push
arpl
jecxz
jb
mov
mov
mov
outsl
les
or
jb
push
enter
jne
fsubrs
arpl
pushl
cmc
sbb
or
cmp
sub
test
popa
pusha
je
mov
jle
fstps
sbbb
movsb
je,pt
add
out
mov
cmc
imul
push
int3
and
xor
cmpsb
ds
pop
or
mov
and
inc
pop
cmpsb
pop
loop
and
jne
cmc
jl
in
dec
sahf
push
das
adcb
lods
rcr
sbb
mov
aas
das
or
test
test
push
nop
lahf
add
rep
jo
test
jne
icebp
push
sahf
pop
sbb
adc
insb
jl
ds
push
add
pop
stos
dec
fildl
sbb
js
sbb
jp
xchg
test
mov
notb
aas
cmp
sbb
sub
push
jnp
repz
dec
iret
mov
adc
jge
push
arpl
stos
in
pop
mov
rcrb
lea
pop
and
sub
cmp
mov
sahf
and
sub
mov
int
xchg
jbe
add
and
add
sub
adcl
mov
push
push
push
decb
popa
push
and
push
push
dec
lods
aaa
out
pusha
cmp
insb
stos
test
out
icebp
pop
pusha
sarl
adc
xlat
pop
insl
sahf
cmp
stos
outsl
pusha
mov
mov
movsb
mov
inc
std
daa
xchg
les
dec
nop
andl
adc
insl
xchg
cmp
rol
pop
jb
cwtl
dec
lods
jo
fcoml
mov
xlat
mov
das
ficompl
into
pop
cld
cwtl
js
pop
sbb
fldt
mov
int3
sarb
jae
loop
inc
inc
jecxz
rcr
push
dec
jle
scas
repnz
sarb
push
sub
shll
shl
repz
mov
fisubl
les
aaa
cltd
enter
mov
xor
mov
sahf
adc
fmul
dec
xchg
xchg
lcall
pusha
pop
cs
fnstsw
inc
bnd
push
clc
sub
jmp
jo
sbb
arpl
iret
cld
and
out
jo
lock
jnp
push
jmp
xor
popa
jne
aad
mov
movsl
and
stos
mulb
stos
push
inc
lahf
fadd
adc
adc
add
insl
aaa
cltd
and
sarl
enter
outsb
add
aad
lcall
push
xlat
int
std
imul
das
sbb
pushf
mov
dec
add
adc
cmpsb
loope
cmpsl
mov
jnp
arpl
ret
and
or
lods
sub
pop
insb
dec
fs
inc
or
daa
pop
and
cwtl
arpl
int3
push
sbb
ret
test
out
fcmovb
sbb
xchg
adc
clc
jae
mov
xchg
cmp
and
dec
int
cld
imul
ds
pop
xor
cmp
jmp
xor
cltd
mov
inc
js
mov
sti
icebp
jo
sbb
pop
push
in
jp
jne
popa
das
mov
xchg
ror
inc
nop
outsl
xchg
xchg
sub
ret
mov
shlb
push
pop
sahf
iret
push
inc
jo
mulps
xchg
outsb
add
adc
pop
mov
stos
out
push
jge
mov
add
pop
outsb
cmc
hlt
aas
xlat
divb
dec
call
or
and
xor
imul
push
test
scas
test
dec
lods
jno
fbstp
in
popf
inc
cmp
xchg
xchg
shlb
mov
sub
pop
mov
pop
je
negl
cs
sarb
scas
sbb
jb
sub
push
in
mov
and
bound
mov
out
xchg
and
adc
xor
scas
mov
mov
mov
bound
insb
inc
sub
mov
je
xor
or
cmp
nop
cwtl
push
xor
adc
pop
lds
xchg
sarb
jno
xor
cmp
je
test
outsl
rcr
push
scas
inc
sub
out
mov
mov
push
xchg
insl
inc
push
lcall
add
push
pop
std
sbb
and
sbb
push
lods
loop
repnz
inc
out
mov
icebp
in
adc
and
cli
cmpsb
int3
add
xor
roll
xchg
dec
fiadds
ds
rcr
int3
xchg
ljmp
push
std
push
into
jmp
ja
jmp
xor
pop
flds
sbb
ljmp
adc
dec
ret
call
les
mov
out
lahf
sbb
mov
icebp
mov
lock
jmp
xor
inc
cli
lahf
cmc
cmp
cmp
daa
mov
cwtl
and
or
nop
fcoms
jmp
bound
pop
lcall
lret
jl
scas
mov
jmp
mov
sar
inc
mov
dec
and
loopne
sbb
fucom
aas
popf
sub
jg
test
push
in
mov
repz
mov
aaa
add
or
fdivs
dec
lds
pop
mov
adc
imul
or
imul
xchg
addr16
scas
lock
test
jmp
aad
pop
add
adc
sub
jo
test
add
les
loope
mov
pop
jmp
insb
mov
ss
xchg
lods
sbb
shrb
hlt
out
leave
xor
rol
aaa
popf
mov
subb
cli
sbb
into
je
xor
dec
divb
in
inc
lea
aam
cmp
mov
fisttpll
and
add
pop
xor
mov
pop
mov
adc
nop
or
push
andl
sahf
out
test
adc
pushf
test
imul
mov
or
movsb
add
mov
aad
dec
cmp
loope
xchg
jmp
sbb
xor
std
std
push
and
xchg
pop
mov
xchg
push
and
and
int
xchg
push
mov
cli
rcrl
arpl
cli
hlt
xor
jmp
and
mov
mov
les
insl
lret
inc
pop
inc
nop
dec
jb
fistl
std
dec
fcomip
fdivrs
xchg
push
sbb
xchg
std
gs
test
call
js
xor
cmp
stos
fwait
dec
enter
sarb
jl
pushf
fcom
call
icebp
sbb
ja
jecxz
mov
adc
scas
mov
ljmp
jp
push
shll
inc
xorl
cmpsb
loop
popf
jnp
jg
fcoms
and
adc
ss
out
xchg
inc
xor
mov
mov
sbb
push
aam
ret
imul
lret
fistps
sbb
cmpsb
cmp
int
aam
adc
sar
stos
jnp
mov
repnz
cmp
js
pop
pop
loop
mov
xor
loopne
cmp
pop
lea
adc
mov
or
lret
rolb
xor
aaa
in
imul
cmpsb
cmp
xor
cmpsb
loop
or
jecxz
xchg
add
inc
fwait
lret
dec
mov
sbb
repz
out
cwtl
stos
add
mov
incl
das
jge
jecxz
idivl
aad
pop
mov
xor
sbb
jmp
pop
mov
dec
es
aad
inc
inc
call
mov
and
imul
cltd
cmp
or
pushf
shrb
push
adc
arpl
jp
mov
add
sub
cs
adc
xchg
push
mov
iret
cmp
sarb
adc
jo
in
xor
shrl
xlat
aam
pop
divb
mov
ja
xor
add
std
dec
jge
pop
into
add
cltd
jns
jns
mov
in
lock
cmp
imul
xor
hlt
mov
inc
iret
inc
sub
fisubl
dec
jb
mov
pop
push
outsl
inc
fists
pop
push
clc
bound
lods
imul
cmpsl
imul
mov
adc
std
xchg
dec
xchg
xor
mov
int3
sbbl
cmp
add
ja
rorl
push
notl
dec
dec
scas
insb
aas
pop
in
popa
xor
icebp
pop
push
es
ss
mov
jb
pop
sbb
inc
inc
fdivrl
aaa
dec
jle
push
push
mov
xchg
jp
mov
mov
movsb
mov
movsl
mov
inc
hlt
ljmp
cmpsb
loopne
jmp
xlat
push
es
mov
in
fildll
lea
lahf
movsl
insl
dec
out
into
mov
movsl
lret
push
insb
push
mov
or
cli
sbb
dec
xchg
adc
jnp
je
pop
add
cmpsl
push
mov
inc
fstl
push
mov
insb
push
orb
fisubl
mov
cmc
mov
and
push
rcl
insb
daa
mov
and
push
mov
imul
sub
jge
movsl
adc
dec
cli
jmp
jae
add
out
lock
cwtl
mov
sbb
cmp
xorl
imul
call
test
pop
fmuls
mov
mov
enter
mov
push
iret
repnz
add
xchg
mov
int3
or
push
mov
lods
loope
mov
push
push
fmull
add
inc
fsubl
test
fdivl
pop
mov
movsw
or
ret
inc
filds
xchg
sahf
push
in
in
cmpsb
mov
and
push
push
shll
int3
test
loop
scas
xor
xchg
mov
incl
xor
ds
inc
mov
fsubr
in
arpl
jb
ljmp
pop
cwtl
mov
shr
mov
jle
cli
fistps
fimull
jmp
lock
out
repz
pusha
jno
inc
sbb
inc
or
cmpsl
inc
adc
fwait
mov
lock
xor
fidivs
mov
jae
jg
sub
add
xor
add
add
jb
gs
xor
cs
dec
dec
add
rolb
dec
rolb
add
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
add
in
push
push
push
mov
push
mov
sub
push
push
push
pushfw
push
jae
jmp
rcll
add
add
adc
pop
int
les
add
jno
call
jne
les
popf
jno
jo
jne
pop
pop
add
mov
add
mov
pop
xor
pushfw
jb
jmp
arpl
add
add
jb
addl
add
jo
jno
mov
into
lret
leave
cli
rcl
mov
adc
mov
into
lret
enter
rcl
mov
add
add
pop
jb
jae
mov
loopne
fst
jecxz
loop
fcmovnbe
ror
lods
lret
lods
mov
push
inc
add
lea
mov
lods
nop
add
xor
jmp
jmp
enter
jmp
nop
dec
jmp
ret
enter
call
popa
jmp
jmp
stc
nop
stos
pushfw
jb
jmp
arpl
add
add
jb
addl
add
mov
sbb
mov
sti
mov
in
ror
rcl
enter
mov
mov
les
mov
fadds
xor
inc
shlb
pop
fcomp
fdivp
hlt
rcr
lods
lret
mov
cs
push
es
mov
push
pop
dec
cld
mov
in
je
pop
mov
out
xchg
jnp
fwait
jns
stc
dec
and
mov
jecxz
js
sub
leave
push
shl
aas
roll
cmp
fsub
ljmp
cs
dec
pop
xchg
or
or
sub
xor
mov
call
or
pusha
std
sahf
data16
fmull
out
pop
ss
or
adc
rcl
jmp
sbb
push
daa
fidivs
js
repz
or
lods
cmc
adc
lds
push
aaa
dec
and
sub
hlt
dec
jge
push
jb
jbe
shl
lahf
xchg
cs
dec
int
pop
push
into
pop
out
push
cli
imul
xchg
jae
cwtl
je
inc
push
lods
fwait
cs
mov
je
lret
mov
sbb
loop
pop
out
cmp
inc
mov
repz
stos
sub
inc
adc
inc
fadd
inc
sbb
ljmp
pop
dec
pop
pop
pop
repnz
jno
and
mov
ja
insl
dec
sbb
cmp
into
mov
ror
xlat
test
out
std
in
in
jg
cmp
decb
out
pop
das
cs
xchg
fsubrl
inc
inc
jbe
pop
pop
gs
bound
insb
jl
jb
jg
inc
adc
movsb
xchg
xchg
lds
cmpsb
mov
mov
fcmovne
ljmp
mov
add
or
or
mov
sbb
or
mov
cmp
jecxz
push
sub
gs
add
jno
sbb
subb
sbb
roll
lods
xchg
fimuls
mov
je
fcoml
ljmp
push
popa
adc
push
lds
test
bound
outsl
adc
or
call
xchg
out
int3
mov
aad
mov
fstpt
mov
orl
xor
mov
int
adc
dec
in
lds
lret
jle
das
add
loop
stos
xchg
adc
push
popf
inc
aas
mov
pop
push
nop
xlat
mov
outsl
mov
loopne
push
pop
pop
aaa
bnd
sti
push
inc
inc
shld
xchg
outsl
xchg
mov
push
arpl
and
pushf
push
xor
notb
arpl
add
dec
insl
jp
lcall
ja
mov
jbe
lcall
lret
les
test
lods
mov
fstp
sbb
adc
insl
xchg
sub
push
cmp
pop
sub
mov
jg
daa
mov
add
dec
cmpsb
lea
aaa
mov
sub
jbe
mov
cmp
push
cmp
mov
push
push
pusha
and
je
xchg
push
lods
xchg
xchg
sti
cmpsl
and
mov
dec
adc
int
mov
loope
pop
inc
in
mov
add
std
jbe
mov
sub
sub
aaa
cmp
dec
xor
dec
cmp
pop
jge
or
das
push
mov
mov
inc
and
test
mov
mov
fcmovnu
shlb
aad
xor
in
sbb
lea
xor
lcall
insl
mov
and
rorb
sarb
adc
cwtl
pusha
pop
jno
adc
sbb
in
xchg
pop
xchg
nop
mov
mov
jno
sbb
ror
lahf
pop
fistpll
pop
int
cwtl
jb
dec
xchg
pop
jmp
sbb
pusha
mov
mov
or
ret
inc
or
icebp
ficoml
dec
pusha
mov
repz
imul
mov
mov
inc
and
pushf
mov
es
into
int
jno
lret
inc
in
hlt
aam
mov
ja
sbb
decl
adc
sbb
mov
dec
push
push
push
xor
sub
lds
jbe
gs
je
repz
lods
xchg
ja
sub
mov
mov
mov
movhps
cli
into
les
mov
adc
or
idiv
adc
pop
and
sbb
or
aam
xor
aad
xor
dec
mov
in
fildl
popa
xchg
xchg
jle
sbb
mov
mov
add
aas
gs
scas
xor
mov
in
negb
push
cmp
push
xchg
pop
or
jmp
jle
out
pop
ret
push
jmp
pop
sub
inc
inc
cmp
scas
pop
ficompl
push
daa
mov
xor
xchg
lea
push
mov
mov
in
loop
fisubrl
in
jmp
ret
or
push
xor
shrb
sbb
ret
cmp
inc
sub
xor
mov
jae
data16
dec
push
xchg
xchg
adc
inc
adcb
stos
popa
jl
jb
pop
fwait
mov
xchg
mov
cwtl
push
cmpsl
in
into
add
mov
add
out
stc
aaa
jl
out
xor
dec
aaa
add
sbb
aas
sub
imul
sub
mov
sahf
adc
pop
cli
les
adc
push
xchg
fwait
lcall
adc
scas
popf
sub
mov
and
std
into
jno
adc
or
add
aaa
sub
mov
inc
scas
test
aad
or
push
repz
insl
push
sarl
cmpb
mov
fwait
sub
hlt
pop
sbb
leave
ror
hlt
adc
loop
leave
sbb
jns
add
jge
push
cwtl
or
add
sub
sbb
sub
inc
xor
mov
fs
push
push
sar
arpl
xchg
inc
movsl
sub
and
rorl
mov
dec
add
inc
movsb
imul
add
sti
or
lahf
and
and
mov
xchg
daa
and
push
cmp
push
push
dec
stos
adc
push
mov
fs
lret
jns
push
jle
xchg
test
xchg
ret
mov
sub
dec
shll
mov
shr
cmp
inc
stc
mov
jecxz
adc
mov
jge
xor
inc
inc
cmp
pop
cmp
push
int
loop
subb
scas
jbe
mov
mov
movsb
mov
mov
loope
xor
sbb
fcomps
xchg
insb
jmp
loope
out
addr16
call
sbb
sbb
adc
pop
dec
cmp
inc
sub
das
push
pop
and
jle
dec
push
pop
pop
gs
xchg
cmp
rclb
testl
aam
push
xchg
rclb
stos
stos
std
mov
fs
lret
xlat
jbe
out
divb
repz
add
or
cltd
fwait
es
cmp
cmp
dec
dec
ja
inc
fmulp
adc
addr16
pop
fsub
ja
fldl
fwait
incl
cmp
clc
cmp
test
rcll
fstp
cli
in
or
in
repz
adc
pusha
jmp
adc
nop
xor
cmp
sub
scas
and
mov
ret
dec
shrl
pop
pop
imull
hlt
jne
in
mov
cmpsl
arpl
rcrl
stos
fcmovu
loopne
imul
ror
mov
add
push
sub
mov
out
lds
adc
sbb
ljmp
push
pop
mov
pushf
js
andb
scas
xlat
movsb
loope
mov
mov
inc
jecxz
add
testl
icebp
xchg
inc
test
sub
daa
imul
inc
test
lods
addr16
sub
adc
inc
scas
shll
push
movl
adc
sub
mov
cmp
call
mov
push
in
out
jmp
adc
bnd
dec
pop
cmp
xchg
mov
or
pop
outsb
arpl
icebp
xchg
mov
xor
int3
mov
jmp
out
shll
int
mov
hlt
test
jge
jmp
pop
sbb
sahf
adc
sbb
cltd
mov
add
sbb
jp
call
inc
insb
mov
add
dec
aam
leave
pop
ror
out
jnp
loop
call
add
add
call
movsb
sbb
adc
push
mov
es
sbb
add
inc
dec
in
xchg
stc
in
aaa
pop
out
popa
pusha
ja
or
jae
jns
lea
mov
cmp
pop
sub
mov
movzbl
mov
xchg
rcl
xlat
in
jnp
mov
iret
lock
add
std
xchg
test
push
sbb
sbb
fwait
xor
mov
dec
push
push
dec
dec
dec
dec
gs
addr16
inc
jle
pop
inc
jp
xchg
fwait
lcall
mov
test
lret
lret
mov
cmc
hlt
sti
cli
icebp
lock
push
or
adc
es
sub
ds
inc
aas
push
push
pop
pop
push
push
pop
push
outsb
insl
je
push
jo
xchg
mov
lcall
mov
into
int
ror
leave
ror
out
in
jmp
loope
out
std
add
cli
stc
add
push
adc
sbb
pop
das
cs
xor
dec
dec
inc
inc
dec
dec
pop
pop
gs
pop
popa
pusha
ja
jge
jae
jns
mov
mov
mov
ret
ret
mov
fcmovbe
rcl
in
in
repz
add
or
add
push
sbb
sbb
push
xor
xor
ss
dec
push
push
dec
dec
dec
dec
gs
addr16
addl
xchg
fwait
lcall
mov
test
lret
lret
mov
cmc
hlt
sti
cli
icebp
lock
push
or
adc
es
sub
ds
inc
aas
push
push
pop
pop
push
push
pop
push
outsb
insl
je
push
jo
xchg
mov
lcall
mov
into
int
ror
leave
ror
out
in
jmp
pop
sub
and
sbb
sub
adc
pop
cmp
lahf
jo
je
je
inc
dec
dec
pop
pop
int
mov
movsl
cwtl
lahf
jb
lea
mov
ror
in
mov
cs
das
cli
add
or
pop
or
xor
add
or
mov
dec
and
bound
xor
insl
outsb
ja
push
dec
dec
dec
dec
sarl
test
mov
js
jle
scas
mov
mov
loope
mov
test
or
push
repz
clc
or
fstp
jecxz
inc
and
bound
or
pop
sub
testb
adc
popl
sub
xchg
gs
inc
mov
mov
jl
jb
jp
xchg
test
ret
in
clc
add
movsb
cmp
and
or
imul
pop
pop
je
in
and
test
pop
inc
outsl
push
sbbb
scas
push
je
xchg
xchg
mov
cwtl
sub
cmpsl
nop
inc
mov
mov
push
ja
mov
leave
fsubp
out
div
pminsw
out
dec
in
sub
xor
and
sbb
dec
dec
xor
shlb
das
mov
bound
add
inc
mov
jno
lea
jno
shrb
test
cmpsb
xchg
out
lahf
enter
mov
jmp
mov
shll
cmp
clc
or
pop
and
mulb
mov
add
cmp
sub
daa
xor
fstl
jbe
dec
gs
icebp
add
xchg
