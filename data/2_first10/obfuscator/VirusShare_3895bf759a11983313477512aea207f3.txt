push
call
ret
ret
add
popf
or
ja
sbb
jae
loope
xchg
and
push
ss
or
cmp
arpl
push
and
jns
adc
fdivrs
hlt
push
outsb
scas
fcomi
js
sub
mov
or
loopne
filds
ljmp
push
and
cmpsl
ss
jp
add
dec
mov
cmpsb
adc
aad
fbld
mov
push
negl
in
ljmp
and
mov
data16
mov
mov
jnp
cmp
bound
test
outsl
pop
cmp
xchg
jae
test
enter
xor
pop
incb
lods
dec
dec
and
sbb
cmp
nop
xchg
nop
mov
sbb
mov
test
movsb
and
adc
dec
repnz
lods
adc
mov
jnp
mov
cmc
jno
gs
jl
cltd
jo
int
subl
sub
mov
sub
mov
enter
and
pop
repz
scas
pop
push
xor
aaa
jae
and
mov
xchg
imul
or
std
cmp
dec
mov
xchg
fistpll
fcom
xor
cwtl
dec
push
push
inc
and
insb
xchg
sbb
jbe
sahf
in
lods
mov
insb
aas
movl
lods
and
lods
enter
popa
sbb
sbb
sub
push
outsb
aaa
cmp
dec
cmp
mov
mov
pusha
vmread
cli
bound
mov
aad
sbb
stos
add
mov
popf
mov
bound
fsubrp
rcrb
ja
loope
dec
pop
mov
mov
xchg
jl
out
xchg
daa
or
adc
int
cmp
mov
daa
inc
and
je
sbb
in
inc
jp
je
jmp
mov
imull
subb
shll
rcrl
inc
jne
lods
mov
dec
dec
jecxz
sbb
sub
push
mov
lock
xor
popf
sbb
or
inc
jo
sbb
fsub
mov
mov
xchg
adc
test
mov
inc
cmp
fldcw
popf
scas
jbe
pusha
fistpl
nop
xchg
xchg
mov
adc
movsb
pop
pop
jge
mov
in
test
lods
xlat
inc
out
mov
jecxz
dec
gs
andb
pop
push
or
jnp
jl
and
mov
cld
arpl
popf
call
sbb
roll
jp
xchg
cmp
stos
sub
lahf
add
push
das
lods
add
xchg
cmp
les
insb
jl
cli
jg
mov
jmp
pop
int3
push
add
das
adc
lcall
call
adc
pop
scas
jl
mov
push
push
and
jecxz
std
in
in
sub
mov
popf
stos
mov
iret
push
mov
cwtl
xchg
add
in
dec
jmp
ja
call
add
sub
aad
jmp
mov
add
push
sbb
dec
loope
fadd
mov
cmp
test
pushf
sti
mov
jge
stc
mov
bound
into
into
test
test
roll
std
push
mov
daa
loop
jo
or
popa
in
fists
fs
and
dec
cmp
push
sahf
and
int3
loop
popa
inc
cli
cltd
mov
inc
test
imul
mov
cmp
or
pop
xchg
or
das
xchg
lret
jmp
sub
int3
into
xchg
stos
inc
aad
inc
arpl
sbb
add
lret
arpl
iret
sbb
shrb
mov
rcl
xor
or
mov
ret
push
dec
stos
das
mov
jle
adc
xchg
int
push
dec
jg
mov
call
in
orl
rcll
lods
hlt
sbb
xchg
inc
sub
jg
adc
ficoml
cld
testl
nop
shl
pop
jle
xchg
in
sub
and
cmp
fistpll
enter
in
ret
int
call
popa
mov
push
daa
push
jns
mov
fwait
mov
daa
movsl
fistpl
clc
sbbb
out
aam
lods
jecxz
dec
lods
dec
nop
lret
pop
inc
dec
cmpsl
lds
jle
mov
adcb
jl
mov
sahf
andb
and
addl
mov
loop
adc
and
aas
sahf
mov
cmp
push
jae
add
in
push
loope
out
push
verr
loopne
nop
repnz
pop
ss
ficoms
push
mov
lods
das
shrb
or
jge
pushf
sbb
sbb
cmp
jle
sbb
xadd
rorb
xor
arpl
lcall
push
gs
xor
cltd
ds
aam
push
hlt
mov
cli
push
aad
fdivr
es
movsl
stc
cmp
subl
and
xor
mov
push
fs
mov
std
in
out
rclb
jne
sarb
aas
push
dec
add
ljmp
lock
mov
adc
movsl
add
xchg
dec
shl
cmp
call
jge
push
orb
push
bound
sbb
adc
jb
mov
dec
into
and
mov
repnz
addr16
leave
xchg
jbe
outsb
cmp
lret
pop
cmp
call
xchg
push
ficomps
test
pop
xor
orl
mov
cmpsl
lods
dec
test
sbb
shlb
icebp
xor
adc
mov
sub
ret
cmovns
pusha
popl
repz
fsubs
push
mov
jae
xorl
fnstenv
fdivl
cwtl
ljmp
ret
lcall
popf
xchg
cltd
stc
andb
fcomip
inc
je
inc
mov
sbb
aad
mov
inc
ficoml
fcompl
inc
pusha
jb
int3
int
mov
adc
jmp
push
xor
pop
push
sub
cmp
mov
jp,pt
imul
mov
jg
call
pop
inc
rol
fists
mov
jmp
and
pop
jg
adc
adc
in
xchg
xorl
stos
fisttpll
popf
push
mov
stc
dec
sub
lret
ja
push
rorb
add
sahf
add
mov
or
inc
inc
pushf
fucomi
fs
pop
adc
out
loope
jg
mov
repnz
inc
inc
xchg
xchg
adc
sbb
cmp
jns
outsl
and
xchg
sbb
lods
sub
push
pop
rol
mov
xchg
std
sub
jae
pop
imul
cltd
xchg
int
mov
jo
addr16
cs
mov
jp
bound
mov
call
and
aas
and
mov
into
fidivs
jle
bndstx
dec
fs
or
clc
ss
flds
sub
insb
xor
pop
push
out
in
sbb
pop
shrl
push
jge
push
add
jge
adc
call
jbe
push
and
fidivrl
xor
xchg
daa
cmp
or
iret
mov
shrb
les
push
hlt
int3
lock
push
mov
dec
das
shll
in
mov
test
mov
jl
inc
dec
test
rcl
push
mov
iret
mov
or
mov
push
or
pop
xchg
aaa
lahf
mov
and
rcrl
mov
imul
or
or
scas
int3
lret
mulb
stos
mov
jns
jnp
xor
or
hlt
push
std
pop
adc
cmpsl
mov
repnz
push
xchg
dec
inc
stos
xor
sbb
sub
clc
mov
gs
xor
mov
mov
jbe
pushf
push
mov
outsb
add
mull
movsl
ficompl
shrb
xchg
cld
inc
test
xor
lahf
repnz
push
jbe
add
stos
idiv
nop
in
and
das
in
adc
hlt
sbb
jl
scas
das
int3
leave
jns
xchg
or
into
xchg
add
cmp
mov
jno
stos
aad
in
jge
lea
shrb
pop
pop
or
call
loope
push
stos
inc
push
rcrl
pop
add
dec
cmpsb
imull
and
xchg
sbb
pop
push
out
enter
mov
stc
mov
enter
adc
daa
jp
mov
adc
mov
pusha
cmpb
lret
cwtl
rcll
jecxz
push
bound
ljmp
push
fsubl
sub
inc
mov
jl
ja
xchg
test
test
or
out
ljmp
sub
daa
aaa
daa
lods
cmpsb
jmp
sbb
sbb
jp
mov
jne
loopne
cmpsb
shl
jo
pop
in
les
inc
xchg
test
mov
jmp
pushf
xor
outsb
add
outsb
sub
test
push
fildl
mov
aaa
or
mov
insl
mov
jne
adc
rcrl
test
mov
push
lret
test
add
cmp
arpl
sahf
shl
icebp
sbb
pop
mov
sbb
les
pop
cmp
out
mov
lcall
inc
iret
mov
xor
aaa
push
gs
scas
jl
sub
xor
lea
mov
sub
js
popf
jecxz
jmp
daa
sbb
push
adc
addr16
ds
lock
xor
dec
pop
add
push
inc
xchg
or
ret
jno
les
fisttps
add
push
push
cwtl
pop
inc
xchg
repz
ret
push
dec
sbb
and
mov
arpl
test
fmulp
jae
adc
mov
rcrb
cmpb
xchg
fistps
movsl
push
int3
mov
call
sarb
in
mov
insb
jl
push
lods
push
xor
inc
data16
mov
out
mov
adc
aas
or
inc
inc
adc
mov
dec
and
mov
fdivs
inc
imul
jmp
movsl
adc
sub
pop
pop
iret
cmp
nop
je
js
stc
xor
sbb
mov
fistpl
pop
repz
mov
jbe
xor
cmpsl
addr16
cli
push
je
cmp
leave
sbb
sub
jmp
insb
fisubrl
shlb
or
xchg
and
cmp
sahf
xchg
sub
pop
dec
mov
shll
movsl
or
test
jae
mov
loope
mov
sub
xor
or
fsubrs
in
es
pop
fsubs
scas
ja
ljmp
xor
xchg
xorl
addr16
repz
cwtl
jne
fildl
add
dec
sub
jbe
cmpl
push
shrb
in
int
testb
int3
adc
aas
loop
dec
sbb
fistpll
mov
pop
and
outsl
aad
mov
push
jecxz
mov
lret
stos
mov
cmp
pop
sahf
jmp
mov
pop
dec
lret
and
sbb
incl
or
cmpb
insb
in
shl
ja
sbb
gs
sub
popf
mov
pop
fnstsw
in
pop
xchg
stos
mov
push
leave
cmp
mov
lea
nop
repz
cmp
je
aad
push
push
loop
lcall
ret
push
std
sti
aas
push
sub
repz
xchg
dec
mov
pop
mov
dec
sub
pop
or
xchg
and
sbbb
test
xor
mov
mov
insl
cmp
leave
mov
jp
hlt
jne
fwait
icebp
mov
mov
xor
ss
adc
pop
pop
cld
dec
adc
sbb
xchg
push
or
cmp
aas
andl
xor
xchg
sbb
jmp
mov
pop
ja
push
fnstenv
dec
ja
mov
sub
sub
pop
inc
in
fstpl
mov
out
mov
enter
xlat
enter
adc
xchg
aam
enter
and
test
rcrb
cli
and
dec
shlb
lret
xchg
rcll
popa
sub
imul
mov
das
scas
ljmp
mov
inc
daa
and
fadd
inc
mov
pop
adc
pop
movsb
scas
mov
mov
push
pusha
in
or
xchg
pop
arpl
cmc
inc
push
sbb
pop
mov
xchg
xchg
adc
les
imul
mov
mov
mov
xchg
dec
push
xchg
xor
add
adc
sbb
out
xor
mov
add
lret
push
add
sar
jnp
jno
inc
sbb
dec
ret
xor
enter
test
movsl
mov
sti
inc
enter
mov
jp
mov
mov
mov
mov
fiaddl
pop
sub
mov
icebp
jb
add
jecxz
lods
test
stos
fmul
push
inc
sub
inc
int
stos
dec
add
sub
out
cwtl
movsb
sub
fs
jg
aas
xor
jle
add
arpl
mov
iret
stos
ret
adc
outsb
push
pop
mov
cmpsb
cld
mov
push
push
sbb
das
jnp
mov
mov
sub
daa
stos
inc
int
test
das
add
push
imul
push
pop
dec
ss
and
cltd
int
shlb
dec
push
into
jbe
pop
lods
stc
pop
roll
sub
sub
andb
adc
mov
push
sbb
das
lret
fwait
xchg
sahf
in
shl
mov
gs
pop
out
pop
stos
fs
or
and
cmpsb
addb
push
mov
jle
jns
lahf
repnz
lret
xlat
roll
ja
shlb
fisttps
dec
in
xchg
mov
dec
inc
pop
jmp
test
dec
xchg
fwait
ret
repz
mov
fiaddl
pop
ss
pop
pushf
add
mov
lds
mov
in
cmp
adc
sbb
shll
loope
sub
mov
addl
daa
push
mov
enter
adc
mov
fsubl
mov
ret
dec
mov
mov
pop
push
or
lcall
xchg
jle
sbb
adc
fidivl
popf
xchg
ljmp
xor
dec
ss
insl
loop
mov
jg
out
ds
in
mov
mov
adc
xor
mov
data16
rcrb
test
or
popa
adc
mov
inc
jbe
push
jo
adc
push
mov
sub
out
mov
push
scas
push
fwait
leave
cmpb
fs
add
js
or
pop
sbb
aam
pop
sbb
cmp
gs
jecxz
les
scas
cmp
in
pushf
mov
sub
inc
and
mov
popf
pop
mov
xchg
fsubrs
lahf
mov
jbe
jbe
ds
mov
dec
sub
shll
imul
mov
mov
test
jg
inc
sub
add
xor
test
cli
pop
imul
lahf
shrb
mov
lods
mov
fiadds
icebp
lods
push
jp
sub
aas
mov
push
and
sub
jl
sahf
aad
mov
jae
add
stos
fcompl
cmpsl
subb
movsb
sub
test
in
test
mov
jbe
pop
cltd
loope
jge
movsl
cs
mov
mov
mov
testb
cmp
fwait
dec
jb
inc
dec
repnz
aam
jb
lea
pop
pop
xor
lret
xor
sub
mov
std
add
inc
repnz
aaa
scas
inc
lret
and
ljmp
pop
add
xlat
push
orl
dec
pop
shlb
or
and
and
mov
leave
push
ficoms
addr16
shll
into
adc
sub
mov
cmp
adc
push
and
cltd
sbb
repz
je
ds
pop
adc
cmp
daa
pop
mov
out
repnz
call
sbb
sbb
add
jmp
data16
add
xor
aaa
ret
cwtl
pop
mov
mov
cwtl
or
dec
cmp
cs
mov
mov
cld
aas
sub
adc
pop
ret
sar
sarb
add
cmp
pop
cs
jo
jg
lret
jne
xchg
or
shll
cmp
cmpsb
xor
mov
mov
pop
in
std
rolb
movsl
mov
out
in
jo
les
add
ret
sub
mov
out
repz
inc
lods
push
cmp
cmpb
cwtl
das
mov
pushf
ja
pop
cltd
jns
dec
pop
cmp
lcall
xchg
shlb
xchg
inc
rcrl
sbb
fld
cmpb
mov
je
test
sbb
xor
pop
dec
cmp
push
pop
add
pop
stc
and
adc
roll
pop
iretw
in
add
adc
adc
cwtl
adc
sbb
arpl
push
cmp
movsb
dec
das
in
dec
stos
push
push
xchg
call
lret
jnp
sbb
xor
cmp
xchg
negb
push
inc
pop
pop
sub
adc
cld
addr16
inc
pop
cld
mov
repz
mov
lock
sbb
sub
xor
fildl
cltd
add
pop
lcall
xchg
pop
sbb
andl
aam
push
cmp
sub
rcr
iret
inc
lcall
lods
sti
mov
add
or
cli
dec
mov
inc
xchg
rol
out
dec
mov
out
sub
enter
xor
ss
es
pop
idivb
or
cmp
int3
ja
push
mov
mov
push
xor
fnop
fscale
scas
mov
push
shll
jmp
fstpl
sub
fstps
push
mov
mov
jle
push
inc
cmp
clc
and
add
repz
xlat
cmp
outsb
push
lds
mov
mov
and
aad
sarl
fidivrl
bound
sub
mulb
mov
test
cmpb
push
cltd
dec
xchg
push
es
jb
test
sbb
fbstp
shlb
in
int3
inc
cmpsl
popf
test
test
lods
xchg
adc
aas
jge
roll
mov
test
mov
xchg
test
movsl
push
out
cmp
xchg
ds
xchg
pushfw
scas
pop
mov
adc
mov
sub
testl
push
gs
xchg
lock
xchg
xchg
leave
test
fistpl
rol
scas
sub
decl
cmp
aam
mov
jnp
xor
mov
ficoms
push
jp
in
outsb
or
outsl
loope
mov
clc
andb
xor
int
or
sbb
in
sbb
jg
cmp
iret
lea
jo
jg
pop
lock
test
push
rcrl
loope
and
clc
mov
pop
xchg
imul
scas
repnz
lods
rcr
jo
pop
sarb
sbb
repnz
daa
loop
or
pop
push
mov
inc
and
test
add
lret
test
rcrb
jmp
repz
pop
aad
scas
pop
lret
out
mov
fisubrs
push
stc
cmp
test
aad
cmp
int3
gs
jg
out
ljmp
xchg
cmc
std
fnstsw
aad
xchg
jnp
inc
cmp
btcl
push
inc
pop
inc
xor
ret
sub
push
jp
cmp
scas
imul
cli
push
int3
pusha
bound
rcrb
cmp
push
cli
ljmp
jecxz
jle
pushf
in
mov
jp
in
mov
add
adc
ds
sbb
scas
out
xorl
insl
je
sbb
adc
adcb
lds
test
jbe
insb
aam
test
das
rolb
fdivl
aam
dec
adc
fstpt
mov
hlt
cmp
push
mov
test
xlat
mov
call
shlb
xchg
out
or
jp
mov
outsl
mov
xchg
in
jbe
add
sbb
jbe
xchg
mov
pop
aam
pop
rolb
sbb
pop
xor
sar
or
push
push
lret
mov
jae
lods
das
mov
xor
fiadds
stc
in
pop
or
xor
ret
js
hlt
clc
imul
push
stos
push
out
push
rcll
pop
mov
clc
xchg
or
out
xchg
flds
aad
arpl
and
xor
dec
fnstenv
movsb
jno
test
add
or
xor
fstpl
inc
pminsw
xor
movsl
mov
incb
ja
pop
jp
mov
fadds
int3
cmp
inc
push
pop
mov
push
das
nop
xchg
jge
mov
and
jl
cwtl
out
pop
cmp
push
mov
sarl
jb
and
frstor
test
arpl
or
in
int
jbe
lret
aam
dec
daa
insl
nop
cmp
cwtl
inc
dec
data16
daa
pop
cmpsl
daa
or
in
and
lods
mov
mov
pop
ljmp
push
mulb
lock
bound
mov
dec
mov
and
addb
sbb
mov
lret
xchg
out
adc
mov
and
sub
repz
and
out
fstp
dec
ja
pop
jo
insb
pusha
sub
bound
push
sub
xor
pop
in
fs
fbstp
adc
in
sub
mov
xchg
orb
jne
jae
mov
sub
inc
scas
and
dec
sub
outsb
imul
xor
cmp
ja
mov
fdivrs
scas
int
addr16
jne
lea
daa
lock
adc
adc
mull
idiv
push
cltd
xchg
xchg
test
in
addl
add
scas
rorl
movl
and
ds
lods
pop
test
shr
data16
rorl
test
cli
ss
cltd
int
sub
clc
dec
bound
out
insb
testb
dec
ja
cld
xlat
insl
jl
cmp
push
insl
rcrl
fbstp
rorb
lahf
insb
fwait
stc
xchg
int
ss
hlt
popf
loope
in
bound
movsl
jmp
outsl
es
mov
dec
fisubrl
pop
gs
mov
jmp
popf
mov
dec
push
cmp
sahf
and
pop
pop
jb
sub
mov
pop
es
jmp
aam
and
mov
push
adc
cmp
cwtl
inc
xor
jg
repz
mov
movsl
cwtl
sbb
outsb
sbb
add
pop
mov
cmp
push
push
jb
out
nop
inc
mov
int3
sub
pop
shl
out
sbb
mov
xor
imul
mov
or
xlat
cmpsl
stc
ret
int
adc
push
shlb
ret
push
jecxz
push
int
jbe
sarb
clc
cmp
iret
mov
adc
lods
xlat
pop
call
pop
or
inc
mov
pop
dec
push
fldenv
es
mov
dec
shrl
lahf
fistpll
outsb
mov
mov
je
mov
push
or
xchg
orb
ffree
aam
mov
sub
test
jo
mov
pop
dec
cwtl
std
stos
xchg
dec
in
hlt
inc
ljmp
mov
and
mov
xor
jmp
inc
clc
xor
xchg
push
out
mov
push
adc
clc
push
xchg
cmpsl
cltd
push
sub
jmp
add
out
flds
adc
test
in
mov
cmp
push
and
xlat
popa
add
lds
and
adc
push
mov
inc
in
push
outsl
sub
cmpsl
pop
xchg
and
xor
adc
rorl
in
sub
xlat
repz
pop
mov
jae
or
out
adc
cmp
arpl
adc
pop
pop
mov
and
inc
push
mov
push
decb
int
mov
dec
mov
ja,pt
imul
mov
mov
lret
fwait
scas
sub
mov
dec
divl
cmpb
insl
bound
ds
jl
or
fldl
out
jg
in
outsl
cld
jo
dec
mov
lret
or
mov
gs
out
and
es
aad
dec
repz
or
in
adc
pop
aam
fists
enter
aam
and
xor
lahf
mov
stc
push
cmc
add
sub
add
mov
inc
mov
add
inc
cmp
out
mov
cmpsb
jp
sbb
int3
cwtl
mov
das
je
jo
mov
dec
ja
loop
sub
mov
outsb
xor
mov
sbbb
adc
fcomip
and
loopne
mov
dec
cltd
jns
mov
sar
aad
movsb
mov
movsl
push
arpl
clc
push
xor
out
lods
xchg
lock
lahf
dec
shll
je
push
iret
mov
cmp
movsb
and
inc
ror
out
dec
sub
mov
popa
mov
add
and
adc
fcomi
pop
insb
sub
adc
es
inc
push
mov
adc
in
lds
test
or
test
dec
icebp
dec
xorl
dec
cltd
xor
xor
ret
addr16
xor
dec
pop
je
mov
in
jle
dec
outsb
test
mov
rclb
fistpl
jbe
inc
cmpsl
test
mov
dec
pushf
sbb
pop
cltd
and
arpl
inc
out
mov
mov
pop
xor
loop
leave
cld
divb
pushf
jo
add
xchg
into
call
ljmp
out
ja
dec
fldcw
xchg
add
mov
icebp
add
or
adc
outsl
ds
inc
shll
sub
scas
mov
pop
mov
push
lret
push
add
movsl
scas
lds
pop
pop
or
xor
fldl
sub
test
aad
and
sbb
dec
add
pusha
dec
jge
cmp
mov
gs
mov
ljmp
ror
dec
inc
add
mov
repnz
test
ljmp
mov
insl
in
stos
jae
inc
and
call
push
out
jle
add
dec
adc
sub
push
jg
sub
std
jne
cs
ss
dec
pop
and
clc
push
movl
dec
xor
sbb
or
std
and
lds
rcll
xor
es
incb
repnz
adc
lret
sbb
lea
sbb
popl
dec
out
adc
xor
sbb
hlt
pandn
mov
cmp
sbb
ret
push
mov
lcall
dec
dec
and
out
xor
mov
sub
cmp
or
mov
jno
xlat
scas
fs
sub
in
mov
test
xchg
dec
cwtl
repz
loop
or
sbb
into
pop
jbe
movsl
dec
test
loope
push
sbb
movsb
je
mov
fistpl
jns
adc
fstpt
lds
std
jb
xor
xchg
stc
push
int3
outsb
dec
jbe
sub
into
pop
rcrl
xor
xchg
out
lcall
sub
mov
inc
or
add
enter
inc
sub
push
and
sbb
jne
mov
adc
clc
cli
test
mov
lcall
dec
cmp
jl
cli
mov
cltd
cmp
add
and
data16
jmp
xchg
fistpl
dec
cmpsl
jg
stc
cmp
lds
ljmp
cmp
rcrb
mov
rclb
dec
adc
lcall
ret
mov
push
das
push
cmp
inc
mov
push
and
push
xchg
adc
inc
and
xchg
stos
dec
cmpb
push
in
in
stc
sbb
mov
push
mov
dec
xor
test
fwait
int3
cmp
xchg
push
xor
xchg
ret
out
mov
sbb
sbb
add
cld
push
pop
dec
mov
pop
int
and
or
cmp
mov
out
push
dec
add
ret
lods
push
adc
in
mov
mov
rep
fldl
movsl
loope
or
sub
mov
cmpsb
cli
and
jb
pop
inc
pop
mov
mov
mov
mov
ret
mov
cmp
bound
popa
loope
adc
call
sbb
pop
mov
scas
pop
xor
ret
or
mov
sbb
insl
mov
mov
out
sbb
stos
pop
lods
inc
and
fs
out
push
cs
or
mov
in
or
jb
adcb
xorl
push
sbb
aam
jne
pop
inc
ja
lret
iret
out
xor
or
or
push
outsb
cmp
loopne
add
ja
adc
adc
repz
or
cli
hlt
cltd
mov
icebp
mov
mov
dec
mov
lods
fwait
cmp
xchg
mov
sub
mov
sahf
push
stos
insb
jmp
push
ja
test
repnz
inc
xor
stos
mov
sub
call
test
sub
xchg
sbbb
jnp
bound
pop
jne
jmp
or
cli
push
mov
xor
aas
shr
mov
xchg
push
imul
out
or
xchg
loop
add
ret
mov
out
dec
movsb
push
int3
and
cwtl
add
aaa
aas
or
ret
out
imul
scas
mov
push
push
incb
sub
dec
punpckhdq
jne
mov
jmp
mov
dec
rcll
test
fists
mov
sbb
sub
inc
cwtl
stos
mov
and
or
lea
mov
sbb
push
xchg
aam
xchg
mov
out
inc
ficoml
pushf
xchg
mov
inc
repnz
imul
sbb
add
mov
fidivrs
inc
jne
xchg
and
push
cli
mov
xor
fs
addr16
xorb
sbb
add
scas
data16
sti
bound
ss
lods
cmpsb
js
test
call
ffreep
ret
bndstx
or
xor
and
fiadds
and
pop
adc
and
adc
xchg
adc
out
cmp
dec
lea
gs
xchg
mov
data16
sub
insl
jae
outsl
sub
int3
addl
cmc
in
jo
cli
pusha
enter
jmp
bound
pop
je
inc
addr16
inc
mov
inc
mov
pop
sbb
enter
scas
iret
sub
or
into
out
xchg
or
jge
andl
lahf
xchg
jmp
out
add
jg
fcomps
js
mov
jnp
push
jge
add
pop
mov
push
sbbb
jl
push
cmp
mov
fwait
mov
je
jl
bound
push
repz
jmp
adc
cmp
gs
mov
push
add
or
adc
pop
clc
shrb
stos
fbstp
orb
popa
in
cmp
sub
sbbl
and
mov
cmp
test
mov
push
mov
cmp
imul
js
pop
iret
lret
popf
std
out
stos
lret
pop
icebp
das
insl
inc
lcall
subl
jg
dec
in
and
loope
inc
arpl
pop
inc
shlb
sbb
xor
jno
or
fwait
or
sub
xchg
int3
lds
outsl
in
jmp
push
es
iret
cwtl
ss
cmp
les
lss
adc
adc
jae
je
dec
aaa
mov
dec
jnp
sub
jbe
inc
stos
dec
fs
jl
mov
adc
or
sub
lea
sbb
mov
push
cmpsl
and
lock
mov
sub
push
rolb
lods
sub
mov
movsl
mov
mov
jecxz
pop
arpl
and
movsl
push
imul
mov
cmp
ret
aaa
rcl
push
gs
fisubrl
pushw
out
lods
lahf
mov
push
push
lahf
dec
in
movsb
jbe
and
sbb
adc
cld
dec
and
or
cmpb
dec
lods
hlt
dec
add
adc
in
lret
xchg
jmp
out
enter
aam
dec
dec
cmp
icebp
jle
icebp
outsl
rcrl
sbb
mov
pop
aad
cmp
lock
movb
pusha
in
stos
iret
xor
mov
push
les
fwait
adc
test
pushf
inc
into
mov
std
ljmp
xor
mov
add
aad
sub
cwtl
lret
cltd
aaa
mov
or
dec
call
or
adc
pop
ja
enter
daa
and
inc
pushf
jae
insl
or
jne
mov
xchg
in
out
xor
sbb
lcall
push
xchg
xchg
cmpsl
fmul
mov
sbb
mov
sbb
mov
clc
aas
xchg
xchg
or
push
mov
and
xor
sbb
xor
es
cmpsb
adc
lds
clc
ljmp
ret
jmp
jl
pop
sbb
mov
inc
xorw
jb
subb
mov
movsb
adc
xor
add
pop
loop
lret
jmp
push
mov
pop
xor
das
aad
stos
movsl
jns
dec
sbb
and
dec
sti
js
pop
or
mov
outsl
sub
in
adc
mov
adc
push
data16
xor
jne
fcomp
std
jo
loopne
jecxz
mov
xor
mov
xor
sahf
sub
inc
cld
outsl
inc
jl
or
enter
das
jl
js
push
push
inc
rcl
shll
inc
jecxz
xor
imul
adc
xchg
mov
xor
ret
sbb
pop
xor
xchg
sbb
loopne
push
mov
and
rcr
cmp
adc
pop
in
pop
xchg
xor
addb
fistl
push
adc
or
icebp
fsubrs
sub
adc
mov
mov
mov
xchg
lock
cld
int
movsl
mov
mov
gs
hlt
mov
call
push
leave
stc
adc
jle
xchg
movsl
insl
popa
mov
out
pusha
cltd
and
mov
pop
int
ljmp
sub
ret
cmpb
mov
adc
ja
data16
adc
mov
nop
pusha
pop
mov
test
pop
test
fs
bound
xor
adc
mov
out
cmpsb
push
call
push
dec
lret
push
jo
jno
adc
popw
mov
jb
mov
scas
dec
fadds
push
pop
and
push
xchg
testb
outsl
cli
mov
and
stc
inc
lahf
and
sbb
cli
adc
or
jp
cmp
insl
lahf
add
das
push
cli
push
aaa
lock
adc
cmpl
xlat
inc
inc
idivl
fdivr
push
or
fldcw
sbb
fs
xchg
scas
mov
add
clc
dec
push
stc
mov
xor
sub
push
xor
xchg
sarl
push
pop
lods
sub
fcoml
loopne
js
aad
jo
push
loopne
loope
pmaxub
test
cmp
mov
dec
setae
xchg
mov
sbb
insb
fs
jno
in
push
cmp
pop
pop
mov
jmp
bnd
mov
lcall
dec
daa
ret
into
push
adc
add
setp
push
cmp
pop
xor
call
inc
test
mov
jne
nop
movsb
mov
or
dec
and
mov
test
jg
dec
mov
mov
mov
push
add
pop
dec
inc
fcom
pop
or
test
daa
and
jns
adc
shr
or
cltd
sbb
mull
les
bound
hlt
mov
dec
out
movsl
or
icebp
push
dec
mov
popa
lods
push
adc
and
pusha
push
sbb
mov
and
mov
ljmp
popa
and
mov
mov
cwtl
jne
pop
ret
pop
ficoms
mov
inc
sbb
aaa
sbb
jae
in
push
mov
js
jge
fadd
mov
inc
push
push
xchg
mov
mov
adc
std
iret
ja
shrb
subl
outsl
pop
icebp
inc
popa
addl
push
sahf
mov
lcall
in
adc
out
push
mov
aaa
in
out
xlat
jecxz
je
fdiv
icebp
fwait
loope
inc
jnp
or
xchg
xchg
and
dec
inc
sbb
popa
or
and
inc
je
sbb
fucomip
mov
addr16
sub
and
push
gs
push
mov
movsl
or
push
popa
insl
inc
out
xor
imul
or
dec
mov
test
lds
mov
jo
dec
es
cmpb
mov
xchg
mov
pop
ss
js
push
mov
in
xchg
cmp
pusha
mov
adcl
leave
dec
fstl
hlt
shr
mov
mov
into
call
sbb
push
push
mov
xchg
cmp
aaa
sbb
push
int3
aas
pushl
popf
inc
and
lret
jno
xor
xchg
rorl
push
push
sub
loopne
xchg
sub
outsl
xchg
push
mov
je
shr
stos
cwtl
sbb
cmp
cmpsb
lods
push
sub
cld
mov
inc
mov
sbb
loopne
in
ficompl
loopne
xlat
or
dec
imul
aam
lcall
mov
outsb
push
mov
push
cmp
sahf
push
into
mov
enter
aam
xor
pop
adc
adc
jmp
out
loop
stos
rcrb
mov
clc
repnz
xor
jge
fwait
mov
xor
jge
test
jnp
mov
xchg
rorl
mov
jbe
movsl
in
xor
shrl
adc
jle
cmp
jge
xor
ds
test
pop
xlat
jae
ljmp
dec
insl
mov
cmp
jmp
adc
mov
add
mov
incb
insb
push
loopne
xor
das
mov
insl
adc
fimull
subb
jle
les
leave
xor
cltd
cmpsl
out
xchg
xchg
adc
lock
mov
sub
jmp
rorl
dec
mov
enter
cmp
push
dec
arpl
shlb
xchg
adc
mov
mov
aaa
inc
les
out
int
lahf
mov
jns
mov
call
mov
xchg
cmp
xchg
mov
xchg
aad
aam
mov
or
mov
icebp
loopne
xchg
in
fidivs
mov
pop
lcall
outsb
jmp
push
pop
push
mov
sbb
and
push
push
call
adc
sbb
xchg
add
xor
sbb
cmpsl
push
lock
ja
test
repnz
aam
pop
insl
and
test
dec
sub
xchg
add
fnsave
movsb
push
gs
mov
sub
jmp
mov
repnz
popa
enter
cmpsb
das
pusha
sbb
mov
cld
push
mov
ss
movsb
xchg
out
pop
addr16
lods
mov
cmp
sbb
imul
das
push
lea
sub
negl
clc
les
repnz
dec
inc
notl
pop
pop
in
xchg
mov
outsb
pop
ljmp
out
mov
ret
xchg
js
in
popa
or
outsl
cmp
sbb
adc
ret
lea
adc
push
jne
je
sbb
and
es
das
insb
repnz
mov
cltd
push
enter
lret
mov
sbbb
mov
dec
xor
test
out
in
popf
jge
rorb
repz
sbb
jbe
xchg
jmp
rcr
push
sbb
cmp
call
sub
loope
jl
mov
lods
jmp
lret
push
xchg
aas
mov
jp
push
mov
call
xchg
sbb
dec
call
repz
and
cltd
or
filds
movsb
sub
mov
cmp
or
mov
imul
dec
mov
mov
scas
in
mov
sub
and
out
mov
hlt
or
nop
scas
xchg
imul
mov
cmpsb
dec
add
push
dec
sub
test
xor
call
push
imul
dec
rclb
out
cmpsb
adc
sub
add
out
jbe
push
fnstenv
adc
pop
cltd
mov
imul
and
mov
and
nop
mov
jle
pushf
lret
in
mov
dec
cwtl
xchg
jge
rcll
jns,pn
int3
jb
add
and
insl
mov
lahf
sub
insb
add
daa
imul
scas
inc
dec
push
clc
mov
fs
movsl
mov
cmc
lock
int3
push
mov
jge
sti
incl
shl
fsubs
xchg
aam
adc
push
add
or
movsl
cli
adc
adcb
in
mov
mov
jns
jbe
js
int3
std
add
imul
mov
jno
dec
push
push
cli
movsl
fwait
int3
mov
inc
xchg
rcrl
sbb
out
xchg
dec
or
loopne
jecxz
sub
cmp
js
dec
jecxz
cmp
ljmp
es
push
std
add
divb
push
mov
jl
mov
or
adc
mov
mov
xchg
and
data16
add
jne
fsubl
sbb
je
gs
xchg
inc
jno
dec
or
ja
mov
int3
out
sub
push
in
outsb
mov
xor
dec
mov
xchg
add
fcomps
mov
outsl
fstpt
push
ret
xor
enter
xchg
mov
iret
pop
inc
movsl
add
inc
movsb
mov
lahf
xchg
mov
shlb
pop
test
rolb
pop
xchg
mov
or
ljmp
mov
adc
mov
inc
dec
daa
mov
cmp
fdivr
jnp
scas
mov
in
push
adc
xchg
fisubrs
jmp
or
lahf
mov
push
out
lock
rolb
push
pop
pop
lcall
shl
jbe
dec
sti
in
bound
push
sub
adc
cmp
inc
fnstsw
jae
xchg
movsb
pop
jmp
je
xchg
xor
or
add
jae
pop
in
aaa
push
pop
push
push
aas
inc
mov
repnz
jg
fnstcw
lret
mov
sti
rcrl
mov
mov
pop
std
sbb
nop
insb
bound
push
out
arpl
jmp
mov
mov
cmpsl
dec
jnp
dec
xor
sbb
movsb
jle
inc
push
mov
js
pop
or
xchg
add
fdivrs
gs
mov
arpl
dec
dec
jecxz
mov
in
inc
sub
add
cwtl
jl
popf
jmp
mov
push
push
xor
aas
pop
js
jno
fmull
repz
jno
push
xchg
rolb
jp
and
pop
out
je
fisubl
adc
and
adc
fcoml
inc
lods
adc
push
gs
fisubs
jmp
lahf
loop
jg
sbb
mov
adc
fsubrl
cmpsb
inc
cmc
inc
mov
pop
subl
int3
dec
push
sti
jge
pop
testb
out
add
mov
leave
fcmovnu
cltd
jbe
sub
sahf
and
sbb
sarb
xor
in
aas
std
add
inc
push
pop
cmc
mov
cld
in
shlb
fs
fdiv
fists
sub
pop
cmp
mov
imul
pushf
cmp
lcall
mov
mov
enter
adc
mov
mov
push
or
push
daa
call
mov
enter
incl
movsb
repnz
cmc
clc
or
cwtl
push
xchg
je
lret
repz
pop
scas
in
jecxz
dec
pop
xchg
xor
nop
daa
aam
push
and
and
push
push
xchg
adc
xor
mov
cmp
js
out
jmp
aad
clc
stc
mov
stos
test
ljmp
mov
pop
or
and
mov
ret
pop
pop
push
mov
movsl
inc
rolb
mov
sub
dec
adc
xchg
mov
xchg
cmpsb
inc
mov
into
sbb
sti
test
int3
xchg
mov
xor
mov
ds
outsb
popa
into
sub
mov
popf
jo
repz
mov
sub
imulb
jl
ret
mov
clc
orb
and
cmpsb
mov
je
dec
ret
jmp
sub
lea
push
adc
jecxz
add
add
add
sbb
xchg
cs
or
or
cmp
and
and
mov
cmp
aaa
fdivrs
dec
imul
bound
mov
dec
aam
push
mov
testl
shrl
mov
mov
inc
jle
xchg
push
inc
mov
xchg
and
imul
mov
mov
fildll
xlat
add
dec
cltd
inc
bound
loope
mov
sbb
imul
mov
sarl
xchg
sub
add
jno
out
xor
fldenv
lods
mov
mov
scas
mov
aam
sub
test
icebp
nop
and
jnp
sarl
push
inc
outsb
fcompl
pusha
outsb
loop
sbb
std
push
xchg
dec
or
xor
xor
cmp
push
btr
push
popl
adc
xchg
std
xor
cli
iret
jmp
outsb
sbbb
sbb
mov
add
mov
jge
mov
pop
sbb
pop
ret
mov
xchg
popa
mov
cwtl
sbb
pop
mov
rorl
fucomip
lods
inc
sbb
sub
pop
into
mov
add
aas
cmpsb
data16
xchg
xchg
pop
sub
pusha
or
test
ds
cs
or
pop
addps
mov
insb
adc
dec
incb
sbb
lods
sbb
mov
fsubrs
and
repnz
fmuls
inc
sbbb
ljmp
pop
and
mov
xchg
pop
pop
push
movsb
cmp
push
sti
dec
push
xchg
sahf
das
mov
iret
into
mov
add
hlt
loop
idiv
inc
push
jae
push
xchg
das
pop
lcall
lcall
mov
push
or
mov
lds
inc
sub
ja
mov
and
testl
adc
das
jo
jg
sub
xlat
addr16
jae
mov
jb
add
adc
js
icebp
sahf
push
mov
xchg
jl
or
inc
xor
adcb
nop
mov
cltd
cli
push
addr16
imul
aad
and
mov
cmp
lret
xchg
cmpsb
push
push
pop
in
mov
xchg
mov
sub
shll
mov
fdivrl
or
jge
adc
aaa
je
fwait
out
jb
push
mov
jno
fisttpl
je
add
hlt
cwtl
jno
pop
xchg
cmp
dec
adc
icebp
ficomps
leave
mov
dec
lds
lahf
or
sbb
add
or
call
mov
std
pop
out
pop
cmp
scas
lea
jb
jae
movsl
jecxz
sub
or
xor
ljmp
outsb
dec
imul
aas
or
add
jb
lock
cwtl
out
sti
xchg
mov
imulb
les
aas
pusha
popa
pushf
mov
sbb
lcall
setbe
mov
test
push
cltd
mov
out
or
jle
lcall
aam
jl
lcall
cmp
in
adc
roll
sub
pop
adc
into
sub
sbb
sbb
in
aaa
pushf
lods
loope
fs
mov
divb
and
or
das
jb
cmp
out
adc
pusha
pop
shll
cmp
ds
mov
loopne
sbbb
lea
sti
xchg
push
test
les
xor
jecxz
scas
and
js
pop
stc
adc
mov
sbb
repz
jae
fdivrs
gs
sti
jmp
jle
scas
pusha
insb
xor
pop
das
pop
outsl
ret
or
mov
sbb
add
cmp
in
imul
in
aaa
clc
sub
aam
je
mov
int3
lcall
cli
push
add
dec
cwtl
sbb
gs
lods
ja
xor
sub
movb
add
arpl
mov
out
cmp
cmp
leave
pop
es
add
out
mov
bound
add
xchg
jp
pop
out
xchg
xchg
loope
out
inc
icebp
inc
dec
mov
stos
test
mov
xor
mov
sub
dec
stc
push
xchg
js
push
mov
nop
cmpsl
ss
push
mov
and
test
dec
xchg
add
inc
xor
jp
sbb
cwtl
inc
repz
and
lcall
add
sub
out
push
cmp
cli
and
call
push
in
mov
inc
fists
add
sbb
repnz
mov
add
lock
testb
popf
sub
repz
push
pop
xor
out
mov
mov
add
xor
out
and
jae
xchg
pop
mov
xchg
into
inc
adc
xchg
pop
pop
js
test
rcl
mov
pop
into
pop
jle
out
mov
pop
push
mov
push
cmpsb
mov
loopne
mov
xor
mov
xor
inc
pop
ds
shlb
fstpl
sub
lock
push
femms
dec
aaa
aam
cmpb
adc
xchg
xchg
mov
sti
xor
loope
xor
push
pop
inc
jb
dec
aas
cltd
push
lods
sbb
fstps
js
cs
lods
int3
cmp
xor
stc
fcmovnb
out
inc
sbb
adc
sbb
repz
fst
xchg
pop
les
xchg
lds
out
and
push
or
or
and
shrb
sub
sub
mov
sbb
xor
arpl
ficompl
mov
dec
imul
test
inc
ret
les
cli
and
inc
cmpsl
aad
or
adc
mov
jbe
push
adc
mov
pop
and
out
insb
enter
test
in
insb
mov
cld
ss
aas
dec
adc
test
add
adc
pushf
popf
jge
mov
ja
pushf
fistl
inc
ja
pusha
add
scas
cld
push
push
jb
cmp
icebp
or
test
in
sub
adc
mov
pop
repz
das
mov
lods
sub
scas
xchg
mov
pop
mov
or
inc
cmc
and
popa
push
shrb
in
stos
xlat
mov
hlt
xchg
jge
mov
enter
add
jl
and
test
mov
icebp
jae
cli
jbe
into
lods
push
push
mov
pop
xor
daa
pusha
sub
pop
push
loope
aad
popa
add
inc
adc
adc
popf
pop
ret
jbe
push
fcomps
push
mov
out
pop
lea
not
ficoms
pop
mov
out
add
xlat
push
popf
lds
push
add
cli
dec
cmc
aaa
sub
dec
push
xchg
lret
rcrl
movsb
stc
pop
and
mov
dec
or
into
sub
in
les
je
loopne
arpl
test
inc
lods
sub
sbb
add
lahf
in
mov
outsl
pop
mov
and
push
into
ljmp
test
divb
mov
add
xor
and
dec
in
adc
mov
push
ret
push
insb
imul
xor
add
fwait
mov
sahf
lret
jbe
ret
test
into
call
loope
scas
and
dec
stc
xlat
jno
xchg
mov
daa
call
mov
xchg
cli
mov
gs
repnz
and
ret
cld
jle
inc
out
daa
add
cmpsb
aaa
mov
loope
add
test
mov
jg
dec
pop
sbb
lds
mov
jo
add
inc
stos
sbb
push
add
into
fisubl
xorb
insb
cli
sub
push
imul
popl
pop
in
push
and
cs
cmpsb
fdiv
loop
and
sbbl
and
movsl
stc
insl
outsl
sbb
cmp
push
sti
xchg
or
xor
mov
sub
adc
test
cmp
stos
or
aam
push
add
in
sub
popf
jecxz
pop
test
mov
jle
call
stos
into
push
ss
add
jge
test
cli
in
mov
or
sbb
xchg
ret
mov
pop
xor
aam
stos
cmp
push
or
cmp
xchg
dec
bound
add
add
pushf
push
std
repnz
add
sbb
rcll
xchg
add
dec
cld
jp
cmpsb
cmpps
std
out
cwtl
mov
out
mov
ds
jle
dec
or
imul
mov
push
test
jbe
test
leave
push
xchg
jecxz
ror
xchg
adc
xchg
pop
mov
scas
push
sbb
adc
jg
test
cmp
mov
mov
dec
arpl
pop
jle
sbb
adc
lcall
xchg
mov
iret
mov
and
lret
pop
enter
inc
dec
jae
push
push
das
dec
jnp
fwait
adc
fcomip
outsb
outsb
lret
jb
sbb
aam
or
sbb
imul
lock
aas
daa
scas
jns
xor
arpl
inc
out
pop
jae
mov
pop
icebp
or
dec
mov
xor
into
test
sub
pop
scas
sbb
inc
xchg
adc
fistpll
mov
push
lahf
arpl
inc
in
inc
push
sbb
stos
andb
loop
int3
fisubrs
adc
hlt
je
int3
dec
push
out
or
cli
jl
int
push
divb
mov
loop
add
jge
inc
cmp
js
push
movsl
mov
fcompl
inc
outsb
ret
push
cmp
mov
xchg
and
pop
sub
stos
std
pop
and
mov
out
xchg
jg
lods
xchg
mov
cmp
lods
mov
aad
ds
xchg
mov
aam
pop
xchg
test
cwtl
push
xchg
pushf
and
mov
out
loopne
mov
jecxz
aad
dec
cmpb
nop
rorb
xchg
imul
mov
and
es
xlat
aaa
arpl
add
test
push
and
roll
adc
fsts
aam
mov
inc
mov
jp
or
jl
inc
push
adc
test
imul
std
mov
jbe
div
out
xorl
push
cmp
dec
sahf
mov
iret
scas
inc
insb
cwtl
fcomps
shll
lock
adc
push
jge
add
insb
push
insl
mov
fstpt
push
ror
add
jp
xchg
add
xlat
push
outsl
out
adc
or
cwtl
or
fdivrl
push
pushf
inc
ficoms
jmp
sub
daa
rcrb
lret
or
inc
adc
sub
and
xchg
fdiv
cmpsb
cld
mov
xchg
push
sar
ljmp
into
xor
cmp
lret
fs
or
xor
je
cs
pop
ja
popa
icebp
jae
popa
jp
dec
sub
dec
push
lahf
test
and
jmp
mov
xchg
es
dec
jae
sub
test
push
ja
cmp
movsb
push
lret
aaa
mov
pop
dec
xchg
dec
imul
xor
popf
jecxz
imul
mov
test
in
push
aam
mov
mov
adc
clc
addb
xor
movsl
scas
fimull
sub
pop
pop
std
test
mov
sti
jb
insl
dec
cmp
out
aas
xlat
das
fisubs
enter
lret
xlat
inc
pusha
jp
negb
sub
cmp
lods
inc
mov
inc
rclb
decl
and
cwtl
dec
lcall
jmp
dec
sub
jg
in
iret
cmc
pusha
aaa
sahf
fwait
mov
inc
call
jbe
jns
jno
sbb
inc
notb
js
jno
cmpb
dec
push
arpl
cld
ss
jmp
dec
add
fwait
xchg
test
pop
mov
out
enter
push
aas
addr16
les
mov
dec
cltd
dec
add
xchg
stc
xchg
and
cmpsb
pop
cmc
mov
cmp
insl
cmovno
cmp
inc
outsl
add
mov
ret
push
fstl
add
stc
mov
jl
jl
js
dec
push
xchg
inc
lods
std
mov
xchg
int
jne
adcb
mov
inc
ds
das
mov
sbb
and
mov
sar
mov
inc
sub
jg
cwtl
cs
int
or
inc
iret
xchg
mov
add
mov
xchg
outsb
xor
mov
fs
dec
add
push
push
sbb
lods
cmc
mov
clc
pop
or
int3
and
sbb
push
ss
int3
sarb
sbb
and
cmpsl
mov
push
pop
cmp
or
pushf
cmp
pop
outsl
adc
in
int
out
ret
in
lret
gs
dec
jae
adc
test
sub
popa
xlat
mov
into
push
cmp
and
dec
mov
and
stos
xchg
and
push
ret
insl
sub
loopne
enter
dec
push
outsb
sahf
daa
jmp
mov
pusha
imul
xor
nop
aaa
adc
xchg
cmp
mov
ret
inc
cmp
cmc
icebp
sub
xor
inc
jecxz
cld
add
aaa
pop
je
arpl
leave
mov
dec
imul
mull
shrl
add
fsubrs
adcl
pop
pop
hlt
cmp
fucom
adc
adcl
cli
sbb
ds
mov
mov
xchg
inc
mul
mov
sbb
pop
test
arpl
mov
xor
mov
notl
adc
and
push
lret
out
xor
mov
push
aad
sub
jmp
mov
mov
iret
fmul
inc
outsl
shlb
cmp
aaa
mov
fcomip
mov
fdivrl
mov
sub
and
or
pop
adc
jg
adcl
push
pop
dec
sbb
mov
add
sub
inc
mov
dec
jl
or
mov
fs
xchg
dec
push
out
or
pop
out
loop
int3
jecxz
cmp
xor
test
outsb
xor
test
fstp
cmp
test
push
loopne
or
xchg
dec
lret
adc
sbbb
and
gs
stc
stc
cmpl
xchg
loop
dec
xchg
push
cli
add
insl
or
lret
cmpsb
data16
mov
cwtl
fiadds
push
mov
imul
test
ret
push
mov
int
cwtl
or
jle
in
dec
fld
pop
jns
das
xor
cmp
std
pop
push
jne
test
push
cltd
add
and
aam
xor
jne
xchg
mov
and
dec
or
dec
add
push
ljmp
lcall
mov
pushf
or
xchg
iret
jmp
jae
imul
frstor
in
mov
mov
shrl
add
andb
add
shlb
mov
mov
in
mov
icebp
dec
add
mov
rorl
out
imul
sub
pushf
pop
pop
imul
ljmp
pop
inc
je
sub
aad
cltd
lcall
mov
or
cli
mov
imul
xchg
sbb
cltd
lods
push
clc
scas
xchg
ror
push
in
jbe
inc
popa
mov
ljmp
addb
in
mov
daa
dec
shll
jae
insl
mov
jb
inc
pusha
rorb
fcompl
add
arpl
mov
or
push
jb
fdivl
pop
add
negl
lea
push
ljmp
aam
sahf
xor
pusha
sub
or
aad
mov
add
jnp
movsl
jl
repz
fsts
movsb
std
dec
nop
mov
xchg
repnz
mov
mov
or
ja
out
leave
imul
mov
mov
test
adc
xchg
nop
and
or
sub
fldcw
std
insl
popa
adc
jne
xchg
out
fcmovu
mov
xchg
cltd
xchg
mov
fnop
ja
mov
or
lret
rolb
mov
and
mov
faddl
cmpsb
and
jmp
mov
movsl
lcall
stc
shrb
mov
loope
loop
das
inc
xor
sub
cmp
in
push
inc
adc
adc
lock
and
and
stc
cmp
push
mov
cmp
test
and
xchg
and
xor
int
push
repz
test
scas
sarl
cmp
pop
sbb
pop
xor
rcr
and
lds
clc
hlt
xchg
sbbb
and
in
in
jmp
iret
out
cltd
leave
call
and
adc
xchg
out
or
in
jbe
shll
mov
xlat
add
outsl
jne
add
lock
stc
std
cmp
imul
pop
pop
pop
cmp
xchg
or
add
xor
and
pop
inc
lock
dec
dec
dec
adc
stc
sbb
xchg
subb
xchg
xorb
loopne
jo
rol
fsubrs
mov
arpl
mov
inc
loope
jl
es
addr16
dec
sub
inc
mov
js
sbb
push
xor
xor
mov
jp
xor
cltd
jnp
mov
mov
aas
out
aas
lret
push
mov
push
cmp
jmp
push
movsb
cmp
lahf
ja
pop
insb
test
jecxz
dec
jp
sbb
push
repnz
cli
out
pop
xor
jecxz
adc
inc
movsb
push
xor
mov
xchg
rol
loopne
call
das
xor
mov
mov
adc
and
push
fsubp
aad
sahf
jp
adc
mov
cwtl
pusha
jmp
jmp
cli
mov
xlat
fnstenv
cmp
mov
dec
or
cwtl
fdiv
nop
fsubr
mov
sbb
aas
popf
lret
imul
data16
insb
call
insb
loop
cli
stos
inc
or
outsb
cmc
ret
lods
inc
cmp
pop
int3
fwait
ss
imul
mov
cmpsl
arpl
ja
ja
xchg
sbb
sbb
out
mov
xchg
outsb
scas
push
sbbl
test
sub
jnp
les
fs
inc
mov
cmp
xlat
jmp
push
lcall
clc
mov
pop
mov
push
adc
das
gs
repz
xor
leave
mov
sahf
inc
inc
xchg
icebp
or
mov
hlt
and
mov
push
lcall
fs
loope
or
aad
out
cmp
into
fld1
and
adc
aad
mov
mov
jecxz
mov
and
mov
mov
mov
inc
aas
andb
cmp
pushf
xor
nop
bound
cmp
icebp
mov
dec
cmpsl
addr16
jg
out
add
sahf
sub
insb
popa
add
das
xchg
xchg
mov
mov
stos
jp
shrl
jp
js
das
subl
popf
pop
pop
popa
sbb
or
lcall
int3
mov
sub
mov
cmp
aam
fiadds
movswl
sahf
adc
mov
sub
sub
mov
pop
test
pop
mov
hlt
jl
cmp
xor
shlb
sub
leave
xor
pop
loop
test
popf
dec
clc
outsl
int3
mov
repz
and
inc
lret
inc
dec
jmp
loop
std
sbb
sub
push
mov
jo
add
jecxz
sti
sub
jno
pop
cmpsb
fdivr
pop
mov
ret
insb
rcll
enter
jnp
push
push
inc
push
mov
jle
pop
cltd
jno
sbb
in
mov
jo
cmc
shl
lret
pop
movsb
pop
data16
inc
rcll
testb
jge
and
jno
cli
shlb
jns
xchg
adc
dec
adc
clc
cmp
hlt
push
jge
xlat
dec
pushl
int3
push
mov
movsl
mov
sahf
cmp
xorb
dec
mov
mov
mov
sbb
iret
mov
roll
cmp
xchg
test
movsl
stos
out
sti
loopne
shl
jae
test
lock
inc
add
cld
sub
cli
or
test
cmpsb
int3
and
fdivr
adc
pop
adc
xor
or
fdivrs
aam
aad
mov
dec
popf
int
push
aam
std
jg
ret
sahf
je
ret
fistl
push
fwait
push
and
or
dec
mov
lock
cmc
push
xor
mov
in
out
lret
dec
nop
hlt
mov
mov
gs
mov
sbb
test
leave
jge
lret
leave
mov
inc
sbb
js
inc
cmp
dec
scas
mov
adc
inc
hlt
inc
add
mov
pop
daa
push
adc
inc
sbb
mov
gs
cmpl
sbb
jnp
loop
mov
sub
jge
add
rcr
pop
push
test
xor
or
sbbl
cltd
pop
dec
stos
xor
jae
xor
sub
push
mov
or
faddl
ss
out
mov
out
mov
lods
js
jns
xchg
ret
loopne
add
inc
orl
dec
popa
lods
arpl
div
sti
xor
pushf
aam
cmp
pop
dec
push
mov
jb
imulb
movups
inc
call
adc
fistpll
adc
sub
sahf
int
mov
fwait
into
cltd
ffreep
dec
and
out
adc
or
xor
inc
lea
cmc
mov
outsl
mov
inc
aam
inc
les
gs
sub
mov
daa
push
mov
sti
lds
mov
jl
lds
les
add
das
or
or
lods
push
pop
fdivrs
push
and
mov
ljmp
out
jmp
mov
and
inc
pop
js
aas
inc
mov
fiadds
roll
or
faddp
insb
ljmp
pop
leave
loopne
das
ja
or
stos
xor
xor
into
add
cli
mov
popf
in
jg
jg
scas
cmp
adc
xor
xchg
dec
mov
mov
lret
or
cld
sbb
fcom
xor
pop
adc
pop
and
jle
subb
mov
ljmp
xchg
xchg
lret
dec
das
das
inc
add
xor
mov
repz
xor
in
jp
sbbb
or
cmp
jmp
sti
jbe
pop
jmp
mov
adc
push
cmpsb
jg
rcr
mov
aas
push
or
les
pop
add
in
xor
xchg
lods
js
mov
es
mov
push
push
lar
stos
mov
data16
jne
push
lcall
push
popa
mov
lods
jne
inc
in
mov
adc
jecxz
or
pop
test
repz
cmp
scas
cmc
mov
cmpsb
or
sbb
insb
and
xchg
xor
stos
aam
dec
pop
push
iret
jbe
clc
pop
outsl
cmpsb
adc
scas
lods
shrl
jg
and
lcall
push
test
cmp
stos
lods
or
mov
mov
add
rclb
repz
shlb
js
jl
mov
mov
push
jp
int3
xchg
xor
pop
std
das
rclb
push
wbinvd
fildl
lcall
dec
jg
out
test
jle,pn
mov
popf
mov
push
ret
cld
lret
rcll
or
cmp
xchg
dec
pusha
mov
in
pop
fldenv
inc
fistl
mov
pushf
adc
mov
jbe
mov
add
add
mov
mov
or
sbb
dec
mov
sbb
mov
test
and
push
mov
inc
sub
fdivrs
mov
mov
mov
popf
in
mov
lret
cmp
xchg
les
xchg
fidivl
aam
pushl
out
sbb
sbb
fisubrl
or
mov
imul
push
xor
sub
push
mov
std
sbb
pop
sub
repz
and
aaa
js
cmpsl
nop
mov
push
mov
mov
aad
mov
sbb
push
pop
push
movsl
inc
mov
mov
loope
sbb
sahf
push
sub
adc
inc
popf
cmp
xchg
ret
push
sub
jecxz
mov
ss
fwait
in
sar
iret
push
dec
or
enter
jbe
test
cli
sbb
jp
adc
pop
and
outsl
inc
xchg
jo
leave
push
or
cltd
loopne
shll
jo
das
mov
push
and
jmp
aaa
lcall
sahf
push
fwait
out
jg
loopne
cmpsb
mov
sub
cmp
in
or
clc
imul
cmp
push
mov
mov
xchg
inc
push
in
idivl
or
pushf
sbb
add
rcrl
ficomps
testl
push
dec
lock
jb
xor
sahf
pop
pop
in
mov
cmp
testl
push
xor
bound
clc
pop
adc
rol
cmp
int
int
fwait
mov
ja
fnstenv
mov
mov
testl
lret
pop
repnz
xor
cli
push
sar
mov
shrl
dec
iret
and
mov
shlb
cmp
push
leave
gs
mov
xlat
push
ja
and
dec
adc
mov
push
sbb
fucomi
lret
in
stc
mov
xchg
or
jecxz
push
adc
cs
test
jg
iret
jmp
cs
fcmovu
add
and
repz
into
imul
mov
addr16
or
mov
imul
cmpsb
stos
mov
pop
lods
data16
js
mov
pop
and
cmpsl
mov
lcall
pop
fwait
ret
imul
jb
lods
or
dec
sub
cltd
push
mov
mov
sbb
pushf
loope
and
jns
adc
in
cmc
jle
gs
fsincos
ds
inc
nop
jo
inc
out
sar
ja
andb
cmp
imul
xchg
adc
xor
and
pop
movl
mov
fnstenv
and
push
outsl
adc
adcb
out
iret
ficomps
pop
std
jne
or
fwait
sbb
shll
jge
xchg
scas
lret
pushf
ss
jp
test
inc
mov
push
pop
fbld
push
inc
das
sub
add
fildl
lret
fsubrs
push
dec
aas
loope
mov
dec
add
cmp
xor
pushf
inc
push
and
and
fsts
push
rcrl
dec
fadd
jmp
jle
dec
push
lea
dec
and
jns
and
sub
adc
in
xchg
pop
push
daa
lret
cmpsb
jge
dec
in
mov
and
push
or
sbb
xchg
pop
fbstp
dec
xchg
std
push
mov
or
test
in
push
push
test
mov
mov
sub
insl
imul
lret
shl
outsl
rcrl
nop
sti
xchg
pop
sbbl
mov
ds
cmp
pop
ss
stos
push
or
sti
in
adc
outsl
xor
xchg
push
adc
inc
mov
pop
add
ret
hlt
aad
je
jmp
and
cmp
jl
jecxz
dec
adc
call
xchg
mov
hlt
push
jno
lret
fstps
push
lcall
dec
popa
mov
jp
inc
sbb
test
divl
xor
adc
cwtl
shlb
mov
adc
idiv
fwait
pop
shr
lahf
sub
stos
mov
iret
pop
cmp
dec
mov
enter
fs
leave
xor
fisttpll
sahf
shr
add
adc
pop
orl
xchg
add
cld
push
xchg
in
push
add
cmp
lret
hlt
in
pop
adc
das
std
ret
or
ljmp
int
xor
ret
imulb
inc
scas
dec
mov
daa
fdivrl
or
dec
js
aad
icebp
pusha
push
mov
push
push
sub
mov
and
pusha
pushf
mov
hlt
sbbl
adc
outsb
stos
adc
xchg
cmp
fdivl
arpl
aad
lret
in
add
sub
fwait
pop
js
sub
pop
jge
out
mov
pop
testl
mov
dec
adc
jno
mov
cs
test
pop
ja
jge
fbld
imul
dec
out
pop
sbb
cmp
scas
dec
push
or
in
leave
call
jbe
ret
hlt
push
out
mov
scas
jp
xchg
or
add
cmc
or
push
inc
lock
push
repnz
callw
dec
or
sub
cli
jno
push
repnz
jo
mov
ret
dec
xchg
mov
xor
dec
adc
xchg
xchg
test
jns
aaa
and
adc
cmp
pop
aad
sbb
push
cmpsl
in
stc
dec
out
pop
cmp
lods
push
pop
pop
je,pt
adc
or
pop
je
cmp
push
stos
xor
inc
inc
inc
dec
xchg
lcall
cld
dec
xchg
xchg
sub
outsl
inc
imul
xor
mov
add
cmp
dec
xchg
dec
imul
xor
repz
fistpll
repnz
cmpsb
repz
fiaddl
repnz
lret
pop
xchg
gs
inc
pop
jge
jp
out
dec
jmp
push
xchg
andl
stos
mov
pop
xchg
or
and
pop
jb
mov
adc
adc
leave
pushf
pushf
xchg
out
out
add
fnstenv
cld
jmp
jbe
rorb
nop
adc
inc
push
test
out
add
loop
mov
ss
inc
dec
jbe
mov
loopne
dec
syscall
lret
scas
mov
shlb
clc
cli
push
mov
and
sbb
ds
xor
jmp
xchg
aad
jbe
dec
mov
add
fistl
jmp
sarl
scas
shlb
mov
fimull
arpl
int3
sbb
and
cmpsb
int3
aad
sub
inc
or
push
adc
cmpsl
mov
add
ror
or
out
iret
sub
jmp
push
arpl
cltd
adc
sub
pop
adc
push
rcrb
xchg
push
das
add
add
cmp
pop
sahf
push
icebp
aam
cmp
rcl
inc
das
and
in
push
nop
sub
bound
pop
imul
test
pop
into
lds
outsb
out
push
cli
insl
lret
es
xor
imul
jecxz
adc
in
push
adc
cmpsl
sbb
cs
sbb
call
es
dec
sbb
stc
das
pop
xor
dec
jp
test
out
xor
mov
cmp
scas
pop
lods
aas
jbe
dec
mov
fldcw
enter
sub
adc
and
push
stos
dec
sbb
push
cltd
ljmp
mov
js
jge
mov
vmovhpd
outsl
aad
pop
hlt
xor
mov
cld
jb
out
inc
mov
inc
mov
int3
and
movsb
mov
out
xchg
mov
push
cmp
cmp
mov
inc
mov
inc
jne
jmp
rorl
and
stos
int
loop
or
scas
dec
mov
or
stc
out
daa
addl
mov
push
adc
cld
sbb
jge
outsl
cwtl
jle
imul
lcall
addb
int
xchg
fcompl
add
into
clc
cwtl
dec
push
dec
clc
inc
movsb
aaa
ret
icebp
aas
aam
subl
dec
jle
dec
or
xchg
xor
nop
sub
dec
sar
insl
in
addl
xchg
add
fidivrl
pop
lcall
daa
outsb
cmpsl
sub
inc
rcr
insb
lods
lock
stos
adcb
jbe
lods
testl
inc
loopne
xchg
cmpl
fstps
ret
mov
sub
adc
fucomp
push
inc
push
nop
aas
or
pop
jae
scas
js
or
lea
mov
jg
fisttpll
cmp
out
or
mov
insl
xor
xlat
mov
pop
pop
push
cli
adc
inc
xlat
test
lea
or
mov
inc
xchg
lret
loope
mov
add
pop
into
or
push
out
add
mov
call
sbb
sbb
push
mov
mov
mov
inc
dec
lret
cmpsb
or
sbb
push
pop
pusha
fwait
cmp
outsl
mov
push
inc
movsl
mov
jb
mov
in
sub
loopne
mov
xchg
int
push
jae
jae
and
repnz
cmpsb
cs
dec
xchg
xchg
adc
lods
pusha
jecxz
cmc
and
stos
cmpsl
sahf
subl
call
in
int3
lods
mov
inc
pop
repz
ficoms
ret
arpl
jno
arpl
push
mulb
mov
cmc
mov
dec
cwtl
fsts
xchg
rcl
out
mov
repnz
inc
lcall
ss
repnz
sarl
scas
leave
fimull
shll
test
loop
pop
push
sub
aaa
cwtl
mov
or
out
mov
sti
dec
sbb
roll
test
inc
stos
cmc
push
push
mov
fstl
movsb
popf
movsl
out
dec
push
ret
dec
das
sub
mov
aaa
in
mov
and
add
stos
jge
test
push
pop
push
sarb
scas
jle
add
mulb
imul
and
lock
sbbb
and
arpl
rcrb
add
jb
inc
test
mov
dec
push
imul
jo
shll
sbb
push
inc
pushf
ret
adc
je
ja
or
paddd
xchg
rorl
cmp
enter
das
jl
out
fs
push
xchg
ss
and
enter
mov
loop
push
arpl
lods
lret
ficompl
in
push
xor
out
ds
addr16
lret
mov
push
adcb
inc
fldl
jne
andb
in
stos
lods
shll
xor
stos
popf
pop
enter
ljmp
pop
or
lahf
rcrb
popa
fsts
inc
xchg
in
mov
enter
mov
sbb
loope
adc
add
nop
pop
test
jle
rcll
lds
in
pop
stc
or
pusha
cmp
in
fs
push
imul
and
gs
scas
cld
xor
das
pop
test
ret
daa
mov
icebp
stc
test
cmp
call
outsb
cmp
cld
sub
pushf
fs
push
inc
push
sbb
fwait
mov
aad
insb
cs
stos
inc
rcrb
js
fildll
ljmp
fs
sub
pop
andl
mov
test
loopne
mov
hlt
out
jne
movsl
out
pop
mov
fxch
push
inc
cmp
mov
pop
xchg
jae
xchg
mov
loopne
shl
scas
shlb
test
cmp
cmpsl
xchg
test
push
add
rorl
loop
mov
cmc
dec
mov
inc
jmp
cmp
mov
xorb
in
push
cmp
insb
pop
add
mov
subl
add
and
loopne
push
adc
movb
ja
mov
mov
inc
mov
test
pop
stos
sub
xchg
pop
ds
ss
fldcw
mov
jno
ss
and
in
and
add
mov
shll
orb
mov
hlt
cmp
hlt
flds
jns
imul
inc
inc
lods
call
push
ss
std
mov
stos
shlb
fdivrs
imul
nop
popa
push
imul
sahf
xchg
dec
adc
adc
sahf
or
insb
pop
sbb
sarl
cmp
daa
push
lret
xor
jp
into
push
cs
ja
sti
int
mov
and
sub
push
stc
in
sub
pop
adcl
lcall
imul
cmp
inc
mov
xor
jle
inc
dec
or
cmp
add
mov
enter
clc
fidivs
jp
xor
popf
xchg
jb
outsb
ss
ror
pushf
fbld
jne
cs
cmp
fadd
bnd
into
cmp
sub
outsl
xor
jo
stc
and
add
and
jne
add
out
cmc
cmp
and
je
testb
repnz
add
ja
fsubr
dec
stc
enter
fsts
addl
pop
pushf
mov
or
fldt
mov
mov
ss
sbb
cmpsl
xchg
popa
push
popf
jge
mov
sbb
outsb
mov
mov
lods
cmp
cmp
push
insl
adc
jp
and
mulb
jg
and
loop
subl
ljmp
push
lds
fimuls
mov
cld
and
sub
inc
lret
loop
mov
cmp
xchg
sbb
jp
mov
inc
mov
jl
mov
xchg
sbb
push
xchg
imul
and
or
sub
cs
push
shlb
inc
sbb
sbb
test
cmp
mov
out
adc
repz
push
jae
pushf
addr16
jb
jmp
mov
sub
je
pop
dec
insl
insl
xchg
stos
call
jo
xchg
clc
xchg
pop
mov
sbb
xchg
sbb
sbb
jmp
bound
mov
mov
jns
not
out
lret
cltd
or
and
movsb
add
mov
dec
push
cmp
rolb
loop
and
imulb
xchg
pop
fs
fwait
test
imul
popa
pop
scas
popf
leave
mov
notb
inc
lahf
push
out
dec
jno
fdivs
test
fcomps
xor
pop
scas
push
je
pop
les
jo
push
pop
insb
jmp
je
das
push
insl
or
jnp
pop
fxch
inc
lds
cli
mov
add
add
xchg
lret
icebp
jnp
lds
jecxz
inc
addr16
dec
aaa
xchg
dec
xorb
pop
jg
jl
ret
jl
cli
and
js
fisubrl
mov
test
in
and
ja
es
and
shlb
stos
dec
jbe
add
and
arpl
fwait
outsb
and
mov
shl
insl
push
adc
push
inc
push
aam
out
mov
sbb
outsb
inc
inc
stos
xlat
jl
rcrl
mov
cmp
pop
pop
sahf
insb
push
dec
out
aas
ss
jle
xor
mov
dec
packuswb
cmp
fidivrs
decb
in
adc
jns
xchg
pop
bound
jmp
es
shlb
lods
xor
jl
mov
sub
jb
lods
dec
push
sbb
fnsave
lods
imul
sbb
jns
jb
sbb
adc
fs
nop
xchg
popl
addr16
mov
jle
rorb
add
pop
ljmp
shrl
or
cwtl
or
pop
mov
add
into
add
pop
rdpmc
pusha
inc
test
jne
dec
scas
adc
or
addr16
adc
and
cli
lods
push
mov
insl
cmpsb
rorb
xor
mov
es
imul
mov
inc
mov
sbb
lods
sub
or
scas
adc
jns
adc
mov
es
popf
pop
mov
inc
and
xor
pop
pop
lcall
and
fistps
cwtl
pop
adcb
add
lret
inc
scas
mov
sub
aam
pop
gs
test
out
je
adc
scas
mov
out
inc
push
and
out
hlt
lcall
mulb
xor
and
enter
lret
and
xchg
stos
adc
ljmp
sbb
stc
pop
lds
test
push
fnstcw
inc
cmp
add
mov
outsl
hlt
aam
jb
ret
ljmp
outsl
repnz
sub
cmp
push
jmp
pop
dec
mov
pop
mov
pop
jnp
fistl
push
mov
push
leave
mov
stos
cs
lds
cwtl
movsb
inc
lret
in
sub
and
das
dec
popf
rclb
xor
les
testl
gs
push
pop
cwtl
inc
lcall
repz
and
sbb
jge
adc
andl
inc
sbb
in
out
js
mov
lods
mov
bound
int
mov
or
movsb
movsb
pushf
mov
xor
mov
or
movsl
shl
subb
cpuid
ficomps
notl
movsb
xchg
or
dec
aaa
or
push
push
test
adc
testl
daa
fstl
scas
mov
testl
push
int3
pushf
cli
and
adc
jl
pop
xor
je
mov
cmp
stos
push
outsb
jp
xor
push
push
mov
push
je
or
cmp
jno
pop
into
sbb
mov
int3
sub
xor
dec
mov
mov
popa
jb
pop
jp
cmpsl
push
pop
outsl
es
fs
fistpl
push
std
mov
xchg
xchg
and
repz
or
jl
pusha
aam
xor
pop
or
inc
jae
lret
adc
mov
mov
popf
in
stos
sub
and
mov
cld
adcl
push
or
fcmove
jecxz
dec
sub
pop
mov
sub
cltd
out
gs
jmp
cmp
lahf
xchg
fildl
outsb
adc
and
mov
pusha
std
ljmp
and
pop
pop
jg
fnstenv
sub
mov
pushf
jae
out
pop
xor
push
and
adc
cli
ja
sbb
addr16
loope
imul
in
popf
cs
aas
xor
mov
lret
push
dec
sti
and
ds
hlt
out
data16
mov
andb
das
mov
out
bound
shll
nop
imul
popaw
in
mov
repnz
dec
sub
test
adc
cmp
les
sbb
test
rcrl
jbe
xchg
imul
push
cmpsl
lret
or
sti
fiaddl
test
lret
pop
xor
iret
leave
scas
or
and
xor
pop
xchg
mov
clc
cmp
jp
das
and
xor
mov
mov
add
cmp
jne
int3
bsr
mov
arpl
mov
orl
xchg
in
pop
inc
js
scas
out
cmp
int
pop
sbb
repnz
push
fidivs
xchg
int
cmp
sbb
js
push
or
out
int
pop
jne
jo
and
daa
sbb
and
out
movsb
add
daa
int3
mov
stos
int3
dec
and
js
call
ss
arpl
sbb
out
and
mov
gs
cli
imul
repnz
in
or
push
add
add
mov
jmp
setbe
mov
xor
sub
out
fisubrl
adc
push
into
pop
xchg
mov
inc
mov
scas
xchg
mov
fwait
jno
adc
sbb
push
xchg
dec
les
fwait
dec
mov
xchg
adc
enter
cld
lods
faddp
pop
dec
add
sbb
or
sbb
xor
mov
fnstsw
and
sbb
test
xor
orb
mov
fwait
js
int
pop
or
call
mov
and
mov
sub
push
mov
loop
mov
and
shlb
fadds
xor
shll
push
lods
dec
xchg
jge
dec
jne
rcr
mov
repnz
cltd
cmc
xchg
or
fimuls
test
sub
daa
mov
mov
imul
fsubl
cmpsl
fst
add
sbb
push
xor
jbe
mov
inc
sub
dec
mov
adc
out
pop
popa
pop
addr16
sbb
fiaddl
adc
and
push
leave
mov
dec
sub
xor
pop
enter
aad
sub
sub
mov
jbe
hlt
dec
lret
xchg
pop
outsb
add
imul
and
lods
test
rorb
mov
pop
inc
inc
xor
repnz
imul
or
or
scas
ja
or
ljmp
inc
addl
mov
mov
es
sub
pop
push
jle
arpl
mov
pushf
rorb
jge
sbb
xor
xor
dec
lock
cmp
hlt
sub
into
pop
jl
pop
flds
jno
sub
jl
add
out
mov
movsb
insb
sbb
fbld
cltd
mov
pop
into
xor
bound
lods
movb
sub
and
scas
call
xchg
fcomp
cli
stc
adc
sub
mov
jo
pop
push
mov
iret
dec
sub
jp
shl
adc
mov
cli
shl
pop
jbe
add
jl
mov
fistl
mov
lds
push
xchg
cmp
xchg
mov
mov
subl
aas
adc
sub
imul
jne
bound
out
imul
or
mov
psubd
jnp
lock
sub
adc
mov
lods
jp
nop
bound
cli
je
mov
scas
and
ftst
lahf
dec
or
dec
fiaddl
sub
inc
jns
mov
fdivrl
adc
pop
mull
js
add
shll
test
jb
adc
out
pop
push
lret
testb
pop
or
inc
push
xchg
push
dec
lret
mov
inc
out
push
inc
gs
jbe
ret
inc
gs
or
or
pop
sbbb
xchg
clc
mov
insl
mov
imul
subb
xor
fsubrs
call
xchg
pop
inc
adcl
insl
add
rcl
iret
loop
jo
ja
mov
lcallw
dec
dec
jae
subl
push
or
inc
dec
xchg
inc
out
or
mov
orl
jmp
jle
jge
xorl
jl
and
push
sahf
gs
xchg
lods
lret
or
xchg
jl
loope
dec
pop
addr16
jg
ds
shll
fwait
int3
jl
icebp
sub
jne
cmp
fimull
dec
mov
and
inc
fistl
ja
jbe
push
mov
mov
or
inc
xor
xchg
dec
sahf
ror
into
adc
pushf
sub
adc
daa
or
jbe
mov
iret
lods
xchg
adc
pop
pop
xchg
std
loop
out
std
movsl
pusha
adc
jns
test
dec
inc
stc
int
mov
aaa
add
fidivrs
inc
xor
dec
mov
xor
pushf
or
mov
aam
fs
dec
mov
insb
push
mov
push
mov
ss
sbb
insb
shr
popa
xchg
dec
and
cmc
xlat
mov
xchg
add
mov
add
leave
pop
aad
sbbb
sub
out
pop
mov
bound
loop
adc
inc
cs
in
xor
or
pop
adc
out
mov
adc
outsb
push
sub
ja
lret
jns
fmulp
scas
sbb
cmp
sti
sub
dec
inc
add
in
scas
push
dec
rcl
sarl
jle
lahf
xor
aad
jp
movsb
jl
or
lret
sbb
shlb
pop
sti
push
lret
insb
ljmp
nop
les
cmp
cmp
fs
push
lahf
xchg
jbe
add
cwtl
iret
lret
pusha
jge
or
adc
mov
mov
bound
adc
nop
push
or
fs
adc
test
mov
hlt
js
jg
orb
loopne
and
lahf
xorl
cmp
xor
mov
inc
inc
mov
pop
idiv
jno
or
inc
pop
imull
cld
test
fcomi
cmp
icebp
dec
add
shlb
subb
insl
pop
cmc
mov
jbe
subl
mov
and
cwtl
in
je
and
bound
inc
faddl
fistpl
lret
popa
pop
in
out
fisttps
repz
jb
mov
add
jns
out
out
lea
jns
add
enter
jb
cwtl
data16
cmp
push
jmp
xor
outsl
lret
sbb
icebp
out
jmp
fldenv
xchg
pop
pushf
idivb
fs
push
lret
jl
and
in
adc
adc
out
or
popf
rolb
jo
mov
callw
fimuls
je
adc
add
dec
outsb
adc
out
cmc
jb
data16
xchg
xchg
inc
les
jbe,pt
shl
xor
js
cmp
divb
aaa
insl
lods
jle
or
push
xchg
cmpsb
pop
fs
push
in
or
or
cltd
mov
push
std
push
jnp
out
inc
rolb
shll
fadd
aaa
movsb
pop
dec
cmc
jmp
cmp
xchg
jg
es
push
rclb
push
sub
and
hlt
ljmp
insb
shlb
call
daa
mov
adc
test
out
mov
adc
test
mov
mov
add
testl
sub
jne
test
or
add
cmp
adc
adc
adc
cmp
and
lahf
es
xchg
mov
addl
imul
pop
sub
rcrb
jnp
and
pushf
and
fwait
pop
mov
xor
adc
outsb
xchg
jmp
pop
mov
popf
mov
fdivl
dec
mov
mov
mov
cmp
lcall
mov
cmp
dec
pop
xor
mov
lahf
mov
stc
sti
sub
and
fidivrl
shlb
fcoms
popa
mov
jae
or
mov
pusha
mov
jo
xchg
mov
sahf
adc
test
clc
mov
lret
cmp
fucomi
and
clc
pop
adc
jae
sub
xchg
sub
in
xor
cmp
mov
cmp
mov
rorl
adc
into
dec
ds
dec
sub
mov
push
jge
mov
xor
test
roll
xchg
mov
stc
aaa
add
inc
sub
xchg
push
pop
add
lods
inc
in
jg
pmuludq
add
fcmove
xor
cli
js
rolb
mov
mov
xchg
outsl
bound
pop
or
xchg
sahf
pop
ljmp
pushf
jno
lret
je
pop
sbb
iret
aad
lea
mov
repnz
cmp
mov
aas
rcrl
or
je
call
cmp
sub
dec
xchg
push
cmp
test
aaa
jbe
lea
xlat
inc
push
and
cmpsb
cli
mov
add
iret
push
and
js
jecxz
dec
or
adc
out
jmp
stos
aam
or
pop
ljmp
adc
pop
jo
cmp
lea
sbb
iret
adc
push
adc
scas
xor
sahf
cmp
or
lea
imull
sbb
xlat
cld
mov
push
mov
js
mov
notl
fmul
shrl
push
or
mov
test
sbbb
ljmp
lea
mov
call
xor
pop
adc
lock
icebp
adc
xlat
xchg
test
psllq
pop
xor
daa
mov
xor
jnp
outsl
fdivp
fsub
and
add
jg
fnstsw
out
and
fsts
fstpt
in
sub
cld
imul
aad
daa
shl
in
fmull
mov
fnsave
push
jge
lods
sub
scas
std
repz
nop
cltd
mov
adc
pushf
addr16
test
fwait
cmp
lods
adcb
test
ljmp
jo
andb
xchg
fwait
sti
cmp
pop
in
test
jb
loop
mov
outsl
aas
mov
and
mov
sti
es
lret
inc
fwait
mov
inc
cmp
dec
and
mov
jns
adc
add
loope
jle
dec
leave
pop
mov
enter
pop
push
sbb
xor
lret
pop
lret
inc
cs
push
jl
mov
ds
mov
cmp
sbbl
jmp
inc
inc
repnz
xlat
sub
sbb
pusha
enter
mov
jne
adc
in
test
sub
daa
stos
gs
shl
jl
mov
or
add
and
mov
mov
cmp
or
and
lret
dec
in
or
dec
aas
mov
and
sbb
loop
mov
aas
mov
and
or
out
in
shlb
mov
in
iret
movsb
add
add
jo
adc
sub
xchg
in
es
xchg
jae
icebp
or
mov
repnz
mov
mov
sbb
shll
aas
aam
dec
mov
cmpsb
fs
mov
js
or
arpl
repnz
loopne
enter
lret
lret
xchg
fstl
in
cmp
push
add
or
sti
sub
sahf
int
rol
add
stc
pop
ss
dec
cmpl
inc
stos
mov
aam
mov
fnstcw
iret
mov
or
jl
sbb
xchg
cmc
das
pusha
mov
js
into
inc
pop
inc
sub
fistpl
mov
loope
jae
inc
mov
mov
and
cmp
nop
xor
push
pop
or
repnz
pusha
jae
mov
sbb
push
test
push
inc
dec
xchg
or
adc
daa
idivl
ret
dec
xchg
mov
das
mov
lock
lock
and
bound
or
fwait
repz
in
adc
fldt
pop
xchg
push
lret
stos
rcr
dec
inc
mov
pop
gs
out
mov
dec
adc
sbb
bound
mov
and
xor
add
cltd
int
or
and
xchg
pop
rorb
ja
js
jmp
cli
jne
inc
sub
data16
fst
inc
xchg
clc
pop
minps
test
out
xchg
or
xor
cmp
test
inc
push
adc
inc
test
pushw
jle
int
jp
lock
lret
xchg
lcall
mov
popa
cmp
jp
adc
mov
mov
adc
pop
sub
mov
xchg
dec
push
push
das
jmp
push
pusha
outsl
ds
or
aam
ljmp
divl
mov
shr
jb
dec
pushf
test
add
sar
gs
hlt
cmp
sub
mov
loop
mov
test
jl
push
in
mov
mov
imul
cmc
test
ret
push
lds
mov
insb
jmp
jp
adc
dec
push
add
fistpll
clc
test
xchg
aam
rcrb
fcompl
jae
push
fst
or
imul
pop
lcall
outsl
dec
pop
jae
sahf
sub
lds
lret
mov
lea
movsb
std
pop
jmp
in
mov
xchg
ret
data16
stc
rcl
gs
mov
add
lahf
push
lret
sub
fstps
inc
cwtl
fstl
fldt
push
call
fwait
inc
mov
mov
fimull
and
lock
add
fcmovnbe
cmp
jnp
mov
pop
push
gs
jl
sbb
push
enter
push
add
lret
jmp
pop
cmp
call
inc
add
cwtl
mov
fldt
in
mov
imul
gs
sub
jo
jg
inc
ret
add
sub
mov
out
mulps
mov
adc
and
sbbl
inc
out
push
pusha
jnp
sub
jo
sar
bound
mov
rcrl
add
jno
lds
jb
insl
xchg
jno
dec
dec
enter
test
sub
jo
int3
cmovge
inc
nop
dec
cltd
sbb
fcomi
cmp
cld
xlat
xchg
push
cmovs
mov
ljmp
test
push
rcr
cmp
push
adc
in
sbb
sub
or
lds
or
cwtl
xorl
mov
insb
dec
fidivrs
jne
mov
jle
test
jne
adc
push
or
inc
pop
push
sahf
icebp
cmp
cmp
sbb
mov
repz
or
mov
imul
add
and
mov
scas
inc
jo
adc
sbb
lret
jge
mov
or
xchg
adc
fs
je
inc
inc
jg
push
adc
push
cmc
or
enter
dec
insl
sub
mov
inc
mov
data16
inc
cltd
les
loope
sbb
inc
mov
or
mov
inc
out
xchg
sbb
jnp
lea
ss
jb
int
fildll
push
repnz
mov
je
pushf
ret
jae
jp
jnp
push
push
sbb
cmp
mov
push
dec
dec
sbb
lcall
test
shll
mov
insb
out
sarb
dec
iret
xchg
jb
mov
loopne
test
fsubr
imul
bound
pop
jne
jg
jmp
repz
xor
push
int3
pusha
jle
clc
mov
push
mov
ljmp
mov
dec
in
or
mov
push
jnp
xor
and
out
clc
adc
cmc
aas
shrb
in
pmullw
cmp
mov
jg
xorl
aas
and
fdivrl
dec
cmp
and
jecxz
jg
aas
push
xchg
mov
lret
xor
lahf
cmp
fs
add
and
pop
push
xchg
sbb
popa
icebp
in
xor
icebp
push
dec
arpl
jle
pop
mov
push
imul
dec
jp
push
mov
mov
mov
cmp
and
xor
fldcw
mov
xchg
in
cmp
fisttps
inc
fucomip
mov
inc
mov
dec
repz
out
sub
xor
sarl
test
aad
pushf
mov
movsb
mov
add
js
fbstp
cmp
ret
insl
rcrl
js
out
es
jle
in
movsl
rcl
cmp
cltd
sub
gs
dec
mov
pop
mov
je
xchg
imul
negl
sub
jmp
clc
ds
jb
sbbb
movsb
xchg
nop
bound
inc
fdivrl
cmovb
idivl
push
pop
add
call
dec
int
push
pop
addl
and
ss
or
rclb
jae
pop
mov
adc
pop
shll
mov
leave
inc
mov
jge
mov
call
jecxz
jb
andb
push
out
xchg
negl
gs
repnz
in
mov
add
leave
push
and
lea
mov
jb
in
xorl
dec
call
mov
js
hlt
in
add
or
cmpsl
mov
mov
int3
xorl
sahf
fs
fnstenv
add
or
rorb
dec
jbe
xor
jle
push
cltd
mov
mov
ja
rol
call
fcomps
mov
xchg
fnsave
inc
adc
add
push
movsl
pop
xor
sub
xchg
stos
jns
mov
jl
push
jl
mov
lea
add
mov
rorb
inc
ficoms
ljmp
cwtl
stc
or
jg
or
push
adc
addr16
loopne
or
pop
sbb
movsl
icebp
push
xchg
dec
push
or
cmp
pop
hlt
mov
sti
push
outsl
pop
lock
outsb
sub
pop
ljmp
and
adc
jae
test
rcrb
mov
cmp
cmp
mull
mov
faddp
fisubrs
sbb
out
icebp
addr16
adc
enter
add
out
or
jne
xor
cltd
arpl
push
das
dec
nop
pop
inc
cmpsb
cld
sbb
ret
shl
ret
rorb
inc
pop
and
add
mov
jns
jge
iret
push
jae
addr16
lods
dec
in
sub
sub
sbb
or
mov
lods
movsl
xor
adc
aam
mov
addr16
mov
nop
out
xchg
in
and
adc
fldt
test
mov
pusha
inc
pop
mov
ret
daa
es
sub
xchg
sti
faddl
jg
lret
icebp
jmp
or
push
das
jp
mov
jae
mov
daa
xor
js
idivl
cmp
sub
dec
mov
adc
add
sub
cmp
cmp
pushf
lds
loop
dec
stos
test
mov
ds
ja
push
ss
xor
aas
bound
pop
in
out
cmp
leave
adc
ret
jbe
pop
adc
lret
inc
mov
in
pushf
push
insb
clc
call
shll
mov
and
push
xor
dec
jae
ret
shrl
pop
out
test
jl
adc
add
je
sub
jne
shr
stos
lods
test
add
out
dec
mov
jg
fcoms
xchg
arpl
inc
insl
adc
sahf
inc
xor
out
cltd
dec
mov
add
aas
mov
mov
scas
sub
cmpl
cmpsb
inc
in
push
int3
sub
jne
mov
adc
inc
push
push
mov
xlat
bound
test
and
mov
cli
movl
mov
push
lods
ss
jns
leave
sub
insb
iret
mov
xchg
jne
dec
adc
imul
loopne
addb
add
add
ss
imul
insb
fiaddl
dec
mov
cbtw
adc
cmp
and
add
je
jl
cmpsb
and
xor
pop
rcl
add
sbb
jp
movsl
or
cltd
add
pop
pop
sbb
loopne
dec
add
push
in
stos
popa
pushf
fs
xlat
das
add
cmp
sbb
inc
cmp
into
jb
xorl
dec
lods
test
pop
pop
mov
mov
push
enter
rorl
cmp
jae
ret
lahf
repz
pop
outsb
icebp
sti
sub
outsl
mov
push
notl
cmp
fwait
test
sub
sahf
nop
sahf
shr
add
aaa
in
imull
mov
adc
test
dec
pop
xchg
mov
lret
inc
outsl
in
ret
jnp
mov
popa
add
scas
jmp
out
stos
jo
inc
notl
bound
outsb
dec
rcrl
lock
inc
repz
jbe
popf
mov
aam
jno
mov
in
xchg
lahf
stos
inc
mov
push
fnstenv
ds
mov
bound
fmul
andl
das
leave
dec
sti
mov
cmp
sahf
scas
mov
pop
dec
mov
mov
stc
and
xor
loop
mov
fsubrp
fst
xor
shl
inc
adc
mov
rcl
xor
jne
dec
ret
wrmsr
loop,pn
pop
xchg
fwait
shlb
nop
mov
xlat
shl
xchg
test
outsb
or
or
ficoml
mov
in
mov
sbb
inc
faddl
jg
xchg
sbb
jge
ljmp
xlat
imul
cmpsb
lea
mov
and
adc
sub
sti
lods
mov
jae
add
and
cld
psubsb
in
pop
jle
jb
push
and
or
or
sbb
fisubrl
hlt
lods
mov
pop
sbb
adc
add
jb
notb
ret
adc
mov
lds
xor
inc
mov
lods
inc
vcvttpd2dqy
push
in
mov
out
or
cmp
jmp
add
daa
inc
jnp
pop
push
cmp
lret
iret
xor
popa
in
and
sahf
mov
lahf
sbb
pop
dec
mov
mov
push
ss
mov
jns
add
inc
ja
push
or
xchg
stc
dec
scas
out
add
lahf
sub
je
popa
daa
jne
adc
mov
jge
fwait
movl
xchg
leave
rcrl
xchg
mov
mov
push
cmp
adc
mov
pusha
into
mov
and
mov
mov
shrb
scas
test
dec
mov
push
xor
inc
lahf
cwtl
fidivl
xchg
pusha
ds
xchg
pusha
mov
cmc
mov
mov
sub
repnz
mov
mov
out
sbb
out
jp
mov
aad
mov
mov
xchg
jbe
addl
and
pop
xchg
adc
or
cmp
pop
fsubl
mov
and
into
xor
mov
repz
xchg
xor
pop
lret
das
outsb
cwtl
in
mov
add
lods
pushf
int
dec
cltd
and
and
les
idivb
repnz
ljmp
adc
outsl
dec
mov
xchg
adc
test
xchg
pop
sbb
loop
mov
in
orl
jecxz
adc
mov
push
icebp
fwait
into
enter
andl
mov
jne
js
repnz
fs
lret
inc
pop
sbb
push
jmp
sbb
jae
jp
aaa
fscale
popa
out
xor
adc
fistpll
pop
jp
nop
mov
adc
stos
mov
mov
imul
adc
or
xor
jne
shll
push
xchg
xor
and
sbb
mov
sbb
jmp
and
xor
clc
ret
sub
xchg
rcrl
push
jmp
xor
stos
mov
lods
or
xchg
add
sbb
and
ret
sub
cmp
imul
and
test
test
mov
aas
pop
insb
push
loopne
dec
into
add
sub
mov
aaa
cli
fdivrs
in
mov
inc
insb
xchg
jp
mov
leave
es
fisttpl
mov
cmp
insl
aad
rorl
pop
lcall
sbb
dec
or
sub
jns
push
adc
sub
xchg
adc
lahf
adc
pop
sub
adc
outsl
sub
lret
repnz
push
insl
dec
adc
fwait
call
iret
pop
popa
in
push
loope
dec
das
ffreep
and
xchg
jl
ja
push
jne
jno
xchg
fwait
push
xchg
jl
pop
loopne,pn
lahf
sbb
sub
push
nop
mov
bound
lock
jmp
jp
lods
jmp
insl
xchg
loopne
testb
test
lds
test
cmpsl
and
ret
mov
dec
xchg
lock
call
jmp
xor
sbb
dec
pop
pop
jl
mov
imul
xlat
andb
push
fidivl
dec
addr16
or
std
xor
int
and
das
test
xchg
jae
xor
mov
push
lea
pop
std
aad
mov
cmpsb
adc
sbb
dec
out
or
cld
inc
cmp
adc
nop
sbb
pop
sub
iret
pop
sub
mov
jmp
sbb
sbb
stc
sti
imul
aam
subb
jge
push
mov
push
xchg
lret
or
jl
mov
jg
pop
mov
stos
or
shlb
inc
int3
sbb
sub
jmp
fstps
rorb
loopne
xor
sbb
adc
sbb
push
inc
or
mov
cmp
arpl
sbb
dec
cmp
rorb
inc
ficompl
and
cs
pop
mov
jbe
xor
lds
mov
mov
imulb
out
add
or
sub
test
out
rol
mov
fidivrl
cmpb
pop
movsb
jg
or
add
shll
flds
out
jecxz
inc
andl
lret
clc
inc
in
add
cmp
pop
je
leave
nop
mov
jecxz
subb
pushf
movsb
push
jo
mov
jnp
or
shrl
or
adc
mov
lret
xchg
lret
pop
adc
pop
stos
sub
dec
add
dec
sbb
and
out
jl
arpl
scas
sbb
cld
xchg
imul
fisttpll
jmp
sub
daa
cs
dec
xor
rolb
mov
pusha
js
pop
imul
xor
das
and
mov
mov
sbb
dec
sub
sbb
add
add
add
or
lds
into
es
out
mov
aam
push
fnstcw
mov
cmp
push
arpl
out
insb
pop
inc
sub
cmpsl
xchg
mov
and
arpl
pop
cwtl
or
lock
leave
mov
add
mov
xor
xor
adc
adc
lods
pop
inc
loop
cmp
sub
movsb
pop
xor
pop
sahf
lea
cli
pop
sub
hlt
stos
repz
je
inc
pop
xlat
ja
pop
addb
repz
icebp
cmp
jb
cmp
pop
jne
out
jle
iret
lock
js
mov
setp
pop
sub
lods
mov
lret
add
mov
jns
call
inc
push
clc
or
repz
xor
pop
andl
mov
repz
cmc
pop
xchg
lgs
pop
pop
xor
fldenv
outsl
dec
negl
mov
inc
push
sub
dec
inc
scas
mov
pop
or
or
cmc
xchg
sbb
dec
std
clc
popf
loop
xchg
mov
add
es
and
add
add
iret
cmp
mov
sarl
aam
mov
cmpsl
adc
add
add
aam
xchg
stos
loopne
cmp
fldlg2
fidivl
into
ja
xor
jmp
dec
pop
lods
lcall
repz
cmp
xchg
outsl
dec
dec
jecxz
arpl
sbbb
sbb
and
ret
sbb
dec
pop
stos
inc
adc
rorb
and
repnz
out
adc
sub
mov
pop
cli
lea
pop
ja
dec
ret
cltd
jl
mov
pop
mov
push
inc
int
mov
lret
in
nop
lcall
inc
cmp
inc
and
inc
mov
jg
sbb
add
adc
lret
pop
sbb
sub
mov
push
push
jnp
xchg
cmp
push
leave
xchg
inc
repnz
jle
push
pop
or
int3
xchg
xor
pop
insb
les
push
enter
push
mov
popf
mov
loope
cltd
subb
dec
xchg
je
pop
out
pop
mov
sbb
jnp
repz
in
inc
cltd
insl
dec
ret
and
pushf
pusha
push
jno
adc
dec
mov
pop
xor
xrelease
loope
loop
clc
push
filds
shrb
pusha
xorb
hlt
scas
inc
mov
inc
push
bound
jns
mov
mov
addr16
ja
jne
scas
mov
inc
sbb
mov
mov
jecxz
test
bound
fcoms
lret
arpl
inc
and
seto
sbb
add
cmp
add
inc
call
testl
fldt
hlt
enter
frstor
scas
pop
mov
and
or
mov
jmp
enter
jmp
and
jb
mov
cmpsl
bnd
and
adc
sbb
dec
test
ljmp
pop
adc
ret
dec
or
sbb
pushf
xchg
push
push
cs
mov
or
dec
xchg
sub
inc
pop
enter
iret
xor
and
cmp
add
jb
dec
inc
addb
mov
divb
add
fcoml
sub
sub
or
out
mov
dec
xor
add
imulb
fdivr
cmpb
int
scas
scas
call
mov
inc
sarl
sub
adc
dec
sbb
mov
push
push
fsubrl
js
and
xor
sbb
cmp
xor
xchg
mov
inc
test
push
icebp
dec
outsl
sbb
fidivrs
jo
adc
fwait
lods
lret
dec
mov
daa
loop
ljmpw
pop
out
pavgw
addr16
sti
fs
push
nop
sub
fwait
jp
adc
stos
outsl
push
cmp
in
insb
pop
outsl
decb
cmp
cli
iret
je
daa
fs
test
cld
lock
fiaddl
in
ret
push
cmpsb
xor
decl
cmp
fists
sub
xchg
xchg
cmp
adc
rorb
push
mov
jmp
int
fldl
jnp
add
scas
dec
xchg
in
mov
xor
bound
sbb
jnp
test
lret
xchg
out
pop
aaa
cld
and
test
cmpsl
stos
jl
sub
gs
clc
outsb
stos
cmc
mov
cwtl
sub
or
sbb
dec
int
add
paddsb
mov
stos
fsubs
xchg
cmp
jecxz
addr16
in
dec
mov
loopne
push
push
test
or
imul
inc
inc
adc
pop
lret
mov
dec
fsubrs
mov
icebp
and
daa
rolb
and
xlat
dec
mov
mov
push
imul
int
cld
jg
lret
in
xchg
xchg
push
pop
test
mov
rcr
or
rol
cs
into
add
push
lret
push
aad
fildl
jbe
pop
ffree
fcmovnbe
faddp
leave
test
or
and
cltd
scas
jae
shrb
lahf
cmp
inc
mov
je
xchg
mov
in
lods
sub
inc
mov
sbb
push
mov
lret
mov
push
fwait
and
cli
daa
out
cmp
pop
xchg
and
jg
lock
fadd
pop
cmp
hlt
fstl
popf
inc
xchg
gs
jmp
ja
mov
push
in
dec
mov
xor
and
jnp
pop
mov
fistl
jmp
ss
and
xchg
out
test
cmpsl
dec
cmp
xlat
jmp
push
cwtl
repz
jle
sub
mov
dec
pop
int
out
out
leave
rolb
inc
rolb
scas
andl
sahf
lret
lcall
mov
sbb
pop
jne
bound
cs
jb
movsl
pushl
sbb
mov
data16
xor
stos
sub
adc
adc
mov
mov
mov
rcr
xor
mov
push
cmpsl
imul
cmc
push
mov
fisubrs
es
mov
and
xlat
sub
dec
jecxz
jg,pt
les
rcll
push
add
imul
out
sub
sub
pop
das
jl
xchg
sbb
fdivl
mov
push
shl
js
cwtl
jge
or
fcmovbe
push
and
arpl
or
inc
sbb
out
cmp
pushf
pop
into
movups
push
mov
jae
xchg
xor
scas
adc
in
in
movsl
cmp
add
std
push
cs
add
out
inc
inc
test
or
ja
add
aaa
arpl
sbb
jecxz
jne
movsl
pusha
fsubl
fimuls
push
add
cld
test
jmp
dec
jge
pop
push
push
mov
lods
push
push
mov
pop
mov
movsl
mov
push
xor
notl
dec
or
mov
in
mov
cwtl
push
ret
mov
sbb
pop
push
insl
add
jno
fdivp
jg
push
inc
fwait
lret
testb
repz
dec
mov
xorl
mov
repz
and
and
cmp
jecxz
mov
adcl
pop
pop
sub
stos
lret
jb
test
mov
rcr
fcoms
push
sahf
jne
hlt
repnz
aaa
mov
fdivs
in
stos
jg
mov
test
dec
xor
sub
rol
repz
sbbb
loopne
pop
rcrl
stos
das
into
sub
jecxz
sbb
sub
sub
test
mov
out
test
int
jge
push
pop
nop
pop
mov
in
jns
sbb
repnz
inc
sub
test
push
in
test
in
adc
adc
lods
and
cltd
xor
mov
shrb
enter
jge
sub
jmp
filds
daa
jge
fs
pushf
sbb
jns
adc
push
aaa
pop
out
mov
cmp
shrb
scas
insb
dec
lahf
repz
ret
mov
push
out
mov
mov
imul
mov
aas
mov
mov
mov
dec
pop
mov
aad
push
movhps
mov
mov
adc
rcrl
mov
adc
std
mov
jb
movl
ror
xchg
flds
aas
rol
in
ret
sbb
pop
xor
pop
fstpl
mov
jl
or
fsub
imul
outsl
cmpsb
js
dec
add
fwait
jno
jae
cs
jmp
lea
sarb
sub
push
sub
xor
sbb
loopne
mov
sti
jg
aaa
loop
push
or
loop
mov
es
test
inc
lret
cmp
ret
jno
in
push
scas
and
and
rcrb
sub
push
jecxz
es
add
adc
ret
cmp
sahf
jb
shlb
scas
push
idivl
and
push
jb
out
fadd
xchg
scas
sub
cmpb
pop
sarl
xor
test
jg
insl
in
into
dec
cld
xor
data16
adc
sbb
add
dec
jb
or
lcall
xor
nop
test
lock
mov
ffreep
sbb
test
sub
cwtl
loop
jne
or
pushf
loop
sbb
mov
sub
push
xor
push
xor
jmp
iret
enter
lret
repz
adc
cs
xchg
ret
mov
and
pusha
push
roll
repz
pop
sti
pop
mov
and
xchg
lea
jmp
xchg
mov
xchg
adcb
add
cmp
add
test
mov
mov
sbb
in
or
js
pop
in
add
addr16
and
lods
imul
cmpsl
sbb
repnz
dec
out
inc
mov
sti
inc
mov
mov
push
sub
push
push
aaa
add
neg
jne
test
jnp
test
nop
inc
mov
and
ljmp
add
adc
xor
sbb
movsl
addl
push
in
in
icebp
dec
and
xchg
inc
out
popa
in
cli
popf
cwtl
in
fs
push
fadds
repz
adc
mov
push
dec
cmp
jmp
ror
push
fsubrs
adc
jnp
sbb
push
inc
xlat
mov
or
filds
xor
ret
in
inc
mov
subb
cmp
dec
and
add
add
sbb
les
mov
xchg
add
idivb
in
mov
sub
mov
xlat
je
dec
insl
inc
lahf
mov
jecxz
xor
sbb
fcmovnbe
data16
inc
mov
jl
mov
dec
dec
dec
ds
mov
push
sbb
sub
out
inc
jp
push
out
lcall
fdivp
or
mov
ret
enter
add
inc
jb
fiadds
lcall
push
test
mov
clc
aad
mov
xlat
arpl
or
loope
shrd
xor
adc
pop
inc
jecxz
sti
add
out
cltd
jg
int
shrl
mov
scas
xorb
cltd
xor
xchg
es
rcr
xlat
xchg
push
and
popa
test
mov
and
jp
push
inc
pop
lods
inc
push
mov
xchg
sub
push
fwait
mov
xor
andb
add
ret
sbb
jl
lcall
inc
xchg
mov
cmc
add
jae
xchg
jb
cmp
lahf
mov
cmp
pop
adc
in
pop
adc
jne,pn
ss
in
mov
mov
fldl
jge
sbb
xchg
add
out
add
jg
cmc
xchg
hlt
push
and
dec
insb
int3
mov
jg
clc
dec
outsb
mov
mov
cld
roll
jecxz
adc
pop
sbb
cli
cmp
scas
cmpsb
adcl
fcmovnbe
jp
mov
repz
lds
loope
out
adc
add
stos
out
xchg
std
arpl
cmp
mov
inc
dec
jmp
test
lods
in
lahf
sbbl
mov
mov
or
or
mov
and
xor
sbb
mov
ja
add
inc
out
mov
lcall
jl
mov
arpl
pop
shl
fsts
movsb
xor
push
repz
sbb
mov
ja
xor
cmpsl
jecxz
mov
cmp
jne
jae
sahf
dec
addr16
out
inc
data16
repnz
pop
xchg
sahf
arpl
pusha
xor
add
fwait
movsl
ret
dec
lahf
and
cmp
inc
jmp
inc
aam
inc
dec
or
jmp
mov
adc
dec
inc
pop
sbb
ret
pop
adc
popa
jnp
clc
xor
pop
out
insb
clc
imul
inc
jmp
test
cmp
mov
xor
das
cmp
stos
sub
les
call
xchg
jmp
xor
out
mov
cli
aad
and
adc
dec
mov
fwait
push
or
inc
out
mov
mov
or
movsl
pop
movsb
push
mov
add
jbe
push
cmpsl
bound
mov
sbb
mov
pop
movsb
rcrb
mov
pop
fs
cwtl
nop
inc
jno
xchg
mov
and
or
cli
mov
push
lea
stos
push
clc
xchg
hlt
pop
mov
ja
dec
nop
sub
push
inc
and
xchg
je
imul
pushf
push
jb
xor
cmp
rcrl
lret
pop
pop
test
imul
hlt
sub
popf
ljmp
push
popa
pop
test
mov
out
js
adc
insb
mov
inc
daa
lods
sub
inc
addr16
mov
mov
push
pop
and
in
adc
jp
cmp
mov
cmpsl
js
pop
aad
or
sbb
pop
insl
sub
syscall
inc
aad
mov
lcall
cli
push
add
pop
pop
out
and
sarb
mov
loop
imul
mov
fiadds
xor
mov
cs
arpl
push
cwtl
xor
push
jnp
enter
lea
pushf
dec
fisubrl
xor
inc
mov
movsl
scas
cmpb
xor
push
aaa
jp
out
xor
dec
adc
pop
in
mov
jecxz
mov
pop
test
jno
scas
idivl
movsl
sbbl
xchg
movsb
arpl
pop
sbb
cmc
jno
nop
test
xchg
js
sbb
cs
mov
sub
int
in
inc
add
stc
push
mov
pop
lods
mov
enter
sbbb
adc
addb
xlat
jmp
testl
outsb
shrb
in
xor
ret
sub
xchg
testb
imul
jns
mov
lret
mov
js
aad
pop
mov
in
cli
mov
xlat
sarb
push
stos
xor
sbb
imul
imul
adc
dec
arpl
push
outsb
js
inc
fiaddl
mov
mov
mov
repz
fwait
and
sub
adc
aaa
sub
ss
in
xor
and
mov
cmpl
mov
faddl
cmp
sub
stc
adc
pusha
xchg
cmp
mov
insl
cmpb
loop
sbb
or
test
push
je
mov
ss
sbb
cmp
std
jb
xchg
fld
das
insb
inc
cmc
ja
xor
cmc
aaa
push
mov
mov
enter
mov
imul
test
aad
sbb
pop
pop
dec
cmp
repnz
sub
test
loopne
fld
push
cmp
adc
fisttpll
cmp
xchg
stc
jecxz
inc
xorb
insl
iret
mov
or
add
xor
pushf
aas
test
xchg
push
test
and
lods
mov
out
cmp
das
mov
and
mov
sar
xor
jmp
and
loop
push
inc
daa
push
pop
pop
cmpsl
cli
push
cmp
sub
rcrb
mov
icebp
std
xchg
mov
std
sbb
lock
out
push
push
xchg
push
mov
jmp
mov
fs
adc
add
lock
inc
addr16
ljmp
popa
xchg
xchg
pop
imul
daa
outsb
outsb
addr16
lret
push
fwait
lds
mov
jmp
insb
jae
js
movsl
test
cmpsl
xor
rclb
or
in
sti
outsl
jmp
add
push
jp
mov
lock
pop
insb
xchg
loop
hlt
call
repnz
push
add
jl
mov
cmpsb
mov
mov
sbb
jnp
sbb
stos
je
les
stos
mov
push
mov
cltd
or
js
mov
mov
jno
shll
es
fmuls
dec
pop
adc
sarl
fistpll
rcrl
or
arpl
inc
jns
or
pop
in
fdivrl
xchg
pop
xchg
lret
pop
mov
inc
push
mov
push
nop
push
movsb
lock
adc
mov
icebp
jo
nop
iret
test
pop
out
jl
xlat
mov
jno
dec
adcl
lahf
or
sbb
mov
popa
mov
imull
out
dec
imul
and
mov
gs
sbb
loope
icebp
and
dec
imul
in
jno
fisttps
cmpsl
clc
add
imul
sbb
popf
push
pop
addr16
sub
cmp
bound
adc
insb
add
jb
dec
pushf
fistpll
in
pop
inc
xor
sub
test
insl
outsl
fs
pop
mov
shll
movsl
call
ret
loope
repz
out
jmp
cli
mov
adc
sub
mov
repnz
filds
testb
insl
jecxz
arpl
or
shll
in
add
daa
and
movsb
outsl
sub
mov
mov
jbe
cmp
aas
jge
sub
dec
jno
sbb
xor
inc
cmpsl
shrl
fistps
lahf
dec
mov
pop
out
add
mov
and
mov
xchg
imul
mov
xor
testl
pusha
adc
cmpsb
insb
imul
dec
fst
ret
mov
push
add
or
imul
test
and
jns
stos
fisubrs
cmp
frstor
and
insl
mov
incb
push
in
inc
test
add
push
sahf
mov
jge
dec
mov
cs
xchg
dec
push
inc
aaa
and
inc
and
insb
popf
fwait
xor
ret
stos
jle
sub
in
and
das
sbb
adc
mov
stos
cmp
mov
cmpl
ret
pop
stc
or
aaa
sbb
insl
icebp
mov
cmc
sbb
add
cmp
mov
push
into
lret
and
push
dec
mov
jo
js
scas
sub
scas
pop
inc
mov
fwait
outsl
sbb
cmp
sub
xchg
enter
inc
movsl
out
adc
adc
add
dec
lods
loop
cmpsb
mov
mov
and
fcomps
inc
adc
push
and
repnz
cmp
stos
fcoml
pop
jno
xchg
mov
faddl
pop
fidivrl
lock
ljmp
fisttps
sub
popa
lret
sarb
jbe
out
jmp
xchg
mov
cs
xor
inc
adc
movsb
pop
mov
pop
dec
jl
adc
call
mov
inc
int3
out
mov
nop
push
icebp
test
in
mov
push
mov
mov
mov
aaa
jnp
stos
push
adc
cmpsb
lods
and
or
inc
xor
lods
adc
add
popa
mov
out
and
popf
addr16
test
hlt
call
push
insb
jns
push
add
cmpsb
sti
roll
push
shrb
js
insb
mov
test
xor
or
xlat
pop
xchg
je
test
fldl
aaa
dec
push
outsb
lods
cmpsb
adc
mov
sbb
repnz
lret
push
movsl
adc
call
daa
ret
jne
push
mov
push
xchg
in
mov
mov
xchg
and
sbb
jmp
jp
mov
adc
cld
insb
fisttpll
movsb
fistps
in
jno
xor
cld
cltd
mov
jnp
std
ds
test
in
fisubs
iret
mov
mov
push
enter
rolb
cld
addr16
mov
arpl
scas
and
or
xlat
sbb
jns
adc
jge
mov
test
lahf
xor
xchg
pop
icebp
fidivrs
cltd
pop
test
sbb
pop
push
insb
aaa
js
sub
fcompl
xor
pop
inc
push
xchg
mov
push
dec
add
in
sub
xchg
adc
inc
dec
xor
jge
popf
mov
shl
dec
add
mov
in
movsl
insl
icebp
lea
out
pop
pop
xor
cwtl
pop
out
int3
mov
sbb
das
pop
xlat
cmc
pop
dec
and
les
and
movb
test
repz
hlt
inc
out
push
pop
cmp
sti
cmp
iret
jmp
push
push
and
push
jnp
test
rclb
movsb
subl
cltd
mov
xor
add
or
jnp
xchg
jmp
mov
xchg
rcrb
cmp
fsubl
dec
cltd
pusha
sub
xchg
cltd
mov
jb
and
test
rcr
push
inc
outsb
mov
pop
popa
outsb
add
mov
mov
push
loope
bound
sbb
sub
adc
add
js
adcb
mov
idivl
inc
or
push
mov
push
dec
xlat
sub
push
icebp
ljmp
out
push
inc
push
pop
dec
inc
fadds
or
pop
sub
inc
stos
mov
insl
imul
or
mov
arpl
sbb
xchg
mov
aad
jl
cmp
xchg
and
dec
fldenv
outsb
inc
xchg
jl
mov
loope
cmp
add
loop
lea
arpl
and
hlt
enter
or
popf
pop
rcr
xchg
jge
and
cli
out
in
pop
dec
insb
add
add
mov
dec
inc
and
mov
fucomp
in
mov
bound
lods
test
mov
pop
or
loope
je
pop
jecxz
lret
sub
call
dec
push
es
xor
das
sub
das
and
cmpl
inc
and
mov
das
popa
add
dec
adc
dec
in
inc
jns
push
or
push
jne
mov
test
xchg
lea
mov
aad
test
sub
out
fstpl
pop
ret
jns
lods
arpl
pop
pop
mov
xchg
dec
cli
sbb
lret
cmp
arpl
dec
adc
imull
idivb
pushf
shr
or
xchg
aam
jnp
pop
pop
imul
pop
ss
mov
add
xchg
jg
jge
pop
js
jo
int3
andb
xchg
bound
xor
inc
insb
pop
insl
test
add
lret
pop
jge
jbe
inc
imul
pop
pop
adc
dec
jecxz
adc
and
arpl
jle
movsb
jae
push
fwait
jg
mov
sti
inc
call
mov
inc
test
inc
sbb
and
mov
pop
xchg
ss
cmpsb
sbb
adc
sbb
ret
mov
andl
sub
mov
into
or
gs
das
nop
scas
push
xchg
stc
cmp
adc
xchg
cmp
in
mov
mov
pop
pop
scas
lahf
lds
addr16
jne
cmp
jle
mov
push
and
in
sbb
int3
inc
jge
scas
cmpl
and
cmp
dec
xlat
dec
cltd
adc
push
lcall
dec
push
inc
call
mov
mov
out
or
pop
inc
decb
shll
jb
js
or
rclb
sbb
loope
stos
es
mov
mov
imul
ficoms
aad
sbb
push
cmp
int3
in
shrb
pushw
in
dec
ret
mov
enter
push
mov
xlat
ds
int3
jmp
aad
push
jge
inc
or
xorl
pop
xor
movl
xchg
xor
cs
fidivs
dec
mov
jnp
cmp
cs
mov
sbb
jae
push
cmpb
out
add
ljmp
mov
test
in
add
mov
and
adc
dec
inc
mov
inc
jmp
xor
sbb
xchg
cmpsl
xchg
dec
jo
xor
insl
lret
scas
push
inc
loop
das
mov
inc
mov
mov
ret
data16
adc
sub
pop
ror
aaa
sub
push
ret
push
lods
std
jl
mov
int
jno
fstpl
sbb
mov
repnz
ljmp
push
lock
bound
and
cld
push
inc
cmp
mov
pop
cmp
loopne
ljmp
push
sbb
mov
mov
in
mov
aaa
je
xchg
iret
movsl
cmc
loop
imull
cmp
lret
inc
pop
xor
test
sbbb
loopne
das
rclb
mov
and
in
dec
mov
dec
mov
test
sbb
xchg
mov
xor
push
arpl
sub
mov
int
int
imul
rcrl
aaa
pop
lahf
test
movsl
in
sbb
adc
test
mov
jne
popa
jmp
cwtl
jp
adc
sbb
or
jbe
mov
sbb
push
daa
inc
sbb
sbb
push
je
inc
jg
push
fucomi
outsb
mov
fistl
and
dec
into
iret
enter
outsl
pop
ja
mov
sub
test
or
mov
or
pop
jno
adc
je
inc
inc
aas
leave
mov
pop
out
xchg
mov
inc
inc
or
pop
in
sbbb
jo
cmpsl
xor
cmpsb
insb
pop
push
into
xchg
pop
dec
movsl
xchg
mov
lods
mov
or
arpl
push
sub
and
cmp
sub
jns
mov
pop
pop
add
lods
push
push
and
jns
xchg
outsb
pop
cs
cli
cwtl
xchg
inc
out
aas
mov
shl
test
test
sbb
lret
inc
add
clc
inc
sub
xor
push
xor
cwtl
mov
rcrb
jbe
outsl
stos
je
adcb
cmpsl
inc
mov
mov
rclb
loopne
mov
push
in
or
mov
bound
and
ja
jb
and
jb
xchg
ljmp
jle
push
mov
xchg
xchg
xor
insb
insb
push
mov
fcmovnu
push
and
sbb
jb
mov
mov
je
adc
sbb
aad
sbb
imul
mov
pop
popa
popa
sub
mov
xor
push
xor
aaa
cmp
or
or
cli
push
add
sub
sarl
jmp
les
nop
pop
les
mov
push
mov
imulb
pusha
jle
push
repz
dec
sub
mov
jmp
pop
fstp
fnstsw
xchg
outsl
in
inc
jp
dec
jo
cwtl
fcmovnu
lret
xlat
int
in
push
mov
sbb
adc
lcall
call
ret
push
jge
jo
jnp
mov
or
in
dec
add
int
jns
in
iret
sahf
test
outsb
out
enter
add
fs
cmc
imul
adc
iret
push
test
mov
push
stos
pop
dec
mov
pop
xor
aam
dec
pusha
jbe
push
std
or
int3
out
lret
loop
and
psadbw
repz
das
mov
pop
pop
imull
mov
jmp
sub
adc
std
sbb
adc
xchg
cmpl
push
sub
mov
les
adc
cmp
movhps
push
jns
or
push
mov
add
cmp
fst
call
fs
movsb
mov
add
ds
jle
mov
icebp
dec
stos
iret
in
pop
mov
shr
xchg
pop
mov
lods
push
sub
jae
shrb
jmp
fcmovu
dec
fistl
xor
mov
push
mov
inc
lock
pop
pusha
xchg
lcall
daa
pop
loopne
dec
dec
ret
xor
stc
repz
in
lods
cld
mov
xchg
and
ds
movsl
sbb
lcall
lret
or
arpl
cltd
dec
jb
xchg
jne
and
lret
cmp
divl
and
xchg
cs
in
repnz
stos
jle
into
stc
mov
call
cmpsb
mov
int
jb
xlat
insb
ds
inc
cmp
mov
mov
popf
sbb
push
sahf
ja
jns
mov
and
lcall
enter
xor
pop
in
imul
ljmp
cmp
mov
jl
mov
dec
test
dec
or
test
pop
in
add
out
pop
loopne
enter
mov
sbb
std
bound
inc
mov
mov
repnz
mov
mov
push
jle
or
adc
testb
xor
cmp
imul
nop
pop
jne
and
adc
mov
dec
roll
sbb
adcl
sbb
xchg
push
push
stos
mull
and
lret
push
xorb
adc
mov
aaa
lret
mov
icebp
ja
mov
js
dec
lahf
sbb
mov
xor
push
jmp
or
daa
lock
les
jge
sbb
enter
sbb
jp
xchg
lods
or
clc
cli
sub
sub
popa
push
add
jnp
ret
pop
mov
push
mov
stos
in
cmpl
add
pushf
adc
xor
adc
pop
inc
add
aas
add
cmpsb
xchg
mov
dec
addb
aam
cmp
jmp
push
imul
push
mov
aad
push
push
adc
sbb
mov
fsubrl
dec
enter
and
ss
fucomip
inc
xchg
mov
pop
jne
mov
outsl
cmp
push
std
cmp
int3
and
cltd
xor
mov
scas
mov
fmulp
ja
jns
out
mov
mov
dec
mov
xchg
scas
daa
leave
mov
dec
mov
dec
push
mov
sbb
xchg
fadd
sbb
cmpsl
inc
cmp
push
cs
jg
in
and
stos
ja
pusha
lret
pop
out
adc
aas
ss
push
imul
bound
jmp
dec
cmpl
xchg
insl
ss
push
pop
div
dec
stos
adc
inc
loopne
popl
daa
or
adc
ds
imul
sahf
and
and
or
inc
inc
sbb
xor
sbb
leave
leave
push
xor
adc
pop
pusha
sub
popf
cmp
lea
xor
in
lret
test
shlb
mov
and
xor
idiv
add
xchg
dec
gs
dec
cmpsl
ds
es
cmp
cmp
subl
xchg
mov
mov
sbbl
ja
mov
xchg
imul
or
push
outsl
mov
shl
test
mov
ror
cli
repz
pushfw
test
int3
dec
mov
add
loop
adc
lods
mulb
in
jae
addr16
mov
inc
clc
jl
test
lds
pusha
jecxz
pop
inc
movl
dec
push
dec
inc
data16
mov
xchg
jne
hlt
push
jne
add
adc
movsb
xchg
dec
negl
inc
or
inc
push
push
mov
testl
adc
ret
pop
jo
das
xor
sub
fsubrl
or
scas
dec
xor
dec
cmpsl
sbb
ds
mov
jp
cli
mov
and
inc
lods
int
shr
test
stc
push
or
xor
push
andb
push
mov
or
cli
xchg
xlat
cmp
xor
jno
ja
pop
jns
mov
mov
add
jne
ss
add
mov
jns
ljmp
stc
imul
jl
xlat
xor
or
mov
xor
push
cmp
scas
mov
cmp
or
add
dec
xor
lock
stos
clc
inc
dec
cmp
testb
pop
dec
loope
jecxz
sub
sub
lods
rep
push
xor
into
push
divl
jg
mov
mov
movsb
test
pop
cltd
push
loope
rcr
aad
pop
add
inc
fadds
mov
mov
jne
out
jmp
bound
mov
jp
test
scas
cld
add
out
stos
mov
and
xorl
inc
xchg
jle
push
add
and
add
mov
nop
ret
rol
adc
repnz
adc
mov
inc
sbb
out
popa
xchg
pushf
adcb
cmpsl
std
dec
insl
and
push
cmp
mov
imul
mov
sahf
push
in
out
and
dec
dec
mov
pop
sub
mov
repnz
fdivrl
jnp
std
sub
xchg
bound
out
sbb
cmc
lret
adc
adc
mov
es
out
mov
mov
sti
jle
xchg
cmpsb
ficoml
iret
or
xchg
cmp
cs
sbb
xor
mov
bound
or
jb
dec
addl
aas
adcb
pushf
mov
leave
mov
fimull
sub
cltd
ljmp
or
mov
sub
inc
cmp
xchg
outsb
push
loopne
aad
ret
in
mov
sbb
jns
jge
addr16
xorl
and
das
cld
add
xchg
jecxz
gs
fiaddl
fisubl
mov
dec
loop
mov
andb
xchg
and
jnp
orl
mov
add
jle
cmp
add
addr16
and
add
cmpsl
pop
fnsave
cmp
fisubrl
test
adc
scas
lock
mov
jns
mov
and
sub
jle
inc
add
call
jp
pop
out
mov
xchg
fiaddl
shrb
pop
adc
out
cmc
sbb
imul
or
adc
xchg
icebp
nop
nop
mov
aam
mov
sub
push
add
insl
andl
cmp
xor
push
mov
lock
push
jl
gs
les
filds
int
dec
insl
jne
pop
adc
dec
out
or
and
inc
jl
pop
paddusb
lret
xlat
pop
iret
mov
add
jae
xchg
sub
jge
into
call
fdivr
daa
dec
push
lods
push
cld
mov
inc
mov
jns
ljmp
jg
loop
jge
enter
cwtl
cmpsb
das
xchg
stos
mov
jnp
hlt
mov
mul
push
int
in
add
les
dec
mov
ljmp
mov
jge
mov
into
sub
cmp
das
jnp
xor
inc
pop
mov
sbb
out
movsb
inc
insl
xor
dec
fstpt
outsl
pop
andb
shlb
push
cmp
leave
bswap
push
lret
xchg
add
inc
mov
jns
pop
mov
inc
scas
xchg
jmp
jp
xor
cmp
cmc
pusha
xchg
rolb
int
or
hlt
into
in
shr
ret
push
popa
mov
dec
into
shll
mov
inc
data16
sbb
push
mov
pop
pushf
popf
aas
inc
cmp
outsl
sub
pop
or
je
lea
test
aaa
sub
mov
jle
add
push
jns
test
add
adc
or
jl
les
xchg
adc
data16
gs
dec
mov
pop
push
fwait
add
inc
push
rcr
xchg
adc
dec
dec
out
jmp
ffreep
cmp
cmpsb
jb
pop
sub
mov
mov
jns
sbb
inc
and
outsl
sti
fisubl
ffreep
sbb
sahf
cmp
mov
jbe
in
sbbl
notrack
adc
jl
nop
xchg
pop
xor
or
cmpl
outsl
pop
mull
call
fidivs
mov
int3
loope
xchg
jg
add
popf
xchg
out
ret
push
push
dec
sub
ret
lret
je
sbb
ljmp
jecxz
pop
std
mov
pop
ret
push
stc
adc
dec
dec
pop
cld
mov
cmp
loopne
or
inc
dec
std
pop
ret
push
stc
jmp
inc
xchg
jmp
mov
mov
movsb
pop
test
enter
sarl
adc
aad
inc
add
dec
xchg
imul
mov
std
jo
pop
mov
out
mov
insb
mov
je
fsubrl
mov
adc
mov
cmpsb
xchg
xchg
push
fstl
aad
xchg
movsb
push
pusha
push
or
mov
enter
outsb
push
inc
or
subb
and
imul
fbld
mov
cmp
xchg
push
cmp
data16
dec
jg
adcb
mov
es
mov
mov
hlt
jns
hlt
sbb
jmp
mov
and
xlat
lds
sbb
push
inc
iret
sbb
and
and
push
push
imul
adc
aas
cmc
imul
push
outsb
mov
test
add
dec
aaa
mov
xor
dec
dec
push
mov
outsl
xchg
xchg
lock
mov
add
stc
mov
jmp
iret
mov
pop
cli
xchg
test
dec
out
dec
and
iret
das
and
xor
push
rorb
jl
cmc
cmpl
dec
test
stos
sub
add
clc
stc
sti
iret
fnstenv
push
inc
push
pop
mov
sub
jae
cwtl
cmpsl
cwtl
sbb
pop
mov
or
rcr
dec
lods
xorb
fimull
mov
stc
mov
inc
bound
ljmp
aad
repz
jmp
incb
std
mov
push
scas
sbbl
cli
push
and
pop
cmp
mov
scas
jecxz
dec
mov
add
in
leave
dec
dec
mov
inc
dec
pusha
push
leave
or
inc
iret
and
movsl
ret
lods
xor
stos
sbb
test
clc
mov
mov
push
cmp
mov
fcmovnbe
sbbb
pop
cs
mov
push
das
movsb
popf
stos
aad
movd
loop
sbb
dec
addr16
rcll
insb
cmpsl
cli
andl
sub
sbb
xor
xorb
test
ja
sub
rorb
xchg
lcall
xor
dec
loope
aam
dec
push
enter
inc
pushf
mov
xor
shlb
sub
dec
mov
push
cltd
out
jp
push
mov
sti
pop
sub
popf
nop
dec
mov
inc
mov
pop
xor
mov
add
je
daa
xchg
push
fnstsw
out
scas
push
and
in
popf
loop
pop
mov
pop
jmp
inc
mov
lds
out
movsl
push
ficomps
aaa
loopne
push
inc
xchg
and
dec
shlb
or
mov
mov
rcll
add
movsb
es
mov
pop
sbb
jbe
subb
inc
mov
jp
aad
mov
into
dec
data16
pop
cmc
and
sbb
shll
inc
cmp
mov
push
jae
push
les
jae
cmp
mov
loop
data16
add
sbb
test
loop
sbb
jp
jno
mov
dec
sub
cwtl
jbe
shlb
push
push
fs
pop
in
test
test
mov
lods
js
shrb
repnz
and
and
dec
pop
or
int
xchg
and
dec
mov
out
loopne
xchg
std
xor
jns
sub
loope
imul
jp
pop
mov
jne
and
aaa
scas
out
add
and
sbb
jge
in
push
fiadds
fdiv
jo
jns
int3
pop
subl
xchg
stos
or
lea
int
xor
add
cs
fisubrs
out
sub
pop
mov
dec
pop
mov
popa
pop
in
jl
mov
ss
push
ficompl
out
mov
add
jb
cmp
stos
ret
dec
push
adc
and
jb
notb
pop
int
or
mov
popf
movsb
xchg
sbb
cmp
xchg
push
ljmp
lock
jecxz
cmp
xchg
idiv
aad
dec
pop
mov
mov
add
inc
sub
pop
inc
jl
rcr
ss
and
xchg
mov
and
xchg
rcll
sbb
in
int
and
pop
jmp
mov
xchg
or
imul
push
add
pusha
mov
add
lret
mov
aad
push
xchg
movsb
mov
pop
adc
popl
jo
sub
pop
add
cltd
xchg
js
push
xor
sbb
iret
push
fldl
xchg
mov
popf
mov
inc
repz
xor
scas
mov
loope
imul
mov
fucomip
inc
sbb
xor
leave
jmp
dec
push
adc
fisubl
and
ja
cltd
xchg
xor
sub
pop
adc
push
into
xor
push
xchg
mov
push
mov
xor
mov
outsb
add
adc
cmp
ret
shll
into
mov
js
daa
xchg
fldlg2
pop
out
es
sarl
push
das
sub
push
sbb
push
sbb
cmp
mov
or
cmpsl
xchg
jae
jb
sub
or
leave
sub
adc
pop
enter
testb
cmp
test
jb
aas
icebp
xor
std
and
pusha
cmpsb
ljmp
orb
sbb
pop
out
jo
push
pop
lret
mov
adc
jns
cmp
dec
xor
sti
dec
cmp
movsb
and
mov
cmpsb
mov
adcl
stos
aaa
mov
mov
adc
or
add
stc
mov
orb
add
mov
out
and
xor
xor
int
mov
pusha
mov
popa
cltd
or
loop
sar
sahf
jb
inc
arpl
or
stos
divl
ss
fisttps
ret
inc
sahf
pop
mov
mov
int
mov
cmp
cmpsb
and
and
adc
repnz
sub
xchg
lret
pop
lea
or
push
xchg
test
jge
xor
frstor
cld
cs
in
mov
lret
adc
pop
jg
and
rcll
push
mov
inc
das
ljmp
clc
loop
mov
xchg
pop
xchg
test
repnz
or
shrd
xchg
lock
xor
fldenv
pop
cld
xchg
add
xchg
pop
pushf
clc
mov
push
jne
std
popf
movsb
mov
jl
push
call
lods
mov
adc
and
test
loopne
inc
jg
mov
cmp
lcall
mov
pop
das
mov
fidivs
sub
mov
lahf
mov
aam
jl
jmp
sbb
imul
cmp
and
das
lods
jmp
mov
add
test
les
enter
pop
movsb
test
icebp
mov
imul
mov
xchg
in
dec
pop
ret
frstor
das
jbe
sbb
out
cmp
stos
repz
std
push
outsl
push
mov
aaa
les
pop
inc
hlt
xor
jl
dec
jns
aam
insb
stos
mov
fisubrl
mov
out
jnp
and
fisubs
imull
push
data16
fsubrl
jae
add
sbb
dec
and
mov
xchg
sub
and
cs
adc
outsl
fsubrs
mov
jne
ds
ss
inc
xchg
push
or
sbb
inc
std
cmp
inc
dec
sbb
xchg
push
jo
adc
push
mov
repnz
xor
ret
jle
icebp
ja
pop
jno
stc
popa
ficoms
stos
push
mov
and
inc
repz
ljmp
inc
xchg
scas
decb
popa
ror
push
inc
xchg
dec
xlat
mov
dec
dec
ja
xchg
xchg
or
mov
enter
dec
nop
int3
stos
mov
cltd
out
jmp
mov
push
dec
popa
dec
adc
call
jns
adc
xor
xor
xchg
push
pop
cs
lock
js
repnz
loopne
inc
stos
xor
ret
pop
mov
daa
popa
cmp
int
js
mov
adc
in
movsb
inc
push
aam
inc
xchg
inc
in
cmc
cmp
fadds
rcrb
stos
jo
jg
shl
mov
push
mov
pop
mov
mov
xlat
neg
mov
fsubrp
dec
pushw
sub
push
xchg
jle
stos
inc
sbb
lret
push
dec
popf
enterw
cmp
jl
jbe
test
pop
and
mov
mov
inc
jl
mov
add
out
adc
push
adc
mov
push
daa
jno
arpl
push
mov
xor
ljmp
cli
repz
adc
pop
inc
add
imul
sub
iret
or
cs
ljmp
aad
adc
jno
in
pop
mov
dec
sti
xor
pop
in
pop
jns
arpl
and
aam
outsb
push
shrb
bound
sub
cmp
test
or
and
and
add
mov
fnstenv
pop
inc
pop
cwtl
fsubrs
in
pop
push
cli
and
push
adc
sbb
mov
addr16
jo
adcb
ds
popf
cmpsb
fwait
sub
sbb
mov
lods
jge
sbb
push
jbe
ret
or
arpl
jo
pop
sbb
cld
sbb
inc
xchg
lods
leave
or
push
test
mov
decl
out
and
and
imul
push
jmp
pop
lret
mov
mov
rcl
test
sub
jecxz
or
add
or
or
add
and
call
adc
scas
movl
jbe
pushf
aad
lds
push
out
insb
inc
mov
out
ret
add
mov
out
andb
fdivrs
aaa
imul
mov
adc
push
or
int3
cmp
dec
mov
negl
push
jo
cmp
sbb
xchg
std
fnstsw
cs
inc
sbb
cld
dec
pop
fsubrl
in
inc
gs
data16
stc
add
sub
in
push
xchg
aaa
pop
jge
dec
ds
cmc
imul
ret
ret
mov
mov
xor
sub
cld
pop
or
out
inc
roll
test
sub
out
push
sbb
mov
xchg
cld
sub
cmp
repnz
outsb
incl
mov
out
add
jg
and
push
cmpsl
cld
sbb
xchg
xchg
xor
lea
fwait
xor
ja
inc
jmp
pop
inc
bound
xchg
movsl
sbbb
cltd
fdivrl
push
push
hlt
mov
testb
insb
cmp
jecxz
testb
aaa
fiaddl
test
push
enter
pop
mov
sub
dec
sbb
stc
pop
loop
xchg
dec
scas
xor
pop
aaa
sbb
jnp
les
in
jae
mov
sub
mov
jmp
mov
push
pushf
stc
mov
xor
mov
xchg
mulb
jmp
push
mov
flds
push
ret
sarb
lods
test
sub
xchg
es
lahf
hlt
mov
sti
sbb
les
jge
out
inc
pusha
icebp
push
cmp
jbe
push
fbld
cmpsb
fwait
xor
pop
sbb
push
mov
jmp
jmp
fidivrl
add
jge
out
dec
lea
scas
mov
mov
inc
andl
mov
dec
call
push
mov
xchg
lret
ret
popf
ds
leave
fildl
cmp
xor
movb
xchg
fwait
cmp
insb
outsb
push
push
sbb
frstor
mov
dec
in
rcll
aam
in
dec
push
lret
push
jecxz
movsl
mov
stos
data16
xor
jae
clc
enter
add
into
push
mov
ss
add
out
ds
mov
out
xor
scas
and
shrl
ss
popf
mov
jge
mov
mov
dec
adc
lods
add
cmp
xchg
jl
popa
xor
jnp
jbe
lds
ret
pop
lcall
xlat
ficoml
cwtl
adc
cmp
fsts
jns
push
gs
cmp
mov
push
pop
cmpsb
inc
clc
adc
ret
in
fwait
push
iret
mov
mov
mov
loop
and
push
fdivp
jns
push
paddw
inc
add
mov
idivb
pop
jmp
and
outsb
orl
push
clc
stos
test
loopne
outsl
ljmp
and
xor
in
sbb
jl
inc
outsb
and
out
and
inc
sub
fwait
or
xchg
sub
push
inc
rolb
adc
push
push
pop
mov
cld
lods
sub
pop
xorl
xor
arpl
pop
xchg
push
imul
xchg
cmpsl
push
or
pop
das
xchg
in
lret
xlat
and
in
in
aas
fwait
out
xor
icebp
aaa
mov
pop
sbb
popa
add
adc
push
es
xor
int3
loopne
loop
and
pop
or
dec
mov
sbb
test
shr
xchg
lcall
add
add
dec
or
hlt
shrb
or
adc
mov
out
out
or
adc
sub
sarb
loop
inc
inc
sbb
je
pop
gs
sti
es
mov
movsl
add
ret
ds
mov
rcrb
jmp
dec
sbb
mov
daa
repnz
ja
mov
fcompl
outsb
insl
rclb
mov
or
pop
cmp
and
popf
ss
cmp
inc
pop
lds
add
adc
cmp
daa
out
shr
out
shrd
adc
cmp
sbb
fs
sarb
data16
sbb
sbb
mov
mov
fs
push
shll
jp
rcrb
jg
push
dec
int
out
andl
adc
repnz
sarb
sub
test
pop
loop
arpl
aas
loop
in
test
xor
jo
jne
fsubrp
ret
mov
scas
cmp
adc
mov
pop
out
xchg
or
imul
cmc
push
loopne
icebp
or
iret
in
jbe
fwait
fs
clc
nop
cs
nop
pop
shrb
testl
xor
lods
daa
cmovl
movsb
movsb
push
or
loopne
dec
int
lock
test
xchg
dec
js,pt
shlb
push
sti
push
sub
scas
inc
adc
xchg
cmpsl
notb
jle
dec
push
xorl
jmp
sti
pop
pop
mov
xor
cmpsb
pop
xor
popf
pop
clc
repnz
sub
push
loope
jle
int
mov
xor
push
pop
dec
dec
mov
fwait
jnp
inc
sub
mov
lods
pop
pop
idivl
mov
cmpsl
ds
cmp
sub
mov
inc
mov
icebp
ficoms
pop
roll
rcll
out
out
mov
pop
push
pop
mov
cli
loop
nop
test
or
aaa
daa
ret
les
cs
cmp
push
add
mov
lret
xchg
cmc
xchg
xchg
xor
sbb
push
pop
jl
stos
lds
and
sbb
add
dec
aaa
sarl
ret
push
push
and
add
sbb
sub
std
das
push
xchg
xor
call
dec
pop
pusha
jmp
mov
fidivrl
xor
push
or
ljmp
sarl
test
push
sbb
pusha
xlat
fnstcw
and
inc
jae
out
icebp
mov
jge
sub
mov
xchg
and
mov
imul
push
cmp
insl
lods
cmp
les
jb
mov
cmp
das
add
adc
lcall
ja
test
movntq
pop
sqrtps
sbb
pushf
ret
pop
outsl
pushf
gs
insb
insb
pop
jecxz
mov
imul
jb
or
jno
lea
dec
mov
pop
mov
insb
cmp
lret
test
cli
hlt
popf
dec
lds
fisubrs
rol
pop
mov
shl
in
mov
pop
mov
lret
add
cmp
fnsave
mov
mov
shlb
or
xor
add
mov
roll
xchg
out
push
sbb
inc
and
or
xchg
arpl
adc
mov
dec
mov
in
sub
fdivs
pcmpeqb
adc
add
xchg
pop
les
fcmovbe
mov
jbe
int
data16
add
in
adc
sub
ds
shrl
invd
icebp
sahf
pusha
popa
cmp
test
in
testl
jmp
cld
popa
xchg
in
lods
push
xor
jp
push
aaa
cs
sbb
lcall
imul
dec
mov
add
pushf
mov
dec
out
mov
outsb
xchg
sub
pop
add
inc
adc
test
fnstcw
shll
xchg
les
xor
mov
jge
push
mov
mov
jne
clc
pop
adc
or
dec
icebp
ret
es
inc
cmp
subb
jecxz
cltd
mov
rcrb
mov
cmc
movsl
push
vmwrite
jbe
fstpl
mov
adc
cmpsl
push
adc
mov
into
add
pop
test
movsb
mov
movsl
jg
cltd
push
lock
fisubrs
call
loope
xor
in
les
mov
cmpsl
pop
scas
jo
push
jmp
cmp
and
push
sbb
cmc
dec
xor
fisubs
lock
fcompl
stos
jbe
movsb
mov
inc
rorl
or
fisubrl
or
and
and
push
popa
int
addl
mov
jb
or
or
icebp
mov
popf
mov
add
arpl
xchg
inc
mov
movsl
inc
sbb
push
fdiv
loope
xchg
jp
pop
sahf
insb
push
loop
xlat
int
decb
pop
scas
jecxz
imul
shlb
inc
hlt
pop
iret
fcoml
popf
outsb
add
clc
movsb
es
in
dec
sahf
clc
scas
or
sbb
sbb
aaa
movl
xchg
push
xor
xor
sbb
sub
dec
mov
clc
enter
cmp
and
jecxz
jecxz
pop
push
sub
sbb
mov
push
test
pop
repz
mov
test
mov
add
cwtl
stos
pop
outsb
dec
fs
ret
push
xchg
jmp
push
or
outsl
jne
jecxz
mov
jl
aas
mov
dec
and
xorb
popa
inc
sbb
jo
push
insl
mov
pop
shrl
sub
xor
addr16
int
push
cmc
ss
daa
mov
shlb
sub
or
movsl
push
xchg
mov
clc
jmp
inc
icebp
ljmp
xor
je
dec
pop
lret
icebp
jle
gs
mov
int
xor
shlb
mov
jle
jbe
and
clc
stos
push
mov
sbb
insb
pop
xor
outsb
in
dec
or
or
jecxz
mov
or
nop
das
xor
mov
outsb
dec
inc
cmp
xor
call
inc
mov
div
data16
dec
mov
sarl
pop
inc
mov
int3
sub
add
mov
mov
inc
mov
sub
fdivrs
test
mov
sub
xchg
lcall
lret
mov
fbld
fcom
add
leave
mov
ds
add
rcrl
mov
mov
push
push
xchg
fwait
xchg
nop
loop
js
xchg
dec
nop
jge
xchg
sub
jp
and
add
jl
xchg
aaa
dec
jecxz
mov
pop
enter
in
dec
lds
jo
int
addr16
add
xor
dec
addr16
mov
punpcklbw
je
sub
aaa
jo
imull
neg
cmp
out
cmp
sub
add
jnp
insb
js
stc
div
lcall
sub
pop
adc
jmp
or
jle
js
imul
dec
out
leave
hlt
mov
roll
insb
jmp
mov
lds
popf
fnsave
add
jns
add
push
enter
mov
jne
js
inc
sahf
js
out
and
aaa
stc
pop
in
fwait
sub
push
sub
adc
inc
push
jo
mov
sti
fdivs
mov
mov
mov
rorl
jg
in
cmpsl
cmp
loop
sub
mov
insb
mov
push
adc
inc
sbb
daa
hlt
fwait
jge
rcrb
hlt
mov
gs
push
insb
rorb
mov
dec
mov
adcl
cltd
cmp
jb
jmp
push
mov
push
in
sti
push
lods
lret
loopne,pt
imul
sbb
jns
jge
decl
cld
or
movsb
lock
scas
xor
xor
cmp
pop
js
scas
jmp
cmp
jmp
int
call
lret
iret
test
inc
mov
jns
lahf
hlt
stos
leave
dec
lahf
dec
insb
popf
adc
cmp
scas
fmull
in
stc
dec
into
xor
jp
pop
int
sub
jns
sbb
mov
pop
mov
xor
cmp
pop
mov
xchg
jle
and
and
xchg
stc
fidivrl
test
aad
mov
add
push
rorl
rorb
sub
decb
in
les
push
fistpl
xchg
in
ljmp
push
mov
xlat
insb
imul
inc
cld
mov
data16
jmp
and
xor
or
and
subb
movsb
jnp
sub
add
jmp
xor
shrl
arpl
cmp
filds
repz
xchg
cmp
das
mov
notl
dec
inc
push
out
lretw
mov
add
xchg
mov
jns
test
roll
outsb
mov
xor
adc
xchg
jne
decl
jno
cli
xor
iret
adc
outsb
mov
test
lret
sub
popa
fnstsw
xor
jo
mov
cwtl
jmp
stc
and
test
mov
add
jno
clc
mov
jle
out
cmpsb
push
lock
in
shl
arpl
stc
mov
and
adc
mov
and
push
or
test
push
mov
adc
jo
ljmp
push
out
loopne
daa
xchg
pop
clc
or
stos
nop
stos
ucomiss
das
pop
in
push
fs
xchg
stos
adc
mov
mov
popa
dec
push
sub
sbb
mov
and
cmc
mov
and
fwait
push
loop
es
pop
mov
pop
inc
push
nop
imull
insl
in
jae
xor
lcall
dec
out
push
sub
push
mov
repz
sub
test
xchg
mov
pushf
push
xchg
dec
push
subb
das
sti
mov
pusha
jbe
lds
dec
push
push
dec
jecxz
add
cli
sbb
mov
mov
cli
push
mov
rorb
pop
lcall
pop
xchg
cmc
inc
pusha
lret
call
in
stos
shlb
cmp
mov
lcall
dec
sub
pop
add
sbb
leave
push
enter
cmp
adc
jno
sub
sbb
sub
clc
lods
lret
das
and
jecxz
loop
fisubrs
pop
jb
dec
jnp
mov
add
push
loope
rorb
mov
int3
push
iret
fstl
in
push
adc
outsl
xorb
mov
loop
rolb
mov
sub
fidivs
pop
cmpsb
into
popf
mov
and
scas
mov
mov
fstpl
dec
es
dec
cmp
push
inc
pop
ds
adc
aaa
mov
sub
ja
mov
fcoms
xchg
enter
cmp
mov
xchg
iret
add
push
dec
mov
xchg
dec
lds
gs
pop
and
adc
mov
sarl
pop
cs
inc
test
loop
fiadds
jle
inc
inc
or
jae
es
cld
ljmp
divl
clc
lea
push
cs
addr16
xchg
jnp
cmp
push
inc
adc
icebp
mov
mov
push
dec
and
cmp
xor
push
add
mov
xchg
pop
xor
dec
ret
jmp
js
iret
add
pop
or
mov
out
adc
lods
std
ret
and
pop
pop
inc
or
mov
popf
inc
cmp
and
inc
fadds
movsb
loop
or
imul
lods
sub
mov
rclb
nop
xchg
popl
mov
popf
es
mov
fstp
and
ficomps
mov
call
adc
and
inc
aam
mov
imul
mov
aad
mov
push
out
xor
sbbb
mov
in
pop
inc
pop
inc
mov
cmpsl
pop
loope
cmp
insl
fildl
push
pop
fwait
lods
xchg
sahf
aam
mov
lahf
insl
mov
push
push
mov
call
jg
fwait
inc
xor
mov
and
mov
movsb
mov
mov
scas
ds
mov
inc
sub
rolb
cmpb
push
imul
cltd
imul
stc
mov
ljmp
jmp
andl
mov
outsl
movsl
mov
cmp
pop
mov
aas
stos
and
push
cmp
gs
divb
sbb
push
push
ret
mov
dec
out
int3
mov
negl
cmp
xchg
adc
push
repz
aaa
mov
jecxz
sbb
pop
dec
ret
popa
cmp
fwait
sbb
jno
cmpb
popa
shll
test
imul
loope
fistl
js
xor
popf
mov
push
in
cli
lea
mov
jbe
sbb
mov
cmc
sub
mov
add
mull
adc
mov
outsb
pop
lock
jno
test
inc
insb
xchg
mov
lods
sub
jl
aaa
mov
outsb
scas
stc
idivl
repnz
cmpsb
inc
aad
movsl
xchg
lock
xchg
lock
inc
mov
icebp
or
das
jg
scas
jmp
insl
mov
or
mov
pop
test
adc
hlt
cld
outsb
cmp
jno
mov
stos
cs
jne
in
cmpb
fwait
lds
dec
xor
xchg
dec
mov
outsb
sbb
aas
mov
xchg
push
js
dec
push
sbb
fcmovu
dec
sub
inc
sbb
mov
hlt
sub
fdivs
push
xor
scas
cwtl
sub
rcll
insl
and
insb
std
jmp
fldenv
xchg
jmp
xor
xor
subl
cmp
and
jne
imul
lret
popf
or
aaa
bound
cmp
into
sahf
adc
es
dec
popf
mov
out
das
fdivrp
push
pop
and
fwait
int
sbb
inc
pop
stc
je
test
add
jne
adc
xor
mov
xor
cmp
dec
loopne
inc
daa
jg
or
mov
jo
and
dec
push
or
sub
inc
lcall
loopne
lahf
xor
mov
jnp
mov
and
pop
mov
gs
js
rcl
rcll
sub
repz
jle
or
sar
adc
push
dec
popa
mov
adc
rcll
loop
xor
imul
lods
pushl
int
add
dec
fsubs
pop
adc
mov
pop
imul
xor
adc
mov
mov
imul
sub
loopne
cmc
mov
cmp
jbe
mov
dec
repnz
jbe
xchg
insl
std
or
add
orl
xor
in
lea
pushl
pushf
jle
adc
mov
testb
ret
les
or
push
scas
pushf
enter
insl
out
jbe
dec
mov
testb
push
and
out
xor
dec
ficoml
mov
pop
mov
jbe
mov
xor
cmp
xchg
into
mov
das
stos
lcall
gs
add
addb
outsb
sti
out
in
mov
lret
inc
jp
imul
add
movsb
lock
lahf
dec
mov
sub
das
cmp
insb
push
js
adc
pminsw
jo
pop
mov
pop
mov
pop
enter
vmulss
andb
ljmp
and
mov
or
cmpsb
mov
jnp
cmpsb
or
pop
mov
pop
cwtl
inc
xchg
ret
loope
std
inc
sbb
out
adc
and
repz
lahf
lret
dec
out
aad
pushf
ljmp
movsb
mov
inc
fcompl
data16
and
mov
cmp
and
in
mov
cltd
es
mov
je
xchg
push
pop
push
pop
je
fs
in
mov
sbb
int
or
sbb
lcall
ds
pop
cmp
rclb
notl
vunpckhps
outsb
adc
adc
inc
sbb
cltd
arpl
xchg
cmp
notl
lea
fadds
insb
dec
cmpb
in
cmp
data16
cmp
and
fcoms
cmpsb
cmpsb
insl
je
sub
gs
sbb
pusha
mov
lret
or
adc
inc
mov
cpuid
cmp
lock
sti
sub
jg
negb
pushf
pop
mov
jbe
mov
inc
jae
inc
out
or
jnp
mov
xor
xchg
std
push
hlt
das
pushf
lea
mov
jmp
inc
movsb
inc
mov
mov
pop
jo
pop
sub
pop
es
inc
movsl
pop
mov
jle
cltd
movsb
or
push
enter
cld
out
cmp
cmc
mov
ret
lds
fsubrl
lahf
pop
dec
leave
out
mov
mov
out
push
jno
lds
xchg
adc
fistps
add
jecxz
xchg
sub
push
lods
roll
divl
mov
cltd
push
inc
xor
lahf
dec
and
jecxz
sbb
rorb
push
fs
lret
jle
cmpb
cmp
pop
mov
cmp
call
jns
ret
fs
and
test
xor
arpl
jl
es
inc
ds
add
sbb
pop
jne
sub
inc
cmp
add
rol
dec
sbb
mov
pop
iret
mov
xor
mov
je
insb
mov
pushf
hlt
and
jae
push
inc
imul
or
cmp
xchg
js
rcrl
or
pop
jns
loopne
rcrb
inc
fmull
xchg
or
cmpsb
test
loope
loopne
dec
std
stos
outsb
xor
mov
adc
divl
lahf
jae
cmp
je,pt
inc
gs
add
test
lahf
loop
fwait
loop
mov
inc
mov
jo
dec
push
xor
in
cwtl
adc
xor
shll
fiaddl
inc
stos
mov
clc
add
js
jg
loopne
pop
add
jmp
cmp
fstl
sub
sub
mov
adc
jb
push
inc
cmpsl
and
movsl
outsb
mov
aaa
outsb
and
aas
mov
icebp
jg
dec
scas
fistl
rcrb
sub
xor
adc
add
or
adc
mov
mov
inc
or
int
add
pop
sub
jo
int
lahf
dec
repz
int
xor
push
enter
or
pop
andl
dec
cltd
push
repnz
cmp
pop
mov
ret
fisubs
pusha
pusha
mov
cmpb
push
jp
mov
icebp
cmpsb
xor
mov
loopne
push
adcl
in
push
xchg
addr16
lods
mov
mov
stos
mov
testl
lret
mov
mov
or
cld
movsb
pusha
daa
in
pop
xor
adc
and
loope
orb
fsubl
das
cmp
and
mov
and
js
sub
clc
mov
repz
aad
xor
mov
xchg
sub
sub
popf
xchg
sbb
cmc
inc
dec
iret
aaa
mov
cmpl
add
dec
in
movsl
popl
add
pop
and
cmpsb
std
mov
cmpsl
daa
lea
mov
sbb
std
hlt
push
push
adc
shll
xchg
mov
stos
sub
push
mov
jecxz
mov
pushf
sbb
jecxz
or
cli
scas
loop
and
pop
arpl
shlb
push
gs
loope
rcrl
mov
and
cmp
adc
int3
je
xchg
mov
sysexit
adc
or
and
sbb
push
adc
mov
enter
insl
mov
das
cwtl
pushf
in
inc
out
loopne
int
sub
imul
push
push
inc
mov
sub
gs
xorl
repnz
xchg
mov
cmp
cld
flds
lcall
pop
sarl
sarb
xor
push
inc
pop
add
fdivrs
iret
pushf
into
mov
mov
fdivl
pop
mov
sub
repz
mov
mov
jecxz
fildll
shrb
mov
loopne
sub
push
enter
sbb
in
ja
sub
inc
push
pop
adc
lods
gs
xchg
aaa
mov
daa
cmp
jae
in
icebp
hlt
shll
rcrb
fwait
ds
mov
sbb
push
push
cmpsb
jae
add
test
inc
jns
add
xchg
pop
xchg
inc
cmp
push
mov
xchg
and
in
mov
push
jno
inc
adc
push
imul
inc
or
and
jmp
dec
push
adc
ja
push
inc
ret
mov
in
cli
inc
dec
xlat
cmpsb
jbe
inc
mov
xchg
int
sub
mov
mov
xchg
cwtl
insl
push
aas
cmpsb
cmp
in
jnp
mov
loop
dec
stc
or
push
mov
lds
nop
xchg
push
add
mov
aaa
test
lea
inc
adc
jns
std
sub
aad
rcrl
xor
loopne
imul
xor
jnp
push
je
rol
pop
out
mov
sti
or
aaa
push
scas
scas
and
adc
inc
or
aas
js
mov
xchg
mov
push
inc
push
imul
inc
inc
test
shl
nop
ss
push
in
mov
mov
xchg
pop
pushf
jno
push
xor
inc
sbb
push
flds
push
xchg
jmp
xchg
push
fcomps
mov
mov
sbb
cs
in
inc
jbe
loope
int
rcrb
ror
dec
cmp
jmp
loop
lods
sti
loop
scas
sahf
mov
inc
jns
sti
adc
pushf
aas
push
lret
movsb
jmp
fsubrs
inc
inc
jp
cltd
inc
add
and
cmc
cli
gs
sub
pop
mov
pop
popf
in
iret
sbb
push
jno
add
leave
inc
pop
dec
mov
mov
jp
or
pop
jno
jp
and
addr16
fwait
jnp
subl
dec
insb
mov
xor
out
pop
in
dec
sub
pop
xchg
movsb
cmp
xchg
mov
xchg
push
add
sub
in
mov
add
mov
push
sarl
mov
into
mov
jmp
cmc
imul
or
stos
mov
mov
fs
jns
push
mov
mov
in
sbb
in
daa
adc
xchg
mov
call
cltd
incl
pop
lret
repz
push
stos
fimuls
arpl
xchg
movl
test
repz
std
mov
test
lods
adc
xor
add
ljmp
adc
imul
stc
inc
in
arpl
cmp
insb
push
mov
int3
cmpsl
notl
inc
push
clc
jnp
or
jns
xchg
cmc
sub
adc
das
ja
arpl
imul
pop
xchg
inc
cmp
lahf
stos
in
es
faddp
stc
movsl
test
cmc
lahf
jnp
daa
stos
xor
cltd
mov
dec
mov
jno
in
jb
aad
push
pop
mov
cmpsl
cwtl
add
adc
push
stos
jbe
xchg
mov
mov
push
mov
xlat
scas
les
xchg
stos
cld
into
insl
rol
nop
push
in
dec
xlat
or
cmpsb
testb
pop
mov
call
push
mov
insb
mov
cmp
ror
sbb
jne
sbb
lods
movsb
scas
or
icebp
js
fcoml
mov
scas
and
jae
mov
xor
cmp
jle
or
int3
ss
sub
push
test
hlt
adc
pop
add
ja
or
pusha
xchg
leave
adc
or
loop
xor
pop
adc
hlt
push
cld
and
and
movb
mov
repz
fcomps
mov
xor
test
xchg
jecxz
jns
sahf
cli
push
mov
sbb
push
push
mov
dec
shl
fs
cmp
and
lock
nop
out
jns
inc
inc
xorl
mov
jg
push
outsb
dec
clc
loope
movsb
lock
pop
push
imul
ds
das
out
add
mov
adc
xor
das
jae
add
jle
pop
mov
add
push
test
fcmove
dec
mov
cld
mov
pop
mov
repnz
dec
and
call
movsl
hlt
mov
outsl
and
das
mov
mov
test
sahf
dec
das
xchg
and
dec
aam
fs
outsl
mov
dec
mov
inc
lahf
fstpl
pushf
shlb
mov
shl
cmp
sarb
sarb
sbb
xchg
pop
inc
shlb
fs
inc
add
mov
adc
cmp
stos
int
fwait
mov
fdivl
cld
cmpsl
and
inc
fcom
test
push
push
jns
xchg
cld
fstl
mov
add
mov
stos
mov
cmc
jmp
ja
mov
fldt
aad
in
xchg
imul
add
add
mov
push
test
ja
lods
popf
dec
inc
sbb
repnz
add
inc
popa
dec
mov
dec
outsl
sbb
imul
das
or
mov
cld
pop
pop
sbb
call
loope
outsl
xor
mov
fiaddl
dec
and
xchg
mov
xchg
cmp
mulb
jne
pop
ret
clc
inc
jb
clc
icebp
mov
ror
rorb
dec
imul
cld
movsl
les
sub
mov
pop
mov
stos
push
jb,pt
loop
icebp
xchg
fcmovu
pop
scas
nop
push
test
or
mov
push
jb
push
adc
mov
pop
std
icebp
jmp
pushf
jp
call
cmc
xor
sbb
xchg
xor
pop
inc
rolb
lret
pop
and
mov
ds
data16
jecxz
out
pop
in
fdivs
xchg
sbb
int3
jne
pop
out
icebp
rol
ljmp
dec
aaa
pop
add
arpl
repnz
xchg
mov
cmpsb
push
xchg
mov
jmp
mov
fstps
arpl
loopne
xlat
in
pusha
bswap
ja
xlat
lahf
sub
out
add
loopne
shll
into
shll
inc
xor
imul
lock
add
stos
xchg
out
adc
ljmp
mov
pop
xchg
pop
or
xchg
add
push
pop
mov
push
push
sub
stc
movl
fs
pop
mov
inc
sbb
out
into
pop
pop
jbe
cld
test
scas
pop
imul
scas
in
pop
mov
dec
push
push
dec
sbb
add
mov
and
pop
and
jg
mov
add
mov
sub
sub
xlat
inc
adc
lea
jns
daa
xchg
insl
stc
xor
xor
pop
cmp
adc
or
fnstsw
popa
lcall
inc
and
xchg
repnz
call
ret
movsb
inc
inc
int3
sti
jmp
add
mov
push
cmpsl
out
push
call
jbe
xchg
sarb
xor
repnz
xor
jp
repnz
adc
imul
popf
imul
mov
test
xor
aad
stos
or
insl
xchg
dec
jo
rol
mov
adc
xor
loope
or
or
out
popf
cs
leave
jl
lods
icebp
in
loope
arpl
scas
bound
mov
pop
les
test
jne
shlb
add
adc
call
nop
mov
push
pop
clc
sbbb
cmc
xor
push
sub
popf
xchg
in
js
loope
push
or
dec
fnstenv
push
cwtl
xchg
popa
je
ficomps
add
mov
mov
push
cwtl
js
xchg
add
stos
adc
jp
mov
int3
push
push
mov
jne
lret
jl
xor
inc
sub
ret
fsub
xchg
cmp
jo
shl
or
adc
jmp
cmp
add
adc
repz
cltd
das
call
sbb
or
in
pop
add
pop
add
push
sarl
in
pop
aas
test
fwait
xor
xor
mov
and
xcrypt-cbc
cmpsl
adc
mov
jge
xor
in
dec
jnp
ret
inc
test
fnop
xor
fmull
addr16
push
out
push
movsl
and
push
push
adc
jbe
pop
std
lcall
jecxz
test
xor
push
shl
jp
jne
fimuls
test
jg
xchg
arpl
call
mov
push
ljmp
js
push
mov
out
pop
xor
mov
sub
push
das
xchg
push
pop
in
mov
jne
pop
inc
push
mov
mov
lock
jl
imulb
popf
mov
cltd
mov
cmc
push
mov
pushf
popf
cld
out
mov
rolb
push
adc
push
rcrl
repnz
ret
add
in
jle
sti
aam
daa
xchg
cmp
xchg
cmp
adc
xlat
inc
lods
loopne
stc
test
arpl
cltd
aad
icebp
cwtl
and
aas
cmp
and
daa
push
jmp
js
sbb
ret
add
cmp
push
inc
out
in
loope
cmp
test
sbb
dec
scas
pop
ret
clc
and
fwait
and
ds
jne
or
add
cmp
jl
mov
and
pop
popf
aaa
ror
call
ja
pop
cmpsb
lods
je
sub
xor
iret
push
out
fldl
pop
test
push
cmpsl
xchg
mov
fsubrs
xchg
scas
ja
or
push
shl
pop
or
shll
mov
lret
push
xor
imul
rorb
xchg
orb
xor
mov
arpl
popa
insb
pminsw
push
or
fdivs
sbb
scas
inc
divb
incl
orb
jo
push
ss
push
adc
cli
sub
jecxz
cmpsl
xor
pushf
xor
cmp
lods
inc
popf
ljmp
dec
scas
scas
fdivl
iret
mov
adc
cmp
stos
sti
mov
in
lea
add
clc
test
test
inc
je
push
mov
popa
mov
pop
sbb
enter
ja
movsl
adc
push
loopne
lret
push
je
cmp
dec
dec
mov
call
and
loopne
mov
xchg
or
rcrl
inc
jns
inc
arpl
sub
mov
sbb
mov
pop
sub
adc
inc
or
ds
push
cmp
insl
fwait
sub
xchg
sub
fucomi
xchg
or
sbb
add
ss
dec
test
es
adc
xor
gs
icebp
cmp
fisttpl
cs
into
pop
sub
cmp
fcoms
jle,pt
pop
push
sahf
jnp
out
je
xor
subb
cmp
or
sub
js
test
lods
lods
sbb
adc
jg
pop
push
jne
bound
sarl
xchg
push
cmp
xor
jns
add
adc
and
and
in
adc
add
in
lds
sbb
repz
call
add
aaa
xchg
xchg
out
mov
js
scas
xchg
ja
jl
bound
mov
sbb
mov
mov
call
cwtl
and
stos
les
call
xchg
popf
decl
mov
test
outsb
mov
jo
icebp
fs
mov
push
dec
mov
mov
push
sub
mov
adc
mov
sbb
out
test
mov
xor
sbb
lcall
pop
adc
test
imul
mov
inc
inc
inc
mov
pop
scas
aad
in
fsubrs
aam
addl
sbb
jp
nop
pop
inc
adc
xorb
mov
incl
lods
sub
aam
cmc
addr16
jnp
sbb
dec
mov
fstps
in
pop
insb
adc
fisttps
icebp
sub
xchg
cli
jg
and
repz
cli
mov
int3
mov
inc
mov
repnz
stos
jecxz
outsl
dec
cmp
aaa
pop
mov
pop
add
hlt
push
jae
shl
sub
lock
repnz
nop
xchg
aas
jge
inc
test
pop
sar
outsl
pop
push
cmp
loopne
mov
daa
jmp
clc
sub
aas
cmc
add
mov
imul
in
in
inc
hlt
sub
add
pushf
icebp
test
mov
pop
jmp
iret
repz
lock
lahf
loop
xchg
mov
data16
inc
and
push
inc
jecxz
inc
lret
fdiv
imul
ret
xor
xor
fwait
sub
testl
and
dec
fistps
and
in
xchg
add
movzwl
stos
mov
mov
push
dec
aaa
test
js
ret
jns
ror
or
jmp
xor
movsb
pop
pop
dec
sub
dec
mov
fwait
lods
stos
lea
xchg
push
mov
inc
adc
inc
and
push
jmp
mulb
adc
repz
insl
mov
fildll
mov
adc
jge
mov
lret
je
icebp
mov
mov
push
xor
adc
sub
in
das
mov
bound
int
mov
xchg
lret
insb
push
mov
mov
and
enter
push
inc
or
sarl
out
pcmpeqd
sub
jecxz
fs
push
pop
mov
stos
subl
cmp
mov
jnp
and
jae
sub
sbb
sub
sbb
cli
xchg
clc
out
subb
dec
insl
and
icebp
pop
sbb
fwait
dec
aad
lea
mov
inc
cltd
cmp
insl
add
add
sbb
push
fs
jecxz
push
pop
int
cmp
inc
out
aas
movb
call
cmc
lcall
xchg
popa
and
sbb
lock
mov
pop
xor
testl
int3
sbb
mov
add
adc
dec
xchg
fs
xchg
popf
or
push
xchg
lahf
hlt
cld
outsl
cmp
jbe
push
insl
push
or
dec
popa
and
pop
fldt
mov
xchg
test
mov
movsl
xchg
and
inc
fistpll
mov
sbb
push
scas
jne
pusha
shr
ss
adc
sub
mov
sbb
dec
fwait
push
sti
inc
inc
jne
cmp
xchg
shrb
lods
jmp
sti
and
push
or
sti
stc
and
es
mov
jg
data16
cmp
xlat
sub
sub
int3
stos
jge
pop
jno
pop
cmp
add
sbb
mov
push
push
cli
push
sti
mov
pushf
add
mov
fs
sbb
test
push
cmp
jnp
jb
mov
xor
hlt
and
loope
ja
insb
into
inc
mov
pop
sti
sub
aad
cmp
mov
jmp
push
push
in
imul
cwtl
clc
cmp
jl
cltd
jns
add
inc
xor
mov
jo
push
jno
xor
mov
xchg
nop
xor
dec
pushf
movsb
add
mov
sub
sub
dec
dec
loop
in
sahf
or
inc
lods
xor
leave
sub
inc
imul
lods
mov
and
ja
mov
repnz
or
dec
jno
inc
rcll
lods
push
ss
aad
xchg
jmp
push
icebp
or
imul
test
dec
mov
out
or
push
xchg
add
clc
js
fldt
inc
lcall
mov
jnp
pop
outsl
or
jae
add
mov
jae
or
xor
xchg
loope
mov
in
aas
jo
ja
aam
push
aaa
jns
mov
testl
rorl
sbb
pop
push
mov
jecxz
jnp
movl
mov
ljmp
test
test
mov
mov
movb
decl
xor
imul
cmp
mov
sub
xchg
fs
and
insb
cmp
inc
fiaddl
movsb
in
push
aad
cmp
dec
repnz
test
loope
test
in
adc
and
ficoml
fmuls
push
aas
dec
out
inc
enter
nop
xchg
or
sub
push
mov
sbb
sar
inc
sbb
sbb
scas
or
mov
jno
add
inc
outsl
jnp
push
cmc
mov
pop
push
incl
cmc
scas
add
add
and
out
cmpsb
xor
ret
adc
cmpsb
imul
dec
cli
or
mov
mov
inc
arpl
stos
clc
pop
sub
pop
cmp
shlb
movb
push
mov
mov
add
ficoml
and
push
jno
and
push
inc
std
pop
stos
add
sbb
pushf
push
sbb
xchg
std
fdivrp
cmp
int
xchg
in
ror
mov
dec
int3
adc
mov
sbb
mov
jp
sub
in
ret
cmp
inc
mov
dec
mov
or
movlps
out
add
mul
add
pop
stos
icebp
jb
pop
int3
or
mov
or
cmp
stc
inc
fs
pop
mov
movsb
push
add
mov
enter
leave
lods
dec
leave
mov
ss
xor
fst
sub
jmp
lcall
es
push
and
push
daa
outsb
inc
es
mov
add
mov
nop
ja
pop
sub
ffree
iret
insl
jbe
arpl
ds
icebp
dec
push
and
dec
leave
jle
and
sahf
arpl
daa
pop
xchg
inc
mov
jns
mov
bound
repz
imull
xor
push
push
lcall
jl
stos
cmp
mov
adc
xlat
clc
adc
outsb
push
mov
test
repnz
push
pop
test
lret
adc
push
jne
incb
ss
ja
sub
mov
inc
lahf
movsl
pop
adc
lcall
adc
xor
popa
adc
adc
sbb
inc
cltd
mov
arpl
mov
xchg
adc
push
xchg
pop
insl
repz
mov
loope
lahf
mov
std
pop
or
sub
xchg
aaa
push
dec
sar
or
push
mov
push
mov
and
fstps
mov
jne
push
and
leave
sub
scas
stc
mov
or
andl
rorb
pop
xlat
fwait
xchg
xchg
lods
push
pop
lods
cwtl
fbld
cld
sbb
arpl
adc
mov
mov
fstpl
andb
into
les
mov
mov
xor
push
cmp
hlt
pop
inc
xchg
icebp
add
cli
xchg
adc
inc
inc
push
leave
mov
cmpsb
push
in
in
in
andl
das
dec
lds
jmp
pop
in
arpl
add
jg
xor
and
inc
adc
or
mov
out
mov
push
push
lds
cmp
mov
mov
out
aam
loopne
outsb
lock
inc
fisttpl
loope
dec
pop
jmp
dec
jb
xlat
push
inc
xchg
lcall
imul
xor
cli
out
std
mov
sbb
xchg
jg
xchg
and
das
cmpsb
jge
pop
das
and
shlb
xor
out
mov
adcb
sarl
push
xor
sbb
xchg
loop
in
into
dec
addr16
loope
arpl
fs
dec
inc
stos
jns
out
push
lret
pop
jae
cmp
jle
aaa
movl
fucomi
cmp
adc
and
cmc
int
xchg
loope
jle
or
push
or
rcrl
test
nop
repz
mov
cs
xchg
xchg
pxor
mov
and
inc
mov
cli
add
cmc
pop
sahf
mulb
jecxz
aam
sub
mov
inc
mov
pop
scas
add
cmp
inc
xchg
lcall
pop
sub
mov
mov
cmp
cmpl
push
ss
dec
sti
shll
lret
shrl
gs
sbbl
add
dec
adc
ret
scas
cmpsb
iret
outsl
adc
push
sbb
loope
fs
cmp
sbb
out
push
push
rcr
popf
jae
mov
or
mov
jge
mov
mov
jnp
xchg
cld
addr16
js
das
sti
dec
dec
outsl
cwtl
mov
jge
push
pop
add
push
mov
aas
xchg
jne
xchg
cmpsl
push
push
fists
lods
jecxz
mov
adc
xor
xor
sbb
mov
out
inc
test
and
mov
mov
ljmp
fisubrl
adcl
aad
mov
sub
call
in
sti
shlb
enter
jg
cwtl
pop
mov
int3
popa
aaa
adc
jns
in
out
mov
push
jmp
xchg
lock
loope
dec
loopne
scas
loopne
shll
and
or
mov
sub
dec
or
sub
inc
push
cmpsb
xchg
mov
aas
sub
mov
jo
adc
xchg
popf
xor
pop
ja
data16
xchg
ror
or
or
movsl
xor
pop
or
push
ds
jmp
push
pop
and
es
mov
inc
cmpsb
pop
cs
pop
jecxz
push
mov
seto
nop
rcrb
in
cli
or
xchg
inc
xchg
xchg
lret
dec
jbe
push
arpl
adc
aaa
push
int
pop
xor
or
das
mov
pushf
sub
mov
or
xor
rcll
or
lahf
dec
outsl
mov
xor
mov
mull
stc
or
idivb
inc
jne
or
cs
in
in
movsb
xchg
cmp
jmp
sbb
hlt
jge
fsubrl
inc
dec
add
mov
xor
sub
lret
shrb
outsl
dec
cmp
mov
sarl
mov
movsl
notb
roll
jne
dec
jb
bound
xchg
jg,pt
sbb
mov
pop
ja
and
xchg
dec
or
bound
mull
pop
iret
or
int
jo
mov
inc
cmp
addl
mov
lahf
push
push
add
into
pusha
sub
xchg
js
cmp
jecxz
inc
push
shll
adc
cmpsl
pop
lahf
or
fldt
inc
jno
outsb
std
cld
and
cmp
lods
and
pminsw
pop
ljmp
cmp
loop
in
popf
cmpsb
popf
adc
cmp
test
push
data16
inc
test
mov
push
jo
sbb
fadds
push
out
inc
add
jbe
xlat
push
xor
or
insb
xchg
push
inc
jmp
subl
or
jo
loopne
out
movsb
lock
cld
add
jg
sbb
cmp
xchg
mov
pushf
cmp
push
arpl
inc
test
or
ds
cmpsb
jp
jo
mov
dec
hlt
mov
sub
das
sub
cmp
lods
jae
sti
int3
xor
mov
ss
ds
je
xchg
sbb
inc
idivl
test
mov
gs
sbb
out
dec
cs
out
in
jae
mov
inc
xor
jne
adc
push
bnd
mov
icebp
mov
push
stc
enter
dec
sti
xchg
cmpsl
pusha
mov
jbe
subl
pop
mov
push
inc
mov
xchg
addb
mov
leave
cmp
pusha
add
pop
xchg
pop
mov
jno
rol
scas
mov
cmp
push
hlt
mov
mov
movsb
dec
add
insl
pop
dec
sbb
popl
sub
pop
jb
push
mov
mov
test
clc
repnz
or
fldenv
loope
popf
rolb
xor
lea
xor
xor
shlb
push
in
sti
xor
and
dec
xchg
push
mov
rolb
adc
insl
aaa
xlat
fildl
addb
xor
dec
arpl
jno
sti
fstl
jnp
jge
mov
rcrb
dec
cld
pushf
xchg
jp
xor
dec
cmp
sub
ret
mov
mov
and
sub
jmp
add
pushf
mov
pop
adc
or
jmp
lods
enter
xor
push
lea
dec
out
sti
fisubrs
loope
lods
stc
test
mov
loopne
mov
stos
sub
mov
pop
sbb
adc
pop
adc
pop
ja
sub
sti
jb
lods
loope
xchg
push
xor
sbb
push
lcall
mov
push
test
and
out
jno
pop
mov
push
dec
adc
lret
in
push
xchg
enter
sahf
stos
js
jae
xlat
imul
sub
sbb
test
call
nop
cmp
cmpsb
lret
cld
push
imul
addr16
fcmovu
pop
mov
inc
adc
pop
mov
xchg
imul
mov
push
outsb
ror
call
or
dec
clc
jl
into
mov
sbb
mov
sbb
xchg
testb
jae
das
sub
cmc
inc
fadd
subb
dec
cmp
cmpsl
xchg
xor
test
call
jb
into
adc
ss
in
lods
inc
pop
sub
outsl
ja
mov
mov
sar
dec
and
dec
cld
stos
in
jb
mov
das
popa
fldenv
dec
cwtl
adc
testb
dec
adc
cmp
and
iret
inc
subb
test
sub
cld
cmp
addr16
sub
dec
int
adc
mov
and
mov
daa
mov
call
pop
dec
cld
rcrl
scas
sbb
xchg
jge
notl
mov
daa
adc
pop
jge
dec
jbe
cltd
les
add
adc
repnz
andl
mov
mov
sub
xchg
push
mov
insl
pop
mov
push
imul
inc
pop
jo
incl
dec
icebp
mov
xor
sub
mov
scas
enter
mov
mov
adc
lahf
stc
loopne
cpuid
ja
in
jp
cmp
movsl
lahf
lea
jp
arpl
jbe
iret
pusha
jb
mov
push
aam
loopne
cltd
setl
pushf
inc
add
aad
insl
mov
adc
mov
add
sub
fdivp
movsb
or
inc
stos
and
out
sub
ds
movsb
orb
inc
ficomps
push
inc
call
xor
jne
test
popf
mov
sub
les
outsl
int
pop
adc
test
repnz
xor
fstps
stos
out
aad
sbb
shlb
push
sub
xor
arpl
sub
push
mov
xchg
call
xchg
inc
lods
sbb
adc
jecxz
int3
xchg
and
stos
lds
clc
inc
mov
ror
xor
sbb
fwait
sbb
jmp
pop
pop
fnstcw
inc
orl
inc
pop
lret
pop
mov
nop
out
loopne
xlat
push
lds
cmp
xchg
fidivrs
jno
jns
inc
je
jp
bound
pop
jnp
lahf
test
jmp
bts
mov
jns
scas
inc
push
cmp
rcrl
adc
jecxz
xlat
cmp
stos
cmp
mov
or
popf
and
cmp
dec
cmp
int3
and
pop
mov
dec
rclb
pop
lods
filds
stc
xor
lea
jmp
jne
pushf
xor
push
mov
adc
dec
mov
pop
mov
add
sub
or
adc
test
xor
xor
sub
xor
aaa
mov
bswap
xchg
jbe
mov
adc
cmp
flds
shll
pop
lods
jo
xchg
adc
bound
aaa
fsubl
rorb
adcl
fwait
je
jne
call
sbb
sahf
daa
xor
out
ljmp
sti
clc
xor
ret
movb
sub
xor
sbb
daa
dec
add
add
inc
gs
popa
inc
and
inc
fisubl
dec
sbb
mov
gs
sub
lret
jnp
clc
sbb
mov
and
mov
dec
mov
loopne,pn
fidivrl
int
and
xor
mov
push
push
lods
mov
inc
jo
fidivrs
pop
call
add
aad
mov
das
ret
sbb
ja
push
inc
std
stc
in
push
sub
mov
push
out
jae
stos
fs
jns
jne
test
test
cltd
jmp
frstor
lds
xor
push
cmpsl
cmp
push
mov
sbb
rclb
jl
adc
mov
jns
mov
xor
ljmp
mov
inc
push
movsl
test
fcomps
arpl
cs
out
pop
jp
lock
dec
fsts
jb
jns
out
jmp
cmp
cld
cmc
lods
xchg
in
scas
aam
fwait
hlt
mov
rcll
call
xchg
sbb
jle
in
sub
lret
int3
popf
pop
vcvttps2dq
xor
push
push
jg
mov
adc
jnp
mov
sahf
icebp
jb
leave
mov
cwtl
mov
adc
push
scas
jg
dec
sbb
scas
jp
jp
dec
imul
repnz
jae
repz
stos
je
mov
dec
dec
jbe
lods
repz
cld
cmp
std
jae
jns
stos
mov
push
mov
ljmp
dec
xchg
js
pop
cmp
mov
dec
add
into
jp
xchg
pop
fisttpl
inc
getsec
dec
leave
mov
mov
daa
jb
bound
or
xchg
je
xchg
mov
aas
addr16
inc
xor
in
or
sub
lahf
jae
pop
call
push
out
and
insl
lea
or
mov
mov
ds
test
xchg
xchg
imul
add
cmp
stc
add
inc
mov
adc
adc
mov
cmc
lods
aad
in
sbb
pop
jl
xchg
data16
in
fwait
mov
xchg
repz
js
xor
cmc
cld
scas
clc
enter
cwtl
aad
dec
loopne
mov
sbb
jmp
inc
push
orb
pop
inc
fxch
ljmp
lcall
ret
adc
sub
sub
hlt
pop
outsl
pop
mov
sti
rcll
ds
ja
pop
jo
mov
andl
adc
sbb
inc
lahf
call
mov
jmp
and
mov
aas
and
arpl
fsubp
dec
popf
outsb
fs
shrl
add
mov
sub
push
mov
xchg
or
popa
xchg
out
popf
fstl
aad
cmp
in
inc
movsb
sbb
push
jecxz
mov
mov
mov
cltd
and
dec
test
lods
test
pop
jb
jmp
sub
fadds
sahf
lret
nop
in
fisttps
cmp
frstor
lods
mov
mov
jg
repnz
mov
rolb
or
jge
sub
sbb
leave
push
xlat
mov
dec
cmpsb
hlt
push
movsl
or
jge
jle
mov
ss
mov
in
out
cld
lcall
inc
rcrl
ret
dec
add
cmp
xchg
test
lahf
mov
mov
movsl
and
inc
jmp
dec
pop
cld
cmp
pop
jl
fldcw
adc
mov
xchg
pushf
adc
cmpsb
push
inc
jb
movsb
nop
xchg
or
mov
xchg
pop
lret
xor
inc
and
add
ficomps
ret
sbb
jge
mov
mov
call
int
sti
xchg
push
mov
jmp
adcb
push
mov
push
ja
jp
push
movsl
orb
int
xchg
jl
xchg
sbb
out
mov
rcrl
mov
sub
ret
fwait
icebp
fstl
mov
outsb
filds
ljmp
pop
les
cmpsb
imul
cwtl
mov
adc
out
fisubrs
dec
sbb
test
test
imul
mov
ss
mov
xor
xor
ja
or
adc
fidivl
mov
stos
je
or
ss
mov
mov
pushf
mov
rclb
out
cmpl
or
mov
or
scas
ss
mov
dec
ss
pop
int
cmp
mov
inc
ret
xor
sub
orb
add
mov
jl
lcall
lret
sbb
jne
das
inc
push
mov
aas
sbb
js
or
clc
fwait
int
outsb
test
ss
and
push
orl
bound
push
xchg
mov
outsb
fdivrp
in
mov
sbb
cmp
lss
cmp
xlat
hlt
push
adc
pop
dec
pop
inc
and
sbb
in
loop
test
and
xor
sbb
leave
ljmp
xlat
clc
xchg
mov
std
cmp
dec
rclb
rol
xor
adcl
xchg
add
insl
sti
push
cwtl
ret
jmp
dec
mov
or
xchg
or
mov
mov
arpl
daa
test
leave
mov
mov
dec
insl
or
lods
fimuls
scas
stos
outsb
inc
push
jmp
stos
in
push
xchg
and
rcr
mov
mov
mov
push
paddb
cmp
xor
shll
sbb
cmp
cmp
jle
shll
jmp
lea
ret
rcll
sbbl
cmpsl
lods
sbb
dec
add
into
inc
xchg
mov
push
loop
ds
adc
les
icebp
push
lea
cs
mov
mov
push
nop
dec
fwait
icebp
xchg
cmp
sub
insl
insb
mov
inc
jmp
add
rorb
movsb
ja
in
inc
addr16
mov
out
xor
jmp
jns
mov
cmp
pop
push
and
aam
xlat
pop
jl
scas
xor
sub
jl
repnz
cmp
sub
lahf
mov
mov
lea
mov
push
cmc
lahf
cmp
ljmp
ret
cmp
inc
mov
add
xor
jle
ljmp
push
aad
inc
mov
add
adc
mov
call
pop
xor
iret
pop
addr16
addr16
dec
jno
or
es
es
jbe
mov
je
adc
leave
mov
xchg
test
sub
sub
fdivrp
add
sahf
jno
loope
mov
int
hlt
inc
cmp
sbb
dec
cmp
jo
adc
xor
add
call
xchg
jmp
stos
jae
std
ljmp
sbb
pusha
stos
loopne
push
addr16
pop
rorb
xchg
enter
inc
pop
mov
add
push
or
sub
out
shll
xchg
dec
pop
int3
fisubrl
inc
fadd
leave
add
sub
push
jb
fwait
lea
int
xor
cltd
cmp
mov
adc
enter
sub
ret
inc
jnp
ret
in
mov
repnz
pusha
jne
mov
and
mov
int3
or
inc
jp
int3
jnp
push
add
jb
daa
loopne
addb
mov
rorb
sbb
push
adc
xchg
lods
imul
out
pushf
xchg
sarl
mov
into
cmc
movsb
sub
pushf
sub
pop
int3
cmp
and
push
bound
es
pop
sub
cmp
mov
cmc
jnp
jno
repz
push
mov
pop
push
fistpl
fisttpl
add
into
xor
cmp
push
daa
or
add
lods
fs
sub
sahf
jecxz
jns
pop
add
stos
and
xchg
aaa
xchg
pop
test
jnp
xchg
mov
inc
pop
pop
pushf
xor
pop
fs
sbb
push
and
enter
imul
add
pop
pop
roll
ljmp
lret
mov
mov
addb
pop
fsub
ror
andl
leave
jbe
or
shlb
mov
mov
iret
stos
stos
and
fnstenv
xor
int3
mov
test
jg
lds
in
icebp
repz
ficoms
mov
out
es
addl
lret
add
dec
cmp
loop
lea
pop
rcrb
jnp
inc
lret
imul
into
jae
dec
jo
adc
out
cwtl
mov
mov
inc
xor
inc
or
pop
xchg
pusha
and
test
test
add
fistl
jmp
gs
and
mov
ljmp
int3
dec
inc
pop
insl
add
xor
enter
mov
adc
push
sub
cld
or
addr16
jne
hlt
xor
inc
sub
out
adc
mov
insl
xor
xchg
adcl
mov
aas
cld
pop
sahf
aam
lods
jae
or
lret
sbb
mov
add
mov
in
xorb
push
xchg
data16
js
xor
call
bound
cmp
and
mov
test
xor
mov
pop
mov
dec
sahf
sbb
xor
in
lahf
mov
in
mov
jno
xchg
js
imul
add
aad
add
dec
xchg
ds
notb
notl
xchg
out
cmp
loope
xlat
fisttpl
push
cmp
gs
push
ret
pop
push
mov
pop
pop
sub
mov
lock
inc
movsb
bound
adc
out
dec
nop
xor
dec
pop
xchg
shll
and
mov
ja
mov
sub
dec
mov
pop
insb
xor
push
xchg
stc
push
pop
inc
cmp
xlat
ficompl
leave
or
xlat
pop
pop
mov
sarb
out
jecxz
iret
add
test
aas
test
xchg
cmpsb
cltd
jae
xchg
int3
add
pop
xchg
mov
pusha
inc
pop
jnp
ja
dec
jnp
or
enter
repz
pop
cmpsl
cmpsl
xchg
out
hlt
jmp
aas
dec
cmp
fcmovnu
icebp
sub
addl
mov
xchg
sbb
sub
das
test
les
test
jo
shll
out
mov
movsl
in
dec
pusha
mov
stc
push
or
loop
fiadds
shlb
xor
xchg
cwtl
add
daa
leave
sub
je
dec
xor
mov
and
in
rcrb
cmp
lods
arpl
and
in
imul
mov
push
out
subb
mov
pop
mov
movl
and
mov
xchg
ret
jmp
dec
inc
pop
jge
inc
andb
leave
and
mov
decb
into
jl
jecxz
add
aas
dec
insl
pusha
rcrb
adcb
ret
addl
lods
cltd
cmp
or
push
cmp
int
add
lea
xchg
push
pusha
loop
dec
mov
movsb
iret
fisttps
mov
or
movsl
sbb
mov
adc
cltd
jmp
sub
fsts
jne
mov
in
outsl
jbe
out
insl
sbb
jp
push
movsl
outsl
jo
add
scas
ss
nop
jle
sar
loope
jae
pop
popf
mov
fwait
add
push
xor
cmp
scas
and
aas
ret
xchg
fldenv
or
xchg
test
fwait
rcll
cmp
pop
jae
mov
and
and
lcall
ds
and
push
call
rcr
mov
stos
jle
cmp
rcrb
and
xchg
cs
pop
repz
pop
out
hlt
rclb
mov
xchg
push
test
orl
mov
clc
fistps
mov
jp
lret
lock
dec
xor
or
mov
push
or
std
or
push
lret
mov
mov
adc
orl
loopne
pop
stos
jno
mov
test
je
adc
bound
loop
xchg
cltd
fcompl
jo
push
and
sub
movsl
rol
dec
adc
shlb
mov
out
mov
adc
fistps
aas
mov
enter
or
pop
pop
pop
xchg
cmp
jne
imul
fcmove
lock
call
mov
xor
sbb
dec
lods
scas
je
dec
jge
xor
enter
jae
ret
push
pop
and
shl
shll
dec
and
sub
ljmp
mov
inc
mov
in
cmp
adc
mov
pop
scas
clc
imul
or
stc
push
je
jbe
test
dec
mov
add
fwait
mov
push
mov
loop
aas
fisubs
ss
jnp
icebp
xor
cmc
unpckhps
scas
jbe
decb
stc
adcl
and
in
aam
lret
movsb
js
fs
test
mov
hlt
xchg
in
lods
cltd
aaa
jmp
fsts
mov
sub
add
addr16
push
das
jl
mov
push
cmp
mov
pop
dec
jns
xlat
lret
clc
push
xor
mov
inc
scas
imul
lds
leave
pop
push
mov
cltd
sbb
mov
xor
push
clc
cmc
add
inc
push
scas
or
push
lea
call
ss
dec
lock
xchg
lock
push
and
imul
mov
adc
out
sbb
jmp
hlt
clc
mov
clc
push
xlat
lahf
mov
xchg
xchg
xor
popf
push
add
fucomip
movsl
lcall
xor
cmp
dec
mov
or
pop
xor
xor
stc
int
dec
inc
js
loop
daa
cmp
mov
mov
pop
fwait
sahf
stos
sbb
xor
loope
xchg
push
mov
fimull
out
stos
int3
scas
adc
es
mov
mov
mov
add
jnp
inc
daa
or
sbb
or
cs
jbe
out
jae
lret
jnp
outsb
pop
mov
pop
dec
sbb
movsl
lret
mov
dec
loopne
es
cli
insb
rcll
adc
loopne
xor
xchg
ret
mul
lods
pusha
add
in
aad
fcmovbe
lret
mov
xor
shrl
fsubrl
shll
sbb
addb
andb
xchg
int3
jae
das
les
repz
mov
mov
lock
mov
jns
push
imul
jno
push
push
lahf
fmul
dec
push
xor
xchg
insb
add
addr16
call
inc
lahf
adc
xchg
and
xor
push
fisubrl
push
mov
and
cmp
pop
add
push
mov
xchg
push
jp
xchg
cwtl
push
xchg
push
in
sub
mov
sbb
sbb
adc
jne
jl
adc
rcrl
insb
stos
push
cmpsl
adc
mov
aam
xchg
into
jmp
pushf
push
cmp
add
sahf
fildll
cltd
shll
andl
inc
mov
sub
cli
mov
stos
loop
in
sbb
shrl
lret
push
jle
inc
imul
stc
mov
test
ficompl
lock
cmpsb
adc
lods
repz
pop
add
mov
or
pop
cmp
pop
add
xchg
xchg
call
out
sahf
movsl
xor
insl
out
adc
test
je
and
xor
xchg
sbb
mov
arpl
aaa
sub
adc
or
popf
std
push
dec
jbe
aad
xchg
cmpsl
daa
call
test
lds
test
mov
out
xor
daa
sbb
inc
push
cmp
xor
roll
adc
jg
lret
mov
insl
cmpsl
xchg
jmp
fcoms
in
and
push
dec
daa
add
pushf
mov
jnp
lcall
subl
outsl
int3
gs
scas
pop
xor
loopne
push
push
mov
and
in
popf
out
mov
popf
xor
stc
dec
cld
pusha
jmp
clc
fisubl
sub
inc
notl
addl
add
popf
mov
cmp
aaa
pop
inc
dec
and
in
test
ret
fsubrl
xchg
pop
decl
fcoml
rclb
imul
pop
loop
jno
int3
push
xchg
push
dec
imul
movsl
jne
sub
sbb
cmp
scas
sub
lcall
xchg
adc
mov
les
push
jecxz
insb
rolb
jo
and
call
push
lods
jge
jno
jmp
jmp
xor
or
movsl
shrl
pop
push
and
cmp
ja
sarl
mov
jp
xor
repnz
out
lods
int
inc
roll
test
pop
test
gs
add
aad
adc
outsb
cld
adc
jp
loope
inc
cltd
lods
loopne
int3
lds
lahf
xlat
jmp
jno
in
push
xor
sarb
inc
dec
jno
xorb
mov
xchg
cwtl
shl
imul
incb
stc
rcll
push
mov
inc
push
je
pusha
stos
jp
mov
ret
add
push
add
sub
mov
lock
pushf
out
sub
call
lret
mov
es
imul
jae
test
arpl
push
and
pusha
loop
add
and
push
sbb
mov
xchg
xchg
iret
jl
push
xor
pop
pop
xchg
lahf
xchg
cmp
stos
fistl
push
pushf
clc
dec
fnstenv
sahf
or
cmp
sbb
fcomps
data16
or
or
imul
inc
adc
sahf
cli
aad
call
movsb
xor
mul
loopne
sbb
mov
xor
add
push
aas
lahf
rcr
mov
cmp
hlt
divl
mov
xor
pop
test
jge
mov
add
pop
sub
roll
and
sti
and
push
inc
cmpsb
in
sbbb
push
ja
xlat
dec
mov
mov
ret
adc
sub
mov
es
add
stos
mov
and
scas
movsb
mov
ret
repz
adc
mov
clc
xor
lea
push
call
add
xchg
int
outsb
cmp
hlt
dec
cwtl
das
rcrl
fisubs
movsb
jb
movsl
add
push
push
scas
loope
xchg
sarl
hlt
test
lds
and
fstl
or
jo
sbb
xor
dec
test
add
sbb
rcrb
adc
pop
push
and
inc
cmp
jnp
jbe
push
push
xor
push
xor
fadd
es
fnsave
jae
outsl
rorb
mov
or
mov
outsb
lods
jp
iret
sbb
mov
add
xlat
mov
movsb
jnp
scas
dec
bound
jl
jbe
cmp
or
inc
es
or
es
mov
ret
jge
xorb
addr16
incl
mov
rolb
xchg
jno
push
xor
pop
or
cmovbe
je
movsl
pushf
inc
dec
cmp
cld
adc
mov
pop
pusha
inc
push
sbb
pushf
adc
out
and
sub
dec
xchg
lret
push
ret
jne
mov
jl
sub
jmp
ja
outsl
cmpl
test
subb
outsb
or
test
xchg
repnz
je
es
mov
bound
scas
in
mov
ds
repz
popf
ja
cmp
adc
shl
aaa
fidivrs
mov
inc
sbb
addl
pop
fists
jbe
aad
mov
ja
jg
rcrl
data16
lock
lret
js
jno
jno
push
cli
sbb
or
shlb
mov
nop
mov
lock
xchg
pop
jmp
push
push
out
jmp
sbb
dec
adc
lods
push
insl
xchg
iret
fidivs
loopne
jle
xor
add
sbb
dec
aaa
jno
jns
mov
mov
je
mov
or
mov
mov
ds
adc
inc
jbe
pop
sar
inc
xchg
lcall
insl
into
cmp
sub
in
rcl
aaa
popf
mov
jne
and
jb
mov
jmp
pushf
scas
mov
mov
and
and
mov
mov
xchg
xchg
push
mov
or
cmp
adc
add
pop
mov
ret
jp
cltd
insl
jnp
test
cli
xor
ss
scas
sbb
mov
and
stos
testb
test
add
jnp
jg
jbe
iret
mov
fwait
push
add
dec
ja
sbb
xchg
xchg
xorb
paddsb
and
ja
leave
fdecstp
adc
testb
movb
das
xchg
test
ror
lock
or
push
mov
in
jge
push
pop
daa
fildll
fidivrs
xor
mov
fcompl
mov
sahf
mov
xor
push
inc
mov
int
push
and
mov
dec
in
lret
je
pop
add
pop
sarb
stos
in
movsb
pop
jle
mov
push
or
pop
arpl
cmpb
adc
subl
je
xchg
xlat
pusha
mov
add
mov
xor
mov
out
es
cmc
call
cmp
dec
inc
jne
pusha
movsl
imul
stos
jge
adc
push
mov
jecxz
push
idivb
je
pop
xor
lahf
xchg
stc
mov
pop
sbb
out
add
adc
out
sbb
add
mov
test
bnd
fsub
imul
xlat
iretw
sbb
shll
out
sahf
in
gs
das
rcl
imul
xor
jle
lods
adc
rcll
add
ss
push
xchg
mov
les
adc
vmread
sub
add
push
xor
mov
popa
imul
or
repnz
adc
cmp
clc
andl
sub
inc
mov
shll
mov
mov
ja
pop
fidivrs
or
push
and
add
mov
sbbl
leave
or
les
dec
xchg
sbb
and
repnz
mov
mov
sahf
xor
pushf
loop
iret
out
cmc
insl
xchg
sub
sbb
mov
lods
pop
mov
mov
mov
pop
sbb
adc
inc
lret
jae
mov
ret
push
pop
mov
add
aam
fnstenv
outsb
pop
mov
jbe
outsl
jl
cmpsb
jns
jecxz
lods
mov
loope
and
ja
xor
push
push
movsb
mov
mov
jae
cmpsl
mov
negb
cs
add
sbb
lods
and
xor
fisubl
push
lret
or
cwtl
inc
into
outsb
inc
cwtl
mov
shll
in
aas
movsb
jmp
rcr
push
mov
jl
outsb
scas
fwait
hlt
jecxz
sub
sti
lods
sub
xor
jecxz
and
in
push
les
lock
cld
mov
mov
push
lcall
std
jae
fldt
cli
je
ss
in
and
mov
or
repz
in
xchg
xchg
ret
pop
xchg
mov
icebp
adc
clc
adc
insl
cmp
xchg
mov
push
mov
pop
fs
out
xor
insl
popa
cmp
dec
push
add
insl
dec
xchg
pop
clc
push
push
mov
inc
cmp
or
cmp
pop
leave
out
mov
iret
addr16
leave
adc
jmp
pop
jecxz,pn
mov
xor
xchg
mov
hlt
pop
mov
cmpsl
mov
ljmp
or
jl
or
inc
add
dec
fs
cltd
das
pushf
cwtl
mov
jne
cwtl
call
data16
int
push
lods
mov
scas
push
mov
xor
sbb
lds
mov
testb
cld
mov
dec
idivb
insl
jnp
fisubs
in
addl
in
xchg
fnstcw
adc
je
repnz
out
insl
or
rcrb
out
sbb
sar
int3
test
mov
push
cmp
rcl
sub
xchg
or
ret
inc
out
xor
cmc
push
popa
mov
test
push
push
stos
mov
popf
repz
sbb
xor
call
std
sbb
movsl
mov
and
das
popa
cmp
lods
sub
cmp
jmp
mov
xchg
fcomps
lods
daa
movsl
xchg
sbb
inc
xor
icebp
or
jns
inc
cs
je
pop
lcall
out
xor
repnz
in
push
testb
nop
lock
test
cmp
inc
jecxz
rcll
pmaxsw
cmpsb
add
adc
add
das
mov
jns
inc
sub
or
cmp
inc
mov
adc
cwtl
dec
sahf
inc
or
ret
mov
shrl
adc
fidivrl
xchg
cmp
push
push
sbb
hlt
pop
jo
lret
pop
jmp
lahf
or
add
mov
ss
ret
ljmp
adc
push
inc
add
push
clc
inc
mov
adcb
cmp
pop
lahf
in
mov
add
pop
pop
add
add
and
mov
into
push
sahf
xor
sbb
push
in
inc
push
xor
xor
or
sar
imul
jae
ret
cmp
movsb
adc
loop
out
roll
and
pop
pop
lds
and
addr16
push
mov
dec
and
ja
mov
iret
lcall
movsb
push
dec
sbb
lret
xchg
call
cmp
dec
or
pop
and
mov
mov
xor
inc
fwait
and
sahf
mov
jne
subl
lahf
and
inc
push
cltd
iret
fisubs
test
loopne
pusha
mov
and
pop
xorb
or
pop
dec
dec
sbb
or
inc
mov
inc
push
sbb
pop
or
xor
out
push
sub
out
xchg
arpl
movsl
ret
mov
cmp
adc
cmp
mov
push
xchg
mov
scas
faddl
mov
add
xchg
aaa
icebp
xchg
add
push
popf
push
repz
shll
subl
jp
lahf
pusha
mov
shrl
filds
in
sub
push
sbb
fwait
add
xor
rcrl
shl
adc
scas
hlt
sti
shll
xchg
mov
mov
inc
dec
add
lods
cs
mov
hlt
push
cmp
sbb
fidivs
xor
fwait
mov
inc
stos
mov
popa
daa
cmpsb
les
cmp
inc
xchg
test
je
mov
mul
ficomps
inc
inc
jbe
mov
sub
cmp
pop
adc
test
push
jbe
jmp
pop
fildl
fnsave
iret
jae
mov
mov
or
xor
jecxz
rorl
cmp
dec
sub
cmpsb
inc
and
or
lock
cmp
ss
jp
pop
push
mov
mov
movsb
lds
xlat
mov
cmp
or
aaa
insl
or
sbb
out
notl
pop
pop
jmp
mov
enter
mov
les
push
mov
gs
jg
or
popa
sbb
dec
dec
addr16
shrb
adc
and
inc
lcall
int
jge
ret
out
shrb
or
dec
inc
cli
repnz
sbb
popa
cwtl
leave
add
fists
scas
mov
sbbb
popa
lds
adc
add
stos
outsl
insb
cmpl
stc
add
xlat
sbb
xor
mov
adc
out
xor
dec
mov
push
sysret
gs
test
sti
push
sbb
orl
loop
sub
mov
mov
pusha
jae
xchg
jnp
sbb
inc
scas
mov
inc
jae
xchg
inc
mov
movl
xorb
xor
push
xchg
lret
dec
and
fsubs
fldcw
leave
lret
sti
and
scas
cltd
imul
cmp
mov
sub
adc
jge,pn
add
cmc
inc
test
or
pop
xchg
add
push
pop
sub
aam
xor
es
sbb
repz
xchg
sub
push
lahf
dec
rcrb
dec
adc
xchg
bound
sub
rclb
setnp
push
ret
cmp
int
insb
insb
add
ss
iret
insl
xchg
jbe
mov
movsb
cmp
mov
push
adc
add
rcr
loop
test
xor
cmc
aad
fs
pop
mov
ds
or
mov
mov
dec
sbb
xchg
mov
int
jnp
std
into
out
cltd
sub
jl
push
pop
push
inc
push
add
or
dec
int
test
jo
xchg
mov
mov
movsb
lods
fwait
mov
add
xchg
pop
cmp
pop
sub
pop
fsub
ljmp
inc
mov
inc
cltd
je
sbb
loop
cli
jo
mov
xchg
lret
add
insl
xchg
mov
jmp
les
cwtl
out
cmp
outsb
sbb
popa
test
aad
and
push
pop
mov
sbb
fwait
pop
aam
sbb
jns
out
scas
xor
sarb
test
mov
dec
or
pusha
cmp
jae
dec
pop
loope
add
popf
into
mov
adc
mov
or
stos
cltd
jno
inc
or
js
fsubrl
icebp
cmp
test
add
jns
in
test
mov
sub
cmp
and
mov
lock
jne
aad
mov
fcomp
hlt
inc
jmp
sbb
dec
out
jge
scas
lret
faddl
hlt
sub
imul
mov
cs
cld
stos
sub
mov
pop
push
push
addr16
inc
and
ret
jp
push
nop
cmpsl
cmc
int
les
sti
cmc
aaa
sti
std
cmpsb
and
jns
sbb
ret
mov
mov
pop
inc
push
js
xlat
aaa
adc
xchg
js
or
mov
lds
in
popf
pop
clc
sbb
or
fcmovnu
jmp
icebp
push
clc
loop
sbb
cltd
jae
aad
sbb
add
jle
js
push
xor
inc
scas
stc
test
cmp
cmp
test
lahf
inc
inc
push
cmp
pop
inc
xchg
push
lahf
and
ja
pop
xchg
jle
or
jge
sub
lret
subl
int3
in
and
jmp
pop
cltd
push
xchg
sbb
cmp
xchg
add
push
inc
je
and
mov
mov
loopne
cmp
mov
xchg
outsb
leave
dec
leave
lcall
cmp
and
cwtl
sarb
lods
cmp
loopne
dec
mov
cmp
addr16
adc
xchg
int
push
xchg
cmp
or
hlt
mov
xor
outsl
fiaddl
inc
stos
gs
push
pop
mov
ja
cmpsl
pop
sub
dec
jl
gs
mov
adc
and
pushf
std
xor
scas
sub
hlt
jl
cmp
mov
jmp
xchg
fs
and
std
shl
xchg
sarb
cmp
xchg
xchg
xchg
add
xchg
pop
icebp
data16
sub
sbb
daa
cmp
xor
loope
rcrb
bound
mov
push
lahf
and
call
pop
hlt
sbb
and
ss
add
jmp
fcmovnb
xor
jae
dec
fdivl
xchg
mov
ret
lcall
xchg
lods
pop
pop
ret
fwait
daa
cli
push
fwait
cli
jb
xchg
mov
or
rorl
sbb
lret
push
lock
imul
divl
inc
dec
push
xchg
mov
aad
insb
push
mov
push
test
mov
pop
out
sub
push
data16
and
mov
je
jg
jmp
cmp
lea
xor
arpl
push
in
lcall
aas
cwtl
xor
and
mov
std
or
imul
cmp
mov
xor
push
push
add
mov
repnz
or
or
mov
mov
mov
push
lods
sbb
or
push
mov
movsl
cmp
jbe
test
xor
mov
mov
and
xchg
xchg
adc
sub
xchg
mov
xor
testl
in
sbb
jle
mov
xor
es
mov
shrb
and
xor
mov
push
sub
add
and
out
ficomps
xchg
jbe
push
test
nop
lret
dec
and
mov
imul
mov
call
jecxz
xchg
lea
lahf
xlat
addl
jbe
ret
popa
call
popf
add
add
jmp
xchg
cltd
inc
fmul
stos
jmp
andl
jo
mov
les
adc
data16
test
add
nop
or
fs
mov
xchg
scas
test
test
gs
push
jge
loopne
je
adc
mov
out
inc
add
cwtl
jg
inc
into
stos
sbb
pop
daa
das
and
dec
dec
jnp
fs
jnp
pop
adc
inc
fisubl
loopne
add
lret
fstps
cmpsb
add
clc
daa
and
packssdw
clc
mov
xchg
or
fdivs
insl
repnz
push
rorb
jmp
adc
insl
and
xor
sbb
mov
out
inc
jb
mov
inc
xor
mov
inc
imul
sbb
shrb
jmp
jecxz
imul
popa
pop
push
fnsave
mov
aam
jecxz
ret
mov
or
mov
arpl
loopne
mov
xchg
mov
jno
aad
cs
cmpsl
sbb
mov
dec
mov
xor
aad
fsubs
pop
jae
push
adc
inc
stos
ljmp
shll
pop
cmp
imul
les
inc
and
in
xor
inc
dec
nop
fstl
loop
sar
xor
fiaddl
jb
ret
xchg
pushf
pop
pop
add
inc
jg
out
jecxz
push
rol
jne
fnstenv
add
test
pushf
lret
cwtl
cmpb
mov
out
shll
pop
shrl
cmpsl
fldt
sub
xlat
fldl
mov
cmpsl
sbb
xorb
in
test
adc
push
adc
jo
cmp
add
clc
ja
push
out
addr16
pop
test
mov
mov
jb
pop
jnp
cmp
jmp
and
orl
stc
std
cli
test
ret
hlt
push
sbb
jp
bound
inc
cwtl
sub
push
and
in
xchg
sub
test
push
jns
inc
hlt
adc
cld
adc
or
add
cmc
mov
lds
xor
sbb
faddl
and
ljmp
inc
mov
out
jmp
push
mov
add
outsb
shlb
xchg
jg
mov
pop
popf
iret
dec
movsl
in
jge
scas
ret
cltd
dec
mov
push
insb
ds
xchg
cs
add
pop
pop
cmpsb
lock
mov
ja
jnp,pn
rcll
cmc
jecxz
push
mulb
in
push
ljmp
out
push
out
xchg
jle
scas
bound
push
rcl
loope
push
jl
adc
xchg
lods
fwait
mov
jbe
out
sbb
loope
xlat
pop
jg
adc
push
das
iret
cmp
test
mov
push
shll
sbbl
lahf
enter
popa
xchg
push
adc
push
and
daa
lea
xchg
xchg
pop
mov
ja
pop
mov
push
popl
fdivrl
test
and
add
insb
jp
mov
fwait
and
adc
mov
lds
insl
inc
out
js
or
fstl
mov
shll
out
out
cmpsl
stos
fdivrs
adc
jo
mov
jmp
mov
stc
pop
sbb
pop
jle
decb
pop
insb
xchg
cmpsb
mov
stos
and
movsb
xor
push
popa
ret
fistps
cmp
adc
mov
sbb
outsl
xchg
and
shl
shr
xor
aaa
inc
pop
or
jne
movsb
pusha
rolb
into
or
push
push
pop
mov
rol
movsl
jb
andb
or
popa
cwtl
jne
call
insl
popf
dec
mov
pop
mov
xchg
sub
movsb
cwtl
cli
push
fwait
cmp
orb
mov
cld
push
pop
mov
imul
mov
call
addr16
push
popf
push
popa
xchg
dec
sub
xor
loopne
mov
test
cli
mov
and
in
mov
push
loopne
fisttpll
enter
mov
jno
xchg
fldl
and
sbb
cwtl
pop
out
notb
mov
pop
aaa
push
push
push
out
jno
out
mov
fwait
push
xchg
jb
mov
in
sti
cmpsl
jo
xchg
add
adc
add
lahf
call
mov
out
adc
dec
mov
clc
and
push
mov
adc
jne
iret
ss
fstpt
out
mov
sub
insl
notl
cmpsl
sub
xor
fisubs
divl
faddl
mov
or
or
lea
xor
aas
push
xor
imul
jge
add
push
es
fwait
sub
mov
pusha
div
inc
shlb
roll
fwait
jne
sub
sbb
mov
out
jns
aas
leave
add
mov
lods
je
mov
jmp
es
enter
lret
loop
addl
xlat
ja
popa
jo,pt
bound
cltd
shrl
mov
outsb
sbb
mov
push
hlt
test
fstpt
stos
dec
push
xchg
push
xchg
mov
mov
call
les
add
mov
mov
or
sahf
out
std
jp
and
push
dec
loope
aas
cli
ds
fbstp
dec
jns
cwtl
std
hlt
pop
scas
cwtl
lods
enter
lea
cli
arpl
and
scas
xor
push
rcll
flds
mov
aam
addl
xchg
mov
fwait
enterw
test
push
fsubp
loopne
in
jne
mov
xacquire
ds
jbe
sub
dec
aam
jbe
in
hlt
in
sub
mov
iret
fcompl
or
dec
and
cld
push
add
or
mov
roll
call
ljmp
test
push
cmp
push
and
inc
int3
cld
hlt
cli
mov
add
sub
adc
pop
push
sub
lock
std
pop
sub
faddl
mov
jle
push
int
dec
xor
push
xor
stc
sti
dec
jb
mov
and
sub
cltd
cmpb
dec
cmp
sbb
rclb
sahf
xorb
lahf
dec
push
aad
pop
sbbl
leave
mov
mull
jno
adc
aam
nop
pop
insl
mov
lods
mov
lods
ds
jne
cmp
inc
pop
inc
push
es
jo
scas
inc
or
jl
nop
jle
out
gs
add
sbb
pop
jecxz
or
mov
cltd
jge
xchg
cmp
or
push
into
data16
aad
sbb
xor
cltd
or
mov
mov
pop
xchg
push
cmp
xor
pop
ds
cs
pop
mov
xor
mov
mov
mov
jmp
mov
sbb
mov
adc
retw
movsb
in
inc
loope
icebp
mov
pop
adc
arpl
insl
mov
inc
std
add
fisttpl
sbb
aaa
xchg
jmp
pop
xlat
mov
lds
cmpsl
ds
mov
ret
movsl
pusha
or
lcall
push
xor
pop
mov
ret
and
aam
add
inc
pop
insl
shlb
xchg
mov
sbb
clc
arpl
das
dec
pop
xchg
pop
nop
popf
mov
loop
sahf
stos
jb
je
dec
mov
jp
in
xor
mov
xchg
call
or
jno
inc
scas
ja
ja
cmp
sbb
popf
negl
push
out
inc
push
jl
push
imul
dec
cltd
ja
or
in
int
aaa
fbstp
jmp
mov
pop
and
rorl
mov
imul
hlt
or
scas
lcall
shl
push
dec
xchg
xchg
dec
xor
mov
stos
gs
mov
and
push
in
or
fcoml
and
dec
pop
nop
test
or
pop
pusha
add
xor
xchg
lods
push
shlb
push
shrl
es
scas
xor
push
fsubrl
aam
mov
jmp
push
cmp
xchg
lock
xchg
mov
aaa
fsub
xor
rclb
test
js
push
pop
bound
movsl
pop
inc
cwtl
sub
bound
jp
imul
insb
adc
jle
add
fs
add
add
stc
sub
or
loopne
imul
pop
mov
lret
mov
ret
stc
in
mov
mov
adcb
lret
sub
push
es
xor
mov
rcrl
mov
test
es
mov
cltd
dec
out
fnstsw
insl
lret
shrl
ror
push
in
mov
mov
mov
inc
sbb
lods
test
mov
inc
mov
push
mov
mov
testl
push
sahf
add
lea
sbb
test
repz
icebp
sub
das
add
rorl
cmpsl
out
fsts
mov
out
jg
jno
cwtl
fs
jp
test
les
addr16
outsl
mov
xchg
inc
push
adc
xchg
out
cmp
mov
lods
in
jg
iret
push
xchg
push
aas
sbb
sub
inc
call
nop
popa
bound
add
lret
cs
inc
subl
das
mov
adc
xchg
push
push
and
cmc
mov
mov
mov
add
xchg
jmp
insl
xchg
add
inc
inc
pop
gs
mov
push
jno
inc
inc
cmp
pop
fdivrs
popa
push
jp
lret
iret
jmp
sbbb
jl
popf
jecxz
add
push
add
add
push
xchg
test
in
lret
xor
push
fisubrl
bound
xchg
xchg
repz
int3
sbb
mov
push
insb
sbb
jno
sub
ret
or
neg
arpl
push
and
xor
jecxz
inc
push
sbb
neg
fstl
dec
aaa
in
dec
aas
push
out
sarl
and
js
test
loop
xchg
shll
popa
lahf
xor
or
rcl
jbe
mov
loopne
jg
push
mov
xor
xchg
imul
sarl
mov
jb
movsl
divw
xlat
adc
dec
cmp
mov
inc
adc
popf
shll
roll
push
adc
jae
dec
mov
fisubrs
sbb
push
jle
jmp
lods
sub
fdivr
dec
xor
mov
stc
pop
inc
sbb
cmc
jg
mov
push
lds
movsl
and
or
out
push
cmp
jecxz
std
jge
decb
les
xchg
mov
test
xorb
dec
out
push
fwait
inc
jp
push
push
xchg
negb
push
scas
jp
insl
movsl
insb
jge
cmp
and
jge
repnz
lea
cmp
imulb
jecxz
adc
hlt
add
test
aam
dec
dec
daa
lret
test
push
pop
les
shll
mov
inc
jg
inc
jb
mov
cmpsb
shlb
ljmp
jge
out
dec
mov
add
test
inc
mov
mov
push
sbb
dec
mov
lock
inc
hlt
push
xor
outsl
sbb
cmp
xlat
iret
sbb
movsl
subl
lcall
loope
or
outsb
cmp
mov
jns
cwtl
inc
jp
sbb
aam
push
testb
xlat
fbstp
ds
popa
nop
jmp
and
pusha
add
das
xor
mov
ljmp
outsb
pop
clc
sbb
mov
mov
je
imul
and
xlat
lret
push
jg
pop
inc
dec
aad
mov
mov
or
bound
fwait
sahf
cmp
xor
pop
lahf
mov
loopne
cmp
sub
jno
push
jg
xor
adc
test
sti
xlat
add
lods
aaa
imul
mov
or
fsubl
js
call
xchg
adc
mov
ret
jle
cmpsb
lret
mov
cmp
in
jmp
cmp
clc
jo
test
xchg
xchg
les
xchg
ss
adc
jmp
gs
leave
into
cmp
pop
scas
add
xor
lock
movsb
mov
pop
int
or
popf
cmp
adcb
pushf
test
insb
sahf
xor
sub
jbe
arpl
mov
es
sub
xchg
xchg
xlat
gs
xlat
xchg
and
dec
xchg
add
pop
loop
xchg
out
pop
xchg
jae
and
iret
mov
dec
fwait
test
inc
loop
cmp
and
fistpl
dec
daa
inc
fnsave
add
stos
sbb
mov
jmp
sub
xor
fwait
clc
mov
aaa
pop
in
in
xchg
cmp
xchg
add
sub
andb
push
xlat
mov
insl
add
fldenv
lcall
or
push
add
rolb
push
and
shll
call
movsb
in
push
fs
dec
xchg
dec
sub
jle
sub
test
lock
mov
jo
rolb
test
sbb
adc
gs
sub
fiadds
sub
cmc
sti
gs
cmp
push
push
sub
sbbb
fisubl
dec
xchg
jecxz
fisubl
cmpl
xchg
mov
lcall
push
push
insb
push
lods
fists
fistps
je
mov
lret
push
mov
xchg
ja
mov
dec
jbe
test
push
fcoms
cmpsb
pop
cli
lcall
inc
cmpsb
and
stos
hlt
xor
add
push
add
inc
leave
push
mov
push
lcall
sarl
and
call
into
stos
clc
sahf
hlt
fstl
dec
mov
lock
pop
xchg
fwait
mov
push
outsl
daa
js
add
jnp
mov
sbb
add
in
sbb
test
loopne
jle
aad
xor
ljmp
or
jne
push
pop
out
dec
pop
mov
lds
push
outsb
push
aad
pop
ret
gs
sbb
or
stos
xlat
cmp
into
jnp
fildl
mov
sti
popa
sbb
rcrl
nop
mov
jns
xchg
inc
xor
cwtl
jecxz
jns
enter
pop
fbld
cli
bswap
mov
pushf
out
imul
and
push
int3
sbb
test
cmp
pop
mov
add
aam
lea
test
mov
lods
cmp
loope
jbe
lea
mov
mov
pop
aaa
jno
sti
mov
int
fnsave
out
inc
aam
fs
pop
aad
sbb
jecxz
outsl
lret
filds
mov
push
fildl
lds
enter
ljmp
xlat
pop
repz
or
add
test
pop
sbb
add
or
xchg
pop
lahf
mov
inc
daa
pop
jae
es
mov
inc
fcoms
mov
and
xchg
stc
dec
repnz
sub
aad
mov
stos
and
mov
fs
in
or
cmpsl
pop
dec
pop
out
pushf
or
pop
add
push
xchg
fidivrl
mov
pop
insb
jo
out
test
cltd
push
sbbb
lret
enter
gs
mov
ds
pop
roll
push
mov
jge
lea
lea
std
mov
pop
pop
lock
out
shrl
sbb
inc
aam
and
jo
mov
pushf
or
pop
imul
push
imul
lret
out
sarl
pop
jecxz
addr16
pop
rcrl
fcmovnbe
inc
jl
lods
enter
filds
push
ret
dec
daa
aaa
dec
and
mov
rorl
cmpsl
jo
rorl
xor
xchg
sub
ror
push
and
mov
adc
dec
lods
lods
xor
and
hlt
iret
push
les
mov
sub
pop
sbbb
enter
test
mov
lods
push
mov
xchg
into
mov
mov
xchg
pop
ds
or
out
mov
fidivs
test
daa
push
or
ljmp
aad
das
cmp
xchg
mov
push
lods
shlb
ds
mov
sbbl
fcoms
cmp
test
testb
push
pusha
cmc
imulb
orb
xchg
stc
xor
sbb
lea
fistpl
push
mov
push
inc
jb
loopne
pop
jo
jo
outsb
jle
cmp
jle
test
test
scas
jle
cmp
jg
xchg
insb
out
es
cld
lock
mov
test
outsb
adc
cmp
adc
popf
psrld
out
nop
jb
and
jmp
fimull
sub
dec
js
adc
dec
fists
push
push
push
sbb
mov
addr16
push
mov
cltd
imul
shl
out
jecxz
mov
sbb
jb
jns
ljmp
fistl
dec
fdivr
fs
pop
sbbb
sahf
movsb
adcl
fs
push
inc
sti
adc
mov
pop
xor
lds
pop
mov
cwtl
sub
fdivrs
pop
ds
es
sub
test
sbb
pop
dec
cli
and
gs
lret
xor
fisubs
dec
nop
jne
notb
ja
repz
jecxz
and
mov
sub
in
adc
mov
repnz
ret
xchg
lods
insl
imul
sbb
stc
outsl
leave
adc
dec
push
fdivl
pop
testb
fstpl
pusha
sbb
adc
movsl
mov
repnz
sub
aaa
outsl
adc
cmpsl
pop
xlat
cmc
and
or
lret
pop
add
addr16
cmp
and
lock
fldcw
out
add
mov
push
inc
in
and
pop
pushf
ja
jbe
cmc
insb
sar
mov
add
pop
xchg
lret
or
sarb
outsl
xor
ret
push
pop
dec
lods
dec
imul
popf
jne
mov
jle
stos
loop
shl
aaa
or
sub
pusha
addl
insb
pop
test
and
pop
je
shlb
fwait
and
mov
aad
sub
iret
pop
movsb
add
xchg
xchg
lahf
daa
xchg
add
xchg
fucomi
or
cmpsb
out
sub
sbb
pop
fbld
cli
cmc
xchg
mov
out
cli
insb
fstl
push
push
cltd
scas
pop
dec
rcr
int3
or
lcall
ss
lret
jl
scas
ret
adc
or
cwtl
popf
jg
out
out
jnp
pop
ret
xlat
sbb
pop
ror
es
push
xchg
xchg
in
mov
inc
ss
sbb
rcl
fucomip
add
pop
imulb
adc
adc
lret
mov
inc
sub
enter
fdivr
push
call
aas
mov
lock
xchg
mov
insl
dec
insb
pop
cld
imul
outsb
cmpsl
jb
js
sahf
in
shl
pop
shl
in
inc
and
mov
cmpb
int
pop
jne
in
out
inc
xlat
dec
mov
rol
sti
inc
xor
inc
mov
loop
dec
nop
cwtl
nop
mov
jl
sub
es
stc
jle
mov
and
mov
mov
jecxz
mov
lea
xchg
orl
inc
jb
popa
mov
pop
es
popf
xor
sar
xchg
xchg
ds
pop
decb
div
xchg
add
lods
adc
xor
push
stos
push
sbb
sbb
push
adc
lret
pop
mov
sbb
lods
add
lcall
in
pop
dec
les
inc
cmp
loopne
sub
mov
lds
insl
add
outsl
push
jno
cmp
imul
push
arpl
pop
cmp
cmp
xchg
fwait
inc
imul
mov
enter
mov
jns
cmovge
std
dec
xchg
push
cmp
pop
sbb
jmp
sti
stos
push
movsl
jns
adc
xchg
jbe
mov
cmp
loope
adc
lahf
sub
jg
dec
push
dec
ret
or
xor
call
pop
frstor
xchg
jnp
adcb
iret
pop
sahf
and
shrb
imul
int3
enter
popa
jb
sub
aam
or
cmp
inc
test
cli
negb
inc
pusha
fwait
mov
fidivrs
andl
faddl
mov
xor
pop
xlat
mov
mov
je
push
add
loope
xor
xchg
sahf
add
sbb
btc
out
outsl
in
xor
outsl
in
fisubl
xor
sub
lret
push
vandnps
movsb
iret
shrb
or
sti
je
fistpll
jno
aaa
test
div
push
sbb
inc
pop
shrl
or
popf
aas
fwait
push
cs
cs
or
and
cli
xchg
adc
scas
out
lods
push
xchg
repnz
dec
jo
xchg
pop
or
lods
dec
xchg
dec
pushf
jecxz
mov
ret
push
ljmp
sub
push
sahf
xor
or
jb
ret
test
clc
out
aas
dec
les
out
mov
mov
cmp
gs
sub
imul
push
push
ficoml
ret
mov
add
out
xchg
push
enter
sahf
adc
cmc
cmc
cmp
pop
data16
jmp
lret
pop
adcl
ljmp
in
int3
mov
enter
pop
call
cmp
mov
cmp
xchg
shrl
in
jnp
pop
jo
push
push
and
pop
or
out
gs
xchg
sub
arpl
lret
sub
orb
add
arpl
push
inc
pop
test
jmp
jb
or
daa
push
add
mov
or
sbbl
pusha
and
cmp
cld
and
addr16
addr16
adc
loop
adc
push
and
mov
xor
push
mov
push
xor
adc
add
out
cs
call
movsb
sbb
inc
push
into
subb
mov
mov
daa
jge
lret
push
pop
pushl
xor
dec
test
iret
push
ret
sub
jecxz
shll
dec
std
inc
sbb
inc
fcmovne
jnp
imul
xor
scas
lods
out
lods
popa
jg
or
adc
ficompl
cli
mov
lar
andb
mov
inc
xchg
fmull
insl
fwait
pushf
xchg
jnp
lock
orb
das
sub
rol
scas
cmp
lea
jecxz
fwait
mov
xchg
add
mov
mov
mov
sub
push
and
cld
in
data16
out
xchg
aad
adc
xlat
leave
ret
test
jl,pn
xchg
fildl
pop
dec
je
pop
xchg
test
fldl
fstpl
popf
fidivrs
fistpl
cmc
mov
xchg
lret
xor
push
cli
sub
dec
incb
pop
loopne
add
jno
arpl
mov
lahf
pop
sahf
xor
xchg
int
or
mov
aas
add
jmp
xchg
out
mov
dec
jb
lea
mov
push
push
ret
lret
adc
call
das
mov
mov
inc
dec
addb
outsl
adc
push
cltd
mov
push
fsubs
test
cmp
incl
inc
and
ljmp
cmpsb
dec
in
iret
mov
fs
mov
and
mov
addr16
rolb
test
mov
stc
rorb
in
inc
aaa
lcall
pop
fisttps
mov
rolb
inc
clc
sbb
pop
cli
jns
mov
push
stos
cmc
mov
shrb
daa
fldt
fs
cmp
add
cmp
mov
loopne
and
lods
push
rcrl
jg
cmp
outsl
lret
or
pop
mov
pmulhw
addr16
push
sbbl
sbb
or
out
mov
fimuls
cli
movsb
ret
and
in
xchg
jae
fdiv
and
dec
dec
ret
sbb
mov
fimuls
icebp
aam
int3
int
and
or
push
mov
popf
lods
dec
mov
in
jnp
cld
jo
or
sub
popa
scas
inc
mov
daa
pop
push
in
sub
pop
xchg
dec
inc
movsl
and
mov
mov
and
repnz
mul
mov
pop
and
xlat
mov
repz
data16
jle
jno
popa
stos
mov
popf
and
sub
jo
cmp
sahf
and
outsl
in
in
xchg
add
je
and
mov
jns
sbb
jno
inc
ss
sbb
push
push
in
daa
jmp
ljmp
jo
xor
sbb
lds
cmp
jge
sbb
cmp
pop
andl
loopne
dec
pop
test
aaa
or
push
add
add
push
mov
xor
insb
clc
out
pop
test
or
jae
dec
or
inc
shrl
ret
xchg
mov
in
xchg
or
adc
push
andb
loopne
loope
lods
adc
lret
bound
jge
movsl
xlat
mov
or
shlb
jl
stc
inc
arpl
dec
stos
mov
movsl
pusha
jae
push
rorb
std
mov
adc
rolb
scas
mov
and
je
jne
std
cmpsl
stos
dec
pop
hlt
sti
inc
scas
sbb
dec
jae
test
mov
or
xor
popa
push
xchg
pop
lahf
enter
test
and
test
lahf
scas
push
ret
sahf
pop
out
lea
xchg
in
xchg
mov
xor
xor
dec
inc
cltd
mov
xchg
test
ds
and
pop
lcall
push
repnz
cmp
cwtl
and
mov
lea
xchg
mov
stc
mov
sbb
cmp
mov
mov
push
test
inc
sbbb
lret
mov
lret
jp
popf
roll
divl
cwtl
pop
insl
mov
jp
into
jg
inc
add
xchg
xor
sbb
aaa
mov
lret
jno
pop
add
jge
pop
inc
lock
sbb
sub
divb
pop
mov
sti
out
or
dec
sbb
jo
cmp
pop
pop
cmpsb
arpl
sahf
or
shlb
xchg
add
push
ja
mov
shll
add
lcall
pop
outsl
xlat
dec
mov
mov
inc
out
inc
mov
mov
mov
and
pop
xchg
xchg
int
in
fnstenv
movsb
fstpl
xor
xchg
xchg
ret
or
test
int3
mov
mov
ror
mov
test
roll
mov
sub
stos
mov
loope
stc
mov
insl
outsl
jnp
jo
stos
lock
add
push
xor
push
inc
pop
inc
and
pop
mov
jge
pop
loop
bound
inc
mov
xchg
test
pop
leave
aas
dec
xlat
pop
imul
sbb
push
in
add
add
divb
loopne
shrb
ret
ljmp
icebp
rcrl
loopne
imul
insb
aad
cs
fldt
gs
ja
jns
and
repnz
mov
cli
and
push
pop
mov
sbb
into
mov
movsl
or
push
xchg
lds
jbe
gs
aam
add
ret
loope
add
adc
or
aad
dec
mov
push
out
jecxz
mov
inc
lea
imul
insl
sub
inc
popf
js
xchg
jne
nop
out
in
xchg
mov
imul
inc
jo
test
inc
insl
icebp
pop
outsl
stos
sub
mov
and
stos
mov
xchg
call
fcmovne
lock
sti
in
cli
aad
sbb
sub
cltd
push
lret
dec
pop
mov
add
sbb
xor
adc
and
fnsave
sub
fdivrl
push
stos
and
and
push
and
bound
decl
loop
aaa
ret
into
popa
xchg
jle
jp,pn
dec
mov
and
sub
icebp
push
repnz
add
jle
popl
sarl
andl
or
stos
xlat
clc
jnp
pushf
dec
adc
fstpl
mov
xorl
ss
and
sub
xchg
sub
and
mov
rolb
adc
jge
cli
cmc
pushf
or
cmpsb
js
cmc
pop
pop
ficomps
pop
mov
loop
xor
add
mov
sbb
mov
bound
adc
notl
sub
cmc
fdivr
adc
out
shufps
push
xchg
add
ss
mov
pusha
cmp
adcl
inc
mov
pop
std
xchg
sbb
jmp
cmp
das
shll
mov
arpl
jae
cmp
mov
aam
cld
popa
inc
cmc
sub
push
in
gs
sbb
mov
push
push
inc
outsb
cmp
cwtl
push
jne,pt
sub
or
xlat
jb
aas
and
mov
push
fdivl
in
pop
insl
subb
mov
pop
jae
xchg
add
or
or
mov
dec
aad
sarl
fcoml
mov
push
test
mov
dec
push
cltd
pusha
add
arpl
jne
je
rorb
mov
mov
add
fstpt
add
movsb
je
test
inc
bound
pusha
xchg
ret
sbb
inc
pop
data16
sub
push
bound
outsl
outsb
cmp
in
movsl
adc
and
push
xchg
xchg
xchg
in
add
sub
mov
mov
and
stos
in
shr
xor
int3
pop
push
sub
not
call
mov
and
leave
iret
inc
ss
mov
mov
ret
adc
push
jns
test
pop
adc
or
movsl
cmp
lea
inc
divl
shll
rorl
pop
mov
or
das
push
daa
mov
jns
pushf
mov
pop
pop
out
pop
popa
and
gs
or
sub
xor
and
sbb
push
mov
movsb
notb
mov
std
sar
out
sbb
pop
addr16
inc
dec
sahf
xor
mov
add
aaa
pop
in
xchg
fwait
mov
dec
out
cmpsl
out
push
adc
jge
cmp
mov
loopne
std
test
in
mov
hlt
cli
cmc
pop
cld
clc
mov
or
ljmp
pop
xchg
scas
xchg
data16
imul
and
mov
pmullw
cmp
pop
push
push
jp
sub
cltd
out
stos
jp
xchg
arpl
arpl
adc
or
sub
jge
xor
in
sahf
mov
inc
orl
sbb
cmp
pop
sub
addl
jge
xchg
and
xor
add
test
lret
push
shrb
and
xchg
ret
cmp
push
xor
mov
pop
adc
hlt
add
mov
loope
jnp
js
ja
jnp
test
cmpsb
mov
clc
iret
and
test
push
repnz
rclb
add
loope
sub
call
pop
pop
stos
test
jno
inc
and
mov
mov
add
fdivrl
test
and
xor
popf
lcall
or
xchg
popa
and
mov
dec
sbb
bound
jae
xchg
clc
mov
iret
roll
daa
mov
sub
dec
testb
lret
stos
fsubr
xor
jae
xor
out
sbb
cmpsb
push
repz
xchg
mov
mov
xchg
popa
shr
ret
jne
negl
or
test
dec
icebp
adc
jmp
outsb
data16
insl
call
sub
lods
das
fdivrl
and
aad
add
xor
inc
or
or
xchg
pushl
ja
mov
mov
cmp
cwtl
dec
movsl
adc
sbb
dec
dec
sti
mov
or
or
mov
jl
test
or
xor
rorl
xchg
and
sbb
imul
mov
imul
popf
mov
pop
adc
mov
dec
sbb
test
push
fidivl
or
xchg
xor
orb
or
inc
fdivrs
push
jo
and
xor
sbb
addr16
stos
dec
mov
pop
inc
add
adc
sub
fistpl
sbb
mov
fwait
incb
mov
sbb
lds
jle
mov
cmp
and
mov
jb
push
mov
rorl
sbb
fwait
ja
lret
xchg
hlt
ds
push
jecxz
test
pop
mov
rcl
loope
insl
dec
add
std
addr16
mov
test
dec
sub
shrl
cmp
dec
mov
and
adc
pop
rcrl
lock
pop
jae
rep
in
add
cmpsb
pop
insl
test
out
les
pop
stos
scas
repnz
add
mov
cmpsl
ds
jmp
pop
or
mov
mov
inc
cld
imul
xchg
inc
or
jo
ja
fsub
cmp
sub
xlat
addr16
jg
dec
subl
fwait
je
shlb
in
movsl
movsl
pop
push
pop
in
pop
movsb
mov
dec
pop
xchg
push
mov
mov
or
aaa
mov
lret
sub
adcl
sahf
mov
adc
loopne
scas
call
cmp
push
data16
test
push
xchg
jge
cld
push
add
mov
inc
int3
clc
outsl
push
adc
insl
scas
pusha
ss
mov
outsb
mov
lds
fs
xchg
xchg
lcall
sti
jg
xor
cs
xchg
out
popf
inc
sbb
adc
lea
xchg
cmp
fcoms
out
hlt
nop
data16
inc
push
inc
call
xchg
mov
mov
cli
test
outsb
roll
push
daa
iret
inc
inc
ss
test
test
jo
test
int
outsl
ljmp
test
xchg
pop
mov
pop
daa
divb
daa
mov
stc
into
mov
jns
outsb
lods
add
sbb
cmpsb
and
xchg
scas
rclb
inc
in
lods
pop
cmp
lds
jno
ret
test
xlat
jmp
pop
push
add
and
mov
xor
xor
repz
notb
xor
leave
cmp
stc
or
lds
test
mov
xchg
push
dec
in
cwtl
stos
jb
mov
jbe
xor
mov
je
incb
cmp
pop
call
jb
jo
sahf
subl
arpl
jbe
xor
lods
xor
lods
test
jns
push
jae
mov
mov
mov
jmp
sub
stos
gs
js
and
pop
mov
sub
inc
call
inc
enter
inc
xor
sbb
stos
jp
xchg
push
mov
and
push
aas
adc
xchg
cmp
out
in
loop
cmpsb
pop
lcall
mov
jl
out
subl
pop
inc
sub
test
ds
repz
fcoms
mov
sub
test
push
or
out
sbb
sbbb
pop
mov
ret
inc
addl
inc
jne
fcmovnb
lods
test
xor
ret
mov
push
lods
ja
add
stos
xchg
jne
or
movsb
dec
sarb
sbb
in
int3
std
xor
adc
pop
add
mov
repnz
pop
std
loope
cs
pop
les
pop
jge
sbb
xor
inc
test
aam
data16
jl
inc
lret
cld
mov
loopne
adc
add
dec
popa
mov
cmp
inc
mov
mov
sbb
out
sbb
cmc
fcmovb
mov
push
enter
lods
inc
cmp
dec
jae
or
fwait
push
sbb
out
divb
pop
or
jmp
cmpsb
gs
popf
popa
aam
movb
ja
xor
repz
inc
lea
repz
adc
push
sar
cmp
jmp
sbb
shlb
sub
sub
dec
mov
test
mov
das
jg
jmp
aas
jl
btcl
test
addr16
jo
xchg
call
mov
push
jl
aas
lahf
add
insb
xchg
lods
lret
or
dec
and
std
mov
lock
popf
rorb
jbe
jmp
adc
clc
xchg
mov
pop
mov
or
aas
jns
dec
dec
or
stos
jb
push
jnp
add
cld
lret
sbb
jecxz
and
nop
sbb
fadds
xor
push
lcall
aam
inc
out
mov
cmp
test
faddp
movsb
mov
sti
ss
ja
pop
shll
repnz
adc
sbb
mov
test
stc
call
sub
mov
out
arpl
push
push
pusha
mov
lcall
or
std
sbb
pop
das
outsl
sub
adc
cli
jmp
pop
bound
pushf
std
in
mov
loop
lods
rorl
jno
mov
stos
in
jmp
or
or
aam
pusha
inc
xor
sarl
rol
scas
outsl
cmp
jp
out
pop
adc
cmp
sub
in
movsb
jnp
scas
shrb
mov
loop
xor
pop
call
sbb
and
cmpsl
and
mov
sub
popa
std
cs
out
stc
mov
sbb
and
imul
aaa
data16
sbb
shll
fs
sub
std
in
ljmp
loopne
scas
mov
and
sbb
aad
xor
movsb
loop
fdivs
jmp
shr
xchg
sub
mov
aam
mov
lea
or
pop
and
fucom
and
pop
jmp
in
ror
and
jge
mov
cmp
cltd
and
mov
stos
call
sub
inc
mov
das
lods
mov
scas
test
orl
inc
and
fwait
xchg
xor
aas
mov
inc
pop
and
mov
sti
cltd
movsl
cld
imul
in
out
cltd
or
add
popf
pop
jne
cmpsl
mov
dec
mov
int
sub
lea
sub
or
mov
mov
pushl
movl
and
test
add
inc
jno
adc
dec
xchg
xor
mov
push
sub
dec
and
in
ret
push
adc
pop
int
je
or
inc
lds
pop
lds
pop
icebp
scas
call
mov
ret
rcll
or
fisubrl
xchg
sbb
mov
mov
cmp
dec
and
daa
imul
inc
sub
mov
jg
dec
and
cmpsb
push
mov
and
push
and
and
push
xchg
in
mov
popa
into
arpl
and
pop
in
pop
shll
movsl
pop
pop
dec
fcmovu
clc
pushf
xor
sbb
lcall
insb
rcrb
xor
pusha
je
xchg
xchg
xchg
xor
mov
push
fisubl
add
popa
aam
loope
push
popf
jmp
push
push
xor
jg
hlt
dec
in
or
inc
xchg
push
push
xor
pushf
dec
xchg
ret
arpl
xchg
sti
int3
xchg
sar
inc
dec
push
cmpsl
leave
mov
adc
sti
and
add
inc
jbe
fcoml
data16
xorl
mov
pop
sbb
xchg
add
jne
cli
mov
xor
mov
or
sub
jo
adc
popf
inc
mov
jns
jb
je
fwait
stc
sbb
lock
ret
iret
inc
cli
stos
mov
sub
sahf
mov
ljmp
sub
in
add
bound
cmp
mov
sub
rorb
mov
cmp
sub
or
xchg
movsl
cltd
pop
stc
out
lahf
pop
ljmp
loope
mov
sbb
sbb
cmp
mov
mov
ffree
repz
aam
push
bound
out
xchg
imul
xchg
hlt
mov
rep
cmp
and
cmp
out
adc
shll
movsl
pop
fwait
push
rorb
xor
stc
arpl
mov
inc
test
or
test
or
xchg
mov
cld
loopne
adc
mov
in
pop
loop
das
hlt
sarl
movsl
sub
xchg
jbe
add
repnz
add
adc
imul
push
les
mov
mov
movsb
test
test
mov
sub
xchg
sar
imul
or
dec
adc
rcr
out
in
add
call
mov
es
sub
cmc
fldt
ja
inc
loopne
out
out
enter
cmp
push
imul
jp
push
les
sbb
mov
orb
sub
incl
jmp
mov
fdivl
hlt
les
xchg
push
adc
xor
sub
in
loop
xor
pop
iret
mov
mov
inc
mov
mov
sub
pop
repz
or
imul
test
rcl
jecxz
add
mov
sbb
aas
repz
test
mov
lcall
mov
mov
mov
xchg
add
add
add
ss
fwait
pop
rorl
cltd
push
ja
in
sti
push
aam
jp
dec
data16
stos
cmp
xor
dec
and
cmpl
xchg
test
mov
fcmovu
ja
jb
or
and
mov
fs
cld
cmp
fcomps
sub
arpl
add
lods
in
dec
fisubs
sbb
jmp
pop
ret
int3
sbb
mov
imul
inc
test
sub
mov
and
xchg
inc
sub
orb
imul
push
sahf
push
cs
aaa
jl
aad
jecxz
or
and
dec
push
stos
dec
pop
outsb
rcl
pushf
insl
dec
mov
mov
cmpsb
popa
mov
add
mov
lds
pop
dec
xchg
and
mov
pop
imul
enter
adc
cmp
mov
mov
mov
inc
xchg
mov
mov
dec
mov
mov
insl
dec
mov
jbe
lods
mov
daa
mov
jge
int
movsl
mov
mov
lods
cmpsl
rcrb
idivb
xchg
popa
xor
ret
notb
lock
mov
and
jp
arpl
mov
dec
jg
aaa
sbb
test
and
xlat
daa
add
mov
adc
or
icebp
daa
rcll
data16
cmp
push
addr16
xor
fsubr
mov
les
mov
dec
scas
insl
je
ja
inc
ja
mov
add
xchg
ret
daa
dec
lds
push
dec
scas
insl
mov
jecxz
jl
je
std
lret
or
hlt
xchg
ficoms
test
xchg
insb
into
lock
and
insl
pop
mov
orb
adc
fmul
mov
sub
sbb
in
push
xor
imul
shll
in
or
cltd
jb
jae
cmc
lahf
or
popf
lret
cmp
sub
sbb
pop
and
movsb
imul
adc
adc
ds
pop
mov
movb
mov
scas
jne
mov
std
in
xchg
and
shrb
cmpsb
adcl
mov
int3
xchg
pop
push
leave
adc
xor
lret
or
sub
push
push
bnd
cmp
lds
mov
push
mov
add
sahf
add
in
and
cmpsl
orb
nop
into
gs
popf
xor
xor
addl
mov
xor
stos
xchg
sbb
out
push
enter
out
xor
pop
fldl
mov
roll
jae
frstor
sub
cmp
pop
lret
mov
lods
bnd
leave
cmp
jb
add
rorb
xor
dec
mov
adc
das
jle
cmp
adc
pop
repz
or
aas
push
mov
mov
jne
popf
lea
or
ljmp
enter
stos
xor
frstor
push
adc
adc
fwait
popf
ss
mov
cmp
push
arpl
jae
push
lahf
int3
lret
rol
nop
aam
mov
dec
mov
adc
outsb
push
mov
jae
jle
popf
cmpsl
cmc
in
test
cltd
test
pusha
add
cmp
xlat
jno
iret
insl
sub
xchg
js
jg
mov
pop
fldcw
sbb
sar
outsl
insl
sbb
pop
testb
adc
stos
in
jmp
cmp
pop
mov
ljmp
or
sub
test
push
in
mov
cmpb
shr
dec
mov
xchg
lock
mov
and
pushf
xor
mov
in
outsb
repnz
stos
mov
cmp
sub
sbb
ret
iret
push
roll
sti
ss
push
jg
jnp
jmp
lcall
outsb
xchg
test
xor
mov
out
xchg
add
push
fldl
cmc
pop
lea
popf
aas
push
ret
rcll
jmp
mov
sub
outsb
mov
scas
sbb
test
loop
jl
fbstp
dec
pusha
add
iret
xchg
pushf
sub
pop
xor
addr16
cmpsl
jbe
pop
inc
jmp
mov
in
les
and
and
add
xchg
fmull
mov
push
cmp
xor
loope
adc
rcrb
out
inc
sbb
clc
sbb
fsubr
daa
lcall
sti
or
in
push
sbb
arpl
scas
pop
add
fbld
into
ret
pop
add
inc
orl
push
enter
jmp
cltd
sbb
mov
cmp
lods
notb
and
divl
orl
xchg
sbbb
xchg
repz
mov
cmpl
ret
js
push
sbb
mov
pushf
sub
cmp
pop
sub
subl
adc
sbb
out
pop
pop
mov
sbb
js
xor
fcmovb
sbb
das
cmp
sahf
rcll
sbbb
repz
jbe
mov
sub
xlat
jno
pop
repnz
pusha
aas
xlat
ja
subb
and
popa
out
inc
mov
lock
js
pop
jle
mov
repnz
adc
fisubl
sub
gs
fcmovu
iret
imul
mov
in
mov
dec
sbb
in
pusha
cli
pusha
stc
stos
bound
sbb
push
pusha
sbb
lea
add
lret
sub
sti
test
and
pop
shrl
iret
repz
fsubr
into
push
xchg
add
push
arpl
mov
stos
cmp
lahf
in
sub
js
and
push
subl
insb
cli
pop
pop
in
mov
mov
shlb
sbb
sub
adc
cmp
and
scas
push
xor
or
sti
cwtl
subb
fsubrs
testl
repz
stc
push
jnp
and
lret
push
lods
std
and
push
negl
sub
dec
inc
fcompl
inc
loop
or
xor
test
cmpsl
cmp
fisubl
dec
cld
xor
mov
int
xchg
insb
push
mov
jns
std
and
push
ds
adc
fidivs
push
fwait
pop
scas
ss
out
cmp
lahf
push
test
cmp
sti
jecxz
mov
fxch
iret
xor
mov
out
hlt
sub
inc
dec
aad
adcl
pop
push
out
into
lock
stos
loop
push
add
push
leave
cmp
in
mov
div
loopne
out
push
std
xchg
js
pop
sbb
or
cmpsb
sbb
mov
lods
scas
movsb
adc
or
mov
and
pop
js
mov
mov
ficoms
shll
pushf
mov
add
xor
cmpb
enter
jl
mov
je
jmp
jmp
dec
bound
jle
mov
shlb
in
sbb
mov
or
les
or
mov
or
outsl
or
fisubl
cmp
in
xor
xchg
scas
movsb
pop
pushl
lock
test
sub
dec
mov
nop
inc
out
sub
xchg
jp
mulb
ss
jp
loop
pop
ret
fidivrs
push
test
gs
sub
mov
pop
mov
in
pop
shr
ss
cld
outsl
pop
ljmp
aaa
ds
push
orl
addr16
cmp
jnp
xor
push
addr16
outsl
call
into
xchg
cwtl
pop
test
ja,pn
mov
lahf
loope
shll
je
push
sti
test
fwait
rcl
data16
test
orb
add
lock
shlb
and
repnz
scas
in
outsb
mov
test
inc
arpl
inc
orl
test
ffree
jb
cmp
adcl
push
push
pop
fidivl
jge
sub
test
lods
dec
jbe
pop
push
jecxz
cmp
inc
fstps
mov
ds
int
insl
cmc
fidivrl
call
add
cmp
add
mov
mov
add
sbb
pop
movsb
fisubrl
adc
mov
into
outsl
sub
mov
sarb
push
in
mov
je
mov
sub
adc
dec
adc
mov
lret
sub
push
adc
stc
rorb
or
out
insl
shlb
xchg
jo
inc
sahf
lea
adc
insb
popf
add
sub
mov
push
cmpsl
shrb
cmp
rcrb
popf
adc
sarl
xchg
fwait
push
adc
test
mov
adc
adc
repz
pusha
cwtl
jecxz,pn
cmp
mov
in
call
mov
mov
inc
stc
ss
pop
leave
cmp
inc
inc
push
out
addr16
push
xor
mov
pop
adc
xor
sub
fmull
push
mov
in
mov
adc
iret
cmpsl
fidivl
ret
xchg
les
je
ds
aaa
push
fsubrp
lcall
or
addr16
in
push
fwait
pusha
xor
ss
inc
imul
inc
sub
mov
sbb
cld
jns
lahf
leave
push
fwait
jns
cmp
lea
push
jle
repnz
dec
mov
jle
add
push
lds
xlat
jo
insb
fwait
repnz
inc
xor
sbb
lea
sahf
in
shll
in
in
and
pop
shll
cmp
push
mov
sbb
add
adc
xlat
cmp
test
mov
or
mov
dec
into
or
cmpsl
inc
inc
sahf
mov
pop
vpsraw
jbe
jge
push
cmpsl
adc
shll
fsubr
shrb
sbb
cmp
dec
in
pop
int
std
jecxz
rclb
aaa
in
mov
test
movsl
lret
popf
cli
cmp
pop
mov
jmp
insb
addr16
cli
mov
sub
imul
mov
in
sub
push
bnd
mov
adc
add
mov
scas
push
jnp
shlb
mov
pop
adcl
jge
ja
insb
xlat
cmp
pop
mov
mov
leave
arpl
pop
test
xorl
mov
xlat
in
xlat
cmc
pop
std
inc
and
ret
inc
cwtl
or
js
sbb
pinsrw
sbb
inc
insl
dec
jmp
pop
out
cmp
push
cli
pop
call
aaa
mov
in
repz
sahf
cmp
adc
rclb
out
mov
xchg
dec
data16
leave
loop
jnp
hlt
mov
rclb
in
push
add
adc
mov
mov
or
enter
xorl
mov
sub
inc
adc
sub
pop
scas
mov
pusha
into
mov
mov
jl
cmpsl
and
mov
dec
mov
push
and
pop
adc
hlt
test
sub
jne
sub
imull
jmp
mov
pop
add
dec
in
pop
add
jmp
repnz
shll
push
xor
jg
dec
pop
adc
jp
dec
call
test
mov
daa
mov
jbe
inc
fdivl
loope
in
aaa
gs
xor
int
test
dec
adc
xchg
adc
inc
inc
ja
dec
push
sbb
push
push
lods
sub
inc
andl
ds
mov
ljmp
xchg
mov
lahf
mov
push
call
pop
add
push
das
cli
lock
fstps
jne
ss
fnsetpm(287
cmc
stos
inc
mov
les
push
jmp
stc
pop
out
aas
loope
or
pusha
fdivl
int3
fidivl
and
dec
sub
shlb
ds
or
sbb
sbb
sbb
test
fwait
out
rolb
mov
cltd
aaa
sarl
sti
call
push
sub
cs
aaa
loop
and
push
cmc
lahf
xchg
je
xor
push
shlb
xor
push
xor
push
add
mov
ds
push
sub
int
je
xor
jp
dec
cwtl
enter
ja
xlat
mov
out
mov
mov
pop
pop
jmp
xor
call
or
xchg
popa
faddp
leave
cmp
out
sbb
mov
mov
cmp
ss
mov
cwtl
shr
and
scas
aam
mov
aam
and
jae,pn
js
daa
out
loopne
pop
sub
repz
mov
push
add
enter
fnstenv
mov
inc
hlt
std
mov
cmpsl
cmp
jge
jo
gs
dec
dec
idivl
sub
ljmp
adc
popa
ss
dec
out
inc
mov
mov
cmpsl
fisubrl
sahf
fcmovne
and
sub
fadd
push
jle
sbb
adc
fdivrl
imul
xor
or
jl
fld
xchg
xchg
lock
test
cmp
jne
lods
sub
aad
sbb
jo
jo
aaa
push
aam
jno
jne
or
das
mov
push
dec
add
out
mov
shl
jg
pop
xor
out
mov
test
cmpsl
or
shl
mov
aaa
stos
pop
dec
jmp
or
adc
xchg
dec
mov
fadd
ds
add
and
movsl
dec
and
js
mov
xchg
dec
jle
hlt
aad
inc
popa
out
movsb
cmc
jne
jbe,pt
cmpsl
jns
jns
pop
call
pop
sub
sub
lods
push
mov
in
ljmp
ljmp
bound
mov
mov
rorl
ret
pop
jb
dec
add
mov
xchg
jecxz
mov
addl
pop
mov
mov
cld
adc
pop
and
cmp
and
mov
cmp
xchg
inc
adc
stos
add
rcrb
jmp
out
fldcw
mov
sbb
rorb
or
testb
sbb
inc
call
mov
aam
andl
icebp
dec
arpl
popa
in
mov
test
sub
sub
xchg
push
popa
cmp
or
mov
lahf
jb
rorl
jae
sbb
jle
pop
test
push
mov
xchg
in
jnp
cs
std
imul
add
shll
aas
sub
mov
stc
cmp
aas
mov
and
mov
das
les
cmc
test
lock
repnz
mov
adc
insb
cmp
movzbl
xchg
sbb
ss
inc
mov
aam
or
push
push
inc
xor
in
pop
pop
aam
cmpsb
adc
jo
mov
inc
push
lahf
mov
xchg
into
lret
push
mov
into
fwait
emms
test
call
sarl
xchg
shll
imull
fisubrl
sbb
int3
nop
stc
or
jp
adc
mov
pop
in
hlt
in
jp
rcrl
jl
mov
andb
cwtl
fidivs
sahf
rorl
imul
cmpsb
into
movsl
cmpsb
xor
xor
or
addr16
bswap
repz
lods
repnz
ret
mulb
add
xchg
mov
push
cmpsb
clc
mov
gs
push
repz
sbb
or
cmp
xchg
cmp
cwtl
xchg
and
push
repnz
and
push
cwtl
enter
les
lcall
cld
inc
dec
fistpl
shrb
push
mov
and
jae
sub
jno
push
mov
pop
push
jecxz
push
dec
and
and
push
pop
mov
decl
rcrl
pushf
cltd
sbb
and
cmp
or
mov
mov
mov
mov
fwait
inc
sbbb
jl
sub
outsl
mov
mov
mov
jae
notrack
adc
xor
inc
fcompl
push
xchg
add
add
jne
mov
cmpsl
rclb
cmp
fstps
sti
push
je
das
fwait
jno
cmp
xchg
pusha
xor
jae
mov
sub
pop
ds
scas
mov
daa
mov
jb
icebp
sbbl
outsb
xchg
scas
mov
test
mov
push
mov
pop
stos
push
pop
inc
call
mov
scas
imul
lahf
fisubrl
push
inc
stc
lods
fisubrs
pop
or
push
jno
inc
adc
pop
jb
cwtl
jecxz
or
mov
or
aam
arpl
inc
push
testl
pop
fcmovnb
in
pusha
faddl
mov
add
inc
dec
mov
enter
mov
in
pavgb
flds
test
cmp
xchg
scas
mov
xor
stos
or
test
mov
sub
xor
cltd
fldl
mov
push
jb
mov
push
shrl
shlb
xlat
xchg
fs
lock
sbb
mov
xchg
lods
sbb
or
add
cmp
insl
dec
leave
mov
push
mov
and
out
repz
aad
xchg
aas
repz
call
fcompl
lock
stos
je
pop
test
jo
jl
mov
mov
stc
es
das
mov
gs
iret
mov
cmp
and
mov
rclb
jae
rcl
sub
push
sub
orl
and
sbb
mov
in
jl
lds
sub
rcll
or
push
lret
lds
gs
push
pop
xor
mov
cmp
in
loope
std
or
imul
and
mov
cwtl
mov
jle
lret
mov
pop
or
adc
add
adc
lcall
movsb
mov
call
ret
aad
bnd
mov
sub
lret
std
leave
out
jmp
cmp
mov
mov
cmp
jbe
mov
push
lods
xor
adc
stc
cmp
call
js
xchg
adcl
jne
adc
adc
push
aas
cmp
sub
and
pop
mov
nop
mul
dec
cmp
inc
fdivp
jo
aaa
fcompl
pop
test
int3
sbb
jns
pop
insb
and
jp
fidivs
shlb
sbb
incl
sti
lcall
jns
jle
push
xor
fdivs
mov
push
lods
leave
dec
sar
mov
cmp
ljmp
inc
nop
orl
sbb
jp
in
test
sbb
cmpl
jl
push
lea
mov
dec
or
sub
xchg
fistpl
sub
add
sub
jns
out
fnsave
or
mov
mov
es
pop
ljmp
imul
gs
cwtl
push
lcall
mov
adc
hlt
add
es
frstpm(287
xor
inc
inc
push
ret
sti
dec
insl
mov
sar
mov
fcoms
jne
gs
push
out
mov
cmp
jp
dec
sub
mov
jp
sub
jo
dec
push
adc
shl
add
and
adc
xor
test
jne
jg
add
aaa
fisttps
lret
mov
lods
mov
scas
insl
xchg
dec
add
mov
push
fwait
xor
ficompl
pop
cld
inc
push
xor
add
push
clc
mov
xchg
xchg
sbb
mov
mov
popf
inc
or
mov
popf
mov
adc
lret
cmpsl
pop
cld
sub
or
lcall
insl
enter
xor
in
jmp
mov
nop
inc
fdivrs
and
leave
enter
jge
popa
sahf
repnz
lret
adc
fildll
mov
mov
cmc
or
shlb
orb
loope
xor
sub
faddl
dec
cmp
js
rcl
scas
pop
or
inc
movsb
sub
push
out
push
les
jo
and
or
jle
ds
push
popf
push
and
lret
push
das
mov
adc
nop
es
in
int
fcmovu
imul
jle
dec
aaa
mov
and
mov
shl
addr16
filds
leave
xor
outsl
rol
test
jle
imul
imul
sub
jno
cmc
jb
iret
pop
pop
xchg
xlat
or
cmp
mov
insl
inc
xor
into
inc
inc
loope
xchg
cmpsb
enter
or
nop
dec
dec
lahf
mov
push
push
adc
and
dec
xchg
in
sarl
mov
testl
fists
push
daa
shrb
cmp
test
xchg
add
int3
lcall
and
or
jle
mov
xchg
xchg
mov
cmp
sbb
mov
jp
adc
add
in
hlt
loop
test
adc
or
insl
ja
jge
pushf
jl
nop
cmp
add
pop
pop
jae
xchg
dec
daa
loopne
loopne
sub
inc
faddl
xlat
cmc
ret
inc
aas
iret
mov
fstl
dec
hlt
dec
in
or
idivb
nop
out
jne
subl
aam
in
cmpsl
in
and
inc
repz
mov
xchg
mov
sub
add
cmpsb
push
lcall
in
sbb
pop
leave
mov
std
jo
cmpsb
fstpl
and
dec
pusha
call
xor
xchg
sarl
imul
into
mov
testl
dec
outsb
movsl
push
mov
fldcw
adc
jns
jbe
push
cmpb
xchg
add
jae
pusha
pop
fiaddl
and
leave
int3
out
adc
and
int3
lcall
addl
mov
inc
mov
sbb
mov
pop
jb
in
pushf
fistpll
mov
jmp
iret
fisubl
aaa
sbb
gs
adc
adc
test
fiaddl
mov
adcl
bound
cld
mov
sbb
inc
outsb
int
push
push
inc
sub
mov
in
or
sbb
and
sub
in
imul
fisubrs
fbld
cmp
or
dec
pusha
mov
add
jle
sti
sbb
xchg
imul
xor
cltd
cmp
mov
pop
in
sti
sub
out
cmpsb
cmpsb
shlb
imul
pop
jnp
lahf
xor
xchg
or
inc
sub
sbb
sbb
xchg
dec
fwait
in
sbb
fistpl
shl
dec
dec
mov
and
mov
dec
dec
or
pop
lods
ljmp
imul
bound
xchg
int
stc
mov
sbb
sub
les
rcrb
inc
pushf
sti
insb
cmc
rcrb
into
aas
call
addr16
nop
add
std
dec
sahf
out
sub
call
imul
loopne
jno
outsl
notl
into
lret
dec
in
or
into
adc
clc
out
sbb
jne
push
pop
pop
push
ljmp
aam
scas
mov
inc
addr16
xor
adc
mov
mov
and
adc
sti
push
test
dec
cmpsl
lret
or
daa
dec
hlt
out
pop
jp
mov
daa
cwtl
pushl
push
pop
dec
or
out
es
push
inc
sbb
ja
icebp
push
xor
es
fbld
into
inc
add
cmp
pop
scas
fnstsw
push
mov
stos
gs
scas
mov
and
jmp
imul
icebp
loopne
pop
std
push
in
fs
gs
jmp
xchg
cmpsl
sub
mov
mov
push
roll
cmp
sahf
sbbl
call
xchg
xor
mov
cmpsb
loop
ss
orb
out
inc
dec
inc
sbb
enter
cwtl
or
sbb
jg
or
pushf
arpl
in
push
mov
subb
jge
jge
nop
pop
dec
sub
jno
push
out
divl
adc
inc
push
mov
xchg
lds
ficoms
xor
je
pop
xchg
int3
aam
clc
inc
int3
test
add
popl
repz
and
insb
pop
fmull
jno
shlb
sbb
inc
add
push
bound
cmc
sub
nop
xchg
fwait
xor
cltd
leave
fimull
sbb
inc
rcrl
and
inc
aam
pushf
xchg
pop
stos
jmp
jmp
push
dec
sbb
jne
das
jle
jmp
push
nop
dec
clc
imul
popa
stos
jle
xlat
in
iret
pushl
pusha
mov
add
pop
orb
iret
jbe
inc
es
int
outsb
mov
push
pop
daa
inc
pop
and
ret
in
and
loope
mov
insb
out
dec
adc
jg
push
pop
mov
xor
ja
outsl
mov
mov
dec
shl
and
das
gs
jle
xchg
dec
out
push
leave
out
loopne
add
mov
ljmp
inc
lea
fimull
imul
cmp
jnp
push
cld
icebp
outsb
xor
int
add
lret
add
in
dec
bnd
push
xchg
in
iret
mov
out
scas
in
adcl
pop
jae
mov
add
xchg
xlat
enter
or
nop
je
cmp
add
arpl
mov
in
pusha
test
jnp
lds
lcall
or
scas
cltd
out
jne
int
rorl
stos
jae
mov
fcomi
sub
fwait
adc
cmpsl
pop
sbb
cwtl
mov
mov
push
xchg
add
xlat
ja
loope
sbb
dec
mov
outsb
xorl
xchg
cld
dec
xor
xor
add
mov
push
inc
cmpsb
pop
daa
jns
lea
xor
jge
outsb
sub
xor
fdivs
sti
inc
mov
pushf
jge
dec
popa
jl
sbb
loope
add
mov
dec
jge
sti
in
leave
xchg
fsubp
cwtl
mov
push
pushf
mov
stos
pop
cmp
icebp
cld
in
dec
mov
or
popf
mov
jg
pop
aaa
xchg
pop
lret
push
jae
xor
adc
mov
pop
and
fsubrl
sti
mov
xor
adc
test
mov
or
push
inc
scas
mov
fidivs
cmp
sbb
sbb
in
outsl
rorl
pop
enter
std
inc
push
add
insl
xchg
dec
sub
imul
stos
andb
jb
bound
div
push
and
ret
mov
add
ret
dec
into
out
push
mov
int
cld
inc
push
adc
ss
push
and
xor
jmp
push
orl
or
lcall
xchg
sub
mov
pop
lret
mov
ds
dec
rcll
mov
mov
cmp
cld
inc
lea
loope
outsb
jae
sub
movsb
and
stos
notb
std
repnz
rcrl
mov
add
cmp
adc
xchg
sbb
xchg
adc
in
cltd
sbb
dec
mov
adc
pusha
mul
lret
or
fstpt
fstps
jo
and
out
jae
mov
sbbl
adc
aas
roll
cs
push
insl
cmp
fidivrl
in
scas
inc
mov
shlb
mov
pop
loope
jecxz
ds
iret
mov
mov
clc
xchg
repnz
and
lcall
mov
pop
test
push
sbb
jg
push
test
mov
push
xor
sahf
xlat
fldt
ljmp
inc
sbb
out
mov
mov
push
and
fstpt
jge
divl
aam
and
pushl
mov
sbb
pop
mov
mov
jmp
sbb
xlat
cltd
push
push
rcr
loope,pt
push
cmc
roll
push
or
shlb
add
es
loop
rclb
mov
outsb
bound
mov
mov
sbb
arpl
sarb
pop
xchg
stos
pusha
fadds
pop
add
mov
bts
inc
jg
xchg
adc
jae
jo
mov
push
fidivrl
in
jne
jecxz
xchg
in
nop
loope
or
adcl
es
fwait
sbb
out
leave
mov
sub
stos
dec
and
scas
mov
inc
jns,pn
cmpsb
out
scas
testl
int3
jle
push
jmp
or
arpl
sub
ds
out
insl
xor
xor
cmc
loop
sbbb
sbb
or
mov
sbb
and
mov
clc
test
cmp
mov
mov
in
imul
addb
pop
dec
push
jl
loopne
xchg
pop
mov
jg
das
stc
push
and
in
aad
or
scas
xor
inc
pop
sbb
or
mov
or
notl
xchg
sub
or
push
jge
orl
and
cmp
lahf
pop
jle
mov
ret
gs
shlb
inc
scas
es
test
in
shlb
mov
inc
mov
mov
les
jp
rcrl
or
adc
icebp
lea
mov
fidivrl
in
pop
sub
loop
outsb
fbld
inc
mov
imul
iret
imul
ja
xchg
add
cmp
add
gs
pop
push
pop
push
lds
aam
xchg
loop
cwtl
mov
mov
adc
mov
mov
jbe
ret
popf
outsb
push
dec
clc
shlb
es
call
xor
or
adc
arpl
adc
push
jmp
xchg
js
inc
xor
nop
test
je
or
sub
push
repnz
out
add
subl
sub
inc
or
loopne
popf
adc
jmp
cld
push
mov
nop
xchg
adc
jmp
mov
cmpsl
cmp
imul
cmp
cltd
inc
js
cmp
lret
xor
xchg
inc
inc
pop
enter
adc
cmpl
rcpps
or
or
iretw
ljmp
xchg
stc
fcoml
orl
xor
cmp
mov
stos
pop
push
pushf
fsubrs
lock
and
test
arpl
pop
inc
xchg
mov
out
xchg
mov
iret
mov
xchg
not
mov
sbb
bound
xor
mov
xor
ss
push
sbb
sub
xor
or
cmp
jae
mov
aaa
data16
in
sub
sti
mov
dec
xor
xchg
sahf
jecxz
pand
loope
addr16
or
mov
sbb
aam
aaa
insl
das
jmp
mov
xor
mov
mov
sub
and
imul
inc
nop
leave
mov
xchg
pop
adc
movsb
popa
cmpsl
xchg
jg
and
jle
cld
movsl
or
xor
jmp
sti
das
xchg
push
test
sbb
pusha
inc
jnp
insl
cmpsl
iret
movsb
xor
mov
or
jb
shl
inc
jae
cli
mov
adc
mov
es
push
mov
dec
or
addl
test
mov
jae
dec
mov
mov
sahf
outsl
ds
push
addb
pop
mov
rcrl
jae
add
out
movb
push
pusha
jno
sti
jne
xchg
cmp
push
out
sub
xor
mov
mov
xchg
insl
mov
sub
push
out
xor
mov
mov
gs
nop
gs
sub
xchg
andl
inc
das
movsb
shll
sti
xor
loope
js
dec
mov
and
and
or
sahf
add
dec
cmp
lds
pop
fwait
into
jmp
movsb
mov
or
xchg
faddl
mov
mov
inc
rcrb
cmpsl
mov
inc
lds
aad
dec
ljmp
xchg
xor
sub
inc
pop
shrb
mov
fstps
aaa
push
clc
test
pop
scas
cmpsb
out
push
xchg
mov
pop
cmpsb
add
xchg
pop
ljmp
jns
lds
dec
adc
lock
dec
cmp
insl
jecxz
in
sbb
or
add
cli
add
and
adc
test
jnp
cmp
jbe
inc
sbb
in
ss
in
fwait
dec
jbe
mov
mov
scas
hlt
adc
and
jl
push
ja
xor
xchg
mov
dec
call
cmpb
inc
aas
cmp
vpsllq
mov
mov
mov
cwtl
fwait
mov
sbb
add
push
hlt
xchg
movsb
rcl
stos
pop
and
lods
out
jmp
fsubrl
ss
or
lret
loopne
mov
and
loopne
fstpl
pop
pop
adc
test
idivl
pop
add
lods
add
mov
test
add
jne
sbb
push
out
roll
xchg
lret
int3
and
mov
and
insl
test
sbb
mov
push
push
mov
outsb
sub
pop
mov
sub
mov
cmpl
les
mov
pop
pop
pop
out
lock
fists
fildl
shll
sub
je
jge
or
pop
push
xor
push
in
out
jno
push
push
addr16
xor
sbb
sub
testl
gs
sub
out
call
mov
xor
insl
mov
clc
sub
jg
into
ret
mov
cmp
sbb
and
xchg
pop
ret
mov
xchg
sub
dec
ja
out
ljmpw
lcall
jns
mov
fiaddl
xchg
insl
xor
adc
ljmp
les
sarl
scas
or
xor
outsb
dec
popa
mov
andb
xchg
mov
pop
mov
mov
inc
xchg
dec
xor
pop
out
fidivs
mov
jne
fxch
adc
orb
fwait
repnz
mov
addr16
push
outsl
data16
loope
out
sub
stos
loopne
jl
aam
or
sbb
ror
adc
int
jb
pop
repz
lods
xchg
cmpsl
sub
inc
push
inc
aad
mov
divb
daa
adc
mov
stos
mov
xlat
xchg
out
xchg
sti
cmc
leave
adc
cmp
arpl
cmp
idivb
xlat
in
mov
sub
ds
xchg
cmp
cmpsb
jle
popf
xchg
daa
stos
cmp
push
sub
push
sbb
bound
in
aas
fidivrs
pushl
cmp
or
stc
mov
xor
cmp
jo
xorb
fs
xchg
lcall
movb
sbb
or
mov
mov
fisttpll
in
sbbb
sbb
push
push
and
cmp
out
int
ficomps
cmp
std
and
out
and
xchg
mov
or
aas
sbb
fdivs
mov
pop
push
adc
hlt
lods
push
fistps
sahf
mov
lods
fcmovbe
imull
mov
sbb
stos
ret
xor
aam
les
xor
mov
cmc
mov
fsubrs
daa
sub
mov
sbb
imul
cld
outsb
jle
les
pop
out
loopne
cmp
or
and
push
hlt
lods
mov
sbb
adc
push
jmp
mov
enter
mov
repz
push
test
or
stos
addl
lahf
fwait
popa
cmp
shlb
data16
xchg
inc
bound
call
divb
push
aad
out
loope
jbe
rclb
inc
mov
and
imul
xor
popf
mov
mov
sub
test
addb
cmp
mov
rcll
fcomip
aas
stos
xor
xchg
in
dec
repnz
fbstp
inc
add
adc
cld
ljmp
push
ror
xlat
cmc
ret
adc
repnz
aaa
aad
or
pop
pop
cli
add
out
mov
jl
ret
test
clc
es
mov
setle
or
in
mov
scas
shrb
inc
mov
dec
rcll
rolb
and
or
test
gs
mov
icebp
sub
mov
push
out
test
and
xor
aam
orb
mov
mov
lcall
lock
outsl
imul
fs
mov
sub
jb
inc
das
push
cmp
bound
pop
xor
cs
shrb
pop
sub
outsb
sbb
lds
jnp
je
cmpsl
loope
imul
xchg
add
call
push
mov
jp
sub
add
clc
add
sbb
inc
jnp
and
out
call
push
dec
nop/reserved
mov
push
std
mov
xchg
es
mov
fmuls
add
cld
xchg
dec
rcll
sbb
xchg
daa
push
fnstcw
out
loopne
mov
scas
cs
mov
call
ret
mov
inc
mov
fcmovbe
or
testl
pop
test
sub
cmc
outsb
std
mov
notb
jbe
shr
xor
push
aam
mov
add
icebp
mov
gs
mov
ret
aaa
mov
dec
cmp
test
in
sub
or
ret
fwait
inc
subb
jg
sarl
xor
push
rolb
clc
adc
rcrb
lcall
push
xor
por
cmp
leave
pop
loopne
jo
insb
jp
sub
aam
jne
cmp
popl
add
lahf
jmp
mov
push
ja
sbb
xchg
testl
imul
clc
outsl
mov
mov
ja
loope
ljmp
rolb
pop
adcl
or
sbb
imul
cmpb
push
xor
sbb
rcrb
push
mov
adc
mov
mov
xor
test
xchg
mov
pop
subb
xchg
icebp
push
xlat
inc
in
push
pop
cld
pop
adc
or
jp
jle
mov
test
in
orl
xchg
dec
mov
mov
lcall
movsb
cld
aad
movsb
movb
insl
xchg
les
mov
mov
mov
fsubs
mov
or
insl
test
lds
pop
fidivs
repz
jp
xor
inc
rolb
dec
dec
push
hlt
loop
cltd
push
fwait
mul
in
cli
push
sub
mov
lea
gs
lret
outsb
and
testl
ficoms
and
test
int3
push
jg
ss
cltd
mov
pop
stos
fimull
cwtl
test
jecxz
mov
mov
lcall
and
pop
bound
insl
ss
or
mov
out
add
mov
out
leave
movsl
stos
lock
mov
gs
sbb
ja
je
cmpl
les
aam
lods
or
cmc
sub
mov
xchg
hlt
outsl
ret
push
mov
xor
sub
inc
nop
lds
dec
shll
sbb
js
pop
cmp
push
iret
push
shr
lret
mov
pop
pop
add
xchg
mov
sbb
sti
and
je
dec
mov
negb
outsb
mov
mov
sbb
in
fucom
add
cmp
cmpsl
sbb
in
cli
dec
mov
fs
daa
sahf
pop
adc
add
mov
daa
aam
sub
lds
pushf
pop
adc
xor
ret
pusha
xor
add
movsb
sub
dec
in
in
mov
stos
cmpsl
and
and
repnz
push
mov
push
mov
add
xor
mov
lret
les
xchg
lds
adc
in
sub
mov
jmp
push
in
mov
mov
lds
adc
fwait
ss
das
xor
jb
addl
pushf
cmp
in
in
mov
cld
pop
decl
or
and
xchg
lret
aas
inc
repnz
std
cltd
loope
sub
popf
fisttpl
pop
out
std
add
sub
das
in
xchg
xchg
orl
sbb
mov
mov
arpl
call
clc
mov
pop
adc
jne
pop
ja
call
jg
jg
pop
int3
pop
cwtl
fcoml
scas
mov
adcl
test
xchg
mov
add
insl
shrb
insl
out
and
mov
and
mov
xor
inc
jmp
dec
test
cmp
test
xchg
fwait
rclb
add
loop
xchg
xchg
adc
sarl
xchg
enter
mov
jnp
jecxz
pop
je
lret
fdivr
ret
nop
jne
in
fimuls
push
movsl
decl
lock
push
sub
daa
sub
cmpsb
fs
ljmp
mov
xlat
arpl
mov
lahf
fnstsw
ficoml
jp
xor
ficoml
push
sbb
pop
icebp
xor
sub
flds
push
jbe
or
insb
mov
icebp
inc
mov
subl
and
xlat
hlt
sub
add
loop
inc
sub
pop
and
sarb
je
xchg
xor
inc
push
sbbl
mov
lcall
leave
xchg
push
inc
add
jl
mov
movsb
mov
movsb
leave
jle
test
lods
andl
adc
fnstenv
fists
cmpsb
fwait
jg
call
adc
or
xchg
xor
push
xlat
call
mov
mov
aad
sbb
movsl
jecxz
mov
rclb
leave
scas
ja
js
adc
or
or
jmp
cmc
mov
stc
dec
jne
enter
cmpsl
mov
adc
and
push
lret
push
movl
add
lcall
xlat
adc
stos
xchg
bswap
lds
mov
xor
aaa
jnp
mov
imul
and
adc
xchg
xor
inc
inc
rclb
stc
insl
sub
ljmp
repz
jl
cmpsb
mov
push
mov
cmp
and
popf
fstpl
sbb
dec
jnp
add
lret
mov
pop
pop
rolb
shl
pop
sbb
push
push
call
pusha
and
push
cmp
fcoml
add
sbb
add
jb
rcr
inc
sti
cmp
fsubrl
lods
ja
loopne
xchg
fs
arpl
adc
fst
add
mov
inc
sarb
loope
mov
sub
pop
aam
adc
or
push
mov
push
stos
outsb
mov
mov
mov
mov
sub
mov
movsb
sub
pop
into
inc
jnp
pop
and
mov
xor
dec
dec
std
adc
sarl
call
clc
jl
sub
pop
pop
sub
mov
lods
ss
ss
imul
fwait
mov
mov
inc
cltd
cmp
dec
mov
cs
sub
int
mov
add
pop
aaa
in
xchg
jns
scas
int3
cwtl
sub
push
sbb
pop
inc
mov
in
xor
mov
test
or
cli
mov
shrl
fildll
int3
jp
gs
sti
insl
push
pop
fnstsw
fs
cmp
xchg
push
imul
int3
lods
ss
mov
xor
mov
insl
xor
cs
and
pop
loope
xor
push
arpl
push
pop
or
mov
jmp
sbb
arpl
leave
cmpsl
cmpsb
cmpsb
mov
mov
adc
lcall
jge
add
in
lret
or
cmp
leave
add
push
dec
iret
cld
mov
push
test
insb
adc
call
notb
jl
enter
xor
xor
adc
sub
push
setp
out
dec
repz
inc
sbb
ror
cltd
out
movsb
cmc
sarl
cmp
cmp
inc
icebp
and
je
dec
adc
cmp
push
fwait
inc
cli
popf
icebp
dec
fnsave
mov
sbb
popf
pop
pop
out
cld
cltd
jl
add
lods
adc
pop
loope
shlb
popa
int
dec
jle
cmp
jmp
pop
aad
push
bound
push
outsb
or
movsb
fnsave
mov
jmp
jns
daa
and
lcall
ss
std
scas
cmpsb
incl
shr
ss
inc
call
popf
sub
rcrb
xor
pop
cltd
in
aaa
lods
shl
es
pop
dec
ret
mov
push
mov
inc
lock
daa
test
push
mov
inc
outsb
in
jae
mov
ds
mov
or
mov
sahf
in
mov
sbb
movd
das
push
outsl
mov
shlb
jg
mov
mov
clc
cwtl
jge
push
cmp
loopne
lods
loop
and
dec
aad
and
and
sub
xor
jg
ss
scas
pop
aad
xlat
sti
sub
clc
add
sub
push
jecxz
call
mov
xor
or
divl
int
call
dec
icebp
jp
push
push
pop
pop
mov
jmp
into
mov
ljmp
ret
out
outsb
repz
xchg
das
out
mov
fcompl
push
or
jp
out
arpl
jo
lds
mov
rolb
mov
in
jmp
push
dec
std
and
mov
cmc
or
int
lahf
sbb
loope
aad
cmp
addr16
leave
inc
and
push
sub
aas
lods
popl
mov
call
add
cs
je
call
std
repnz
sbb
mov
sbb
sti
xchg
xchg
in
scas
and
mov
mov
movsb
or
cmp
or
and
pop
xor
call
jne
cmp
mov
das
enter
xor
insl
mov
dec
imul
jae
mov
mov
mov
push
push
mov
lcall
hlt
push
sub
add
push
ja
outsl
cmp
jbe
push
pop
aas
js
adc
rclb
sahf
aam
xor
mov
xchg
push
pop
sbbl
hlt
std
mov
mov
pop
and
jmp
inc
ret
dec
fnstcw
adc
cmp
push
xchg
and
jmp
push
mov
inc
adc
jo
add
adc
stos
aaa
mov
pop
mov
lcall
pop
dec
ficompl
fwait
pop
or
add
pusha
dec
adc
add
cwtl
out
lahf
test
mov
push
cmp
cmp
out
cmpsb
add
xor
and
es
sbb
pop
xchg
xchg
mov
add
push
push
lods
mov
jge
mov
sahf
js
dec
jg,pt
stos
inc
popf
sub
push
jg
push
andl
ss
mov
stc
add
mov
popf
mov
lock
mov
int
fimull
in
cmc
adc
daa
ret
icebp
sub
nop
or
xor
ret
clc
cmp
mov
jae
or
xor
cmovnp
jmp
mov
jbe
or
jae
into
insb
loopne
mov
push
pop
cs
xchg
jo
addr16
rcll
add
jnp
or
mov
and
fisubrs
and
and
mov
cli
jne
mov
push
pop
add
addr16
xlat
jge
in
into
loope
jmp
dec
rcll
cmpsl
push
ret
xchg
adc
std
lds
ja
es
push
and
sarl
vprotd
repnz
int3
mov
sub
mov
or
or
mov
ss
fdivp
pop
or
lds
pshufw
test
adc
shrb
cwtl
mov
adc
jae
push
push
mov
mov
cld
push
jns
outsl
out
data16
push
in
and
inc
fisttps
sbb
ficoms
and
aas
inc
fidivrs
push
cmpsb
jg
aaa
or
repnz
xchg
dec
repz
mov
test
cmp
imul
push
sub
sub
and
or
mov
nop
imul
ret
mov
fcompl
loop
leave
orb
xchg
push
xchg
xlat
nop
dec
xor
aas
add
pop
syscall
pop
fwait
mov
mov
jae
or
jb
sahf
nop
mov
sub
push
call
cmc
imul
adc
ds
pop
pop
pop
mov
dec
call
je
out
icebp
arpl
out
xor
adc
lods
xchg
mov
pop
mov
mov
loop
mov
movb
xorb
add
test
shl
mulb
jmp
mov
outsl
test
jecxz
jnp
xor
mov
aad
lahf
out
push
ljmp
push
jne
fwait
sub
movsb
dec
xor
daa
jmp
jbe
movsl
fs
popa
or
cmpsl
fdivrl
add
dec
xor
test
popf
enter
leave
xor
adc
sahf
repnz
cmpsb
fistps
jbe
ret
inc
popa
sti
add
cmp
jg
in
ret
aam
es
popa
cmp
in
pop
js
jns
inc
adcl
xchg
inc
popf
out
xchg
cmp
inc
outsb
fsubs
mov
inc
cmp
sti
cmp
mov
mov
orl
or
lret
cmp
xchg
repnz
imul
movl
outsb
in
out
and
aad
or
mov
test
mov
cmp
sub
pop
iret
jp
in
movb
add
js
cmp
push
mov
mov
filds
das
aaa
shrb
cmpsb
push
or
div
inc
mov
xchg
test
repz
test
dec
int3
rorb
je
jmp
dec
xchg
dec
push
fwait
fs
outsl
aam
fimuls
out
inc
negl
aas
jge
je
inc
jle
push
mov
enter
xlat
rolb
lds
xchg
cmp
pop
sbb
movsl
sarl
sarl
adc
je
jmp
js
lret
repnz
cmp
sub
or
popf
xchg
xchg
lock
sub
pop
xor
mov
adc
adcl
push
sub
jb
sbb
mov
cld
repnz
daa
inc
andl
jle
mov
xchg
iret
xlat
iret
pop
int
push
out
xchg
sub
out
ror
loopne
pusha
push
inc
in
test
arpl
mul
mov
nop
add
movsl
divb
data16
cmpsl
mov
dec
mov
mov
popf
lcall
pop
or
sub
out
lea
jmp
popf
lock
jp
or
sbb
dec
aad
and
inc
and
popf
or
jns
cltd
in
pusha
jnp
mov
pop
popa
aaa
jo
mov
dec
cmp
fimuls
pop
and
add
es
loopne
mov
in
cli
mov
insw
dec
mov
imul
stos
fcomps
cltd
cltd
fdivrp
sbb
inc
mov
jge
test
mov
adcb
inc
je
enter
out
std
pop
mov
or
stos
clc
jp
lods
push
pop
in
aaa
sbb
and
mov
ret
jle
push
sarl
jecxz
cmp
mov
inc
lret
pop
subl
pushf
pop
jae
pop
mov
stc
imul
arpl
jno
jae
fwait
xor
jb
jmp
js
incl
xchg
push
add
ret
in
nop
mov
push
loop
mov
das
ljmp
dec
push
push
adc
dec
jo
out
lcall
mov
addr16
cltd
fdivl
adc
lods
fstps
push
pusha
and
mov
pop
and
xsha1
cmpsb
dec
fisubrl
cmp
jmp
inc
jle
lret
or
adc
xchg
and
aaa
call
shlb
fwait
xchg
loop
dec
xchg
mov
pop
push
xchg
jg
sbb
cmpb
cmp
xchg
cmp
dec
cs
add
xchg
add
xchg
fmull
jge
sub
mov
xchg
mov
xor
inc
adc
es
lret
push
in
shlb
xchg
mov
ljmp
push
mov
mov
push
gs
sbb
out
jns
out
mov
jp
lds
mov
add
clc
out
into
lcall
fs
xchg
cwtl
sbb
dec
movsl
mov
jmp
dec
mov
negb
xor
add
adc
pusha
push
add
inc
jnp
mov
lea
pop
out
push
ss
sbb
rcrb
loope
cwtl
insl
dec
rcrl
test
sarl
jbe
aaa
or
xor
and
fistpl
push
xchg
jge
mov
add
shlb
xor
mov
xlat
out
push
movsb
dec
sbb
jecxz
scas
sbb
dec
lret
ret
hlt
sti
mov
in
xchg
lods
das
push
or
jecxz
add
flds
adc
mov
in
xor
loopne
mov
push
pop
cmc
mov
push
adc
fwait
mov
xor
sbb
mov
cli
ds
inc
jno
ret
xchg
in
mov
movsb
roll
xchg
out
jnp
adc
scas
in
mov
sub
mov
jnp
sub
jnp
mov
arpl
cld
mov
or
mov
cld
popw
aas
mov
or
cs
push
data16
icebp
adc
xchg
push
add
scas
pop
push
movsl
testl
mov
orl
movb
push
repz
das
bound
xchg
mov
cmp
jbe
push
lret
jmp
outsb
xchg
xlat
fldenv
jl
cwtl
mov
xor
cmp
push
jns
lahf
icebp
arpl
adc
movsb
mov
add
xchg
jle
pop
stos
jge
movsb
unpckhps
push
mov
xchg
or
and
cmp
push
pop
inc
add
pop
mov
scas
sbb
popf
sbb
push
ficomps
xor
xor
cld
dec
inc
push
lret
and
mov
roll
mov
mov
mov
mov
addr16
mov
mov
pop
movsb
add
xor
inc
push
ss
pop
xor
mov
daa
xchg
test
flds
jl
xorb
push
jmp
rcrl
jb
sub
or
push
es
xchg
loop
into
mov
and
and
adcb
sbb
xor
inc
inc
mov
cli
lods
push
lods
aad
stos
sbb
pop
test
pusha
scas
sbb
adc
loop
sub
jb
mov
inc
and
adc
adc
es
cltd
jo
mov
sub
clc
adc
test
mov
ret
mov
jae
mov
cs
nop
cmpl
pop
mov
xchg
mov
jecxz
sub
rcrb
mov
in
fwait
jbe
inc
iret
adc
jmp
outsb
pusha
mov
push
dec
test
ficoms
jge
xchg
cli
mov
shl
hlt
push
or
pusha
adc
pop
mov
inc
es
lock
pop
push
clc
iret
inc
mov
xchg
push
xor
jns
sti
faddl
sbb
mov
mov
push
pop
jp
sub
cmpsl
lret
icebp
lods
push
popa
jns
inc
enter
sbb
xchg
pop
xor
mov
repnz
inc
bound
pop
movsl
les
jmp
mov
mov
inc
lock
test
testl
bound
js
shlb
or
sbb
sbb
inc
std
cmp
notl
sbb
scas
pusha
jg
pop
xor
push
fwait
les
movsl
pusha
int3
gs
add
inc
jno
sub
mov
fcmove
mov
scas
sbb
push
cmpsb
dec
add
xchg
pop
mov
xchg
xchg
lock
es
mov
cltd
nop
mov
ss
jecxz
pop
jns
cmpsb
insl
xlat
mov
lahf
and
roll
xchg
push
das
add
data16
lock
xchg
jecxz
cld
or
dec
push
movsl
push
in
mov
add
ja
pushf
ja
stc
test
or
xor
sbb
add
jnp
jb
xchg
fimuls
into
cmova
mov
sti
ds
leave
out
into
iret
enter
stos
mov
pop
or
xchg
stc
xor
shrl
mov
sub
scas
cs
cwtl
loopne
sti
sub
leave
add
inc
dec
fildl
add
add
loop
test
cmp
xchg
cmc
rorb
push
fwait
cmpsb
cld
out
push
jae
mov
sbb
xlat
mov
push
and
cmp
and
adc
mulb
sub
dec
sub
into
das
js
cmp
cmp
in
jae
pop
xor
pop
sub
jns
pop
cmp
nop
icebp
fnstcw
mov
push
sbb
adc
lret
xchg
out
shll
push
sti
adc
ljmp
sbb
pushf
sar
cmpl
xchg
sbb
xchg
xchg
rcl
repz
xchg
mov
and
test
mov
test
hlt
adc
into
sahf
orl
or
dec
aad
and
lahf
les
jae
ret
pop
mov
dec
movsl
xor
sub
scas
pop
cmp
in
rcrl
lahf
sub
rcrb
jecxz
inc
inc
mov
push
cltd
inc
cmp
or
mov
mov
jl
imul
clc
jg
xchg
fwait
sti
in
pop
aad
xchg
push
xlat
loope
inc
dec
int
add
and
in
xor
cwtl
mov
xchg
ja
jo
stos
rcll
and
sbb
sub
loope
cmp
fdivrp
stos
clc
or
sub
sub
aad
sbb
jl
enter
js
adc
mov
pop
rclb
aas
outsb
mov
loopne
inc
rcr
ja
fs
or
or
idivl
pop
dec
aad
adc
fldl
jnp,pt
xor
rorb
cmp
out
iret
mov
repnz
sti
int3
push
loopne
loopne
scas
pop
add
inc
push
push
rolb
movsb
popa
in
or
int3
dec
inc
push
rcr
icebp
mov
mov
hlt
jle
pushf
cmp
js
test
jae
popf
test
jge
sahf
xor
mov
subb
cmc
aaa
fld
jo
jnp
push
mov
jo
ja
jae
push
in
xor
jb
xchg
dec
add
inc
fadd
fs
call
cli
mov
fiadds
mov
int3
inc
lret
pop
mov
out
adc
test
xor
addr16
push
mov
sub
movsl
adc
pop
out
out
sub
jmp
or
aas
pop
jno
cmp
subl
rcll
pushf
adc
xchg
lret
lea
inc
mov
shl
adc
adc
insb
adc
mov
or
push
test
mul
lods
push
stc
call
mov
outsb
mov
sub
mov
jecxz
add
loopne
fidivs
minps
inc
ficoms
mov
sbb
dec
jl
mov
aam
cmc
das
push
aaa
movsb
aas
inc
pusha
sbb
popf
xchg
mov
and
fdivrl
push
sub
sub
mov
push
mov
in
ja
loopne
and
sub
stc
rclb
leave
test
fistl
pushf
pop
mov
pop
fildl
and
enter
popa
and
jnp
int3
sbb
pop
std
lret
adc
pop
cltd
adc
cmp
das
push
cmp
cmc
enter
les
push
lret
fsubrl
adc
loopne
xor
cmp
jle
in
or
inc
cmpsb
push
lret
ljmp
mov
push
pop
cmp
roll
cwtl
subl
icebp
xor
int
jle
add
and
jb
iret
test
and
adc
sbb
push
sub
push
gs
mov
test
jno
mov
fwait
push
mov
inc
je
leave
stc
lds
mov
ds
ret
mov
inc
into
adc
imul
mov
cmc
shll
lcall
jns
add
data16
cmp
sbbl
cmp
call
mov
xorb
xchg
push
lds
pop
inc
stc
js
dec
lret
outsb
fdivrl
lock
adc
scas
xlat
subl
mov
inc
inc
out
rolb
pop
lahf
pop
in
or
lcall
lahf
add
enter
gs
pcmpeqw
pop
testl
inc
xor
out
mov
mov
rclb
cmp
clc
adc
pushf
aas
aam
arpl
lret
cmc
sysenter
xchg
add
mov
fucompp
xor
jmp
inc
insl
dec
jmp
flds
sub
aad
mov
cmpsl
rcll
mov
and
xchg
out
into
lods
adc
or
notb
int3
mov
out
xor
stos
jmp
inc
scas
and
js
cld
or
sbb
pop
bound
jmp
rcl
jae
addr16
push
or
nop
pusha
and
shlb
pop
push
clc
test
xor
jl
mov
mov
gs
jnp
xor
add
fisubs
add
jg
mov
lock
fistl
mov
into
sub
pop
clc
and
mov
adc
std
hlt
inc
and
cmp
adc
xor
mov
aam
es
outsb
rcrb
hlt
in
pop
mov
adc
pop
bound
mov
or
sub
in
lds
jecxz
add
sbb
icebp
negl
test
xchg
movsl
add
cld
pop
sub
fsubrl
add
in
pusha
or
add
cmp
insb
inc
cmp
xor
sahf
and
inc
fisubrl
cwtl
fidivl
shrl
xlat
or
inc
pop
add
fcomp
push
das
jmp
fnstcw
cmp
cli
jg
inc
fdivrs
ljmp
sub
adc
inc
adc
inc
xchg
shlb
adc
daa
pop
cmpsb
scas
fsts
push
pop
mov
sahf
mov
insb
sbb
lods
push
fcmovb
movsb
cmp
in
divl
xor
enter
push
cmp
inc
ret
jl
dec
pusha
and
inc
mov
sbb
cmc
jb
ss
sbb
bt
sbb
sbb
and
sub
lods
sti
add
pop
ror
mov
mov
jmp
rcl
test
push
pushf
dec
les
in
mov
jnp
icebp
and
in
into
fucomip
es
sbb
cli
or
push
adc
pop
add
lcall
xchg
repnz
mov
xchg
cmp
cltd
xchg
mov
call
xchg
dec
jns
pop
dec
stos
pop
in
lock
or
cwtl
mov
fld
sbb
sbb
push
adc
mov
and
sub
mov
xor
sub
jmp
push
mov
xor
push
in
aad
xor
add
jbe
mov
nop
mov
sub
push
aaa
xor
add
jae
shll
leave
xchg
pop
xchg
mov
or
fdivrs
xchg
inc
push
add
pop
cmp
cld
push
out
pop
pop
lock
sbb
mov
pusha
mov
lds
inc
int
out
mov
jnp
jb
cld
and
mov
out
lret
loop
pop
out
in
stos
mulb
xchg
mov
js
rcrl
leave
ss
shll
inc
pop
pop
cmp
stos
xchg
in
xchg
es
jmp
ret
sbb
xor
sub
in
daa
in
ljmp
out
and
ja
and
adc
mov
aad
xor
shl
pop
adc
sub
add
cmp
mov
inc
imul
push
out
fiadds
sbb
push
sti
sub
dec
dec
cmp
jb
testb
in
xchg
cmp
rclb
jno
cld
rolb
jnp
and
and
sub
nop
inc
add
push
inc
insl
xchg
orb
dec
fadd
cli
sbb
lods
imul
in
adc
push
sahf
pop
cltd
iret
push
or
mov
rorl
lcall
cmpsb
jg
pusha
fs
jns
sub
xchg
mov
inc
rorb
cmpl
fisubrs
out
outsl
shlb
mov
sub
out
das
fucomp
jo
xchg
push
ds
or
mov
es
adc
fwait
ljmp
popa
in
adc
push
mov
xchg
add
cmpsl
movsl
lds
icebp
repnz
gs
imul
sbb
imul
cwtl
cwtl
or
push
adc
mov
pop
cli
and
mov
out
xor
sbb
xchg
mov
mov
jo
mov
pop
mov
pop
bound
out
aad
adc
inc
outsl
cld
push
dec
mov
in
dec
shl
test
lret
cli
scas
ret
ljmp
cwtl
popl
pop
sub
inc
cmc
out
lsl
mov
jp
mov
fucomp
xchg
pop
jno
cmp
bound
add
adc
jbe
cmp
or
enter
jl
rol
sbb
mov
imul
sub
push
das
lret
pop
xchg
rol
maskmovq
divl
fcoms
jbe
icebp
dec
pop
lock
mov
fwait
aam
sarl
imul
jle
es
add
in
xor
dec
dec
dec
mov
adc
jae
mov
push
out
lret
imul
xchg
mov
outsb
dec
aas
xchg
lods
push
dec
aad
test
push
test
imul
and
mov
enter
inc
mov
push
imul
add
adc
adc
ja
lds
js
nop
or
bound
or
sbb
or
xchg
je
dec
mov
cwtl
pop
dec
rorl
je
xor
push
sbb
jge
lahf
arpl
jo
xor
shlb
inc
push
inc
xlat
in
push
xor
arpl
mov
ljmp
mov
pop
popa
nop
ja
inc
test
sahf
stc
scas
ret
aam
inc
inc
pop
lea
nop
pop
mov
add
mov
push
mov
std
sbb
xor
scas
mov
out
shlb
add
ret
int
pop
js
xchg
cli
mov
je
mov
outsl
or
jle
aam
in
mov
lea
pop
sbb
cmpl
push
pop
loope
mov
sbb
and
stos
cmpsb
adcl
mov
cmp
mov
jnp
adc
in
int3
jo
add
sub
lods
inc
rorb
hlt
into
mov
sub
cmp
inc
push
xchg
outsb
add
dec
pop
xlat
in
std
xor
push
loopne
pop
fadds
and
pop
adc
and
pop
and
mov
sbb
pop
outsb
lods
imul
repnz
mov
js
loopne
mov
dec
enter
rclb
push
insb
aas
lahf
mov
fisubrs
aad
out
cmp
mov
outsb
or
movsb
gs
popa
cmp
and
mov
mov
orb
scas
les
sahf
add
push
pop
ja
inc
jle
xor
sub
stc
dec
cld
fs
inc
les
gs
mov
adc
sahf
movsl
fldt
aaa
cmp
adc
sub
inc
dec
jg
test
add
lods
push
or
mov
fs
loop
jp
iret
push
cmc
sub
or
arpl
push
das
clc
or
xchg
add
outsb
xor
iret
sub
mov
jecxz
out
sbb
je
adc
sahf
push
fcomi
or
dec
mov
in
xchg
cmpsl
rorb
jecxz
dec
adc
movsb
out
sti
push
stos
cmp
mov
icebp
sub
add
aad
add
jne
test
ds
mov
pop
into
arpl
call
jg
out
addr16
mov
pop
out
bound
lods
hlt
les
gs
sbb
out
jne
xor
sbb
mov
fisubs
insb
dec
jge
mov
ja
mov
xor
push
sti
mov
xchg
push
mov
int
insb
cmpsb
stos
mov
imul
test
push
xchg
dec
adc
push
insb
popa
mov
push
imul
mov
ja
sbb
xchg
mov
out
fistpll
in
iret
sahf
jmp
mov
add
bound
jne
add
lret
push
in
daa
mov
sub
je
popf
out
inc
pop
lret
or
subl
or
rcl
iret
icebp
adc
mov
push
or
and
xor
clc
mov
xchg
in
adc
lods
cs
jge
jmp
or
xor
inc
popa
dec
movsb
mov
mov
or
jns
rolb
and
int
movsb
outsb
pop
xchg
push
xchg
je
jae
jmp
cli
loopne
push
jge
cmp
fnstcw
ret
cmp
jns
aam
xchg
push
loope
sub
cld
outsb
mov
jae
push
aam
mov
dec
aad
xor
fwait
call
gs
push
lods
lock
or
xor
icebp
add
lock
jmp
cltd
mov
xchg
mov
mov
int3
decl
in
add
push
sti
sbb
ds
sahf
fiaddl
stos
sbb
push
push
rcll
xor
push
dec
add
cmc
loopne
jae
adc
jg
mov
mov
imul
int3
adc
movsl
jb
mov
adc
add
push
out
mov
data16
sub
add
sub
jae
xor
dec
cmp
push
jle
mov
jnp
ret
pop
jae
mov
cmp
ja
and
jg
pop
adc
push
mov
sub
push
mov
pop
add
mov
loopne
or
stos
test
cmpsb
mov
mov
adc
outsb
mov
push
sub
pop
inc
sub
mov
ret
xchg
stos
mov
nop
test
xchg
shrl
xchg
push
and
rorl
ss
jns
dec
cwtl
fstpl
fstl
loope
jae
stc
mov
inc
sbb
mov
mov
push
xchg
lret
inc
leave
jg
pop
dec
add
dec
test
rcrl
sbb
outsb
cmpsb
fwait
cmp
lcall
imul
out
pop
jle
add
pop
push
mov
mov
inc
icebp
or
out
mov
xchg
popf
mov
mov
pop
mov
adc
ret
jge
sbb
adc
inc
mov
mov
and
aaa
inc
arpl
add
adc
push
lods
mov
adc
mov
inc
push
add
in
or
jp
push
out
or
and
cmp
push
fdivr
inc
mov
repz
or
mov
cmp
xchg
sub
and
std
lahf
xchg
cmpsb
sub
push
pop
pop
sub
call
mov
push
test
in
mov
out
ja
sub
xchg
mov
sti
rcrb
push
push
jo
loope
jl
jmp
mov
ret
testb
mov
bound
das
jno
arpl
arpl
sti
mov
cwtl
mov
out
enter
cmp
mov
push
jbe
or
das
fldcw
mov
xor
pop
or
jge
pop
cltd
negl
aam
add
cmp
xchg
jl
cmp
add
mov
xchg
mov
xchg
pushf
out
fs
inc
mov
xorb
xchg
xchg
into
and
adc
sub
loope
push
mov
rolb
push
add
cld
mov
xor
shll
loope
sarl
sub
sbb
pop
frstor
sbb
xchg
pop
sahf
add
pushf
psrlw
add
adc
xchg
sub
adc
or
lds
pushf
rcll
sub
jl
xchg
dec
push
mov
out
je
aaa
adc
data16
fnstsw
cltd
add
and
and
movsb
and
inc
lods
jbe
les
and
push
shlb
lods
lods
xchg
mov
pushf
xor
push
and
xchg
outsl
mov
mov
push
adc
dec
clc
imul
and
pop
movsl
jge
dec
jno
mov
popa
ret
fxch
and
pop
adc
imul
inc
aaa
mov
jecxz,pn
aaa
jmp
mov
lcall
mov
in
inc
je
ret
stos
xchg
xchg
ds
add
in
je
jae
jge
xor
enter
andl
stc
push
cmp
adc
and
or
int3
sbb
je
push
sub
cmp
jecxz
shl
sbb
iret
ss
out
cmpsl
clc
stc
cs
pop
xchg
sub
xor
in
movsl
xchg
inc
in
jb
sub
fdivr
paddsw
lcall
mov
mov
pop
mov
outsl
sar
testb
pop
and
roll
addr16
inc
incb
mov
ljmp
pop
loopne
pop
mov
jmp
mov
in
cmp
testl
jo
xorb
cmp
add
das
xchg
mov
das
imul
xchg
pop
pop
mov
push
out
push
rcr
dec
sub
and
xor
jmp
ss
fisttps
jg
cmc
pusha
jnp
paddb
add
jo
mov
loop
ljmp
std
pop
stos
fcomps
mov
push
push
push
xchg
mov
add
cs
roll
or
test
cmc
in
cmc
out
push
call
aad
sbb
sti
ljmp
pop
test
lret
lods
inc
cltd
inc
sub
xchg
dec
xchg
cmp
jae
inc
xor
bnd
sti
jmp
jns
xor
add
xor
lock
inc
lret
add
mov
popf
pop
mov
shll
jp
sub
push
xor
js
movsb
stos
hlt
test
std
mov
loopne
rolb
xchg
xchg
dec
dec
mov
xchg
push
dec
ret
adc
sbb
inc
xor
cwtl
or
mov
mov
jecxz
jne
xchg
pop
scas
and
rcr
test
imul
int
xchg
add
mov
fwait
data16
jo
dec
fwait
imul
add
ja
adc
rcrl
lahf
xchg
into
bound
ja
in
loopne
adc
xchg
and
fwait
mov
shr
mov
and
jo
xlat
cmp
sub
fisttpll
push
lea
jns
jae
dec
in
cwtl
fs
push
xor
cmp
test
je
dec
les
mov
lds
fidivrl
cmp
inc
mov
call
aam
push
insl
repnz
loope
dec
ret
sbb
mov
jne
movsl
into
or
and
repnz
mov
jge
inc
stos
jmp
and
imul
adc
test
inc
inc
cmp
out
fwait
xchg
inc
push
sub
push
jnp
insl
xchg
call
lods
loope
clc
cmp
xchg
mov
xor
dec
fucom
mov
imul
ja
mov
add
mov
pop
lods
ret
adc
mov
data16
adcl
inc
mov
sub
mov
jmp
mov
xor
orl
test
or
out
lahf
stos
mov
or
ficoms
cld
xchg
dec
lock
xchg
cmp
icebp
add
dec
mov
insl
out
pop
sbb
mov
xchg
in
mov
imul
in
pop
cmp
aaa
scas
mov
mov
pop
add
push
pop
jg
in
dec
arpl
popf
rolb
pop
sub
out
shrb
pop
add
sub
mov
rcll
repnz
add
repnz
ss
push
sahf
sub
std
test
or
aas
aam
cmp
stc
xchg
das
and
gs
leave
or
lock
stc
add
aaa
add
mov
pop
mov
loop
es
push
add
cmp
and
das
push
pop
pop
or
mov
push
dec
insb
sbb
mov
mov
data16
and
pop
sar
pop
xchg
das
lret
sbbb
dec
arpl
mov
dec
jae
je
jecxz
lods
or
or
out
push
xchg
xchg
rorb
out
sbb
or
hlt
pop
mov
mov
or
mov
mov
gs
mov
insl
xchg
dec
mov
int3
cmpsl
aaa
mov
das
push
out
in
push
jecxz
enter
and
outsb
movsl
mov
pop
aad
sbb
rol
sbb
test
test
adc
fcomps
loopne
fimull
jo
jle
adc
xchg
xchg
mov
push
icebp
int3
in
mov
jno
movsb
mov
inc
cwtl
mov
and
mov
jno
sbb
xor
out
push
sub
into
mov
sub
and
inc
cltd
jp
add
or
sub
adc
lock
xchg
push
pop
iret
jnp
push
jnp
cmc
pop
js
mov
xchg
lahf
pushf
stos
fildl
fimuls
sub
sub
cmp
jns
fstpl
inc
in
cmc
mov
mov
rcrl
and
xchg
and
and
dec
xor
push
mov
aas
pop
sbb
stc
xchg
cmp
adc
mov
mov
pop
pop
pusha
hlt
dec
pop
jl
loop
and
fdivrp
adc
cmp
xchg
les
xchg
paddq
mov
add
ja
mov
ss
fimull
or
dec
out
test
lods
lret
mov
test
daa
dec
mov
pop
andl
test
test
data16
mov
sarl
pop
fbstp
adcl
add
addr16
fmull
mov
xchg
inc
sub
mov
dec
mov
pop
jnp
mov
out
push
std
aas
outsl
adc
jge
fwait
jae
arpl
push
xchg
data16
outsl
cmp
movsb
cwtl
push
movsb
pop
lock
popf
aam
cmp
sbb
mov
nop
loope
add
mov
mov
xor
xor
sarl
fmul
insb
sbbl
test
popa
xor
dec
paddusb
xchg
movsl
dec
dec
add
outsl
mov
dec
mov
outsl
stos
call
inc
popa
mov
sarl
jns
int
js
xlat
js
fcmovnb
out
xchg
mov
xchg
movsl
sub
jl
sbb
jmp
pop
add
nop
popf
lds
adc
in
sbb
pop
sbb
sub
pop
cs
cmp
cld
loop
jno
add
cmp
ficoml
pop
dec
addr16
test
jecxz
repz
sub
lods
adc
inc
movsl
in
fst
pop
dec
cmp
lret
pop
sub
in
inc
lahf
mov
jbe
dec
mov
dec
mov
add
into
xor
and
and
mov
mov
mov
loop
les
push
jbe
into
cmpsl
sub
mov
sub
into
mov
jecxz
lahf
mov
or
outsl
js
sub
lods
push
inc
orl
ds
testb
push
mov
pop
aas
out
fwait
xorb
call
inc
add
mov
leave
insb
into
sub
xchg
xchg
loopne
or
cmp
add
ja
ror
lock
and
fstpt
pop
enter
pop
insb
adc
insl
mov
pop
dec
test
mov
ror
jne
sahf
sub
pop
or
fdivs
sbb
xlat
lahf
cmpsl
ja
xchg
xchg
movsl
fdivrs
out
jae
dec
mov
iret
push
scas
insb
rcrl
lret
filds
sub
fsubs
cmp
inc
sub
inc
inc
jae
and
inc
inc
and
mov
xchg
repnz
pop
test
sub
subl
mov
out
int3
inc
xchg
addr16
add
jp
hlt
mov
mov
jns
cmp
jle
jae
rolb
das
and
mov
mov
pushf
xchg
add
loope
frstor
jecxz
pop
push
fmuls
push
mov
cli
das
or
pusha
movsl
inc
roll
addr16
pop
cmp
inc
gs
sbb
roll
and
jge
mov
scas
or
and
mov
jo
or
sahf
sub
frstor
pop
orl
jo
push
rcl
jmp
ret
fwait
mov
or
stos
in
and
push
jns
rcr
add
cmp
repz
inc
push
mov
sub
push
push
xor
sub
push
cmp
and
shr
xchg
mov
clc
fs
or
fbstp
jb
call
cwtl
and
enter
lock
xchg
fldenv
scas
push
dec
arpl
sub
dec
pop
lret
cltd
sub
pop
out
jo
and
out
cmc
dec
mov
xor
jns
and
mov
test
int
icebp
cmp
mov
push
jne
dec
out
int3
call
inc
mov
cmp
sti
sbb
mov
xchg
loop
mov
sarb
lods
jge
cmp
lock
sbb
push
mov
push
xchg
outsb
imul
xor
sbb
add
enter
cld
adc
test
push
jae
aad
aam
fldl
pop
jmp
xor
aam
sbb
loope
and
outsb
imul
sub
xchg
sub
mov
sbb
lea
scas
jmp
ja
in
outsb
mov
ds
pushf
enter
int
pop
pop
sub
je
inc
sti
insl
jmp
inc
jmp
into
mov
in
sub
push
inc
xchg
pop
push
xchg
cmp
mov
call
cmp
cltd
sahf
mov
lods
nop
cmc
and
xchg
ja
bnd
mov
fcmovb
fwait
xchg
or
mov
mov
addr16
jae
daa
mov
pop
mov
cs
pop
es
sbb
lock
mov
icebp
lock
cwtl
lock
or
dec
enter
mov
out
filds
push
pop
jne
inc
xchg
push
out
ret
pop
mov
xchg
cmp
lea
inc
loop
xchg
pop
mov
or
xlat
jmp
xor
cmpsl
pop
dec
insl
iret
adc
mov
add
push
je
inc
push
cmp
jns
loop
and
test
mov
push
mov
add
cmp
outsl
inc
sub
mov
and
mov
pop
rorb
mov
lahf
loope
or
popa
xor
xlat
jne
mov
shll
sub
imul
gs
add
jp
and
fcompl
in
xchg
and
sub
subl
lahf
sbb
lds
sbb
dec
xchg
cmpsb
scas
pop
mov
gs
aam
mov
xchg
testl
mov
fwait
clc
cmp
jmp
mov
mov
ret
mov
ret
mov
int
mov
ds
or
jl
pop
fwait
jg
cld
cmp
jg
int
mov
insl
xchg
cmpb
or
lcall
in
test
xor
fcmovb
ljmp
xor
mov
mov
add
push
pop
ljmp
and
pop
push
out
jae
xor
cmpsl
popa
fwait
mov
dec
xor
cmp
cli
lock
mov
adc
xor
pop
out
stos
xor
cmpsl
and
push
out
jae
push
je
jmp
push
adc
mov
lcall
jb
cmp
sbb
jmp
dec
jg
dec
and
adc
movsl
dec
repnz
mov
pop
mov
adcl
icebp
inc
xchg
xchg
je
cwtl
cmp
sub
add
mov
fwait
dec
inc
hlt
gs
shll
cmpsl
dec
or
inc
mov
fists
jg
mov
test
fwait
mov
dec
xor
mov
test
xchg
in
mov
cmpsl
sub
cmp
mov
inc
inc
jecxz
cli
enter
fsts
inc
pop
jg
cmp
shlb
xlat
bound
pop
mov
xchg
mov
dec
jge
daa
mov
ret
stos
cmc
sub
ja
repnz
mov
mov
pusha
jecxz
lahf
jecxz
fsubr
scas
mov
sbb
movsl
xchg
push
aad
or
and
rcrb
lret
adc
pushf
aad
sbb
clc
adc
push
cmp
ficompl
pop
js
jle
inc
jge
jnp
dec
push
pop
aaa
cmp
dec
shll
xchg
lock
add
nop
xchg
scas
mov
fsubr
and
add
popa
push
xchg
shll
nop
mov
iret
jmp
lea
inc
mov
cltd
mov
test
dec
dec
cld
pop
push
jg
sub
mov
test
mov
in
push
add
mov
push
mov
out
into
mov
rolb
jl
repz
dec
roll
mov
sub
out
cmp
rcll
loop
lahf
or
jnp
stc
add
ss
adc
movsl
dec
mov
pop
add
rclb
mov
es
inc
aad
sub
xchg
nop
ds
jecxz
xchg
popl
aas
xchg
xchg
cmp
or
lea
mov
nop
mov
adc
lret
mov
ficoml
inc
mov
aad
mov
lahf
dec
rorb
pop
ret
fcomip
xchg
cmp
sbb
cmpl
leave
xchg
cmp
ja
jnp
fwait
xchg
addb
daa
sub
add
rol
fidivl
or
jnp
test
pop
je
mov
xchg
pop
or
insl
loop
scas
and
mov
andl
ds
or
sub
xchg
mov
mov
ror
fisttps
stos
fsub
ljmp
sbb
jge
lock
cmp
test
xchg
jecxz
nop
mov
fsubrl
cmovp
sub
add
scas
push
jmp
add
addr16
and
push
popf
push
adcb
in
jge
pcmpgtd
or
sbb
mov
sbbl
jno
add
adc
shl
sbb
shlb
pop
push
or
inc
cmp
sbb
xor
leave
dec
out
or
xchg
adc
fildll
xor
lcall
sbb
test
in
xor
es
adc
mov
insl
or
test
xchg
rcl
inc
cmpsl
cltd
loop
rclb
cltd
mov
or
push
xor
push
mov
ror
test
jle
cmp
adc
out
test
repz
pushf
mov
in
mov
push
les
mov
enter
add
and
add
addl
xor
cmp
nop
inc
leave
dec
sbb
ss
data16
jp
jge
jae
dec
jmp
cmp
clc
lods
bound
int
loop
lods
sub
mov
sbb
imul
iret
fcom
or
sbb
jge
nop
in
mov
iret
mov
mov
imul
mov
mov
jnp
aad
les
dec
add
jp
outsb
ret
push
fcoms
lret
mov
nop
mov
enter
cmc
adc
dec
dec
xchg
ja
shll
jecxz
add
or
stc
fcoms
nop
fs
hlt
sub
xchg
loopne
into
adc
push
fs
or
fcomip
or
and
loop
push
shll
leave
and
loop
xchg
mov
and
sub
xor
pusha
mov
or
adc
imul
dec
sbb
aam
lret
lea
adcb
in
scas
jl
xor
dec
xor
mov
ja
mov
es
xchg
mov
dec
ret
lcall
dec
test
out
push
jl
sbb
div
mov
pop
test
lahf
popa
ljmp
and
xchg
sub
sbb
lcall
sub
imul
pop
addl
test
dec
inc
popa
xchg
test
pop
fdivs
pop
popa
pusha
out
bound
mov
dec
or
imul
adc
stos
mov
jo
inc
insb
stc
pop
arpl
popa
sub
push
test
lret
push
mov
imull
jbe
xchg
addr16
xchg
lea
add
xor
ret
inc
dec
fimuls
jecxz
adc
movsb
into
ljmp
pop
les
xchg
jo
dec
sub
fs
mov
leave
scas
rol
test
dec
xchg
fwait
push
cmpsl
push
pop
xchg
rorb
push
sti
loope
neg
fcoml
leave
sbbb
sub
and
xlat
gs
mov
and
test
jle
loopne
mov
lds
add
ror
jns
das
pop
fs
movsl
test
sbb
pop
push
mov
mov
sub
js
aas
aad
push
lods
jmp
out
aaa
dec
test
clc
mov
cmc
cmpsl
stc
push
test
jg
sbb
sub
das
mov
jp
je
shrl
jns
adc
jns
in
push
mov
mov
aas
fsubrl
repz
pop
push
mov
bound
mov
sub
and
pushf
or
mov
lret
shl
mov
adc
inc
or
push
nop
mov
daa
insb
ffree
xchg
frstor
xchg
fs
arpl
cmp
push
fadds
shll
mov
inc
push
int3
xchg
out
fstps
popf
xchg
adc
xor
mov
shrl
xlat
insb
faddl
rclb
xor
jne
jae
out
ss
nop
std
mov
sbb
into
jnp
movsb
xchg
inc
pusha
cmpsb
cmp
dec
mov
sub
aam
in
or
fbstp
fsubr
mov
jb
jne
sub
lahf
int
cmc
push
mov
mov
or
cmpsb
cld
xchg
mov
insb
xchg
es
mov
popa
cmp
jmp
pop
jo
daa
mov
and
push
popa
shrl
cmpsb
jge
xchg
xchg
inc
jl
jo
mov
clc
jl
in
and
adc
push
clc
dec
mov
fldl
or
adcb
xchg
mov
pusha
in
xchg
cmp
adc
pop
js
jns
pop
add
xchg
std
fildl
mov
incb
dec
fstpl
or
mul
mov
cmp
jnp
mov
sbb
fisubl
mov
dec
repz
cs
rorb
pop
imul
mov
jns
andb
addb
push
std
xlat
pop
mov
je
fucomi
mov
ljmp
sub
push
jb
movsl
adc
loop
loopne
mov
aaa
inc
adc
aaa
cld
lret
clc
das
dec
push
xchg
icebp
insb
cmp
cmpsl
jg
push
loop
lock
push
cmpsl
fidivs
idivl
cwtl
mov
out
rorl
add
mov
dec
test
fs
and
aas
fwait
loop
mov
pusha
xchg
rol
cld
sbb
andl
lcall
nop
push
add
mov
inc
aad
pushf
or
sub
mov
mov
push
and
fwait
mov
enter
shll
mov
cmp
fdivr
xchg
gs
lcall
cmp
jge
out
fidivrs
repnz
or
flds
lods
xchg
mov
mov
sahf
dec
lea
push
out
pop
loopne
gs
xor
xor
stos
lods
fistpll
push
inc
shlb
nop
ficoms
call
rol
clc
cmp
pop
pop
dec
lret
fcomps
mov
mov
dec
or
add
int
arpl
inc
dec
pop
mov
sub
and
popa
cmc
dec
aas
jo
mov
sahf
dec
iret
outsb
dec
insb
inc
imul
clc
scas
add
mov
dec
sbb
ficoml
push
dec
push
mov
mov
sbb
add
mov
jb
cli
sub
inc
and
cmp
lods
roll
cmp
xor
jecxz
clc
ret
lahf
aam
push
sar
jl
cmc
adcb
inc
loopne
shlb
dec
addr16
data16
push
das
xor
insb
push
pop
inc
clc
and
jno
push
loop
fldcw
fs
mov
cmpsl
inc
lret
lods
imul
in
mov
nop
repz
inc
in
cmpsl
pop
mov
and
jle
jns
lahf
ret
xchg
inc
xor
cmp
adc
cld
test
cwtl
jb
outsl
add
jbe
cmp
stos
outsl
insl
xor
pop
ljmp
sbb
bound
lods
pop
int3
xor
outsl
call
mov
pop
pop
cld
mov
pushf
test
jns
sub
jo
gs
fwait
sub
sbb
test
jge
in
imul
arpl
sbb
imul
iret
jg
aad
jmp
dec
cmpsl
das
cld
addr16
pop
mov
loope
and
test
cwtl
mov
addb
aad
sbb
and
jle
sbb
and
lahf
clc
in
mov
push
xchg
add
jno
xor
enter
inc
mov
lcall
push
sbb
movsb
add
pop
add
mov
xor
jo
shrb
dec
jp
sub
pop
fisubs
mov
pop
negl
inc
push
rcrl
pop
cmp
adc
mov
push
sahf
mov
daa
mov
cli
dec
add
js
xchg
lods
jno
insl
lret
fiaddl
into
cmp
pop
inc
movsb
push
insb
negb
pop
jae
mov
lds
addl
std
in
mov
sub
jno
xor
addr16
sub
insl
pop
call
imul
fadds
in
jae
lods
jecxz
aas
or
lret
in
adc
ficompl
cmpsl
sub
xchg
sarl
ss
inc
pop
mov
lods
fcomps
out
xchg
in
xor
sbb
adc
stos
cli
fistl
and
incb
in
pop
cmp
ljmp
les
ret
mov
ss
sub
mov
jo
rep
mov
and
and
mov
stos
fidivrs
sar
jb
add
pop
test
adc
push
test
sub
mov
xor
in
jg
insb
inc
popa
addr16
mov
clc
xchg
jge
call
cld
pop
inc
out
fbld
notb
push
hlt
les
hlt
and
les
xor
test
mov
pushf
push
mov
cmp
dec
loopne
sub
jae
je
in
gs
stc
jp,pt
out
cmp
inc
std
adc
scas
jmp
xchg
and
mov
frstor
adc
inc
sbb
fmuls
stos
xchg
addl
insl
into
es
mov
add
sbb
mov
mov
cmpsl
lret
dec
add
sbbb
cs
and
push
icebp
fmulp
test
jnp
jno
xchg
int3
test
iret
dec
or
rcr
arpl
fwait
scas
addr16
ljmp
jo
js
addb
lcall
cmc
shrb
lock
mov
or
push
iret
vpunpcklwd
xchg
loopne
std
shr
xor
push
imul
pop
dec
or
pop
sub
mov
pop
std
dec
clc
int3
leave
mov
cmp
mov
jp
inc
shl
sahf
mov
mov
sbb
mov
jns
subl
dec
loopne
adc
cmp
pop
leave
xchg
add
adc
adc
dec
pop
sbb
cmp
sub
xchg
pop
scas
test
jmp
test
lock
leave
sbb
inc
pop
prefetch
or
out
jno
push
lods
add
or
fs
sbb
cmp
les
or
mov
add
stos
xchg
add
jnp
mov
mov
mov
flds
rcll
shlb
dec
dec
int3
movsb
in
aaa
subb
dec
push
lcall
xor
in
jne
cmp
cmp
mov
jecxz
fcompl
pushf
sbb
push
jb
xlat
dec
mov
outsb
filds
and
shlb
dec
shl
adc
fisubl
and
mov
out
into
lock
mov
and
pop
inc
mov
int3
pop
lods
jae
loope
jp
pop
clc
mov
shlb
sbb
lods
in
and
jg
cmp
adc
lret
jmp
popa
dec
je
dec
xchg
mov
or
cli
aaa
jp
iret
xor
fisubrs
aam
pop
xchg
xchg
gs
repnz
arpl
xor
jbe,pn
add
adc
add
das
lock
xchg
into
cmc
dec
lods
ret
dec
adc
rcrl
xor
mov
add
jae
xchg
pop
aas
daa
pop
aas
stos
aaa
stos
or
xchg
mov
int
popf
fstpl
pop
pop
loope
test
mov
pop
push
jge
inc
into
push
mov
shlb
and
lods
jns
pop
sahf
lock
jmp
mov
sub
push
and
pop
and
sahf
mov
fwait
xchg
inc
xchg
shlb
and
loope
mov
cli
push
ror
jno
sub
jge
jmp
and
int
movsb
leave
adc
scas
and
add
cmp
xor
sarl
mov
scas
sub
dec
out
pusha
loope
lret
aaa
clc
sarl
mov
sbb
push
sbb
mov
adc
lcall
roll
jo
adc
decb
xchg
lock
sbb
cmpsb
leave
and
movb
push
mov
testb
sub
in
ficomps
loope
sub
lret
outsl
repz
pop
add
mov
rcl
lds
test
jnp
pop
mov
ja
test
lods
sub
jg
in
and
mov
cli
lods
ljmp
cmp
ud2
cmp
bound
aam
sub
scas
xor
test
xchg
out
arpl
cmp
push
in
cmp
mov
push
movl
cs
and
test
and
fadds
sub
rclb
add
mov
pop
imul
movsl
pop
dec
xchg
lock
out
pop
jl
pop
mov
les
dec
std
jle
loopne
jns
and
out
enter
add
mov
outsl
mov
add
inc
jno
mov
dec
or
xor
push
rcl
aam
xchg
outsb
movsb
pop
mov
mov
stos
mov
std
ret
adc
cmpsb
jg
cmp
jp
dec
push
iret
lds
push
divl
sub
mov
mov
jecxz
xchg
test
ds
dec
jge
inc
jg
out
sub
out
or
ret
add
pushf
cli
test
sub
inc
in
mov
pop
inc
dec
jne
cs
lds
inc
hlt
pop
xchg
mov
mov
xchg
or
mov
mov
cmp
ret
fidivrl
icebp
dec
bound
fsubrs
sahf
pop
in
mov
cmp
xor
mov
sahf
insl
mov
xlat
cmp
mov
mov
ds
mov
cs
in
and
into
dec
sub
test
push
adc
adc
jg
dec
js
xchg
push
lods
icebp
hlt
scas
cmp
inc
mov
insl
outsl
sti
nop
pop
sbb
pop
xchg
testb
push
push
mov
jecxz
xchg
enter
mov
jbe
cmp
in
xchg
clc
ja
adc
dec
adcb
mov
filds
ljmp
mov
sbb
adc
xchg
xchg
sub
dec
jae
or
mov
rcl
mov
imul
inc
lods
push
xchg
outsl
notl
jne
test
mov
pushf
call
ss
jg
int
jp
mov
aam
scas
neg
ret
test
mov
test
mov
and
in
jmp
push
mov
mov
add
xor
xchg
shrb
inc
fwait
out
aad
pop
shlb
jns
sti
lds
jb
sub
xor
and
inc
and
out
addr16
cmp
lea
or
cld
fmuls
ss
roll
lahf
rcrl
sbb
add
push
add
xor
jno
inc
fildll
mov
icebp
cmp
clc
into
daa
sub
clc
cmp
dec
mov
add
xorb
ds
loope
cmp
nop
mov
cmpsl
mov
dec
jmp
xlat
xchg
dec
xlat
push
mov
arpl
dec
mov
mov
call
or
adc
dec
imul
mov
xchg
dec
adc
sbb
cmp
rcll
fistps
push
add
arpl
xchg
xchg
xlat
sbb
jbe
mov
mov
loop
jb
out
lcall
arpl
mov
fsts
dec
sarl
mov
popf
jns
pusha
jp
scas
mov
sbb
subb
insb
fwait
push
cmc
dec
aaa
in
sbb
lds
fwait
ret
jnp
add
mov
mov
mov
lock
jle
sbb
sbb
xchg
dec
neg
xlat
in
enter
xor
movsl
and
es
daa
sub
ret
je
add
dec
mov
in
ds
addl
jmp
sbbl
aam
and
adc
jb
aas
fwait
xchg
gs
sti
cmp
das
sbb
and
in
push
in
add
cli
test
and
movsl
rcll
adc
fildl
mov
add
loope
dec
mov
int3
insl
lock
inc
loop
and
sti
or
xor
cmpsl
ljmp
sub
pop
dec
imul
push
xlat
aam
mov
sub
push
sub
cltd
add
xorl
aad
push
aaa
dec
inc
sub
xor
xchg
cli
lds
mov
jae
mov
jle
push
xchg
inc
out
jno
in
and
imul
lahf
sti
adc
xchg
jg
mov
imul
mov
popa
das
cmpsb
sub
sti
add
xchg
dec
dec
sarb
stos
cltd
mov
mov
sbb
ret
aaa
jo
test
fwait
mov
std
cmpb
xorl
sub
dec
int
and
xlat
mov
and
adc
addr16
cli
sysenter
nop
cmp
mov
xor
mov
jmp
adc
dec
lahf
cmp
mov
js
pop
mov
jmp
push
pushf
add
jp
ja
lret
icebp
bound
or
sub
xchg
pop
xchg
mov
and
inc
cwtl
aas
or
dec
ret
notb
jb
es
sti
dec
stos
loopne
push
xchg
jecxz
inc
cltd
xor
cmp
xor
adc
std
cmp
in
cmc
dec
hlt
fcomip
dec
and
or
cmp
pop
cmpsl
and
lea
or
sbb
fs
jg
jecxz
ljmp
sbb
aad
mov
cmpl
mov
xchg
push
enter
pop
out
push
cmp
ret
xchg
cmp
jno
addr16
mov
test
jnp
lcall
pop
sbb
test
shlb
mov
popf
xchg
aas
xchg
xor
popa
and
idivb
loopne
push
sbb
mov
jb
push
cmpsb
jp
add
insb
push
inc
lret
repnz
push
sub
je
dec
pop
cmp
shll
mov
test
jnp
arpl
mov
cwtl
mov
lods
add
lret
les
push
jbe
dec
leave
and
clc
inc
sbb
sub
sbb
imul
add
push
das
push
jmp
inc
lret
daa
cmc
mov
adc
loopne
and
push
push
cmp
xor
jnp
mov
inc
mov
mov
mov
add
sbb
decl
adc
cmp
bound
in
push
out
js
inc
or
sub
pop
cmp
fst
sahf
mov
leave
adc
inc
jns
test
leave
fstpl
lahf
sub
repnz
jge
xor
pop
frstor
sbb
jne
clc
nop
lcall
cmp
es
cltd
je
sub
mov
notb
cmpsb
leave
call
xor
movsl
jge
repnz
into
bound
mov
popa
mov
jno
dec
mov
dec
mov
mov
movsl
mov
jle
in
xchg
aaa
pop
mov
push
ffree
push
inc
stos
dec
and
adc
inc
jmp
scas
add
sahf
imul
gs
mov
lds
or
cmp
mov
or
out
jg
adc
test
clc
bound
mov
je
xchg
inc
xchg
cmpb
jb
inc
jns
cmpsl
lret
pop
fidivrs
outsb
pop
xor
add
adc
sub
jmp
ret
test
pop
inc
out
lods
pop
std
mov
out
jp
lea
mov
int3
add
inc
popf
xor
cmc
insb
push
xor
inc
leave
iret
inc
sarb
scas
lret
out
sbb
pop
ja
andl
cmc
jmp
and
hlt
popa
in
fs
xlat
xor
aad
push
lret
dec
repnz
rcll
imul
or
jns
in
push
dec
add
in
mov
loopne
andl
fldenv
cmpsb
xor
leave
cmp
jne
dec
add
inc
movsb
jmp
in
sahf
fstpl
cmpsl
xor
lahf
pusha
pop
hlt
loop
lods
faddl
mov
fwait
mov
sbb
shlb
jl
int
add
jb
push
xlat
sbbl
int
sarl
push
ret
pop
or
enter
aad
rcll
inc
sbb
xor
dec
adc
cmp
add
inc
jp
lock
iret
popl
jno
ds
call
sbb
ret
lods
sub
repz
lds
sbb
xor
negl
addr16
inc
mov
mov
outsb
or
imul
adc
jae
add
pop
bound
and
cmpsb
cmp
imul
jbe
cmp
cmp
rolb
in
sbb
aam
fdiv
out
jp
fwait
out
or
cmpsb
mov
arpl
rcrl
imul
and
jb
xlat
es
or
and
and
xchg
daa
loope
jmp
lret
push
mov
jle
daa
xchg
jbe
xchg
das
jae
push
dec
pop
mov
rcrb
or
push
fidivrs
push
fildll
dec
orl
std
shll
loop
loopne
inc
arpl
scas
xchg
jle
mov
dec
xor
pushf
int
test
lods
or
mov
and
jnp
cmp
outsl
xchg
pop
bound
adc
fiaddl
rorb
dec
cltd
sub
in
outsb
xchg
test
inc
fcmovbe
out
inc
push
mov
inc
jmp
add
mov
mov
iret
jne
inc
push
nopl
push
pop
cmc
out
clc
in
js
scas
cld
aaa
aas
arpl
mov
testl
shlb
clc
mov
fwait
jo
aad
mov
mov
inc
lds
xchg
ret
stc
and
jecxz
mov
dec
xchg
inc
sarl
mov
mov
xchg
xor
in
pop
loope
dec
or
jns
and
popa
cmp
xchg
mov
inc
enter
loopne
inc
sub
lcall
xor
push
ja
pop
cmp
fwait
mov
xchg
and
in
jp
sbb
lock
jg
and
or
int3
and
data16
clc
pushf
cli
sub
repz
pop
lcall
nop
aas
pop
sub
scas
clc
inc
mov
inc
out
das
into
cmpl
inc
mov
and
mov
gs
sub
insl
push
mov
stos
aad
cltd
or
xlat
push
rclb
push
or
data16
pop
pop
inc
jge
and
mov
pop
add
rclb
aas
sbb
xor
xchg
fwait
pop
and
lahf
push
dec
aam
xor
ss
push
jnp
or
ret
scas
orb
cld
jmp
jb
mov
rol
test
lds
imull
adc
jae
dec
fnclex
jp
pop
pop
sti
sbb
pushf
jp
rol
xchg
pop
iret
pushf
mov
cmpsl
fwait
leave
test
sbb
xchg
push
jbe
xlat
loop
fistpl
fcoml
sarl
xlat
addr16
cltd
out
es
mov
push
repz
into
icebp
adc
into
dec
ljmp
stos
cmp
pop
xorl
ror
inc
mov
sbbb
push
sarl
repz
adc
dec
negb
push
adc
imul
inc
sbb
sbb
nop
add
xor
dec
mov
sub
mov
sub
dec
adc
iret
fmuls
cmc
mov
cltd
rorb
mov
pop
loopne
inc
popf
sub
imul
jle
mov
imul
push
popl
mov
fwait
push
call
cmp
imul
mov
ds
mov
pop
cli
int
xchg
pop
jb
dec
test
mov
lock
js
jl
lods
push
cli
xor
or
repz
mov
jno
adc
sarb
pop
sub
test
cmp
insb
test
stc
cmpl
stos
mov
mov
pop
sbb
das
mov
enter
outsl
pop
cwtl
pop
popa
lock
fbld
imul
popf
add
push
les
adc
pop
pop
sub
pusha
and
mov
lahf
or
adc
mov
dec
loope
jbe
inc
sub
xor
sub
lds
sub
and
lods
clc
xchg
push
sub
test
dec
fs
sbb
push
aas
aad
jb
sub
jbe
xlat
daa
sub
jg
inc
fdivl
xchg
xchg
mov
xor
sbb
mov
repnz
xchg
mov
pusha
popf
fidivrl
aas
int
sbbl
popf
mov
xor
cmp
xchg
jo
xor
push
loope
adc
int3
aad
hlt
test
or
or
outsb
cli
lret
jle
std
cmp
xor
xchg
out
enter
rol
dec
jnp
sub
scas
jp
inc
push
out
mov
xor
aam
lret
mov
fucompp
imul
test
push
arpl
add
cltd
pop
adc
mov
aas
sub
adc
out
dec
push
outsb
imul
iret
mov
sarl
mov
bswap
mov
es
call
mov
sbb
add
xchg
out
cmpsl
scas
mov
xor
lods
xchg
mov
in
imul
jge
sarl
pop
or
xor
arpl
sub
shll
push
lret
adc
lods
ds
push
mov
jmp
inc
xchg
dec
lcall
adcb
insb
sarl
int3
fcmove
orl
pop
and
mov
dec
add
sbb
loope
dec
sbb
jmp
cmp
sbb
cmp
pop
negl
lds
mov
enter
mov
push
in
add
mov
adc
sub
pop
adc
cmc
stos
jmp
int
inc
shlb
in
push
sbbl
inc
push
add
xchg
xor
jmp
pop
loope
lahf
scas
or
dec
pop
or
adc
jns
jne
jbe
iret
pop
ja
mov
push
orb
adc
sub
xchg
fucomp
pop
pop
add
mov
xorl
das
cs
jne
mov
push
adc
mov
mov
arpl
divb
and
fisubrl
or
mov
mov
in
fsts
and
xchg
sub
js
push
cmp
and
mov
sub
dec
aad
push
jmp
cmc
mov
push
loop
pop
adc
pop
outsb
pop
mov
push
and
xchg
jl
fimull
mov
cmp
stos
cmp
out
adc
ljmp
test
stos
and
jns
push
mov
int
mov
cwtl
sbb
jns
pop
shrl
pop
mov
inc
loop
std
xor
pop
mov
inc
inc
cmp
cltd
enter
inc
xchg
push
jg
jno
fisttpll
into
std
loope
xor
xchg
lret
test
lret
push
iret
testl
push
cmp
cltd
xchg
imull
fucomp
xor
mov
bound
jnp
push
les
jno
mov
add
adc
or
mov
xchg
mov
ror
fidivl
cmp
jae
jo
std
in
ret
sti
lds
outsb
mov
cmc
jb
cmpsb
push
call
hlt
ss
les
jecxz
imul
int3
dec
mov
xchg
mov
cmpsb
xor
inc
and
jle
stos
cmpsb
loop
sarb
adc
push
jl
call
xchg
xor
jne
mov
xchg
xor
aaa
outsb
das
and
imul
push
mov
pop
jg
push
leave
jl
bound
sub
mov
cltd
push
shl
cs
and
xchg
into
sbb
je
ljmp
int3
add
cltd
cwtl
enter
je
mov
xchg
sub
loop
test
and
je
fsubrs
pop
repz
mov
adc
dec
iret
icebp
rorb
or
xlat
enter
push
jl
arpl
push
fwait
movb
movb
das
and
stc
cmp
insb
mov
pop
imul
push
out
outsb
mov
lds
shl
movsl
out
and
lahf
add
and
in
adc
out
mov
or
test
lretw
out
cmp
and
das
scas
leave
sub
jnp
addl
lock
std
or
jg
xchg
fwait
and
in
dec
cmp
push
sbb
push
pop
loope
ljmp
sbbb
pop
mov
adc
xchg
imul
cmpl
jnp
dec
mov
js
popf
cld
bound
push
testb
cs
loopne
jbe
jno
pushf
lahf
sti
ret
jbe
lret
add
pop
lret
lret
sub
rcrb
mov
out
mov
out
test
lock
loop
lret
push
in
lds
repz
sub
dec
inc
adc
jbe
jb
jg
mov
js
mov
pop
cli
popa
lret
fdivr
pop
cmpsb
dec
jns
mov
scas
jmp
or
cmpsb
ja
mov
push
aas
les
jecxz
scas
rcrl
sub
push
pop
subl
in
xchg
and
sahf
pop
xchg
imul
sbb
inc
rorb
mov
int3
mov
mov
call
inc
jae
sub
test
daa
adc
push
call
push
xchg
cwtl
fs
jle
in
fistpl
jns
daa
mov
and
add
jg
inc
test
sbb
and
lret
test
cld
mov
push
adc
mov
mov
in
and
mov
sub
mov
xchg
clc
add
jbe
scas
sbb
aaa
dec
popf
xlat
js
cltd
hlt
rorb
push
sbb
push
or
mov
jp
pushf
inc
ds
cmp
stc
cmp
mov
sbb
adc
into
push
dec
fucomi
ja
gs
cld
aaa
and
mov
cmp
jmp
dec
mov
movsl
mov
dec
in
push
mov
and
and
mov
mov
das
clc
adc
sub
push
and
inc
pusha
rorb
pushf
mov
jno
mov
cmp
movb
mov
jle
sbb
pop
inc
in
pop
sbb
mov
mov
scas
xchg
lahf
and
xlat
inc
lret
sahf
xchg
leave
lods
sbb
in
cmc
ja
aaa
aam
cmpsl
call
sbb
insb
out
call
or
dec
mov
jbe
leave
mov
mov
xchg
xor
xchg
stos
ficompl
jbe
dec
gs
in
dec
jl
mov
mov
shr
aaa
les
cli
shr
in
add
jle
test
cmc
adc
shr
mov
xor
inc
mov
mov
jle
pop
xchg
inc
sbb
gs
jmp
imul
xor
or
jno
xchg
in
xchg
ret
js
jmp
imul
xchg
push
cmp
jbe
pop
jo
add
pop
jno
xlat
jmp
lcall
xchg
ret
and
mov
pop
mov
stos
push
and
cmp
inc
mov
pushf
inc
push
bound
mov
cmpl
call
cmp
push
es
jge
mov
popa
or
mov
gs
or
xor
jnp
test
sbb
xchg
notl
pop
in
mov
test
test
jae
aas
inc
adc
mov
mov
outsl
mov
mov
outsl
push
loopne
pop
les
lods
cmp
jbe
pcmpgtw
cmp
ret
xchg
ja
aad
lret
es
stos
pushf
test
sub
cmp
repz
fisttpll
inc
or
push
pop
add
push
ret
mov
add
and
lods
jno
inc
leave
add
pop
iret
jns
mov
inc
sti
and
mov
cmc
in
and
mov
mov
inc
loop
adc
js
jb
iret
movsl
xor
pop
aam
scas
jne
push
push
push
xor
sar
mov
fcmovu
cs
push
xor
inc
xchg
cmp
add
jp
mov
scas
push
cmp
pop
ds
pop
and
out
sbbl
imul
add
xor
stos
test
dec
pop
add
fidivrs
xchg
inc
inc
imul
pop
or
dec
pop
adc
mov
or
and
psubusb
fsubrs
movq
push
xchg
in
out
and
loop
mov
mov
xchg
xchg
sbb
addr16
nop
xchg
cmpb
repz
or
repz
push
and
xor
sub
push
adc
jle
jl
je
pop
stos
ret
imul
cmpsb
lret
addr16
jg
imul
movsl
enter
xchg
push
lds
mov
cmp
std
and
aas
mov
or
pop
or
or
push
call
sar
adc
aad
repnz
ficoml
inc
sub
and
and
arpl
inc
and
lea
arpl
aaa
dec
nop
cmc
sbb
dec
fistl
pop
dec
jne
in
cmp
fisttpll
or
loopne
jecxz
or
cmp
call
add
dec
popa
enter
mov
cmp
dec
stos
xchg
xor
iret
hlt
scas
scas
aaa
sbb
and
lock
dec
out
iret
mov
mov
test
clc
into
aam
add
pop
or
jg
xor
in
lods
inc
rorw
push
sbb
je
or
mov
js
mov
xor
xchg
subb
faddl
inc
push
sub
adc
sub
jle
mov
mov
cmc
xchg
into
bound
aaa
jns
xor
leave
cmc
lods
xor
push
nop
mov
out
jno
inc
outsl
push
es
pushf
dec
lahf
aad
xchg
adc
jno
sub
push
pop
and
out
int3
sbb
repz
jno
mov
sti
jne
ja
jmp
jo
ljmp
xorb
mov
icebp
std
outsb
mov
cltd
sub
jns
shlb
fldl
cs
and
fildll
popa
sbb
push
or
mov
sub
cmp
jp
adc
dec
mov
pop
fisttpll
push
subl
imul
mov
xchg
insb
mov
aam
aam
xor
add
or
pop
mov
jnp
push
cmpsb
test
repz
and
fstpt
push
or
mov
and
mov
lock
xor
mov
xchg
out
push
in
icebp
xchg
mov
mov
sar
scas
push
add
arpl
shll
fidivrs
mov
daa
and
push
sbb
jne
mov
xor
in
lret
outsb
inc
imul
icebp
or
repz
subl
sub
mov
stos
gs
fs
adc
pop
jb
jge
xorb
adc
leave
roll
rcr
dec
je
lea
mov
lods
add
mov
ret
sub
in
test
testl
adc
push
out
fnstsw
lcall
jl
lcall
call
int3
adc
adc
sbb
mov
in
pop
fnstcw
insl
xchg
jnp
mov
fsubs
sbb
ret
adc
fs
popf
es
mov
cmpsl
bound
rcrl
mov
xchg
xchg
fsubr
xchg
dec
outsb
and
cwtl
xchg
out
jbe
xchg
iret
adc
jnp
jnp
aaa
dec
ds
jnp
loop
cmpsl
sarl
repnz
das
push
dec
out
jo
fdivrs
mov
fists
ret
iret
push
sbb
mov
pusha
mulb
out
out
repnz
sbb
sbb
jge
adc
pop
std
mov
inc
mov
lahf
sub
out
inc
mov
cwtl
repz
jmp
fisttpll
test
in
dec
sub
xor
pop
xor
pop
lret
cmp
ljmp
cld
sub
fisttpll
cmp
mov
mov
sbb
xor
out
mov
jnp
enter
pop
mov
and
add
out
mov
in
jmp
lods
aad
or
and
mov
enter
or
cmp
mov
pop
jl
lock
or
jge
std
cmpb
dec
int
loopne
pop
lds
add
loop
mov
or
inc
mov
xor
and
or
push
mov
lea
xor
xor
push
push
mov
mov
xor
pop
mov
push
cmpl
imul
loope
pushf
push
cs
repz
mov
int
out
sub
movsl
mov
imul
sbb
arpl
and
jmp
xor
ret
jmp
scas
mov
vmovapd
loope
adc
jl
push
xor
aas
and
idivl
lcall
sbb
mov
add
pop
mov
lods
outsb
jmp
test
pushf
pop
jge
add
test
sbb
xor
cmpsl
faddp
dec
lret
jmp
cmpsl
dec
add
inc
pop
xor
popa
xor
mov
add
iret
mov
or
cwtl
ja
insl
insl
adc
aad
pop
inc
mov
push
cmc
lock
mov
cmp
xchg
les
mov
and
xchg
lret
fs
adc
cmp
add
pushf
cmp
mov
fisubrl
fs
jecxz
ja
popf
enter
mov
sbb
gs
movsl
mov
mov
fnstcw
jmp
out
shrl
pop
mov
ret
mov
mov
jle
inc
mov
jmp
jo
ret
mov
push
fucomi
mov
xor
int
add
pusha
mov
xor
ret
mov
jg
mov
lcall
dec
sbb
and
ds
xchg
adc
pop
and
cwtl
jbe
adc
and
mov
nop
iret
popf
or
mov
test
push
jne
imulb
push
cli
fidivl
test
mov
or
or
fnstsw
sbb
out
cwtl
xor
lret
shll
inc
cmc
mov
cmp
mov
dec
add
addr16
add
int
sahf
into
movsb
ja
jo
orb
sbb
repnz
xor
cmp
pop
bound
add
cmp
push
testl
xchg
inc
scas
cmovnp
xchg
lods
or
pop
cld
add
mov
cli
in
inc
addr16
roll
push
inc
lea
jl
shlb
pusha
sbb
cmp
cwtl
fadds
imulb
scas
cli
jne
cmpsb
pop
stos
nop
test
insb
sbb
sub
icebp
andl
cmc
mov
pop
jmp
mov
subb
xchg
push
js
ja
fwait
sbb
movups
pop
aaa
xor
mov
jo
jmp
jle
ret
cmp
popa
int3
cmc
xchg
jns
lret
sub
sti
sbb
sub
cmp
cmp
xlat
mov
sbb
int3
sbb
loop
cmp
cs
dec
xchg
cmp
jo
add
andb
push
int
add
daa
dec
sbb
jbe
cmpb
push
mov
rclb
das
int
pop
sbb
sub
push
pop
orb
xor
arpl
xchg
pop
inc
repnz
sbb
loop
adc
push
popf
xchg
mov
or
cld
sub
loope
imul
imull
mov
aas
sbb
pop
int3
pop
sbb
pop
xchg
pop
xor
sbb
inc
stc
out
test
gs
inc
mov
cmc
ret
ret
xlat
add
ret
popa
pop
add
mov
xchg
sub
and
cli
push
stc
std
call
jge
fwait
pop
jne
push
ljmp
inc
jo
scas
rcrb
imul
xchg
jb
cmpb
cmp
push
xchg
jno,pt
test
sbb
mov
mov
or
fdivs
repnz
xor
cld
cltd
mov
ficompl
pop
push
dec
mov
test
adc
jae
shrb
mov
jp
leave
jne
adc
loop
lahf
inc
and
das
push
push
jmp
sbb
push
mov
mov
rcrl
pop
inc
fs
jge
lods
in
jp
mov
scas
mov
popf
js
mov
sahf
aam
push
inc
outsl
add
push
pop
mov
mov
fcompl
mov
add
lea
and
icebp
mov
cmp
and
sbb
or
std
loope
dec
leave
mov
cs
in
lcall
dec
pop
addr16
push
and
fistpll
lcall
push
xchg
inc
push
scas
push
push
stc
jns
push
rolb
lock
dec
sub
mov
stos
cs
ret
pop
stos
nop
stos
jne
daa
mov
loop
popa
pop
push
xor
push
cli
aas
xor
pop
jb
fwait
jmp
mov
jnp
or
push
mov
mov
mov
push
mov
mov
movsl
dec
and
pop
pushf
cli
pushl
cmpsb
lea
xchg
mov
jg
xchg
jae
out
sbb
sub
sti
arpl
lahf
sub
cmp
sti
add
add
xchg
fnstenv
into
add
and
xchg
adc
mov
sub
dec
and
mov
nop
in
sub
push
sbbl
cld
pop
jne
bound
adc
gs
sbb
mov
inc
cmc
cmp
mov
push
xor
pop
out
xor
push
aam
xchg
inc
inc
pop
repz
sbbl
sub
xor
ret
orl
in
outsb
orl
or
aad
cmp
dec
in
sar
imul
pop
mov
inc
lcall
jne
ljmp
nop
push
add
cmp
inc
aas
adc
sarb
xchg
faddp
ja
mov
clc
add
sti
pushf
out
push
xchg
jp
xchg
sti
mov
into
sti
or
push
xchg
fsubrl
xor
jp
sub
cltd
or
call
cmp
pop
adc
xor
stc
or
icebp
sub
in
rolb
fsub
orb
popf
mov
mov
xor
xor
mov
cmc
sub
mull
lods
mov
pop
dec
cmp
mov
sub
add
cmovo
cmpsb
shr
sbb
push
jg
flds
push
mov
daa
js
stos
pop
ljmp
adc
xor
pushf
movsl
mov
clc
jmp
add
stos
and
loopne
cltd
fisubs
pushf
test
mov
das
mov
xor
pop
fnsave
nop
push
mov
push
fildll
cltd
xor
out
jns
ret
imul
and
dec
and
es
lock
mov
sti
push
mov
push
inc
xor
cwtl
jp
testl
mov
dec
or
xchg
das
ret
scas
fdivl
lds
hlt
repz
iret
lock
xor
add
cmpsb
sbb
mov
leave
adc
xor
in
js
mov
call
repnz
sbb
xor
cwtl
mov
jb
repnz
cli
pop
fists
sub
inc
xchg
pop
xchg
push
test
fcompl
push
cmp
aam
lods
push
fsubl
out
sbb
xchg
or
xchg
push
add
cli
or
xor
test
gs
jle
insl
sub
mov
adc
insb
dec
rorl
repnz
repnz
xchg
push
pop
scas
sbb
or
test
cmp
xchg
ret
cmpb
dec
dec
in
pop
pop
push
dec
jne,pn
dec
pop
je
push
push
or
cmc
aam
pop
dec
and
jns
andb
pop
mov
mov
adcb
lds
sub
movmskps
test
dec
dec
adc
pusha
lret
sbb
mov
xchg
loop
cmp
xchg
jmp
mov
icebp
mov
addb
and
loop
dec
xor
ja
inc
push
movsl
mov
push
mov
mov
rorb
dec
dec
fbstp
jmp
push
or
sub
mov
push
dec
lahf
inc
loop
mov
arpl
and
pop
or
pushf
and
das
mov
test
lahf
enter
sahf
push
fdivs
adc
leave
push
dec
test
call
pop
jns
call
sub
test
outsb
aad
push
jecxz
push
out
dec
ret
xchg
push
adc
fsubrp
xlat
fildl
jmp
popf
ljmp
loop
mov
mov
dec
je
loopew
inc
xlat
inc
sub
shl
sub
pusha
push
movsb
push
lret
bound
jne
loop
mov
subb
ret
lock
mov
mov
jbe
sahf
fbstp
loopne
jge
add
pop
mov
jp
jo
and
adc
pop
test
sub
push
mov
sbb
gs
sub
inc
test
jle
or
imul
cs
ffree
jg
nop
rcrb
test
test
sbb
bnd
xlat
mov
mov
stos
xchg
or
icebp
imul
sub
dec
jg
sahf
push
in
jle
inc
adc
divl
sar
dec
movsb
loop
sbb
aam
outsb
inc
pop
mov
jg
stos
cs
dec
xchg
pop
xchg
mov
inc
pop
pop
xor
mov
paddusb
push
push
dec
pop
imull
pop
pop
push
pop
nop
inc
sub
popa
pop
fisubrs
shlb
cmp
xlat
cltd
push
dec
cmpsl
js
inc
or
fisubrl
jp
aam
dec
adc
stc
fwait
pop
cli
and
xchg
fmuls
xchg
sbb
cmp
xchg
fdivl
jne
or
test
enter
or
push
out
ret
ret
xchg
dec
rolb
rcll
mov
cmc
lret
hlt
mov
jg
push
imulb
int
xlat
scas
mov
movsl
stc
in
push
cmp
jbe
xchg
lahf
aaa
jmp
sbb
jg
jns
or
rorl
jmp
cmpsl
test
dec
and
cmp
out
sbb
mov
aam
mov
jae
imul
jo
fnstsw
es
xchg
cmpsl
sbb
sti
int
lds
ret
xchg
mov
lods
lds
jno
rorb
xor
js
fwait
subl
ja
mov
int3
jmp
jne
stc
sbb
insl
and
mov
xchg
nop
cld
out
jmp
ljmp
cltd
sarl
mov
jbe
into
mov
adc
jno
orb
clc
sub
loope
dec
push
and
loopne
scas
pop
movsb
fdivr
mov
inc
pop
test
shll
or
repnz
jecxz
sub
rcrb
cmp
mov
clc
cmpsb
push
pop
cmp
sahf
inc
dec
and
out
aad
enter
xlat
ljmp
jg
sti
jecxz
inc
jmp
add
pop
pop
jbe
ficompl
enter
dec
xchg
add
test
movsl
sbbb
out
loope
mov
cli
or
test
cld
push
pusha
stos
adc
ficoml
hlt
lock
test
call
xor
lods
stos
jle
lods
and
repz
jb
dec
movsb
push
dec
push
popf
push
sti
stc
lock
mov
mov
push
adc
mov
sti
add
fwait
test
lcall
out
mov
sti
jp
in
out
jmp
mov
push
fsubrs
cltd
inc
jge
xlat
insl
pop
and
scas
lret
lret
jnp
xchg
lahf
movsb
sub
adc
jle
test
jge
popl
fcompl
jge
jp
out
mov
sub
nop
xor
daa
adc
adc
dec
inc
ss
jmp
rorl
nop
cltd
jbe
rcl
and
mov
enter
fidivrs
ret
sbb
xor
push
and
pushf
xor
or
inc
pop
js
aas
cmp
pop
sarb
cmp
pop
gs
push
cmpsb
repnz
lds
cmp
inc
mov
repnz
mov
cmp
jl
popf
xchg
movsl
sti
out
cmp
outsb
das
roll
dec
cmp
mov
hlt
dec
add
outsb
sbb
imull
add
xchg
mov
stos
pop
out
hlt
test
pop
out
mov
sub
jae
icebp
jl
imul
mov
add
pushf
je
xor
push
enter
fucomip
ret
cwtl
adc
ss
cli
jo
cltd
pusha
cmc
hlt
and
push
lret
sahf
mov
pop
mov
jbe
inc
scas
ljmp
dec
sahf
fwait
xor
sbb
es
dec
dec
inc
inc
jecxz
cmp
mov
ficompl
push
js
cmp
cld
repnz
mov
mov
icebp
jmp
cmp
pop
or
push
les
cmc
mov
or
repnz
inc
and
push
dec
out
and
int
and
mov
js
test
sbb
test
out
sbb
out
mov
and
clc
loopne
out
lds
xchg
imul
mov
sbb
addr16
mov
add
push
test
pop
ljmp
or
mov
xor
dec
cltd
outsb
cmp
add
mov
shrl
js
push
push
fld1
iret
aam
cmp
xchg
sti
rcl
sbb
aas
ss
inc
pop
ja
or
push
and
push
xchg
fs
xchg
cwtl
cld
jl
cmc
enter
imul
enter
push
clc
arpl
dec
jns
mov
gs
xchg
lea
inc
fistpl
or
mov
pop
cmp
inc
and
cltd
sub
jge
mov
mov
shrb
jns
adc
test
test
pop
sub
dec
out
mov
pushf
push
mov
mov
out
cmp
rorl
xchg
jne
imul
loope
pop
dec
popf
jns
lea
movsl
push
sub
xchg
mov
mov
mov
jmp
add
and
sbb
jle
inc
idivb
jne
daa
inc
jne
mov
lods
adc
mov
pushf
sub
notb
loop
inc
popa
mov
pop
and
sbb
es
aaa
push
call
test
outsl
sbb
in
lds
pop
mov
mov
shrb
lret
or
cmpsb
adc
and
push
je
imul
adc
rcrl
mov
push
out
add
inc
rcrb
add
sub
mov
rorl
gs
mov
fwait
in
int
pop
lea
daa
push
icebp
cmc
xchg
pushf
cmp
cli
popa
aas
popf
xor
je
cmp
or
jg
data16
push
xorb
int3
out
or
fimuls
subb
hlt
cmp
or
fbstp
inc
jmp
sub
push
or
cmpsb
insl
xchg
jle
addr16
lret
les
test
pop
repz
and
push
fadds
dec
cmc
pop
sbb
addb
mov
pusha
pusha
adc
mov
lret
dec
rorl
push
pop
arpl
pop
cli
push
cli
mov
nop
xor
outsl
sahf
outsb
fidivl
inc
push
mov
insl
bound
xchg
sub
in
in
inc
xchg
nop
jmp
jbe
jbe
jmp
and
test
sub
cmp
inc
inc
scas
mov
in
aaa
push
pop
gs
mov
aaa
lea
xor
xchg
stos
adc
inc
or
jmp
jg
sbb
mov
enter
es
lret
mov
cmp
sbbl
pop
call
outsb
movsl
mov
mov
pop
add
mov
stos
pusha
mov
xor
rcrl
cmc
xlat
adc
pop
cmp
adc
pushf
imul
lret
rcr
push
int3
push
decl
sub
mov
lret
pop
jne
adc
mov
push
sub
fistpll
pop
aaa
mov
sub
jmp
pop
sarl
pop
or
mov
and
sahf
dec
xor
push
ja
and
adc
jae
push
xchg
movsb
push
cs
test
jae
mov
dec
xor
clc
loope,pn
dec
std
inc
fisubl
dec
sub
dec
jge
adc
cmc
add
dec
icebp
mov
push
roll
xchg
xchg
mov
andl
cmp
cmp
sub
push
into
shll
push
mov
inc
std
fisttpll
jecxz
jle
jecxz
ss
scas
lock
lock
inc
outsb
pop
xchg
pop
push
mov
rcrl
inc
push
mov
push
push
cli
inc
imul
movb
in
fdivs
out
pop
or
cli
stc
adc
lods
insb
adc
pop
mov
push
adc
fisttpl
or
sub
dec
and
icebp
mov
movsb
sub
imul
jle
mov
lret
mov
cmc
jle
in
lea
insl
xchg
xchg
pusha
imul
ljmp
ds
out
out
lcall
cmp
cmp
int
cmp
cmp
mov
jge
mov
push
push
insl
and
scas
sarl
xor
sub
dec
adc
and
fucom
mov
or
cmpsb
add
sub
cld
dec
daa
stos
mov
jecxz
mov
cwtl
repz
mov
clts
mov
lcall
icebp
test
inc
adc
pop
filds
xor
mov
insb
pop
insl
test
je
aaa
inc
call
mov
add
push
mov
repz
jno
dec
insl
insb
test
lods
fcmovnb
in
jnp
cmp
mov
das
sub
inc
jg
inc
popf
dec
fs
sbb
cmpsl
jbe
iret
rorb
lret
add
in
lea
push
clc
jl
stc
and
xchg
jb
je
arpl
inc
inc
and
mov
into
or
or
add
push
dec
movsl
push
loope
dec
push
or
in
push
jae
lcall
ljmp
out
sbbb
nop
jno
and
cmp
clc
dec
cmp
in
enter
and
mov
ds
movsb
xor
dec
and
cli
pop
push
push
and
stos
xchg
pop
add
jp
add
cld
pusha
push
cs
js
xchg
shll
xor
mov
or
mov
rclb
or
cwtl
inc
xor
fwait
adc
ljmp
std
rolb
push
std
and
xchg
js
fcom
or
outsl
xchg
sbb
and
dec
enter
mov
mov
pusha
cmp
mov
inc
dec
push
in
jmp
loopne
fmuls
test
aam
and
popf
mov
and
imul
es
mov
inc
or
sub
sub
push
aas
data16
jno
es
lea
mov
xchg
dec
push
test
mov
xor
std
push
or
fsub
push
fdivl
mov
push
sbb
pop
int3
add
ljmp
in
push
aaa
cmp
loope
pushf
cwtl
mov
scas
cmp
or
pop
xor
pop
lock
negl
mov
fisttpl
cwtl
ror
addr16
dec
into
push
rcr
sub
sbb
sbb
mov
data16
push
push
pushf
xchg
outsl
pop
popf
xor
xchg
or
push
sub
add
pop
scas
pop
adc
int
fnstenv
cwtl
adc
mov
data16
in
gs
dec
std
mov
ret
inc
adc
pop
out
pusha
addr16
jp
fnclex
pop
mov
rcrb
push
pop
xchg
push
dec
xor
cwtl
mov
aas
sbb
sub
xchg
dec
mov
test
bound
lret
push
mov
rolb
mov
sub
or
dec
leave
mov
sbb
outsl
xlat
data16
jecxz
mov
push
pop
xlat
call
in
pop
out
dec
sub
shll
dec
rcrl
xor
mov
or
jbe
cld
cmp
dec
jg
dec
lea
ret
lret
pop
mov
sub
stos
loopne
lret
aas
movsb
out
xor
add
cmp
add
mov
je
cli
sbb
inc
cmp
dec
adc
sbb
jmp
jo
push
popa
out
and
or
jbe
add
cli
sbb
xor
jp
xor
pop
xchg
sub
xor
mov
jbe
xchg
popa
dec
sub
je
mov
pop
data16
adc
fs
jmp
xchg
filds
xor
imul
pop
dec
sub
cmp
test
jnp
push
dec
fs
aas
dec
pusha
mov
in
cmp
stos
pop
pop
mov
hlt
gs
lahf
out
add
negl
xor
in
sbb
jle
js
xor
adc
or
sarb
push
push
ljmp
rol
call
push
sbb
jg
mov
mov
push
je
mov
stc
cmc
pusha
test
xor
dec
jae
pop
xchg
jbe
mov
leave
mov
lock
push
mov
adc
mov
aaa
pop
xchg
mov
and
outsb
or
into
in
push
popa
aas
cwtl
push
scas
jb
mov
imul
mov
and
mov
mov
shrb
in
testb
outsb
xchg
xor
dec
lcall
nop
mov
outsl
addb
cmpsb
fsubs
fsubr
xchg
xchg
dec
cmp
adc
out
dec
mov
sbb
jne
aas
es
add
dec
rcr
lahf
dec
add
addr16
movsb
jne
mov
insb
aam
mov
cmpsb
jmp
repnz
xchg
lock
mov
inc
in
sarl
cmpb
push
jge
xchg
push
mov
xchg
pop
dec
pusha
nop
inc
movsb
cld
sub
fldcw
arpl
lret
sbb
or
icebp
pushf
mulb
cmpsb
add
imul
idivl
out
mov
mov
das
rcrl
or
add
push
sbbb
mov
loop
sub
inc
lcall
lahf
mov
loopne
cltd
mov
sub
js
out
outsl
xchg
pop
popa
dec
mov
rcr
push
mov
jecxz
or
dec
jbe
pop
orb
xchg
ja
insb
pop
add
ret
dec
xchg
push
fstpt
testb
inc
xchg
mov
outsb
sbb
mov
and
out
std
xor
icebp
fisubrs
cld
sbb
ss
dec
movsl
mov
jp
ds
sbb
bound
adc
pop
pop
out
add
jnp
pop
or
lcall
out
fcomi
fucomi
lret
popa
cld
adc
sbb
hlt
hlt
jne
add
out
test
dec
pmaddwd
sub
fsubrs
lcall
repnz
xlat
inc
scas
mov
loop
add
int
ficoml
jmp
popf
mov
lahf
cmc
inc
sbb
shl
cltd
adc
dec
out
sti
jmp
rcll
repnz
jecxz
or
sbb
shll
ret
ss
les
hlt
inc
xchg
popa
imul
xchg
inc
pop
mov
pop
insb
inc
add
shr
jmp
mov
cld
int3
sbbl
aas
pop
aad
rcrl
mov
adc
nop
stos
jne
stos
pop
js
aaa
sahf
test
ficoms
mov
jg
popa
movsl
movsl
mov
adc
dec
loopne
pop
jmp
mov
fldcw
jne
in
lcall
mov
xor
flds
pusha
xor
mov
push
jg
mov
inc
in
call
decb
hlt
gs
mov
std
xor
stc
out
imul
adc
ret
outsw
sti
iret
add
imul
je
inc
out
add
fnstsw
cmp
mov
lods
fcoml
sbb
lea
mov
in
cmp
bound
sbb
divl
push
lret
cmpb
lret
lcall
mulps
outsl
in
sbb
adc
pop
test
pusha
adc
jne
repz
lock
stc
pop
jb
mov
mov
adc
mov
ror
sbb
push
mov
je
push
les
or
mov
loopne
mov
push
shrb
clc
xchg
clc
adc
idiv
adc
es
cld
and
int3
mov
es
pusha
jnp
lds
roll
negl
icebp
frndint
xor
mov
sub
cwtl
fdivrs
fstl
dec
mov
rcrl
add
in
andb
lret
stc
out
std
lret
pop
mov
fstpt
adc
es
sub
dec
jbe
mov
adc
xchg
sbb
int3
xor
in
sbb
push
jno
mov
scas
add
mov
lea
mov
inc
out
xor
inc
lret
shl
and
pop
and
sbb
test
into
popa
sub
cltd
adcb
inc
mov
dec
dec
testb
jne
or
push
out
into
jge
btc
leave
das
sbb
pop
movsb
rclb
in
addr16
cmpsb
loop
push
pusha
out
aas
test
ret
xor
cmp
bound
dec
cmp
pop
insb
adc
pop
push
adc
or
ret
sub
add
cli
pop
ja
ss
push
pop
orb
imul
dec
cld
xchg
js
pop
pop
repnz
lods
pop
call
imul
lds
mov
std
in
jmp
push
push
adc
ds
push
dec
loop
mov
cmpb
and
cmpl
sahf
jecxz
shl
inc
sbb
xchg
testl
sub
push
push
or
aad
cmpsl
xchg
xlat
lods
stos
dec
push
inc
cmp
push
cmpsl
out
dec
je
add
stos
adcl
repz
inc
xchg
insl
xor
cld
fldenv
pop
jb
hlt
scas
cld
inc
fisubrs
bound
xchg
mov
cs
mov
inc
bound
movsl
lea
outsl
fdivl
inc
jp
xchg
stos
mov
shrl
repnz
daa
mov
mov
aaa
frstor
sti
dec
push
movsb
js
lahf
movsb
dec
dec
enter
movsb
stc
cltd
ss
inc
sub
mov
inc
adc
fnstcw
pop
jecxz
mov
in
fstl
ror
and
adc
sbb
stc
out
fnstcw
in
mov
push
shrb
jbe
stc
dec
fcomps
xchg
imul
and
push
cmp
ret
je
cltd
daa
bnd
xor
sbb
xchg
cmp
sub
lods
sbb
adc
jbe
das
xlat
push
sbb
dec
bound
gs
sub
xchg
movsb
xchg
sub
shr
mov
and
inc
mov
inc
xor
mov
fwait
pop
popf
cmp
lods
aad
mov
pushf
push
xchg
push
mov
cld
in
das
test
int
sbb
xchg
popf
lock
shl
sbb
mov
stos
test
sahf
fwait
scas
push
stos
sub
gs
sub
arpl
jmp
popf
pop
into
loop
cmp
lea
lret
push
popl
push
mov
adc
xchg
icebp
sub
push
pusha
lds
jo
xchg
addr16
popf
cld
popa
mov
outsb
clc
mov
mov
and
fsubrs
cmp
pusha
lds
xchg
mov
stc
test
pop
in
cmp
je
je
sub
mov
scas
clc
jp
jmp
adc
xchg
js
xchg
dec
push
cmp
dec
adc
mov
inc
loopne
in
adc
inc
and
jge
ds
adc
inc
test
xchg
pop
stos
xor
pop
es
adc
dec
sbb
int3
dec
xchg
xchg
mov
stos
pop
movsb
dec
ja
loopne
js
mov
out
mov
xorl
in
outsb
mov
stos
lret
mov
cmp
push
jno
and
jb
ffree
add
stos
mov
arpl
fwait
and
and
movsb
mov
rclb
shlb
pushf
inc
clc
mov
lods
dec
cwtl
mov
jns
push
es
icebp
mov
or
or
push
dec
pushf
dec
xchg
imul
lea
pop
push
out
mov
stos
divl
out
add
xor
cld
pop
mov
stos
outsb
inc
rcll
push
sbb
testl
adc
dec
out
sti
cli
insb
cmp
inc
adc
ret
rcll
test
pop
inc
dec
mov
pushf
outsl
cltd
jb
mov
xrelease
nop
je
scas
das
mov
dec
mov
mov
repz
push
lds
cwtl
push
cmp
xchg
leave
sbb
pop
shll
xor
daa
pushf
mov
jo
pop
xchg
mov
mov
mov
daa
cmp
scas
cmp
out
out
mov
xor
dec
clc
sbb
cmp
dec
loope
pop
test
inc
pop
test
and
dec
ror
push
xor
sahf
out
mov
mov
push
pop
out
add
sub
mov
jg
jle
dec
jecxz
xchg
rclb
jge
xor
and
pop
lcall
js
rorb
sub
push
push
push
fidivl
fwait
loope
std
aad
sbb
mov
cmp
jb
or
sahf
jg
adc
lcall
sbb
outsl
inc
hlt
push
js
and
idivl
or
sahf
jb
mov
mulb
cwtl
xchg
ljmp
mov
stos
stos
sti
sbb
pop
pusha
push
loop
jp
insl
xor
sbb
pop
lds
lcall
test
loope
dec
outsb
iret
out
pop
push
inc
and
jge
push
xchg
or
sbb
lret
mov
jmp
int3
sub
xchg
jne
push
add
out
push
clc
icebp
jae
push
insb
fxrstor
mov
clc
fstp
mov
cmp
xor
sarb
cwtl
mov
in
cwtl
loop
fstp
out
dec
pop
mov
cmpsl
jmp
sbb
and
pusha
ja
mov
sbb
stc
sbb
aam
loopne
and
and
movsb
imul
ja
jl
mov
cmp
xor
jle
mov
cmp
xor
xchg
and
mov
xor
lock
push
bound
xchg
fisubrl
sbb
fsubl
andl
inc
nop
test
js
push
mov
js
xchg
mov
mov
rcrb
or
scas
aaa
jae
in
sarb
pop
dec
push
dec
adcl
test
jl
and
movb
adc
push
xchg
push
mov
push
xor
test
stc
mov
lcall
pop
nop
push
into
push
jb
clc
out
mov
pusha
cmpsl
adc
or
or
sbb
jmp
jp
pop
push
pop
mov
je
or
push
jle
cmp
call
mov
inc
jg
shl
in
fstpt
in
xchg
pop
xchg
jbe
jg
pop
sub
mov
jl
pushf
lcall
insl
fwait
mov
je
jae
push
xorl
bound
and
and
outsb
shlb
push
outsb
popa
bound
movsl
jno
dec
jae
mulb
cmp
rorb
jg
lock
lea
cltd
incb
les
jno
push
push
mov
aas
cmc
rclb
jp
and
mov
cmpsb
and
loope
test
rolb
rcll
xacquire
insl
test
test
xor
sub
out
stos
dec
leave
push
leave
mov
xchg
dec
mov
inc
aam
mov
mov
test
lret
outsl
jbe
mov
add
mov
das
add
jmp
push
scas
dec
and
sarb
mov
popa
fmuls
sbb
dec
sbb
decb
cmp
sbb
in
inc
pop
sbb
and
addr16
hlt
addr16
sahf
out
xchg
sub
jmp
stos
jg
imul
inc
inc
push
push
push
leave
add
flds
clc
dec
pop
in
cli
sub
std
loopne
fcoms
add
loop
jl
inc
xchg
stc
mov
sbb
xchg
sti
pusha
out
or
fisttpll
lea
dec
adc
repnz
pop
push
jo
bound
ss
adc
ret
mov
test
push
ficoml
adc
inc
adc
xchg
mov
sbb
cltd
das
lcall
pushf
push
sub
divb
and
es
movsl
outsl
int3
arpl
mov
orl
or
enter
inc
push
stos
clc
push
js
int3
or
pop
jmp
movsl
jle
xchg
enter
push
sti
mov
pop
cmp
in
dec
out
push
mov
add
add
and
adc
xor
jge
inc
pop
jl
jle
lcall
es
fdivl
popa
mov
cmp
push
mov
inc
cld
sbb
sahf
push
dec
add
xchg
stos
dec
aaa
pop
lea
out
pop
jmp
pusha
fisubl
pop
xchg
cltd
or
in
rorb
xchg
xchg
std
jnp
mov
jmp
xchg
push
inc
pop
imulb
lret
std
cli
jg
into
test
lds
rcll
push
lods
gs
mov
sbb
or
add
xor
dec
xchg
and
or
push
push
jg
in
pop
and
sahf
sbb
decb
icebp
pop
xchg
or
int3
mov
or
push
xlat
popf
icebp
inc
jmp
add
mov
cmp
mov
fxch
in
sub
mov
std
cmp
pop
fdivr
cmc
pop
add
popf
xchg
push
sbb
pop
lret
xor
rorb
inc
rol
sub
mov
pop
jne
ljmp
test
or
push
inc
xchg
fisttpl
ss
adcb
or
lret
sbb
mov
xor
subb
cwtl
shlb
adc
jl
int3
test
repnz
xor
fwait
xor
xor
ja
mov
pop
or
pusha
push
sub
movsb
mov
notl
inc
aad
lahf
pop
add
lcall
cmp
cmp
push
insb
ss
mov
ljmp
ss
test
outsb
jns
pop
fbstp
subb
or
dec
mov
loopne
incb
test
std
scas
andl
fsubr
inc
movsl
push
pop
ret
loop
lcall
jp
or
mov
shll
or
adc
xlat
data16
cmpb
sbbl
push
sub
and
push
dec
test
out
popf
mov
mov
xchg
repnz
aam
adc
pop
jno
lods
dec
pop
and
lods
dec
push
mov
packssdw
out
mov
into
jp
mov
mov
xchg
pop
mov
jae
int3
test
dec
mov
fwait
jbe
popa
sahf
dec
xchg
push
mov
into
divb
sub
sub
mov
call
push
cmpsb
jle
ljmp
or
mov
pop
or
stc
jp
outsl
dec
pop
mov
mov
test
mov
and
xlat
sbb
xor
sbb
pusha
pop
mov
dec
les
imul
dec
ror
mov
insb
notl
mov
fsts
into
pop
inc
sub
inc
cmpsl
mov
adc
daa
insb
nop
jp
bound
cwtl
adc
xchg
lods
add
js
or
sub
aad
sub
notb
daa
outsb
sahf
ljmp
cmp
dec
scas
mov
jle
mov
or
cmp
aas
cmpsl
pop
sbb
and
push
stos
xor
jp
movsb
mov
gs
in
scas
mov
jl
movsb
loop
jp
jmp
xor
pop
es
push
popa
mov
inc
mov
push
stc
loop
xor
mov
sbb
subl
mov
sub
je
push
sbb
jae
leave
daa
mov
cmp
mov
mov
jge
dec
push
xchg
mov
lret
push
pop
sub
imul
sti
mov
cld
xor
fucomi
dec
mov
cmpsl
sarl
fmuls
fcom
mov
cmp
push
mov
fisttpl
aam
jg
inc
mov
outsb
scas
sub
sub
pop
xchg
jg
xor
and
mov
outsl
loope
or
test
roll
jb
dec
movb
imul
int3
scas
sub
int3
pop
clc
scas
push
xor
xor
es
mov
data16
cli
out
mov
fldcw
cmp
add
or
andl
fldt
in
bound
fdiv
mov
sbb
addl
xchg
push
roll
jbe
lea
jecxz
jbe
lock
dec
mov
incl
pusha
add
pop
loope
sbb
sbb
fistps
js
pop
or
lock
mov
xchg
push
inc
and
mov
jecxz
call
mov
mov
out
popa
mov
data16
inc
out
ret
mov
in
xor
mov
data16
jp
inc
ficompl
and
ret
xor
inc
mov
test
sbb
pop
and
pop
addr16
mov
test
sbbl
mov
mov
jbe
adc
xchg
addr16
and
aas
movsl
pop
daa
iret
or
xor
jae
dec
mov
or
xchg
cmp
les
adc
jno
inc
jns
addr16
pop
push
ret
mov
sahf
jle
xor
xor
shrb
inc
fsubl
das
add
inc
shll
fwait
adc
and
sbb
iret
gs
fldcw
push
out
rcrb
sbb
aad
or
inc
inc
pop
mov
outsl
inc
push
mov
adc
mov
pop
xchg
mov
push
mov
inc
shlb
shl
cmc
jne
push
xor
js
dec
and
imul
pushf
in
adc
xor
dec
push
mov
dec
cli
in
inc
jb
add
adc
scas
lcall
and
and
cmp
and
lret
jno
iret
movsl
fisttpl
std
push
in
mov
pop
icebp
ja
xor
aaa
outsl
cwtl
or
jns
into
dec
imul
inc
add
popa
cltd
add
popf
xchg
outsb
insl
pop
xlat
jge
fcompl
lock
out
cs
repnz
jmp
dec
inc
or
sbb
inc
loop
dec
cltd
jne
inc
int
jecxz
das
push
fidivrs
fwait
js
fimull
sub
mull
mov
or
jbe
push
imul
xchg
jmp
loope
fstl
dec
icebp
jmp
js
sub
jecxz
das
data16
jo
mov
mov
jb
mov
aam
xlat
sbb
bnd
xchg
add
lret
mov
mov
mov
imul
xlat
push
mov
hlt
stos
xchg
lods
jnp
int
add
rcl
or
and
mov
je
dec
out
push
inc
adc
lcall
int
cltd
outsl
idivb
mov
int
push
repnz
lock
xchg
js
fisubrs
jno
ffree
ja
mov
xchg
pop
add
fwait
js
fidivrl
dec
adc
and
aam
adc
mov
pop
xor
xchg
sbb
aaa
fwait
dec
cld
xchg
and
je
mov
add
stos
sbb
into
pop
in
fistl
mov
test
shr
dec
scas
mov
sbb
imul
arpl
push
aaa
jne
sub
scas
sbb
ror
test
gs
or
xor
stc
xchg
int3
mov
jg
repz
arpl
jns
sti
push
pop
pushf
and
in
nop
jl
fsubs
cs
cmp
xor
movsl
xchg
add
in
jmp
or
xchg
in
cmpsb
adc
notb
push
inc
cmp
mov
and
addr16
xchg
les
imul
mov
push
mov
in
jnp
inc
out
cmpsb
hlt
dec
dec
mov
push
je
popa
lock
lahf
xor
xlat
sbb
jle
inc
lahf
jb
inc
orl
sbb
jno
mov
xchg
xchg
add
mov
mov
mov
push
inc
rolb
xor
sti
inc
sub
mov
adc
sbb
mov
sub
xchg
cmp
int3
xchg
sahf
inc
inc
xchg
into
dec
mov
dec
pop
hlt
leave
mov
dec
aas
subl
nop
add
cmp
adc
inc
fimull
aas
cld
cmpsl
mov
repnz
sub
arpl
xor
out
daa
mov
adc
jnp
push
mov
sarb
cmpsb
xchg
scas
js
jmp
std
pusha
and
lret
test
cld
jmp
inc
pop
mov
stos
push
imul
in
movsl
or
insl
or
stos
pushf
add
sbb
mov
call
push
je
loop
mov
inc
rsqrtps
std
fs
les
and
shr
cmp
push
mov
mov
dec
je
fnstsw
sub
pop
mov
push
push
test
push
mov
test
subl
cmp
cmp
cmp
fisubs
xor
push
add
dec
movsl
mov
cmp
jne
hlt
mov
push
mov
or
pusha
jmp
aam
push
dec
fbstp
fwait
test
cmp
mov
sub
xor
cli
out
mov
rorb
xlat
or
js
or
jbe
aas
je
xor
mov
enter
icebp
mov
sub
divb
je
lea
push
adc
ss
pop
shl
cmpsl
jne
and
daa
scas
inc
adc
xor
in
dec
jbe
inc
push
sarl
inc
imul
cmp
loop
in
lret
jae
add
dec
push
mov
in
add
out
mov
add
adc
loopne
test
mov
ds
push
push
xorl
je
outsl
cmp
aad
mov
mov
dec
mov
fs
inc
jns
fcoms
scas
xchg
int3
sbbb
mov
nop
ljmp
popa
cmp
mov
lret
test
mov
pop
jge
jae
out
rol
xor
mov
xor
fsubrp
jle
dec
cld
fistl
add
testl
lcall
insl
and
jle
mov
push
push
pop
xchg
dec
cmp
inc
pushl
add
push
sub
mov
in
mov
adc
jo
inc
call
push
jno
cld
push
xchg
mov
push
lods
xor
movsb
je
lea
jb
sbb
aas
mov
sbb
addr16
lahf
mov
and
pop
rcrb
loop
xchg
cli
dec
inc
push
outsl
jbe
mov
cmp
ret
xchg
cmp
test
mov
pop
dec
push
xchg
imul
pop
cltd
push
push
adc
shlb
xchg
push
std
lds
mov
mov
in
out
pop
out
jle
inc
add
ds
addr16
popf
daa
or
inc
inc
mov
xchg
insl
rorb
xchg
mov
cmp
push
inc
sbb
mov
jmp
aas
xor
int3
add
xorl
stos
cmc
loope
test
mov
xchg
ret
xor
sbb
out
sbb
addl
fdivl
dec
dec
test
cmp
xchg
mov
loope
lahf
dec
cmp
stc
lods
inc
jbe
inc
sti
jbe
fwait
inc
dec
fisttpll
repz
cli
cmp
cmp
jbe
sbb
cli
lret
xlat
insl
mov
xor
out
icebp
divl
ret
cmp
mov
outsl
cmpsb
jns
push
dec
jge
repnz
fnstsw
arpl
pop
mov
js
hlt
mov
mov
sar
clc
es
cs
popa
or
pop
bound
add
xor
notb
lea
push
add
push
fsubrl
mov
outsl
pop
outsb
jbe
addb
pop
out
or
inc
clc
add
mov
lods
pop
sbb
out
loopne
cmp
xchg
movsb
loop
inc
sbb
sub
jns
sahf
cmpsl
mov
dec
pop
pop
ljmp
cwtl
xchg
shll
lock
mov
xor
mov
jmp
out
inc
adc
fmuls
mov
jecxz
mov
loopne
mov
pop
push
pop
call
sub
arpl
cmp
repz
inc
pop
xor
insb
stc
sbbb
xor
ror
jns
mov
cli
add
test
aam
push
sub
jne
gs
shlb
push
sbb
jae
xor
ficomps
pop
push
push
mov
add
lods
sub
jmp
xchg
adc
sub
ret
and
mov
decb
std
pop
in
ret
dec
enter
neg
sbb
mov
imul
mov
xor
lods
setne
mov
stos
cltd
shrb
pop
mov
outsb
ss
mov
out
mov
das
cmc
jno
mov
jae
and
repz
movsl
loope
call
roll
or
pop
inc
and
cmp
fstl
inc
or
dec
dec
daa
sub
add
into
pop
cmp
jle
ds
je
in
testb
add
icebp
sub
jmp
or
pop
add
ret
jge
shll
jns
or
loopne
test
xor
inc
inc
push
sbb
test
dec
mov
lods
lds
xchg
inc
shlb
jns
pop
inc
mov
subl
cmp
push
scas
xchg
out
movsl
clc
dec
mov
fistpll
rcrb
neg
xchg
sbb
mov
neg
pop
push
out
call
cltd
fimuls
pop
mov
adc
jecxz
cmp
push
hlt
or
add
cmpsl
xor
fdivrl
sbb
push
inc
mov
lods
pop
sbb
mov
adc
and
jle
cmp
inc
mov
filds
add
mov
add
dec
cmp
lret
lret
push
pusha
push
inc
push
subb
icebp
adc
jnp
insb
and
pop
ss
xchg
pop
popa
push
inc
xor
lcall
loope
push
xor
dec
cmc
push
jp
push
rclb
es
mov
fs
push
cmp
jecxz
pop
inc
rcrl
loopne
adc
pop
cmp
scas
fdivr
xor
jl
mov
lahf
js
dec
or
mov
lret
mov
xchg
and
dec
xchg
cmp
xchg
rorb
aas
mov
and
mov
mov
or
dec
lret
roll
neg
jp
mov
das
pop
xchg
pop
adcb
stc
mov
sbb
xlat
jae
xor
in
je
sub
clc
lcall
aaa
loop
shl
add
cmpsb
cmp
cli
mov
jg
pushf
xchg
push
out
leave
pop
adc
jp
pusha
imul
bound
in
mov
mov
add
dec
xchg
aam
sar
imul
push
or
mov
dec
mov
jle,pt
shl
push
iret
or
dec
dec
mov
jne
cs
inc
adcb
jbe
jnp
mov
pop
stos
jo
cwtl
lods
and
and
dec
fwait
xchg
lea
xor
loop
push
sbb
lock
outsl
xlat
xchg
je
test
inc
dec
dec
les
inc
ja
ljmp
in
les
cmp
faddl
gs
sbb
inc
iret
cmp
subl
and
mov
xchg
sahf
ljmp
ret
lods
lea
jmp
pop
subl
push
outsb
int3
shr
mov
push
and
sbb
adc
movsl
fs
push
mov
cmc
cmpsb
adc
orl
mov
pop
insl
sbb
test
ret
dec
mov
or
fisubrl
cld
js
adc
jecxz
add
test
or
sub
ss
adc
push
push
lds
pop
push
movsl
pop
sbb
mov
mov
popf
cli
rorl
fmuls
outsl
mov
jle
jb
adc
add
orb
fnstenv
push
lds
inc
jne
dec
ja
lds
sbb
and
sbb
stos
push
movsl
sub
shll
outsb
outsl
mov
jmp
sbb
sbb
mov
and
xchg
cli
adc
mov
lods
xchg
mov
pop
leave
pop
stc
add
xchg
pop
or
jbe
sbb
lret
pop
mov
mov
aam
or
push
adc
ret
imul
out
mov
inc
orl
mov
in
cmc
cwtl
out
cmp
les
and
sbb
fcmovnu
mov
push
mov
jae
jmp
gs
sub
jecxz
fisubrl
fwait
dec
mov
xchg
adc
push
mov
dec
dec
pop
sub
jecxz
in
pusha
cmp
or
fcomi
clc
push
test
hlt
xchg
adc
icebp
leave
inc
fs
jns
out
rcrl
push
xchg
imul
push
arpl
add
mov
movsb
cmp
negb
mov
scas
pop
adc
pop
sbb
bound
dec
and
popa
in
mov
jecxz
dec
push
xchg
bound
imul
jmp
cmc
imul
push
stos
jns
mov
pop
insl
or
mov
fwait
adc
pop
je
rcll
and
in
dec
jae
inc
testb
cwtl
pop
ret
mov
loope
imul
pop
lcall
stos
push
movsb
imul
mov
cld
addl
sbb
mov
inc
mov
adc
jb
inc
xchg
push
sbb
inc
and
fisubrs
icebp
mov
mov
dec
inc
ds
inc
pop
or
dec
mov
push
and
jnp
hlt
rcr
arpl
ret
lods
and
cmp
sub
inc
aam
sbb
dec
lahf
jecxz
mov
push
xchg
adc
mov
add
xchg
dec
xchg
sarl
mov
je
xchg
fucom
adc
test
roll
mov
mov
mov
and
notl
jns
fstpt
std
add
push
pop
cwtl
fsts
or
lds
xorb
imul
lock
loop
loope
shl
mov
and
cmp
mov
ds
aas
and
jae
adc
test
jne
pcmpeqb
shrl
mov
jle
xor
xchg
rorl
je
jmp
sbb
outsb
jge
outsb
pusha
nop
and
jg,pn
cltd
xor
cmp
lods
call
inc
ret
cmpl
and
in
arpl
sub
xor
jb
mov
test
lock
mov
xor
push
sbb
jne
jno
ljmp
loop
in
cmp
cmp
push
jmp
mov
test
push
fmulp
lcall
xchg
and
icebp
and
push
add
dec
pushl
lcall
sbb
imul
mov
jae
push
popf
cmpsb
xlat
dec
insl
in
fucom
lds
nop
in
cmp
lock
mov
in
sbb
nop
jle
pusha
test
rorl
or
les
call
jmp
out
addl
rolb
test
insl
cmp
adc
mov
cmp
jg
mov
sti
pop
and
pushf
stc
mov
mov
ret
fcomp
jo
scas
mov
and
lds
mov
and
outsb
mov
setnp
dec
repz
imul
mov
in
addr16
dec
or
out
movsl
xor
shl
or
movl
add
sti
xchg
xor
das
sub
mov
xor
push
ja
movsb
loope
lcall
push
xor
outsb
cwtl
ds
je
adcl
cmp
pop
and
lret
cmp
popa
enter
or
xchg
or
mov
xchg
sbb
fwait
int
call
fcompl
mov
and
jno
inc
lret
js
add
lea
xchg
mov
cwtl
mov
sti
fsts
adc
aam
call
mov
rcrb
push
jo
push
mov
fwait
popf
addr16
fsts
dec
jae
icebp
mov
mov
dec
insb
push
xchg
out
insl
xchg
leave
cwtl
cmpsb
or
jmp
pop
push
scas
ret
mov
and
jmp
jg
pusha
mov
push
pushf
push
rcr
les
inc
dec
pop
xor
faddl
lds
es
or
inc
fs
sbb
neg
loop
push
sti
lret
cmpsl
ficomps
ljmp
in
sub
negl
jle
outsb
mov
lods
popa
jnp
lret
leave
andl
fdivrs
test
lret
aam
fsubp
shrl
and
call
sbb
fmull
dec
stos
out
mov
mov
scas
lahf
sub
mov
cwtl
dec
cs
mov
movsl
scas
imul
or
pop
sub
mov
in
adc
jne
mov
xchg
cwtl
mov
test
stos
add
dec
ss
ret
lcall
xor
loop
jne
hlt
addps
mov
je
sbb
cmpsl
js
mov
test
ficoms
fcmovbe
jle
ss
les
movsl
in
pop
mov
and
sbb
sub
test
roll
xchg
andl
jg
push
das
dec
sub
stos
jmp
inc
push
sub
scas
sub
outsl
fbstp
adc
sbb
movsl
mov
cmp
stc
fdivs
adc
pop
das
sub
pop
inc
movsb
cmp
fcmovu
lret
add
adc
stos
mov
test
fisttpl
in
jb
push
xor
lahf
cmp
mov
hlt
dec
jbe
mov
inc
and
aad
scas
jecxz
lock
cs
lea
cmp
aad
mov
or
sbb
nop
jno
and
or
inc
bound
repz
lcall
es
insb
add
pop
clc
xchg
jbe
cltd
inc
sbb
cltd
pop
sub
jnp
jne
mov
mov
and
pop
mov
sti
testl
sub
lea
push
jns
out
in
pop
fdivs
pusha
das
addr16
out
fimuls
xchg
sahf
push
xor
cmpsb
into
cmp
add
and
push
test
nop
jmp
cmp
outsb
cmp
mov
adc
jb
out
scas
stos
inc
inc
dec
jb
mov
insl
ja
mov
push
pop
mov
stc
sub
add
mov
out
popf
adc
aas
push
mov
decl
jne
pop
cmp
dec
in
jmp
sub
and
add
lcall
jge
repz
inc
cmp
mov
xchg
add
mov
sub
adc
jne
sbb
cmc
int
mov
loopne
test
stos
push
mov
outsl
jno
adc
adc
mov
mov
loop
sbb
sub
jmp
add
jl
lcall
mov
sub
lcall
sub
sub
mov
mov
adc
mov
shll
mov
lahf
push
inc
jbe
in
pop
enter
inc
lods
stc
aas
sub
ljmp
hlt
rcrl
xchg
aaa
add
push
test
stos
out
ljmp
jp
pop
pop
shll
cwtl
mov
lods
xor
rcr
ljmp
xor
lea
jmp
or
addb
push
out
mov
jae
mov
sarl
adc
rorl
or
rorb
test
into
push
adc
xlat
xor
negb
mov
dec
mov
dec
xchg
insl
rolb
stc
stos
sbb
cli
popf
out
loope
fcomps
orb
mov
test
and
jne
mov
rcll
push
fstps
lret
mov
repz
xor
mov
insb
jb
push
mov
divl
dec
test
sub
push
fcompl
mov
push
icebp
cs
fisttpl
xlat
and
jbe
push
push
and
sbb
out
inc
in
popf
repz
or
pop
push
leave
nop
fildl
subb
repnz
jg
negl
cmp
inc
push
int3
outsb
lret
push
jl
icebp
ret
push
and
enter
add
in
es
push
addr16
popa
xchg
imul
and
loope
or
cmp
pop
xchg
mov
push
pop
outsb
cmpsl
push
pop
mov
push
cltd
aad
pop
in
hlt
adc
jnp
push
cmpsl
iret
dec
xchg
fbstp
cli
loop
jno
ljmp
ljmp
xor
sbb
jmp
or
iret
jbe
test
mov
mov
mov
add
adc
jo
and
sub
add
shl
pop
lret
or
lods
out
push
pop
out
xor
pop
jp
xor
cld
pop
shll
movl
jbe
cld
push
xchg
sahf
xor
pop
push
pop
dec
jge
icebp
push
jmp
icebp
andl
push
repz
fistpl
std
int3
push
and
lret
mov
ret
data16
orb
inc
gs
les
xchg
std
movsb
cwtl
pushf
xchg
test
lods
add
es
xchg
xor
cltd
sbbb
jae
inc
loope
cs
loop
xor
sub
and
and
mov
inc
mov
or
out
outsb
aaa
lret
cmp
lods
rcll
ljmp
jp
je
sbb
call
or
aaa
jmp
incl
sbb
push
out
pushf
mov
in
sbb
cmpsb
add
adc
sbb
lcall
add
roll
sbb
ret
mov
push
cmp
mov
testb
pusha
dec
sub
enter
out
cmpsb
pop
push
hlt
sbb
jns
cmpsb
or
cmp
out
addr16
out
inc
lea
pusha
jbe
outsl
loopne
mov
aam
jns
popa
cld
push
jne
push
mov
or
or
popf
mov
fwait
adc
cmp
pop
cmc
push
sbb
cmpsb
ret
popf
lea
movsb
scas
mov
movsl
sbb
out
dec
addr16
test
pop
xor
das
mov
int
das
xchg
pop
cmp
jbe
adc
jne
xchg
int
cltd
imul
insl
cmp
pusha
cmpsb
ds
sub
add
cmc
and
test
sub
bound
sti
cld
repnz
inc
inc
mov
jmp
mov
dec
lods
or
arpl
test
clc
ds
rclb
ss
in
ljmp
mov
dec
iret
sbb
insl
xor
test
jmp
sub
or
iret
or
inc
mov
insb
cmpl
ret
xor
jg
jo
sbb
push
das
pop
inc
insb
adc
pushf
adc
mov
iret
dec
or
jmp
or
lds
mov
movsb
pop
cs
jo
jp
fisubl
in
adc
testb
mov
stos
pop
pop
adc
addr16
or
inc
dec
fcoml
ja
xlat
push
pop
dec
cmpsl
in
or
sub
inc
and
jecxz
imul
fists
mov
fs
mov
shl
lahf
pop
out
es
lret
addb
inc
add
repnz
stos
std
cs
mov
fwait
inc
inc
iret
movsb
pop
mov
iret
mov
dec
subb
imul
fdiv
ja
int3
push
popa
in
inc
lahf
mov
out
sahf
jae
in
arpl
cmpsl
pop
fld1
fists
arpl
dec
jns
mov
dec
push
testb
adc
insl
sub
arpl
out
repz
cltd
mov
xchg
mov
adc
movsb
nop
hlt
insl
dec
adc
stos
jl
add
test
test
cmp
xor
ja
jo
jb
adc
cmp
insb
jecxz
cli
xchg
xor
mov
pop
jae
shl
iret
xor
cld
lods
fcmove
adc
cmp
adc
ljmp
and
push
mov
cwtl
dec
mov
mov
adc
push
lea
cld
outsb
or
fadds
daa
scas
sub
dec
test
les
and
cmp
loope
pop
ss
mov
fs
lret
push
jo
mov
outsb
orl
dec
rorb
push
test
inc
mov
scas
pop
adc
cli
mov
nop
inc
movsb
pop
jns
ja
js
sarl
test
sbb
sbb
cli
daa
popa
hlt
pusha
imul
cwtl
adc
mov
cltd
sahf
pop
push
push
inc
std
fwait
sub
push
fld
jmp
mov
mov
lods
test
add
in
mov
repnz
inc
lock
add
jbe
sub
adc
add
sbb
loopne
aam
leave
aaa
fisttpll
mov
loop
bound
test
je
xor
mov
ljmp
mov
stc
aas
mov
add
fcom
fsubp
push
imul
fdivl
mov
jnp
add
lahf
jbe
mov
testb
lret
xorl
ss
int3
sbb
jo
mov
pop
adc
loop
dec
dec
add
cmp
sbb
mov
xchg
ret
aaa
rcrl
into
xchg
mov
push
mov
ja
repnz
shlb
cmp
inc
xchg
lea
dec
scas
mov
js
push
popa
sbb
scas
imul
mov
xor
xchg
pop
xchg
mov
mov
aaa
sbbb
or
cld
in
into
fisubl
test
push
xchg
daa
add
cmp
adc
add
int3
out
add
repnz
cmp
fnsave
lock
adc
sbb
cmp
into
popa
push
aas
jne
xor
sahf
movb
fnsave
xlat
push
iret
mov
pop
ret
xor
adc
loopne
inc
adc
lods
or
lock
out
in
ljmp
or
icebp
cli
test
mov
mov
inc
shrb
das
dec
mov
lds
sahf
aas
notl
movsb
lods
orb
je
and
push
and
mov
mov
xor
loopne
leave
leave
and
scas
cmp
lcall
lahf
hlt
cmp
xchg
stos
inc
in
es
push
pop
push
gs
push
lds
ljmp
dec
js
in
adc
sbb
int
dec
pop
cmp
jb
je
mov
jecxz
pop
dec
inc
dec
dec
or
es
mov
nop
in
xchg
idivl
ja
enter
cmp
aas
scas
fldcw
xor
cmp
out
pop
pop
or
sbb
adc
int3
mov
cltd
mov
xchg
xchg
xor
mov
and
sbb
mov
xchg
sbb
lahf
mov
inc
mov
stos
push
rcll
lds
jae
ret
inc
sub
or
mov
ret
out
or
mov
addl
adc
mov
hlt
inc
xchg
xlat
fisubrs
inc
xchg
jno
xor
sbb
jmp
push
ret
pop
out
sbbl
cmp
mov
sub
jnp
mov
xchg
dec
lea
mov
icebp
sub
mov
inc
cwtl
cmp
dec
sub
je
sbb
cmpsl
ljmp
pop
dec
pop
xlat
mov
fwait
ljmp
inc
push
pop
fidivrl
lods
aad
fucom
jnp
addb
inc
and
cmp
sbb
ja
movsb
push
imul
jns
decl
rorl
imul
into
pop
mov
sbb
pop
adc
dec
addl
in
test
adc
inc
rcrl
push
mov
or
or
dec
shrb
push
mov
push
inc
sub
add
sub
sub
add
aaa
and
mov
pop
sub
inc
mov
cwtl
pushf
stc
std
vunpckhps
mov
bnd
nop
sbb
scas
dec
push
and
arpl
push
mov
xchg
cld
push
cmp
test
std
shlb
js
loopne
iret
aas
pop
mov
adc
pop
in
sub
scas
push
push
leave
addb
push
pop
popf
outsl
mov
es
xchg
scas
jmp
in
push
push
xchg
xor
pop
lret
cmpsl
pop
sub
jb
add
mov
sahf
mov
jb
mov
pop
cmp
std
pop
imul
xchg
dec
sub
movsb
subb
mov
js
mov
mov
into
or
sbb
pop
push
arpl
fs
call
lods
imul
in
cmc
dec
fs
dec
scas
adc
jmp
mov
insb
dec
pusha
int3
outsl
dec
and
pop
cmc
jns
loope
clc
out
push
mov
loopne
mov
int
out
cmp
pop
jno
dec
or
das
inc
popf
gs
aaa
cmpsl
addr16
loope
adc
xor
divl
sub
ljmp
xlat
push
xchg
lret
sub
lods
mov
popf
push
gs
outsb
ds
xchg
sbb
or
andl
repz
int3
pop
int
mov
fistl
cs
sbb
mov
call
movsl
fldl2t
pusha
sub
lods
mov
pop
sahf
or
sub
dec
xlat
fcom
xchg
shl
arpl
stc
icebp
cwtl
mov
mov
jp
sub
aaa
mov
ja
int3
data16
in
pop
mov
sub
lcall
xlat
repnz
jae
lcall
pop
fisubs
shlb
pop
scas
aaa
add
inc
ret
mov
outsb
adc
out
sti
flds
pop
inc
inc
inc
inc
lret
lret
jecxz
sbb
lods
mov
movsl
inc
arpl
push
pop
mov
jbe
cmp
imul
mov
xor
fcomi
jns
arpl
icebp
iret
fwait
rolb
jmp
jle
add
pushf
adc
in
outsb
call
fmuls
imul
dec
sbb
sti
sub
xchg
lret
outsb
imul
jmp
es
jecxz
aaa
das
adc
cmpl
test
mov
push
xchg
rcrl
mov
gs
adc
jns
pop
enter
push
xlat
sbbl
bound
fwait
into
movsb
add
fimull
imul
sbb
sar
sub
xlat
fs
arpl
int
dec
push
sub
inc
mov
mov
sbb
push
int
js
pop
movsl
in
jmp
mov
mov
lea
fcom
int
call
or
rcl
popa
out
jb
inc
test
sub
xchg
push
shlb
inc
pop
data16
daa
pushf
pop
add
addl
call
lahf
scas
inc
call
fwait
rcll
fsubrl
rol
lcall
test
lcall
shl
sbbl
add
sarl
jmp
gs
mov
lea
test
hlt
inc
mov
mov
inc
xchg
popf
mov
daa
jmp
outsl
mov
or
sub
mov
dec
leave
int3
jnp
push
adc
inc
out
adcl
sub
mov
xchg
mov
pop
xor
lcall
xor
in
dec
jnp
add
dec
jae
mov
clc
push
dec
adc
out
dec
stos
movsw
fiadds
in
push
jbe
jp
inc
jbe
rcl
gs
insb
cmp
lock
add
mov
pop
adc
and
outsb
mov
push
sub
and
mov
leave
cmp
xor
fwait
mov
stos
mov
sarb
or
mov
jle
out
xchg
xor
jno
push
outsl
jne
test
es
xor
popf
cmp
push
repz
add
aam
inc
push
jecxz
xchg
movsb
jae
xlat
iret
push
push
arpl
outsl
dec
push
mov
cmpl
xchg
imul
in
je
frstor
loope
xchg
out
movsb
jl
and
adc
push
and
loopne
xchg
push
mov
in
sub
test
data16
lret
xchg
push
push
cmp
ds
dec
jge
cld
insl
sbb
es
ret
dec
in
adc
or
repz
jo
xor
jl
aaa
les
or
cld
add
daa
or
push
fwait
xchg
ja
cmp
gs
aad
fs
sti
in
jl
xor
mov
out
adc
sahf
lods
stc
in
dec
sahf
xlat
mov
popf
jo
and
cmp
sbb
pop
dec
mov
add
aam
iret
into
nop
mov
lret
xor
test
scas
adc
hlt
pop
nop
shlb
dec
or
adc
lret
xchg
dec
or
pop
popa
mov
arpl
movsb
shlb
stos
insl
xchg
jns
sub
insl
fs
cmp
cmpsl
adc
jnp
pop
subb
das
or
xchg
mov
pop
lods
add
inc
sub
std
xlat
mov
cmc
cltd
imul
inc
outsb
pop
push
sub
adc
test
jns
iret
xchg
mov
xchg
xor
xor
mov
rcrb
adc
gs
and
movsb
ret
mov
and
adc
inc
cld
xor
shll
fstpl
adc
adc
stc
cwtl
les
inc
and
movsb
sti
sub
jo
xchg
out
adc
xor
push
or
cwtl
xor
lcall
cmc
outsl
in
and
dec
pop
jbe
dec
dec
fcmovnu
mov
stc
mov
mov
adc
cmp
lds
inc
adc
ret
aaa
add
jecxz
adc
sub
std
cmpsl
cmp
jg
add
movsl
in
fistpll
imul
sbb
ja
mov
mov
ljmp
inc
mov
mov
shrl
mov
pushf
jb
out
push
dec
in
out
lds
cmpsb
enter
jns
aas
outsb
add
mov
pop
stos
rcrl
mov
dec
and
movsl
sti
mov
in
mov
loope
inc
mov
xor
in
js
or
jle,pt
sti
jnp
pop
mov
jecxz
sbb
iret
mov
int
daa
mov
push
jmp
pop
adc
jnp
lock
inc
std
cmp
shl
cltd
movsb
pop
jmp
lds
out
mov
aam
ss
xchg
subl
in
test
pusha
cwtl
data16
add
and
lods
in
js
daa
push
leave
lds
sub
cmc
pop
out
push
dec
roll
and
pop
fdivl
std
sbb
mov
push
gs
xchg
ss
scas
sbb
mov
cmp
stos
lea
daa
sbb
test
repz
sbb
aas
icebp
popa
xor
pop
jo
es
outsl
pop
pop
sbb
mov
pop
out
sub
out
jnp
out
xchg
mov
pop
adc
std
jae
inc
mov
or
shl
xchg
pop
mov
adc
call
rclb
mov
push
mov
aad
js
je
iret
and
mov
push
outsl
and
dec
popf
jl
sahf
add
in
fs
xor
loop
shll
inc
out
cmp
test
adc
movsl
or
out
loop
add
lret
out
mov
push
inc
xlat
das
fidivs
add
popf
sar
xchg
xchg
leave
cmpsb
mov
add
add
and
jne
pop
ja
scas
les
mov
das
fdivrs
cmp
inc
push
push
and
mov
call
cmp
ficomps
xchg
clc
imul
mov
addl
or
in
add
fwait
add
stos
test
xor
popa
xchg
mov
mov
lahf
sbb
and
cmp
in
out
mov
xor
pusha
imul
jnp
inc
cltd
movsl
ss
lods
dec
fisubrl
popa
arpl
aas
or
pop
repnz
pop
mov
lahf
inc
pop
mov
pop
dec
ja
jp
aam
js
into
aas
test
cmpsl
stos
popf
lea
insl
jo
insb
xor
push
icebp
xchg
dec
jl
out
das
inc
dec
sub
lods
and
repnz
in
xchg
aam
test
out
mov
jge
orb
fists
inc
fidivrl
stc
xor
lock
jecxz
iret
push
repnz
cwtl
dec
add
insl
pushf
and
je
test
or
inc
pusha
addr16
or
je
fmull
xchg
in
adc
and
int
push
lahf
xchg
adc
shrb
cmp
add
xchg
jecxz
sub
cmp
mov
fwait
lcall
es
adc
dec
mov
test
sahf
cmp
scas
stos
hlt
inc
sar
jl
jbe
scas
dec
cmc
loopne
shll
or
jge
scas
out
cs
cmp
lret
pop
aam
lods
cmp
clc
dec
dec
xchg
jmp
cmc
or
pop
dec
popa
ljmp
jmp
cltd
mov
cs
in
insl
mov
in
add
mov
dec
data16
push
and
dec
in
xchg
pop
push
fwait
in
ja
aam
sub
and
sarb
cli
push
sub
jae
pop
pop
cltd
ret
popa
push
push
push
sub
or
mov
xor
pop
addb
les
mov
xchg
fsubl
push
or
shrb
nop
mov
jmp
jge
xor
mov
add
pop
inc
xchg
cmp
mov
mov
dec
popa
xchg
jae,pt
bound
push
jle
adc
bound
sbb
fisubrs
xor
shlb
cmp
push
mov
jl
fldenv
push
sbb
into
mov
es
inc
cmpl
inc
cmpb
xor
out
cmp
jo
cs
lret
test
int3
sbb
xchg
sbb
data16
rol
pop
out
push
out
data16
and
dec
pop
inc
sbb
incb
dec
xchg
and
mov
test
leave
movsl
add
jo
out
loopne
adc
add
jnp
mov
aad
sub
mov
call
ret
push
xor
cmpsl
in
mov
jmp
mov
inc
push
clc
xor
push
decb
ljmp
cmp
push
and
stc
inc
mov
cmc
jno
pop
mov
pusha
lcall
aaa
push
mov
fstpt
lcall
xchg
mov
ljmp
and
aas
js
jge
lcall
add
xchg
popa
or
xor
dec
in
repz
dec
push
lods
adc
pop
movsb
and
adc
jge
pushf
inc
movsb
sbb
mov
xchg
mov
jae
fsubl
out
cltd
pop
mov
jl
movsl
or
xchg
aas
mov
push
orb
aad
adc
lahf
test
inc
shll
pop
stc
fs
lock
adc
rclb
and
enter
ljmp
inc
inc
add
dec
rclb
fidivs
es
xchg
lret
jge
or
icebp
push
lds
adc
push
gs
bound
faddl
aaa
ja
fisubrs
out
sub
leave
lcall
xor
js
fwait
rclb
push
jle
enter
sub
adc
js
call
scas
lea
bound
je
or
sub
lahf
ret
pop
jne
xchg
pop
add
addr16
bound
jmp
loop
into
xor
mov
lea
add
mov
fisttpll
icebp
icebp
lret
pusha
and
or
in
mov
lds
sbb
cltd
cmp
insb
push
int
fucom
xchg
ja
lock
je
sbb
rcrl
xor
xchg
sbb
pop
ret
pop
mov
jae,pt
push
shll
hlt
adc
std
lock
in
gs
jmp
xchg
inc
xchg
or
push
add
sti
daa
mov
mov
addb
cmp
pop
jns
mov
outsb
iret
cmpsl
pop
cwtl
adc
jecxz
dec
idivl
jae
jl
sbb
xchg
inc
loopne
sbbl
pop
mov
in
test
push
xchg
iret
ret
xor
pop
add
fwait
icebp
int3
dec
int
pop
jns
movd
les
stos
mov
call
stos
mov
mov
xor
or
sbb
mov
jl
jb
cli
mov
imul
cmpsl
inc
nop
pop
shrb
mov
repnz
jo
push
cli
ficoml
bound
leave
mov
mov
ficompl
test
jmp
icebp
inc
cmc
loope
sti
outsl
sbb
inc
sbb
pop
xor
test
loopne
lods
ss
mov
sahf
les
dec
loop
addr16
jo
test
mov
cmp
mov
test
cltd
push
sbb
xchg
aad
dec
and
xor
negb
mov
mov
pop
test
orb
popa
adc
dec
pop
lock
sti
mov
xchg
iret
mov
and
subl
push
mov
outsb
outsb
and
mov
sbb
pop
jl
sbbb
jp
stc
mov
scas
ja
sti
and
mov
dec
insb
jns
add
add
mov
cmp
ja
jno
adc
sub
cmp
pop
cmp
jnp
xor
sbb
mov
push
test
jp
pop
int3
add
sahf
ds
and
stc
sbb
scas
in
jne
into
inc
loop
sub
adc
imul
movsb
xor
orl
cmpl
fcomip
and
test
inc
pop
mov
pop
dec
aam
adc
mov
inc
jo
iret
inc
xchg
dec
cs
pop
outsb
rorl
sub
cmp
sub
idivb
repnz
mov
int
pop
fsubrl
dec
outsl
or
sti
out
loop
clc
jns
push
add
or
dec
incb
call
cmp
notl
mov
scas
imul
add
lahf
mov
lea
dec
and
test
mov
ljmp
cmp
lock
jp
stos
es
sbb
cwtl
iret
jle
out
jge
cmc
add
inc
cmp
rorl
jle
ds
movsb
dec
jno
shl
dec
sbb
or
push
clc
jae
jg
and
movsl
add
or
or
iret
and
add
cwtl
mov
pop
out
outsl
lahf
call
negl
mov
jne
cli
or
leave
push
es
sbb
stos
pushf
xchg
pop
cmp
dec
push
mov
mov
cmpb
and
out
int3
pusha
dec
fldt
sub
add
aam
mov
in
push
mov
mov
pop
xchg
xor
arpl
lods
mov
mov
add
jg
dec
mov
test
pop
sti
cmpsl
dec
lret
jmp
movsb
fcmovnu
stc
jb
popa
sub
cmp
dec
push
mov
mov
add
dec
xchg
call
shlb
dec
inc
mov
xor
bound
sub
push
or
addr16
rorb
mov
xor
out
inc
cli
mov
ret
stos
pop
push
popf
fisubl
mov
jnp
data16
iret
xchg
shl
loop
ret
lods
inc
push
push
pop
jp
flds
or
inc
ja
test
stc
xlat
push
cli
pop
outsb
inc
cmpsb
mov
dec
ret
sub
mov
xorl
push
pop
pop
rcr
in
cltd
cs
push
xchg
sbb
or
add
jno
dec
xlat
mov
rclb
xor
dec
shr
push
rcrb
adcb
push
clc
dec
gs
daa
ret
mov
adc
out
lret
push
fldenv
cmp
xlat
loope
clc
stos
sbb
das
cmpl
fwait
lahf
sub
hlt
aad
lret
addr16
dec
cwtl
inc
les
xchg
cmp
mov
loopne
dec
xchg
cld
dec
xlat
ficoml
cmpl
fnstcw
imul
in
xchg
jnp
and
push
shlb
call
dec
sub
push
test
adc
cld
popf
gs
push
lahf
jmp
fstpl
and
mov
jne
sub
lcall
nop
gs
mov
les
cmp
push
add
je
mov
push
lahf
xchg
stos
ss
sub
pop
adc
pop
mov
lock
dec
nop
mov
dec
inc
and
inc
or
rcrb
movsl
sub
and
add
int3
and
das
sub
add
sarb
push
imul
xchg
sub
and
pop
fs
stos
sbb
lret
dec
xchg
aaa
fs
fnop
stos
mov
arpl
stos
xchg
add
push
lcall
or
sub
cmc
xchg
inc
mov
lcall
loope
daa
mov
sbb
les
xchg
pop
lods
ret
das
mov
sahf
push
mov
das
mov
cmp
mull
xor
or
pushf
mov
test
in
jp
adc
and
sarl
mov
inc
add
or
mov
push
in
stos
or
ss
pop
cld
mov
popa
loop
imul
testl
icebp
fistpl
cmp
inc
jg
icebp
imul
lret
mov
add
sbb
lock
sbb
arpl
inc
push
and
cltd
pushl
push
cmpsl
pushf
rclb
dec
adc
or
bound
insb
pushf
imul
movsl
dec
or
push
adc
jnp
or
dec
pop
sub
dec
std
pop
lods
mov
pop
ja
add
movsl
push
lret
add
push
hlt
adc
inc
jnp
mov
or
xor
add
xchg
mov
test
jecxz
imul
in
movsb
jge
mov
sbb
ret
or
int
fidivs
loopne
sarb
movsl
mov
jo
lret
jge
mov
adc
cltd
xchg
mov
push
icebp
outsb
mov
in
or
jno
jp
lea
fstl
je
scas
mov
sub
xchg
mov
xor
pop
popa
cmpsb
inc
into
imulb
inc
aaa
icebp
aaa
lea
fsubl
xor
xchg
cld
pop
cmp
inc
adc
adc
sub
mov
inc
shrb
mov
rcl
das
sub
in
sub
pop
jo
enter
sbb
or
int
pop
cmp
xor
aad
jne
jg
out
lahf
inc
xchg
imul
nop
fwait
test
pop
insb
xlat
add
shlb
or
daa
jnp
mov
sbb
jbe
loop,pt
fbld
out
jecxz
xorl
mov
fstp
cltd
out
adc
shlb
xor
xor
enter
movsb
push
jl
das
cmpb
int
ret
and
adc
sub
push
int
sub
jmp
fs
inc
adc
dec
push
dec
sbb
push
cmc
mov
cwtl
jecxz
xchg
shll
xchg
bound
dec
in
sbb
adc
mov
dec
add
mov
and
pop
sbb
testb
cmp
adc
jns
mov
inc
scas
mov
insl
mov
pop
mov
nop
jo
pop
dec
in
ss
jno
stos
stos
push
das
push
das
loope
xchg
mov
mov
or
loope
addr16
ror
pop
xor
andps
std
rcr
jg
jae
arpl
mov
push
mov
fnstsw
jo
sbb
mov
xchg
cmpsl
gs
iret
js
mov
jp
sbb
push
mov
stos
insb
out
xchg
mov
add
add
call
push
sbb
pop
fcoms
push
mov
cld
add
jbe
out
jno
lds
das
jne
or
xor
ret
sub
out
pop
sbb
mov
push
xor
clc
fs
out
pop
add
in
std
mov
xchg
sbb
cmpsb
ficoms
jl
mov
xor
or
ja
outsb
push
push
and
hlt
sarb
lods
nop
push
push
in
push
scas
jmp
adc
and
sbb
cmp
jo
call
and
add
movsl
enter
enter
cmpsb
push
sbb
aam
sbb
test
add
push
dec
lret
stos
cltd
fildll
sbb
jge
mov
push
sbb
out
pop
jecxz
dec
test
dec
pusha
mov
cmp
aaa
fsubrs
pop
loop
mov
cmpsb
jno
ret
mov
js
lcall
pop
add
pop
cwtl
xchg
aas
rcll
pusha
mov
push
data16
flds
mov
repnz
scas
sub
sub
and
mov
outsb
loopne
je
push
cmp
lods
lahf
add
pop
cli
sub
scas
jmp
hlt
aas
inc
mov
mov
jb
xchg
mov
xor
int
arpl
test
sahf
cmpsl
push
or
lock
dec
dec
fldcw
dec
xchg
ficoml
push
aas
mov
xchg
lods
aad
push
adc
movsb
daa
mov
les
mov
add
fisttpll
jo
cmpsl
ljmp
jne
cmpsb
adc
sub
add
loopne
add
lods
stos
or
jp
je
call
jnp
insb
fs
sar
dec
jnp
cmp
dec
movsb
popa
sub
or
mov
jecxz
xor
mov
add
add
ret
les
sub
incl
leave
adc
loop
push
ret
fdiv
incb
decl
sti
or
aaa
test
stos
jae
dec
mov
out
mov
outsb
imul
jle
sub
xchg
jo
loope
movsl
rcr
andb
inc
cmpsb
xor
inc
sbb
xchg
push
jp
pop
dec
into
inc
cmpsl
nop
push
aam
push
add
in
inc
push
jge
xor
and
mov
adc
int
mov
popa
pop
cld
lods
sbb
shl
pop
jo
lahf
testl
xor
gs
push
popf
ror
push
enter
jl
mov
sbb
cli
sub
pusha
fsts
cmp
or
pushl
jne
sub
jp
adc
adc
jecxz
push
xor
push
jns
jne
ds
adc
or
outsl
mov
jo
mov
mov
dec
insl
mov
outsl
xor
pop
out
call
xor
push
int3
mov
xor
or
xor
xorb
push
rcl
sbb
jg
jo
rcrl
imul
cmp
mov
push
push
sti
mov
ret
dec
into
pop
or
dec
pop
das
js
out
outsl
ds
sbb
dec
lods
push
ret
loop
test
ss
insb
mov
pop
sahf
add
cmp
and
cltd
das
mov
addr16
pop
mov
mov
sarl
push
hlt
mov
mov
adc
xlat
push
imul
jmp
xchg
and
inc
cmp
dec
push
cli
xor
scas
std
push
test
stos
lock
mov
ja
mov
xor
hlt
jl
cld
gs
xor
mov
xor
int3
shr
repz
and
out
dec
xorb
adc
push
sar
jecxz
daa
mov
cmc
sti
push
or
sbb
mov
into
mulb
push
nop
xchg
mov
push
sbb
mov
add
hlt
mov
clc
mov
add
mov
movsl
add
outsb
int3
ret
mov
cmpsl
into
sub
xchg
sub
dec
scas
mov
jg
or
mov
rcrl
es
gs
or
jo
shll
fidivs
mov
sbb
es
stc
shrb
cld
icebp
mov
mov
loopne
xchg
jb
pop
xchg
fnstcw
xlat
int
mov
xchg
xchg
shlb
and
sbb
enter
sbb
rorb
xchg
push
or
mov
mov
inc
sbb
inc
in
add
mov
push
js
mov
jmp
jl
xchg
adc
push
pop
icebp
sub
lcall
inc
xchg
add
shlb
in
mov
sti
das
mov
imul
out
cld
es
lcall
jns
push
inc
and
fistpll
aaa
iret
mov
sbb
leave
mov
sar
lret
mov
xchg
pop
or
gs
dec
jne
in
unpcklps
cmp
push
push
xchg
mov
mov
add
push
lock
rolb
cmp
flds
enter
jnp
xchg
push
xor
xchg
add
push
mov
inc
and
ret
aam
mov
xchg
inc
shrl
sarl
dec
xchg
push
lahf
es
jo
mov
stos
inc
or
insb
sub
negb
lcall
adc
paddw
cmpsl
imul
inc
js
adc
push
adc
loopne
aad
imul
cmc
or
scas
aaa
jnp
out
test
cli
jnp
and
pop
xor
cmp
insb
pusha
cmpsb
cmp
das
adc
mov
adc
nop
sub
xor
dec
cmpsl
adc
lock
pop
aas
sbb
jecxz
pop
push
add
shll
xchg
in
jno
sub
cltd
outsb
mov
xor
jmp
push
js
into
inc
mov
dec
inc
ret
push
stos
jmp
stos
pop
jo
rcll
cmp
cmc
and
imul
xor
int
add
mov
stos
push
cmp
or
push
stc
mov
fs
fisttpl
out
dec
incl
or
cmp
in
imul
jb
in
data16
cmp
out
lahf
mov
mov
popa
ret
jge,pt
sub
and
dec
inc
dec
and
icebp
out
pop
insb
enter
add
adc
ds
inc
popa
sbb
jl
or
fwait
cli
loopne
jne
into
dec
pop
and
into
hlt
dec
mov
cmp
es
sti
lea
sahf
loope
xchg
sbb
stos
inc
stos
insb
fadd
xchg
mov
xchg
test
and
mov
shll
inc
scas
jecxz
addr16
inc
cmp
mov
clc
std
and
stos
into
add
int
xchg
dec
test
cmp
add
push
clc
inc
jmp
iret
bswap
testb
xor
inc
sub
cmp
dec
jg
ja
cs
aad
mov
imul
fmuls
inc
xchg
call
cmp
inc
pop
mov
int3
loop
and
mov
daa
outsb
loop
scas
fimuls
mov
pop
movsb
pop
daa
dec
cli
movsb
cmp
idivl
leave
adc
and
pushf
xor
jmp
adc
sub
cltd
scas
mov
cmp
and
cmp
push
test
enter
aas
jnp
mov
dec
jge
xor
sub
xor
das
jnp
fstpt
ljmp
clc
jae
arpl
xchg
test
das
xor
or
sub
and
and
add
jo
or
fcomi
fadd
mov
shrl
popa
fadds
push
sub
cltd
out
sub
add
adc
jge
pop
cmpsl
mov
jae
and
push
mov
push
pop
pop
push
pop
cld
mov
inc
in
xchg
test
hlt
lret
jns
xor
mov
pop
insb
jge
les
movsb
sub
pop
cld
stc
ds
out
fists
mov
jns
pop
cmp
cmpsb
xlat
adc
dec
add
sahf
clc
pop
sbb
inc
hlt
insb
and
in
loop
lret
sub
rolb
push
lea
fsubl
imul
jo
cld
fidivl
fwait
ljmp
shlb
movsb
inc
imul
mov
sbb
inc
pushf
outsb
push
ja
push
mov
push
dec
or
test
imul
jne
pop
mov
inc
sarb
divb
cmp
fistps
mov
jae
sub
mov
insl
sub
xorl
shr
adc
test
dec
in
nop
pop
dec
add
xor
sub
push
pop
fcomps
aad
into
call
out
nop
sub
sub
lea
inc
sub
push
pop
gs
adc
push
scas
inc
jecxz
add
push
fsubrs
jg
stos
imul
dec
adc
mov
cmp
repnz
lds
jno
sbb
mov
out
cwtl
mov
fwait
push
add
and
xrelease
add
cmpb
repnz
or
stos
pusha
push
imul
push
or
add
fcompl
jecxz
cmc
dec
jae
mov
test
jg
je
test
lock
jbe
movsl
ljmp
arpl
sbb
popf
ficoms
xor
mov
mov
add
mov
leave
shr
xchg
mov
xchg
icebp
addr16
imul
pop
addl
popf
sahf
or
push
push
mov
in
ss
push
xchg
repz
mov
adc
aas
insl
or
and
mov
mov
loope
sub
test
mov
sub
mov
push
rorb
lods
dec
mov
add
cwtl
fcoms
out
pop
push
movl
inc
mov
fsubs
loope
imul
xchg
and
jmp
mov
cmp
mov
sub
ja
call
mov
mov
adc
dec
lcall
in
lods
jl
and
call
jl
cs
adc
push
lods
fs
out
adc
in
dec
ficoml
nop
or
les
in
pusha
inc
add
aaa
cmpsb
sub
imul
push
xchg
mov
repnz
adc
fistl
movsl
fcmovnbe
nop
iret
jle
dec
sbb
test
pop
jnp
or
pushf
shll
into
add
outsb
rcrb
push
rol
jmp
xchg
cli
es
lock
push
sbb
arpl
xor
xchg
fucom
dec
lock
lret
arpl
mov
fwait
pop
inc
arpl
imul
lods
push
mov
sbb
and
or
out
and
jg
ds
add
pusha
rclb
and
inc
pusha
cmp
jo
nop
rolb
mov
out
push
gs
push
cltd
loopne
jns
cmp
or
jmp
cmp
jb
shl
pop
xor
xchg
or
inc
outsb
jle
xchg
in
movsl
mov
xchg
mov
push
mov
rclb
xchg
xor
jg
xchg
leave
pop
andl
iret
js
mov
movsl
xor
cmpsb
xchg
mov
roll
jl
ja
mov
dec
or
cmp
jae
daa
aas
adc
into
cmp
stc
jnp
adc
pop
inc
sbb
adc
mov
mov
xor
push
jg
or
pop
sub
push
inc
mov
jno
fcompl
aas
sub
mov
lods
jbe
mov
push
adc
repz
or
jge
xor
arpl
pop
data16
call
insb
in
fadds
xchg
mov
jle
rcll
mov
add
cmp
mov
cmpsb
mov
ret
sub
mov
pop
daa
mov
scas
and
fmuls
les
xor
and
insl
dec
mov
or
mov
push
gs
loop
xor
add
addr16
adc
pop
mov
stos
sbb
decb
shrb
popa
xor
inc
pop
cmp
inc
jp
xorb
scas
mov
sub
xchg
ret
js
rorb
or
add
sub
sbb
mov
out
addr16
stos
jmp
dec
or
lock
pop
lods
xor
xor
imul
cmp
sub
xlat
push
adcl
adcb
rcrl
out
adc
sahf
aaa
int3
or
and
jno
aad
adc
lcall
and
xchg
push
dec
lds
sub
or
add
dec
loop
shrl
adc
std
add
das
xlat
ds
cli
aam
lods
mov
inc
xor
test
ljmp
popa
jb
in
ficompl
xchg
push
pop
xor
jle
int3
dec
jb
sahf
push
inc
sbb
mov
and
lea
outsb
and
cmovo
xor
iret
xlat
mov
insb
push
test
push
subb
sbb
xor
mov
add
pusha
dec
lcall
mov
sub
dec
movsb
fwait
int
out
pop
bound
loopne
pop
adc
push
out
xchg
sbb
je
hlt
bound
lock
arpl
or
adc
shrl
scas
pop
push
jmp
repz
sub
or
lods
bound
or
push
sbb
pushf
sbb
nop
stos
mov
dec
cmp
mov
adc
lods
fsubrs
inc
cs
pop
in
mov
fcomps
js
pop
or
pop
xchg
cli
faddl
push
xor
push
sbb
sub
stos
into
mov
inc
test
add
jae
jo
add
sub
xor
jmp
movsb
sub
out
jne
ret
xchg
pop
dec
pushf
sub
cmpsb
jne
test
jge
pop
addr16
scas
xor
test
mov
add
and
test
loope
dec
mov
push
xor
bound
lods
adc
incl
pushf
mov
clc
stc
je
push
mov
or
lea
add
out
or
frstor
pop
jl
add
testl
daa
int3
inc
add
add
xchg
xchg
fbstp
imul
sbb
cmp
clc
and
or
jne
stos
mov
add
divb
inc
inc
outsl
mov
ret
sub
repz
xlat
xor
repnz
popa
leave
add
jle
clc
test
bound
sti
inc
shrb
and
push
xlat
loopne
shlb
ret
cmc
xchg
adc
fdivrl
orb
add
rolb
push
inc
rolb
fisubrs
ljmp
inc
push
es
movsl
insb
push
sub
push
lret
loopne
rcr
insl
jno
push
inc
fistps
pop
push
push
xor
adc
jmp
stos
cmp
loope
fwait
movsb
mov
shrb
sbb
pop
push
mov
or
in
sub
jne
and
or
pop
imul
mov
pop
std
pop
stos
add
adc
loop
xor
iret
lock
pop
fsubrp
pusha
lahf
add
lods
and
cmp
cmc
das
xchg
sbb
inc
inc
push
icebp
mov
mov
mov
sub
rclb
in
nop
aas
sarb
dec
pusha
rsm
mov
call
lods
mov
mov
mov
mov
int3
out
jb
dec
loope
nop
add
push
jo
cmp
das
cmc
and
jge
arpl
loopne
sahf
in
inc
and
je
mov
loope
cmpsb
loop
js
std
lcall
aam
pop
stc
les
dec
ss
aam
cmc
out
adc
lcallw
or
ljmp
jl
sahf
rcll
scas
cwtl
imul
int
lret
and
dec
shll
dec
add
push
mov
jbe
outsb
and
mov
jmp
pop
ret
mov
or
or
push
mov
es
aam
neg
lock
lcall
mov
dec
cmpsl
push
or
sahf
jae
call
in
inc
mov
mov
push
imul
adc
das
and
adc
jmp
jne
out
jge
nop
repz
push
mov
mov
or
nop
mov
ret
push
cmpsl
out
add
mov
mov
es
push
popa
push
lahf
sub
test
cmp
dec
lock
mov
pushf
xor
mov
or
lds
xor
fs
dec
cmp
cmp
pop
mov
inc
js
or
sub
and
icebp
push
stos
add
shrb
sub
lea
gs
sbb
roll
inc
ret
ds
sbb
xchg
xchg
cltd
ja
fwait
sbb
pushf
push
or
add
cmpb
es
scas
mov
fcoml
inc
pop
push
call
popf
ds
gs
ss
sub
pushf
js
lea
ficompl
sbb
outsb
xor
mov
div
call
sbb
adc
xchg
fiaddl
add
mov
inc
std
xchg
ja
cmp
jno
ljmp
inc
push
pop
mov
outsb
xchg
pop
stos
xlat
mov
rcr
fincstp
jmp
push
shll
push
sub
movsb
and
xor
daa
xchg
push
mov
and
inc
hlt
ficompl
xor
sahf
enter
das
ja
xchg
jle
push
imul
insb
mov
daa
lods
cltd
subl
jno
and
xor
mov
fiaddl
jl
mov
adc
jae
add
aad
adc
push
jg
or
cli
jmp
push
and
mov
inc
cmp
int
sbb
cmp
push
dec
mov
iret
mull
or
xor
stc
rol
dec
mov
ret
push
jno
adc
inc
pop
lcall
and
cs
in
lahf
pushf
mov
sahf
nop
loop
dec
pop
stos
in
dec
dec
fmuls
mov
out
out
push
ja
sub
cmp
inc
mov
and
movsb
sahf
jmp
loope
out
sub
sahf
insb
dec
and
push
or
andb
arpl
js
arpl
sarb
pop
aas
and
fdivl
pop
dec
andl
cmp
xchg
xchg
test
aaa
push
dec
xchg
add
in
sahf
fists
inc
scas
mov
xchg
push
pop
repnz
jmp
in
lcall
orb
push
popa
clc
in
popf
add
call
fimuls
mov
addr16
mov
sbb
clc
and
jns
sbb
xor
mov
push
jmp
mov
shld
fcomp
inc
jg
pop
int3
jnp
xor
and
lret
daa
ret
mov
mov
shrb
lcall
sbb
insl
into
push
pop
std
mov
ficoms
adc
mov
pop
testl
inc
inc
subb
cmp
jno
xor
fsubs
and
test
test
pop
lea
cltd
mov
dec
xor
enter
xor
shr
add
jnp
repnz
sub
in
mov
aaa
mov
mov
jbe
add
dec
adc
jo
ljmp
jnp
jne
stos
mov
mov
cmc
loope
into
gs
or
movsl
lods
mov
sub
fs
cmp
xlat
sub
jae
sbb
pop
xchg
lret
hlt
inc
mov
jbe
dec
orl
dec
dec
stos
mov
mov
sbbb
outsb
mov
std
jno
pop
cmp
dec
pop
push
lret
ljmp
push
dec
scas
arpl
leave
push
add
mov
jb
pushf
sub
js
lock
or
loope
xchg
es
jge
push
xchg
and
out
sarb
aas
das
insb
mov
int
adcb
jb
or
negl
mov
lods
or
mov
fucomip
mov
sahf
gs
xchg
adc
mov
jo
push
dec
sub
pop
mov
mov
or
movhps
mov
dec
mov
lods
hlt
pop
arpl
ret
int
inc
cwtl
adc
xor
lret
mov
or
inc
cli
and
dec
jmp
subb
sbb
push
mov
gs
insb
rorb
lods
xchg
movsb
fstp
push
pusha
dec
add
addr16
jnp
sahf
aam
fidivs
inc
in
pop
inc
pop
push
and
fimuls
xchg
adc
outsb
ljmp
out
loope
rcrb
fcomps
test
pop
cmpsl
fimuls
dec
jae
sbb
mov
scas
adcb
sub
mov
sarb
xor
fmuls
push
xchg
mov
mov
fcomip
orl
jns
andb
jno
push
roll
inc
stos
movsl
outsb
push
mov
jecxz
jns
addr16
pop
push
jle
pop
mov
push
sbb
lods
cmp
loopne
mov
aaa
pop
push
movsb
cwtl
adc
mov
repnz
sti
out
jns
inc
mov
das
lds
mov
add
mov
mov
and
push
pop
dec
xorb
xor
out
int
add
push
repnz
dec
jbe
dec
hlt
movsl
jle
xchg
push
jb
cmpsb
scas
xorb
push
cmp
push
repnz
dec
sub
or
mov
hlt
mov
jmp
add
pop
cwtl
js
jg
inc
fisubl
and
or
out
pop
mov
push
outsb
add
ret
xchg
push
xor
subb
add
int3
push
or
ret
jae
gs
mov
mov
jno
fnsave
mov
mov
fs
mov
mov
lret
bound
dec
fisubs
add
rol
ds
dec
mov
xchg
pushf
add
daa
rcl
xchg
stc
into
xor
fwait
xchg
in
mov
mov
cs
add
mov
imulw
loope
ret
push
cs
icebp
fmull
sub
sbb
mov
xlat
jp
in
xchg
out
and
xchg
xchg
or
hlt
xlat
inc
dec
mov
cmp
fbld
inc
xchg
dec
cmpsl
dec
xchg
cmp
xor
out
adc
sub
call
push
insb
in
xchg
pcmpeqb
cmovo
fs
lret
in
and
aad
adc
subl
jnp
cwtl
fstps
pusha
in
xchg
mov
in
pop
in
pop
sbb
sub
push
push
les
arpl
mov
add
fidivrs
insl
dec
and
outsl
int3
inc
xor
mov
fadd
xchg
sbb
or
mov
jno
fwait
scas
in
pop
push
adc
aaa
sbb
jb
out
pop
pushf
icebp
addr16
add
cli
adc
ret
push
add
iret
pop
and
xor
pop
mov
cmp
adc
dec
pop
push
push
lods
xchg
push
adc
inc
xor
loopne
pop
cmpsl
mov
cmp
dec
jge
repz
cmp
jp
xor
push
push
js
and
scas
xor
hlt
stos
shr
jecxz
out
or
aam
dec
pop
insb
cmp
add
test
stos
xor
out
mov
bound
js
cltd
shrb
fwait
out
std
inc
dec
mov
rcll
jnp
pushf
cmp
fmull
mov
syscall
pop
fists
xor
insl
jl
xor
adc
lcall
xorl
sub
aaa
pop
sbb
pop
xchg
sbb
jae
leave
sub
adc
fwait
jg
pushf
sbbb
jo
dec
shll
in
adc
hlt
xor
xchg
push
jb
and
movsb
ficoms
and
std
or
scas
shrb
in
inc
mov
loopne
adcl
jns
cmp
fadds
jle
or
mov
mulb
loop
mov
xchg
cmp
pop
sub
mov
xchg
in
add
push
mov
jae
idiv
mov
out
and
jno
or
or
push
and
cli
aad
in
adc
dec
imul
cmc
lcall
push
jge
mul
insl
mov
iret
mov
cmp
mov
loopne
outsb
dec
and
push
inc
xor
jns
out
pop
fs
into
aam
testl
jnp
clc
adc
aas
outsb
sub
ss
in
push
push
mull
icebp
decb
dec
sub
adc
je
mov
jecxz
pop
jp
ss
mov
mov
stc
xchg
cwtl
jl
jb
nop
addr16
jge
or
es
jecxz
and
inc
jbe
test
pushl
ret
imul
cmpsl
lcall
inc
stos
loop
gs
inc
push
add
lea
mov
push
mov
xchg
dec
pop
inc
fst
sbb
hlt
xchg
clc
into
cmp
nop
add
jmp
mov
jle
jo
push
popa
jnp
in
push
dec
pop
shlb
pushf
lods
mov
sub
mov
cltd
leave
jb
mov
push
jns
sub
inc
adc
xchg
sub
pop
es
cmpsl
lds
ret
push
pushf
jbe
aam
les
imull
cmp
aas
mov
push
inc
inc
push
pop
cli
test
into
xor
mov
and
sub
test
stos
or
testb
xchg
adc
bound
popl
push
addb
dec
lahf
pop
idivb
mov
inc
mov
mov
ds
inc
pop
mov
adc
leave
or
adc
je
and
sub
push
jecxz
inc
dec
mov
jb
jmp
arpl
es
mov
lods
sub
sub
aam
pushw
lods
hlt
mov
mov
push
adc
sbb
icebp
lea
shlb
mov
rorl
jnp
loopne
xchg
push
pop
lods
jmp
int
movsl
adc
test
rol
add
or
les
call
mov
hlt
pop
pop
and
pop
enter
ljmp
orl
add
fldenv
mov
pushf
js
fcmovnb
and
hlt
mov
jg
dec
mov
fldenv
jne
movsl
mov
bnd
sti
and
push
adc
les
leave
mov
adc
xchg
bound
sub
sbb
ss
out
inc
and
arpl
jecxz
aad
shll
testl
xor
fsubp
push
cmpsb
stc
or
add
gs
lcall
mov
outsl
popa
fbld
fidivs
inc
adc
cmp
push
loope
and
mov
imul
pop
inc
stos
hlt
fst
xor
push
das
in
push
cmp
adcb
clc
sti
js
mov
std
add
shr
ss
xlat
lret
xor
sub
mov
jnp
inc
push
cli
push
ror
lock
push
pushf
dec
xor
pop
loop
jl
mov
push
jbe
cwtl
adc
fcom
cmp
mov
push
mov
loopne
je
mov
or
std
push
sub
std
sahf
xchg
cmp
sub
add
les
xlat
fwait
dec
xor
out
subb
incb
pop
aas
pop
xchg
cmc
push
mov
mov
leave
adc
sbb
xchg
shlb
pop
int
sti
adc
pop
mov
sub
in
jl
aas
std
adc
mov
push
dec
push
cmp
nop
sbb
ss
lock
leave
insb
pop
ljmp
vandps
js
xor
mov
mov
push
inc
loop
test
addl
es
arpl
or
cli
xor
fs
test
pop
push
stc
pushf
xchg
jle
xor
loope
rcll
in
add
sub
subb
and
or
dec
aad
cmc
fisubrl
stos
stos
pop
cmp
call
imul
int
mov
clc
dec
js
add
std
inc
call
dec
popa
mov
ror
aas
mov
ret
roll
mov
lret
inc
jns
outsb
lcall
bound
cli
jb
mov
test
scas
xchg
jl
test
inc
sub
xor
sbb
movsl
add
dec
in
mov
sti
xor
xor
jno
call
lods
mov
inc
out
mov
dec
aad
push
nop
mov
nop
add
popf
int
mov
in
pusha
sti
add
iret
dec
test
jbe
mov
mov
xor
push
mov
xchg
out
sbb
stos
mov
stos
lcall
fsts
fs
roll
inc
fldl
std
xchg
sbb
jae
sbb
mov
lea
fs
mov
loopne
test
test
imul
and
shll
mov
pop
loopne
test
bound
mov
repz
shlb
inc
in
pop
out
out
sti
add
fistpll
call
jae
adc
mulb
sub
aam
cmp
lock
pushf
shlb
mov
icebp
aaa
sub
lock
repz
arpl
mov
sahf
in
aad
scas
jge
sti
aas
inc
sti
mov
pop
jmp
cmpsb
sub
add
testb
stc
push
popf
or
push
mov
sbb
outsl
fildll
ret
sub
or
mov
inc
mov
adc
mov
ljmp
stos
sbb
push
jne
jl
fst
movsb
add
les
sub
or
xor
sbb
jns
insb
inc
test
xchg
mov
mov
sahf
ds
jge
xor
jno
or
lods
push
cmc
mov
jbe
sbb
mov
rcll
in
fsubrs
adc
and
ds
xchg
cs
je
xchg
enter
sub
adc
push
insl
imul
sbb
adc
cmp
pop
jecxz
add
int
cld
pop
mov
inc
dec
sub
mov
das
shlb
cmpsb
adc
jno
push
pushf
rcr
jecxz
cs
jnp
jb
movl
in
ja
mov
repnz
shl
mov
mov
add
fdivr
push
incl
jg
push
jae,pt
pop
mov
adc
dec
push
arpl
shlb
ds
pop
popa
xor
sbb
ljmp
ds
pop
sub
mov
test
add
jp
push
cmp
push
mov
xlat
cli
mov
test
lahf
or
pop
xor
std
cmp
xchg
aam
fistpl
sbb
sbb
push
inc
cmp
setbe
add
cmpsb
cli
jns
test
push
notb
mov
add
inc
fimull
pushf
sbb
movsb
int
les
cltd
mov
sub
jb
sbb
imul
sarb
and
mov
sbb
subb
mov
xlat
daa
lods
ja
mov
sub
or
and
bound
stos
aam
inc
in
mov
mov
dec
out
sbb
sub
out
fs
cld
push
ret
imul
enter
fdivl
or
in
pop
inc
xor
push
dec
push
xchg
adc
xchg
daa
out
mov
clc
movsl
jns
inc
stos
fnsave
inc
xor
lds
inc
adc
lcall
adc
push
lret
bound
push
mov
mov
and
scas
incb
add
jo
sbb
cmp
sub
jle
mov
cmp
add
dec
inc
inc
push
testb
add
data16
sbb
lods
sub
xor
inc
filds
sahf
and
jl
or
cli
fdivrs
scas
or
sbb
mov
jo
dec
mov
jmp
sahf
outsb
ss
jp
dec
push
fs
scas
cmp
out
xchg
add
push
mov
sbbb
lds
adc
sub
mov
and
daa
push
cmp
xchg
mov
adc
inc
jo
or
jnp
mov
lret
rcl
sub
in
add
dec
stos
cwtl
push
xchg
bound
lret
and
cmp
mov
lcall
pop
inc
out
xor
push
jmp
lds
and
imul
push
stc
fsubl
js
inc
jmp
pop
lds
inc
loopne
cmp
pop
sub
jp
mov
cld
add
insb
rcr
mov
loope
cmp
mov
jnp
scas
dec
cmpsb
sub
or
inc
mov
ss
push
fwait
subl
mov
and
xchg
outsb
out
lock
and
add
sub
xchg
push
call
sbb
adc
or
orl
orps
leave
mov
pop
loop
sub
repz
inc
mov
int
lahf
sbb
push
xlat
idivb
xor
lds
add
out
cmp
mov
cs
pop
cmp
sbb
jmp
lcall
add
push
mov
mov
pop
cs
fisubrl
test
rclb
add
fstps
mov
cwtl
and
lret
push
fmuls
jp
pop
mov
jmp
sbb
mov
ja
rcrb
inc
push
or
ss
in
sub
inc
repnz
push
add
stos
push
and
xchg
mov
mov
jl
mov
icebp
sti
jnp
inc
inc
leave
inc
mov
push
stos
sub
xorl
into
pop
adc
sub
mov
jmp
js
call
sub
jb
ficoml
push
iret
xor
inc
push
and
stos
js
sti
jecxz
mov
inc
push
sbb
js
push
ja
bound
mov
dec
nop
mov
jmp
ljmp
mov
inc
dec
mov
and
cld
adc
bound
sbb
pop
int
mov
les
aaa
sbb
clc
int
cmpsb
rcr
pushl
push
push
pop
iret
loope
cmp
dec
data16
orb
inc
mov
test
mov
inc
jge
jl,pn
mov
sahf
push
jae
lods
aam
in
out
cmp
scas
lock
inc
xor
imull
pushf
add
sub
ljmp
or
sub
stos
lret
in
repnz
push
std
xor
lcall
mov
adc
popa
and
cwtl
repnz
sub
xchg
jne
loope
xor
pusha
insl
mov
rclb
or
mov
repnz
add
xlat
pop
arpl
sbb
mov
push
cmp
movsb
mov
out
aad
lds
xchg
mov
sub
push
xlat
ret
sub
lods
sbb
insl
loopne
pop
ja
pop
les
jecxz
insl
pop
xor
adc
and
sarl
aas
loopne
ror
mov
imul
or
cltd
nop
xchg
sbb
js
inc
and
jl
sub
sbb
lods
cld
daa
and
xor
jb
cmp
js
push
push
and
lds
cmpsl
sbb
xor
lods
out
mov
and
push
scas
jbe
mov
in
jp
mov
ret
and
inc
leave
dec
jbe
movsl
inc
data16
and
xchg
push
str
mov
and
jl
adc
cmpsb
mov
lds
mov
mov
adc
or
shll
jmp
and
fdivl
xchg
fidivrl
xchg
fdivrs
jge
xor
lods
jecxz
cmpsl
jmp
loopne
cltd
popf
and
cs
pop
or
popa
pop
stos
xchg
adc
stos
mov
mov
and
push
mov
aam
mov
xor
or
ror
xchg
sub
clc
clc
mov
sub
or
mov
and
pop
dec
xchg
daa
xor
mov
fdivr
mov
and
je
push
mov
sbb
movsb
popf
cmp
cmpl
mov
idivb
inc
push
adc
js
test
shr
mov
xchg
jle
xor
data16
dec
mov
xor
movsl
push
mov
test
pop
jmp
adc
int
xchg
sub
push
pushf
adcl
call
dec
xor
sbbl
outsb
mov
cmc
add
pop
fwait
les
push
mov
add
movsl
push
dec
xor
idivl
pop
in
stos
add
mov
lret
xor
or
push
push
xlat
pop
mov
sub
sbb
addr16
movsl
hlt
dec
gs
insl
adc
jge
mov
inc
mov
add
test
in
dec
xchg
retw
sub
cwtl
dec
sub
inc
jno
outsb
in
in
clc
movl
push
mov
in
adc
cltd
sub
sahf
cmp
pop
ss
sbb
subl
mov
xchg
outsb
hlt
jle
dec
test
les
ja
dec
jle
pop
pop
jbe
lock
lock
push
shll
pop
inc
xor
jnp
push
xor
out
jno
mov
mov
scas
or
cmp
iret
mov
hlt
and
pop
adc
sub
push
jg
lock
rcll
adc
roll
dec
rolb
xchg
mov
movsb
pop
rcrb
sub
mov
mov
mov
fisttpl
cmp
mov
inc
mov
stc
mov
pusha
xchg
pop
jnp
je
xor
je
xlat
cmp
inc
stos
jge
mov
pop
mov
loop
and
push
mov
xchg
mov
dec
sub
insb
jbe
lahf
sub
mov
or
sysenter
std
or
stc
push
fnstcw
push
mov
ja
decb
lcall
jecxz
sbb
push
cmp
cld
rol
dec
push
push
pop
sbb
mov
mov
hlt
sub
jo
pop
aad
push
lret
lock
sahf
xchg
and
aaa
sbb
pop
sbb
ss
loop
xor
inc
jne
sbb
xchg
ret
arpl
outsl
std
pusha
add
xchg
cmp
cmpsb
cmp
repnz
xchg
cmp
adc
in
leave
jl
or
roll
mov
xchg
jmp
push
aad
and
or
pop
and
sbb
push
lea
jo
push
nop
adc
adc
fwait
inc
clc
jle
sbb
rolb
adc
flds
and
sbb
jno
arpl
lods
mov
and
lret
mov
xor
ljmp
dec
mov
push
es
stc
popa
jp
mov
js
jb
stos
aad
adc
xchg
pop
and
les
cmp
xorl
cmp
mov
mov
daa
ds
out
xchg
mov
int
cwtl
sub
testl
jecxz
xor
les
adcb
lods
mov
insl
sub
mov
cli
mov
out
inc
or
aas
jmp
loop
add
pop
mov
mov
cmp
scas
mov
mov
stos
sub
mov
les
pop
ljmp
and
push
adc
ljmp
cs
pop
lds
rorl
lret
sub
push
scas
and
repz
repz
or
xchg
adc
mov
mov
and
clc
mov
repnz
push
sarl
push
jge
loop
out
fldenv
sbb
xchg
shrb
std
aad
inc
scas
cmpsb
test
jle
es
jle
stos
pop
push
mov
into
dec
call
mov
test
insl
xchg
fsubl
arpl
gs
lods
shl
insb
jp
es
cmp
incb
and
or
jno
xor
sar
dec
lods
pop
ret
mov
fs
inc
aad
aad
iret
dec
cltd
adc
shr
stc
cmpsb
mov
int3
jmp
and
stc
nop
inc
xorl
mov
cmc
add
mov
pop
sub
pop
inc
sub
inc
add
adc
lock
out
lods
push
int
pop
dec
clc
sti
cld
fwait
es
xchg
xor
push
imul
test
mov
cli
daa
xor
jno
test
cs
rcrl
mov
test
in
xor
or
pop
push
dec
scas
outsb
adc
mov
outsl
fwait
xor
mov
cmp
ret
add
mov
call
hlt
icebp
push
ja
sbb
jno
imul
outsl
fmul
mov
in
push
inc
sbb
gs
fwait
out
xchg
push
inc
movsl
xchg
les
adc
inc
cmp
hlt
xchg
sub
jnp
cmpsl
and
pusha
cmp
mov
xchg
fsubr
and
icebp
cmp
xor
push
hlt
out
lock
inc
mov
lret
sbb
xbegin
mov
push
jae
inc
jb
cmp
mov
push
out
lods
adc
ret
cmp
sbbl
inc
and
push
or
icebp
fcompl
add
out
or
inc
push
leave
pop
dec
ret
aam
or
adc
fsubp
out
fidivrs
pop
out
inc
scas
mov
scas
data16
test
or
bnd
or
cltd
sti
cltd
movsb
lea
sahf
adc
movsl
pop
inc
push
xor
add
jb
aaa
jns
dec
out
sub
aad
push
pop
inc
add
jb
xchg
fcmovnbe
in
pop
scas
pop
push
addr16
in
add
xchg
mov
mov
mov
ss
push
lret
or
jmp
clc
call
fsub
and
fbstp
cmp
jne
inc
inc
pop
pusha
clc
js
in
shrb
rolb
sbb
ret
mov
cltd
jne
outsb
test
insb
pop
out
lock
add
flds
sbb
or
les
xchg
pusha
popf
pushf
ret
arpl
adc
xor
jns
aas
and
jge
and
mov
rolb
fldenv
into
pop
lahf
mov
push
xchg
dec
in
sahf
rclb
xrelease
cmpsl
out
loope
mov
bound
xchg
xchg
cwtl
ret
sbb
sub
popf
aaa
sbb
or
add
cvtps2pd
clc
dec
adc
or
or
stos
pusha
jno
lret
mov
in
xchg
mov
data16
je
cmp
popa
pusha
leave
pop
inc
ja
insl
mov
sbb
fcomps
scas
int
fcmovne
xor
add
mov
shrb
sub
sbb
cld
subb
mov
xchg
xor
lcall
loopne
push
fnsave
dec
ret
and
cwtl
fabs
mull
push
xchg
popf
iret
mov
int
adcb
dec
pop
rcll
nop
sbb
xchg
sub
mov
roll
mov
push
push
ds
or
jns
and
cmp
fs
and
add
sbb
mov
daa
clc
inc
inc
lods
outsl
mov
int
or
xchg
test
adc
bound
stos
in
dec
and
pop
jp
sti
mov
dec
mov
and
dec
dec
insl
push
cmp
dec
lds
popf
mov
jno
fsts
in
mov
pop
divl
xor
jl
and
pop
xor
push
or
or
stos
imul
outsl
mov
and
pop
push
sub
xlat
add
sub
fwait
andl
in
lret
jne
gs
cmp
cmp
or
lods
out
and
imulb
push
in
inc
imul
or
fisubrl
sub
mov
stos
in
sahf
xchg
incb
and
sub
loopne
dec
pop
mov
lret
sbb
rcrb
cmpsl
test
xor
cltd
test
stos
imul
mov
out
jae
jne
out
cmpsl
inc
push
push
push
stos
call
mov
pusha
add
shr
or
push
mov
inc
ret
lea
orb
adc
xor
loopne
enter
rcrl
jae
lret
das
inc
decb
sarl
jns
rcr
and
cmp
sahf
mov
dec
outsb
ret
test
out
mov
mov
orb
test
adc
mov
adc
cmp
clc
sbb
and
cmp
aam
fs
fcoms
mov
xor
je
in
xor
mul
shr
into
cld
dec
jl
xor
pop
push
and
inc
push
jo
outsl
loopne
inc
je
or
sti
loop
pop
cli
fwait
idivl
jo
lcall
scas
and
push
push
repnz
das
mov
pop
sarl
sbb
mov
ret
mov
dec
sub
shr
jp
cmpsb
lock
jne
jmp
into
xor
stos
test
cmp
jp
insb
mov
sbb
cli
pusha
pusha
inc
dec
mov
mov
ret
xlat
push
decl
inc
int
push
jbe
cmp
xlat
mov
imul
mov
jmp
sahf
fcomp
inc
pop
pop
loopne
outsb
mov
sub
rolb
outsb
add
and
push
out
mov
sarb
int3
jp
or
pop
data16
scas
test
mov
stos
repnz
cltd
lret
repnz
data16
and
ret
pop
xorb
lret
or
sbb
pop
push
and
sbb
cmp
push
pop
mov
dec
and
sub
mov
scas
add
shlb
sub
leave
pop
imul
arpl
in
lods
adc
mov
pop
inc
shll
orl
pushf
cmpsb
fcoml
inc
adc
push
sub
cmp
cmp
cltd
out
cwtl
in
and
add
test
xlat
and
jbe
call
jmp
es
inc
xchg
mov
stc
xor
inc
mov
sub
cmp
cmp
adc
inc
jle
mov
push
cmp
cltd
scas
shll
xor
adc
repz
xor
dec
xchg
cs
dec
dec
pop
xchg
xchg
and
out
xlat
clc
loope
sub
xchg
adc
adc
or
stos
push
ret
repnz
jae
bound
pop
sbbb
cs
fucomp
fdivrs
add
mov
xor
or
les
adc
sbb
sub
push
pop
cld
mov
adc
rolb
pop
fadds
lea
in
flds
cmp
cwtl
loope
xor
lret
ficomps
jge
adcl
std
inc
outsb
inc
mov
cltd
inc
push
cs
int3
mov
sub
lret
pop
mov
rcl
aaa
enter
fisttpll
add
and
mov
repz
aaa
or
add
push
sbb
and
subl
jmp
xchg
gs
loop
int
unpckhps
pop
lea
out
adc
mov
sahf
cli
cmp
jle
push
rorl
inc
sub
cmp
nop
adc
xchg
jmp
movsb
inc
cs
js
jnp
test
addl
cs
fs
push
fs
cmp
rcrb
xor
and
ljmp
push
fsubp
xchg
mov
xor
outsb
ljmp
arpl
scas
xchg
pop
imull
xchg
mov
sub
dec
sti
ss
adc
filds
mov
cmp
mov
das
pop
rorl
cli
nop
and
sti
bt
rorl
pop
rdtsc
sbb
jge
add
test
sub
jbe
xor
add
inc
xor
cmp
inc
test
sti
jmp
pop
aad
stos
pandn
mov
call
adc
push
push
xchg
adc
mov
fistpll
pop
xor
test
cmp
mov
push
mov
test
stos
mov
inc
test
push
inc
mov
fists
scas
cwtl
jo
push
adc
mov
xor
lcall
stos
sub
cmpsl
stos
jecxz
aad
fucomip
stos
push
mulb
loope
popf
jl
mov
adc
push
add
dec
ficoml
xlat
movl
inc
mov
loop
xor
jb
imul
in
fidivs
mov
imul
cmp
xor
jl
out
dec
cwtl
mov
and
sub
mov
lods
or
mov
mov
add
scas
and
pop
repnz
push
cld
fimuls
lods
cwtl
push
clc
or
sbb
testl
push
int3
mov
je
cmp
pop
xchg
negb
xchg
adc
ja
xchg
pop
push
jno
in
push
dec
jae
aad
lcall
test
ds
bound
sahf
loope
repnz
mov
mov
into
aaa
jg
fnstenv
cmp
icebp
int3
leave
das
fcomp
cmp
adc
test
add
adc
mov
loopne
dec
mov
fisubrl
mov
jg
fisttpl
popf
mov
in
add
xchg
incl
outsl
mov
xor
fs
add
or
fdivrs
lods
sbb
jmp
loop
adc
mov
dec
mov
sub
int
and
fmuls
lock
ljmp
out
pop
enter
addr16
lahf
sub
mov
cmpsl
lds
add
test
in
sbb
xchg
insb
cmpsl
out
pop
push
add
jae
mov
cwtl
mov
test
shll
data16
or
rclb
movsb
scas
add
pop
fists
bound
adc
xlat
nop
fsubrl
mov
orl
call
adc
mov
fisubrl
bound
xor
stos
mov
cmc
sub
in
xor
or
push
or
xor
jg
mov
aad
mov
jecxz
mov
shll
push
xchg
pop
in
adc
mov
pop
add
cmc
dec
and
mov
push
aas
dec
mov
movl
dec
aad
ss
mov
cmp
into
cmpsb
js
mov
xor
pop
js
xor
divb
and
rclb
mov
xor
xchg
lcall
lock
cmp
inc
inc
mov
or
leave
aad
or
and
in
push
push
loope
aam
mov
xor
adc
pop
fcmovbe
mov
xor
add
xchg
sbb
idivb
lea
inc
and
inc
pop
test
pop
lods
mov
ret
add
and
cmpsl
movb
fwait
mov
push
sub
jns
jle
fs
addl
lcall
repnz
in
test
ret
fcompl
paddq
lcall
test
sbb
add
mov
lods
push
and
dec
cmpsl
add
inc
stos
std
jmp
sub
adc
fdivrl
movsl
xchg
pop
cmp
sbb
jo
and
add
in
pop
adc
pop
xor
dec
out
fidivl
lahf
sub
cwtl
mov
xlat
pushf
cmpsl
sbb
cwtl
shr
mov
adc
cmp
addr16
and
add
xor
mov
nop
in
xchg
scas
lret
add
mov
subb
cmp
pop
mov
sub
pop
xchg
push
sbb
sub
ds
pushf
dec
out
lcall
dec
cmp
int3
int3
mov
pushf
mov
dec
cmpsl
stos
push
jl
sub
sub
adc
ja
and
daa
mull
xchg
and
mov
lret
cmpsb
leave
popa
test
xchg
mov
and
in
mov
or
mov
fmul
cmc
decl
icebp
xchg
testl
popa
orl
xchg
out
cwtl
std
clc
sub
dec
or
jbe
or
xor
sub
scas
inc
jp
aas
lods
aas
inc
adc
xor
xchg
das
stos
push
push
and
icebp
mov
mov
shll
jae
dec
insb
sbb
sbb
sbb
fdivrs
out
dec
and
lcall
ret
repnz
fistps
popf
mov
add
jb
out
mov
mov
es
int
xchg
cmpsb
aad
mov
sbb
mov
sub
mov
into
sub
push
in
pop
movb
or
push
push
out
fsubrs
out
push
pop
mov
sbb
sub
aad
ret
fists
lcall
mov
mov
loope
cmp
ds
add
jg
lds
call
push
notl
mov
and
xchg
out
std
mov
xchg
aaa
ss
dec
adc
mov
icebp
pop
loop
push
mov
into
inc
mov
mov
out
pop
or
inc
ss
fcmovnu
or
mov
int
movsl
dec
or
pop
xchg
icebp
xchg
pop
sbb
jg
push
jae
mov
lret
jmp
adc
push
int3
loope
jg
sti
jb
xor
or
test
lret
testb
jbe
lahf
mov
cmc
insb
aaa
out
mov
xchg
push
mov
cmpsb
push
jne
jmp
ret
add
pop
popf
mov
xlat
add
pop
aad
negl
xchg
inc
xchg
add
orb
mov
outsl
lret
int
push
inc
cmc
and
stos
push
in
mov
scas
push
int
testl
jo
add
lea
dec
pop
into
addr16
dec
fucom
sub
aaa
xlat
aam
imulb
mov
xor
dec
ror
jp
mov
dec
add
lcall
aam
sub
jecxz
and
dec
stc
ljmp
xchg
les
fildl
iret
out
push
cmp
push
mov
cmp
push
movl
or
rcl
add
vpandn
out
scas
push
mov
or
icebp
mov
jnp
push
inc
or
mov
sbbb
sub
and
inc
push
xchg
gs
stos
mov
test
mov
lods
inc
fsubr
push
and
jne
daa
jl
call
xchg
stos
or
adc
inc
mov
mov
jp
jmp
cmp
dec
jnp
movsl
mov
xor
push
les
push
jae
or
out
add
and
adcl
mov
outsl
or
jo
fs
out
addl
lret
lret
jg
lahf
cmp
dec
lcall
aam
out
sub
imul
pop
mov
pop
mov
mov
nop
and
aas
fisubs
or
int3
into
hlt
enter
pop
sub
sub
xor
in
ja
fsubrl
fstps
adc
aam
and
movsb
scas
xchg
and
mov
stc
xchg
and
xor
push
fiadds
push
xor
mov
and
shrl
cmpb
loopne
sahf
pop
mov
out
or
ret
and
adc
scas
inc
sub
les
stos
inc
je
adc
push
loop
test
push
push
lock
notb
xchg
pop
dec
lods
xchg
jp
inc
aaa
jmp
mov
xor
in
decb
sarl
pushf
xor
pop
xchg
scas
les
add
add
cs
inc
xor
jo
pop
pop
mov
inc
aad
mov
test
cmpsb
jg
cmpsb
push
es
inc
outsl
aam
fisubl
pop
rorl
cld
inc
scas
cld
jmp
push
lock
gs
xchg
xor
mov
fldcw
mov
or
fadd
dec
jae
mov
xor
xor
xor
pop
inc
ret
xor
ljmp
mov
mov
inc
fcoms
inc
cwtl
pop
fsubrl
orl
or
insb
and
cmp
push
xchg
imul
mov
mov
jl
sub
subb
loop
jecxz
lock
in
jno
insb
das
xor
mov
add
call
xor
in
insl
imulb
in
aaa
sti
adc
xor
xchg
sub
xor
testl
lahf
cmc
ljmp
jg
bound
add
mov
iret
mov
mov
mov
mov
ret
nop
xor
xor
inc
xchg
into
or
xorl
mov
sub
rorl
shlb
and
das
clc
testb
xchg
xchg
pusha
mov
dec
jbe
push
iret
mov
pop
fldenv
call
pop
pop
nop
lret
jge
loope
xchg
fstp
faddl
mov
out
pop
cmpsl
mov
push
cs
pop
mov
aas
shl
jb
test
inc
xchg
icebp
xchg
iret
addps
fwait
mov
cmpb
push
sub
dec
out
pop
dec
and
pusha
aad
clc
shr
or
data16
jle
aaa
sub
inc
dec
in
call
jo
dec
cbtw
inc
sbb
iret
dec
sub
adc
jb
or
cwtl
mov
negb
mov
int3
adc
ficompl
inc
scas
cltd
int3
aas
xchg
and
aas
into
sub
pop
lods
iretw
xchg
or
inc
lods
adc
ret
repnz
ret
rclb
je
mov
data16
mov
dec
imul
adc
ret
jge
out
lds
or
xlat
or
int
push
xchg
lret
adc
lods
sbb
jne
push
xchg
xchg
mov
xchg
pop
in
dec
sarb
mov
jo
adc
mov
sbb
jl
cmc
lcall
and
pop
outsl
push
mov
dec
fcomp
cmp
xchg
stos
in
das
clc
cmp
ja
into
decb
dec
adc
lea
pop
mov
lcall
inc
jle
in
lods
cmpsl
jecxz
add
or
pop
mov
jae
sahf
cmp
loop
into
xor
leave
and
fsubl
mov
mov
fistl
out
mov
pop
jae
movsb
arpl
cld
jne
cwtl
stos
mov
push
sbb
mov
push
popa
into
repnz
loopne
jmp
mov
arpl
dec
mov
adc
insl
enter
ficoms
jl
ficompl
gs
mov
jnp
mov
div
mov
in
or
xchg
or
and
dec
cmp
adc
popf
loope
ds
mov
cwtl
jl
pusha
xchg
das
jmp
xlat
jbe
fwait
pop
jp
arpl
xchg
add
ss
dec
and
cmp
scas
testl
popf
bound
sbb
loope
jae
gs
stc
jne
or
jecxz
paddd
nop
cmp
sahf
bound
pop
test
incb
dec
aam
push
pop
cmp
repz
pop
jecxz
or
popa
jnp
adc
push
push
mov
xor
sbb
cmp
les
push
ret
popa
xlat
dec
push
fldl
jle
push
fcompl
dec
outsl
mov
and
xchg
pusha
rcll
lods
in
pop
jo
pop
mov
call
insl
fs
xor
cmpsb
gs
les
lahf
mov
sub
stos
stos
pop
cmp
xchg
popa
arpl
sbbl
pop
stos
sub
mov
scas
cmpsb
in
repnz
cmp
insb
rcl
add
dec
scas
xor
lea
bound
sub
out
inc
mov
mov
sub
sbb
push
daa
rolb
mov
int
push
push
and
jne
adc
mov
mov
lcall
inc
cmpsb
xor
js
cltd
insl
cmp
ljmp
aaa
sbb
cltd
dec
or
xor
xchg
lahf
mov
xchg
int3
dec
lcall
pop
xchg
iret
mov
push
pop
dec
jge
sub
adc
jmp
pop
inc
lock
xor
pop
cmpsb
adc
hlt
mov
mov
mov
adc
and
cmpsl
inc
xchg
add
scas
mov
fistl
push
lods
aas
ficomps
icebp
or
int
mov
mov
pop
jb
xchg
outsb
xchg
js
test
mov
mov
mov
xor
pop
mov
jbe
sbb
je
inc
sub
lds
push
das
push
mov
jl
in
sahf
mov
pusha
fs
daa
ret
xor
pop
leave
mov
jno
enter
push
jno
fwait
and
testb
xchg
nop
enter
push
es
mov
rcrl
jp
fsubl
push
imul
and
in
movsb
cmp
mov
inc
dec
sbbb
scas
lahf
xlat
rcll
mov
cmp
and
pop
out
mov
arpl
es
jb
pop
aam
jp
shl
inc
clc
push
mov
cmp
fistpl
test
push
ret
ficompl
fistps
mov
imul
inc
cld
mov
and
ficomps
pop
xor
aam
cmp
in
dec
pop
imul
ret
sub
cmc
dec
cmp
inc
cmc
sahf
aaa
into
xchg
push
lret
add
pop
repnz
and
lcall
jb
in
sar
push
mov
pop
sub
push
xchg
je
add
inc
out
adc
push
pushf
insl
sub
test
and
mov
pop
lahf
lds
cmp
or
jge
xchg
sbb
adc
and
jae
mov
nop
rcrb
jmp
cmp
aas
mov
in
or
xchg
cltd
jg
pushf
fisubrl
cmp
iret
rep
fnstcw
jns
jecxz
orb
push
and
push
xor
popa
mov
and
xor
mov
aam
pop
testl
pop
xor
xlat
aas
fistpl
push
jbe
ret
loopne
mov
ljmp
mov
js
pop
cmp
imul
ja
sub
dec
mov
jecxz
pop
sbb
mov
andb
cmpsb
lcall
aam
test
dec
leave
lock
gs
jp
mov
mov
cmp
add
in
cmpsl
test
jae
fs
xchg
adc
push
pop
shlb
cld
sbb
cmp
imull
imul
loopne
lret
shrl
xchg
mov
std
int3
loope
and
push
movsb
dec
or
push
loop
sub
dec
popf
jmp
ljmp
jge
or
ds
cld
jecxz
notl
push
loop
cld
adc
cmp
add
add
scas
pop
je
fsubs
std
fisttpl
mov
mov
mov
inc
push
xchg
sbb
les
pusha
into
iret
fisttpll
add
pop
lods
lods
push
cmp
xor
setle
cmp
js
or
inc
push
inc
aas
adc
and
mov
lahf
loopne
sbb
pop
or
xlat
adc
pop
lods
cmp
ljmp
sbb
push
mov
jb
scas
sahf
js
push
push
out
mov
cltd
iret
push
in
xorl
or
xor
bnd
sbb
jl
mov
insl
les
cmp
jecxz
xchg
jno
push
add
mov
pop
pop
push
fsubs
push
adc
mov
in
xor
and
jp
jg
xor
movsl
in
mov
data16
gs
in
xor
pop
dec
push
push
ja
sub
mov
and
int3
add
mov
cmp
sub
xor
mov
dec
enter
and
push
dec
sbb
pop
dec
scas
dec
cmp
cs
loopne
orl
jae
imul
lcall
les
aas
push
je
sub
mov
pop
das
aaa
xchg
nop
cmpb
push
mov
enter
and
pop
mov
jmp
std
test
push
and
and
pop
fwait
jns
outsl
pop
and
pop
lret
cmp
shrb
mov
addb
scas
fdivrl
xchg
int3
xor
lret
push
ljmp
add
enter
jl
xchg
mov
jne
push
shl
neg
lock
push
out
into
add
and
adc
shl
adc
stos
jns
mov
jae
loope
xor
out
or
adc
dec
push
clc
jge
mov
mov
jge
xchg
dec
mov
sti
inc
and
fwait
mov
jne
push
or
insl
cltd
nop
or
in
jbe
push
std
scas
shll
ja
xchg
xchg
mov
inc
push
xchg
repz
notb
push
adc
out
push
jl
jge
adc
pop
lds
sub
xchg
add
leave
pop
into
push
popa
test
gs
mov
sti
arpl
adc
hlt
sub
cs
xor
push
or
test
out
xor
les
cmc
mov
or
mov
push
into
shll
imulb
fldt
fdivrs
lahf
loopne
jle
push
sbb
ds
pop
hlt
mov
jbe
in
push
xchg
cmp
shlb
pop
fistl
mov
sub
mov
adc
dec
jle
dec
mov
inc
push
fld
jb
push
gs
fmuls
hlt
fsubrl
push
mov
xor
xchg
push
lods
ljmp
lods
push
ss
call
ja
shll
insl
lret
sbb
xor
adcl
cmp
dec
lcall
dec
lret
ficoms
in
fldenv
nop
icebp
jge
pop
mov
test
mov
in
cmp
lock
lahf
js
lret
mov
rcr
and
idiv
hlt
mov
movsb
mov
lahf
in
jns
ljmp
pop
jp
mov
push
add
aaa
dec
xchg
or
push
sbb
xchg
xchg
or
xchg
popa
cmp
popf
daa
cmpsb
ret
xchg
pop
adc
sub
pop
lods
fdivl
xor
pop
ret
into
and
lock
mov
push
adc
es
std
xchg
mov
out
loop
adc
mov
mov
push
fdivrl
cmp
sub
test
fisubrl
push
scas
add
leave
das
sub
std
mov
arpl
cmp
sub
xlat
dec
and
aam
dec
test
jns
lcall
scas
fsubs
lds
pop
test
loop
adc
out
gs
imul
repz
sbb
test
das
sbb
test
and
pop
test
xchg
shrl
pop
jmp
or
es
ja
and
sub
add
divl
ret
cmp
cs
sub
rorb
cmpsl
js
xchg
jmp
and
xchg
insl
pop
gs
push
aad
int3
or
mov
cwtl
loop
jecxz
inc
jbe
xor
cmp
in
pop
ret
jne
add
faddl
xor
rclb
push
cmpsl
gs
sbb
push
mov
jnp
xor
jg
jl
fucomi
xlat
push
rol
mov
bound
push
xchg
push
data16
int3
rep
jnp
repnz
fcmovnb
add
sbb
push
sbb
push
daa
es
stos
jl
inc
sub
nop
psubb
outsl
add
pop
mov
sub
pop
sub
notb
or
test
and
xor
cmc
push
mov
ljmp
dec
fsubrl
stos
xchg
push
popf
mov
lods
cltd
mov
jmp
aad
mov
pushl
lock
xor
pop
testb
adc
insl
out
sbb
jae
jno
gs
push
rcll
pop
lret
add
mov
pop
rclb
cli
lea
sahf
xchg
mov
into
fnsave
fidivl
in
jb
cmp
xchg
push
je
gs
jae
inc
cmp
cltd
inc
mov
ja
sbb
out
inc
pop
dec
push
pop
mov
jmp
fsub
fwait
mov
icebp
ss
mov
cmp
movsl
push
clc
aaa
loop
push
je
mov
jo
jl
sub
fldenv
shlb
push
mov
adc
and
rorb
xchg
pop
push
out
mov
and
sub
and
sti
fcmovnu
leave
cmpsl
daa
xchg
mov
test
dec
dec
mov
mov
movsb
dec
cmp
cmpb
cmp
gs
movb
mov
shrb
jb
loope
jae
subb
repnz
je
adc
int3
popa
incl
outsb
aad
mov
je
mov
jl
std
pop
xchg
js
ficomps
data16
xchg
mov
xchg
mov
addr16
in
fdivs
nop
adcb
jg
negb
mov
or
push
cmp
jno
adc
sub
lods
jnp
roll
rol
cmp
cmp
pop
xchg
imul
pusha
int
int3
fcoms
test
mov
sbb
or
cmp
clc
aad
ficoms
inc
ret
jnp
push
push
mov
mov
mov
or
bound
cmpsl
outsl
mov
pop
repz
stos
jg
sbb
popa
insb
lods
imul
add
mov
stos
or
mov
dec
cmp
lods
jle
sti
test
adc
dec
cmpsb
add
pop
rorl
test
ret
mov
adc
leave
sbb
in
and
inc
add
dec
ss
test
add
fistpl
fcoml
rcrb
push
int3
cmpb
inc
jle
adc
stos
lret
test
inc
arpl
mov
hlt
adc
and
jl
xchg
repnz
sub
dec
mov
call
test
int3
jmp
arpl
or
cmp
or
jbe
jno
xchg
mov
inc
xchg
ret
xchg
fnstsw
mov
sub
sbb
ljmp
lahf
jno
pop
mov
nop
cmp
aaa
add
xchg
mov
push
popa
fucomi
mov
dec
insl
dec
call
mov
mov
test
in
inc
es
pop
jp
xchg
leave
mov
pusha
ret
lret
popa
lret
pop
mov
adcl
and
pushf
mov
jp
xchg
stos
leave
std
loope
inc
push
mov
fisubrs
stos
dec
xor
jae
or
nop
les
push
xor
jb
add
popf
shl
sbb
fldcw
bound
push
out
ret
adc
sbb
xchg
mov
or
xchg
add
or
jp
sbb
leave
lahf
aad
push
ret
xlat
or
movb
stos
lds
ljmp
or
xchg
mov
mov
nop
repnz
sbb
mov
clc
mov
ja
bound
fdivrs
xlat
aad
sub
jae
in
jo
lss
subl
push
push
sbb
jne
rolb
xchg
jno
loop
mov
mov
mov
out
test
jmp
push
test
inc
or
dec
xchg
cltd
addl
adc
pusha
mov
push
rclb
push
movsb
pop
xor
xor
loop
shrb
aam
faddl
dec
mov
test
xchg
insb
pusha
adc
int
mov
fbstp
cld
popf
jg
cmp
jb
mov
xchg
sub
cli
mov
sbb
pop
or
nop
imul
xor
ds
inc
adc
dec
or
stos
mov
push
andb
xchg
lcall
dec
inc
lock
xchg
adc
sub
in
lcall
shl
in
xor
sub
repnz
mov
dec
fs
cmp
aad
adc
stos
inc
sub
cmpsb
pop
adc
jnp
rorb
test
xor
adc
mov
mov
xchg
stos
jmp
dec
dec
push
mov
or
adc
lods
mov
mov
mov
dec
in
sub
push
js
cld
dec
xchg
loop
inc
sti
xchg
ficoms
leave
cmpb
mov
mov
test
test
and
mov
xchg
or
cltd
int
sbb
dec
insb
cmp
push
cmc
cmpsb
mov
xchg
fnstcw
inc
into
scas
adc
mov
sbb
rorl
push
int3
add
int
orl
mov
add
dec
cmp
je
int3
add
xchg
xor
xchg
shr
push
jo
xchg
pop
and
imul
pop
rolb
ret
jp
push
xor
cmp
adc
andb
add
mov
out
dec
mov
adc
pop
and
pop
inc
or
inc
js
insb
std
push
pop
cmp
psubsw
mov
scas
in
sarl
add
mov
and
sbb
setb
add
sahf
popa
popa
das
mov
push
lret
scas
out
outsl
lea
mov
pop
push
mov
les
je
shr
mov
in
xor
sbb
iret
loop
jb
jo
lret
out
testb
pop
dec
inc
loopne
mov
inc
andl
sub
insl
shl
jae
cmp
scas
loope
cmp
mov
mov
xchg
xor
or
push
in
pop
enter
into
shrb
fwait
out
sub
fstpt
inc
jno
jo
mov
and
pop
mov
nop
lret
test
jmp
cmp
lock
call
les
sti
pop
cmp
addl
ret
inc
call
mov
sbb
lods
mov
dec
jb
loope
test
mov
dec
mov
xlat
sbb
lods
pop
jmp
lock
xchg
pushf
mov
mov
dec
xchg
lock
sub
cmp
inc
mov
pop
jbe
adc
push
idivb
cmp
movsb
or
mov
nop
sbb
in
loop
add
xor
das
mov
outsl
inc
daa
dec
xchg
jl
clc
ficoml
pop
testb
cmp
cltd
sub
add
jg
pop
imul
ret
mov
std
mov
add
ja
int
sub
notb
es
movsl
jo
push
nop
int3
cs
adc
adc
push
bound
scas
mov
pop
sahf
mov
or
mov
xor
int3
fs
sahf
nop
in
in
dec
imul
out
sbb
ds
f2xm1
js
sar
jnp
in
adc
pop
out
add
dec
mov
repz
mov
movsl
mov
adc
shlb
fcoms
pop
add
mov
icebp
test
fmull
ds
xchg
sbb
imul
push
xchg
scas
pop
cwtl
pop
test
lret
push
ret
cmp
std
lds
mov
jo
nop
aam
adc
inc
les
lods
xchg
and
ljmp
cmpsl
adc
cmpsb
outsb
roll
movsb
mov
fistps
push
jge
xchg
insb
add
lock
pop
mov
or
pop
mov
imul
xchg
jecxz
loope
push
mov
in
push
jnp
lcall
cmp
test
push
lret
into
mov
sub
cltd
push
in
and
pop
xor
das
cld
xorl
in
and
push
mov
or
push
lcall
aad
xchg
pushaw
dec
push
les
fwait
xchg
pop
cmp
mov
cmp
jl
add
in
in
sbb
scas
pop
xchg
bound
xor
inc
add
out
sbbb
outsb
add
cli
lcall
or
arpl
and
ljmp
ret
shl
cmp
mov
push
popa
cmp
lods
cmp
xchg
and
xor
aaa
jmp
cmpsl
mov
fnstcw
xchg
pop
movsb
or
pop
out
mov
lea
jl
jle
inc
shll
fs
mov
mov
mov
movsl
iret
mov
add
add
lea
inc
pusha
stos
cwtl
popf
clc
push
les
out
mov
sarb
xchg
mov
inc
fsub
mov
insl
pushf
call
jbe
push
stos
clc
lock
pop
cmpsl
jnp
dec
fisttps
inc
das
jo
imul
or
pop
sbb
add
insb
cld
out
jle
mov
add
dec
sbb
in
and
fadds
cld
jns
sahf
testl
and
xchg
or
add
dec
test
jnp
cmp
ffree
insl
ja
lahf
sarb
inc
test
lea
aas
mov
dec
dec
add
andl
imul
pop
stos
insb
mov
fidivl
outsb
pop
dec
push
mov
aaa
shlb
push
add
xchg
repz
ljmp
popf
mov
std
or
adc
push
stos
lahf
rorb
int3
mov
ds
cmp
call
mov
mov
test
movsl
jno
push
insb
int
aaa
mov
ret
push
mov
add
data16
std
je
mov
notl
push
or
push
cmpb
into
pop
inc
mov
rolb
or
fwait
push
pop
xchg
test
stos
or
jp
sub
or
cmp
pushf
adc
daa
cmpsb
and
lret
xchg
outsb
insl
mov
push
testb
fcomip
mov
add
out
scas
js
mov
mov
cmp
frstor
mov
inc
nop
pushf
pop
mov
jbe
int
add
mov
and
fucomip
inc
adc
je
dec
sti
insl
pop
test
push
repz
adc
or
hlt
xlat
rcll
pop
cmp
jle
stos
aam
jb
sbb
or
fisubrs
int3
lea
push
inc
adc
push
pop
stc
xchg
lds
add
and
cs
mov
sub
push
decb
xchg
movsb
push
cmp
in
jmp
pop
mov
jl
inc
pop
daa
sub
mov
in
sbb
mov
push
jge
push
add
jle
push
cmp
std
or
popl
push
push
jo
xor
in
js
inc
add
ds
xchg
lods
rorb
pop
inc
out
stos
pop
scas
ja
jbe
mov
cmp
ss
or
cld
or
sti
and
mov
int
xor
add
xor
or
jl
mov
ret
mov
es
jnp
cmp
hlt
sub
in
xchg
ljmp
inc
scas
xor
add
decb
fcmovu
out
pusha
pop
mov
pusha
inc
fisttpl
inc
inc
fiadds
jl
testl
mov
stos
cltd
push
xchg
mov
hlt
fsubs
std
add
xchg
jl
push
cli
ja
cmp
pop
jmp
int3
mov
lods
cmp
pop
adc
dec
fwait
inc
jne
mov
lea
outsl
fisubs
mov
loope
mov
add
fsubl
iret
int
xchg
push
jb
jmp
rolb
ror
hlt
mov
aaa
sbb
dec
xor
cmp
inc
sub
sub
insb
repnz
cmp
add
push
xor
xchg
dec
js
mov
loop
push
hlt
push
sbb
inc
in
inc
leave
cmc
jno
in
hlt
enter
xchg
cmp
loop
push
mov
inc
cmpsl
dec
mov
cli
xor
add
push
dec
xor
stc
jecxz
arpl
xor
pop
mov
lods
stos
push
stos
scas
xor
inc
sarb
jmp
bound
jae
sub
fs
jne
pop
loop
nop
xchg
or
dec
imul
sbb
sbb
testb
ret
movsl
int
xchg
push
jl
sahf
popa
pusha
fsts
mov
or
mov
xor
outsl
enter
jecxz
add
add
pop
ret
jecxz
dec
loopne
arpl
cwtl
mov
ret
inc
inc
sub
leave
iret
sbb
and
negb
mov
gs
pop
xchg
ss
cmp
xor
pop
out
add
std
rcr
adc
xchg
scas
push
movl
jl
mov
dec
js
jbe
ja
aaa
in
dec
ja
lahf
mov
sbb
out
clc
pop
pop
cmpsb
jecxz
xchg
push
inc
push
iret
xor
adc
jge
hlt
add
jg
fmuls
cmp
in
push
sbb
popf
ljmp
push
xchg
cwtl
repz
ror
mov
push
add
mov
js
ror
cmpsb
sbb
mov
mov
jbe
adc
add
jo
test
leave
mov
and
sbb
outsl
cmpsb
lods
inc
mov
cmp
loop
push
lea
pop
mov
sbb
arpl
push
pop
stos
mov
lcall
rcl
mov
push
push
cmp
mov
dec
lret
cmpsl
stc
nop
or
jne
stos
loop
int
mov
sahf
sub
lods
ja
push
add
sub
jns
add
add
sub
adc
xor
or
imul
xchg
orl
pop
stc
mov
je
in
lock
imul
or
test
jnp
sbb
or
sbb
and
pop
pop
dec
sbb
inc
or
mov
dec
jb
outsb
and
fnstsw
inc
jl
lds
push
test
loopne
lcall
xchg
aad
dec
mov
cwtl
xchg
lock
and
adc
sbb
adc
dec
push
push
lret
and
loopne
xor
push
jle
cmp
jae
pop
mov
cmp
adc
cld
mov
dec
pusha
jge
mov
jge
cmpsb
xchg
sbb
cs
add
or
cmc
cmp
arpl
xchg
dec
xchg
mov
add
mov
xor
cmpsl
shlb
jns
cmpsl
andl
push
pop
sbb
xchg
adc
mov
lea
cmp
ljmp
mov
imul
aaa
xchg
cwtl
add
icebp
jbe
jle
lock
mov
pop
mov
push
clc
jb
pop
int
nop
arpl
std
fidivrs
and
push
es
es
in
cmp
mov
push
jb
in
pop
jns
shl
mov
movsl
mov
lret
addb
jp
and
testl
push
or
daa
mov
mov
data16
lods
pop
popa
jne
aad
addl
pop
pop
loopne
or
sub
jne
mov
cmpsl
neg
dec
into
xchg
call
in
mov
push
mov
dec
adc
inc
popaw
je
cwtl
dec
int3
jne
mov
lahf
test
xlat
fbld
pushf
jl
push
aas
mov
mov
and
mov
call
sub
ret
scas
stos
loop
imul
pop
adc
mov
in
or
sbb
xchg
js
hlt
adc
cmp
xchg
xor
pop
clc
scas
cmp
sub
adc
fisttps
dec
jnp
pop
ljmp
xor
jo
nop
push
aas
xor
inc
mov
or
clc
push
add
push
cmpsl
cmp
sub
mov
bound
enter
adc
ret
daa
repz
enter
scas
aas
rcll
cli
mov
adc
sub
mov
or
aad
js
std
loop
shrb
cmp
sbb
cmp
or
ss
add
jg
inc
and
mov
in
cmp
js
mov
jmp
daa
mov
jmp
jp
int3
add
out
movsb
std
add
xor
sbb
mov
jecxz
cmpsl
pop
xlat
add
push
push
popa
aas
into
mov
test
xchg
ficomps
sahf
xchg
lea
and
mov
negl
int3
aaa
jge
mov
sub
shlb
jg
jns
pop
add
push
push
mov
and
cmp
adc
mov
pushf
out
push
jmp
dec
add
pusha
out
pop
sub
pushl
pop
jb
loop
lret
lret
stos
das
dec
and
mov
out
fsubl
cmp
mov
jp
cmpsb
stos
pushf
cwtl
repnz
cwtl
lods
and
js
and
mov
aaa
sub
sub
fistps
xor
outsl
dec
call
lret
jns
push
sahf
dec
jbe
mov
xchg
push
adc
jp
scas
push
push
inc
cmp
jge
enter
leave
jo
push
pop
mov
xchg
or
jo
cs
mov
addb
pop
aad
fbld
xor
repz
lret
sub
dec
xlat
insl
fnstsw
inc
push
pop
fwait
mov
fmuls
jns
xor
mov
rcll
cs
aam
mov
push
out
dec
jecxz
add
xor
loope
cmp
dec
outsb
and
pop
sub
jo
pop
sub
sbb
push
loopne
cmc
es
imul
jo
adc
stos
xchg
xchg
xchg
fistpll
cmp
mov
adc
cs
sbb
mov
jb
dec
call
add
jge
sbb
fcompl
mov
sbb
or
mull
out
test
outsl
inc
mov
mov
push
jno
cld
stos
and
and
punpcklbw
psubusb
addl
push
iret
xchg
dec
adc
ljmp
add
test
outsl
xlat
fldt
cmp
clc
pop
and
and
mov
xor
loope
mov
and
addr16
add
sub
jp
outsb
sbb
mov
adc
inc
sbb
push
jg
mov
mov
in
ja
pop
repnz
cwtl
fsubrs
fisttpll
or
and
add
lahf
ss
les
mov
xchg
mov
leave
sbbl
hlt
or
fwait
add
iret
xor
add
sub
jp
inc
add
nop
dec
adc
jb
xor
int3
movsb
notl
adc
jp
inc
mov
jecxz
and
ret
jle
jl
push
inc
jae
idivl
pop
leave
xor
pop
outsl
push
divl
push
sbb
mov
sbb
push
popl
xor
loope
inc
shl
movsl
pusha
xchg
sbb
mov
xor
in
fwait
and
sbb
jge
and
in
fcomip
or
popf
push
daa
xchg
push
sahf
cmp
sub
push
cs
mov
push
shll
repnz
clc
mov
sti
or
adc
test
scas
orl
jo
int
inc
jecxz
ja
jge
jl
inc
cltd
add
xchg
mov
mov
cmp
loopne
testl
lock
in
movb
cli
inc
sarl
or
or
cli
hlt
mov
pop
push
inc
popf
mov
xlat
inc
lahf
mov
enter
sub
push
stos
test
ja
and
push
push
or
imul
cli
lcall
cmp
test
sahf
mov
sbb
sbbb
lret
fcomps
fisttps
arpl
daa
ret
ror
inc
cld
into
mov
hlt
mov
adc
daa
add
sti
in
pushf
in
push
mov
dec
addb
add
lret
les
push
insb
lods
out
mov
outsb
adc
lret
fistpll
aam
or
inc
jae
sti
stos
stos
rorl
insb
movsb
mov
mov
mov
add
mov
dec
mov
dec
jae
add
inc
and
pop
mov
js
inc
call
test
in
sub
and
mov
sub
xchg
adc
shrb
out
leave
mov
jb
cmp
xchg
mov
mov
pop
inc
sub
and
add
inc
lahf
pop
or
popf
rcrb
adc
popa
mov
jge
mov
adc
push
addl
lds
xchg
sub
push
or
push
cmc
mov
add
sub
jmp
or
hlt
push
loope
outsl
out
test
sarb
inc
add
sub
pop
adc
mov
cmp
mov
jl
xchg
fistps
pop
inc
fs
or
mov
sub
dec
mov
mov
loope
lock
enter
cltd
push
xor
xlat
jmp
add
notl
xor
pop
out
sbb
daa
outsl
andb
xchg
mov
cmp
out
and
dec
dec
xchg
std
flds
xchg
mov
jnp
mov
jne
mov
cmp
test
ret
push
sbb
pop
clc
xchg
loope
mov
push
ret
dec
jl
fidivs
inc
mov
mov
mov
cli
and
mov
fiaddl
mov
sbb
mov
add
cmp
das
xchg
aam
fs
mov
xchg
shlb
jae
jnp
movsl
jae
inc
scas
or
ja
add
addb
pop
imul
subb
dec
xor
jnp
jo
xchg
movsb
xor
cmc
cvtdq2ps
and
xor
lcall
ret
lods
mov
call
scas
ss
xchg
inc
adc
jns
jo
ljmp
jbe
cs
sub
xor
cmp
xchg
lahf
cmpsb
lahf
fadd
jns
orl
loope
jecxz
negb
lods
orb
outsl
xor
inc
inc
mov
lock
je
shrl
mov
inc
rcrl
cmp
jp
pop
add
lods
pop
pushf
mov
out
add
ret
inc
pop
pushf
test
pushf
jne
decl
xchg
cli
enter
sbbb
mov
lret
push
mov
ss
adc
test
adc
out
aam
mov
mov
test
or
iret
aam
inc
dec
aad
xor
test
rep
xor
mov
xor
lret
mov
mov
ret
jl
sub
and
and
out
dec
fs
rcl
mov
aad
test
or
cs
mov
adc
or
jne
pop
lock
adc
push
in
aad
test
lock
mov
mov
imul
stos
mov
sub
test
shll
arpl
xor
cmpsl
cmpsb
in
pop
xlat
stc
jae
push
int
cmp
lock
imul
cli
mov
rcrl
cmc
aam
mov
and
pop
cmp
je
mul
pop
leave
incl
out
fcoms
xor
push
xor
sbb
xor
outsb
adc
cmp
mov
lcall
jo
fwait
xchg
lret
enter
or
das
pop
mov
in
add
negl
in
push
sub
lahf
daa
bound
test
aam
dec
popa
push
rcl
scas
mov
push
jae
push
rclb
sbb
sub
imul
mov
mov
shlb
adc
jae
je
bound
ds
pop
mov
or
xor
cmp
mov
jnp
popf
xchg
adc
xor
testb
xchg
aas
inc
pop
pushf
out
push
cmc
push
jns
cmp
jb
jne
fwait
loope
pop
arpl
cmp
test
jns
adc
inc
sbb
cmc
fidivrs
nop
lock
movsb
imull
add
mov
test
push
shrl
repnz
mov
adc
or
fisubrl
das
mov
shr
imul
jl
jne
repz
fs
test
shrl
sbb
add
pop
pop
dec
pop
nop
push
shr
jmp
sub
add
aaa
sub
cmc
ret
mov
ret
aaa
int3
sub
dec
push
rcrb
test
icebp
pop
enter
pop
mov
xor
loopne
stc
lods
xchg
insl
cmp
jecxz
xor
aam
xor
shr
dec
loopne
ds
aas
pop
fmuls
sar
cmp
sub
popa
rcl
aas
or
jns
hlt
sub
or
add
lcall
vcomiss
jnp
in
jge
loopne
push
movsb
dec
sub
orb
test
or
ret
lret
adc
inc
iret
sbb
pop
cmpsb
test
aam
sbb
fisubrs
sbbb
or
inc
xor
add
dec
jb
push
push
aam
sbb
aas
movb
jecxz
jns
xchg
mov
addb
pushw
mov
mov
fwait
ss
rolb
and
dec
or
pop
lea
push
mov
mov
cli
mov
aaa
mov
push
stos
cmpsl
arpl
fcmovb
and
push
addr16
jae
cmp
mov
ror
inc
data16
xlat
test
ljmp
or
jbe
add
repz
adc
out
icebp
adc
pop
pusha
cmp
jns
mov
xchg
lock
cmc
nop
jo
or
pop
pop
hlt
mov
xlat
xlat
pop
ficoml
mov
leave
cmp
loope
daa
sub
mov
movsb
pop
or
mov
or
lea
lds
xor
cmpsl
push
mov
cwtl
and
in
in
popa
or
adc
dec
mov
inc
dec
push
into
mov
repnz
in
mov
push
cmpl
movsl
or
cmpsb
pop
mov
or
fwait
cmp
sbb
dec
sub
push
test
xchg
lods
add
inc
andb
mov
les
inc
mov
xor
or
cmc
sbb
add
les
aas
push
mov
les
pop
adc
and
pop
daa
mov
ljmp
dec
push
jae
sbb
and
adc
push
in
andl
adc
mov
or
adc
and
das
mov
mov
cmpsb
sbb
testb
jmp
sub
cmpsl
lods
mov
ja
jg
mov
bound
add
lock
les
jae
or
cmp
enter
sti
mov
in
dec
faddl
gs
aam
imul
inc
das
std
lcall
loop
mov
pop
fcomps
xchg
daa
lds
dec
lcall
out
mov
int
xor
pop
fists
inc
xchg
or
mov
sub
push
fiaddl
cli
add
mov
pop
push
add
and
adc
in
sub
inc
test
repz
std
vandps
pop
inc
push
or
insl
nop
pop
push
dec
test
jae
mov
sub
mov
ficoms
jno,pn
hlt
jb
mov
cltd
and
dec
add
sbb
push
jecxz
pop
sbb
add
mov
arpl
movsb
or
mov
and
es
repnz
in
outsl
fdivrp
ljmp
mov
adc
lcall
outsb
aaa
rol
pop
out
outsb
lods
rcll
int
das
clc
add
sub
aaa
fwait
jb
jnp
adc
or
fidivl
push
mov
mov
inc
shll
or
cmp
nop
mov
out
je
popf
or
scas
pop
sub
int3
lret
sahf
inc
shlb
sti
in
testl
ds
movsl
pop
leave
in
mov
out
and
push
repz
ret
pop
icebp
aad
push
xchg
inc
and
mov
xor
bnd
adc
fisubs
in
repz
or
fstps
movsl
test
or
pusha
mov
jbe
jbe
rcll
ficoms
pop
mov
out
cltd
mov
xlat
sbb
iret
nop
movsb
pop
adc
pop
aam
dec
dec
ret
iret
jg
shll
xchg
aas
sub
inc
pop
mov
adc
adc
cmc
ds
jne
testl
int
ret
inc
lea
imul
mov
jne
fidivl
push
ret
xchg
lea
enter
addr16
or
outsl
cltd
pop
jmp
lods
daa
cs
mov
inc
push
ret
andb
sbb
les
jmp
jns
sub
nopl
into
jne
bound
jns
push
xchg
and
ss
jle,pn
out
in
pop
das
mov
jne
sbb
pop
push
ror
test
and
mov
call
cmp
arpl
xor
mov
mov
addr16
ret
stos
xchg
push
mov
orl
mov
and
mov
mov
sub
dec
mov
or
push
pop
jmp
push
sub
or
pop
or
pop
enter
mov
aad
out
std
mov
hlt
lock
pop
cwtl
jb
mov
les
xchg
mov
mov
adc
add
js
xchg
sbb
xchg
inc
cmp
adc
or
mov
fsubl
mov
or
fcomps
sub
push
pop
xor
mov
sti
or
insb
sti
xchg
pop
xchg
jno
inc
je
dec
lahf
mov
test
push
sub
ja
test
push
sbb
int3
imul
aad
popf
popl
in
aaa
insb
cmpsl
push
fcom
arpl
cmp
cmp
orb
int
mov
aaa
cmp
es
push
and
push
shrl
ds
sub
mov
mov
negb
inc
js
pop
int
pop
movsb
fs
pop
mov
sub
std
xor
push
pushf
inc
das
aad
fst
nop
mov
inc
dec
stc
adc
notl
push
clc
mov
shr
pusha
mov
pop
xchg
xchg
mov
xor
lock
lcall
xchg
mov
push
mov
pop
add
cmp
fldl
in
call
lods
jno
dec
xor
arpl
and
pusha
imul
lods
mov
pop
pop
push
fwait
xor
and
cmp
lea
mov
inc
clc
iret
fildll
adcl
and
insb
mov
xor
dec
and
or
test
dec
mov
fildl
pusha
xchg
mov
cltd
mov
xor
fadds
mov
or
mov
mov
fisttpl
cmc
push
add
jle
out
push
or
and
cwtl
jns
pop
sub
mov
sbb
mov
clc
test
adc
enter
mov
into
sub
ret
outsl
sub
bound
inc
sar
int
mov
mov
jecxz
pop
cwtl
clc
into
nop
lods
in
xchg
roll
test
and
les
jne
cld
data16
adc
mov
int
std
movsl
push
adc
lods
sub
xor
sbb
insb
leave
fildl
icebp
push
aaa
mov
jno
fwait
jge
pop
mov
bound
inc
xchg
lret
test
dec
fdivr
or
adc
inc
into
popf
mov
xchg
and
rclb
ret
push
gs
dec
fists
inc
movsb
or
pushf
pop
cmpsb
dec
or
aas
aaa
dec
ljmp
cld
push
pop
fdivs
add
movb
xchg
mov
sbbb
imul
aad
or
xor
cwtl
enter
xchg
ret
sbb
push
ret
pusha
pop
sub
repz
out
cmp
cld
jmp
es
int
lods
xor
jmp
dec
test
int3
je
cmpxchg
icebp
and
mov
out
out
mov
jle
push
iret
movsb
xchg
cmpsb
bound
cmp
pop
js
mov
cmp
sbb
xchg
jg
mov
or
js
test
inc
cltd
push
mov
pop
jp
aaa
loopne
or
pop
push
shr
loopne
mov
jae
sbb
movsl
add
pop
push
jmp
scas
cs
or
test
loopne
out
dec
dec
in
lods
pushf
cmp
mov
pusha
sbb
sbbl
pop
or
mov
pop
fcom
inc
fs
cmp
ss
mov
rorb
mov
je
push
and
jp
xlat
mov
int3
and
inc
cwtl
sub
mov
in
xchg
inc
popf
jb
bound
nop
test
pop
jb
add
aad
in
push
dec
ret
movsl
sub
cmp
pop
xchg
inc
pop
pop
push
test
stc
aaa
arpl
ret
xchg
mov
jg
js
dec
dec
jbe
xchg
xchg
or
dec
enter
mov
scas
xchg
mov
mov
push
sub
jg
and
addl
lret
lock
ret
fdivrl
sub
xor
add
popa
jp
xchg
pop
in
push
movsl
in
fists
divb
cli
xchg
push
iret
inc
adc
cmp
push
jae
fiadds
mov
ja
xchg
inc
lods
add
mov
imul
cs
pop
in
out
cmp
rcrb
xor
gs
mov
xchg
mov
add
or
test
xchg
int3
adc
sub
jecxz
arpl
fwait
xor
ja
enter
and
movsl
loope
gs
jnp
insl
sbb
sbb
hlt
mov
xchg
xor
jns
push
das
and
push
iret
shr
inc
ja
inc
push
ret
mov
imul
cwtl
xchg
jmp
imul
sarl
imul
enter
pop
adc
stos
pop
xor
fcoms
jl
dec
sub
das
xchg
test
pop
dec
pusha
mov
inc
sub
mov
inc
stos
jg
jae
rolb
jl
pop
ljmp
xor
enter
sub
dec
jns
dec
test
lret
outsb
imul
pushf
xchg
adc
pop
or
movsb
cmp
jmp
cs
push
jmp
add
scas
jmp
popf
or
sahf
popa
shll
fsubl
and
pop
lods
cltd
loope
push
jno
or
push
xor
fistpll
push
inc
lea
pop
sar
test
or
sub
lret
movsl
negl
scas
movsb
ss
out
sub
dec
inc
test
cmp
xor
mov
cmp
cmp
out
or
pop
jb
test
div
shl
pop
or
pop
mov
outsl
xchg
add
add
movsb
dec
xchg
mov
or
ljmp
outsl
ja
xchg
lods
jmp
jne
mov
mov
and
loop
pop
out
lods
int3
dec
pusha
jne
es
inc
std
pop
xchg
int3
fmull
cmc
push
mov
lock
mov
push
push
out
dec
cmp
fidivrs
mov
xchg
out
xor
dec
mov
adc
cmp
repz
add
inc
aad
xchg
xor
push
lock
addb
pop
xchg
stos
mov
dec
daa
xchg
test
xor
mov
cli
mov
or
xchg
in
ja
inc
mov
sahf
out
inc
repnz
xchg
clc
push
inc
add
sub
loope
mov
fistps
fxam
mov
loop
inc
insl
rcrb
push
in
dec
jge
or
lahf
xor
shrb
mov
cmp
leave
loop
fistl
xlat
cmp
and
mov
movsl
push
mov
leave
std
insb
mov
lods
and
iret
imul
in
push
xchg
out
stos
jb
pop
nop
adcb
movsb
pop
aaa
push
int
scas
xchg
fisubrs
mov
scas
xchg
pop
subb
and
sbb
insl
dec
mov
js
and
ret
pop
push
repz
xchg
push
or
lock
sub
test
fwait
jne
xor
sar
xchg
rorl
or
pop
popa
push
lock
or
lahf
inc
cmc
add
push
inc
and
adc
push
mov
cmpl
adc
add
mov
xlat
out
mov
add
mov
adc
jb
dec
es
into
shll
or
push
sub
add
ror
rcl
ljmp
clc
pop
rcrl
cmp
mov
dec
mov
lds
mov
adc
add
fwait
insb
jp
lods
aas
enter
les
scas
sub
in
pop
and
add
fwait
gs
or
fdiv
clc
call
mov
jae
mov
jne
pop
mov
out
call
mov
cli
sbb
xchg
add
sti
pop
cmp
adc
xor
mov
and
push
mov
dec
jnp
pop
dec
stc
and
lds
inc
call
or
lcall
mov
mov
arpl
ret
or
stos
jmp
out
jo
lea
in
and
stos
mov
jl
cmp
lahf
test
mov
dec
fimull
jecxz
outsb
std
push
js
lcall
push
scas
xor
negl
mov
push
inc
dec
mov
in
push
adc
or
jne
inc
insb
pop
xor
or
sub
pop
xchg
jge
ret
shl
sub
popf
in
adc
jmp
pop
mov
add
shrl
and
sbb
cmp
jg
pop
adc
push
or
ret
aaa
sub
test
jecxz
loopne
xchg
inc
loope
cltd
rcll
es
imul
lods
in
cmpsl
cmc
xchg
imul
in
add
cmpsb
nop
stos
pop
inc
aam
mov
xor
clc
push
repnz
xchg
pusha
test
pop
cmpsl
sarb
push
inc
repz
sub
cmp
aas
sarb
or
adc
mov
cmpsb
stc
fisttps
inc
adc
outsl
repz
ss
rcrb
mov
dec
popa
sub
out
imul
lods
push
sub
mov
sbb
aam
mov
mov
in
add
cmpsl
jp
sub
insb
xlat
pop
ja
outsb
insb
mov
dec
xchg
pop
pop
sbb
add
xor
ljmp
jnp
popa
andl
cmpl
or
cmpsb
in
jb
mov
inc
incl
xor
cmp
push
add
add
pop
xchg
and
xor
aad
push
hlt
push
sti
mov
popf
int3
in
pop
jp
xchg
jmp
insl
int3
imul
pop
test
ret
and
inc
dec
movsl
shlb
popf
pop
pusha
ficomps
stos
js
cmpsb
push
adc
push
push
jg
mov
inc
mov
or
lahf
jne
mov
xchg
adc
inc
ror
mov
adc
in
popl
xchg
push
shrl
or
jnp
cmpsl
fidivs
push
mov
mov
aam
mov
dec
xchg
loopne
sub
sbb
inc
xchg
jmp
sbb
adc
pushf
sahf
jae
jns
pushf
test
push
mov
rcr
sbb
fcoms
xchg
divb
jle
ret
pusha
mov
flds
push
inc
xchg
xor
push
mov
inc
mov
xor
insb
cmp
mov
inc
mov
xchg
xchg
fists
fsubl
dec
jnp
into
mov
jecxz
mov
lock
and
push
dec
fldenv
pop
out
shrl
or
mov
sbb
fprem
or
shrl
shl
mov
lret
icebp
test
mov
xchg
dec
int3
push
mov
lcall
xchg
pop
and
mov
jno
fcomi
adc
cs
cmpsl
loop
jg
sub
pop
clc
push
jae
jo
popf
push
xor
sbbl
dec
fdivs
xor
fldl
dec
add
iret
pop
push
jl
loop
out
jg
push
call
ja
cmpsb
cs
cmp
mov
push
xchg
fsub
pop
sbb
stos
add
daa
push
decl
pop
icebp
jmp
lock
and
andl
iret
fcmovnb
rorb
bound
aad
test
mov
shll
popa
mov
add
fstpl
push
pop
lock
jns
icebp
lods
adc
add
jb
sar
out
push
sbb
push
inc
jmp
sbb
and
dec
jge
push
sbb
dec
cmp
inc
int3
adc
push
cmp
mov
in
cld
sbb
adc
xor
cmpl
mov
aas
popa
or
sbb
xor
dec
mov
mov
pop
cmp
outsl
enter
popf
mov
mov
mov
es
pusha
add
shrb
mov
das
push
sub
xchg
lahf
into
xchg
pop
push
push
bound
cmp
dec
nop
shll
or
inc
jl
add
xor
mov
or
and
fisttpll
and
and
or
push
jno
or
out
sub
cs
xor
dec
fsubrp
sbb
inc
xchg
or
mov
cmc
push
push
andb
push
and
push
cmp
test
jmp
dec
fs
bound
fdivrs
int3
mov
gs
leave
loop
push
mov
int3
mov
cmp
outsb
push
in
movsl
fs
xchg
leave
cmpsb
cmp
pop
fmulp
dec
outsb
mov
outsb
push
mov
jbe
jne
xchg
xchg
add
xor
push
or
out
dec
mov
ret
mov
xchg
movsl
ret
out
jmp
cmp
lret
inc
or
idivb
js
bound
rcl
test
xor
fidivs
push
mov
sub
inc
icebp
or
icebp
bound
leave
js
sbb
jbe
nop
lahf
mov
mov
adc
out
push
dec
rclb
inc
mov
stos
mov
popa
jbe
lahf
ljmp
inc
xor
testb
hlt
push
jae
mov
xor
aaa
cmp
pop
and
hlt
dec
jne
mov
xchg
cmp
jle
push
pop
lcall
dec
mov
adc
mov
imul
stos
lret
sbb
mov
imul
push
cld
pop
pop
divb
cmp
out
xor
enter
gs
sub
ja
sbb
mov
sbb
outsb
inc
lahf
movsl
or
push
pop
push
lods
add
mov
sub
or
dec
mov
pop
iret
mov
repz
sbb
cmp
popa
sarb
xor
xor
mov
rorl
jp
push
xchg
or
sbb
bound
adc
enter
and
icebp
mov
out
sbb
adc
insb
cld
xchg
pavgw
cs
loope
aad
dec
cmp
inc
adc
push
xchg
mov
add
adc
imul
jge
out
stc
loope
ljmp
out
pop
cmc
xlat
xor
imul
jno
int
cmpsl
clc
test
ftst
mov
sbb
dec
inc
push
adc
jmp
sbb
lahf
adc
mov
fucomi
loop
imul
push
jg
int3
faddl
cmp
inc
imul
mov
mov
mov
rcrb
inc
out
sbb
mov
xchg
fistl
mov
sub
ret
cwtl
jl
mov
cld
pop
out
pop
jno
adc
push
js
out
lret
mov
enter
fdivrp
rorb
dec
mov
mov
test
jo
mov
test
jle
sbb
test
mov
xchg
cmp
push
push
inc
outsb
fsubl
mov
addl
std
xor
ficompl
mov
mov
xchg
stc
lods
xchg
sub
push
loopne
rol
shrb
cmp
adc
repnz
fisttpll
push
inc
out
mov
inc
pusha
stos
outsl
flds
sub
mov
cs
es
mov
mov
out
mov
mov
lahf
ja
mov
mov
test
push
push
test
imul
inc
icebp
xchg
std
leave
mov
push
jne
dec
mov
shl
lods
xor
scas
repz
dec
add
or
into
and
inc
jae
push
fildl
jbe
push
push
adc
cmc
ret
in
sti
scas
cmp
inc
into
pop
mov
sub
movsb
imul
movsb
cli
sub
cmp
mov
iret
into
or
clc
push
push
or
je
sub
repnz
pop
cmpb
xor
into
lea
xorb
insb
mov
fistpll
lret
jle
sbb
xor
dec
lahf
repnz
mov
stos
ss
popf
in
loopne
sbb
loop
ss
inc
jge
inc
adc
or
data16
xchg
lea
cmp
in
mov
mov
sbb
push
mov
aad
sub
in
sub
mov
adc
lahf
or
out
rcll
xor
cs
movsb
out
js
notb
push
dec
daa
out
fidivs
sub
call
shr
pushf
pop
sub
adc
fidivrl
mov
pop
mov
sub
pop
lds
or
addb
lret
ficoms
push
nop
mov
push
jno
cmp
in
jns
rcr
xor
and
xor
and
int
jnp
push
xorl
movsb
xchg
stos
in
bound
push
rclb
push
ja
cld
out
push
mov
push
lret
cs
jne
and
sub
or
or
test
sub
aaa
imul
jne
enter
mov
shlb
and
adc
loop
mov
or
fisubrs
stos
mov
adc
mov
jp
add
addr16
sbb
jecxz
mov
xor
in
out
stos
imul
je
fwait
sbb
sub
pop
push
sub
cld
pop
pop
in
or
lods
sub
stc
bound
jecxz
cmp
mov
mov
cmp
out
push
rorl
xchg
rorb
fs
in
sbb
or
or
dec
arpl
das
push
jle
test
cltd
jb
jae
jle
mov
cmpsb
test
pop
mov
mov
inc
push
outsl
movsl
int
jge
enter
sub
and
stos
out
icebp
lds
sti
lods
add
in
pop
rolb
cmp
dec
cli
negl
xchg
ret
jb
mov
in
xchg
imul
out
add
nop
or
shrl
push
pop
mov
jl
cld
sbb
mov
pop
fldcw
cmp
std
xor
mov
insb
add
das
lcall
lea
fstpt
movsl
or
pop
das
pop
pop
inc
jl
sbb
jg
mov
test
add
or
shlb
push
popw
mov
aas
lods
xchg
push
inc
in
aad
xchg
jmp
xchg
aaa
sbb
xlat
sbb
adc
mov
insl
imul
jbe
xor
stos
xchg
icebp
adc
mov
jg
jmp
ds
stos
adc
sub
mov
mov
add
cmpsb
mov
jmp
and
test
int3
pusha
aam
lods
and
test
insb
sbb
jl
jae
ret
loope
dec
mov
jl
xchg
xor
fiadds
les
xor
xlat
inc
inc
mov
pop
sarb
outsb
fdivrp
out
mov
test
push
movsl
fmul
cli
icebp
or
adc
inc
les
mov
aad
mov
inc
test
int3
mov
adc
mov
cmp
fadds
dec
cmp
das
lock
outsl
mov
push
push
test
test
push
sub
jne
int3
xchg
int3
adc
iret
lret
cmp
push
mov
into
fisubrs
push
aad
nopl
xchg
dec
mov
mov
cmc
cld
push
adc
lea
popf
xor
jo
sbb
push
sbb
jg
dec
and
outsb
dec
pop
mull
pop
mov
lea
add
sub
push
sti
js
xchg
sahf
push
xchg
lret
loopne
imul
jecxz
imul
sbb
add
in
jnp
inc
call
push
inc
cmc
xchg
ret
pop
jg
push
sar
xor
xchg
push
pop
pop
adc
sar
jno
push
mov
ja
lods
test
push
fildll
xor
fsub
dec
jecxz
sbb
mov
cvtps2pi
jno
data16
sub
pushf
lea
inc
imul
jmp
pop
jp
cwtl
cltd
add
fmul
mov
fcomps
hlt
lahf
mov
add
ja
jnp
and
xchg
out
test
push
or
or
mov
push
xchg
adc
ds
xchg
jb
ds
outsl
stos
xchg
fs
or
xlat
pop
shlb
enter
jno
clc
mov
ds
pop
and
insb
xchg
dec
dec
pop
inc
inc
push
fwait
cli
repnz
clc
enter
xchg
shlb
and
cld
dec
movsl
es
ja,pt
adc
mov
outsl
lock
sbb
cmp
lret
adc
xchg
sub
jo
mov
popa
arpl
lcall
pop
mov
adc
mov
add
sub
cli
xlat
sbb
sub
and
movsl
mov
inc
enter
lahf
arpl
xchg
jl
shl
adcl
inc
push
out
cmp
push
cmp
arpl
mov
js
mov
and
scas
imul
push
cmp
mov
cltd
loope
insl
jno
add
push
sar
dec
add
pop
dec
push
rcl
test
mov
mov
lahf
pop
mov
into
test
movl
inc
int3
push
stc
stos
mov
int3
lret
or
jb
xchg
xchg
push
xchg
and
sbb
cmp
dec
sub
pop
inc
ffree
or
repz
dec
lcall
mov
nop
dec
fs
jecxz
pop
into
lods
iret
lock
sar
push
ja
lea
aas
jmp
test
iret
sbb
dec
cmp
scas
iret
xor
out
push
dec
jmp
pop
xor
outsb
stos
xchg
aas
xchg
mov
loope
in
clc
test
xor
pop
jae
ja
or
lret
jmp
or
leave
pop
bound
mull
stos
lea
ficoml
adc
xlat
xor
test
pushf
push
jo
and
or
push
sbb
insb
stos
pushf
cmpsb
cmp
movsl
push
fdivl
lea
push
push
bound
scas
mov
imul
popa
push
xchg
shlb
jmp
imul
out
sbb
lret
lea
in
pop
pop
cmp
pop
pop
std
sub
dec
push
in
adc
into
loope
mov
push
les
lods
xor
pop
ljmp
cmpsl
sbb
int3
int
pop
int3
or
mov
mov
push
fcmovne
mov
in
xor
adc
aad
mov
jnp
ret
mov
xchg
iret
or
or
arpl
mov
or
sbb
sbb
jl
ss
jg
cmpsb
repz
mov
iret
xlat
call
insb
inc
inc
and
mov
pushf
fstp
scas
in
loopne
enter
or
adc
scas
pop
fiadds
imul
cmp
or
push
mov
ljmp
mov
int
shll
mov
into
dec
aas
mov
icebp
sbb
out
and
mov
daa
test
mov
int3
push
or
jnp
cld
inc
sub
imul
nop
cwtl
sti
icebp
je
or
xor
xchg
ljmp
sarb
loopne
push
pop
push
adc
daa
or
jl
lret
or
outsb
pushf
jno
sbb
shr
mov
push
rcll
std
aad
mov
test
dec
pop
out
mov
ret
imul
inc
xor
add
cmp
sub
gs
stos
stc
fstpl
mov
add
xchg
jnp
pop
fiaddl
add
inc
sbb
add
or
imul
inc
je
js
rorb
aas
fnsave
ja
pop
enter
shl
fnstsw
out
cmp
inc
sub
adc
les
jg
xor
fisttpl
inc
cli
insb
jcxz
push
shll
clc
fbld
mov
add
cmp
xchg
loope
out
mov
dec
inc
mov
stc
cli
jecxz
in
das
mov
add
lods
push
jmp
and
push
imul
fldenv
in
inc
adc
xchg
ljmp
jmp
push
pop
jle
adc
push
jge
test
js
xor
xor
fstpt
fldl
sti
mov
cltd
leave
mov
xor
sbb
repnz
push
inc
mov
into
xchg
inc
shl
mov
push
mov
push
and
mov
mov
dec
insb
jbe
xchg
xorb
addl
pop
inc
in
push
int3
xor
inc
imul
ljmp
xor
test
insl
push
shll
sub
out
clc
mov
push
sub
dec
aad
mov
pop
shlb
ret
test
xor
add
mov
outsb
inc
sbb
mov
pop
inc
nop
mov
mov
std
and
ret
jl
mov
clc
mov
loopne
mov
mov
loope
or
repz
sub
pop
adc
mov
adc
call
dec
or
loop
outsl
pop
dec
or
sbb
pop
fs
popa
xchg
punpckhdq
mov
bound
mov
cli
fcmovnu
int
fsubr
dec
mov
imul
push
dec
fcoml
mov
sub
les
inc
push
jb
push
rcrl
into
les
mov
pop
mov
add
push
xor
adc
push
lahf
jae
call
pop
mov
and
clc
lock
jo
mov
adcb
lds
mov
scas
scas
xchg
pop
or
ss
inc
xor
jno
xlat
imul
or
js
push
jle
aam
jl
fimuls
in
mov
dec
in
fsubrs
repz
add
repz
cmp
sbb
xchg
push
lcall
stos
jno
repz
andb
xchg
sbb
or
jae
icebp
or
test
pcmpeqd
aad
mov
push
repnz
sub
cmpsb
je
icebp
or
xlat
repz
pop
popf
cmp
fdivrl
and
sub
xlat
mov
popaw
sbb
enter
ret
push
imul
jp
inc
xor
mov
fnsave
jmp
in
xor
call
add
jge
insl
inc
jb
add
popa
out
cli
xchg
popf
push
or
into
lds
adcb
sbb
addr16
inc
inc
pop
js
push
cmp
add
cmpsb
int
aad
dec
xor
pop
adc
and
adc
jbe
daa
dec
or
mov
rclb
movl
and
insl
jns
and
add
dec
movsl
roll
dec
cs
xorb
sbb
cmp
sub
push
cmc
push
addb
ss
add
stos
pop
xor
orl
xchg
lret
fldcw
insl
sarb
cs
fstpl
aas
or
jne
push
in
dec
cmp
mov
ss
mov
inc
test
sub
inc
fcompl
fsqrt
lahf
sub
in
mov
rcll
push
cmp
iret
jbe
mov
out
lea
jb
pop
jnp
int
lcall
adcb
je
jmp
je
pop
pop
fmuls
xchg
xor
sub
sub
ss
adc
jae
jmp
mov
test
jo,pt
add
adc
mov
cmp
scas
mov
sbbl
decb
aas
jp
inc
stos
jecxz
inc
jg
call
ds
pushf
jns
push
js
sar
sub
push
fwait
mov
mov
pop
addr16
mov
add
popa
insl
ss
pop
in
push
cmc
fmull
xorl
pop
shr
jl
in
das
xchg
outsl
or
cmpsl
inc
adc
jns
rolb
out
push
add
bound
push
push
imul
xchg
cwtl
dec
mov
adc
syscall
lea
mov
and
popf
ja
mov
in
dec
adc
jecxz
in
mov
lret
clc
out
repz
push
xlat
push
decl
hlt
jp
xchg
pop
mov
rep
loop
push
cmovb
sbb
jp
adc
xor
rclb
ds
fistpll
and
sub
xchg
scas
cmp
sub
and
popa
lret
mov
cli
mov
push
test
loopne
inc
inc
cld
push
or
or
or
pop
data16
jno
inc
aad
sub
sahf
mov
test
test
jo
enter
and
lahf
jno
mov
jg
mov
iret
adc
leave
stc
push
pop
add
pop
arpl
mov
scas
xor
xlat
inc
pop
fdivrl
pop
stc
pop
pop
hlt
pop
jb
xchg
out
jo
sarb
out
test
dec
lret
push
jnp
mov
sbb
out
movb
pop
inc
aas
jae
or
lods
sbb
sub
loope
shll
imul
mov
sbb
clc
sti
mov
loope
btr
sti
das
loopne
adc
in
xor
lods
sub
outsl
testl
fsubs
mov
dec
mov
jge
inc
sub
test
inc
jg
inc
sub
ficompl
sbb
mov
mov
jns
ficomps
daa
popa
inc
xchg
or
popf
lret
int3
or
aas
mov
adc
loopne
popa
lods
lahf
rorl
pop
pop
mov
es
decb
nop
in
or
adc
es
inc
sub
aas
fmull
cli
out
cmp
push
sbb
ja
adcb
leavew
jmp
les
mov
xor
int3
xor
lcall
xchg
inc
stos
push
fistpll
xor
jmp
push
and
shrl
lret
cltd
and
sub
das
fistpl
or
jecxz
iret
mov
gs
and
dec
mov
in
mov
pop
std
xor
outsl
cwtl
test
and
data16
lods
insl
mov
and
shlb
adc
lods
mov
mov
das
outsl
test
les
loope
add
jp
clc
xor
lods
push
cld
movsl
repz
sbb
jb
in
and
dec
add
pop
repnz
inc
sbb
stos
inc
movsl
filds
push
fisubrs
xchg
hlt
test
cmpb
adc
xchg
bnd
cmpsb
das
ds
ljmp
imul
xchg
pusha
cmpsl
adc
xor
stc
xor
mov
and
pop
out
aas
fs
enter
mov
jmp
js
in
and
aam
lods
adc
sub
cltd
push
cmp
psubq
mov
imul
mov
lea
addr16
mov
aad
or
dec
in
stos
push
pop
push
jne
insl
inc
mov
sbb
cmpsb
in
ja
fcmovbe
adc
xor
and
test
outsb
or
repnz
jg
xor
cmpsb
mov
push
repnz
stos
shlb
push
dec
xchg
sbb
ja
aas
test
sti
ljmp
lods
pop
or
cmp
in
xchg
les
jno
cmp
or
dec
test
insb
sbb
push
shrb
scas
mov
imul
shll
sarl
dec
or
jae
xchg
inc
outsl
add
in
xchg
sbb
push
mov
loopne
mov
pop
or
rcrl
xchg
aad
test
pop
icebp
out
jecxz
add
pusha
lock
mov
aam
out
pcmpeqw
ja
pop
xor
jns
addb
lcall
fnstcw
sti
call
add
cmp
pop
or
jb
push
add
xor
fisubrl
jbe
cmp
push
or
pop
outsb
cmp
insl
cli
jl
lea
movsb
adc
cmpsl
mov
stos
imul
cmpsl
lock
fisttpl
cltd
pop
scas
push
mov
lea
xchg
pop
adc
adc
push
mov
fisttpl
sti
adc
push
clc
jmp
adc
sahf
out
jecxz
js
cmp
add
pusha
ffree
stos
repnz
loope
orb
movaps
xlat
or
sbb
jno
shlb
cwtl
inc
jnp
pop
filds
or
in
ficompl
xchg
cmp
add
mov
stos
sar
sbb
dec
imul
pop
add
mov
push
stos
andl
adc
out
mov
push
add
xchg
jg
mov
loopne
pop
mov
pop
loopne
push
xchg
sub
cld
jo
jbe
nop
xor
out
add
adc
pop
test
leave
imul
xchg
dec
push
inc
and
cltd
addr16
cwtl
and
and
ret
inc
cmp
xchg
cmc
xor
mov
ffreep
fildll
push
sbb
pop
sahf
dec
pop
sbb
sbb
add
sbbl
iret
push
jp
ret
pop
jge
dec
push
nop
cld
jmp
lods
push
and
and
and
test
jp
jle
dec
cmc
mov
out
sbb
fildll
sub
add
pop
dec
insl
ret
and
icebp
jo
jno
jecxz
or
lret
imul
imul
sub
mov
dec
sbb
push
sub
or
mov
sbb
jnp
add
lds
jmp
sbb
icebp
pop
sahf
xchg
jecxz
lods
shlb
push
jle
int
and
or
xor
inc
out
xchg
es
sbb
jbe
dec
adc
iret
pushf
scas
mov
std
sub
into
adc
popa
adc
sbbb
enter
inc
fistps
dec
jb
scas
mov
jmp
sbb
jnp
jle
mov
icebp
cli
scas
xchg
xchg
icebp
xchg
in
sbb
or
popa
insl
xor
ret
std
jmp
andl
dec
aas
daa
xchg
repz
dec
and
jbe
in
mov
cmpsb
test
shrb
js
jno
pop
sbb
scas
inc
in
dec
jg
add
and
or
sub
bswap
decl
lahf
dec
pop
jne
imul
jne
fwait
push
mov
xchg
fwait
hlt
adc
roll
push
loop
ss
and
adc
shll
ret
pushf
aas
sbb
in
jmp
addl
add
stos
outsl
cmp
data16
push
cvtps2pd
sti
into
cmp
or
jno
inc
mov
xchg
adc
mov
push
je
data16
shll
push
push
jle
mov
fs
repz
clc
jle
xor
and
mov
lods
mov
enter
jp
out
orb
repz
mov
pop
inc
ficoms
shrb
mov
popf
aaa
cmp
sbb
inc
xor
jb
xchg
imul
popa
cmpsb
jp
sbb
add
lods
enter
or
clc
daa
adc
pusha
mov
inc
imul
pop
andl
push
cmpsl
shl
mov
push
or
imul
stos
add
imul
iret
jge
aam
out
push
add
and
int3
test
fcmovnb
xor
mov
js
mov
or
xlat
fsubrs
sbb
jmp
imul
sahf
cli
test
lcall
mov
push
mov
add
js
out
data16
iret
icebp
mov
sbbb
and
test
ret
out
pop
xchg
ljmp
or
leave
add
lcall
or
pop
pop
jae
cmpsl
xchg
rcrl
dec
sbb
hlt
sub
mov
rorb
scas
cmp
call
shll
xchg
fstps
dec
mov
ss
sbb
rolb
les
mov
lods
mov
pop
mov
testl
out
push
pop
outsl
mov
dec
jle
push
sbb
or
popf
movsl
jns
test
mov
jb
clc
sub
pop
inc
hlt
adc
in
rorb
inc
add
aaa
enter
jge
sbb
push
ja
movaps
sub
cmp
sti
cmc
mov
test
inc
mov
fcmovnu
jb
idivl
mov
mov
fldt
movsb
icebp
jecxz
das
enter
push
sar
mov
sub
clc
sbb
jl
push
mov
cli
testl
or
rcrb
test
mov
or
dec
mov
jle
push
mov
imul
pop
stc
xor
mov
lods
sti
icebp
ficompl
push
adc
hlt
ret
scas
es
data16
xor
adc
inc
dec
xor
mov
repnz
icebp
and
or
shrl
scas
xchg
inc
in
and
mov
mov
ss
shlb
xchg
sti
xchg
inc
inc
mov
lock
cmp
and
jo
sti
aad
subb
out
rcrb
outsb
into
jns
ja
imul
cmc
add
aam
jle
loope
scas
jp
mov
inc
hlt
rorl
adc
sub
pop
xchg
mov
dec
nop
push
push
cli
dec
je
fsubrl
push
notl
icebp
xor
shlb
xchg
gs
mov
jne
outsb
dec
and
cwtl
in
cmc
shlb
or
dec
popf
mov
daa
shrl
aas
xchg
leave
int3
sarb
push
movsb
in
orb
addr16
mov
lea
xchg
cmp
out
cmp
lcall
cs
arpl
push
lock
jmpw
add
arpl
fsubs
scas
dec
jmp
cmc
inc
shrb
jecxz
roll
cmpsb
lds
gs
lret
fcoms
pop
sub
dec
mov
in
lock
cli
sahf
xchg
mov
xor
fldt
xlat
pop
imulb
adc
mov
iret
lret
filds
sub
enter
test
inc
sbb
sbbl
dec
ss
rorl
cmp
adc
or
mov
dec
ja
cltd
int3
test
enter
push
pop
orl
stos
mov
mov
mov
add
jo
lcall
insb
loopne
jg
inc
out
xchg
fisttps
test
fs
dec
in
cmpsb
cwtl
in
sub
cs
pop
mov
pusha
jg
fisubrs
jae
mov
pushl
daa
sarl
xchg
xchg
mov
fisubl
and
or
aas
shrb
hlt
aam
repnz
inc
adc
sbb
push
out
push
stos
jge
xor
push
jle
sub
jge
out
ja
fidivrs
inc
test
jmp
in
push
xchg
aaa
iret
xor
mov
testb
inc
mov
inc
aaa
cmc
les
jae
mov
mov
cmp
sbb
mov
dec
mov
bound
int3
lods
cmpsb
xor
dec
addl
test
loopne
push
test
jp
push
sbb
fsubs
sub
jl
iret
and
dec
jl
cmp
imul
loope
push
and
enter
jle
repz
es
out
lahf
inc
jmp
aad
push
cmpb
and
das
jae
lea
sbb
mov
dec
daa
cmp
add
xchg
mov
sbb
jae
mov
aam
mov
and
xor
shl
dec
adc
inc
insb
in
int
pop
sub
mov
mov
data16
xchg
push
imul
movsl
repnz
adc
sbb
xor
pushf
and
clc
or
js
adc
loope
push
mov
out
mov
xor
jecxz
movsl
ret
ret
idivl
push
and
loope
sub
cmp
lahf
or
pop
orl
and
mov
pop
subb
sub
dec
ret
in
leave
cmp
stos
dec
mov
cmp
xchg
lahf
sub
shrb
push
or
pushf
mov
repnz
call
push
push
xchg
mov
push
cmp
das
pop
inc
xor
ljmp
or
mov
outsl
xor
std
les
sbb
xchg
sahf
mov
pop
hlt
imul
aas
or
cmpsb
add
mov
test
lahf
push
push
jecxz
mov
cmp
aam
pop
jno
jo
cltd
repz
fcomi
fdivl
pop
adc
sub
or
ljmp
leave
loope
mov
je
pop
loopne
lret
adc
cmc
sub
mov
sub
xchg
push
mov
loop
rol
sbb
cmp
mov
mov
mov
mov
xor
push
test
push
mov
xchg
mov
cs
pop
jno
mov
es
addl
pop
push
les
sbb
jno
pushf
push
out
cli
lahf
aaa
gs
inc
sub
je
inc
xor
lret
ja
notb
sbb
jo
ljmp
fsubrs
xchg
mov
sbb
xchg
push
inc
pop
mov
sbb
or
std
inc
lret
add
mov
jbe
movsl
jne
mov
pop
sbb
aad
fmuls
mov
outsl
xor
push
dec
cmp
sbb
adc
xchg
adc
int
push
or
dec
stos
dec
pushf
imul
rclb
xor
shlb
mov
and
push
cmp
add
rcl
lds
addr16
call
sub
loopne
in
cmpsb
pop
idiv
mov
xor
out
out
outsb
arpl
add
pop
js
push
xor
enter
scas
in
icebp
lahf
pusha
jp
and
cmp
lret
mov
cmp
and
xchg
or
call
mov
dec
dec
or
xor
sub
rolb
sub
or
leave
in
daa
gs
mov
mov
stos
inc
les
and
stos
push
cmpsl
push
fmulp
jae
or
jl
imul
lret
push
test
mov
adcb
cmp
and
cmp
cwtl
cmp
push
mov
cmpsl
ja
insb
sub
mov
imul
push
jne
int3
or
ret
push
cmpsb
dec
arpl
daa
and
pop
sub
aaa
inc
popf
ret
pop
xchg
mov
js
sbb
nop
popa
inc
sti
fwait
xchg
xor
push
ljmp
rol
iret
sbb
daa
ljmp
mov
scas
mov
vprotw
mov
mov
inc
and
iret
fadd
imul
push
pop
and
mov
cltd
mov
sar
jno
inc
rorl
xchg
mov
jnp
jno
ljmp
inc
add
jns
ss
rcr
cmpsl
add
lds
stos
fdivl
inc
cmp
pop
testb
bnd
out
xor
cmp
push
jns
enter
lahf
sub
fidivrl
clc
sub
fdivl
sbb
and
icebp
inc
xchg
hlt
sbb
loope
lahf
sarb
inc
push
mov
mov
adc
inc
rol
imul
jb
adc
in
shlb
mov
push
orl
faddl
inc
lea
xor
or
insb
and
scas
in
ja
sti
cs
call
xor
dec
push
lods
dec
push
inc
pop
insb
cmp
aad
inc
aam
shr
stc
mov
js
jo
scas
test
test
lcall
xorb
push
out
mov
cmp
test
inc
jg
cmp
mov
rcl
push
mov
outsl
aam
xor
push
aad
push
lods
lods
jb
decb
test
xor
or
cmpsb
pushf
ljmp
pop
mov
jns
lods
and
scas
and
sub
push
rcr
xor
cs
inc
js
aam
and
fdivl
dec
adc
xchg
pushf
mov
lret
arpl
out
mov
arpl
in
add
ds
sbb
or
out
out
es
lock
aam
adc
mov
out
sub
push
inc
adc
sti
jmp
ja
push
dec
adc
or
inc
pop
cwtl
dec
bound
and
and
lods
xchg
cmpsl
mov
fmuls
push
push
xor
test
add
mov
add
mov
or
xchg
pop
jnp
sbb
sbb
mov
in
insb
mov
es
mov
test
pop
dec
push
inc
outsb
imul
jecxz
jl
mov
out
pop
jns
cmp
adc
jg
std
pushf
pop
rcrb
sbb
int
pop
dec
add
push
mov
mov
mov
mov
adc
mov
fwait
mov
sub
mov
outsl
dec
push
and
push
sbb
ret
data16
push
es
shlb
lcall
or
jbe
cwtl
ss
push
ficoml
push
std
andb
std
mov
xchg
ret
enter
cmp
in
push
dec
and
movsb
insl
jmp
out
inc
inc
xor
fbld
xlat
sub
xchg
rcrl
call
mov
je
or
js
stos
cmpl
xchg
or
xlat
jmp
fmulp
push
add
cltd
rcrl
add
cmp
pop
sbb
cli
es
adc
in
jno
push
ss
dec
pushf
negb
xchg
mov
mov
mov
and
sub
sbb
sub
cmp
cmp
mov
cld
push
call
jl
lahf
imul
pop
notl
int3
mov
in
mov
cmpsb
jge
out
mov
sbb
sub
imul
push
cmp
inc
outsl
inc
lahf
cmp
jne
stos
aam
xchg
mov
fwait
pop
je
mov
push
mov
inc
jmp
out
sbb
arpl
adc
xchg
jo
sub
pop
xor
pop
scas
ljmp
and
push
ja
and
aaa
or
cmp
iret
push
aad
sbb
loope
jnp
out
mov
out
dec
jp
pushf
pop
stos
loope
out
faddl
cmp
mov
mov
fs
mov
add
pop
add
fwait
je
scas
mov
fcomps
imul
repz
pop
test
cld
mov
lock
inc
rcr
add
into
ret
clc
mov
stc
stos
inc
lods
mov
or
dec
mov
adc
in
inc
sub
push
inc
jae
out
xchg
add
scas
movsb
mov
jle
mov
imul
out
lods
add
fdivl
push
push
mov
stc
add
aas
loopne
jb
fildll
popa
xlat
outsb
jg
adc
cmp
dec
xchg
sub
out
cmc
lcall
aas
mov
mov
sub
arpl
inc
adc
jno
das
mov
nop
xor
ror
push
xchg
rolb
sbb
mov
fst
movsb
pop
add
xchg
andb
clc
push
in
bound
cld
test
test
fbld
dec
and
mov
or
fstl
sub
cmp
mov
es
cmpsl
sbb
andl
cmovge
or
sbb
dec
lea
mov
decl
inc
mov
es
add
jne
or
lahf
cmpsb
dec
pushf
push
sbb
push
and
inc
lret
gs
outsb
cs
pop
sbb
adc
mov
hlt
sbb
repz
loope
dec
mov
lahf
pop
pop
inc
rcll
pusha
mov
addr16
pop
sbb
dec
inc
or
mov
mov
sahf
repz
dec
pop
sub
sbb
out
and
dec
xor
cmp
dec
cmpl
jnp
jmp
insl
mov
fstl
cmpsb
mov
pop
adc
mov
xor
adcl
addb
movsb
xchg
out
dec
call
inc
clc
xor
mov
insb
cltd
mov
lds
data16
cmpsb
push
jmp
movl
ret
xchg
out
lcall
cld
popa
dec
test
adc
fidivl
xchg
movsl
cmc
and
fdecstp
sub
ljmp
xor
cmp
mov
addr16
fdivrl
dec
adc
xchg
iret
push
mov
sbb
jnp
imul
popa
iret
out
in
cmc
inc
jne
popa
adc
pop
ret
adc
dec
push
add
ja
sub
repz
or
movsl
cmpsb
sub
push
mov
push
roll
or
add
push
dec
mov
addr16
popa
lret
test
adc
cmp
into
imul
or
xor
mov
or
movl
or
cmc
jg
into
push
mov
push
dec
shrl
xchg
inc
out
stos
push
cli
cmp
pop
sbb
jbe
sbbl
cmc
outsl
mov
xor
ret
arpl
loope
hlt
mov
lock
xchg
lret
outsl
lods
mov
or
repnz
pop
cmp
adc
lret
outsl
cmc
mov
sub
add
cmpsb
loope
pop
mov
sbb
sub
push
fsubrl
rcr
xor
lret
sbb
adc
sub
jne
mov
div
addr16
push
lock
push
push
sub
les
and
pop
or
ds
xchg
sbb
sub
cmp
jmp
ds
aad
cmp
lret
jae
repnz
pop
cmpsb
mov
pop
and
fistpll
sti
stos
stos
mov
icebp
jae
sub
xchg
clc
stc
jb
outsb
repz
shll
add
lods
jne
cltd
fwait
xchg
test
mov
add
push
in
mov
cmpsl
hlt
lret
pop
sbb
jb
mov
mov
fildl
call
pop
test
test
lret
sbb
dec
or
mov
ror
js
cmp
leave
bound
inc
repz
mov
test
inc
and
scas
add
dec
mov
mov
fildl
xchg
movsb
bound
mov
xor
out
shll
dec
mov
inc
je
addr16
mov
popf
cmp
addr16
loope
mov
fadds
lcall
cmc
mov
cld
shll
popf
clc
push
inc
cltd
mov
pop
out
arpl
sub
push
sbb
cld
rep
mov
out
orb
mov
in
shrl
out
xchg
jno
mov
mov
insl
dec
push
push
or
xorl
subb
push
or
and
mov
lods
addr16
push
jbe
or
adcl
out
out
pushf
call
fs
sub
leave
aad
popf
cmp
fldcw
aam
scas
daa
add
movsb
pop
sbb
test
jge
xchg
lea
lods
subl
xchg
mov
cmp
inc
mov
sbb
fldenv
xor
pop
pop
test
push
cmp
dec
js
mov
or
mov
push
es
ja
pop
mov
roll
stos
mov
mov
sub
rol
pop
les
and
jecxz
or
mov
in
jmp
mov
xor
inc
aas
jecxz
xor
pop
mov
daa
sbb
cli
popl
add
add
cli
pop
sub
sbb
lret
loope
cli
sbb
xchg
xor
cmc
adc
jae
sbb
les
jg
test
push
out
mov
dec
xor
push
dec
fiaddl
xchg
jae
les
adc
sahf
jle
in
das
mov
int
xchg
outsl
sub
fistpll
ljmp
dec
pop
or
jae
cmpsb
mov
inc
xor
push
mov
out
xchg
lds
jae
and
and
popa
inc
xorb
and
sbb
fistpll
fwait
aad
dec
mov
out
jns
mov
xchg
stos
mov
fldt
xor
int3
aam
mov
mov
mov
mov
sub
sub
cmp
roll
ds
mov
shr
cmp
pop
div
push
sub
adc
pushf
daa
xchg
inc
and
bound
adc
rorb
jne
or
cwtl
in
push
sbb
imul
sub
inc
mov
fs
jle
outsl
pop
mov
test
sub
mov
mov
cwtl
in
cmp
dec
fildl
dec
pop
xlat
or
mov
or
sahf
pop
add
jne
addl
adc
in
ljmp
lret
es
iret
or
shl
out
mov
jo
lahf
int
mov
adcl
mov
cmp
push
jbe
mov
jp
add
outsl
scas
outsl
lret
push
xchg
iret
mov
pop
in
sub
inc
sub
adc
mov
pop
sbb
xchg
scas
mov
fnstsw
aad
cmp
std
adc
int
popa
rcrl
mov
adc
pop
leave
loope
or
aad
js
xchg
iret
mov
pop
sahf
cmp
mov
sbb
add
inc
xor
ja
push
bound
push
sbb
movsb
xor
sub
add
pop
testb
mov
cli
adc
inc
cltd
xchg
push
xchg
jle
add
inc
hlt
or
mov
mov
jmp
pop
pop
push
mov
sub
add
call
ret
fstps
test
dec
mov
push
xor
stc
imul
push
hlt
loope
inc
pop
ja
pushl
negb
xchg
sub
or
dec
ret
bndldx
and
mov
adc
or
add
aad
icebp
cmp
mov
jmp
clc
dec
sbb
inc
mov
cmpsb
xor
pop
and
or
xlat
inc
sbb
push
push
fdivs
outsl
arpl
sub
adc
lds
iret
push
test
addb
loope
ror
in
xchg
jns
push
inc
pushf
test
pop
dec
jmp
inc
push
push
inc
and
jbe
pop
aam
push
push
push
mov
xor
sub
fidivl
out
imul
xor
lds
dec
mov
sti
and
out
add
xor
inc
ja
xchg
cmpsb
adc
cmp
xchg
xchg
push
mov
mov
cltd
out
sbb
cmp
xchg
clc
enter
sarl
enter
dec
outsl
push
dec
mov
mov
mov
ds
xor
mov
add
fs
sbb
xchg
cmp
test
push
inc
inc
clc
push
pushf
popf
xchg
inc
jae
or
ljmp
push
fcompl
sbb
mov
add
in
in
out
stos
push
aad
mov
out
mov
jns
sub
js
push
xlat
or
adc
fiadds
and
mov
push
lahf
iret
cmp
movsb
mov
clc
fiadds
cmp
sub
sbb
pop
cld
xchg
jbe
jno
sbb
inc
dec
pop
pop
rol
inc
sar
pop
pop
loop
cmpsl
xchg
fildll
aaa
xor
rcrl
inc
push
outsb
and
dec
push
das
pop
and
xor
leave
cmp
fcompl
loope
in
out
in
pop
or
cmp
sub
sbb
jo
jg
mov
in
pusha
ficoms
cli
sbb
dec
push
je
mov
pop
push
lods
notl
push
mov
pop
mov
xchg
push
ss
and
jno
dec
mov
rcrb
fidivrl
jp
and
and
fldl
iret
jns
fsubrp
xchg
push
pop
pop
mov
dec
pop
sub
inc
or
rcrl
in
add
or
sbb
adc
in
in
pop
sub
ret
fistpll
inc
inc
or
dec
pop
adc
jae
fsts
notb
shlb
jmp
shlb
pop
sub
outsb
popf
cmp
pop
xor
dec
cmp
add
pop
mov
or
loope
inc
fldt
sub
adc
jbe
es
push
scas
iret
mov
xchg
incl
repz
stos
lds
and
ja
push
inc
or
fmulp
dec
popf
ds
or
bound
adc
mov
sub
popa
jno
scas
hlt
lcall
stos
mov
mov
inc
aas
stos
lods
movsl
cld
and
fstpt
push
rcl
shll
jmp
xchg
in
ds
xlat
dec
out
adc
scas
xchg
sub
cwtl
scas
jbe
fadds
ljmp
cld
cmpsl
pushf
dec
adc
pop
xchg
cmpsl
sub
popa
sti
xchg
pop
out
daa
jp
loopne
add
fsubr
push
dec
adc
ficoml
sbb
mov
popa
jl
pop
cltd
push
cmp
dec
jns
repnz
inc
mov
push
mov
inc
cmpsl
pushf
mov
aam
lods
lods
js
nop
aam
jle
lods
push
add
pop
adc
add
and
test
rcll
adc
jno
std
cld
rcrl
sbb
ret
lahf
sbb
xor
or
xor
push
pop
aam
rorl
nop
jg
repz
jns
iret
cltd
jnp
shr
sbb
push
daa
pop
mov
repz
ja
and
hlt
filds
and
xchg
adc
in
jmp
sbb
imul
mov
das
arpl
push
mov
cmp
stos
mov
roll
jecxz
mov
test
popa
stos
lret
cld
mov
pop
inc
push
lds
jle
or
or
fsubl
out
push
xchg
pop
sub
push
dec
sbb
mov
or
sti
add
jg
jle
jne
je
pusha
ret
enter
gs
mov
mov
push
mov
shll
mov
push
mov
mov
push
ljmp
cmc
ljmp
mov
xor
mov
sub
cmp
mov
mov
jle
fnsave
sub
cld
sbb
cwtl
pusha
pusha
mov
sub
sbbb
add
jl
inc
xor
mov
push
into
add
adc
sbb
call
movsl
fdivrs
xor
movsl
pop
add
dec
pop
xchg
push
out
cmc
mov
dec
test
jno
sbb
sub
stc
cltd
iret
sbb
push
xor
outsb
or
arpl
push
mov
jnp
xchg
lret
shrb
push
leave
aam
leave
pop
pop
repz
js
test
add
out
xchg
xchg
and
sbb
mov
add
cmp
std
xor
sbbb
add
mov
push
inc
dec
push
inc
aam
sbb
xchg
ljmp
cs
ret
jl
adc
in
aam
mov
ret
in
inc
pop
subl
rcrl
test
xor
mov
fisttpl
dec
movsb
scas
fcoms
hlt
loopne
aam
jns
mov
adc
jp
dec
call
adc
sub
sti
stos
sub
jo
lods
sub
xor
mov
push
xchg
std
xor
movsb
xchg
pop
adc
ja
nop
adc
push
fdivrs
sbb
lahf
cmp
push
mov
push
cmp
in
imulb
cmp
outsl
mov
out
lods
jle
mov
dec
jmp
inc
imull
xor
orb
icebp
xchg
and
test
leave
sti
pop
xchg
daa
adc
scas
inc
icebp
xchg
lahf
sub
mov
aad
stos
lret
and
das
cmp
test
ja
fiadds
or
es
push
repz
adc
jl
jecxz
xchg
stos
movsl
pop
jge
fidivrl
adc
mov
stos
xchg
imull
das
rcll
lahf
jne
je
jns
cmp
jg
xor
test
mov
mov
pushf
inc
ret
push
or
pop
add
add
loop
xlat
sub
nop
fisubs
lods
sti
jecxz
or
sbb
xchg
push
push
leave
jno
adc
dec
pop
lods
jae
pop
mov
push
rorb
clc
jnp
sub
and
jge
gs
gs
arpl
mov
stos
mov
mov
aas
xchg
fidivs
shl
imul
mov
rcrb
test
fbld
sbb
shrb
icebp
std
stos
ficoms
out
ds
divl
push
fdivrl
std
mov
sbb
ja
and
jne
mov
outsb
xor
mov
cli
push
sti
add
xor
test
adc
das
test
xor
cmp
cwtl
adc
mov
pop
divl
std
in
nop
push
leave
inc
stos
add
sti
or
lret
mov
lea
add
or
sub
shll
push
icebp
mov
push
mov
mov
aaa
jo
jecxz
inc
inc
test
xchg
popa
sub
xor
inc
js
icebp
push
adc
in
cmc
mov
cld
and
js
scas
pop
mov
or
adc
mov
sbb
mov
or
pushf
xor
sub
mov
into
mov
mov
imul
orw
ss
mov
into
in
pop
loop,pn
inc
movsl
mov
sub
xor
outsl
aam
in
xchg
sbbb
pushf
fsubrl
mov
cltd
mov
pop
jns
adc
test
lds
push
dec
mov
mov
mov
test
sbbb
repnz
cmp
adc
xor
test
cwtl
inc
push
mov
pusha
sbb
and
jmp
sbb
mov
push
mov
xchg
mov
sbb
pop
mov
fidivl
cmp
aaa
neg
and
push
or
xor
fsubr
xorl
adc
cs
fxtract
dec
jno
push
push
int3
sub
or
arpl
das
popf
mov
sbbb
mov
cmpsb
sub
add
andb
in
out
aam
clc
add
out
call
and
xor
nop
scas
jbe
aad
mov
mov
in
mov
sti
aad
or
or
clc
sbb
xchg
nop
sbb
or
pop
nop
mov
jae
push
mov
icebp
xchg
fsubrs
jl
push
scas
aad
add
lea
fsubr
push
mov
int3
jle
cltd
shr
imul
add
cmp
shrb
mov
mov
jns
bound
pushf
mov
sub
and
xchg
cmp
mov
fimull
imul
pop
and
movsl
sbb
pop
js
jle
sub
mov
push
mov
shll
imul
or
loopne
cltd
and
sbb
aam
bound
cmp
outsb
rorl
loop
pop
jl
inc
sub
jnp
mov
jg
test
lahf
xchg
shll
lds
mov
dec
imul
pop
cwtl
mov
push
push
xchg
sbb
loop
movsb
push
sub
xchg
xchg
in
mov
cmpsl
mov
jo
xchg
dec
mov
mov
sbb
mov
adc
popa
inc
sti
add
adc
mov
mulb
sbb
stos
cmp
fwait
andb
pusha
add
mov
dec
sahf
xor
xlat
fidivl
lock
xchg
xchg
add
jns
jno
xchg
lds
sahf
jns
push
sub
sarb
push
xchg
and
mov
hlt
or
cmpsl
lods
insb
push
and
cs
popf
mov
shr
cmp
adc
cwtl
aas
adcb
in
lock
sub
and
mov
jae
cmp
sbb
dec
mov
fiadds
mov
sub
jne
ds
insb
adc
pusha
lea
outsl
popf
dec
or
rclb
mov
pop
xchg
sub
out
add
in
inc
in
mov
hlt
repz
shlb
fisubrl
inc
jo,pt
jge
fisubrs
push
aam
gs
fildll
icebp
testb
mov
ss
or
cwtl
ds
and
cs
scas
dec
pop
les
lcall
cs
fisubl
stos
xchg
mov
fwait
pop
jno
cmp
rcll
add
mov
dec
or
xlat
iret
xchg
cmp
sub
mov
push
adc
das
cmp
daa
jl
mov
jmp
pop
test
dec
and
test
hlt
mov
mov
ss
pop
ret
test
jmp
jbe
or
lret
movsl
xor
insl
jae
movsl
and
xchg
aad
pop
in
mov
sbb
fs
fcmove
xchg
jno
pop
in
popa
push
pop
sub
mov
add
cmp
insl
sub
pusha
scas
fs
icebp
sub
cmp
in
inc
sahf
mov
repnz
mov
cltd
mov
or
int3
mov
and
aam
jnp
inc
mov
sbb
repnz
xor
lds
stos
adc
cld
or
sbb
jns
jo
gs
xchg
adc
push
mov
imul
dec
xlat
fisubl
les
or
test
jno
or
popa
mov
or
idivb
add
ss
inc
inc
jg
hlt
outsb
or
pop
negl
aam
mov
mov
pop
xchg
mov
jge
and
inc
mov
xchg
push
popf
xlat
xchg
add
mov
xor
adc
mov
in
std
mov
popf
sarl
push
mov
orl
inc
stos
sub
lret
insl
das
mov
dec
iret
dec
mov
push
std
xchg
jle
sbb
and
lcall
out
inc
push
rol
mov
mov
xchg
lret
pop
test
or
jne
dec
lcall
cmp
push
xchg
inc
add
divb
sub
xchg
push
cltd
shlb
test
fisttps
xor
mov
test
out
lods
fmul
nop
jg
inc
sbb
xchg
xchg
test
push
out
icebp
or
das
cmp
sarl
adc
push
cli
mov
in
test
int
stc
adc
gs
pop
std
mov
sub
mov
dec
add
sub
mov
test
xchg
push
mov
das
mov
mov
nop
insl
in
clc
xchg
mov
sub
jecxz
mov
inc
pop
inc
mov
or
clc
pop
push
push
lods
sbb
lret
and
rcr
sbb
sub
pop
in
adc
xchg
mov
sub
je
leave
hlt
mov
jno
mov
jmp
shlb
and
pop
and
dec
cld
push
test
sbb
cmpxchg
les
mov
cli
push
push
mov
daa
jnp
add
jecxz
popa
loope
sub
out
lahf
jae
lea
ret
mov
imul
imul
dec
inc
loope
mov
sar
out
xchg
pop
lock
xchg
stos
out
and
xchg
xor
je
fstpl
sbb
test
jb
jmp
in
jbe
jo
mov
pop
movb
sahf
movsb
fcmovnb
sbb
pop
adc
mov
sub
test
mov
mov
addl
hlt
add
lods
adc
cmp
rclb
out
add
rorb
push
inc
std
mov
xchg
popa
mov
xchg
dec
push
xchg
and
push
pop
sub
mov
repz
push
sbb
cwtl
mov
mov
out
add
outsl
lahf
ret
pop
jge
data16
mov
cmp
mov
inc
and
inc
pop
cmp
dec
add
ret
and
rorb
fwait
sahf
and
vmovupd
cltd
frstor
and
add
xor
xchg
sub
mov
mov
out
xor
push
dec
pop
cmp
ret
ret
cmpsb
in
xchg
sbb
mov
mov
das
mov
icebp
cld
aad
sbb
out
ss
mov
mov
pop
in
xchg
mov
jne
mov
pop
push
xchg
jmp
stc
fistpll
mov
jns
imul
adc
int3
ret
cmp
rorb
xchg
imul
adc
outsl
xchg
and
lods
fstpt
sub
adc
pushf
repnz
fs
mov
sub
mov
push
outsb
add
xchg
push
adc
test
in
mov
or
lds
rclb
mov
popa
or
shlb
sbb
iret
pop
cltd
mov
and
lret
push
fldt
out
out
mov
popa
int3
leave
sahf
xchg
and
in
sub
add
ds
mov
mov
pop
fidivrl
imul
push
inc
inc
push
in
ds
shrl
sbb
dec
in
popa
ret
push
out
mov
in
lds
repnz
hlt
jmp
mov
fs
addl
add
mov
pop
mov
xor
es
add
std
je
and
xlat
pusha
nop
ds
jmp
push
mov
cmp
shll
nop
xchg
icebp
lret
cmpsb
or
cmp
sub
and
popf
out
inc
push
jnp
mov
imul
and
cmp
or
adc
sub
rcrl
aaa
fldt
add
add
scas
ja
imul
adc
mov
or
push
mov
ficomps
rcl
insb
fmuls
and
jg
add
push
addb
pop
push
inc
jge
xor
pop
mov
cmp
stos
rcr
and
fisttpl
jmp
jbe
out
jbe
out
xorb
leave
fwait
fwait
add
stc
cli
sbb
jl
js
notl
inc
roll
fiadds
pushf
ss
xor
repnz
push
mov
push
loopne
pop
mov
out
mov
mov
mov
mov
pop
mov
rclb
in
test
dec
push
adc
repz
cmp
xchg
lods
mov
inc
and
icebp
sti
bound
sbbb
adc
clc
ss
aam
mov
movsl
and
push
lret
mov
icebp
icebp
pop
dec
mov
loop
daa
xchg
mov
int
rorb
xchg
loop
jbe
and
gs
sbb
lds
ret
out
mov
sbb
mov
sbb
test
mov
insl
popa
das
jae
add
scas
mov
sub
cmp
in
out
sub
int
push
in
adc
cmp
sub
xor
jnp
scas
push
mov
out
dec
jns
xchg
or
dec
daa
in
sti
adcl
pop
into
in
jb
daa
pushf
fcomi
out
push
lret
fstps
daa
popf
loope
add
inc
xor
addb
pusha
cmpsb
adc
lds
decl
jnp
aad
cmpsb
mov
test
xor
fcmovnu
and
adc
les
mov
xchg
sarl
into
mov
dec
cmp
fcom
cmp
sbb
pop
mov
or
aaa
fstps
popf
dec
movsl
lret
xor
adc
lods
push
lods
or
mov
sbb
sbb
mov
sub
lcall
push
mov
cmp
xor
jg
mov
popa
jnp
xchg
aas
int3
mov
stc
mov
pushf
sbb
inc
incb
inc
add
jbe
cs
sti
push
add
pop
mov
mov
je
lea
cmpsl
cld
mov
mulb
stc
jns
xor
int
fwait
jp
sub
mov
imul
xor
in
scas
fucompp
cmpsl
pop
sub
shrb
mov
add
sub
push
cmpsb
push
sbb
insl
mov
cltd
cs
insl
push
popa
and
int
adc
clc
lock
fstps
test
jge
ret
and
xchg
push
mov
ror
scas
or
cmp
push
jmp
jle
cmp
roll
sbb
mov
ss
mov
mov
notb
sub
xchg
repz
pushf
jp
push
gs
jno
iret
jmp
jmp
and
cmp
mov
dec
cmp
adc
xor
ret
xchg
cs
pop
icebp
sbb
sbb
add
and
or
scas
xor
shl
scas
mov
mov
push
mov
or
xchg
addr16
imull
sub
xchg
push
xor
pop
or
sbb
inc
pop
xchg
mov
mov
or
dec
loop
mov
mov
addr16
xchg
mov
aam
movd
test
cmc
dec
sub
cmp
pop
jecxz
addl
adc
mov
aas
jno
test
xlat
bound
xor
mov
mov
pop
clc
mov
sbb
enter
mov
sub
jns
sub
xchg
pop
jp
jp
popa
xchg
sbb
leave
mov
cmp
bound
loopne
jle
add
jbe
mov
cmp
adc
push
mov
mov
and
mov
sub
outsl
outsl
mov
cltd
jl
mov
test
stos
lock
mov
enter
rcl
inc
inc
inc
inc
xor
in
in
movsl
lods
mov
insb
ljmp
sbb
push
cmc
pop
or
fimull
int3
push
pop
jp
mov
and
adc
inc
add
add
pop
xchg
push
fdivl
or
lds
ljmp
sarl
shrl
jge
in
stc
clc
or
jno
jns
or
inc
jbe
hlt
fidivl
int
pushl
xchg
and
jo
cld
xchg
into
imull
in
subb
add
and
outsl
psraw
test
jle
ja
lods
mov
mov
lock
fs
and
sbb
xlat
int3
dec
cltd
rcrl
or
adc
cmpsl
jg
jae
sbb
pop
adc
dec
int3
dec
iret
mov
std
mov
jmp
push
jb
and
out
push
imul
mov
sbb
cli
mov
lds
scas
es
imul
test
in
fsubrs
jb
repnz
int
cmp
jge
sbb
sbb
data16
mov
push
and
push
iret
mov
jle
cs
xchg
or
imul
jns
lahf
mov
xchg
movsl
mov
or
decl
and
jl
xchg
mov
test
xlat
mov
cmpsl
in
mov
out
out
js
fdivrl
sub
les
pop
xchg
xor
mov
pushw
cld
xchg
xchg
fdivl
je
addr16
dec
aam
jge
mov
lods
add
add
cld
pop
jg
mov
or
mov
jb
add
bound
rcll
fbstp
xchg
bound
cmp
mov
sbb
jo
push
mov
pop
ficomps
fs
insb
xor
dec
sti
sub
sahf
dec
subl
imul
mov
ss
inc
outsl
cmpsb
jmp
int
mov
test
cmp
dec
mov
mov
add
inc
adc
dec
sub
test
adc
sbbl
cmp
dec
test
or
rcll
xor
ljmp
lret
cli
xor
sbb
cmp
inc
iret
inc
adc
xchg
addr16
hlt
repnz
ret
cmp
push
loop
dec
int3
xchg
test
test
pop
insb
stc
xchg
cmp
or
rcrl
int3
fs
outsb
jno
jne
push
inc
test
lcall
addr16
sbb
stos
sbbl
push
or
dec
ret
stc
add
jno
in
test
pop
push
mov
push
es
jne
into
push
daa
mov
je
mov
mov
test
cld
cmp
inc
adc
cmp
mov
iret
mov
cmp
cmc
inc
insb
push
mov
rorb
scas
leave
test
or
and
outsl
imul
nop
imull
js
lret
xor
aaa
jno
xor
mov
cmpsl
cmovbe
sub
cwtl
enter
cmp
ss
sahf
cmp
adc
xchg
mov
cmp
and
and
mov
ja
sub
insl
orb
lock
bound
xchg
push
add
lods
cmp
adc
cltd
fnstenv
mov
movsb
jo
leave
xor
sub
sti
lahf
shrb
fidivrs
and
popf
aas
jl
in
cltd
movsl
pop
push
lods
or
add
mov
loopne
jg
mov
sbb
xorb
lods
shr
iret
inc
cs
and
lds
pop
pop
insb
iret
mov
push
dec
repz
inc
mov
or
xor
push
add
inc
fs
stos
frstor
cmp
fnsave
add
popa
bound
jge
movb
js
pop
jns
fs
aad
adc
xchg
push
xor
repz
outsb
and
sbb
sub
mov
or
or
ret
ss
dec
fidivs
mov
sub
sbb
mov
cmpsl
lret
rcr
lahf
testb
je
sub
push
and
aaa
out
xor
mov
and
mov
push
inc
cmpsl
scas
inc
insb
out
test
jnp
shr
lea
xchg
pop
pop
jo
dec
cld
dec
call
mov
adc
insl
pusha
icebp
jae
xchg
fld
push
mov
and
push
add
jg
jg
or
fsubs
bound
mov
cmpsl
leave
push
repz
arpl
push
in
xor
sub
push
sarl
cmp
pop
push
and
cmp
decl
iret
xor
cmp
loope
test
ja
mov
bound
mov
pusha
mov
or
pusha
into
lahf
aas
add
mov
sbb
js
std
and
gs
add
adc
or
int
sub
in
cmp
out
lcall
fists
lahf
pop
stos
xlat
jp
es
pop
mov
data16
and
push
fldenv
std
push
cmpl
daa
icebp
cmpsl
js
repnz
dec
fildll
sub
push
and
into
mov
push
inc
mov
push
pop
sub
jbe
jg
test
inc
push
arpl
add
js
ljmp
out
sub
outsb
out
std
inc
jmp
jmp
lret
cmp
cmc
imul
xor
out
mov
bound
adc
jg
lahf
stos
inc
out
adcb
fisttps
cli
dec
imul
cmc
mov
in
jae
push
push
fdivrl
push
fadds
scas
lods
mov
aaa
mov
or
sti
fiaddl
adc
lret
dec
lea
pop
jl
loop
pop
xchg
sub
push
adc
jp
addb
inc
mov
lods
and
addr16
clc
mov
out
mov
xor
cli
jo
aaa
outsl
shrl
push
dec
out
and
sbb
call
mov
icebp
fcompl
inc
add
jno
lods
rorl
mov
lock
pop
lds
jbe
enter
jecxz
iret
lahf
mov
lahf
xor
mov
es
cmp
mov
xor
mov
call
sbb
cmpsl
jnp
test
nop
push
pop
shr
pop
cmpsl
jns
daa
sti
and
nop
cltd
lds
pop
xlat
into
sub
sub
adc
gs
jg
pop
push
stos
xor
jle
cmpsb
mov
loopne
ljmp
jmp
test
cmp
in
mov
fnstsw
jl
lcall
add
sbb
cmp
sbb
popa
inc
mov
cmc
ret
addb
push
sbb
lds
or
dec
cli
inc
in
inc
gs
in
popf
loopne
ffreep
outsl
ret
add
fwait
mov
cli
out
leave
pop
stc
sub
int
mov
pop
ret
pop
sub
sub
rcll
not
and
leave
xor
test
pop
add
xchg
add
mov
ss
xchg
mov
or
fisttpl
xchg
sub
adc
push
out
popa
xchg
push
or
out
fmuls
repz
popf
or
cmp
lds
mov
mov
call
mov
xchg
cmp
fcomps
mov
shlb
lea
jmp
mov
pop
xchg
lock
mov
daa
add
jl
mov
mov
push
ret
jl
out
sbb
xor
and
inc
jne
jae
pop
cli
int3
mov
mov
cmp
leave
add
mov
jne
jae
jge
not
pushf
push
jnp
mov
push
sub
leave
insl
mov
adc
mov
ficoms
sbb
insl
add
not
fsub
and
data16
mov
mov
jnp
push
insl
sarb
in
cld
jnp
mov
popa
jnp
bound
sbb
mov
and
push
fiaddl
or
lea
out
adc
dec
into
addl
pop
test
sbb
and
shl
jb
push
jmp
je
cmp
js
mov
ljmp
and
push
or
stos
xchg
gs
push
loope
inc
test
imul
xor
cwtl
push
aas
ljmp
data16
mov
mov
lcall
ss
adc
add
scas
xchg
adc
fisttpll
ret
popa
pop
lea
addr16
pop
scas
daa
faddp
fwait
in
mov
sub
sbb
pushf
or
mov
cltd
lods
lcall
lret
sbb
mov
cwtl
inc
mov
xor
pop
mov
pop
jmp
add
cmpsb
lret
cli
cmp
cmp
into
pop
insl
inc
jo
jl
test
sub
push
imul
dec
lret
pop
cmpsb
add
xorl
push
adc
fistps
repz
ror
dec
popf
std
lahf
rcrl
cmc
push
enter
xchg
sarb
cli
sbb
xchg
mov
iret
fwait
cli
mov
adc
xchg
mov
test
pusha
mov
lret
stos
xor
lret
aaa
hlt
mov
adc
mov
xlat
fucomip
dec
push
push
xchg
mov
fldl
xchg
or
sbb
inc
cld
xchg
mov
lock
push
inc
dec
xor
dec
loopne
roll
fistpll
sti
pop
out
imul
imul
and
inc
and
xchg
lea
jne
cmpsb
push
sbb
sarb
sti
jno
inc
cwtl
aam
in
hlt
mov
push
sub
xor
push
int
loopne
inc
jns
push
imul
in
inc
popa
adc
test
xlat
loope
xor
cmp
mov
enter
shl
jne
cli
jecxz
pop
pop
nop
mov
insl
cmp
arpl
dec
mov
cmp
cmp
sbb
lahf
cs
stc
nop
enter
and
movsl
mov
out
jnp
test
lods
dec
inc
or
push
aaa
jmp
cmpsb
or
sti
pop
pop
xchg
jle
add
and
or
lret
cmpb
xor
ds
cmc
push
mov
repz
fucom
fwait
xchg
cli
bound
pop
stos
mov
push
popl
cmp
js
mov
shlb
or
push
adc
jnp
or
xor
int
cmc
fisubs
cmp
sbb
dec
push
arpl
sti
cmp
push
sbbb
fs
fsubs
xchg
xor
in
xor
loopne
shrb
icebp
imul
lea
ljmp
jno
ss
test
sbb
icebp
ljmp
or
sub
pushf
pop
loope
mov
mov
xor
insb
xchg
int
sbbl
enter
cmp
sbb
adc
jnp
or
cmc
adc
out
jo
mov
fs
aad
in
mov
cmpsb
scas
cmp
xor
popa
int
pusha
sbb
mov
cmp
xchg
xchg
adc
call
jae
pop
dec
or
movsl
push
cmp
dec
mov
jle
ret
xchg
lcall
shlb
adc
mov
add
and
mov
das
pop
sarl
cmp
dec
jnp
mov
leave
fstps
xlat
sub
bound
pop
adc
mov
stos
pop
repnz
ds
packssdw
mov
mov
cwtl
xor
xchg
in
pop
testb
push
fbld
mulb
push
shll
sub
jno
add
xor
sub
outsl
dec
adc
flds
mov
leave
dec
or
push
lahf
setnp
xchg
pop
dec
push
movsl
inc
int3
sahf
mov
inc
mov
iret
out
cmp
fs
int
cmpsl
inc
mov
fmuls
pop
cmp
mov
call
scas
lret
enter
dec
sub
mov
lret
mov
js
mull
insl
imul
push
dec
cmc
icebp
flds
lods
scas
lahf
sub
add
ret
xor
xor
xchg
cmp
push
or
lcall
scas
cmp
lds
mov
xchg
clc
cli
scas
push
jg
sub
fwait
test
aad
add
leave
xchg
and
push
int3
push
pusha
in
ficoms
cmc
mov
sbb
loop
pop
pop
cmpsb
in
in
bound
cmp
pop
ret
testb
stc
sub
into
aaa
inc
stos
shrl
adc
mov
push
jl
push
xchg
dec
andl
add
jl
fdivrs
xchg
iret
test
in
push
mov
lret
cmp
pop
adc
jbe
rorl
out
push
jbe
sbb
inc
in
fstps
jmp
ss
jne
mov
bound
push
js
insb
push
jle
lcall
cmc
adc
aaa
js
movsb
cmp
out
enter
int3
mov
xor
push
outsb
xchg
fiaddl
scas
loope
in
inc
cmp
std
adc
incb
aad
add
aaa
sub
mov
add
mov
stos
and
xor
jo
cwtl
ljmp
inc
repnz
xor
icebp
pop
lcall
lcall
fimuls
xor
sub
cmc
adc
out
rcrl
mov
jecxz
sub
mov
jmp
push
sbb
ret
sbb
shl
push
sbb
repnz
outsl
insl
pop
in
mov
adc
aam
sahf
mov
adc
aas
setge
sub
shl
hlt
push
add
aas
sub
imul
sub
sahf
fistps
or
or
mov
adc
inc
nop
stc
and
imul
dec
jns
popf
arpl
stc
xchg
xor
mov
scas
jae
aaa
jle
inc
or
cmpsl
inc
into
mov
inc
dec
jns
xchg
jmp
cs
rol
ss
in
inc
aaa
clc
daa
gs
int
sub
mov
sub
cmp
arpl
movsb
xchg
sub
call
add
repnz
push
or
jno
mov
adc
cli
mov
cmp
mov
sbb
and
and
pop
bound
inc
mov
sti
jb
cmpsl
scas
sbb
into
aam
sahf
loopne
and
fistps
push
inc
addb
push
sbb
into
xlat
lds
cltd
push
icebp
mov
dec
icebp
inc
add
push
es
pop
jb
cwtl
shl
rorl
and
cld
aas
jmp
pushf
jge
adc
das
hlt
mov
je
cmpsl
stc
fistpl
add
cmc
mov
xchg
lret
cmpsl
out
jmp
scas
pusha
adc
mov
sbb
insl
aas
insb
divl
xchg
int3
frstor
push
pop
mov
dec
test
popf
mov
popa
inc
and
sar
cmp
lock
mov
iret
adc
jg
sub
pop
stos
movsb
sbb
test
in
jecxz
adc
or
sarl
jecxz
popa
int
cmp
xlat
int
adc
add
stos
dec
mov
mov
in
rcrl
xor
ds
add
and
dec
xchg
jmp
push
lret
lcall
aaa
stos
scas
imul
cmp
mov
mov
xchg
cmp
jle
adc
lods
sbb
mov
mov
mov
daa
add
mov
mov
cmp
jl
push
mov
or
push
push
ja
sbb
jns
xchg
gs
repz
arpl
and
pop
aas
xchg
call
shl
dec
sbb
push
dec
sub
mov
mov
aaa
mov
es
sub
shll
cmp
mov
pop
cmpsl
test
pop
push
cld
mov
test
xchg
cmp
dec
jl
adc
cs
dec
push
insl
jge
js
and
test
imul
in
pop
push
cwtl
sti
mov
sti
inc
jecxz
add
xchg
negl
dec
adc
fldpi
jb
jne
or
jg
movsl
push
call
sar
call
jbe
dec
xlat
dec
mov
or
push
push
leave
xor
leave
jb
xor
push
dec
repnz
js
pop
enter
jle
cmpsb
mov
fsubs
cmp
stos
mov
loopne,pn
lret
mov
and
lcall
leave
out
iret
repnz
or
pop
leave
adc
movsl
push
push
jl
repz
sti
or
mov
jl
mov
rcrb
stc
js
jno
mov
das
xor
xchg
or
pshufw
cmpsl
out
insb
dec
mov
add
and
pop
popf
ja
mov
push
cwtl
icebp
icebp
adc
jle
lret
jno
xchg
sahf
adcl
jmp
mov
cmpsb
xchg
and
aad
mov
push
out
jns
jb
ret
std
mov
mov
sbb
jns
xor
stos
loopne
pop
stos
test
popa
out
mov
enter
das
pop
dec
jb
addr16
xor
xor
or
in
push
push
cmpb
cmpsl
inc
mov
and
jg
movsl
jp
jb
cli
outsb
aad
cmpb
sqrtps
lock
xchg
inc
fimull
inc
aaa
sti
xchg
mov
sbb
jno
filds
test
das
int3
mov
cmpb
or
fwait
pop
leave
mov
pusha
cld
fs
call
stos
dec
mov
adc
adc
shr
sahf
out
ror
dec
arpl
test
negl
shll
jbe
call
in
jge
ss
mov
outsl
mov
mov
in
lea
decl
jecxz
xor
icebp
int3
jmp
xchg
cmp
dec
xchg
stos
and
mov
push
mov
es
mov
ficomps
cld
out
xchg
lods
sub
sub
push
call
lods
pop
das
lods
and
xorl
dec
fcomps
lret
and
dec
rcl
ffreep
cli
jb
test
add
cltd
xor
or
sbb
stos
ret
ficoms
mov
push
dec
or
flds
or
jbe
xchg
ss
and
lcall
mov
aad
cmp
dec
ljmp
mov
xchg
outsb
and
cmp
popa
pop
mov
leave
dec
xor
pushf
mov
inc
sub
xchg
jbe
push
jns
je
outsb
push
pop
jno
lea
inc
sub
jb
xchg
hlt
icebp
pop
pop
sbb
or
pop
inc
scas
in
lods
jecxz
dec
das
pop
and
push
xor
xchg
lret
cmpsb
dec
jnp
push
ficoms
movsb
and
pop
inc
mov
mov
xor
enter
insl
push
mov
fwait
xchg
sub
mov
insl
adc
cli
push
jbe
int
xchg
push
or
xor
jmp
xor
cwtl
dec
dec
pop
popa
inc
testb
xor
loop
mov
inc
push
cli
lahf
jo
stc
mov
or
clc
push
fldl
loopne
into
adc
xchg
jne
std
or
mov
aaa
negb
mov
out
loop
fldln2
out
xor
ror
outsb
cmp
jge
sbb
push
or
sub
out
jmp
jp
inc
inc
enter
mov
sbb
mov
sbb
jns
xor
xchg
std
lds
sar
sub
sahf
js
dec
mov
inc
js
insb
jp
xchg
inc
enter
mov
cltd
lods
nop
mov
mov
arpl
xchg
ds
jnp
jecxz
sti
cmp
test
cmp
push
int
rolb
stos
js
or
mov
add
xor
cli
xor
les
bound
mov
xchg
call
dec
sub
and
iret
outsl
arpl
dec
test
test
mov
or
xchg
jle
dec
inc
int
rcrl
popf
popa
sbb
mov
or
js
sub
or
repz
loopne
inc
loopne
test
std
fwait
mov
scas
cmpsb
fldcw
enter
aam
jae
cmc
xor
cmp
mov
mov
jmp
mov
sub
or
sti
sbb
fdivrs
out
and
xchg
jae
gs
stos
cmp
das
sub
jp
xchg
fisubl
addr16
subl
je
mov
mov
sbb
push
fistpl
xchg
movsl
cmp
loop
js
add
mov
mov
xchg
mov
lret
outsb
jg
mov
adc
ret
push
inc
mov
jmp
xchg
sbb
fistpl
mov
xchg
movlps
in
sbb
mov
sub
icebp
push
push
mov
sub
mov
gs
fsubr
push
push
sbbl
sbb
stc
add
or
stc
aad
lahf
hlt
cmc
sahf
jle
xchg
jle
inc
jo
mov
xorl
push
andl
call
jmp
jle
pushw
pop
mov
sbb
pop
add
icebp
xlat
push
loope
xchg
jmp
cmp
test
jecxz
adc
sub
sbb
out
insl
out
push
mov
loope
pop
lahf
lcall
dec
scas
mov
mov
adc
and
inc
mov
sahf
jno
mov
inc
lea
int
outsb
inc
push
and
popf
enter
mov
ss
xor
outsb
push
icebp
xlat
cmp
ja
enter
inc
ljmp
xchg
addr16
push
into
xchg
cmp
enter
iret
js
cmovge
and
pop
lods
lods
outsl
xor
jae
xchg
arpl
jne
cmp
mov
loope
cmove
fsub
movsb
inc
mov
mov
cmpsl
loope
adc
cmp
shll
lock
pop
adc
jbe
loop
outsl
mov
test
adc
stc
mov
lret
lret
and
xchg
leave
pop
or
add
mov
xchg
mov
scas
js
dec
in
push
lcall
dec
xchg
inc
das
inc
adc
sub
arpl
mov
cltd
lea
cmp
jecxz
push
leave
stos
call
lahf
aaa
xchg
or
jp
fsubp
add
stos
in
sbb
cmp
leave
ret
fs
call
clc
jg
dec
in
fisubrl
icebp
inc
fcoml
clc
cmpsb
mov
dec
cwtl
clc
xor
js
xchg
rolb
inc
adc
inc
pop
inc
sti
jno
xor
or
insb
sbb
gs
fsubrl
mov
cmp
jecxz
xor
push
sti
mov
jmp
js
inc
add
adc
push
icebp
hlt
dec
pushf
dec
popf
dec
imul
xchg
mov
mov
adc
push
xchg
push
xlat
je
lds
and
leave
cld
xor
mov
jne
cmp
fwait
inc
xorl
addr16
push
or
inc
mov
cwtl
flds
andl
cmp
sub
fwait
movsb
adc
sub
lcall
mov
les
push
sbb
sub
nop
sub
or
sbb
mov
les
mov
mov
sub
insl
mov
cmpsl
xchg
push
mov
das
xor
fcomip
xor
mov
stc
sub
fstps
inc
mov
ret
mov
dec
das
and
jmp
pop
jne
sbb
mov
popa
mov
jge
cmpsl
jb
push
data16
pop
cmp
inc
and
add
fld
icebp
mov
xchg
jg
push
push
mov
push
jbe
xchg
rclb
or
mov
cmpsl
xchg
int
fdivrl
dec
push
aas
sub
loop
xchg
jne
xchg
mov
bswap
repnz
or
test
notl
aaa
cmpsl
push
clc
inc
dec
add
gs
out
in
fldt
daa
mov
test
pop
pushf
shrb
mov
adc
mov
pop
dec
jbe
je
ja
fidivl
jbe
mov
sbb
jmp
xchg
cli
and
hlt
cmp
insl
test
cmpsl
jg,pn
int
jmp
fs
imul
int
aad
fsubs
fldcw
add
fcmovnb
and
sbb
pop
xor
pop
ljmp
jbe
jl
mov
cli
mov
mov
scas
xor
lods
jg
cmp
jno
insl
xchg
mov
jp
fs
insb
lea
loop
or
sub
out
xchg
outsl
repz
xchg
inc
mov
mov
loope
jne
arpl
call
arpl
or
int
mov
mov
lods
push
xchg
subl
stc
mov
das
clc
xor
and
cmpsw
jnp
lods
cmp
gs
xor
sub
inc
push
jp
pop
xchg
xchg
mov
sbb
mov
push
pop
lds
sbb
pop
js
pop
stos
cltd
mov
pusha
std
jb
mov
loopne
cmp
ret
cmp
sub
ret
adc
test
test
mov
xchg
jg
loopne
subl
inc
cmp
les
ds
dec
es
adc
jne
jl
jae
in
stos
mov
lods
mov
lcall
push
xchg
or
cmp
sub
pop
imul
xor
movsb
arpl
inc
xchg
lock
sub
inc
mov
data16
jge
int
repz
ljmp
stos
jge
test
sahf
cmpsb
int3
pop
ret
mov
push
push
jae
mov
leave
sub
iret
cltd
mov
insb
lds
imul
icebp
scas
push
fmuls
js
lods
inc
cmp
xor
lret
and
ja
xor
cli
cld
adc
rcrb
adc
mov
movsb
fdivrl
push
sbb
mov
mov
pushf
xchg
repnz
inc
add
mov
in
sbb
iret
or
jb
sbb
out
lcall
push
popa
jno
ret
add
pop
pop
push
jmp
or
in
sbb
jo
loope
or
ret
cmpsl
pop
fsubl
test
push
and
add
xchg
das
ret
xor
sbb
cltd
shrl
rorb
add
fstpt
xchg
fbld
and
in
out
jns
daa
sbb
or
fisubrs
inc
xor
fldl
mov
mov
dec
pop
mov
outsl
fcoms
mov
nop
int3
dec
ds
jno
out
rcll
lock
push
into
inc
iret
add
sub
cmp
ljmp
xchg
add
push
lods
push
pop
negb
add
pop
sbb
cmp
int3
sub
and
insb
imul
popf
push
es
loope
stos
xchg
xchg
div
or
xchg
ret
rclb
les
rolb
psubsw
in
jns
imul
push
stos
stos
iret
sbb
add
imul
adc
sbb
mov
out
push
clc
and
adc
js
out
es
adc
xchg
xchg
mov
mov
or
mov
jns
subl
lods
cltd
push
loopne
stos
jnp
cld
and
sbb
pop
adc
leave
mov
adc
ret
xor
imul
pop
pop
out
add
scas
push
in
mov
hlt
leave
cwtl
cmp
add
call
jo
ds
xorb
enter
inc
xchg
scas
pop
loopne
push
fsubl
cmp
movsl
dec
add
daa
ss
push
xor
fsubrl
xchg
mov
jb
fsts
aam
scas
jmp
test
lods
imul
mov
push
jbe
jl
sbb
dec
in
push
fsub
aas
push
aam
adc
jmp
mov
adc
icebp
lods
pop
imul
addr16
into
cmc
nop
mov
aad
clc
xchg
loop
add
je
test
xchg
and
pop
inc
es
shll
fcmovnu
adc
xchg
sti
pushf
push
in
bound
mull
rcrb
sbb
sub
mov
mov
push
adc
sbb
subb
jb
sbb
mov
push
add
out
push
inc
dec
sahf
pop
xchg
sub
mov
sbb
jecxz
cmpsl
push
push
dec
cmp
std
sbb
lcall
jp
in
ss
pop
jno
int3
sub
sbb
stos
pop
cmp
jo
jno
shlb
popf
data16
iret
insb
pusha
xchg
ror
outsl
inc
dec
push
pop
in
lret
fsubr
lret
inc
mov
push
mov
lahf
mov
pop
push
xchg
adc
mov
fwait
movsb
icebp
push
test
jl
mov
cld
imul
in
jno
hlt
js
mov
mov
pop
lock
arpl
cmpxchg
sbb
adc
inc
mov
push
out
jg
pop
xor
popl
push
cmp
leave
jmp
enter
and
or
add
aas
and
testb
sbb
arpl
jp
fsubrl
pop
rcrl
add
cmp
push
dec
or
cli
mov
sbb
cli
adc
in
mov
test
adc
sub
xlat
dec
icebp
dec
xchg
mov
inc
popa
mov
pop
cmpsl
add
jle
inc
shlb
cltd
lcall
sbb
pop
jmp
mov
lahf
inc
pop
arpl
mov
test
aaa
mov
or
mov
hlt
int3
push
rcr
les
inc
add
ret
loope
pop
xchg
scas
fstl
cmpl
mov
es
add
int
and
cmpsb
ret
pop
add
adc
pop
jmp
test
adc
test
adc
adc
add
pop
jmp
jge
pusha
adc
cld
shl
roll
loope
and
leave
fdivrl
or
dec
push
ret
lret
jp
and
jg
cmp
addb
loopne
lea
mov
iret
dec
cmc
jmp
into
dec
popf
and
lahf
dec
push
jno
fs
xchg
mov
xor
pop
jb
fs
dec
cli
rcrb
or
adc
add
shll
dec
and
mov
fstps
outsb
shl
pop
push
jns
and
add
dec
cmp
pop
dec
fisubs
inc
in
mov
nop
in
subb
fidivrl
mov
in
inc
rorb
enter
xor
cs
sub
push
mov
or
faddl
lods
test
mov
fsubl
pop
shl
jecxz
int3
mov
and
xor
orl
notl
push
test
adc
cltd
gs
xlat
movsl
lock
incb
sbb
xchg
dec
xorb
es
push
in
sbb
sarl
mov
jg
test
fsub
insb
xor
sar
es
mov
push
ret
cmpl
repnz
lds
add
inc
sbb
jp
insl
sub
aad
inc
clc
stos
out
push
stos
rcll
data16
lret
mov
pop
cmc
cmp
xor
mov
mov
in
in
pushf
xchg
jae
pusha
imul
sbb
outsb
out
xlat
pop
mov
test
fiaddl
xchg
or
shlb
pop
push
xchg
push
lock
lea
movsb
adcl
into
and
xchg
dec
and
mov
adc
sbb
xlat
or
pusha
and
add
lcall
mov
inc
mov
int3
ja
ret
sub
or
adc
mov
mov
iret
inc
call
jns
mov
icebp
testl
imulb
sbb
push
xor
retw
sub
pop
sahf
int
lcall
mov
mov
loopne
loop
inc
fisttpll
movsl
sub
xchg
fistps
xchg
insb
pop
add
cmc
jl
xchg
and
fisttpl
dec
in
or
sti
mov
or
cmp
in
sbb
insl
das
or
aam
push
mov
insl
cmp
cmp
pop
mov
jmp
in
fmull
aad
and
mov
scas
xchg
shlb
scas
lret
jge
sti
pop
cs
sahf
jg
mov
fldl
jnp
dec
jmp
mov
aad
cmp
add
pcmpeqd
lahf
xor
nop
loope
inc
mov
das
jbe
or
add
cmp
sbb
dec
rdtsc
sub
lock
pop
xchg
out
ljmp
xchg
fs
outsb
push
mov
pop
xor
fldl
iret
cs
inc
test
stos
dec
sub
push
mov
jg
imul
cli
pop
popa
cmp
sbb
repnz
stos
in
inc
pop
sbb
fidivs
shlb
pop
lret
lds
add
cmp
dec
push
popf
cwtl
pop
jae
dec
addl
mov
loopne
cmp
push
stc
imul
adc
popfw
push
addb
iret
iret
pop
fstp
std
scas
divb
ss
adc
push
cmp
pop
and
lods
or
mov
arpl
rcll
js
pop
mov
das
nop
data16
jnp
lods
adc
mov
jo
xor
out
movsl
xor
scas
idiv
add
jmp
cmp
adc
pop
das
mov
repnz
jmp
or
mov
sahf
mov
orl
jbe
jo
push
sub
adc
idivb
cmpsl
xor
inc
xor
pop
fucomi
mov
mov
call
jle
push
sbb
int
mov
lahf
mov
mov
lea
sub
mov
loop
lret
cmpsl
sti
les
je
sti
andnps
into
movsl
adc
xor
imul
jl
sbb
xchg
sub
jge
mov
pop
fucomip
insb
movsl
outsb
mov
movsb
pop
mov
call
dec
repnz
dec
cmc
lods
fisubrl
bound
mov
pop
cmp
test
int3
fnstenv
movsl
movsl
sub
in
leave
push
rorb
inc
push
pop
iret
xchg
out
inc
add
add
arpl
ljmp
mov
push
into
and
cli
and
xchg
jg
cmpsb
pop
call
les
xchg
pop
sbb
sbb
mov
cmc
sarb
pop
push
and
sbb
mov
xchg
sbb
mov
ret
cltd
dec
sub
dec
adc
cs
pslld
jmp
push
lods
xor
ficoml
and
lods
sub
out
mov
push
popf
and
jnp
repz
cmp
dec
push
push
dec
stos
pop
mov
mov
dec
cli
mov
cmp
mov
jle
push
mov
pushf
xor
nop
sahf
pop
xchg
cmp
repz
iret
inc
pop
dec
js
mov
in
stos
or
lea
push
pop
pop
insl
or
fucomip
push
inc
add
push
xor
hlt
inc
pop
rep
dec
push
push
mov
mov
es
cmp
lods
xor
cmpb
lahf
stos
daa
ret
punpcklbw
unpckhps
cmp
and
fwait
inc
loope
cmpsl
fwait
xchg
movsb
push
inc
lcall
jbe
dec
test
add
daa
test
jne
fs
aad
sahf
insl
lods
sbb
stos
xchg
mov
fisttpl
xor
nop
dec
js
test
in
xchg
cltd
addb
xchg
inc
dec
mov
jle
mov
mov
stos
rcll
rcr
jl
or
les
movsb
inc
jp
pop
and
pushf
out
enter
or
mov
or
inc
fcomps
je
mov
decl
sub
add
arpl
jle
xchg
push
sbb
push
push
aas
clc
cmp
mov
js
xchg
and
icebp
icebp
das
mov
and
and
adc
push
cmp
faddl
shll
jb
dec
imul
xor
out
mov
out
pop
popf
mulb
push
mov
and
adc
mov
sbb
or
iret
call
negl
ss
iret
or
mov
aas
pop
and
or
cmpsl
dec
xchg
popf
adc
and
cmp
sarl
in
lods
das
xor
mov
pop
xor
pop
mov
cmc
arpl
es
rep
or
mov
cmp
cmc
hlt
icebp
call
mov
mov
mov
jns
cmpsl
das
outsl
adc
sbb
adc
int3
mov
cmp
mov
add
faddp
and
inc
sarb
sbb
mov
cmc
cmpsb
lret
xchg
dec
jno
xor
add
fldl
xlat
fs
lcall
cli
cmpsl
jmp
jmp
decb
ja
movsl
jmp
dec
jge
cmp
push
or
data16
dec
lret
lds
push
lret
pop
js
scas
js
cmc
mov
sbb
jmp
aas
cld
adc
pop
shl
js
in
outsb
lods
int
movsb
in
mov
add
scas
loope
mov
jg
andb
push
push
aad
iret
jno
xor
and
push
push
mov
shl
xor
fdivs
ljmp
xchg
and
cwtl
lea
jnp
out
mov
sub
sbb
mov
lea
lods
iret
shlb
in
fimuls
sbb
pushf
enter
mov
and
jge
bound
rcr
pushf
lea
push
addr16
cli
and
outsb
jae
jnp
fsubs
sub
or
setb
cltd
pop
adc
lret
or
or
fnstsw
push
push
lock
call
or
fcoms
aam
sub
xor
fcoms
jecxz
xor
push
pop
jecxz
pop
daa
jmp
adc
daa
jmp
mov
stos
sbb
or
movsl
sub
js
aas
ljmp
sbb
mov
mov
push
pop
jbe
mov
subl
adc
mov
sub
adc
cmpsl
aaa
push
out
adc
movsb
cmp
lcall
pop
aaa
jge
aam
fyl2x
mov
or
mov
vsqrtps
push
mov
sbb
out
add
add
pop
jge
mov
mov
lods
mov
and
stos
out
rorl
xchg
jbe
std
and
std
and
loopne
lock
cmp
push
xor
inc
jb
or
bound
lcall
out
dec
pop
movsl
push
mov
nop
dec
cmpsl
add
cmp
insl
or
jle
sub
mov
jl
nop
fwait
jns
pop
in
in
sarb
repz
push
cld
cmpsb
test
xchg
outsl
mov
int
mov
xchg
shl
xor
mov
jle
adc
das
std
lds
in
inc
pop
and
push
sbb
sti
rorb
jo
mov
pusha
mov
add
sub
jl
nop
mov
jne
pop
dec
mov
mov
sub
sbb
insb
cmp
xor
add
lods
in
lcall
pop
jae
adc
lret
clc
inc
cmpsb
fidivrl
adc
ret
rclb
prefetchw
cltd
ljmp
mov
insb
mov
xchg
inc
decl
push
xchg
cmp
jmp
shl
lock
jmp
inc
or
sub
enter
mov
arpl
adc
mov
out
fsubrl
ljmp
dec
mov
inc
lcall
add
rclb
shl
dec
pop
adc
nop
push
mov
adc
les
fcomps
dec
aaa
leave
push
movsl
mov
insl
nop
mov
scas
jmp
dec
dec
iret
sbb
xchg
rolb
std
mov
cmp
sti
iret
sbb
mov
dec
test
or
scas
ja
hlt
jae
or
data16
pop
cmp
xor
fsubs
or
or
and
outsb
movsl
outsl
setl
pop
sub
pop
cmp
je
and
mov
inc
repnz
imul
xor
or
jns
cmp
xor
les
ret
sbb
or
or
repnz
xchg
adc
das
adc
adc
mov
insl
movsb
dec
inc
stc
jg
scas
mov
or
xchg
ret
sbb
in
rcrw
dec
xor
lahf
adc
out
fs
callw
cltd
pop
pop
aad
cmp
in
pop
loope
test
push
mov
or
jbe
in
outsl
xchg
rorb
pop
adc
cmpsl
sub
pop
or
cmp
xchg
push
xor
lahf
add
cli
iret
or
dec
dec
ja
sub
cs
jno
xchg
subb
cmp
out
cltd
pop
mov
fsubs
stos
push
xchg
xor
mov
inc
dec
pop
lock
cmp
mov
pushf
out
lea
push
inc
dec
xchg
dec
inc
or
or
hlt
xchg
add
ja
mov
clc
jbe
jmp
rcll
stos
jge
xor
jbe
sub
adc
and
add
mov
sub
ds
mov
mov
shll
test
dec
push
mov
filds
xchg
jbe
fs
out
xor
cmpsl
mov
jle
subl
dec
dec
add
sub
mov
sarl
mov
xor
leave
or
out
jecxz
int
sbb
adc
xchg
ljmp
ret
or
mov
pop
insl
lahf
lds
aaa
lret
aad
add
sbb
dec
das
mov
sti
mov
and
mov
jl
adc
adc
cmpsl
and
aad
movl
xchg
dec
shr
push
ss
and
daa
lret
add
cmp
pop
out
mov
inc
lcall
mov
fistpll
xchg
ret
pop
mov
sar
ss
cmp
or
fdivrl
sbb
movsb
std
pop
xchg
iret
sarl
inc
xchg
jge
call
stos
push
aad
stos
call
jae
inc
js
std
xchg
addr16
ror
subl
push
outsl
dec
out
mov
aas
daa
or
inc
and
xor
icebp
lods
cmc
mov
or
mov
into
xor
pop
mov
mov
mov
sub
enter
sbb
hlt
repz
addr16
outsb
into
inc
cmpsb
rorl
cmp
or
push
xor
out
mov
icebp
fists
sbb
imul
test
sbb
movsl
popf
dec
je
cvttps2pi
mov
mov
add
inc
lock
xchg
push
mov
cmp
in
xor
sub
das
and
aaa
or
cmp
push
gs
ds
pop
mov
xchg
in
into
pusha
or
pop
inc
in
lds
add
push
push
stos
inc
cmp
cwtl
leave
test
add
cmp
pop
aam
inc
sbb
imul
and
andb
mov
or
jl
and
add
inc
adcb
pop
stos
xor
and
shrl
xor
or
ds
scas
jnp
cltd
aad
xchg
hlt
jb
pop
mov
xor
clc
arpl
cld
jae
sub
inc
ds
xchg
mov
xor
test
push
test
sbb
aaa
push
sti
mov
or
or
roll
lea
stos
std
xchg
mov
jecxz
test
mov
out
sbb
lahf
pop
adc
popf
jb
mov
xchg
popf
je
imul
inc
mov
arpl
out
aas
push
sbb
sti
jo
jbe
ss
and
sahf
push
pushf
mov
call
cmp
mov
psllq
scas
cmp
mull
xor
sub
add
int3
ljmp
dec
fwait
or
dec
mov
cmc
push
xchg
push
jecxz
add
int3
mov
cmp
test
dec
dec
cs
pop
popf
adc
adc
mov
repz
xchg
sarb
dec
in
pop
out
jle
movsl
cmc
inc
push
push
pop
mov
enter
pop
stc
push
jno
arpl
jg
inc
mov
ljmp
test
lods
out
gs
das
pop
mov
loopne
idivb
das
jae
cmpsb
jno
xchg
les
push
lea
mov
aaa
iret
test
cld
sbb
data16
dec
push
daa
in
pushl
mov
fimuls
in
pop
jo
sti
add
mov
decl
pop
add
and
test
adcl
pop
pop
test
push
lfs
pop
jnp
dec
xor
aaa
and
cli
mov
cmp
repz
ss
rcrb
xorl
lret
fwait
dec
inc
push
jno
test
rorb
negb
sarb
std
push
cmpsb
adc
shl
rclb
sub
xchg
mov
and
or
push
cmp
pushf
xchg
sub
mov
and
dec
sub
fnstsw
adc
das
popa
shl
imul
inc
loop
testb
mov
xor
xor
ss
pop
mov
sub
repnz
inc
jmp
jns
sbb
test
or
sub
pop
outsl
or
pop
or
popa
dec
jae
jns
add
loop
ss
push
loopne
jecxz
cld
insl
sbb
test
out
daa
pushf
ret
jb
xchg
loopne
js
repnz
lock
pop
mov
jae
pop
imul
and
loopne
mov
dec
and
or
arpl
lcall
and
inc
push
fidivrs
outsl
into
movsb
sbbb
and
sub
cwtl
pop
xchg
rorl
out
clc
in
stc
dec
imul
addb
xor
faddl
lods
fstps
xchg
lea
das
or
mov
xor
repz
xor
cmp
xchg
sarl
inc
mov
mov
lock
icebp
aas
mov
pop
jno
movsb
loop
jl
outsb
rolb
push
adc
dec
outsl
loop
sub
mov
dec
mov
cmc
adc
pushf
or
push
xchg
pop
cmp
cld
dec
push
cmpsb
push
dec
lahf
ljmp
cld
in
aad
sarl
or
mov
adc
pop
or
ljmp
jmp
enter
cmp
dec
push
cli
sub
pop
test
dec
frstor
xor
nop
popa
dec
cmpb
add
aaa
lock
out
out
movsb
ret
pop
ret
mov
cmp
mov
cmp
jae
out
mov
xchg
pop
in
inc
jns
sbb
or
xlat
lret
adc
cltd
rclb
xchg
push
shll
inc
sbb
lret
jb
aaa
push
call
imull
sbb
mov
int3
adc
add
xchg
cmp
stc
scas
cs
imul
fistl
fldenv
pop
push
mov
ror
icebp
in
and
shl
rcpps
sarb
pop
mov
cmp
inc
jne
std
sub
stos
sbb
cmpsl
dec
leave
cmp
dec
daa
lret
jmp
push
xchg
cmpsw
xchg
or
jmp
sbb
push
fnstcw
xlat
ds
testw
negl
icebp
sti
sub
mov
jo
sub
cld
pop
or
sbb
jo
clc
nop
pop
test
out
mov
ret
cmp
adc
push
mov
andl
xchg
cmpl
rolb
inc
cwtl
jmp
jl
jae
jo
sub
aam
mov
push
cmpsb
je
ret
shlb
addr16
cli
arpl
lods
jmp
inc
lret
sub
js
inc
mov
add
addr16
dec
loopne
lds
push
push
aas
ret
sbb
sub
xorb
loopne
inc
ds
pop
jmp
lds
cwtl
out
pushf
movsl
hlt
or
rolb
mov
add
adc
repz
pop
bound
xchg
cs
adc
icebp
mov
dec
xchg
cmp
cmovne
imul
xchg
jnp
ret
push
addr16
js
pushl
inc
ljmp
ss
jo
and
mov
adc
cmp
scas
js
in
cld
xor
hlt
dec
sbb
jmp
pop
lock
nop
cwtl
loop
cmp
and
rolb
push
xlat
dec
cmc
mov
lods
mov
lcall
inc
xor
hlt
xchg
mov
and
mov
pop
pop
push
mov
jg
push
movsl
scas
pop
arpl
je
pop
xchg
inc
pop
fidivl
mov
inc
add
subl
loop
cs
fs
push
add
lods
inc
xchg
movsb
daa
popl
add
or
es
mov
dec
jne
xor
xchg
sahf
or
bound
adc
repnz
mov
sub
jns
mov
xchg
dec
xor
movb
push
lea
or
push
insb
fdivr
or
mulb
popf
xchg
push
mov
lahf
in
mov
out
hlt
es
ret
push
fcomip
inc
rcr
int3
and
out
imul
xchg
lock
mov
ret
iret
pop
outsl
loope
arpl
mulb
jbe
stc
mov
cmpl
push
popa
rclb
int
inc
mov
mov
popf
and
dec
adcl
pop
dec
and
lods
and
fistpll
andl
ljmp
xchg
add
or
test
faddl
hlt
nop
inc
shl
inc
pop
mov
jge
sub
in
roll
stos
les
ljmp
push
out
popa
ljmp
int
xchg
mov
push
sbb
ss
xlat
jae
fcomps
popf
and
movsb
push
es
arpl
aad
xchg
sub
fucomip
mov
loopne
dec
hlt
movsl
mov
mov
dec
cmp
cwtl
lret
sarl
loopne
lahf
shll
gs
insl
push
xlat
push
push
lret
inc
insb
lcall
mov
test
popf
lds
inc
mov
dec
ljmp
mov
je
dec
mov
ds
mov
mov
push
in
pop
clc
pop
dec
jnp
imul
pop
xchg
mov
cwtl
xorl
lods
adc
sbb
add
xchg
imul
xor
gs
cmpsl
pushf
inc
inc
movsb
mov
or
lea
aaa
fstpt
and
pop
push
adc
inc
mov
xchg
lods
lret
scas
scas
popf
pop
fdivl
adc
shrl
lods
pop
inc
pop
mov
stos
test
add
loop
mov
fwait
cmpsb
je
mov
mov
jne
mov
fbstp
xchg
adc
in
test
repnz
jno
adc
add
push
call
shl
add
mov
jae
gs
sub
in
add
mov
add
out
sub
mov
xchg
ljmp
adc
inc
sbb
nop
shrl
addr16
mov
adc
dec
gs
lock
fisubs
leave
pop
sbb
ret
mov
ljmp
inc
stos
jg
dec
fxam
cmpsl
and
xor
fidivrs
cmp
mov
out
jb
filds
rcll
sub
stos
fidivs
sarb
cmpsl
in
mov
mov
jl
shlb
mov
adcl
pop
fadds
adc
js
lea
sbb
sbb
movsb
int
testb
jmp
les
xchg
roll
mov
sub
push
sbb
hlt
insl
jbe
cmp
in
loop
fs
mov
xlat
push
pop
rcrl
xchg
push
adc
stos
mov
std
lcall
loope
xor
movsl
cmp
mov
cmc
sub
mov
mov
hlt
cmp
mov
push
xor
ss
jbe
std
aam
cwtl
pop
and
cmp
mov
jmp
or
mulb
dec
pushf
mov
or
imul
jecxz
pop
jl
push
cmp
out
sub
jg
mov
sti
fistps
lods
sub
push
xchg
test
pop
out
mov
mov
pusha
setne
pushf
out
out
fwait
fwait
jmp
mov
mov
inc
das
pop
fmul
lret
sbb
or
fisubrl
add
pop
adc
or
stc
dec
scas
and
jno
inc
hlt
in
jne
pop
mov
push
mov
mov
xchg
mov
adc
xchg
xchg
lcall
mov
pop
cld
pushf
jb
out
fdivrs
stc
lock
jle
mov
shrl
inc
mov
mov
movsb
movsb
in
inc
inc
add
add
push
pop
sub
aas
cmp
dec
xor
insl
inc
mov
cs
push
add
push
mov
inc
inc
xchg
and
in
enter
aaa
or
xchg
rcrl
icebp
xchg
cmc
dec
and
inc
stos
pushf
sub
or
mov
in
inc
aas
loopne
dec
outsl
pop
cmp
fimuls
fwait
js
or
loop
mov
mov
inc
xchg
fcom
pop
fbld
dec
ret
and
aas
xchg
inc
mov
mov
in
adc
and
or
mov
jbe
nop
rcr
jbe
push
andb
mov
jo
sbb
sbb
repz
push
sarb
mov
imul
xchg
test
inc
idivb
lods
and
pop
mov
jg
mov
inc
sub
imul
rclb
in
xchg
dec
sti
jl
inc
rcrl
cmpsb
ljmp
into
mov
repnz
add
cmpsl
ja
out
dec
cmp
mov
mov
orl
xchg
cmpsb
ss
sbb
jbe
enter
lcall
or
test
aas
lds
pop
and
xchg
xlat
xor
xchg
sbb
dec
mov
test
pop
movsb
lods
aad
push
add
and
stc
daa
mov
sbb
cld
pop
in
rcrl
fbld
sub
inc
pop
sub
cld
push
lods
adc
lds
xchg
jge
fwait
xor
sub
or
scas
aas
mov
xchg
cs
sti
jecxz
decl
mov
adc
stc
das
pop
jbe
dec
xchg
std
out
pusha
fwait
add
rorl
add
xchg
cbtw
sub
jmp
icebp
pop
fiadds
push
pop
xor
push
call
int3
sbb
insl
adc
jge
xchg
mov
jmp
inc
sarl
in
mov
test
jns
pop
or
adc
loopne
xor
push
leave
sbb
mov
xchg
mov
rorl
xchg
push
or
stos
fmuls
arpl
xor
dec
icebp
sbb
nop
je
mov
mov
das
jl
pop
add
lods
scas
mov
popf
push
jmp
jmp
mov
mov
cmpsl
fs
pop
adc
inc
cmp
imul
cmp
mov
adc
adc
adc
leave
cmpl
xchg
cmp
and
or
and
mov
fstl
data16
lret
cmp
rorb
or
aas
mov
loopne
arpl
dec
test
in
jge
xchg
test
sbbl
out
mov
movsb
sub
jp
dec
xlat
add
or
mov
sub
ffree
mov
jg
sub
inc
jecxz
ljmp
sbb
in
dec
dec
or
mov
lret
mov
cmp
movsl
mov
lock
or
jnp
das
hlt
bsr
jmp
fdivrp
mov
jg
lahf
in
jno
loop
push
out
lret
xor
pop
mov
push
mov
adc
mov
ss
pop
test
mov
loope
pop
in
es
add
cld
jnp
mov
stos
jnp
cmc
addr16
mov
push
das
pop
push
outsb
in
dec
and
shl
xorl
imul
push
ljmp
ret
ss
call
push
mov
cltd
loope
sbb
push
sbb
jle
stc
ljmp
jb
xor
xchg
ret
outsb
leave
cmc
enterw
xchg
enter
push
dec
jecxz
aaa
pop
adc
inc
out
jle
in
je
dec
loopne
shrb
stc
test
xchg
in
sub
lods
pop
push
stc
xchg
inc
lock
mov
movl
dec
xchg
xchg
in
sbb
mov
lds
sbb
cmpsb
imul
gs
in
sti
imul
push
ds
push
and
sub
int
inc
add
or
test
push
xchg
pop
push
outsl
dec
ret
sbb
xchg
or
cmp
add
sub
inc
std
test
or
cld
mov
in
movsb
ds
jg
sub
pop
pushf
jge
cwtl
or
clc
mov
mov
xor
dec
cmp
xor
inc
mov
push
jno
clc
jg
push
dec
fildl
xchg
loop
jo
mov
dec
inc
into
mov
repnz
mov
leave
stos
shll
sub
push
out
inc
nop
push
add
cmp
cs
scas
imul
cmp
cmp
push
add
nop
cmp
and
mov
mov
in
int
adc
add
push
cmpl
xchg
xchg
add
outsb
xchg
mov
cwtl
pop
inc
mov
push
adc
scas
js
xchg
ret
cmpsl
test
lcall
mov
mov
flds
xor
mov
sbb
in
shlb
ja
jecxz
xchg
xchg
aad
std
xchg
mov
jl
inc
cltd
sbb
pavgw
fs
mov
inc
mov
sbb
pop
xchg
mov
mov
ds
push
cld
mov
lcall
fsubr
lret
or
sub
mov
dec
mov
cwtl
dec
sbb
mov
test
mov
or
sbb
or
pop
clc
addl
xor
shlb
jo
scas
daa
sar
shrb
add
dec
xlat
and
iret
sahf
mov
jg
push
aad
adcb
out
popa
subl
jb
pop
insl
xchg
adc
mov
or
and
insl
xchg
mov
out
ss
adc
test
push
int
xchg
hlt
jge
push
movl
jns
jo
hlt
popf
cmp
mov
std
jp
adc
lea
or
ret
sar
sbb
inc
xor
adc
shl
push
push
pushl
add
lret
stos
jge
movsl
jne
dec
mov
mov
mov
push
stos
sub
imul
sub
adc
cld
cmpsl
jecxz
push
sar
adc
dec
stos
out
and
in
pop
dec
lret
cmp
in
fbstp
fstpl
scas
jmp
lds
imul
mov
test
js
movsl
jecxz
xor
pop
pop
shlb
mov
mov
xor
dec
inc
arpl
and
xchg
std
adc
es
fadds
push
les
push
push
sub
mov
push
aad
mov
in
jo
push
call
mov
mov
ret
fs
push
outsb
mov
jge
pusha
fistl
xchg
and
enter
cmp
or
rolb
test
lds
sub
sbb
add
add
shrd
cmpsl
xchg
in
inc
xorl
out
xor
xchg
xor
inc
cmp
hlt
cs
fcoms
les
in
scas
cs
push
repnz
test
sbb
and
jno
pusha
jle
daa
fbld
pop
outsl
dec
xor
fcompl
fnstcw
sub
mov
dec
adc
and
xchg
je
xchg
icebp
es
mov
dec
push
sbb
sub
sub
cli
cltd
mov
sub
xor
lock
xchg
pop
sbb
xor
lret
jne
test
add
and
mov
adc
das
cmc
add
scas
test
jl
cmpl
jae
fnsave
sti
and
xchg
mov
lret
rcr
insb
pop
cld
filds
xchg
push
xor
cmp
dec
xchg
or
push
fdivp
ljmp
enter
jnp
scas
mov
scas
add
hlt
pop
inc
or
inc
jl
dec
adc
shl
test
sub
sbb
inc
scas
xor
gs
xor
out
mov
scas
jnp
in
add
arpl
push
jbe
cwtl
pop
stc
jbe
lcall
jnp
scas
pop
in
pop
aas
or
mov
mov
mov
pop
xchg
lret
cmp
notl
or
sub
cs
cmpsb
call
scas
dec
cmp
jl
sarb
mov
add
loopne
lea
jne
sbb
and
push
insl
mov
jae
mov
adc
movsb
nop
add
jmp
les
add
je
sub
scas
lret
in
pop
push
stc
mov
iret
stos
dec
in
ficoms
lahf
shlb
pushf
xor
cmpsb
shll
lds
fisttpll
pop
test
fwait
ja
lahf
jns
jmp
mov
call
add
out
daa
sub
adc
outsb
insl
xor
inc
movsl
call
mov
adc
mov
out
rorl
jp
popf
add
or
test
cld
dec
jo
fwait
mov
sbb
push
jne
das
dec
mov
add
mov
js
insl
mov
sub
mov
push
inc
insl
cld
and
xorl
bnd
jnp
and
xchg
lret
jg
adc
fadd
push
adc
jecxz
adcb
scas
cwtl
je
iret
adc
daa
cltd
mov
decb
fwait
pushf
jle
notb
sbb
xor
lods
das
inc
and
aaa
and
dec
insb
mov
add
pop
out
push
inc
lds
push
jbe
es
xchg
mov
gs
or
mov
stc
xchg
stc
lods
out
insb
inc
mov
adc
adc
adc
int3
bound
xchg
mov
ljmp
xchg
add
pushf
adc
mov
sbb
cli
jecxz
test
mov
xchg
rcl
stos
mov
test
inc
sub
jns
decl
fists
dec
dec
faddl
jb
stos
sbb
xor
sbb
lds
mov
les
dec
sbb
call
and
sbb
mov
mov
sbb
addr16
xchg
xor
dec
jnp
adc
es
scas
sahf
mov
stc
push
xor
lret
sub
adc
cmp
jb
out
rorl
jne
xchg
push
test
inc
push
movswl
mov
cmp
xchg
mov
cmp
xchg
sbb
mov
add
out
inc
lret
imul
push
pop
xchg
dec
test
dec
dec
gs
test
mov
clc
outsl
add
mov
mov
out
adc
sub
insl
xchg
stos
das
movsl
jnp
mov
scas
mov
push
imull
or
pop
lock
mov
in
rol
int3
xchg
insb
sbb
mov
paddsb
mov
mov
ret
repz
es
outsl
xchg
xchg
fs
loop
mov
je
sbb
enter
call
mov
imul
push
pushf
std
popa
sub
mov
jle
xchg
xchg
mov
in
gs
push
ret
in
sub
imul
jbe
push
pop
dec
sti
hlt
movl
es
loope
popf
push
or
mov
pop
jle
xchg
data16
iret
pop
and
les
lods
testl
mov
jno
pushf
in
xchg
gs
adc
xchg
testl
cmpsb
dec
aaa
cmpsb
push
fsts
insl
gs
jmp
inc
out
cli
es
pop
dec
and
jge
pop
mov
fnsave
inc
push
imul
xchg
push
jle
gs
cmp
push
mov
pop
mov
push
mov
out
inc
xchg
push
sbb
sahf
xchg
add
cmc
out
lret
dec
mov
and
rorl
mov
push
aam
daa
dec
loopne
or
and
pop
cltd
inc
mov
cmc
mov
lock
mov
mov
outsb
iret
mov
jg
xchg
push
subb
or
loopne
arpl
adc
mov
jnp
fstl
repnz
lcall
cltd
cmpsl
mov
rorl
fnstcw
data16
jne
hlt
mov
and
pop
xor
xor
loope
imul
orl
arpl
pop
add
or
mov
mov
movl
stc
ljmp
fs
jl
fcomip
call
jmp
and
insb
repnz
inc
jbe
scas
lret
insb
lods
pmulhw
pop
mov
dec
dec
pop
dec
movsl
or
stc
pushw
test
outsb
pop
leave
add
add
or
arpl
jp
and
insb
sub
inc
push
sub
add
push
sbb
mov
jmp
jl
mov
out
cmp
mov
cmp
mov
test
daa
lds
jo
mov
cmp
jb
xor
jl
dec
or
loope
arpl
push
push
push
pop
out
lcall
popf
ss
adc
aaa
dec
aas
and
add
sar
enter
fadd
in
ljmp
pop
dec
jae
mov
adc
jmp
or
mov
fldenv
pop
aad
leave
in
dec
mov
mov
bound
push
lods
xorb
mov
jns
into
in
cltd
int3
jns
dec
cmp
cmp
lea
loopne
int
das
add
pop
jmp
mov
fmuls
popf
cmp
mov
adc
jo
data16
and
xor
xchg
pop
dec
jmp
jge
sbb
out
add
xchg
push
jo
clc
mov
dec
andb
fbstp
rcll
push
inc
mov
xchg
dec
stc
xor
aad
cmp
fisttpll
sub
xchg
and
fcomps
sub
xchg
popa
xchg
inc
mov
ss
sub
jo
lahf
jmp
push
rorl
sbbl
popa
mov
loope
pusha
in
or
xchg
icebp
xchg
in
push
lea
jnp
adc
jns
mov
mov
shll
out
xor
push
push
xor
inc
adc
inc
dec
inc
push
fistl
popf
sub
inc
lock
xchg
xchg
inc
push
xchg
jno
adc
sub
push
insl
mov
xchg
add
mov
sbb
aam
in
rcl
mov
dec
push
loop
aam
dec
push
lcall
mov
ret
xchg
jb
sbb
movzbl
pusha
cmpl
sbb
ret
fildl
mov
xor
lods
sub
lcall
test
call
andb
xor
sbbl
sarb
addr16
pushf
pop
and
std
jl
fbld
pop
rorl
sub
xchg
pop
mov
data16
inc
jbe
scas
fmuls
pop
int3
mov
jns
imul
bound
dec
cmp
int3
push
inc
pop
in
xchg
out
mov
push
lcall
mov
leave
adcl
rcll
fistpl
xchg
sbb
push
inc
clc
test
cmp
dec
imul
jne
push
cmc
shlb
inc
mov
sub
jo
out
loope
lods
lods
out
inc
fbld
or
inc
mov
xchg
pushf
hlt
je
int3
js
ljmp
inc
xchg
push
stos
push
ljmp
xchg
inc
stos
push
pop
or
mov
out
aas
fs
jp
adc
pop
pop
aaa
loope
jg
adcb
adc
ss
dec
loope
sbb
cmp
jne
cmp
lea
sbb
xor
push
jae
mov
es
cli
mov
and
in
imul
xor
mov
push
pop
dec
in
adc
fiadds
into
imul
mov
sbb
pop
popf
dec
xor
gs
test
insb
loope
mov
dec
xor
xchg
pop
cmp
xchg
into
push
cmp
mov
cld
xlat
and
pop
sbb
push
daa
movsb
sbb
mov
mov
mov
pop
loopne
mov
loope
jp
fmul
add
jl
sbb
cmp
mov
xchg
shll
into
push
lea
movsb
inc
dec
popa
jno
scas
add
xchg
xor
pop
and
ret
in
lock
ficomps
out
mov
fists
outsl
dec
cld
pop
imul
lret
sbb
aam
faddl
push
aad
sbb
or
cwtl
mov
movl
fstl
loopne
pop
mov
mov
sbb
mov
dec
les
dec
mov
into
and
les
incl
cmp
test
cmpl
out
push
out
sahf
insb
lcall
or
lock
sub
push
add
xchg
pop
insl
test
mov
ret
sub
cltd
pushl
add
cmp
cmp
in
sub
cmp
daa
out
cmpsl
les
inc
and
inc
push
aas
cmp
xor
cli
scas
call
mov
les
cmpsl
push
xchg
cmp
lock
inc
sbb
mov
mov
scas
pop
mov
sub
mov
sarl
add
std
dec
data16
lock
stos
cwtl
je
or
dec
ja
dec
jle
xor
push
pusha
jo
out
stos
lock
push
xorb
push
outsb
sti
lret
test
and
xor
ret
ljmp
imul
add
or
xlat
incb
repz
mov
pop
int
and
jl
xor
add
jo
xchg
rorl
dec
inc
data16
je
push
inc
inc
jbe
mov
push
cwtl
xchg
push
mov
push
outsl
js
lock
push
repz
loopne
pop
loop
sbb
movsb
add
sbb
lahf
adc
pop
xor
jmp
jns
jle
or
jp
lock
aad
add
fs
sarb
xor
je
fdivl
cld
mov
imul
insb
push
out
dec
push
popf
dec
add
pop
or
pop
dec
repnz
imul
mov
xor
cmp
imul
xor
out
or
or
jg
sub
adc
jo
cmpsl
inc
sbb
aas
mov
jne
aas
stos
fldl
mov
inc
out
jne
pop
insl
adc
aaa
and
xchg
cmp
loopne
xchg
xor
sete
and
icebp
mov
pop
stc
push
push
rorl
lahf
push
sbb
push
adcb
pop
cmp
call
pop
mov
dec
or
inc
xor
out
lahf
push
mov
ficompl
sub
push
jo
adc
aad
ret
sbb
push
push
lret
push
push
dec
gs
jge
add
jmp
cmpb
jmp
jno
in
mov
fldcw
sub
les
lods
inc
in
int
out
adc
sarb
pop
imul
mov
adc
hlt
cmc
nop
incb
daa
sub
imul
les
fldt
cld
fildl
jae
pop
ficompl
insb
adc
loope
fs
gs
fimull
sti
jnp
inc
jge
clc
pop
cmp
pop
cwtl
in
into
or
jno
jns
fldenv
in
mov
push
iret
das
imul
add
popa
cmp
stos
insl
sar
mov
sbb
fisttpll
pop
cs
mov
insl
sbb
sbb
cld
or
cli
adc
shl
stc
test
push
jg
pusha
mov
aaa
iret
jno
aad
outsl
dec
shlb
shll
dec
es
xchg
jl
sub
inc
movsb
mov
div
cs
or
xchg
jmp
js
shl
xor
sbb
in
mov
std
in
dec
aas
out
push
adc
dec
xchg
pop
xchg
jne
xchg
jne
xchg
mov
or
or
test
in
add
jno
cmp
mov
pushl
mov
push
xor
aad
and
scas
inc
fcmovnbe
aad
sarl
sbb
cmpsl
lea
jno
cs
out
mov
cmp
push
aad
test
mov
mov
and
lods
imul
cs
in
cmpsb
xchg
inc
sti
dec
cmp
jmp
out
inc
stos
cmp
push
fisttpl
repnz
sbb
decl
jns
in
out
pop
pop
insl
call
xchg
pusha
ret
imul
orl
popa
andb
addl
jg
fbld
pusha
bound
sbb
je
mov
dec
xchg
mov
insb
popa
pop
sbb
in
or
dec
adc
inc
and
mov
lea
mov
jno
xor
mov
fnstenv
inc
pop
mov
shrb
push
in
cmp
aas
cmp
adc
sbb
stos
mov
mov
in
outsl
pop
mov
sbb
add
sarb
pop
les
jne
shlb
lods
sub
mov
push
inc
sub
cmp
enter
loopne
or
sbb
inc
in
dec
outsl
push
lahf
out
fidivrs
std
push
push
cmpsl
shl
out
mov
mov
sarl
shl
or
xchg
sub
or
cmp
cwtl
inc
cmp
and
mov
pop
rorl
mov
fisubrl
or
fdivp
out
sbb
addl
out
pop
je
js
cmp
hlt
arpl
iret
inc
dec
cmp
sbb
jns
inc
push
mov
mov
into
or
mov
test
xor
lret
js
loopne
pop
jp
je
dec
cmp
cmp
les
rorb
fdivr
xchg
cmc
inc
ss
push
cmp
shlb
mov
ret
add
stos
pop
repnz
sub
lcall
sarb
xlat
call
leave
xchg
clc
cmpsl
sbb
loop
out
and
clc
jecxz
fwait
pop
daa
xor
iret
out
mov
cwtl
jmp
mov
ja
add
push
or
mov
sahf
ds
adc
stc
or
xchg
cmp
dec
cmpsl
push
pusha
in
jae
shlb
adc
push
incl
pop
sti
push
stos
nop
adc
or
insb
push
add
push
xchg
ret
cmpsb
push
dec
cmp
repnz
aad
test
dec
cmp
push
movsb
je
adcb
xor
push
lret
shl
fisubs
sub
cs
mov
jno
sahf
mov
repnz
jne
jle
xor
mov
xchg
stc
test
inc
shll
popa
push
lret
add
xor
dec
adc
mov
iret
add
fs
jbe
xchg
xchg
xorb
fsubl
jno
mov
sub
sarb
aam
add
std
or
jecxz
or
insl
pop
mulb
out
jno
jl
cmp
cmp
cli
push
cmp
and
movsb
inc
mov
aad
mov
pushf
adcb
xor
mov
fwait
nop
xor
or
orl
clc
loope
in
jbe
popa
aaa
push
lcall
sbb
sarb
inc
js
dec
decb
nop
or
jae
sbb
repz
dec
imul
loopne
dec
and
xchg
inc
adc
andl
bound
inc
lcall
push
nop
fwait
jle
in
arpl
inc
mov
stos
push
cli
or
ljmp
arpl
pop
outsb
xchg
cs
fistpl
out
movb
loop
out
loopne
jmp
aad
das
pop
sbb
ljmp
and
fnsave
int3
jg
fs
subb
enterw
xchg
xchg
mov
ret
rcll
insb
xchg
fcompl
imul
push
addl
imul
pop
inc
daa
jno
add
ljmp
adc
and
jae
test
mov
dec
scas
mov
fisubrs
xchg
mov
outsb
dec
cli
mov
pop
xchg
add
cs
cs
add
dec
jle
aas
mov
clc
jb
cltd
mov
pop
adc
pop
enter
inc
or
mov
pop
enter
mov
sbb
push
shll
insb
add
hlt
hlt
sub
add
or
pop
testb
ja
xor
xor
frstor
inc
sarl
scas
sahf
ret
pop
mov
pop
add
and
into
xor
add
iret
mov
in
popf
pop
outsl
test
ss
lock
xor
xchg
test
inc
xor
lock
mov
xchg
push
repz
mov
inc
mov
xchg
fdivrl
int3
rorb
lods
sbb
and
jecxz
add
popa
mov
cmp
mov
adc
pushf
sbb
pop
fcmovbe
mov
fsubr
fwait
ret
or
les
pop
mov
aad
cld
push
push
aas
mov
movb
or
hlt
stos
fmull
pop
arpl
and
cmpsl
mov
das
dec
orb
pop
mov
xlat
sti
mov
cwtl
fcomip
fstps
inc
or
out
clc
xor
bound
xor
test
push
inc
dec
rorb
jmp
pop
rcrb
aas
sub
xlat
lret
jbe
and
push
dec
out
add
inc
mov
orl
fcoml
pusha
add
scas
fstl
test
cmp
xchg
repz
es
xchg
test
lahf
push
mov
pop
les
decb
int
mov
and
jle
jbe
xchg
pop
jl
dec
xchg
inc
aad
sti
mov
rcrl
mov
dec
jp
in
popl
movsb
sbb
decb
lret
inc
mov
mov
frstor
test
xchg
mov
ud1
xchg
pop
mov
jnp
jb
cmpsb
push
xlat
sub
push
add
cmc
sahf
jge
push
arpl
xchg
imulb
xor
mov
std
push
pop
and
stos
stc
push
mov
xchg
xchg
mov
pop
jne
mov
insl
out
mov
xchg
xor
push
mov
outsw
sub
div
fildl
outsb
jnp
push
mov
jl
shlb
pop
pusha
cmpb
adc
cmpsl
push
pop
sarl
pop
push
aas
arpl
insb
dec
push
int3
cmpsl
mov
ror
dec
imul
push
lret
cltd
push
or
idivb
and
mov
add
sbbb
popf
mov
xchg
push
push
sub
cmp
jb
inc
dec
fidivl
or
jmp
or
adc
inc
sbb
jmp
je
or
outsl
fistpl
cmp
ret
mov
xor
in
notb
lahf
sub
ja
cli
call
adc
add
nop
fwait
sti
jns
rcll
push
cmp
stc
test
add
rcr
sbb
push
aad
add
fnstenv
outsl
mov
sbbl
and
inc
push
jnp
push
sbb
leave
push
ja
mov
cmpsl
and
pop
jle
jbe
cmp
mov
out
mov
popf
xor
dec
dec
ljmp
cmp
bound
cmp
fldcw
or
push
roll
outsl
aas
loope
dec
cmp
xchg
mov
rcrl
xchg
cld
xchg
cwtl
mov
and
mov
notb
int
cli
jno
fdivs
add
mov
pop
or
or
inc
or
fists
cmp
mov
adc
aaa
adc
aas
lahf
lea
push
das
lret
and
aas
loopne
nop
pop
push
in
aas
cltd
fdivrs
or
and
in
orb
adc
cmp
movsl
cmp
xchg
test
adc
adc
sub
gs
les
arpl
push
xor
insb
movsb
fsub
les
add
cmp
sub
add
jne
xlat
rcr
add
jo
clc
lods
inc
addl
sub
sub
cwtl
mov
icebp
jbe
add
jl
repz
xchg
popf
jmp
sub
adc
xchg
or
stos
in
test
inc
pop
hlt
dec
push
fcomps
sbb
rolb
mov
test
pop
xlat
or
jae
and
std
scas
xor
sahf
stos
inc
es
adc
add
cmp
xor
or
je
push
aas
and
mov
out
lcall
lock
aaa
in
shrb
in
xor
lahf
fists
fisubl
dec
int3
xor
or
rcrl
inc
daa
push
xlat
sub
testb
sbb
inc
daa
lods
xchg
cmp
push
mov
movsl
iret
stos
int
sub
xor
scas
rcrb
addr16
ret
jg
flds
lods
xchg
in
clc
mov
xchg
xchg
mov
inc
cmc
jns
sbb
stos
xchg
cld
dec
mov
out
cmpsl
ja
fidivrs
mov
dec
lds
lcall
lret
mov
movsb
jo
or
cmc
mov
mov
jle
add
sbb
cmp
mov
test
orl
mov
mov
mov
add
scas
push
fwait
cmp
push
pop
xchg
in
mov
mov
xor
jne,pn
pop
cmc
dec
fimull
jbe
mov
xchg
dec
pop
ret
fs
ja
js
or
jae
xor
lods
xor
popl
adc
inc
xor
push
insl
mov
pop
add
aad
push
push
imul
repnz
in
mov
lret
inc
and
mov
sbb
dec
repnz
dec
repnz
sub
test
push
mov
or
imul
dec
and
fildll
pop
scas
fwait
loope
jl
sbb
ficoms
popa
dec
leave
adc
sub
cmp
stc
sahf
jbe
pop
inc
popa
jge
xchg
jg
pop
dec
cli
rorb
jp
inc
int3
sarb
repnz
push
mov
or
xor
xor
shll
imul
or
arpl
movsl
cmpsl
jmp
mov
or
cwtl
imulb
xchg
inc
dec
popf
scas
push
repnz
sbb
add
call
pop
push
shll
adc
adcl
ja
mov
scas
loopne
add
pop
or
mov
add
dec
pop
mov
inc
shll
mov
add
xchg
shlb
pushf
dec
les
xor
pop
and
push
adc
mov
bound
aaa
insl
or
adc
sub
sub
jno
out
cli
loopne
add
pop
jecxz
xchg
xlat
dec
lods
cli
push
ljmp
pop
mov
jo
jecxz
push
xchg
mov
mov
jno
mov
and
or
mov
mov
stc
mov
mull
xor
adc
sarb
pop
shl
sub
fstpt
daa
gs
xchg
lds
mov
and
jmp
arpl
mov
call
cltd
nop
stos
in
inc
scas
scas
sub
popa
and
js
or
in
inc
out
pop
push
or
icebp
jg
mov
pusha
lcall
adcb
sbbl
inc
adc
mov
dec
cmp
lods
xor
aas
insb
and
test
test
mov
js
and
je
mov
lret
fldenv
out
fiaddl
cltd
clc
add
sbb
mov
fwait
mov
lods
xor
cmp
pop
or
lret
es
cmp
stos
xchg
test
subl
fucomip
in
dec
jb
mov
lea
sti
xchg
pop
and
loop
cmp
xor
sbb
mov
fisubrl
jne
mov
cmp
push
add
mov
mov
mov
js
or
cmp
inc
jp
mov
add
pop
bound
js
pop
mov
test
mov
mov
jecxz
pusha
dec
xor
mov
ret
pushl
mov
mov
jae
sbb
mov
pop
jb
arpl
mov
adc
or
cld
sub
loope
jl
jmp
fmul
pop
pop
lret
inc
cmp
and
xlat
sub
xor
lret
mov
gs
xlat
orl
xor
insl
fistps
ret
ljmp
push
aaa
push
push
push
fisubs
jle
dec
xor
xor
inc
jmp
cmp
or
push
sub
sbb
pop
notb
fisttpll
add
pop
and
jge
fnstcw
insl
cli
shll
and
shlb
ljmp
sbb
ret
mov
sub
dec
sbb
repnz
insb
mov
bswap
fldenv
sbb
jbe
mov
and
cmp
pop
in
pop
dec
add
push
in
int
pop
mov
aam
aam
std
ffreep
fwait
mov
fs
inc
xchg
imul
and
insb
cmpsl
movsb
jbe
cmp
mov
pop
aas
or
ficomps
outsl
stc
nop
jl
stos
roll
xor
mov
or
push
push
bound
or
mov
mov
orb
xor
rolb
idiv
mov
mov
pop
rcrb
test
stos
pop
add
pop
mov
lock
sub
pop
jns
and
out
xchg
aam
jmp
out
fs
ljmp
leave
adcb
pop
in
and
push
arpl
sub
cwtl
jae
out
stos
jmp
enter
sub
sbb
dec
cltd
repz
xor
in
or
xor
push
in
xchg
add
pusha
incw
mov
sbb
in
nop
dec
xchg
movsl
divb
es
stos
lret
out
jnp
sub
pop
sub
dec
ljmp
jbe
dec
orb
es
lcall
jnp
popa
mov
out
and
fstps
aad
mov
jg
insb
mov
mov
jbe
jns
cmp
lcall
out
rcll
pop
and
cmpsb
aaa
cmp
mov
or
xor
mov
pop
subl
pop
jae
ja
adc
dec
aam
repz
fdivl
lret
xor
iret
out
out
mov
jae
js
sub
nop
push
stos
sarb
inc
jnp
lcall
rcr
and
xor
fidivs
mov
mov
xor
xchg
popf
mov
ja
repnz
fcompl
xchg
inc
lock
out
cmp
arpl
call
cltd
cmp
pushl
nop
sub
jns
pop
or
push
jmp
xchg
ret
pop
fildll
rcl
loopne
xor
dec
adc
out
mov
outsb
or
push
push
xor
cli
icebp
ss
jno
loope
call
sub
in
aad
fldl
xchg
hlt
jl
jmp
test
in
inc
xlat
mov
mulb
ljmp
insb
jno
inc
cmp
loopne
cmc
icebp
or
or
fcomps
push
aaa
and
mov
mov
cmp
les
dec
lcall
inc
les
shl
mov
and
loop
mov
sahf
pushf
sbbb
mov
dec
into
je
mov
lds
fwait
pop
and
xchg
rcrb
fidivrl
add
pusha
xchg
push
adc
push
xchg
call
or
jb
rorl
add
push
push
cmpsb
mov
jmp
sarl
jnp
icebp
loopne
adc
imul
inc
push
or
rcll
leave
mov
mov
ljmp
sub
xchg
pop
pop
inc
into
pop
shl
jg
mov
in
sbb
or
adcl
pop
or
mov
pop
add
andl
push
inc
test
in
jmp
xor
fxch
clc
inc
ficoml
lods
repz
mov
add
cmpsl
adc
test
cld
movb
loop
push
xchg
imul
inc
loop
xlat
mov
sahf
adc
xor
leave
insl
adc
push
jae
mov
and
xchg
lret
inc
fs
adc
inc
xor
mov
add
cmp
popa
ret
in
or
in
iret
mov
sub
xchg
or
aas
ss
xor
inc
lock
fwait
call
inc
cmp
inc
xor
inc
in
inc
adc
in
mov
aaa
cs
inc
push
cli
stos
mov
pushf
inc
or
cmp
dec
or
out
add
imul
aaa
jne
leave
rolb
vpperm
js
jnp
pop
jnp
dec
sarb
push
pop
rcll
cmp
aam
insb
or
outsb
js
sbb
adc
ja
enter
jo
pushf
pushf
xor
inc
fisubrs
adc
fists
int3
ja
adc
jbe
push
add
aas
out
fstp
or
sarb
xchg
xor
ret
inc
outsb
daa
neg
lods
pop
sub
fldenv
mov
push
xor
cmp
pusha
xchg
xor
sbbb
pop
cmpb
js
xor
mov
sub
cli
fstl
pop
jge
pop
pop
lds
inc
fwait
cmp
inc
sub
or
cwtl
xchg
adc
fdivl
cwtl
cmp
xor
mov
xlat
dec
sub
xor
icebp
test
fldl
jae
push
mov
xchg
xor
sahf
cmp
xchg
mov
ljmp
dec
add
mov
inc
add
inc
xor
mov
loope
in
aam
das
pop
out
mov
test
push
out
ret
or
dec
les
mov
sbb
lcall
mov
jmp
outsl
mov
popa
out
mov
subb
inc
jbe
fisubrl
mov
outsl
xor
data16
mov
mov
stos
leave
push
addl
bound
test
jbe
jl
sub
sbb
jecxz
jne
push
pop
roll
mov
mov
sbb
test
cmpsb
sbb
or
faddl
push
inc
mov
jmp
pop
and
push
popf
es
xchg
or
xlat
adc
popa
ljmp
ret
jle
add
sbb
mov
sbb
sbbb
adc
popa
jge
fisubl
push
xor
scas
std
xchg
adc
sub
mov
andnps
mov
data16
fs
mov
pop
leave
or
xchg
jnp
or
or
test
jecxz
jo
notb
jg
push
adc
add
adc
sub
aad
aad
mov
sub
out
stc
jbe
xchg
int
loop
or
pop
mov
jnp
loope
lea
stc
stos
add
bound
and
sub
jb
dec
std
dec
shl
mov
mov
jge
mov
cmp
mov
ja
inc
fucomip
ret
lods
or
cs
mov
xorl
dec
jno
outsb
lahf
dec
in
push
jl
shlb
or
ljmp
xchg
fwait
push
jmp
or
dec
test
add
xchg
data16
aad
jo
clc
inc
bound
lods
mov
push
jnp
push
jo
cmp
sbb
dec
outsl
or
ret
pop
push
addr16
cmp
pop
sub
les
mov
push
xor
mov
jno
mov
in
out
outsb
and
mov
leave
add
repnz
lea
pop
pop
rorb
cmp
jne
movsl
jno
in
pushf
addb
dec
andb
pop
gs
sti
loope
repz
mov
sarb
mov
dec
ret
in
imul
cmp
sbb
sbb
daa
insl
fcoms
bound
pop
pushf
outsl
sub
jb
aam
aas
scas
leave
je
lahf
les
mov
or
test
dec
jle
xchg
push
ret
pop
mov
inc
in
movl
shlb
push
xor
mov
inc
popa
test
scas
decb
dec
mov
or
pop
mov
lock
popa
popa
imul
and
call
lcall
mov
mov
cltd
arpl
push
inc
sahf
xchg
int
cmpsb
ja
lret
push
leave
int3
scas
cltd
fwait
loop
mov
sbb
test
sar
int
xchg
push
push
daa
add
cmp
test
hlt
push
cmp
and
cli
das
sbb
jne
and
push
inc
inc
jbe
adc
stos
test
push
pusha
lods
add
cli
mov
adc
int
sub
mov
sahf
cmp
cmp
mov
ficoms
mov
sti
mov
daa
outsl
push
es
push
xor
dec
sarb
cs
dec
ret
adc
cmp
mov
dec
jno
mov
xchg
and
sbb
rcl
xchg
fwait
insb
shlb
mov
add
mov
in
adcb
xlat
jg
push
pop
xchg
sub
xchg
add
lds
add
sahf
pusha
orb
cli
pop
xchg
mul
mov
mov
cmpsb
jmp
xchg
mov
cmc
cmp
pop
mov
mov
mov
pop
loopne
xchg
xchg
jmp
enter
mov
push
addr16
mov
in
repnz
mov
push
jecxz
iret
jl
pop
jecxz
or
addb
pop
aas
insl
ficomps
jle
push
push
mov
dec
das
insb
and
mov
cli
fwait
push
pop
adc
sub
mov
mov
dec
sbb
imul
outsl
push
and
pushfw
nop
mov
add
push
subl
fadds
sub
shll
rcrl
xchg
mov
lods
insl
sub
mov
pop
lods
xchg
fsubs
sti
xor
cld
dec
xchg
shlb
fwait
jmp
rcll
sub
push
xorl
aas
mov
lock
xchg
xchg
push
add
cli
push
filds
adc
add
test
subl
pop
lea
push
ds
push
sub
popa
decb
mov
stos
push
lea
and
loope
or
sub
dec
jg
cmp
icebp
push
in
push
mov
ljmp
stos
jae
xchg
mov
clc
pop
aas
pop
sbb
mov
imul
or
jne
push
in
icebp
mov
jp
lret
imull
mov
cltd
jle
int3
repnz
and
pop
dec
cmp
inc
pop
ret
jle
adc
push
sbb
div
xchg
test
int
lods
add
cld
ret
jnp
ds
fisubrl
aad
mov
jnp
rcr
movsb
ret
push
cwtl
ret
scas
iret
or
jecxz
jno
addr16
aaa
pushf
js
lcall
aas
imul
push
mov
stos
iret
mov
cli
jae
jb
sar
sub
pop
push
xchg
scas
mov
fwait
cmp
xor
gs
sbb
pop
int3
cmp
inc
pop
iret
enter
es
jo
mov
lea
xchg
pop
in
xor
les
pop
inc
loop
or
adc
movsl
jge
dec
jnp
lds
push
xor
push
loopne
mov
insl
mov
inc
rcrb
xor
in
jns
outsb
adc
jl
mov
cmp
icebp
rolb
cmp
lcall
dec
int3
adc
adc
adc
call
jg
mov
fildll
pcmpeqb
outsl
or
cmpsl
lret
scas
ficoml
mov
jo
mov
adc
loopne
jge
std
aas
and
jnp
sarl
xor
inc
aaa
adc
repnz
pop
push
pop
cmp
imul
test
stc
into
in
xchg
lods
inc
inc
mov
jp
pop
sbb
movsb
shlb
xchg
push
fldt
fiadds
testb
stos
inc
or
dec
icebp
and
jle
outsl
xor
insb
add
inc
in
std
sbb
push
repz
out
bound
dec
jno
mov
call
pop
aad
cmpb
loope
aas
fidivs
scas
leave
fisubs
es
scas
insl
rcrl
sbb
out
inc
jbe
mov
xchg
adc
out
in
psubd
and
jecxz
subb
jg
push
xchg
jbe
data16
fildl
jnp
fistpl
and
pop
stos
lret
mov
dec
sub
xor
aaa
jg
shrl
inc
lea
push
hlt
jmp
data16
pop
js
jb
cmp
fs
aaa
xchg
mov
enter
add
push
arpl
lret
popa
insb
mov
xchg
pusha
cmpsl
out
dec
jl
pop
mov
add
xor
out
popa
daa
or
rorl
xchg
xchg
or
je
loopne
lret
arpl
cmpl
mov
jns
shrl
cmp
push
sub
push
sti
inc
sar
push
iret
ds
push
pop
fucomip
call
push
pop
ljmp
push
mov
jge
test
aas
sbb
test
cmp
cmp
leave
jns
fiaddl
jno
and
cmp
xchg
inc
fldenv
inc
jo
mov
test
sbb
xchg
jmp
loopne
jnp
push
xor
es
lds
xchg
jnp
sub
inc
mov
jns
and
aaa
or
push
mov
in
mov
cltd
mov
out
and
mov
into
popa
into
mov
xchg
push
rorb
sub
xlat
ja
mov
jae
ljmp
stos
pop
pop
loop
add
sbb
lcall
inc
bound
cmp
cltd
mov
stos
or
xor
inc
xlat
stc
mov
and
sbb
mov
das
movsb
fwait
sbb
fs
std
enter
outsl
dec
xor
mov
fists
rorb
push
sub
jg
xchg
mov
xchg
popa
ljmp
mov
adc
inc
push
les
add
jg
mov
xor
movsb
ret
pop
lcall
xchg
sub
sbb
push
dec
adc
int
ror
lea
mov
int
inc
xchg
or
jl
mov
stos
sbb
or
adc
inc
xchg
dec
ja
jle
dec
sbb
out
pop
les
lods
clc
scas
push
jne
mov
pop
adc
push
sbb
mov
mov
imul
sub
cmp
mov
loope
pusha
add
pop
xchg
xchg
sbb
adc
aam
push
jl
mov
icebp
stos
into
sbb
imul
inc
dec
mov
out
imul
xor
iret
aad
cltd
out
gs
inc
mov
scas
stc
out
mov
dec
imul
inc
jb
ljmp
dec
dec
nop
mov
add
inc
or
mov
pop
insl
lock
fisttpll
dec
xchg
mov
shrl
xor
jl
inc
dec
call
daa
test
jge
vpmadcswd
xor
orb
mov
mov
adcl
cmc
xchg
in
and
pop
and
push
cmp
xorb
or
lds
scas
mov
pop
shll
nop
mov
mov
push
add
push
jns
aaa
push
aaa
lret
cmp
cmp
xor
xchg
dec
rcrl
test
or
xor
mov
sub
lea
xchg
xchg
jecxz
push
mov
mov
mov
lcall
mov
outsl
and
sub
loopne
pop
xlat
dec
icebp
sbb
xor
and
test
lods
xor
dec
or
adc
lock
addr16
icebp
and
sbb
jb
xor
xchg
sbb
pop
test
inc
adc
fisttpll
sbb
cmp
adc
movsl
pushf
test
fsubrl
sarb
push
cs
hlt
jmp
and
push
xchg
or
sbb
mov
mov
or
xchg
pop
sarl
stos
sahf
mov
mov
mov
test
jmp
arpl
add
mov
faddl
out
or
sub
cli
enter
fcmovu
jecxz
fisttpll
ret
dec
fisttpll
push
mov
push
lcall
cmp
jecxz
adc
fsubs
testl
mov
shll
sub
push
leave
arpl
inc
cld
ret
rcrl
ret
fsubrs
push
pushf
push
call
mov
xchg
iret
mov
push
les
adc
insl
cmp
dec
std
lock
iret
sbb
imul
mull
sub
xchg
jmp
test
cmp
xlat
call
stc
push
pop
add
xchg
push
push
popf
jp
adc
clc
cmp
imul
pop
pop
cltd
xor
in
pop
sahf
sub
mov
sahf
jp
mov
popf
fldcw
popf
mov
inc
jb
test
push
or
icebp
ljmp
adc
leave
imulb
adc
cmp
xchg
adc
or
mov
inc
call
mov
movsb
adc
and
lods
lds
sahf
push
aaa
xlat
in
adc
xchg
jo
stos
mov
pop
aam
ja
jns
fildll
test
pop
or
data16
int
xor
mov
outsb
inc
daa
jno
test
or
in
into
pop
int3
arpl
fwait
and
cld
xchg
cmp
stos
sbb
in
enter
pop
sub
popa
out
mov
test
push
dec
xor
mov
mov
lock
pop
push
cmp
pushf
mov
push
nop
pop
xchg
jbe
jae
jnp
clc
push
jp
mov
decb
syscall
sahf
sbb
push
loope
and
dec
dec
in
mulb
xchg
or
mov
and
rol
out
sbb
ret
xchg
and
aad
stos
insl
inc
stos
in
stc
packuswb
push
scas
push
js
in
xlat
loop
adc
clc
mov
add
push
xchg
mov
test
insl
repz
xchg
pop
xchg
jo
jmp
test
jge
pop
or
xchg
sub
inc
icebp
mov
lcall
movsl
push
outsb
rorl
sbb
lret
dec
xor
out
or
sub
xchg
pushf
mov
pushf
pop
fisttps
and
push
jo
sub
test
pop
adc
push
cli
stos
dec
cmp
sbb
pushf
je
movsb
shlb
mov
mov
and
sub
loop
sub
push
dec
data16
add
inc
outsl
xchg
pop
in
sbb
or
xor
jp
dec
je
sbb
or
aas
pop
outsl
jmp
out
dec
fstpt
dec
add
sub
push
outsl
imul
leave
mov
movsb
enter
inc
and
out
xchg
and
push
in
inc
lahf
pop
adcb
lret
pusha
sbb
lods
aam
outsl
jecxz
test
and
das
aaa
lods
jno
xor
iret
lret
daa
outsl
pop
fs
mov
sbb
pushl
mov
pop
adc
adc
cmp
ret
popf
push
mov
and
dec
popa
add
xchg
sub
lcall
int
sbb
addr16
test
loop
rcrl
pop
fmul
inc
pop
push
and
pop
pop
les
sub
arpl
sub
std
mov
cmp
cltd
or
inc
nop
out
daa
test
jbe
mov
insl
lea
dec
xchg
lock
xchg
lret
mov
jo
pop
lea
call
fistpl
sarl
pop
lcall
and
mov
movsb
jbe
jge
outsb
ss
xchg
in
movsb
mov
fucom
inc
aam
imul
push
popl
sub
push
imul
pop
sbb
xchg
sub
push
in
popf
pusha
push
sub
sar
pop
add
jnp
mov
inc
pop
push
dec
add
pop
cmp
fs
shll
dec
mov
add
jmp
ljmp
inc
cmp
and
pop
push
mov
call
mov
aad
fwait
xor
ljmp
mov
pop
adc
push
fimuls
mov
sti
jb
jmp
or
mov
mov
sub
pushf
sub
call
in
push
jg
xchg
aad
pop
shr
mov
test
lea
fcoml
in
jge
ret
sbb
mov
ljmp
adc
cmp
cmc
mov
jns
call
sub
pop
sbb
cli
insl
or
shl
shlb
jb
sub
fistpl
out
jge
mov
adc
in
fisttps
jle
push
ret
jae
aad
sbb
cmpsl
add
add
mov
pop
stc
adc
imul
imul
stos
inc
aad
jb
out
jb
mov
and
jp
adc
leave
lock
pop
dec
scas
sbb
pop
push
gs
hlt
pop
or
inc
mov
stc
daa
lods
mov
int
mov
inc
popa
pop
mov
jno
out
add
xchg
scas
add
sub
cld
cmp
fsubs
pop
mov
dec
aas
js
jecxz
jg
push
jl
pop
cmp
sbb
cmc
sub
ret
cmp
cli
ss
mov
and
addl
mov
iret
mov
pop
int3
fsub
scas
loopne
mov
les
rcl
scas
inc
inc
into
call
lcall
stos
dec
inc
adc
mov
lods
fildll
lea
xchg
rcl
inc
mov
mov
push
fucomi
mov
add
leave
pop
and
popf
add
add
int3
jo
rolb
dec
inc
orb
cmp
mov
setg
cmpsl
xor
mov
cmp
xor
in
stos
cmp
sbb
or
inc
mov
ffreep
xlat
mov
sbb
pop
out
add
int3
pop
and
xor
mov
inc
fdivrl
scas
xchg
mov
jl
cmpsl
out
inc
std
xchg
stc
fwait
dec
iret
out
cld
repz
push
addr16
or
es
ds
fidivrl
scas
fdivrs
lahf
mov
movsb
jne
in
xchg
iret
jne
pushf
push
jl
cmp
adc
jne
jno
bound
sub
fwait
sub
movsl
mov
cld
aaa
in
pop
mov
cmp
jmp
stc
js
pop
and
dec
mov
jbe
int3
xor
xlat
cmp
scas
or
rcrb
mov
stc
mov
std
cmp
jbe
and
hlt
jbe
stc
test
sub
daa
mov
outsb
movsl
pop
mov
gs
xor
push
dec
push
aaa
pop
cmp
sahf
jle
out
or
sub
lock
cli
mov
dec
data16
cmp
jo
addb
sub
negl
mov
mov
jbe
enter
jl
pop
stos
mov
addl
xchg
dec
push
sub
cmc
mov
fisubs
cmp
fildl
pop
mov
fld
xor
or
in
push
insl
movsl
call
int3
nop
xchg
add
lret
imul
mov
jns
inc
xchg
addl
xchg
js
jmp
aad
sbb
mov
push
xor
out
cli
pop
pop
pop
mov
aam
movsb
pop
pop
xchg
cmp
ret
xor
dec
jle
mov
push
push
dec
ds
cmp
mov
fldt
cs
aas
ss
cmp
clc
aad
sub
cltd
dec
dec
rolb
mov
int3
push
mov
gs
mov
stos
dec
shl
cmp
mov
ds
js
adc
sub
mov
pop
inc
jb
imul
imul
add
lea
mov
cmp
lcall
mov
mov
cli
pop
push
add
adc
cmp
inc
push
jp
bnd
stos
or
xchg
stos
lock
xor
scas
dec
lcall
jle
fucomp
call
add
push
scas
gs
pop
mov
ret
pop
shll
psrld
adc
add
sub
out
push
mov
shlb
test
loopne
sub
jle
mov
fisubl
loope
subl
cltd
mov
mov
out
mov
dec
daa
fimull
mov
mov
lahf
inc
mov
popl
jmp
push
mov
aas
cs
xchg
inc
mov
out
arpl
mov
and
notl
insb
idiv
add
fildll
mov
xor
fcmove
jb
mov
mov
dec
cmp
imul
repnz
jbe
lcall
xchg
mov
mov
pop
iret
and
push
pop
cmp
cwtl
adcl
in
push
mov
or
sti
pop
out
xchg
subb
inc
fcmovne
out
arpl
mov
fmuls
in
call
add
jae
mov
stos
mov
jl
fsubrl
mov
or
or
xor
and
gs
js
push
push
jle
inc
adc
and
bound
call
mov
mov
outsl
in
ffree
add
dec
mov
fwait
adc
imul
lds
cs
imul
int3
lret
shll
jmp
add
and
cmp
sub
and
call
popf
movsb
dec
or
scas
push
loop
out
lcall
sti
pop
lret
inc
push
in
jbe
cmp
loope
jnp
insl
sub
bound
pop
popa
subl
add
cs
pushl
xchg
sub
test
sub
loopne
dec
inc
mov
xor
jbe
sub
testb
fsubrl
int
jnp
xchg
inc
cmp
jno
fnstsw
das
push
enter
scas
push
into
and
aam
fwait
dec
cmpsl
aas
rep
dec
ret
sub
sahf
ret
ret
dec
sub
dec
rclb
xchg
xlat
je
iret
lret
cld
sbb
test
mov
push
test
es
and
cmp
int
cmp
out
jno
adcb
js
jne
stos
pop
das
clc
fwait
inc
shll
lds
adc
ret
xor
popf
loopne
or
subl
stos
or
mov
xchg
aam
adc
arpl
inc
popl
mov
fisttpll
rcrb
and
lahf
jl
sub
sbb
jp
pop
stc
rclb
jge
sbb
gs
cwtl
scas
andb
sub
mov
mov
sub
mov
outsb
adc
aam
fs
mov
mov
out
fdivr
nop
mov
push
je
sub
push
jl
call
fucomi
xor
pop
and
es
sahf
fs
sahf
es
es
out
push
mov
sbb
mov
push
mov
frstor
add
push
lock
adc
xchg
sub
leave
scas
sahf
in
test
and
adc
nop
or
push
loopne
mov
xchg
sub
or
imul
and
dec
inc
lea
pop
mov
out
jp
arpl
mov
repnz
or
es
xchg
jle
out
stos
test
xor
add
sbb
gs
lahf
mov
aas
cmp
sbbb
ret
ljmp
pop
inc
push
aad
push
mov
sub
push
lahf
popf
jno
push
cmp
loopne
cmpsb
inc
es
or
xchg
xchg
jmp
inc
insb
test
cmc
sti
mov
xor
mov
mov
xor
idivb
ds
inc
xchg
jo
cmp
ret
mov
xor
cmp
and
pop
adc
mov
mov
jo
ret
rorl
push
in
sub
data16
fsts
adc
lea
jae
fwait
test
and
enter
scas
mov
in
pushf
cmp
orb
daa
repnz
cmp
popf
gs
test
ljmp
fs
shl
jo
aam
pop
cmc
mov
sbb
clc
xor
pop
cmpl
jnp
adc
pop
or
in
dec
jne
add
cmp
ss
scas
inc
les
dec
xchg
mov
mov
xrelease
push
and
pop
sbb
or
loop
xor
std
test
xlat
lahf
mov
popaw
ja
idivl
mov
ljmp
mov
push
imul
xchg
mov
inc
xchg
cmp
dec
dec
loop,pn
jl
test
xchg
mov
jp
dec
pop
mov
mov
xchg
subl
mov
mov
cs
push
fmuls
in
xchg
mov
push
mov
hlt
push
lahf
shll
mov
stos
cmc
push
mov
insl
fistpll
icebp
cmpb
jl
arpl
xor
sbb
pop
ljmp
add
stos
test
pop
sbb
stc
sub
ss
mov
mov
adc
iret
xchg
jmp
pop
dec
push
sahf
test
outsl
cmp
xchg
sbb
sub
pop
mov
inc
fdivs
dec
adc
or
pop
rclb
sub
rclb
cmp
or
pop
neg
lods
scas
pop
adc
xchg
push
stos
cltd
inc
mov
ret
add
cwtl
shll
add
xor
hlt
rorb
cwtl
testb
cwtl
ljmp
xor
and
int3
lock
push
cmpsl
jecxz
sbb
out
pop
popf
lea
pop
sub
jg
js
jg
movsb
aaa
in
mov
push
mov
sbb
push
sbb
lea
stc
loope
cmp
xchg
fists
jp
sahf
mov
cmp
into
and
sub
lret
mov
bswap
jb
loopew
jl
pusha
in
lea
jl
and
inc
mov
xchg
dec
rcrl
and
jbe
scas
idivl
push
sbb
add
fcomps
pop
pop
add
and
adc
iret
jg
or
call
or
shrb
cltd
mov
jo
dec
jb
repz
dec
call
mov
push
xchg
sub
out
int
xor
ret
js
xor
inc
sbb
mov
sahf
mov
out
jecxz
mov
mov
jns
mov
xor
stc
icebp
inc
ja
insl
fnstsw
push
enter
push
es
mov
sub
std
xor
addr16
sbb
sbb
pop
and
dec
pop
jge
rcrl
cmc
sub
sub
jb
sahf
or
sbb
scas
fistpl
inc
pop
cmp
xchg
mov
stc
aaa
fwait
outsl
sub
xor
mov
outsl
mov
nop
push
addr16
sub
push
mov
imul
adc
out
std
ljmp
lret
movsb
aad
data16
inc
inc
fcomps
pusha
lret
sbb
icebp
xor
mov
int
jbe
into
movsb
in
sahf
inc
and
rorb
fcom
lcall
inc
dec
cwtl
iret
stc
mov
fs
into
xor
mov
into
insb
sahf
mov
pop
mov
cmp
fidivl
add
and
pop
outsl
sarb
mov
mov
or
ja
fildll
testl
pop
and
scas
jle
or
mov
mov
ficoms
sti
out
adc
arpl
xchg
cmc
inc
lahf
pop
clc
inc
clc
addr16
ror
xchg
arpl
jmp
cwtl
scas
fs
std
mov
sarl
xor
sbbl
insb
push
fwait
jb
cmpsl
scas
xchg
cmpsb
or
jg
scas
mov
xchg
mov
out
jg
mov
adc
pop
cld
add
mov
fucomi
xchg
xor
sbb
sahf
pop
scas
pusha
mov
push
fisttpl
imul
push
int3
fstp
aas
adc
jae
adc
addr16
xor
out
xchg
mov
jno
xchg
dec
mov
inc
ds
lret
cmpsb
shr
jae
dec
cmpsb
push
or
inc
dec
xor
andb
nop
fcoml
dec
je
mov
xor
cmpl
add
xlat
adc
movsl
pusha
arpl
movsl
js
pop
xchg
test
movsl
push
mov
std
into
jge
pop
mov
movsl
mov
imul
xchg
xor
xchg
mov
pop
out
outsl
dec
lea
mov
out
into
jp
dec
push
lds
mov
mov
mov
mov
sbb
bound
enter
fldt
lods
adc
mov
into
xchg
int
xchg
mov
xchg
dec
xor
push
sub
xor
and
mov
es
jnp
pusha
jno
fs
gs
lret
push
pushf
adc
js
dec
or
xchg
loopne
fmuls
xor
xchg
lods
insl
out
push
jle
mov
sti
pop
es
sbb
fcmovb
inc
test
xchg
adc
pusha
shrl
jge
inc
stc
jg
pop
mov
or
pop
fmuls
xor
int
xchg
mov
cmp
test
in
lods
bound
dec
mov
imul
outsb
imul
clc
int3
or
jae
inc
xchg
cld
mov
repnz
adc
jl
add
push
jns
ja
add
sub
scas
mov
cmp
aaa
inc
sbb
cld
aam
movsb
mov
insl
mov
pushf
mov
test
test
clc
sub
mov
ret
push
arpl
xchg
push
mov
xor
and
add
inc
std
fsubrl
jb
or
and
jae
test
cmpb
jns
scas
cmp
test
in
pop
xor
shll
aam
add
jmp
rcrb
ficomps
faddp
sti
es
imul
cmpsb
lods
cltd
into
fwait
inc
enter
and
mov
mov
cmc
aas
pop
sahf
mov
adc
mov
or
aaa
out
loop
push
mov
imul
fistps
sbb
iret
lret
pop
mov
enter
push
addl
ss
pop
dec
mov
cwtl
test
inc
popf
add
jg
push
imulb
mov
push
fcoms
xorb
mov
jg
sub
cli
mov
cmpl
shlb
mov
xor
xlat
movsl
mov
mov
push
fs
sub
ret
xchg
lods
cmp
das
push
cmp
adc
mov
inc
fcmovnbe
xchg
outsb
lock
movsb
push
jp
add
jecxz
repnz
ljmp
icebp
lsl
jp
jge
adc
cs
mov
repnz
sub
or
int3
sbb
pop
mov
inc
fldcw
xor
scas
pop
fstpt
dec
inc
and
shl
pop
or
xor
dec
dec
out
jmp
jne
outsl
jl
ret
les
scas
dec
out
es
mov
adc
inc
lcall
push
adc
imul
call
mov
mov
pop
insb
stos
adc
add
sar
push
add
outsl
mov
into
iret
loopne
push
pusha
lahf
and
mov
fwait
or
fprem1
insl
mov
or
xor
enter
stos
sar
repnz
cmc
dec
xchg
dec
or
pop
ds
adc
outsl
xchg
fs
jne
daa
lods
pop
shll
imul
jne
adc
xchg
inc
call
sub
xchg
movb
aad
fisubrl
adc
sub
mov
shrl
mov
xchg
mov
aam
add
pushf
dec
mov
dec
or
in
mov
push
imul
jmp
jb
xchg
lahf
mov
lret
and
sbb
jns
jp
fcmove
inc
in
push
out
popa
dec
cmp
and
xchg
and
popf
fcoms
xchg
add
jne
mov
imul
clc
dec
cmp
push
enter
ss
stos
jb
mov
incb
std
imul
push
xor
inc
xchg
imul
dec
and
cmpsl
mov
xchg
iret
sti
mov
jmp
notl
xchg
data16
lcall
and
inc
clc
roll
stc
xchg
inc
les
jo
in
lock
les
push
out
stos
enter
xchg
sbb
pop
sub
pop
inc
mull
mov
dec
pop
insb
push
ret
xchg
sub
mov
push
je
adc
hlt
aam
mov
shl
rcl
and
das
pop
roll
inc
outsb
gs
xlat
mov
add
and
or
gs
add
lods
inc
push
sbb
dec
jae
mov
mov
shll
add
inc
nop
cmc
lret
mov
lods
pop
cmp
inc
and
dec
cld
cmpsb
out
sub
inc
aam
mov
mov
faddl
cli
sbbb
push
scas
cmp
loope
lea
inc
imul
iret
subb
sahf
ds
cmp
lcall
inc
add
jns
std
and
je
xchg
iret
and
sub
nop
dec
mov
or
fs
sbb
movsl
out
or
pop
adc
dec
mov
data16
xchg
pop
fs
insl
xor
sbb
sub
sbb
xorb
xlat
pop
pusha
jmp
and
enter
mov
shrd
push
jmp
sahf
into
data16
hlt
fld
clc
test
fdivrl
xchg
dec
xor
or
jle
pop
sbb
add
mov
cmpsb
lret
adc
or
repz
xor
mov
adc
jbe
adc
fildl
add
and
pop
js
lds
js
push
ljmp
fimuls
mov
cmp
enter
or
pop
mov
inc
mov
sub
test
test
inc
loopne
fisubrl
sbb
nop
lahf
dec
add
pusha
lock
iret
and
cmp
mov
jle
dec
add
cmp
and
rcr
aam
movsb
sbb
adc
push
jae
push
nop
fcompl
stc
sarb
pop
out
and
aad
jge
mov
mov
mov
cmp
inc
aad
mov
push
cmc
cmp
push
adc
add
push
sub
in
js
cmp
pop
ljmp
mov
jp
ret
call
in
outsb
cmovg
rolb
sahf
sti
mov
add
push
rcrb
pop
in
mov
cmp
adc
cs
outsl
inc
push
into
mov
mov
loopne
push
shrb
mov
push
sbb
clc
cmp
mov
pop
fidivrl
pop
aaa
or
mov
and
mov
shrl
cs
cmp
loop
test
adc
jne
mov
sbb
pusha
mov
push
sub
scas
mov
cmp
xchg
fldt
shrl
fisubrs
in
lods
vfmsub132sd
enter
scas
call
push
lods
adc
shlb
lret
fdivrs
mov
mov
cmpsb
adc
lret
popa
cmp
movq
mov
xchg
shlb
rcll
fiadds
fxch
loopne
pop
prefetch
xchg
imul
cwtl
fiadds
roll
loopne
outsl
cmp
mov
mov
mov
sbb
aam
fcmovbe
call
dec
adc
push
inc
jae
push
aam
scas
arpl
stc
fbld
ss
pop
lea
inc
mov
mov
outsl
mov
dec
jge
cld
testl
push
lcall
js
fiadds
test
sahf
jbe
scas
gs
aas
std
aaa
jge
js
movsb
mov
fiaddl
popa
out
rol
pusha
loopne
insb
pushl
jns
sub
add
rcrb
out
jae
cmc
pop
push
addr16
jno
ret
mov
shr
add
shll
fidivl
stc
pop
outsl
pop
arpl
sbb
stos
cmpsl
add
leave
fwait
sub
mov
sbb
sarb
inc
sbb
leave
and
jl
insl
ljmp
insl
add
inc
mov
mulb
adc
mov
dec
push
pop
sub
in
movsb
add
hlt
push
sub
mov
test
popf
or
sbb
sti
rcll
in
xchg
js
add
jb
out
popf
dec
mov
gs
mov
bound
shlb
aaa
test
lahf
xor
aad
add
fidivs
pop
clc
das
or
or
decl
mov
sub
sbb
in
pop
jecxz
jge
inc
je
push
adc
inc
push
sub
xchg
sbb
dec
fcmovbe
sub
dec
adc
clc
sti
cmp
lods
pop
dec
lods
lock
insl
xor
cltd
loope
lahf
incl
scas
dec
mov
rcrb
imul
repz
and
mov
test
daa
fsts
insb
or
or
sub
sti
xchg
dec
nop
test
sbb
lods
xchg
dec
dec
xor
in
jmp
std
ret
aaa
rcrl
push
push
pop
sbbb
fildl
sti
fistpl
popa
dec
movb
cli
add
push
outsl
or
xchg
cmp
mov
in
mov
leave
jg
xchg
jbe
cld
cltd
pushf
mov
jns
mov
push
cmpsl
sbbl
int3
std
xor
xor
shll
push
loope
les
dec
inc
push
mov
mov
ja
mov
adc
and
in
cmp
xchg
jne
fs
xchg
ss
sahf
xchg
es
orb
in
xchg
pop
nop
pop
lock
mov
mov
fs
xor
cmp
jp
and
lcall
loope
mov
jno
adc
scas
mov
hlt
icebp
lret
mov
bound
stos
cs
popl
sub
push
in
hlt
xchg
or
jae
jl
dec
aad
repz
ds
in
test
lahf
dec
shl
pop
jo
bound
fcompl
mov
jmp
dec
ss
xor
jmp
mov
add
loope
mov
mov
cli
push
test
push
enter
push
dec
ljmp
aas
and
push
pop
sub
jl
push
das
xchg
lods
push
mov
mov
dec
mov
frstor
or
cmp
adc
xchg
pop
jg
ja
mov
fdivrs
outsl
adc
jnp
add
push
adc
inc
or
fistl
mov
sub
ljmp
push
mov
cltd
stos
cs
dec
mov
jge
aas
jne
in
test
ret
xor
in
cmpsb
out
mov
sahf
movsb
ja
jns
pushl
pop
stos
out
int
jno
cmp
push
ss
mov
jnp
gs
je
inc
roll
sbb
xchg
add
pop
aaa
jbe
out
lods
or
insb
adc
cs
inc
mov
or
adc
test
pop
fsubl
idivb
and
mov
cmc
jns
fdivrl
das
loope
cs
int
clc
mov
push
gs
shlb
sub
push
cmp
push
rcrl
pop
lret
mov
xchg
xchg
aas
lods
pushf
lahf
xor
mov
shr
push
pop
fdivrl
daa
pop
adcb
add
lods
mov
push
adc
pop
popa
add
inc
shl
cmp
addr16
gs
adc
inc
fldl
repnz
add
sub
das
enter
test
add
sub
or
xchg
arpl
inc
push
sub
sarb
lcall
shr
ds
pop
mov
inc
xchg
dec
mov
and
arpl
cld
xor
jecxz
addr16
test
inc
push
leave
lahf
into
insl
ret
sub
adc
jne
imul
or
adc
jmp
jg
stos
mov
dec
sbbl
mov
cmc
dec
jns
cmpsb
ja
push
ret
jle
sahf
sub
mov
repz
ret
xchg
outsl
adc
push
jmp
and
jbe
fsubrs
mov
sarb
jae
fstpt
mov
orb
cmpsb
lret
jp
mov
pop
addr16
pop
add
repz
xor
xchg
xchg
mov
imul
outsb
jbe
cmovp
repz
rcrl
inc
negb
sbb
dec
mov
sbb
pop
xchg
adc
dec
jg
xor
lock
leave
and
rorl
xor
movsb
adc
push
inc
aad
mov
mov
xchg
or
ja
in
xor
shll
cmpl
and
pushf
cwtl
sbb
nop
cmp
push
pop
cmp
pop
inc
in
gs
or
and
adc
shll
mov
pop
mov
sub
sahf
inc
sub
out
jmp
lret
ss
cmovae
out
out
imul
arpl
je
pop
cmp
xor
aaa
jb
pop
in
loop
push
into
xchg
aam
xlat
dec
hlt
test
lcall
pop
sub
mov
out
mov
mov
lahf
movsl
add
sbb
adc
adc
nop
cwtl
out
add
xchg
inc
lret
or
and
ss
xchg
sub
cs
aas
cmp
or
push
lds
jle
jmp
or
dec
arpl
and
pusha
div
and
dec
xchg
jbe
sbb
pop
or
jns
jb
add
js
mov
fs
push
rcr
or
aad
ret
ja
loope
lea
xchg
push
xchg
sbb
push
xchg
shll
mov
inc
bound
cwtl
sub
cmp
sub
or
mov
bound
jae
xlat
dec
into
int
pop
notb
clc
hlt
push
xor
cmp
push
cmpsl
inc
adc
xchg
inc
cmpsb
out
cmpsb
sahf
arpl
add
insl
fisubrl
mov
sbb
xchg
push
mov
cwtl
xor
xchg
lahf
mov
shll
lods
cmc
pop
imul
clc
repz
sbb
cwtl
add
std
xor
sbb
push
sbb
lock
test
sub
pushf
cmp
fimuls
gs
adc
stos
add
out
lret
outsl
jl
inc
sub
lahf
push
pop
mov
push
rol
cmpsb
daa
rorl
dec
lods
jb
inc
bt
dec
mov
jmp
jo
and
push
sub
or
or
pusha
sbb
hlt
pushf
sub
fcoms
push
subb
jne
dec
ljmp
mov
add
data16
ljmp
mov
sbb
stos
mov
sub
insb
dec
pop
jl
dec
pop
mov
pop
fidivrs
mov
insl
dec
sub
lods
pop
aad
repz
sbb
xchg
lret
aaa
les
scas
shll
cmp
ja
repnz
adc
or
test
cmp
mov
pop
push
sub
and
fcoml
dec
lds
int
or
aas
jbe
ja
adc
mov
sub
pusha
mov
sbb
clc
into
mov
mov
cmp
sub
test
leave
fwait
mov
ficoms
inc
das
enter
insb
cld
push
mov
loop
pop
mov
insl
scas
sti
les
fs
clc
sbbl
es
dec
or
int3
jmp
out
cmp
push
inc
jecxz
in
in
add
out
arpl
lret
xorl
mov
push
cwtl
movsb
cld
imul
leave
jno
in
jae
or
xchg
jns
xlat
or
in
imul
push
cwtl
sbb
cmp
push
mov
cmpsl
adcb
pop
pop
inc
fdivrl
inc
je
mov
mov
and
lcall
mov
movsb
or
lahf
jo
aaa
int
xchg
mov
sub
xchg
outsb
pop
bound
push
pop
mov
fucomi
mov
ss
mov
fcoms
xor
movsb
jo
pop
test
adc
adc
add
mov
stos
repnz
mov
cmp
xor
outsb
mov
cs
ja
out
clc
dec
inc
dec
ficoms
mov
aam
frstor
sub
mov
inc
sub
xor
pop
or
cmp
int
push
jmp
scas
cmc
js
cli
sbb
scas
dec
andl
filds
call
test
insb
inc
inc
mov
sahf
cmp
out
cmp
sub
scas
popa
add
jbe
imul
rcll
cmc
adc
aaa
xor
push
fwait
and
xchg
jb
das
stc
ret
push
jnp
mov
add
movsl
and
imul
into
stc
push
cmp
push
lds
pushf
out
inc
dec
push
enter
lret
sub
cmp
shrl
mov
sbb
xor
lret
in
push
nop
stc
xor
in
cmp
adc
push
add
clc
inc
jge
sbb
outsl
js
scas
rcr
or
ret
mov
out
dec
cmp
mov
in
pop
sarb
shlb
add
int3
or
mov
push
sbb
insw
cmp
add
push
sbb
add
cmp
imul
lock
loope
push
jo
mov
xorb
mov
lret
daa
fsubr
mov
ljmp
div
aad
cmp
faddl
outsb
and
lods
inc
rorl
mov
mov
lods
sub
in
in
xor
in
ss
or
adc
xchg
jecxz
bound
xchg
iret
lods
jp
jmp
hlt
xchg
dec
inc
and
adc
mov
fcoml
cli
sub
lcall
cmc
movsb
push
add
add
shll
ficoml
ret
div
sti
jno
dec
xor
jne
shll
test
dec
push
push
adc
scas
push
daa
push
rcl
inc
fmul
shll
adc
xchg
xlat
mov
shlb
pop
int3
mov
and
cmpsb
mov
stos
sbb
xchg
aas
sarl
addr16
mov
sahf
pop
ss
xchg
mov
cmp
out
push
fbld
jmp
xchg
or
fisttps
push
dec
sbb
add
in
scas
sti
imul
fcoml
in
sahf
or
inc
sti
mov
jp
js
jbe
out
add
jns
cmp
jp
cwtl
sbb
jne
enterw
fcmovu
dec
mov
sahf
fstpt
sub
insl
cmp
fcom
xor
lds
mov
rcrl
inc
push
adc
ljmp
movsl
stos
add
jnp
xchg
mov
mov
push
jmp
mov
push
movsb
fs
iret
push
cmp
and
sub
push
push
and
jnp
or
fstpl
or
cmc
out
or
clc
aad
in
and
pop
mov
dec
jne
loope
shll
add
adc
or
pop
into
add
sbb
popa
fldl
stos
sub
pop
sub
and
pushf
repnz
cmpsb
loope
aam
cltd
fsubrs
scas
test
aam
repnz
jne
pop
mov
lret
fwait
mov
clc
cmp
outsb
clc
subb
xchg
xor
andb
jne
or
mov
outsb
xlat
jecxz
aad
xchg
out
xchg
sub
lea
mov
jae
repnz
dec
aam
push
cmc
stos
or
sub
mov
js
mov
jle
inc
dec
nop
jbe
pop
pop
mov
scas
xchg
and
cwtl
dec
push
and
cltd
int3
cmp
aaa
mov
flds
push
lds
psadbw
mov
call
repnz
jno
lock
roll
xchg
inc
stos
inc
xor
stc
xorb
std
aas
stc
jne
inc
loopne
xor
sub
mov
adc
repnz
mov
aam
cs
loopne
xchg
push
jl
imulb
inc
imul
push
daa
dec
cltd
fst
mov
mov
pop
scas
sbb
inc
bound
lods
mov
sub
mov
lds
js
or
rcr
mov
inc
stos
jmp
mov
xchg
dec
ret
and
negl
dec
xchg
loope
fs
lcall
dec
adc
add
jp
dec
in
fdivr
push
daa
es
mov
mov
outsb
mov
ret
lahf
outsb
add
inc
jmp
cmp
push
insb
xchg
add
pushf
cs
dec
mov
xchg
movntps
push
or
sbb
fistl
into
jae
xchg
ret
loopne
mov
inc
lcall
stc
popf
or
stc
es
imul
dec
xchg
sub
push
adc
inc
mov
jb
sbb
jns
jno
xor
xchg
push
das
sbb
loopne
cwtl
fldt
outsl
push
int
mov
out
jo
orl
in
xchg
outsl
int3
fwait
movsl
cmp
jbe
iret
adc
push
loop
lcall
inc
jle
out
pop
imul
cli
ret
xor
push
lret
add
in
or
add
fildll
fbld
xor
jmp
dec
cmpsl
push
mov
and
inc
add
mov
inc
clc
std
loop
addr16
inc
ljmp
in
or
sub
je
pop
daa
enter
pop
cmpsl
add
add
mov
fadds
fiadds
aam
enter
dec
scas
push
jmp
adc
loopne
dec
test
cmc
jle
push
mov
loopne
mov
cmp
js
mov
daa
adc
add
in
enter
cli
cmp
out
je
aad
clc
mov
mov
jmp
cmp
xor
shlb
imul
xor
ret
cli
incb
sub
cli
sbb
int3
add
iret
int
push
pop
mov
add
test
iret
aas
dec
loopne
sbb
into
test
stos
xchg
dec
pop
push
lret
aas
mov
fildl
movsb
or
xchg
movsb
ret
dec
fildll
push
jae
cwtl
xor
insl
movsl
pop
or
jb
mov
push
or
insb
push
mov
sub
jmp
mov
sar
add
cmp
push
pop
cmp
mov
shll
int
movsb
bound
outsl
in
cmp
adc
or
scas
mov
pop
test
imul
jno
stos
pop
test
jb
mov
cmpsl
xchg
lds
push
cli
xchg
mov
cmp
jns
push
movsb
cmp
lods
or
sub
test
inc
fmull
int3
out
cmp
add
push
std
testb
add
clc
mov
and
mov
push
fbld
nop
jge
mov
cmovb
adc
add
pushf
push
xchg
inc
push
ja
jo
fisubrs
imul
xor
pop
sub
or
pop
sub
out
pop
push
aad
cmp
in
jae
int3
rclb
and
mov
cmp
push
jp
je
dec
movsl
cmpb
push
lods
shlb
test
and
jp
or
cmpsb
fdivrs
lock
xchg
pop
imul
gs
out
outsl
sub
adc
mov
sub
std
lret
sbb
data16
ret
mov
test
push
cli
inc
test
and
xor
nop
add
data16
ret
rorl
mov
shrb
jbe
addr16
push
sub
cs
adc
adc
leave
test
push
push
ficoms
mov
sub
add
sbb
dec
test
pop
and
mov
pop
sbb
popa
dec
lret
push
jmp
cmp
mov
add
std
divl
push
jo
push
out
mov
ds
jo
fstl
cmp
orb
es
outsl
xor
sub
sub
pop
fs
out
push
scas
ret
in
fstl
or
inc
fdiv
pop
inc
test
cmc
xlat
add
loopne
jbe
stos
jae
lods
stos
loopne
loop
pushf
bound
insl
push
xchg
scas
xchg
test
cmp
rclb
jge
int
pusha
in
dec
mov
and
or
adc
stos
stos
sbb
mov
mov
js
in
and
iret
fwait
and
mov
or
inc
pop
sub
lea
push
push
mov
ficompl
jg
cli
jecxz
scas
pushf
in
repnz
daa
shlb
lods
jmp
lret
fcomps
pop
jno
pop
bnd
jbe
jge
cmpsl
xlat
lods
lcall
dec
ret
add
mov
push
je
push
jne
out
cmp
or
scas
and
xor
jmp
les
in
inc
insl
dec
rcrb
imul
sub
sbb
mov
rcrb
sbb
adc
dec
sub
ret
pop
js
icebp
sub
cld
xor
mov
aas
pop
inc
mov
faddl
rcll
jbe
adc
dec
cmc
int
sbb
or
lahf
push
je
lret
pop
in
cmpsb
shr
inc
or
lea
mov
adc
or
dec
xchg
xchg
jne
or
sbb
orl
leave
mov
shlb
int
scas
jg
fcomps
inc
stc
imul
les
xchg
or
xchg
sahf
dec
fstl
jmp
or
jmp
add
pushf
test
insl
sbb
lret
shrl
pushf
sbb
sahf
inc
adc
add
or
mov
shrb
mov
outsl
ljmp
fsubrs
jle
aad
es
cwtl
push
adc
rol
pushl
out
mov
sbb
sbb
and
or
add
jp
pop
or
push
push
sahf
jmp
push
cwtl
lds
int3
andl
jecxz
pop
dec
lea
int3
mov
adc
call
push
scas
add
jp
mov
add
jb
popf
pop
xor
pop
pop
xchg
rclb
jb
out
shr
xchg
push
or
xor
jl
push
inc
into
sti
mov
xor
adc
pop
fstps
enter
push
in
sub
cmpsl
in
sub
xor
stc
sbb
xchg
sub
mov
jae
jno
fsubrl
lcall
and
sbb
test
pop
add
mov
shll
aaa
ret
push
int3
cmp
jno
std
cmp
mov
cs
mov
adc
adc
rolb
shll
test
add
add
push
sub
xchg
iret
jp
sbb
arpl
orb
das
test
jl
sbb
loopne
out
add
aad
movsb
cmc
push
aam
xor
es
imul
xor
out
fildll
add
aas
ret
in
fs
call
in
sbb
ss
push
into
rorb
adc
push
cs
mov
out
aad
rorl
mov
mov
fstps
pop
and
inc
std
sbb
aaa
adc
les
fisttpl
movb
cmpsl
xor
push
sub
mov
test
cwtl
sbb
push
jbe
xor
out
pusha
vldmxcsr
dec
inc
gs
repz
fistpll
dec
mov
loope
and
mov
sti
add
aas
adc
sub
adc
inc
cmc
pop
stos
ss
lock
mov
inc
push
or
mov
jp
das
push
fwait
xchg
fwait
mov
mov
push
push
push
mov
cmpl
jl
rcr
mov
enter
aas
xchg
enter
adc
push
sahf
ljmp
lahf
movsl
cmpsl
mov
gs
data16
sub
dec
add
stc
mov
jp
ss
mov
insl
aaa
dec
jbe
sub
aaa
ds
stc
das
adc
hlt
add
cmp
xchg
adc
and
inc
in
iret
mov
aaa
enter
mov
mov
flds
lods
sarl
pop
push
jp
mov
push
cmp
test
jb
and
xlat
and
xchg
enter
cmp
rorl
sarb
fwait
mov
mov
and
insb
xchg
add
mov
insl
mov
popa
inc
loopne
add
sti
push
push
in
and
cwtl
sarl
jle
push
iret
test
iret
lea
arpl
cmp
lods
xor
in
das
inc
adc
cmp
aaa
outsl
repz
subb
cmp
test
cmpsb
jne
dec
adc
cli
lret
fidivrs
push
pusha
xchg
adc
jmp
ror
js
loope
inc
cmp
mov
rorb
push
dec
adc
sub
leave
loope
adc
adc
in
filds
int
sub
and
fs
popa
or
daa
and
fmull
movb
adc
fucomip
mov
sbb
out
js
outsb
stc
xlat
out
mov
iret
stos
push
mov
out
and
mov
fdivs
outsb
lret
mov
mov
pusha
add
push
xchg
fisubrs
das
and
pop
cmc
xlat
stos
xor
xor
cltd
xor
cs
js
jns
xor
add
xor
jl
xor
frstor
lahf
xchg
popl
imulb
dec
mov
or
mov
cmp
xchg
aad
add
loope
lods
shrb
cltd
stc
jmp
cmpsl
push
shlb
sahf
aad
push
push
ds
loop
ds
je
das
cmpsl
out
mov
dec
push
data16
movsl
push
push
xchg
sahf
mov
cld
or
fs
stos
sbb
or
xchg
add
add
mov
dec
sbbl
popf
push
adc
into
mov
or
add
and
xlat
sub
cmp
dec
or
fwait
cmpsb
lods
xor
sbb
sbb
jp
jecxz
dec
insl
jno
rcrl
test
sbb
sbb
inc
in
ljmp
and
inc
cmp
cld
lret
popa
pusha
mov
jns
outsl
mov
xchg
xor
adc
or
xchg
push
and
aam
and
xchg
addr16
loopne
sbb
mov
dec
mov
sbb
ss
in
jo
or
aam
push
pop
in
icebp
push
push
je
jmp
sahf
movsb
pop
and
in
test
push
ja
repnz
ljmp
sub
sub
ja
jne
daa
or
xchg
mov
sti
pop
sbb
mov
movsb
lods
cltd
insb
cwtl
adc
out
inc
mov
decl
xchg
out
add
stos
add
enter
mov
out
out
in
jbe
fcom
adc
sbb
sarl
adcl
cmpb
push
xor
inc
jg
lods
aad
sub
mov
push
mov
clc
push
popa
aam
outsl
loope
in
inc
jne
inc
mov
xchg
enter
sbb
jnp
fistpll
lds
sub
test
pop
dec
repnz
sub
repz
out
ficoml
pop
outsl
lock
xchg
dec
mov
pushl
xchg
jo
pop
bound
inc
sbb
cs
cwtl
add
fmull
sbb
and
outsl
les
dec
out
mov
lods
mov
cmp
cwtl
cmpb
je
ljmp
cwtl
out
sbb
jge
in
cld
push
xchg
mov
rolb
in
ds
adc
daa
inc
xchg
cmpsb
js
fs
adc
inc
lret
dec
mov
cmp
gs
es
imul
out
fbld
nop
cmpsl
outsb
fwait
mov
jnp
xchg
loop
push
movsb
pop
ja
sbb
aas
js
xchg
call
push
mov
push
arpl
test
sahf
inc
pusha
sar
mov
push
sbb
xor
mov
lock
dec
xor
jno
jl
lods
xor
or
dec
jbe
xor
sahf
and
xchg
lret
pop
lods
into
inc
inc
stc
add
adc
dec
fisttpl
ljmp
mov
popf
add
mov
sahf
je
fisttps
ss
icebp
pop
mov
xor
cmpl
pop
cmp
pop
mov
loopne
int3
jmp
into
and
xor
push
rcll
repnz
sbb
icebp
and
dec
or
ret
xchg
cmp
mov
sbb
fnsave
cmp
not
mov
pop
jmp
mov
mov
addb
sahf
inc
test
out
dec
out
imul
mov
jns
push
test
jb
lret
mov
into
xchg
pop
fwait
sbb
cmp
and
outsl
mov
adc
popf
call
cwtl
hlt
sub
dec
inc
inc
mov
jne
ljmp
and
sub
pop
sbb
xor
sub
hlt
xchg
cmp
pop
imul
mov
or
cltd
xchg
inc
xchg
inc
adc
mov
mov
ljmp
xchg
inc
test
rcrb
int
xchg
mov
lahf
xor
or
dec
xor
loopne
pop
add
adc
sbb
shl
aad
ja
cli
mov
cmpsb
sahf
test
stos
mov
mov
iret
daa
pop
fdivrs
inc
mov
mov
int
imul
and
lahf
bound
or
pop
jecxz
lret
lds
ret
cmp
add
cld
mulb
push
xchg
inc
xchg
dec
negb
ja
mov
pop
cs
jp
lock
aam
xlat
xchg
sar
jb
fcmovne
les
add
sbb
rol
mov
packuswb
sub
enter
and
pop
push
mov
movl
daa
and
adc
sbb
loopne
mov
pop
mov
clc
in
cmpsb
dec
mov
dec
jle
or
testl
or
or
adc
jne
adcl
std
loope
data16
or
ror
in
mov
pop
fcmovb
jbe
adc
je
or
inc
movb
outsl
add
sbb
jmp
insb
and
cltd
ljmp
push
or
lcall
hlt
inc
xchg
dec
addr16
mov
cmp
sub
in
les
pusha
add
mov
lea
daa
push
pop
int
mov
cmp
push
nop
mov
pandn
dec
sub
cmp
addb
dec
mov
dec
cmp
idivb
or
loope
ds
repnz
imul
popa
xlat
dec
out
dec
or
xchg
add
dec
cwtl
fsubrs
out
jmp
or
push
pushf
lock
popf
mov
dec
adc
mov
cmp
jne
xor
fmulp
sahf
aas
shll
xor
icebp
decb
gs
add
mov
mov
push
jnp
xchg
jno
xor
cmp
and
fistl
jae
cmpsl
bound
cmpsb
jl
cmp
inc
mov
lods
out
shlb
add
insb
or
inc
xchg
sti
xor
daa
cwtl
es
addr16
xor
push
jmp
negb
in
sub
imul
ds
je
out
mov
pop
jno
dec
test
xchg
lcall
hlt
std
mov
cmp
popf
pop
int
jmp
sti
mov
ljmp
sub
jbe
xchg
stos
outsl
mov
ss
inc
inc
add
pop
adc
cmp
xchg
movsb
fs
fnstcw
mov
std
arpl
in
fstl
sbb
inc
adc
inc
mov
add
xchg
notb
pop
insb
pop
mov
jne
inc
push
mov
adcb
addl
mov
lock
lcall
or
je
xor
sbb
pop
shll
push
arpl
push
data16
in
cld
aaa
mov
adc
mov
cmpsb
incb
jnp
pushf
or
sub
add
sarl
clc
inc
mov
xchg
movsl
cmp
cmp
pusha
outsb
cli
add
nop
jge
cmp
push
test
call
adc
inc
mov
mov
das
in
outsl
repz
mov
dec
mov
insl
adc
sbb
push
pop
in
mov
pushf
xor
enter
icebp
inc
push
rorb
decb
mov
cltd
test
mov
insl
sub
loopne
inc
mov
add
ret
cltd
adc
push
scas
sbb
xchg
jge
cwtl
es
and
jecxz
jb
or
jnp
jno
test
pop
sub
pop
das
mov
inc
jbe
push
mov
outsl
stos
push
test
dec
pushf
sbb
pop
adc
pop
xlat
aad
push
sbb
and
cmpsb
push
movsl
mov
addr16
cmc
dec
mov
out
arpl
lds
scas
mov
gs
add
pop
repz
mov
mull
insl
and
test
sub
adc
shlb
or
jle
cmp
dec
arpl
pushf
cli
insb
mov
push
lods
adc
jno
movlps
jmp
pop
mov
rolb
inc
jne
stc
cmp
mov
imul
bound
adc
push
jnp
jno
jae
mov
push
push
add
xchg
mov
js
shlb
mov
xor
and
das
jae
gs
insl
cmp
jae
mov
cmp
mov
dec
jno
daa
adc
cmpsb
mov
dec
jns
sub
push
aad
enter
jle
dec
outsb
out
fstp
add
push
mov
div
out
imul
mov
push
pop
add
das
js
mov
in
jae
jecxz
lods
sbb
adc
arpl
and
adc
add
xchg
int
xor
ljmp
inc
push
mov
stc
mov
iret
jl
fs
test
cmp
inc
xor
xchg
mov
jecxz
sbb
sahf
and
xchg
mov
lcall
jae
mov
dec
push
xlat
push
push
stc
aaa
pop
subb
mov
pop
dec
test
subl
jecxz
pop
lock
aaa
es
fwait
pop
jmp
and
jae
fsubrs
fdiv
pop
cmc
stos
cli
outsb
clc
mov
sub
imul
psubsb
sub
jne
cmc
cmp
mov
daa
js
dec
mov
mov
adc
jecxz
scas
mov
cmp
sub
push
xlat
push
icebp
push
xor
adc
cltd
sub
aam
jmp
repz
popf
cmpsb
shlb
cmp
fistl
enter
mov
gs
in
add
jb
bound
xor
int
ds
mov
pop
cmp
fildll
dec
bound
jns
repz
push
lret
nop
xchg
mov
pushf
rclb
jae
xor
cmp
adc
mov
push
mov
mul
js
mov
outsl
jecxz,pt
jge
test
in
jmp
test
les
orps
addr16
cmpb
fs
bound
jecxz
inc
fidivrs
jle
mov
shr
xchg
mov
xchg
subl
pop
enter
subl
test
scas
push
jp
loop
cwtl
adc
pop
out
push
scas
movb
adcl
fstpt
and
rclb
jle
fxch
icebp
pop
lds
dec
push
test
cli
push
andl
push
mov
in
ja
ja
mov
jnp
xchg
nop
sub
mov
ret
adc
sub
push
add
mov
jne
hlt
adc
pop
shlb
movsl
dec
pop
add
pop
aaa
push
sub
cmp
scas
mov
stos
ja
mov
xchg
cld
or
test
loopne
scas
cld
push
fisubrl
enter
push
mov
and
cmp
or
or
pop
xor
int
mov
les
pop
pop
fwait
lods
outsl
xlat
cmp
rcll
sub
int3
call
shrl
repz
and
aam
sub
js
push
clc
iret
loop
fnstsw
hlt
and
aad
jge
arpl
ret
lock
push
xor
cs
pop
repnz
push
add
or
mov
and
bswap
push
movb
mov
inc
xor
sub
stos
mov
xor
cmp
daa
jl
ret
mov
lock
add
stos
test
mov
lcall
ss
lcall
orl
mov
lahf
pop
lock
pop
call
int3
mov
and
imul
lods
dec
xor
loopnew
das
lock
out
mov
addr16
mov
imul
dec
dec
sar
aam
imul
ss
xchg
and
dec
cmp
inc
hlt
leave
jmp
dec
xchg
add
cmp
xor
lret
pop
inc
add
fbld
dec
sahf
sbb
stos
or
sbb
das
dec
xor
clc
xchg
and
jmp
push
stc
rorb
js
sahf
dec
xor
xor
pop
fxch
gs
xchg
sub
mov
dec
fwait
xor
popa
jl
and
stc
xchg
jne
push
pop
addr16
sbbl
inc
js
addl
in
xchg
mov
lods
dec
sub
cmp
cs
and
push
lahf
sbb
test
push
addr16
mov
sbbb
jmp
aam
push
cmp
xlat
lcall
jmp
incb
les
jb
jmp
pop
mov
inc
xlat
jg
jo
mov
js
pop
scas
out
mov
fcoms
cmp
cmpsl
xchg
xchg
sbb
pop
xor
cmp
inc
icebp
add
fwait
les
ret
fldl
fnstenv
fldenv
jle
mov
cmp
ljmp
push
jmp
icebp
rcrb
stos
pop
or
and
scas
aas
inc
sub
inc
add
dec
pop
mov
cmc
stos
mov
push
imul
xchg
idivb
mov
psrad
sub
jecxz
or
mov
inc
loopne
movsl
call
daa
jbe
js
dec
push
sbb
adc
adc
xor
push
adc
lret
mov
cmp
in
mov
xchg
sbb
inc
filds
cmp
out
or
inc
xchg
pop
imul
add
add
cld
xchg
pushf
push
mov
fucomip
sbb
add
cmp
lods
fcos
jg
jmp
invd
push
pushf
fstps
loop
into
xchg
push
inc
xlat
mov
pop
pop
adc
clc
dec
jmp
out
cli
decl
push
pop
std
dec
xor
pop
mov
inc
out
jb
inc
aad
xor
adc
lret
mov
lea
cmpsb
fs
iret
and
sub
rcll
fsts
xchg
sub
cmp
scas
xchg
testb
push
in
sbb
aam
lods
repnz
add
xchg
jle
outsl
xchg
notl
std
jg
add
xor
test
pop
xchg
adc
xchg
aam
icebp
push
push
add
lret
imul
pop
push
loopne
popa
cmp
jg
mov
jno
testl
cmp
push
lods
push
xchg
xchg
adc
mov
rcrl
roll
jns
and
ds
push
enter
lret
mov
inc
push
test
mov
pop
in
or
sub
cs
dec
lahf
xchg
mov
popa
fldt
inc
movsb
test
jl
daa
shll
cld
das
decb
imul
clc
sti
pop
pop
sarb
test
insb
popf
bound
outsb
out
leave
int
sbb
fsubrl
enter
dec
mov
inc
ds
test
notl
inc
mov
jno
push
dec
les
lahf
or
insl
inc
inc
jae
push
and
divl
and
aas
out
insb
adc
nop
fldenv
or
repz
fcomps
sbb
movsl
mov
adc
or
inc
out
ret
add
xor
cmp
xchg
mov
mov
popa
jg
addr16
dec
in
pop
fnsave
jp
and
fsub
ja
pop
mov
inc
loope
les
icebp
aad
push
inc
mov
inc
jo
jge
xchg
mov
mov
in
push
adcl
pop
daa
stos
xor
jg
pop
jmp
inc
jno
stos
and
iret
pop
or
std
inc
cltd
or
lahf
and
mov
imul
js
cwtl
cli
add
sbb
cli
cmp
lock
out
mov
dec
push
jg
jge
xchg
fwait
rcll
in
imul
mov
sarb
cmp
inc
adc
daa
ja
ficompl
shll
movsl
int3
xchg
pop
xor
addr16
xchg
iret
notl
shll
dec
pop
ja
adc
mov
leave
xchg
push
inc
out
xor
push
lods
and
and
sahf
adc
mov
and
dec
nop
push
sub
pop
mov
cmp
int3
mov
sbb
push
mov
dec
ljmp
cmpsl
jo
sub
jecxz
cmpsb
aad
shr
sub
xchg
repz
stos
mov
nop
dec
stos
ret
es
mov
fldl
fsts
inc
mov
rol
les
movsl
mov
lahf
stos
arpl
or
test
add
sub
movsl
in
jg
cmpsb
fnstenv
inc
push
sub
test
jnp
cmpsb
mov
mov
and
pop
std
jmp
stos
cwtl
sub
jno
pop
add
adc
push
pop
dec
pop
js
popf
out
pop
xlat
adc
adc
in
xchg
movsb
lret
bound
push
in
sub
cmp
loope
add
out
jns
rolb
jmp
frstor
adc
dec
sbb
mov
jns
jns
int
mov
pop
movsb
ds
xlat
jecxz
lods
inc
and
imul
pushf
jmp
add
cltd
daa
push
or
aaa
test
mov
adc
adc
mov
lods
sub
ja
dec
adc
xor
in
xchg
repz
ja
or
fldcw
adc
mov
icebp
test
mov
add
test
out
or
jmp
sbb
inc
lret
sti
xlat
sub
imul
dec
dec
ja
jecxz
or
push
mov
xchg
subl
xchg
movsl
pop
ret
ss
xchg
cmpsb
popf
loopne
aaa
leave
ds
lret
leave
sbb
es
push
rcll
pop
je
lret
popa
sub
adc
mov
ds
and
mov
sub
dec
or
jo
sahf
mov
xchg
xor
mov
clc
and
cmpsl
inc
add
int
js
out
loope
lods
sti
pop
inc
stc
mov
sbb
add
or
cli
mov
pop
ljmp
mov
mov
mov
scas
inc
cmpsb
lcall
pop
mov
push
stc
cmp
test
xchg
adc
mov
adc
mov
dec
xchg
aaa
sti
sub
pop
ror
in
repz
cmp
stc
cmp
dec
fimull
xchg
icebp
pop
sti
sub
lock
dec
cmp
dec
out
aam
xchg
imul
jo
mov
cmp
clc
cld
dec
inc
bound
fcompl
mov
xchg
imul
shlb
jmp
pop
cli
loop
sahf
push
dec
fdivs
test
cli
ja
xor
cmp
fiaddl
push
xor
cmp
aam
movsl
inc
mov
xchg
or
shll
es
push
test
call
fidivrl
inc
iret
cmp
scas
and
or
out
pavgb
or
push
clc
mov
test
cmp
fsts
lds
daa
jno
push
ljmp
jl
je
cmp
push
sbbl
pop
dec
clc
repnz
lahf
in
sub
jmp
mov
imul
dec
pop
enter
movsb
push
cmp
mov
cmp
pop
inc
cmp
mov
insl
sub
and
clc
and
das
inc
adc
jo
aas
bound
psubq
lods
dec
fstpt
cld
lret
es
mov
cmpsb
mov
sub
rcrl
in
mov
xor
mov
sbb
mov
xor
aad
decb
int
adc
out
subb
imul
jmp
lahf
adc
mov
and
mov
loopne
sub
xchg
loope
das
repz
fs
fs
fcomp
aaa
jl
inc
inc
push
imul
add
jae
fistpll
rcrl
add
mov
sub
cmp
std
addr16
or
fwait
pop
mul
sbb
fadd
insb
into
jbe
inc
mov
jp
fidivs
sbb
fsts
test
stos
push
xchg
fs
mov
fwait
or
push
sbb
mov
insl
repz
clc
jle
aam
fsubrl
push
test
insl
cmpsb
or
fdivr
jb
mov
pop
push
dec
push
mov
mov
fwait
push
lret
lods
sbb
in
ja
jmp
add
mov
stos
push
dec
inc
mov
fistps
mov
pop
out
icebp
add
pop
cs
aas
or
fnstcw
mov
daa
inc
push
and
div
pop
sub
ror
addr16
psubsw
std
mov
fsts
jno
push
push
pop
xchg
and
lock
bound
into
hlt
roll
loopne
adc
lea
je
bound
aaa
sbb
sahf
in
movsl
jnp
mov
shlb
out
mov
sbb
cld
clc
cmp
push
icebp
aaa
pop
pop
pop
xchg
mov
fidivrs
mov
add
sahf
out
int3
lock
test
inc
popa
cmpsl
sub
test
outsb
mov
es
xor
popf
jg
sub
push
push
mov
jb
sub
mov
mov
iret
mov
dec
cmp
adc
jae
dec
mov
mov
lea
cmp
jp
push
jge
push
movsb
outsb
mov
xchg
je
orb
sbb
jb
in
ror
insb
sahf
sub
or
mov
or
sub
mov
mov
scas
shl
sbb
or
outsb
xor
daa
imul
dec
jne
out
outsb
out
xor
aas
push
cwtl
push
pop
xchg
test
jp
cmc
cmp
pop
daa
inc
and
dec
movl
shll
or
mov
or
pop
xor
out
int3
or
fisttps
push
test
aad
paddq
adc
dec
sub
jo
scas
addl
lret
jne
repz
jns
adc
repz
pop
imul
loope
fsubrl
outsl
jbe
pop
xor
mov
mov
mov
xchg
xchg
imul
aad
fs
mov
andl
lahf
stos
and
insb
mov
jmp
fs
fimull
cmpl
out
lret
js
and
dec
cmpsb
loop
lods
pushf
mov
ds
lahf
fisubs
sub
decb
sti
popa
mov
xchg
adc
das
sub
and
subb
repz
xchg
adc
sbb
loop
jno
or
inc
dec
fcomps
repnz
fwait
pop
and
xchg
xor
dec
and
sub
mov
aas
adc
bound
mov
cld
jg
cmp
fsubrp
add
ljmp
jecxz
andb
jae
xchg
outsl
and
pop
repnz
icebp
int
mov
popf
ficoml
jbe
in
mov
cmpsb
ja
test
lret
or
dec
pop
data16
mov
lods
shlb
insl
js
adc
dec
jnp
in
repz
leave
add
mov
fnsave
sub
and
push
shrl
sub
mov
fnstcw
pop
xchg
inc
push
dec
mov
mov
nop
dec
pop
adc
pop
cmp
mov
js
fs
mul
outsl
fcomps
imul
or
jecxz
loop
and
inc
dec
and
loope
or
jo
mov
enter
jmp
dec
jb
sub
sti
call
adc
test
stos
sti
and
scas
or
push
out
push
xchg
insl
nop
addr16
ret
outsl
push
add
aad
in
sbb
mov
add
xor
push
imul
add
cmp
movsb
xor
or
lcall
dec
cmc
pop
popf
mov
loop
jmp
adc
cs
out
adc
nop
mov
ret
out
pop
jmp
xchg
adc
sbb
jno
fisttpll
icebp
inc
mov
sbb
sbb
push
xchg
push
out
xor
lahf
pop
jbe
pop
and
add
sti
popa
jecxz
pop
pop
xchg
ds
out
jne
jl
shrl
inc
cmpsl
mov
add
mov
cmp
lret
fs
adc
inc
adc
mov
andb
repz
pushf
jg
js
jl
cli
cmpsl
scas
cmpsl
push
pop
lcall
aaa
add
test
mov
adc
sbb
outsl
cmp
popl
cmp
int3
out
mov
je
add
fdiv
jbe
xor
clc
hlt
mov
js
sub
mov
jne
pop
add
mov
mov
movsl
fdivr
sub
shl
stos
adc
fidivrl
inc
dec
pop
adc
and
xchg
dec
xchg
lcall
adc
push
fs
jb
mov
inc
dec
out
sar
push
jle
repz
out
cmpsb
stc
inc
cs
test
das
mov
cmp
cmc
fdivp
mov
clc
aad
cmpl
adc
sub
lret
sub
inc
push
inc
aad
push
cmp
dec
cld
cmp
mov
jne
xchg
push
es
push
decl
out
aam
mov
pop
insb
and
mov
ret
rol
mov
inc
cmp
out
inc
xchg
int3
pusha
add
pop
push
cmc
ret
mov
pop
test
sbb
repnz
xchg
and
dec
out
pop
rorb
out
xlat
add
sarb
fimull
sub
scas
fisubrs
dec
lods
sbb
push
mov
mov
ljmp
into
dec
test
xchg
cmp
push
jno
inc
fs
mov
mov
jmp
fadd
in
ja
xor
dec
cmpsb
mov
or
pushf
int
inc
push
pop
js
outsl
xchg
add
jns
mov
add
movsb
insb
es
sbb
ss
inc
xchg
add
xor
add
and
pop
je
inc
div
out
or
lea
lock
aad
int
enter
lods
push
xchg
mov
add
out
mov
push
push
cmp
mov
fs
out
jae
inc
es
int
in
dec
sarl
das
ret
into
aad
or
xchg
adc
jnp
xchg
add
mov
xchg
sub
scas
or
mov
inc
ficomps
lret
dec
repz
cld
adc
fdivrl
add
jmp
enter
ficoms
fmull
push
adc
cltd
and
popa
pop
and
mov
out
test
push
loop
xor
mov
enter
dec
jg,pt
and
mov
aad
add
xor
int3
fbstp
stc
clc
lret
arpl
scas
fldl
xchg
cmp
pop
ret
jo
pusha
ljmp
dec
jnp
loope
rcll
bnd
xorb
shll
sbb
fyl2xp1
jecxz
icebp
pop
mov
movsl
imul
jno
xlat
jge
aam
stos
cltd
sub
rcll
lods
leave
inc
repz
xlat
push
jno
sub
and
dec
aad
repz
imul
mov
pop
xor
lss
in
mov
sub
test
jae
add
rdmsr
and
xchg
xor
lret
inc
push
push
stos
movsl
js
lock
shr
pop
cmpsl
or
mov
fwait
cmp
std
shll
sub
inc
pop
cmp
push
pop
dec
test
popa
icebp
mov
std
jne
mov
mov
fidivs
outsb
rcrl
pop
popf
mov
mov
aad
leave
xchg
scas
jnp
leave
cs
cld
aam
inc
jae
test
aad
lds
imul
pop
std
imul
jae
gs
inc
dec
xor
jl
movsl
sbb
data16
dec
pcmpeqb
adc
call
fisubs
imul
leave
ds
mov
sahf
jge
cmc
in
add
inc
pop
or
mov
or
scas
mov
and
inc
jl
push
dec
add
sbb
cli
popa
subl
sbb
stos
mov
aam
repz
add
test
lods
insl
repz
enter
mov
not
dec
mov
cmpsl
stos
icebp
pop
jns
push
lcall
adc
dec
push
push
inc
jo
cwtl
xor
in
loope
mov
mov
insb
outsb
scas
dec
xchg
jo
xchg
or
outsl
cld
jp
xor
pop
xchg
push
std
push
push
lods
jp
cld
mov
inc
cmpsb
ds
or
inc
rcrl
outsl
lret
sbb
dec
or
in
shlb
or
scas
fidivl
xor
or
rclb
add
cwtl
xcrypt-ofb
cmpsl
stos
aas
jo
mov
mov
aaa
fisubs
xchg
loop
mov
cltd
repz
push
pop
cltd
sti
jae
xchg
jbe
push
dec
sti
enter
fstpl
out
sti
fnstcw
adc
mov
sahf
out
mov
inc
jbe
mov
add
xchg
out
xchg
out
pop
stc
jp
add
ss
iret
mov
movsb
mov
mov
mov
push
mov
lret
fidivrs
fstps
je
xor
pandn
add
xchg
jbe
ret
add
cmp
push
inc
push
dec
lea
or
xor
and
insb
mov
sahf
std
pop
fidivl
cmp
ffreep
xor
mov
jmp
in
mov
nop
xchg
mov
rcr
xlat
cli
sub
enter
adc
jno
test
rcll
mov
outsl
or
fmul
cld
orl
aas
push
rcrb
fstpl
popa
xor
xlat
jo
jns
adc
jecxz
mov
cmp
in
lcall
icebp
daa
jo
repnz
pop
fcmove
sahf
pop
jae
or
jg
loope
test
sub
sahf
sub
sbb
shrl
jbe
ja
je
pushf
dec
mov
dec
in
in
fdivs
js
cld
fildl
stos
mov
fwait
in
pop
repnz
filds
jbe
dec
add
sbb
mov
repnz
cmpsl
lret
cmp
mov
nop
and
push
push
dec
sbb
in
jmp
rcr
es
adc
and
push
add
pop
or
or
out
pop
jbe
imul
jmp
stos
push
pop
mov
mov
insb
addr16
cmpsl
xchg
sub
and
and
jp
mov
repnz
mov
lods
pop
fldt
jle
mov
jecxz
insl
or
das
mov
lds
ret
xchg
movsl
and
dec
dec
mov
mov
test
add
fwait
mov
fdivl
push
gs
adc
lock
enter
dec
mov
test
pop
dec
out
mov
popf
mov
mov
cmp
repnz
mov
movsb
adc
pop
cmp
sbb
mov
and
xor
pop
xor
dec
push
mov
inc
xchg
sbb
mov
and
and
cltd
aas
cmpsb
insb
scas
shll
push
rolb
iret
test
decl
icebp
jno
movsl
arpl
sub
push
cmp
adc
push
shrb
testl
pop
sub
sub
aam
pop
pop
test
xchg
scas
jbe
mov
xchg
xor
xchg
pop
cmp
inc
pop
shll
add
pop
jge
fnstsw
sbb
sub
mov
mov
add
adc
xchg
push
mov
pop
fdivr
es
loope
lret
or
push
es
or
jmp
mov
dec
and
hlt
cld
arpl
add
xchg
sbb
ds
jno
std
dec
push
int3
push
stos
iret
and
mov
jns
sub
in
pop
mov
dec
movsl
jmp
cld
or
or
in
andl
fistpl
scas
jno
adc
push
and
roll
pop
add
xchg
xor
mov
stos
sbb
xor
rcrb
pop
das
xchg
mov
mov
mov
sub
xor
xchg
mov
arpl
std
mov
aad
pop
gs
int3
pop
pop
enter
sbb
out
in
scas
subl
insl
int
pushf
xchg
in
mov
and
dec
dec
dec
jl
dec
adc
sbb
insl
and
mov
add
xor
sub
jnp
sub
dec
and
stos
mov
lock
jb
mov
sbb
xchg
cmp
mov
lods
in
loop
dec
icebp
inc
sbb
cs
push
or
repnz
jns
dec
ret
dec
or
cltd
pushf
inc
sub
cmp
out
pop
dec
jb
push
jb
jb
imul
mov
add
jmp
dec
push
mov
rcll
leave
adcb
xchg
push
ret
lcallw
fwait
sub
subl
jmp
test
nop
or
scas
pop
mov
in
into
scas
mov
gs
ds
xlat
cmp
sbb
outsl
je
mov
stc
cld
and
ljmp
cmp
hlt
lods
mov
jne
int
out
and
test
and
fwait
pop
inc
in
in
xor
js
mov
call
sbb
in
jnp
jmp
pop
cmp
inc
xchg
add
sub
insb
mov
push
pop
jl
imul
add
data16
jmp
out
xor
dec
sahf
pop
imul
test
adc
jecxz
xor
ss
pop
jbe
out
ds
nop
sub
shll
sub
in
outsl
add
lret
cmp
mov
sbb
addr16
lods
sbb
inc
push
xchg
sbb
jecxz
sbb
sti
dec
test
add
out
cmpb
mov
sbb
outsl
lret
inc
pop
mov
lock
hlt
pop
loop
dec
pop
stc
jb
inc
fsubrp
or
nop
stos
jne
leave
iret
loop
or
ret
orl
roll
xor
loopne
test
lahf
adc
sbb
cs
shl
outsl
daa
dec
iret
xor
out
scas
int
sbb
mov
push
xchg
mov
cmp
ja
sahf
inc
push
dec
mov
pop
imul
cmp
adcl
and
cld
dec
add
les
cmpsb
ljmp
fcmove
sti
lret
leave
and
movsb
pop
inc
adc
popl
stos
mov
inc
enter
cmp
mov
pushf
adc
popa
jo
cmp
pop
out
outsb
inc
cwtl
pusha
scas
dec
xor
repnz
xor
iret
lret
xchg
outsl
dec
repnz
movl
scas
sbb
pop
sub
gs
lahf
repz
mov
dec
adcl
jmp
mov
ret
sbb
lret
cmp
jl
sbb
dec
cmp
stos
cmp
mov
xor
fs
sbb
and
icebp
ret
sbb
fists
sbb
push
add
add
jmp
xor
enter
hlt
cmp
push
int
es
mov
jno
pop
xchg
mov
orb
mov
std
push
ret
popa
dec
daa
pop
ja
or
sbb
inc
mov
push
out
insb
push
pop
mov
xchg
mov
fsubr
dec
rcll
cmc
cmp
lcall
add
or
lods
shlb
std
xlat
xchg
pop
mov
jecxz
mov
data16
and
mov
rcrb
add
cld
lea
pop
in
xor
and
sbb
mov
inc
inc
add
enter
nop
std
adc
pop
shl
mov
xor
lds
sbb
shlb
lahf
inc
lret
pop
or
lods
jb
adc
nop
in
sbb
dec
movsl
jo
or
xchg
ficomps
test
pop
adc
mov
xchg
xchg
mov
pop
xlat
mov
stc
int3
fisttpl
sub
sub
mov
pop
rcrb
scas
jmp
gs
xchg
lea
insl
or
adc
mov
push
jl
insl
sti
sub
pop
cmp
mov
add
mov
loop
rcrb
jecxz
movsl
inc
dec
jo
outsl
xchg
push
stc
mov
pop
cmpsl
mulb
shll
movsl
jnp
jnp
mov
sahf
shrl
dec
jmp
mov
xchg
pop
sub
aam
lods
hlt
iret
xchg
mov
imul
pop
orl
mov
mov
xor
push
or
mov
pop
xchg
sbb
sti
popf
test
pushaw
cmp
jecxz
sbb
xchg
inc
inc
mov
dec
dec
mulb
in
xchg
addr16
inc
in
add
dec
mov
or
lods
les
cmp
xchg
push
das
in
cmp
insb
lret
xor
repnz
pop
ret
mov
lahf
add
ja
jg
call
cmovs
push
mov
ss
pushf
mov
mov
jle
nop
add
repz
push
arpl
cmc
cld
jle
xor
xchg
loope
and
aaa
dec
notl
and
mov
in
or
ret
mov
xchg
int
xchg
ljmp
fildll
jmp
inc
mov
hlt
lahf
mov
loop
lahf
and
call
cmp
fmull
mov
dec
mov
push
xchg
xchg
enter
mov
insb
sbbl
pushf
repz
mov
sbb
inc
and
xchg
js
jl
jg
unpcklps
push
mov
jns
popa
mov
mov
pop
in
lock
dec
lahf
cmp
sbb
lock
sbb
adc
ret
in
test
or
adc
inc
pop
gs
das
out
xchg
jb
fwait
setnp
pop
jbe
pop
dec
push
subb
inc
shll
adc
push
mov
cltd
jg
test
ficoml
cmp
daa
int
push
lret
repz
lret
leave
mov
mov
stos
push
iret
in
xchg
xor
mov
xchg
and
sub
repz
adc
idivb
jecxz
mov
inc
dec
addl
ds
mov
inc
mov
jl
outsl
cmpsb
xchg
mov
lahf
jl
lds
pop
test
sbb
loope
push
jge
mov
mov
fnstsw
pop
and
xchg
jle
sub
xor
inc
inc
ret
stos
loopne
hlt
jbe
into
mov
mov
jne
or
pop
loop
mov
test
add
out
mov
iret
dec
imul
mov
shr
xor
adc
sub
cmc
cmp
dec
sub
scas
jne
push
mov
pop
pop
pop
cmp
sarl
test
sarb
mov
jle
nop
sub
mov
push
xchg
adc
xchg
mov
scas
jp
inc
sbb
and
jge
adc
addl
mov
mov
cmpsl
testl
adc
jns
jle
inc
xor
stos
add
inc
xchg
pop
lock
and
ffree
jno
cmp
add
jbe
pop
or
sbb
mull
inc
xchg
xchg
and
sbb
dec
lret
inc
and
popa
lds
sbb
repz
icebp
cli
insb
mov
lock
dec
cli
jmp
leave
mov
enter
sbb
sub
xor
add
cmpsb
test
mov
fidivrl
mov
pop
or
lock
leave
jno
and
mov
pusha
rcl
movsb
pop
cwtl
lock
outsb
mov
test
sbb
mov
in
fildl
or
sti
mov
ja
push
jl
inc
jnp
cmp
cmp
enter
lcall
sbb
xchg
addr16
push
scas
xor
xchg
inc
pushf
push
jns
fbstp
cmp
pop
or
fstps
and
push
inc
xor
mov
mov
pop
xchg
enter
cld
fmull
dec
movsl
xchg
and
outsl
icebp
push
or
pop
fbld
jnp
loopne
loope
xlat
mov
add
and
adc
aaa
or
mov
pusha
cmp
es
iret
imul
pop
push
stos
xchg
fmuls
mov
push
push
insb
fcompl
xchg
xor
mulb
repz
icebp
adc
mov
xor
mov
and
push
xor
addr16
add
cmp
cmp
sub
into
xor
icebp
xchg
xor
mov
sub
cmpsl
rcl
push
les
push
jmp
call
mov
pop
push
mov
out
cli
pop
movsb
sbb
inc
xchg
mov
scas
sbb
xchg
loopne
xor
dec
into
mov
sbb
pop
mov
test
lods
mov
mov
or
add
sub
pop
pop
leave
pop
or
cmpsb
dec
sbb
xchg
out
jne
pushl
sbb
cld
xor
xchg
push
cmpsb
fimuls
andb
sub
sub
pop
lahf
gs
lret
and
test
call
rcll
pop
mov
dec
decl
sub
push
pop
scas
push
mul
xchg
iret
cmpxchg
sahf
push
and
fidivs
les
and
popf
lcall
aaa
fidivrl
jbe
leave
pop
sbb
je
mov
cld
push
and
add
clc
mov
and
mov
fiadds
pop
cmpsb
ret
xchg
cmp
shr
mov
mov
movsl
pop
cmpsl
test
sbb
cmp
mov
dec
ret
xchg
mov
insl
call
ds
ret
loop
ret
stc
hlt
jae
cltd
sbbb
cmpsb
cmp
addb
pop
sub
push
add
loopne
outsl
push
cltd
pop
inc
dec
sub
std
stos
rcr
lret
ret
jge
xor
sti
jp
rcrl
xchg
fcmovb
pop
sub
imul
or
xor
in
imul
test
nop
mov
dec
or
adc
mov
lods
hlt
into
call
sbb
sbb
js
mov
sub
jnp
jg
arpl
inc
mov
dec
pushf
data16
ds
iret
repnz
mov
and
in
scas
dec
daa
xor
sub
dec
inc
lcall
aaa
outsl
mov
std
dec
mov
cli
mov
out
ret
fadd
sbb
pop
push
pop
adc
cs
add
mov
clc
sub
xchg
xchg
jmp
sti
jne
mov
dec
adc
dec
bsf
xchg
mov
jecxz
push
ljmp
jmp
inc
xor
mov
push
and
cmpsl
popa
pop
adc
ds
loopne
mov
mov
xchg
ds
andl
mov
insb
and
test
fstpt
push
sbb
iret
das
sbb
or
xchg
lds
js
adc
insb
andb
das
xchg
aas
leave
xchg
pop
mov
sarb
mov
inc
cltd
test
ds
xor
lret
adc
mov
fisubrs
imul
pusha
pop
adcl
xorb
push
jge
loop
clc
cmp
shll
adc
lahf
stos
xor
sahf
jle
jnp
sbb
call
popa
mov
hlt
mov
fsubrs
sahf
mov
xor
inc
shlb
cmp
loopne
jno
pop
add
pushf
xchg
and
xor
xor
scas
jmp
aaa
sbb
push
fsubl
dec
mov
jg
sahf
pop
sbb
pushf
repz
sub
aaa
lock
into
hlt
mov
shlb
dec
scas
insb
jo
xchg
xchg
ss
fidivrl
mov
inc
mov
add
sbb
jg
adc
mov
mov
mov
fs
mov
cmp
stc
shrl
fcmovnb
in
or
add
sub
lods
sbb
aas
pop
jp
in
push
sbb
xor
scas
pop
ja
mov
bnd
outsb
aaa
bound
pop
aad
mov
lods
pop
mov
js
addr16
sahf
sti
mov
fimuls
or
xchg
repz
dec
pushf
in
pop
leave
loope
mov
cmp
pop
imul
iret
cwtl
test
cmpsb
sbb
nop
cmpsl
or
into
inc
xchg
jns
sub
das
fs
outsb
fistpll
or
cltd
loope
aam
ret
stos
xchg
or
scas
cli
mov
inc
xor
or
sbb
cwtl
dec
iret
mov
inc
cld
jo
in
lret
push
test
clc
jnp
scas
lcall
jl
dec
insl
ret
in
pop
je
das
xlat
cmp
push
or
dec
push
xorl
and
std
jno
adc
lret
xor
hlt
inc
xchg
negb
fimuls
clc
push
cmpsl
jecxz
dec
inc
jecxz
inc
or
pop
imul
pop
mov
xchg
mov
mov
and
xchg
out
inc
movsl
clc
xchg
lret
jbe
xor
or
decb
mov
ror
cltd
out
adc
adc
test
push
jl
sub
or
sahf
sbb
cmp
lds
mov
sub
dec
rorl
std
divb
xchg
fsubr
push
xor
fs
aas
rorb
cmp
lahf
pop
sti
fwait
ljmp
mov
sub
into
je
cmp
sbb
mov
push
mov
ret
lret
sub
inc
negb
lret
push
into
jbe
cmp
mov
cmp
rcrb
mov
es
jbe
xchg
mov
mov
mov
or
mov
cmpsb
inc
mov
inc
aas
lds
mov
imul
in
pop
jmp
gs
rcrl
pushf
push
dec
ja
jb
xchg
ret
out
xchg
or
fistpll
data16
mov
xchg
mov
fcoms
adc
call
sbb
and
cltd
movsl
mov
enter
jl
or
stc
sahf
fwait
and
aas
ja
sbb
rcll
xor
or
xor
or
popf
and
ja
adc
negb
lret
xchg
cld
pop
cltd
jne
cmp
leave
addb
repnz
jne
xchg
push
jle
adc
pop
aaa
sarb
or
cli
pop
repnz
sti
mov
xchg
ljmp
insl
cmpb
jb
ss
outsl
out
cmp
mov
push
mov
mov
sbb
xchg
std
sub
adc
xchg
xchg
insl
inc
mov
out
and
jnp
dec
jmp
push
xchg
sub
fiaddl
xor
mov
jo
pop
mov
inc
lcall
testb
xchg
divl
mov
into
into
addb
sbb
or
lea
in
bound
jno
fs
push
dec
pushf
pusha
mov
in
roll
jecxz
sub
xor
mov
cld
hlt
mov
dec
xchg
push
ss
inc
mov
and
fldt
push
gs
cltd
xchg
call
fidivl
je
fcompl
add
xor
lret
mov
fsubrl
sub
in
xchg
add
orb
push
adc
out
mov
test
dec
clc
rcll
stos
push
lcall
add
test
movsl
fdivrp
xor
inc
into
pop
int
sub
and
lea
std
nop
dec
stos
pop
mov
add
push
out
inc
jae
std
das
data16
jb
out
xchg
pop
mov
xor
mov
fwait
push
push
imul
loopne
jecxz
mov
iret
mov
rorl
std
fcoms
in
fsts
xchg
addb
stos
sbb
addr16
mov
dec
cmc
cs
or
dec
loop
negl
jo
or
xor
mov
or
jno
add
mov
jle
push
adc
sti
enter
je
cmp
ret
mull
xor
mov
movsl
shlb
test
negl
pusha
insl
lock
mov
dec
int3
mov
xchg
sbb
xlat
pop
add
inc
adc
dec
xchg
push
inc
out
sbb
xchg
ret
test
sub
sbb
out
popa
mov
fldenv
push
data16
sbb
add
mov
and
inc
pushf
adc
xor
xor
outsb
aas
add
fwait
push
cmp
dec
jbe
enter
pop
fs
daa
push
in
rcl
pop
cltd
jg
roll
pop
pushl
xchg
and
xchg
mov
dec
xchg
push
insb
xchg
and
and
in
push
sbb
mov
aas
call
pop
jle
or
sub
fildll
repnz
sbb
mov
call
das
int3
enter
cmp
lcall
fwait
fwait
mov
lods
js
dec
sbb
jno
lea
push
sbb
push
fs
adc
sti
inc
xor
sub
mov
inc
lea
in
or
out
ret
jne
movsb
aad
arpl
sub
movsb
push
xchg
fildll
mov
and
xor
sub
adc
adc
sahf
pop
loopne
fwait
or
frstor
fcmovnb
inc
addr16
je
ficompl
dec
fmuls
adc
movsb
out
mov
dec
std
iret
push
in
pop
cwtl
dec
sahf
data16
das
lret
ljmp
mov
scas
dec
popa
test
ret
sbb
inc
test
popa
aam
mul
loopne
push
ficoms
pop
mov
lret
popf
loope
lds
sbb
pusha
aas
xor
in
add
fs
and
lods
dec
arpl
mov
adc
sbb
adcl
jl
sub
xor
sti
add
addr16
movd
adc
and
shrb
fcoml
jl
jecxz
bound
and
mov
scas
jo
test
aad
and
orb
pop
fwait
xchg
stos
xchg
fistl
sbb
adc
mov
ret
mov
mov
je
test
ss
imul
jae
inc
outsl
in
jns
mov
icebp
scas
test
mov
stc
lea
aaa
pushf
jg
popf
scas
xchg
cmp
or
cmp
sub
xchg
in
pop
push
mov
cmp
in
mov
sbb
mov
sbb
add
inc
lret
inc
aad
ret
and
cmp
gs
pop
stos
cmp
jno
cmpsl
cmp
es
loopne
mov
pop
addr16
and
cmovae
out
pop
pmaxub
jb
or
pop
into
and
pop
js
cmp
sbb
push
jle
inc
push
ret
push
add
pop
xlat
cmp
rorb
lahf
lea
sbb
sbb
adc
aas
mov
inc
jg
shlb
ret
dec
xor
std
mov
add
jo
or
dec
and
sar
xor
scas
cmp
fwait
or
lcall
mov
cmp
cmp
xchg
add
insl
pusha
scas
mov
ret
repz
inc
addb
out
pop
ror
xchg
lds
mov
inc
fs
cmovp
jns
inc
test
xlat
fstpt
fildl
sbb
dec
push
sub
sub
mov
xchg
jge
cmp
jge
outsl
and
jbe
adc
pop
shlb
dec
sti
pop
pop
scas
cmpsl
sub
mov
lahf
test
cmp
xor
push
or
push
lods
icebp
rorb
lahf
lret
sbb
jno
dec
mov
aas
test
jmp
push
stos
arpl
pop
lcall
loopne
mov
insb
cmpb
xchg
movsb
ficoms
stc
stos
sub
in
in
sbb
loop
fcmovbe
push
push
mov
mov
orb
push
cmp
cmp
arpl
aaa
stc
lcall
dec
mov
dec
js
cmp
arpl
dec
push
inc
jne
adc
mov
ljmp
or
sahf
clc
bound
int3
ud0
stos
lods
mov
call
stos
fsubrs
pop
out
lcall
rcrl
aam
cmc
push
push
les
rol
mov
inc
in
lret
aaa
es
adc
sahf
and
lahf
test
mov
das
loop
pop
dec
cmp
aam
pop
xchg
aam
sbb
popa
cmp
fnstsw
cli
cmp
fwait
lret
and
jne
sub
jl
pop
fdivs
sarl
out
sbb
dec
hlt
stos
xor
mov
mov
push
mov
xchg
mov
rcll
jno
and
or
xor
adc
jno
addr16
insb
push
ljmp
and
outsl
fldt
mov
lods
negl
fs
jns
mov
subb
mov
sbb
pop
mov
mov
in
mov
call
bound
push
scas
sub
mov
pushf
and
cli
cmpsb
int3
fmul
xchg
xor
mov
int
cld
and
in
lret
punpckhwd
daa
out
add
cmpsb
clc
pushf
lcall
and
mov
cmc
mov
jno
cmpsl
loop
daa
cld
aaa
test
repnz
sub
or
mov
mov
mov
fisttps
push
into
sbbb
sbb
xchg
das
sarl
xor
adc
jnp
push
clc
test
adc
pushf
cmp
ja
dec
add
out
cmp
dec
jmp
xchg
and
mov
xor
push
loop
repz
hlt
xchg
in
int3
pop
pushf
pop
cmp
add
push
mov
scas
clc
insb
rolb
and
xor
mov
or
adc
jnp
mov
nop
scas
xchg
dec
push
imul
cmp
repnz
xchg
dec
adc
daa
or
call
int3
pusha
jae
jbe
insb
inc
lahf
test
add
xchg
mov
push
sub
push
pop
sarb
push
sub
icebp
subl
outsl
pushf
fldcw
jp
cmp
push
mov
cmp
add
fidivrs
in
mov
notl
outsl
jle
fs
in
jnp
mov
cmpsl
inc
lret
mov
fcompl
and
add
orl
jecxz
cmp
cmp
mov
dec
push
push
icebp
int
jmp
xchg
mov
movsl
in
lock
adc
shrb
or
adc
je
xor
test
or
mov
punpcklbw
pop
mov
pop
stos
push
lea
sahf
iret
add
leave
inc
gs
sbb
aaa
shlb
xchg
pop
fldt
fsubrs
out
lds
push
pushf
mov
sub
sub
scas
inc
hlt
and
shlb
jecxz
lods
push
mov
push
jmp
jb
mov
insl
jno
inc
dec
or
clc
imul
xor
or
or
subl
xchg
roll
ljmp
aas
dec
adc
repnz
lcall
jmp
push
xchg
dec
es
jecxz
cli
mov
sbb
and
cmp
call
ds
ret
pop
add
inc
sub
popf
mov
dec
imul
adc
loop
sub
and
push
rclb
push
lcall
mov
leave
ror
adc
and
test
lret
mov
mov
push
xlat
lds
nop
mov
sub
insl
mov
scas
repz
push
dec
xor
ss
pop
mov
aaa
dec
jecxz
arpl
xor
or
cmp
jg
and
in
mov
xchg
cmc
xor
sub
sbb
ja
mov
cmovb
lahf
lea
mov
jmp
aas
and
push
stc
mov
add
xor
sub
inc
psrad
xchg
data16
daa
and
pop
add
add
cmp
test
out
mov
mov
filds
ljmp
fcomps
stc
lcall
popf
add
loopne
mov
outsl
mov
cmpsl
push
fwait
insl
mov
pushf
mov
and
sbb
mov
hlt
jb
je
sbb
enter
lcall
lahf
xchg
sbb
aas
ret
pop
lds
adc
lods
jmp
shrl
ret
mov
mov
xor
dec
cmp
jne
stos
loopne
mov
shrl
mov
add
popa
mov
leave
pop
add
sbb
test
cs
addl
dec
cmp
pushf
test
mov
out
and
inc
pushf
pop
pop
inc
inc
lret
push
jb
mov
subb
out
inc
testl
in
jmp
xchg
std
cmp
stc
jmp
sbb
push
test
mov
bt
dec
ds
and
add
xchg
cld
lret
sbb
pop
rol
dec
cmpsb
or
insb
mov
test
popa
stos
or
popa
clc
clc
sub
iret
and
or
dec
mov
mov
mov
and
mov
adc
xlat
leave
xor
movsb
les
jb
pop
ja
or
sbb
clc
movsl
popa
and
xor
dec
in
mov
lods
sub
mov
xor
xchg
cmc
int3
xor
jle
clc
push
popw
jbe
pop
push
dec
sub
adc
xchg
push
adc
jne
inc
cmp
adc
sub
rcr
imul
je
xchg
xor
outsl
cmpb
fwait
psubb
push
rorl
mov
xchg
jb
pop
adc
cmp
pop
aam
dec
dec
shrl
xchg
push
cmpsb
out
imul
in
cld
cmpl
std
mov
push
mov
aas
cld
mov
xor
flds
aad
xor
movsl
sub
shrb
xchg
testb
and
clc
lcall
fs
popa
push
dec
inc
ljmp
adc
inc
xor
outsl
push
push
mov
shrl
push
mov
sbb
out
dec
in
insb
xchg
pop
imul
mov
cmp
stc
xchg
test
test
cmp
jecxz
ds
mov
mov
mov
fcomps
push
xor
fs
jbe
mov
cs
xor
xchg
jge
test
js
sar
std
or
test
fimull
cs
xchg
add
ret
or
pop
pop
xor
gs
ret
mov
pop
mov
pop
shlb
aam
out
pop
clc
stos
ljmp
pop
mov
jmp
adc
lock
sub
pop
dec
ficoms
out
add
lret
sbb
rclb
pop
fisubs
xlat
sub
les
cs
movsl
inc
cmp
dec
xor
pop
inc
outsl
mov
sbb
add
fwait
sub
repz
xchg
mov
sub
in
mov
lock
mov
pushf
mov
pusha
sub
sbb
js
or
inc
mov
and
cmpsl
test
inc
loop
mov
mov
nop
xchg
pop
inc
mov
test
jo
mov
or
xchg
sub
je
js
push
mov
aaa
into
mov
mov
fnop
into
lods
fcom
mov
lret
rcrb
ret
aad
mov
nop
xor
stc
gs
jno
pop
shll
lahf
call
sbb
sub
inc
sarb
sbb
lods
inc
imul
daa
sti
test
mov
ret
add
adcl
lds
sbb
fisttps
cmp
push
outsb
repnz
scas
lret
mov
mov
in
cmp
dec
ss
push
fisubl
ret
adcb
mov
std
leave
or
sbbb
mov
ja
or
inc
pop
idivl
add
mov
xchg
test
push
or
cmp
push
les
orl
mov
xchg
out
jp
mov
inc
inc
cmp
and
adc
mov
loopne
pop
push
ret
repz
jle
xchg
jno
pop
pop
loope
inc
jno
int
jp
daa
dec
movsl
and
xchg
addb
adc
in
fmuls
pushf
das
xchg
test
insl
and
inc
mov
test
mov
jns
jno
cmp
js
inc
cmp
arpl
xchg
jp
lahf
add
add
roll
add
push
mov
sub
jmp
jp
in
mov
cwtl
call
insb
add
push
imul
stos
cmp
xor
scas
xor
add
add
jle
mov
mov
xchg
push
jbe
push
sub
push
outsb
add
dec
xchg
jmp
stos
jecxz
mov
mov
mov
addr16
and
xchg
push
les
dec
pop
pusha
sahf
ja
pop
out
sub
jmp
cmp
fdivrl
jno
adc
sbb
push
sub
addr16
repz
loop
adc
jns
fnstsw
push
bound
xor
or
xlat
test
mov
aaa
pop
and
cld
fidivrl
xlat
xchg
xchg
arpl
cmp
lea
scas
mov
pop
xor
pusha
clc
adc
rcll
mov
rcll
arpl
sub
push
xchg
push
scas
insl
pop
popa
in
push
cmpsb
stos
or
sbbb
add
xor
roll
push
enter
push
fidivrl
sbb
mov
jg
iret
jnp
cld
loop
fcomp
add
clc
nop
push
jb
clc
jne
jnp
mov
fs
and
aam
cmp
pop
in
xlat
fabs
sbb
add
inc
jo
std
lret
cltd
cmc
fistpll
push
inc
in
leave
in
aas
xor
sbb
and
call
cld
and
paddd
stos
lret
mov
popa
pop
cmc
or
push
into
cs
sbb
sbbl
mov
pop
push
mov
movsl
dec
jo
xchg
aas
mov
pop
sub
popf
and
into
inc
leave
dec
clc
sbb
scas
mov
data16
mov
loopne
lcall
enter
push
add
and
mov
xchg
sbb
aad
inc
mov
or
ljmp
or
lea
adc
xor
mov
push
jecxz,pt
std
xor
sub
outsl
cmc
jne
stos
mov
push
arpl
fsubl
jp
in
daa
mov
clc
push
fdiv
jns
or
ds
loop
and
lahf
pop
js
mov
aam
adcl
jp
fldt
jno
ljmp
hlt
sbb
mov
arpl
jne
lods
in
fsubrs
scas
xchg
andb
fidivrl
scas
pop
dec
mov
cmp
push
jmp
lahf
dec
inc
outsl
add
in
add
jg
and
cltd
mov
add
push
sti
inc
xor
adc
pop
hlt
gs
icebp
dec
lret
mov
xor
fcmovb
hlt
imul
int
xor
or
add
loop
xorl
add
ja
inc
push
cmp
cmp
dec
inc
mov
pusha
inc
jl
test
xchg
xchg
divb
mov
push
push
das
inc
mov
pop
out
adc
cmpb
stos
insb
add
lods
int3
lea
sbb
jl
add
add
and
pushl
mov
in
mov
repnz
imul
cmpsb
in
push
movsl
mov
sbb
push
mov
mov
push
mov
pop
xchg
std
inc
test
out
push
into
adc
aaa
push
pop
mov
jecxz
push
push
outsb
in
rolb
cli
add
aaa
add
push
push
repnz
test
cmc
push
ficompl
push
shlb
cmp
inc
sahf
jae
pop
dec
pop
xchg
push
outsl
or
fwait
and
cld
test
jbe
ror
sar
pop
mov
mov
xor
addr16
push
xor
jbe
sahf
iret
cmpsb
inc
popa
scas
test
mov
pushf
aad
ss
mov
add
mov
imul
lods
mov
pop
fistl
ret
pop
jns,pt
cmp
loope
pop
lods
jnp
xchg
push
mov
push
pop
shll
xchg
call
pusha
mov
sub
shl
orl
lods
push
xor
ss
in
fcmovbe
nop
mov
push
push
sub
and
cwtl
sub
fld
pop
fdivs
adc
add
cmc
push
mov
in
or
dec
aas
xchg
test
fidivrs
pop
add
push
fcmovnbe
dec
xchg
lods
lds
or
out
pop
pop
xlat
pusha
add
jne
testb
mov
sarb
cwtl
arpl
cmc
mov
xor
aad
dec
mul
add
insb
lock
xor
pop
or
inc
cli
or
lret
mov
pushf
xlat
inc
inc
push
les
fisttpl
and
les
mov
push
lds
or
in
jbe
push
fadds
hlt
pop
xchg
loopne
ljmp
and
and
ret
fidivl
out
xchg
cmpsl
dec
xchg
test
jecxz
inc
jno
clc
jl
push
out
dec
rcl
enter
int3
gs
or
icebp
call
cmp
ss
test
imul
mov
jbe
dec
inc
dec
imul
inc
sbb
fildll
dec
and
sbb
adc
mov
movsb
ret
jecxz
mov
cmp
push
aas
insl
and
sbb
sub
xor
test
push
rcll
enter
add
mov
xchg
rcll
xchg
cmp
leave
cmpsb
fstpl
movb
xor
fmul
loop
cmp
jg
rcrb
xor
cmp
jp
ret
pusha
nop
add
mov
jo
les
xchg
nop
scas
sub
pushf
mov
icebp
out
jo
mov
xor
and
arpl
cmp
lea
xor
ret
xlat
das
cmpsb
cmp
jb
cmp
mov
mov
sbb
imul
aad
jle
std
fstpl
ficompl
mov
dec
mov
ret
sbb
aad
fstl
fsubl
les
repnz
xchg
cmc
jle
push
add
inc
fmuls
out
cmc
arpl
or
test
repz
out
xchg
adc
sub
out
push
outsl
orl
fidivl
adc
popf
jae
push
bound
mov
ret
test
aaa
arpl
mov
rcr
imulb
fwait
push
stos
movsl
popf
dec
dec
push
lea
std
shlb
stos
call
lock
arpl
movl
repz
xchg
not
push
jg
cld
stc
mov
fldt
lret
repnz
mov
dec
cmp
push
xchg
inc
jb
cmp
xchg
fstpt
and
pop
xor
iret
js
pop
test
pushf
inc
dec
mov
inc
sbb
mov
mov
and
push
aad
dec
cmp
pop
xchg
ds
mov
adc
ds
outsb
push
lcall
or
rcl
sti
jmp
das
sti
push
adc
mov
fdivs
bound
mov
fwait
mov
cmp
scas
aam
sbb
dec
flds
add
jbe
ret
jle
call
add
cmp
jno
xchg
add
mov
mov
imul
inc
inc
int3
pop
push
push
loopne
mov
mov
xor
mov
and
and
jp
and
data16
push
lock
jmp
cmp
out
ret
aas
push
dec
aas
leave
addb
xchg
fnsave
xchg
int3
mov
cmp
pushf
clc
iret
mov
decb
out
sub
dec
and
ja
enter
popa
add
fs
test
xchg
sbbl
pop
sbb
add
sbb
scas
lea
loope
push
repz
outsb
jge
jne
xchg
out
xor
pop
cmp
push
sbb
cmp
xchg
pop
dec
ret
stos
aaa
sbb
jbe
repz
enter
xchg
cld
hlt
lcall
data16
aas
stc
adc
jae
adc
inc
xor
test
mov
hlt
or
mov
mov
mov
cmp
ret
mov
inc
repnz
push
jmp
mov
ret
pop
aam
fdivs
inc
push
mov
jecxz,pn
lahf
cmpsl
call
jp
popa
mov
shrb
jo
push
repz
testl
scas
push
dec
fsubs
fidivrs
and
sbb
imul
inc
mov
adc
or
sbb
insl
or
cmp
xor
add
mov
xchg
ds
lods
dec
idiv
les
dec
leave
add
pop
std
mov
dec
lcall
out
into
push
ror
fwait
and
jle
jo
ljmp
jnp
inc
vpsubb
andb
push
in
hlt
fwait
dec
mov
loopne
push
mov
push
and
sbb
test
mov
jecxz
les
test
or
insb
pop
adc
sub
sbb
inc
mov
outsl
enter
sub
sbb
out
lret
out
pop
lret
pavgw
jge
shl
data16
cltd
mov
cltd
mov
cltd
adc
test
inc
lcall
fcompl
dec
inc
arpl
adc
fcmovu
lcall
hlt
ret
ja
and
lret
pop
out
insb
out
inc
mov
xchg
xor
mov
and
jbe
lahf
jecxz
icebp
sub
out
mov
sar
xor
mov
int
ds
movsb
je
clc
mov
sbb
icebp
je
or
and
push
mov
push
in
lea
popa
adc
push
mov
loope
jle
mov
mov
pop
loop
out
stos
pcmpgtd
push
insb
fisttpl
pop
cld
cmpb
sbb
imul
popa
repz
xchg
sahf
mov
ja
push
lods
mov
pushf
mov
int3
cmc
aas
adc
xor
sbb
xchg
int3
shll
lss
test
push
pop
loope
in
jae
lock
cmp
sbb
xchg
mov
and
lods
pop
inc
cmp
sub
or
mov
push
pop
jecxz
adc
data16
cmp
sbb
mov
xor
int
mov
cltd
push
call
in
mov
mov
inc
bound
push
icebp
push
add
cmp
scas
vsubss
sahf
bound
mov
or
call
dec
xchg
mov
fldenv
lret
push
xchg
dec
cmp
sub
hlt
mov
mov
fidivrs
push
pushf
push
xchg
mov
add
jl
loopne
aaa
mov
loope
sbb
movsl
add
push
inc
and
sbb
mov
push
push
fwait
jg
ljmp
jnp
xlat
mov
pop
push
adc
jns
adc
pop
mov
and
mov
jge
inc
cmpb
dec
inc
imul
leave
pop
push
pop
pop
ja
push
inc
ljmp
call
inc
dec
rorl
or
sub
jae
push
pushf
push
and
xor
dec
lea
dec
movsl
jb
fwait
movsb
inc
mov
loopne
jg
popf
iret
mov
test
xlat
rclb
xor
into
clc
loopne,pn
adc
jno
sar
sahf
fucomip
sbb
sti
push
mov
loope
loopne
stos
jmp
or
aad
push
arpl
lock
fisubrl
xchg
sub
shll
jge
or
sbb
fwait
rorb
jg
mov
mov
std
push
and
sub
sbb
pop
lret
or
xchg
testl
inc
mov
enter
addr16
mov
js
das
sub
push
jl
or
lea
mov
scas
and
sbb
ljmp
fs
sub
xchg
std
mov
jle
mov
jl
xor
jns
xor
dec
ret
mov
and
cmp
inc
int
dec
stos
lock
dec
scas
push
inc
xchg
loope
mov
or
jmp
adcl
jecxz
jl
fdivrs
cld
cs
fdivrs
mov
inc
popa
add
sub
movl
pop
xchg
push
jge
mov
pop
or
test
pop
jbe
inc
sub
fisubs
or
sub
fistps
fbld
lret
das
lods
insl
inc
lock
sbb
mov
pop
jno
movsb
push
fiadds
int3
pop
out
push
xchg
sbb
mov
movsl
cmpsb
test
fwait
xor
shlb
jle
jne
fnstenv
xor
and
std
iret
std
adc
jne
mov
cmpsb
xchg
gs
xchg
pop
stos
mov
test
jns
push
mulb
adc
mov
test
xor
mov
mov
lret
loop
inc
aad
adc
add
mov
xor
fdivs
mov
inc
ja
fcompl
addb
pop
inc
mov
and
jge
cltd
mov
in
sahf
call
push
bnd
mov
mov
div
lock
push
mov
jno
lret
imul
aam
shll
lds
aad
pop
ds
or
nopl
jno
xor
fidivl
push
shlb
insl
push
push
fs
mov
push
add
mov
idivb
cli
cmp
out
jae
sub
sbb
cmp
cmp
jg
fcompl
cmpl
insb
inc
mov
jno
fwait
push
cld
mov
dec
dec
fwait
push
cmc
test
adcl
jmp
cmp
sub
pop
jns
into
push
push
lret
shlb
add
mov
inc
in
lret
sbb
xchg
mov
sub
xor
lret
sarb
jnp
and
dec
imul
push
xor
mov
out
add
pop
pop
pop
jg
mov
mov
mov
out
push
push
cltd
adc
mov
imul
loopne
loop
pop
enter
mov
inc
cwtl
push
pop
xchg
stos
arpl
and
shrb
push
pop
pop
lock
sub
sti
pop
sbb
clc
jno
dec
cli
stos
cmc
in
dec
int3
shr
add
jecxz
jecxz
push
mov
sub
shll
bound
sub
jecxz
and
jle
add
cs
or
lds
insl
int3
vpsraw
xchg
sbb
push
xlat
dec
ljmp
dec
xchg
inc
inc
jne
test
fwait
or
jl
cld
sub
aam
add
das
js
mov
int
xor
in
insb
test
xor
pop
or
inc
and
lods
and
xorl
push
jne
imul
push
into
repz
imul
dec
adc
ja
insb
mov
mov
lcall
ds
and
adc
jo
or
jns
mov
fucomip
pop
aad
cmpb
fidivrl
cltd
fnstsw
ror
stc
test
pop
push
sbb
inc
xchg
sub
int3
sti
stos
shrb
cmp
je
call
fdivrs
push
xor
mov
push
push
jle
mov
repnz
ja
into
les
adc
jae
imulb
xchg
mov
sbb
orl
or
xor
pop
adc
mov
xchg
mov
fs
mov
pop
push
push
pop
xchg
pop
lods
lods
data16
js
mov
dec
stos
ret
cmpl
adc
aad
xor
and
movsl
lds
sbb
xchg
sub
mov
lods
stc
cmp
mov
test
bound
movsb
sbb
add
xor
jb
pop
mov
sub
in
pusha
mov
jmp
movsb
sbb
jge
mov
sahf
xchg
dec
cwtl
inc
popa
cmc
fimuls
lahf
sub
adc
aam
sbb
push
mov
add
sbb
pop
out
enter
fnstsw
test
sti
add
add
imul
fldenv
es
pop
push
mov
inc
cmpsl
lods
mov
aaa
fdivr
pop
xchg
sbb
jmp
sub
mov
int
mov
cs
mov
mov
jns
and
dec
subb
jmp
dec
or
dec
movsl
daa
pop
mov
lea
mov
adc
les
jg
inc
or
pop
and
sahf
jl
add
mov
mov
mov
repz
adc
loope
push
jno
dec
fcompl
xor
fst
jo
sar
ret
dec
pushf
adcl
xor
xchg
fidivl
jle
sbb
mov
xchg
faddl
add
jmp
cmp
sub
inc
jl
cmpsl
mov
adc
dec
movsb
mov
mov
sahf
lods
dec
jno
adc
fstpt
xchg
jnp
popf
adc
jmp
popf
enter
mov
dec
call
or
jg
addl
inc
test
mov
xchg
push
std
fbld
jg
aaa
pop
test
jno
imulb
push
addr16
cmp
pop
jp
pusha
xlat
inc
pop
in
lahf
and
mov
xchg
adc
add
lret
pop
imul
cmp
push
push
cld
lahf
xchg
cld
adc
xlat
push
insl
xchg
pop
ss
pop
ror
in
and
or
leave
push
mov
sti
aaa
mov
stos
daa
jnp
xor
fnstsw
jmp
pop
sahf
je
push
sub
out
into
arpl
inc
out
enter
jg
rclb
icebp
les
lahf
js
dec
or
mov
xchg
jl
ret
cmc
mov
mov
adc
ss
dec
insl
and
push
out
fisubl
mov
push
fadd
clc
dec
rcr
jle,pn
lcall
xchg
jns
jmp
lods
xlat
es
inc
mov
mov
pusha
mov
ljmp
inc
jle
push
push
sti
out
lods
adc
jo
repnz
sar
repz
mov
inc
je
adc
ret
sti
xor
into
jp
gs
mov
popa
pushf
test
push
gs
jmp
sbb
cmp
sub
sbb
xchg
inc
adc
add
jnp
les
fwait
mov
xchg
and
loopne
jnp
fistpll
sbb
dec
mov
mov
or
shll
adc
ret
mov
loopne
mov
add
cmp
lret
xchg
sar
pushf
dec
pop
dec
push
xchg
push
ljmp
fs
test
xor
mov
jp
mov
mov
shrb
test
addr16
lahf
push
push
out
fildl
mov
lods
daa
loopne
pop
pop
lret
clc
fsubs
push
xor
add
mov
lahf
mov
push
push
sub
and
jne
jecxz
dec
pop
fwait
call
jns
jmp
adcl
bound
add
daa
xor
nop
and
leave
scas
xchg
insb
int
xchg
xor
sbb
shlb
mov
jmp
and
and
xchg
inc
fsubrp
mov
es
sbb
jo
adc
mov
and
adc
jmp
xor
add
sahf
decb
xor
cli
jge
mov
push
scas
pushf
out
stos
js
leave
xor
push
in
pop
popf
and
adc
popf
insl
ja
test
pop
add
repnz
or
push
push
add
stos
subb
ss
arpl
outsl
cmp
lcall
ret
mov
out
xchg
pop
mov
xor
fsubrs
or
pop
lret
mov
jmp
push
jo
insl
jno
mov
push
testb
sub
push
push
jne
sbb
mov
sbb
stc
inc
dec
and
cli
cmp
adc
cmpsl
lahf
lods
out
stc
sbb
xchg
lock
mov
inc
ret
leave
mov
cld
dec
movsb
dec
mov
pop
xchg
sbb
xor
in
loopne
cmc
sbb
sub
pop
fiadds
std
sti
in
sbb
out
or
jl
inc
xchg
xchg
xchg
rcrb
stos
cli
sub
pop
adc
add
sub
dec
cltd
lcall
pop
and
je
insl
pop
inc
mov
mov
and
inc
movsl
test
and
mov
mov
dec
xor
xor
xor
scas
jmp
push
fsubrs
loopne
push
das
int3
add
jns
inc
push
mov
xor
add
mov
arpl
out
mov
shlb
adc
setno
cmc
outsb
xchg
mov
or
push
mov
push
and
dec
jle
aaa
pop
push
in
adc
dec
fimuls
dec
pop
mov
mov
repz
pop
push
daa
jmp
aad
fs
or
inc
or
and
outsl
xlat
pop
fcoml
mov
cmpsb
xchg
daa
outsb
cli
cld
add
or
add
jle
fdivrl
sbb
inc
sbb
xor
pop
idiv
add
or
aas
shrb
push
adc
and
jl
mov
sub
testb
fisubrs
lcall
out
loopne
push
jl
sahf
and
ljmp
pop
outsl
cli
add
out
cltd
dec
lcall
xor
insb
movb
mov
cmpb
jns
xchg
jb
lret
shlb
jnp
xchg
ret
add
or
popf
lcall
pop
ficoml
xor
jns
mov
mov
push
addr16
fcom
scas
cmpb
fnsave
dec
dec
sbb
mov
std
idiv
sub
jnp
stos
inc
mov
sub
pop
outsl
lret
jns
iret
adc
jo
jmp
mov
mov
jo
add
or
push
ficoml
pop
hlt
cmc
test
xchg
imul
xchg
add
dec
or
adc
shlb
mov
sub
xorb
push
call
pop
cli
mov
sbb
add
xchg
add
add
jg
sub
pop
jno
or
dec
pop
cwtl
imul
inc
jbe
pop
jl
or
scas
ljmp
mov
out
pop
push
je
mov
push
jmp
lock
mov
and
dec
jo
aas
repnz
scas
pop
shll
xor
rcrb
cwtl
roll
mov
aam
cmp
sbb
dec
mov
xchg
clc
movsb
shll
out
decb
es
pop
scas
sub
call
push
sti
xchg
cli
push
rcrb
jnp
div
cmp
pop
sbb
sbb
sbb
pop
in
xor
fdivs
mov
enter
arpl
push
cmpsl
jo
push
jmp
jae
outsl
mov
popa
mov
in
push
mov
and
lock
adc
mov
insl
and
cli
imul
or
cmp
popa
out
icebp
scas
adc
int3
movsb
sub
sti
and
jno
jge
jmp
das
scas
pop
cmp
data16
push
and
mov
js
rorl
inc
inc
jle
stc
xchg
packuswb
adc
xor
fnstcw
push
shl
pop
stos
jp
lahf
rcll
inc
mov
rolb
sbb
sub
cmp
in
aas
or
bound
fdivs
ret
jl,pn
test
dec
mov
std
jno
mov
out
add
xchg
or
pop
imul
adc
dec
mov
int3
outsb
mov
dec
repz
add
add
fcomps
pop
aaa
mov
jno
mov
and
pop
sbb
je
xchg
loopne
loopne
fidivrs
or
aas
shlb
pop
pop
pushl
outsl
es
sbb
push
bound
sbb
sti
data16
test
call
shrb
pop
jae
or
inc
sbb
bswap
cmp
out
cmp
inc
out
mov
sbb
adc
sbb
lgs
or
sti
xchg
push
nop
lds
out
sub
add
and
aam
sbb
or
call
sbb
out
test
sub
and
pop
movsl
mov
xchg
mov
scas
ljmp
xlat
xchg
repnz
bound
add
sbb
jb
into
loope
rolb
cwtl
pop
das
push
sarb
iret
xchg
mov
into
adc
xor
mov
xchg
xchg
ret
lods
cmp
jmp
adc
dec
inc
das
cmp
adcl
ss
jne
icebp
cmpl
pop
fsubr
sub
xchg
out
adc
lret
inc
popf
loope
cltd
ljmp
loopne
add
fdivrp
js
add
mov
mov
cs
push
mov
dec
dec
jbe
add
insb
rcll
add
enter
sub
in
mov
pop
adc
mov
cmp
loope
lods
aas
lahf
push
xchg
jno
jo
inc
ss
and
push
lds
aam
xor
cwtl
adc
bound
cmp
repz
pushf
xchg
int
mov
js
sarl
pop
jmp
sub
push
mov
inc
dec
mov
popf
stos
ss
arpl
jp
xchg
sbb
lods
xor
push
lahf
mov
xor
pop
mov
jb
xor
repnz
xor
xchg
clc
scas
mov
mov
inc
sub
sahf
ljmp
mov
push
sahf
stos
xor
add
test
jge,pn
les
or
ds
adc
sbb
mov
jb
mov
or
leave
call
or
add
shlb
sub
out
ffreep
das
push
xchg
popf
add
mov
ret
push
dec
xchg
in
mov
ss
mov
xor
ret
and
mov
mov
jmp
xchg
sarl
fisubl
pop
ret
bound
push
sbb
mov
es
and
or
xor
lods
xor
fcmovne
jae
jae
mov
out
and
rol
icebp
lods
add
jmp
push
mov
cld
xor
rcrl
jo
xor
pushf
ds
popa
fs
cltd
clc
rolb
and
out
push
pop
inc
inc
mov
mov
daa
add
add
sarb
jg
sub
inc
movsl
les
adc
mov
pop
outsl
dec
cmp
data16
shll
repz
or
rclb
jg
mov
jecxz
and
sbb
lcall
xchg
fcmovnu
dec
leave
ds
call
push
cmpsb
xchg
cmp
pop
mov
push
jle
adc
aaa
sti
sbb
push
mov
xchg
sbb
pop
mov
xor
mov
loope
fwait
das
add
xor
bound
pop
and
lret
adc
or
cmpsb
test
jmp
invd
lret
ret
add
nop
xchg
jge
push
jnp
inc
xchg
int3
mov
popa
mov
outsb
push
jmp
dec
and
clc
loope
bound
dec
in
jns
pop
fmulp
adc
add
gs
pop
pop
and
sub
aam
popa
xchg
mov
rorb
movsl
adc
ljmp
push
xchg
pop
and
inc
dec
xchg
mov
push
bound
xlat
add
mov
mov
enter
dec
jle
xor
cwtl
dec
sbb
ret
bnd
int
scas
repz
je
fs
or
je
xchg
xor
movsl
cmpl
cmp
sbb
insb
rorl
pop
ds
pop
mov
lahf
jg
gs
stos
jl
test
mov
outsb
popf
lds
daa
xchg
inc
out
pop
xor
or
scas
xor
jnp
pop
cmp
and
jge
rcrl
add
push
pop
mov
lock
or
push
or
mov
insl
push
mov
xchg
cmpb
mov
push
or
rorl
sbb
sbb
dec
dec
sub
add
mov
xchg
adc
pushf
sub
and
mov
sarl
aaa
arpl
test
mov
jno
adc
sbb
ltr
aam
jbe
push
cmp
arpl
imul
jbe
xchg
sub
pop
fildll
es
dec
cmpsb
xchg
repnz
mov
and
xor
fldl
inc
push
rcrb
enter
ret
sahf
insb
or
mov
sbb
js
imul
sbb
xchg
sub
sbb
jae
lret
jo
iret
scas
repnz
or
leave
pop
mov
out
out
and
jb
lock
addb
lock
cs
push
insb
lret
mov
add
push
and
fbld
sub
mov
int3
sbb
cs
mov
adc
inc
xchg
jns
or
mov
aaa
aas
loope
mov
jg
lret
test
sti
inc
mov
popf
js
cmp
dec
inc
or
sbb
maxps
jl
push
cld
cmp
xor
jo
popa
loop
divl
addb
outsl
data16
sbbl
inc
sub
test
nop
adc
cltd
fdivrl
xlat
lret
add
pop
lret
adc
inc
push
es
fdivp
jno
rorl
test
das
fldt
dec
pop
cli
test
scas
sub
xor
icebp
xor
imul
adc
sti
mov
sbb
call
pop
mov
sub
sub
inc
add
jns
pop
inc
mov
jne
ljmp
arpl
addl
jb
test
xor
jne
cwtl
das
inc
lds
mov
aad
fs
inc
cli
icebp
mov
adc
push
es
addb
scas
imul
and
jge
xor
push
rolb
push
jmp
into
cltd
or
imul
out
pop
add
mov
enter
stc
inc
jb
push
popf
pop
shll
xlat
mov
sarl
scas
xchg
outsb
push
jp
xor
cwtl
out
add
inc
push
mov
push
xor
stos
sahf
mov
pop
es
imul
lock
ret
pusha
dec
jg
in
aas
shrl
je
mov
pop
cli
push
lods
clc
incl
data16
push
fnstenv
mov
push
cmc
ret
jo
jbe
mov
scas
jmp
xor
testb
or
scas
call
test
xor
add
std
mov
out
jl
pusha
movsl
adc
jnp
or
adc
loopne
push
mov
xchg
dec
xchg
neg
mov
cmc
sbb
xchg
mov
dec
int
xorl
jo
or
nop
fdivr
push
inc
mov
pushf
rolb
xor
cmp
jge
mov
rolb
fdiv
cwtl
int
and
add
repz
sahf
adc
aaa
das
mov
mov
ss
push
dec
bound
dec
adc
dec
gs
and
push
add
fcoms
addb
test
mov
arpl
test
enter
aad
sti
lcall
xor
push
test
dec
cmp
jae
test
xchg
in
and
clc
mov
pop
jmp
leavew
mov
das
sub
mov
aas
ja
ret
int
outsl
in
lret
lea
or
xchg
outsl
js
and
adc
pop
pushf
mov
xchg
sahf
dec
inc
mov
xchg
aad
cmp
lret
mov
out
cmpsb
lock
inc
jle
je
adc
movsl
fistpll
xchg
lcall
jnp
sbb
insb
cmp
out
push
mov
cld
hlt
out
sbb
jmp
sbb
pop
add
dec
or
xchg
adc
lea
or
xchg
adc
mov
cmp
fadds
add
test
inc
xchg
pop
cli
adc
js
into
psubd
dec
lcall
out
cmpsl
rcr
popf
pusha
ljmp
cs
xor
ja
cmpsl
jb
xchg
mov
pop
dec
fistps
popa
sbb
xchg
adc
fisttpll
adc
or
iret
out
pop
dec
sub
cmp
add
mov
pop
and
or
loopne
pop
adc
pusha
shl
pop
dec
xchg
inc
shl
lcall
ret
lea
cmp
jg
out
lea
pop
pop
neg
in
or
sbb
sbb
nop
popf
add
out
inc
push
enter
addr16
aam
mov
addr16
aad
iret
lahf
sub
jle
int3
sub
jne
mov
pop
shll
mov
sahf
push
ret
out
fldl
or
pop
prefetcht1
inc
cmpsb
bound
push
sbb
lock
cltd
inc
mov
jo
repz
aam
mov
hlt
in
fildl
adc
inc
dec
xor
rcrl
movsl
sub
movsl
jb
dec
push
idivl
and
lahf
mov
mull
cmpsb
stos
pushf
mov
ljmp
iret
sub
and
pop
mov
pop
scas
mov
aas
jmp
cs
pop
and
inc
xlat
cwtl
dec
bound
stos
call
xor
sub
in
pop
push
sti
jno
inc
loopne
or
and
lea
mov
xor
inc
xor
cmp
lds
ficoms
inc
mov
push
pop
sub
sbb
adc
icebp
adc
sti
aas
shl
and
jecxz
push
stos
test
ds
loopne
mov
xchg
repnz
les
mov
ficoml
push
sti
imul
jp
fisubs
in
xor
add
repz
xor
adcb
inc
inc
int
cmp
cmp
inc
xchg
cmpsb
shll
gs
dec
dec
gs
mov
in
fsubrl
push
jb
lea
pop
gs
dec
and
mov
jge
dec
sbbb
aaa
jle
ret
xor
aad
mov
insl
outsb
mov
push
loop
pop
mov
add
clc
sahf
das
xchg
and
repz
sarb
mov
xor
fstps
into
adc
gs
mov
xor
mov
mov
into
arpl
jnp
pushf
leave
daa
stc
or
pop
mov
xor
lea
and
hlt
mov
pop
ret
mov
or
push
xor
pop
push
jge
in
sti
rolb
cmp
call
jne
pushf
inc
scas
adc
push
mov
rorl
xchg
xchg
lcall
ljmp
xchg
ss
loopne
testb
xchg
push
int
call
pop
push
sarl
xchg
outsb
roll
imul
hlt
jne
icebp
dec
cltd
inc
sbb
and
out
push
dec
out
rcrl
sahf
adc
and
es
mov
fwait
and
cmp
das
addb
sbb
call
push
add
push
test
mov
iret
mov
and
std
inc
mov
push
pop
repz
jbe
enter
in
repnz
dec
imul
push
out
sub
dec
mov
lahf
loope
add
popl
in
dec
sub
dec
ret
pushw
jb
iret
arpl
imul
out
xchg
mov
les
dec
add
jnp
sarl
dec
ficoml
icebp
and
subl
mov
loop
pop
mov
push
popf
xchg
lods
data16
loope
sar
std
dec
in
jg
push
push
inc
jl
xchg
into
push
dec
mov
lods
fcomps
scas
sub
faddl
xchg
popf
or
nop
pop
pop
flds
sub
inc
jmp
sub
icebp
pop
push
fsubrs
xchg
andl
mov
dec
gs
hlt
xlat
les
fldenv
es
mov
adc
push
pop
sbb
sbb
int
into
sub
push
lahf
mov
les
mov
cwtl
icebp
sub
xchg
sbb
jp
adc
mov
push
push
lcall
outsb
popa
dec
pop
enter
out
imul
fwait
add
xchg
faddl
stc
out
shll
insl
aas
or
out
xor
mov
out
xchg
int3
sbb
and
jl
cli
dec
out
xchg
insl
fcmove
data16
int
xlat
jecxz
or
adc
lods
dec
aaa
lret
repz
lahf
mov
jl
mov
jno
push
mov
push
outsl
mov
pop
mov
mov
jae
loopne
cwtl
sub
or
dec
test
xchg
sbb
call
pop
mov
mov
add
mov
mov
lods
out
sbb
xchg
push
and
xchg
into
cwtl
incl
cli
sbb
idivb
jbe
sub
sub
cmpsl
enter
repz
enter
xorb
es
push
pushw
dec
sbb
lcall
dec
loop
jne
pop
ret
add
push
xchg
aam
add
mov
and
ja
stc
nop
pop
data16
pushf
mul
cs
or
mov
pop
cmp
or
test
sub
insl
in
fsubs
sbb
sub
or
ficoms
rolb
xor
inc
lcall
outsb
dec
lret
and
mov
push
int
iret
vcmpss
lcall
aam
nop
or
ds
ret
mov
les
daa
and
or
ss
or
mov
cltd
js
push
pop
pop
jno
jo
dec
shlb
mov
mov
je
fsts
loop
sbb
stc
push
lock
insb
add
jmp
add
pop
in
pop
mov
xchg
xchg
add
mov
loopne
das
into
jbe
jecxz
mov
pcmpgtb
dec
jno
repz
push
les
sbb
pop
out
jb
push
shlb
jo
mov
sahf
outsb
xor
daa
xlat
ret
sbb
mov
mov
and
test
add
rol
mov
fnop
aam
dec
loopne
and
rcrl
dec
xor
pop
push
enter
dec
ret
in
push
adc
std
dec
js
mov
xchg
iret
lods
das
sub
sub
ljmp
in
cmp
cmc
fiadds
sub
mov
int
stos
je
pop
addr16
fisubrs
jo
fidivl
das
or
test
pushl
fistpl
adc
scas
mov
sbb
or
outsb
pushf
pop
dec
in
fwait
pop
gs
inc
inc
test
sub
pop
push
jge
dec
ds
and
aas
xor
rcrb
shlb
outsl
stos
nop
imul
fwait
xchg
mov
call
dec
fsubl
push
rol
inc
jb
adc
push
into
je
cmp
jmp
out
mov
pop
rol
push
dec
or
pushf
inc
pop
cmp
and
scas
or
jmp
mov
arpl
pop
fnstsw
mov
dec
dec
mov
sbb
mov
or
cmp
imul
fstl
mov
cmp
stos
sbb
fldenv
lcall
jecxz
inc
adc
pop
pop
sub
pop
dec
pop
jmp
jb
stos
andl
push
mov
movb
xchg
adc
loop
mov
sub
movsl
jecxz
jg
fcmovb
jo
xor
add
insb
adc
mov
add
movsl
data16
jae
movsb
scas
sub
rorl
negl
lret
lock
xorb
sbb
cmp
into
mov
mov
xor
or
int3
mov
push
lea
cmp
cld
out
push
inc
negl
ficomps
lret
mov
and
adc
cmp
mul
stos
rdpmc
ss
aam
std
test
jbe
ja
repz
pop
xor
out
dec
stos
scas
pop
pop
repnz
test
enter
pusha
sub
imul
sbb
add
notb
out
loop
mov
das
xchg
lret
mov
idivl
popf
cmc
fildl
or
adc
test
jg
cmpsb
jge
cwtl
aaa
adc
sub
shlb
push
insb
add
cmpsl
and
lret
mov
inc
jae
xor
js
push
vmread
or
adc
in
xor
mov
fildl
in
inc
scas
or
clc
jno
adc
andl
jge
dec
sahf
cmp
ss
pop
insl
fwait
sub
sbb
loop
imul
js
adc
or
adc
in
cmpsb
jp
jno
push
cmp
or
mov
sub
dec
aaa
pusha
shr
sarb
push
adc
pop
xchg
xor
push
push
mov
push
ja
cs
pop
loopne
xchg
mov
int3
cmp
icebp
cmpsl
xchg
mov
aas
rcrb
lock
add
ja
xor
push
pop
les
insb
mov
xor
in
jg
push
mov
jno
pop
adc
add
pusha
mov
mov
sub
pushf
cltd
mov
fistpl
and
push
pop
stc
mov
xor
inc
cs
ljmp
rcrl
fsts
stc
scas
icebp
jbe
fcmovnbe
out
cmp
inc
sbb
test
and
pop
sbb
loope
cld
loopne
jnp
sub
pop
clc
sub
xchg
imul
lds
icebp
jmp
repz
popf
mov
dec
clc
nop
out
cld
sbb
mov
jp
cmp
jecxz
in
pop
push
push
xor
jne
push
pusha
sbb
xchg
out
push
and
pop
imul
mov
hlt
add
movsb
ljmp
mov
sbb
loop
in
in
or
pcmpeqd
dec
inc
sahf
push
movsb
and
add
dec
cltd
cmpsb
add
inc
sbb
xor
imul
push
lahf
jp
adcl
mov
push
icebp
jmp
mov
pop
or
dec
dec
rcr
into
ret
ficoms
fwait
dec
pop
add
mov
xor
xchg
call
jmp
fs
pop
addl
adc
add
nop
adc
lds
dec
inc
dec
add
jns
jo
sbb
insl
push
xor
lret
sub
lcall
push
in
pop
orb
push
or
sti
aad
fsts
dec
xor
mov
pop
cmp
ficoml
loopne
jnp
pop
les
rorl
mov
xor
lods
pop
xchg
clc
imul
dec
mov
pop
lea
imul
xchg
add
add
add
test
in
fcmovnu
roll
lock
mov
or
cmp
test
movsl
push
xor
adc
xor
faddl
and
andl
imul
andb
mov
and
pop
xor
xor
adc
adc
fwait
cwtl
gs
jne
in
cmpsb
adc
cwtl
xor
sbb
adc
movsl
push
out
pop
xor
jo
sub
sbb
test
mov
adc
xchg
cmp
lret
mov
dec
adc
enter
cli
and
xor
notb
xchg
lods
add
sub
icebp
push
dec
in
std
inc
push
mov
fucom
adc
pushf
stos
outsb
out
orl
add
std
repz
loope
add
pop
scas
mov
mov
into
jg
shll
pusha
fidivrs
movsl
push
jle
jecxz
or
stc
rolb
or
insb
add
inc
pop
enter
daa
ficompl
adc
loopne
jb
xchg
stos
repnz
lea
mov
mov
leave
fbstp
xor
int3
push
bound
mov
and
xchg
lock
pop
push
ret
adc
push
testb
fbstp
enter
adc
lahf
mov
cmp
pop
inc
jns
scas
xchg
mov
push
or
dec
add
gs
mov
xor
sti
jne
push
mov
cmpsl
mov
xchg
ds
or
out
jbe
in
pop
sbb
andb
adc
scas
pushf
jb
jne
sbb
push
mov
xlat
and
subb
dec
stos
cmp
or
xchg
ja
and
outsl
call
rclb
dec
add
pusha
mov
jo
push
dec
cmpsb
sub
push
loopne
dec
pop
ss
mov
js
push
mov
pop
pop
mov
xchg
stos
add
inc
stos
inc
test
mov
push
iret
and
dec
jle
pusha
daa
dec
dec
mov
jb
jge
add
sbb
push
jge
outsb
jecxz
mov
fwait
aam
jg
mov
or
repz
or
addl
or
xlat
dec
aas
push
dec
lret
stc
adc
lret
sub
cmp
hlt
cs
push
lods
addr16
fldcw
pop
adc
and
ja
cmp
fdivr
jecxz
lahf
cmp
pop
stc
jns
out
push
sub
and
sbb
pop
in
jbe
aad
push
je
xchg
out
pop
cmp
mov
sbb
movsl
orl
cmp
mov
sub
pusha
inc
cmpsl
jecxz
rcll
mov
sbb
mov
rcrb
jecxz
mov
lcall
sbb
inc
or
or
mov
push
imull
in
mov
cwtl
cli
or
fcmovbe
int3
or
leave
dec
pop
mov
out
sub
jg
add
shl
cmp
out
lds
mov
inc
pop
jle
lods
jg
stos
test
pop
in
adc
pop
fldcw
mov
push
cld
lods
and
repnz
add
out
cli
into
push
stc
pop
in
shll
push
mov
cltd
inc
mov
loop
inc
sar
mov
test
push
cmp
mov
data16
notl
add
and
or
add
mov
jnp
xchg
xchg
cmpsl
mov
mov
lods
mov
mov
test
or
fwait
xor
leave
cmp
pusha
add
or
mov
imul
and
cmc
ss
dec
xchg
cs
adc
jge
jae
xchg
push
inc
push
jl
mov
adc
xor
jge
and
out
cwtl
mov
js
inc
out
ss
jae
roll
dec
jns
sbb
popf
jp
notl
adc
jbe
icebp
loopne
fsubs
cld
inc
add
jp
outsb
ja
daa
jecxz
sub
pop
ljmp
jge
mov
sbb
icebp
xlat
aas
push
and
or
inc
insb
push
push
std
rcl
in
jmp
outsb
dec
out
jmp
cmp
repnz
mov
xor
ds
mov
mov
sub
movsb
les
stc
xchg
loop
jg
adc
js
clc
mov
in
xlat
ja
sub
lret
xchg
sahf
xor
bound
push
mov
fisubrs
push
lods
mov
cmp
xchg
outsb
push
xchg
inc
test
scas
mov
mov
outsl
mov
sub
aas
filds
pop
mov
add
lret
mov
out
mov
push
fxch
stos
out
jg
mov
mov
clc
cmp
mov
pusha
xchg
mov
data16
and
aam
jae
jp
jecxz
mov
cmc
mov
sub
stos
std
aad
iret
xor
lods
lods
xchg
xor
das
cmp
xchg
mov
mov
sti
inc
jne
lcall
aam
xor
fwait
call
fwait
ret
in
push
fnstcw
mov
lahf
inc
cmp
daa
into
loope
dec
jecxz
inc
lcall
rep
adc
outsb
pusha
mov
jne
out
pushf
mov
and
pop
dec
daa
sub
mov
push
mov
mov
sub
fbld
ja
std
pop
jge
lods
shlb
xchg
and
cmp
mov
pushf
sbbl
cmpsl
mov
lcall
push
ret
ja
ret
xor
mov
in
lret
sbb
js
sti
scas
pop
rorb
xchg
mov
adc
add
mov
jmp
dec
in
leave
lods
dec
lods
cmpsb
lahf
inc
dec
push
pop
dec
rcrb
mov
mov
xlat
mov
sti
testl
mov
sbb
pop
fildll
das
ja
xchg
in
xchg
popf
call
movsl
pop
fsts
lcall
stos
mov
cmp
loop
push
daa
repnz
jno
cmp
sub
int
imul
xor
icebp
inc
xchg
and
arpl
pop
data16
pop
arpl
out
jb
inc
add
xor
int
popf
cmp
add
xchg
mov
out
lcall
pop
stc
add
hlt
xchg
adc
xchg
xchg
cltd
adc
in
loop
mov
cmc
stc
xchg
arpl
cmp
andl
sti
das
mov
inc
cltd
mov
scas
mov
pop
push
stos
push
mov
outsb
fcmove
into
fidivl
mov
and
inc
dec
lds
stos
cmp
cmc
mov
nop
push
push
imul
movsl
and
adc
movsb
stos
pop
and
imul
popf
imul
sbb
jmp
lret
cwtl
outsb
mov
mov
xchg
call
xchg
mov
daa
inc
mov
fidivs
dec
rcll
loopne
sbb
inc
push
mov
pop
daa
sub
mov
and
fld
mov
iret
pop
adc
in
jg
adc
test
stos
gs
aaa
mov
sbb
xor
push
data16
dec
int3
or
in
jae
insb
xor
fidivrs
addr16
lret
xchg
fcompl
adc
fwait
dec
mov
subl
mov
out
cmpsl
popa
iret
loope
xorl
mov
push
adcl
frstor
xchg
mov
inc
and
test
inc
mov
test
adc
or
adc
pop
outsb
fbstp
js
sub
ljmp
push
in
cmp
sbb
sbb
outsl
adc
fildl
push
cmp
add
push
dec
mov
leave
in
inc
push
cmp
and
mov
sti
cmp
fmull
mov
add
and
push
mov
pop
and
lds
add
xor
enter
add
mov
dec
out
add
in
lcall
sti
lock
xor
jp
cmp
xchg
lods
and
scas
fsubs
xor
bound
dec
sbb
addr16
les
pop
mov
mov
aaa
loop
adc
leave
out
out
ret
mov
xor
xchg
jp
add
xchg
mov
mov
xor
pop
dec
scas
sub
pusha
test
ljmp
dec
arpl
sbb
loop
dec
cmp
inc
imul
dec
int
das
fwait
cmpsb
mov
int3
std
adc
andb
push
and
out
loope
clc
nop
shl
dec
sub
xor
mov
cmpsl
lahf
cmp
mov
mov
push
insb
pop
adc
add
sbb
and
mov
mov
ljmp
dec
inc
or
cmp
out
pushf
mov
or
ja
js
xor
rclb
loope
mov
jge
es
test
dec
jle,pt
pop
mov
cmp
push
or
cmp
das
fcompl
sub
mov
es
ds
sub
lret
enter
mov
adc
setl
inc
lret
cmpsl
push
fwait
jne
ds
mov
xchg
movsb
mov
inc
aad
je
mov
pop
cmp
insl
mov
not
xor
mov
int
push
xlat
lods
icebp
andb
pop
jmp
push
mov
mov
loop
mov
cmpsb
and
mov
flds
cmc
data16
imul
pop
mov
xchg
arpl
sub
dec
mov
inc
loop
aas
popf
mov
out
push
insb
push
pop
or
out
cmp
mov
xor
push
or
push
out
mov
xor
inc
cld
scas
ror
push
js
mov
push
push
int
ret
xor
dec
daa
shrl
adc
xchg
mov
inc
adc
aad
mov
or
push
adc
fsts
mov
ret
stos
cs
pop
mov
jne
stos
jmp
ficompl
lods
xor
into
mov
push
sti
sub
pop
imul
push
pop
push
sub
pop
test
mov
xchg
loop
mov
sub
dec
sbb
fwait
push
adc
cmp
add
sub
sub
outsl
aam
in
loope
mov
jnp
leave
mov
rorb
xor
lahf
xchg
xchg
xchg
cli
outsl
out
mov
mov
xchg
push
pop
adcb
lods
cmp
mov
scas
sbb
jl
shl
or
hlt
ds
sahf
mov
ds
mov
push
test
cmp
sbb
mov
add
daa
sub
addr16
xor
jne
or
add
mov
adc
js
bound
lcall
pop
jg
mov
shlb
adc
dec
dec
mov
sahf
fisubl
and
in
or
jne
dec
cmp
call
insl
ds
fdivrl
daa
decb
pop
xor
add
pop
inc
insb
hlt
jns
push
adc
jge
mov
or
sbb
jg
sub
aas
je
mov
test
orl
mov
sub
mov
out
rolb
in
ja
jg,pn
dec
dec
mov
jl
out
ljmp
mulb
xor
pop
push
addr16
fldenv
stos
pop
jne
ret
addr16
mov
sbb
dec
jp
dec
jg
push
xchg
cs
and
popf
sbb
es
sbb
inc
sbb
and
or
out
inc
jns
ss
adc
popa
add
ja
xchg
data16
mov
cltd
sbb
push
mov
pop
rcll
shlb
popf
insl
lods
add
jle
lock
dec
mov
inc
xor
mov
mov
std
insl
cmpsb
cmp
adc
and
fimuls
icebp
stc
dec
loop
push
pushf
pop
cmp
inc
mov
dec
xchg
xchg
out
repnz
jns
inc
mov
sbb
sahf
or
xchg
mov
mov
jmp
shlb
pop
jg
mov
push
popa
mov
repnz
jb
repnz
cmp
add
fisttps
mov
push
cltd
cli
into
rcl
cltd
std
enter
mov
lods
add
push
pop
sbb
mov
inc
addr16
iret
lds
xor
fmul
and
mov
arpl
in
cli
jle
pop
lahf
cmpsb
dec
xchg
jne
push
int
sti
fwait
out
fsts
dec
scas
lret
inc
jbe
mov
pop
xchg
bndstx
nop
cltd
jecxz
repnz
xor
shll
adc
pop
mov
add
pop
add
xor
insb
cmp
insl
push
push
cmc
leave
or
shrb
scas
pop
out
dec
cs
cli
cmp
lods
fbld
mov
int
xchg
xchg
sbb
dec
das
lods
sbb
enter
cwtl
xchg
mov
out
sarl
xchg
or
jo
lods
pop
cmp
pop
push
andb
cmc
xchg
xchg
std
add
add
sbb
test
push
inc
loop
dec
xlat
inc
rclb
fs
jg
iret
push
jmp
out
jge
ja
mov
in
dec
pop
ret
mov
daa
pop
das
jmp
jmp
xchg
push
lret
jl
xor
jnp
arpl
shrl
mov
in
mov
mov
sbb
fmul
aam
mov
inc
adcb
dec
sub
cld
nop
add
stc
das
shll
decl
cs
add
rclb
jmp
lret
out
cmp
sbb
cwtl
insl
fwait
xchg
cltd
xchg
popa
push
jp
fmuls
shrl
pop
xor
ss
lods
lcall
loop,pt
ja
or
nop
push
sub
xchg
mov
jecxz
jle
pop
jmp
insb
dec
loop
cmp
mov
jae
sub
sbb
ficomps
push
leave
dec
pusha
cs
fstl
dec
lea
test
jns
stos
push
pusha
pop
adc
inc
subl
icebp
aaa
les
shlb
jnp
and
mov
jle
call
mov
cmp
orb
push
mov
and
out
inc
dec
mov
stc
dec
xchg
out
test
xchg
jmp
lods
repnz
mov
mov
adc
cmpsl
and
or
push
popf
or
cmp
xor
push
cmp
adc
out
pop
dec
dec
and
mov
jg
mov
dec
gs
cltd
addr16
fadds
repz
inc
adc
and
xchg
into
mov
xchg
jp
mov
adc
int
rorb
mov
xchg
mov
add
and
leave
xchg
dec
sbb
jbe
mov
call
xor
icebp
jns
push
add
test
stos
mov
cmpsb
gs
xchg
scas
andl
loope
and
movsb
pusha
mov
jbe
sub
cs
dec
mov
lcall
adc
dec
cmp
adc
xchg
imul
push
pop
les
pop
jbe
out
pushf
inc
cmp
pop
add
mov
adcb
xchg
bound
int3
loopne
mov
sahf
popa
mov
dec
inc
or
pop
inc
fisubrl
mov
cmp
xlat
enter
cltd
xchg
lret
ret
lock
dec
push
aaa
int3
in
lcall
pop
mov
jle
sbbb
sub
adc
sub
inc
xchg
divl
cs
xor
je
aaa
or
inc
mov
and
add
sbbl
push
add
dec
sbb
outsl
sbbl
ret
mov
adc
dec
imul
test
cmc
sbb
xor
add
pop
xor
subl
mov
xchg
int3
cmp
test
inc
cmpsl
mov
imul
xor
dec
pop
imul
adc
ja
xor
inc
mov
adcl
fnsave
and
mov
ret
inc
test
add
jle
xor
movsb
or
cmp
sbb
popa
inc
mov
outsb
mov
jl
jge
pop
jne
xchg
sbb
jl
lea
mov
mov
hlt
pop
xchg
and
adc
int3
xor
xchg
jno
out
ficoml
out
pop
adc
xchg
bound
jmp
ret
pop
jge
mov
into
loope
outsb
shll
sbb
std
adc
add
sub
push
pusha
js
sbbb
xchg
cmp
pop
icebp
ret
dec
jle
pop
pop
xchg
sbb
xchg
inc
or
xor
stos
fisubl
lds
cmp
lea
lea
sub
pop
sbb
js
mov
movsb
sti
cwtl
sub
mov
enter
push
adc
cmpsb
push
addl
push
or
sub
ljmp
stos
enter
mov
mov
or
nop
adc
movsl
or
cbtw
movsl
cmp
cmp
push
fimuls
loop
call
pop
outsl
add
sub
rorl
lods
push
dec
cltd
xor
mov
sbb
or
mov
push
pop
or
iret
shll
ret
push
dec
es
and
icebp
aaa
dec
lcall
movsl
push
mov
cmp
pop
or
data16
rclb
popa
sub
mov
cli
orps
test
fs
nop
mov
daa
je
sbb
dec
out
int
mov
mov
arpl
mov
cld
jnp
lea
jmp
leave
adc
push
mov
mov
mov
sahf
dec
enter
mov
pop
or
xor
jp
pusha
push
and
fnstcw
sub
je
bound
rcr
and
cld
mov
sbbl
sub
pop
cld
cmpsl
mov
sti
pop
fcmove
lea
jb
ss
xlat
or
jp
xchg
mov
outsl
push
fs
lcall
sbb
test
fwait
mov
shl
push
cld
mov
mov
repnz
jnp
push
add
inc
mov
xor
cmp
insb
into
test
push
cmpsl
push
or
insl
shl
movsb
cmp
sbb
sahf
inc
and
ja
sahf
sbb
inc
bound
and
xor
jnp
xchg
cs
sbb
fdivrp
adc
movsb
xor
inc
lcall
lcall
add
sahf
movntps
repz
jno
push
rcrb
rcll
dec
nop
aaa
inc
adc
push
jo
mov
iret
adc
jno
sub
inc
popa
mov
xchg
daa
mov
orb
test
addr16
roll
ja
mov
in
pop
pusha
test
xchg
hlt
in
or
adc
loopne
sti
mov
and
dec
cmp
cwtl
cli
ja
adc
divl
fisubs
and
popf
inc
fucom
mov
mov
js
add
aam
fadds
aad
jne
int
dec
in
sahf
xchg
jp
push
stc
aad
jno
dec
outsb
into
push
xchg
mov
mov
out
sub
xor
or
and
and
sarb
mov
stc
movsl
inc
lock
arpl
inc
mov
ficomps
nop
and
push
lock
pushf
dec
int
gs
push
ret
pop
pop
enter
sbb
std
mov
push
mov
inc
cmpsb
fistps
cld
sbb
int
add
in
divb
cmpsl
xor
orl
sarb
repz
push
adc
mov
cmp
xlat
mov
in
sar
jg
popa
sub
push
jno
test
and
jle
stos
repz
enter
test
jne
test
push
test
es
sahf
clc
mov
lea
lods
and
xchg
mov
add
xor
subl
mov
es
rorb
gs
outsl
push
aaa
aas
cwtl
cmp
xor
popf
xchg
mov
cmp
or
inc
jnp
xor
fwait
popf
sub
mov
push
push
aam
inc
imul
pop
pop
pop
addl
mov
pop
jne
notb
push
js
and
in
push
jmp
push
std
or
aad
cmpsb
lret
inc
push
push
dec
and
pop
add
dec
mov
stos
jnp
inc
pop
xlat
xchg
adc
lahf
das
repz
adc
xchg
ficomps
arpl
inc
lret
pop
push
dec
aaa
mov
add
dec
xor
dec
xchg
test
shl
jns
mov
sarl
out
icebp
imul
pusha
or
jns
lcall
inc
mov
mov
lret
cmpsl
enter
cwtl
sub
test
cmp
aas
jmp
inc
stos
adc
out
lods
lret
orb
test
cmp
xor
call
push
cmc
ljmp
jle
ret
in
sub
jae
push
daa
mov
sub
cmc
or
jle
int
jl
push
xlat
mov
add
and
adc
mov
ret
out
in
movsb
js
loopne
cld
pushf
xchg
sbb
jns
in
push
xchg
ror
jmp
enter
gs
mov
stos
pop
hlt
je
test
mov
ljmp
or
push
nop
mov
sbb
sub
pop
push
jl
sub
out
mov
adc
rclb
push
jg
jo
sti
test
jbe
out
mov
nop
mov
xlat
cmp
cmp
mov
shr
pop
enter
push
mov
leave
adcl
leave
inc
cmp
push
faddp
test
and
sub
jg
pushf
clc
sub
lcall
mov
hlt
inc
shrl
in
loopne
pop
jle
jno
inc
ljmp
and
inc
cmp
out
push
je
xchg
scas
repz
push
inc
sub
in
push
or
xchg
pop
sahf
mov
mov
jnp
ljmp
xchg
dec
xlat
movsb
jnp
jo
test
std
pop
into
add
mov
rolb
bound
insl
loop
cmp
out
pop
mov
mov
xchg
cmp
inc
sbb
in
add
mov
arpl
fildl
adc
addr16
dec
dec
inc
cmpsb
cs
mov
or
lea
and
negb
jmp
pop
enter
sbb
pop
fdivl
inc
lahf
pop
sbb
push
fisubs
cld
sbb
hlt
sub
push
xchg
std
mov
mov
adc
in
mov
push
imul
roll
pop
push
add
inc
sub
popa
adc
lret
notb
inc
sub
cmp
jecxz
mov
push
sub
add
jne
dec
test
jecxz
sbb
mov
je
mov
dec
lock
jo
mov
jmp
inc
xor
ja
rol
xchg
mov
or
cmp
imul
mov
mov
jae
adc
add
add
pop
addr16
add
imulb
jbe
iret
mov
pushf
push
and
xchg
sub
shrl
es
push
pop
rorb
sub
jo
lret
mov
paddq
iret
movsb
cmp
and
mov
push
cld
inc
cmpsl
popa
mov
js
in
push
adc
ja
jl
jae
xchg
inc
mov
mov
unpcklps
daa
add
mov
sahf
fs
sub
and
xor
inc
fcompl
insb
ljmp
push
shrb
lods
push
xchg
adc
xor
mov
mov
pop
cltd
aas
test
sub
out
loopne
gs
addb
mov
sub
das
push
mov
inc
into
push
jo
mulps
fsubrs
stos
movsl
es
sbb
pop
ss
xchg
push
or
aas
cwtl
sbb
cmp
fcmovnu
sub
pop
lahf
lahf
cld
fwait
xchg
xor
add
add
mov
stos
push
xchg
andb
cwtl
hlt
lahf
lds
imul
insl
fimull
mov
add
loopne
mov
and
sbb
inc
pop
bound
scas
xchg
ficoms
shll
push
xor
add
movsl
mov
cmp
popf
mul
js
and
and
popa
sub
push
mov
dec
inc
and
xchg
jo
add
stc
mov
pop
sbb
pop
test
add
cmp
sbb
ret
stc
imul
mov
adc
popf
jae
add
shll
sub
push
fsubr
in
fldz
dec
in
fisubs
dec
clc
cmpsb
mov
add
adc
mov
sub
add
mov
mov
push
push
jmp
dec
sarl
cmp
xor
sbb
inc
jmp
mov
mov
xchg
fs
daa
daa
sub
scas
idivl
xor
insb
pop
xor
fidivl
int
push
cmc
shl
dec
sarl
push
movsb
cwtl
inc
push
xor
lea
lds
adc
sub
ret
jae
lret
aam
and
pop
in
xor
dec
jbe
rcrb
mov
movsl
jns
leave
sahf
lret
push
jmp
insl
and
cs
in
nop
inc
sbb
test
and
cmp
xchg
ds
es
fistpl
pop
dec
fistpll
jg
inc
pop
ja
call
jbe
push
pusha
push
pop
insl
pop
push
mov
out
mov
cmp
pushf
cld
jns
ret
fs
and
jg
orl
mov
mov
fstpl
sbb
push
dec
add
xor
stos
cmpsb
mov
mov
sub
iret
data16
mov
call
push
leave
cld
cmp
outsl
mov
add
call
rolb
inc
fmul
loop
popf
fisttpll
cmc
movsl
pop
repnz
addr16
lret
mov
stos
iret
push
loope
mov
mov
add
ret
push
or
and
popf
pop
and
mov
movsl
sahf
js
not
jecxz
test
in
shr
jg
xchg
arpl
addl
adc
leave
mov
add
xor
sti
or
dec
outsl
inc
mov
jp
push
lods
cmp
sahf
incb
fstpt
cmp
leave
orb
lock
push
ret
pop
jge
cmp
sub
sbb
int3
das
cld
xor
aad
movsb
out
insb
fwait
adc
cld
sbb
movsb
scas
clc
adc
jo
jmp
addr16
fwait
xor
xor
mov
jl
cld
lds
nop
rolb
add
sbb
ds
movb
lods
test
push
sbb
jbe
sbb
pop
pop
pop
mov
cmp
sti
xchg
add
frstor
or
ljmp
loope
mov
rorb
mov
lea
fists
lds
bound
cli
xor
push
out
sub
sub
mov
inc
pop
and
dec
es
sar
push
loope
scas
repnz
fidivs
push
adc
js
out
adc
fistpl
inc
push
jl
in
nop
int
clc
xchg
into
and
lret
in
aam
add
push
push
gs
xchg
sahf
adc
dec
mov
and
hlt
orb
xchg
test
dec
cmp
inc
sarl
or
or
jecxz
lcall
and
xchg
pop
push
push
std
mov
jno
dec
sti
cmp
mov
xchg
dec
mov
jl
pop
or
adcb
push
xor
cmp
lcall
jp
sub
push
mov
jne
jl
test
rcll
jmp
popf
add
cld
add
in
pop
test
inc
pop
add
insb
cmp
xor
inc
cltd
xlat
enter
xchg
fcmovnbe
aam
mov
jg
movswl
arpl
or
xchg
scas
repz
mov
rcr
ljmp
or
push
cs
dec
in
lret
and
jnp
xor
cmc
loope
test
or
push
movsb
xchg
mov
and
mov
pop
push
scas
pop
sub
addl
add
je
jmp
sub
cli
and
mov
scas
push
add
inc
std
mov
inc
out
imul
mov
push
leave
insb
push
clc
jl
andl
sbb
rorb
rol
inc
loope
fs
push
push
cli
mov
sbb
push
adc
or
sub
xchg
ss
push
loop
xchg
in
xor
hlt
in
push
mov
dec
setg
outsb
repnz
test
pushf
divb
icebp
push
les
add
cltd
fucomi
aas
push
jno
imul
push
sbb
insl
xor
clc
es
dec
popa
jge
pop
jg
sbb
int
imul
es
sbb
mov
mov
mov
fucom
in
sub
in
dec
fisubs
test
sub
call
adc
xor
inc
sbb
pop
mov
fnop
clc
cli
sbb
push
lahf
xor
dec
mov
xchg
jp
adc
rcr
mov
setb
icebp
xor
sub
mov
bound
jmp
out
bound
gs
ja
scas
lock
mov
addr16
out
ss
and
cli
xchg
lock
cmp
sbb
inc
test
mov
in
insl
testb
pop
cmp
mov
jns,pn
jbe
gs
hlt
imul
jnp
and
cmp
mov
into
pusha
pushf
dec
popa
das
loope
push
mov
sbb
mov
movsb
push
test
and
fidivrl
idiv
or
lret
popa
cmp
pop
xor
jp
test
or
pop
mov
jge
movsb
pusha
leave
imul
ss
xor
subl
xchg
sbb
xor
rorl
and
push
xchg
mov
inc
mov
aam
scas
cmpsb
cld
mov
mov
loope
jmp
movsb
cmp
ds
idivl
adc
loop
jo
aas
movsb
mov
fs
stos
iret
lds
jo
popa
shrb
push
adc
pop
sbb
xlat
mov
arpl
xchg
ljmp
iret
dec
sbb
imul
mov
pop
movsb
jae
pop
scas
stos
call
outsb
inc
mov
stos
mov
xchg
addr16
into
adc
fdivrl
mov
adc
adc
sti
std
push
fstpl
lds
mov
pop
xor
dec
arpl
movsb
lea
xchg
or
into
fstps
jg
es
add
movsb
mov
loop
xchg
xor
dec
pushf
mov
sti
pop
cs
mov
mov
and
jns
mov
popa
and
test
push
or
sbb
divb
ficoml
stos
mov
scas
fmul
sub
cmp
mov
out
mov
into
aaa
mov
and
push
and
and
jp
push
stc
pop
push
mov
aas
cmpsb
shl
pop
xlat
js
jbe
cltd
adc
popf
pop
adc
ret
add
mov
jno
movsb
add
cmc
adc
xor
push
cs
xlat
pop
je
and
pop
add
mov
pop
out
adc
cmp
pop
mov
xlat
lret
sbb
shlb
sub
xchg
xchg
js
dec
adc
ds
shll
add
popf
int3
mov
jb
mov
jnp
fdivs
cmp
ret
cmp
sub
or
mov
sbb
out
das
xchg
lret
rolb
rcrb
data16
mov
ret
fwait
cltd
pop
sbb
popf
inc
mov
or
ret
or
or
mov
mov
jg
mov
pop
out
xchg
or
js
xchg
gs
inc
dec
push
xchg
lds
sub
jno
inc
in
pop
mov
mov
cld
stos
test
loope
sbb
stos
sti
mov
push
jle
jae
ss
iret
ret
xchg
mull
sti
aam
mov
inc
jnp
mov
pop
arpl
sub
jmp
jecxz
mov
push
mov
cmp
rcll
dec
xchg
dec
rcrl
js
add
push
pushf
pushf
ja
icebp
mov
add
cmp
xchg
test
mov
cmp
push
dec
sbb
dec
stos
inc
rcrl
movsb
xchg
mov
outsb
cltd
jns
xor
int3
xchg
ss
ret
inc
xor
addb
xor
pop
xchg
ss
fisubrs
pop
cmp
rcr
int
adc
jae
out
or
add
dec
push
mov
pop
cmp
je
pop
pop
sub
jo
xchg
shll
mov
mov
sbb
in
ds
pop
inc
or
adc
ficoml
int
mov
jmp
mov
mov
daa
jns
mov
andb
cmc
fisttpll
pop
push
shrl
mov
hlt
add
xchg
sub
popa
dec
sti
enter
std
push
push
push
ja
es
xor
sub
iret
jno
scas
fdivs
jp
js
mov
pop
aam
jle
xor
sub
sarb
jmp
mov
mov
inc
call
pop
fisttpll
ss
jecxz
cltd
jge
ret
ds
add
xchg
or
dec
outsb
xchg
sbb
cltd
jno
sbb
test
jnp
push
and
or
mov
mov
inc
shlb
adc
pop
push
mov
outsl
xor
push
and
or
popa
stos
mov
enter
dec
stos
inc
push
sbb
xlat
inc
cmp
lods
jnp
test
pop
push
inc
or
divb
cld
nop
adc
fwait
enter
fstpt
scas
call
jecxz
mov
pusha
in
test
lock
bound
leave
jmp
loop
pop
sahf
out
sub
cwtl
popa
icebp
fwait
jnp
insb
jle
xchg
lret
xchg
pop
mov
push
xchg
sbb
jmp
push
and
inc
fiadds
ds
push
scas
jl
or
ljmp
ljmp
add
imul
add
mov
ret
push
int3
pop
sub
icebp
iret
jae
out
pop
hlt
and
movsl
leave
jnp
cmp
mov
dec
adc
das
and
repz
push
sbb
mov
jge
clc
fldenv
mov
mov
sub
sub
adc
sub
jg
stos
stos
sub
rclb
add
aam
aad
or
jmp
pop
mov
inc
out
mov
call
jge
ss
jae
mov
and
sbb
xor
test
insb
xchg
std
jle
out
clc
inc
movsb
jmp
inc
fnstcw
push
push
pushf
or
test
xor
or
fsts
adc
mov
jnp
fwait
jp
sti
std
testl
shll
enter
mov
cwtl
adc
adc
lods
cli
sbb
pop
mov
push
fisttps
out
aam
cld
aad
adc
imul
in
cmp
std
sbb
lods
clc
pop
mov
iret
xor
test
iret
mov
test
loope
mov
rolb
pushf
inc
pop
mov
sbbl
xor
std
mov
divb
jns
bsr
js
xchg
pop
imul
xor
sub
jne
pop
arpl
imul
aaa
ds
in
mov
pop
mov
out
mov
test
or
jo
inc
sub
dec
loope
mov
add
xchg
dec
mov
nop
sbb
fnstenv
iret
sbb
pop
push
and
int3
ja
cld
inc
ret
sub
xchg
iret
pop
ja
push
lods
test
std
mov
sub
jg
int
in
mov
sti
jle
mov
in
and
test
mov
sub
es
cmc
fsubrs
add
xchg
stos
dec
je
dec
iret
pop
xchg
push
mov
cmp
test
jns
mov
adc
dec
std
notl
push
xor
lahf
sbb
pop
fwait
sahf
sub
sub
std
pusha
push
notl
fadds
sub
ljmp
adc
pop
mov
mov
jns
dec
div
out
cmpsl
outsl
push
popf
mov
sbb
iret
inc
jle
rclb
and
push
push
icebp
in
lods
xor
sub
cld
mov
je
or
sbb
sub
sub
ret
mov
sarb
stos
ljmp
outsb
mov
jg
adc
pop
inc
pop
mov
lods
lds
jns
mov
push
push
xor
mov
jbe
clc
xor
outsb
roll
mov
jne
leave
jmp
mov
fidivs
push
mov
mull
sbb
inc
jae
jb
or
idivb
mov
dec
pop
pusha
ss
cmp
xchg
mov
jns
test
pop
jg
shr
test
mov
mov
enter
std
and
cmp
leave
push
push
mov
push
pop
out
adc
cmp
lock
leave
pop
xor
xchg
jae
movb
dec
pop
mov
jl
jmp
and
icebp
push
jl
xchg
in
fidivrl
inc
push
icebp
stos
and
mov
mov
dec
dec
cmovp
das
lods
ret
addl
adc
xchg
outsb
movsb
dec
repnz
adc
popf
xor
stc
cwtl
out
xchg
or
mov
popf
cmc
leave
sbb
test
jge
iret
xor
cltd
movsl
adc
dec
fldl
mov
inc
dec
fistps
rclb
nop
mov
push
js
lea
dec
popf
jle
call
daa
cmp
mov
movsl
or
mov
imul
rorl
push
jae
xor
dec
cwtl
push
into
icebp
stos
loopne
lcall
popa
imulb
xchg
cmp
sub
add
idivl
inc
mov
popa
cmp
aas
push
mov
sbb
rorl
nop
or
sbb
shlb
add
mov
std
add
inc
cmp
mov
mov
sub
mov
xor
cltd
jbe
pop
dec
sub
aam
jno
fwait
push
cwtl
mov
stos
loop
decb
negb
mov
mov
loope
decl
scas
jbe
pop
shll
sub
pop
mov
dec
addr16
loopne
xor
dec
stos
push
fidivl
sahf
ret
and
and
jnp
adc
fwait
mov
popf
xor
and
cltd
sbb
xchg
pop
mov
adc
iret
dec
arpl
push
sbb
std
add
add
stc
inc
in
inc
or
mov
sti
std
dec
push
inc
stos
sbb
mov
subl
xor
fs
icebp
or
xor
imul
mov
or
imulb
inc
cmp
ja
cmpb
add
cmpl
cmp
and
cmpsl
es
lret
ds
mov
and
pop
mov
sti
fstps
cmp
mov
xchg
js
or
outsl
repnz
test
in
pop
call
bound
xor
add
das
loope
jge
scas
addr16
cli
cwtl
push
jbe
leave
pop
in
repz
push
shll
xchg
pop
mov
add
int
push
out
cmp
fadds
fwait
aaa
jle,pn
fsts
mov
jmp
sub
pusha
imul
sub
in
clc
arpl
aad
cwtl
xor
nop
hlt
lods
sub
jne
hlt
mov
test
loope
sahf
test
rorb
lea
in
in
and
or
cli
lahf
jae
cmpsb
movb
sahf
addr16
mov
mov
push
dec
add
addr16
pop
xor
lret
bound
fcomip
adc
fisttps
js
loope
xchg
adcb
lahf
cs
fcmovnbe
daa
fsub
dec
call
xchg
mov
xlat
dec
pop
fwait
xchg
sbb
and
mov
dec
das
in
push
ljmp
pushf
dec
inc
push
dec
inc
jle
mov
jge
and
sbbb
divb
addr16
out
mov
mov
push
dec
mov
mov
cwtl
fldenv
pop
roll
add
or
ja
in
dec
dec
mov
sbb
mov
les
and
adc
cmp
push
out
sti
les
pushf
imul
mov
mov
lods
lea
mov
and
mov
inc
lds
sbb
sub
aas
xlat
leave
aas
mov
sbb
les
gs
das
cli
popa
mov
test
stos
loopne
in
sbb
jecxz
inc
sub
dec
dec
clc
pop
push
mov
push
ja
mov
pop
idivb
ret
dec
jmp
pop
js
mov
lea
sub
mov
insb
sbb
mov
cmpl
and
pop
mov
shlb
xchg
sti
nop
lret
jno
mov
xchg
mov
dec
loope
insl
leave
dec
jae
fldl
fadds
jno
fdivl
push
jg
push
hlt
mov
mov
push
sub
mov
stos
xor
sub
test
xor
jno
xchg
sbb
sbb
loopne
fwait
lock
and
push
and
sbb
pop
out
fsubrl
call
mov
and
inc
jecxz
arpl
jne
mov
addr16
xor
mov
test
sub
in
cs
and
push
fisubs
pop
ror
xor
fcmovnb
popa
in
mov
stos
or
push
push
jg
push
mov
insb
adc
inc
sub
les
clc
cmp
imul
sub
dec
mov
and
fs
daa
lret
mov
clc
fimuls
insl
jne
add
loope
inc
add
sbb
adc
mov
fwait
pop
adc
inc
or
sbb
mov
cmp
cmp
push
ss
lcall
pushf
or
inc
xchg
sbb
jae
imulb
adc
dec
in
movsb
in
mov
or
aaa
movsb
das
rcr
lret
mov
out
jg
cli
inc
and
cmp
inc
iret
mov
ds
and
jl
ss
mul
mov
pop
pop
call
and
push
test
rol
or
push
out
lret
das
mov
pusha
jo
bound
paddb
icebp
push
fists
repnz
jge
std
adc
push
or
cli
arpl
outsl
fcompl
ret
jo
push
daa
push
in
push
sub
sub
pushf
or
mov
mov
mov
xor
loopne
frstpm(287
sbb
dec
push
pop
lret
in
xchg
push
pop
aaa
scas
and
cs
negl
adcb
mov
shl
aam
sub
stos
movsl
or
scas
mov
in
test
aad
jp
pop
mov
shr
add
nop
cmp
xor
in
rclb
dec
aad
mov
aas
pop
xchg
xor
xor
mov
nop
cmp
ds
push
insl
aaa
jae
int
lret
nop
fistpll
in
adc
pushf
add
int3
popf
gs
ss
rolb
push
mov
inc
in
inc
or
imul
mov
sub
jmp
jle
add
mov
xchg
push
aas
fsubrl
push
mov
test
and
and
testl
mov
dec
jle
jae
arpl
or
mov
cmpsl
ljmp
mov
cli
xchg
push
rcll
shll
sub
pushf
or
xchg
mov
adc
xchg
lods
xchg
and
mov
fisubs
scas
mov
call
push
mov
sub
movsl
cmp
test
xor
repnz
arpl
cmpb
xor
add
xchg
push
shrl
lods
mov
xchg
fmuls
cmp
gs
test
cli
or
leave
iret
dec
sub
push
adc
mov
scas
loop
pop
in
hlt
pusha
movsl
xor
pop
jne
lret
lret
pop
jg
pusha
pusha
mov
in
xchg
movsl
jp
in
test
pop
imul
mov
in
cmp
shrb
sbb
idiv
jmp
mov
add
popa
add
push
mov
popf
mov
and
loopne
dec
jp
or
push
fsubr
popa
adc
jnp
mov
mov
movsb
mov
pop
jp
in
xor
out
or
xchg
push
mov
leave
fs
mov
xor
dec
maskmovq
idivl
jmp
enter
jno
sub
add
pop
dec
in
outsb
mov
leave
sub
jle
idiv
and
int3
sbb
jbe
fldt
xchg
mov
in
lcall
inc
dec
roll
out
pop
orb
insl
ret
mov
sub
push
mov
adcl
cmpsw
sti
push
xor
popa
sbb
repz
add
nop
addr16
mov
mov
ret
xor
or
lods
ret
sahf
fwait
nop
inc
mov
dec
fsts
dec
sbb
mov
daa
imul
xchg
mov
insb
mov
xchg
push
stc
push
stos
push
in
shll
in
loope
push
mov
es
fs
or
sub
dec
bnd
inc
stos
mov
jbe
ret
mov
ret
add
xor
push
inc
cmp
sbb
shlb
int3
das
ret
mov
leave
dec
jbe
cmp
xor
jle
ss
std
stos
inc
sarb
xorl
dec
je
inc
je
popa
ret
cltd
inc
ja
adc
or
addr16
dec
insl
jge
mov
adc
inc
andb
mov
ret
cmp
fs
cmpsl
mov
in
or
cmp
mov
repz
out
aas
jne
aad
in
pop
gs
dec
jns
mov
cmp
pop
mov
xchg
mov
mov
mov
pop
add
sti
mov
arpl
xor
cs
mov
mov
mov
push
enter
add
movsl
mov
mov
loop
add
aam
bound
dec
cltd
push
pushf
out
data16
dec
sbb
or
fsubrp
cli
enter
fdivrl
adc
adc
ficoml
out
fistpll
add
call
or
jae
jb
mov
pop
ss
in
in
push
inc
lcall
gs
inc
movsb
pop
xor
fstps
jp
adc
outsb
xchg
jle
repnz
sti
lds
xor
jmp
adc
jmp
jno
stos
mov
pop
push
adc
mov
sbb
mov
pop
imul
sub
and
lahf
jo
dec
dec
dec
push
js
sub
int
lods
push
idivb
jp
push
insb
lahf
xchg
sub
sub
xchg
mov
jno
or
fidivrl
push
jl
ret
daa
jecxz
fwait
aam
sbb
push
fwait
std
push
sbb
or
aaa
fimull
push
sti
jb
out
iret
xor
mov
sbb
leave
addl
stos
pop
inc
add
mov
or
mov
test
popa
pop
cmpb
ret
ret
adc
sub
nop
cmp
xchg
adc
test
adc
add
popa
cmp
adc
pushf
repnz
mov
ljmp
sub
xchg
adc
aad
cmp
lea
jae
jb
push
sub
pop
je
incl
inc
loopne
cmp
in
stos
inc
inc
xor
jnp
mov
adc
add
test
fdivrp
mov
mov
lods
push
cwtl
lea
jbe
add
add
outsl
mov
lahf
icebp
fidivl
call
or
je
incl
negb
cld
mov
mov
mov
outsb
addl
pop
push
or
daa
jae
jp
inc
lock
lea
cmp
adc
ja
jbe
repnz
clc
fmul
das
mov
jo
or
icebp
insl
and
ud2
jb
dec
mov
inc
push
adc
mov
std
push
sub
pop
sub
mov
mov
xchg
test
pop
stc
repz
cmp
shll
push
cmp
js
push
lock
mov
pop
fwait
xlat
jno
clc
leave
mov
lods
stc
inc
pop
dec
push
sub
in
dec
dec
or
cmp
xchg
add
mov
outsl
jb
and
sbb
xorb
or
dec
mov
push
jmp
cmp
stos
mov
push
pop
clc
gs
adc
push
mov
mov
xchg
sbb
or
push
and
mov
mov
cmp
jns
dec
ret
xchg
xor
jp
or
adc
add
mov
pushf
movsl
add
pusha
cmp
push
clc
imul
mov
sbb
shrl
rcr
cmc
fwait
repnz
jb
addr16
cwtl
mov
add
lcall
dec
xor
or
push
cmpsl
xchg
orb
push
mov
aaa
aas
ja
mov
xor
loope
fwait
test
push
jnp
add
pop
jb
pop
cltd
cmp
in
mov
out
mov
sbb
lods
jg
sahf
repnz
jae
bound
pushf
dec
mov
push
jo
inc
xor
sti
aaa
sub
mov
jmp
std
dec
add
scas
inc
adc
fwait
cwtl
rorl
pop
mov
rclb
call
dec
xchg
fidivl
jb
lahf
shll
test
outsb
gs
mov
or
sarb
xlat
cmp
cld
push
push
pop
pop
and
imul
inc
je
adc
sub
mov
jbe
sbb
ja
mov
xchg
adc
add
in
pusha
sbbb
mov
and
xchg
stc
mov
xor
cmc
addr16
pop
cmp
imul
xor
or
cwtl
xchg
mov
xchg
insb
dec
andl
repz
leave
movsb
or
xchg
enter
das
push
das
arpl
in
and
pusha
ds
push
push
adc
pusha
adc
inc
inc
xlat
lock
mov
xlat
dec
or
add
lods
pusha
and
cwtl
loopne
add
scas
mov
je
lods
mov
dec
jge
xchg
lea
ja
insb
mov
lock
cmc
movsb
fwait
adc
in
insl
xchg
rorb
xor
shl
ljmp
repz
call
std
sbb
cmc
mov
dec
sahf
or
insb
pop
lea
mov
mov
lahf
push
lcall
add
sbb
mov
xchg
insb
jg
scas
hlt
or
inc
and
push
push
push
cld
dec
fwait
inc
popf
addb
xlat
inc
push
negb
jge
xchg
xchg
lret
add
cmpsb
mov
lahf
test
pop
out
popf
mov
push
cltd
scas
repz
mov
jnp
cmp
cmp
mov
and
mov
cltd
sti
inc
mov
lods
vprotq
mov
xor
fbld
repnz
es
sub
or
mov
aad
sub
mov
or
add
fdivl
addb
dec
mov
sbb
in
mov
xchg
mov
popa
mov
xor
enter
mov
mov
ljmp
jnp
sbb
add
push
mov
rcrl
xchg
ljmp
push
cmp
and
sbb
push
stos
mov
sub
sbb
dec
cmp
sbb
or
xchg
mov
icebp
xchg
lret
cs
mov
mov
mov
mov
sti
xchg
mov
jns
and
cmp
sbb
pop
pop
jae
js
arpl
mov
mov
mov
shll
cmp
cmp
xchg
sbb
cli
insb
stos
push
movsb
loop
cmc
andb
inc
adc
or
sar
xchg
push
out
into
inc
push
fstpt
cmpb
inc
push
aas
pop
nop
jp
or
xchg
imul
lods
mov
adc
push
jecxz
sbb
inc
mov
inc
inc
cli
push
dec
stc
dec
cmc
and
or
pusha
xchg
loopne
push
fs
add
xor
cmp
dec
in
lahf
sub
into
push
xchg
xchg
out
mov
lods
imull
fmuls
mov
sbb
or
or
std
cmpsb
cmp
movsl
out
or
repnz
shrl
fs
xchg
test
in
inc
lock
orps
or
call
xchg
mov
call
aam
cs
iret
addr16
xchg
scas
sbb
push
lea
daa
jg
push
imul
xor
stos
out
jno
push
flds
inc
in
fimuls
xchg
jne
sahf
inc
test
ret
insb
add
test
xchg
divb
stc
jmp
int
fsub
pop
arpl
push
push
in
sbb
mov
inc
pop
inc
ret
push
test
aaa
frstor
pop
andb
je
lds
sbb
int3
jns
jp
jge
out
ss
js
mov
iret
notl
pop
das
mov
ja
mov
movsl
cwtl
push
mov
mov
add
add
push
sub
inc
pusha
testb
in
mov
jnp
outsl
fsubrs
xor
and
shlb
stc
cmove
add
leave
ficoms
imul
push
test
int3
xchg
cwtl
push
xor
mov
mov
fidivrl
fnsave
test
xchg
pusha
xchg
mov
ret
push
jae
scas
fdivrs
js
ret
lods
aas
mov
and
iret
scas
jmp
mov
push
jle
sub
test
or
push
mov
cmp
mov
gs
add
push
out
ss
fstl
push
inc
xchg
out
jecxz
inc
mov
xlat
mov
out
mov
cld
mov
push
push
mov
sub
sbb
jo
xchg
mov
sub
lds
pop
arpl
cs
leave
pop
sub
into
sub
mov
fsts
pop
lods
adc
ss
mov
and
mov
arpl
sub
push
dec
test
in
add
push
cmpsl
xchg
sbb
inc
shlb
lret
mov
nop
repnz
xchg
sbb
iret
or
cwtl
aaa
leave
stos
enter
mov
wrmsr
and
pop
dec
enter
pop
push
add
icebp
add
in
pushf
adc
iret
mov
push
sub
stc
sbb
pop
lcall
pop
outsb
mov
fstl
jp
xchg
cmp
cmpsb
push
mov
mov
xchg
sbb
mov
and
and
inc
mov
add
orl
fs
push
mov
adc
test
aaa
dec
dec
mov
notl
fnstcw
cwtl
jle
sub
sub
insb
mov
cmpsb
outsl
mov
add
sbb
xchg
outsb
jns
add
mov
jecxz
cmp
pop
mov
jno
xchg
cwtl
fs
adc
lock
dec
test
ret
movaps
add
pop
loopne
test
or
scas
push
in
lcall
dec
fxch
xor
mov
or
mov
inc
xchg
es
dec
jnp
pop
shl
xor
jp
in
int3
cmp
cmpsl
push
xor
xchg
xor
insb
aaa
in
jbe
xchg
lea
inc
push
jecxz
xor
dec
aad
inc
or
pop
add
insl
cs
cltd
sbb
mov
cmp
movsb
loopne
test
nop
pop
fistps
jbe
cmp
xor
inc
mov
out
imul
jg
add
addr16
les
pop
mov
fnstsw
or
cltd
int3
add
mov
call
in
add
mov
pop
dec
jnp
jnp
lret
into
mov
mov
ljmp
cmp
icebp
insb
shll
mov
sti
cltd
movsl
xchg
or
xchg
lods
js
dec
stc
jecxz
adc
mov
cmp
fldenv
iret
outsb
out
or
imul
cmp
dec
out
and
xor
stc
xchg
and
jg
and
mov
pop
das
add
sub
jle
ret
inc
daa
jp
cmp
push
inc
dec
fwait
insl
shl
jp
divb
xchg
jo
jbe
mov
mov
or
cmp
out
arpl
sub
movsl
lcall
insb
jnp
gs
test
outsb
sbb
scas
fmull
sub
push
push
in
xchg
pop
lret
cmpsb
pop
cmp
cmc
sarl
mov
cmovp
dec
gs
add
inc
sbb
adc
ljmp
mov
mov
insl
testl
jo
loope
aaa
fucomip
mov
mov
xchg
stc
fdivl
xor
push
sub
inc
jecxz
imul
mov
or
mov
out
push
cmc
roll
lret
xchg
xor
ficoml
cmpsb
xchg
mov
dec
mov
movsb
mov
jno
setb
push
mov
pop
out
cmp
test
int
push
ret
dec
dec
or
push
cmpsl
mov
not
add
sbbb
mov
push
push
cmp
sbb
inc
xlat
pop
orl
mov
movsb
shll
lret
in
pop
into
rcr
dec
sbb
push
sbb
xor
sbb
lcall
and
sti
inc
outsb
mov
out
inc
dec
lret
sub
sub
lahf
rcr
out
and
inc
xchg
push
mov
insb
mov
sub
orb
sub
adc
mov
push
call
jb
jo
push
jmp
sarl
shrb
popa
cmp
dec
fiadds
repz
lret
sbb
decb
fcomps
jo
pushf
mov
cmp
xchg
fs
mov
add
mov
mov
int3
in
pop
cwtl
jle
jmp
imul
or
push
out
cmc
cmp
sub
push
pop
jl
cltd
clc
adc
inc
lea
fildll
cmp
ret
push
dec
mov
add
pop
xor
cld
mov
pop
dec
lds
int
adc
test
push
sbb
lds
jle
mov
mov
movsb
add
sbb
scas
cs
out
add
nop
sahf
inc
mov
sarb
lahf
sbb
hlt
xor
clc
insl
andb
cmp
mov
push
mov
inc
std
fistpll
fidivrs
pushf
xchg
bound
stos
jp
xor
add
in
mov
scas
or
xchg
jecxz
arpl
mov
mov
xchg
inc
pop
or
shl
xchg
xchg
push
sbb
add
lret
mov
sbb
rorl
jae
ss
add
mov
insl
cmp
lds
mov
jno
ret
cld
outsl
mov
mov
cmp
mov
mov
cmp
sub
sbb
mov
jge
test
xor
mov
lds
test
jmp
sahf
shl
ljmp
test
lock
aad
xchg
je
cmc
jmp
inc
push
xor
cmpsb
push
ret
pop
sbb
out
jo
adc
pop
fstl
movsl
adc
push
test
adc
test
push
clc
fsubs
push
cmp
outsl
popf
inc
loopne
mov
mov
cmp
test
adc
dec
leave
test
pop
xor
xchg
jmp
mov
in
pop
xor
sbb
xor
pop
aad
fdiv
cltd
mov
cld
jl
xor
push
movsl
mov
data16
mov
in
pop
pushf
pop
stos
shlb
test
jle
pop
pop
repz
push
and
ret
movsl
fidivs
test
fldenv
popa
dec
xchg
push
cmc
sub
int
dec
cmpsl
popf
hlt
jae
sub
mov
adc
bound
arpl
out
scas
adc
pop
xchg
add
pop
sub
repz
and
dec
dec
push
add
leave
js
or
hlt
cld
mov
test
and
mov
push
es
cmp
subl
fildll
std
daa
out
cld
repnz
mov
push
push
mov
jnp
std
test
mov
andb
fwait
mov
pop
cmp
lock
xchg
mov
lret
popa
cmp
mov
int3
mov
push
ret
not
dec
pop
or
das
jb
mov
mov
jnp
stc
add
push
mov
ds
xchg
loopne
lahf
push
stos
pop
outsl
lods
mov
xchg
mov
sbb
inc
jmp
push
mov
mov
xchg
cmp
sbb
int
aad
outsb
mov
enter
dec
mov
nop
cmp
push
lret
cmp
cltd
pusha
inc
sbb
out
inc
fisubrl
adc
jmp
jmp
mov
hlt
std
lods
leave
mov
dec
push
mov
dec
cli
dec
jns
cmp
std
call
cmp
icebp
outsb
adc
testl
inc
and
cmpsb
stos
push
pop
clc
call
jmp
cmp
outsb
adc
fs
mov
imul
jp
adc
lahf
cltd
push
mov
pop
rcrb
outsb
cld
cmp
and
mov
pop
cs
ret
shll
adc
clc
movsb
pop
xor
ret
lahf
push
aaa
xor
xchg
sahf
int
inc
jecxz
mov
dec
je
pop
jno
stos
mov
popf
mov
mov
cmc
dec
lahf
insl
in
rorb
popa
jo
add
pop
shrw
and
insb
add
and
xor
dec
leave
fmuls
dec
lods
cmp
cmp
hlt
ja
xor
cwtl
jnp
jmp
cmpsb
rcrb
pop
sub
inc
insb
das
ds
mov
xchg
mov
jbe
cmc
in
movsb
sti
push
int3
jnp
call
mov
movsb
mov
xchg
adc
xor
ja
fcoml
mov
orl
jmp
and
lcall
sub
xchg
jno
maxps
mov
dec
pop
push
lods
pop
push
je
nopl
push
add
loope
ret
int
cmp
or
fwait
scas
jnp
ds
aad
jg
es
and
or
aam
js
daa
out
adc
sbb
mov
ret
add
ficompl
jp
jnp
cltd
lahf
call
imul
push
push
or
adc
fidivrl
sarl
sahf
jl
sub
roll
movsb
test
xor
sbb
and
loopne
js
push
fisubl
lds
or
std
sub
sbb
dec
adc
cmp
jae
cld
fcomps
inc
hlt
add
loope
mov
jae
aam
ret
cmp
adc
out
gs
negl
pushf
into
jmp
in
lods
xor
insb
and
icebp
stos
cmp
es
pop
movsl
sti
or
mov
pop
leave
mov
mov
sub
pop
xor
subl
adc
cli
jo
mov
lea
lret
popa
cmp
pop
test
sub
push
cld
push
hlt
sub
out
scas
jae
push
or
lds
push
ljmp
imul
out
push
outsb
iret
repz
aaa
push
dec
das
dec
in
xchg
inc
mov
pop
adc
push
cli
cmp
sub
xrelease
aad
test
nop
faddl
out
jnp
in
sbb
push
xor
in
mov
lea
jg
out
out
inc
add
addr16
mov
int3
or
pop
dec
xor
loop
or
xor
cs
jl
mov
xor
cmp
inc
jno
sbb
cmp
mov
vmwrite
cs
push
out
test
add
insb
es
into
adc
in
cmp
add
sbb
adc
sub
add
pop
xor
movsb
push
mov
jle
push
pusha
cmpsl
in
int3
insl
aam
jne
sbbl
push
xchg
mov
mov
out
popf
jae
test
jmp
inc
jg
leave
pop
xchg
enter
cwtl
imul
cltd
mov
jge
xor
popa
pop
lods
mov
sti
xchg
jmp
mov
out
push
and
fisubs
mov
nop
jg
jae
pusha
sbb
stos
cmpsb
icebp
push
fdivs
or
dec
cmp
xchg
jge
mov
divb
mov
jne
jmp
cmpsb
decl
push
sbb
jle
popa
inc
add
sbb
scas
cs
mov
fidivrl
xor
and
dec
push
fildll
adcb
cmpl
pusha
xchg
and
pop
repnz
iret
in
xchg
add
jecxz
fsubs
mov
cmp
xorb
or
jo
mov
mov
add
pushf
lea
testl
insl
xchg
fstpt
ror
sub
scas
mov
dec
jo
jg
lahf
movsb
inc
aad
sbb
popf
xchg
mov
aad
fistps
shlb
mov
sbb
mov
jge
or
imul
sbb
push
jge
dec
loop
ficoml
pop
ja
dec
imul
mov
mov
push
sbb
xor
inc
dec
movl
mov
and
mov
xchg
dec
or
cltd
fdivrp
fmulp
sti
rclb
cmp
push
xor
jl
cmp
mov
mov
cmc
inc
out
repz
lods
xchg
out
xor
xchg
sti
pop
add
jl
cmpsb
pop
jae
jns
ret
add
insl
rorl
and
nop
faddl
lea
dec
cmp
mov
push
pop
sbb
jns
orl
xlat
outsb
push
insb
push
lods
push
add
jp
ret
or
and
test
push
add
inc
mov
and
ja
test
push
ficomps
adc
jns
and
test
dec
mov
fwait
mov
adc
lret
dec
inc
lds
das
xor
jne
pop
pop
xchg
je
sub
dec
mov
pop
mov
pushf
mov
insl
cmp
movsb
cltd
idivl
imull
fs
pop
jmp
test
or
xchg
jbe
add
arpl
enter
mov
aam
jo
mov
movsb
sub
mov
test
mov
out
pop
clc
jae
sub
or
dec
ja
mov
lods
arpl
lret
mov
sbbl
sbb
int3
pop
lret
jno
jbe
pop
adc
xchg
push
jnp
ret
inc
std
aas
movsb
sub
popf
cmp
pusha
jb
mov
dec
jo
orb
dec
xor
fwait
or
or
mov
icebp
fwait
cmp
push
sub
fdivr
cmp
inc
or
hlt
scas
mov
jp
lret
mov
inc
cmpsl
mov
imull
mov
clc
pop
movsb
les
or
in
cmpsb
ss
inc
cmp
mov
test
mov
stos
out
and
xchg
scas
shrl
inc
imul
mov
cmc
arpl
cmp
sarl
xor
daa
in
and
test
pop
sbb
das
xor
push
xor
or
mov
bound
sub
pop
sub
or
xchg
push
adc
scas
fiadds
sub
xor
xchg
out
mulb
sub
jae
andb
jno
xchg
push
movsb
pop
push
andb
rcl
push
daa
adc
dec
xor
sarl
jo
sar
shr
rcrb
mov
xchg
dec
inc
mov
cmp
xchg
ss
push
jge
ljmp
jmp
pusha
xchg
fcmovnu
pop
xchg
dec
xor
outsb
jmp
ret
ss
std
cmp
cmp
pop
sbb
jae
xchg
push
gs
mov
mov
mov
pop
mov
and
shrl
movsl
stc
test
jl
in
inc
cmp
pusha
pop
push
mov
ja
lods
mov
ja
dec
imul
pop
xor
ret
lods
sahf
fstps
daa
ret
flds
pop
movsb
mov
ljmp
sti
stos
mov
cli
xor
mov
arpl
inc
push
inc
ljmp
iret
jmp
flds
repz
add
rcrb
adc
mov
push
es
cmp
push
outsb
mov
aas
test
ret
lea
jl
xor
mov
jg
mov
das
xor
mov
adc
out
arpl
shll
fsubl
es
movsb
push
jne
cmp
xchg
mov
inc
push
sub
pop
sarb
loop
cs
adc
jl
mov
mov
jecxz
out
out
lds
cltd
adcl
inc
out
shr
lods
test
addr16
test
push
push
xchg
cmp
push
lea
and
and
aaa
jo
sarl
cvtps2pd
rcl
test
inc
out
dec
mov
sti
jmp
data16
jae
stos
ret
adc
subl
movsl
mov
les
jne
bnd
adc
pop
sbbl
andb
add
mov
jae
sub
stos
test
or
pop
mov
jb
and
sub
mov
dec
cmpsl
push
aam
fadd
mov
dec
xchg
scas
mov
dec
in
insl
inc
imul
call
scas
pop
mov
es
scas
push
imul
lods
mov
push
cltd
jmp
aas
push
in
cmp
cmp
in
xor
mov
xchg
push
mov
mov
pmaxub
in
xor
xlat
push
daa
aam
cmp
mov
cwtl
stc
pusha
and
pshufw
pop
and
mov
bound
mov
mov
push
testl
aaa
loop
jno
xor
pop
push
pop
das
int
xor
and
jae
cmp
mov
shr
dec
pusha
pop
enter
movl
pusha
pop
xor
nop
xchg
dec
cmp
addl
cmp
cs
divps
mov
mov
lea
fidivl
jno
mov
testb
or
jg
call
test
ss
ds
mov
add
add
repnz
les
out
sbb
xchg
sbb
dec
add
sub
icebp
mov
bound
mov
shl
mov
pushf
or
dec
sbb
notl
gs
mov
rolb
in
lret
xchg
mov
pop
imul
out
lods
mov
lahf
pusha
enter
movsb
push
mov
test
push
fistpl
dec
pusha
mov
adc
data16
add
imul
rol
stos
in
andl
repz
mov
popa
push
scas
jg
mov
push
pop
xchg
push
mov
dec
data16
and
fmull
fistpl
sahf
mov
mov
sub
into
mov
or
adcb
cltd
in
dec
adc
int3
iret
jl
mov
jg
push
out
inc
push
xchg
xchg
mov
dec
sub
inc
push
xchg
filds
andl
outsl
adc
lcall
xchg
das
push
mov
and
lods
pop
jns
adcb
dec
movsl
dec
xor
sbb
xlat
xchg
lods
icebp
cld
xchg
push
add
cmp
sbb
jae
iret
add
jb
sarb
clc
pusha
pop
add
xchg
fwait
scas
mov
les
adc
pusha
cmp
pop
int
je
test
loop
add
fwait
pop
ficoml
movsl
xchg
jne
lret
sbb
lret
lret
cmp
les
mov
xchg
add
pop
mov
xor
imul
and
jmp
js
into
mov
sbb
jo
jg
test
leave
pusha
dec
outsl
dec
gs
movb
enter
mov
ljmp
mov
pop
ljmp
lahf
adc
jp
scas
push
mov
push
ss
mov
aam
mov
jge
stos
ret
repnz
test
loope
and
pop
pusha
in
fdivrp
loope
jno
pop
fwait
jl
jge
lock
fdivr
dec
test
ret
scas
dec
lea
push
mov
fisttps
fildl
imul
in
jge
xchg
xor
call
fisttpl
mov
pop
insb
and
addr16
iret
sub
nop
gs
xchg
inc
or
mov
mov
rorb
bound
xor
fcoml
and
dec
fwait
out
dec
test
cli
add
pusha
xor
mov
insl
dec
push
imul
call
std
mov
mov
cltd
cmpl
aas
data16
mov
les
cwtl
cld
add
push
cld
gs
adc
aad
jno
or
stos
or
lahf
push
sbb
repz
pushf
iret
inc
nop
and
xchg
movsb
adc
lock
dec
sti
xlat
mov
push
rorl
mov
lret
int
add
jge
jnp
and
jo
push
cmp
ljmp
xchg
push
dec
inc
fisubrl
movsl
pop
shl
adc
fwait
add
pop
pop
loope
mov
test
cmp
jo
push
lods
insl
aam
pop
dec
jg
cltd
push
jno
pop
ljmp
fdivs
lock
cmp
lock
loopne
push
jp
cmp
jae
mov
push
mov
sar
sub
xor
inc
lods
sbb
adc
dec
icebp
sub
test
leave
or
leave
repnz
sbb
add
dec
sub
mov
ret
cmp
adc
and
push
ds
mov
sti
mov
pop
clc
cmp
stos
mov
aaa
jecxz
out
scas
mov
test
idiv
or
scas
into
stos
shrl
inc
divl
cmp
jbe
aaa
repz
sub
lret
jnp
mov
lcall
fs
aad
mov
cli
popa
jnp
mov
jp
call
and
lret
xor
push
jl
xor
fcos
push
xor
shll
cltd
cmp
and
pop
sbb
push
sub
test
iret
daa
std
and
int
mov
jbe
sbb
push
les
cmp
fbstp
push
cmp
pop
jb
mov
xlat
pop
ret
xor
lahf
fstp
movsl
lahf
mov
outsb
jno
and
xorb
jbe
jae
xchg
mov
test
fs
inc
outsl
mov
in
outsl
jbe
insl
sub
daa
xor
jge
jns
lret
push
cmp
mov
neg
popa
fsubr
stos
mov
subl
adc
mov
enter
cltd
cmc
mov
mov
test
insl
pushf
pop
adc
push
or
mov
std
rolb
insl
loop
mov
push
aaa
jo
jo
mov
in
mov
cmc
shrb
pop
repz
out
test
stos
cmp
sti
stos
add
ds
cltd
decb
insb
into
stos
sar
imul
mov
test
jmp
fidivrl
dec
js
sub
xchg
int3
dec
add
mov
fbld
xchg
sbb
or
pop
xor
mov
or
jae
xlat
xchg
xchg
cld
dec
shl
fidivl
cs
mov
nop
jl
pop
nop
pcmpeqd
mov
mov
cld
xchg
cld
loopne
mov
xchg
lds
pop
sbbb
lahf
int3
stos
mov
push
aas
pop
out
imul
and
jp
cld
sub
ja
test
hlt
clc
daa
nop
hlt
inc
pop
in
xchg
in
cmp
mov
inc
push
fisttpl
es
iret
cmp
adc
aaa
loop
and
in
dec
mov
mov
daa
jbe
dec
sti
mov
mov
adc
lds
insb
pushl
mov
and
add
jae
sti
js
mov
into
xchg
pop
cmpb
push
popa
add
jnp
push
filds
in
sub
bound
xchg
jb
mov
sub
gs
jne
sbb
lcall
clc
mov
and
mov
es
loop
js
sbb
aaa
enter
cld
repz
cmpsb
dec
int
data16
rorl
stos
pop
or
inc
fnstcw
arpl
inc
sahf
les
xchg
pop
call
adc
sahf
adc
xchg
sbb
ss
in
lret
fcom
adc
mov
dec
ljmp
add
adc
pop
ret
test
loope
cmp
push
mov
mov
push
popf
bound
adc
das
dec
or
insl
sbb
xchg
in
loop
call
dec
popa
jb
pop
cs
mov
jo
cmpsb
arpl
lret
ret
inc
sbb
inc
inc
push
dec
lds
gs
adc
jns
and
cld
push
out
rol
cmp
adc
pop
test
push
lods
jb
mov
push
cmp
iret
nop
mov
and
dec
cmp
and
iret
xchg
mov
std
pop
dec
aad
mov
arpl
adc
mov
lods
inc
lods
jmp
and
pop
fs
aam
and
mov
inc
and
jno
pushf
push
and
pop
data16
scas
icebp
addb
std
lods
pop
pop
int
jg
xor
xor
cmpsl
mov
mov
mov
mov
mov
icebp
addb
mov
mov
pop
ljmp
out
or
gs
jle
xor
inc
dec
and
gs
aam
ret
pop
int3
sbb
test
sub
xchg
vmwrite
adc
or
fcmovnu
inc
aaa
add
js
jae
adc
loopne
loop
rorl
es
leave
push
test
inc
and
int
in
ss
jb
imul
xchg
mov
push
or
test
sbb
inc
pusha
movsb
in
adc
stc
jb
mov
aam
loop
xchg
out
nop
mov
xchg
mov
push
adc
lcall
cmp
ja
movsl
test
jmp
fimuls
outsl
out
sbb
enter
cmp
stc
push
fistps
xchg
outsl
lds
nop
les
mov
outsw
daa
cmp
push
fcmovu
sbb
sbb
inc
push
pop
xchg
psubd
fs
pop
shll
das
xchg
mov
in
pop
xchg
push
mov
cmp
xchg
cmp
and
add
xchg
jns
mov
insb
call
pop
ret
xor
lcall
test
enter
into
push
ds
bound
pop
adc
jmp
jae
mov
comiss
in
push
pop
fsts
movsl
cmp
test
ss
dec
shll
enter
dec
test
test
sub
outsb
cmp
jg
cmp
add
inc
stc
push
fwait
push
test
adc
pop
in
fucom
popa
out
movsb
fcmovnb
imul
adc
out
mov
fucomip
sbb
lock
xor
add
sub
or
lods
loop
mov
push
push
es
aas
test
push
lds
fsubrl
jnp
dec
popf
fsts
sub
inc
xchg
out
mov
das
sti
push
ret
pop
mov
rcrl
std
mov
fnstcw
xorl
cltd
or
jl
iret
dec
lcall
lods
pop
dec
in
mov
sub
jecxz
jnp
add
fcmovnbe
fdivrl
xor
daa
inc
mov
jae
lea
out
mov
mov
shl
inc
jmp
dec
out
pusha
ds
or
jle
add
stos
addr16
sahf
cmpsb
sbb
hlt
mov
test
adc
jp
fdivrp
cmp
push
push
es
enter
std
iret
pop
imul
sub
fcoml
es
stos
jp
sub
xchg
xor
cld
cmp
test
fdivp
test
cmc
rorb
inc
fisttpl
pop
ljmp
and
xor
stos
jbe
gs
xor
jno
mov
jl
or
push
sahf
dec
jle
imul
push
pusha
add
sbb
mov
pusha
pop
jp
iret
jno
dec
fcoms
sahf
pop
push
xorl
std
jge
cld
mov
lahf
cmpsb
and
jg
fiadds
popa
jae
sbb
jge
das
loope
pop
sbbb
jo
dec
jb,pt
sub
out
inc
xchg
pop
dec
dec
and
push
out
jno
mov
sbb
xchg
movl
sbb
gs
mov
mov
enter
lret
roll
jno
mov
je
subl
out
xor
scas
add
int
leave
pop
mov
mov
cwtl
jb
add
inc
sbb
and
imul
fcmovne
pop
xchg
pop
ret
imul
inc
xor
mov
sub
rcll
fbstp
xor
xchg
adc
sub
and
sbb
repz
push
lock
ss
or
cmpsb
cmp
aam
imul
adc
inc
aam
pop
cmp
xchg
iret
icebp
xor
out
test
jnp
ret
shr
inc
and
mov
mov
ret
es
ljmp
sbb
sbb
push
adc
leave
jge
dec
sub
adc
mov
loop
add
sub
mov
mov
cmp
out
xchg
mov
int3
ficomps
cmpb
cmp
sbb
dec
addl
add
add
or
sbb
mov
aaa
mov
pop
sub
jg
scas
cmp
jg
icebp
jecxz
sti
add
and
mov
and
add
es
push
xlat
scas
xchg
lock
loopne
inc
sub
imul
repnz
fimuls
mov
movsl
jns
cmp
inc
js
push
nop
push
aas
faddl
add
rcll
pop
adc
or
sbb
jb
jae
lds
dec
dec
gs
popf
and
mov
lret
inc
lock
stc
xchg
js
xchg
mov
dec
js
fs
arpl
mov
mov
cs
jae
adc
xlat
mov
pop
nop
out
jle
movsl
fistl
xchg
jno
loope
fs
sarl
fisttps
enter
jl
fs
xor
jecxz
adc
jb
pop
pop
jecxz
addb
imull
mov
int3
out
je
sbb
mov
sbb
data16
scas
and
popf
sub
pop
iret
xchg
data16
add
pop
pop
or
into
and
ljmp
call
jmp
insb
test
lcall
out
popa
ret
sub
popf
insb
data16
inc
pop
sbb
adcb
and
out
jge
and
mov
add
scas
xchg
mov
xor
or
sbb
or
mov
call
adc
sti
add
lock
pop
add
push
xor
fcompl
sub
mov
fistl
cmpsb
adc
rcr
or
jle
and
lcall
cli
mov
pop
fsubl
cmp
sub
imul
cmpsl
mov
cmp
xlat
dec
mov
sub
xor
addl
jno
int
and
or
xchg
fwait
mov
out
xchg
pop
dec
lea
pop
pop
cmp
idivb
mov
lret
sub
repz
push
pop
add
dec
jno
add
aas
out
int3
or
mov
xchg
shl
bound
ss
jb
pusha
std
stc
je
mov
sub
xor
inc
xor
aas
dec
aad
lea
lods
in
mov
fdivrs
sahf
cmpsb
sub
push
sub
cs
gs
insb
sbb
fwait
pop
int
fwait
mov
xchg
xchg
scas
je
sbb
jp
movsl
or
cmp
clc
adc
or
fs
mov
push
sbb
imul
adc
es
cltd
shrb
lods
nop
dec
cli
sbb
mov
dec
pushf
test
xchg
pop
push
lcall
stc
inc
mov
jbe
loop
push
daa
out
cli
dec
call
mov
fld
push
sub
xorl
movsb
hlt
or
xchg
packuswb
int
mov
push
inc
nop
dec
cmpsl
repz
xlat
mov
testl
divb
mov
mov
cmp
cwtl
int3
and
scas
inc
cmpsb
mov
pop
stos
cmp
or
xor
pop
jo
repz
test
sub
iret
or
ds
and
les
shll
pop
mov
xchg
xacquire
movsl
and
stos
ficompl
sbb
stc
sub
icebp
xchg
and
out
int3
shll
mov
xor
scas
and
test
mov
call
xor
jl
xchg
popf
mov
xor
sahf
ret
dec
cmpsb
movsl
fldl
sti
cmpl
call
xchg
js
ljmp
adc
lret
push
xor
xchg
or
cmp
and
loop
fcomip
in
dec
mov
fdivrp
and
sub
add
pop
pop
push
inc
test
cltd
pop
jp
add
cli
mov
dec
xor
negb
clc
outsb
rcll
pop
fbstp
xlat
loopne
sbbb
jne
pop
fldenv
or
pop
sub
and
xor
insl
mov
scas
leave
mov
mov
push
pop
adc
mov
xchg
sub
imul
push
scas
das
xchg
aaa
test
mov
xchg
xchg
es
loopne
test
pop
sbb
mov
aas
jns
inc
xchg
rcll
js
pop
divb
mov
sbb
push
mov
xor
sbb
dec
xor
cld
js
mov
push
fwait
sbb
scas
add
sahf
dec
loop
fdivrs
int3
fwait
rorb
xchg
pop
cmpsl
dec
subb
and
daa
aas
mov
jge
xchg
test
cmp
fiadds
mov
mov
push
loope
push
push
sbb
jle
pusha
sub
or
addl
dec
fnsave
das
push
sub
into
dec
pusha
jecxz
jbe
cmp
cmc
arpl
or
loopne
pop
iret
sbb
out
imul
out
push
jle
push
sbb
pop
sbb
jmp
loope
gs
inc
pop
and
adc
sub
gs
cmp
mov
fs
subb
inc
cld
hlt
mov
lds
push
or
pop
push
imul
jns
stos
loop
mov
push
fcomps
and
xchg
cmpsl
jp
ljmp
fisttps
fistl
dec
iret
ss
inc
negb
das
je
ss
cs
sbb
adc
inc
pop
lods
or
inc
jbe
sbb
jnp
inc
nop
imul
das
xchg
jge
push
mov
sub
push
mov
test
movsb
adcl
cmpl
xchg
pop
les
icebp
jl
adc
pushl
xor
pushf
int3
sbb
lret
sub
jns
push
add
dec
and
xchg
pop
sbb
loopne
push
xor
cwtl
jns
adc
jmp
lds
dec
ljmp
adc
js
test
lock
movsl
orl
imul
or
sub
sub
test
jb
pusha
mov
iret
cmpsl
jbe
inc
pusha
adc
into
lock
push
into
pop
lea
and
and
push
sbb
mov
sub
js
sbb
rorl
xor
sub
iret
js
test
xor
popf
xchg
or
cli
lahf
xchg
push
into
notb
mov
adc
pushf
jns
mov
jmpw
push
ds
roll
roll
subb
subl
xchg
xchg
push
test
aad
outsl
les
push
push
mov
hlt
int
sub
gs
stos
aam
movsb
sub
clc
test
add
jmp
iret
fcmovnbe
shrl
lock
fwait
jne
loopne
int3
addr16
add
data16
xchg
insl
adc
or
push
cwtl
loope
test
mov
repz
adc
stos
adc
mov
pop
mov
mov
hlt
ljmp
mov
push
mov
pop
mov
aam
jecxz
loope
jmp
jl
sub
iret
jae
dec
fadds
dec
inc
dec
lods
push
rcrb
pop
mov
jmp
inc
fdivrs
ror
fdivrs
ss
sbb
jge
shl
fstpt
push
sahf
mov
popf
lods
mov
lock
int3
add
test
adc
movsl
ljmp
pop
imul
out
ret
and
xlat
pop
push
jae
leave
jno
ja
ficoml
testl
ficoms
lcall
fsubs
daa
pop
loope
int
pop
push
jae
jmp
dec
adc
mov
fidivl
jnp
mov
add
js
mov
xor
loope
dec
imul
or
xchg
fldenv
cmc
fsubrs
icebp
jae
xchg
push
dec
sbb
xchg
std
mov
adc
je
dec
sbbb
iret
pop
sbbl
xchg
mov
movsb
xor
roll
sub
int
mov
and
push
mov
daa
insb
xorb
popf
dec
xchg
nopl
ret
push
push
adc
cld
cli
xchg
test
adc
aam
mov
repnz
adc
jns
push
xchg
ja
ret
nop
into
subb
mov
mov
jo
lock
cld
or
and
mov
fdivs
je
icebp
fcompl
cmp
ss
pop
sbb
repz
movb
mov
cmp
jo
jle
sbbl
repnz
sub
or
add
jnp
xor
mov
push
mov
mov
pop
imul
inc
inc
xchg
imul
push
lret
scas
out
push
lret
pop
rolb
xlat
push
xor
gs
andl
pop
sbb
in
icebp
hlt
mov
jno
dec
mull
xor
iret
stc
shll
sub
adc
ret
and
adcb
rorb
mov
sbb
lock
and
insl
aad
lret
scas
jle
push
bound
xor
insb
call
bound
test
pop
and
sarb
ljmp
bound
es
ja
movsb
xchg
scas
push
icebp
popa
mov
dec
dec
testl
fcmovu
cmp
das
mov
fildl
or
xor
inc
push
aaa
push
iret
out
xor
outsl
xlat
loope
ret
cmp
andb
or
idiv
cmp
icebp
int3
fsubr
shlb
gs
cwtl
insb
imul
pop
pop
mov
push
push
push
mov
pop
rolb
je
sbb
lret
aad
mov
lea
sbbl
sbb
xor
add
std
je
lods
hlt
mov
xlat
jo
and
js
mov
aas
imull
out
push
aaa
jo
cmc
inc
mov
add
jle
jns
fists
enter
imul
fcoms
sub
mov
or
adc
add
les
fidivrl
adc
jne
roll
dec
xchg
cli
dec
push
sub
xchg
jae
daa
daa
insl
je
addr16
adc
mov
mov
pop
int3
xor
pop
lds
loopne
inc
fsubrl
push
es
push
mov
rcrl
pushw
shrl
sbb
xchg
mov
or
mov
jp
lahf
sbb
push
sbb
sbbl
sbb
jp
jno
arpl
addr16
in
add
inc
cmpsl
add
pusha
adc
imul
clc
mov
mov
fbld
scas
outsb
mov
lcall
movsl
lahf
adc
inc
in
out
adc
mov
loope
sub
hlt
mov
fdivr
inc
mov
rorl
imull
aad
or
ret
push
into
pop
mov
adc
stos
push
add
pop
nop
push
sarl
loop
lret
adc
push
lret
sub
cmc
addl
push
and
xchg
out
out
dec
cmc
mov
insb
mov
outsb
ficomps
mov
push
rorl
dec
lahf
mov
sub
lcall
je
cmp
adc
cmpsb
push
mov
fs
xchg
ror
xlat
push
leave
inc
jle
sarl
adc
enter
xor
inc
xorb
test
adc
ror
adc
inc
insl
stos
add
andl
dec
pop
push
fimull
int
cld
pop
lret
leave
icebp
pop
fwait
outsb
push
test
inc
jb
ret
mov
xor
repz
cmc
push
iret
test
incb
dec
jecxz
mov
inc
pop
mov
adc
adc
xchg
or
imul
in
inc
hlt
js
add
shld
or
aad
pop
into
mov
mov
adc
jge,pn
mov
roll
sub
bound
into
insl
mov
pop
jns
lahf
jle
xor
mov
jns
addl
adc
or
cs
stos
add
scas
jmp
faddl
pop
sahf
jl
loopne
cwtl
lret
dec
or
sub
out
popa
add
dec
mov
jp
cld
push
jo
ret
adc
push
and
mov
jge
sti
adcb
and
jecxz
js
or
mov
sbb
pop
pushf
out
mov
lcall
add
xchg
add
mov
ficoms
adc
pop
aam
mov
lods
xor
mov
dec
es
or
inc
aam
repnz
sbb
nop
stos
loopne
mov
mov
sbb
xlat
mov
dec
mov
fs
lret
into
je
test
xchg
and
and
out
outsb
mov
into
sbb
insb
mov
xor
bound
push
loop
insl
in
sar
shr
push
insl
pop
inc
add
pop
sarb
cmp
sub
arpl
std
loope
push
cmc
mov
or
cmp
sub
pop
or
fwait
std
or
es
leave
jp
cmp
adc
push
mov
xchg
cs
scas
push
outsl
sbb
jge
and
mov
popf
scas
repnz
std
xchg
cmc
push
popf
cmp
xchg
in
add
jns
outsb
jecxz
sbb
andl
push
push
xchg
jmp
cmpb
dec
jecxz
std
xchg
test
test
les
fmuls
stos
xchg
fldl
cmp
dec
int3
xlat
out
fnstenv
xchg
adc
out
jecxz
fidivs
pop
xor
and
push
mov
test
dec
cli
jo
sbb
fwait
mov
inc
cmpsl
and
lahf
cmpsb
js
sub
xchg
inc
mov
cli
lret
or
sti
push
xchg
insl
push
in
inc
pop
cltd
or
out
add
adc
jle
adc
xchg
jo
mov
jae
jae
adc
and
push
les
repnz
push
cs
ss
mov
subb
ljmp
gs
stos
inc
push
fisttps
loopne
aam
stc
in
pop
lds
cmp
pop
rcll
inc
sub
iret
stc
lods
outsl
jmp
xor
dec
adc
push
jmp
and
xchg
jg
je
leave
gs
jbe
insb
pop
or
mov
jmp
stc
xor
sub
jmp
ret
cmp
fcoml
mov
idiv
std
adc
adcb
rorl
push
sbb
lods
test
fistps
ds
in
stc
scas
sub
popf
daa
mov
sbb
outsl
jb
xor
stos
sti
aam
daa
xlat
mov
in
das
dec
xorb
xor
ds
xor
cmp
popf
jnp
shrb
outsb
jae
mov
add
add
mov
pop
outsb
xchg
dec
imul
or
out
pusha
mov
je
cmp
insb
int
and
and
and
fmul
jo
xchg
pop
xor
jge
push
fnstcw
pop
jmp
push
jnp
pop
ss
popf
nop
pop
addb
inc
pop
pop
sbb
xchg
mov
out
jmp
mov
fstps
xor
xchg
mov
mov
xchg
aad
loopne
outsl
mov
or
popf
adc
out
lds
inc
push
inc
imul
xor
or
sbb
mov
dec
add
stos
sbb
lock
clc
cmpsb
mov
dec
add
outsl
stos
dec
std
nop
sub
xor
fcmovu
cmp
dec
jbe
sbb
addr16
negl
popa
jp
fimull
inc
out
pop
test
push
sbb
xchg
jbe
loope
sub
cmpsl
shlb
in
into
loopne
xchg
negl
dec
mov
test
leave
es
test
lods
fimull
lock
xchg
or
sbb
jmp
cmp
pop
fisubrs
or
or
and
pop
xor
lahf
pop
nop
out
inc
cmpsb
stc
arpl
call
cmpsl
cmp
aas
fbld
gs
idiv
outsb
data16
divw
stc
int
xor
dec
scas
dec
jmp
push
cmp
insb
xlat
sub
stos
cs
jle
push
push
clc
inc
xchg
mov
lret
xchg
push
in
add
imul
repz
lcall
push
and
lret
jp
addr16
movb
mov
mov
sti
mov
jle
daa
pop
repnz
scas
adcl
clc
fimull
inc
jbe
int3
xchg
das
cmp
cmpsb
loop
outsb
fiadds
cmp
insb
jbe
dec
mov
pusha
or
xor
xchg
jge
stos
push
pop
fcoml
add
arpl
ret
xchg
xor
mov
sbb
sub
test
mov
stos
xchg
sbb
dec
jecxz
mov
aaa
jno
add
jp
incb
push
mov
dec
xchg
in
int
subb
leave
mov
cmp
jg
lock
or
mov
shlb
es
and
je
cmp
pop
lahf
es
sub
inc
push
scas
cmp
push
inc
mov
mov
lods
lret
fxam
cmp
jge
jo
or
jae
inc
sbb
dec
out
sbb
and
sbb
pop
and
insl
mov
pop
mov
mov
fdecstp
and
pop
xchg
inc
test
push
dec
dec
aad
test
dec
in
pop
inc
sti
ss
addr16
int
sub
stos
dec
mov
xchg
les
inc
mov
mov
sbb
xor
adc
pop
add
jge
std
loop
mov
mov
movb
jb
push
cli
negl
insl
leave
jmp
into
enter
aas
xchg
dec
inc
js
mov
out
mov
xchg
ljmp
push
inc
imul
mov
dec
mov
inc
jecxz
fisubrl
pop
xchg
fsubp
mov
or
dec
adc
inc
add
in
push
dec
add
mov
cmpl
mov
jno
lods
adc
outsl
shrb
xchg
xlat
scas
mov
in
andb
pop
inc
fwait
push
aam
repz
xlat
dec
stc
fnstcw
jo
or
fbstp
gs
add
mov
jp
imul
mov
cmp
mov
es
mov
jne
jg
mov
jns
mov
or
mov
mov
pop
enter
sbb
arpl
outsb
adc
scas
adc
jb
or
mov
xchg
out
adc
pusha
dec
rorb
lods
dec
adc
jno
insl
mov
xchg
jns
fs
movsl
xor
int3
and
movsb
jo
fadds
add
pop
cli
jle
sub
sub
test
sbb
push
adc
inc
cmp
push
pop
pop
and
popf
add
pop
fmuls
xchg
cltd
jns
icebp
jbe
nop
cltd
into
mov
bound
mov
fs
jg
mov
mov
stc
movsb
or
cmp
das
adc
scas
jge
xchg
ja
fists
mov
test
adc
pop
adc
push
stc
mov
jmp
out
add
pop
jnp
jecxz
pop
pop
mov
sti
push
ss
rcll
cmp
and
jp
sti
in
and
aam
xchg
or
add
adc
jns
in
inc
sub
fadds
imul
cmc
imul
dec
mov
xlat
lahf
push
pop
xchg
ret
sbb
sub
xchg
add
fwait
imul
fs
cld
cs
pushf
xchg
jae
mov
xchg
inc
xorb
xor
add
imul
dec
jns
pop
and
lahf
jo
aaa
shll
add
adc
inc
cmp
add
pop
or
gs
push
fcmovnb
jle
testb
popf
dec
cmp
rorb
push
xchg
out
sbb
fistl
in
lods
outsl
stos
aas
cmp
or
sbb
push
mov
jne
out
cmp
mov
and
dec
xlat
fsubl
hlt
inc
xchg
fcomps
scas
popf
scas
and
sbb
and
lret
iret
fisttpll
push
movsl
sub
push
inc
mov
push
in
aam
hlt
rcrb
fidivs
in
xor
dec
cmc
loope
mov
out
jnp
sub
daa
mov
je
fcomps
repz
movsb
mov
dec
cmp
and
add
fsubr
xchg
ss
add
data16
xor
mulb
hlt
lahf
sub
adc
xchg
popf
or
lahf
mov
insb
push
sub
sub
xchg
ss
xchg
lcall
movsl
dec
sub
fs
icebp
fcoms
xchg
andb
vmovshdup
xadd
sbb
std
gs
leave
fs
jns
andb
fs
fcoml
push
cmp
imul
pop
out
test
and
xor
mov
std
movsb
out
lret
sti
jg
adcl
flds
cmpsl
or
push
fcmovnb
rcrb
lock
pop
add
in
out
push
and
test
into
lods
pop
insl
test
out
dec
xor
jne
mov
xchg
push
jne
jp
popf
add
mov
dec
adc
and
jge
mov
hlt
push
push
xchg
or
ss
xor
push
test
jle,pn
call
shll
bound
or
pop
lret
jns
cwtl
decb
xor
mov
adc
and
in
popf
or
mov
js
pop
pop
and
sub
push
pop
mov
xor
sub
lods
jnp
nop
pop
cmp
xchg
mov
inc
cmp
push
cs
xor
cmp
enter
pop
sub
shrb
sub
dec
vcvtsi2ssl
jl
lods
hlt
in
gs
ret
cld
movsb
enter
stos
jne
sti
mov
fmuls
sub
scas
jge
pusha
push
fs
xor
dec
fsub
movsl
icebp
je
and
shl
leave
sbb
xor
mov
cmp
into
add
push
fsubrl
ret
mov
rcrb
ret
xor
movsl
add
push
ret
xchg
js
sahf
jne
in
mov
mov
repz
inc
xchg
into
jnp
mov
movd
mov
imul
cld
inc
pop
cmp
incb
jbe
movsb
iret
dec
fwait
jp
cmp
add
lea
je
and
ljmp
inc
mov
into
mov
sbb
lcall
cmc
out
je
push
mov
jle
xorb
xchg
lahf
imul
daa
mov
pushf
and
mov
push
jno
cs
scas
pop
test
in
add
call
leave
insb
adc
movsl
sbb
sbb
push
jmp
inc
sbb
outsb
or
or
jo
jns
cwtl
and
adc
in
adc
test
lret
pop
jecxz
cmc
movsl
enter
sbb
leave
cmp
fsub
icebp
adc
int3
test
or
test
add
and
in
jnp
pop
mov
adc
hlt
xchg
aad
and
call
mov
test
lock
xlat
jns
fld
repnz
inc
xchg
xchg
gs
xchg
mov
cmp
sub
cmpsb
out
sbb
sbb
pop
push
and
je
push
xchg
bound
xchg
inc
jge
aas
int3
jne
out
ljmp
xlat
xchg
add
xlat
push
jle
sbb
stos
movsl
clc
xchg
mov
xchg
adc
add
xchg
sub
cmp
mov
mov
add
jbe
add
inc
sahf
mov
push
mov
jl
jmp
movsl
call
sub
dec
lds
adc
imul
or
stos
std
out
clc
test
data16
mov
aam
pop
shll
sbb
push
fidivrs
push
pop
pop
es
cli
inc
xchg
push
push
push
in
fidivrs
int3
ret
mov
pop
into
loopne
mov
movsl
aam
sbb
mov
jge
in
xor
adc
daa
arpl
mov
push
cmp
and
xchg
repnz
add
add
cli
pushw
nop
inc
dec
out
scas
and
pushf
cltd
cld
adc
repnz
mov
int
data16
mov
mov
xchg
fmulp
xchg
sbb
loop
outsl
and
jo
push
and
mov
xor
sbb
mov
push
adc
test
fistpl
mov
mov
mov
jge
inc
cwtl
xchg
scas
and
shr
sbb
flds
xchg
add
roll
cld
xor
in
mov
aam
das
sbb
jne
and
add
adc
test
in
jnp
add
sub
or
push
fsubr
push
inc
movsb
scas
icebp
add
fisttpl
movsl
adc
cmpsl
cmpsl
sahf
loop
pop
sbb
inc
or
push
mov
push
sub
pop
nop
mov
fwait
xchg
cwtl
or
pop
in
or
into
mov
push
shlb
rorb
xchg
xchg
or
cmpsb
dec
push
lar
out
pop
inc
test
movntq
or
popf
cmpsb
inc
mov
mov
icebp
out
pushf
je
xchg
and
test
stos
inc
out
outsb
pop
aas
orb
and
pop
movsb
aad
adc
aad
cmp
mov
mov
cwtl
push
xor
push
outsl
out
es
ja
adc
pop
cmpsl
xchg
cmc
shl
or
jo
jge
jmp
add
add
sbbl
or
mov
dec
sarl
sti
outsb
pop
jnp
jo
outsl
repnz
sti
inc
repnz
repnz
jno
ret
mov
mov
mov
mov
lock
nop
pop
dec
lds
mov
add
cmp
mov
aaa
addb
out
rorb
stos
dec
push
lcall
int
dec
adc
dec
repz
cmc
orb
movsb
jle
mov
cmp
or
test
sub
or
out
inc
mov
cli
movsb
leave
roll
push
mov
shll
push
lods
test
pop
pusha
sahf
jmp
neg
icebp
jle
dec
fmuls
mov
fwait
adc
xchg
pop
lret
mov
mov
std
mov
dec
dec
clc
xor
adc
mul
loopne
aad
push
fldenv
stos
cmp
push
push
gs
jnp
push
dec
cmc
test
sysenter
dec
das
fwait
aam
and
or
lea
sahf
aad
pop
mov
lock
lea
mov
mov
xor
xor
outsl
mov
pop
imul
movsb
lea
movsb
mov
addr16
cmp
out
gs
add
mov
cmp
cwtl
in
stos
cli
gs
les
test
dec
mov
dec
lcall
test
fwait
pop
ficoms
in
lods
mov
cmp
hlt
insl
mull
push
cmp
lea
mov
int
xchg
xchg
faddl
pop
xlat
lods
xlat
push
inc
das
in
not
and
das
pop
add
pop
dec
aaa
leave
add
movsl
push
fbld
sub
out
pop
pop
int3
icebp
sbb
pop
pop
pop
loopne
xor
and
mov
cmp
cmc
sub
xchg
and
push
pop
sub
pop
mov
pop
sar
imul
ja
pushf
movsb
bnd
xchg
outsl
pushf
xchg
jno
scas
insb
add
mov
jne
mov
lahf
fidivs
dec
sar
inc
fstpl
lahf
shr
push
or
aad
xchg
insb
jp
dec
dec
aad
iret
push
sbb
es
into
movsl
sbb
pusha
jne
movsb
add
mov
sbb
xchg
notl
dec
pop
xor
outsl
xor
pop
insl
and
xchg
cltd
and
mov
lea
cwtl
mov
aam
jmp
cwtl
inc
or
leave
mov
lock
test
pop
push
cmp
addl
in
or
push
in
pop
jb
aad
popa
and
xchg
insl
lods
roll
bound
ja
out
sub
push
add
icebp
lret
lds
xchg
arpl
cmc
and
and
and
and
push
mov
cwtl
in
ljmp
js
aam
dec
push
adc
int
addr16
sbb
adc
mov
fsubp
ret
jmp
xchg
push
add
inc
shlb
lods
inc
mov
push
clc
ss
pop
fistps
jl
jbe
jl
std
sub
add
or
out
cmp
xorl
mov
and
mov
cmc
mov
out
loopne
cmp
shlb
in
fcmovnbe
or
sub
jmp
mov
stos
jno
xor
xchg
pushf
push
dec
jmp
cmpsb
mov
inc
dec
out
dec
add
jbe
and
sarl
aam
cmp
notl
mov
dec
push
repz
dec
and
insl
jns
rcl
push
enter
call
into
test
repz
push
gs
push
xchg
pop
adc
lds
addb
mov
mov
mov
aas
xchg
popf
push
mov
push
aaa
push
int3
xchg
and
in
pop
in
jb
movsl
pop
fdivr
cmpsl
cmp
icebp
stos
lock
hlt
pop
pop
jecxz
lahf
xchg
mov
inc
enter
imul
iret
xchg
xchg
add
add
dec
into
ja
mov
push
sub
andl
cmp
jl
out
cmp
add
push
sti
test
inc
mov
dec
cwtl
inc
test
clc
fstpt
xchg
mov
flds
xor
sarb
les
mov
adc
sahf
call
ficompl
add
sti
sbb
into
add
ja
inc
mov
push
test
ret
clc
xor
mov
stos
pop
cmc
dec
pop
addr16
incl
pop
cmp
cmpsl
mov
mov
xchg
ret
popa
jns
sbb
jnp
push
xorb
stos
aas
imul
cmp
loop
mov
out
ficompl
lods
fldcw
jae
mov
xlat
or
jno
stos
aam
dec
scas
dec
mov
mov
add
push
mov
push
jg
mov
sub
mov
repz
in
xor
pop
mov
idivl
scas
arpl
jo
mov
sbb
cmp
data16
mov
ret
pop
inc
xchg
dec
dec
lret
mov
lods
mov
pop
or
and
xor
cwtl
insb
cmpb
push
dec
ret
jmp
jp
inc
push
rolb
je
mov
cli
fwait
lret
sub
jne
loopne
xchg
out
adc
sbb
jbe
push
insb
mov
loop
lret
lahf
push
aam
xchg
mov
jg
movsb
in
adc
idivl
sub
andl
lock
push
sub
sbb
pop
sbb
adc
push
mov
sbb
ficoms
push
sbb
lock
mov
shl
push
pop
sbb
pop
das
xchg
ja
add
outsl
iret
mov
push
std
dec
mov
test
mov
xorl
xchg
xor
dec
xchg
pop
mov
lds
and
loop
scas
pusha
fsubrs
lods
pop
push
sbb
push
and
je
ljmp
scas
sbb
inc
cs
jo
xor
out
pop
push
jno
lea
aam
adc
push
or
cmp
hlt
movnti
in
orl
sub
scas
mov
or
call
aaa
or
faddl
addr16
cmp
push
hlt
pushf
leave
ret
hlt
insb
in
jns
les
lahf
std
push
inc
cwtl
lahf
cmpsl
in
sbb
in
enter
jl
jnp
test
push
add
aaa
adc
cmp
pop
jl
jg,pn
ret
sbb
sub
sub
dec
data16
adc
stos
rcrl
rorl
mov
popf
out
mov
jecxz
imull
xlat
jl
imul
sbb
sub
xor
mov
rcll
loopne
in
pop
sar
lods
gs
xor
adc
int3
xchg
popa
sbb
mov
test
mov
out
inc
into
out
rcrb
or
mov
pop
addl
mov
rcr
lods
adc
rcll
dec
sbb
cli
sbb
fnstenv
pop
inc
gs
mov
in
rcl
push
xor
sbb
mov
in
stc
or
mov
ss
fcmovu
mov
pop
add
or
push
mov
bound
pop
xor
test
lea
into
stc
inc
push
jns
pushf
sbb
dec
adc
sbb
fsubrl
jno
mov
inc
xchg
or
call
mov
out
xor
pushf
into
mov
stc
mov
ja
inc
mov
std
notl
out
or
insl
mov
pop
fmuls
push
ljmp
js
cmp
js
or
popf
jle
repz
push
cmc
loopne
pop
aad
xchg
cmc
cli
add
mov
pop
lret
cmp
out
cmp
mov
clc
testl
jne
mov
in
mov
in
sbb
pop
sbb
adc
push
ret
sub
inc
into
jp
pushf
dec
fmulp
ret
gs
lcall
add
ss
inc
out
ss
loopne
pop
inc
arpl
dec
mov
lahf
icebp
rorb
mov
pop
mov
add
in
lods
and
cli
sub
add
scas
popf
mov
xor
stc
and
adc
mov
mov
sarl
adc
insl
fistpl
inc
cli
xor
sbb
add
xchg
mov
pop
shlb
adc
cmp
jno
jg
xor
repz
cmpsb
xchg
std
sbb
mov
mov
into
outsl
dec
stos
aaa
jle
push
push
orb
sti
mov
mov
pop
sahf
and
pushf
pop
in
rol
xchg
scas
popa
add
jg
fildl
fsubs
idiv
push
fidivrs
dec
dec
mov
test
dec
jae
int
push
inc
xor
das
mov
mov
pop
fwait
mov
push
push
cmp
cmc
pop
jge
test
lods
fldcw
leave
pop
and
sbb
adc
and
shrb
repnz
fistl
ret
mov
pop
xor
bound
jle
push
enter
jl
mov
cli
push
or
adc
lods
test
mov
and
in
call
xchg
add
jp
aaa
and
xchg
xchg
int3
ret
mov
jno
andl
push
pop
xlat
dec
pop
or
push
pop
jbe
xlat
pop
scas
sbb
push
js
mov
fdivrs
fwait
ja
cli
mov
mov
jbe
xor
xchg
std
andb
cmp
pop
jp
stos
loopne
jne
xchg
ret
xchg
gs
cmp
mov
inc
sub
dec
icebp
andl
fwait
xchg
addb
inc
jmp
add
cmc
cltd
mov
xchg
outsl
mov
les
add
inc
fadd
sbb
add
xorl
arpl
push
pop
dec
cmc
dec
pop
cmp
je
mov
loope
pop
movsb
jno
or
mov
push
mov
push
lods
pop
dec
dec
imul
cmc
in
jmp
lods
bound
mov
js
push
pop
clc
sbb
ljmp
mov
xor
daa
inc
into
jne
pop
mov
pop
push
fdivs
pop
jne
icebp
lret
lods
test
mov
xchg
xor
pop
jp
bound
adcb
cld
in
push
hlt
xor
dec
pop
sbb
popa
add
sarb
mov
mov
lahf
push
fwait
movsb
inc
dec
in
testb
push
or
mov
dec
mov
pop
rorb
ds
add
clc
adc
or
mov
cltd
lods
push
sub
out
pop
and
ret
sarl
pop
add
repnz
lock
xchg
sbb
and
mov
mov
jg
daa
push
mov
test
mov
fcomps
ret
xchg
push
sti
inc
sbb
and
dec
call
push
pop
push
outsl
lea
jne
inc
js
dec
movsl
pop
or
inc
or
test
fcomps
stc
bound
fnsave
cwtl
add
loop
mov
xor
sbb
jno
andb
lretw
and
ret
fwait
insb
int
mov
aad
jle
sbbb
mov
mov
lret
dec
test
mov
insb
jae
sbb
mov
jb
add
mov
and
dec
bound
enter
mov
out
and
sahf
sbb
dec
add
dec
mov
ficoml
push
cmpsl
stc
pop
fs
js
in
dec
das
stc
lahf
lock
aaa
int
sbb
lcall
fldt
ret
xchg
push
int
scas
dec
scas
movsl
lret
into
pop
cwtl
add
push
std
sbb
test
inc
iret
pop
imul
rclb
add
addr16
xor
and
stos
xchg
push
push
sub
pop
enter
iret
xchg
push
jp
add
sub
arpl
addr16
mov
ja
xor
add
das
cmp
xchg
xchg
xor
imul
pop
sahf
dec
push
lea
inc
leave
add
and
inc
mov
rcrb
adc
mov
push
pop
mov
lcall
push
test
sub
sub
mov
inc
loopne
dec
mov
shl
cmp
subl
mov
loop
add
jle
popf
lahf
dec
loop
pop
mov
dec
jg
mov
mov
fwait
cwtl
stos
sub
repnz
scas
lods
cmpsl
sar
test
and
xchg
mull
jmp
pop
xor
jne
xor
sahf
in
imul
scas
ret
ror
sarl
icebp
scas
jl
and
mov
add
rclb
or
out
fwait
jmp
mov
pop
lret
adc
je
or
cmp
enter
inc
hlt
mov
orb
cld
dec
adc
sarl
movsl
pop
push
loope
inc
enter
and
data16
in
mov
sub
jle
das
xchg
mull
into
sub
test
leave
xor
decl
je
pop
pop
outsb
cmpsb
pop
pop
inc
xchg
ja
or
push
push
mov
repz
mov
mov
stc
icebp
mov
adc
pop
mov
mov
pop
rorl
scas
or
xor
xor
negb
add
lahf
js
xorb
sbb
ret
cmpsb
dec
out
mov
jae
jno
sub
dec
insb
jns
fsubp
outsb
mov
cmp
inc
repz
addb
cmp
push
addl
mov
push
loop
lock
cmc
sbb
leave
data16
outsb
sub
mov
adc
inc
or
sbb
jmp
push
adc
jo
mov
jp
or
or
jno
loop
ss
ret
cld
fdivl
sub
ja
push
sti
stos
or
push
inc
mov
loope
fidivrl
and
in
les
mov
arpl
pop
and
jl
mov
test
cmp
jno
imul
jae
xchg
pop
mov
mov
loope
or
adc
jmp
cmpl
leave
notb
jne
jle
adc
mov
loop
jo
repnz
mov
sub
sub
divl
std
mov
shlb
cld
out
fisubrl
sbb
sub
add
insl
mov
out
shr
lods
fnstenv
andb
cli
sbb
in
hlt
mov
pop
xor
mov
in
push
aaa
mov
adc
pusha
mov
lret
mov
adc
bound
dec
loopne
sub
loopne
daa
pop
repnz
je
out
arpl
xor
leave
cmp
cmp
out
push
aaa
push
jns
cmpb
adc
pop
mov
inc
adc
xchg
in
lcall
xchg
cmpsb
outsl
jl
cmp
mov
lea
lock
sbb
sbb
jae
loopne
adc
int3
sub
push
mov
mov
sbb
pop
popf
mov
cs
push
jmp
ljmp
jmp
jns
sbb
mov
lcall
pop
mov
inc
fs
jno
mov
aas
jne
sub
pop
das
lcall
pop
sub
pop
or
xor
pop
fs
xchg
mov
adcb
and
mov
fdivrp
ret
jae
adc
mov
mov
call
js
push
cltd
and
add
movsb
xchg
pop
shll
testl
dec
popf
and
lods
movsb
mov
and
pop
test
lods
push
jle
and
xchg
inc
aas
mov
int
xor
dec
inc
fsts
xor
out
mov
or
push
jmp
xchg
sbb
pop
push
adc
sbb
mov
pop
cmc
xchg
clc
mov
dec
lods
fnstsw
jmp
sbb
xchg
jmp
push
jecxz
das
ret
std
loopne
jg
hlt
mov
ret
gs
dec
testl
inc
imul
lods
enter
cwtl
xchg
adc
pop
leave
out
sbb
xchg
out
inc
add
hlt
pop
jb
xlat
xchg
mov
and
decb
out
pop
mov
rcrb
mov
arpl
pop
push
stc
in
or
outsb
aad
or
lods
adc
jo
cs
fidivl
xchg
cmp
mov
rol
and
sbb
inc
pop
push
ja
inc
jno
mov
lods
cmp
xchg
out
xchg
es
cltd
lret
int3
and
push
in
cmp
mov
push
push
out
add
in
mov
mov
sbb
negl
dec
insb
and
xchg
add
cmpsl
lods
cli
inc
push
cld
inc
outsl
or
fldl
pop
or
clc
pop
fimuls
mov
stos
or
push
xchg
inc
loop
cmc
and
mov
sahf
pop
fiadds
dec
stos
movsl
loopne
or
jae
mov
mov
aad
fwait
pop
mov
adc
fs
push
in
enter
cwtl
adc
mov
and
aas
jbe
daa
test
mov
jle
movsb
out
imul
out
push
add
or
and
sbb
addb
or
or
xor
push
jbe
les
aad
mov
sub
out
add
mov
mov
cli
mov
mov
nop
jae
lret
call
orb
repz
or
pop
pop
fimuls
addr16
test
repnz
sub
mov
xor
push
in
lcall
push
decb
or
push
mov
test
mov
dec
movsb
imul
out
test
aaa
or
scas
dec
es
sbbl
fldenv
jl
out
or
xchg
test
mov
sbb
dec
xchg
adc
lcall
push
hlt
or
data16
mov
sbb
int
aam
sub
in
sbbl
sub
add
movsb
and
int
xor
or
xchg
xchg
sbb
or
jmp
jne
cmp
lret
lret
in
mov
mov
push
in
out
lds
jl
and
adc
int
jno
push
inc
lea
cmpsl
jo
add
jb
pop
adc
pop
sti
iret
add
notb
inc
sbb
clc
lret
out
punpcklbw
adc
adc
lret
lcall
jae
insb
cmp
inc
sub
scas
push
aad
sbb
out
or
lock
pop
add
pop
jno
push
xor
inc
icebp
jne
test
ss
aaa
mov
ds
insb
dec
jecxz
xor
dec
into
paddd
mov
int
or
iret
stos
jns
ljmp
cmp
incl
mov
nop
into
dec
cmpsb
xchg
pushf
jmp
jo
sbb
sub
hlt
or
repnz
push
sti
mov
pop
mov
mov
test
pop
jae
aas
cmp
jle
shlb
fisubs
inc
scas
mov
mov
es
cli
and
shrb
push
xor
filds
push
mov
mov
inc
orl
push
pop
js
push
cli
cmp
sub
jmp
push
add
fstcw
stos
loope
mov
scas
xchg
adc
jge
mov
stc
push
shl
mov
enter
pop
pushl
stos
cli
int3
repz
inc
aas
mov
adc
loopne
rcll
jbe
sub
adc
pop
push
in
jle
mov
mov
mov
out
push
enter
jle
dec
pusha
js
mov
mov
gs
fcoms
or
stos
adc
inc
pushf
imul
arpl
and
jb
leave
jmp
mov
mov
dec
mov
test
ret
in
in
dec
in
mov
out
push
lahf
jb
repnz
or
and
into
mov
imul
fisttpl
in
jp
cli
iret
cs
stos
pop
mov
xchg
fldt
mov
pop
ds
push
jge
ja
sub
fdivl
or
mov
sub
fst
inc
inc
adc
jle
lea
pop
nopl
push
lcall
popa
std
pop
inc
ret
out
in
icebp
xor
scas
cmc
dec
add
int
shl
adc
clc
pushf
dec
add
add
sub
outsl
and
jbe
sbb
xor
repz
pop
iret
not
mov
add
stc
xor
gs
jns
movsb
xor
mov
rol
clc
fcompl
adc
dec
add
lea
or
dec
enter
lock
dec
ljmp
push
ret
mov
or
fbld
pop
add
out
cmp
fcoml
or
out
out
test
mov
or
jbe
mov
cmp
mov
rorb
iret
xor
inc
mov
mov
push
out
arpl
sbb
xchg
mov
imul
lret
mov
cmp
xchg
mov
jmp
push
pop
mov
inc
jnp
sbb
dec
mov
imul
push
jns
or
aad
js
push
scas
movsl
aad
fldl
ljmp
dec
repz
cmp
pushf
or
inc
repz
inc
fpatan
jmp
mov
and
jge
fwait
cmp
xor
xchg
loope
jmp
mov
sub
gs
movsb
or
das
jle
jb
push
mov
cmc
enter
movsl
outsb
xlat
adc
clc
cmpsb
ss
and
cmp
fadds
sub
xor
jmp
lods
in
add
stc
ret
pcmpeqd
rclb
pop
testb
jge
xchg
sub
fidivs
movsl
aam
cmpsb
fldl
ffree
inc
xor
jnp
shrl
notb
push
enter
in
lcall
or
ret
mov
push
je
pop
orb
out
jno
lods
fbld
push
sbb
pop
mov
divl
xchg
fbstp
mov
das
pop
das
ds
jmp
in
or
movsl
mov
mov
cwtl
test
jae
into
and
iret
sbb
sub
push
cmp
daa
jnp
pop
popa
fs
xor
push
fcmovnu
cs
mov
mov
jg
xchg
int
inc
pop
movsl
xlat
cmp
lock
xor
add
ret
clc
repz
mov
aaa
insb
add
sti
ret
sarb
fdivl
push
mov
and
dec
ret
sbbl
in
in
or
sub
push
icebp
aad
xor
mov
addr16
xchg
clc
shlb
js
pushf
pop
adc
jno
ret
movsb
out
fsts
imul
mov
xor
mov
arpl
cld
shl
push
js
mulb
jle
nop
adc
cmpsb
mov
inc
lahf
fisttpll
push
arpl
cltd
fldenv
lret
lea
out
jge
dec
push
pop
lods
mov
rep
pushf
mov
push
xor
pushf
sbb
mov
mov
xchg
cli
and
xchg
jle
and
sub
xor
sub
int3
leave
push
ljmp
in
mov
add
lods
sbb
stos
mov
push
sub
or
mov
mov
cmpsb
leave
xchg
rcl
or
push
rorb
ss
cwtl
dec
xchg
int
cmp
mov
lcall
popf
add
leave
xor
mov
mov
cmp
add
inc
pop
pusha
into
roll
jmp
sahf
cld
movb
out
lahf
jp
cs
pop
pusha
adc
mov
xchg
sbb
mov
jp
outsb
out
pop
cmpsb
mov
mov
jmp
mov
int
lods
inc
loop
lcall
mov
jg
lea
mov
jne
jno
sbbb
mov
insb
in
xcrypt-ecb
cmpsl
dec
js
nop
jle
dec
inc
or
push
sub
inc
fmuls
sbb
cltd
out
push
scas
mov
repz
movsb
movsb
cs
mov
iret
push
je
cmp
jae
out
jnp
icebp
adcl
adc
in
mov
clc
inc
push
sbb
cmp
cwtl
leave
inc
mov
enter
dec
or
inc
inc
jge
sar
movsb
rorl
ja
adc
hlt
arpl
jg
cmp
dec
test
mov
dec
sub
sbb
orb
jae
cmp
cli
mov
in
or
xor
out
call
dec
mov
adc
stc
cmp
mov
xor
push
cmpsb
inc
into
sub
aas
xlat
fcos
pusha
xchg
mov
ss
push
es
ss
das
test
mov
mull
fidivl
repnz
pop
or
pop
pop
arpl
loop
pop
add
push
add
dec
dec
imul
lcall
addl
dec
movsb
inc
lods
or
inc
push
int3
or
out
sub
sbb
sarl
pop
inc
mov
fs
cmp
dec
shrb
adc
sbb
in
hlt
pop
xor
mov
mov
sbb
ret
movsb
int3
or
cmp
pop
sub
outsl
lahf
xor
fisttps
roll
stos
fwait
repnz
fxch
fst
jne
dec
int3
sahf
and
cmp
sahf
fndisi(8087
xor
fwait
daa
icebp
mov
fimull
lods
pop
ds
scas
pop
adc
push
mov
scas
lods
dec
addl
testb
fucomp
in
xchg
out
dec
iret
inc
out
mov
add
sub
dec
jge
xchg
xchg
imul
inc
sbb
cmp
lcall
scas
pushf
pop
mov
and
in
outsl
jg
and
fdivs
dec
xchg
out
mov
push
sub
sti
lock
sub
dec
push
xor
and
xchg
cmpsb
dec
aad
rclb
mov
filds
in
bound
xchg
mov
sahf
xor
insb
add
xor
in
pop
or
addb
into
aam
mov
or
cmpsl
cld
std
aad
jge
insb
cltd
popa
fs
out
jns
iret
cmp
aaa
enter
fsubrs
and
cmp
jge
out
cmp
mov
movsb
mov
mov
or
scas
cmpsl
adcb
shlb
mov
mov
jmp
mov
push
mov
fbstp
test
xchg
jns
stc
xor
jns
icebp
and
xchg
mov
or
mov
mov
inc
jg
mov
sub
cmp
mov
fldlg2
mov
sub
push
fdivrl
cli
adc
aas
test
push
mov
jp
mov
mov
test
shll
or
lods
push
pop
scas
aam
je
xor
push
fwait
movsb
push
aad
bound
inc
imul
insb
pop
add
mov
stc
jle
mov
std
out
mov
std
incb
jb
ss
popf
add
adc
mov
hlt
xchg
pop
ret
ja
xor
shl
mov
mov
mov
or
mov
inc
arpl
mov
pop
sub
jne
inc
jnp
mov
cli
mov
adc
mov
rcll
dec
outsl
icebp
inc
in
lea
adc
movsb
push
icebp
cwtl
mov
rcrb
pop
jae
xor
mov
cltd
pop
lret
adc
push
imul
xchg
adc
sbb
and
cmpsb
ret
outsb
xchg
cmp
mov
test
lods
cwtl
dec
out
sub
jb
inc
popa
outsl
mov
mov
push
xor
dec
pushf
lret
jbe
pop
fwait
mov
sbb
lds
adc
mulb
sbb
cmc
mov
adc
fwait
dec
mov
push
push
idivb
jne
and
popa
icebp
jmp
xchg
out
popa
in
jp
movsb
mov
and
pcmpgtb
jae
add
or
mov
fdivrs
inc
jbe
cwtl
pop
adcb
pop
int
dec
mov
adc
jmp
push
jge
les
fbstp
xchg
xor
scas
sahf
pushl
dec
cmpsb
out
data16
and
pusha
out
icebp
adcl
dec
rcrl
or
daa
jae
inc
fsubl
cwtl
fimull
notb
inc
ret
mov
jne
sarl
repnz
push
stos
fdivrp
arpl
stc
pop
loopne
int
and
pmaxsw
imul
vmulsd
sbb
das
pop
shl
cmp
cmc
in
or
pop
push
sub
adc
mov
push
aad
cmp
xor
scas
data16
jmp
mov
negb
leave
subl
fisttpl
push
scas
mov
hlt
rorb
int3
hlt
ja
adc
push
popf
jb
imul
or
jl
fildl
push
dec
popl
xchg
gs
push
cmp
mov
addr16
mov
popa
mov
sub
mov
or
bnd
cld
in
mov
xchg
pop
mov
aas
lock
mov
rcrb
mov
push
mov
repz
pop
out
addr16
fsubrl
xchg
hlt
jne
jo
addr16
xchg
aad
test
cmp
xchg
test
test
aam
inc
dec
ret
or
sub
lock
xchg
gs
jle
push
and
fcom
in
fs
jp
es
adc
mov
and
loopne
mov
adc
inc
pushf
notl
pop
nop
mov
insl
imulb
sti
test
in
inc
xor
jae
or
mov
cmp
int
add
test
adc
flds
adc
roll
loopne
fistl
or
icebp
xlat
lret
cmpsb
test
dec
mov
sbb
adc
mov
jne
mov
sbb
subl
sub
das
enter
mov
pop
addr16
pop
and
dec
and
xchg
sbb
arpl
sub
repz
cmc
push
loop
dec
or
xchg
neg
pop
jo
clc
jecxz
ds
inc
mov
pop
nop
add
cmp
imul
xor
aam
popf
movsl
adc
and
add
int
sbb
push
mov
mov
sub
xchg
cwtl
scas
test
decb
xchg
loope
loope
into
mov
jnp
iret
add
ret
xchg
shl
mov
jnp
fwait
xchg
or
dec
adc
lea
sub
cmp
pusha
sub
dec
xchg
jno
push
iret
sahf
mov
jmp
xchg
xor
jle
pop
loope
into
mov
adc
call
out
mov
xor
je
fwait
adc
fsubrl
inc
or
pop
out
mov
clc
xor
sub
es
bnd
jg
mov
ja
sub
dec
push
mov
bound
push
dec
add
sbb
dec
adc
add
in
and
mov
or
mov
xchg
push
gs
cmp
mov
insl
fmuls
movl
ds
div
lret
js
aaa
sbb
stc
add
adc
ret
clc
xchg
sub
mov
or
adc
cs
push
xlat
enter
lods
int
push
iret
int
push
insb
pop
pop
cmp
mov
xor
pusha
testl
inc
repz
popa
jne
out
jp
push
pop
or
and
fsubrp
movsl
or
stos
fcmovnbe
daa
push
mov
inc
or
mov
sub
fldenv
xor
mov
mov
push
or
pop
scas
out
sarb
sbb
dec
mov
das
xchg
test
addl
dec
jl
call
mov
popf
push
cmpsl
lret
sub
flds
in
sub
fadds
mov
mov
jmp
push
push
mov
shrl
xchg
add
test
xchg
jno
ljmp
fisttpll
mov
mov
cwtl
sbb
mov
fadds
push
mov
stc
mov
mov
pop
inc
out
inc
rcrl
mov
jb
push
mov
push
fidivs
out
add
mov
fbstp
std
jle
aas
jecxz
xlat
push
pop
insl
inc
das
sbb
xchg
sarb
or
xchg
nop
add
cmpsb
add
popa
or
test
ljmp
jge
cmp
mov
add
sbb
daa
test
jnp
cmp
call
xchg
out
mov
call
mov
push
out
mov
rclb
outsl
out
fwait
lea
sahf
push
mov
xor
pop
icebp
clc
sub
out
xlat
pop
add
rcrb
movsl
xor
push
pmaddwd
dec
xor
pop
lcall
dec
lahf
cmp
out
loop
sbbl
cmpsb
arpl
enter
cmpsl
fiaddl
std
xorb
aaa
xor
rorl
push
jp
outsb
xchg
dec
aad
out
dec
lcall
xor
icebp
mov
mov
mov
jge
arpl
call
inc
fidivs
fsub
pop
pushf
pop
pushf
leave
xor
lock
push
in
lcall
or
jg
mov
push
cwtl
xchg
xor
pop
arpl
cmp
jp
mov
lock
add
xchg
jp
jnp
xchg
inc
dec
xor
mov
shrb
sub
lret
in
in
inc
hlt
push
fadds
push
sub
mov
fisubl
jle
xor
or
xchg
and
cs
pop
and
imul
jno
das
out
loope
dec
das
jae
xchg
insb
test
cmpsb
ja
jae
movq
mov
dec
push
popf
pop
pop
aam
rcrb
xchg
pop
dec
add
fwait
jl
cli
jnp
push
cmp
push
bound
rcll
push
pop
outsl
sub
jge
inc
mov
jecxz
faddl
add
sub
fisttpl
in
ja
sbbb
out
pop
scas
xchg
scas
add
cmp
push
jle
cmpb
imul
dec
jg
repz
and
ret
lcall
pop
out
aad
fildl
cmp
jl
outsl
out
ss
pop
adc
pop
mov
insl
xchg
sub
test
ljmp
mov
push
in
mov
into
cltd
and
adcb
xorb
insb
fs
cs
push
or
int3
popf
mul
outsl
lfs
hlt
faddl
jp
std
push
push
sub
jecxz
dec
movsl
adc
or
or
and
out
xchg
sbb
daa
push
mov
inc
imul
or
std
movsl
js
xchg
popa
dec
adc
and
adc
jne
rcl
inc
sub
dec
push
movsl
sti
push
pop
xor
iret
inc
in
add
gs
sub
fadds
or
sub
inc
mov
or
inc
popl
cmp
movsb
cmp
xchg
mov
movsl
and
js
js
leave
jecxz
stc
daa
faddl
aam
adc
mov
hlt
jmp
lret
rcrb
pop
ficompl
mov
xchg
in
sub
sbb
jg
xchg
out
mov
adc
sti
aam
scas
subl
cltd
test
or
inc
mov
xor
inc
inc
shll
sbb
adc
ja
imul
mov
add
inc
addb
cli
pop
add
outsb
roll
mov
xor
mov
in
mov
mov
dec
scas
scas
push
out
dec
xchg
cmpsb
push
in
inc
or
and
xorl
xchg
stos
cmpsb
popf
and
push
jbe
sbb
and
and
add
mov
mov
adc
xchg
ljmp
lea
jb
insl
addr16
xor
fadd
adc
pop
sub
outsl
out
dec
lcall
clc
inc
sub
mov
outsb
push
decb
push
mov
inc
jbe
mov
pop
pushl
and
or
lahf
insl
int
sbb
lret
pushf
dec
mov
es
shl
pop
mov
sahf
fsubp
xor
incl
mov
outsl
or
fcoms
add
popa
icebp
inc
enter
xchg
mov
ss
jmp
and
cli
imul
inc
and
cmp
pop
cmp
outsl
dec
jmp
lcall
es
daa
cltd
in
leave
std
xchg
pop
outsb
pop
fidivrs
fidivl
sub
in
lcall
lea
xchg
mov
cmp
xchg
jmp
mov
push
cmp
xchg
pop
mov
sbb
cs
mov
push
mov
pusha
mov
adc
xor
sub
iret
aaa
js
shlb
and
jecxz
jg
gs
jo
leave
adc
ficompl
jmp
aam
stos
loop
mov
mov
push
cld
sar
lahf
insb
adc
sub
sti
add
cmp
mov
scas
ret
mov
loop
addr16
adc
fs
push
clc
inc
sti
push
sub
test
jno
mov
inc
lret
test
fdivl
push
and
add
jmp
dec
mov
sbb
xchg
fdivs
add
mov
xlat
push
or
clc
jb
sbb
insl
leave
das
fbld
pop
aaa
inc
movsb
in
inc
dec
mov
xchg
bound
adc
test
inc
inc
push
lret
mov
lea
imul
leave
fldcw
adc
roll
sub
or
or
lret
mov
pusha
addr16
cld
cli
int3
mov
mull
sbb
sbb
shlb
and
mov
leave
stos
xlat
outsb
roll
es
fstps
or
lret
jbe
pop
enter
clc
movsl
iret
add
cli
sbb
or
pusha
popf
dec
or
xchg
shl
jle
imul
mov
popf
sub
adc
in
mov
lret
lods
out
mov
inc
loopne
jns
pop
loop
pushf
jge
push
ret
in
mov
cmp
fsubs
jl
mov
test
in
fstps
fsub
mov
push
into
adc
mov
jge
inc
mov
mov
jge
outsb
andb
adc
xchg
xchg
adc
inc
mov
push
out
data16
jmp
stos
es
and
push
or
arpl
dec
scas
mov
jns
add
mov
stos
pop
mov
mov
sahf
out
pushf
xchg
hlt
sub
out
divb
xchg
ds
dec
xchg
xchg
nop
das
xlat
smsw
jl
jno
das
cltd
ss
mov
mov
imul
cmpsl
shll
aaa
mov
icebp
les
jecxz
pop
pop
les
ror
inc
lcall
add
push
imul
out
add
ret
rolb
push
or
out
or
ss
add
lcall
aad
lea
daa
push
ja
test
std
mov
test
mov
sbb
sti
fldl
mov
xor
fcompl
push
push
dec
push
daa
inc
shll
loopne
cmp
mov
mov
cmc
mov
mov
fdivrl
pusha
pop
inc
ficoml
add
mov
imul
mov
mov
shrl
jne
out
imul
shrl
pusha
gs
push
mov
inc
popf
test
push
cmp
dec
and
rcl
xor
and
aad
inc
pop
rcl
decl
push
orl
mov
and
mov
lahf
sahf
push
push
xor
push
rcrl
push
lcall
dec
xor
addl
movsb
neg
int3
icebp
hlt
cmp
push
lret
fsubrl
cmpb
repz
sub
lret
inc
arpl
in
leave
push
mov
int
or
insl
cmc
std
lds
pop
out
jl
mov
int3
pop
cli
enter
in
and
mov
ss
inc
jnp
pop
ljmp
or
mov
int3
stc
sahf
pop
jae
mov
ds
xor
test
insl
cmp
sbb
fld
push
arpl
push
dec
cmpsl
push
cmp
fimull
hlt
cld
fwait
test
test
lahf
sbb
loope
es
mov
dec
fimuls
lret
inc
dec
sti
les
mov
mov
push
sbbb
xchg
push
pop
loop
push
xbegin
inc
xchg
popf
xchg
leave
aad
push
pop
out
lock
inc
mov
aam
fdivrs
or
leave
outsb
mov
lds
pop
jne
xchg
aam
idivb
push
lods
or
lods
cli
push
in
ret
add
xor
add
mov
push
push
iret
bound
aam
fwait
sbb
cltd
push
fisubrs
icebp
fcoms
test
dec
out
test
push
xchg
inc
pushf
adc
jmp
icebp
insb
sub
jge
bound
aas
ds
cmp
sub
sub
push
int
lock
push
pop
leave
and
lret
or
cwtl
in
cmp
jb
arpl
insb
jmp
jns
sub
test
mov
sub
icebp
mov
jns
mov
mov
icebp
ljmp
jmp
into
mov
inc
daa
pop
xchg
push
mov
cltd
fwait
sbb
push
ret
sub
jmp
xorb
lret
sub
call
pop
xor
mov
xchg
pop
xor
test
fwait
dec
pop
std
lahf
xchg
dec
xchg
dec
xchg
int
mov
xor
les
pop
adcl
and
lock
inc
lea
rcll
mov
mov
mov
push
add
jo
sbbb
mov
sub
leave
mov
mov
or
aas
lahf
mov
stos
sbb
hlt
outsb
ret
xchg
jb
lcall
adc
andl
lods
por
jnp
inc
xchg
cmc
jp
xchg
mov
jle
and
ret
nop
lret
pop
xor
leave
cmp
inc
jge
inc
in
das
je
subl
dec
sbb
xor
in
cltd
mov
shlb
cs
lret
hlt
lods
mov
je
testl
loop
mov
nop
fwait
cmp
mov
sub
lahf
mov
into
out
daa
daa
sbb
int
mov
mov
bound
je
add
repz
les
cld
in
test
xchg
mov
dec
aam
es
cmp
mov
mov
cltd
push
jmp
sub
mov
pop
cmpb
sub
lds
cmp
out
int3
pop
pop
stc
orl
push
and
or
test
dec
dec
dec
inc
jecxz
fisttpll
imul
popf
loopne
xchg
mov
jmp
dec
repnz
data16
cmp
addr16
das
push
jae
adc
fsub
push
stos
add
sub
add
sub
popa
int
cmp
addr16
fs
or
push
stos
imul
cmp
lea
cmpsb
add
flds
adc
out
rcrb
call
push
mov
fs
or
cmp
es
xlat
mov
xchg
pop
cmp
scas
jecxz
xchg
cs
pop
dec
das
int
pusha
add
stos
mov
cli
jno
movsl
filds
or
adc
mov
mov
fwait
mov
add
test
aas
pop
inc
mov
sub
jnp
xchg
mov
push
shl
add
test
pushf
lods
push
cltd
test
adc
xchg
enter
lods
sub
repz
cmc
lret
add
adc
hlt
je
mov
shll
lret
scas
call
int
push
test
fisttps
aam
je
dec
pop
dec
sbb
dec
pop
inc
popf
sbb
ds
xchg
xor
repnz
fwait
hlt
push
jns
jbe
fs
sub
mov
or
je
rcll
inc
pop
pop
arpl
dec
pop
push
dec
lds
pop
js
lret
aad
lret
test
fmuls
std
mov
add
cmpsl
clc
add
jg
inc
xor
in
push
inc
test
aas
mov
in
arpl
jl
lods
mov
movq
mul
and
xor
push
or
pushf
xchg
in
lods
dec
sub
pop
xchg
lahf
test
jo
cmp
repnz
cmp
ret
addr16
push
stc
lods
push
or
pop
popa
jecxz
icebp
leave
shrl
ficomps
test
jb
ja
daa
inc
and
flds
add
test
es
nop
out
lcall
faddp
and
sbb
int
into
xchg
lock
call
pop
mov
jmp
mov
push
loopne
inc
test
test
xor
popf
jmp
mov
sub
pop
addl
xchg
gs
jecxz
mov
ret
ret
in
xchg
lret
mov
sub
sarl
xchg
mov
aas
scas
cmpsb
ja
jmp
pusha
inc
pop
mov
out
inc
pop
or
ja,pt
shll
je
in
push
dec
mov
test
inc
jp
int
sub
shl
dec
xchg
mov
or
sbb
popa
xchg
pop
aaa
daa
push
push
sbb
mov
iret
push
xchg
imul
sbb
push
movsb
cmp
lds
and
adc
test
sbb
nop
jge
fs
movsl
rclb
scas
mov
aas
or
sbb
or
cltd
sbb
add
out
adc
rol
xchg
fsub
pop
lds
add
xchg
shrb
lock
mov
test
shll
jne
lock
push
aaa
jl
inc
jo
mov
mov
and
out
mov
pop
or
push
adc
inc
lds
sbb
mov
dec
les
mov
and
stos
mov
movsb
insl
fidivrs
lods
xchg
icebp
int3
outsl
adc
mov
out
sub
insl
xchg
out
mov
mov
xor
mov
and
jmp
movsl
je
popa
jno
data16
ss
hlt
sub
rorl
mov
jg
fists
arpl
mov
mov
jmp
mov
andl
jge
push
add
jns
pop
adc
dec
daa
jns
retw
dec
lahf
in
mov
cld
xchg
test
addr16
fs
mov
cmp
mov
xor
outsb
jge
insl
je
or
push
rcr
jl
mov
push
mov
cmpsb
mov
add
xorl
mov
sbb
xor
das
jg
addl
ret
call
mov
outsb
push
aaa
in
icebp
mov
in
out
xorl
mov
or
addr16
in
test
cmpsb
dec
or
sti
fcoml
sub
xchg
push
jns
shrb
pop
stos
repz
sub
test
rorl
push
mov
and
mov
xlat
jmp
movq
push
inc
xchg
mov
xchg
push
jae
ficoml
xor
push
add
test
xchg
call
in
insl
loope
sbb
fisubs
cmp
in
sub
xchg
xchg
or
adc
push
fldenv
scas
fwait
popa
add
std
rorl
ficompl
jmp
insb
cli
int3
fisubs
stc
jge
ja
mov
les
jmp
mov
sub
or
sub
imul
push
outsb
fidivs
dec
xchg
cmp
pop
addl
out
cmpl
inc
jl
jmp
aam
adc
xchg
dec
xlat
repz
fucom
mov
xchg
adc
jns
add
and
iret
jmp
stos
sbb
repnz
dec
clc
cltd
mov
mov
pop
xchg
pop
xor
jns
enter
cli
aad
pop
daa
add
leave
add
outsb
pop
call
loop
pop
add
repnz
cmc
hlt
and
and
movsb
cwtl
pop
mov
enter
inc
xorl
inc
push
incb
aam
mov
aad
clc
sbb
arpl
jne
inc
lods
mov
fwait
pushf
sbb
leave
movl
out
int3
sbb
mov
hlt
fildl
sar
enter
and
push
std
jb
scas
nop
imul
xor
sbb
or
pop
inc
jae
jl
mov
fldcw
push
and
xchg
cmc
cmp
jle
and
in
push
mov
cmp
addr16
dec
sti
mov
js
shl
pop
sub
iret
cmp
jbe
nop
shrl
push
addl
dec
inc
in
sarb
imul
lahf
sbb
dec
in
sub
inc
loop
in
out
aad
jb
testb
not
push
xchg
dec
adc
mov
popa
jg
cltd
pop
pop
add
movb
sbb
shl
mov
rol
mov
push
push
repz
popf
aad
mov
inc
and
imul
dec
cltd
lods
cmp
inc
lock
shlb
inc
int3
ret
push
out
mov
mov
xorb
xor
mov
les
sbb
mov
mov
popa
add
dec
out
jl
sbb
shl
push
lahf
lret
stc
jns
push
ss
mov
fisubl
stos
adc
pop
js
shrl
aaa
cmp
add
cltd
inc
bound
stc
aas
sbb
adc
daa
sub
setl
insb
ficompl
rcll
popa
movsb
adc
es
scas
outsb
in
test
das
and
mov
loop
fidivrl
inc
outsl
sub
jns
cmc
adc
sub
lcall
mov
cmp
xchg
lods
mov
push
sbb
adc
push
jmp
ss
add
push
addr16
cltd
aad
and
imul
add
sbb
lret
push
call
pop
fnsave
sbb
inc
and
jo
mov
outsb
mov
add
xor
repnz
js
xchg
adc
xor
popf
and
xchg
idivl
and
mov
cmpsb
mov
sbb
and
test
adc
xchg
mov
jno
test
mov
in
sbb
gs
jecxz
xchg
jae
dec
lret
sti
lods
loopne
push
rcll
mov
arpl
cmp
cs
mov
xchg
in
ds
cwtl
cmp
mov
repnz
push
mov
mov
mov
mov
cmp
cwtl
mov
jg
mov
push
rcrb
stc
jae
hlt
jno
sar
mov
mov
jbe
sarb
jno
mov
mov
mov
xchg
outsl
les
mov
fstl
push
ret
add
ja
inc
pop
loopne
aad
movsb
inc
sbb
xlat
push
adc
mov
mov
pop
clc
fisttpl
test
add
mov
push
shll
rcll
mov
leave
mov
int
mov
dec
pop
sbb
mov
mov
movsl
dec
adc
nop
mov
cli
mov
jne
fs
stos
pop
testl
pop
mov
test
push
outsl
mov
cmp
fidivrl
lock
pop
sbb
mov
pushf
lds
mov
dec
test
cmp
push
inc
mov
xchg
insb
call
jmp
lods
push
jbe
xchg
and
lock
add
pop
pusha
or
add
std
push
popa
popa
and
cli
adc
and
push
inc
fdivrl
add
mov
iret
aas
or
adc
sub
aad
cmp
stos
dec
mov
dec
negl
mov
push
lret
mov
sbb
push
sbb
xor
aas
push
jbe
xchg
push
mov
and
cmp
es
mov
jp
test
xchg
shlb
jo
sub
sbbl
inc
sub
xor
cltd
mov
clc
mov
stos
mov
xbegin
push
cltd
xchg
dec
lds
push
arpl
dec
xor
aam
incb
jne
imul
push
mov
xchg
sbb
sti
shl
cmp
sbb
jo
mov
ds
pop
stos
cmp
cmpsb
nop
sub
je
jne
lock
add
sub
push
shrl
pop
int3
sbb
lea
test
arpl
movsl
cmpb
adc
cltd
cltd
aad
mov
lock
in
cmp
xchg
cmpl
data16
aas
xchg
je
mov
xor
mov
xor
dec
aaa
push
jae
push
sarb
jno
dec
jns
xchg
ret
stc
jb
fxch
pop
aaa
jp
insl
mov
hlt
pop
pusha
mov
dec
mov
sti
or
lcall
shl
ljmp
ja
rol
push
popa
or
pop
lods
test
icebp
not
push
mov
test
inc
popa
pop
push
mov
pop
aas
stos
fsub
push
mov
rorl
hlt
mov
call
cmp
lret
sbb
mov
fcmovbe
cmp
pop
sub
arpl
pop
in
movsl
ss
xchg
in
nop
jg
clc
je
test
adc
xor
jne
pop
fsubr
inc
fidivrl
cmp
mov
fiaddl
cmp
xchg
repnz
cs
lret
add
call
arpl
popf
and
mov
mov
inc
out
sbb
fisubrl
mov
adc
insb
mov
xchg
lgs
or
stc
ljmp
xchg
test
cmpsb
xchg
ljmp
fidivs
pop
sub
add
into
xchg
scas
jecxz
enter
or
push
cltd
imul
repnz
jo
out
sbb
fidivrl
xor
pop
out
adc
popa
xchg
fistps
cmpsl
addr16
test
ret
mov
leave
sbb
mov
fistpll
dec
icebp
xor
sbb
mov
fwait
adc
movsb
dec
mov
push
adc
jbe
cli
mov
loopne
pusha
mov
cmc
jae
je
mov
push
ret
and
lret
inc
push
jecxz
in
or
push
call
push
xor
ja
ss
cmpsb
out
xor
call
ret
cmp
fwait
jbe
movsl
jnp
das
inc
imul
popa
jb
mov
fwait
or
rolb
xor
cmp
fbstp
xchg
iret
jle
cmp
subl
movsl
sub
push
jg
icebp
out
xchg
scas
or
mov
or
sub
jb
subb
lahf
mov
add
push
cmp
push
lods
mov
adc
or
pop
dec
mov
fists
rcrl
jo
cmc
loop
andb
inc
stos
popa
xor
jns
mov
mov
sbb
pushf
push
or
fisttps
push
test
cld
sub
pop
lock
sbb
push
scas
jmp
mov
shl
cmpsl
stos
mov
dec
enter
xchg
mov
mov
inc
sbb
lock
mov
rcrl
mov
pushf
xchg
ret
mov
sub
jp
lods
imul
lds
rorb
pop
das
inc
push
iret
mov
and
mov
fdivrs
pop
mov
sub
cmp
dec
lods
es
aam
shlb
and
lds
int
addb
and
fwait
mov
mov
adc
adc
aas
push
lret
ljmp
xchg
or
xchg
sbb
aas
jo
pop
sub
mov
out
and
testl
add
mov
daa
add
jg
insl
pop
push
pop
sbb
and
mov
pop
nop
xor
or
jecxz
inc
xor
sub
iret
sub
inc
xor
mov
xor
daa
lahf
sub
mov
cmp
lds
aad
scas
fistpll
ffreep
sub
outsl
xlat
adc
mov
les
dec
lahf
dec
cmpsb
scas
mov
mov
ja
push
popf
xchg
test
jb
mov
or
inc
rcrl
ficomps
or
pushf
gs
cltd
addb
dec
icebp
enter
and
loope
and
lds
in
xor
fwait
std
mov
int3
mov
dec
roll
sub
add
pop
cmpsl
adc
xchg
push
xor
xchg
lds
loop
adc
lret
sub
mov
cmp
pop
arpl
jb
lahf
stos
frstor
cmp
jnp
sbb
rclb
push
subb
xchg
ficomps
mov
popf
sub
shlb
neg
mov
insl
jge
les
jge
mov
cli
punpckldq
stos
hlt
es
insb
ljmp
mov
xchg
incb
pusha
jnp
dec
xor
sub
sbb
mov
call
jp
cs
xchg
pop
sbb
pop
aam
daa
sub
xchg
mov
in
in
lahf
sbb
clc
sbbl
push
xchg
push
nop
test
inc
ss
jno
les
inc
out
outsl
movb
ret
dec
jg,pt
into
or
pop
dec
sub
call
jae
inc
inc
scas
mov
push
pop
mov
mov
imul
call
pop
jne
orb
fnstcw
rclb
data16
jle
mov
icebp
mov
xbegin
std
int3
addl
insl
sbb
jle
sbb
rorl
add
aaa
mov
je
inc
das
push
inc
xor
dec
stos
cmpsb
stos
cwtl
repnz
scas
in
sub
leave
cmc
in
sbb
neg
jno
popa
mov
jno
out
pop
cmp
pop
mov
test
aam
xor
movsl
dec
test
subb
xor
mov
imul
cmp
fisubrs
adc
jbe
xlat
movsl
cmc
xchg
idiv
outsl
cltd
xchg
inc
or
and
mull
mov
test
imul
clc
data16
pop
adc
xchg
data16
shll
decb
ret
clc
dec
cmc
jnp
cmc
mov
loop
jb
lahf
sbb
test
xchg
adc
mov
icebp
xor
and
ja
xlat
out
in
inc
ljmp
dec
mov
sti
cli
out
bound
fbld
add
jbe
push
sub
push
lock
cmc
fs
xor
aas
int
cld
ljmp
sbbl
dec
mov
mov
pop
push
xchg
dec
out
in
or
xchg
mov
repz
nop
cwtl
push
inc
dec
cs
adc
push
popa
pop
cltd
add
or
adc
dec
or
xor
cmp
cwtl
push
push
mov
mov
mov
daa
ficoml
loopne
ja
jmp
pop
dec
mov
idivb
or
inc
mov
decl
les
out
paddusw
dec
fwait
ret
mov
in
hlt
pop
push
mov
mov
call
xor
fisubrs
pop
sub
inc
pop
mov
in
nop
stos
xor
cmp
aaa
jmp
outsb
mov
mov
sbb
mov
nop
add
cwtl
cmp
and
shl
stos
jg
inc
fistl
mov
hlt
sbb
test
push
call
scas
and
std
push
xchg
sahf
test
push
xor
cld
inc
xor
inc
mov
mov
out
cmp
mov
xlat
jecxz
pop
lea
pop
into
jmp
xchg
mov
mov
int3
sbb
inc
sbb
js
mov
and
rorl
in
sahf
xor
test
jmp
xchg
imul
dec
fidivl
push
xchg
adcl
data16
pop
mov
xor
and
and
mov
xchg
mov
clc
dec
jecxz
pop
xchg
loopne
paddsw
xchg
repz
fmuls
mov
sub
js
push
inc
jecxz
mov
scas
xor
icebp
xchg
sub
sub
lds
cli
lcall
loopne
push
out
push
loope
out
jle
mov
ss
test
or
jge
std
mov
xor
dec
add
rcrb
or
mov
inc
aaa
and
pusha
lcall
adc
sar
xor
scas
xor
mov
cltd
cwtl
lahf
leave
imul
and
xor
push
mov
push
push
push
lret
add
push
insb
test
enter
sub
das
add
pop
cs
add
push
pop
sbb
insb
roll
add
jge
dec
mov
enter
das
add
enter
data16
movsb
les
inc
je
mov
test
int3
aas
ret
gs
add
push
cmp
add
adc
daa
inc
xchg
cmp
sub
lret
adc
mov
sbb
lock
add
sbb
push
into
lret
outsl
cmpb
sub
orl
test
pop
insb
adc
std
mov
aaa
pop
mov
mov
nop
fdivrp
cmp
push
sub
pop
push
mov
mov
and
mov
cmpsb
pushf
lock
sub
std
adc
call
test
lcall
pop
jne
lahf
pop
mov
shll
mov
or
add
shrl
dec
movq
out
popf
cwtl
adc
jp
enter
add
adc
insb
adc
sbb
cmpsl
nop
movsb
nop
mov
pushl
mov
inc
xchg
mov
and
mov
pop
movsl
mov
cmp
xchg
addl
sub
push
shll
and
inc
mov
jbe
stc
pop
inc
fs
out
shlb
ficoml
sbb
jb
push
jae
mov
in
dec
in
pop
imul
pop
xor
inc
rclb
clc
lcall
xchg
shl
jg
scas
repnz
lods
adc
outsl
inc
data16
push
fimuls
and
add
aaa
enter
pop
jl
add
pop
mov
add
popf
fsubrp
mov
loopne,pn
js
jmp
movsb
mov
sub
insb
push
mov
xchg
loopne
cmp
dec
fidivl
hlt
pop
out
subl
pop
rcl
dec
rcrb
or
inc
data16
lock
sub
mov
pop
fisubl
das
movsb
xor
push
test
xchg
fimuls
enter
mov
aam
mov
fldl
cli
mov
xchg
xchg
scas
je
in
push
out
jg
mov
cmc
aam
popa
push
cwtl
push
daa
jp
mov
aaa
gs
mov
mov
outsb
test
adc
gs
mov
push
mov
test
sahf
dec
push
addr16
inc
xor
mov
or
aam
pop
and
mov
inc
mov
pop
lock
push
int
fs
outsl
daa
sbbb
aad
xchg
nop
cmp
fsubs
xlat
mov
push
xor
pop
shll
stos
nop
mov
imul
hlt
dec
arpl
and
add
addr16
mov
cmp
popf
cmp
mov
call
sub
int
data16
je
int3
cmp
sub
sarl
lock
or
arpl
xor
push
mov
shll
mov
call
call
daa
arpl
sti
jle
sub
sbb
push
jge
push
aaa
dec
lret
loope
ds
mov
sub
push
jg
data16
sub
push
mov
test
push
mov
jmp
fistpl
push
mov
cmp
xchg
cwtl
adc
cmp
inc
lods
dec
es
add
mov
xchg
mov
inc
addr16
scas
dec
or
xchg
daa
test
xchg
xchg
hlt
inc
dec
daa
mov
mov
orl
popf
mov
cmpsl
xchg
xchg
call
out
fwait
jecxz
icebp
inc
mov
xor
xlat
mov
stc
dec
xor
dec
push
dec
std
call
xor
dec
enter
push
test
mov
aas
and
lock
sti
xchg
sbb
add
in
push
ficomps
fistpll
fwait
les
outsl
int
dec
push
notl
out
loopne
adc
in
es
push
aas
add
mov
sub
lcall
and
lds
mov
and
arpl
lds
pop
push
push
and
mov
aam
lret
pop
movsl
aas
mov
dec
je
lret
cmpsb
rclb
dec
jp
mov
xchg
sbb
xchg
push
lea
dec
mov
push
fsubs
stc
jl
aad
je
repz
mov
in
popf
jnp
adc
mov
pop
scas
sbb
sbb
jle
cli
push
dec
and
sub
xor
scas
lcall
xchg
movsb
shrl
repnz
push
popf
frstor
sbb
or
mov
mov
fs
test
loopne
dec
int3
pop
push
in
into
loope
jns
stos
jmp
ficompl
jne
pop
into
mov
sub
inc
repnz
popa
inc
and
orl
add
push
and
addr16
andb
lret
dec
fisubrs
adc
inc
loope
out
and
xchg
out
in
cmp
dec
mov
dec
cmpsl
into
pop
mov
push
dec
inc
dec
push
movnti
inc
dec
mov
test
sub
call
jnp
leave
cwtl
mov
aam
or
sbb
lahf
imul
push
fadds
mov
cmc
mov
cmp
cmp
mov
mov
jg
aam
imul
pusha
aam
repz
add
aad
scas
add
xor
jne
loop
gs
xchg
mov
push
sbb
loop
adc
xchg
cmpsb
dec
fimull
mov
mov
mov
out
jge
pop
jne
or
cmp
fcom
nop
xor
repz
ljmp
int
notl
xor
mov
ret
jl
sbb
leave
xor
popf
xor
sbb
jmp
testl
inc
xor
fs
lods
inc
push
addr16
ss
cs
pop
inc
pop
arpl
pop
popa
in
mov
subl
mov
into
mov
clc
pop
mov
aas
ds
mov
je
in
enter
mov
insb
daa
xchg
sbb
test
adc
loopne
imul
daa
das
fnstcw
xchg
xchg
popa
jbe
dec
enter
mov
scas
cmpsl
push
xor
and
jns
pop
insb
mov
enter
ret
adc
xchg
xor
jns
test
pop
dec
xchg
push
jg
xlat
mov
dec
dec
jl
insb
add
test
adc
call
ret
sbb
push
int3
into
mov
inc
cli
mov
xchg
out
popa
dec
pop
mov
test
mov
nop
xor
dec
mov
icebp
fisubrs
add
mov
sbb
pop
lds
adc
lret
sahf
xchg
xchg
inc
or
mov
sbb
gs
adc
pop
xchg
jp
ficoms
mov
and
push
push
inc
push
inc
dec
inc
adc
mov
inc
clc
inc
mov
add
mov
xor
sub
sub
pop
adcb
aad
lea
leave
imul
iret
movsb
add
sub
or
scas
jb
and
cmc
dec
sbb
sub
xlat
add
fs
cmp
mov
sbb
pop
in
add
push
pop
mov
mov
xchg
pop
fwait
jns
or
in
adc
mov
mov
adc
xchg
mov
roll
imul
andl
daa
dec
sbb
dec
jmp
mov
decl
sbb
inc
data16
cmp
xchg
xchg
jnp
les
lods
pop
fists
int3
inc
pusha
inc
iret
inc
and
xor
mov
inc
inc
outsb
push
or
imul
cmpb
hlt
div
fiaddl
adc
std
cli
loope
mov
push
xlat
pop
push
push
cmpsl
ljmp
call
pop
mov
add
pop
jle
cmp
pop
cmp
push
lock
mov
xor
xchg
inc
xchg
jmp
or
fwait
cs
in
in
cmpsb
xor
jns
jmp
scas
jb
cs
jmp
inc
dec
js
jge
lock
popf
or
sub
mov
scas
xchg
or
negb
dec
stos
mov
cwtl
sub
push
repz
dec
ja
ss
or
jg
xchg
lds
push
pusha
inc
pop
jo
mov
ja
xorb
cmp
daa
aas
mov
add
sarb
aas
push
mov
jo
ljmp
pop
pusha
lret
bound
loopne
ret
fdivrs
xor
and
fisttps
lret
xor
pop
pop
mov
addb
xor
adc
insb
add
cmpsl
lds
lods
repnz
xor
and
ret
pop
sub
cmp
adc
push
sbb
push
jge
mov
push
jl
aas
icebp
pop
sahf
xor
arpl
sub
add
jp
stc
jb
out
push
hlt
mov
xchg
jne
lods
mov
clc
push
scas
mov
lret
cmc
clc
cmp
mov
push
int3
pop
or
cmpsb
pushl
sbb
repnz
cmp
mov
add
in
sub
test
push
adc
lods
mov
sbb
add
pop
dec
movsl
fs
sub
pop
cmp
xor
out
test
jo
mov
bsf
fs
mov
cmpl
nop
leave
inc
and
lret
jo
out
idivb
and
add
insl
pop
mov
rcl
pusha
pop
dec
cmp
sbb
les
dec
iret
les
cmp
xchg
xchg
test
sub
data16
push
or
and
test
mov
sbb
insb
ret
aas
je
addr16
sar
sub
ror
dec
mov
pop
xchg
fbstp
add
in
gs
push
imul
addr16
jle
inc
loop
aam
pop
int
push
push
xchg
add
or
repnz
dec
jns
into
cld
in
sub
jecxz
bound
mov
mov
push
and
mov
fsubr
or
ss
mov
cmp
pop
notl
sbb
cmp
notb
call
dec
push
inc
mov
adc
push
inc
inc
inc
pop
insb
fbld
out
lahf
adc
lea
lahf
xchg
je
fdivrl
mov
popf
push
out
loope
test
repnz
scas
std
fs
jae
fs
fstpl
xchg
ret
out
cld
lcall
jbe
xchg
xor
sarl
sbb
jns
push
mov
ret
js
cmp
scas
xlat
mov
jne
mov
outsb
xchg
sbb
dec
push
adc
jno
mov
xchg
cmp
imul
xor
scas
popf
punpckhbw
lcall
sbb
pop
pavgb
jmp
or
hlt
rcr
mov
std
test
stos
dec
test
scas
lahf
jl
push
in
inc
rorl
call
add
nop
adc
int3
in
es
dec
in
mov
test
je
js
pop
repz
sub
lock
adc
mov
daa
xor
sub
pop
lahf
call
push
jmp
jecxz
out
insb
and
and
mov
jns
sub
mov
mov
js
shrl
loop
jbe
movsb
adc
lret
enter
in
push
xchg
lret
push
cmp
imul
sub
mov
inc
jbe
lret
sbb
mov
mov
mov
xchg
inc
sti
sbb
aad
add
aas
jecxz
dec
dec
enter
cmp
pushf
dec
xor
push
adc
enter
dec
je
jno
fistl
sub
xchg
sbb
fisubrl
mov
and
mov
sub
es
bound
push
scas
fcmovnu
cmp
cmc
jne
dec
mov
cmc
dec
cwtl
jae
jnp
push
push
leave
add
cwtl
imul
cmp
rorl
lods
in
adc
daa
sbb
jg
mov
jnp
repz
lods
adc
xor
mov
jl
es
gs
xchg
pop
pop
dec
add
jnp
fucomi
test
cmp
dec
xor
push
jo
xchg
imul
and
jnp
clc
loope
mov
fcmovne
dec
or
shll
ret
ja
je
dec
aad
sarl
cmp
pop
mov
movsb
mov
jge
nop
fcoms
mov
sub
rol
pop
arpl
loope
adc
mov
sub
dec
ret
mov
mov
jns
in
loop
xchg
push
adc
insb
insb
sub
test
shl
jno
insl
jne
movsl
imul
mov
lahf
mov
scas
xor
out
add
loop
lods
lods
notb
shll
inc
jo
fmull
jbe
jns
loope
sub
or
sbbb
xchg
or
push
xlat
les
cmp
popa
dec
jg
cmp
xor
mov
repz
shlb
add
test
es
jnp
adcl
xchg
repnz
loope
mov
adc
push
pop
and
mov
lcall
movsl
jp
jge
push
cli
ret
push
int3
mov
aam
adc
mov
fs
xchg
push
or
stos
sub
adc
pop
out
xor
repz
test
ret
scas
or
push
sub
fsts
or
outsb
cltd
jns
ret
push
mov
mov
das
js
or
mov
sbbb
inc
dec
xor
test
adc
and
push
push
sahf
mov
ret
icebp
mov
push
out
or
out
xor
pop
ljmp
rclb
out
es
mov
fidivrl
imul
lahf
mov
add
pushf
popa
jge
push
std
sti
rcrb
pop
pop
jle
popf
pop
andl
mov
ret
mov
ret
stos
cltd
fwait
pop
aad
lods
sbb
and
push
jbe
cli
mov
pop
and
mov
or
xor
sub
jge
pop
jg
dec
imul
popa
xchg
out
ds
pop
pop
repnz
sub
jecxz
push
xchg
sbb
insb
movsl
dec
inc
addb
cmpsb
sbb
push
mov
pushw
adc
test
shll
movsl
xchg
aas
fcom
sub
lahf
mov
sub
cmp
push
mov
pop
mov
xor
loop
int
fsubs
pop
vpaddw
and
and
dec
ljmp
popa
mov
adc
xchg
imul
fildll
into
gs
cmp
in
data16
xor
lock
fnsave
imull
out
jo
dec
pop
sbb
sub
std
cmp
sub
pop
mov
push
fwait
mov
mov
call
cmpsb
inc
fcompl
push
jl
pusha
push
int
jmp
push
cmp
push
cmp
leave
mov
pop
pushf
cs
sbb
or
mov
ja
push
mov
fs
stos
fnstcw
ret
and
into
xchg
add
outsl
pop
mov
xchg
or
leave
mov
addr16
and
jno
arpl
je
imul
inc
xchg
jne
dec
mov
int
nop
cmp
xchg
loopne
cmp
pop
adc
cmpsl
movsb
imul
es
xor
and
fst
mov
jno
in
faddl
adc
push
out
mov
mov
shlb
push
dec
repnz
mov
lcall
cltd
loop
div
lods
cld
in
frstor
jb
scas
imul
jmp
dec
enter
mov
push
mov
xor
jb
movsl
sub
xchg
out
inc
mov
insl
xchg
cmc
push
icebp
vmovaps
clc
leave
daa
leave
add
add
and
sarb
repz
and
or
and
nop
push
mov
dec
xor
test
and
ljmp
mov
dec
pop
aaa
push
dec
sbb
pop
mov
xchg
xchg
into
jae
push
cld
fdivr
and
aas
icebp
rcrb
or
je
fisttpll
js
sub
jno
hlt
insb
ficomps
js
aaa
je
into
mov
jmp
mov
cmpl
xchg
loopne
xchg
out
jge
xor
call
pop
inc
push
adc
and
pop
cmp
dec
out
shrl
cltd
pop
xchg
mov
call
fwait
sbb
lahf
push
test
and
dec
push
popa
xor
fiadds
xchg
push
adc
xchg
lcall
andl
scas
jnp
xor
andl
sbb
out
push
inc
xchg
and
adc
xor
inc
sub
std
sbb
insb
cmpsb
lret
inc
inc
nop
push
mov
fldcw
scas
push
xlat
stos
aam
aas
mov
jecxz
cmp
add
jno,pn
mov
lods
out
pushf
inc
cs
outsb
psubq
inc
or
and
stos
xchg
cmp
or
jo
loopne
leave
out
or
inc
and
movsb
pop
sbb
jecxz
sub
jnp
jb
push
sub
pop
in
push
mov
scas
mov
rcr
mov
popa
push
lock
push
cmpsl
arpl
inc
pop
test
push
fidivrl
sub
out
aad
aad
data16
flds
in
push
rorb
aas
and
dec
insb
add
mov
shl
jo
repnz
jo
insl
or
mov
je
out
jmp
cmp
push
adc
xor
gs
js
push
and
gs
jmp
cmpsl
insb
or
inc
ja
rol
xchg
cmpsb
cli
add
out
inc
pushf
test
ds
cs
cmp
push
loop
push
push
mov
sbb
fldcw
jp
push
xor
or
repz
int3
cmc
and
adc
fwait
sub
dec
xor
lahf
cs
popa
fwait
add
jb
es
insl
push
test
cltd
push
loopne
xchg
out
push
push
je
xchg
aam
mov
repz
mov
pop
call
testl
pop
xchg
and
hlt
mov
or
push
mov
repnz
jmp
jp
call
cmc
call
jnp
pop
mov
bound
fsubrl
and
xchg
sbb
jl
add
mov
xor
mov
bound
mov
sub
test
pop
mov
push
adc
xor
mov
xchg
lahf
out
cltd
and
xor
cmc
testb
rcl
xor
ja
inc
pop
cmp
aad
ret
insb
cmpsb
outsb
mov
idiv
pop
dec
lret
mov
out
es
or
mov
mov
or
mov
xor
pop
inc
xchg
cmp
loopnew
rolb
xor
arpl
and
gs
mov
xchg
mov
add
test
incl
jecxz
jmp
loope
dec
shrl
cld
mov
push
in
jns
xchg
test
movsb
inc
and
sub
cli
dec
cmovg
bound
pop
dec
les
inc
xor
in
hlt
xor
and
push
lret
push
xchg
lock
int
mov
jae
mov
lods
mov
or
mov
test
dec
sub
sbb
jmp
jp
out
movsl
add
pop
mov
sti
mov
jbe
loop
xchg
dec
inc
jmp
test
inc
dec
push
arpl
push
repnz
adc
mov
loop
arpl
jle
repz
cmp
repz
xchg
mov
mov
xor
sub
inc
cmc
test
pop
into
and
js
scas
jne
in
stos
xlat
jns
mov
cmp
shll
adc
or
mov
xlat
out
test
inc
subb
lods
adc
ljmp
push
xchg
pusha
mov
pushf
daa
adc
cwtl
rolb
mov
sub
iret
mov
mov
push
add
cld
outsb
dec
call
cmpsb
sub
out
sbb
scas
leave
mov
test
lods
inc
dec
ret
loop
add
in
std
and
and
mov
push
xchg
cmp
and
ja
adc
nop
jmpw
mov
sti
add
loop
les
push
iret
push
xchg
push
xchg
lods
dec
in
jo
cld
loope
pusha
sahf
dec
fs
and
je
cmp
push
es
mov
cmpsb
jg
ud0
repnz
testl
fisttpll
xor
pop
mov
pminsw
pop
aaa
aad
ljmp
fdivs
cltd
sbb
test
push
mov
add
sub
int3
repz
xchg
xchg
sub
or
push
xor
faddl
dec
sbb
and
pop
mov
xor
aam
in
sbb
dec
push
xlat
adc
sub
dec
xchg
mov
aad
push
aas
lahf
push
jnp
lods
jno
mov
sarl
loope
sbb
jecxz
push
cmp
xchg
xor
and
fnstcw
pop
jnp
and
pushf
fldt
aad
xor
js
mov
xor
lcall
push
mov
aam
push
ja
mov
clc
xchg
test
pop
push
insl
test
fisubrs
shl
pusha
js
push
pop
inc
dec
dec
push
out
adc
mov
push
loop
push
or
nop
mov
decl
pop
mov
adc
inc
mov
sbb
push
push
push
mov
outsl
outsl
xchg
idiv
and
mov
leave
lods
xor
pop
push
into
or
loopne
ret
cli
cwtl
push
and
cwtl
outsl
scas
push
dec
xor
daa
loopne
ds
sahf
xchg
sbb
mov
or
inc
shr
xlat
sahf
fidivrl
shrb
xchg
mov
mov
in
inc
mov
cli
stos
mov
out
sub
gs
dec
and
jmp
fdivs
sub
sub
and
call
xor
aas
loop
sbb
mov
inc
sbb
adc
pop
aas
push
sbb
xor
dec
fisttpl
jl
push
testb
dec
idivl
ljmp
je
adc
jne
mov
clc
cmp
sbb
mov
add
addr16
lret
fcmovnu
imul
inc
push
std
inc
inc
xchg
jbe
adc
dec
cmp
in
int3
jecxz
push
push
push
int
jne
push
xchg
mov
scas
dec
push
imul
cmpsl
sahf
fnop
in
add
xchg
mull
subb
push
fimull
or
sub
mov
push
lods
xchg
xchg
push
push
mov
les
mov
mov
into
clc
leave
mov
and
jbe
mov
lock
lods
push
aam
xchg
lea
jbe
insl
outsb
push
aad
dec
out
cltd
dec
leave
int
push
sbb
xchg
or
pop
dec
scas
or
test
imul
xor
je
jge
push
jae
sub
and
gs
in
test
sbb
mov
cmp
in
mov
and
lods
cmp
mov
cmp
jmp
xor
pop
cmp
cmp
enter
inc
mov
cmp
add
bound
fs
out
or
scas
and
loope
fbld
cli
bound
dec
out
fsubl
mov
mov
xchg
jnp
fcom
test
cwtl
jne
aam
pop
xchg
xlat
ret
cli
pop
ss
cmpsl
fdivs
fcmovnb
push
inc
popf
mov
sbb
sbb
push
aam
bound
data16
sub
sbb
cmp
push
adc
jno
dec
lcall
ljmp
mov
add
adc
je
inc
cmp
lods
push
dec
cs
xor
cltd
xor
pusha
cmp
les
fstps
lds
mov
xlat
bswap
and
call
stc
stos
inc
pop
outsl
xchg
lcall
frstor
cmp
xor
aas
rclb
or
icebp
jbe
push
push
xchg
ljmp
jnp
not
subl
and
nop
xchg
sbb
loope
cltd
and
jns
dec
nop
inc
data16
aad
test
lcall
sub
sub
mov
cmpl
xor
repnz
or
lahf
sub
xor
add
or
mov
popf
mov
mov
xlat
xchg
rorl
popf
pusha
sbb
push
mov
xchg
mov
cmp
sahf
shl
mov
std
cli
mov
mov
xor
incb
dec
jne
adc
ljmp
sub
cltd
sbb
cmpsl
in
sbb
dec
mov
xchg
mov
in
mov
mov
ja
out
nop
sbb
adc
mov
cmp
sbb
mov
fisubl
sbb
jae
ret
mov
inc
dec
or
jp
and
aaa
pop
imul
push
cmp
faddl
push
sub
jle
cmpsb
lcall
repnz
mov
push
push
rcll
xor
jecxz
js
idivl
jmp
es
mov
or
ds
lock
outsl
int3
js
lods
cmp
out
or
aas
insl
lods
push
out
enter
jno
xor
mov
mov
lahf
outsb
stc
cwtl
jno
cmp
aam
pop
mov
popa
fisttpll
pop
mov
clc
xchg
test
inc
jp
add
dec
dec
arpl
popa
jp
mov
mov
inc
mov
and
push
sar
jae
adc
mov
adc
cs
das
push
into
mov
and
mov
lods
cmp
clc
push
add
outsl
xor
or
sqrtps
repz
mov
pop
orl
clc
sbb
hlt
mov
mov
push
stos
daa
sbb
adcl
xor
xor
sub
fildl
ret
inc
or
cld
mov
int3
idivw
imul
es
int
jb
mov
call
clc
stc
addr16
rcl
das
mov
jle
cmc
push
sub
aam
pop
push
pop
push
imul
mov
stc
adc
scas
sub
call
test
sti
stos
xor
lods
xor
lahf
ror
sbb
push
push
jns
inc
xor
lahf
lret
test
loope
lea
out
cwtl
mov
mov
jo
rolb
into
das
jmp
notl
mov
xchg
pop
aam
xor
cmp
cli
add
push
jmp
mov
dec
inc
loope
xor
out
scas
lds
add
xchg
movsl
ds
mov
dec
xchg
mov
sub
mov
out
adc
js
jecxz
lock
std
xchg
xchg
pop
xchg
add
push
dec
and
test
sbb
mov
scas
push
scas
inc
pop
jmp
ret
repnz
pop
push
push
in
popa
sbb
sahf
sub
mov
sahf
sarb
adc
mov
fwait
mov
sbbb
add
arpl
out
mov
outsl
mov
fisttps
inc
push
lods
jmp
or
imul
std
incl
mov
ret
clc
jge
pushf
jo
sahf
inc
scas
in
pop
push
lret
dec
lea
outsl
push
push
add
std
movsl
aad
pop
sti
js
xchg
sub
loope
aam
movsl
pop
push
xor
jae
xorb
daa
xor
mov
addr16
and
sbb
cmp
dec
movb
shll
mov
inc
inc
inc
or
inc
icebp
xlat
mov
add
sti
mov
xor
inc
add
add
pop
pop
test
jge
jno
sub
movsl
push
mov
loop
outsl
jns
lock
or
sub
xchg
loop
sahf
jecxz
lock
mov
aad
aad
ss
std
pop
in
out
jg
inc
std
pusha
imul
sbb
jp
sbbl
stos
jmp
outsl
push
push
pushw
push
ret
mov
push
into
nop
jno
jg
and
imul
rol
inc
cmp
mov
or
idivb
out
and
ret
insl
leave
inc
and
pop
cld
in
ds
cs
or
roll
in
in
mov
inc
and
xor
out
out
cwtl
je
xchg
xor
int3
jno
xor
push
sub
jae
outsl
mov
imull
lock
fists
in
adc
mov
clc
add
push
icebp
and
pushf
jmp
stos
bnd
inc
and
inc
les
pop
jle
or
dec
test
add
rorb
push
bound
adc
out
pop
jno
rorb
dec
gs
mov
rcl
mov
cli
fwait
mov
jl
divb
cmc
push
or
ficoms
addr16
pop
cwtl
lret
fs
dec
adc
adc
mov
neg
aad
inc
lods
lret
xlat
pop
sbb
jle
pushf
xchg
inc
cwtl
mov
xor
jg
mov
inc
insl
jg
inc
push
pop
cs
cmc
ret
test
sub
rcrl
and
jae
jg
sbb
dec
dec
and
call
rorb
sub
shl
dec
pop
idiv
int3
insb
sbb
jmp
insl
cmc
or
mov
test
sarl
je
negb
mov
jl
cmp
inc
add
fcomps
mov
xchg
leave
repnz
jg
and
sbb
sbb
faddp
push
xchg
data16
into
arpl
or
cs
jmp
bnd
rcr
add
pop
jl
and
fidivrs
xchg
movsb
add
add
aam
jmp
incl
das
in
push
cmp
cmpsb
mov
inc
pop
aaa
movsl
cltd
lods
mov
mov
scas
dec
call
bound
mulb
mov
sbb
les
mov
jle
scas
out
push
jns
jne
mov
loop
outsb
push
fs
cmpsl
cli
das
or
jbe
in
lods
ret
hlt
xor
and
adc
pop
testl
cmp
test
xchg
shlb
dec
cld
imul
jae
sbb
jle
pop
ret
and
in
or
mov
push
imul
adc
lret
cmc
in
popa
jmp
sahf
cwtl
or
ds
cwtl
addr16
outsl
inc
pop
pop
jns
imul
dec
xchg
lahf
aaa
xchg
xor
xchg
xor
data16
pop
pop
insb
xor
jmp
mov
cmp
pushf
sub
imul
dec
sub
jne
cltd
cli
or
inc
je
test
popf
inc
aas
inc
mov
pop
repnz
jge
popa
sbb
dec
jp
in
enter
xor
xor
jae
sbb
mov
test
push
cli
cmp
mov
jmp
fsts
mov
out
mov
pop
or
pushf
push
pop
in
sarl
or
sti
sbb
shll
dec
cmp
fstl
xor
xor
sbbl
mov
inc
push
sub
xchg
push
jne
aas
test
push
sbb
hlt
adc
sbb
mov
movsl
aam
cld
dec
sahf
cltd
sti
push
dec
stc
lock
pop
movq
mov
inc
lock
es
aad
in
and
rclb
pop
data16
inc
cmp
fwait
or
lods
cmc
sub
sbb
aaa
cmc
sbb
jae
addl
ljmp
cmpsb
mov
cmp
insb
into
pop
fildll
outsb
jno
das
test
lods
mov
jbe
jecxz
sbb
rclb
jp
push
int3
mov
lret
test
iret
pop
clc
xchg
in
shll
stc
mov
iret
mov
mov
test
out
xor
movsb
pop
fnsave
lret
cmp
outsl
std
dec
push
or
mov
fsubl
mov
stc
dec
jmp
les
cmpsl
stos
addr16
nop
outsb
and
sti
sbb
scas
outsl
movsl
test
push
xchg
add
mov
out
enter
xchg
andb
call
jmp
cs
mov
inc
addr16
arpl
pushf
ljmp
adc
stc
xchg
or
or
out
push
jo
pop
sbb
repnz
fdivrs
scas
push
hlt
mov
mov
pusha
adc
fs
inc
inc
xchg
jle
cmpsl
aam
push
jecxz
sub
mov
and
ljmp
mov
fisttpll
lret
lods
xchg
sahf
cmpsb
test
das
pop
insb
sbb
add
gs
hlt
das
clc
mov
cld
lret
popa
push
xor
mov
fs
jl
fsts
daa
fstpl
fistps
jno
repnz
mov
paddsw
sbbb
push
rorl
popl
pusha
scas
mov
stc
fldt
mov
dec
mov
sub
fdivrp
stc
lret
mov
mull
add
jp
mov
and
inc
sub
aas
bound
cld
cmpb
dec
mov
sbb
orb
shrb
adc
adc
jns
js
test
ret
cwtl
sub
fsubs
cmp
mov
enter
mov
fisttpl
imul
mov
inc
pop
lods
adc
lret
inc
es
sahf
jg
push
sahf
sbb
push
jno
das
cmp
scas
fdivrl
mov
arpl
rclb
imul
std
ret
sub
or
sti
adc
cltd
orl
pop
rcr
test
xchg
push
bound
xor
stos
or
mov
push
gs
inc
mov
dec
fs
jmp
addr16
jp
adc
xchg
int3
std
bound
insb
and
popa
lods
mov
les
push
mov
add
ret
scas
xchg
inc
jmp
mov
icebp
and
mov
lret
pop
iret
sbb
pusha
in
shl
add
cmp
mov
inc
pop
repz
mov
pusha
lret
inc
fwait
shll
roll
inc
fdivrl
pusha
xorl
scas
in
insb
mov
dec
pop
cmp
dec
push
jmp
repz
std
push
fstpl
add
mov
push
jnp
pop
cmp
add
movsb
cld
jbe
mov
inc
test
jo
dec
insb
push
cmp
sub
add
mov
cmpb
loop
cltd
lcall
ljmp
jp
sub
addl
test
imul
add
inc
pop
pop
cmp
aaa
in
mov
loopne
and
movsl
and
icebp
pop
cmpsl
push
shl
sbb
mov
mov
xchg
cwtl
add
xchg
cmpl
cmp
clc
adc
or
adc
ficoms
loope
mov
mov
jbe
pop
sbbl
popf
outsb
dec
faddl
xchg
mov
dec
ljmp
lret
or
pop
xchg
into
das
daa
cmp
int3
mov
push
and
pop
cmp
cmpsb
std
mov
adc
or
in
mov
mov
aaa
andb
xor
ss
jge
cmpps
cmp
lret
dec
lods
xor
lahf
push
test
stc
xor
jnp
dec
dec
mov
mov
jne
cld
test
test
loop
push
in
cwtl
pop
dec
jne
jge
test
scas
cmpsb
call
cld
ret
mov
pop
clc
dec
or
or
inc
mov
repnz
push
je
adc
cmpsb
out
js
sahf
push
mov
inc
out
fldt
out
decl
cltd
pop
mov
data16
xchg
lods
ret
and
push
inc
dec
lret
or
jae
jnp
aas
aam
pop
mov
sbb
lods
pop
popa
icebp
add
adc
pop
aad
negb
xchg
dec
jge
add
mov
lock
and
push
xor
mov
cld
xchg
je
or
in
pop
pop
ss
pop
mov
jbe
mov
cmp
leave
dec
inc
dec
pop
xchg
das
data16
jecxz
sbb
mov
pop
scas
or
cmc
adc
cmpsl
add
sahf
xchg
inc
mov
sbb
xchg
out
rolb
scas
scas
lahf
add
repz
push
sub
fildl
dec
jl
sbb
xchg
aam
arpl
aas
add
push
mov
mov
mov
dec
mov
sub
inc
pusha
ss
sub
test
cmpsb
pushf
daa
hlt
hlt
mov
add
sub
icebp
int3
add
push
mov
jne
test
sbb
test
addb
push
and
mov
push
arpl
jb
add
pop
push
sbb
jg
aam
lods
fistps
mov
xor
xchg
sbb
ret
pop
sub
and
incb
push
push
scas
cld
adc
aas
divb
sbb
pushf
adcl
lahf
cmp
sbbb
xchg
jae
and
push
test
mov
test
cmp
adc
aam
nop
test
mov
roll
cltd
pushf
sbb
cmp
pop
scas
pusha
sub
mov
mov
push
push
xchg
xor
and
fcomps
cli
mov
stos
je
cmp
fnstcw
jp
inc
out
in
and
shrl
xchg
imul
lret
pop
cltd
call
xchg
inc
mov
dec
xor
cmp
shr
subb
jmp
testl
mov
fiadds
lcall
adc
insl
cmp
in
and
hlt
sbb
add
dec
stos
jns
outsl
sub
mov
pop
pushf
xor
test
jne
adc
xchg
push
push
mov
jge
and
mov
lahf
jmp
je
fcmovnbe
lods
pushf
xor
subl
sti
jns
cld
cmpsb
in
xor
xchg
adc
jno
js
fidivl
icebp
std
popf
test
or
jg
fidivs
inc
push
insl
in
lret
outsb
sbbb
cmp
mov
fwait
test
inc
ret
roll
fistps
mov
les
lahf
add
aas
fcoms
fs
jno
add
push
mov
push
sub
ret
jle
sub
xor
aam
cmp
out
movsl
sbb
add
addl
les
aaa
xchg
das
dec
in
je
mov
movsb
cmp
mov
sbb
in
mov
inc
and
pop
cmp
jnp
jae
jbe
pop
and
inc
rep
xor
lret
pop
dec
icebp
pop
cmp
call
inc
sub
aam
xchg
push
and
stc
or
sbb
sub
cmp
cwtl
gs
stos
push
scas
mov
xor
addl
add
imul
fs
add
das
jecxz
or
lock
add
mov
xchg
rcll
ret
mov
or
pushf
les
pop
fs
ja
push
xchg
lea
rorl
mov
xchg
mov
mov
dec
xor
mov
mov
mov
ss
out
inc
xor
pop
xorl
leave
wrmsr
sbb
sbb
repnz
add
ss
xchg
mov
mov
lods
cmp
popf
loop
clc
mov
add
dec
imul
cs
inc
mov
test
insb
xchg
push
adc
pop
cmpsb
int3
inc
mov
dec
sub
xchg
dec
sahf
dec
mov
dec
and
pop
mov
adc
repz
or
shrl
test
out
mov
sbb
and
mov
pusha
pxor
sub
push
aas
mov
sbb
mov
aad
mov
roll
mov
stos
out
js
mov
jns
lea
xchg
mov
adc
loope
pop
mov
loope
jae
aad
add
add
cli
repnz
xchg
aaa
jp
xor
stos
cmpsl
inc
shll
inc
xchg
add
movsb
xor
mov
jae
or
callw
inc
pop
pushf
outsl
out
lret
sbbb
popa
and
or
dec
mov
test
or
inc
out
or
push
or
loope
out
ds
sub
pop
push
pop
pop
adc
adc
sti
xorb
cmpsl
call
sub
mov
pop
push
dec
int
mov
cs
leave
mov
xlat
cmpl
cmp
sahf
inc
cltd
inc
orl
push
hlt
pop
loop
sub
roll
push
pop
movsl
fs
stos
dec
incb
arpl
and
inc
hlt
popa
pop
rcrl
stos
or
aam
cmpsl
mov
lret
lods
movsl
mov
cli
add
lahf
or
push
divl
cwtl
es
lock
fdivr
mov
cltd
xor
sub
repz
cs
xchg
adc
pushw
mov
push
ret
sub
enter
add
xchg
ret
pop
pop
sbb
outsb
add
pop
jne
pop
icebp
out
inc
and
pop
lds
and
pop
fnsave
in
dec
xor
arpl
cmpsl
andl
stos
stos
aaa
cmpsl
xchg
and
test
ret
fstp
push
cmp
popl
fwait
arpl
cmpsb
pop
mov
fwait
in
sbb
sbb
jmp
or
imul
and
push
cmc
stos
int3
test
iret
push
xchg
mov
outsl
fnstenv
jae
mov
into
sub
xchg
sti
mov
lds
outsl
dec
lods
add
lock
adc
jle
fcom
add
cli
xchg
movsl
js
stos
hlt
xchg
dec
jle
sbb
or
xor
adc
sub
adc
xlat
push
notb
std
push
jmp
divb
stc
testl
mov
mov
test
jns
inc
pop
mov
cmp
jg
push
mov
iret
push
les
mov
xchg
mull
fidivrl
stos
test
lea
shrb
dec
call
inc
outsb
bound
inc
sbb
mov
jmp
vmread
add
sbb
mov
jo
and
movsb
mov
mov
mov
movsl
das
insb
jns
popf
xor
dec
adc
das
push
push
add
mov
cmp
fstpl
in
rol
data16
xchg
lods
and
insb
dec
dec
pop
dec
xor
cmp
shll
mov
inc
mov
inc
cmp
incl
fcmove
cmp
andb
cli
inc
sar
and
mov
mov
pop
pop
cli
dec
cmp
mov
adc
pop
out
push
adc
sbb
and
inc
loope
dec
or
dec
mov
test
xor
sbb
arpl
adc
mov
mov
jmp
inc
imul
lods
data16
jl
test
push
mov
pop
xor
inc
loope
daa
push
mov
and
jns
pop
and
adc
clc
sbbb
pop
js
lods
pusha
xchg
popf
int
xchg
mov
push
flds
fnstsw
adc
sti
leave
aas
mov
pusha
xchg
stos
xchg
sbb
cmp
mov
lret
xor
idivb
gs
xor
aas
mov
das
repnz
cmpsl
gs
stos
cli
pusha
sub
je
xchg
fdivrs
mov
stos
mov
sub
mov
stos
call
or
dec
out
mov
jno
dec
ret
div
sub
mov
pop
jp
xchg
decb
xor
jne
insb
dec
or
xor
shlb
jb
sub
mov
jmp
sbb
xchg
xor
cld
shrl
pusha
push
jne
pop
xchg
lret
enter
idivb
xchg
pop
jg
mov
outsl
inc
sbb
pop
push
cwtl
mov
xor
push
cmp
or
pop
ret
inc
jp
mov
pop
aaa
loop
push
xchg
jo
dec
mov
iret
mov
cmc
pop
fwait
mov
or
daa
shrl
in
test
scas
in
jecxz
ja
xorl
jmp
clc
out
lahf
dec
xor
push
lret
in
push
adc
pop
lret
imul
jmp
inc
xor
mov
pop
int
adc
pop
dec
fs
maxps
xor
test
cmpsl
cld
xor
bnd
negb
in
fucomip
mov
fs
mov
jecxz
sbbb
jg
dec
mov
cltd
sub
enter
xor
dec
outsl
jnp
cmpb
xlat
sub
mov
jg
movsb
jmp
sub
mov
aas
fwait
push
shl
and
mov
test
mov
pushf
add
push
jmp
outsl
daa
cmp
jne
mov
mov
out
sbb
sub
jbe
cmpsb
into
mov
into
sub
xchg
pop
shrl
xor
iret
je
xchg
pop
pop
mov
out
out
xchg
mov
sub
stos
inc
shrl
sbbl
xor
pop
mov
or
enter
mov
mov
xorl
xchg
outsl
in
and
stos
pop
inc
inc
fsubl
aas
ficoml
add
xor
scas
push
cmpsl
sbbl
addr16
or
stos
and
in
out
sub
xchg
xchg
iret
mov
call
push
out
mov
nop
mov
xor
js
insb
js
jmp
xor
les
push
sahf
sub
dec
insb
mov
sbb
xlat
jnp
dec
push
sar
mov
cmp
or
jmp
cmp
inc
jo
push
movsl
cmp
lods
or
add
pop
aas
inc
jne
mov
out
ds
push
dec
pop
ljmp
hlt
xchg
neg
out
cmpsb
mov
shrl
aam
adc
push
pop
rorl
les
dec
or
mov
and
push
loop
mov
or
or
xor
mov
fnstcw
les
nop
jne
sub
push
xor
shlb
outsb
fsubl
dec
loope
dec
ret
lock
addb
inc
roll
sbb
ret
imul
adc
ss
xchg
mov
sub
inc
adc
ja
cld
mov
pop
mov
out
xchg
aam
xor
stos
mov
push
adc
inc
push
xchg
dec
add
xchg
and
cmp
xor
stos
add
inc
lret
fsubs
sub
les
lret
mov
push
cltd
add
mov
adc
xchg
cwtl
out
dec
cmp
outsl
mov
nop
std
push
orl
aam
dec
test
pop
ds
insb
test
sbb
pushf
adc
stos
ret
add
mov
mov
fs
xchg
lock
aas
stos
push
xchg
mov
dec
jmp
in
mov
push
cwtl
in
in
test
push
lods
jbe
jle
push
bswap
pop
mov
int
push
adc
jle
fs
cmpsb
lods
fsubs
sti
jg
shr
cmp
add
mov
gs
or
test
push
inc
cwtl
pop
push
loope
jb
pusha
push
jl
outsl
aam
int
or
sbb
sahf
sbbl
in
cmp
jp
and
shll
imul
and
test
fisubs
mov
mov
jmp
ret
xchg
mov
lods
sbb
je
movsb
dec
adc
mov
and
xor
out
pop
and
outsb
stc
cmp
mov
or
and
cmc
adc
subl
outsb
pop
or
fists
hlt
arpl
lods
jecxz
jns
sbb
mov
int
in
adc
addr16
aas
out
and
dec
jle
popa
out
rorl
lock
jns
mov
ret
call
ss
subb
inc
pop
scas
push
push
aad
xor
fadd
cmp
push
vpsraw
in
fwait
sbb
lret
mov
stos
ret
rorb
push
inc
cmp
cmpsb
fcmovb
in
mov
mov
push
addr16
mov
repnz
daa
adc
or
xchg
mov
sbb
mov
pop
lock
pop
leave
mov
int3
jo
ss
sub
sub
adc
xchg
adc
and
out
sbb
enter
jbe
std
scas
ds
leave
jo
fstpl
inc
stos
inc
pop
lods
sti
into
in
ja
in
xor
test
imul
lret
data16
xor
lret
js
data16
push
mov
jecxz
jecxz
mov
or
or
sub
or
inc
cmc
push
mov
pop
push
pop
mov
push
jp
mov
push
lock
inc
push
push
push
add
test
or
dec
icebp
ja
lds
ja
rorl
mov
sub
inc
inc
ror
pop
mov
fdivl
mov
and
and
xchg
out
push
inc
sti
outsb
ret
test
pop
cmovg
stos
pop
pop
sbb
pop
jno
ljmp
fs
icebp
and
les
andl
popf
xchg
push
popa
adc
mov
scas
sbb
shl
sbb
cmp
add
cmp
xor
dec
hlt
clc
xchg
inc
test
aas
scas
cmp
aam
movsl
in
insl
dec
lahf
dec
inc
pusha
aaa
xor
cs
stos
enter
mov
jae
in
idivl
loop
inc
pop
cwtl
xchg
call
sub
dec
mov
outsb
lods
sub
in
or
test
push
adc
aam
fsubs
push
sub
in
arpl
out
das
mov
ja
repz
push
sub
stc
sub
iret
mov
ljmp
inc
sarl
call
test
mov
push
into
dec
leave
mov
mov
les
sar
adc
mov
movsl
or
int
xor
dec
nop
andl
pop
pushf
lcall
inc
jnp
cmp
jge
nop
add
inc
jnp
test
jnp
je
arpl
mov
scas
sbb
rol
xchg
jmp
gs
mov
test
test
in
xchg
push
cmpsl
and
lock
sarb
jo
sbb
sti
or
jmp
loopne
repz
fsubrl
fstpt
test
sub
pop
call
ja
mov
mov
xor
cwtl
pop
lods
shlb
xchg
mov
jb
sti
jbe
dec
hlt
out
pushf
in
add
mov
mov
std
clc
adcb
sbb
pushf
pushf
scas
pop
cmp
in
mov
leave
loope
mov
bound
scas
mov
test
mov
push
ret
or
scas
push
repnz
cld
aad
add
lcall
sbb
aam
rcrl
cmp
lock
frstor
jae
push
mov
sbb
mov
sbb
pop
int3
mov
inc
sbb
js
mov
xchg
cmp
lret
push
mov
push
rorb
mov
shr
int
loop
aad
icebp
adc
mov
je
xor
push
sbb
andl
aam
ficompl
adc
imul
mov
add
outsl
add
cmp
xor
xor
es
and
mov
xlat
jp
xchg
fdivrs
sub
dec
mov
scas
xchg
pushf
loop
sbb
or
dec
adc
out
mov
add
xchg
push
cmc
lea
dec
lcall
loope
mov
ja
out
adc
imul
mov
in
icebp
add
repz
jmp
jbe
mov
enter
push
cmp
outsb
push
rcrb
mov
test
int3
shlb
stos
sub
xor
add
and
mov
jle
mov
into
mov
push
jns
jge
lahf
popa
sbb
xor
lock
lahf
fnstenv
and
icebp
cmp
inc
out
inc
inc
and
into
lods
fiaddl
loopne
mov
fistps
inc
mov
mov
pop
sahf
mov
push
add
xchg
insl
lss
cmc
cmpsb
jecxz
cmpsb
iret
jp
pushl
and
inc
push
pop
pop
es
xchg
cmp
cmpsb
sub
sub
cmpsl
xlat
push
lods
rcrb
lock
movsb
fidivrs
push
and
jne
xor
jno
lret
sbb
test
push
repz
adc
and
pop
fbstp
lret
fists
notb
pop
repz
push
mov
mov
mov
jnp
adc
and
jg
test
loopne
in
es
iret
or
movsl
jmp
nop
loope
or
lea
push
sub
orb
jae
loop
push
jne
cmp
stos
daa
or
jp
add
xchg
mov
test
cmp
jnp
ss
in
nop
scas
mov
lahf
sbb
mov
loopne
dec
xchg
in
sub
sbb
mov
add
out
xor
insl
mov
mov
movsl
jg
clc
divl
adc
cmp
xchg
inc
fists
pop
lods
xchg
inc
outsl
sub
push
xchg
inc
fcomps
cmp
and
roll
push
adc
pop
ja
xchg
and
hlt
sub
sbb
mov
jle
sbb
and
or
jle
inc
or
stc
add
adc
int
sbb
mov
movsb
and
test
stos
ds
or
fldln2
dec
je
ret
mov
test
cmpsl
setge
sbb
sbb
sbb
mov
fisttpl
into
daa
data16
lret
les
movsl
pop
imul
fcoms
pop
sti
add
pop
mov
inc
push
movsl
pop
into
adc
mov
outsb
test
enter
hlt
mov
pushf
mov
lods
xchg
je
mov
jno
or
jns
hlt
or
pop
aaa
leave
leave
push
ret
push
jmp
sbbl
xchg
and
sbb
cmc
cmp
mov
jne
xor
and
inc
cmpsl
xchg
mov
cwtl
pop
push
mov
jmp
aam
movsw
leave
iret
or
aas
mov
mov
or
cwtl
dec
xchg
aas
xchg
fisttps
jl
in
fadds
aam
xlat
mov
pop
into
repnz
fidivs
in
pop
add
sbb
mov
mov
incb
fs
pop
ja
dec
add
in
and
push
cmp
push
out
ja
out
leave
gs
popf
jl
xlat
and
lahf
and
xchg
xchg
mov
ficoms
jg
sub
or
push
in
movsl
rorl
xchg
cmpb
xor
insb
fucomp
int3
sbb
cwtl
or
lret
imul
das
nop
sbb
outsb
popa
xchg
push
add
jo
shll
mov
cmp
ja
dec
setnp
mov
cmpsl
jle
jl
lret
cmpsb
movsb
pop
lret
mov
stos
mov
mov
ret
mov
xor
pop
mov
cwtl
imul
aam
gs
ret
leave
xor
dec
push
xor
xchg
repnz
adc
mov
stc
adc
sarl
mov
pop
popf
repnz
outsb
sbb
imul
popa
fldl
repz
pop
dec
mov
lcall
pop
imul
inc
and
mov
inc
cwtl
fisttps
add
add
or
aas
or
pop
das
pop
out
out
mov
nop
js
add
push
push
cli
sbb
adc
loopne
imul
int
rorl
out
out
jb
mov
dec
test
cmp
es
std
xlat
in
xchg
mov
test
imul
out
mov
adc
or
ss
adcb
push
push
popf
jge
test
fwait
dec
push
xchg
es
rorl
and
insl
xchg
js
fsubrs
lret
int3
in
test
sub
ljmp
fdivrs
loope
inc
xchg
mov
sbb
pop
mov
outsl
leave
mov
jnp
and
mov
mov
out
inc
adc
movsb
jmp
insb
cld
dec
movsl
js
lods
popa
arpl
xorb
test
shlb
repnz
push
mov
adc
push
dec
insb
outsb
fwait
jnp
jne
adc
idivl
push
rorl
sub
and
out
cmpl
mov
cmp
fsubs
cmp
out
rol
aad
fnstenv
cmp
clc
and
or
test
leave
cmp
inc
sahf
jl
jp
jne
xchg
ljmp
mov
pop
push
inc
sarl
mov
rcll
rcrl
inc
shl
sbb
or
dec
mov
std
arpl
scas
push
fsts
rclb
out
xchg
and
sub
scas
in
or
cmp
fistl
sub
mov
mov
xor
fsubrs
adc
in
cmp
pushf
mul
mov
add
xchg
sbb
rcl
clc
push
enter
shlb
cwtl
inc
enter
pop
movsb
adc
stc
jne
dec
shll
rcrl
sub
xchg
push
call
scas
inc
filds
lahf
inc
mov
mov
jne
mov
sub
jp
pop
clc
and
fs
sbb
fcmovbe
insl
push
lret
mov
js
push
and
xchg
sub
mov
roll
xchg
pop
push
pop
leave
lret
sbb
inc
mov
in
adc
outsb
push
filds
out
inc
stos
pop
nop
add
fsub
pop
mov
aam
orl
sub
push
shlb
mov
pmaddwd
in
movsb
aam
adcl
push
cwtl
loop
mov
add
jae
arpl
mov
xor
xchg
sub
cmp
jae
sub
fnstsw
mov
cmp
int
shrl
xchg
inc
mov
stos
movsb
mov
ljmp
inc
pop
leave
aaa
in
jmp
mul
inc
hlt
lods
fstl
ja
push
ja
ja
lods
pop
sbb
in
sbbl
jbe
bound
and
mov
negl
inc
enter
mov
mov
sub
leave
out
shll
sbbl
mov
cmp
insb
push
pop
dec
cltd
adc
xor
js,pn
push
push
mov
daa
sbb
rcr
je
add
jecxz
mov
into
popf
nop
int
push
jecxz
lods
inc
and
inc
mov
dec
dec
lcall
push
push
ror
add
push
ror
xor
jl
stos
or
pushf
xchg
adc
pop
xchg
push
mov
gs
fdivrs
test
cmp
add
mov
jmp
mov
sub
xlat
and
mov
push
ret
fisubrl
lds
push
cmp
in
outsb
mov
cwtl
fstpl
in
cmpsl
lods
fwait
xchg
nop
fistpl
ja
ret
inc
imul
adc
addr16
pop
das
jmp
aas
add
into
js
pop
jmp
scas
pushf
dec
sbb
dec
rol
or
sbb
mov
push
mov
sbb
inc
pop
mov
mov
and
dec
add
xlat
scas
pusha
fucomi
in
leave
testl
cmp
xchg
arpl
aaa
dec
jmp
daa
sbb
inc
ss
movsb
call
sub
mov
mov
xor
in
inc
inc
adc
mov
cmp
icebp
mov
dec
adc
jae
loope
leave
pop
adc
inc
mov
mov
stos
xor
fcomip
adc
cmp
xor
xchg
jmp
fisubs
jle
test
push
test
inc
ficoml
push
xor
jno
push
xorl
je
cmp
repz
sbbl
mov
pop
mov
adc
out
popa
loopne
das
jl
clc
fwait
xchg
mov
mov
xchg
lea
in
sti
push
aaa
cmp
push
clc
push
pop
mov
push
in
jae
push
jb
shll
jae
cld
push
push
rcll
clc
fucomi
popf
pushf
cmp
fcomps
pop
pushf
cmpsl
jp
sbb
cmpsl
dec
jno
mov
scas
ljmp
daa
arpl
cwtl
fisttpl
cmp
movsb
icebp
xor
repnz
and
nop
icebp
outsb
and
pop
sub
mov
pushf
inc
loop
adc
or
xchg
xor
repz
bound
mov
and
add
lret
sub
push
aam
push
in
jne
push
xor
xchg
mov
aas
call
dec
ret
stos
xor
std
and
test
xor
insb
sbb
cmpsb
test
arpl
push
jo
shlb
push
leave
idivb
inc
fisttps
cmp
fnstenv
jns
loopne
xchg
xchg
cmp
lahf
mov
femms
push
shl
mov
ret
call
sbb
push
inc
pop
ficoml
imul
ficomps
leave
jno
sbb
sub
lret
lcall
push
repnz
hlt
pop
enter
leave
xorl
mov
std
mov
mov
in
cwtl
inc
leave
out
test
dec
insl
push
inc
in
pop
xchg
int3
je
popa
scas
cmp
push
xchg
ljmp
imul
imul
xchg
mov
add
xor
out
loop
sbb
sti
mov
loopne
push
dec
xchg
jp
out
push
jecxz
cmp
out
pushf
test
imul
sbb
movsl
movb
lds
sub
std
xchg
sub
inc
pop
xor
mov
pop
jp
aam
cmp
adc
mov
dec
mov
push
es
mov
fistpll
ret
push
dec
pop
push
insb
outsl
jge
shlb
test
cli
adc
add
pop
shll
mov
sbb
aad
imul
and
fdivrs
push
inc
jge
sti
cmp
movl
mov
divl
inc
mov
adc
rorl
int3
push
notb
xchg
mov
dec
mov
cwtl
hlt
dec
ret
and
aad
ffreep
xchg
sarb
dec
add
xchg
es
cmp
lods
jecxz
jno,pt
jp
out
lahf
nop
add
enter
iret
outsl
aas
stos
pop
push
daa
je
fisubs
icebp
cmpsb
mov
inc
insb
mov
enter
mov
push
leave
cs
inc
inc
es
inc
pop
loope
mov
xor
es
mov
push
arpl
mov
xor
xor
xchg
cld
mov
jl
xlat
out
aaa
icebp
jns
in
repz
out
and
xlat
lahf
sbb
ds
fsubrs
or
jbe
jnp
sub
out
xchg
aas
aad
sbb
fisubs
dec
xor
cld
push
or
jmp
popf
adc
call
andl
pop
cmp
add
icebp
mov
pop
add
aad
cltd
rcr
mov
mov
frstor
jo
insb
push
adc
ss
iret
cmovb
pop
mov
pop
repz
sbb
sbb
adc
inc
cli
push
in
add
xor
add
pop
mov
mov
mov
roll
adc
adc
cwtl
jnp
lock
add
xchg
push
das
sbb
mov
test
mov
sbbb
lret
int3
xor
mov
xchg
scas
aam
mov
sub
mov
data16
sub
mov
ret
test
jg
fnstenv
add
mov
dec
mov
xchg
jle
outsb
push
push
cltd
shlb
mov
dec
jp
or
pop
push
sbb
ljmp
mov
fcmovnbe
popf
mov
mov
pop
xchg
pop
lret
cwtl
hlt
fisttpll
jae
or
or
cmp
xor
test
inc
and
pop
les
sahf
out
inc
std
test
ss
pop
iret
mov
or
pop
divl
inc
mov
dec
inc
sbb
std
notb
inc
and
test
sub
cmp
xchg
mov
push
mov
sub
cmpsb
fnstenv
in
xchg
cmpsl
int
insb
repz
jp
pop
xchg
jae
mov
fbstp
add
adc
jo
es
jmp
int3
and
inc
push
lcall
repz
scas
pop
jg
js
push
imul
sbb
aas
dec
mov
movb
es
dec
repnz
out
addr16
cmp
repz
movsb
data16
mov
xchg
ljmp
repnz
sahf
idivb
or
push
dec
add
out
pop
mov
add
xchg
sbb
lret
fnsave
mov
dec
push
dec
js
dec
cmpsb
clc
repz
pop
mov
ficoms
aam
je
lods
sbb
sti
cmp
lods
stos
andl
mov
sarl
je
mov
push
out
xor
ret
cmp
mov
mov
add
ficoms
lahf
shl
mov
lret
mov
jl
pop
cmpsl
imul
fistpll
add
add
ss
add
xor
dec
jns
clc
mov
aaa
sbb
into
in
cwtl
dec
movsl
mov
icebp
or
lcall
xor
push
rorl
sti
jo
xor
clc
jnp
cmp
ret
mov
mov
jno
xor
and
dec
mov
sbb
scas
jno
clc
sub
sbb
cmp
dec
jbe
stos
shlb
mov
lods
pop
pop
repnz
insb
in
insb
sbbl
pop
jg
sbb
jge
cmp
cmp
and
push
cli
inc
cmp
std
push
mov
add
icebp
jns
push
sbb
push
pop
inc
xchg
arpl
sti
add
lock
lret
testb
repnz
lods
dec
adc
jmp
xor
je
xor
cmp
xor
jae
mov
push
sub
mov
xchg
call
cld
xchg
cmc
mov
mov
pop
mov
popa
fwait
nop
in
or
pop
dec
andl
scas
pushf
sahf
adc
rol
pop
inc
push
push
fdivs
dec
xchg
aad
insl
push
inc
cmp
call
sbb
push
sbb
xchg
lock
movsl
add
jl
mov
add
sbb
xchg
es
xchg
aam
loopne
cs
je
cmc
mov
scas
addr16
push
jl
pop
ds
aas
jno
pop
push
fs
mov
ds
gs
cs
aas
test
cmp
rclb
cmp
sti
lds
cmp
ret
sarl
sub
pushf
cwtl
pop
out
sub
jg
mov
xor
add
or
pop
jmp
orb
adc
scas
sti
rclw
and
popf
mov
inc
shrl
xchg
fwait
add
stc
lock
or
xchg
cli
nop
adc
add
jle
int
fxtract
std
cs
inc
cmpsb
mov
xor
hlt
test
mov
xor
lods
shlb
je
push
mov
adc
push
dec
iret
pushf
scas
ss
iret
xor
xor
leave
fidivl
or
push
and
fs
cmc
xlat
shrl
movsl
mov
push
in
sub
outsb
mov
shlb
mov
and
sti
push
mov
loopne
icebp
inc
mov
mov
fcmovnu
icebp
movsb
scas
dec
pusha
mov
mov
mov
sub
adc
ljmp
add
xchg
out
push
loope
mov
sub
xor
aas
setl
hlt
insb
test
mov
fwait
and
xor
popa
and
or
mov
mov
mov
inc
insb
mov
push
rolb
mov
push
insl
lret
jbe
shrl
inc
push
or
sti
out
dec
repnz
aas
sti
adc
jle
lock
dec
sbbl
dec
push
ret
fsubr
add
in
mov
bound
shl
push
jmp
lods
mov
pop
jb
pop
test
or
hlt
xor
inc
lcall
xchg
cmp
icebp
int
data16
inc
fdivrs
sub
pop
pop
rcl
push
repz
pop
ss
pop
jmp
stc
aaa
dec
push
sub
dec
xor
push
shrb
adc
mov
aam
sub
add
pushf
fsts
lds
push
mov
xchg
push
arpl
cmp
shl
int
add
pop
push
loopne
fldcw
sub
cmp
insb
mov
cwtl
dec
push
cmp
mov
cwtl
bound
lods
out
mov
sbb
xlat
iret
mov
in
pop
mov
xchg
insl
std
test
aad
mov
add
movsl
into
xor
cld
enter
repnz
dec
xchg
cld
sbb
stc
add
stos
or
call
loop
push
mov
add
cmp
addl
xchg
faddl
push
adc
je
das
sub
sbb
jae
inc
push
xchg
and
mov
cmp
jg
lea
jg
negb
stc
iret
mov
out
dec
popf
or
mov
mov
lret
popa
test
push
mov
fisubrs
in
bound
or
test
mov
push
andb
adc
sub
sbb
int
ret
adcb
movsl
daa
jp
inc
ret
lret
mov
inc
stos
pop
adc
push
repnz
or
daa
xor
sub
fistpll
movsl
aaa
aad
mov
scas
dec
add
push
mov
push
inc
sbb
mov
adc
sbb
int3
cli
jns
daa
aaa
and
rorb
fcoml
dec
inc
pop
push
insl
rolb
cmc
jge
movsb
mov
xchg
dec
out
js
sti
sbb
or
data16
push
pusha
xlat
repnz
lea
jp
push
out
adcb
pop
int3
jl
popa
mov
test
das
sti
out
add
or
sbb
sub
sub
fucom
xor
fnstenv
sbb
fdivrs
jo
hlt
mov
push
aas
sub
loop
jae
mov
push
jns
or
enter
mov
in
sbb
gs
xor
dec
fistl
pop
sarb
jp
lcall
stos
sub
fcmovne
aam
add
adc
lcall
pop
xchg
std
pop
out
rolb
adc
dec
sahf
repnz
xchg
cmp
mov
lret
sbb
cmpsl
and
sarl
dec
inc
rclb
inc
jmp
daa
cmp
ror
repnz
mov
pop
pop
add
sub
mov
in
pop
sub
pop
rcr
dec
lock
inc
pop
jle
inc
popa
push
inc
ret
sbb
fwait
roll
scas
testb
sbb
cli
jmp
imul
sti
fdiv
imul
loopne
shll
inc
or
scas
push
jnp
and
mov
or
dec
cltd
pop
subl
xchg
add
xor
jno
mov
cmpsb
roll
jbe
outsl
jne
jmp
mov
and
mov
mov
mov
cmp
add
shlb
loop
adc
pop
xchg
ds
daa
xor
jl
add
jnp
inc
sahf
cmp
mov
or
cmp
addr16
jae
lahf
movsb
dec
hlt
jae
stos
sub
add
xor
push
xchg
dec
fdivs
xlat
sub
cs
daa
pop
jae
jns
idivb
jle
cmc
lock
push
adcl
stc
pop
fwait
rorb
push
xchg
dec
pop
lcall
jae
jb
jmp
lcall
pop
enter
push
sbb
fidivl
lahf
push
popl
mov
and
ds
push
push
push
xor
out
divb
mov
pop
and
test
pop
pop
adc
cltd
fcmovnbe
cld
iret
popa
es
mov
shl
or
cmp
pop
add
stos
loop
pop
jle
scas
nop
ret
and
adc
pop
inc
pop
fcoms
xlat
sbb
andl
stc
mov
movsl
sbb
outsb
bound
add
adc
fs
scas
pop
xlat
sub
jp
imul
ficoml
push
mov
mov
add
rorl
push
rcll
ja
adc
mov
int
sub
andl
dec
adcl
and
cmp
jmp
bound
and
inc
out
rcrb
into
pushf
fists
aad
pushf
xchg
lods
jb
in
pop
mov
jb
cmp
sbb
sbb
in
mov
or
int3
cli
pushf
mov
xchg
jbe
jne
push
xchg
repz
mov
cmp
stos
add
push
mov
out
pop
sbb
hlt
cmpsl
out
cmp
sub
push
inc
xor
cmp
das
pushf
sub
and
mov
dec
loopne
inc
ficompl
and
ja
aaa
jno
je
mov
mov
mov
or
leave
inc
arpl
dec
mov
pop
popf
inc
lds
or
fisubrs
dec
push
mov
and
pop
test
pop
push
shll
out
icebp
test
cmpsb
xchg
mov
lock
lods
sub
sbb
xor
pushf
and
jnp
outsb
negb
pop
scas
mov
and
jmp
jge
sahf
cmp
pop
out
and
aas
push
jbe
adc
mov
adc
insb
orb
fs
aad
inc
and
xchg
mov
das
inc
and
and
in
sbb
xchg
and
imul
fucomi
mov
adc
pop
cmp
jns
dec
sbbb
dec
cwtl
test
and
xchg
fidivrl
mov
loop
adc
cmp
inc
adc
mov
sbb
stos
push
pop
sbb
or
stos
icebp
mov
notb
cwtl
fistl
clc
dec
in
outsl
push
push
aam
std
nop
test
es
add
mov
adc
sub
dec
cmp
popa
orb
add
repz
nop
pushf
and
repz
add
xlat
pusha
sub
push
dec
push
out
in
out
pop
dec
mov
xor
add
jo
shrb
fistps
jmp
int3
dec
aad
imul
lods
and
cmp
imul
add
push
mov
int3
lea
outsl
xor
hlt
and
jo
mov
dec
cmp
jmp
add
ret
sahf
lea
sbb
lcall
out
scas
jno
or
sbb
jns
cmpsb
sbb
add
cmp
fstenv
movsl
sub
ljmp
mov
insl
aaa
pusha
outsl
ficomps
push
push
mov
je
sbb
mov
inc
xchg
pop
pop
gs
xchg
outsb
int3
stos
daa
jecxz
lea
dec
fdivl
stos
xor
sbb
add
hlt
bnd
ret
jg
mov
shlb
sub
jmp
push
jo
cmp
add
imull
xor
and
add
sbb
jge
es
push
or
mov
in
mov
sub
shrb
push
mov
aas
imul
movsb
jbe
mov
loope
pop
push
dec
fdivrp
push
test
cld
inc
jbe
cld
mov
cltd
push
mov
mov
mov
pop
fsincos
xchg
push
movsb
mov
sub
sbb
push
pop
gs
arpl
cltd
repnz
inc
dec
inc
and
mov
cmp
lret
mov
adc
in
inc
jno
in
insl
xchg
adc
jae
enter
pop
scas
pminub
pusha
js
jp
cmp
push
insb
ss
cmp
arpl
stos
and
xchg
mov
repz
rcl
cmpsl
inc
sbb
push
lods
out
rolb
dec
pusha
add
out
cmp
sub
out
push
adc
ret
aas
in
and
mov
sti
cmpsl
inc
add
in
insb
rolb
cmpsb
mov
mov
sahf
lahf
bnd
cmc
stc
popf
aaa
cmp
adc
adc
cli
ficompl
push
mov
mov
cli
dec
es
jle
movl
repz
fldcw
push
cmp
in
jno
mov
sbb
mov
xor
insl
inc
pop
test
xor
dec
enter
adc
sti
je
inc
inc
or
loopne
clc
popl
inc
and
fs
dec
mov
add
mov
jle
sub
push
test
inc
jns
mov
sbb
fisubrs
movsb
popf
xchg
lahf
xlat
in
inc
outsl
aas
pop
test
out
movsb
nop
loop
aam
imul
xchg
popf
mov
sahf
cmpsl
enter
in
ss
sbb
push
in
xor
jne
insl
mov
xchg
data16
and
roll
pop
mov
push
adc
stc
gs
aam
das
dec
sub
inc
inc
aam
test
in
gs
inc
xchg
pop
sbb
inc
addb
jge
sbb
scas
mov
jp
popf
jae
xchg
xorb
test
out
orl
popf
repnz
fs
aad
lcall
es
mov
loope
cmp
daa
cmpsl
mul
inc
rcrb
shll
or
xchg
movaps
popa
test
adc
fnstenv
or
inc
test
test
sub
push
inc
sbb
in
out
xor
adcl
lret
mov
arpl
cmpsl
sub
repz
pop
pop
std
enter
inc
pop
xor
inc
push
fimuls
lcall
sub
sub
fwait
xor
and
add
ficompl
in
shlb
lds
push
jne
aaa
rolb
pop
lcall
cltd
icebp
daa
sub
adc
sub
add
arpl
fisubrs
jb
bound
out
ja
pop
mov
aam
add
shlb
js
fs
pop
rclb
mov
inc
mov
sbb
insl
sub
rcrb
jo
mov
es
pop
xchg
gs
int3
push
cltd
push
mov
fwait
icebp
test
cmpsb
imul
inc
shrl
jge
cmp
mov
dec
out
cltd
push
les
mov
cmp
dec
cmp
or
das
mov
test
or
ret
loopne
es
adc
addl
jbe
lret
jae
xchg
out
sbb
jmp
jb
mov
jmp
and
shll
out
pop
loope
push
gs
or
mov
aad
and
cmp
mov
and
jl
movsl
jns
push
mov
dec
inc
rorb
leave
mov
mov
sbb
call
xchg
int3
pusha
outsl
test
push
iret
js
rorl
push
xchg
sbb
into
push
jmp
insb
ja
xor
lds
push
dec
and
mov
insl
or
cwtl
insb
rcrl
loopne,pt
lret
or
packuswb
je
and
pop
in
dec
lock
loope
push
push
mov
dec
inc
mov
popa
sub
push
push
mov
ds
sti
push
inc
cs
dec
mov
adc
mov
inc
sbb
mov
jg
popf
fwait
pop
enter
jbe
cmc
xor
xchg
lds
leave
enter
sub
cmp
arpl
mov
lret
and
dec
pop
mov
loope
jne
les
insb
jle
out
je
jbe
inc
and
cmpsl
lods
cli
popa
mov
cmp
adc
and
stc
or
lcall
or
hlt
lock
pop
pop
fstps
cmpsl
xchg
ljmp
stc
cld
jp
inc
dec
push
mov
jns
test
jno
jbe
and
imul
out
mov
dec
mov
das
xchg
fsubrp
fsubs
jb
shrb
xchg
aas
dec
mov
fldcw
sub
mov
mov
les
jmp
push
push
int3
xchg
fcmove
mov
popf
fiaddl
cli
shrl
mov
mov
lret
repz
pop
shlb
mov
outsb
test
scas
cmp
jp
inc
cmp
jns
dec
xlat
scas
dec
into
push
or
pusha
sahf
leave
mov
in
xor
cli
and
mov
or
jmp
mov
pop
mov
jae
xor
mov
outsl
jo
jne
sbb
push
fimull
dec
pop
push
in
jo
sub
cmp
jb
adc
inc
and
or
sarb
add
ret
scas
test
lret
adc
cmp
inc
adc
push
testl
inc
cs
sbb
popa
mov
jne
mov
push
jae
jp
adc
mov
xchg
shl
mov
sbb
scas
negl
lods
jno
xor
jns
aam
mov
or
dec
inc
pusha
outsl
and
movups
insb
sti
mov
xor
mov
dec
xor
cltd
divb
lret
ficomps
sub
cli
dec
leave
and
add
imul
sub
adc
mov
stos
leave
insl
jecxz
inc
cmc
mov
ss
jecxz
jl
fimull
lret
repz
and
js
out
lods
mov
fsubs
or
lea
and
loope
or
add
out
into
fwait
mov
enter
ret
stos
cmp
inc
sbb
add
jo
cld
and
insl
sti
aaa
out
sbb
jecxz
mov
adc
inc
notb
jecxz
insl
lods
adc
mov
push
push
sbb
push
lock
cmp
in
std
stc
xchg
add
fldenv
sbb
mov
out
push
dec
cwtl
adc
dec
lret
pushf
popf
push
lret
xchg
sbb
push
dec
push
loope
adcl
lea
fsubs
mov
ror
adc
outsl
sbb
mov
mov
push
pop
bound
inc
pop
pop
shlb
adc
out
xchg
pop
fwait
mov
adcl
adc
dec
mov
loop
popf
in
test
sbb
int
inc
ret
adc
mov
push
push
push
push
and
cld
adc
call
lahf
inc
mov
cmp
xchg
or
push
dec
movsb
xor
fs
sbb
push
dec
mov
mov
or
aad
jmp
cvtdq2ps
mov
int3
jge
ss
aad
int3
je
pusha
lock
stos
jns
fldl
and
sbb
sub
movsl
fwait
jno
cwtl
inc
jo
outsl
mov
mov
fldcw
ret
pop
jmp
stos
inc
dec
jae
adcb
test
rcrl
cwtl
imul
lea
push
in
push
jbe
pop
push
lods
test
in
mov
sub
cmpb
adc
pushf
mov
or
and
push
sbb
push
jno
mov
insb
push
xchg
add
icebp
mov
fstps
test
outsb
sbb
dec
daa
and
jnp
xchg
loope
aad
fnstenv
fwait
push
jns,pt
and
cmp
cld
icebp
int3
sti
and
pusha
das
int3
xchg
addr16
ljmp
into
imul
fstpt
xor
iret
dec
cmp
daa
and
andl
xor
add
and
or
and
xchg
scas
je
fdivr
movsb
je
lcall
sub
mov
xchg
inc
dec
imul
dec
adc
adc
cmp
xor
pop
sub
mov
aas
mov
push
pop
mov
adc
add
add
mov
mov
shl
std
add
loop
mov
cmp
sbb
mov
icebp
mov
mov
leave
aad
in
test
cmpb
js
and
shlb
mov
xor
mov
sbb
xchg
adc
mulb
jns
mov
mov
not
xchg
cwtl
imul
and
add
or
popa
out
dec
jge
lods
push
mov
xchg
mull
and
pop
jne
out
pop
test
push
fsubrp
std
cmpsb
popa
ret
popa
sti
cwtl
sub
push
or
inc
pop
mov
ds
cmc
mov
jo
arpl
and
sub
icebp
fistpll
mov
notl
xchg
addl
aam
fldt
cmc
decb
in
dec
jb
out
mov
jp
or
iret
shr
mov
push
push
jno
or
in
sub
push
mov
push
sub
cmpb
test
jns
mov
add
xor
mov
xlat
mov
inc
mov
jns
arpl
leave
cmpsl
in
push
hlt
fildll
sbb
adc
push
popa
inc
insb
sbb
add
outsb
sub
mov
push
clc
fadds
fs
aad
cmpsb
adc
and
sbb
push
inc
mov
push
sub
inc
or
push
xor
jns
cmc
fwait
aam
mov
je
pop
sti
add
xchg
jmp
xchg
xchg
shrb
jmp
cwtl
push
sub
mov
jnp
xchg
leave
push
mov
stc
sub
push
fldcw
ds
xor
xor
movsl
mov
cli
mov
sub
pop
xchg
add
pop
xchg
mov
mov
adc
mov
cmpsb
jno
push
mov
sbb
inc
je
adc
ret
fmul
mov
push
in
imul
test
movl
push
mov
aam
pop
push
sub
pop
pop
add
repnz
cmp
stos
movsl
pop
jnp
mov
sub
cwtl
shrl
jle
push
cld
mov
cmp
add
mov
mov
push
push
add
xor
adc
mov
les
pop
lea
push
cmp
fsts
cmp
and
scas
adc
je
adc
inc
cmpxchg
cmpsb
mov
sub
rolb
mov
dec
xchg
and
mov
out
mov
adc
pop
inc
xchg
add
loope
fnstenv
and
sbb
mov
xchg
and
mov
pop
mov
es
scas
ljmp
mov
cmp
popf
and
push
sub
cmp
xor
sahf
shll
in
and
mov
sub
out
fucomip
push
fcoms
orl
dec
mov
push
sahf
test
mov
cmp
lds
icebp
xchg
ret
jno
mov
ds
add
jmp
int
push
sub
js
lcall
xor
loope
sub
mov
aas
xor
adc
xchg
loopne
or
lds
stc
outsb
fs
aad
inc
push
cmpsb
inc
mov
es
add
cwtl
adc
cmp
adc
push
adc
or
and
stc
rcll
iret
ljmp
sub
pop
mov
std
push
je
lds
mov
sbb
ficompl
mov
pop
cmp
push
or
insl
insb
fsubs
insb
inc
push
sub
sbb
inc
adc
pop
hlt
push
mov
daa
add
add
sub
adc
sbb
mov
outsb
inc
andb
roll
call
outsb
cmp
pop
jmp
mov
jbe
shlb
int3
test
ja
fst
jmp
sub
in
add
mov
ljmp
xchg
repnz
dec
pop
fdivr
outsb
inc
rol
sbb
mov
xor
ret
xchg
add
test
addr16
das
scas
clc
mov
inc
aas
pop
in
in
stos
pusha
push
xchg
xor
pop
idivb
subl
xchg
xchg
cmc
sarb
inc
xchg
jno
outsb
fcomi
mov
inc
jmp
lcall
std
dec
and
in
stc
inc
or
ret
mov
xchg
push
cmp
pop
pop
outsb
fs
mov
or
dec
sbb
mov
cmp
fwait
stos
ss
testb
xchg
mov
fbld
xchg
inc
mov
loop
jae
inc
aaa
fwait
xor
or
clc
or
adc
pop
adc
cmpsb
mov
ret
mov
lcall
addl
xchg
pop
push
loopne
adc
aad
jp
jg
mov
out
shr
sbb
fidivs
cmp
pop
push
pop
mov
sub
aad
shrb
loopne
outsl
addb
push
add
in
fwait
push
cld
stos
pop
mov
fisttps
int3
adc
dec
mov
xchg
ss
lods
adc
pop
fs
movsb
mov
or
pop
ret
jecxz
mov
out
ja
jno
and
push
jns
mov
jecxz
sbbl
or
and
push
imul
and
jp
shll
or
or
imul
push
mov
sub
in
pop
add
in
jne
enter
push
add
imul
insb
out
inc
xor
adc
clc
cmpsl
lds
mov
mov
imull
adc
out
push
pusha
inc
adc
mov
sbb
popf
sbb
pop
js
test
and
mov
rolb
in
adc
sbb
or
aam
inc
enter
cmp
repnz
dec
inc
and
pusha
xor
popf
jbe
xor
push
jmp
dec
dec
inc
cli
mov
and
aad
je
push
dec
adc
push
adc
sar
mov
mov
sbb
shl
dec
add
in
and
mov
clc
sahf
out
test
sar
pop
movb
ljmp
inc
movsb
sahf
iret
rolb
xchg
lods
mov
cli
test
adc
stos
fistpll
cmc
into
add
add
aad
in
fdivrs
and
das
xchg
sbb
je
mov
je
sbb
inc
in
test
shrb
nop
pop
dec
mov
mov
xor
popl
shl
sbb
in
in
stos
push
out
sub
or
dec
gs
dec
mov
jbe
sbb
leave
out
or
xchg
call
stos
enter
pop
xchg
inc
ficompl
push
in
in
push
push
inc
or
jo
leave
pushf
mov
mov
xorl
arpl
repz
fistpll
enter
in
mov
aaa
mov
inc
push
push
mull
shl
int
inc
rcll
sbb
push
and
cmp
xor
sub
cmpsb
pop
ret
cmp
mov
mov
mov
arpl
mov
jg
push
cld
shl
jp
addb
repnz
dec
mov
pop
lods
mov
lcall
imul
pop
sahf
sbb
xor
in
data16
in
int
jbe
cmc
lea
outsb
and
fcmovne
xor
push
ret
ds
std
push
mov
es
nop
loop
xchg
dec
fimull
icebp
cmp
cmpsl
ja
jo
inc
mov
cmp
sbb
loope
dec
out
jns
or
sbb
es
scas
cld
jl
test
and
mull
sub
stos
dec
into
inc
pop
popa
sub
mov
dec
popf
inc
movsl
aam
ret
or
movsl
xchg
pusha
lea
into
test
pushf
in
sub
lret
clc
test
jno
lods
jl
xchg
add
cltd
call
sbb
data16
test
inc
adc
icebp
add
and
loope
in
pop
mov
sti
inc
xchg
loopne
or
sbb
pop
and
shlb
test
mov
shrb
jne
pop
sub
sub
jg
adc
dec
push
fsubl
xchg
pushf
mov
outsl
adc
cmp
loope
push
pop
popf
fistpll
clc
int3
in
push
mov
fbld
mov
mov
sbbl
jge
xchg
inc
hlt
insb
mov
test
xor
js
cs
leave
or
push
outsl
xchg
push
push
xchg
test
push
test
inc
ds
and
dec
sbb
es
jp
das
jecxz
adc
mov
paddw
sub
insl
mov
adcl
popa
rcrl
mov
dec
cltd
test
sahf
lcall
clc
shrb
inc
fisubrl
xchg
jecxz
mov
mov
inc
fldl
fucomip
call
adc
aad
pop
jmp
js
roll
jne
loop
aad
inc
sbb
and
pop
mov
xchg
mov
push
cs
outsb
enter
out
test
rcrl
mov
lods
or
sub
fistps
and
cmpb
mov
xchg
sub
mov
ljmp
shr
push
dec
fadd
out
add
cmc
insl
cmpsl
js
ljmp
nop
or
pop
stc
fwait
cmp
into
cwtl
movsl
cld
ljmp
adc
xor
push
inc
insl
mov
and
inc
test
stos
adc
mov
mov
out
movsl
sbb
ja
testb
pop
lahf
data16
test
inc
dec
shll
inc
push
adc
ljmp
icebp
dec
testb
jg
ss
fldt
ret
push
test
int3
mov
adc
in
das
push
lret
lods
cmp
testl
stos
cmpb
xor
sbbl
pop
mov
popa
jns
xor
cmp
push
pop
mov
push
data16
adc
out
mov
lock
mov
punpckhwd
in
sub
xchg
fwait
push
ljmp
dec
stos
mov
lcall
fsubrl
sbb
into
xor
mov
jne
pop
push
adc
js
push
xchg
lods
jns
dec
sbb
dec
mov
mov
cmp
sbb
lcall
shlb
iret
adc
xor
les
sub
lods
aaa
das
rorb
mov
movl
aaa
loop
bound
mov
sbb
dec
dec
cltd
ffree
nop
jmp
bound
pop
dec
mov
ficompl
ret
pop
cmp
shlb
out
lock
sub
sbb
xlat
sarb
movsl
pop
pop
std
add
mov
mov
mov
or
push
mov
test
sbb
addl
or
lahf
cmp
push
stos
stos
pop
xchg
jl
jle
clc
lcall
ds
mov
ficoml
xor
mov
jno
or
or
mov
stos
int3
sbb
mov
shll
mov
emms
pop
mov
sti
pop
outsl
in
and
push
xchg
add
push
cmp
add
or
mov
jo
in
cli
sub
adc
insb
pushl
adc
mov
pop
dec
inc
pop
mov
add
bound
repz
mov
cmp
leave
inc
dec
dec
adc
lods
mov
xchg
cs
xor
out
dec
stc
xchg
pushf
mov
ds
add
cltd
xchg
sub
xor
pop
testl
ficomps
fstp
seto
cmpb
ljmp
cs
mov
loopne
cld
daa
mov
in
sub
andl
lret
mov
or
inc
in
mov
pop
cmp
jns
ljmp
sub
jno
stos
outsl
mov
test
stos
stos
mov
stos
mov
imul
lock
xor
xchg
mov
xchg
push
sub
test
or
outsl
rcll
jae
cs
mov
ja
out
cmp
xchg
out
cltd
add
roll
mov
mov
loop
test
and
dec
mov
inc
pop
inc
pop
xchg
dec
push
sub
adc
pop
scas
lcall
sub
fmull
subb
cmc
sbb
or
xor
arpl
mov
mov
jno
mov
mov
std
mov
insl
f2xm1
icebp
int3
xor
stos
outsl
lret
loop
adc
mov
ljmp
mov
insl
stos
aam
mov
pop
movsl
mov
sub
mov
fsubrl
xchg
ret
mov
mov
subb
lods
outsl
loopne
mov
xor
je
xorb
add
xchg
or
scas
jo
push
jnp
arpl
int
cmp
rep
xchg
mov
cmc
xchg
jmp
push
pop
cs
mov
ror
std
inc
xchg
mov
out
faddp
test
inc
pushf
fcomps
popf
fwait
add
cmp
cmp
adc
aaa
enter
scas
cmpl
into
jge
aam
mov
nop
jmp
ffree
icebp
andl
xor
pop
mov
xchg
xor
mov
or
insl
lock
bound
hlt
sbb
and
inc
add
or
cmc
cmp
push
pop
addr16
jmp
arpl
loopne
setne
call
pop
ficoml
ss
outsl
push
jg
or
movswl
mov
dec
outsl
or
push
push
jbe
push
xchg
fldt
fwait
inc
imul
dec
push
mov
in
pop
outsb
dec
cmp
pop
sub
mov
mov
and
fwait
dec
clc
aad
lods
into
xor
mov
lods
cmp
jno
ret
pop
mov
int3
std
sub
data16
scas
pop
adc
mov
fldl
push
mov
mov
loope
or
imul
addr16
stc
sbb
hlt
push
xchg
or
das
push
aam
dec
and
push
stos
mov
mov
sub
push
cmc
add
xchg
das
fisttps
cmp
rolb
mov
sub
mull
and
xchg
jbe
bound
test
std
shl
or
aam
fbstp
cmpsb
mov
mov
or
mov
decb
addr16
out
andl
test
in
jbe
int
push
dec
test
lret
lret
enter
icebp
jnp
call
xchg
popf
cwtl
leave
jae
andb
notb
mov
push
lcall
mov
aad
sarb
imul
push
ja
jmp
enter
icebp
lock
push
je
mov
das
frstor
add
sub
out
or
daa
outsl
or
cmp
pop
xchg
scas
push
mov
add
xchg
cmp
mov
xchg
int3
cmpsb
fadd
adc
sub
mov
xchg
js
mov
sub
dec
addr16
sbb
inc
test
in
fidivrl
daa
push
mov
push
push
mov
sti
repz
fistps
add
out
scas
pop
inc
pop
lret
add
in
movsb
pop
inc
fucomi
popa
lahf
mov
add
xor
insb
clc
adc
test
dec
inc
sbb
out
mov
shll
jne
cmp
popa
mov
ljmp
lahf
scas
mov
xorb
mov
divl
ss
cmp
ja
pop
sbb
push
push
popa
cmpsb
lock
in
pop
fwait
push
lods
push
stos
jne
xchg
mov
out
test
das
popa
sti
push
mov
mov
push
test
loopne
shrb
enter
popa
out
in
outsb
lret
and
lcall
pop
xchg
lcall
add
outsl
addr16
add
insl
mov
cmp
lahf
hlt
mov
xchg
cwtl
test
lea
addr16
sub
adc
dec
sbb
pop
fldt
addb
or
mov
in
adc
test
cmpsb
mov
or
cmp
and
fcomps
testb
add
inc
mov
lea
addl
movsb
roll
imul
out
icebp
push
push
pop
and
pop
push
decb
jmp
and
clc
xor
in
dec
cmpsb
mov
sbb
push
dec
fists
pop
or
or
pusha
sbb
repnz
push
cmpsl
mov
bound
data16
mov
cwtl
pop
lds
in
cmp
sbb
shrl
repz
and
sbbb
adc
arpl
cmp
test
dec
addl
cltd
jne
aas
cmc
adc
stos
sahf
or
rcr
jnp
outsl
lock
push
fisttps
mov
fdivs
dec
imul
adc
cmpsl
adc
mov
mulb
fidivrl
testl
xchg
push
push
mov
or
cld
xchg
push
cmpb
cmp
fcompl
in
adc
in
mov
push
stos
xlat
test
inc
shlb
pop
jb
xchg
mov
sub
icebp
aaa
sarb
aas
addb
fwait
pop
pop
sbb
outsl
std
in
jge
sub
xor
sbb
mov
out
mov
cmp
stc
and
movsb
das
sahf
inc
data16
sarb
fs
jmp
test
loope
pop
stos
dec
ljmp
and
movsl
mov
idivb
push
cmpsl
push
lock
and
push
shl
inc
repz
mov
sub
je
mov
das
jmp
shrl
jp
adc
das
mov
or
dec
inc
repnz
jne
cmpsl
ficompl
pop
ss
xchg
lock
push
shl
loop
pop
push
adc
sbb
xchg
jo
inc
cld
jo
ret
and
jb
dec
test
inc
mov
xchg
test
pop
popf
rcrb
imul
push
or
in
repz
fldcw
push
xor
xor
pop
sbb
imul
adc
mov
faddl
cmp
and
js
ds
jge
bound
gs
shll
xchg
jns
cmp
push
mov
movsb
pop
in
js
fidivrl
aad
add
adc
jp
mov
xlat
lods
fidivrl
lods
mov
sub
lret
pushf
push
lds
imul
clc
mov
and
sub
in
cmpsb
adc
jo
mov
xchg
push
popf
je
adc
xchg
aas
pop
xlat
or
pop
in
cmp
inc
fstps
ret
sahf
stos
xchg
push
mov
and
mov
int
xchg
pop
les
aam
aas
cmp
shll
add
sub
int3
add
mov
ror
pop
inc
aas
pushf
and
lods
in
scas
test
test
dec
mov
sub
popa
push
lock
rolb
rcr
mov
mov
sub
cltd
test
sbb
bound
jno,pt
ret
mov
mov
imul
mov
xor
mov
stc
in
adc
fisubs
inc
clc
data16
das
lret
dec
cmp
jg
jne
fwait
in
sbb
pop
cmpl
outsl
and
js
in
imul
stos
adc
jbe
jmp
jno
cmpsl
mov
lock
sbb
mov
sub
adc
outsl
bound
les
daa
icebp
and
mov
or
ja
fnstenv
sub
gs
lahf
add
push
jecxz
pusha
cmp
jg
inc
pop
push
icebp
jno
pushf
sbb
xchg
or
sub
mov
jb
lds
out
jmp
lods
shll
fdivp
and
sbb
mov
nop
loopne
dec
cmc
push
xor
dec
jae
js
xor
cmp
es
repz
imul
test
movsb
movb
sbb
mov
cmp
daa
movb
inc
hlt
loope
dec
mov
xor
xor
stos
push
cmp
or
fldenv
sbb
xor
lret
inc
cmc
ds
xlat
push
xchg
nop
mov
aas
cmp
rorl
idivl
loopne
xor
xchg
add
imul
xchg
jl
mov
mov
mov
jg
lea
or
ret
aas
mov
sub
jmp
aad
loopne
pop
xor
sbb
notb
mov
cwtl
mov
mov
mov
add
sbb
mov
mov
loop
pop
and
fdivl
jg
in
cwtl
call
mull
outsl
push
iret
add
push
lcall
out
cltd
sub
mov
les
xchg
adc
stos
hlt
cmp
sahf
push
jne
mov
ds
and
pop
arpl
pop
inc
xchg
add
or
xor
in
enter
mov
movsb
arpl
out
imul
fcomps
sbb
jg
rcll
sub
xchg
jnp
mov
fwait
rcr
out
pushf
lret
test
les
inc
mov
das
aas
pop
jns
jb
std
faddp
or
sbb
les
scas
jge
outsl
xchg
push
sahf
pop
in
mov
ret
ss
movsl
das
movsb
js
std
jl
lret
fstps
pusha
insb
testb
das
shl
xchg
xchg
cmp
jo
push
lds
test
add
dec
lods
adc
jl
push
or
jmp
in
cmp
add
rclb
ja
dec
insb
dec
stos
xchg
outsl
std
mov
push
mov
fisubl
jb
add
loop
push
nop
fs
in
xchg
xchg
sbb
push
add
scas
movsb
testl
inc
xor
mov
inc
adc
ficoms
add
sub
sub
xchg
js
or
inc
cmp
dec
ljmp
mov
les
xchg
or
cmp
std
aam
mov
repz
pop
repz
xor
ret
rcrl
lds
stos
sub
push
xchg
lds
mov
pop
jnp
mov
mov
popf
cwtl
fdivrl
int
pmullw
jb
out
pusha
lcall
mov
loop
sbb
xcrypt-ofb
cmpsl
sub
mov
int3
mov
aaa
fldt
enter
cmp
jge
jle
sub
xchg
and
or
xor
mov
sbb
pop
fdiv
jl
jg
enter
and
imul
jl
pop
pand
ljmp
test
mov
subl
push
nop
int3
mov
in
addl
add
push
cmpsl
in
cmc
inc
cwtl
mov
fwait
std
xchg
cltd
fcomps
aaa
cmpl
sti
mov
cmp
mov
roll
rclb
dec
mov
arpl
aam
or
dec
xorl
imul
or
popf
add
push
lcall
movl
cmc
push
test
inc
out
insb
insl
xchg
in
mov
jg
and
jnp
fidivl
outsb
mov
imul
add
jmp
jg
sub
outsb
test
mov
ja
jo
daa
cs
movsl
xchg
push
mov
notb
lods
mov
mov
lods
cwtl
inc
stc
ss
dec
dec
sahf
jbe
or
jle
rclb
or
testb
pop
and
adc
data16
fwait
jge
mov
inc
sbb
rclb
inc
jbe
or
popf
xchg
and
sbb
in
lret
out
dec
mov
scas
cmp
ljmp
xor
jnp
dec
arpl
xchg
lock
lahf
jno
icebp
mov
repz
out
mov
roll
test
iret
push
popa
dec
push
jg
and
test
std
pop
out
icebp
mov
push
pushf
adc
ja,pn
mov
mov
push
push
test
iret
and
mov
jle
cmp
lock
pop
mov
in
mov
mov
sbb
mov
loop
std
push
lret
inc
enter
mov
xchg
jp
push
and
jbe
scas
and
stos
aam
jge
mov
addl
mov
fildl
test
push
sbbb
mov
mov
dec
mov
inc
aas
mov
lcall
add
je
push
int
loope,pn
mov
cmp
fwait
out
movsb
push
adc
mov
pop
xchg
push
int3
mov
mov
les
push
pop
insb
push
out
jb
movsb
sbb
push
ja
arpl
mov
fistpll
mov
xchg
call
mov
add
loop
and
xchg
push
cmp
sub
mov
cwtl
idivl
and
fisubl
xor
xchg
icebp
xor
sbb
test
ret
out
repz
xchg
xor
push
xor
add
std
fmuls
repnz
fistl
add
jecxz
mov
pop
push
push
xchg
sbb
lret
popf
inc
mov
pop
cwtl
or
inc
and
adc
movsb
iret
mov
or
mov
out
cmp
cs
sbb
loop
cmpsb
push
sahf
push
fbstp
xchg
loop
lods
xor
std
push
mov
hlt
xor
and
pop
xchg
dec
fsts
cmp
pop
cmc
addr16
dec
xchg
push
cltd
out
sti
ja
mov
add
stos
scas
mov
lahf
push
fadd
fmul
cmp
push
orl
cmpsb
xor
xor
fcoms
bound
fdivrs
jg
sti
hlt
mov
jl
adc
jmp
or
fs
in
adc
adc
pop
outsl
lret
into
or
sbb
ret
cmp
stos
mov
or
or
bound
cmp
sub
fucomp
cld
push
lds
xchg
ljmp
test
mov
mov
mov
imul
mov
pop
popa
test
fnstenv
andl
test
pop
fwait
rcrl
loopne
insl
lods
fisubl
add
les
dec
sub
rcll
push
loope
cwtl
sbb
sahf
in
inc
addr16
movsb
push
push
xlat
int
faddl
adc
ja
aad
or
rol
in
adc
imul
adc
cmc
jp
or
xor
xchg
push
scas
aam
jmp
test
fstpt
jmp
adc
leave
leave
out
sub
mov
xchg
fsubrl
es
mov
sti
fistpl
jmp
mov
or
xchg
cmc
mov
mov
or
mov
and
jmp
xor
inc
push
out
shlb
inc
lods
jle
scas
cmp
or
mov
andl
clc
or
in
lods
lock
je
dec
pop
xchg
lcall
fisubs
mov
pop
add
enter
xlat
insl
stc
mov
fnstenv
jnp
cmp
addr16
std
int3
jmp
inc
jecxz
adc
mov
xchg
or
push
in
mov
push
lods
and
cmc
push
lret
pop
pop
push
add
loope
mov
or
inc
pop
inc
jmp
push
pop
scas
inc
addb
sub
sarb
inc
mov
cmp
dec
dec
mov
hlt
das
xchg
jecxz
mov
cmp
dec
sub
ret
inc
lods
mov
jmp
testl
inc
fmull
pusha
cmp
xchg
fisttpl
outsb
cmpsl
repz
fs
fsts
xchg
add
push
adc
test
and
and
gs
stos
mov
push
mov
adc
lahf
pusha
sub
idiv
dec
in
ds
daa
outsb
movd
inc
test
add
mov
push
icebp
insl
xchg
call
cli
inc
push
jae
loop
and
nop
xor
popa
sub
push
mov
pusha
sbb
aad
les
dec
sbb
in
push
outsl
stc
jnp
push
scas
imul
or
inc
and
xchg
test
xchg
xchg
mov
fs
movsb
outsl
jmp
add
sub
mov
adc
xchg
jle
inc
push
cmp
lock
mov
les
push
bound
pop
jae
sub
test
lret
push
ss
sarb
dec
movsb
xchg
mov
lret
aam
data16
insl
aas
cltd
sbb
stos
mov
iret
sub
push
pop
dec
cmp
lret
movl
sbb
in
fcoms
jecxz
test
mov
icebp
cmp
mov
cmp
dec
or
jle
aad
aas
test
nop
mov
sahf
push
hlt
jns
repnz
into
or
push
adc
fsubs
mov
int
pop
jne
sub
push
mov
in
test
adc
push
jae
in
mov
arpl
mov
cmpsb
fsubrp
dec
aas
adc
pop
int
cmc
loope
scas
inc
lret
sbbb
aas
or
dec
inc
and
jae
es
cmp
rorb
or
daa
orb
out
dec
fsts
pop
xchg
and
cld
cmp
or
sub
subb
sti
jnp
pop
insb
inc
add
popf
sbb
rclb
ljmp
mov
gs
adc
sbb
cmp
in
or
es
mov
push
dec
mov
sbb
pop
arpl
cmpsl
cwtl
xchg
sub
push
aas
jb
lea
lret
cmp
mov
mov
ja
sub
leave
aas
in
jmp
dec
lods
outsl
subl
cmp
pop
nop
ds
mov
jnp
dec
std
lahf
fwait
int3
negl
xchg
and
fisubl
mov
cmp
dec
out
aaa
iret
sahf
out
mov
fisubrs
fdivr
ja
dec
jecxz
loop
mov
mov
and
xor
sbb
pop
sub
mov
or
cmpsb
mov
and
adc
leave
pop
xor
cmp
sub
cmp
int3
testb
dec
pop
loop
clc
ret
xor
std
inc
adc
mov
mov
ret
int3
loope
sbb
fildll
orb
pop
int
sub
xchg
in
sbb
shrb
test
jg
imul
xchg
dec
out
mov
insb
add
cld
inc
adc
lods
subl
dec
or
sbb
push
xor
shlb
jb
sahf
pop
mov
sbb
stc
jne
cmp
jne
dec
icebp
jecxz
jg
dec
fs
mov
cmp
xor
imul
ljmp
xor
or
jns
pop
outsb
adc
adc
mov
cmp
sahf
aad
add
enter
mov
out
in
loope
imul
jg
xchg
inc
loop
push
mov
je
loop
ss
data16
add
add
sbbl
cmpb
fistps
loop
out
js
repz
dec
inc
xchg
jbe
cmp
sahf
inc
mov
sub
jl
push
xchg
pop
out
cmp
cmp
xchg
in
xor
shll
lret
out
inc
imul
cmp
adc
pop
adc
fists
and
subb
ljmp
sub
popf
jbe
int
scas
stos
in
xor
into
ja
mov
subb
das
and
inc
shrl
push
insl
cmpsl
inc
lcall
stos
test
in
push
mov
jne
lcall
adc
popa
cmp
or
xchg
mov
sahf
outsl
ljmp
dec
mov
and
in
enter
adc
lcall
xchg
aaa
jb
xorl
fldt
sub
ret
dec
stos
lcall
ret
dec
lods
out
cmp
mov
jge
sti
out
or
fnstcw
loop
jne
outsl
sahf
testl
jno
insl
push
pop
mov
divb
pop
dec
sarb
inc
inc
ret
xchg
push
sahf
xor
inc
jns
add
sbb
movsb
add
push
cmp
jg
sbb
stc
mov
test
and
insb
in
arpl
scas
push
add
cmc
jne
add
clc
add
aad
cltd
xchg
iret
das
das
xchg
xchg
xor
inc
xor
adc
dec
dec
and
adc
adc
or
mov
mov
insb
xchg
push
pop
addr16
xor
sbb
lcall
mov
fisttpll
and
mov
call
xlat
test
pushf
and
mov
movsl
mov
js
in
out
scas
in
or
cmpsb
stos
iret
or
mov
in
sbb
mov
call
aam
cmc
sub
jmp
sbbl
outsl
jecxz
mov
sbb
subl
inc
push
rorb
xchg
lds
hlt
push
mov
mov
pop
addr16
out
imul
insl
das
jp
mov
pusha
cli
add
mov
push
scas
pop
mov
xor
pop
push
jnp
addl
xchg
cld
sahf
stos
cld
add
cs
es
ja
add
mov
les
jnp
jmp
dec
ret
xor
add
rcrb
int
jmp
pop
outsl
cmp
int
out
movsb
push
add
pop
aaa
xor
data16
inc
cmpsb
testl
or
cmp
jnp
push
arpl
arpl
clc
test
icebp
mov
cmp
test
stos
scas
xor
insl
std
ficoml
xchg
sbb
adc
or
push
scas
data16
ficoml
cmp
in
xchg
cmc
ss
pop
xor
add
in
adc
mov
sbb
pusha
cwtl
cmp
sbb
gs
ja
jne
and
mov
dec
repnz
adc
movsb
test
mov
ljmp
and
jl
adc
sub
repz
enter
ds
push
jbe
iret
outsb
adc
repz
mov
push
or
push
or
imul
inc
aad
in
ja
lds
sub
jmp
fs
or
pop
lods
push
cmpsl
mov
out
xchg
inc
add
out
mov
cmp
ja
mov
pushf
push
push
mov
cmp
pop
clc
push
call
cmp
add
dec
imul
mov
enter
xor
push
push
adc
fwait
mov
push
xlat
jo
inc
lahf
aas
bound
dec
push
cmc
or
loope
jns
pop
pushf
dec
mov
pop
and
jbe
jne
repnz
cs
or
mov
cmp
in
inc
out
cwtl
fildll
or
out
out
cmpsb
adc
push
cli
call
sub
mov
mov
mov
or
jge
mov
cmc
dec
adc
mov
mov
addr16
adc
popf
pop
aam
adc
xchg
sbb
scas
das
jge
sbb
push
data16
mov
mov
fwait
xor
pop
mov
fcompl
inc
orl
cwtl
daa
addr16
int
out
ja
cwtl
cmp
xchg
xchg
ja
in
into
mov
push
push
loope
or
out
mov
jns
mov
jnp
push
outsl
xor
inc
sub
or
leave
mov
inc
or
cwtl
addr16
and
sbb
ret
push
adc
mov
mov
jns
sbb
and
cmc
pop
aad
add
xchg
int3
icebp
pushf
push
aad
bound
scas
push
or
dec
xchg
jmp
out
adc
xor
jecxz
fsubrs
outsl
jns
add
aam
es
jbe
daa
ja
sbb
imull
add
cmp
mov
popa
aaa
dec
fldenv
jmp
mov
fdivl
ja
jp
out
pop
sub
js
mov
mov
ds
and
lret
inc
mov
inc
sub
pop
xchg
mov
stos
fisttpll
pop
inc
mov
popa
add
ss
inc
lret
sbb
in
je
lock
cmpsb
mov
dec
cmpb
dec
lods
ret
or
pop
scas
stos
cmc
push
adc
mov
ficoms
in
sbb
clc
stos
out
dec
xchg
jae
cmp
mov
cmp
mov
loop
cmp
movsb
or
and
div
sti
gs
inc
jne
mov
sub
movlhps
ljmp
cmp
ds
not
push
jl
subb
in
inc
adc
insb
or
testb
mov
pop
in
push
xchg
cmp
mov
pop
popf
fdivl
or
cmpsl
orb
les
jp
mov
push
ret
addr16
pop
out
lds
xchg
movsb
hlt
test
push
add
fwait
pop
cmp
scas
xor
pop
pop
es
or
sbb
pusha
stos
or
push
repz
stos
mov
mov
ficoml
fisttpll
aaa
shl
jp
mov
lods
insl
xchg
mov
lock
mov
sub
sbb
add
sahf
cmpb
push
push
pop
daa
mulb
sbb
mov
cmpsb
lcall
jle
xlat
lock
mov
int
jnp
or
and
sbb
push
or
imul
je
xchg
cli
jns
pushf
loopne
in
dec
mov
lea
sbb
loop
pop
xchg
data16
jp
xor
push
loope
adc
movsb
pop
sbb
inc
jb
test
inc
mov
pop
leave
jb
inc
push
adc
and
cmc
xor
cmc
xchg
inc
push
js
pop
mov
stos
fsub
adc
outsl
scas
cmpsl
stc
and
xor
inc
xlat
das
aad
and
lahf
mov
sbb
arpl
xchg
dec
das
divb
sub
dec
cmc
lods
pop
lret
rep
inc
push
aam
imul
mov
jmp
sahf
out
mov
rcll
inc
leave
js
jne
mov
xor
pop
lea
clc
pop
mov
jl
shlb
pop
xchg
xor
add
push
mov
jl
addr16
movsl
jne
scas
mov
push
inc
push
pop
cli
jnp
loopne
scas
into
xchg
pop
push
mov
fnstsw
mov
addr16
mov
push
pop
or
push
or
mov
mov
push
adc
mov
pop
mov
adc
rolb
lea
movsl
mov
pop
ret
mov
leave
cmpsb
add
pop
loope
adc
xchg
jns
adc
sbb
push
mov
dec
push
or
or
sub
xor
add
insb
icebp
mov
ja
jg
xor
push
sbb
jg
mov
dec
xchg
adc
mov
test
push
mov
push
mov
aam
xlat
cli
repz
adc
pop
inc
mov
in
popf
rorl
pop
arpl
inc
aaa
mov
push
stos
into
inc
xchg
sbb
pop
fsubs
inc
dec
mov
insb
outsb
mov
mov
scas
fiaddl
minps
stos
dec
mov
mov
dec
cmpsl
pushf
jecxz
pop
jns
lods
sarb
and
xchg
push
push
inc
adc
lret
leave
pop
addr16
sbb
int3
movsb
dec
ret
inc
push
scas
lahf
aaa
sub
jae
imul
aam
cmp
sbb
hlt
adc
jmp
mov
bound
stc
cmpsl
mov
aas
jp
jbe
pushf
mov
and
dec
ja
in
sbb
or
int
push
mov
out
cmpsb
pop
mulb
test
pop
repz
rcl
add
push
imul
sbb
sub
lods
outsl
leave
cld
das
mov
jae
jbe
dec
jl
xor
fcoml
mov
cmp
jle
loopne
pop
inc
cmp
test
xchg
xor
push
cmp
xlat
adc
mov
loop
push
orl
int
repz
pop
pushf
clc
aas
add
ja
sbb
insl
fwait
sarb
sbb
sarl
jl
pop
pop
add
hlt
in
dec
gs
lods
pusha
xchg
push
cld
fst
mov
mov
jg
adc
hlt
add
or
inc
loopne
and
adc
fs
mov
into
cmc
pop
sbb
divb
daa
push
cmp
mov
inc
ds
stos
icebp
bound
leave
xor
mov
mov
pushf
lds
pop
xchg
int3
jbe
add
sub
xchg
add
popa
jle
faddl
mov
loope
inc
xchg
sub
mov
test
popf
mov
popa
in
push
ret
mov
aad
mov
in
mov
sub
sbb
jp
lahf
push
jge
xchg
and
lahf
pushf
lahf
adc
add
dec
test
pop
push
mov
mov
sahf
jnp
rolb
cs
and
jg
ds
inc
test
adc
jge
in
sub
shll
leave
shlb
or
xor
inc
mov
in
add
andl
lock
mov
pop
pop
out
pop
fdivp
mov
int3
or
mov
iret
sbb
cmp
xchg
out
jae
fcomip
push
movsb
int3
dec
jmp
push
xor
aas
loopne
gs
jns
stos
ljmp
adc
cld
inc
adc
lcall
jmp
mov
in
push
repnz
fbld
mov
roll
aad
ja
ds
and
xor
jbe
adcl
cli
sub
je
mov
sbb
jmp
inc
dec
rcl
insl
jp
jge
mov
cmp
stc
aas
inc
sbb
stos
shlb
lods
push
or
lock
xor
ljmp
sub
aad
adc
scas
popf
add
inc
adc
sbb
fnstenv
pop
add
sub
and
movsl
mov
ret
push
aad
aas
ja
xor
or
cmp
or
and
cmpsb
out
call
aaa
fistpll
xor
jp
imull
mov
xor
fmuls
mov
jl
jp
stos
lock
lahf
sbb
xchg
jbe
and
stc
mov
cmp
scas
bound
mov
inc
xchg
mov
mov
lret
sub
and
xor
stos
pop
cld
bnd
outsl
dec
cmc
lret
jg
inc
hlt
iret
out
xchg
stos
in
jo
or
dec
push
ret
push
mov
iret
sbb
dec
sub
xor
test
int3
cmpsb
push
and
xlat
add
or
das
sbb
arpl
sub
fst
dec
out
rcrb
incl
mov
aas
nop
imul
sti
test
and
lods
addb
call
lock
lods
andl
jnp
scas
xchg
loope
fistps
bound
call
mov
stc
jecxz
loopne
inc
dec
imul
xor
out
and
cld
mov
out
jns
xchg
mov
inc
mov
pop
enter
inc
inc
mov
and
xchg
pop
inc
pusha
sub
add
sbb
leave
aaa
adc
mov
shr
sbb
outsl
sub
adc
stos
mov
fimull
xlat
divb
rolb
xor
lea
and
inc
add
mov
push
bound
mov
mov
aas
scas
pop
add
pop
mov
aas
out
adc
mov
inc
int3
add
or
adc
pop
cmpsb
sbb
sub
sub
fdivs
cmp
in
and
test
jnp
repnz
mov
test
ret
or
mov
js
cmp
jo
pop
mov
add
push
jg
inc
push
in
xchg
ds
add
fadds
ja
cmpsl
cmpsl
gs
inc
dec
lret
fiadds
insb
inc
xor
mov
xchg
into
lcall
sarb
dec
jl
iret
adc
idiv
push
sbb
inc
ja
adc
inc
sbb
sub
xor
or
into
and
cmp
jmp
cmpsb
jmp
mov
push
aaa
mov
stos
das
xchg
mov
sbb
arpl
loopne
sub
je
iret
insl
and
jne
lock
data16
push
cs
mov
cmpsb
push
xor
mov
in
dec
leave
cmp
cmp
cmpsl
int3
pop
pop
sbb
idivl
faddl
aam
inc
paddsw
out
pop
syscall
dec
or
sub
mov
aas
xchg
dec
repnz
notl
xor
scas
or
scas
push
test
mov
fldl
aam
pop
mulb
add
cltd
pushl
aaa
mov
mov
dec
cmp
sub
sbbb
xchg
jmp
movl
push
loope
das
je
sbb
cli
mov
aas
aam
mov
lods
xchg
lahf
sbb
mov
mov
scas
stos
aam
mov
or
mov
push
leave
xchg
mov
testb
pop
fstps
and
enter
mov
lcall
test
push
mov
add
cmp
pusha
outsl
and
xchg
jmp
mov
mov
pop
or
and
daa
or
add
mov
or
add
rorl
mov
jne
xor
xchg
and
inc
xchg
int3
popa
arpl
sbb
sbbb
daa
dec
fnstenv
je
ds
mov
pushf
test
pop
pop
add
aad
adc
mov
inc
add
lods
out
inc
ret
inc
out
test
lret
mov
sbb
je
and
push
mov
stc
test
popa
sbb
jne
jecxz
or
xor
cmp
adc
in
test
mov
inc
xorl
jne
rcl
fstpl
and
mov
iret
or
nop
pop
xor
mov
jno
mov
ud2
mov
idivb
stos
movsl
sarb
mov
jb
push
or
xchg
insb
fisttpll
pop
aas
pushf
mov
push
mov
imul
pop
ljmp
xchg
fbld
push
jmp
push
mov
clc
adcl
stc
adcb
lea
jmp
fildll
sarb
dec
int
push
icebp
jg
ja
das
pop
mov
pop
push
ds
pop
dec
jb
sbb
mov
xchg
jae
jge
and
mov
cmp
movl
enter
ja
add
mov
icebp
inc
add
lret
add
jo
sar
nop
xchg
sub
sarl
xlat
icebp
mov
mov
sub
mov
and
inc
out
cmp
sbb
rcrl
insl
add
push
xor
sub
loope
mov
xchg
jle
lds
push
enter
mov
jne
imulb
gs
sbb
cmp
lock
mov
push
xchg
ljmp
cmc
stos
push
js
test
xchg
dec
jecxz
lret
xor
add
test
inc
inc
dec
lahf
cmp
dec
jge
mov
xlat
test
mov
pop
or
into
inc
cmp
sbb
bound
sbb
push
hlt
sbb
push
xchg
sbb
pushf
in
imul
orl
push
jns
ds
pop
mov
lea
out
adc
add
enter
mov
or
jb
xor
add
mov
push
pop
or
add
sarl
mov
push
movsb
in
mov
push
lret
add
mov
aam
ret
cmpsb
xor
and
popa
push
push
out
mov
fs
sub
sub
adc
fiadds
lods
stos
fs
movb
cld
pop
cmp
das
addr16
xor
mov
sti
aas
cmpsl
jnp
mov
test
mov
mov
lret
cli
sbb
fucomip
hlt
loope
fcoml
mov
adc
pushf
cs
addb
aad
mov
sub
daa
repz
and
test
xchg
xchg
push
inc
stos
in
aam
xchg
insb
push
xor
mov
rcr
push
movsb
int
cmp
daa
jb
out
pop
mov
int
cmpsb
je
and
daa
jb
sbb
or
add
push
repz
sub
cltd
pop
sbb
ss
popf
jp
dec
mov
gs
xor
adc
jae
cmpsl
add
adc
dec
push
inc
pusha
js
or
arpl
push
outsl
in
xchg
mov
ja
cmp
mov
inc
out
jl
jno
add
jno
int
xchg
and
hlt
ret
insb
aas
leave
add
mov
xor
cmp
fidivl
out
imulb
shll
iret
adc
xchg
xchg
fidivrs
rcrb
test
inc
jb
and
insl
stos
push
sti
mov
lcall
jge
icebp
cs
loop
push
jae
sub
es
lods
bound
jmp
mov
xor
iret
jnp
adc
negl
jmp
pop
cwtl
cltd
jp
pop
jmp
push
lock
push
mov
ret
mov
add
into
cmpsl
lret
shlb
adc
std
cmp
inc
adc
sub
xchg
iret
jmp
add
add
cmpsl
ss
and
xchg
jno
rorl
or
repnz
daa
mov
and
mov
loop
sub
push
lods
xchg
stos
push
stos
xor
fisttpll
movsl
adc
push
fisubrs
test
lahf
test
shlb
adc
aas
jmp
stos
sub
pop
xlat
xchg
bound
inc
cmpsb
jno
out
or
jle
or
or
insl
in
sbb
and
mov
insl
pusha
addr16
add
addl
sbb
pop
cltd
out
push
dec
fisttpl
mov
fimuls
imul
sbb
dec
rcll
inc
movsb
push
add
sar
cltd
ret
dec
add
cmpsb
inc
inc
cmp
shll
mov
xor
and
js
jb
and
xor
lea
or
ss
dec
pop
int3
xor
scas
jge
fcomps
push
sub
es
sbb
mov
dec
mov
add
push
mov
dec
notb
jmp
fisubrl
sub
dec
sbb
xor
loop
sbb
xchg
adc
sti
or
jno
ljmp
jne
sbb
fidivs
popf
xor
mov
outsb
int3
leave
cmp
movl
aas
ds
mov
xor
pop
inc
mov
mov
sub
fildl
bound
inc
js
jnp
stos
pop
test
fstps
mov
mov
cmpsb
jmp
sbb
lcall
lret
mov
ljmp
sbb
adc
pushl
orl
add
push
pushf
clc
mov
aad
sbb
and
mov
mov
add
loop
jns
es
sbb
fcoml
in
rolb
sub
ret
imul
setnp
ret
jbe
sub
fadd
loop
adc
mov
jnp
and
fsubrl
dec
xchg
mov
mov
add
into
xor
jno
or
mov
and
test
mov
mov
pop
push
ficomps
xchg
std
rcrb
pop
inc
ja
pusha
mov
daa
and
xor
rol
sbb
xor
fcomi
dec
imul
outsl
adc
pushf
cmpsl
stc
data16
add
pop
inc
push
repnz
or
ret
mov
ja
mov
aaa
sti
lods
mov
jl
cli
add
cmc
cmp
int
adc
adc
pushw
in
mov
out
bound
ss
cmp
or
jo
add
adc
sbb
mov
mov
mov
loop
cmpsl
or
js
mov
mov
push
xorb
mov
xor
mov
loope
and
dec
movsl
and
sub
clc
sub
inc
jno
inc
sub
mov
add
inc
mov
xor
movsb
jmp
jo
repnz
or
shll
sbb
inc
or
cwtl
std
sbb
clc
pop
sarl
inc
popf
and
in
adc
sbb
lahf
sub
xchg
xor
movsb
add
dec
mov
cltd
cwtl
ret
sbb
sub
pop
insb
int
ljmp
es
dec
mov
xchg
or
jmp
pop
push
adc
loope
push
aaa
mov
fstl
sti
or
xor
sbb
xor
push
push
push
mov
sub
push
mov
xchg
pop
adc
and
iret
jp
leave
test
scas
push
jg
xchg
add
mov
lock
mov
shll
ret
mov
imul
mov
or
loop
test
cmp
call
sbb
in
fnstsw
pop
scas
addr16
repz
mov
inc
mov
inc
and
stos
pop
or
cmp
jl
mov
loopne
ja
repnz
out
lods
inc
lcall
dec
cmp
push
dec
and
nop
push
jo
inc
insb
adc
rcr
imulb
lahf
pushf
icebp
mov
int3
daa
adc
mov
and
inc
cltd
adc
stos
mov
stos
sub
pop
jmp
into
test
imul
add
jae
mov
dec
into
mov
faddl
nop
mov
test
dec
ja
adc
faddl
mov
insl
fwait
pop
test
jecxz
repnz
test
movsb
mov
mov
lret
inc
fwait
pop
jo
mov
mov
or
sbb
xor
mov
loope
repz
dec
mov
xchg
cmp
popa
mov
ja
mov
out
and
or
push
adc
aad
fidivrl
test
imul
sarl
xchg
sub
adc
sub
push
mov
in
aas
sti
imul
adc
nop
and
jb
loope
imul
add
push
loopne
jmp
cmp
and
mov
xor
mov
sbb
sets
cld
push
xchg
sub
adc
mov
out
mov
jecxz
in
xorb
outsl
jo
fidivrs
shrb
decl
arpl
xlat
es
add
cmp
jmp
and
cmpsb
inc
notl
fmull
and
out
and
dec
cmpsb
mov
add
xchg
mov
std
sub
movsl
mov
pop
jb
mov
mov
repnz
sarb
addl
aaa
fcmovnbe
add
push
xchg
lods
xor
jbe
add
pop
sbb
imul
jns
pusha
mov
and
hlt
nop
repz
out
push
dec
out
pushf
or
test
mov
das
int3
xchg
test
mov
stos
bound
idivl
jb
jne
jb
xchg
mov
out
mov
ret
outsl
sahf
and
cmpsl
xchg
hlt
test
fisubrl
mov
lahf
xchg
jnp
inc
add
gs
sub
rclb
inc
sub
in
rcrl
call
loopne
sbb
pop
jecxz
xor
sub
mov
add
and
fildll
jge
in
push
repnz
lods
or
popa
inc
jns
in
gs
sbb
aam
pop
cmp
sbb
in
cmp
dec
xor
push
dec
jbe
mov
mull
out
push
sbb
std
cmp
clc
or
enter
subl
mov
or
es
push
push
cmp
inc
xchg
jnp
or
call
mov
mov
push
add
shl
loop
mov
outsl
and
pop
dec
hlt
and
aaa
jbe
into
outsl
push
orl
stc
xor
xchg
test
xor
adc
push
shl
jnp
nop
pop
test
jbe
popa
shrb
pop
icebp
sub
and
fistps
fwait
adc
and
pop
jns
mov
out
dec
xchg
nop
pop
or
psllw
test
bound
add
aad
pop
mov
cld
and
pop
mov
stos
test
sub
fsubrl
fnstcw
or
xlat
push
imul
pop
fimuls
push
fadd
mov
icebp
push
cmp
adc
cmp
jge
jecxz
aas
loopne
imulb
pop
inc
lea
cwtl
mov
mov
and
xchg
adc
adcl
loopne
popf
test
push
fsubs
popa
sbb
adc
cmp
enter
push
or
pop
adc
popa
dec
jnp
movsb
lods
dec
inc
enter
pop
jne
int3
push
clc
cmpl
fdivrl
mov
inc
jo
xor
xlat
aas
mov
xchg
adc
cwtl
xchg
mov
orb
fnsave
in
xchg
or
lds
movsb
into
jge
lret
cltd
in
xor
shll
xchg
pop
insl
adc
cli
loope
xor
mov
xlat
jl
dec
sbb
jo
imul
test
pop
out
jp
adc
ret
roll
dec
pop
sbb
fwait
ja
ss
outsb
outsb
add
jl
or
inc
dec
jp
sahf
or
jo
push
cmp
imul
lea
lds
cli
rclb
mov
push
and
mull
mov
rorb
mov
jb
or
or
out
xor
cmp
sbb
xor
mov
and
push
bound
out
bound
mov
mov
test
mov
cmp
mov
loop
cmp
pop
mov
mov
add
leave
stos
mov
cmp
dec
and
inc
cld
lods
or
insb
out
adc
push
cmc
sbb
insb
cmp
leave
add
clc
scas
das
and
js
pop
push
in
pop
inc
add
loop
push
cmp
cltd
push
popf
iret
fsubs
add
cmp
stos
mov
sbb
loope
dec
icebp
push
xchg
fildl
or
dec
shr
push
xchg
in
push
js
loope
stos
inc
push
data16
cmp
dec
adc
pop
sbbb
or
scas
xor
add
cld
dec
sub
pushf
ficompl
xchg
jecxz
xchg
fwait
xor
dec
cmp
hlt
push
movsb
repnz
rcr
out
stos
pop
lret
jno
jge
or
popa
dec
mov
lods
aaa
aas
insb
adc
inc
xchg
sarb
sahf
dec
sbbl
push
lods
push
inc
addr16
dec
cmp
arpl
sbb
cmc
pop
sbb
jb
sub
mov
or
inc
ljmp
push
lea
test
mov
push
mov
aas
jns
insl
loopne
xchg
test
movsb
dec
dec
out
or
in
out
in
cltd
cmp
push
cwtl
and
cmpsb
jbe
jp
lea
out
sub
inc
ret
xchg
push
sub
push
mov
es
add
cmc
or
or
mov
push
jmp
in
stos
push
das
cmc
add
push
push
int3
mov
cmp
cmp
insb
inc
daa
rcll
adc
jnp
dec
push
loop
sbb
scas
mov
sbb
mov
push
stos
call
jge
rcr
movsl
xchg
icebp
fst
in
inc
cmpsb
mov
out
mov
adc
lea
cmpsl
repnz
ja
sub
push
repnz
mov
jb
aad
nopl
sub
pusha
mov
pop
push
call
or
pop
adc
jnp
mov
add
fnstcw
je
mov
outsb
outsb
mov
push
clc
or
imul
test
into
fidivrl
std
pop
push
mov
cmp
xor
fadds
insb
xor
xchg
outsb
xor
push
sub
sbb
sbb
sbb
ret
add
nop
adc
stos
arpl
lock
jnp
test
push
ljmp
popl
or
in
xor
loop
leave
ficoms
call
push
xlat
les
and
test
push
aas
lds
dec
push
inc
and
mov
sbb
adc
testl
or
pop
xchg
or
shrl
mov
jmp
cmp
push
cmc
jp
in
cmpsb
sub
push
lret
mov
adc
cmp
nop
jns
daa
std
scas
jns
sbb
xchg
lret
dec
test
push
insb
mov
xchg
add
scas
fwait
xchg
ss
es
mov
jno
jmp
scas
adc
cmp
sub
shlb
mov
lods
mov
test
aaa
lea
mov
push
or
das
or
jge
lds
push
jnp
cmc
bswap
lret
and
and
leave
mov
jno
icebp
dec
sbb
cli
push
xchg
pop
ljmp
jo
call
call
ja
roll
cli
jmp
rclb
js
fstpt
int
mov
out
aas
cmp
sbb
pop
lods
mov
lret
push
pop
xchg
xor
push
adc
in
push
mov
dec
xchg
lcall
fimull
pop
cmp
jmp
lds
lods
cmp
dec
jo
ja
clc
cmp
inc
arpl
out
push
cmp
mov
push
cwtl
scas
add
imul
mov
scas
and
add
and
sbb
gs
out
pusha
das
sub
xchg
inc
scas
inc
mov
pop
rcr
xchg
nop
xchg
mov
out
mov
negb
sub
sbb
mov
cmp
xchg
ja
mull
sti
jmp
cs
sbb
mov
pop
mov
outsl
cmp
push
mov
inc
xor
lcall
ficompl
or
lds
out
sub
fildl
jp
sub
add
shll
jno
xorl
jmp
insb
or
jne
xchg
les
cs
jecxz
mov
inc
add
xor
mov
mov
cltd
ficompl
lcall
xchg
and
push
xchg
mov
int
nop
aaa
mov
sub
and
mov
or
les
mov
nop
repnz
rolb
dec
add
lret
adc
das
imul
adc
xchg
insb
push
inc
jmp
dec
sti
adc
inc
sbb
rcr
push
pop
push
cmpsl
cmp
add
in
inc
jae
movsl
clc
stos
cmc
inc
xchg
mov
call
sarb
lods
sbb
jg
cli
dec
and
mov
imul
xchg
or
pop
inc
xchg
nop
sbb
cmc
mov
or
xor
movl
mov
adc
ja
rcl
jecxz
out
and
aaa
out
addr16
jne
jns
jo
sbb
pop
jo
sub
mov
pop
add
decl
repnz
jp
mov
pop
xchg
or
cmc
sbbl
ret
int3
gs
push
xlat
pop
push
xchg
xor
sbb
jmp
movsl
pop
inc
fs
xchg
dec
mov
call
popa
pusha
pop
les
rorb
std
into
or
push
stos
cmp
imul
inc
rcrl
addb
nop
stos
add
iret
out
dec
testb
pop
sub
pop
fcomps
test
hlt
int
es
sarl
sbb
mov
inc
js
in
fs
bound
mov
or
dec
loope
inc
sbb
jmp
movsb
push
lret
xorl
test
insb
cld
mov
pop
data16
or
mov
jmp
push
mov
out
lods
jmp
out
lcall
out
add
std
test
cmc
shll
in
lret
jne
lds
cli
cmpsb
mov
pop
mov
mov
sarb
in
pop
ljmp
stos
adc
inc
fistl
mov
shlb
xor
fisttps
mov
shll
lea
sub
nop
mov
cmp
cs
ds
shll
adc
jmp
lahf
rorb
shlb
or
popf
xchg
frstor
jge
fsub
mov
stos
cmpsl
inc
mov
sub
lods
cmp
call
or
and
mov
aam
cmp
mov
nop
icebp
lahf
jb
mov
inc
jo
mov
mov
push
sbb
cmpsb
in
gs
push
dec
outsb
sub
es
fdivrs
icebp
dec
mov
sbb
out
xchg
add
mov
pop
ja
test
aas
jns
in
adc
adc
add
mov
add
add
jg
mov
fdivs
xlat
ja
shll
int3
xor
out
lcall
add
fxch
frstor
jp
push
arpl
arpl
aad
cwtl
repz
fadd
pavgb
add
pushf
aas
sub
cli
inc
fnstcw
adc
mov
iret
inc
das
unpcklps
xor
mov
movsb
ds
sbb
ret
orb
adc
jge
sbb
xchg
sbb
jge
xchg
pusha
add
mov
outsl
jmp
adc
shr
mov
or
xchg
ja
je
lods
nop
mov
inc
cmpsl
adc
jnp
xor
popf
out
push
ds
data16
cmp
add
mov
das
jge
jg
int
stos
int3
js
jbe
mov
adc
jno
roll
nop
add
cmp
pop
push
aam
mov
sub
dec
hlt
out
out
jb
add
lret
sbb
jmp
dec
cld
bound
shll
xor
sbb
xchg
mov
sarl
orb
pop
jne
push
cwtl
pop
loopne
sub
pop
fldt
push
es
cmpsb
cmp
push
jg
dec
push
jb
int3
fstps
dec
push
mov
stos
dec
js
sti
or
test
in
fsubrl
pop
lahf
ret
fcmovnu
movsl
xchg
roll
jge
push
mov
mov
push
js
test
dec
or
xchg
insl
jbe
dec
add
in
and
popa
push
cwtl
push
dec
call
mov
sbb
lcall
fcmovnbe
cmp
inc
or
sub
daa
fsubrl
add
fmulp
ret
mov
mov
pop
sbb
mov
fwait
movsl
jbe
cmc
ja
mov
scas
mov
pushf
out
xchg
icebp
dec
cli
leave
sbb
loop
sbb
arpl
pop
lods
pop
and
dec
movsb
pop
jnp
adc
add
jle
jmp
sub
cs
dec
add
rolb
int3
add
jo
ds
mov
sbb
pushf
mov
mov
test
add
mov
adc
adc
push
dec
ficomps
jl
lret
adc
mov
mov
xchg
out
inc
frstor
rcll
aam
aad
inc
into
sbb
popa
mov
cmp
in
int
bound
sub
adc
push
mov
aaa
pop
sub
cmp
outsb
loope
pop
cmp
dec
push
pop
scas
add
pusha
mov
std
lods
stos
ljmp
add
sub
jle
jle
xor
adc
fcoms
or
adc
ret
cmp
and
xorb
sarl
loope
dec
jge
fisubrl
int
pop
mov
add
cwtl
call
cmc
mov
fs
into
test
nop
ret
movsl
pop
popf
xor
imul
mov
xchg
in
popf
sbb
xlat
fst
jecxz
inc
xchg
inc
std
jae
add
icebp
dec
mov
xlat
ljmp
cmpb
mov
jg
mov
sbb
addb
dec
ret
dec
popa
sub
dec
and
stos
not
pop
xchg
scas
push
into
jle
pop
pop
jbe
dec
ret
adc
test
xchg
lret
push
out
add
orps
out
iret
fnstsw
mov
push
sbb
outsl
adc
jnp
dec
out
sarb
fs
mov
jo
push
outsl
inc
sbb
testl
test
in
repz
pop
leave
mov
loop
dec
cltd
jmp
int3
inc
push
sub
adc
scas
adc
in
shll
mov
jle
push
xor
jp
orl
cmpsl
pop
pop
shll
test
xchg
lods
push
shrl
mov
and
cmpsb
and
stos
adc
jmp
mov
sbb
jl
and
dec
sbb
imul
jno
std
test
jg
sbb
sbb
insb
jnp
sub
sbb
sub
cmp
cwtl
xchg
loopne
pop
pop
add
insl
mov
xlat
xor
leave
lods
movsl
dec
std
insl
fsubl
mov
mov
push
jp
and
mov
dec
sub
lcall
int
mov
dec
test
insl
xorb
pop
xchg
repz
pop
scas
dec
fcoml
lea
js
fmull
sbb
test
cmp
inc
dec
cmp
lcall
std
pop
sbb
add
sahf
mov
dec
jne
adc
loopne
dec
cmc
adc
add
inc
or
mov
imul
dec
shr
push
icebp
bound
mov
xchg
push
ja
es
shlb
leave
js
jbe
jnp
jb
sub
mov
aas
popa
fsubrl
inc
adc
jbe
imul
test
push
adcl
xchg
sub
pop
jae
adc
iret
jmp
inc
stc
inc
dec
jle
clc
das
xchg
fwait
jns
jmp
push
inc
push
loope
popa
jmp
xchg
ret
lahf
and
out
icebp
pop
cmpl
or
mov
push
hlt
add
or
nop
mov
fcmove
adc
sbb
adc
xlat
daa
adc
jno
xor
ret
push
fs
sbb
cmpl
fwait
fwait
inc
movsb
roll
cmpsb
imul
jle
pop
std
or
fcmovne
xlat
dec
rorb
pop
into
and
fbld
ja
testl
loope
in
pop
aas
sbb
imul
dec
add
mov
mov
cmp
hlt
or
xchg
ja
addl
pop
xchg
icebp
mov
out
or
mov
or
cmc
xchg
mov
adc
xor
ja
pop
mov
pushl
mov
enter
outsb
shr
push
mov
push
pop
fildll
fadd
push
or
sbb
bound
test
mov
dec
push
dec
out
hlt
jge
xor
or
dec
xor
or
adc
sub
sar
push
push
or
leave
sbb
push
pop
add
leave
aas
fistpll
test
add
adc
lds
dec
inc
jle
push
xor
shlb
pop
sbb
cmp
iret
test
out
es
push
sub
pop
jnp
rclb
and
insl
sbb
fs
mov
mov
jo
push
push
sub
dec
cs
cld
outsb
push
sbb
aaa
mov
dec
mov
iret
jl
outsb
scas
adc
push
insl
aad
dec
sbb
sub
inc
fs
mov
sub
int
test
mov
adc
lcall
dec
stos
stos
int
dec
or
push
les
xchg
dec
outsl
jg
sbb
in
fwait
nop
mov
fs
out
imul
jno
scas
mov
xor
mov
dec
mov
nop
pushf
mov
and
cmc
inc
xchg
mov
xchg
xchg
aaa
lock
insb
hlt
xor
stc
es
icebp
inc
sub
in
in
xchg
ljmp
ds
fidivl
das
das
inc
rcrl
xchg
in
and
sub
in
mov
mov
fs
out
adc
outsl
int
dec
jns
fisttpll
pop
xor
popa
repz
cs
mov
in
push
pusha
stos
cmp
jge
xchg
mov
sbb
popa
cmovne
xor
cmp
sbb
jecxz
fstl
cmp
or
lret
dec
xchg
dec
adc
insl
jecxz
adc
xchg
jecxz
fs
andb
xor
movsb
adc
jo
sbb
aam
jnp
sub
push
aaa
out
in
inc
jp
jo
xchg
in
clc
outsl
pop
jl
mov
roll
call
icebp
push
cmp
mov
pop
cmp
cli
xchg
xor
and
sbb
pop
dec
xor
jecxz
cli
and
xchg
ret
or
mov
mov
push
xchg
inc
cmpsb
push
inc
andb
and
scas
dec
dec
jecxz
sub
inc
lahf
iret
sbb
rcrl
or
mov
dec
int
lahf
jb
scas
cmp
cs
and
cmp
mov
add
sbb
jp
ds
sub
icebp
mov
push
sbb
sbb
pop
ljmp
addr16
movsl
jle
dec
cmp
cld
mov
add
mov
jl
movsb
lods
push
mov
sub
imul
insl
ret
arpl
paddb
xor
push
mov
mov
push
cmp
aad
out
imul
and
adc
mov
in
rol
sbb
int
adc
or
lock
fwait
shl
out
scas
imull
lcall
clc
sarl
sub
mov
loopne
pushf
and
push
cmp
push
sbb
pushf
out
sub
mov
jle
xchg
dec
out
add
or
xor
fdivl
xchg
popa
hlt
sub
loope
cmp
fmuls
lea
sub
ja
mov
aad
xchg
pop
and
pop
pop
mov
js
inc
pop
push
and
call
outsl
cmpl
fs
testl
lds
jg
negb
out
outsb
dec
movsb
mov
sub
mov
sarb
aad
mov
mov
mov
gs
adc
mov
mov
jae
adc
cmp
out
push
cmp
out
rolb
lods
repnz
pusha
imul
pop
lret
or
dec
add
clc
xchg
cmpsb
ret
xchg
adcl
aam
jns
and
aad
dec
ficoml
aad
xchg
push
dec
xchg
xchg
into
xchg
sbb
push
push
pushf
push
push
fiaddl
js
fisubrl
aad
je
mov
jno
lea
aam
movsl
mov
enter
in
aaa
push
lods
mov
dec
test
shlb
push
ret
scas
outsb
sub
lret
cwtl
js
adc
aam
fwait
mul
mov
adc
pop
test
mov
ljmp
mov
mov
clc
mov
mov
aad
and
xor
bound
scas
and
fs
mov
dec
es
pop
and
jb
adc
pop
inc
push
addr16
test
dec
adc
mov
jmp
fwait
das
adc
lods
ds
addr16
and
or
dec
sub
data16
and
and
loope
pop
rorb
pop
lea
adc
sub
mov
cwtl
leave
mov
test
jmp
leave
jns
insb
xor
mov
stc
pop
lahf
push
sub
cltd
scas
pop
mov
sub
fcmovne
jge
sbb
gs
jp
or
or
hlt
mov
fidivl
ss
cwtl
ljmp
ljmp
imul
lods
repz
test
into
imul
in
sub
pop
and
ja
loope
add
xchg
sahf
dec
jl
adc
sub
pop
push
inc
out
jmp
fsub
mov
mov
xchg
es
cmp
leave
xchg
and
or
mulb
fs
in
mov
shlb
and
mov
out
jne
xchg
and
data16
cmp
push
sbbl
leave
insb
subb
aad
repnz
or
push
cmp
aam
push
out
fs
and
icebp
pop
ja
out
cmc
push
pushw
ljmp
sbb
adcl
push
outsb
mov
push
mov
xchg
pop
and
sub
xchg
daa
pop
lods
fstps
mov
call
xor
xchg
mov
xchg
and
inc
mov
cmp
stc
fadds
dec
sub
test
aas
fadds
jae
loope
push
inc
mov
cli
add
out
outsl
jmp
sbb
inc
xlat
stos
xor
stc
or
fldenv
cmp
fists
loop
sbb
cmp
fldt
lcall
mov
mov
mov
push
xchg
or
cmp
mov
cltd
pop
mov
xchg
out
and
mov
rorl
cwtl
mov
ret
mov
push
xchg
and
inc
mov
shrb
scas
mov
jne
pop
jbe
aad
inc
pop
dec
xchg
or
pop
adc
stos
inc
out
and
test
fisubrs
pop
pushf
xchg
imul
ds
dec
dec
xchg
in
enter
jp
fdivrs
mov
lret
adc
jne
dec
int3
pop
pop
fwait
mov
lret
and
xchg
movsl
dec
into
popf
and
aaa
add
icebp
xchg
dec
pop
xchg
and
dec
arpl
stos
aad
xor
sub
sahf
push
pop
adc
sub
lds
xchg
push
dec
sahf
pop
push
jge
mov
xor
dec
je
sub
xchg
mov
and
adc
cmpsl
push
xor
mov
pop
scas
faddp
insl
decb
in
pusha
sahf
mov
fs
roll
and
or
fcompl
cmp
sbb
and
lods
scas
stos
inc
je
mov
jae
jo
pop
inc
inc
mov
sti
int3
or
adc
dec
aad
stos
pop
fwait
inc
call
xchg
adc
jno
enter
lret
lock
sti
stos
xor
xchg
arpl
loop
pusha
and
std
jmp
int3
aam
inc
mull
pop
loope
ljmp
sub
xchg
arpl
out
cmp
mov
in
sti
push
into
push
fwait
sbb
lock
sbb
dec
xchg
push
mov
fistpl
dec
mov
jg
jno
outsb
ja
xchg
inc
rorl
aad
pop
fildl
jo
mov
xchg
popa
adc
divb
lods
fsubr
cli
cmp
cmp
sbb
push
xchg
ljmp
pop
sub
adc
pop
inc
pop
sbb
clc
mov
inc
add
pop
sbb
mov
inc
outsl
ret
scas
repz
iret
add
dec
stos
subb
std
out
ret
jns
mov
cmp
inc
test
mov
roll
mov
pop
je
aam
pop
lcall
loop
xlat
cmp
fimuls
mov
sbb
jbe
fldenv
stos
or
sbb
push
je
mov
jb
xorb
jbe
jp
mov
das
push
das
lea
mov
jp
ret
push
insb
nop
push
mov
iret
mov
rcll
nop
pop
and
pop
popa
mov
or
push
dec
add
cwtl
or
ss
xchg
sub
jnp
jmp
xor
je
mov
pop
sbb
and
dec
std
test
stc
rol
leave
sbb
xchg
arpl
pop
adc
movsl
adc
aaa
jbe,pn
rorl
sbb
ja
in
jbe
int3
cltd
push
sbb
xchg
data16
test
into
cld
sub
cs
cli
lcall
dec
xchg
jmp
lcall
mov
inc
lods
add
sbb
mov
pop
inc
or
inc
xchg
in
fwait
mov
ss
in
and
clc
jnp
push
adc
dec
inc
sub
jb
sub
bound
sarl
daa
cltd
das
fdivrs
add
cmpsl
mov
xor
dec
sahf
sti
push
cs
mov
xor
cmp
cmpsl
add
out
addl
or
shrb
push
sbb
sti
add
push
push
mov
lret
pop
fistpl
inc
fisttps
imul
jns
mov
xor
xchg
pop
in
stos
and
push
or
mov
cmp
push
xchg
test
mov
lret
out
lods
js
adc
daa
in
jp
addr16
sbb
lock
movsb
mov
xor
add
mov
in
out
push
js
mov
sbb
les
adc
cmp
jb
dec
lods
fisttps
aas
xor
aam
sahf
sti
fdivl
cmpsl
cmp
mov
jle
mov
addr16
cld
ljmp
mov
or
ds
mov
ficompl
jo
lods
and
mov
filds
push
or
gs
cld
leave
fldt
ret
out
mov
lods
push
cmp
mov
fsubs
sar
clc
sbb
add
mov
dec
adc
psrad
xor
cmpsb
mov
lea
pop
dec
mov
jb
adc
fldl
mov
cld
popf
js
loope
arpl
mov
pavgw
in
movsl
jmp
iret
jne
fmul
repnz
xor
add
and
pop
repz
inc
pop
repz
pushf
bnd
stc
int
or
hlt
and
insb
das
outsb
aaa
repz
adc
sarl
testb
and
pop
cmp
sub
push
xorl
call
in
cmp
xor
ret
in
fadds
add
mov
mov
mov
xchg
lods
imul
gs
pop
jp
inc
mov
loopne
push
and
xchg
lahf
lea
jno
cmpsb
test
adc
xchg
mov
pushf
popf
push
jbe
pop
push
faddp
xorl
cli
in
mov
sbb
push
pop
pop
add
dec
in
and
adc
sub
cli
imul
cmp
sbb
jmp
dec
out
lret
push
iret
lcall
jo
scas
ret
push
pop
mov
jl
mov
xor
push
adc
lcall
sbb
xchg
or
mov
test
push
mov
and
notl
lcall
sbb
js
shr
sub
pop
cli
fisubl
aam
testb
mov
xlat
sarl
sbb
insl
out
mov
adc
div
ret
cmp
mov
sbb
jg
out
lods
clc
in
push
push
popf
xchg
je
push
scas
cltd
dec
cld
adc
inc
dec
loop
mov
pop
repnz
aaa
out
ds
push
sbb
out
mov
cmp
sti
mov
outsl
movsb
mov
or
fimuls
sub
rolb
add
or
jmp
loopne
sbb
add
xchg
mov
push
rcrb
push
jle
into
pop
ss
ds
stc
inc
inc
cmp
pop
ja
adc
sub
mov
or
icebp
dec
in
aam
lcall
dec
add
adc
adc
xor
lret
cld
jne
xrelease
sub
out
push
insb
xchg
jbe
rolb
adc
imul
pop
mov
mov
or
movl
sbb
data16
arpl
cmp
xor
push
rorl
and
add
fbld
add
aad
adc
cs
fbld
push
mulb
cmp
mov
adc
out
sbb
imul
xchg
test
insl
jg
dec
xchg
ret
ljmp
or
sbb
mov
arpl
push
push
xchg
mov
jmp
add
adc
in
aaa
xor
sbb
pop
loopne
sarb
std
inc
jmp
cld
or
and
sub
mov
in
xlat
outsl
mov
insb
cli
inc
mov
push
or
test
add
mov
icebp
sub
dec
es
cmpsb
insl
orb
adc
ss
or
roll
and
insl
out
xchg
cltd
push
popf
in
shll
cwtl
mov
cwtl
mov
sub
lods
sub
mov
jns
and
add
sub
enter
cmc
rolb
push
jns
push
ljmp
jp
movsb
test
mov
dec
fwait
lret
mov
push
sub
daa
push
lods
popf
add
fwait
ja
pop
dec
xlat
push
mov
add
lret
add
pop
xchg
xlat
push
push
add
femms
cmc
or
inc
mov
push
add
xor
shlb
in
push
das
out
adc
imul
bnd
fs
aam
cltd
lahf
cmpsl
pusha
xchg
clc
lods
lock
stos
pop
js
sarb
mov
inc
dec
or
cmp
adc
sbb
xchg
sub
xor
push
or
mov
mov
push
popf
ljmp
cmp
or
xchg
or
stc
mov
arpl
pop
popf
mov
aad
andb
hlt
xlat
rcll
test
xchg
add
shlb
cmp
xchg
adc
sti
stos
add
shlb
sets
repnz
fdiv
popf
dec
fcompl
mov
mov
xchg
inc
ljmp
pop
imul
or
int3
xor
jge
add
out
push
stc
mov
ja
sbb
scas
push
popa
test
jmp
lock
int
cmp
sbb
mov
pop
sub
inc
daa
adc
pop
cltd
inc
mov
fcomps
out
inc
xchg
adc
test
xchg
add
jl
filds
push
cltd
cmp
mov
dec
push
mov
pusha
cmp
and
cld
adc
jb
mov
push
shr
fisubrl
lcall
dec
jle
cmp
icebp
pop
mov
lods
into
stos
cmpsb
mov
popa
icebp
es
adc
mov
cltd
test
out
in
dec
cwtl
fistpl
pop
cmp
nop
mov
xorb
pop
clc
pop
cld
xchg
adcl
pop
inc
push
push
ret
subl
clc
push
or
mov
incb
insb
mov
cs
mov
sbb
fsts
cs
and
scas
nop
loop
or
gs
cs
gs
dec
push
adc
pop
in
out
mov
mov
mov
movzwl
jle
outsl
cmc
mov
dec
push
lcall
sub
lret
cmpb
lret
xchg
shr
aad
mov
cmp
mov
push
clc
cmp
dec
pop
pop
fidivrs
dec
loope
rcll
leave
out
clc
imul
xor
add
fsub
push
aad
pop
pop
dec
inc
adc
js
or
iret
sbb
in
in
out
pop
jb
mov
sub
mov
rcl
lods
fsubs
sub
cs
ret
cmc
rcrb
loope
sahf
jmp
fstl
mov
mov
push
mov
ljmp
scas
inc
test
dec
ljmp
test
sbb
gs
dec
jmp
les
dec
divb
ja
cmp
out
nopl
fldcw
pop
jmp
sbb
mov
ret
sbb
and
std
mov
dec
jne
cld
fadds
nop
ds
or
pop
addl
call
adc
stc
pop
push
dec
push
pop
inc
daa
popa
jmp
out
into
stos
stc
and
cltd
mov
in
add
movsb
lds
ds
ds
daa
outsb
cmp
mov
push
inc
ja
or
ud1
sub
sbb
mov
mov
mov
ja
add
pop
dec
popf
sub
push
adc
mov
je
push
dec
cmp
rorb
incb
iret
inc
mov
inc
mov
mov
clc
cmpsb
int3
jmp
push
mul
call
jb
cmp
sbb
mov
pop
xor
xchg
test
cmc
test
mov
sub
stos
jno
mov
push
sbb
rep
jecxz
addl
call
adc
xchg
testl
jl
mov
pop
pop
aad
fldcw
loop
inc
aam
mov
sbbl
pop
xchg
inc
lcall
fisttpl
cmp
jae
stc
out
popf
xor
mov
and
movb
lea
lahf
mov
shrl
push
dec
adc
xor
shll
push
scas
dec
jge
lahf
outsb
call
add
andb
push
fwait
xchg
cmp
adc
jbe
push
cs
push
hlt
sbb
sub
xor
mov
xor
cmp
hlt
repnz
inc
xor
outsl
mov
sub
addr16
aad
das
movsl
cmpsl
scas
adc
sub
cmpsl
andl
test
mov
imul
lock
aad
xor
lea
sti
push
inc
jp
sub
fwait
inc
mov
insb
pusha
and
imul
in
sub
inc
pop
jno
hlt
xor
fwait
mov
cmp
pop
lock
lods
mov
and
sub
dec
loopne
stos
pop
pusha
lret
cmpsb
push
test
xchg
insl
mov
ficoml
pop
jbe
dec
lret
addb
cmp
lcall
xchg
adc
rcrl
jb
sub
inc
add
sbb
push
mov
pop
sahf
lods
push
fwait
push
xchg
push
cs
xor
push
es
add
aaa
pop
arpl
lahf
cmpsl
ret
dec
scas
push
lock
pop
andl
cmp
loop
push
out
lahf
push
mov
out
jns
fcoml
insl
leave
shl
mov
ds
mov
cmpsb
cmpl
les
xchg
add
or
mov
arpl
mov
pop
pop
fsubrp
enter
mov
cs
xor
mov
cmp
push
xor
pop
xor
jmp
mov
iret
pop
outsb
into
cmp
fcmovb
cmc
jl
jo
or
xchg
int
mulb
mov
movsl
dec
mov
mov
mov
cmc
inc
or
addr16
frstor
ds
subb
daa
jecxz
mov
sbb
test
add
mov
or
fs
mov
mov
dec
pop
xchg
sarb
mov
pop
out
fstpt
ficoms
or
mov
aas
cwtl
xchg
inc
lret
push
mov
mov
jnp
and
and
add
js
fidivrl
push
and
outsl
inc
les
push
and
out
xchg
scas
add
mov
push
fisubrs
and
sahf
jmp
in
rcrl
cmp
xchg
jge
or
push
mov
sti
jge
or
rorl
jmp
iret
mov
sub
xor
xor
push
movsb
inc
in
lods
sbb
mov
lods
push
cmp
xchg
inc
or
not
aad
dec
movsl
sbb
jp
push
aas
call
mov
nop
nop
sub
jno
or
dec
dec
fld1
in
mov
out
jp
mov
cwtl
frstor
into
repz
push
call
fstps
out
clc
and
dec
sahf
ds
insl
pop
push
lock
xchg
and
iret
xchg
sbb
cmpsb
jl
mov
mov
or
push
es
ret
xor
fnstcw
sarb
mov
addb
sub
into
out
js
cmp
iret
call
push
hlt
lahf
adc
jg
mov
cmp
dec
outsb
repz
ja
xor
mov
fs
mov
dec
shl
cli
add
or
mov
mov
fucom
inc
pop
mov
mov
pop
repnz
cmp
lahf
mov
jo
mov
pop
xchg
add
push
cltd
mov
shlb
imul
loopne
or
dec
addr16
mov
mov
scas
cld
sub
fmuls
xor
lock
xor
stc
aad
mov
movsb
das
adc
mov
mov
xor
ret
lods
push
in
gs
call
in
movzbl
sbb
push
dec
movsl
adcb
mov
push
adc
push
sub
in
xchg
push
inc
push
pop
mov
and
les
mov
or
fimuls
jmp
xor
xor
sub
movswl
add
xchg
pop
das
fcomi
cwtl
push
cli
fxtract
jp
pop
cmp
test
cmp
sub
inc
outsl
scas
add
mov
test
and
jl
lock
mov
lods
push
add
mov
or
mov
jns
xor
mov
mov
cmp
or
xchg
sbb
sbbl
xchg
inc
or
xor
fxch
xlat
cmp
test
ja
out
hlt
mov
jge
fidivs
insl
int3
jp
mov
pop
repz
in
xchg
loopne
jmp
cmpb
arpl
or
dec
sarb
mov
insl
cmc
jl
int
ret
sub
pusha
cmpsl
jmp
das
ja
add
shlb
fistpll
mov
and
xchg
and
inc
adc
aaa
out
imul
xor
xchg
clc
rcll
xchg
and
dec
push
mov
arpl
scas
jno
in
jge
cltd
push
fisubs
popa
push
repz
inc
and
add
xor
imull
repnz
add
and
sub
sub
jge
sti
cmpsb
jle
push
addl
test
cmpsb
xchg
push
add
mov
inc
into
push
jg
fcmovne
arpl
or
or
xchg
xlat
mov
test
imul
jns
jno
inc
icebp
aad
sbb
fsubp
push
in
mov
xchg
jmp
sub
sahf
jge
movsl
mov
rcll
push
fsubrs
aad
push
push
inc
frstor
das
mov
sub
mov
popf
in
mov
xchg
pop
mov
popa
cmp
pop
pop
mov
cmpsb
adc
cli
add
push
mov
rclb
push
sbb
aad
mov
jmp
push
push
adc
enter
lods
addr16
dec
pop
xchg
int
stos
lret
les
mov
mov
scas
repz
mov
sahf
outsl
popl
sbb
std
ret
ficomps
push
vpor
jmp
add
sbb
ficomps
sbb
adc
cs
stos
imul
mov
mov
add
push
aad
jle
sub
lcall
leave
mov
adc
mov
mul
je
push
mov
mov
jp
enter
imulb
mov
sahf
and
inc
mov
fst
pop
dec
inc
fcomi
sub
sub
add
clc
ret
jo
sbb
fwait
fwait
andb
xor
sbb
push
push
lret
add
or
sub
push
int3
cmpb
and
test
insb
ret
and
das
adc
popf
mov
lea
and
in
int3
jp
jmp
or
mov
pop
pop
das
mov
mov
cmpsb
gs
ljmp
mov
sarb
std
dec
incl
xchg
push
mov
cmp
ljmp
test
pop
sbb
cmp
xlat
cmpsb
or
add
popf
dec
aam
jmp
std
xor
aaa
les
jno
jmp
xchg
shl
ljmp
out
ret
xchg
jo
stos
subl
and
add
icebp
sub
push
jmp
xchg
out
mov
jmp
out
jp
pop
test
addr16
sub
mov
lods
and
addr16
mov
push
imulb
movsl
cld
push
xchg
dec
cld
or
jle
jl
ror
or
stos
push
pusha
testb
into
outsb
int
xchg
dec
loope
jmp
aaa
jne
std
xchg
push
push
inc
ss
lock
sub
xchg
cmp
in
mov
cmc
inc
lods
sti
enter
dec
xchg
dec
sbb
mov
mov
fisubrs
xchg
cli
in
gs
fsubr
out
push
adc
sbb
pop
cmp
xchg
popf
push
icebp
inc
popf
xor
mov
or
lret
inc
call
jmp
mov
loopne
scas
int
inc
js
aas
mov
xchg
mov
sub
insl
dec
stc
stos
jbe
clc
mov
pop
lcall
mov
mov
shrb
hlt
push
movsl
dec
inc
jo
mov
call
stc
out
mov
orb
cmc
mov
out
mov
cmp
ret
shll
push
mov
fbld
stos
fiadds
xor
or
sbb
mov
cs
inc
dec
xchg
mov
aaa
sbb
dec
enter
cld
mov
jge
push
inc
sbb
enter
ret
lret
inc
cld
xor
jl
dec
bound
pop
dec
cwtl
and
mov
inc
mov
add
das
jmp
jae
pop
fdivrp
sub
mov
mov
sub
add
ljmp
push
jle
ret
ljmp
subb
or
lea
bound
add
lock
mov
int
jae
out
mov
faddl
dec
inc
fsub
mov
imul
xchg
adc
outsb
or
sub
push
or
rclb
ja
adc
neg
data16
ds
mov
cwtl
cmp
pop
jnp
and
dec
fisubrl
sahf
popa
lea
js,pn
xor
call
cmovle
clc
jg
sub
mov
dec
push
subl
and
fsts
lea
js
inc
test
inc
ret
nop
rcr
cmpsl
adc
into
add
sbb
test
sub
ss
sbb
negl
mov
fcmovnb
out
rcrb
sub
ljmp
mov
mov
frstor
lcall
xor
dec
imul
mov
xor
stos
sbb
outsl
adc
push
cltd
add
pop
shr
sub
push
into
repnz
imul
ds
pop
std
add
test
lret
sub
scas
out
push
add
imul
mov
pusha
cltd
add
mov
push
dec
hlt
enter
fiadds
cs
sbb
push
subl
imul
push
imul
jmp
and
movsl
aaa
fbld
mov
dec
ss
inc
or
inc
push
mov
xchg
rol
sub
in
cmp
cmp
jo
shlb
outsb
les
ja
int
and
pop
insl
dec
jecxz
dec
shlb
aaa
movsb
out
pop
sti
xchg
outsl
mov
sub
xor
xor
pushf
add
insl
adc
popa
sbb
out
lret
je
loop
shll
jmp
pop
scas
movsl
push
and
pop
ret
dec
add
jg
and
pop
aam
pop
aaa
mov
mov
cmp
and
cmp
sub
push
test
jmp
lds
je
add
dec
test
jo
mov
add
mov
fs
add
insb
mov
out
mov
inc
mov
test
je
lds
push
xchg
inc
mov
xchg
and
out
lods
inc
dec
fwait
push
out
adc
mov
inc
mov
mov
inc
mov
scas
adc
fldcw
sub
cld
into
cmpb
xor
dec
inc
xchg
cmpsb
repnz
insl
rcr
cmp
test
xor
xchg
mov
mov
divl
dec
aas
shl
cmpsl
loop
or
xor
adc
mov
xor
sti
cmpsb
iret
mov
inc
lcall
push
enter
sub
pop
add
daa
inc
insl
jns
iret
in
sub
bndstx
xchg
sbb
dec
jmp
idivl
jl
in
jle
popa
sbb
pop
in
jp
les
imul
lock
adc
ss
lods
jne
loop
mov
xchg
and
or
xchg
lahf
out
adc
lea
mov
add
mov
push
mov
push
call
push
cltd
sub
jp
loop
pop
jmp
inc
cmpsb
in
or
cld
fildl
push
push
sbb
inc
jae
pop
adc
mov
fcmovb
int
mov
bound
sub
or
or
addr16
jmp
and
pop
call
ja
dec
push
in
mov
dec
pop
test
adc
jae
jb
test
ljmp
sub
push
jnp
sbb
xchg
insb
movsb
iret
dec
in
adc
fisubl
sub
xchg
jge
mov
jl
aas
movsl
call
mov
jp
inc
repnz
add
pop
fmulp
jb
adc
adc
inc
mov
lods
inc
iret
jmp
icebp
popf
xchg
iret
sbb
push
mov
pop
add
inc
push
in
nop
xor
pop
std
aaa
int3
mov
es
push
pop
mov
adc
lea
cmp
adc
in
mov
mov
and
dec
ret
pop
sub
mov
ds
lods
mov
jge
and
push
jmp
popf
add
dec
push
xchg
icebp
mov
mov
mov
iret
popf
int3
repnz
imul
mov
mov
inc
xor
cmp
pop
movsl
mov
xor
movsb
movsb
lret
inc
int
test
xchg
leave
dec
stos
mov
mov
pop
movsb
jecxz
test
dec
stos
mov
xchg
mov
iret
lahf
mov
push
inc
mov
pop
dec
xchg
cmp
ljmp
jle
cmp
lods
cld
pop
mov
sbb
and
mov
and
dec
enter
mov
or
lcall
in
adcb
pop
lods
int3
test
cmc
aad
or
int3
cmp
aam
xlat
sbb
outsb
scas
sbb
sbb
insb
pop
or
test
in
pop
mov
jb
dec
lods
iret
and
mov
in
pop
ret
roll
lods
les
sbb
lock
cmp
rcrb
movsb
jg
cmp
inc
faddl
adc
dec
popf
cmp
addr16
bound
lahf
enter
inc
adc
lret
lods
push
enter
pop
clc
test
lods
cmp
xor
inc
adc
mov
ds
jbe
mov
add
mov
and
js
and
scas
mov
stos
push
jl
xor
sbb
cmpsb
lea
xor
je
pop
dec
sbb
or
mov
call
outsl
outsb
sbb
fwait
cmp
dec
and
xchg
insb
or
push
in
testb
xlat
mov
cs
mov
jae
adc
pop
rcrl
adc
xchg
inc
js
data16
test
popf
stos
js
movaps
stc
cwtl
pusha
pop
sub
not
push
pop
shlb
mov
shlb
int
fstpl
mov
addr16
mov
addr16
xchg
add
mov
inc
fisttpl
sub
xchg
cmp
pop
cmp
and
lock
mov
xor
iret
adc
add
lret
mov
mov
jp
dec
and
out
shlb
popa
mov
xchg
sahf
xlat
test
adcb
xor
xor
fimuls
movsl
xor
shlb
in
adc
sbb
pushf
jo
mov
push
pusha
inc
test
in
xchg
mov
dec
xchg
adc
jl
push
rcr
and
pop
lods
sbb
jne
mov
lods
nop
scas
mov
ficoms
mov
rolb
xchg
jg
mov
shl
adc
cmp
int
jbe
sub
lret
mov
lret
add
adc
xor
push
xor
xchg
jmp
jno
int
or
push
mov
xadd
mov
rcrb
push
aas
dec
cmp
and
in
out
adc
sbb
mov
cmp
mov
cmp
out
cmp
sbb
int3
inc
push
sbb
mov
movsl
or
ret
lods
shl
stc
inc
cmp
icebp
xchg
jnp
sbbl
pop
fs
insl
sbb
jl
cmpsl
push
popl
fnstenv
and
push
movb
pop
push
rcrl
iret
fstpt
fistps
popa
lret
push
push
icebp
lret
cltd
push
mov
xchg
push
xor
std
idiv
mov
mov
mov
aam
in
add
dec
dec
and
inc
test
jb
bound
lods
dec
pop
or
dec
mov
call
icebp
or
test
fisubrl
cmp
daa
dec
fsts
pop
and
or
fdivrs
test
mov
mov
out
xchg
out
das
jb
ja
call
xor
roll
lea
push
out
add
dec
and
sbb
sub
push
int
jae
add
ja
cmp
int
rcrb
push
ds
push
mov
jbe
dec
mov
push
sbb
sub
cmp
jbe
push
mov
aad
adc
movsb
mov
dec
mov
stc
rolb
pop
cmovl
mov
imul
cwtl
iret
std
cmp
repnz
or
jl
mov
mov
and
sbb
or
iret
and
jae
dec
jecxz,pn
mov
pushf
mov
adc
fs
int
ret
and
sbb
loope
sbb
push
sbb
in
push
or
lret
fmull
jl
xchg
cmp
test
mov
bound
xchg
in
mov
xchg
pop
sbbb
ffreep
ret
scas
imul
jmp
dec
ss
hlt
test
imul
rcrb
aam
add
rol
rclb
pushf
insb
repz
push
fnstcw
out
js
add
dec
fmuls
ljmp
popf
or
ja
je
or
pop
outsl
sbbl
es
in
and
cmp
sub
mov
sbb
cmp
and
adcl
lcall
cwtl
aad
mov
out
jae
mov
cmp
dec
jbe
jo
iret
cs
js
cltd
sbbl
and
pop
cmp
daa
jecxz
add
or
test
inc
jg
pusha
shlb
push
cmpl
dec
sub
and
inc
push
dec
sbb
and
sub
xor
xchg
dec
aas
into
adc
sti
cltd
push
mov
out
cmpsl
cltd
dec
hlt
ljmp
adc
adc
mov
pusha
sarb
mov
stos
xchg
ja
loop
lods
or
sti
pusha
xlat
daa
and
int
xchg
movsb
stos
sbb
ja
in
shrl
andl
imul
lds
push
xchg
mov
nop
sub
fs
aam
dec
adc
cmp
add
out
out
hlt
xchg
mov
dec
push
dec
mov
call
cmp
arpl
es
out
adc
jge
neg
and
adc
call
mov
sub
mov
inc
inc
mov
in
js
imul
cmc
sbb
mov
adc
inc
bound
loope
cmp
pop
test
out
dec
fcomp
mov
icebp
add
pusha
es
pop
inc
sbb
pop
mov
data16
int3
mov
or
pop
dec
jbe
lret
icebp
mov
dec
pop
cmp
out
fwait
scas
inc
imul
repnz
xchg
cmp
xlat
fcomps
mov
cmp
and
and
mov
or
gs
cli
idivb
fidivs
adc
outsb
stos
shll
xor
daa
add
aad
pop
jns
xor
sub
loopne
push
decb
mov
dec
daa
fistl
mov
imul
sbb
movsl
lret
out
mov
dec
mov
xchg
pop
and
aam
push
and
lcall
test
cmp
sahf
and
jae
jecxz
push
xchg
pop
addr16
inc
xchg
mov
push
ret
mov
frstor
out
jge
adc
arpl
loopne
inc
mov
jecxz
inc
xchg
jl
es
int
sbb
int3
sbb
out
and
in
out
sbbw
cltd
cli
mov
sub
and
popa
add
mov
rolb
mov
sub
scas
and
andb
dec
fstp
fnsave
mov
in
pop
rolb
dec
mov
pop
scas
repnz
loope
and
test
push
xchg
movsb
and
pop
je
daa
sbb
push
enter
aas
pop
test
push
das
sarl
jbe
leave
push
add
ds
cmp
xor
pop
mov
int3
stos
sub
scas
lock
push
inc
inc
repz
dec
mov
ja,pn
or
sbb
std
push
add
in
jge
iret
xchg
sub
scas
jae
and
add
orb
into
aaa
sub
ror
cmc
jecxz
pop
jp
jl
sbb
bswap
xchg
cltd
test
fcoml
mov
sbb
push
in
inc
cmp
inc
cmp
cltd
mov
mov
and
mov
out
xchg
and
cmp
movsb
sub
jmp
xlat
jmp
sti
stos
test
jge
push
lret
or
sbb
js
arpl
xor
je
shrb
cmp
out
sbb
loop
daa
fwait
adc
xor
jge
fcomps
pop
clc
mov
out
or
shr
add
jle
inc
and
jl
es
scas
jne
cld
call
and
sbb
sub
inc
testl
cwtl
test
adc
jmp
push
add
mov
jl
xchg
loop
push
fisubrs
fdivr
xor
mov
andb
test
movsb
ret
xor
jp
int
add
repnz
xor
sub
and
push
lods
divl
es
xchg
cmpsl
cmpl
lret
lahf
in
int3
push
outsl
mov
jns
in
adc
xor
movb
int
sub
sub
subl
lcall
xchg
mov
imulb
jmp
pushf
popf
int
mov
and
dec
int
movsl
mov
fnsave
fs
inc
out
daa
loopne
add
adc
inc
adc
aaa
dec
out
push
xor
jl
and
sub
add
mov
push
xor
sub
mov
movsl
sub
pop
sysret
cltd
pop
adc
lods
xor
fstps
mov
xor
mov
cld
xor
outsb
mov
xchg
push
and
aas
iret
mov
xor
fidivl
call
loope
dec
sub
in
jae
cmpsl
xchg
xor
xlat
adc
lret
push
rcrl
inc
xchg
and
insl
ss
in
jmp
repnz
mov
push
jmp
adc
call
mov
jb
ja
or
adc
add
xor
push
xlat
and
les
into
mov
into
sbb
sub
cmp
icebp
pop
pop
and
mov
ret
jl
jl
stos
iret
xor
sub
push
jbe
in
insb
pop
cmpsb
ss
cmpsb
call
adcl
xchg
divl
adc
pop
mov
add
in
push
cmpb
push
xor
out
pop
add
push
jg,pt
adc
push
aas
and
insb
std
jl
es
sarl
mov
jmp
loop
insb
movsl
xchg
rorl
popf
jmp
iret
sbb
adc
loop
cmp
add
xchg
pop
arpl
jl
popf
push
iret
daa
inc
pop
pop
cmp
addr16
push
scas
sub
dec
cmp
mov
jmp
test
movsl
push
movsb
movsb
pushf
rcrb
push
stc
xchg
push
fs
fnstenv
je
lret
push
jp
push
push
stos
xor
jb
xor
call
fnstcw
mov
data16
pop
gs
sahf
popf
cmp
jns
inc
int
dec
lods
push
or
pop
add
rorl
ds
pop
fisttpl
cmp
inc
xor
pslld
xor
push
cld
ds
sahf
insl
push
xchg
insb
mov
add
pop
dec
jbe
mov
fimuls
or
xchg
stos
jmp
jmp
cld
fisubl
js
jae
cmpsl
sub
xor
leave
xchg
jmp
jnp
jnp
push
in
mov
jecxz
enter
xchg
sub
rcrb
dec
jp
fisubl
push
mov
mov
int3
scas
pop
push
loop
or
stc
cmp
in
gs
std
and
aaa
divb
add
les
jmp
sbb
mov
jmp
js
aad
into
cli
scas
sti
cli
xchg
cmp
scas
fbstp
out
test
cmpsb
mov
cmp
xchg
fistl
test
hlt
pop
into
pop
xchg
decb
aam
adc
dec
repz
mov
ret
pop
dec
xor
mov
pop
cmp
orb
inc
jmp
lcall
mov
dec
fisttpl
loop,pt
ja
test
and
and
aam
cmp
sub
mov
and
sahf
push
push
imul
push
mov
adc
idivb
mov
sbb
xchg
sarb
movsl
popl
and
xchg
insb
mov
xchg
loopne
inc
cmp
test
arpl
popa
pop
inc
pop
cld
aam
jns
mov
push
add
and
and
dec
lods
das
cmp
incb
and
imul
mov
fisubs
and
lcall
ss
js
cmp
mov
fsub
arpl
xlat
xchg
adc
mov
mov
add
rorl
cwtl
test
or
sub
shrb
pop
pop
push
addl
int3
fwait
pop
dec
insb
jg
in
mov
fsts
jbe
and
jmp
and
ja
pusha
or
push
fistpl
sub
fidivl
jb
xor
and
shlb
js
pop
fldcw
mov
adc
leave
fsubp
stos
or
mov
les
ret
mov
in
lock
add
ja
jg
sbb
outsb
xor
jnp
lcall
ds
stc
push
popa
cmpsl
xor
fiaddl
xlat
lret
mov
lds
inc
fmul
sub
push
or
pop
lds
cld
cmp
movsl
and
fs
sbb
addr16
aam
push
lds
cwtl
nop
and
add
pusha
lock
cs
mov
cmpsb
xor
paddusb
leave
xchg
ds
rdtsc
outsl
idiv
cs
adc
pop
jl
scas
fwait
pushf
push
imul
es
pop
jg
repz
repnz
inc
test
cmp
adc
xor
jno
xor
push
push
xor
push
stos
outsl
jne
test
mov
shr
imul
in
jo
inc
add
push
ja
inc
pop
xchg
jle
mov
icebp
orl
outsb
lock
and
xchg
loopne
cli
hlt
inc
data16
and
dec
sub
arpl
push
jmp
pop
cltd
or
outsb
data16
outsb
arpl
test
add
repz
mov
sub
fcomi
shlb
lods
out
in
lcall
clc
daa
sbb
pop
sarb
in
filds
sbb
mov
ljmp
test
cmpsb
rclb
mov
sub
jae
xor
push
or
mov
aas
enter
cmp
test
pushf
hlt
pop
stc
pop
fistl
xchg
xchg
es
jns
push
sub
add
mov
and
sbb
pop
dec
sub
fisubrs
cmp
adc
jmp
out
in
sub
push
rcrb
xchg
scas
stos
jns
inc
outsl
nop
xor
jle
fsts
cs
or
clc
or
test
jo
mov
stc
add
push
add
and
add
out
ret
xchg
bts
or
dec
jns
jg
xchg
jae
xor
movsl
xor
ror
insb
xchg
dec
idivb
dec
xor
ja
fdivrl
and
push
xchg
gs
les
mov
cmp
cltd
jo
sbb
mov
loop
or
sbb
xchg
adc
das
mov
add
inc
lods
xor
dec
divl
xchg
cltd
xlat
adc
in
add
dec
sbb
fucomp
test
add
ret
addr16
and
aas
in
mov
das
out
xchg
ror
inc
xchg
inc
mov
jmp
lock
xor
ja
inc
addr16
dec
in
je
sub
dec
jne
dec
mov
ret
ljmp
lods
daa
push
jns
stos
inc
pop
cld
icebp
cmp
aas
test
jbe
mov
mov
and
mov
lods
test
xchg
jmp
pop
cmp
pop
pop
in
dec
in
jo
mov
cmpsl
xor
xlat
pop
mov
test
bound
pop
subb
ds
test
addr16
mov
scas
adc
xor
push
and
dec
sub
insb
inc
xor
dec
jecxz
and
and
sub
cwtl
les
mov
cli
jae
mov
mov
and
mov
arpl
or
fmul
add
sub
imul
out
inc
negl
dec
push
inc
jge
fcmovnu
les
or
movsl
push
fwait
xor
sub
cmp
push
jmp
sbb
test
mov
mov
popf
pusha
out
xchg
daa
decl
hlt
jae
bound
test
hlt
cmp
mov
popl
bound
mov
mov
xchg
and
dec
push
xchg
sbb
dec
pop
not
js
mov
xor
scas
mov
mov
das
pop
cmp
mov
adcb
adc
shrb
xor
pop
xor
mov
sub
jecxz
popf
jp
and
inc
fldl
and
call
jae
stos
xor
cli
sbb
inc
adc
sbb
outsb
repnz
xchg
cmp
or
mov
roll
fcmovu
xchg
inc
jbe
xor
xchg
lea
xor
push
dec
sbb
call
mov
add
les
bound
out
push
push
xor
icebp
sbb
push
lds
popf
in
in
dec
ror
cld
int3
addl
adc
xchg
or
pusha
cs
test
jbe
ss
out
out
cmp
outsl
ret
xchg
or
add
outsl
movsb
jnp
mov
bswap
jno
mov
or
scas
add
scas
lods
pop
pop
rolb
and
mov
push
push
adc
inc
roll
adc
stos
fldcw
sahf
jb
dec
jbe
insb
insl
scas
fisubrl
int3
sbb
lock
sbb
push
xor
jmp
push
sub
je
pushf
xor
cmp
push
sar
add
pop
jns
lret
lea
jno
pop
sahf
in
xchg
les
imul
pop
sub
lret
push
inc
sbb
mov
popa
dec
and
test
cmc
push
sahf
mov
xor
and
cmpsb
cs
fs
mov
loopne
push
cmp
xor
pop
ret
xor
das
lods
test
sub
nop
fsub
sbb
adc
jns
adc
loop
ret
sbb
mov
insb
and
sar
adc
xchg
cmp
pushf
test
fdivr
push
add
or
les
lock
shrl
pop
iret
lods
lock
mov
movsb
mov
xchg
mov
mov
addl
jl
pop
push
dec
out
dec
lret
mov
pop
stos
into
add
movsb
test
orb
xor
push
and
test
cmpsb
js
xor
adc
roll
sti
in
daa
scas
ret
mov
xor
pop
shlb
rolb
adc
add
rolb
shll
scas
xchg
fnsave
inc
and
movsl
push
icebp
mov
in
cmpb
push
sahf
mov
std
dec
or
pop
ret
js
ja
icebp
mov
mov
cld
aad
inc
jbe
inc
jno
daa
cmp
push
cmp
getsec
mov
movsl
fnstenv
jge
jnp
sti
out
jp
sti
roll
mov
rol
nop
jo
mov
pop
jge
daa
cld
mov
outsb
into
outsl
aad
mov
adc
outsl
xchg
into
stc
ret
push
inc
in
xchg
orl
mov
jae
cmp
dec
mov
sub
xor
sbb
rcrl
pop
dec
push
call
dec
mov
jge
daa
fstl
mov
sbb
jnp
pop
adcb
lods
sub
and
xor
add
test
inc
mov
jnp
rorb
test
push
enter
lods
fs
sub
aaa
mov
cmp
orl
call
mov
cmp
xor
pop
divl
arpl
jae
cmpl
adc
fiadds
sarl
sbb
push
jnp
dec
mov
sarb
ljmp
adc
mov
lcall
xor
push
mov
addr16
popf
loopne
call
push
pop
mov
jno
imul
inc
sub
push
xor
pop
jp
sub
xchg
sbb
fldcw
or
mov
mov
ds
xchg
imul
inc
cmp
push
dec
aad
pop
sbb
mov
iret
adc
and
xor
push
xchg
aaa
js
cmpsb
cli
mov
mov
xlat
cmp
xor
jns
stos
cs
jle,pn
jno
mov
dec
dec
aas
dec
out
mov
push
loop
xchg
jge
adc
aad
dec
call
call
mov
push
into
sub
adc
sbb
jns
adc
or
mov
push
and
dec
or
mov
mov
scas
mov
cltd
push
icebp
xor
sahf
adc
inc
cmc
sbb
andl
orb
cmp
or
sbb
xchg
insl
aam
test
xor
fsts
dec
insl
cmpsl
xor
or
popf
and
push
lret
insb
inc
add
jae
stos
int
mov
jmp
jne
sub
and
cmp
test
mov
push
in
dec
mov
pusha
sbb
sbb
movsb
scas
pop
sub
data16
cmpsl
add
sti
mov
movsl
sahf
dec
xchg
nop
dec
shll
mov
sbb
loop
clc
sbb
inc
cld
inc
mov
popa
push
mov
aam
fs
pop
xchg
push
cmp
es
adc
xchg
mov
cld
or
loope
ja
arpl
scas
pop
pusha
js
inc
mov
setae
idiv
and
cmp
lcall
inc
sbb
movsb
int3
js
call
dec
cmp
repnz
in
or
mov
sub
or
jmp
iret
insb
adc
cmp
das
ljmp
std
shll
ret
push
mov
lahf
pop
cld
lret
ret
negl
into
sbb
xor
in
into
mov
jp
lock
mov
mov
inc
dec
xlat
cmp
enterw
adc
push
xlat
mov
or
ret
sbb
sbb
mov
fwait
jg
mov
xor
cmpsb
xor
or
sbb
gs
int
xchg
out
sub
push
int3
xchg
fadds
mov
mov
loopne
orl
arpl
jmp
scas
inc
clc
add
icebp
xchg
scas
mov
adc
arpl
es
jge
fs
mulb
fisubl
and
or
lret
rorl
gs
out
data16
jg
dec
and
scas
mov
sti
in
adc
mov
mov
jl
subl
es
mov
aas
xchg
xor
sub
dec
gs
lret
lods
push
outsb
mov
adc
mov
fmull
outsb
stc
sbb
aam
cmp
jg
lahf
dec
stos
dec
adc
mov
inc
adc
in
imul
cmp
jmp
or
xchg
and
mov
push
sbb
xor
mov
lods
mov
rclb
push
dec
inc
xchg
mov
dec
in
lcall
stos
and
das
cmp
cmp
push
xor
pop
mov
push
stc
xor
sbb
xchg
cmp
mov
cmpsb
cmpsb
ss
loopne
jne
push
in
icebp
mov
hlt
jecxz
fstl
pop
sub
push
cmp
inc
sub
sbb
sar
inc
sbb
and
inc
jge
fisubrl
in
jbe
jmp
and
add
lock
push
sub
push
sbb
inc
inc
outsb
xchg
xchg
adc
test
cmp
mov
push
sbb
es
inc
inc
jmp
jb
cmp
mov
sbb
les
sbb
push
jno
sbb
or
fisttps
popa
ficompl
movsb
jg
mov
test
push
idivl
adc
repz
sub
mov
outsl
jl,pn
insl
cmp
icebp
mov
rorl
leave
cmp
cmp
hlt
je
dec
mov
.byte
add
add
add
add
and
add
pusha
add
addb
add
add
add
cmp
add
add
add
add
add
push
add
add
or
add
add
add
mov
add
addb
add
add
add
nop
add
add
or
add
add
or
dec
add
dec
add
dec
add
dec
add
add
add
add
add
shrl
out
lock
mov
inc
clc
fwait
aas
xor
xor
cmpsl
xor
pushf
push
adc
lret
fs
push
mov
and
mov
jecxz
cmp
in
shr
push
daa
gs
cmp
xchg
mov
push
or
inc
lahf
outsl
aaa
sub
in
inc
cmpl
dec
int
jno
fcom
jg
add
loope
fidivl
lock
pop
sub
iret
adc
sbb
gs
jl
cmp
cli
or
inc
jnp
mov
movsb
pop
ss
adc
sub
das
fs
ret
xchg
mov
jl
pop
mov
negl
nop
dec
arpl
add
xor
clc
inc
pop
jg
int3
sbb
fstp
popa
ljmp
inc
scas
les
pop
in
push
popf
pop
rep
or
popa
lds
bound
movsl
mov
lret
loop
inc
cltd
push
int
lock
ror
pop
inc
in
add
or
dec
andl
and
pop
jo
ret
inc
subl
test
outsl
mov
mov
lcall
std
.byte
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
call
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
rcrb
addl
add
add
mov
mov
mov
mov
xor
jmp
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
dec
dec
mov
sub
xor
mov
push
add
pop
sub
push
push
adc
pop
pop
add
jmp
iret
pop
gs
dec
loope
hlt
sbb
fidivrs
test
add
add
mov
jmp
mov
test
cmpsw
push
std
repnz
sbb
jmp
mov
test
xor
imul
in
lahf
adc
jge
and
xorb
rorl
mov
xor
fdivr
sbb
sub
lds
cwtl
push
or
negl
mov
adc
push
jl
xchg
add
sbb
or
push
add
mov
hlt
push
or
cmp
ret
jbe
jle
pop
mov
mov
cmp
push
iret
pop
or
push
push
pop
fcmovb
jnp
out
mov
call
pop
cmc
push
push
cmp
fwait
int3
int3
aaa
das
mov
sub
mov
into
push
fwait
hlt
je
sbb
sub
call
mov
std
sbb
enter
or
sbb
rcll
insl
aad
adc
fwait
cltd
ds
mov
repnz
xor
data16
call
jnp
adc
add
test
push
lret
adc
xor
push
sub
leave
xchg
subb
stos
push
aaa
int3
lock
jo
es
mov
sbb
call
cs
nop
mov
jg
into
mov
mov
push
jp
push
push
loop
aas
repnz
punpckhwd
roll
scas
sbb
mov
lock
in
push
xor
fsub
jbe
mov
mov
or
test
pop
arpl
jb
imul
xor
lock
in
inc
bound
or
sbb
subl
push
cmp
jb
mulb
sbb
or
pop
movsb
out
mov
xor
cwtl
lret
add
ficomps
mov
jae
outsb
and
cmp
testl
inc
popa
je
outsb
cmp
stos
imul
mov
and
mov
icebp
xchg
or
popf
icebp
mov
jecxz
loope
dec
fisttps
jno
sub
or
pushf
fistps
add
dec
xchg
sub
jmp
cltd
into
fadds
mov
mov
xlat
xchg
decb
xor
out
or
push
sti
mov
adc
sub
repz
daa
popf
stc
dec
jge
inc
pop
jnp
cmp
in
and
insb
cmp
cmpl
movsb
loop
outsb
xchg
mov
add
bound
mull
xchg
sub
bound
daa
in
adc
popa
cwtl
jle
loopne
fnstcw
jmp
lret
fs
and
clc
add
test
mov
shll
jne
js
mov
ret
test
mov
rorb
mov
int
mov
clc
adc
inc
push
inc
mov
dec
xor
push
sbb
mov
dec
mov
xchg
mov
fs
jns
jno
mov
jmp
outsb
sbb
insl
in
flds
jo
xchg
add
fldenv
push
jecxz
mov
jo
xchg
test
fs
mov
ret
mov
push
lock
fdivp
mov
jno
xchg
daa
in
call
outsb
jnp
xor
inc
and
call
in
daa
lock
adc
outsb
jns
movsb
int
pushl
xor
outsb
jnp
jne
push
mov
lcall
mov
fs
test
je
mov
icebp
bound
and
das
sub
daa
mov
or
jecxz
mov
mov
xchg
mov
mov
push
test
xchg
daa
addr16
xchg
daa
daa
sub
js
xchg
mov
aas
mov
jl
mov
inc
and
jbe
mov
adc
outsb
roll
repnz
inc
ja
insl
and
adc
fs
repnz
fdivrl
cld
stos
outsb
sbb
outsb
xchg
jmp
outsb
xchg
mov
cmp
pop
xchg
push
mov
jne
cmpsl
mov
loop
lret
push
xor
lock
cld
push
jl
loopne
jnp
mov
xchg
jno
outsb
xchg
lods
stos
pop
xchg
and
lock
cld
ja
cld
pop
sub
es
mov
insl
mov
and
jnp
mov
xchg
xlat
or
mov
pop
arpl
cwtl
ret
xchg
mov
insl
mov
and
jnp
mov
xchg
dec
and
jns
outsl
xchg
mov
insl
mov
and
jnp
mov
xchg
lock
and
sub
mov
and
mov
pop
sub
es
mov
insl
mov
mov
mov
sub
lock
and
call
movsl
mov
inc
aad
jmp
dec
and
mov
popa
pop
subb
and
mov
aad
jmp
dec
shll
adc
cwtl
cmpsl
scas
or
outsb
xchg
mov
xchg
or
mov
outsl
xchg
jnp
outsb
xchg
mov
xor
add
xor
test
lock
bound
and
ljmp
fsubs
mov
outsb
jns
jmp
outsb
pushf
mov
out
lea
lahf
outsb
mov
and
sub
mov
push
aam
inc
outsb
xchg
push
pop
inc
ds
imul
lea
nop
cld
movsb
xchg
outsb
scas
mov
icebp
in
and
in
arpl
shl
push
out
or
mov
adc
push
insb
call
xor
nop
push
push
lods
pop
and
test
repz
and
and
adc
outsb
xchg
mov
outsb
xchg
mov
outsb
xchg
mov
outsb
xchg
mov
dec
sub
mov
outsb
xchg
mov
inc
add
inc
js
dec
stos
fisubrl
fsubl
fisubs
mov
outsb
xchg
mov
fs
ljmp
sub
xchg
cld
push
mov
imul
repnz
rclb
cmp
push
inc
mov
cmc
fdivrs
push
inc
cmp
fs
sti
cmp
loopne
nop
sub
cmp
jnp
fs
leave
out
stos
xor
repz
pop
popf
negl
or
xchg
add
add
out
clc
mov
pop
je
mov
nop
mov
push
adc
test
lods
push
shr
push
xor
push
mov
push
sbb
fcoml
fadd
push
push
je
sub
fisubrs
pop
sbb
adcl
les
adc
fisttpll
sbb
mov
test
repnz
pop
mov
mov
les
or
or
das
jp
sbb
dec
ret
out
mov
adc
scas
mov
out
loop
jmp
cmc
aam
and
sub
loopne
cmpsb
inc
or
ss
aaa
je
aam
ds
inc
xchg
ss
sbb
ds
pop
pop
dec
hlt
test
jo
mov
loopne
test
out
xchg
in
gs
clc
cmp
dec
sub
mov
xchg
sbb
dec
push
sar
xor
sbb
sub
cmp
lds
mov
pop
shrl
inc
aam
stos
aaa
sbb
mov
aaa
cmp
push
push
push
in
xchg
push
outsb
inc
xchg
jns
mov
daa
xchg
mov
mov
pop
cmp
in
stos
xchg
mov
mov
into
add
insb
cld
or
mov
jl
in
jns
add
mov
inc
mov
cmp
fisubs
mov
nop
and
mov
lods
outsb
jle
int3
pushf
lods
or
pusha
test
sbb
pop
lahf
xor
jbe
scas
add
cli
xor
mov
js
inc
adc
jo
pop
icebp
mov
aad
cmpsl
xor
xor
test
or
in
outsl
jg
gs
negb
push
das
xlat
ret
cmp
mov
andb
loopne
ret
iret
das
mov
sub
or
fldt
or
and
test
xor
cltd
add
push
pusha
ja
out
push
adc
add
mov
pop
cmp
mov
push
xchg
out
jne
sub
dec
mov
das
adcb
mov
dec
mov
ss
mov
xchg
or
add
and
add
add
add
add
adc
and
push
sbb
adc
add
add
add
add
or
add
or
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
or
add
or
add
or
add
or
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
or
add
add
add
or
add
add
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
add
add
and
add
add
add
call
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
mov
add
pop
mov
add
jg
pushl
add
add
ja
jo
add
jg
js
add
add
sti
sti
sti
sti
add
add
js
add
add
ja
ja
jo
add
js
jo
add
js
jo
add
js
jo
add
dec
mov
mov
ja
add
dec
int3
int3
inc
mov
pop
ja
jo
ja
add
dec
int3
int3
inc
dec
jo
cmpb
pop
xchg
add
inc
inc
jo
add
add
add
int3
int3
add
inc
ja
mov
jo
jg
incl
inc
inc
mov
push
ja
pop
jg
decl
add
ja
ja
ja
js
jo
xchg
mov
inc
add
add
add
ja
jo
js
ja
incl
ja
mov
jo
xchg
mov
incl
clc
js
incl
jg
jo
add
jg
pop
incl
jg
jo
add
pop
lock
jl
jg
jg
jo
add
add
jg
rolb
jg
jo
add
add
add
jg
jg
jo
add
add
add
incl
jg
jo
add
add
add
push
int3
jg
jo
add
add
add
rolb
add
jg
jo
add
add
add
add
add
add
jo
add
add
add
ja
ja
ja
xchg
add
add
add
mov
xchg
add
add
add
push
jo
add
add
add
js
mov
jo
add
add
add
pop
ja
ja
ja
ja
add
sarb
sarb
pop
rcrb
xadd
loopne
rolb
add
add
inc
add
inc
add
xadd
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
pavgw
add
repz
ud0
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
add
movsb
cmp
add
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
insl
mov
add
add
add
sbb
mov
jge
sbb
ret
pop
or
cmp
jae
pop
lods
mov
jg
test
les
mov
mov
sub
push
xor
or
xchg
popa
fs
pusha
outsb
push
mov
xor
jo
mov
mov
ret
mov
push
and
ja
xor
fs
test
or
rolb
gs
and
outsb
mov
decb
push
add
sbb
into
in
adc
daa
mov
jbe
mov
jle
scas
cmpsl
dec
fbld
inc
loopne
aad
adc
mov
sarl
cli
icebp
pop
cld
js
ret
pop
dec
inc
rdmsr
ror
and
cwtl
push
rcl
fbld
jno
adc
outsb
and
std
out
mov
fwait
inc
mov
xor
cmp
cmp
ret
ret
mov
sub
roll
enter
push
aam
mov
push
cmc
fistps
clc
ja
and
add
mov
aas
xchg
repnz
sub
xor
rcl
inc
and
arpl
push
aaa
mov
iret
jp
iret
or
es
inc
push
xchg
mov
xor
pop
and
jns
outsb
mulb
inc
dec
imul
stos
jecxz
xchg
xor
in
jbe
ffree
xchg
bound
push
add
stos
pop
mov
pop
arpl
movsb
rol
add
xchg
jb
sbb
aam
sbb
sbb
and
xchg
addb
lea
xchg
and
sahf
je
inc
arpl
inc
movsl
fs
pop
mov
jo
outsb
jle
mov
xor
sti
or
pop
sbb
dec
scas
pusha
scas
icebp
inc
mov
lock
push
rorl
stos
lds
sbb
pop
arpl
popf
push
push
jmp
sub
xchg
and
popf
lods
stos
es
mov
das
stos
sbb
data16
popfw
pop
adc
push
incl
out
shrb
lods
ljmp
jns,pt
and
inc
jl
push
inc
add
fs
sbb
add
jns
jno
loopne
xchg
repz
fldt
jns
es
out
inc
ret
mov
dec
mov
mov
push
cmpsl
jmp
sub
mov
fs
shlb
jae
pop
fmulp
imul
cmp
pusha
lea
int
outsl
stc
cmp
repnz
arpl
sbb
sbb
inc
push
mov
mov
push
aaa
mov
sbb
jmp
imul
or
xchg
xor
aas
sub
popf
nop
rolb
lods
je
or
cmp
pop
lods
aad
fiaddl
push
mov
loopne
ret
fsub
sub
fcoml
push
xlat
loopne
push
testl
add
push
inc
into
gs
xor
lahf
inc
pop
cmpsb
or
sbb
xchg
jnp
or
mov
add
movsb
repnz
rcll
xchg
mov
iret
aas
mov
cld
pop
add
add
add
push
cmp
sub
pop
jbe
outsl
lock
xor
lahf
pop
adc
inc
adc
sahf
xor
pushf
scas
adc
adc
pop
test
pop
xchg
sahf
fdivs
loopne
xor
fwait
lods
rorb
push
imul
dec
dec
es
call
xor
jmp
pop
jp
loop
out
push
je
roll
movsb
lea
cmc
imulb
std
clc
stc
insb
gs
cmp
fs
out
push
add
inc
testb
ficompl
ljmp
mov
jmp
loop
pop
dec
mov
jnp
mov
pop
fcmovbe
mov
cmp
sub
xchg
pop
xor
ljmp
xchg
jmp
jecxz
add
repnz
push
jne
mov
sub
xchg
add
mov
fidivrl
icebp
iret
lock
outsb
xchg
and
les
lahf
xchg
fiadds
nop
lret
mov
jbe
mov
loope
push
inc
lea
andl
iret
scas
and
jo
or
popa
rcrb
mov
dec
mov
mov
ss
loop
lret
mov
jl
mov
lcall
jbe
push
sbb
dec
popf
lods
mov
cmp
out
dec
mov
inc
adc
sub
xor
mov
aaa
leave
inc
sub
inc
or
mov
cmc
add
add
jg
les
cld
pop
jg
jle
scas
xchg
icebp
push
int
sub
xchg
pushf
int
mov
cmp
stos
nop
sbb
mov
pop
pop
ljmp
sbb
pusha
incl
scas
or
cmp
imul
movsl
shlb
out
movsl
xor
sti
jmp
sub
dec
xchg
xor
xchg
add
push
sbb
inc
lcall
mov
inc
mov
cmp
stos
rcrb
into
stos
cld
iret
xlat
es
push
jno
xor
mov
aad
cmp
add
std
xchg
jle
sbb
movsb
out
nop
jecxz
aam
push
sahf
mov
add
test
imul
lods
xchg
mov
js
into
add
jbe
std
iret
fsubrl
sarb
jb
out
adc
fsubrp
push
add
jecxz
test
mov
fdivl
push
mov
rclb
mov
ss
pop
ret
rorb
repz
jo
out
fistps
or
jmp
insl
cli
mov
nop
or
adcb
xchg
pop
adc
sbb
addl
cld
or
mov
adc
adcb
and
jg
sub
in
jecxz
jno
imul
mov
pop
test
lea
mov
test
lret
push
lea
gs
stc
sbb
cmp
xchg
jb
stos
xor
push
mov
repnz
idivb
popf
jo
cmp
jae
pop
stos
push
dec
mov
repnz
pop
push
lahf
dec
and
xchg
lock
mov
adc
cmp
insb
aam
dec
mov
xorl
lret
xchg
sbb
psadbw
ja
mov
pop
outsb
jecxz
jo
mov
or
out
jne
sti
jmp
addl
pop
mov
cld
sbb
pop
sub
pop
adc
pop
jne
shlb
loope
push
xor
sub
cwtl
aam
sbb
sahf
testl
movsl
mov
idivb
dec
sbb
mov
or
lcall
or
mov
or
ljmp
inc
mov
jle
and
in
jno
sbb
xorl
adc
call
push
jnp
test
cmp
ret
dec
xor
sub
adc
push
mov
xor
lock
call
mov
orb
aaa
out
std
mov
push
in
out
rorl
or
inc
push
mov
cli
push
fwait
lret
outsb
arpl
inc
push
fnstsw
push
stos
mov
fchs
js
sbb
cmp
ror
add
cwtl
popa
mov
cltd
scas
xor
jmp
sbb
cmp
repnz
sbb
push
jnp
nop
pop
mov
xchg
outsb
adc
pop
push
cmp
mov
pop
push
cmp
shrd
test
out
aam
inc
shll
lret
cmp
ret
and
fs
test
iret
sub
dec
rorl
outsb
ljmp
cmp
add
pop
aad
xor
jae
shl
cltd
hlt
inc
mov
dec
push
cli
and
xchg
cltd
pop
ss
push
arpl
daa
lret
mov
fs
rorb
scas
push
pop
push
pop
xchg
imul
pop
pop
lock
push
sub
cmc
jbe
imul
push
cltd
and
push
mov
pop
int3
call
stos
jo
or
inc
shll
rep
rorb
add
pop
jo
shlb
idivl
fsubr
gs
into
xchg
movsl
iret
push
mov
jb
inc
out
lds
cmpsl
loopne
sti
and
out
add
jmp
jb
mov
xor
jno
xor
xor
xor
mov
cmpsl
aas
push
xor
xlat
js
dec
shlb
out
ret
call
aad
jbe
sti
mov
lret
jb
aas
push
dec
cmc
xchg
or
xchg
addl
test
adc
cmp
popa
mov
out
xor
gs
mov
addr16
mov
inc
dec
daa
out
adc
fistpll
dec
sahf
push
repz
daa
and
sbb
push
mov
mov
lcall
std
dec
xchg
adcl
std
xchg
not
adc
mov
jecxz
aaa
cs
sub
es
pusha
cli
add
cs
dec
mov
xor
jle
jbe
push
test
sub
jne
int
data16
pop
cmpb
adc
dec
and
loopne
jp
mov
mov
xor
mov
insb
mov
test
ret
adcb
jo
inc
add
scas
mov
and
sbb
pop
jo
and
and
testb
iret
jo
add
movswl
jg
xor
fcomip
insl
fwait
clc
xor
sub
lcall
or
pop
divb
out
out
ja,pn
or
lock
loopne
inc
fisubl
push
xor
imul
in
jg
and
cmp
lret
pop
mov
lods
mov
aam
mov
cmp
pop
jae
ja
xor
lods
popa
out
fmuls
outsb
scas
mov
lcallw
test
hlt
and
jnp
mov
mov
test
or
psubusw
jle
add
fisubrs
imull
xor
add
cwtl
or
xchg
pushf
insb
mov
ja
mov
cwtl
mov
xchg
or
ret
or
test
ja
xchg
es
jmp
mov
loopne
cmove
insb
aas
mov
mov
mov
cmpsb
in
and
pop
sbb
stos
mov
ljmp
xor
cmpl
adc
mov
xchg
shll
dec
pop
push
push
outsl
push
jno
jns
enter
in
fimull
adc
jb
bound
adc
stos
or
test
sbb
imul
mov
add
sub
push
pop
cmp
outsl
inc
outsb
lods
mov
or
test
test
push
jnp
inc
jle
push
arpl
jo
push
jle
jp
test
jae
lock
sub
pop
add
adc
jnp
inc
nop
lea
xchg
jg
pop
mov
lods
hlt
popa
mov
pop
ret
mov
jmp
repz
sbb
add
aad
dec
lahf
daa
or
sub
cmpsl
xchg
sbb
leave
nop
mov
push
inc
jnp
sbb
in
lods
mov
and
sub
aaa
sub
aaa
and
or
xchg
xor
lods
sub
cltd
mov
dec
insb
jge
pop
cmp
jl
sbb
outsb
sar
lahf
adc
imul
xchg
pop
xchg
call
xchg
hlt
lea
push
jb
inc
fwait
sbb
or
mov
hlt
in
push
pop
or
sbb
pop
test
push
pop
jg
add
cmpl
rorb
dec
int3
sbb
mov
push
adc
mov
rorb
out
add
mov
xor
and
mov
popf
test
lcall
call
push
fisttpl
repz
lret
mov
jl
cmc
jo
xchg
push
loopne
cmc
pop
jmp
mov
cmp
int
cmp
lahf
dec
int3
enter
shll
push
clc
movsl
pop
mov
lds
mov
mov
sbb
jae
inc
loope
mull
repz
mov
popf
add
repnz
insb
out
scas
sub
je
int
pop
jmp
rorb
rclb
jle
jns
test
push
fisubs
push
cs
or
or
jae
rorb
fildll
addr16
das
and
sub
mov
adc
mov
nop
insl
ret
inc
ljmp
fldenv
jle
aad
pop
lret
jl
cs
sbb
add
in
add
cmp
out
pop
rorl
enter
cmp
mov
and
lahf
fisubrs
mov
fstpt
subl
in
add
dec
sbb
mov
cmp
shrl
lods
mov
dec
loopne
sub
mov
adc
adc
mov
mov
les
mov
xchg
mov
jb
and
sbb
fs
arpl
mov
scas
and
pop
and
mov
push
push
sahf
movsb
mov
sub
jle
dec
lock
jb
xchg
cmp
insb
pop
xchg
je
addb
mov
test
pushf
sbb
lods
jne
jmp
adc
daa
jecxz
lret
jecxz
and
imul
inc
dec
sti
iret
inc
dec
fmull
ljmp
mov
scas
or
dec
or
adc
pop
xor
dec
xor
nop
mov
clc
pusha
out
mov
jg
xchg
std
mov
int
stos
js
jae
movsb
mov
mov
xchg
xor
sbb
aam
adc
jae
or
cmp
loop
aas
mov
lret
int
sar
test
cwtl
ljmp
test
and
and
sbb
cmpsb
icebp
dec
dec
add
lcall
sbb
ret
mov
and
in
and
mov
mov
jbe
xor
pop
mov
mov
jne
mov
insb
leave
push
mov
cmp
mov
sub
sbb
cwtl
and
outsb
jb
scas
popa
add
icebp
inc
sub
arpl
lods
lcall
jnp
pop
and
dec
dec
push
fmull
mov
fdivr
orb
sub
mov
xchg
in
je
mov
sub
outsl
inc
pop
mov
xchg
push
addr16
cmp
pop
jg
aad
fadd
push
shll
loop
loopne
and
adc
outsb
movsb
xchg
mov
push
lock
push
inc
jne
and
cmp
and
scas
inc
or
mov
sub
fs
pop
in
popa
cli
pusha
dec
jmp
jp
hlt
pop
ds
sub
fidivs
out
sub
jae
inc
jmp
mov
sahf
imul
xchg
jo
jecxz
pop
cmp
daa
push
addr16
dec
js
jno
fnstsw
jg
push
pop
stos
arpl
sub
test
scas
pop
jmp
push
in
cli
lods
imul
es
xchg
inc
jo
es
push
push
loopne
push
sbb
imul
mov
mov
mov
inc
jbe
mov
ds
incl
ret
lds
push
sti
jecxz
mov
shrb
out
mov
shlb
xor
pop
cmp
jmp
pushf
gs
fcoml
in
xchg
sub
cmp
xchg
xlat
mov
fbld
out
bound
test
lods
pop
int3
and
mov
movsb
xor
push
sti
mov
or
inc
push
into
hlt
push
xchg
out
xchg
sbb
pop
push
dec
popf
jle
out
fistps
inc
icebp
push
jo
flds
arpl
inc
jo
ds
in
xchg
aas
jb
jle
xor
and
adc
in
fs
mov
mov
shrb
cmp
cmp
dec
fsubl
addl
pop
xchg
insl
ffreep
cmp
sub
int3
cmp
xchg
cmpsl
sti
test
xchg
repnz
mov
xchg
and
fsubrs
cltd
mov
test
adc
aas
sub
repz
in
cs
scas
add
movsb
aam
cmp
dec
popa
cmp
lret
dec
sbb
movsl
cmp
shlb
sti
into
jle
xchg
adc
mov
mov
sbb
rclb
fmulp
xlat
sub
es
aad
mov
pop
push
xchg
std
repnz
inc
xchg
jle
add
xchg
out
insl
sbb
daa
mov
repz
push
lods
icebp
and
mov
xor
dec
pushf
inc
cwtl
addr16
xchg
mov
mov
xor
push
outsb
mov
loope
mov
sbb
sub
shrl
insb
mov
fidivl
dec
js
mov
out
cmc
jb
pop
inc
jbe
jle
or
mov
insb
mov
imull
cltd
xchg
dec
out
mov
mov
xchg
iret
enter
ror
loop
dec
ss
mov
roll
icebp
push
push
stc
rcrb
mov
test
and
push
call
inc
mov
rol
stos
xlat
ja
mov
and
jmp
jne
out
js
ret
mov
leave
pop
das
or
xchg
inc
fcmovu
fnsave
out
add
dec
dec
cmpsb
shl
xor
mov
jno
push
mov
push
adc
fcmovb
pop
mov
cwtl
scas
push
ss
push
in
test
sbb
popa
cmp
jle
dec
test
lods
mov
mov
mov
in
scas
pushf
cmpsl
push
enter
add
lods
rcr
xchg
lahf
pop
ds
outsl
lahf
jns
push
cmp
fstpl
push
add
scas
in
das
jns
leave
add
xchg
push
cmc
mov
das
sbb
mov
inc
faddl
iret
shlb
xor
js
push
push
pop
aaa
pop
shlb
imul
in
jmp
mov
arpl
xchg
add
mov
xchg
cltd
nop
sahf
insl
lcall
jg
fldcw
push
sbb
fsts
and
stos
sbb
loop
fsubr
sarb
push
and
in
pop
daa
mov
je
sbb
mov
or
mov
xlat
das
loope
gs
push
mov
dec
cmp
ss
scas
in
insl
push
punpckhdq
pushf
repz
sbb
mov
cmpsb
out
mov
add
rorb
ficomps
mov
hlt
aam
push
cwtl
jl
push
pop
inc
xchg
fnstenv
cmp
repnz
and
lods
dec
lret
leave
and
fsts
inc
or
jns
out
xchg
jnp
insl
pop
fidivrl
mov
jl
repz
fmull
ljmp
sbb
cmp
out
mov
cmp
pusha
mov
cmp
les
mov
jne
pop
xor
xchg
enter
add
add
mov
scas
scas
out
insb
lock
das
out
repz
jns
adc
in
pop
loope
popf
xor
dec
xor
mov
scas
push
dec
add
xchg
ret
roll
rcrb
enter
jo
mov
pop
jg
adc
cs
stos
cmpsl
scas
or
mov
adc
pushf
xchg
lods
fistpl
lds
fstps
xor
mov
mov
xorl
rcr
inc
cmp
xor
mov
fistps
out
sbb
dec
std
xchg
sub
push
aad
sbb
loop
add
add
cmp
fmull
outsl
lods
mov
aad
dec
xchg
ljmp
dec
mov
lock
mov
cld
mov
add
xor
lods
fs
jnp
jmp
cmp
mov
cmp
or
mov
mov
dec
cmpsl
push
adc
in
roll
out
or
xchg
push
xor
stos
scas
mov
sbb
inc
push
adc
into
fisttpll
jg
push
jl
mov
decb
push
fucomip
jns
dec
add
out
popf
or
add
into
js
xchg
sub
or
push
aaa
push
int
jno
push
hlt
testl
push
and
and
inc
xor
or
dec
dec
jbe
shlb
dec
gs
inc
imul
mov
imul
loope
std
sbb
aam
fmuls
movsb
aaa
stc
mov
xor
cs
test
movsb
ja
cmpsb
insb
lods
stos
jns
movsl
ret
mov
int
jno
jnp
jecxz
adc
mov
jb
mov
mov
mov
cmp
ljmp
pop
add
sub
xchg
jge
fidivs
jae
lret
xchg
mov
lcall
sbb
push
cwtl
dec
push
xchg
aad
xchg
std
xor
dec
test
inc
mov
repz
outsb
push
mov
pushf
cltd
adcl
lret
and
adc
std
adc
bound
outsl
sbb
jmp
inc
mov
inc
mov
jge
add
rcrl
stc
or
and
push
xchg
pop
jmp
in
mov
ficoms
aaa
pop
xor
lret
in
inc
pop
xor
inc
pop
les
cli
mov
mov
and
sti
movsb
mov
pop
cwtl
inc
jns
lods
outsl
call
sub
lcall
adc
or
loop
ljmp
adc
mov
fwait
push
dec
jg
cmp
popf
push
sub
inc
xor
add
loop
incb
pusha
dec
xor
mov
popf
xchg
push
add
mov
push
mov
dec
mov
fwait
inc
pop
or
jno
out
int3
mov
push
xchg
inc
loope
sub
cmp
sbb
cmp
movsb
jmp
inc
in
ljmp
fistps
lret
call
xchg
push
add
cmpsb
hlt
rol
jecxz
in
jbe
jle
or
inc
dec
int3
loopne,pt
pop
lret
mov
fnstsw
ja
add
push
mov
push
xchg
rorb
call
repnz
add
push
mov
jbe
push
pop
sahf
cmpsl
mov
sub
push
loope
incb
pop
jge
lcall
mov
jecxz
neg
cmp
lret
pop
imul
inc
xchg
mov
mov
xchg
push
mov
fsubrs
dec
ljmp
push
push
add
fdivl
mov
les
and
outsl
push
enter
fadd
inc
ret
xor
adc
mov
shr
lea
aam
jle
push
mov
dec
mov
inc
mov
int3
das
xor
mov
out
loopne,pn
aam
mov
loopne
pop
jns,pt
fsubrl
xor
mov
cmp
sub
lret
jae
fistpl
sub
les
sbb
and
adc
xchg
shlb
xchg
jle
lods
sbb
jge
test
daa
rcll
ret
ja
dec
inc
pop
call
pop
cmpsw
ljmp
jp
xor
sub
fdivrl
loopne
push
shrl
sbbl
lock
test
pop
push
lock
pop
pop
xchg
jecxz
xchg
mov
pop
dec
push
xor
pop
and
jle
cwtl
dec
insb
and
in
dec
push
mov
movsl
pop
xor
jle
in
gs
jecxz
scas
and
dec
fld
enter
loopne
jmp
sub
ret
xchg
das
imull
mov
insl
dec
mov
aas
lahf
dec
sbb
push
jg
xor
xlat
fists
sub
aam
pop
inc
adcb
icebp
sbb
lcall
daa
test
incb
sbb
repnz
clc
jecxz
and
lea
mov
mov
sbb
lcall
les
mov
sbb
dec
clc
fists
xchg
pop
dec
jle
leave
dec
sbb
inc
xchg
and
loope
das
cmpsb
jnp
test
lret
ficoms
adc
arpl
jno
xor
cmp
jnp
test
or
das
add
out
bound
or
add
pop
outsl
and
stos
mulb
inc
rclb
int
rcll
push
sub
aam
sarb
loopne
loope
adc
add
jb
jbe
loope
inc
test
xor
push
scas
sub
pop
pop
pop
fsubl
or
adc
fisttpll
cmpsb
js
data16
clc
outsl
aam
xor
adc
cld
xchg
cmpsb
push
jb
movb
cmp
ret
xchg
stc
and
mov
mov
sbb
mov
mov
cmpl
fidivs
sahf
movsb
xchg
int
iret
pop
sbb
ja
testl
test
aam
inc
stos
jae
aaa
aad
sbb
or
stos
xor
xchg
cmpsl
dec
outsl
cmc
pop
pop
loopne
lods
add
add
les
lret
aaa
jb
movsl
inc
out
rcr
scas
outsb
int
gs
sub
push
sbb
inc
xchg
cs
jb
add
aaa
or
adc
sub
es
mov
icebp
mov
push
cmp
mov
into
hlt
lahf
sub
or
xor
add
mov
mov
fcoml
movsb
out
cwtl
aas
lcall
cmp
clc
jno
and
mov
insl
popf
test
lds
inc
add
loope
mov
outsb
mov
psubusb
out
jo
cmp
lahf
sub
lods
repz
aas
or
xor
xchg
dec
or
add
jo
sbb
sbb
in
xchg
sub
push
jae
ficomps
lds
push
mov
fisubrl
dec
testb
cmp
sbb
out
dec
or
ljmp
stc
aas
aad
add
popa
shl
sbb
pop
jns
dec
xor
add
data16
or
fstpt
push
pandn
stos
jne
out
push
push
faddl
or
adc
in
and
add
cli
enter
jae
sub
add
std
pop
or
insb
dec
imul
incb
ret
mov
pop
sbb
adc
cs
in
scas
mov
rcr
xchg
cli
sbb
mov
mov
sahf
repz
and
cmp
add
jb
jae
and
cmp
dec
mov
pop
push
ficompl
jo
ret
push
aaa
gs
pop
inc
mov
loopne
daa
adc
loope
add
int
cmc
adc
cmpb
and
arpl
mov
fimull
push
vmovdqu
std
arpl
aam
cmp
push
inc
mov
aam
sbb
das
inc
jle
clc
xchg
daa
xor
aas
sti
lds
out
mov
ljmp
in
mov
cltd
mov
fsubr
xchg
dec
sti
inc
jbe
fsubs
and
lea
and
jnp
or
enter
ficompl
ds
std
fildll
out
cmpsb
aaa
rorb
cmp
pop
cwtl
shll
movsl
cmp
cwtl
rsm
or
cmpsb
push
xchg
xor
popa
jle
sub
pop
lret
push
fnstenv
mov
icebp
cmc
clc
mov
xor
sub
cmc
ret
xchg
and
xchg
mov
stc
test
and
jae
mov
sbb
inc
lret
cmpsb
dec
mov
dec
rclb
mov
popf
sub
fmull
pop
push
fisttps
dec
cmp
mov
pop
sahf
aad
jae
lret
pop
vcvtps2dq
jnp,pn
pop
mov
lods
mov
pop
xor
and
xlat
repnz
or
mov
cmp
int
pop
into
and
data16
leave
push
addr16
xlat
pop
les
ljmp
xchg
mov
sahf
pop
movsl
movsl
add
xchg
xchg
fiaddl
scas
sub
sub
mov
mov
testb
push
jnp
lret
imulb
or
mov
outsb
ret
mov
fwait
shlb
incb
and
insl
mov
jno
sbb
mov
add
aam
push
or
repnz
fwait
cmp
pop
and
xor
popa
inc
or
inc
xchg
xor
popf
and
mov
push
sub
clc
icebp
xor
push
mov
test
movsl
inc
add
mov
pop
jge
divl
pushf
orl
dec
cmpsl
mov
and
xor
xor
push
push
jb
mov
cmpsb
notl
jge
aad
fstpl
arpl
pop
das
stos
or
inc
inc
outsb
aaa
adc
test
cld
lahf
sbbb
add
ss
sub
pop
cmp
out
lret
iret
mov
rorl
sub
jb
dec
notb
sbb
lods
xchg
mov
inc
push
adc
or
enter
imul
cmpsb
mov
js
push
dec
xchg
inc
repz
shl
arpl
lods
mov
inc
xchg
cmpsl
test
jae
hlt
adc
inc
sahf
scas
int3
out
pop
dec
jns
dec
outsl
mov
sbb
outsl
and
pop
movsb
test
jns
lods
or
or
int
pop
mov
into
pop
daa
xor
loope
addr16
jbe
jg
mov
cmpsl
daa
xchg
fisubrl
mov
dec
or
push
data16
push
jo
mov
decl
in
iret
jnp
and
iret
jl
add
add
jmp
sbb
and
les
sub
mov
or
js
xlat
jmp
xchg
and
mov
xlat
arpl
jo
cmp
pop
fs
sub
add
ja
ret
cld
stos
xchg
xchg
aas
outsl
fildl
or
mov
loope
pop
xabort
adc
push
clc
inc
icebp
ret
ret
shll
xor
jnp
pushf
adc
sub
sub
std
sbbl
add
jle
pop
and
test
imul
jmp
jmp
inc
les
cmp
test
mov
xor
imul
dec
outsb
in
shrl
dec
sbb
or
shlb
gs
cltd
add
rorb
rcl
jg
pop
test
lods
mov
or
and
push
xchg
clc
hlt
jl
lock
xchg
sahf
cmp
push
pop
add
push
dec
sbb
mov
fldenv
mov
test
ret
nop
loop
mov
xchg
jns
gs
test
scas
or
je
sbb
add
inc
in
enter
cltd
xor
aaa
imulb
add
loope
mov
dec
pop
stc
lea
or
call
fisubs
aad
icebp
mov
leave
ljmp
notb
xchg
pop
sub
mull
mov
pop
sti
shll
lds
mov
cmpsb
mov
insb
shll
pop
sub
and
ret
mov
pop
das
aas
lahf
mov
push
push
les
test
push
adcb
jmp
cmp
inc
sub
outsb
int
lret
stc
clc
jns
fmulp
outsb
adc
jle
mov
mov
cmp
xor
repz
and
inc
adc
imul
lock
xchg
ret
jg
test
pop
leave
mov
inc
inc
in
or
aaa
cmp
and
adcl
or
mov
scas
aam
fcoml
pop
jno
add
fnstenv
in
sbb
test
popa
dec
inc
sbb
or
xchg
movsb
add
jecxz
xchg
xchg
pop
pop
cmp
arpl
daa
movq
arpl
idivb
mov
jns
aas
gs
or
fwait
push
int
fwait
xor
idivl
arpl
ja
pop
mov
inc
add
xor
jecxz
xchg
int3
xchg
js
insl
push
xor
loope
or
leave
out
xor
add
mov
jg
add
lods
aam
out
js
push
inc
xchg
ja
xchg
mov
cld
inc
or
insb
cmpsl
adc
pop
push
adc
sbb
gs
movsb
shll
cltd
movd
loopne
or
mov
pop
fsubl
sbb
and
or
ljmp
dec
jp
mov
fistps
or
ret
add
add
inc
pop
loopne
inc
adc
or
aam
pop
and
int3
and
mov
dec
jae
orb
ds
movd
loopne
mov
gs
ret
lods
inc
add
mov
loopne
popa
mov
stos
arpl
pop
cmova
fimuls
pop
out
inc
jg
hlt
push
push
andb
xchg
dec
jge
lea
stos
movsl
cmp
ret
in
cltd
mov
and
xchg
mov
dec
push
add
popf
hlt
popf
add
orb
lahf
fistps
popa
dec
iret
nop
mov
pop
repz
shll
ror
sbb
js
cmp
ret
xor
insl
sbb
loope
fisttps
popf
int3
test
cmp
pop
aas
cmpsl
fcomip
or
mov
fidivrs
mov
push
lcall
sahf
sbb
xchg
jnp
in
out
xor
ret
cmc
fldl2e
pop
xor
pop
cmp
out
sbb
cmp
cmpsl
lret
xchg
and
enter
fsubs
xor
cmp
xchg
stos
mov
xchg
fdivrl
xchg
sbb
jo
imul
frstor
popa
inc
fnstsw
lea
push
push
sbb
rclb
in
push
in
xchg
adc
test
and
out
sbb
inc
mov
das
xchg
inc
popf
pop
fists
mov
lret
adc
xor
das
rorb
sbb
ja
sub
in
xor
push
jge
in
mov
rcrb
sbb
es
movsb
insb
aas
sbb
mov
outsl
mov
jbe
stos
aad
or
out
jne
das
test
icebp
out
mov
repz
int3
cmp
insb
inc
mov
leave
jns
shrb
adc
lods
push
xor
dec
cmp
enter
enter
test
mov
mov
loop
pop
imul
inc
mov
sub
fdivrl
scas
cmp
js
jge
cmp
xchg
mov
lock
popa
leave
shrl
lea
push
in
push
mov
cli
xor
dec
aad
pop
push
xchg
dec
add
int3
cmp
mov
in
dec
push
daa
les
add
in
sbb
roll
jl
and
daa
xor
outsb
stos
sub
insb
ljmp
repz
adc
fsubp
mov
repnz
adc
push
movl
xor
cmp
mov
mov
enter
int
int3
cmp
sti
xlat
or
adc
mov
repnz
pop
sbb
sarl
pop
popf
adc
test
mov
loopne
test
mov
sub
popa
mov
loopne
aaa
pop
mov
fcoms
jmp
xchg
in
es
and
or
popf
and
dec
push
push
adcl
insl
mov
sbb
dec
repz
xor
fnstenv
push
test
js
sub
jno
cld
mov
sbb
imul
inc
mov
pop
and
movsl
aad
dec
sbb
das
xor
out
inc
pop
sbb
sahf
mov
push
sti
test
push
mov
mov
and
fwait
repz
push
mov
rolb
xlat
sub
fidivl
insl
xor
sub
pop
xor
inc
sub
sbb
fimull
mov
fidivrs
fbld
cmp
mov
lcall
push
mov
aas
ficoms
shrl
clc
iret
std
pop
jecxz
lods
aaa
mov
sbb
inc
sti
xor
jecxz
fldenv
jl
rol
cmp
sub
jge
mov
pusha
sahf
mov
imull
sar
xor
xchg
daa
mov
or
xor
jg
dec
add
jecxz
or
test
add
cmpl
or
jp
fstps
inc
shrb
cmp
jo
mov
and
mov
mov
in
imul
or
in
addr16
lea
push
jmp
in
mov
cmp
test
insl
lret
add
add
pop
jecxz
arpl
mov
push
mov
loope
cmp
xor
mov
sub
push
jp
mov
cs
jmp
xchg
movb
scas
pop
out
out
aaa
ret
adc
cmp
dec
rorl
outsb
sbb
xchg
pop
repnz
dec
adc
js
jb
sbb
fildll
stc
lods
xchg
cld
cli
jb
dec
sub
or
sarb
fdivp
pop
addr16
cmc
xchg
sbb
xor
pop
push
fldenv
bnd
in
sub
cmp
jmp
jb
and
std
pop
mov
sub
mov
or
dec
push
jnp
test
mov
hlt
stos
inc
hlt
aaa
into
iret
pop
sarb
jecxz
lret
aaa
ja
sub
or
cmp
sub
inc
inc
cmpsl
insl
mov
xor
scas
mov
mov
enter
jae
cmpsl
jb
jns
push
dec
jno
dec
add
cmp
push
rcl
ret
add
aad
outsb
mov
fwait
popf
push
fisubl
mov
fldln2
adc
frstor
cmp
mov
mov
sbb
les
mov
mov
mov
push
imul
mov
rorl
lcall
shll
dec
fadd
adc
dec
mov
sbb
mov
pop
lds
sbb
addb
jg
push
cmp
cmp
lock
mov
jnp
pop
xchg
mov
nop
cmpsb
dec
push
dec
push
je
inc
inc
mov
andb
mov
inc
mov
push
lods
xchg
scas
xchg
outsb
push
pop
and
jae
or
out
mov
dec
repz
sbb
pop
sarb
int
gs
cmp
mov
sahf
stos
sarb
dec
shrl
and
fsts
mov
daa
pop
cmc
insb
push
push
adc
jmp
jg
adc
rorl
sub
and
cmc
dec
adc
in
in
and
insb
cld
cli
inc
sbb
pop
sub
dec
lcall
jne
arpl
adc
fcmovnbe
ja
filds
jnp
cltd
inc
jmp
aam
push
mov
sbb
jb
popa
ljmp
cmp
lcall
loopne
inc
and
jmp
pop
popa
aas
rcrb
or
aad
jnp
imul
iret
data16
push
test
rclb
pop
and
movl
and
and
lea
fincstp
ret
test
push
adc
into
ds
int
out
aas
sbb
push
mov
fdivrl
mov
dec
mov
sahf
fs
in
mov
jns
sub
jl
aaa
lcall
pop
mov
fisubl
xchg
lods
sar
cmp
stos
clc
mov
iret
adc
adc
mov
xchg
xchg
mov
add
ds
dec
add
mov
in
scas
fdivrl
pop
cld
ja
push
daa
push
pop
add
add
outsb
jecxz
ds
cmp
lock
xor
icebp
lds
movsl
dec
dec
insl
aad
adc
jecxz
xor
pushf
fcmovnb
ja
sbb
add
xor
mov
and
add
pop
into
rcrb
jnp
push
rol
leave
int
sub
push
decl
fildll
das
add
lahf
scas
xchg
sub
jne
fcmovbe
pop
xchg
sub
mov
adc
or
adc
fsts
mov
mov
test
xor
and
int
pushf
jge
lcall
inc
jle
ret
loope
push
sub
loope
and
loop
xor
pop
jmp
push
in
mov
fdivrs
dec
pop
in
jb
stc
lock
sbb
enter
or
sarb
push
cmp
lods
mov
das
pop
pushf
faddl
cmpsb
es
cmpl
cli
mov
mov
psubusb
arpl
enter
in
ret
ds
popa
mov
ficompl
lods
or
out
fcmovb
mov
cmpsl
das
sti
sbb
mov
xorl
push
rolb
in
pop
xchg
push
mov
clc
notl
int3
mov
sub
or
ficoml
bound
sub
lods
add
inc
repz
sbb
adc
mov
or
in
add
inc
into
xchg
mov
adc
pop
mov
push
frstor
scas
movsb
dec
xchg
iret
out
push
xor
xchg
fcoms
cmp
andb
sbb
outsl
clc
dec
mov
cli
mov
dec
inc
cmpsl
lret
out
aad
lret
pop
jg
sbbl
or
mov
jg
popf
xchg
js
inc
hlt
ror
mov
inc
stc
stc
cmp
sbb
mov
xor
jne
sub
xchg
lea
and
xor
setae
fdivrl
push
push
pop
pop
loopne
xor
mov
and
cmpb
sbb
fiadds
mov
sahf
jp
and
sub
lcall
adc
mov
in
and
shl
or
stc
jnp
jmp
and
adc
fsubs
mov
push
cmp
xor
and
lcall
aam
clc
ds
leave
or
mov
scas
jno
insb
aaa
ss
xchg
fimuls
sbb
or
mov
js
aad
cmp
xchg
stos
mov
inc
pop
mov
cld
sub
call
out
adc
int3
inc
arpl
loop
jp
mov
aaa
loope,pn
mov
jns
cmpl
out
negb
out
pop
ja
xchg
iret
cltd
sahf
das
stc
inc
or
dec
jno
mov
mov
dec
dec
out
int
in
pop
mul
mov
xor
or
bound
rorl
fstpl
hlt
cmp
clc
pop
cwtl
xor
mov
dec
inc
js
test
stos
mov
mov
pop
out
sbb
mov
in
or
dec
add
jno
test
into
jg
add
inc
lea
inc
adc
mov
pop
adc
lods
insb
add
in
sub
cmp
sub
out
mov
lea
and
jbe
or
dec
cmp
dec
xlat
das
sbb
adc
sbb
inc
add
popf
out
add
adc
mov
mov
stos
jmp
fdecstp
push
daa
mov
repnz
movsl
dec
test
scas
decb
nop
and
or
push
mov
scas
aad
mov
xlat
rolb
std
jmp
push
sub
shl
mov
push
adc
ds
rcrb
in
mov
ja
cmc
in
pop
push
push
lcall
mov
pop
xchg
mov
pop
aaa
xchg
insl
lods
lock
xorl
inc
test
push
or
pop
push
ret
fwait
outsl
insl
sub
add
andb
ret
sub
insb
in
mov
mov
gs
mov
sahf
ficompl
sub
sahf
pop
pop
sbb
mov
sbb
pop
insl
nop
xchg
repnz
lock
dec
fcomps
jae
pop
test
call
out
in
lods
fsubs
jmp
sahf
stos
or
in
mov
sbb
adcb
repnz
push
scas
das
into
out
test
jo
mov
bound
push
push
dec
pop
mov
out
push
cli
add
enter
push
data16
sub
aad
ds
cmp
push
arpl
mov
mov
push
inc
insl
mov
cli
jge
jmp
mov
loopne
push
shlb
jp
movsb
imul
xchg
and
inc
aam
xchg
and
adc
out
lret
xchg
sbb
aam
pop
inc
dec
jnp
mov
fstpl
fisubrs
jge
mulb
sbb
call
push
fstl
jp
add
call
sub
aaa
sbb
lods
pop
arpl
jns
popa
and
inc
sahf
mov
and
add
xor
fnsave
push
ss
mov
xchg
call
mov
pcmpeqw
pop
xchg
cmc
xor
lock
flds
dec
repnz
or
loope
push
mov
pop
out
adc
cmp
mov
aam
pop
mov
jp
push
mov
fbld
ret
inc
pmullw
lcall
and
add
push
fiadds
push
cmpsb
cmp
das
rol
xchg
enter
xor
scas
and
popf
mov
push
repz
xor
push
or
or
sbb
mov
fisubrl
cld
sub
mov
mov
into
sbb
mov
cmp
add
jp
xchg
cmp
and
leave
push
mov
lods
xchg
xor
mov
ljmp
pusha
cltd
xor
rcrb
pop
sarb
push
push
jp
lds
dec
gs
sbb
jp
ljmp
inc
rcrl
iret
dec
fsubp
out
hlt
inc
xor
xchg
add
sub
xchg
jp
adc
std
das
mov
sbb
mov
or
xor
adc
dec
push
clc
lods
out
mov
sti
or
mull
and
cs
and
test
pushf
or
add
dec
outsb
hlt
mov
xor
jmp
adc
inc
ret
rcl
cmp
sbb
or
iret
int
push
inc
scas
push
xchg
jp
jle
and
or
mov
roll
into
sbb
dec
aam
jmp
add
test
lods
and
addr16
sub
mov
sahf
test
testb
jo
jg
arpl
inc
mov
adc
movsb
popa
popf
outsb
push
jmp
lret
ds
bound
adc
into
popf
je
add
adc
xorb
and
addr16
cwtl
adc
cmp
imul
or
add
cs
and
lds
jg
data16
repnz
sub
mov
adc
mov
jg
jbe
inc
push
add
fidivl
test
lret
add
andb
test
xor
jge
mov
xlat
mov
adc
xchg
jns
add
xor
xor
and
leave
gs
dec
jmp
and
std
loopne
mov
dec
test
dec
insb
ja
xchg
mov
or
ret
or
xlat
jae
xorb
mov
mov
adc
xor
mov
lret
or
adc
xchg
call
push
popf
ja
inc
jg
loop
or
sbb
xchg
movl
pusha
sbb
das
test
aam
pop
movsl
cmp
xchg
bound
sub
loope
push
dec
out
enter
mov
add
ja
leave
int
sbb
jg
push
mov
test
mov
repnz
mov
sar
mov
or
pop
dec
jge
out
cmp
inc
push
dec
cmp
push
cmc
sbb
ljmp
and
lahf
jns
xchg
popf
jmp
push
xor
popf
lea
add
pop
inc
add
or
mov
ja
stos
xchg
or
jecxz
loope
aad
mov
or
out
sbb
shlb
repnz
cmp
add
rcr
mov
stc
or
dec
call
icebp
out
sbb
push
ljmp
mov
outsl
and
mov
push
cld
out
outsl
xchg
jle
and
xchg
icebp
icebp
insl
inc
sbb
push
mov
sub
xchg
ss
in
sbb
lcall
push
adc
mov
adc
insl
sbb
jl
cmp
and
stos
mov
shl
stos
jle
pop
pop
pop
adc
cmp
jmp
cltd
fs
inc
or
mov
outsl
mov
pop
jg
sub
repnz
jnp
pushf
loope
aas
and
clc
mov
int3
jbe
imul
dec
add
dec
push
aad
add
adc
xor
in
mov
repz
inc
fldl
mov
ljmp
mov
dec
push
or
fwait
pop
adc
inc
cld
sub
fwait
inc
inc
and
clc
outsl
mov
pop
add
xor
ljmp
and
jns
jl
in
jo
lods
sbb
enter
cwtl
popa
adcb
fcomi
out
cmp
or
pop
xor
or
addr16
dec
push
mov
or
vpunpcklqdq
jno
pusha
pop
jbe
dec
sub
in
scas
call
subb
cld
push
imul
inc
inc
and
nop
imull
pusha
hlt
or
add
dec
in
leave
out
mov
mov
dec
mov
loopne
stos
pop
cmc
lret
rcll
mov
mov
test
mov
pop
or
scas
add
cmp
and
lahf
mov
loope
push
dec
cmpsl
mov
test
fnstenv
mov
fsubl
and
call
inc
cmpsb
out
seta
mov
pop
pop
pop
jb
jne
out
xchg
jge
loop
rcrl
jb
mov
jecxz
lock
push
cmp
mov
aaa
jno
pop
mov
xchg
dec
cli
dec
inc
adc
aaa
adc
cmp
les
popf
jno
inc
sub
das
fcmovu
add
mov
jecxz
mov
cltd
lret
mov
cmpsl
sbb
cwtl
add
push
stos
int
in
dec
dec
sub
xor
jge
test
cwtl
or
rcrl
fildl
add
sbb
and
jl
loope
pop
dec
dec
mov
xor
ljmp
push
push
arpl
xlat
sbb
jge
add
xchg
sub
xchg
cmp
cmp
fisubrs
hlt
adc
sahf
lahf
shl
lods
mov
xor
add
je
das
cmpsb
sbb
or
xor
sub
jno
add
dec
jmp
movsb
lahf
ret
sub
rol
js
cmp
pop
push
or
jne
pushf
out
mov
pop
out
cmp
scas
out
cld
popf
aam
cs
mov
shlb
daa
cwtl
sqrtps
insb
aas
sub
mov
cmp
outsb
mov
jns
xchg
or
and
imul
popf
movsl
cmc
xchg
pop
lea
aas
and
cmpsb
push
xchg
xchg
add
jp
sti
mov
and
adc
out
pop
mov
add
test
call
repz
movsb
fisubrs
lret
movsl
shlb
inc
jo
pop
jge
mov
and
stos
inc
xchg
pop
repz
inc
fxch
dec
sarb
cmp
leave
in
insb
bound
mov
push
mov
enter
inc
outsb
mov
sbb
pop
jl
mov
jle
jne
jb
mov
add
gs
fisttps
mov
mov
and
pop
push
popa
iret
mov
test
mov
and
test
xchg
inc
mov
xchg
adc
sarb
adc
mov
inc
mov
popa
xchg
adc
mov
cmp
push
fisubrl
ds
pop
jo
popf
inc
add
ss
xchg
adc
add
xorl
in
jl
adc
adc
cmp
inc
mov
cmp
data16
push
insb
ljmp
out
enter
xchg
aaa
rorl
pop
adc
jle
notl
aaa
movsb
jecxz
xchg
mull
pop
cs
fst
scas
ljmp
mov
sti
gs
cmp
mov
loopne
add
sbb
addr16
mov
mov
repnz
add
rol
repz
loop
cmp
adc
push
mov
pop
xor
push
mov
out
cmpsb
test
stos
push
push
inc
sbb
jbe
aam
subb
fdivrl
push
movsl
ss
push
out
or
outsl
sub
dec
aam
pop
test
imul
sbb
insl
xor
jge
dec
test
xchg
enter
and
das
mov
xchg
ja
push
daa
stos
das
testl
leave
lcall
jae
mov
testl
test
pop
fcmovb
out
or
sahf
lock
out
and
pop
jmp
adc
mov
mov
das
inc
adc
dec
mov
xchg
sub
rolb
lea
mov
pop
sub
cs
or
jne
sbb
jg
jg
andb
aaa
in
inc
and
sub
adc
fwait
jno
arpl
js
in
insb
mov
sub
push
push
pop
pop
out
pop
in
dec
or
and
mov
cltd
push
jecxz
aaa
mov
jbe
stc
pop
fcoms
ret
or
flds
pop
xorb
sub
mov
inc
movsb
pop
mov
shr
pop
mov
lahf
das
fistpll
cmp
pop
pop
in
or
mov
xor
das
stc
arpl
or
dec
add
or
xor
rcl
push
jp
adc
packsswb
sbb
sub
add
insb
cmpsb
push
lods
jl
mov
jno
pop
push
adc
dec
mov
lea
mov
test
xchg
daa
mov
int
dec
int3
sahf
je
push
jae
scas
inc
sbb
sbb
adc
aas
insl
std
push
lret
mov
int3
scas
lock
stos
fisttpl
inc
jge
sub
push
pusha
dec
fsubrp
and
cmpb
arpl
imul
mov
mov
gs
loopne
or
lcall
dec
mov
or
or
jno
cmc
sub
fistpl
and
dec
mov
jne
pop
outsl
mov
ss
aas
jecxz
adc
xlat
gs
insl
dec
sbb
out
outsb
fs
fldt
and
adcb
mov
stos
gs
pushf
and
pusha
mov
push
jne
dec
add
jg
inc
ss
sbb
xor
mov
dec
jecxz
mov
fadds
in
dec
out
pop
daa
cmp
mov
xor
xchg
adc
pop
gs
push
enter
sub
jo
mov
jns
fldz
imul
enter
adc
xor
jns
and
shll
mov
sti
lahf
mov
cli
scas
jns
sub
or
mov
and
movsb
insb
lods
add
mov
es
popf
pop
gs
sub
mov
pop
sub
xchg
imul
jg
mov
mov
pop
sbb
stos
dec
clc
jnp
insl
insl
mov
movsb
outsl
aad
mov
insl
xor
addr16
mov
mov
sti
push
inc
xchg
mov
push
sub
add
shll
in
mov
and
pop
and
lahf
mov
push
into
inc
pop
cmp
mov
aaa
adc
leave
cmp
out
mov
add
test
inc
jnp
mov
mul
mov
pushf
add
push
out
inc
aaa
mov
cmp
pop
jge
adc
outsb
sbbl
xchg
mov
mov
jnp
dec
xor
cmp
sar
mov
fwait
aaa
fwait
xchg
rcrb
hlt
lock
add
mov
es
mov
je
pop
loope
shrb
jno
sub
xchg
in
idivl
jne
sub
lods
hlt
rol
test
add
aaa
jge
xor
or
aad
aas
jl
push
mov
fs
mov
inc
pop
xchg
cmp
mov
mov
outsb
xchg
add
sti
dec
and
daa
pop
dec
mov
xorb
pop
mov
gs
jg
ljmp
jp
bnd
in
pusha
cmc
jno
sbb
inc
or
adc
adc
call
es
add
push
cwtl
adc
int
xor
roll
popa
mov
and
dec
out
loope
mov
sti
or
iret
jb
inc
test
push
arpl
scas
sbb
stos
lcall
in
cwtl
imul
pop
pop
adcb
xor
int
xchg
jmp
out
dec
adcb
stos
mov
fsubs
dec
ficompl
mov
fbstp
push
dec
loop
and
sarl
adc
xchg
in
adc
int
iret
rclb
incl
sub
inc
jmp
inc
ret
mov
pop
dec
lahf
imul
mov
pop
test
mov
fwait
and
xor
inc
enter
pop
out
push
push
testb
sub
pop
ud0
mov
test
imul
mov
push
and
and
in
cmpsl
xchg
pop
jnp
dec
pop
inc
push
imul
xor
fidivrs
jl
aaa
and
and
mov
bound
pusha
xchg
mov
fdivs
mov
push
sti
pop
xchg
flds
adc
push
repz
cli
xchg
mov
in
outsb
in
int3
pop
fidivrl
sub
jp
lds
sub
lret
testl
out
std
mov
mov
push
xchg
push
xchg
lcall
data16
sbb
push
adc
jae
bndstx
int3
dec
shlb
ss
pop
stos
mov
shll
jno
das
out
inc
pop
or
dec
outsb
sub
adc
add
sub
mov
mov
sub
loopne
mov
pop
xchg
dec
mov
cmc
dec
lcall
sub
stos
cmp
outsw
mov
call
jnp
inc
fwait
mov
mov
lret
mov
addb
inc
cmp
push
add
xchg
xchg
mov
rorl
ror
jl
rol
mov
mov
jle
xorb
call
push
cmp
pop
idivb
xchg
lods
push
es
aam
fildll
mov
or
mov
into
hlt
jecxz
test
nop
pop
jl
pop
int3
adc
or
gs
add
mov
mov
call
bnd
jmp
dec
aad
mov
push
daa
mov
aaa
push
iret
in
pop
repnz
aaa
je
jge
mov
dec
insl
imul
cld
dec
repnz
je
inc
mov
and
in
and
sbbb
and
pushf
in
stos
int
and
cmp
int
add
mov
adc
bound
lods
cmc
xchg
inc
push
cld
xchg
dec
sbb
out
imul
mov
std
aaa
in
inc
xchg
rcll
stos
icebp
icebp
xlat
iret
test
rcll
cmc
add
sti
mov
inc
mov
ds
mov
fwait
js
mov
inc
mov
jp
cltd
rcrb
pop
ljmp
mov
or
lret
xchg
jo
mov
adc
pop
jg
inc
imul
repz
adc
mov
add
pop
or
fistpl
les
pushf
mov
test
je
jmp
ficoms
test
loopne
jnp
mov
test
jnp
cmp
and
add
out
jo
xchg
loope,pt
repnz
sub
cmp
inc
test
stc
lret
xlat
fcomp
call
sbb
pop
in
pop
mov
cwtl
out
pop
or
jge
push
xor
push
fsubrl
bound
adc
scas
jnp
sbb
out
je
jg
dec
mov
pushf
jp
adc
imul
js
imul
mov
mov
fildll
das
in
lock
jp
fwait
sar
sbb
cmp
out
mov
das
pop
je
mov
stos
nop
or
aam
call
cmp
repz
call
jl
mov
aam
mov
testl
jo
mov
add
xchg
leave
or
jmp
hlt
pop
cld
in
es
std
pop
jne
aam
mov
pop
jp
lock
adc
sti
call
aaa
data16
cmp
adc
into
shlb
js
push
add
cmp
lods
rolb
sub
int3
lea
push
jb
lret
and
dec
fcmove
or
mov
pop
jmp
pop
push
pusha
mov
enter
push
dec
outsl
xchg
or
es
clc
cmpsl
clc
stos
pop
xchg
stc
inc
cmp
mov
lods
das
stos
xchg
daa
jp
pop
in
adc
xor
cmpsl
ror
sub
mov
shll
inc
stos
xchg
mov
sbb
adc
dec
xor
das
lret
add
iret
inc
sbb
stos
xchg
in
dec
cmp
dec
inc
cmc
and
inc
sbb
sbb
arpl
sti
jnp
mov
sbb
mov
leave
insb
in
inc
xchg
adc
jbe
cmp
lea
mov
inc
insl
fmuls
imul
imul
ret
pop
jmp
sbb
ljmp
movsl
mov
aas
call
sbb
cli
jp
popa
pushf
push
mov
aam
cmp
test
add
sub
lds
xor
cmp
in
mov
push
sub
jmp
cmp
loopne
xchg
mov
mov
orl
js
and
addr16
pop
enter
push
sub
push
mov
fs
enter
ljmp
dec
dec
pusha
sbb
jmp
inc
xor
dec
mov
push
pop
dec
mov
jmp
jmp
pop
fcmovu
aaa
fistpl
xchg
test
es
and
shll
ret
inc
cmp
cmpsb
push
mov
dec
cs
sbb
cmp
loop
lahf
mov
out
vshufpd
xchg
movsb
cwtl
rorb
jo
jecxz
jge
mov
cmp
sub
lea
or
je
pop
int
test
jp
cmp
cld
int3
inc
mov
pop
adc
push
and
sbb
orb
jg
and
js
je
imul
flds
add
popa
pop
stos
cmp
jno
sbb
pop
xchg
ret
fdivp
mov
mov
fldenv
ja
pusha
ja
inc
xchg
inc
jnp
cmp
jp
pop
sbb
sar
rolb
jnp
lea
fcmovnu
xor
into
call
lea
pop
push
leave
push
jg
lods
mov
mov
push
add
dec
outsb
popf
cmp
mov
nop
inc
and
dec
xlat
into
mov
fwait
or
movl
cwtl
push
xor
push
jo
out
pop
jno
fstps
mov
mov
mov
dec
jno
jg
iret
xor
mov
xchg
xor
add
dec
or
inc
stos
jge
outsl
xchg
push
iret
je
mov
sbbl
sahf
add
sbb
sub
add
or
add
mov
sub
or
push
mov
push
ljmp
push
fidivrl
adc
out
fwait
mov
or
or
mov
jnp
int3
mov
cld
xchg
or
jge
in
push
fisubs
add
into
lods
or
insb
movsb
ror
stc
sub
jo
pusha
enter
push
fadds
sbb
loopne
mov
jle
cmpsl
out
jno
cmc
push
cmp
in
mov
pop
cmp
push
xchg
jge
fwait
inc
pop
pop
sbbb
jecxz
out
lret
mov
jne
fnsave
mov
aad
out
movsl
mov
jne
in
adcl
das
jbe
mov
fcoms
call
out
cs
cmp
xchg
jae
int3
push
mov
push
mov
pop
mov
rcrb
mov
and
push
ja
nop
or
sub
popf
add
mov
movsl
mov
mov
mov
mov
fwait
mov
xor
out
inc
and
in
lret
jge
adc
in
pop
add
sub
leave
dec
sub
mov
nop
inc
sbb
or
pop
add
aam
imul
gs
nop
pusha
inc
inc
add
push
pop
mov
movsl
adc
subl
int
ret
dec
ret
lea
push
rcll
stos
orl
out
test
pop
dec
inc
xor
stos
inc
iret
fsubr
xchg
scas
sub
adc
sub
add
lods
and
or
pop
mov
test
inc
fwait
push
pop
inc
mov
jnp
cmp
scas
jle
mov
aaa
es
in
push
xchg
scas
in
jmp
pop
pop
cs
mov
icebp
mov
mov
pop
pop
cmp
sbb
cmp
push
xlat
orb
addr16
fstpt
sti
je
mov
shl
jl
out
sbb
dec
ret
jb
adc
frstor
aas
dec
sbb
repz
sarb
xor
or
inc
pop
aam
or
mov
test
imull
xchg
jecxz
insb
xchg
int
sbb
push
inc
inc
adc
notb
xchg
sub
data16
in
jae
push
lods
imul
into
dec
pop
js
adc
fildll
mov
mov
insl
ljmp
fldenv
fstpl
test
pop
fs
cmc
pop
ret
jecxz
fnstsw
push
lods
sbb
sub
repz
push
lods
xacquire
jnp
sbb
inc
mov
rcrl
sbb
xchg
mov
aad
inc
sub
fs
sarl
adc
clc
fsubl
jne
rcr
xchg
std
and
fstpl
stc
push
inc
fcmovnbe
mov
roll
imul
add
or
pop
lds
test
nop
pop
and
and
cmpsl
pop
cwtl
and
or
jmp
sbb
faddl
iret
rcrb
push
sbb
cmp
sbb
lods
movsb
test
xchg
fs
setns
cmp
or
das
inc
jge
and
xchg
lock
pop
out
push
mov
pushf
mov
mov
lds
je
je
xor
jae
cs
pop
sub
data16
int3
dec
insb
dec
pop
aam
aam
lahf
es
out
fldcw
push
lods
cmpsl
sbb
ds
and
cld
aaa
cmc
insl
fdivl
ret
icebp
push
mov
movsb
add
mov
ret
cmp
cmp
adc
int3
inc
outsl
xchg
inc
jne
stc
and
shl
ret
dec
cli
sahf
aad
ss
ret
add
cld
mov
or
push
mov
rcr
pop
cmp
jle
pop
inc
xchg
movsl
stc
xor
xor
test
pop
ret
rcrb
jne
loop
mov
mov
lea
fldl
fsubrl
sub
scas
lds
inc
rcl
jecxz
insb
add
outsl
leave
les
push
and
mov
out
movsl
cmc
push
insl
sub
daa
add
adc
fildll
mov
shl
lahf
push
xchg
mov
mov
cmp
sbb
fldenv
or
add
sub
xchg
test
fcmovnb
shrl
sti
add
out
mov
repz
push
dec
push
test
push
aam
imul
pop
fildll
pushl
std
sub
lock
hlt
call
ret
rcr
test
ljmp
cmpsb
jns
mov
add
pop
mov
mov
sbb
mov
pop
je
leave
ret
xor
in
adc
fstpl
aaa
ficompl
scas
sbb
sbb
out
hlt
ljmp
mov
es
jae
outsb
adc
scas
pop
push
lods
adc
mov
out
mov
lds
fcoms
add
notl
pop
data16
sahf
sub
enter
sti
es
pushf
and
fidivs
push
les
dec
shrb
or
test
shl
mov
xchg
test
mov
jnp
lea
mov
mov
adc
imul
xchg
aas
call
bound
outsb
jne
cmpsl
cld
ds
sbb
addr16
fdivrl
push
fcoms
or
insb
dec
je
push
iret
push
aad
push
hlt
lock
or
adc
push
idivl
out
xor
and
mov
xor
mov
in
jb
mov
sbb
xorb
jno
mov
and
imul
sbb
lods
femms
in
popa
pop
xchg
jbe
push
int3
push
xchg
sti
insl
loope
pop
mov
pop
into
xchg
dec
popa
cmpsl
pop
push
sub
aaa
mov
addr16
mov
cwtl
pop
mov
mov
imul
xor
aaa
add
and
iret
lods
in
test
js
adc
testl
cli
fnstcw
mov
les
loop
iret
pushf
loop
cmp
shll
ret
jle
shl
into
and
cmpsb
pop
xchg
mov
cmp
fmull
xor
repz
or
stos
mov
pop
pop
js
xor
mov
aaa
cmp
inc
sub
inc
mov
pop
fnsave
in
and
loope
and
gs
xchg
adc
cmp
push
jg
and
push
pop
call
and
mov
cld
sub
addr16
xchg
fucom
sti
xor
inc
sbb
mov
pop
aaa
cltd
mov
jb
mov
mov
pop
fildll
sbb
push
mov
test
loopne
les
mov
and
and
js
jecxz
stc
aam
jl
push
jb
jne
je
loopne
cli
xor
fwait
xor
mov
xchg
add
sbb
jl
ds
clc
repz
aad
dec
or
into
test
push
push
inc
push
xchg
dec
lcall
xorl
xchg
xchg
jecxz
jnp
cltd
push
sbb
adc
push
adc
dec
repnz
sub
aam
ja
aam
cltd
push
test
cmp
les
mov
mov
scas
and
xor
sub
addr16
jne
dec
shl
xor
imul
sub
add
out
dec
in
mov
mov
insl
lods
fimuls
shr
rcl
sbb
int
lods
in
pop
pop
fisubrl
mov
cmp
xorl
cmp
lods
pop
outsl
or
cld
mov
movsb
and
lret
or
stc
xor
push
enter
mov
jg
jge
js
mov
jmp
rorl
dec
jne
in
inc
leave
jae
ds
and
inc
mov
inc
clc
or
nop
adc
mov
jbe
jge
push
daa
stc
incb
in
jb
push
fcomip
loope
sub
xchg
cmp
pusha
fmull
mov
fistps
xor
mov
pop
cld
int3
stc
mov
daa
jbe
std
mov
stos
sub
pop
nop
nop
sub
sbb
in
pop
cmp
stc
fcmovb
movsb
rorb
bound
in
aad
jl
out
outsb
xchg
leave
push
sbb
out
and
push
add
sbb
lahf
out
inc
ret
fsubrs
out
icebp
xor
das
mov
push
outsb
xor
std
mov
in
mov
dec
and
das
and
mov
scas
enter
in
inc
sbb
xor
loop
int3
das
repnz
xchg
cmp
cltd
andb
enter
push
push
popa
mov
inc
pop
mov
push
es
jae
std
les
dec
sbb
mov
jle
aam
mov
loop
into
sub
fwait
test
adc
insl
aas
movsl
cmc
cmp
jo
fdivrl
inc
push
nop
jnp
push
sbb
cmp
jmp
xchg
fwait
pop
in
ljmp
jl
and
insb
cmp
inc
sub
loopne
push
push
addb
aaa
mov
inc
pop
lret
rclb
iret
out
in
movsb
adc
leave
fldenv
aam
sub
lret
out
imul
je
inc
push
cwtl
push
mov
lcall
xor
mov
stos
cltd
sbb
gs
and
sti
sub
cmp
imull
lods
stos
nop
inc
sub
or
xchg
test
gs
lea
jecxz
daa
add
pop
jns
adc
dec
jmp
adc
adc
mov
or
lods
sub
inc
clc
sbb
pushf
outsb
je
mov
jae
xor
inc
xor
jge
mov
add
mov
mov
fcoms
stos
add
xchg
xchg
das
sbb
test
test
cs
ja
sub
and
fs
sub
add
push
jl
inc
inc
repnz
lds
clc
push
mov
dec
mov
nop
sbb
adc
mov
out
loopne
mov
inc
test
mov
dec
mov
and
nop
or
rcll
ljmp
into
xchg
add
mov
aas
gs
imul
lret
test
sub
call
adc
sti
andb
hlt
es
imul
mov
cmp
cli
xor
rcr
dec
cmpsb
pusha
daa
xchg
les
mov
mov
xor
ljmp
fs
pop
inc
mov
mov
mov
pop
les
sub
adc
pop
add
jp
in
push
jnp
aad
mov
imulb
xchg
push
jg
adc
adc
stos
nop
inc
xor
sarb
inc
sub
jmp
mov
rclb
ljmp
jecxz
jmp
mov
cs
cvttps2pi
push
push
movsb
push
xor
mov
pop
pusha
sbb
imul
outsb
jge
dec
sbb
cmp
loopne
out
and
push
jo
sub
std
mov
mov
dec
inc
jo
jae
out
inc
outsl
jae
sub
jno
es
push
pop
cltd
int
scas
sti
pop
xor
mov
pop
mov
adcb
es
sub
aaa
sahf
repz
lods
mov
mov
adc
mov
adc
out
aad
cld
cmp
lahf
fiadds
cmpsb
sub
shrb
or
jno
mov
and
test
xor
xor
int
cmp
sub
sbb
sbb
icebp
fistpll
push
sarl
cmp
lods
sbb
add
inc
fwait
movsb
fmuls
pop
xor
loopne
cs
insl
sbb
fisubs
lret
in
js
xor
add
pusha
inc
push
sbb
jns
push
jbe
inc
rcrl
push
fs
lcall
sub
cld
cmp
cmp
sbb
xchg
sahf
dec
mov
mov
add
das
xor
leave
filds
cmc
and
stc
inc
adc
sbb
insl
lret
fmul
insl
pop
ljmp
jne
mov
fistpll
mov
xchg
cmp
aam
mov
stc
or
inc
mov
mov
mov
inc
inc
inc
jbe
aaa
adc
pop
fdivrp
xchg
sbb
jnp
inc
dec
pop
fcmovne
jecxz
ficomps
and
pop
pop
call
pop
stos
in
test
xor
adc
lret
mov
insb
or
lea
pop
adc
jno
sbb
jae
jno
sti
and
aas
int
mov
dec
rclb
daa
imul
hlt
xor
lret
mov
xchg
mov
jp
lcall
movsb
add
test
xor
push
in
imul
jl
ds
call
jp
add
pusha
pop
adc
stos
pop
mov
ret
add
into
je
repnz
das
xchg
xchg
stos
pop
adc
test
jae
popa
inc
push
insl
jmp
repnz
jmp
or
mov
sbb
in
push
pop
add
mov
pop
jnp
aam
sub
mov
popa
pop
jb
xorl
orl
ljmp
add
ror
adc
pop
sahf
out
pop
mov
jno
scas
stc
mov
adc
popf
sub
adc
mov
mov
pop
or
xor
cmpsl
jecxz
ret
xlat
dec
scas
push
movsl
jge
xor
clc
scas
je
addl
xchg
sarl
subl
int
sbb
ds
popa
xor
sarl
or
aam
cmp
xchg
push
mov
sub
jnp
xchg
xor
or
fwait
push
rol
or
enter
cli
add
sbb
fsubr
jns
push
xchg
sahf
mov
shlb
xchg
jns
xchg
adc
cmp
addl
and
push
mov
cwtl
dec
jb
sub
and
and
call
inc
xchg
fcmove
sti
frstpm(287
stos
mov
std
test
shrb
out
sub
jb
mov
fwait
dec
mov
mov
push
pop
bound
int3
mov
mov
mov
adc
das
fiadds
aas
or
push
xchg
adc
mov
fisttpll
or
cmp
and
xor
pop
outsl
jmp
pop
xor
push
or
dec
lods
rclb
shll
push
xchg
scas
movsb
push
test
cli
mov
mov
movsl
or
sub
cmp
out
add
dec
push
test
je
cs
push
pop
pop
subl
imul
or
imul
js
dec
xchg
out
js
cmp
neg
into
sub
push
pop
rolb
mov
subl
and
xlat
mov
clc
pop
loope
adc
loop
push
lahf
pop
adc
inc
jmp
arpl
xchg
sbb
sbb
pop
mov
sbb
dec
jae
xchg
inc
aad
jmp
mov
jne
or
jb
ss
aam
fsub
xchg
mov
mov
enter
leave
out
in
push
jmp
mov
sub
jmp
icebp
test
push
xchg
lcall
mov
sub
and
push
mov
stc
mov
js
in
fdivrs
sbbb
or
loope
int3
rcr
push
mov
inc
jae
mov
push
cmpsb
shlb
fsubl
pop
outsb
dec
dec
sbb
popl
pop
mov
and
cmpsl
aas
imul
rcrl
movsb
fadd
xor
jmp
shrb
push
stos
cmp
and
cld
inc
or
mov
data16
sbbl
ret
mov
dec
imul
mov
xor
xor
stos
inc
mov
cmp
gs
cmc
data16
cld
add
daa
pop
mov
cmp
push
je
rol
push
and
inc
fs
int
sub
sti
and
loop
in
sbb
xor
sbb
lea
ss
scas
fcoml
xor
cwtl
in
jnp
cmp
push
aas
rolb
sub
cmp
aad
push
lds
mov
lods
repnz
mov
inc
and
test
or
or
xlat
stc
fldt
das
loope
lea
sub
sub
adc
push
or
std
adcl
stc
sub
mov
sti
inc
pop
testl
mov
mov
negb
int3
clc
enter
inc
sbbl
es
lods
push
pop
pushl
add
test
jg
mov
cmp
jl
sbb
sbb
ja
cmc
sub
ds
xor
add
push
and
xor
hlt
push
clc
out
inc
push
lcall
cli
pop
js
test
xchg
test
cmpb
dec
add
pop
inc
sbb
popa
xchg
pop
cmpsl
inc
sub
push
xor
xchg
jae
inc
mov
sub
aam
jbe
fmul
shl
sbb
bound
daa
sbbl
movsl
daa
mov
inc
jl
enter
pop
push
sbb
mov
xchg
mov
adc
cmc
ljmp
push
mov
add
loope
sbb
mov
or
in
les
jle
nop
inc
or
test
push
mov
ss
fisubs
xchg
loop
dec
int3
mov
dec
outsl
xor
jae
cmp
into
mov
pop
in
in
pop
in
mov
outsl
sub
sbbl
lret
std
inc
or
mov
jae
mov
pop
pcmpeqw
dec
pushl
jecxz
test
xchg
fistpll
lods
mov
cli
js
std
fisttpl
mul
jg
mov
gs
or
out
adc
lods
inc
mov
mov
in
push
mov
pop
jmp
push
lds
out
cmp
into
pop
add
scas
mov
andl
sub
xchg
cmovns
pop
insb
idiv
sub
mov
into
push
pop
push
jnp
in
fs
fldcw
fidivrl
pushf
into
mov
call
dec
cli
adc
call
dec
clc
jp
test
shrb
loop
sarb
js
lods
mov
les
push
xchg
push
cwtl
jb
stos
data16
in
pushf
jp
lods
or
xor
mov
sub
or
sbb
xchg
jns
xchg
sub
clc
jbe
or
mov
xor
cmc
mov
mov
roll
sahf
inc
xchg
stc
sub
aam
xor
xchg
mov
mov
int
xor
lret
leave
loop
arpl
jbe
pop
imul
mov
push
jbe
loopne
rcrl
mov
adc
cwtl
push
test
lea
mov
sbb
inc
fdivl
and
mov
xchg
lret
pop
push
into
cmc
dec
ds
out
mov
pop
std
push
out
or
or
pop
xchg
in
test
adc
pop
lahf
jno
mov
mov
les
dec
mov
jo
mov
jb
push
sbb
mov
cld
xchg
sub
std
fisubl
pop
mov
adc
adc
mov
pop
ficomps
cmp
rorl
cmc
adc
shlb
dec
repnz
popf
push
sbb
jae
lods
and
jmp
pop
mov
ss
mov
xor
ja
scas
pop
nop
add
loopne
push
and
call
mov
cmp
pop
stc
and
mov
xchg
jg
jns
in
pop
push
inc
std
sub
mov
pop
and
ret
fnsave
lods
sub
mov
inc
and
call
push
adc
outsl
dec
jle
jg
jnp
daa
cmp
jbe
add
ds
dec
scas
test
dec
imul
jno
clc
out
outsb
mov
xor
add
push
cltd
push
aad
or
sti
pop
push
and
jbe
cmpsl
loopne
sbb
out
inc
xor
cmc
nop
mov
dec
data16
xchg
mov
not
fcmovu
ss
sbbb
aad
outsb
cmpsl
pop
push
mov
push
jne
dec
shlb
mov
add
das
fwait
loope
mov
sbb
add
lods
or
addr16
test
jno
sbb
sti
test
ror
lahf
push
fidivl
xchg
icebp
xchg
rcrl
pop
aaa
lock
orb
add
inc
jae
cmc
xor
dec
mov
sbb
xchg
pop
cmpsw
invd
fimuls
es
sbb
ret
push
insl
mov
jne
dec
out
inc
sbb
jge
mov
out
icebp
arpl
push
lret
incb
nop
fstpl
shll
ficomps
push
xorb
inc
inc
cmc
fnstcw
xchg
xor
mov
sbb
adc
imul
dec
scas
std
mov
je
adc
mov
jne
addr16
xchg
jb
xchg
pop
xor
jle
aad
or
xor
iret
sbb
movsl
pop
mov
mov
pusha
clc
mov
adc
ljmp
loopne
push
or
sbb
mov
lods
add
add
mov
mov
pop
mov
shlb
fcmovb
adc
xor
out
mov
mov
test
xor
pop
popf
inc
xchg
pop
inc
aad
sahf
adcl
mov
pop
mov
xorl
stos
roll
cltd
outsl
xchg
ljmp
xchg
sub
xchg
addr16
je
les
insl
lcall
iret
stos
adc
sbb
fimuls
shll
jmpw
test
fisubrl
push
jge
pop
cmp
cli
mov
or
into
ret
jmp
lea
dec
outsl
or
jne
sbb
loop
fs
jmp
les
aam
push
loop
and
std
mov
mov
in
mov
mov
inc
add
bound
stc
loop
xchg
mov
nop
xchg
push
das
push
sbb
mov
or
push
rcll
push
clc
out
mov
pop
push
ds
icebp
mulb
pop
loop
sub
cmp
sub
inc
or
mov
mov
arpl
add
mov
jmp
aam
jg
pop
mov
mov
fcmovnb
pop
and
aad
push
test
shlb
pop
jbe
jp
mov
dec
jbe
mov
sub
les
xchg
mov
ret
sub
mov
rorl
inc
pop
jnp
aad
bound
popa
loopew
jg
frstor
add
fcoms
js
ljmp
xlat
dec
scas
insb
sbb
dec
push
cltd
mov
addl
shlb
and
data16
mov
fisttps
add
or
add
jne
sbb
lock
sub
das
xchg
push
xchg
jecxz
mov
cld
xor
inc
popf
in
jbe
pop
aam
mov
popa
dec
adc
in
or
aaa
in
insb
ds
push
stc
adc
sub
clc
xor
inc
push
and
jno
or
adc
adc
cwtl
dec
or
repz
pop
jne
mov
inc
sub
cltd
lods
mov
jne
ljmp
stc
xor
xchg
and
push
lahf
dec
mov
int3
imul
lret
dec
mov
lods
dec
std
add
imul
sub
and
pop
xchg
scas
add
and
cli
xchg
mov
push
sub
mov
mov
das
pop
cmp
sub
push
xchg
outsl
aas
int3
inc
cld
sub
fcmovu
or
mov
xchg
mov
lret
mov
das
sarl
ret
push
mov
push
pop
dec
adc
pop
xchg
xchg
and
jns
sub
jl
mull
mov
xchg
mov
adc
push
adc
or
jb
sbb
jnp
mov
je
leave
pop
popf
xchg
or
pushf
mov
jnp
cmp
in
and
xor
mov
jmp
xchg
into
pop
icebp
jae
shlb
jecxz
lds
push
mov
shr
sbb
pop
das
pop
jae
or
andb
xor
test
mov
mov
mov
jmp
lret
leave
adc
arpl
mov
and
cli
addr16
xchg
test
lret
pop
aad
inc
push
pop
popa
push
mov
mov
test
orl
push
int
insl
sbb
add
adc
repnz
mov
out
xchg
mov
mov
push
faddl
sub
or
imul
test
and
push
fucomp
push
bswap
inc
pop
dec
out
or
sub
loope
popf
or
fiaddl
dec
dec
daa
cmpsl
rdmsr
xor
daa
sahf
sbb
mov
stc
outsb
xor
jb
pop
and
sti
jbe
adc
sbb
jbe
pop
or
mov
ja
mov
js
dec
sbb
jp
jecxz
js
sub
mov
popf
test
imull
mov
div
aam
push
mov
sub
and
adc
int3
sti
idiv
inc
enter
out
cli
add
in
shll
add
dec
int
pushf
int
faddp
fldl
mov
or
xchg
loop
xor
testb
cmp
xchg
sti
xchg
mov
jb
pop
add
sub
mov
pop
fmuls
lret
movsbl
cli
adc
sbbb
cmp
jae
jns
jl
and
xchg
jb
mov
xchg
in
lcall
not
test
dec
xchg
lcall
imul
sbb
decb
jp
pop
jns
lods
aam
sub
hlt
xchg
xlat
clc
xlat
push
dec
movl
jle
mov
cwtl
xchg
jmp
xor
cmc
sub
lahf
pop
pusha
ret
aad
imul
sti
mov
cmp
mov
idivb
mov
pop
xor
xor
mov
ljmp
cwtl
jbe
ret
mov
test
xor
adc
shll
test
stc
in
jg
jno
call
bound
pop
inc
popf
cmp
fistpl
jle
or
and
sbb
sahf
push
mov
inc
xchg
or
cmp
repz
push
pop
je
sbb
dec
adc
ljmp
add
incb
test
and
pop
xchg
mov
sbb
rcll
arpl
xor
xor
adc
inc
sarb
sub
test
and
nop
mov
sbb
sbb
insb
sub
add
outsb
clc
cmp
cld
pusha
or
bound
sub
cmc
pop
add
cmp
cmpsl
loop
cmp
pop
sub
repnz
pop
negb
jno
mov
sti
mov
fcmovnu
xor
es
in
jae
mov
pop
shufps
fbld
pop
aas
sub
addr16
push
jns
sarb
aas
mov
mov
xor
bound
xor
sbb
pushf
dec
xchg
aas
push
shrl
pop
xchg
lcall
sub
loope
call
and
mov
lret
into
mov
enter
mov
mov
push
xor
stos
xchg
fs
add
jmp
scas
rcll
fidivs
movsb
ja
in
int
out
xor
inc
pop
lahf
xchg
adc
ret
sbb
cld
sub
std
pop
rcl
shlb
popf
into
xchg
pusha
push
std
mov
repz
orl
scas
outsb
data16
dec
repz
lods
mov
cmpb
inc
daa
pop
and
pop
xchg
sbb
lahf
fsubr
lds
movsl
xor
dec
sarl
fwait
pop
dec
scas
enter
add
push
dec
push
pop
pop
cltd
add
cmpsl
popa
inc
lods
js
or
lea
sahf
ret
mov
push
add
inc
lret
push
push
movsl
cmpl
fldenv
adc
repnz
push
dec
push
push
mov
das
push
divl
mov
push
jl
pop
or
jns
stos
push
dec
adc
cmp
repnz
jmp
in
neg
pop
nop
cmp
push
and
push
xor
adc
xor
fwait
test
or
mov
out
int3
incb
outsb
inc
or
sub
loop
mov
inc
hlt
ljmp
xchg
xchg
in
cltd
adc
insl
ljmp
adc
cmc
enter
je
hlt
inc
add
loope
fimull
subb
inc
xchg
mov
loop
sub
pop
mov
outsl
adc
cs
sub
mov
inc
jge
sbb
cmp
mov
adc
mov
xor
loope
cltd
cmc
and
push
bound
cwtl
add
mov
pushf
or
or
movsb
test
xlat
jmp
leave
or
dec
in
xlat
jno
push
cmp
movsl
shrb
rorl
push
mov
cmp
jmp
mov
xor
je
test
mov
mov
stos
pop
daa
scas
dec
mov
cmpsl
adc
fmuls
pop
lcall
pop
in
movsl
push
inc
sbb
or
push
sub
push
ja
fisubl
pop
fsubs
arpl
and
test
jp
rolb
js
insb
mov
adc
inc
xchg
sti
loop
sti
mov
mov
data16
jne
add
shrl
jp
sub
movsl
out
cmp
xor
popa
outsb
insb
adc
les
lret
fcompl
bound
jmp
jno
jg
lret
movsl
inc
js
sbb
xchg
ja
and
adcb
cli
in
push
cmp
inc
cwtl
add
fnstsw
xor
add
pop
enter
leave
lods
mov
mov
mov
jmp
aaa
popf
mov
mov
add
scas
in
imul
shll
out
js
cmp
adc
sbb
dec
lea
insl
push
jg
sbb
xlat
es
hlt
add
mov
cmp
cmovs
jb
mov
outsb
jno
add
notb
pop
or
push
in
test
jmp
or
fucom
mov
shrl
mov
pop
cmpsb
repnz
hlt
fisubrs
lods
dec
pop
push
dec
jns
fcoml
call
rorb
pop
jmp
jno
or
pop
dec
adc
jne
add
dec
dec
mov
or
dec
les
push
call
adc
xchg
dec
adc
insb
adcb
xchg
lods
adc
push
lret
in
sti
stc
out
repnz
jle
mov
clc
and
dec
mov
sete
loopne
mov
push
mov
mov
inc
sarl
lahf
dec
nop
xchg
push
out
cmc
test
mov
and
inc
out
movsb
imul
into
sbb
icebp
pushw
mov
cs
xor
sahf
xor
fsubs
in
into
or
and
mov
loopne
mov
cmpsb
gs
addb
testb
add
idivl
pop
ds
pop
daa
jmp
enter
cmp
adc
dec
inc
xlat
push
stc
jmp
lods
arpl
lock
jmp
mov
add
xchg
insl
std
mov
adc
inc
xor
sub
or
sbb
sbb
push
scas
setno
lcall
sub
pop
sub
or
pop
push
mov
mov
sbb
mov
fstpt
lahf
ret
inc
fildl
cmp
nop
pop
scas
jge
and
imul
cld
pop
add
shll
cmpl
mov
ds
loope
das
outsb
jbe
idivl
xlat
ja
cmp
xor
aas
sbb
dec
nop
dec
fucom
ja
insl
cmp
js
mov
aam
jmp
inc
cwtl
mov
pop
mov
jle
rol
sbb
mov
fisubl
push
cltd
hlt
das
in
cmp
add
out
fstpt
addb
xchg
int3
les
adc
rcll
xor
or
pop
subl
and
pop
ljmp
mov
lods
adc
xchg
adc
cmpsb
lds
repnz
mov
sbb
add
xor
imul
pop
push
and
repz
ret
cltd
inc
cli
adc
mov
inc
clc
lock
push
push
outsb
scas
adc
sub
aas
fs
xchg
pop
pop
dec
sub
cwtl
sbb
nop
push
xor
cwtl
cwtl
dec
sub
cmp
mov
dec
sbb
inc
jne
push
enter
rclb
mov
out
sbb
sub
jg
pop
mov
sbb
testb
pop
sbb
ret
popf
mov
out
cld
sbb
outsb
pop
pop
sbb
das
jle
jnp
test
inc
test
in
mov
mov
push
push
adc
or
popl
hlt
adc
inc
dec
mov
jmp
pop
mov
fcompl
sti
mov
cs
out
cwtl
pop
pop
pop
pop
mov
sub
cmp
les
cmp
fiadds
or
pop
adc
test
je
sub
sub
loope
enter
cmpsb
in
sarb
scas
in
sub
loopne
jg
insb
mov
stos
xor
ljmp
pop
ret
cltd
gs
push
mov
add
gs
les
sub
in
mov
push
xor
mov
push
mov
bound
ret
mov
shrb
out
and
ja
jo
fidivrs
pushf
xchg
xlat
cmc
ss
fcmovbe
int3
and
cmp
inc
inc
arpl
cmpb
and
xor
aas
and
mov
dec
xchg
lods
push
xchg
cmp
cwtl
pushf
fwait
jnp
push
jns
mov
rcrb
jp
pop
lods
rcll
mov
add
cmp
into
push
mov
dec
ljmp
and
pusha
int3
and
pop
aaa
mov
in
dec
lret
xor
sub
dec
mov
mov
nop
fcmovnu
dec
das
sbb
out
mov
dec
outsl
or
les
pop
sti
push
xor
arpl
out
add
jl
popa
shlb
mov
mov
stc
inc
inc
pop
shll
mov
pop
dec
pushf
in
pushf
rclb
movsb
xor
testl
sbb
sti
outsb
int
ret
or
mov
shr
mov
mov
jp
sub
clc
cmpsb
insl
inc
mov
mov
dec
sahf
push
lock
mov
js
mov
push
mov
into
out
ficoms
jmp
pop
jno,pn
xchg
mov
and
out
mov
mov
out
lods
and
or
andb
mov
int
das
mov
xchg
jg
add
sahf
loope
sbb
imul
pop
inc
bound
add
repnz
xchg
repnz
lcall
xchg
dec
not
jne
pop
out
outsb
fs
inc
ret
loop
mov
fisttpl
xchg
mov
fdivs
loope
push
xor
jo
mov
out
ret
mov
lret
xchg
lock
pusha
fiaddl
das
lahf
hlt
jl
cltd
clc
add
pop
fs
xor
loop
ss
idivl
mov
outsb
jmp
mov
cmpsl
das
inc
fsubl
test
test
stos
lret
mov
sbb
repnz
rclb
lock
imul
sbb
lret
sub
mov
stos
daa
xchg
xchg
fadds
fnstsw
dec
js
cmc
in
pop
jecxz
push
push
leave
xor
pushf
andb
in
fbld
insl
insl
cmp
jns
aad
xchg
hlt
adc
cmp
inc
das
js
sub
jae
je
mov
cmp
xchg
or
insl
into
xchg
movb
fucompp
and
sbb
sub
push
cmp
mov
fs
jno
inc
mov
cltd
sar
cli
dec
ret
mov
jp
mov
inc
imulb
imul
pop
es
inc
pop
testb
enter
adc
adc
lock
out
pop
cmp
aam
adc
loopne
fldt
cli
xor
push
test
pop
cmp
mov
sbb
xchg
inc
popa
or
mov
inc
mov
hlt
stos
ja
mov
mov
lret
hlt
adc
fdivr
jle
arpl
cwtl
lret
jb
enter
aam
out
push
test
scas
insb
xlat
jno
and
xor
adc
insl
fmuls
mov
stc
jnp
aaa
push
pop
jge
out
fnstenv
pop
rorb
cs
addr16
mov
xchg
dec
dec
dec
lret
fmulp
xorb
loopne
xchg
dec
sbb
jle
ret
in
xchg
dec
int
shlb
call
pop
lock
add
sub
das
push
clc
mov
or
inc
pop
and
mov
cmp
test
pop
pusha
call
fnstcw
lds
in
push
cwtl
jb
test
inc
and
mov
xor
negb
arpl
sti
loop
xchg
xchg
push
lret
cmp
lahf
mov
mov
jnp
addr16
enterw
in
popf
je
repnz
pusha
mull
adc
sub
or
and
sar
dec
fildll
dec
popf
mov
mov
xor
clc
nop
out
push
jmp
pop
in
icebp
lock
jne
push
loop
arpl
and
in
and
fdivl
add
aad
in
les
test
pop
jae
decl
mov
int3
cmc
mov
cmpsb
dec
sbb
mov
dec
pop
shll
cmp
fldt
out
mov
adc
scas
enter
sbb
lret
jbe
inc
sub
leave
sub
outsl
xchg
add
pop
shll
adc
lock
dec
push
push
fisttpll
cmp
and
cmp
mov
into
mov
bound
xor
std
outsb
push
dec
cmp
inc
mov
or
js
popf
mov
xchg
test
push
stos
xchg
aas
inc
jmp
test
movhps
test
loop
mov
inc
and
dec
popf
enter
lds
test
jl
lds
lock
les
cli
imul
add
pop
out
xlat
push
push
outsb
nop
inc
pop
leave
mov
fisubl
negb
mov
ja
or
js
cmp
iret
sub
lahf
loope
and
test
divl
add
push
inc
sar
jo
cli
ret
push
push
mov
test
jns
cmp
lods
sub
mov
mov
sbb
or
outsb
mov
inc
data16
jge
xchg
adc
mov
pop
aas
loop
rolb
jnp
mov
jo
bound
push
jns
int
or
adc
hlt
testb
dec
add
mov
cmp
and
enter
xchg
inc
repnz
insb
leave
xchg
lods
xor
mov
sbb
mov
es
cmp
test
imul
testb
icebp
xor
add
fs
mov
lret
pusha
xchg
orl
sub
mov
faddl
imull
adc
popf
push
out
gs
mov
dec
xchg
sti
insl
int
mov
clc
xchg
push
mov
or
pop
sbb
and
pop
sbb
lret
xchg
loopne
xchg
jb
les
or
cmp
cmc
push
xchg
fwait
adc
clc
iret
dec
xorl
ja
sub
lods
mov
lds
push
scas
xlat
dec
adc
imul
lcall
push
lret
mov
je
cld
in
popa
inc
mov
int
pusha
mov
insb
ds
out
data16
lods
add
loop
loopne
int3
cli
addb
pop
jge
push
cmpsb
std
ret
inc
sub
mov
insl
xchg
pop
mov
clc
mov
dec
imul
jle
jle
fwait
jmp
jp
aad
and
cmp
push
cvttps2pi
and
movsl
aam
pop
dec
cwtl
or
xchg
xchg
xchg
fbstp
adc
int
es
sub
mov
icebp
push
dec
jmp
sub
std
jne
mov
jnp
xor
push
mov
dec
mov
in
ja
mov
inc
inc
jp
hlt
test
mov
fsts
jp
enter
dec
jmp
fmull
popa
out
pop
push
xor
xchg
ja
xchg
lcall
cmp
add
in
push
pusha
ret
sub
sub
fstl
dec
xor
fdiv
int3
fildll
out
lods
adc
mov
sbb
fwait
mov
lods
sbb
insl
cmpb
pusha
push
push
sub
ret
adc
add
mov
nop
push
cs
ja
add
sbbl
idivl
push
fldcw
loopne
mov
sbb
mov
push
inc
mov
jge
leave
adc
xchg
mov
retw
sar
mov
push
in
dec
xchg
mov
sbb
add
pop
daa
dec
mov
push
lahf
enter
push
sub
bound
les
test
subl
mov
decb
jb
jae
push
stc
pop
dec
push
movl
nop
sbb
inc
xchg
xor
fwait
jecxz
fistpl
fists
out
fs
daa
fsubl
or
loopne
push
xchg
mov
sti
mov
mov
ss
ret
push
test
pop
and
cmpsb
pop
dec
test
pop
aad
arpl
div
cmp
pop
cmp
cmpsb
xor
jnp
inc
divl
scas
insb
dec
addr16
cli
ja
push
les
adc
and
scas
daa
pushf
stos
leave
aas
hlt
inc
jle
and
stc
icebp
mov
push
das
mov
sub
into
xor
std
stos
imul
aaa
add
cwtl
sub
ja
adc
mov
mov
pop
inc
sarb
movsb
sbb
loop
xchg
pop
mov
lods
sbb
lret
repz
cwtd
jmp
shll
shl
xchg
add
fcmovnb
adc
cs
xchg
adc
jecxz
jno
lret
ret
pop
cld
jg
sbb
clc
das
adc
and
adc
into
les
pop
xor
mov
jecxz
mov
iret
rcl
adc
or
js
inc
dec
dec
inc
jae
into
inc
lea
into
mov
cmp
xchg
xchg
repnz
push
jo
sbb
inc
ljmp
xor
movsl
int
aam
int
cltd
push
lock
add
in
jecxz
mov
dec
fdivl
ds
or
mov
loope
adc
mov
jle
mov
mov
mov
das
testb
outsb
push
lret
mov
pushl
inc
es
out
aad
jns
in
xorb
daa
sbb
stc
mov
mov
pop
sub
btr
sub
sub
push
insb
mov
pop
es
data16
cmpsb
in
orb
inc
test
inc
je
xchg
and
imul
scas
sbb
dec
ret
xchg
push
loop
jno
movsl
sbb
jo
popf
cmpsb
ret
or
out
or
int3
out
jnp
loope
call
ds
sub
shll
jae
mov
sahf
cmp
xchg
adc
push
or
mov
xchg
das
lret
aaa
ja
in
or
insb
xlat
push
or
jl
add
cmc
xlat
fstpl
xorl
sub
xchg
mov
pop
cmpsl
das
adc
xchg
sbb
enter
mov
mov
ss
int
shrl
scas
xchg
je
js
lods
cmpsb
xchg
mov
lahf
mov
xlat
imul
inc
outsb
in
lods
push
insl
addr16
iret
mov
das
sub
outsl
sahf
jnp
fldl
push
mov
jp
jnp
fldenv
mov
xchg
pop
cmp
pop
mov
call
rorl
jno
mov
sbb
loopne
mov
dec
adc
or
insl
jecxz
js
insl
mov
pushf
sbb
ds
arpl
inc
inc
imul
and
in
cmpsl
data16
cmp
cmc
idivb
inc
xchg
cli
aas
fmul
repz
mov
add
lcall
adc
or
cmpsl
and
fisttpll
fs
pop
pop
dec
aas
lods
gs
imul
aas
push
push
jns
or
lea
ss
jmp
sub
push
std
fsubl
ret
clc
test
cmp
add
lds
movsb
test
add
in
lcall
xorb
in
add
loop
outsl
rcrb
xor
jg
inc
cmp
mov
xchg
fs
cmp
jbe
mov
jae
adc
mov
clc
fwait
mov
mov
xchg
sahf
pop
push
cwtl
daa
pop
xchg
sub
inc
scas
pop
push
push
dec
mov
sub
xchg
fwait
les
inc
test
ret
pusha
and
or
addb
mov
in
cmp
ds
filds
shrl
pop
aas
and
je
aaa
sub
jle
ret
mov
mov
popf
push
mov
push
aas
movl
lods
xor
mov
bound
scas
cmpsb
imul
clc
pop
sub
into
loopne
mov
addr16
adc
inc
fldenv
add
xor
aas
jge
sbb
arpl
pop
sbb
push
sub
or
imul
xchg
imul
insb
jnp
imul
jnp
hlt
pop
inc
shlb
push
sti
or
sbb
je
xor
stos
nop
push
arpl
or
ss
sbb
repz
sbb
dec
in
or
push
xchg
jg
or
push
mov
dec
sti
push
pop
xchg
adc
inc
add
add
jg
mov
imul
outsl
push
repnz
push
repz
test
xchg
jecxz
lahf
add
xor
cmp
mov
xchg
push
xor
das
mov
std
loope
xchg
ljmp
mov
or
mov
shrb
sub
push
sbb
mov
jns
jne
out
or
addr16
ret
loopne
inc
jnp
dec
pop
add
repz
icebp
cmp
xchg
mov
cli
jp
lret
add
ljmp
mov
adc
sbbl
dec
inc
xchg
subl
dec
push
jge
out
dec
int3
mov
xor
orl
xchg
dec
dec
lret
pop
ljmp
sbb
mov
xchg
into
mov
dec
clc
dec
cmp
adc
jl
addr16
mov
loopne
and
mov
pop
mov
cmp
or
mov
or
aas
add
push
jmp
test
push
xchg
fxch
lds
add
ljmp
cld
rolb
js
fwait
out
pop
push
or
lahf
add
arpl
sbb
in
cwtl
mov
in
lret
arpl
fdivrp
lahf
aas
adc
inc
inc
push
in
jl
jns
push
orl
rdpmc
imul
xchg
scas
movsl
jle
scas
clc
in
cs
push
mov
in
lea
mov
add
inc
dec
mov
add
xchg
pop
test
push
bound
sub
jne
and
shrl
inc
cmp
jae
aas
call
push
imul
pop
or
dec
shlb
push
inc
ljmp
cmpl
fcom
testl
or
xor
sub
fwait
lds
ret
aaa
ret
sub
sub
std
adc
xchg
stc
in
mov
pop
fists
popf
or
call
jecxz
mov
sub
mov
and
les
outsl
sahf
jb
cmpsb
pushf
pop
addb
dec
inc
cmp
ret
loopne
pop
imul
push
or
in
mov
xchg
ret
xchg
sbb
outsl
sub
adc
jmp
dec
loop
mov
ljmp
xlat
or
out
inc
std
xchg
enter
test
xchg
xor
arpl
iret
mov
in
adc
das
das
adc
push
mov
and
cwtl
fisttps
leave
and
jo
iret
rol
cmpsl
cmc
les
jae
dec
aas
mov
popa
mov
into
hlt
xor
pop
mov
incb
clc
sbb
cmpsl
out
and
dec
add
test
cmc
mov
xor
aam
pop
push
je
scas
std
fildll
and
mov
xchg
and
push
pop
ja
jnp
into
aam
mov
inc
cwtl
data16
sub
imul
inc
loopne
out
sbbb
std
je
sbb
jns
das
sub
insb
out
inc
jecxz
sbb
sub
add
sub
jo
mov
jns
mov
arpl
enter
out
xor
aaa
mov
enter
xchg
pusha
inc
jecxz
loope
cmc
mov
mov
jnp
stos
loop
mov
ljmp
jg
mov
mov
test
or
loopne
mov
lretw
sub
cmp
daa
xchg
jmp
cs
fildl
mov
or
or
add
and
pop
adc
test
fldenv
aas
pop
sbb
adc
sbb
test
mov
cwtl
loopne
mov
pop
aaa
mov
sub
imul
stc
xor
or
std
adc
jmp
push
cmp
in
ss
mov
xchg
gs
cmp
fcoml
or
sbb
cs
sbb
daa
pop
jp
push
cmpsl
dec
in
jl
and
mul
adc
dec
enter
jbe
dec
insb
imull
cmpsl
cmpsb
iret
test
lahf
into
sub
jbe
dec
jo
fcmovbe
fstl
mov
fwait
ret
add
das
enter
nop
sub
mulb
add
lock
fistps
cld
outsb
in
sbb
xor
movsl
pop
adc
push
push
paddb
in
loope
shrl
lcall
dec
mov
xor
or
adc
sbb
inc
popf
incb
lds
movsb
arpl
mov
movq
pop
xor
dec
sbb
xchg
sub
rcr
call
mov
ds
xlat
adc
jg
cltd
repz
in
loop
fistl
or
jo
and
and
orb
push
sub
mov
leave
out
jns
loop
add
push
pop
push
inc
inc
cld
inc
pop
and
sbbl
mov
dec
das
ret
mov
pop
movsb
add
clc
mov
adc
idivb
sti
stos
movsb
lods
mov
xchg
movsb
push
ret
fildll
test
add
add
xor
fdivrl
cmpsb
cmp
aaa
dec
pop
sbb
orb
pop
or
cmpsb
sbb
xor
lret
dec
fidivrs
das
lock
imul
test
dec
je
hlt
and
out
fdivrs
movsl
jns
push
das
pop
dec
fisubrl
clc
in
movsb
push
idivl
insl
pusha
inc
mov
cli
xchg
jle
push
inc
xor
mov
and
xor
out
mov
xlat
dec
imul
sub
mov
popf
mov
mov
mov
daa
mov
out
sti
loop
cwtl
stc
or
notb
add
pop
mov
dec
add
xor
in
fbstp
mov
dec
push
std
push
mov
sbb
lret
and
in
std
xchg
sub
popa
push
cltd
ja
jne
jns
xor
sub
lds
push
fcompl
insb
pop
cs
pusha
and
cltd
stc
xchg
xchg
pop
mov
jno
leave
xor
xchg
mov
push
cmp
mov
sub
subb
fildl
adc
sbb
xchg
les
pop
stc
inc
loop
sub
adc
jp
fimull
movb
mov
mov
or
insb
pop
add
xor
cli
mov
in
imul
xchg
xor
xor
mov
mov
jle
fsubl
lret
mov
scas
push
xchg
scas
dec
repz
das
testb
jae
mov
mov
xchg
cwtl
jno
xchg
fs
mov
rolb
xchg
movsb
pop
fisubrs
mov
mov
or
inc
xor
mov
int
andb
mov
std
fmulp
mov
je
push
shlb
adc
mov
stc
fsubs
cli
inc
cmp
mov
loopne
mov
inc
aad
xor
ja
insl
icebp
jns
add
push
out
inc
imul
pop
dec
iret
cmc
and
into
push
stos
or
mov
push
sbb
fdivp
test
out
test
insb
enter
xchg
push
ljmp
rcrl
fildl
pusha
cmp
lret
inc
es
fs
jge
test
mov
sbb
mov
daa
scas
push
cld
and
sub
shll
mov
jmp
dec
pusha
inc
push
shrl
push
aad
jbe
and
push
xchg
cwtl
dec
int
les
icebp
cs
xchg
cli
pop
movsl
and
and
fidivs
xchg
aam
loope
push
jle
enter
ljmp
jge
lea
bound
rcll
pop
out
sub
scas
cltd
pusha
cwtl
jae
aad
sbbb
addr16
jo
aaa
shrl
aas
dec
push
out
mov
and
test
xor
xchg
inc
fwait
lahf
test
mov
pop
sbb
mov
adc
mov
cmc
imul
sbb
jno
int
sbb
pushl
jecxz
daa
push
inc
dec
xchg
pop
or
nop
push
fcomp
dec
pop
push
inc
or
or
inc
push
paddw
jae
xchg
test
ss
dec
ret
push
mov
aam
push
adc
sbb
fldl
insl
dec
mov
lods
jmp
icebp
sub
aas
ja
xorl
cld
fisubs
jbe
fnstenv
insl
jmp
sbb
push
inc
pop
cmpsl
outsl
int3
leave
fildll
sub
es
jge
xor
and
mov
insl
cwtd
pop
lret
xchg
rorb
adc
push
rclb
sub
scas
push
nop
data16
sarl
ret
repz
cld
pop
aad
out
add
cmp
mov
adc
pop
xlat
sbb
outsl
idivb
jp
fildll
into
cmp
repz
sub
ja
lret
sub
adc
popa
loope
sub
movsl
fdiv
sbb
mov
mov
jmp
jg
out
pop
and
mov
mov
js
ljmp
in
aas
sub
mov
std
adc
ss
cmp
call
sub
dec
enter
ds
lahf
mov
dec
cld
aad
push
sti
gs
xor
jecxz
pop
and
mov
add
sub
adc
and
mov
inc
das
ret
pop
or
xchg
ffree
xchg
das
les
pushl
jne
pushf
pop
int3
adc
fistpl
into
dec
jmp
stc
mov
sbb
add
data16
cmp
push
adc
sbb
out
pop
mov
mov
pop
jno
stc
push
lahf
jne
insl
pop
or
leave
jge
popf
test
clc
xchg
jmp
or
leave
in
and
icebp
mov
xor
mov
incb
pop
orb
adc
stc
inc
rclb
push
sbb
hlt
pop
mov
xor
mov
pop
flds
cmp
nop
sti
xchg
pop
cmp
inc
mov
cltd
adc
push
fsubrs
stos
xor
mov
mov
push
inc
nop
nop
inc
cmpsl
shll
shlb
adc
and
add
push
cmovs
bound
enter
xchg
mov
enter
mov
hlt
inc
mov
ret
shrb
lret
fstps
sub
and
sti
repnz
xorl
bound
shrl
pusha
incb
inc
lds
cmp
cmp
sti
sarl
dec
sar
iret
fstps
add
dec
pop
mov
pop
test
pop
cwtl
loopne
cmpsb
push
adc
es
jge
mov
xchg
xchg
fcompl
mov
orl
jg
cmp
arpl
repz
mov
push
mov
loopne
mov
sbb
xchg
mov
mov
mov
std
call
subl
inc
or
xchg
sbb
ret
aas
into
fcoms
imul
xlat
dec
xor
leave
out
mov
jbe
enter
mov
xchg
or
repnz
shl
jnp
js
or
and
add
push
pop
or
xor
cld
mov
add
fimull
inc
jmp
bound
notb
inc
jmp
inc
shll
dec
cmp
push
fsts
mov
out
in
cltd
pop
dec
loop
aas
and
cmpb
fstpt
pop
movb
divb
sbb
jecxz
ret
inc
sub
push
sbb
adc
inc
or
pop
nop
sti
lods
xchg
aas
adc
aaa
push
mov
add
mov
imul
add
lods
xchg
inc
scas
jl
sub
pop
jb
pop
aaa
inc
mov
or
iret
js
sbb
fadd
repnz
lcall
xor
cmp
jle
add
cltd
xlat
jne
mov
inc
push
aaa
movl
lea
or
ja
adc
inc
pop
stc
out
ss
jl
pop
cld
in
clc
or
js
jp
mov
ret
mull
push
rorl
clc
jae
fdivrl
loope
data16
sahf
cvtps2pd
inc
inc
pop
ds
mov
popf
mov
pop
sbb
mov
cli
mov
into
jo
cli
enter
rclb
fstl
fmuls
loope
inc
gs
outsb
sbb
adc
pop
int3
or
lret
add
mov
cmp
ret
pop
cmp
sbbl
pop
insb
int
fcompl
mov
xchg
xchg
adc
mov
or
jb
mov
fs
out
in
mov
inc
push
outsb
dec
leave
jge
out
mov
inc
fwait
dec
or
push
ljmp
icebp
sbb
add
fnsave
cmp
out
cmpsb
inc
lods
and
dec
push
add
shr
xchg
js
fldl
jp
mov
in
mov
jae
xor
mov
popl
jb
scas
and
and
push
mov
mov
data16
pop
scas
mov
mov
pushf
xor
sti
pop
mov
or
orl
cmp
ljmp
push
jecxz
and
push
and
xchg
lock
mov
das
test
inc
xchg
pop
aam
mov
pop
incl
cwtl
jmp
push
inc
cvtps2pd
pop
mov
pusha
mov
xchg
adc
inc
repnz
sub
nop
addr16
aas
mov
mov
jle
mov
dec
enter
push
adc
dec
aas
movb
insb
cmp
push
mov
icebp
cmpsb
and
call
push
ja
jl
and
test
arpl
adcb
rorl
sub
std
cmp
sbb
loop
hlt
xchg
cmp
hlt
mov
cmp
adc
enter
insb
leave
sub
cmp
mov
pop
ds
daa
repz
dec
sbbl
shl
clc
mov
xor
aam
sub
add
jp
inc
pop
adc
xlat
dec
mov
xor
xchg
inc
sbb
sti
pop
hlt
cmp
mov
int
in
adc
push
jne
adc
out
push
inc
imul
sbbl
dec
mov
imul
lret
jecxz
cmp
pusha
xchg
push
jb
pop
loop
pop
xchg
jmp
add
stos
xchg
jne
fdivrs
fs
fstps
add
scas
xchg
loopne
arpl
inc
fistps
pusha
ds
fiadds
cwtl
mov
and
lcall
jle
xor
xchg
stos
idivl
jo
mov
sbb
mov
xchg
adc
cmp
sub
test
aam
out
sub
out
das
and
xor
add
xchg
test
or
cmpsb
bound
sub
push
sub
add
ja
in
dec
inc
adc
add
idiv
mov
jl
and
sub
fbld
insl
cmp
pop
into
leave
cmp
inc
lods
cwtl
les
mov
rcll
outsb
inc
sub
xchg
push
mov
fstl
add
cmpsl
test
push
das
aad
jnp
inc
fsubl
mov
ret
bnd
call
sub
lods
push
mov
stos
mov
gs
test
aam
xchg
pushf
xchg
pop
inc
std
pop
outsl
sub
xchg
int3
push
xchg
and
jge
imul
mov
push
fnstcw
leave
imul
sbbb
jge
mov
iret
jbe
ss
ret
sub
cli
hlt
sbb
fistps
in
inc
push
pop
dec
and
adc
sahf
mov
bound
and
into
mov
sub
pop
jmp
lret
loopne
mov
aas
lock
inc
and
fisubrl
leave
pop
pop
and
mov
lods
aad
shlb
mov
rsqrtps
sti
pop
mov
mov
inc
sub
push
aaa
insl
or
pushf
xchg
mov
into
cmpsl
lret
pop
ja
lods
lahf
out
jns
cmpsl
imul
sub
xabort
sbb
sbb
les
jp
aaa
adc
pop
ss
call
xchg
adc
test
mov
mov
bound
xor
jbe
cltd
imul
or
sub
push
daa
pop
adc
pushf
cli
in
mov
inc
mov
int3
lahf
mov
pop
add
dec
iret
repnz
adc
push
inc
scas
jmp
adc
insl
idivb
dec
push
adc
leave
lods
adc
xchg
in
fdivp
into
out
mov
jns
or
pop
cltd
shl
les
insb
xchg
sub
sub
fcmovnu
mov
mov
fsubrl
idivl
gs
les
mov
pop
pop
sbb
adc
mov
ja
flds
stos
fldt
or
loopne
dec
loop
movsl
repnz
push
inc
aad
pop
cmp
adc
xchg
cld
mov
and
sbb
aas
arpl
push
pop
adc
pop
fisttps
jbe
push
subb
sub
arpl
lcall
push
movsl
mov
jle
sbb
dec
push
cmpsb
repnz
jp
jp
sub
or
dec
xchg
or
mov
test
std
enter
sub
rcr
mov
jecxz
icebp
repz
sub
je
or
call
cmpsb
shl
mov
xor
das
pop
cmp
sub
loope
cmp
sbb
data16
sbb
push
ret
cwtl
aas
test
jl
mov
xchg
in
pop
sbbb
in
sub
sub
loop
js
dec
jge
fs
pop
mov
push
inc
or
dec
sbb
sub
sub
cmpsl
mov
mov
int
dec
leave
ljmp
add
and
mov
xor
push
out
sbb
pop
scas
adc
mov
mov
mov
out
rorl
shl
or
cmp
dec
xor
cwtl
inc
sarl
aad
dec
loopne
sbb
xor
lcall
gs
or
cld
xchg
sub
or
mov
rclb
std
stos
stos
jae
mov
mov
mov
icebp
push
enter
daa
pop
mov
sbb
imul
pop
adc
paddd
out
sub
jbe
jecxz
push
imul
clc
fistps
js
addb
scas
je
mov
push
jnp
scas
mov
adc
adc
add
inc
out
push
scas
inc
xorb
add
jae
cmp
mov
cmp
stos
test
mov
xchg
mov
and
lret
in
adc
pop
faddl
jmp
aas
sahf
mov
or
clc
std
cmc
dec
push
lret
stos
sbb
lahf
lock
scas
cltd
adc
mov
cs
aaa
imul
push
mov
rcrl
xlat
xchg
scas
sbbb
call
ret
xchg
and
add
mov
pop
cs
pop
int
call
popa
sbb
mov
mov
aad
lea
ja
orb
mov
pop
out
test
fwait
sbb
dec
cli
adc
adc
xchg
mov
mov
imul
xchg
mov
andl
fldcw
or
out
lcall
and
ljmp
xor
mov
dec
scas
mov
mov
xor
js
xchg
lea
xchg
and
xor
sarb
sahf
sbb
cli
dec
mov
jl
cmc
cmp
xchg
popf
popf
add
imul
cmpb
sub
adc
test
jae
sbb
test
ss
daa
inc
xchg
lahf
xchg
ret
rclb
loopne
arpl
push
jge
jmp
jg
fimuls
lret
testl
add
cmpsl
loop
popf
addl
dec
stos
mov
ret
cmpb
dec
add
scas
mov
adc
popa
push
icebp
jb
in
lock
xchg
sarb
in
ljmp
inc
test
sbb
outsb
cmp
adc
jb
fst
mov
xor
filds
cli
mov
gs
fildl
popf
cmp
aad
mov
or
lea
imul
xor
jns
pop
inc
mov
xchg
xor
out
or
push
rorb
push
aad
dec
push
add
add
mov
pop
imul
std
fistpll
push
addr16
pop
pop
jmp
pushf
cmc
js
mov
xchg
or
adc
jne
jnp
pop
dec
stos
cwtl
mov
sub
push
mov
pop
fdivp
add
pop
fistpl
xor
mov
in
push
xor
mov
adc
repz
push
jae
dec
imul
aam
mov
push
mov
inc
imul
cmpsl
ret
lahf
jno
add
mov
adc
and
jl
mov
out
fsubs
mov
mov
mov
outsl
ret
cmp
adc
dec
addr16
aad
cli
add
cmpb
repz
mov
pop
inc
inc
leave
cmc
sbb
inc
pusha
sub
jl
xchg
mov
mov
mov
mov
dec
inc
ret
es
push
mov
ficoml
pop
pop
mov
idiv
orb
lahf
mov
pop
insl
mov
add
fwait
lea
pop
fldenv
cmp
iret
add
cmp
movsl
insb
xchg
jb
sub
inc
xchg
and
iret
fs
call
inc
mov
fsubrl
addl
flds
inc
or
insl
addr16
jb
ret
sbb
inc
les
or
add
xchg
mov
cmp
ljmp
lahf
push
cmp
and
cmc
cmp
cmp
jb
iret
xor
adc
xchg
push
out
pop
shll
movsl
and
push
ret
inc
xadd
xchg
jp
jo
xorl
dec
inc
and
cmp
xchg
mov
inc
dec
xchg
lret
pop
dec
push
pop
cld
push
iret
in
xor
bnd
cmc
fisubs
and
negb
stc
rolb
cmp
repz
in
data16
cwtl
aad
std
adcl
adc
xchg
cmc
fists
push
xchg
ja
mov
mov
loop
mov
mov
inc
dec
cmp
mov
lods
mov
mov
pop
lret
mov
xor
test
sub
das
sub
addr16
xchg
xor
jbe
or
jbe
data16
inc
sti
or
js
mov
call
das
mov
shr
cli
xchg
inc
add
or
and
call
sbbb
outsl
xchg
sub
ret
out
shr
std
xchg
cmp
test
repnz
mov
mov
pushf
lea
mov
and
cmp
fxch
cli
push
add
ljmp
notl
pop
pop
and
lods
jns
lods
cmc
add
fdivr
xor
xor
xor
subb
loopne
mov
outsl
xchg
fadds
jns
dec
cmp
cli
push
mov
dec
and
fcoms
mov
or
lret
sub
mov
cli
push
popa
adc
js
and
and
mov
adc
sbbb
out
push
rcrl
daa
es
jle
pop
pop
pop
out
jo
adc
add
int3
cmpsb
add
fsts
pop
subl
xor
je
mov
mov
mov
aas
popf
pop
je
and
in
test
aas
in
lret
mov
pop
inc
xor
jae
dec
data16
sbb
out
int
test
xor
dec
pop
xchg
pop
insb
aas
ud1
stos
ss
adc
push
dec
stc
mov
add
in
imul
imul
scas
test
pop
inc
std
movsb
add
inc
and
cmpsb
push
mov
jecxz
sub
push
and
scas
lret
mov
cmp
push
pop
call
jnp
imul
push
inc
cmpsl
jno
jo
stc
aad
jecxz
dec
pop
xorl
out
fs
outsb
lock
lods
cli
sbb
lods
cmp
js
jbe
mov
int
jmp
fldl
mov
xchg
cmp
xor
or
dec
xchg
movsb
inc
sbb
inc
add
cmc
cwtl
push
mov
fists
cmp
aam
xchg
imul
xchg
cmpsb
fidivrl
or
mov
mov
popf
xlat
inc
fistl
loope
adc
push
cwtl
xchg
inc
sbb
jmp
mov
nop
in
mov
insl
scas
pop
push
push
jmp
jo
adc
call
mov
lds
cli
mov
testb
inc
push
loopne
add
fimuls
mov
pop
jp
stos
insb
sahf
std
scas
leave
rolb
aaa
icebp
pop
outsl
stos
xor
cltd
add
xchg
xor
or
sub
sub
cmpsl
cmp
loopne
sub
mov
rcrl
mov
jno
out
outsl
pop
and
je
mov
xor
subb
or
push
cmp
movsl
jns
loopne
jbe
mov
mov
jae
push
out
sub
fstpl
cmp
das
repnz
cmp
cltd
lea
ret
push
fists
mov
lock
adc
push
or
jge
pushf
and
jmp
xor
fadds
popf
and
enter
int3
inc
dec
mov
rcll
mov
dec
mov
lds
sub
mov
arpl
or
mov
pop
xor
mov
mov
mov
mov
sar
xchg
in
sbb
arpl
add
int
hlt
aad
or
cld
sub
fiadds
sub
mull
dec
or
mov
cmpb
cld
incl
xor
sbb
stos
popa
cmpsb
scas
rolb
js
sahf
adc
js
cmp
pushf
mov
mov
mov
adc
xlat
mov
adc
arpl
movsb
inc
cs
jae
dec
fs
test
inc
or
test
xlat
mov
lea
add
jnp
mov
out
xchg
mov
ja
xor
js
ds
in
fwait
and
adc
test
mov
cmpsl
imulb
adc
outsl
pop
test
xchg
mov
cld
jnp
stc
dec
xchg
idivb
dec
aas
push
inc
fisubrs
mov
xor
sub
sarb
ror
orb
icebp
jmp
lcall
jb
int3
push
cli
fcompl
out
jne
adc
mov
insl
xchg
add
add
jns
xorb
movsb
mov
mov
sbb
adc
orb
sbb
jne
inc
sarl
pop
mov
jmp
mov
mov
ds
push
xchg
subb
std
inc
repz
out
jl
xlat
dec
push
gs
cmp
cmpsl
sbb
xchg
push
lret
int
hlt
leave
nop
ret
cmp
in
cmp
test
push
call
mov
adc
push
loopne
cmpsb
sub
xchg
into
dec
cmc
insl
push
jg
and
sub
push
sarl
out
inc
stos
or
mov
lds
push
fcmove
cmp
sub
jae
lret
mov
sub
and
lcall
jmp
mov
inc
jnp
cmp
push
ljmp
scas
mov
jns
xlat
pop
push
inc
ljmp
cli
mov
aam
pop
and
popf
out
cltd
inc
test
xor
je
pop
xchg
testb
dec
pop
xor
xchg
pushf
mov
mov
sbb
cmp
or
pop
dec
jg
mov
adc
ror
xchg
and
jb
iret
adc
test
jnp
loope
xor
and
dec
pop
dec
sub
mov
les
lret
mov
mov
lea
cmc
shrl
dec
adc
daa
int
push
cltd
add
decb
imul
ret
sub
loope
call
lods
xchg
or
lds
stc
sbb
in
shr
in
and
dec
inc
dec
inc
orb
pop
arpl
jb
mov
jo
xorb
ds
insl
lahf
fstps
mov
xor
mov
mov
mov
xor
cmp
mov
dec
mov
cmp
mov
insl
sub
mov
ljmp
mov
dec
mov
jno
dec
ficoml
pop
test
test
and
inc
lret
adc
mov
movsl
sbb
in
gs
jl
jl
cwtl
sbb
pop
push
cli
pop
xchg
adc
xchg
fcoml
arpl
mov
cmp
and
or
outsb
ret
mov
pop
pop
ds
jae
enter
xchg
pop
jns
nop
xor
adc
mov
adc
xor
jns
imul
sub
scas
fld
fldenv
sbb
sub
and
pop
sbb
fistps
add
gs
repz
sahf
shll
das
fidivrl
movsl
ds
dec
add
cmp
rcll
lret
int3
or
jmp
jae
xchg
out
cmp
imul
in
mov
sbb
jle
idivb
jbe
arpl
and
xor
push
insb
sbb
imul
lret
push
clc
dec
inc
cmp
loopne
rolb
aaa
jno
out
inc
and
test
and
pop
movsb
cmpb
fiadds
or
mov
cld
sahf
or
dec
jnp
in
mov
mov
mov
cmp
cwtl
jb
xorl
pop
sbb
jmp
mov
fisubs
stc
in
cmp
out
sti
test
cs
imul
mov
mov
dec
dec
mov
loope
sub
sahf
add
dec
stc
pop
xchg
sti
popf
movups
scas
shlb
sarl
xor
xchg
out
jg
sub
call
sub
fsubp
and
aas
mov
add
push
je
sbb
repz
mov
mov
mov
xor
fisubl
movsl
and
inc
lret
test
sarb
es
inc
xchg
call
mov
cmc
push
repz
mov
out
mov
fmul
dec
ds
mov
jecxz
scas
and
stos
or
cmp
cmp
jecxz
in
sbb
and
mov
inc
dec
inc
adcb
inc
sub
inc
inc
idivl
jns
movb
aas
and
sbb
in
ja
ffree
popf
int
adc
stc
mov
and
movsb
out
int
aad
cmp
mov
push
je
int3
adc
lods
pop
mov
mov
ret
in
xchg
out
lahf
xchg
add
push
adc
mov
cld
pop
xchg
cmp
jmp
lahf
rorl
push
xchg
pop
pop
scas
or
sbb
jno
movsl
test
scas
imul
stos
mov
push
xchg
insl
dec
add
andl
pop
sbb
jb
out
mov
aam
cmp
dec
or
push
mov
lret
ja
jae
or
stos
jle
lret
add
es
scas
mov
xchg
push
cmp
shl
popf
sti
aas
lcall
inc
ja
ds
popf
outsl
push
fs
test
adc
test
inc
pop
jne
decl
and
dec
test
xchg
imul
jbe
add
jns
call
jbe
imul
outsb
ficoms
andb
lea
dec
outsb
fmull
jbe
jbe
xchg
jmp
pushf
pop
arpl
sbb
lcall
adc
xchg
push
xor
aas
or
dec
jno
shll
or
xor
xor
test
add
add
sbbl
lret
adc
pop
adc
stos
adc
icebp
jno
sub
aad
sar
mov
int
lret
mov
aad
out
sti
popf
rol
es
inc
daa
xor
xlat
aas
lods
push
or
ret
imul
add
scas
nop
mov
clc
shlb
pop
mov
pusha
cmpsl
sti
mov
popa
leave
insb
insl
sbb
movsl
out
jne
push
xchg
jae
xchg
add
out
jg
sub
in
aaa
lds
test
mov
mov
inc
sbb
pop
pop
mov
sub
pop
jle
mov
mov
jp
roll
sti
shll
mov
jns
fmuls
mov
mov
outsl
stc
es
jl
xor
mov
xor
jne
subl
xor
mov
jp
leave
ja
pop
jmp
dec
xorb
push
sub
jle
outsl
pop
sbb
loopne
aaa
lods
mov
fbstp
icebp
popf
mov
add
push
iret
and
push
test
jle
mov
vcvtsd2si
add
movsb
adc
shrl
mov
out
pop
xor
inc
je
movsl
dec
in
mov
push
sbb
mov
aas
push
arpl
xchg
lahf
sbb
xchg
jecxz
hlt
xor
inc
adc
sti
lods
sbb
aas
call
repnz
aam
inc
pop
push
lcall
movsb
mov
stos
inc
out
inc
aad
mov
mov
shr
xchg
sbb
mov
cmp
gs
sub
icebp
pop
imul
pop
inc
pusha
fbld
push
xor
je
lock
jmp
out
test
jo
fs
sahf
idivb
out
or
sbb
sbb
cmp
in
adc
cmp
pop
dec
cmp
aad
movsl
mov
sbb
sbb
movsb
iret
xsha1
cmpsb
dec
je
mov
xchg
inc
and
lea
push
jb
sbbl
adcl
xchg
sub
sbb
jmp
popa
jns
popf
fcmovne
and
into
fisttpll
or
pop
iret
xchg
movsb
in
js
push
movsb
xor
ljmp
add
and
shrb
lahf
jae
mov
cmpl
sbb
sub
dec
lahf
std
push
adc
stos
clc
and
xor
xor
into
push
mov
jbe
ja
xor
push
sbb
cld
out
jl
push
sahf
lret
jge
push
int3
xchg
sarb
cmp
push
mov
xor
jl
add
xchg
leave
lea
js
sub
ja
sub
lods
pushf
lcall
push
mov
xor
ss
lds
push
test
fcmovne
mov
in
sarl
cmp
std
or
xchg
sbb
pop
and
inc
push
pop
xchg
jmp
es
xor
jmp
movsl
mov
mov
or
rol
mov
cmc
aas
add
popa
imul
test
pop
testb
push
inc
mov
mov
pop
push
pop
cli
cmpsb
xor
outsl
push
add
dec
insl
sub
ds
sub
mov
or
cli
mov
inc
pop
sub
das
xchg
inc
fcompl
jle
mov
push
mov
pop
mov
test
icebp
inc
jns
mov
push
push
mov
push
mov
and
sub
fists
jb
das
inc
or
mov
pop
vcvtss2sd
xchg
sub
pop
mov
inc
lcall
call
mov
cmp
add
mov
mov
fsubl
ja
loop
jle
cwtl
and
pop
xchg
gs
call
out
xchg
mov
mov
add
fldcw
cwtl
sbb
test
insb
testb
idiv
stos
jb
inc
add
test
lret
out
cmp
adc
mov
jo
xchg
xor
sbb
enter
inc
rol
adc
jl
movsb
adc
xchg
orl
or
jne
sub
jb
mov
neg
add
dec
jmp
imul
xchg
pop
jne
addr16
sti
jle
movsl
inc
or
mov
ror
xor
adc
sbb
test
shlb
adc
dec
pop
shlb
mov
xorb
daa
arpl
iret
mov
jecxz
insl
sub
mov
sahf
xchg
rolb
mov
mov
xor
iret
mov
call
mov
je
pop
pop
cmc
push
ret
popf
cmovbe
out
push
jge
icebp
mov
pop
mov
mov
jle
jle
mov
jp
imul
mov
push
inc
pop
sahf
mov
jno
cs
mov
fstpl
add
add
push
mov
scas
dec
xchg
cltd
aad
mov
xchg
and
xchg
xor
test
cmp
adc
xchg
dec
push
cmp
ret
sahf
push
jle
mov
sub
pop
or
dec
mov
and
dec
adc
sub
add
add
cmpsl
lods
dec
rorl
dec
mov
sub
xor
fidivrl
mov
push
cltd
xor
pop
xor
push
xchg
sub
mov
sbb
fs
mov
and
push
mov
pop
mov
stos
arpl
sti
and
ret
ljmp
sub
adc
adc
xchg
pop
or
movsb
jge
jo
jg
pop
rcr
sbb
mov
mov
pop
mov
or
lock
fistpll
lea
jae
outsl
mov
shlb
pusha
sub
jne
pop
test
insb
out
dec
jp
dec
loopne
and
mov
mov
adc
ret
mov
mov
sub
lahf
popf
lret
push
insb
andl
mov
dec
jg
cmp
sub
sub
daa
mov
xchg
pop
clc
fstps
orb
mov
std
sbb
adcb
inc
mov
pop
fs
push
int
mov
ret
pushf
adc
outsb
jb
xor
gs
sub
dec
outsb
xchg
sub
inc
divb
pusha
mov
add
push
inc
and
mov
mov
hlt
sub
out
jb
out
mov
push
les
push
test
xor
clc
inc
rcrb
mov
icebp
or
pusha
cmpsl
sbb
out
mov
addr16
adc
mov
dec
sub
aas
test
inc
jecxz
je
lods
xchg
movsb
add
gs
jb
cmp
lcall
mov
jns
fildl
addb
push
notl
and
xchg
ja
and
push
leave
jno
pop
mov
mov
fnstenv
sub
mov
xchg
mov
mov
jmp
push
aaa
sbb
push
cmpl
fildl
adc
or
add
out
jae
or
dec
je
xchg
test
sbb
shl
lret
sbb
or
shl
mov
jge
and
ret
mov
cmp
jb
fmull
incl
lods
divl
enter
push
inc
repz
out
aaa
mov
arpl
cwtl
or
dec
pop
fcomp
inc
pusha
scas
cmpsl
lret
cmpsb
inc
fidivs
push
in
mov
xchg
ret
ss
imul
repnz
sbb
aaa
je
sti
aaa
xchg
xor
stc
cmpsl
pop
sub
xor
sahf
in
testl
orb
cs
mov
sbbl
fcmovnb
imul
mov
je
test
outsb
adc
inc
pop
cmp
loopne
inc
test
int
shll
mov
pop
and
mov
leave
pop
jae
sbb
imul
pop
dec
test
rclb
adc
or
cwtl
data16
clc
add
mov
mov
fbld
xchg
adcb
and
pushf
xchg
adc
push
ja
negb
lds
jne
jmp
out
cmpsl
pop
inc
lds
mov
cmpsl
adc
adc
cmpsb
xchg
movsl
sbb
sbb
or
adc
pop
fimuls
les
fldln2
dec
or
shr
nop
adc
push
fmull
punpckhbw
adc
bound
mov
ds
push
movsb
fisubs
mov
arpl
out
pop
cmp
xor
fwait
push
mov
push
test
mov
sahf
xchg
insl
cli
js
lods
fnstsw
jno
cmp
pushf
ret
xor
sbb
mov
sbb
xchg
notb
sub
outsb
fisubrl
mov
mov
jle
add
xorb
push
aas
add
bound
jl
subb
enter
fstpl
int3
iret
cs
jge
das
mov
cmp
push
add
jb
push
mov
popa
out
psubsw
pop
jnp
cs
repnz
cmp
cmp
outsb
pop
or
xchg
push
xchg
fmuls
xchg
mov
shrb
cmpsb
lods
add
jl
lods
stc
mov
fnstcw
push
mov
cmp
ja
push
cmp
jne
stc
xor
ret
or
adc
push
mov
dec
jnp
and
and
gs
adc
dec
add
pop
push
arpl
in
into
std
xor
sti
sbbl
call
mov
cltd
mov
sub
nop
or
lret
inc
daa
shrl
pop
test
sbbb
dec
jne
cmpsl
nop
jae
testb
jno
arpl
ljmp
pop
sbb
adc
out
jecxz
mov
negb
xor
mov
ds
mov
jo
insb
adc
rcrb
call
cs
push
movsb
or
push
xor
neg
popa
sbb
ds
cmp
push
pop
gs
cs
mov
jae
add
jbe
nop
in
mov
shll
fimuls
sbb
inc
add
inc
icebp
xchg
out
stos
std
fs
mov
mov
rcrb
in
sbb
push
mov
dec
xor
lahf
add
dec
into
xchg
fisubl
dec
sbb
mov
xor
and
jbe
dec
sarb
je
push
jmp
enter
jb
out
push
gs
sub
mov
push
inc
lret
outsl
lock
pusha
xlat
push
ss
xchg
sub
jle
shlb
mov
int3
adcl
cs
lahf
inc
push
clc
jne
arpl
dec
test
lods
xorb
outsb
push
rclb
pop
sbb
outsl
mov
sbb
jp
or
ret
popf
stos
leave
imul
ret
mov
repnz
fistpl
push
and
stos
out
fisttps
xchg
fs
aaa
sti
inc
test
mov
mov
mov
mov
mov
sbb
lods
cmp
call
mov
or
test
push
pop
xchg
pop
insb
push
xchg
movsl
dec
adc
push
inc
mov
inc
cmpsb
jbe
lock
daa
xchg
push
pop
pop
decb
scas
add
dec
dec
bnd
decb
xlat
movsb
jmp
pop
mov
sub
xor
push
fcmove
jg
frstor
xor
mov
adc
sub
fcompl
shl
mov
pop
mov
and
and
jno
sbb
xor
fldt
int
push
push
test
pop
mov
sahf
in
ss
cltd
lds
int3
addr16
mov
pop
adc
xchg
xor
sahf
dec
fwait
aam
push
les
push
hlt
pop
test
adc
aam
jecxz
or
push
jg
sahf
jmp
scas
inc
cmp
lds
les
das
stc
dec
iret
fwait
xor
mov
and
in
aas
fadd
mov
sbb
xor
jne
int3
mov
enter
mov
lea
andb
cld
ljmp
popf
and
mov
int
jbe
xor
xor
xor
push
sbb
scas
testl
aaa
mov
xor
pop
mov
mov
pusha
test
mov
lahf
cli
insl
xor
arpl
inc
imul
into
sbb
xchg
push
cmc
and
lret
cmp
jle
mov
pop
xor
mov
scas
insl
and
mov
lret
sub
sub
adc
int3
ljmp
push
or
test
adc
mov
sbb
sbb
cmp
jno
sarl
jb
mov
jl
xor
adc
les
mov
rorl
enter
jb
cmp
xlat
lods
mov
xor
pop
push
xchg
jecxz
roll
fisttpll
cmpl
mov
mulb
pop
mov
dec
cmp
push
lods
imul
and
jbe
xor
lcall
mov
js
nop
jb
imul
pushf
jle
jecxz
mov
int3
xchg
out
je
cli
or
push
mov
inc
mov
sbb
add
cwtl
call
gs
mov
adc
psubq
mov
loop
pop
push
divl
mov
inc
xchg
or
ljmp
pop
loope
xchg
jg
mov
std
jbe
lcall
or
fmul
push
xor
mov
scas
mov
mov
roll
push
lock
test
mov
pop
cld
push
pop
das
push
cmpsb
lcall
cmp
data16
sub
out
in
orb
bound
test
int3
lahf
mov
dec
addr16
lods
aad
xchg
push
jnp
inc
fldcw
cmp
jge
fadds
or
je
lods
cmp
icebp
divb
xor
aaa
aas
push
clc
mov
or
repz
push
outsb
or
bswap
in
dec
jmp
sub
sbb
or
lods
in
fists
mov
leave
add
mov
fdivs
pop
mov
and
lds
cmp
mov
mov
cmovo
rcl
fidivrs
popa
xorb
in
and
lret
fnstcw
xor
cmp
mov
rclb
and
sbb
loopne
xchg
imul
dec
pop
mov
das
dec
xor
pop
or
mov
cwtl
scas
inc
daa
js
pop
bnd
mov
sbb
cmpsb
faddl
mov
inc
rol
jg
loopne
inc
add
out
xchg
aas
mov
cmp
and
xchg
js
sar
mov
sbb
dec
pop
sahf
sbbb
cmp
inc
cs
clc
sbbb
daa
cmp
fnstcw
sbb
out
fnstenv
scas
push
cmp
cmp
fstpt
shrb
mov
repnz
and
ret
scas
shl
cmp
test
clc
call
stos
mov
jge
ja
cmp
aas
push
iret
sub
sub
ret
enter
sbb
fmul
cmpsb
fnstcw
adcb
fmuls
push
loope
ljmp
icebp
mov
sbb
fs
pop
out
pop
pop
mov
push
xlat
std
xchg
adc
lock
imul
jecxz
pop
and
iret
cmp
mov
nop
jno
mov
xor
mov
movsb
inc
pcmpgtw
pop
je
gs
mov
cmp
icebp
cmp
jmp
fimull
mov
jno
add
xchg
inc
jg
in
pop
data16
cld
arpl
xchg
sbb
push
xor
cld
sti
sbb
scas
sbb
jnp
sbb
mov
push
andl
addr16
pop
fimuls
push
xor
dec
lret
jl
in
cmpsl
add
mov
daa
mov
inc
subb
push
arpl
pop
adc
fs
jle
mov
pop
icebp
jl
lahf
dec
add
adc
xor
or
lahf
frstor
gs
and
sbb
in
xor
dec
ljmp
rolb
shlb
push
sarb
or
ret
repz
pushf
sub
lret
push
mov
jmp
jp
jne
add
push
les
enter
inc
xor
test
shrb
cmp
ret
stos
ficomps
sub
xor
popa
mov
add
xchg
xchg
cmpb
xchg
cmp
add
leave
adc
cmc
xlat
repnz
push
jg
pushf
test
adc
test
xorb
mov
jae
adcb
loopne
dec
sub
adc
xchg
jg
ss
das
xchg
rolb
cld
ret
jo
daa
stos
jo
imul
jo
repz
mov
enter
ljmp
rol
adc
xchg
adc
and
rolb
movsb
push
jae
mov
or
or
cmc
dec
xchg
test
xchg
fiadds
inc
cmpsb
iret
sub
fsts
mov
dec
xor
push
cmp
sbbb
jecxz
mov
xorb
pop
push
mov
iret
jns
xchg
mov
pop
fwait
or
cs
mov
jns
stos
bound
adc
add
push
push
iret
adc
fldl
jb
ss
sub
jecxz
hlt
dec
mov
cmp
or
jle
das
adc
pop
sub
lret
inc
and
out
insl
inc
sbb
dec
xchg
loopne
stos
pandn
mov
dec
ret
xchg
push
cmp
jle
fcomp
cmp
fdivp
pop
cltd
cld
inc
jno
out
js
adc
popa
pop
outsb
aad
nop
test
aaa
pop
test
popa
cmp
imul
dec
ds
test
movsl
lea
rcr
pop
mov
lods
js
in
add
or
paddsb
pusha
dec
addb
ja
imul
cmpsb
dec
cmpsb
or
mov
stos
fstps
sbb
data16
aas
xor
mov
jge,pn
cmp
mov
decb
mov
add
add
int3
inc
push
sub
push
mov
leave
ffreep
xchg
out
adc
hlt
mov
mov
and
dec
js
jbe
sub
cmp
jmp
fildl
jle
add
pop
push
lcall
push
pop
sbb
xor
leave
ljmp
rcll
xchg
pusha
cmp
inc
pop
outsl
pushf
jmp
call
and
add
dec
ss
lods
mov
fs
bound
xor
out
inc
das
mov
mov
std
mov
jge
push
arpl
adc
jmp
leave
sub
xor
cmp
dec
aad
dec
cld
gs
cvtps2pi
pcmpgtw
out
add
pop
push
mov
pop
fbstp
mov
mov
leave
dec
pop
mov
movsw
dec
mov
int3
adc
jo
ret
loopne
ljmp
inc
jb
pop
dec
hlt
orb
push
mov
dec
mov
rcl
outsl
dec
lahf
aam
scas
pop
sub
sub
scas
dec
pusha
sbb
aad
nop
sub
add
gs
xchg
in
rclb
mov
int3
test
push
xchg
daa
lock
in
nop
jne
data16
mov
mov
packuswb
sbb
inc
jne
lods
cmp
inc
dec
lods
ret
shll
fcompl
sbb
xor
movsb
mov
push
add
mov
lahf
inc
mov
push
jb
sub
jecxz
int
leave
push
popf
outsb
in
lock
xchg
or
iret
and
fistps
mov
outsb
push
push
out
fldt
xor
sahf
cs
jmp
jle
testb
inc
push
stos
xlat
cltd
jo
add
outsb
shll
jb
idivb
xlat
loopne
and
fimuls
push
aas
cmova
incb
subb
xchg
push
jne
jg
push
push
mov
or
lret
add
pop
loopne
pop
nop
in
lods
pushf
js
fidivs
and
ljmp
test
xchg
xlat
jle
sbb
mov
add
jns,pn
jae
add
es
ret
dec
sbb
or
xor
push
mov
cltd
cld
pop
and
mov
jns
pop
adc
xor
inc
movsb
insb
push
push
mov
jecxz
add
dec
scas
inc
call
mov
icebp
lret
mov
pop
xor
jp
push
xchg
pop
test
cmp
subl
jb
sti
pop
into
ret
addl
xchg
test
mov
cmp
push
jnp
mov
xchg
push
fbstp
jmp
push
movsl
das
inc
fdivrl
pusha
lahf
ja
lds
loopne
les
aaa
mov
out
iret
std
sbb
dec
out
orl
mov
sub
mov
sarl
aad
mov
icebp
cmp
addr16
pop
shl
or
push
mov
shll
mov
sahf
cld
push
out
int3
mov
fcomps
push
jle
stos
pusha
adc
sub
jecxz
or
mov
sti
sti
dec
xchg
lret
ret
mov
jno
cmp
std
inc
in
das
pop
adcl
stos
ret
push
xor
sub
xor
pop
fcomip
incl
mov
lds
sahf
dec
inc
or
notl
xor
pop
divb
mov
popf
stos
int
sub
lods
fs
roll
es
lock
icebp
lahf
loope
pop
xor
jmp
push
inc
das
dec
cmp
stos
mov
cmp
int3
mov
ret
fimuls
scas
imul
pop
mov
fsubrs
scas
out
lds
push
test
cmp
jge
or
pop
pop
pop
add
das
insl
daa
mov
nop
out
jne
sbb
int
and
outsl
idivl
pop
lret
lods
xor
mov
xor
dec
jo
mov
sarl
adc
and
xor
dec
cmpsl
shl
push
aad
cmpsl
nop
or
lods
mov
xchg
pusha
sub
dec
divb
loopne
cmp
jns
or
mov
aas
stos
testb
fistpl
stos
inc
xchg
jmp
pop
scas
mov
movsb
jecxz
into
rolb
aas
fimull
xlat
pop
xchg
sbb
popf
mov
rcrb
cmp
ljmp
jne
pop
add
orb
dec
fs
clc
ficoml
fbld
ret
inc
sub
and
enter
xchg
mov
fistpll
cmpsb
sbb
adc
sarb
xorb
pop
adc
scas
xor
aaa
fdivp
or
ficomps
pusha
loope
sti
jge
shlb
pop
test
ret
cmp
cmp
sbb
pushf
push
jo
jo
adc
cmpsl
fisubs
inc
cli
sub
call
xchg
sub
add
inc
or
mov
arpl
pop
xlat
or
rcrl
push
cmp
cmpl
rcrb
pop
pushf
sahf
out
and
sbb
outsb
push
andl
xor
jne
je
test
sbb
dec
jne
mov
pop
adc
in
xchg
dec
sub
cmp
loope
retw
cmp
and
clc
sahf
mov
adc
shl
rcrl
ret
sub
jns
aaa
in
push
fdivrs
xor
vphsubwd
jne
int
jle
mov
js
mov
fucom
mov
js
and
mov
rol
pusha
mov
sub
jnp
xor
rcll
sbbb
movsb
ret
cmp
and
lret
in
and
adc
int3
lods
cmp
inc
movsl
inc
mov
icebp
sub
sbb
add
fadds
sbbl
jmp
xchg
fldcw
fidivrs
pop
xchg
repz
testl
loop
dec
inc
adc
jno
dec
int
mov
push
and
popf
shrb
cmp
dec
in
mov
imul
xchg
leave
add
sti
sub
dec
adc
sahf
dec
jle
jns
lcall
adc
fildll
addr16
loope
sahf
mov
and
mov
push
lock
adc
mov
ja
and
xchg
sbb
xchg
add
sldt
lcall
cli
push
sub
or
and
lods
fcompl
sub
test
std
andl
std
sbb
nop
mov
addr16
loope
shll
popa
insl
sahf
xchg
call
out
lcall
cli
imul
xchg
mov
mov
push
enter
aam
fcompl
mov
jl
ficomps
adcb
imul
lret
push
adc
call
in
iret
cli
mov
scas
ja
cli
je
push
outsb
and
ret
std
std
cwtl
stos
pop
pop
loopne
jg
or
xchg
lds
aad
jne
pop
mov
ret
xor
cmc
push
dec
pop
jmp
popa
mov
pop
cmpsl
jnp
frstor
lret
mov
dec
inc
xchg
mov
loope
movsb
mov
insb
sbb
add
popa
femms
xchg
add
orb
icebp
adc
call
inc
mov
xorb
popf
ja
in
push
mov
jbe
dec
jg
sahf
dec
xchg
dec
cmp
aas
adcb
inc
shrl
jg
filds
cmpsb
cmp
inc
cld
out
xchg
xchg
mov
andl
jg
push
pushf
mov
cld
or
imul
movsl
std
test
lods
jno
shll
mov
xlat
imul
test
inc
lea
xchg
cs
aam
mov
or
inc
add
aas
shll
sub
pop
and
inc
sarl
sub
sub
ds
jo
push
adc
int3
mov
out
mov
es
in
push
sub
lret
fwait
xchg
mov
loop
pop
xor
je
xlat
jnp
xchg
push
mov
stos
and
mov
fcoms
cltd
imul
adc
stos
out
lock
scas
icebp
add
or
shr
imul
push
ret
mov
mov
cli
ja
mov
xchg
aad
pusha
daa
fsubrl
movsl
pop
pop
out
pushf
aaa
dec
xchg
cmpsl
test
cmpsl
imul
aas
and
dec
dec
outsl
in
sub
pop
mov
inc
outsb
cmp
pusha
cmpsb
adc
insb
add
push
add
cli
pop
xchg
push
adcb
outsl
or
stos
inc
ja
lret
imul
add
stos
dec
enter
into
jns
dec
inc
jae
gs
mov
push
xchg
mov
or
rclb
ljmp
repz
dec
leave
xchg
and
push
jae
repz
lea
push
je
jo
in
adc
in
icebp
sbb
aaa
enter
mov
sbb
inc
pop
pop
imul
mov
test
sub
stos
adc
jmp
in
xchg
negl
and
pop
outsb
or
stos
add
out
out
adc
mov
subl
cmp
outsb
movsb
cltd
jle
pop
divb
mov
add
jne
mov
ret
call
xchg
or
jle
sub
fisubl
mov
push
clc
xor
adc
pop
sbb
or
mov
repz
push
in
cmp
cmpsl
fcompl
int
push
mov
mov
fstpt
cwtl
cltd
cltd
xor
xchg
hlt
inc
popf
adc
or
pop
fs
call
pusha
int
xor
inc
cltd
fdivs
in
out
addl
inc
cmpsb
sti
mov
loop
xchg
push
mov
repz
popf
lahf
hlt
das
push
outsl
mov
icebp
and
pop
xchg
stc
sub
mov
aaa
pusha
or
dec
mov
sahf
sub
push
ret
sahf
dec
inc
inc
fwait
sbb
jo
jo
push
das
insl
ja
gs
inc
pop
lcall
sbb
ret
mov
adc
sahf
mov
ss
pop
cmpsl
dec
pop
push
cmc
insb
pop
movsb
inc
mov
and
cmp
mov
sbb
cwtl
sti
ljmp
fiaddl
imul
add
cmpsl
jle
sub
sub
push
rcll
test
push
cmp
mov
sbb
aad
sarl
lret
xor
sbb
ja
xchg
pop
insb
inc
mov
insl
jno
jo
cmpsl
rorb
sbb
js
and
mov
jo
inc
and
mov
or
push
dec
aas
inc
aaa
scas
or
scas
movsb
sub
mov
loopne
cwtl
icebp
xorl
lds
sub
jecxz
xor
lea
xchg
mov
xchg
daa
adc
dec
shrl
call
xchg
mov
xor
fcomi
cmp
jg
aaa
or
dec
sub
inc
dec
pop
pop
xor
sbb
mov
adc
lods
adc
sbb
and
jae
hlt
and
and
adc
fwait
in
movsl
test
cmpsl
xchg
daa
lret
pop
inc
je
or
jb
xlat
imull
fwait
mov
inc
pop
adc
mov
pop
xchg
movsl
xchg
jns
dec
dec
loopne
mov
jge
loope
cli
push
push
test
cld
jbe
test
test
idivl
fwait
cmp
scas
in
mov
jle
xchg
sbbb
cmpl
adc
imul
cmp
outsb
jno
shl
pop
icebp
sub
enter
loop
push
test
mov
dec
je
adc
lods
xlat
pop
lock
rcll
mov
mov
std
jo
mov
inc
mov
fs
cmp
mov
xor
jne
pop
push
dec
out
in
xor
in
int3
xchg
add
dec
test
cmpsl
mov
mov
insb
fwait
aaa
fstl
jb
repz
sbb
push
lret
dec
jge
aas
fcom
pop
fisubs
lea
hlt
cltd
insl
outsl
inc
push
les
neg
sbb
inc
pop
dec
dec
push
fisubs
loopne
pushf
pusha
lods
jb
add
push
and
dec
sbb
clc
mov
jb
into
sub
inc
dec
rorl
imul
sbb
xchg
or
test
out
cmpsl
dec
orb
pushf
sbb
cltd
roll
bswap
cmc
add
mov
imul
xchg
addr16
dec
adc
or
inc
xor
imul
sbb
loope
js
fldcw
sbb
jns
loope
pop
and
scas
stos
das
or
dec
loopne
fisttpll
jne
clc
mov
dec
jl
notl
cmp
pop
sub
push
nop
inc
pop
push
bound
jl
adc
jb
lret
jl
dec
nop
cmc
mov
mov
xchg
inc
jae
add
and
pusha
daa
mov
sbb
xchg
int3
mov
fstpl
pusha
test
out
mov
imul
jge
mov
loopne
rolb
rep
loopne
push
jns
dec
push
fnstsw
lock
fadd
cltd
and
scas
clc
icebp
xor
lods
dec
jbe
dec
or
inc
mov
aas
outsb
push
int3
mov
push
mov
cld
addl
ss
cmpl
adc
and
mov
push
addr16
xor
addr16
mov
jmp
xchg
lcall
into
pop
or
and
cwtl
xchg
cmpsb
ljmp
pop
xchg
imul
fwait
xchg
cmp
ljmp
push
or
nop
jg
ss
cmp
out
jo
and
push
and
mov
xchg
bound
jmp
stos
push
push
sub
jecxz
loop
push
shll
sub
call
dec
call
data16
push
lret
fstps
sub
jno
jg
adc
lret
shrb
scas
inc
mov
jg
sbb
test
mov
popa
jp
fs
sub
movsl
lea
rcll
mov
jns
shl
mov
movsl
sub
out
xchg
jne
das
scas
mov
cs
ja
test
das
jge
je
mov
or
imulb
bound
adc
xchg
sub
push
hlt
mov
rol
jmp
mov
faddl
insl
sub
jl
cmp
movsl
lods
lods
mov
or
sub
or
ljmp
sti
flds
inc
pop
notl
fs
mov
xor
add
pop
in
add
nop
cs
call
cmpsb
arpl
cltd
scas
or
sub
mov
imul
pop
or
dec
push
outsb
push
iret
fcmovbe
das
lods
and
subl
pushf
and
adc
xor
insb
add
push
mov
xchg
shll
mov
ss
jecxz
jnp
xor
cmp
add
and
out
push
pusha
repz
mov
xchg
pop
hlt
pop
rorb
pop
jo
lret
or
add
pop
pop
jle
sbbl
loop
adc
sti
xor
jae
adc
out
inc
mov
jecxz
and
roll
and
dec
popa
xchg
push
fnstsw
sub
in
cwtl
je
stos
dec
test
cwtl
pop
cltd
push
cmpsb
mov
mov
sahf
xchg
push
test
pop
nop
mov
push
das
mov
sub
jnp
jae
push
pop
insl
adc
int
jecxz
and
push
int
adc
or
in
jno
mov
pop
popf
icebp
cltd
jnp
lcall
shll
mov
jbe
dec
scas
fs
stos
out
lods
push
aaa
cwtl
dec
pop
or
int
sub
mov
pop
popa
dec
stos
fists
and
fnstsw
add
sbbb
in
movq
push
and
aaa
enter
bound
movl
mov
mov
sbb
xor
push
push
nop
pop
sarl
and
loopne
lret
aas
loop
jmp
mulb
test
pushf
push
leave
mov
xor
out
cltd
mov
add
mov
mov
pusha
or
mov
fwait
je
add
pusha
rcll
ja
xor
mov
and
sti
cmp
ficoms
mov
les
rcrb
inc
test
mov
sub
jno
ret
stos
mov
sbb
mov
fsubr
nop
pop
sbb
mov
mov
pop
fwait
pop
mov
dec
mov
inc
ds
mov
int
push
or
shlb
call
mov
mov
sbb
rclb
test
popf
aad
rclb
outsb
mov
or
ficoml
cwtl
xor
sbb
jb
test
imul
xchg
pop
ljmp
jmp
sbb
mov
or
inc
xchg
jmp
sub
push
cmp
mov
loopne
mov
xlat
pushf
loop
and
pushf
pop
repnz
adc
scas
testl
jbe
push
testb
icebp
into
mov
mov
or
jg
inc
rcr
xchg
push
fstl
jle
xchg
icebp
insb
jo
insb
lea
sbb
insb
jmp
cmp
clc
sbb
or
cmp
mov
nop
xchg
scas
mov
call
cmc
jecxz
data16
out
sub
sub
sbb
mov
xchg
mov
aad
aam
pop
sub
mov
dec
push
push
cltd
lcall
xor
shl
cld
jl
in
ds
fldl
inc
stos
popf
mov
jg
ljmp
inc
sbb
jg
fwait
ds
clc
mov
in
adc
jo
cmc
xchg
add
popa
xchg
jecxz
mov
ds
push
lock
into
jl
push
lret
icebp
cmp
stos
pusha
and
push
std
jl
jmp
jle
das
repnz
aad
imul
and
cmc
lods
movsl
push
cltd
or
out
cmpsb
jbe
stos
mov
stos
mov
push
jb
stos
cmpsl
call
push
mov
xor
pop
mov
std
out
arpl
cmc
scas
xchg
push
arpl
adc
xor
and
int3
push
ja
adc
jo
mov
mov
or
dec
push
mov
shlb
or
fists
lret
add
and
or
sbb
popf
and
jecxz
adc
push
lahf
push
mov
and
or
repz
test
js
and
and
inc
cmp
add
fistpl
pop
ljmp
mov
cmp
movsb
in
sub
icebp
sub
addr16
dec
divb
adcl
pop
xor
jmp
repz
divb
jp
je,pn
dec
add
or
jle
inc
outsl
sub
jae
or
movq
repnz
stos
call
push
jmp
imul
sbbl
addl
sub
push
lret
xor
xchg
ficoml
and
popf
sbb
xchg
jb
les
pop
rclb
stc
mov
xlat
cmpsl
bound
movsl
pop
pop
add
mov
aas
dec
mov
jae
mov
scas
push
pop
pop
push
push
xor
aaa
das
sbb
imul
hlt
daa
mov
sbb
aad
jl
out
sbb
cmp
sub
push
jnp
aam
repz
jb
repnz
jbe
cmp
sbb
lds
mov
lock
jecxz
ljmp
jp
rorb
cltd
jns
pop
loop
popf
mov
and
call
jbe
ret
orl
cli
bound
mov
daa
jne
pusha
addl
les
imul
cmc
xchg
nop
mov
push
add
repz
pop
and
dec
fdivp
mov
inc
add
in
add
fwait
add
cmc
mov
push
inc
shrb
cs
or
adc
add
fs
or
sbb
in
push
leave
adcl
push
out
adc
ds
xor
popf
mov
xor
or
sbb
cmp
fidivrl
cmp
mov
xor
jg
mov
push
clc
adc
ja
rcrl
cmpsl
icebp
inc
add
call
cs
dec
add
mov
clc
out
mov
lret
mov
dec
arpl
mov
pop
jp
pusha
and
rolb
pop
pushf
jno
xor
jp
idivb
mov
testl
sahf
mov
sub
adc
xchg
inc
call
pop
cmp
sbb
add
outsl
incl
test
out
xor
jo
dec
jae
incb
testb
xchg
push
movsb
push
mov
dec
jp
lcall
pop
aad
mov
hlt
pop
inc
inc
xchg
pop
dec
push
sbbb
pop
adc
test
sub
mov
stc
scas
cmpsb
fisttpll
aam
clc
lock
or
cli
dec
clts
icebp
pop
dec
xchg
mov
clc
pop
imul
inc
mov
dec
sbb
jmp
push
push
fistpll
xchg
push
scas
adc
jno
pop
out
or
mov
lods
frstor
mov
aad
or
sub
xchg
push
push
inc
push
add
push
cmp
and
mov
jl
xor
movsl
add
les
dec
pop
adc
mov
insb
mov
mulb
cmp
div
test
or
pop
addb
cli
rcrb
pop
mov
scas
mov
dec
out
imull
inc
gs
jmp
icebp
in
sti
lods
addr16
lods
sub
adc
cmp
xor
sahf
push
mov
jae
inc
mov
sub
es
jbe
and
addr16
daa
ret
andb
pushf
xchg
cld
test
adc
je
pop
das
scas
fnstsw
ljmp
fsubl
or
adc
inc
mov
jl
leave
sahf
imul
test
adc
out
sub
out
sub
arpl
adc
sbb
movsb
push
cs
mov
pop
int
dec
pop
insl
cmp
adc
leave
dec
mov
in
inc
pushf
mov
fcmovu
pop
repz
mov
frstor
jge
mov
sub
loop
fldenv
lahf
imul
jb
inc
testb
repz
pop
out
sbb
mov
sahf
lods
stos
cmc
les
mov
fwait
in
cmp
xor
mov
jo
out
mov
leave
shl
cltd
jp
stos
shl
pop
in
std
ret
jle
ja
inc
xchg
dec
cmpl
xchg
or
rcrl
push
popf
icebp
popaw
mov
push
cmpsb
filds
jge
lock
arpl
cmp
orl
mov
cmp
stos
ret
inc
cli
cmp
adc
add
insb
jg
mov
repnz
pop
or
inc
xlat
rorl
rorb
inc
lret
add
stc
cld
pop
addr16
cmp
xchg
cmp
push
and
mov
or
dec
dec
mov
inc
xor
inc
cmp
adc
mov
popa
in
lahf
mov
aaa
xchg
aam
dec
push
test
sub
jge
in
lcall
aad
leave
jp
call
movsb
or
daa
xchg
push
inc
lods
fisttpl
xor
mov
cli
hlt
lock
sub
mov
mov
xchg
ds
mov
push
mov
jb
scas
in
mov
ror
arpl
lret
gs
ret
adc
nop
cmp
addl
or
xchg
push
in
sbb
in
xchg
andl
aaa
jge
xchg
adc
scas
xor
xor
fldenv
fisubrl
and
sub
mov
push
in
push
popa
test
pop
mov
xor
in
mov
inc
pop
sahf
cld
xlat
push
inc
mov
xchg
fs
out
push
dec
fidivrs
repz
xchg
sbb
in
cmp
xchg
lret
xlat
int3
xor
call
in
or
subl
and
inc
test
add
dec
mov
pop
flds
or
stos
sarl
in
roll
push
into
mov
add
enter
inc
rcll
sub
mov
sbb
mov
insl
or
push
das
aas
hlt
test
jg
scas
cs
aaa
push
xchg
add
call
push
bound
xlat
popa
pop
aad
jae
js
jns
adc
stos
dec
jmp
in
xor
or
in
and
mov
jle
inc
divl
std
imul
xchg
scas
lcall
xchg
call
inc
mov
sahf
rorl
lds
add
int
pop
xor
stos
inc
inc
mov
jle
out
outsb
xor
push
sbb
add
nop
lea
xchg
xor
xchg
push
xchg
jne
cli
int3
fprem1
int
cmc
fwait
in
repnz
lret
sub
movb
pusha
ljmp
aas
loopne
ficomps
fcom
pop
pop
mov
xchg
and
cmpsb
out
xor
enter
push
stc
add
pop
or
inc
cmp
cltd
push
push
inc
inc
out
clc
mov
leave
int
and
mov
mov
cmp
imul
bound
scas
sahf
xlat
in
adc
repz
push
movsl
aad
gs
sbb
pop
in
pop
jecxz
repz
enter
mov
sbb
mov
pop
popf
sub
out
dec
out
outsb
fwait
cltd
subl
pusha
inc
test
or
nop
fisubrs
jo
xor
pop
sbb
cmp
dec
fwait
cltd
jmp
push
sbb
in
lock
push
sub
sub
outsb
in
sub
mov
pop
insb
xchg
add
xchg
icebp
xchg
push
inc
mov
and
movsb
sbb
loopne
or
or
int3
cmpsb
repnz
sub
out
cmc
xlat
mov
xchg
je
lods
xchg
dec
push
mulb
cmpb
aaa
out
xor
mov
arpl
ja
icebp
jge
hlt
cli
mov
fs
enter
jb
icebp
jmp
push
jle
mov
jne
out
pop
sub
call
inc
cmp
ss
ficomps
shll
jbe
push
lds
and
aam
fisubrs
jl
sahf
std
push
out
push
hlt
jno
mov
mov
negl
movsb
fsts
rorb
sbbb
jl
mov
ljmp
xor
movsl
add
push
xchg
lods
inc
pushl
cwtl
or
jp
jae
and
in
xchg
cmp
and
sbb
mov
and
jle
int3
and
imul
jo
out
ret
pushl
mov
mov
insl
add
dec
adc
xchg
sbb
cmpsb
lahf
movsl
xchg
jo
std
int
pop
out
and
test
fisubs
adc
or
lahf
push
pop
and
fmuls
outsl
mul
test
xor
cmc
fnstsw
xor
lret
push
mov
xlat
sub
repnz
lds
or
testl
ja
sbb
gs
and
enter
inc
or
add
sub
repnz
or
jp
stos
sbb
jnp
and
xor
fimull
enter
hlt
mov
push
test
inc
outsb
addr16
inc
fcomp
inc
dec
mov
int3
mov
movsl
mov
and
clc
dec
rcl
xor
push
jns
mov
addb
and
imulb
incb
test
arpl
mov
cmp
sbb
movsb
out
adc
and
add
cmp
pop
fdivs
dec
ss
cmp
les
pop
mov
fcompl
das
inc
into
adc
lret
mov
fstps
dec
and
insb
cmp
xor
std
out
mov
aad
mov
push
mov
aaa
adc
jo
inc
dec
outsb
test
movsl
xor
push
lret
lock
add
or
pop
jl
in
sub
movsb
std
pop
and
mov
mov
mov
adc
xchg
push
imul
xor
add
add
or
mov
rclb
adc
push
out
add
inc
cmc
sub
mov
mov
fdivrs
hlt
ret
lods
data16
imull
popa
xchg
cmp
xchg
aad
jg
lods
mov
sub
and
xchg
adc
xor
cmp
sbb
dec
jle
sub
xchg
mov
or
mov
xlat
cltd
and
xchg
fnstcw
iret
cmp
xorb
pushf
leave
jno
rcll
es
sbb
loope
push
pop
mov
dec
jne
aam
xor
fsubl
movsl
stc
pop
repz
inc
xor
or
xor
into
cmc
pushf
fimuls
faddl
cmp
xor
sub
popa
insl
ljmp
test
popa
imul
sub
subb
lods
gs
pop
inc
jge
lret
or
mov
stos
pop
sbb
add
sbb
jg
pop
mov
cmp
pop
mov
sub
xor
lret
into
push
loop
rcll
jmp
jbe
pop
jb
insb
stc
leave
jno
xchg
pop
sub
sub
jo
cmp
jbe
add
and
xchg
fsts
jo
push
xchg
clc
jmp
or
jg
mov
in
loope
adc
pop
mov
in
sbb
gs
jp
mov
gs
jp
add
fisubrl
std
outsl
into
jne
fisubrl
insb
add
dec
mov
insl
lds
test
xor
mov
adc
shrl
add
push
push
sub
popf
xchg
xchg
jmp
es
shl
scas
sti
insl
sbb
cld
fwait
cmp
xchg
test
shlb
xor
and
push
cmpsl
cld
enter
cmp
bound
outsb
roll
cmp
sub
lea
pop
in
sbb
pushl
lea
jns
shll
xchg
sub
fnstcw
jecxz
cmp
add
repz
enter
jl
pop
mov
std
sub
mull
insb
les
dec
push
mov
mov
mov
iret
fs
filds
sbb
fs
dec
pop
sbb
fldl
jne,pn
dec
lods
mov
jge
and
shl
jmp
xor
ds
bound
mov
mov
out
pop
or
cmp
inc
rorb
and
arpl
int
aaa
lret
jge
sub
jb
pop
jns
aas
and
sahf
pop
rorb
mov
pop
nop
push
clc
bound
adc
sti
mov
mov
adc
mov
mov
leave
mov
inc
push
sti
xchg
stos
mov
out
xor
leave
stos
jecxz
aam
xlat
addb
mov
call
xchg
push
movsb
shlb
cmpsl
scas
fcomps
clc
out
push
sub
shlb
fcomps
add
cltd
aad
sahf
stc
mov
xchg
in
mov
sbb
sahf
mov
and
je
fnstenv
jb
lods
push
js
dec
sbb
clc
adc
cmpsl
pop
ret
sbb
mov
jl
mov
xchg
cmp
sarb
inc
popa
faddl
ss
stos
nop
daa
rdtsc
push
jne
xchg
mov
cwtl
push
call
leave
sub
iret
je
dec
movsb
mov
in
pop
mov
jl
int
rsm
dec
ret
fisubrs
push
xchg
pop
push
shrb
mov
xchg
js
leave
ljmp
sbbb
jecxz
sub
jecxz
pop
or
loopne
mov
fistl
pop
test
sub
xchg
hlt
add
mov
insb
enter
mov
and
pusha
sarl
loope
lds
test
sub
sbb
loope
sbb
nop
aas
pop
fdivrl
push
int3
movsb
cmp
mov
jae
mov
and
lea
mov
or
out
adc
bound
adcl
clc
jge
push
jnp
cld
mov
into
aad
inc
pop
test
or
cmp
jb
jg
movsl
sbb
call
xchg
pushf
sti
inc
repnz
call
sub
fbstp
rolb
add
mov
mov
xchg
lret
loop
jo
iret
adc
lret
mov
fdiv
cmp
push
iret
addl
lods
mov
mov
mov
mov
fstl
rolb
mov
repnz
std
inc
inc
rol
rol
mov
dec
cmp
pop
xchg
xchg
inc
xor
inc
mov
in
je
pusha
jmp
jae
daa
leave
jmp
xchg
push
rolb
mov
in
mov
inc
pop
sbb
cs
inc
xchg
data16
bound
xchg
test
stos
jbe
cmpb
inc
pop
nop
cmpsl
pop
lret
inc
jp
mov
les
cs
and
jno
pop
test
jb
mov
xchg
in
pop
jp
iret
mov
ror
fisubl
pop
fcompl
movsl
sbb
mov
inc
and
fcomi
jb
movsl
mov
lods
dec
xlat
mov
xchg
xchg
mov
negb
je
push
lret
data16
jl
add
sub
pop
cmp
mov
idivl
jbe
xor
movsb
inc
inc
or
mov
clc
cmpsb
push
cli
cmp
cmp
ret
or
sub
ret
cmova
gs
dec
les
bswap
ret
icebp
scas
xchg
andb
and
mov
inc
mov
add
xchg
aas
test
bound
jecxz
pop
popf
enter
xchg
mov
shrl
sti
pop
sbb
xchg
lret
adc
push
push
cmp
data16
xchg
sarl
dec
scas
pop
inc
fnsave
pop
jle
push
jo
jb
xchg
push
or
data16
cmp
out
mov
mov
mov
sbbb
icebp
sbb
lock
pop
mov
add
pop
jge
mov
inc
mov
out
loope
xchg
add
aad
cmp
xor
add
les
scas
imul
ss
sub
or
in
and
leave
mov
scas
ret
push
jnp
outsl
mov
mov
stos
ljmp
jae
pop
lret
out
int
pop
idivb
test
into
sti
outsb
inc
es
shll
jns
gs
sbb
xchg
or
loopne
outsb
dec
imul
sbb
xor
jmp
je
sti
fldenv
xchg
imul
in
out
dec
rorb
mov
dec
cmpb
outsl
rolb
push
xor
popl
mov
xchg
std
mov
in
jmp
xchg
dec
shll
bound
imul
mov
sbb
mov
das
mov
xlat
outsl
jl
push
addr16
fucomip
dec
inc
sbb
cmpsb
mov
dec
ds
jg
lea
clc
or
cli
dec
jecxz
dec
sbb
mov
add
out
mov
add
or
inc
pop
or
pop
sbb
mov
add
push
xor
mov
sub
mov
rol
xchg
rcrl
ret
cs
arpl
icebp
or
fwait
inc
xchg
outsl
sbbb
sahf
mov
sub
pop
push
nop
xorb
dec
adc
mov
popf
xor
in
lock
pushf
cwtl
cli
adc
mov
imul
in
pop
lods
mov
pop
js
sub
pop
mov
xlat
dec
nop
and
adc
scas
add
mov
jns
fdivl
in
jbe
int
dec
icebp
cld
ret
sahf
jbe
mov
lret
push
cpuid
mov
and
fdivs
inc
xor
ss
inc
push
cwtl
add
jno
and
roll
mov
lock
mov
clc
lcall
pushf
das
aas
xor
mov
cmpsb
outsl
aaa
dec
mov
mov
push
loope
aad
push
lret
mov
ss
mov
test
sbbb
ljmp
mov
bound
cli
fnstcw
hlt
mov
call
fldcw
inc
aas
subl
xchg
jns
pushf
test
lcall
cmc
or
adc
andb
and
lods
sbb
lret
jmp
int
cltd
sbb
mov
loop
inc
mov
cmp
sbb
jae
andl
sub
cmp
pop
inc
pop
inc
pop
imul
fldt
mov
jmp
sub
add
push
jmp
repnz
aam
loop
out
mov
sbb
insb
ja
aad
sbb
js
dec
xor
outsl
test
test
xchg
add
pop
hlt
ds
leave
xor
xchg
aad
jp
jno
lock
push
test
mov
bound
jae
sbb
pop
lock
and
das
inc
pushf
dec
pop
dec
out
out
xchg
pop
in
sbb
loop
lds
flds
adc
add
jl
fnsave
add
test
inc
out
shr
aad
out
out
leave
sub
mov
pop
push
stos
mov
stos
rcr
data16
shll
mov
jbe
mov
dec
mov
dec
insl
dec
out
jmp
lcall
dec
and
mov
mov
popf
adc
mov
adc
sub
xchg
inc
jb
nop
sub
cmp
sbbl
sbb
and
jns
aad
or
mov
mov
outsl
pop
and
pusha
and
not
adc
aam
jp
mov
sarl
cmp
fwait
inc
clc
mov
js
mov
pop
inc
sbb
icebp
adc
loopne
hlt
mov
loopne
out
mov
push
js
rorb
adc
mov
push
fstpl
lds
shrb
cld
divl
inc
or
fptan
adc
es
popa
mov
shl
or
and
cmp
popf
dec
cs
xchg
lret
out
je
movswl
cmp
fcmovnbe
mov
test
mov
inc
movsl
add
dec
pushf
testb
test
nop
sbb
lods
adc
dec
pop
loope
aaa
sbb
shr
ss
xor
lods
cmp
les
sbb
jns
and
jo
jne
mov
and
in
xor
stos
cmp
xor
es
xchg
aam
cltd
inc
enter
lret
imul
adc
stos
out
lods
pushf
jp
mov
lcall
loop
mov
jae
daa
lea
mov
sti
mov
loopne
faddl
hlt
cld
rcll
hlt
mov
lods
aas
data16
push
iret
frstor
lea
loope
cmp
cmp
jl
mov
inc
push
bound
and
aas
stos
jnp
pop
test
dec
jb
xor
inc
pop
test
sbb
sar
pop
sub
leave
cmp
and
call
cmpsb
and
call
jge
sar
jecxz
outsb
dec
and
pop
push
mov
int
jle
sub
cmp
inc
ss
mov
adc
mov
xor
sub
lret
scas
rcrl
sub
lahf
sub
imul
dec
mov
fdivrp
addr16
dec
rcrb
mov
dec
mov
dec
cld
mov
xlat
fstpl
sbb
bound
aad
jb
lcall
mov
mov
fisubrs
push
movsl
pusha
in
test
and
pushf
mov
and
push
pop
idivb
stc
sbb
fwait
lcall
or
into
pop
int3
pop
shlb
outsl
mov
push
or
xor
sub
xchg
and
andl
mov
mov
cmc
and
outsl
fwait
lahf
adc
inc
push
mov
and
mov
cmp
leave
sbb
std
and
push
movsb
xchg
jg
sahf
push
movsb
xchg
dec
fbld
stc
mov
outsb
inc
sbbb
push
fxch
dec
push
mov
mov
mov
adc
lods
loop
mov
push
mov
in
push
mov
imul
mov
adc
aas
repz
push
jo
int3
lcall
mov
mov
pop
bound
push
cmpsb
add
lahf
in
call
inc
fwait
add
adc
mov
sub
pop
lret
or
in
sahf
jno
cmp
std
cmc
push
mov
and
mov
cmp
int
cmpsb
in
mov
cwtl
mov
jge
dec
test
in
scas
mov
sub
in
les
sarl
lcall
and
fidivl
clc
push
bound
sbb
mov
outsb
lahf
jae
adc
sarb
sbb
in
movsl
jns
leave
insl
fisubrl
mov
jmp
add
faddl
es
dec
or
inc
adc
dec
daa
cld
add
daa
popa
imul
rolb
push
push
scas
lcall
jge
xchg
stos
shll
mov
xchg
push
jns
mov
cmpsb
mov
das
xor
mov
sbb
sub
jge
nop
cmp
xchg
shrl
in
call
push
gs
aaa
push
push
insb
sub
scas
loop
jg
xlat
push
jbe
cld
mov
xchg
xchg
rcrb
std
lahf
xor
in
fisttps
xchg
mov
push
add
fdivrs
push
leave
or
mov
out
leave
sbb
int3
icebp
pop
xchg
sbb
cli
push
test
out
fisubrs
jno
dec
popa
es
loope
mov
js
sbb
adc
mov
mov
mov
jae
inc
cmp
sbb
jne
adc
cmp
sbb
enter
shlb
aad
dec
cmp
hlt
iret
or
adc
pop
pop
outsl
dec
test
leave
movsb
dec
loopne
add
mov
rolb
jp
outsb
fwait
and
imul
pop
data16
pop
push
dec
lahf
outsb
lcall
ja
xor
nop
mov
popf
cli
imul
xor
into
fidivs
cmp
mov
pop
arpl
jns
sbbl
mov
in
or
jo
mov
int3
lods
pushf
mov
ret
add
enter
push
je
dec
dec
xchg
fsubs
mov
enter
jo
jl
mov
mov
loope
movsl
jae
mov
lods
mov
fwait
incl
es
mov
mov
gs
add
mov
ljmp
dec
jnp
xchg
in
test
rorb
lock
or
mov
jmp
dec
lcall
sbb
mov
out
cmp
shl
je
aam
shlb
push
mov
xchg
jle
pop
mov
loope
mov
lahf
push
push
and
lcall
sub
xchg
in
std
dec
and
xchg
and
sbb
xchg
xchg
adc
das
xor
mov
jns
dec
adc
ret
mov
pop
stc
out
xchg
jg
jns
leave
or
sub
dec
push
roll
imul
mov
mov
fisttps
mov
or
jo
mov
sbbb
mov
lods
cltd
rcrb
mov
sub
out
xchg
fdivl
in
pop
fcompl
out
popa
ds
inc
pop
pop
push
sub
mov
popa
inc
aam
fmuls
xor
xlat
pop
mulb
into
mov
adc
adc
ret
les
mov
mov
popa
lcall
jmp
xchg
push
pushf
ljmp
push
xlat
cmp
fs
imul
jle
int
xlat
cmp
inc
mov
mov
sti
ds
repz
adcb
add
ds
sbb
dec
cmc
cmp
push
sbb
cmp
call
ljmp
sbb
std
fwait
add
mov
xor
mov
pop
pusha
xor
add
jle
ret
sbb
xor
enter
lea
cmp
pop
mov
out
mov
push
mov
pop
adc
ret
scas
loop
adc
xor
dec
scas
xchg
jg
xchg
dec
outsl
test
pop
scas
sti
mov
fwait
aam
fildll
aaa
aas
sbb
and
push
xor
stos
mov
push
call
shll
stos
mov
push
adc
cmp
sub
loopne
mov
xchg
push
out
into
mov
xor
xchg
mov
or
js
add
fs
cmpsl
hlt
arpl
cld
jb
stos
push
inc
xlat
adc
sub
icebp
fucomp
out
jne
cli
dec
adc
clc
cmp
jge
neg
shlb
push
in
outsb
popa
fcomp
movsb
add
xchg
push
push
cmp
and
push
mov
arpl
inc
cmp
xchg
and
fsubp
divb
fstl
adc
stc
lahf
pinsrw
pop
cmp
popf
jl
sbb
pop
push
out
lea
movsl
mov
mov
imul
hlt
add
in
rep
xchg
cltd
cld
lods
sbb
loope
inc
adc
mov
push
ret
jmp
imul
dec
rol
jno
cmpsb
jbe
mov
mov
xor
cli
adc
call
es
sub
test
mov
xchg
mov
pop
out
xchg
cli
xchg
popa
and
jmp
inc
lret
test
sbb
lahf
and
into
mov
jbe
stos
jge
or
incl
stc
mov
inc
fwait
adc
imul
aaa
cmp
xchg
dec
xchg
call
lahf
push
scas
sub
fmull
cli
loop
inc
lahf
rorl
cmp
pop
test
and
lcall
ja
mov
push
mov
mov
push
mov
inc
lods
lahf
in
adc
cmp
adc
fldz
and
sub
mov
jno
lods
ret
enter
push
push
aas
jns
push
mov
lds
xchg
pop
mov
fildl
or
inc
mov
neg
orb
push
ret
push
lahf
test
push
inc
inc
mov
push
lret
mov
test
pop
jnp
sbb
and
push
aam
pop
push
repnz
loope
pop
imul
lcall
inc
adc
or
popa
lret
dec
mov
pop
push
mov
add
xor
push
dec
out
daa
mov
dec
ret
popl
push
or
mov
cwtl
mov
test
add
loopne
fidivs
hlt
jmp
cmc
adc
push
xlat
xor
push
pop
xchg
add
movsb
xor
mov
sub
lock
adcb
xor
outsl
mov
lea
ficomps
and
cmp
outsl
inc
pop
jnp
push
leave
cmp
mov
add
mov
lahf
and
cmp
sub
iret
mov
in
out
pop
dec
mov
stc
cwtl
fsubl
sti
xor
pop
xchg
dec
popl
jecxz
cmp
sub
leave
cmp
pop
aas
xchg
mov
and
das
decb
sub
loope
iret
sbb
cld
rol
sub
jnp
mov
sbb
je
xchg
icebp
repz
and
pop
or
wrmsr
and
out
and
add
or
hlt
cld
mov
dec
data16
lret
and
xchg
jle
fdivl
mov
xchg
icebp
test
inc
cmpb
mov
jge
cld
leave
jge
repz
jg
insb
or
es
and
mov
add
inc
adc
mov
mov
notb
sbb
mov
mov
xor
popa
fucomip
lret
fs
pop
inc
lods
push
mov
fsubrl
dec
vpmadcsswd
cmpsl
jnp
movsl
outsl
cmc
imul
arpl
aaa
das
mov
and
sub
or
in
xlat
sub
cs
xchg
mov
push
push
or
or
fbld
lea
sub
mov
mov
mov
push
and
stos
data16
jl
xchg
cmp
xchg
movsb
pop
jo
dec
pop
xrelease
dec
mov
pop
outsl
fwait
inc
movsl
test
adc
push
pop
add
pop
mov
lds
push
fistps
and
out
loopne
call
jecxz
fsts
pop
loopne
add
mov
dec
stc
add
inc
push
rcrl
ret
jle
mov
aas
jmp
lods
sbb
xchg
in
std
push
mov
push
add
push
or
xchg
in
cmp
addr16
push
flds
mov
arpl
sbb
sub
scas
dec
popa
pop
nop
mov
aaa
js
push
xor
jnp
mov
lret
push
mov
test
jge
sbb
dec
sub
inc
repnz
and
loop
aam
dec
cltd
fwait
push
and
xchg
xchg
std
sti
mov
xchg
and
inc
xchg
sub
mov
mov
sub
mov
jg
push
scas
sbb
int3
aam
jb
mov
jmp
jle
cmc
aas
add
jb
ret
stos
pop
enter
leave
sti
xor
jge
xchg
int
cmp
jns
fndisi(8087
test
jnp
sub
sbbb
jecxz
push
sub
das
sbb
xchg
mov
scas
cs
xchg
dec
xor
jbe
and
and
jb
test
mov
xor
xchg
or
or
lods
mov
jns
add
adc
adc
inc
pop
xor
dec
mov
push
xor
sbb
or
les
mov
out
push
jno
adc
out
or
loopne
fsubp
pop
cld
jae
sbb
mov
xchg
pop
jge
inc
adc
lahf
cmp
push
or
es
test
push
insb
nop
mov
ds
dec
in
pushf
cmp
test
cmpsb
stc
dec
ret
mov
test
mov
jns
xchg
out
add
sbb
and
iret
inc
pop
inc
test
push
inc
sbb
pop
cld
ds
xor
mov
in
cs
nop
and
dec
ret
lahf
jae
sbb
push
inc
adc
ret
adc
mov
jg
xor
pop
lcall
or
daa
push
cwtl
and
idivl
xor
or
movsl
or
in
jns
ljmp
addb
dec
insl
pop
fxtract
mov
or
sub
testl
pop
push
push
pop
jle
pop
popa
lea
divb
sub
pop
or
mov
lods
shlb
push
mov
mov
ret
jo
je
test
ja
mov
mov
and
fdiv
jbe,pn
jae
jb
aad
push
mov
sub
insb
add
scas
lcall
mov
jmp
stc
pop
or
out
sbb
adc
stc
pushf
mov
daa
sub
shl
aaa
fsubrs
test
xchg
dec
fsubs
jo
or
int
add
push
mov
pop
mov
mov
or
loop
jne
rorb
push
pop
xchg
pushf
xor
mov
push
cld
scas
jge
iret
sub
pop
adc
inc
in
jb
in
xchg
xor
cli
fsub
dec
push
mov
icebp
mov
nop
negb
cmp
dec
lds
enter
imul
or
jnp
adc
sub
fucom
sahf
andb
dec
cmp
cmp
jae
enter
pop
test
mov
push
sub
ret
bound
imul
scas
jae
pushf
inc
jb
cmp
or
sub
shrl
scas
cmp
lds
mov
fwait
mov
or
ret
or
add
or
fdivrs
xchg
shll
sub
out
push
loopne
sbbl
pop
push
add
out
rcrb
jg
push
test
push
loope
push
sbb
adc
or
in
pop
nop
inc
in
xor
sub
lods
data16
aaa
insb
jo
outsb
imul
fcmove
pop
push
xor
inc
inc
mov
mov
mull
push
stos
int3
das
mov
nop
insb
jne
ret
jg
rcrl
shrb
lock
insl
ficoms
ret
inc
mov
dec
xchg
dec
jae
xchg
aaa
stos
jne
lea
test
cmpsb
cmp
movsl
stc
mov
popf
add
xlat
jecxz
fdivl
es
xchg
mov
mov
hlt
add
sbb
dec
jmp
sbb
fwait
cmpsl
rorb
and
fcoml
xor
xlat
mov
or
out
jle
imul
dec
scas
leave
andl
sar
jo
sub
fwait
or
test
lods
and
mov
mov
cltd
adc
movsl
push
xchg
mov
stos
cld
scas
movb
stos
jmp
leave
and
lods
sub
lret
cmpsb
mov
xor
jo
cmp
xchg
mov
test
pop
fsubrp
and
cmp
mov
repnz
dec
fidivrl
fs
test
sub
pop
dec
push
inc
je
cmp
popa
mov
leave
cmpsb
mov
cmp
mov
aas
xchg
clc
fmulp
sbb
lock
jae
inc
add
mov
outsl
bound
mov
pop
mov
test
aam
sbb
mov
mov
and
sub
cmp
sbb
jae
sub
std
dec
mov
mov
mov
movl
pinsrw
mov
pop
popa
cltd
test
loop
push
xor
aad
dec
mov
cmp
arpl
je
sub
lods
add
mov
sbb
fnstsw
and
rcrl
bound
mov
add
rclb
cmp
les
int
sbb
dec
cmp
inc
scas
lods
popl
cmpsb
push
mov
div
dec
jl
stos
xor
jmp
data16
in
test
push
mov
aam
mov
mov
adc
dec
inc
dec
mov
and
inc
clc
loope
icebp
pop
repz
out
sub
xchg
jb
and
loopne,pn
adc
nop
inc
popf
ret
jle
pcmpeqd
cmp
sub
cmp
sub
adc
ds
jno
mov
adc
pop
sbb
sbb
cmpsl
and
push
fstpt
arpl
inc
fnstsw
cmpsb
mov
dec
add
sub
movsb
cmpsl
xchg
mov
daa
int3
lcall
daa
stc
push
dec
outsl
and
cmp
daa
sub
fisubrs
cmp
mov
ficoms
pop
mov
sbb
sahf
imul
int
pop
addb
scas
or
adc
test
and
adc
pop
jb
and
push
adc
push
mov
add
lcall
mov
cltd
mov
pop
fcmovbe
je
icebp
lahf
pop
rclb
clc
loopne
sbb
mov
daa
xchg
lods
insl
shll
pop
clc
jno
mov
test
jmp
int
or
or
sub
movsl
push
shrl
mov
fxch
cmp
lea
mov
lret
les
sbb
cmp
dec
adc
and
cmp
and
mov
add
or
and
test
dec
pop
enter
movsb
lea
mov
frstor
mov
iret
mov
cltd
sub
xchg
das
and
iret
or
mov
or
lock
sbb
ja
gs
lods
test
ljmp
inc
adc
jmp
or
mov
loope
sti
jmp
xchg
xorb
out
pop
sub
testb
jmp
bound
shll
imul
jae
std
jae
out
cmpsb
or
ret
or
mov
test
sbb
jl
mov
in
push
in
lret
xchg
pop
imul
and
mov
test
pushf
dec
call
cmc
fdiv
lahf
jnp
mov
cli
xchg
arpl
iret
lods
out
sub
xchg
sbb
fucomip
xor
push
push
insl
sahf
cs
fildll
ret
and
stos
mov
jbe
push
mov
movb
pop
dec
repz
mov
cmp
add
out
sbb
fmull
push
xor
xchg
jno
aad
popf
lret
xor
setle
rcl
push
jae
out
ss
mov
imul
mov
ja
fimuls
nop
sub
in
testl
aam
rcr
mov
lret
mov
adc
aad
lret
mov
xor
and
or
iret
pop
inc
out
xchg
sub
jns
jno
mov
mov
and
pusha
adc
lock
arpl
mov
arpl
imulb
fidivrl
or
cmp
push
repz
mov
sub
cwtl
les
jp
enter
adcb
push
adc
jnp
int3
sub
or
lret
adc
inc
sub
lods
pushf
add
and
xchg
adc
push
aaa
push
push
fwait
out
xchg
aaa
sbb
in
sub
dec
sbbb
cltd
or
push
or
jb
mov
mov
adc
mov
movsl
into
repz
push
jmp
pop
and
inc
testb
mov
mov
and
jne
test
std
xchg
and
add
cmp
dec
fnstsw
lods
sub
add
jmp
sub
and
sahf
in
and
jne
pop
pop
sahf
lea
push
pop
call
cmp
dec
lret
loopne
push
stos
pop
push
sbb
cmpsb
push
pop
pop
addr16
pop
or
jb
mov
xchg
outsl
jno
sub
dec
fidivrl
cwtl
lcall
fs
loopne
loope
inc
adc
mov
dec
add
pop
les
les
pushf
xor
jo
fwait
sbb
cmc
push
sti
fbld
imul
cmpsb
imul
aaa
mov
fwait
cmp
repnz
aam
out
test
push
pop
xchg
andl
mov
jb
int3
or
push
sbb
das
push
jno
les
incl
enter
stc
pop
clc
mov
jge
xchg
dec
das
push
ficoml
pop
mov
enter
adc
mov
outsb
ja
mov
out
inc
xchg
lds
popf
imul
jne
outsl
pop
jo
aaa
roll
lret
loope
and
xor
and
and
push
ljmp
cwtl
mov
jle
push
jg
fimull
iret
mov
or
stos
in
adc
popa
out
mov
jo
push
jo
add
dec
lds
std
xor
in
test
cmc
fstl
daa
fcoml
pop
test
xor
bound
sbb
jbe
and
scas
imul
enter
add
in
xchg
and
lods
repnz
pop
push
sub
inc
inc
jo
adc
adc
fs
sub
sub
cmpsb
aaa
es
js
jp
xchg
xchg
mov
jg
sbbl
add
out
stc
and
sahf
icebp
ss
fstpt
insb
push
pop
loopne
jmp
ficompl
mov
pop
std
pop
push
lret
sti
pop
ljmp
dec
push
pop
mov
sub
mov
aas
shrl
pop
mov
mov
sub
cmp
shlb
and
mov
inc
cmp
inc
mov
sub
inc
repnz
xchg
sbb
inc
mov
lahf
cli
mov
push
rcl
pop
pop
movsl
cmp
cmp
sub
xor
loope
inc
rclb
cmp
aam
js
fdivrs
mov
andb
shlb
push
fnstenv
inc
adc
and
int3
mov
add
add
mov
mov
test
enter
es
scas
imul
mov
mov
jnp
mov
mov
jge
fwait
divb
shl
and
cmp
lcall
sbb
mov
outsl
xchg
dec
std
jbe
adc
pop
sub
fsubrl
andl
or
sbb
cld
arpl
je
fsubrl
fstpl
fidivrs
xchg
lock
addb
push
mov
cwtl
ljmp
call
mov
stos
xchg
cmp
mov
cld
xor
data16
mov
pop
fdivrl
or
test
fldenv
mov
ret
cmp
and
loope
or
out
add
aaa
test
and
fwait
mov
mov
mov
and
jne
pop
xchg
and
test
and
stos
xchg
pop
test
pop
imull
mov
jg
mov
sub
in
xchg
fidivl
cmp
push
jb
aam
out
jecxz
in
pop
ret
enter
xor
les
mov
push
into
lcall
mov
jge
je
insl
xor
bound
jp
sub
aaa
pop
cwtl
jns
fmuls
mov
pop
push
test
not
sti
and
sarl
fistpl
adc
push
inc
mov
js
push
mov
dec
pop
shl
aad
adc
iret
push
rcrl
xchg
mov
enter
mov
inc
mov
cwtl
test
lods
mov
xchg
lahf
jne
jb
cmp
loop
andl
mov
inc
shlb
dec
adc
jmp
popfw
clc
and
ret
pop
call
sbb
lods
add
cld
adc
je
loopne
mov
sti
jmp
ljmp
shrb
les
inc
int3
repz
gs
lods
cld
leave
out
or
cli
insb
jl
mov
dec
sbb
mov
xchg
and
fildl
cli
dec
or
fs
popf
ror
lret
inc
lods
iret
and
inc
cli
push
or
popa
fwait
rclb
ss
mov
lret
adc
loope
xchg
out
rorb
daa
xchg
jne
adc
cmp
leave
push
cld
sbb
pop
sub
and
scas
loop
jno
jmp
enter
mov
lahf
add
lds
call
frstor
int
cmp
cs
dec
sub
adc
jno
sub
lret
pop
dec
jb
dec
data16
mov
mov
test
daa
inc
out
lods
inc
ss
jmp
clc
jo
js
lahf
jecxz
fstps
xor
aam
push
dec
std
or
fisubl
mov
popf
punpckhdq
dec
loop
cmp
jo
xchg
cwtl
mov
aam
mov
lds
shr
jbe
push
jae
inc
rcrl
lds
je
fisubs
int3
out
add
sub
dec
mov
dec
dec
adc
pop
out
bound
pop
loop
ss
stos
sbb
cmp
inc
xor
mov
jp,pt
mov
pop
xchg
or
aad
sub
out
add
das
in
inc
mov
loopne
loopne
and
ret
push
loop
push
clc
aaa
cltd
push
mov
pusha
mov
adc
jmp
in
movsl
inc
add
repnz
das
or
mov
push
cmpsl
xor
push
popa
sbb
dec
and
xchg
je
push
dec
movsb
lcall
loop
and
stos
push
xchg
bound
dec
sub
push
inc
jmp
lret
ret
scas
lcall
lea
cld
insl
xor
sub
push
mov
adc
into
shrb
mov
jns
or
arpl
fisttps
adc
sub
test
xchg
mov
inc
gs
js
cmpsb
xor
cmp
push
sub
push
arpl
roll
je
adc
pushf
shrb
pop
dec
mov
leave
loope
cmp
push
jnp
push
pop
cmp
inc
mov
mov
addl
sbb
test
push
stc
rorl
add
ret
sti
lds
daa
jecxz
fimull
pushf
pop
loopne
xchg
sub
fsubrp
jmp
sbb
jbe
fs
mov
xchg
scas
scas
hlt
adc
jbe
jne
cmp
mov
inc
push
push
pusha
testb
dec
es
adc
pop
popa
or
std
faddl
ret
dec
or
and
iret
pop
pop
xlat
out
dec
xorb
dec
mov
jp
sarl
bound
xchg
jne
jbe
pop
out
ficoms
add
push
xor
dec
push
xchg
fisubs
and
add
notl
or
adc
dec
xor
pop
sbb
add
jno
lock
add
add
jns
sub
pop
push
adc
mov
rorl
push
push
sub
inc
mov
sti
push
pop
ljmp
sub
dec
mov
sub
mov
int
add
push
cs
mov
mov
fs
push
mov
or
clc
subb
pop
adc
pop
jl
mov
shlb
sbb
popf
fldt
mov
subb
roll
rol
dec
xor
js
popf
adc
and
mov
ret
mov
sub
xchg
je
mov
je
fwait
mov
fisttpl
sbb
cli
add
xor
iret
pop
leave
dec
mov
jae
sbb
jae
mov
xchg
and
popf
xchg
add
ss
cmp
lods
dec
ret
repnz
cwtl
arpl
mov
pop
cmp
std
fidivs
adc
or
popa
mov
and
ret
clc
lods
jnp
inc
jbe
mov
inc
adc
dec
cmc
in
jnp
lcall
movd
mov
loopne
inc
mov
mov
xor
push
out
pop
sub
xchg
xchg
lock
stc
pop
out
adc
aad
shlb
repz
lds
jbe
shlb
or
rolb
xchg
lock
dec
pop
lahf
xor
test
dec
xchg
lock
push
aas
daa
cmp
xchg
jne
lods
out
movsl
or
sub
sub
loopne
inc
loop
rcl
clc
sub
aas
ds
dec
std
dec
outsb
into
push
mov
mov
xor
adcb
dec
cmp
in
dec
push
test
out
movsl
ds
icebp
shl
push
cmp
cmp
lcall
mov
jge
pop
scas
cmc
jg
lret
fwait
mov
dec
push
std
aaa
inc
clc
add
sbb
int3
push
addr16
cmpsl
aad
repz
cli
sub
test
mov
pop
fwait
aas
out
addl
vsubpd
mov
sub
fdivr
int3
or
andb
int
add
mov
stos
iret
or
xchg
inc
movsl
movsl
add
aas
movsl
xor
mov
repnz
cmc
jl
fwait
pushf
or
cs
fcmovu
inc
stc
orb
mov
push
imul
bound
mov
shlb
adc
dec
xor
es
cmp
bound
rclb
mov
xor
cmp
inc
outsb
adc
fldcw
adc
push
mov
push
jae
mov
lcall
roll
cmp
cmp
pop
imul
and
xor
in
adc
pop
xchg
mov
sahf
adc
mov
dec
add
jns
cmp
push
fsubs
mov
jmp
or
xor
push
mov
fimull
pop
push
lods
dec
push
sub
jmp
xor
jb
frstor
fsubr
mov
or
fsubp
cmp
lods
repnz
jns
sarb
adcb
or
pop
jne
jb
jo
inc
test
sbb
mov
mov
adc
js
popf
cmp
or
call
addr16
fistl
insl
inc
mov
push
add
cmp
fs
shll
lds
xor
push
pushf
imulb
push
cmc
hlt
jge
jp
fmul
iret
js
xchg
test
jg
cmpl
dec
jb
in
sub
push
lret
clc
daa
sub
jb
sbb
movsl
dec
push
mov
push
fistl
fisubrs
clc
dec
and
in
or
lcall
or
iret
mov
in
xchg
hlt
scas
dec
stos
or
push
fisttps
fs
mov
pushf
pop
mov
in
arpl
push
testl
sti
mov
sub
dec
mov
sub
push
pushf
xchg
movsb
or
nopl
adc
xchg
bound
pop
scas
sbb
adc
stos
lock
adc
sbb
push
pop
data16
mov
xchg
and
cwtl
sar
popl
mov
dec
arpl
imulb
ljmp
xchg
mov
sbb
aad
into
je
iret
pop
mov
in
dec
sarb
sub
sbb
inc
xorl
int3
jle
frstor
cld
inc
pop
cmc
int3
jecxz
loope
je
cmp
sub
and
or
push
xor
mov
andl
out
sub
outsl
add
xbegin
cmc
inc
jnp
imul
enter
mov
and
xor
cmpsb
jae
push
je
or
push
out
dec
mov
mov
ljmp
pushf
xchg
mov
jo
add
inc
addr16
add
fdivr
repz
dec
jle
mov
ss
out
popa
je
subl
mov
xor
sub
jno
inc
cmc
sub
and
stos
in
cltd
xor
mov
movsb
das
add
mov
adc
lock
jns
add
popf
push
js
add
idivl
xchg
mov
cmpsb
or
imul
insl
mov
je
xor
lret
bound
icebp
cltd
jb
in
mov
test
pop
imul
mov
pop
out
mov
ds
add
add
mov
sbb
inc
cmpsl
xor
adc
ret
loopne
fstl
icebp
xchg
js
push
cmpsb
pop
dec
ja
sbb
cmp
icebp
fwait
mull
out
js
sub
inc
hlt
add
cmp
ret
push
daa
xor
mov
lcall
mov
jo
adc
test
nop
or
cmc
jl
push
pop
aad
jmp
imul
cmp
cs
mov
fiaddl
loop
rcl
enter
iret
jne
push
mov
pusha
nop
and
call
out
mov
cmpsb
pop
cmp
imul
xchg
push
cmp
jne
clc
shl
bound
sub
scas
push
lods
out
push
add
testl
rolb
push
cmp
mov
js
cltd
ror
inc
in
mov
jb
insb
leave
xchg
movsb
icebp
dec
mov
lret
cltd
mov
pusha
test
push
jl
movsb
mov
sbb
les
cltd
js
loopne
cmp
stos
iret
cli
jbe
dec
xlat
cmpsl
push
in
mov
jo
stos
sbb
mov
fucomip
sub
ds
add
jb
das
arpl
into
adc
xchg
nop
pop
pop
sti
cwtl
in
xchg
mov
out
jno
std
cmpsl
js
push
lock
inc
jp
inc
nop
jae
bound
add
repnz
push
pop
pusha
cwtl
and
loop
imul
insl
lret
mov
xchg
hlt
xchg
cmpsl
je
dec
xor
ljmp
aad
gs
inc
pop
push
adc
repnz
imul
add
loope
adc
mov
mov
mov
in
inc
or
xor
stc
pusha
mov
daa
iret
xchg
fwait
or
mov
fstpt
rcrb
mov
mov
fistps
lock
addr16
push
sbb
mov
or
mov
xor
sub
xor
sbb
shlb
push
scas
pop
in
out
outsl
sbb
movsl
test
push
lds
es
jbe
pusha
ds
or
inc
rorl
lret
mov
jmp
xchg
das
popf
pop
mov
imul
inc
dec
jae
mov
mov
lcall
cmp
sub
dec
xchg
mov
mov
lock
dec
add
ja
mov
out
jl
mov
jns
fsubrs
iret
mov
mov
mov
mov
xchg
mov
xchg
pop
push
movsl
insb
cmp
inc
gs
stos
push
lds
in
jecxz
inc
cltd
mov
pop
dec
lea
push
inc
jl
mov
cli
dec
xor
push
addl
cmp
mov
shrl
mov
movsl
lds
test
jb
pop
push
push
movsb
jae
mov
out
outsl
cltd
jp
and
adc
dec
mov
pushl
test
cli
lahf
ss
pop
mov
clc
mov
icebp
inc
rol
test
pop
inc
dec
pop
jp
push
fldenv
fnstenv
fmull
sub
aas
dec
incl
loopne
add
aad
je
push
push
notb
and
adc
push
in
test
stos
adc
mov
inc
mov
clc
push
out
mov
jge
lahf
or
les
mov
lods
mov
mov
sbbb
out
push
pop
mov
notl
xchg
and
push
inc
sbb
clc
testb
dec
sub
mov
rorl
or
neg
mov
cmp
lods
sbb
xchg
mov
push
pop
push
fsubs
mov
xchg
subb
scas
sub
cld
lock
mov
int3
js
xchg
sub
sub
stos
push
push
lea
lret
js
decl
je
sahf
jbe
cmp
push
mov
inc
in
dec
mov
push
mov
push
popa
mov
pusha
test
or
ljmp
cmpsl
rorl
lods
and
in
shlb
ja
xchg
scas
int3
fimull
scas
lock
rcll
inc
imull
and
cmp
or
outsb
cwtl
xor
sub
daa
push
int
repz
xchg
xor
pop
out
mov
xor
pop
jmp
mov
jge
adc
adcl
inc
test
push
fnstsw
std
sbb
fwait
lock
jnp
or
popa
aam
mov
xchg
imul
cmc
inc
dec
xchg
adc
fldenv
je
jp,pt
and
das
ss
cmpsb
iret
sub
test
mov
jns
insb
iret
adc
test
mov
shlb
int
mov
cmp
in
cmpsl
insb
add
adc
cld
xor
ffree
out
add
mov
add
dec
xchg
xor
cmp
sub
test
xor
mov
inc
fwait
scas
test
test
lahf
fistpl
sbb
add
sbb
out
mov
mov
cmp
call
lods
scas
rorl
mov
mov
sbb
xchg
ret
jae
andw
cmp
dec
in
sbb
movups
mov
int
cwtl
popa
jecxz
mov
sub
xchg
in
pop
inc
lcallw
sub
inc
fcmovnbe
cmp
rcll
xor
je
fistl
mov
pop
scas
test
jno
xchg
cmp
dec
push
sub
call
pop
out
insl
dec
xor
mov
fsubrl
mov
in
scas
adc
sbb
mov
or
movsb
push
push
cli
out
std
sbb
out
lods
xor
in
push
sbb
fsts
cld
and
mov
add
fldl
ja
mov
jecxz
xor
lock
adc
mov
adc
and
jo
lret
xchg
push
fwait
pop
lods
jmp
popf
roll
ljmp
mov
test
add
fsubs
push
aad
xchg
add
stos
xor
jbe
sub
pop
push
dec
enter
aad
mov
dec
cld
pop
push
add
ja
push
call
fisttpl
sub
dec
inc
push
in
cmc
lret
rorw
fiaddl
mov
and
adc
dec
xchg
push
dec
es
out
fstpt
push
lcall
in
sub
mov
cli
sub
xchg
mov
jb
pop
scas
outsb
and
fsubrs
mov
mov
aad
shl
mov
popf
outsb
and
test
push
ja
movsl
sbb
sub
pop
mov
add
pop
push
ds
jecxz
ret
cmpsb
or
pop
mov
and
push
jmp
and
sti
and
add
jecxz
sbb
fisttpl
popf
mov
adc
dec
aas
lahf
adc
jns
dec
push
or
sub
mov
aas
jg
jl
jne
adc
mov
xlat
in
scas
cld
int
xor
gs
xorl
les
mov
outsl
push
xchg
jmp
jbe
stos
insl
jg
pop
fldenv
and
or
xor
test
adc
add
and
sbb
mov
xlat
idivb
mov
fstpl
stos
adc
scas
jecxz
sub
push
lret
sub
or
pop
mov
add
fnstcw
clc
imul
or
adc
cmc
cmp
rcrl
dec
mov
sbb
add
stc
adc
and
cmp
add
add
scas
mov
in
out
cmp
sbb
lea
cwtl
lock
inc
dec
insb
sbb
shr
inc
test
cmc
test
mov
repnz
push
inc
dec
pop
nop
sbb
insl
add
mov
lret
in
pop
inc
pop
add
andl
int3
sub
cmpsb
roll
cltd
pop
cmpsl
insl
out
scas
cs
adc
fstps
mov
mov
cmpsb
mov
push
ror
inc
rcr
pusha
stos
adc
xchg
sub
mov
aam
dec
rorl
xchg
cmpsl
cmc
pop
jo
mov
mov
push
jae
scas
popa
push
push
insl
adc
pop
adc
ror
daa
jbe
mov
in
jns
mov
or
dec
pushf
add
sub
ja
inc
push
or
subl
jge
or
inc
sbb
pop
sub
shl
mov
loop
aaa
mov
pop
mov
out
sar
mov
push
cmp
jo
mov
and
jle
out
scas
and
xor
pushf
loope
cli
int
fwait
mov
cmpsl
push
push
jecxz
push
push
xchg
movsl
ljmp
cmpsl
stos
push
or
pop
pusha
into
sub
cmp
test
xor
into
pop
dec
jecxz
or
leave
fsubr
mov
pop
push
or
inc
jo
out
mov
fwait
adc
sub
and
shll
sti
push
and
insl
or
jmp
cmp
inc
mov
pusha
xchg
sbb
adc
cs
popl
pushl
cmp
outsb
jp
dec
frstor
flds
adc
jmp
cmp
dec
push
jb
nop
jecxz
xchg
out
mov
sarl
inc
or
push
mov
adc
je
popa
adc
int
mov
fimull
and
add
sub
push
mov
inc
mov
cmp
xchg
pop
mov
sarb
cli
add
mov
mov
hlt
and
and
sub
mov
jecxz
nop
fwait
cs
clc
inc
scas
mov
jne
xchg
push
stos
pause
addr16
mov
fldl
adc
aas
xlat
inc
sub
out
cmc
add
aas
jg
xchg
rcl
push
cltd
popa
cmc
jb
lods
xlat
cld
sbb
inc
divl
imul
pushl
je
mov
xchg
mov
jb
add
nop
lock
filds
dec
loope
push
mov
movsb
daa
mulb
jecxz
inc
lcall
cmpsl
or
in
mov
cmp
cltd
movsl
sti
lcall
cmp
call
out
ret
xor
sub
daa
repz
sbb
jnp
int
jecxz
or
jne
jmp
popl
insb
shll
incl
mov
das
sahf
cmpsb
insb
mov
rorb
dec
int3
jns
fdivrl
pop
cmp
popa
test
inc
jne
enter
mov
jb
dec
jno
xchg
adc
pop
push
inc
sbb
push
sbb
ret
ror
xor
cmpsb
mov
and
fsubrl
jle
loopnew
add
popf
popf
xchg
aaa
inc
out
inc
lret
stos
pop
inc
jg
dec
lock
xchg
jle
mov
push
jnp
loopne
sub
call
xchg
sbb
in
sarb
dec
push
sub
lcall
repz
loope
add
mov
movsb
xchg
xchg
leave
es
fisttps
les
sub
pop
push
out
and
cmp
cwtl
dec
ficomps
mov
mov
int3
jae
rcll
dec
jle
out
leave
loopne
or
push
mov
test
mov
push
push
or
and
test
or
sbb
lea
or
imul
jbe
movsb
sti
orb
mov
push
mov
outsb
loope
ss
and
mov
pop
ss
fcom
cmp
fisttpl
xor
mov
sti
ret
data16
ret
int3
cld
sbbb
mov
mov
cmc
es
mov
arpl
mov
test
dec
fs
dec
stos
rclb
jnp
jl
mov
adc
push
sbb
jae
bound
or
imulb
lods
mov
jne
and
push
enter
mov
adc
cmp
cld
test
aaa
cltd
cmp
in
cmp
icebp
idivl
cli
or
rorl
repz
pop
adcl
shrb
divb
mov
daa
mov
inc
insb
inc
in
stos
add
add
sub
cmc
pop
xor
pop
inc
loop,pn
and
push
xchg
adc
jnp
mov
push
test
jne
fists
push
mov
movsb
cmp
inc
scas
dec
fsubs
jae
jb
rcll
loopne
jns
cmp
add
testl
stos
mov
push
adc
mov
sub
jnp
dec
fldl
push
stos
and
fbstp
lcall
jp
and
nop
pop
xchg
push
sbb
pop
fwait
sbb
dec
outsl
jmp
ret
test
fbld
mov
imul
outsl
dec
mov
hlt
sbb
out
sbb
in
mov
loopne
aam
test
cmc
lods
pop
xchg
icebp
mulb
shrl
popa
dec
push
xchg
aam
and
dec
sbb
movsb
mov
int3
leave
jo
sub
pop
inc
add
arpl
cli
loop
adc
push
sub
cwtl
adc
sub
mov
dec
imul
lret
popa
mov
or
insl
pop
pushf
push
inc
outsl
xlat
outsb
clc
shll
pop
pop
insb
insb
imul
xlat
lahf
push
fstpt
inc
cmc
inc
mov
out
sbb
int3
test
push
ss
out
and
mov
xor
into
or
pusha
sub
cmp
inc
les
aas
inc
xor
push
mov
adc
int
jmp
and
dec
bnd
or
hlt
ret
icebp
adc
xchg
xchg
out
sti
push
inc
fmuls
pop
mov
ss
sahf
mov
int
jae
xor
dec
js
inc
rcl
sbb
cmpsb
mov
mov
out
push
js
les
mov
stos
test
pushl
ds
pop
xorb
mov
jb
movsl
or
jno
mov
rcr
insl
aad
push
cmp
insb
dec
mov
divl
cmc
lds
jp
dec
lret
or
push
sbb
xor
sbb
add
divb
push
jb
dec
xchg
xchg
sahf
shl
lea
dec
adc
xor
loopne
xchg
call
mov
sub
push
inc
jo
stos
jo
cli
sbb
inc
stos
hlt
xorw
inc
pop
cmp
pusha
pop
scas
ret
xor
rcll
lea
xchg
xchg
dec
jmp
stos
fs
jne
mov
jae
sbb
and
imul
or
mov
popa
into
mov
mov
push
dec
push
cwtl
dec
dec
test
cs
inc
pop
adc
add
jmp
or
testb
lahf
push
ds
push
gs
pop
cwtl
cmp
je
clc
pusha
lods
daa
inc
clc
inc
mov
xor
out
movsb
xchg
fidivl
cmc
mov
icebp
scas
xchg
cmc
rolb
repnz
shl
stos
add
jo
clc
jnp
aas
jp
loope
adc
mov
icebp
xor
aad
cli
fwait
adcl
ret
es
movsb
jp
lcall
leave
outsl
and
sub
aam
ficoms
jbe
out
mov
push
add
and
lret
dec
push
loop
and
mov
push
jns
call
ljmp
cmpsl
push
and
xchg
testl
sub
pop
out
sahf
addr16
bound
xchg
pop
pop
or
dec
ret
lods
sahf
inc
out
dec
xchg
push
push
xor
insb
loope
mov
lcall
push
mov
outsl
sbb
sbb
rcll
fs
stos
cld
fldenv
push
fwait
stos
repz
and
push
dec
dec
mov
cmp
lods
hlt
push
lcall
inc
cmpsb
adc
cmp
or
adc
in
mov
fidivl
jmp
lea
insl
les
cmp
xchg
add
dec
loope
dec
sub
int
sti
push
mov
std
jns
loop
lldt
jge
sbb
pusha
mov
stos
fbstp
push
lock
scas
dec
mov
pop
jns
idiv
movsl
jae
sub
sub
test
imul
push
mov
lcall
adc
lret
aad
jmp
test
scas
mov
xor
dec
mov
cltd
pop
jge
pop
inc
lcall
mov
pop
pop
xor
cmp
loopne
push
in
jmp
xor
mov
nop
data16
pop
or
mov
aaa
nop
dec
insb
ret
jge
add
and
xchg
mov
sbb
jo
cmpl
addr16
mov
int3
rol
test
pop
out
fnsave
shrl
shr
testb
add
mov
loop
popa
push
test
xor
mov
jl
jg
pop
aas
push
in
xor
pop
xorb
mov
fcoms
in
adc
loope
fwait
pop
xor
mov
jp
jb
mov
fsts
stos
mov
faddl
arpl
scas
mov
subb
je
in
and
xor
cmp
inc
adc
addr16
mov
es
pop
sbb
arpl
jns
cs
lret
dec
push
popf
cmp
out
daa
mov
inc
mov
mov
fldl
imul
popf
mov
dec
fldenv
insb
xlat
ficoml
xor
cmp
or
fstpl
xchg
jnp
adc
icebp
add
fidivrs
repnz
int3
mov
add
xorl
or
and
mov
bound
test
sbb
cmp
or
stos
arpl
scas
mov
pushf
aaa
aas
inc
mov
xor
nop
push
inc
mov
sbb
lcall
fstl
jg
pop
imul
add
cmp
cld
xchg
xchg
or
or
fidivs
dec
xor
xor
xchg
jno
pop
ss
dec
sub
lret
adc
xor
inc
add
jl
test
cmp
jl
xchg
mov
stos
faddl
xchg
in
sti
pop
fwait
in
jge
adc
loop
mov
rcrb
xchg
jmp
push
ret
sbb
ret
faddl
mov
xchg
mov
in
inc
mov
mov
pop
orb
hlt
sbb
cli
xchg
leave
cmpsb
int3
fidivrs
shrd
mov
inc
dec
leave
mov
xorl
nop
cld
outsb
push
stos
sub
outsl
adc
xchg
lret
dec
icebp
mov
ror
leave
pushf
cmp
jb
rep
sub
cmp
adc
sub
and
xlat
push
sahf
push
adc
sub
adc
ja
rolb
mov
xchg
push
adc
je
ds
mov
out
lcall
adc
mov
inc
dec
push
mov
pusha
fisttpll
xchg
add
dec
lds
lret
out
int
sub
jl
inc
std
jmp
sub
loope
xor
mov
cld
jle
push
dec
shrl
and
fdivs
popf
sbb
or
mov
or
sub
sub
lsl
sti
loopne
mov
cs
scas
dec
into
sub
sub
andl
cli
lret
jo
mov
and
dec
xor
test
dec
sbb
pop
dec
sbbb
or
popa
xchg
inc
out
cmpsl
stos
shll
fwait
push
data16
fcoms
mov
outsl
pushf
and
aam
add
adc
movsl
cmp
sbb
push
jnp
adc
enter
roll
push
hlt
dec
mov
mov
xor
inc
jle
in
or
popa
repz
jge
pop
fbstp
pop
data16
jno
mov
lods
sub
push
addl
and
sbb
push
lods
outsl
and
out
cmpsb
xchg
jo
insl
idiv
insb
add
mov
push
loope
test
mov
lds
flds
repnz
shll
push
pop
out
adc
mov
xor
es
jne
in
das
sub
ljmp
jnp
mov
int3
pushf
mull
js
pop
insb
sbb
xor
jo
int
insl
ss
mov
loopne
int3
mov
dec
sti
mov
inc
cmp
loopne
repnz
cmp
xchg
cmp
sbb
cmp
mov
sub
nop
rorb
xor
inc
mov
dec
and
or
aaa
mov
sbb
jns
invd
mul
push
jae
hlt
mov
bswap
fdiv
lds
in
std
hlt
outsl
rcrb
andl
xlat
std
clc
outsb
insl
addb
fidivl
mov
mov
cltd
mov
sarb
pushf
cmp
stc
fists
test
inc
cmpsb
das
sti
adc
and
pop
sbb
loope
fimull
inc
sub
movsl
push
data16
mov
outsl
xchg
call
dec
dec
mov
imul
adc
mov
jl
unpckhps
repz
dec
fmuls
add
cltd
sbbl
push
sbb
and
sub
cmp
jo
repnz
jg
jg
lret
mov
xor
or
mov
jno
adc
in
loope
push
mov
mov
adc
sarl
jp
inc
add
out
xchg
fnsetpm(287
pop
lods
jbe
loope
imul
es
out
xor
mov
push
sbb
or
cs
loope
insl
jle
cmc
shr
cmp
push
ret
mov
or
pop
pusha
in
stc
or
adc
xchg
fidivl
xchg
cmp
jmp
lods
sbb
cmp
out
dec
cli
cmp
push
and
mov
xor
pop
je
or
test
cli
jb
test
mov
push
scas
hlt
ljmp
pushf
inc
cmp
in
mov
in
aas
jmp
jge
stc
out
test
inc
es
cwtl
jmp
inc
test
lret
inc
pop
lods
push
mov
stos
int3
add
arpl
dec
add
cwtl
scas
adc
stos
cmpsb
pop
xchg
das
mov
shll
sub
mov
je
mov
sbb
call
pop
jo
sti
xchg
jno
scas
stc
xor
cld
cmp
sub
inc
test
inc
and
pop
rcrl
mov
aad
xor
pusha
aam
or
xchg
add
fcmovnbe
xchg
test
or
inc
mov
idivb
sub
dec
and
out
xor
jmp
mov
lods
or
inc
mov
mov
mov
or
add
push
clc
and
pop
popf
test
adc
xor
push
add
fiadds
imul
iret
xchg
push
das
jl
jge
jo
cwtl
scas
out
jle
stos
mov
aam
out
testl
or
repz
mov
test
addl
cmpsl
test
rolb
mov
push
lahf
rcrl
stos
jp
mov
dec
std
pop
xchg
xchg
int3
and
icebp
leave
add
fdivrs
cmp
adc
dec
movsl
test
call
dec
inc
xor
mov
adc
loope
mov
gs
into
pop
adc
ret
jb
pop
cs
push
in
loopne
rorl
xor
pop
neg
cld
out
loop
movsb
sbb
pusha
mov
int3
push
or
loop
cmp
out
lods
sub
loope
mov
mov
adc
or
imul
jb
cmpsl
push
lock
add
sbb
add
xchg
cmp
sub
jecxz
ja
or
dec
jle
dec
adc
inc
sbb
mov
and
fdivrl
mov
test
sub
sub
pop
popf
fld
sbb
pushw
outsb
mov
dec
cmp
fimuls
pop
lret
pusha
fs
jecxz
in
adc
mov
push
pop
mov
lret
and
incb
or
mov
mov
bound
pop
fldcw
pop
div
lcall
cmp
push
lret
fwait
arpl
icebp
mov
adc
sub
icebp
jnp
jl
mov
mov
cltd
push
jbe
pop
sub
outsb
push
push
lds
daa
out
xor
loope
clc
pop
inc
jns
xchg
movsl
addr16
addr16
lea
mov
fisttpl
jecxz
add
and
mov
dec
and
mov
icebp
push
sub
inc
xor
cmc
or
pop
ss
mov
es
daa
dec
add
mov
in
push
fldt
inc
jg
adc
jge
loopne
outsl
leave
in
jbe
xchg
sbb
repnz
xchg
fwait
repnz
es
mov
push
adcb
pop
xchg
mov
dec
jle
ja
sti
inc
add
jecxz
push
mov
loop
push
cmpsl
sbb
push
lret
out
xchg
pop
sbb
adc
fimuls
sbb
out
cli
and
cwtd
dec
ds
leave
imul
sti
mov
xchg
ds
jne
add
dec
sbb
sahf
dec
movsbl
fucompp
xor
pop
inc
pushf
cmp
mov
popf
mov
jns
add
and
jge
cmpsl
adc
outsb
add
or
push
or
mov
hlt
inc
push
add
jge
pop
jg
stos
push
push
sbb
in
je
jmp
rclb
mov
pop
out
xchg
jge
test
cmpsl
xchg
xchg
je
adcb
int3
and
dec
in
push
insb
insl
sub
mov
cmpsl
jge
dec
ja
outsl
mov
add
bound
jnp
inc
mov
pop
sar
and
lods
cwtl
pop
push
shll
push
inc
fwait
push
push
mov
or
aaa
or
xchg
cwtl
mov
sbb
cmc
jg
xor
fwait
iret
jmp
out
ret
mov
push
scas
clc
pop
mov
movsl
jle
push
hlt
fdivrl
sub
mov
lahf
sub
cwtl
adc
inc
mov
in
hlt
daa
mov
jno
pop
push
cs
outsb
aad
and
sub
aaa
push
adc
sub
cltd
pop
lods
ss
orb
push
adc
push
add
rclb
ret
or
ret
adc
cmp
inc
iret
mov
adcb
pop
jle
lahf
xor
popa
call
xchg
jl
jno
mov
in
pop
ja
fwait
cmpsb
icebp
movsb
test
push
rorb
push
mov
xchg
dec
xchg
dec
andb
mov
mov
imul
sub
inc
push
fstpl
imul
cmpsb
xchg
lcall
mov
sbb
mov
and
vxorps
jne
add
into
fldcw
enter
jmp
ljmp
cmp
xor
arpl
push
fidivl
cmp
mov
jo
lock
dec
pop
subb
cmpsb
xor
shl
or
scas
xchg
dec
lret
in
pop
mov
mov
xor
cmp
sbb
lret
or
scas
aaa
jnp
mov
movb
cmp
insb
adc
stc
inc
jbe
push
test
dec
or
or
lods
sub
dec
insb
rcll
inc
sar
inc
jbe
sub
dec
mov
js
popf
jo
inc
adc
xchg
mov
inc
imul
push
pushf
xchg
mov
sbb
adc
jne
lods
pop
fs
sbb
stos
lahf
xchg
mov
fxch
and
lods
std
adc
sar
icebp
push
adc
push
mov
mov
ret
mov
iret
push
xchg
lcall
std
push
enter
out
mov
scas
sbb
xchg
mov
pop
adc
lret
lods
and
stos
sbb
mov
push
je
or
xor
shll
in
sub
xlat
cmp
aad
pop
outsb
iret
cmp
call
adc
adc
ror
adc
mov
push
adc
rorb
arpl
mov
or
pushl
stos
add
test
push
xchg
cmp
push
loope
or
and
sub
movsbl
mov
xchg
mov
and
popf
mov
xor
xacquire
sbb
in
xlat
out
inc
std
sbb
sub
jbe
fisubl
decb
ja
leave
dec
xchg
gs
je
ja
or
leave
xor
xchg
rol
pop
or
adc
mov
incl
out
in
cmp
inc
pop
or
sub
dec
pop
jmp
dec
dec
mov
scas
dec
xor
lock
mov
stos
lcall
shl
movb
ss
stos
decl
inc
xchg
mov
add
dec
inc
pop
fwait
add
pop
aas
out
and
cmp
call
fisttpll
in
ret
pushf
pop
loopne
daa
adcl
mov
out
fs
cmp
push
xchg
pop
cli
fs
stos
pop
dec
in
dec
mov
int3
add
adc
enter
adc
int3
jne
add
mov
add
cmpsl
mov
push
cmpsl
jb
xor
aam
adc
test
and
stc
bound
inc
or
out
shll
add
jno
xor
in
cwtl
leave
dec
mov
mov
push
sub
popa
mov
inc
popa
cmpsb
outsl
mov
sub
mov
ror
mov
mov
inc
inc
mov
ret
ret
mov
jge
mov
xor
lret
shlb
or
mov
sub
pop
scas
into
outsb
jmp
cmp
xor
mov
leave
adc
pushf
scas
aaa
leave
push
mov
cltd
inc
sub
mov
sbb
sti
lcall
add
mov
adcl
cli
movsb
or
imul
lcall
aad
xchg
loope
inc
fisttps
shlb
mov
mov
cmp
ja
cmp
sti
sub
repnz
lret
pusha
mov
loop
pop
jge
mov
add
push
shrb
pop
cmp
gs
pop
fdivs
lret
pop
ret
ret
mov
add
imul
inc
xchg
mov
inc
xchg
xor
enter
out
jle
sub
xchg
mov
ljmp
test
inc
fistpll
pop
dec
dec
popa
js
push
out
fsubrp
xor
or
nop
jo
daa
loop
in
push
enter
iret
xchg
sbb
rclb
or
decl
sti
lcall
flds
pop
repz
inc
mov
pushf
jmp
cmpsb
shlb
test
pop
xchg
inc
aam
iret
mov
mov
arpl
and
pusha
dec
or
inc
sbb
jno
pop
test
push
add
inc
xor
cmp
out
das
ret
fldl
or
mov
sbbb
je
add
sub
scas
push
dec
ds
and
xor
call
stos
xchg
lock
pop
shrl
add
sub
cltd
fstps
mov
cmp
loop
pop
shrb
inc
sub
insb
add
push
fs
xor
mov
adc
and
divb
outsl
test
adc
js
insl
insl
xor
enter
pop
lahf
repz
cmp
xchg
push
pop
nop
test
mov
add
jns
push
inc
xchg
mov
xchg
or
mov
outsb
aam
int
cmpsb
push
dec
cmp
mov
int
idivb
lods
dec
mov
hlt
int
mov
add
dec
adc
sub
inc
icebp
sbb
cwtl
pop
aas
jge
xchg
aad
xor
and
lcall
mov
push
cmpsb
lret
hlt
adc
pop
lods
push
ret
xor
clc
jo
clc
sbb
hlt
cmp
shrl
mov
inc
mov
mov
push
mov
fstp
inc
mov
in
jmp
insl
mov
je
aad
pop
popf
push
sub
rcll
mov
add
frndint
lret
stos
lahf
and
or
les
je
jo
sti
addl
inc
or
add
sub
stc
cwtl
and
jb
add
cld
fdivrs
jle
stos
leave
rclb
adc
fcoml
mov
add
lret
jge
sar
mov
fstps
ret
pop
cld
xor
fldcw
mov
repz
fisubrl
out
jg
loop
outsl
aam
scas
int
push
or
mov
repnz
or
xlat
mov
sbbl
push
jecxz
pushf
repnz
push
cld
xchg
adc
testl
mov
mov
lods
cmp
mov
jb
xor
cmpsb
int
ds
or
rcrl
cmp
jp
pop
es
dec
scas
push
testb
sub
out
popf
fldcw
lahf
stos
daa
adc
or
fdiv
jo
test
arpl
xchg
stc
mov
movsb
insb
inc
out
mov
mov
out
movsl
mov
xchg
push
aas
xchg
xor
scas
fildl
push
aad
pop
add
sti
lea
add
push
lret
sbb
pop
push
xchg
rcrb
iret
mov
call
lods
ds
idivl
shrb
std
inc
jp
jae
aam
movl
push
test
push
in
fs
sub
mov
pop
ljmp
shlb
push
pop
inc
jmp
sub
decl
ret
int
cmp
jle
je
jne
mov
push
mov
lret
adc
std
xchg
dec
add
loope
int
ljmp
mov
inc
mov
repz
sub
and
push
jns
or
fwait
and
movsl
pushf
ret
js
ds
adcb
pop
add
cld
nop
dec
cmp
outsl
sub
mov
stos
adc
scas
ja
stos
int3
xor
nop
les
jl
inc
data16
dec
mov
divl
hlt
repnz
jmp
mov
cmpsb
packssdw
idivb
scas
out
xlat
xchg
rolb
popf
fistps
xchg
sbb
cmp
sbb
pop
and
call
pop
inc
lods
imull
lret
popa
mov
jns
xchg
in
or
jae
cmp
fimuls
push
mov
and
dec
nop
xlat
push
stc
aam
pop
outsl
jp
jne
scas
dec
js
scas
xchg
test
sub
lret
mov
fwait
das
cmp
and
nop
popa
repz
xchg
xor
repnz
stos
sbb
add
je
pusha
pop
lahf
lcall
jmp
add
test
lret
out
mov
les
aas
sarb
fnstenv
aas
ret
xchg
adc
ja
jl
push
mov
aaa
sbb
and
fstpt
movsl
fcompl
mov
hlt
mov
jb
cld
mov
frstor
clc
mov
insl
jmp
std
jns
cmp
and
icebp
bound
icebp
xchg
aas
popf
push
sbbb
bnd
fcomps
popa
stos
xchg
loopne
lcall
and
cmc
pop
cmpsl
scas
clc
push
pop
or
xchg
lahf
rcr
xchg
and
outsl
popf
add
bound
push
mov
add
imul
and
xchg
xchg
jge
arpl
push
aam
dec
push
testl
mov
bound
mov
sarl
push
inc
fptan
pop
adc
loop
ss
test
sub
or
and
jge
pusha
mov
lods
pop
in
rclb
and
bound
sub
daa
inc
cltd
mov
xchg
imul
sub
sbb
dec
ja
in
in
loopne
inc
mov
aas
add
call
push
lahf
mov
mov
dec
loop
fs
cmp
or
addr16
nop
scas
jne
inc
mov
xchg
xchg
sbb
fwait
add
js
jnp
xchg
popf
shlb
fucomi
aas
aam
push
sbb
xchg
xchg
cs
icebp
or
fsts
fistpll
arpl
fnstsw
rcrl
lret
sub
and
xchg
mov
shrl
mov
cmpsl
icebp
mov
or
mov
pushf
lahf
push
and
mov
in
push
mov
jmp
adc
cmp
shlb
enter
adc
shll
xor
jge
pushf
mov
movsl
es
fisttps
xchg
sbb
mov
movsb
sahf
pop
je
int
pop
inc
pop
lahf
inc
shll
repz
addr16
dec
pop
mov
add
xchg
jg
fwait
movsl
fstps
cwtl
fwait
mov
repnz
addr16
daa
out
in
adc
dec
into
icebp
xor
jbe
sarl
lods
xchg
pop
es
sub
xchg
mov
push
and
outsb
pop
pop
cmp
cmp
cmp
outsl
js
out
popf
lret
lret
dec
iret
shll
sbb
adc
sbb
aas
es
fcompl
in
sub
mov
in
jl
sub
dec
add
push
jae
repnz
jae
hlt
inc
mov
push
in
xchg
js
aad
sub
ret
in
xchg
mov
sub
scas
sub
lahf
mov
mov
cld
in
push
movsb
sub
add
scas
lock
dec
jmp
test
xor
in
rorl
sub
test
mov
pop
cwtl
int
rcrl
repnz
ja
fstpl
arpl
jmp
mov
push
push
mov
adc
sbb
push
std
adc
mov
xor
jne
push
insl
cmp
or
stc
sub
xchg
push
fisubs
or
sbb
outsb
push
subl
test
xorb
sbb
sub
jns
mov
lret
jle
in
inc
mov
xor
out
sub
jns
dec
sub
fwait
stos
lahf
les
fstpt
scas
fbstp
add
clc
push
outsl
inc
je
inc
xchg
icebp
faddp
jbe
jg
cmpb
mov
pop
jmp
popa
mov
mov
lcall
das
inc
test
jae
stos
mov
nop
movsl
inc
cmpl
into
bound
lods
xor
xchg
nop
sub
push
and
sbb
pusha
sahf
loope
es
pop
imul
jno
cmpsl
rolb
and
mov
mov
push
mov
in
mov
cmp
pop
cwtl
inc
mov
roll
push
adc
aam
xchg
jg
jbe
jl
lret
aam
push
mov
mov
jo
xor
xor
pop
sbb
je
cltd
aad
dec
fmull
mov
push
and
push
test
or
sub
mov
xchg
sbb
out
fisubs
stc
mov
sub
lret
pusha
out
adc
sub
outsl
mov
andnps
xchg
push
pop
and
mov
imul
mov
adc
bound
imul
ss
pushf
pop
mov
mov
shrb
stos
mov
lods
xor
int
add
jo
jbe
outsl
jg
fstl
pop
loopne
jle
adc
mov
lock
enter
loop
xor
xchg
stos
pop
sbb
mov
cmp
and
mov
xor
mov
xor
sbb
imul
and
les
out
nop
jo
push
mov
mov
jmp
xchg
or
les
pop
mov
fidivrs
or
lea
pop
and
cmp
sub
stc
arpl
mov
cmp
aam
cmpsl
lock
mov
sub
jecxz
or
sti
cmc
push
pop
sbb
cmpl
add
dec
cmc
mov
loope
push
xlat
pop
aaa
push
pop
hlt
aas
dec
xchg
sarl
pop
or
lods
movsb
pushl
adc
add
add
push
sub
or
stc
mov
sub
insb
test
insb
in
pusha
mov
xlat
lock
cmp
cld
pop
dec
jle
hlt
push
xorl
addr16
cli
jmp
sbb
in
xchg
sbb
dec
push
imull
in
movsl
pop
dec
mov
outsl
repz
dec
inc
mov
les
lret
fs
adc
mov
adc
jb
aad
and
xor
pop
rcrb
es
inc
xor
push
sbb
pop
and
mov
add
mov
enter
mov
lahf
stos
sbb
pop
ljmp
gs
cmp
data16
or
test
jbe
stos
icebp
arpl
xchg
rcrb
jo
aaa
aad
inc
test
nop
jle
push
and
xchg
mov
mov
dec
fcoml
out
sub
mov
jmp
imul
mov
mov
and
in
out
sbb
bound
enter
imul
xchg
pop
imul
test
push
push
scas
in
repz
xor
imul
popa
xchg
mov
pop
jl
sub
jae
mov
repnz
push
push
mov
jnp
adcl
cwtl
add
dec
gs
sub
enter
mov
adc
jg
test
adc
push
roll
mov
inc
push
incb
inc
out
stos
mov
ss
filds
cmpsl
test
push
mov
aad
fchs
aaa
mov
mov
add
cld
cltd
pop
negl
adc
test
push
adc
jb
and
xchg
xchg
add
pop
xor
or
add
aam
and
mov
mov
xor
inc
not
les
push
pop
out
leave
test
mov
outsl
and
ss
sahf
lods
jo
int3
push
mov
inc
fmulp
inc
sub
sbb
icebp
cwtl
mov
call
lock
enter
and
jl
mov
cmpsl
subl
jmp
lods
cmp
rcrb
inc
push
rclb
test
lods
xchg
mov
test
insl
js
inc
push
dec
les
js
jo
ja
sub
mov
mov
inc
nop
sar
roll
xchg
jl
dec
movsl
nop
mov
and
mov
jns
mov
sahf
in
rclb
jl
adc
push
out
xor
nop
push
mov
leave
xor
insb
test
xchg
mov
ret
adc
dec
cmp
or
fisubrl
insl
mov
or
xchg
out
jg
and
inc
mov
xor
stos
dec
and
sbb
lea
jmp
xchg
mov
ret
les
lret
int3
pop
idivb
loop
xor
ret
jge
mov
mov
imul
das
mov
or
out
and
sbb
xor
and
adc
or
popa
jbe
js
sbb
jmp
or
sbb
mov
in
dec
cmp
inc
lds
jge
repz
sub
sbb
mov
in
inc
stos
sub
mov
add
stc
jae
les
sbb
push
rcrb
rcrl
inc
mov
add
test
pop
add
daa
or
sahf
es
mov
sbb
cmp
push
loope
jno
lea
add
lea
sbb
scas
or
push
repz
cmpb
insb
jnp
jae
xchg
clc
les
and
sbb
data16
push
test
mov
and
lods
push
repz
ret
dec
cld
ljmp
in
xlat
add
inc
inc
in
push
xchg
ret
dec
pop
jle
pop
mov
jne
insl
add
ret
js
and
sub
add
sbb
mov
inc
xchg
sbb
sub
push
fisttps
dec
sbb
jae
ljmp
sub
add
loopne
fidivl
test
in
test
test
xchg
iret
push
or
arpl
mov
test
push
jle
movsb
ds
pop
outsb
adc
bound
cmpsl
fisubrs
ret
xchg
cli
scas
nop
je
clc
dec
xchg
in
jl
xchg
xlat
xor
dec
jbe
dec
loopne
xchg
subl
data16
movsb
mov
lret
jae
and
loopne
xchg
rol
inc
or
jne
lea
adc
xchg
lea
mov
stos
mov
sbb
jno
push
mov
scas
das
in
and
lahf
mov
testb
xchg
arpl
cmp
imul
stos
icebp
add
icebp
divl
loop
xor
pop
fnsave
add
or
inc
add
jmp
out
adc
jmp
adc
scas
pop
mov
jmp
addr16
push
dec
sub
jno
out
lea
and
aam
inc
aad
add
popf
jb
mov
sub
add
out
rcll
test
jnp
mov
inc
xchg
sti
dec
mov
lret
popa
fsubl
test
hlt
xor
jo
aad
dec
loopne
mov
test
cmp
jae
push
aaa
out
dec
push
rcrl
test
ja
push
xchg
adc
ja
mov
sbb
notl
inc
fstl
mov
outsl
or
pop
addl
pushf
add
pop
mov
loopne
outsl
jg
lods
inc
and
nop
and
push
xlat
dec
pop
cmp
or
lods
push
int3
pop
mov
out
add
mov
push
rcrb
loop
shlb
push
mov
or
pop
pop
loope
add
adcl
or
sti
daa
push
call
stos
lds
mov
and
scas
inc
int3
stc
ja
sbb
push
lahf
mov
sub
xor
popa
stos
or
cmp
xlat
test
lahf
cmpb
inc
cmp
pop
pop
inc
lock
jnp
mov
dec
and
jae
push
push
xor
add
cmp
cltd
mov
jne
iret
int3
insb
cs
les
test
adc
add
ljmp
sub
std
pop
cmpsb
xchg
shl
mov
in
xchg
test
adc
xchg
xorb
bound
into
mov
xor
xor
fwait
into
inc
jae
adc
ds
mov
xchg
sbb
in
or
fcomip
push
add
gs
push
xor
pop
outsb
dec
push
xchg
popf
push
lcall
negb
mov
in
test
cmpsb
xor
into
out
xchg
add
rcr
or
imul
and
push
sbb
xor
loopne
pop
mov
test
stc
dec
fdivrs
popf
mov
push
push
fmuls
scas
adc
cld
mov
mov
cwtl
cmpsb
mov
es
jno
movsb
sub
aam
push
or
pushf
mov
add
cld
or
mov
adc
clc
sbb
aas
aad
jo
hlt
cmpsl
call
mov
cmc
cmp
dec
ror
mov
jecxz
shll
pop
push
push
sahf
jns
xor
aam
adc
cmp
ror
les
cmp
fwait
pop
incb
test
int
das
lds
and
or
out
sub
mov
ja
sbb
xchg
xlat
mov
jns
xchg
mov
pop
jae
and
outsl
gs
fnstenv
pop
adc
cltd
xchg
mov
xchg
mov
mov
shll
pop
rol
les
fdivrp
mov
cmp
test
dec
aas
jo
sub
mov
adc
lds
push
cltd
in
mov
mov
push
mov
shrb
ss
stos
sub
call
adc
rolb
clc
add
pop
add
mov
pop
inc
xchg
mov
and
push
cpuid
mov
lods
ret
dec
lods
push
cmp
xor
fisttpll
sub
mov
test
or
mov
mov
and
xchg
sub
sub
int
imul
sbb
lret
xor
imul
js
sub
mov
in
pop
or
sub
ret
scas
pop
pop
pop
add
push
cs
cltd
xlat
jae
idivl
cmp
daa
xchg
push
inc
aaa
adc
mov
jae
fnstenv
idiv
testl
jmp
or
cs
ja
pop
imul
mov
or
mov
xchg
int
lods
cmp
adc
mov
jnp
sub
clc
mov
cmc
sarl
mov
loop
jmp
gs
lcall
sbb
ljmp
cmp
dec
xor
mov
loope
sub
aas
pop
jne
and
enter
mov
mov
fildl
cwtl
pop
mov
mov
pushf
aaa
shl
pop
es
cs
xor
shlb
aas
stos
adc
stc
daa
movsl
jg
push
in
rcll
and
mov
cs
sub
sbb
xchg
add
jecxz
jnp
xor
notb
out
jecxz
mov
lea
stos
cmp
sub
mov
fwait
bound
push
mov
outsl
jns
mov
or
pop
sub
mov
and
test
dec
mov
repnz
fstp
aaa
pop
adc
imulb
mov
loop
push
mov
cmp
adc
jg
jbe
aam
sub
loop
cmpl
paddusb
push
dec
fildll
mov
aas
inc
ret
jmp
and
pushf
testl
push
inc
xchg
ds
push
call
mov
fmuls
fstpt
lods
adc
xor
mov
divb
lcall
out
jmp
xor
sbb
cmp
jo
daa
adc
out
jno
out
dec
shrb
hlt
test
sub
xchg
ret
test
push
xor
test
aaa
inc
mov
sahf
mov
push
aas
xor
adc
sbb
shl
out
sub
imul
push
dec
xor
repz
mov
xchg
mov
aam
in
adc
mov
lea
rcrl
add
jne,pn
xlat
sbb
ret
dec
or
and
std
pusha
inc
jle
adc
fwait
xchg
es
sub
jne
xor
or
cmc
cwtl
inc
nop
fdiv
mov
sbb
mov
lods
data16
xor
cli
loopne
adc
fnstsw
jmp
xor
xor
pop
movsb
lret
loop
or
pop
fwait
in
fcom
xchg
mov
sarl
push
in
or
jne
dec
nop
sti
mov
cli
mov
jbe
lods
outsl
sbb
adc
mov
xchg
mov
mov
shr
mov
fisttpl
repnz
xor
dec
jno
stos
inc
jbe
add
pop
xor
test
mov
xchg
fldt
loopne,pn
sub
je
adc
fnstcw
test
and
lret
push
icebp
movsl
testl
xchg
xor
ret
ret
mov
pop
or
call
aam
daa
or
adc
push
and
nop
jmp
test
popa
sub
mov
jp
sub
test
out
sti
fiaddl
sub
xorl
mov
popa
lods
out
adc
or
js
fsubl
cs
mov
in
and
xchg
dec
ret
insb
push
int
ljmp
pop
inc
jecxz
mov
test
pop
inc
mov
rol
dec
fdivrp
and
bound
mov
lods
int
xor
mov
push
js,pt
hlt
invd
imul
cwtl
cmp
into
imul
mov
int3
enter
jne
arpl
cmp
mov
repnz
sub
addl
jno
cmp
push
or
xor
imul
cmpsl
insl
dec
adc
call
xor
push
pop
ss
sbb
push
sbb
out
in
aad
mov
lahf
adc
call
nop
fdivrs
mov
push
lahf
ds
insb
ret
icebp
jp
dec
cmp
int3
xchg
clc
adc
pop
adc
loop
pushl
push
mov
sbb
and
add
rcrl
addr16
iret
insb
push
push
xor
push
nop
pushf
cli
nop
fldcw
dec
push
fildl
out
add
iret
dec
adc
mov
fsubl
push
xor
in
cmp
mov
pop
push
push
imul
xchg
repnz
add
shr
cmp
mov
jge
and
pop
scas
repnz
mov
mov
mov
cmp
xor
inc
xchg
int3
sub
outsb
out
cli
stc
cwtl
xchg
inc
dec
mov
cmpsl
cwtl
and
ds
inc
pop
shlb
stc
xchg
decb
mov
and
sub
jnp
xchg
into
ret
push
push
inc
stos
push
adc
bound
rcr
rcr
xor
adc
mov
sbb
sahf
flds
mov
popl
fdiv
push
adc
popa
cmp
jno
in
or
inc
xchg
jbe
push
je
cwtl
xchg
inc
mov
xchg
gs
mov
sbb
andl
jnp
push
cltd
test
xchg
inc
imul
lods
lods
addb
lea
inc
cmc
shll
in
jns
jne
cmpsb
dec
sbbb
out
xor
in
mov
daa
cs
mov
int
rol
xchg
xchg
xor
daa
dec
inc
xchg
xchg
jne
into
mov
fdivl
lret
mov
fs
insb
fwait
sti
mov
in
iret
fildl
mov
in
xchg
loopne
and
jbe
jnp
pop
dec
cld
pusha
add
fistpl
jne
dec
mov
mov
mov
sub
or
ret
cmp
mov
mov
or
dec
imul
cmp
inc
adc
mov
js
bound
jne
mov
mov
mov
jnp
dec
pop
pop
xchg
add
lock
loope
or
dec
add
ror
ret
imul
scas
mov
add
adc
inc
lret
or
mov
inc
jns
movb
xchg
fcoms
mov
dec
loopne
aam
out
xor
fsubs
mov
jbe
sbb
dec
inc
stc
mov
test
xor
cld
jecxz
add
sbb
mov
cwtl
rcll
mov
out
into
inc
test
inc
loope
fbstp
cmpsb
decl
jae
sbb
sbbb
or
push
push
jnp
lods
adc
mov
pop
sub
adcb
insl
negb
jno
and
pop
imul
fcmovu
xchg
adc
jno
pop
mov
mov
out
orl
and
adc
lods
iret
sub
adc
mov
shlb
cs
stos
in
pop
or
repz
add
ljmp
xchg
je
vunpckhps
mov
cmp
out
push
pop
xchg
or
mov
lcall
das
in
mov
fdivrs
mov
daa
scas
xchg
mov
cmp
data16
inc
pop
dec
subb
pushf
test
mov
pop
dec
inc
sub
mov
pop
push
dec
xchg
out
push
pop
push
jge
aam
pop
fnstenv
repz
mov
xor
das
sub
lock
sub
xchg
push
mov
call
pusha
cmp
push
mov
ret
mov
push
jae
jp
jg
pop
cmp
sbb
sarl
inc
add
pop
pop
mov
xor
mov
cmp
pusha
mov
ret
inc
or
mov
ljmpw
daa
adc
mov
ret
movsl
mov
sbb
or
lock
sbb
sbb
addl
lods
adc
xchg
add
fwait
mov
cld
sub
inc
and
imul
push
pop
jns
ret
icebp
sbb
lods
in
jb
add
mov
mov
add
cmp
pop
sub
add
ja
xor
mov
rolb
and
jecxz
call
ja
inc
fcompl
push
imul
cli
mov
add
xchg
xor
xor
jae
mov
inc
fldcw
stos
mov
popa
insl
outsl
pop
jnp
jbe
into
inc
sub
aas
pop
sbb
fisttpll
or
adc
mov
and
push
mov
out
pop
dec
mov
test
cmpl
jle
mov
xor
mov
mov
adc
xor
adc
loopne
lea
fstl
test
dec
fisubrl
sbb
push
cltd
or
add
xor
mov
int3
sub
xchg
inc
cmp
xchg
stos
call
pop
and
push
icebp
in
bound
mov
leave
cmp
clc
and
sub
daa
stc
xor
int3
inc
ja
ja
test
mov
pop
push
sbb
and
je
xor
inc
sub
mov
dec
or
scas
mov
inc
lret
or
ret
fbld
ret
les
xchg
repnz
std
sub
push
adc
push
add
inc
bnd
out
popa
in
fistpll
test
pop
icebp
lcall
jo
lcall
jae
xor
sbb
mov
roll
pop
dec
loop
repz
pop
or
or
xchg
sub
mov
push
and
inc
test
cmp
imul
pop
inc
dec
jb
lret
jge
scas
adc
fsubrs
lds
mov
and
add
and
mov
cs
dec
sub
pop
into
iret
pop
adc
pop
push
sbb
jge
fcoms
mov
cwtl
mov
insb
int3
add
mov
nop
ret
jb
adc
cwtl
adc
mov
nop
adc
aam
dec
inc
jbe
mov
sub
mov
arpl
outsl
xlat
pop
mov
arpl
sbb
imul
push
inc
inc
in
mov
mov
or
loop
in
push
lahf
test
push
xchg
ficoms
sub
nop
ret
jecxz
dec
pop
fs
mov
xchg
or
cli
xlat
or
fs
int
pop
lret
cld
jge
push
repnz
insb
into
cltd
push
push
add
mov
imul
js
mov
cltd
cmpsl
enter
xchg
jmp
in
pop
cmpsb
pop
addl
pop
mov
pop
pop
add
inc
inc
ja
mov
shr
mov
movsl
sbb
ss
and
xor
loope
incl
cmc
xor
aaa
mov
or
mov
adc
cli
and
hlt
add
in
and
adc
clc
sar
and
xor
loop
mov
sub
cwtl
aad
std
call
sbb
stos
mov
jmp
filds
or
mov
stc
jp
mov
adc
dec
fcomi
sub
mov
jnp
inc
and
xor
mov
ss
mov
pop
mov
dec
divl
jge
push
loope
test
cmp
js
shll
push
movsb
adc
jecxz
in
mov
push
pop
adc
adc
roll
and
xchg
mov
fdivp
and
into
jb
push
pop
mov
ljmp
xchg
sub
in
out
inc
nop
ffree
adcl
mov
inc
je
push
xorl
dec
fcmove
adc
out
xchg
mov
andl
pop
push
mov
or
pop
inc
call
addb
jg
aad
out
je
jg
and
sbb
lods
lahf
es
sub
stos
jp
jns
push
out
out
push
xor
xlat
adc
mov
sti
pop
push
int3
jne
cs
out
jecxz
fwait
jmp
push
call
push
rorl
clc
xchg
and
or
or
or
std
jo
sub
decb
pusha
and
xor
mov
outsb
fmulp
mul
inc
lods
aam
push
xchg
cwtl
xor
push
mov
rorb
or
pop
sub
xor
out
lods
sub
aas
mov
jbe
outsl
cltd
jg
inc
sbbl
lock
add
clc
pop
jb
push
adc
repnz
lahf
int3
pop
sub
aaa
cmp
jl
sub
mov
and
sbb
cwtl
aam
jno
jp
cld
aaa
mov
loop
mov
lea
iret
cmp
pop
mov
jb
and
movsb
add
mov
xor
mov
sbb
ret
mov
testb
arpl
aam
or
inc
push
mov
leave
enter
cmpl
repz
cmc
mov
xchg
adc
lcall
jecxz
add
mov
mov
mov
or
call
orl
cmp
push
arpl
ret
pop
adc
inc
fbld
rorb
repnz
push
push
cltd
es
pushf
add
mov
pop
jae
repz
ljmp
mov
dec
mov
leave
loope
and
or
mov
push
sub
mov
fstl
mov
pop
loopne
sbb
xchg
adc
dec
call
mov
out
sub
lret
mov
jne
pop
unpcklps
movsl
std
mov
pusha
mov
xor
cmpb
rol
adc
xor
dec
sbb
add
pop
inc
mov
xor
shlb
mov
or
jno
inc
push
es
imul
push
jae
cmp
cmp
shll
add
bound
ret
sbb
pop
add
xor
pusha
stos
jnp
pop
hlt
jbe
adc
stos
sub
xor
jecxz
stos
add
mov
mov
and
sub
outsb
push
push
je
repnz
pop
ficompl
rcl
pop
aad
ljmp
fwait
out
sbb
std
mov
mov
adc
xor
outsb
jle
gs
aaa
into
jl
and
rclb
mov
cmp
jg
into
add
inc
dec
or
test
scas
dec
jl
push
das
ret
jecxz
pop
cs
dec
and
aaa
fs
mov
mov
clc
stos
push
mov
lds
movsb
jle
adc
cmp
std
fwait
incl
cld
xor
scas
rcl
xor
inc
int3
ja
loope
push
fmul
lds
xlat
sbb
rcrl
mov
dec
push
out
cmp
ljmp
fcmovnu
jl
and
mov
add
lea
ja
aas
rorb
leave
sbbb
addr16
adc
std
loop
ljmp
jl
insb
inc
push
lods
arpl
sub
xchg
mov
aas
pusha
sahf
xchg
vpshufhw
daa
cld
push
sbb
adc
shlb
notb
jbe
inc
pop
adcb
inc
aam
cmp
add
test
jge
cmp
imul
test
jg
inc
sbb
movb
stos
jecxz
lret
je
fildl
adc
ret
push
mov
sbb
inc
fstpl
mull
ret
mov
out
pop
xor
hlt
and
iret
cmp
pop
imul
iret
xor
xchg
es
cs
stc
test
dec
mov
repz
outsl
bound
xor
les
faddp
mov
outsb
shlb
stos
movsb
shrb
sbb
dec
or
inc
push
fdivs
xchg
cs
loope
mov
jnp
dec
lea
and
repnz
in
push
xor
jb
xor
jb
mov
insl
inc
fdivrs
pop
bnd
insl
cwtl
pmaxsw
aaa
divb
es
iret
and
scas
in
cmp
jle
inc
pop
ljmp
adc
pop
data16
push
jecxz
std
dec
push
lock
adc
sbb
push
cmpsb
mov
enter
mov
jl
mov
sub
iret
movsl
stc
imul
jge
cmp
ss
cwtl
in
mov
aam
mov
shlb
mov
pop
or
mov
jmp
jl
fidivl
cmp
mov
mov
pop
ja
sbb
mov
sbb
repz
rcll
xchg
in
adc
mov
jmp
gs
in
fisubs
iret
mov
rol
fwait
fs
inc
bound
jno
ja
ffree
xor
mov
imul
mov
mov
jo
xchg
insb
daa
inc
pop
xor
sbb
or
gs
xor
sbb
int3
push
cltd
sbb
sub
cwtl
xchg
dec
cmc
or
aas
in
inc
push
faddp
mov
rorb
sarb
pop
daa
sub
xchg
out
leave
dec
dec
xchg
in
mov
cmp
adc
mov
jecxz
repz
scas
and
sub
in
adc
dec
in
test
fxch
inc
out
mov
push
rcrb
dec
clc
xor
cmp
imul
xchg
popa
push
lods
cmp
inc
fidivs
nop
fisubrs
jno
mov
mov
out
scas
adc
lods
movsl
mov
sub
inc
lods
decl
mov
lcall
sbb
stos
bnd
enter
mov
sti
mov
cwtl
lahf
xchg
inc
or
add
jae
test
xchg
mov
repnz
mov
jns
cmp
pop
mov
cmp
movsb
push
int3
cli
push
push
dec
ljmp
shl
aas
icebp
mov
push
inc
mov
clts
int
push
js
or
push
jg
or
fs
jl
fcmovnbe
js
hlt
mov
push
inc
in
out
cwtl
cmc
jge
or
push
int3
cwtl
std
sub
test
push
inc
xchg
or
and
and
add
out
les
jmp
mov
dec
inc
movsb
mov
aad
mov
fsubr
push
ret
inc
or
jge
push
mov
aam
rolb
pop
pop
mov
aas
jle
xor
dec
jge
movsb
mov
add
jle
in
out
cmp
ret
sub
push
rcl
mov
mov
add
jo
mov
sbb
addr16
pop
leave
cmc
xchg
push
cmp
fst
mov
jecxz
jp
dec
push
cmp
stos
cmp
fidivrs
mov
cmpsl
cs
push
pusha
clc
mov
sbb
inc
jle
lahf
dec
es
jo
sti
add
pop
addr16
leave
outsb
push
fcom
out
and
in
cmc
cs
push
or
mov
test
arpl
inc
aam
jbe
and
push
ret
pop
aam
outsb
inc
xor
sbb
das
cmp
xchg
pop
imul
call
fstl
stos
or
push
aad
loopne
arpl
push
mov
pop
ja
repnz
pushf
dec
jmp
ret
pop
fistpl
jns
in
mov
lds
cmp
cmpsb
fs
pop
sbb
lahf
mov
jb
sbb
decl
popa
out
adc
add
or
xor
xchg
clc
pop
dec
fadd
shll
lahf
addr16
xlat
jb
mov
add
jbe
inc
jno
std
sbb
lock
mov
mov
jno
push
jbe
in
arpl
ret
push
sbb
ja
add
inc
lods
mov
mov
in
xor
fidivs
push
xlat
call
pop
sub
filds
jns
pop
xchg
mov
adc
mov
ss
out
xchg
jo
outsl
adc
shrb
inc
leave
jnp
mov
and
outsb
fmull
jge
push
rclb
inc
sbb
mov
inc
push
push
mov
or
mov
ss
jle
aad
lods
repnz
inc
ret
jns
mov
lods
xor
add
int3
dec
and
sbb
add
scas
fs
imulb
clc
lahf
repnz
imul
outsl
xchg
push
shlb
arpl
cltd
leave
popa
inc
mov
popa
fwait
inc
jb
cs
cltd
cmp
mov
fs
push
dec
adc
roll
pop
rol
xchg
test
rcrb
adc
pop
stos
imul
mov
in
inc
lret
movsb
xorl
shrl
adc
push
int
lock
push
and
imul
jbe
cltd
xor
in
pop
shl
push
or
jno
das
std
mov
xchg
mov
mov
addl
insl
push
pop
test
inc
push
xor
loop
push
sbb
add
fucomip
jnp
in
sbb
xchg
pop
and
cmp
adc
push
outsl
aas
inc
pop
lahf
mov
mov
mov
stc
inc
test
in
inc
or
stc
daa
xchg
fldenv
xor
inc
dec
mov
adc
loopne
popa
adc
clc
pushf
adc
inc
je
pop
push
cmp
xchg
jo
xor
push
dec
into
jo
mov
xchg
imulb
div
aaa
sti
mov
dec
push
dec
popf
mov
out
arpl
pop
lahf
icebp
ds
add
idivb
stos
inc
mov
xchg
inc
xor
in
pop
pushf
pop
into
cmpsl
ss
insl
add
mov
pop
ja
enter
cli
jno
sbb
push
inc
jns
cwtl
rclb
dec
lods
outsb
add
popa
dec
jbe
and
imul
stc
xchg
or
js
jne
cltd
or
mov
mov
cmp
jne
sub
popa
scas
jle
or
in
push
iret
movsl
jge
pop
xchg
sub
ja
sbb
push
cmp
daa
testb
cli
push
adc
cli
sbb
call
and
lds
push
mov
cmpsl
bound
sub
ret
adc
scas
addb
mov
out
xchg
mov
inc
mov
rcrb
fcomps
lahf
iret
daa
sbbb
push
test
cmp
inc
xor
dec
loopne
add
cmp
sahf
sbb
mulb
adc
cld
xchg
pop
fidivrl
addl
data16
lret
sbb
mov
mov
test
rcrb
jbe
ret
xor
imul
mov
xor
rclb
icebp
je
push
inc
or
mov
ret
cli
add
in
stc
rcrl
xchg
jno
iret
fmul
inc
sub
fwait
pop
addr16
outsb
jl
push
insl
push
mov
mov
out
in
mov
and
roll
adcb
jo
or
aad
leave
inc
fistl
gs
stos
fs
cmp
adc
xor
in
jno
pushf
pop
push
daa
mov
jae
jne
mov
pusha
adc
sbb
pusha
xchg
gs
repz
inc
push
xor
xchg
pop
or
pop
and
mov
jle
in
lret
sbb
ss
std
cli
cmp
dec
mov
sub
nop
stc
inc
aam
adc
int
ds
xchg
out
inc
andb
inc
or
adc
js
inc
jl
push
test
xchg
in
insl
jmp
xor
pop
sub
fldcw
outsb
pusha
or
cmp
pop
dec
mov
popa
xor
movsb
dec
sub
cmpsb
push
mov
pop
jo
xor
movl
pop
push
repz
clc
mov
test
clc
in
lahf
mov
push
or
jo
movsl
rorl
mov
arpl
sub
sub
cwtl
mov
mov
lret
in
in
shll
fisttpll
add
mov
fsubl
std
pop
mov
or
pop
pusha
arpl
fmull
inc
mov
aas
push
mov
dec
fsubs
into
incl
xchg
add
aam
dec
mov
fcmovnbe
test
fisttps
mov
push
fxtract
mov
addl
add
ja
cmpsb
ja
cmp
mov
sti
sbb
or
pushf
inc
mov
adc
jle
incl
inc
dec
jp
or
cmp
sbb
or
jo
xor
push
std
jae
stos
mov
add
adc
or
jle
insb
add
cs
testb
mov
inc
pop
push
sub
cld
push
cmp
sbb
cli
cmc
cmp
jne
lock
dec
loopne
mov
sub
into
push
sahf
jns
les
xor
outsb
ss
and
movsb
push
xlat
and
daa
push
adc
xor
pop
and
pop
gs
xchg
or
mov
pop
pop
adc
enter
or
pop
subl
js
push
cld
dec
ja
inc
push
loopne
movsb
sub
inc
mulb
popf
leave
xlat
jno
dec
test
adc
cld
cmpsl
mov
cmp
pop
pop
xchg
or
push
adc
mov
push
sbb
push
movsl
lahf
hlt
mov
mov
sbb
orl
pusha
jecxz
mov
fiadds
mov
dec
popa
inc
xor
scas
or
adc
lea
imul
faddl
dec
sub
add
or
ds
scas
mov
pop
xchg
mov
or
mov
sub
cmp
call
cmpl
cmpsb
mov
mov
cmp
and
hlt
out
bound
outsb
cmp
push
jmp
add
sarb
cmpsl
cwtl
aas
out
sub
cltd
sbb
mov
jle
sbb
add
les
jo
bound
xor
push
cmp
ja
adc
mov
mov
xor
cmpsb
fnstcw
aaa
mov
dec
sbb
mov
mov
push
ja
sub
loop
mov
and
push
mov
pop
jge
cmp
leave
pop
stos
daa
loope
xor
rsm
imul
mov
jno
push
push
in
jle
jmp
cmp
into
adc
add
and
fisubrs
or
add
jp
or
lcall
not
jle
lods
cltd
jno
inc
lods
pop
xchg
lods
cmp
adc
sbb
dec
dec
je
xchg
xor
pusha
ret
pop
fs
popa
loop
mov
scas
pop
mov
shlb
data16
shl
outsl
jp
add
xchg
out
mov
pushf
and
repz
gs
repz
sahf
test
jge
jle
scas
dec
inc
add
sbb
outsb
pop
cmpsl
fldenv
lcall
push
ja
lods
dec
lds
fnstcw
das
ja
pop
dec
adc
in
lods
push
test
adc
jg
and
sbb
pop
jle
xchg
mov
sub
enter
insl
cwtl
xchg
imul
out
xchg
push
sub
rcrb
lret
mov
popa
daa
push
inc
jg
daa
adc
mov
push
cwtl
negl
sahf
dec
stc
xchg
push
jo
arpl
into
push
outsl
push
mov
daa
jno
push
pop
movsl
aaa
in
push
inc
add
push
mov
stos
cs
shlb
pop
repz
sbb
or
lahf
jae
and
aad
mov
in
add
jno
daa
mov
repnz
outsl
movsb
pop
push
stos
and
cmp
and
fwait
stos
repnz
adc
lcall
or
mov
jle
in
jno
mov
and
lea
dec
inc
pop
jbe
or
imul
mov
int3
pop
stos
add
dec
nop
add
test
je
loopne
sahf
mov
cld
xchg
icebp
into
cli
stos
iret
dec
mov
mov
mov
dec
jae
aas
lret
lret
repz
xchg
mulb
imul
jmp
mov
lret
push
shll
and
js
fstpl
ret
or
call
fnstsw
decb
je
lds
popf
mov
jo
push
iret
hlt
sub
push
dec
mov
jmp
fstpt
dec
xor
icebp
cmp
pop
es
pop
ret
mov
mov
loopne
or
push
xchg
les
lcall
fiadds
cmp
ret
jne
popf
inc
add
scas
mov
in
pusha
or
mov
test
jg
movsb
adc
pop
inc
xor
scas
out
push
add
leave
sbb
jge
mov
data16
adcb
cmpsl
adc
xor
push
mov
mov
jns
adc
mov
dec
xchg
dec
adc
push
add
arpl
insl
jae
push
lods
pop
aad
popf
enter
daa
or
movsb
ljmp
aad
scas
or
ret
mov
into
push
sbb
cmp
pop
aam
aam
ret
mov
adc
pop
lds
stc
cmp
push
cmp
lds
push
cltd
ds
inc
std
push
dec
lods
addl
inc
xlat
push
mov
roll
dec
scas
or
jne
adc
aad
dec
addr16
xor
add
xor
js
add
mov
lcall
cld
les
adc
or
xchg
xchg
test
or
and
dec
movsb
in
jmp
mov
dec
inc
dec
fmul
sbb
int
pusha
arpl
mov
pop
mov
stc
xchg
incb
and
das
or
ljmp
aaa
xor
dec
shlb
aas
push
xor
jle
enter
add
pop
ret
or
pop
dec
xchg
inc
inc
addr16
fistpl
push
imul
mov
mov
inc
into
push
sahf
pop
movsb
fcmovnu
mull
jo
ficoms
in
in
insb
ret
mov
mov
xlat
jno
pop
xchg
xorl
and
sub
pop
or
or
xor
in
rolb
fstl
inc
test
out
inc
or
and
xchg
lds
xchg
jne
outsb
aas
fisubrs
bt
iret
testl
xchg
sub
push
fidivrl
pop
mov
pop
mov
add
inc
jae
and
mov
xchg
daa
inc
rcl
adc
inc
jmp
jbe
fistpl
adc
cli
add
jle
sbb
jo
std
ret
adc
xor
pop
pusha
sbb
jbe
out
je
push
lret
repnz
lock
and
push
adc
ret
dec
lods
cmp
dec
mov
testl
mov
bound
testl
fiaddl
pop
mov
out
cmp
in
es
gs
push
sahf
sub
cltd
test
fldenv
push
mov
jns
lock
cmp
cld
inc
pushw
push
or
inc
fisubrs
pop
add
fdivrs
pop
cmp
lret
jg
adc
push
add
lahf
js
cmp
stos
push
inc
leave
add
mov
cltd
out
clc
xor
addb
aas
rcrb
jbe
push
push
cld
test
push
xor
sarl
lds
cmp
pop
push
sbb
mov
mov
cmp
jl
je
fs
repz
call
mov
adc
int
mov
int
or
push
adc
je
xor
mov
mov
fstpl
stc
stos
adc
cmp
dec
xor
int
push
stos
jp
sub
push
pop
fldl
lcall
add
push
fstps
bound
jae
pop
sbb
cmp
jbe
stos
jno,pn
aas
test
push
cmpsl
stos
mov
mov
inc
test
repz
shrl
sbb
jae
xchg
or
cmp
andl
rcll
test
cmp
out
lcall
pop
mov
xchg
xor
lods
mov
stc
mov
xchg
cmpsl
rcrb
movsb
test
pop
cmc
xchg
shl
enter
mov
adc
or
insl
lods
out
cmp
or
xorl
sub
add
sbb
mov
pop
push
push
loopne
lods
adc
dec
push
inc
pop
in
and
mov
mov
loop
fwait
cmp
jl
xchg
stos
and
dec
leave
jbe
xor
jo
test
dec
add
xchg
insl
rcll
push
pop
or
out
js
mov
adc
mov
nop
pop
pushf
int3
insb
in
lds
jle
sbb
into
mov
stos
aaa
sbb
jnp
add
mov
xor
pop
or
ss
push
or
shlb
repz
popf
jno
pop
imul
lcall
push
adc
sub
fistl
in
or
dec
test
sahf
mov
mov
dec
pop
cmp
mov
dec
insl
std
andl
add
aad
std
adc
mov
pop
or
or
mov
adc
daa
add
out
push
int3
inc
rol
xchg
sub
pop
cmp
clc
std
popf
mov
je
out
insl
sbb
mov
ss
inc
pop
out
mov
popa
mov
and
loope
data16
negb
insb
xor
mov
in
sub
stos
dec
cmp
pushf
andb
and
dec
jl
inc
or
daa
test
adc
mull
dec
lret
in
repz
push
scas
jle
pop
push
jne
jno
jle
push
pop
add
mov
data16
jge
gs
dec
mov
popf
inc
cwtl
sbb
jp
daa
rol
rclb
mov
inc
fnstcw
add
sub
in
adc
mov
stc
mov
adc
xchg
lods
insl
dec
mov
pop
into
add
imul
and
inc
sbb
notb
popl
push
sub
jb
sti
xor
subb
dec
lahf
js
xor
add
jns
ja
hlt
popa
cltd
jnp
mov
or
rcll
jns
push
mov
mov
dec
inc
dec
into
inc
inc
or
mov
xchg
out
or
mov
jmp
and
cli
inc
mov
les
out
imul
dec
adc
xor
mov
ja
mov
jp
mov
adc
cmp
push
push
int
repz
lods
iret
mov
shl
lahf
jg
jg
push
pusha
std
popa
ljmp
sbb
js
nop
xchg
adcb
in
jmp
and
pop
inc
push
aaa
cmp
lods
lahf
imul
push
mov
call
fdivrl
dec
add
leave
dec
mov
hlt
scas
adc
leave
icebp
andl
adc
andl
cmp
cli
cmp
push
in
in
pop
xorb
mov
jne
cmc
xor
inc
je
addr16
pop
mov
jbe
cmp
xchg
push
rcll
sub
shlb
dec
inc
rcrl
mov
gs
stc
insl
xchg
scas
xchg
cld
xchg
pusha
in
mov
es
dec
mull
xchg
jne
cs
sbbl
ljmp
xchg
jno
cmpb
mov
dec
loopne
in
lds
mov
sti
adc
fwait
lods
mov
mov
xchg
mov
fldt
xor
mov
pop
adc
shll
or
sbb
sbb
mov
pusha
mov
mov
mov
std
movsl
inc
dec
push
movsb
adcl
loopne
lcall
add
movsl
sub
iret
test
popf
arpl
repnz
out
jne
and
ret
movsb
cmpsb
test
mov
ret
xor
adc
mov
gs
sub
int3
push
mov
decb
rcrl
jge
repnz
mov
ljmp
sbb
daa
xor
mov
mov
insb
xor
idivl
pop
mov
and
sub
inc
repz
sbb
dec
xor
pop
push
adc
xlat
xchg
int3
xchg
hlt
and
adc
xchg
xchg
xchg
or
lea
dec
inc
scas
and
pop
dec
subl
mov
add
inc
scas
cmovne
adc
jne
out
ja
fidivs
mov
jg
xor
jns
out
gs
add
mov
dec
jmp
leave
xor
outsb
loop
mov
mov
and
or
add
cmp
mov
inc
cmpsb
pop
jecxz
mov
jmp
cld
mov
ljmp
or
mov
cmp
ljmp
push
pop
and
pop
cmpsl
out
scas
mov
sub
xor
movsl
les
popf
cli
outsb
jns
aam
sti
mov
fidivrl
cmp
push
mov
popa
mov
dec
and
aas
or
mov
cwtl
adc
in
jle
lret
mov
pop
data16
pushf
daa
dec
outsb
adc
int3
mov
inc
repz
ss
dec
dec
hlt
fidivl
sti
dec
cmp
pop
imul
cmpsl
cmp
mov
lock
xor
xlat
fisubl
stc
out
mov
and
fisttpll
and
fs
mov
push
sub
popf
push
enter
scas
leave
scas
js
or
or
cmp
daa
repnz
adc
push
sub
sub
daa
jp
aaa
add
notb
cmp
loope
sbb
cs
aad
aaa
shrb
or
push
xchg
jns
sub
add
xchg
push
cmpsl
out
ret
addr16
dec
mov
test
mov
pop
adc
outsb
mov
xchg
lock
and
ficoml
loope
xchg
fcomps
push
add
or
and
mov
push
jle
or
imul
sub
xchg
pusha
movl
daa
dec
cmp
and
cs
fwait
mov
cmpsl
adc
divb
loope
stos
fwait
out
adc
lahf
test
adc
jp
cmp
jl
ret
rcrl
cmp
push
jnp
ret
push
lock
incb
xchg
test
push
sub
mov
fwait
sub
ss
lds
pop
fdivl
mov
xorl
xchg
das
xchg
mov
into
jle
icebp
and
dec
xchg
mov
and
and
fistl
insb
rorb
daa
xchg
insl
shrl
mov
push
adc
cli
outsl
stos
xor
or
pop
rclb
push
inc
cwtl
shlb
xchg
jbe
xor
scas
push
daa
dec
sbb
xchg
inc
decb
pop
push
cltd
andl
or
icebp
or
sub
cmp
sbb
cmp
cltd
test
sub
rclb
lods
in
in
jo
cwtl
mov
lret
xchg
popa
sti
imul
mov
and
in
mov
push
repnz
outsl
xor
imul
add
test
xor
or
das
push
enter
aaa
mov
cli
and
movsb
xchg
and
pusha
mov
xchg
testb
push
stos
into
cwtl
dec
arpl
lds
hlt
sbb
in
lret
dec
push
ficompl
inc
sub
push
fs
enter
bound
imul
dec
pop
and
pop
add
stc
insb
or
sub
sarb
or
in
dec
sbb
pop
inc
in
imul
fdivr
lahf
mov
pushf
fidivrl
jg
pop
pop
sbb
jnp
push
xchg
add
daa
pop
or
call
out
jg
jns
xchg
hlt
outsl
fldenv
sub
jae
sbb
cmp
xlat
clc
loope
out
xchg
mov
mov
jno
cmp
mov
imul
jmp
and
mov
xchg
xor
sbb
repz
test
frndint
xchg
and
arpl
nop
nop
pop
add
fwait
out
mov
or
jl
sub
outsb
fldt
inc
sarl
or
lods
xchg
ljmp
inc
test
xor
je
cmc
aaa
push
jecxz
call
jo
js
jp
insb
mov
adc
test
pop
push
and
pop
test
sbb
out
jle
mov
lds
aas
mov
fistl
dec
test
rorb
lret
sarl
xor
ret
inc
in
loopne
ljmp
push
movsl
xchg
jne
mov
push
fistps
data16
stos
sub
outsb
roll
mov
mov
xchg
insl
fmull
mov
mov
inc
push
lea
lahf
fdivs
movsb
test
mov
aam
sbb
jno
bound
test
repnz
pop
xchg
in
bound
into
lcall
push
inc
mov
inc
data16
hlt
jbe
out
daa
je
mov
dec
int
pop
in
sarl
ret
mov
add
mov
dec
cs
in
xchg
add
rolb
inc
jp
push
push
unpcklps
movsl
bound
gs
int
lods
mov
push
aad
aad
loopne
dec
sub
cmp
push
mov
jg
pop
dec
data16
stos
jle
bound
lcall
nop
shlb
jmp
push
inc
outsb
enter
pushf
out
cmp
cmp
stc
loopne
cmp
lcall
mov
loopne
dec
jns
sarb
out
or
or
divl
or
das
mov
aad
sub
or
ret
push
adc
xor
mov
leave
pop
sub
push
out
or
sti
pop
push
fs
add
mov
pop
xchg
popa
fsubl
mov
cltd
cli
xor
ljmp
ja
and
cmc
mov
xlat
inc
push
xlat
and
inc
rcll
fidivrs
push
mov
stos
mov
mov
inc
lods
jae
cwtl
sub
mov
movsl
mov
adc
hlt
sub
mov
add
loopne
xor
cmpsl
sub
test
leave
mov
mov
jb
stc
lea
mov
jbe
jl
and
or
pop
push
pop
das
imul
test
mov
scas
lret
les
out
push
cmc
mov
pop
or
jne
or
idivb
movsb
jns
add
sub
dec
xchg
fs
jne
sub
out
fistpll
and
dec
icebp
fstl
sahf
sub
jg
mov
mov
cmp
cmc
push
enter
call
out
cmp
mull
mov
lret
call
inc
sub
xchg
adc
mulb
movsl
xor
dec
call
inc
ret
jge
fmul
or
jle
ja
xchg
ret
or
aam
test
clc
cmpsb
push
sbb
xchg
xchg
ret
ja
jne
jns
adc
jp
negb
xchg
jb
jae
mov
movl
jno
fmuls
shl
pop
sbb
adc
sbb
xor
mov
inc
mov
mov
rolb
call
das
out
and
jb
negl
scas
test
ljmp
xor
scas
cmp
cltd
pop
fidivrl
xchg
or
mov
stos
jmp
rclb
jbe
ljmp
movsl
aam
cs
test
fbld
rcrl
cmpsl
add
jno
push
fisubs
shl
pushl
sbb
push
cmpl
dec
ds
pop
mov
adc
sbb
shl
xchg
pop
pop
and
sub
mov
dec
pop
sub
mov
iret
fidivs
dec
pop
insl
and
insl
vmovntps
mov
mov
mov
jnp
pop
mov
mov
dec
ficoms
sub
sbbl
lods
mov
xlat
rcr
neg
shl
shl
adcl
pop
fistps
mov
js
jl
fisubs
outsl
mulb
mov
sub
adc
push
lret
call
mov
sbb
bound
push
jle
push
jbe
sbb
push
hlt
xchg
fidivs
mov
xchg
lret
push
adc
mov
mov
xor
mov
imul
sahf
pop
in
mov
sbb
cmp
int
xchg
sub
sbb
push
dec
jnp
xlat
lods
imul
call
adc
idivb
add
fiaddl
inc
push
out
cltd
adcb
test
mov
fnstsw
pop
pop
stos
pop
push
decb
push
aaa
inc
insl
stc
xlat
and
stos
dec
inc
test
push
fsubr
mov
adc
dec
call
xor
and
inc
flds
sub
in
jo
mov
push
sbb
mov
mov
loopne
icebp
xchg
sub
mov
mov
iret
rcll
not
iret
cltd
mov
hlt
xor
ror
xchg
jl
dec
xchg
outsl
inc
push
push
imul
pop
jg
sub
rcr
push
sahf
pop
push
lods
dec
sbb
lds
jge
xchg
adc
adc
aas
pop
jmp
test
add
cmp
loope
and
dec
cmp
push
imul
bound
mov
inc
inc
mov
sub
xchg
sub
shl
mov
lock
push
aaa
lret
inc
call
ret
loopne
bnd
dec
or
in
ffree
ss
ds
sbb
and
dec
pop
adc
es
cmp
mov
sub
jb
arpl
into
pushf
stc
pop
sbb
pop
mov
push
push
push
mov
mov
lods
dec
test
lods
jle
adc
add
in
fnstenv
push
shlw
mov
mov
xchg
scas
shll
repz
mov
jle
les
jge
sbb
or
cmp
or
inc
mov
add
and
ja
int3
jge
hlt
mov
add
xor
bnd
js
into
imul
enter
jnp
pusha
dec
xor
cmp
or
rcl
mov
daa
xorb
insl
mov
lock
out
lods
aaa
fs
scas
sti
lahf
xchg
lret
call
ds
jns
test
lcall
xor
fldl
sahf
movsb
imul
push
pop
add
sub
fnsave
daa
imul
dec
dec
popf
mov
out
jecxz
and
jecxz
xor
jmp
add
cli
roll
and
pop
dec
pop
in
or
outsb
jbe
dec
arpl
xor
add
rcrl
arpl
aaa
sbb
xor
jo
dec
xchg
popf
push
stos
mov
sbb
mov
fcomi
lock
sbbb
add
fstpl
mov
inc
mov
dec
movsb
jmp
inc
icebp
test
out
or
jb
mov
hlt
adc
mov
cmp
scas
adcl
loopne
sbb
sbb
xchg
dec
jmp
push
sub
add
icebp
cmp
hlt
sub
cmp
and
mov
cmp
sbb
scas
sbb
ds
jno
jne
orl
mov
faddl
scas
shll
pop
aaa
cmc
inc
cmp
pop
xlat
push
jb
cmp
add
xor
pop
push
aas
enter
shlb
cmp
loopne
sub
test
das
push
dec
dec
xchg
and
imul
rcll
xor
or
sub
loope
jle
fwait
xor
leave
js
push
add
adc
data16
rolb
pop
loope
test
or
mov
hlt
cmp
mov
sbb
mov
mov
xor
push
fdiv
xlat
out
adc
xchg
aas
mov
jl
dec
dec
imul
popa
js
sbb
or
fimull
dec
sub
or
scas
cmp
mov
and
iret
je
int
cmpsb
jmp
inc
pop
sbb
dec
sub
lret
push
enter
mov
cmc
dec
fwait
in
push
fildl
inc
and
movsl
xchg
adc
dec
call
xchg
imul
ljmp
cltd
loope
xchg
popa
fisubrl
stos
push
mov
lea
in
xor
pop
sbb
das
les
stos
mov
jge
and
stos
sub
inc
sub
imul
mov
jae
mov
cmc
shrb
mov
xlat
jecxz
and
lock
push
fdivl
arpl
cmp
mov
repnz
dec
xor
jmp
gs
cmpsb
and
aaa
mov
jne
loop
stc
pop
scas
inc
fbstp
xchg
lock
imul
fnstenv
insl
mov
shl
jmp
add
loopne
repnz
in
cmp
push
cmp
cmp
pop
rcll
dec
dec
sub
into
pop
dec
sub
sahf
mov
or
mov
data16
lea
mov
scas
lock
cli
xchg
sbb
loop
ds
call
adc
sub
ss
rclb
push
imul
sbb
sub
jmp
enter
mov
mov
es
inc
sahf
dec
out
or
cs
in
cmp
imul
aaa
lret
pop
ja
lcall
mov
or
xchg
popa
mov
mov
or
xchg
push
arpl
in
fnstsw
jmp
sbb
cmc
cld
fldcw
xchg
push
cltd
push
add
dec
xchg
aam
sub
push
jle
aam
adc
imul
lock
inc
adc
inc
popf
lret
jnp
insb
ja
pop
imul
incb
stos
mov
pushf
and
dec
loop
inc
or
or
pusha
sub
inc
shlb
sub
aam
test
outsb
xor
testb
pop
mov
inc
sbb
adc
ljmp
data16
ss
clc
pushf
cmp
fucomp
mov
les
sub
jne
and
push
push
push
mov
pop
mov
jns
in
test
pop
jecxz
int
test
ljmp
pop
stc
test
mov
adc
xchg
jb
jmp
pushl
jp
and
push
xor
subl
int3
outsl
cmp
add
inc
jae
daa
adc
fcomps
or
cmp
lret
mov
lahf
fdivrs
in
fwait
dec
mov
add
push
sbb
push
icebp
outsb
cmp
idivb
call
push
lcall
incb
xlat
aam
addr16
push
into
shlb
leave
jbe
in
lcall
xor
inc
cmc
loop
inc
inc
dec
aaa
popa
xchg
mov
gs
adc
iret
push
add
xor
sarl
rorb
stos
xor
adcl
bound
ds
daa
bound
test
jmp
mov
pop
psrlq
add
pop
gs
jnp
xor
lahf
test
sub
adc
aam
inc
fcompl
jp
int
movsb
jle
xchg
xchg
push
mov
test
pushf
aas
mov
sbb
jl
jo
pavgb
lahf
lock
popa
lahf
xchg
cld
pushf
shlb
mov
aaa
xchg
enter
sbb
inc
lea
sub
xor
into
pop
or
lea
adc
mov
out
ret
test
jbe
fs
jb
mov
aam
outsl
data16
std
and
push
aas
jae
mov
push
out
pop
pop
mov
clc
lock
pop
ret
enter
cltd
lret
mov
inc
out
outsb
pop
sbb
out
mov
ret
push
nop
mov
lahf
in
dec
pop
js
subl
cmp
lret
push
in
clc
jmp
jl
xchg
ret
xchg
jae
in
or
sbb
cmpsl
shlb
lods
inc
push
addr16
add
stos
jge
lahf
ja
cmp
sbb
lock
movsb
test
pop
cmc
push
lcall
adc
arpl
fdivrp
mov
in
repz
bound
decl
into
xchg
inc
jb
fistps
int
push
sahf
sub
push
adc
nop
movsb
ficomps
lret
xchg
lret
xchg
push
dec
dec
aam
and
or
mov
fstps
adc
mov
ds
lock
out
js
sbb
sub
fisubrl
fsts
cmpsl
shlb
add
gs
xchg
mov
lcall
out
add
jle
xchg
sbb
add
clc
lret
pop
aad
aad
addr16
rcrl
lods
cmp
jnp
push
adc
inc
repnz
jns
orb
in
syscall
adc
sub
shlb
imul
xchg
lds
cmovs
xchg
shlb
jne
pop
lcall
loop
jbe
adc
fcoml
mov
cmpsb
mov
sahf
rcrb
and
pop
cli
cs
movsb
xor
or
jo
mov
aam
mov
popf
js
push
fnstsw
inc
pop
pop
bnd
pushl
pop
xchg
mov
test
push
mov
jne
push
dec
inc
mov
es
add
mov
aad
hlt
jp
dec
mov
push
pusha
ret
fisubl
xchg
mov
jge
rclb
mov
and
dec
rcl
fnstsw
or
sarl
sbb
imul
jns
lods
mov
jl
jno
insl
jge
addr16
scas
shrl
adc
pop
inc
adc
jo
fldenv
jo
cmp
or
movsl
shrl
push
push
icebp
testl
out
mov
dec
pop
push
jns
fidivs
xchg
outsl
dec
or
or
and
scas
mov
or
enter
push
lcall
int3
mov
movsl
xor
clc
subl
inc
adc
rcrb
lret
stos
ds
fistl
dec
sub
cmp
jecxz
sub
pop
jge
push
ja
mov
loope
arpl
mov
mov
call
clc
scas
push
jge
mov
pop
cmp
or
jmp
int3
orl
xchg
inc
pop
dec
jnp
outsl
mov
dec
ret
test
inc
and
aas
sbb
fldcw
pop
mov
lds
jge
iret
stc
rcr
xor
pop
push
in
push
jge
push
sbb
int
popa
in
pop
je
insb
pop
cs
adc
popa
lahf
adc
outsb
jmp
and
popa
sahf
sbb
mov
dec
push
test
je
mov
jge
testb
adc
jb
ljmp
add
dec
push
mov
pop
std
cmp
nop
jmp
ret
sbb
or
mov
mov
adc
aas
lcall
cmp
ja
push
decl
lods
mov
pusha
fidivrl
push
jmp
divl
pop
or
cmpsl
pusha
jl
daa
clc
aaa
incl
int
movsb
scas
shrb
scas
test
shl
jb
dec
adc
hlt
mov
pop
lods
cmpsl
mov
push
jle
repz
insl
lock
mov
in
int3
iret
lcall
adc
adc
js
test
or
add
fstp
cmp
cmpsb
stos
pop
lret
mov
pop
xor
int
sub
shrl
sub
jg
rorb
cld
testl
scas
int
inc
dec
aad
out
enter
xor
adc
jle
cs
pop
sbb
test
inc
add
sbb
mov
in
test
out
pop
xor
dec
movl
add
push
lods
subl
mov
adc
pusha
cli
add
push
mov
loop
mov
mov
and
insl
dec
inc
pop
pop
mov
mov
mov
and
stos
fbstp
pop
add
push
jo
add
fcomip
adc
in
mov
outsl
mov
sbb
ss
outsl
mov
loopne
orl
mov
or
xchg
aam
xchg
pusha
pop
hlt
dec
xchg
mov
mov
bnd
lock
or
sbb
shlb
loopne
arpl
popw
pop
cmp
dec
cmp
pop
lock
or
sub
daa
lds
push
lret
mov
shll
mov
xchg
jne
xchg
lods
mov
daa
mov
xor
jge
or
lret
pusha
out
inc
mov
push
je
mov
push
inc
jnp
and
or
cld
pop
movsb
loopne
test
lods
adc
push
je
push
add
cs
loopne
push
mov
pop
jmp
mov
fildll
dec
adc
aaa
leave
jo
jle
mov
jp
out
or
mov
ljmp
or
rep
jne
int
popa
inc
ja
fidivrl
pop
jecxz
adc
jb
fadds
or
pop
jb
cmpsl
sub
pushf
mov
inc
and
push
in
dec
lcall
dec
data16
orl
std
out
push
lods
fldl
and
pop
jmp
xchg
dec
push
push
test
push
sbb
andb
bound
inc
push
push
pop
push
mov
daa
lcall
add
jae
cli
gs
add
mov
and
jl
hlt
xchg
fistl
es
mov
fwait
sbb
push
fwait
imul
repz
sub
or
stos
inc
hlt
pop
aad
in
adc
addl
jg
fs
push
es
cmp
adc
xchg
mov
cmp
aas
imul
dec
pusha
pushf
data16
ss
jmp
movsb
and
enter
add
sub
jb
loope
and
cmpsb
shlb
mov
jo
mov
xlat
push
jb
mov
xchg
loopne
mov
push
pop
jns
decb
mov
jmp
bound
or
aaa
lcall
add
adc
insb
mov
into
jo
negb
sbb
sbb
pop
es
mov
xor
lret
shlb
push
mov
adc
jb
or
or
icebp
mov
xchg
sub
cli
lods
or
inc
push
ret
pop
and
das
cmp
jp
dec
sub
pop
pop
orl
xor
inc
sti
mov
add
lock
adc
cmp
je
push
cmp
fsubp
aas
xor
popf
dec
xchg
gs
pop
sahf
sub
movsl
outsb
or
jp
jmp
jl
jge
pop
ror
mov
mov
sbb
lods
aam
std
push
adc
push
and
jecxz
cli
mov
push
hlt
jb
dec
fsub
jmp
adc
wrmsr
into
push
push
idivb
nop
pop
cmp
sbb
pushf
xor
ja
std
dec
arpl
mov
adc
decb
push
movb
sbb
pushf
shlb
inc
xor
sbb
add
and
test
and
inc
sub
ret
stc
cli
jne
pusha
jae
inc
clc
mov
lret
fsubrs
cmp
aam
mov
testl
or
mov
xor
cmp
cmpsb
mov
roll
lret
aaa
or
int
cmp
sti
cmp
subb
rorb
cmp
xor
shlb
dec
mov
gs
jns
faddl
push
cmp
jbe
push
cltd
ret
sbb
sbb
adc
sbb
pop
pop
pop
cmp
je
lahf
mov
inc
pop
pop
xchg
sbb
inc
push
dec
sbb
push
cltd
out
xor
fstps
cs
enter
int3
and
cli
push
pop
pop
test
pop
pop
std
enter
jle
xchg
ss
cmp
lea
mov
mov
repnz
cltd
push
pop
rcrb
dec
into
pop
stos
std
and
mov
cltd
rcll
sbb
xchg
aad
in
in
imul
test
or
sub
test
icebp
inc
addb
add
aas
out
cwtl
and
sbb
int3
int
push
pop
fldenv
addr16
je
cmc
cmovne
jb
testb
add
lods
pop
add
scas
adc
es
push
outsl
mov
mov
pusha
insl
fwait
mov
enter
cs
cmp
test
jmp
cmp
cld
or
dec
roll
jmp
fs
jmp
imul
and
repnz
sbb
iret
inc
stc
mov
and
or
mov
xor
std
mov
cmp
mov
or
mov
cmp
out
fstp
or
scas
fistpll
and
stos
mov
popa
pusha
mov
das
adc
mov
dec
xorl
out
mov
jecxz
outsb
pop
add
mov
ljmp
test
jbe
jmp
div
cmpsb
sbb
mov
add
mov
mov
jne
jge
sbb
or
inc
sbb
add
cli
rcrb
xchg
cmpsl
inc
testl
and
mov
lds
jp
xor
adc
dec
test
pop
mov
jae
lods
cmp
cmpsb
leave
sub
inc
or
mov
cmp
addr16
push
out
dec
mov
jle
or
dec
xchg
pushf
xor
mov
push
sbb
jb
cmpsl
and
xor
jns
repz
in
mov
mov
sub
dec
fstps
add
bnd
jecxz
mov
jo
lds
push
cli
lcall
push
or
xchg
imul
outsb
leave
test
lahf
dec
push
xchg
ds
add
mov
xchg
mov
xor
cmp
inc
xor
mov
shll
xchg
cmpsb
push
outsb
arpl
adc
xorl
and
jle
cld
xor
adc
xlat
les
imul
mov
cmpsb
icebp
stos
mov
std
out
xor
loop
fcomps
dec
ds
repnz
push
jnp
call
lret
fiaddl
lret
xchg
inc
in
aad
mov
jnp
sub
add
test
mov
mov
scas
cmp
dec
mov
add
push
cmpsl
and
mov
add
pop
sbb
or
cmp
cmp
arpl
pushaw
cmpsl
jl
inc
adc
dec
pop
xor
loop
aam
lahf
sbb
aas
sub
jmp
push
push
std
hlt
xor
xchg
xchg
std
cmp
js
sub
lret
sub
xor
sub
push
and
fisubrs
addl
leave
xlat
lcall
xor
jae
je
iret
mov
fistl
lret
jp
stos
dec
test
mov
pushf
aad
sub
loop
popf
or
ds
shrl
popf
inc
arpl
pop
mov
mov
push
fisubs
push
rcll
add
jmp
adc
imul
pushl
push
inc
loopne
push
mov
sar
push
movb
dec
add
inc
sbbl
push
inc
je
xchg
push
mov
cmc
push
fwait
push
sarl
sbb
dec
push
pop
mov
jge
in
and
xor
jecxz
into
cmp
pushf
xchg
jp
jns
sub
dec
dec
adc
mov
hlt
xchg
or
or
dec
jb
arpl
xor
xor
test
push
xchg
popa
fwait
mov
dec
push
imul
in
xorl
std
jb
sahf
mov
loope
xlat
sbb
sbb
rcr
cwtl
lock
dec
jecxz
sub
jmp
or
lret
aad
jb
dec
adc
xchg
jecxz
pop
mov
loope
ja
hlt
xor
rcrl
js
xor
mov
call
add
ret
sub
leave
movsb
jg
lret
int3
push
jmp
cmpsb
fistpll
mov
pop
adc
inc
fists
mov
les
add
gs
adc
mov
mov
gs
aas
cmc
loope
dec
in
aas
roll
call
or
mov
adc
shll
jg
in
push
jb
pop
xlat
arpl
mov
leave
in
outsb
roll
ds
mov
jle
fistpl
lods
push
faddl
push
inc
outsl
out
stos
lock
sti
pop
sbb
in
adc
or
push
or
inc
cmpsl
imul
in
int
rcl
imul
xchg
jae
cli
fwait
mov
ret
rolb
inc
into
mov
fdivp
in
sbb
pusha
clc
shrl
outsb
jb
mov
pop
movsb
test
mov
cmp
andl
pop
sbb
pusha
movsb
outsl
mul
mov
stos
sub
push
jb
mov
gs
stos
add
cmpsb
adc
je
pop
inc
test
cli
cmc
jns
rcll
dec
push
dec
mov
repnz
jnp
pop
mov
in
in
lods
add
lods
mov
or
stc
into
ljmp
enter
jl
pop
sub
movb
push
pop
cmp
jne
mov
inc
in
in
mov
sbbb
mov
mov
and
mov
pop
pop
sbb
jmp
and
jb
iret
cld
push
jno
scas
sbb
dec
and
inc
pop
lock
mov
ret
dec
cwtl
push
and
bound
hlt
fadds
xchg
cs
dec
out
loop
push
cmp
push
shll
enter
iret
lahf
js
mov
push
call
jl
scas
scas
cmp
mov
sub
lock
sbb
dec
aaa
mov
mov
cmp
or
push
jae
cltd
mov
xchg
lds
push
adc
jp
ja
in
aam
insb
int
mov
ljmp
outsb
jne
mov
add
fs
lret
xor
ret
pop
lods
dec
and
inc
lret
cmp
mov
divb
into
rcr
es
ret
and
cmp
movhps
lret
popf
sub
ljmp
int
ljmp
push
movsl
ja
jp
arpl
cmpsl
jbe
lcall
inc
fcmovne
mov
sbb
adc
repnz
sbb
jb
xchg
cmpsb
fwait
xchg
mov
fisubrl
testb
xchg
xor
adc
in
in
xor
jo
lret
xor
jl
es
pop
adc
jmp
out
push
faddp
fcmovnu
je
mov
sub
aaa
pop
sub
fidivl
inc
push
xor
stos
aas
sub
mov
in
mov
xor
je
mov
mov
rorb
xchg
mov
out
ficomps
loopne
xor
lret
cmp
ficoml
mov
mov
data16
and
ljmp
dec
mov
outsb
mov
fidivl
pusha
fimuls
jp
cmp
xor
imul
test
cwtl
lret
pop
mov
sti
pop
scas
rcrl
call
dec
or
std
sub
gs
sub
ja
mov
mov
out
adcb
xlat
push
jno
xor
lods
stc
cmpsb
and
dec
outsb
not
xorb
mov
lahf
mov
int
ret
pop
jnp
push
mov
pop
add
sbb
ret
leave
call
inc
jmp
pop
push
add
mov
cwtl
fstps
or
mov
pop
cmp
and
stos
pop
sbbb
shrb
les
outsb
pusha
jecxz
lret
mov
inc
xor
fdivl
dec
mov
add
mov
fsubrl
push
fwait
ja
xor
jb
nop
sub
jne
jmp
lret
push
push
dec
je
pushf
inc
xchg
ss
inc
nop
push
lahf
jl
push
and
sbb
sub
loop
xchg
clc
sub
cmp
in
in
test
sub
mov
and
jmp
cli
sti
add
cmp
jne
xchg
aas
sub
cmpsl
out
in
ds
push
jl
jbe
mov
lea
fstp
adc
mov
sbb
mov
sub
pusha
mov
lahf
mov
inc
and
cltd
jmp
test
out
push
insl
jecxz
shr
jl
rorl
adc
cmp
mov
sbb
jl
sbb
cs
or
sbb
imul
pop
push
outsb
imul
xchg
inc
adc
pop
add
jnp
mov
bound
push
pusha
or
enter
outsb
mov
addr16
push
pop
sub
fcos
sbb
push
or
mov
sub
popf
mov
test
push
cli
mov
gs
daa
push
push
pop
movsb
mov
mov
js
pop
add
sub
mov
outsb
scas
out
mov
or
fwait
shrl
dec
sub
sbb
push
mov
xor
enter
inc
pop
push
dec
shlb
sbb
mov
repnz
dec
fdivrp
push
adc
rcl
add
insl
inc
xor
stos
mov
lods
mov
popf
sarl
dec
out
lods
sbbb
mov
pop
cmp
xchg
xor
insb
bts
aas
jne
mov
mov
sub
xlat
mov
pop
pushf
test
xlat
aam
loope
cltd
add
pop
xor
pop
cmpsl
mov
imulb
addr16
xchg
sbb
movsl
xchg
add
into
add
adc
test
push
mov
outsl
inc
jb
faddl
and
mov
notb
aaa
arpl
sbb
push
addr16
fmull
dec
push
mov
or
push
push
adc
cmp
rcrl
inc
in
orl
inc
cmp
or
aad
loopne
xor
enter
je
les
cmpsb
mov
lret
lods
movsb
sub
loopne
imul
sub
scas
pop
jmp
cmc
cmpsl
add
fadd
adc
mov
mov
pop
xchg
in
in
mov
cmp
lret
xor
jno
sbb
aad
cmp
je
pop
loopne
mov
aaa
enter
mov
ror
in
es
dec
xchg
mov
mov
cmp
and
popf
addr16
movsb
and
adc
push
call
xchg
mov
lret
repnz
xor
into
jl
push
mov
icebp
fdivrp
jle
sub
jp
xor
add
or
lret
mov
les
ret
gs
pushf
sbb
idivb
mov
insb
call
bound
adc
inc
test
push
test
test
outsl
sub
shrd
and
mov
push
notb
push
iret
insb
or
lds
lods
jbe
repz
adc
xor
jmp
addr16
out
in
sub
stc
aas
mov
mov
cmp
jmp
pop
cs
pop
add
or
mov
mov
scas
pop
sarb
push
pop
outsb
ret
jne
cmp
imul
add
push
movsl
cmpsb
aad
enter
mov
cld
mov
daa
test
cmc
add
sbb
andl
std
loop
dec
clc
imul
pushf
cld
add
ficoms
xchg
inc
add
lock
shr
lcall
ja
dec
test
adc
pop
scas
sub
xor
adc
push
ljmp
xor
adc
cwtl
fneni(8087
jnp
and
pop
add
mov
and
aam
repnz
sti
out
aam
xor
inc
jle
inc
jns
repz
dec
push
mov
shll
pop
xchg
clc
sub
xor
xor
mov
jl
mov
sub
jle
add
inc
mov
sbb
or
push
inc
inc
mov
dec
adc
jb
in
inc
stos
loop
fdivl
scas
mov
push
pop
mov
test
scas
jae
add
cmp
xchg
push
ret
data16
or
aad
mov
hlt
loope
aas
mov
aam
lahf
sub
ja
jle
add
int3
inc
and
jecxz
mov
sbb
add
pop
mov
mov
mov
js
mov
jno
jo
cmpl
shlb
fdiv
xlat
and
fidivrl
lds
mov
cvttps2pi
mov
or
inc
sahf
add
in
adc
scas
add
xchg
dec
add
or
popa
cmpl
sar
mov
and
dec
sbb
push
fwait
or
test
and
sbb
cmp
div
loopne
in
cmp
sarl
ret
xor
jge
lahf
xchg
jae
stos
pusha
imul
xor
mov
pop
fisubrl
arpl
xchg
adc
dec
xchg
mov
int
push
stos
pusha
pusha
test
mov
lock
fisttpl
fdivl
mov
add
jae
stc
push
out
add
push
lret
loop
aaa
hlt
inc
mov
repz
stc
dec
sub
rorb
scas
pop
fcomps
bound
js
movsl
das
sub
mov
bnd
push
mov
scas
xchg
aam
mov
std
push
inc
pop
and
dec
xchg
mov
in
sbb
push
xchg
int3
mov
ljmp
sub
jp
pushfw
xor
fbld
negl
sub
mov
mov
or
aam
fcmovne
sub
push
into
std
or
push
jmp
sub
mov
cmc
sbb
push
xor
mov
aad
out
fcompp
sahf
sbb
imul
outsl
orl
sbb
nop
xlat
xchg
inc
mov
in
add
in
jne
mov
std
jo
and
int3
push
clc
stc
jp
add
popf
jae
cs
push
cltd
sbb
and
mov
pop
lahf
ss
pop
cld
mov
fcmovb
mov
jmp
dec
jl
jae
jo
add
fs
scas
test
imul
push
mov
mov
mov
jae
out
dec
aad
addr16
sbb
aaa
mov
in
mov
in
je
ret
test
pop
movsl
adc
add
jecxz
sbb
lret
fildl
insb
pop
in
dec
out
inc
pop
inc
sub
ret
shlb
cmpsb
mov
int
dec
dec
pop
mov
cmp
lods
insb
adc
lcall
jg
cmp
xlat
in
or
jg
cltd
lret
stos
inc
stos
lret
add
movsl
pop
or
mov
cmp
pop
lea
xor
xlat
ljmp
lret
and
inc
add
jb
lret
arpl
rclb
fwait
pop
lahf
call
xor
pop
imul
aas
push
push
out
xor
lcall
imul
shrb
pop
sub
sahf
shll
pop
push
xor
fldl
add
loop
xor
mov
jmp
jle
pop
icebp
js
xchg
mov
sub
xchg
or
push
jg
cmp
icebp
push
fildl
mov
in
jb
faddl
out
stos
mov
cli
push
jg
neg
mov
add
dec
or
or
mov
loopne
mov
push
je,pt
inc
hlt
push
inc
scas
mov
in
mov
cmp
push
or
js
ds
leave
mov
andb
mov
or
adc
clc
imul
in
outsb
fadds
fisttps
sti
cmp
xor
cmp
ret
xor
cmp
jle
adc
mov
xchg
out
rcrb
add
push
movsl
addr16
xchg
lahf
mov
es
jp
mov
adc
lock
mov
push
movsb
jno
loope
inc
pop
lea
ficoms
or
lahf
jp
cltd
adc
xchg
cmp
cmp
lret
sub
fnsave
pop
xchg
push
adc
cli
out
popf
fwait
sti
push
shlb
inc
loope
cmpl
add
sbb
int3
mov
jmp
out
repnz
idiv
scas
ss
popf
sbbl
jbe
lock
cmp
sbb
jg
mov
outsb
fwait
cli
shl
push
mov
das
faddp
ret
add
adc
cli
inc
and
fnstenv
lahf
jmp
sbb
add
ret
imul
fwait
inc
fiadds
fiadds
adc
cltd
addl
mov
cwtl
test
call
mov
dec
xor
mov
pop
lods
xchg
in
cmpsb
pop
jg
jp
mov
mov
push
dec
call
jle
or
data16
mov
xchg
mov
or
dec
std
testl
ds
push
imul
iret
and
fiaddl
in
addr16
push
xchg
test
adc
mov
sahf
enter
cmc
jmp
add
or
cld
int3
sbb
lret
das
in
adc
out
jo
jo
das
xchg
stos
int3
or
inc
dec
xchg
push
lods
jne
mov
insl
lret
add
or
inc
inc
sub
adc
test
cmp
sub
js
orb
shl
mov
mov
dec
jnp
rcrl
jae
scas
sub
cli
pop
jnp
jnp
add
jae
xchg
cld
bound
enter
insl
out
daa
stos
push
cmp
int
mov
pop
es
mov
test
add
insb
shlb
cwtl
inc
xor
sti
adc
incl
jo
addr16
leave
pushf
xor
out
es
mov
movl
pop
push
ds
ds
xor
test
jbe
sbb
cmpsl
fistpll
mov
add
pop
sub
push
data16
fistpl
mov
or
lret
mov
daa
mov
insl
mov
push
cmp
sub
sahf
scas
scas
movsl
push
push
mov
aam
dec
pop
scas
mov
rcl
outsl
adc
xchg
pusha
enter
lock
mov
ja
mov
mov
mov
loope
icebp
lahf
mov
js
shlb
out
xlat
jp
pop
js
or
gs
mov
cmp
push
imulb
pop
aam
das
ror
adc
aas
add
add
and
fwait
xor
loopne
aas
loope
dec
push
pushf
imul
out
shl
insl
dec
mov
dec
jmp
les
sub
xchg
push
push
inc
xor
and
ljmp
insb
jno
das
and
xchg
lock
push
or
push
dec
pop
sub
outsl
mov
fstpl
mov
loopne
mov
repz
inc
push
push
xor
sbb
push
push
adc
and
xor
scas
sbbl
xchg
and
mov
pop
in
add
cmp
lcall
packssdw
cmp
mov
adc
adc
adc
cmp
jp
mov
cld
cmp
sub
loope
popa
fwait
std
lret
push
cwtl
xor
ja
fmull
add
or
outsb
sbb
pop
adc
mov
xchg
jns
pop
aaa
sub
adc
inc
mov
xchg
mov
stos
and
imul
mov
and
xchg
adc
stos
mov
andb
scas
andl
mov
fabs
and
pop
dec
xor
ss
lock
pop
roll
fnsave
adc
cmp
cmpsl
clc
dec
js
inc
repnz
mov
les
push
inc
loopne
adc
jecxz
mov
pushf
mov
add
fsubs
int
test
scas
xchg
push
mov
test
lds
loop
or
movsl
insb
jne
mov
mov
push
icebp
lahf
pop
mov
pop
add
cs
dec
add
ja
xchg
into
jnp
add
mov
test
ja
fistl
add
jnp
pop
jbe
inc
inc
fbld
orl
imul
nop
add
daa
push
xchg
sub
jae
push
sub
ds
ds
push
mov
iret
dec
nop
loopne
and
sub
xor
rorb
inc
inc
add
test
xchg
cld
jo
mov
in
daa
sbb
mov
jae
dec
mov
test
in
lahf
push
dec
and
rcr
cmp
orb
mov
dec
push
sbb
lcall
push
sub
sbb
and
ret
mov
inc
cmp
fisubrs
xchg
jno
cmp
dec
xchg
lahf
loopne
mov
repz
testb
das
nop
pushf
call
push
out
sub
loop
loop
in
ljmp
dec
lods
es
call
rolb
push
dec
ds
rol
cli
popa
inc
cmc
cmc
insl
push
fisubl
xchg
add
cs
dec
push
xor
push
loope
add
and
jbe
sarl
xchg
xor
aad
idivl
rolb
in
xor
xchg
push
jge
jle
shrb
fadd
push
sti
and
dec
cld
jmp
and
stos
gs
pop
pop
lret
fsubrl
sbb
les
lods
cmp
push
xchg
int
mov
mov
or
add
imul
out
pop
or
inc
sub
jae
test
repz
inc
adc
pop
enter
into
lods
sbb
inc
leave
arpl
daa
aad
lahf
xor
je
mov
or
shll
xor
test
insl
dec
mov
inc
arpl
gs
mov
sbb
adc
mov
inc
shrb
scas
arpl
xchg
or
shll
xchg
pusha
adc
icebp
out
enter
xchg
imul
loop
jmp
out
insl
call
xor
int3
mov
add
sarb
lock
dec
adc
es
jmp
push
xlat
scas
xorb
xor
or
cmp
xchg
adc
pop
push
je
xchg
pop
dec
test
rorb
sub
xor
xor
add
test
out
addr16
scas
sbb
mov
mov
mov
jbe
andb
test
shlb
mov
subb
mov
and
or
jb
and
repnz
mov
int
add
jp
lret
sbb
mov
jp
xchg
cltd
push
clts
imul
call
shlb
pop
sti
scas
inc
incl
inc
and
lods
pop
lahf
in
sbb
shlb
mov
pop
mov
mov
cmp
push
rorl
loope
mov
es
aam
ret
sbb
pop
mov
les
mov
xlat
pop
push
dec
les
rcrl
ret
xor
les
sub
lods
cmc
sub
mov
insl
test
leave
das
addb
adc
test
pusha
sahf
pop
inc
ret
mov
in
and
ficompl
xor
test
jae
jmp
jae
sti
data16
mov
sahf
or
xchg
mov
add
and
mov
or
adc
adc
scas
clc
sbb
mov
cmp
and
ja
xor
sub
lock
imul
mov
add
adc
xchg
xchg
or
repz
pop
xor
hlt
sbb
jmp
and
adc
insl
dec
or
ds
jmp
jge
dec
push
fmull
leave
jnp
fimull
dec
pop
inc
shlb
in
or
jnp
cmpsl
notb
aaa
enter
fbstp
sub
jne
push
imul
ljmp
mov
sub
cltd
cli
mov
sbb
jnp
add
jbe
bound
cmp
decb
xchg
fwait
or
out
pop
sub
sahf
pop
or
fnstenv
mov
inc
daa
sub
imull
outsl
add
icebp
jbe
scas
xchg
imul
cmpsl
stos
sub
mov
mov
dec
pushf
jae
loop
cld
push
aad
push
sti
mov
lods
push
jl
ret
int3
adc
scas
xlat
clc
adc
mov
cmp
jecxz
std
scas
popf
push
xchg
xchg
adc
or
pop
cli
ljmp
fiaddl
mov
movsb
or
mov
xlat
ds
inc
dec
mov
mov
xchg
sbb
push
mov
mov
adc
sub
aad
pop
and
xchg
shl
pop
popf
mov
mov
sub
pop
andl
lcall
mov
cmp
call
mov
xchg
mov
icebp
mov
test
sbb
add
test
xchg
jge
lcall
inc
xor
pop
or
push
hlt
mov
push
cs
cli
or
cmp
dec
or
adc
xchg
xchg
sbb
ret
stc
adc
popa
jno
and
xchg
mov
xchg
cltd
pop
sbb
adc
mov
sbb
pop
imul
adc
mov
dec
or
jge
outsb
int
mov
sbb
ffreep
pop
ficomps
icebp
and
inc
mov
add
cmpsl
movsl
dec
and
push
add
rcll
sub
mov
jmp
adc
int3
loope
inc
cmp
sub
or
cmp
push
sbb
sbb
out
push
clc
out
xchg
mov
test
repnz
pop
stc
jecxz
cmp
popa
mov
xor
jg
cld
mov
lret
jl
xor
and
sti
je
stos
cmp
xor
pop
int
xorl
insb
aam
jae
or
pop
lock
xlat
loope
xor
lahf
jne
and
lock
and
push
dec
and
sbb
ds
mov
out
mov
rcrl
out
lret
adc
adc
pop
shl
xor
aaa
std
in
push
scas
xor
outsb
jl
push
inc
cmp
fisttps
fidivrs
adc
xchg
fisubrs
sbb
jp
mov
inc
push
cmc
pushf
mov
out
popf
es
or
scas
dec
or
cmpb
addr16
mov
pop
rcl
pop
pop
mov
mov
dec
dec
int
adc
fadds
cwtl
mov
daa
ljmp
xchg
insb
pop
ss
jo
loopne
mov
mov
fidivrs
mov
and
popf
mov
pop
sub
clc
cs
dec
repz
jae
out
scas
pusha
out
add
add
lods
test
lret
popa
or
inc
mov
imul
insb
jl
jp
adc
inc
fstl
cmpl
push
adc
std
in
inc
into
in
inc
das
mov
push
or
in
test
lods
jmp
or
loop
pushf
lret
setae
out
adc
mov
sarl
cmp
cmp
mov
cmp
cmp
iret
icebp
js
and
cld
sub
or
arpl
decl
xlat
cmpsb
les
jo
jne
loopne
xchg
and
lcall
push
leave
xlat
dec
rcll
cwtl
adc
sub
inc
jno
out
out
inc
xor
cmpb
sub
lea
in
jl
in
xrelease
pushf
or
xchg
cmp
inc
jecxz
and
dec
push
xchg
pusha
loopne
push
and
insb
rorb
push
mov
ja
push
lods
push
cmp
xor
inc
jle
lahf
add
add
test
and
push
mov
pop
inc
inc
add
bound
cld
ficoms
inc
mov
dec
testb
in
pushf
addr16
test
inc
and
push
mov
in
or
mov
mov
in
movsl
jmp
loopne
pop
jns
sahf
mov
int
cmc
jp
outsl
imul
popf
inc
mov
cmp
push
imull
arpl
mov
jae
cs
pop
rcll
int
test
inc
mov
mov
add
out
xor
fwait
mov
add
lds
je
push
fidivrs
pusha
sar
notl
inc
fsin
jb
mov
pop
jns
sbb
test
mov
mov
sbb
dec
lods
sub
jge
mov
loopne
stos
pushl
or
sbbl
js
mov
add
ret
les
testl
xchg
sbb
add
adc
sarl
fistpl
scas
jge
popf
add
xchg
xchg
int3
pop
push
insb
jp
mov
cmp
xchg
mov
jae
mov
xor
std
xchg
es
inc
jno
mov
fldenv
sbb
outsl
jne
mov
cmp
mov
cmc
xchg
in
dec
shl
jge
pusha
js
or
jg
out
xchg
icebp
fisttps
mov
xor
out
push
repnz
mov
xchg
and
jns
pusha
mov
rclb
gs
into
lock
push
jg
loop
jne
pop
jg
ss
add
dec
push
std
lahf
dec
stos
or
jnp
lcall
jo
test
sbb
mov
mov
mov
adc
xorb
outsl
lds
inc
xchg
in
inc
fwait
scas
mov
pushf
xchg
pop
popf
lret
js
adc
fdivrl
std
leave
xchg
cmp
cmpsb
sub
aaa
mov
stos
cmpsl
lcall
out
cmp
xchg
std
sub
pop
mov
movsb
pop
sbb
rolb
sbb
sarl
cmp
adc
pushf
rorl
mov
imul
push
call
leave
jmp
pop
lcall
dec
mov
imul
les
rcrl
popa
int
or
cs
add
cmc
mov
mov
sbb
inc
push
add
sub
into
xchg
mov
add
xchg
push
iret
and
sub
clc
jns
gs
jmp
ret
xor
push
lds
push
inc
test
cld
push
push
out
stos
shll
jbe
dec
add
mov
rcr
mov
push
aam
mov
jl
pop
dec
pop
mov
stos
adc
xchg
fdivp
mov
add
movsb
les
mov
mov
negb
fdivs
test
xchg
mov
jne
fdivl
cmp
add
stos
dec
clc
pop
cwtl
or
lcall
test
sbb
or
mov
cltd
mov
fucomi
dec
clc
hlt
lret
iret
jg
cld
dec
cmp
std
scas
adc
mov
jl
cmp
dec
push
pop
rclb
inc
popa
and
cld
andl
xchg
push
mov
ljmp
cmpl
dec
int3
or
mov
call
repz
or
ds
add
roll
sbbl
jno
sahf
ret
test
and
data16
vxorps
jle
imul
daa
outsb
sbb
sbb
cmpsb
dec
aad
xor
push
push
pop
lds
add
cmp
add
jl
push
xor
hlt
ljmp
sub
inc
outsb
lods
sbb
inc
cmc
out
and
std
fs
out
addl
add
leave
cs
notl
lods
or
loopne
lds
lret
outsl
cltd
mov
sbb
jp
inc
insl
add
lods
addr16
pusha
xor
or
xor
adc
pop
fildl
out
push
sub
jp
mov
mov
insl
xchg
rorb
movsl
sar
es
out
xchg
lcall
pop
adc
pop
pop
stc
or
test
popf
in
push
xor
pop
mov
arpl
pop
and
jns
xor
andb
les
mov
sub
dec
outsb
xchg
jne
imul
aad
loop
pop
push
or
xlat
je
mov
mov
adc
xchg
adc
jg
stc
dec
aaa
cmc
and
aas
insb
lea
data16
les
leave
and
into
jge
or
das
lcall
or
lock
fstl
andl
jb
add
lahf
clc
cmp
mov
and
pop
and
icebp
insb
pop
jge
subb
jo
sub
mov
cmpsl
daa
sub
mov
sub
clc
lret
dec
mov
ret
adc
pushf
stos
inc
mov
and
insb
stos
cwtl
imul
shl
inc
jge
sub
xor
repz
iret
add
mov
leave
jmp
push
test
in
cmc
in
loop
jns
mov
fwait
sub
jle
and
dec
enter
mov
xchg
xor
xor
out
pop
inc
jl
ja
popa
jge
xchg
std
sbb
and
jle
shl
cwtl
mov
xor
jb
fcoml
mov
je
cmp
aas
iret
lock
dec
mov
mov
jg
mov
popa
xchg
ja
ret
fildll
out
test
push
xchg
insl
ss
mov
fcmovne
in
xchg
jns
lds
in
popf
das
repz
push
mov
dec
subb
sub
lret
leave
sti
lret
cmpsl
sub
cwtl
lret
mov
jns
in
int3
pop
adc
adc
pop
aam
test
cmpsl
call
mov
lock
mov
out
in
stos
int
scas
test
aaa
sbb
in
cmp
jmp
push
in
jecxz
push
xchg
add
pop
mov
in
pop
mov
pop
mov
pusha
je
jg
add
sbb
aas
aas
or
lea
adc
and
or
fldenv
adcl
pushf
xorl
in
push
lock
add
lcall
lock
sub
or
xchg
sarb
add
mov
fistps
in
rcll
add
shr
aas
mov
pop
pop
out
popa
sub
ds
jecxz
mov
shl
popf
dec
fsubr
xor
int3
xchg
pop
mov
cmp
mov
call
fimull
xchg
mov
pop
xchg
aas
std
push
test
stc
in
push
push
xchg
shll
jecxz
insb
cmp
test
loopne
sbb
and
lds
pop
int3
repnz
pop
mov
dec
jb
mov
lahf
sbb
mov
cmpl
or
cs
imul
xchg
mov
loopne
add
cld
or
lahf
jmp
jb
popa
fisubrl
xor
in
cmp
ljmp
loopne
aam
cli
jns
add
decb
xchg
dec
lret
pop
inc
pop
or
and
pusha
mov
ret
push
loope
dec
mov
dec
nop
fs
and
rcrl
movsl
and
xlat
rcl
and
push
cs
mov
jecxz
sub
add
repnz
cmp
lods
loopne
and
xchg
xor
jmp
inc
popa
dec
jge
call
push
cmp
mov
popa
enter
and
or
insl
int3
jno
xor
lock
shr
cmpsl
xor
xchg
mov
and
add
cmpsb
adc
ja
and
jae
push
sbb
jbe
or
xchg
mov
cmp
sti
cmp
xchg
and
mov
pop
add
push
adcl
fisubs
xchg
jns
std
insl
mov
fisubrs
push
repz
mov
cwtl
aam
mov
test
in
pop
roll
jle
cld
test
cmc
fs
dec
bound
xchg
inc
arpl
les
les
test
clc
andb
aad
pop
mov
xchg
inc
dec
fsubrs
cmp
sbb
pop
add
loopne
jecxz
xor
jmp
fwait
mull
mov
add
outsl
dec
mov
out
outsb
lahf
adc
arpl
bound
jle
nop
movsl
popa
int
addr16
xchg
cmp
clc
and
cmp
shr
ret
ljmp
fs
lret
popf
pop
push
das
std
xchg
dec
or
roll
imul
mov
std
push
aaa
outsl
jecxz
dec
test
in
icebp
xchg
cld
inc
jge
add
addb
jbe
jnp
les
imul
mov
jne
test
shlb
mov
add
je
xchg
dec
mov
push
aas
push
out
je
adc
mov
rol
jne
jbe
jle
shlb
sbb
sub
les
imulb
push
rolb
xchg
mov
inc
push
ss
push
mov
push
add
mov
add
jmp
cmp
mov
cwtl
icebp
icebp
xchg
popa
dec
fwait
adc
in
sahf
and
lret
or
cld
popa
call
das
push
stos
jbe
aaa
mov
test
mov
int
leave
or
in
enter
sub
adc
lahf
popf
dec
push
pop
push
les
nop
enter
mov
push
out
mov
or
jl
mov
adc
add
jge
dec
pop
pop
inc
push
dec
jecxz
test
push
xor
adc
sub
mov
adc
aas
xchg
pop
fmuls
fdiv
jnp
mov
or
dec
mov
daa
add
das
sub
loope
aaa
mov
rcl
dec
inc
jns
dec
sbb
mov
pop
jo
leave
sbb
sub
mov
stc
mov
cli
mov
ljmp
dec
push
enter
pop
or
dec
dec
sahf
and
cld
xchg
idivl
cmc
in
sbb
into
push
or
mov
fst
push
mov
jmp
pop
lds
loopne
test
ljmp
test
sub
ljmp
in
adc
mov
pushf
rorb
pop
cmc
xchg
cltd
sub
jbe
mov
adc
into
sbb
int
daa
fstpt
cmp
pop
pushf
stos
jnp
dec
mov
sahf
imul
xor
add
push
inc
adc
xor
cmpsl
mov
cmp
shrl
adc
aaa
test
cltd
push
andb
test
imul
push
sbbb
push
repnz
loopne
and
xchg
ss
xchg
jl
or
xlat
mov
jo
icebp
hlt
push
aaa
js
shr
or
clc
inc
nop
mov
outsb
pop
sahf
out
addr16
xor
dec
cmp
pop
dec
insl
mov
lcall
mov
sahf
xchg
sub
pop
cwtl
ffree
jae
jb
xor
xor
enter
bound
roll
mov
loop
cmp
inc
pop
mov
jg
stc
sbb
cmc
fdivp
xchg
cmpsb
ror
dec
mov
pop
jmp
jne
lret
cmp
mov
or
lds
jno
sub
cltd
push
push
repnz
sub
jle
inc
mov
push
jbe
xlat
sbb
mov
mov
mov
xor
jns
aam
mov
mov
cwtl
mov
cwtl
xchg
cld
xchg
pop
xlat
pop
jb
fstpt
pop
xor
cmp
ror
outsl
loopne
push
sbb
and
push
stc
and
lahf
add
sti
and
jp
mov
mov
add
loop
sti
addr16
mov
cmp
lock
add
cld
cld
sbb
and
and
lds
add
loopne
xchg
pop
pop
mov
inc
push
inc
daa
xchg
or
xor
imul
dec
adc
push
lret
fstps
or
fsubrl
mov
cmp
pop
or
out
test
lret
shlb
scas
xor
gs
into
out
lret
cmp
add
fxch
loope
repnz
in
sub
out
ljmp
stc
loop
ljmp
add
push
test
xchg
dec
xchg
xor
enter
xchg
aas
shll
xor
cwtl
sbb
aad
div
and
stos
sub
mov
aam
sub
cmp
dec
or
push
sub
inc
call
sub
xlat
lock
pusha
sbb
and
in
imul
ret
insb
mov
mov
jns
dec
add
stos
mov
setge
rolb
neg
out
aaa
stc
jl
scas
dec
hlt
pusha
mov
gs
sbb
movsl
and
ficompl
pop
out
out
fwait
sub
add
out
push
mov
and
stos
jae
cmp
cmp
sbb
xor
movsl
std
and
inc
dec
push
push
lahf
push
or
stos
jecxz
repnz
xor
xchg
js
shrl
jmp
xorl
jecxz
icebp
inc
xchg
xchg
dec
sub
and
insl
enter
es
push
xchg
fists
xchg
dec
adc
jae
add
roll
push
je
rcll
or
gs
mov
jecxz
xorl
xchg
sub
cmc
mov
jl
loopne
and
mov
bts
in
aaa
dec
loopne
cld
aam
cld
cmpsb
fucomip
and
jmp
mov
imul
push
mov
rorb
ljmp
push
or
out
push
test
dec
adc
imul
mov
cmpsb
movsb
ret
aas
fstps
leave
xor
inc
testb
test
lods
mov
sbb
int
outsl
mov
jb
into
sub
lock
or
push
mov
dec
push
test
test
pop
insb
and
dec
arpl
lcall
cmpsb
add
cmp
arpl
dec
and
cli
lret
sub
adc
loop
jmp
ds
inc
movsb
scas
leave
sbb
inc
fmuls
stos
mov
scas
inc
adc
enter
pushf
jecxz
cli
push
iret
popf
adc
adc
pop
ret
test
ja
out
xchg
mov
push
cmpsb
hlt
xchg
fildll
dec
pop
sahf
xchg
mov
mov
sbb
xor
mov
arpl
pop
mov
dec
mov
cmp
movsl
aas
out
push
adc
out
adc
mov
push
and
or
dec
mov
aas
lds
sub
cmpsb
fadd
push
in
and
mov
xchg
jge
inc
add
mov
fld
cwtl
ret
outsl
int
sub
imul
mov
movsb
hlt
stos
jb
cmp
daa
sub
iret
sarb
jns
cmp
sahf
pop
dec
fld
lock
repz
insl
push
js
es
or
push
in
movsl
push
mov
adc
clc
xchg
cld
mov
jp
sbb
dec
push
mov
sub
out
aam
fwait
xor
adc
mov
jl
ret
pop
js
xchg
in
jl
xchg
xor
into
add
test
outsb
test
pop
push
int3
ljmp
out
fcomps
cmpsl
out
jle
lods
pop
cwtl
leave
outsl
testl
lret
frstor
mov
sarb
mov
stc
pop
out
xchg
addr16
pop
ss
cmp
fstps
xlat
stc
sub
andb
js
sub
cmp
xor
jecxz
lods
push
test
shrl
xchg
aas
or
bound
sbb
jno
sbb
pop
xor
xor
jno
mov
imul
sbb
jae
or
punpckhwd
fisttps
enter
aaa
lcall
add
mov
adc
sbb
ljmp
mull
bound
fistps
int3
jl
xchg
or
push
jecxz
push
mov
lahf
aad
inc
jns
push
lahf
xchg
pop
pop
mov
and
rcr
mov
movsl
cmp
jne
cmpsb
mov
popa
addl
std
lret
push
inc
and
sti
xchg
stos
inc
test
fsubl
push
and
cwtl
push
fcomp
daa
push
sbb
mov
stos
xor
popf
in
pop
push
cmpsl
pop
jg
add
inc
popf
ret
push
dec
bndldx
push
add
test
dec
int3
adc
arpl
je
xlat
push
mov
out
addb
push
mov
scas
in
jnp
add
cbtw
mov
jmp
mov
jmp
dec
popf
sbb
fisubl
fs
jp
popfw
mov
push
rorb
inc
bound
xchg
cmpsb
cmp
mov
adc
jb
loop
add
push
out
xor
out
sub
imul
push
ficoml
enter
lods
leave
dec
pop
mov
add
fwait
cmc
cmp
dec
outsl
rol
jmp
inc
fbstp
imul
inc
xor
stos
jnp
fmull
add
mov
adc
jbe
ljmp
push
adc
inc
ljmp
ja
xchg
lock
sarb
and
pop
sub
xchg
or
das
ss
pop
loope
js
xor
outsb
cmp
gs
mov
push
push
dec
and
adc
std
add
sbb
and
jae
ss
in
lods
fidivrl
loop
sbb
jp
fwait
lcall
dec
push
xchg
or
xor
pop
mov
xor
call
inc
jne
lods
xchg
mov
push
test
mov
sub
decb
mov
lock
inc
cld
pop
or
sub
in
es
pop
dec
std
add
adc
enter
lcall
repz
jp
out
sub
mov
sub
imul
inc
lret
lods
cmp
outsb
stos
lods
xchg
hlt
mov
test
pusha
jb
pop
mov
push
sub
add
sub
dec
scas
push
mov
jns
pushf
imulb
pop
stc
mov
in
push
push
aas
mov
xor
scas
out
ljmp
rcr
mov
movsl
fs
sahf
mov
pop
jno
inc
mov
push
sub
adcb
loop
les
test
push
or
xchg
ljmp
lods
adcl
xor
mov
push
fcomip
adcl
adc
push
push
xor
lods
inc
fwait
xlat
pop
sti
dec
jbe
sub
push
pop
jbe
mov
jl
js
fistpll
shrl
xchg
gs
jp
xchg
aas
xchg
cmpb
xlat
out
lcall
mov
sahf
mov
mov
shll
xchg
mov
xor
in
push
mov
pandn
ja
outsl
add
add
pop
fstl
or
pop
es
aam
icebp
push
inc
cld
data16
inc
sbb
ror
pop
inc
in
or
add
cltd
fabs
rcrb
push
loop
or
outsb
lret
shrl
push
hlt
in
or
dec
add
into
mov
cmp
mov
jbe
cltd
push
cli
xchg
fdivrs
push
outsb
addl
std
sub
popf
xor
jge
out
call
stos
mov
and
push
xchg
shrl
fcmovu
loope
mov
loope
jle
push
shrl
mov
pop
xchg
cs
out
loope
cld
cmpsb
shll
jle
inc
loope
xchg
sbb
cld
sub
cmc
or
pop
cmpsl
dec
insb
jg
cld
mov
mov
rcrl
imul
push
xchg
ljmp
test
push
adc
add
add
xchg
push
and
sti
lods
jg
movsb
sbbl
lahf
adc
mov
or
lret
daa
inc
call
subl
sbb
es
mov
popf
xchg
sahf
mov
or
cmp
aas
in
xchg
into
mov
int
cmpsl
int
and
or
fldt
stos
test
ret
lret
lret
xor
cmp
xor
cmp
hlt
iret
push
xchg
and
std
pop
pop
es
rcrl
es
mov
push
sbb
xchg
call
cltd
fistpll
pop
pop
cli
mov
scas
lahf
imul
into
pop
cltd
mov
push
lock
test
xchg
aas
fdivrl
cmp
out
int3
pusha
pusha
in
sub
in
sbb
in
xor
dec
aaa
fdivrl
xor
outsb
nop
fldl
mov
aaa
mov
and
addr16
pop
fiaddl
push
mov
jg
popa
ds
mov
clc
ret
leave
cmp
pop
aas
pop
mov
lds
jne
xchg
cld
cmp
fdivs
push
jge
arpl
push
fisttpl
add
aas
xchg
and
cmp
push
in
sub
jns
dec
cwtl
stos
popf
mov
ror
repz
dec
lret
test
mov
push
sub
insb
bnd
push
ret
stc
xor
mov
scas
sti
aad
add
or
adc
mov
lahf
cmp
xor
ja
mov
mov
mov
jae
mov
add
sub
rcr
cmp
pop
shll
hlt
push
jae
pop
mov
or
xor
sub
pusha
data16
aas
cmpsl
and
xor
call
mov
jmp
cmp
in
imul
aas
fidivl
shll
pusha
roll
xor
loopne
mov
dec
xchg
out
pop
lret
inc
pop
dec
xchg
jne
mov
mov
int3
rcrb
or
mov
jae
push
dec
es
mov
mov
inc
pop
add
push
testb
adc
lcall
int
push
pmaddwd
push
push
rclb
push
js
lahf
aad
inc
adc
add
gs
imul
or
ret
rcrb
mov
jns
adc
insb
mov
jbe
movsb
jno
mov
addr16
mov
rcll
subl
out
inc
mov
ret
push
xchg
dec
xchg
aad
jmp
dec
into
jne
mov
daa
lock
ret
cmp
jge
pop
popf
popa
dec
popf
leave
push
mov
cmp
fisttpl
jg
add
test
jne
outsl
xorb
xor
insl
jg
aas
dec
loopne
add
mov
xor
sbb
push
jg
mov
adc
arpl
jg
rcrb
pop
inc
mov
add
cld
lcall
clc
pop
push
sbb
and
in
notl
data16
arpl
std
nop
repnz
or
inc
sub
sub
data16
out
shl
call
icebp
sbbl
sub
adc
or
adcb
pop
xchg
sbb
cmp
test
and
cltd
js
imul
cmp
fwait
xchg
scas
pop
roll
mov
mov
jg
cltd
push
stc
testl
outsl
sub
xorb
sahf
add
insl
push
adc
xor
cmpl
iret
ret
aas
fdivrl
stc
mov
orl
sbb
pop
adc
shrl
and
cmp
femms
xchg
iret
sub
fwait
add
or
jg
and
cmp
pushl
clc
xchg
push
movsb
inc
push
xchg
and
enter
test
mov
push
cmp
adc
xor
mov
lret
out
add
jmp
inc
loop
lds
popa
loop
jbe
in
out
lret
mov
dec
out
dec
cmp
add
mov
repnz
fidivrs
sub
or
orb
mov
add
mov
js
xor
pop
cmp
inc
fdivr
hlt
mov
xor
inc
pop
rcll
mov
inc
orl
dec
mov
adc
dec
sub
shl
lea
mov
cmc
scas
shl
frstor
push
mov
or
push
adc
push
test
scas
cmp
or
add
mov
pushf
ret
movsl
mov
sbb
sub
pop
sub
jg
std
push
test
jp
jne
xchg
xor
test
push
inc
insl
test
imul
aas
inc
popa
pushf
cmpsl
stos
push
sub
pop
into
adc
xor
mov
loope
loop
and
ret
daa
pop
jno
rolb
test
lahf
insl
test
mov
stc
push
das
push
cmp
pop
pop
sahf
shll
repz
les
mov
adc
ss
pusha
aam
addr16
jno
lods
jge
xchg
faddp
imul
cltd
xor
loopne
mov
xchg
arpl
movsl
sub
push
es
enter
sub
es
data16
mov
cmpsl
cwtl
jne
xor
bound
sub
insl
dec
adc
xchg
lahf
insl
push
icebp
outsl
shlb
subb
call
and
adc
or
repz
sbb
in
xor
mov
pop
and
inc
ret
loop
dec
cmp
xchg
inc
xchg
cmp
jae
fistps
scas
ja
xchg
daa
pop
xchg
xchg
or
addr16
mov
add
lea
inc
iret
filds
cli
xchg
adc
ret
xor
jae
adc
addr16
jmp
nop
jp
fadds
xchg
ja
mov
andl
mov
lea
test
mov
jo
dec
push
out
into
adc
scas
jae
mov
out
sub
fstps
jbe
repnz
sub
mov
loope
call
mov
pop
or
int
sti
std
aaa
jecxz
mov
fdivrl
arpl
adc
inc
dec
sub
cwtl
orl
int
add
sub
xchg
jnp
shll
cmpsl
ret
rcll
mov
aaa
test
add
into
cmpsb
sub
jge
lret
jmp
inc
subb
fcompl
out
ret
lcall
mov
mov
stos
out
out
in
aaa
cltd
and
adc
aas
fsubp
add
mov
cmp
pop
inc
xchg
pushf
jle
push
sti
ret
sahf
mov
test
daa
in
lds
call
outsb
mov
das
dec
pop
fistpll
cmp
aad
fwait
cs
push
out
scas
mul
pop
ret
insl
pop
loop
inc
sub
mov
sub
je
adc
or
cmp
and
push
hlt
and
fcos
add
or
or
xor
mov
leave
call
push
adc
cmp
je
outsl
sub
js
xor
jge
negl
add
adcl
inc
ss
rorl
xchg
in
pop
jne
clc
out
fisubrs
push
test
stos
ds
inc
and
popf
xchg
jo
inc
loop
jp
mov
inc
mov
push
hlt
pop
bound
aaa
inc
call
iret
das
mov
adc
and
loopne
into
js
and
call
data16
rcr
jns
cmp
mov
dec
mov
xor
xchg
ret
mov
ret
ja
dec
repnz
imulb
aad
jmp
mov
test
xor
in
adc
in
sti
movsb
sbb
in
in
sarb
or
sub
add
dec
cmp
jl
mov
outsb
clc
jne
cld
adc
lcall
push
into
test
imul
sub
push
jg
pop
pop
jb
and
dec
in
outsb
popf
in
iret
rcrl
mov
outsb
xor
fstpl
cmp
add
jns
lcall
je
dec
data16
clc
xchg
ss
add
sbb
add
push
push
mov
idivl
xor
jg
je
mov
inc
out
ret
push
pop
sbb
adc
add
adc
les
dec
mov
iret
mov
inc
xor
insb
dec
call
test
mov
ds
mov
adc
aam
lcall
mov
cmp
pusha
adc
aas
cmp
cmp
xchg
scas
push
add
jmp
adc
push
mov
lock
and
sbb
push
clc
mov
xchg
xchg
aad
aaa
jae
cld
repz
ja
and
imul
jne
stos
sbb
sar
adc
loope
repnz
std
movsb
hlt
push
scas
fistpll
push
es
xchg
sub
dec
jge
sti
sbb
add
mov
fmuls
fadds
lret
imul
inc
push
push
loop
xchg
imul
xchg
pushf
imul
gs
push
add
cmpsb
lahf
inc
mov
adc
pop
je
mov
or
shlb
xchg
push
dec
add
test
pop
inc
mov
and
pop
jno
in
add
cmovno
xor
jle
push
or
pusha
jge
and
xor
notl
push
push
clc
and
out
jne
push
push
pop
iret
in
lret
mov
jae
add
mov
cmp
rcll
fsubl
sub
xchg
fmuls
sbb
and
pop
retw
bnd
pop
mov
lcall
sbb
int
cld
cltd
test
mov
add
lock
test
js
out
insb
xchg
jle
fs
mov
sbb
je
and
sbb
inc
popf
inc
dec
mov
in
push
mov
shl
imul
aam
daa
lcall
in
xor
shl
dec
out
sub
jnp
pop
xchg
mov
add
mov
sbb
xor
inc
ja
and
clc
push
or
xchg
inc
jecxz
stos
loop
pop
dec
sbb
es
mov
mov
gs
push
rcl
pop
out
fsub
add
jnp
mov
push
push
pop
out
sahf
lods
aad
repz
hlt
std
push
xchg
mov
sub
pop
sub
mov
ret
outsb
pop
dec
loopne
sub
push
aaa
int
xor
test
push
sub
insl
scas
cmp
sub
inc
std
sbb
mov
in
push
out
lock
push
aam
push
sarb
loopne
jecxz
fstp
pop
fistpll
es
sbb
pushf
test
push
scas
test
jnp
lahf
cmp
test
das
cmp
cmp
push
pop
cmp
adc
into
add
add
outsb
or
ret
mov
icebp
xor
mov
push
mov
push
xor
sahf
inc
pop
das
mov
nop
out
mov
cmp
arpl
jle
xchg
jns
aad
nop
je
mov
add
leave
dec
push
lea
mov
outsl
shrl
aad
lea
push
mov
outsb
cli
push
and
int3
and
cli
jg
pop
daa
or
arpl
sarb
xor
jbe
push
sbb
xchg
xchg
push
mov
xlat
jne
repnz
fs
shll
lahf
adc
fisttpl
mov
and
leave
or
repnz
call
adc
outsb
das
add
test
jo
cmp
cmpsl
es
cmpsb
pop
ficomps
push
mov
xchg
adc
repnz
dec
scas
xor
mov
int
sub
repz
popf
test
out
into
jbe
sub
push
xor
iret
adc
sub
sbb
xor
cmp
ret
lock
sub
mov
push
jo
outsl
sarl
xor
jno
mov
notl
adcb
les
std
in
testl
adc
mov
mov
push
arpl
cmp
dec
xchg
or
fcmovne
loop
adc
ret
je
les
push
ret
mov
push
xor
pop
mov
sbbb
hlt
cmp
xor
sahf
lahf
icebp
lds
mov
push
xor
adcl
mov
mov
adc
or
cs
add
out
dec
dec
icebp
push
fdivrs
mov
loope
and
arpl
or
in
cwtl
lret
decl
gs
sub
fisttps
aaa
lods
inc
push
out
arpl
aaa
cmpb
lds
repz
movsl
divl
retw
test
push
repz
std
sub
insb
push
jns
movsb
lds
inc
push
xor
stos
rcrb
enter
xchg
shrl
or
outsl
mov
fwait
and
mov
xchg
jl
or
and
in
mov
js
fnsave
test
mov
sbb
add
mov
cmc
jae
cmpsb
or
xchg
cmp
cmp
sbb
lret
inc
mov
sbb
leave
push
repz
gs
mov
clc
fisubrl
mov
mov
sub
mov
pop
mov
daa
in
shl
pop
jmp
dec
clc
mov
insb
mov
cwtl
imul
dec
jg
sbb
inc
dec
sbb
movsb
in
jb
add
test
mov
push
xchg
cmc
leave
and
jnp
xchg
in
inc
mov
dec
inc
dec
and
jb
jge
pop
pop
adc
mov
push
mov
push
aaa
add
in
fstpl
leave
push
shlb
shll
gs
jmp
int3
gs
ss
pop
add
sbb
cmp
stc
pop
add
add
jb
jmp
jl
imul
outsl
jnp
ss
cmpsl
ljmp
mov
xlat
stc
push
inc
push
cmp
rorl
lock
jnp
gs
jo
cmp
enter
leave
aaa
imul
sub
mov
insl
test
jns
or
xchg
xor
dec
mov
mov
mov
sahf
ret
lock
mov
cmpsl
daa
addr16
rcrl
mov
jns
aam
add
mov
push
or
int
pop
push
cmc
mov
fdivr
loope
sbb
jnp
and
jp
mov
mov
sub
mov
xchg
int3
mov
jmp
push
xor
inc
inc
pop
loop
xchg
push
mov
and
int3
stos
xchg
cmp
add
imul
cmp
ret
call
push
pop
jne
test
add
rolb
pop
cltd
pushf
cmp
push
sbb
bound
pop
les
mov
sub
stos
mov
jge
fwait
lahf
dec
push
lret
jp
jmp
lock
add
lea
dec
pop
and
jns
leave
and
inc
lret
psubb
or
repz
xchg
insb
jne
fdivrs
mov
pop
dec
aad
mov
xchg
mov
push
sbb
test
or
inc
mov
lcall
dec
ror
push
ret
xchg
jl
mov
sub
add
add
jo
pop
mov
sbb
cltd
adc
push
or
pop
sbb
out
mov
cmp
es
jne
add
stos
dec
or
or
adc
int3
xlat
xchg
mov
dec
adc
comiss
scas
cmp
nop
pop
cli
inc
pusha
es
out
jno
in
sub
sbb
push
push
push
addr16
fdivl
push
std
mov
leave
inc
loopne
ret
imul
or
push
sub
pop
jmp
rcrb
daa
mov
rcll
mov
sbb
aam
sbb
cltd
dec
sub
lcall
xchg
or
pop
outsl
insb
and
mov
inc
adc
inc
jae
or
mov
or
movsl
scas
int
fwait
nop
inc
xor
pop
test
mov
fnstsw
clc
das
xchg
lods
mov
mov
xchg
cmpl
cli
lret
jb
inc
pop
leave
xor
sbb
sub
insl
sub
gs
add
repnz
andb
push
scas
mov
dec
cmpsl
pop
cmpb
pop
es
inc
or
enter
into
push
xor
mov
or
mov
and
stc
movsb
stos
sub
sarl
pop
jecxz
mov
out
xchg
dec
mov
lcall
jl
mov
lahf
push
pop
jmp
cmp
xchg
int
and
arpl
mov
aaa
aam
lds
xchg
ja
pop
inc
repz
gs
dec
outsb
shlb
inc
popa
inc
mov
push
or
mov
mov
jmp
imul
and
sub
mov
cltd
pop
mov
push
loope
xchg
icebp
inc
cmpsl
cmpsl
push
stos
push
mov
das
jmp
xor
testb
lock
jecxz
cli
add
and
into
fwait
call
clc
imul
sub
and
popf
push
cld
imul
sub
push
adc
jmp
js
and
std
push
lods
mov
adc
mov
movsb
inc
jmp
push
pop
cmp
push
out
out
test
mov
fidivl
push
data16
inc
loopne
jno
push
dec
int
jb
out
dec
je
sbb
pop
pop
ja
inc
nop
xchg
adc
inc
smsw
lock
clc
mov
or
dec
int
das
je
sbb
call
adc
hlt
imul
ret
clc
cmpsb
cmp
out
xchg
lret
and
adc
sub
rorl
mov
ss
scas
adc
scas
cmpsb
mov
clc
repz
divb
or
loope
and
arpl
nop
test
pop
adc
xchg
jne
mov
in
xchg
mov
jp
out
xor
push
vpdpwssd
pop
adc
mov
push
shrl
mov
outsl
pusha
in
imul
mov
xchg
push
int3
aas
enter
movsl
mov
inc
jg
ljmp
out
mov
icebp
jb
stos
idivb
push
push
sub
lret
fadds
test
and
jbe
mov
mov
dec
rol
ror
negl
cmp
mov
xchg
insb
or
xchg
cmp
jbe
adc
cmpsl
in
out
mov
mov
mov
shll
pop
or
into
push
jecxz
sub
cmp
or
cs
ljmp
data16
jg
cli
pushf
arpl
add
sti
out
shl
push
popf
jae
bound
cli
inc
xchg
and
mov
dec
add
sub
inc
pop
pop
mul
cltd
mov
pop
mov
scas
outsl
andb
enter
cmp
mov
and
inc
xchg
loopne
or
pusha
xchg
inc
xlat
pop
lods
mov
jnp
mov
iret
sarl
gs
cwtl
lcall
mov
inc
aas
push
jge
cmp
repnz
lock
xchg
xchg
or
xchg
mov
and
xchg
out
clc
adc
cmpsb
pushf
dec
and
ret
cmp
mov
movb
jno
stc
stc
dec
mov
pusha
xor
push
sub
xor
lahf
test
cmp
mov
cmp
adc
jecxz
mov
sub
fsubs
inc
imul
dec
enter
enter
icebp
imul
mov
or
in
xor
inc
adc
mov
dec
xchg
test
mov
and
xor
loopne
push
mov
lds
adc
lret
mov
gs
sbb
outsb
in
xlat
adc
outsl
testl
xor
movsl
ljmp
pop
sub
and
and
add
mov
cwtl
pop
pop
clc
mov
mov
push
push
aaa
fs
xchg
cli
push
xchg
dec
xor
fistps
jmp
popf
scas
shlb
popf
mov
fisubs
mov
inc
outsb
sbb
adc
and
pop
mov
push
jns
adc
inc
enter
sbb
insb
fldl
or
popa
or
fadd
push
xor
imul
or
out
and
inc
xchg
fxch
jmp
adc
cmp
pop
ret
push
and
mov
sub
fdiv
and
popa
xchg
popa
adc
lods
call
aad
jle
and
mov
jge
or
sbb
mov
and
or
cmp
xlat
jp
es
add
jge
sub
jp
inc
lcall
lock
mov
sbb
cmp
out
faddp
pop
je
jmp
mov
addps
in
push
inc
mov
ja
enter
mov
xor
lds
pop
mov
inc
or
add
sbb
pusha
mov
dec
mov
fistpll
xor
nop
cmp
adc
xchg
xchg
xor
sbbl
xor
or
fisttpl
inc
xchg
mov
sbb
ds
repnz
je
movsb
jle
pushf
sub
and
pushf
in
fisttpl
in
aaa
pop
push
pop
fistpll
jne
mov
sbb
daa
pop
pop
insl
lret
sarb
push
xchg
push
js
icebp
or
mov
scas
hlt
lock
out
lahf
in
call
jmp
jbe
push
les
lods
mov
in
sub
nop
mov
subl
sbb
test
pop
inc
cmpsb
lret
bound
mov
or
mov
mov
test
arpl
arpl
into
stos
mov
outsb
xchg
fstpt
adc
mov
pop
fwait
test
xchg
jo
push
fsubrl
cltd
rorb
mov
and
mov
shr
test
mov
adc
xchg
addr16
ds
fdivl
inc
ja
mov
mov
clc
push
xor
jecxz
mov
ds
in
mov
lret
lahf
mov
popf
pop
dec
cmp
mov
rorl
mov
cwtl
hlt
sti
jg
je
jno
insb
sbb
out
je
jge
leave
lahf
rorb
mov
addr16
mov
jl
inc
rcl
sub
mov
sbb
xor
fldcw
cmp
or
mov
dec
lds
sub
hlt
cli
xchg
stc
sbb
js
dec
repnz
idivb
or
fdivr
ror
push
pop
adc
cmp
scas
sub
cmp
pop
pop
mov
and
int
out
lock
push
pop
dec
mov
mov
jne
icebp
loop,pt
mov
jns
mov
lcall
cmp
mov
adc
and
test
shll
push
xchg
jbe
push
push
sbb
addr16
xchg
mov
and
daa
jmp
sbb
loop
jge
mov
and
ret
repz
sub
or
sbb
push
adc
faddl
mov
cmpsl
addl
jnp
jl
jle
jns
xor
fwait
push
fs
movsb
es
cld
stos
lods
test
psubsb
aaa
pop
cs
dec
fldl
mov
cwtl
dec
jmp
addl
movsl
in
fsqrt
dec
ja
dec
aaa
rorl
shl
rcrb
and
pop
mov
adc
and
int
mov
jmp
xor
xor
rcl
subl
and
les
and
leave
bound
nop
jo
clc
dec
and
daa
or
popa
adc
dec
leave
inc
lds
pushf
sub
inc
fiadds
test
cmp
dec
vpmaxsw
imul
test
pop
pop
shll
push
and
pop
fs
cmp
in
icebp
sarb
gs
sahf
fwait
xchg
xchg
shrl
outsb
popa
jp
jmp
and
or
xor
iret
loop
out
mov
mov
out
and
push
cmpsb
sbb
lcall
ret
mov
push
and
jecxz
mov
lds
ljmp
mov
ja
xchg
pop
rorl
sbb
lret
iret
dec
mov
and
mov
pop
mov
jo
fdivr
xchg
and
sub
insb
mull
push
and
pop
mov
mov
pop
sti
lret
lcall
adc
mov
inc
cs
jge
mov
test
test
gs
xchg
and
cmpsl
aad
sarb
lahf
and
loope
pop
adc
outsl
dec
sbb
jmp
sbb
cmp
push
xor
ja
mov
in
cld
das
lret
pop
lods
xor
into
out
int
adc
negb
and
dec
or
xor
sbb
lods
fisubrs
xlat
mov
repnz
ds
sbb
inc
jnp
outsl
push
add
pop
xchg
gs
into
or
cltd
add
cs
cmp
push
add
hlt
stos
into
jo
pop
lret
cmpb
jns
dec
js
mov
push
mov
shll
mov
popa
adc
jge
mov
dec
jg
lcall
popf
xchg
sub
emms
inc
outsl
jecxz
xor
int3
lret
outsl
dec
lock
aas
aam
sbb
adc
repnz
or
insb
pop
imul
mov
test
icebp
push
pop
icebp
addr16
lods
stos
es
inc
ret
in
mov
mov
cmpsb
ja
jmp
and
movsb
push
cltd
sub
inc
inc
and
sarl
arpl
mov
cmpsl
sbb
call
or
mov
addr16
push
jge
mov
add
cli
stc
insb
jg
mov
push
push
hlt
inc
jmp
inc
fisubl
aam
adc
pop
lods
out
push
xor
std
sub
call
and
xlat
xchg
jp
lcall
in
jns
xlat
xor
sarb
cmp
in
insb
mov
addb
mov
vmread
popa
js
adc
loop
arpl
mov
pop
mov
call
lahf
pop
daa
jge
fimuls
pop
js
sub
inc
adc
push
cs
sub
lret
fstpl
jne
fcoms
pop
cmp
stos
rol
call
push
xlat
fsts
dec
mov
cltd
jle
push
xchg
jg
or
and
cltd
adc
jno
add
mov
jnp
xor
push
cmpsl
decb
mov
js
rorl
lahf
xlat
test
lcall
cmp
or
pop
inc
pop
outsl
int3
out
jae
and
xchg
lods
sub
ds
es
pop
and
scas
sub
lea
inc
mov
and
pop
addr16
mov
testl
incl
mov
pop
mov
lret
xchg
mov
mov
movsb
mov
lods
cmp
jnp
imul
inc
or
shll
scas
xor
iret
push
inc
xlat
adc
mov
mov
sbb
push
lods
xor
and
jns
adc
push
cmp
lret
jns
ret
jno
dec
lds
jnp
stos
push
sbb
xchg
mov
call
repnz
flds
dec
cmpsl
cmp
xchg
dec
mov
test
test
movsl
pop
out
daa
or
in
sbb
add
hlt
cmp
mov
aas
inc
cli
sbb
push
test
ret
push
fsts
inc
leave
mov
add
shlb
imull
push
mov
jb
enter
scas
stos
mov
roll
jne
adc
pop
and
xchg
xor
add
aaa
sbb
inc
hlt
mov
test
sbbl
inc
repz
cmp
inc
jne
sbb
mov
aas
and
shll
add
movsb
arpl
mov
mov
pop
cwtl
mov
lock
xchg
dec
cmpsl
popa
cmp
roll
xchg
pop
jb
sub
mov
sub
inc
mov
aaa
jge
test
jbe
test
push
stos
cmp
jmp
dec
stos
mov
mov
and
inc
cli
ja
insb
jl
aaa
hlt
out
scas
out
pop
and
cwtl
mov
sbb
orl
jp
lret
xlat
push
imul
lret
int
cmpsb
ljmp
sar
inc
sub
loope
popf
popf
cmpsl
push
imul
stos
pop
std
adcb
repnz
xor
sbb
cs
dec
ja
les
aas
sub
sbb
std
adc
in
jbe
je
data16
stos
xor
rcl
sbb
aad
sub
roll
call
out
dec
mov
push
loopne
xchg
and
xchg
jo
movsl
fs
in
in
ja
scas
in
xor
rcrl
incl
imul
mov
mov
lcall
and
mov
adc
mov
outsb
rcrb
out
cld
mov
aad
movsb
inc
es
aas
push
pop
lret
das
imulb
xchg
cli
cli
adc
or
sbb
xchg
mov
shr
lea
enter
sub
mov
ror
adc
lods
cmpsb
data16
sti
aaa
lcall
mov
sub
mov
xchg
mov
subb
adc
aad
cltd
jecxz
adc
cmp
dec
inc
fcomi
ja
mov
inc
adcb
aaa
inc
inc
pop
rcr
jb
hlt
aam
cmpsb
ret
out
nop
cmpsl
mov
mov
add
xor
rorl
and
mov
lahf
and
ss
sbb
adc
cmpsl
or
sub
in
out
pop
cwtl
xor
jg
imul
mov
aam
dec
outsb
dec
test
lds
xor
stos
push
nop
rolb
repz
push
test
gs
sbb
xor
rorb
cli
ss
mov
cmp
fcomps
test
jp
mov
mov
cmp
jmp
and
sub
jmp
into
sbb
bound
cmc
jg
mov
inc
or
imul
mov
mov
and
ja
pop
loopne
stos
sub
pop
shll
push
xchg
ljmp
cmc
adcl
fwait
xchg
dec
test
stos
add
push
fwait
push
ds
add
xlat
xchg
mov
pop
mov
mov
mov
icebp
push
pop
fisttpll
insl
jne
into
dec
test
mov
mov
lods
pop
les
dec
nop
jns
fistps
jns
adc
jge
mov
push
xchg
cmp
dec
push
mov
fs
fldln2
es
sbb
rclb
movsl
fcoml
or
imul
jo
jb
jle
adc
aas
aam
fsubl
xor
les
sub
enter
jbe,pn
jnp
mov
sbb
mov
jg
sub
pop
sbb
mov
or
mov
push
xchg
sbb
shll
mov
push
dec
push
pop
addr16
enter
xchg
lahf
pop
push
mov
fildl
outsb
lock
into
sub
push
cmp
lods
insl
stc
mov
xchg
or
mov
imul
ret
pop
sahf
or
add
fdiv
and
in
add
stos
push
cmpsb
sub
rorb
mov
xor
test
push
xchg
leave
xor
pop
in
hlt
fcompl
cmp
mov
outsb
dec
lret
jg
nop
mov
xor
dec
ss
inc
cmp
mov
cmpsb
out
sub
lret
fistps
xchg
mov
mov
in
rorb
inc
cld
cmp
push
movsl
dec
dec
mov
jnp
xor
int
xchg
out
ficoms
jp
mov
xor
out
inc
daa
aas
push
push
xchg
stos
inc
popa
xor
loopne
cltd
cli
fcompl
push
adc
cmp
scas
dec
sub
std
push
xchg
stos
lret
adc
cltd
inc
shlb
movsb
add
cmp
scas
pop
scas
outsb
dec
push
inc
sub
jp
adcl
mov
decb
cmp
mov
cmc
repz
cwtl
xor
or
sbb
sti
push
jp
sbb
adc
xchg
idivb
in
jl
mov
lret
push
jp
mov
fisubl
pop
sub
mov
pop
sbb
lock
sbbl
mov
xchg
sbb
fdivp
dec
cli
rclb
out
dec
arpl
adc
push
jne
or
mov
ret
ret
addr16
shrl
out
push
fidivrs
mov
and
mov
insl
in
ljmp
cmpsb
jmp
stos
pop
addr16
ret
data16
jl
fwait
out
test
and
mov
fists
out
sub
mov
dec
dec
pop
ret
lahf
pusha
repnz
mov
push
or
pop
fdivrp
push
lahf
scas
das
test
ja
jge
lods
hlt
in
and
pop
xorl
sbb
push
mov
aaa
clc
int3
sti
or
icebp
mov
aad
notl
call
nop
jne
jns
out
and
aam
lds
or
xor
enter
je
or
pushf
jmp
xor
push
dec
jno
push
add
dec
ret
push
leave
lret
lret
cmc
and
cltd
mov
cmp
cwtl
cli
mov
mov
popa
add
jg
push
jle
inc
xchg
outsb
test
loop
inc
or
out
sbb
xlat
stos
popf
jb
or
gs
mov
mov
mov
outsb
jge
rclb
ficomps
xor
inc
int
arpl
jns
test
sub
add
adc
pop
imul
pop
cmp
sar
in
out
push
or
adc
das
loope
popf
ret
movsl
repz
jmp
sar
das
lahf
add
pop
push
bound
or
shlb
mulb
popa
cmp
jo
mov
sbb
mov
sahf
out
xchg
xchg
fisubs
lret
fwait
mov
inc
inc
xchg
insl
inc
bound
mov
outsl
shlb
leave
mov
and
fidivl
mov
sbb
dec
aad
push
outsl
outsb
hlt
sti
testb
dec
outsl
mov
iret
or
lcall
incb
lcall
xchg
cmp
jle
cli
int
or
out
mov
in
ret
or
movsl
pop
cmpsb
notb
push
push
pop
scas
outsl
loopne
or
cmpb
or
adcb
xlat
xchg
test
add
dec
pushf
pop
pmulhuw
sahf
andb
push
pmullw
popf
pop
xor
lea
imul
sbb
pop
inc
test
fsts
cmp
cli
mov
ficoml
or
sbb
test
push
shll
dec
test
sbb
xchg
arpl
mov
mov
sbb
movsl
scas
cmp
daa
add
lea
mov
imul
inc
push
std
outsb
pop
cmp
xchg
adc
stos
arpl
cmp
out
movsb
sbb
aad
xchg
and
push
jb
push
ret
jns
lret
pop
aas
push
jo
daa
jno
das
jmp
inc
je
jns
roll
mov
and
lods
cmpsb
jbe
cmpsb
inc
cs
in
cwtl
loopne
fs
adc
mov
filds
sub
iret
mov
out
pop
icebp
mov
ret
sub
test
mov
inc
dec
pop
test
repnz
inc
push
lahf
jo
mov
divl
jle
jo
mov
pop
test
mov
push
movsb
adc
sar
push
sbb
jl
inc
rcrl
xchg
xchg
sbb
fwait
mov
mov
xchg
lods
ret
ret
fcmovnb
jg
pop
rclb
cwtl
push
jo
mov
jg
dec
jecxz
push
mov
jge
int3
repnz
cmp
lods
int
dec
mov
lods
pop
push
jg
xchg
pop
inc
cmp
popf
mov
popf
lcall
int
jbe
cmpsl
pop
pop
and
ret
lods
in
insb
aam
push
cmpsb
push
and
inc
outsb
scas
cmp
adc
or
xor
and
ret
mov
pop
cmp
nop
add
inc
mov
jmp
xor
outsl
mov
xor
dec
cmp
jmp
adc
subb
pop
xchg
lods
test
push
in
mov
or
jnp
mov
lret
aad
pushf
push
movsl
push
mov
cmpsb
mov
iret
mov
pusha
loope
and
gs
dec
adc
jbe
loop
push
test
cmc
add
sbb
push
mov
scas
or
or
inc
aam
push
or
push
insb
mov
lods
cli
scas
inc
sub
leave
sahf
jo
lea
lret
rcrl
adc
int3
push
mov
xor
mov
cld
popa
jbe
inc
fildll
mov
push
cld
ja
repz
add
mov
jns
sbb
lds
xchg
sti
mov
sbb
sbb
test
lea
je
sub
or
or
ss
sub
aam
lret
jmp
dec
popa
add
mov
inc
xor
pop
jg
je
in
mov
movsb
out
pop
mov
pop
icebp
vdivsd
pushf
cmp
xor
pop
inc
or
iret
ljmp
xor
test
jne
jl
inc
inc
gs
add
push
pop
and
sub
scas
mov
mov
out
and
cld
sub
jmp
xchg
add
mov
enter
pop
fistpl
xor
jne
addl
mov
add
mov
test
mov
mov
or
scas
fisttps
mov
lock
xchg
sbb
punpckldq
inc
insl
add
fisttpl
out
or
mov
adc
or
mov
nop
lahf
dec
imul
data16
or
jae
sub
testl
or
inc
jmp
ret
cli
push
add
sbb
pop
std
stos
cmp
cmc
inc
pop
mov
pusha
ljmp
jmp
mov
imul
pop
fdiv
jbe
and
xorb
dec
add
pop
mov
es
jmp
mov
ret
fmull
mov
cld
fisubl
pop
xchg
mov
push
adc
jmp
add
scas
inc
hlt
lret
pop
mov
loope
jns
xchg
aaa
subb
loop
nop
scas
je
mov
pop
add
in
mov
add
push
ror
sub
xchg
add
cmc
rcll
mov
stos
mov
popf
push
shll
pop
sbb
ja
add
loopne
xor
xor
ret
mov
cmp
jno
mov
inc
andb
jp
sarl
stos
xchg
or
imul
inc
jle
inc
ljmp
rorl
lret
lods
sbb
hlt
lods
into
mov
rcl
push
sbb
adc
mov
add
dec
scas
xchg
test
dec
sub
jbe
inc
je
add
dec
mov
sub
or
push
cld
repnz
lods
addr16
dec
inc
and
imul
pop
sbb
pusha
cmp
adc
ljmp
jbe
mul
fsubp
icebp
call
icebp
das
lahf
pop
nop
add
loope
jge
mov
cli
mov
adc
jmp
mov
movsb
mov
shll
pop
sbb
mov
jle
loopne
cwtl
inc
divl
pop
adc
mov
mov
les
ljmp
in
mul
mov
fwait
or
push
aaa
test
test
cwtl
hlt
xor
inc
fldt
xor
insl
test
mov
outsb
outsb
jmp
jp
sbb
push
cmp
xchg
or
test
imul
and
bound
add
push
jge
jmp
or
adc
clc
push
lahf
aas
sub
fsub
xchg
mov
cmp
in
jno
sti
fisubs
mov
aad
fisttpl
dec
mov
mov
or
stos
pminub
pop
add
imul
movsl
dec
cmp
loop
sbb
add
xchg
xor
mov
pusha
push
push
into
or
xor
inc
leave
scas
scas
mov
adc
lret
add
test
mov
adc
xor
outsb
mov
ds
stos
movsl
js
inc
jge
adc
inc
inc
pop
push
pusha
mov
fnstcw
mov
push
iret
mov
scas
sbb
lods
sbb
pusha
test
fcmovb
out
jge
xchg
out
mov
cmc
push
and
movsb
xchg
pop
loope
ret
aad
stos
ljmp
jmp
jnp
in
ffree
mov
mov
and
jnp
cld
jge
push
xchg
popf
jge
sbb
push
pop
mov
sub
cmp
inc
test
cltd
pop
fdivrl
cmpb
int
mov
js
mov
repz
stc
pushf
adc
cmpb
out
mov
or
std
fsubrl
pop
popa
jl
push
mov
jg
push
insl
and
fisttpll
push
pop
push
xor
aas
inc
sbb
inc
mov
scas
mov
cmpsb
and
fsubl
nop
shlb
sub
jl
pop
xchg
jb
stc
and
sbb
addr16
jne
mov
adc
push
xchg
test
nop/reserved
sbb
int
loope
in
ret
popa
fsubl
bound
mov
sbb
mov
aam
fucomi
pop
xor
mov
xchg
mov
stos
rcll
xor
mov
cs
cld
orb
fistl
dec
jno
xchg
fcomip
movsl
jg
cmp
sbbb
jbe
dec
sub
out
andb
push
inc
mov
mov
inc
xlat
out
push
dec
rcrl
cmpsb
and
push
xchg
dec
cltd
int
xchg
inc
xchg
sub
pop
jnp
test
lcall
pop
push
jmp
pop
sbb
sbb
cmpsb
cmpsb
rorl
ret
fwait
cmpsb
or
gs
mov
inc
testb
sbb
call
movsb
xor
and
hlt
adc
int
add
divl
cmp
inc
push
lahf
aas
sbb
sub
add
lea
mov
testb
sti
mov
popa
push
cli
mov
push
imul
mov
dec
cwtl
pushf
xor
repnz
lea
pop
shr
cwtl
xchg
sbb
xor
push
fwait
lcall
mov
int3
mov
xchg
int3
ja
sbb
pop
dec
lret
mov
scas
es
ficomps
jp
jbe
leave
and
jmp
addr16
xchg
shlb
push
imul
dec
movsl
popa
mov
pop
cld
add
dec
xor
push
mov
in
call
push
jne
sub
sub
xchg
xor
jp
pusha
insb
cmp
mov
in
xor
das
nop
sahf
ja
sub
mov
jp,pn
sub
mov
cmp
or
out
mov
lods
cli
or
test
push
bound
popa
les
fsubrl
jnp
mov
mov
inc
stos
pop
aad
inc
dec
into
jae
ds
flds
aaa
jae
lea
cli
fcmovu
stos
push
jge
scas
inc
test
mov
sahf
cmp
scas
pop
pop
rorb
jg
rcll
mov
push
divb
in
mov
cwtl
into
xor
aam
inc
out
mov
push
sub
lcall
mov
call
and
adc
and
das
popa
xor
mov
loopne
push
jae
mov
sub
mov
dec
ljmp
xor
arpl
popf
shll
insl
mov
ja
mov
out
subb
mov
imul
stc
mov
cmp
fsts
cmp
xchg
mov
lock
arpl
mov
outsb
dec
sub
popf
jnp
mov
push
or
cmpsl
outsb
mov
inc
sar
jmp
ljmp
scas
enter
js
push
test
imul
dec
lret
cmp
movsb
xor
xchg
test
and
add
es
into
fists
loop
shl
lods
fs
inc
mov
fidivrl
mov
popl
cwtl
popf
mov
fs
dec
sbb
add
jmp
inc
jbe
lods
sbb
jp
add
xchg
adc
mov
iret
ljmp
and
push
insl
pop
lea
dec
xchg
cmpsb
add
aaa
or
jmp
out
adc
in
jecxz
jbe
lods
mov
lock
dec
push
adc
jb
inc
bound
loopne
xchg
test
sti
push
jecxz,pn
movsb
das
sub
pop
push
mov
dec
out
insl
xor
dec
lock
lcall
xchg
cmp
and
push
sub
loopne
sbb
and
fwait
xchg
outsl
out
inc
jne
loope
pop
or
pop
lret
adc
mov
jb
outsb
enter
push
mov
out
loopne
mov
mov
add
or
repz
jne
int
loope
inc
push
stc
or
ret
pop
in
pusha
inc
push
dec
repnz
cmp
mov
xor
sub
xor
adcb
pop
rcrb
or
xchg
nop
inc
push
add
addr16
cmp
cmp
push
mov
mov
lcall
xor
ret
ds
std
sub
shrb
imul
bound
out
daa
insb
add
cmp
inc
and
xor
mov
and
ret
xchg
faddp
rcrb
xchg
inc
dec
rolb
gs
mov
clc
xchg
sbb
das
pop
and
jbe
jno
fstpl
pop
jecxz
mov
insl
push
or
call
dec
sub
or
rorl
jg
iret
mov
cli
test
es
mov
cmpsb
adc
out
add
pop
xchg
pop
and
js
pop
pop
rcrb
xchg
std
mov
cmp
imul
nop
aaa
iret
push
xor
stos
adc
fstl
das
fwait
outsl
dec
mov
jle
mov
test
pop
push
leave
xlat
add
sbb
cmp
dec
jae
inc
dec
fsts
pop
or
add
sbb
pushf
cwtl
ds
cmp
movsb
stc
mov
xor
shrl
adc
xchg
test
pop
dec
mov
push
cltd
js
sub
test
push
push
fsin
fwait
or
stos
jecxz
sti
ret
adc
scas
push
jge
dec
leave
pop
jle
add
adc
sub
inc
lret
mov
xlat
cmp
mov
ror
scas
sahf
xor
mov
mov
sbb
popf
lret
insl
lret
insb
sub
test
in
xor
mov
jg
lock
imul
movsl
sbb
pusha
mov
iret
dec
mov
inc
mov
cmpsl
xchg
ret
jbe
shrb
cmp
mov
mov
lret
mov
lahf
jne
stos
inc
xor
xchg
lcall
int3
or
mov
outsb
daa
call
jmp
div
fstpt
adc
xor
in
add
rol
leave
test
push
aaa
or
inc
lock
mov
pushf
xchg
test
and
sahf
mov
pop
insl
ss
inc
or
ret
add
loope
dec
jle
pop
into
xor
pusha
scas
out
adc
xchg
dec
frstor
push
xchg
xor
cmpsb
jge
or
mov
cmpsl
dec
adc
cld
lahf
bound
jnp
lahf
push
sub
fldcw
hlt
and
jmp
scas
dec
add
js
inc
mov
in
adc
xchg
adc
mov
lods
stos
inc
jp
imul
into
mov
mov
cmp
gs
or
inc
stos
pop
push
pop
push
or
mov
test
pop
inc
cltd
test
sub
xchg
jae
imul
mov
xchg
loopnew,pt
xchg
jnp
jecxz
and
sbb
jno
sub
js
mov
add
shlb
xor
pop
sbb
push
xor
mov
sahf
or
and
rcr
mov
in
ljmp
aad
mov
out
pop
mov
sbb
push
add
jae
adc
inc
ret
rcrb
cmpl
fisttps
testb
repnz
ficoml
test
add
push
cmp
loope
test
lret
lret
ret
loop
movsl
movsb
mov
adc
sbb
sbb
mov
mov
xlat
pop
mov
dec
sti
inc
jo
and
and
inc
imul
inc
add
fdivl
add
arpl
rclb
mov
xchg
mov
cltd
or
sub
push
cmp
add
cmp
lods
testl
lret
add
pop
cmp
mov
cwtl
and
jmp
push
loopne
dec
dec
andb
adc
lahf
and
popa
push
imul
add
stos
and
gs
scas
ds
outsb
xor
xchg
daa
sar
test
and
add
push
cmp
xor
or
jbe
xchg
cmp
cmp
clc
outsb
mov
fs
add
mov
subb
push
stc
lcall
je
mov
aas
sbb
push
shlb
sub
test
mov
xchg
cli
pop
adc
sub
sub
mull
gs
mov
or
cmp
mov
xor
and
jmp
mov
xor
mull
xchg
gs
scas
data16
xor
jmp
decl
cwtl
icebp
rcrb
jno
in
out
push
je
mov
push
pop
mov
jg
pop
mov
ds
cmp
cs
call
sbb
jbe
cmp
fwait
dec
pop
xor
fcoml
filds
jecxz
or
push
xchg
lahf
shll
pop
cmp
enter
mov
cmp
lret
pop
gs
mov
imul
cmp
mov
cmp
lret
scas
and
cmp
add
ja
inc
stc
icebp
xchg
sbb
iret
jp
mov
outsb
mov
aaa
addr16
fwait
test
das
test
ficompl
sbb
cld
and
daa
int3
mov
xlat
cmc
ret
xor
imul
fimuls
and
das
and
insb
fisttpl
xor
fmull
sub
lea
outsb
in
popa
fcoml
xchg
push
mov
sub
dec
int
lcall
shl
shlb
fnstsw
inc
daa
xchg
mov
cmp
sub
or
pop
jae
ljmp
or
pop
push
jg
adc
or
cmc
scas
cmp
shlb
push
cmp
fstl
mov
push
stc
sbb
xor
xchg
or
push
sbb
add
cs
push
cmp
lods
adc
mov
ss
out
adc
outsl
lcall
cwtl
push
jmp
imul
gs
and
fbstp
loopne
int
sub
xor
jb
js
lahf
inc
adcb
icebp
xchg
mov
in
int
jo
mov
or
pop
dec
jecxz
lods
call
sbb
mov
outsb
sbb
push
sbb
pop
xlat
pop
adc
inc
loopne
lods
mov
xor
subl
mov
jne
push
adc
aad
jg
jns
pop
icebp
mov
rorb
mov
push
adc
stos
push
adc
xchg
jbe
inc
imul
popa
mov
mov
fdivs
push
pushf
add
lahf
lds
enter
jne
mov
jge
sbb
aas
ss
lds
push
mov
stos
xchg
inc
std
xchg
hlt
lcall
mov
sbb
adc
xor
gs
add
fnstenv
pop
jb
and
xor
adc
aam
cwtl
pusha
call
adc
lret
stos
mov
or
stos
test
stc
inc
xchg
push
lcall
ljmp
rcr
iret
mov
mov
lock
ja
pop
jmp
or
ret
adc
aas
and
mov
icebp
pop
pop
pop
add
mov
xor
loopne
ja
loopne
lret
ljmp
push
sahf
pop
test
ja
scas
mov
mov
pusha
add
sub
push
lcall
roll
sub
mov
pop
jl
imul
lods
adc
mov
popf
addr16
clc
sub
push
lcall
popa
imul
dec
mov
dec
add
sbb
inc
or
jmp
ret
jl
movsb
popa
add
lods
sub
mov
shlb
insl
data16
or
jns
dec
jae
cmpl
das
ss
pop
cwtl
inc
xchg
mov
std
sti
pop
pop
andb
cmp
xor
mov
xor
cmpb
shrb
add
nop
mov
lds
addr16
in
dec
aas
jecxz
and
mov
stc
daa
clc
mov
pop
sbb
mov
or
adc
popf
adc
js
jp
daa
test
xchg
jne
and
push
mov
mov
adc
and
cli
fwait
push
les
stos
hlt
pusha
scas
fst
sbb
inc
push
push
popa
into
cmp
insb
and
dec
bound
std
mov
mov
adc
ret
dec
push
aaa
lret
cli
mov
jno
js
pop
cmp
jl
jecxz
adc
clc
sti
mov
or
xchg
inc
ret
and
dec
into
cmp
std
push
ja
push
arpl
dec
cmp
xchg
mov
mov
mov
inc
popf
aas
mov
fdivrl
jmp
mov
add
lock
mov
out
push
sbb
in
out
or
add
loopne
inc
sbb
adc
mov
insb
cld
sub
loope
inc
dec
mov
inc
sub
mov
jo
std
or
cwtl
mov
scas
fimuls
mov
clc
mov
dec
es
push
mov
pop
fucomip
cmpsl
test
out
cmp
leave
arpl
inc
loopne
decl
push
dec
stc
ja
addl
add
adc
or
cmp
xchg
push
xchg
movb
jl
fldl
test
movsl
push
pop
and
jo
bound
ret
inc
inc
int
mov
push
mov
mov
leave
out
fcmovbe
add
jae
mov
push
sub
jns
lods
xor
add
mov
pmaxub
mov
repnz
mov
and
lds
inc
imul
or
jnp
imul
dec
in
jno
mov
mov
pop
mov
sub
adc
cmp
test
xor
lds
pop
mov
aas
movsl
insb
sub
shrb
pushf
jne
and
test
sbb
jmp
scas
sbb
arpl
or
fcomps
and
xchg
rcrb
cmpsl
sahf
popa
scas
mov
mov
xor
loope
push
bound
std
jb
sbb
add
fucomip
cmp
pop
nop
add
fidivl
lods
rolb
inc
sbb
in
gs
jns
xor
shll
jle
cmove
cli
push
adc
ja
sbbb
cs
pop
pushf
lahf
ret
adc
inc
dec
outsl
push
pop
dec
jb
test
xchg
xchg
sub
inc
jo
aas
stc
xlat
sbb
enter
test
je
adc
sti
sahf
dec
push
insl
push
cmp
mov
mov
shrl
push
imul
cmpb
imul
loopne
adc
loope
inc
jl
xchg
push
mov
stos
into
add
loope
jae
sub
jle
xor
loope
imul
stos
aaa
mov
inc
adc
sahf
add
sbb
pop
xlat
adcl
push
jno
jp
aaa
addr16
and
repz
iret
scas
nop
cld
xor
insl
mov
cmc
xor
mov
inc
inc
leave
cs
adc
sarb
jno
outsb
scas
xchg
adc
into
sbbl
pop
test
jne
lcall
negl
xor
sub
cld
fistpl
xor
pop
ds
xchg
mov
cmpsb
add
pop
popa
inc
call
pop
push
aas
out
and
enter
xchg
or
push
ljmp
or
cmp
ss
addl
cmc
sub
pop
mov
enter
push
outsb
imul
mov
roll
jns
mov
xchg
mov
in
jb
cmpsl
dec
push
cli
ror
popa
dec
popa
pop
xchg
xor
lret
popf
mov
das
push
ja
mov
xchg
inc
or
dec
ljmp
xlat
rorl
mov
popf
lods
loope
aam
jmp
pop
std
pop
test
pop
xor
data16
or
push
mov
gs
mov
cmp
inc
fwait
xor
loop
js
ss
cli
loope
pop
push
push
mov
xchg
mov
fbld
movsb
mov
adc
jle
xchg
pop
or
fs
xchg
push
iret
jo
pop
mov
push
jg
mov
clc
shlb
hlt
dec
inc
and
pop
dec
xchg
inc
mov
cld
jne
sbb
aad
mov
lret
call
inc
push
xchg
jne
outsl
xchg
aam
pop
inc
out
mov
jp
jae
inc
dec
mov
std
jl
into
jp
ja
push
mov
lahf
xchg
out
jge
xchg
dec
lds
scas
leave
add
cs
cmp
in
pop
and
scas
jo
jl
mov
int3
call
mov
addr16
decb
call
add
pop
push
mov
outsb
mov
dec
fdivrl
inc
xor
test
jns
and
aaa
pop
js
icebp
mov
and
or
mov
clc
daa
dec
pop
sahf
and
cmp
test
je
mov
mov
push
mov
cmp
sub
or
pushf
pop
lret
dec
cmp
push
cmp
push
and
std
pop
cwtl
jl
shl
sub
fsts
lods
test
xor
or
mov
mov
sbb
loope
push
pop
push
dec
test
add
lea
sub
cmc
mov
pand
and
fwait
dec
popf
xor
or
jne
lcall
ficoms
stc
mov
out
cmp
lds
ret
pop
sti
xchg
fidivs
pop
psrad
mov
inc
dec
xor
xchg
loope
push
fildll
xor
shl
or
out
fwait
bound
cmp
xor
pop
scas
add
sahf
cmp
data16
fs
pop
popf
add
xor
mov
fs
inc
std
push
jle
dec
push
es
imul
jl
lock
sub
outsb
in
loop
fwait
adc
mov
js
cmp
xlat
cmp
mov
loop
cmp
dec
add
cltd
inc
ret
push
subb
mov
es
loop
orb
lret
add
mov
xor
sub
shlb
sbb
pop
nop
je
add
pop
int3
mov
dec
jg
mov
ljmp
incl
cltd
in
das
int3
popa
or
into
mov
xchg
cmp
xchg
in
in
mov
mov
mov
jl
imull
inc
and
leave
ret
dec
scas
inc
insb
pop
pop
rcrl
jecxz
mov
push
fstpl
and
pusha
mov
mov
rcr
or
mov
sbb
incb
imul
jp
xchg
cmc
lods
xchg
dec
mov
xor
jle
int3
jo
jecxz
jmp
test
sub
pop
inc
frstor
lret
and
sbb
xchg
int
out
fiaddl
add
cld
cmp
nop
int
dec
xchg
mov
icebp
xchg
sbb
xchg
and
jg
mov
dec
subb
rorl
mov
daa
and
std
in
bound
xor
icebp
or
mov
ficomps
outsl
add
jecxz
xchg
push
inc
cmovge
mov
sbb
ds
call
divb
push
cmc
or
sbb
aas
push
aad
sub
popf
loop
xchg
sti
sub
and
push
bound
pop
xor
mov
fsub
pop
jbe
ljmp
cmpsl
cmc
lcall
mov
das
mov
push
mov
inc
push
and
push
inc
pop
int
pop
xchg
xchg
adc
mov
pop
icebp
test
mov
mov
fistpll
dec
xor
mov
xchg
dec
vpsrld
fdivl
dec
pop
xor
loop
or
lods
pop
fistpl
aas
sbb
fadds
and
pusha
cmp
push
or
dec
add
insl
jmp
mov
mov
mov
insl
mov
cld
scas
in
mov
sar
mov
push
insb
jp
push
popf
mov
push
cmpb
fsubrl
daa
and
push
sti
inc
dec
ss
xchg
jne
sub
cmp
js
pop
es
leave
cmpsl
jle
and
insl
add
insb
push
inc
in
and
inc
jg
or
jl
push
rorb
dec
outsb
shll
inc
lea
adc
cmp
xor
xchg
dec
dec
jnp
pop
and
sbb
imul
cmovbe
xchg
sub
cmpsb
lods
pop
ret
nop
cld
fidivs
into
mov
cs
aam
lods
sub
xchg
sub
lods
add
mov
cmc
dec
in
xor
and
mov
pop
wrmsr
stc
mov
add
jbe
mov
rcl
inc
sarb
xlat
xchg
sbb
sub
adcl
xor
test
neg
or
fildll
gs
cmpsl
inc
in
push
repz
orl
rcll
sti
xor
lret
mov
or
aaa
push
call
sub
sbbl
or
loop
jns
xchg
clc
mov
test
fidivrs
pop
adc
xor
sbb
shlb
testb
inc
push
dec
pop
push
jae
lea
insb
mov
dec
add
inc
sub
test
icebp
cmp
int
add
ljmp
sbb
mov
les
dec
jne
push
jecxz
mov
xor
sbb
push
push
xor
dec
test
cmp
fisubrs
stos
xor
add
iret
xchg
pop
test
dec
jp
sbb
pop
lahf
ja
popa
arpl
imul
xchg
ss
inc
and
sub
push
mov
mov
add
hlt
ja
ret
dec
or
push
cmp
std
lock
clc
inc
cmp
dec
fsubl
sub
stos
in
push
addr16
out
xchg
xor
int
lds
cmp
scas
fwait
jle
movsb
push
dec
dec
xor
pop
and
fwait
push
xor
cmp
scas
or
pop
insb
clc
xchg
outsl
jb
nop
lds
call
in
mov
out
mov
hlt
adc
dec
rol
fsubrl
cwtl
insb
pop
sub
inc
xor
les
dec
or
fst
icebp
rcr
mov
and
shrb
fsubrs
sti
in
pop
jo
cmpsb
mov
pmulhuw
sti
dec
shlb
inc
sbb
xchg
sbb
pop
movb
pushf
jb
jmp
cmp
ljmp
aaa
mov
shr
cld
mov
cwtl
or
fisubrl
mov
add
pop
out
lods
nop
inc
pop
adcb
dec
hlt
push
mov
sbb
dec
enter
hlt
std
fadd
in
sub
xchg
bound
mov
shll
dec
push
xor
pop
or
sub
pop
jae
leave
sub
cmp
sub
add
jp
aas
adc
or
jns
push
ret
rcll
icebp
repz
dec
shrl
outsb
sub
in
dec
push
xor
dec
stos
adc
xchg
jp
inc
ljmp
push
loope
or
push
insb
dec
pop
cltd
inc
or
out
insb
ja
sahf
and
or
aas
push
jb
in
das
xchg
ret
arpl
movsb
leave
inc
je
or
dec
sub
lds
aas
ja
insb
lahf
or
xor
adc
jecxz
jo
fisubs
push
cli
dec
test
daa
imul
jnp
mov
popa
dec
xchg
pusha
inc
and
adc
inc
adc
cmp
dec
mov
adc
mov
lea
mov
push
lock
int
neg
shld
popf
add
lcall
xchg
push
jl
xchg
jle
fidivrl
adc
or
iret
mov
and
fnstcw
imul
nop
pusha
jge
jmp
pop
add
jo
lods
jecxz
lret
insl
sub
xchg
adc
sbb
test
cmp
test
stos
pop
xchg
pop
sbb
cmp
movsl
dec
lock
fs
int
fdivrl
xchg
cmp
lock
into
adc
xchg
add
rcrb
adc
fnsave
mov
lods
and
scas
xor
xor
call
test
jp
aaa
lock
pop
pushf
jmp
add
or
fbstp
dec
je
cmp
addr16
jnp
mov
sbb
inc
cmp
cmp
mov
movsl
push
cwtl
xor
inc
rol
outsl
ljmp
or
and
mov
or
jp
adc
fucomip
in
mov
cli
dec
outsl
or
push
xchg
adcb
mov
repz
mov
popf
lahf
hlt
test
pop
mov
cmp
push
inc
shlb
cmp
leave
xor
stos
jmp
cwtl
jp
mov
adc
mov
lds
add
adc
lods
pop
daa
fdivrs
ret
push
aas
pop
lret
sbb
add
cli
std
sti
pop
add
sbb
dec
int
jmp
pop
mov
test
push
lds
push
loop
add
mov
out
data16
adc
adc
fadds
xor
cmp
lahf
lahf
push
in
jmp
dec
outsb
lcall
dec
bound
scas
jmp
in
enter
push
pop
inc
dec
sub
arpl
es
test
jae
repnz
shlb
cmpsb
inc
stc
or
push
mov
adc
push
hlt
or
and
add
sub
fidivrs
movsl
les
mov
adc
push
dec
sbb
mov
mov
pop
add
dec
andl
or
cs
mov
rorb
cmpsl
fisubs
insb
daa
pop
stos
ret
fisttpll
push
fldcw
jbe
pop
ja
loope
inc
cmp
mov
ds
test
inc
mov
test
lahf
and
lcall
cltd
pop
inc
fwait
dec
jg
cs
pop
and
mov
pushf
clc
pop
repnz
pop
cmp
and
and
fcmovbe
bound
dec
stc
jne
sbb
dec
mov
hlt
jmp
lds
xchg
jbe
call
stos
int3
push
cli
arpl
xor
clc
rorl
inc
mov
push
or
lret
cmp
in
jmp
test
and
sub
fisttps
faddp
push
pop
data16
pop
pop
or
movsb
sarl
sarb
xlat
jbe
adc
call
dec
xor
jmp
test
rolb
cmp
mov
mov
dec
rcll
cmpsl
sbb
xchg
add
inc
arpl
shrb
std
sahf
xor
or
jg
int
divl
mov
insb
cmp
dec
xor
call
or
jns
adcb
sbb
push
faddp
cmp
cmp
jne
std
std
lods
in
lock
sbb
clc
sub
jp
dec
rorl
xor
pop
loope
scas
fwait
and
xor
cmp
js
push
jbe
fisttpll
hlt
inc
inc
sbbl
mov
gs
js
call
les
stos
inc
xchg
cltd
sbb
add
push
xchg
jp
cli
imul
mov
fstl
xor
sub
xchg
mov
sub
push
ljmp
leave
gs
in
mov
mov
stc
clc
aaa
mov
jmp
jno
jl
stc
cmp
arpl
outsb
adc
adc
add
ret
enter
fidivs
push
dec
sbb
mov
push
inc
inc
outsb
xor
repnz
subb
outsl
mov
push
insb
cmovle
inc
pop
jge
outsl
bound
cmpb
jbe
out
mov
shrl
mov
mov
repz
sahf
cmp
jecxz
mov
jg
add
push
sbb
or
dec
mov
sub
jmp
mov
les
mov
out
pop
push
into
cmpsb
arpl
imul
or
or
add
add
rorb
lods
add
pop
shrb
sbb
push
imul
sysexit
jno
or
or
hlt
mov
inc
inc
xor
and
cmp
in
bound
je
addl
rcrb
pop
roll
push
cmp
cmp
fs
or
or
arpl
xchg
add
and
mov
pop
inc
mov
or
arpl
mov
lods
popa
cli
repnz
clc
insl
pop
jns
fistpll
leave
add
cmc
sahf
fistpll
push
mov
lods
dec
aam
cld
das
cmp
int3
cmp
xchg
jmp
out
xlat
imul
outsb
xlat
jns
test
js
push
xor
xchg
stc
mov
mov
sarl
pop
mov
ljmp
gs
or
mov
sbb
test
inc
dec
mov
push
lcall
inc
mov
dec
jl
repz
sub
insb
sub
faddl
add
pop
cltd
or
stos
mov
xlat
mov
xor
xlat
add
dec
sbb
pop
inc
pop
xlat
pop
or
imul
icebp
xchg
gs
sub
cmp
cmc
xor
roll
enter
jle
and
dec
aam
test
into
xorl
cmpb
jle
shll
or
and
mov
addb
lock
mov
cmp
mov
mov
aad
ret
lret
mov
repnz
imul
and
mov
sub
xchg
cmp
movsb
ficompl
xchg
in
icebp
hlt
cltd
or
ret
add
mov
ds
push
lock
lock
pop
in
fisttpl
sub
sub
out
int3
or
sub
imul
jmp
mov
mov
xchg
cwtl
pusha
sub
std
imul
leave
jle
inc
imul
add
sbb
cmp
pusha
notb
popf
adc
fs
jle
push
daa
push
shll
pop
xor
jo
push
dec
mov
dec
pop
mov
push
out
push
sub
cmc
pushf
lret
idivl
lea
ja
push
mov
xchg
and
pop
mov
aas
adc
mov
adc
test
aam
iret
dec
out
inc
std
add
mov
inc
lret
mov
in
popa
fwait
or
icebp
cmpsl
daa
inc
dec
jno
rep
into
sub
fidivs
push
adc
iret
or
adc
in
pop
mov
jl
enter
js
jne
hlt
es
dec
ljmp
lea
icebp
loop
pop
adc
cmp
inc
xor
lods
mov
jg
mov
xchg
adc
lock
cmp
sahf
repnz
mov
idiv
mov
roll
or
lret
xchg
add
mov
repnz
cwtl
rcl
adc
mulb
cmpsl
ret
dec
xchg
mov
in
je
pop
sub
mov
mov
scas
fsubs
dec
pop
mov
xlat
lahf
cli
cwtl
addr16
pop
bound
inc
subb
push
mov
sbb
clc
and
jnp
icebp
lea
sub
stc
xor
scas
out
mov
sub
in
lcall
sub
int3
ja
inc
mov
xor
loop
imul
dec
and
xor
fwait
andl
jecxz
xchg
inc
pop
sbb
mov
mov
jp
sub
bound
pop
and
cmp
jg
mov
or
mov
sub
imulb
sti
enter
or
add
cmpsl
int
lret
push
xor
pushf
addr16
sahf
dec
loope,pt
enter
inc
dec
dec
cmp
dec
inc
fdivrs
and
iret
xlat
dec
leave
sub
mov
inc
mov
xor
je
and
ss
dec
inc
sbb
lret
mov
ja
in
lock
call
inc
jge
rcl
cmpsl
jecxz
pop
push
gs
ljmp
repz
pop
pushf
pop
and
push
mov
xor
mov
fnsave
sbb
arpl
xor
mov
mov
dec
sub
mov
push
fisubl
aad
int3
ret
ret
sub
jae
sbb
loope
shlb
int
pop
xorl
out
mov
in
sub
pop
shl
rcrb
pop
or
mov
mov
xor
in
xlat
aas
push
mov
repz
xchg
rolb
daa
inc
fidivrs
out
insl
push
adc
pop
jge
popa
or
popa
mov
push
stos
sar
std
mov
or
or
test
out
dec
scas
xchg
clc
fcomp
pop
jge
sub
daa
mov
filds
jg
ret
stos
movb
test
adc
ja
or
adc
ja
popa
mov
pop
scas
inc
dec
andl
daa
adc
lds
enter
bound
cwtl
aam
sbb
imul
jmp
xor
xchg
dec
shr
jnp
xor
lock
or
stc
stc
ss
movsb
pop
dec
aas
xlat
pusha
repz
das
mov
mov
cmovbe
xchg
add
loopne
mov
roll
negl
not
dec
scas
mov
pop
mov
cmpsb
sbb
mov
push
jae
clc
pop
in
inc
scas
jb
pop
jnp
push
shlb
sar
adc
mov
imul
repz
pop
rol
jmp
mov
xchg
inc
or
repnz
stos
push
xchg
ss
mov
aaa
adc
jge
or
lds
loop
and
adc
fimull
das
push
adc
add
std
fcmovne
xchg
call
push
fisubs
insb
inc
adc
stos
in
inc
jmp
mov
mov
sti
mov
pop
scas
sub
leave
mov
jg
in
pusha
imul
cmp
loope
jmp
mov
sub
cli
push
or
insl
out
sbb
xchg
in
mov
sbb
fisubl
orl
andl
rcrl
shll
loop
fnstsw
xchg
inc
imul
rcr
fsubl
enter
repz
inc
cld
pop
mov
lret
repnz
push
subb
xchg
lahf
sub
mov
push
cwtl
jl
adc
jecxz
sub
mov
ret
sbb
cmpsl
movsb
mov
pop
pop
jge
sbb
das
js
inc
bound
xor
sub
in
mov
scas
xor
mov
das
push
in
mov
mov
je
xchg
xor
jecxz
jnp
mov
xlat
cmp
mov
add
fs
mov
xchg
xor
sub
mov
outsl
das
loope
add
xchg
cmc
cltd
aam
test
sahf
clc
add
jae
xchg
test
inc
push
pop
in
jp
cwtl
mov
insb
sahf
push
mov
stc
jp
ja
enter
jnp
mov
icebp
jg
subl
and
mov
loop
leave
jno
aam
xchg
mov
sub
jo
mov
out
xor
and
lods
mov
add
or
fxch
inc
mov
nop
ds
dec
cmpsl
inc
jo
jmp
mov
xor
sub
mov
add
jl
aaa
in
imul
push
xchg
pop
adc
sbb
jae
rorb
sbb
sti
jne
mov
pop
out
clc
and
mov
dec
jmp
sti
mov
ds
sbb
sub
or
inc
arpl
stos
adc
mov
push
dec
and
pusha
sub
cs
es
fdivs
push
mov
adc
push
mov
mov
mov
lds
push
or
xchg
dec
push
pop
leave
mov
sbb
sub
xor
lock
sbb
pop
or
ja
imul
mov
inc
and
fcompl
rcrl
mov
jle
stc
mov
mov
cmpsl
jl
psrld
jns
dec
mov
shl
es
pop
pop
test
subb
mov
ds
dec
add
add
inc
mov
or
lahf
stc
jg
pop
sahf
clc
into
lock
mov
xor
hlt
mov
or
shll
pusha
test
xchg
bound
call
mov
cld
scas
imulb
clc
es
add
mov
in
sbb
add
push
jo
imul
inc
pop
repz
inc
addl
repnz
pop
xchg
mov
mov
lret
insb
das
std
lahf
sbb
mov
mov
jge
add
xor
mov
mov
sarb
in
imul
pop
xchg
push
addps
adc
idivb
test
lea
rcrl
xor
scas
icebp
mov
pop
jp
je
sub
sub
scas
adc
inc
push
jl
aam
mov
sbb
in
dec
inc
add
xchg
sub
mov
jo
xchg
push
inc
cmp
ret
scas
pushf
imul
fwait
fisttpl
xor
lods
ljmp
and
fwait
ja
iret
cmp
mov
xchg
imul
cmp
dec
iret
pop
lea
xchg
mov
inc
sbb
adc
out
pop
incl
jle
xor
xor
leave
jno
add
and
sbbb
jl
cmp
mov
xor
and
bound
pop
enter
xchg
mov
cmc
cld
repz
lret
jmp
jns
xlat
fs
push
rcl
dec
shr
inc
test
inc
lds
adc
shlb
push
jbe
jle
pop
out
cmp
mov
dec
movsb
or
xchg
mov
pop
and
lret
aaa
mov
sbb
addr16
or
js
xorl
leave
dec
es
lods
test
inc
jbe
mov
adc
jmp
push
js
incb
add
xor
in
lds
or
cmp
and
lods
jno
pop
fcoms
pop
je
jmp
fmul
scas
adc
loop
outsl
pusha
test
jbe
dec
cmpsl
movsl
add
push
sbb
jbe
sub
sub
adc
and
and
ret
mov
mov
pop
sbb
adc
cmp
rcrl
in
add
clc
adc
or
iret
sub
ret
push
xor
inc
mov
or
xor
inc
cld
pushf
add
jae
inc
dec
lods
push
out
sbb
loopne
hlt
sub
or
sbb
xor
sahf
subb
mov
rcrb
xchg
in
rorl
insb
and
dec
pop
inc
ret
mov
out
pop
test
fstpt
mov
stc
xchg
aam
jl
cmp
lods
frstor
sub
pop
imul
int3
ret
cmpsl
inc
adc
mov
add
lcall
push
in
dec
hlt
sub
cmc
push
jne
add
lret
mov
pop
xor
sahf
sarb
inc
ficomps
sti
mov
push
push
mov
or
add
cmpsl
inc
es
inc
std
push
sub
rcr
std
gs
lret
inc
xor
push
or
cwtl
pop
mov
mov
testb
and
hlt
je
cli
insb
push
adc
out
sub
add
lcall
dec
cltd
loop
sbbl
or
mov
ja
imul
lds
mov
gs
push
dec
xchg
je
cmp
mov
mov
lods
and
inc
mov
add
xlat
push
jns
inc
leave
jmp
or
push
jno
nop
dec
pop
pop
mov
scas
adc
mov
add
fildl
push
loopne
fucomp
int3
into
sbb
add
and
clc
fmull
shl
mov
sub
dec
mov
adc
scas
jb
jae
scas
in
int3
mov
or
adc
xor
and
sarl
in
pop
push
cmp
loop
jg
aaa
cmpsl
shlb
hlt
cld
and
mov
dec
bound
jno
idiv
inc
gs
inc
xlat
jmp
add
lahf
shrl
sbb
sub
arpl
mov
mov
cwtl
addr16
xor
out
xchg
jecxz
jecxz
lcall
lret
xchg
hlt
shl
and
mov
stos
xchg
add
xor
add
add
dec
cmp
ret
push
lret
sahf
cmpsb
icebp
aad
int3
pop
xor
jle
xchg
test
jl
popa
adc
jns
shrb
mov
push
mov
jnp
loop
push
fucomip
andl
aad
pop
fldl
dec
push
lret
repz
cmp
and
mov
mov
inc
xchg
int3
mov
xchg
and
xlat
jae
rcll
loope
inc
loope
dec
in
sahf
sub
mov
test
cmp
mov
mov
sbbb
jg
les
jne
imul
sub
jle
xchg
aam
ljmp
in
cmp
xchg
pop
cmpsl
out
scas
fdivrs
lret
imul
shlb
aad
and
pop
fwait
gs
pop
xchg
fs
lret
adc
sub
imul
es
out
cmp
jmp
and
iret
adc
je
xor
xor
jnp
rolb
inc
jno
cmp
mov
fdivrl
fxch
jbe
pop
or
mov
dec
sbb
mov
enter
push
and
pop
or
repz
ret
cld
dec
cmpsl
lods
jmp
lcall
jecxz
and
andb
inc
cmp
insl
fmuls
xor
jns
aam
pusha
clc
push
int3
movsl
cmp
pcmpeqd
outsl
mov
dec
lret
repz
push
stos
loopne
jle
sbb
pop
push
add
jno
mov
mov
pop
fildl
inc
push
jo
sbb
pop
lret
xchg
pop
cld
js
adc
jnp
xor
or
xchg
mov
decb
or
jne
xchg
cmpsb
dec
inc
mov
dec
movsl
mov
lret
data16
cmpsl
ljmp
mov
rclb
lcall
movsb
fs
js
shrb
ja
sbb
dec
fstps
sarl
jle
ljmp
xchg
push
out
jg
outsl
mov
xchg
js
inc
pop
inc
int
pop
jmp
iret
sbb
bound
lahf
xchg
loope
hlt
enter
repnz
mov
xchg
inc
test
mov
mov
push
or
sti
mov
xchg
mov
cld
jge
pop
xchg
lea
push
fldl
pop
pop
out
mov
cltd
pop
stos
and
mov
std
push
ljmp
aas
sbb
mov
enter
cmp
insb
xor
adc
imul
jmp
arpl
sub
sub
jne
sub
sbb
in
rcl
movsl
xor
loop
daa
mov
lret
pop
pop
enter
pusha
ret
call
xchg
test
xor
xor
xor
mov
mov
push
xchg
mov
pop
dec
in
push
lret
ljmp
adc
aad
mov
mov
jns
gs
mov
int
mov
mov
das
cmpsl
nop
adc
jns
ds
sbb
scas
push
aad
xchg
das
jae
sub
clc
mov
jnp
movsb
outsb
imul
and
fcompl
lock
leave
hlt
test
dec
jp
fwait
lahf
and
xchg
push
adc
les
js
loopne
je
out
loopne
cmp
xor
add
fwait
pop
xor
call
lret
inc
scas
sti
add
leave
cmpsl
sub
rcll
push
call
fcoml
mov
jmp
ljmp
fdivrl
push
scas
andb
mov
xor
jl
hlt
sub
fsubrp
pop
and
call
mov
sub
dec
cmp
ret
mov
imul
and
fildl
sbb
sbb
xor
pop
push
rolb
lahf
stos
rorl
mov
inc
cmp
add
out
icebp
jb
loop
jbe
loopne
lahf
lds
jb
sarb
add
stos
cmp
jmp
cmp
pop
aam
dec
mov
ret
xor
mov
addr16
sbbl
test
mov
jmp
insb
or
in
mov
ljmp
mov
adc
ficoms
movsb
jmp
rclb
es
inc
pop
mov
repz
cli
iret
or
sub
xorl
adc
aaa
xor
fstps
fsubl
lret
out
xor
push
insl
mov
cwtl
jmp
lcall
adc
out
repz
xor
aas
dec
jmp
adc
inc
aam
repz
aaa
mov
inc
push
fs
call
xor
dec
xlat
lret
out
adc
cmp
mov
dec
cmp
in
jecxz
mov
shll
dec
and
outsb
mov
popf
leave
movb
adc
movsb
xor
mov
subl
or
jl
adc
jnp
insl
popa
testl
or
pusha
jge
andb
shlb
cld
bound
sarb
les
sahf
mov
std
add
insb
repz
jle
mov
das
addl
jae
dec
mov
sbb
sub
add
call
and
xor
jno
cld
stos
cmp
ret
mov
inc
jno
test
iret
in
std
adc
mov
out
andl
sbb
out
dec
pop
nop
sahf
fs
cmp
jp
test
das
xchg
repz
sub
aaa
ja
adc
addl
inc
dec
push
lock
pop
mov
inc
movsb
cmp
mov
xchg
ret
jl
or
cmp
adc
in
xchg
or
ja
or
or
jg
enter
mov
pop
push
mov
pop
ret
xchg
adc
xor
icebp
pop
push
loopne
mov
mov
and
cmp
mov
push
mov
and
sub
dec
mov
and
cmc
shlb
sub
adc
sbb
sar
aas
mov
jp
add
into
and
pop
cmpsb
pop
xor
mov
dec
leave
dec
xor
jns
pop
mov
inc
adc
pop
and
push
and
repz
lret
cmp
mov
leave
ja
cld
mov
fcompl
mov
pushf
dec
subb
adc
lods
sub
aam
xor
mov
dec
lock
sub
xchg
scas
sub
adc
add
cmpsl
pop
mov
jb
mov
dec
cs
dec
int3
and
xchg
stos
xor
mov
sahf
lret
mov
ret
data16
ret
roll
sub
lods
pop
jno
loope
pop
icebp
ja
push
and
shr
scas
mov
sub
xor
or
and
adc
ror
daa
jno
aam
bound
cwtl
adc
hlt
ja
lock
jp
cltd
push
push
or
lahf
xchg
lahf
mov
cli
bound
push
test
int3
push
xchg
stos
fs
bound
inc
in
adc
pop
pushf
mov
jae
daa
pop
movsl
adc
jl
lea
sub
xor
push
jns
mov
aam
push
out
pop
inc
sub
inc
adc
stc
ljmp
jae
xor
sbb
les
inc
jl
mov
daa
gs
push
mov
xor
jmp
cmp
sbb
fdivrs
aas
pop
cmp
cmc
push
lods
test
add
iret
dec
inc
lods
cli
or
movsb
lcall
cmpsb
lock
adc
loopne
add
and
lcall
loopne
ljmp
cmp
mov
outsl
lahf
in
sub
arpl
sahf
dec
fldl
imul
into
or
mov
aam
and
mov
adc
call
iret
outsb
sbb
sbb
sbb
pusha
test
and
push
inc
dec
cmp
iret
pop
mov
cmp
shl
or
cmovnp
repnz
pop
popa
addr16
lea
insb
dec
xor
sahf
sub
adc
paddq
push
lret
xchg
ljmp
out
lds
in
mov
jp
pop
inc
mov
imul
shl
dec
out
adc
cmp
push
push
mov
and
xchg
sub
mov
test
lock
mov
jge
sbbb
cmp
adc
into
out
js
lods
mov
push
pop
addr16
insb
test
rcrb
jne
adc
dec
fstpl
repz
cwtl
cs
sbb
jp
in
hlt
rcr
fwait
cltd
xor
dec
pop
ficoms
int
fs
mov
add
and
push
jb
pop
push
std
mov
jbe
push
mov
xor
pop
pushf
jne
bound
push
adc
xor
in
in
lods
sub
mov
repnz
dec
jo
out
pop
or
arpl
daa
lahf
lret
inc
mov
sub
dec
hlt
dec
out
fs
popf
jmp
and
in
pusha
cmp
push
sbb
dec
movsl
ja
push
jmp
dec
rcrb
lcall
nop
mov
push
or
rcrl
pop
or
mov
add
jns
faddp
jb
sub
xor
repnz
dec
sbb
dec
jle
mov
daa
mov
mov
repz
inc
or
mov
movsl
adc
out
adc
insb
inc
mov
lds
jg
add
ret
sbb
outsb
negl
test
out
loop
into
pop
cmpsb
cmp
dec
and
and
mov
add
add
xchg
outsl
xchg
jp
pusha
pop
ficoml
lret
mov
mov
jmp
test
rcr
jb
pop
jmp
ss
push
test
scas
mov
xchg
nop
rcll
out
fsubs
inc
xchg
out
orb
insb
sub
xorl
jmp
pop
inc
push
popf
fdiv
ret
fstpt
xor
mov
jns
loope
movsb
mov
pushf
cmp
xchg
pop
mov
or
inc
arpl
test
cmp
sub
push
xor
xor
enter
lcall
shlb
dec
xor
dec
daa
jmp
xchg
xchg
sbb
lahf
fsubr
mov
test
fwait
inc
inc
hlt
adc
cmp
ret
lret
andb
mov
lcall
xor
sbb
pop
test
jbe
add
decl
add
scas
sub
mov
adc
adc
xchg
mov
mull
stos
inc
mov
mov
and
aas
xor
pusha
lds
dec
scas
dec
inc
popf
stc
push
cmpsb
push
into
fmul
xor
icebp
and
dec
sub
mov
loope
movsb
xchg
xor
je
ljmp
jge
stos
std
jle
andl
push
mov
dec
movsb
mov
adc
aam
into
and
aam
popa
std
or
xchg
inc
pop
aad
sub
push
jns
cmpsl
js
jle
and
xchg
loop
fiaddl
push
push
lock
inc
xchg
cli
jmp
xor
pop
lock
fcomps
pusha
push
adc
xor
push
pop
xchg
in
add
inc
test
cmovnp
test
pop
and
out
movsl
imulb
lcall
pop
fisttpll
or
jb
sub
bound
enter
fsubr
jp
dec
dec
js
xchg
sbb
xchg
push
imulb
jae
xchg
cltd
sub
sbb
aaa
xor
pop
incb
push
mov
adc
aaa
mov
pop
add
subb
int3
or
mov
sub
jo
sti
aaa
xchg
adc
fisttpl
int3
in
jno
xchg
jge
inc
mov
dec
insb
mov
scas
bound
jecxz
lea
sbb
cli
scas
sub
cmp
repnz
sbb
or
pop
xor
lret
sub
dec
lods
inc
pushf
dec
jne
pop
orb
dec
dec
sub
sub
mov
jno
push
ds
fsubrs
cwtl
xchg
jge
call
imul
popf
lods
xor
cmp
jg
jo
imul
enter
cmp
mov
mov
test
pop
pop
dec
lods
test
mov
mov
loope
push
push
dec
mov
lods
jne
fwait
push
xchg
or
mov
cltd
mov
mov
pop
and
fiaddl
in
orl
mov
arpl
sar
rcrl
and
add
aaa
mov
xor
adc
inc
add
cmp
and
cltd
mov
js
inc
jmp
stos
sbb
push
and
sub
jne
andb
dec
dec
xchg
add
hlt
pushf
mov
leave
push
pop
lds
cmp
lret
insb
mov
sbb
lds
dec
rcrl
dec
push
in
and
test
mov
sub
sub
sbb
sbb
lret
add
sbb
inc
cli
dec
jge
fcmovbe
popa
xchg
cltd
sarl
shl
jb
jne
jecxz
repz
push
fs
mov
nop
sahf
call
mov
test
iret
mov
in
andb
sub
mov
adc
clc
jl,pn
stc
jno
lret
cmpsb
pop
sub
outsb
call
mov
mov
push
jo
pop
xor
mov
cmp
cmp
in
push
cmp
iret
add
repz
stc
pop
dec
ret
push
sti
int3
xor
xor
iret
cld
jle
test
xor
test
jo
push
jecxz
jns
mov
push
leave
dec
pusha
sbb
cmp
sbb
jnp
dec
mov
cmpsb
mov
mov
out
sti
or
or
mov
jne
xchg
mov
cli
aad
repnz
lahf
xor
jns
cmp
call
adc
push
cmpsl
xor
stos
int
and
xlat
popa
sub
lahf
lret
jne
popf
pop
fsubs
jb
mov
jno
cli
and
fisubrs
sbb
push
lahf
sbb
icebp
dec
dec
call
rcrb
mov
inc
jecxz
sub
sbb
mov
and
mov
xor
sub
xchg
adc
icebp
inc
lods
push
jl
push
mov
xchg
sbb
addr16
mov
mul
dec
es
loopne
add
cmpsb
insb
mov
or
mov
fdivr
push
push
aad
add
adc
and
cmp
stos
sub
dec
cwtl
jns
imul
call
mov
in
lcall
int
sub
push
lea
xchg
cmp
insl
lds
xor
push
mov
dec
jl
cmp
add
pop
and
jne
mov
icebp
rol
aas
fptan
addr16
adc
xor
ja
hlt
getsec
push
cmpsb
xor
fnstcw
sti
adc
test
push
in
mov
aas
sub
and
sahf
leave
xor
dec
jns
jo
push
sbb
shlb
imul
pop
mov
arpl
and
pop
mov
test
adc
stos
loop
lret
gs
sub
sti
jl
jbe
mov
dec
fsubs
sub
popf
gs
mov
outsb
cmp
cmp
fsincos
out
mov
xchg
les
and
inc
xlat
push
cld
lods
xor
adc
ljmp
and
addb
cmp
mov
or
cmp
pusha
sbb
out
fwait
and
dec
push
shrl
adc
aad
sub
pop
fstps
pop
cltd
or
mov
lods
ljmpw
xor
and
sbb
cmp
outsl
sub
cmp
pop
push
sarb
in
jg
sbb
inc
aas
cmp
mov
cmpsb
jb
or
aad
mov
push
addr16
scas
jnp
fisubs
mov
jl
mov
std
xor
lods
mov
and
fdivp
addr16
pop
pop
lret
dec
xor
pop
data16
je
xlat
sub
lcall
lods
mov
jno
hlt
sub
sarl
jno
outsl
xchg
xchg
out
out
data16
pop
leave
pop
subb
popa
push
inc
mov
mov
lock
and
mov
pop
stos
add
jl
dec
outsl
mov
pop
mov
icebp
cmpsb
rcrl
mov
sub
mov
jne
push
mov
lods
ljmp
mov
lea
shlb
mov
lahf
jb
test
shlb
add
or
jp
ljmp
int
adc
push
cmp
scas
mul
inc
lcall
outsb
data16
adc
sbb
aam
loope
cld
xlat
in
out
dec
repz
insb
jg
daa
test
aam
inc
pusha
rcrl
jle
je
xchg
jp
test
rol
outsl
inc
loopne
sbb
jecxz
mov
fistps
fisttpl
test
sub
and
rolb
leave
insl
into
add
or
inc
jp
daa
test
rorb
cmp
rorb
inc
fisttpll
stos
xchg
insl
sbb
dec
pop
dec
inc
pushl
mov
jecxz
or
mov
int3
fidivrs
push
push
push
test
and
mov
mov
push
xchg
mov
mov
test
cmp
inc
jge
nop
mov
xchg
lods
iret
jmp
xchg
xchg
in
pushf
xchg
shlb
pop
js
and
xchg
adcb
cs
push
je
mov
rcr
ficomps
ja
fs
cmp
pop
dec
lods
cmp
cwtl
or
lock
repnz
dec
add
jle
stos
test
popa
out
cwtl
lahf
lcall
and
rcl
xchg
stos
xor
inc
xor
sub
repz
daa
sub
aad
sub
inc
gs
ret
pop
jo
adc
dec
fwait
stc
lods
pop
push
mov
mov
adc
in
ret
xor
aaa
xchg
std
pop
negl
pushf
enter
sub
lea
iret
push
cmpb
jl
in
in
pop
imul
jns
jl
fistpll
add
in
sarb
add
jle
scas
test
rclb
push
adc
cmp
xchg
enter
outsl
mov
adc
push
repz
pop
jb
dec
and
shlb
outsl
dec
mov
cld
mov
pop
mov
mov
pop
mov
push
jle
inc
cmp
or
out
stc
adc
dec
mov
xchg
rorl
mov
lcall
jecxz
mov
imull
sub
insl
stc
mov
jb
in
jns
mov
pop
sub
ret
adcl
aas
push
sti
lods
test
dec
push
mov
dec
jge
das
les
popf
cmp
jge
pop
xor
sar
leave
dec
fbld
jmp
mov
pop
mov
stos
scas
add
and
jl
adc
inc
inc
xchg
gs
imul
cmp
fstl
int3
and
and
push
add
dec
lods
or
fs
dec
adc
jmp
push
mov
pop
in
fidivrl
in
insb
test
sbb
lcall
fcoms
push
gs
jge
aad
pop
dec
xchg
popf
jmp
movsl
lods
imul
or
call
add
inc
stos
insb
out
xor
es
mov
icebp
es
push
and
ss
movsb
jne
and
adc
push
xchg
adc
xchg
pop
jp
cmp
sub
insb
add
test
icebp
push
rcr
xchg
push
imul
mov
ret
test
in
push
jb
sbb
sar
int3
adc
pop
sub
mov
les
pop
aaa
enter
popf
in
mov
push
pop
jg
mov
jnp
lea
add
shl
lahf
lcall
outsl
sbbl
cmp
mov
xor
mov
or
cmpb
popf
fnstenv
dec
fwait
mov
dec
jg
repz
jl
pusha
jge
stos
mov
ja
jb
inc
jbe
mov
shll
sbb
mov
cmpsb
loop
dec
ret
jl
cli
mov
cmp
xchg
dec
mov
pusha
inc
push
data16
adc
jae
ds
xor
fcomp
movsl
sub
mov
sbb
mov
xchg
lods
xchg
mov
test
add
daa
arpl
xchg
movsb
outsl
ss
mov
mov
lods
jnp
andb
mov
or
jl
sbb
sub
pop
aas
mov
jge
jp
mov
pop
or
sbb
inc
sub
xor
mov
jbe
adc
mov
addl
imul
popf
lret
inc
xlat
nop
pop
xor
gs
sbbb
mov
sub
xor
mov
push
adc
js
xor
dec
out
mov
movsb
sub
inc
sub
rep
or
and
sbb
inc
and
shll
lahf
dec
cmp
test
movsl
aam
xor
repz
push
inc
lods
imul
test
adc
cmc
adc
ffreep
add
scas
jl
loopne
inc
lcall
push
xlat
std
dec
jo
cwtl
xor
cmp
pop
jae
xchg
inc
xchg
pushf
cmp
and
test
pop
aam
and
push
xchg
rolb
mov
sub
jg
jae
push
mull
or
cmp
pop
inc
das
stos
dec
mov
lods
leave
dec
stos
les
lods
inc
xchg
rol
mov
cmpsl
pop
in
roll
sbbl
rorb
push
stos
and
aaa
mov
test
cmp
adc
scas
addl
test
fsubs
shrb
out
push
sub
pop
add
jmp
mov
cmpsb
mov
dec
mov
xchg
cmp
faddl
and
xchg
ljmp
movsl
inc
xor
xor
inc
xor
int3
mov
cmpl
pop
mov
xacquire
jne
sbb
out
cmc
lock
mov
mov
inc
xchg
and
and
mov
rcrb
loope
pusha
addr16
nop
lcall
cmpb
jmp
lcall
dec
incb
push
mov
wbinvd
dec
fnsave
mov
cmp
jmp
sub
in
gs
push
lods
xchg
jbe
inc
popa
add
data16
shr
rclb
mov
std
inc
push
mov
sarb
imul
daa
insl
pop
pop
nop
rep
loopne
inc
mov
inc
xchg
mov
test
mov
sub
lret
xor
daa
lds
cmp
mov
shrb
popa
test
mov
pop
clc
add
ja
sbb
jmp
push
js
jmp
mov
outsb
aad
and
hlt
lret
inc
dec
pop
cmpsl
push
fcompp
scas
xchg
fdiv
decb
pop
xchg
sar
shl
pop
iret
gs
lods
loopne
jnp
lahf
xchg
mov
and
arpl
call
sub
dec
jmp
sbb
xor
inc
sbb
cmpsl
adc
js
jnp
adc
lock
mov
ret
inc
mulb
and
divl
push
lret
mov
xchg
int
push
or
and
imul
ss
cmpsl
jl
pop
fucomp
rcr
arpl
xchg
sub
add
addr16
pop
mov
sub
push
or
test
sti
lock
mov
and
cmp
loope
pop
xchg
or
mov
xor
outsl
test
imul
daa
fnstenv
xchg
mov
sbb
add
fadd
test
lock
rcrb
pop
lret
stc
movsl
femms
adc
fsubl
mov
mov
jo
or
or
jb
lock
data16
fisubrs
sub
mul
push
cmp
cld
leave
insb
scas
dec
leave
ret
push
rorl
xchg
dec
ds
cmpsl
pop
cltd
mov
popf
out
cmp
dec
xor
frstor
xchg
adcl
es
mulb
pop
cmp
mov
data16
mov
push
mov
jae
dec
arpl
xlat
in
mov
sbb
fcomi
xor
add
test
jb
add
add
in
in
std
fistps
aaa
mov
mov
jl
call
lret
inc
loope
jne
or
in
imul
mov
xor
adc
inc
mov
fiadds
cmp
adc
jmp
inc
inc
out
lods
xchg
cwtl
mov
movsb
pushf
cmovle
lds
mov
push
pop
pushf
pop
test
movsb
hlt
adc
or
aas
jo
mov
mov
push
rcll
jge
mov
jne
inc
bnd
cmpb
mov
adc
cwtl
mov
in
cmpsb
mov
sbb
dec
out
mov
jno
sub
lock
add
xchg
push
sbb
ficompl
enter
jp
mov
addr16
pop
and
aas
mov
stos
add
jle
push
pop
pop
rolb
sub
scas
in
or
loopne
mov
lret
clc
pusha
enter
lds
ljmp
or
aaa
dec
shll
and
aas
and
push
out
lret
mov
test
daa
in
popf
in
mov
and
aam
push
int3
insl
fsubs
out
andb
push
inc
pop
push
pop
ss
inc
pop
iret
pop
pop
movsl
in
or
ljmp
lods
adc
insl
mov
pop
std
pop
popf
dec
mov
jmp
jnp
push
popf
cmc
sti
es
rolb
lods
inc
cmpsl
inc
xor
mov
std
out
fsubr
in
jge
push
xchg
out
or
hlt
xor
pop
pop
dec
cltd
add
popf
enter
in
shll
and
adc
ds
jg
cmp
fiadds
in
insl
fs
or
xor
test
inc
pop
jg
cld
add
push
sbb
test
sub
sub
shlb
hlt
add
sbb
adc
cmp
dec
insb
add
jne
inc
sbb
rolb
pop
pop
jle
pushf
dec
rorb
dec
cli
mov
add
sbb
mov
nop
mov
push
fwait
sub
xlat
xor
cmp
push
xchg
mov
inc
out
or
std
popa
int3
out
addb
xor
cmp
pop
inc
rol
xchg
js
outsl
data16
xchg
dec
add
mov
push
push
ja
ret
std
add
pushl
nop
mov
repnz
popa
adc
adc
and
xor
leave
out
fdivs
loop
xchg
shrb
push
xorb
outsl
stos
insl
jo
sbb
fisttpl
iret
dec
negb
jo
push
aas
in
std
push
adc
jb
rorl
push
les
jo
push
test
cmp
or
cmpsl
jp
arpl
sbb
sub
notl
lods
xchg
imul
inc
jecxz
loope
jecxz
pop
daa
cmp
dec
ret
repz
mov
xchg
je
dec
int3
pop
daa
fisttpll
mov
jge
xchg
xchg
aas
fidivrl
jnp
ficoml
stos
push
iret
cmp
outsl
mov
and
mov
mov
lahf
out
into
jecxz
fs
sbb
scas
int3
int
xchg
loop
push
mov
xchg
jecxz
fucom
lods
out
inc
popf
data16
adc
rcr
insl
or
rcrb
mov
lock
out
inc
int3
dec
mov
mov
pop
test
out
push
jo
mov
fbstp
aaa
sahf
das
daa
dec
jg
and
lods
int
inc
andb
jns
add
push
xchg
jb
mov
adc
lcall
sub
mov
dec
cmp
mov
stos
dec
xchg
mull
in
pop
stc
add
pop
xchg
sub
loop
ds
add
out
popl
stos
je
cmc
and
mov
sbb
pushf
pop
out
fsubrp
leave
and
lcall
int
mov
pop
jns
mov
pop
xchg
dec
fdivrs
in
enter
jbe
inc
iret
mov
mov
xchg
ljmp
jns
mov
mov
or
out
xor
gs
ds
in
lahf
dec
stos
or
sub
ret
cmp
iret
mov
dec
xor
inc
push
and
jbe
adc
dec
mov
dec
ficoms
mov
add
iret
jns
push
mov
sti
xor
leave
frstor
fst
movsl
nop
rcrb
sti
xchg
jb
xchg
lret
push
add
out
jp
add
push
lea
pusha
mul
repnz
and
sahf
xor
jne
stc
mov
add
add
loop
mov
imul
stos
movsb
mov
in
pop
xor
sub
shrb
ds
cli
ficoms
mov
dec
nop
outsl
aaa
mov
lock
dec
roll
xchg
enter
enter
xlat
idiv
rcll
xchg
in
or
test
fsubrs
fucomi
adc
cmpsb
sahf
loope
aaa
sub
xor
xchg
jns
jae
sub
pop
dec
fxch
cld
bound
sbb
jp
jb
dec
sbb
test
mov
push
ja
fwait
dec
stos
jns
mov
fcmove
lods
fcoms
adc
push
addr16
dec
jb
adc
jp
pop
data16
mov
iret
cmp
loope
movsb
sub
xor
cmp
fidivs
in
or
mov
test
and
pop
sti
mov
mov
jmp
sbb
push
bound
ret
out
jnp
fxch
lcall
dec
xor
cmp
sbb
mov
cmpsb
xchg
jo
icebp
cmp
scas
aaa
je
adc
mov
lods
nop
inc
dec
mov
push
mov
test
mov
xchg
sti
jb
cli
mov
addr16
iret
nop
js
je
pop
mov
repnz
pop
js
pop
and
int
fstl
jne
shll
rcrb
and
icebp
pushaw
ror
mov
je,pt
cmpl
stc
repnz
sbb
mov
xchg
imul
or
icebp
push
mov
jbe
mov
jo
cmpl
inc
add
mov
xchg
ss
or
add
cli
xchg
mov
push
test
lret
js
xchg
adc
add
add
jae,pt
insb
xor
int
jle
push
pop
add
fiaddl
mov
ja
out
xchg
mov
cwtl
fwait
ja
pop
loopne
shrb
fwait
add
lock
std
fiaddl
cld
arpl
mov
imul
jns
push
adc
insb
cmc
test
dec
xor
mov
jg
xchg
push
mov
jae
pop
in
sbb
xor
les
les
test
sub
add
int
ror
mov
and
or
je
lret
stos
jae
xor
xchg
push
pop
pushf
jo
movb
loope
test
adc
lcall
movsl
pop
into
pop
push
aas
addb
cmp
mov
data16
jp
cmc
je
inc
xchg
pop
pop
mov
push
or
and
divl
mov
sub
or
and
imul
ljmp
repz
ss
int
stos
mov
sub
add
jecxz
ds
push
dec
or
ret
jle
arpl
loop
rcll
shll
dec
shlb
or
push
mov
jne
test
mov
repnz
jns
test
or
sbb
push
cmpsl
add
pop
mov
pop
aad
in
shl
hlt
mov
inc
mov
jno
movsl
sub
sahf
jbe
dec
lcall
mov
into
dec
fadds
xor
mov
xor
bnd
push
push
xchg
jmp
aas
repz
in
jno
and
jp
jne
ljmp
lods
jl
sub
jecxz
rorb
es
adc
sub
jb
and
call
pop
sub
mov
push
lcall
pushf
mov
inc
xchg
lock
lahf
fcompl
dec
es
stos
je
movb
dec
xor
push
xlat
ficoms
aaa
mov
adc
movsb
add
aad
cmp
add
insb
fcoml
lods
and
mov
jae
iret
sub
mov
mov
adc
stc
jnp
into
xchg
imul
repz
data16
test
arpl
out
jmp
lock
inc
and
or
out
xlat
push
ljmp
stc
arpl
inc
ret
ficoml
add
jb
test
rorb
in
mov
int3
lds
mov
cmovge
inc
cmpsb
popa
lahf
call
dec
add
add
loopne
xor
addr16
mov
or
movsb
dec
addr16
mov
push
icebp
pop
mov
sti
adcl
mov
imul
add
daa
outsb
dec
and
xchg
sub
loopne
fcompl
in
loopne
setne
cmpsb
inc
mov
ret
inc
xchg
loop
repnz
mov
or
or
jno
jge
out
pop
push
or
jmp
xor
jae
dec
xchg
icebp
mov
push
test
icebp
pushf
lds
into
dec
jmp
cmp
push
lret
add
scas
enter
out
es
mov
cmp
sti
add
sti
cmpb
insb
inc
fiaddl
ds
je
jecxz
loopne
pop
or
add
lds
xchg
add
sbb
xor
fbld
cmpl
out
rolb
bt
aas
mov
mov
mov
or
repz
addl
ja
push
test
repnz
xorb
mov
loopne
fiadds
inc
ret
aad
popa
or
scas
xchg
push
push
in
in
cmp
push
push
arpl
mov
mov
mov
leave
mov
dec
insb
add
push
jo
sub
inc
dec
imul
imulb
repnz
call
in
daa
icebp
mov
ret
xor
rcrl
fiadds
mov
ja
pop
xor
mov
lods
dec
mov
mov
xchg
mov
cmpsl
fsubr
sub
and
insb
lahf
jae
mov
mov
pop
jle
pop
aad
xchg
insl
dec
mov
pop
push
cmp
andl
jecxz
mov
push
sbb
cmp
mov
add
push
inc
or
xor
cmp
add
mov
sbb
jbe
xor
mov
xchg
pop
inc
adc
xchg
stos
and
sbb
mov
add
pop
pop
dec
push
scas
mov
mov
imul
lock
mov
dec
jae
orb
jns
mov
adc
xchg
sti
xchg
mov
out
sarb
pop
aas
loopne
imul
mov
add
or
xchg
xlat
push
jb
fisubrl
lods
outsb
mov
fstps
shrb
out
or
add
inc
mov
xchg
mov
ds
or
dec
sub
into
mov
adc
and
cltd
pop
fidivl
cmc
mov
dec
cmpsb
imul
sahf
adc
cmc
adc
mov
scas
insb
mov
aaa
adcb
push
jo
pop
xor
insl
mov
sbb
lcall
xor
sub
push
rol
mul
xchg
arpl
mov
ljmp
testb
fnstenv
push
arpl
or
sub
imul
out
jmp
daa
outsl
jb
xchg
add
adc
push
sbb
dec
mov
push
mov
cmpsb
mov
inc
test
mov
push
add
or
pop
add
inc
out
in
fcomip
mov
popf
les
mov
or
add
xchg
dec
in
xor
jmp
call
fmull
repnz
aas
es
nop
enter
xchg
popf
cmp
int
and
sub
jg
and
mov
sarl
jo
int
jmp
ja
xor
dec
jbe
stc
loope
lods
xor
xchg
call
mov
xchg
je
das
aaa
add
sbb
cwtl
xchg
icebp
sub
enter
dec
enter
jge
xchg
or
aas
adc
pop
push
jae
inc
add
and
cmp
dec
jae
push
dec
jns
pusha
and
arpl
jno
xchg
jl
jp
mov
adc
cwtl
fiadds
mov
loopne,pt
dec
and
idivl
in
test
cmp
add
imull
adc
push
and
into
dec
fs
in
inc
rolb
fildl
shrb
cwtl
and
jbe
and
std
ret
in
mov
and
cld
test
push
hlt
mov
popf
mov
in
pop
fidivrs
adc
nopl
shl
add
mov
int
in
sub
addr16
mov
fwait
pop
jecxz
pop
out
push
sti
xchg
xorl
outsl
sbb
dec
aas
rcl
xchg
into
xchg
lcall
repz
mov
mov
dec
or
leave
xor
xor
dec
aad
imul
out
test
mov
in
push
xor
inc
adc
and
mov
in
cmpl
xchg
sbb
scas
testb
call
jl
jo
rcrl
inc
mov
test
sbb
lods
push
add
lock
push
push
pop
movl
test
dec
stc
das
adc
mov
inc
cmpsl
movsl
rorl
or
inc
jmp
mov
sbb
and
bound
mov
lods
ret
mov
stos
and
jne
imul
js
mov
mov
fstpt
aam
ljmp
dec
mov
push
mov
iret
mov
adc
and
mov
or
ficompl
int3
notb
iret
sub
sub
ror
xor
push
outsl
icebp
outsl
arpl
add
or
fldenv
popf
cmp
and
sti
mov
adcl
or
or
insb
fsubl
cmp
filds
inc
and
addr16
dec
mov
fwait
sub
dec
std
push
jp
ror
push
inc
and
add
add
cmp
sahf
lcall
cld
xchg
jp
jmp
lcall
sub
fbstp
pushf
cmovo
in
fs
dec
pop
or
add
and
lcall
sub
mov
aad
sbb
mov
stos
nop
add
scas
test
fdivl
sub
out
adc
ds
mov
sti
in
mov
iret
sub
loopne
sbb
mov
sub
icebp
pusha
push
mov
push
je
dec
fisubrl
outsl
pop
jmp
frstor
jb
jnp
int3
call
xor
clc
nop
js
mov
and
fidivrs
loope
or
andb
jns
add
xchg
cld
xchg
mov
insl
xchg
inc
das
mov
or
repnz
inc
enter
push
xor
das
dec
jae
xchg
and
cmp
sbb
jb
sbbb
mov
jl
lret
mov
add
push
xor
cmc
outsl
xchg
aam
and
push
daa
mov
js
add
adc
test
or
lock
icebp
mov
popl
les
adc
mov
imull
es
les
add
sub
cmpsb
lret
sbb
pop
in
jecxz
lahf
mov
inc
sarb
jb
add
adc
sahf
fstpt
mov
xchg
gs
dec
xchg
into
es
hlt
mov
mov
and
cmpsb
mov
in
sbb
lret
or
hlt
lods
js
sub
mov
xor
pop
ds
sbb
neg
push
inc
xor
lock
sarl
js
stos
mov
data16
add
mov
pop
mov
push
pop
push
jo
mov
test
mov
mov
stos
repz
sahf
push
dec
es
movsb
sbb
imul
imul
paddq
jl
movsl
adc
or
inc
pop
pusha
pop
subl
jl
mov
in
mov
xchg
inc
repz
mov
in
mov
sub
int
mov
fnstenv
int
faddl
ret
dec
cltd
pop
popa
inc
pop
stos
sub
and
jne
adc
cmp
lret
and
inc
pop
pop
int3
fmul
mov
das
int3
mov
xchg
insb
sahf
in
test
and
repnz
jbe
xor
pop
xlat
dec
push
sbb
lods
dec
icebp
cmp
cmp
xchg
nop
xor
sub
mov
jmp
inc
nop
inc
leave
cmp
xor
dec
sub
sbb
jnp
popa
je
xchg
mov
xchg
sarl
sahf
fwait
call
loop
add
or
sub
int3
int
and
enter
push
repnz
push
sub
add
ret
jp
adc
in
add
xor
push
out
or
xchg
pusha
jmp
in
inc
scas
lds
popf
je
dec
xchg
out
add
int
mov
popa
push
into
loope
ds
pop
push
lds
inc
daa
mov
ret
and
cli
mov
xor
and
mov
xchg
int3
xchg
in
out
int3
cld
push
jno
jmp
test
cmpsb
ret
add
or
push
aam
push
mov
lea
sbb
or
push
lods
add
outsl
push
movsl
xor
push
sub
enter
pop
xchg
cmp
jecxz
dec
jp
dec
dec
or
pop
in
mov
fs
inc
xor
addr16
ficoms
jg
imul
fxam
cld
adc
movsl
clc
mov
add
int
xor
dec
pop
sbb
xchg
fildl
push
repz
add
xor
sub
and
fstps
fsub
mov
addb
movsb
test
hlt
or
test
inc
and
ljmp
push
add
pushf
dec
leave
mov
scas
pop
cmpsl
ja
dec
jl
icebp
jp
lds
mov
rorl
jecxz
sarl
mov
and
out
imul
mov
lret
sbb
fwait
rol
push
inc
jl
jecxz
mov
inc
or
mov
aaa
sbb
mov
mov
sub
cltd
mov
int3
push
pop
mov
cmp
mov
inc
push
call
mov
pop
or
fwait
in
les
or
mov
push
out
lds
mov
repz
mov
mov
outsl
cmp
out
adcl
sbb
mov
aad
orb
lods
inc
int
xor
or
jae
dec
mov
push
jno
outsl
jno
outsl
lret
mov
aas
imul
mov
lock
mov
femms
std
fwait
xchg
or
and
loop
and
lds
inc
sub
push
jo
shr
lock
and
std
add
and
jns
test
pop
lret
mov
test
add
ffree
lret
cmp
filds
jne
or
fadds
inc
aaa
mov
nop
es
mov
pop
int3
outsl
jmp
ss
xor
divl
lea
jns
aas
test
gs
inc
sub
icebp
jo
jno
mov
ret
mov
std
pushf
in
fnstcw
outsb
aam
xor
xor
mov
cmpsl
enter
xchg
mov
mov
rorb
inc
dec
lret
test
push
push
jno
jns
scas
or
divb
in
ret
das
mov
aaa
jno
push
fsubrs
sub
imul
adc
rol
cmp
sub
stos
outsl
mov
cs
fscale
clc
repnz
pop
ss
push
notb
pushf
pop
lea
mov
stos
je
stos
or
jecxz
sahf
xchg
ds
js
in
jo
iret
in
xchg
adc
push
dec
repnz
pop
loope,pt
xor
mov
das
es
adc
xchg
ljmp
cmpsl
stos
pop
cltd
andl
arpl
pop
sti
inc
imul
ja
std
mov
call
xchg
jge
lcall
jg
push
pop
pop
xor
stos
inc
inc
adc
sbb
jg
dec
xchg
loopne
loope
out
xchg
cmp
sahf
lock
scas
mov
lcall
and
jo
fdivrl
outsb
fbld
pop
or
dec
movsl
dec
les
lahf
mov
mov
sub
pop
cmpsl
push
cmp
repz
ret
dec
lahf
addr16
sahf
fiaddl
popf
pushf
cli
xchg
cmpsl
mov
mov
inc
dec
movsl
cltd
arpl
push
xlat
xchg
pop
mov
scas
nop
sbb
push
insl
pop
loop
orl
loopne
push
xchg
fwait
out
aad
pop
mov
and
fs
fcomps
xor
mov
or
mov
jg
cmp
cmp
cmp
dec
cmp
out
xor
xchg
enter
add
push
test
jne
mov
push
fdivs
inc
out
test
pusha
inc
pop
push
aad
cmpsl
push
jg
call
call
jle
ja
js
push
jl
pop
mov
push
xchg
in
mov
xlat
lock
mov
inc
icebp
push
add
cli
xchg
les
leave
cld
cmp
mov
mov
sub
imul
enter
xchg
enter
lret
push
int3
int3
ror
mov
xor
pop
repnz
fwait
loop
pop
ds
cltd
ret
and
rcrb
pusha
lret
add
insl
adc
pushf
lods
in
mov
lcall
jp
xor
xorb
push
pusha
mov
dec
sbb
push
insb
push
cwtl
sbb
cmp
dec
out
test
popa
stos
push
std
mov
jnp
dec
xor
sub
dec
push
or
mov
xor
dec
sarb
mov
xor
xchg
lock
outsb
dec
sar
or
insl
inc
inc
test
imull
dec
pop
repnz
and
ret
out
cmp
inc
cmp
das
adc
sbb
fldt
je
scas
sub
test
or
es
mov
inc
aam
ljmp
cmp
push
or
fstpl
adc
into
push
add
loop
aas
rcr
out
cmp
pop
dec
adc
test
add
and
out
inc
adc
stc
popa
fwait
ja
jmp
popf
push
xchg
scas
xchg
xchg
mov
xor
xchg
pop
xchg
jp
sbb
orb
pop
mov
mov
leave
xchg
cmpsb
mov
jp
jg
fcoms
mov
sub
fwait
mov
mov
or
sbb
push
je
ljmp
xchg
and
clc
jb
xchg
ds
push
mov
cmp
rcl
cmpsb
or
adc
sub
push
arpl
in
sbb
mulb
stos
lret
or
cmp
pop
mov
and
data16
movsb
push
in
xor
and
xchg
dec
pop
outsb
dec
cwtl
mov
out
jmp
mov
dec
mov
xchg
cmp
add
js
insl
fildl
lahf
jbe
in
test
popa
test
scas
cmp
mov
out
popf
or
inc
push
in
and
mov
push
loopne
andl
scas
out
sbb
fiadds
fadds
loopne
sbb
adc
iretw
and
inc
mov
ss
cmpsl
sub
iret
pop
enter
jbe
inc
je
stos
mov
add
cmpsl
pushl
xchg
addr16
stc
jmp
inc
push
adc
mov
mov
or
mov
or
push
jbe
mov
adc
orb
adc
rorb
mov
stos
xor
sub
out
and
lret
pop
sub
lret
push
or
rclb
fwait
rorb
jno
inc
and
orl
repnz
inc
mov
les
shlb
inc
fdivrs
arpl
and
mov
lock
aas
ja
lods
pushf
fwait
and
xor
iret
pop
add
sbb
js
stc
xor
lods
mov
sub
or
lcall
dec
mov
and
dec
outsb
daa
inc
cltd
jnp
mov
pop
mov
jmp
dec
dec
clc
leave
repnz
xchg
lock
das
mov
int3
test
das
in
mov
filds
cmp
vpmovm2q
push
loopne
jp
inc
or
pop
xchg
adc
jb
sub
rcrl
mov
or
mov
int3
push
sarb
and
call
xchg
pop
movsl
dec
std
lret
cmp
push
mov
push
fadds
bound
cmp
inc
loopne
jo
loop
shlb
cmp
test
outsl
or
outsb
lret
xor
and
inc
bound
sahf
jge
adc
xchg
lock
or
cmp
xchg
ja
fadds
xchg
lock
mov
and
jb
jle
or
adc
out
and
pop
add
orb
addl
pop
shr
inc
dec
fldenv
imul
lds
sti
inc
and
xlat
popa
es
mov
sub
xor
mov
out
mov
imul
das
push
xlat
mov
lds
out
mov
mull
cs
sbb
fsubl
sbb
pushf
out
and
fsubs
and
and
in
shrl
stos
mov
scas
jmp
gs
ficomps
push
sbb
rorb
push
xor
loop
in
ret
ss
mov
movb
xchg
nop
icebp
mov
jb
cmovbe
div
mov
or
in
fisttps
inc
xorl
cwtl
leave
xor
stos
out
jne
or
push
and
jg
cltd
jle
lcall
or
pop
sbbb
xchg
pop
ret
enter
movsb
pop
push
mov
xor
mov
stc
cmp
out
cmpsl
mov
imul
enter
cmp
inc
lock
enter
inc
jns
scas
mov
in
sbb
xor
outsb
inc
or
or
lret
fsubp
setae
fistl
and
daa
lahf
push
xorl
sub
pop
mov
mov
fsubrl
jle
lret
pop
push
scas
or
add
mov
pusha
js
dec
add
sub
outsb
jl
cld
bnd
mov
rcl
mov
sbb
mov
ss
xchg
addl
lahf
mov
inc
shlb
lds
aad
pop
jg,pt
inc
cmp
sub
shll
xor
jns
pop
mov
sub
push
insb
sub
inc
lods
ficomps
xchg
mov
mov
mov
mov
push
sub
adcl
sub
mov
adc
cmp
lret
pop
fistps
fadds
push
lret
push
loope
cmp
notb
js
cmp
sub
test
movsl
push
inc
leave
insl
jg
out
js
insl
xchg
mov
xor
sub
test
or
jp
fidivrl
out
push
jb
out
add
repz
repnz
bound
mov
push
jb
enter
lods
or
sbb
push
sbb
and
clc
or
jg
sbbl
sbb
mov
insb
jne
mov
mov
repz
fdivrl
xchg
scas
fs
jbe
dec
addr16
leave
sub
xchg
push
dec
pop
sahf
leave
jecxz
or
out
sub
pop
repnz
add
mov
fistpll
adc
insb
call
lea
decb
addr16
subl
data16
repnz
lea
sbb
popl
push
lea
sub
jg
icebp
xchg
dec
adc
dec
fisttpl
jle
add
xor
inc
ljmp
mov
ljmp
sbb
test
adc
loop
fucomip
ret
mov
xchg
dec
xor
sbb
les
sub
pop
or
adc
out
fwait
sub
out
or
dec
popa
cmp
and
mov
shl
nop
pop
fidivs
clc
cmp
push
ds
popf
rcrl
push
int
add
xor
jp
movsb
mov
mov
mov
dec
scas
mov
dec
cli
mov
cld
popf
pop
cwtl
outsb
sbb
lods
jo
sbb
jae
mov
push
sbb
aad
das
decb
imul
pop
fadds
cmpsl
jne
ljmp
add
cmc
sbb
aam
push
insl
out
mov
and
xchg
aaa
mov
mov
popf
in
cltd
adc
inc
push
sbb
cmp
and
pusha
push
mov
mov
xchg
fwait
dec
sbb
and
jge
jecxz
pushf
or
mov
pop
pop
pop
ds
and
jmp
fnsave
jg
and
mov
adc
out
cmp
mov
mov
xchg
jl
scas
rcl
mov
mov
ret
out
xor
inc
ret
aas
scas
mov
dec
xor
and
inc
rorl
push
jle
fwait
or
cmp
push
fisubrs
cwtl
mov
aas
in
fcoms
leave
or
xor
cmp
sbbl
sbb
pop
mov
mov
hlt
inc
mov
jae
cmp
rorl
adc
cs
shlb
pop
sbb
cli
xchg
xchg
popa
cltd
cmp
test
pop
sub
daa
xor
adc
xor
pop
mov
jl
addr16
mov
xchg
and
pusha
inc
insl
aas
pop
insb
dec
aaa
jecxz
mov
aaa
loope
jae
nop
fidivl
mov
dec
mov
ds
popa
mov
dec
pop
imul
cmp
outsl
les
mov
sti
xchg
mov
sub
jmp
shrb
push
out
dec
push
and
sti
call
insl
pop
ljmp
cmpsl
enter
pop
into
js
mov
push
inc
in
xchg
enter
or
push
ds
call
inc
lcall
xor
xor
or
movb
pop
frstor
sub
and
ret
lcall
insl
mov
xchg
scas
data16
je
push
ret
pushf
sub
pop
mov
mov
push
pushf
push
mov
leave
push
fdivrs
cld
xchg
je
notb
jns
pop
sahf
mov
xlat
je
push
loopne
dec
mov
mov
rorb
jp
mov
or
arpl
mov
xor
mov
lret
into
mov
mov
xchg
punpcklbw
dec
mov
idivl
fmuls
shl
jmp
add
or
mov
test
andb
adc
fwait
xlat
outsb
insl
ret
mov
call
and
adcb
out
das
jge
mov
ficompl
push
cmpsl
or
jmp
cmp
gs
ss
sub
push
adc
xchg
pop
cmp
pop
incb
loop
fsubp
test
or
outsl
stc
add
push
mov
movq
cmc
pop
xor
filds
addl
movsl
je
sbb
icebp
or
test
xor
add
scas
fcoml
xor
sbb
jbe
dec
ret
cmpsb
cmp
dec
adc
and
sbb
mov
shlb
mov
mov
sub
movsb
fildl
pop
cmp
js
pop
xor
outsb
mov
int3
add
test
mov
push
dec
jmp
int3
clc
call
dec
cli
dec
mov
push
push
das
outsl
fidivrs
or
hlt
mov
data16
sarl
mov
mov
pop
push
mov
push
jne
add
mull
lds
sbb
dec
sub
and
movl
mov
loope
dec
loopne
mov
sbb
cli
mov
sub
mov
into
xor
and
aas
aaa
pushf
test
lods
lcall
push
gs
sarl
repnz
sbb
ret
adc
push
sub
xor
push
pop
outsb
aam
pop
jo
dec
adc
dec
mov
inc
sub
lret
das
bound
repz
dec
repz
lods
push
mov
jle
in
xchg
mov
je
sub
sarl
xor
cmp
enter
aaa
and
push
and
and
rol
and
clc
adc
movsl
sahf
cmp
pop
shlb
pop
sub
add
shrb
cmp
jmp
and
daa
or
sub
fcoms
push
cmp
mulb
cmp
adc
loopne
add
sub
aam
rcrb
push
jecxz
rclb
pop
or
lret
gs
mov
lods
test
and
xchg
mov
push
daa
aam
std
sub
push
sbb
xor
xchg
sbbb
or
stos
xchg
in
and
rorb
sub
in
add
shl
push
adcl
adcl
jle
ret
dec
sub
and
int
test
mov
or
or
dec
jecxz
ffreep
xor
xchg
xor
loopne
rclb
cwtl
insl
adc
push
jg
xchg
or
out
jecxz
jns
or
cltd
pop
enter
hlt
jmp
lcall
sti
subb
add
adcl
or
mov
test
sub
enter
out
imul
arpl
iret
sbb
xor
ss
cmp
int
pushf
jle
test
out
pop
nop
xchg
add
push
test
pop
pop
push
nop
mov
xchg
daa
fists
sbb
mov
push
aaa
inc
inc
add
ret
or
mov
add
mov
adc
fdivrs
mov
scas
ret
push
ds
stos
sbb
fnstsw
cld
pushf
adc
iret
inc
xorl
es
adc
ud2
xor
and
adc
test
dec
es
out
xor
lret
sub
inc
lods
js
jg,pn
xchg
inc
fdivrp
jle
std
add
ja
imul
add
rorb
pop
push
add
daa
sbb
nop
jp
test
fmull
fs
push
insl
cmp
testb
adc
jecxz
jno
cmp
dec
aam
std
ja
adc
xchg
aaa
insb
mov
ds
adc
int
jle
mov
push
inc
dec
pop
xorb
xor
scas
in
hlt
xchg
push
enter
repnz
inc
xchg
outsl
cmp
adc
add
inc
inc
jb
sbb
rclb
popf
cmp
les
dec
jo
fnsave
push
mov
mov
loopne
pop
pop
jno
cmpsb
mov
or
sbb
mov
test
xor
fmull
insl
lock
loop
jmp
js
adc
jg
cmp
lret
stc
pop
xchg
orl
cmp
out
jae
push
jae
push
in
enter
fxch
xor
dec
or
and
push
les
inc
aam
sbbb
cmp
add
mov
insl
xor
movsb
dec
int3
push
pop
push
mov
loop
imul
mov
jnp
add
and
dec
pop
adc
lcall
dec
sbb
mov
js
push
dec
in
ret
sbb
das
adc
xchg
hlt
mov
cmp
xchg
in
sbb
ss
loop
notl
cs
ds
add
dec
stos
popa
outsb
mov
cmp
sub
xor
mov
int3
jb
out
sti
and
or
mov
and
pop
mov
xchg
shll
push
cmpsl
andb
ljmp
lods
decl
xor
testb
mov
fldenvs
repz
jg
push
das
ror
repz
in
mov
mov
sub
fwait
or
repz
push
incb
mov
push
or
aam
jb
cmp
ficomps
jns
out
rcr
shlb
add
scas
sbb
fsts
out
stc
jp
in
cmpsl
fs
and
pop
js
mov
push
xchg
ja
adc
or
pop
inc
xchg
idivb
jp
clc
cmp
pusha
stc
jl
inc
lret
pop
mov
adcl
xchg
test
insl
ret
mov
ljmp
arpl
imul
test
scas
gs
cld
mov
into
xchg
inc
stc
fldl
adc
adc
test
inc
xor
pop
movsl
popa
adc
andl
jb
or
and
jl
mov
imul
lcall
call
mov
js
iret
mov
and
xlat
inc
loope
inc
pop
dec
or
and
mov
mov
movsb
adc
shlb
int
xchg
fldt
cmpsl
je
xchg
ja
sbb
fs
jmp
arpl
cli
dec
pop
inc
std
add
xor
cmp
in
lock
mov
and
xor
fdivp
addr16
ss
ljmp
mov
ficoml
imul
mov
inc
and
adc
imull
sbb
or
pop
mov
std
or
fcmovnbe
mov
lret
sbbb
xchg
pop
dec
lahf
inc
inc
and
fldl
add
mov
xor
mov
int3
out
sub
mov
push
cmp
stc
mov
pop
xchg
js
push
ficomps
mov
xor
fstpl
cmp
xor
mov
add
iret
shl
xchg
jge
xor
inc
mov
rclb
add
and
notb
mov
mov
mov
lea
sbb
in
mov
mov
ret
jo
cs
mul
sbb
xor
mov
scas
push
xchg
dec
and
mov
jo
push
cs
repz
or
dec
shlb
testb
jno
mov
in
cmp
decb
cwtl
mov
push
xor
and
and
xlat
sarl
pushl
inc
imul
jecxz
adc
jnp
or
mov
jno
ljmp
mov
getsec
cmp
iret
loope
adc
cmp
pop
add
js
push
pop
movsl
fstps
cmpsb
es
jecxz
das
adc
mov
pop
loope
orb
flds
lret
push
pop
cmp
add
inc
mov
xor
add
jge
les
imul
mov
aas
or
hlt
das
pop
push
loope
push
xor
sbbl
sbb
pop
lods
in
sbb
into
mov
test
jmp
dec
pop
and
out
inc
test
adc
jns
push
mov
adc
in
lcall
sbb
fnsave
fsubrs
mov
add
sbb
loop
inc
stos
xlat
leave
daa
sbb
mov
sub
xor
jns
cmp
xchg
fnstcw
daa
adc
pop
aam
aas
sbb
lahf
sub
mov
xchg
loope
das
fisttps
push
xchg
mov
inc
jb
xlat
lods
adcl
push
push
int
or
jp
and
dec
and
cmpsl
addb
ret
les
call
xchg
repz
fcoms
jge
pop
dec
mov
insl
and
imul
mov
pop
gs
mov
ljmp
adc
push
dec
mov
je
lret
stos
mov
imul
pop
lds
and
sub
mov
inc
adc
xchg
cltd
rclb
insl
xchg
pop
cs
ret
adc
jp
fisttps
push
fs
and
add
jnp
out
enter
xor
pop
adc
test
out
fs
push
xchg
loopne
and
cmp
int3
popa
xchg
mov
xchg
andl
lahf
daa
xchg
jle
int
jnp
lret
ja
adc
ret
in
outsl
dec
pop
jg
sub
push
in
and
pusha
sbb
test
mov
popl
push
mov
ffree
sti
test
ficoms
xor
xchg
cmp
pop
or
xchg
or
cmp
inc
mov
stos
push
jo
inc
cmp
std
mov
fistl
pop
jne
cld
jne
adc
and
and
add
rcl
sahf
inc
call
lock
stos
cmp
mov
fisttpll
pop
cs
or
lret
cmpsb
push
ds
test
sub
sbb
lret
in
sub
test
cmp
popf
jno
imul
xchg
int
test
push
movsl
loope
cmpsb
pop
lds
pop
xlat
ss
loope
ss
gs
lret
sbb
mov
sbb
std
jle
cmp
emms
dec
sbb
leave
push
addb
std
push
mov
xchg
arpl
inc
leave
mov
in
lock
cmpb
xchg
sti
add
jo
mov
xchg
cmp
xchg
or
jmp
sbb
jne
push
xchg
fsubl
in
xor
and
jb
dec
jo
loopne
mov
adc
pop
movsl
je
aas
mov
fimull
arpl
repz
pusha
dec
xor
sub
sbb
mov
lock
mov
les
or
xchg
outsl
mov
ret
in
xlat
lea
adc
lods
mov
or
mov
xchg
adc
cwtl
push
jnp
jne
mov
xorb
push
aam
sti
cmp
and
xchg
bound
add
dec
push
mov
ja
adc
jmp
lret
inc
sbb
push
mov
adc
xchg
into
sbb
repnz
and
insl
xor
push
mov
sub
or
jmp
mov
and
in
rcr
and
dec
push
mov
mov
add
jmp
stc
daa
scas
adc
test
dec
dec
jbe
cmp
jle
ror
test
sbb
pop
dec
xchg
ficoms
std
add
ss
mov
jge
mov
pop
xorb
jne
fistl
imul
testl
adc
mov
xor
push
ja
ljmp
push
test
and
cmpsb
push
push
dec
dec
adc
bswap
ds
mov
cmpsb
pop
dec
xor
loop
mov
in
cwtl
inc
ss
mov
addb
ror
cmc
lret
out
mov
int3
loop
xchg
gs
popa
xor
arpl
stos
rorl
js
and
cs
es
mov
jle
out
pop
push
pop
cmp
mov
push
mov
mov
icebp
insl
repnz
add
pusha
sub
sbb
iret
ljmp
mov
insb
iret
outsb
xor
xlat
lcall
push
ljmp
add
popf
lds
leave
and
int3
adc
xchg
adc
out
fbstp
mov
sar
cmpsl
xchg
fisubrs
mov
xchg
pop
mov
fs
int
jg
fists
pushf
add
mov
rcrb
mov
dec
pop
xor
push
inc
xchg
mov
dec
cmp
adc
addr16
mov
cmc
xchg
sahf
sbb
push
lret
xlat
add
outsb
jbe
ret
inc
xchg
daa
jo
call
push
push
sbb
imul
inc
add
stc
cmc
add
vpackssdw
sub
popf
and
xchg
stc
popf
adc
jmp
push
or
xchg
lea
sbb
call
les
inc
and
jb
stos
out
add
imul
pop
out
mov
cmc
mov
outsl
jl
test
les
mov
jmp
sub
lret
fdiv
insl
jle
add
scas
and
jmp
push
je
stc
add
mov
pop
xchg
sbb
out
adc
aam
out
sub
or
jp
ss
mov
data16
mov
add
out
sub
cmpsl
dec
push
mov
xchg
mov
pop
pusha
movsl
pushf
xor
jl
sbb
and
jl
xor
mov
imul
dec
rclb
clc
lcall
dec
and
xchg
movsb
adc
xor
sub
decl
outsl
pop
fimuls
mov
stc
adc
jl
repnz
cmpsl
movb
inc
call
or
and
adc
loopne
lea
jo
pushf
out
inc
xor
aaa
pop
rorl
or
test
jno
cmp
rclb
pop
loope
adc
aam
and
jns
jp
sub
ljmp
mov
mov
shrb
or
cmc
testb
cmp
xor
clc
stos
sbb
cmc
ret
shrl
sub
jecxz
pop
popf
push
movsl
test
mov
stc
pop
mov
push
orl
push
repz
dec
daa
dec
ja
mov
add
std
sbb
out
out
push
test
scas
out
mov
sub
insl
cli
and
fwait
rorl
jle
divl
icebp
add
mov
add
xchg
jno
adc
repnz
xchg
cmpsl
test
popf
std
cmp
and
pop
enter
dec
mov
jns
and
insl
mov
sub
push
mov
push
jp,pt
or
ds
lods
add
das
arpl
and
sbb
xor
push
jle
jb
sti
stos
dec
sbb
test
cmp
lea
dec
aad
jl
inc
je
mov
jge
push
add
aas
jle
dec
dec
jle
dec
outsl
aam
int3
cli
xchg
sbb
aad
mov
movsl
mov
mov
notl
cltd
lret
ficomps
pop
mov
inc
gs
dec
orl
popf
adcb
in
les
pop
subb
xor
testb
push
cmp
sub
rorl
ds
cmp
add
sbb
ret
adc
jbe
outsb
in
in
hlt
sti
mov
mov
fisubl
xchg
inc
call
mov
mov
inc
sbb
xchg
test
push
lret
dec
outsb
or
arpl
std
adc
subl
mov
out
test
out
and
and
inc
xlat
mov
sarb
sub
or
xlat
shrb
dec
fstps
xor
in
in
sbb
adc
or
lods
loope
pusha
mov
aas
pusha
js
dec
lock
pop
cmc
inc
dec
aaa
xchg
aad
mov
and
jl
jmp
lock
jno
imul
jmp
outsl
cltd
orb
test
and
push
xor
xor
push
outsb
adc
imul
movsl
sbb
mov
pushf
inc
loopne
roll
push
pop
aad
adc
add
inc
jno
daa
push
pop
lahf
shrb
jl
mov
xchg
test
imul
js
lds
dec
in
pop
faddl
arpl
jp
sahf
cmp
dec
ss
mov
dec
in
mov
inc
pop
inc
cmp
adc
mov
fistpl
jno
lods
loopne
imul
int
fdivs
iret
adc
dec
pop
cmp
je
fwait
sbb
lods
movsb
jne
adc
pop
push
test
stc
mov
mov
out
push
das
and
cmp
imul
hlt
je
cmp
mov
push
pop
mov
repnz
jmp
test
push
out
sarb
lock
mov
fsubl
roll
test
into
xchg
jne
pop
jnp
jl
lods
cmp
inc
js
divb
arpl
mov
dec
pop
clc
decl
inc
leave
int
dec
stc
icebp
jb
cmp
push
inc
sub
jle
xor
push
inc
or
push
sbbl
mov
subb
mov
mov
iret
jle,pt
mov
lahf
std
rcrl
lahf
sbb
inc
sbb
out
adc
pop
popf
dec
stos
xor
sbb
push
jno
mov
shlb
mov
push
repz
jo
mov
je
mov
lock
sbb
bnd
bound
das
adc
clc
pop
or
jne
mov
mov
cmc
cmp
xchg
mov
dec
mov
sbb
test
ja
test
shrl
lret
inc
xor
sahf
notb
inc
daa
mov
andl
inc
inc
mov
test
dec
es
out
xor
into
mov
pop
add
imul
jp
and
movsl
int
cld
jecxz
int3
xchg
icebp
cmp
ja
scas
leave
adc
repnz
mov
push
clc
mov
pop
xchg
pusha
dec
mov
inc
push
adc
mov
test
push
adc
pusha
and
inc
push
or
call
insb
pop
inc
aas
lcall
out
rcll
mov
add
mov
xchg
xchg
in
push
inc
shrb
mov
bound
xor
xchg
jae
jp
cmp
jo
lret
dec
push
jge
lods
dec
push
jge
addb
mov
frstor
cmp
adc
lcall
jge
push
aad
idivb
lret
mov
sahf
rorb
mov
mov
cwtl
lcall
sti
test
aam
xor
or
fidivrs
mov
test
in
dec
add
dec
adc
and
xor
ds
jl
cmp
inc
adc
jae
jecxz
icebp
imul
les
add
js
ja
fldl
roll
mov
pop
xchg
scas
into
into
cmpsl
imul
push
jae
xchg
and
jle
pop
cwtl
into
aam
mov
ficompl
sbb
dec
popf
jno
hlt
xor
mov
jo
mov
hlt
fstl
fcomip
pop
arpl
bound
gs
cmovle
fsubr
push
inc
leave
into
cmp
mov
jp
add
aam
js
add
rorl
cmp
in
iret
rolb
stc
inc
addr16
pop
mov
ret
push
mov
fwait
sbb
push
inc
sub
into
jb
inc
fnstenv
jge
test
and
dec
lcall
mov
lds
les
insl
inc
out
jo
xchg
xchg
xchg
dec
jne
adc
call
add
inc
hlt
inc
mov
pusha
pop
ljmp
jmp
shl
or
cmp
or
stos
jecxz
xor
cltd
movsb
and
xchg
xchg
enter
push
and
xchg
call
imul
into
cmpsl
popf
mov
sti
fsubrs
dec
das
xor
lods
xchg
hlt
xor
inc
push
andb
in
mov
nop
fwait
sub
xchg
scas
cmp
outsl
xchg
adc
js
sahf
and
push
cmp
cli
js
outsl
fcmovb
xorb
sbb
mov
das
inc
icebp
jb
and
aas
inc
jae
pop
das
push
stos
sar
loopne,pn
mov
push
cltd
and
insl
ret
outsl
pop
push
divb
jnp
fsubl
inc
pop
and
ss
mov
test
sahf
es
mov
mov
nop
int
cmpsl
jne
lods
pop
dec
push
gs
dec
popa
mov
mov
inc
push
pop
rcr
or
stos
adc
adcb
rcrl
pushf
out
js
cli
rcrb
xchg
call
cli
scas
push
mov
xchg
lea
push
and
jl
fbstp
lods
mov
inc
adc
and
adc
mov
shr
xchg
xchg
jae
push
pop
hlt
sub
cld
iret
aam
movsb
sub
in
rcll
mov
sbb
sbb
xor
test
dec
lret
xorb
cmpsl
mov
clc
and
out
iret
std
mov
iret
shll
lds
dec
lret
rcrl
lods
xor
out
loop
pop
cld
jl
inc
mov
insb
loopne
jne
jp
jne
push
daa
fcmovnbe
fldcw
enter
popa
jbe
dec
idivb
cmpsb
mov
pop
dec
icebp
push
inc
mov
dec
in
xchg
add
cltd
aaa
leave
and
aad
push
scas
aam
and
mov
loop
push
push
and
xchg
loope
lret
mov
test
rcrl
mov
xlat
inc
cmpsl
dec
inc
dec
andl
ror
xchg
out
test
into
jp
mov
imul
mov
ss
rorl
mov
mov
ret
pusha
jo
dec
sar
or
add
adc
inc
push
shll
test
out
mov
ds
rorb
add
getsec
jmp
jmp
insb
daa
lods
push
test
sti
push
stc
jg
dec
movsl
clc
mov
je
arpl
mov
dec
mov
fsubr
scas
arpl
mov
xchg
cmp
popa
data16
mov
jbe
dec
cli
mov
incb
outsb
xchg
movzwl
xor
inc
sub
push
inc
sarl
sbb
fildl
fsubrl
mov
pop
ror
out
pop
or
push
fcos
in
jg
jne
add
and
xchg
test
sbb
frstpm(287
lock
cmc
in
sbb
repz
das
lcall
jmp
and
and
dec
lods
divl
mov
stos
dec
mov
ret
out
daa
std
test
jle
cmp
mov
pop
rolb
sbb
out
in
xchg
adc
sbb
enter
pushf
leave
jle
pop
and
pop
and
mov
jo
pop
popf
stos
inc
fsubrl
aaa
push
sbb
js
sub
leave
imul
mov
dec
fnstsw
push
stos
mov
dec
lcall
cmp
adc
jg
xor
adcl
jmp
jbe
inc
xchg
dec
inc
mov
enter
popa
xor
and
scas
cmp
pop
loope
jecxz
arpl
std
mov
enter
pop
fcom
movsb
mov
adc
into
roll
ret
xchg
add
cmp
jcxz
sbb
pmaxsw
inc
add
pop
pop
add
adc
fldenv
xchg
mov
adc
mov
jecxz
sbb
jnp
jno
iret
mov
xchg
xchg
imul
mov
daa
aam
popa
js
mov
iret
sub
outsb
adc
mov
je
pop
sti
xor
push
adc
mov
sbbb
in
out
test
mov
sti
enter
mov
xchg
mov
das
sbbb
fsubp
andl
vcvtsd2ss
pop
mov
sub
sbb
add
movb
mov
movsl
mov
cmc
dec
in
pop
xchg
inc
push
in
pusha
and
xchg
jmp
xlat
inc
cmpb
cmp
adc
jl
sub
lods
sti
jo
xchg
push
ret
test
xlat
jae
and
je
sub
or
or
add
ja
insb
add
push
xchg
mov
iret
fnstcw
adc
add
sub
addr16
imul
jle
inc
ffreep
repnz
insl
and
dec
adc
add
jg
cmp
test
repnz
lcall
xor
cmp
cmovnp
fwait
sub
les
xchg
and
sbb
les
push
shrl
cmp
aas
mov
xchg
jecxz
faddl
pop
sbb
addl
push
js
push
jp
mov
mov
pop
mov
jp
push
enter
in
scas
xor
push
push
jecxz
xor
mov
and
je
xchg
xchg
mov
sub
in
jbe
sarl
cmp
out
fwait
in
jmp
outsl
in
in
std
push
xor
mov
leave
sub
mov
push
adc
inc
fnstsw
push
data16
scas
test
addl
sbb
adc
mov
std
stos
das
jle
cmp
ret
mov
lods
mov
jbe
adc
adc
bound
jno
pop
cmpsl
dec
mov
mov
outsl
movl
jne
sbb
loop
fbld
fsts
ret
cmp
xchg
insl
lock
sbb
xchg
sub
mov
pop
fdivl
iret
jo
ds
outsl
mov
and
idivb
test
cmpsb
xchg
repnz
pop
fistps
rorl
lods
xor
les
out
cs
cmpsb
nop
inc
mov
ljmp
mov
xor
mov
movsb
inc
xor
adc
sbb
loop
nop
add
lods
ficomps
mov
insb
or
and
mov
dec
stos
dec
push
pusha
in
inc
mov
cmp
xchg
dec
xchg
push
cmpsb
sti
insb
jo
inc
ljmp
int3
test
xchg
cmp
pop
bound
dec
inc
lds
push
rolb
jl
loope
push
or
loop
mov
mov
pop
xchg
ja
dec
fidivl
mov
jo
push
sbb
rcrb
mov
push
xchg
xchg
cmp
jb
lahf
pop
sbb
add
fstl
cld
test
cld
push
mov
fidivrl
xchg
in
fcompl
jns
cmp
adc
stos
iret
out
add
pop
lods
or
mov
orl
into
fcoml
call
dec
or
sar
mov
incb
shrb
ljmp
jne
mov
cmp
adc
mov
fadds
pop
adc
pop
movsl
xchg
sbb
addl
scas
dec
bound
ss
gs
and
add
repz
adc
push
inc
jle
popf
movsb
pusha
lahf
add
pop
add
xor
cs
and
inc
leave
mov
stos
ljmp
add
mov
pop
cmc
mov
inc
lret
sbb
inc
or
xchg
js
mov
pop
mov
out
or
add
mov
jbe
stos
cltd
loop
add
pusha
jge
jns
pop
mov
push
jbe
fs
out
roll
push
and
les
jbe,pt
mov
ja
shl
adc
popa
stos
out
inc
fdiv
sarb
mov
push
pop
jnp
shll
std
push
inc
xlat
ja
mov
mov
jno
mov
xorl
add
gs
mov
loopne
and
mov
push
mov
lea
adc
mov
or
rcrb
xlat
movsb
dec
scas
cld
int3
imul
sub
cli
es
dec
int3
or
sub
movsl
cmpxchg
repz
mov
inc
addr16
mov
icebp
loopne
popf
jmp
dec
xchg
cld
arpl
insb
fisttps
into
cmpsb
gs
inc
cmpsl
out
mov
leave
in
insb
pop
inc
test
inc
xor
cmpsb
adc
push
and
push
dec
push
addr16
adc
movsb
pushf
fsubrs
jns
enter
push
js
in
sbb
mov
xchg
daa
or
test
sbb
and
movsb
enter
imul
inc
xchg
pushf
fcoml
mov
cmpsl
xchg
flds
cmc
xchg
sti
repnz
shll
aam
sub
scas
and
jl
fldt
xchg
popf
or
sub
mov
dec
enter
mov
jne
out
roll
sbb
ret
mov
ds
sbb
jg
mov
scas
movsb
mov
nop
xchg
test
add
stc
or
pop
leave
mov
mov
popw
adc
xor
sub
push
xor
js
inc
loopne
mov
adc
icebp
add
cli
sbb
pop
aas
and
stos
mov
and
std
nop
cmp
cmc
jne
aas
xchg
or
cs
push
push
dec
icebp
idivl
into
pop
das
das
ret
ret
cld
cltd
cmpsl
lods
mov
xchg
mov
cmpb
xchg
mov
pop
add
lods
xor
popf
ss
movsb
sub
jae
or
pop
enter
clc
out
iret
push
sbb
mov
outsb
insb
test
pop
icebp
xchg
loopne
jp
jo
sub
xor
add
fs
or
xchg
add
dec
out
ds
loope
inc
in
ret
pop
jno
xor
xchg
and
imul
ret
mov
mov
push
xor
aaa
inc
xchg
adc
pop
gs
test
arpl
sub
sbb
sti
lods
addl
xchg
inc
rolb
push
mov
mov
lods
mov
rorb
rol
mov
test
ret
adc
je
lods
jno
xor
inc
int
mov
sub
push
dec
pop
rorb
stos
scas
aad
je
mov
out
leave
pop
xchg
mov
add
enter
nop
pop
push
jecxz,pt
dec
cmp
mov
mov
or
orl
dec
cmp
push
sahf
inc
sbb
xchg
in
sahf
out
movsb
insl
rorl
pushf
pop
mov
arpl
ljmp
lahf
lods
lret
push
jne
mov
mov
xchg
ficompl
imul
ret
add
push
inc
lods
fwait
push
lods
pop
add
enter
repz
sbb
test
mov
or
mov
negl
dec
xor
in
cmpsb
dec
mov
lcall
add
pop
jl
call
cmp
popf
jmp
out
xrstors
nop
xor
push
mov
mov
mov
pop
sub
cmp
sub
in
loopne
pop
test
sub
jg
jp
in
sub
mov
and
dec
jns
or
sbb
xor
push
jbe
in
imul
test
lahf
test
aas
test
jns
imul
pop
js
mov
or
ficoms
jecxz
call
ds
enter
pop
adc
iret
xchg
lods
mov
adc
or
mov
std
je
mov
cmpsl
fcompl
lcall
icebp
adc
mov
cmpsl
adc
mull
into
loopne
inc
jns
test
mov
std
inc
xchg
jo
sbb
fldenv
jbe
lcall
jo
and
add
or
dec
adc
fadd
fs
in
jne
xchg
push
mov
inc
mulb
fdivrl
mov
mov
insb
out
mov
or
nop
mov
mov
xor
mov
push
jmp
mov
cmpl
int3
xlat
add
lea
mov
mov
pop
mov
mov
aaa
and
pop
lea
and
mov
aad
pop
aaa
adc
std
out
jno
movsb
sti
sub
lods
mov
push
inc
push
mov
cmovs
lods
stos
lahf
xchg
push
out
dec
cmpl
inc
aaa
sub
jecxz
inc
pushf
in
mov
int3
dec
js
xchg
xorl
push
xchg
mov
ja
jae
cmp
xchg
and
in
mov
mov
pop
data16
dec
and
cmp
mov
ret
sahf
dec
repz
sbb
adc
cmc
insl
jbe
jb
rcr
insb
cwtl
xor
loope
in
pcmpgtw
ja
in
sub
mov
dec
or
pushf
test
and
xor
outsl
mov
and
out
inc
shrb
push
je
call
xchg
addr16
sbb
daa
add
jl
lahf
sbb
pop
jbe
add
int3
mov
xchg
jp
pop
insb
ljmp
fisubrs
push
popf
std
dec
loope
xchg
xor
jae
push
add
push
jp
lahf
mov
out
cwtl
xlat
jmp
mov
or
adc
gs
push
outsl
dec
leave
iret
mov
inc
ret
clc
loop
enter
and
into
hlt
nop
sub
push
pop
push
negb
mov
xlat
jmp
ss
mov
inc
mov
pop
xchg
rolb
arpl
lahf
xchg
pop
mov
insb
mov
mov
mov
adc
jae
rorl
mov
adc
cmp
mov
dec
or
fstpl
cmp
mov
push
scas
dec
sub
aam
mov
pop
sub
jge
jle
sbb
push
daa
and
xor
push
mov
imul
mov
cli
cmp
cmp
pop
cmp
inc
fadds
shlb
xor
add
mov
xchg
repnz
jecxz
cmpsl
pop
loope
sbb
jbe
addb
jmp
mov
leave
stc
pop
daa
jge
adc
push
fcomps
enter
cltd
lea
outsl
sub
nop
dec
imul
cmp
pop
push
and
test
lods
xchg
rolb
push
stos
xchg
mov
leave
jecxz
jae
xor
xchg
dec
movsl
or
xor
mov
mov
mov
cmpsb
mov
arpl
insl
push
xchg
xchg
loopne
add
in
lock
mov
aas
push
xor
pop
lahf
mov
mov
js
sub
movsl
pop
add
rcrl
push
dec
nop
jnp
nop
popa
inc
pop
leave
cmpb
adcb
repz
testb
dec
mov
adc
sbb
pusha
inc
inc
cltd
lea
lods
adc
loope
sbb
negl
xlat
sub
repz
cmp
mov
sbb
xor
imul
and
adc
pusha
dec
shlb
xchg
mov
std
inc
and
test
insb
mov
push
ret
jp
jmp
imul
out
mov
scas
cmpsl
jge
imul
std
mov
je
xor
jb
leave
add
jnp
mov
push
pop
sbb
cmp
int
lock
sub
cmpsb
les
jl
dec
sbb
imul
mov
into
imul
sub
and
inc
and
and
stos
jmp
shll
leave
mov
mov
les
test
icebp
and
incl
jmp
pop
js
aaa
jecxz
adc
out
adc
lods
adc
push
or
xchg
cmp
jmp
imul
add
sahf
sbb
mov
push
mov
nop
popa
jbe
in
lods
sti
loop
popf
shll
mov
sub
xchg
decl
xchg
xor
mov
mov
dec
dec
iret
lahf
ljmp
js
push
xchg
or
dec
subb
mov
sub
loopne
mov
mov
lahf
push
xchg
stc
and
neg
mov
sarl
mov
mov
loope
push
xor
pop
out
sub
stos
and
mov
cmp
dec
les
call
popf
dec
mov
negl
cmp
loopne
out
xchg
dec
fisubl
lret
adc
pop
test
xlat
cmpsb
rclb
imul
push
cld
push
mov
lds
pop
notb
cmp
and
pop
mov
mov
lret
xchg
or
pop
pop
or
sub
iret
push
add
jo
jl
sbb
mov
mov
sbb
lcall
in
gs
inc
lods
repz
pop
push
mov
pop
cwtl
fadds
cmp
lahf
loopne
in
sbb
in
call
lret
xor
scas
loope
add
fldenv
sti
xor
inc
in
jecxz
dec
jnp
add
pop
cld
pop
into
mov
mov
jle
and
int3
xchg
pop
and
aaa
scas
push
jmp
or
out
sbb
mov
dec
add
push
and
lahf
and
or
cld
mov
and
cltd
pop
xchg
xor
test
lret
mov
test
jg
pop
mov
jns
or
pop
and
insb
mov
imul
enter
or
fucomip
imul
int
mov
inc
push
fs
xchg
stc
inc
push
and
or
or
mov
adc
jmp
jp
mov
cmc
add
jecxz
push
loope
ss
pop
shlb
sub
pop
es
mov
jl
outsl
push
pop
scas
mov
in
ret
dec
scas
test
and
es
stos
rep
pop
dec
adc
jb
mov
inc
cmc
jmp
ret
es
push
lahf
dec
sbb
lahf
sbb
jo
adc
outsb
mov
jecxz
sbb
repnz
inc
ljmp
jp
add
cmp
aaa
sarl
nop
popa
cmpsb
test
repz
icebp
add
sub
adc
pop
mov
les
nop
das
pop
push
and
ss
lret
insb
insb
and
hlt
pop
repz
fnstenv
imul
jecxz
aaa
cmc
test
mov
icebp
xchg
pop
and
nop
jmp
jnp
lcall
push
stos
outsb
fisttpl
pop
inc
mov
cmp
lock
sarb
mov
scas
je
test
enter
dec
decb
cmp
sub
shl
adc
leave
lds
in
test
add
std
inc
push
loopne
or
scas
push
inc
mov
lret
nop
iret
and
cltd
adc
pop
test
or
jl
les
icebp
push
mov
add
sbb
inc
cmp
sbb
jae,pn
icebp
jle
xchg
add
aas
stc
cmp
lods
push
jo
and
or
sbb
push
addr16
mov
mov
cwtl
jne
ret
push
fadds
roll
mov
push
adc
jmp
leave
or
adc
fldenv
pop
leave
int3
mov
in
lds
cmp
push
stos
jbe
imulb
xor
push
pop
pop
mov
scas
xor
jmp
js
mov
push
dec
push
fstl
xor
adc
shlb
cmp
aas
dec
pop
pop
cli
addr16
sbb
daa
mov
bound
bswap
xchg
cltd
cmp
sahf
jae
cwtl
scas
jmp
fistps
jo
ror
xchg
repz
cmpsb
or
stc
int3
mov
sti
lods
aam
dec
sbb
sub
push
into
es
ret
mov
cmp
cmpsl
cmc
icebp
jge
ds
inc
or
inc
addr16
ficoml
std
and
jecxz
in
repz
scas
sarb
fmul
sti
in
xchg
aam
sti
mov
push
mov
ljmp
jo
jae
dec
push
rcrb
and
stos
outsl
push
mov
push
sbb
mov
mov
movsb
cmp
mov
push
adc
sbb
lcall
movsb
stos
xchg
nop
mov
or
add
nop
insb
jno
lcall
push
stos
dec
xchg
cmp
cmp
cli
inc
jns
and
jecxz
xorl
mov
and
or
pop
nop
jge
mov
inc
andb
loopne
aad
xor
in
or
xlat
xlat
ds
sbb
lods
xchg
stc
stos
pop
dec
stos
cwtl
cld
test
nop
pushf
mov
addr16
and
add
imul
push
shll
xor
arpl
push
mov
dec
in
pop
xchg
mov
in
and
push
sbb
lahf
std
cld
cmp
mov
mov
cvttps2pi
sbb
lods
stos
push
xchg
mov
cmp
cli
aad
mov
ret
pop
scas
in
jnp
outsl
adc
popa
cld
mov
aam
cltd
mov
test
jno
xor
ret
mov
call
push
xor
push
das
imul
add
push
jl
das
and
mov
pop
pop
jb
cmp
xchg
cmc
inc
mov
fsubrl
or
xor
je
sub
cmpsb
mov
pop
scas
sub
lret
iret
imul
in
mov
movsl
mov
inc
sbb
xor
jg
mov
adc
inc
dec
mov
rcrl
mov
inc
sub
cli
testl
lahf
pop
sub
inc
stos
jl
not
or
lcall
ret
in
xchg
or
mov
psadbw
leave
dec
lret
jo
fld
jmp
cs
adc
jmp
sub
dec
or
mov
dec
push
repz
adc
mov
icebp
xchg
jle,pn
aas
mov
dec
rorb
mov
push
clc
stos
daa
dec
mov
out
mov
fmull
lods
mov
subb
mov
movsb
gs
fcmovnu
in
cli
mov
adc
or
push
mov
fs
add
inc
sbb
add
int
dec
outsl
std
imul
xchg
sub
out
xor
ljmp
lahf
int3
xor
cmp
test
out
int
inc
lods
les
dec
jno
pop
shrb
add
inc
in
jae
orl
push
icebp
adc
arpl
outsl
or
das
xor
and
in
stos
mov
into
jp
stc
mov
push
dec
mov
xor
leave
or
jge
iret
xchg
adc
dec
mov
dec
cmova
dec
cs
clc
or
mov
add
xchg
mov
inc
and
cmpsb
add
push
ds
cmc
out
shll
dec
std
jo
movsl
sti
add
xor
sbbl
lea
adcb
lea
enter
das
les
jo
push
jb
mov
xor
mov
push
test
popl
fwait
mov
lcall
cmp
in
cld
testb
dec
shrb
mov
enter
sbb
cli
cmp
inc
in
pushf
cmp
lock
in
mov
sti
std
jae
shll
pop
int3
clc
orl
and
push
movsb
rcll
dec
scas
pop
inc
daa
pop
xchg
adc
inc
lods
xlat
cld
arpl
mov
push
push
sbb
adc
pop
test
sub
mov
push
in
push
test
bound
test
enter
mov
aaa
mov
pop
jno
xor
out
or
pop
mov
rcll
or
iret
fldl
cs
shr
adc
adc
mov
stos
stos
fcmovnu
loope
inc
inc
add
rcrl
cli
cmpsb
cmc
mov
mov
imull
fidivs
xor
out
jns
pop
shll
fnstsw
sub
popf
roll
popf
xlat
xchg
in
jmp
jb
pop
scas
loope
sub
jns
mov
aaa
in
sub
scas
int3
sti
push
inc
mov
or
xchg
or
jb
push
rclb
pushf
or
cmpb
jmp
fisubs
imul
add
dec
pop
push
aad
repnz
or
xchg
std
cmp
int
fwait
test
aam
cmp
nop
sbb
out
loope
adc
fwait
outsl
outsl
pop
mov
fwait
aad
mov
lret
sub
addr16
out
enter
xchg
push
or
adcl
fucomi
inc
push
cmp
pop
jge
or
mov
mov
jmp
jbe
outsl
subb
cmp
xor
rclb
jnp
xchg
and
mov
adc
jecxz
lret
cmp
xchg
xorps
cs
push
out
adc
mov
aad
into
les
loop
lods
pop
in
arpl
mov
dec
movsb
jo
ret
leave
pushf
test
outsb
or
popa
jecxz
or
cmp
jnp
mov
or
mov
lcall
mov
push
push
lcall
push
sbb
sbb
in
mov
cwtl
call
jl
jp
push
mov
pop
lahf
sub
or
xor
sbb
dec
mov
xchg
lret
sub
mov
lds
jle
pop
xchg
mov
mov
leave
js
mov
enter
and
jmp
inc
mov
mov
mov
movsl
jl
insb
pop
cmp
arpl
loopne
sbb
out
lds
pop
xor
jmp
jne
nop
les
or
push
cmp
in
xchg
ds
mov
lods
mov
in
ljmp
xchg
std
test
inc
outsb
lcall
mov
xchg
dec
xchg
push
push
cmp
clc
js
cmc
jmp
push
outsl
or
push
cmpsl
mov
mov
pop
sbb
sub
cmc
das
cltd
lret
push
lods
xor
jne
adc
lahf
pop
jl
push
xor
and
mov
lret
aaa
dec
or
mov
mov
push
push
fidivs
shrl
orl
ret
arpl
jg
adc
cwtl
and
ss
push
popf
inc
pop
icebp
sub
test
mov
bndstx
push
jno
xor
fwait
subb
cld
mov
jbe
ret
fldenv
movsb
cmp
mov
sub
test
dec
xchg
icebp
inc
fdivrs
loope
mov
ja
nop
outsl
fldt
test
sahf
mov
lods
mov
sbb
divl
sahf
xchg
frstor
mov
int
popa
scas
mov
push
in
ds
leave
inc
pop
mov
dec
push
xchg
push
mov
stc
arpl
stc
sub
repnz
or
push
sub
in
in
daa
and
mov
jecxz
orb
test
in
mov
mov
pop
cs
sub
popl
or
add
jg
xlat
mov
in
ds
icebp
mov
mov
sahf
adc
dec
inc
mov
cmp
sbb
stos
sti
dec
jle
pop
pop
aad
mov
mov
sbb
repnz
dec
aad
mov
movsb
cmpl
pop
cmp
pop
mov
addb
cmpsb
sti
adc
mov
adc
mov
nop
sub
imul
mov
cmp
add
lock
jbe
pop
sbb
scas
mov
push
daa
rorl
xor
xchg
stos
imul
loop
lret
test
outsl
jb
aam
cmp
or
jbe
int
add
push
ror
mov
imul
cmp
shlb
pop
mov
push
pop
add
mov
adc
xor
adc
pushw
lock
std
fcomip
jbe
repz
mov
sbb
adc
and
inc
xchg
scas
dec
or
lea
inc
imul
cmpsl
and
lods
mov
negb
or
sub
dec
sub
lret
call
mov
and
rclb
jecxz
jno
adc
jg
inc
pop
pushw
dec
adc
cli
repnz
popa
or
jge
in
rclb
aas
test
fsubrs
mov
out
adc
or
pop
adc
movsl
push
jl
inc
fdivrl
out
and
lcall
mov
lods
jmp
nop
lods
lods
int
fnstsw
dec
gs
pop
jmp
sbb
mov
mov
addr16
xor
pop
and
inc
sti
leave
mov
jb
jl
xchg
jp
mov
jge
dec
lock
sbb
sahf
add
push
arpl
imul
fwait
or
inc
mov
push
inc
gs
rol
sbb
into
leave
xchg
das
sbb
jns
add
fbstp
fisttpll
cwtl
mov
mov
test
jo
mov
cmp
mov
cmp
jne
add
ss
bound
into
xchg
fdivs
xor
mov
cs
pop
or
add
sub
stos
mov
ret
lahf
mov
inc
sbb
rorl
push
mov
jo
pop
mov
in
cmp
cmc
mov
sbb
pop
dec
adc
leave
loopne
sti
jle
fbld
cmp
div
push
sub
cmpsl
movsl
mov
sub
cld
sarl
pop
mov
add
std
sbb
adc
dec
xchg
mov
mov
out
mov
outsl
in
and
in
push
sub
scas
test
lds
push
sti
pop
mov
outsb
jge
cmp
and
lods
or
jb
or
push
adc
shrb
mov
and
not
mov
push
mov
mov
lret
cltd
or
push
jo
dec
sbb
push
out
xor
jne
or
mov
xchg
jecxz
test
ljmp
or
cmp
movsb
loop
sbb
insb
xchg
roll
mov
add
mov
xor
and
inc
pop
mov
pop
ljmp
push
inc
cmpl
neg
insl
mov
lods
ja
push
add
push
jo
mov
es
inc
idivb
mov
or
push
fiaddl
sub
or
sbb
orl
in
out
xchg
out
xchg
jecxz
ss
bound
stos
inc
mov
out
lcallw
add
mov
inc
hlt
out
sbb
lock
add
stos
mov
lret
cmp
movl
or
xchg
jae
push
pop
sbb
sarb
les
sub
into
jl
sbb
sbb
test
mov
xchg
push
add
mov
cli
lods
mov
pop
negb
addl
enter
add
cmp
mov
imul
shl
inc
cmpsb
aas
xchg
add
aaa
jle
notb
mov
dec
fisubrs
push
xacquire
clc
pop
addr16
xor
cltd
repnz
pop
ja
into
cmpsb
cmp
in
inc
or
scas
adc
dec
jecxz
push
push
dec
mov
fistpll
orl
js
hlt
rep
ss
test
cli
push
cmpb
bnd
enter
movsb
jle
inc
jl
and
loope
xor
loop
clc
lea
incl
ja
cmp
cmp
or
inc
push
cltd
rclb
repz
ds
leave
or
mov
sbb
fsubrl
or
aam
or
xor
cmpsb
in
inc
sub
fldenv
dec
xchg
lea
mov
mov
repnz
mov
ss
test
sub
or
std
cmp
and
jnp
divb
or
jle
jge
gs
sahf
addl
out
mov
call
and
mov
lds
jae
std
out
add
inc
xor
aam
mov
outsb
into
sbb
push
fwait
mov
movsb
sbb
call
adc
hlt
or
mov
fnsave
lret
sti
sbb
dec
test
lahf
inc
mov
push
adc
addb
pop
clc
jle
daa
and
movsl
mov
dec
fcomip
xor
roll
ficompl
mov
mov
push
pop
mov
pop
movsl
mov
in
bound
outsl
enter
scas
popf
inc
ja
pop
movsb
push
adc
jg
call
push
das
shll
lea
sbb
ljmp
lret
lods
mov
ss
and
fisttpl
pushl
xchg
adcl
inc
gs
add
mov
mov
pushf
mov
mov
lods
or
cld
sub
fwait
in
aam
arpl
int3
addr16
mov
mov
in
cltd
jns
jns
scas
dec
pop
inc
sub
push
repnz
cwtl
dec
fmull
lods
dec
stos
or
lock
mov
ret
fsave
scas
lods
dec
cmpsb
add
repnz
sbb
fdivrs
adc
adc
cmp
mov
push
loopne
push
push
mov
ds
fadds
cmp
mov
ljmp
pop
push
dec
stc
mov
pop
or
pop
jl
xor
push
in
or
out
ror
movsl
push
call
fdivrl
mov
or
mov
jae
jmp
in
data16
inc
lds
and
pop
cwtl
cmp
mov
nop
mov
test
pushl
lret
rclb
scas
addr16
cmc
mov
dec
outsl
cmp
sbb
xor
loop
inc
or
cs
or
cmp
xchg
pop
lret
loope
in
mov
dec
pop
lahf
inc
testb
lock
fists
addl
lock
call
pushl
cbtw
inc
adc
in
pop
jae
fisttpll
ja
lahf
mov
shl
xchg
imul
inc
lods
mov
inc
pop
dec
xchg
shr
adc
adc
mov
dec
jl
cmp
cmp
imul
sbb
mov
cmp
popa
and
jne
ret
sarl
sbb
jb
cltd
jbe
xor
push
incl
sbb
add
popf
push
js
mov
sub
arpl
cmp
mov
mov
dec
in
mov
shrl
xor
adc
movsb
enter
fsubr
cmc
dec
or
pop
fcompl
or
popl
leave
pushf
shlb
xchg
sub
jmp
and
outsl
pusha
pop
icebp
push
pop
adc
xor
push
out
fcoml
push
and
inc
pop
mov
call
addb
dec
aad
mov
test
xlat
pusha
push
sbb
gs
outsb
in
mov
imul
movsb
push
and
sbb
push
jnp
sub
lods
insl
in
rcrb
adc
lods
mov
or
pop
pop
pop
push
sbb
movsl
in
shll
popf
jg
mov
je
scas
dec
push
or
adc
add
xchg
pop
shlb
sti
je
mov
int
push
adc
test
mov
pop
loope
inc
lock
jl
ja
es
test
inc
mov
xchg
in
sub
and
fsubrl
xchg
leave
inc
push
fstl
sahf
add
xchg
or
loopne
push
or
stos
data16
or
call
push
stos
xor
std
mov
fidivl
cmp
dec
inc
daa
fstpt
add
push
scas
push
lret
adc
adc
pushf
mov
push
in
mov
jle
cmpsb
les
jbe
popw
xchg
into
mov
xor
out
sub
test
jl
mov
jl
cmp
aaa
scas
sahf
xchg
xchg
xchg
jp
cli
shrl
in
addr16
xchg
or
scas
adc
xor
imul
pop
fucomi
and
xchg
adc
mov
outsb
scas
outsb
jecxz
inc
inc
adc
in
bndstx
push
jns
fisubl
data16
bound
mov
push
cwtl
ds
jg
stc
mov
dec
movsb
insl
ror
and
jl
cmp
dec
mov
aas
ja
cs
fs
lret
lcall
js
ds
push
les
stos
jmp
dec
and
outsb
fldl
xchg
mov
insb
fwait
xchg
shll
ja
adc
ss
adc
pop
xlat
sbbb
xchg
mov
mov
ja
jo
hlt
push
jae
mov
dec
fwait
je
cltd
int3
repz
clc
mov
lahf
push
hlt
jbe
push
xchg
or
push
popa
jp
das
pop
test
cmp
pop
loopne
loope
shl
stos
mov
negb
sub
test
lods
inc
out
lods
or
jp
mov
fdivl
jge
xchg
cli
mov
out
xor
mov
push
fs
ljmp
cmp
adc
cmpsb
cld
subl
push
iret
cmpsl
xchg
xor
das
cwtl
xchg
lods
add
test
test
gs
or
pop
adc
fmul
jge
ss
lods
sar
or
divps
adc
sub
dec
push
iret
or
shlb
sahf
dec
dec
jle
cmp
decb
mov
adc
lahf
aaa
jne
fsin
push
rcll
or
mov
into
push
or
mov
shlb
mov
push
xchg
jae
sbb
xor
daa
jle
mov
xchg
jbe
cld
movb
scas
imul
mov
pop
cs
in
push
int
sbb
and
cmovs
xor
andb
push
outsb
test
lock
dec
jge
mov
pop
int
lds
mov
add
xchg
aaa
push
xchg
xchg
jle
sbb
jp
pushf
idivb
add
repnz
cld
mov
ss
mov
sub
sub
test
jnp
push
fldl
push
out
add
pop
js
andb
sbb
outsb
jno
insl
add
popa
dec
inc
pusha
push
cmp
negl
cmp
and
or
rep
jne
dec
mov
inc
jge
notl
arpl
notl
and
js
or
lcall
in
cli
jne
daa
mov
je
call
or
fdivs
stc
std
push
aam
xchg
scas
push
pop
