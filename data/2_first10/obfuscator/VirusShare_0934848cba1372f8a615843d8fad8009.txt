push
mov
push
push
mov
mov
mov
movl
cmp
jne
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
sub
adc
push
call
cmpl
jne
mov
inc
mov
jmp
xorl
mov
movl
xor
xor
cmp
jg
mov
sbb
mov
xor
mov
add
mov
addl
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
leave
ret
sub
popl
xchg
fwait
push
push
int3
out
addb
sbb
adc
jl
jg
jl
xchg
xchg
divb
repnz
cli
mov
test
enter
lock
loop
xchg
cli
shl
pushf
xchg
out
xchg
fst
lock
loope
shlb
aad
xlat
lret
cs
jmp
xor
call
cs
into
xor
cmp
aad
into
add
fnstsw
fidivs
add
adc
sbb
cmp
sbb
push
or
aaa
push
and
add
push
sbb
push
sbb
jo
data16
ss
jl
cmp
adc
inc
jns
cmp
jl
inc
sbb
or
sbb
dec
jle
inc
push
imul
push
dec
inc
push
jle
outsl
jge
cmpsb
inc
jb
imul
pop
stos
scas
dec
jbe
jbe
stos
dec
jge
dec
mov
movsl
push
mov
dec
mov
dec
stos
push
mov
xchg
xchg
scas
fwait
and
xchg
xchg
cmpb
in
out
mov
jecxz
mov
cli
call
cltd
loop
cmc
movl
repz
out
sar
enter
lret
ror
leave
icebp
stc
not
fcmovnb
rcr
and
cld
lret
and
out
call
repnz
mov
cltd
repz
negl
test
pushf
sti
ror
iret
int3
out
ljmp
fwait
rcr
lahf
out
enter
cmc
mov
in
sub
fcmovbe
and
rcr
shrb
sti
rcl
cli
cmp
fdivrp
cs
aam
daa
fisttps
sub
into
fisttpll
es
shlb
pop
pop
adc
cmp
aaa
or
cmp
pusha
bound
add
add
aas
cmp
sub
xor
js
pop
outsb
pop
sbb
insl
cmp
fs
add
bound
jg
jp
adc
addl
fmuls
xchg
test
sbb
jl
sbb
jl
push
push
dec
pop
jbe
push
adc
pop
push
inc
jno
jp
jg
jnp
jge
mov
jl
mov
jno
test
mov
push
mov
cmpsl
jl
jg
mov
addb
push
xchg
cmpb
lcall
xchg
loopne
cmpsl
mov
mov
cltd
mov
jecxz
in
idivb
repnz
xchg
xchg
incb
jmp
cld
cld
ljmp
mov
out
sti
cmc
notb
repnz
fsub
sahf
cmc
sub
jmp
std
sub
cmc
pushf
mov
shl
cltd
mov
loop
popf
loop
iret
mov
lahf
aam
in
lock
lea
xchg
clc
rclb
clc
std
mulb
in
and
xor
sub
ljmp
xor
ds
aad
shll
cmp
xlat
daa
add
add
ficoms
adc
ds
fidivrl
sub
cmp
xor
and
sbb
imul
jo
xor
adc
or
jle
cmp
inc
add
imul
jp
push
add
dec
insb
arpl
push
fs
pop
je
push
push
mov
jne
movsb
mov
inc
js
insb
jle
inc
mov
dec
movsl
jne
push
dec
mov
push
mov
push
jle
cmpl
test
test
xchg
push
xchg
xorb
movsl
subl
test
mov
mov
mov
nop
icebp
in
in
xchg
ret
lcall
ret
in
xchg
into
ror
enter
and
cwtl
loope
repz
repz
into
rol
dec
aad
mov
mov
gs
nop
addb
ss
cmp
cmp
jl
sbb
jl
mov
out
mov
xchg
mov
ljmp
loop
loop
xchg
loop
lea
loope
repnz
aam
hlt
enter
icebp
cld
repnz
loope
loope
in
aad
int
loopne
and
daa
das
out
xor
xor
xlat
aas
xor
les
aaa
ss
fxch
or
xor
lret
add
rcrl
iret
aaa
fldt
and
pusha
sbb
adc
sbb
or
add
adc
adc
addr16
jne
insb
jno
insl
pusha
outsl
jnp
cmp
inc
jae
push
jne
ja
or
or
sbb
dec
jb
arpl
je
dec
pop
sbb
insl
mov
push
dec
pop
stos
mov
jbe
stos
push
jp
mov
mov
mov
pop
inc
mov
mov
mov
mov
xchg
mov
loop
mov
xchg
mov
mov
stos
mov
jmp
loopne
mov
cld
xchg
sahf
sti
std
rcrb
lret
repnz
lret
fwait
rcrb
dec
mulb
fsub
and
fmul
xor
iret
and
testb
mov
repnz
mov
jmp
ret
cwtl
ror
out
xchg
xchg
ror
xchg
in
xchg
lret
repz
clc
ffree
repz
ret
into
xor
and
cmp
repnz
sarb
lock
iret
sarl
fsubs
and
cmp
cmp
and
xor
aad
sub
xor
sub
xor
sbb
and
cmp
punpcklwd
or
outsb
sub
aaa
data16
adc
jge
ja
inc
jge
push
dec
adc
push
adc
mov
xor
mov
mov
add
faddl
jl
jg
jl
insl
jno
data16
dec
sbb
sbb
sbb
pop
dec
dec
jl
ja
mov
push
push
inc
mov
outsl
scas
ja
mov
jge
dec
pop
mov
pop
push
mov
push
dec
inc
dec
inc
stos
pop
mov
push
dec
lods
orl
xchg
stos
pushf
mov
fwait
movsb
test
test
mov
in
xchg
in
jmp
mov
cmp
xchg
jmp
sti
out
out
ror
call
sti
jmp
hlt
std
shl
fistpl
xlat
sub
jmp
ret
xlat
nop
jmp
mov
mov
mov
cmc
sarb
lahf
out
lret
hlt
leave
icebp
into
rcll
fcomp
ret
repz
lock
repnz
cld
sub
ret
int3
xor
cld
fdiv
cmc
xlat
shl
cmp
clc
daa
hlt
add
fsubrs
and
add
and
sub
sub
adc
adc
int
paddq
fisubrs
sbb
and
aas
push
or
ss
sbb
xor
outsl
pop
adc
insl
add
add
push
mov
sub
push
push
mov
xor
mov
mov
movl
cmpl
je
cmpl
jne
adc
add
sub
mov
push
push
push
call
mov
dec
mov
jmp
mov
movl
xor
or
cmp
jg
xor
or
dec
mov
mov
and
mov
movzbl
sub
xor
lea
cmp
movzbl
shl
mov
mov
mov
mov
xor
andl
addl
push
lea
imul
cmp
mov
je
imul
xor
mov
lea
mov
jmp
cmp
mov
mov
sbbb
imul
mov
mov
cmp
mov
movzwl
sbb
mov
mov
movl
mov
mov
or
movl
mov
movl
mov
addl
cmp
jne
cmpl
jne
cmp
jne
mov
imul
mov
and
mov
mov
mov
mov
mov
mov
mov
add
xor
lea
movl
addl
xor
cmp
jne
mov
xor
lea
xor
mov
cmp
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
adc
adc
and
imul
pushl
call
jmp
mov
xor
lea
xor
mov
cmp
jne
pop
pop
pop
leave
ret
xchg
mov
fwait
lcall
xchg
mov
mov
inc
jl
sbb
jl
jne
push
fs
adc
imul
push
push
dec
jbe
insl
pop
push
pop
inc
inc
push
data16
imul
insl
mov
dec
dec
mov
mov
mov
push
movsb
pop
test
mov
xchg
xchg
xchg
nop
mov
lods
mov
movsl
cmpl
test
cmpsb
and
icebp
xchg
xchg
imul
mov
stc
out
xchg
in
sahf
testb
ret
pushf
ror
lret
loope
int
loopne
icebp
leave
sti
ljmp
xlat
push
ficomps
fcmovne
fmul
ret
in
das
int3
cld
cs
popf
mov
mov
pushf
cld
lret
clc
test
ret
mov
hlt
ror
lret
ror
repz
jmp
fdivr
in
stc
jmp
cli
and
fcmovu
fcmovnb
and
xor
ror
ss
std
ds
cmp
frstor
cmp
das
sub
rcl
or
pop
sub
sub
fildl
ds
fidivs
cmp
sub
jne
or
adc
sbb
inc
inc
cmp
bound
jne
jg
or
or
add
outsl
pusha
push
outsl
pop
jp
pop
pop
ja
js
pop
inc
jl
popa
mov
inc
pusha
dec
movsl
dec
pop
dec
stos
insl
scas
mov
inc
jnp
lods
mov
jge
mov
inc
mov
push
mov
inc
test
pop
movsb
lods
pop
orb
mov
cmpsb
popf
mov
mov
mov
loopne
mov
mov
mov
imul
fwait
jmp
mov
cli
xchg
clc
popf
lcall
ror
decl
xchg
shl
out
xchg
out
xlat
ror
lock
div
std
lahf
sub
addb
test
xchg
nop
cmpb
mov
jl
jg
jl
es
rcr
jmp
mul
xchg
xchg
mov
mov
xchg
xchg
fwait
in
xchg
jecxz
loop
xchg
not
nop
into
in
ror
jmp
cli
fcmovnbe
shlb
clc
repnz
sub
stc
shrb
out
sub
leave
repnz
stc
cmp
les
xlat
faddl
fisubl
leave
add
fnstcw
sub
adc
fists
cmp
pop
or
xor
sbb
cmp
bound
pop
cmp
or
xor
sub
gs
jl
push
inc
outsl
pop
inc
jns
add
add
punpckldq
or
push
pcmpeqw
insb
outsb
sbb
dec
jo
push
push
push
dec
popa
data16
bound
cmpsb
inc
inc
inc
cmpsl
push
pop
pop
test
inc
push
mov
pop
test
movsb
mov
inc
push
mov
mov
test
stos
xchg
mov
mov
scas
pop
mov
mov
jmp
mov
cwtl
mov
xchg
cltd
std
mov
vpsraw
jmp
xchg
shl
shr
call
shlb
cwtl
aam
loop
ret
daa
aad
test
and
fisubrl
int
std
xor
cltd
stos
xchg
cwtl
xchg
xchg
mov
in
xchg
in
enter
std
out
in
lock
xchg
fucomp
int3
popf
idiv
vpmulhw
fadd
fcmovnu
shll
and
iret
ret
fptan
xlat
fcomi
sub
fiadds
aas
pop
sub
cmp
aas
add
sub
daa
adc
add
cmp
arpl
add
bound
sbb
or
cmp
bound
push
xor
insl
sbb
cmp
push
sbb
mov
mov
addb
test
mov
roll
jl
jg
jl
adc
or
sbb
popa
push
arpl
push
jge
outsl
adc
pusha
push
jl
pop
test
pop
jl
jg
mov
inc
jae
insb
jg
mov
push
mov
stos
mov
sbbb
mov
mov
stos
mov
push
addl
mov
pop
mov
jecxz
addb
pushf
fwait
loopne
icebp
xchg
mov
cmc
jmp
xchg
repz
mov
pushf
clc
ret
cli
mov
cli
mov
xchg
xchg
cmc
xchg
stc
icebp
loop
fwait
lock
popf
aam
int
ret
fistpl
mov
in
std
fsubrp
inc
mov
test
rcrl
ljmp
mov
sahf
lock
cltd
cmc
sti
sti
in
out
out
xchg
in
iret
into
div
xchg
clc
sahf
out
frstor
fisubs
std
rcr
cs
sub
xlat
cmp
sub
fisubrl
fisubl
aam
sub
cmp
and
lret
add
or
push
xor
cmp
sub
sub
fists
cmp
add
and
insl
add
add
adc
jo
jne
jb
jb
cmp
cmp
nopl
add
sbb
jbe
imul
imul
outsl
sbb
pop
dec
push
popa
inc
inc
mov
imul
dec
mov
jge
mov
push
mov
js
mov
stos
jnp
jle
jg
test
mov
lea
xchg
mov
push
stos
cmpsb
push
push
mov
xchg
movsl
cltd
test
mov
out
sub
testl
in
jmp
mov
lcall
lahf
mov
rorb
xchg
clc
fdivp
stc
and
idiv
jmp
addb
dec
shrb
xchg
test
xor
repz
jl
std
jg
jl
sti
rol
into
fadd
sub
cmp
cltd
mov
xchg
clc
cmp
nop
and
xchg
xchg
xchg
mov
iret
fwait
repnz
hlt
mov
jmp
aad
rcrb
shl
ret
fwait
daa
and
lds
xor
out
out
rol
stc
cmc
sub
sub
fmulp
ss
fcmovbe
shll
xor
lds
fldt
xor
adc
sub
add
or
or
fisubs
sbb
insb
add
add
or
sub
add
outsl
jnp
add
pushw
data16
jg
aas
add
add
sbb
dec
or
dec
or
je
dec
pop
jns
sbb
adc
jns
je
pop
push
inc
inc
jbe
inc
inc
pop
jo
jge
inc
outsl
jb
push
jns
push
dec
pop
pop
mov
cmpl
mov
test
mov
mov
mov
cwtl
mov
pop
mov
xchg
out
mov
ljmp
lock
cmc
lcall
cltd
in
test
popf
in
in
xchg
hlt
out
leave
out
fwait
iret
out
idiv
cltd
jmp
and
out
rcl
loop
int
in
in
ror
lock
mov
xchg
fwait
xchg
xchg
decb
into
lahf
roll
into
int3
xchg
jmp
and
iret
std
in
jmp
mov
sub
movl
movl
mov
push
xor
movl
cmpl
je
cmpl
jne
adc
mov
push
push
call
mov
dec
mov
jmp
mov
add
mov
movl
xor
xor
cmp
jl
movzbl
sbb
mov
add
mov
push
push
test
je
mov
test
xor
add
xor
xor
adc
mov
imul
mov
add
mov
mov
movzbl
dec
mov
xchg
sub
mov
mov
and
mov
mov
call
mov
mov
cmp
mov
mov
sbb
mov
mov
mov
xor
add
cmp
jne
xor
or
sub
mov
xor
add
jmp
mov
mov
nop
mov
xchg
orb
jl
pop
jl
jl
push
sub
fisttpll
cmp
fcoms
cmp
add
nopl
cmp
jo
jo
push
js
bound
inc
lock
call
mov
mov
movzwl
xor
mov
mov
xor
add
cmp
je
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
mov
add
mov
movl
mov
cmp
jl
movzbl
sub
mov
shl
mov
movzwl
and
mov
mov
add
mov
mov
or
mov
mov
add
xor
mov
mov
mov
cmp
jbe
mov
mov
mov
xor
mov
add
mov
mov
lea
push
pushl
call
mov
mov
and
mov
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
movzwl
mov
mov
mov
mov
mov
and
mov
xor
add
cmp
je
mov
sub
mov
add
mov
mov
test
je
movl
mov
mov
add
mov
mov
mov
mov
add
mov
inc
inc
sub
cmp
movzbl
mov
sbb
mov
dec
mov
imul
movl
mov
cmp
jge
mov
movzbl
and
mov
sub
mov
mov
cmpl
jge
mov
mov
add
mov
jmp
lea
mov
xor
xor
mov
sub
mov
mov
sub
mov
mov
xor
andl
mov
inc
mov
cmpl
jne
xor
sbb
push
call
cmpl
jb
mov
add
mov
mov
mov
mov
xor
xor
lea
mov
add
imul
cmp
je
mov
mov
mov
xor
lea
mov
mov
movzbl
or
mov
xor
cmp
mov
adc
mov
add
div
mov
cmp
mov
mov
adc
xor
lea
cmp
movzwl
movzbl
sbb
mov
mov
mov
mov
lea
mov
xor
or
xor
xor
sub
mov
mov
xor
lea
movl
mov
cmp
jge
mov
mov
sbbb
mov
xor
mov
mov
mov
mov
sub
mov
mov
mov
xor
lea
mov
xor
add
imul
cmp
jne
mov
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
and
and
call
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
cmpl
jae
movzbl
xor
xor
or
mov
jmp
mov
movzwl
add
mov
mov
xor
add
adc
xchg
mov
mov
inc
inc
sub
xor
xor
mov
sub
mov
dec
mov
imul
add
xchg
lea
mov
mov
xor
or
xor
push
xor
mov
dec
inc
cmp
xor
add
mov
adc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
xchg
addb
xchg
adc
addb
xor
es
jo
jl
sbb
jl
sub
cli
cld
fxch
shll
jmp
aam
cmp
lds
sti
std
fcmovbe
and
rcl
xor
fimuls
int3
cmp
rcl
xor
into
push
sbb
aaa
sub
add
add
push
sbb
cmp
xor
xor
adc
arpl
inc
dec
imul
outsl
jo
or
pop
push
imul
jae
pop
jnp
sbb
cmpsb
test
dec
gs
jl
dec
push
cmpsb
inc
scas
mov
insb
inc
test
js
jp
dec
js
mov
test
test
test
dec
push
mov
test
adcb
in
mov
loope
in
mov
popl
cli
cwtl
out
mov
clc
sahf
cwtl
lahf
clc
loopne
in
loop
sar
ret
rcl
in
repnz
lret
rcrb
shl
out
inc
sub
shrb
xchg
nop
ljmp
ljmp
add
mov
out
lcall
lahf
call
hlt
int
jmp
test
fistps
in
rol
ret
ret
icebp
not
cmp
into
iret
ds
daa
add
cmp
sub
push
prefetchwt1
or
pop
es
shlb
fcmovnbe
or
push
fmuls
cmp
filds
pop
and
adc
adc
or
jno
sbb
jp
jp
aaa
jne
add
adc
addr16
push
push
adc
pop
dec
push
dec
imul
dec
arpl
push
pop
movsl
mov
mov
dec
mov
inc
scas
mov
mov
dec
mov
cwtl
xchg
lea
xchg
test
lahf
adc
jl
sbb
jl
mov
pop
scas
lea
adcl
mov
stos
xchg
nop
stos
loope
mov
test
mov
sti
out
notl
mov
cmc
xchg
xchg
cltd
add
fwait
std
ror
leave
shl
sahf
dec
rcr
nop
aam
in
rcl
mul
fadd
out
and
and
and
cmc
in
test
xchg
cmpl
std
in
in
loopne
out
in
ljmp
jmp
jmp
aam
xchg
hlt
shl
fldcw
sub
leave
std
cs
vpsrlw
ror
lret
fadd
aad
aas
cmp
fbld
fbld
add
cmp
psubusw
sub
or
and
adc
cmp
popa
cmp
pusha
bound
jo
das
pop
outsl
adc
sbb
jp
push
movd
outsb
add
or
add
jae
push
inc
push
gs
dec
js
dec
jl
je
jg
push
pop
jg
jo
jl
ja
dec
stos
push
movsb
mov
js
inc
scas
mov
jge
push
lods
mov
mov
mov
push
orb
mov
push
push
stos
cltd
mov
xchg
mov
popf
cmpsb
pushf
sub
subb
addl
xchg
sarb
in
lret
lret
div
test
rorb
aam
xchg
fldpi
fwait
into
cmc
clc
fsubp
aad
xlat
lock
repz
lret
xlat
in
and
lds
and
xor
hlt
mov
mov
repz
icebp
mov
xchg
pushf
test
out
xchg
ror
clc
testb
aad
les
cltd
sar
aad
and
div
xchg
lcall
mov
mov
xor
jl
jg
jl
jmp
jmp
icebp
ret
repz
xor
incb
add
cld
add
or
add
lds
pop
lret
and
sub
or
fdivrl
cmp
xor
or
add
add
outsl
pop
pop
jb
insl
pusha
adc
push
jl
sbb
cmp
cmp
data16
pop
jle
inc
push
push
push
imul
imul
jge
mov
jne
push
push
arpl
push
dec
mov
mov
insb
inc
pop
push
push
pop
pop
pop
push
mov
mov
mov
inc
xchg
mov
mov
mov
push
push
mov
mov
mov
mov
test
xchg
mov
test
loope
mov
cltd
mov
cli
xchg
xchg
mov
mov
out
fwait
clc
out
rol
enter
enter
leave
clc
int3
sahf
xchg
hlt
and
clc
and
loopne
loop
out
fsubl
into
fsubs
ret
xchg
popl
xchg
add
out
rcrl
lret
sahf
aam
in
xchg
rcl
repz
fcom
div
pushf
and
not
rcl
leave
mov
cs
and
sub
xlat
fcom
fstp
clc
cmp
aam
aam
push
cmp
xor
sub
ss
cmp
adc
or
adc
cmp
and
sub
cmp
sub
or
jo
add
adc
push
inc
inc
or
jnp
sbb
jns
outsl
push
fs
imul
dec
imul
pop
pop
jo
jb
imul
pop
mov
fs
scas
push
cmpsb
dec
inc
cmpsl
push
lods
mov
mov
mov
mov
popl
popl
mov
das
mov
mov
rclb
jl
jg
jl
test
movsb
dec
dec
push
dec
mov
nop
stos
pop
scas
mov
mov
mov
xorl
pop
cmpl
mov
pushf
mov
cwtl
pushf
jmp
call
lahf
mov
xchg
pushf
ror
loopne
leave
in
ret
repz
int
shl
std
icebp
ljmp
loopne
fcmovb
jmp
and
shr
and
es
in
mov
mov
mov
mov
mov
std
jecxz
cltd
ret
out
mov
out
lock
lret
xchg
xchg
xchg
ror
rcr
lock
jmp
into
fcomi
fsubp
leave
jecxz
clc
iret
call
xor
xlat
shlb
xlat
aam
enter
add
cmp
push
xor
and
fidivs
adc
and
adc
sbb
push
or
and
fdivrl
fbld
xor
add
sbb
gs
or
pusha
ds
jne
push
add
jge
jp
sbb
inc
inc
or
cmovle
inc
push
pcmpeqd
imul
pop
jnp
inc
pop
push
jp
arpl
insl
jns
cmpsb
outsw
scas
push
lods
push
dec
dec
mov
inc
scas
test
push
mov
test
pop
mov
push
push
lea
test
and
in
xchg
icebp
mov
loopne
orb
clc
mov
mov
sahf
mov
call
rol
rclb
in
push
push
mov
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
xor
and
pushl
push
pushl
push
push
call
jmp
mov
orb
mov
add
mov
movl
xor
add
cmp
jg
mov
push
mov
mov
movl
mov
mov
mov
xor
cmp
adcl
add
mov
mov
mov
xor
pop
mov
inc
mov
add
pop
leave
ret
push
mov
mov
mov
and
mov
mov
imul
cmp
jno
movzwl
dec
mov
jmp
mov
sbb
movzbl
shr
mov
mov
sub
xor
mov
pop
ret
sub
mov
lea
nop
cmpb
sbb
push
jl
sbb
jl
in
xchg
ljmp
ret
jecxz
mul
sti
jmp
fmul
and
iret
repz
call
xchg
mov
mov
xchg
mov
in
clc
in
loope
clc
shl
std
jmp
xchg
xchg
xchg
fxch
ljmp
into
loop
pushf
and
loope
daa
clc
fsubs
es
aad
icebp
enter
and
cmp
lds
add
and
lret
push
das
or
or
das
xor
cmp
or
push
pop
sbb
fisttps
cmp
sbb
add
pop
add
or
or
or
ja
push
js
cmp
jnp
jge
cmovge
inc
fs
addr16
push
jnp
jg
je
pop
push
jns
jae
pop
inc
jge
cmpsl
pop
dec
jnp
dec
movsb
push
stos
jo
pop
inc
push
pop
dec
pop
pop
inc
mov
jp
push
pop
mov
cmpb
test
scas
scas
pop
mov
xchg
xchg
pop
mov
pushf
xchg
mov
mov
call
out
in
mov
mov
xchg
xchg
mov
jmp
sahf
enter
in
aam
hlt
leave
xchg
ret
cmc
into
xchg
and
shll
fwait
neg
ljmp
ret
aaa
xchg
mov
clc
cmc
test
repz
sahf
xchg
popf
xchg
clc
roll
cli
lcall
ror
nop
std
ljmp
rcl
rcl
xlat
repz
sahf
loope
xor
ljmp
les
fistpll
aam
cmp
add
incb
and
cmp
cmp
xor
aam
xor
fiaddl
sub
adc
add
arpl
sbb
or
insl
push
daa
addr16
push
add
xor
mov
icebp
rcrl
mov
pushf
loop
inc
push
jl
sbb
jl
ja
adc
insb
cmp
outsl
add
pusha
jg
push
pop
imul
dec
or
outsb
push
dec
push
push
ja
pop
insl
jo
jo
pop
pop
mov
dec
dec
push
test
outsl
jno
dec
mov
inc
mov
jg
push
test
test
pop
mov
test
nop
mov
mov
mov
mov
xchg
xorl
jecxz
mov
lcall
xchg
out
jmp
icebp
repnz
loop
ret
sbbl
mov
pushf
in
ror
leave
fxch
fst
clc
ljmp
fld
sub
sar
enter
mov
scas
repz
mov
clc
loope
cmpb
cli
out
xchg
cltd
in
loopne
std
ljmp
cwtl
iret
in
in
icebp
xchg
cli
fsubr
rcr
and
fcmovnb
sar
pushf
cld
imul
fldenv
fcmovbe
out
and
rcl
xor
cmp
sub
repnz
cmp
ret
pop
movl
pop
xor
fst
adc
es
and
aas
xor
gs
cmp
and
pop
fisubrs
imul
add
adc
adc
push
inc
sbb
inc
inc
dec
or
dec
sbb
outsb
sbb
adc
push
ja
dec
jo
outsl
imul
outsl
jne
popa
jge
jnp
jnp
lods
test
mov
mov
mov
push
mov
jns
mov
mov
addb
mov
pop
dec
dec
cmpsl
mov
mov
mov
fwait
loopne
xchg
pushf
mov
fwait
mov
out
jmp
sub
and
mov
mov
cli
stc
mov
ret
cld
std
in
mov
ljmp
mov
add
repnz
test
jne
sbb
pusha
push
jl
sbb
jl
xlat
xchg
ficompl
aad
and
sub
out
iret
xor
mov
popf
sti
mov
lcall
loopne
rorb
icebp
pop
xchg
inc
aad
stc
in
cmc
stc
fwait
aam
in
sahf
cwtl
daa
sub
das
lds
int
cmc
repz
sub
fldt
sub
sarl
cli
fisubs
xor
rcl
cmp
cmp
sub
lret
sub
push
xlat
adc
daa
push
fstl
adc
sbb
cmp
daa
sbb
sub
push
jo
insl
jno
or
adc
add
add
add
jnp
jl
dec
dec
push
jno
inc
dec
push
jo
dec
fs
pop
jl
push
dec
push
sbb
push
inc
imul
push
jo
inc
outsl
movsl
push
movsl
js
mov
inc
mov
push
test
push
dec
test
pop
xchg
movsb
mov
xchg
xchg
mov
nop
pop
mov
xchg
mov
in
nop
mov
mov
cwtl
xchg
jmp
xchg
mov
pushf
repnz
cld
mov
std
mov
int3
in
xchg
in
in
mul
sti
leave
rcrl
fdivr
out
sub
std
in
ret
xor
in
mov
test
divl
in
cwtl
leave
mov
ljmp
mov
mov
xchg
aam
lock
xchg
repnz
hlt
std
call
les
enter
and
and
xor
enter
cs
repnz
cmp
ret
leave
cmp
fsubrs
lret
es
xor
daa
cmp
or
cmp
fdivs
push
outsb
push
add
wrmsr
xor
xchg
lea
out
orb
pop
sbb
jl
jg
jl
push
jne
or
adc
or
jns
add
adc
inc
jbe
inc
push
inc
jne
push
jns
adc
pop
sbb
jbe
ja
jns
fs
je
pop
cmpsb
mov
jl
dec
jno
push
jns
inc
pop
mov
stos
scas
dec
scas
mov
mov
pop
mov
dec
mov
xchg
mov
push
fwait
xchg
cmpsl
push
xchg
mov
mov
fwait
test
mov
test
loop
in
mov
xchg
lahf
cltd
cmp
nop
jmp
mov
nop
std
les
sahf
popf
test
pushf
loope
enter
shl
xchg
fucomip
shl
xchg
lret
iret
and
fcmovnu
fcmovu
ffree
es
xor
in
xchg
in
repnz
decl
xchg
out
xchg
rol
loopne
std
ret
mov
ror
mov
std
xchg
repz
xchg
std
lret
idiv
and
shl
vpminsw
fcmovnu
rol
leave
sub
and
cs
cmp
fidivrs
rolb
cmp
ss
or
leave
cmp
cmp
pop
adc
xor
push
xlat
sub
pop
imul
add
sbb
imul
or
sbb
inc
add
jbe,pt
insl
addr16
sbb
insb
inc
adc
outsb
pop
push
bound
pop
pop
pop
sbb
dec
arpl
pop
imul
mov
dec
inc
js
cmpsb
dec
mov
scas
lods
pop
mov
inc
inc
movsl
pop
mov
mov
inc
mov
mov
push
mov
sub
push
xor
mov
movl
cmpl
je
cmpl
jne
mov
add
add
pushl
push
pushl
push
push
call
mov
dec
mov
jmp
mov
movzwl
sub
mov
mov
movl
mov
cmp
jg
push
mov
push
xor
mov
add
mov
test
xor
add
mov
sbb
mov
xor
movl
movl
add
jmp
adcb
xchg
push
push
mov
mov
ret
jl
mov
jno
adc
jp
cmp
jg
jle
dec
add
inc
ja
dec
outsl
push
inc
jl
push
push
push
inc
adc
imul
je
sbb
sbb
inc
je
bound
pop
inc
pop
inc
jno
cmpsb
push
cmp
jne
mov
mov
mov
mov
mov
mov
jmp
adcb
xchg
and
orb
xchg
inc
or
mov
js
mov
push
dec
dec
mov
mov
xchg
dec
mov
mov
push
mov
xchg
mov
loopne
loopne
out
jmp
icebp
xchg
add
add
test
add
add
fadds
mov
movzbl
sub
mov
mov
mov
movl
movl
mov
movzbl
mov
or
mov
mov
mov
xor
add
movzwl
sub
movl
movl
mov
xor
mov
andl
sbbl
sub
add
mov
mov
cmp
je
mov
mov
xor
xor
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
cmp
movzwl
adc
mov
mov
xor
xorl
subl
andl
div
mov
mov
cmp
jge
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
test
jne
xor
sub
jmp
mov
mov
orb
mov
xor
mov
sub
mov
xor
add
add
ror
mov
add
mov
xor
or
xor
xor
and
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
movl
mov
cmp
jg
sub
xor
mov
mov
xor
xor
or
mov
add
mov
sub
add
jmp
mov
xor
movzwl
sub
mov
sub
add
mov
mov
cmp
jne
pushl
pushl
call
jmp
lea
popf
popf
mov
jb
xchg
xchg
test
lret
mov
in
in
xchg
hlt
mov
mov
lock
mov
pushf
lahf
hlt
out
into
mov
lcall
leave
leave
out
enter
cli
int
and
sti
out
and
cmp
jne
movl
cmpl
je
cmpl
jne
and
sbb
sbb
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
movl
xor
add
cmp
jne
xor
add
mov
and
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
lea
mov
mov
mov
sub
mov
xor
add
xor
xor
xor
mov
mov
mov
cmp
lea
mov
mov
mov
sbb
mov
mov
mov
cmp
mov
sbb
mov
push
pop
sub
add
cmp
mov
mov
sbbb
mov
mov
xor
lea
cmp
jne
cmp
xor
or
mov
adc
mov
xor
add
pop
pop
pop
leave
ret
xchg
mov
orb
mov
pop
jl
sbb
jl
xchg
mov
cmpl
jmp
mov
loopne
mov
testl
xchg
loop
into
ljmp
int
iret
xchg
jmp
out
fcomi
pushf
stc
aad
out
test
stc
and
fmulp
fcmovu
sub
mov
mov
mov
sti
shl
xchg
lcall
ret
iret
bnd
shr
cld
lret
lcall
shlb
les
and
xor
into
leave
xor
cmp
lret
fdivrp
sti
cmp
es
and
sub
or
shrb
daa
sub
shrb
sarl
daa
add
es
sub
and
or
cmp
push
jb
ja
adc
cmp
pusha
push
aaa
ds
jae
sbb
jp
jge
push
add
inc
dec
je
jne
jns
sbb
push
inc
pop
pop
pop
arpl
push
jle
dec
popa
scas
jp
jle
inc
dec
mov
jb
inc
push
push
mov
mov
mov
mov
mov
mov
lods
cmpsl
mov
pop
push
mov
scas
nop
pop
jmp
mov
loop
in
jecxz
mov
mov
mov
stc
cli
pushf
fwait
ret
leave
mov
loopne
shl
aam
out
neg
hlt
not
and
frstor
loopne
cli
in
jecxz
and
daa
in
cmc
lret
mov
cwtl
xchg
mov
repz
stc
rcrl
test
out
jecxz
lcall
loop
in
cmc
int3
repz
fcomip
popf
in
xchg
icebp
pushf
and
lret
cli
das
sub
fisubrl
jmp
xor
shrb
xchg
cltd
cltd
ljmp
test
popf
in
pop
jl
sbb
jl
std
sub
cmp
pop
fdivr
aaa
xor
sub
adc
add
adc
adc
adc
or
ds
push
sbb
pop
arpl
or
jae
insl
or
aaa
jns
bound
push
push
adc
popa
inc
inc
adc
aas
pop
add
imul
addr16
push
outsl
push
jns
push
je
sbb
inc
dec
cmpsl
push
js
js
lods
push
inc
inc
dec
jle
inc
mov
outsb
mov
pop
test
push
sbbb
movsb
pop
inc
mov
xchg
xchg
test
xchg
xchg
mov
cmpsb
mov
loopne
cltd
movsl
movsl
mov
mov
cwtl
mov
mov
in
testb
xorl
hlt
mov
in
int
iret
leave
cmc
repnz
aad
in
xchg
lret
not
sti
ffree
shl
out
es
inc
enter
cs
cs
mov
testb
repz
lcall
lcall
iret
ret
in
hlt
call
lock
fcmovne
jecxz
les
sub
clc
hlt
enter
jmp
lds
rcl
ss
iret
ror
xor
and
lds
or
sub
iret
add
rcl
or
xor
adc
xor
pop
sub
push
imul
addr16
jp
or
inc
jle
sbb
jno
adc
push
or
inc
bound
dec
jb
jbe
push
pop
fs
outsb
dec
jo
dec
push
jae
jno
pop
cmpsb
pusha
ja
ja
imul
movsl
jns
mov
cmpl
pop
jp
inc
pop
mov
mov
nop
lea
xchg
xchg
popf
popf
xchg
xchg
jbe
mov
xchg
xchg
test
pop
jl
sbb
jl
mov
mov
scas
pop
mov
mov
mov
test
out
xchg
mov
test
clc
cld
xchg
jecxz
std
ret
clc
call
les
lds
xlat
repz
and
aam
repz
aam
enter
ror
and
imul
mov
xchg
popf
cmc
loopne
mov
mov
mov
xchg
loop
cli
or
iret
pushf
in
rorb
int3
hlt
into
nop
xchg
fistpl
shl
leave
and
ljmp
mov
imull
repz
sub
sti
lret
cmp
xlat
fisubl
cmp
pop
lds
cmp
and
and
adc
cmp
add
sub
push
cmp
add
push
push
imul
outsl
sbb
or
fs
jb
bound
pop
outsl
pop
or
adc
dec
adc
pusha
adc
ja
jns
data16
pop
mov
sbb
inc
lods
dec
jle
insl
cmpsb
insb
scas
push
jg
mov
mov
pop
jle
mov
pop
mov
inc
xchg
mov
push
scas
mov
cltd
mov
pop
pushf
mov
cwtl
pop
out
cmpb
mov
xchg
xchg
hlt
xchg
stc
mov
mov
ret
lcall
xchg
rcl
icebp
in
enter
in
fdiv
shr
loopne
fisubl
hlt
repnz
loop
xlat
sub
fisubrs
jmp
in
aad
repz
popf
mov
sbbl
cli
ljmp
aad
lock
xlat
fcomi
dec
ljmp
into
ret
jmp
sub
leave
out
xor
sub
out
lret
fsubs
mov
xchg
sbbb
xchg
xchg
add
jl
inc
pop
jl
mov
jl
sub
xor
fdivr
sar
iret
cld
cmp
sub
sub
fidivrl
fcmovne
add
or
xor
cmp
cs
add
push
xor
or
xor
pop
or
jae
or
adc
pusha
pop
jns
pop
add
push
inc
or
inc
or
sbb
or
adc
push
sbb
jb
push
jl
inc
inc
jae
inc
pop
jnp
mov
jl
jb
dec
dec
mov
scas
lods
jbe
pop
stos
mov
test
inc
mov
mov
lods
scas
mov
mov
xchg
stos
mov
xchg
xchg
mov
repz
xchg
hlt
mov
mov
mov
pushf
out
popf
stc
les
jmp
mov
inc
xchg
repz
xchg
out
aad
fmulp
lock
sub
fisubrl
sti
fld
ljmp
mov
cltd
mov
sbbl
ret
pushf
call
icebp
ljmp
in
cwtl
leave
popf
in
lahf
fcomp
out
fprem
es
sub
sub
push
mov
sub
movl
movl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
push
pushl
pushl
pushl
pushl
call
xor
xor
dec
mov
jmp
mov
movl
mov
cmp
jbe
cmp
mov
mov
adc
lea
mov
mov
mov
add
mov
push
lea
mov
mov
mov
add
lea
mov
mov
push
push
mov
cmp
movzbl
xor
xor
adc
mov
mov
mov
mov
cmp
xor
add
xor
xor
sbb
mov
mov
xor
mov
orb
mov
xor
xor
add
add
movl
subl
xorl
div
mov
cmp
je
movl
mov
xor
lea
mov
xor
xor
mov
sub
mov
mov
mov
imul
mov
mov
cmp
je
mov
orl
mov
mov
sub
mov
xor
mov
mov
or
add
pop
pop
pop
leave
ret
movl
mov
cmp
jle
mov
or
mov
mov
and
mov
mov
add
cmp
je
mov
andl
jmp
andl
mov
inc
mov
cmpl
jne
sbb
sub
push
push
push
call
cmpl
jb
mov
mov
or
cmp
je
mov
xorl
jmp
mov
xor
mov
mov
mov
test
adcl
orl
xor
mov
add
mov
mov
cmp
je
mov
xor
cmp
xor
add
mov
sbbb
add
mov
cmp
mov
mov
sbb
mov
mov
xor
add
add
mov
lea
mov
mov
xor
xor
and
mov
mov
xor
add
imul
sub
mov
jmp
xchg
xchg
mov
addr16
fldcw
test
jo
test
jl
jl
jl
out
cli
sub
icebp
xchg
pause
mov
pushf
mov
cld
lahf
cli
sbbb
leave
test
lret
mov
in
lret
fdivr
out
jmp
movl
mov
cmp
jle
xor
xor
movzwl
or
mov
mov
mov
xor
cmp
je
mov
addl
jmp
xchg
xchg
adcl
inc
push
cmpsl
xchg
test
subb
jl
mov
jl
shr
fbld
jmp
sub
sti
fcmovnu
out
daa
xor
fdiv
rcr
rcr
clc
das
rcl
cli
int3
das
fbstp
xor
ret
sub
and
mov
cmp
je
mov
jmp
xchg
xchg
nop
mov
xor
orb
mov
jl
jl
jl
pop
sbb
sbb
sbb
and
frstor
adc
add
imul
aas
movd
adc
imul
sbb
insl
inc
jns
sbb
add
popf
popf
xchg
lcall
xchg
xchg
inc
leave
push
mov
jg
jl
cld
enter
sub
hlt
aad
cs
aam
and
aad
aad
sub
add
add
and
add
rdpmc
adc
fnsave
aaa
cs
add
sbb
or
push
sub
addr16
jp
or
cmp
jne
popa
add
push
jge
jnp
gs
imul
adc
push
jg
push
pop
push
pop
jne
push
imul
mov
inc
dec
push
je
jo
mov
mov
mov
xorb
mov
mov
mov
cmpsl
mov
xchg
lahf
xchg
mov
xchg
mov
fwait
cwtl
sahf
mov
addb
xchg
mov
loop
mul
mov
mov
cwtl
xchg
lcall
popf
mov
cli
pop
leave
out
mov
nop
fsts
aam
and
into
and
leave
shr
fisubl
mov
mov
pushf
std
ret
notl
cli
add
lcall
into
aam
out
cli
iret
xchg
lret
cwtl
enter
aam
out
vpsubsw
jmp
and
and
cmp
test
aaa
enter
cmp
cmp
add
xor
cmp
sub
lret
add
lret
and
push
add
adc
xlat
or
or
xor
aas
addr16
adc
add
ds
imul
or
adc
adc
or
ja
add
outsb
sbb
adc
inc
pop
bound
or
jle
or
dec
push
sbb
jge
imul
pop
inc
cmpsb
dec
pop
cmpsl
push
push
mov
mov
inc
push
dec
mov
outsb
mov
mov
dec
pop
pop
lods
inc
mov
mov
dec
stos
inc
scas
test
pop
xchg
mov
lea
test
cmpb
jl
sbb
jl
stos
push
mov
mov
mov
xchg
pop
xchg
mov
out
fwait
lods
mov
scas
xchg
fwait
xchg
mov
mov
cld
clc
sti
xchg
mov
test
jmp
repz
out
jmp
popf
xchg
loopne
ret
imull
fscale
and
icebp
sub
shlb
in
xchg
idiv
notb
in
sbbl
ror
out
out
idiv
repz
xchg
aam
loope
rol
shl
test
call
cld
xor
sub
xor
xor
divb
cmc
xor
xor
rolb
xor
ror
xor
sub
or
add
daa
sbb
sbb
add
push
add
pop
sbb
add
sbb
jo,pt
or
add
push
adc
jbe
sbb
sbb
inc
pusha
inc
imul
jae
data16
inc
imul
jae
push
push
push
arpl
test
mov
outsb
push
mov
push
dec
mov
cmpl
dec
pop
inc
inc
movsl
mov
mov
push
mov
mov
mov
mov
mov
xchg
xchg
ljmp
cld
sti
repz
cmc
popf
mov
into
pushf
popf
loopne
out
in
clc
xchg
out
in
xlat
fdivr
int
fucomi
out
sahf
fsub
cli
fisubl
loopne
fmul
cli
faddp
sub
and
xchg
in
mov
xchg
stc
xchg
cld
xchg
mov
mov
jecxz
ljmp
lock
in
clc
repnz
lret
inc
fld
sub
test
mov
mov
xchg
addb
out
addb
mov
jl
ret
es
repz
cmp
sub
cmp
sar
lret
xor
xlat
fmulp
sub
add
movb
rcl
push
xor
cmp
sub
or
xor
and
or
or
add
or
adc
push
or
push
popa
je
inc
popa
pop
inc
or
inc
imul
inc
imul
pop
sbb
adc
jl
test
jg
mov
insl
mov
pop
push
stos
mov
mov
mov
push
push
jl
movsb
inc
mov
pop
pop
stos
xchg
push
mov
lahf
push
xchg
mov
test
sbbb
mov
mov
xchg
mov
repz
fwait
cld
mov
icebp
xchg
xchg
xchg
lea
test
les
mov
stc
xchg
iret
aam
rcr
rcr
clc
ret
sahf
daa
fsubrp
sub
and
fdivr
and
and
and
xor
sahf
loop
in
mov
xchg
xchg
out
mov
ret
cmc
lahf
icebp
sti
mov
shl
jecxz
incb
out
fsub
fwait
lcall
fst
loop
iret
fld
sti
aam
out
xor
out
jmp
xor
xor
divb
xor
cmp
aam
rorb
es
and
and
add
adc
cmp
ficoml
ss
xor
add
adc
sbb
outsl
bound
sub
sbb
insl
sbb
jl
add
inc
adc
pusha
inc
dec
pop
sbb
or
jae
adc
dec
push
push
outsl
jle
jnp
sbb
inc
pop
jge
dec
inc
jbe
mov
jnp
jg
jb
mov
mov
push
push
mov
jbe
jne
mov
xchg
lods
test
orl
mov
or
sbb
jl
nop
pop
push
scas
cltd
xchg
fwait
push
xchg
push
xchg
mov
mov
mov
xchg
mov
test
loop
scas
xchg
repz
cwtl
mov
mov
xchg
loop
in
sar
cld
sar
jecxz
sbbb
iret
xlat
rcll
ljmp
popf
ret
and
and
out
sub
and
nop
out
mov
in
in
repz
imul
repz
enter
ret
les
lea
in
cwtl
lret
lock
and
lahf
aam
repnz
enter
inc
iret
int3
lret
sub
aam
repnz
cld
xor
cld
cld
shrl
xor
fcos
sarb
into
iret
and
adc
rorb
xor
push
pop
movups
sbb
sub
add
sbb
and
jo
add
adc
addr16
add
js
jp
jge
jge,pt
inc
fs
inc
add
push
inc
pop
jl
gs
fs
dec
dec
outsw
imul
push
mov
bound
fs
jns
dec
mov
inc
movsb
jae
jns
push
push
dec
dec
jg
push
inc
lods
jg
mov
mov
scas
mov
mov
mov
xchg
mov
popf
xchg
sahf
test
test
lock
call
mov
cld
std
pushf
shl
xchg
out
in
rcl
out
into
in
aam
sti
fwait
rol
xlat
cli
into
stc
jecxz
loopne
enter
lret
enter
xor
xchg
xchg
icebp
hlt
test
call
call
ret
lock
sahf
pop
hlt
leave
loop
out
and
lret
in
clc
shl
lock
cld
jmp
xchg
lods
sbb
mov
je
cmp
jl
icebp
xor
and
fsincos
aad
lret
iret
fistpll
fidivrs
sti
push
mov
push
cmpl
je
andl
xor
or
inc
mov
cmpl
jne
mov
sub
push
push
pushl
call
cmpl
jb
pushl
movl
mov
cmp
jg
mov
pushl
mov
pushl
call
jmp
adcl
fwait
es
pop
xchg
addb
in
rclb
jl
jl
jl
push
addr16
jo
push
inc
jo
jp
push
push
dec
jae
mov
fs
jae
pop
cmpsl
pop
insl
push
jl
inc
mov
push
movsl
stos
dec
dec
pop
push
jnp
inc
or
inc
adc
iret
xor
movl
mov
mov
mov
push
mov
cmp
mov
je
mov
xor
xor
lea
xor
cmp
jne
jmp
lea
mov
xor
add
mov
movzwl
add
mov
mov
xor
xor
mov
mov
mov
or
mov
mov
mov
mov
and
mov
mov
add
push
pushl
push
pushl
call
mov
mov
pop
pop
leave
ret
sub
mov
lea
iret
lods
xchg
mov
jl
jo
adc
jl
aas
sub
and
or
fbld
add
add
add
add
sbb
aas
cmp
add
add
push
sub
daa
cmp
ss
adc
aaa
adc
or
jno
insl
add
jnp
jl
ja
jg
pop
or
or
or
dec
insl
insl
dec
jl
jne
push
push
bound
pop
cmpsb
mov
insl
outsb
mov
mov
outsb
push
dec
push
lods
js
mov
inc
mov
jl
push
cmpsl
jl
mov
scas
mov
pop
lea
mov
mov
xchg
mov
jmp
out
call
in
mov
xchg
sti
test
repz
enter
clc
call
pushf
int3
out
mov
xchg
mov
fdivr
pushf
fcom
aad
in
loop
jmp
and
sub
sub
repnz
xchg
ljmp
lahf
xchg
ret
loopne
roll
ret
sahf
negb
call
fcmovbe
cltd
lcall
shll
and
int
xor
es
xor
cmp
cmp
xor
xor
or
aad
sub
add
fists
pop
or
sub
das
and
arpl
fisubs
sub
add
sub
xor
packsswb
push
jnp
pop
jl
cmp
jns
sbb
js
dec
jge
popa
dec
inc
arpl
inc
dec
adc
adc
outsb
inc
jnp
sbb
movsl
push
jnp
dec
test
addr16
dec
insl
cmpsb
pop
bound
inc
mov
push
outsb
push
jno
pop
dec
mov
mov
xchg
test
push
lods
cmpsl
subb
movsb
mov
scas
pop
mov
mov
mov
lods
icebp
and
mov
push
xor
jl
mov
ljmp
in
in
icebp
in
loop
xchg
mov
cwtl
xchg
mov
hlt
addl
mov
ljmp
jmp
std
in
int3
jmp
pushf
stc
lahf
call
ljmp
leave
xor
lret
loop
lock
cltd
mov
std
xor
xchg
cmc
xchg
mov
lret
xchg
ret
cmc
lea
lock
stc
lcall
repz
leave
out
lret
jmp
lret
ret
and
shll
sub
cmp
cld
int3
lret
add
std
add
add
or
iret
xor
sub
adc
adc
or
sbb
and
sbb
and
or
pop
xor
xor
pop
js
add
popa
je
add
inc
sbb
inc
or
jg
or
pusha
inc
jle
inc
dec
jp
jnp
imul
push
gs
fs
jns
inc
push
imul
push
push
outsb
push
outsl
mov
cmpsl
mov
mov
scas
ja
mov
xorl
push
xchg
mov
stos
mov
mov
addb
cmpsb
mov
stos
mov
mov
mov
mov
hlt
cli
xchg
cld
mov
stc
fwait
mov
lret
mov
cld
cli
leave
lret
in
int3
out
in
fsubp
xlat
shl
and
imul
and
in
lret
ljmp
loopne
scas
out
cwtl
cld
mov
xchg
les
lret
int
cltd
fwait
lret
popf
rorl
enter
cld
clc
repnz
shl
mull
in
call
xor
sub
div
xlat
xor
cmp
neg
add
aad
test
xchg
inc
jns
int
xchg
nop
cmpb
je
shrl
jl
push
xlat
es
int
enter
add
aam
xlat
sbb
adc
sbb
pop
ficoml
xlat
push
arpl
xor
sbb
add
addr16
cmp
or
push
push
adc
insl
jae
or
outsl
dec
adc
dec
adc
add
sbb
insb
dec
dec
dec
fs
jne
dec
pop
push
mov
sbb
push
dec
stos
imul
inc
jp
mov
mov
stos
inc
outsb
push
push
cmpsb
dec
jge
mov
pop
inc
mov
mov
dec
test
pop
mov
movsl
lods
push
mov
push
mov
test
cmpsb
mov
xchg
mov
ljmp
cld
mov
xchg
mov
rcrb
ret
nop
enter
rcll
repnz
shr
xlat
cli
in
xchg
cld
fcomip
cli
test
out
xor
and
repz
xchg
out
xchg
fwait
ljmp
icebp
movl
pushf
lock
icebp
xchg
repz
rcr
out
xchg
xchg
vmovq
ret
sub
fcmovnu
faddp
ret
int3
sub
ffreep
xor
sub
aaa
enter
int3
stc
inc
add
fcmove
cmp
fldl
lret
fiaddl
sbb
xor
sub
sub
cmp
popa
xor
add
bound
adc
pop
sbb
push
sbb
adc
add
cmp
add
jge
arpl
jnp
push
arpl
jle
je
inc
js
push
push
ja
sbb
jl
pop
pop
pusha
fs
inc
insl
mov
mov
stos
inc
mov
mov
push
dec
dec
inc
mov
inc
mov
pop
mov
dec
xchg
mov
mov
lahf
lahf
fwait
pop
pop
mov
mov
xchg
mov
mov
jno
es
lods
jl
sarl
jl
ljmp
lods
scas
cmc
mov
mov
mov
loopne
mov
cmc
xchg
sahf
cli
call
in
lock
aad
pushf
xchg
pushf
rol
fincstp
out
call
lret
rcl
es
mov
in
mov
xchg
cmc
xchg
popf
cld
inc
in
stc
out
int
mov
in
out
xchg
out
in
out
popf
out
shr
mul
sahf
and
out
out
out
sub
fsubr
and
iret
cmp
int
das
aas
pop
or
enter
sub
cmp
pop
rorl
aad
sbb
or
and
fbstp
pusha
bound
or
or
add
or
adc
or
sbb
adc
add
imul
outsb
inc
push
je
inc
push
push
push
pop
sbb
inc
pusha
inc
push
movsb
pusha
pusha
inc
inc
jl
bound
inc
push
stos
dec
dec
lods
inc
dec
mov
inc
push
pop
mov
dec
mov
jg
mov
mov
push
sbbl
push
mov
push
mov
mov
xchg
mov
mov
orl
mov
mov
jmp
call
in
lock
ret
out
loop
xchg
stc
cld
rcll
div
iret
xchg
loop
clc
cli
jmp
fcmovne
std
ret
sar
bnd
cli
out
hlt
lret
lret
ljmp
test
in
sub
push
movl
movl
mov
cmp
je
mov
add
mov
mov
add
xor
or
mov
and
mov
movzbl
xor
or
add
mov
movl
mov
push
movl
cmpl
je
cmpl
jne
sub
add
push
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
cmp
js
mov
mov
adc
jmp
movzwl
adc
mov
xor
xor
push
mov
add
mov
cmp
movzwl
xor
or
adc
mov
xor
add
mov
mov
cmp
jae
push
call
mov
mov
mov
xor
add
incl
mov
cmp
jb
xor
xor
and
mov
xor
add
mov
cmp
jae
jmp
movl
xor
or
cmp
ja
mov
mov
lea
addl
mov
mov
xor
mov
sub
add
mov
cmp
jae
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
sub
sub
add
or
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
mov
mov
mov
mov
or
mov
imul
shr
xor
lea
orl
movl
andl
subl
mov
add
and
mov
cmp
jae
movl
xor
add
cmp
jb
mov
and
mov
mov
xorl
mov
xor
add
push
mov
xor
add
push
mov
add
push
mov
pushl
call
mov
mov
add
mov
xor
lea
cmp
jb
cmp
mov
mov
sbb
mov
mov
mov
cmp
mov
mov
adc
mov
add
lea
mov
mov
mov
sub
mov
movl
cmpl
je
cmpl
jne
mov
xor
sbb
mov
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
xor
lea
mov
cmp
jb
movl
mov
cmp
jge
mov
mov
mov
add
mov
rcr
mov
mov
xor
lea
mov
cmp
jb
movzbl
movzwl
sub
mov
mov
xor
add
pop
pop
mov
mov
pop
leave
ret
xchg
mov
sbb
xchg
mov
into
adc
jl
jg
jl
cltd
repnz
lds
xchg
testl
clc
fcomi
sti
call
rcrl
out
hlt
fdivr
das
sar
sub
and
and
sub
rcr
cmp
fiadds
and
or
sub
or
and
xor
sbb
adc
fisttps
cmp
cmp
insl
popw
sub
sbb
pop
pushw
jo
cs
sbb
xor
jbe
inc
pop
add
dec
add
inc
or
imul
insb
adc
push
push
imul
jl
outsb
dec
mov
push
pop
inc
jae
dec
stos
scas
insl
lods
pop
movsb
stos
inc
test
stos
inc
mov
mov
pop
pop
mov
pop
pop
addl
stos
mov
movsb
nop
scas
push
lods
mov
xchg
fwait
push
nop
scas
pop
popl
mov
xchg
out
mov
mov
xchg
mov
mov
and
in
in
ljmp
cwtl
out
fcmovu
cltd
ljmp
rcr
loop
ret
aad
ret
ret
mov
mov
jmp
hlt
cwtl
cltd
cltd
in
cld
lcall
pop
mov
call
repz
int3
rcr
shl
loop
lahf
shl
imul
and
lret
aam
sub
sub
fdivs
aad
add
xor
ret
add
and
cmp
add
cs
aas
push
xor
adc
aaa
sub
adc
pusha
cs
fisubrs
or
daa
cmp
pcmpgtw
fs
outsb
push
xor
cs
jge
jl
pusha
cmp
adc
jge
ja
or
sbb
inc
jg
jle
adc
fs
pop
push
jb
nop
xchg
xchg
fwait
xchg
mov
xchg
addb
daa
cli
xlat
out
fs
jl
jg
jl
dec
js
sbb
inc
inc
pop
push
sbb
pop
inc
push
inc
movsl
lods
pop
cmpsl
push
lods
scas
test
inc
xorl
mov
xchg
mov
pop
mov
pop
loope
lods
lahf
xchg
mov
mov
subb
addl
in
rorl
fwait
jecxz
ror
int3
icebp
sar
rcll
les
aad
ret
stc
sti
cmc
leave
aam
sub
and
lock
lods
jmp
in
ljmp
lock
addb
loop
shl
in
rol
fistpl
hlt
pushf
ret
cltd
loopne
lahf
hlt
icebp
cli
sub
clc
hlt
in
int3
sub
sub
sub
aam
not
ret
enter
add
shll
fistpll
add
cmp
sub
sub
xor
das
sub
cmp
cmp
aam
fisubs
cmp
sbb
xor
arpl
push
sbb
sbb
data16
push
arpl
add
xor
or
pop
aaa
push
cmp
inc
push
jne
jnp
jle
add
punpcklwd
push
gs
arpl
dec
data16
popa
inc
push
mov
jg
stos
arpl
jns
outsl
push
push
outsb
dec
mov
mov
je
jg
jle
pop
pop
movsb
inc
mov
lea
pop
dec
mov
addb
pop
mov
mov
call
test
mov
mov
mov
mov
mov
in
xchg
cltd
xchg
mov
loope
repnz
lcall
mov
out
xchg
out
lock
fcoms
in
loopne
fcmovnbe
daa
sub
ret
fmul
rol
in
xlat
jmp
mov
xchg
xchg
popf
lcall
mov
adcb
add
jl
sbb
jl
mov
icebp
jecxz
xchg
loop
sar
test
jmp
lock
ret
ret
mov
lret
iret
std
cmc
lock
pushf
ror
negb
aad
shl
es
and
sub
shll
in
aaa
lret
enter
iret
xor
fildl
or
and
fcmovu
sarb
or
invd
sarb
push
cs
pop
add
arpl
xor
or
sbb
push
fs
xor
add
push
inc
jp
or
inc
addr16
arpl
add
insl
sbb
pop
dec
jge
popa
punpckhbw
dec
inc
jb
push
dec
sbb
push
ja
addr16
pop
lods
jnp
inc
outsb
pop
stos
insl
pop
stos
outsl
mov
mov
pop
mov
pop
pop
lods
mov
cmpsl
push
mov
mov
test
mov
push
push
loopne
cwtl
xchg
mov
xchg
mov
mov
popl
call
repnz
mov
lcall
pushf
stc
div
out
cli
out
pushf
xchg
rcll
mul
jmp
sahf
stc
loop
es
mul
sub
sar
repz
test
lock
nop
in
fwait
lcall
jmp
jmp
mov
jecxz
leave
xchg
mov
shll
cmc
rcr
lret
repz
enter
stc
xor
sub
fucomip
repz
shlb
iret
fcmovnb
xor
and
ss
push
xor
fmull
into
xor
and
adc
sub
sbb
xlat
adc
cmp
fcmovnu
arpl
and
sbb
or
cmp
pop
cmp
jae
xor
insb
adc
add
cmp
jp
xor
jnp
jns
sbb
or
js
dec
inc
inc
inc
movhps
or
pop
test
mov
mov
mov
mov
jl
jg
jl
dec
pop
sbb
bound
js
jge
mov
movsb
movsl
jo
test
push
mov
lods
push
push
mov
mov
mov
mov
pop
dec
lea
test
xchg
push
mov
mov
movsb
mov
in
xchg
mov
mov
mov
mov
mov
mov
cmp
cmc
cmc
pushf
stc
jmp
mov
lret
repnz
ror
repz
repnz
ret
clc
rol
hlt
and
call
icebp
leave
shl
lds
call
mov
test
xchg
out
ret
call
shr
mov
notb
aad
popf
cld
rol
and
push
rcr
and
iret
cld
out
sub
fisubs
aam
daa
and
repz
and
fsubl
xor
sub
rorl
add
cmp
adc
and
push
push
sub
imul
xor
or
imul
adc
jbe
adc
jp
outsl
dec
dec
outsb
dec
pop
adc
inc
inc
dec
push
jp
jns
jl
sbb
pop
pop
push
inc
imul
pop
dec
push
mov
je
inc
jo
js
pop
jge
mov
push
mov
dec
inc
mov
pop
mov
movsb
stos
dec
push
mov
pop
mov
mov
xchg
mov
mov
mov
mov
cmc
clc
xchg
cmp
cli
divb
icebp
mov
out
cltd
cwtl
std
out
iret
lret
ret
ret
fsubr
xchg
out
icebp
jmp
cld
ficompl
sti
repnz
std
jmp
es
es
es
mov
xchg
mov
xchg
xchg
xchg
pop
jno
testb
xchg
les
jl
xchg
repz
sub
cli
std
fwait
in
int3
test
xchg
xlat
iret
aam
repz
xchg
pushf
popf
ror
ficomps
enter
xlat
and
into
das
ror
fsubrl
not
repz
push
mov
sub
movl
movl
movl
cmpl
je
cmpl
jne
sbb
or
sub
push
call
mov
dec
mov
jmp
movl
movl
mov
cmp
jge
mov
mov
and
movzwl
mov
add
mov
mov
mov
push
xor
mov
push
cmp
adcl
add
jmp
mov
mov
movzbl
shl
mov
xor
add
movzwl
and
mov
mov
mov
mov
mov
xor
add
xor
add
mov
addb
mov
mov
movzwl
xor
add
add
mov
mov
mov
xor
add
mov
mov
mov
xor
xor
addb
mov
xor
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
and
add
sbb
imul
push
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
xor
cmp
xorl
sbbl
andl
add
add
cmp
adcl
imul
add
mov
mov
mov
movl
xor
add
cmp
ja
xor
sub
mov
mov
sub
mov
mov
mov
xor
sub
lea
cmp
jbe
mov
mov
mov
orb
xor
mov
pop
lea
pop
leave
ret
adcb
pop
clc
fs
nop
cmpb
add
jl
sbb
jl
sub
sub
idivl
add
sub
ffreep
add
push
add
add
or
add
das
shll
cmp
fstps
adc
sbb
cmp
and
add
jo
or
add
or
sbb
cmp
jbe
add
gs
jl
gs
addr16
imul
jb
jge
jbe
jo
dec
jno
jne
pop
jge
jbe
jbe
lods
imul
inc
mov
mov
mov
mov
jbe
dec
push
mov
mov
inc
dec
mov
mov
cltd
addb
mov
pop
lods
mov
mov
popf
mov
jecxz
in
test
ljmp
mov
xchg
cld
std
ret
lahf
and
lret
mov
iret
lret
loope
xlat
lds
shl
stc
aad
and
sub
sub
xor
mov
div
test
out
pushf
cltd
cmp
popf
shr
xchg
enter
repz
shr
lock
not
hlt
out
and
loop
repz
iret
and
jmp
lock
sub
imull
fdivrs
add
cmp
ret
add
and
adc
cmp
arpl
add
and
cmp
add
pop
insl
push
outsb
je
push
jns
arpl
or
dec
or
bound
dec
inc
inc
dec
imul
jo
je
adc
jo
inc
inc
jge
push
pop
pop
gs
inc
cmpsb
pop
dec
test
test
mov
outsb
pop
push
pop
push
scas
mov
pop
cmpl
mov
subl
mov
addb
pop
jecxz
xchg
test
orb
jl
sbb
jl
xchg
xchg
lahf
scas
cwtl
popf
lods
xchg
mov
jecxz
jecxz
mov
xchg
loop
mov
rcrb
lock
call
cld
loopne
nop
sahf
out
jecxz
out
test
lcall
sahf
ffreep
shll
loope
out
fmul
sub
lret
ljmp
mov
mov
stc
out
xchg
xor
cli
cmc
mov
loop
pushf
out
call
lret
xlat
jmp
ror
fxtract
xlat
push
ljmp
icebp
cld
into
ss
lret
ror
xor
aad
ret
and
pushl
shll
ds
xor
lds
sub
fmull
add
add
pop
xor
adc
and
add
push
sub
bound
push
xor
pop
adc
xor
jo
ja
inc
adc
sbb
push
pusha
popa
dec
dec
dec
or
outsl
dec
adc
sbb
jb
jo
ja
jl
popa
inc
test
mov
dec
test
jno
outsl
test
push
dec
jbe
jge
push
jge
jle
test
inc
push
inc
pop
inc
dec
mov
mov
test
xchg
mov
mov
cwtl
mov
jmp
icebp
loopne
xchg
mov
mov
mov
mov
cltd
repnz
mov
hlt
mov
xchg
jmp
rcrl
fcmovbe
fwait
rcr
aam
and
clc
and
out
icebp
ret
ljmp
mov
mov
call
mov
ret
in
lock
sahf
test
sahf
pushf
in
lds
call
dec
and
rcl
loop
loope
and
bnd
fmul
sub
repnz
and
repnz
lea
lea
fisubl
mov
mov
les
jl
into
xor
and
and
xor
fcom
std
sub
ret
or
or
xor
fcmovnbe
xor
sub
add
push
aas
add
and
or
add
sub
adc
jae
imul
adc
outsb
or
sbb
outsl
add
adc
push
inc
dec
jns
or
sbb
inc
inc
dec
push
je
ja
sbb
sbb
outsb
push
push
jae
movsb
imul
dec
jle
ja
inc
test
mov
pop
test
pop
pop
mov
pop
mov
scas
test
mov
cmpsl
cwtl
push
xchg
xchg
lahf
pop
nop
mov
mov
mov
mov
mov
mov
test
cltd
ljmp
testl
call
iret
stc
loop
cli
in
cwtl
out
enter
xchg
sti
and
shl
aam
shrl
lret
and
shl
das
in
cmc
cmc
mov
xchg
lea
ljmp
repz
leave
div
mov
lret
xchg
aad
sar
xchg
ficomps
in
sub
jmp
fsubr
ljmp
xor
cmp
not
cmp
and
fmul
fadds
and
rol
fildl
cmp
lret
aas
roll
adc
adc
or
arpl
and
push
es
or
arpl
add
xor
xor
or
or
cmp
pop
sbb
push
aas
push
js
dec
sbb
jb
inc
jo
inc
imul
je
jno
dec
push
jb
cmpsl
js
mov
jnp
arpl
push
inc
test
test
mov
jg
dec
mov
mov
pop
inc
subl
mov
lea
lea
mov
mov
mov
jl
stos
scas
stos
scas
xchg
mov
mov
test
repz
test
cli
repz
out
mov
mov
xchg
testb
xchg
out
out
lret
xlat
xchg
call
loope
in
into
iret
into
fstp
fcos
jmp
sub
ret
loopne
xchg
xchg
xchg
jmp
addl
lret
cwtl
loop
out
shl
lret
repz
ret
xchg
out
lcall
fcmovnb
loop
loope
jmp
aam
and
ret
sub
iret
shrl
cmp
out
sub
stc
aas
sub
aad
aam
sub
cs
add
sub
adc
xor
push
pop
or
xor
das
arpl
pop
xor
ds
sub
pop
sub
je
adc
imul
adc
bound
add
jg
dec
or
cmova
adc
sbb
jp
push
inc
mov
dec
inc
inc
dec
scas
jnp
pop
jl
insb
jle
mov
imul
pop
pop
mov
adcb
ja
mov
mov
mov
test
push
push
push
mov
mov
mov
mov
lahf
pop
jecxz
pushf
mov
mov
nop
hlt
and
repz
mov
jmp
lahf
stc
mov
test
cld
lret
rcrl
shl
int3
ret
in
hlt
out
stc
ljmp
loope
repnz
lret
into
mov
std
mov
jmp
test
hlt
notb
in
in
xlat
mov
xchg
loop
xchg
leave
xchg
xchg
iret
xchg
and
aam
push
mov
sub
push
movl
movl
andl
movzbl
xor
mov
movzwl
or
cmp
movzwl
adc
xor
or
mov
xor
movzbl
add
movzbl
and
xor
xor
xor
mov
test
mov
sbb
mov
test
mov
adc
mov
cmp
xor
xor
sbb
xor
add
xor
mov
or
xor
add
sub
mov
cmp
xor
add
adc
mov
or
mov
mov
mov
or
mov
mov
xor
mov
mov
xor
mov
mov
or
movzbl
and
mov
mov
add
test
xor
or
adc
mov
add
movzbl
xor
mov
or
mov
test
mov
mov
adc
mov
or
mov
mov
and
push
pop
xor
lea
rep
push
push
lea
push
push
push
call
mov
movl
andl
cmpl
je
push
mov
xor
add
push
mov
add
push
mov
pushl
call
push
mov
xor
add
push
mov
add
push
mov
pushl
call
mov
xor
dec
xor
mov
cmpl
je
movl
push
mov
xor
add
push
mov
add
push
mov
pushl
call
call
mov
push
mov
xor
add
push
mov
add
push
mov
pushl
call
jmp
xchg
mov
dec
mov
and
mov
sub
jl
je
test
mov
pop
mov
dec
pop
dec
mov
pop
cmpsb
dec
cmpsl
inc
mov
scas
pop
push
mov
lods
mov
movsl
mov
mov
pop
leave
ret
mov
popf
sbbl
mov
loope
mov
jl
sbb
jl
sub
loop
lret
int3
cld
int
shlb
sub
ror
shrl
repz
daa
sar
aaa
ror
iret
xlat
and
or
add
enter
sub
or
sbb
aaa
cmp
fnstcw
xor
and
gs
sub
or
add
daa
pop
fs
add
sbb
push
sbb
adc
push
push
dec
dec
jl
sbb
adc
dec
jne
dec
push
jnp
jge
pop
jle
pop
jne
addr16
dec
addr16
mov
inc
dec
mov
push
scas
lods
jns
push
dec
mov
inc
inc
push
inc
dec
mov
mov
mov
mov
xorl
popf
cwtl
xchg
mov
xorl
cmpsb
mov
test
lea
hlt
imul
xchg
repnz
loop
stc
test
fwait
iret
leave
int3
out
shr
out
xchg
lret
xchg
popf
sahf
cwtl
loope
icebp
shlb
shrb
mul
and
in
lret
ret
xor
mov
std
icebp
lcall
xchg
cwtl
cli
shr
lahf
lret
icebp
rol
div
call
hlt
loopne
cmc
icebp
icebp
cld
fdivr
sub
jmp
sar
cs
xor
icebp
enter
xor
add
std
add
and
sti
sub
aam
and
int3
cmp
rcl
or
xor
aad
aad
sbb
and
add
adc
sbb
adc
cs
push
fs
push
imul
js
js
imul
jl
inc
or
push
jb
dec
push
inc
push
jne
outsb
sbb
pop
jnp
jae
pop
pusha
movsl
imul
gs
movsb
inc
jg
push
dec
mov
mov
push
mov
dec
push
jg
mov
xchg
cltd
xchg
cltd
xchg
xchg
xchg
test
notb
jl
sbb
jl
jle
test
mov
dec
mov
mov
pop
scas
mov
mov
andl
in
cltd
call
scas
out
mov
dec
in
mov
lcall
icebp
into
into
mov
lahf
call
repz
fstpl
out
iret
lret
rcr
out
xchg
sub
xchg
in
icebp
loope
nop
mov
repnz
std
int3
lret
nop
int
int
xchg
out
rcr
fndisi(8087
lock
stc
stc
es
repnz
call
jecxz
fbstp
repz
out
cmp
std
cmc
call
aas
and
xor
cmp
rolb
and
sub
adc
adc
adc
sbb
add
cmp
xor
adc
sbb
add
cmp
xor
movhps
js
push
adc
or
insl
sbb
adc
inc
popa
pop
dec
or
adc
jle
imul
push
dec
jnp
pop
gs
jle
jne
movsl
inc
movsl
inc
mov
push
movsl
push
jb
movsb
stos
lods
scas
mov
mov
inc
push
pop
pop
test
test
mov
mov
push
mov
xchg
pop
sbbl
test
mov
mov
out
xchg
test
call
out
std
pushf
fwait
loop
cmc
loope
jmp
add
cli
in
mov
rorb
jmp
cmc
out
rcr
loope
icebp
pushf
sti
fsubr
and
ret
int3
call
leave
aad
xor
xchg
in
out
nop
lcall
inc
mov
cld
jmp
into
in
in
into
ret
fcmovnb
rcrb
out
ret
fisubl
nop
mov
jle
xchg
test
jno
jl
sbb
jl
out
clc
das
das
cli
xor
and
and
idivb
aad
lret
aas
xor
xor
add
enter
es
fstpt
shll
xor
adc
fdivrl
psubusb
fbstp
outsl
popa
or
pop
or
push
xor
outsb
sbb
push
jge
sbb
ja
popa
sbb
or
imul
inc
push
adc
jne
insb
fs
imul
insb
popa
fs
jp
inc
imul
jg
movsb
inc
dec
mov
movsl
mov
jns
xorl
mov
lea
xchg
xchg
dec
pop
mov
mov
push
mov
xchg
xchg
cmpb
out
xchg
cwtl
in
cmpl
xchg
xchg
fwait
mov
icebp
in
cmc
std
in
repnz
xchg
call
shr
in
into
repnz
cmc
repz
idiv
std
jecxz
int
fisubl
in
imul
stc
cld
ljmp
cmc
mov
loopne
jecxz
mov
hlt
lcall
popf
in
xchg
div
loope
ljmp
clc
enter
pushf
aam
cmc
loop
aad
and
and
sub
cld
iret
aad
and
enter
aaa
sar
shlb
lret
add
fcmovu
rol
cmp
adc
lret
sysexit
adc
or
and
sub
cmp
xor
bound
cmp
sbb
bound
sub
imul
xor
cmp
or
or
je
sbb
jae
dec
adc
add
or
jp
push
addr16
jno
jg
push
push
mov
jp
jg
inc
gs
stos
movsb
mov
inc
cmpsb
dec
dec
test
movsb
pop
outsb
lods
lods
jnp
jnp
mov
xchg
mov
cltd
popf
or
xor
test
enter
jl
sbb
jl
mov
push
mov
mov
xchg
xchg
xchg
mov
mov
xchg
jmp
mov
sahf
in
lods
mov
mov
mov
mov
cwtl
pushf
cltd
ret
cltd
std
pushf
xchg
leave
jmp
mov
mov
ret
xchg
xchg
xchg
repnz
out
ficoms
lock
sti
in
mul
lret
imulb
fidivs
jmp
cld
stc
cmc
jmp
mov
leave
enter
mov
les
mov
xchg
cmc
icebp
repz
and
sti
lahf
ret
ror
sub
out
std
in
ret
inc
ror
hlt
sub
xor
ror
fdivr
cli
fmul
and
fbstp
lret
cmp
iret
lret
int
sub
sub
push
aam
pop
fildll
fadds
pandn
sbb
or
push
add
insl
addr16
jno
adc
insl
push
xor
jle
jae
outsl
gs
inc
jae
insl
fs
bound
outsl
push
or
insb
dec
pop
sbb
dec
mov
cmpsb
jl
push
movsb
pop
push
jns
pop
insl
push
insl
insb
dec
mov
dec
mov
mov
pop
mov
cmpsb
cmpl
xchg
mov
mov
dec
movsl
mov
mov
pop
pop
mov
jmp
call
cmpl
mov
icebp
cwtl
jmp
xchg
add
rcll
in
lret
rcll
not
icebp
xchg
sti
int3
ljmp
in
and
hlt
and
sahf
clc
int3
call
ret
mov
xchg
xchg
xchg
in
jecxz
les
fwait
ret
xchg
ret
icebp
mov
rcl
mov
out
cltd
call
fcmove
rol
into
clc
sarl
popf
xchg
test
mov
xor
xor
jl
aam
in
fucompp
int
sub
ret
sub
sub
cmp
fbld
and
add
and
sub
ds
and
sbb
cmp
push
adc
push
popa
sub
and
or
jno
outsl
or
xor
or
sbb
push
push
jp
addr16
or
inc
dec
jg
dec
adc
fs
adc
data16
js
jae
gs
mov
dec
inc
push
scas
dec
mov
in
inc
add
add
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
add
xor
add
pushl
push
push
call
jmp
movl
movl
mov
cmp
jb
movzwl
mov
sub
mov
mov
mov
sub
mov
movl
mov
push
push
push
mov
xor
mov
movzbl
add
mov
mov
add
xor
add
add
mov
movl
movl
movl
xor
xor
mov
and
mov
movl
mov
xor
add
xor
xor
xor
mov
movl
movb
mov
xor
add
mov
xor
mov
mov
mov
xor
mov
and
add
push
mov
xor
mov
mov
add
add
push
mov
xor
or
or
xor
add
push
pushl
test
xor
xor
sbb
mov
mov
lea
call
test
je
lea
push
mov
xor
add
push
movl
cmpl
je
cmpl
jne
or
adc
push
push
pushl
push
call
mov
dec
mov
jmp
mov
or
mov
add
push
movl
mov
cmp
jge
mov
mov
pushl
call
mov
jmp
mov
add
mov
lea
cmp
movl
adcl
mov
test
je
lea
push
mov
sub
mov
xor
add
push
mov
xor
add
push
pushl
lea
pushl
call
test
je
lea
push
mov
subl
xor
add
movl
orl
subl
push
mov
add
push
xor
add
add
mov
mov
pushl
call
mov
xor
mov
sub
mov
sub
add
mov
pushl
xor
mov
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
call
mov
mov
sub
mov
mov
add
pop
pop
pop
leave
ret
xchg
xchg
lcall
mov
xchg
lock
add
jg
jl
inc
outsl
dec
push
mov
jge
mov
jle
push
mov
push
test
mov
pop
pop
mov
mov
xchg
mov
scas
mov
xchg
cwtl
mov
cmpb
xchg
popf
loope
lahf
mov
mov
sti
mov
in
mov
hlt
sti
out
sti
ret
in
out
mov
xlat
cmc
shl
repz
lock
fmul
in
lock
stc
aad
ret
loopne
sub
and
and
out
repz
fisttps
out
pushf
xchg
cwtl
std
pushf
mov
xchg
mov
std
fwait
sahf
rcrl
rcll
popf
ret
jecxz
lahf
aam
icebp
leave
in
fisubl
repz
das
shll
aam
sub
clc
sti
fcmovnb
sub
ret
sub
aas
xor
cmp
add
into
fisubrs
cs
xor
xor
and
ss
adc
sub
and
and
add
sbb
cmp
cmp
adc
add
pop
imul
inc
jns
jbe
pop
add
or
inc
popa
movlps
jns
pop
jle
push
pop
pop
mov
jp
jg
jge
outsl
fs
push
jae
dec
push
dec
push
mov
dec
pop
mov
mov
push
cmpsb
mov
movsb
popl
lods
test
cmpsb
mov
mov
in
cmpsb
mov
pushf
out
mov
out
xchg
mov
pushf
scas
mov
sti
cltd
jecxz
mov
lcall
call
into
jecxz
in
in
int3
fwait
fcmovnu
std
loope
out
cld
sti
hlt
aad
hlt
call
fnsetpm(287
sub
mov
mov
mov
divb
in
xchg
xchg
popf
test
hlt
add
jmp
test
ret
xchg
xchg
test
cmp
pop
mov
jg
jl
jmp
out
clc
lret
fst
fistps
sar
ret
leave
jecxz
fsin
cs
cli
icebp
enter
and
aad
into
cmp
cmp
cmp
cld
xor
es
or
sub
add
and
lret
sub
xlat
sub
sbb
sbb
fcmovnu
xor
xor
imul
or
pop
or
or
xor
ja
adc
jl
jp
add
outsb
gs
or
addr16
or
push
push
dec
inc
or
popa
ja
pushw
imul
push
push
popa
push
push
push
test
imul
inc
imul
insl
dec
push
inc
inc
dec
mov
mov
js
inc
mov
mov
mov
dec
sbbl
xchg
xchg
mov
mov
mov
out
mov
lahf
xchg
xchg
jmp
loop
test
xchg
mov
sahf
sti
xchg
mov
out
cmc
std
pushf
cli
loop
fwait
sar
loopne
int3
xchg
jmp
repz
jmp
lret
loope
clc
loope
and
sub
fucomp
ret
call
sub
xchg
in
in
mov
cltd
ret
out
xchg
leave
lock
mov
repz
jmp
ljmp
sti
lock
ret
in
and
cmc
lret
mull
rol
iret
and
ret
xor
shll
xlat
cli
cmp
rol
into
sar
xor
faddp
cmp
aas
cmp
int
add
xor
and
cmp
cmp
or
cmp
pushaw
imul
or
or
arpl
je
adc
or
js
packsswb
bound
or
jge
imul
or
adc
pop
sbb
jo
arpl
jp
pop
arpl
inc
inc
dec
mov
xchg
mov
shlb
orb
pop
mov
sbb
jl
jne
outsl
mov
jbe
stos
mov
dec
mov
push
push
mov
dec
jle
pop
mov
mov
mov
mov
lods
popf
mov
mov
ljmp
lods
out
xchg
mov
xchg
idiv
sahf
std
cltd
nop
cld
loopne
jecxz
ret
hlt
addb
mov
ret
out
clc
fxch
cwtl
leave
jmp
and
cmc
fsub
cld
jecxz
fstp
imull
fcmovu
das
lret
icebp
mov
in
mov
mov
xchg
mov
mov
mov
mov
fwait
in
out
iret
enter
xchg
testb
cmc
fucomi
lock
loope
and
out
daa
aam
and
cli
rcl
aad
lock
int3
sub
fidivrl
ret
fimuls
or
or
sub
adc
add
das
sub
filds
sbb
cmp
or
sub
or
sbb
push
arpl
adc
cmp
adc
jle
jbe
sbb
popaw
sbb
inc
sbb
imul
pusha
adc
dec
dec
insl
pop
outsb
pop
dec
push
pop
jne
pop
pop
js
push
jo
jbe
pop
jle
movsl
scas
lods
jge
scas
mov
dec
dec
inc
push
scas
scas
cmpsl
mov
addl
inc
pop
push
dec
pop
inc
mov
subb
xchg
lods
push
push
mov
mov
mov
popf
mov
xchg
loop
xchg
in
cmc
mov
loope
stc
xchg
popf
std
repz
popf
loopne
sti
loopne
lock
mov
lret
xlat
enter
test
lcall
in
cld
cli
sub
and
cs
aam
nop
repnz
cmpb
hlt
enter
xchg
fwait
cltd
out
popf
rol
xchg
xchg
xchg
sbbb
loop
orb
mov
cld
in
sbb
jg
jl
mov
and
in
loop
cld
out
jmp
div
sub
and
enter
xor
and
es
das
hlt
divl
and
hlt
xor
and
xor
pop
cmp
sub
aad
cmp
xor
sbb
or
pop
mov
xor
addr16
add
cmp
or
das
cs
push
js
or
cmp
sbb
sbb
cmp
or
imul
jns
push
sbb
inc
arpl
push
jne
js
pop
sbb
push
pop
inc
pop
push
ja
bound
dec
inc
inc
movsl
inc
dec
inc
jg
je
mov
jns
stos
mov
mov
mov
pop
mov
push
mov
movsl
xchg
mov
movsl
xchg
pop
xchg
stos
lods
mov
mov
cmpsl
jmp
mov
mov
cltd
mov
cli
mov
xchg
xchg
mov
mov
mov
sahf
stc
rorb
into
fcom
lret
rcll
clc
cltd
and
aad
leave
sub
fldcw
test
ljmp
cltd
loopne
xchg
repnz
nop
fwait
jmp
cwtl
cwtl
and
out
stc
out
sti
loope
mov
rol
repnz
lret
fdiv
call
cld
cli
fcomp
and
out
int3
jmp
aad
shl
rcl
test
out
xor
fiadds
shrl
xor
ret
lret
leave
daa
sub
add
and
add
sbb
pop
cmp
adc
fnstcw
adc
or
add
cs
or
sbb
outsl
jne
sbb
inc
or
in
sub
mov
mov
andl
mov
inc
mov
cmpl
jne
mov
mov
or
pushl
call
cmpl
jb
mov
movl
mov
cmp
jae
mov
movzwl
xor
mov
mov
movzwl
or
mov
movzbl
movzwl
xor
mov
mov
mov
push
cmp
mov
adc
push
mov
xor
push
mov
add
mov
addb
mov
lea
mov
mov
mov
xor
xor
xor
add
mov
add
mov
movzwl
mov
xor
mov
movl
lea
mov
mov
mov
cmp
mov
sbb
mov
xor
add
mov
mov
mov
add
mov
mov
mov
mov
mov
movzwl
add
movl
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
movzwl
sub
mov
mov
xor
add
mov
mov
movzwl
sub
mov
mov
mov
xor
mov
sub
add
movl
cmpl
je
cmpl
jne
or
mov
adc
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
cmp
mov
mov
sbb
mov
mov
mov
movzwl
add
movl
xor
add
cmp
jge
mov
mov
mov
xor
movl
andl
subl
add
xor
sub
mov
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
test
xchg
popf
sbb
mov
mov
pop
mov
out
int
jl
jl
jl
xchg
xchg
xchg
fwait
jecxz
xchg
xchg
mov
imul
mov
hlt
xchg
mov
xchg
clc
in
mov
mov
jecxz
sti
loop
mov
fmuls
or
addb
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
movl
mov
cmp
ja
mov
mov
mov
mov
mov
xor
xor
and
xor
add
mov
mov
mov
xor
mov
xor
add
cmp
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
and
xor
sbb
mov
push
push
call
cmpl
jne
mov
inc
mov
jmp
movzbl
xor
add
add
mov
mov
mov
add
mov
movzwl
xor
xor
sub
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
cmp
mov
xor
or
sbb
mov
movl
mov
cmp
je
mov
ror
mov
mov
xor
mov
mov
add
mov
mov
mov
mov
mov
sbbl
xorl
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
xchg
lea
mov
mov
int
jl
sbb
jl
add
inc
inc
dec
adc
or
dec
bound
jae
adc
addr16
sbb
mov
inc
jb
jne
pop
cmpsb
inc
lods
pop
fs
jl
outsl
inc
mov
test
push
jae
jbe
jbe
pop
jb
pop
xorl
mov
dec
push
mov
inc
dec
mov
mov
mov
scas
mov
stos
in
xchg
mov
out
imul
imulb
xchg
mov
ret
cwtl
xchg
test
call
ljmp
not
fucom
ljmp
fwait
and
out
loopne
aad
out
in
and
lret
sub
cltd
xchg
xchg
out
xchg
repz
out
popf
test
cli
stc
xchg
in
rcl
loopne
negb
int3
out
icebp
fdivp
aad
in
stc
jmp
sub
fsubl
xor
test
sub
xor
lret
shll
fdivrp
and
aas
fsubl
fildl
add
add
cmp
daa
or
cmp
cs
imul
add
push
das
adc
xor
add
adc
pop
sbb
aas
fs
dec
js
sbb
sbb
insl
dec
inc
jb
imul
jbe
adc
dec
dec
popa
pop
arpl
mov
jns
dec
scas
stos
inc
dec
mov
mov
mov
scas
mov
movsl
lods
jg
inc
inc
inc
dec
cmpsb
test
test
mov
pop
mov
mov
mov
xchg
cmpsl
cwtl
test
lods
icebp
mov
hlt
scas
xchg
test
call
ret
cwtl
test
cwtl
into
jmp
ret
iret
xchg
xchg
ret
in
cmc
int
fists
mov
popf
xchg
mov
sbb
mov
xchg
xchg
test
lods
mov
in
mov
jg
jl
out
fldcw
std
not
jmp
ror
out
into
out
out
out
mov
ljmp
jecxz
sarl
ret
pushf
vpmaxsw
lret
ret
lcall
negl
es
lret
lahf
sub
in
ret
lret
sub
rcr
ror
lret
cmp
ss
fldenv
rolb
sub
or
add
aas
adc
sub
adc
push
fldcw
xor
xor
and
add
insb
sub
push
data16
pop
push
xor
jge
cmp
jl
sbb
add
sbb
push
insl
inc
dec
sbb
inc
inc
insb
inc
push
dec
sbb
sbb
sbb
pop
js
jne
sbb
ja
jnp
mov
jno
push
test
pop
js
dec
mov
mov
push
xorl
test
mov
mov
pop
cltd
mov
mov
out
mov
in
out
mov
xchg
sti
sti
mov
std
std
mov
in
xchg
repnz
out
hlt
ret
rcll
xchg
lret
jmp
xchg
pushf
jmp
aad
cli
jecxz
aam
ret
hlt
and
sub
xor
aad
mov
xchg
mov
sti
scas
cwtl
cli
jmp
popf
ljmp
out
cmc
idiv
fwait
in
inc
cmc
xchg
int3
xchg
enter
fdiv
sti
shlb
lcall
out
jmp
sub
sti
sub
std
ffreep
ss
repz
sub
repnz
cmp
add
or
and
ret
cs
add
sbb
add
aaa
xor
and
faddl
cmp
cmp
push
sbb
or
bound
xor
addr16
insl
imul
mov
xchg
stc
mov
mov
nop
jl
sbb
jl
jno
jge
cmp
sbb
pop
sbb
jne
bound
push
adc
push
dec
dec
pop
popa
insl
jno
pop
bound
inc
pop
inc
inc
push
pop
jno
mov
cmpsl
cmpsb
dec
jb
mov
pop
movsb
mov
cmpsl
mov
scas
mov
mov
dec
push
xchg
test
mov
push
pop
scas
mov
jecxz
jecxz
mov
lcall
mov
jmp
lock
mov
loopne
pushf
in
jecxz
int3
jecxz
loop
aam
lret
mov
out
in
fwait
ror
fsincos
and
xchg
lock
int3
std
xlat
mov
in
xor
mov
xchg
mov
mov
clc
sub
xchg
cmc
mov
loope
sti
icebp
rcl
into
xchg
call
in
xlat
call
and
stc
rol
daa
out
stc
and
das
sub
ret
and
hlt
fxtract
aam
sub
fcompp
sub
rcl
es
add
enter
push
cmp
adc
or
push
sub
cmp
xor
arpl
ds
add
imul
arpl
adc
or
xor
cmp
sbb
cmp
sbb
ja
imul
sbb
ja
dec
insl
pop
jge
inc
insb
dec
dec
outsl
ja
sbb
cmpsb
pop
dec
push
jns
dec
jp
scas
scas
dec
push
mov
cmpsl
jnp
push
subb
test
mov
xchg
addb
mov
xorl
call
mov
scas
out
cmpsb
loope
sub
mov
test
mov
popf
lock
mov
lock
out
jmp
sahf
sahf
int3
mov
lock
out
xchg
icebp
xchg
ljmp
adcb
mov
sbb
addb
lods
xchg
jl
sbb
jl
lahf
stc
test
in
in
cld
cs
and
ret
out
icebp
mov
fwait
xchg
popf
lcall
sti
call
jmp
cmc
bnd
hlt
call
cld
call
aad
fadd
loopne
out
in
sub
ljmp
rcr
xor
ljmp
shrb
and
es
lds
adc
rcl
cs
xlat
add
and
pop
sub
fildl
add
and
push
or
adc
sbb
jns
sbb
sbb
adc
jnp
add
inc
dec
or
dec
dec
pop
dec
jnp
inc
jae
jbe
push
pop
js
push
inc
popa
inc
jbe
je
inc
push
inc
outsl
inc
mov
mov
jae
inc
dec
mov
mov
mov
pop
mov
mov
test
mov
mov
pop
test
scas
xchg
mov
in
call
loop
mov
movsb
mov
nop
cltd
xchg
mov
sti
mov
lahf
loopne
in
jmp
repz
out
mov
out
repnz
out
leave
lret
in
xlat
cli
repz
jecxz
es
sahf
jmp
jecxz
out
in
jmp
stc
xchg
xchg
jmp
mov
mov
xchg
xchg
cli
mov
jecxz
jmp
lret
int3
sahf
mov
stc
lcall
daa
jecxz
sub
vcvtsi2sd
sub
lock
sub
sub
cs
std
das
add
and
add
add
or
es
add
cmp
adc
sbb
or
sbb
or
add
sbb
pop
add
or
je
jns
pop
or
jns
add
xchg
xchg
xchg
lcall
xchg
test
adcb
xchg
mov
jl
loope
jl
inc
sbb
sbb
insl
or
arpl
sbb
or
push
outsb
push
outsl
insb
pop
insl
pop
outsb
sbb
pop
inc
pop
fs
push
lods
cmpsl
pop
push
push
jp
mov
push
mov
jp
mov
inc
sbbb
jle
pop
mov
movsb
pop
lea
mov
scas
stos
cltd
mov
mov
push
push
mov
mov
mov
sub
push
push
movl
mov
cmp
jle
mov
movzwl
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
mov
sub
push
push
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
movzbl
mov
add
mov
push
mov
add
movzwl
mov
movb
lea
mov
mov
xor
or
sub
lea
mov
mov
mov
xor
sub
xor
add
mov
xor
mov
movl
movl
cmpl
jbe
movzwl
movzbl
and
mov
jmp
movzbl
movzwl
adc
mov
mov
xor
xor
xor
mov
mov
mov
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
and
mov
mov
xor
add
mov
mov
cmp
je
shl
mov
xor
mov
movl
mov
cmp
jb
mov
add
mov
mov
add
mov
and
mov
mov
sub
add
movzwl
mov
mov
movzwl
movl
cmpl
je
cmpl
jne
adc
mov
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
xor
add
mov
mov
inc
jmp
cmp
mov
mov
adc
mov
mov
mov
mov
xor
add
mov
mov
sub
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
movsbl
xor
xorl
add
cmp
je
mov
xor
movl
lea
mov
lea
mov
mov
mov
and
mov
addl
mov
mov
xor
lea
inc
jmp
movl
xor
or
cmp
jl
mov
andl
mov
inc
mov
cmpl
jne
imul
sub
or
xor
add
pushl
push
pushl
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
add
mov
pop
pop
pop
leave
ret
xchg
popf
xchg
shll
mov
xchg
addb
out
xchg
jl
sbb
jl
and
cmpsl
in
stos
mov
orl
stc
mov
xchg
sarb
stc
sub
lds
lret
jmp
test
sar
and
shll
ret
std
xlat
daa
das
lret
out
sub
int
incb
mov
cmc
idiv
fwait
clc
lock
cld
xchg
idiv
xchg
mov
jecxz
int
imul
int
xchg
jmp
cli
cmc
ficompl
loop
cmc
test
das
cld
xor
lock
xor
sub
rcl
daa
enter
ds
sar
sarl
cmp
enter
sub
aas
lret
es
pop
and
adc
iret
pop
daa
push
add
and
arpl
sbb
sub
push
sbb
add
add
xor
jne
cmp
sbb
or
lsl
jae
push
insl
or
or
imul
push
sbb
inc
jge
inc
inc
pop
dec
dec
inc
insb
addr16
mov
dec
test
inc
push
cmpsl
stos
jns
push
push
orl
mov
test
cmpsb
mov
dec
xchg
stos
mov
xchg
movsb
cltd
mov
lahf
lahf
scas
lea
and
mov
mov
icebp
icebp
mov
lahf
xchg
xchg
cltd
cli
cmpb
in
shl
out
shl
in
call
enter
cwtl
sahf
cltd
int
rcrl
rol
and
xor
ret
mov
lock
out
mov
cld
jmp
sti
out
cli
std
xchg
mov
repz
into
jmp
in
clc
shr
rcr
stc
repz
sub
aam
clc
shrb
leave
aam
ret
sub
xor
clc
shll
cmp
add
popf
cltd
xchg
mov
fists
mov
addr16
mov
jl
xor
cmp
and
or
xor
or
adc
sbb
cmp
sbb
xor
xor
sbb
pop
sbb
add
cmp
adc
xor
jge
or
insl
jns
jge
adc
add
push
pop
dec
inc
dec
jo
jno
imul
dec
insl
jg
inc
jp
inc
pusha
ja
movsb
inc
stos
movsb
stos
inc
jnp
dec
dec
outsb
dec
stos
jle
mov
mov
inc
movsl
mov
lods
mov
mov
pop
pop
push
mov
sbbb
mov
xorb
push
mov
lods
pop
mov
xchg
movsb
mov
xchg
mov
loopne
mov
xchg
jmp
mov
test
test
test
loop
int
xchg
aam
shl
cwtl
lret
call
stc
iret
pushf
es
call
es
xor
and
mov
mov
lcall
popf
sahf
in
cltd
jmp
ljmp
icebp
xchg
leave
out
loop
fucomi
fwait
lret
repz
cli
and
div
fwait
lcall
xor
and
ss
aam
into
sti
cli
les
iret
cmp
sti
aam
xor
add
xor
add
sub
xor
or
xlat
xor
add
aaa
or
cmp
and
cmp
push
push
or
add
xor
adc
or
cmp
inc
or
pop
jbe
push
inc
add
fs
push
outsl
fs
push
adc
jnp
pop
dec
sbb
mov
push
mov
inc
jne
jne
jne
scas
mov
pop
andl
xchg
dec
orl
xchg
xchg
lods
pop
cmpsb
mov
loopne
xchg
addl
mov
xchg
or
imul
jl
pop
pop
cltd
andb
movsl
test
mov
xchg
mov
mov
mov
loopne
lret
xchg
xchg
mov
cltd
stc
repnz
lret
cmc
cld
cmc
and
test
sahf
in
in
ret
sub
icebp
mov
fwait
lods
cwtl
mov
mov
xchg
loopne
ret
mov
loopne
clc
in
loopne
ret
out
ljmp
mov
fst
sar
fcomip
fcomip
pushf
and
sub
fcos
das
fidivl
call
repnz
xor
fbld
rol
cmp
rcr
cmp
sub
add
adc
sub
aad
adc
sbb
ficoms
pop
push
and
das
es
sbb
sbb
push
push
ja
add
je
outsb
bound
pop
cmp
push
addr16
jb
push
push
jns
imul
jns
jo
jge
je
dec
insb
dec
dec
insl
pop
test
push
dec
dec
mov
jbe
lods
jne
mov
movsb
mov
jl
xorl
pop
mov
mov
scas
mov
pushf
test
mov
in
mov
lock
lahf
in
call
test
xchg
xchg
jmp
mov
leave
loope
rcrb
jmp
shl
int
out
aad
std
sar
cld
push
neg
fcmovnb
shl
out
daa
cs
lods
loope
mov
mov
xchg
pushf
pushf
xchg
lcall
in
lret
repz
leave
mov
cltd
int3
call
int3
fcmovnu
clc
ret
cli
fcomps
xor
cld
and
call
shlb
leave
lock
xlat
ret
cmp
popf
lcall
mov
mov
lcall
fcmovne
and
lret
and
add
xor
or
add
or
sbb
sbb
sub
xor
add
push
cs
insb
push
sub
pop
jbe
push
add
pusha
jns
je
inc
add
inc
dec
push
push
popa
jp
dec
ja
adc
push
jge
pop
sbb
pop
jns
jp
inc
je
ja
pop
push
scas
movsl
pop
movsl
lods
je
cmpsl
stos
dec
dec
mov
jg
jle
mov
pop
mov
pop
test
mov
lods
mov
addb
pop
pop
test
mov
mov
stos
xchg
jmp
cmc
jecxz
cwtl
cwtl
mov
xchg
loope
stc
leave
jecxz
les
repnz
in
call
xlat
sti
aad
out
fucomp
out
fcomi
and
sub
enter
and
lahf
and
xchg
xchg
xchg
icebp
sbbl
or
aad
out
div
leave
int3
rcr
rcl
cwtl
lcall
cld
fwait
out
rcl
int3
into
iret
sub
aaa
lret
stc
aam
xor
ljmp
sar
int3
iret
cmp
aad
mov
sub
movl
movl
movl
movl
push
movl
call
test
je
push
push
push
call
test
je
push
push
jmp
push
push
call
xor
jmp
cmpb
lea
and
mov
mov
jl
jl
jl
xchg
std
rclb
loopne
rcr
and
sub
ret
fcmovnu
fldenv
das
and
repnz
idiv
repnz
cmp
out
xchg
hlt
test
xor
call
mov
cmp
jne
mov
push
cmp
je
push
call
test
je
push
push
push
push
push
push
push
push
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
imul
mov
or
or
push
call
cmpl
jne
mov
inc
mov
jmp
lea
movl
xor
or
cmp
jbe
mov
mov
and
mov
mov
mov
xor
mov
movzbl
add
mov
xor
or
movzwl
or
lea
mov
mov
mov
mov
mov
xor
xor
or
push
mov
xor
mov
add
mov
mov
cmp
jne
mov
mov
xor
mov
xor
cmp
andl
adcl
xorl
add
mov
mov
test
je
mov
xor
xor
add
mov
mov
mov
xor
add
xor
movzbl
sub
add
imul
mov
mov
xor
add
imul
cmp
jne
pushl
pushl
call
xor
xor
mov
orb
mov
mov
mov
mov
mov
mov
mov
mov
orl
subl
andl
xor
push
lea
push
lea
push
push
call
mov
add
cmp
jb
mov
test
movzwl
adc
mov
mov
pushl
sub
pushl
xor
andl
addl
orl
mov
pushl
call
movl
cmpl
je
cmpl
jne
add
imul
adc
mov
push
push
call
mov
dec
mov
jmp
cmp
movzwl
xor
or
adc
mov
sub
movl
mov
cmp
jg
xor
mov
mov
mov
pop
cmp
je
mov
mov
mov
or
mov
xor
add
imul
mov
jmp
push
call
push
mov
cmp
orl
adcl
call
cmp
je
xor
inc
jmp
call
xor
xor
imul
lea
mov
mov
mov
mov
mov
and
mov
mov
mov
lea
push
mov
call
mov
mov
pop
pop
leave
ret
xchg
xchg
popl
outsl
xchg
cmp
orb
xchg
popf
jl
sbb
jl
dec
daa
pop
int3
push
iret
adc
int3
sub
xor
or
push
daa
sbb
or
and
add
sub
insl
sbb
push
sub
gs
xor
data16
or
push
jno
arpl
adc
jg
or
pop
bound
push
inc
push
jp
jno
mov
arpl
inc
jbe
push
dec
jl
lods
jno
inc
dec
push
pop
mov
jae
cmpsl
mov
pop
dec
jbe
test
cmpsl
xchg
inc
pop
lea
cmpsb
xchg
mov
mov
fwait
xchg
mov
xchg
cmpsl
pop
xchg
sahf
mov
sahf
hlt
mov
popf
cltd
lock
mov
icebp
loope
loopne
lahf
sahf
int
inc
idiv
rcl
iret
lret
enter
xchg
into
xchg
aad
rcrl
rcr
fstp
and
out
std
ror
scas
xchg
mov
lock
mov
cmc
repz
cli
jecxz
lock
hlt
xchg
stc
loopne
enter
loope
testb
in
sti
cwtl
cltd
rol
loop
and
clc
daa
vucomisd
ljmp
out
div
enter
lret
std
xor
aas
add
or
cmp
sub
aas
add
iret
cmp
sbb
xor
and
cmp
add
or
aas
imul
je
push
jae
aaa
adc
adc
jle
jle
inc
adc
inc
jns
sbb
dec
jno
imul
dec
outsl
inc
inc
dec
inc
jae
imul
pop
jg
mov
arpl
cmpsb
scas
outsb
mov
dec
push
stos
mov
push
inc
je
inc
pop
stos
pop
push
mov
mov
mov
pop
pop
mov
mov
push
adcl
mov
push
nop
sahf
jecxz
pop
mov
orl
aam
mov
xchg
nop
cmpb
mov
jl
sbb
jl
xchg
cmpsl
stos
in
test
scas
jecxz
mov
xorl
loopne
lahf
rorl
mov
sahf
fwait
in
shr
into
lock
cmc
sti
shl
xchg
neg
fstps
icebp
sar
sti
std
in
and
sub
int
cld
call
mov
mov
sub
ret
cltd
sti
in
in
lahf
enter
into
ret
cli
ficoml
fwait
and
sahf
loope
jmp
jmp
int3
ffree
shll
lock
cmp
aaa
aaa
lret
clc
aas
incl
add
fcmovne
daa
add
es
lret
and
xor
pop
or
fnsave
fcoms
popa
arpl
xor
addr16
adc
gs
imul
cmp
aas
push
or
jle
add
sbb
push
push
jge
dec
jae
imul
push
jge
push
jg
push
push
pop
pop
push
cmpsb
jp
inc
inc
inc
scas
jp
dec
inc
jo
dec
push
push
push
jns
push
inc
push
mov
inc
inc
jle
mov
mov
addl
mov
xchg
cwtl
mov
mov
in
lahf
mov
out
test
mov
stc
mov
mov
mov
in
sti
lahf
xchg
xchg
lahf
test
jmp
roll
test
enter
int3
loopne
lock
repnz
not
negl
cli
repz
xor
repz
mov
nop
mov
sahf
lret
into
jecxz
int
into
lock
loopne
loop
rcl
lret
fmulp
cmc
shll
and
cli
std
call
xor
sub
ljmp
sub
aad
aaa
cli
fdivl
and
aam
add
mov
cltd
popf
fcoms
addb
enter
jl
sbb
jl
wbinvd
sub
cmp
shlb
adc
aas
cmp
sbb
add
push
sub
cs
push
or
push
jno
inc
cmp
jnp
add
jae
js
jp
add
sbb
push
inc
gs
dec
sbb
jae
push
sbb
jl
jle
jge
jl
dec
lods
jl
stos
cmpsb
dec
pop
jae
dec
push
mov
lods
je
mov
mov
orb
stos
pop
dec
xchg
mov
test
mov
lea
lods
adcb
popf
xchg
cltd
sahf
mov
xorb
lcall
std
sti
mov
sahf
out
test
lret
out
call
xchg
shl
fwait
out
enter
into
out
repz
ret
ret
xlat
lds
das
xor
icebp
orb
fwait
lcall
mov
xchg
cltd
jmp
jmp
mov
jmp
out
xchg
xchg
int
in
pushf
negl
fsubl
std
sub
daa
es
fsub
out
sub
and
cmp
in
leave
cmc
fcomip
sarb
cmp
xor
xor
sub
aaa
lret
add
fdivrl
xor
and
push
aaa
fstps
xor
adc
adc
cmp
cmp
bound
gs
or
outsl
xor
xor
push
push
jo
jb
pop
sbb
adc
dec
sbb
jae
push
adc
sbb
outsb
jg
pop
sbb
inc
pop
arpl
cmpsl
inc
mov
movsb
outsb
pop
outsb
pop
scas
dec
jo
mov
scas
push
cmpsl
mov
jl
dec
jl
movsl
test
push
mov
mov
mov
scas
stos
mov
pushf
nop
xchg
xchg
mov
nop
popf
xchg
mov
cltd
sarl
adcb
jne
jl
sbb
jl
lcall
xchg
mov
out
clc
mov
out
cmp
out
enter
jmp
mov
xchg
cmc
in
xchg
lcall
out
xchg
fsqrt
aam
out
fcmovb
out
sub
enter
xchg
xchg
mov
xchg
mov
sti
repnz
mov
test
imul
jmp
ljmp
shr
xchg
cwtl
lahf
aam
enter
int3
into
aam
and
sub
mul
enter
daa
and
out
cmc
das
lret
aam
and
add
and
sarl
or
fldl
fidivs
das
fists
add
sub
aaa
das
aad
adc
arpl
push
adc
add
sbb
imul
bound
jo
xor
pop
imul
or
or
popw
push
inc
push
outsb
jl
or
dec
adc
insb
jp
sbb
mov
outsb
dec
pop
inc
jg
mov
mov
pop
lods
pop
movsb
js
movsb
push
pop
test
push
lods
push
pop
movsb
inc
mov
push
mov
mov
adcb
xchg
mov
popl
jmp
loopne
cltd
mov
mov
cmc
mov
cmc
xchg
in
out
ret
incb
stc
int
loope
nop
sar
lock
call
xchg
xchg
cltd
std
shr
out
ficompl
repnz
ret
in
call
cs
mov
xchg
xchg
out
icebp
popf
lcall
test
in
out
cld
mov
xchg
mov
leave
ret
neg
and
cwtl
out
shll
and
sub
and
int
int
shlb
sub
into
sar
cmp
cli
xor
cmp
sarl
ret
and
xchg
cwtl
mov
out
hlt
in
mov
mov
loop
jl
jl
jl
cmp
sub
adc
and
add
fcompl
ds
xor
and
and
cmp
xor
sbb
adc
or
cmp
cmp
add
jl
jbe
jle
dec
or
dec
or
push
outsl
gs
push
inc
dec
push
push
dec
sbb
pop
pusha
mov
push
inc
pop
lods
inc
jle
dec
push
push
mov
push
push
push
mov
push
movl
mov
mov
mov
cmp
je
andl
mov
inc
mov
cmpl
jne
or
mov
imul
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
add
cmp
je
movl
xor
xor
cmp
jb
mov
xor
add
push
pushl
pushl
pushl
subl
call
mov
mov
mov
mov
jmp
mov
xor
add
cmp
jne
xor
xor
and
mov
xor
add
mov
mov
subl
andl
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
sub
lea
xchg
rep
jno
nop
cmpb
cwtl
ret
es
jg
jl
jo
mov
insl
inc
je
pop
stos
pop
mov
pop
inc
mov
mov
lods
dec
mov
addl
mov
mov
mov
fwait
mov
mov
mov
jmp
icebp
div
call
call
out
in
leave
lahf
popf
leave
out
testb
out
in
mov
out
lcall
ret
out
and
sub
clc
in
xor
lods
out
adcb
popf
xchg
cwtl
clc
xchg
loop
leave
mov
xchg
ror
cltd
loopne
in
mov
shl
in
fcmove
xlat
ror
and
rcr
lahf
aad
sub
and
sub
fisubrl
xor
lret
cmp
es
rcr
das
fcom
cmp
rcl
xor
ret
lret
sub
add
sub
or
sub
aam
pop
sbb
add
arpl
xor
sub
cmp
sbb
pusha
sub
xor
jbe
insb
or
or
jnp
popa
inc
jl
adc
dec
jg
inc
inc
sbb
inc
adc
push
pusha
pop
imul
pop
pop
push
jne
arpl
jp
push
pop
push
pop
imul
jle
mov
test
dec
jnp
mov
dec
dec
mov
pop
mov
mov
mov
pop
dec
xorb
cmpsl
xchg
loope
mov
xchg
popl
cmpsl
sub
mov
ljmp
sahf
rorl
pushf
pushf
negb
popf
lret
loopne
les
cli
fstp
and
sahf
iret
and
cld
repnz
stc
ret
and
std
int3
lret
cmc
xchg
mov
xchg
mov
mov
pushf
mov
out
loop
nop
ret
xchg
loopne
in
mov
ret
out
mov
mov
test
and
jl
sbb
jl
bnd
ffree
stc
jmp
ret
in
fcmovnbe
in
and
in
vmovaps
sub
xor
rol
fmul
xlat
into
fnsave
aad
shll
fiadds
xlat
ret
or
and
cmp
iret
cvttps2pi
or
xor
push
adc
cs
add
cmp
push
ds
or
xor
or
outsb
jns
push
sbb
adc
or
jne
cmp
inc
jbe
push
jle
inc
or
outsb
jne
dec
push
jbe
jo
push
sbb
jae
pop
pop
dec
arpl
dec
ja
cmpsb
jge
jb
inc
dec
scas
dec
push
cmpsl
lods
push
js
dec
mov
scas
jge
cmpb
xchg
orb
test
push
mov
mov
mov
mov
jecxz
repnz
jmp
repnz
popf
xchg
mov
pushf
clc
notl
ret
icebp
icebp
xchg
mov
test
lret
into
xlat
fcmovnbe
loope
bnd
loope
lret
es
int3
test
mov
cld
out
xchg
shl
mov
call
fwait
loop
fwait
std
shl
jmp
cwtl
test
out
repnz
shll
iret
rol
out
fdivrp
and
rcr
xor
out
sub
div
sub
ss
and
ss
iret
decl
or
cmp
and
cmp
cmp
or
xor
xor
sbb
or
fcomp
sbb
push
ss
popa
adc
lsl
sub
insb
or
bound
jo
insb
adc
insb
jbe
sbb
imul
js
dec
dec
dec
dec
adc
inc
jns
jne
dec
jg
pop
dec
mov
pop
mov
mov
test
jl
mov
xchg
mov
xchg
addb
sbb
mov
sbb
jl
inc
lods
test
movsl
dec
dec
pop
ja
mov
mov
pop
mov
lods
push
pop
dec
mov
mov
test
lea
xchg
mov
mov
lods
test
out
popf
lcall
xchg
adcb
mov
mov
sub
addl
xchg
int3
rcl
hlt
ret
aad
aam
fwait
out
cltd
aam
iret
rcrl
sub
and
cs
cli
fsubl
les
xchg
mov
mov
lcall
inc
idiv
cltd
in
rorl
jmp
aam
lret
clc
cwtl
call
shl
loope
fisubrs
fisubl
fdivr
icebp
lret
and
iret
and
out
and
cs
aam
shll
fdivl
add
and
fisubrl
xor
adc
daa
or
sub
xor
pop
xlat
cvtps2pi
cmp
sub
gs
sbb
bound
or
or
imul
or
bound
ds
inc
inc
bound
adc
dec
imul
outsl
jnp
jns
mov
push
push
scas
jg
inc
imul
jno
push
mov
pop
jbe
mov
jbe
dec
mov
pop
push
inc
lea
lods
movsl
pop
mov
mov
scas
pop
mov
mov
addl
pop
out
out
mov
mov
repnz
mov
popf
mov
imul
rclb
repz
in
xchg
iret
loop
int3
sti
icebp
std
clc
xlat
in
into
and
cli
out
leave
rol
and
and
cld
xor
mov
mov
mov
mov
test
std
in
out
mov
cmc
nop
adcb
cmpsb
cmpsl
or
cmpb
in
fistps
jg
jl
out
stc
in
xchg
ljmp
ret
rcr
lahf
in
lret
cli
int3
jmp
iret
icebp
fsubl
fmulp
cs
sub
fnstenv
ds
fisubl
sub
lds
fdivs
fisubrl
rcl
iret
aas
add
and
push
fcmovnu
adc
aas
ss
and
or
add
outsb
jne
jo
cmp
jo
or
cmova
ja
js
add
jnp
dec
sbb
pop
jbe
pop
pop
inc
sbb
pop
jp
movsl
jbe
push
test
pop
push
mov
cmpsl
lods
insb
ja
jne
test
jae
mov
scas
mov
inc
mov
mov
xorl
mov
scas
pop
cwtl
popf
xchg
loopne
lcall
lahf
xchg
xchg
xchg
mov
jmp
out
in
cli
cli
loopne
hlt
xchg
sahf
icebp
ret
xchg
repnz
mov
ret
in
icebp
popf
xchg
neg
clc
and
in
aad
clc
ljmp
in
and
mov
mov
loope
repz
hlt
cmp
out
popf
int
mov
loope
xchg
repz
jmp
stc
int
aad
shl
icebp
cli
fprem1
in
fsub
in
sub
cs
int
aam
fmul
int
shrl
aad
shll
int3
cmp
aam
fistpll
push
enter
adc
add
sub
aaa
or
xor
or
ficoml
adc
push
pop
pusha
fbld
imul
insb
arpl
sbb
ss
push
cmp
sbb
add
imul
dec
dec
insb
adc
jne
push
pop
jo
jbe
je
dec
pusha
pop
ja
inc
mov
inc
js
pop
inc
insb
inc
push
xchg
xchg
popf
inc
pop
jo
mov
mov
ljmp
push
je
push
push
pop
push
stos
jp
pop
jae
scas
movsl
dec
pop
inc
mov
pop
pop
test
stos
mov
push
mov
pop
mov
mov
pop
mov
jecxz
xchg
test
nop
jmp
loope
sub
xchg
out
hlt
hlt
in
repz
repz
repnz
call
leave
hlt
in
repnz
les
fwait
std
sti
out
les
jecxz
mulb
std
sub
leave
inc
mov
call
test
in
sub
movl
movl
mov
mov
add
mov
mov
movl
cmpl
je
cmpl
jne
mov
imul
push
call
mov
dec
mov
jmp
xor
add
sbb
mov
push
movl
mov
cmp
ja
push
mov
xor
mov
add
mov
mov
xor
add
mov
sub
mov
mov
movl
mov
xor
add
cmp
je
mov
xor
movzbl
ror
mov
mov
sub
mov
xor
push
mov
subl
andl
add
imul
sub
cmp
ja
jmp
lea
mov
xor
or
mov
xor
mov
mov
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
imul
and
xor
or
push
pushl
push
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
sub
cmp
jb
movl
mov
cmp
jle
mov
movzwl
add
mov
xor
xor
xor
mov
movzwl
mov
adc
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
mov
add
mov
mov
sub
cmp
jae
mov
mov
xor
xor
lea
jmp
mov
mov
xchg
test
adc
jl
mov
lret
xchg
jmp
in
dec
repnz
repz
repz
repz
shr
call
es
fld
daa
sub
sub
repnz
and
ret
sub
aam
cmp
and
cld
xor
xor
cmp
jbe
mov
rcr
mov
jmp
mov
or
mov
mov
sbb
mov
lea
mov
jmp
xor
or
adc
mov
rol
mov
xor
add
imul
mov
mov
mov
and
mov
sub
cmp
jae
mov
cmp
xor
or
sbb
mov
mov
xor
xor
lea
jmp
xchg
mov
xchg
stc
xchg
aam
mov
mov
int3
jl
mov
aad
and
das
or
xor
sub
and
aad
sub
push
sbb
imul
cmp
sbb
outsb
adc
or
or
xor
push
imul
mov
mov
xor
xor
lea
lea
mov
xor
xor
xor
or
and
mov
xor
mov
imul
add
imul
mov
mov
sub
cmp
jae
movl
cmpl
je
cmpl
jne
sbb
and
pushl
push
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
mov
cmp
jbe
xor
xor
shlb
mov
xor
xor
lea
jmp
mov
mov
xor
xor
add
mov
and
xor
lea
mov
xor
xor
add
sub
add
imul
mov
mov
sub
cmp
jae
mov
cmp
mov
adc
mov
xor
addl
xorl
xor
lea
jmp
movzwl
mov
sub
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
sub
cmp
mov
mov
jae
xor
xor
lea
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
and
imul
and
push
call
jmp
xor
movl
xor
add
cmp
jne
xor
add
mov
sub
xor
lea
mov
movzwl
xor
mov
mov
xor
add
imul
mov
cmp
mov
adc
mov
pushl
mov
add
call
cmp
mov
mov
adc
mov
add
mov
mov
mov
xor
mov
or
sub
mov
mov
xor
add
imul
sub
cmp
jbe
pop
pop
pop
leave
ret
xchg
xchg
nop
mov
push
xchg
loope
nop
cmpb
push
add
jl
sbb
jl
mov
sbbb
cld
enter
call
nop
cmc
icebp
ret
cwtl
xchg
fcoml
popf
xlat
xlat
and
imul
ljmp
xor
sub
lret
enter
das
rcr
and
add
cmp
and
xor
xlat
xor
sbb
sub
cmp
sub
cmp
or
cmp
ds
jo
imul
sbb
jge
cmp
add
addr16
sbb
dec
dec
inc
inc
inc
dec
popa
dec
je
push
inc
jbe
adc
pop
jle
inc
movsb
jne
cmpsl
cmpsl
js
fs
lods
inc
mov
jae
mov
push
jbe
push
scas
mov
mov
pop
mov
push
push
push
pop
mov
pop
mov
lods
andl
subb
pop
xchg
fwait
out
cmpsb
sbbb
scas
and
in
sti
in
ljmp
stc
loopne
cld
test
shl
jmp
xchg
nop
loop
lret
xchg
in
xchg
lret
fistps
sti
not
fisubrs
es
daa
les
lock
fwait
in
xchg
xchg
orb
popf
xchg
jecxz
xchg
xchg
jmp
into
loop
sar
stc
stc
fcomip
fcmovnb
loopne
sahf
clc
lock
repnz
loop
out
into
out
fcomip
sar
rcl
xor
cmp
ror
fiadds
xlat
add
or
leave
aas
or
xor
das
sub
roll
sbb
push
pop
sub
fiadds
adc
sbb
add
outsb
imul
jne
jne
insb
xor
jno
adc
push
cmp
inc
or
jbe
inc
inc
jle
or
outsl
adc
sbb
test
jg
mov
xchg
les
fxch
cmpsb
out
jl
sbb
jl
jns
jo
push
inc
inc
jbe
pop
jbe
test
dec
insb
inc
push
imul
push
inc
dec
mov
movsb
mov
jnp
test
cmpsb
mov
lea
dec
push
dec
mov
lea
lcall
sahf
mov
xchg
mov
lock
cwtl
out
in
call
cwtl
lock
cltd
in
sar
popf
test
repz
aad
iret
int3
ficompl
fstpl
sub
leave
in
fadd
shrb
div
cltd
fwait
out
xchg
ljmp
clc
loopne
jmp
out
sahf
hlt
rorb
jmp
fxch
frstor
sti
lock
neg
fsubr
sub
es
cs
in
out
and
icebp
and
es
and
fisubl
fldl
daa
sub
and
enter
xor
and
cmp
or
add
aaa
pop
push
push
adc
push
jno
push
or
adc
adc
or
inc
jno
bound
push
je
dec
jp
jnp
dec
bound
push
adc
bound
jns
pop
dec
pop
pop
pop
push
jne
pop
dec
push
pop
pop
mov
inc
mov
mov
push
scas
test
mov
js
mov
dec
push
push
test
push
jp
cmpsl
mov
lea
lods
mov
cmpsl
mov
pop
scas
xorb
cmpsb
stos
in
mov
movsl
mov
mov
mov
jmp
in
loopne
enter
popf
out
cld
ret
loopne
loope
iret
xlat
cld
ficomps
sahf
and
call
and
stc
out
and
leave
xchg
stc
xchg
xchg
cli
test
popf
lcall
mov
popa
lds
icebp
jl
sbb
jl
xchg
fwait
stc
xchg
repnz
sahf
jecxz
mov
jmp
mov
out
into
jecxz
iret
shr
cmc
idiv
negl
out
jmp
vcomisd
ror
daa
ret
es
iret
fdivrp
aad
aam
add
push
lds
xor
ffreep
sub
add
or
sub
ss
sbb
add
cmp
pop
addr16
jb
xor
adc
xor
or
inc
cmp
aas
je
gs
jge
dec
or
or
inc
sbb
pop
push
unpcklps
js
jne
jg
dec
pop
pop
pop
mov
je
jbe
pop
lods
scas
test
jne
inc
mov
dec
je
mov
push
mov
test
mov
test
test
pop
test
mov
mov
mov
loope
nop
xchg
test
movsl
test
test
in
out
mov
imul
xchg
iret
out
ljmp
int3
xchg
enter
in
and
pushf
shl
out
div
aam
and
ljmp
mov
mov
lock
cmc
sti
call
loop
xchg
in
icebp
test
int3
xchg
out
xchg
repnz
cli
ljmp
rcr
test
sub
std
call
das
sub
xor
fdivs
faddl
cmp
enter
or
add
and
adc
or
add
push
or
sbb
push
sbb
pop
and
cmp
push
sub
pop
sub
gs
xor
xor
outsl
je
adc
jns
sbb
inc
jle
jns
inc
inc
inc
jp
jo
push
adc
push
js
push
push
adcl
xchg
test
lods
or
test
sub
jl
sbb
jl
mov
jo
push
pop
mov
test
pop
movsl
mov
inc
inc
mov
dec
dec
dec
mov
jp
stos
pop
inc
scas
addl
mov
mov
popl
xchg
mov
pop
pop
loop
in
adcl
mov
mov
orb
ljmp
loopne
mov
in
iret
into
int
loope
xlat
lock
fxch
aam
fwait
leave
and
rol
mull
cld
sub
sub
jmp
sub
int
iret
sub
sti
in
cwtl
sti
lcall
lcall
fwait
xchg
xchg
in
loopne
cmc
in
xchg
out
in
lret
cmc
fsubr
clc
lcall
daa
and
sti
and
xor
mov
std
lret
rolb
add
or
or
cmp
int
push
push
and
fsts
cmp
add
xor
pop
addr16
push
outsl
sub
aaa
or
add
sbb
jnp
cmp
ds
or
imul
or
insl
jne
bound
pop
push
imul
sbb
inc
test
insl
js
movsl
lods
mov
test
inc
push
ja
movsl
test
jnp
test
jnp
test
movsl
inc
push
dec
mov
mov
xchg
push
lods
mov
and
mov
in
mov
out
sahf
mov
mov
xchg
sti
lock
stc
sti
sahf
mov
fwait
ret
ret
pushf
xchg
ret
in
mov
loopne
enter
xlat
out
sti
fstps
rcr
fdivr
lahf
hlt
ret
es
sub
jmp
out
sub
mov
lahf
mov
mov
xchg
addb
addb
push
bnd
xchg
jl
jl
mov
repz
xchg
xchg
movl
leave
shl
ret
fmul
fucom
repz
repz
cld
jecxz
in
mull
fldt
and
inc
bnd
rol
xlat
xor
fdivrl
xor
cmp
int
into
and
and
add
or
sub
sub
sub
int
adc
aam
mov
push
push
movl
xor
or
xor
xor
or
mov
mov
mov
movl
cmpl
je
cmpl
jne
mov
sub
mov
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
movl
mov
cmp
jle
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
test
jne
cmp
mov
sar
mov
mov
xor
add
leave
ret
sub
xchg
cltd
xchg
adc
ljmp
mov
cmc
jl
sbb
jl
and
pop
xor
or
and
and
add
cmp
outsb
push
push
xor
jp
sbb
insb
xor
jnp
js
jns
adc
dec
inc
or
jns
sbb
insl
adc
dec
pop
inc
addr16
imul
dec
je
inc
js
dec
stos
inc
inc
stos
push
inc
dec
inc
stos
push
inc
cmpsl
stos
mov
stos
dec
pop
push
dec
dec
mov
orl
mov
inc
xchg
cmpsl
xchg
cmpsb
mov
pop
mov
fwait
mov
mov
test
out
loope
repnz
xchg
scas
lods
mov
cltd
mov
out
jmp
mov
adcl
leave
popf
ljmp
call
icebp
in
iret
test
pushf
shl
repz
cs
jmp
loop
scas
in
mov
xchg
repnz
jmp
cltd
xchg
cld
mov
lahf
ljmp
cltd
jecxz
icebp
idiv
repz
xlat
cli
test
fadd
and
es
fxch
ret
rol
cmp
es
and
and
lret
adc
sub
and
fcomps
sub
and
fbld
addr16
sub
add
cmp
jbe
jb
sbb
sbb
aas
push
inc
arpl
pop
cmp
jne
jp
adc
dec
adc
push
jo
insl
jne
gs
adc
imul
gs
gs
pop
pop
push
pop
insb
outsl
imul
stos
pop
push
push
insb
jno
movsb
mov
jne
mov
andb
mov
stos
xchg
mov
dec
test
cltd
mov
mov
movsl
jecxz
cltd
cmpsb
mov
test
xchg
lahf
loopne
xchg
cltd
popf
push
cmp
mov
nop
and
dec
dec
jle
jl
sbb
jl
mov
stc
out
jmp
mov
xchg
test
hlt
hlt
in
lret
mov
sahf
in
inc
sahf
in
mov
hlt
jmp
int
rcl
dec
ret
es
hlt
xlat
jmp
das
fadd
sti
lock
mov
sti
mov
lock
lahf
lcall
xchg
jmp
loope
ljmp
fdivp
cwtl
sti
lcall
cs
ljmp
shrl
stc
rcl
rolb
les
or
lret
and
enter
lret
or
xor
and
pusha
aas
cmp
add
fstpl
and
or
outsb
ds
or
outsl
das
add
pop
insl
imul
inc
add
inc
or
push
jb
arpl
insb
push
inc
insb
dec
sbb
sbb
push
push
pop
sbb
jb
pop
jle
dec
imul
push
dec
inc
scas
inc
mov
cmpsb
inc
inc
dec
mov
pop
dec
push
inc
mov
push
inc
test
xchg
popl
mov
push
lahf
push
pop
test
fwait
test
stos
mov
in
mov
xchg
pushf
mov
imul
repz
rclb
lret
int3
into
xchg
cli
int
in
shl
repnz
lcall
shll
fsqrt
stc
out
and
cld
and
cs
test
mov
xchg
in
xchg
jmp
mov
xchg
xchg
out
popf
jmp
repnz
mov
call
fistpl
and
rol
leave
out
sub
fisubl
enter
xor
ret
shr
ret
cmp
xor
and
fidivl
xor
push
sub
xor
shll
lea
dec
or
xchg
addb
shrl
push
idivb
jg
jl
sub
pop
fadds
fidivs
popa
and
cmp
push
or
insb
add
adc
pop
pusha
push
jbe
sbb
outsb
insl
jnp
adc
or
dec
jle
dec
dec
inc
movq
imul
mov
pop
jle
push
jp
inc
ja
dec
stos
pop
imul
dec
mov
push
mov
jl
mov
stos
push
js
jbe
pop
movsb
mov
mov
stos
adcl
mov
xchg
mov
mov
pop
mov
mov
mov
movsb
loope
mov
xchg
nop
lock
loop
cmpl
sahf
in
out
xchg
jmp
xchg
aad
bnd
icebp
sahf
lcall
leave
sub
lds
in
shr
icebp
jecxz
clc
ljmp
popf
cmc
cwtl
push
mov
xchg
lds
mov
nop
out
xchg
rcrb
iret
jmp
sahf
call
cmc
dec
loop
out
int3
in
sub
sub
aaa
out
cmp
stc
enter
iret
shrb
xor
fld
and
cmp
fisubl
cs
and
sub
xor
cs
aad
sub
sbb
aaa
xor
cmp
and
adc
adc
or
add
fs
ss
add
xor
jg
jp
inc
push
or
jbe
jnp
dec
inc
imul
inc
pop
pop
push
sbb
mov
jae
inc
imul
ja
imul
mov
pop
mov
mov
jle
mov
jl
mov
subl
mov
mov
mov
cmpsl
mov
xchg
mov
in
pushf
mov
sahf
xchg
in
xorb
xchg
jnp
js
mov
xchg
mov
jl
adc
jl
mov
mov
repz
repz
sti
jecxz
or
sahf
in
lock
int
out
enter
cli
call
and
shlb
sti
in
mulb
std
sub
xor
icebp
cmc
test
sti
xchg
ljmp
cltd
mov
nop
test
in
popf
enter
loopne
ljmp
sar
sahf
into
shl
fsub
and
rol
fdivl
sub
sub
das
ror
int
rol
and
lret
les
cmp
add
or
xlat
xor
xor
aaa
sbb
add
sbb
bndldx
and
movq
push
jne
bound
adc
jno
js
push
jae
unpcklps
sbb
adc
sbb
push
sbb
adc
fs
imul
pop
adc
mov
bound
dec
pop
inc
inc
push
inc
mov
dec
pop
mov
pop
dec
push
push
mov
inc
mov
dec
test
mov
dec
mov
xchg
push
mov
lahf
xchg
pop
mov
lods
mov
xchg
mov
mov
in
lods
jecxz
cmc
ljmp
xchg
std
cmpb
mov
out
out
enter
loopne
xchg
nop
std
xchg
idiv
lret
int3
rol
jecxz
daa
stc
repz
in
sub
out
and
mov
mov
rclb
cli
mov
jmp
cli
std
out
xchg
xchg
int3
vpsubsb
rcll
neg
fcomi
sar
and
clc
enter
in
icebp
ljmp
cmp
shrb
cli
and
aad
add
mov
add
xor
movl
cmp
jne
movl
cmpl
je
cmpl
jne
mov
adc
pushl
push
call
xor
xor
dec
mov
jmp
mov
movl
mov
cmp
ja
xor
or
or
mov
add
mov
mov
mov
xor
mov
not
mov
push
mov
mov
add
cmp
pop
je
mov
leave
ret
mov
xor
add
leave
ret
mov
xor
add
leave
ret
sub
test
lcall
xchg
xchg
test
xchg
lods
sar
jl
sbb
jl
cld
les
sub
cs
add
and
cmp
fildl
xor
cmp
bound
sbb
cmp
nopw
push
adc
adc
push
insb
jp
insb
popw
add
jp
jnp
or
sbb
bound
dec
push
adc
push
inc
pop
outsb
push
push
push
jp
test
popa
js
jns
inc
inc
jo
inc
dec
cmpsl
mov
push
mov
pop
cmpl
movsl
mov
pop
mov
push
mov
mov
movsl
xchg
pop
mov
mov
mov
jecxz
test
addl
jmp
mov
mov
out
sti
xchg
out
xchg
xchg
xchg
enter
aam
std
rcl
jmp
lock
lret
cltd
and
cmc
cld
iret
sub
fmulp
mov
cltd
cwtl
hlt
pushf
cwtl
ret
nop
mov
loop
out
loopne
call
lret
xlat
int
shl
leave
lret
out
fwait
in
xchg
in
fcmove
icebp
rcr
xlat
loopne
fsubs
sub
in
ret
int3
mov
hlt
hlt
sub
cld
testb
fstp
xor
add
push
sub
and
add
daa
das
add
fbld
or
pop
ds
pop
add
sbb
aas
cmp
sbb
bound
sub
push
das
add
sbb
jnp
sbb
push
adc
sbb
sbb
je
bound
insb
inc
push
pop
inc
inc
inc
jo
push
inc
insl
jp
dec
dec
mov
jae
pop
inc
inc
push
pop
inc
push
mov
outsb
jne
outsb
scas
push
movsl
jnp
jne
pop
push
dec
pop
jg
inc
mov
andb
mov
test
adcb
mov
scas
andb
xchg
mov
mul
mov
orb
xchg
lahf
push
repz
jl
sbb
jl
mov
test
mov
icebp
repz
mov
nop
mov
xchg
xchg
mov
xchg
xchg
xchg
lret
mov
sar
lds
cwtl
lock
std
lret
xchg
rcrl
icebp
fcmovnbe
sar
leave
stc
in
daa
fsubp
in
fcmovnb
lock
imul
mov
cli
test
testb
xchg
lcall
xchg
xchg
mov
xchg
xchg
mov
out
pushf
fadd
neg
aad
and
std
daa
sub
icebp
and
sub
std
add
and
fld
cmp
ds
das
add
cs
aam
push
cmp
pop
push
sbb
and
and
or
xor
fs
jno
jle
insb
cmp
outsl
jne
adc
inc
dec
jp
add
inc
push
adc
dec
adc
pop
jno
outsb
movsl
jp
inc
push
inc
jae
lods
pop
pop
dec
stos
dec
inc
dec
insb
dec
mov
push
inc
jae
mov
jns
push
stos
mov
pop
pop
mov
pop
mov
mov
mov
mov
lea
pop
mov
and
mov
stos
xchg
xchg
addl
mov
mov
cwtl
xchg
jecxz
hlt
xchg
int3
in
xchg
call
loop
jecxz
out
sti
out
lret
cmc
into
xlat
and
cltd
ret
frstor
aad
sub
lret
in
iret
out
rcll
cltd
jmp
xchg
cld
mov
repnz
call
mov
inc
decl
jmp
shll
repz
stc
fadd
fcmovnu
ret
fcmovnb
and
ljmp
test
sub
cli
cmp
xor
fldcw
daa
aam
mov
lea
xor
mov
cmp
jl
sbb
jl
cmp
fimull
sub
xlat
into
into
and
push
xor
xor
adc
push
cmp
and
pop
sbb
or
sbb
xor
data16
sub
jne
adc
adc
inc
or
sbb
jbe
sbb
adc
adc
push
pop
pop
imul
inc
je
inc
addr16
push
push
mov
mov
push
stos
js
push
lods
pop
pop
jg
pop
push
inc
mov
movsb
mov
mov
movsb
mov
mov
mov
loop
xchg
jecxz
mov
in
stos
nop
lahf
mov
xchg
mov
mov
test
in
loope
sbbb
xchg
loop
mov
enter
rol
sti
loop
sti
xchg
shl
int
fsub
ret
jmp
lret
jmp
sub
cld
xor
ror
mov
in
test
test
clc
out
jmp
cltd
rcrl
jmp
or
shr
out
aam
fcmovnb
repnz
aad
xchg
jmp
cld
int3
in
icebp
jecxz
sar
lret
jmp
jmp
in
shlb
into
xlat
into
neg
enter
clc
shll
xor
aad
int3
fildl
fbld
aaa
lret
or
cmp
unpcklps
and
and
push
sbb
add
push
add
popa
add
cmp
pop
ds
imul
sbb
cmp
sbb
ja,pt
bound
inc
add
dec
inc
bound
adc
inc
outsl
pop
push
jle
adc
pop
dec
je
dec
pop
mov
pop
pusha
jae
inc
inc
jns
outsl
jp
dec
insb
movsl
mov
mov
mov
push
mov
mov
inc
inc
pop
pop
xchg
mov
mov
mov
lcall
cwtl
mov
mov
popf
mov
fcomps
xchg
test
mov
jl
sarb
jl
lea
test
scas
ljmp
xchg
xchg
mov
cli
enter
mov
lock
hlt
lock
out
xchg
jmp
fwait
out
sahf
popf
fwait
sub
enter
fcmovnb
and
shl
jecxz
jmp
fwait
nop
out
mov
loop
loopne
add
nop
ljmp
sti
fwait
vpandn
nop
hlt
dec
fcompl
sub
xlat
and
in
into
and
xor
xor
xor
fiadds
fdivrp
cmp
cmp
xlat
or
int
and
add
pop
add
aaa
adc
add
cmp
cmp
push
or
push
or
adc
cmp
jnp
inc
aas
add
jle
sbb
adc
pop
jbe
gs
push
push
sbb
sbb
jl
jnp
push
inc
pop
mov
inc
pop
jge
movsb
inc
mov
movsb
pop
jl
dec
push
scas
mov
mov
mov
mov
cmpsb
mov
mov
mov
xchg
mov
mov
cwtl
repz
jecxz
mov
clc
call
jecxz
xchg
testl
enter
out
ret
lock
fwait
aam
xchg
idiv
sti
in
aad
loope
ljmp
ffree
ffreep
test
addl
push
mov
sub
push
movl
andl
mov
inc
mov
cmpl
jne
and
adc
imul
imul
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
movl
mov
cmp
jge
mov
push
mov
mov
mov
or
mov
xor
mov
xor
add
add
imul
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
and
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
xor
add
mov
and
mov
mov
imul
add
mov
mov
pop
pop
leave
ret
mov
lcall
test
dec
mov
inc
pop
ret
jl
sbb
jl
cld
ljmp
xchg
icebp
cwtl
cli
xchg
call
jecxz
ret
sahf
sar
in
sti
clc
int3
fldl2t
fcmovbe
fprem1
jmp
and
enter
lock
sti
ror
fdivl
ffreep
fldcw
and
pop
fsubrl
cmp
add
cmp
adc
or
pop
xor
xor
adc
rcr
fimull
fsts
sbb
xor
cmp
cmp
ds
push
outsb
and
bound
outsb
or
sbb
adc
jb
jge
inc
add
cmp
or
outsl
jp
jl
adc
inc
adc
jp
pop
push
pop
dec
jnp
jle
pop
gs
outsl
insb
mov
mov
mov
ja
jne
mov
pop
lods
mov
cmpb
test
mov
mov
andb
xchg
pop
push
push
popf
cltd
popf
popf
movsb
lahf
mov
mov
addb
mov
in
lcall
test
enter
int3
jmp
or
repnz
out
call
iret
in
out
enter
lock
in
stc
shll
popf
daa
std
in
and
daa
and
in
loope
xchg
in
mov
mov
xchg
std
loope
loopne
mov
call
lea
not
icebp
hlt
loop
and
jmp
sar
fcmovnb
and
xor
repz
and
rol
sub
sti
aaa
add
and
aad
and
and
sub
and
xor
xor
fdivl
and
and
fs
sbb
sub
jb
push
xor
add
jo
pop
or
sbb
adc
inc
je
sbb
jno
dec
dec
dec
pusha
arpl
push
push
pop
mov
popf
xchg
mov
or
xchg
xchg
test
rorl
daa
lds
jg
jl
mov
jo
dec
je
push
mov
jle
imul
jbe
scas
inc
pop
mov
scas
push
mov
scas
mov
nop
test
mov
mov
pop
in
lahf
mov
fwait
mov
xchg
test
in
xchg
sti
mov
cmpl
xchg
mov
cmc
rcr
out
aam
lret
fst
sar
lret
neg
shl
and
xlat
and
in
stc
xor
daa
rol
loope
stc
test
test
xchg
mov
popf
repz
mov
inc
into
mov
rcll
out
out
xlat
hlt
in
stc
fsubs
ret
sti
lahf
jecxz
and
ljmp
faddp
into
repnz
and
aas
sti
fidivl
xlat
add
sti
cli
ss
and
enter
add
iret
or
rcr
sub
and
sbb
sbb
daa
cmp
arpl
sbb
cmp
data16
sub
push
adc
pop
sub
xor
jge
sbb
cmp
vmread
push
ja
jb
ja
sbb
popa
outsl
push
adc
inc
pop
jg
sbb
arpl
dec
outsb
bound
imul
inc
dec
jg
cmpsl
pop
inc
dec
push
mov
cmpsb
ja
push
mov
jge
test
mov
orb
dec
addb
mov
mov
pop
addl
mov
xchg
out
mov
out
cltd
out
mov
in
hlt
cltd
ljmp
in
out
rcll
in
out
in
div
sar
lahf
sti
sahf
loopne
cld
ffree
sub
xor
sub
jecxz
xchg
in
lea
lea
popf
scas
std
dec
or
nop
mov
sbb
jl
sbb
jl
mov
mov
xchg
cmc
lret
iret
out
leave
iret
leave
xchg
out
shl
vaddsubps
leave
sar
pushf
icebp
cwtl
xlat
cli
fcom
out
rcl
leave
and
xor
sub
cmc
test
shrb
aas
fdiv
das
shrb
xlat
ret
or
pop
cmp
and
adc
iret
into
fldcw
cs
popa
fmull
pop
fdivl
fidivs
sub
punpcklbw
or
pop
push
xor
jp
outsl
sbb
cmp
adc
add
push
popa
bound
jge
dec
jl
jle
insl
push
jne
dec
push
ja
jl
sbb
arpl
je
pop
js
inc
outsl
scas
dec
cmpsl
mov
cmpsb
mov
jnp
dec
mov
pop
push
mov
test
pop
stos
dec
test
dec
mov
mov
xchg
mov
nop
sahf
mov
out
lods
in
icebp
icebp
lahf
in
in
loope
xchg
mov
mov
loop
in
in
xchg
test
imul
incb
hlt
ret
ret
into
out
sar
fisubl
cwtl
cli
shl
inc
in
push
and
lret
and
and
sub
mov
sti
mov
cmc
cwtl
out
loop
enter
pushf
test
lret
ror
xchg
aam
shl
out
cltd
in
fwait
div
shr
iret
shrl
repnz
ret
leave
std
shll
aaa
shr
daa
sti
fcmovu
fnstenv
and
add
xor
rol
cmp
add
cmp
sub
int3
lds
or
xor
sub
adc
xor
cmp
popa
xor
jbe
jb
fs
push
js
jae
jg
cmp
sbb
pop
or
js
jge
fs
ja
sbb
push
pop
mov
cltd
shrl
fstl
xchg
xchg
sbb
dec
xor
leave
jl
sbb
jl
data16
inc
mov
jl
pop
movsl
dec
stos
pop
inc
scas
push
mov
inc
push
dec
jp
pop
push
mov
push
mov
mov
pop
mov
mov
lea
push
mov
xchg
pushf
mov
mov
repz
xchg
mov
out
shl
hlt
addb
call
shr
xchg
cmc
mov
call
hlt
aad
and
shl
fcmove
leave
jmp
ror
sub
test
repz
out
cwtl
out
xchg
xchg
mov
leave
loope
mov
ror
rol
xchg
xlat
call
std
sar
out
out
shlb
cmc
cwtl
cli
sub
enter
lret
fadd
shr
daa
and
rcl
aad
shlb
sarb
das
fdivr
and
rol
and
ret
das
adc
rcrl
sbb
xor
es
or
adc
cmp
movq
push
add
add
popa
outsl
add
gs
adc
sbb
cmp
add
adc
sbb
insl
or
dec
push
push
jne
outsb
sbb
dec
push
inc
inc
jnp
pop
inc
jne
bound
dec
js
stos
mov
mov
mov
push
mov
lods
mov
mov
addl
pop
pop
mov
test
pop
mov
mov
mov
lea
out
hlt
xchg
in
xchg
test
mov
hlt
lcall
lahf
xchg
in
aam
loop
xlat
call
lock
ror
shl
clc
fcmovnb
mov
sti
ljmp
cwtl
xorb
mov
fimuls
mov
adcb
xchg
jl
cwtl
jl
jl
cmc
cmpl
in
hlt
lret
xchg
lret
std
int
loop
loopne
not
test
int
fwait
cmc
rcr
and
ret
sub
lret
lock
xor
sub
lret
add
aas
rolb
add
add
sub
add
add
leave
xchg
ljmp
push
pusha
add
je
addl
je
orl
popl
xor
out
icebp
jl
add
mov
leave
jo
mov
mov
inc
mov
leave
push
mov
xchg
or
mov
xchg
fcomps
xchg
je
mov
out
xchg
cwtl
mov
je
mov
jl
jl
cmpl
mov
mov
inc
or
add
mov
or
add
mov
lret
jge
jge
xor
jge
jge
jg
jl
add
inc
jl
or
pusha
cmp
scas
add
fs
and
jl
add
loopne
push
fistpll
jl
cmpl
leave
dec
sub
sub
test
leave
push
js
mov
and
test
repz
sub
mov
jl
ret
jl
cmp
sarb
js
mov
inc
js
mov
jl
mov
test
xchg
leave
leave
js
dec
jge
enter
leave
jl
cld
jl
inc
jl
jle
jge
pop
js
sti
leave
leave
js
orl
fs
addl
addl
subl
incl
push
cmp
addl
push
sbbl
clc
cmp
leave
jl
mov
inc
mov
ret
mov
or
js
sti
in
leave
leave
test
mov
fs
and
jl
mov
cmp
push
repz
js
sti
in
leave
leave
test
mov
fs
enter
mov
leave
leave
js
sti
or
js
mov
fs
leave
jl
mov
inc
mov
leave
leave
js
xchg
or
js
repz
leave
lret
test
xchg
lds
mov
leave
js
mov
ret
inc
lock
pop
js
repz
leave
js
hlt
xchg
lret
fs
loop
jl
mov
mov
lods
inc
xchg
mov
leave
pusha
insb
xchg
or
inc
jl
add
push
aaa
or
jge
test
sarb
jl
xchg
repz
mov
lret
adc
scas
xchg
leave
fs
repz
mov
lret
adc
scas
xchg
leave
je
xchg
adc
repz
leave
insb
fs
adc
leave
je
xchg
ud1
repz
lret
js
fwait
jg
jl
leave
jl
insb
inc
mov
scas
out
imul
add
or
jo
inc
out
icebp
jl
insb
leave
inc
imul
cmp
insb
dec
sarb
push
insl
jl
add
je
push
aaa
push
jg
jl
outsl
jne
leave
movsb
je
push
mov
out
push
or
shlb
leave
jl
mov
inc
lods
jl
jl
mov
jl
orl
cmp
mov
sti
leave
xchg
je
mov
sbb
dec
fs
leave
jl
cmpl
jl
out
xchg
push
mov
sti
add
jo
mov
scas
out
leave
jl
insb
mov
push
cld
lods
pop
outsl
addr16
les
push
leave
mov
add
xchg
mov
adc
addl
jl
add
adc
dec
lods
push
ud1
dec
jg
jl
mov
mov
lret
or
icebp
jl
je
out
inc
leave
sbb
add
add
adc
fadds
xor
xor
leave
je
orl
or
test
jo
or
sbb
or
push
mov
orl
or
mov
mov
inc
leave
sbb
repz
je
or
push
jo
add
insb
dec
jge
sarb
dec
cmp
sarb
and
add
jl
lret
mov
test
jle
bnd
dec
fsub
sarl
jl
adcb
cmp
jl
xchg
addl
jl
jge
push
mov
xchg
mov
xchg
push
jge
push
insb
addl
repz
jo
orl
jge
insb
push
popl
jl
jl
leave
jl
sub
lret
mov
js
mov
lods
js
mov
lods
js
repz
push
imul
jb
dec
lock
js
mov
mov
push
cltd
lcall
lret
je
mov
xchg
js
leave
aaa
js
add
repz
mov
repz
add
inc
mov
add
inc
add
add
leave
xchg
vpmacssdqh
xchg
js
leave
xor
sbb
repz
mov
repz
add
inc
mov
add
mov
pop
leave
xchg
vpmacssdqh
xchg
js
leave
xor
dec
lods
inc
inc
inc
repz
mov
repz
loop
mov
pop
rclb
popl
adcl
je
jle
xchg
leave
mov
dec
inc
cmpl
gs
add
ds
jl
leave
xchg
fs
adc
add
int3
jge
or
add
lea
leave
jge
add
jge
jge
addb
jle
add
push
mov
jg
pop
repz
sub
into
mov
sarl
sbb
or
mov
or
sbb
or
jle
leave
push
sarl
cmp
mov
xchg
xchg
jb
shll
adc
lret
inc
mov
jl
xor
inc
cmovo
out
xchg
inc
push
fs
push
jl
ja
mov
mov
test
mov
fs
or
jl
jl
mov
mov
adc
jb
adc
xchg
push
inc
lret
lcall
xchg
inc
enter
jl
jl
xchg
jg
jl
sub
out
jg
mov
sti
sti
test
jmp
invd
leave
mov
or
fdivrs
leave
push
roll
mov
repz
dec
out
add
leave
dec
or
sti
fs
leave
jl
cmp
add
inc
out
push
roll
inc
das
jle
inc
das
pop
imul
push
repz
xchg
xchg
xchg
xchg
xchg
mov
mov
jl
jl
in
imul
jle
jl
test
insb
jle
jl
xchg
repz
inc
sub
mov
leave
test
mov
jl
sub
es
addr16
sub
fs
ja
jl
leave
lock
pop
fs
jg
jl
repz
lock
inc
or
mov
adc
mov
adc
mov
mov
xchg
sbb
inc
das
jl
inc
mov
out
aas
inc
jle
inc
jmp
or
jl
push
repz
fs
sbb
test
inc
clc
lret
inc
test
or
repz
push
fs
aas
or
inc
out
xchg
lcall
jg
jl
dec
jle
jl
sti
inc
out
xchg
dec
jl
jl
jl
mov
leave
mov
jl
add
or
shll
dec
inc
sub
jl
sarl
inc
pusha
mov
out
inc
out
xchg
inc
sti
leave
aas
add
pop
cmp
out
lcall
inc
leave
jl
insl
jg
jl
add
or
sbb
leave
icebp
shrl
movq
push
mov
dec
xor
jle
jl
aas
test
inc
sbb
sbbl
inc
movl
shll
jl
imul
sbb
inc
out
cmpl
sbb
repz
inc
cmpb
movl
sbb
test
leave
jmp
or
jl
and
lock
inc
prefetcht0
imul
jle
sti
add
mov
jne
repz
sub
inc
icebp
repz
jne
sti
xor
insb
movsb
sti
decb
in
jge
cmpsb
fs
test
call
repz
test
xchg
leave
leave
test
sti
sti
test
lcall
lcall
jl
jl
out
jg
jg
aas
xchg
inc
repz
mov
icebp
or
sbb
sbb
sub
repz
lcall
dec
aas
cmp
pop
addl
imul
addl
add
call
test
jns
jl
jg
pop
icebp
mov
mov
loopne
pop
mov
icebp
cwtl
fdivrs
mov
popa
nop
les
leave
xor
aas
dec
dec
push
sub
push
icebp
pop
leave
jl
jl
test
addr16
jl
cmp
call
add
mov
cmpsl
loop
xchg
cmp
cmp
lret
jg
call
test
movl
mov
movl
leave
xchg
inc
mov
and
je
xchg
leave
dec
js
xor
popl
icebp
ds
out
ret
jl
bswap
inc
mov
es
add
leave
xchg
shrl
push
jl
xchg
leave
xchg
pop
addl
jl
loop
rol
mov
xchg
in
add
loop
sarb
cmp
loop
rol
mov
js
loop
sarb
cmp
loop
rol
mov
je
loop
sarb
cmp
loop
rol
mov
jno
loop
sarb
mov
leave
ss
rol
mov
mov
loop
sarb
add
loop
sarb
cmp
loop
enter
jl
sarl
leave
loop
sarb
jl
loop
enter
jl
ss
loop
rol
je
jl
ss
ret
jl
loop
sarb
jl
lret
loop
enter
jl
sarl
loop
enter
jl
ss
loop
rol
js
jl
ss
bnd
loop
sarb
jl
lret
loop
enter
jl
sarl
lret
leave
jb
adc
jl
loop
rol
jl
jl
sarl
lret
loop
enter
jl
sarl
loop
sarb
jl
loop
sarb
jl
leave
loop
enter
jl
xor
inc
loop
rol
inc
mov
loop
rol
mov
nop
repz
ds
loop
enter
jl
loop
sarb
jl
aaa
jl
leave
jl
aas
rol
mov
jae
jl
adc
loop
fdivrs
jl
sbb
fdivrs
jl
add
add
push
fadd
loop
fadd
movsb
mov
loop
fadd
cmpsb
mov
sub
loop
fdivrs
jl
lcall
mov
ss
loop
fdivrs
jl
lcall
mov
fildl
loop
fdivrs
jl
rolb
jl
inc
add
cmpb
jae
lcall
mov
add
loop
fdivrs
jl
lcall
mov
loop
fadd
mov
jl
add
loop
fdivrs
jl
add
sarb
jl
add
loopne
addb
mov
mov
addb
mov
jl
addb
mov
icebp
mov
add
mov
add
scas
cmpsl
addb
mov
icebp
mov
in
sub
addb
mov
lahf
nop
addb
mov
out
addb
mov
jg
jl
add
mov
add
out
leave
jg
enter
jl
cmp
add
ret
jl
sarl
push
daa
aaa
fadd
je
mov
mov
ret
leave
je
nop
mov
xor
out
icebp
jl
or
addb
inc
ret
dec
inc
ljmp
or
pop
mov
jl
or
push
mov
jl
mov
lods
mov
ja
lock
rorl
lds
lret
mov
jl
lret
jl
enter
jl
mov
or
add
addb
xor
popl
leave
add
sarb
jl
lods
jge
jge
inc
mov
mov
mov
jl
lret
hlt
mov
mov
push
mov
or
mov
leave
mov
mov
jl
jg
jl
jge
jge
inc
xchg
add
mov
leave
jl
mov
pop
mov
mov
mov
inc
rorb
jge
clc
rcll
rol
jl
add
dec
fadd
leave
je
and
mov
xchg
push
outsl
jne
shl
lret
mov
sarb
jl
cld
mov
mov
jl
mov
add
icebp
jl
add
cld
jl
jl
jl
ror
mov
jle
jl
jle
mov
ret
jl
out
xchg
loope
out
loop
sarb
out
loop
rol
mov
lahf
out
leave
loop
enter
jl
xchg
loop
enter
jl
leave
jl
add
xor
jl
xchg
jl
out
loop
enter
jl
leave
loop
enter
jl
xchg
loop
enter
jl
xchg
jl
out
loop
enter
jl
xchg
loop
enter
jl
xchg
jl
out
loop
enter
jl
xchg
loop
enter
jl
xchg
jl
loop
enter
jl
out
leave
loop
enter
jl
xchg
enter
jl
out
leave
hlt
loop
enter
jl
xchg
jl
loop
enter
jl
leave
mul
loop
enter
jl
xchg
loop
rol
mov
loop
sarb
out
loop
rol
mov
xchg
call
jl
jl
jecxz
loop
enter
jl
loop
rol
mov
mov
jl
add
loop
enter
jl
leave
loop
enter
jl
lret
loop
enter
jl
sarl
loop
enter
jl
lret
shll
loop
sarb
jl
loop
enter
jl
add
cmp
lret
mov
loop
sarb
jl
shl
rol
mov
jnp
loop
sarb
jl
shl
rol
mov
loop
rol
mov
mov
sarb
jl
xor
loop
rol
mov
mov
jl
loop
sarb
jl
lret
loop
rol
mov
mov
jl
mov
mov
jl
mov
mov
jl
xchg
mov
mov
jl
mov
add
icebp
jl
lret
mov
jl
mov
sarb
jl
inc
jl
rolb
jl
jl
jl
sarb
jl
cld
jl
xchg
jge
inc
cmp
shlb
ret
dec
inc
inc
jl
mov
and
cld
mov
rol
mov
mov
jl
mov
add
icebp
jl
lret
mov
jl
rol
jl
jl
jge
mov
xchg
mov
dec
mov
add
icebp
inc
scas
out
mov
movl
ret
fadd
dec
jnp
jge
or
mov
jg
push
repz
dec
mov
jl
jg
mov
dec
mov
jl
jg
out
jl
loop
add
mov
mov
idivb
loop
add
mov
xorb
lea
loop
add
call
or
loop
add
mov
loop
add
mov
loop
add
mov
loop
add
mov
loop
add
mov
add
mov
loop
add
mov
loop
add
mov
out
loop
rol
mov
mov
pusha
add
test
add
in
xor
popf
addb
cld
pop
fwait
addr16
les
lret
mov
mov
mov
jl
mov
add
icebp
jl
leave
mov
xor
mov
mov
jl
jg
jl
jge
jge
inc
xchg
add
mov
mov
imul
in
in
jl
leave
jl
aas
rol
mov
inc
cmp
leave
loop
sarb
jl
leave
lret
pop
imul
les
shl
rol
mov
gs
loop
sarb
jl
ror
loop
rol
lret
jl
jl
shlb
mov
loop
sarb
jl
leave
mov
fsubl
jns
loop
sarb
cmp
loop
sarb
jl
loop
sarb
jl
loop
sarb
jl
lret
dec
mov
mov
jl
add
mov
mov
jl
lock
rolb
jl
mov
mov
and
jl
add
hlt
jl
jl
jl
rol
mov
push
out
jl
rol
mov
mov
jl
mov
add
icebp
jl
add
mov
jge
mov
mov
jl
lret
shlb
sarb
jl
fs
jl
sarb
jl
lret
hlt
mov
or
mov
lret
mov
jge
mov
mov
add
je
addb
fadds
xor
add
je
addb
fldl
leave
movl
leave
dec
mov
mov
mov
test
pop
ret
dec
repz
mov
jb
jge
or
mov
mov
dec
mov
pop
leave
mov
push
leave
dec
mov
mov
inc
add
add
push
mov
xchg
test
leave
jl
cld
jl
leave
jl
inc
inc
addl
jl
leave
jl
dec
dec
pop
jmp
jl
sarl
dec
mov
pop
mov
mov
and
add
je
enter
jl
jge
enter
jl
jge
cmp
rol
mov
mov
jl
shlb
mov
jl
mov
add
jl
mov
push
mov
mov
jl
enter
lret
jl
enter
jl
add
inc
jl
jl
jl
enter
jl
jge
jge
inc
mov
xorb
inc
shr
jl
add
cld
mov
out
jge
leave
jge
or
mov
jg
jl
xorb
mov
jl
leave
pop
mov
jl
jl
add
or
jl
lret
jl
sarb
jl
mov
add
je
jl
mov
push
mov
mov
jl
inc
jl
lods
jge
jge
inc
mov
inc
mov
jl
push
mov
test
clc
leave
mov
jg
test
mov
jl
leave
mov
add
or
mov
sarb
jl
lret
cmp
jl
mov
push
mov
leave
mov
mov
mov
mov
jl
inc
jl
jl
jl
lods
inc
xchg
cmp
movsb
lock
dec
mov
bnd
pop
mov
mov
push
cmpb
dec
les
mov
nop
leave
push
mov
leave
movsb
hlt
leave
jl
jl
jbe
push
inc
nop
test
xchg
mov
addb
jl
addr16
sarl
seto
pop
mov
movl
pop
mov
nop
dec
mov
xor
jl
jl
push
jl
jl
nop
leave
mov
jl
data16
decl
ds
mov
call
xor
ret
repz
cmpsb
mov
nop
push
mov
dec
jl
push
lock
leave
dec
mov
nop
leave
mov
inc
mov
clc
rcll
pop
mov
pop
mov
nop
leave
test
int3
mov
push
icebp
mov
mov
mov
mov
lods
dec
push
nop
ret
jge
leave
jge
mov
cmp
jl
inc
jl
enter
jl
leave
jl
mov
jl
leave
jl
xorb
mov
jl
lret
cwtl
mov
jl
lret
jl
sarb
jl
mov
add
mov
jl
leave
push
mov
jge
inc
xchg
or
mov
jl
addb
mov
dec
mov
leave
inc
mov
cld
jl
leave
jl
jl
repz
lock
mov
jge
leave
adc
mov
or
mov
or
inc
mov
leave
scas
leave
or
inc
out
lods
leave
pop
leave
scas
leave
mov
repnz
mov
mov
dec
icebp
scas
leave
inc
leave
dec
leave
or
lcall
ds
jl
leave
push
leave
mov
mov
dec
jg
jl
push
ret
rorb
jl
jb
rorb
jl
ret
les
ret
rorb
jl
cmp
jl
jl
dec
dec
adc
jl
mov
mov
rorb
jl
scas
leave
jecxz
jl
push
leave
dec
test
dec
mov
xor
sub
jl
lret
jl
test
xchg
mov
jge
xchg
std
scas
ret
std
lock
leave
jecxz
jl
adc
dec
divb
inc
out
xchg
push
push
lock
leave
jecxz
jl
or
dec
divl
inc
test
push
js
sti
leave
leave
js
mov
pusha
fwait
pop
jg
inc
divl
jge
je
add
js
inc
sti
mov
je
sbb
xor
leave
dec
push
jo
aas
jns
mov
mov
jo
fsubr
mov
dec
mov
jge
insb
cmpl
inc
inc
adc
dec
insb
lahf
jge
popf
jge
cltd
mov
mov
lcall
roll
mov
xchg
sbb
sarb
dec
addl
cli
lock
mov
hlt
mov
mov
leave
inc
hlt
inc
addl
leave
leave
push
push
hlt
mov
inc
inc
xchg
repz
mov
inc
js
jge
sti
mov
js
or
push
dec
inc
mov
imul
das
pop
mov
jb
movsl
lock
leave
inc
inc
jp
sti
je
dec
repnz
leave
leave
dec
clc
std
je
sti
mov
je
jp
inc
je
jge
dec
lock
jo
mov
out
lds
mov
popf
pop
cltd
inc
ds
jl
leave
push
daa
je
xchg
movl
leave
leave
js
mov
mov
mov
xchg
dec
fwait
cmp
addl
inc
js
cltd
leave
xchg
inc
icebp
cmp
mov
inc
add
or
rorb
jl
fwait
leave
leave
js
mov
mov
inc
pop
mov
jl
fwait
leave
leave
js
jl
mov
inc
sbb
sarb
inc
mov
push
inc
sbb
sbb
mov
dec
insb
xchg
fwait
leave
jmp
mov
inc
pop
mov
inc
leave
push
insb
xchg
fwait
leave
jmp
mov
inc
cwtl
mov
inc
rorb
jl
or
js
fwait
or
insb
push
cmp
inc
test
inc
dec
inc
mov
mov
leave
pusha
js
xchg
leave
mov
inc
or
mov
inc
sbb
lock
inc
sbb
inc
or
or
inc
jg
out
icebp
jl
add
dec
adc
ret
xor
leave
jge
dec
repz
dec
js
or
mov
dec
dec
xor
leave
dec
test
addl
add
mov
leave
mov
inc
add
repz
je
mov
mov
mov
lret
icebp
inc
scas
out
leave
jl
cmpl
sub
or
js
add
repz
adc
add
lds
add
repz
push
je
mov
mov
lret
add
out
icebp
jl
add
fs
jl
addl
jg
subl
mov
inc
sbb
jl
jl
or
js
add
add
mov
inc
add
add
leave
js
orl
or
lock
leave
aam
addl
add
dec
js
mov
mov
inc
add
mov
mov
inc
add
add
push
lock
leave
push
dec
test
xor
mov
inc
leave
push
dec
addl
xchg
roll
jge
inc
dec
addl
add
or
je
dec
mov
mov
lret
icebp
jg
out
jl
orl
mov
inc
add
aas
sub
xlat
inc
or
je
add
out
icebp
jl
or
js
mov
mov
inc
inc
mov
xlat
scas
ret
jge
leave
jge
xchg
mov
leave
adc
out
out
jl
adc
leave
jge
mov
mov
inc
aas
mov
leave
inc
je
inc
imul
lcall
leave
push
ret
pop
dec
cmp
sarb
hlt
leave
inc
mov
jl
ret
jl
push
or
jl
inc
jl
or
test
sarb
inc
xchg
jl
jl
add
je
mov
ret
push
jl
xchg
jl
xor
inc
xchg
inc
xchg
lret
pcmpeqb
imul
dec
insb
dec
xor
jl
mov
leave
jo
fwait
inc
leave
addr16
out
icebp
jl
pop
inc
xor
addr16
fwait
leave
fs
fwait
mov
leave
jo
mov
enter
scas
out
jl
mov
fwait
add
aas
out
icebp
jl
pop
mov
leave
je
fwait
add
aas
out
icebp
jl
pop
mov
leave
fs
fwait
push
jg
sarl
mov
repz
jg
js
repz
mov
jl
jl
dec
leave
cmovo
dec
pop
jecxz
jge
lcall
popf
inc
ds
jl
leave
push
add
je
addl
je
adcl
mov
cmp
out
icebp
jl
add
leave
sbb
addl
add
leave
adc
orl
push
push
jo
mov
mov
aas
jo
cmp
jo
ret
leave
je
orl
insb
addl
leave
je
orl
inc
mov
addl
fisttpll
mov
mov
jl
xchg
mov
dec
mov
jl
mov
push
xchg
rorb
jl
mov
dec
mov
jl
testl
leave
jl
cmpl
push
orl
inc
add
daa
je
or
or
add
add
or
js
test
leave
inc
mov
jl
add
dec
je
sarb
xchg
ljmp
out
loop
add
ds
loop
sub
loop
add
add
cmp
mov
loop
addl
sbb
out
loopne
subb
ljmp
sub
lock
cmpb
out
loopne
jecxz
add
inc
mov
xchg
mov
sbb
jge
leave
or
cmpl
lock
dec
leave
inc
jl
addl
push
mov
dec
mov
leave
push
mov
dec
je
leave
leave
inc
movsb
mov
mov
leave
pop
je
or
js
push
jle
cmpl
repz
lret
test
leave
mov
adc
mov
repz
dec
pop
mov
test
dec
mov
inc
leave
jl
orl
push
mov
jge
nop
inc
repz
jl
mov
leave
dec
mov
dec
push
test
leave
pusha
js
xor
mov
inc
add
push
dec
mov
jl
leave
jl
mov
mov
inc
mov
leave
adc
mov
mov
test
dec
adc
lds
jl
xchg
ds
pusha
xchg
inc
imul
jge
cmpl
ret
inc
lock
mov
mov
andl
jl
xchg
leave
leave
js
addl
adc
push
push
test
inc
dec
inc
mov
mov
leave
jl
orl
cmp
mov
lret
or
out
icebp
jl
xchg
leave
push
pusha
addl
mov
test
adcl
mov
mov
sarl
leave
or
leave
inc
dec
mov
mov
test
leave
mov
mov
inc
leave
mov
jge
nop
mov
pop
dec
cmp
sarb
push
orl
mov
jge
ret
rorb
jl
repz
push
jge
dec
repz
fs
ret
jge
cmp
sarb
push
adcl
jne
jge
cmp
rorb
jl
repz
dec
jns
jge
cmp
stc
lock
leave
xchg
leave
mov
push
test
repz
sbb
mov
jge
nop
mov
pop
dec
xchg
test
leave
mov
lock
mov
mov
repz
je
repz
dec
mov
jl
add
jl
inc
inc
push
mov
or
test
imul
inc
movsb
jge
leave
or
mov
cmpl
add
sarl
jl
inc
dec
jecxz
jl
cmpl
mov
lcall
dec
push
mov
xchg
lret
jge
add
lock
leave
pop
dec
test
mov
inc
fwait
dec
out
xchg
leave
inc
inc
inc
pop
mov
inc
fwait
inc
out
cmp
test
mov
popf
ds
jl
leave
xchg
shrl
addl
je
add
je
addl
je
xchg
jl
loop
cmpl
pop
add
js
mov
je
cmp
loop
add
je
addl
add
fs
xorl
inc
mov
leave
xchg
push
out
inc
jl
ds
mov
jl
or
insb
fs
mov
inc
insb
mov
jl
or
insb
inc
aas
ds
or
insb
inc
aas
sbb
xor
xor
loop
insb
mov
cmp
jl
mov
xor
mov
jl
inc
inc
loop
je
jp
leave
jo
repz
leave
loop
mov
loop
repz
leave
inc
sbb
sti
leave
loop
mov
loop
repz
cmp
icebp
jl
inc
addr16
leave
jl
sti
leave
loop
fwait
jne
inc
mov
mov
sarb
insb
sti
fwait
leave
mov
inc
ja
jbe
sbb
fwait
leave
dec
inc
lret
sarb
sbb
lret
jl
leave
loop
sti
js
jl
loop
jns
leave
loop
fwait
inc
loop
je
mov
je
js
jl
loop
jns
leave
loop
fwait
inc
loop
je
mov
inc
sti
xor
inc
loop
sti
leave
loop
sti
js
jl
loop
jns
leave
loop
fwait
inc
loop
je
mov
je
js
jl
loop
jns
leave
loop
fwait
inc
loop
je
mov
dec
sti
xor
inc
loop
sti
leave
loop
sti
leave
loop
fwait
mov
ret
jl
leave
jl
sti
fwait
leave
mov
lret
ja
cmp
icebp
jl
sti
leave
push
mov
lret
ja
cmp
icebp
jl
sti
leave
fs
fwait
leave
loop
mov
leave
inc
sbb
fwait
leave
loop
mov
leave
dec
insb
sti
leave
loop
fwait
jne
inc
mov
mov
ret
jge
leave
jge
rep
mov
leave
inc
insb
dec
outsb
outsl
sub
leave
dec
insb
xchg
cmpxchg
enter
scas
mov
leave
pusha
sbb
repz
loop
mov
leave
xchg
loop
outsl
test
loop
outsb
mov
aaa
jl
loop
outsl
mov
leave
sbb
loop
mov
loop
insb
outsb
mov
loop
outsl
mov
imul
imul
lcall
xchg
inc
cmp
jl
loop
or
loop
or
add
and
fsubs
ss
loop
or
xor
lret
jge
mov
inc
mov
jl
mov
inc
js
xchg
lret
mov
leave
adc
leave
hlt
loopne
cmp
jl
test
js
jl
loop
or
loop
or
add
mov
and
fadds
or
loopne
lcall
push
and
fadd
cmp
je
cltd
fs
leave
jge
je
inc
mov
mov
lahf
ss
mov
inc
leave
loop
jl
cmp
loop
add
js
jl
loop
add
loop
add
inc
js
out
lret
mov
leave
outsl
mov
lret
setne
pusha
bound
movb
cld
fwait
pop
jno
cld
repz
leave
add
mov
fmuls
aas
mov
mov
loop
enter
loopne
leave
lcall
push
ret
and
fsubs
cmp
ret
fs
push
jge
leave
loop
inc
mov
jl
test
js
jl
loop
push
mov
lock
xchg
xchg
dec
xchg
pop
xor
cmp
lret
cmp
jl
mov
lret
js
out
jne
adc
adc
enter
loopne
cmp
jl
test
loop
or
loop
or
and
fadd
popf
je
cltd
mov
mov
mov
lcall
inc
xorl
add
jl
xchg
jl
mov
cmp
js
mov
test
add
inc
leave
inc
inc
add
roll
xor
leave
add
jge
mov
xor
mov
jl
mov
loop
jle
or
js
pop
jl
leave
xchg
shrl
addl
je
add
je
or
push
icebp
inc
scas
out
jl
addl
add
xor
add
leave
je
andl
je
ror
jg
out
leave
jl
mov
inc
mov
out
icebp
jl
xchg
leave
dec
dec
cvtps2pi
mov
jl
or
dec
je
aas
test
mov
inc
icebp
aas
scas
out
mov
lods
inc
addl
mov
je
dec
leave
dec
inc
xchg
mov
inc
je
ror
jg
out
jl
sbb
jl
leave
jl
orl
jo
outsl
incl
aas
out
icebp
jl
aas
mov
inc
inc
je
mov
inc
dec
je
inc
leave
inc
movl
leave
lret
je
shr
jl
add
je
cltd
dec
orl
js
outsl
incl
aas
out
icebp
jl
aas
mov
inc
inc
je
mov
inc
dec
je
leave
loop
inc
inc
movl
leave
lret
je
shr
jl
add
je
push
inc
addl
mov
je
inc
leave
inc
je
mov
jge
pop
jge
ds
jl
leave
popl
ret
add
es
cmp
lock
mov
inc
out
icebp
jl
xorl
test
andl
out
icebp
jl
mov
test
mov
mov
scas
out
leave
jl
mov
jg
cmp
jl
leave
push
jl
xchg
add
daa
je
addl
je
jb
inc
addr16
sarb
ret
jae
lret
lret
jnp
jge
mov
xchg
je
leave
pusha
insb
mov
xchg
inc
mov
icebp
cmp
or
jge
sarl
add
imul
rol
jo
or
jo
mov
jge
xor
leave
push
jge
sarl
repz
inc
je
xchg
leave
jge
addl
add
repz
je
mov
mov
inc
or
push
js
jl
add
js
addl
and
cmp
cltd
popf
pop
lcall
imul
rorl
sti
sarl
dec
xchg
sub
jl
cmp
sarb
mov
add
orl
xchg
pop
xor
js
jl
mov
pushl
mov
jl
pop
popf
cli
mov
icebp
cs
add
xor
leave
lret
dec
leave
dec
mov
jle
mov
xor
cmp
repz
xor
mov
inc
fwait
xor
dec
pop
mov
loop
jns
mov
loop
or
out
popf
js
leave
loop
mov
out
inc
imul
inc
push
xor
push
lock
cmc
jge
cmp
lcall
jl
mov
incl
cmpl
loop
mov
push
imul
push
pop
test
addr16
scas
jl
test
repz
inc
jnp
jge
test
mov
xchg
leave
lret
pop
in
test
lds
jl
add
jl
jl
add
cmp
lds
jl
add
jl
jl
add
add
jl
jl
add
jg
jl
add
or
jl
add
jg
jl
add
adc
lds
jl
andl
jl
jl
lea
add
jge
cmpl
dec
jl
jl
test
xchg
mov
inc
hlt
leave
insb
mov
pop
pop
xchg
lcall
sti
cli
leave
inc
push
inc
add
or
mov
sti
jns
inc
cmc
fwait
mov
sbb
mov
je
ljmp
dec
sbb
xor
fwait
icebp
cli
mov
pop
xchg
leave
leave
inc
aaa
mov
sub
adc
je
xchg
test
jl
jl
xchg
leave
sbb
mov
repz
pop
sbb
je
jge
leave
jge
mov
inc
lock
js
mov
addl
repz
movl
popf
cltd
ds
jl
bnd
test
and
jge
leave
dec
leave
jg
addb
inc
mov
dec
leave
aas
add
int
jg
jl
imul
jl
loop
jg
aas
rol
jle
xor
cmp
repz
mov
jl
cltd
lret
adc
imul
mov
mov
leave
jl
ret
add
ljmp
push
inc
out
lcall
aas
jb
jg
inc
jmp
outsl
xor
imul
repz
jge
mov
jg
jl
pop
jge
dec
popf
inc
xor
pop
jl
jl
fs
mov
lret
sarb
jge
mov
pop
lcall
xchg
call
je
fwait
addl
je
addl
mov
mov
leave
leave
inc
inc
inc
mov
mov
cmp
aaa
add
aas
inc
add
insb
jo
add
leave
push
je
mov
fs
sbb
leave
leave
mov
xchg
ret
test
je
push
mov
xchg
leave
leave
je
mov
mov
cmpl
inc
nop
mov
jo
add
leave
push
jo
add
leave
push
jo
xchg
leave
mov
inc
add
js
xchg
leave
mov
sarl
aaa
inc
out
icebp
jl
or
adc
add
or
js
addl
repz
leave
dec
je
jno
jge
jge
addl
mov
fs
leave
jge
cmpl
lock
out
jge
jo
andl
jge
or
insb
push
push
add
push
leave
jo
mov
push
out
or
jo
mov
inc
mov
addr16
inc
mov
xchg
lcall
mov
jge
add
xor
cmp
lock
add
xor
cmp
loop
cmpl
lock
xor
mov
scas
mov
inc
xor
add
cmpl
mov
add
xor
mov
scas
mov
inc
xor
aas
mov
repz
xor
mov
inc
xor
add
cmpl
mov
xor
mov
inc
xor
add
cmpl
dec
repz
lret
xor
jge
mov
mov
inc
push
cmpl
addl
jl
cmpl
dec
jg
jl
sbbl
adc
addl
je
fwait
or
xor
addl
je
addl
cmp
jge
or
push
leave
add
pusha
mov
addr16
leave
jl
orl
lret
or
jl
or
jo
push
leave
outsl
push
push
mov
test
or
mov
addl
jl
pop
ret
inc
repz
mov
test
imul
cmpsb
mov
cld
or
outsl
jle,pt
cld
push
icebp
leave
add
mov
jg
mov
icebp
jl
add
or
repz
leave
push
adc
test
addr16
or
push
leave
add
jo
mov
leave
jo
addl
ret
dec
jge
jge
addl
jl
cmpl
lock
xor
cmp
jmp
cmpl
lock
xor
xor
aas
xor
mov
repz
mov
orl
xor
mov
repz
mov
orl
xor
mov
repz
mov
scas
xor
aas
xor
mov
repz
lret
dec
xor
leave
jge
mov
mov
jl
jl
leave
jl
cmpl
repz
jle
jl
addl
jl
inc
lret
lret
jge
pop
out
jge
insb
rolb
jge
or
fs
cmp
sarb
or
add
iret
je
addl
je
fwait
or
rclb
ret
es
addl
jl
addl
leave
je
addl
mov
sbb
sarl
leave
leave
push
push
mov
lret
bound
leave
jl
orl
outsl
jne
leave
leave
push
or
mov
inc
jo
orl
repz
mov
test
imul
cmpsb
lret
leave
movups
cld
ds
aas
add
mov
inc
jo
mov
mov
leave
jo
xchg
icebp
xor
out
test
or
push
push
mov
test
add
or
jge
leave
jge
addl
mov
jo
mov
add
jge
cmpl
pop
push
xor
jge
push
repz
sub
mov
jge
or
fs
cmp
sarb
sub
jecxz
jl
add
pusha
sub
or
addl
je
fwait
addl
je
addl
leave
je
addl
mov
pusha
jl
jl
or
push
push
mov
lret
bound
leave
jl
orl
outsl
jne
leave
leave
push
or
mov
inc
jo
orl
repz
mov
test
imul
cmpsb
lret
leave
mov
jle
cld
ds
aas
add
mov
inc
jo
mov
mov
leave
jo
xchg
icebp
xor
out
test
or
push
push
mov
test
add
or
jge
leave
jge
addl
mov
jo
mov
add
jge
orl
sub
addl
js
or
js
mov
mov
jge
or
inc
cltd
lcall
shrl
addl
je
add
je
xchg
leave
aaa
je
mov
icebp
xor
out
inc
jl
or
xchg
repz
leave
js
xchg
cmpxchg
or
js
mov
js
mov
inc
js
mov
jl
mov
test
in
lods
jl
jl
jge
mov
push
jge
rorl
jecxz
jl
addl
xchg
dec
or
jo
xchg
js
push
fs
jge
addl
leave
inc
jo
inc
movl
push
xchg
jl
mov
add
add
rol
addl
les
leave
enter
int
iret
lret
or
into
rcl
roll
rolb
pop
push
popa
addl
bound
imul
push
insb
outsl
outsb
jno
add
add
sub
sub
xor
xor
daa
cmp
xor
mov
cmp
aas
jl
jl
mov
jge
mov
dec
les
dec
sarb
jge
mov
pop
mov
mov
inc
daa
ret
xchg
jl
mov
inc
imul
mov
jge
mov
repz
imul
push
sarb
jge
xchg
mov
push
mov
mov
imul
xor
push
cld
push
mov
mov
imul
xor
inc
sbb
inc
mov
inc
aas
add
repz
dec
sti
or
data16
les
mov
icebp
or
data16
les
mov
icebp
adc
push
mov
jge
popf
jge
lcall
jg
mov
mov
jg
aas
mov
.byte
inc
add
