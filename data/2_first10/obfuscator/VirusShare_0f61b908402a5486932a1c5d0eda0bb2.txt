leave
in
jns
les
sub
pop
push
out
dec
xchg
std
cmp
popa
es
jbe
sar
out
xlat
sbb
pop
aaa
dec
stos
nop
mov
sti
jns
jl
cmp
sub
push
push
mov
pop
push
je
js
cwtl
icebp
mov
mov
adc
xchg
and
enter
scas
int3
cli
sub
sbb
mov
nop
inc
cltd
in
push
xlat
cmc
mov
popa
cld
hlt
fidivl
inc
pushf
repz
mov
adc
ja
add
ficoms
sbbl
mov
mov
push
or
inc
mov
std
dec
adc
inc
push
sahf
sbb
movsl
jge
icebp
jle
add
and
cmp
call
repnz
push
push
xchg
movsb
imul
in
ds
lahf
lds
sub
sub
jo
in
int3
mov
lods
lock
cmpsl
add
add
int3
mov
jae
inc
gs
loope
jp
ds
repnz
les
xchg
mov
cmp
add
popl
xchg
fstps
and
repnz
xchg
pop
dec
dec
or
dec
pop
dec
add
icebp
popf
call
add
andb
jae
mov
dec
pushf
repnz
push
fildl
sbb
out
dec
mov
xchg
test
and
shl
lods
loope
aas
or
rclb
sbb
subb
imul
adc
jo
ss
divb
jp
imul
popf
jae
pop
and
xor
pop
xchg
mov
xor
ret
hlt
into
lods
orl
loopne
fdivs
mov
add
lock
ss
fsubrp
std
sub
imul
sub
or
call
adc
push
imul
mov
fwait
imul
addr16
enter
cld
pop
das
pop
cmp
dec
lcall
fcmove
sarl
ja
mov
cmp
push
mov
arpl
pop
inc
add
cmc
in
lds
xchg
pop
sub
dec
push
es
xchg
sub
push
popf
jae
push
mov
pop
mov
test
inc
shlb
xchg
sbb
gs
mov
jbe
push
inc
in
dec
jo
mov
je
or
push
jge
mov
push
mov
xor
jg
add
mov
les
xchg
out
rcrl
das
push
nopl
movl
push
mov
jp
jbe
jge
in
aaa
into
add
out
jp
pop
inc
cwtl
sub
or
cmc
pop
add
enter
test
in
sar
lahf
jne
cltd
scas
imul
pop
or
lea
adcb
lock
rorb
sub
jns
in
jne
pop
lods
hlt
add
xor
mov
push
insb
orb
adc
ljmp
and
and
inc
aad
pop
dec
frstor
test
cmpsl
xor
mov
jl
dec
mov
sbb
sbb
cmp
adc
push
bound
xor
jo
pop
sbb
and
jp
add
lds
xchg
lcall
ljmp
pusha
test
dec
sbb
ret
pop
cmp
mov
xchg
movsb
sbb
cmpsl
ds
movsb
cmp
jnp
sbbl
push
xor
jmp
pop
sbb
iret
xchg
aas
sahf
lcall
icebp
add
jecxz
lahf
xor
sbb
insl
push
enter
push
xor
adc
and
jns
iret
lret
subl
mov
lods
sbb
inc
outsb
sbb
sub
or
lods
fsubrl
dec
dec
jo
rcl
cmp
xor
dec
pop
repz
adc
ss
pop
sbb
loope
pop
loope
cmp
popa
dec
push
out
repz
or
sbb
xchg
imul
mov
add
rcrb
pop
mov
jge
or
or
lahf
mov
xchg
sub
dec
test
popf
mov
ror
fmuls
test
cli
xchg
jne
lret
inc
mov
rcr
sbb
xor
cmp
outsl
repnz
scas
mov
and
std
jl
push
addl
in
fwait
add
shll
inc
in
cld
fistpl
cmc
sbb
adc
jl
int3
imull
mov
rcll
or
dec
adc
test
daa
std
jno
mov
ljmp
mov
push
scas
jl
adc
mov
pop
cmp
hlt
fs
nop
scas
inc
add
ret
and
add
nop
aam
sbb
fidivrl
lret
ficoml
ret
sub
push
and
and
stos
ret
mov
adc
mulb
jns
jg
sbb
inc
fbstp
lock
xor
fucomp
repz
ss
cmp
dec
xor
arpl
shr
inc
int3
pop
aad
pop
sti
cmpsb
or
je
pop
pop
push
stos
insb
out
or
sbb
sub
shl
fstpt
lods
movsl
mov
mov
mov
mov
repnz
add
insl
pop
add
push
stos
loopne
mov
mov
ss
out
mov
into
sbb
orl
jmp
pop
scas
mov
dec
es
punpckhwd
aam
in
sbb
mov
sbb
enter
sbb
movsl
xlat
cltd
inc
nop
pop
ret
aad
jb
mov
faddl
add
mov
cmp
mov
in
mov
int
add
bound
sub
adc
ss
loop
iret
test
jge
inc
xor
adc
jmp
loop
pop
lea
cld
inc
xchg
adc
fs
les
gs
jp
dec
fnsave
cmp
jno
mov
lock
mov
dec
mov
sub
add
int
lcall
fistl
jecxz
enter
aad
or
in
out
mov
inc
ja
pop
sbb
repz
rcrl
adc
bound
lahf
cmp
int3
je
aad
out
xchg
jle
mov
cld
dec
gs
je
mov
xchg
inc
rcl
movsb
ds
popa
lahf
inc
mov
out
pop
sahf
lcall
push
int3
adc
and
fidivl
icebp
push
nop
addr16
and
sub
popa
add
loope
ret
sub
pop
repz
pop
mov
loopne
xchg
sbb
lret
call
and
addl
adc
and
fwait
inc
add
ja
xchg
scas
or
jne
ss
inc
les
sbb
cmp
mov
or
or
adc
or
pop
cmpsl
mov
add
mov
in
mov
push
mov
aad
pop
dec
add
cmc
std
mov
sbb
xor
sub
pop
mov
sub
jle
add
dec
clc
add
fwait
lock
sbb
dec
add
gs
pop
jecxz
in
xchg
mov
mov
popa
in
into
add
push
or
lret
nop
cmp
fidivrl
cmovl
or
rorl
mov
in
sti
stc
mov
sbb
cltd
jbe
or
insb
icebp
jnp
adc
lcall
loop
xchg
sbb
bound
dec
aaa
cmp
mov
and
inc
shrl
cmc
jle
sbb
rorl
and
push
adc
jno
lahf
jmp
out
jge
mov
out
push
xchg
fwait
push
fdivrl
jnp
pop
jns
cld
jecxz
ret
mov
movsl
lds
mov
or
stos
xor
cltd
out
mov
xor
dec
mov
mov
mov
sahf
jge
or
mov
in
lahf
aas
cmp
subl
inc
inc
pusha
dec
mov
inc
test
xor
sbb
insb
aad
sbb
fisubs
inc
cpuid
xor
dec
mov
cwtl
add
xchg
and
push
mov
and
sbbb
jmp
repnz
pop
or
inc
dec
mov
loope
and
and
ret
loopne
jmp
push
push
iret
mov
mov
fiadds
insb
add
or
adc
js
stos
add
mov
pop
dec
sub
adc
and
aaa
arpl
shlb
cmpsb
pslld
outsb
xor
mov
add
rol
popa
js
orl
out
dec
or
adc
rorb
mov
pop
aas
ret
popa
mov
sbb
push
aaa
icebp
push
jnp
cltd
cmp
in
jg
xchg
fadd
xor
xchg
sahf
lea
bound
mov
dec
fdiv
lret
pop
push
movsl
fdivp
imul
mov
loope
add
inc
push
js
pop
arpl
lds
mov
mov
sub
cmpsl
jns
mov
mov
enter
iret
in
and
scas
hlt
div
roll
push
ret
jae
sub
dec
ja
arpl
jle
pop
jmp
loop
imul
data16
push
add
push
xchg
sbb
aad
jae
into
push
push
call
xor
sar
jl
pushf
or
ljmp
cmp
dec
push
push
sub
in
icebp
arpl
clc
mov
dec
fdivl
or
pop
xchg
stos
mov
je
mov
std
ret
inc
push
and
cmp
push
stos
mov
push
in
mov
gs
mov
xchg
mov
mov
sbb
movzbl
inc
inc
inc
mov
add
sub
xor
lea
dec
cmp
jb
dec
xor
dec
sub
mov
xor
lea
mov
mov
inc
inc
dec
dec
add
and
lea
mov
mov
dec
dec
cmp
jb
dec
mov
sub
or
xor
lea
xor
add
dec
pop
dec
inc
test
jbe
add
lea
imul
dec
dec
dec
sub
xor
lea
movzbl
inc
add
add
inc
and
lea
imul
inc
sub
add
sub
dec
sub
lea
and
mov
dec
mov
inc
add
movzbl
add
or
add
lea
movsbl
and
add
inc
mov
dec
inc
mov
or
lea
mov
dec
mov
sub
inc
inc
add
lea
mov
dec
jne
inc
mov
inc
inc
dec
add
lea
imul
dec
add
inc
dec
mov
or
lea
mov
inc
inc
sub
dec
or
mov
lea
movzwl
test
jbe
sub
inc
sub
sub
and
lea
movzwl
inc
dec
inc
sub
xor
lea
mov
dec
inc
inc
inc
sub
or
lea
mov
and
dec
dec
mov
dec
add
movzbl
and
lea
add
mov
dec
and
dec
add
mov
dec
or
movzbl
lea
mov
mov
dec
dec
mov
sub
jmp
add
inc
add
or
add
add
adc
add
lock
add
push
dec
add
dec
add
add
add
add
lret
inc
inc
mov
inc
call
call
add
xor
lea
mov
sub
inc
inc
dec
and
lea
mov
sub
add
dec
dec
sub
lea
movzwl
dec
add
inc
dec
call
or
lea
mov
inc
inc
dec
dec
and
lea
mov
dec
dec
sub
dec
sub
lea
imul
dec
dec
dec
call
dec
push
or
lea
imul
dec
dec
sub
dec
xor
lea
mov
dec
sub
add
inc
and
lea
mov
inc
dec
call
dec
add
and
lea
imul
inc
inc
inc
add
pop
or
lea
mov
add
dec
pop
inc
dec
pop
inc
or
lea
mov
pop
dec
inc
dec
dec
and
lea
movswl
sub
pop
add
inc
pop
inc
or
mov
lea
mov
call
dec
dec
inc
add
ret
sub
lea
push
movzbl
inc
push
add
dec
push
add
or
push
lea
mov
push
inc
inc
mov
sub
dec
push
xor
ret
push
lea
movzwl
add
dec
add
dec
or
lea
jmp
mov
push
dec
call
pop
ret
push
sub
sub
push
sub
inc
add
lea
mov
inc
dec
sub
push
add
or
push
lea
movzwl
dec
call
add
push
inc
inc
pop
xor
lea
mov
mov
dec
xor
inc
inc
mov
dec
add
pushl
lea
movzbl
cmpb
je
dec
dec
dec
inc
sub
lea
movzwl
inc
inc
inc
dec
and
lea
movswl
sub
sub
dec
inc
add
lea
mov
dec
inc
dec
add
or
lea
mov
add
inc
sub
dec
xor
lea
mov
inc
inc
dec
dec
ret
or
lea
pop
movsbl
sub
pop
inc
ret
push
add
inc
xor
lea
mov
push
dec
inc
push
add
push
add
push
and
lea
imul
inc
sub
dec
sub
and
lea
call
imul
push
inc
add
inc
mov
add
mov
and
lea
mov
imul
inc
test
je
inc
mov
dec
jmp
dec
or
lea
imul
add
inc
inc
repnz
sub
xor
lea
mov
add
inc
inc
dec
and
lea
add
movzbl
jmp
dec
add
add
inc
add
lea
mov
dec
dec
inc
dec
or
lea
mov
sub
inc
pop
pop
ret
push
inc
add
xor
lea
imul
inc
add
inc
inc
push
sub
call
pop
ret
sub
lea
mov
mov
dec
mov
sub
add
mov
inc
or
mov
lea
imul
xor
inc
dec
mov
dec
dec
inc
or
lea
mov
dec
dec
dec
cmp
jb
dec
push
and
lea
push
imul
add
push
inc
dec
mov
dec
and
xor
lea
mov
xor
inc
inc
xor
dec
dec
push
and
lea
xor
mov
sub
mov
dec
inc
mov
sub
or
movzbl
lea
dec
dec
add
inc
inc
add
and
lea
movzbl
mov
dec
inc
sub
inc
or
lea
jmp
add
movzbl
add
lea
add
mov
add
and
dec
inc
movzbl
dec
sub
xor
lea
mov
inc
dec
inc
dec
add
and
lea
imul
sub
sub
dec
dec
jne
inc
mov
add
lea
pop
imul
sub
pop
add
dec
pop
inc
sub
lea
mov
inc
dec
add
inc
and
lea
mov
add
ret
push
sub
sub
inc
inc
and
lea
mov
inc
push
push
push
push
inc
inc
dec
push
xor
lea
mov
inc
dec
inc
add
or
lea
mov
mov
push
inc
add
xor
add
inc
push
xor
lea
push
mov
dec
pushl
inc
call
inc
add
add
sub
lea
mov
add
add
dec
pop
ret
movsl
jge
xchg
push
inc
fdivrs
scas
repz
aaa
add
ret
cmpsl
aad
fsubrs
lock
and
fistpl
jmp
inc
mov
sbb
cmpsb
and
push
dec
test
push
out
xchg
test
inc
dec
ret
xchg
sbb
addr16
push
mov
jns
sbb
stc
cmp
add
ficomps
outsl
xchg
push
and
inc
add
aad
loope
or
bound
les
push
push
test
mov
call
sbb
nop
mov
cli
nop
shll
xorl
test
es
fisubs
incl
mov
imull
adc
xor
pop
inc
aam
jmp
ja
out
pop
pop
inc
cmp
test
jae
xchg
je
outsb
insl
cmp
push
out
mov
sbb
mov
lahf
scas
xchg
mov
test
les
sbb
pop
pop
mov
mov
cltd
arpl
movsb
push
lds
lahf
sbb
mov
push
adc
outsl
add
and
mov
dec
add
mov
stos
mov
pop
mov
fstps
gs
js
imul
sbb
aaa
mov
jne
scas
dec
outsl
lods
mov
stos
lret
mov
mov
xchg
mov
jne
lahf
mov
in
sahf
fcomps
jnp
loope
test
xchg
mov
js
loope
or
xchg
je
ja
int
fisubrs
fimuls
neg
cmp
add
sub
jp
shlb
getsec
xor
lds
jmp
pushf
test
cmp
fsubrs
inc
xchg
push
cli
int
scas
or
xor
and
cmp
stc
rorl
add
call
push
mov
in
fstps
cmp
push
cld
or
push
fs
jnp
sbb
adc
addr16
and
cmp
push
stos
out
cmp
aas
mov
cmovg
in
push
cmp
push
outsb
shlb
xor
mov
inc
out
xor
pop
inc
cmp
inc
xchg
mov
stc
faddl
mov
xchg
insb
cmp
popa
xor
idivl
mov
jg
fisubl
in
test
imul
jmp
ficompl
or
mov
and
adc
fcmovb
pop
subl
test
movsb
movsb
inc
mov
jae
enter
in
mov
inc
hlt
ret
and
cmp
or
out
mov
pop
xor
popa
lahf
xchg
es
jae
das
xor
xor
xor
mov
inc
push
sbbb
mov
data16
hlt
jns
sub
iret
push
xor
sbb
imul
xorb
pushl
mov
ss
aad
or
sub
mov
pop
mov
das
or
add
jg
cmpb
loopne
add
test
jnp
or
mov
outsl
arpl
scas
pop
sub
dec
ret
das
ljmp
aam
jmp
xor
subb
jns
sub
xor
mov
ja
add
mov
sub
shrl
scas
push
sbbl
and
xor
inc
xchg
das
sbb
popf
stos
aas
push
hlt
in
push
sbb
jno
in
es
loopne
rolb
subl
jl
dec
jle
push
lea
xchg
adc
mov
pop
cvtps2pi
into
ret
icebp
pop
add
insl
nop
je
sbb
adc
lds
popf
popf
push
imul
daa
rclb
mov
test
push
daa
and
mov
mov
add
jnp
das
mov
stos
mov
sub
lahf
dec
mov
sub
loope
dec
dec
scas
testl
add
aas
les
repz
xchg
loope
cmpsl
or
lahf
daa
mov
inc
je
or
inc
das
adc
mov
repz
addr16
into
test
std
inc
dec
loopne
or
sub
cltd
fwait
mov
repz
or
pop
fidivrs
outsb
or
and
ja
clc
gs
xor
dec
shlb
push
pop
mov
in
or
lods
inc
es
sub
push
ret
dec
mov
mov
sbb
test
bswap
iret
leave
gs
lods
cwtl
sbb
inc
xor
xchg
mov
mov
inc
sub
stos
cmp
lods
dec
mov
cmp
clc
dec
adc
testl
lock
es
cmp
sub
xchg
test
push
jno
in
sbb
add
mov
out
dec
imul
ss
les
fistpl
xlat
jae
fs
dec
ss
xchg
push
out
push
mov
push
movaps
dec
int3
test
adc
dec
aad
add
test
xchg
add
cmpsb
xchg
cmpsb
mov
pop
xor
test
repz
ja
cmp
fnstenv
xor
js
and
orb
test
daa
mov
in
imul
mov
mov
insb
and
data16
fwait
pop
push
jne
inc
aaa
sbb
and
mov
sbb
pop
ja
stos
icebp
fs
repnz
inc
push
or
pop
sti
cmc
sarb
sub
mov
push
pushf
enter
mov
jmp
or
mov
es
stc
xchg
and
push
aas
sbb
mov
inc
adcb
test
loop
mov
daa
orb
cmc
jns
mov
mov
lret
out
scas
movsl
out
in
movsb
mov
sub
movsl
and
fs
push
stos
adc
push
push
popf
sub
push
sbb
sahf
cmovg
mov
xchg
lret
push
mov
xchg
sub
jp
dec
push
je
push
fld
frstor
test
mov
in
ljmp
aad
addr16
add
dec
out
int
xor
xchg
movsl
in
jecxz
add
pusha
lahf
xchg
imul
jmp
pop
and
stos
cwtl
and
mov
test
adc
xor
cmp
jle
das
push
lcall
fildl
inc
inc
mov
jmp
jmp
cmp
inc
lcall
xchg
xchg
leave
pop
inc
jg
dec
cltd
adc
imul
xchg
jae
call
les
test
xor
push
sbb
or
sti
sbb
rcrl
andl
and
jmp
cmp
loop
mov
cmp
dec
adc
push
dec
cmp
lcall
jbe
jne
cmp
mov
sbb
fcos
sti
sbb
cli
clc
scas
daa
push
repz
dec
mov
xor
in
arpl
fcomps
sbb
and
inc
out
rcll
or
sbb
xchg
and
cmp
jne
cld
cmc
jle
orb
xchg
or
dec
inc
dec
lret
mov
repnz
cmpsl
adc
add
xor
int3
sbb
stos
cmp
cmpsl
in
aaa
mov
jbe
xlat
ret
jb
lret
lock
cmp
test
popa
in
mov
and
sub
arpl
ljmp
jae
push
ds
mov
xor
cld
cmpsl
jne
jnp
inc
movsl
imul
xchg
adc
push
mov
push
mov
add
addb
loopne
fcomps
mov
ss
push
xchg
int3
hlt
sub
dec
push
je
inc
pop
adc
mov
addb
jb
or
aad
pop
pop
mov
dec
or
and
xor
push
andl
jno
or
add
bound
sbb
cmp
sbb
or
push
inc
xor
hlt
stos
dec
clc
inc
out
daa
cmpsb
insl
cmp
stos
xor
lds
scas
dec
xchg
shlb
add
sahf
jp
out
inc
into
insb
pop
lcall
cmc
cmp
fwait
mov
inc
push
cmc
popa
aas
sbb
popa
int3
pop
hlt
inc
adc
scas
or
add
and
xor
mov
xchg
mov
stos
mov
pmulhuw
inc
sti
dec
xlat
push
nop
xchg
mov
dec
mov
inc
rclb
in
aam
pop
mov
imul
aad
mov
adc
hlt
in
xorb
insl
inc
push
xor
test
add
aam
xchg
lcall
mov
cli
push
and
repnz
sub
jnp
rcll
andb
cld
les
sbb
pop
mov
pop
lret
test
iret
sti
cmpsb
push
cmp
xor
xor
insl
cmc
dec
stos
out
jg
sahf
inc
cwtl
ja
cmp
test
ja
mov
sbb
dec
jl
adc
cmp
les
mov
addr16
sbb
pusha
xchg
adc
adc
adc
cld
leave
mov
cmp
in
sbb
lods
add
lahf
jge
xchg
push
in
cs
push
cltd
push
flds
mov
int
dec
repz
add
adc
mov
dec
mov
repnz
dec
push
mov
jno
test
aam
imul
mov
pushf
pop
push
rol
pop
push
or
in
sar
jb
jno
out
mov
jb
xchg
sub
outsl
mov
fsubp
mov
es
pop
add
xor
mov
shrb
push
or
test
arpl
jmp
or
leave
shlb
mov
gs
xor
je
repnz
bound
add
sub
push
adc
cli
in
mov
sahf
fistps
sbbl
test
mov
jmp
cwtl
dec
adc
dec
dec
hlt
cmp
sbb
mov
rcrl
rolb
loopne
mov
mov
enter
push
fimuls
dec
jno
jmp
shrl
dec
pop
inc
mov
scas
xchg
mov
lods
lcall
cmp
jecxz
outsl
repnz
imul
sbb
sbb
xorl
mov
sub
mov
sbb
or
sarb
lahf
out
inc
repnz
nop
dec
fistpll
fildll
iret
mov
orb
in
xor
cs
test
jge
inc
inc
jl
rorl
xor
rolb
add
mov
cs
jno
mov
nop
jo
mov
xchg
and
insb
fisttpll
push
sbb
arpl
iret
pusha
imul
mov
sbb
in
andb
repnz
adc
pop
mull
lahf
inc
xchg
mov
scas
sbb
mov
rolb
push
mov
sahf
mov
mov
add
push
jae
in
clc
dec
jl
cwtl
dec
clc
pop
data16
mov
xor
inc
outsl
add
sub
jl
push
sub
fwait
mov
lahf
dec
rorl
inc
cmp
pop
idivl
out
xlat
outsb
cwtl
xor
gs
mov
mov
push
adc
and
jg
mov
cli
cmp
pop
mov
js
ljmp
or
mov
fidivs
lds
fs
pop
pushf
xor
jnp
sub
ret
jno
es
xchg
sub
sbb
pop
jl
or
inc
dec
pop
stos
and
faddp
mov
scas
jnp
mov
rolb
ret
idivl
xchg
repz
add
xchg
pop
test
mov
rcll
lret
jp
rcr
and
js
or
xor
mov
or
mov
xorb
sbb
xor
cltd
insb
jmp
fmuls
add
mov
in
notb
daa
orb
mov
fucomi
scas
loope
jb
adc
pushf
mov
dec
aas
push
xchg
je
mov
dec
sub
imul
mov
imul
mov
icebp
movsb
clc
in
addl
test
outsb
dec
jbe
push
inc
mov
xchg
movsb
xor
pop
cmp
and
cmp
sub
lret
add
jecxz
js
sbb
je
xchg
in
push
jno
push
xchg
hlt
std
or
jle
out
enter
adc
jl
jl
push
or
or
sub
or
aas
stos
xor
xchg
jle
mov
sahf
mov
push
mov
jns
in
push
and
mov
sbb
jb
mov
decl
pop
xor
out
mov
xor
pushf
jle
jb
dec
dec
mov
add
jb
dec
fisubs
dec
and
lods
iret
jo
test
jp
imul
xor
xor
mov
mov
push
pop
cmp
data16
mov
pop
xchg
outsl
xor
push
pop
enter
xor
adc
clc
and
jge
rolb
int
in
dec
and
push
sub
cli
ljmp
ret
mov
mov
mov
ds
xlat
mov
movsl
mov
sub
sub
push
mov
push
cld
cli
dec
nop
es
mov
push
mov
idivb
adc
sub
int3
lods
decl
xchg
mov
movsl
jp
mov
fcoms
jl
aas
cmpsb
jecxz
fwait
lods
lahf
mov
mov
xchg
jle
xor
leave
jns
test
or
sbb
shll
bound
repnz
mov
dec
inc
pop
and
out
mov
xor
mov
mov
je
mov
push
lahf
mov
or
sub
cmp
mov
out
sbb
mul
into
jne
mov
mov
lret
ficoml
icebp
and
dec
das
jae
into
enter
and
cwtl
cmp
mov
lods
pusha
in
cmp
rclb
movsl
lea
add
andb
mov
cmp
cs
mov
jmp
xchg
popf
sub
and
xchg
dec
pop
frstor
aad
xlat
and
es
loop
je
mov
mov
or
mov
push
pop
popa
das
fidivs
pusha
sub
jae
je
dec
fs
rcrb
mov
adc
push
outsb
push
lret
dec
int3
std
jnp
cli
testl
cmp
dec
lahf
push
push
orb
cmp
push
xor
push
not
outsl
bound
inc
add
leave
push
movsb
jnp
std
adc
inc
lret
xchg
sbb
xor
fwait
in
orb
mov
int3
arpl
inc
aaa
mov
sbb
mov
or
xor
fnstcw
popa
in
in
xchg
in
loopne
mov
push
xchg
insw
pop
ss
mov
imul
daa
mov
jp
jo
mov
add
pop
lock
mov
sti
mov
sub
add
pop
xor
push
jnp
ficoml
out
adc
push
scas
sbb
loope
popa
aaa
leave
mov
pop
rcrb
mov
or
push
aad
addr16
pop
pop
shrl
xor
add
push
dec
mov
enter
jo
ret
negb
mov
dec
pop
and
adc
pop
call
jle
inc
popa
sbb
sub
mov
and
jns
adc
push
daa
cmp
inc
mov
ret
pop
mov
sahf
dec
lods
jl
mov
scas
mov
movb
jl
and
mov
loopne
mov
into
icebp
mov
mov
sahf
push
mov
sbb
cwtl
add
xor
loopne
out
stos
cmp
fcompl
jmp
fidivl
into
ret
dec
cwtl
pop
sti
fincstp
gs
jecxz
fnstsw
pop
adc
push
xor
add
cmc
push
lcall
cmpsb
add
dec
cmpsb
aaa
jns
or
movsb
andb
cli
cld
and
cmp
dec
ret
dec
mov
cmpb
subl
pop
push
fists
xchg
jmp
push
lods
in
pushf
dec
cmp
in
out
and
loope
lret
pop
fadds
sub
adc
enter
data16
fists
add
shr
cmp
jg
mov
adc
iret
sahf
jp
incb
push
into
pop
adc
xchg
cmp
xchg
popf
in
pop
push
sub
scas
into
push
mov
scas
imul
mov
lods
inc
lods
mov
xor
add
imul
add
mov
repnz
and
mov
mov
aas
xor
xor
hlt
lods
out
adc
sbb
xchg
xchg
mov
inc
hlt
pop
rol
addr16
or
jmp
in
jecxz
fcmovnb
inc
xchg
cli
mov
fst
nop
mov
and
mov
mov
lock
xchg
xchg
jp
pop
pop
out
mov
cmp
push
dec
cmp
mov
mov
sbb
mov
int
dec
mov
arpl
pop
adc
jmp
mov
ja
cmp
test
shrb
xor
lret
mov
in
or
mov
gs
std
fstl
shl
ja
out
sbb
fcmovb
xchg
les
int
lret
cmpsl
mov
sub
shl
or
jecxz
mov
jmp
inc
pushf
mov
scas
je
pusha
icebp
jp
dec
mov
mov
es
aad
flds
es
jne
add
push
xchg
lods
dec
scas
pop
int
lret
insb
inc
fisubrs
mov
fwait
and
inc
int
jne
dec
mov
jne
enter
mov
sbb
adc
ret
lods
adc
mulb
lds
mov
add
xchg
int
idiv
flds
mov
out
enter
clc
nop
pop
mov
mov
lcall
xchg
sbb
xchg
xlat
int3
out
cld
rolb
aas
and
xor
mov
testb
pop
es
fnstsw
add
test
int3
mov
sahf
mov
push
sbb
inc
cld
cmp
adc
ljmp
int3
stos
inc
cmp
mov
das
int
xchg
loopne
xchg
insl
mov
add
mov
xor
ljmp
test
cld
fists
sbb
inc
fimull
hlt
push
dec
call
push
mov
jne
test
jge
xor
repz
xor
sbb
xchg
enter
fmull
add
mov
lds
stc
mov
lods
dec
ss
insl
xor
push
cmp
cs
fldcw
add
in
mov
cmp
sti
repz
or
mov
jo
mov
movzwl
inc
add
repz
in
outsb
stc
xor
add
mov
sub
popa
popa
das
call
or
add
cmp
mov
cmp
add
add
push
pop
pushf
mov
stos
mov
mov
inc
aad
aaa
sarl
mov
movsb
xchg
movsl
push
movsl
in
jo
mov
popf
mov
xchg
je
mov
sub
arpl
stc
adc
shrl
and
aaa
in
mov
subb
pop
ret
mov
insb
or
fdivs
push
pop
add
push
in
ret
test
lahf
cmp
loopne
and
inc
lods
dec
cld
push
mov
and
mov
cmpsl
and
imul
scas
jge
rcrl
sarb
push
xchg
jge
je
jae
or
addr16
mov
mov
jp
enter
dec
or
jg
ljmp
adc
in
sub
cld
rcrl
mov
loop
popa
mov
ljmp
add
xor
sbb
les
dec
mov
insl
dec
push
inc
popa
outsl
das
ss
and
jge
xchg
lock
cmpsb
cmp
adc
repnz
movb
or
xchg
imul
popf
jno
adc
mov
sbb
dec
adc
mov
pop
and
sbb
or
outsl
mov
adc
fiaddl
pop
repz
cmp
cld
in
out
adc
lea
and
or
jmp
arpl
and
mov
negl
add
nop
jmp
in
or
mov
gs
aam
jge
cld
cwtl
hlt
mov
push
cmc
inc
idivb
mov
pop
pop
fstpt
cmc
or
dec
mov
mov
stos
jae
mov
fsubrs
xchg
imul
mov
xchg
xor
aad
cmp
adc
xchg
mov
arpl
aas
subl
loope
xor
lret
fimuls
xor
add
inc
je
jns
mov
sbb
movsl
enter
pop
and
scas
push
adc
dec
adc
mov
mov
xor
xchg
pop
and
arpl
fildl
push
mov
mov
sbb
inc
call
cmpl
insb
mov
lret
mov
ja
xchg
fs
dec
xchg
or
and
jae
xchg
pop
xor
add
gs
mov
fnsave
sbb
or
or
into
fistl
mov
sub
dec
in
or
fwait
push
mov
decl
push
cmp
dec
ret
mov
mov
sbb
push
push
fidivl
push
popa
mov
repz
in
xchg
incl
add
inc
inc
and
movb
xor
mov
pusha
mov
pcmpeqd
or
inc
movsb
jecxz
fistl
and
and
cli
mov
sahf
test
dec
xchg
cmp
loop
mov
add
icebp
mov
sahf
add
adc
jno
cs
shl
jge
popa
dec
shrb
popa
jg
insb
sub
pop
in
lods
xlat
pop
or
sahf
rorl
int3
sbb
dec
and
fs
fidivrl
or
fisttpll
xor
pop
leave
in
sbb
popa
or
jmp
sti
inc
hlt
das
sbb
adc
ss
filds
data16
cmp
lret
lods
incb
pop
xlat
sub
mov
dec
mov
sub
aaa
inc
sub
or
xlat
cwtl
ficoms
iret
js
test
imul
test
out
add
fmul
stc
cmpsl
pop
inc
mov
jnp
hlt
pop
inc
sbb
inc
dec
iret
sbb
stos
jecxz
outsb
dec
and
es
pop
test
xchg
jo
push
xor
stc
hlt
inc
xor
je
sub
popf
push
inc
and
shll
popf
popf
cmp
cmpsb
pop
xlat
jp
cmpsl
or
inc
add
insl
jo
shll
jno
xchg
mov
dec
lcall
mov
adc
je
xor
xchg
xor
negl
pop
push
mov
jns
rcr
push
xor
enter
test
jnp
xorl
pop
xorl
dec
mov
xchg
pop
test
test
ret
sub
and
mov
push
or
sub
add
inc
xor
out
fcoms
ror
testl
jnp
pop
clc
inc
ret
push
mov
fwait
jp
sub
xchg
enter
dec
mov
les
jle
mov
push
pop
jg
enter
push
or
test
je
mov
pushf
aam
sub
inc
std
enter
in
xor
shlb
or
int3
mov
out
mov
mov
sahf
movlhps
jle
sbb
mov
dec
and
ret
pusha
data16
dec
cmpsl
mov
sbb
scas
mov
ljmp
icebp
hlt
dec
mov
imul
jnp
jnp
cld
imul
movsl
inc
ret
loop
ret
daa
clc
shrb
insl
xchg
or
cmc
movsb
and
xor
jl
hlt
xchg
xor
sub
adc
fistl
cmc
pushl
pop
scas
imul
xchg
jmp
xor
mov
je
scas
cli
push
faddl
jnp
adc
pop
ja
push
sbb
mov
call
fdivrl
bound
push
es
ss
sbb
inc
loopne
out
push
jecxz
clc
mov
and
inc
gs
push
negb
inc
mov
shlb
mov
repnz
push
and
int
sbb
aad
popf
add
loop
push
cmp
jb
mov
or
pop
test
cmp
pop
adc
cmp
sbbb
dec
scas
push
sub
fprem
or
pop
cmp
faddl
mov
jnp
sub
dec
sbb
outsb
call
lret
sub
push
pusha
lods
out
or
jmp
repnz
iret
pop
xor
pop
sbb
add
movsb
js
pusha
inc
sub
in
mov
test
and
repz
pop
in
adc
out
xor
cmp
pop
loop
int3
ret
mov
push
out
adc
jno
out
push
mov
mov
sub
hlt
and
pop
fsubs
add
mov
mov
pop
jns
repz
aaa
pop
das
js
test
ljmp
or
inc
clc
add
sbb
shlb
push
sbb
add
sti
jp
add
inc
stc
push
adcb
arpl
mov
and
pushf
aaa
mov
xchg
pop
adc
dec
rcrl
loope
jl
cmc
test
mov
ficomps
jle
mov
pop
fs
insb
sbb
fs
push
jne
and
push
adc
push
hlt
dec
movsl
lods
and
xchg
or
dec
dec
aaa
popa
fwait
mov
out
mov
in
fbld
arpl
mov
add
movsl
lcall
add
aaa
jl
stos
and
mov
lods
bound
sbb
out
mov
push
sub
cmpsb
push
cmpsl
or
add
daa
add
std
dec
imul
dec
mov
and
in
movsl
mov
insl
lds
cmp
shll
push
shlb
inc
inc
imul
ss
push
rol
xlat
ss
ljmp
sti
sub
sbb
cmp
inc
dec
shrl
push
rcrl
pop
mov
mov
dec
or
mov
cld
and
and
aas
scas
movsl
xor
cltd
addl
cmc
and
cmpb
xor
add
mov
test
mov
ret
pop
jne
mov
mov
das
ffreep
push
mov
dec
jle
stos
add
popf
xchg
mov
int3
pop
and
mov
xchg
divl
mov
xor
xor
mov
sbb
in
stos
mov
mov
popl
fadds
jae
push
push
test
pop
sbb
int3
push
xor
xchg
sbb
lods
cmp
imul
aad
bound
arpl
mov
hlt
cmp
xor
push
orb
cmp
adc
cmp
sub
vcomisd
mov
adc
fucom
hlt
xchg
pop
in
and
dec
xchg
sbb
mov
repz
adc
mov
mov
xchg
add
push
filds
loop
mov
fistl
inc
sarb
fwait
xor
test
insb
xor
sbb
js
ret
mov
cmp
cmc
aad
outsl
incl
adc
dec
cltd
aad
fmull
jg
xchg
ret
cli
leave
insl
sarl
popa
mov
pop
dec
dec
icebp
rcr
hlt
push
jno
jnp
xchg
mov
dec
lret
cmp
inc
dec
adc
pop
xor
xchg
gs
adc
adc
mov
sub
ret
int3
in
insl
jmp
sti
int
mov
clc
xorb
pop
fmul
pop
out
lcall
dec
adc
out
movsb
pop
xor
cmp
enter
lock
mov
push
xchg
xchg
pop
or
sbb
jo
mov
or
shl
adc
int3
sbb
mov
lret
dec
and
mov
notl
cmp
pop
or
xor
jb
in
nop
lods
pop
inc
out
and
xchg
xchg
xchg
pop
aaa
mov
rcr
sarb
dec
push
je
dec
loopne
pop
mov
push
mov
ljmp
rolb
mov
pop
jne
push
ss
outsb
adc
rorb
mov
lods
int3
das
or
inc
in
or
inc
lcall
jmp
fnsave
pop
push
add
cs
mov
mov
and
es
adc
mov
fldl
pushf
movsl
jns
dec
lret
scas
push
mov
pop
and
js
inc
lret
mov
jecxz
xor
lods
inc
dec
xor
pop
fs
sub
rcrb
and
loopne
stos
cltd
test
pushf
mov
ret
fildll
mov
and
jp
out
jbe
cmpsb
push
aas
xchg
ja
aas
fisttpll
mov
mov
clc
leave
xor
pop
in
in
jb
mov
sub
cmpl
mov
jge
jns
sub
dec
xchg
rcrl
nop
mov
cld
sbb
pushf
xchg
mov
jbe
xorb
ret
pop
jb
inc
inc
jno
xchg
testl
test
shl
movsl
js
rorl
pop
sub
inc
sbb
ss
je
outsb
in
pop
fisubrs
outsl
mov
mov
imul
ljmp
out
es
pop
rcrb
cltd
pop
addl
lcall
repz
leave
punpckhbw
and
sarl
adc
push
sbb
add
sbb
pop
mov
jno
push
pop
sbb
fs
hlt
loopne
jecxz
imul
insb
mov
loop
pop
test
rcrl
shr
cmovno
xor
test
arpl
pmaxsw
jecxz
push
add
add
loop
and
pop
add
sti
push
adc
sub
enter
mov
hlt
dec
cmc
ja
sbb
cmc
pop
ret
jb
xchg
outsb
add
rcrl
inc
add
cmpsl
push
dec
add
mov
mov
bound
popf
fsubrl
test
jbe
ret
jle
test
and
pop
out
lock
pop
lret
xchg
add
jb
test
es
loop
lds
pop
or
push
xchg
cmp
cld
lods
adc
mov
jo
push
or
push
call
mov
subb
mov
arpl
pop
iret
je
nop
cmpsb
stos
push
jb
cmp
pop
cmp
loop
fcoms
outsb
mull
add
jae
stos
pcmpeqd
lods
xchg
mov
xor
test
subb
cltd
jl
call
xchg
test
addr16
cld
sbb
repnz
xor
lret
leave
lret
add
pushf
sbb
mov
sti
xchg
or
fdivs
scas
negb
adc
cmp
cltd
sbb
push
adc
push
in
aas
cld
repnz
test
jp
xor
mov
jno
cmp
test
jecxz
jecxz
mov
repz
mov
sbb
dec
mov
outsb
std
cmpsb
fiaddl
mov
or
xlat
arpl
mov
lods
xchg
cmc
daa
sub
in
jae
xchg
fistps
xchg
aaa
dec
mov
add
test
sbb
pop
adc
push
shlb
scas
fs
mov
xor
bound
cwtl
movsb
idivb
shlb
movsb
adc
out
loopne
inc
repnz
test
loopne
pop
add
mov
mov
push
mov
out
dec
rclb
mov
add
adc
push
popf
or
xchg
test
mov
dec
arpl
nop
fldcw
push
sub
dec
or
mov
pop
aam
xchg
and
lcall
pop
dec
inc
sub
and
cmp
cltd
inc
push
mov
xor
add
xchg
push
and
rorl
or
xchg
mov
sub
dec
aas
mov
sub
pop
and
insb
mov
aas
into
lcall
call
shrl
sbb
sbb
xchg
jb
enter
dec
cld
and
jns
pop
sbb
mov
jnp
inc
xchg
stos
xchg
pop
leave
mov
and
dec
out
push
adc
add
pushf
stos
mov
mov
loop
mov
movsl
ljmp
xor
cmp
mov
dec
clc
adc
iret
jecxz
in
lock
pop
mov
xchg
pcmpgtw
adc
mov
lret
xor
inc
jno
sub
jbe
aam
int3
sti
cltd
scas
dec
imul
jbe
stc
cltd
xchg
push
loopne
rcll
pop
out
pop
mov
sub
andl
pop
jmp
pop
xchg
test
push
sahf
mov
and
mov
insl
or
sbb
lds
cmc
not
and
stos
add
dec
mov
sbb
or
sarl
mov
cmc
xchg
lcall
cmovns
sbb
xchg
xchg
jb
fwait
cwtl
and
fwait
aad
aas
jge
push
andb
je
inc
ljmp
fmul
cmp
ficoml
es
bound
xor
ret
mov
out
rcll
popa
push
loopne
lods
jbe
jp
jbe
loopne
xchg
andb
mov
fst
jmp
stos
loop
mov
mov
jae
pusha
mov
sbb
xlat
loopne
adc
testl
jecxz
out
xchg
or
dec
mov
dec
loope
dec
or
pop
cmp
sub
stc
mov
loope
xor
int3
and
and
test
and
add
mov
xchg
sub
jg
out
outsl
loop
lds
mov
dec
cmp
jae
pushf
lcall
mov
std
push
sub
push
popa
jecxz
xchg
or
cmp
jb
clc
xchg
and
push
mov
daa
negb
shrl
movsb
and
les
loope
shrl
shl
insl
mov
sbb
mov
repz
mov
jno
mov
cmp
fldt
mov
push
mov
mov
cmp
adc
cmpl
mov
sbb
inc
xor
std
shlb
jl
test
mov
pop
ret
xor
mov
push
test
lcall
pop
xor
sahf
cmp
inc
nop
xchg
cmp
mov
push
xchg
ret
sbb
xor
push
sub
clc
jp
out
sub
mov
jae
adc
or
test
mov
or
enter
mov
pop
mov
mov
std
int3
adc
enter
push
loope
repnz
psubsw
inc
loopne
sub
sbb
add
pop
jp
fs
clc
dec
sub
daa
popl
rcll
movsb
mov
je
jg
jge
jmp
adc
cltd
xor
xlat
mov
xor
mov
loope
and
add
push
test
ja
or
add
xchg
rorb
imul
outsb
nop
add
mov
pop
das
xchg
cli
das
cmpsb
ss
cmp
add
icebp
cmc
subl
iret
fwait
sbb
mov
dec
jl
adc
and
test
dec
mov
cmpsb
repnz
pop
ret
dec
scas
repz
xchg
and
dec
sbb
es
imulb
testl
dec
push
cltd
shrb
or
sbb
mov
pop
or
aad
jbe,pt
pop
lret
push
mov
add
pop
bound
arpl
jo
dec
std
outsb
imul
xor
andb
adc
das
into
aam
stc
push
mov
into
cmp
in
pop
das
push
ret
jne
push
dec
sbb
out
mov
bound
mov
hlt
nop
xlat
xchg
sub
xor
inc
push
and
xchg
pop
sahf
pop
cmp
ret
push
sbb
or
and
push
or
lcall
leave
xor
aaa
push
test
inc
cld
xchg
xchg
xor
clc
ss
out
repz
out
inc
sbb
and
add
lea
adc
mov
mov
js
sub
fmulp
and
test
rcr
xchg
jno
imul
xor
push
push
mov
add
or
lret
xchg
inc
lds
iret
test
lods
xchg
push
mov
xchg
addr16
cmovo
cmpsb
sub
xor
sbb
test
hlt
arpl
lods
cmpsb
fmuls
nopl
jns
dec
jle
je
lods
mov
pop
add
or
xchg
add
xchg
fsubl
sbb
dec
mov
ja
add
cwtl
dec
enter
lea
sti
mov
mov
lods
or
push
jge
add
push
sub
out
imul
sti
cmpb
cld
mov
movsb
mov
cwtl
loopne
dec
andl
test
jbe
push
or
inc
xchg
fwait
scas
decl
int
jmp
mov
insl
fidivs
mov
xlat
inc
jbe
xchg
pushf
add
aas
pop
mov
les
ret
dec
sub
adc
sub
jp
add
jecxz
cmp
sub
fwait
dec
pusha
movsl
fwait
mov
pop
stos
adc
xchg
call
sub
aad
pop
fisubrs
pop
test
into
aaa
mov
xor
or
out
mov
jno
pop
movsl
out
ds
test
add
mov
sbb
repnz
xchg
aaa
add
lahf
and
es
je
xlat
sub
and
andb
leave
or
clc
out
pop
sub
cs
loop
pop
aam
mov
mov
dec
scas
sub
dec
sbb
ljmp
loopne
in
and
and
or
sbbl
xchg
fwait
or
mov
pop
add
pop
div
push
das
add
in
mov
sub
push
shlb
pop
imul
outsb
shrl
loope
lods
or
inc
add
pop
iret
sbb
rol
scas
hlt
cltd
mov
sahf
fidivl
repz
std
mov
scas
jmp
add
dec
mov
movsb
sub
lods
lds
sub
mov
inc
xchg
ret
adc
pop
out
mov
jbe
pop
pop
sbb
in
iret
inc
mov
pop
or
mov
xlat
push
xchg
inc
inc
push
fimuls
adc
decb
orl
adc
cmp
pusha
fwait
mov
fldcw
dec
xchg
cmpsb
mov
stos
jmp
mov
and
mov
pushf
jecxz
pop
mov
add
inc
push
jne
lret
pop
and
ljmp
mov
pop
xor
out
mov
jno
adc
mov
inc
inc
and
xchg
or
mov
mov
int3
leave
ficomps
das
cmp
or
imul
mov
cld
adc
inc
fstpt
pusha
jge
enter
popa
jg
mov
sub
mov
dec
mov
insl
cmp
cmpb
push
inc
icebp
ss
sub
fidivrs
mov
mov
insb
add
jae
sbbb
mov
lea
ja
ret
and
jnp
shlb
pop
pop
or
and
adc
inc
cmp
mov
sar
int3
pop
push
out
dec
mov
and
mov
ljmp
call
test
cli
mov
in
mull
clc
xor
les
iret
and
or
mov
decl
ja
and
mov
cld
jecxz
fdivp
sbb
mov
lea
add
pop
cli
cmp
mov
mov
roll
cltd
ret
popf
jecxz
es
inc
adc
pop
imul
and
adc
xchg
ja
push
cli
stos
dec
inc
xorl
loop
loope
mov
pop
mov
sub
cmp
addr16
cli
scas
cmp
lss
jp
dec
shrl
dec
mov
mov
jne
sahf
xor
sahf
xor
adc
pop
dec
xchg
mov
jo
pop
gs
dec
sbb
pushf
jnp
add
movsb
jno
cli
pop
push
jmp
jbe
pcmpeqb
je
imul
xor
xchg
hlt
out
outsb
and
sarl
adc
pop
je
mov
stc
aaa
pop
dec
xor
xchg
add
and
adc
out
orb
sbb
jg
jnp
in
aam
fldl2e
nop
shl
mov
adc
stos
lret
fmuls
ljmp
lods
cwtl
inc
lret
fmul
stos
lahf
pop
sub
fidivrs
inc
push
pop
add
ja
or
aam
into
mov
pop
adc
scas
fcmovne
pop
aas
xorl
popf
imul
adc
or
and
push
sbb
push
xor
pop
inc
lea
repnz
hlt
sahf
movq
js
in
leave
cmp
mov
out
xchg
iret
adc
cmp
jbe
popa
dec
ljmp
add
imul
pop
ret
aas
iret
ffreep
mov
dec
lcall
mov
mov
jge
mov
pop
jns
cmp
adc
jae
insb
repnz
enter
push
mov
and
cmpsb
push
xor
into
adc
out
jmp
mov
mov
inc
scas
outsl
sbb
ljmp
lea
dec
mov
daa
pop
into
test
ret
xchg
add
cmp
aam
fldcw
mov
repnz
or
test
enter
push
xchg
or
hlt
adc
ljmp
imul
inc
in
mov
cltd
lods
mov
mov
leave
ljmp
sahf
pop
lret
dec
pop
inc
xor
sbb
push
rcll
aas
lret
mov
mov
std
mov
mov
ljmp
pop
xor
mov
sbb
xchg
roll
lahf
sbb
inc
fwait
sbb
mov
ljmp
adc
xchg
inc
push
inc
jbe
mov
sub
lcall
jb
iret
ret
cmp
out
cmp
fists
mov
mov
xchg
xchg
jb
adc
push
stos
inc
push
call
scas
rol
adc
push
emms
and
add
test
push
sbb
scas
clc
pushf
inc
mov
cld
xchg
stos
stos
mov
mull
push
loopne
inc
cmpsl
and
or
aas
adc
sub
or
mov
icebp
scas
pop
lcallw
popa
or
cld
cltd
sbbb
mov
iret
or
xchg
sti
add
imul
popf
call
add
jae
std
pop
xchg
cmp
jbe
and
frstor
mov
in
out
xlat
mov
int3
in
fists
fcmovu
adc
dec
xor
arpl
fldl
pop
or
mov
sbb
ja
sbb
cmp
mov
out
cmp
cmp
jp
and
addr16
lahf
adc
mov
in
fidivl
jle
xchg
dec
ljmp
ret
in
scas
jge
rcrl
inc
mov
in
pop
scas
loope
fwait
jmp
lds
mov
shr
vunpckhps
repz
jne
lret
dec
aaa
mov
lret
mov
jge
outsl
cmp
sub
inc
mov
sbb
fsubl
pop
push
dec
popa
or
push
mov
cmp
xor
push
jmp
mov
sti
mov
inc
push
cltd
sub
test
and
addb
cmp
sbb
shlb
test
push
pop
push
sbb
or
mov
xchg
mov
mov
mov
lods
es
and
or
jno
cwtl
faddl
xchg
insl
pushf
dec
add
int
scas
ficomps
aaa
pop
subl
jl
mov
mov
out
jl
add
stos
ljmp
mov
test
and
repnz
mov
arpl
aas
sub
jae
cmp
bound
pop
jl
add
dec
jb
ret
cmpsb
adc
loope
mov
mov
test
insb
out
push
and
nop
fucom
mov
loop
sbb
bnd
lret
mov
sbb
lock
in
iret
shlb
push
int3
sub
sbb
and
jl
out
push
ds
push
jl
dec
fmuls
adc
dec
out
xchg
xorl
push
mov
jle
aas
hlt
mov
fwait
push
pop
in
jns
cli
icebp
idivl
inc
gs
es
xor
into
pop
add
lret
cmp
ret
shll
sbb
lret
sub
inc
push
jo
pop
stos
test
test
mov
imul
sbb
jl,pn
fmulp
test
adc
jno
push
mov
sub
add
jg
sub
xor
xor
scas
cmpsl
jle
dec
push
inc
fistpl
cmp
push
inc
mov
dec
in
je
movsl
js
mov
stos
bound
movzbl
cmp
out
inc
mov
rol
movsl
or
xchg
push
push
aad
in
lods
fs
lock
xor
lds
ret
xchg
aas
xchg
cwtl
or
add
test
movb
add
sbb
push
stos
fwait
cmpsb
mov
dec
out
icebp
sbb
imul
bound
push
sub
xchg
push
cwtl
jo
sahf
or
das
out
fcmove
jg
movsl
add
hlt
pop
pop
ljmp
sub
mov
or
stc
lea
btr
jnp
dec
cmp
insl
cmpsb
in
sbb
and
outsb
imul
int3
or
or
int
adc
jmp
ds
das
push
bound
sti
pop
cmp
je
or
mov
shl
jmp
push
sbb
aas
dec
roll
sbbl
enter
cmp
idivb
aam
addr16
and
jp
inc
cmp
fmuls
push
jb
mov
into
or
xor
pop
sbb
xor
dec
push
mov
sbb
dec
inc
push
hlt
stos
rclb
cmp
or
cmp
in
adc
hlt
test
dec
sti
setbe
lret
adc
dec
and
mov
sub
mov
xchg
dec
lcall
fiaddl
out
sahf
cmp
pushf
jmp
mov
pushf
js
decl
lock
push
sub
lret
cmp
aaa
ret
fsubr
inc
mov
in
hlt
mov
or
or
popf
jmp
sbb
popa
insb
or
lret
cwtl
or
sbb
sbb
movsl
aas
sti
sbb
dec
nop
push
sbb
inc
scas
cmp
outsl
add
and
jnp
call
or
lods
adc
outsl
je
and
sub
push
in
loop
cmpb
xchg
lea
dec
mov
test
or
pusha
aaa
in
test
out
repnz
jnp
lds
fcomps
aam
and
xchg
cmp
dec
enter
cltd
xchg
and
sub
xor
lret
dec
sub
pushf
aaa
inc
arpl
nop
sbbb
inc
mov
and
dec
dec
dec
pop
movsb
out
enter
mov
xchg
mov
sarl
jle
lods
inc
jmp
jl
mov
mov
dec
and
jp
lahf
sub
jp
scas
jmp
add
or
test
jmp
xor
or
mov
fidivl
push
push
or
inc
mov
dec
sbb
jle
fimull
dec
xchg
mov
iret
xor
daa
iret
js
and
sub
lods
decl
mov
test
divl
jl
cmpl
test
sbb
inc
cmp
push
push
and
xor
lret
cmpsb
inc
cmp
xchg
sti
push
mov
mov
xor
lret
pop
mov
out
lahf
fbld
sbb
jmp
sar
xlat
xor
lods
int3
xchg
jnp
popf
orl
cmc
inc
lahf
int
and
jmp
and
or
xchg
arpl
mov
xor
sub
xchg
or
outsl
in
pop
movsl
nop
jge
xorb
xchg
rcrb
fcmovnbe
inc
jecxz
add
pusha
pop
mov
push
mov
jnp
xchg
imul
call
inc
xor
adc
loopne
pop
sub
push
lret
pop
xor
ficoms
or
sahf
pop
loopne
cwtl
xchg
cmp
mov
lods
mov
xchg
jl
mov
hlt
rol
shrl
loop
rclb
popf
push
xchg
xchg
cwtl
pop
movsl
or
mov
popf
xor
fcmovbe
decb
into
lods
jle
das
dec
mov
mov
je
jae
fcomps
movsb
cmpsb
mov
out
adc
pop
sbb
fcmovu
hlt
xchg
jae
lods
inc
xchg
pusha
jbe
bound
ds
mov
negl
mov
jecxz
loope
push
cltd
push
gs
hlt
daa
xorl
insl
enter
mov
xor
sub
inc
aad
cli
sub
in
jae
xchg
mov
psrlq
xlat
mov
into
or
jbe,pt
or
or
xor
sarb
inc
xchg
adc
outsb
pop
or
repnz
shll
out
jmp
ret
cmp
lock
ds
jb
out
lret
adc
push
insb
out
ret
pop
dec
test
cs
sti
lods
out
ds
mov
xchg
sbb
iret
sbb
incl
loop
mov
add
jns
inc
or
adc
inc
sbb
inc
int3
test
popa
or
push
imul
ljmp
jno
stc
lret
lret
addr16
or
icebp
or
dec
lods
xchg
imul
jge
daa
ret
ficoms
mov
pop
lcall
and
push
arpl
push
cmp
and
int
dec
jecxz
push
dec
clc
scas
xchg
xchg
pop
and
imul
cs
scas
jl
inc
or
or
fstpl
and
je
and
push
pop
or
gs
sub
add
movsb
lods
movsl
push
cmc
mov
test
pop
pushf
mov
cmpsl
or
mov
add
ljmp
aad
mov
rol
push
jl
ja
nop
not
push
add
or
adc
jae
data16
test
lods
mov
push
jle
mov
xchg
inc
xchg
dec
aam
loopne
lds
jmp
out
fs
mov
roll
push
cmc
insb
mov
and
mov
subl
lret
sbb
cmp
pop
fimull
mov
shlb
jno,pn
add
mov
mov
cmp
fnstcw
faddp
pop
movsb
cmp
adc
adc
jmp
xlat
push
lcall
test
cmp
adc
push
add
test
test
ds
push
cmp
arpl
popf
popa
adc
mov
mov
push
data16
add
sbb
addr16
dec
push
imulb
dec
out
inc
fnstenv
rcr
outsb
out
cmpl
push
jmp
iret
das
andl
testb
add
scas
filds
scas
stos
mov
pop
push
push
mov
test
test
sub
fstpl
dec
and
cmpsl
xchg
or
je
shrb
add
add
popa
and
cmp
lret
cmpsb
or
adc
pushf
fisubs
jno
fnclex
cli
add
repnz
push
xchg
jae
lahf
inc
xchg
int3
int
scas
scas
sti
jae
ss
pop
xchg
inc
push
add
pop
in
dec
pushf
xor
imul
mov
pop
mov
es
and
push
ret
mov
mov
sub
ret
mov
mov
sbb
loopne
dec
add
push
adc
xchg
jp
push
mov
fcompl
ret
shll
mov
outsl
mov
jle
dec
lea
xchg
mov
fcomip
ret
lock
adc
jle
push
or
xchg
pop
data16
sbb
int3
cs
mov
in
cmp
mov
or
je
bound
rclb
andl
fistpll
and
sbb
mov
jbe
mov
push
and
jmp
insb
push
sbb
mov
mov
int
repnz
push
sbb
insb
mov
cld
test
xchg
sub
xor
cmp
push
mov
dec
dec
repnz
fdiv
ss
cmp
call
jecxz
rcrb
xchg
xchg
xor
mov
cld
nop
jbe
inc
cmpsb
add
mov
jecxz
in
orl
xchg
gs
mov
cmp
shr
or
xor
ljmp
lcall
aad
repnz
dec
fisubrl
shll
or
jl
pop
mov
jbe
add
mov
ss
out
mov
test
or
jne
cmp
push
and
mov
pop
lods
fidivs
xchg
sbb
push
lds
scas
cwtl
outsb
mov
jg
adc
idivb
imul
mov
das
push
mov
addl
daa
fimuls
jnp
dec
sbb
in
xor
and
scas
sbb
jae
mov
adc
fmull
xchg
lahf
xchg
and
loop
bound
jae
jmp
and
scas
xchg
sub
cmp
hlt
cmp
sub
jge
inc
cmc
mov
cmpb
loope
call
adc
aaa
mov
xor
mov
mov
sti
and
jnp
pop
lds
leave
nop
xchg
sahf
cli
sbb
in
std
jo
xor
lods
jg
or
int
adc
mov
das
stos
aaa
mov
jp
dec
and
addb
dec
and
inc
xor
add
add
pop
mov
fisttpl
cmp
je
mov
cli
mov
cmp
aaa
pop
or
xchg
add
dec
loope
sbb
pop
sub
sub
es
fidivl
repnz
mov
out
stos
push
push
ret
push
outsl
lea
fs
or
push
mov
jg
push
add
mov
lret
cmc
adc
push
dec
adc
jns
rorl
mov
sbb
mov
jmp
cmp
sub
in
fcoms
mov
stos
xchg
fsts
sbb
out
mov
hlt
xchg
inc
xchg
xchg
cld
pop
in
xlat
dec
jecxz
adc
jnp
cwtl
sub
test
popa
cmp
out
loop
mov
shl
and
fwait
outsl
or
std
and
mov
mov
cmp
test
sub
leave
ror
repnz
jb
xchg
insb
lds
pop
hlt
outsl
cli
lcall
inc
cmpsb
test
aas
std
mov
mov
push
psubw
sarb
or
leave
push
hlt
jae
pop
dec
jne
clc
sub
add
out
adc
ficomps
jle
add
addr16
imul
mov
loope
int
popa
add
popf
ja
addb
cld
xor
insl
gs
and
rol
mov
sub
fxch
mov
sub
push
fdivr
inc
iret
jbe
jno
pop
sub
test
aaa
int3
cmp
sbbb
sub
add
mov
pop
xchg
mov
mov
jnp
adc
decb
jle
dec
inc
sti
jnp
pop
mov
xor
popa
xor
shrb
xor
loop
lock
pusha
sbb
mov
sbb
out
and
adc
pop
rcl
xor
xchg
mov
fsts
adc
cmp
imul
xor
pushf
push
jl
cmp
mov
xchg
pop
push
mov
mov
cmp
jnp
divb
inc
xchg
mov
cwtl
out
insb
push
scas
scas
add
pop
fldcw
add
inc
adc
jns
addr16
adc
sbb
lock
jmp
addr16
out
inc
inc
cmp
enter
dec
jb
cld
push
jno
jb
sub
lcall
mov
adc
imul
mov
mov
jns
jle
jae
pop
aam
loope
mov
dec
inc
pusha
and
cmp
and
or
cli
mov
jmp
jg
imul
loope
shrl
sub
in
nop
dec
push
sub
cmovp
std
pop
lods
pop
pop
sub
sbb
jge
xor
in
dec
mov
mov
es
outsl
bound
cwtl
mov
add
push
aad
rclb
cli
ret
icebp
jo
cwtl
leave
adc
xor
fsubrs
jp
test
and
pop
mov
ja
or
dec
mov
subb
out
push
das
outsb
mov
out
negb
and
fwait
movsb
cmp
jno
movsb
arpl
hlt
xchg
adc
cmp
mov
fbstp
fs
jg
sbb
pop
int3
data16
enter
add
inc
hlt
in
lods
lods
jg
sbb
arpl
inc
daa
dec
lret
jmp
in
pop
scas
jecxz
arpl
jne
cmp
sbb
scas
pop
xlat
pop
js
jg
repnz
mov
aam
cmp
cltd
fisttps
test
aaa
in
or
mov
enter
add
je
loope
into
flds
cmpsl
push
movsl
cmp
call
outsb
sub
or
inc
imul
sub
xor
rorl
mov
push
lret
push
in
aam
popa
leave
sahf
mull
in
or
cmp
setno
dec
sbb
test
les
lods
shlb
mov
add
test
push
loopne
fldcw
or
dec
inc
fwait
push
mov
cmp
add
stc
adc
xchg
mov
cli
mov
pop
icebp
fists
out
nopl
movsl
jae
insb
and
popa
outsb
sub
jmp
add
sub
scas
ret
xchg
xor
movlhps
push
loopne
push
ret
xchg
xchg
insb
add
mov
or
adc
dec
movsl
dec
pop
ror
sahf
cs
into
bound
xor
xor
cmc
xor
add
repnz
xor
jb
push
hlt
dec
fmull
pop
sarb
mov
leave
dec
dec
sub
das
imul
mov
inc
cld
icebp
cltd
push
arpl
xor
push
pushl
cmpsl
pop
and
jle
adc
mov
fwait
test
loop
add
jns
xchg
jle
push
cmp
cmpxchg
insl
mov
fucomp
cmp
sbb
data16
sbb
mov
ret
ja
pop
sarb
int
cs
int
insb
sub
and
movsl
adc
test
sub
orb
lods
into
repz
jne
jae
test
sub
adc
xor
fnstenv
inc
es
jae
jne
aaa
jno
addr16
inc
mov
outsb
sarb
dec
and
or
adc
outsl
and
pop
sahf
pop
int
mov
push
mov
andb
adc
xchg
rolb
mov
push
cmc
fdivs
adc
xor
mov
xchg
loop
sti
mov
or
movsb
jnp
pop
lea
push
cld
xchg
and
out
sub
or
add
cmc
mov
cmp
jmp
xchg
mov
daa
pop
dec
bound
push
mov
test
push
adcb
xchg
popa
cli
xor
cli
test
push
xchg
outsl
and
int
out
lods
dec
cmc
in
ret
dec
sbb
pop
icebp
icebp
xchg
or
push
and
adc
and
mov
ds
cmpsb
or
pop
mov
movsl
out
stc
sti
lds
dec
faddl
xor
insl
xchg
outsb
mov
arpl
and
clc
dec
xchg
fildll
insb
cli
rcrl
int3
dec
pop
and
cmp
sbb
pop
lcall
jae
je
fimull
mov
sbb
xchg
stc
xor
test
cmp
loopne
dec
push
xor
xorb
sub
iret
ss
in
sti
fisttpll
enter
jmp
cmp
dec
std
es
jmp
jle
fdivrl
call
mov
addl
dec
jno
fidivs
cmc
jb
mov
cmpsb
sub
mov
cmpsb
or
mov
jne
enter
add
sub
push
ret
test
jmp
xlat
cmpsb
sub
jle
lcall
stc
hlt
pusha
mov
inc
push
mov
test
call
les
aaa
or
xor
lds
inc
into
gs
imul
lods
lds
xchg
xor
and
call
sbb
and
cmpxchg
sub
jge
outsb
gs
fwait
xchg
rol
pushf
outsl
outsb
pop
mov
sub
sti
popa
add
add
mov
lods
je
add
mov
pop
or
sbb
push
push
inc
xor
arpl
mov
mov
xchg
loope
xor
andl
out
mov
sbb
jp
test
jb
dec
sahf
sub
pop
adc
ss
mov
insb
push
pop
sub
fsubl
xor
repnz
test
lret
sub
inc
dec
sbb
scas
repz
nop
sarb
pop
cmpsb
rcrl
dec
out
aam
das
pop
nop
pop
popf
aaa
sub
scas
fldt
cmp
test
imulb
mov
cs
mov
aam
popa
ds
mov
nop
add
push
call
cmc
ret
or
inc
clc
lret
test
and
in
xor
dec
jmp
xlat
popf
dec
jns
xchg
dec
and
popf
mov
rolb
mov
fnstenv
push
scas
cmp
jg
xchg
dec
xor
out
inc
imul
jno
mov
mov
stos
dec
nop
cmp
jb
cs
pop
in
or
lods
add
adc
mov
xchg
mov
sbb
movb
jns
xchg
sub
cmp
jmp
mov
push
and
in
sbb
cmpsb
rcrl
add
xorb
or
xor
mov
xor
sbb
sbb
add
mov
add
mov
mov
loopne
popa
inc
loop
push
rol
mov
cmpsb
push
xchg
insb
cmp
shl
jge
adc
mov
dec
and
push
cmp
mov
addb
mov
cli
lods
add
repz
rclb
xchg
xchg
fcmovu
dec
mov
jmp
nop
enter
fwait
in
test
pop
xchg
out
dec
stos
dec
adc
and
lds
and
adc
mov
cmpsl
xchg
jbe
scas
jle
add
inc
and
or
mov
orb
xchg
mov
cmp
outsb
stos
femms
test
xor
pop
and
mov
fmuls
mov
fdivl
or
sbb
dec
into
scas
xchg
mov
je
or
shl
xchg
and
iret
sbb
xchg
mov
mov
mov
jp
pop
rcr
mov
aas
fstl
xchg
cmpsl
push
sub
nop
inc
sub
movb
jb
mov
fstps
in
push
filds
les
in
shlb
mov
bound
xor
nop
xchg
cmp
xor
aad
mov
pop
ss
outsl
lock
inc
leave
out
cmovnp
pushw
fwait
jg
jns
adc
jp
lahf
jbe
les
pop
xor
lret
mov
mov
pop
gs
rcrl
sub
add
loop
ds
sahf
jge
fwait
sbb
push
cmc
les
add
pusha
inc
insl
dec
sbb
push
mov
push
cwtl
cmp
or
out
push
add
and
push
into
inc
and
lret
push
mov
xbegin
in
lock
adc
cmc
xchg
loopne
inc
scas
push
lea
sbb
iret
xor
aas
clc
pusha
cmp
out
clc
adc
jecxz
ds
xchg
push
sbb
sbb
push
fistps
cld
test
xor
stc
adc
ss
adcb
imul
adc
outsl
out
sub
pop
adc
push
rcrb
fsubrl
fadds
xorl
ds
out
lock
sti
xchg
xlat
lret
lds
pop
ja
mov
xchg
cmp
shll
xchg
jle
and
jmp
lret
push
xor
aad
push
sub
neg
call
dec
cli
ljmp
leave
mov
rorb
sbb
rclb
adc
sbb
mov
mov
cmp
push
addr16
ds
xchg
shlb
loopne
sbb
jp
sbb
cmp
or
das
push
mov
fsts
leave
xor
pop
add
sub
repnz
stos
shll
cli
push
ss
add
adc
lret
stc
jo
pop
push
mov
pop
clc
test
adc
movsb
les
fsubs
ret
loope
adc
pop
jge
lds
mov
hlt
xor
out
shrl
jl
cwtl
insb
inc
in
mov
mov
pop
push
mov
and
xor
lret
inc
ret
jo
fldpi
loopew
jge
xchg
xchg
adc
sub
leave
xchg
xchg
std
push
and
imul
pop
pop
aaa
mov
xlat
lret
jecxz
cmp
mov
out
add
dec
mov
jecxz
out
int
in
mov
daa
cmp
mov
hlt
xor
ret
inc
xor
lahf
pavgw
lods
rclb
sbb
sbb
aad
sub
mov
insl
rorb
inc
add
push
es
mov
xchg
das
and
fnstsw
negb
jge
cmp
in
ja
addr16
xcrypt-ofb
cmpsl
stos
jno
fsubrl
jg
fwait
pop
push
mov
stos
popf
xchg
fcoml
push
jge
testb
or
ja
xor
jb
cmp
xchg
incb
and
push
mov
xchg
and
sbb
ficoms
sub
mov
out
shl
xchg
loopne
dec
nop
push
xchg
mov
jbe
jae
lret
aad
push
add
fisubs
int3
and
stc
mov
mov
mov
lcall
jae
mov
add
inc
mov
push
cmp
inc
hlt
fidivs
rorb
pop
mov
mov
iret
mov
cmp
mov
xor
cmp
test
insl
lock
jnp
cmp
fldt
and
jg
sub
aaa
jge
fsubr
clc
mov
cld
fs
je
cmpsb
pushf
xor
sbbb
cmp
iret
xchg
loope
mov
mov
rorl
add
mov
test
fisttps
and
xchg
jecxz
sbb
pop
js
lret
nop
scas
decl
leave
and
xchg
test
xchg
sub
mov
push
jl
xchg
test
ret
mov
dec
cld
movb
mov
imul
mov
jb
mov
and
mov
imul
popw
ret
icebp
ret
xorb
cltd
push
bound
mov
and
adc
icebp
xor
leave
inc
adc
lret
lods
xchg
lods
inc
insl
jnp
and
push
cltd
in
lcall
movsl
pop
dec
lods
cwtl
ja
adc
pop
cmp
aas
dec
add
js
push
xor
jmp
jmp
jmp
js
in
pushf
jecxz
cmp
repz
lods
or
arpl
and
out
inc
fnstenv
cli
and
xchg
and
xchg
push
das
in
cmp
sub
jg
sbb
cmc
jecxz
mov
nop
cmp
inc
cld
adc
sbb
into
lock
daa
pop
hlt
in
xor
cltd
dec
in
push
in
call
jmp
rcrl
out
divl
mov
inc
push
inc
xchg
cs
and
sbb
cmp
ret
mov
dec
insb
in
and
ja
rorl
hlt
imul
inc
sbb
test
sbb
push
mov
fs
stc
inc
jae
push
sti
fcompl
xor
scas
in
push
inc
mov
out
sbb
addl
call
mov
cmp
mov
ficoml
movsl
adc
xor
out
cmp
dec
mov
arpl
jo
jl
testb
sti
sahf
ret
clc
cmpsl
push
stos
adcl
ss
mov
sar
dec
movsb
addb
xchg
insb
mov
jo
sub
push
nop
insl
or
cmpl
insb
mov
mov
gs
ljmp
cwtl
jmp
dec
add
lcall
push
sub
xchg
jb
push
mov
xchg
std
scas
sub
test
cmp
fs
icebp
cvtps2pi
cmpsb
cwtl
push
imul
iret
mov
subl
or
xor
loope
adc
or
adc
sub
int3
aaa
fcomi
push
cmp
mov
minps
jle
leave
jg
ret
imulb
setne
push
cltd
sarl
es
push
movsb
mov
jp
inc
pop
push
in
cwtl
add
ja
push
cmp
test
ss
push
sub
mov
adc
int3
adc
rorb
cmp
or
xchg
mov
aad
add
gs
repnz
in
or
fwait
mov
loopne
xor
ret
jns
subl
ficomps
push
push
rorb
inc
cmp
pop
mov
popa
in
and
call
fs
hlt
pop
cmp
xor
push
test
iret
lock
rol
lods
cmpb
lea
sub
aam
mov
push
xor
xor
addr16
push
push
lret
push
push
inc
cmpsb
leave
jns
aaa
push
adc
sbb
in
in
sbb
push
pop
dec
jnp
lds
aaa
dec
insb
push
xchg
add
fsub
std
scas
jbe
cmp
subl
cli
test
mov
xchg
push
popf
popa
sbb
clc
inc
aam
xchg
sbb
adc
aad
mov
mov
mov
into
iret
inc
jb
xchg
cmp
pop
outsb
fwait
ljmp
stos
push
mov
xchg
mov
xchg
ret
and
fimuls
inc
test
pop
jp
fwait
lods
jae
les
push
xchg
cwtl
das
mov
fadd
loope
push
add
lock
shll
mov
fstl
shll
jmp
ret
in
aad
lahf
outsl
mov
cmp
dec
inc
rcrb
out
leave
ja
or
pop
hlt
test
or
test
inc
aad
and
in
outsb
stc
xchg
dec
sbb
stc
ljmp
idivl
test
xchg
aam
mov
in
push
adc
fistpl
and
mov
jmp
sub
shl
clc
shrb
jne
inc
jne
mov
xor
xchg
enter
and
inc
out
xchg
cmc
jne
sbb
popf
jmp
out
push
push
pop
js
jbe
aaa
or
sub
aam
sub
inc
or
in
sub
or
cs
and
arpl
mov
mov
xor
ffree
in
popa
ss
nop
xchg
insl
mov
push
adc
inc
xchg
mov
or
xchg
cmc
rorb
cmpsl
pop
inc
xchg
movsb
rclb
rclb
sti
xor
jno
or
fldcw
jae
fs
adc
fldenv
mov
mov
testb
nop
dec
aaa
int
rcrb
mov
push
sub
lahf
mov
mov
pop
mov
rcr
pop
std
lea
subl
or
add
add
sbb
jns
jb
insl
test
cmpsl
xor
enter
push
je
lahf
rcrl
stos
in
ds
adc
repnz
push
stos
inc
or
divl
addr16
loopne
adc
push
mov
push
and
jl
scas
iret
jbe
xor
jo
imul
fimull
push
out
iret
cmpsl
xlat
push
cltd
mov
xchg
fs
insb
cwtl
mov
movsb
aaa
adc
mov
imul
push
inc
jecxz
rcll
mov
mov
pop
js
inc
cmpl
test
fdivrp
insl
push
mov
push
or
scas
xchg
dec
xchg
jne
jae
push
lcall
loopne
add
mov
aas
addr16
adc
out
in
or
stos
insb
dec
popl
test
cmp
in
imul
mov
sub
push
jo
ret
cmpsb
adc
data16
lods
sbb
pop
adc
inc
movb
or
xchg
jo
push
ss
dec
jg
test
in
stc
in
ja
out
pop
jp
mov
and
fmuls
lock
and
inc
sarb
push
or
jle
xor
mov
enter
adc
adc
jae
aad
sub
mov
jecxz
sti
pop
ds
jb
add
mov
in
jo
jl
call
inc
xchg
mov
or
out
cmpsb
les
loopne
outsl
rorb
sub
inc
xor
jae
lock
add
call
mov
jno
adc
cmp
mov
je
insb
xor
xchg
rcrl
test
or
outsb
shll
inc
xor
cltd
jmp
adc
leave
jno,pn
mov
dec
jle
xor
stos
lds
ret
lds
fisttps
repz
arpl
cmpb
std
pop
jle
mov
sub
mov
mov
aaa
mov
or
dec
movsl
push
jbe
mov
sti
insb
xchg
cli
adc
jle
fcom
jnp
mov
lods
rorb
addb
mov
daa
ja
pop
adc
hlt
jns
inc
jns
lea
xchg
adc
shlb
idivl
sbb
pushf
mov
mov
push
ret
repnz
jb
repnz
mov
es
xlat
pop
inc
cld
push
add
mov
lods
jb
pop
mov
adc
test
sti
adc
mull
xchg
sub
inc
inc
xchg
bound
or
mov
lret
cmpsb
sahf
frstor
cmp
push
push
mov
lods
push
jns
jmp
adc
int
filds
arpl
mov
test
out
xchg
xchg
ljmp
jge
cmc
ret
test
insl
xchg
adc
xchg
hlt
pop
out
xchg
jae
xchg
adc
mov
sub
mov
mov
cmp
or
out
push
push
das
or
fdivrl
mov
jp
dec
jp
xor
enter
movl
mov
jnp
pop
lods
jb
dec
mov
push
in
push
add
fsubp
pop
push
adc
lahf
or
cld
insl
stc
out
inc
mov
inc
xchg
push
loop
xor
stos
push
jp
call
cli
outsl
sahf
repnz
das
lcall
sbb
popf
out
leave
cli
jo
adc
andb
leave
add
push
dec
dec
and
jp
sub
jbe
dec
imul
movsl
push
xchg
mov
lfs
sub
xchg
mov
jae
lods
jo
cmp
fcom
pop
xor
push
sbb
pop
xlat
lods
shlb
and
push
dec
lahf
and
mov
fistl
push
mov
aaa
cmc
je
mov
push
nop
adc
sti
das
xchg
bound
loope
outsl
push
sbb
mov
out
std
mov
int
mov
jp
in
mov
dec
dec
dec
into
ljmp
loopne
or
mov
jge
pusha
pop
push
mov
jns
add
mov
lds
loopne
sub
add
sbb
sbb
sbb
adc
loop
aaa
gs
mov
repnz
xor
cltd
adc
xchg
mov
xor
jo
mov
mov
addr16
cmp
in
jmp
fcoml
sub
inc
push
leave
lcall
icebp
mov
push
pop
pop
int
rcrl
das
mov
pop
xchg
fstpt
cmc
sbb
pop
jl
sarl
bound
xchg
ds
fstpl
int3
into
std
push
pop
mov
pop
popa
call
arpl
mov
clc
cmp
iret
ror
dec
cmp
test
rol
loope
fiaddl
inc
dec
push
in
cmp
jl
sbb
xor
push
jae
cmp
aad
pop
push
jg
aas
pop
xor
jp
sub
cmp
push
fcmovnb
test
jne
or
mov
cmpsb
dec
mov
cli
jnp
xor
inc
xor
mov
push
pusha
adc
in
inc
stos
push
sahf
cmpsb
or
or
jle
clc
mov
xor
push
test
dec
test
mov
nop
mov
push
mov
insl
xor
inc
xchg
or
pop
xor
nop
dec
arpl
arpl
pop
clc
pushf
scas
clc
mov
je
pop
mov
or
mulb
clc
imul
and
or
dec
je
mov
lret
push
sbb
aad
mov
jmp
xlat
gs
stc
sbbl
and
add
fistps
lret
stc
fisttps
xlat
loop
ficoml
inc
enter
sbb
and
mov
fstps
pusha
cld
pusha
sub
adc
adc
aad
adc
pop
shlb
divl
stos
jnp
dec
push
mov
mov
push
repz
ret
push
icebp
movb
sbb
addr16
lahf
faddl
sub
ret
or
ret
mov
iret
mov
mov
fadds
jno
push
aam
gs
dec
xor
xchg
mov
xchg
iret
sbb
insb
imul
pop
add
push
inc
and
out
add
push
clc
int
loop
aas
adc
fwait
jne
fiaddl
sub
sbb
cli
out
lock
cmp
mov
adc
add
fldcw
mov
andl
rcll
ja
cmp
pop
xchg
pusha
mov
adc
aas
insb
cmp
jp
xchg
inc
pop
add
in
sti
fbld
test
outsl
ja
das
iret
adc
xor
jbe
add
and
xchg
jmp
mov
pop
movsl
sbb
shlb
fsubs
movsl
mov
mov
adcb
pop
pop
test
leave
push
xor
aas
sti
es
aam
scas
xor
pop
add
adc
or
in
rclb
xchg
imul
sbb
stos
insl
or
mov
in
adc
pop
jb
pop
bound
push
imul
std
ret
and
testl
sbb
insb
arpl
int
cmp
pop
gs
jo
push
inc
or
sbb
and
int3
fwait
repnz
xor
test
sbb
cwtl
pop
aas
fiadds
fisubs
repz
pop
mov
push
cs
push
hlt
stos
popf
add
scas
mov
jae
cltd
push
aad
inc
mov
and
add
jno
inc
jno
mov
mov
xor
rcrb
dec
das
das
push
mov
sbb
push
nop
ja
inc
mov
xchg
hlt
mov
test
stos
outsb
jae
xchg
xchg
imul
sbb
nop
xchg
push
mov
lret
sub
mov
add
sahf
lds
cmp
stos
xchg
xchg
cmpsl
outsb
call
and
ja
loopne
clc
repz
pop
ret
sub
mov
jg
pop
sbb
and
or
inc
ficoml
sahf
les
mov
out
xchg
pusha
mov
test
jae
sbb
lret
cmc
jbe
rcll
pandn
vmread
sbbb
jecxz
shl
adc
xor
mov
fstpl
sbb
push
inc
popf
pusha
rclb
mov
add
rcrb
push
stos
cwtl
add
cmpsb
mov
inc
jge
je
cli
xchg
sahf
mov
mov
outsl
sbb
mov
cmpsl
stc
and
push
sub
pop
rcr
insl
mov
jp
or
xchg
popa
xor
xchg
and
shll
jp
movsb
fidivrs
cmp
fisubrl
outsb
push
fisttpl
sub
sub
push
fisttpl
imul
outsb
sbb
and
jne
cmp
mov
xchg
lret
jmp
mov
pop
xchg
outsl
lahf
dec
into
popl
in
mov
pop
rclb
lods
int3
lahf
push
push
add
popf
sub
clc
xor
shrl
sub
push
cmc
push
dec
cwtl
mov
cwtl
cmpsb
cmp
or
mov
scas
and
je
xor
int
cmp
ljmp
jecxz
mov
jo
mov
mov
inc
add
adc
mov
inc
mov
dec
in
arpl
inc
movsl
divb
dec
jae
rcll
jbe
jle
ljmp
subl
xchg
lcall
pop
test
repnz
push
js
cwtl
rorb
mov
cmpsl
sub
pop
cmp
repz
scas
jo
lcall
pop
sahf
popa
and
xor
test
cs
dec
dec
xchg
js
clc
cltd
out
jns
pop
push
xchg
mov
xor
hlt
pop
jns
cmp
jno
cmp
scas
push
shlb
jge
xor
mov
fidivs
sub
dec
cli
push
sbb
int
pop
mov
inc
add
adc
sti
fildl
std
nop
xchg
sub
aad
aam
leave
outsl
or
sub
dec
psubsw
ljmp
xchg
fcomps
rolb
data16
pop
jle
mov
jp
mov
leave
pop
hlt
cmp
inc
sbb
dec
rorb
and
dec
push
push
and
mov
add
cli
aas
cmp
das
data16
mov
mov
cwtl
xorb
roll
loope
lea
cmp
pop
pop
sbb
pop
lds
xorl
xchg
add
jbe
imul
popa
push
enter
fs
push
loope
ja
and
push
iret
ljmp
xchg
stc
add
repz
jge
ret
add
insb
dec
dec
in
movb
xor
adc
pop
mov
adc
jmp
xchg
pop
xor
and
test
loopne
movsl
inc
or
xchg
in
mov
push
push
sbb
mov
scas
lret
stos
mov
aas
inc
gs
dec
cltd
loope
add
into
lea
fdivrs
rorl
cmp
fwait
rorl
or
insb
icebp
mov
scas
repnz
loopne
jmp
and
nop
dec
xchg
adc
into
adc
das
lret
outsb
add
pop
imul
dec
inc
or
inc
and
je
test
lock
ljmp
lods
inc
rolb
cltd
sub
sahf
push
orl
push
adc
cmp
bound
insb
testl
push
sysexit
fcmovnb
in
xchg
mov
mov
fwait
popl
dec
aas
dec
jne
push
cltd
es
adc
xor
or
sub
enter
into
xor
rorb
mov
fstpl
repnz
test
mov
sub
xchg
fucomp
xor
xor
pushf
cs
xchg
imul
icebp
imul
aam
into
dec
aam
add
ret
aaa
ret
imul
bound
push
clc
int3
xlat
shr
jg
leave
inc
pushf
movsb
pop
ret
movsl
push
mov
rcrb
pop
mov
loop
add
in
ljmp
fstl
and
popa
sub
mov
aam
fistpl
jnp
subl
dec
add
lret
jecxz
adc
hlt
lock
jo
push
les
mov
and
adc
fcom
out
mov
out
inc
insb
push
xor
lods
xor
cmp
addr16
lret
adc
push
push
adcl
cmp
lcall
pop
add
outsb
inc
int
outsb
adc
add
sub
popl
sbb
pop
push
in
imul
dec
rclb
ret
es
xchg
loopne
popf
and
sub
andl
and
fidivrs
fdiv
jns
xor
jmp
sub
mov
and
or
popf
aas
sub
ficomps
or
insb
fs
adc
sub
movsb
lods
addr16
jl
int
jge
adc
cld
pop
jge
jne
xchg
leave
je
and
lods
or
lock
aaa
mov
arpl
push
mov
xchg
mov
adc
or
dec
push
dec
das
idiv
mov
stos
jb
loop
repz
cmovg
int
roll
rcrb
and
mov
int3
sbb
lods
xchg
dec
xchg
sbb
arpl
pusha
xchg
mov
jo,pt
xchg
adcl
xlat
nop
pusha
inc
xchg
lock
ds
fstl
pop
and
xor
cmp
and
test
sahf
cltd
sti
and
bound
or
push
dec
xchg
ljmp
jle
aaa
mov
or
enter
dec
decb
and
ja
sub
outsb
lcall
gs
xchg
jb
out
jnp
mov
out
xor
sti
out
es
repnz
out
pop
sbbb
stos
ret
jb
clc
sub
mov
mov
fmull
nop
loope
xchg
test
sub
cmp
sub
xchg
xlat
or
outsb
dec
cmpsl
aaa
je
add
mov
dec
sbb
adc
jle
test
cmpsb
mov
dec
sub
std
sub
insl
jmp
lcall
xchg
sbbb
lds
add
jl
pop
dec
out
loope
ficomps
sub
cmp
lds
xchg
popf
pop
dec
loope
lahf
pop
fcmovnbe
or
fnsave
inc
sub
aam
cmp
cmp
pop
fnsave
dec
mov
mov
repnz
sub
pop
and
mov
jg
pop
movsl
or
jp
mov
mov
inc
jle
les
mov
lret
into
mov
xchg
xchg
imull
sub
filds
push
repz
and
pop
xchg
movsb
jg
jg
mov
insl
frstor
in
dec
mov
add
adcl
jno
and
out
dec
rorl
jnp
test
into
xchg
insl
loopne
scas
push
inc
addr16
std
add
cmpsb
hlt
shll
arpl
inc
mov
jo
dec
outsb
cs
dec
sub
addl
xor
xchg
jl
stc
push
lret
cs
pushl
or
mov
and
out
pop
sbb
jmp
loop
dec
mov
popa
pop
aaa
in
xor
jae
fwait
adc
xchg
pop
adc
iret
aad
jo
or
and
jb
xchg
inc
movsb
adc
xchg
xchg
shl
test
xchg
pop
push
fcmovnbe
mov
xorb
daa
inc
xor
out
and
ljmp
jg
mov
sbb
xchg
mov
rorl
cmp
rclb
shr
inc
xchg
out
rclb
mov
mov
adc
shlb
stos
repnz
cmp
jo
jl
negb
cmp
lcall
les
mov
pop
add
cld
fildl
cli
popa
ret
aad
adcb
pop
pop
mov
and
popf
jl
movsl
adc
scas
shrb
mov
cmp
add
xchg
or
sub
popa
shll
test
jo
add
inc
cmp
ljmp
int3
das
cld
clc
mov
ds
mov
ficoml
js
popl
lds
cmp
lcall
cmp
popa
jne
inc
loope
popa
les
push
fsubs
mov
cmp
inc
rorl
aad
adc
adc
add
pushl
mov
aaa
xchg
hlt
xchg
push
notl
or
jg
jp
cmp
sahf
pop
mov
xchg
lea
insl
sbb
inc
mov
mov
pusha
shr
ljmp
pop
popf
cmpsl
xchg
imul
repnz
daa
loope
cli
jb
inc
xchg
sti
inc
mov
xchg
fistl
addr16
in
dec
xchg
pop
das
pop
pusha
mov
push
cmc
sbb
scas
inc
lret
add
mov
sbb
addl
xchg
fwait
pop
dec
aaa
les
test
fwait
sbb
mov
data16
sub
jnp
xchg
shll
add
aas
and
out
jae
and
frstor
mov
adc
pop
or
mov
dec
ja
xor
test
mov
push
test
jmp
sub
mov
ds
or
push
mov
xchg
pop
xchg
movsb
dec
nop
xor
into
inc
int
in
mov
add
inc
pop
jno
pop
mov
push
clc
repz
ja
int
mov
fdivp
shll
sbb
sbb
push
repnz
add
mov
lret
psubusb
push
fstl
cmp
cltd
mov
xor
xor
xchg
aas
inc
inc
xlat
int
lea
mov
ret
in
push
mov
pop
ret
cmpl
xchg
pop
imul
daa
xor
int
push
sbb
in
inc
ficoml
pop
cwtl
dec
or
sti
roll
inc
jae
cwtl
pusha
repnz
mov
inc
or
pop
sub
popf
push
sti
sahf
inc
mov
les
jbe
and
mov
outsb
jp
rol
lods
das
add
pop
push
adc
movsb
sar
lret
decb
mov
hlt
jge
out
sub
jne
subl
das
xlat
or
es
and
xor
xor
lods
pop
pop
add
sbb
fcmove
pop
jp
dec
ljmp
cmpl
int3
xor
add
inc
jnp
push
mov
sub
subl
int3
sbb
cltd
cld
jo
loop
sub
cmp
sub
sub
decl
jno
enter
dec
xor
bound
sbb
xor
stc
and
movb
cwtl
xchg
daa
push
pop
int
jns
insb
sub
and
jge
xchg
pop
xchg
push
mov
arpl
and
testb
sbb
pop
insb
xchg
test
pop
in
cmpsl
pop
mov
les
push
subl
into
or
fcmovbe
repnz
xor
mov
add
movsl
xor
repnz
stos
inc
jb
sbb
setg
ficompl
adc
into
jmp
pop
add
mov
pop
mov
inc
dec
adc
lds
imul
int3
imul
dec
sbb
stc
leave
dec
test
jmp
push
aam
or
insb
out
call
or
enter
xor
mov
add
cli
test
sub
mov
push
cli
popf
inc
sbb
imulb
fcmovnbe
test
test
int3
push
add
mov
jmp
sti
xor
insl
ret
jno
adc
dec
mov
in
lods
fwait
inc
lds
inc
xchg
add
fs
adc
mov
cmp
push
mov
addl
ficompl
jae
xor
outsb
cmp
cmpsl
mov
ret
xchg
mov
xchg
ja
mov
mov
xchg
xor
dec
cli
fwait
push
lods
or
es
sbb
lock
insb
loop
cmpb
arpl
mov
ljmp
mov
sbb
mov
and
mov
test
mov
cmp
mov
pop
setle
aas
inc
imul
pushf
sbb
insl
scas
jb
movsb
add
mov
dec
xchg
in
mov
cmpl
in
insl
mov
xchg
out
faddp
jno
insb
adc
stos
mov
clc
mov
lcall
pop
popf
adc
jmp
std
cmc
jge
push
fdivs
inc
jmp
mov
add
scas
jge
inc
fidivl
test
add
inc
rcl
add
outsl
dec
mov
movsl
js
mov
cmp
mov
and
in
xchg
popf
mov
incl
gs
add
call
subl
fnstenv
lods
std
ret
mov
fbstp
das
sbb
bound
aam
cmp
jne
mov
inc
rcrl
pop
fcomip
pusha
pop
add
cmp
popf
ret
ficoms
push
adc
mov
cmp
rolb
dec
lds
cwtl
int3
or
dec
jbe
inc
cwtl
loopne
scas
pushf
mov
or
fbstp
shlb
imul
push
pop
cltd
aad
in
add
fnstenv
push
outsl
push
adc
sub
mov
popa
mov
insb
mov
fcmovu
adcl
mov
je
inc
std
and
neg
add
mov
mov
mov
out
lahf
xor
test
sub
jmp
xchg
mov
sbb
mov
lods
adc
inc
stc
dec
xchg
sbb
mov
ret
mov
shr
outsb
push
lcall
mov
fwait
popa
repz
sub
inc
roll
stos
jmp
push
xchg
adc
sarb
jecxz
sbb
add
leave
push
adc
div
inc
mov
or
cwtl
repnz
jno
mov
mull
adc
fildl
push
pop
outsl
stos
call
pop
out
pop
iret
jo
movsb
mov
cld
ja
pop
jg
xor
das
out
icebp
sub
and
je
inc
push
clc
jle
rcrb
notl
jmp
insl
dec
test
loopne
pop
dec
movsb
subl
filds
adc
and
std
stc
jp
lds
in
sahf
fstpl
sub
jecxz
stos
movsl
jecxz
popa
adc
mov
test
add
dec
mov
cmp
add
xchg
push
shld
jecxz
mov
icebp
and
das
adc
inc
std
imul
loope
pop
cld
jb
fstpl
mov
aaa
cs
sahf
je
dec
sahf
loop
into
xchg
in
jo
pop
pop
iret
out
mov
jle
pop
fildl
cmp
add
je
or
cmp
inc
xchg
adc
test
in
cmp
cwtl
mov
sbb
xchg
jns
cld
jecxz
test
mov
or
or
mov
dec
frstor
shll
imul
xor
pop
std
outsl
mov
movsl
rorb
mov
push
add
hlt
mov
sti
xor
sbb
dec
pop
sbb
mov
inc
or
fsubrs
fs
mov
push
cli
lret
push
arpl
mov
dec
xor
test
push
bound
lret
rolb
testb
sub
cmpsb
sub
stc
push
inc
mov
pop
fcmovnu
nop
sbb
adcl
jnp
sbbl
stos
and
sbb
into
or
icebp
mov
mov
filds
insb
jno
push
pop
xor
sbb
call
popa
add
jmp
pop
adc
aam
rolb
fisubs
int3
test
xchg
and
pop
push
std
addr16
je
dec
sub
jg
cmp
jmp
les
out
adc
mov
mov
and
lcall
ljmp
xor
aas
or
sahf
adc
mov
sbb
sbb
pop
add
pop
std
mov
fidivrs
fcomps
addr16
sbb
js
pop
fwait
sbb
jno
js
fcomi
cmpl
push
fcmovu
ja
js
outsb
adcb
pop
ret
cmc
push
ja
scas
inc
mov
daa
push
fcoml
jb
cmpsb
out
or
test
push
lods
lods
xchg
inc
ret
add
or
daa
mov
shl
pop
shl
mov
ss
or
popa
leave
jl
sbb
xor
or
aaa
loope
cwtl
push
pushf
fiadds
imul
sbb
inc
sub
call
inc
mov
jbe
and
orl
jg
cmp
stos
jo
fs
lcall
jmp
or
pop
adc
add
lock
add
xchg
call
push
mov
inc
mov
fldcw
stos
outsb
gs
into
mov
xchg
mov
xchg
inc
xchg
leave
xchg
push
out
inc
or
pop
add
and
test
mov
mov
popf
mov
xor
or
xchg
mov
xchg
pop
stos
or
lcall
sub
aam
jb
cmp
or
iret
stc
pop
mov
sbb
push
lods
andb
daa
pop
fnsave
jno
mov
out
movsb
popa
arpl
jl
mov
outsl
int3
adc
insb
subb
popf
pop
mov
ds
cmp
fdivrs
repz
xchg
rclb
jp
icebp
jmp
push
xor
int3
inc
dec
fwait
lcall
into
sbb
mov
int3
push
sbb
sub
push
dec
insb
cld
push
fstps
pop
test
pop
bound
xor
pop
orb
or
scas
bound
dec
xchg
mov
fwait
es
mov
hlt
pop
jo
sub
xor
mov
scas
and
in
arpl
shrl
push
mov
cli
jl
mov
mov
movsb
xor
jg
dec
or
xor
dec
mov
sbb
xchg
fsubrl
or
and
jns,pt
inc
test
inc
cmpsl
sub
mov
fs
and
aad
lret
mov
imul
jecxz
lods
pop
ja
push
push
push
pop
jp
mov
shlb
loopne
out
pop
jecxz
and
dec
mov
loopne
int
xchg
xchg
sub
adc
dec
and
add
mov
jg
pushl
jbe
call
cmp
or
orb
cmp
sti
xor
or
repz
adc
mov
ds
pop
addl
and
cmp
xor
jno
add
mov
imul
jmp
sub
cmpl
sub
pop
adc
ja
cmp
cmc
cli
sbbb
sub
jae
pop
adc
cs
cld
dec
ljmp
jnp
sbb
mov
lds
xor
sub
pop
lock
dec
imul
cmp
es
cmp
mov
aam
lods
loope
testl
arpl
iret
sbb
popf
inc
add
jle
fbstp
hlt
insb
xchg
sbb
jp
or
jns
push
dec
sbb
adc
push
fstps
lods
pop
sub
xchg
mov
push
pop
mov
xor
fiadds
andl
jle
outsb
stc
mov
in
push
mov
cli
in
aad
push
jb
jb
pop
in
call
dec
out
mov
xchg
idivl
add
adc
add
mov
stos
adc
pop
push
lret
lock
lcall
sub
fists
xchg
lcall
sub
and
stos
fwait
test
xchg
lods
pop
lods
stos
mov
push
or
jne
mov
testb
sti
loop
ds
lahf
or
pop
stos
flds
insl
pop
pop
push
dec
xor
xchg
xchg
outsl
push
insb
pop
test
fmuls
fs
jmp
lock
push
rcrl
shrb
es
jns
std
jo
pusha
fistl
or
add
dec
in
movsl
lock
xor
cmp
rorl
imul
rolb
out
imul
ret
mov
dec
push
xchg
mov
ret
mov
sahf
mov
popl
fs
xor
inc
pop
mov
xor
imul
loope
jle
sbb
xor
jb
and
out
sbb
les
pop
or
jb
mov
dec
fisubl
mov
stc
cli
inc
xor
inc
cmp
push
iret
and
imul
sbb
sbb
je
fisubrl
pop
call
or
test
sub
enter
pop
mov
in
add
daa
sbb
test
gs
pop
mov
cld
cmpsb
fs
aad
je
fwait
enter
pop
cmp
push
jge
pushl
push
mov
dec
insb
sub
fwait
inc
inc
push
sahf
add
dec
lock
dec
ss
pop
lret
push
adc
cmp
dec
lahf
fistpl
push
mov
rol
mul
pop
xchg
test
adcb
iret
js
sbb
imul
add
call
mov
dec
and
mov
roll
push
mov
fldt
icebp
push
push
add
cs
mov
fs
pop
cld
inc
call
lret
dec
sbb
sbb
and
mov
adc
dec
pusha
inc
sbb
lods
test
repnz
inc
xchg
fs
jle
add
test
mov
idiv
xchg
das
mov
ljmp
pop
insl
jge
fs
into
jno
ss
jp
lods
add
ftst
mov
ljmp
leave
fsub
shlb
jge
jmp
ret
pop
add
loopne
out
cmp
jge
dec
cltd
adc
mov
adc
pop
fcoms
inc
mov
movsb
lods
sub
sub
xlat
loopne
pop
cmp
pushf
mov
add
das
mov
pop
sub
flds
pop
sub
xchg
cli
adc
int
cwtl
jecxz
mov
mov
sarl
pop
xlat
int
dec
or
fdivrs
mov
cmp
mov
loop
jb
or
add
xor
ss
inc
mov
lds
mov
mov
out
cld
ja
loop
dec
test
xchg
addl
push
lods
cmp
cmp
adc
fwait
cwtl
xor
shl
subl
cld
fldl
out
pop
add
subb
pusha
gs
std
outsl
xchg
leave
repnz
dec
mov
cmc
outsb
xchg
and
sub
sub
pop
jb
dec
add
nop
pop
imul
dec
xor
fimuls
adc
jmp
xchg
stos
push
cld
add
ficompl
cmp
fsubl
inc
jno
add
pushf
mov
shll
loopne
cmp
addr16
repz
cmc
leave
mov
push
cmp
pop
xchg
xor
bound
sub
shll
mov
aaa
ljmp
test
sbb
cltd
sub
lret
or
add
clc
rcrl
dec
es
scas
and
movl
ds
xchg
in
call
pop
hlt
mov
leave
lcall
hlt
ja
ret
xchg
cmc
lock
ljmp
fisttpl
dec
std
mov
fdivrl
xor
cltd
scas
call
test
mov
stos
js
dec
loop
inc
mov
aaa
push
popa
mov
pop
or
mov
adc
dec
jbe
add
test
js
sbb
inc
sahf
push
stos
out
mov
enter
pushf
lock
cmc
dec
aad
rol
add
and
cmpsb
out
out
int
ljmp
cmp
add
inc
cs
fisttpll
lret
daa
bound
mov
das
jne
fstpl
pusha
and
sahf
inc
mov
movsl
fidivl
jge
fists
test
cmpl
popa
and
scas
adc
movsl
ror
xchg
xchg
aad
xor
outsb
ret
sub
mov
xchg
mov
ja
sub
cmp
mov
fidivl
pop
inc
gs
cltd
addr16
push
add
lahf
lret
lods
in
das
dec
mov
lahf
jo
and
movb
fwait
mov
jnp
aaa
inc
pushf
or
jo
cmp
ret
xchg
lret
lret
sbb
sahf
cmp
inc
enter
ret
mov
push
xchg
inc
ljmp
sub
cmp
nop
sbb
ret
cmp
popa
xor
sbb
jns
jbe
ret
test
push
push
rcr
rorl
mov
imul
add
rcll
fdivr
inc
jns
and
jmp
cmp
out
loop
popa
dec
sbb
or
sbbl
outsb
sbb
shlb
enter
mov
lcall
push
lea
xor
lret
sti
sub
sbb
jle
mov
cmp
lods
sub
jecxz
ss
xor
adc
movb
insl
test
testl
sbb
sub
add
pop
lods
push
sub
mov
std
jns
push
cld
xor
pop
xchg
repz
mov
push
rorl
and
push
dec
mov
jecxz
or
jge
and
stos
test
mov
push
or
cld
xchg
in
push
pop
fs
push
or
mov
ret
jbe
mov
dec
shr
loope
push
push
ret
orl
lods
xchg
lds
negb
movsb
stos
xchg
insb
leave
xlat
popa
inc
jnp
or
jo
pop
outsb
and
fcoms
push
jg
adc
xor
std
iret
mov
inc
pop
adc
cmp
pop
into
in
popf
jp
adc
ds
fbstp
pop
gs
lods
sbb
xor
sub
mov
jae
mov
into
add
shr
jb
sarl
push
lcall
mov
sub
rol
mov
mov
mov
push
mov
arpl
mov
jo
inc
lods
popf
lahf
sbb
repz
fucom
sbb
push
xchg
sub
cwtl
incb
pop
jae
fucomip
inc
sbb
mov
rorl
shl
inc
lret
jns
sarb
fs
xor
shl
inc
icebp
pop
or
pop
cmp
test
and
scas
mov
jno
adc
dec
mov
cmp
add
movsl
test
dec
dec
dec
dec
push
jno
mov
push
pop
loope
adc
mov
out
aad
jmp
inc
insb
mov
xchg
mov
dec
das
aam
sbbb
test
mov
imul
outsb
push
xor
gs
adc
xchg
push
jmp
pop
clc
imul
imul
pop
scas
sbb
popl
dec
into
jmp
jne
jecxz
or
dec
push
clc
pop
les
movsb
into
xchg
or
shl
mov
push
iret
cli
mov
mov
fistl
adcb
inc
dec
jbe
mov
pop
imul
pop
xor
add
jns
cwtl
mov
cs
jmp
mov
lcall
sub
cmp
dec
daa
jmp
add
ja
jbe
int3
rcl
adc
lret
inc
dec
repnz
cmp
add
lds
dec
sbb
inc
fldcw
inc
mov
aaa
leave
mov
arpl
out
pop
mov
fstp
pop
dec
xor
sub
leave
adc
dec
leave
test
fnstsw
pop
sar
movsl
cmp
inc
add
jmp
cltd
push
mov
cltd
mov
sub
mov
mov
adc
mov
cltd
xchg
rclb
adc
pop
in
repnz
arpl
jmp
pop
mov
or
jae
xchg
lahf
out
sbb
lock
cld
mov
pusha
xlat
test
inc
test
ret
mov
jnp
lea
roll
stc
stos
dec
insl
push
subb
pop
aam
lahf
lcall
jbe
sahf
int
add
dec
pminub
push
mov
sbb
push
mov
cmp
inc
sahf
mov
pop
inc
xor
andl
inc
aam
push
sub
push
cli
fcmovbe
pop
call
shll
add
sbb
in
ficomps
das
ret
pop
gs
push
mov
jl
lret
xchg
lds
pop
mov
pop
test
mov
mov
jmp
xchg
jnp
push
popa
jbe
cli
insl
pop
imul
mov
test
push
cmp
fbstp
mov
mov
or
into
repz
pminub
xchg
dec
sbb
loop
stc
out
addb
int
cmpsb
ret
push
dec
mov
sahf
mov
rcll
pop
inc
mov
dec
mov
fwait
mov
aad
xchg
imul
fnstenv
les
jge
cli
xor
jnp
push
fstps
pop
sub
out
adc
push
jo
stc
ljmp
in
xor
div
pop
xor
jae
sub
push
pop
pushf
mov
push
dec
lret
mov
cwtl
pop
lods
xchg
ret
cmp
es
stos
mov
mov
clc
ret
fimull
dec
enter
ss
lods
lahf
mov
ret
inc
sub
xchg
call
aam
icebp
sbb
fcomi
inc
mov
sbb
insb
push
mov
aas
jecxz,pt
iret
fdivrs
imul
rcrl
out
icebp
insl
fadd
xor
and
cmc
jne
sub
inc
stc
xchg
jl
lds
push
jle
adc
iret
ss
daa
cltd
int
fldl
pop
insl
mov
std
int
push
cs
js
mov
std
push
insb
shl
sbb
movsl
movsb
dec
xor
xor
inc
std
lahf
ffreep
pushf
int3
cld
dec
xchg
insb
jbe
dec
ljmp
mov
je
fsubrs
mov
jmp
sub
es
xor
lret
es
lret
jmp
dec
test
dec
decl
mov
sti
ljmp
icebp
out
push
jnp
aad
or
mov
mov
insl
mov
adc
stos
mov
jae
movsb
xor
ss
push
xor
nop
jge
iret
mov
sarl
aas
rclb
test
arpl
mov
test
rcr
jae
in
dec
xchg
ret
int3
jge
inc
shlb
ret
xchg
or
adc
movsl
shlb
push
repz
les
push
or
jecxz
aam
cmp
pop
addl
mov
andl
lock
push
ret
xor
xor
cmpsl
jbe
xchg
dec
mov
int3
outsl
jecxz
pusha
test
inc
sahf
dec
jecxz
sbb
jge
cmp
or
mov
mov
dec
fsubl
out
adc
xchg
or
popa
cmp
hlt
or
dec
push
cs
jb
aas
push
loop
xchg
sbb
jns
shrb
or
insb
stos
jno
sbb
mov
add
imul
inc
adc
lret
repnz
pop
nop
nop
sub
mov
and
sub
pop
sub
daa
or
jg
insl
loop
mov
fld
dec
xor
adc
add
imul
orb
or
push
inc
inc
sbb
sub
lcall
and
sti
pop
aas
into
iret
scas
imul
pop
and
mov
pushf
mov
inc
pop
jmp
addr16
outsb
jnp
and
imul
inc
pusha
xlat
xor
cmp
sbb
cmp
movsb
in
mov
adc
push
pop
push
cs
pop
or
jbe
adc
jecxz
cmp
dec
fstl
pushl
lods
mulb
cmc
test
push
pop
ss
sub
aas
repz
mov
sub
js
mov
outsl
cmp
insl
mov
rcl
jnp
das
add
add
add
in
lods
jne
arpl
movsb
dec
sub
cwtl
dec
mov
mov
jge
fstpt
cmpsb
outsl
cmpsl
jle
dec
pop
jnp
lock
mov
cltd
push
imul
fadd
dec
jge
jae
jno
mov
jbe
push
insb
sbbl
aas
fisttpl
xlat
add
inc
dec
aad
dec
mov
push
iret
ret
mov
fiadds
test
xlat
lret
lret
cmpsl
and
stos
insl
cmp
and
js
repz
pop
xchg
mov
push
aaa
mov
cmc
out
gs
jb
popf
sub
ds
mov
mov
call
mov
inc
dec
lret
dec
and
aad
add
xchg
sbb
jnp
shlb
out
push
cmpsb
bnd
imull
xchg
cld
mull
test
add
addr16
pushf
dec
mov
cltd
cmp
add
test
outsl
mov
sub
and
cmpl
cmp
imul
adc
fbld
inc
fildll
addr16
aaa
pop
iret
test
adc
push
test
sub
pop
jg
dec
mov
mov
icebp
cwtl
enter
cs
orl
cld
pop
lret
daa
dec
inc
dec
dec
xchg
leave
dec
in
fwait
sbb
aaa
xor
jo
pop
and
scas
shlb
xchg
adc
jle
xchg
lds
push
jae
adc
xor
fdivr
lcall
jp
pop
xchg
jns
dec
rcll
mov
popa
pop
idivl
mov
das
add
notl
dec
dec
aaa
inc
or
xlat
cmp
sbb
loope
jne
add
adc
movsb
js
leave
mov
lods
mov
stc
ror
clc
sbb
cwtl
mov
pop
mov
push
xchg
add
orb
fs
add
cmp
xchg
bound
sub
cs
shrb
xlat
xor
outsb
test
inc
jnp
xor
aam
cmc
cld
lock
pusha
pop
in
sub
push
cld
rorb
lods
inc
push
push
pushf
sub
add
out
push
adc
lock
pop
cmpsl
jbe
or
pushf
clc
pop
jl
mov
jb
in
sub
dec
inc
jp
inc
sarl
out
mov
mov
fs
rcrb
xorl
push
dec
sbb
sub
loopw
push
lock
loop
cmp
stos
mov
addr16
pushl
jae
movsb
mov
pushf
xchg
insl
test
aad
lods
mov
pushf
mov
and
ljmp
pop
push
out
subb
jae
mov
fdivs
push
cli
pop
insl
test
ss
jns
sbb
lea
pop
testb
out
mov
in
mov
adc
pop
add
mov
scas
pusha
mov
aas
and
call
repz
into
iret
or
sbb
mov
mov
cmp
pop
push
jbe
out
push
push
mov
pusha
lahf
pop
popa
outsb
in
cmp
cld
adc
mov
into
mov
cld
xor
scas
jne
sub
inc
sbb
push
mov
outsb
test
loop
jge
mov
mov
dec
or
or
add
movsb
lods
xor
fnstcw
mov
aas
lds
negb
adc
aam
mov
je
movsl
scas
and
mov
mov
out
test
lea
iret
ret
clc
jp
fwait
and
pop
push
cmp
pusha
or
shr
sbb
or
lods
popf
outsb
dec
test
or
and
popa
les
or
pop
cmp
mov
or
in
cmc
imul
xor
push
movsb
or
leave
push
inc
push
sbb
aas
inc
je
scas
jnp
aas
call
movsl
int
dec
inc
jg
xor
mov
lds
xor
xchg
xor
inc
in
xchg
cld
insb
jmp
lret
lret
cmpb
or
sysret
cmp
push
popa
aad
lods
mov
mov
mov
clc
pop
test
into
xchg
pushf
lahf
pop
data16
push
jl
aam
adc
subl
fwait
jg
push
popf
dec
xor
mov
cwtl
mov
adc
fidivrl
cmp
fucomp
xchg
ret
rsqrtps
rolb
adc
pop
or
jmp
movsb
jl
jp
inc
ret
adc
idivl
popf
jb
fbstp
sbb
pop
xor
test
push
cmc
xchg
push
sub
lods
sbb
mov
sub
xchg
sbb
lea
adc
outsl
mov
je
push
aas
jmp
mov
stos
sbb
daa
fstpt
cmp
sar
outsl
ret
xchg
mov
mov
push
nop
mov
cmp
imul
and
arpl
test
incb
inc
dec
jg
or
jo
dec
pop
es
mov
add
sub
je
mov
mov
xchg
cwtl
mov
sbb
lret
pop
outsb
mov
and
inc
jl
pop
jb
das
orb
and
mov
adc
dec
fdivr
lds
pop
inc
enter
iret
mov
cmp
les
mov
stos
stos
sub
inc
adcb
or
jg
mov
and
xchg
xor
test
push
call
ljmp
jl
pop
pop
lds
and
push
adc
je
mov
pusha
sbbl
sub
loop
les
movl
ja
mov
and
adc
dec
les
cwtl
shl
gs
mov
pop
and
inc
ret
scas
add
test
fsts
pop
adc
sub
test
les
and
xor
and
jnp
hlt
pop
push
add
add
out
fistpl
jae
scas
insl
inc
imul
add
out
sub
rcrb
mov
inc
sub
push
lret
lods
mov
das
aaa
cwtl
pop
push
push
in
mov
sub
scas
push
cmc
decl
sbb
push
lahf
push
mov
push
mov
das
inc
fiaddl
lds
addr16
inc
xchg
mov
jo
testl
push
jns
mov
pop
dec
jns,pt
loopne
inc
scas
imul
ja
std
pop
pop
sbb
test
insl
push
xlat
or
enter
mov
in
cmp
xorb
push
shrb
out
sbb
mov
fidivs
out
jl
lret
jbe,pn
sub
roll
scas
mov
cltd
test
lret
loopne
and
cmp
in
dec
loope
pop
in
mov
sub
push
cmp
jmp
sub
inc
repnz
aas
inc
in
iret
push
mov
cmpb
push
mov
jbe
rcl
mov
aas
ds
push
fistpl
stc
fcmovnbe
mov
sbb
xchg
out
mov
leave
jno
sbb
loope
cld
jge
mov
outsl
sbb
out
mov
add
mov
jo
clc
testl
out
call
mov
aaa
in
pop
xor
inc
in
or
stos
je
ja
add
add
jle
pop
or
push
aam
gs
xchg
xsaves
arpl
stc
push
push
inc
lahf
outsl
sub
sub
mov
cmp
mov
dec
inc
in
sub
iret
mov
imul
out
mov
dec
inc
test
iret
insb
inc
pop
aam
ret
out
ror
mov
adc
mov
xlat
cli
loopne
sbb
mov
sub
je
lret
sbb
cld
cmpsb
test
ror
les
pop
loope
dec
stos
mull
mov
xor
jmp
shlb
mov
shr
lret
bound
cmpsl
cld
repz
stos
loope
imul
add
scas
ja
mov
popa
leave
rorl
in
jo
clc
rorl
dec
pop
dec
push
mov
xor
push
cmp
ss
xchg
fidivs
mov
and
mov
leave
pusha
cmp
dec
jbe
mov
outsb
shll
popa
incl
cwtl
adcl
out
fyl2x
xchg
xchg
popf
and
ja
mov
lcall
std
add
cmp
push
lcall
inc
mov
mov
in
jnp
inc
fs
inc
sub
mov
jno
add
repz
mov
push
fcomps
in
ret
ret
icebp
cmp
push
popf
les
icebp
cwtl
rorl
inc
pop
adc
cmpl
stos
pop
and
stos
lods
imulb
imul
jns
add
sti
dec
xchg
rcll
adc
xor
cmpsb
cmp
adc
lods
repnz
cmc
sub
add
or
dec
mov
xchg
jo
gs
outsl
push
adc
push
jne
clc
jnp
mov
lods
mov
mov
pop
push
sub
popf
mov
out
inc
mov
ss
sub
outsl
int3
xchg
push
scas
dec
in
mov
out
fnsave
mov
stos
or
repnz
sbb
aam
psubusb
inc
push
jae
getsec
loope
ja
push
pop
mov
jnp
jns
xchg
and
cmp
js
mov
pop
push
hlt
out
out
mov
cli
inc
divl
movsl
aad
mov
shlb
and
and
or
sarl
cmp
mov
insb
or
icebp
ret
testl
mov
not
aad
cmp
fdivl
fists
in
mov
cmp
sahf
shlb
dec
stos
scas
mov
out
out
pop
and
cmc
das
dec
test
xchg
scas
pop
jne
jp
rolb
sub
fs
pop
pop
inc
or
sbb
push
ljmp
xchg
mov
sbb
das
push
mov
jmp
adc
into
mov
fucomip
jg
jnp
lea
lds
mov
pop
xor
jns
mov
pop
jb
inc
mov
stos
push
add
push
dec
mov
pop
jle
lret
jge
mov
xor
imul
lods
ljmp
cmp
mull
fimuls
sub
mov
jne
dec
repz
xchg
bound
adc
jecxz
adc
xor
pop
cld
lods
mov
push
dec
mov
xchg
cwtl
cmpsb
mov
aas
xlat
xor
addl
add
mov
stc
push
loope
fwait
xlat
sub
jmp
or
movsl
es
sbb
iret
inc
repnz
jge
xchg
incb
xor
js
int
cmp
mov
daa
inc
je
out
sbb
in
dec
inc
jp
and
xlat
mov
add
out
jnp
sti
mov
pushf
testl
cmpsl
cld
lods
sub
sbbb
and
inc
push
pop
sti
repnz
fidivrs
lcall
leave
xchg
jecxz
ret
jnp
sbb
xor
sbb
dec
icebp
cmp
inc
test
or
mov
fstl
push
nop
mov
andl
test
cmpsb
stos
push
cld
cli
push
xor
mov
es
xchg
cmpsb
leave
mov
stc
and
add
mov
adc
fs
add
sti
loope
popa
movsl
inc
popa
ret
aaa
jge
sub
popf
es
pop
adc
shlb
call
pop
or
shrb
out
or
sub
repz
and
xchg
sti
testb
pop
call
sub
xor
fwait
movsb
add
jnp
cmc
pushf
pop
pop
mov
imul
pushf
mov
xlat
icebp
mov
aam
je
movsl
pop
sub
sbb
mov
xchg
clc
outsb
lea
inc
adc
jmp
das
and
movsb
mov
arpl
and
les
stc
mov
xorl
adc
inc
int3
movsl
add
stc
mov
mov
add
bound
jbe
mov
mov
inc
sbb
mov
jae
xchg
xor
jle
std
pop
test
icebp
xor
mov
mov
shl
mov
shl
test
mov
jecxz
jne
pop
ds
xchg
or
mov
sti
mov
inc
mov
out
xchg
scas
push
gs
push
cmp
pop
jbe
cli
in
lret
fisttps
or
ljmp
pop
or
and
adcl
pop
sub
clc
je
rolb
mov
push
push
mov
cli
sarb
lret
sbb
out
inc
inc
or
shr
jge
cmp
jg
in
lcall
inc
popa
outsl
add
icebp
test
stos
jne
jmp
leave
inc
push
fldt
outsb
pop
add
inc
imul
out
adc
fucomp
mov
mov
cmp
xor
inc
or
xchg
xchg
aas
mov
cmp
jmp
inc
dec
push
stos
sbbl
adc
and
out
mov
and
andl
lods
int
inc
jbe
shrb
insb
mov
repz
dec
cs
test
fsts
lahf
cmpb
leave
inc
leave
adc
sub
ds
mov
mov
cmpsb
xchg
int3
mov
je
or
jne
jl
mov
inc
xor
fwait
mov
push
lds
jmp
push
enter
mov
pop
ljmp
ljmp
pop
test
pop
adc
cmp
lods
and
ja
push
rcl
pop
or
pop
and
mov
jmp
sbb
cmpsl
mov
lock
push
jbe
addl
add
mov
pop
xor
xchg
mov
loopne
xchg
arpl
fidivrs
int3
dec
iret
fisubrl
dec
lea
lret
jo
rcrl
repz
add
scas
orb
mov
inc
xchg
mov
repz
mov
in
push
xchg
rcll
push
outsb
mov
data16
push
fidivrs
cmpb
adc
ret
mov
mov
xor
addr16
pusha
xorb
or
dec
and
insl
pop
sub
pop
test
adc
loop
and
jbe
adc
test
and
daa
jmp
insb
xor
movsl
add
cltd
icebp
scas
adc
sbb
mov
lds
adc
in
cltd
push
mov
stc
mov
jmp
aam
and
lcall
sub
aam
hlt
repnz
cmp
or
rcr
sub
mov
pop
sar
nop
dec
pushf
adc
jge
nop
jg
push
cmp
sub
mov
out
inc
icebp
push
xchg
imul
mov
in
add
loopne
mul
in
out
pop
aad
frstor
lret
or
movsb
inc
aas
out
pop
fdivrl
and
test
mov
ja
cmp
jnp
sbb
mov
pop
rcrl
inc
daa
xor
sbb
add
aas
out
insb
jno
btr
xor
clc
inc
imul
fimull
add
setp
xlat
mov
jb
testb
loope
repnz
pushw
or
and
pusha
push
mov
mov
or
add
jmp
lds
pusha
mov
dec
in
dec
into
js
mov
or
dec
outsb
lods
mov
fstpl
inc
cmp
sbb
push
pop
lret
cld
lcall
cmp
fimuls
pop
push
pusha
gs
cwtl
push
pushf
mov
mov
dec
inc
mov
add
xchg
inc
push
and
hlt
pop
aam
push
xchg
clc
adc
lods
cmp
xchg
hlt
xor
inc
rep
mov
sbb
jmp
adc
or
inc
push
cmp
pop
cmp
mov
mov
ret
cmpsl
das
dec
test
enter
fistps
dec
mov
out
sar
inc
sub
hlt
clc
add
xchg
bnd
push
sbb
gs
add
ficoml
pop
dec
lret
je
pop
push
sbb
je
mov
pusha
sub
add
sbb
jmp
mov
pushf
cmpsb
in
and
fisubs
inc
fistl
dec
dec
popf
lahf
cltd
mov
xchg
stc
push
clc
leave
imul
insb
and
into
mov
mov
dec
jmp
je
pop
sbb
jecxz
mov
inc
jb
ds
sti
inc
cmp
xchg
lea
inc
push
iret
cmp
xchg
ljmp
hlt
ja
hlt
xor
arpl
enter
sub
std
or
or
enter
push
push
or
repnz
test
and
sub
loopne
fisubl
pop
es
icebp
xor
out
jbe
add
jp
and
jp
push
jmp
adc
dec
adc
sub
and
mov
mov
pop
aad
and
jmp
xchg
xor
xchg
pusha
lcall
out
and
loopne
pop
adc
adc
sarl
push
insb
sbb
adc
out
jo
loop
aam
add
repz
mov
mov
scas
addr16
xlat
jb
rolb
pop
scas
fisttpll
cmp
stos
and
push
xchg
ret
scas
jnp
fldcw
xchg
insl
jbe
ret
repz
jno
insl
xchg
in
lcall
ljmp
imul
push
nop
inc
cltd
sub
xor
mov
lret
and
int
rorl
movsb
dec
push
bound
xor
rep
ficoms
jmp
ljmp
xor
sub
add
adc
ret
dec
inc
aaa
pop
in
add
sbb
cmpsl
into
xor
push
fdiv
push
jle
add
or
js
outsl
loope
pop
inc
sub
xchg
lret
cmp
and
and
aad
es
pop
mov
push
daa
sub
dec
add
jl
shrb
mov
nop
or
ret
adc
lret
mov
movsb
adcb
cli
and
push
pusha
xchg
hlt
dec
fdivrl
pop
notb
movsl
in
pop
ljmp
test
xchg
iret
lret
sub
shlb
int
cltd
pop
int
dec
shlb
lret
push
xorl
add
inc
loope
push
push
dec
imul
or
mov
js
add
push
das
add
jmp
shlb
gs
jns
adc
bound
or
adc
or
lret
out
fs
jle
loopne
outsb
sbb
lcall
repz
in
jg
xchg
ror
adc
arpl
cmp
pop
pop
mov
add
pop
mov
int3
pushf
sub
and
push
adc
repnz
jo
and
icebp
shl
shll
mov
xor
pop
add
pop
pop
or
scas
shlb
cmp
fs
sbb
xor
scas
mov
xchg
pop
pop
aam
dec
ja
pop
pop
dec
fsubs
and
jecxz
pop
pop
rclb
enter
jno
loopne
popf
inc
adc
xor
loope
lods
jmp
pop
jmp
lahf
dec
inc
inc
in
add
sbbb
fs
ret
mov
cmp
jl,pt
mov
rcrl
lret
ss
or
ss
rolb
das
into
mov
dec
icebp
imul
je
add
cmpsb
pop
pop
mov
fbld
xchg
lahf
insb
frstor
jecxz
addr16
mov
sub
in
ss
jne
js
mov
pop
aaa
imul
push
lods
inc
dec
add
fstps
shlw
std
dec
mov
outsl
rclb
shlb
fistpll
jno
adc
sahf
add
pop
pop
and
bound
frndint
int
push
mov
rorb
mov
int
loopne
sub
mov
push
lods
lods
ret
cltd
sbb
pop
mov
push
inc
jb
xchg
and
rcr
cmp
leave
pop
enter
mov
cli
xchg
int
rolb
sub
inc
sub
cmp
cmpsl
daa
fnsave
call
cmp
inc
pop
mov
fmul
mov
in
mov
adc
cltd
cmp
mov
jp
sbb
lret
movsl
mov
lret
cmp
cmp
sbb
xorb
sbb
push
icebp
addr16
pop
jecxz
push
inc
push
cli
aaa
enter
mov
ret
mov
ret
push
std
push
pop
nop
je
out
and
mov
xor
jp
sbb
mov
mov
push
repnz
sbb
and
jle
push
movsb
xchg
mov
mulb
in
and
inc
pop
sbbl
xchg
adc
adc
adc
mov
rcll
insb
push
int
lea
enter
out
sub
sar
arpl
jge
mov
out
sarb
into
pop
push
xchg
pop
dec
mov
fwait
ret
or
or
test
add
addl
stc
gs
mov
mov
sete
enter
iret
notb
adc
or
clc
dec
stos
mov
sub
lret
mov
inc
sub
lds
add
jnp
jno
mov
mov
mov
gs
adc
test
mov
xor
pop
lcall
les
ja
push
or
pushf
out
cwtl
cmp
mov
inc
mov
jb
or
push
cltd
cmp
loope
popl
icebp
pusha
clc
test
enter
mov
add
mov
in
mov
scas
sbb
xor
mov
sub
clc
push
repnz
icebp
and
int3
fs
loope
test
pop
push
rorl
pop
ret
mov
xor
xchg
int3
xchg
jle
mov
inc
sahf
sarl
and
testb
dec
inc
int
jp
jecxz
add
and
or
inc
fwait
dec
push
sbb
inc
jge
insl
les
aam
aad
clc
mov
loop
loope
loopne
dec
cmp
cltd
es
out
fistps
and
pop
fildl
in
xor
das
in
pop
out
push
mov
outsl
add
sub
aad
out
jbe
and
div
jne
fs
cwtl
fcomp
jle
mov
xchg
pop
shl
lods
cmpsb
and
cmp
mov
push
xor
or
pop
xchg
mov
dec
mov
out
cmp
lods
mov
push
inc
sub
popf
add
push
stc
mov
mov
out
lahf
dec
jno
jle
fidivrs
mov
xchg
int3
and
leave
xchg
mov
es
sub
dec
cmp
adc
loop
enter
adc
test
in
rcrl
cmp
mov
mov
stc
and
jg
xor
cmp
stc
sbb
cmp
pop
adc
in
add
outsb
sub
cmp
stos
mov
pop
xchg
xor
jmp
stc
stos
cmp
cmp
pop
inc
sahf
jno
inc
push
es
xor
mov
scas
lock
outsb
mov
jge
or
loop
repnz
in
or
in
or
icebp
mov
mov
rorb
inc
mov
lret
dec
nop
fstp
lcall
mov
fwait
adc
jg
jne
dec
adc
mov
jb
inc
loopne
sbb
das
arpl
test
jnp
loope
lock
fst
sahf
in
sub
int3
sbb
imul
pusha
mov
aam
xor
inc
shlb
and
push
xchg
mov
cwtl
stos
jg
scas
pushf
adc
cmp
pop
cmp
shll
in
and
fisttpl
ja
mov
repz
pop
and
jp
cmovle
push
push
xchg
mov
dec
lret
sub
xor
das
push
jge
jmp
mov
stc
lds
mov
push
sub
push
movsl
fisubrs
aas
adc
cwtl
sbb
mov
push
aad
rcrb
lods
mov
cmp
lret
mov
inc
adc
enter
push
xchg
ret
mov
add
mov
les
mov
aam
inc
and
hlt
inc
je
jmp
outsl
enter
lret
lret
js
outsb
loope
ja
jge
loope
insb
add
ljmp
sub
jmp
or
inc
stos
xchg
jns
mov
mov
inc
inc
jbe
pusha
fsts
mov
ds
clc
in
mov
notl
fs
rclb
gs
xchg
cltd
dec
outsb
or
push
mov
inc
jnp
in
fldt
jmp
in
xor
sub
dec
add
aas
nop
push
lock
inc
sbbl
inc
popa
lcall
mov
insb
icebp
inc
mov
add
sti
cwtl
and
lock
out
mov
inc
and
sbb
arpl
jnp
xchg
les
inc
sub
aas
push
rolb
out
cs
dec
mov
xor
faddl
adc
mov
out
push
cmp
sarl
cmp
mov
inc
cmp
cwtl
sbb
lds
inc
sbb
orl
mov
xchg
jmp
call
scas
insl
das
jmp
pop
scas
xor
roll
pop
cmc
ficompl
and
xor
jg
push
cmpsb
cmpsb
aas
mov
pop
aad
sbb
out
mov
repz
sbbb
sbb
pop
in
fidivs
popf
ficompl
mov
filds
ret
insl
jmp
leave
push
aam
pop
cmpsl
sar
ror
sbb
into
jl
sbb
ljmp
pop
push
test
sbb
jbe
xchg
mov
ficoms
lcall
mov
loopne
mov
lahf
sub
stos
stos
pop
pop
dec
pop
pop
mov
jae
cmp
ds
adc
mov
mov
data16
and
jecxz
leave
ja
repz
pushf
and
cmpsb
aas
out
es
xchg
adc
imul
inc
decb
and
ja
outsl
jae
sub
jno
das
add
fistl
test
inc
gs
mov
in
popa
inc
stos
jne
inc
test
inc
cwtl
add
cmp
rcr
cmpsb
push
popa
test
loopne,pn
mov
call
cmp
ret
imull
daa
into
ficoms
sub
aaa
fcomps
shrl
adc
sbb
and
lret
aad
jne
dec
out
aad
ret
out
aas
xchg
and
mov
adc
pop
es
bound
push
inc
ficompl
dec
xchg
seta
fnstcw
xor
repnz
adc
cmp
lds
sbb
mov
ljmp
icebp
fiaddl
mov
scas
push
dec
inc
test
movsb
sbb
into
test
mov
popa
xchg
cmp
and
xchg
je
jo
sub
jg
xchg
add
out
orl
add
cmp
and
stc
xchg
pop
mov
dec
imul
sbb
ljmp
jns
aas
push
pop
add
test
cmp
in
shlb
mov
sahf
mov
jl
pop
and
lock
ficompl
inc
dec
add
gs
xor
cmp
popa
xchg
sub
and
cli
dec
add
dec
pop
iret
or
fisttpl
test
push
aad
add
sbb
lcall
mov
ds
mov
mov
lods
xor
mov
xchg
jmp
jecxz
adc
outsb
jmp
adc
xlat
scas
mulb
aam
xchg
in
popf
lock
outsl
out
test
mov
test
popf
call
xorl
test
jge
lcall
push
inc
jns
push
jmp
pusha
rorl
adc
flds
fs
dec
inc
fnstenv
pop
sub
aaa
aam
cltd
jne
xor
xor
div
out
dec
fstps
add
add
adc
push
push
rcrl
inc
adc
stc
and
pop
ljmp
inc
sub
cmp
mov
std
sbb
pop
in
idivb
lock
xor
out
mov
sbbb
pop
mov
movsl
xchg
mov
jnp
cltd
sbb
imul
inc
mov
xchg
sti
jp
leave
rcll
into
rcrb
jecxz
outsb
inc
les
jp
cli
dec
fidivl
jne
outsb
cwtl
or
xchg
mov
call
inc
add
push
dec
cld
mov
jnp
aas
xchg
loope
adc
call
jmp
enter
dec
mov
outsl
cmpsb
popf
xchg
xor
sub
or
sbb
fsubr
jnp
int3
sub
xlat
std
addb
ljmp
mov
leave
popa
ret
sub
lds
fmull
popf
pop
inc
rorl
rcr
adc
pop
mov
adc
lods
sbb
jl
and
or
movsl
cmpsl
sub
hlt
sti
jmp
dec
sti
inc
fadds
fsubrs
fistps
scas
mov
sbb
test
call
lea
repz
xchg
out
int3
insb
arpl
testl
or
mov
fadds
jl
pop
out
fidivs
stc
and
negl
sbb
fucomip
mov
movsb
cmp
imul
jne
popf
mov
rcr
adc
mov
jno
add
lock
jmp
xchg
pop
xor
inc
add
or
lds
mov
mov
fnstsw
inc
or
cltd
out
loope
adc
xchg
stc
push
mov
es
sahf
lahf
test
jp
orl
adcl
mov
repnz
sbb
shll
cmp
jae
test
adc
cwtl
pop
jbe
mov
pop
fstps
in
in
arpl
ds
mov
std
mov
and
dec
popl
cmpsb
arpl
jmp
pop
dec
cmp
xor
stos
lret
xchg
pop
jne
aas
push
lret
cmp
sbb
sub
iret
cmovae
xchg
dec
stos
xchg
jno
mov
or
fs
loop
mov
push
pop
addr16
inc
lea
xchg
fistps
repz
int3
daa
loop
aam
faddl
inc
movl
pop
into
xor
test
lret
inc
add
daa
dec
pop
std
mov
outsb
popl
jp
loop
mov
cmpsl
xchg
push
ret
sar
sbb
cmc
or
orb
insl
inc
ss
xchg
ds
jbe
xorl
lods
lcall
fbld
lea
cmp
lds
enter
adc
in
lock
imulb
jne
std
push
or
movsb
mov
push
xchg
in
jns
out
rcrl
push
dec
stos
cmp
xchg
add
decb
scas
aad
lcall
rcrb
outsl
mov
cmpsb
xchg
in
dec
dec
test
lret
in
out
xchg
sub
subl
in
dec
xchg
ret
data16
into
cmp
adc
cmovne
out
inc
enter
xchg
fdiv
mov
es
out
test
test
pop
xor
les
lock
dec
loope
arpl
xchg
ss
push
pop
sbb
rorl
popa
insl
mov
push
adc
inc
pop
mov
mov
int
and
sub
insl
insb
xchg
bound
mov
shrl
sub
outsl
ss
icebp
aam
push
push
imul
in
popf
addr16
inc
cmp
addr16
sub
pop
inc
in
sub
xorb
xchg
roll
dec
push
xor
cmp
test
mov
dec
xor
mov
cmp
out
xchg
inc
mov
mov
aas
scas
xchg
movl
mov
iret
mov
popf
adc
scas
xor
push
movsl
andb
fldpi
xchg
dec
mov
adcl
pop
sbb
jno
clc
xchg
lock
add
mov
out
xchg
cmp
fldt
xor
fucom
jge
cmp
shr
stos
sub
nop
sahf
es
pop
or
stos
sub
cmc
cmp
daa
shrb
std
adc
out
jle
or
pop
mov
mov
mov
mov
sub
push
gs
mov
mov
xchg
fcoms
dec
dec
movl
or
sbb
mov
cltd
dec
xor
popf
mov
jae
add
ja
jne
cmp
jbe
jl
sbb
push
mov
push
push
hlt
cmp
cwtl
mov
jmp
inc
dec
addr16
mov
aaa
int3
mov
jb
and
and
es
into
mov
sub
push
in
xor
imul
cltd
pop
das
adc
test
cmp
adcb
test
jl
out
jne
sbb
mov
sti
nop
cmp
inc
add
cltd
inc
push
repz
jo
inc
sub
cmp
mov
mov
hlt
je
hlt
jecxz
pusha
xchg
js
cmp
or
rcrb
mov
inc
jge
xchg
sbb
sbb
mov
mov
repnz
negl
jl
aas
and
call
mov
sub
sub
inc
dec
popf
sti
insl
cmp
adc
movsl
jb
mov
fnstsw
and
and
mov
push
mov
in
in
mov
push
mov
idivl
mov
mov
insb
dec
pop
jnp
pop
ficoms
and
push
in
inc
loope
aaa
jge
xchg
repnz
lcall
xchg
int3
scas
xor
add
mov
hlt
jp
outsb
adc
xor
loope
js
lds
xchg
mov
adc
sub
insl
xchg
hlt
loopne
mov
cmc
ds
xor
test
loope
sbb
dec
notl
mov
and
mov
loopne
sbb
or
sahf
call
and
rcr
lock
movsl
mov
jns
sub
pop
lret
out
scas
lcall
mov
cs
cld
cmp
and
jno
cmp
dec
and
fidivrl
pop
sub
ss
fisttpl
arpl
pushf
out
pop
push
pusha
leavew
in
xor
sbb
movsb
mov
iret
clc
jno
mov
push
lret
dec
push
xchg
adc
sbb
cmpsl
fidivrs
int
es
pop
jbe
mov
es
sub
sub
mov
shlb
mov
arpl
sbb
or
pop
fisttpll
xchg
add
rcll
or
lahf
dec
cmp
lods
xchg
pop
fistl
out
fs
pop
mov
and
mov
sub
lcall
or
sub
sbb
xchg
fmul
mov
fcoms
outsb
or
cli
cli
dec
insb
xchg
pop
xor
sub
mov
arpl
push
add
les
xor
adc
pop
jmp
pop
push
and
incl
shll
cltd
mov
dec
ret
mov
mov
js
pop
cs
inc
sti
adc
enter
and
lock
loop
pop
jmp
jns
test
andb
sub
mov
mov
popl
pop
popf
cmc
in
in
lds
and
push
mov
xor
cltd
nop
js
xchg
std
and
fidivs
dec
pop
mov
inc
push
es
xor
test
jmp
fldcw
loop
pop
cmpl
lock
pop
loop
push
aad
xchg
jo
nop
ss
ljmp
rcrl
sbb
mov
mov
mov
fstpl
sub
stc
inc
jbe
xchg
mov
jnp
cmp
mov
dec
fldcw
xchg
xor
and
iret
rol
in
int
jne
adc
xor
mov
xchg
outsl
rcrl
xchg
ret
outsb
and
movl
sarl
lsl
sbb
popf
sbb
jg
dec
xchg
dec
sub
pop
sbb
test
dec
cmp
ss
pop
cmp
loope
lcall
inc
and
inc
fstps
add
test
call
test
outsb
inc
aaa
test
test
arpl
or
jb
xchg
or
mov
das
adc
pop
adc
test
sbb
and
pop
dec
mov
add
out
call
sarl
ja
jb
out
pop
cmc
inc
jecxz
or
mov
cwtl
repz
xor
mov
cltd
mov
fnstcw
mov
imul
arpl
mov
jp
mov
aas
imul
mov
inc
xchg
mov
sahf
cld
and
jg
test
loopne
sub
arpl
call
cmp
addl
sahf
push
imul
jge
les
js
filds
xor
arpl
xchg
dec
pop
pop
push
sub
mov
sub
rorl
insl
mov
add
add
push
pop
test
les
jae
or
je
sub
push
nop
sub
mov
push
stos
inc
arpl
sbb
aaa
or
and
popa
lds
mov
adc
push
jecxz
inc
cwtl
push
inc
xchg
mov
lahf
cs
imul
dec
daa
xchg
leave
mov
div
add
mov
mov
mov
mov
repnz
shlb
mov
jbe
sbb
cwtl
xor
xor
cmp
xchg
loop
fisttpll
ret
fs
sub
add
jecxz
or
fldz
cmp
inc
fcmovnb
repz
mov
movsl
push
rolb
cli
shll
dec
out
adc
dec
imul
sub
sub
inc
push
mov
push
mov
and
push
stc
sbb
popf
hlt
pop
and
or
inc
pusha
cld
pop
aaa
push
xor
cmp
aaa
jg
aam
xchg
shrl
shrl
xchg
movsb
ret
push
sub
arpl
iret
or
xchg
into
test
pop
mov
pop
int3
sub
ret
insb
inc
cmpsl
outsl
jecxz
bound
push
orl
popf
scas
push
lea
cmp
push
insb
ror
pop
jns
xor
js
sub
or
in
loope
adc
rorb
mov
sbb
pop
mov
push
push
mov
inc
ficompl
add
and
cmp
jmp
jne
js
add
sub
inc
mov
sahf
mov
xor
movsb
movsl
sub
sbb
repz
xor
xor
push
jmp
and
fmuls
dec
xchg
pop
cmp
sub
lahf
adc
push
popf
or
movsl
add
addr16
mov
sarb
mov
jnp
cli
push
push
and
flds
cli
repnz
outsl
imul
imul
cmpsb
in
lods
fstpt
adc
fiaddl
loopne
mov
lahf
out
into
jb
aad
mov
or
pop
cmc
push
xor
fidivrs
arpl
pop
mov
push
xchg
xor
fldt
int3
cmc
mov
cmpsb
clc
pusha
jnp
adc
adc
push
inc
jmp
aam
xor
adc
insl
divl
call
mov
push
popa
jl
fs
push
rcrb
push
ja
and
xor
mov
test
pop
jne
outsb
and
dec
xor
ja
int3
call
lods
shlb
sahf
sub
mov
iret
je
sarl
push
cmp
enter
dec
push
cmp
xchg
mov
xchg
int
jb
sbb
mov
jecxz
lock
jle
rcrb
cli
inc
mov
fisubs
add
or
mov
ss
lods
out
lods
out
leave
fwait
mov
jnp
subl
das
xchg
xchg
lods
mov
pushf
pop
les
jge
push
icebp
js
xor
pop
dec
cmp
mov
popl
sbb
adc
jp
push
adc
mov
test
xchg
fs
adc
push
std
ret
fs
push
jbe
xor
push
jle
pop
loop
cltd
dec
pop
sub
mov
pop
rcrb
sahf
divl
xchg
sbbb
cli
adc
decl
and
fsubs
out
mov
mov
mov
sub
inc
pop
mov
in
sbb
add
sub
cmpsl
nop
xorl
and
pop
dec
out
stos
hlt
inc
lcall
fwait
add
jle
lea
notb
jmp
mov
dec
fidivrl
jg
adc
ret
xchg
sbb
mov
mov
fcoml
imul
push
fucom
push
sub
scas
jb
inc
jno
xchg
cmc
add
sub
cmp
in
pushf
repz
or
mov
divb
lock
cmp
mov
dec
fildl
xchg
push
dec
push
in
imulb
push
jns
push
sbb
ss
shll
rclb
test
sub
das
push
jmp
mov
sbb
or
sti
inc
mov
cmp
and
stos
pop
test
xchg
and
sub
jle
push
test
jb
je
jg
xor
mov
xchg
inc
inc
sarl
stos
repnz
leave
nop
inc
mov
inc
and
mov
adc
cli
fdivs
imull
hlt
mov
daa
lock
ror
or
mov
inc
push
jmp
fdivrl
sbb
cli
inc
in
mov
jne
mov
testb
and
sub
shlb
jle
pop
xchg
xchg
ret
aam
fidivl
jo
sub
xor
gs
insl
out
insb
hlt
push
sub
jmp
inc
jnp
lods
jae
aam
and
outsb
push
push
iret
dec
mov
add
inc
jmp
test
mov
hlt
dec
rorl
mov
jae
js
or
data16
ss
pop
dec
clc
nop
mov
jo
dec
daa
pop
pop
hlt
cld
inc
div
mov
jle
aad
inc
cmc
mov
pop
xlat
lods
push
pop
xor
iret
inc
mov
iret
icebp
in
push
insl
or
test
and
adc
shll
xor
xchg
push
xchg
push
pop
out
sbb
and
xor
pop
imul
in
outsl
ja
jo
sti
add
push
aam
mov
rcr
cmp
pop
imul
or
add
cs
out
push
addl
fldt
inc
pop
inc
mov
jmp
adc
push
xchg
or
into
sti
mov
sbb
out
mov
sbb
mov
jae
mov
push
fs
daa
int3
xor
jg
fs
test
mov
jno
mov
sub
pop
lds
fs
cmp
es
or
outsl
daa
adcl
xor
xchg
adc
inc
jmp
mov
dec
repnz
or
bound
add
jbe
in
leave
and
and
mov
push
test
out
sbb
rorb
jo
loopne
cmc
mov
ret
daa
cld
sub
sbb
xor
dec
pop
popf
jb
xor
jae
sbb
mov
fbstp
sti
fs
jne
scas
adc
pushf
and
outsb
out
int
aam
jae
pop
lret
pop
xchg
stos
adc
es
rorb
adc
inc
outsb
dec
xchg
mov
add
jns
adc
push
dec
jmp
add
sbb
mov
out
adc
aam
nop
mov
push
sbb
imul
std
and
pop
push
in
imul
les
nopl
mov
aas
in
movsl
loope
pop
les
scas
mov
xorb
pop
lret
mov
in
dec
jae
mov
pop
and
test
push
sbb
sbb
mov
pop
adc
xchg
call
fnsave
mov
bound
jle
repnz
mov
add
and
and
xchg
pop
cwtl
hlt
sub
into
cld
and
int3
lock
push
pop
ficoml
and
rclb
or
loope
lds
es
xor
and
sbb
inc
leave
lea
sub
gs
fimuls
in
or
call
mov
cmpsl
xchg
jo
imul
add
cwtl
scas
jb
push
cmpsl
movsl
add
fwait
add
adc
insl
cltd
cmp
jo
cmc
pushl
jnp,pt
push
pop
sub
push
add
xchg
shlb
pop
loope
orb
movsb
inc
pop
sub
clc
lods
movsb
aad
xchg
push
push
and
jge
movsl
dec
ja
stos
push
ss
and
inc
fstps
inc
pop
jns
jns
pop
dec
mov
scas
cmpsb
negb
dec
xor
jbe
roll
inc
and
cltd
mov
sbb
data16
ss
ficompl
pop
loope
aas
jle
sbb
cltd
dec
mov
enter
xor
push
push
enter
fimuls
icebp
cmp
lret
pop
ss
xchg
test
xchg
and
loope
jb
xor
addl
sbb
push
lret
jg
xchg
lock
sub
push
stc
out
or
outsl
jno
mov
ljmp
adcl
push
std
pop
cld
std
mov
sbb
fadd
leave
sbb
roll
fimull
lcall
js
fcomps
adc
push
mov
push
pop
inc
insl
mov
rcrl
adc
xchg
mov
cmpsb
scas
les
enter
cmpsb
add
xor
test
adc
out
imul
mov
lcall
mov
scas
shrw
out
cmp
sub
mov
mov
adc
push
test
push
add
fstps
dec
aas
enter
jbe
or
xchg
imul
dec
test
fndisi(8087
test
loope
scas
sahf
mov
push
dec
mov
and
mov
clc
mov
mov
repz
mov
sub
jle
or
loopne
xlat
addb
repz
movsb
jl
xor
push
xchg
xor
adc
negb
jp
aaa
xchg
dec
shll
leave
mov
pop
cmp
aas
cmp
add
xor
jl
inc
pop
stc
pop
cmp
mov
loope
ss
ja
mov
jge
sub
negl
dec
pop
cmp
adc
addr16
xchg
mov
xchg
stos
hlt
pop
orb
push
fisttps
enter
loopne
or
ja
sub
into
repnz
dec
mov
test
out
jnp
loop
ds
loop
cmp
push
pop
jle
push
cmpsb
mov
mov
cmp
hlt
cmpsb
xchg
dec
outsl
cmpsl
daa
adc
fstp
and
jmp
push
jns
into
push
pusha
nop
incl
dec
mov
repnz
sub
jg
push
lock
clc
in
shlb
adc
xor
aas
into
je
bound
stos
or
movsb
sbb
lods
xchg
mov
and
cli
pop
mov
pop
sub
adc
add
aad
or
inc
int
inc
je
cmp
dec
hlt
orl
push
or
bound
mov
dec
and
and
and
dec
in
mov
and
mov
aas
insl
add
inc
jg
ss
inc
push
and
pop
pop
jb
das
fimull
ljmpw
and
push
push
cmp
mov
mov
mov
jle
add
xorb
insb
jg
jg
ret
sarb
xlat
stos
mov
add
push
or
mov
mov
negl
xchg
mov
inc
xchg
insl
je
xchg
xor
xchg
insb
nop
add
xchg
imull
xor
test
fistl
xor
int
pop
mov
cmp
jmp
mov
call
loope
mov
push
and
fldcw
das
mov
sub
mov
push
jp
jnp
xor
sbb
arpl
add
cli
xchg
mov
fstpl
aas
cmp
fwait
sub
inc
adcl
push
ja
add
in
cmpsb
xor
dec
cltd
add
sbb
inc
mov
enter
call
ffree
fxch
bound
mov
int3
mov
mov
mov
ficoms
add
movl
clc
call
ret
mov
xchg
mov
pusha
in
xor
adc
in
sbb
dec
xchg
rcrl
xchg
in
mov
or
loope
push
cwtl
or
ror
sbb
je
mov
push
sbb
in
iret
push
mov
jle
dec
insb
dec
shlb
add
and
adc
push
daa
subl
mov
mov
xchg
jae
rcrl
mov
call
jns
lock
mov
aam
cld
fdivrs
scas
jbe
ret
adc
push
pop
mov
cs
loope
lret
xorb
and
push
fdivl
sbb
dec
mov
popa
outsb
lcall
or
lcall
xchg
rclb
push
xor
jne
lea
aam
js
imul
test
push
mov
lahf
inc
sbb
aas
or
pop
sub
sar
jl
add
mov
adc
dec
notb
test
sub
xchg
lds
jg
jle
aas
pop
sub
fcomip
call
mov
aas
arpl
sbbl
jecxz
xchg
jg
jnp
sahf
decb
xchg
mov
dec
jmp
les
out
mov
inc
and
pop
adc
xor
jae
pop
cmp
movsl
mov
mov
call
leave
pop
data16
scas
mov
inc
popa
xor
jae
inc
adc
outsl
scas
addl
sarb
test
adc
ljmp
dec
mov
sub
xchg
ja
xor
sbb
dec
mov
and
nop
scas
xchg
mov
aas
enter
bound
cmpl
repnz
xchg
mulb
cmc
daa
or
mov
dec
shrl
dec
cmp
lods
ficompl
xor
add
cli
and
mov
push
dec
mov
mov
sub
mov
addb
cs
fld1
lds
ret
icebp
mov
sahf
mov
cmp
add
xchg
imul
sti
xchg
out
push
xchg
int
popf
xor
fwait
sbb
nop
push
sbb
push
int
sub
dec
insl
cmc
scas
inc
pop
mov
inc
mov
mov
push
xchg
cmp
push
push
mov
or
mov
push
cmp
iret
inc
loop
in
mov
jns
sub
pusha
mov
lret
lods
sbb
jno
mov
outsl
inc
dec
mov
shlb
xor
aaa
and
adc
daa
ret
push
mov
out
push
lods
and
dec
xchg
inc
add
mov
ret
aaa
test
push
nop
sti
pop
and
les
sbb
ficomps
xor
aam
or
clc
inc
inc
cmp
stos
add
mov
pusha
adc
loop
lea
jle
inc
test
rcr
jp
stos
xchg
jbe,pn
adc
adc
shlb
jne
xor
stos
minps
xor
cli
mov
shll
dec
sub
mov
shlb
jl
or
into
xchg
sub
or
dec
lds
int
loope
daa
cs
adc
and
mov
xor
xchg
cltd
mov
movsw
sbb
push
jg
test
test
adc
mov
fldcw
je
sub
fmul
cli
repz
jae
mov
jo
lock
dec
fistl
gs
call
orb
lds
test
jo
in
fwait
ds
mov
mov
sbb
jo
pop
cltd
std
pop
test
push
inc
ja
jns
iret
mov
xchg
jae
andl
pusha
dec
mov
jl
xor
xor
ljmp
mov
imul
cwtl
loop
pop
lds
xor
jge
jb
popf
pop
or
aaa
mov
icebp
adc
lods
or
lret
xor
inc
pop
sti
pusha
jmp
pop
leave
or
xor
ljmp
jb
mov
lret
adc
adc
pop
dec
aad
sahf
pop
cwtl
fmuls
popf
adc
mov
push
xchg
imul
sbb
jns
xchg
push
decl
leave
pop
push
mov
adc
out
cmp
in
push
mov
dec
push
push
cs
xor
jg
cmpl
in
lock
xlat
les
movsb
or
ds
ret
sbb
push
movsb
and
xor
cmp
int
mov
dec
out
pusha
je
cmp
xor
cmc
sub
adc
dec
and
inc
or
out
mov
push
mov
pop
and
popf
out
mov
pop
stos
xchg
xchg
sahf
cltd
fsubrs
aam
push
int
pusha
aam
stos
pop
mov
or
enter
pop
jbe
mov
lods
push
jmp
or
fistpl
shrb
dec
and
mov
popa
and
pop
out
loop
cmp
cmp
loopne
in
sbb
inc
xchg
mov
pop
outsb
fidivrs
cmp
adc
jmp
repnz
pop
clc
loop
bound
push
fnstenv
ret
cmpsl
aad
ds
pushf
leave
lahf
mov
mov
test
gs
sbb
cmpsb
or
lahf
mov
jge
sti
out
iret
leave
push
sub
cltd
sbb
xchg
fstl
jae
push
mov
aaa
jno
mov
mov
rclb
mov
push
out
aad
out
arpl
xchg
mov
jp
mov
push
sbb
xchg
push
push
cltd
mov
cmp
cmp
push
fdivrs
xchg
rcl
gs
push
xlat
aad
and
cmp
cmp
add
cwtl
mov
in
push
cs
aas
add
push
xchg
jl
les
or
es
test
inc
xor
shlb
and
int3
rcrb
mov
std
and
je
dec
sbb
inc
std
jbe
inc
inc
fnsave
sbb
lods
test
adc
pop
fiadds
sarl
sbb
mov
hlt
cwtl
xor
xor
mov
dec
subb
push
mov
pushf
jecxz
and
rcll
adc
and
lods
in
xchg
aad
jns
inc
fucompp
jl
push
xchg
add
popa
mov
cmp
aad
adc
xchg
sub
mov
adc
and
sub
and
mov
push
fildl
jl
mov
add
ds
mov
mov
out
jg
rorb
movsb
jbe
lret
and
arpl
icebp
rolb
ljmp
test
add
cmp
sbb
daa
aas
mov
test
jb
mov
sbb
mov
xchg
mov
dec
fcoms
popf
fs
add
rcr
mov
test
push
rcll
in
cld
cmp
jo
xchg
and
adc
in
mov
in
mov
push
bound
or
leave
ds
mov
gs
mov
dec
xor
dec
mov
fcomi
outsl
push
shlb
mov
or
adc
ret
movsb
or
scas
mov
jb
or
stos
push
and
cmp
xchg
push
inc
call
jb
loop
icebp
and
stos
dec
loop
leave
or
ljmp
push
push
mov
fldcw
inc
push
adc
mov
adc
cwtl
mull
sarb
jnp
lea
pop
inc
push
imul
test
mov
test
pop
sbb
xor
call
xor
push
add
nop
dec
pop
stc
mov
pushf
xlat
ret
test
scas
loope
jecxz
in
pop
cmpsl
adc
sbb
xor
mov
push
jl
rolb
repnz
mov
pop
push
out
mov
addb
cmp
mov
pop
ljmp
les
inc
pop
and
pop
scas
jl
sahf
and
stc
jnp
jecxz
xor
jl
xor
lcall
je
dec
sbb
hlt
and
lea
mov
rcrb
inc
dec
xchg
mov
lods
sub
fisttpl
jmp
loopne
sbb
push
mov
outsl
or
mov
insl
icebp
sub
push
adc
xchg
fsubrs
mov
leave
dec
test
adc
lret
stc
in
pop
clc
stc
cmpl
js
popa
movb
inc
dec
nop
lods
fs
stos
je
addl
inc
rclb
orl
sti
jns
mov
loopne
inc
imul
and
fcmovnb
jl
lret
aad
jecxz
and
push
or
adc
mov
dec
add
add
arpl
lret
popf
popa
xchg
mov
movsl
leave
lods
bound
sti
ret
rorl
js
ficoml
and
jmp
roll
and
je
fs
pop
pop
mov
lret
sub
stos
rep
in
or
cmpsl
dec
ss
repz
jp
inc
into
mov
out
or
aam
inc
mov
jecxz
xorb
inc
jb
ror
sahf
test
and
sbb
pop
xchg
push
dec
in
pop
push
ja
sbb
push
scas
jae
push
cwtl
dec
mov
cld
clc
jo
push
dec
scas
dec
dec
ljmp
fwait
sbb
cmp
pop
enter
jp
mov
cmpsb
and
sbb
adc
enter
lods
cmpb
or
ret
popf
or
xchg
adc
xchg
lds
push
mov
xor
in
es
stos
outsb
sub
frstor
add
ljmp
pusha
stos
cltd
inc
cltd
mov
mov
fdivrl
aaa
push
leave
push
adc
or
cmp
inc
sarl
or
loopne
push
jl
push
mov
or
inc
in
loop
or
xchg
mov
frstor
cmpxchg
add
adc
leave
pop
add
dec
push
insl
into
jnp
test
test
mov
xor
inc
xchg
jle
mov
sub
mov
add
mov
pop
je
sbb
and
enter
enter
xor
dec
jnp
imul
xor
lock
mov
test
ret
add
orb
adc
cs
sbb
out
adc
pop
push
out
mov
call
adc
cmpsb
arpl
popf
inc
pop
xor
push
mov
call
ljmp
jl
outsl
into
mov
and
add
xchg
or
mov
xchg
out
stos
xor
inc
xchg
push
mov
xchg
pop
mov
lock
loop
and
mov
jp
mov
adc
and
mov
jl
std
pop
lds
dec
adc
imul
fs
xor
pop
in
push
inc
sbb
imul
popf
push
sbb
icebp
addl
outsb
mov
mov
inc
int3
fistps
leave
cmpsl
mov
mov
push
jne
mov
mov
pop
push
adc
jae
add
imul
cmp
stos
cld
dec
or
int3
inc
cmp
inc
fnop
insl
jb
push
jle
lods
mov
in
fsubl
roll
jmp
xchg
das
test
mov
cltd
bound
aad
xor
stos
arpl
aas
pop
insb
sbb
add
bound
addl
push
je
sbb
add
push
shlb
cmp
dec
outsl
cmp
daa
or
xchg
loop
dec
mov
inc
mov
movsb
leave
int
sbb
cmp
and
out
das
jecxz
cmc
sbb
mov
sub
sbb
cmp
adc
jb
adc
and
pop
push
xchg
push
jo
in
mov
pop
mov
or
icebp
push
enter
dec
out
xor
xor
adc
adc
and
mov
inc
imul
in
insb
xor
push
mov
mov
cmc
mov
cltd
inc
pop
repnz
push
and
push
nop
xor
call
je
inc
pop
pop
xor
sub
mov
cli
mov
insl
sarl
je
mov
jno
mov
out
ficomps
xchg
test
arpl
lods
and
repz
jbe
pop
xchg
push
xor
cmp
dec
roll
fcompl
repz
into
dec
dec
add
mov
popf
jo
mov
mov
dec
fnsave
pop
jo
sub
mov
popl
push
jge
test
add
jb
xor
inc
adc
inc
xchg
xchg
pop
adc
push
fbstp
sub
mov
mov
test
mov
or
dec
or
mov
mov
fldenv
inc
cli
jge
mov
and
mov
into
jl
pusha
adc
cmc
nop
fimuls
and
mov
jns
cli
mov
jo
ret
lock
es
mov
sub
pop
jp
jb
es
xor
mov
cmc
shll
sbb
inc
addb
push
add
jb
mull
inc
shrl
xchg
xor
dec
filds
push
mov
loope
dec
sbb
add
cmpsl
inc
bound
out
gs
stos
mov
jb
aam
cmpl
xor
xchg
or
xor
mov
test
das
pop
std
sub
or
jb
stos
sub
add
pop
decb
sub
mov
loopne
pop
imul
ljmp
in
jle
stos
cli
popf
sbb
mov
mov
scas
fimull
push
es
repnz
sub
jge
jp
push
mov
js
jns
push
scas
bound
pop
lret
cmpsl
in
imul
out
jnp
stc
in
pusha
aam
mov
mov
and
adc
test
cmp
xchg
sub
jg
scas
xorl
hlt
lea
mov
jp
lea
dec
outsb
cltd
mov
enter
imul
out
mov
pop
xchg
jne
bound
mov
mov
int3
fldenv
pop
test
sbb
jb
stos
mov
mov
jbe
test
sahf
call
mov
adc
mov
dec
cld
movsb
hlt
mov
scas
pusha
icebp
pop
mov
movsl
jg
xchg
cmp
lahf
xchg
loop
dec
sbb
push
insl
or
xlat
adc
sub
cwtl
dec
test
addr16
loop
test
add
in
xchg
push
push
aas
mov
sti
repz
adc
mov
outsb
mov
sbb
sub
mov
and
divb
mov
xor
sti
negl
pop
pusha
cld
inc
fcmove
push
mov
mov
add
push
imul
cld
mov
es
loop
xor
cmp
stos
jmp
cmpsb
push
jnp
daa
jns
or
mov
test
je
mov
imul
pop
xchg
mov
pop
movhps
xor
sti
addl
aam
jnp
xchg
je
xchg
data16
lods
inc
sti
adcb
add
movsb
cmpsb
clc
pop
addr16
clc
lods
inc
mov
xchg
xor
stos
popa
sub
call
hlt
inc
inc
mov
and
cmp
aam
scas
adc
rolb
pop
leave
adc
stc
xor
dec
ja
xchg
fidivl
xchg
gs
push
mov
xor
mov
xchg
repnz
js
fbld
hlt
mov
pushw
sbb
push
sbb
pop
loopne
cmpsb
aas
lea
aas
sub
cwtl
sbb
in
ljmp
pop
into
mov
mov
nop
insl
push
xchg
mov
mov
negb
sbb
inc
pop
sahf
jb
insl
xor
inc
mov
push
mov
add
adcb
cmp
cmp
dec
sbb
sub
cli
int3
jge
int3
fisttps
mov
add
add
dec
add
xchg
xchg
hlt
fcompl
mov
icebp
shlb
mov
jmp
mov
insl
add
sub
jno
sbb
bound
jecxz
xor
cmpsb
decb
fsubr
and
cli
inc
hlt
imul
mov
stc
adc
pop
mov
dec
clc
push
sub
iret
gs
inc
xchg
sbb
cwtl
lock
int
mov
sub
xchg
push
cmp
xor
ss
xchg
outsb
mov
andl
cmp
inc
daa
xlat
inc
lcall
inc
push
test
mov
cs
mov
test
call
adc
addb
jae
mov
inc
mov
fimuls
or
mov
ss
jp
sti
or
xchg
idiv
ret
jp
cmp
es
cmp
shll
daa
add
push
jbe
jbe
or
cmp
and
jg
mov
fnop
jge
xchg
inc
test
loopne
inc
loopne
xor
lods
add
xor
ds
cmp
shlb
daa
stc
xor
enter
adc
out
test
sbb
cltd
pop
push
mov
sbb
and
or
jnp
mov
ljmp
and
add
imul
cmp
jns
fmuls
dec
push
inc
popa
mov
lret
lret
mov
lret
dec
xor
and
mov
scas
int3
pop
add
xor
push
mov
aas
pop
sub
scas
add
aas
fdecstp
in
das
adc
cmpsl
pop
inc
aas
sahf
mov
int
pop
inc
push
mov
fsub
cmovl
fmuls
movsl
pop
lea
gs
lea
cmp
cmp
popa
adc
mov
lods
push
and
lret
mov
test
mov
sbb
jle
loopne
jl
sub
pop
negl
cwtl
pop
test
mov
add
pop
lods
mov
xor
popa
sub
insl
push
cwtl
add
imul
mov
pop
and
adc
mov
and
jbe
adc
test
ror
addr16
arpl
movsb
mov
jno
fwait
std
bound
push
mov
mov
repz
xchg
pop
mov
or
xor
xor
mov
imul
scas
push
sbb
jno
inc
and
add
jmp
into
fmuls
stc
daa
in
nop
sub
iret
enter
dec
mov
in
push
imul
outsl
stos
cmp
xchg
jle
sub
xor
test
aas
std
mov
movsl
int3
sbb
pop
pop
ljmp
pop
pop
out
jo
sbb
jo
mov
pop
pop
push
popa
xor
pop
sbb
lcall
inc
scas
pop
idivb
movb
jg
lret
and
xlat
cmpsl
pop
test
jnp
push
xchg
pop
add
out
xor
push
dec
dec
adc
shll
and
push
loop
insl
pusha
sub
inc
lcall
int3
ss
ja
xchg
sbb
jo
shrl
xchg
mov
push
mov
fidivl
inc
rcll
pushf
mov
mov
mov
popa
jne
add
aas
aad
cmc
xor
aad
sbb
cmpsb
mov
inc
jo
adc
mov
into
push
xchg
arpl
push
call
adc
jbe
xor
in
not
test
sub
stos
popf
cltd
xchg
out
pop
lock
ja
jle
adc
cmp
dec
adc
test
dec
mov
imul
adc
xchg
cmpsb
pop
mov
mov
out
cmp
imul
xchg
mov
aad
fiaddl
mov
icebp
rcrb
cmc
push
lret
jnp
xchg
add
gs
jge
or
or
lret
mov
stc
xlat
jb
shll
cltd
xchg
add
lahf
ror
int
and
outsl
mov
enter
js
das
popf
rcrb
iret
test
mov
mov
sbb
and
and
adc
xchg
push
jnp
push
data16
add
jbe
dec
insl
xchg
mov
stc
aad
push
fldcw
sbb
push
fildll
es
or
push
mov
mov
cwtl
add
pop
loope
jae
pop
inc
and
popf
mov
in
stos
push
cmp
jae
xchg
xchg
jle
adc
into
orl
popa
repnz
jge
and
icebp
popf
push
jmp
adc
lds
mov
test
inc
cmpsb
xchg
mov
cmc
cmp
sub
pop
bnd
sub
xchg
pop
scas
bound
dec
push
jecxz
cmp
mov
fisubl
sbb
imul
mov
cmp
mov
pop
xchg
repz
pop
mov
lcall
roll
inc
or
in
orl
mov
lds
inc
sbb
mov
sti
sbbb
mov
mov
ret
loope
fsqrt
sahf
scas
enter
aaa
fsubl
xor
jge
push
push
xchg
mov
movsl
inc
mov
and
dec
fstpt
add
xchg
pop
and
fwait
ja
notl
push
loop
push
dec
loop
lock
mov
mov
mov
cmpsl
fidivrs
fnstsw
call
mov
lea
fildl
pushf
std
mov
inc
sbb
imul
mov
sub
or
xchg
ja
add
out
test
fimull
and
sub
mov
andb
dec
mov
je
ds
lcall
imul
ljmp
jmp
mov
jp
nop
jne
aad
aam
nop
pop
xchg
pop
daa
push
xchg
neg
fstpl
inc
xlat
cli
add
xlat
mov
adc
adc
mov
inc
imul
push
adc
or
popf
push
popf
cwtl
ss
test
mov
int3
fdivs
iret
jne
push
jno
jl
repnz
xchg
aam
inc
aaa
cmp
cmp
mov
cmp
sub
pop
clc
clc
shll
ds
or
xchg
cmp
int
arpl
sahf
shll
push
mov
sahf
mov
cwtl
stos
sub
js
mov
insb
inc
mov
sarb
loopne
adc
cmp
or
mov
sti
or
pop
in
adc
gs
bnd
xorl
popf
ljmp
xlat
popf
gs
inc
jnp
in
enter
arpl
lret
mov
rcll
daa
pop
clc
ret
xchg
pop
inc
and
cmp
sbbl
test
jns
or
cli
pop
add
stos
stc
je
xlat
pop
subb
sbb
mov
jp
test
lahf
stos
icebp
jmp
ficompl
rcrb
fs
xchg
in
add
dec
loope
cmpsb
push
mov
and
inc
addl
lds
sbb
cltd
cmp
int3
out
or
lret
jmp
ja
pop
dec
mov
iret
and
jns
xor
cs
jg
stos
iret
shl
mov
inc
mov
mov
adc
shrl
outsb
push
mov
rcrb
push
aad
sub
pop
loope
lea
mov
mov
cmp
mov
sbb
push
popa
jge
mov
add
mov
imul
stc
push
test
imul
rcr
push
xor
xchg
mov
arpl
mov
push
mov
scas
loop
rorb
jnp
push
test
shll
pop
imul
sbb
lock
push
ret
cmp
pop
testb
add
sub
stos
addl
repz
mov
push
or
and
mov
push
jo
cmp
push
repnz
mov
dec
dec
repnz
das
mov
lcall
fcmovbe
popf
push
int
cmp
repnz
adc
mov
sub
jg
jl
ds
inc
jns
arpl
stos
popa
push
test
sub
or
pop
sbb
bound
lods
incl
push
flds
or
adc
mov
fmull
int3
das
sub
mov
sub
push
sti
iret
cmp
movsb
dec
sub
or
and
sub
inc
cmp
inc
inc
les
in
push
jle
test
push
add
inc
lcall
xchg
push
jg
cmp
add
or
pushf
mov
cmc
pop
shrl
inc
sub
xor
fistps
scas
sub
icebp
cmp
mov
sbb
div
loopne
loopne
lahf
lock
pusha
mov
mov
mov
jne
mov
or
movsb
hlt
leave
insl
inc
iret
xchg
and
dec
inc
mov
cmp
fisubs
lock
xlat
in
outsl
lea
xchg
xor
popl
pop
loope
mov
sahf
sbb
sub
pop
les
pushf
ffreep
stc
jnp
lret
mov
cmp
cmpsb
lods
mov
jbe
iret
xchg
push
cmp
sbb
aas
lock
arpl
rolb
test
outsb
leave
xchg
jns
push
imul
inc
fidivl
xchg
xchg
repnz
out
xchg
stos
xchg
in
cmp
sbb
inc
mov
inc
jne
pop
jmp
jle
mov
push
push
inc
mov
insl
fbstp
pop
sbb
dec
pop
mov
jge
adc
mov
popa
inc
int3
cmp
pop
jl
int
out
mov
sub
loope
adc
lds
cli
jns
ss
das
add
lea
add
imul
insl
gs
sub
xchg
push
wrmsr
sub
push
pop
xchg
lcall
adc
addr16
loop
push
fsub
aad
imul
scas
dec
dec
mov
mov
adc
and
sbb
xchg
lods
xor
loop
inc
subb
cli
xor
mov
xor
sbb
cmc
pop
push
sahf
loop
jae
adc
dec
add
ret
imul
repnz
arpl
sbb
add
push
jae
test
mov
loopne
push
subb
xchg
jno
cmp
lods
add
addb
adc
xorl
sbb
out
cli
cmp
cmp
dec
and
jnp
fstpl
rolb
adc
gs
aas
test
pop
lcall
arpl
imul
lret
shll
jmp
sbb
mov
subl
in
je
fdivrs
lods
rcrl
aaa
jg
leave
js
or
pop
xchg
inc
sub
add
xor
inc
aad
out
dec
adc
mov
das
cs
inc
add
lea
push
mov
aam
push
loope
dec
sbb
and
sub
mov
bound
sbb
mov
inc
loopne
push
shll
mov
addr16
mov
popf
pop
jle
cmp
and
mov
loope
bound
fimull
sub
push
imul
outsl
outsb
cmp
stc
inc
shll
jbe
hlt
mov
pop
dec
insl
xor
fistpl
push
or
or
hlt
and
add
push
mov
jnp
and
adc
cmp
jecxz
clc
jno
fcoml
inc
das
loopne
insb
repz
add
mov
push
add
movsb
lcall
add
lea
push
dec
ret
sbb
popl
fisubrl
add
pop
inc
jnp
dec
or
xor
pop
sbb
lret
push
rcrl
fs
lea
xorb
add
dec
arpl
fcoms
int
sbb
push
or
mov
xor
xchg
or
add
ret
mov
mov
sub
int3
jmp
cli
hlt
repnz
xchg
dec
sbb
and
stos
xor
dec
cmp
mov
aad
adc
mov
cmp
inc
sbb
xchg
cmpsl
shlb
fadd
add
and
jns
add
push
jne
xchg
adc
xchg
pop
push
cmpsb
sbb
ficoms
scas
mov
push
dec
js
out
scas
sub
adc
roll
popf
popa
xchg
notb
test
mov
sbb
add
jne
and
aam
add
jecxz
push
mull
mov
cmc
repz
xlat
push
and
sub
cld
and
pop
lret
push
mov
jg
movsl
inc
adc
mov
dec
fistps
aaa
ja
dec
stc
sub
les
pop
xchg
xor
pop
mov
mov
test
cmp
idivb
and
sub
ja
inc
out
xor
cmp
cmp
lds
pop
fdivrs
xchg
lods
fwait
adc
loope
pusha
jbe
out
or
dec
or
jge,pn
pop
mov
aam
jo
mov
push
xchg
jb
dec
dec
jmp
arpl
ss
sarb
cmp
das
xor
dec
shrb
clc
inc
jo
rorl
adc
xor
popa
cmp
add
orl
mov
xchg
jne
jl
pop
hlt
inc
std
push
das
push
lcall
xlat
dec
aad
mov
dec
dec
inc
dec
je
add
loop
cmp
push
xchg
test
inc
cmp
inc
sbb
mov
pop
dec
and
dec
jge
shll
lret
xchg
dec
cmpl
paddusw
pop
add
xor
inc
repz
repnz
arpl
sarl
repnz
sbb
cmp
frstor
sbb
pusha
rcrb
xor
mov
mov
loop
sub
xorb
dec
dec
hlt
and
and
add
sub
out
xbegin
adc
stos
add
push
test
push
js
jge
or
xchg
or
jp
mov
fld
push
mov
sti
push
mov
xor
dec
sbb
cmp
sbb
inc
push
ficoms
lea
or
insb
mov
push
scas
das
dec
shlb
xorb
and
loopne
xor
adc
inc
push
scas
fcompl
push
lcall
sti
dec
xlat
push
test
add
or
sarb
xlat
aam
sbb
xorb
cmp
pushf
pop
rorb
mov
cmp
inc
adc
mov
adc
rcl
fldt
adc
inc
sub
mov
or
orl
mov
mov
add
mov
xorb
cs
and
movsl
lret
mov
stc
mov
mov
sbb
fildl
xchg
popa
fistpll
pop
movsb
or
ret
fs
sub
sub
in
testl
xchg
cltd
cmp
dec
arpl
cld
lods
or
stos
cmp
popa
jmp
jecxz
arpl
lea
ret
mov
mov
push
mov
in
dec
mov
add
xchg
fstpl
mov
data16
jmp
jns
xchg
mov
pop
lock
xor
dec
mov
sub
mov
mov
mov
rol
xor
push
cs
mov
adc
sbb
dec
sbb
lods
outsb
divb
push
sub
int
or
xchg
pop
mov
lahf
ret
popa
in
pop
int3
roll
pop
lahf
cmpsl
lods
out
leave
mov
out
jge
test
popa
test
dec
leave
push
sti
data16
adc
loop
sbb
jle
lahf
popa
into
arpl
or
out
jb
je
dec
mov
cmp
inc
movsb
dec
mov
push
les
sar
jno
jle
cmc
xor
in
in
adc
lock
test
daa
xor
pop
dec
push
bound
nop
test
lods
pushf
pushf
xor
xchg
jns
push
imul
insl
add
subb
mov
sub
mov
je
xchg
jo
fcmovu
or
out
push
push
loope
jmp
xor
mov
push
add
mov
lds
add
mov
ljmp
and
mov
dec
cmp
mov
int
out
sub
nop
push
mov
or
cmp
sub
pop
aaa
ds
mov
lahf
inc
cmpsl
arpl
mov
movsl
jbe
sub
das
xchg
mov
dec
xor
aad
shrb
cmc
out
icebp
out
nop
lcall
gs
pusha
test
je
mov
and
int3
xor
mov
imul
xor
ja
xchg
sbb
xchg
jb
and
cmc
sbb
loop
cmpsl
push
std
loopne
test
push
decl
test
dec
fisttps
pop
or
or
inc
sbb
std
add
addl
dec
dec
dec
mov
stos
in
xor
jb
lcall
and
sbb
add
lahf
push
into
loope
or
adc
or
mov
fidivl
sti
addr16
adc
xchg
scas
jmp
mov
imul
mov
add
xchg
mov
fidivrs
adc
repz
sbb
mov
das
push
pop
push
xchg
jno
mov
scas
or
lea
sbb
mov
add
lock
sahf
mov
jp
mov
pop
pop
xchg
ret
cmp
xor
test
adc
leave
lock
pop
pmaddwd
push
stos
add
sarl
clc
outsl
mov
sub
stos
pushl
sub
mov
cmp
mov
xchg
mov
sbb
fidivs
ja
and
inc
imul
outsb
xchg
push
lret
movsl
xor
rcl
test
xor
jp
add
jg
loop
push
inc
mov
sbb
dec
mov
mov
add
repz
outsb
cmp
lahf
jno
aad
sbb
imul
out
daa
mov
pushf
push
bswap
xchg
jbe
push
or
fisubs
loop
pop
and
sub
rep
aad
xchg
xchg
not
add
loop
clc
push
mov
pop
in
je
rolb
jp
pusha
add
xor
xchg
movsw
inc
mov
lcall
rcll
jmp
subb
dec
jb
and
adc
pop
pop
std
mov
sti
add
pusha
push
movsb
sbb
sub
push
and
mov
test
test
lcall
push
out
push
roll
lahf
push
add
popa
mov
or
mov
xor
adc
popf
call
mov
pop
jecxz
popf
sbb
inc
in
js
inc
ss
test
rorl
xchg
lret
mov
jg
adc
and
or
sbb
and
and
mov
push
int3
scas
dec
push
mov
push
dec
cvtdq2ps
xchg
mov
bnd
movmskps
clc
test
mov
js
out
out
insb
cltd
mov
mov
es
test
gs
mov
mov
inc
aas
sub
sbb
xchg
dec
sub
enter
mov
cmp
cmc
test
scas
mov
or
mov
ss
insl
rcl
imul
or
test
sub
jl
push
int
cwtl
subb
popa
outsb
dec
xchg
or
idivl
leave
aam
decl
jmp
jp
cmc
pop
dec
and
cld
mov
loopne
out
pushf
inc
sub
loopne
popa
les
sar
fcompl
es
jge
fadd
fcoms
sub
mov
fadds
clc
ret
mov
mov
add
push
divl
popa
stos
ja
out
pop
and
mov
mov
add
dec
xchg
ja
push
rcl
mov
jb
add
xchg
push
jp
add
pop
setne
sbb
pop
jae
test
and
je
push
mov
or
push
lds
rcr
add
xor
les
popa
and
lret
dec
ljmp
nop
clc
fisttpll
pop
shr
mov
add
call
xor
sub
push
and
scas
xchg
xor
jne
incl
movsb
mov
dec
xchg
or
and
xlat
inc
mov
jmp
outsb
jbe
sbb
mov
inc
fcoms
pusha
adcl
stos
sub
cmp
fbstp
popa
gs
pop
int
pop
push
decl
xor
or
cmpsl
jne
enter
cltd
call
repnz
or
jne
in
xchg
not
loop
push
jg
xchg
mov
gs
repnz
push
aam
loopne
pop
push
cmpsb
and
subb
repnz
pop
jno
mov
icebp
repz
lret
adc
je
outsl
scas
ret
out
ljmp
in
and
dec
int3
dec
outsl
aaa
mov
test
adc
inc
stc
fidivrl
in
adc
insb
mov
scas
push
arpl
sahf
in
sub
sub
int
insl
js
mov
jecxz
mov
int
call
or
test
mov
bound
xor
jbe
push
jecxz
pop
ljmp
sti
test
popf
stc
nop
arpl
pusha
xchg
adc
jne
and
mov
push
mov
fsubrl
imul
mov
sub
movb
add
testb
pop
cmc
jg
push
cli
xor
and
add
inc
aas
stos
loopne
test
cmc
push
loope
aad
mov
or
or
mov
icebp
mov
push
pop
add
imul
xlat
dec
imull
and
ret
or
fwait
insb
ficomps
dec
fnsave
aad
pop
not
js
sub
int3
jb
fldl
dec
and
inc
cmp
rclb
mov
push
test
xor
iret
cld
aad
xchg
jmp
mov
repnz
mov
movsl
push
std
xchg
xor
mov
pop
mov
push
cltd
pop
lahf
cmpsl
loopne
mov
test
push
in
loope
pop
mov
sarb
push
js
jnp
call
lds
test
daa
jmp
xchg
dec
add
rolb
mov
xor
test
out
xchg
mov
pop
aaa
pop
inc
push
adc
scas
out
push
addr16
arpl
push
add
rcrb
mulb
push
jns
add
mov
jl
shr
loop
js
outsl
cmpsl
test
test
inc
add
pop
and
xor
out
hlt
mov
or
xchg
sbb
cmpsl
rcll
arpl
mov
lret
cmpsl
xor
adc
sbbl
aad
cmpsl
jno
mov
inc
sub
add
jbe
xor
xor
sbb
imul
negb
lea
mov
mov
push
mov
and
dec
test
push
call
or
sbb
jmp
pop
jno
jns
xor
in
cmp
shlb
ja
ljmp
cld
ret
sbb
popf
mov
inc
sbb
ret
inc
jg
out
outsb
xlat
jns
std
inc
loop
std
mov
cli
in
out
ja
lcall
outsl
enter
add
int3
inc
movsl
int3
popa
mov
jbe
aam
sbb
jmp
xchg
gs
or
inc
mov
aaa
mov
dec
into
dec
cmc
subb
pop
cmp
mov
xor
dec
dec
adc
iret
stc
sti
lods
dec
sbbl
lret
xchg
mov
xchg
and
cmp
xor
aam
lds
dec
div
test
lea
pop
pop
clc
cmpsb
mov
jne
lods
push
daa
arpl
rclb
jge
push
jo
jne
cmp
scas
xor
mov
push
and
gs
divb
inc
pop
jb
cmp
daa
pop
xor
push
fnstenv
daa
mov
mov
out
push
cmp
inc
adc
int3
inc
mov
arpl
out
jge
xor
mov
sub
sub
mov
orl
out
xor
cmc
dec
and
dec
or
inc
outsl
xor
pushf
dec
rolb
cmp
popa
xor
cmp
mull
call
testl
dec
mov
stos
pop
push
push
mov
repz
pop
das
xchg
and
or
aam
rorl
adc
nop
jecxz
insb
jp
je
dec
movsb
mov
negb
jno
cmp
arpl
and
jp
mov
xchg
jno
xchg
insb
mov
inc
xchg
mov
pop
test
lahf
lcall
mov
and
jbe
mov
push
or
jp
mov
mov
push
in
xor
push
or
mov
xchg
jmp
mov
sbb
cmp
pop
lcall
push
hlt
and
test
inc
mov
xor
pushf
daa
ret
cmp
push
sbb
or
imul
sub
xor
xchg
adc
jl
xchg
lds
dec
dec
jecxz
push
fisubl
xor
insb
ja
jne
push
mov
fwait
sub
jo
xchg
sbb
xchg
add
sub
scas
ret
xlat
inc
lcall
adc
movsb
push
divl
mov
insb
dec
cmp
ret
xchg
sub
mov
pop
decb
daa
lock
stc
loop
sub
movsb
test
scas
je
es
fdivs
out
mov
jbe
out
jl
inc
loope
gs
pop
aas
and
leave
jnp
data16
or
popf
subl
fists
in
fisttpll
and
fdivrs
pop
sub
rcrl
mov
hlt
pop
xchg
aaa
mov
lock
jle
push
jbe
pop
add
out
adc
stos
cmpsl
test
repz
sub
hlt
sub
stos
mov
jp
sbb
lret
mov
lods
loop
cmp
pop
loopne
int3
adc
cmp
stos
scas
mov
jp
sti
xor
ljmp
or
out
fadds
es
dec
pop
cs
sub
mov
or
inc
scas
cmpsb
lahf
dec
aam
jp
xchg
sahf
sbb
jmp
dec
inc
inc
insb
adc
outsl
loop
pop
into
inc
or
fcompl
in
sub
xor
push
mov
push
cwtl
test
loope
jle
cmc
add
rcll
jnp
inc
sub
inc
fcoms
aam
inc
push
jns
jl
pop
xor
in
aas
push
fmuls
inc
mov
mov
sbb
pop
pop
sbb
icebp
lcall
pusha
mov
imul
and
dec
add
sahf
inc
js
mov
scas
in
shlb
cmc
push
inc
and
or
pop
sbbl
adc
sbb
mov
pop
pop
arpl
lods
mov
insb
pop
push
movsl
loope
xor
inc
add
sub
inc
adc
cwtl
dec
mov
add
dec
lea
xor
shl
add
sub
xchg
cmp
mov
sbb
pop
add
push
fcomip
in
pop
mov
arpl
dec
imul
dec
xor
add
cmp
add
mov
mov
out
scas
pop
add
sub
adc
ret
mov
xor
movsb
ror
fldl
shrl
out
cld
push
or
rcr
sbb
mov
cmpl
or
cmpsl
mov
pop
adc
in
jb
add
insb
xchg
cmpsb
adc
decl
mov
cmp
mov
jmp
push
pop
lods
mov
rol
pushf
test
sbb
fmulp
stc
sbb
insl
ret
jae
fs
jnp
insb
push
aaa
popf
mov
inc
in
les
cmpsb
jle
dec
iret
rorb
adc
bound
int
ret
aad
pop
dec
xchg
adcl
xor
mov
imul
jp
adc
test
cmp
daa
xor
out
lret
out
jl
into
adc
adc
pop
mov
xchg
in
mov
cmp
jecxz
jnp
stc
and
add
jle
xor
adc
push
or
out
jnp
loopne
xor
test
adc
fcomps
gs
dec
cwtl
dec
popa
jmp
test
push
clc
inc
inc
push
dec
cmp
neg
imul
stos
jns
insb
sahf
test
xchg
xor
pushf
lods
inc
jecxz
or
lret
pop
inc
mov
ret
lea
mov
adc
xchg
mov
adc
mov
push
or
inc
xchg
sub
and
sbb
ret
push
mov
mov
jne
jg
add
mov
daa
out
sub
movsl
pop
add
aas
add
fcmovnb
jmp
fdivr
or
pop
stc
pop
xlat
pop
inc
adc
negl
jle
jns
ret
pop
in
ja
cmpsb
aad
adc
mov
sbb
push
dec
sarl
sbb
adcl
shlb
sbb
sub
repz
dec
test
mov
popf
add
mov
mov
sub
iret
jo
add
popf
jae
mov
xchg
lods
xchg
outsl
mov
hlt
xchg
loopne
hlt
ret
sbb
lea
dec
cmc
ljmp
pusha
clc
adc
call
or
and
add
jne
pop
int3
push
movsb
sar
les
pop
outsl
mov
ja
movsb
mov
outsl
jno,pn
mov
nop
fsubs
push
dec
mov
adc
pop
popa
movsb
popf
shll
loope
mov
or
jno
popf
add
imul
js
dec
movsl
inc
mov
pop
pop
lret
fsubrs
dec
xchg
in
jo
add
pop
push
or
mul
jg
sub
dec
ret
mov
loop
lcall
ret
loop
dec
mov
rcrl
daa
sbb
inc
jmp
outsl
sub
and
mov
mov
push
xchg
mov
fstpl
push
mov
loop
es
testb
insl
dec
lods
or
cltd
and
pushf
jge
icebp
inc
lods
pop
mov
mov
jno
sti
sub
fcomps
fld
xor
daa
and
scas
mov
imul
pop
test
ds
cwtl
test
sahf
sar
rclb
sub
fst
test
adc
add
hlt
mov
sbb
ret
cmp
inc
addb
sbb
pop
cmp
dec
sbb
data16
icebp
mov
lcall
inc
ret
das
adc
inc
ds
and
jnp
jno
repnz
mov
scas
cli
scas
insl
add
push
or
push
dec
or
mov
xlat
add
mov
adc
pop
or
lods
into
add
leave
xor
dec
dec
les
mov
imul
dec
or
rolb
mov
cwtl
jge
jg
das
jp
in
cmp
test
addb
inc
jge
das
jg
test
sub
dec
or
repnz
sbb
mov
addb
jmp
cmc
daa
fs
lds
insb
fsubrl
cmp
insb
xchg
or
je
cli
mov
shr
xchg
clc
pop
aaa
ret
mov
xchg
aas
in
xchg
lcall
dec
insb
cmp
push
loope
push
lods
push
jb
int
push
jmp
out
cmp
rclb
pop
mov
sbb
sub
sbb
pop
inc
daa
xchg
jl
pop
adc
idivl
outsl
adc
dec
ljmp
incb
pop
cmp
jg
sahf
pushf
sbb
fnstcw
and
shll
aas
cmp
dec
or
pop
xor
nop
cld
mov
ret
ss
les
mov
shlb
add
sbb
mov
cmpsl
mov
or
sub
fisubs
jno
hlt
jecxz
lahf
sub
pop
call
rorl
in
or
dec
movsl
lret
xchg
cmpsb
ret
fwait
jl
or
aaa
jg
push
test
sahf
xor
repz
push
stc
insl
mov
push
lcall
xchg
sub
xchg
xor
je
in
push
pop
inc
cmp
dec
loope
inc
inc
sub
xchg
lret
in
mov
mov
sbb
xor
sbb
je
lahf
jbe
inc
push
loope
mov
scas
xchg
add
ja
sub
sahf
push
stc
mov
mov
out
inc
jp
mov
in
rorl
xor
jbe
and
call
pop
push
lret
scas
jno
cmpsl
jg
lock
pop
or
mov
lods
and
lcall
mov
jno
pop
int
pusha
cmpl
sbb
scas
and
mov
js
xor
xchg
adc
mov
call
hlt
xchg
cs
mov
cmpsb
sub
cmp
mov
je
lods
add
test
shrb
mov
dec
xor
xor
xor
in
insl
mov
jecxz
cld
insb
pop
test
lret
fcmovnbe
inc
outsb
push
pop
and
adc
sarb
lea
adc
xchg
and
add
add
push
pop
jnp
xor
cld
fucomip
jb
pop
sbb
std
out
pop
inc
mov
and
js
cwtl
and
add
bound
fisubl
mov
out
pop
xchg
movl
dec
popa
lahf
xchg
jnp
push
sti
or
outsl
xor
jb
mov
adc
into
sub
adc
jbe
or
pop
out
mov
aas
and
iret
sub
outsb
and
dec
jmp
es
and
into
xchg
int3
sahf
dec
fwait
mov
fs
stc
lea
xlat
jecxz
fistpll
cmp
in
or
iret
insl
fsub
push
xor
shlb
jo
in
mov
cmc
mov
mov
xchg
in
jne
xchg
add
mov
test
jl
cmp
mov
sbb
sub
cmp
out
pop
inc
mov
lods
out
adc
sub
and
sub
orb
mov
sbb
cli
xor
dec
cs
or
loope
sbb
cli
lea
mov
sbbl
mov
insb
xor
outsb
jp
fistl
dec
std
negl
add
xorl
insl
xlat
jbe
jmp
out
push
dec
mov
cmp
fildll
and
jne
loopne
test
outsb
sub
fucomi
inc
xor
jne
sbb
in
xchg
dec
mov
les
and
cmp
push
mov
pushf
lea
or
fnstenv
test
lock
cmp
jle
or
push
cmp
add
daa
cwtl
test
xor
jge
pop
rol
repz
push
cmpb
out
push
loop
stos
adc
int
outsb
dec
add
sarl
test
das
mov
xor
push
hlt
inc
nop
fucom
or
mov
mov
adc
sbb
lret
cld
rcrb
es
pop
add
daa
cwtl
jae
leave
push
loop
xchg
jae
ja
inc
inc
jns
std
add
insl
sbb
lcall
ror
iret
push
inc
dec
cwtl
push
loope
out
and
insl
cld
decb
jmp
adc
movsb
shl
or
pop
cs
ljmp
insb
test
popa
xorl
mov
dec
cli
shrb
js
scas
popa
mov
cmp
add
lea
lods
in
mov
and
fidivrl
mov
aas
add
pop
int
or
arpl
cld
ss
nop
xchg
mov
jnp
adc
repz
stos
or
mov
mov
xchg
je
jae
or
cmp
xchg
into
jp
and
insb
or
in
pop
xchg
or
fsubr
cmp
out
jge
loop
mov
push
jmp
sbb
cmp
or
push
inc
adc
dec
jl
add
and
jbe
xorb
dec
xor
jbe
fimuls
mov
daa
sbb
lret
and
cld
xchg
jl
inc
and
sahf
mov
iret
rcrl
xchg
sbbl
push
cs
shrb
jnp
pop
aam
jno
xor
mov
sbb
orb
mov
fnsave
fwait
andl
or
iret
jb
dec
xor
inc
jb
cmp
insl
test
popf
jns
test
add
test
sbb
sahf
and
sar
push
adc
xchg
push
ret
popa
mov
fst
test
dec
dec
int3
nop
cwtl
pop
dec
dec
cmpsl
inc
fisttps
jmp
ds
xor
jbe
cltd
sbb
pop
sti
negl
ja
in
cltd
pop
xchg
pop
into
aad
push
add
aaa
iret
or
sbb
pop
sti
pop
adc
enter
adc
testb
call
pop
push
xchg
dec
frstor
adc
aad
rclb
mov
repz
sub
xchg
shrl
mov
lods
jmp
addr16
scas
arpl
imul
outsl
inc
xchg
sbb
leave
mov
xchg
pop
or
cmp
and
pop
jo
mov
scas
cs
push
loop
int3
cmp
cmp
inc
nop
test
outsl
add
mov
je
ret
and
cli
out
mov
mov
pop
call
call
lea
cmp
push
push
and
lret
mov
and
enter
cli
sbb
xchg
lock
adc
dec
mov
ss
push
test
cmp
cld
js
rorl
lock
fistps
adc
mov
sbb
cltd
mov
pop
outsb
js
xlat
sbb
mov
fsts
adc
nop
jp
fwait
je
xor
and
in
leave
sbb
nop
aaa
cmp
call
xchg
inc
xchg
out
ror
cmp
lcall
decl
sub
jmp
cmp
fs
aas
js
pushf
scas
mov
nop
jle
mov
int3
aam
mov
test
cmp
in
sub
loope
mov
in
xor
xor
call
mov
push
dec
lods
mov
pop
mov
adc
jo
sub
mov
in
and
sti
mov
push
hlt
jb
fbstp
out
pop
scas
int3
sbb
push
arpl
mov
imul
ja
mov
cmp
adc
pusha
sub
xchg
add
jle
push
mov
fdivl
mov
dec
lret
mov
dec
add
mov
jo
and
xor
adc
xor
je
jae
push
lock
xchg
mov
enter
imulb
sbb
daa
scas
rol
xchg
scas
adcl
adcl
sub
mov
or
jnp
test
pushf
fbld
xchg
lods
lods
xchg
jns
inc
push
lods
stc
mov
mov
add
and
add
or
push
popf
jns
add
roll
idiv
lea
ss
mov
jmp
das
test
in
inc
fldt
cmp
xchg
leave
dec
jnp
mov
push
push
pop
dec
pusha
mov
jle
sub
aaa
fdivrs
in
sti
mov
adc
fldln2
and
gs
pop
push
lret
imul
xchg
aas
sti
mov
push
iret
lods
xor
inc
lahf
div
insl
popf
inc
in
shlb
xlat
jns
in
lret
pop
jae
pop
cmp
int3
jge
out
xchg
xorl
dec
push
mov
xchg
push
mov
imul
fsubrl
imul
push
fxch
cltd
sub
push
mov
inc
xchg
arpl
push
pop
mov
shll
inc
pushf
add
aaa
popf
xor
push
push
mov
inc
scas
sbb
mov
pushl
loope
sahf
daa
ja
sub
fldt
or
fistps
xor
jnp
cmp
mov
or
mov
jno
mov
sub
mov
xchg
test
adc
xchg
pop
jno
insb
adc
clc
mov
xor
sub
dec
mov
out
or
jg
ret
sbb
in
jnp
adcl
lret
orb
jl
lcall
xchg
push
adcb
pop
fadds
push
cli
in
mov
and
stos
sbb
push
mov
or
sub
mov
jg
cmp
test
pop
repz
out
mov
xor
mov
popa
or
lods
xchg
ret
ret
mov
dec
cmp
mov
pop
mov
aaa
jle
movq
and
enterw
jb
xchg
mov
or
bound
sbbl
ss
movsb
ret
and
and
jecxz
sbb
les
mov
mov
cld
push
cmp
pop
js
push
xchg
aas
inc
pop
add
stc
mov
jp
inc
add
cmp
fadds
imul
syscall
push
icebp
gs
in
pop
movsb
into
insl
icebp
das
stos
xchg
add
lock
and
test
in
aaa
lds
jge
inc
and
xchg
xlat
sub
pop
cltd
and
add
shl
mov
push
ja
shl
pushf
imul
xor
xchg
mov
cmp
inc
dec
cltd
mov
test
iret
pushf
push
sahf
sarb
mov
jp
mov
push
bound
cmp
ds
and
js
inc
aad
rorl
lret
out
aas
out
jg
xchg
jl
in
test
and
and
clc
or
sbb
and
cmpsb
mov
out
je
jb
imul
push
movsb
mov
inc
es
add
xor
mov
sbb
lcall
test
dec
testb
in
mov
sub
outsl
inc
iret
divb
sub
or
cmp
mov
add
roll
mov
pusha
mov
jle
popf
or
jae
add
repz
jl
or
add
mov
mov
rcr
sbb
repz
mov
in
jge
sarl
movsb
jbe
call
test
inc
fisubrl
mov
jge
ffree
stos
push
xor
sarl
adc
mov
stc
pop
cmp
repnz
pop
lahf
out
add
aaa
push
xor
ret
mov
push
pushf
adc
int
sub
rol
stc
and
sbb
cwtl
pop
mov
xlat
aaa
stos
add
ss
pushf
mov
pop
mov
test
lret
das
mov
daa
inc
popa
adc
pop
cmc
push
dec
scas
sbb
outsl
ret
inc
xor
imul
jne
jae
inc
imul
xor
out
lret
stos
sbb
cwtl
repnz
adc
int3
adc
lea
jnp
inc
add
mov
es
dec
repnz
cmpsl
dec
lock
inc
mov
mov
push
cmc
stc
mov
jl
pop
sub
insb
mov
sub
sub
jb
mov
xlat
jg
adc
lea
inc
jecxz
or
xorb
mov
imul
fisubrs
movsl
xor
lods
adc
and
ret
pop
push
aad
fwait
dec
mov
dec
inc
cmp
jae
pushf
mov
icebp
pop
fistps
mov
jle
inc
int
iret
test
sbb
test
aam
or
ss
aam
arpl
mov
inc
paddb
ficoml
jg
cmpl
test
adc
loopne
imul
dec
fcoml
mov
lcall
ret
add
jnp
ds
fwait
lock
sahf
push
repz
dec
inc
orl
test
and
mov
pop
fmuls
subb
aad
mov
bound
and
and
or
sbb
pop
out
sbb
fs
jmp
enter
movsb
addr16
sub
in
pop
or
dec
and
and
xchg
daa
fstps
xchg
or
cwtl
in
and
stos
cmp
stos
je
xchg
pop
out
xor
je
in
xlat
or
lahf
call
mov
out
test
outsl
out
mov
out
gs
push
cwtl
and
mov
inc
push
adc
nop
aad
cld
sbb
add
sub
inc
or
lock
adcb
in
aad
ljmp
aad
lret
stos
or
addr16
call
movsb
ficomps
or
sbb
push
add
sbb
inc
jl
imul
lea
int
sbb
push
push
loop
fisubrl
dec
or
insb
and
mov
sbb
dec
cs
inc
into
andb
ljmp
push
push
sub
lcall
lret
test
pop
add
jne
or
push
adc
sarb
aaa
arpl
in
stos
add
or
sub
addr16
xchg
add
mov
jle
cmp
adc
sti
jle
out
inc
movsl
mov
jnp
xchg
add
ljmp
and
rcrb
jp
jns
mov
add
or
testb
fisubrl
loop
out
mov
daa
mov
jl
int3
clc
cmp
cmp
cs
sbb
hlt
nop
lods
and
sbb
mov
or
push
lods
rcl
jns
popa
fstpl
sub
sbb
sbb
lds
dec
pop
or
jo
orl
push
outsb
fwait
je
cmc
jbe
jno
add
in
push
adc
jge
popf
adc
xor
nop
imul
jl
mov
aas
pushl
popa
xor
mov
pop
and
sar
cmpsl
mov
xchg
adc
arpl
xor
repnz
lock
andl
mov
iret
adc
lahf
lea
int
mov
mov
filds
pop
loop
sbb
cli
add
mov
mov
xchg
inc
inc
or
jbe
jno
pop
int
jne
enter
xor
jbe
movsl
jle,pn
xor
ret
cmp
lcall
js
push
mov
sbb
or
and
sti
gs
push
jmp
in
dec
push
lock
or
sbb
mov
mov
in
fmuls
jecxz
pop
cmp
out
add
mov
sub
sub
jmp
jns,pt
sbb
mov
mov
xlat
pusha
jp
decl
sbb
pop
cmp
cmp
xchg
cmp
shll
sub
into
ffreep
ror
stos
out
bound
nop
jae
mov
loop
das
inc
loopne
xor
sub
push
in
sti
aad
popf
rcrb
fbstp
mov
stc
das
inc
cwtl
sbb
xchg
mov
mov
mov
inc
orb
inc
push
int3
jns
fwait
mov
gs
aaa
cmc
lods
inc
and
xor
add
jle
jmp
inc
ss
aad
mov
arpl
xor
popf
mov
inc
xchg
pop
negb
cmpsl
rcrb
mov
fcmovnb
leave
jnp
mov
sub
add
leave
mov
jns
inc
shll
pop
es
mov
mov
sub
test
vfrczps
in
je
add
and
jge
sub
movsl
inc
pop
or
and
sbb
push
ss
push
icebp
addr16
das
fwait
jl
inc
lret
pop
xchg
mov
inc
push
fisubrl
inc
adc
les
cmp
sbb
lock
idiv
push
outsl
mov
mov
adc
scas
in
sub
aam
jmp
popf
xchg
movsb
cs
test
movsl
mov
mov
shlb
and
add
push
xor
inc
cmpsl
cltd
lret
imul
cs
lahf
daa
scas
jb
aad
and
push
pop
repz
stos
adc
loope
ja
popf
xor
jle
mov
ret
jl
or
xchg
adc
aaa
add
jmp
jo
cltd
lods
pop
mov
dec
and
mov
push
fwait
sbb
nop
mov
fcmovb
pop
dec
daa
dec
pushf
pop
fs
movsl
pop
or
cmpsl
mov
rcrl
mov
outsl
dec
notb
ds
adc
pop
cltd
dec
fs
mov
jb
sub
loopne
cld
mov
push
fwait
xor
or
sbb
aas
sub
out
stos
movsl
sub
aad
and
shrl
dec
xor
mov
outsl
inc
cmp
stos
ret
in
fsubr
shl
rcrb
sti
mov
scas
or
fiaddl
aad
xor
cmp
cmp
enter
and
lods
in
repz
jmp
sbb
gs
popf
imul
repz
test
mov
add
mull
cli
jns
pop
sbb
enter
xchg
popa
addb
and
sub
mov
loopne
push
ret
xchg
mov
cmp
jp
in
push
mov
loopne
out
mov
mov
sub
push
mov
fisttpl
ret
inc
lods
cmp
mov
addl
push
pop
fcmovbe
mov
sbb
adc
pop
and
sti
adc
pop
dec
mov
ss
aas
sub
sahf
sti
jp
inc
scas
js
sub
enterw
mov
lock
push
stos
push
pop
jg
fcoml
sub
push
dec
jmp
test
sbbl
xor
sbb
sub
jb
cmp
in
sbb
leave
les
mov
aas
push
inc
cmp
ss
icebp
das
in
xchg
call
push
and
inc
rcl
insl
pop
ds
jbe
std
pop
leave
pushf
push
cmpsl
pop
scas
xchg
jno
arpl
push
loope
out
cmp
fwait
int
les
jmp
or
pop
loope
jno
fcomi
lods
sub
pushf
fcompl
xor
nop
mov
addr16
popa
xchg
jg
mov
nop
sub
lods
das
xchg
lret
add
negb
mov
sub
movsb
inc
pop
push
jl
outsb
push
mov
adc
jmp
imul
int
outsb
dec
jl
push
stos
insb
dec
fidivl
jp
or
imul
xchg
push
loope
test
fdivrs
aaa
cmp
rorb
mov
outsl
js
es
pop
jecxz
dec
rorb
jnp
jecxz
clc
test
xchg
stos
xlat
jae
out
cmc
movsb
dec
std
inc
cltd
lcall
add
in
xor
std
out
mov
call
lcall
sahf
notl
shr
or
cmpsb
xor
ficompl
push
filds
dec
jnp
clc
cmp
mov
in
xor
inc
into
roll
das
mov
shrl
dec
mov
sub
push
sbb
jg
in
fisubrl
rol
sbb
divb
jo
outsl
pop
ds
mov
push
jg
dec
cwtl
add
and
and
out
lds
inc
fsubrs
repz
clc
pop
xchg
movsb
adc
adc
sahf
test
jmp
push
fldl
jge
out
fidivrs
mov
daa
shll
jnp
cs
into
jae
add
test
ret
pushf
adc
xlat
inc
fisttpll
jo
fcom
add
add
cltd
mov
sti
rolb
pop
adc
psubusw
mov
bound
mov
cmc
fistpll
es
push
sbb
push
pop
push
jle
xor
or
jle
js
lock
cmp
out
sbb
jo
pushf
test
adc
lret
scas
pushf
dec
mov
mov
pop
cs
pop
dec
mov
sub
dec
lods
into
push
sub
or
pop
int
mov
repnz
xlat
jle
in
mov
es
inc
push
pop
rol
or
xlat
add
test
into
mov
daa
jne
mov
and
mov
lcall
in
shll
mov
sti
xorl
push
test
popf
jmp
out
call
cmpsl
sbb
into
add
test
in
inc
mov
fcompl
sti
adc
icebp
and
in
push
ds
inc
out
add
leave
sahf
jo
push
xor
or
add
cmp
push
aad
cmp
cmpsl
aaa
mov
cmp
xchg
ds
xchg
lea
fsubr
repz
cmp
push
fidivrl
or
pop
pop
rclb
sbb
sub
sbb
xchg
outsl
orl
inc
clc
mov
repnz
inc
xor
sbb
dec
xorb
jg
movsb
mov
aaa
lret
push
loop
out
push
test
xor
cmp
pop
jae
adc
les
std
fwait
push
fistpl
ret
add
fwait
shrb
loope
xchg
popa
insb
pop
bound
loopne
adc
mov
insb
fucomi
lods
rcrb
mov
dec
push
in
push
mov
sub
jp
mov
dec
adc
mov
andb
mov
arpl
mov
jae
mov
sub
nop
mov
xor
out
cmpsl
jbe
stos
dec
addr16
sahf
mov
test
and
mov
and
icebp
jbe,pn
shl
mov
pop
adc
adc
add
dec
and
inc
jp
mov
sub
pop
xchg
lock
pop
enter
jl
jns
mov
adc
push
lea
rcll
mov
push
imul
mov
cwtl
mov
sbb
xor
push
cmp
jl
in
pop
add
xchg
loope
push
das
test
hlt
dec
int3
loopne
loopne
push
mov
jle
mov
jns
out
push
inc
xchg
and
lea
daa
xor
inc
adc
mov
ja
ss
les
mov
add
xchg
or
mov
aaa
push
mov
add
inc
test
push
cli
mov
cmc
ss
sahf
pushf
push
inc
lcall
cmpsb
push
call
addr16
xchg
outsl
sbb
rcr
fsubs
xor
push
je,pn
iret
and
subb
xchg
add
imul
in
xor
and
lret
or
jb
push
mov
out
ljmp
mov
and
fiadds
iret
stos
sbb
jbe
cmpsl
xchg
xor
mov
divb
or
mov
xchg
push
jno
subb
inc
push
aam
jg
dec
xchg
test
jl
iret
sahf
push
fstps
andl
inc
pop
fsubrp
pushf
imul
push
ja
imul
jb
mov
cs
mov
repnz
ficomps
pop
sbb
lret
cld
fcmovnu
dec
mov
popa
jmp
sub
pop
push
scas
fildl
and
aas
xor
test
lea
xor
jno
out
or
push
push
popa
arpl
repnz
mov
pop
mov
fnstcw
jnp
jno
mov
and
and
repz
pop
pop
fiaddl
nop
sub
push
bound
lea
or
repz
pop
cmp
lret
iret
mov
andb
repz
es
xchg
mov
push
pop
popf
int
stos
mov
inc
repz
jmp
in
shr
pushf
jae
xlat
cwtl
inc
xlat
push
ficompl
cmp
and
xor
mov
jbe
adc
mov
xchg
lods
xor
insb
pop
adcb
xchg
jae
push
lret
add
xchg
sub
push
movl
mov
jmp
sbb
js
xlat
ljmp
push
insb
cmpsl
xor
or
sub
sub
insl
inc
out
pop
mov
xchg
pop
and
stos
sbb
mov
cmc
mov
mov
dec
push
pop
and
ds
cmpsl
ret
es
or
lret
sbb
mov
loopne
lcall
mov
fadd
in
lcall
lea
cmpsb
and
xchg
add
cmp
cmp
pop
adcb
in
sbb
cmp
ds
cmp
ja
dec
movsl
test
pop
push
ret
fcom
sub
scas
icebp
add
loop
in
xor
ss
add
or
mov
add
pop
rorb
sub
fisubl
aaa
mov
sub
mov
fs
xchg
scas
shl
adc
mov
push
mov
ror
or
sbb
gs
pop
push
pop
and
jnp,pn
and
mov
mov
mov
mov
or
adc
inc
jne
dec
inc
adc
sub
mov
sub
into
sti
ret
xorb
xor
xor
mov
adc
jl
push
and
push
inc
out
push
xor
icebp
add
and
aaa
xchg
ljmp
sbbl
xchg
aaa
sub
cmp
gs
std
inc
in
loope
xor
loopne
in
jnp
loop
cmp
adc
lods
js
xchg
sub
cmp
inc
loope
cs
pop
add
in
popf
mov
into
jno
fwait
aas
mov
lock
sbb
fs
xor
cmp
and
sub
push
sub
add
fstl
sbb
jb
jo
sbb
lret
inc
icebp
jbe
or
cltd
out
cmp
imul
mov
outsl
js
repnz
arpl
mov
shrb
push
in
sbb
or
pop
mov
or
in
or
lods
decl
das
insl
pop
push
push
leave
dec
jecxz
xor
jge
and
mov
roll
xchg
dec
xchg
xlat
dec
out
fcompl
fiaddl
pop
mov
adc
enter
lahf
lods
fstpt
rcrl
add
lcall
icebp
xchg
and
jbe
mov
xchg
cwtl
subb
xchg
inc
jle
cmp
aas
sbb
add
xchg
or
push
rcr
test
inc
decb
and
out
icebp
aaa
pop
inc
pop
addr16
xchg
idivl
mov
jb
jb
test
scas
fiaddl
mov
or
lret
xor
pop
mov
push
adc
je
or
mov
je
inc
push
lods
cmp
arpl
dec
inc
jae
test
jae
dec
inc
test
push
mov
loop
stc
mov
nop
jo
mov
es
pop
mov
sti
xchg
adc
mov
adc
or
push
lods
mov
cmpsb
bnd
insb
outsl
loopne
sub
or
cmp
out
mov
push
nop
sub
dec
pop
pop
cmp
jne
inc
adc
adc
dec
cltd
in
cmp
aam
dec
pop
sarb
jl
outsb
push
pop
cmp
sbb
into
dec
pop
nop
adc
mov
faddl
loope
adc
fbld
in
int
and
adc
pushf
popa
cmp
call
jp
sub
pop
and
xor
xchg
pusha
shll
cmpsb
shrl
cmpsb
dec
divl
faddl
pusha
jge
pop
inc
sbb
pop
loopne
dec
adc
cmp
and
daa
mov
pop
mov
lea
jno
popf
and
pop
icebp
movsl
and
mov
into
cmp
or
xor
dec
sub
stc
rcrl
loop
mov
out
or
xchg
jecxz
mov
xchg
add
mov
test
in
bound
inc
inc
or
push
xchg
cmp
outsb
pop
ss
pop
sbb
repnz
loopne
loope
inc
inc
mov
fsts
cltd
jmp
mov
cwtl
mov
ret
test
push
adc
mov
cmpsl
lods
mov
rcrl
imul
fnstenv
xlat
xor
negl
out
scas
pop
lods
cld
sbb
pusha
in
adc
or
xchg
or
jb
jno
lcall
es
mov
inc
push
gs
lods
aaa
addb
or
lret
dec
arpl
stos
pop
lock
pop
xchg
and
mov
shll
cltd
movsl
mov
mov
pop
pop
mov
jbe
cli
and
inc
cmpb
mov
push
pop
arpl
inc
insb
xchg
leave
push
stc
call
or
icebp
in
pusha
ja
mov
in
sahf
inc
sbb
cmpsl
mov
mov
cmp
lea
jmp
sti
add
icebp
popf
lahf
addr16
xor
insl
mov
pop
dec
adcl
in
adc
imul
push
aad
loope
mov
pop
scas
mov
call
fmull
push
dec
xor
rorb
fnstsw
cmc
sti
movsl
test
mov
inc
sbb
andl
jne
add
mov
enter
dec
xchg
cmp
fldt
push
out
clc
ds
adc
mov
adc
xor
jp
call
lcall
ljmp
mulb
ds
push
outsb
daa
in
mov
outsb
cmpsl
dec
sbb
and
cs
pusha
shll
dec
loopne
fildll
into
or
pop
and
sbb
lahf
push
movsl
push
ss
mov
sti
mov
mov
lret
outsl
out
ja
jmp
xchg
adc
dec
bswap
fidivl
mov
ljmp
and
or
and
mov
sub
xor
mov
out
mov
incb
dec
outsb
dec
or
out
movsl
inc
loope
lods
popl
inc
mov
aaa
movl
lds
jo
push
in
cmp
mov
sub
pop
icebp
and
add
and
out
dec
cmp
xchg
inc
cmp
and
fisubs
fwait
xor
pop
inc
xor
pop
out
fwait
shlb
sub
fstpl
leave
stos
scas
movsl
cmc
pop
adc
or
fcmovb
mov
mov
lret
fmuls
fisttps
mov
loope
mov
sbb
enter
int
mov
enter
cmp
in
leave
cltd
shrd
pop
xchg
mov
or
les
mov
rorb
test
mov
mov
test
inc
or
sbb
test
movsl
loopne
sub
adc
rcr
sub
jg
adc
clc
sbb
mov
lret
xor
or
outsl
cli
dec
out
add
out
push
xor
and
pop
mov
ljmp
jp
rol
hlt
dec
fs
xchg
mov
bnd
enter
ret
loope
adc
adc
mov
and
jbe
addb
xor
cld
scas
movsb
dec
mov
push
fcomps
leave
fstpl
cmp
add
dec
daa
sbb
out
pop
xchg
jmp
sub
and
ljmp
inc
jle
push
insl
pop
mov
push
fs
sbb
fidivs
xchg
push
pushf
sarb
cmpsl
sbb
or
adc
cmp
into
data16
mov
dec
mov
push
inc
mov
in
inc
lds
insb
mov
aad
sbb
xor
xchg
adc
stos
push
xor
add
vpavgw
or
inc
mov
es
pop
out
fwait
das
addr16
stos
andb
adc
fwait
sbb
jge
mov
ret
xchg
andb
mov
lods
shll
sbb
jmp
stc
dec
fiadds
pop
in
sub
add
leave
cmp
loope
loop
and
sbb
aaa
sahf
mov
movsl
addr16
dec
push
daa
stc
xor
mov
adc
cwtl
pop
and
sti
pop
lret
imul
cmp
cmp
adc
ss
arpl
mov
mov
loope
imul
popa
cmpb
inc
adc
jle
rcrb
ja
dec
jo
enter
sub
enter
stos
add
stos
js
pop
push
js
jae
mov
pop
push
add
testl
popf
nop
push
inc
lods
dec
test
loopne
cwtl
add
mov
cli
lds
pop
mov
sub
icebp
inc
in
push
repz
inc
inc
pop
add
mov
xchg
into
cmp
imul
xor
int3
andl
jecxz
scas
dec
adc
stc
cmp
xchg
mov
mov
ret
pop
lods
mov
jmp
and
jmp
mov
sbb
jb
or
add
inc
ljmp
ficompl
out
pop
and
cld
shll
jecxz
cwtl
mov
fdivl
mov
les
outsl
push
jmpw
sbb
outsb
sub
add
mov
call
mov
loopne
insl
cmpb
jmp
lock
cmp
lcall
push
popf
test
dec
xchg
xchg
add
stos
ret
dec
xor
xor
test
cmp
nop
push
imul
push
push
test
jae
cmpsl
sub
and
fdivr
pusha
mov
mov
add
xor
sbb
add
mov
in
mov
mov
sbb
leave
int3
jae
add
ljmp
sub
inc
xor
pop
inc
inc
mov
cld
dec
cmp
jmp
xchg
jp,pn
adc
mov
push
inc
pop
outsb
add
lods
mov
pop
mov
sub
daa
jb
int3
out
out
mov
ss
in
repnz
mov
lret
mov
adc
jmp
dec
jle
push
rolb
adc
inc
mov
mov
lock
lret
mov
mov
push
pop
dec
dec
popfw
adc
outsl
lock
mov
ljmp
push
mov
out
xchg
cmp
jmp
cli
jae
insb
jecxz
sahf
in
mov
fstpl
xor
ds
xchg
xchg
fmuls
scas
push
adc
jmp
imul
add
sbb
sbb
das
cld
mov
daa
icebp
incb
and
mov
jb
shll
xchg
das
inc
pop
push
or
pop
mov
scas
jb
push
cmp
les
mov
sub
jae
and
sbb
mov
jp
test
fstps
je
cs
pushf
inc
pop
cmc
pop
add
int
pop
sahf
cmpsl
rclb
outsl
stos
js
add
andl
inc
xchg
rorb
aad
mov
sub
fsubrl
int
fs
aad
dec
xlat
jl
xchg
pop
push
aas
jecxz
cmpsl
jne
inc
andb
bound
xor
push
outsb
and
shrb
fwait
inc
mov
sbb
mov
xchg
adc
mov
add
xchg
xlat
lcall
jo
mov
inc
mov
cltd
hlt
push
cs
and
inc
mov
pop
pop
scas
xchg
out
std
xchg
fmull
aas
fadds
loopne
xor
or
pop
call
insb
push
stos
mov
das
nop
xchg
jnp
cmp
xchg
adc
outsb
mov
xor
push
or
int3
dec
push
test
push
mov
fs
mov
cmp
dec
jne
outsb
jne
cmpsb
push
shll
jb
sub
imul
loope
pop
movsl
xor
pop
sub
push
jns
imul
aad
push
push
mov
jae
rorb
mov
ret
xchg
jns
pop
mov
addr16
es
call
jbe
in
les
add
int
fldcw
into
es
enter
sbb
push
mov
jbe
fdivrl
ljmp
mov
push
xchg
je
in
sbb
leave
arpl
mov
xchg
mov
add
fiaddl
push
je
call
cli
push
sbb
adc
rcrb
imul
jmp
jl
mov
jbe
adc
inc
shr
les
iret
out
adc
push
lahf
loop
jecxz
pop
dec
add
in
inc
movsl
pop
pop
ljmp
dec
mov
pop
xchg
and
ds
jg
test
lds
pop
cmp
test
in
sub
shl
gs
psubb
cwtl
push
cmp
cltd
cmp
xlat
jae
aaa
jbe
int3
stos
sub
sbbb
das
add
repz
cmpsb
outsb
add
adc
popl
mov
in
roll
mov
stc
cwtl
add
add
lock
pop
scas
das
movsl
lods
jns
testb
cmpsb
subl
pushf
sub
push
in
cmp
sbb
movsl
jle
test
adc
sub
xor
sbb
out
mov
dec
ret
push
mov
mov
push
repz
icebp
sub
imul
push
test
jp
pop
push
xchg
mov
rorl
ds
xlat
aaa
call
dec
xlat
sarl
inc
dec
xchg
xchg
decb
stc
cmp
aam
fbld
jnp
cmp
lcall
and
inc
fsubrl
jae
pop
and
lcall
cwtl
pop
xor
mov
push
out
sbb
xchg
xchg
push
data16
stos
fdivrp
push
movsl
ja
push
mov
sbb
dec
xchg
out
movl
in
movsb
mov
ljmp
cmpsl
lret
inc
or
mov
sbb
xor
jbe
add
inc
movl
cmc
cmp
mov
dec
lcall
imul
stos
pop
int
or
inc
lods
mov
inc
jp
push
arpl
inc
xchg
out
scas
neg
popa
out
mov
adc
movsb
push
leave
mov
bswap
jge
mov
inc
sub
mov
stos
and
mov
adc
adc
int3
sub
mov
jge
nop
inc
inc
adcl
fs
inc
cmpsb
inc
or
pop
xchg
call
mov
lds
jecxz
int3
dec
ja
out
jo
pop
xchg
sti
jle
cwtl
sbb
pop
pushf
pop
in
je
movsb
sarl
je
sub
gs
into
push
out
cmp
jg
mov
push
inc
inc
vmwrite
inc
ficomps
iret
pop
pop
xchg
or
adc
imul
inc
std
pop
mov
inc
and
subb
insb
or
and
or
aas
xlat
push
outsl
inc
fisttpl
mov
push
push
pop
mov
mov
imul
mov
push
adc
lock
sbb
je
or
xchg
jno
jp
pop
or
jae
outsl
xlat
fbstp
pop
push
add
mov
rolb
sbb
cmpsl
repnz
lods
outsl
call
push
lds
neg
push
sbb
out
sub
xchg
xor
test
je
xchg
jns
insb
mov
scas
push
jno
cmp
sbb
jae
adc
clc
jns
in
jns
sbb
nop
jle
imul
push
ss
mov
movsb
sbb
adc
jb
es
adc
loopne
in
mov
test
push
imul
xor
or
movsl
dec
scas
ljmp
adc
pop
xchg
rorb
addl
add
jns
xor
subl
popf
push
inc
sub
jecxz
add
dec
out
or
movsb
cmp
mov
push
mov
push
and
popf
mov
pop
ficompl
add
inc
adc
shlb
or
cmp
sub
lret
inc
pop
and
mov
push
insb
mov
jmp
cmc
dec
repnz
push
ja
jbe
add
mul
shr
mov
shrl
call
pop
and
pop
into
sbb
mov
pop
add
scas
and
aaa
idivl
in
fs
shll
sti
dec
mov
hlt
mov
inc
or
in
sbb
call
mov
dec
clc
iret
test
and
cmp
jno
sbb
addb
jge
test
nop
fstpt
mov
add
push
or
cmp
cmpsl
xor
fs
mov
xchg
fbstp
push
aas
test
xchg
mov
sbb
outsl
mov
push
sbbb
fisubrl
mov
scas
sub
xchg
pop
movsb
xor
mov
out
inc
and
div
inc
ja
fistps
lods
jns
mov
lods
sbb
cmp
iret
int3
pop
pop
sar
sbb
sbb
xchg
lock
test
test
fidivrl
sahf
in
sbb
sbb
adc
call
mov
jle
lret
add
fsubl
mov
clc
scas
nop
and
rcrb
jmp
mov
outsl
jbe
ret
adc
xchg
addr16
jne
adc
adc
jne
mov
out
inc
sub
movb
out
loop
cltd
or
fidivl
adc
and
lods
int
popf
xor
mov
mov
adc
push
xchg
fisttps
inc
adc
add
mov
fcmovnbe
faddp
dec
sbb
mov
inc
ret
push
jne
pop
std
ss
lock
adc
inc
test
mov
jb
mov
jp
loope
popa
mov
jmp
mov
pusha
push
lods
movsb
bound
cmp
jno
xor
in
inc
push
arpl
out
mov
sbb
dec
jo
mov
or
out
bound
daa
cmpl
jecxz
adc
push
std
arpl
push
cmp
or
jmp
add
cltd
cli
jecxz
jno
push
repz
leave
sub
xchg
jl
mov
aam
pop
cli
sub
xor
jge
or
pop
icebp
xchg
jg
lea
dec
cmp
pop
lods
mov
mov
fistpl
cmpsb
ret
pop
jp
lea
cmpsl
pop
cli
and
pop
in
insb
xchg
cld
imull
mov
inc
sub
test
daa
bound
aas
push
shlb
mov
fst
push
iret
mov
jp
adc
lret
out
aad
mov
jl
push
push
pop
and
sub
mov
jae
aam
push
cmp
div
mov
filds
lea
sarl
stos
jmp
cli
jae
mov
lock
sub
or
mov
int3
je
notb
lods
mov
or
push
int
xchg
mov
xchg
pop
mov
jg
andb
adc
iret
pop
sub
mov
mov
lock
jae
cs
inc
push
ss
and
fsubs
push
test
xchg
mov
clc
aam
lea
mov
dec
mov
inc
lock
add
mov
lock
movsl
shl
xchg
add
and
push
sub
jp
xchg
push
inc
dec
mov
pop
pop
lds
scas
outsl
stos
lods
repnz
push
jp
mov
rol
mov
adc
pop
scas
sahf
test
push
adc
or
scas
xor
pop
push
jnp
test
cltd
xor
dec
push
sbb
fsubrs
sub
xchg
push
sbbl
arpl
add
dec
js
adc
movl
pusha
fisubs
or
xor
xorl
cld
mov
adc
dec
lret
xor
and
add
xor
add
mov
mov
mov
xlat
add
mov
dec
dec
nop
data16
das
fadd
add
or
mov
push
xchg
orb
inc
pop
ficomps
mov
add
mov
mov
cltd
fcmovu
call
sbb
divb
jecxz
mov
jne
in
xlat
mov
pushf
push
mov
mov
pushf
xchg
insb
push
scas
mov
mov
call
outsb
xor
mov
mov
jle
icebp
cmp
popa
std
lea
mov
daa
movsl
jno
jmp
and
push
adc
lea
shlb
in
push
jmp
fcomip
les
lret
push
mov
mov
lods
sti
fsubs
movsl
xor
out
pushf
adc
ja
pop
inc
mov
mov
jbe
sbb
nop
addb
pop
jle
mov
pop
push
lret
fidivrl
cmp
mov
mov
fs
movsb
ret
test
pop
dec
lcall
shrb
jno
xor
sbbb
add
test
mov
cmp
mov
call
sti
push
int
daa
loope
imul
sub
fnstenv
fucomi
add
dec
push
push
icebp
jmp
add
push
mov
stc
pusha
sub
add
rcrb
push
rorb
lds
mov
or
movsb
mov
mov
in
add
mov
add
into
jmp
and
daa
adc
lods
lods
addr16
popa
cmp
pop
in
int3
jl
cmp
mov
cltd
fwait
inc
cld
ret
or
inc
mov
or
loopne
mov
sub
sub
into
inc
sub
mov
mov
test
jl
xchg
outsl
int3
and
sbb
loope
dec
jecxz
xchg
sub
or
outsb
mov
jl
ja
push
cmpsl
shlb
enter
push
pop
inc
pop
test
repz
faddp
popf
jb
add
js
aas
les
ret
push
jae
sti
popf
sub
mov
fidivrl
xchg
cwtl
fwait
out
insl
int3
scas
repnz
inc
mov
pop
mov
cmp
int3
jmp
repz
and
cmpsb
cmp
dec
adc
out
mov
sbb
jb
or
mov
lcall
ficompl
frstor
pop
cld
popf
pop
es
xchg
dec
pop
sub
cmpsl
insb
jno
sbb
mov
sub
push
jecxz
gs
cmp
cmp
mov
cmp
sub
jno
xchg
iret
int3
jno
mov
and
cmc
ret
aas
inc
insb
mov
xchg
fwait
xchg
pop
inc
daa
or
mov
out
movsl
sub
jno
dec
pushf
in
lea
outsl
in
or
cmp
in
in
dec
dec
cmp
cli
or
xlat
pop
in
lock
ja
cmp
ds
das
fnstenv
sbb
jg
fwait
cmp
insb
lahf
mov
pop
sub
orb
outsb
and
pop
mov
and
in
jb
adc
ljmp
xchg
shlb
jecxz
lret
adc
outsb
mov
and
adc
push
adc
sbb
sub
xorb
mov
enter
adc
sbb
cmpsl
lods
bound
cmp
mov
push
add
dec
jbe
sub
mov
push
bound
jns
mov
dec
cmp
mov
xor
push
or
mov
cmp
pop
ds
sub
xor
pop
inc
adc
fistpl
add
push
xchg
ss
ds
and
jg
outsl
orb
inc
adc
popa
add
imul
call
jle
xor
in
in
xor
or
int3
sbb
fs
jmp
shl
mov
les
and
dec
xchg
lcall
pop
push
cmpsb
mov
xchg
pop
pop
xchg
mov
mov
xor
inc
add
rolb
mov
outsb
mov
mov
sub
sub
mov
addr16
push
inc
test
sbb
fs
clc
jp
movsb
lea
sub
notl
push
and
push
mov
fimuls
xor
sti
repnz
pop
loop
cmpsb
jbe
and
sbb
mov
or
sarl
xchg
dec
ret
sbb
loopne
insb
mov
fmuls
lcall
aaa
push
adc
js
cmp
rol
movsl
mov
test
insl
incl
and
or
shl
inc
jnp
or
jb
sub
in
cltd
popf
shlb
shll
pop
push
lock
and
dec
mov
xchg
les
fstl
sbb
dec
push
fwait
mov
or
push
icebp
or
data16
das
and
xchg
xchg
add
jle
out
into
out
or
jmp
mov
add
into
sbb
sarb
leave
sbb
arpl
push
inc
test
ljmp
xlat
add
or
mov
push
lret
stos
je
in
test
and
jecxz
std
jo
inc
loopne
mov
fistl
push
test
mov
into
incl
mov
subl
outsl
adc
ss
push
shll
movb
in
xchg
add
mov
roll
inc
cmp
sbb
shll
and
nop
sub
shld
imul
mov
mov
and
cmp
icebp
add
enter
aas
mov
jecxz
fs
insb
gs
sub
pop
sub
out
sbb
bswap
pop
testl
leave
add
fs
dec
loop
dec
inc
sbb
pop
scas
add
adc
dec
inc
cmp
out
pop
std
add
repnz
and
rcrb
je
shrl
lahf
jne
dec
mov
pop
mull
add
leave
pop
push
inc
mov
shr
enter
dec
add
cli
mov
xchg
clc
push
aad
jbe
icebp
push
xor
mov
jno
cmp
jbe
iret
notb
mov
jae
out
sti
cs
stos
jno
adc
sbb
mov
imul
inc
inc
subl
scas
cltd
scas
add
pop
mov
jp
popa
stc
imull
push
rolb
stc
push
orl
push
adc
inc
add
add
sahf
fwait
cmpl
xor
sub
lock
sbb
repnz
sbb
movsl
incl
je
and
popa
fsubp
inc
jl
and
cld
jbe
or
jle
loopne
push
aas
push
adc
mov
cmpsb
xor
fsub
pop
push
stos
shlb
loopne
lret
leave
fists
pop
jb
xchg
daa
clc
stc
or
cmp
aad
dec
gs
pop
jns
jns
mov
jb
dec
dec
faddl
aad
jns
jmp
shl
push
shll
les
jmp
inc
push
pusha
mov
or
outsb
jbe
inc
lret
neg
movsb
sti
cltd
aas
sbb
lods
dec
rcrb
pop
or
sub
mov
mov
pop
or
or
sub
nop
pop
jbe
adc
fcmovu
ret
xchg
popf
das
or
aam
pop
push
mov
add
nop
xchg
mov
test
dec
ret
sbb
add
add
ror
frstor
mov
cli
in
or
sbb
into
ds
addr16
bound
aad
cld
push
flds
adc
icebp
xchg
lods
lcall
inc
ss
jbe
sbb
es
push
xor
jmp
adc
pop
shll
nop
andb
push
dec
xchg
test
test
mov
fcmovu
cli
lret
xor
mov
cltd
push
mov
push
out
stos
je
in
inc
or
or
add
clc
or
cmp
lahf
sbb
mov
xor
call
mov
xchg
and
enter
mov
rcll
lods
orl
subl
stos
fdivs
or
orl
add
das
ja
xor
loope
mov
sbb
jp
jmp
ret
mov
andl
jns
xchg
arpl
sbb
push
push
test
inc
outsl
pop
push
lret
push
push
jnp
rclb
mov
adc
push
shrl
mov
dec
les
cli
repz
stos
aad
test
add
mov
sbb
ss
xacquire
xor
add
mov
mov
cmpsl
push
clc
xchg
shrb
jb
mov
ffreep
mov
sbb
xchg
pusha
push
loope
lock
dec
dec
js
test
std
mov
fnstcw
lods
inc
jb
ficoml
xor
xchg
pop
out
mov
push
mov
push
and
add
cmp
pop
imul
add
push
pusha
jp
jb
lods
push
pop
ss
jno
faddp
je
inc
dec
dec
mov
aaa
cmpsb
fsts
imul
std
scas
fdivs
fs
sarl
xor
ljmp
repnz
or
fiaddl
sbb
push
sub
lea
pop
jmp
fldl
cmc
mov
hlt
int3
lock
in
push
fidivrl
sub
and
insb
dec
sub
inc
sti
cli
mov
imul
stos
into
dec
mov
xor
in
andb
int
enter
adcb
dec
sbb
pop
in
in
out
mov
out
or
add
or
pop
sub
out
fiaddl
pop
arpl
push
dec
xor
dec
push
inc
adc
and
xor
push
inc
inc
lret
or
insb
jmp
lret
xor
lods
push
mov
lds
enter
mov
pusha
sahf
xchg
loope,pn
aam
popf
jo
fiadds
sbb
push
test
jno
imul
xchg
lcall
cltd
in
dec
xor
and
add
add
fs
popf
aaa
sub
xchg
xlat
pop
mov
sub
test
pop
fcomp
fsub
repnz
mov
loopne
pop
clc
imul
xchg
repz
push
mov
sub
pop
in
imul
in
ret
into
rcll
inc
adcb
xchg
mov
cmp
in
adc
out
clc
inc
mov
jne
jne
div
and
movsb
jb
xchg
ja
mov
sub
aad
out
shlb
pop
lahf
adc
and
psubd
test
cs
jmp
enter
dec
cwtl
inc
xor
cs
inc
xchg
xlat
inc
pop
lret
cwtl
hlt
fwait
insb
mov
aas
jecxz
and
fcom
repnz
imulb
or
les
repz
ja
add
hlt
mov
inc
cmc
aaa
stc
mov
cwtl
dec
cld
lods
jl
jne
pop
mov
aaa
push
test
mov
jle
enter
mov
sbb
addl
sbb
imul
push
fwait
sbb
cli
das
push
je
fiadds
lcall
gs
into
in
testb
mov
push
mov
cmp
in
ret
push
lods
mov
mov
ret
pop
adc
arpl
cmp
xchg
int
pushf
cli
ret
pop
cmovl
in
stos
scas
sub
adc
xchg
pop
jecxz
rorl
cmpsb
xchg
inc
push
mov
test
inc
sbb
imul
xchg
sbb
mov
jne
xchg
mov
lret
sbb
jge
dec
jecxz
and
leavew
adc
fidivrl
sub
sbb
iret
and
bound
xchg
and
outsl
mov
dec
repnz
addr16
adc
mov
rorb
rorl
jo
into
pop
stos
icebp
repz
cmovl
mov
insl
jmp
sbb
pop
mov
xlat
sti
jg
filds
or
std
sub
ret
mov
pop
icebp
ja
mov
pop
mov
imul
jb
inc
imul
dec
and
mov
cld
insb
repz
repz
add
adc
jle
mov
mov
push
mov
dec
clc
les
cltd
shlb
mov
xchg
lds
scas
fildl
inc
pop
nop
in
insl
add
repz
lret
rcll
sub
sbb
lods
ds
pop
inc
fucomi
sarb
dec
imul
pushf
jns
sbb
push
push
iret
mov
cmp
pop
movsw
sti
aaa
dec
sbb
cmp
in
sbb
imulb
or
mov
adc
fbstp
fnstenv
mov
ss
mov
imul
iret
icebp
lret
cld
mov
dec
cwtl
push
mov
shll
or
fcoml
mov
scas
mov
and
dec
js
or
add
sbb
push
aaa
xchg
dec
out
xchg
dec
sbb
jns
in
xor
jb
sbbb
mov
mov
adc
or
sarb
or
mov
stc
push
sub
out
cmpsb
jp
mov
in
pop
icebp
mov
int3
lea
lret
add
into
hlt
jmp
xor
mov
sti
and
js
enter
lea
jo
jno
fdivp
sub
addr16
lret
lds
or
xor
xchg
jge
xor
xchg
jl
gs
fs
stos
mov
adc
adc
sbb
xlat
imul
aad
nop
stos
pop
cli
jle
mov
inc
roll
out
es
out
jns
mov
aam
pop
inc
pop
xor
ja
in
pop
adcl
icebp
inc
fstl
jl
pusha
aam
in
mov
cmpsb
pop
inc
dec
arpl
jnp
sbb
cli
add
out
ja
xchg
pop
ret
sub
add
sub
imull
pop
sbb
inc
ss
jg
mov
mov
mov
adc
ficompl
pop
sub
jnp
les
ds
scas
pop
popa
lret
fidivl
dec
xor
aam
addr16
popa
add
and
xchg
sbb
addr16
add
cmpb
nop
mov
fwait
push
push
cmpb
loopne
jecxz
bound
fisttpll
test
fidivrl
mov
fstpt
call
push
adc
jp
cmp
mov
fdivl
cs
ret
inc
arpl
pop
xorb
jg
fisttps
push
iret
add
cmp
cmp
ja
jbe
xor
into
sub
xchg
adc
insb
scas
sahf
push
shlb
push
movntq
ss
pop
push
ja
and
and
pcmpgtd
jns
les
jmp
out
xchg
movsl
js
xor
int3
mov
jnp
out
fs
lret
mov
mov
inc
shrl
cmc
push
ljmp
pop
xorb
rcll
lcall
sti
and
and
xlat
test
out
inc
jmp
cmp
sti
mov
pop
mov
dec
push
and
xchg
lods
sub
mov
cli
mov
pop
cmp
sub
stos
cmpsl
push
xchg
or
xchg
push
xlat
test
adc
push
aas
lret
xchg
ljmp
sbb
fmuls
add
inc
jbe
mov
cmp
sub
sbb
or
push
xchg
mov
pop
aas
ret
push
sti
xchg
je
cmp
jns
imul
pop
dec
int
sub
sahf
mov
out
pop
sarl
xchg
or
sti
mov
cmp
pop
test
jns
jbe
jnp
outsl
or
mov
addr16
inc
mov
or
adc
cli
pop
lods
mov
mov
push
fstpt
mov
add
add
jae
stos
inc
iret
cltd
fsts
scas
mov
das
inc
insb
mov
jno
add
ja
dec
xor
sahf
fstpt
mov
sbb
imul
cltd
and
out
inc
adc
mov
xchg
mov
add
sbb
and
lret
js
inc
pop
lods
outsb
inc
in
fsubp
push
movsl
stc
in
nop
pop
ja
cli
orl
jo
clc
dec
rorl
push
dec
nop
mov
int3
ds
sbbl
out
stc
push
gs
je
shl
push
pop
jl
xchg
insb
int
mov
xchg
jmp
adc
jp
adc
mov
mov
out
lock
aas
fwait
and
and
lahf
jns
out
adc
loop
lods
pop
mov
pop
pop
xchg
or
mov
repnz
xchg
mov
jo
inc
xchg
push
popa
jne
test
add
cmp
pop
sbb
adc
popa
add
dec
out
orb
cmp
ret
cmp
xchg
test
mov
je
cmpsl
out
jmp
push
jne
lea
in
imul
mov
and
out
sub
ficomps
mov
mov
xor
jmp
mov
arpl
movsb
in
aad
cmp
jno
shll
add
andl
test
repz
cltd
out
cwtl
adc
jp
dec
add
out
mov
and
dec
popa
movsw
jnp
cmpsb
mov
xchg
hlt
mov
jl
lret
xor
ss
aad
pop
pop
pop
or
cli
test
xchg
in
pop
into
sbb
and
mov
jge
cmp
fsubs
stos
insl
adc
sbb
mov
in
das
in
cmp
leave
mov
and
sahf
mov
dec
call
adc
xchg
add
mov
lods
and
inc
xlat
ljmp
and
add
push
cld
sbb
in
divb
push
cwtl
movsb
add
and
test
xor
sub
jae
data16
pop
jge
test
adc
push
pusha
mov
xchg
jle
stos
or
sbb
insl
adc
iret
stos
test
mov
pop
and
xor
arpl
das
fsubp
jmp
mov
test
sbb
pop
fstl
mov
setae
or
movb
sub
mov
sarl
xchg
insb
sarb
pushf
imul
pushl
or
pusha
lret
xchg
rcl
cmc
xchg
mov
cmp
js
pop
jnp
jbe
xor
ficoml
hlt
bound
mov
pop
pop
les
adc
add
mov
jmp
stos
stos
stos
xchg
and
pop
clc
popf
sbb
mov
pop
sti
push
pop
add
gs
sbb
mov
dec
mov
sub
test
jns
inc
xchg
cmp
xchg
push
jl
xchg
adc
imul
hlt
pop
push
sbb
insl
ja
sti
push
and
push
or
xchg
push
rorb
notl
movsb
inc
lret
sub
mov
out
aaa
pop
movsb
pop
mov
repz
xorl
push
stc
push
popf
lock
pop
adc
jae
popa
enter
cmpsl
mov
stos
adc
std
jne
addr16
dec
xchg
cli
inc
lcall
loopne
xchg
adc
push
enter
push
and
insl
das
xor
out
scas
out
leave
pop
mov
shl
or
and
xchg
hlt
and
pop
dec
xor
add
loopne
dec
fwait
nopl
mov
data16
push
xor
fistl
mov
inc
dec
push
jno
ds
dec
cmc
aam
es
cs
hlt
xchg
fsubp
and
andl
outsb
lcall
xchg
jl
scas
or
push
fmulp
mov
and
mov
scas
js
and
aam
sbb
sub
and
mov
adc
lret
nop
in
sbb
hlt
fwait
mov
mov
roll
jle
pop
xchg
imul
xor
adc
xchg
test
xchg
test
insb
test
loopne
push
hlt
sub
sahf
pop
dec
add
xor
loopne
js
out
loope
push
add
cld
adc
in
cli
mov
mov
std
adc
adc
jl
and
insl
fsubs
scas
sub
imul
test
shl
ret
pushf
jle
mov
mov
ljmp
lock
inc
sarl
mov
movsl
and
inc
out
jae
push
cmpl
ret
stos
or
and
xor
loopne
and
das
or
lds
icebp
pop
out
fwait
push
mov
dec
js
fidivrs
push
fistps
sub
movsl
jmp
xlat
testb
aaa
add
inc
push
movsb
insb
les
pop
jmp
push
subl
cmc
push
mov
mov
and
daa
sbb
fldpi
cmp
or
into
ljmp
mov
ljmp
mov
xchg
in
sub
vmptrst
repz
sub
imul
stos
aam
lret
and
xchg
dec
push
iret
inc
jnp
fs
stos
mov
xchg
mov
out
pop
jo
sub
aas
and
jle
imul
fiadds
inc
lea
jle
loope
into
loop
cli
dec
lret
mov
mov
pusha
and
jno
mov
inc
add
imul
mov
mov
rcrb
stc
push
sbb
and
jmp
pop
hlt
xor
arpl
fucomp
xchg
jmp
dec
pop
repz
rorl
clc
pop
push
jmp
jmp
jns
test
mov
ja
mov
pop
fsin
call
jb
cmp
aam
add
je
cmp
fwait
scas
dec
add
or
call
mov
stc
out
cmp
subl
jno
arpl
xor
ja
or
jno
mov
push
fistl
sub
push
pop
push
lods
xchg
xor
insl
cmpsb
addr16
jb
int3
cli
sbb
outsb
aad
addr16
and
popa
repnz
inc
fs
mov
mov
daa
iret
out
scas
add
adc
sbb
adc
or
gs
fmul
mov
pushf
je
jl
jge
cs
shlb
mov
bswap
push
insb
insb
xchg
ss
add
insl
cmpsb
pop
cwtl
xchg
dec
xor
ss
jl
pop
fsubrl
mov
fnstsw
jg
mov
push
jnp
lods
fndisi(8087
stos
push
ret
insb
jno
inc
mov
jae
or
sub
std
call
mov
imul
inc
in
mov
inc
inc
cli
pop
iret
mov
xlat
mov
lret
xchg
cmp
mov
and
xchg
nop
aam
xchg
cld
in
mov
jge
mov
push
insb
mov
or
push
sbb
jns
repz
and
xchg
imul
loope
mov
mov
shlb
push
push
scas
cltd
lods
testl
sbb
aam
lock
push
enter
ss
arpl
test
xlat
pop
mov
inc
xorb
pop
pop
push
dec
push
or
fbld
sarl
out
pusha
fsubs
mov
jge
jne
popf
mov
aas
enter
aaa
data16
fistpll
fwait
mov
cmp
jnp
or
lds
cmp
cmp
aaa
inc
fnstcw
loop
js
lcall
rep
mov
cli
fnstcw
mov
lea
cmp
jl
push
popa
loopne
fstps
int3
out
mov
jns
fidivl
iret
aas
and
sub
bound
aam
imul
icebp
add
inc
xor
negb
out
insl
pop
cld
in
and
in
and
jns
adcl
cwtl
or
jg
adc
sbb
push
outsl
lea
xchg
xchg
shll
mov
and
push
scas
les
or
push
and
mov
mov
aam
pop
ss
jne
cmc
jmp
je
pop
das
orl
or
lret
cmp
xchg
lods
push
orb
mov
cwtl
jns
arpl
lea
push
addl
shll
test
pop
in
ljmp
adc
loop
push
mov
sub
das
test
mov
popa
jbe
daa
and
adc
in
add
jno
pop
mov
aam
stos
push
jbe
inc
jno
lea
or
xor
push
inc
inc
test
jae
jns
stc
ret
push
lret
mov
pop
sub
popf
xchg
xchg
cltd
xor
mov
push
mov
and
or
push
xchg
and
sbb
dec
repnz
outsl
and
data16
dec
or
inc
adc
mov
mov
adc
gs
push
xor
jmp
lock
lret
jnp
int3
pop
pop
inc
adc
out
ret
jae
jmp
jg
loope
or
lock
or
xchg
push
out
adc
ror
pop
and
jnp
xor
and
jle
pop
sbb
je
ja
aam
lock
adc
aam
mov
add
stc
aas
mov
xchg
outsb
stos
inc
pop
pusha
aad
xchg
out
int3
insl
std
mov
out
jno
push
pop
push
mov
sub
mov
jo
into
iret
icebp
dec
cld
jmp
cmc
mov
frstor
daa
pop
push
int
add
jmp
xchg
loope
dec
int3
inc
lea
dec
mov
test
lock
pop
or
cld
xchg
jmp
dec
xchg
mov
inc
sbb
push
xchg
xor
mov
inc
daa
mov
xchg
mov
mov
cmp
mov
movups
cmp
mov
push
mov
popa
push
inc
mov
adc
das
and
or
cwtl
add
xor
fbstp
aaa
addl
mov
xchg
das
test
mov
mov
xchg
insl
add
fbld
sarb
mov
cli
pushl
mov
inc
inc
inc
out
jns
mov
dec
mov
ficompl
loop
nop
lret
mov
jae
cltd
repnz
test
xchg
lods
aas
aaa
sahf
cmp
outsl
xchg
jl
cmpsb
jns
sub
into
mov
pop
adc
sbb
add
testb
push
xor
loopne
lods
mov
dec
cld
test
adc
mov
hlt
jl
frstor
xor
shrb
nop
call
test
mov
jmp
negl
dec
pop
lret
dec
adc
dec
dec
and
insb
sbb
into
and
sbb
sub
mov
mov
subl
fcompl
mov
ret
inc
fcomps
pop
push
inc
inc
sub
imul
inc
int
mov
mov
mov
cmp
aam
push
jb
inc
dec
loop
push
leave
iret
into
and
or
or
sbb
enter
mov
stos
fadds
clc
outsb
and
ljmp
xor
out
dec
mov
pushf
xchg
push
fstl
or
popa
ret
cs
repz
mov
jp
outsl
pusha
cmc
sbb
xor
lret
push
jbe
pop
push
lea
ret
das
jb
sbb
mov
cmovnp
mov
jb
mov
cmp
add
enter
inc
mov
mov
xchg
push
sub
xor
dec
gs
and
xchg
fsubrp
fs
into
pop
inc
mov
sub
pusha
inc
xor
push
das
mov
pop
sbb
cmpsb
inc
mov
push
sbb
pop
cmpsb
cli
pop
jge
test
shll
adc
stc
sbb
ljmp
dec
and
xchg
ss
sub
aam
imul
movsl
cmpsb
mov
inc
adc
and
cmpsb
ret
push
enter
lret
push
insl
subb
cmc
leave
shr
popa
xorl
leave
push
push
mov
mov
pushf
push
rolb
repz
lret
dec
dec
inc
mov
xor
push
xor
mov
clc
mov
loopne
icebp
cmpl
int
pop
inc
testb
loope
xchg
cld
aad
and
pcmpeqw
ffree
sbb
sbb
data16
mov
jae
hlt
mov
sti
ds
fisttpll
loop
xchg
arpl
loope
in
rorl
xorl
mov
cs
subl
cwtl
je
std
out
movsb
push
push
add
jmp
cmp
jmp
fucomip
aad
sti
mov
inc
mov
pop
flds
push
or
enter
push
add
test
mov
sub
test
roll
mov
or
fs
out
test
outsl
and
ss
push
mov
loope
lds
and
jl
jbe
mov
xchg
mov
dec
cmc
loopne
mov
push
push
xchg
idivl
pop
adc
insl
push
mov
mov
dec
jge
inc
xor
insb
push
inc
std
imul
jl
aas
or
outsb
sahf
lock
jmp
inc
jne
mov
or
add
adc
push
push
aam
sahf
adc
mov
aaa
pop
add
jne
lds
dec
dec
ret
sbb
ret
imulb
inc
stos
xchg
insb
jmp
ja
pop
adc
mov
jb
clc
loop
mov
dec
leave
xor
loop
gs
or
movsl
mov
mov
repz
jl
pop
pop
arpl
adc
or
lods
mov
mov
xchg
or
testl
cmc
pop
xlat
aad
adc
push
mov
addl
cld
jne
in
scas
nop
xor
cmpl
lahf
sti
sbbb
and
xchg
movsl
inc
jg
adc
jne
arpl
fisttps
mov
dec
push
mov
fnsave
jl
xchg
or
cli
mov
outsl
xor
lds
jne
subb
jmp
mov
jb
jae,pt
xchg
mov
lret
or
inc
jg
addl
push
jae
les
dec
sub
adc
dec
mov
jge
or
lock
ret
mov
nop
fsubrl
js
sbb
push
adc
mov
jmp
popf
aad
add
mov
jno
sbb
inc
pusha
ja
dec
mov
ja
jle
scas
inc
loopne
mov
pop
dec
imul
es
inc
ds
fbld
mov
into
rcrb
push
int
push
xchg
and
push
loope
stos
test
movsl
inc
pop
inc
rcl
cmpsb
arpl
inc
je
mov
hlt
mov
js
sbb
push
mov
js
imul
icebp
push
aas
adc
adc
shl
mov
ds
sti
or
xchg
ret
sub
dec
fstpl
lds
sbb
dec
fistl
pop
mov
in
out
sbb
call
addr16
xchg
dec
es
dec
rep
dec
push
push
xchg
mov
popa
mov
jb
fisttpl
ja
jae
sub
add
ljmp
xchg
clc
mov
push
imul
je
sarl
std
mov
test
push
shl
xchg
enter
insl
sbb
mov
aas
add
pop
xor
lock
stos
dec
cld
and
mov
into
xchg
or
std
and
mov
lret
pop
test
sbb
insl
daa
call
ret
xchg
repz
test
pop
rolb
or
fildl
out
repz
dec
lds
icebp
shlb
hlt
jae
pusha
adc
sbb
aaa
addr16
dec
mov
je
cmp
lock
ss
mov
and
imul
pop
aas
and
in
mov
cld
repz
inc
int
or
fidivrs
mov
fcompl
es
movaps
fs
ja
and
sbb
sub
mov
dec
insl
push
add
ja
inc
ret
mov
cs
pop
inc
mov
ds
arpl
test
push
mov
sub
mov
cmc
jo
or
mov
dec
mov
ss
xchg
inc
loop
mov
xchg
dec
sti
mov
in
add
push
xor
lea
fisttpl
outsb
loop
mov
and
inc
push
xor
pop
inc
inc
xchg
mov
icebp
sub
adc
mov
aas
inc
hlt
jmp
pop
sbb
push
jmp
mov
pusha
sbb
sti
push
inc
lods
adc
rcl
push
add
adc
push
mov
rcrl
in
mov
sbb
push
mov
insb
pop
jl
ret
pop
add
jle
push
or
clc
inc
mov
fdivrl
jmp
repz
jp
inc
addl
adc
and
jae
dec
push
cmp
pushf
std
not
push
xor
fistps
popa
mov
fwait
cmp
cmpsl
in
sbb
cli
lea
lods
jge
dec
xchg
loop
xchg
or
xchg
cmc
dec
and
or
dec
decb
mov
cltd
in
jmp
ja
movsb
push
mov
enter
adc
inc
fs
cmp
inc
push
lea
movsb
popa
arpl
sbb
xchg
lods
out
clc
insl
xor
xchg
mov
dec
in
iret
loop
mov
inc
adc
xchg
lds
push
idivb
aaa
and
mov
pop
iret
sub
mov
add
adc
loope
out
je
and
mov
jmp
or
xorl
xlat
cmpl
sti
push
xchg
sub
and
adc
notb
inc
lahf
enter
push
jp
in
add
sbb
dec
mov
mov
push
adc
inc
notb
addr16
mov
enter
xor
je
movb
cmc
aas
jmp
aas
lahf
xor
push
aas
lods
sub
imul
cmpl
cmpl
mov
sub
sbb
dec
mov
push
pop
push
jge
dec
lods
out
push
jnp
push
in
sbb
sbb
pop
sub
sub
rorl
fimuls
dec
addr16
aam
add
aad
pop
pop
int3
sub
clc
or
inc
ret
lds
mov
add
inc
push
cmp
adc
push
cld
cmp
pop
testl
mov
sbb
fsubs
int3
push
mov
push
test
out
xor
mov
sbb
lock
leave
ds
into
add
push
cmpsl
in
inc
or
inc
push
sub
xchg
je
pop
hlt
lret
jb
mov
pop
rol
adc
and
call
sub
jae
push
inc
add
xchg
aas
pop
mov
call
lods
xorl
lret
and
repz
mov
cmp
adc
subb
dec
mov
inc
popa
inc
or
pop
addb
les
call
lods
sbb
adc
pop
hlt
fstl
mov
mov
mov
loope
cmp
mov
into
sbb
jns
push
mov
jbe
lods
or
cwtl
imul
ret
out
or
imul
adc
jmp
push
push
ja
dec
fistpll
ja
or
mov
aam
and
push
mov
push
ret
orb
pop
push
push
sti
dec
inc
aam
loopne
lret
repz
in
das
cmp
inc
mov
mov
jbe
out
or
jmp
inc
xchg
pop
leave
ljmp
into
adc
adc
mov
jno
arpl
icebp
cs
and
inc
cmp
push
sti
xor
in
sbb
cmpsb
or
pop
shlb
mov
add
fwait
push
mov
ret
dec
add
xchg
inc
xchg
mov
cmp
das
pop
clc
imul
jae
sub
fcompl
movzbl
imul
mov
add
push
mov
mov
call
mov
ret
iret
cmc
lret
mov
add
jle
cmp
outsb
adc
fmuls
int
push
jo
sti
mov
repz
adc
lea
mov
dec
adcl
icebp
outsl
fldt
sbb
imul
pop
add
loopne
mov
data16
mov
and
leave
cmp
cmp
jns
pop
dec
mov
stc
stos
or
sbb
rcl
xchg
xchg
cmp
int3
roll
add
repnz
push
sbbb
mov
cld
cmp
std
xor
xchg
repnz
mov
jo
outsl
mov
dec
sbb
ss
xchg
pop
cmp
pop
clc
and
cmp
push
push
cmpsl
adc
js
pop
mov
push
je
ljmp
push
repnz
je
add
in
ffree
mov
jge
jae
nop
les
ret
mov
mov
stos
mov
lret
repnz
cld
pop
jno
ret
inc
xchg
inc
cmc
dec
out
xor
sub
mov
cmpsb
add
mov
push
rcrb
jmp
xchg
rolb
lret
lahf
in
jo
mov
sarl
icebp
ss
test
jle
sbb
jnp
ja
cld
push
call
ficompl
and
inc
iret
pop
jbe
fs
and
push
lods
xchg
sub
sarb
lea
out
imul
mov
add
fmuls
inc
das
add
or
xchg
jno
sub
loopne
mov
inc
mov
cli
xorl
lock
mov
push
les
rorl
fcmovbe
ss
xor
xchg
push
aaa
pop
icebp
adc
pop
call
sub
push
add
xchg
cmpsb
repz
xchg
js
out
push
inc
test
es
mov
fisubrs
jno
pop
std
xchg
push
xchg
sub
sarb
loop
out
jbe
mov
xchg
mov
pusha
mov
push
dec
add
daa
dec
fmull
pop
mov
mov
push
cmp
pop
dec
sub
fimuls
pop
insl
push
mov
into
mov
sub
lahf
pop
inc
repnz
aaa
ficoms
rcrl
push
sub
loope
add
pop
sbb
aas
dec
xchg
jb
fstl
js
out
pop
xchg
shrl
pop
repz
add
cmp
rorb
ss
mov
inc
and
out
inc
bound
ret
loope
aas
call
jmp
test
and
pop
mov
mov
mov
movsb
insb
sahf
out
outsb
xchg
fadd
and
dec
pop
fwait
dec
out
jecxz
punpckldq
int
or
cmpl
pushf
push
popa
jl
std
mov
or
pop
mov
leave
adc
aas
jge
pop
adc
test
mov
out
lods
pop
fwait
pop
pop
cwtl
out
push
mov
mov
dec
sti
cmp
js
xor
inc
jns
cmp
popa
cld
pop
sbb
stc
test
mov
aad
jnp
shl
pop
mov
push
add
pop
lcall
je
push
call
in
test
push
popf
cli
jne
scas
sub
pop
dec
push
mov
testb
icebp
jne
shll
mulb
shlb
pop
test
icebp
in
inc
sbb
fwait
std
lods
insb
fldenv
test
test
ja
adc
iret
xchg
jnp
add
mov
add
push
mov
push
jge
cmpsb
jg
int
fcom
or
pop
imul
scas
mov
jmp
nop
or
and
ja
add
aaa
or
sub
rorl
push
out
rcr
xchg
xchg
int
mov
mov
inc
popa
xchg
test
imul
into
scas
sbb
fwait
xor
mov
mov
imul
xchg
pop
push
scas
xor
cmpsl
sti
mov
mov
pop
adc
inc
add
jl
dec
adc
test
test
xlat
fbld
xor
aaa
add
lock
dec
in
es
scas
add
add
adc
rcll
inc
incb
aad
test
pop
xor
adc
in
rcl
mov
push
in
sub
sbb
enter
mov
jge
cmp
cmc
lods
mov
cmc
mov
mov
in
mov
bswap
dec
pop
mov
and
cmp
sbb
jmp
xchg
add
test
inc
and
xchg
stc
jne
adc
mov
adc
jns
mov
mov
mov
cmp
push
dec
mov
inc
out
pop
inc
push
mov
nop
test
and
into
pop
push
imul
dec
pop
subb
arpl
fcoml
ss
push
mov
inc
andl
mov
mov
add
xchg
subb
mov
or
pop
shll
sbb
test
xor
rolb
xor
fdivrl
inc
mov
mov
ficoms
sbb
clc
dec
or
jmp
dec
lods
in
movsl
add
aam
fidivl
push
pop
and
pop
add
cmp
test
ja
and
pop
leave
xchg
xor
stos
dec
push
rclb
shrl
jae
gs
sub
je
lea
outsb
push
pop
dec
mov
cs
ds
jne
and
sub
stos
into
mov
inc
popa
push
test
pop
cmc
pop
test
mov
lret
pop
push
pop
mov
into
aad
jns
or
cmp
bound
xchg
es
mov
ret
cmp
sub
add
nop
push
mov
jle
enter
outsb
adc
imul
test
push
in
mov
mov
push
pop
cmp
mov
inc
mov
cmp
cld
mov
in
rcll
pop
in
xlat
xchg
fnstcw
pop
jl
xchg
lahf
sub
sub
pop
cmpsl
dec
daa
outsb
stos
cmp
in
ret
mov
mov
inc
sti
ss
and
and
pop
into
lret
inc
or
repnz
dec
add
sbb
mov
jns
mov
lea
lods
cmp
rolb
xor
sahf
pop
daa
push
sarb
xchg
push
cmc
jecxz
dec
popf
movsb
pop
andl
mov
push
out
test
xor
mov
pop
mov
inc
lea
mov
popa
inc
jne
repz
sbb
adc
stos
dec
repz
xchg
sub
fwait
cs
pop
test
pop
lds
ds
enter
xchg
jmp
fidivs
aas
addr16
in
add
popf
in
outsl
mov
push
cwtl
push
dec
shll
es
adc
mov
jmp
lock
and
add
inc
jmp
inc
loop
lods
xor
dec
push
leave
ljmp
out
aaa
push
int3
inc
mov
cld
and
mov
insl
xchg
jb
fwait
dec
xchg
iret
xlat
jp
sub
push
xchg
push
ret
call
enter
mov
mov
cltd
mov
xchg
pop
sub
or
call
dec
dec
repnz
aas
or
pop
cmpsl
out
and
dec
push
andl
andb
cltd
adc
cmc
mov
rolb
ja
jge
imul
xchg
test
dec
xchg
xor
sub
add
adc
in
daa
mov
or
dec
or
mov
and
int3
jg
inc
out
cmpl
push
pop
cltd
outsl
inc
cmc
fcompl
fldcw
and
fsub
cmp
ret
mov
add
mov
lcall
sbb
sti
je
jl
xchg
nop
or
mov
stos
lods
hlt
das
xchg
cmp
pop
out
andb
jbe
or
xor
push
ficoms
lea
shrl
push
xor
pop
mov
jno
icebp
jecxz
adc
lea
loopne
pushf
aas
ss
mov
pusha
pop
mov
scas
mov
mov
jp
mov
xchg
mov
dec
mov
stos
fistps
inc
inc
popa
aaa
push
cmp
sbb
jp
mov
push
jo
push
adc
adc
fmul
mov
es
sub
push
mov
add
mov
pop
add
mov
arpl
sub
cs
mov
ss
xor
pushf
scas
js,pt
dec
aas
pop
subb
adc
idivb
cli
lahf
cmp
jns
add
cli
xor
mov
in
sbb
test
stos
aam
movsl
inc
ror
ljmp
xor
fsubs
lods
enter
orl
jnp
jmp
dec
int
jae
loop
lods
pop
aas
mov
push
adc
mov
mov
push
mov
push
arpl
and
mov
out
cli
xor
jnp
mov
sub
mov
outsl
push
dec
jne
pop
shl
cmpsb
mov
mov
mov
cmp
loopne
sbb
sub
popf
or
cmpps
sbb
imul
inc
add
das
std
and
mov
test
data16
mov
add
mov
adc
fcmovbe
nop
cmp
js
cmpsl
inc
psubsw
ss
jae
jmp
adc
out
or
adc
inc
jb
arpl
ret
push
or
pop
jge
loope
call
push
sub
mov
inc
pop
dec
cmp
and
lret
xchg
aaa
pop
es
and
negb
aas
push
cld
jle
lea
push
sbb
push
repnz
and
pushl
adc
rcrb
sub
scas
cmp
and
add
or
adc
mov
insl
pop
dec
add
in
daa
sti
adc
or
jg
rorb
lock
jge
loopne
ja
cmp
out
inc
leave
data16
mov
push
insl
push
iret
push
std
cmp
jle
jg
inc
lcall
cmp
loop
js
jns
pop
pop
lahf
mov
bound
lahf
decl
mov
mov
test
pop
insb
pop
ret
out
in
loopne
sbb
cli
mov
mov
test
push
mov
sahf
ds
or
test
stc
or
cmpl
sub
lods
pop
or
adc
mov
sub
mul
jge
in
shl
sbb
inc
leave
add
outsl
xor
push
out
es
addr16
jecxz
or
inc
test
pop
adc
xchg
fs
into
pusha
xor
push
incl
xchg
sbbb
cmc
test
and
and
ja
in
add
pop
inc
in
ret
push
fcoms
in
pop
lret
mov
pop
lea
or
xchg
lahf
fcomps
cmp
fnstenv
xchg
mov
dec
mov
jg
ret
cli
xor
lret
cmp
sbbl
mov
push
out
les
and
movsl
jge
in
es
mov
sbb
mov
mov
sbb
icebp
cmp
lods
lcall
dec
icebp
filds
test
mov
lret
cmp
inc
dec
or
push
sub
xchg
jmp
mov
js
sub
mov
imul
nop
jo
push
or
rcll
es
inc
cmpsl
mov
out
xchg
shlb
xchg
push
mov
movsb
dec
imul
jns
aad
dec
cmp
or
nop
mov
sub
mov
lret
cmp
and
cwtl
mulb
std
xor
unpckhps
pop
lret
adc
adc
mov
adc
sbb
add
test
lcall
ret
mov
ss
mov
dec
mov
repz
es
lret
popf
pop
out
push
mov
jecxz
cmp
pop
dec
dec
push
mov
dec
or
and
cwtl
xchg
dec
adc
test
lcall
divb
lahf
fcmovu
and
pop
or
out
jl
xor
sbb
pop
test
enter
sub
in
add
lock
add
out
pop
mov
js
cmp
xchg
and
fs
frstor
sbbb
xor
cs
add
or
enter
add
call
aaa
or
xor
mov
mov
int
sbb
xchg
daa
xor
push
call
push
movsl
icebp
bound
les
xchg
shl
pmulhw
aas
loop
xor
nop
int
in
outsb
into
cmp
xchg
cmp
leave
sbb
dec
adc
jae
loop
test
je
sbb
push
in
inc
add
and
adc
dec
and
inc
stos
mov
xchg
sbb
adc
test
das
lret
adc
inc
loope
push
aad
int3
sub
loopne
inc
test
mov
lcall
cmp
lea
jno
pop
add
dec
es
and
test
mov
or
iret
outsb
sub
or
arpl
fwait
pop
out
inc
lock
pmulhw
add
pop
lock
add
xor
push
xchg
and
nop
scas
nop
cmp
push
sti
jl
mov
mov
sbb
popa
and
pop
ja
nop
jns
xor
cmp
aad
aam
stos
data16
fwait
xchg
pop
or
stos
jecxz
cmp
clc
clc
add
movsb
xchg
movsl
lcall
lahf
push
stos
mov
inc
cmpsb
iret
xor
fcompl
mov
sub
stc
pop
das
add
pcmpgtd
xor
std
add
clc
xor
outsl
mov
loope
loope
mov
jae
mov
fsqrt
cwtl
fndisi(8087
subl
pop
rcrl
push
loopne
dec
sbbl
mov
int
pushf
adc
fadd
adc
sbb
or
pop
loopne
cwtl
adc
mov
push
icebp
ficompl
mov
inc
jle
fs
xor
pusha
hlt
xchg
or
call
jb
outsl
lcall
jge
lds
gs
adc
fwait
outsl
subb
out
rclb
jo
mov
mov
das
int3
aam
xchg
adc
clc
dec
fidivrs
xlat
xchg
push
fdivs
jb
xor
mov
sbb
sahf
daa
int3
repz
scas
outsl
jno
lret
pop
call
jp
fiaddl
pop
data16
cs
inc
jmp
dec
adcl
bound
ja
push
xor
xchg
lahf
std
xor
and
jnp
xchg
mov
xorb
cld
fdivrs
adc
fnsave
or
imull
jo
lea
jno
xor
rorb
or
xor
lods
cltd
mov
fsubrp
dec
add
pop
pop
mov
in
mov
popaw
cmc
bound
enter
adc
jno
xor
add
insb
shlb
jmp
sub
sti
push
std
pop
daa
in
arpl
cmc
pcmpgtw
dec
pop
arpl
add
sahf
push
sub
xchg
cmp
sub
mov
jae
mov
pushf
sub
andl
and
xorb
nop
jp
adc
push
push
call
mov
adc
mov
mov
out
cld
dec
mov
jnp
lods
mov
push
nop
jnp
repz
gs
or
pop
jmp
adc
dec
outsl
cs
and
jg
scas
insb
sti
inc
leave
insl
mov
call
jo
and
cmpsb
test
addl
mov
orb
push
xchg
jno
adc
mov
lcall
icebp
add
mov
xchg
out
and
inc
or
mov
cmc
push
out
clc
mov
cmp
dec
fdivrs
xchg
add
fdiv
call
jmp
push
nop
adc
aam
xchg
pop
xor
xor
push
xchg
sub
addr16
insb
xchg
mov
data16
decb
ret
mov
push
cmpsl
mov
adc
jge
js
xorl
and
pop
sbb
cmp
in
xor
iret
lea
mov
arpl
add
adc
fwait
jae
pop
arpl
and
into
mov
xchg
arpl
je
and
je
pushf
push
insl
mov
jbe
popa
mov
std
mov
je
gs
mov
addl
dec
movsl
lcall
enter
in
inc
xor
cmpsb
imul
rdseed
sub
dec
cli
jbe
or
pop
lcall
sbb
outsb
pushf
sub
test
xor
fmuls
dec
lea
xor
mov
shrb
out
cmpsb
adc
mov
push
cmpsl
mov
sub
imul
xor
pop
push
push
xchg
xor
jg
cli
les
sarw
jle
imul
fnstenv
sub
dec
jnp
rorl
sbb
imul
cmp
sti
jbe
ret
mov
sbb
mov
pop
popf
xchg
and
inc
push
insl
xor
jle
mov
mov
jb
fistps
mov
or
mov
adc
or
lods
mov
sahf
leave
mov
sbb
dec
and
clc
jmp
jmp
addr16
icebp
dec
adc
xchg
jecxz
adc
cmp
mov
dec
mov
or
outsb
push
mov
mov
cmp
call
jmp
pusha
or
inc
xor
les
mov
int3
inc
sbb
cmp
shll
lock
sbb
add
cmp
pop
cs
cs
pop
dec
or
mov
mov
xchg
aaa
test
cmpxchg
jl
fadd
pop
and
not
add
stos
push
cmp
adc
mov
jle
dec
sahf
xchg
loopne
dec
test
xchg
lods
stc
mov
or
lods
add
mov
sub
punpcklwd
loope
popa
xchg
mov
es
hlt
scas
dec
push
sbb
movsl
push
sahf
pushf
sub
outsl
add
cmpsl
sarb
jne
xchg
cmp
insl
or
jp
scas
loopne
jmp
cli
rorb
push
outsl
mov
fdivrl
lret
daa
loopne
push
xor
xchg
icebp
xor
dec
push
fstl
ret
inc
ret
mov
test
clc
mov
and
add
lret
inc
filds
adc
shl
xchg
inc
icebp
add
cmp
inc
xchg
lcall
mov
jecxz
jnp
adc
mov
mov
mov
sub
dec
ja
aas
inc
ljmp
es
mov
dec
rol
lock
fwait
pop
xlat
insb
pop
dec
fwait
test
aad
fmuls
sub
dec
int3
mov
add
lea
sbb
into
shlb
sbb
inc
jo
xor
cmp
fdivrl
xchg
inc
bound
xor
xlat
test
test
popa
jg
pushf
lcall
clc
or
aam
cmpsl
cmp
fimuls
mov
mov
mov
sub
and
xor
cli
cmp
jnp
xchg
je
jle
push
push
fistps
jae
repnz
popf
xchg
pop
cmc
loop
out
psraw
test
mov
cmp
incl
push
push
cmp
dec
fcomps
enter
gs
sub
cs
mov
addl
lods
lea
test
fldl
fdivrl
pushf
fs
jg
ret
mov
sbb
push
jne
push
xlat
scas
inc
insl
lret
add
mov
lcall
add
subl
in
lea
push
jle
or
and
xlat
mov
push
stos
shl
es
add
fisubl
push
insb
mov
insl
adcl
scas
fs
mov
std
scas
testb
call
jb
sbb
std
test
movsb
out
test
and
mov
fiadds
sub
lret
cmpsb
iret
lods
loopne
dec
ret
dec
bound
fldcw
push
bound
imull
outsb
ss
jl
test
xchg
inc
mov
and
shlb
mov
les
mov
adc
outsb
mov
xchg
add
mov
pushl
mov
jecxz
xor
sub
daa
scas
mov
frstor
adc
lods
popf
call
jle
or
lds
and
loope
sub
sub
inc
cmp
xchg
lret
movsl
call
sahf
pop
punpckldq
mov
sbb
and
nop
xchg
bound
jge
sbb
mov
mov
xchg
rolb
adc
test
lcall
sbb
call
adc
sub
sbb
aas
xor
std
lods
es
push
sub
pop
mov
xchg
pusha
mov
jo
cwtl
and
popf
cmp
mov
movl
xor
ret
sub
sub
cmp
pushf
out
in
xor
push
aam
pop
mul
cli
xchg
rcrl
add
add
xor
and
dec
xor
and
dec
push
add
pop
arpl
and
mov
mov
dec
add
lods
outsb
mov
in
jecxz
outsb
mov
ret
mov
pop
mov
cli
sahf
outsb
cli
add
jmp
leave
loop
sbb
push
lods
adc
mov
push
jle
inc
aad
add
sub
je
mov
cmp
lods
int3
inc
fdivrp
icebp
loop
lods
pop
dec
cld
and
fsubrs
mov
mov
das
enter
adc
xor
xor
stc
sub
push
add
dec
mov
in
and
sub
add
popf
into
in
inc
pop
add
mov
fisttps
sub
mov
xor
or
mov
call
out
push
mov
push
dec
mov
adc
cmp
pop
stos
inc
cmp
imul
push
push
lea
stos
cmpsl
test
jnp
mov
xchg
es
cmp
cmpsb
and
xchg
insb
imul
mov
jmp
sub
insl
jp
pushl
test
inc
insb
stos
jecxz
fcoml
sti
jp
inc
jecxz
movsl
arpl
orl
out
push
jb
scas
outsl
dec
jge
int3
std
or
jne
or
xchg
xor
mov
cmc
scas
insb
sarb
addr16
into
js
movsl
cwtl
add
mov
cmp
cmpl
pop
jg
mov
fcmovb
jle
xchg
mov
xchg
mov
out
dec
sbb
adc
mov
cmp
mov
popa
out
sbb
in
in
lods
out
rorb
mov
cmp
cs
loope
sub
int3
push
lahf
dec
adc
jg
mov
cmp
ret
lods
inc
movsl
add
dec
loope
jb
pop
xchg
mov
lods
sbb
xor
outsb
adc
cmp
mov
lock
xchg
mov
jge
adc
int3
push
nop
gs
shll
inc
sbb
mov
sbb
inc
mov
cmp
inc
push
shlb
inc
mov
push
cmp
cmc
adc
mov
mov
int
lock
fsts
jge
mov
jno
push
pop
push
pop
xchg
or
xor
mov
adc
jle
xor
sbbb
cltd
loope
hlt
and
ja
imul
or
mov
rcrb
mov
dec
test
idivl
mov
sarl
adcb
push
cmp
sbb
xchg
xorb
scas
test
jae
scas
dec
xor
and
call
aas
push
jo
sahf
jne
shlb
mov
sbb
hlt
push
xchg
sub
aas
pop
lcall
shlb
sahf
mov
push
or
rcrl
mov
clc
push
lea
adc
adc
mov
sub
jns
cmp
mov
mov
cmpb
push
sbb
sbb
pop
xor
in
sarb
hlt
movsb
xchg
cmc
add
or
rcll
jecxz
lret
push
sub
or
push
inc
lods
rol
imul
cmpsl
int
lock
popf
push
outsb
cs
out
add
dec
leave
pushf
outsl
xchg
stos
lret
popa
inc
andl
inc
dec
add
lods
sbb
pop
inc
or
jb
in
or
inc
daa
dec
jmp
mov
pop
xor
ficoml
cld
test
bound
popa
rorl
mov
les
ja
xchg
xchg
pusha
inc
mov
adc
dec
das
rol
mov
adc
xchg
icebp
cs
imull
leave
fsubrs
loopne
fmuls
mov
jne
pop
lods
andb
pusha
xor
mov
or
cmp
movb
add
mov
outsl
sub
cmc
push
out
cmp
push
in
cwtl
nop
test
push
xchg
shll
bound
xlat
bnd
and
clc
cmc
insb
mov
jns
in
in
and
lea
mov
aad
mov
test
jne
and
mov
dec
cmp
fadds
ret
fwait
mov
lcall
and
push
mov
sarb
mov
sub
test
jns
xor
add
icebp
push
adc
loope
mov
push
xor
lds
mov
xchg
shr
jg
gs
test
outsl
xchg
cmp
movb
enter
js
dec
push
jp
scas
ljmp
fdivp
fisttps
sahf
cld
inc
lret
fadds
adc
push
fsubs
test
std
ja
sub
xor
pop
mov
adc
ror
dec
and
movsl
cld
mov
popf
jb
shl
lahf
fcomps
or
testw
pop
call
xchg
outsb
jns
lds
ret
jbe
jecxz
pop
and
lods
xchg
sub
sub
std
fmuls
dec
stc
mov
and
or
and
lcall
ret
idivb
mov
sub
inc
fwait
sti
mov
aam
hlt
sub
hlt
push
scas
ret
mov
fdivs
cmp
sti
test
gs
sub
int3
dec
into
pushl
lahf
sbb
mov
pop
int3
fimuls
fadd
add
pop
mov
stc
pop
xchg
push
xchg
and
shll
push
dec
imul
repz
loopne
adc
fs
push
fdivrp
inc
rcr
out
popf
sahf
daa
cmpsl
std
repz
std
xchg
inc
ret
and
in
into
mov
in
mov
fisubl
dec
rcrl
mov
fucomi
rorl
cmpsb
push
or
dec
clc
sub
in
fmuls
cmpb
int
xchg
mov
xor
mov
imull
add
cmp
add
loope
cmp
test
rolb
xor
jmp
fldt
call
sub
add
fdiv
or
cwtl
pushf
ret
push
mov
int
push
mov
std
cli
xor
not
adc
cmc
cli
mov
mov
sbb
stc
adc
in
inc
call
xor
sbb
in
imulb
aam
xor
lahf
mov
sbb
test
fstpl
enter
cmp
loope
ret
movsb
and
frstor
orb
js
jb
rep
add
xorb
xchg
mov
xchg
or
xorl
lods
pop
inc
mov
fiadds
hlt
push
inc
test
xor
jecxz
mov
add
test
push
add
mov
shrl
jmp
leave
in
xor
mov
dec
and
mov
push
aam
daa
sub
jae
fsubrl
inc
add
fstpl
hlt
pusha
cmp
sarb
cli
movl
pop
es
pop
dec
mov
lds
pop
cmp
lods
xlat
mov
int3
movsb
stos
or
data16
mov
rclb
subl
mov
dec
lock
add
xor
push
les
les
mov
popf
outsb
mov
sub
loope
and
jne
sbb
sub
cmp
push
orl
add
sub
cmp
in
icebp
push
or
call
xchg
add
mov
cmpb
fists
xor
jnp
out
pop
sub
or
rclb
add
sahf
out
sarl
in
pop
xchg
int
push
nop
das
mov
xor
or
push
jae
clc
in
xlat
adc
sbb
jbe
jecxz
inc
das
push
cld
xor
pop
jmp
lods
mov
aas
inc
and
ret
pop
cmp
inc
aad
addb
cmpsb
sub
push
add
fisubl
dec
lea
dec
insb
in
xor
call
imul
sub
sbb
dec
add
sahf
push
lret
sub
fiaddl
jl
push
jo
out
xor
pop
iret
scas
out
idivl
pop
jnp
mov
push
sbb
jmp
aad
xchg
mov
xor
rorb
inc
jmp
int
cmp
into
push
mov
mov
add
cwtl
push
in
and
dec
pushf
mov
jmp
push
pop
divb
inc
or
adc
mov
xchg
jbe
imul
push
sub
cmp
push
clc
ds
nop
es
mov
and
nop
dec
popf
sbb
jbe
inc
rclb
xor
adc
pop
test
sub
and
jmp
push
mov
jnp
push
inc
out
loop
dec
pop
shl
sub
inc
test
sbb
fsubrl
cmpsb
fsubs
rcrb
xorl
sub
std
mov
addl
lcall
mov
add
fldl
xor
idivl
cmp
sub
les
stc
xor
pop
or
mov
sbb
jns
push
outsl
dec
pop
aad
fdivl
xor
and
jo
adc
jo
mov
jge,pn
lods
mov
inc
and
jge
sahf
jmp
mov
inc
mov
cmpsl
insl
adc
mov
xor
xchg
cld
mov
andb
fstl
lcall
jecxz
clc
addl
gs
push
xor
push
clc
xor
xor
dec
add
stc
adc
and
les
pusha
shrl
or
call
adc
add
lahf
or
push
aaa
ret
sub
pusha
or
cmc
push
mov
mov
flds
mov
xor
mov
aaa
mov
mov
inc
arpl
mov
subb
lock
push
outsb
mov
xchg
mov
cmpsb
jg
sub
out
std
xchg
mov
hlt
dec
xor
xchg
and
mov
sar
adc
fidivs
icebp
fnsave
lock
jle
push
dec
xor
shrb
adc
daa
cs
pop
iret
jmp
arpl
scas
pushl
pop
xchg
or
xor
cmp
shlb
add
and
adc
js
out
pusha
pop
jns
cmp
out
aas
scas
lret
push
mov
and
push
push
xchg
and
stc
scas
push
cmp
pusha
push
stos
dec
call
mov
ja
cli
insl
cmp
mov
dec
hlt
rcr
mov
stc
dec
rcrb
jae
enter
dec
popf
iret
mov
test
aad
xchg
push
mov
mov
push
push
mov
xchg
push
adc
int3
shr
add
pop
mov
mov
enter
or
outsb
or
pop
push
popf
hlt
jl
sub
psubq
jbe
push
in
xchg
adc
addl
out
outsl
repnz
outsb
mov
pop
bound
test
sbb
ret
mov
addr16
ret
dec
cmp
xor
and
fidivrl
repnz
inc
leave
fnstsw
rol
lea
imul
psllq
jne
mov
iret
sbb
in
dec
cmp
and
push
lods
inc
nop
enter
sti
cli
repz
inc
jnp
jl
push
xlat
or
add
pop
xor
aaa
out
xchg
push
imul
sbb
mov
popf
mov
dec
xchg
gs
push
xchg
shlb
xor
ljmp
xor
ljmp
add
sub
jp
ljmp
dec
mul
mov
mov
mov
xlat
mov
cmp
je
pop
inc
mov
aaa
push
hlt
push
jae
es
and
sbb
scas
xchg
ljmp
jo
inc
test
cmc
mov
mov
flds
hlt
mov
dec
into
ss
jnp
shlb
cmp
add
and
or
idiv
cli
fisubl
mov
scas
jmp
das
clc
inc
sub
fs
clc
subb
icebp
xor
data16
pop
out
jb
mov
imul
xchg
cmp
sbb
pop
js
imul
xchg
dec
aam
call
push
cli
testb
or
daa
in
int
and
dec
cld
lcall
das
adc
std
imull
jg
cli
xor
dec
mov
popf
xlat
popf
scas
xchg
repz
inc
inc
add
sbb
inc
subl
das
mov
sti
lock
jo
call
popa
clc
shll
and
fldl
pop
dec
mov
jae
test
mov
dec
imul
sbb
mov
xchg
inc
cmpsl
pop
rcrb
push
fisubl
dec
dec
jae
popf
js
xchg
dec
xor
jecxz
sbb
in
dec
mov
ret
add
push
out
add
xchg
xchg
mov
imul
cmp
and
ljmp
dec
jb
rcrb
pop
decb
pop
ljmp
dec
mov
add
mov
jae
scas
cmp
pop
pop
ret
leave
inc
and
fidivs
mov
cmpsb
mov
out
in
jmp
les
cmc
adc
lret
sub
xchg
ret
in
mov
push
jbe
inc
enter
int
sub
mov
sub
lds
jno
andb
adc
cmp
out
les
or
sub
push
cmp
loope
scas
xor
xor
push
jae
mov
xchg
dec
outsb
jecxz
xor
add
jns
int
pop
jmp
add
ret
pusha
aaa
and
int
sbb
test
call
xor
mov
dec
mov
mov
pop
test
and
jae
sysenter
inc
sbb
test
jns
and
mov
aam
or
or
imul
insb
xchg
je
cmpsb
or
sub
in
into
adc
inc
in
into
push
jge
push
push
and
inc
mov
sbb
addr16
movsb
adc
loope
js
ss
and
and
adc
jp
fldt
cltd
out
inc
mov
inc
jg
add
jne
adc
xchg
in
inc
adc
mov
test
das
mov
mov
loop
outsl
jl
mov
mov
lea
adc
xchg
pop
pushf
xor
cs
das
jbe
outsb
movsl
scas
je
sbb
imul
sbb
inc
inc
pop
inc
ret
lret
or
loopne
imul
add
pop
pop
mov
push
adc
nop
sti
cmp
xchg
push
popa
sbb
outsl
mov
rorl
push
pop
in
cmp
push
nop
aas
cs
fsts
inc
cmpsb
jge
adc
leave
add
scas
xchg
lret
jl
inc
and
in
cltd
jg
or
pop
sar
icebp
xor
mov
stc
leave
add
test
movsl
jmp
pop
inc
lcall
or
push
pushf
mov
int3
fimull
scas
inc
or
jno
int3
push
and
into
mov
or
mov
in
pusha
and
outsb
xchg
gs
fmuls
nop
xor
mov
cmc
dec
xchg
jae
mov
ljmp
pop
stos
push
int3
jb
inc
jle
rclb
push
mov
jo
jecxz
aam
je
add
push
xchg
xchg
cmp
testb
ljmp
sub
jns
or
daa
pushf
les
add
insl
add
pop
mov
shlb
div
cmc
or
adc
or
mov
inc
xchg
loop
xor
enter
mov
dec
shr
jg
inc
and
or
mov
stc
jmp
pusha
cmpsl
mov
fstpl
mov
dec
pop
test
test
mov
jg
add
cli
sub
sub
lds
lret
insb
pusha
xchg
jb
xchg
das
and
leave
aam
lahf
mov
add
jp
mov
jne
mov
push
cmp
outsl
movl
xchg
mov
cld
push
fistpll
mov
inc
bnd
sarl
leave
ds
inc
je
iret
push
jle
dec
cs
mov
in
cs
test
xchg
pop
xchg
cmc
fiaddl
dec
inc
addl
orb
aad
into
mov
lds
sbb
insb
mulb
lods
idivl
mov
and
pop
adc
ret
out
and
out
cmp
pusha
insl
ljmp
rcl
xchg
or
mov
sub
push
lock
mov
push
pop
inc
jge
mov
aaa
mov
test
push
sub
mov
mov
jl
xchg
xlat
jle
dec
or
sbb
cmpsb
sub
push
push
icebp
pop
add
lret
cli
test
lock
test
call
inc
aam
cli
sub
jge
jbe
and
or
jno
sti
mov
cmp
mov
insb
sub
and
test
mov
in
cmc
pop
cltd
insl
jle
pop
ljmp
sub
pop
and
xchg
cs
push
imul
jns
adc
testl
xchg
xchg
loopne
rcrb
push
xchg
push
dec
or
or
rol
adc
push
or
xchg
pop
lea
sub
orl
add
sahf
cld
jne
das
test
mov
sub
scas
enter
nop
adc
lcall
or
imul
dec
lock
pop
icebp
pop
clc
in
push
pop
cs
mov
gs
out
dec
xchg
adc
dec
push
jmp
mov
fimuls
mov
les
add
xchg
in
arpl
cmp
hlt
xchg
cmp
xchg
mov
sub
or
sahf
test
mov
jp
jne
ret
pop
lods
xchg
xchg
cmp
popw
out
addl
cmp
mov
and
cmpl
push
fwait
sub
sub
cltd
and
and
popa
sbb
fs
xchg
mov
xor
adc
pop
out
popf
jnp
js
push
pop
out
cmp
cwtl
call
rcl
les
std
dec
aas
lods
imul
jmp
jb
cltd
adc
push
mov
sbb
subl
aaa
movsl
jb
pop
push
lods
int3
mov
cwtl
out
bound
fdivs
mov
mov
dec
xchg
jl
mov
incl
xchg
mov
jno
aas
adcb
mov
cmp
mov
push
test
sub
repz
inc
mov
lods
inc
stc
mov
xor
add
inc
sub
out
pushf
or
bound
or
ds
stc
pusha
ja
mov
test
or
sbb
cmp
jmp
movsl
and
adc
cmp
fadds
insb
inc
mov
lret
add
and
ret
test
pop
dec
sahf
ja
jnp
mov
cmpsb
or
pop
or
xor
mov
push
ds
cmp
jns
adc
ret
dec
fbstp
push
or
dec
jo
mov
stc
cmp
jp
jg
ret
fadds
push
fisttpll
and
mov
mov
sbb
loope
popf
xor
pusha
jp
int3
cli
cmp
add
movl
pcmpeqd
mov
into
xor
iret
cwtl
lods
mov
nop
popa
roll
add
bound
inc
hlt
js
ret
js
cmpsb
in
bsr
mov
lods
scas
sbb
jno
push
and
add
into
lret
nop
cmp
test
pop
pop
add
clc
jecxz
and
ret
enter
add
push
xchg
sub
add
test
test
xor
sub
lock
sbb
inc
das
mov
cmp
push
sub
imul
jne
mov
add
sbb
cmp
mov
int
or
jo
icebp
bnd
cli
jb
shlb
xchg
inc
in
sub
data16
leave
int
jbe
enter
lret
mov
cmp
lods
cmp
xchg
bound
outsl
ds
push
scas
push
mov
jg
cmp
sub
sub
enter
jle
pop
and
test
sbb
cmp
lret
push
xchg
inc
ret
push
fcmovne
jge
xchg
jp
adc
aad
mov
lret
cli
add
lret
pop
nop
cs
inc
push
cmp
mov
fucomi
xchg
mov
loop
fbld
xor
sub
test
fcmove
dec
outsl
sbb
int3
sbb
prefetch
rcl
xchg
enter
in
xchg
ja
push
inc
sub
iret
dec
jb
movsb
xorb
mov
xchg
popf
dec
push
cld
xor
shr
xchg
push
movsl
jg
clc
cli
mov
sub
ret
add
sbb
fstl
out
mov
movsl
int3
scas
call
push
mov
sub
rcll
push
xor
mov
xchg
xchg
inc
push
mov
and
std
std
inc
mov
xlat
sbb
movsl
push
inc
mov
mov
mov
dec
pop
inc
and
push
mov
popa
out
and
xor
test
mov
jmp
dec
decl
adc
xor
out
jo
jp
sbb
jl
sbb
rcl
iret
pop
orb
test
es
push
sub
pop
jns
mov
jge
xchg
cmpsb
popa
mov
or
ret
js
cmp
inc
jbe
push
insl
insl
lahf
into
aam
sub
xchg
cwtl
lods
ja
xor
mov
dec
or
cmp
aam
icebp
inc
cmc
add
ret
jnp
mov
dec
cmpsb
jne
inc
mov
push
push
and
dec
dec
push
mov
into
push
xchg
jb
ret
pop
cmp
xchg
mov
xor
lea
int3
dec
inc
inc
xchg
aad
test
fs
js
cli
aaa
jge
or
ret
push
dec
test
mov
movsl
mov
cmp
xor
mov
adc
mov
add
adc
ljmp
adc
aam
pop
jmp
sub
jge
sbb
lods
ret
add
ljmp
sbb
pop
mov
es
push
lods
cmc
add
cmp
jg
scas
pop
aad
mov
pop
xor
jne
lods
scas
in
push
inc
into
push
sbb
or
inc
jge
lahf
cmp
test
add
inc
push
pusha
loop
xchg
nop
mov
js
aam
dec
fldl
xor
ret
test
sub
mov
mov
bound
xor
aad
fs
in
stc
mov
imul
mov
ljmp
shl
inc
push
or
push
aaa
pop
dec
jp
cli
xor
int3
dec
adc
insl
xor
sub
push
cmc
lea
test
add
mov
push
sbb
mov
inc
hlt
jmp
mov
push
inc
sti
xor
jecxz
add
pusha
cmpsb
jmp
sti
hlt
das
xchg
into
ljmp
jmp
stos
aam
push
push
fadd
sub
or
jnp
jne
lcall
iret
mov
leave
mov
pop
or
fdivrl
bound
cli
sub
jbe
in
int3
std
mull
mov
adc
arpl
mov
push
leave
xor
fildl
fistl
popf
jg
aas
test
ret
pop
xor
fidivrs
aam
and
mov
and
and
xor
inc
adc
push
mov
or
jne
lock
add
scas
mov
jle
and
inc
stos
sar
inc
insb
sbb
pop
xchg
lods
jmp
dec
add
insb
sti
imul
dec
dec
cld
jp
mov
sub
push
dec
pushf
and
jae
adc
rcll
jne
push
xor
or
jo
xchg
pop
cs
rolb
or
popa
sahf
hlt
icebp
mov
sbb
mov
xchg
lcall
push
adc
and
loop
xchg
jne
leave
sbb
imul
je
mov
js
jne
sahf
push
out
pop
sbb
mov
adc
fbstp
pop
fnstenv
addr16
jmp
jmp
or
fadds
jb
orl
xor
out
or
daa
lcall
dec
inc
enter
cmp
fisubrl
and
jae
pop
xchg
popf
sbb
pop
cmpb
inc
mov
dec
jo
or
repz
sahf
sbb
mov
cmp
mov
push
mov
lock
inc
lods
insb
push
xchg
icebp
rolb
and
ja
jae
push
mov
add
lret
int
addr16
jbe
add
adc
sti
dec
cltd
aas
jnp
mov
fidivrl
sbb
pushf
add
test
inc
inc
add
cld
std
outsb
xor
mov
add
xlat
adc
cmp
lret
aad
ret
sub
imulb
pusha
mov
jo
into
imul
sbb
aam
push
fildl
jno
in
pop
mov
jmp
jne
cmp
dec
cmp
scas
arpl
push
sbb
lods
aas
xor
jl
mov
inc
int
outsb
mov
sbb
mov
andl
lahf
mov
sub
imul
or
inc
push
pusha
sbb
xchg
xchg
les
pop
jle
outsl
cltd
insl
loop
mov
popf
inc
xchg
pop
jl
imul
pushf
movsb
int
xchg
sbb
xor
xor
insb
jge
js
stos
outsl
cmp
fwait
gs
inc
lret
movsl
in
sub
sahf
pop
or
test
stos
dec
pop
push
push
dec
push
add
mov
mov
pop
aam
mov
inc
cwtl
push
mov
pop
dec
mov
std
cmp
arpl
outsl
lret
andl
push
loopw
add
mov
hlt
jmp
pushf
jne
inc
mov
mov
pop
sti
inc
sbb
fsubr
pop
mov
aas
lret
xchg
jle
xorl
xor
adc
in
mov
mov
cwtl
iret
ds
test
sarb
outsl
cs
jne
lods
std
fdivr
in
mov
popf
mov
movsl
pop
xor
fidivs
ss
xchg
adc
adc
sbb
aam
out
push
pushl
adc
cwtl
sub
push
pop
clc
lcall
out
in
scas
jb
leave
nop
push
sarl
cwtl
cmp
xor
hlt
xchg
aad
ret
adc
pusha
xor
enter
adcb
fistpll
adc
je
mov
popa
mov
lock
sub
mov
mov
test
aas
and
int3
stos
mov
sahf
mov
enter
fmull
hlt
paddsw
add
repz
lahf
lahf
add
inc
movd
cmpsb
rcr
sbb
jecxz
xchg
inc
out
and
adc
mov
aaa
test
stos
mov
push
sbb
cmpsb
sub
xor
xor
jbe
scas
jns
add
push
and
out
mov
aad
hlt
sub
test
mov
and
movsl
data16
repz
dec
movl
push
repnz
and
ja
pop
push
movsl
bswap
push
dec
lret
sbb
iret
sub
sbb
addr16
into
mov
xor
sub
daa
inc
loop
add
ljmp
out
push
push
sbb
pop
push
sbb
ja
nop
in
sub
loope
sbb
ret
push
ja
fwait
ret
jne
icebp
adc
or
xchg
xchg
pop
pop
xchg
nop
sbb
or
lea
stos
fidivl
mov
inc
and
shrb
push
insb
dec
lea
pop
gs
inc
ljmp
arpl
fcoml
xchg
repz
push
mov
fnstenv
imul
inc
sbb
cltd
lea
or
mov
xor
or
add
sarb
out
daa
icebp
and
jg
scas
xchg
inc
ret
test
rcr
mov
jo,pt
push
jne
mov
leave
in
sub
aad
sbb
push
jmp
sub
outsb
aam
sub
imul
or
aad
inc
adc
pop
jnp
mov
inc
mov
pushf
ret
xchg
add
mov
dec
sbb
sbb
je
cmc
icebp
js
mov
pushf
sarl
test
sbb
dec
mov
jb
stos
jle
aam
cwtl
in
jb
addr16
pop
cmp
and
sbb
int
dec
lcall
mov
outsl
mov
dec
data16
in
sub
push
jmp
xchg
xchg
xor
fldcw
mov
mov
cmp
ja
test
in
dec
jp
push
ret
jne
mov
jmp
push
fmull
or
xor
xor
ja
or
ljmp
cltd
cli
add
add
mov
or
dec
adc
sbb
jecxz
push
jp
push
adc
imul
pop
dec
mov
pop
mov
sub
pop
inc
shr
insb
jmp
xor
mov
in
mov
mov
mov
inc
sbb
cmp
iret
xchg
cld
pop
jmp
xlat
lret
call
inc
aaa
mov
jge
fs
lret
imul
int3
inc
cmp
and
push
icebp
xchg
cmp
xchg
mov
sbb
test
cmp
call
mov
lds
push
outsb
cli
sub
sbb
cmc
mov
stos
cmp
into
xlat
shl
mov
xlat
es
test
int3
into
lods
xchg
stc
xor
test
push
adc
andb
cmpsl
pop
adc
mov
pop
rcl
cmpsl
adc
sbb
movsl
sti
sub
js
lret
cltd
into
test
js
jg
popa
lods
test
push
push
pop
xor
popf
push
push
shl
lret
inc
fisttpl
cmp
les
pushf
push
push
mov
sub
sub
ret
adc
nop
frstor
fidivrs
and
adc
pop
pop
cli
dec
and
hlt
or
cmp
sub
jns
negb
mov
movb
add
push
fisttpl
push
dec
sti
mov
lret
mov
xchg
aam
repz
push
inc
gs
cmp
cltd
push
xchg
mov
pop
popf
scas
lret
call
lods
pop
mov
test
pusha
jmpw
in
dec
or
mov
and
mov
pop
xor
pop
shlb
pushf
popf
xorb
call
jge
popa
addr16
dec
jae
pop
mov
out
int
iret
pop
adc
jbe
add
and
fisttpll
cltd
clc
inc
stc
frstor
shl
or
lahf
imul
pop
sbb
inc
je
insb
rcr
nop
shr
add
leave
xor
inc
fldcw
jne
xchg
mov
mov
sbb
addr16
je
enter
cmp
pop
add
add
les
sbb
dec
jnp
mov
and
nop
popa
dec
into
cmp
insl
or
push
imul
push
dec
mov
sbb
lea
or
dec
lahf
cmc
cld
jge
rcrl
sbb
xchg
xchg
jle
loope
mov
inc
ljmp
out
cltd
adc
cltd
xchg
dec
xchg
add
stos
mov
je
push
aas
hlt
outsb
mov
push
cltd
fs
push
insl
cmp
sbb
mov
xchg
ljmp
xor
in
and
push
rolb
js
xchg
in
inc
push
sub
clc
pop
fwait
stos
mov
repz
jbe
lret
mov
push
daa
push
dec
dec
fistps
ljmp
mov
mov
imul
movsb
imul
daa
mov
adc
lret
lahf
xor
lods
mov
pop
cmp
popa
cltd
adc
mov
jge
mov
gs
cld
cmpsl
push
js
pushf
add
dec
popa
mov
test
pop
out
in
and
mov
or
pop
imul
or
testl
dec
cmpsb
xor
and
cli
aam
int
nop
xchg
dec
loope
push
adc
mov
sbb
aaa
mov
test
jns
adcb
mov
xor
mov
pushf
lods
xchg
inc
mov
jne
movsl
andl
xor
das
add
lret
ror
or
clc
inc
or
cmp
push
fisttpll
pop
dec
test
psubusb
rorb
hlt
insb
iret
inc
xor
lods
push
pusha
cmp
cld
mov
mov
push
jmp
cmp
mov
mov
dec
ret
cmp
aad
fnstsw
cmp
in
gs
push
notb
push
adc
xchg
xchg
mov
jecxz
and
inc
jb
cld
ret
shl
in
jecxz
in
lods
lods
jmp
sub
sub
mov
insl
loope
je
xchg
sub
out
sbb
ret
scas
mov
jmp
lock
push
mov
adc
xchg
lret
xchg
hlt
loopne
sub
mov
mov
mov
lret
daa
push
cmp
repz
outsl
in
sbb
and
ret
es
cltd
outsl
cld
sbb
pushf
push
ljmp
insl
loop
clc
cmp
add
mov
fildl
inc
jge
mov
mov
scas
jb
stos
int
adc
daa
sbb
and
pushf
stc
add
cmp
cli
mov
in
cmp
cmp
and
aad
mov
or
jne
or
loopne
shll
test
mov
or
enter
cmp
push
loope
inc
and
repnz
xor
movsl
das
fadd
push
xchg
popa
or
pushf
mov
mov
add
inc
and
pusha
and
xor
punpckhbw
or
inc
in
cld
dec
aad
arpl
or
int
push
loopne
cmp
xor
iret
out
outsl
in
addr16
add
xlat
hlt
adc
xchg
negb
xchg
ficomps
ss
dec
leave
enter
inc
push
dec
xorl
jle
ret
xchg
iret
aaa
adc
outsl
scas
loope
out
jle
int3
pop
cmpsl
sbb
testl
sbb
sbb
mov
test
xor
gs
out
push
sarb
xchg
and
fidivrl
add
imul
leave
stos
sbb
or
lret
test
inc
fnsave
lds
push
push
add
mov
pop
sahf
xor
mov
add
idivb
dec
addr16
hlt
dec
mov
pop
je
test
mov
mov
aaa
mov
outsl
push
mov
mov
mov
dec
mov
mov
das
and
bound
insl
sbb
daa
sbb
push
or
add
out
rolb
test
inc
pushf
int
call
popf
pop
out
out
test
loopne
rcrl
rolb
enter
sub
adc
call
mov
sahf
mov
sbb
lds
mov
inc
sub
jge
jmp
sub
dec
push
sbb
ds
bound
stos
push
dec
rcl
xorb
lret
push
sub
fwait
ljmp
mov
and
decb
push
scas
mov
subl
clc
les
out
or
mov
loope,pn
mov
push
pop
out
dec
xor
jae
jmp
lods
lret
sti
mov
mov
leave
jne
es
mov
daa
cmp
and
mov
or
leave
mov
jp
cli
dec
fisubs
mov
add
addr16
sbbb
nop
add
lds
adc
ljmp
mov
incb
loopne
adc
popf
mov
fidivrl
rcrl
clc
ja
mov
sub
cs
rolb
inc
outsb
das
lds
rcr
pop
js
xor
ja
dec
das
clc
or
nop
cli
cwtl
sub
push
dec
popf
hlt
aaa
mov
dec
sub
push
mov
pop
jg
cli
pop
mov
bound
jmp
aad
jne
mov
test
loopne
xchg
sbb
sbb
dec
dec
cmp
subl
adc
loop
in
push
sbb
mov
lret
pushw
stc
jecxz
cwtl
aas
xchg
into
in
jbe
dec
loopne
and
subb
push
outsb
leave
les
push
push
cmpsb
in
rorb
clc
out
jp
xchg
imul
mov
jae
xchg
push
pushl
ret
je
inc
cmp
aad
lods
mov
xor
jnp
xchg
pop
jae
out
mov
test
mov
xor
shll
lods
rdtsc
and
pop
cs
leave
mov
fsubl
mov
xor
add
sbb
push
sub
inc
mov
sti
mov
jb
out
jg
mov
push
fsubp
int3
inc
mov
or
arpl
aad
dec
imul
mov
xor
mov
push
imul
push
lcall
rorb
orl
mov
icebp
icebp
mov
dec
mov
in
sahf
cli
jge
push
push
lcall
outsl
addr16
dec
inc
xchg
or
pushf
add
leave
aaa
cs
lock
lds
jbe
lods
out
and
or
sti
int
gs
mov
sbb
scas
psubw
fscale
dec
call
cmpsl
adc
stos
xchg
pop
and
dec
add
pushf
lahf
test
xchg
sbb
sub
int
sarb
xlat
rsm
add
push
pop
sub
lret
scas
daa
aad
mov
jb
xchg
or
add
inc
sbb
notl
rcr
out
leave
push
mov
xchg
jb
and
fsubrl
cltd
push
xor
mov
es
out
jae
lea
xor
jp
dec
jne
insl
repz
pop
test
pop
popf
pop
inc
inc
mov
xor
nop
or
loope
or
fiadds
mov
mov
stc
cwtl
add
daa
mov
mov
pop
push
and
jne
ds
pop
enter
cld
and
sbb
sub
adc
mov
imul
jne
dec
ljmp
sub
jle
add
sbb
mov
jle
jg
mov
xchg
sbb
jo
int3
lea
aas
enter
jg
jno
fmull
mov
inc
sub
lods
and
clc
shrb
cs
jmp
stc
sub
bound
inc
hlt
imul
pop
sub
stos
gs
pop
xorl
fsub
inc
imul
push
mov
and
insb
and
xchg
fwait
push
push
push
jg
sub
mov
xchg
cmp
dec
fisubs
jb
push
insl
ret
sbb
xchg
adc
movl
inc
mov
sar
xlat
out
inc
aam
mov
inc
call
mov
cmp
inc
mov
push
sub
ja
cmp
call
fmulp
cmpsb
pop
mov
pusha
js
mov
in
fwait
repz
xchg
jne
jmp
cmp
mov
and
push
mov
int3
arpl
push
mov
icebp
repz
add
int
rcl
jmp
jae
loopne
inc
push
cmc
xchg
fs
mov
leave
sbb
popa
mov
out
xchg
out
mov
lea
xchg
jl
add
adc
inc
das
clc
nop
mov
sub
int
addl
negb
jns
add
pop
int3
mov
push
push
ret
lods
les
mov
push
xor
fcmovne
in
mov
pop
enter
nop
and
pop
out
dec
fmul
xor
pop
into
mov
mov
and
rcrl
je
or
sub
out
orb
scas
je
xor
xor
jle
int
test
inc
push
mov
push
sub
or
dec
sbb
lret
cmp
call
imul
jae
lahf
jp
push
dec
mov
jnp
sti
cmp
outsl
les
pop
mov
dec
arpl
inc
imul
dec
fldcw
fs
aaa
movsl
ds
lret
test
ja
aaa
iret
jno
lock
inc
fwait
loop
jo
jmp
out
leave
je
and
dec
shll
xchg
adc
enter
sub
arpl
xchg
and
loop
sub
mov
lret
daa
loop
movl
shll
mov
xchg
out
xchg
mov
dec
mov
pop
into
pop
sti
sbb
insl
in
mov
gs
push
into
rclb
test
clc
test
sbb
and
leave
mov
jno
aam
je
lods
nop
cmp
ret
cmp
xchg
push
push
sub
lock
and
bound
mul
pop
pop
stc
push
xor
adc
ret
imul
fsubrl
push
inc
dec
add
mov
jbe
push
iret
jnp
jnp
mov
xor
jp
aas
xor
pusha
cld
fwait
jge
imul
or
push
das
add
fsubrl
popa
cli
mov
jo
xchg
scas
pusha
fsubl
hlt
pop
cmpsb
sbb
dec
sub
or
pop
jne
int
cmp
loop
jmp
inc
xor
jge
sub
popw
cmpsb
sub
pop
sarb
lods
pushf
vpunpckhqdq
add
cld
cltd
js
mov
pop
fwait
sbb
push
mov
insb
pop
xchg
int
jle
xor
mov
je
loopne
push
inc
test
inc
dec
dec
fcoms
push
mov
adc
and
call
xchg
mov
daa
push
movsb
fsubrl
push
mov
pop
pop
xchg
push
or
dec
pop
mov
fwait
repnz
mov
outsl
pop
sbb
mov
xor
inc
mov
xor
fnsave
dec
jne
add
out
adc
adc
fs
pop
nop
lods
dec
or
sub
in
and
cli
push
inc
jns
lret
es
push
adcl
das
dec
jp
sti
xor
push
das
ficompl
push
nop
cwtl
sbb
cmp
push
push
sbb
fwait
sbb
mov
data16
js
mov
xor
iret
or
dec
lds
jmp
aas
nop
std
xor
arpl
adc
pop
fs
popf
cltd
or
lcall
adc
inc
out
dec
push
cmp
mov
push
dec
xchg
call
loop
adc
fists
fs
xor
and
test
mulw
leave
jg
scas
subb
xchg
aaa
scas
jne
fiaddl
and
int
inc
icebp
xchg
addr16
jne
loopne
icebp
testl
and
adc
jbe
movsl
jb
leave
pushf
mov
int3
lret
mov
mov
movsl
push
fisubrl
cmp
dec
xchg
cld
lock
fldenv
jle
xor
loope
cli
loop
adc
pop
pop
and
adc
push
scas
pop
gs
aas
xchg
sbb
cmp
gs
add
test
inc
pop
scas
pop
mov
hlt
jg
mov
cmpb
sti
cmpsl
je
mov
inc
sbb
pop
rclb
xor
popf
test
sbb
or
leave
cmp
mov
rcrl
loopne
jge
je
mov
xor
leave
out
push
mov
cwtl
push
adc
add
arpl
sbb
ret
loope
mov
jnp
adc
jnp
outsl
in
imull
add
and
mov
addl
aad
jmp
cmp
or
std
push
lret
aaa
out
pop
sub
xchg
xchg
jl
pop
outsl
adc
ds
loope
fdivs
loope
enter
xor
pop
ret
pop
in
xor
mov
fidivl
cld
cmpsl
mov
push
fwait
rorb
arpl
scas
inc
and
mov
les
push
imul
and
push
or
cmp
mov
push
xor
dec
in
sarl
sub
bound
mov
mov
sbb
sbb
mov
arpl
in
lret
add
or
shl
lahf
or
addr16
stos
lock
bound
in
jno
jno
int3
cwtl
cs
lea
out
mov
jbe
cmp
xchg
inc
inc
add
xor
mov
jmp
cmp
call
fisubl
test
mov
repnz
cwtl
xor
repnz
add
fnstcw
test
in
nop
cmp
and
adc
shl
call
arpl
fcmovu
loop
cmp
xchg
es
icebp
lcall
sub
or
lods
subb
adc
cltd
mov
pop
inc
rol
cmp
push
adc
or
pusha
lea
and
shll
jbe
lock
xorl
insl
or
sahf
insb
push
sbb
pop
and
sbb
jae
imul
push
pushf
cmpsb
lcall
or
jnp
inc
xorb
pop
mov
mov
andl
mul
aam
popa
int3
jl
xor
call
sub
pushf
add
mov
insl
push
mov
ljmp
pop
add
jmp
xor
in
loop
xchg
aaa
jb
iret
sarb
adc
mov
sub
lods
push
leave
pop
lods
mov
shr
sub
cli
jmp
pop
add
jmp
sub
xchg
mov
xchg
hlt
pop
ds
adc
loop
dec
xchg
inc
mov
stos
test
and
int
or
sub
adc
insl
xchg
mov
jp
and
icebp
loop
pop
jmp
cmp
jle
cwtl
adc
mov
or
push
dec
xchg
call
pop
in
gs
pushf
jl
repnz
jno
jo
rcrb
mov
jns
or
mov
mov
cltd
fwait
pop
cmp
cltd
bound
jmp
adc
dec
lret
and
dec
add
mov
insb
or
jne
clc
mov
cmove
push
fcoms
ret
mov
mov
sbb
jg
xor
mov
sahf
lea
jecxz
cltd
pop
cmc
inc
imul
jp
pop
pop
sub
or
dec
cmp
les
push
leave
clc
clc
adc
fnstsw
icebp
sub
dec
push
and
movsl
fsubrs
push
add
cwtl
pop
std
add
iret
lahf
adc
and
pop
pop
shlb
mov
dec
mov
push
mov
test
xor
pop
or
in
lcall
inc
xchg
or
fadds
mov
jmp
je
xor
iret
je
sub
test
clc
jl
cmc
std
rorb
fsubrs
test
int3
mov
sbbl
mov
sahf
fstpl
shrb
pop
sub
sub
mov
loope
xchg
or
sub
into
add
push
test
mov
popa
push
pop
arpl
int
mov
sbb
xchg
nop
dec
jne
push
jge
rcll
mov
push
push
mov
fucomi
mov
jae
test
loope
pop
or
nop
cmpsl
fisttps
leave
lods
mov
call
push
mov
int3
xlat
les
jl
mov
cwtl
imull
mov
and
addr16
int3
dec
add
jno
ss
add
or
or
jecxz
bound
xorb
and
cwtl
add
xchg
or
clc
leave
int
shr
mov
and
pop
cmp
call
adc
pop
cmp
cmpsl
jle
mov
or
add
addr16
pop
out
lds
in
mov
pop
push
mov
or
or
mov
insl
xchg
sbb
adc
andl
xchg
arpl
in
and
xor
andb
cmp
mov
adc
sti
jbe
jo
das
pop
mov
out
adc
mov
mov
ficompl
lahf
rcrl
das
jbe
clc
insb
dec
inc
sub
jns
movsl
xor
add
cmp
dec
movsl
or
scas
xchg
adc
jl
mov
jmp
xchg
push
stos
jne
leave
in
cli
leave
iret
call
add
movsl
arpl
cmp
push
test
jne
push
mov
mov
out
sub
cld
cs
mov
push
fists
and
jl
adc
mov
xchg
popa
sub
mov
jg
test
scas
sbbl
lock
gs
daa
fdivs
xor
push
sub
mov
shrl
mov
mov
sbb
sub
dec
inc
jg
roll
lock
test
mov
and
test
shlb
xchg
popf
je
nop
push
ret
xchg
push
adc
hlt
pusha
jp
test
test
inc
imul
vmaxpd
test
aad
cli
cltd
mull
negl
leave
scas
loopne
add
or
lret
ljmp
aad
inc
mov
sub
xlat
mov
addr16
setnp
cmp
adc
pusha
scas
dec
fmull
jne
mov
arpl
xor
fs
clc
xorb
inc
lods
push
mov
xor
jg
jnp
jns
sbbb
stc
repnz
negl
aas
ja
cmpl
les
mov
bound
outsb
dec
lcall
lcall
xor
sbb
add
push
int3
das
pop
sub
popf
loopne
inc
and
test
scas
sti
xchg
loope
xor
adc
cmp
cwtl
shlb
mov
push
rcrb
sub
inc
jmp
sub
jp
daa
in
push
or
dec
xchg
in
jecxz
push
adc
ret
outsl
jnp
dec
fistps
and
sub
mov
mov
test
pop
hlt
cmc
lock
lcall
adc
push
mov
leave
mov
jne
lret
in
adc
adc
jmp
xchg
int3
loope
push
xorl
xor
insb
lcall
leave
add
test
repz
and
imul
mov
pop
loope
push
scas
scas
xchg
sahf
jb
sub
test
fildl
sub
xorl
lods
xchg
xchg
divb
mov
stos
xor
jae
jge
cmpsl
adc
xchg
mov
scas
sub
jmp
jle
fsubs
sub
loop
jo
loope
pop
and
xchg
fstp
cmp
call
sbb
push
iret
xor
pop
arpl
add
int
daa
and
dec
xorl
into
jl
insb
imul
mov
int
test
fiadds
cmpsl
leave
xor
loope
int
ja
pop
ja
fidivrs
hlt
rclb
aas
into
push
mov
cli
rcll
dec
dec
mov
in
jbe
cltd
es
lock
pop
jmp
imul
add
repz
jmp
dec
ljmp
cmp
cs
jns
scas
mov
inc
push
ret
mov
mov
stc
lret
xchg
inc
sar
pop
xor
add
icebp
cs
push
dec
aas
shll
aas
cmp
mov
test
loope
fcom
jecxz
mov
mov
add
ss
aam
jmp
test
shl
mov
pop
addr16
adc
push
pop
lea
mov
clc
in
inc
int
rcrl
cmpsl
xlat
or
dec
and
cli
lcall
or
xor
cmp
jmp
std
repnz
outsb
fisubl
sub
and
int3
sub
stos
mov
aaa
test
xor
mov
sahf
pusha
fcompl
xor
jno
lret
add
mov
enter
fsub
inc
pushf
repnz
inc
arpl
pop
add
rclb
ss
mov
add
sbb
insb
imulb
mov
adc
loope
movsb
loope
shrb
sbb
mov
movsl
mov
les
add
jecxz
cmc
or
jnp
xchg
rcrl
cltd
mov
adc
ds
hlt
push
mov
mov
dec
loop
pop
xchg
aad
mov
cmpsl
mov
sbb
daa
sub
push
gs
xor
sbb
movsl
mov
inc
inc
push
push
xor
loopne
notl
mov
add
femms
inc
cli
and
stos
cld
lahf
insb
sahf
dec
cld
push
pop
push
adc
sbb
fwait
leave
add
mov
fisttpl
add
out
loop
je
incb
jns
shlb
ret
xor
dec
sub
mov
fcomps
inc
mov
pop
and
and
lret
push
add
cld
inc
mov
mov
or
fsts
push
pop
adc
sub
adc
mov
jl
pusha
sar
daa
cmpl
xchg
xchg
stc
dec
outsb
push
fmull
add
add
lock
xchg
pushf
in
jne
xchg
pop
dec
mov
xchg
adc
add
xchg
jmp
out
shlb
cmp
xor
into
aaa
lret
stc
cmpsl
fucomp
notb
sbb
lds
nop
cltd
sub
in
rorl
mov
jae
call
in
dec
push
sub
nop
fstpl
dec
or
mov
mov
add
loop
jecxz
xchg
xchg
push
mov
xchg
loop
sbb
call
pop
sub
jecxz
adc
mov
pop
xchg
or
xor
cmp
in
clc
or
sub
mov
dec
frstor
jp
adc
sbbl
dec
insb
mov
out
and
jle
xor
daa
sub
push
mov
cmp
std
xchg
mov
sbb
and
or
popf
scas
and
xchg
push
pop
ja
call
fwait
inc
xchg
movsl
lret
stc
in
mov
in
fwait
push
lret
rcll
lea
xchg
inc
or
gs
nop
jmp
push
stc
adc
data16
aad
mov
pusha
jle
cmp
dec
add
ret
setge
arpl
jns
fs
ficoml
xchg
out
repnz
test
rorl
leave
xchg
repz
out
jle
jp
cmp
sub
call
lcall
add
arpl
into
mov
push
out
clc
ret
xchg
add
add
sub
rorl
xchg
or
lods
xchg
jle
idivb
in
mov
and
out
inc
andl
out
icebp
loopne
es
das
jl
notb
xlat
out
push
xchg
je
cmp
jmp
mov
sub
dec
pop
mov
pop
aam
pop
repz
cmp
ret
pop
divb
es
mov
add
push
lahf
inc
jae
scas
popf
jge
popf
xor
andb
into
pop
mov
push
xor
mov
push
and
movsl
subl
cmp
jl
pop
sub
lds
jge
repnz
inc
dec
push
inc
arpl
js
sbb
mov
xor
jge
subl
mov
ret
xor
mov
lds
mov
xor
add
mov
es
enter
mov
dec
or
fidivrs
mov
jmp
xchg
in
cmc
fidivrl
mov
cli
sub
movsl
pusha
jge
je
and
clflush
xor
rol
imul
cmp
loope
es
std
aas
and
add
pop
pop
xor
jne
dec
das
rcrl
push
dec
xor
dec
push
push
xchg
mov
or
sbb
add
cs
cmc
ret
subl
mov
sub
jmp
push
inc
aas
aaa
faddp
sbb
stos
mov
mov
dec
mov
xor
mov
lret
pushf
pusha
test
mov
mov
lea
iret
fldcw
std
repz
dec
popf
ja
ret
add
xchg
jb
inc
aaa
adc
adc
enter
das
stc
dec
es
jp
rep
jns
loopne
shll
sub
fisubl
xor
xchg
push
rcr
sbb
inc
rcl
and
cli
xchg
mov
mov
add
add
push
xchg
adc
mov
xor
push
pop
adc
cmpsb
sbb
sbb
addr16
jg
enter
push
mov
xor
xor
adcb
push
and
ds
imul
cmp
cmp
movsl
pop
xchg
push
adc
sub
ret
dec
ljmp
test
add
pop
push
rcll
out
lahf
cwtl
cmp
push
cli
stc
fwait
popa
addr16
xorl
dec
xlat
push
shl
out
inc
out
push
mov
or
pop
test
mov
cmp
stc
sub
pop
add
and
and
lock
lods
in
ret
aad
dec
popf
sahf
fcomps
in
andb
push
outsl
adc
mov
js
push
adc
xor
mov
pop
pop
pop
adc
lret
dec
cmp
in
insl
dec
sar
push
lcall
mov
subb
sub
inc
fstps
in
fdivrl
lods
sbb
or
sbb
mov
movsl
sbb
mov
out
test
adc
pushw
jnp
mov
sub
mov
add
arpl
cltd
mov
lret
sub
xor
fdivrl
rcr
sub
push
dec
mov
jae
mov
mov
jmp
mov
cld
int
adc
imul
insl
xlat
adc
mov
pop
lahf
ja
nop
push
mov
and
in
lret
adc
mov
fdiv
adc
pop
pushf
mov
and
mov
or
mov
scas
jbe
pop
inc
cmp
lcall
lret
scas
stc
sub
stc
loope
stos
cld
repnz
push
and
or
xor
push
cmpsb
cmp
and
jmp
scas
inc
out
mov
or
rcrl
es
jo
inc
std
fldt
mov
xor
lods
or
rep
or
fimull
flds
push
sbbl
inc
pop
add
sti
jo
mov
nop
push
dec
cmp
jo
imul
loop
mov
cmove
ljmp
es
shr
adc
push
cwtl
push
lahf
movsl
or
pop
pop
jns
loop
mov
out
nop
inc
ss
ja
sub
sbb
dec
mov
ss
inc
adc
sub
lods
jno
push
ja
testl
ljmp
and
js
cli
mov
loopne
popa
adc
xor
lods
mov
adc
pop
sar
xchg
inc
lahf
or
lcall
nop
adc
call
sahf
jb
add
push
mov
ret
cltd
push
aaa
fisttps
jo
pushf
gs
or
movsb
movsb
mov
adc
call
test
jg
jmp
roll
or
and
push
insb
sub
scas
shl
xor
pusha
cmpsl
outsl
jne
inc
ljmp
imul
stos
jp
pop
mov
add
xchg
dec
iret
ss
push
add
inc
call
xorl
mov
into
jo
pop
xlat
cltd
stc
ret
pop
and
mov
cmpsb
jns
cmp
push
fildl
cmpsb
scas
dec
aas
mov
ss
adc
mov
sarb
inc
mov
mov
jg
mov
test
sub
popf
jecxz
aas
pop
xchg
stos
jb
imul
mov
ds
out
xchg
dec
mov
lret
repz
je
fmuls
add
loop
out
sub
call
or
cmpsl
inc
pop
outsb
jecxz
repnz
mov
or
lea
jo
gs
sbb
or
xchg
xchg
fmuls
jbe
fldenv
pusha
lock
sub
and
lock
cli
jl
lea
pop
loope
lret
stos
mov
adc
cmpsb
lods
test
out
push
xor
xor
or
cmp
push
jmp
out
in
fcmovnb
mov
xchg
push
or
lret
sbb
movsb
adc
inc
pushf
jne
xlat
jecxz
push
pop
mov
mov
pop
jne
push
or
leave
mov
pop
fsubs
mov
mov
aad
inc
or
cmp
dec
in
cmp
popf
outsl
pop
sbbb
adc
hlt
int
or
lret
out
xor
test
push
mov
test
xchg
inc
mov
mov
sti
repnz
and
mov
sub
dec
xchg
int3
aas
push
iret
aad
lock
mov
sub
cltd
icebp
clc
add
pop
and
mov
sub
push
sahf
dec
mov
inc
fwait
into
ljmp
mov
push
faddl
ret
test
mov
mov
lret
inc
filds
dec
into
and
pop
jle
out
popf
pop
sbb
dec
inc
pop
xchg
mov
adc
andb
scas
push
cmp
pop
cmc
add
insb
popf
dec
out
psubd
xor
out
in
pop
out
inc
into
lock
fxam
clc
sub
xor
jmp
lcall
rolb
mov
xchg
test
mov
sbb
xlat
ljmp
das
in
scas
sub
mov
push
mov
mov
fcmove
mov
xlat
popf
and
pop
cli
out
mov
pushf
sub
fists
dec
lds
pop
xchg
cli
mov
adc
adc
insb
xchg
inc
shrl
sub
push
pop
mov
pop
cli
shlb
add
mov
sub
jne
cmp
xor
rol
mov
sub
into
aaa
out
in
outsl
hlt
inc
dec
stc
mov
pop
add
xor
adc
std
sub
pop
xor
movsb
mov
or
sbb
js
xchg
sub
and
cmp
mov
pop
mov
add
push
call
pop
cwtl
dec
in
insl
and
adc
cmc
rcrb
imul
sbb
xor
cmp
test
jno
lret
adc
xor
dec
and
cmpsb
loope
pop
jne
aaa
mov
pop
pop
test
clc
inc
rcll
inc
je
and
sub
jbe
cmc
dec
and
stc
and
stos
arpl
and
or
popa
mov
aam
data16
xor
xchg
ds
ret
jle
aas
stc
xchg
sbb
mov
push
sbb
pop
cmp
or
or
pop
jo
cld
jg
push
test
dec
aaa
aaa
xor
xor
mov
adc
arpl
xor
sbb
dec
inc
icebp
mov
sbb
sahf
sbb
inc
inc
mov
add
push
mov
fistpll
int
mov
in
sub
out
hlt
sbbl
test
sbb
test
lock
mov
and
jnp
cwtl
sub
sbb
js
and
mov
mov
add
jmp
jnp
and
jp
out
lods
int3
cltd
mov
mov
pop
sti
push
pop
enter
pop
mov
dec
in
arpl
ja
cli
cld
clc
fsubr
movsb
mov
stos
mov
rcrl
mov
dec
jl
aaa
inc
addl
adc
pop
test
icebp
scas
out
pop
out
xor
sbb
subl
jmp
inc
inc
xor
fdiv
loope
stc
insb
or
adc
stos
and
sub
and
repz
loope
std
loope
insl
xchg
int3
jbe
sbb
or
sbb
enter
and
jns
fwait
lret
jp
inc
add
sbb
or
mov
sub
pop
push
pop
push
pushf
push
inc
mov
push
stos
dec
outsl
lds
xor
andl
push
xchg
shll
push
sbb
mov
test
push
pusha
or
pop
cmp
pusha
je
mov
clc
pop
dec
sub
dec
dec
sub
dec
ljmp
inc
mov
popf
push
dec
dec
cmp
or
and
xor
inc
ficompl
mov
out
inc
sub
repnz
jae
into
xor
fdivr
inc
fld
jg
ficoms
mov
xchg
jnp
decl
lds
arpl
jno
out
push
add
inc
jns
aad
mov
push
push
loop
cmpsb
sti
jl
push
pushf
cmp
adc
stos
cltd
xchg
lahf
out
add
xchg
out
sub
sub
pop
fsubp
mov
pop
int
sub
shll
fimull
lea
mov
mov
cmp
ds
outsb
sahf
push
popa
adc
cmp
loop
and
jno
sub
je
add
je
mov
inc
jno
sub
popf
cmpsb
jnp
and
icebp
jno
mov
and
popf
ficomps
inc
push
arpl
inc
stc
loop
lcall
hlt
mov
lds
insl
shlb
out
xor
add
fdivrl
loop
ja
or
dec
les
testb
adc
xor
jne
inc
or
sbb
inc
lods
sub
stc
lock
xor
repnz
lahf
fstpl
imul
mov
adc
shlb
xchg
outsb
int
pushf
icebp
and
mov
fucomi
jle
out
inc
pop
mov
std
push
icebp
ds
mul
jge
jg
ret
es
mov
mov
add
pop
ret
push
xchg
pop
repz
push
jae
fwait
mov
jo
xchg
movsb
lods
gs
fs
pop
ret
jp
addl
repnz
sbb
stc
dec
push
xchg
dec
ffree
adc
add
sbb
push
sti
scas
fdivr
std
daa
add
or
add
jae
sbb
inc
xchg
add
jl
gs
and
dec
ds
shrb
stos
mov
mov
icebp
pushf
jmp
fs
xor
scas
jmp
sub
jb
daa
jae
sbb
adc
sahf
mov
push
orb
cli
cmp
xor
shll
xor
xor
add
pusha
jge
mov
addl
pop
movsl
sub
xchg
in
je
es
ds
sahf
push
dec
sbb
inc
ret
jl
dec
fildl
mov
je
popf
movsl
push
pop
cmp
mov
pop
jb
mov
leave
dec
push
jbe
jp
shll
insb
je
push
add
in
pop
mov
fsubrs
icebp
cli
sbb
sub
mov
jnp
loopne
push
nop
roll
ja
lahf
push
ljmp
mov
push
sub
inc
and
gs
mov
jns
sarl
iret
add
sub
or
lods
mov
add
cwtl
cld
ds
lods
cld
adc
cmp
dec
mov
arpl
lahf
out
or
push
mov
das
nop
xor
mov
cmc
jo
call
pop
push
cs
movsl
into
mov
mov
cmp
lret
std
je
subb
jg
mov
pop
cmp
sub
ret
mov
mov
mov
push
and
pop
cmp
inc
cmp
inc
cmp
xchg
inc
mov
sbb
jge
sbb
rol
mov
mov
adcl
cmp
cmpsl
shll
push
cmp
xlat
pop
cs
dec
jge
idiv
lret
add
loopne
xchg
pop
xorb
stos
out
push
movsl
mov
mov
or
pushf
out
or
cwtl
add
or
lea
xor
push
lahf
ret
mov
in
ja
mov
stos
mov
push
xor
and
add
push
add
imull
cmpsb
aas
mov
pop
jle
repz
sbb
cmpsb
xor
lods
roll
fwait
rcrb
enter
sub
pop
rclb
inc
push
adc
mov
pop
shrl
in
mov
mov
cmp
push
dec
imul
nop
jns
jg
jns
cli
shr
test
out
xor
fdivrs
cmp
je
sub
scas
or
fisubrl
es
testb
add
pushf
pop
push
lret
popa
cld
repz
and
out
sbb
shll
xor
jns
pop
stos
dec
add
mov
jle
sub
lret
mov
cmp
aam
inc
xlat
jo
cmpsl
jl
pushfw
dec
sbb
sti
aam
add
mov
xchg
and
aam
lods
aad
cmp
mov
stos
loope
dec
xchg
cld
pop
sbb
add
scas
fwait
or
xchg
mov
mov
cmc
add
sbb
or
xchg
daa
pop
cmp
mov
dec
fcmovnb
sub
mov
scas
dec
jbe
pushl
jns
loopne
mov
add
mov
outsb
xor
mov
mov
add
shr
sti
or
popa
inc
lock
and
push
fstps
nop
pusha
int3
sub
inc
insb
dec
xor
lret
repnz
sub
sub
add
dec
ss
dec
ffreep
adc
add
xor
mov
cltd
imul
adc
jnp
imul
mov
pop
scas
jle
add
fstpt
jb
mov
add
dec
insb
or
or
in
sbb
lock
xchg
push
subb
xor
insb
mov
dec
out
sbb
cmpsb
cltd
in
xor
add
cltd
lods
mov
and
push
les
pop
int
push
pop
out
mov
dec
and
sbb
and
call
std
fcomip
cld
ret
jl
mov
sub
ret
cmc
out
inc
mov
mov
add
pusha
outsb
adc
int
stos
test
jmp
mov
aas
lret
clc
mov
cmp
mov
mov
jg
and
in
xor
push
xchg
in
pop
fisttps
add
clc
inc
push
in
adc
dec
fs
ret
insl
pop
xor
daa
sar
orl
dec
loopne
scas
in
add
push
outsl
pop
push
arpl
lahf
cltd
dec
jge
int
jno
xchg
push
or
sysenter
pop
out
mov
mov
push
and
stos
mov
stos
sub
mov
mov
mov
xchg
ja
fldcw
arpl
push
enter
test
sahf
repz
inc
sub
bound
mov
adc
cmp
cmp
push
imul
inc
jbe
js
add
jle
mov
adc
les
cmp
dec
push
inc
sub
out
xchg
mov
jae
aaa
cmp
jg
cmpsl
mov
inc
adc
push
mov
int
imul
repz
add
lret
idivl
orps
aad
insl
xchg
jo
lock
decb
cld
hlt
test
xor
pop
and
stos
arpl
push
or
pop
in
xchg
xlat
test
jp
pop
jmp
ret
pop
ret
jle
pop
jae
mov
repz
add
lds
mov
lods
filds
xchg
sbb
outsl
decl
pop
shrl
xor
add
stos
push
outsl
icebp
sbb
mov
popf
movsl
mov
out
loop
push
mov
jnp
push
and
fcompl
int
adc
cmp
js
or
add
cs
cmp
cwtl
and
mov
pop
mov
stos
ss
divl
leave
add
or
stc
pop
loopne
bound
and
push
stos
test
dec
and
and
or
fcom
inc
mov
xor
pushf
es
loop
xchg
cmpsl
or
aad
dec
xlat
or
testb
lods
pushf
sahf
es
dec
lahf
lcall
cwtl
mov
hlt
loope
adc
cltd
out
imul
enter
xlat
xor
outsb
sub
inc
xor
pop
addb
test
sti
or
pop
push
mov
outsb
scas
outsl
inc
mov
jmp
testb
xchg
xchg
add
sub
out
jmp
jns
addb
pop
xor
idivl
ljmp
cli
int3
je
and
xor
add
aas
cmp
xchg
test
cmp
or
out
push
idivb
xchg
pushf
push
aaa
jp
inc
xchg
lcall
testl
inc
pop
cli
adc
ret
dec
hlt
sbb
sbb
add
out
jnp
xchg
lods
xchg
xchg
sub
add
xor
or
enter
test
inc
seta
adc
stos
mov
pushf
cltd
mov
pop
push
out
rol
push
mov
cmp
sbb
mov
jp
push
push
push
repz
insl
dec
xor
mov
mov
ljmp
dec
and
add
sub
xchg
add
jne
pop
pushf
mov
mov
in
xchg
xchg
jge,pt
mov
push
xor
sub
jle
pushf
les
push
popf
and
push
orl
pop
test
pop
add
aaa
push
inc
mov
cmp
jne
scas
test
or
enter
sub
out
sbb
xchg
icebp
pusha
push
or
cli
cmp
repnz
ds
leave
in
aam
lds
push
xchg
stc
repnz
faddl
divb
jp
lret
addr16
pushl
in
or
and
mov
mov
pop
jge
jge
mov
stos
mov
push
adc
movsl
loope
fnsave
or
es
aad
mov
frstor
mov
xor
inc
mov
aas
stos
inc
mov
adc
inc
jmp
push
call
in
sub
add
pop
mov
roll
ret
aam
adc
sahf
mov
or
mov
arpl
xor
leave
inc
jp,pn
fs
jge
xchg
pop
or
aas
xor
push
cmpsl
imul
xor
pop
popl
fistpl
call
outsl
push
sbb
mov
sbb
cmp
dec
aaa
sahf
sbb
cmpb
or
repz
sar
cli
inc
xlat
mov
xor
sub
lcall
mov
add
outsb
dec
clc
push
dec
mov
into
aad
scas
test
inc
mov
push
shl
and
lcall
fstp
mov
scas
xor
jmp
fdivrs
jmp
xor
int3
adc
das
pop
test
and
imulb
mov
or
in
cmp
jp
adc
mov
or
lea
call
out
mov
or
incl
push
mov
xor
aas
pop
mov
mov
sub
xchg
shrl
pusha
add
dec
mov
lea
xchg
add
mov
jecxz
cwtl
cmpsl
ret
and
test
mov
stc
sbb
adc
mov
push
nop
test
and
mov
push
jecxz
lret
js
sbb
push
add
dec
push
mov
ljmp
mov
xchg
mov
add
pop
ret
out
add
jns
dec
sub
loop
or
js
int3
xor
sub
pop
fs
cmc
sub
test
into
scas
cmp
std
adc
and
sti
mov
xlat
arpl
jne
inc
shlb
stos
push
test
mov
lret
sub
xor
bound
sub
data16
or
fnstsw
mov
loop
jl
out
sbb
adc
outsb
mov
push
fisubl
xchg
jnp
sahf
js
scas
jne
decl
mov
in
jb
or
pop
test
xchg
in
lods
fwait
lcall
add
icebp
mov
fucomi
call
fiadds
lret
push
jnp
rclb
jmp
add
sbb
or
stc
js
sub
pop
or
ret
inc
push
xchg
push
fdivr
push
loopne
or
dec
movsb
test
pop
out
cmp
xchg
imul
mov
test
popa
dec
popf
cs
add
inc
test
xor
push
lret
mov
add
fsubrl
fcos
orl
sarb
popa
xor
add
dec
imul
sbb
lods
inc
in
outsl
stos
loopne
arpl
sbb
lret
repnz
ja
xchg
into
cmp
jmp
sahf
into
jno
jg
jp
push
leave
ja
cli
mov
mov
mov
fs
cmp
into
shufps
jbe
ret
scas
loope
xor
inc
rcrb
xchg
dec
xor
clc
aad
sbb
jo
push
jne
or
mov
outsl
sti
push
pop
xor
adc
shll
int
leave
lcall
mov
xor
push
xchg
leave
xchg
cmp
push
xlat
jmp
and
dec
repz
mov
orl
fisttpl
mov
mov
das
xor
add
jo
xchg
scas
mov
mov
jl
cmp
aam
mov
and
jo
mov
xchg
mov
lret
xchg
dec
out
and
and
arpl
lcall
pop
imul
leave
cmp
add
in
pop
inc
jb
fsubp
repz
outsb
pop
sub
mov
shll
in
insl
cmpsl
dec
cmp
pop
scas
loop
repnz
rcll
bound
lret
xchg
dec
fstpt
data16
test
cwtl
dec
pop
mov
push
ss
xchg
jbe
popa
stos
jne
push
pop
push
sti
lret
jl
out
xchg
fisubrs
add
shrb
jae
or
stos
fcom
andb
xor
pop
lret
es
mov
xor
lods
pusha
mov
icebp
push
ljmp
jmp
xchg
and
add
fidivrl
dec
lds
insb
hlt
xlat
adc
push
push
sarl
dec
sub
mov
loop
mov
or
movsl
xchg
fistl
mov
fcompl
jno
ds
adc
and
xchg
loopne
and
adc
sub
daa
stc
insl
sbb
lahf
mov
inc
or
xchg
push
and
rorb
lcall
mov
xchg
dec
jl
stos
xor
cmc
enter
push
imul
lret
jecxz
loopne
inc
cs
add
cld
nop
pop
or
aas
outsb
mov
popa
mov
hlt
push
daa
adc
lods
mov
push
or
movsl
ja
test
mov
add
pusha
cld
rcrl
pop
push
xchg
pop
push
jmp
lcall
movsb
cmp
cld
jp
jl
sub
cmp
cltd
mov
repz
pop
testb
sub
mov
pop
loop
scas
adc
aam
fsubs
mov
mov
jno
and
insl
adc
stos
cwtl
out
fmull
test
not
lods
sahf
jne
into
xor
mov
push
stos
mov
or
loope
pop
movsl
cmpsl
fcmovnbe
and
xchg
xchg
mov
jbe
test
push
xchg
mov
sub
mov
add
fistpll
add
addr16
add
pop
sahf
mov
cmpsb
inc
jo
std
or
sbb
mov
fnstcw
repnz
or
divb
pop
inc
dec
mov
andb
in
gs
cmpsb
xchg
imul
stos
or
sbb
xor
out
mov
jb
lahf
xlat
test
add
or
pop
or
mov
push
call
ret
xchg
pop
mov
jne
cwtl
imull
push
aam
cmp
movsl
loopne
hlt
and
stc
jno
push
dec
fdivs
or
lock
rolb
dec
es
in
rcll
test
xchg
cwtl
cltd
mov
shrl
or
inc
das
fndisi(8087
push
mov
mov
popf
iret
mov
jae
enter
push
xor
push
or
ret
sahf
cli
and
rcrb
addr16
adc
cmpsl
lahf
and
add
sbb
popa
cld
mov
je
cmp
stos
mov
ret
icebp
add
ss
iret
jae
and
fsubrs
loopne
mov
cmp
shll
stc
xor
sarb
mov
adc
mov
dec
jnp
loope
or
sub
pop
cmp
hlt
pop
scas
divl
dec
movsbl
rolb
inc
ja
cmp
jge
jnp
mov
dec
jne
dec
mov
aas
pop
sbb
push
daa
scas
adc
mov
nop
shll
jle
stos
cltd
test
push
xchg
adc
dec
push
cmp
andnps
popf
outsb
inc
push
outsl
out
arpl
jp
push
push
out
jb
cltd
hlt
cmp
mov
ss
mov
mov
fsubs
xchg
icebp
xlat
cmp
and
jo
pop
inc
rolb
push
rcrb
js
or
adc
out
push
add
sub
mov
lea
xor
pop
adc
test
push
stos
aaa
jmp
addb
jmp
sti
stc
stc
add
das
push
ficomps
and
dec
popf
push
outsl
ljmp
into
or
cmpsb
and
dec
adc
mov
nop
sbbl
loope
mov
dec
je
or
scas
mov
xchg
mov
es
xor
xor
repz
xchg
mov
mov
xor
imul
mov
sbb
adc
shrb
les
mov
or
test
nop
push
js
adc
jne
mov
inc
std
int
or
dec
lret
or
movsl
and
gs
stos
adc
int
push
sahf
dec
movsb
enter
fsubs
mov
add
pushl
lods
ret
lret
sbb
mov
sub
repnz
out
ja
dec
mov
adc
mov
rolb
xor
adc
mov
mov
in
xor
xor
lret
mov
and
inc
cmpsl
lods
gs
test
popa
scas
stos
pop
les
es
ret
icebp
jnp
jo
cmp
adc
add
in
je
add
add
sub
pop
or
inc
mov
lret
mov
add
in
pop
xchg
inc
adc
sub
aaa
arpl
adc
adc
inc
int
mov
gs
cmc
jg
loope
dec
mov
cs
or
sti
pop
lahf
popa
sub
add
add
adc
or
dec
jecxz
lahf
fwait
sub
mov
pop
test
sub
mov
fsubl
xchg
shlb
sbb
jp
push
clc
faddp
mov
pop
movsb
xlat
or
jge
push
mov
push
pop
mov
sbb
data16
pop
cli
pop
adc
inc
dec
jmp
divl
movsb
int
push
in
mov
dec
mov
test
xor
mov
sub
fistpll
icebp
push
cmp
xchg
push
and
inc
js
outsl
js
lock
add
pop
sbb
js
cltd
xor
out
fdivl
aam
data16
in
dec
and
into
hlt
xor
mov
cs
pop
pop
add
inc
aam
and
and
jge
cmp
push
iret
sbb
fmull
inc
fldenv
jle
jge
adc
out
mov
push
xchg
mov
mov
lds
xor
mov
movsb
inc
jmp
mov
dec
jle
jne
jecxz
adc
push
sub
mov
sbb
or
xchg
jmp
cli
roll
sti
clc
and
push
xchg
sarb
cmp
and
jecxz
out
dec
mov
jp
or
or
mov
repz
and
loope
sub
insl
scas
dec
mov
daa
je
push
clc
sub
dec
cmp
ficoml
mov
xchg
icebp
mov
cld
adc
out
fstpl
push
pop
shll
pop
jle
leave
cwtl
and
and
subsd
test
cmp
lret
push
cwtl
ss
scas
lahf
and
or
xor
ss
cmpsb
sub
jge
add
mov
out
push
add
and
es
inc
jle
mov
mov
mov
out
outsb
sbb
sar
push
test
repnz
das
xchg
dec
popf
lahf
andb
jns
das
out
int
sarb
je
jb
repnz
sbb
mov
aad
pop
enter
xlat
sbb
inc
pop
xor
ljmp
cltd
dec
insl
fildll
fwait
mov
mov
sbb
lods
jbe
cmc
mov
mov
bound
lods
inc
popf
add
jns
xchg
pop
sub
inc
jb
inc
vpsrld
lock
fnstsw
jne
inc
cmpsb
in
lcall
cwtl
stc
data16
jnp
push
imul
mov
fldenv
cld
mov
dec
lret
ljmp
sahf
jno
xor
mov
or
push
mov
cmp
inc
and
fiaddl
ss
and
out
int3
cmpsl
fistpl
test
jae
sub
sbb
pushf
lcall
inc
in
add
push
mov
loopne
sub
icebp
testb
inc
jbe
dec
pop
xchg
jno
pusha
inc
stos
or
inc
xor
lock
movsl
stos
and
sahf
xor
xor
inc
jg
fldpi
sub
jg
loope
mov
sub
adc
loope
cmc
xchg
test
in
lret
andl
pop
jno
mov
leave
adc
add
add
aad
mov
add
cs
sbb
cltd
mov
test
lret
cmc
pusha
pop
popa
adc
andb
mov
xchg
dec
mov
into
sub
adcb
adcl
xchg
cli
cmp
shrl
jb
rclb
sbb
xchg
jae
loope
shll
popf
xchg
and
jecxz
dec
shlb
mov
pop
cwtl
mov
adc
ljmp
ljmp
push
call
cmpsb
stos
mov
dec
shrb
cli
adc
jo
popf
sarl
js
daa
jp
test
pop
xor
cmc
sbb
lcall
lds
cmp
jmp
arpl
ret
fs
jecxz
insb
call
adc
ret
imul
push
orb
out
mov
leave
mov
inc
enter
loop
and
pusha
dec
and
xor
dec
movsb
adc
sti
popa
enter
mull
jl
fimull
gs
push
les
pusha
daa
dec
cs
push
push
loopne
cmpsb
inc
or
jle
xchg
mov
das
dec
xorb
jbe
push
jge
push
stc
lret
test
xchg
hlt
mov
sti
jns
pop
rclb
inc
out
and
hlt
cwtl
xchg
mov
addb
insl
bound
repnz
nop
stc
lock
jg
leave
loope
mov
lea
daa
sbb
pop
and
loop
outsb
stos
js
or
and
sub
mov
dec
subl
push
sbb
pop
cld
pop
lret
jo
out
push
adc
inc
nop
cmpsb
gs
lds
xor
lret
push
movsl
sub
xor
or
mov
mov
push
imul
and
mov
cmp
adc
insb
or
rorb
in
push
push
in
decb
dec
add
or
out
and
cmp
out
jp
pop
cmp
test
hlt
ljmp
clc
sbbb
shr
shll
ds
add
rorl
and
sbb
scas
mov
mov
cmp
lds
cmp
push
lcall
jg
dec
int
fs
frstor
xchg
or
in
ror
test
jae
pop
sub
xor
push
mov
pusha
mov
ja
push
out
popa
fcomps
jl
adc
cmpsb
jne
ficoml
lret
push
movsl
scas
add
fisubl
lret
push
cld
ljmp
dec
pop
mov
push
mov
add
pop
outsb
sahf
mov
cli
sub
and
and
mov
fwait
outsl
xor
int3
outsl
push
ret
sbb
nop
and
pop
sub
pushf
insl
inc
daa
push
test
cmp
or
lcall
sahf
mov
ljmp
popa
clc
popf
movsb
add
popa
mov
into
cmp
decl
loopne
jns
cmpxchg
jae
cmp
mov
cli
sbb
mov
out
lret
pop
ret
xor
ficomps
cmpsb
sub
fsubrl
and
loopne
and
inc
mov
iret
mov
setge
pop
mov
cwtl
push
test
sub
adc
mov
adc
lods
lret
cmp
in
imul
push
outsb
mov
bound
aas
shl
mov
icebp
popf
sbb
xchg
or
stc
mov
jb
lahf
mov
inc
push
pop
xorb
popa
push
lret
int
jns
fildll
add
out
fwait
sbb
fimuls
dec
inc
push
and
mov
lea
xchg
arpl
adc
daa
and
mov
pop
adc
and
addl
cmp
bound
pushf
jg
pop
pop
or
add
jno
repz
xor
jl
jae
adc
pop
mov
mov
data16
sbb
sub
or
push
pop
or
bnd
mov
cmpsb
inc
or
add
pop
addr16
or
adc
movsl
pusha
ficomps
mov
xchg
stos
xchg
xchg
jnp
leave
sbb
out
cmp
int
imul
sahf
or
and
or
jmp
dec
loop
adc
jb
ret
or
cmpsl
lods
loop
mov
and
lods
sahf
je
jo
sbb
stc
mov
je
and
repnz
icebp
dec
jno
shlb
dec
cmp
mov
jecxz
into
adc
sar
sbb
es
sub
push
adc
and
mov
or
jecxz
mov
xlat
popa
dec
adc
daa
inc
and
inc
add
in
subps
fldenv
popf
cltd
jo
into
pop
inc
mov
xchg
mov
ja
in
dec
rcrl
movsl
mov
and
dec
add
roll
ret
inc
ja
inc
sub
clc
mov
imul
fdivp
push
and
nop
daa
icebp
jg
push
mov
add
xor
jnp
dec
loopne
mov
cmc
aad
dec
cld
stc
fsubl
push
out
ficoms
std
xchg
outsb
movsb
ss
ss
in
aaa
mov
cmp
sarb
movsb
int
inc
lds
fistpl
add
jge
int3
dec
out
cs
das
xlat
enter
scas
testb
fstl
aas
pop
xorb
iret
int
outsl
sub
xor
ret
ret
lcall
pop
nop
data16
movsl
shl
mov
testb
lods
mov
cli
imul
hlt
and
lock
pop
and
popf
mov
inc
cmp
nop
fwait
jle
xchg
mov
mov
das
lods
and
sbbl
in
jge
mov
dec
leave
clc
and
and
jo
pop
stos
xchg
out
jmp
addr16
lock
scas
int
fs
and
sbb
in
stc
cmp
sub
add
and
mov
mov
add
in
dec
xor
xor
lcall
into
out
fcmovne
cltd
mov
sub
xchg
xlat
mov
or
dec
cmp
push
jo
mov
sub
insl
test
idivb
dec
mov
pop
stos
das
aaa
dec
sbb
mov
or
loope
sbb
flds
sbb
popa
ds
daa
adc
not
mov
lret
push
jns
test
stc
xor
jmp
lret
stc
xchg
fwait
orb
fcoml
adc
leave
lods
mov
xchg
inc
add
insb
out
pop
xlat
ss
xor
insb
lock
and
jae
lock
xor
ja
pop
loop
mull
sub
fdivs
ja
stos
cmp
add
sbb
repnz
nop
shrl
lds
and
sarb
popa
test
aaa
push
push
jecxz
insl
mov
mov
popf
jge
dec
lcall
jb
pop
and
pop
inc
or
repnz
lret
lahf
addl
or
shl
mov
push
cmp
sahf
fs
pushf
jle
pop
sahf
fwait
add
push
outsb
mov
jns
loopne
sbb
jbe
cmpsb
cmp
inc
pop
or
ret
test
aam
stos
stc
or
push
xchg
into
fs
mov
mov
mov
int
xchg
cmp
shrb
out
lret
cltd
pop
scas
mov
es
or
and
lock
jnp
shr
movsl
or
call
outsb
mov
imul
dec
inc
int
into
xlat
or
mov
test
dec
pushf
jbe
mov
das
mov
scas
mov
addb
jbe
movsb
cmp
out
pusha
aas
dec
loop
call
xchg
or
mov
lret
inc
pop
loope
ljmp
mov
pop
xchg
fnstcw
hlt
shlb
adc
push
fdivl
lahf
sbb
call
mov
add
adcb
dec
fsubs
sahf
push
loop
aad
in
out
adc
loopne
push
rcll
lods
mov
outsl
shrl
jb
fldcw
iret
out
jle
xor
insb
repz
cmp
add
push
std
outsb
adc
push
aaa
movsb
insb
sub
fwait
inc
mov
scas
mov
lret
adcb
xchg
dec
pop
cmp
inc
call
add
cmp
and
sub
adc
pop
rorl
aas
adc
hlt
rclb
int3
push
mov
dec
sbb
push
call
dec
push
stc
dec
arpl
mov
mov
fidivrl
arpl
sbb
pop
es
test
pop
sbb
scas
jecxz
imulb
mov
sub
inc
fiadds
cmp
shlb
out
xchg
in
dec
sti
xchg
ret
rcll
adc
movsl
stos
or
out
mov
pop
frstor
cwtl
inc
arpl
push
jg
outsb
jle
andl
mov
cmp
mov
in
arpl
into
add
fnsave
xor
pop
ljmp
sbb
rclb
std
aam
jo
jnp
sub
pop
sarl
nop
cli
pop
cmpsl
sarb
cltd
and
out
mov
popa
add
repz
add
dec
adc
mov
test
das
jae
loope
cmpsb
aad
xorb
dec
push
fwait
repnz
or
mov
sub
jb
movsb
inc
xor
repz
cmp
xor
and
mov
push
iret
jp
cmpsl
nop
adc
xor
popl
in
test
rclb
jl
rcrb
jae
imul
mov
dec
insl
or
icebp
pop
cmp
pop
or
ret
cltd
xchg
lret
pop
inc
mov
ljmp
insl
int3
aas
hlt
loope
aas
test
stc
cmc
jns
das
sahf
outsb
repnz
pop
sti
push
cmp
subl
cmp
inc
or
push
push
int
inc
pop
xor
cmpsb
mov
jecxz
mov
sub
dec
jae
in
data16
xor
cmp
out
mov
xlat
add
mov
xor
cmp
xchg
push
shll
and
push
dec
out
in
movsl
or
pminsw
mov
mov
flds
repnz
push
jmp
add
xchg
sti
ret
add
loopne
jl
arpl
repnz
add
roll
loop
fcoml
dec
xchg
xor
push
xchg
repz
test
shlb
pop
xchg
jmp
jno
into
mov
mov
mov
or
lcall
xchg
int3
and
mov
cmp
sub
xchg
mov
or
xchg
cmp
dec
sbb
xchg
xchg
inc
aas
fstp
mov
or
mov
sub
fbstp
jge
xor
pop
mov
jo
clc
inc
cltd
pop
mov
or
les
or
push
adc
pop
cld
xor
fcmovnbe
int
dec
loopne
inc
stc
xlat
out
cli
imul
push
pushl
out
xchg
pushl
jno
push
or
cmc
negb
pushf
lds
cli
adc
mov
xor
nop
lods
inc
mov
test
ret
pop
sbb
cmp
dec
hlt
pusha
and
pop
test
mov
cld
xor
adc
into
test
fstl
xchg
xchg
ss
orl
mov
fs
jecxz
fildll
mov
inc
mov
add
cmc
out
jne
inc
sub
loopne
and
fwait
outsl
out
xchg
lods
mov
fstl
shl
roll
cmp
push
pop
repnz
mov
or
mov
adc
jno
mov
mov
xor
push
push
out
andb
jns
xchg
outsb
call
jno
aam
incb
pushl
imul
rolb
pop
pop
pop
inc
mov
imul
shrl
xchg
pop
sub
xchg
sarl
xor
pop
xor
inc
aad
out
sbb
in
dec
es
rolb
rorb
sub
jmp
and
mov
and
js
rclb
cwtl
mov
cltd
in
add
mov
and
adc
push
shll
or
jae
dec
ss
xchg
dec
xchg
in
sub
das
int3
mov
les
inc
lods
lods
insl
or
sbb
sbb
adc
jno
xchg
lds
and
cmp
inc
cli
loop
das
into
iret
add
or
mov
and
cmpsl
add
mov
imul
xchg
data16
dec
mov
ja
test
lods
sahf
and
and
in
rcrb
push
push
mov
jne
aas
mov
jnp
icebp
jg
xor
and
pusha
aas
adc
sahf
stos
fsubl
movb
or
movsb
hlt
or
jge
inc
mov
inc
and
int
sub
adcb
dec
aad
pop
test
adcl
out
popf
push
shr
icebp
bound
cmc
orl
outsb
mov
in
popf
pop
stos
fisubrs
jns
dec
push
jne
movsl
in
lods
mov
sbb
sbbl
xchg
insb
cmc
fsts
adc
loopne
mov
sbb
mov
and
enter
pop
bound
lods
mov
mov
enter
popl
ret
add
or
adc
dec
xor
push
in
inc
mov
lcall
imul
cvtps2pi
mov
jle
or
popa
or
push
insl
es
dec
addr16
xchg
cmp
mov
mov
loopne
mov
in
mov
testl
cli
mov
daa
test
nop
fisubrl
dec
pop
into
jl
adc
jne
cmp
ror
add
pop
ret
roll
adc
jecxz
mov
lock
add
xor
call
or
fisttpl
pop
cmc
inc
sub
fistpll
inc
not
popf
sbb
std
sbb
stc
loop
dec
mov
outsl
rclb
sbb
call
push
cld
inc
xchg
sti
sub
daa
add
mov
in
cmp
ss
setae
ss
in
sarb
leave
loope
mov
mov
and
mov
jnp
and
cld
push
mov
daa
inc
mov
shrl
fs
enter
mov
loopne
fnstsw
iret
in
jne
les
push
push
and
mov
push
mov
aam
in
push
pushf
pop
daa
test
lcall
xchg
xor
int
push
popa
push
mov
mov
test
jecxz
push
xor
imulb
ret
mov
clc
xchg
inc
xor
inc
addps
or
sti
cmc
xor
mov
xlat
in
rol
fldcw
adc
jmp
iret
ss
aam
int3
sbb
mov
cs
inc
les
dec
scas
lods
bound
fsubl
push
ret
xchg
mov
xchg
mov
in
fsubs
out
in
push
popa
push
inc
cmpsb
stos
mov
mov
fcomps
pop
repz
stos
jp
jnp
push
mov
sbb
jmp
push
mov
shll
mov
int
imul
sha256msg1
in
mov
jnp
fcomps
cmp
cli
pusha
fsub
or
xor
addb
mov
pop
adc
cmp
jno
les
por
or
jns
mov
sub
hlt
xlat
sub
std
fcmovnbe
sbb
mov
add
or
xchg
notb
xchg
pop
hlt
aas
daa
sbb
mov
stos
xor
and
jp
xchg
jmp
aas
xchg
jg
mov
add
jbe
dec
int3
mov
test
xchg
adc
jne
psllq
mov
ret
fs
jb
and
inc
and
inc
ja,pt
lret
pop
adc
sub
in
fst
lea
pushf
stc
movsl
cmc
outsl
push
lods
sub
in
or
jae
shr
adc
xchg
testl
jp
in
pushf
inc
stos
add
rorb
das
scas
xchg
lods
sbb
push
adc
sub
cmp
std
xchg
cs
pop
gs
or
out
jno
cmc
sbb
pop
fs
hlt
cld
std
inc
loopne
stos
inc
into
or
push
es
adc
repz
loopne
jo
clc
jne
xchg
mov
js
es
cmp
jle
out
mov
xchg
divl
mov
rol
stc
movsl
xor
adc
sbb
inc
sbb
pop
pusha
movsb
testl
or
gs
sbb
int
jl
mov
lods
push
pusha
fldt
int3
add
rolb
sti
jge
dec
cmp
cmp
ret
pmaxub
xchg
or
and
sbb
loopne
cmp
aas
jge
push
aam
pop
sarb
mov
cli
xchg
xlat
push
sub
fs
lods
adc
mov
pusha
orl
or
pop
lret
push
dec
ret
lods
test
inc
dec
jmp
push
into
scas
pop
pop
into
test
pushf
lea
dec
loope,pn
or
cltd
jne
bound
push
mul
test
popf
mov
pop
in
push
loop
insb
cmp
sub
push
mov
and
inc
mov
xor
int3
in
inc
xchg
or
add
inc
xchg
xchg
fnstcw
shl
les
inc
dec
ja
inc
outsb
jecxz
ja
jno
xor
jge
ja
and
or
push
stc
add
hlt
in
lds
mov
repnz
lret
es
lahf
out
rcll
out
fnstenv
imul
std
mov
push
sbb
mov
arpl
sbb
loop
fdivl
sahf
js
dec
ret
mov
shr
movsb
add
push
outsb
aas
ss
cmpsl
pop
cmc
pop
jp
mov
push
js
popa
add
jnp
push
shl
cmp
pop
or
lods
sub
xlat
and
or
sub
das
adc
cmp
push
jae
fidivl
inc
int3
or
jle
arpl
lret
cli
xchg
mov
gs
dec
push
sub
shl
xor
imul
test
cmp
cmp
out
and
and
mov
pop
mov
mov
inc
sbb
inc
lahf
mov
push
mov
aaa
aam
mov
pop
xor
pop
adc
subb
arpl
clc
push
pop
mov
mov
sub
and
mov
lcall
loopne
int3
out
popa
int3
cwtl
std
hlt
sub
dec
in
test
call
and
mov
jg
mov
mov
adc
jmp
sbbb
lret
iret
test
in
clc
push
lea
lods
enter
push
xchg
sub
rcr
jnp
dec
shll
push
add
mov
je
test
mov
cwtl
out
dec
sarb
dec
outsl
mov
or
inc
fists
movsl
es
pop
xchg
or
imul
js
xor
pop
jmp
adcl
and
insl
loope
pop
pop
imul
cli
inc
cmp
cmp
xchg
fs
and
and
pop
sub
cmp
or
jo
insl
and
fwait
movsl
push
test
fs
mov
rclb
mov
inc
xor
jnp
hlt
lods
pop
mov
jae
and
adc
mov
dec
pop
mov
mov
test
adc
pusha
pop
fcoml
aaa
cmp
xchg
pop
pop
into
subl
jg
push
push
fdivs
lret
sub
push
jbe
xchg
xchg
mov
lods
sarb
mov
xchg
jbe
test
test
xor
jne
pop
xor
push
pop
stc
pop
add
dec
dec
pop
cli
scas
int3
jl
test
sbb
xor
and
das
and
or
mov
mov
fcomip
jp
cmc
jne
pop
in
lods
fists
jle
fs
or
insl
mov
outsb
mov
addr16
cli
inc
cltd
and
es
clc
je
subl
ret
mov
fisubrs
ds
loope
cwtl
pop
lret
push
add
xor
push
xorl
cld
jnp
xchg
movb
sub
in
lods
sti
xlat
push
aaa
lcall
dec
mov
mov
dec
dec
ret
xorl
xchg
cld
sub
gs
xchg
cmp
sub
mov
xor
pusha
andb
and
cmp
jecxz
push
out
push
mov
mov
xchg
adc
pushf
int3
addb
lcall
cs
gs
or
inc
out
inc
imul
push
mov
jp
and
jle
pushf
adc
dec
ss
ds
mov
push
xor
push
cmc
shl
mov
dec
icebp
push
pop
mov
sub
sub
fmulp
das
in
int3
xor
and
js
mov
pop
das
sub
sub
xchg
sub
fs
cmp
dec
xor
jle
pop
nop
lret
int3
push
es
ficoms
es
movsb
test
push
xchg
aaa
and
sbb
mov
out
jne
or
scas
jge
jmp
dec
enter
cmp
dec
push
jmp
insb
adc
int
lahf
test
sbb
sub
or
and
std
cmpsl
mov
ror
call
je
fstl
push
pop
mov
push
mov
or
or
outsl
sub
into
jge
std
inc
in
or
scas
mov
repnz
stos
pop
jb
lahf
mov
fcom
cmp
sub
notl
shlb
or
push
push
sahf
rsqrtps
outsb
leave
fdivl
jae
das
subl
jge
icebp
mov
popf
push
imul
xchg
lods
pop
mov
jge
xor
cs
std
mov
addr16
cmp
xchg
ret
mov
adc
cmpsb
test
dec
testb
cli
inc
in
and
and
dec
sbb
test
jle
mov
push
jns
repnz
icebp
lret
pop
mov
shlb
lock
in
jge
cmp
pop
pop
mov
test
sub
push
add
loop
push
and
loop
jp
and
mov
shlb
jge
scas
leave
xor
and
icebp
xor
sub
andl
mov
mov
popf
daa
cmc
fidivrs
not
test
pop
bound
or
pushf
jmp
popf
rorb
dec
jo
shl
sub
stos
nop
outsb
dec
mov
mov
add
subl
mov
jns
movsb
test
cs
mov
inc
pusha
movsb
es
js
pushf
cmp
adc
xor
in
push
sub
daa
imulb
pop
dec
jg
jno
inc
incl
adc
out
jl
mov
cltd
out
mov
pop
cmpsb
xchg
les
sub
fisubs
test
cli
aad
adc
call
pop
pop
jae
mov
or
in
loopne
xlat
jp
sub
test
lods
test
jnp
repnz
sbb
sub
movsb
pop
and
xorb
adc
cli
xchg
lret
mov
ret
bound
xchg
add
cmp
out
lock
negb
mov
xchg
cmp
aam
sbb
pop
xchg
loop
fistpl
scas
fsubrs
sub
hlt
pop
mov
sbbb
repz
mov
je
fsubrl
fnstsw
dec
cmpb
es
dec
jb
fcmovne
or
mov
push
out
outsl
sbb
add
inc
cmp
or
jbe
daa
dec
mov
rcll
loope
orb
aam
push
xchg
pop
popa
xchg
addr16
push
movsl
pop
or
inc
call
cltd
jl
shlb
adc
dec
shl
fldcw
lods
jg
std
mov
push
xchg
dec
ret
pop
inc
sahf
addl
xchg
mov
or
fcoms
fisttpl
push
loop
adc
arpl
mov
or
fwait
aas
cmpsl
mov
fnstsw
mov
xchg
test
cld
aaa
xor
jg
mov
iret
std
je
sub
add
cld
cmpb
movsl
and
fwait
or
dec
mov
rclb
mov
fcompl
pop
xchg
mov
push
mov
and
pop
bound
inc
pusha
push
insb
dec
cmc
inc
out
jmp
cli
dec
sbb
mov
aaa
xchg
xchg
popa
inc
sti
pop
mov
daa
mov
mov
idiv
or
adc
faddl
jecxz
rcr
add
pop
rorl
daa
or
movsl
or
in
adc
or
push
cmpsl
pop
xor
in
mov
sarb
pop
jo
inc
dec
inc
push
fucomi
push
bound
sbb
test
mov
outsb
test
pop
cmp
mov
jns
ret
xorb
or
enter
dec
xlat
inc
addr16
mov
ret
push
sbb
xor
xchg
out
or
mov
xchg
loop
fwait
sub
add
jg
ds
cli
negb
int3
and
rcrb
repz
es
in
mov
cmp
pop
push
dec
cmp
movsb
dec
add
xchg
inc
adc
ja
bound
cmp
or
sub
aad
movsb
cld
add
in
mov
cmc
shlb
test
daa
iret
add
sbb
movsl
pop
and
or
lea
and
dec
xor
leave
xor
inc
sub
loope
push
cltd
sti
pop
out
push
fimull
sub
mov
divss
out
daa
mov
pop
out
push
call
or
loop
pushf
cmp
inc
mov
lds
aaa
xchg
mov
cmc
sbb
pushf
int3
sub
pop
xor
and
cmp
addr16
les
dec
lods
aam
je
cmpsl
pop
sbb
ja
fists
xchg
jne
jb
cmp
xor
lret
aad
iret
repz
imul
push
fcomps
insl
mov
mov
pop
xchg
js
jo
popf
pop
jle
data16
aas
clc
jl
fildll
inc
ja
hlt
ja
shr
icebp
add
mov
gs
mov
enter
mov
mov
ss
fwait
decl
inc
inc
aas
out
xchg
addr16
out
fs
dec
sar
inc
jns
cmp
jge
out
mov
clc
lods
jne
out
pushf
popf
imul
xchg
or
push
inc
or
jne
jmp
sub
cmp
cmpsb
aad
dec
mov
sub
ja
or
jg
and
outsl
jge
inc
mov
cld
sub
int3
pop
ja
dec
mov
jg
fstps
stos
mov
jge
mov
lret
sti
mov
mov
push
sub
mov
xor
std
jo
insb
in
xchg
pop
jp
gs
jne
jle
test
scas
push
inc
or
sbb
loop
out
cli
popf
mov
adc
ljmp
mov
scas
jb
out
jg
ret
and
pusha
jo
fs
jge
jae
lods
and
cwtl
sarl
cmp
loope
mov
xlat
jo
nop
js
es
lock
int
ds
inc
sub
lea
gs
int
lahf
xchg
xor
std
ror
daa
insb
jo
inc
repnz
sub
ficompl
cs
sti
xor
testb
lret
jl
mov
je
js
ficompl
mov
dec
xchg
pop
adc
cmp
fs
and
mov
negl
push
int3
or
dec
adc
cs
test
pop
sbb
ret
mov
repz
push
pop
fmuls
and
push
sbb
mov
aaa
jmp
std
dec
jns
cs
in
test
ss
out
mov
int3
mov
mov
push
inc
and
sbb
lods
mov
pop
adc
push
sti
cmp
idivb
js
mov
mov
cmovp
push
and
dec
enter
push
jo
inc
aad
jns
ljmp
js
or
adc
ds
inc
mov
test
xor
test
sub
imul
aad
cmpsl
aad
ds
pop
mov
hlt
aam
mov
push
xor
xlat
test
hlt
cwtl
xor
cmc
xchg
jmp
orb
enter
out
or
or
dec
stos
das
pop
sbb
test
adc
popfw
imul
daa
xchg
mov
addl
jbe
lea
jge
or
dec
xchg
mov
jge
dec
dec
insl
sbb
icebp
dec
mov
fs
fildl
clc
dec
cmc
mov
xorb
xor
fwait
test
ds
imul
xchg
dec
and
jbe
mov
clc
push
pop
adc
out
mov
fadds
or
pop
clc
popa
pop
jl
sub
pop
xchg
sahf
cwtl
jbe
xchg
ret
push
clc
xorb
ret
outsb
mov
arpl
lahf
adc
lahf
sahf
mov
pop
push
jb
pop
cmp
jo
xchg
push
loope
stc
scas
or
out
mov
add
cmp
dec
jb
loopne
fmul
sarl
inc
dec
mov
inc
and
xor
push
das
mov
sub
xor
and
dec
outsb
inc
cmpsl
jns
nop
mov
pusha
jae
in
ret
outsb
lods
xor
in
pop
jmp
addb
push
arpl
rcr
add
mov
cs
out
je
std
shrl
sbb
add
add
xchg
movsl
dec
mov
rorl
cmpsb
push
sub
add
fbld
jo
add
sub
aam
ror
sbb
out
jl
fmul
fs
fnstcw
cli
add
lret
xor
cltd
mov
fstpt
push
pop
call
push
fcoms
xor
pop
mov
test
aas
pop
dec
jl
icebp
mov
and
outsb
mov
lock
repz
loopne
xchg
xchg
imul
and
sbb
lahf
xor
repz
cmp
pushf
in
divl
cmp
outsl
pop
jg
sti
stos
stc
hlt
sub
sub
and
adc
xlat
jge
mov
push
cmp
test
repnz
nop
sbb
lods
cmp
xor
push
sbb
mov
outsl
xchg
xchg
xchg
pop
stos
jecxz
mov
insb
adc
xchg
outsb
jl
fisttpl
sbb
xchg
out
lods
inc
jnp
divl
call
pop
cmp
shl
hlt
pop
xchg
add
mov
xchg
fs
mov
pushf
add
jmp
imul
ja
mov
mov
jle
inc
mov
arpl
mov
add
jno
cli
rcll
sub
addl
insb
fidivrl
sarb
std
and
xor
inc
aaa
repnz
movsb
cmp
jne
jge
nop
add
test
pop
and
xor
repnz
jmp
mov
sbb
icebp
mov
cmpsb
lods
pop
std
mov
ret
sub
scas
int
xchg
ret
mov
sbb
ja
and
dec
sub
jbe
pushf
into
mov
ret
adc
xchg
mov
loopne
dec
fbld
clc
mov
mov
jbe
pop
fisttps
sub
stos
outsb
pop
inc
and
add
ja
lahf
mov
data16
out
dec
xor
pop
mov
fnstcw
jl
outsl
test
fistl
aaa
push
adc
push
sub
xchg
and
mov
cmp
jb
stc
xor
shll
das
mov
shl
fdivs
cmp
ljmp
and
testl
imul
lds
in
sub
mov
mov
add
sar
repz
push
mov
mov
out
adc
push
movsl
das
inc
dec
jge
test
iret
adc
daa
dec
push
sbb
pop
xor
stos
movsb
adc
cmpsl
sti
imul
mov
inc
cmpsl
lahf
cmp
mov
dec
mov
push
pop
mov
imul
add
insl
push
imulb
push
jno
inc
sub
mov
and
mov
fsub
pop
pop
mov
jl
sub
rclb
xchg
jmp
sarl
out
xchg
lcall
push
int
mov
jge
add
js
aas
cmpsl
pusha
adc
arpl
jmp
mov
and
jne
inc
push
mov
and
mov
push
mov
fcmove
mov
ds
and
pop
adc
shl
or
sahf
add
add
lods
xchg
mov
xchg
lahf
fwait
pop
std
in
push
push
cmp
sbb
xchg
icebp
lods
push
call
mov
inc
cmpb
sbb
int
ret
fwait
add
leave
sbb
gs
nop
adc
xchg
dec
xchg
mov
cmpsb
loope
js
jmp
pop
or
cs
dec
xor
insl
aas
xor
inc
in
dec
jb
lods
arpl
mov
cltd
les
ljmp
mov
popf
or
jmp
inc
adc
outsl
int3
mov
cld
arpl
mov
mov
fstl
mov
addr16
mov
sbb
mov
out
xchg
xchg
push
mov
add
rclb
xchg
out
stos
test
or
aad
jmp
mov
cwtl
push
test
inc
in
mov
xor
lret
sbb
pop
mov
and
push
lock
push
push
and
inc
pop
imul
xchg
push
sbbb
popf
add
mov
mov
fsubrs
jmp
sbb
push
aam
push
gs
jge
out
add
or
ffreep
cmp
mov
push
clc
jmp
cmc
imul
xchg
mov
cmp
mov
inc
mov
sbbb
scas
testb
insl
pushf
imul
xchg
xor
or
push
scas
add
packuswb
in
aad
insb
jmp
or
into
popf
push
in
sbb
shrb
or
arpl
arpl
sarl
jl
mov
jnp
fnclex
mov
mov
cmp
test
fwait
int3
xor
or
ds
adc
rolb
ja
push
dec
loope
xor
scas
pop
pushf
pop
cmp
ds
add
fsubl
xor
ja
fsubl
fs
arpl
mov
sub
js
push
insl
jns
dec
and
inc
insl
aad
cli
push
jb
mov
cmp
ds
and
mov
xor
dec
pop
dec
xor
pusha
sub
or
aad
fnstcw
in
push
ljmp
loopne
cwtl
mov
inc
cs
stc
jae
xor
sbb
je
adc
mov
loope
xchg
stc
jns
mov
xchg
jbe
int
pop
cmp
add
fs
dec
cmp
mov
movsb
jg
lods
in
imul
push
or
xchg
mov
lret
int3
mov
in
jl
jge
int3
jbe
sub
movsl
adc
mov
data16
mov
or
pop
pop
aam
pop
incb
jmp
roll
mov
cmp
pop
loopne
popf
push
es
ljmp
jno
fcompp
cltd
jne
por
pushf
pop
shrl
daa
in
or
rcl
add
mov
mov
pop
add
mov
nop
cmc
xor
fsubrs
pop
fadds
scas
and
in
sbb
jns
add
xchg
adc
and
roll
push
fnstcw
xor
mov
push
xor
mov
pop
into
cmp
dec
xor
insl
xchg
movsb
xchg
jnp
mov
loopne
jle
sbb
fbld
fwait
testl
arpl
sbb
push
sbb
mov
mov
sub
rcr
push
add
hlt
and
sbbb
mov
leave
jecxz
mov
jae
in
cmp
push
xchg
inc
inc
adc
and
leave
sub
ljmp
or
stos
stc
xchg
enter
xor
cmpl
cmp
pop
jmp
hlt
xor
lods
movsl
test
cmp
mov
clc
rcl
jg
jbe
pop
inc
adc
arpl
xorl
jmp
das
push
sarb
push
psubsw
les
pop
xchg
ljmp
daa
lahf
in
div
dec
jns
mov
mov
dec
imul
addr16
pop
in
in
push
rcr
lods
mov
cmp
ljmp
adc
and
loope
pop
mov
mov
cli
xor
xchg
bnd
subb
ret
ds
push
test
cmpsl
xchg
sbb
sub
mov
mov
les
xchg
mov
int3
out
add
lock
and
dec
fdivp
or
je
sti
xchg
push
repz
jmp
adc
mov
test
fs
mov
lcall
pop
outsb
imul
pop
dec
cmpsb
lahf
std
mov
or
hlt
xor
imul
iret
stos
test
aad
add
cmp
push
in
mov
shrl
add
and
sbb
cld
pop
out
and
sarl
les
clc
push
xchg
push
lahf
rorl
test
cmp
sti
gs
cmc
or
cmpsb
pop
push
pop
inc
push
rcrb
xor
pop
cmp
fistps
out
lods
push
push
fld
xlat
jnp
sub
xchg
pop
mov
fcmovbe
mov
and
xchg
aam
mov
mov
data16
pop
ja
cbtw
adc
ljmp
inc
inc
out
sbb
add
sub
out
jns
sbb
in
jg
test
outsb
int
loop
iret
sbb
xor
and
loope
xor
pop
stc
xor
mull
outsl
mov
in
jmp
scas
xchg
es
cmpsb
pop
sti
aad
add
fwait
dec
xchg
dec
movsl
push
into
xchg
xchg
ss
jmp
pusha
push
inc
test
push
divb
pushf
xor
in
adcl
test
sub
pop
cld
inc
or
mov
mov
xor
sbb
xor
test
fists
das
std
scas
scas
cmp
sti
js
mov
sub
ja
pop
orl
pusha
testb
adc
mov
adc
jecxz
sub
cld
cmp
mov
inc
adc
jge
inc
push
mov
bound
jno
push
inc
fimull
sbb
fnstsw
sub
addr16
pusha
jne
xor
push
sub
shll
or
xor
ss
push
repz
insl
sbb
ljmp
sbb
add
stos
test
int3
pop
ficoml
xchg
cltd
mov
cli
mov
lret
adc
in
sub
bound
cmpsb
xchg
or
movsl
push
cmpsl
gs
xor
imul
adc
loopne
in
inc
mov
xor
pop
inc
push
or
outsb
and
xchg
repz
testl
fs
mov
scas
adc
fmul
bound
lret
sbb
movsb
shlb
nop
push
xchg
add
push
pop
arpl
pop
bound
or
inc
fsubrl
jbe
movsl
pop
jecxz
mov
int
add
popf
add
mov
jmp
clc
aas
dec
popa
mov
xor
and
shlb
xor
lahf
ret
add
add
push
loop
dec
push
insb
sbb
dec
push
mov
xor
mov
addr16
pop
add
push
dec
call
dec
sub
sub
js
mov
mov
mov
out
jnp
pop
push
push
adc
test
or
mov
mov
dec
shrb
cmpsb
mov
sub
test
pop
je
add
insb
inc
into
pusha
dec
jge
insb
pop
cmp
insl
mov
push
mov
xchg
daa
popa
add
and
mov
in
cld
std
pop
pop
ficomps
sub
mov
or
mov
loopne
pop
cmp
xchg
loopne
out
sarl
or
sub
mov
jmp
ds
or
insb
scas
xchg
xor
ficoms
inc
mov
lcall
jnp
mul
rcrl
stos
mov
push
dec
cmp
fsubrs
arpl
or
push
pop
sub
cmp
cltd
xchg
jle
cmpb
repnz
push
inc
mov
fisttpll
jnp
pop
std
shlb
sbb
icebp
ljmp
cmpb
adc
stos
push
xor
aad
std
loope
adc
adc
subb
stos
std
je
push
sub
les
aam
jae
mov
mov
and
xchg
int3
inc
into
cmpsb
sub
pop
cwtl
cmp
push
mov
sahf
mov
cmpsb
jmp
jmp
lods
push
test
xchg
xchg
clc
cmpsb
mov
pop
ss
jg
les
cltd
sbb
outsl
lds
push
push
push
dec
pop
xchg
ret
xor
mov
loopne
lahf
sub
xchg
xor
jg
push
scas
ljmp
or
sti
insl
mov
cmpsb
out
xchg
out
lea
lcall
mov
sub
pushf
push
in
pusha
fsub
scas
jecxz
jbe
inc
aaa
sub
xor
sub
pop
sbb
jle
dec
jmp
inc
pop
pop
sbb
sub
call
cmpsl
ja
loop
cmc
pop
pop
stos
fisttpll
dec
inc
adc
gs
or
sub
ret
push
orb
push
stc
inc
pop
iret
sbb
rcr
scas
loopne
aam
xor
dec
mov
pop
aad
jns
xor
sbb
fadds
xchg
xchg
sbb
push
popf
fists
xor
mov
gs
add
push
sbb
sbb
out
cld
rcr
jns
mov
xor
daa
jle
pop
pop
std
inc
lds
movsl
or
scas
stos
add
cltd
call
or
push
or
ficompl
or
xor
aas
push
cmp
rcrb
lcall
cmp
fnsave
imul
mov
in
cmp
add
aas
cwtl
mov
mov
push
mov
xor
dec
jb
or
mov
and
add
xor
cld
lahf
mov
and
fisttps
bound
or
or
in
jae
sbb
inc
sahf
dec
mov
sbb
pop
dec
mov
jbe
pop
mov
out
mov
rcll
and
popf
push
or
lods
sbb
add
add
push
cmpsl
sbb
mov
ds
cmp
imul
cld
add
mov
fwait
insl
sbb
pop
lcall
jae
mov
daa
inc
mov
andl
icebp
dec
or
jne
dec
lods
loopne
push
add
aam
movsl
ret
and
imul
aaa
cmp
das
and
xor
mov
cltd
decb
aaa
or
and
mov
test
aas
psrld
mov
fcmovbe
leave
cwtl
xor
sub
push
bswap
push
push
or
cli
frstors
dec
cmp
rclb
mov
adc
xchg
adc
inc
fucom
ss
adc
sti
loopne
leave
scas
pop
mov
adc
inc
into
test
jp
xor
mov
xchg
clc
or
or
jae
mov
add
fs
out
arpl
popa
gs
mov
adc
and
cmp
int
or
push
mov
int3
jge
add
daa
xchg
lods
push
mov
ret
and
mov
jmp
out
sub
sbb
pop
nop
in
jg
xchg
or
pusha
scas
push
jo
nop
push
mov
xor
incb
add
in
xchg
xchg
dec
jle
push
repz
in
push
insb
andl
inc
fnstcw
in
push
lahf
sub
sbb
mov
es
dec
mov
adc
pop
pop
push
cld
lcall
outsl
sbb
cmpsl
push
lret
pop
xchg
fstp
xor
dec
pushf
rcrb
fmull
mov
mov
and
sbb
dec
in
insb
jne
push
loopne
or
push
jecxz
pop
mov
xor
cmp
add
cmp
rclb
outsb
icebp
js
out
mov
out
pop
sub
lods
iret
xor
stos
bound
mov
mov
xor
outsb
mov
js
je
jno
cmpl
andb
xchg
sbb
mov
loop,pn
pop
adc
push
loop
sahf
popa
jo
cli
lahf
sbb
push
xchg
in
shl
dec
into
jno
dec
movsb
aaa
js
sbb
add
push
add
cmc
mov
mov
repz
out
adc
inc
push
cwtl
out
int3
fisubrl
mov
std
cmp
mov
add
xchg
cmc
loope
jns
aaa
sub
inc
mov
sarb
cmc
xor
punpcklwd
cmp
jnp
pop
das
ret
xchg
and
enter
or
int3
aam
js
bound
scas
pop
sbb
xor
ss
fidivrl
popa
loop
sub
fs
mov
loop
sbb
mov
cmpl
ret
ret
dec
sti
mov
and
dec
pop
lods
shrl
lods
aas
push
mov
lret
cmp
imul
xor
push
mov
fnclex
inc
xchg
in
pop
clc
test
jo
shl
sti
mov
jne
or
int3
jb
xor
dec
push
push
xorb
aad
dec
adc
std
adc
daa
and
push
inc
in
enter
dec
test
repnz
popf
cmp
mov
fbld
cwtl
outsl
mov
popf
and
xchg
fs
xchg
insl
icebp
jae
jmp
inc
addr16
jne
or
and
lods
ljmp
mov
jmp
aam
mov
jge
add
lahf
jecxz
cmpsl
flds
out
fwait
test
daa
int
or
mov
xchg
push
pop
icebp
or
imul
inc
popa
jo
rolb
roll
mov
mov
icebp
jne
or
mov
out
arpl
xlat
pop
and
dec
sbb
push
and
pop
out
fucomip
roll
sti
shlb
int3
cmp
or
jl
xchg
cld
cmp
sbb
dec
clc
jecxz
xchg
push
lahf
insb
sbb
fwait
push
imull
mov
int3
jge
adc
push
mov
inc
mov
mov
lret
jns
xlat
es
push
ficomps
mov
adcb
pusha
sub
movsl
jmp
sub
aas
sbb
jae
inc
lret
mov
stos
sahf
add
pop
jmp
push
or
inc
insb
mov
sbb
dec
mov
int
sub
test
out
cmp
out
popl
xchg
in
adc
sbb
mov
mov
out
fucomip
nop
std
xor
dec
push
fidivs
sbb
xchg
xor
mov
push
pop
das
icebp
inc
call
ja
jp
and
insl
add
fstps
dec
test
mov
xchg
add
sub
loope
mov
dec
cli
mov
jmp
jnp
pavgb
in
and
xor
sbb
pop
pop
loop
pop
ja
loope
lahf
jne
test
xchg
xchg
out
inc
ss
cmp
xchg
cs
outsl
xchg
sub
jmp
rolb
in
adc
call
cltd
xor
add
pop
sbb
jecxz
xchg
addl
cmpsb
cmp
repnz
lds
fcompl
repz
jmp
push
lret
push
xchg
adc
dec
mov
movsl
pop
jnp
clc
inc
cmp
xchg
mov
lcall
mov
and
arpl
icebp
in
rol
cmpsb
movsl
in
int3
es
pop
xor
sbb
repz
icebp
cmp
movsl
sub
or
xchg
push
scas
or
mov
jge
js
and
repz
and
cltd
push
pusha
fwait
sbb
jle
and
mov
inc
stos
dec
dec
dec
cmpsl
xor
shl
bound
ds
imul
add
faddl
in
insb
and
test
sub
out
lahf
cmpsl
adc
shl
mov
out
dec
ja
out
jle
xor
stos
and
and
leave
pop
or
pop
cmpsb
pop
xchg
lea
mov
adc
mov
mov
cmpb
and
add
push
jl
push
shlb
add
pop
clc
xlat
loope
and
sbb
in
aam
jmp
jg
fildll
mov
jae
xor
dec
icebp
sbbb
imul
inc
aaa
jle
pop
cmp
jns
lea
fcomps
pop
cmp
dec
add
sbb
push
shll
dec
push
mov
imul
imul
movsb
lods
shld
sbb
fstpl
adc
inc
mov
lods
or
push
xchg
or
clc
or
lods
iret
es
mov
push
imul
fnsave
ja
add
inc
enter
ja
jo
imul
daa
inc
repz
mov
jno
test
jbe
xchg
sub
es
jp
fldenv
mov
mov
and
mov
fsubr
ret
xchg
jge
std
fldenv
sahf
adc
nop
mov
out
daa
dec
jae
cmp
xchg
jae
jb
fisubl
fs
in
fdivrs
sbb
mov
outsb
int3
pushf
insl
xor
das
test
sbb
mov
imul
xchg
push
in
push
or
lahf
inc
lcall
lods
jae
fcmovnu
mov
gs
pop
mov
loope
movsb
xchg
out
sbb
out
push
cmp
test
aaa
int
int
loopne
lcall
jmp
adc
mov
or
xor
sar
lock
or
pop
jp
mov
cmp
push
xor
jae
int
ss
cmp
pop
in
sbb
scas
dec
test
es
mov
inc
pop
add
mov
lods
aad
pop
jo
xchg
nop
push
lock
add
icebp
mov
mov
outsl
adc
add
daa
out
cmp
incl
dec
ljmp
ds
mov
insl
push
or
ja
pop
pop
mov
dec
rep
in
dec
sbbb
jl
mov
popf
mov
push
sti
adc
daa
inc
mov
inc
xor
and
push
fsubrp
ja
inc
repz
inc
imul
cltd
bnd
add
inc
jae
stos
insb
adc
and
das
add
xchg
xor
xchg
hlt
mov
shlb
imul
loopne
les
jg
and
or
test
ja
xor
mov
gs
jge
lret
jno
cmp
lods
inc
and
mov
icebp
jno
pop
call
xchg
push
and
std
outsb
xchg
inc
mov
inc
cwtl
popa
insb
lahf
ffreep
xchg
lcall
ds
sub
xlat
xchg
je
pop
test
mov
fiaddl
lock
sti
or
sub
or
adc
negb
fchs
cmpsl
xor
cwtl
repz
mov
sub
ds
test
daa
jns
imul
notb
mov
gs
orb
and
mov
pop
das
dec
jp
sub
mov
dec
sub
orl
push
dec
lods
stc
mov
mov
pop
sub
imul
mov
hlt
into
rorb
or
cmpsl
cmpsl
push
dec
mov
sub
or
mov
xor
mov
add
insl
imul
insb
jnp
and
pop
fs
xor
pusha
pop
in
cmpsl
iret
test
jge
and
mov
rorl
in
fsubrs
cmp
dec
addr16
sub
pusha
or
or
sti
jge
xchg
cltd
sub
adc
xchg
mov
pop
xchg
adc
jp
shll
xor
dec
test
dec
incl
add
pushf
push
mov
cmpsl
cmp
stos
cmpl
loopne
icebp
add
dec
xchg
cmp
push
fistpll
ja
lahf
iret
or
shl
sbb
imul
jbe
push
popa
cld
outsb
dec
adc
push
aad
jae
arpl
mov
jbe
adc
sub
in
adc
lods
loope
in
add
dec
lahf
lcall
pop
scas
sarb
jne
sbb
inc
push
add
lds
lds
and
mov
cmp
cmp
andl
push
push
ret
sti
fwait
jl
repz
aas
nop
xor
sbbb
data16
push
jns
sub
or
cmp
sbb
push
jbe
fisubrs
stos
and
cmp
data16
in
adc
sti
les
pop
add
or
cmpl
pop
repnz
daa
mov
pop
jnp
jnp
jle
xchg
xchg
push
outsl
ja
pop
or
sti
mov
xor
push
mov
push
inc
hlt
js
aas
jecxz
jl
out
notl
fmuls
push
jecxz
mov
ljmp
fcompl
aam
int3
xchg
xchg
xor
jle
stos
mov
loop
mov
in
jb
push
repz
pop
in
lret
or
add
cmp
add
mov
and
xchg
test
imul
cmp
fwait
inc
mov
vsubps
jecxz
push
pop
sbb
lret
dec
outsl
lds
dec
xor
fimull
xchg
lods
mov
hlt
nop
cmp
lods
popa
lods
int3
sbb
inc
scas
xor
mov
outsb
cmpsl
pop
push
in
pusha
in
cwtl
mov
cltd
in
dec
inc
lea
xchg
enter
cmp
gs
subb
xchg
adc
mov
stc
pop
outsl
out
sub
punpcklwd
sub
mov
mov
jl
sbb
movl
pusha
pop
std
xor
inc
cmpsl
inc
or
pop
mov
jnp
aam
xor
fildll
comiss
shll
test
bound
mov
adc
movsb
push
and
mov
pop
jb
shll
pop
and
and
gs
stc
mov
push
mov
or
xchg
cmpsl
ljmp
test
jg
scas
push
xor
push
sbb
cmp
mov
clc
and
aaa
mov
inc
notb
or
shrl
les
and
sub
push
imul
adc
adc
xchg
xchg
mov
xchg
inc
mov
lret
push
cltd
sub
pop
sub
cs
cltd
inc
repz
pusha
pop
jmp
loopne
iret
and
add
andb
mov
sub
fwait
lds
mov
adc
adc
inc
mov
mov
andb
ds
jmp
xor
adc
cli
xchg
call
mov
mov
fs
fwait
jo
xor
loop
xchg
mov
pop
sub
cmpl
out
int3
mov
test
loop
jbe
jae
icebp
es
and
mov
add
xchg
dec
gs
test
pop
xor
jmp
call
testb
fcomps
adc
push
mov
adc
jg
or
xor
aam
out
mov
aam
mov
adc
lret
jmp
test
xchg
and
fs
or
imul
pop
mov
pop
adc
mov
fistpll
mov
push
imul
cmpsb
cli
sarb
rolb
dec
mov
std
ret
lcall
sti
jecxz
push
xlat
push
cld
idivb
repnz
cld
inc
call
fldt
repnz
push
xchg
xor
iret
paddsb
adc
inc
dec
dec
fwait
sub
adc
cmc
mov
xchg
adc
jo
lcall
addr16
xchg
imul
cwtl
cmpl
sar
sahf
pop
mov
sbb
mov
paddw
lds
xor
pop
pop
jo
aad
jne
orl
rolb
mov
int3
push
inc
sub
fstl
sahf
jmp
jmp
jp,pt
icebp
add
mov
add
sbb
mov
mov
jbe
les
repz
jo
loop
mov
test
sbb
xor
lret
rcrl
dec
lret
and
mov
jmp
out
push
and
or
lods
iret
sbb
out
jecxz
and
movsb
add
xchg
jg
mov
aas
jns
ffree
push
adc
rolb
push
sbb
out
ljmp
ret
rol
jnp
mov
test
and
divb
dec
xor
pop
fwait
push
int3
out
enter
push
sarl
stc
ret
movsb
ret
jmp
out
push
scas
adc
fucom
roll
int3
jae
xchg
sub
cmp
pop
push
push
mov
sub
add
popl
lods
mov
or
adc
mov
inc
xchg
mov
mov
mov
dec
aas
sarl
and
mov
mov
xchg
mov
jbe
jge
repz
stos
test
aad
dec
mov
fisubs
mov
add
sbb
push
pop
push
xchg
and
xchg
into
mov
fnsave
sub
loopne
scas
sub
inc
jmp
mulps
ret
jne
fistpl
dec
adc
add
les
enter
sub
add
or
das
push
cmpb
xor
sub
jb
rcrb
mov
jbe
cmp
adc
mov
pop
bound
call
jmp
lret
pop
subb
jbe
sbb
push
xor
sub
icebp
mov
in
xchg
push
push
hlt
jp
movsb
fwait
xor
adc
arpl
lods
lcall
stos
movsb
cmpsb
mov
adcb
mov
sub
loope
jno
push
aad
inc
stc
push
daa
mov
clc
loopne
add
out
cmpb
inc
add
popf
dec
push
ret
inc
push
lret
jmp
mov
mov
sbb
int3
add
sar
push
sub
mov
fimuls
adc
push
jecxz
leave
outsl
mov
dec
shlb
jge,pn
iret
mov
enter
stos
adc
movsl
xchg
or
push
je
xor
or
into
popa
shll
xchg
push
xchg
dec
and
cmpb
push
jno
loopne
sbb
cs
fildll
bound
mov
inc
mov
xchg
in
sahf
xchg
imul
adcl
pop
popa
arpl
xor
sahf
mov
pop
and
jns,pn
mov
data16
jle
adc
pop
mov
push
and
xlat
mov
fstl
inc
in
bound
aaa
js
lods
jmp
cmpl
ret
call
xchg
sbb
mov
inc
je
inc
not
xchg
push
fldcw
jmp
sarl
xorb
pop
push
dec
add
dec
add
add
push
or
mov
mov
scas
mov
scas
test
dec
aaa
adc
dec
insl
ljmp
push
push
dec
xchg
mov
sbb
pusha
push
int3
outsb
add
fbstp
mov
ret
jmp
fsubrs
cmpsl
adc
frstor
push
fwait
popa
and
or
sbbb
xchg
or
lahf
push
xchg
dec
pop
addl
shrl
cwtl
jmp
rolb
cmp
push
lcall
mov
inc
outsl
cltd
push
xor
jecxz
lcall
pop
sub
and
jmp
mov
mov
inc
mov
repz
pop
sarb
fbld
inc
fucomp
pop
mov
and
push
mov
sbb
or
mov
popf
insb
xchg
mov
or
hlt
push
xlat
pop
and
daa
insb
or
xchg
dec
inc
jae
outsl
cwtl
int3
stc
or
mov
lret
push
mov
outsb
and
xchg
les
repz
sahf
call
and
xchg
mov
adc
sbb
pop
cmp
xor
xchg
push
popa
imul
add
inc
ret
arpl
rcrb
outsl
std
and
in
into
xlat
push
and
cs
adc
negb
movsb
or
fdivr
mov
mov
scas
sti
leave
push
sub
add
and
mov
jns
incl
aas
sub
loopne
and
or
mov
sub
fs
sub
xor
sub
bound
out
mov
jp
pushf
int3
xchg
sarl
push
inc
out
xchg
xchg
jmp
pop
test
pusha
mov
test
mov
dec
mov
int3
lret
es
mov
sub
sbb
xchg
scas
push
jb
xor
cmc
push
jb
xchg
nop
push
cmpsl
in
ror
sahf
mov
leave
loop
jo
clc
sahf
aas
rorb
mov
bound
loopne
mov
daa
sbb
or
scas
mov
add
iret
mul
sub
call
jmp
mov
push
out
mov
shr
popf
je
mov
sbb
imul
or
adc
jmp
int
cmpb
push
mov
dec
and
mov
adc
pushf
fcompl
pushf
arpl
or
pop
or
scas
xchg
shrl
mov
xchg
nop
fdivrl
cld
inc
pop
rol
and
lods
mov
jbe
mov
mov
mov
mov
retw
jl
cltd
pushf
inc
arpl
jae
mov
shll
in
jae
or
cltd
loop
gs
popf
shlb
or
and
and
stos
and
mov
iret
pop
lods
ret
lods
jp
ja
into
and
jae
cmpsb
push
clc
int
pushf
sub
xchg
stc
dec
ret
daa
stos
fucomi
mov
mov
dec
cli
inc
jmp
xor
sti
stos
mov
stc
pop
test
fadds
pop
sub
add
imul
lds
adc
lcall
in
in
cwtl
psrlq
jecxz
cmp
inc
hlt
xchg
clc
mov
sub
mov
lods
mov
add
sarb
pop
int
movsb
sub
into
test
xchg
add
lret
add
std
mov
adc
pop
cltd
daa
mov
adcb
jno
inc
pop
into
stos
int3
fidivrs
sub
inc
popf
sub
into
lock
popf
adc
lds
dec
jmp
fs
pop
xor
push
mov
arpl
mov
movsb
cld
add
xor
mov
ficoml
mov
sub
cmp
add
out
xchg
in
shll
mov
lcall
inc
sbb
pop
jl
imul
and
sbb
push
loope
add
ss
push
sbbb
lret
jmp
push
jmp
xchg
jle
insl
mov
in
call
out
ret
jno
stos
or
arpl
push
add
or
xorl
imul
add
sbb
hlt
out
and
sub
iret
pusha
sahf
xchg
test
fs
jmp
dec
loope
das
aam
jge
lahf
lds
push
jne
sbbl
inc
in
lret
jno
mov
in
les
sbb
or
sub
jae
pop
mov
js
and
xchg
rorb
xor
idivl
mov
or
xor
stos
cltd
in
stc
or
mov
xor
xor
lret
sub
fimull
push
fs
xchg
mov
dec
cmp
shrb
ljmp
push
inc
test
mov
insb
jg
pushf
dec
outsb
sub
mov
icebp
xor
and
sbb
push
pop
cmpsb
leave
test
and
or
mov
out
mov
ja
mov
mov
xchg
fdiv
dec
add
rolb
sub
xor
lock
ljmp
mov
jo
or
lcall
subb
fbld
outsb
fildl
xchg
mov
loop
pop
sbb
mov
pop
jo
jecxz
ret
mov
jle
rorl
out
ficomps
adc
mov
push
cmp
arpl
popf
ret
push
pop
ret
mov
adc
jle
cmp
out
xor
mov
fidivrs
iret
stc
jno
std
loop
inc
push
xchg
fdivs
leave
repnz
mov
aad
xchg
xlat
jne
inc
mov
insl
mov
daa
pop
jbe
jmp
and
ret
movsl
push
dec
dec
addr16
jmp
cmpsl
call
and
es
push
gs
adc
mov
sbb
ljmp
mov
jne
xchg
roll
insb
dec
push
xchg
cmpsl
addr16
test
sub
and
les
mov
push
movsb
dec
adc
pop
inc
test
xchg
push
dec
nop
mov
mov
push
adc
sub
push
sbb
jo
pop
addr16
popf
cmpsl
or
out
xchg
pushf
out
jecxz
pop
jns
sti
xchg
or
pop
arpl
cwtl
push
mov
arpl
cwtl
inc
insl
hlt
fsubs
out
in
clc
lods
sbb
rcll
fistpll
mov
loope
ja
rcll
in
int
fisubl
adc
xor
jmp
cmp
xor
and
data16
repz
push
add
std
lret
shrl
jg
lds
bound
pop
push
xor
ret
stos
xchg
aas
les
fidivrl
repnz
xchg
jae
mov
push
inc
dec
imul
aam
add
mov
push
in
jmp
push
cmp
pusha
cmpsl
mov
jmp
cmp
cmp
mov
stc
dec
ret
les
mov
xor
call
jg
mov
imul
jbe
out
jbe
in
testl
push
je
inc
rclb
lcall
xchg
xor
clc
fcoml
loope
loope
shlb
jg
shll
mov
cltd
sarl
mov
addr16
daa
mov
dec
mov
lcall
or
cmp
inc
xlat
cmpsl
pushf
push
push
cmpsb
jbe
out
xchg
repnz
lret
dec
jmp
loope
and
mov
ficompl
add
dec
push
jae
popa
adc
outsb
jae
aam
clc
xor
fstp
in
dec
mov
clc
ljmp
xchg
cmp
cmp
lods
test
inc
sbb
gs
push
mov
jge
xor
fxch
dec
fsubl
out
setbe
shlb
xchg
call
inc
jp
mov
pop
les
xchg
sbb
push
mov
xor
mov
push
outsb
jne
loope
xchg
sbb
xchg
mov
int3
push
dec
mov
pushf
xchg
jnp
sub
outsb
movsl
mov
dec
jl
cmp
xchg
xor
cmp
inc
cmp
insb
cmc
add
sub
fiaddl
lea
hlt
xchg
cmc
in
repz
shl
jae
mov
loop
push
nop
xchg
xchg
lcall
fcom
cli
push
mov
fisubrs
lcall
and
push
sub
stos
inc
popa
cmp
cmp
mov
data16
es
mov
addr16
sarb
ficomps
imul
push
xor
fsubs
jmp
iret
lret
mov
dec
in
or
cmp
add
repz
data16
xor
adc
jae
mov
jae
mov
xchg
dec
fsub
repnz
push
clc
lahf
xor
lods
movsb
cltd
lret
sub
dec
les
mov
dec
inc
cmp
jg
push
push
jns
cmp
data16
xchg
xorl
cmpsl
mov
pop
ret
mov
sarl
js
or
jle
jno
push
arpl
mov
cwtl
shrb
shll
rcll
pop
fimuls
pusha
mov
dec
notb
sbb
ja
lock
xor
cmpsl
pop
mov
cmp
push
jnp
fidivrl
cmp
andl
cmp
loopne
dec
sbbl
mov
xor
mov
insl
add
sub
ds
call
in
add
mov
fists
pop
mov
fstpt
xchg
sbb
fimuls
pop
pop
aaa
and
jno
int
jae
adc
dec
into
or
inc
pop
pop
cmp
les
push
nop
aad
out
push
mov
and
loope
xchg
push
push
sub
repz
negl
imul
mov
cmpsl
push
pusha
movsb
imul
daa
cmpsl
gs
loop
jb
fidivs
pop
inc
ljmp
jo
add
loop
imul
nop
nop
xor
mov
loopne
sub
push
adc
mov
push
les
adc
lahf
testl
cmp
out
xlat
pop
int3
push
out
fmulp
xor
das
fdiv
fs
fwait
popf
inc
xlat
insb
dec
dec
pop
inc
test
jne
hlt
xor
mov
out
sti
test
sub
outsb
fstpl
cmc
dec
dec
push
imul
lods
movsl
lods
xlat
mov
lods
test
xor
mov
test
fidivrs
mov
xor
jmp
call
and
out
nop
inc
hlt
pop
cmp
jo
sbb
aad
into
jae
lret
and
adc
orb
test
scas
inc
xor
cmp
lock
jp
push
std
rcl
dec
adc
push
mov
int
dec
imul
addr16
inc
addr16
jle
pop
mov
sub
pop
imul
lcall
xchg
mov
popa
loopne
push
xchg
movsl
mov
cltd
mov
fldl
xchg
mov
in
cmp
cld
cmp
adc
loop
push
dec
inc
insb
sahf
ss
mov
orl
movsl
or
jno
jns
jnp
push
scas
xchg
xchg
decb
xor
fisubl
jo
scas
or
or
mov
insl
enter
mov
cltd
stc
ret
push
add
dec
enter
imul
jge
jl
sbb
das
adc
sbb
shrb
cmp
pop
pop
test
stos
xor
repz
mov
test
aam
fstps
pop
and
iret
pop
pop
sub
xchg
push
insb
adc
std
bound
or
mov
mov
mov
sub
dec
or
lods
bound
mov
lea
dec
jg
cmp
cmpsl
cmp
jmp
lret
dec
push
gs
or
sahf
push
testl
add
stos
or
jmp
ljmp
lds
or
sbb
mov
push
dec
fnstsw
pusha
psrlw
jmp
jge
lods
dec
add
insl
test
mov
loopne
mov
faddl
jae
lahf
pop
out
push
call
or
hlt
add
loope
ret
xchg
dec
jb
les
sbb
fisubrl
out
push
out
clc
sbb
arpl
lock
rcrb
and
dec
jae
pop
inc
add
into
test
jno
popa
xor
xchg
push
mov
movsb
insb
outsb
xor
dec
call
mov
fmulp
je
cmc
aaa
add
xchg
test
loope
mov
jno
daa
push
mov
loop
test
insl
inc
iret
fcoml
jp
inc
popf
test
rcl
xor
sti
cmpsb
add
mov
cltd
daa
jnp
mov
loope
je
stos
push
lahf
nop
push
lahf
dec
out
inc
jp
outsb
test
test
sbb
or
psrlw
sbb
cli
ss
or
enter
or
push
mov
ret
out
insb
jb
out
xchg
addr16
push
mulb
xchg
cmp
push
mov
jbe
shll
jp
pop
lret
pushf
inc
jmp
mov
jb
lcall
daa
jmp
or
dec
imul
mul
and
cmpsb
mov
mov
jle
adc
loop
pop
fisttps
xlat
imul
into
ffreep
ret
add
jbe
sti
in
fcmove
out
or
inc
push
xor
mov
adc
scas
mov
cs
pop
and
jb
leave
dec
inc
adc
push
jo
xor
adc
xchg
dec
xchg
lcall
outsl
ret
imul
daa
or
jb
insl
fbstp
xchg
xchg
or
and
add
loop
sti
inc
lds
dec
popf
or
pop
mov
sub
inc
in
jne
pop
inc
sbb
sahf
rcl
dec
and
sbb
mov
jge
jmp
mov
movsb
mov
imul
clc
jae
lds
sub
sub
mov
xor
pushf
lcall
push
dec
dec
xor
pusha
jns
jecxz
lea
loop
repnz
outsb
in
lds
testl
sub
mov
jb
outsb
jbe
pop
shrb
imul
cmp
sbb
xrelease
xor
sti
sbb
cmp
adc
cwtl
cmp
dec
or
xor
fbstp
pop
cmp
pop
add
add
push
xchg
dec
aaa
xor
into
cmpsl
mov
aad
lcall
fcompl
imul
das
cmp
in
int
inc
pop
pusha
add
out
add
push
out
icebp
dec
cli
pop
aaa
aas
xchg
jg
jnp
add
jne
push
mov
push
ss
xlat
roll
jno
pop
repz
insl
or
dec
mov
cltd
popa
mov
pushl
aas
sti
add
xchg
xor
test
stc
data16
xchg
arpl
repz
push
bound
xchg
pop
dec
dec
mov
fnstenv
fwait
xor
fisttpl
inc
push
jo
aas
xchg
sub
xor
cs
repz
loopne
mov
push
fwait
ds
fmuls
adc
mov
push
sub
iret
mov
dec
dec
jecxz
pop
or
adc
pop
or
dec
ds
sarl
bound
jge
mov
dec
mov
xchg
cmp
shl
ja
out
inc
sbb
and
mov
adc
push
ljmp
add
mov
push
dec
shl
leave
rcrl
sbb
cwtl
sbb
adc
dec
lea
testb
mov
push
push
jg
lahf
mov
jg
add
pusha
inc
lcall
dec
movsl
pop
es
das
ret
sub
pop
ficomps
mov
jae
inc
test
scas
std
cmpsb
mov
popl
mov
movsl
int
cmc
sbb
xchg
jmp
inc
dec
and
push
push
pop
and
push
lret
cmp
push
in
lret
sbb
loope
xchg
lret
jne
lock
sub
ljmp
inc
cmpsl
cli
pushf
cmp
cli
inc
insl
pop
icebp
iret
add
xchg
mov
ds
xor
and
push
cmpsl
call
fcoml
scas
xchg
shlb
xor
testb
pop
stc
mov
xor
pop
xchg
jno
xor
shlb
sbb
int3
mov
loope
sbb
cmp
daa
jae
outsb
daa
jae
cs
and
sar
push
add
sarb
jo
arpl
jp
mov
imul
subb
cmpsb
cmp
cmp
mov
rol
fnsave
mov
adc
jmp
gs
scas
les
mov
xlat
fsubr
mov
dec
push
das
les
lods
popf
repnz
orb
jmp
sbb
insl
xor
jb
lret
mov
faddp
shlb
loope
in
pop
sub
hlt
mov
mov
mov
pop
xchg
adc
jae
xor
or
hlt
fists
cmp
xor
jl
add
mov
xlat
cmpsb
sti
cmp
mov
inc
xchg
fdivs
add
fcompl
jge
scas
push
adc
push
or
in
add
dec
lahf
xlat
test
test
lock
call
mov
xchg
inc
das
cwtl
xchg
rolb
into
lahf
icebp
mov
dec
mov
imul
scas
push
in
xchg
sub
int
jnp
xchg
mov
adc
cmpl
push
mov
jbe
jl
inc
ja
imul
popf
cmp
lcall
outsb
sbb
sub
loopne
cmp
cmp
call
lds
call
xor
rcrl
adc
sub
dec
cld
insl
call
popf
insb
push
imul
ja
into
dec
mov
loopne
push
mov
cli
mov
and
scas
flds
xchg
xor
push
out
pop
cmp
insb
mov
sub
sub
sub
push
rol
jns
mov
sahf
cmp
push
scas
push
sub
jns
push
lods
mov
mov
xchg
or
adc
push
push
xchg
shlb
iret
int
repnz
imul
cmpsb
and
gs
xchg
and
inc
and
mov
jnp
inc
movsb
xor
cwtl
pop
aam
add
jnp
jp
add
push
pop
mov
pop
pop
jne
push
ret
mov
clc
loopne
int
mov
jecxz
push
idiv
dec
sbb
xorps
sti
fmul
in
fdivrs
mov
dec
es
test
xor
mov
jb
jns
mov
test
sub
sub
ljmp
jg
fs
popa
mov
dec
test
scas
pop
stos
arpl
and
movsb
incl
sbb
imul
sub
dec
shrb
test
es
call
xlat
hlt
mov
mov
jmp
test
mov
mov
out
xor
dec
les
or
rcrb
out
testl
notb
test
dec
xor
adc
cmc
nop
cmp
jno
mov
dec
or
inc
mov
push
dec
mov
lds
add
mov
xrelease
xchg
adc
insl
and
cmc
lock
dec
mov
nop
or
pop
adc
idivl
scas
dec
data16
stc
xor
cmpb
bound
ret
aaa
pop
cld
in
push
pop
int3
sub
and
rorb
lahf
scas
cwtl
sbb
mov
fs
mov
add
into
outsl
addr16
xchg
cmp
adcb
sub
or
xor
inc
adcl
popa
aaa
sbb
pushf
out
push
lods
adc
testl
fmul
notb
test
sub
shll
xchg
xchg
pop
loop
je
xor
mov
lds
stc
push
stos
jecxz
int3
dec
fstpl
mov
cmp
repz
jg
push
xchg
mov
push
xor
ss
loop
or
aas
andl
push
pusha
sbb
cmpsb
mov
outsb
and
inc
xchg
cmp
mov
xchg
movsb
mov
dec
sbb
add
pushf
pusha
nop
imul
xchg
push
psrlw
dec
and
stc
in
test
mov
jmp
pop
xchg
in
ret
mov
loope
les
sub
out
sti
mov
lahf
mov
cmp
jnp
mov
fcoms
lea
adc
mov
ss
lret
add
and
inc
push
imul
int3
insb
inc
jns
push
mov
push
aas
cmc
sbb
add
mov
add
shrb
insb
jae
jge
cmpsb
enter
add
mov
sti
arpl
nop
mov
ss
xchg
lds
inc
loope
leave
mov
sbb
pop
jmp
ds
mov
stc
fwait
sbb
mov
xchg
in
sti
out
xchg
xor
cmpsb
bound
mov
lods
jl
rol
fdivrl
fwait
inc
pusha
in
add
inc
movsb
adc
adc
jo
leave
hlt
sub
cmpsl
stc
sbb
sbb
mov
fisttpl
adc
xor
jns
into
fisttpll
leave
pop
xchg
lret
xchg
pop
add
lahf
pop
cld
mov
lahf
fsubr
adc
lock
imul
push
div
xchg
push
pop
in
call
push
push
jecxz
add
jno
or
adc
xchg
clc
dec
js
and
js
shr
outsl
fidivrl
inc
les
dec
pop
test
cs
xchg
ret
in
mov
lret
int3
adc
repz
xchg
mov
lds
mov
repz
mov
dec
sti
popf
cld
xchg
xchg
es
push
and
mov
jmp
bound
or
inc
in
rol
mov
test
inc
jne
jae
push
scas
jo
jmp
mov
cmp
jno
adcb
out
add
xor
inc
jmp
insl
xchg
out
jle
adc
jecxz
dec
mov
and
push
jae
ljmp
bound
or
jo
icebp
cld
and
stos
lods
dec
andl
or
in
out
jg
imul
pusha
or
out
jbe
add
ret
rcll
cwtl
ret
adc
dec
ret
jp
push
mov
mov
dec
arpl
pusha
test
in
filds
mov
jo
xor
jnp
insl
iret
loopne
mov
fadds
sahf
adc
xor
or
mov
and
test
xchg
addl
xchg
ja,pt
cwtl
cmp
push
mov
add
push
mov
adc
mov
adc
iret
mov
cmp
cmc
mov
adcb
test
lods
mov
in
lret
pop
das
or
mov
lds
cs
and
outsl
lret
ret
push
sbb
dec
push
dec
js
pop
fs
sbb
insb
mov
xor
movsb
out
and
dec
mov
xor
lret
cmp
scas
mov
sub
push
adc
mov
xchg
in
mov
out
mov
je
inc
mov
and
dec
outsl
jno
decl
xchg
mov
into
mov
cld
inc
jp
inc
mov
lret
cmp
jae
in
pop
lods
call
mov
add
sbb
adc
repnz
pop
mov
cmpsb
repz
shll
or
and
xchg
push
shrb
sbb
hlt
adc
jno
rcl
mov
je
dec
inc
imul
inc
xor
lods
adc
sti
sbb
jne
hlt
xchg
rcl
sbb
cmpl
shlb
es
xchg
in
push
cmp
movsb
or
inc
mov
imul
adc
repnz
sbb
pushf
push
cmp
dec
fidivrl
xchg
rorl
gs
sbb
cltd
lcall
inc
xchg
enter
jne
lods
mov
fisttpll
fyl2xp1
sub
push
adc
jbe
lret
pslld
pop
out
adc
idivl
mov
sbb
add
mov
lcall
cmp
pushf
js
xchg
add
out
jge
sub
pop
aaa
orl
cmpl
shrb
mov
mov
pop
jecxz
std
dec
fstp
and
sbb
movsb
lahf
pop
shll
pushf
call
bound
mov
arpl
jge
and
mov
push
fs
clc
lods
lcall
loop
jp
xchg
xchg
and
push
add
repz
or
mov
sub
cmp
popf
jo
fisttps
mov
in
bound
dec
push
push
inc
xchg
je
mov
jne
jbe
push
lea
int3
mov
mov
lock
jmp
dec
add
and
fisubl
sub
scas
aaa
divl
jnp
fsubl
push
cmp
mov
dec
cmp
movsb
lret
imul
imul
out
xchg
xor
iret
test
jl
dec
sbb
std
test
add
mov
stos
or
test
xchg
call
adc
into
loopne
xchg
xor
cli
pop
inc
addr16
push
scas
sub
dec
cli
loop
inc
adc
clc
dec
lahf
mov
sarb
xor
dec
and
xor
sub
aaa
xchg
mov
stos
push
idiv
lds
xor
adc
dec
repz
je
xor
stos
mov
fisttpl
mov
or
mov
insl
loope
outsl
sub
imul
xor
or
xchg
les
andb
mov
push
testb
js
pop
adc
fnstcw
mov
sub
jle
mov
jo
or
pop
scas
pop
jnp
ss
adc
in
fwait
jne
add
add
lods
mov
dec
adc
out
cmp
les
ret
popf
outsb
in
inc
loope
mov
fs
xor
adc
push
inc
popa
dec
cmp
push
xor
jns
stos
adc
push
insb
push
mov
push
pop
inc
xchg
mov
add
push
cmp
aas
ja
aad
insb
jae
cmp
and
sbb
loop
sahf
stc
insl
lcall
push
push
nop
cmp
and
jle
dec
enter
lock
sub
ror
xchg
adcb
and
mov
mov
push
mov
jnp
lods
ss
ret
mov
clc
movsb
xchg
popf
pop
nopl
fistpll
out
int
jp
loop
jle
scas
pushf
inc
movsl
mov
pop
xchg
xor
addr16
lea
inc
mov
in
sbb
ljmp
dec
xchg
lods
jo
out
cmpsl
add
les
inc
cmp
cli
cs
rolb
jl
gs
test
aaa
mov
jle
or
fucomp
in
add
jae
fidivrl
test
in
mov
popa
jnp
xor
cmp
cmp
inc
out
imul
inc
pop
adc
out
dec
sarl
mov
addr16
sbb
cmp
roll
stos
push
popf
inc
jae
jb
aas
and
enter
cmpsb
bound
lds
push
cmpsl
jae
pop
sbb
inc
sub
stos
cmp
mov
cltd
push
dec
mov
xor
xor
xor
test
xor
xlat
sbbb
scas
hlt
shll
cmp
mov
pop
lahf
and
mov
adc
push
test
xor
mov
in
daa
repz
roll
dec
shrb
push
jno
cmp
inc
ss
jbe
mov
lods
jmp
gs
stos
xor
push
and
dec
repnz
or
addr16
dec
push
lock
jne
cmp
add
sub
pop
repz
mov
imul
adc
and
inc
cmp
orl
sbb
mov
mov
loope
pop
jnp
stos
popf
pop
pusha
mov
mov
rcrl
or
in
mov
in
xchg
fsubl
ret
mov
xor
mov
mov
stos
dec
adc
pop
add
cmp
jo
cmp
es
mov
in
movsl
push
in
fs
js
ja
test
in
mov
cmc
out
push
xchg
stos
mov
icebp
mov
imul
loopne
mov
sub
or
cmp
push
mov
sbb
adc
dec
shll
push
pop
not
xor
movsb
jne
pop
xchg
out
dec
and
and
or
lock
mov
out
sub
data16
insl
xor
or
fs
lret
imul
sub
aaa
cs
stc
lock
or
add
lcall
test
xor
mov
cmp
sbb
mov
test
mov
sub
pushl
dec
cmp
jl
test
loope
sub
js
call
cmp
arpl
rcr
cmp
les
test
aad
orb
sub
xor
adc
mov
fcomp
not
add
cmp
jp
nop
mov
repnz
xor
mov
add
xor
inc
mov
jbe
mov
push
sub
jecxz
push
push
pushf
sub
fdivl
xor
mov
xchg
xchg
xor
stos
lahf
mull
fdivr
roll
cmpsb
cmpl
scas
xor
daa
rcrl
mov
sbbb
ss
movsb
dec
ret
inc
out
mov
aas
cmc
and
xchg
add
loop
or
mov
sub
cli
adc
push
lret
mov
jp
mov
jl
add
in
pushf
mov
lods
or
lret
out
cmp
adcb
sti
ljmp
and
and
insl
iret
das
js
lock
add
jne
sbbl
outsb
dec
sti
push
add
pop
in
int
in
pop
mov
stos
fs
push
jo
sbb
push
out
jmp
gs
and
cwtl
pop
jns
fs
and
pop
mov
lret
out
jne
cmp
xchg
gs
sub
dec
cmp
bound
mov
xchg
fbstp
or
icebp
stos
adc
push
or
adc
int
scas
jne
fcomps
nop
push
test
shrb
push
mov
and
or
ljmp
shr
mov
fnstsw
add
adc
dec
loop
sbb
repz
cs
jg
lahf
jle
push
and
add
xor
fisubl
pop
or
pushf
imul
mov
or
in
stc
push
cltd
pop
ljmp
sub
xor
je
mov
test
hlt
loop
pop
mov
imul
scas
or
xchg
jno
adc
add
test
jmp
in
jl
popf
not
jbe
adc
sub
add
pop
lret
jmp
xor
xor
loopne
incb
inc
xchg
add
into
or
sbb
insl
pop
stos
adc
dec
cmpb
je
inc
mul
fisubrs
lret
lret
jle
fsubl
adc
sub
clc
stc
aas
arpl
sbb
popl
adc
shll
xor
shlb
and
in
mov
hlt
and
pop
movsl
pop
and
adc
jg
je
js
sbb
dec
jno
loop
test
inc
lods
bound
and
lods
mov
dec
adc
sbb
outsl
insl
pop
dec
adc
mov
enter
push
xor
clc
push
fmul
jecxz
jno
ljmp
and
icebp
fdivrp
out
test
fisubl
bound
movsb
jae
adc
pop
nop
fildll
jecxz
pop
aad
call
push
insb
and
mov
pop
jg
ljmp
lcall
sbb
pop
xchg
sarb
jb
pop
jb
inc
inc
shll
cld
xchg
pop
lcall
ret
inc
mov
inc
and
push
loopne
pop
mov
or
ret
lds
and
dec
sub
sbb
pop
sbbl
daa
mov
aam
rsm
xchg
mov
cmc
ja
cmpb
mov
cmp
pop
in
pop
xchg
cmp
cli
mov
add
pop
inc
add
xlat
out
sbb
push
and
and
rcr
xor
sub
sti
push
clc
leave
mov
sub
shll
inc
sub
jbe
stos
cmpsl
add
sub
test
in
sbb
jns
push
inc
fisttpll
cmp
fucomip
fidivrs
in
addl
cmpsl
sbb
imul
dec
mov
push
les
out
xchg
negb
cltd
dec
push
mulb
sbb
sbb
aaa
cli
repz
rcl
push
add
sti
rolb
mov
push
adc
aas
jnp
jg
stos
inc
addr16
sub
insb
mov
mov
sahf
mov
mov
xor
xchg
add
adc
into
fstpt
xor
int
xchg
jbe
into
sbb
cmc
mov
cmp
fidivrl
out
jmp
out
push
rolb
add
and
pop
and
testb
mov
packsswb
nop
mov
outsb
jae
popa
loope
enter
inc
push
test
xor
inc
fidivs
mov
push
sahf
add
pop
enter
pop
nop
jo
cmp
insb
arpl
push
pop
mov
and
lret
and
mov
xchg
test
mov
mov
adc
aam
xor
fiaddl
pop
mov
cmp
mov
sbb
fbstp
push
aad
lret
call
mov
mov
mov
sarl
and
fwait
xchg
lea
sub
cmp
push
mov
mov
cmp
push
xchg
nop
in
cwtl
nop
cmpsl
addr16
data16
dec
mov
leave
lods
add
les
inc
js
mov
and
je
rcl
and
add
cmp
shr
push
loope
jle
movzbl
xor
aad
xchg
js
repz
outsb
fwait
out
bound
sbb
xchg
int3
push
aad
dec
xor
adc
push
jmp
push
pop
mov
lret
adc
inc
push
out
fimuls
cmpsl
xor
mov
xchg
push
sbb
ret
mov
dec
inc
xchg
xor
xchg
add
enter
cwtl
dec
inc
pop
jp
clc
mov
xchg
mov
xchg
divb
add
outsb
push
es
pop
call
aad
or
fs
push
and
xchg
add
xor
mov
xchg
push
push
iret
mov
or
sub
test
push
adc
out
in
xchg
jmp
repnz
push
add
lcall
cmp
pusha
cwtl
jg
sub
add
stos
sub
jne
ljmp
mov
dec
inc
pop
mov
out
jle
clc
add
inc
test
cmp
xor
out
push
mov
xchg
lcall
popa
adc
add
mov
mov
and
add
and
test
or
add
sbb
add
je
xor
icebp
pop
mov
aas
sbb
mov
jle
faddl
mov
rorb
cs
mov
dec
jle
jns
add
fcmovb
jbe
xlat
ja
inc
inc
orl
dec
cmp
mov
popf
inc
jge
mov
sbb
lea
jno
sub
loopne
cmp
std
xchg
mov
sbb
jae
insl
push
add
mov
out
out
les
inc
movsb
lahf
mov
outsb
push
pusha
leave
dec
fwait
mov
xlat
pand
mov
dec
cmp
adc
out
pop
dec
sbb
pop
hlt
inc
insl
fimull
dec
cmp
pusha
mov
cmp
jmp
in
popa
or
mov
aaa
adc
lret
jae
mov
dec
mov
leave
dec
shrb
jbe
xchg
mov
addr16
insb
pushf
ss
jb
jecxz
cltd
or
fsubrs
in
lea
mov
arpl
movsl
outsl
adcl
fwait
mov
inc
in
in
mov
sbb
mov
les
fcoml
pusha
lock
pop
sub
inc
push
xchg
dec
jno
mov
jmp
popf
outsl
iret
xchg
cmpsb
lods
int
jg
rorb
xor
pop
fadds
nop
test
movsl
cmp
push
mov
das
mov
or
mov
or
add
sarb
fidivl
push
je
mov
or
clc
pop
fdivs
xorl
mov
fisttpll
jne
sbb
inc
shrb
or
outsl
dec
imul
imul
add
mov
push
ds
xor
out
pop
imul
out
mov
add
ret
repnz
jmp
cmp
fildll
mov
push
push
ja
sub
mov
dec
dec
dec
out
andl
xor
es
push
xchg
and
push
mov
or
xchg
std
cmp
mov
push
in
sub
cmp
fcomp
clc
add
and
leave
stc
out
movsl
inc
dec
xchg
incl
push
pop
scas
adc
loopne
icebp
repz
add
mov
push
push
sub
lods
mov
adc
inc
jno
push
lret
push
decb
stc
push
sub
push
cwtl
jae
sbb
ds
pop
adc
mov
int
test
cld
loope
mov
jns
add
rcl
clc
push
icebp
aas
push
mov
xor
fwait
mov
xchg
sub
push
subb
popf
vaesdeclast
dec
cmp
je
cmp
ja
shll
mov
mov
adc
nop
add
test
push
lea
cmp
mov
mov
add
movsb
stc
aas
cmpsl
mov
das
or
jp
adc
mov
xchg
in
pop
dec
dec
pop
inc
or
adc
adc
inc
xor
imul
push
xor
cmp
stos
xchg
cli
loopne
dec
dec
sub
lahf
movsl
adc
dec
adc
mov
cmp
popf
pushf
adc
popa
hlt
mov
std
addr16
outsb
scas
daa
outsl
mov
imul
popf
jno
inc
mov
push
cmp
sbb
into
sbb
ss
inc
lret
insb
movzbl
push
loop
cmp
mov
pop
mov
inc
rorb
shll
rcrb
dec
jne
ror
cltd
mov
mov
subb
xchg
into
je
sbb
add
mov
mov
inc
cld
ljmp
je
mov
push
ljmp
jns
leave
jmp
mov
and
xlat
mov
mov
cld
push
add
sub
divl
pusha
xor
xor
cmp
frstpm(287
in
and
jb
xor
add
popa
cmpsb
mov
push
push
jne
rclb
push
sbb
mov
lret
jg
std
les
push
push
aaa
cmpsb
push
fs
jge
cmp
and
ret
sar
jnp
jecxz
dec
xlat
test
loope
dec
gs
lock
xchg
or
scas
adc
pop
sbb
scas
dec
stc
lock
inc
xchg
or
daa
adc
cmp
adc
push
inc
mov
add
inc
cltd
lods
fnstcw
mov
ljmp
and
addr16
lahf
icebp
jne
cs
xor
push
mov
cli
mov
ret
fisubs
getsec
jo
imul
jg
std
add
inc
push
xor
pop
popa
pop
mov
inc
cmc
shlb
cmpl
and
mov
cs
into
cmp
inc
cmp
inc
psubw
pop
dec
es
push
fwait
or
enter
xor
rorl
wbinvd
scas
pushf
push
mov
fiadds
push
xor
fldcw
jge
and
jl
mov
lahf
ret
int
push
xor
popf
jmp
pop
fcoms
insl
movl
sti
sahf
bound
fsin
xchg
dec
aas
and
aaa
popf
mov
push
fmuls
inc
mov
add
pop
push
dec
adc
xchg
imul
mov
and
out
mov
adc
cmpsl
scas
sbbb
xchg
outsb
or
arpl
out
mov
dec
icebp
jge
push
and
mov
mov
adc
mov
add
stos
lds
xchg
jns
mov
inc
mov
fsub
inc
call
icebp
testb
mov
pop
mov
add
xchg
repz
mov
movsl
ja
add
rorl
pushf
aas
scas
cmpsb
jo
enter
jae
je
fcmovnu
shll
pop
leave
enter
into
mov
cmp
out
xor
insl
imul
fucomip
bound
pusha
pop
ss
out
adc
xor
pop
dec
pop
loope
flds
fisubrl
mov
arpl
lret
clc
dec
mov
cmpsb
in
clc
add
out
daa
sub
lods
gs
lcall
sbb
or
dec
in
xor
xorb
jbe
push
popa
inc
mov
xchg
mov
imul
pop
arpl
jno
jmp
cltd
sub
popa
das
test
xor
cmpsb
cmp
jns
mov
mov
cmpsb
leave
xchg
mov
mov
loopne
lahf
adc
psubsb
mov
nop
mov
xor
mov
add
pop
in
repz
bound
fs
push
and
daa
fsubrs
in
loopne
xchg
add
mov
push
push
dec
repz
mov
xchg
aas
push
pop
dec
lcall
mov
je
adc
mov
xchg
stos
aaa
dec
xor
xchg
mov
inc
sub
frstor
lcall
cwtl
insl
ss
jnp
movsb
les
subb
stos
pop
add
xchg
imul
sub
adc
fists
adc
mov
arpl
dec
mov
fadds
lret
les
cmp
push
xlat
lea
outsl
or
les
adc
cmp
mov
push
and
xor
jo
test
mov
mov
dec
fs
push
fadds
jnp
pop
dec
jge
fwait
or
pop
ret
mov
loop
push
add
sahf
fwait
jle
mov
addr16
and
pop
and
dec
adc
negl
cltd
dec
sub
dec
es
push
inc
jo
ficoms
cs
sbb
pop
pop
lods
xchg
pushf
aaa
sub
fnstenv
lds
xor
dec
and
enter
inc
adc
mov
aad
loope
gs
xchg
clc
movsl
push
push
das
cli
test
and
xor
push
jl
xor
sbbb
cmpsl
adc
push
xlat
movl
ljmp
inc
out
sub
int3
and
inc
daa
shll
shr
cld
mov
stos
xchg
cld
xor
pop
push
sti
js
je
xor
sub
insb
addr16
inc
outsb
sub
cs
aam
in
dec
mov
ret
pop
aam
aaa
stos
cmp
hlt
xor
pop
cmp
movsb
sahf
mov
jecxz
leave
sti
bnd
sbb
xchg
cmc
outsl
dec
lcall
arpl
iret
pop
repnz
cmp
loop
sahf
jns
inc
addr16
mov
gs
mov
lock
cltd
inc
pop
je
js
lods
fistps
sub
or
pop
inc
sub
inc
cmp
jno
scas
push
and
sarl
lock
sti
and
ljmp
xor
ja
dec
mov
sub
jmp
mov
sbbl
popf
xor
jle
daa
shlb
xchg
pop
lods
inc
jecxz
rcrl
out
xlat
out
pop
movd
loop
adc
pop
jbe
mov
pushf
aad
xchg
push
sub
adc
xor
cmpb
pop
lods
cltd
stos
je
jbe
mov
stos
int3
xor
faddl
mov
std
aam
test
cmpb
roll
lods
cmpsl
dec
mov
loope
aad
sbb
insl
fists
or
adc
jmp
add
imul
sbb
inc
mov
mov
and
test
cmp
jge
dec
jnp
adc
out
mov
lret
mov
cs
push
pushf
adc
ljmp
adcb
fsts
adcb
lret
mov
icebp
xor
sub
add
sub
testb
pop
cmp
shl
enter
push
adc
sbb
mov
iret
insl
xor
in
add
mov
es
xchg
push
mov
mov
or
mov
in
add
xchg
mov
int
orl
fstl
sub
lahf
js
in
test
test
popf
shl
cmp
std
fdivl
scas
repz
mov
aas
and
jg
daa
pop
ss
xorb
sub
fadd
sarb
insl
das
adc
sbb
test
fildl
jno
les
jnp
adc
pop
repz
mov
xor
fcoml
stos
sub
cmc
push
ret
dec
shl
test
sbb
lods
icebp
and
insb
xor
notl
push
std
pop
xor
in
inc
mov
pop
test
aas
repz
stc
call
in
add
bound
cmp
cs
mov
in
xchg
loopne
lahf
dec
movsl
ja
fiadds
orl
ljmp
pop
or
or
fs
mov
lahf
lods
jne
gs
ret
jl
aaa
psubq
pop
clc
repnz
insb
add
notl
fnstenv
int3
xchg
cmp
jnp
mov
push
in
mov
mov
mov
mov
or
daa
cmp
daa
bound
pop
xchg
mov
outsl
mov
pop
jge
jmp
add
xor
cmp
mov
cmp
in
adc
and
jns
xchg
push
add
clc
mov
jle
sbb
add
inc
int3
fistps
inc
xchg
mov
inc
cmp
test
iret
add
cwtl
jae
xchg
pusha
iret
movsb
fldt
inc
xor
test
nop
push
dec
shlb
cmpsb
rcl
dec
dec
xchg
xchg
daa
out
and
sbb
out
rorb
addl
sti
loopne
aas
mov
inc
jmp
les
adc
lahf
movsl
test
jnp
int3
push
stos
pop
lcall
lret
out
rorb
outsb
jl
dec
jae
jo
inc
cmpl
out
and
xor
loopne
fadd
sbb
sub
pop
stos
jge
sbb
push
push
jp
ja
xor
mov
pop
mov
cmpsl
test
lods
fcompl
out
loope
repz
ss
stc
adc
cmp
shrl
pmullw
nop
sub
push
into
sti
inc
cmpsb
iret
sub
jnp
mov
jns
scas
lods
testb
test
hlt
or
mov
in
inc
lcall
sub
clc
imul
inc
cmp
inc
dec
jmp
dec
xchg
push
scas
iret
mov
inc
mov
push
test
loop
push
lret
mov
in
ss
xor
xlat
pusha
daa
adc
nop
loopne
push
icebp
cmp
pop
pop
and
mov
push
out
pop
mov
arpl
stos
inc
push
lds
lahf
subb
insb
cmpsb
imul
jbe
and
in
cmp
leave
mov
xlat
push
pushf
test
lock
add
xchg
dec
push
stc
push
lds
and
ss
sbb
icebp
out
and
shrb
out
jge
in
clc
mov
nop
repz
scas
mov
in
xchg
sub
leave
subb
push
test
repz
out
fs
test
int
add
in
daa
and
pop
cmc
push
popa
testl
mov
mov
and
xor
mov
cld
cmp
pop
popa
add
pushf
jg
mov
adc
sbbl
fstpl
or
mov
mov
fcmovu
xchg
pushf
or
int3
xchg
sbb
out
jle
push
sub
xchg
imul
mov
adc
cmp
inc
mov
fld
scas
mov
cld
and
add
adc
mov
pushf
testl
xchg
movsl
push
sub
sahf
mov
call
and
icebp
cmp
mov
pop
xor
push
add
test
into
adc
out
les
jmp
dec
push
jb
inc
daa
mov
sbbl
and
inc
int3
test
arpl
pusha
cmp
lods
sahf
xchg
sbb
inc
movsl
pop
sbb
movl
js
aam
xchg
lock
sbb
adc
and
fadds
aad
lret
ret
jae
sarl
mov
xchg
push
push
fnstcw
adc
pop
xor
test
adcb
flds
mov
ja
arpl
imul
add
inc
shl
xchg
sbb
pop
bound
mov
pop
push
adc
push
push
sti
int3
push
dec
repz
inc
cld
push
idivl
ret
dec
mov
and
and
int
insl
adc
xlat
std
inc
xor
xor
pop
push
dec
mov
fisubrl
and
enter
stos
xor
out
xchg
push
xchg
addr16
mov
mov
lds
xor
in
inc
fsubrp
add
xchg
cmp
mov
mov
mov
cli
push
cwtl
push
repnz
jnp
insl
mov
lcall
or
mov
jns
or
icebp
daa
lret
and
xchg
mov
les
mov
xor
adcb
loop
mov
divl
pop
cmp
xchg
popl
or
mov
jecxz
iret
sub
loopne
xchg
mov
lods
insb
aaa
pop
icebp
scas
in
lea
dec
jle
sahf
ret
push
add
push
repnz
and
pusha
scas
lret
aam
sbb
test
xchg
mov
or
pop
mov
jle
scas
scas
sub
or
dec
data16
cltd
pop
jle
and
jg
movsb
dec
inc
cwtl
out
mov
inc
outsl
daa
mov
icebp
ret
scas
lret
sahf
fimull
inc
sub
jnp
int3
xchg
in
cmp
mov
pop
push
cmp
fistl
jle
loopne
inc
repz
gs
or
jne
int
xor
jmp
popa
insl
sbb
cmp
lahf
ret
sbb
xor
div
dec
int3
out
pop
xor
add
push
daa
js
into
ret
push
pop
scas
mov
mov
dec
push
push
push
mov
push
pop
int
xlat
ret
ja
negl
icebp
and
mov
lret
pop
outsb
shll
sti
outsb
sub
lds
cwtl
iret
test
pop
sbb
imul
stos
pop
outsl
fcoms
inc
ret
fidivrl
movsl
inc
lods
xchg
sub
cmp
aam
sahf
into
ss
push
out
movsl
inc
test
int3
mov
cmpb
pop
std
mov
mov
hlt
or
add
pop
xlat
cmp
adc
push
cltd
imulb
mov
cltd
add
jecxz
mov
negb
lds
ret
sbb
lcall
push
pop
or
imul
mov
mov
xchg
and
mov
inc
loope
ret
jbe
inc
outsb
adc
mov
fnsave
imul
bound
xor
cld
mov
jno
sub
mov
mov
inc
ljmp
lret
fcoms
cld
xor
xor
shlb
je
das
jg
mov
aas
xor
and
stc
sbbl
sbb
pop
mov
or
rorl
lahf
sbb
add
xlat
mov
mov
int3
mov
and
rol
ss
repz
loope
scas
add
or
mov
cs
adc
push
movsl
and
ss
ds
in
pop
mov
push
jge
ja
in
adcb
inc
adc
pop
jne
sbb
jle
and
mov
jge
inc
outsl
pop
pop
cld
xchg
lds
ficompl
push
adc
sub
dec
add
jmp
xchg
fs
or
cmp
xchg
movsl
aas
out
xchg
xchg
adc
add
cmp
enter
sub
xchg
xchg
push
lahf
jo
inc
jl
outsb
cwtl
aad
repz
cmp
and
pop
dec
data16
pop
xchg
das
mov
dec
stos
sub
and
ja
rorl
mov
out
inc
fdivl
dec
int3
scas
push
stos
mov
push
sbb
or
stos
adc
enter
mov
aaa
ret
lahf
shrl
xchg
push
jp,pn
pop
adc
idivl
and
in
mov
aam
push
mov
sbb
adc
push
jmp
pop
mov
sahf
mov
lods
inc
outsl
dec
cmp
aad
jo
sbb
loop
cmp
cmp
nop
and
aas
mov
jns
cltd
roll
push
lea
decl
pop
sbbb
sbb
aad
in
sbb
shlb
xor
pop
orb
stc
lods
pop
clc
xor
jae
scas
inc
outsl
ret
fcomps
cmp
or
rol
inc
mov
mov
push
fadd
pop
xor
aam
stos
and
cwtl
xchg
pcmpeqd
xor
rcr
shr
push
fsubrl
dec
add
lahf
ret
mov
movsl
fs
aaa
js
adc
pop
cvttps2pi
add
mov
add
mov
inc
cmp
cmp
adc
jae
sbb
push
in
inc
and
fisubs
xchg
dec
xchg
sub
mov
mov
push
mov
das
jg
rolb
dec
jne
arpl
push
xor
icebp
sub
lods
dec
sbb
test
mov
xor
enter
sahf
adc
push
jae
mov
in
cmc
subl
mov
xchg
ret
add
mov
arpl
cld
pushf
jecxz
fistpl
mov
stos
out
jno
inc
xor
push
push
jno
aaa
in
push
and
int3
jge
adcl
lret
or
push
fistpl
pusha
dec
xchg
xchg
mov
jmp
ja
scas
jmp
in
add
inc
mov
lret
adc
mov
xor
hlt
pusha
je
and
lds
imul
rcl
adc
test
sbb
cltd
pop
loopne
cltd
jnp
pop
push
dec
pop
add
in
mov
jge
mov
or
jge
mov
in
enter
and
mov
mov
jmp
fiadds
imul
cmp
es
rcrb
pop
orb
divl
fdivrl
js
cmpsb
aas
mov
ljmp
add
mov
pop
in
pop
sbb
mov
push
test
scas
ret
lods
lret
add
insl
xchg
data16
cmp
dec
mov
cs
xlat
enter
xchg
xchg
xchg
icebp
insl
loope
xchg
call
jmp
jb
lret
clc
mov
das
loop
adc
pop
out
mov
push
jne
jge
mov
daa
insl
imul
add
sbb
loopne
pop
sarl
inc
xlat
sub
insl
push
cmpsl
shlb
jnp
or
sbb
call
mov
sub
mov
sti
jno
push
lods
je
sbb
rcll
lea
dec
call
push
pusha
fnstcw
arpl
andl
pop
mov
ret
pop
inc
lret
xchg
inc
movsl
push
xchg
pop
sti
stos
arpl
ret
mov
in
int
fisttpl
sahf
insl
cld
push
out
sub
out
cwtl
inc
out
jl
xlat
int3
add
adc
out
jecxz
xchg
jecxz
cmp
mov
jmp
push
cmpb
mov
pop
pusha
rorl
test
jne
ja
cli
data16
pop
adc
push
aam
ret
xlat
leave
fisubrs
jbe
jno
mov
inc
into
adc
add
pop
or
xor
mov
pop
adc
cltd
leave
sub
in
mov
mov
fst
in
lahf
jae
sub
imul
stc
xchg
cmp
xchg
xchg
jnp
add
sahf
push
ja
aad
lea
repnz
std
fsubs
dec
sbb
call
shlb
push
mov
lock
mov
dec
insb
jne
jmp
add
int
cmp
clc
movsb
pop
adc
jmp
sub
dec
addl
in
test
stc
fdivl
xor
loop
aaa
mov
mov
aas
and
and
mov
fdivs
clc
addb
in
or
loopne
dec
mov
out
push
jb
sub
xor
inc
outsl
mov
lret
andl
pop
fs
addr16
je
mov
in
pop
xor
adc
mov
pop
lods
insb
mov
cmp
sub
imul
push
xor
adcb
or
stc
jae
cli
xor
lods
fstps
fildll
push
addr16
loope
out
xor
jg
popa
test
sbb
imul
pop
pop
and
dec
sbb
add
jl
hlt
sahf
scas
dec
ss
je
out
inc
fadds
cmp
xchg
pop
sub
sbb
aas
push
shr
mov
loope
popa
test
sbb
rcrl
pop
add
ficomps
mov
aam
aad
lods
movsl
test
jo
push
jecxz
sub
inc
fistpll
mov
dec
sub
jg
adc
mov
pushf
aaa
je
mov
push
addl
pop
ss
jge
mov
mov
or
into
adc
cltd
mov
xor
cmpsl
and
ds
out
fadd
jno
outsb
lahf
jno
loop
popf
stos
imul
pop
jp
inc
popa
ret
lock
fldt
adc
mov
or
dec
insl
inc
pusha
dec
das
xor
and
and
pop
mov
aas
test
mov
xchg
adc
sub
jo
cs
imul
aaa
jb
jmp
pop
dec
insl
movsb
jno
mov
mov
mov
mov
xor
test
popf
out
testl
int
sbbl
lret
xor
xchg
sbb
cmp
push
test
sti
loopne
mov
jmp
out
scas
je
sarb
and
sarl
cmc
or
or
insb
jbe
rcrb
cli
ret
cmp
adc
push
fadds
sarl
mov
shrb
cs
mov
rolb
mov
mov
aas
xchg
mov
mov
jge
jg
jg
add
dec
inc
jnp
jb
sub
xor
daa
mov
fnstsw
mov
outsb
inc
imul
call
inc
les
mov
popa
pop
jb
arpl
cltd
lret
mov
jl
sbb
or
pop
movb
test
mov
ss
cmp
sbb
cmpsb
push
nop
cmpsb
shl
mov
and
and
jne
cmp
push
subl
cltd
inc
dec
out
negl
incl
cmp
testl
cmpsl
rcr
mov
adc
sbb
and
adc
push
and
jb
add
mov
jns
mov
push
icebp
mov
lds
sbb
sub
and
es
mov
push
inc
pop
cmc
mov
push
xchg
adc
cmp
test
dec
mov
addb
mov
addr16
shl
pop
in
inc
imul
test
add
mov
sub
xchg
add
in
loop
dec
xchg
fnstcw
in
mov
int3
or
adc
insb
push
mov
push
test
fs
dec
stc
enter
imul
cmpb
es
fsub
mov
mov
dec
jne
mov
push
popa
test
std
hlt
mov
adc
xor
outsl
add
fadds
bound
dec
mov
and
je
cli
jg
add
fcomip
daa
inc
push
imul
xor
sti
ret
loop
or
lea
fdivs
push
in
or
xchg
xor
daa
xchg
scas
jno
out
mov
int
addl
into
rcll
mov
mov
jp
scas
or
xor
outsb
add
push
sub
sbb
sbb
add
mov
jmp
adc
sub
iret
mov
push
fcomps
inc
push
loop
pop
jb
jb
jg
push
jno
mov
pop
adc
out
rcrl
test
hlt
sub
fisubrl
test
fsub
rcr
loop
lods
popf
pop
push
jo
jg
mov
ja
loopne
xor
ret
aam
jo,pt
or
iret
dec
into
pop
sub
rclb
iret
ds
in
aaa
mov
push
dec
cmp
fdiv
sub
dec
jno
mov
in
nop
xchg
dec
push
adc
test
in
fdivrl
push
and
in
test
cmp
jnp
push
xchg
sarb
jb
xchg
dec
dec
enter
sub
pushf
pop
cmp
or
sbb
xor
out
shlb
gs
shrl
jle
outsl
out
ret
int3
pusha
in
movl
gs
sarb
cli
stos
pushl
fdivs
lock
fucomip
pop
and
mov
shrl
flds
bound
stos
mov
outsb
push
idivb
pop
mov
adc
inc
pop
lret
shlb
push
push
movsl
ja
test
mov
jge
pusha
xchg
sbb
pop
cwtl
add
push
push
clc
gs
xor
pop
fs
push
arpl
mov
lds
cmpsb
or
clc
and
push
jno
pop
out
cmpsb
and
jo
fcmovnu
sub
test
lret
add
pop
adc
push
push
xchg
lds
pop
adcb
mov
ljmp
inc
xor
psadbw
out
insb
or
dec
movsl
cmpsb
mov
jmp
xchg
scas
cltd
mov
pop
test
dec
in
mov
and
push
nop
cmp
mov
bound
mov
adc
repz
out
enter
incb
mov
mov
add
or
pop
lods
dec
cmpsl
es
mov
xchg
jo
rcl
mov
jg
out
fidivl
xlat
push
movsb
jge
int
cmp
sbb
leave
xor
xor
ret
test
pop
jp
mov
and
push
sub
lods
popa
xor
sahf
sub
push
loopne
ds
dec
cmp
cmc
jmp
popa
imul
das
pop
inc
out
push
mov
cmp
std
mov
in
lds
ret
dec
fstps
xor
aam
fisubrs
repz
dec
stos
push
add
es
mov
pop
in
repz
jecxz
loope
fstp
push
shlb
pop
inc
movsb
xor
adc
mov
inc
stc
sub
mov
leave
cmp
or
movsb
xchg
xchg
arpl
mov
sarb
ret
std
es
inc
sbb
ror
cmpsb
xchg
ret
jno
sbb
shrl
pop
xlat
push
popf
les
pop
fcoms
sarl
push
addr16
stc
cmp
add
pop
sahf
mov
into
pop
in
and
out
pop
xchg
xchg
nop
pop
call
fs
mov
dec
imul
test
add
adc
inc
sbb
add
cmp
loop,pn
sbb
pop
cmc
cmp
ss
in
stc
xlat
push
or
sahf
sub
xor
and
std
or
movsl
inc
stos
pop
stos
push
push
movsl
push
add
mov
sbb
pop
or
xchg
mov
je
rcrb
adc
inc
push
jp
testb
push
call
push
adcb
adc
pushf
imul
inc
out
fists
test
aam
insb
pop
filds
pop
out
add
in
int3
push
mov
inc
neg
sti
test
pop
stc
sub
out
js
in
call
insb
mov
and
adc
jl
fwait
call
cmp
shrl
lea
stos
popa
in
nop
insb
outsb
mov
rorl
xor
cmp
xchg
sub
add
push
mov
push
test
popa
dec
cmpsl
mov
dec
test
sub
scas
add
dec
mov
fisubs
inc
sub
hlt
sbb
xchg
out
loop
jge
aad
hlt
mov
in
ljmp
jb
pop
sbb
repnz
push
popf
outsl
add
jno
and
fisubrs
pop
out
mov
push
cli
mov
movsl
into
cli
imul
dec
sbb
pop
mov
jb
jmp
aas
fwait
nop
mov
sbb
adc
jmp
es
scas
cld
xor
and
sti
jecxz
hlt
cmp
cwtl
scas
fiaddl
popf
rolb
in
cmc
add
dec
sub
out
jle
out
fisubl
and
aam
outsb
dec
vscalefsd
ret
sub
loopne
and
pop
or
cmp
cmp
test
push
and
or
push
push
aas
mov
lods
es
pop
sub
pop
fs
inc
lea
xchg
pop
xorl
outsb
int
jne
mov
pop
push
push
cwtl
mov
adc
cmp
xchg
fs
stos
cltd
xchg
xor
outsl
cs
jmp
sbb
mov
dec
sbb
std
sti
divl
scas
and
adc
and
repz
mov
push
mov
andb
fstpl
movsl
mov
test
xor
mov
into
pop
jns
mov
int3
outsb
sbb
sahf
push
push
jb
test
loop
dec
adc
in
push
mov
fmuls
cli
jnp
push
dec
cwtl
shl
cmc
jo
test
xor
pop
mov
push
inc
cmpl
in
mov
pop
testb
mov
movsb
add
aaa
out
inc
scas
bound
aam
lahf
leave
aad
push
sbb
inc
iret
out
adc
mov
xchg
rcr
or
inc
out
adcl
or
push
sbb
mov
pop
sbbl
sahf
xchg
idivl
loope
stc
inc
push
mov
pushf
loope
pop
roll
adc
stc
push
es
dec
mov
les
inc
mov
inc
popf
incl
mov
inc
pop
jg
mov
lock
mulb
xor
out
adc
push
stos
jb
aaa
hlt
sarb
and
push
mov
xlat
repz
dec
inc
shl
sub
ljmp
stos
mov
inc
scas
mov
mov
outsb
push
fwait
test
in
cmp
nop
mov
or
push
rol
aam
lds
outsl
loopne
dec
push
pop
pop
pop
or
fildl
sub
pop
push
mov
popa
xor
jae
mov
ljmp
inc
or
jns
in
push
jle
fdivr
outsb
cld
inc
mov
push
xchg
je
add
or
adc
daa
mov
push
cltd
jb
inc
cmp
fnstenv
xor
test
aam
aad
das
insb
mov
jmp
outsb
sbb
loopne
outsb
adc
pop
bound
fbstp
int
dec
test
in
mov
inc
and
or
inc
imul
negl
pop
js
insl
adc
dec
call
mov
add
repz
adc
xor
les
movsb
mov
lret
repz
icebp
ja
aam
add
sbb
xchg
popf
movsl
inc
lcall
aas
push
mov
popa
adc
mov
mov
dec
arpl
aam
jns
mov
xlat
aaa
jnp
fldl
jbe
xor
sarl
mov
popa
lods
mov
test
mov
mov
or
fmull
cs
xor
mov
inc
push
xor
push
mov
jne
testl
mov
sub
movb
mov
push
cltd
cs
bound
jnp
sbb
dec
pop
bound
jnp
push
or
ja
sarl
mov
test
dec
xor
hlt
iret
xchg
js
jg
pop
mov
popa
ret
subl
dec
adc
sub
sarb
jnp
cmp
in
leave
addl
adc
inc
sub
xchg
or
jl
cmc
jle
arpl
add
dec
sub
sarl
mov
add
xchg
test
push
mov
cmp
push
sbb
dec
jp
xor
or
inc
jp
test
mov
push
mov
adc
mov
sub
cmp
and
inc
xlat
ficomps
add
js
jge
mov
sbbl
add
mov
imul
test
pop
sbb
adc
dec
jo
sbb
adc
xor
jp
xchg
je
or
adc
and
icebp
call
mov
lods
jg
fcompl
adc
lcall
int3
shrl
jg
pop
aaa
addb
inc
icebp
aam
push
jno
jno
gs
dec
mov
mov
pop
rcll
dec
mov
pop
insb
add
push
mov
sub
je
jle
push
and
jbe
mov
jnp
push
js
mov
jp,pt
daa
sub
and
cltd
sahf
or
mov
das
fnstcw
ss
outsl
repz
add
in
xor
or
fistps
pcmpgtb
pop
test
push
adc
pop
not
pop
dec
jns
lahf
repnz
pop
add
pop
add
nop
adcb
ljmp
cld
mov
sub
lea
fs
sbb
lret
clc
sbb
adc
pusha
or
or
imulb
iret
out
mov
adc
cli
out
push
sub
sbb
mov
lods
in
cli
lds
je
clc
lret
or
jecxz
cld
aas
imulb
mov
pop
call
lcall
cwtl
jecxz
pop
cmp
fldt
test
stos
cmp
mov
fucomi
orb
pop
pop
xlat
ss
notl
dec
or
lds
iret
aam
mov
shld
hlt
inc
out
mov
xor
or
push
cmc
sahf
clc
inc
out
lock
cld
mov
cmpsb
jl
into
pop
push
dec
in
xchg
nop
loopne
inc
stc
aad
push
fsubs
mov
push
pop
xlat
addr16
xchg
les
repz
dec
push
imul
pop
hlt
call
in
or
push
or
fs
cltd
daa
aaa
ss
dec
mov
and
lods
jge
mov
lods
jge
mov
les
sahf
popa
and
rorl
outsl
pusha
cwtl
les
cmp
sbb
jmp
arpl
mov
xchg
pop
out
rol
aad
call
add
sbb
insb
lcall
inc
test
adc
sbb
or
ficomps
mov
lahf
mov
decl
xor
cmc
add
pop
shrb
dec
inc
xor
or
cltd
imul
sub
xchg
int3
scas
mov
scas
mov
inc
loop
insl
imul
push
loopne
imul
rclb
ljmp
das
mov
fdivp
mov
mov
pop
addr16
inc
xchg
mov
int
lods
xchg
jg
imul
fs
test
out
xchg
fisubrl
in
lods
mov
pop
jg
add
cltd
push
les
fucomp
xor
mov
xor
movsb
push
add
inc
popa
mov
push
pop
push
cmp
nop
fisubs
lods
sub
mov
sbbb
jmp
add
test
rcll
dec
jns
dec
jo
ljmp
inc
leave
sbb
and
xchg
test
inc
or
les
jne
adc
jno
xchg
mov
mov
repnz
lods
aad
jbe
pop
fwait
bound
fsubrs
sub
pop
sahf
shrb
into
mov
cld
leave
xchg
sbbb
repnz
push
add
xor
inc
xor
push
jecxz
loope
fs
sbb
jnp
xor
xor
hlt
loop
add
and
pop
js
add
out
aas
icebp
mov
lret
mov
imul
stc
fnsave
push
push
push
inc
xor
jle
pop
add
mov
lret
or
pushf
jb
push
cmp
jae
cmp
ss
jp
pusha
add
xorl
fsubl
add
aas
inc
mov
sub
repnz
clc
lret
aam
scas
xchg
jg
outsb
loope
aad
roll
test
shll
xor
jnp
jno
icebp
or
xor
andb
stos
push
mov
add
inc
fldl
pop
xlat
in
or
cmpsb
mov
dec
mov
cmp
das
cwtl
comiss
shrl
pop
inc
push
pop
cmp
mov
into
pop
xchg
jns
pop
xchg
mov
xlat
fistpl
sahf
jl
inc
mov
ljmp
and
iret
jmp
cld
push
sbb
test
gs
xor
mov
push
lcall
aaa
gs
fcoml
xor
shrl
jbe
or
cmp
jecxz
in
mov
scas
popf
int
mov
scas
xchg
imul
popf
jne
jle
and
clc
stos
shlb
inc
aaa
js
mov
fisttpl
or
enter
lds
cmp
out
sti
sbb
jb
push
sbb
jae
cmp
push
add
int
lock
pushf
mov
mov
stos
jp
popa
or
or
adc
pop
in
pop
xchg
inc
inc
pushf
iret
cld
mul
aas
in
xchg
push
jge
gs
sub
add
lods
or
cmc
push
pop
stos
loopne
mov
cmp
test
push
sub
add
mov
jg
aaa
and
ljmp
loope
sbb
or
fstpt
cmp
push
inc
mov
inc
leave
fstpt
dec
mov
int
sub
cmp
daa
push
pop
aad
cmpsl
neg
jb
ds
mov
dec
sub
int
cmp
mov
lods
mov
and
jns
ljmp
xchg
daa
sbb
xor
fsubs
sub
movsb
sbb
push
ds
xchg
pop
pavgw
fdivs
inc
cmp
rorb
outsl
enter
clc
jge
mov
adc
adc
clc
and
jnp
cli
in
inc
ret
fistl
and
mov
push
js
mov
ds
and
andl
test
push
xchg
xorb
out
mov
dec
mov
lret
and
ljmp
vpmacsswd
out
mov
mov
lahf
mov
cmp
inc
push
and
and
sahf
int3
gs
jge
aaa
or
cmp
dec
push
pop
faddl
mov
fnsave
push
and
andb
data16
in
cmp
xor
or
mov
sub
clc
pop
inc
push
jnp
or
dec
repz
lret
mov
mov
sbb
ret
dec
jbe
insb
lret
mov
cmp
pusha
jle
xor
dec
in
jl
mov
movsb
aaa
or
sti
push
lcall
in
popf
lret
xor
xchg
movsl
test
push
adc
mov
aam
sub
xchg
into
repnz
aaa
push
push
push
mov
mov
outsl
sub
cwtl
and
lcall
fs
orl
data16
ficomps
push
inc
xchg
sbb
iret
inc
js
repz
xchg
call
mov
add
addb
adc
mov
cs
aam
outsl
lret
cmp
mov
call
cmp
fimuls
mov
cltd
jnp
pop
std
arpl
jne
and
cmpsb
ficomps
inc
addr16
xchg
in
fists
stc
sub
jecxz
and
inc
in
movsl
mov
mul
mov
mov
inc
in
cmp
jne
pop
sub
in
nop
lret
fwait
fs
xchg
scas
aaa
sub
xor
dec
mov
clc
test
pop
insb
push
stos
js
dec
call
fnstcw
jg
jo
ja
pop
push
fldcw
rcrb
sub
or
daa
insl
push
out
push
push
cmpsw
add
mov
fpatan
mov
sub
inc
data16
xchg
scas
pop
and
mov
inc
xor
cltd
std
fcomp
int
pusha
rcll
out
xchg
jb
mov
mov
cmp
cld
mov
mov
daa
inc
ret
mov
pop
lods
out
mov
mov
jp
pop
adc
les
mov
jecxz
xchg
cmc
popf
out
push
out
xchg
scas
pop
sub
movsb
xor
cmp
repnz
out
dec
mov
fcompl
shl
xchg
pop
mov
aam
sbbb
jecxz
lret
jecxz
lret
mov
das
mov
mov
imul
imul
mov
xor
sbb
gs
push
aaa
and
data16
ret
mov
std
in
lret
xor
shll
pop
cld
in
push
push
test
jnp
adc
push
jl
jns
jno
loop
cmpsb
sbb
inc
lret
call
outsl
sub
sub
pushf
lcall
insb
pop
sub
xorl
out
jb
jle
or
mov
dec
cmp
add
mov
scas
mov
adc
sub
movaps
sub
mov
pop
lret
push
and
mov
push
imul
imul
sbb
in
xchg
leave
mov
repz
inc
lock
push
incb
mov
mov
sbb
aaa
cmpsb
mov
ds
sbb
xor
cmp
out
sbb
iret
packuswb
in
out
jo
sub
xchg
dec
aad
mov
fcomps
sbb
cmp
sub
inc
xchg
xchg
pusha
mov
aaa
xchg
push
push
inc
out
mov
sub
jo
out
push
dec
xor
pop
inc
stos
int
mov
mov
sub
stos
cwtl
mov
and
shrb
cmpsl
sub
and
mov
mov
in
add
mov
mov
scas
add
mov
enter
cmp
loop
fs
pop
imulb
inc
stos
sbb
scas
shr
sbb
inc
inc
sti
mov
jmp
adc
lds
jnp
mov
and
fwait
stc
int
pop
in
stos
addr16
jmp
ds
lea
mov
and
adc
roll
clc
inc
lds
in
movsb
pop
iret
stos
lret
pop
test
out
lcall
fs
inc
pop
xor
div
mov
xor
jmp
sub
mov
not
push
cmp
dec
add
xchg
test
mov
push
xchg
cltd
cmpsb
cmp
cld
adc
and
jbe
xchg
jge
pusha
cs
ljmp
mov
pop
mov
adcb
int
sub
clc
mov
jmp
icebp
mull
lock
insl
add
repnz
push
shrl
sbb
add
pop
sbb
jnp
and
inc
lret
insl
jne
mov
jge
dec
mov
lock
pop
dec
addr16
mov
dec
ret
mov
mov
mov
ss
or
sbb
lods
adc
leave
shll
mov
and
push
ja
and
xlat
push
pop
cmpb
repz
xchg
test
mov
movsb
sbb
adc
jp
pop
xor
adc
cmc
add
cs
xor
jle
mov
call
incl
jne
add
adc
xchg
sbb
or
pop
fwait
xlat
sbb
addb
adc
movsb
jo
pop
test
inc
bound
pop
push
andb
jbe
pop
movsb
fwait
xchg
std
push
jne
out
xchg
fimuls
sub
repnz
lahf
lret
inc
inc
add
rcrb
repz
push
and
inc
out
cmp
cmp
ja
jmp
push
into
call
nop
push
icebp
inc
das
rcll
cmp
rcrb
hlt
pop
ficoml
out
dec
mov
xchg
stos
arpl
lahf
imul
call
xlat
and
test
fisttpl
fwait
out
cmp
cmp
pop
loop
sbb
pop
out
pop
mov
xor
pusha
inc
jne
dec
and
icebp
stos
pop
jg
add
add
sub
mov
nop
xchg
shll
jb
test
sbb
sti
rcrb
cmp
lcall
and
jg
mov
les
mov
push
jnp
mov
push
xor
mov
xchg
dec
mov
std
jmp
pop
lods
test
ret
ja
dec
mov
sub
sub
push
jae
test
mov
pushf
daa
pop
icebp
pusha
pop
jecxz
test
mov
gs
inc
jg
mov
fcomps
push
push
xor
jge
pinsrw
lret
add
faddl
loope
pop
pop
pop
sub
fstp
das
outsl
fsubrl
mov
fsubrs
sbb
sbb
cmpsl
or
out
add
jg
adc
sbb
shrl
jle
jl
ss
and
imul
test
mov
jo
test
lahf
push
and
repnz
je
dec
push
loope
or
lods
dec
scas
lods
push
lahf
sub
ss
mov
stos
fbld
mov
fisubl
mov
mov
ret
and
sarb
rolb
iret
pop
xlat
popf
mov
in
pop
and
or
popf
je
fwait
xchg
dec
pop
mov
clc
sub
and
loopne
loop
inc
mov
jp
imul
and
into
movl
pop
dec
add
xor
lcall
pushl
push
call
push
mov
rcrl
cwtl
fdivrs
int3
jp
popf
sahf
and
movsb
dec
mov
dec
sahf
or
loope
pusha
test
test
pop
mov
or
shll
lods
mov
inc
subl
inc
mov
lret
pop
pop
jle
fstl
xchg
inc
int
push
push
cmp
xor
ss
adc
sub
push
shll
inc
cmpsl
push
push
jl
ds
imul
or
add
push
xchg
stc
xchg
sub
mov
cld
mov
idivl
shlb
pop
mov
in
pop
je
dec
mov
mov
and
jge
or
push
jns
xchg
in
add
dec
fistpll
cltd
mov
mov
mov
es
push
cmp
lahf
mov
stos
mov
test
ja
adc
jnp
imul
loopne
push
bound
sub
adcb
and
das
stos
std
xlat
shlb
jo
nop
std
push
push
test
xchg
mov
mov
pop
mov
movsl
inc
fwait
imul
adc
aaa
rcrl
iret
jmp
popf
mov
push
mov
rcl
movsb
aaa
push
frstor
push
mov
mov
repz
lret
cmc
sub
dec
dec
rorb
sbb
push
jle
add
or
sbb
repz
fcmovnb
and
cmc
stos
aas
mov
xorb
cltd
add
pop
add
aas
dec
pop
rolb
std
rorb
jg
adc
and
lcallw
mov
pop
pop
stos
je
aad
mov
fdivrs
xor
je
inc
stos
leave
mov
ss
movsb
jl
or
stc
scas
mov
aaa
scas
add
lret
cmpsb
pop
int
dec
cmp
ret
mov
mov
inc
jge
decb
pop
pop
flds
sbb
shl
sahf
insb
ljmp
cmp
pop
mov
sahf
js
dec
nop
pop
fdivrl
rcrb
sub
sub
into
mov
mov
daa
inc
loopne
test
lahf
dec
ret
subl
sti
xchg
xor
daa
mov
cmpsb
jo
in
push
addr16
sbb
xorl
jge
sarb
sbb
inc
and
push
cmc
xlat
mov
test
roll
dec
jae
mov
cmp
mov
mov
inc
xor
adc
inc
adc
rcrl
aaa
test
icebp
sbbl
sub
jo
push
lods
or
ret
adc
mov
testb
loop
movsb
dec
fbld
sahf
and
insb
sub
xor
fsubrs
jg
pop
mov
je
out
pop
push
push
fists
inc
ret
xchg
popf
rcrl
lds
mov
dec
lock
sbb
rorb
aad
cmp
fcomp
sbb
popf
sbb
xchg
lods
push
int3
sub
pop
movsb
dec
sbb
out
sub
mov
loope
push
pushf
aas
mov
fisttpl
arpl
xor
xchg
dec
push
insb
dec
out
imul
push
mov
mov
arpl
lret
and
jno
subb
or
in
daa
fadds
daa
movsl
popa
js
mov
stos
js
push
xor
inc
dec
ljmp
pusha
xchg
int
stc
mov
sbb
dec
and
and
and
cmp
mov
dec
fisubrs
mov
mov
outsb
mov
mov
xchg
jo
arpl
je
cmpsl
xchg
push
cltd
leave
add
mov
push
pop
jnp
xorb
mov
and
adc
fsts
sbb
and
ljmp
lods
jp
std
or
mov
cmpl
push
cmpsb
lods
fwait
into
cmp
iret
add
or
movsb
mov
jmp
add
call
mov
cmpsl
mov
adc
adc
jo
cwtl
cltd
jp
outsb
mov
xchg
sbb
adcb
popa
or
cmp
fucom
lods
fdivr
jbe
dec
in
cmpl
jmp
xor
mov
repnz
insl
push
lock
int
test
adc
dec
fwait
subl
es
ret
mov
pushf
insb
pop
pop
jno
xchg
rcl
stc
sub
push
out
cld
pop
outsb
push
scas
inc
mov
sti
daa
fbstp
testl
mov
cmpsl
sti
and
cmp
jno
lds
les
fs
test
popa
clc
xchg
loope
aad
insb
and
das
and
sbb
add
pop
popf
out
pop
cmp
pop
ret
fwait
xchg
cwtl
lods
in
jns
jno
movsl
xchg
jnp
ret
nop
out
xchg
movsl
jnp
cltd
cld
enter
xchg
ret
mov
insl
jl
lock
push
pop
mov
gs
cmc
push
int
dec
rcll
js
xor
imul
mov
loope
lcall
xchg
mov
or
cmc
mov
fiadds
add
pop
aam
je
cmp
add
and
mov
lds
xchg
fwait
adc
add
lods
sbb
mov
nop
ja
and
aad
xchg
lods
xchg
adc
scas
dec
add
xchg
cmp
mov
ret
mov
pop
gs
in
fldt
gs
mov
add
pop
xchg
imull
sub
pushl
mov
fsubl
mov
jle
lahf
adc
ret
xor
or
pushf
call
mov
mov
mov
add
inc
fmul
in
xchg
int3
inc
pushf
std
push
jo
movsl
jmp
dec
invd
cld
sbb
push
cli
les
gs
gs
jae
pop
push
pusha
fwait
cltd
cmp
and
push
jg
sbb
xor
inc
aas
aaa
dec
andl
xlat
pop
stc
jae
shll
mov
sbb
nop
popa
adc
rolb
fisttps
jno,pt
data16
cwtl
inc
movb
sbb
cmc
aaa
jle
test
xchg
sarl
rcr
cmp
adc
xchg
mov
add
mov
sub
mov
sbb
lods
sahf
mov
jl
stc
add
inc
pop
mov
and
mov
lods
adc
mov
int
xchg
sub
test
dec
cmp
mov
mov
cli
repz
cmpl
dec
jne
cs
ficoms
stos
insb
mov
xchg
xchg
lahf
das
dec
mov
stos
sahf
dec
inc
fisubl
or
sahf
test
push
negb
jne
clc
xchg
mov
stc
loop
popf
or
ja
into
lahf
neg
sti
push
prefetch
or
push
cwtl
inc
dec
iret
repz
push
push
mov
cmc
sbb
gs
jns
and
jp
pop
push
mov
loopne
pop
call
inc
lcall
sbb
inc
fiaddl
push
sbb
movsb
jge
scas
pop
lods
nop
lds
jg
and
mov
out
into
dec
lret
icebp
xchg
imul
push
imul
sbb
outsl
cmp
call
xchg
inc
test
push
movsb
es
jo
les
shrb
mov
mov
sbb
lea
pop
xadd
fwait
lods
rcrb
in
or
out
push
loop
jns
pop
and
fwait
inc
jmp
dec
pop
push
mulb
ja
jnp
int
lea
popa
popf
test
orb
pop
pop
mov
mov
hlt
mull
rcrb
pop
push
daa
jae
cwtl
out
fsub
loopne
add
push
cmp
mov
leave
call
pop
add
adc
dec
fs
mov
cmp
or
out
les
pop
rcl
pop
inc
inc
jb
cmpl
and
jbe
dec
add
movsb
lret
mov
push
push
dec
push
rcl
icebp
inc
imul
adc
inc
pop
inc
xorl
push
leave
fistps
xor
jmp
lds
repz
mov
cmpb
fdiv
mov
mov
push
or
push
mov
add
mov
jne
stc
cmpl
push
movsb
xchg
dec
sub
jmp
loop
fstpt
rolb
sub
pop
pop
cmpsb
push
shll
fdivrl
stos
jmp
das
aad
sub
nop
jo
dec
in
int
ljmp
dec
cmp
mov
inc
sbbl
jmp
pop
fstl
lahf
pop
xor
mov
testl
and
xchg
cli
mov
cmc
add
ficoml
out
add
sub
cmpsb
adc
xchg
sub
stos
mov
mov
xchg
pop
test
cmpsb
in
inc
jb
jbe
mov
xchg
loopne
mov
pushf
or
push
mov
aas
jo
out
push
mov
scas
xchg
orb
lret
out
ret
ss
push
jle
fdivrs
xor
cmp
test
push
testb
popf
into
xor
mov
adcl
and
jle
add
pop
inc
fiaddl
mov
jbe
outsb
xchg
sub
xchg
cmpsl
sbb
das
outsl
push
xchg
xor
mov
jo
push
shl
or
push
cmpsl
add
scas
mov
jp
test
imul
dec
int
dec
lods
iret
cmp
popf
jle
subl
xchg
idivb
movsb
jle
cmpl
fst
movb
add
stc
leave
icebp
inc
fisttpll
cmp
xchg
adcl
xor
out
adc
sub
in
shrb
jle
xor
lret
inc
fwait
ja
dec
loopne
rclb
xchg
dec
cmp
xor
aas
push
push
ja
xor
movsl
int
data16
imul
fldt
cwtl
mov
push
ret
call
rcrl
mov
jb
inc
pop
jmp
lds
pop
xorl
sahf
inc
and
mov
es
pop
mov
test
popf
sar
push
and
or
adc
sub
loope
sbb
push
push
cmp
or
mov
call
dec
pop
mov
mov
rorb
jno
out
movsl
in
or
cltd
xor
scas
add
iret
ffree
sbb
pop
dec
push
loope
loop
pop
mov
mov
enter
rep
cltd
xor
jecxz
das
enter
sbb
xchg
shlb
dec
xchg
xor
or
adc
cmc
fcoml
dec
repnz
nop
lds
cwtl
bsr
inc
dec
inc
rcr
jne
inc
inc
xchg
shll
xchg
gs
movmskps
in
loopne
mov
dec
imul
cmpl
pshufw
mov
or
inc
aas
out
mov
data16
mov
sti
pop
xchg
adc
mov
mov
loopne
mov
decb
push
jmp
mov
dec
out
mov
out
cmp
out
jnp
xchg
stos
inc
xor
in
clc
cmp
sub
jle
cmp
lahf
cmp
mov
test
scas
push
rorb
add
inc
out
push
sti
dec
jg
xchg
lea
push
push
addb
lahf
pop
dec
mov
sbb
clc
out
xlat
addr16
testl
fisttps
jle
outsl
pop
ljmp
jl
or
mov
test
or
and
sbb
jl
jbe
mov
jbe
mov
xor
dec
add
mov
lret
or
cmc
int3
inc
or
push
adc
jle
arpl
data16
or
stc
add
cmp
movsl
push
loopne
jno
test
jp
movb
lods
push
imul
pop
movsb
mov
fldl
mov
cmpl
jp
cmp
ja
ds
jo
sbb
aaa
fistps
out
nop
fwait
pop
ret
cmp
call
jno
adc
fwait
lahf
bound
push
jmp
sarb
cld
dec
clc
jp
stos
jae
insb
hlt
loope
mov
sahf
lahf
in
in
xlat
adc
dec
arpl
xlat
mov
and
idivl
inc
jmp
ljmp
mov
fsubrl
inc
cmc
mull
lock
xchg
addr16
inc
push
mov
mov
sti
mov
pop
in
cmpsb
imul
inc
les
das
inc
icebp
mov
sub
lcall
cmp
cli
cld
mov
dec
lcall
inc
xchg
cmp
popf
add
into
int
daa
and
sbb
xor
mov
jne
xor
test
mull
add
mov
sarb
rcll
mov
pusha
push
idivb
jl
bound
sub
lods
push
in
or
xchg
and
jg
shld
mov
push
ss
shrl
xchg
inc
push
mov
les
fists
add
mov
add
in
shlb
add
sub
sub
clc
push
mov
push
xor
sub
dec
lahf
or
ffree
mov
xchg
or
pop
sbb
pusha
ret
jns
cmp
add
imulb
sub
and
sbb
dec
clc
inc
push
mov
fidivrs
lcall
outsl
pusha
add
jns
xor
xchg
sub
jmp
cltd
sbbl
mov
adc
fcoml
lea
scas
push
cmc
mov
pusha
leave
mov
xchg
jecxz
fmull
lods
pop
mov
nop
sbb
pushf
mov
jecxz
adc
dec
movsl
jnp
mov
xchg
jns
xchg
orb
sbb
jg
lahf
mov
push
xlat
aam
ja
dec
scas
inc
cmp
cmp
test
movsb
inc
or
sub
push
pop
daa
mull
cmpsb
fists
in
jge
outsl
pop
hlt
add
daa
xor
add
js
adc
mov
ret
scas
xchg
ja
ja
icebp
push
call
aam
and
imul
shll
ret
pop
loop
das
mov
sti
inc
fldl
jecxz
outsb
inc
ror
adc
icebp
loopne
mov
out
ds
push
sbb
cli
add
cmp
sub
es
xor
cmc
push
cld
jge
enter
push
dec
push
aam
ja
push
stc
push
push
pushf
push
jg
insl
ss
sbb
es
lock
imul
into
sti
hlt
stos
mov
fnstenv
push
pop
fadds
icebp
pop
add
mov
ljmpw
pop
es
jecxz
addr16
mov
jmp
stos
pop
fstp
ss
xchg
cmpl
arpl
call
stc
mov
dec
inc
cld
gs
enter
icebp
sbb
adc
imul
stos
stos
or
in
push
jmp
sahf
js
pop
mov
call
mov
xor
pop
sbb
enter
add
mov
mov
mov
inc
mov
aas
dec
jp
mov
xchg
dec
and
jnp
mov
push
cmc
sub
jmp
in
xchg
xchg
scas
mov
test
fnstsw
jae
jecxz
push
stc
loop
movsb
jbe
enter
cmpsl
adc
jb
push
cmp
sbb
mov
hlt
mov
cs
and
jecxz
sti
popf
dec
or
daa
push
mov
mov
mov
int
add
loopne
push
mov
push
insl
jo
mov
dec
cltd
inc
sbbb
pop
jle
push
aam
mov
xchg
negl
scas
xchg
push
pop
lcall
out
push
xor
jne
iret
cli
inc
fwait
cli
es
ja
lret
jo
jle
sub
fisubs
adc
scas
cmp
js
pop
mov
or
pop
push
cmp
lcall
test
or
ljmp
icebp
mov
pop
jle
add
testb
sti
test
jge
pop
test
cld
stos
dec
andb
enter
sub
in
sub
add
add
pop
dec
loop
cltd
aad
lcall
mov
pop
inc
cwtl
pop
out
push
jmp
fldl
add
sub
int
ret
fdivl
push
cmp
pop
mov
shr
lret
dec
inc
call
cs
mov
push
out
cmp
push
add
out
ljmp
sysenter
add
and
mov
dec
aam
das
loop
arpl
dec
adc
sub
stos
in
pop
xchg
rcl
outsb
loop
jg
or
decl
pop
cmp
dec
dec
pop
into
orl
loopne
inc
and
inc
call
jg
mov
or
sub
inc
pop
fidivs
das
lret
fcmovnbe
cltd
jne
dec
loopne
push
mov
mov
fidivs
fstps
sub
stos
mov
jg
cmp
sub
jne
push
adc
andl
cli
cmp
pop
xor
lahf
adc
fldenv
fwait
in
add
mov
gs
mov
jl
loope
pop
test
ljmp
xchg
mov
mov
int
cltd
gs
jecxz
out
fst
inc
or
enter
enter
adc
out
or
xor
ret
pusha
out
rcr
add
rcrl
movsl
sub
jmp
push
pop
arpl
test
pop
inc
out
cld
cld
and
jne
or
cmpsl
js
adc
adc
jno
inc
push
movsl
adcl
sub
cmp
test
inc
xor
sub
fs
jnp
jmp
cmpsl
push
aas
int3
jae
fstpt
pop
mov
sbbl
ljmp
lods
jno
arpl
in
push
cltd
xchg
push
pop
pop
or
mov
mov
gs
pushf
cmpsb
fwait
stos
das
mov
addr16
or
dec
popa
ljmp
xchg
and
add
cmpsb
adc
jns
xor
fucomp
xchg
lds
daa
mov
xchg
sbb
pop
add
or
jmp
lods
push
mov
jne
add
scas
adc
bound
in
insl
fbld
mov
mov
push
fwait
shlb
xchg
xchg
lcall
addr16
pusha
lods
sub
jmp
jmp
rcr
jl
fisttps
push
mov
sub
popf
and
and
and
bound
cmp
mov
adc
in
bound
jns
cwtl
movsl
bound
cmp
push
orb
fsubl
adc
leave
cwtl
sarb
jmp
repz
mov
movsb
ror
lret
xlat
or
lods
subb
insl
pop
mov
mull
cwtl
in
dec
pop
fsubrl
gs
xchg
xor
push
mov
mov
int3
jbe
xchg
inc
repnz
add
movsb
lea
pop
cmpl
fisubs
inc
add
aam
adc
push
cmp
jle
mov
pushf
or
xor
dec
xor
adc
mov
xlat
inc
mov
insb
lret
jge
cmp
sub
cli
xlat
xchg
call
dec
sbb
push
in
xchg
imull
subb
mov
outsb
or
mov
xor
sbb
xchg
dec
pop
jae
daa
jle
jnp
mov
mov
jmp
out
adc
pop
lods
std
insb
push
push
leave
das
adc
shlb
out
sbb
pop
sti
and
into
inc
dec
jp
out
sub
jo
aas
inc
xor
xor
adcb
push
xchg
jle
jnp
je
and
je
pop
pop
es
aam
mov
or
sub
ljmp
cmp
dec
jnp
in
inc
push
iret
mov
add
enter
int3
or
fnstcw
aaa
push
mov
cmp
ret
orb
sahf
aam
add
imul
pop
lahf
pop
adc
jno
jne
push
dec
stos
lods
stos
or
popf
push
test
or
cmp
gs
clc
xor
add
sti
jmp
gs
jle
xor
cmp
repz
fwait
vcvtsd2si
mov
ja
sti
cld
xor
adc
rcrb
mov
loope
jl
push
sbb
cmc
test
out
enter
addl
and
add
xchg
icebp
dec
pop
pushf
popa
enter
jae
int
mov
lods
mov
xor
mov
nop
notl
push
out
mov
lods
std
adc
mov
pop
out
sub
aas
rorb
lock
inc
dec
inc
mov
mov
or
cmpsb
fdivrs
fsubr
xchg
arpl
pop
cmp
movsl
jl
adc
sub
xor
bound
in
in
outsl
pop
sbb
adc
mov
pop
xchg
lea
aam
cmp
mov
mov
jne
add
mov
add
inc
lods
mov
mov
adc
clc
mov
or
adc
repnz
dec
mov
push
add
jg
clc
shufps
add
xchg
pushf
ret
pop
jb
jo
and
es
pop
jmp
pop
cwtl
dec
fidivs
add
movl
sub
fs
out
mov
jecxz
cmpsb
sub
mov
cmp
repz
inc
sbb
stc
fwait
cmpsb
push
lahf
add
xor
mov
ficoml
inc
jne
pop
jle
push
and
cmp
adc
repnz
inc
cmp
sbb
xchg
sub
dec
in
add
sub
cmp
add
dec
fs
mov
iret
stos
mov
dec
cltd
mov
lods
aad
xchg
insl
fbld
outsb
mov
leave
in
test
mov
mov
cld
dec
push
push
das
mov
xor
push
cmpsb
fcomi
lahf
mov
pop
imul
mov
sbb
movsl
mov
cwtl
xchg
and
fwait
xchg
jb
jmpw
mov
stos
cmp
xor
sub
outsb
cmpsb
mov
mov
inc
cld
ja
das
xor
cmc
xlat
pop
pushf
fwait
add
imul
lods
in
test
jle
jae
data16
sbb
cli
mov
aam
lahf
stc
xor
and
rcr
hlt
sti
adc
frstor
push
stos
fwait
or
sarl
mov
outsb
popa
or
test
stc
jp
and
pop
repz
and
push
leave
into
jmp
push
clc
xor
jp
adc
push
pop
scas
inc
xchg
movl
out
dec
sbb
mov
aaa
adc
push
loope
sub
imul
enter
inc
push
outsb
daa
daa
jnp
inc
push
push
adc
mov
cwtl
jl
fistpl
data16
fwait
clc
cld
cmp
sub
xor
xchg
jp
loop
enter
inc
xchg
in
adc
mov
lea
add
stos
mov
mov
cmp
lds
mov
fiaddl
imulb
xchg
into
ficoml
xchg
sarb
ja
sub
call
js
outsb
xor
and
pop
lret
sbb
xchg
sbb
cmp
sti
or
push
out
push
adc
pop
stc
gs
ds
bound
push
std
pop
cmp
stos
push
fisttpll
add
xchg
mov
jns
ljmp
scas
out
inc
mov
pusha
xor
push
ret
sbbb
mov
xor
insb
rcll
cmp
subl
mov
int3
insl
aad
sarb
insl
xor
fidivrs
sbb
fisttps
xchg
nop
sti
in
cmp
hlt
jae
out
or
lea
idivb
inc
outsb
xor
mov
push
xor
lahf
mov
outsl
dec
inc
push
mov
es
sub
or
fwait
cld
or
std
pusha
push
push
jo
mov
cmp
adc
test
iret
ficoms
lahf
dec
adc
pop
push
cmpsl
and
test
pop
cs
std
sbb
popf
pop
repz
cmp
cli
test
mov
and
pop
cmp
imul
jnp
xchg
push
je
pop
test
cltd
clc
dec
std
xor
pop
rclb
lods
adc
xchg
jne
test
repz
mov
sti
in
mov
and
sbb
xor
pop
pop
negl
xchg
push
mov
inc
cli
sub
mov
xchg
pop
push
lret
bound
dec
mov
inc
cmp
loop
nop
iret
cltd
rcrl
rcrl
add
push
insb
mov
jnp
jno
incl
pop
insl
scas
and
outsb
hlt
clc
test
and
in
fs
inc
outsl
es
aad
sahf
mov
dec
cmpsl
stos
jcxz
mov
popf
dec
inc
int3
lds
dec
pop
loop
in
lea
push
ss
loopne
sbb
mov
xchg
mov
xor
fwait
lret
xor
dec
ficoms
pop
add
out
jmp
cwtl
cwtl
clc
fcmovbe
mov
popf
and
movsb
mov
repnz
fwait
lds
lea
cmp
cmp
call
xchg
and
xor
push
pop
arpl
outsl
inc
push
xor
and
ja
pop
xor
fdivrl
mov
popf
fisubl
xor
daa
inc
pop
sbb
mov
jns
int
mov
rcll
sbb
xor
xchg
ret
lret
mov
jno
jmp
decl
das
mov
add
rcll
clc
sbbl
addb
xchg
fstps
clc
mov
dec
into
jg
pop
inc
adc
push
or
jae
dec
cmp
movsl
or
fimuls
fwait
sub
push
pop
adc
int
mov
mov
add
std
xor
pusha
movsb
inc
loope
jmp
test
test
or
cmp
pop
and
aaa
movsl
sub
xor
fbstp
mov
push
xchg
adc
sbb
mov
lods
push
cwtl
repnz
bsf
cld
mov
add
out
fsts
test
or
daa
sbb
int3
fcmovbe
int3
jne
outsb
add
xchg
xchg
arpl
loope
pop
adc
lock
cmc
inc
xchg
xor
cmpsb
mov
stos
ds
dec
dec
pop
cld
movsb
int3
das
dec
or
pop
jmp
fistl
push
cmp
inc
data16
sub
imul
ds
sub
repnz
aad
fisttpll
xor
loopne
call
insb
test
mov
addr16
xchg
xchg
insl
sbb
sbb
leave
xchg
or
stos
mov
out
repnz
decl
xchg
shlb
push
dec
sub
sub
add
push
jl
leave
and
ja
sti
push
repnz
aam
data16
mov
scas
dec
mov
pushl
leave
daa
out
push
popf
data16
cli
pusha
and
pop
gs
scas
ds
scas
mov
adc
sbb
xchg
aam
shl
sbb
xchg
mov
sahf
sbb
movsl
mov
dec
fscale
bound
inc
inc
mov
popf
adc
jge
test
mov
sbb
out
sbb
xchg
into
lods
and
rcll
dec
sbb
mov
ljmp
or
pushf
in
add
andb
mov
cmp
xor
cmp
jno
sub
pop
or
or
enter
xchg
pop
or
ss
jp
gs
sbb
inc
dec
cmpb
xchg
test
cmp
mov
jle
repz
jo
cmpsb
pop
iret
or
out
mov
popf
add
cltd
out
cmp
jo
xchg
inc
les
jno
cltd
je
pop
pop
sbb
mov
pusha
push
cmp
jge
gs
ljmp
mov
sbb
in
movsl
add
imul
xor
stc
or
or
fcoml
addl
jb
test
adc
aas
cmp
cld
xchg
mov
inc
outsb
loopne
xchg
adc
mov
jg
enter
pop
jp
xchg
mov
cmp
pop
popa
mov
scas
adc
movsl
xor
push
fs
push
repnz
jmp
mov
cld
push
sbb
int
sbb
pusha
loopne
insl
mov
fs
cmp
testb
mov
and
fwait
jp
xchg
push
sub
int
out
xor
je
jmp
lahf
repz
sub
jo
sahf
jle
pop
push
fistpl
push
ss
jno
fildl
inc
xchg
insb
cltd
test
shlb
inc
pop
mov
add
fsubrl
xchg
jge
sbb
in
cmp
mov
xor
jae
add
or
cmp
fldenv
xchg
push
ja
arpl
dec
inc
push
or
jle
dec
sub
mov
xlat
inc
dec
pop
jmp
fmuls
or
fnstsw
xor
or
dec
cli
lcall
das
rorb
sub
jl
mov
addr16
push
mov
pop
lret
sub
imul
daa
xchg
sbb
test
in
ds
push
mov
pop
sub
in
mov
fldl
jnp
lods
xchg
scas
xchg
aam
cmp
aam
cltd
add
loope
rorb
fstpt
push
rcll
ret
jne
or
xchg
jecxz
cmc
mov
add
xor
ret
lcall
add
into
in
and
xor
pusha
lock
inc
rclb
mov
cld
mov
lods
loopne
cmp
dec
adc
mov
push
mov
lret
sti
push
test
xchg
and
aas
dec
push
and
xlat
insb
pop
add
or
rcrb
adc
cwtl
sti
sbb
pop
shll
or
push
push
gs
cltd
sbb
and
fwait
rcl
dec
pop
mov
and
inc
sub
andb
push
pusha
nop
hlt
push
dec
adcb
pop
sub
icebp
stos
jne
rorl
sub
lock
push
aad
fiadds
andl
sbb
xchg
pop
leave
inc
and
fwait
dec
movsb
mov
mov
adc
jle
adc
stc
mov
outsb
mov
test
pop
xor
jp
mov
sbb
or
dec
push
adc
sahf
icebp
pop
adcl
fiaddl
out
mov
or
push
aaa
xor
sub
inc
in
cmp
xchg
test
fdivl
out
je
rorb
lret
mov
shll
cmp
jecxz
in
xchg
out
push
negb
cwtl
rolb
mov
xor
mov
pop
sbb
lds
add
nop
aaa
lods
push
enter
jae
inc
sarb
jo
repz
es
dec
mov
xchg
xor
jno
aaa
push
shrb
adc
inc
push
cli
jnp
sub
push
mov
sbb
jb
call
int3
out
sbb
les
addr16
dec
or
push
mov
js
movsb
test
sbb
das
dec
mov
dec
outsl
push
jg
insb
out
sti
aas
idivb
bound
pop
dec
mov
cmpsb
and
jmp
bnd
add
adc
movsl
or
rorb
into
adc
pop
sub
xchg
into
sub
mov
or
mov
not
sbb
stc
cmp
mov
sbb
pop
pushf
sub
or
add
or
and
clc
inc
iret
dec
mov
movsl
mov
clc
lcall
nop
xchg
sub
lods
fadd
cmp
xor
test
and
sub
lret
dec
je
adc
xchg
push
aas
jmp
cmp
fs
sbb
clc
sbb
data16
xor
cwtl
into
mov
cltd
cmpsl
xor
cmp
lcall
push
test
mov
rcll
adc
push
movsb
jno
dec
dec
mov
xchg
scas
mov
adc
sub
fstpt
inc
test
push
add
dec
dec
insl
sub
xor
jl
sbb
xchg
int
fs
fwait
pushf
pusha
xchg
xor
mov
mov
sahf
xchg
insb
flds
push
push
cmpxchg
incl
jns
cmp
jmp
ret
pop
dec
sbb
fmul
fdivrl
lretw
lea
stc
loop
in
xchg
cmp
inc
fstps
add
dec
into
xchg
loope
sub
adc
cmc
xor
mov
and
fnstsw
sub
scas
idivl
aam
and
sub
je
not
jno
aaa
adc
clc
xchg
inc
xor
imul
out
sbb
icebp
test
lret
cmp
inc
repz
lret
pop
and
sbb
vblendmpd
cmp
leave
sub
aas
loop
idivl
loope
jle
incl
dec
cld
ljmp
sbb
mov
cld
pop
xchg
int3
fidivrs
pusha
and
inc
fsts
bound
lods
aam
clc
into
mov
ret
xor
cli
pop
ss
mov
enter
pop
or
aad
daa
cmp
push
mov
mov
jae
adc
mov
dec
or
addr16
divl
incb
dec
fwait
or
cmp
shrb
fwait
in
ret
test
push
push
repz
ja
or
push
and
jo
dec
lds
or
push
dec
adc
cmpsb
cwtl
orb
xor
mov
cmp
lods
les
jg
scas
les
jmp
add
imul
xor
insl
push
mov
out
or
jae
stos
arpl
inc
mov
mov
lock
test
aas
pusha
vmovss
adc
lret
aaa
cmp
fcompl
test
mov
sub
shll
lret
cmp
repnz
mov
adc
frstor
popl
pop
repz
sbb
xor
push
and
pop
fimull
and
loopne
cmp
sub
push
std
push
cmpsl
mov
sbb
cmpsb
mov
jecxz
mov
push
es
clc
imull
int
aam
adc
arpl
imul
cmp
pusha
cmc
or
push
leave
sbbb
mov
jmp
dec
fistpll
in
movsb
out
sarb
iret
test
popa
push
icebp
call
push
inc
repnz
mov
mov
sub
push
repz
aaa
and
daa
aam
inc
dec
andb
leave
mov
or
sbb
dec
int
pop
jge
push
and
mov
adc
fucomi
sub
and
pop
aam
test
mov
xchg
mov
stos
outsl
cmp
mov
imul
shlb
inc
add
add
and
pushl
pop
call
shll
jge
jp
outsb
sub
xor
shlb
lds
inc
in
dec
sub
scas
sahf
xchg
sub
mov
jmp
pop
add
sbb
or
das
sub
mov
mov
aaa
sub
pop
js
mov
out
and
loope
icebp
ds
dec
sbb
je
cs
mov
nop
jmp
es
jmp
mov
dec
fisttps
mov
pop
jbe
push
cvtps2pd
ljmp
adc
scas
stc
and
lods
push
mov
cmp
push
repnz
lret
jne
mov
cmc
cmp
or
xlat
int3
fisubl
fistpl
popa
ss
pop
jne
xor
xadd
data16
add
mov
dec
aam
or
mov
push
xorl
sub
loopne
test
data16
xchg
imul
loop
mov
in
dec
add
arpl
repnz
loope
sub
inc
cmp
mov
fdiv
pusha
push
add
ret
xchg
sub
mov
movl
pop
cmp
in
pop
aaa
rcl
sbb
dec
xor
andl
cmc
or
lahf
lret
mov
leave
add
gs
bound
scas
push
insb
ret
idivb
or
cmp
mov
dec
inc
jae
ud0
xor
jne
rolb
mov
lahf
inc
cli
adc
clc
data16
fdivrl
fdivl
andb
lret
into
inc
mov
icebp
add
cwtl
sti
pop
cwtl
xor
decl
cmpsb
ljmp
mov
mov
loop
add
inc
sbb
pop
push
jo
mov
jmp
mov
pop
mov
adc
xchg
movsb
aas
inc
pop
mov
dec
mov
popa
test
mov
rorl
jno
mov
xchg
fcmovne
notb
mov
loope
xor
fadds
pop
sbb
cmp
data16
inc
in
push
push
std
retw
dec
jmp
or
dec
aad
arpl
mov
xsha1
cmpsb
iret
mov
out
adc
push
in
shl
inc
das
in
mov
and
sub
pop
lods
inc
in
and
clc
scas
mov
mov
add
iret
hlt
pusha
xor
add
test
push
pop
mov
jne
aam
adc
rolb
xchg
sgdtl
lcall
das
outsl
dec
idivl
sbb
pop
push
or
adc
mov
and
push
jo
and
xchg
mov
adc
or
js
repnz
jl
and
xor
test
push
outsl
mov
loopne
push
lret
sbb
adc
mov
test
mull
bound
ss
xchg
and
jle
xchg
fldl
sbb
js
inc
mov
sbb
lds
test
orb
xor
int
das
push
xor
adc
lea
fs
push
add
sub
mov
sbb
int3
pop
filds
push
jle
bound
jg
sub
mov
xor
fs
pop
mov
testb
mov
and
outsb
push
in
jp
ljmp
int
add
pop
cwtl
xor
jg
pop
iret
xchg
aam
fs
adc
push
cmpsl
or
push
sbb
ds
and
pushf
push
outsb
and
sbb
and
fwait
inc
lahf
xchg
pop
call
out
test
pop
and
rclb
jno
lods
sbb
and
ss
push
repz
adc
jg
das
adc
sub
xchg
in
or
sub
inc
lods
aaa
mul
sub
dec
dec
or
outsb
and
mov
push
sarb
loope
test
mov
mov
pushf
sahf
cmc
cmp
inc
jecxz
adc
mov
fdivr
das
xor
or
testb
adc
xchg
mov
pusha
das
mov
or
sub
ss
fs
out
or
jmp
sti
push
sbb
arpl
jmp
fucomi
jbe
mov
dec
dec
cltd
cwtl
dec
mov
push
test
loopne
or
mov
xchg
push
add
mov
fs
pusha
sti
xor
mov
int3
add
ljmp
out
shrl
ja
fiaddl
push
cmp
imul
add
pop
fwait
leave
xorb
rcrb
rcl
mov
cltd
add
mov
pop
out
pop
inc
lock
fldenv
mov
aad
lods
cmpsl
fcomi
xchg
cli
or
rcll
adcl
jbe
push
mov
pushf
dec
lods
cmpb
int
sub
lods
jl
or
nop
or
lock
jmp
enter
sub
int
mov
fwait
adc
cmp
mov
mov
andl
in
dec
sarl
jb
pusha
jl
repnz
lods
les
movsl
cltd
icebp
sbb
fdivr
subl
dec
ss
sbb
adc
enter
sub
ret
fldt
test
shll
sbb
test
push
lea
pop
rcll
insb
pop
pop
test
mov
and
xor
or
mov
jae
inc
jmp
sbbl
fisttps
cld
mov
jl
les
lret
sub
into
enter
arpl
jl
sub
jae
cmc
sbb
dec
repz
adc
lret
cld
jnp
aam
iret
repz
push
and
pop
imul
cmp
and
cmp
push
xchg
outsb
adc
xor
pushf
xchg
hlt
push
adc
jae
sbb
aad
std
pop
and
mov
pop
xchg
adc
fstpl
cmp
cmpsl
nop
pop
fbstp
dec
scas
addr16
aaa
mov
lods
scas
mov
cld
scas
mov
push
mov
jns
adc
cmpsb
lahf
jns
mov
push
jnp
idivl
fiaddl
mov
fwait
test
dec
mov
imul
adc
mov
je
les
aad
pushf
dec
lock
sbb
add
outsl
jle
jle
cmp
mov
into
dec
aas
ja
das
enter
mov
push
nop
pusha
cmp
sub
xchg
jge
test
int
movsb
xchg
mov
mov
dec
test
mov
fs
jge
sbb
mov
js
adc
in
stos
ds
inc
fstpl
popf
or
or
xchg
ret
in
add
or
ljmp
sub
pop
outsb
adc
sub
jge
nop
aaa
movsb
sahf
adc
scas
ss
mov
mov
jae
or
sar
adc
shll
clc
or
sarb
xchg
pop
imul
rolb
and
push
xlat
idivb
iret
hlt
mov
xchg
jle
pusha
clc
mov
clc
inc
fnstsw
repz
push
mov
ret
jmp
sbb
xor
jge
inc
inc
xor
inc
scas
sub
loopne
fists
lea
test
loope
mov
aaa
xchg
loope
fcoms
push
jae
sub
pop
add
mov
or
lret
jns
in
pop
fstps
repnz
roll
nop
ret
pop
add
jno
adc
mull
cwtl
sub
dec
ja
xchg
mov
lret
sbb
cmpsl
outsl
sbb
jle
and
xor
das
jno
jmp
push
pop
push
paddusw
dec
inc
inc
cmp
test
ja
and
cwtl
cmp
ror
icebp
leave
inc
les
outsl
sti
das
in
arpl
xchg
inc
mov
add
aaa
lcall
imulb
cmovno
cltd
cwtl
loop
pusha
mov
repz
call
xchg
jecxz
out
and
sub
push
pusha
jle
jne
jl
clc
fsts
adc
push
jb
arpl
jge
xor
or
pop
push
jbe
mov
and
pushf
cmp
mov
stos
jle
jmp
in
in
cmpsl
push
sar
mov
inc
dec
xchg
jns
lret
stc
cs
orl
gs
sbb
push
mov
popa
ret
dec
add
and
mov
and
aas
adc
pop
and
sbb
and
or
lret
in
pop
shll
sarb
ret
scas
cli
xor
mov
dec
mov
jge
xorb
jne
stos
test
push
stos
mov
data16
push
pushw
jo
aas
push
out
pop
out
rcrl
mov
mov
cmpsb
sti
in
fidivl
sbbl
mov
mov
stos
aaa
add
mov
mov
insl
inc
jns
push
jecxz
xor
mov
mov
cltd
jmp
inc
pushf
pop
cmp
dec
push
popf
xchg
push
movsb
mov
dec
fwait
jbe
add
fmuls
icebp
notl
pop
in
sbb
mov
into
icebp
adc
jbe
jae
jo
add
lcall
sbb
or
add
dec
icebp
inc
mov
pop
adc
dec
js
or
imul
pop
sbb
rorl
movsb
stc
sbb
sub
and
das
shll
jbe
and
or
pop
sbb
ds
int3
pop
pop
in
shll
inc
out
xchg
aad
fisttpl
lock
add
mov
outsb
ds
stos
mov
mov
ficoms
and
mov
es
gs
call
or
jbe
cmp
insb
xchg
mov
mov
scas
lahf
out
pop
popf
call
lods
mov
lea
inc
frstor
dec
mov
jg
jmp
lcall
xchg
mov
repnz
add
xor
xchg
fidivrs
dec
add
je
enter
scas
push
sbb
push
addr16
test
shlb
push
loopne
ret
adc
sbb
dec
or
sub
push
hlt
pop
adc
pushf
sub
shl
sub
xlat
push
xor
mov
mov
lahf
fdivrl
fs
ja
push
push
in
sub
mov
push
and
sub
iret
jge
scas
orb
loop
in
and
shll
cwtl
adc
pop
jp
jnp
mov
cltd
pop
sbb
cmp
int
jle
xchg
or
add
cmp
popa
xlat
inc
mov
lar
fisubrs
repnz
cmpsb
push
fnstenv
add
pop
mov
pop
addr16
scas
lea
ja
int3
jae
push
loopne
pop
cmp
xchg
cmp
imul
fldenv
jmp
wrmsr
cmp
sub
fnstenv
inc
add
ja
stos
mov
jb,pn
loop
inc
aad
imul
test
repnz
xor
jo
cmp
mov
fcmovnb
cmp
sub
push
loope
xchg
dec
sub
xor
negl
icebp
cmp
aas
sub
iret
fsts
cmp
sti
inc
cltd
inc
xor
xchg
test
mov
sahf
cli
orb
pushf
xacquire
aas
lea
test
sub
sar
in
mov
in
xchg
les
insb
fisubrl
inc
mov
lret
push
mov
sub
push
or
pop
jb
js
int3
xor
aas
je
shlb
mov
enter
int3
test
nop
icebp
xchg
into
push
push
sub
leave
sarl
sbbb
xchg
inc
shl
add
cmpsl
cwtl
jo
add
aaa
cmpsb
lock
adc
push
fdivrs
popf
and
test
pop
xchg
imulb
in
shrb
adc
in
movsl
sub
xchg
dec
aas
push
dec
std
cwtl
xor
cmp
push
stos
inc
xchg
mov
push
into
push
sbb
js
mov
inc
mov
and
adc
adc
lcall
pop
or
xchg
push
int3
ja
dec
dec
mov
xchg
push
cmp
cltd
sti
lahf
bound
and
lods
sbb
addr16
or
dec
fwait
and
aaa
cmpsb
mov
and
jp
add
push
cmpsb
insl
jns
pop
ret
xchg
mov
fs
fistl
inc
jmp
adc
jp
mov
xchg
adc
or
leave
inc
out
jle
dec
repnz
sbb
lods
dec
inc
cmp
inc
dec
cld
dec
mov
sub
jg
sbb
and
push
fldt
jnp
jmp
xchg
loop
mov
and
xchg
fnsave
popf
push
add
sbb
mov
repnz
xchg
iret
stos
or
lods
xchg
pop
and
pop
jns
sub
mov
xor
push
ss
pop
lods
arpl
divb
mov
jge
inc
xor
mov
or
cli
outsb
dec
jns
jge
or
pop
jnp
sub
add
outsb
xor
in
jmp
loopne
imul
and
inc
lock
jg
pop
outsl
and
sahf
push
and
pop
inc
push
stc
or
cmpsb
push
push
test
cmpsl
aad
and
leave
mov
sub
mov
mov
mov
and
jbe
cmp
loopne
sbb
int
dec
in
fistl
jg
sub
jp
bound
inc
sub
int3
imul
lods
jae
dec
adcb
insb
cmpsb
mov
jecxz
pop
add
enter
test
outsb
subl
or
test
movsb
or
into
jnp
js
push
adc
xor
mov
fmull
test
xchg
in
pop
out
nop
push
inc
cmp
mov
jns
mov
test
lahf
sub
pop
adc
fcomp
sbb
jno
cli
mov
or
push
aas
popf
mov
mov
cmp
jp
pop
mov
xchg
and
pop
push
mov
insb
imul
js
stc
out
vpaddsw
ret
mov
add
cmpsl
mov
in
addl
adc
je
inc
inc
fucomp
ljmp
ljmp
stos
sbb
push
cld
cwtl
mov
mov
scas
data16
movb
adc
mov
cmp
popa
jbe
adc
push
dec
mov
xchg
mov
test
in
or
jbe
fiaddl
mov
in
sbb
enter
lahf
fsubr
popf
jmp
aad
test
aas
lock
pushf
push
stos
fistl
or
or
fwait
stos
loope
dec
mov
scas
leave
loop
mov
packuswb
shl
fcomps
cmp
ds
sub
mov
je
sub
test
pop
dec
popf
sbb
test
mov
sub
push
cmp
mov
stos
mov
movsl
xor
pop
push
xchg
inc
sbb
les
hlt
clc
movsb
les
imull
aaa
and
add
addr16
or
xchg
hlt
cmp
fisubrs
leave
fidivl
fisttpl
sub
rorl
sbb
sub
scas
xchg
mov
in
hlt
push
or
xchg
jo
jl
inc
shlb
add
or
scas
lahf
cmp
sarl
popa
arpl
mov
repz
pop
push
fbstp
pop
hlt
or
or
sbb
into
enter
outsb
fbld
stos
mov
inc
inc
mov
aad
sub
or
test
mov
xlat
dec
pusha
adc
cs
cwtl
inc
faddp
testb
push
loope
mov
inc
test
mov
stc
dec
in
adc
sahf
popf
xchg
add
gs
or
adc
int3
xor
mov
int
test
mov
je
fisubl
xchg
sti
mov
imul
mov
inc
dec
cmp
sbb
repnz
xchg
mov
subb
and
jle
or
jno
xor
fildll
outsl
xchg
inc
test
leave
into
pop
add
push
push
jns
scas
imul
xchg
mov
pop
movb
xor
fsubrp
sub
cmp
movsl
ljmp
shll
xchg
add
ret
stc
lea
sub
daa
sbb
icebp
add
rcr
xchg
xchg
orb
push
scas
and
cli
cli
xchg
icebp
into
add
nop
xchg
push
cli
loope
mov
or
jne
add
movb
leave
jo
cli
mov
lds
and
push
sbb
push
lods
sahf
clc
adc
out
jb
mov
mov
sub
pop
and
mull
mov
mov
jns
outsl
xchg
aad
lds
aad
mov
cmpb
xor
jno
ret
mov
fwait
pop
cmp
xor
mov
jb
cli
testb
jnp
mov
jg
loope
mov
leave
jns
pop
push
sahf
shl
lret
jne
add
inc
adc
dec
add
cmpsb
fsubrs
iret
add
adc
inc
push
adc
xchg
jmp
jo
pop
iret
ficoml
movl
adc
pushf
jbe
jno
add
cli
test
sub
mov
ss
jge
inc
pop
pushf
rcrl
mov
hsubps
hlt
inc
shrl
add
cwtl
jge
cmc
adc
shlb
sti
xchg
inc
es
add
pushf
push
leave
or
bound
mov
or
adc
sub
mov
sbb
cmp
popl
scas
pop
mov
add
lcall
pop
sahf
arpl
jb
rorb
cmp
inc
pop
orb
jo
das
lods
stc
bound
es
clc
pop
or
mov
dec
popa
fs
nop
xchg
sbb
popa
js
test
data16
enter
cmp
shlb
out
roll
lret
test
sti
xchg
imul
mov
mov
xor
cmp
movsb
jno
or
sti
in
test
jp
jg
inc
scas
jecxz
insb
jge
dec
xor
inc
and
inc
in
jle
jecxz
mov
and
xor
test
stc
mov
mov
dec
out
shl
cmc
out
das
mov
fldln2
xor
addl
stos
adc
adc
fcomps
jl
xlat
repnz
mov
shrb
mov
repnz
push
jb
push
adc
enter
cmp
dec
cltd
pop
pop
xchg
inc
daa
xchg
xlat
dec
push
cld
mov
jl
fwait
in
adc
sbb
std
jae
lret
addr16
and
pop
mov
mov
pop
cmp
mov
sbb
mov
xchg
mov
sbb
inc
adc
push
push
lahf
stos
mov
pop
stc
push
scas
lock
xchg
mov
insl
or
test
iret
repnz
xchg
test
jge
push
nop
aaa
enter
lods
mov
cmp
or
xchg
push
dec
and
das
and
mov
hlt
fimull
push
adc
jg
sbb
lcall
adc
shl
xchg
fnstenv
sub
popa
movb
adc
mul
jp
loope
mov
js
sub
cmpb
mov
dec
pop
mov
xor
mov
and
sbb
loopne
mov
ja
cmp
push
subb
mov
cmc
sub
push
add
lret
in
call
data16
out
jmp
sbb
jecxz
das
xor
loopne
scas
icebp
jl
cmp
shrb
nop
mov
iret
insl
loop
lret
xor
push
mov
jp
movsl
pop
fnstenv
mov
aaa
iret
lea
cmpsb
dec
inc
and
inc
add
int
sbb
adc
mov
xchg
mov
stos
adcl
sub
ss
enter
mov
mov
xchg
les
lahf
add
adc
xor
push
sbb
bound
mov
jmp
sbb
xchg
fldl
mov
push
scas
jmp
adc
add
jne
inc
mov
mov
arpl
lods
or
outsb
pop
pop
push
outsl
xor
popf
mov
stc
xchg
fisttpll
rclb
dec
out
pop
gs
mov
or
lock
jns
pop
push
iret
or
addl
rcrl
push
and
std
cmp
mov
sarb
insl
out
in
hlt
push
dec
dec
cmc
ret
mov
das
sbb
push
clc
xlat
cs
addr16
orb
xchg
jbe
dec
imul
imul
adc
or
inc
fsubrs
jae
iret
stos
scas
shll
mov
jge
bound
mov
or
mov
mov
adc
sahf
and
push
push
mov
jmp
xor
xor
sahf
jecxz
jns
mov
xchg
mov
xor
dec
push
decl
outsl
fucomp
push
dec
imul
sbb
or
pop
outsl
and
pop
push
shlb
pusha
dec
or
sub
lea
in
push
mov
mov
xchg
inc
int3
or
addr16
mov
push
outsb
mov
cwtl
pop
mov
test
or
in
push
and
test
cmp
ds
pop
sub
aam
fwait
stos
popf
int
xor
stos
jno
cld
jbe
mov
mov
adc
stc
movsb
std
jmp
outsb
daa
and
repnz
jae
mov
mov
out
jb
into
bound
ret
and
mov
mov
pop
adc
sbb
jg
ljmp
enter
mov
sbb
sbb
mov
cmp
xchg
stc
and
lods
mov
sbb
mov
lret
jo
jg
test
iret
jns
cmp
push
dec
je
dec
xchg
cs
lahf
sbb
pop
mov
aam
pop
mov
cmpsb
xor
ss
dec
push
and
add
pop
fldenv
sbb
insl
fstpl
cmp
mov
lret
loopne
or
adc
sbb
mov
sbb
pop
add
sub
or
scas
pop
push
popf
clc
sbb
dec
dec
jge
daa
arpl
fsubrs
push
test
cmp
inc
lds
push
sti
into
and
mov
xchg
dec
lea
mov
out
loope
and
adc
sub
sub
dec
sub
mov
in
sbb
dec
repz
shll
xchg
lock
inc
or
mov
pop
inc
dec
or
mov
lcall
push
or
jnp
es
int
xor
ret
add
ja
dec
fsubr
dec
jmp
push
pop
or
andl
cmpsb
roll
or
hlt
jg
stc
jl
aad
ljmp
push
xor
add
fimuls
add
push
mov
dec
adc
lahf
enter
lret
jno
cmpl
jmp
outsb
adc
in
sbb
add
js
cmc
mov
fldenv
aam
xchg
fwait
dec
lahf
test
data16
stc
push
arpl
xor
insb
popa
in
insb
cwtl
dec
add
ja
insb
sahf
push
fisttpll
xchg
lahf
sub
xor
push
adc
loopne
xchg
rcr
add
popf
test
aam
pop
sbb
inc
mov
dec
pop
xchg
cmc
loope
xchg
jecxz
lret
mov
aas
push
out
rolb
cli
cli
mov
shlb
pop
sbb
mov
xchg
xor
or
cmc
push
out
lock
std
or
fnstsw
sub
cmp
andl
sarb
and
and
pushf
jnp
cmc
push
xor
pop
xorl
fadd
inc
clc
mov
jne
cltd
in
and
test
fstps
cmp
pop
pop
jns
push
xchg
loop
das
sbb
rcr
add
rcrb
cmc
mov
mov
imul
out
mov
push
mov
ja
push
mov
aam
dec
jge
lods
mov
in
idivb
jae
mov
fisubs
outsb
jbe
xor
cmpsl
sarl
cli
cmpsb
andb
jmp
push
loop
imul
push
dec
popa
insb
push
ret
into
insl
mov
pusha
inc
rcrb
dec
cs
xor
fidivrl
lock
fcompl
jl
ret
or
mov
stos
movsl
icebp
sub
xorb
pop
pop
jecxz
jp
movsb
bound
dec
jae
ljmp
dec
rcrb
imul
popf
inc
mov
and
in
sbb
jns
out
repnz
jp
jae
push
and
sbb
or
mov
mov
pop
inc
push
inc
jae
mov
shll
xchg
outsl
xchg
fimull
in
and
std
out
aaa
outsl
jb
ss
subb
aas
movl
and
repnz
and
cmp
aaa
xor
jmp
mov
jge
stc
fwait
mull
sbb
movsb
js
loope
push
mov
sub
stos
or
sbb
outsb
clc
mov
scas
xor
and
sub
cmp
xlat
mov
rclb
jp
cmc
inc
sbb
sub
cmp
pushf
imul
stc
jge
dec
movsb
sbb
mov
cmpl
mov
scas
push
nop
test
jbe
xor
orl
int
jg
inc
adc
push
push
inc
icebp
jmp
sbb
push
rcrb
and
stos
mov
scas
and
bound
pop
push
js
mov
add
cld
and
fisubl
scas
pop
push
fs
out
in
mov
fs
jle
jo
inc
sbb
daa
pop
nop
lret
push
push
xchg
pop
inc
into
mov
xor
popf
rorb
mov
movsl
movsl
fnstcw
cld
mov
fnstcw
inc
adc
fmuls
cmc
xchg
push
jecxz
aaa
jns
pop
lret
pop
push
xchg
pop
dec
jecxz
add
mov
or
pop
push
sub
and
or
bound
pushf
int3
mov
nop
xchg
scas
dec
mov
add
out
add
in
sahf
add
fwait
push
and
mov
das
enter
nop
push
inc
xor
fs
out
mov
push
cmpsb
push
adc
xchg
out
ret
int
pusha
test
add
inc
aas
rorb
push
addr16
sbb
xchg
pop
fwait
test
jp
cli
aaa
jno
adc
push
pop
lods
inc
int3
jp
bound
loop
adc
mov
int3
add
mov
stos
and
clc
int
mov
lret
push
mov
nop
xor
sarl
les
xor
out
sub
cs
and
mov
aad
cmp
sub
jg
out
pushl
lods
jp
in
inc
rorl
test
lds
jle
in
in
fisubrs
xor
cwtl
repz
sbb
in
dec
mov
mov
shll
mov
adc
ss
orl
push
ret
out
out
cmpsl
and
inc
mov
lret
inc
sbb
aad
or
stos
inc
shrb
sub
dec
test
gs
lock
pop
or
fisubrl
rclb
es
shlb
mov
outsb
inc
fldenv
outsl
pop
stos
pop
pusha
arpl
shl
es
in
cs
aad
movsb
mov
mov
fcoml
addr16
mov
inc
jo
mov
push
mov
pop
xchg
push
jnp
sti
sub
mov
loope
adc
cld
and
repnz
dec
dec
pop
ret
arpl
test
jg,pt
mov
xchg
out
cltd
orl
aam
iret
lock
mov
pop
mov
idivb
xor
mov
jl
sub
pop
loope
push
dec
push
xor
push
in
jns
arpl
lods
nop
sahf
sbb
fadds
nop
mov
mov
loopw
add
mov
push
call
ss
mov
dec
fsin
mov
cmp
adc
adc
mov
mov
push
push
push
and
add
jae
into
xchg
xchg
xor
lcall
iret
jmp
jl
fistpll
inc
pop
cs
ficoml
or
fcompl
stc
cmp
loop
and
push
stc
fmuls
lods
orl
jecxz
inc
ret
movsl
sub
test
enter
mov
shlb
fimuls
ja
rolb
inc
jb
inc
shlb
inc
rcll
imul
jl
jmp
test
cmp
dec
adcb
stos
lods
mov
mov
jns
inc
mov
int
jge
repz
adcl
sub
dec
sbb
xchg
into
push
xchg
mov
xchg
sbb
nop
push
or
rcr
mov
ds
je
js
xchg
or
loop
xchg
pop
cmpl
popa
iret
mov
movsb
sbb
pop
in
sub
rorl
loope
mov
mov
in
ljmp
clc
jle
pop
insl
test
ret
in
test
mov
rclb
mov
mov
ficoms
js
or
fs
or
pop
jnp
fnstsw
outsl
in
sbb
sub
movsb
mov
push
repz
jno
cs
adc
ja
xor
xor
mov
dec
cmpsl
movnti
push
ds
cmp
stos
adc
lods
lret
inc
sbb
mov
gs
add
xchg
push
ljmp
imul
jle
xor
loop
lods
push
xor
cmpsl
push
iret
push
addr16
mov
mov
dec
lds
pusha
sbb
imul
clc
fimull
rolb
push
es
lea
icebp
outsl
adc
pop
jne
push
jo
negl
lea
cmp
mov
jb
mov
les
cmp
lods
cwtl
in
pusha
out
ret
jno
cmp
je
les
int3
xchg
inc
insb
mov
dec
xlat
pop
movsl
test
out
sub
xor
stos
push
mov
add
ljmp
call
jp
outsb
or
rcrl
jae
aad
xlat
mov
fistl
pop
push
fisttpll
jae
adc
xchg
popa
push
std
push
push
sti
add
sub
mov
ret
ss
jl
xchg
xchg
mov
imul
ret
mov
push
dec
ffree
jne
adcb
sub
out
cmp
mov
xlat
mov
je
into
push
cmp
scas
xor
xchg
fmuls
mov
and
jae
ror
and
rorl
loopne
jnp
in
popf
es
lods
outsl
cmpb
lods
lock
xchg
cwtl
icebp
push
inc
and
ficoml
scas
xchg
daa
add
lods
mov
sbb
in
lods
add
sbb
ficoml
imul
mov
xchg
push
inc
xchg
pop
icebp
scas
jge
cltd
pop
aas
arpl
inc
call
je
sbb
sub
xchg
mov
stc
inc
push
rcl
pop
test
push
iret
lock
push
xor
adc
mulb
jecxz
testb
cmc
sub
outsl
pop
dec
test
xchg
dec
mov
shl
jae
dec
repz
pushf
or
pop
pop
sub
ror
push
mov
test
rorl
add
or
mov
clc
jp,pn
jle
movl
dec
ret
aaa
arpl
pop
mov
daa
in
out
jl
sbb
or
push
mov
mov
add
int
fwait
push
inc
lret
enter
stos
test
adc
add
pop
xlat
ljmp
push
and
cs
ja
push
aam
roll
sub
xchg
ja
dec
adc
push
out
out
mov
jae
adc
stos
repnz
dec
inc
stos
loopne
sbb
repnz
repz
mov
das
das
xchg
inc
xchg
lret
popa
shll
xor
mov
sub
adc
test
add
shrb
call
inc
xlat
mov
jecxz
add
push
je
in
mov
inc
push
sub
jmp
imulb
xchg
mov
cmp
loopne
dec
jno
and
fcmovnb
data16
jne
lds
jmp
std
setp
inc
cmc
adc
and
jge
cmp
xchg
pusha
lds
add
add
sbb
insl
js,pn
daa
push
jo
or
xchg
mov
xchg
sub
and
stos
push
pop
loopw
dec
or
push
cmp
aas
mov
jb
shrl
lock
cmpsb
adc
pushf
xor
xor
inc
jnp
movsl
cltd
sub
lods
sbbl
add
scas
mov
and
loope
xlat
fisubrl
push
mov
in
sub
mov
in
fistpl
mov
xchg
les
push
cwtl
inc
pop
and
push
mov
jb
inc
call
push
jle
cmp
cmp
push
jecxz
lods
loop
mov
ljmp
jb
leave
movsb
push
stc
pop
inc
xchg
mov
xchg
rcrb
int3
js
push
jmp
pop
psubusb
cli
cmp
inc
ret
mov
sbb
mov
push
pop
ret
adc
and
lea
lahf
daa
pushl
pop
int3
jbe
ret
or
orb
aas
adc
stos
arpl
mov
jbe
jp
adc
sbb
lret
sub
lock
sahf
jae
addl
cmpsb
cmp
in
mov
out
icebp
movsb
outsb
pushf
out
imul
adc
movsb
add
les
xchg
xchg
cmp
ss
xchg
add
and
mov
xchg
sbb
inc
inc
rolb
aad
mov
inc
add
cmp
jae,pn
mov
push
dec
mov
mov
inc
into
sti
fmul
rolb
ss
sub
mov
roll
xor
jns
mov
mov
dec
fnstsw
xchg
xchg
imul
xchg
jge
adc
sarb
xor
pop
dec
jge
repz
aaa
nop
jbe
cmpsb
jp
pop
sub
and
and
sar
adc
outsb
xchg
push
loopne
mov
sbb
and
dec
into
mov
mov
push
push
sub
push
push
js
push
mov
es
ss
lahf
clc
nop
mov
dec
aas
jbe
and
mov
mov
jns
adc
popl
in
repnz
insb
cmp
dec
mov
out
and
pop
xlat
lock
mov
aas
mov
xchg
sbb
jb
mov
lock
popa
sub
xor
daa
dec
cmp
ljmp
push
les
inc
push
add
jg
mov
and
sub
div
pop
aaa
pop
rolb
sub
push
sbb
and
xchg
add
sub
loope
mov
js
jbe
test
in
push
xchg
add
orl
add
test
xchg
mov
fldcw
pop
mov
jl
pusha
pop
aas
add
outsb
xchg
shl
fsubp
jno
xchg
inc
popf
xor
repz
sub
adc
dec
sub
xor
adcl
outsb
cmp
or
outsb
lods
jne
or
scas
loopne
ja
xor
jbe
loope
stos
xorb
sbb
ds
sbb
jl
pop
ja
xchg
std
push
xor
fists
aas
dec
bound
mov
ss
repnz
cli
mov
pop
imul
mov
out
les
cmp
inc
or
insb
or
ja
arpl
movsb
jp
jns
fisttpl
sub
or
and
mov
sub
shlb
inc
in
data16
sbb
rorb
lret
xchg
ret
dec
xor
jp
add
hlt
sub
mov
mov
mov
imul
sti
jmp
pop
push
lds
gs
stos
maxps
or
xor
sti
mov
ret
mov
insb
sbb
inc
sub
xorb
jb
lret
pop
adc
jmp
loope
sbb
add
xor
hlt
sti
xor
jmp
outsl
or
mov
push
jle
inc
and
push
cmp
inc
rcll
out
sbb
movsl
in
and
dec
sbb
ret
inc
cmp
fsubs
dec
icebp
and
jp
mov
bound
dec
cs
jmp
pop
je
dec
aam
outsb
dec
and
fdivrs
aam
sbb
pop
mov
lret
fadds
sti
shl
mov
adc
or
mov
sub
xchg
mov
dec
insl
mul
jae
fiaddl
stos
inc
sbb
fidivl
in
adc
pop
sbb
loope
scas
sbb
mov
shlb
ret
jb
push
arpl
push
std
outsb
test
xchg
icebp
mov
push
cld
mov
test
rolb
sbb
or
cld
insl
adc
pusha
insb
out
fndisi(8087
mov
aad
xor
insb
loop
jmp
push
scas
or
scas
dec
jp
and
repz
add
sub
lret
or
xchg
xchg
dec
fdivrp
mov
pop
mov
cmpps
mov
or
mov
movsl
imul
and
je
pop
stc
xchg
rcl
lods
call
inc
nop
dec
jmp
sbb
fwait
scas
push
nop
jge
pop
in
sti
pop
lret
out
leave
imul
or
repz
xchg
jne
dec
sahf
iret
jno
mov
sti
mov
cmp
xchg
stc
add
in
shlb
cltd
int
push
jbe
pop
dec
lret
scas
push
dec
mov
push
dec
test
xchg
std
pushf
or
sbb
pop
in
mov
push
push
les
out
fs
std
xchg
clc
arpl
js
dec
adc
xor
xlat
jno
pusha
out
xchg
dec
or
dec
pop
stos
jae
cmp
push
add
stc
clc
dec
repnz
and
pop
sub
sar
mov
call
cmp
mov
idiv
jne
xorb
mov
sahf
out
pop
sbb
jge
jp
sbb
adc
sbb
sahf
mov
jno
push
push
das
stos
incl
cmpsb
and
push
movsl
push
fstl
test
push
sbb
aas
aas
add
mov
in
lcall
out
adc
mov
stos
mov
test
loopne
mov
xchg
fcmovnu
fcomi
iret
arpl
inc
cmp
imul
lcall
and
sahf
cs
cwtl
jb
cmpl
jge
cmp
pop
jge
add
js
mov
daa
xorb
add
decl
pop
dec
daa
push
addr16
addr16
arpl
orl
in
xor
push
or
sahf
mov
jb
in
push
ljmp
in
mov
fucom
faddl
mov
pop
test
fucomi
cmp
lret
pop
lock
inc
sub
scas
and
stc
lret
jmp
repnz
add
jo
lcall
mov
lock
leave
movsl
adc
ret
iret
mov
mov
jg
jmp
cmpsb
nop
adc
or
loope
cmp
and
cld
addb
jp
fnstsw
cmc
sbb
in
or
mov
jmp
bound
icebp
sub
jno
outsl
testb
jne
fdivs
lods
clc
sbb
xor
popf
dec
xorl
dec
out
std
pop
sub
cwtl
push
repnz
leave
jnp
imul
icebp
fst
mov
clc
xor
int
call
cwtl
lret
out
insl
xchg
sahf
dec
cmp
std
pop
mov
out
cmp
and
cmovb
cmp
stc
fstpt
int3
bound
sbb
loopne
mov
div
adc
subl
sub
fiadds
sarl
dec
lock
xchg
movl
xor
dec
ds
inc
fadds
test
xor
jb
mov
test
sub
mov
fsubrs
push
xor
loop
out
push
sbb
jae
sarl
jnp
jmp
push
mov
jecxz
inc
or
jecxz
psraw
stos
cmp
xchg
hlt
inc
or
mov
icebp
orb
sahf
test
sbb
cli
sbb
arpl
mov
sub
sahf
push
pushf
imul
or
push
lahf
enter
mov
fsts
rcr
jmp
rcrl
adc
pop
sbb
iret
xor
adc
outsb
mov
subb
mov
dec
stc
fcomp
and
js
insb
inc
clc
lahf
jp
fdivs
inc
jb
out
push
mov
xchg
dec
test
test
sub
pop
fldenv
lock
and
nop
mov
stos
les
in
ret
jo
aas
adc
mov
clc
jae
dec
popl
cwtl
xchg
mov
xor
mov
push
fldt
shll
sti
stos
add
cmpsb
pusha
xor
scas
ficompl
xchg
rclb
and
mov
sbb
cmp
loope
fwait
inc
out
loop
bound
insl
pop
hlt
sahf
loope
dec
in
repz
ljmp
xor
aad
adc
cmpl
hlt
and
and
xchg
mulb
xchg
sti
jne
outsb
fcmovbe
int
lcall
jecxz
std
mov
insl
fnstcw
popf
mov
dec
pop
pusha
jne
and
add
xchg
test
jl
sbb
xor
sub
scas
pop
jne
jg
and
pop
fptan
mov
pop
call
push
fwait
xchg
lcall
cld
mov
or
adc
adc
jno
jae
push
add
cmp
std
jmp
cmp
push
lcall
bound
add
jno
mov
push
mov
lock
sub
inc
sub
scas
sbbl
ficomps
orb
ret
pop
int3
mov
js
out
mov
cmp
inc
enter
jge
dec
insl
pop
jno
sub
or
andl
mov
xchg
mov
inc
loopne
xor
or
mov
sbb
mov
push
or
into
mov
outsb
pop
in
test
cmp
and
xchg
in
inc
std
scas
aam
inc
ss
lret
jno
outsb
push
int3
insl
pop
xchg
xchg
repnz
adc
mov
sub
cmp
fisubrl
xor
xchg
dec
mov
jno
cltd
inc
movsb
mov
mov
shrb
and
dec
push
mov
fidivrs
test
insb
xchg
loop
mov
push
aad
movsb
insl
mov
inc
push
mov
ljmp
mov
aas
and
jp
sbb
push
pop
hlt
cmp
mov
pop
leave
daa
push
loope
dec
shrl
test
jae
shlb
push
dec
mov
mov
xor
test
inc
ficoms
or
stos
in
xchg
xchg
pop
inc
ljmp
lods
nop
mov
mov
test
aad
lds
sub
out
in
ljmp
ficomps
mov
orb
and
push
xchg
ljmp
add
imul
lods
test
dec
xor
push
inc
cmp
sub
add
sub
shll
in
or
jle
fstpl
mov
ljmp
ret
and
shlb
imul
mov
mov
mov
xor
stos
add
mov
pop
les
lcall
scas
mov
push
popf
and
rcrb
inc
sahf
imul
pop
push
inc
inc
and
pusha
loopne
test
jp
icebp
stos
mov
in
fimull
out
es
adc
pop
dec
cmpsb
int
cmpsb
mov
or
pop
add
aad
loop
filds
js
ret
lret
sub
push
out
and
push
pop
mov
js
std
lea
sub
adc
loopne
lret
adc
sbb
dec
jno
push
lahf
push
add
dec
fistps
insl
cmc
gs
ja
mov
mov
jbe
hlt
mov
sub
repz
add
xchg
add
pop
push
mov
xor
pop
adc
or
xchg
maskmovq
idivl
xchg
lods
out
push
andl
mov
cmpsb
sbb
push
push
add
jg
xchg
out
fs
mov
xlat
insb
pop
jae
dec
adc
divb
iret
cmp
and
sub
cmpsl
pmulhuw
nop
sbb
test
adc
mov
popa
jb
sbb
aam
stc
jg
sbb
sahf
xchg
sub
adc
int3
dec
mov
psllw
and
adc
mov
repz
lds
adc
test
test
mov
xor
xor
stc
leave
aaa
push
in
adc
push
pop
jmp
out
enter
add
repnz
xchg
dec
xlat
lret
or
cmpsl
gs
jae
lahf
clc
mov
push
ljmp
pop
sub
mov
aas
nop
out
mov
jp
xchg
lock
nop
push
std
sub
adc
adc
jmp
int
mov
inc
fwait
adc
push
fs
imul
jle
incl
cwtl
orb
fcompl
pop
sbb
inc
mov
add
cld
sub
roll
nop
cmc
sub
adc
mov
int3
sub
out
test
cs
xchg
sub
mov
fsubl
cltd
cltd
inc
jae
and
jmp
imulb
in
pop
xchg
arpl
push
test
or
rcr
add
jbe
insb
stc
add
test
add
mov
mov
neg
lea
mov
out
rclb
sbb
pop
insl
pop
pop
jae
push
cmp
sarl
push
push
jns
push
outsb
rcll
jae
cmc
popa
push
iret
sub
sbb
js
insb
jl
call
out
dec
aad
sub
mov
fisubrs
in
xchg
cli
jp
adc
js
mov
bound
std
arpl
or
mov
sahf
sub
divl
repz
jbe
fstps
ret
pop
and
pusha
ret
cli
jle
adc
stc
in
and
cli
add
cmc
mov
sub
jbe
xchg
repz
fadds
sbb
in
add
push
push
jl
jmp
cmp
addb
pop
adc
stos
iret
sbbl
fcmovnbe
decl
popa
hlt
insl
out
outsb
shr
jo
test
xchg
and
mov
std
call
mov
and
pushf
xchg
ror
jb
lds
push
and
adc
add
jg
cli
rorb
and
movsl
push
mov
lea
cwtl
in
mov
sahf
faddl
push
and
in
xorl
das
sub
sub
xchg
sbb
fisttpl
dec
lret
xor
add
call
adc
jecxz
addr16
xchg
into
iret
add
sarl
adc
mov
add
jecxz
dec
cmp
les
out
hlt
cmpsb
loope
enter
sub
push
dec
dec
iret
inc
aaa
sub
xchg
stos
jg
push
xchg
dec
and
into
or
bound
and
aaa
pop
arpl
std
sbb
xchg
in
sub
mov
sub
loopne
scas
add
data16
jl
mov
mov
sbb
and
push
push
into
inc
ficoml
ja
mov
mov
imul
xchg
dec
lock
ja
imul
dec
dec
pop
mov
dec
mov
fdivrl
movsl
ficoml
cwtl
lds
xor
lea
adc
and
das
adc
jmp
dec
cmpsb
xor
adc
add
jg
jae
adc
pop
mov
jae
das
push
imul
cmp
mov
pop
or
xor
cmp
ljmp
js
add
in
popa
push
push
aas
add
cmc
mov
sbb
loop
mov
and
dec
mov
inc
xchg
leave
in
cs
or
lahf
inc
les
jge
push
or
adc
lods
out
fcmovu
mov
clc
lods
mov
inc
cld
inc
sub
outsl
call
cmpsl
mov
cmp
cmp
cwtl
mov
roll
push
or
push
sbb
rcrl
rolb
jne
xor
dec
leave
in
aas
arpl
idivb
add
mov
dec
aas
cmp
dec
repz
cli
clc
out
aad
jae
cltd
into
pop
test
dec
jb
loop
xchg
loope
xchg
xchg
shrl
subl
orl
ss
mov
xor
or
int3
jp
aad
xchg
or
gs
shlb
mov
scas
jecxz
lret
sarl
add
dec
adc
in
mov
pop
pushf
and
xlat
iret
inc
mov
das
or
in
cmp
aad
aad
xor
mov
xor
loop
sub
inc
or
jne
fcoml
add
gs
aas
or
leave
or
fdivr
dec
inc
out
loopne
pop
and
dec
out
add
push
xor
jp
arpl
out
inc
cmpsl
or
int3
call
iret
movsl
push
inc
lea
add
add
add
and
mov
push
pop
cmc
and
fisubrs
mov
jecxz
leave
aad
dec
fwait
cmp
jbe
out
sub
movsb
push
and
fmuls
mov
cmpsl
and
push
add
aad
adc
and
pop
mov
andl
loope
mov
std
mov
jbe
add
cwtl
jns
ret
cltd
pop
cli
add
mov
arpl
scas
inc
jl
dec
rolb
mov
dec
fiaddl
andnps
push
fnsave
ficompl
xchg
int
lock
inc
mov
sbb
sub
in
jg
dec
or
pop
jecxz
icebp
nop
mov
push
loopne
and
scas
push
imul
or
int
sti
cmc
mov
push
or
into
pop
sbb
iret
rcrl
mov
into
push
lret
inc
stc
xor
xchg
lock
cwtl
loope
lds
adc
sbb
loope
insl
stos
mov
inc
roll
shlb
adc
dec
add
push
push
or
push
test
std
stos
in
std
and
or
mov
jae
and
adc
fldcw
xchg
inc
jp
push
rcl
shrb
sahf
adc
or
and
xor
add
cmpsb
jle
dec
mov
movsl
test
and
cmp
cs
data16
sti
cmp
sbb
ficoms
ja
into
push
outsl
lods
mov
push
sbb
add
popf
out
and
rorb
ja
sbb
xchg
aad
mov
ss
lret
mov
scas
fisttps
mov
jnp
outsl
mov
insb
outsb
dec
mov
jns
jle
dec
pushl
and
cmp
mov
lods
hlt
mov
repnz
into
mov
lds
sbb
xchg
hlt
out
jo
dec
mov
fcomp
imul
add
scas
ss
mov
outsb
inc
arpl
aad
add
jne
scas
insb
jne
in
jae
stc
sub
lcall
sub
sub
sbb
push
notl
in
lods
test
addr16
push
inc
mov
test
icebp
nop
ljmp
push
mov
mov
scas
dec
sti
fwait
mov
adc
imul
fsubrl
pop
xor
in
repz
lea
cli
push
scas
cld
jmp
arpl
adc
push
mov
xor
sar
lea
xor
add
call
sti
inc
adc
stos
cli
mov
stos
adc
sbb
cld
lret
xor
leave
xchg
jnp
test
jns
addr16
ss
inc
dec
xchg
aam
inc
xchg
adc
or
jae
jno
sahf
sbb
outsl
pop
sahf
aam
rcll
mov
xchg
push
movl
pop
sub
add
mov
aam
cmp
loopw
fdivs
das
push
sbb
mov
movb
sub
fsubs
push
dec
push
add
jns
dec
cmpsl
movsb
dec
mov
mov
add
or
in
ret
xor
push
lods
pop
cs
testb
jle
les
push
cli
movb
clc
aas
inc
xchg
jp,pt
jmp
sub
cmp
xor
idivl
cmp
and
sub
dec
aad
mov
loop
adc
xchg
add
jne
icebp
mov
pop
cld
xor
inc
insl
orb
jmp
push
adc
out
lods
fwait
xchg
lock
mov
cs
jmp
cmpsl
test
icebp
push
fnstsw
jne
stos
cmc
mov
xor
mov
pop
mov
test
es
jb
notb
pop
push
pop
and
lods
mov
rclb
ret
inc
insb
xor
cmp
btc
dec
xor
jl
cmc
jno
mov
push
sbb
in
lahf
sbb
cmp
fcoms
sub
call
jg
leave
jg
cmp
popf
add
or
bnd
xlat
lds
mov
sub
scas
push
xor
scas
jae
loope
inc
iret
xchg
push
fildl
adc
or
stos
and
ret
lret
jbe
test
stc
mov
sub
inc
sub
fisubrl
push
sbbb
add
popa
push
fcompl
call
add
test
lahf
lods
mov
dec
dec
ret
add
shrb
pop
sti
jb
imul
add
push
ffree
sub
scas
jo
push
inc
mov
mov
mov
std
dec
xchg
ficoml
mov
aam
pop
lret
aad
or
dec
cmp
movsl
imul
push
mov
inc
inc
push
sarl
je
push
cld
js
and
xchg
mov
loope
or
add
cmp
mov
aad
sub
sub
fsubp
aad
aaa
mov
sahf
pop
fnstsw
aad
or
mov
push
clc
insb
cmp
jg
fcompp
mov
pop
shrb
mov
aaa
or
lahf
push
jno
pop
into
lods
shll
pusha
hlt
loopne
sti
mov
or
xchg
sub
mov
pop
daa
loopne
pop
pop
sub
fistpl
data16
add
adc
push
mov
pop
inc
data16
cld
xlat
in
mov
push
jb
lahf
pop
cld
mov
xor
lods
xor
insl
popf
jl
iret
stc
cmp
mov
outsl
es
inc
push
sub
arpl
bound
cli
addr16
pop
insb
mov
aas
cmp
cmp
dec
jge
mov
into
jmp
mov
sarb
les
lahf
popa
adc
lds
or
leave
dec
sub
lock
push
or
iret
clc
lret
hlt
mov
rcrb
int
imul
xor
movsl
xchg
test
es
test
outsl
inc
lahf
data16
push
test
in
push
repnz
mov
dec
pop
add
add
dec
and
or
mov
inc
ret
stc
iret
in
inc
mov
in
call
icebp
jne
ja
ret
push
add
in
or
shrb
xor
cmp
jl
pop
adc
lock
verr
mov
fcoms
push
push
inc
xor
nop
fldcw
dec
ret
dec
cs
gs
mov
jae
aaa
pop
fcomi
call
pop
dec
cmp
sbb
aam
sbb
stc
aas
pop
mov
scas
mov
lcall
pop
mov
sub
mov
loop
shll
mov
imul
sub
scas
mov
push
or
loopne
sbb
cmp
and
ja
popf
insb
sub
xor
pushf
outsl
int3
sub
aaa
daa
mov
xor
inc
cmp
and
into
mull
cli
scas
push
mov
repnz
stos
xchg
popf
js
mov
notb
push
jb
rorl
clc
xchg
push
xchg
imulb
adcb
dec
outsl
jns
jp
es
arpl
test
sub
jno
and
mov
pusha
mov
and
sti
dec
mov
je
jle
sbb
iret
mov
jns
mov
js
test
pop
sbb
mov
cmp
ljmp
dec
pop
jp
sbbl
out
inc
andl
jge
out
ret
mov
pop
jbe
outsl
push
outsb
cmpsl
arpl
sbb
xor
push
pop
pusha
cmp
sub
adc
insb
add
movsl
sahf
push
xor
cmp
loop
iret
sbb
dec
dec
sub
icebp
push
lahf
insb
cmc
bound
push
add
xchg
push
pop
adc
das
daa
lret
sbb
pop
xlat
iret
mov
adc
ret
fs
loopne
lret
mov
jno
into
mov
mov
lods
and
inc
sbb
mov
lock
test
fs
fwait
push
psubusw
push
mov
push
and
dec
dec
fisttpl
jae
ljmp
sbb
pop
mov
sahf
das
sub
jmp
push
adcb
fildll
jg
mov
lods
icebp
outsb
dec
ss
mov
jo
mov
inc
loopne
mov
add
xchg
fnstsw
ja
adc
add
ss
push
ret
inc
mov
push
jb
mov
into
outsl
insl
xchg
insl
out
insb
rcl
sbbl
arpl
cmp
rcll
mov
sub
inc
or
sbb
stos
into
inc
clc
jmp
mov
sbb
sub
test
jnp
push
repnz
sub
sbbb
mov
add
add
mov
inc
and
jp
fadds
sbb
cmp
aam
sbb
jne
sub
outsl
dec
add
faddl
push
xchg
push
push
push
jae
mov
cld
mov
push
inc
jg
cmp
jmp
in
sbbl
push
push
out
sar
and
fcoml
je
push
push
insl
pop
mov
adc
loope
cmp
js
push
stc
arpl
or
mov
mov
xor
mov
adc
lods
popf
or
xor
sbb
rcr
movsb
stos
inc
push
mov
dec
and
lods
sbb
jle
add
mov
repz
mov
jle
mov
sbb
sbb
jnp
mov
scas
test
sub
movsl
mov
jle
add
mov
jb
mov
int
pop
or
pop
rcl
dec
xchg
xchg
rep
xchg
push
lret
out
loopne
loop
push
and
lods
lcall
or
mov
lahf
cld
mov
notl
lcall
lods
mov
jae
scas
inc
in
mov
stos
or
into
add
push
cmpsl
orb
call
cmc
faddp
mov
push
jb
cltd
adcl
insb
cs
dec
enter
push
int
scas
push
int
cmp
push
es
jl
mov
ss
add
xorb
push
adc
adc
sbb
loop
push
jne
arpl
neg
sbb
sbb
pusha
out
sub
sbb
aam
jle
rcrb
jge
stos
insl
xor
xchg
xor
dec
fxch
add
rclb
scas
mov
sub
inc
push
xlat
lea
cmp
lret
sbb
call
mov
dec
inc
pop
mov
inc
or
scas
mov
aas
mov
cmp
and
rorb
adc
xchg
xlat
pushf
xchg
push
loop
mov
sbb
adc
pop
loopne
test
push
mov
pop
dec
jmp
push
clc
daa
adc
lahf
jnp
xchg
mov
ljmp
daa
out
and
rorb
mov
push
mov
dec
pop
and
cmp
in
cmp
push
ret
das
imul
out
xlat
inc
in
pushf
pushf
imull
pop
jg
push
inc
das
push
lcall
out
inc
sbb
std
in
out
fldt
hlt
jl
or
mov
popa
mov
popf
nop
popa
adc
mov
test
xor
xchg
dec
sub
cmp
xchg
and
push
popa
bound
popa
shl
adc
mov
xor
push
repnz
dec
stc
fs
cmc
jg
and
xor
dec
mov
fcom
test
adc
lock
cld
jle
dec
imul
scas
test
mov
sbb
fptan
movsb
shlb
lock
mov
arpl
es
dec
inc
into
push
push
dec
lret
pop
data16
mov
jecxz
xchg
aam
and
ljmp
pop
jbe
in
sub
out
hlt
jno
jmp
dec
push
xor
mov
xchg
shll
inc
adc
stc
xor
mov
mov
dec
popf
sbb
sub
pop
pop
push
add
ja
subps
popf
arpl
jmp
xchg
add
mov
push
repz
icebp
cwtl
xorl
test
stos
movsl
popa
sub
and
and
jne
bound
xchg
inc
push
mov
xchg
push
xchg
xor
div
repz
jg
fmuls
addr16
js
clc
das
or
fidivl
inc
mov
insb
ljmp
aam
lret
mov
mov
cmc
shll
mov
push
imul
in
cmp
xor
imul
jno
cmp
out
lahf
jnp
shrb
setl
movsb
xor
inc
into
xor
push
test
fnsave
jno
fimull
and
xchg
xor
xor
xor
push
test
ret
mov
inc
xor
ret
dec
test
and
push
lods
and
ja
push
cli
icebp
push
adc
je
ds
cld
sahf
jbe
add
sbb
inc
adc
dec
inc
rorb
test
sub
dec
sub
imul
pop
cmp
lock
clc
xor
xchg
pop
cmp
shll
nop
cmp
mov
nop
add
jbe
cmpsl
outsl
pop
loope
cmp
sub
mov
ja
stos
sub
mov
mov
jle
add
hlt
push
inc
sbbb
data16
xor
or
dec
jnp
mov
jl
iret
cli
imul
pusha
cmp
mov
out
mov
bound
xchg
xchg
bound
jp
push
adc
jbe
cld
jb
movd
xor
or
sub
adc
sbbl
test
jno
sbb
sbb
mov
mov
cmp
xor
xor
xchg
pop
cltd
aam
pop
mov
jg
mov
lret
adc
and
xchg
sub
arpl
pop
cmp
dec
test
push
outsl
pop
mov
jb
rorb
adc
mov
xchg
sbb
xchg
xchg
and
xor
cld
adc
popa
adc
mov
cli
addr16
js
repz
sar
push
lret
loope
xchg
jmp
fwait
icebp
pop
add
loop
sbb
inc
insb
push
clc
ss
add
mov
sub
pop
or
js
out
lock
mov
jo
xor
jb
out
jno
and
cmpsb
hlt
fstpt
sub
out
mov
xchg
pop
pop
pop
add
xor
or
jmp
jne
mov
adc
xchg
sti
xor
lods
add
mov
mov
mov
cmc
lret
or
adc
insl
mov
pop
dec
out
cmpsb
aaa
dec
mov
in
push
outsb
fadds
push
in
out
mov
fld
lcall
xor
push
fdivs
into
dec
mov
lahf
les
and
dec
jge
lcall
and
jl
cmp
outsl
mov
mov
cmp
lds
push
je
scas
jl
push
mov
sub
incl
cs
mov
xchg
in
jae
ja
jl
js
out
in
scas
jl
sub
push
sbb
mov
inc
or
xchg
gs
lock
pop
pop
out
jno
xchg
pop
sub
cmp
add
dec
pop
cmp
xor
xor
adc
js
add
pop
dec
rcl
sub
sub
mov
mov
out
lcall
add
pop
test
xchg
jl,pt
shll
repnz
rcrl
dec
sbb
or
clc
fwait
dec
cmpsl
ja
jo
jmp
iret
scas
shlb
jmp
testl
in
xchg
xor
pop
cld
cli
jae
insl
cli
push
jne
xchg
inc
lods
popf
bswap
mov
inc
jb
xchg
mov
les
je
popa
stos
in
sar
pop
stc
out
inc
cmp
add
bound
aam
or
cmpsl
xorb
ret
cmpsl
icebp
fbld
test
dec
cmpsl
dec
adc
pusha
enter
push
jecxz
enter
xchg
mov
sub
lods
hlt
jns
out
stos
cmpsb
push
dec
cmp
out
jp
lock
nop
push
mov
mov
lea
pop
lods
popf
jmp
xchg
outsb
mov
repnz
in
int3
fxch
push
push
jb
fwait
lock
shlb
mov
xchg
mov
jne
jo
jne
decl
jecxz
sub
mov
xchg
and
jb
test
ret
mov
insb
leave
inc
or
rcrl
add
ret
or
in
mov
xchg
inc
test
mov
mov
mov
imul
mov
jmp
fsubrl
mov
adc
lods
dec
add
xchg
mov
int
outsl
xchg
int
mov
jnp
push
test
add
and
xor
xor
dec
mov
addl
testb
mov
push
lcall
lods
mov
cmp
out
xchg
mov
mov
jg
loope
and
out
das
dec
test
push
push
je
mov
loope
sbb
xor
roll
jge
xor
cmp
lock
scas
das
push
outsb
adc
mov
fstp
roll
and
es
iret
pop
ret
xchg
icebp
jo
cmovge
xchg
iret
sbb
or
inc
sub
push
fsub
fiaddl
fwait
xor
scas
rolb
bound
mov
enter
out
faddl
bt
push
pop
mov
mov
cmp
xlat
lods
aas
inc
in
xchg
mov
adc
leave
mov
out
xchg
mov
mov
and
repnz
fisttpl
jae
and
movsl
insb
popf
pop
fwait
sub
shl
and
insl
idivb
nop
imul
je
push
mov
push
ficompl
punpckhwd
dec
outsl
mov
mov
out
sti
mov
movsb
fwait
cmp
xor
adc
jae
sar
xchg
aad
xchg
xor
icebp
fisubrs
popa
decl
test
mov
mov
rcll
in
lahf
and
mov
mov
scas
mov
cmc
add
adc
fwait
sub
adc
movsb
sub
popa
int3
or
fisttpl
inc
jmp
dec
xor
fmuls
out
add
xchg
push
roll
push
mov
or
pmaddwd
out
icebp
pop
xchg
sub
andb
jecxz
or
lea
mov
pop
add
pop
mov
xchg
testb
imul
arpl
lods
xor
mov
mov
add
das
adc
or
pop
push
push
fwait
adc
inc
fld
cmp
adc
lret
pop
and
repnz
xchg
mov
push
mulb
lahf
cs
xor
cmp
stos
cli
subb
jns
sbb
and
dec
mov
stc
add
enter
bound
xchg
xor
xchg
and
xchg
cmp
jno
ds
mov
shlb
push
lcall
lea
nop
jg
mov
call
sub
lds
dec
in
repz
jne
mov
decb
jecxz
inc
cmp
out
inc
mov
repnz
or
jecxz
test
and
pop
sbb
loopne
adcl
in
lcall
jnp
jno
jo
mov
mov
icebp
fdiv
fcmovbe
test
int3
fdivp
insb
shlb
mov
sbb
das
jmp
dec
loop
insl
add
push
test
das
addr16
add
out
daa
or
and
lods
and
cmp
inc
scas
in
pop
and
out
into
lods
xor
insb
nop
push
notb
jmp
pusha
js
mov
push
xor
cli
imul
lret
add
dec
adc
fs
pop
movsb
sub
out
jmp
sub
xor
mov
sub
shrl
mov
int3
nop
inc
sub
push
mov
mov
lret
rcll
fimuls
loope
adc
dec
je
call
add
outsb
sahf
push
fstp
test
insb
xor
add
adc
push
mull
dec
lea
scas
lcall
add
ljmp
cltd
fisttps
loop
lods
bound
outsl
rorb
idivl
mov
xchg
in
adc
push
cwtl
test
xor
leave
push
or
fmuls
push
call
loopne
out
or
mov
jns
fimull
stc
xor
std
mov
loopne
jecxz
inc
pop
ret
push
jg
pop
mov
ret
lcall
lret
jbe
mov
cmc
daa
lods
push
scas
shl
adcb
jae
out
sub
dec
insl
imul
sbb
insb
adc
stos
mov
std
cmc
xor
cltd
or
inc
sub
ficomps
inc
xchg
cs
xchg
psubusb
jle
push
pop
or
xchg
nop
inc
cltd
sub
rcr
sbb
push
int
enter
lahf
lds
xchg
ret
sub
mov
adcl
mov
adc
cmp
cmp
mov
cmp
add
mov
mov
adc
and
mov
fldenv
push
push
loopne
add
pop
dec
enter
adc
pop
or
xchg
jecxz
lret
pusha
aad
dec
mov
sahf
sub
adc
repz
es
ja
mov
sbb
lcall
cmp
inc
jge
ss
sub
inc
enter
imull
fisubrs
pop
loop
pop
and
pop
sub
pusha
arpl
mov
push
bound
rorb
fdivrs
or
gs
ret
divb
jno
mov
push
inc
ret
lahf
pop
xchg
jae
inc
jne
push
mov
in
cmp
addl
push
cmp
or
push
mov
add
mov
ljmp
push
jmp
xchg
int3
ja
nop
xchg
pop
shlb
fwait
imul
shrl
iret
addr16
jae
in
mov
jno
sbb
pop
xchg
scas
cmp
push
mov
les
insb
pop
aad
outsb
scas
int3
aad
cli
es
cmc
jecxz
jmp
in
in
cld
stc
push
mov
ret
and
xor
mov
mov
dec
jecxz
insb
aas
in
testl
fisubrs
aam
xor
fstpt
mov
xchg
jg
es
or
fnstsw
sbb
std
fbstp
jp
mov
pop
mov
scas
and
leave
popf
xchg
je
aas
movsb
aas
push
ret
jg
out
fs
stc
adc
imul
mov
scas
sbb
jne
or
inc
call
dec
lock
xchg
int3
mull
cmp
sbb
mov
outsl
adc
cli
dec
sarl
mov
test
repz
cmp
inc
sub
jno
loopne
or
sub
xchg
xchg
int
mov
imul
or
out
cwtl
in
sub
test
xchg
aad
push
sahf
popf
mov
repnz
jmp
cld
mov
mov
mov
and
popa
aad
out
dec
xlat
dec
es
std
sbb
pusha
or
xchg
mov
dec
jl
sar
sahf
movsb
out
xchg
outsl
shr
inc
sub
jge
shll
xor
mov
aad
cmp
fsubrs
stos
and
sub
dec
loope
bound
add
push
in
jns
or
pushf
outsl
cmpsl
outsl
mov
sub
mov
push
pop
fiaddl
fistpll
cmp
dec
sti
sub
jae
shll
sub
and
in
cmc
xor
mov
mov
adc
mov
xor
stos
in
mov
pushf
scas
orb
gs
xchg
add
in
imul
adc
stc
leave
xchg
or
mov
or
loopne
sub
jmp
adc
jno
fldenv
js
into
jne
popa
bound
sbb
inc
ja
test
repnz
cmp
jae
push
into
pop
push
jg
mov
jle
test
in
push
jns
lcall
xor
ret
xchg
jno
mov
or
mov
xchg
std
aaa
adc
stc
iret
enter
loop
sahf
xchg
xchg
fisttps
jo
addr16
ret
jnp
push
adc
push
lahf
popa
vpunpckhbw
jmp
dec
test
pop
cltd
and
loopne
sub
out
mov
mov
sbbl
sbb
shrb
jecxz
fwait
or
xor
cli
add
dec
mov
bnd
jg
ja
xchg
bound
lcall
icebp
mov
ja
push
push
mov
imul
test
imul
jb
in
cmp
push
ret
add
mov
fldcw
ja
inc
pop
pop
loop
xor
mov
pop
jge
repz
or
jbe
mov
and
inc
mov
repnz
das
addr16
pusha
lahf
sbb
sbb
mov
outsb
push
adc
xchg
aam
cmp
lods
pushf
sub
push
xchg
dec
xchg
insb
dec
lahf
loopne
xchg
cltd
adc
insb
cmp
pop
test
adc
adc
daa
out
insl
or
ds
jl
push
in
push
mov
adc
push
inc
fcomp
cmpsl
in
aad
lret
aas
pop
out
or
inc
mull
mov
mov
jbe
push
jne
icebp
inc
push
sar
jbe
dec
mov
outsl
jecxz
rorl
es
ljmp
push
mov
push
jmp
inc
lea
ret
nop
sub
fisubs
bound
cmpsl
dec
xor
pushf
movsb
ja
imul
mov
add
mov
xchg
enter
sbb
scas
dec
dec
push
cmp
in
cmp
lods
sti
out
testb
inc
sbb
xchg
xchg
repnz
cmp
sahf
jecxz
jle
fisttpl
out
lret
sbb
sbb
cmc
ss
or
mov
sarl
adc
out
pushf
xor
mov
subl
int
inc
mov
jb
jmp
xor
sbb
addr16
jl
xchg
jb
lods
and
mov
xor
iret
jno
jns
jbe
ss
ljmp
pop
stc
movsl
dec
addr16
ljmp
dec
std
and
pop
sbb
mov
out
jae
out
lret
mov
popa
jnp
push
mov
into
popa
and
xchg
dec
jae
xchg
pop
test
inc
test
mov
test
icebp
shl
cwtl
pop
inc
test
rolb
pushf
fcomps
ret
jmp
popa
and
and
push
daa
and
xor
jno
xor
jl
xsavec
or
sub
push
mov
dec
repnz
cmpsl
insl
push
and
dec
xor
pop
popf
andb
std
in
pop
xor
les
and
mov
fs
or
loop
lahf
ret
inc
sub
jo
or
mov
mov
push
xchg
mov
pop
mov
inc
in
paddusw
test
cmp
aas
jo
das
or
mov
shl
xchg
loop
pop
pop
inc
pusha
xchg
dec
gs
sar
cmc
sbb
int3
movsl
pop
pop
test
bound
or
ret
push
or
xchg
pop
repz
cmp
jmp
jns
cmp
mov
jge
adc
xchg
adc
fildl
fs
inc
ficomps
into
push
fstpt
popf
mov
dec
ljmp
or
xor
repz
icebp
sbb
fisttpll
hlt
push
jbe
cs
cmp
dec
mov
sbb
xlat
dec
in
mov
ds
out
test
mov
roll
jl
mov
pusha
sbb
iret
fs
ficoms
imul
push
fiadds
pop
jmp
subl
and
cmpsl
call
jl
mov
or
dec
mov
mov
jecxz
jmp
sub
mov
inc
or
mov
lret
fcoml
pop
js
dec
fidivl
ja
cmp
mov
lahf
outsl
xchg
call
loop
cmpsb
clc
ret
jge
fdivs
inc
or
jns
ja
iret
dec
mov
jp
pushf
and
repz
test
pop
and
into
mov
inc
loope
mov
xchg
or
xor
icebp
push
ret
shr
jl
jmp
push
inc
or
outsb
mov
movsl
leave
popf
fcompl
fsubrs
leave
ljmp
jecxz
sbb
or
and
pop
and
scas
es
pop
cmp
sub
popf
adc
mov
adc
into
add
cmp
ja
adc
or
push
dec
repz
dec
aam
dec
sub
and
stos
or
repnz
jmp
inc
cltd
lods
cs
outsl
pop
decl
push
or
inc
push
insl
adc
lds
jle
bswap
inc
std
pop
aam
repz
jns
pop
cwtl
mov
inc
sarb
sbb
mov
inc
mov
fcompl
dec
inc
mov
pop
fisubs
pop
outsl
push
cmc
inc
nop
sbbl
shll
fwait
testl
xlat
jns,pt
fs
icebp
adc
push
lcall
or
sarb
ret
mov
out
mov
lret
iret
addr16
lods
push
dec
leave
push
icebp
lods
mov
mov
push
je
cmp
ficomps
or
out
lock
aam
lods
lea
jmp
cmovae
jo
movsb
sbb
jae
inc
data16
xlat
dec
ret
adc
imulb
xchg
stc
sbb
dec
frstor
push
fdivs
mov
cmp
enter
xchg
inc
xorb
into
adc
repz
hlt
pop
scas
ret
es
sbb
jmp
pusha
out
and
dec
pop
mov
ljmp
push
xor
and
pop
push
add
mov
les
cmc
mov
shll
xor
mov
clc
das
enter
ret
add
fwait
pop
sbb
mov
jno
or
sub
push
popa
xchg
movsb
jg
cmp
daa
pop
sbb
add
add
inc
jbe
dec
popa
popf
mov
mov
popa
popa
xor
aad
pop
aam
in
cli
movb
fdivp
sbb
scas
imul
sbb
inc
out
mov
fwait
inc
test
or
out
inc
sbb
lods
cmpsl
adc
add
cltd
clc
push
leave
inc
mov
es
add
sub
test
imull
out
jno
cmp
adc
adc
sbb
jbe
adc
mov
push
cmp
inc
jle
jns
cmp
jb
popa
leave
xchg
enter
test
aam
leave
iret
push
repz
cltd
sub
pop
loopne
cmpsl
cld
fs
stc
add
ror
jle
test
inc
jnp
or
and
ja
push
int3
hlt
pop
xchg
sbb
xchg
dec
js
inc
stos
sbb
fdivs
mov
popa
out
stc
inc
insb
sbb
or
adc
mov
mov
lret
pop
rolb
je
int3
out
mov
cli
jne
xchg
inc
sbb
jp
stc
sub
mov
repnz
xor
mov
pop
adc
shl
mov
fdivrl
cwtl
into
pusha
pop
ret
mov
push
hlt
out
push
fildll
mov
pop
add
xor
jne
mov
dec
add
cmp
push
xchg
rorb
imulb
fdiv
xor
inc
mov
cli
push
pop
scas
popf
sarl
xor
jb
cmc
cmc
pushf
aam
sub
mov
mov
mov
inc
js
in
js
jp
inc
xchg
dec
lahf
or
and
test
jmp
int
add
insb
inc
ret
mov
lock
jecxz
cli
aaa
nop
mov
xlat
add
jo
jl
ficomps
mov
jne
imul
xchg
cmp
aaa
pusha
clc
pop
inc
dec
sub
push
in
and
sub
mov
imul
mov
cs
es
push
mov
aas
sbb
push
aam
faddl
jbe
and
jnp
insb
int
popf
subb
imul
das
data16
es
clc
scas
or
insb
stos
xlat
dec
call
les
pop
push
in
in
adc
adc
mov
jb
xor
adc
jp
push
xchg
lock
sbb
aaa
jge
rcr
orl
pop
adc
iret
sbb
ss
jmp
popa
loop
pop
xor
jl
es
adc
pop
mov
enter
data16
fs
push
mov
pusha
mov
xor
mov
mov
mov
mov
dec
mov
fmull
sbbb
rcl
xchg
fnsave
aaa
jns
xchg
loop
add
call
daa
sbb
das
mov
test
and
or
inc
inc
mov
and
mov
js
cmpsl
dec
or
ja
pop
sub
pop
cmp
and
lret
jg
jge
fwait
xchg
lock
into
mov
in
adc
cltd
lods
rclb
pushl
and
sbb
dec
adc
inc
jg
or
scas
mov
push
or
es
das
xlat
fsubl
jns
and
jnp
jecxz
in
cmc
sub
inc
mov
sbb
out
adc
xchg
test
mov
adcb
inc
rclb
adc
or
jecxz
fildl
sub
rcll
out
lahf
sbb
and
and
dec
fiadds
mov
cmp
xor
inc
insb
outsl
ds
xchg
adc
add
xor
sbb
fisttpl
push
outsb
cli
pop
xchg
jp
xor
movsl
decb
ds
mov
push
pushf
into
push
or
rcll
add
and
bound
inc
scas
jne
and
mov
fmuls
push
adc
add
icebp
inc
jne
loope
clc
je
popf
ficoml
pop
cli
sub
ljmp
xchg
adc
leave
add
addl
mov
mov
pop
insb
push
xchg
push
test
jne
stos
and
xchg
cli
insl
cwtl
push
mov
add
testb
loope
push
inc
sub
adc
je
mov
xorl
mov
stc
push
adc
movsl
pop
pushaw
mov
sbb
fisttpll
pusha
outsb
ficoml
ret
es
cmc
push
and
xchg
fwait
movsb
lret
lock
push
xor
or
adc
mov
xchg
xchg
loopne
scas
sub
cmp
push
fcomps
mov
divb
call
mov
leave
jno
arpl
sub
adc
adc
data16
fstps
inc
ja
aam
adcb
jae
addr16
cmp
std
xchg
insl
loope
sbbb
enter
movsl
push
inc
add
mov
pop
les
sub
xchg
and
mov
insl
dec
ja
in
aam
aaa
fdivs
xchg
popa
in
pop
punpckldq
mov
and
ljmp
jmp
ljmp
js
dec
mov
int3
out
push
or
and
add
dec
or
mov
shrb
xchg
xchg
push
adc
or
jge
xor
loope
ficomps
addr16
adc
pop
cltd
pop
jo
jbe
notl
fisubl
xchg
dec
cmpl
std
les
push
inc
and
push
call
mov
movsl
dec
or
xchg
ja
jb
mov
pop
ljmp
mov
stc
mov
cltd
pushf
divl
lock
call
rclb
gs
negl
sbb
cmp
test
add
inc
clc
jo
mov
xchg
inc
sbb
xchg
xor
mov
mov
roll
int
adc
pushaw
cmp
lcall
sarl
loope
int3
jne
mov
mov
pop
adc
cs
inc
cmpsl
scas
add
cmp
mov
nop
inc
in
dec
sbb
fwait
and
repnz
xorl
sub
sbb
inc
mov
sbb
mov
inc
lods
andb
int
rclb
mov
rorl
or
push
cmp
call
lcall
outsl
sti
cltd
aam
imul
push
jmp
out
test
push
aam
in
je
mov
and
bound
popl
je
push
and
cmp
mov
sbb
jecxz
add
faddp
divb
add
pushf
cmp
mov
jnp
xlat
cmp
mov
test
fbld
pusha
cmp
adc
push
movsb
mov
js
pop
xor
xchg
mov
pop
in
inc
mov
push
mov
sti
lret
mul
mov
popf
push
and
mov
rorb
outsb
jecxz
pop
adc
xchg
adc
mov
sbb
daa
mov
or
fstl
pusha
andb
pop
xor
mov
clc
adc
scas
add
pop
mov
rcrb
push
push
inc
or
xor
rorl
dec
mov
jno
fwait
cmpsb
into
fs
out
div
nop
cwtl
mov
or
les
fwait
hlt
pop
ljmp
jb
jnp
cmpsl
mov
pop
out
movsb
orl
out
xor
mov
clc
movsl
and
pop
cmp
pop
jno
les
mov
stos
jns
je
sub
mov
mov
dec
xor
inc
sub
jno
push
movsb
sub
cmc
outsl
rcll
dec
sarb
xor
mov
mov
and
scas
movb
clc
repz
subb
out
jns
fcoms
dec
hlt
push
icebp
scas
shll
pop
jns
popf
fs
mov
mov
mov
es
loop
add
out
sub
inc
std
gs
and
sbb
daa
mov
jne
dec
and
add
pop
push
sub
sub
xchg
and
ret
aaa
mov
sub
mov
shrl
repnz
bndstx
xchg
jno
call
jge
fdivl
mov
in
ljmp
scas
add
or
lcall
outsb
cmp
cld
fxch
enter
sbb
imul
mov
loop
mov
ljmp
shll
sub
xlat
testl
clc
sbb
or
scas
stc
xchg
push
or
xor
fcomps
jl
lcall
sahf
xor
push
mov
jno
out
movsl
and
xchg
cmpsl
popa
adc
mov
xchg
mov
rcll
jne
push
add
xchg
test
xchg
lahf
inc
sub
ficompl
sti
sbb
xchg
in
push
shll
dec
push
hlt
imul
dec
loopne
push
ja
dec
popf
insb
sbb
out
pop
sub
jb
jne
outsb
lods
jae
mul
roll
xchg
cltd
add
jnp
gs
jmp
mov
fistpll
xor
inc
cmp
adc
cld
cwtl
push
jne,pt
lock
mov
iret
filds
sbb
in
stos
jp
mov
in
fs
out
ss
imull
movsb
movsl
cmpsl
jmp
movsb
sahf
jo
je
aas
or
mov
mov
lds
mov
add
lods
mov
mov
sbb
shr
cwtl
ljmp
xor
in
outsl
jp
jmp
cmp
in
mul
stc
add
jecxz
insl
enter
arpl
cmp
push
mov
jecxz
xchg
xor
out
jmp
movsb
jg
add
jne
lods
sub
lret
xchg
inc
les
sti
neg
data16
inc
in
bound
lcall
and
cmc
das
lret
xchg
cmc
inc
pop
scas
lcall
int
pop
andb
icebp
adc
and
shll
xor
aaa
daa
cmpsl
dec
nop
fwait
push
adc
insb
into
daa
add
xorb
in
imul
pop
xchg
sarb
xor
shll
inc
test
xchg
jmp
xchg
ret
das
dec
add
in
sub
test
cmpsb
rcrl
arpl
xor
jecxz
dec
and
dec
nop
out
add
popw
out
loope
scas
adc
add
addr16
lods
rclb
pop
int
out
loop
sbb
pop
in
jl
xor
lahf
mov
xchg
xlat
in
inc
or
lret
ret
or
jnp,pt
stos
sub
dec
mov
ds
cmp
aas
sub
enter
sub
xor
xor
scas
xchg
sbb
iret
sub
push
ret
ret
inc
jp
das
add
cmp
mov
fdivrs
out
imul
insb
xor
xchg
subb
mov
ret
pop
sub
lods
imulb
mov
jmp
lret
jnp
adc
jp
icebp
mov
sbb
test
jbe
push
mov
lahf
inc
repz
sbb
popa
adc
frstor
pusha
imul
inc
jle
sbb
jne
push
outsb
lea
jno
xor
jl
inc
imull
add
cmc
mov
fimuls
or
loopne
ss
push
ss
je
jns
cmpsb
and
add
jg
dec
rolb
add
lcall
js
adc
ljmp
push
in
mov
icebp
dec
enter
enter
inc
jno
aaa
popa
xlat
pop
jmp
xchg
enter
dec
repnz
xchg
test
jnp
in
addb
test
int3
pushf
sub
bound
mov
out
insl
test
mov
outsl
arpl
xor
push
xor
and
aaa
out
cmpsb
and
rorb
fs
adc
sti
sub
cmp
stos
inc
pop
push
rcrb
lea
or
push
dec
mov
aam
int
fistpll
std
sub
xchg
xlat
add
xorl
faddl
push
mov
push
jg
or
push
inc
jnp
pop
shll
cmp
or
inc
shr
pop
push
jle
cmc
outsl
mov
fwait
xor
rolb
imul
or
sbb
rcrl
ja
movsb
cwtl
hlt
stos
pusha
loope
mov
movl
xlat
in
adc
xlat
test
movsl
add
xchg
fisubl
push
adcb
loop
sar
mov
daa
sub
cmpsl
icebp
sub
repz
rorb
in
movsb
es
cmp
sbb
cmp
shlb
es
mov
add
adc
xorb
push
in
push
out
xor
adc
outsl
xchg
jb
sub
test
fldenv
jg
lds
mov
fiadds
dec
sbb
jne
ret
jae,pt
addl
scas
xchg
popa
int3
add
aad
sub
sub
pushf
out
popl
std
cmpsb
pop
inc
gs
xor
sbb
loopne
inc
out
sti
in
js
imul
sti
lods
sbb
jbe
or
repz
mov
adc
sub
sti
pop
test
sbb
or
repz
sbb
push
and
push
cmp
loop
dec
aas
pop
add
lea
and
dec
push
xor
sub
pop
adc
mov
ficompl
pop
or
scas
mov
adc
outsl
div
or
enter
test
leave
insl
data16
jg
cs
sub
jle
es
xchg
test
cmp
sahf
repz
leave
pop
mov
push
mov
test
push
lock
fldenv
push
push
xchg
es
dec
xchg
out
fmull
les
jmp
adc
mov
scas
pop
aas
popa
mov
loop
pop
stc
add
int
cmp
lods
sbb
pop
fs
xchg
std
mov
xor
sbb
push
adc
xchg
fucomip
xor
mov
pop
jle
lods
pop
xor
hlt
shll
and
inc
movsb
push
jns
mov
bound
outsl
in
enter
mov
cmp
jecxz
xchg
popa
xchg
das
shrl
cmp
cmc
xor
out
and
adc
mov
test
ret
ss
xorl
lock
shlb
out
mov
jbe
pop
gs
cmp
scas
loope
xlat
int
xor
mov
adc
inc
mov
push
cwtl
bound
adc
aaa
clc
inc
push
in
xchg
cld
scas
out
xor
xor
inc
or
cs
repnz
popa
xchg
inc
lds
ficomps
and
inc
or
mov
pop
cmc
mov
lds
mov
cld
add
je
or
outsb
dec
or
ficompl
add
push
shll
dec
xor
outsl
xor
nop
jbe
mov
imul
inc
icebp
dec
add
xor
jbe
add
mov
les
addl
dec
jge
je
push
pop
and
mov
push
aad
mov
jns
adc
xor
xor
lea
lock
mov
dec
xlat
subl
movsb
ja
div
dec
sub
mov
pop
jp
out
push
mov
push
mov
rcl
cmp
and
cs
jle
popa
std
es
pushf
sbb
sbb
pop
xchg
mov
popa
hlt
sub
cs
mov
pop
dec
mov
add
mov
std
repnz
inc
mov
xor
adc
adc
mov
or
inc
or
jecxz
or
cld
pop
inc
xchg
stc
jg
add
jbe
jo
mov
int3
mov
mov
scas
fildl
push
pop
or
xor
add
xor
mov
call
nop
jmp
xchg
adc
imul
push
je
adc
push
and
xchg
notrack
adc
divl
lret
and
sub
insl
push
subl
mov
lcall
push
scas
popf
push
shrl
dec
inc
push
xor
leave
stos
shlb
pusha
pusha
adc
xchg
repz
je
roll
push
lods
ljmp
xchg
mov
inc
mov
fs
call
adc
cmp
pop
lds
push
and
out
ss
icebp
jo
xchg
lods
cltd
out
test
scas
loope
xchg
mov
fisttpll
movsb
sub
pop
push
pop
cmp
call
sbb
adc
movsl
push
mov
mov
aas
fldcw
add
push
dec
jecxz
cwtd
mov
mov
mov
inc
push
aad
or
mov
push
or
negb
in
push
sbb
xchg
lret
jmp
ljmp
adcb
cltd
or
push
mov
mov
mov
fcoml
loopnew
fistl
or
je
out
cmp
jge
adc
xlat
mov
fwait
xor
stos
push
scas
call
mov
sbb
jg
push
or
fdivrs
cld
cmp
xchg
es
pop
lahf
test
mov
push
stos
push
cmpsl
cmp
lods
test
rorl
inc
shr
mov
fcoms
xchg
inc
sub
inc
jbe
nop
mov
arpl
pop
xchg
xchg
sbb
pop
inc
popf
and
repnz
roll
adc
push
insl
xlat
push
inc
aaa
ds
inc
aaa
mov
out
loop
mov
repnz
or
sub
and
xchg
das
lds
gs
cld
lods
push
lock
ret
dec
in
call
xchg
je
mov
pop
stos
cmp
fcmovne
xlat
xchg
and
aad
test
push
subb
loopne
scas
out
push
pop
popf
fimull
loope
adc
and
outsb
inc
shlb
cmp
mov
repz
roll
fsub
sbb
loope
stos
fiadds
addr16
sbb
jb
or
sub
mov
pusha
repnz
incb
sub
fmull
aam
add
adc
jbe
sti
into
ret
stos
out
cmp
daa
mov
sub
arpl
testb
dec
stc
dec
dec
scas
xor
shll
and
fnstcw
xchg
arpl
inc
add
sbb
sahf
push
out
or
xchg
xchg
lret
out
xor
mov
xlat
jl
out
add
sbb
cmp
mov
xchg
sbb
cmc
push
imul
cmp
xor
xor
push
fildll
jp
je
push
add
and
shll
iret
sbb
sar
fstpl
mov
sub
adc
stos
xor
sti
jmp
adc
mov
mov
jl
inc
pop
mov
lock
mov
int3
add
or
lods
icebp
dec
mov
shlb
sbb
mov
cwtl
pop
pop
jge,pt
or
cmc
sahf
xchg
ror
xor
pop
rcll
lahf
adc
xor
pushf
or
insb
sbb
clc
ret
sti
sbb
xchg
lods
nop
daa
cmp
ret
jbe
push
sbb
jle
lock
add
mov
xor
dec
jno
fwait
sahf
dec
jecxz
cld
scas
cmpsb
or
mov
shlb
cld
add
dec
ljmp
in
add
shll
ret
pop
push
out
addb
ret
icebp
jge
and
cld
sbb
out
aad
in
add
in
aam
out
cltd
mov
xchg
or
cli
push
inc
test
xchg
loope
insb
lods
push
mov
inc
fcompl
xlat
sbbb
xor
out
lods
add
test
cmpl
gs
fsubl
mov
sbbl
lds
add
cmp
ja
test
xchg
loop
lods
lods
fisubrs
cmp
sahf
mov
lods
adc
int
mov
mov
mov
push
jno
fdivrl
sub
mov
inc
cltd
pop
add
or
push
sub
fwait
jnp
fstpt
in
dec
add
mov
pop
out
fs
cltd
xchg
das
aam
int
aas
leave
outsb
gs
out
sbb
ljmp
jmp
push
pop
xchg
xor
outsl
cmp
enter
pushf
in
jge
lock
add
daa
insl
lret
cmp
je
adc
pop
es
mov
and
xchg
rcrb
inc
dec
adc
movsl
xor
sti
push
stos
add
push
jo
dec
lahf
insl
pop
add
mov
jae
adc
xchg
ds
or
cmpsb
insb
out
push
add
mov
cmpsb
lahf
mov
insl
mov
mov
movsl
outsb
inc
loopne
aas
adc
jecxz
cmc
or
sbb
add
xor
in
pop
pop
in
mov
mov
mov
cmp
cmp
fwait
jae
popa
xor
mov
notb
sbb
jmp
testl
dec
mov
lds
pushf
into
das
cmp
loop
adc
rorl
aaa
ljmp
push
stos
ljmp
cltd
movsb
mov
mov
jmp
scas
xchg
push
rorb
repz
jb
es
xchg
and
call
imulb
sub
shll
mov
inc
adc
jmp
mov
fwait
mov
shl
loop
aas
fcomps
jl
ficoms
sub
mov
cmc
rcrb
aas
repnz
or
fmull
mov
sbb
fs
cld
in
jne
add
push
sbb
fs
fdivrl
rolb
cs
push
sbb
mov
push
push
mov
inc
sti
mov
fucom
cltd
and
fimuls
inc
arpl
pop
lods
shld
das
iret
pop
pop
aaa
sub
cmp
sbb
or
mov
push
push
mov
mov
mulps
or
xchg
outsl
loop
add
pop
inc
scas
shlb
sahf
inc
mulb
icebp
fbld
sub
insl
xchg
push
test
out
xor
test
mov
jno
inc
mulb
push
xchg
ret
xor
or
adc
lcall
rorl
or
xchg
push
ret
lahf
xlat
fistpl
xor
mov
mov
xchg
fstps
insb
cli
negb
add
xor
ltr
mov
fistl
mov
jle
sti
rcr
jae
xchg
mov
fildl
std
add
fdivrl
cwtl
ss
fsubl
aad
fidivs
clc
add
push
pop
jmp
pop
jp
mov
shl
faddl
pushf
jmp
push
sub
adc
adc
in
cld
cltd
testl
scas
add
arpl
mov
imul
dec
push
pop
cmp
cmc
sub
sti
fcomip
insl
push
jmp
loope
mov
mov
push
mov
addr16
cltd
int
fwait
cmp
adc
pushf
push
mov
shrb
aas
sub
fs
mov
clc
imul
add
in
daa
out
push
cmove
mov
cmp
inc
cld
xchg
or
repnz
cmpl
xchg
repz
dec
lret
and
lea
xor
outsb
cli
inc
mov
jge
xchg
jae
cmc
ror
daa
ds
adc
mov
clc
adc
push
fwait
imul
enter
mov
xchg
icebp
je
sub
dec
pop
scas
mov
jl
and
cmp
sbb
mov
popa
adc
push
dec
dec
call
mov
mov
xchg
add
movsb
arpl
push
lods
and
out
ret
mov
and
xor
movsb
popf
sbb
jae
sbb
jge
lea
inc
rcr
adc
push
outsl
cmc
pop
add
push
aaa
stos
jmp
lock
jbe
jmp
mov
and
fistl
mov
loope
shl
fiadds
fisubs
leave
cwtl
fisubs
rcll
bound
add
jmp
sarb
lods
adc
add
int3
push
test
xchg
adc
in
xchg
mov
pop
inc
gs
pop
jno
cld
xchg
push
push
jne
cmp
nop
jno
cwtl
mov
fdivr
aaa
fstpl
adc
push
cmc
aaa
sahf
xor
or
scas
xor
jg
jb
addl
test
in
and
jle
sbb
jg
lcall
jno
ficomps
cli
push
scas
outsb
dec
sub
cmp
dec
loop
loopne
int
cmp
jge
cld
sub
push
adc
rcrb
test
gs
lock
xor
fcmovbe
lods
mov
mov
stos
sbb
add
or
push
dec
xchg
and
dec
sbb
aam
lret
push
fmuls
jnp
into
rolb
or
push
out
lods
jmp
aad
inc
sub
or
inc
addr16
je
shrb
lret
movsb
sbb
xor
rcl
data16
dec
stos
xorps
push
mov
mov
cs
jae
adc
test
or
sub
or
testl
sub
cmp
loopne
fdivrp
pop
cmp
dec
pushf
mov
xor
push
bound
shlb
xorb
stos
mov
rol
xor
adc
cltd
sub
mov
jne
ret
or
jb
mov
sbb
and
inc
mov
pop
push
fwait
sti
adc
dec
addr16
enter
fsubrp
and
rorl
or
ret
dec
fcomps
je
sub
inc
xchg
and
bound
or
test
pop
daa
push
shlb
or
rclb
cmp
aaa
loop
bswap
mov
loope
stc
sbb
nop
cltd
xchg
cld
inc
xchg
fisubl
mov
mov
add
insb
jbe
lods
sub
mov
pop
jl
or
push
mov
sbb
sub
arpl
mov
pop
jp
push
dec
mov
mov
mov
pop
imul
mov
adc
inc
sarl
push
mov
xor
cmp
pop
aaa
xor
mov
outsl
jnp
jnp
sbb
insb
and
lcall
push
ja
cwtl
mov
test
jno
or
xor
fucomip
lahf
mov
inc
cwtl
test
xchg
stos
sbb
cmc
dec
jbe
scas
mov
addr16
mov
lret
ss
xor
sbb
into
cmp
daa
push
mov
xchg
xchg
addl
pop
fstpt
and
cmp
outsb
aaa
fwait
pop
xchg
ljmp
push
lahf
adc
sbb
push
and
out
and
das
jb
inc
adc
jbe
test
arpl
adc
mov
push
adc
shrb
aam
in
dec
cwtl
cld
adc
inc
push
push
push
cmp
or
fbld
push
lds
inc
sbb
clc
iret
iret
es
pop
adc
sbb
xchg
mov
add
mov
sbb
stc
call
imul
fadds
jno
jg
jne
xor
mov
inc
dec
stos
test
pop
pop
cmp
cltd
xchg
jns
jp
lea
loopne
ja
cld
repz
sub
iret
lds
mov
mov
mov
dec
sub
in
fwait
and
push
add
xchg
mov
adc
clc
cmp
and
adcl
cmpsl
repz
push
jne
data16
cli
pop
stc
sarl
lea
lods
outsl
out
sub
sbb
inc
pusha
push
xor
push
addr16
aad
test
jecxz
test
and
jmp
push
add
dec
pop
pop
out
scas
mov
mov
inc
push
mov
mov
mov
mov
lock
mov
push
push
in
aam
leave
sarb
mov
xor
aaa
dec
popl
add
arpl
inc
jmp
call
in
adc
mov
pop
dec
xor
push
testb
fcom
lret
xchg
aas
mov
sbb
sub
sub
shll
xor
adc
hlt
mov
pop
pop
fbld
cmpl
in
cmpsl
inc
pop
inc
loop
jo
sub
inc
dec
dec
fsubrs
imul
inc
push
test
ds
jae
add
adc
cltd
jge
aam
and
out
inc
add
jo
xor
xchg
push
es
push
push
dec
inc
ljmp
push
les
repnz
aaa
cmpsl
test
pop
shlb
test
sub
sub
and
inc
add
adc
loopne
add
jno
insb
jno
dec
jp
fadds
test
dec
ds
pop
in
mov
mov
mov
mov
mov
loop
test
dec
movsl
inc
mov
roll
sbb
out
jnp
or
xor
divl
lds
sar
pop
xchg
xchg
imul
insb
les
jo
mov
xorl
cmp
mov
adc
outsb
mov
cs
ret
mov
jp
push
jmp
testb
adc
lret
xor
lret
pop
shrl
mov
ret
mov
sub
cld
mov
dec
lahf
xor
mov
xchg
loope
sub
mov
push
outsl
lds
hlt
addb
stos
push
adc
mov
xor
cmpsl
xchg
daa
aaa
add
sbb
clc
insb
ljmp
jge
movsl
std
nop
mov
add
ror
and
int
pop
xor
fcmovb
cmp
das
cli
jp
mov
xchg
xor
data16
hlt
adc
dec
push
stos
mov
pop
mov
outsl
test
xlat
push
in
or
pop
xchg
fisubl
jo
fisubrl
mov
jns
ljmp
mov
and
outsb
and
lock
push
cwtl
lcall
cld
mov
std
add
jnp
pop
test
dec
into
sub
push
mov
iret
mov
loope
into
sub
push
inc
cmp
pop
pushf
cmp
mov
test
stos
neg
add
lock
xchg
cs
cmpsl
in
push
adc
mov
les
shr
pop
mov
cmp
imul
or
mov
test
add
ljmp
call
jae
xor
xor
ljmp
jae
or
inc
cmp
in
mov
xchg
xchg
call
lret
daa
or
cmp
pop
dec
inc
pop
or
sahf
or
push
adc
adc
xor
adc
xchg
cmp
add
jo
cmc
in
jne
lds
sbb
int3
jmp
rcrb
loop
mov
or
jae
pushf
mov
movsb
xchg
or
in
mov
std
bound
sub
xchg
mov
in
and
psrlw
call
xor
insb
inc
dec
xchg
pop
test
mov
lods
int3
inc
mov
xlat
push
ret
das
shl
outsb
mov
pushf
insb
add
mov
inc
shrb
inc
out
dec
mov
and
xor
jno
test
ret
fsubrs
shll
fcmovbe
or
insb
sti
pop
andl
cmp
xchg
cmp
mov
sub
mov
inc
mov
jo,pt
scas
call
xor
mov
or
push
in
mov
xchg
rolb
sbb
das
xor
sti
jge
cld
out
mov
sahf
das
pop
or
mov
lret
lods
ljmp
pop
mov
xchg
add
mov
mov
push
inc
xor
jb
jmp
pop
sub
lods
pop
sar
sbb
jbe
or
aad
stos
push
xor
shlb
stos
ffreep
xchg
mov
jle,pt
push
ljmp
inc
iret
in
aam
inc
daa
push
lods
and
adc
dec
cwtl
in
jecxz
lods
lea
and
scas
inc
sbb
cltd
out
sbb
xchg
fwait
sbb
add
sbb
pop
sub
rorl
or
jle
mov
in
int
adc
pop
sub
roll
rcl
sti
insb
pop
daa
fwait
loope
outsb
push
mov
xor
sar
xchg
mov
addr16
cmp
je
push
push
mov
pusha
jmp
es
loope
pop
pop
insb
fs
pop
sbb
scas
insb
test
sbb
cmp
ja
ret
mov
mov
and
loope
sbb
insl
shrb
ljmp
ret
pop
popf
sub
add
lea
xchg
and
pushf
subb
pop
sub
clc
mov
loope
add
imul
xor
std
pusha
hlt
pop
cmc
add
mov
mov
push
xor
or
push
mov
lock
jle
xchg
pop
and
pop
test
inc
jge
jp
cmp
clc
mov
outsb
push
fcom
jle
clc
int3
bound
pop
add
adc
pop
jns
xchg
adc
adc
cmp
cmp
pop
test
mov
stos
sbb
in
pop
jae
jmp
incl
push
cmp
inc
rcr
sbb
out
ret
pop
jmp
idivb
or
mov
xor
or
pop
push
test
addr16
lods
data16
in
enter
xchg
fxch
sub
in
mov
cmp
fstpl
dec
jae
repz
popf
cmpsb
mov
out
ds
outsl
stc
add
leave
add
cmp
int3
fucomip
shll
call
popf
push
inc
cs
clc
mov
sub
leave
xchg
in
inc
jo
jbe
aas
hlt
mov
mov
nop
mov
ficoml
jns
mov
stos
dec
lret
adcb
and
add
xor
cld
les
popl
and
xor
mov
orl
ljmp
mov
lods
ljmp
sub
mov
fists
sbb
pop
jne
jecxz
popa
xchg
xor
sub
fwait
pop
lods
outsl
and
mov
sbb
jae
mov
cmp
cmp
sbb
pop
xchg
xor
popf
xor
cmp
inc
insl
rsqrtps
mov
push
sbb
sub
add
fcom
iret
sub
movsl
pop
cmpsb
ja
faddl
push
cmp
cs
testl
push
mov
pop
rep
subb
jle
movsb
aam
rcrl
jno
ljmp
adc
push
in
and
dec
stos
mov
imul
shrl
enter
insl
sarb
insb
push
pop
test
daa
imul
aam
push
pop
xlat
and
cmp
dec
test
out
in
shlb
push
xchg
cli
es
cmpsl
movsl
lcall
pop
lods
mov
int3
mov
int3
int3
int
lahf
aaa
pushf
icebp
in
sbb
mov
adc
sub
sahf
or
jb
ror
xor
dec
push
inc
dec
mov
mov
cs
stos
jmp
ds
push
adc
fcoml
cmp
mov
pop
adc
aas
add
enter
lahf
in
outsb
xor
lcall
push
icebp
dec
imulb
jecxz
mov
aad
xor
pop
nop
inc
mov
sub
mov
push
adc
cltd
sbb
mov
push
nop
add
pushf
scas
cs
cli
flds
fcmovnb
pop
and
sarb
mov
scas
insl
roll
imul
xorl
jne
inc
adc
addr16
fsubrp
mov
fldcw
mov
movsb
mov
pusha
enter
cmpsl
mov
std
jmp
inc
and
push
mov
outsb
pop
push
hlt
sahf
mov
xor
xchg
in
inc
test
adc
ds
cmpsb
sbb
sbb
lock
sbb
add
pop
shrl
pop
arpl
push
add
imul
pop
dec
ljmp
out
cltd
mov
and
arpl
jbe
jecxz
inc
mov
dec
mov
addr16
addb
mov
fld
xchg
add
mov
mov
scas
push
xchg
cmp
jo
push
ret
xchg
mov
and
movsb
sbb
insl
pop
push
jl
jle
je
in
add
std
js
jo
push
es
flds
or
imul
sti
out
mull
repnz
dec
lock
xchg
out
sarl
enter
out
xor
dec
paddsw
cltd
push
adc
adc
inc
jbe
test
pop
push
test
cmp
pushf
adc
dec
push
inc
fldln2
shr
adc
add
mov
mov
enter
inc
popa
fs
jb
sbb
or
popf
sub
shlb
sbb
je
pop
sbb
insl
cmp
cli
adc
and
aaa
push
mov
sarb
movsl
lcall
outsb
sub
mov
inc
xor
in
int3
mov
inc
push
addr16
repz
jo
lcall
xor
mov
jmp
pop
int
add
and
mov
mov
pushl
movsb
jmp
xchg
push
adc
rcl
mov
movsl
out
gs
lret
jb
arpl
sub
in
mov
sub
jae
popa
pop
aas
push
cmpsl
jb
sub
cmc
jle
mov
mov
mov
dec
jne
push
adc
loop
xor
pop
push
mov
xchg
in
loope
sbb
mov
or
dec
push
inc
lahf
push
lcall
pop
xor
pushf
movsl
mov
adc
sti
pop
in
adc
inc
xor
jmp
test
bound
dec
jle
stos
mov
faddl
xchg
ret
mov
add
mov
inc
insb
adc
xchg
jne
rcrl
xchg
fsub
inc
les
mov
xchg
lret
xchg
outsl
das
inc
fwait
out
mov
cmp
fsubp
inc
bound
mov
or
cmp
sub
adc
jecxz
mov
xchg
add
xor
scas
push
and
dec
jae
sbb
jb
cmp
cwtl
out
sub
xchg
cld
cmpl
jb
cwtl
push
xchg
mov
inc
scas
movl
mov
sbb
add
movsb
xor
xor
sub
test
ficompl
add
stos
xchg
pop
cmp
test
and
dec
movsb
jge
and
add
sbb
scas
dec
adcb
ss
repnz
in
ror
pushf
xchg
mov
rcrl
mov
mov
aaa
adc
adc
add
lea
arpl
cld
inc
cmp
in
inc
sbb
jmp
and
mov
inc
cmp
mov
pop
inc
fwait
test
xlat
bound
iret
sti
fsubrl
idivl
dec
jle
push
repnz
mov
xchg
xchg
pop
das
and
adc
pop
aaa
jbe
pop
es
test
jl
or
pop
push
pusha
push
push
dec
inc
outsb
xchg
xchg
push
dec
imul
lods
mov
mov
push
je
aam
mov
push
mov
dec
icebp
dec
mov
push
jbe
xchg
sbb
jne
pop
mov
add
rolb
cli
lret
push
adcl
popa
movsl
pop
loope
pop
shlb
mov
sbb
pop
push
push
adc
sbb
push
aam
call
sahf
jp
fwait
and
lcall
in
insl
push
fld1
sub
sahf
mov
xchg
in
inc
shrb
sub
lods
xor
in
movb
popa
inc
lret
jl
push
or
or
mov
cld
pop
sub
inc
mov
mov
xor
pusha
scas
sahf
aam
push
jbe
mov
dec
jl
push
push
repz
add
xor
inc
in
and
sub
jg
mov
repz
jmp
adc
xor
sti
pop
mov
jl
es
mov
cmpsl
movsb
scas
fcmovbe
jle
fcomps
std
in
pusha
fwait
rcr
mov
sub
out
ret
shll
xchg
mov
call
nop
fcomp
sub
mov
daa
rolb
divl
add
jecxz
inc
rcrb
xchg
xchg
outsl
cltd
push
mov
push
jp
cmp
popf
ret
in
mov
les
pop
pop
jmp
cli
jmp
jae
scas
mov
push
xor
jmp
pop
stos
aad
icebp
in
mov
test
xor
pushf
das
or
dec
lods
call
ret
pop
icebp
leave
movsl
xchg
data16
ja
movsb
sbb
cmpsb
iret
lods
les
outsl
cmp
push
jle
add
mov
adc
xchg
inc
mov
mov
push
cmp
mov
outsl
mov
leave
xor
test
out
jne
fmuls
cmpsl
inc
repz
fs
dec
push
mov
lods
mov
enter
pushf
push
cmp
mov
pop
mov
sub
mov
mov
rcr
icebp
scas
inc
dec
ffreep
test
pop
movsb
imul
xor
jns
int
sub
adc
fdivp
pop
insl
je
dec
xor
add
call
rol
cmp
inc
lock
cmc
mov
pop
outsb
call
iret
add
out
inc
xor
mov
mov
outsl
push
ret
negb
inc
sbb
jno
aaa
ja
loope
and
push
inc
shrl
lret
dec
ret
fwait
xchg
jp
popf
ret
mov
lcall
enter
push
sub
pop
mov
inc
movsb
jmp
test
sub
xor
add
cmc
xor
addr16
cwtl
mov
dec
jb
sbb
int
dec
push
mov
rorb
fwait
jne
mov
sub
lahf
dec
lret
xor
idivl
cs
dec
push
cmp
lret
dec
clc
in
xchg
mov
or
ds
add
out
icebp
das
fisubl
push
sub
out
push
add
dec
inc
fnstenv
sti
inc
insl
ret
outsl
mov
jge
cmc
subb
fldt
xchg
nop
lock
cs
add
popa
xor
lds
shrb
int
mov
add
mov
iret
pushf
push
test
into
leave
fcompl
rolb
out
leave
enter
fisubrs
gs
xor
repnz
xchg
push
adc
adc
jae
arpl
jmp
jae
mov
int
dec
lea
adc
in
jge
gs
repnz
add
cld
cmp
jns
pop
popa
or
push
jp
adc
subb
adc
out
loop
mov
inc
push
dec
cld
repz
xlat
loopne
bound
repnz
es
jno
push
popf
sbb
mov
jns
fdivs
lret
push
jb
int
rorb
outsl
fwait
rorl
inc
in
loopne
add
rolb
pop
push
js
mov
sub
or
stos
jbe
stos
or
hlt
int3
iret
xchg
mov
adcl
push
pop
sub
in
push
cmp
dec
mov
test
cmp
aas
scas
gs
int
mov
cmpsl
mov
inc
paddsb
stos
ret
arpl
jp
in
inc
loopne
xor
fsub
mov
das
ret
xchg
gs
cwtl
gs
xchg
test
aad
inc
bound
shrl
pop
mov
add
pop
lahf
daa
jmp
rcll
dec
movsb
jbe
andl
add
mov
dec
pop
cmp
mov
mov
leave
in
loope
int
mov
jmp
add
xchg
xchg
mov
in
sarl
dec
ret
das
dec
out
pop
sbb
cwtl
mov
fcmovnbe
and
rcll
divl
repz
insl
jo
test
add
out
addl
nop
dec
std
sbb
and
hlt
hlt
idivl
pop
pop
lods
push
mov
iret
mov
adc
pextrw
mov
push
xor
in
outsl
imul
adcb
hlt
das
data16
lahf
andb
mov
dec
mov
sbb
push
mov
pop
inc
stc
js
stos
test
cs
dec
pop
sub
pop
jbe
scas
ja
lea
mov
adc
dec
mov
mov
pop
daa
pusha
mov
adc
insb
cltd
testl
imul
cmpsb
fnstcw
notb
and
pop
stos
out
pop
sbb
mov
lods
lods
movb
dec
in
hlt
shl
add
add
aam
mov
jnp
cs
flds
cwtl
mov
cmp
adcl
out
cmc
inc
aad
aam
loopne
sub
push
cmpsl
pop
lock
jge
sbb
mov
es
jne
lock
add
in
stc
push
aaa
les
dec
mov
in
lcall
scas
push
subb
out
sub
push
je
lret
andb
cli
jbe
insb
fsubl
push
outsb
jmp
and
jo
sahf
mov
or
cwtl
jl
sub
mov
bound
loope
sbb
mov
add
sarl
jae
cltd
and
imul
mov
adc
mov
addr16
rcrb
movzwl
add
xchg
int
and
mov
rcrl
sbb
jb
xchg
inc
mov
cmpsl
xor
pop
jmp
arpl
icebp
stos
fdivs
and
insb
inc
jno
pop
cmp
cwtl
mov
pop
in
adc
mov
imul
pop
and
clc
xlat
push
pextrw
iret
inc
pop
shr
push
jae
mov
sahf
rcr
xor
sar
scas
inc
filds
aam
faddp
rorb
je
xchg
add
sub
shl
pop
pop
in
xchg
fscale
insl
popf
add
mov
push
or
stc
mov
mov
xor
push
xor
mov
int
ficomps
mov
inc
pop
push
lods
or
pop
sub
data16
js
mov
fcomps
sub
or
pop
jg
cmp
cltd
adc
mov
sub
push
lea
addl
mov
pop
insb
inc
xchg
cmp
add
adc
mov
xorb
fs
xchg
or
in
xchg
mov
sbb
xchg
hlt
dec
and
pop
js
push
jge
add
ss
cmp
mov
inc
fdivs
cld
inc
daa
push
aaa
adc
xchg
sub
dec
push
fnstcw
int3
test
jmp
outsl
push
outsb
stc
push
pushf
in
inc
and
arpl
mov
imul
mov
ret
rcrb
and
push
stos
push
mov
cld
outsl
loopne
movsl
push
clc
ret
daa
ss
mov
test
sbb
mov
pop
cmp
jnp
cltd
xlat
addr16
test
imul
adcb
xchg
cmpsl
xlat
out
add
jl
jnp
jp
pop
fadd
orl
lods
leave
add
pop
sahf
ja
aaa
mul
pop
loope
and
mov
mov
fcmove
or
mov
fs
mov
jae
cwtl
stos
jl
testb
xchg
jo
mov
cmpb
or
nop
xor
mov
stos
xor
fistpl
sbbl
out
sti
daa
ljmp
dec
repnz
ret
and
push
inc
xor
aas
in
stos
sahf
sbb
or
stc
enter
ja
ja
mov
mov
dec
or
adc
and
mov
in
inc
sub
inc
xor
sti
pop
cmpsb
jge
sbb
and
pop
ret
xor
jmp
andb
sbb
fstpt
cmovp
fucomi
xchg
icebp
lahf
repz
mov
cmpsb
aad
sbb
push
push
mov
jp
mov
mov
xor
inc
mov
daa
repnz
sbb
xor
mov
pop
mov
xchg
adc
stos
adc
nop
jnp
pop
rolb
mov
sahf
add
movsl
xchg
pop
lcall
fimuls
push
movsb
dec
subb
jp
and
sbb
mov
add
fiaddl
mov
aaa
ljmp
negl
out
jl
push
fsts
mov
jno
jns
cmc
pop
cmpsl
lcall
cmp
or
mov
in
adc
push
inc
cltd
mov
aas
test
cmpsl
pushf
inc
adc
xchg
mov
and
cmp
sbb
add
pop
pop
xor
xor
cmp
xlat
mov
pushf
adc
add
repz
xchg
ds
or
fimull
push
sbb
out
add
sbb
or
add
fists
xchg
xchg
aad
leave
popa
lods
sub
mov
cmp
lea
pusha
fimull
ja
push
xchg
es
dec
pushf
xchg
push
pop
fiadds
sahf
lret
pop
loop
ficoml
mov
mov
jg
mov
out
sbb
call
movsl
push
push
sbb
or
iret
adc
cmc
sub
mov
out
rcrl
sub
out
arpl
xchg
sub
insl
jg
xchg
stos
add
push
adc
lret
loopne
jmp
mov
scas
xchg
xchg
cmp
dec
movsl
das
xchg
inc
sub
xchg
stc
shlb
adc
neg
and
out
push
dec
popf
cmpsb
cltd
sbbb
jl
and
pop
jmp
faddl
cltd
pop
xor
bound
adc
out
pop
hlt
push
sub
push
add
sbb
addl
inc
outsb
inc
sub
fldcw
xchg
xor
inc
cmp
mov
cmpsl
or
jne
and
adc
push
and
push
mov
add
iret
cltd
xchg
inc
inc
subl
pop
jle
mov
or
leave
xor
arpl
out
adc
or
test
jb
pop
cmpsb
ja
scas
mov
sbb
int
mov
mov
je
cmp
jle
fs
aaa
jecxz
push
adc
cwtl
or
nop
sti
ljmp
mov
bound
push
addr16
and
cmp
js
addr16
xchg
fstps
aas
popa
arpl
xchg
in
xchg
cs
jns
das
popf
hlt
call
mov
fwait
push
cmp
les
stos
ja
push
popf
mov
scas
lods
ljmp
cld
adc
and
mov
adc
xor
mov
decl
nop
dec
and
lahf
imul
cmp
int
xchg
or
inc
popa
and
in
out
push
in
outsb
xor
hlt
scas
lds
dec
mov
aam
xor
adc
scas
aad
pop
andl
daa
hlt
pop
nop
pushf
mov
lods
jle
inc
sub
cmp
test
push
pop
cs
cmp
or
push
cmp
add
jne
add
add
cmp
mov
pop
add
and
loopne
das
jne
es
subb
xor
int
sbb
loopne
movsl
cltd
push
adc
in
add
or
sbb
pop
sbb
js
xchg
leave
gs
and
test
mov
inc
and
fs
cli
daa
sub
xor
mov
ljmp
mov
sub
popa
int
notb
or
dec
jp
sub
sub
mov
xchg
std
pop
add
mov
mov
in
sbb
mov
xchg
stos
inc
jo
push
xchg
xchg
arpl
push
pop
icebp
cmp
fisttpl
xchg
inc
adc
add
mov
rcrb
mov
push
arpl
xorl
shll
hlt
mov
xchg
dec
mov
test
pop
sub
out
cli
insl
out
sub
test
add
in
add
pop
rorl
xchg
xlat
fldpi
adc
inc
mov
pop
or
lods
push
sbbb
enter
cli
imul
mov
jns
sti
pop
mov
cli
movb
jno
pop
jae
mov
inc
dec
fisubrs
xor
pop
fcmovne
inc
in
movsb
in
mov
or
std
mov
jnp
and
or
les
ret
repz
mov
pop
mov
or
inc
int
pop
and
movlps
movsb
lret
scas
push
jno
rcrb
adc
or
push
psllq
add
xchg
fildll
pop
mov
dec
sahf
jg
gs
adc
fucompp
inc
mov
dec
rclb
scas
lds
jl
loope
sub
pop
adc
out
rcrl
lcall
orl
je
adc
cmpsl
sbb
sub
test
pop
sub
stos
xchg
outsl
push
mov
lds
mov
scas
xor
pop
jne
enter
xchg
ljmp
pop
faddl
inc
js
and
or
lcall
jl
bound
int
mov
lods
test
aas
mov
outsb
jne
add
scas
and
push
jge
ss
mov
cmp
pop
xor
sahf
or
dec
test
out
pop
cli
mov
je
pop
jb
dec
jp
sbb
sbbl
pop
loope
push
mov
cs
imul
test
mov
movsb
sahf
aad
hlt
pop
sti
mov
dec
pusha
cs
xlat
popf
push
cli
jge
push
xchg
add
push
out
loop
scas
test
or
int3
cmp
pusha
and
jmp
cmp
clc
and
add
add
sbb
adc
xchg
and
sub
mov
mov
ret
cli
xor
and
cs
mov
js
outsl
mov
and
xchg
stos
repnz
test
gs
aad
jmp
notl
ds
dec
push
std
push
jns
call
jae
sar
jbe
mov
dec
loope
sbb
adcl
rcl
lahf
shll
repz
jmp
cli
mov
gs
cs
fistl
and
pop
shrb
test
test
pop
sti
sub
repz
data16
daa
cmp
out
mov
and
sbb
jnp
and
dec
or
sar
daa
mov
and
xlat
and
ret
xor
int3
push
in
dec
sbb
insb
popf
pop
mov
mov
addl
test
cmp
test
dec
sarb
insb
xchg
dec
xchg
xchg
movsl
push
or
cli
xor
xor
fstpl
hlt
jo
cmp
rep
aam
mov
sbb
mov
cli
out
dec
jp
js
pop
mov
nop
movsb
fwait
xchg
cmp
std
cmc
dec
sti
or
mov
mov
cmp
mov
imul
fwait
into
lahf
jnp
cmp
adc
inc
adc
jmp
roll
leave
leave
popa
mov
push
mov
lret
out
out
jns
xchg
mov
sub
cwtl
or
ret
mov
mov
add
sbb
inc
loop
adc
stc
cmpb
loopne
aas
jnp
mov
out
into
or
addr16
subb
es
imul
add
sub
addr16
lock
lcall
iret
mov
push
adc
pop
adcb
icebp
xchg
imul
push
xor
mov
or
and
lds
dec
inc
inc
push
xchg
pop
add
jbe
test
xor
jecxz
mov
pop
dec
into
nop
sub
bound
fsin
push
fadd
add
sahf
mov
dec
jp
lods
bound
pop
pop
add
out
loop
xor
inc
jne
mov
pop
shld
dec
out
adc
pop
cwtl
mov
ficoml
mov
xor
jae
and
outsl
adcb
jns
mov
ret
pop
xlat
dec
xchg
divb
adc
lock
mov
roll
and
pop
and
stos
pop
push
push
fisttpll
inc
mov
cmc
add
imul
jg
andb
cmp
das
subb
ss
jno
pop
dec
ret
cmp
cmp
es
xor
into
push
popf
cmp
add
dec
ja
jge
shrl
sub
sub
mov
mov
rcrl
enter
jecxz
fwait
mov
shrb
sbb
jns
jnp
pop
mov
sbb
mov
mov
mov
mov
frstor
pop
insl
xchg
fdivs
in
push
out
insl
paddsb
ret
jle
pop
mov
lods
test
push
js
test
add
daa
aaa
or
sub
into
push
inc
rcl
popa
cli
lock
cs
outsl
lock
sub
stos
jecxz
and
mov
xchg
sub
testb
inc
in
push
cltd
cwtl
adc
xor
repnz
add
mov
pop
lock
xchg
dec
cmpsb
test
in
nop
mov
sbb
or
jnp
jg
rorl
iret
into
mov
es
leave
cmp
test
fistps
xchg
jns
jl
push
sbb
dec
pop
out
arpl
lcall
or
aad
inc
fsubp
lea
mov
dec
or
lods
sub
mov
xchg
mov
cmpsl
imul
imul
pop
out
cmp
or
cmp
cli
dec
sbb
add
jb
das
xchg
xchg
xchg
bound
inc
hlt
data16
lahf
xchg
stos
xor
aam
jmp
movsb
int
repnz
dec
es
leave
jle
or
mov
stc
xchg
rcr
aaa
lret
ficompl
test
push
cld
daa
fimuls
push
or
rorb
test
xchg
sti
out
imul
mov
icebp
pop
stos
scas
dec
lret
scas
and
sbb
pushf
sbb
rcrb
mov
out
dec
sahf
out
inc
mov
jbe
push
mov
jle
call
and
xor
add
jmp
cmp
push
ds
repz
sbb
dec
sub
push
inc
fiaddl
xor
xor
jle
in
test
in
xchg
ljmp
xlat
xor
cmp
loopne
and
and
mov
add
in
mov
xchg
sbb
push
cmp
daa
push
lea
out
xor
cvtps2pd
lcall
movl
mov
inc
sarl
mov
pop
movsb
inc
fstpt
lret
push
sahf
sub
and
imul
in
dec
sbb
adc
dec
fistpl
jge
dec
loopne
fistps
or
movsl
push
sbb
dec
push
stos
out
xchg
xchg
adc
clc
inc
scas
lods
push
lret
popfw
xchg
and
aas
add
outsl
mov
mov
sub
and
cwtl
enter
fwait
jl
das
out
sarb
lea
mov
add
imul
mov
mov
mov
test
pop
nop
pop
inc
cmp
and
ljmp
adc
jne
cmp
dec
subb
inc
les
jae
fildll
nop
or
nop
ret
cld
mov
jge
test
jne
iret
cmp
mov
sub
xchg
lea
pusha
ja
mov
xor
lock
mov
xchg
lds
and
scas
fs
iret
inc
mov
mov
mov
push
je
xor
dec
add
cmc
adc
in
push
rcrl
lcall
dec
imul
mov
aad
xor
hlt
or
jecxz
dec
pop
xchg
dec
or
mov
in
xchg
dec
aas
push
gs
shl
sti
testl
and
rorl
bound
aas
mov
push
fistps
out
enter
mov
pop
jns
int
dec
fimull
enter
outsb
or
jle
xorb
cmpsl
or
lock
mov
mov
ja
cs
lcall
mov
in
push
xchg
pop
dec
clc
mov
hlt
in
or
or
gs
cmp
fisubs
and
bound
inc
push
out
cmpsb
icebp
in
hlt
pusha
paddsb
inc
in
mov
cwtl
inc
mov
pusha
or
sbb
mov
sahf
leave
ret
cmc
in
add
jo
enter
js
dec
stos
mov
lcall
xchg
in
stos
mov
inc
mov
inc
push
loope
xchg
mov
adc
movsl
add
xor
lahf
mov
pop
stos
into
shr
in
mov
daa
insb
cltd
ret
in
sub
sahf
jl
push
push
mov
daa
pop
push
out
xor
mov
push
data16
movhps
cmp
jecxz
push
inc
fwait
pop
test
jbe
sub
adc
xchg
push
hlt
imul
ss
pop
adc
stc
js
push
or
dec
sbb
leave
scas
pusha
sbb
in
mov
rorl
ja
adc
or
out
pop
push
cmp
push
jnp
pusha
cmc
clc
mov
and
fdecstp
pop
mov
pusha
ret
mov
in
adc
push
imul
mov
aam
cmp
jbe
movsb
push
adc
test
repnz
push
push
test
data16
mov
ror
xlat
mov
lret
inc
jmp
xor
ja
into
adc
mov
mov
dec
cli
std
add
test
aad
dec
xor
fs
sub
sub
mov
mov
mov
loope
lods
out
or
loop
mov
outsl
fists
imull
push
addr16
and
sub
mov
mov
ljmp
sbb
jb
jnp
cld
jo
fistpl
lock
dec
pusha
push
mov
aas
mov
inc
cmp
push
inc
add
lcall
outsl
jno
mov
scas
pop
icebp
popf
dec
es
ss
mov
jbe
mov
lahf
pushf
add
xor
dec
sbb
mov
pop
in
call
es
mov
filds
aad
add
mov
testb
dec
repz
jmp
mov
scas
push
lea
sahf
dec
pop
and
pushf
cwtl
dec
shlb
and
sahf
and
xchg
sbb
pop
or
cmpsl
es
mov
sbb
movsl
push
push
aaa
dec
jnp
sbb
inc
bnd
xor
xchg
js
stos
rclb
arpl
push
jecxz
push
mov
mov
or
nop
adc
or
adc
pop
dec
lcall
and
loopne
cmp
dec
xor
jge
testl
xchg
cmp
dec
mov
add
or
jo
scas
mov
je
popa
insl
push
adc
xchg
dec
andb
shlb
add
jle
push
fwait
inc
inc
mov
inc
cmpsl
pop
rcll
test
sbb
mov
mov
mov
and
stos
sti
inc
xlat
xor
clc
xchg
loop
mov
jne
out
dec
cmc
insb
cltd
fisttpll
sti
arpl
push
pop
sti
incl
adc
outsl
mov
cli
out
cmp
fs
sub
insb
repz
rcrb
call
and
imul
pop
mov
insl
xchg
in
mov
inc
adc
xchg
pop
inc
out
or
stos
mov
adc
enter
shl
sbbb
arpl
lahf
push
loope
fldl
xchg
push
cmp
mov
into
lret
sbb
xchg
aad
push
jne
or
repnz
iret
in
outsb
imul
daa
adc
cmc
xchg
adc
sbb
and
aam
mov
adc
insl
add
mov
sbb
sub
retw
and
test
cld
ret
loop
sbb
cmpsl
pop
or
je
imul
xchg
and
psllq
iret
dec
jb
out
dec
and
push
jp
enter
dec
sbb
inc
adc
iret
adc
xchg
pop
rcl
pop
pusha
ljmp
out
test
and
lahf
mov
out
mov
aas
jno
mov
cmp
into
mov
lods
enter
adc
ds
sub
dec
pop
imul
jge
pop
sbb
jp
mov
push
xchg
xor
loopne
mov
ret
cmpsl
inc
pop
loop
push
jno
inc
loop
in
fistpll
pop
cs
fadds
data16
movsb
dec
imul
popa
das
push
sbbb
jbe
sbb
push
cmp
sub
pop
test
pusha
popa
and
xchg
sub
push
sbb
sub
das
mov
pop
out
push
jo
cltd
aam
stos
mov
mov
aas
push
sub
xchg
jo
sbb
xchg
hlt
in
jp
movsb
lret
cmp
fldcw
sarl
je
lock
jge
sbb
jae
jne,pn
iret
testb
cmp
and
mov
test
scas
fcoms
fs
mov
je
pop
iret
lds
jge
cwtl
ret
adc
jp
dec
mov
jbe
sub
or
sub
mov
pop
mov
cld
sbb
push
lods
repnz
leave
and
fildll
push
mov
subb
mov
movsb
add
addr16
xor
sub
fldt
pushf
jno
mov
inc
fists
int
or
ja
lds
jns
mov
negl
adc
fldcw
mov
adc
sub
mov
ss
add
push
sahf
pop
ret
mov
mov
outsl
in
xchg
popa
push
mov
ljmp
cmpsb
push
add
je
enter
push
call
imul
jle
pop
jo
cld
aaa
lcall
xchg
mov
sbb
jecxz
dec
add
adc
push
fcomip
inc
aam
test
or
decl
cmp
jnp
arpl
or
pusha
aam
dec
lock
xchg
xlat
cmc
cwtl
xchg
test
sub
pop
mov
sahf
push
push
xor
inc
ret
xor
ss
call
ret
in
jge
mov
or
jnp
cltd
in
inc
sub
push
je
xor
hlt
popa
jl
mov
dec
xchg
push
pop
dec
mov
cld
imul
lods
jecxz
icebp
stc
js
neg
pop
push
cwtl
mov
lahf
mov
and
fs
push
mov
dec
mov
sarb
addr16
sbb
sar
adc
push
int
pop
call
and
mov
add
xchg
data16
icebp
cmp
pop
inc
jle
xchg
pop
and
xlat
jecxz
push
mov
push
cmp
sub
in
arpl
lock
xor
or
pusha
icebp
repz
add
test
jge
aam
and
or
femms
fst
cmp
inc
js
out
mov
mov
lds
xor
xchg
outsb
dec
adc
and
pop
cmp
mov
adc
fdivl
jb
or
jge
push
adc
add
and
shlb
sub
cwtl
popf
mov
rolb
sbb
inc
stc
sub
sbb
jb
repnz
lahf
mov
adc
and
mov
jbe
ficoml
std
test
dec
cmp
adc
js
ss
mov
movsl
or
into
push
adc
jnp
movsb
aas
mov
stos
cmp
insl
mov
mov
push
aaa
push
adc
cld
enter
lods
mov
mov
mov
icebp
push
jmp
insl
loopne
cwtl
jg
sbb
addl
das
out
or
xchg
inc
fisubrs
hlt
push
int3
shrl
inc
cmp
adc
xchg
cli
mov
cld
dec
cltd
fcoms
pop
rcll
or
jmp
dec
mov
mov
iret
frstor
cmp
shlb
std
add
lods
fadd
bound
mov
outsb
mov
aad
bound
mov
cli
mov
fwait
in
iret
and
adc
pop
xor
xor
fcos
dec
repnz
push
mov
cltd
stc
add
outsw
scas
imul
loope
aad
push
je
stos
jecxz
and
cmp
add
jp
insl
popa
jg
decl
jne
pop
ret
ja
inc
popa
jecxz
fcomip
jle
pop
gs
lret
sbbb
add
into
mov
int3
into
pop
imul
mov
add
rol
out
rcrb
out
out
arpl
int
out
cmp
push
mov
testl
inc
add
stc
cmp
out
xlat
shll
or
and
fwait
inc
sti
mov
jmp
icebp
aaa
mov
imul
adc
dec
dec
push
push
jno
icebp
adc
int
jmp
shll
stos
das
lods
aad
lock
insl
inc
adcl
mov
sarb
xorl
pushf
push
or
and
mov
movsl
jmp
jle
repz
pop
xchg
jno
jns
lret
or
outsb
mov
or
sbb
das
push
imul
sub
faddl
adc
stos
add
jecxz
daa
push
ljmp
addr16
cmpl
xor
push
and
cmpsl
outsl
decb
mov
ffreep
add
inc
inc
and
out
dec
xchg
pushf
das
out
mov
sahf
xor
mov
mov
shll
inc
mov
aas
das
scas
in
lods
xor
imul
pop
xchg
add
mov
movsl
divb
fdivr
sub
pop
int3
lods
add
movsl
adc
cmp
pop
std
loop
dec
outsb
fdivr
cmp
push
jmp
dec
in
mov
cs
cmp
lods
push
mov
cmp
cmp
xlat
outsl
mov
call
jmp
xor
and
pusha
enter
aas
mov
dec
in
cld
dec
mov
subl
or
sti
adc
xchg
hlt
and
ret
jl
push
inc
dec
adc
sbb
sub
movsb
jg
repz
mov
out
das
fistpll
mov
cmp
dec
incb
sub
adc
icebp
mov
dec
inc
loop
jecxz
es
inc
xchg
jbe
xchg
xor
adc
xchg
sub
jns
jb
movsb
jb
repnz
ror
orb
movsb
pop
mov
push
jle
aaa
cmp
stc
push
fimuls
popa
mov
xlat
push
xor
clc
cmpsl
iret
test
out
dec
inc
jecxz
mov
xorb
mov
mov
sbb
mov
pusha
sub
scas
dec
cmp
popf
inc
jae
fcomps
cs
push
xchg
xlat
out
insb
sbb
inc
cmp
cmpl
stos
mov
subl
jg
std
outsb
cwtl
adc
call
addb
add
jg
sub
jns
ret
add
hlt
jle
ds
cli
pop
pop
inc
xchg
sahf
mov
add
ljmp
js
mov
and
mov
mov
add
sbb
bnd
nop
mov
pop
shrl
adcb
add
mov
movb
enter
fisubrs
inc
pushf
jp
push
cld
xor
add
movsl
andl
in
ret
jg
mov
nop
inc
rorb
cmp
fisubrl
das
add
mov
and
xor
jmp
fisubs
jmp
ss
push
int
fcoms
or
mov
and
push
mov
pop
pop
outsl
imul
mov
cwtl
and
add
aas
cmc
jne
pop
mov
pop
jnp
shlb
xchg
rolb
jns
cs
push
and
cmp
inc
sti
sub
dec
mov
dec
sbb
push
and
cmp
stos
inc
xlat
sbb
push
scas
pushf
jb
xchg
pop
mov
ljmpw
cmp
push
insl
in
fsubl
cmp
imul
lock
add
dec
stos
pushf
sbb
inc
xchg
loop
add
in
jl
pop
or
sbb
mov
push
mov
cmp
stos
lods
or
xchg
hlt
pushf
mov
fs
mov
mov
fcompl
mov
out
out
add
jae
cli
in
stos
mov
mov
shrb
jno
sbb
jle
ror
cmp
xchg
sub
das
nop
and
in
and
pushf
mov
inc
repnz
adc
in
dec
pop
push
mov
subl
jne
pop
mov
movsl
fwait
les
adc
adc
jne
xchg
dec
fimull
test
xor
popa
insb
push
fistpll
jns
add
cmpsb
loop
add
or
mov
aad
mov
mov
xchg
push
or
add
xchg
and
xor
or
jno
fsubs
cltd
or
cmp
jl
in
fs
jb
cli
xchg
push
popa
pop
add
sbb
pop
pop
pushf
decb
jnp
cli
adc
jno
cltd
or
hlt
add
movsb
js
out
lret
inc
das
inc
jmp
cwtl
andb
add
call
push
negb
dec
shll
or
jmp
outsb
lret
inc
cwtl
nop
sub
and
mov
test
ds
mov
xor
scas
iret
lcall
inc
int3
fmuls
sbb
gs
scas
xchg
sbb
test
outsb
or
std
cwtl
js
xor
inc
dec
mov
test
leavew
cld
shlb
adc
cmpsb
hlt
add
in
pop
out
mov
icebp
mov
test
imul
sahf
xchg
out
ud0
mov
inc
push
xor
xchg
cmpsl
lcall
pop
adc
jge
call
lods
sub
orb
xchg
mov
xor
pop
popl
dec
and
imul
in
in
ds
loop
int
cli
int3
out
inc
jmp
jle
push
jns
xchg
popf
out
add
inc
pop
sub
fucomip
shll
rolb
adc
mov
dec
xchg
shl
cmp
push
cmp
sub
scas
lea
clc
mov
xchg
add
xchg
add
mov
mov
das
sub
xlat
jo
mov
push
imul
lock
jae
adc
pop
movsb
push
push
sub
pop
or
mov
daa
lods
in
cmpsb
lahf
rorb
scas
push
fucomi
call
xchg
bound
stc
jb
xchg
out
cltd
cmpl
scas
fistpll
add
push
dec
test
test
shlb
les
add
adc
mov
mov
cltd
sbb
outsb
sub
add
xor
pop
lea
daa
sbbb
lret
adc
or
inc
pop
pop
mov
out
decb
insb
pushf
addl
sub
movsl
fwait
sub
mov
std
xor
shlb
dec
dec
inc
jmp
adcl
mov
rcrb
subl
xchg
xor
cli
pop
jle
push
pop
std
mov
mov
cs
clc
and
aam
xorb
roll
fdivp
inc
push
xor
loopne
mov
inc
mov
add
enter
das
call
xlat
pop
mov
xchg
adcl
jno
jae
jmp
sbb
fs
subl
xchg
xchg
movsb
fbstp
dec
pop
movsb
xchg
mov
cmpsl
sahf
ret
sub
gs
ret
xor
pusha
and
imul
aam
iret
sub
mov
dec
mov
jecxz
inc
aam
xlat
shll
cmp
jb
cmp
mul
loop
fdivs
and
xlat
add
data16
mov
ja
push
cld
xor
insb
sub
insb
arpl
lock
and
cmp
movsb
repz
lahf
mov
jle
mov
aam
into
leave
jns
sarb
mov
pop
dec
mov
aas
mov
jno
aas
mov
jbe
in
pusha
push
xchg
andl
sbb
pop
sub
out
mov
adc
arpl
movsl
mov
pop
mov
aad
sbb
pop
lahf
mov
or
out
xor
hlt
stc
xorl
sub
ret
pop
out
add
xor
test
aaa
sbb
shrl
inc
push
cmc
or
pop
pusha
cmpsb
in
sbb
gs
cmpb
mov
hlt
or
xor
sbb
xor
inc
or
outsl
sub
jle
xchg
push
or
bound
pusha
dec
mov
sarl
pop
or
test
adc
addr16
jo
jo
addr16
jns
inc
repz
mov
cli
mov
inc
push
test
rorb
ja
add
cmpb
lret
insb
hlt
inc
aaa
sti
sub
shlb
sub
and
ja,pt
aam
and
adcl
add
aam
mov
add
insb
icebp
jl
daa
fbld
sub
jnp
pop
sub
adc
pusha
int
bswap
mov
fstpt
je
jle
outsb
sbb
sbb
pop
test
mov
jg
fld
push
xchg
push
inc
add
adc
jo
xor
mov
xchg
cmp
cmpsb
scas
xor
lock
and
addr16
pop
add
lods
stc
inc
cmp
add
jl
jno
mov
adc
mov
test
and
test
mov
cmp
test
push
scas
in
sahf
mov
out
xchg
in
mov
mov
xchg
insl
xor
clc
andl
jns
ret
iret
enter
es
ljmp
mov
jmp
jbe
adc
icebp
call
fistpl
scas
or
pop
lret
sbb
sar
imul
nop
mov
mov
in
jecxz
pushf
or
cli
rorl
bound
aad
xchg
imul
shl
sbb
hlt
mov
mov
pop
inc
inc
adc
jecxz
pop
or
xchg
pop
xchg
push
shlb
pop
popf
jle
mov
gs
lcall
call
pop
and
jecxz
imul
gs
jnp
std
es
and
push
aaa
lea
inc
in
dec
out
push
sti
out
in
and
xor
xor
push
fs
rcrl
int
xchg
fstpt
and
rclb
mov
mov
repnz
cmpsl
shlb
das
fistpl
sbb
mov
and
push
nop
mov
xchg
jmp
ret
xchg
inc
js
push
es
mov
mov
xchg
mov
xor
out
test
lods
shr
cltd
mov
pop
int3
ret
cmp
cld
jle
inc
scas
lcall
jbe
call
insl
inc
push
jae
sub
sbb
inc
test
loop,pt
cltd
fs
lret
mov
jne
inc
shr
in
adc
adc
fdivrl
test
test
add
pop
xor
outsl
and
mov
subl
out
adc
mov
mov
cmp
out
mov
stos
dec
aad
pusha
mov
ret
aad
fwait
sbb
je
mov
ljmp
cmc
data16
insl
jno
adc
ljmp
std
sbb
loopne
out
scas
inc
fisubs
adc
clc
punpcklwd
into
clc
cmp
xchg
xchg
dec
stos
mov
push
scas
ss
mov
int
jno
subb
fbstp
push
shr
into
sbb
sahf
dec
and
mov
fcmovb
fwait
sbb
clc
sti
dec
cwtl
int
lahf
inc
inc
idivl
aaa
add
fwait
in
mov
cmpsb
cwtl
sahf
repz
xchg
add
xor
aam
dec
xor
scas
icebp
jae
ret
push
popa
repnz
pop
fimuls
arpl
ss
insb
imul
pusha
test
iret
sub
or
movsb
ss
addr16
inc
insl
xchg
rorb
xchg
cmp
jb
dec
xchg
cmpsb
test
jo
mov
fadds
jb
mov
fbld
rorl
inc
lods
sub
adc
and
mull
test
fadds
mov
push
fbld
mov
sbb
sarl
pop
fildl
js
rorb
mov
jecxz
mov
sbb
and
cli
cmpsl
jo
and
xor
lea
add
in
aas
mov
xor
mov
popa
fsubrs
and
movsl
inc
push
shrl
mov
fs
cmpsb
shll
mov
mov
rcr
rcl
sub
push
inc
xchg
dec
push
dec
sbb
int
mov
shrl
enter
lea
add
out
pop
jnp
pop
mov
push
call
js
push
sti
jle
daa
in
push
pop
gs
lds
arpl
scas
cwtl
pop
mov
mov
and
fdivp
decb
std
mov
mov
mov
call
cmp
test
push
xor
dec
sub
fistpl
push
dec
sub
lcall
les
cmp
cmp
cwtl
hlt
pop
int3
fcomp
jle
xlat
int
sub
shlb
test
xor
adc
movsb
inc
or
add
pushf
xor
and
mov
dec
mov
int
pop
loopne
cld
push
xor
push
mov
xchg
idivl
jmp
repnz
popa
inc
add
pop
or
xchg
outsb
inc
imul
cmp
xor
maskmovq
idivl
xchg
mov
jne
mov
movsb
data16
out
pop
insb
mov
xchg
iret
out
jno,pn
pusha
test
xor
add
pop
cmp
lods
dec
test
adc
insl
mov
mov
lods
xor
adc
and
jo
jmp
scas
fmull
adc
pushf
shlb
out
out
sbb
add
ja
inc
scas
xor
sbb
mov
xchg
aas
jns
or
fs
popa
jl
js
jae
mov
cmp
scas
jo
lahf
jnp
das
pop
stos
cmpsl
mov
lds
jle
into
add
mov
sub
cmpsl
rcrl
decl
push
xchg
pop
testl
push
out
and
mov
adc
lret
leave
in
mov
sbb
push
inc
aam
addr16
dec
loopne
mov
mov
hlt
adc
outsl
stc
repz
mov
test
imul
hlt
xor
inc
cmp
pop
addr16
pop
add
or
shll
adc
nop
scas
xlat
jle
cmp
mov
data16
test
mov
enter
subl
movzwl
pop
push
gs
mov
cmp
cmpsl
mov
rol
ja
lret
or
mov
cli
shll
lret
in
out
hlt
test
xchg
es
add
stc
jl
icebp
and
in
call
lock
mov
sub
xor
xor
sbb
dec
xchg
mov
xchg
and
sub
and
jmp
in
mov
xlat
mov
jmp
jno
xchg
das
inc
sub
pop
inc
mov
mov
pop
icebp
jb
popf
fsubrl
lret
jecxz
or
or
insl
jns
push
mov
lahf
mov
popf
cmpsl
lods
and
mov
jmp
shll
cmp
adc
xchg
fstps
mov
dec
sub
popa
test
mov
movsb
cmpsb
rolb
fxtract
lahf
dec
xchg
adc
movsb
test
jne
je
xor
cmp
mov
subl
in
out
inc
add
lock
icebp
ss
ret
xlat
lcall
scas
mov
imul
mov
sub
insl
pushf
mov
push
add
sbb
lock
mov
sti
dec
or
dec
cltd
cwtl
mov
rclb
sub
es
in
ljmp
add
out
xchg
insl
stos
repnz
aas
fucom
xchg
mov
clc
fcmovne
adc
sahf
roll
mov
jbe
daa
lahf
inc
pop
dec
pop
xchg
mov
and
mul
out
sub
mov
outsl
jb
adc
sub
aaa
bound
push
inc
in
or
je
movsb
xor
or
sarb
dec
lahf
cmc
push
in
dec
clc
xor
add
lods
jg
js
inc
cmp
aad
jle
hlt
jne
fadd
lods
cmpb
adc
or
mov
subl
adc
mov
orb
or
or
sub
pop
sti
sub
sbb
xchg
push
xchg
enter
cmpsb
jne
int
dec
adc
sbb
in
mov
sub
outsl
push
aad
cld
scas
push
xchg
lods
movsl
jno
adc
jnp
push
inc
xlat
lods
cs
sub
lds
adc
cs
ja
aam
fcmovbe
dec
ljmp
pop
sbb
fsubl
xor
insl
cmp
mov
scas
sti
out
insl
xor
addr16
xchg
popa
inc
cmp
sbb
add
pop
mov
xor
push
jne
fcomps
fnstenv
cmp
or
jb
push
dec
cmp
lahf
incb
or
cmp
and
and
addr16
pop
lcall
xor
in
ja
xchg
inc
loope
repnz
in
and
dec
push
adc
adc
jb
xor
fsub
and
test
pushl
push
xchg
jecxz
cmp
outsl
sub
xchg
pop
xlat
mov
sarl
cmp
xor
es
ret
lock
add
mov
les
jbe
aam
xlat
cmc
lcall
mov
mov
movsl
aam
inc
xchg
sbb
sub
xchg
cmpb
add
mov
pop
sbb
lahf
cmc
pop
roll
or
or
jl
and
jle
inc
add
sti
stc
popf
aaa
and
xor
and
cmp
xchg
push
sub
out
push
push
call
aam
mov
sub
jge
and
lods
lret
sbb
jp
or
test
testl
or
adcl
dec
xchg
in
pop
mov
adc
xchg
adc
fcmovne
arpl
loopne
jns
and
idiv
jbe
sbb
notl
and
fiadds
ror
into
dec
fidivl
sahf
jns
ljmp
test
cmp
sub
mov
and
cwtl
sahf
fildl
push
pop
negl
jbe
orl
fistpl
fs
movsb
dec
push
stos
loope
mov
aas
mov
sub
jae
cs
ds
push
cmp
pusha
mov
mov
add
mov
fwait
adcb
push
inc
cmpsb
xchg
xchg
push
loop
jle
loop
mov
add
das
lret
mov
xchg
mov
out
xchg
dec
ss
arpl
lds
fldl
incb
je
mov
pop
shll
popa
cmc
adc
arpl
lahf
icebp
inc
cld
fcoml
cmc
pop
lcall
in
adc
stos
or
stc
shrl
ficomps
decl
stos
or
inc
inc
scas
jge
pop
fiadds
pop
pop
lahf
aas
adc
mov
addr16
ss
movsl
jle
test
into
sti
andb
pusha
rolb
sub
push
mov
sahf
and
mov
cwtl
fisttpl
hlt
stc
jg
cmp
lock
in
cmp
inc
fimuls
dec
test
and
rcrl
fmulp
lahf
mov
les
add
jnp
stc
push
in
and
out
stc
sbb
hlt
sub
xchg
and
dec
mov
adc
or
sbb
jle
pop
or
pop
nop
xor
sub
dec
aam
cmpsl
jl
mov
inc
dec
jp
cmp
js
ljmp
arpl
xor
lret
incb
push
pop
push
inc
jne
nop
pop
sbb
inc
jb
sub
mov
nop
mov
int
and
add
gs
es
push
sbb
subb
mov
aaa
ja
mov
adc
aaa
leave
add
push
add
jne
add
int3
jb
mov
std
es
loop
adc
and
js
jns
push
lods
adc
push
and
cwtl
mov
mov
mov
pop
std
insl
push
and
sub
ljmp
inc
push
push
ficoml
cld
cmpsl
inc
push
lcall
jl
pop
mov
cmpsl
std
nop
mov
mov
xchg
movsl
dec
aam
dec
sub
xor
adc
das
stc
jbe
adc
call
dec
int3
jae
pop
gs
mov
mov
pop
pop
popf
je
add
dec
leave
dec
repnz
mov
test
add
xchg
lock
sub
fwait
sub
or
inc
sbb
dec
mov
fld
mov
sti
jg
add
cmpsb
mov
fcmovnb
pop
mov
or
pop
adc
pusha
dec
jae
jle
stc
adc
push
pop
mov
pop
push
cwtd
fucomp
in
in
adc
int
fmulp
jns
push
gs
ret
sub
xchg
jo
inc
andb
cmp
cmp
adc
xor
add
mov
adc
mov
sub
mov
or
and
int3
adc
insl
clc
mov
add
das
jmp
pop
fdivrl
lret
mov
jp
test
mov
pusha
fmuls
push
sub
in
pushf
jmp
cmc
popf
test
mov
jle
int3
fnstcw
lea
push
out
mov
mov
ret
int
daa
and
sub
add
inc
adc
xor
fistpll
shl
adc
aam
fs
adc
rclb
and
xor
xchg
fwait
out
mov
pop
cmp
cmp
sbb
scas
cmp
pop
push
outsb
jb
leave
pop
xchg
sub
mov
pop
lock
dec
cmc
mov
jl
push
dec
mov
add
pop
jns
dec
rorl
cs
mov
dec
mov
lahf
outsl
jp
push
push
jecxz
mov
or
xorl
sub
in
xchg
add
sub
cmp
inc
shll
pop
jnp
jnp
mov
xchg
inc
mov
out
jle
mov
cmp
icebp
jl
stos
mov
fists
mov
push
jnp
xchg
inc
out
mov
inc
lahf
pop
xchg
adcl
je
push
arpl
sub
scas
cmp
jb
mov
rcr
test
ficomps
mov
inc
enter
dec
mov
popf
les
fidivl
test
push
jmp
cmp
sarl
push
testb
pop
mov
inc
out
ret
mov
lcall
add
jo
add
lret
js
stos
or
adc
jne
sahf
add
aas
cltd
lods
adc
mov
and
dec
orl
jecxz
fadds
xor
outsl
sub
lret
stos
addr16
and
xchg
push
movups
sbbl
sti
jno
mov
ds
mov
jge
popa
sub
pop
jno
pop
ja
dec
mov
or
pop
scas
dec
jb
aaa
mov
mov
movsb
jo
incl
pop
add
test
xor
nop
jmp
mov
and
mov
into
jne
cmp
push
fwait
mov
adc
or
popf
mov
dec
out
mov
cmpsb
cwtl
lods
lcall
sbb
pop
or
or
ror
daa
xchg
inc
inc
jbe
fcompl
mov
pop
ja
jae
insl
or
aaa
push
mov
call
push
stos
sub
or
dec
adc
adc
loop
jae
jnp
dec
pop
mov
lods
inc
sbb
jmp
hlt
add
aaa
mov
adc
arpl
mov
ss
mov
mov
fdivl
pop
lcall
inc
inc
push
push
clc
insl
add
dec
lret
xor
ljmp
sahf
sub
mov
loope
adc
mov
fdiv
xor
scas
cmpl
cmpl
nop
fcomps
push
shll
aam
mov
mov
lahf
xor
add
dec
jl
mull
shrl
popf
xlat
mov
mov
aas
sbb
imul
fcmovne
aas
es
cwtl
hlt
jecxz
mov
hlt
sbb
daa
loopne
push
mov
test
loopne
call
divb
push
call
loope
lret
shrl
xchg
outsb
cmp
cmp
lods
cmp
sub
sbb
jge
push
push
fst
xor
cmpl
fisttpll
and
xchg
mov
in
test
sbb
pop
mov
cmp
sub
push
into
loop
lret
imul
out
xor
add
in
jecxz
adc
mov
pop
pushf
fdiv
daa
jb
hlt
jecxz
xchg
add
push
dec
jns
sbbb
rorb
fsubl
imul
push
inc
ror
lret
lcall
rclb
fldcw
mov
pop
jno
loopne
aam
pop
jo
pop
and
in
sbb
add
subl
mov
das
sub
jbe
sbb
loope
repz
jl
jnp
jle
and
ficoms
enter
pop
jnp
jo
xchg
sub
scas
dec
push
xchg
testb
pushf
sub
int
cld
in
sbb
pop
in
movsb
or
jl
xor
std
sbbl
pusha
movsl
int3
push
inc
cmc
enter
icebp
sbb
sbb
fwait
clc
mov
xchg
popa
mov
sar
out
push
hlt
mov
repnz
cli
inc
out
pop
adc
loopne
es
jnp
rorl
scas
jbe
ljmp
stos
inc
inc
xchg
fidivrs
ljmp
pop
sbb
push
pop
push
mov
jbe
jmp
jl
ficomps
push
fiaddl
push
xchg
rorl
dec
dec
in
repz
ret
mov
aaa
out
imul
nop
cmp
jnp
xchg
and
icebp
mov
mov
test
dec
ljmp
dec
rcl
icebp
or
mov
adc
mov
add
pushf
cmpsl
mov
adc
rolb
pop
in
jg
sub
adc
ret
test
lea
fimull
jns
test
nop
add
push
and
push
cmp
outsb
jp
enter
decb
xor
push
cltd
lock
int
adc
mov
pop
sub
gs
mov
gs
shrb
push
aaa
rcll
aad
xchg
jb
mov
sbb
inc
adc
mov
or
lods
iret
mov
iret
out
movsb
add
push
mov
pop
adcl
hlt
add
stos
adc
lahf
ret
add
jecxz
int3
mov
ljmp
stc
push
lods
or
cmpb
push
stos
or
pop
add
movsl
scas
xlat
add
xchg
ret
icebp
sbb
xor
mov
sub
scas
stos
movb
fists
and
add
push
ljmp
fldenv
push
pop
sti
mov
bnd
dec
fwait
dec
loope
mov
cwtl
orl
ss
test
aad
and
rcl
jae
test
not
sub
mov
lcall
neg
imul
push
aam
pusha
shrb
ret
mov
xchg
adc
movsl
mov
mov
mov
mov
or
sbb
mov
test
and
jle
mov
sbb
jmp
xor
add
sbb
dec
or
mov
adc
push
roll
scas
lock
jb
xor
scas
xchg
pop
negl
cmpsl
cmp
les
xchg
rol
test
test
jmp
fldenv
sbb
dec
cli
or
cmp
dec
mov
pop
inc
sub
xchg
sub
jnp
in
imul
xchg
mov
cld
repz
or
movhps
mov
popf
push
sti
fistpl
mov
outsl
imul
mov
mov
jp
adc
add
dec
dec
mov
insl
arpl
xor
enter
jp
dec
rcrb
push
insb
pushl
je
mov
mov
jb
scas
lds
jne
add
push
dec
adc
popf
scas
in
sub
or
mov
cmpsl
push
xchg
push
ret
js
or
imul
insl
jbe
inc
xchg
hlt
pop
pop
or
or
jns
into
gs
cmp
sti
mov
inc
sub
inc
inc
sub
imul
decl
clc
xchg
addr16
sbb
inc
fdivl
push
sti
aaa
or
clc
jg
fcompl
idivb
repz
repnz
mov
mov
lds
sbbb
sbb
pop
dec
lret
adc
es
dec
lcall
hlt
out
mov
fcomi
jb
mov
cmp
movsb
push
ret
inc
jl
cmc
data16
xabort
stos
adc
add
aaa
inc
adc
pusha
cmc
cwtl
mov
data16
xor
mov
leave
repz
lahf
fcompl
and
fldcw
jp
push
shr
dec
movsl
push
xchg
pop
loop
and
std
andl
jge
xchg
jbe
jp
popl
hlt
jb
jg
push
xchg
iret
stos
pop
sub
faddl
or
inc
std
fbstp
lcall
hlt
push
arpl
sub
aas
sub
dec
int3
dec
jo
dec
mov
sti
pop
or
jmp
outsb
mov
mov
or
mov
cli
sbb
sahf
nop
test
sbb
xchg
lcall
test
adc
dec
jge
or
pop
outsl
sbb
xor
insl
cmpsl
fsubrs
rolb
pusha
inc
or
rcr
mov
mov
imul
add
sahf
pushf
lahf
lods
jo
mov
or
xchg
out
enter
push
loope
lods
sub
jle
call
sub
and
das
sbb
test
fs
jns
out
push
test
stc
dec
mov
test
pop
mov
dec
dec
addb
xchg
mov
cld
test
mov
test
inc
mov
xor
xabort
dec
mov
mov
nop
aas
mov
mov
jae
or
insl
clc
push
inc
ret
sbb
sbb
jne
jnp
push
repz
mov
test
adc
sbb
push
ljmp
ret
mov
lods
and
iret
dec
mov
inc
xchg
outsb
mov
sbb
imul
sub
shrl
cmp
pop
adc
adc
push
std
sbb
data16
scas
lret
cmpsb
push
aaa
pushf
adcb
into
scas
fcoms
pop
xor
mov
aad
fstps
fldl
jg
jb
mov
fisubl
cmp
xchg
mov
jmp
in
repz
out
in
bound
scas
xchg
fisubrl
sbb
mov
mov
jo
push
int3
push
sub
leave
jnp
popf
add
shl
ja
push
pop
add
shl
mov
dec
sti
mov
inc
es
pop
mov
int
ud0
sahf
or
pusha
jns
xchg
or
mov
scas
icebp
loope
outsb
stos
jae
ret
xor
ret
xchg
mov
cmp
mov
repnz
add
mov
adc
inc
dec
jg
mov
mov
pop
fistpl
aas
out
mov
sbb
popa
int3
sub
jecxz
push
fisttpl
cmp
add
test
pushf
jmp
pop
sbb
mov
repnz
fnstsw
mov
idivl
test
je
sbb
inc
xor
fidivl
inc
cmp
sbb
adc
imul
push
pop
dec
mov
add
cmp
adc
push
rcll
ss
add
xchg
dec
sahf
mov
adc
xchg
sub
sti
push
cmp
adc
rcrl
push
sbb
ret
adc
adc
and
or
icebp
pop
inc
xor
clc
pop
mov
outsl
loop
push
enter
lahf
adc
sbb
add
add
movd
inc
sub
ficoml
dec
iret
fsts
lods
dec
icebp
testl
cmp
bound
jns
pop
cld
dec
mov
movb
popf
arpl
pop
data16
fildll
and
orl
cs
sbb
mov
popa
lret
push
sahf
ja
adc
cmp
push
int
popf
xchg
and
dec
mov
lea
test
jp
push
push
push
shll
inc
into
or
insb
leave
repnz
mov
fidivl
mov
mov
dec
repz
inc
jp
and
fisttpl
pusha
dec
loope
outsb
add
data16
pop
scas
orl
subb
pop
shl
insl
sbb
pop
push
rolb
fildll
jb
and
jp
addr16
add
push
lds
cmp
loop
test
in
jae
sub
push
hlt
jbe
sti
lret
int3
bound
std
add
cmp
mov
fucomi
and
and
mov
sbb
es
adc
scas
inc
lcall
xor
nop
ja
lock
rcrb
sarb
in
decb
inc
xorb
fimuls
xor
pop
and
mov
pop
aam
in
mov
add
stos
pop
pop
push
push
mov
outsl
pop
fwait
or
mov
jb
fstps
gs
and
rorb
inc
rcrb
and
test
int
aad
jp
in
repz
test
in
cld
adc
adc
fsubl
movsl
xchg
xor
pushl
push
jecxz
dec
std
fs
dec
fxch
mov
jb
add
fs
and
mov
sub
pop
push
iret
sbb
scas
es
inc
sbb
jbe
push
ret
arpl
and
out
add
nop
push
fistpl
incb
dec
add
leave
xchg
std
sarl
clc
sti
rcr
enter
in
and
cltd
and
sbb
fwait
ljmp
add
test
jb
cs
cmp
rorl
enter
imul
fisttpll
pop
movsl
mov
out
enter
aam
push
addr16
popa
out
ja
pop
add
dec
fisubs
stc
push
and
ficomps
sahf
pop
rolb
push
dec
push
sbb
iret
mov
bound
sub
addr16
fcoms
sub
xchg
inc
mov
bound
or
dec
mov
sub
xor
aas
je
rorl
cs
std
push
enter
xchg
push
int3
cltd
es
dec
das
js
inc
sbb
movb
jns
ret
xchg
or
mov
push
and
int3
aas
test
jp
shrb
push
mov
mov
jbe
inc
push
sbb
pop
stc
lret
subl
ds
je
ljmp
jmp
fwait
adc
push
je
xlat
jecxz
popf
xor
sub
les
icebp
lods
xchg
jp
stos
add
xor
ret
out
pop
and
or
sahf
icebp
jb
addr16
xor
mov
sub
push
pop
insb
insb
jb
and
pop
mov
mov
cwtl
push
or
pop
js
or
loope
and
pop
sub
arpl
jmp
sbb
div
ret
in
loope
inc
test
movsl
pop
mov
pushf
push
stos
jl
jmp
xor
std
repz
lahf
push
arpl
test
push
xchg
je
cltd
pop
mov
push
outsb
outsl
cmc
lods
and
dec
addr16
in
push
and
mov
inc
dec
in
sbb
inc
sbb
adc
icebp
sub
enter
push
cmp
cmp
bound
loopne
jbe
sub
jbe
rcll
das
outsb
jbe
movsl
pop
cmpsb
jns
jmp
pslld
loop
aad
cld
stc
xlat
xchg
push
xchg
inc
cwtl
adc
pandn
pop
lds
cmp
xor
ss
in
into
scas
xor
push
pmaxub
inc
inc
sub
jb
leave
jnp
pop
push
mov
adcl
mov
in
icebp
xchg
cld
sub
mov
loop
sub
icebp
dec
stos
jmp
mov
lahf
out
pop
sub
xchg
test
push
stos
iret
or
bound
in
inc
xor
mov
mov
repnz
dec
xchg
fmuls
push
jb
mov
stos
test
test
xchg
fiadds
jmp
adc
mov
mov
push
mov
incb
into
or
mov
ljmp
mov
and
xlat
out
pop
js
leave
sbb
pop
mov
es
sub
xor
xor
and
inc
pop
sahf
or
stos
pop
or
and
xor
iret
mov
fbld
aad
aad
push
loop
je
add
cmpsb
ror
pop
sub
insl
adc
lret
jg
mov
or
mov
outsl
push
out
andl
mov
dec
cmpsb
xor
mov
xlat
dec
mov
mov
xchg
fld
idivb
pop
test
loopne
in
in
lock
inc
xchg
mov
ret
cmp
jp
into
mov
sbbl
and
in
pop
mov
data16
add
xchg
jp
dec
cmp
jnp
add
push
fs
xor
jl
xchg
shrb
push
inc
imul
sbb
call
pop
subl
or
scas
pop
inc
dec
lea
sti
xor
push
hlt
cwtl
scas
pop
adc
or
stos
jbe
jno
cmp
std
adc
xlat
push
cmp
xchg
out
sbb
jae
and
xchg
sahf
lods
cmp
ja
lds
add
mov
jmp
xchg
sub
inc
mov
mov
fcomps
xlat
pop
xor
out
cmp
inc
push
stos
mov
rolb
fnstenv
int3
and
push
scas
aad
inc
rcrb
pop
fisubl
scas
push
ljmp
mov
jmp
loope
idiv
rolb
lret
or
jp
xor
lods
out
sub
push
jl
or
aaa
loopne
cld
int
push
fldl
enter
or
pop
nop
adc
cmp
movsb
cli
cs
imul
xchg
push
inc
adc
inc
and
xor
std
insb
lret
in
xor
pop
dec
out
popa
repnz
fsts
int3
sbb
pop
mov
loopne
insl
mov
aas
pop
sti
mov
xchg
sbb
imul
imul
cmovns
push
std
test
loop
and
or
lds
cmp
popa
mov
pop
or
xor
mov
iret
stos
cs
add
subl
outsb
call
in
cmp
fidivrs
jp
jle
xchg
aam
fcompl
cmp
lret
nop
mov
test
xchg
popf
mov
push
stos
xor
stos
int3
sbb
dec
int3
lock
shll
cmp
push
lea
pop
jne
or
in
mov
clc
sarb
mov
pop
je
gs
xchg
jle
cli
sbb
jg
insl
jnp
mov
pusha
lock
cmc
test
push
fidivrs
xchg
insl
push
and
add
sub
outsb
out
inc
bound
cs
push
ljmp
fidivrs
insb
mov
or
js
aas
mov
jns
fisttpll
leave
jge
scas
stos
je
push
rcrb
jo
fadds
mov
sub
pop
iret
lret
out
popa
push
cmpsl
loopne
sbb
jg
repz
adc
stos
ror
mov
cli
movsb
cmp
pop
push
sbb
test
xchg
dec
adcb
or
movsl
push
and
sarb
push
push
in
jnp
or
adc
roll
lret
les
mov
imul
or
cs
test
adc
scas
mov
cmc
mov
push
xchg
push
ss
nop
inc
adcl
inc
sbb
push
push
insl
leave
or
out
cmp
fdivs
mov
incl
arpl
cld
mov
jmp
lods
dec
shrl
aas
rorb
xchg
dec
int3
popf
mov
cmp
hlt
sbb
pusha
jo
cwtl
sbb
push
jmp
fstpt
mov
imul
pusha
xchg
leave
cmp
cmpl
mov
and
mov
into
inc
xor
call
jnp
ja
outsb
fnclex
fcmovu
pop
mov
inc
mov
stos
push
test
hlt
adc
les
push
xchg
jp
cmp
adc
jg
sub
jo
lahf
sub
andl
out
int
inc
test
jae
jo
bound
shlb
rcrl
dec
rcrb
pop
movb
xchg
ja
ss
xchg
aas
fcom
and
imul
aas
stos
jne
sahf
rolb
sub
popa
push
sbb
sub
mov
cmc
xor
aaa
fldl
orl
push
sbb
inc
cld
popf
sub
ret
cli
push
mov
dec
gs
mov
pop
adc
ja
inc
pop
cmp
mov
fcoms
add
sbb
lea
jle
pop
lods
xor
into
test
xchg
lock
or
shlb
jge
mov
adc
inc
cmpsb
xor
mov
in
xchg
in
fcomi
fwait
repz
lahf
adc
jo
mov
movsl
mov
dec
stos
mov
adc
dec
leave
sbb
xor
mov
xlat
stos
iret
mov
dec
jne
fbld
rol
adc
dec
stc
adc
and
mov
and
lods
pushf
pop
or
mov
mov
call
xchg
stc
scas
sbb
cmp
xor
mov
add
nop
cwtl
data16
pop
sbb
test
mov
push
cpuid
dec
or
push
mov
pop
add
jg
sub
dec
mov
shl
adc
push
ljmp
pop
pop
xchg
dec
add
mov
fwait
inc
dec
pop
inc
lahf
inc
fildl
fildl
sti
add
pop
lahf
xchg
test
scas
adc
loop
movsl
or
xchg
movsb
dec
sbb
mov
add
call
test
stos
loopne
and
jl
inc
xchg
jae
jl,pn
jle
and
mov
and
push
mov
sbb
adc
mov
insb
popf
and
testb
div
sbb
pop
xchg
enter
sbb
push
adc
ja
sbb
outsb
gs
and
mov
lea
test
cmpb
sub
in
je
mov
inc
ds
mov
push
pop
mov
add
mov
insl
cmp
cmpsl
cmp
inc
xor
cmp
lods
jecxz
cltd
mov
cmp
lea
inc
xor
push
sub
fsubs
sbb
sub
push
cmpsl
repz
dec
scas
enter
sti
and
adc
aas
sbb
daa
or
pop
dec
add
lods
cmp
scas
sub
pop
xor
arpl
sbb
data16
dec
cmp
insl
or
jmp
lock
sbb
insl
xorb
lods
repz
stc
push
xchg
sub
jb
pop
push
es
sti
push
pop
inc
shrb
jo
lods
mov
pop
and
decl
faddl
mov
inc
ss
mov
sbb
adc
sbb
jp
popf
or
jne
mov
xchg
hlt
clc
or
xchg
lods
push
pop
adc
adc
repnz
std
clc
inc
out
inc
mov
popa
inc
test
and
mov
xchg
and
hlt
shl
stos
ficoms
cmp
dec
push
out
inc
iret
adc
cmp
sbbl
es
xchg
dec
or
push
sub
in
dec
adc
and
sub
mov
scas
sub
jb
adc
inc
ljmp
add
fwait
pop
mov
xor
les
out
stc
mov
test
scas
xlat
cmp
in
in
out
mov
push
or
add
inc
and
out
loope
gs
jg
lret
enter
shlb
fwait
test
bound
jno
faddp
outsb
mov
ret
mov
icebp
lcallw
pop
jbe
push
add
ret
dec
or
mov
mov
push
mov
mov
jnp
leave
lock
in
sub
sub
cld
dec
xor
mov
inc
fdivp
leave
inc
xchg
sub
push
or
mov
mov
int
and
shlb
test
loop
xor
jnp
jns
js
rorb
aad
pop
lret
jle
xchg
sbb
pop
xor
imul
je
mov
mov
push
pop
mov
inc
dec
xchg
test
in
ret
push
aas
aas
shl
xor
cmp
lock
jnp
in
push
sub
daa
fldenv
mov
and
cltd
arpl
aam
outsb
repnz
xchg
mov
add
jmp
pop
sar
jno
movhps
arpl
ja
cmp
js
or
inc
out
adc
les
sbbb
aad
dec
jp
jg
jbe
dec
dec
or
or
mov
or
cmpsl
cmp
rolb
add
mov
ret
xlat
scas
and
mov
add
fidivl
cmp
xor
cwtl
mov
pop
mov
popa
or
cli
icebp
cmp
iret
mov
ret
and
adc
fwait
mov
pop
aaa
pop
pop
inc
xor
inc
and
dec
lsl
jno
jle
pop
bnd
push
sbb
push
xchg
loop
andl
lea
pop
sbb
test
sub
mov
ret
pushf
pop
movsl
xchg
adc
dec
into
add
jae
lcall
rcll
push
mov
test
ret
push
add
stc
lods
pushf
xor
push
cmp
adc
xchg
into
sbb
dec
and
sbb
mov
test
cmpl
xchg
pop
xor
popf
xlat
cmp
add
scas
mov
pop
fsubs
pushl
lcall
lds
cmp
loop
ds
mov
or
inc
xchg
fidivl
shl
or
mov
ficoml
cmp
sbb
sbb
push
push
in
xor
in
bound
ret
fsubl
movsl
movsl
jo
jbe
loopne
push
inc
sub
rolb
sub
xor
mov
cmpb
jmp
popf
loop
iret
or
adcl
xchg
adc
cmp
jmp
or
xor
ss
push
cmpb
movsl
dec
insb
pop
loopne
in
lret
out
pop
sub
sahf
cmp
arpl
mov
sti
mov
lcall
xchg
add
adc
addr16
xor
fcomi
andb
mov
xchg
cwtl
in
aad
ja
je
mov
test
repnz
popa
adc
mov
in
cmc
jno
push
je
add
jae
push
clc
add
mov
out
push
mov
in
pop
cld
mov
shrb
jbe
ret
std
jbe
pop
clc
xchg
push
xor
inc
adc
lret
mov
daa
dec
sub
fcomps
out
push
les
push
dec
in
cmp
and
addr16
cmp
gs
inc
cwtl
aas
xchg
or
pop
jb
add
push
add
xchg
loope
iret
inc
loop
lret
clc
pop
push
stc
xchg
test
dec
in
fldenv
clc
cmc
fldenv
push
out
out
fcoml
pop
cmpsl
int
dec
xchg
movsb
js
cld
ljmp
mov
xor
repz
sub
scas
test
and
mov
mov
push
jnp
out
and
in
cmc
push
gs
mov
iret
sbb
out
rcrl
mov
lock
test
or
sbb
test
sbb
jne
scas
mov
maxps
lcall
in
ss
lods
sbb
inc
jns
pop
cmp
out
xchg
int
sbb
inc
es
xchg
les
dec
test
mov
mov
mov
mov
and
movsb
ss
push
clc
or
aas
inc
mov
sbb
cwtl
ret
mov
inc
jbe
and
clc
out
or
gs
int3
jp
mov
stos
cmp
lods
jae
sbb
sbb
jae
popf
pop
mov
ss
outsb
mov
xor
pop
inc
jge
popa
xor
sub
outsb
sub
xchg
stc
lock
or
pop
aas
arpl
dec
popf
xchg
cmpl
out
mov
push
test
dec
in
mov
adc
sub
in
mov
imul
push
cltd
fbld
xchg
fwait
cmp
fwait
push
pop
push
or
mov
aam
lods
jecxz
divl
adc
dec
out
xchg
and
xor
insl
dec
sti
push
sub
mov
cld
xlat
sub
mov
jb
adc
mov
stos
int3
repz
inc
addr16
xchg
mov
jae
pop
add
mov
ret
loopne
in
sbb
loopne
in
xor
cmc
loopne
in
imul
or
cmc
lods
mov
jmp
cld
mov
dec
sbb
aaa
out
cmp
push
inc
bound
into
jp
inc
es
mov
pop
test
mov
ds
sbbl
mov
je
icebp
xor
cmp
sbb
sti
outsl
nop
call
test
ljmp
mov
adc
popf
xor
or
psubw
cld
inc
punpcklbw
negl
ja
addr16
mov
cwtl
test
xor
rcll
ja
cli
rorl
lcall
cmp
cmp
fwait
outsb
rorb
or
es
xor
faddl
imul
sbb
sub
jns
ficoms
dec
scas
jb
imul
arpl
jecxz
xchg
xor
push
cmp
dec
cwtl
pushf
mov
lret
sbb
subl
push
add
adc
fs
pop
cmp
fs
jne
andl
cwtl
addl
movsl
mov
jne
sub
cmc
mov
mov
add
out
iret
cwtl
lock
pop
jmp
jae
leave
sub
mov
out
xchg
sbb
sub
mov
cmp
jo
jno
lock
or
add
lods
stc
mov
add
sub
push
push
dec
and
pop
hlt
jle
add
xchg
push
cltd
sbb
push
and
cmp
fcompl
loop
cs
lahf
xchg
lea
rolb
sbb
sub
xchg
add
mov
cltd
cmp
mov
inc
jl
xchg
stos
jmp
pop
std
mov
and
push
inc
hlt
adc
pop
inc
lods
ret
adc
and
outsb
sbb
inc
in
ret
jle
push
mov
push
sbb
and
mov
pop
loop
lret
aam
cld
cli
int
xchg
loop
jge
das
nop
imul
sub
lcall
push
insl
in
aam
sbb
mov
adc
dec
cld
jecxz
sbb
xchg
icebp
hlt
out
push
jle
adc
add
int3
sbb
mov
and
outsb
insb
xor
incb
popf
call
cmp
out
outsl
mov
data16
std
jp
enter
jmp
arpl
lahf
loope
popf
mov
push
jmp
hlt
ja
inc
in
std
shl
jg
jne
enter
push
jb
push
adc
or
and
ja
enter
push
dec
and
out
pop
sbb
dec
pop
jle
cmp
aad
xlat
fidivl
sbb
push
and
jne
fnstenv
jle
xor
shlb
xchg
test
aas
mov
or
lcall
adc
test
cmp
push
jo
push
or
cmpsl
rolb
cld
sbb
fsub
shrl
cmpsb
cmc
sub
icebp
push
stc
sub
pop
outsl
jnp
repz
mov
mov
add
int3
popa
and
imulb
rorb
addr16
nop
fs
jnp
sti
cwtl
push
sub
xor
fisubrl
xchg
jnp
xor
stos
cmp
xchg
ret
pop
mov
movsl
mov
or
stos
cmp
sub
xchg
mov
dec
push
inc
lret
fadds
clc
insl
lcall
shlb
pop
pop
lcall
in
jne
mov
adc
jo
sub
cmp
pop
xchg
inc
nop
inc
jnp
sub
push
int
lahf
ss
lahf
outsl
ret
push
add
fiadds
mov
call
sbb
test
icebp
gs
addl
dec
stos
jp
cmpsb
push
xchg
cmp
xchg
rcrb
and
and
ss
pop
cmpb
mov
daa
cmpsb
dec
loopne
loopne
mov
aad
and
scas
jo
lock
push
aad
xchg
add
inc
xchg
cmp
fwait
aad
mov
addr16
inc
lret
mov
loope
aaa
dec
xor
call
xor
jb
int
popa
xor
imulb
adc
insb
adc
ja
int3
test
push
leave
xor
cmpsl
add
movsb
daa
leave
mov
int
jg
jg
test
movsl
sub
cs
in
aam
push
add
or
fsubrs
fbstp
outsl
cli
fwait
cltd
ss
cwtl
mov
cmp
inc
stos
sbb
insb
inc
xor
pop
and
cli
int
push
mov
in
mov
icebp
add
inc
popa
jle
inc
xchg
or
dec
cmc
insl
cmpsl
cmp
mov
or
mov
mov
sar
iret
cld
data16
jno
xor
xchg
push
cmc
cmpsl
popf
add
mov
pop
out
adc
jecxz
mov
pop
leave
and
and
cmp
test
repz
iret
insl
test
push
fldt
xchg
psubb
inc
into
pop
lret
cli
nop
jecxz
pop
mov
jg
mov
inc
push
xchg
les
addl
mov
mov
hlt
roll
lret
sbb
xchg
push
xor
mov
mov
mov
faddl
inc
insb
inc
pop
rcrl
mov
std
jo
mov
inc
cmp
aaa
and
hlt
daa
mov
lahf
aas
clc
push
lds
je
pop
mov
mov
add
mov
aad
cld
mov
cmpsb
xchg
xchg
xchg
movsl
sbb
rolb
and
movsb
fistpl
sbb
push
jmp
mov
and
jl
sub
pop
hlt
mov
leave
inc
repnz
push
pop
enter
lock
dec
cli
fnstenv
lcall
add
xchg
xchg
adc
ret
cmpsb
scas
add
sub
push
jecxz
push
out
lret
xor
out
mov
and
push
lods
mov
cwtl
ds
fldl
adc
mov
add
push
sahf
jns
xchg
add
push
inc
dec
xchg
pop
pop
mov
jge
test
jl
mov
mov
ret
push
fs
sbb
ret
add
sub
es
outsb
nop
scas
xor
ja
adc
sahf
je
insb
xor
add
mov
adc
add
pop
add
sbb
push
lahf
mov
add
popa
jp
pop
rcl
enter
or
or
xchg
jmp
lods
pop
negb
and
inc
in
and
inc
aam
mov
repnz
out
xchg
sub
cmpsl
sbb
out
clc
push
arpl
cmpsl
insl
subb
cld
call
shl
mov
pop
push
std
cmp
lret
in
js
stos
inc
and
lods
imul
adc
or
xchg
out
sub
arpl
dec
sub
adc
mov
cmpl
iret
pop
dec
push
in
push
dec
inc
pop
addr16
out
or
xlat
outsb
outsb
cmpl
adc
inc
outsb
adc
or
es
pusha
dec
sbb
pusha
push
dec
sub
jl
lock
rcrb
mov
insb
xchg
dec
adc
jp
push
repnz
pop
push
filds
iret
xor
xor
lcall
ljmp
inc
dec
jns
mov
test
inc
xchg
out
cmpsb
mov
jecxz
popw
adc
test
inc
loope
xchg
or
mov
push
dec
in
adc
scas
dec
mov
sub
pop
cs
mov
rcrb
xchg
les
mov
inc
pop
cmp
push
repz
jp
pop
push
inc
jno
xor
ss
into
imul
adc
xor
je
loope
sbb
add
fidivrl
call
sub
adc
ja
mov
pop
ljmp
fisubs
pop
movsb
movsl
sti
jns
sbb
mov
subl
fmull
inc
loope
sub
cltd
sub
sti
pusha
sti
jle
pushf
mov
mov
pushf
addb
mov
cmp
mov
mov
stos
push
test
icebp
outsb
cmpsb
or
mov
push
loop
mov
cmpsb
sub
mov
sbbl
lahf
xor
outsb
sub
dec
xorb
cli
inc
xchg
outsb
into
pop
pop
addl
aad
sbb
in
loope
into
lahf
sub
fcoml
imul
lahf
pushl
push
mov
pop
out
fs
inc
or
movsb
mov
push
sbb
jg
and
cwtl
addr16
psubw
ljmp
jo
mov
push
popa
sbb
dec
mov
inc
lock
jmp
xor
insb
mov
lahf
movsl
mov
les
inc
sub
in
inc
out
mov
enter
cmpsl
lahf
out
adc
and
jecxz
stos
or
stos
xchg
loop
mov
sub
mov
xchg
sbb
leave
mov
jmp
mov
xchg
adc
cmpsl
out
sbb
addb
cmc
scas
stc
cmpsb
or
cmp
sub
in
aaa
pop
push
add
enter
test
mov
mov
sahf
inc
dec
jbe
and
std
pop
dec
jne
imul
push
out
test
xchg
push
test
and
not
add
mov
movsb
sbb
sarb
and
adc
mov
cmp
ret
dec
pop
push
add
out
test
and
sbb
sbb
sti
insl
cmp
cwtl
cli
mov
popa
aaa
cwtl
loop
push
loopne
jmp
ja
iret
dec
xchg
sbb
jle
imul
inc
push
mov
loope
frstor
adc
out
imul
pop
push
addb
sub
xor
fdivrl
or
lods
mov
cmp
fadd
fnstenv
or
dec
aaa
lock
call
addr16
jns
jbe
int
add
in
pop
jne
add
push
sub
daa
or
out
or
in
in
dec
addb
testl
jbe
and
dec
jne
push
mov
call
mov
pop
push
hlt
jno
loop
or
xchg
aad
push
cmc
push
movsb
jo
cmp
mov
pop
movsl
rol
ffree
shrb
in
push
cmc
sbb
pusha
jne
mov
adc
hlt
add
imul
mov
jo
or
movsl
test
or
iret
call
aas
loope
pop
dec
push
notl
push
push
fwait
out
mov
ss
adc
scas
mov
out
mov
mov
sbb
clc
mov
mov
push
imul
pusha
rcrb
int3
icebp
loop
mov
pop
outsb
sbb
cmpsl
cmp
mov
dec
cmp
push
out
negb
mul
daa
jo
cmpsl
or
lcall
rol
ja
jge
mov
cmc
jg
push
scas
push
push
lret
dec
popf
xchg
fcoml
sub
mov
jge
xchg
jmp
adc
ja
outsl
outsl
test
adc
inc
stos
jecxz
rcr
mov
add
pop
cs
xor
lea
sbb
fnstenv
cld
cwtl
rorl
out
adc
mov
jb
or
adc
jl
cmp
dec
daa
dec
ss
filds
fwait
inc
push
std
out
jae
xor
lret
sbb
scas
and
and
push
and
in
call
test
jmp
jg
cli
sti
mov
mov
sbb
lret
dec
sar
push
jg
xchg
add
ficoms
sar
repz
int3
xor
dec
pop
dec
sbb
jb
cmp
test
fsubrs
out
mov
mov
lcall
adc
mov
ret
pop
or
mov
rorb
lea
jnp
in
xchg
nop
test
xor
adc
lods
sbb
cmc
aas
or
add
aaa
test
shlb
inc
bnd
sub
rorb
push
icebp
pop
test
mov
shlb
mov
mov
les
in
mov
pop
inc
add
rcrb
adc
les
mov
xchg
push
mov
jo
das
mov
aam
jl
imul
std
cmpsl
fcmovnb
enter
pop
and
shll
jmp
pandn
jmp
mov
ret
push
mov
push
iret
jg
mov
sub
mov
sub
or
movsl
or
stc
push
xor
pop
lahf
data16
notb
push
xor
lret
xor
inc
js
push
pop
cmp
cmpsb
mov
mov
sarb
cmp
outsb
fcmovne
sahf
or
pop
cmp
cld
insl
fsubs
or
test
pushf
inc
outsb
mov
push
add
dec
insb
mov
sbb
lods
jp
adc
sbb
hlt
cmpsl
jmp
lret
out
ss
push
xor
pop
std
mov
inc
jmp
out
ja
xchg
ret
nop
jnp
scas
mov
cmpsb
cltd
test
mov
mov
clc
ss
dec
cmp
rorb
pushf
daa
cli
push
pop
adc
sti
pop
test
cli
mov
inc
and
mov
add
and
ds
div
adcb
pop
out
out
fldenv
or
cmp
adc
cld
pop
out
xchg
out
popf
arpl
sbb
push
cmp
call
dec
outsb
sub
inc
mov
xchg
xchg
jo
aas
pop
xchg
fwait
jecxz
xchg
scas
lock
sbb
lods
les
sub
fisubl
dec
dec
iret
dec
rcrl
pop
dec
mov
int
popa
ljmp
or
aad
inc
mov
and
jl
push
stos
xchg
push
inc
addr16
xor
pusha
mov
ds
jae
rep
or
jo
shrb
out
lret
loope
stc
shll
or
xchg
add
and
push
fists
pop
adc
rolb
mov
in
cwtl
dec
push
jns
inc
cld
fimull
lods
cmp
mov
repz
mov
pop
mov
mov
sub
out
icebp
add
aam
fbstp
push
jp
cmp
jnp
ds
mov
scas
mov
pop
movb
stc
test
es
jg
mov
iret
fsubl
xchg
xchg
fsubrl
repz
repnz
add
std
cmp
dec
outsb
push
imul
fbld
fcompl
mov
inc
sarb
icebp
mov
aaa
cmpsb
dec
ljmp
cmp
outsl
cmp
add
add
leave
cmp
dec
push
dec
push
or
out
scas
inc
sub
xor
mov
dec
dec
dec
sub
dec
sahf
mov
insb
jb
xlat
ljmp
jae
dec
dec
leave
dec
xchg
mov
jae
add
cmpsl
mov
and
in
push
aam
test
fisttps
push
dec
lret
lock
outsl
stos
mov
lret
jecxz
mov
lods
mov
mov
fimuls
scas
mov
loopne
shl
push
xchg
out
pusha
push
repnz
mov
add
pop
sbb
inc
xchg
mov
dec
xor
lock
hlt
leave
aam
mov
inc
dec
mov
mov
dec
or
and
adc
cmp
xchg
jne
add
jns
loope
or
inc
dec
xchg
add
cmp
loope
out
xchg
mov
xor
daa
loop
and
inc
cmp
sbb
addr16
outsb
sbb
int3
dec
std
repz
in
xchg
loope
push
adc
test
fldcw
push
movsb
push
mov
clc
into
fnstcw
dec
fidivs
dec
test
ficomps
fcom
sti
test
pop
testb
push
loope
mov
add
sub
ss
jg
add
push
pop
fs
aad
cmp
pop
adc
popf
fisubrl
rorl
idivl
lcall
cmp
lcall
ffree
xchg
inc
mov
incl
mov
sub
pop
mov
cmp
mov
fcompl
movsl
hlt
adc
lahf
test
mov
push
or
cmpl
test
pop
push
xor
lods
or
and
scas
xchg
sub
xchg
inc
mov
xchg
popw
push
add
and
pop
stos
out
and
int3
sarb
fcom
dec
inc
push
inc
pop
test
and
push
cltd
fsubl
cmpsl
out
jae
adc
sbb
lahf
push
push
push
mov
xor
iret
fimull
mov
gs
loope
add
or
insl
mov
jge
push
movsb
inc
je
and
iret
das
pop
dec
jne
mov
loopne
mov
pop
lods
mov
insb
out
ficoml
inc
fdivs
jmp
ja
push
xchg
das
movb
push
and
ret
stos
mov
imul
sub
bound
cmp
arpl
or
gs
hlt
gs
add
dec
packuswb
jg
inc
mov
push
jmp
push
jmp
pop
inc
dec
cmpsb
and
jge
or
sbb
push
fmuls
fsubrl
insl
in
hlt
jg
cli
imul
and
insb
inc
mov
push
inc
xlat
and
ud2
cmpsb
xor
outsl
ss
mov
mov
cltd
push
loope
iret
xchg
les
or
push
mov
and
jne
outsb
lahf
push
mov
test
mov
xor
push
mov
inc
pop
dec
push
das
out
rcrb
leave
adc
popa
iret
idivb
fucomip
int3
shlb
jb
popf
icebp
pushf
mov
pop
div
repz
or
shll
repnz
dec
ljmp
and
test
xor
movsl
rcll
jns
out
push
pop
lea
in
cwtl
inc
bound
lock
lds
int
cmp
aaa
or
dec
add
fldt
fwait
es
outsl
sbb
push
or
dec
ja
sbb
call
or
jmp
ds
lret
inc
pop
add
lcall
scas
adc
movsb
outsb
lea
xchg
hlt
and
in
xchg
lds
call
outsb
push
imul
pop
adc
xchg
daa
test
dec
mov
sti
dec
aaa
std
adc
daa
movsb
push
mov
inc
add
mov
fisttpll
pop
jno
mov
sahf
out
push
sbb
push
sub
inc
jecxz
push
fsubrs
movsb
rcrl
jne
sbb
shll
push
lock
outsl
stos
mov
mov
xchg
push
and
ss
inc
stos
cmp
inc
sti
sub
jo
mov
adc
adc
mov
pop
icebp
mov
and
shll
imul
lret
popf
fcmovne
into
jl
jle
repnz
ret
rolb
inc
cli
repz
fadds
and
lds
fbld
add
xor
mov
mov
mov
sbb
pushf
aad
xabort
and
sub
loope
pop
je
xchg
stc
and
or
cwtl
xchg
scas
insb
int3
push
shlb
cmp
jecxz
add
push
sub
mov
xor
mov
mov
out
cmp
or
aam
cli
inc
xchg
mov
movsb
pusha
js
pop
fiadds
add
inc
je
jge
cmp
test
cmp
fldl
nop
je
mov
mov
icebp
insb
mov
repz
mov
movsl
push
push
fists
into
cmpsb
inc
bound
or
or
mov
sbb
mov
jecxz
or
repnz
shlb
push
inc
pop
add
out
push
and
dec
xor
fcomps
xchg
test
int3
ds
cmpsb
jge
adcb
addr16
mov
aas
xchg
pop
or
pop
ja
sbb
jmp
add
movsb
rolb
xchg
cmp
loopne
shlb
out
adc
insl
sahf
int
add
pusha
xor
daa
dec
cmp
mov
push
sbbb
and
adc
cld
push
inc
pop
xor
pop
mov
stos
and
lret
loope,pn
aas
pop
ds
pop
lods
sbb
test
jae
cmp
mov
pop
mul
jbe
push
add
fwait
pushf
bound
xchg
arpl
js
lret
pop
jb
test
fmull
xchg
adc
push
inc
sahf
pop
nop
pop
icebp
les
scas
xchg
push
mov
push
insb
mov
dec
mov
andl
cltd
add
fcomp
mov
stos
push
lret
std
pop
inc
lds
shl
and
inc
ret
pop
add
sub
pop
xor
or
mov
loopne
sub
or
jl
pushf
mov
sahf
mov
imul
loop
pop
imul
nop
push
insl
mov
test
mov
push
or
dec
add
mov
outsb
cmp
push
sbb
dec
xor
mov
pop
in
jnp
mov
sbb
mul
sbb
or
aas
adc
fidivs
outsb
int3
aaa
xor
addr16
fisttps
out
stc
sub
stos
mov
test
pop
xor
ljmp
test
loope
popf
into
fwait
jp
stc
mov
fdivrp
pushf
dec
inc
mov
or
test
enter
xchg
mov
call
pop
push
mov
dec
outsb
sub
enter
pusha
mov
jns
cltd
outsb
bound
xchg
jge
insb
or
sti
xor
fldl
lods
fisttpl
adc
insl
inc
add
out
cmp
fwait
in
mov
push
mov
pop
adc
adc
popf
lahf
ret
lret
out
cmpsb
and
mov
pop
lcall
mov
clc
push
mov
xchg
xchg
in
or
mov
sub
sahf
cmpsb
in
sbb
xor
pusha
pushf
mov
je
pop
or
adc
lea
dec
xchg
xchg
movsb
adc
push
jb
sbb
ds
ds
daa
and
mov
add
jo
lods
scas
test
add
lds
add
inc
in
sbb
test
cmp
mov
jno
rolb
cmp
xor
jmp
sahf
pop
xor
nop
push
andl
mov
jb
mov
ret
nop
push
pop
xchg
pop
fdivrs
data16
jle
mov
loopne
push
daa
mov
outsl
mov
jp
pop
icebp
add
xchg
dec
push
gs
add
mov
aas
sbb
inc
cld
ficoml
inc
sbb
stc
out
jp
jns
xor
fwait
lret
cmp
jae
jl
push
mov
dec
adc
rcll
sbb
and
cmp
xor
adc
dec
push
andl
test
jmp
nop
add
adc
fcmove
aam
fisubl
nop
sub
out
enter
js
dec
push
stc
lea
push
out
dec
test
shrl
dec
pop
incb
jge
mov
sbb
lea
push
jg
pop
fs
sbb
or
test
sbb
aad
rcrl
push
sub
xor
inc
add
xchg
pop
push
cmp
lods
arpl
mov
ret
mov
mov
xor
lds
push
outsb
addr16
dec
mov
jns
into
sbb
rcrb
dec
dec
dec
cmc
cmc
mov
cmp
add
mov
sbb
fwait
je
adc
add
iret
testl
adc
cmpsb
and
mov
shrb
hlt
dec
loop
loop
sub
popa
lret
loope
fdivr
mov
pusha
lods
int
add
outsl
outsb
into
mov
sbb
xchg
jmp
mov
cmpsb
push
xor
pushf
xor
cli
jecxz
rcll
jo
jno
clc
sub
mov
pop
xor
cmp
dec
xchg
jno
stc
and
or
pop
test
and
cmp
fstps
gs
jne
les
cmp
arpl
xchg
mov
xchg
outsl
arpl
daa
jmp
dec
rcrl
jbe
mov
jmp
fidivs
pop
arpl
add
ja
jge
inc
cmp
xchg
xorl
ficoms
mov
imul
mov
pop
fidivrl
sbb
mov
xchg
jecxz
adc
cmc
je
leave
mov
inc
cld
imul
js
or
jbe
sub
leave
jnp
jg
mov
push
cmpsl
nop
loope
lea
cmp
out
mov
ds
fcmovbe
push
inc
sarl
push
loope
mov
cmp
push
add
shrb
arpl
jb
add
cmp
jns
pop
mov
jnp
loopne
pop
jae
into
cmp
mov
dec
pop
ljmp
xor
pop
sub
test
push
push
inc
cld
loopne
loop
cmpsl
repz
in
inc
xor
pushf
mov
test
cs
int
js
pop
std
popa
xor
push
int3
stos
inc
jno
and
in
rol
test
adc
test
cmp
cmpsb
pop
lods
inc
sbb
jle
sub
sub
sbb
push
push
inc
cmp
mov
mov
mov
xor
dec
xchg
add
xchg
cmc
inc
add
sub
push
xorl
mov
scas
outsb
lahf
iret
cli
cmc
jge
jo
jns
repz
adc
leave
xor
out
mov
ja
loop
imul
js
into
pop
je
imul
and
push
iret
ds
push
fucomp
ror
and
mov
enter
lods
pop
test
rcll
loop
pop
iret
mov
dec
push
int3
mov
and
movsl
das
inc
jg
inc
inc
out
gs
lods
fidivl
loop
stc
mov
sahf
popa
popa
pop
loope
fcomps
and
sub
mov
mov
fiadds
dec
xchg
test
fidivrl
aaa
inc
sub
dec
add
mov
ficoml
mov
in
and
pop
int3
enter
ret
cmp
inc
jae
and
clc
push
loopne
and
fimuls
enter
xchg
mov
je
aad
mov
sub
jns
mov
loopne
addr16
aam
adc
pop
dec
jmp
push
push
icebp
pop
cmpsl
lea
mov
or
ljmp
add
mov
and
out
jecxz
dec
push
aas
cmp
lahf
push
fiadds
int3
int
sub
es
out
shll
push
cmpsb
jl
cmp
push
cmpsl
sub
repnz
arpl
sti
pop
mov
mov
lret
push
cmp
jle
adc
ret
leave
push
fcmovne
pop
ja
xchg
cmp
lods
in
repnz
daa
stos
das
test
sub
fs
mov
or
lret
xchg
mov
sub
xor
aad
movsb
in
jno
mov
mov
test
scas
xchg
in
push
mov
or
arpl
pop
add
popa
sub
mov
or
mov
cmp
dec
ss
icebp
ret
subb
mov
xchg
lds
repnz
sbb
arpl
ret
push
out
jb
sub
imul
inc
cmp
lahf
and
or
xor
fsub
cmp
lcall
xor
or
adc
imul
jb
ds
std
nop
xchg
add
jecxz
mov
xor
inc
mov
jg
aas
adc
inc
iret
xchg
dec
repz
imul
dec
mov
cwtl
dec
arpl
pop
or
rcrb
lds
push
clc
lcall
fsubrl
icebp
scas
lock
mov
jle
mov
xchg
sbb
stos
in
xchg
sbb
sub
pop
jns
fdivrs
cmp
sub
outsl
jmp
jecxz
add
movsl
mov
jmp
inc
cmp
js
popf
mov
xor
jb
pop
adc
cmp
std
push
adc
repz
das
icebp
mov
add
xor
add
jle
and
lcall
add
cs
bound
dec
and
mov
push
dec
fcoms
mov
int3
int3
add
fcoms
mov
in
movsb
cld
ljmp
js
pop
mov
notl
jno
jae
ss
loopne
cwtl
pusha
inc
stc
mov
test
imul
arpl
outsl
repz
jno
sub
pop
xchg
jge
adc
sbb
dec
hlt
aaa
jne
jbe
pusha
cmp
and
dec
scas
les
adc
sbb
push
leave
je
jge
lahf
dec
mov
push
and
xor
dec
xchg
add
pop
insl
shrl
xor
sbb
test
out
xchg
push
adc
jmp
push
stos
lea
cmp
mov
jge
xor
loop
push
xchg
cmpsb
adc
adc
push
xor
test
mov
cmp
cmp
call
push
sti
pop
cwtl
stos
out
push
into
rorl
inc
fwait
lret
fldcw
adc
xor
in
sub
add
sbb
dec
mov
cs
lret
into
push
pusha
mov
xchg
sub
nop
xchg
jnp
mov
fisttpll
xchg
dec
sub
mov
mov
cmp
outsl
lea
mov
lcall
out
cmp
sub
sub
xor
arpl
aaa
jbe
xchg
add
jp
stos
es
out
jbe
mov
pop
das
rolb
jo
push
push
frstor
xor
pop
leave
push
jne
pop
add
dec
aas
sub
pop
mov
test
pop
outsb
sti
xchg
inc
jle
mov
xor
xor
mov
cmp
pop
sbb
scas
in
leave
cmp
jne
mov
enter
adc
push
popa
inc
sub
jmp
shll
jg
stos
call
in
enter
mov
and
cmp
push
sti
push
or
mov
lods
dec
ja
lahf
adc
loopne
pop
scas
fistpll
push
imul
lahf
mov
fwait
jne
push
adc
popa
std
fdivrl
push
mov
dec
sub
lahf
sub
mov
mov
lock
inc
or
scas
xor
mov
mov
scas
out
cmpsb
dec
mov
dec
ror
lds
sbb
jl
pop
and
mov
rep
insb
pushf
sbb
sbb
mov
add
jns
mov
cmc
xor
out
push
ja
mov
stos
icebp
ss
adc
xor
or
sbb
push
and
sbb
aam
out
iret
icebp
pop
enter
pop
xlat
push
arpl
movzwl
sbb
sahf
xor
jne
repnz
xchg
lret
pop
and
ficoml
or
ljmp
fisubl
cmp
jne
lcall
out
addr16
push
add
push
mov
lods
pop
push
cmp
push
mov
test
imul
stos
or
pusha
or
xlat
fisttpl
push
push
cltd
mov
inc
rcl
push
rcrl
adc
cltd
test
clc
loope
inc
sub
packuswb
mov
and
pop
jecxz
push
or
sub
rcrl
xor
fs
mov
sub
xor
mov
xlat
clc
mov
cmp
or
aas
jne
test
incb
ja
js
sti
adc
sbb
dec
mov
mov
and
and
push
cs
pop
or
mov
rcll
or
arpl
push
jge
jl
out
ja
pop
clc
arpl
pusha
or
int
jecxz
jle
insb
test
inc
xlat
into
cmpsb
adc
out
xchg
mov
sub
gs
scas
pushf
aaa
movsl
pop
repz
push
adc
xchg
sar
xchg
testl
or
add
xchg
jl
mov
outsl
sub
je
push
pop
mov
push
mov
rep
add
add
pop
mov
in
jle
repz
shll
call
cld
ss
push
out
and
idivl
je
sub
mov
jg
sub
lahf
hlt
mov
sub
les
imul
pop
out
xchg
lret
cmp
sub
mov
stos
mov
fisubl
test
push
xchg
mov
cmpsb
pop
push
cmpsl
movsb
cmc
fldenv
ljmp
mov
sub
andl
mov
dec
enter
adc
je
push
and
xchg
loop
xor
std
movsl
dec
mov
push
xor
shll
aaa
ret
mov
mov
sbb
cmp
scas
or
imul
mov
sbb
pop
lods
xor
sbb
cmp
or
inc
scas
push
cmpsl
lods
enter
and
lcall
xchg
cmp
inc
imul
repnz
mov
or
mov
push
aaa
mov
enter
imul
pop
stos
call
jge
pop
ror
insl
popa
hlt
rcll
add
push
add
lods
push
cmp
nop
cmpsl
add
cmp
adc
push
mov
mov
and
mov
and
stos
mov
out
xchg
jo
lcall
lds
pushl
mov
jmp
and
mov
out
test
mov
out
mov
fwait
lea
xchg
push
lahf
jb
ret
fptan
xchg
adcl
ja
mov
or
movq2dq
cmpsl
jns
fs
mov
or
mov
sbbl
jns
mov
and
mov
lret
popl
sbb
in
mov
int
pop
lods
jg
shll
ljmp
js
les
and
xor
cli
outsl
fsts
mov
sahf
mov
xchg
and
adc
cmpsl
pop
dec
js
adc
mov
sti
inc
lods
jne
jg
imul
movsb
cld
mov
std
inc
cmp
mov
dec
sbb
cli
pop
hlt
fdivrl
jle
in
cmp
sbb
or
ror
ss
jle
jns
into
mov
jae
jp
xlat
mov
lret
movsl
loope
nop
jno
aaa
xor
cltd
sub
jl
mov
sub
out
sbb
adc
pusha
addr16
mov
cmp
mov
imul
xchg
movsl
sub
bnd
aam
xor
or
xchg
fdiv
dec
jmp
mov
stos
imul
sahf
rcr
lahf
push
jo
xchg
pop
das
pop
mov
push
imul
adc
or
sub
pop
cmp
rol
addr16
push
mov
xchg
add
jmp
or
sub
add
jo
mov
shrl
sub
add
sahf
cmp
dec
mov
loop
jae
loope
scas
inc
popf
insb
movsl
mov
movsl
pop
out
pop
mov
in
cltd
jle
scas
mov
loope
shrb
lret
cwtl
ret
cmp
xchg
pop
push
push
xchg
pushf
out
int3
fs
mov
mov
adc
mov
insb
leave
xor
and
mov
fistpll
out
or
xor
ljmp
sti
sahf
ja
cld
mov
in
rcrb
cmp
cwtl
xchg
dec
xor
cs
add
push
mov
push
mov
push
jnp
xchg
mov
in
pop
add
push
inc
cmpsb
cltd
clc
and
xor
stos
mov
pop
cltd
mov
out
jb
shl
or
in
mov
and
push
cli
or
mov
and
mov
clc
jmp
loope
xor
push
pop
mov
nop
pop
dec
dec
dec
cli
call
stos
aas
mov
mov
xlat
addb
fisubl
das
loopne
idivb
jne
cmp
or
xchg
sub
pop
int
cmp
mov
add
sbb
sub
pushf
pop
subb
mov
mov
iret
adc
cmp
add
fimull
rcrl
adc
stc
xchg
fmulp
ret
jno
leave
push
or
lahf
std
push
adc
mov
dec
pop
ret
mov
test
adc
fnop
pop
ret
lret
jmp
xchg
mov
cmp
lea
repz
ds
push
iret
cld
arpl
or
fldenv
imull
xchg
std
lahf
idivb
in
dec
mov
roll
movsb
lea
or
aas
mov
inc
mov
sbb
fdivs
fidivs
adc
mov
add
add
mov
lock
stc
xchg
pop
sub
call
mov
bound
adc
arpl
outsl
das
out
jne
xor
adc
mov
insl
jecxz
xorl
push
clc
jno
or
pop
dec
cli
xor
lods
lcall
xchg
movsb
xor
out
mov
pop
mov
shll
mov
lds
cmp
sbb
scas
mov
dec
push
frstor
rol
lea
mov
or
dec
lgs
xchg
jmp
or
frstor
pop
mov
sbb
xor
shrl
and
xor
stc
push
xchg
dec
mov
inc
fadd
loopne
pop
inc
pop
and
pop
add
push
mov
pop
inc
and
pusha
sahf
aas
sub
add
repz
inc
or
lea
pushf
inc
and
adc
bnd
add
enter
out
arpl
stos
add
inc
data16
xchg
adc
movsb
xchg
xchg
inc
mov
dec
push
cltd
cmp
xlat
and
push
inc
dec
clc
mov
sub
lds
pop
jno
inc
aam
cmp
sbb
jmp
adcl
sbb
bound
mov
mov
mov
xchg
sbb
cmp
inc
or
shll
hlt
add
scas
mov
call
lea
pop
lcall
and
cmpsl
int3
or
jne
sbb
inc
jle
ljmp
add
xor
jae
sbb
inc
mov
mov
sub
mov
or
add
imul
mov
int
mov
xchg
std
cmpsl
pop
mov
xchg
add
jo
adc
bound
inc
rcrl
ds
das
in
mov
jns
shl
mov
jnp
jbe
cmc
mov
addr16
and
mov
aaa
outsl
and
movsb
mov
xchg
jb
mov
es
js
loopne
out
bound
mov
sub
mov
aad
jge
adc
mov
or
gs
daa
mov
jle
call
popa
pop
addr16
push
repz
mov
xchg
mov
lock
and
jne
dec
test
jge
add
rorl
fs
or
jmp
test
inc
jg
in
sub
gs
and
or
mov
jne
scas
test
push
into
xor
cld
adc
fidivrl
lcall
pop
pop
xchg
mov
sub
and
push
push
jbe
movsl
pushf
inc
and
dec
out
shll
int
mov
or
and
cli
mov
icebp
icebp
cmp
xchg
jge
sub
les
lea
out
mov
push
and
nop
adc
adc
xor
xchg
xor
out
jmp
lcall
inc
faddl
cwtl
pop
add
cmp
das
push
les
jle
les
xchg
popf
divl
pop
pusha
sbb
adc
mov
xor
pop
cmp
shl
pop
xchg
stos
cmp
inc
clc
cld
cmp
lds
idiv
cmp
mov
add
cmp
sbb
mov
or
adc
lea
push
ds
mov
sub
aas
dec
ficomps
adc
or
dec
mov
lds
and
sar
bound
xor
cmp
into
call
fsubrl
mov
cltd
sti
adc
cmp
dec
pop
out
pop
xor
add
xor
sub
cmp
orb
sbb
scas
movsl
in
jns
dec
fwait
push
inc
adc
loop
loope
dec
imul
std
lds
movsb
sbbb
adc
andb
or
jmp
rorb
paddsb
sbb
loop
test
aam
push
rorb
push
adc
jo
xchg
jns
out
outsl
ficompl
add
jl
jb
fstpt
cmpsl
loop
add
fsubs
pushf
mov
stos
fldcw
push
xchg
adc
xor
mov
inc
lahf
xchg
or
test
mov
out
das
add
call
int3
mov
testb
jmp
cmpsl
mov
push
jg
jp
cwtl
add
ret
ds
insl
pushl
aas
jo
push
and
vmovntps
push
xor
cs
sahf
mov
push
xlat
add
mov
sbb
sahf
es
and
inc
push
sbb
push
cli
jae
lea
leave
ret
jle
cltd
pop
mov
jecxz
aam
push
adc
lods
out
pop
adc
pop
sbb
in
mov
mov
into
stos
pop
adc
ljmp
lods
pusha
mov
mov
mov
add
add
bound
mov
adc
shrl
es
dec
add
pop
cmp
test
mov
sbb
push
js
fnstsw
loopne
repz
sbb
hlt
popa
roll
rorb
push
inc
pop
adc
test
setb
sti
xchg
xchg
sub
adc
mov
sahf
push
jl
push
push
sbb
int
lods
aam
mov
jae
rol
test
imul
into
test
daa
sahf
push
cmp
add
mov
dec
and
test
into
cmc
xchg
jno
outsb
outsb
inc
inc
mov
jp
dec
cmc
xlat
add
lods
ss
xchg
pop
xor
push
mov
or
repnz
mov
sahf
adc
jmp
test
and
ret
jmp
movsb
mov
jo
sti
lret
dec
and
incl
push
data16
mov
out
mov
push
pop
dec
shrb
lods
mov
enter
sub
jnp
push
mov
fsubl
fiaddl
fidivl
out
das
inc
or
fiadds
mov
mov
xchg
jmp
xchg
xchg
or
out
inc
cmp
scas
out
rorl
mov
in
lods
movsl
push
dec
mov
pop
outsl
bswap
jl
dec
push
mov
xor
icebp
push
pop
push
mov
rolb
mov
mov
pop
push
stos
or
aas
add
aas
and
sub
pop
test
lds
lods
mov
outsl
add
pop
xchg
negl
pop
mov
push
push
inc
jne
xor
push
out
and
cmp
adc
lea
xlat
jmp
jecxz
pop
xchg
xor
mov
scas
cmp
adc
mov
adc
dec
and
xchg
cs
xorb
or
xchg
test
mov
addr16
and
xchg
cmp
popl
sbb
cwtl
scas
mov
push
mov
or
push
popf
sahf
xor
and
xor
bound
pop
jp
xchg
sub
fadd
out
lods
out
sub
das
sarl
cld
call
mov
cmp
aad
int
cmp
jge
push
mov
dec
inc
cld
loopne
test
in
mov
mov
pop
icebp
push
xchg
in
and
inc
adc
dec
ret
js
xlat
mov
dec
in
stos
dec
dec
push
sub
stos
sub
scas
stos
imul
enter
or
jbe
or
sbb
xchg
cmpsl
clc
jo
sub
push
mul
aas
std
and
jl,pt
mov
jb
and
pop
fs
cmp
cmp
pop
xor
lcall
std
mov
xor
fcoml
ret
ficoms
xchg
out
cmp
and
rol
dec
cmpsl
repz
xor
and
cmpsl
dec
inc
mov
mov
pop
lret
inc
jno
xchg
in
scas
cli
mov
push
xor
inc
mov
push
mov
rorb
adc
xchg
dec
int
mov
fldt
les
jmp
xchg
and
call
adc
sub
dec
xchg
sbb
int
out
jb
shrl
sbb
or
stc
sbb
test
aaa
or
fwait
ret
pop
loope
pop
sub
and
std
mov
enter
mov
push
lods
sti
lock
in
ja
fwait
sti
daa
dec
cmp
sahf
pusha
pop
aas
das
in
or
outsl
pop
fbstp
xorl
dec
std
adc
sbb
sbb
push
and
jb
in
xor
popf
stc
pop
pop
repz
cmpsb
fists
or
sarl
jg
push
repz
iret
lcall
je
js
pop
push
jb
dec
stc
or
pop
iret
or
push
add
xchg
inc
dec
outsb
push
pop
shl
push
dec
ljmp
cs
and
mov
push
add
adcl
add
dec
adc
pusha
dec
repnz
and
outsb
inc
std
les
int3
mov
jecxz
mov
xor
and
ljmp
inc
jb
cmpsb
scas
mov
fistpl
inc
gs
sbb
lock
and
movsl
and
mov
dec
test
mov
or
js
imul
daa
movsl
pop
cmp
pop
jno
push
adc
sarl
orb
in
cmp
xchg
mov
cmp
stos
and
in
test
into
int3
test
mov
dec
jg
and
add
stc
movsb
jns
jl
in
movb
cmp
cmp
and
mov
fwait
sbb
jl
pop
add
pop
mov
shll
aad
lods
sbb
push
xor
xor
pop
neg
repz
sub
hlt
mov
mov
pop
sbb
stc
insl
test
cwtl
nop
sbb
test
xchg
add
cmp
mov
mov
xor
rolb
mov
pop
push
mov
addb
outsl
xchg
incl
pop
fiadds
mov
mov
test
sarl
dec
xchg
xor
mov
stos
cmp
push
fistl
cmc
add
sub
mov
hlt
jb
inc
stos
mov
iret
rol
mov
and
inc
daa
iret
and
push
jno
cs
aad
dec
imul
sub
dec
mov
in
lcall
lret
and
mov
pop
push
xchg
stc
xchg
js
imul
stc
xchg
pusha
ret
inc
xor
sub
push
stos
xchg
je
jg
add
sub
das
cltd
xor
jl
push
pop
cmpsb
jge
mov
dec
jp
inc
xor
push
push
das
loope
cmp
xchg
in
pushf
sbb
pushf
mov
jge
js
mov
dec
stos
pop
mov
out
xor
es
pop
daa
cmp
mov
adc
rol
daa
lea
leave
test
loope
cmp
pop
addr16
lea
pop
mov
adc
gs
xchg
sub
push
pop
dec
jnp
xor
daa
pop
fwait
adc
enter
mov
inc
movsl
adc
sbb
push
jle
lods
out
mov
outsl
push
dec
test
test
push
xor
dec
push
fistps
int3
clc
or
stos
or
out
xor
faddp
popf
gs
push
inc
mov
test
pop
divb
or
test
or
cmpsl
pop
in
add
call
paddd
pop
xchg
adc
ficoml
mov
fmul
test
enter
inc
sub
pop
push
xor
in
fists
js
adc
and
aam
pop
or
popf
inc
or
ret
rolb
cltd
fcoms
rclb
push
cmp
rcrb
das
and
lret
mov
in
adc
jnp
ja
stc
stos
add
fisttpl
mov
sahf
adc
mulb
outsl
push
push
fcmovbe
jge
xchg
imul
fisubs
dec
cmpsl
pop
imul
lods
or
pop
scas
or
push
add
pop
cmp
cmp
sar
mov
ret
test
loopne
fmull
jbe
iret
shlb
mov
std
loope
add
mov
lods
push
js
sbb
cli
xor
daa
mov
adc
clc
xlat
or
lret
ss
add
cli
push
mov
in
xchg
pop
jge
loope
push
lds
cld
dec
clc
dec
scas
rol
push
movsl
mov
int
xchg
xor
mov
popf
or
sbb
scas
mov
xchg
ret
fidivs
dec
lcall
sbb
push
mov
mov
jle
cltd
movsb
jle
cmp
loopne
inc
repnz
adcl
mov
lret
scas
and
xchg
pop
inc
cmp
cmp
or
fwait
lret
sbb
lahf
mov
fsubrs
dec
cmp
loopne
stc
loop
or
lcall
movb
std
adc
imul
cmp
mov
mov
dec
inc
clc
sbb
in
insl
stos
xchg
push
into
cmp
dec
insl
adc
decl
and
movsl
cmpb
lods
ja
push
pop
insl
jecxz
jno
and
scas
in
xor
mov
cmp
gs
cli
xchg
andb
jg
orb
rorl
dec
mov
fadd
and
outsb
cs
loop
mov
pop
lods
lret
xchg
stos
push
cltd
cs
xchg
sti
pop
xchg
pop
mov
inc
pop
outsb
mov
movsb
xchg
xor
out
or
dec
int3
sub
pop
sub
pop
rcrb
or
add
mov
aad
xor
mov
sub
push
test
xor
cmp
loope
add
outsb
daa
divl
imul
add
xlat
xchg
mov
mov
fsub
dec
mov
adc
aas
movl
inc
jo
adc
dec
ret
pop
out
sahf
rcrb
and
mov
jno
dec
add
xchg
and
and
imul
fcomi
push
mov
int
pop
jl
jg
jbe
dec
pop
icebp
ds
and
and
insb
movsl
sub
lahf
icebp
jno
cmpsb
jmp
mov
imull
leave
fiadds
mov
sub
or
dec
lods
cmp
mov
lea
js
xor
sub
fs
pusha
cmpsb
jo
adc
cmp
inc
std
add
fdivs
add
std
jp
sub
popa
sub
or
hlt
dec
loopne
jg
scas
and
enter
pushf
popl
mov
lahf
ficoms
xchg
mov
push
xlat
in
into
add
fs
lods
call
cmc
or
subb
fadd
sbb
inc
add
clc
mov
xor
in
in
and
sub
rcll
fnstsw
pop
cmc
mov
push
or
sub
push
call
dec
push
clc
push
daa
pop
dec
and
jg
outsb
mov
mov
insl
cmp
mov
or
push
add
mov
adc
divb
loopne
xchg
mov
jp
movsb
xchg
call
fiadds
mov
cmp
cmpsl
push
pop
fsubr
mov
inc
xchg
mov
pop
mov
test
int
mov
in
cmc
mov
fwait
mov
sbb
movsl
mov
in
sahf
inc
nop
jle
das
aad
mov
int
push
add
pop
xor
xor
daa
decl
mov
outsl
push
push
int
push
push
xadd
ss
mov
xlat
cmc
jbe
icebp
fcoml
pop
outsl
lock
scas
ljmp
sbb
movsb
pop
and
out
stos
fmulp
cwtl
dec
and
and
jl
stc
pandn
lret
xchg
test
pop
jo
pop
lds
inc
sub
push
or
push
jns
add
int
orl
dec
push
cmp
mov
xchg
insl
sbb
jl
dec
mov
sub
push
mov
inc
or
or
push
inc
cwtl
gs
bound
inc
fstp
pop
mov
cmp
aaa
inc
mov
xor
push
in
lret
dec
ljmp
pop
call
xor
lcall
push
in
lahf
in
and
cli
pop
scas
das
ds
add
popa
lahf
inc
aaa
js
movsb
sub
loopne
cld
jne
out
in
popf
clc
xchg
jle
out
pusha
jl
mov
lods
sahf
xor
and
cltd
cmp
test
pop
mov
mov
movsb
and
sbb
dec
rcrl
inc
inc
cmp
mov
cmp
movsl
outsb
test
cmp
pop
mov
pop
or
cmp
cmpsb
mov
mov
scas
jb
sbb
mov
popa
outsb
cmp
mov
addr16
pop
fadds
add
mov
test
inc
addb
dec
push
cmpsl
jecxz
mov
repnz
mov
aaa
push
cmp
lea
lahf
sub
inc
fs
jnp
mov
scas
loop
std
lock
push
adc
mov
xor
aad
scas
mov
push
sbb
mov
dec
xchg
or
xor
inc
jnp
test
enter
pop
xor
rcll
add
mov
test
cmpsl
repnz
sahf
and
fdivl
push
addb
int3
inc
prefetcht1
dec
loop
dec
out
into
sbb
in
movsb
aaa
pusha
fisubrs
shl
push
mov
outsl
rclb
rcll
sbb
outsb
loopne
mov
and
pop
push
imul
jo
arpl
dec
jbe
shl
test
cmp
leave
fwait
adc
mov
std
lods
push
insl
mov
inc
cmpsl
ss
inc
xor
and
xor
pop
stc
pop
push
test
inc
mov
inc
and
inc
inc
sub
xchg
push
arpl
scas
adc
mov
daa
push
xor
sbb
neg
maskmovq
idivl
or
xchg
inc
sub
and
mov
inc
cmp
cmp
lret
xor
fstps
fadds
icebp
enter
mov
add
cmc
mov
repz
sbb
inc
fwait
adc
arpl
push
push
int
imul
ljmp
sti
mov
notb
lcall
push
jge
sahf
out
pushf
mov
push
ja
xlat
cli
and
jp
aam
push
int
or
mov
scas
leave
sub
jnp
inc
lret
dec
mov
sbb
mov
shrl
fcomps
xchg
sbb
arpl
addr16
das
push
mov
movsb
mov
push
pop
and
ljmp
mov
daa
cmpsb
cmp
call
adc
imulb
or
es
push
mov
pop
xor
test
jecxz
scas
out
pop
xchg
loope
jp
pop
shrb
loopne
std
inc
xchg
pop
or
adc
movsl
out
pop
xchg
loopne
stc
fcoms
fwait
add
stc
sub
jns
shlb
cmp
pop
lea
fadds
jl
jb
sti
hlt
iret
adc
lock
mov
or
jecxz
cmp
popf
mov
out
mov
sub
movl
fnstcw
inc
dec
xchg
clc
fiaddl
out
jno
sbb
ds
mov
js
call
fs
dec
ljmp
and
pop
inc
push
in
mov
push
movsb
bound
in
jg
push
out
mov
sbb
mov
mov
lret
call
dec
rolb
and
or
sbb
js
mov
jo
or
mov
xchg
fisubs
stc
xchg
js
in
or
mov
outsb
jae
sti
das
andb
pop
ljmp
ret
subb
dec
lods
cmp
rcrb
xlat
cmc
loop
cmc
jne
mov
or
aaa
mov
mov
and
add
out
cmp
mov
sarl
aam
in
mov
lock
insl
je
lea
cmp
lods
les
ds
and
popa
add
xchg
aam
fadds
xchg
mov
rcrb
cmp
jne
cmpsb
sti
cwtl
inc
out
pop
es
clc
jno
mov
jmp
push
or
push
in
mov
rorl
jge
push
push
ds
add
in
nop
mov
in
or
enter
cwtl
imul
pop
insl
mov
jp
movsb
enter
cltd
in
cmpsl
arpl
repz
push
adc
imul
ja
insl
popa
in
cli
xlat
mov
lahf
add
jl
repz
popf
mov
push
and
dec
push
sbbl
pop
cmpsl
sub
xor
out
jno
imulb
pop
pop
xor
pop
mov
add
fidivl
imulb
or
pusha
iret
pop
add
pop
pushf
out
adc
loope
out
test
mov
or
mov
pop
out
ss
add
pop
jmp
xchg
test
or
pushl
dec
pop
loopne
mov
sub
lea
cmp
imul
jge
adc
les
jmp
mov
add
fwait
pushf
sub
orb
mov
rorl
aad
or
movsl
push
xlat
jae
imul
mov
sub
pusha
fdiv
pop
push
lahf
stos
mov
repz
pop
dec
mov
adc
shll
mov
adc
xor
ss
push
jmp
mov
and
push
push
shlb
sub
pop
ja
out
data16
dec
push
pop
mov
leave
mov
lods
sbb
add
xor
dec
sahf
mov
inc
add
xchg
adc
pop
rorl
mov
xor
xor
sbb
mov
mov
les
incl
es
jp,pt
jmp
gs
lcall
popa
and
imul
mov
pmuludq
push
sbb
sbb
aam
xchg
pusha
aas
xor
imul
inc
sub
pop
les
lock
xchg
mov
ljmp
inc
out
arpl
bound
mov
decl
sub
outsb
push
adc
repnz
mov
jnp
lret
xchg
fcom
test
cltd
mov
cmp
neg
pextrw
xor
cmp
adc
ret
inc
shl
inc
cmc
ljmp
int
xchg
in
mov
sub
pop
cmp
ret
insl
cmp
jo
fsts
cwtl
icebp
cmpsl
das
sbb
aaa
and
out
pop
nop
push
xchg
outsb
lcall
arpl
mov
test
flds
aas
sub
popa
sub
and
in
dec
or
mov
popa
push
mov
lds
jns
add
mov
jb
int
mov
sbb
sbb
scas
imul
mov
and
inc
or
pop
lahf
int
mov
jle
pop
cmp
insl
imul
pusha
pushf
arpl
mov
stos
test
je
pop
xor
push
pop
xchg
sbb
testb
and
xchg
cmp
inc
icebp
cmc
outsb
push
in
push
mov
cld
pop
leave
fbld
push
das
jne
dec
xchg
clc
pop
inc
pop
sbb
aas
pop
push
rep
xlat
dec
push
sbb
dec
xor
or
mov
shl
loope
sbb
into
ffree
push
data16
add
xor
pushw
mov
push
add
popf
mov
aas
push
ljmp
stos
neg
rclb
lods
ret
add
fs
xchg
insb
xchg
lahf
cmpsb
cltd
sub
or
repnz
jo
sbb
jns
cmpsl
aas
push
cs
cli
idivb
adc
and
cwtl
popf
push
mov
jo
fcoml
or
data16
and
int3
add
sub
mov
in
push
rclb
iret
inc
jg
pop
inc
js
dec
pop
cmpsb
pop
aaa
jmp
mov
mov
pop
sub
std
dec
or
sub
dec
arpl
mov
pop
sub
sub
fstpt
inc
inc
aam
rorl
fmull
adc
stos
jnp
ja
inc
jae
xchg
cmpsb
outsb
mov
jg
loop
or
xchg
jbe
sub
std
cmp
lods
roll
test
and
inc
add
repz
jne
pop
out
test
das
data16
popf
pop
negl
lahf
push
cwtl
fsubrs
inc
imul
mov
bound
mov
push
scas
cmp
inc
and
dec
xor
jno
dec
jle
mov
xor
xchg
in
mov
out
pop
adcb
mov
negb
jle
dec
or
pop
push
mov
int3
call
mov
js
cmp
adc
inc
xchg
fldenv
xlat
clc
xchg
sub
pop
imul
repnz
mov
xor
hlt
or
push
enter
repz
out
roll
fidivrl
add
loope
cmp
mov
jb
adc
inc
dec
aas
sbb
pop
repnz
pushf
sbb
xlat
lret
adc
cs
cmpsb
lock
outsb
in
sbb
jae
add
pop
sbb
loop
popa
sbb
xchg
pop
add
out
hlt
or
or
mov
jbe
pop
out
loop
outsl
adc
push
test
and
sbb
rclb
push
adc
scas
loop
adc
add
pop
inc
fdivrp
xchg
xchg
addb
out
out
sbb
icebp
push
push
shll
in
inc
mov
xor
cwtl
repz
clc
fcoml
sbb
aam
mov
inc
inc
dec
mov
mov
stos
mov
enter
insb
push
iret
mov
mov
dec
or
fiadds
jle
push
popf
adc
insb
jbe
inc
inc
orl
pushf
jl
mov
andl
adc
imul
test
pop
mov
sub
xchg
sub
and
mov
xor
leave
fldt
xchg
int
xor
in
mov
loopne
movsb
inc
add
enter
pop
fwait
lods
jno
pop
mov
loopne
lea
nop
jmp
jns
into
ficomps
or
stos
lods
push
xchg
xchg
ret
mov
mov
loope
enter
mov
push
lods
push
fwait
inc
push
rcl
adc
xchg
addl
cmpsb
or
lret
jns
rcr
or
addr16
adc
imul
hlt
pop
mov
mov
aas
imul
stos
mov
fiadds
aad
test
clc
xor
mov
and
jnp
push
xchg
jno
scas
push
xchg
bound
out
outsl
mov
mov
rol
testb
mov
mulb
ret
inc
sbb
sub
and
fdivs
mov
push
adc
sub
mov
push
movsb
xor
push
jb
jl
lret
and
or
mov
cmpsl
xor
pop
std
add
sbb
test
test
sub
inc
cmpsb
mov
jo
dec
xchg
neg
lcall
sub
or
cmp
add
outsb
mov
xchg
push
lahf
inc
sbb
dec
popa
fs
push
out
shll
jb
rcrb
in
daa
sbbl
cmc
repz
enter
cli
inc
outsl
push
jecxz
fiadds
xchg
std
mov
sub
icebp
and
es
adc
xor
adc
mov
sbb
lock
pushf
xor
xchg
and
or
xor
jno
fs
add
xchg
mov
lahf
out
aam
int
add
fcmovb
cwtl
mov
test
leave
aad
lcall
push
xchg
fmull
add
dec
pop
jb
daa
dec
mov
xchg
xchg
repz
rorb
and
jl
out
pop
dec
mov
cli
dec
popa
cmp
cwtl
pop
xor
cmp
cmpsl
adc
scas
xor
inc
fnsave
pxor
inc
aaa
les
subl
mov
shrb
sbb
mov
adc
je
outsl
in
dec
pop
cmpsb
lea
mov
lcall
sahf
imul
pop
movsl
and
pop
push
sub
test
mov
pop
push
and
fcoml
cmc
movsb
pop
sub
insl
sub
icebp
xchg
sbb
inc
rclb
mov
enter
add
es
xlat
pop
push
lock
push
jae
pusha
pop
and
sub
xor
ficoml
mov
sbb
pop
fists
push
in
cmpsb
hlt
pop
mov
stos
inc
ret
push
add
xchg
jbe
mov
addr16
pop
bound
sub
scas
insb
xor
fadd
mov
in
mov
mov
cmp
sub
jl
add
inc
xchg
lret
mov
xchg
ss
movsb
scas
add
fldcw
jmp
jecxz
fcmovnb
adc
into
sub
std
pop
adc
push
scas
cld
dec
inc
sbb
cmp
cs
sub
push
mov
stos
ljmp
pop
es
push
std
mov
scas
decb
dec
xchg
bound
or
cmpsl
xchg
adc
mov
pop
sti
lods
add
fs
mov
cld
icebp
adc
sub
ljmp
cmp
cmp
addl
daa
call
movsl
movsb
movsb
rorl
adc
sbb
and
cmp
stos
jp
fimull
clc
adc
stos
inc
ljmp
cld
icebp
loope
les
loope
sti
adc
or
scas
xchg
adc
outsb
push
xchg
push
sbb
pusha
int
xor
es
sub
adc
fs
add
addr16
dec
jae
sub
pop
sbb
les
addr16
fucomi
subl
mov
fldenv
add
nop
cmp
je
mov
dec
sahf
fs
mov
icebp
mov
outsl
rcrb
mov
pop
iret
and
repnz
jno
lea
adc
popl
mov
cmp
and
jge
mov
inc
mov
push
ja
mov
testl
pusha
addl
enter
mov
push
ret
cmp
cmp
mov
and
cs
aas
mov
mov
aad
aaa
inc
or
sti
int
insb
add
aad
icebp
loope
adc
lret
test
out
mov
sti
stc
loopne
int
fistl
scas
sbb
int
pop
push
enter
inc
mov
jp
cmp
and
jle
jne
xlat
push
dec
push
lods
push
pushf
push
nop
test
stos
cmpsb
popa
inc
ret
ret
and
pop
jmp
rorb
mov
jg
add
add
mov
pop
out
inc
mov
jecxz
xor
cmp
fsubrs
outsl
inc
and
add
and
jae
cli
pusha
sbb
pushf
and
lea
insb
jp
mov
push
inc
cmpb
adc
lock
mov
popf
pop
ret
cmpb
dec
mov
in
in
cli
out
jns
push
nop
pop
fdivrs
push
cmp
outsb
jecxz
mov
pop
cmp
jle
mov
fsubp
push
incb
push
movsb
mov
dec
sbb
in
inc
sub
add
mov
sbb
sub
mov
mov
popf
adcb
out
or
adc
hlt
push
shll
mov
in
add
or
lret
inc
in
test
jb
in
sbb
mov
dec
in
mov
icebp
imul
pop
iret
test
jl
lods
sarb
lock
sbb
std
xor
mov
fmull
arpl
mov
mov
add
lds
xor
das
outsb
lcall
jns
out
out
sub
add
cltd
mov
dec
call
andl
mov
pop
in
xor
jl
nop
or
adc
sub
mov
fbstp
jp
and
jecxz
jne
sbbl
push
in
stos
jp
xchg
and
and
arpl
push
fs
sub
test
or
jle
cld
mov
inc
mov
adc
inc
pusha
xor
mov
xchg
cltd
xlat
push
inc
mov
rcl
xchg
and
fistl
xchg
pop
mov
push
cmp
mov
cmp
fisubl
xchg
pop
decl
sbb
idiv
nop
call
or
call
push
and
xchg
je
mov
movsl
icebp
std
xchg
lcall
ss
add
pop
ret
in
jge
inc
in
stos
loope
dec
js
ret
test
sbb
clc
shrb
and
aas
add
dec
mov
mov
mov
lcall
scas
push
sub
es
and
das
mov
sarl
scas
int
roll
pop
orps
jecxz
inc
mov
adc
add
sbb
and
push
pop
arpl
movsl
cmc
mov
cmp
sbb
enter
outsl
lcallw
inc
xor
pusha
insl
testb
xor
mov
clc
scas
dec
ljmp
insb
xchg
icebp
jo
pop
notb
dec
or
mov
lock
mov
jp
and
lock
mov
mov
shrb
cmp
pusha
xlat
push
fidivs
sti
push
pushf
repz
test
sbb
popf
dec
daa
sbb
daa
addl
adc
push
jb
mov
mov
dec
jb
fs
mov
lock
movd
mov
mov
mov
and
sbb
push
add
daa
aad
jge
mov
pusha
jb
aam
andb
xchg
aam
call
outsl
in
subl
pop
addps
test
sti
scas
loopne
pop
daa
push
fucomi
icebp
in
clc
cmp
jb
fimuls
xor
pop
loope
push
stos
mov
cli
mov
push
arpl
and
cld
fstpt
push
and
sti
in
and
int
mov
into
mov
in
je
xchg
idivl
mov
sbb
lods
in
mov
sbb
imul
insb
sbb
mov
daa
mov
push
lret
clc
imul
loop
xchg
addr16
jno
push
popf
orl
int3
cli
mov
ja
rolb
sbb
inc
cli
mov
lcall
fidivrs
cmc
dec
cmc
sti
inc
jae
mov
cmpsl
ja
mov
add
sbb
xor
sbbb
add
sti
mov
out
mov
bound
pop
xor
inc
das
push
cmpl
sub
mov
inc
push
add
jbe
ja
pop
dec
mov
aam
imul
xchg
xchg
aam
push
mov
jae
dec
cltd
loopne
xlat
inc
xlat
mov
or
cmp
and
sbb
jmp
mov
imul
jnp
bound
out
es
in
popf
xchg
cmp
ja
fisttps
cs
jge
pop
jae
lock
cltd
inc
mov
push
test
loop
mov
inc
dec
lods
add
cmp
inc
inc
inc
addr16
cltd
test
push
ljmp
js
int
sbb
sbb
push
xor
mov
fstps
add
adc
jae
and
push
adc
xor
fcomps
pushf
sbb
fsubp
jnp
pop
cmc
mov
lret
mov
push
sub
pop
fcomps
mov
cld
add
in
sbb
rclb
pop
in
push
push
lahf
mov
push
mov
out
filds
bound
cmp
enter
aaa
add
test
call
cmpsl
and
adc
mov
lock
jae
movsl
jne
es
inc
jae
in
scas
cwtl
cmc
scas
addr16
fdiv
pushf
hlt
inc
cmp
mov
sbb
aad
cs
mov
mov
loopne
movsl
flds
mov
popf
pop
cmp
test
xor
aaa
inc
fisubs
fs
jne
les
dec
mov
fiadds
push
add
ljmp
push
inc
pop
sar
push
shr
fdivr
and
dec
sub
and
jge
daa
push
or
lret
add
or
cmp
leave
mov
jl
in
mov
jp
jmp
aam
xchg
xor
add
mov
xchg
int3
into
xchg
jne
inc
out
mov
subl
cmp
test
mov
fwait
sub
xor
lods
push
rorl
or
addb
or
or
pop
jmp
mov
sub
test
mov
movsl
dec
icebp
rcr
sub
mov
mov
push
ret
and
sti
sarb
inc
mov
imul
add
xchg
push
insb
xchg
push
dec
push
repnz
imul
popf
popf
stc
sub
inc
in
cli
mov
shrl
iret
dec
or
iret
and
sub
test
or
movsb
add
icebp
push
call
adc
sbb
pop
int3
fst
add
sarb
jb
cmp
rcl
mov
stc
and
shrb
aaa
lods
lock
imul
mov
cmp
sbbb
adc
push
das
and
sbb
sbb
mov
adc
stc
cmp
mov
aad
xchg
mov
jb
add
aas
mov
sub
das
mov
lret
es
cmp
cs
out
sbb
pop
mov
push
or
push
out
in
rcr
pop
cmp
add
rolb
aad
jno
pop
mov
mov
mov
cmc
push
outsb
dec
cmp
dec
xchg
mov
out
sar
cmovns
rorl
or
es
out
or
mov
ja
lods
mov
jae
cmp
fdivp
cmp
negl
lahf
cmp
pop
out
jecxz
stc
gs
xchg
mov
xchg
mul
fwait
xor
mov
test
arpl
push
or
jecxz
mov
adcl
pop
scas
jae
loope
and
adc
push
and
out
lods
push
int3
jbe
mov
aad
add
sbb
jp
dec
sub
je
sbb
pop
enter
lahf
mov
rcr
sub
xor
outsb
pusha
add
xchg
aaa
xchg
inc
sub
outsl
push
lret
push
orl
jg
in
inc
hlt
daa
repz
enter
lock
sbb
loop
aam
xchg
incb
push
xor
jae
in
iret
mull
arpl
push
out
dec
cwtl
clc
fs
push
push
mov
icebp
popf
inc
sar
arpl
xchg
call
insl
mov
jae
jbe
sub
dec
out
lcallw
mov
repnz
cwtl
test
rolb
xor
xor
jnp
lods
ror
xor
or
stos
sbb
or
xchg
scas
flds
pop
pop
mov
sub
push
pop
adc
cmp
repnz
push
inc
dec
cmp
stos
xchg
adc
movsl
repnz
cmp
lret
aas
popa
pop
into
or
aam
rcrl
and
nop
pop
dec
sbb
les
mov
in
std
scas
test
stos
jb
leave
std
cmp
jg
sti
je
ret
mov
jp
mov
fsubs
and
out
jnp
xorl
cltd
adc
fcoms
sbb
mov
shr
js
les
arpl
inc
jge
lahf
inc
fisttps
xchg
xor
inc
data16
icebp
test
cmovnp
sbb
rolw
pop
rclb
ljmp
push
xlat
icebp
mov
bound
sub
sub
xor
jbe
les
test
cmp
testl
add
ljmp
stc
push
in
push
sub
cmpsb
push
andb
mov
enter
or
adc
or
daa
mov
mov
cli
xor
pop
cwtl
xlat
cmpsb
xor
loope
add
jbe
fidivl
rclb
mov
xchg
int
xchg
jle
mov
adcb
out
or
mov
cmpsl
xor
hlt
and
or
jp
xchg
lahf
int
adc
mov
push
adc
mov
daa
sar
int3
dec
adc
sub
rorb
push
mov
ss
fcmovne
mov
sahf
test
out
sub
addr16
adc
inc
push
clc
xor
mov
lret
shll
pop
xlat
idiv
mov
pop
mov
push
movsl
adc
xchg
fidivrl
out
push
jecxz
push
mov
ficompl
lods
pushf
inc
sub
or
popf
cmp
iret
pop
iret
fsts
jle
fidivl
mov
push
mov
mov
inc
jg
add
push
push
fbld
mov
xchg
out
and
movsl
jb
pop
mov
xchg
fbld
stos
hlt
xor
in
push
xchg
dec
xchg
and
nop
arpl
or
jge
ljmp
dec
xor
xchg
push
cmp
jmp
pop
into
scas
mov
push
jne
mov
sbb
cmp
pop
push
les
xchg
leave
out
jno
cltd
lods
test
mov
lret
pop
lods
in
fisttps
and
cmc
fnstcw
addr16
and
in
dec
push
test
scas
sbb
arpl
mov
subb
ja
jb
test
ret
push
add
adc
cmp
push
add
xor
jle
pop
jb
pop
pusha
xor
lahf
ret
outsl
mov
mov
xchg
jge
pop
daa
mov
xchg
adc
jge
les
lcall
pushf
hlt
ljmp
xor
cmpsl
pop
and
loopne
sub
nop
xor
jbe
lcall
inc
sahf
shll
sti
fbstp
scas
cmp
cmpsl
pop
cs
mov
xor
cld
jo
sub
lock
popa
out
mov
and
pop
adc
push
push
popf
mov
repnz
xor
or
add
push
sub
adc
dec
jbe
pop
movsl
pushf
pop
stc
sub
js
sbb
sub
or
add
cmp
faddl
or
aaa
cltd
xchg
aad
js
leave
imul
sub
shl
in
pop
sbb
add
mov
push
stos
aam
add
mov
mov
js
faddl
lods
cmp
inc
movsb
pop
jl
push
push
lea
fs
movsb
pop
add
pop
mov
pop
xchg
mov
xor
cmp
aaa
push
cwtl
fmuls
loop
bound
xchg
xchg
testl
push
xor
mov
xor
xchg
dec
pop
fisubs
ds
pusha
and
cltd
dec
lock
or
cmp
pop
ljmp
push
mov
sub
cmpb
adc
cmp
jo
aad
sti
mov
jl
and
inc
mov
repnz
mov
mov
xchg
sub
ret
jl
push
lahf
pop
push
aad
js
inc
pop
movsl
fwait
mov
jmp
loopne
push
leave
push
clc
in
mov
decl
add
fstps
movsb
cli
cmc
jge
pop
movsl
cmc
scas
outsl
cmp
adc
fwait
mov
in
test
lcall
push
loopne
xchg
nop
cmc
outsb
xchg
push
adc
or
pop
test
daa
fsubl
xchg
scas
pop
mov
call
pop
sub
icebp
mov
xor
call
jl
mov
adc
aaa
push
sub
xor
or
mov
test
aad
or
in
stos
in
leave
mov
fucomp
xor
aaa
sub
pop
ja
cld
mov
xor
inc
cmp
fs
in
mov
mov
scas
inc
push
test
mov
loope
lret
aad
out
mov
and
iret
push
mov
sub
jbe
sub
xor
imul
shlb
idivb
pusha
aas
xchg
lds
mov
cmp
jge
sub
out
mov
testb
mov
mov
cmp
xor
mov
insl
pop
push
mov
or
repnz
jno
sti
add
lds
sub
sbb
fdivl
or
push
pop
xor
call
lods
adc
out
fwait
and
lcall
jo
cmpsb
inc
fidivs
cld
movsb
loop
test
or
mov
xor
fiadds
daa
cwtl
test
pop
adc
lock
gs
cmc
fwait
cmc
clc
out
dec
pop
jg
data16
lcall
jo
pop
imul
xchg
pop
pop
mov
in
dec
cmc
in
mov
ror
scas
loopne
movsl
dec
cmc
ret
dec
lea
sahf
jo
push
mov
test
and
mov
es
xlat
cmp
xchg
vpshlw
mov
sti
dec
out
or
sbb
movsl
or
cmp
mov
loop
inc
dec
or
insb
pushf
popl
cmp
movsb
pop
and
ds
jbe
lds
inc
inc
js
xorl
mov
les
mov
orl
addr16
mov
ja
orl
push
push
cmp
push
cwtl
mov
xchg
push
sarb
push
push
addr16
rcll
mov
int
aam
jecxz
adc
cmp
test
jo
sbb
test
and
dec
insl
add
xchg
dec
and
mov
adc
lods
jae
jb
xchg
popf
mov
adc
stos
lock
inc
mov
cmpsl
fwait
mov
jmp
aaa
inc
stos
jbe
arpl
cmp
xor
pop
outsl
xor
push
sbb
in
mov
mov
mov
sbb
lods
sub
rcll
aam
push
push
mov
rcrb
fisubs
inc
add
std
lret
cmp
push
sbb
orl
xor
mov
ja
mov
pop
push
mov
imul
repz
in
es
xchg
loope
mov
fwait
jbe
aas
mov
ja
lret
dec
sbb
mov
dec
in
xchg
xchg
mov
mov
jecxz
pushf
nop
cmc
nop
sahf
int
mov
pop
sub
loopne
ljmp
in
loope
push
leave
mov
jae
fnstsw
out
cmpsl
aas
outsl
sar
mov
insl
jbe
test
orl
sub
lahf
insb
fs
push
cmp
pop
mov
add
int
scas
out
fnstenv
in
inc
xchg
jns
out
push
mov
aam
adc
sahf
or
and
jb
add
mov
aam
fsubl
xchg
cld
inc
sbb
inc
xchg
adc
arpl
iret
mov
inc
add
dec
leave
ss
cli
cmp
popf
cmc
cltd
jp
hlt
add
dec
std
pusha
xchg
jbe
dec
lret
sub
pop
cmc
jl
ja
cmp
xchg
cli
dec
out
jge
repnz
push
mov
loopne
xchg
scas
insb
add
xchg
jae
sbb
addr16
decl
cmp
out
into
pop
adc
ret
mov
pop
fld1
mov
int3
loope
bound
repz
aam
icebp
sbb
iret
pop
ss
cwtl
cmp
jp
in
hlt
add
aas
push
adc
popf
sbb
xor
cli
sbb
mov
push
jp
hlt
xchg
lea
push
add
sub
sub
lcall
pop
loope
ret
addr16
in
or
xchg
add
sbb
enter
insb
inc
out
adc
das
leave
sub
and
jne
push
jae
xor
push
aas
ljmp
jge
and
outsb
arpl
test
aaa
and
mov
or
xchg
rcrb
ja
pusha
sbb
ret
jo
subb
jae
add
out
add
ret
stc
in
sub
xchg
jg
mov
test
ret
int
push
dec
and
mov
lahf
stos
xchg
lret
adc
call
inc
das
data16
aaa
in
stos
xchg
and
ljmp
mov
pop
mov
xchg
repnz
je
subb
dec
add
xor
out
xchg
jecxz
add
arpl
and
insl
leave
enter
mov
adc
pop
loope
sahf
arpl
pop
inc
fiadds
add
jne
addr16
pop
adc
sub
mov
inc
jns
mov
sahf
inc
jge
loopne
mov
es
cmc
dec
jns
adc
jne
adc
xor
aas
out
jns
jmp
jbe
jmp
enter
push
pop
sub
or
jl
push
push
jo
mov
in
enter
sbb
outsb
cmc
adc
push
movsl
rol
dec
push
sbb
cli
rsm
std
push
aas
jmp
xchg
loop
sbb
add
jp
bound
jb
loopne
mov
inc
jae
xchg
test
mov
pop
shr
fcoms
outsb
scas
outsb
ret
jge
mov
inc
xchg
add
sbb
dec
pop
mov
sub
push
xchg
outsl
cmp
scas
repnz
jne
inc
repz
sbb
test
js
lret
test
loop
push
and
int3
push
stc
add
mov
push
mov
xor
in
pushf
aaa
fisubrl
incb
sub
push
xor
arpl
push
pop
push
sahf
xor
in
imul
add
push
mov
dec
in
sub
jle
mov
adc
lods
mov
xchg
test
cld
nop
movsl
dec
addr16
imul
add
lcall
test
sbb
xchg
xchg
decb
mov
mov
xchg
xor
cs
jmp
mov
or
fldt
mov
mov
or
xchg
arpl
ret
adc
lret
cmc
mov
jmp
mov
inc
clc
pop
sbb
mov
mov
pop
outsb
add
inc
xchg
clc
push
jbe
aas
mov
pop
mov
fsubrs
and
mov
sbb
scas
jno
rol
inc
inc
push
add
out
test
aad
push
lret
jae
pop
js
push
sbb
mov
xchg
or
dec
popf
aas
cld
mov
repz
ds
sbb
pusha
popf
inc
mov
adc
loop
iret
mov
xchg
xchg
cmp
fwait
js
outsb
adc
xor
movsb
ss
pop
push
xchg
pusha
scas
push
or
mov
ds
cld
bnd
jbe
mov
mov
imul
in
ret
xor
push
push
ds
fldenv
xor
cmp
sti
leave
lds
and
inc
cmp
sbb
sbb
and
adc
sbb
mov
call
jnp
dec
iret
aam
ret
loope
std
pop
and
dec
sub
mov
mov
pop
test
push
jo
out
int3
sub
lods
jle
and
pop
dec
pop
jno
shlb
insw
adc
and
jl
cmpsb
out
std
inc
pop
pusha
daa
sbb
std
lret
jge
loope
cmp
sti
push
jge
jnp
sbb
sbb
xlat
dec
jns
out
je
scas
push
pop
rcr
insl
xchg
sbb
mov
imul
dec
mov
mov
jp
cmp
mov
ja
fs
jnp
sbb
xor
das
inc
enter
mov
or
clc
pop
push
in
mov
es
or
inc
pop
inc
testl
pushf
push
js
inc
adc
ret
icebp
adcl
sbb
mov
mov
mov
xor
fimull
data16
jne
mov
dec
or
out
shlb
cmpsl
push
dec
sbb
ret
sbb
int
pop
dec
inc
enter
jecxz
enter
out
pusha
pop
jne
outsl
rcr
jg
rcrb
mov
jo
jb
sbb
jp
or
dec
xlat
call
in
jl
mov
ret
sbb
insb
fstpl
and
inc
dec
dec
mov
sbb
adc
mov
cmp
xor
mov
mov
pop
inc
scas
ja
or
negb
arpl
mov
imul
adc
jb
xor
and
add
mov
lods
sarl
mov
adc
sub
ja
loopne
sbb
daa
sbb
frstor
insb
and
shlb
sti
insl
cwtl
push
xor
pop
mov
mov
jmp
and
stos
daa
cmp
mov
nop
fildll
and
pop
inc
ja
add
xchg
rcll
jmp
stc
dec
or
notrack
ret
cmovg
fsubs
sub
mov
out
mov
pusha
in
xchg
aaa
fxch
push
xor
add
inc
or
dec
pop
jbe
inc
jp
push
repnz
xlat
dec
cltd
xor
mov
sbb
scas
mov
push
sbb
aaa
hlt
lea
int
push
test
lcall
mov
daa
fnstsw
fadd
lds
jnp
jne,pt
adc
push
sbb
ljmp
mov
or
xchg
xchg
test
push
ret
daa
fbld
cmp
xchg
sbb
outsl
inc
xchg
jle
sbb
shl
scas
cmc
adc
jge
mov
xor
pop
enter
mov
mov
fs
in
rorb
int
add
push
push
and
in
and
mov
xchg
mov
loope
stos
mov
call
stos
out
sub
ret
sub
mov
mov
or
leave
jp
mov
jg
repz
mov
clc
or
sub
or
or
dec
sbb
cld
cmpsl
cltd
or
imul
mov
dec
fnsave
inc
fdivrl
sti
out
loop
cli
test
xor
mov
sbb
fidivs
dec
in
aad
pop
pushf
cmp
fmull
iret
lds
pushf
shlb
pop
mov
mov
mov
lret
out
in
push
pop
dec
das
lret
adc
xchg
sub
lret
sub
adc
inc
dec
loopne
int3
mov
mov
sub
addl
test
arpl
xor
pop
lods
test
mov
mov
test
je
cmp
xchg
push
gs
es
pop
xchg
in
xor
test
mov
ficoms
addl
dec
push
test
mov
mov
daa
adc
jge
les
and
mulb
int3
fdivrl
fnstenv
rcl
rcll
push
jl
dec
pushf
or
stos
iret
inc
mov
sbb
jp
dec
insb
das
cmp
sub
loope
inc
lret
dec
nop
pop
das
movsl
add
dec
fidivrl
mov
mov
int
lock
ljmp
cld
push
xchg
lahf
nop
mov
mov
ret
rorl
dec
jecxz
sub
pushf
cmp
mov
addb
shrb
adc
movb
jmp
stos
int3
pusha
in
in
sbb
push
notl
push
push
push
sub
lds
ljmp
out
stc
xchg
or
enter
inc
cmp
push
ja
mov
outsl
hlt
pushf
or
out
rcrb
pop
in
data16
jle
mov
fldl2t
leave
adc
sbb
push
or
pop
add
pop
in
test
lea
push
dec
lock
ret
cmpsb
mov
sub
outsl
out
xor
mov
rcrl
push
rorb
orb
mov
add
adc
jbe
jp
cmp
dec
or
aad
or
mov
xor
pop
insl
dec
je
inc
stos
xchg
push
rorb
fcmove
cs
and
jmp
mov
mov
adc
and
data16
xchg
or
or
fs
mov
test
jmp
pop
lret
push
dec
mov
stc
dec
sarb
xor
mov
pop
adcl
push
and
mov
adc
jo
and
push
cmpsb
lcallw
xchg
xor
stos
int
dec
cmpsl
mov
push
cltd
pop
ljmp
push
mov
scas
rorb
in
jae
cwtl
scas
add
dec
mov
fstl
push
push
ret
out
push
ret
jns
mov
scas
and
arpl
lret
into
movsl
js
mov
jmp
popl
in
sti
adc
jmp
data16
mov
ficoms
pop
mov
push
in
dec
cmp
push
pop
jecxz
xor
add
mov
xchg
lahf
jge
sahf
xchg
aas
cmc
xchg
mov
out
lret
popl
cld
icebp
in
clc
xchg
lret
xchg
inc
and
cld
les
nop
mov
out
jl
pop
cltd
out
aad
mov
cmc
ljmp
jg
into
icebp
cmp
lea
notl
fsts
pop
push
cld
cmpsb
jle
in
loop
in
sbbb
dec
aaa
pop
enter
insb
iret
movsl
xchg
scas
sbb
in
sbb
sub
iret
sahf
add
xchg
cmp
loopne
or
cmp
popa
xchg
fwait
push
and
imul
fsubrl
mov
or
xchg
mov
inc
push
adcl
fdivl
and
add
and
or
and
es
xchg
cli
mov
enter
enter
leave
call
out
std
mov
shlb
xor
fsts
inc
sbb
jns
or
xchg
clc
mov
test
xor
mov
inc
aam
icebp
testl
pusha
pop
push
ret
mov
pop
mov
cmp
bound
flds
add
lret
movsb
inc
push
shrb
and
ds
cmp
stos
push
outsl
cmpsb
fistpll
or
rorb
fwait
into
ret
fmuls
cmpsl
fs
testl
or
mov
mov
in
dec
xor
lock
pop
push
or
dec
imul
pop
sub
push
fistl
scas
pop
gs
mov
cmp
mov
and
outsb
test
mov
and
jl
push
xchg
test
dec
add
inc
imull
lods
js
pop
xorl
or
dec
pop
mov
test
fs
xchg
sub
in
sub
mov
add
mov
enter
and
adc
pop
repnz
xor
cli
mov
std
insb
pop
adc
inc
ret
cwtl
sub
or
mov
fidivrl
in
lods
cli
clc
rorl
ja
ljmp
jno
cmpsl
add
and
push
mov
sbb
aam
mov
xor
inc
xor
or
xchg
scas
cmp
xor
cmp
mov
addr16
ja
out
add
repz
idiv
dec
shll
jnp
xor
dec
stos
pop
push
xor
adc
stc
je
jl
dec
loope
jno
pop
insl
mov
es
inc
sub
es
movsb
fisttpl
jle
lds
push
push
jmp
fstpl
add
add
mov
xchg
mov
jg
idiv
loop
jb
ljmp
fstl
bound
xchg
lock
sti
mov
mov
inc
xchg
push
sub
sarl
fadds
lods
icebp
and
jno
stos
icebp
nop
popa
in
and
popl
cmp
aaa
repz
mov
insl
adc
push
inc
cmpsl
mov
push
pop
ja
cltd
mov
or
rclb
pop
jecxz
adc
jb
pop
inc
jp
lds
push
pop
inc
ret
push
jmp
mov
rcll
rolb
test
stos
loopne
xchg
adc
and
test
notl
int
test
sub
mov
or
orl
push
lds
cmpsl
add
in
ret
in
push
lahf
movsb
addb
int
cmp
ror
pop
mov
ja
je
and
pop
outsl
push
testb
xorl
xchg
xor
jg
loope
sub
mov
cli
inc
insl
loope
push
add
shlb
pop
into
inc
mov
push
xlat
push
add
adc
mov
adc
fcmovnb
pop
lret
gs
push
and
movb
pop
shrl
mov
fstl
jl
stc
adc
das
bound
in
in
je
jno
mov
pop
or
xchg
or
or
sub
or
das
ljmp
xlat
adc
cwtl
shrd
jl
jp
adc
out
rcrl
inc
arpl
call
xchg
add
push
inc
add
pop
je
sti
bound
les
lcall
insl
add
sub
lods
mov
cmpsb
xor
inc
mov
mov
jge
sbb
sahf
gs
pop
aad
jl
mov
add
je
arpl
lret
leave
pop
mov
in
mov
add
lea
test
lds
pushf
mov
sbb
push
dec
sub
mov
sub
scas
pop
divl
xor
gs
xchg
jo
hlt
jae
mov
add
jge
icebp
sti
dec
inc
mov
sub
add
or
jp
lds
mov
inc
movsb
jmp
fsubs
lea
shlb
shlb
xor
lahf
push
imul
inc
hlt
aaa
add
mov
and
sahf
and
cmpsl
inc
jo
sti
pop
lds
cmp
adcl
cli
mov
jp
xchg
jo
push
add
hlt
and
adc
add
lcall
add
push
ss
cmp
enter
aad
sbb
mov
adc
aad
out
mov
and
leave
and
adc
and
cmp
mov
mov
inc
lahf
jb
mov
mov
mov
mov
int
or
test
sub
in
fnstenv
addb
outsb
clc
cld
stos
popa
push
pusha
push
adc
cmp
js
xchg
xchg
adc
jmp
sahf
push
pop
mov
add
mov
fcmovnu
fisttps
pop
subb
add
ret
in
xchg
or
loope
sbb
lds
je
insb
sti
push
rcll
and
inc
mov
xchg
in
stos
jno
jl
pop
aam
repz
into
andl
add
adc
or
aam
xchg
cmp
fwait
lea
inc
loopne
aad
insl
jb
push
dec
jns
cs
icebp
and
popa
or
inc
ret
inc
mov
popf
jge
dec
fnstenv
mov
test
sbb
std
jmp
fwait
shrl
aas
lret
sarb
jbe
inc
shlb
lods
or
repnz
lods
push
testb
das
rcrb
xlat
int
push
les
mov
sub
and
ds
in
sbb
inc
popa
in
icebp
js
xchg
cmc
mov
dec
dec
pop
and
sub
in
fidivrs
pop
mov
bound
push
jg
dec
fwait
jecxz
insb
inc
inc
je
leave
or
in
inc
sub
push
push
aaa
mov
pop
cmp
pop
mov
scas
repnz
push
clc
jb
pop
pop
xor
or
jge
pop
hlt
addb
addb
int3
imul
fisttps
clc
lret
add
pushf
test
cli
dec
push
sbb
mov
inc
sbb
add
in
mov
scas
gs
ret
enter
scas
int
fdivl
mov
xchg
jae
or
in
orl
mov
dec
lods
dec
and
clc
popf
mov
cmc
inc
daa
and
lret
scas
lds
jb
or
push
inc
mov
adc
or
in
loop
sahf
xchg
std
push
inc
xchg
mov
je
enter
outsb
xor
out
jmp
pop
std
or
fisubl
or
push
scas
or
pop
and
adc
daa
adc
xchg
lods
inc
mov
jno
inc
sti
inc
xor
inc
in
aam
jge
mov
dec
stos
mov
cmc
xlat
nop
mov
lahf
out
sub
and
mov
iret
negl
mov
pop
push
ljmp
xor
fsts
or
fisttpll
aad
in
std
xchg
dec
xchg
div
cs
cmp
daa
nop
std
stos
jmp
xchg
int
je
add
push
mov
in
call
insb
notb
into
leave
cmp
mov
das
xchg
and
call
mov
stos
jg
imul
and
adcb
xor
lock
bound
imul
add
pushf
mov
xchg
sub
add
iret
xor
pop
inc
out
inc
in
xor
xchg
or
jp
sub
lahf
inc
add
sbb
and
fimuls
pop
and
out
jmp
pop
in
xchg
xchg
pop
jle
pop
jmp
xchg
inc
aaa
fmull
movsl
cld
fwait
sbb
pop
repz
or
mov
xlat
push
repz
mov
test
loop
pop
repnz
orl
jl
push
test
lods
push
rcll
fs
mov
mov
in
pop
xchg
cmp
cmpsb
imul
dec
push
or
cs
inc
test
push
and
adc
lock
xor
xchg
stos
nop
popa
pusha
cmp
lcall
movsb
xor
dec
sub
cmp
fcoms
aaa
inc
mov
lock
sti
test
popf
adc
pop
inc
sub
sbb
sub
mov
cmpsl
icebp
cmp
xor
imul
mov
or
mov
test
pop
lahf
gs
sbb
bound
jne
testl
push
xchg
xchg
ljmp
push
movsb
sahf
lods
sbb
leave
mov
dec
sahf
stc
adc
stos
push
imul
dec
and
jg
xchg
jae
sahf
or
lods
or
in
xchg
movsl
aaa
cltd
jo
clc
sahf
inc
fadds
jecxz
dec
or
lock
insb
lcall
mov
aam
cmpsb
xor
push
cmp
adc
sub
lcall
sahf
arpl
jg
mov
test
jnp
cmp
fstl
pop
imul
adc
sub
mov
mov
and
dec
dec
pusha
cli
aaa
xchg
xlat
popf
leave
push
add
out
mov
out
icebp
adc
loope
insl
sub
fstpt
sub
push
xor
mov
rcl
cmp
cmp
sti
jnp
nop
cmc
jmp
aaa
je
in
mov
mov
testb
xor
inc
xchg
or
push
fcmovnu
cli
and
lods
clc
lds
jb
and
add
std
aad
fildll
and
sbb
sub
ds
cli
ret
fdivl
xor
ret
mov
loope
cld
dec
mov
orl
mov
insb
inc
stos
je
fwait
pop
xchg
mov
std
xlat
and
in
jns
out
xchg
cmpsl
sub
jle
jnp
mov
lods
sub
jmp
mov
std
pop
or
xchg
pushf
fcmovnu
xorl
lods
pop
adc
cmp
cld
xchg
lcall
jns
rcll
inc
in
push
pop
xor
ja
cmp
cld
cmp
orb
mov
inc
test
xlat
jb
push
filds
sub
js
das
ficoml
jle
stc
inc
shll
das
inc
push
xchg
push
mov
mov
inc
out
xchg
sbb
lret
shl
pop
fsubs
jge
xlat
pop
rclb
mov
xchg
sti
cs
ficomps
dec
cmp
or
xbegin
cli
das
and
jmp
mov
dec
xchg
jbe
insb
aas
movzwl
rsm
gs
push
push
inc
sub
into
imul
mov
aaa
insl
add
cmc
jecxz
or
sbb
cld
xchg
cs
mov
adcb
mov
adcl
ja
jp
mov
inc
inc
imul
fimuls
mov
iret
add
sarb
dec
xor
add
cltd
adc
frstor
insb
popf
les
and
push
repnz
incl
dec
aam
pop
pop
jp
sub
fldt
sti
jp
pop
jne
inc
lods
outsb
and
mov
loop
cmp
xchg
mov
mov
loop
mov
mov
add
dec
fimull
mov
ret
jne
sbb
ficoml
lock
mov
jno
pop
divl
fwait
sbbl
rorl
jae
rcr
es
leave
fisttpl
ret
jns
inc
xlat
push
cmp
xchg
leave
push
ret
mov
pusha
xchg
scas
shl
pusha
or
jecxz
ss
sub
lret
fisttpl
add
push
push
scas
or
cmp
sub
mov
aas
xchg
push
scas
xchg
add
paddsb
xlat
lahf
mov
fsubr
xchg
jns
or
lret
xchg
pop
in
adc
cmp
pop
dec
mov
pop
pop
je
dec
scas
fwait
xor
and
and
add
mov
mov
mov
subl
clc
sub
int
mov
std
add
int3
sub
movsl
in
mov
dec
mov
daa
pop
insb
or
or
sbb
jno
jbe
push
lret
xchg
inc
stos
ja
inc
push
std
dec
mov
mov
xchg
mov
pushf
cmpsb
xor
popf
out
mov
cmp
testl
fs
lds
ds
jle
mov
add
cld
sub
xchg
adc
outsl
mov
or
enter
sahf
inc
jb
xchg
jle
mov
xchg
cs
and
cmc
lock
pop
xchg
clc
inc
mov
push
shll
arpl
outsl
sbb
cmp
ja
aad
cmp
addr16
out
or
adc
jg
test
jmp
cmp
rcl
and
pop
inc
fcoms
sub
jae
or
leave
push
dec
roll
movsl
sbb
and
mov
mov
adc
fs
scas
out
aad
and
loopne
jle
stos
mov
aad
push
inc
mov
icebp
pop
rcll
aam
sub
mov
movsl
mov
or
dec
ja
dec
arpl
pusha
sub
nop
out
mov
push
cltd
push
bnd
ja
mov
inc
daa
push
cld
das
xor
fdivrs
cmp
pop
sub
jnp
insl
enter
aaa
pop
scas
inc
dec
lods
mov
lods
fldenv
jp
das
jecxz
xchg
mov
ror
mov
mov
inc
push
imul
inc
popf
xor
pop
stc
sbb
outsl
sbb
inc
pushf
data16
pop
jge
push
popf
dec
cmp
push
subl
inc
iret
rclb
outsb
aaa
xor
fwait
and
xor
mov
movsb
mov
ja
js
ss
imul
cmp
or
adc
iret
sbb
sub
call
inc
cmp
or
jbe
jnp
mov
gs
mov
xchg
inc
push
andl
push
div
mov
and
cld
mov
push
xchg
jno
push
dec
push
and
repz
push
sub
gs
mov
and
xchg
adc
lock
xorb
jbe
test
adc
gs
icebp
push
cmpsb
inc
out
stos
xor
shrl
jno
jp
xor
mov
mov
stos
adc
xchg
mov
je
pop
jnp
mov
ret
sub
xor
mov
int
pushf
push
push
sub
stos
adc
jo
jns
cltd
lods
jl
aaa
or
call
imul
lods
pop
or
scas
fildll
sbb
pop
xorb
scas
or
clc
pop
cmp
sbbb
pop
sti
jl
and
mov
in
sub
addr16
dec
scas
pushf
loopne
pusha
aad
das
or
pop
dec
sbb
pop
divl
das
hlt
add
xchg
cld
pop
sbb
or
inc
cmpsl
adc
jmp
fs
inc
cmpsl
jecxz
dec
pop
xor
jge
jnp
lea
xchg
lods
cld
xchg
adc
fmul
arpl
filds
fwait
xor
xchg
sbb
jo
mov
xor
push
icebp
push
push
xchg
or
lahf
inc
test
lock
sbb
mov
push
pop
adc
add
pushl
jbe
or
repnz
sbb
bound
addb
cmpsl
push
xor
sbb
mov
pop
push
fnstcw
push
mov
pop
test
lods
ja
xchg
jecxz
rolb
dec
lahf
add
or
or
push
sub
jbe
jmp
sahf
in
imul
pushf
and
test
filds
nop
aas
add
fisubrs
test
or
sbb
mov
jo
faddl
ds
out
cli
lret
jnp
mov
xor
in
scas
lahf
dec
shrb
adc
or
pusha
add
arpl
aad
and
lcall
mov
and
or
cmp
fwait
lock
push
mov
mov
ds
mov
add
jb
fsub
paddusb
bound
iret
jbe
cmp
pop
pop
and
insb
mov
mov
repz
mov
insl
les
sbb
xor
loop
add
roll
leave
punpckhbw
push
jp
mov
test
push
and
addl
in
inc
pop
lods
xchg
insb
mov
enter
pop
ret
push
sbb
pop
adc
ficomps
wbinvd
fsubr
xor
cwtl
inc
sub
push
pop
aam
test
imul
xor
scas
std
mov
mov
in
fsubrs
jl
cmp
mov
test
xchg
addl
mov
jnp
xchg
or
mov
push
add
outsw
cmp
insb
shll
in
jecxz
mov
daa
adc
shrb
dec
adc
jp
int
fsubrl
xor
cmp
leave
dec
out
adc
aas
fwait
add
movsl
inc
mov
out
rolb
cli
mov
insl
push
cmp
inc
ja
fwait
adc
fidivl
rcll
rep
mov
or
jp
sti
xor
mov
or
mov
movsl
dec
orb
outsl
push
movsb
inc
out
jl
xchg
push
xor
mov
xchg
inc
test
scas
mov
mov
cmpsb
test
and
mov
in
inc
add
add
loop
arpl
sub
fldt
ja
in
cli
in
loope
mov
xor
and
outsl
xlat
out
push
pop
push
xchg
inc
in
xchg
out
test
cltd
xchg
dec
mov
daa
addr16
stc
pop
lret
jbe
int3
cs
add
and
sub
addr16
iret
xor
sbb
ret
scas
pusha
pop
pop
das
xor
jb
jnp
icebp
incb
jne
scas
adc
sti
cmp
test
lds
mov
xor
dec
xchg
push
repnz
test
and
cs
inc
outsb
mov
xchg
jo
lret
and
arpl
mov
dec
mov
push
add
add
push
jmp
dec
lea
out
inc
sarb
addb
add
xorb
adc
xchg
dec
out
cmpb
cli
mov
pop
ljmp
push
lods
dec
mov
and
and
out
and
cli
or
idivl
pop
in
jl
push
loope
jmp
push
mov
cmp
popf
jbe
pop
addr16
cs
and
lock
je
jmp
arpl
out
adc
and
js
cld
hlt
stos
mov
mov
cli
mov
push
aas
push
pop
pop
mov
xchg
lds
xchg
fdiv
sbb
xor
dec
das
push
div
stc
jno
mov
lock
sbbl
sti
gs
fdivr
fcmovb
mov
popf
out
test
pop
dec
mov
inc
dec
pop
mov
cmp
push
mov
cmp
add
js
sbb
push
fcmovnu
imul
insl
negb
cli
jmp
add
cmp
pop
jmp
sti
pop
movsl
xchg
push
imul
mov
mov
das
adc
pop
or
pop
loop
sti
stc
fbstp
cld
pop
stos
sahf
push
mov
jbe
in
loope
lret
fstl
in
push
mov
sti
jmp
jno
iret
imul
addr16
mov
and
aad
push
fnstenv
push
lret
dec
jns
mov
sbb
test
mov
in
loopne
xorb
mov
lret
and
adc
repnz
mov
cmp
adc
daa
insb
cmp
nop
shlb
cmp
mov
xor
imul
test
push
cmp
fwait
add
fcomip
mov
arpl
fsts
and
add
xorl
ljmpw
inc
sbb
mov
add
jle
and
sbb
loope
inc
xchg
xor
mov
xchg
inc
inc
lods
out
lea
jg
jns
cmpsl
stc
or
mov
imul
adc
mov
push
cmp
cvtps2pi
leave
xor
in
les
loop
mov
or
arpl
mov
xchg
xchg
jmp
mov
icebp
or
dec
sub
mov
lods
in
mov
push
adc
shl
das
lock
jnp
jo
aam
popl
in
sub
push
nop
loop
and
andl
lcall
and
movsl
inc
inc
outsl
js
cli
inc
mov
and
mov
int
inc
mull
fwait
jge
xchg
nop
sahf
xor
push
sub
decb
lock
fadd
cmpsl
inc
int
jp
mov
fwait
orl
es
cmp
or
mov
movsb
adc
mov
scas
or
inc
sub
icebp
push
fwait
imul
std
sub
aad
adc
pushf
pop
das
lahf
mov
mov
adc
cmc
xchg
cwtl
stos
lea
lods
adc
xchg
add
call
call
test
push
sbb
and
es
or
into
push
dec
mov
aaa
xor
push
ljmp
aas
and
push
aam
out
pushl
pop
pop
rcll
jne
cmovb
clc
lods
adc
scas
and
lock
iret
inc
cmpsl
pop
sub
dec
popa
orl
jge
inc
push
or
inc
fmuls
xchg
sub
cltd
es
cmp
out
mov
ret
addb
nop
push
xchg
xchg
sub
jno
test
in
dec
lret
std
into
shll
int3
mov
in
insl
jb
je
xchg
shl
insl
xchg
xchg
add
and
adc
arpl
in
mov
test
nop
xchg
push
add
push
iret
stos
mov
cmc
outsb
push
pusha
add
testb
lea
bound
mov
mov
subb
imul
mov
add
sub
dec
stos
imul
push
in
pop
push
insb
cli
cmp
mov
pop
inc
in
mov
je
cmpsb
loopne
mov
lretw
xchg
lods
jp
and
pop
sbb
add
insb
mov
dec
and
cmpsl
mov
xor
sbb
mov
sbbb
outsb
mov
and
inc
mov
test
mov
inc
or
push
xchg
mov
cs
jg
popf
jl
in
orl
fistps
mov
dec
or
imulb
push
je
or
sub
cmc
imul
mov
pushf
mov
outsl
sub
int
enter
adc
rcl
mov
sub
sbb
pop
xor
dec
add
sbb
push
cs
adc
sbb
sub
cmpsl
out
add
aas
out
pusha
inc
mov
lea
stos
inc
and
jmp
or
xchg
incb
mov
mov
es
or
out
mov
or
into
cmp
shrb
add
ret
push
loop
scas
aad
ret
xchg
mov
xchg
shll
jns
in
mov
les
out
cmp
je
aas
adc
shlb
mov
dec
std
sbb
cmp
dec
rorb
sbb
lcall
xlat
mov
cs
mov
in
cltd
lcall
jb
adc
addr16
test
mov
mov
adc
adc
cmc
sahf
sub
sbb
orb
jle
dec
pop
out
adc
dec
jp
inc
jge
adc
push
leave
aas
jle
fucomip
xchg
mov
inc
test
aaa
das
cmc
dec
imul
rcll
adc
sbb
cmp
and
mov
cmp
fdivrs
sbb
push
inc
pop
test
cmpsl
or
pop
arpl
in
jo
mov
add
and
jno
mov
inc
dec
test
push
sbb
ret
sbb
jle
mov
test
add
xor
and
popa
mov
or
repz
daa
stc
sbb
adc
dec
mov
push
movups
into
push
adc
or
aaa
mov
dec
jge
and
es
jns
cld
push
cmp
jo
je
mov
out
cmp
mov
jp
jl
shlb
js
mov
lods
int
in
cmp
mov
mov
jmp
test
stos
cmp
mov
mov
push
adcl
daa
ret
adc
js
mov
cmp
loop
std
ficoml
mov
cltd
push
imul
fdivrp
leave
adc
jb
or
jnp
xchg
leave
jns
mov
pop
je
aad
and
inc
jnp
jae
in
and
dec
xor
hlt
mov
fs
cmp
push
mov
xchg
or
fdivl
mov
pop
jle
pop
cmp
push
fldt
sub
pop
in
loop
outsl
movsb
sub
sahf
scas
add
aaa
push
arpl
cmp
shl
scas
sbb
aas
loope
jno
mov
dec
into
and
xchg
leave
pushf
in
mov
jg
inc
sbb
mov
loop
sub
cmpsb
mov
inc
jmp
xchg
cli
push
fdivs
cmp
inc
xchg
mull
lcall
and
sbb
out
mov
outsb
out
add
daa
push
movsb
and
cmpsb
push
jno
rcrl
add
aam
jge
mov
mov
repnz
fidivs
sub
jns
jns
push
or
cltd
js
jnp
stc
adc
push
insl
or
roll
mov
lret
movsb
xchg
int
pop
stc
sbb
stos
xchg
and
jle
sbb
pop
lds
int3
lcall
ret
mov
test
pusha
sub
outsl
sub
inc
pop
mov
jo
outsb
shl
mov
rcrl
mov
mov
clc
scas
push
aad
or
cmpb
jae
arpl
sub
pop
rcr
orl
hlt
mov
out
int
cmp
loope
gs
or
fwait
cmpsl
aaa
lods
aam
data16
sub
mov
popa
adc
xor
fidivl
cmp
pop
or
inc
sbb
mov
mov
aad
cmpsb
dec
das
dec
movsb
mov
and
adc
push
repnz
add
in
and
pop
subb
daa
push
push
adcl
scas
and
pusha
cmp
addr16
sahf
inc
mov
hlt
stos
lds
jo
sub
adc
dec
loopne
jmp
pop
leave
jle
push
mov
pop
repnz
test
fildl
adc
or
jns
leave
gs
or
mov
lcall
mov
push
insl
xchg
add
adc
adc
sbb
and
call
sub
dec
sbb
sub
mov
shlb
mov
adc
mov
xchg
pop
push
pop
imul
cwtl
sub
and
mov
cld
fsubp
jg
loopne
dec
cld
xchg
or
mov
test
imul
mulb
xchg
sarb
sub
outsl
movsl
sbb
mov
outsl
jne
pop
mov
sbb
xor
mov
popf
scas
dec
cs
es
sub
inc
fwait
mov
dec
sahf
in
jb
insl
mov
adc
mov
push
shlb
outsl
jecxz
fiadds
xlat
sar
out
adc
xchg
shll
addl
sbb
cmc
nop
mov
stos
jle
lock
sub
sbb
fiadds
adc
es
xor
sti
nop
sahf
jb
xor
inc
fstpl
loope
mov
jge
nop
inc
mov
loope
push
jg
mov
jne
or
cli
sub
inc
mov
push
arpl
jmp
jecxz
lods
les
cltd
stos
cmp
jae
and
push
test
shll
xchg
inc
sbb
out
xor
test
aas
mov
sbb
je
mov
shl
jbe
into
pop
clc
xchg
mov
sti
xchg
cmp
and
lods
test
es
lods
int3
cmp
int3
ds
inc
push
sti
ss
inc
repz
push
mov
mov
push
dec
mov
or
mov
shrl
push
pop
ljmp
push
push
sub
enter
cs
inc
or
cmpsl
faddl
lods
push
outsl
pusha
mov
xchg
ret
cmpsl
xchg
pop
mov
add
mov
push
sub
inc
xchg
lods
pop
testl
cmpsl
icebp
mov
rcl
pop
cmp
push
iret
pop
fdiv
dec
scas
dec
popa
popa
ss
ret
cmp
repnz
cmpsb
or
shlb
iret
call
call
out
pop
mov
in
lods
push
int
xchg
mov
ds
fwait
ret
mov
xchg
nop
mov
stos
sub
mov
xor
and
inc
ljmp
and
mov
popf
push
fsubl
pusha
cli
add
andl
or
pop
push
hlt
adc
sbb
xlat
enter
dec
add
push
mov
inc
nop
in
out
xchg
inc
jecxz
aad
aad
inc
dec
outsl
jne
add
inc
das
xor
stos
xor
dec
cmp
and
dec
add
insl
dec
inc
or
mov
xchg
pop
bnd
adcb
orb
push
add
mov
and
sub
shr
in
bound
insl
mov
pop
mov
fldt
jbe
std
cmp
push
and
popa
cmp
pop
xor
mov
mov
testl
dec
and
or
mov
sbb
dec
sbb
sahf
add
scas
shll
data16
fisttps
jecxz
jns
lret
add
aad
inc
and
sbb
sub
dec
cmpl
push
jmp
or
or
mov
scas
out
outsl
dec
jmp
push
mov
jp
cli
mov
out
dec
xor
xchg
xchg
xchg
and
sbb
xor
int
xchg
je
xchg
orb
inc
push
repnz
push
lea
push
adc
imul
mov
sub
xchg
ds
arpl
sarb
xchg
push
lret
and
movsb
lret
mov
mov
loop
cmpb
pushf
mov
sbb
test
mov
mov
sbb
sbb
sbb
insl
ljmp
jne
test
int
shl
add
mov
sub
dec
add
xchg
mov
sbb
arpl
inc
push
lods
aaa
or
mov
int3
pop
fisubrs
stos
fld
popf
or
in
pxor
je
test
mov
mov
xor
pop
jnp
mov
xor
out
outsb
shlb
jbe
push
lds
in
xchg
loopne
mov
add
scas
pop
dec
test
sub
mov
hlt
rcrl
pop
mov
xchg
xchg
dec
mov
pop
ss
or
add
push
test
ret
cwtl
fnstenv
or
loopne
mov
es
xor
push
in
fwait
mov
push
mov
test
add
push
sbb
in
lcall
test
push
adc
push
sarb
mov
sbb
pop
into
test
pminub
andb
pop
addl
popf
enter
idivb
mov
mov
mov
ds
leave
jmp
gs
mov
fsubp
dec
pop
mov
jg
mov
cmp
cmp
aad
dec
adc
adc
ret
roll
lds
insb
cmp
xor
in
mov
lahf
cmc
jle
ljmp
rolb
push
mov
inc
mov
aaa
divl
mov
das
into
in
and
xchg
insb
pop
jg
incb
jne
mov
fiaddl
outsb
xchg
loop
movsb
sarb
popa
pop
xchg
lret
cmp
je
pop
push
sbb
clc
or
pop
xchg
lcall
and
je
test
xchg
and
stc
int
es
out
mov
push
mov
mov
jbe
and
stc
add
cmp
and
mov
and
das
mov
in
rorb
sbb
pop
hlt
sub
popa
enter
ljmp
shl
and
and
into
sahf
xor
divb
lret
jno
inc
divb
adc
sub
push
sbb
mov
in
pop
outsb
jge
mov
push
movsb
lea
adc
out
incl
push
mov
lods
je
or
cmp
and
stos
sbb
jle
out
push
add
pop
adc
insb
add
dec
mov
mov
gs
leave
test
stc
test
and
xchg
out
jl
mov
push
sahf
xor
fcmovnu
mov
int3
in
xchg
adc
jb
push
mov
mov
adc
mov
pop
xchg
data16
cltd
call
dec
mov
mov
mov
sub
iret
lods
lahf
xchg
out
jp
test
pop
mov
cmc
adc
mov
push
push
jae
repnz
or
cs
jbe
mov
in
pop
int
neg
mov
add
shlb
or
push
mov
out
add
or
outsb
test
out
xchg
dec
insl
xchg
xor
insb
insl
incb
mov
in
fstpl
dec
insl
push
not
repnz
popa
mov
outsb
int
xchg
int
add
inc
push
push
loop
fcomps
push
rorl
iret
fmull
xlat
and
lods
stos
aam
or
mov
pusha
dec
scas
hlt
and
testl
pop
or
and
xlat
mov
mov
mov
mov
idivl
out
add
xlat
dec
inc
mov
in
sbb
data16
icebp
jae
in
loope
mov
push
ror
sub
mov
jl,pn
lods
push
mov
cmp
adc
insb
adc
shrb
in
mov
xor
mov
pusha
mov
jns
mov
test
or
mov
mov
out
sbb
pop
push
clc
daa
sti
push
imul
and
stos
xor
jmp
sbb
xchg
lahf
in
dec
orb
test
mov
or
and
ficompl
push
inc
ljmp
insb
rcrl
lret
cmpsb
pop
pop
xlat
mov
int3
and
push
fidivrl
imul
xchg
mov
and
xor
lcall
inc
pop
into
test
mov
xlat
mov
addl
pop
jns
mov
jmp
cmp
mov
popa
adc
insb
pop
mov
js
jae
repz
mov
and
daa
mov
jns
clc
sbb
and
divb
popa
mov
jecxz
jecxz
dec
unpckhps
sub
jle
fwait
fs
inc
jb
lret
fdivrs
push
xorb
mov
mov
test
mov
test
hlt
sarb
jns
xor
sub
mov
jp
or
test
mov
sbb
adcb
sarb
subl
stos
subb
mov
imul
cmp
sarl
scas
xor
stos
xchg
je
cmpsl
sahf
jg
test
popf
js
inc
mov
ja
lock
icebp
in
repz
adc
adc
mov
mov
pop
push
inc
mov
enter
xchg
daa
jecxz
test
xorb
repz
jb
ret
mov
shll
xchg
or
cmp
stos
jb
push
hlt
add
xchg
dec
inc
in
push
stos
xor
sbb
cmp
dec
test
hlt
sub
in
xchg
je
int3
dec
test
jmp
iret
pop
cli
inc
adc
stos
std
push
add
inc
int
add
xchg
leave
mov
gs
inc
roll
dec
pusha
mov
cmp
cmp
lock
outsl
jge
xor
jge
cld
outsb
mov
dec
cs
aas
and
cmp
enter
pop
mov
test
shll
jb
popf
mov
inc
push
bound
add
fisubrs
and
cmpsb
addl
nop
je
test
and
fnstcw
repz
xchg
xchg
lcall
int3
mov
andb
add
cmp
sub
imul
mov
sub
cpuid
adc
mov
rclb
pop
inc
lds
pop
push
mov
mov
in
mov
jbe
fists
sbb
loope
inc
aaa
into
or
lahf
cld
popa
inc
clc
mov
or
push
cmpsb
sub
add
xor
and
xchg
mov
jbe
jp
es
std
pop
add
mov
jmp
fwait
add
sub
repnz
ret
jbe
and
adc
mov
shlb
out
mov
mov
cmp
push
lods
xlat
jl
sti
or
fdivs
int3
cmp
adc
push
inc
mov
and
in
ret
movsl
sub
js
add
out
mov
xchg
cmp
or
mov
pushf
push
push
xor
repz
cmp
mov
lods
xacquire
push
and
xchg
xchg
sbb
push
jne
test
adc
xchg
mov
nop
int
or
in
jno
call
xorb
loope
rorl
je
movsl
sar
test
mov
mov
fisubrl
in
push
push
mov
js
int
xchg
adc
sub
fmuls
lods
mov
or
ja
sahf
mov
xchg
push
push
out
dec
outsb
mov
inc
add
cmpsl
mov
aaa
inc
jl
push
fdivr
adc
cmp
hlt
out
sub
in
and
test
test
and
or
mov
xchg
mov
clc
mov
mov
fstpt
pop
lock
leave
push
sahf
enter
lock
fisttpll
fcoms
adc
jnp
cmc
ficoml
fcoml
lcall
or
or
push
out
mov
faddl
int
pop
mov
jb
insb
jl
aaa
xchg
xchg
sub
push
push
and
nop
dec
stos
jnp
fstl
cs
xchg
mov
add
jne
shll
xchg
jne
push
sbb
cmp
or
ja
jle
and
mov
lea
jle
pop
mov
out
or
loopne
or
sti
adc
ja
add
test
loopne
ficompl
insb
sub
add
xchg
dec
add
jns
mov
nop
add
mov
stos
iret
setno
xorl
into
push
cmpsb
inc
incl
pop
leave
nop
mov
gs
scas
or
sub
mov
shll
ficoms
cmp
jo
jo
test
push
call
fidivrs
adc
ja
inc
xlat
imul
out
das
pop
icebp
and
mov
mov
test
jno
xor
cmc
movsl
dec
push
adc
sti
jns
or
shrl
aad
add
pshufw
scas
and
adc
or
sbb
cmpsl
mov
outsl
cmc
mov
and
add
sub
push
sbb
mov
sub
adc
pop
cmpl
mov
or
jge
inc
and
add
mov
mov
idivb
fwait
or
push
pop
loop
pop
pop
sub
add
mov
xor
divl
and
and
cmpsb
pop
cwtl
lahf
roll
add
xchg
dec
loopne
sbb
xor
int
scas
pushf
inc
cmp
sub
orb
outsb
or
sub
mov
xchg
mov
stos
lcall
cmp
test
push
pop
push
cmp
mov
pop
pop
adc
fwait
xorl
mov
not
pop
stos
mov
jne
bound
sub
mov
mov
repnz
pop
or
add
fdivrs
inc
sbb
mov
loop
leave
imul
sub
and
rcll
push
std
fcmovbe
push
ret
pop
insb
jno
jo
xor
push
or
mov
push
mov
cmc
jle
pop
roll
rcrl
jge
jnp
mov
fdivl
add
and
pop
or
sub
sbb
iret
mov
shlb
sub
dec
mov
xlat
lods
or
and
mov
pop
leave
jmp
int3
cmp
xor
xchg
out
shll
mov
cmp
jo
adc
icebp
dec
adcb
mov
ja
jae
sbb
cli
addr16
or
ja
mov
xor
add
add
call
enter
add
xchg
es
mov
dec
push
lods
outsb
pop
stos
test
stc
stos
pushf
jle
push
mov
pop
jecxz
ja
icebp
inc
adc
mov
add
pop
gs
outsb
cmp
mov
and
cmp
push
pop
les
jne
sbb
push
add
sub
push
xor
int
jbe
mov
mov
push
push
outsl
addb
sub
in
repnz
pop
aas
and
xchg
cmp
and
aad
and
insl
pushf
xchg
pop
lea
or
inc
and
idivb
mov
or
icebp
ljmp
test
imul
cmp
sub
jge
inc
jge
pop
adc
stos
mov
les
ret
mov
call
push
les
xor
sahf
aad
jecxz
lods
cli
and
hlt
xor
les
push
movsl
sbbb
fistpll
dec
sbb
stc
xchg
cltd
mov
jae
inc
popa
int3
testb
add
jge
mov
fldcw
xchg
ljmp
inc
sbb
enter
add
stos
iret
push
mov
cmp
push
fnstsw
inc
aas
cmp
sub
or
add
jbe
testb
aad
icebp
fidivrs
xor
ret
addr16
inc
icebp
pop
lods
insb
out
adc
dec
sti
sub
mov
dec
mov
mov
cmp
ja
dec
arpl
les
cmp
shl
int3
stc
xbegin
mov
lahf
push
and
add
inc
loop
imul
inc
inc
lret
push
pushf
out
pop
adc
cmpl
bound
jg
mov
addl
xchg
jbe
mov
lea
test
or
in
and
aas
jns
das
add
mov
xchg
jecxz
xchg
mov
sti
cmpsb
jno
add
fisttpl
or
cmp
scas
cmp
jno
add
cltd
test
push
adc
push
jg
ja
inc
mov
dec
sub
xchg
imul
mov
pusha
cmp
mov
leave
pop
mov
out
in
dec
sub
ss
fwait
addr16
xchg
add
pop
stos
cmc
mov
mov
add
or
ja
lock
aam
add
lods
push
add
add
jle
lods
cmp
imul
js
push
aam
dec
push
and
mov
pop
lods
fs
inc
test
dec
pop
mov
iret
pop
imul
adc
inc
add
adc
pop
xchg
jne
sahf
lret
cmc
xor
out
cmc
out
push
adc
adc
pop
jle
pop
fidivl
ret
stc
adc
fwait
mov
outsl
clc
in
rcl
sbb
packuswb
xchg
cmp
jnp
aad
sub
and
aam
inc
cmpsl
mov
ljmp
mov
dec
pushf
popa
mov
adc
jno
inc
pop
scas
mov
cmp
xchg
rcrl
test
out
pushf
fwait
ret
xor
inc
push
ja
add
ret
pop
push
pop
pushf
dec
mov
pushf
cmc
sub
fst
lret
fildl
subl
xor
shr
jne
sbb
jle
pop
sahf
sub
jmp
cmp
mov
mov
mov
cmp
addr16
push
cmp
inc
mov
cmp
cmp
jecxz
push
adc
je
notl
cmpsl
decb
jmp
sbb
adc
xor
add
lcall
test
sub
out
outsb
inc
je
mov
stos
dec
out
sub
sub
dec
add
or
clc
clc
and
cs
insb
arpl
loope
sub
push
push
in
mov
xor
inc
adc
movsl
out
mov
inc
movsb
lahf
fmuls
xor
pop
xor
les
push
xor
cmp
mov
inc
xchg
shll
mov
mov
loopne
cmpsb
inc
inc
stos
sbb
aam
pop
ret
cmp
mov
in
fnstenv
outsl
pop
cli
xchg
rol
adcb
testb
push
lcall
jg
mov
inc
rclb
fnsetpm(287
fstl
and
into
imul
push
lods
lods
and
xchg
orl
sub
ret
and
loop
jl
test
std
mov
jne
fs
or
xchg
pop
loop
mov
stos
andl
pop
loop
imul
add
push
sub
or
cld
lods
cmpsb
cmc
icebp
popf
into
and
push
mov
xor
hlt
popa
inc
push
xor
sbb
inc
mov
pop
xchg
mov
mov
std
add
pop
adc
aas
mov
jmp
mov
ja
jmp
jae
lock
dec
mov
in
lea
and
mov
push
lock
jg
xor
stos
stos
dec
adc
mov
shl
mov
dec
ficompl
pop
ret
out
xchg
or
movsl
pop
in
jge
imul
sbb
jae
xor
ret
pop
push
sub
xor
mov
jno
jge
jb
fstl
repnz
int
jno
insb
push
mov
mov
jl
dec
icebp
ret
pusha
pushf
call
hlt
sbb
inc
xchg
adc
dec
mov
nop
sbbb
gs
jne
pushf
pop
sub
jne
cli
mov
ret
inc
imul
das
push
add
or
cmp
mov
sarl
add
push
outsl
fwait
mov
test
mov
imul
sbb
lret
nop
xchg
shlb
js
addl
inc
or
clc
adc
popf
xor
ficoms
fldenv
jl
sbb
test
add
xor
icebp
hlt
xchg
or
push
das
addl
jmp
imul
pop
mov
pop
mov
aad
add
imul
xor
mov
sbb
pcmpgtw
and
inc
cmp
fdivrl
jo
dec
popa
xor
inc
and
ret
mov
xchg
clc
push
shlb
cltd
jmp
lods
rclb
sahf
shl
xor
inc
ret
push
dec
sub
cmp
les
ret
andl
mov
out
xlat
mov
push
jmp
mov
dec
hlt
mov
xchg
dec
push
jnp
jmp
clc
stos
fmul
insb
push
and
je
pop
inc
adc
bound
das
pop
lret
jno
dec
mov
xor
sub
xchg
lock
sbb
jbe
mov
cltd
xchg
push
sbb
lds
test
lods
sub
pushf
pop
inc
sar
push
xor
pop
js
add
cld
scas
sub
nop
mov
cmp
mov
xor
push
mov
aas
shll
add
mov
into
sarb
sbb
or
aaa
subl
loop
rol
loopne
lds
mov
sbb
and
out
fs
push
imull
xor
mov
xor
mov
inc
inc
jno
xchg
push
mov
dec
out
lock
sub
shll
mov
das
inc
loope
or
and
insl
xor
jp
or
jecxz
fisubrs
or
das
push
rcrl
in
es
mov
xchg
inc
popf
fmuls
push
sub
lock
and
add
jmp
xchg
add
lods
stos
push
cmp
xchg
negb
jecxz
int3
jb
add
xor
mov
dec
in
icebp
add
inc
cmp
cwtl
sub
data16
and
xor
jge
or
xor
xchg
inc
xor
cwtl
xor
fs
xchg
push
je
jb
xchg
jmp
jl
sbb
mov
fcmovu
fiadds
loopne
rcll
rorl
mov
ret
fistpll
xor
xchg
fildll
push
ror
adc
lahf
cltd
sbb
mov
cmp
lods
dec
out
sahf
cmp
loop
fisubrl
xor
imul
pop
imul
out
iret
sub
push
push
mov
cmpsl
aad
jno
sbb
mov
jne
mov
enter
jmp
orl
pop
out
enter
cwtl
movzwl
mov
mov
clc
add
repnz
mull
std
or
sbb
dec
cmp
push
add
insl
fisubs
decl
push
ds
rorl
or
pop
imul
sbb
lcall
dec
daa
movsl
sub
mov
cltd
mov
popa
in
dec
test
movsl
hlt
jmp
lods
leave
ret
jmp
and
fisubl
pop
cmpsl
fildll
lods
cmp
xor
sub
dec
inc
or
fwait
add
std
cmp
out
jg
out
dec
mov
mov
jb
mov
cmp
add
test
and
rcr
rclb
lock
es
or
je
inc
lret
pusha
xorl
sub
mov
sbb
dec
push
cmp
mov
sbb
or
xor
sub
sub
aad
pop
in
scas
insb
adc
subl
mov
mov
add
insb
aad
mov
cmp
sti
pop
clc
cltd
test
clc
movsb
inc
hlt
cmp
lock
repz
mov
xchg
cmc
cmp
cs
int3
je
jp
pop
ss
les
dec
iret
mov
mov
movsb
stc
scas
add
aad
sub
and
cwtl
sbb
cli
ret
daa
mov
loope
jecxz
cld
lods
and
and
mov
frstor
mov
or
push
adc
fcmovne
sarl
or
aad
outsb
adc
ficomps
test
sti
pusha
and
cwtl
adc
stos
fnop
mov
outsb
rcll
add
stos
mov
mov
adc
inc
sub
inc
add
adc
mov
push
cld
cwtl
xor
cld
jnp
das
out
fildll
mov
and
sbb
push
fwait
xchg
out
iret
mov
loop
inc
push
or
and
adc
loop
stos
icebp
jnp
add
mov
or
push
push
aam
jp
mul
inc
jg
jno
or
out
jl
gs
repz
aam
adc
push
cmc
ret
shll
push
aas
mov
xor
push
pop
bound
fmull
and
loopne
fimuls
sbb
rcpps
les
insl
adc
jecxz
scas
fwait
int3
fwait
orl
mov
sbb
dec
add
ds
fimull
orl
hlt
adc
mov
push
cmp
mov
aas
and
pop
pop
and
loop
xchg
dec
cmp
fildl
mov
add
aaa
xorl
mov
inc
mov
push
sub
xchg
pop
pop
mov
mov
sub
pop
adc
ret
movsl
dec
push
arpl
sub
add
ja
imul
loope
xchg
adc
cmp
mov
pop
cmp
outsl
xlat
xchg
mov
jg
pop
sbbb
pop
movsl
xchg
cs
jle
add
test
inc
or
push
ljmp
in
jns
push
add
and
or
pop
addr16
decb
dec
nop
cmpsl
xor
inc
or
dec
insl
shll
hlt
sahf
cmp
lds
dec
sahf
mov
dec
ds
xchg
lea
clc
jmp
and
cmpsb
cmp
push
mul
push
mov
cwtl
outsl
fsubrl
out
les
je
xchg
adc
cmpsl
inc
js
push
ja
cli
xchg
pop
inc
movsb
push
xchg
scas
clc
dec
jg
cld
rorb
mov
nop
out
add
and
pop
and
mov
mov
inc
hlt
mov
jno
bound
pop
in
push
in
cmp
xor
dec
mov
xor
inc
mov
jae
lret
mov
stos
scas
push
or
into
lods
gs
ret
fcompl
ljmp
cmp
pop
movsb
loop
mov
xchg
xlat
or
lea
sub
js
and
cmpsl
lock
mov
mov
fistl
popf
jmp
xchg
mov
orps
mov
dec
cld
xchg
in
lret
cmc
cmp
and
movsl
jg
and
jmp
adc
xor
lret
mov
xor
data16
push
flds
pop
popa
sbb
sub
dec
mov
sbb
arpl
jge
jecxz
cmp
scas
loop
jbe
cmpsb
outsb
popf
xchg
lock
cmp
std
xchg
movsb
ror
pop
jmp
mov
and
sub
mov
psrlw
and
repz
push
scas
insb
ds
jae
xor
dec
jbe
negl
xchg
lods
aaa
sbb
hlt
call
mov
mov
cmpsb
sbb
inc
sub
sub
mov
sub
cmp
cmp
add
mov
fwait
mov
pop
std
mov
notl
jmp
dec
loopne
gs
sbb
movsl
cmpsl
push
cmp
and
jg
daa
mov
clc
or
or
push
addr16
jecxz
in
js
xor
or
inc
lret
mov
dec
outsl
lea
fnsave
test
icebp
int
jecxz
popa
sub
sub
cs
out
adc
inc
push
add
incl
sub
inc
inc
adc
test
lcall
xor
cmp
test
mov
pop
cmc
mov
pop
add
insl
orl
test
imul
jg
push
dec
mov
dec
xchg
xchg
push
push
mull
inc
in
mov
test
sbb
push
shlb
hlt
xchg
mov
aam
sub
xlat
adc
push
mov
out
adc
es
enter
and
add
dec
dec
xchg
push
push
pop
xor
mov
or
mov
outsb
mov
jge
add
sbb
inc
mov
or
sti
out
aas
mov
addr16
je
add
xchg
inc
imull
push
lcall
es
jle
test
or
xor
xor
push
inc
shrd
orb
xor
sbb
aas
test
sub
cmpb
and
leave
add
push
or
mov
shlb
or
xchg
and
shrl
or
push
andl
sub
aas
out
scas
cwtl
inc
gs
divb
shlb
xor
lods
or
lods
pop
lcall
xchg
push
add
cmc
rcrl
add
dec
div
aas
aad
sbb
inc
pusha
mov
add
push
or
clc
sub
push
or
cs
pop
jmp
in
mov
mov
add
rcrl
push
loop
sbb
and
xor
pop
push
mov
sbb
mov
test
sbb
dec
repz
mov
mov
dec
cmp
xlat
das
xlat
inc
in
mov
std
stc
push
or
in
push
push
sub
jo
xchg
mov
cmc
out
inc
inc
dec
dec
push
jecxz
hlt
push
call
sbb
pop
xchg
sqrtps
repnz
mov
inc
jae
pop
bound
cli
ja
imul
cli
xor
mov
in
rolb
aad
jle
dec
mov
push
xchg
mov
pop
jb
add
mov
fcompl
inc
dec
ja
jbe
aam
push
insb
ljmp
mov
rorb
dec
aaa
pop
std
xor
ret
or
mov
xor
sbb
aam
js
sub
gs
sbb
jmp
mov
inc
mov
js
adc
push
iret
lods
das
outsl
ljmp
test
shll
popf
push
push
inc
adc
push
cltd
sbb
jmp
cwtl
imul
imul
imul
and
mov
sti
mov
push
xor
cld
adc
rcrl
call
and
insl
push
xchg
je
inc
xorb
xor
out
inc
mov
sbb
ss
stc
jbe
xchg
xor
test
imul
xor
mov
je
call
ljmp
push
stos
adc
mov
in
push
add
outsb
lret
aaa
adc
cmp
imul
jmp
jge
out
mov
push
pop
wbinvd
rol
mov
xlat
sbb
add
mov
arpl
cmp
pop
jl
cli
mov
push
jnp
ja
ds
inc
pop
lods
test
inc
popa
xor
imul
inc
dec
es
aaa
xchg
rcr
ss
cmp
fnstenv
jmp
shrl
xchg
icebp
pop
lret
aas
mov
adcl
lahf
pcmpeqb
sub
leave
mov
int3
stc
or
dec
mov
pop
mov
fs
jae
test
mov
cmp
in
pop
aam
or
sbb
add
in
adc
jge
imul
add
stos
pop
xchg
into
inc
pop
push
push
ret
loope
fwait
push
fidivrl
loopne
scas
add
ds
fldl
xchg
xchg
dec
mov
in
insb
or
bound
mov
movsl
sbb
mov
jg
xchg
xchg
jmp
mov
fs
out
xor
add
pop
inc
insl
adc
mov
je
push
mov
enter
test
jnp
repz
cmpsb
dec
outsb
xchg
mov
sbbb
mov
cld
sbb
dec
inc
dec
jl
imulb
pushf
imulb
movsb
push
fldenv
pushf
mov
rorl
hlt
cmp
test
pop
ret
push
mov
dec
stc
aam
aam
cmpb
out
fildl
sub
jp
cmp
sbb
cmp
ret
dec
sub
pop
pop
cmpsl
std
mov
ret
rcr
test
jmp
cmp
pop
int
jno
adc
movsl
loop
or
pop
inc
cmp
insb
bound
add
stos
mov
lock
xor
sti
mov
jne
cmp
add
jl
outsb
or
mov
mov
pop
stc
jg
test
js
jmp
xchg
push
mov
mov
jne
mov
mov
cmc
dec
or
ror
jp
sbb
and
test
mov
pop
sub
and
mov
mov
out
outsl
rorl
mov
insb
xchg
pop
out
xchg
stc
cwtl
or
sbb
hlt
ds
insl
popl
dec
mov
pop
cmp
pop
xlat
leave
inc
pop
mov
ss
out
mov
movl
movsb
mov
or
fs
sarb
lret
push
enter
mov
adc
es
xchg
cmp
push
popa
push
inc
xchg
and
push
or
jno
and
xchg
inc
fwait
imul
lcall
mov
cmpsl
pop
lahf
push
or
mov
fiaddl
js
aaa
dec
in
pop
cwtl
lods
ret
mov
mov
icebp
cmpb
jmp
pop
lods
inc
mov
add
and
arpl
cmc
sub
sbb
mov
push
cmp
or
sub
jp
cmp
adc
jae
cld
sarb
lahf
adcl
shrl
das
into
fcoms
addr16
mov
and
dec
stc
xor
sub
call
loope
xchg
or
mov
mov
cmpsb
dec
dec
xor
test
mov
dec
jl
jb
sahf
cmpsb
dec
inc
push
cmp
cmp
xchg
scas
jecxz
push
sbb
dec
jmp
mov
iret
stos
cld
xchg
test
ret
aad
bound
xlat
addr16
xchg
adc
les
ja
and
idiv
testb
rcl
mov
and
mov
outsb
addr16
xor
adc
out
push
and
add
les
and
je
mov
add
jl
flds
aam
scas
dec
ret
pop
mov
xchg
addb
push
or
std
jge
int3
jb
out
sbb
shrb
fs
sub
cmp
sarb
rcrb
or
in
lods
mov
imul
push
and
insb
jg
pop
pop
mov
outsl
sbb
adc
and
ret
stos
idiv
mov
pop
sub
inc
out
int3
xchg
cmpsl
ss
in
ficoms
repnz
mov
in
insb
xchg
andl
lcall
mov
jne
lret
mov
push
and
push
adc
lock
add
into
fnstsw
imul
push
and
xchg
and
push
pop
push
jno
test
push
int3
mov
int3
sbb
clc
stos
in
mov
sbb
cmp
mov
and
repnz
sub
mov
js
jecxz
xchg
sar
adc
fimuls
shr
mov
lcall
pop
push
push
shll
mov
jecxz
adc
lea
data16
incb
scas
xor
insb
mov
lcall
dec
inc
call
movsl
add
insb
cmp
movsb
sbb
jb
mov
loop
sub
add
cmp
inc
adc
imul
sub
scas
pop
mov
push
rcl
repz
and
lret
jns
sbb
lret
dec
iret
lret
divps
in
enter
call
xor
jecxz
or
scas
movsl
sbb
jno
jno,pn
dec
mov
adc
lods
mov
nop
push
lcall
mov
dec
in
cmc
pop
mov
dec
mov
rorl
inc
dec
movsb
inc
xor
cmp
stos
cld
out
mov
pop
cwtl
bound
fmull
sbb
rcrl
dec
mov
add
push
mov
les
ljmp
clc
mov
jge
loope
mov
loop
dec
xor
cmpb
fs
fsub
xchg
adc
mov
insl
fisubrl
lahf
mov
insb
loopne
adc
mov
mov
pop
sub
loope
dec
xchg
enter
lea
sub
mov
push
add
push
icebp
jae
leave
ja
inc
sub
test
adc
lods
mov
sub
push
std
sub
test
fcmovne
adc
jne
xchg
fwait
pop
ret
xchg
loope
roll
lods
xor
repz
testl
lcall
or
inc
repnz
rol
inc
cmp
mov
jne
add
push
nop
inc
or
out
mov
sti
xchg
mov
mov
and
sahf
inc
push
lret
sbb
stc
adc
sub
mov
dec
pusha
jmp
pushf
pop
add
nop
adc
inc
add
movsb
sub
jg
int3
clc
dec
mov
fmull
mov
mov
repnz
icebp
sbb
or
xor
dec
sbb
pushf
mov
dec
pop
jbe
ljmp
xchg
fwait
fs
adc
hlt
sbb
inc
xor
sub
mov
lcall
sbb
mov
pop
ret
cmp
aam
push
pusha
mov
pop
insl
adc
movsl
shr
push
movsl
mov
mov
fimuls
aam
and
testb
lcall
push
fwait
sub
shr
adc
rolb
sub
outsl
push
push
inc
push
test
mov
std
loope
xchg
add
xor
fcomi
cmp
mov
imul
mov
icebp
xor
out
sbb
mov
xchg
push
push
scas
mov
int
xchg
aam
lock
test
mov
xchg
xchg
out
imul
pushf
xor
shlb
push
lock
not
push
jns
push
xor
out
xchg
repz
push
mov
inc
aad
adc
in
dec
bound
fsub
in
xor
and
clc
or
sub
sbb
xor
mov
in
movsl
xchg
notl
cmpsl
xchg
in
addl
icebp
pop
mov
lods
add
or
add
popa
hlt
in
popa
enter
jmp
inc
lahf
sbb
inc
movsl
lahf
outsb
loop
jl
mov
fisubl
add
ja
sbb
mov
jo
repz
sub
jno
popf
cltd
xchg
in
cld
and
lods
movsl
dec
stos
rcrl
loop
test
aam
leave
inc
arpl
rcrb
or
and
into
test
push
push
lds
ds
fucom
insb
xchg
and
jecxz
adc
mov
mov
shl
xchg
jno
cmp
cmpl
mov
sub
fisubs
sub
push
enter
rcr
xor
or
jge
dec
in
adc
loop
lock
inc
or
mov
or
cmp
lret
pop
shrb
xchg
idivl
movsl
push
or
negl
sub
daa
mov
incb
pop
jne
jb
mov
dec
mov
aam
pop
mov
int3
inc
push
push
xchg
pop
faddp
add
pop
lods
mov
stos
sbb
int
inc
sti
in
das
cmp
inc
lock
fstp
and
stos
dec
fsubr
leave
jo
sbb
push
cmpb
add
jo
xchg
pop
incb
add
fstl
shl
shrl
add
fcomip
gs
rclb
push
addr16
mov
mov
arpl
pop
add
movsl
dec
push
xchg
jno
sahf
dec
xchg
sbb
cmp
js
mov
sbb
jl
movsb
enter
in
divb
iret
mov
fsubl
jnp
and
and
mov
out
and
daa
aam
xchg
pop
call
push
mov
or
adc
mov
mov
pusha
mov
in
lcall
sbb
rcl
cwtl
or
repnz
dec
push
test
insb
insl
clc
push
in
jo
xchg
mov
xchg
mov
aaa
ficoml
sbb
jecxz
jne
push
push
xchg
pop
in
mov
pop
repz
add
dec
xchg
out
jo
add
orl
mov
xchg
ja
or
and
cli
inc
stos
dec
push
pushf
inc
push
add
lods
imul
mov
or
pop
daa
inc
jmp
and
cmp
push
mov
icebp
arpl
xchg
push
dec
ds
sbb
aam
test
add
fimuls
rclb
cs
mov
sub
fdivrp
insb
adc
jle
das
fisttpll
insl
add
add
mov
sbb
in
pop
ret
and
cmpsb
xchg
test
add
jne
cmp
int3
pop
test
scas
xor
daa
mov
scas
je
lods
xor
cmp
jns
rolb
push
jns
sub
ljmp
out
xor
leave
jmp
inc
lods
int3
rorl
aam
je
inc
lahf
push
js
cmpsb
leave
dec
mov
mov
pmovmskb
mov
fcompl
movsl
jmp
jg
adc
clc
adc
mov
sbb
jb
shr
and
push
sub
lds
xchg
out
mulb
push
pushf
insl
test
aad
inc
rolb
nop
aam
adc
dec
icebp
cmp
in
hlt
jle
aad
push
inc
daa
rcl
rcl
je
in
ret
xchg
cmp
repz
add
clc
ficompl
push
and
dec
mov
fidivl
mov
push
mov
cwtl
andb
bswap
pop
mov
push
mov
andb
lods
xor
jnp
cmp
push
mov
xchg
les
xlat
xchg
ss
and
sbb
xor
mov
and
sbb
test
push
push
push
and
js
dec
in
in
pause
xchg
xchg
lcall
out
inc
movsb
mov
xchg
in
sbb
test
scas
mov
cmpsb
mov
xchg
mov
cmpsl
and
pop
pop
loope
sub
mov
inc
dec
repz
lock
mov
mov
add
lock
bound
pop
mov
pop
dec
sbb
neg
mov
push
adc
jae
ror
xchg
popa
mov
push
jle
fiadds
dec
andl
out
push
stos
add
cltd
xor
cmc
pop
or
pop
mov
xor
sub
nop
mov
rcrb
in
arpl
cs
mov
xchg
shr
insb
or
fbstp
shlb
ljmp
xchg
ja
mov
cmpsl
stos
mov
jmp
andl
aaa
cmp
call
add
ds
scas
stos
ja
cmp
jle
andb
cmpb
adc
ficoml
mov
fs
pop
mov
out
daa
dec
lods
inc
scas
inc
mul
mov
stc
pushf
mov
jns
mov
adc
lret
pop
jns
pop
outsb
das
and
fdivrl
inc
enter
push
lret
cltd
imul
or
test
js
lret
dec
shlb
jmp
out
sbb
add
mov
pop
jle
or
cwtl
mov
push
lret
out
push
mov
push
test
jns
leave
add
and
inc
out
add
jecxz
clc
cmp
push
jmp
rorl
scas
xor
xor
mov
jne
cmp
push
push
mov
adc
jno
es
bound
mov
xchg
fisubs
repnz
sub
xlat
pop
mov
movsl
add
and
lock
inc
inc
sbb
cmc
push
gs
dec
imul
adc
popa
loope
push
xchg
push
pusha
lret
test
arpl
mov
push
icebp
xor
lret
add
sarb
cwtl
js
lret
in
xadd
pop
and
jge,pn
adc
push
pop
xchg
xchg
push
cld
lock
pushf
or
push
nop
js
add
jnp
add
or
cltd
fwait
jbe
mov
lret
daa
movsl
fisttpl
xchg
es
stos
cmpl
out
jle
mov
das
pop
push
outsl
push
movsl
jecxz
stos
mov
in
sti
or
lds
fwait
dec
cmp
lcall
mov
lret
mov
daa
or
mov
pop
jae,pt
rcrl
icebp
rcll
icebp
ljmp
cmp
fildll
mov
xchg
xor
lods
mov
jmp
mov
and
add
jmp
repnz
push
call
mov
cltd
xchg
jge
jne
in
in
cmp
in
outsb
hlt
in
or
xchg
or
push
dec
and
cmp
push
mov
sbb
in
testb
test
push
ret
mov
or
xchg
pop
or
sti
mov
cltd
pop
push
pop
jmp
add
dec
add
mov
xchg
fisttpl
cltd
iret
pop
mov
dec
fwait
cmp
pop
mov
inc
dec
fldt
out
iret
lea
dec
add
lcall
mov
xor
sbbl
jns
cwtl
adc
cmp
and
bound
int3
cmp
xor
out
push
sub
test
fwait
add
mov
push
pop
xlat
and
std
fists
mov
cs
ret
adc
insl
xor
xor
dec
add
cmp
push
cwtl
out
mov
xchg
push
xchg
pop
mov
lea
dec
xor
into
shl
pcmpeqw
xchg
scas
out
stos
lret
dec
jecxz
rorb
sti
loope
mov
mov
fisubl
test
jl
aaa
loope
pushf
popf
bound
mov
lret
add
add
cmp
xchg
daa
call
lret
xchg
lods
mov
mov
and
or
hlt
movsb
stos
je
in
sub
jne
std
call
push
sbb
inc
stos
pop
jnp
data16
jg
mov
mov
jecxz
das
sbb
imul
movsl
push
add
mov
dec
xchg
jge
popf
mov
jbe
adc
jmp
mov
adc
jns
imul
dec
leave
lds
xchg
ret
mov
andl
add
push
jecxz
or
mov
mov
ret
insb
or
xchg
stc
rcl
jo
enter
paddd
hlt
shr
mov
cltd
int
jecxz
xor
xlat
mov
and
in
das
imul
repz
out
or
jns
call
in
mov
loop
mov
push
push
ret
adc
sbb
mov
xor
popw
sub
push
or
je
sub
inc
xchg
cmp
outsl
sub
xchg
ds
xlat
vpacksswb
dec
frstpm(287
inc
pop
out
mov
and
pushf
xchg
mov
testb
push
addr16
pusha
xchg
fcom
movsl
lock
imul
fdivp
xchg
movsl
pop
pop
cltd
push
cli
mov
xchg
in
xor
sbb
imul
sub
inc
sbb
jl
test
jnp
adc
sbb
stos
jge
out
aam
xchg
int
arpl
idivl
xchg
enter
inc
mov
pop
arpl
pop
pop
add
push
sbb
or
lahf
mov
pop
add
xchg
jno
pop
lret
cmpsb
decb
shlb
xchg
mov
in
repz
popf
cmp
sub
outsl
jecxz
inc
or
cwtl
jle
or
in
mov
mulb
fsubl
cmp
or
cwtl
popf
and
aad
jae
cmpsb
cmc
or
sar
fstl
jne
inc
cmp
xlat
inc
or
cmpl
xor
add
arpl
out
sub
cld
jl
insl
fs
bound
mov
scas
aaa
ficompl
cmpsl
jge
aaa
sbb
jl
sub
stos
jb
add
xor
fs
sti
push
icebp
sub
inc
mov
push
mov
dec
add
or
and
pop
lret
fadd
cmp
pushf
inc
sbb
xchg
lahf
sub
iret
sub
mov
sbb
in
bound
jo
imulb
adc
jecxz
ljmp
adc
pop
mov
test
mov
or
aad
popf
pop
mov
mov
cmpl
addr16
mov
cmpsl
mov
arpl
lea
shrb
aad
mov
mov
jno
dec
imul
and
lods
cli
jmp
cmc
mov
aam
sti
lret
push
cld
dec
lahf
mov
mov
inc
dec
mov
fstp
push
and
adc
pop
dec
pushf
push
mov
sub
ret
jne
div
mov
push
pop
aas
mov
scas
leave
cmp
pop
cmp
mov
xchg
jae
test
test
inc
pop
cmp
push
pop
ret
adc
xchg
sarl
out
pop
mov
pop
jecxz
sbb
jge
pop
inc
cwtl
les
sbb
test
xchg
iret
adc
sub
sbb
scas
sbb
pop
into
lea
cmp
mov
scas
movsb
out
sub
push
aas
mov
ljmp
movsb
mov
arpl
call
lea
jne
push
testl
inc
sbb
and
call
and
xchg
pop
xchg
adc
or
jns
roll
cltd
xlat
push
bound
mov
in
mov
lods
addb
ret
xor
enter
divb
arpl
jl
rcrb
cs
or
push
push
mov
xchg
dec
inc
stos
inc
hlt
out
mov
push
pop
jl
clc
ret
jbe
sub
lea
addr16
pop
mov
inc
in
xrelease
repnz
mov
push
xor
add
dec
sahf
outsb
jno
test
inc
push
jns
dec
inc
cmp
adc
lahf
loope
stos
push
inc
aas
push
push
roll
adc
rorb
imul
cmp
inc
lods
cltd
test
in
xchg
cmp
and
cmp
ljmp
mov
mov
popa
rcll
xor
aam
fstl
fstpl
dec
inc
inc
xchg
xor
pop
lods
cvtpi2ps
push
mov
mov
mov
add
std
sbb
imul
repnz
call
int
sub
push
and
test
mov
dec
fs
add
lds
test
in
popa
xor
mov
jb
push
cmp
sub
lock
loope
xor
push
lods
cmpl
adc
cmp
sbb
fnstenv
jp
push
sti
pop
pop
inc
and
pop
sub
add
pop
xor
sub
pusha
xor
movsl
and
add
mov
bound
inc
sub
add
jae
movsb
mov
cmp
rcll
cld
jge
dec
add
push
loope
mov
and
adc
fsubl
mov
sbb
ljmp
mov
aad
xchg
stos
aam
sbb
add
shlb
shll
inc
mov
fimuls
push
imul
pop
les
adc
sub
rorl
cwtl
ficomps
sbbl
fiaddl
sbb
sbb
outsb
iret
loope
pop
fimull
test
decl
xor
adc
sub
adc
jae
pop
mov
pop
insl
pop
sbb
inc
imul
adc
in
mov
mov
repz
push
mov
xchg
ret
enter
fnstsw
stc
lods
mov
mov
push
xor
jg
mov
sbb
js
fnsave
insb
sbb
mov
insb
add
pop
ret
cmp
rolb
mov
push
xor
jp
stos
mov
addr16
faddl
sub
jo
out
xor
add
mov
fmull
in
add
mov
pushf
ds
adc
mov
popl
rolb
push
push
loope
add
xor
xor
rcr
fstpl
inc
out
cltd
outsb
shlb
dec
divl
out
jnp
imul
into
push
test
mov
fadds
repnz
aad
mov
adc
fwait
call
jp
xor
sub
insl
push
sbb
cmp
je
notb
add
movntps
popf
adc
mov
mov
jecxz
inc
push
imul
cli
or
setge
shll
rol
call
outsb
xor
jo
ja
scas
mov
test
lods
sbb
mov
cs
mov
sbb
xchg
out
ja
push
frstor
mov
push
sbbl
and
aaa
ljmp
aad
dec
cld
mov
arpl
jge
movsb
lods
cmp
in
or
das
dec
xchg
int3
mov
jb
stos
sub
orb
aad
mov
jnp
or
add
mov
sub
cli
jl
push
dec
lock
inc
bound
jmp
out
lea
bound
mov
shlb
xchg
call
mov
mov
and
pop
icebp
js
in
aad
cmp
lds
jne
jecxz
cmp
fnstenv
adc
cmp
adc
ret
sti
xor
je
js
notb
cwtl
cld
xchg
dec
sub
test
mov
movsb
lds
scas
popa
add
mov
xchg
jl
movsb
or
cmp
jns
scas
sbb
sub
mov
cmp
or
mov
int3
xchg
negb
jge
mov
popa
mov
jge
dec
xor
and
popf
xchg
cmp
and
mov
fsub
rolb
mov
outsl
and
pop
dec
add
stos
fistl
cmp
mov
xchg
adc
or
cwtl
lods
or
mov
push
leave
mov
cwtl
nop
jae
jne
pop
add
adc
out
jno
pop
pusha
stc
cmp
push
add
mov
pop
add
xor
xor
fisubs
adc
shl
xchg
sbb
mov
dec
stos
stos
pop
outsl
ret
lret
bound
xor
mov
xor
fadd
mov
inc
mov
pop
sub
int3
sub
imul
int3
imul
push
lea
adc
mov
mov
movsl
pop
inc
loop
pop
shrl
jecxz
mull
pop
mov
daa
call
insl
xchg
jg
int3
adc
mov
pop
fsubr
xorl
divl
add
lock
cmp
adcb
cs
push
xor
stos
daa
mov
enter
sbb
sub
aam
lods
pop
cmp
mov
scas
xchg
les
add
mov
mov
jns
call
lret
fmull
xchg
pop
hlt
ja
test
ja
sbb
sbbl
jp
lcall
inc
pop
cmp
pop
scas
shlb
stc
adc
popf
and
es
call
enter
push
movsl
cmp
mov
pop
cmp
and
jl
mov
lods
data16
cmp
jp
out
xor
jl
jae
std
cmpsb
pushf
inc
xchg
pop
enter
and
and
xlat
inc
cmp
xchg
jb
repz
pop
jno
sbb
push
cli
inc
pushf
outsl
or
xchg
jns
sbb
sub
pop
insl
pushf
lcall
test
and
jg
cmp
inc
fnsave
fcom
fimuls
push
lahf
lea
add
jb
rorl
jmp
sub
jecxz
mov
jg
jno
add
cmpsb
or
dec
xchg
push
mov
adc
inc
ss
push
cmpsb
inc
mov
sub
lods
sti
aad
into
test
cmp
sub
dec
outsl
xchg
and
das
xor
adc
push
push
lret
test
pop
push
jb
out
inc
fwait
in
push
sub
jmp
out
mov
int
push
or
std
push
mov
inc
cmp
push
jp
out
es
xchg
iret
pop
pop
test
sbb
xor
or
and
setge
mov
and
repz
cmc
int
ds
cwtl
aad
mov
mov
in
add
ret
dec
orb
cli
jge
out
adc
fsubrp
call
mov
jb
inc
stc
sub
lahf
fs
repnz
nop
sbb
loopne
lea
rol
cwtl
mov
subb
div
nop
ds
insb
or
push
xlat
adc
mov
shrb
jp
arpl
daa
cmp
sti
jb
pop
clc
jns
ja
popf
mov
shlb
aas
jmp
push
cmc
inc
and
cld
xchg
lahf
mov
or
mov
xchg
xchg
push
or
sbb
imul
rcll
pop
jge
xorb
pop
lock
and
in
push
lods
mov
jnp
lea
movsl
ret
push
inc
sbb
and
lock
popa
pushf
sbb
sbb
jae
repz
sahf
out
mov
pop
cmpsb
daa
sbb
gs
cs
jb
and
test
add
xchg
cmp
scas
jae
movsb
fisttps
adc
jae
nop
fstl
and
gs
imul
push
cmpsb
rcrb
mov
jo
enter
push
fs
push
imul
push
ja
xlat
push
cmpsb
jbe
and
rolb
push
les
pop
push
sbb
inc
mov
add
test
pop
aad
call
and
aad
test
mov
or
push
pop
pop
adc
xchg
insl
mov
xchg
loopne
orps
in
loopne
sub
sub
imul
xchg
rol
pop
pop
dec
mov
mov
or
lret
out
jbe
jecxz
mov
jno
repnz
or
jl
mov
test
sbb
mov
mov
test
and
adc
cmp
add
mov
mov
jmp
scas
into
ss
add
xor
cmp
daa
or
in
in
and
adc
mov
push
testb
fistps
fwait
jle
pop
xor
jne
or
jmp
loop
push
jns
in
xchg
pop
int
out
inc
enter
sub
mov
mov
push
mov
sahf
aam
hlt
fwait
adc
cli
out
xchg
sarl
ds
push
push
and
movsl
adc
mov
lcall
andl
inc
sbb
repz
xchg
jae
out
repnz
sbb
sbb
test
lods
dec
lods
or
or
in
imul
inc
mov
xchg
lret
incb
sbb
js
xchg
imul
mov
outsb
cmp
mov
lret
out
sbb
stos
cwtl
dec
inc
push
data16
or
stos
test
dec
shl
imul
mov
jnp
stos
pop
daa
inc
addl
ja
decl
out
int
push
mov
dec
jmp
mov
imul
jecxz
cmp
push
mov
xchg
sahf
shrb
mov
push
stc
mov
inc
xchg
mov
mov
loop
mov
and
test
jecxz
fcoml
push
rdmsr
cmpsb
je
fsubl
dec
ljmp
jmp
cmp
sbb
pop
xchg
in
inc
xchg
jle
test
add
incb
arpl
push
dec
xchg
or
fiaddl
pop
imul
imul
push
sbb
sbb
mov
xchg
jg
push
pushf
pop
cmp
cmp
arpl
xor
mov
or
pusha
int3
jle
sbbb
adc
xchg
push
cmpsl
rcrl
jbe
add
rep
inc
imul
in
adc
mov
mov
inc
movsl
ret
adc
sbb
dec
pop
adc
mov
xchg
push
mov
mov
xor
ss
lcall
xchg
enter
adc
popa
dec
jmp
shrl
shl
adc
xor
xor
xor
pusha
and
idivb
pop
or
mov
out
mov
and
out
test
add
ljmp
jnp
insl
dec
dec
lret
sub
add
cmp
push
sbb
push
mov
rclb
je
jae
daa
pop
pop
dec
sbb
cwtl
dec
cmp
daa
sbb
outsl
in
pushf
mov
sbb
cli
or
pop
lahf
movsl
popa
int
fnstsw
jmp
xor
sub
jecxz
repnz
lahf
add
int
mov
adc
adc
jge
mov
and
jmp
incb
shll
push
dec
jne
ss
or
ret
not
rorl
mov
fistps
icebp
inc
pop
repnz
xor
add
xchg
out
cmpsb
dec
test
sub
pop
hlt
lds
jbe
fldenv
jg
test
jmp
jecxz
pop
inc
imul
cli
enter
ja
push
pop
fisubs
sbb
les
inc
mov
sbb
ficomps
ss
stos
push
popf
je
mov
lret
xchg
inc
or
insl
roll
pusha
xchg
or
into
jmp
in
mov
push
xorl
int
js
and
xlat
sub
cmpsl
inc
call
jbe
iret
divl
lods
hlt
mov
repz
das
xchg
fwait
sar
dec
notb
jo
test
add
sub
das
xchg
sub
nop
lahf
sbb
mov
dec
cmp
negb
cld
popa
jb
or
out
xchg
mov
pop
sti
mov
dec
jecxz,pt
ja
loope
mov
lea
out
or
adc
xchg
fwait
dec
in
repnz
daa
ja
dec
mov
dec
icebp
dec
sub
movsl
fsubl
jbe
xor
stc
inc
shlb
lahf
inc
mov
in
sbb
dec
cmc
iret
int
stc
dec
js
rcl
mov
arpl
rcl
sub
jl
fldl
xor
test
mov
imul
sbb
hlt
daa
push
daa
dec
fs
add
scas
data16
mov
jle
ret
inc
sti
mov
mulb
push
out
fsubrs
cltd
fisttps
call
cmp
fwait
pop
mov
fs
lret
xchg
and
rorb
imul
sub
cmpsl
mov
pushf
bound
test
dec
or
into
push
mov
cmp
mov
cmpsb
mov
cmp
adc
sub
lcall
lcall
dec
or
mov
cwtl
xchg
mov
fsubrs
xchg
jmp
jae
adc
loope
nop
pop
icebp
ret
xchg
fldl
mov
jmp
xor
sbb
add
mov
jp
nop
mov
mov
sub
pop
cs
jmp
sub
pusha
addl
iret
cwtl
jle
divl
xchg
cli
cmpsb
inc
or
pop
loope
sarb
mov
dec
imul
lahf
cltd
fstps
icebp
enter
test
in
push
lea
sbbb
les
icebp
adc
aad
pop
ljmp
repz
jmp
in
into
dec
xchg
dec
test
rep
adc
jge
add
insl
leave
sbb
out
dec
loope
mov
popl
pop
outsb
xor
jb
sbb
mov
push
shll
incl
xchg
xorl
frstor
jmp
lea
sbb
dec
nop
inc
sbb
imul
mov
cmpb
test
adc
cmp
jp
push
jge
je
dec
cmp
orl
lret
pop
mov
idivb
xchg
pop
shrb
pop
pop
and
jae
mov
clc
or
out
mov
sbb
ds
test
lea
inc
cwtl
out
adc
mov
jl
jmp
sub
cmpsl
sbb
ficompl
jae,pn
mov
test
xchg
lock
jne
xor
das
fdivrl
jae
sub
cmp
cltd
shrb
dec
lret
call
and
xchg
mov
dec
cmpsl
imul
outsl
mov
lea
adc
notl
push
xchg
fs
fbstp
lcall
push
mov
test
pop
dec
mov
pop
pushf
or
imul
lods
movsb
lahf
mov
out
clc
xor
add
cmp
sub
nop
imul
loopne
in
stos
pop
xor
call
in
mov
outsl
pushf
fisttpl
push
sbbl
mov
stc
rcl
cltd
dec
stos
push
popa
and
mov
shll
add
add
add
sahf
jo
ljmp
inc
mov
inc
cs
out
jecxz
jp
mov
and
ja
int
notb
or
les
into
adc
mov
inc
adc
and
jb
jbe
std
mov
call
xor
hlt
inc
mov
scas
imul
cmp
adcb
push
ficoms
jae
xchg
inc
push
dec
pop
or
bswap
mov
cmp
jmp
jmp
mov
jae
jge
sub
push
jmp
stos
jp
sbb
cmp
insl
in
mov
aas
cmp
or
sbb
icebp
nop
xor
es
insl
adc
pop
cs
ljmp
int
jl
xor
ud2
inc
and
in
lds
cmc
cmp
xchg
xchg
stos
pop
dec
xchg
lods
xchg
pop
je
push
data16
mov
shl
sbb
mov
jnp
shlb
stos
mov
lret
xor
stos
mov
in
adc
ljmp
insb
sub
mov
pcmpgtw
shll
or
xor
mov
into
dec
sub
and
rcrl
mov
cmp
or
pop
xor
sub
subl
scas
aaa
clc
hlt
cmp
mov
clc
lcall
stc
pop
sti
aad
jg
mov
jno
fmuls
sub
mov
jle
mov
iret
clc
cmp
mov
dec
fs
push
adc
cmp
dec
add
aam
sbb
dec
mov
jnp
push
mov
pop
test
adc
jbe
pop
pop
mov
inc
lret
xchg
sub
rcll
pusha
pushf
insb
out
sub
xlat
clc
inc
push
sub
out
cmp
jle
add
xchg
cwtl
fsts
mov
dec
push
movsb
mov
or
or
sbb
inc
popa
sti
cltd
sbb
js
subb
sbb
adc
incl
js
lock
das
sahf
mov
testb
lea
ljmp
cli
icebp
adc
clc
dec
pop
outsb
rcrl
ljmp
mov
mov
inc
or
inc
add
xlat
xchg
lahf
xchg
cwtl
xor
arpl
adc
push
mov
dec
je
mov
push
insl
xor
cmp
push
xchg
xlat
or
test
mov
jl
sahf
scas
enter
sbb
stos
movsl
jle
xor
and
ficoml
loop
adc
or
repz
mov
ds
rcrl
sbb
stos
icebp
and
test
repz
add
out
dec
pop
xor
ret
xor
lods
push
mov
xchg
and
fmul
mov
test
jnp
or
mov
rcrb
adc
push
nop
sbb
test
leave
imul
jno
xchg
cmp
or
xor
jmp
in
pop
lret
xchg
out
dec
inc
xor
aas
neg
xchg
xor
stos
jbe
cld
add
mov
test
clc
pop
push
pop
dec
mov
mov
sub
sbb
dec
incl
sahf
andb
loopne
loope
jo
xor
push
and
mov
in
lock
mov
inc
lods
rcrl
xchg
adc
test
inc
int
cmp
jmp
cmp
xlat
jno
mov
test
sbb
pop
lds
pop
popa
sbb
lret
in
fsubrl
sbb
lahf
add
addb
sub
fnsave
popf
or
leave
xor
loopne
push
lods
in
and
loope
fstpl
add
mov
jmp
cmp
jg
sbb
rclb
xor
mov
shll
or
lea
out
jae
ss
mov
aam
outsl
adc
mov
pop
out
sub
jmp
cmpsl
sbb
sub
pop
das
cmp
shlb
int
shrl
adc
jecxz
daa
cwtl
fistl
inc
mov
and
mov
mov
push
das
mov
inc
sbb
das
xchg
jl
rorl
lret
mov
mov
cmp
into
add
mov
add
repnz
es
push
test
neg
enter
jnp
cmp
inc
pop
sub
inc
adc
data16
xor
or
jb
or
test
mov
shrb
sbb
movsb
roll
int
sub
push
push
shlb
add
cmc
mov
fistl
lods
mov
sbb
repnz
ja
test
mov
lock
jb
pushf
inc
nop
pop
inc
and
lcall
lock
jl
mov
fwait
xor
icebp
adcb
fdivp
cmp
cmp
repz
push
push
rorb
or
pop
out
cwtl
decb
jbe
push
sbb
loopne
lret
insb
and
add
inc
pop
inc
sbb
xchg
push
aam
push
mov
dec
jb
xor
push
inc
scas
mov
in
mov
fistl
bound
xchg
dec
mov
sbb
inc
jg
mov
pop
xlat
cmpsb
fidivs
xchg
les
xor
addw
add
jbe
mov
lods
jbe
in
fildll
inc
into
int
test
xchg
xlat
push
rorb
jns
xchg
and
rclb
jmp
add
aam
mov
call
in
mov
sbb
bound
jno
mov
sti
cltd
mov
leave
mov
push
mov
or
cld
mov
lret
call
mov
arpl
out
mov
push
in
mov
loopne
ret
aam
imul
mov
mov
xchg
int
insb
jmp
mov
sar
pop
fdivrl
dec
je
jne
sbb
push
adc
cmovbe
bnd
dec
outsl
fmul
cmpsb
ret
adc
loope
push
shll
shrb
sbb
add
in
dec
pop
rcr
jmp
stc
rorl
mov
arpl
and
push
popa
pushw
test
or
ret
jl
sti
jp
inc
stos
pop
sbbl
out
mov
pop
popf
mov
stos
cmp
mov
mov
push
inc
and
scas
and
sahf
sub
mov
pop
mov
shrb
arpl
or
or
jo
leave
and
daa
mov
shll
mov
mov
inc
ja
pop
adc
les
add
sub
xor
sub
xchg
mov
stos
movsl
js
aaa
fildl
sub
mov
add
cmp
imul
sub
dec
aad
sbb
loopne
xor
or
dec
call
sbb
fistps
mov
inc
push
mov
pop
mov
inc
mov
xorl
fnstsw
movsb
mov
test
xchg
jge
push
loopne
mov
push
jne
and
mov
imul
adc
mov
cmp
and
addr16
xchg
addl
mov
sbb
mov
clc
ljmp
stc
push
call
mov
mov
ljmp
xchg
daa
pop
cmp
mov
cmc
mov
testb
sub
xchg
loop
sbb
daa
mov
cmp
test
inc
mov
add
into
jbe
and
fwait
mulb
shrb
dec
shlb
cltd
pop
sub
out
mov
out
ret
mov
and
fstps
jg
out
fildll
dec
ret
shlb
jo
add
mov
inc
js
fstpl
cmc
aas
lret
jb
dec
imul
sbb
push
icebp
push
fcomps
out
stc
int3
in
jmp
jb
and
mov
test
ret
cmpsl
dec
push
iret
adc
jbe
adc
mov
mov
lods
or
test
xlat
iret
or
out
jae
and
sub
out
xchg
sahf
adc
ret
xor
out
add
sub
inc
mov
and
push
push
stc
xor
mov
xor
pushf
push
aam
in
cmp
ds
in
popf
jbe
iret
nop
cmpsb
xor
outsb
mov
cmp
es
lcall
mov
dec
inc
into
add
js
aam
jg
popf
jno
xor
pop
mov
push
jge
mov
mov
clc
rcll
cltd
cmp
shlb
mov
ja
fwait
push
stos
sbb
iret
stos
pop
jmp
adc
clc
inc
das
inc
dec
xchg
shll
pop
mov
mov
fcoms
fistpll
jnp
mov
adc
xlat
sbb
ja
shrl
sub
push
xor
mov
push
mov
or
pop
stc
outsb
cmp
dec
es
out
push
clc
adc
add
xor
lods
out
inc
pop
mulb
adc
je
jge
mov
or
pushl
push
jno
int3
movsl
pushf
pusha
pop
xor
loope
xchg
inc
xchg
mov
xchg
out
testl
popf
repnz
sub
lahf
adc
add
sbbl
outsl
cmpl
lcall
inc
in
ffree
xor
sbb
jb
xlat
test
sbb
dec
cwtl
lods
dec
pop
mov
xor
ret
jecxz
call
outsb
sub
push
in
mov
jg
lds
out
cmpsb
cld
scas
xchg
sbb
rcrb
std
scas
movb
mov
hlt
mov
cli
mov
popa
cmpsl
inc
ljmp
test
inc
add
pop
lret
loop
rclb
daa
or
xchg
icebp
sbb
fdivrl
pop
iret
lods
out
hlt
mov
push
pop
and
mov
arpl
and
mov
shlb
push
fld
bound
and
add
out
adc
rcl
cmc
aas
cmp
dec
pop
pusha
aas
xchg
or
inc
pop
imul
repz
sbb
push
fwait
adc
ret
je
divps
movb
push
gs
aaa
imul
xor
fwait
inc
movsl
mov
cmp
aam
sbb
hlt
movsl
sbb
lahf
call
mov
jg
jne
push
and
jb
push
iret
adc
test
mov
jne
dec
repz
cmp
je
inc
jb
std
or
rol
rorb
iret
add
adc
jns
jecxz
iret
xor
and
pop
lock
or
imul
xchg
into
mov
call
sbb
jbe
hlt
iret
push
cmp
pop
xchg
ss
arpl
ret
and
das
mov
lods
sub
ret
xor
loopne
hlt
dec
xchg
aaa
cmp
add
xchg
xchg
cmp
bound
test
inc
push
jnp
lret
pop
std
inc
lea
lret
cmp
jbe
inc
mov
xor
mov
sbb
fnsave
push
fld1
add
sahf
and
jae
bound
mov
mov
aam
add
rcr
lcall
jg
mov
nop
mov
sbb
jp
lods
xor
lock
sbb
stos
data16
adc
ficoml
push
test
sbb
pop
dec
bound
sub
ds
out
imul
das
cld
scas
jge
mov
or
mov
lret
loop
pop
fsubrs
test
lock
mov
lret
xchg
mov
jno
fdivrl
dec
push
jnp
mov
xorl
xor
ja
mov
fstl
add
cmp
add
scas
ljmp
sbbb
in
mov
jae
lock
rorb
fcmovnbe
mov
jo
out
sub
mov
fnstsw
lock
jno
out
mov
inc
ss
jbe
in
push
mov
jge
out
in
std
or
push
pop
jbe
xchg
cmpsl
out
add
and
cmp
jecxz
fstpl
leave
adc
ret
scas
es
addr16
out
jecxz
adc
pop
mov
push
and
mov
lods
inc
jge
mov
sahf
jbe
sub
sbb
push
adc
mov
int
fsubl
icebp
clc
lods
js
jmp
hlt
xlat
sub
jl
inc
inc
push
mov
inc
mov
lock
push
aaa
cmc
add
ret
mov
loopne
cmp
mul
adc
or
int
jp
or
mov
sti
pop
sahf
mov
dec
mov
add
push
mov
movsb
xor
jne
sub
leave
into
jmp
sbbl
inc
fldl
jecxz
sub
xchg
cmp
or
bswap
in
iret
es
xchg
scas
mov
cmp
mov
les
out
mov
dec
push
mov
and
sahf
nop
or
mov
pop
mov
repz
pop
xchg
cmpsl
mov
add
add
xchg
sbb
push
mov
bound
pop
cwtl
mov
push
js
sub
xor
ret
adc
sbb
inc
test
xchg
test
jmp
add
and
repz
mov
sahf
dec
lret
inc
nop
push
dec
jp
aaa
xor
sti
inc
and
gs
and
and
push
xorl
or
andps
add
in
add
int
pusha
int3
cltd
adc
dec
enter
pop
xor
push
fadd
loope
pop
cmp
inc
xor
pusha
ss
cmc
sbb
adc
add
subl
and
data16
mov
stos
outsl
std
pop
adcl
jnp
sub
fcoml
cmp
add
sahf
sbb
lods
enter
hlt
xchg
out
int3
jge
cli
sar
push
cmp
inc
sub
mov
shl
mov
arpl
push
cmp
adc
in
push
mov
add
popf
das
and
mov
xor
out
cld
arpl
add
ret
es
sub
sbb
adcb
xor
add
xchg
sbb
jp
xchg
cmp
ss
fldcw
addr16
scas
dec
inc
inc
testb
cmp
or
or
pop
dec
jg
fsts
outsb
xor
stos
xadd
js
xchg
jge
xor
inc
js
sbb
adc
add
cltd
jnp
sbb
xor
repnz
pop
push
int
adc
clc
jno
push
and
lret
cltd
lea
mulb
add
lret
add
cmp
std
or
and
addb
out
mov
popa
dec
pop
jns
cmp
mov
fsts
sbb
mov
or
aaa
test
pop
ja
je
pop
lods
enter
test
cmp
mov
roll
jmp
and
mov
xor
add
xchg
in
nop
loop
push
rolb
fsubrs
imul
mov
movsb
addl
les
dec
cmc
imul
add
add
cmp
ret
insb
test
out
push
in
negl
aas
push
imul
push
pop
int
notb
cmp
test
sti
cmp
mov
aad
loopne
or
in
test
adc
add
adc
lea
aam
shll
mov
fwait
iret
jnp
inc
push
shll
cmp
test
leave
mov
imul
aam
inc
es
sbb
jecxz
into
outsb
lds
mov
fadds
adc
sahf
xchg
mov
jne
ljmp
fs
data16
leave
inc
sbbl
add
mov
in
in
popf
mov
stos
mov
jmp
or
add
and
mov
and
xchg
mov
cmp
mov
pop
fidivs
ss
jp
mov
push
jbe
cmp
scas
pop
bound
dec
popa
loopne
jae
xchg
inc
lahf
sti
in
cmc
jbe
inc
lods
es
aaa
jbe
xorb
sub
mov
dec
push
sbbl
dec
je
mov
cmp
test
das
ss
cmpsb
add
or
lods
xor
iret
xor
outsb
and
dec
out
xchg
imul
movsl
lret
test
jl
xor
jbe
das
xchg
push
adc
ja
push
mov
pop
xlat
rcl
mov
ds
mov
sub
sub
jecxz
or
rcll
out
xchg
xchg
and
adc
cmc
xor
jle
cmp
xor
loop
filds
push
mov
in
pop
leave
jge
lret
out
xchg
pushf
mov
jae
adc
out
sbb
pmaddwd
add
cs
add
and
xchg
inc
pop
and
in
stc
bound
jge
or
cmp
mov
add
add
mov
fildl
push
inc
ljmp
dec
add
outsl
cmpsl
in
mov
jb
and
scas
inc
and
sti
pop
mov
push
bound
popa
mov
xchg
arpl
rcrl
mov
lods
sbb
inc
xchg
push
jns
cmp
mov
call
or
add
cmc
mov
test
subl
leave
out
jno
lret
jne
das
dec
xchg
test
or
inc
int3
or
daa
das
fists
mov
lret
and
sub
push
dec
mov
pop
adc
mov
out
in
testb
mov
lods
dec
ljmp
out
stos
notl
cmp
aaa
arpl
or
push
rcrb
movsl
pop
jg
lcall
icebp
or
cmp
imul
mov
push
sahf
adc
add
jne
iret
mov
inc
pop
sub
jp
pop
add
dec
int
lret
cmp
mov
sbb
inc
bound
repz
dec
test
pop
push
fwait
es
dec
sbb
and
data16
dec
sub
push
movsb
mov
jb
sbb
imul
loope
and
mov
loopne
mov
rcll
cmp
in
or
iret
loop
add
testl
fisttpll
mov
insb
mov
xchg
inc
into
movsl
and
and
mov
pop
push
jmp
fnsave
lock
cmp
sub
mov
xor
pop
aas
jp
or
shrb
lahf
in
mov
sahf
cmp
into
cltd
add
jp
loop
jb
jne
mov
mov
movsl
enter
mov
fidivrs
jns
leave
test
lods
stc
stos
mov
push
jle
pop
push
ret
fwait
jge
sub
push
scas
shll
push
int
mov
cmpsb
mov
stos
repnz
repz
ret
andl
mov
push
or
pop
inc
orl
jg
mov
xlat
push
and
pop
pop
jns
imul
pushf
sbbl
adc
insb
mov
jp
xor
aam
cmp
sub
dec
jno
xor
fwait
pop
stos
mov
nop
pop
add
dec
les
outsb
jmp
lods
jg
dec
filds
dec
je
jae
fwait
push
cwtl
ljmp
gs
dec
xor
sti
repz
xchg
adc
mov
dec
in
mov
jp
sub
pusha
dec
lea
jae
or
rorb
shr
jno
mov
sti
lock
sub
ds
sub
or
dec
xlat
lea
jle
dec
xor
mov
loopne
inc
xchg
push
les
push
shll
jmp
loopne
into
cmpl
xchg
or
loopne
stc
cmp
pop
lret
fists
je
shll
jmp
pop
xchg
dec
lcall
ret
outsb
fbld
bound
mov
out
mov
sub
mov
test
push
lea
lea
xchg
hlt
jmp
jmp
call
adc
jns
test
clc
imul
push
nop
mov
push
cli
lods
mov
push
shlb
pop
xor
loopne
inc
bound
inc
sbb
cmpsb
imul
insb
pop
xor
dec
in
test
cmpsb
test
jb
push
in
ss
ja
xor
test
cmp
addr16
lret
lcall
pop
xor
sub
in
enter
addr16
jg
xor
mov
pop
arpl
pop
cltd
inc
cwtl
pop
stc
mov
sbb
xor
notl
cmpsb
jmp
ret
call
popf
imul
push
clc
out
daa
sub
test
sub
int3
mov
int3
dec
mov
pop
pop
pop
xchg
sti
xchg
jbe
aad
mov
lret
cmpl
dec
aas
out
and
sbb
inc
pop
cmp
pop
xor
inc
jg
dec
inc
mov
xchg
popf
push
pop
int
push
aaa
add
scas
pushf
xchg
iret
pop
mov
and
inc
jae
mov
cmpsb
subl
in
and
shrb
push
cmp
adc
or
pop
mov
movsb
fidivl
pop
cmp
push
das
pop
leave
mov
sbb
mov
sbb
and
in
adc
out
inc
icebp
jbe
cmp
mov
mov
xlat
push
clc
sub
rolb
pop
sbb
jnp
jb
jmp
sub
xor
aaa
xchg
cmp
lahf
jnp
loope
inc
and
push
les
sub
lret
adc
imul
inc
pop
notb
add
test
shlb
mov
pop
sub
shll
call
jge
xorb
int3
inc
aad
fnsave
xchg
mov
pusha
mov
cmpl
scas
stos
fs
adc
push
or
jb
mov
movsb
mov
aad
into
add
addr16
fcmovnbe
scas
and
and
mov
scas
cmovne
and
cmp
cmp
int3
jne
dec
out
adc
aad
mov
add
movsl
jmp
xlat
std
ror
lods
push
pop
les
fmuls
insb
adc
cltd
or
clc
sbb
sub
icebp
js
ret
and
out
andl
cmp
pop
sbb
sbb
js
fbstp
jle
or
pushf
and
cmp
cmp
sbb
outsl
add
enter
or
pop
scas
mov
jne
mov
lea
adc
orl
aam
shrl
push
inc
popa
lock
inc
mov
mov
add
adc
test
mov
mov
cmp
pop
aaa
dec
xor
pop
test
adc
fmuls
dec
mov
in
mov
stc
sub
int3
xchg
pop
pop
xor
xor
filds
jge
mov
mov
lahf
rorl
mov
out
pop
imul
push
addr16
bound
and
scas
lds
mov
and
mov
lds
jae
mov
cmp
scas
std
dec
fiadds
movsb
mov
ficoms
inc
sahf
repz
insb
fwait
jmp
xor
adc
cwtl
leave
cmc
sub
jg
cltd
mov
incl
movsb
mov
jp
pop
adc
shrb
or
fnsave
sub
shrb
pop
lcall
into
dec
sub
ja
sbb
adc
ret
cld
inc
pop
and
or
sbb
inc
fcomip
jns
sbb
in
cwtl
add
mov
insb
lcall
adc
hlt
push
in
jae
sarb
stos
xchg
sub
test
mov
sub
lret
lcall
pop
cmp
mov
popa
movsl
xor
test
cld
test
mov
das
into
xor
adc
adc
fs
insl
cld
int3
cmp
or
ljmp
ds
mov
lcall
pop
iret
xchg
mov
mov
jmp
sub
test
pop
pop
mov
lahf
loop
pop
pop
xchg
cmp
fs
mov
xchg
dec
jo
or
outsl
pushf
add
sbb
jmp
cmp
jne
lret
cmc
jns
pop
add
mov
or
adcb
mov
mov
dec
mov
testb
fsubs
stc
fidivrl
or
sbb
inc
cmp
ret
push
fidivs
jns
out
push
xchg
push
js
data16
mov
sbb
pop
shll
jmp
push
dec
cwtl
or
dec
dec
mov
movsb
icebp
or
cmp
outsl
dec
cmp
in
daa
mov
or
outsb
popf
repnz
repz
inc
mov
sub
fcmovbe
fbld
inc
addr16
inc
xchg
inc
mov
jl
idivb
or
xor
push
add
inc
or
and
mov
imul
xchg
insl
imul
xchg
sbb
lock
cmp
out
mov
imul
movb
add
andl
add
rol
mov
mov
jp
arpl
les
fnstcw
cmp
sbb
daa
or
xor
dec
incl
or
xchg
mov
lcall
and
fimuls
adc
xor
and
int3
mov
bound
and
cli
and
push
sub
inc
ficoml
jmp
orl
jp
cld
mov
inc
push
in
popa
insl
fidivs
cmp
inc
mov
adc
cs
jns
xchg
aad
push
rcr
adc
addr16
jno
clc
jl
or
pop
add
std
xchg
js
sbb
inc
xor
movsl
test
imul
sti
es
dec
adc
or
inc
dec
cmc
imulb
jne
ljmp
jae
mov
dec
ficoms
dec
mov
insb
jp
test
or
or
pop
jo
test
pop
xchg
cmp
icebp
in
dec
mov
inc
leave
int
inc
jb
aam
lock
push
mov
xor
mov
int3
in
les
mov
adc
pop
sti
add
repnz
jg
xor
cmp
add
cmp
and
lea
pop
mov
sub
mov
cmovo
sti
in
pop
inc
xlat
xchg
rcr
jne
and
lret
sarl
loopne
daa
inc
sahf
xor
push
mov
xchg
ljmp
jae
fildl
stc
push
outsb
or
mov
notl
sub
mov
mov
cmp
jnp
mov
sub
aam
fsts
push
and
mov
ja
fs
icebp
sub
inc
testb
jecxz
cld
dec
mov
loopne
pop
rclb
adc
dec
gs
add
push
mov
les
mov
ljmp
cwtl
pushfw
dec
loop
fdivs
dec
mov
int3
leave
pop
out
xchg
xchg
sbb
and
test
xor
pop
add
inc
xchg
mov
cmp
lds
pushf
cmp
loop
insl
mov
xor
cmp
cmp
fucomi
loope
push
xor
fucompp
sti
int
pop
sub
mov
inc
aam
jnp
push
hlt
mov
nop
les
shrl
add
and
lret
add
cli
imul
adc
or
ja
push
pop
rcll
pop
add
xchg
js
dec
sbb
cmpsl
mov
rorl
mov
fwait
jnp
scas
mov
pop
mov
fsts
sbb
xchg
ljmp
stc
xchg
mov
xchg
dec
call
mov
jmp
cmp
mov
mov
cmp
mov
lods
pusha
daa
inc
inc
sub
in
and
insl
mov
aad
mov
adc
mov
data16
loope
fdivrp
xor
scas
adc
in
sub
add
add
sub
les
xchg
add
sahf
inc
sub
mulb
sbb
ror
int3
mov
lds
js
pop
lret
leave
mov
push
pop
cmpsb
xor
lcall
xchg
dec
cmpsl
and
insl
mov
add
lock
inc
mov
sbb
push
jb
cltd
cld
addr16
faddl
mov
fnstenv
ja
push
xchg
jecxz
sbb
mov
outsl
ss
sub
ss
hlt
add
mov
flds
sub
add
out
jbe
push
repnz
les
fcoml
ficoml
fstpt
adc
ficoml
ret
push
jo
sbb
adc
adc
das
jnp
cmpsl
loope
adc
adc
idivb
dec
sbbl
mov
jle
pop
inc
mov
pop
mov
or
push
add
cmp
jne
cli
dec
jg
mov
adc
and
movsl
add
shrl
adc
lea
mov
push
or
jmp
les
cmp
sahf
sbb
daa
jl
jle
xor
mov
shl
push
lahf
xor
inc
jge
das
mov
mull
adc
add
mov
sbb
notl
xchg
pop
adc
mov
pop
repz
pop
xchg
pop
cltd
push
jg
adcl
mov
adc
out
aad
mov
xchg
pusha
push
shrb
les
movsb
jge
mov
cld
add
daa
dec
push
sbb
jnp
arpl
shrb
sub
into
cmp
jne
mov
ljmp
jmp
in
mov
lea
iret
notl
push
push
imul
jg
sbb
sub
in
pop
dec
stos
mov
sti
lret
mov
divb
imul
jbe
stc
mov
mov
out
lahf
sarl
fwait
int
fiaddl
out
adc
jmp
lret
pop
push
jnp
sti
jle
outsb
test
test
decb
movsb
xchg
iret
pop
adc
and
cmp
mov
and
cmp
jge
xor
lcall
jne
clc
lods
push
xchg
ljmp
pop
mov
xor
je
or
push
xchg
mov
xchg
fsubrl
ret
enter
sub
notl
adc
xchg
shll
sbb
mov
roll
nop
push
je
shrb
dec
mov
enter
insb
jecxz
jae
sbb
jnp
jb
inc
fwait
cmpsl
out
cmp
call
sar
mov
inc
sbb
stos
leave
pop
imul
imul
add
adc
push
test
dec
cmp
push
fldenv
clc
xor
adc
xor
lods
aad
sbb
inc
movsb
iret
hlt
rcl
xor
nop
dec
dec
test
lcall
push
xor
lea
lret
test
add
inc
mov
ret
nop
les
ja
les
mov
pop
cmp
mov
loope
aaa
push
setnp
mov
push
and
nop
inc
push
cmp
aaa
fidivs
jno
fucomip
and
inc
stos
clc
sub
ss
mov
in
pop
mov
lcall
jp
inc
idivb
mov
xor
sub
xchg
jne
sub
rcrb
mov
cmp
xchg
xchg
fimull
loope
sub
adc
fbld
sbb
or
push
pushf
xlat
sarb
or
outsb
das
fisubs
test
and
mov
mov
mov
or
xor
xor
gs
pushf
jp
cltd
push
cmpsb
cmpsb
iret
push
ljmp
inc
mov
in
faddp
xor
adc
jl
fmuls
out
setl
mov
cmp
cmc
into
orb
imul
aad
mov
sarb
jne
lea
out
jle
xor
cmpsb
loop
imul
loope
aad
adc
mov
lret
cs
sahf
lret
gs
mov
adc
imul
jae
push
cs
mov
adc
and
shlb
mov
mov
add
inc
orb
js
mov
xor
xorl
sbb
aad
lods
imul
sub
mov
xor
mov
adc
push
jp
cmp
out
mov
ja
arpl
fsubrp
out
push
and
lea
mov
fs
xchg
dec
cmp
sahf
stos
inc
adc
lds
daa
adc
testl
aas
xchg
sti
mov
mov
fcom
jno
sub
popf
mov
xor
mov
aas
call
jge
pop
aam
loopne
in
icebp
push
popf
mov
xor
leave
ss
daa
mov
xchg
lock
xor
jmp
movsb
pop
push
mov
test
pop
stos
cmp
sub
cmp
adc
and
push
mov
pop
cmp
pop
pop
sub
pop
lock
cltd
testl
mov
das
cmpsb
inc
orl
sub
jbe
mov
out
scas
adc
in
lods
mov
xchg
lret
test
leave
fwait
cmp
in
clc
xchg
jmp
js
inc
mov
jo
aaa
sub
pop
xchg
xor
repnz
sub
in
add
add
xor
mov
sti
ss
jp
pop
mov
xchg
imul
fs
int3
xchg
mov
add
dec
test
gs
addr16
or
sub
mov
out
sbb
fdiv
stos
xchg
xor
adc
cmpsl
sarb
dec
mov
xor
roll
and
inc
jne
mov
divb
std
push
dec
ljmp
pop
popf
push
ror
fnstsw
jl
mov
leave
icebp
fidivrs
jl
jmp
mov
cs
ret
xchg
xchg
and
mov
shll
mov
loope
cmp
lcall
cmp
cmp
jno
mov
addr16
jns
push
xchg
sub
loope
hlt
sub
ret
cmp
cmp
js
lods
inc
adc
es
mov
push
cmpl
cli
mov
nop
xorl
in
fsubs
lods
xchg
jl
arpl
xchg
push
xor
add
pop
mov
aam
push
mov
pop
pop
iret
inc
mov
das
mov
jl
mov
testb
ficoml
ret
mov
leave
cmc
insl
addb
jns
sti
or
mov
push
push
cli
movsb
out
into
push
jae
mov
and
sbb
clc
inc
stc
lahf
mov
shrb
or
lret
jb
dec
aad
cmp
fstps
or
icebp
imul
pop
jle
mov
xchg
testb
mov
mov
enter
fsubs
ret
sub
lcall
sub
push
iret
lret
jnp
sub
test
shlb
icebp
out
adc
loopne
lods
bound
sbb
addr16
fisubl
mov
decb
or
imul
movsl
sub
push
test
test
inc
xor
add
and
adc
pop
sub
out
mov
fs
mov
dec
push
jge
shrl
add
add
aaa
cmp
push
or
je
gs
push
fbstp
xchg
aad
xchg
sub
int
xchg
push
dec
mov
sti
xchg
addr16
jecxz
xor
xchg
out
pop
stos
jg
shll
mov
xor
xor
mov
es
xchg
sbb
addr16
xchg
xchg
out
xor
loop
dec
mov
cmp
xor
fadds
xorb
pop
mov
imul
ja
adc
lret
add
sub
xor
loopne
mov
mov
mov
ljmp
popa
je
or
sahf
lret
pop
sbbl
stc
adc
stos
test
aam
dec
mov
mov
int
or
mov
lcall
xchg
mov
inc
cmp
pushf
insl
or
jnp
jp
mov
call
xor
and
scas
test
je
push
repz
es
xor
sbb
shl
out
ljmp
push
add
pop
lods
adc
xor
stc
call
in
xchg
pop
fdiv
cmc
in
mov
add
daa
test
mov
cs
jb
adc
adc
test
out
or
orl
test
fisubs
out
mov
mov
or
popf
or
movsb
pop
sahf
jbe
mov
js
mov
mov
and
inc
sub
add
xchg
scas
mov
xchg
test
negl
mov
rclb
xlat
ss
mov
xchg
mov
push
adc
test
mov
cltd
scas
rcll
cmc
ja
mov
pop
add
xchg
cltd
rcrb
cltd
int3
ljmp
cwtl
mov
sarb
gs
adc
adc
mov
jne
or
jmp
aam
push
mov
fstp
and
int3
testl
imul
add
xor
push
mov
dec
push
cmpsl
fistpll
xchg
dec
adc
arpl
stc
inc
daa
adc
and
or
scas
and
or
pop
mov
notb
xor
sbb
jns
jle
add
sarb
push
test
pop
mov
xchg
pop
add
jmp
push
inc
mov
nop
xchg
inc
jno
ds
jmp
jnp
xor
xor
pop
xor
sub
movsb
sar
fwait
jecxz
or
sub
sbb
add
jns
hlt
xchg
jno
sub
or
lea
icebp
sub
add
mov
je
popf
outsl
cmpsb
dec
movsb
xor
cs
mov
mov
xchg
jo
rcrb
cmp
xor
inc
mov
rorl
mov
mov
ret
adcb
inc
insl
int
rcrb
jecxz
call
pop
cmp
xchg
fs
dec
xchg
mov
nop
xchg
mov
in
xchg
sbb
cmpl
mov
push
das
push
xor
cli
out
or
out
fidivs
push
sub
mov
mov
dec
subb
in
mov
rol
xchg
push
xchg
cmp
rclb
dec
cli
lret
mov
arpl
pushf
jo
adc
xchg
lea
cmp
add
push
fcmovbe
cld
mov
mov
xor
or
mov
test
adc
xchg
mov
add
push
fcomi
in
jb
push
jl
pop
xchg
push
ret
mov
xchg
pop
mov
lcall
cld
xchg
cmpsl
mov
je
push
adc
subl
testb
adc
jns
inc
mov
mov
imul
xchg
into
in
or
push
in
sbb
add
cmp
popf
xchg
aaa
fwait
aas
mov
fistps
gs
jmp
repnz
dec
pop
adc
push
int
xor
dec
repz
jae
jb
xor
call
or
pop
leave
push
inc
dec
xchg
xchg
popa
mov
es
aad
xchg
lcall
stos
es
imul
push
add
mov
mov
clc
pop
int
scas
push
xchg
adc
and
add
lea
aad
xlat
push
push
mov
stos
test
cwtl
std
and
dec
and
inc
mov
fldt
ljmp
xchg
stc
add
cmp
clc
in
or
aas
cmc
mov
imul
nop
mov
lret
arpl
lods
stos
add
xchg
fnstcw
aas
jno
sub
mov
ljmp
roll
jl
fwait
imul
dec
inc
sbb
sub
cmpsl
cs
dec
test
cmpxchg
gs
xor
or
sub
call
dec
mov
push
gs
sahf
xchg
lcall
out
sbb
push
cld
or
xchg
in
add
jb
xor
jl
fadd
mov
lds
call
inc
ss
popa
push
cwtl
inc
push
in
ljmp
dec
cmp
fucompp
push
insl
test
loope
aas
adc
mov
aam
aaa
mov
and
jo
cmp
movsb
insb
lds
test
push
in
pop
imulb
mov
roll
jge
dec
mov
push
imul
dec
pop
call
divb
pop
lahf
rclb
mov
push
dec
xchg
lret
fldt
scas
cltd
dec
dec
push
mov
add
mov
push
fidivs
add
dec
je
sub
mov
add
jge
pop
push
or
testl
xchg
add
sbb
test
in
dec
xor
mov
imul
ret
push
fsubrs
addl
sbb
and
mov
fs
inc
push
push
sbb
push
sbb
ja
xchg
add
cmp
adc
or
cmpb
mov
lret
movsb
outsl
aad
pop
xchg
ss
jge
pop
cmc
adcb
mov
cmp
sti
aam
mov
rcll
cmp
dec
jecxz
jge
pop
pop
push
adc
push
fwait
lahf
popa
nop
in
sub
pop
movsb
mov
js
cmp
lods
fsts
jno
mov
movsb
mov
mov
push
jecxz
ss
lea
or
and
sub
divl
mov
pusha
jno
mov
das
aad
push
xor
hlt
push
fmull
pop
and
pop
jbe
pop
lock
jge
and
lcall
pushf
insl
ror
xor
insl
outsl
and
mov
pushf
dec
sbb
inc
dec
lds
stos
aaa
sti
xchg
aas
sbb
andb
push
daa
and
test
cld
icebp
fldl
and
mov
movaps
addb
imul
mov
pop
lock
bound
test
cwtl
inc
cmpsl
dec
xor
loopne
dec
cs
sub
in
shll
fucom
inc
sub
push
addr16
xchg
iret
orb
mov
and
insb
loopne
aaa
jmp
push
mov
jne
jns
inc
xor
scas
or
and
pop
cmpsb
mov
popa
outsl
xlat
dec
shrb
sub
mov
sbb
adc
sub
inc
out
rorl
and
cltd
xchg
pop
inc
cmp
inc
bound
sub
es
sub
sub
fcoms
jns
push
mov
xor
movsb
popa
and
xchg
mov
into
xchg
scas
push
insl
mov
scas
sbb
inc
adc
jno
mov
cmp
dec
mov
out
xchg
ljmp
or
loop
frstor
xchg
repz
and
cmp
adc
adc
lock
mov
test
xchg
or
cmpl
loopne
push
lret
iret
xchg
in
aam
sub
dec
mov
cld
pop
push
shlb
push
or
test
jne
mov
inc
lods
pop
out
mov
out
jns
insb
lret
es
cld
pop
out
mulb
adc
test
and
ret
mov
cld
fidivrs
dec
and
jns
call
dec
adc
mov
or
adc
push
cmp
or
ror
dec
dec
insb
pusha
cmp
push
jge
mov
sbb
movsl
dec
into
fstpl
in
outsl
and
mov
xlat
fwait
in
lds
cltd
xchg
aaa
pop
and
or
hlt
cmpsb
adc
or
xlat
pusha
mov
lret
dec
cmp
sbb
arpl
lea
xchg
sti
push
imul
icebp
adc
fnstcw
clc
push
push
in
sub
mov
cld
iret
mov
cld
negl
pop
aas
push
test
xchg
push
jns
mulb
and
gs
outsl
scas
sbb
int
xchg
mov
sarb
pop
dec
std
jecxz
cmpb
inc
push
push
popf
in
mov
mov
adc
iret
cmc
hlt
scas
or
mov
adc
add
in
pusha
fwait
mov
xor
shll
cltd
mov
lahf
sub
mov
pop
and
inc
call
dec
movsl
push
adc
movl
cmp
jmp
mov
mov
or
lret
inc
jl
adc
sub
mov
jno
mov
sbb
pop
sub
pop
nop
bound
mov
sbb
dec
xor
sar
movsb
mov
jg
mov
fisttpll
enter
clc
movsb
inc
fwait
or
mov
pop
mov
pusha
add
icebp
outsl
cmpsl
dec
jl
cmpsb
cmp
haddps
sub
jl
popl
inc
push
icebp
mov
scas
fs
push
cld
adc
or
lahf
arpl
xchg
gs
mov
inc
mov
aas
jae
out
or
loop
and
cmp
sbb
pusha
lds
adc
cmp
mov
or
inc
xchg
andl
xchg
call
mov
out
popf
js
cld
xchg
jo
enter
scas
push
mov
int
loope
mov
or
and
hlt
pop
lret
or
out
or
inc
push
int3
lret
cld
jno
fsubr
pop
cmpsb
adc
jle
mov
mov
cld
dec
jb
or
cmpsl
push
dec
lret
and
or
data16
loope
dec
xor
movsb
gs
call
sub
sub
mov
out
mov
jns
testb
or
in
test
pop
mov
adc
xor
sub
fimull
sbb
mov
adc
js
cmp
int3
mov
ljmp
and
mov
push
aas
pop
fisubrl
xchg
insb
dec
jecxz
pop
pushf
sbb
das
testl
fdivl
fcmovu
movsl
jnp
sub
idivl
xlat
mov
aad
push
stos
fstpl
std
lock
cmpsl
outsb
or
cltd
and
dec
cmc
push
ja
xor
dec
sbb
fistpl
and
call
push
cmp
and
inc
cmpsl
es
mov
add
xor
mov
push
in
cmp
pop
call
jo
xchg
jne
repz
and
fs
in
lcall
pusha
push
jne
fcom
mov
pop
dec
mov
sub
mov
pop
outsl
pop
xchg
lods
aas
jmp
push
xchg
adc
imul
out
and
test
movsb
sub
push
adc
cs
inc
lahf
cmc
sbb
pop
imul
pop
mov
mov
idivb
test
jle
stos
call
cwtl
imul
mov
mov
scas
or
or
and
push
aas
sub
iret
pop
lods
scas
ret
inc
xchg
inc
add
xor
in
mull
and
outsl
test
dec
out
jns
and
nop
sarl
into
nop
sbb
and
xorl
cmp
outsb
xchg
sub
in
jae
sub
movsl
dec
data16
xchg
add
mov
push
stos
insl
and
sahf
mov
adc
mov
loop
in
xchg
mov
and
neg
lret
pop
lods
imul
lods
and
xchg
add
ljmp
mov
mov
addr16
leave
push
xchg
pop
adc
xchg
das
jge
xor
jl
adc
jo
jmp
fmull
sbb
mov
in
les
pop
and
cmp
movb
es
pop
aaa
sbb
ja
mov
push
iret
inc
mov
sbb
fxch
sar
push
sub
xchg
mov
xchg
sub
xor
push
outsl
adc
pop
mov
faddl
or
test
sti
pop
sub
insb
jg
test
jne
sbb
out
mov
aas
cmp
ds
test
repnz
or
inc
repz
xchg
daa
mov
ret
and
xor
aas
aas
cmp
and
scas
mov
fisubl
sbb
pusha
leave
and
cmp
and
sbb
aam
jl
mov
loope
aas
jecxz
xor
in
dec
mov
sbbl
bound
pop
lret
icebp
pop
repnz
or
pop
mov
add
xor
das
adc
cmp
mov
mov
call
mov
xor
movsl
sbb
ljmp
inc
inc
fsubl
mov
movsb
push
fisubs
aas
dec
fdivl
cmpsl
ret
fidivrl
adc
sahf
stos
negl
adc
sub
dec
or
test
cmpl
adc
dec
cs
bound
cmp
outsb
sahf
adc
scas
pop
ss
stc
push
dec
pop
cmp
sub
ja
dec
push
inc
shlb
out
dec
or
icebp
xor
dec
popf
pop
lahf
arpl
xchg
fnsave
mov
imul
out
cli
stc
fcmovne
idiv
in
test
mov
bound
outsb
jg
push
hlt
out
pop
aas
int3
pop
mov
mov
pop
cwtl
or
or
adc
or
jnp
mov
pop
lcall
xchg
stos
or
mov
fs
inc
lret
or
inc
cld
out
not
dec
std
xor
shlb
and
lods
repnz
bound
pop
add
or
sarb
ret
lods
iret
ret
ffreep
mov
push
testb
scas
popf
xchg
xor
pop
add
pop
push
shrl
dec
jmp
data16
cmp
stc
lods
pop
add
hlt
pop
fisttps
cmp
jge
xchg
sbb
push
cmc
pushf
fcomp
xor
sbb
pushf
call
cmp
pop
jnp
cli
stc
add
and
sub
cmp
loope
rol
xor
push
and
inc
rcl
shrb
int3
cmpb
movsb
icebp
cmp
adc
add
lea
or
adc
xchg
das
adcb
bound
jns
mov
xchg
xchg
nop
in
fcoml
xor
inc
lods
mov
shll
stos
xchg
sbb
mov
pushf
dec
les
jge
in
xor
sub
leave
jle
ficoml
aas
or
sti
in
add
jmp
dec
loop
pop
xor
pop
mov
pop
imul
xchg
out
inc
sbb
rcl
push
xor
sarb
sbb
lret
and
mov
push
testl
pop
mov
mov
loope
jge
inc
das
clc
cs
ljmp
shl
cmp
rcl
pop
mov
or
jo
pushf
decl
xchg
icebp
mov
xlat
pop
stc
sbb
adc
inc
es
jmp
cmp
or
add
pop
out
pushf
ja
mov
sub
xlat
test
mov
clc
andl
call
sbb
call
pop
sahf
adc
inc
test
lds
pop
mov
iret
cmp
mov
push
push
mov
popa
or
call
call
lea
mov
jns
add
inc
repz
ljmp
int3
loop
mov
data16
push
jae
jne
cmp
loopne
and
cmp
leave
dec
adc
mov
icebp
adc
inc
cmp
repz
imul
int3
int3
jno
adc
cmp
sub
dec
push
out
dec
movsb
adc
inc
push
adc
jo
xlat
adc
out
ljmp
ret
out
cli
mul
or
mov
jne
inc
sub
and
jno
cmc
lret
aad
mov
and
jns
lahf
adc
je
pop
lods
add
shlb
arpl
aas
fisttpl
loop
adc
aam
popl
insb
loope
jbe
adc
aam
iret
in
into
ljmp
add
iret
out
mov
push
sub
mov
lret
cltd
jmp
clc
inc
inc
stos
and
and
stos
sbb
std
jno
mov
mov
push
rcll
clc
cmp
sub
fbld
dec
mov
pop
xor
aam
mov
dec
cmp
sti
or
mov
insb
sbb
sbb
add
inc
jecxz
test
test
and
pop
lret
sub
loop
xor
int
mov
mov
icebp
out
cmp
ffreep
and
test
popa
insl
xchg
cmp
gs
testb
fwait
jae
add
mov
aaa
cmpsb
lock
mov
movsb
call
xchg
loop
mov
sub
xchg
add
push
addr16
sub
fldt
push
pushf
mov
scas
or
pop
pop
jnp
add
push
sub
lcall
andb
dec
cmpb
test
dec
cs
jge
pop
into
jle
int
into
sub
lock
mov
mov
lods
ret
xor
jecxz
jp
inc
scas
test
push
mov
sti
lret
sub
push
aas
jmp
sub
sahf
or
lahf
adc
adc
adc
or
push
mov
lret
hlt
add
fwait
movsb
lahf
pop
ror
xchg
repz
mov
adcl
enter
push
dec
cmp
mull
mov
lods
jg
add
sarl
mov
ret
cmp
cmpsb
cmpsl
jl
or
add
nop
push
imul
jae
adcb
mov
ror
lret
scas
popl
orb
xchg
push
mov
fmuls
mov
add
xor
inc
scas
popf
sahf
mov
rorb
inc
or
mov
notl
insb
stc
mov
mov
test
add
push
loope
fldenv
mov
fnsave
cs
inc
inc
push
mov
mov
or
shrl
inc
in
insl
std
sub
jecxz
fwait
jecxz
imul
sbb
test
mov
addr16
ljmp
outsb
cmp
in
testl
push
and
fwait
jp
stos
xor
dec
je
xchg
mov
or
xchg
and
or
jns
mov
xorl
mov
jmp
push
mov
mov
xchg
sub
imul
mov
mov
fimuls
emms
andb
sub
icebp
ret
into
neg
out
mov
or
inc
cli
push
xchg
add
dec
es
sbb
inc
mov
xchg
sbb
fldl
pop
jmp
test
insl
and
adc
xlat
add
lods
adc
ficompl
adc
ja
sub
add
aad
mov
out
fnstcw
mov
or
je
scas
out
mov
movsb
xlat
mov
and
mov
repz
sbb
outsl
test
aaa
or
andl
addr16
xor
iret
call
adc
stos
ficoml
xchg
leave
sub
jg
aas
in
daa
cmp
inc
stc
sub
xchg
and
mov
pop
lods
sub
mul
pop
jmp
mov
xor
insl
xchg
pop
test
int
adc
mov
add
push
dec
pop
mov
cmp
cmp
in
int
pop
mov
aas
imul
jl
jns
ja
jl
xlat
jl
int
leave
sbb
inc
xchg
cld
pop
stos
mov
lds
das
cmp
in
pop
dec
xor
outsb
pop
fcmovnu
and
imul
and
sbb
add
mov
movsl
fnstenv
xchg
inc
movsb
jge
fldt
dec
shlb
xor
arpl
fcompl
in
out
mov
or
jno
jmp
add
setnp
dec
pop
inc
mov
xchg
xor
test
cmp
nop
cwtl
call
movsb
in
stos
or
pop
test
mull
cs
mov
add
pop
addr16
lret
or
sahf
outsb
jg
mov
xchg
ss
sub
jp
jns
mov
imul
je
mov
sti
cmp
mov
clc
js
cmp
mov
push
dec
cs
mov
sub
mov
sti
adc
popa
jmp
jp
leave
roll
mov
mov
mov
lret
mov
pop
lods
push
or
push
pop
xor
sbb
mov
jns
inc
aam
aaa
sti
mov
cmpsl
stc
paddusb
mov
ret
addr16
sbb
fildll
xlat
xchg
cmp
xlat
repz
dec
fldenv
inc
push
inc
pop
out
cmp
je
mov
fwait
movsl
cmp
push
push
push
mov
pop
push
xchg
lea
jmp
sahf
cmp
sti
sti
mov
scas
jae
inc
cmp
cmp
jbe
in
aad
mov
sbb
mov
iret
cli
xlat
or
jno
out
dec
mov
sbbl
movsl
clc
xchg
push
out
add
pop
push
ja
adc
mov
inc
sbb
mov
stc
lahf
xor
sub
xor
insl
pop
insl
scas
cmp
imul
xchg
jle
sbb
cs
ss
ss
pop
lods
mov
js
jl
mov
ds
jno
pop
ljmp
xor
adc
rcrl
ds
inc
mov
and
mov
out
aas
pop
xor
cmpsl
jne
cli
add
mov
pop
jo,pn
in
pop
jne
cs
jl
fmuls
fisubrs
push
sub
adc
mov
push
jns
add
into
pop
sbb
jle
jnp
pop
insb
mov
rorb
jnp
sub
pushf
mov
mov
out
push
repnz
sbb
push
pop
xchg
mov
sub
adc
mov
xchg
jecxz
shrb
mov
push
roll
mov
dec
mov
cs
int3
pop
mov
pop
jns
dec
dec
lock
pop
repnz
fisubl
out
adc
cli
mov
adc
cwtl
fwait
jbe
dec
sub
aam
outsb
cmp
jb
aam
xchg
cld
out
jge
subb
mov
dec
pusha
leave
es
aaa
fimull
movsl
loop
das
sbb
ljmp
or
mov
inc
or
mov
orb
cmp
popa
mov
xor
nop
add
adc
enter
stos
daa
jecxz
ja
cwtl
dec
push
push
xchg
cmpsb
test
inc
mov
fdivrl
popa
js
ja
mov
into
fst
pop
imul
jne
outsb
fucompp
movsb
add
xor
push
mov
add
arpl
hlt
movsl
lret
insb
arpl
mov
fisttpl
inc
mov
and
xchg
aas
dec
ja
mov
jp
ror
cmc
pop
jbe
sarb
dec
mov
and
add
lahf
sahf
fs
insl
lds
adc
ret
dec
adc
or
and
in
je
shrl
inc
negb
subl
sti
imul
sub
mov
push
enter
imul
or
sub
xor
sti
jno
int
ss
adc
dec
stos
divl
popf
xor
divb
mov
pop
shr
sbbb
lock
rcrl
add
pop
pushf
sub
lock
repnz
and
push
insb
es
ljmp
sub
in
cmpsl
dec
dec
cmpsl
or
les
pop
ds
cmp
iret
xchg
dec
or
push
xchg
testb
inc
jp
push
scas
pushf
xor
sub
loope
out
iret
stos
sbb
in
sti
mov
inc
fists
or
sub
pop
sahf
inc
inc
sti
push
out
popf
out
sbb
js
ljmp
pop
push
int
or
sub
mov
jle
repnz
mov
jp
mov
cld
pop
jle
sbb
xlat
or
in
iret
rclb
jg
add
scas
mov
fs
xchg
ds
mull
and
mov
jne
push
pop
push
daa
nop
sbb
inc
into
ja
dec
mov
lahf
fistps
das
outsl
nop
adc
pop
or
lahf
js
xchg
and
stc
fidivs
xchg
xor
sbb
sbb
inc
pop
int
scas
addr16
cwtl
push
fsubrs
test
pop
dec
sbb
cmp
ljmp
popf
mov
push
add
scas
cmp
xor
sbb
push
lcall
sub
mov
xchg
rcrl
cld
and
mov
rclb
repz
clc
xchg
lods
jno
push
and
xchg
movq
cmp
stc
subl
and
insl
jle
test
aas
jno
test
ficomps
push
addr16
ja
stos
es
dec
iret
pop
ljmp
movsl
sub
xchg
lods
lock
cmp
rolb
fbstp
sahf
int
push
xchg
jge
stc
cltd
je
or
jno
daa
mov
out
mov
out
and
lea
jbe
in
stc
jg
lcall
stc
lcall
mov
lods
inc
ret
pop
fstps
fmuls
add
mov
ljmp
imul
imull
jno
add
jns
mov
sub
addl
dec
add
test
pusha
sub
jns
js
mov
xor
sbb
stos
xchg
sub
add
push
out
sub
das
add
fsubr
out
and
test
pop
xor
mov
lods
jb
movsb
arpl
dec
cmc
data16
jne
dec
fdiv
cld
test
adcb
in
sbb
aad
add
repz
sarl
xor
shrb
call
or
mov
cwtl
push
add
pop
inc
cmp
or
pop
jmp
ficompl
or
add
testl
mov
pop
and
cmp
sub
cmpb
cmpsl
xchg
jo
repnz
ret
test
cltd
icebp
pusha
xchg
nop
sar
shrl
jle
pop
pop
call
imul
ror
or
sti
enter
es
std
xor
mov
adcb
cmp
adc
xchg
in
cmp
xchg
in
xor
add
fisttps
mov
into
ds
sbb
test
hlt
fdiv
into
out
js
cmpb
lret
ljmp
mov
sub
scas
fwait
and
xor
push
arpl
in
xor
xchg
adc
sub
sti
jle
xor
cmovs
pop
cmp
push
push
scas
dec
mov
jecxz
cltd
mov
mov
sbb
pop
mov
mov
sbb
pop
js
push
push
imul
push
lea
loopnew
in
stos
cmovle
aad
cmpsl
mov
cs
sub
inc
xorl
popa
or
and
mov
hlt
testl
mov
mov
sbb
pop
push
and
dec
sub
cld
loopne
dec
cmpl
fistl
cmp
fpatan
ja
sbb
mov
dec
nop
mov
daa
xchg
adc
repnz
sub
bound
in
adcl
cld
or
cmpsl
mov
xor
mov
jns
in
dec
loopne
xor
adcl
dec
inc
clc
mov
jae
pop
mov
sub
out
fistl
out
rcrb
cwtl
pop
js
xlat
xchg
mov
dec
outsl
pop
test
xor
cmpsl
xor
jne
shrb
mov
jmp
jecxz
sub
movsl
out
and
cld
mov
push
dec
cmp
lods
aam
push
movsl
add
in
or
les
cmp
sbb
cmpl
mov
aam
mov
jb
sub
jno
jmp
test
push
mov
mov
aam
lahf
or
in
divl
ljmp
lods
js
loope
xor
adc
mov
cli
pushf
jmp
sub
and
js
outsb
aad
sub
xor
sbbb
fcomps
add
out
cs
mov
sti
loopne
pop
negl
sub
ret
xlat
push
and
or
pop
call
push
stos
mov
stos
fsubs
jnp
dec
icebp
fisttpll
scas
int
es
insl
mov
jbe
xchg
lods
xor
adc
insb
fisubl
test
in
add
pop
ret
pusha
mov
sbb
ret
lret
mov
fxch
mov
aad
in
bound
test
xchg
lcall
and
mov
push
repnz
ljmp
cmp
cli
jno
lcall
push
stos
enter
in
stos
cmp
mov
addl
loop
xor
mov
push
addr16
jbe
add
lock
int
lcall
in
shll
subb
push
pop
sub
cmp
cld
jge
daa
movsl
testb
inc
clc
and
xchg
fisubl
and
lahf
sub
es
add
aad
jns
and
mov
add
pop
imul
sub
cmp
in
xchg
mov
in
aaa
test
xchg
mov
xchg
push
pop
scas
arpl
xchg
sti
adc
xchg
fcomps
jne
jp
fstpl
pop
enter
bound
cmpsb
sbb
pop
std
adc
add
cmp
popa
jne
mov
mov
xchg
jno
and
xor
adc
mov
jle
or
xor
mov
aam
imulb
and
jg
add
scas
xor
dec
movsb
mov
xchg
and
mov
ret
inc
push
sub
xor
movsl
add
movsb
out
cld
xchg
inc
adc
stc
xchg
mov
cmp
jg
icebp
add
cltd
push
test
in
lock
and
push
mov
mov
or
jae
lock
rorl
pop
mov
in
adc
push
int3
xchg
mov
and
push
lahf
add
ds
mov
fsubrl
jmp
push
cltd
pop
pop
or
mov
or
repnz
or
popa
sbb
and
cs
mov
in
lret
mov
push
mov
ss
pop
popf
nop
pop
mov
mov
jge
sub
mov
push
shlb
movsb
mov
mov
outsl
or
mov
lods
shrb
jae
push
cmpsl
incl
dec
loope
jg
fs
mov
inc
pusha
popa
imull
cmp
hlt
iret
sbbb
stos
lret
cmp
loop
mov
xchg
test
mov
pop
push
mov
jl
jbe
popf
push
xor
pop
cmc
adc
imul
in
insb
in
jmp
f2xm1
lahf
cmp
pop
jo
mov
inc
fimuls
sub
adc
xchg
pop
cmpsl
repnz
push
push
loope
ljmp
ss
testl
hlt
mov
and
cmpsb
test
mov
enter
ljmp
fimuls
xor
icebp
dec
lret
loopne
in
lods
clc
lret
mov
xchg
push
negb
js
pop
mov
push
scas
push
mov
out
cld
sti
sbb
loope
mov
imul
ja
sub
mov
hlt
ljmp
in
xchg
icebp
out
mov
lods
jecxz
xchg
mov
sbb
inc
inc
scas
pop
ljmp
push
adc
or
mov
divl
and
mov
or
lds
aam
shrl
adc
test
enter
mov
insb
je
into
xlat
sahf
pop
xor
sub
sti
cmpsb
mov
in
jl
xor
shrl
fidivl
mov
outsb
lock
mov
xchg
movl
xchg
leave
push
push
jno
xor
mov
jnp
dec
sub
test
imul
xchg
icebp
add
sbb
cmpsb
ljmp
and
mov
popa
lea
adc
mov
rcrb
add
fimuls
pop
pop
sub
test
in
cmpl
jmp
or
dec
test
inc
and
fildl
mov
push
sub
adc
mov
lds
aad
dec
clc
add
shll
flds
push
or
xlat
fsubl
push
xchg
pop
sbb
outsl
push
int3
xlat
mov
dec
ds
xor
pop
xor
push
mov
inc
jge
rol
int
mov
xor
loopne
inc
frstor
sub
sub
movsb
fcoml
mov
and
nop
add
and
push
inc
mov
out
or
mov
dec
ds
pop
lret
add
fistpll
push
sub
and
add
mov
out
inc
test
out
mov
and
inc
jb
mov
call
mov
jle
sbbl
jmp
push
nop
outsl
fwait
cmp
test
sarl
stos
xchg
cld
sbb
adc
std
arpl
add
ja
pop
mov
lods
insl
inc
and
mov
jmp
clc
roll
testb
or
cmp
mov
imul
cmp
lret
add
cmp
mov
jmp
and
movsb
mov
sbbl
dec
sahf
outsb
sub
pusha
jno
jne
out
es
inc
push
push
sub
in
fidivs
aam
loope
lcall
pop
ret
leave
pop
and
push
repz
xor
rcl
leave
cs
mov
pop
jecxz
jle
aad
push
mov
outsb
inc
sbb
mov
pusha
push
mov
push
bound
sub
jno
insl
sbb
aad
and
mov
dec
stos
mov
fldl
and
dec
imul
popa
scas
jl
mov
push
pop
in
stos
mov
inc
loop
mov
orl
dec
mov
push
push
xchg
pop
aas
push
aad
stc
rcl
shll
inc
jmp
mov
cmpsb
ret
andb
sub
scas
ror
leave
sbb
pop
hlt
inc
xchg
fnstcw
xchg
sbb
leave
outsl
inc
jecxz
cmc
mov
scas
or
inc
xchg
cld
sar
sub
add
stc
xor
cmc
push
js
or
or
push
jns
aaa
shlb
dec
lea
ds
mov
and
in
cmp
push
daa
push
je
push
add
lret
mov
and
cmp
cmp
push
daa
and
nop
xchg
mov
test
push
and
jp
lea
insb
inc
popa
mov
adc
adc
les
sbb
mov
pop
or
rcrb
ret
lret
call
xchg
mov
inc
push
sbb
xchg
pop
jnp
bound
test
mov
adc
jp
push
ljmp
mov
lahf
lret
insw
int
xlat
lods
test
mov
sub
sbb
sbb
insb
cwtl
in
loop
or
lods
aad
negw
pop
inc
frstor
or
fstl
repz
cmp
sbb
rorb
push
nop
dec
inc
mov
fistpll
cmpsb
fnstsw
call
in
xchg
adc
sarb
and
out
mov
inc
push
cmp
pop
inc
cmp
adc
sbb
nop
push
cwtl
jae
cltd
je
sbb
cmpl
loope
xor
jb
or
call
pop
dec
xor
push
mov
add
cmp
fs
pop
sub
mov
mov
stos
cwtl
mov
outsb
dec
cmp
xchg
mov
sub
in
mov
jo
cmp
add
xor
test
std
mov
je
jne
mov
ret
test
addr16
in
pop
into
push
lea
outsb
das
xor
dec
pop
add
pop
enter
daa
repz
xchg
roll
mov
adc
jecxz
sti
push
mov
bound
sub
mov
adc
dec
push
aas
enter
sbb
lret
or
sbb
lods
arpl
inc
test
icebp
add
add
push
cmp
xchg
adc
nop
mov
nop
imulb
pop
xchg
mov
out
mul
in
fisubl
sahf
lahf
fcompl
cltd
add
and
bound
dec
stc
ja
negl
or
cmp
pop
xchg
les
mov
pushf
ja
sarb
flds
or
test
ja
pop
sub
and
loopne
cmc
sbb
lock
or
mov
jge
pushf
sbb
mov
jae
jl
xor
sub
inc
jne
xchg
cmp
stos
inc
movl
rcll
cs
add
int3
filds
mov
jl
cmp
add
out
les
jmp
push
xlat
scas
mov
mov
add
and
hlt
es
nop
cmp
xor
pop
jp
or
clc
rol
repnz
sub
or
lea
and
mov
pop
sbb
cmp
cmp
add
adc
stos
and
cmp
pop
cmpsb
push
fldenv
xor
lods
inc
out
push
rorl
inc
adc
int
dec
sbb
pop
sbb
sbb
dec
mov
lock
cmp
lds
sub
loop
xchg
adc
and
es
movsb
outsl
shll
mov
cmp
lcall
mov
fcomip
pop
or
push
jbe
das
jb
xchg
cmp
mov
push
lret
dec
sub
call
out
outsb
add
fisubs
enter
pop
pusha
xchg
push
mulb
or
or
push
mov
pop
xchg
mov
loop
mov
inc
add
stc
inc
sub
mov
xchg
sbb
inc
clc
inc
jl
mov
movsl
loop
xchg
sbbl
mov
xchg
negb
fwait
mov
iret
pushl
out
xor
push
xchg
ss
inc
mov
outsb
push
pop
insb
or
cmp
lret
adc
sub
xor
mov
dec
in
mov
cltd
xor
pop
push
leave
cs
ss
sbb
cltd
lcall
and
repnz
push
pop
sub
xchg
cmp
ja
cmc
mov
into
in
mov
adc
js
xchg
in
pusha
decb
dec
mov
push
jb
jno
sub
loope
jle
pop
cmp
dec
shrb
call
cmp
mov
fwait
sahf
mov
mov
fistpll
mov
xchg
pop
xchg
xchg
xchg
setnp
imul
mov
add
lret
bound
inc
shlb
and
pusha
lcall
nop
icebp
sbb
in
adc
push
and
sbb
mov
pushf
jl
xchg
pop
pop
das
push
test
add
mov
ljmp
test
sub
push
push
add
ss
out
in
pusha
push
fstps
loop
test
inc
aaa
cmpsb
movsl
push
xchg
leave
push
adc
inc
mov
aad
fwait
add
std
xor
sbb
pop
test
aas
dec
adc
shl
sub
add
test
jge,pn
test
int
dec
addr16
mov
out
push
dec
fidivl
arpl
xchg
mov
cmpl
popa
imul
and
inc
xor
jg
adc
dec
fsubrl
or
loope
fildll
push
flds
add
dec
xor
mov
cmpsl
mov
addr16
inc
fxch
jb
faddl
push
ljmp
mov
dec
ds
and
push
outsl
mov
ja
out
repz
iret
pop
rcll
addb
inc
movl
repnz
pop
cwtl
push
sub
mov
enter
mov
std
imul
add
lcall
push
jbe
dec
pusha
jb
outsb
jne
loopne
xchg
lds
in
mov
clc
je
and
je
xchg
xor
or
mov
lea
dec
ret
inc
lock
and
fucomi
insl
push
jecxz
lret
mov
sbb
sub
test
xor
mov
mov
test
xchg
push
andb
push
in
xor
add
test
in
mov
and
mov
cmpsl
fcmovnb
imul
dec
mov
mov
popa
into
mov
dec
dec
test
cmp
lahf
sub
xchg
outsl
xchg
daa
pop
flds
imul
bndstx
sub
push
addl
adc
scas
mov
das
in
je
out
jmp
sub
lea
lret
aam
xchg
xor
push
js
inc
inc
jecxz
scas
mov
stc
adc
lock
ja
xchg
ret
movl
push
sub
insb
jecxz
inc
clc
jmp
xchg
rcrl
and
push
aam
scas
popa
cld
stc
sub
xlat
xchg
inc
cmp
or
shl
dec
cli
sub
dec
movl
cmpsl
aaa
aam
rcrl
sti
xchg
pop
sahf
mov
cli
push
mov
pop
mov
into
in
lret
add
cs
adc
xor
rcrl
dec
cmpsl
add
jo
mov
pop
jns
push
sti
push
adc
bound
imul
cmp
mov
mov
into
lock
push
and
test
lret
push
mov
testl
nop
pop
test
mov
cmc
mov
shl
sbbl
ds
loopne
push
hlt
mov
push
mov
stc
fistpl
movsb
rol
add
pop
mov
pop
xchg
xchg
stos
jl
inc
lock
xchg
xor
push
sub
je
icebp
mov
dec
push
push
repnz
mov
jne
jne
into
or
mov
mov
je
test
sbb
sbb
dec
pushf
dec
rolb
xor
repz
sbb
pop
pop
sub
mov
inc
jo
stos
into
jecxz
fisttpl
scas
add
add
fisubl
ret
in
pop
inc
jecxz
jb
jp
sbb
pop
sub
inc
jno
jne
popa
dec
aaa
mov
jae
ret
gs
cli
stos
adc
sub
imul
dec
je
or
adc
in
fwait
dec
cltd
jbe
gs
push
jmp
push
xchg
je
xchg
sub
outsb
or
mov
shrl
sub
iret
lea
mov
mov
xchg
xchg
dec
out
stos
pop
inc
out
xor
push
adc
dec
jecxz
in
add
sub
lods
push
in
dec
shrb
xchg
adc
sub
cld
sti
and
lret
xchg
add
cltd
insl
push
inc
xor
test
cmp
mov
dec
and
clc
fs
int3
push
inc
lods
fs
pop
imull
fwait
xor
mov
xchg
cltd
orb
xor
jnp
mov
shll
inc
xchg
loopne
xchg
rcr
xchg
sub
mov
or
pushl
popf
mov
adc
rorb
pop
xor
cld
or
fs
sub
pop
xor
jae
mov
aas
fcmovnu
movsb
push
call
mov
or
mov
xchg
mov
sub
cmc
push
inc
mov
push
sbb
push
lret
mov
subl
mov
loope
repz
jg
mov
stos
lea
sbb
sbb
or
pop
or
addr16
xor
clc
es
push
loop
shl
insb
jl
mov
fnstenv
pusha
add
or
rcrb
in
outsl
mov
lcall
sub
lea
es
push
outsb
xchg
push
push
sub
xchg
std
jle
fwait
repz
cmc
inc
ljmp
xor
in
test
scas
lods
dec
add
pop
sar
push
les
xchg
mov
add
mov
orl
push
insl
lcall
inc
adc
adc
pop
or
das
aad
pushf
adc
sbb
fldt
xchg
sbb
xor
in
inc
notl
fdivrs
insl
jmp
pusha
push
add
adc
mov
daa
in
imul
aaa
push
addr16
iret
inc
rolb
ja
dec
jge
mov
movsl
out
int
xchg
pop
push
pop
jbe
sbb
mov
daa
jo
jl
sbb
subb
push
push
jge
lock
add
add
in
and
mov
jnp
enter
mov
lcall
inc
push
bound
xchg
out
pop
and
dec
daa
fs
add
lret
stc
xchg
or
xchg
sbb
test
stos
adc
repz
ret
insb
lahf
sub
pushf
sbb
cmp
mov
pop
arpl
imul
adc
cmpsb
pop
jg
mov
leave
xchg
and
pop
cltd
add
push
mov
lds
ja
sti
gs
orb
out
inc
xorl
iret
int3
push
cmpsb
pop
mov
fmull
lods
dec
testl
jl
divb
gs
lret
lods
lock
bound
or
into
in
mov
jg
aam
or
mov
dec
sbb
add
stos
addb
pop
xor
dec
dec
xchg
fildll
mov
xor
fsubrs
cmpsl
pop
sub
add
dec
mov
ret
hlt
ss
lret
and
push
sub
arpl
sub
aam
mov
jge
push
das
push
mov
inc
out
cmpsl
insb
dec
insl
lea
in
movaps
mov
outsl
lods
jge
fs
adc
cmp
push
mov
aaa
push
jae
lock
xchg
mov
jbe
dec
xor
jle
pop
nop
imul
and
push
out
insb
mov
scas
cmp
xchg
dec
push
ljmp
mov
push
add
mov
stos
mov
adc
jmp
stos
addr16
enter
shr
xor
and
mov
dec
into
xchg
mov
jae
xlat
push
pop
xor
jne
jmp
daa
push
insb
inc
dec
out
mov
stos
adc
es
mov
dec
in
les
fdivl
fcomp
pop
out
add
inc
pop
dec
ret
sbb
add
dec
bnd
dec
jecxz
sbb
dec
mov
inc
call
shrl
imul
jp
and
push
es
pop
ja
lea
fadd
sbb
pop
dec
mov
xchg
pop
mov
push
outsl
ljmp
push
jmp
test
mov
pop
daa
push
xchg
or
mov
or
dec
mov
shrb
decb
in
sub
mov
sbb
dec
test
jnp
shlb
cmpsl
sub
and
pop
adc
mov
xchg
lret
push
xchg
mov
out
inc
xchg
pop
push
arpl
inc
icebp
jae
out
xor
cmc
xor
jbe
or
icebp
or
add
cmp
mov
cld
mov
mov
mov
xchg
out
mov
pusha
mov
bound
xchg
in
push
add
cmp
mov
addr16
mov
or
mov
rcrb
mov
je
dec
outsl
shr
jmp
fsts
dec
out
dec
mov
mov
int
out
enter
jg
pop
jecxz
fmull
push
or
aas
mov
mov
popa
pop
push
and
cmpsb
js
adc
fs
sarl
leave
dec
pop
mov
xchg
iret
sbb
in
xchg
lea
out
hlt
mov
shrl
ljmp
imul
pop
loope,pn
ja
cmp
jbe
ficompl
sbb
loope
mov
movsl
xchg
ret
in
push
cmp
faddl
mov
and
fsts
cs
stc
icebp
push
fidivrl
enter
shrl
aas
stos
arpl
xor
jmp
loopne
xchg
mov
push
xor
and
push
ljmp
xchg
mov
adc
and
xchg
xor
leave
xor
psubd
out
pop
push
xchg
rcrl
inc
jg
mov
pop
inc
and
lds
sbb
dec
xor
loop
xchg
add
push
lsl
cli
inc
insl
lret
push
into
call
push
outsl
insl
ret
pop
repz
mov
xor
int
push
mov
and
sbb
pop
shll
xchg
mov
imul
cs
xor
movsl
add
pop
aad
push
out
nop
ficomps
push
enter
and
push
in
sub
push
addr16
sub
sub
das
andb
adc
out
sub
mov
push
idivl
stc
cmp
push
xor
mov
hlt
push
push
and
incb
add
adc
pop
int3
rorb
addl
imulb
jg
fs
filds
insb
adc
sti
negb
and
adc
outsl
mov
mov
push
mov
addb
int3
adc
mov
aad
adc
and
xor
clc
dec
lock
inc
fxch
push
inc
mov
into
je
jle
add
jne
jno
call
xor
out
shl
data16
pop
fbld
mov
xor
xor
cmp
sub
cmpsb
xor
push
fwait
add
push
cltd
and
jns
imul
dec
cs
and
dec
inc
cmpsb
push
xor
add
loop
and
dec
cmpsb
dec
push
jp
cmp
imul
xchg
pop
sbb
testl
cmp
repnz
xchg
je
and
in
mov
shrb
ss
sbb
sub
test
xor
aam
mov
nop
cmpsl
scas
jecxz
mov
notb
mov
pop
decb
mov
adc
dec
and
lea
fildll
sbb
xchg
xchg
sbbl
hlt
jb
dec
fnstenv
sti
insl
push
je
das
mov
out
in
cli
mov
jle
xor
add
push
push
pop
das
scas
mov
or
repnz
insb
adc
xorb
aad
jns
dec
scas
jne
push
lret
rorl
cmc
xchg
mov
iret
mov
mov
divb
pop
add
dec
mov
push
jge
mov
push
mov
or
sti
neg
adc
xor
shll
sahf
bound
mov
mov
ret
cmp
test
cmp
sub
inc
dec
jmp
stc
lahf
scas
mov
cmp
mov
adc
mov
scas
ja
in
inc
ret
fwait
rcll
jl
push
cmpl
adc
add
xchg
hlt
mov
ljmp
jge
adc
lods
xchg
sti
jns
aaa
sbb
cltd
mov
je
sbb
imul
sbb
test
scas
adc
sbb
scas
xchg
aas
pop
or
jp
jnp
out
and
or
ret
push
cmp
cmp
mov
adc
aam
add
push
push
adc
inc
push
jo
push
push
fdivrs
cmpsb
push
adc
mov
arpl
popf
push
cmpsl
mov
js
or
dec
push
sub
adc
fnstcw
xchg
xor
adc
out
pushf
or
dec
jns
mov
cld
and
lcall
lods
lods
std
xor
lods
aas
in
jno
aaa
icebp
add
out
mov
fwait
ljmp
imul
lcall
adc
fstl
dec
add
xchg
or
es
sub
fistpl
or
push
cmp
adcl
in
push
or
fnstsw
addb
mov
add
imul
fcom
mov
cmp
pop
lret
mov
and
sub
popa
jno
pop
int3
fisubrl
jns
cltd
xor
sbb
movsl
cltd
xorb
std
push
cmp
mov
mov
fdivrs
xchg
test
andl
mov
pop
jns
subps
mov
inc
mov
mov
dec
fisubrs
jl
mov
subl
sbb
jbe
inc
lods
dec
xor
out
pop
dec
push
sub
ljmp
dec
add
cli
test
arpl
inc
call
xor
ds
leave
add
adc
and
cwtl
cwtl
shlw
popf
cld
inc
inc
mov
out
adc
mov
xchg
sti
outsb
aad
push
stos
cwtl
mov
test
fwait
loop
arpl
mov
or
add
outsl
lds
ljmp
mov
rcl
icebp
pop
xor
lret
xor
mov
mov
imul
loope
xor
repnz
int
dec
and
dec
sahf
sub
es
movsb
addr16
sub
pushf
ja
dec
jb
sub
ret
adc
lahf
sub
aaa
and
cs
roll
test
mov
es
popa
and
inc
mov
pop
cmc
cmp
scas
int
jo
add
rclb
mov
adc
lods
les
cmp
enter
rorl
dec
adc
test
pop
pop
xor
shlb
mov
xor
xchg
add
mov
js
push
mov
stc
das
inc
xchg
lcall
xor
fcomp
mov
cmpl
mov
or
lea
adc
sub
push
subl
push
xor
mov
mov
fisttps
out
dec
cs
lock
shrd
dec
out
sub
cmp
jle
gs
cmp
jno
sbb
pop
enter
je
fcmove
dec
fwait
in
jg
fldl2e
dec
js
test
jecxz
andb
subl
cmp
and
and
int
cld
push
jecxz
js,pt
cmp
pushf
cmp
mov
jecxz
push
ds
dec
addr16
xchg
jp
daa
push
mov
mov
jns
jnp
cs
loop
out
xchg
jmp
xor
cli
sbb
leave
ljmp
and
pop
cltd
popa
cmp
mov
scas
add
pop
pusha
sbb
aam
es
outsl
xchg
push
aas
pushf
sbb
dec
sbb
pop
cmpsb
push
push
test
fisubl
xor
test
daa
mov
daa
or
mov
rcr
popl
xchg
enter
add
fisubs
mov
sub
mov
push
pop
enter
pop
pop
enter
popa
dec
es
xchg
cld
stc
js
mov
fbld
jp
inc
ss
mov
movl
xor
mov
loopne
adc
es
std
dec
pop
int
and
outsb
xor
mov
jle
nop
push
repz
inc
adc
ficompl
mov
aam
or
shl
push
push
aam
push
pop
sub
ljmp
ljmp
sub
in
into
dec
and
jg
push
push
cli
pop
dec
stos
adc
hlt
scas
into
xor
xor
iret
nop
cmpsb
cltd
jne
jne
pop
clc
jo
xchg
into
test
test
cmpsl
fldenv
fs
xchg
pop
xchg
adc
pop
dec
jnp
lea
iret
cmp
cmp
fstpl
sub
inc
stos
sbbl
repnz
fwait
outsl
mov
aaa
add
jg
cwtl
adc
xorl
enter
scas
lahf
mov
push
sbb
inc
clc
adc
mov
adc
jne
in
leave
cmpsb
dec
clc
in
loope
cmp
xchg
mov
hlt
xor
pop
aad
push
mov
outsb
mov
dec
jns
push
add
adc
clc
sti
repnz
dec
xchg
mov
jge
shll
orb
int3
mov
insl
dec
popf
lahf
pushf
fimull
jmp
dec
out
or
mov
or
scas
mov
push
push
add
ret
adc
loope
jp
nop
jg
mov
jle
add
pushf
xor
adc
jo
xchg
add
aas
lahf
inc
and
je
enter
fstpl
push
sub
add
loopne
fsts
xchg
data16
les
call
jne
orl
push
loopne
jmp
pop
mov
jae
pop
nop
in
and
shl
pop
sbb
mov
mov
push
xchg
cmpsl
xor
adc
in
sahf
xchg
in
mov
test
aad
jmp
aas
ss
mul
nop
loop
clc
dec
jg
sti
adc
xchg
js
faddl
sahf
and
push
shl
sub
inc
fmull
lock
movsb
dec
rcr
push
mov
lock
add
call
mov
mov
fnstcw
fistps
sbb
sbb
hlt
mov
aas
daa
dec
shrl
sbb
popf
fisttps
mov
adc
sub
out
pushl
loopne
ret
movsb
pop
shlb
and
cmp
xchg
sahf
jno,pn
adc
inc
push
outsl
fbld
add
mov
lods
scas
fisubrs
jmp
pop
aas
add
dec
sub
mov
imul
repnz
lods
cli
jmp
mov
psubb
push
cmp
in
mov
out
inc
dec
test
inc
fcomps
or
adc
lcall
adc
xchg
movsl
int3
adcb
cmc
mov
shlb
aas
mov
adc
pop
lret
shrl
xlat
in
xchg
push
mov
jbe
xor
lods
and
jo
out
js
mov
fs
iret
pop
fnsave
xchg
ss
xor
in
ffree
xor
out
movsl
pop
jae
or
sbb
mov
xor
sbb
cmp
xchg
mov
sub
je
fcmovnb
xchg
mov
lahf
stos
sub
int
jecxz
lret
mov
enter
aad
test
sub
cmp
fstpt
xchg
clc
xchg
pop
aad
xchg
sahf
loopne
push
xchg
pop
mov
push
enter
xor
or
sahf
movsb
pop
mov
mov
adc
inc
fs
fsubrs
dec
aad
cmp
lret
outsb
jne
jnp
cmp
fwait
loop
inc
dec
mov
cmp
add
and
or
xor
lcall
mov
mov
rol
sub
mov
faddl
xor
jl
shll
pop
fwait
pop
std
mov
or
ret
and
std
into
cli
sub
jbe
dec
not
mov
das
mov
cmp
adcb
dec
lock
push
fisttpll
xor
dec
mov
pop
dec
push
scas
fisttpll
mov
mov
outsb
addr16
pushf
decb
pop
cmp
cltd
cmp
xor
push
imul
pop
mov
push
ss
xor
outsl
clc
dec
gs
rorl
pop
dec
mov
sub
pop
sub
push
jb
sub
cmc
cmp
xchg
or
test
jnp
mov
test
jbe
dec
mov
fwait
push
iret
sub
outsl
call
xchg
xchg
dec
jnp
jo
inc
lret
jmp
iret
push
mov
ror
adc
mov
pusha
push
cmp
imul
aam
aad
xchg
int
sbb
jle
fwait
loop
xchg
adc
in
jmp
add
mov
mov
adc
jmp
sahf
cmp
in
add
sarl
jbe
imul
in
test
adc
mov
mov
lea
inc
je
pusha
icebp
aaa
pop
mov
out
daa
jp
cs
mov
adc
pop
mov
ret
push
add
inc
jge
mul
test
cwtl
lea
decb
sub
movsb
adc
das
push
or
scas
and
ret
fcmovnbe
mov
adc
loope
je
aaa
sub
push
repnz
jecxz
xchg
push
mov
adc
lods
cmc
int
sub
mov
mov
adc
rol
xor
nop
subl
adc
lret
push
dec
pop
ljmp
push
leave
push
dec
loope
ret
arpl
xor
mov
icebp
sbb
or
push
sub
sbb
xchg
xchg
or
cmc
movsl
xor
outsb
inc
movsl
lret
adc
cmp
popa
sub
mov
add
adc
iret
dec
daa
out
xchg
xor
xchg
sbb
pusha
icebp
push
imul
inc
mov
inc
shrl
xor
sbb
fimuls
addr16
xor
cld
fcmovnbe
cmp
jo
mov
arpl
mov
mov
jecxz
pop
daa
xchg
bswap
or
jo
sarb
jl
ss
ret
js
push
xlat
cmp
jmp
mov
and
adc
xchg
insl
push
xchg
sbb
repz
add
mov
jo
add
mov
cmpsb
out
movq
fstpt
push
xchg
adc
clc
sbb
shlb
mov
test
xchg
sbb
hlt
mov
mov
mov
outsl
hlt
cld
xlat
int
xchg
cmp
inc
stc
lods
mov
jno
movsb
xor
jg
imul
cwtl
int
mov
cmpsl
xchg
fisttpl
inc
add
dec
nop
shll
loopne
dec
outsl
sarb
and
push
pop
adc
mov
xchg
xor
push
sub
es
repz
leave
or
bound
or
jp
mov
imulb
xchg
xor
ret
insb
sub
push
les
sarb
sub
xor
jno
or
xor
or
cwtl
lret
or
xchg
cli
and
and
mov
sub
inc
inc
push
fistl
mov
mov
mov
mov
or
in
cltd
dec
rorb
adc
sahf
and
leave
sbb
out
into
bound
cli
daa
popf
jecxz
aaa
fs
rorb
push
lret
in
inc
push
loope
sti
jns
jae
arpl
gs
add
sub
movsb
mov
inc
add
xchg
in
mov
inc
out
ffreep
in
lret
jp
fisttps
dec
mov
push
stos
pop
outsb
sahf
sbb
jg
xlat
push
lahf
lods
add
int3
inc
in
pop
inc
jle
dec
jl
cld
inc
jb
sbb
pop
xorb
movl
stos
addb
and
mov
fiadds
xor
out
sbb
insb
xor
mov
pop
mov
mov
lret
out
cwtl
and
fistl
movsl
gs
in
test
add
pushf
aas
mov
or
adc
leave
mov
mov
jp
pop
mov
in
popa
inc
add
fdivl
je
adc
mov
sbb
push
sub
push
adc
pop
outsb
in
arpl
xchg
sub
or
cwtl
mov
ret
shlb
inc
and
pop
pop
insl
inc
pop
add
fdivp
in
cmp
movsl
xor
bound
xchg
sbb
rorl
add
dec
adc
cmp
stos
je
repz
add
pop
shl
push
cmp
jnp
loopne
adc
sahf
jne
loope
pop
out
mov
mov
test
popa
push
ja
mov
outsb
push
sbb
adc
clc
mov
xchg
bound
cmp
jbe
jbe
imul
mov
aaa
lds
mov
aas
cmp
inc
subl
filds
or
sahf
lds
imul
ds
cwtl
mov
add
faddp
adc
fdivs
pop
push
imul
jno
lcall
xchg
mov
rcll
stos
std
aas
and
cltd
fcomps
jns
mov
xchg
fwait
out
dec
imul
les
jo
in
cmp
push
mov
pushf
stos
inc
stos
push
lret
fwait
lods
ret
gs
jno
jne
fstl
leave
xchg
inc
pop
jecxz
imul
and
xchg
add
vsqrtsd
add
xchg
add
dec
jo
aad
and
adc
jmp
out
arpl
stc
mov
mov
scas
in
cmp
mov
jne
ja
pop
mov
xor
add
test
mov
das
mov
nop
push
enter
fwait
jnp
xchg
xor
loop
je
enter
adcb
ljmp
in
jmp
xchg
stos
pmuludq
aas
pop
cmp
dec
rorb
adc
in
test
cld
cmc
fmull
mov
mov
mov
inc
pop
adc
lds
xchg
cld
jecxz
div
hlt
roll
lahf
sti
adc
movsl
sbb
lods
push
cmpsb
fimull
jp
mov
iret
cvttps2pi
mov
mov
aaa
lret
and
mov
add
or
pop
mov
in
in
pop
mov
das
cli
outsb
mov
rcrb
mov
jmp
mov
out
ss
pop
pop
mov
add
xor
push
push
sub
inc
xchg
jle
inc
outsl
xchg
ret
mov
or
xor
push
loope
push
jle
popf
xchg
mov
mov
shll
fistpl
inc
and
and
dec
or
xor
jg
and
dec
out
fs
fs
data16
stc
jbe
dec
cmp
and
shlb
xchg
mov
cmp
in
inc
cmp
mov
xchg
mov
cmp
les
jmp
les
mov
shlb
pop
js
fsts
cmpsl
mov
testb
mov
ja
out
movsl
int3
leave
mov
ficomps
add
ds
and
adc
push
xchg
std
fcmovnb
pop
sub
out
leave
cmp
push
fdivs
int
lods
es
lods
mov
roll
sub
inc
sbb
gs
add
imul
rep
imul
push
and
dec
inc
adc
das
pop
fidivs
mov
pop
out
daa
test
cltd
movq
enter
cmp
mov
lcall
ret
cmp
sub
mov
pop
rcrb
arpl
or
popa
or
sub
pop
sahf
lods
pusha
mov
xchg
ficompl
or
jns
pop
aam
dec
add
xor
or
ljmp
movsb
stc
lcall
pop
or
adc
movsb
or
loopne
jge
and
jbe
fldl
xor
xchg
or
pushf
subb
lahf
aaa
adc
dec
pushl
lret
test
ljmp
jb
lock
cmpsl
or
pop
lods
subb
xchg
push
adc
cltd
mov
mov
lock
stos
pop
sub
mov
xchg
push
scas
jmp
loope
push
pop
aad
jl
push
fdivrl
aas
addr16
aas
fs
pop
pop
icebp
push
adc
cmp
inc
inc
xor
jno
mov
sbb
hlt
mov
into
or
movsb
or
cmp
daa
pusha
dec
movsb
fisubrl
out
leave
adc
cltd
loopne
aad
mov
mov
call
sahf
lods
aad
movsl
jmp
test
push
filds
ret
imul
cmp
cmp
adc
mov
fsubl
orb
insl
dec
mov
lods
in
pusha
lods
fdivs
inc
test
insb
test
xor
dec
insb
mov
call
add
ror
push
xchg
mov
dec
je
cwtl
xor
push
in
fisubs
fadd
in
jne
and
or
jae
xchg
int3
vmovdqa
aad
push
mov
orl
imul
jns
fwait
divl
mov
mov
out
popa
cli
pop
dec
dec
sbbb
or
pop
pusha
mov
cmc
outsb
xchg
icebp
lds
insb
movsl
dec
jno
jecxz
jno
mov
fstpt
jg
xchg
rcl
fstl
movsb
jge
inc
push
mov
sub
pcmpeqb
mov
adc
mov
jp
xor
pop
pop
sbb
daa
pop
cmp
add
pop
push
jmp
pop
xchg
adcl
pop
mov
adc
xor
pop
jb
mov
leave
xor
ror
xor
or
arpl
adc
movsb
xchg
mov
inc
ja
popf
movsl
jae
mov
mov
xchg
sub
cld
inc
xchg
mov
push
movsl
mov
aam
pusha
jge
xchg
cmpsb
or
xlat
cmpsl
mov
pop
sbb
mov
mov
insb
iret
sti
mov
sub
std
js
sub
add
shlb
or
fcoml
fldt
les
pop
repz
mov
test
lea
xlat
fildll
das
notl
out
mov
pushl
roll
std
stos
stos
pop
sub
pushf
hlt
mov
cmp
xchg
mov
shlb
movsb
xor
imul
cmp
cltd
popa
popf
insb
pop
cmp
push
jmp
xchg
aad
fdivrs
mov
loope
adc
je
pop
mov
or
in
mov
inc
jo
mov
mov
mov
jne
jecxz
bswap
icebp
scas
inc
push
pop
fnstenv
int
outsl
push
xchg
in
add
aam
and
in
xlat
shll
sarl
push
add
jnp
pop
mov
mov
adc
mov
test
xor
out
lods
insb
aaa
shll
sbb
ds
mov
mov
in
cmpsl
and
movsb
add
cmp
add
or
mov
aaa
jmp
jecxz
or
sbb
jmp
mov
nop
dec
cld
mov
mov
or
je
outsl
mov
flds
mov
pop
sarb
repz
fldln2
loope
insl
xchg
cli
or
xchg
pop
jmp
imul
mov
jle
filds
mov
sbb
imul
scas
mov
xchg
pusha
xor
push
fs
cltd
xchg
std
adc
xlat
arpl
jle
dec
dec
cmp
or
int3
popa
or
icebp
mov
ljmp
std
inc
adc
jbe
xor
sbb
idivl
rol
dec
push
sub
out
mov
inc
jp
xchg
mov
aad
xor
sub
lcall
mov
pop
test
mov
xlat
sbb
pop
dec
xchg
pop
repnz
sub
xor
cmp
sub
adc
fldl
pop
mov
sti
xor
dec
xchg
or
fistpl
in
loope
and
add
cltd
sahf
out
ds
int3
sbb
aam
mov
inc
in
xchg
pop
adc
fcmovu
push
pop
sub
jmp
lahf
xchg
gs
dec
xor
xchg
sbb
sub
les
xchg
inc
popf
addb
cwtl
stos
lcall
or
or
or
inc
sbb
lret
push
add
leave
mov
shll
ljmp
mov
xor
jmp
lahf
mov
sarb
daa
lods
jb
scas
fstps
in
sub
adc
or
aad
into
sub
inc
dec
data16
mov
shl
sub
mov
mov
fwait
add
add
mov
aad
imul
mov
dec
ljmp
cmp
lods
jmp
adc
out
push
xor
cmp
ret
data16
mov
pop
xor
sub
or
xchg
inc
insb
pop
add
xchg
push
movsl
movsl
gs
mov
cmp
push
sub
dec
andb
and
inc
mov
loope
mov
cmp
repnz
gs
lret
sbb
jge
enter
sarb
test
mov
fcmove
rcrl
imul
enter
ja
in
cmp
lods
mov
dec
pop
in
push
fwait
les
xchg
add
mov
bound
mov
sbb
jmp
push
in
mov
scas
fstl
mov
adc
lock
adc
lcall
out
bound
inc
mov
loop
pop
xchg
xlat
jno
and
dec
mov
jb
iret
cmpsl
scas
dec
sub
jecxz
push
push
lret
lea
jg
or
rclb
lock
or
xor
in
rcll
adc
jl
push
test
test
shlb
call
push
pop
jae
pop
cmp
push
mov
bswap
inc
inc
adc
clc
jge
sub
mov
inc
cmc
adc
xchg
bound
mov
and
insl
insl
jnp
nop
out
cmc
cmpsb
pop
pop
stos
cld
std
sub
sub
sub
mov
or
fdivl
cmp
mov
test
pop
dec
lods
lret
call
or
and
sbb
cmc
dec
les
aad
push
lods
jae
jge
mov
lods
inc
insl
cs
int3
jno
addr16
dec
adcl
stc
idivl
mov
xor
pop
into
pop
es
js
push
push
pop
xor
mov
out
testl
inc
jle,pt
sahf
dec
pop
push
test
push
mov
mov
push
xor
fnstenv
hlt
ss
jnp
jg
dec
mov
hlt
push
outsl
or
pushf
add
mov
sbb
sub
out
push
flds
sbb
in
add
and
mov
push
test
add
es
push
fcompl
lcall
test
sti
push
dec
mov
mov
sbb
push
mov
cltd
jl
test
cmp
push
pop
push
cmp
inc
loopne
cli
and
mov
add
test
scas
sub
adc
ss
outsl
sub
lds
in
push
xchg
int
aaa
in
add
movsl
add
xchg
pop
lods
add
mov
mov
add
sub
jnp
adc
cmp
pushl
outsl
ja
daa
setae
adc
mov
adc
sti
jg
popa
fbld
fwait
pop
leave
ss
cmp
fs
pop
insl
or
mov
aaa
jl
imul
test
popa
in
cltd
inc
ds
mov
jg
jae
mov
sti
pop
test
loop
outsl
push
add
mov
test
icebp
inc
and
aaa
mov
mov
sub
cwtl
xor
push
push
inc
pop
push
std
mov
cmpsb
int
lea
or
push
push
sub
inc
push
dec
inc
popa
test
es
aad
inc
jmp
stc
ffreep
push
sbb
lcall
push
out
gs
inc
jl
pop
sbb
rclb
mov
sarb
cmp
insl
sub
dec
sub
repnz
or
ljmp
push
movsl
sarb
mov
out
fs
jp
jne
push
pop
lods
loop
sub
fwait
push
shl
adc
mov
out
push
add
sub
sub
scas
pusha
es
pusha
pop
dec
lods
dec
sbb
rorl
cmp
adc
cld
ljmp
sub
mov
push
dec
sarl
in
add
out
lret
push
in
push
push
mov
repz
call
aas
scas
mov
cmp
xchg
fdivp
daa
sbb
jnp
dec
jp
mov
pop
adc
xchg
nopl
sbb
inc
lods
sbb
repz
mov
shrl
sub
cmp
lahf
mov
faddl
push
jmp
fldt
push
mov
mov
cmc
push
pop
mov
ret
rolb
rcll
dec
cmp
insl
addr16
aam
outsb
push
pop
add
add
cs
out
aas
mov
pop
insb
xor
or
in
adc
sahf
sub
inc
dec
inc
lahf
add
daa
sbb
std
sub
js
popf
sub
push
int
jle
gs
xor
daa
mov
dec
adc
jle
jmp
adc
aas
fistl
xor
cmpl
dec
rcr
mov
mov
dec
push
aas
or
add
or
lea
subb
addr16
add
xor
push
pop
aas
jmp
xchg
das
mov
cltd
cmp
out
fistpll
stos
cmp
jbe
or
mov
cmp
mov
lds
inc
xor
in
add
rcrb
inc
arpl
xor
mov
adc
sbb
int
dec
pop
ss
or
je
rcll
sti
arpl
push
enter
dec
xor
aad
xchg
push
out
push
popa
test
lods
push
sahf
icebp
lcall
push
pop
dec
xor
and
arpl
mov
mov
fwait
dec
push
jg
repz
in
push
loope
dec
mov
repz
dec
dec
jecxz,pt
shll
adc
jae
mov
push
xlat
call
lret
xchg
scas
push
push
call
sahf
mov
mov
rolb
xor
and
or
sub
inc
mulb
inc
in
addr16
sahf
jbe
insl
push
stos
lret
aaa
fimull
inc
mov
jg
jb
inc
adcl
stos
jp
or
pop
fmull
sti
pop
sbb
inc
aad
sub
test
and
xchg
mov
ja
jge
and
inc
cltd
ss
cmpl
xor
mov
mov
sar
xchg
or
xlat
dec
out
loop
sarl
dec
divb
lds
call
mov
adc
or
mov
iret
push
insb
test
icebp
in
pusha
divl
outsb
popf
fisttpll
pushf
lret
ficoml
inc
lods
pop
inc
push
or
sbb
fstps
mov
mov
pushf
idivl
ret
sarl
push
in
fsubrl
mov
lcall
jae
cmp
adc
imul
pop
jbe
outsb
je
or
push
and
sbb
lods
mov
pcmpeqd
xchg
add
cwtl
sbb
xchg
imul
sahf
loop
hlt
inc
sbb
xchg
pop
in
pop
fldl
bound
xor
scas
pop
mov
mov
mov
daa
ror
and
jo
lods
sbb
ss
dec
or
repnz
cmp
cmp
push
push
int
cmp
jmp
xor
push
adc
shll
addr16
push
fbstp
mov
xor
out
mov
adc
xchg
xorl
repnz
dec
push
insb
cmp
sbb
inc
sti
cmpsl
xlat
andb
div
push
aas
shrb
adc
push
mov
sahf
jno
push
rcll
and
ds
outsb
cld
lds
out
xchg
xchg
cmpsl
outsl
or
inc
jl
iret
cltd
dec
pop
or
mov
dec
cli
cld
sub
out
cli
jnp
sbb
in
fadd
dec
mov
inc
mov
sbb
adc
add
cltd
cli
xlat
gs
mov
popa
rcll
insb
and
jecxz
into
and
pop
push
mov
leave
mov
dec
mov
adc
jnp
je
jecxz
pop
fidivl
and
pop
xor
xchg
test
lods
ljmp
ss
mov
jmp
sub
mov
outsb
xor
fbstp
inc
mov
scas
mov
push
dec
enter
push
inc
popf
xor
add
aaa
pop
xor
insl
cmp
mov
out
fs
ljmp
std
std
dec
jbe
popa
xor
push
jnp
fcoml
inc
push
mov
add
add
lds
bound
pop
xor
aad
inc
loope
cltd
test
std
mov
pop
popa
or
jl
cmp
jg,pt
sahf
adc
push
out
fistpll
jp
test
fwait
push
sub
and
inc
fsubrl
or
insl
dec
imul
inc
fiadds
testl
dec
aas
jecxz
outsl
scas
mov
pop
jb
or
mov
imulb
jp,pt
and
sub
pop
dec
aam
pop
mov
repnz
sbb
in
pusha
dec
jecxz
clc
push
popf
mov
sbb
shlb
pop
sbb
cs
dec
xchg
js
ja
mov
push
or
adc
add
fwait
mov
lds
notb
roll
jno
xchg
jns
pop
pop
adc
sub
dec
mov
vpmulhuw
add
jle
das
inc
adc
push
inc
fnstenv
mov
int3
xor
inc
int
mov
jb
ja
xchg
lcall
jge
mov
xor
mov
loope
test
mov
data16
in
cmp
inc
out
push
or
lret
leave
repnz
icebp
inc
mov
pop
inc
lods
adc
mov
daa
jae
jnp
idivl
scas
mov
adc
jbe
bound
lcall
lahf
mov
fs
addr16
jl
add
inc
aaa
inc
mov
xor
push
mov
ljmp
or
mov
in
pop
push
sub
imul
mov
cmp
mov
mov
nop
fcmove
xchg
fmulp
mov
pop
mov
clc
ficomps
in
pop
lret
aad
imul
push
dec
adc
lahf
jge
mov
out
ja
das
mov
out
or
mov
adc
pop
inc
fsubs
std
mov
pop
cwtl
shll
rcrl
adc
mov
mov
mov
mov
aad
or
pop
cli
push
push
fimull
aad
xchg
mov
mov
cs
xor
xor
lods
sbb
xchg
inc
add
int
mov
jbe
or
inc
xor
roll
enter
stos
aad
sub
xor
sub
jns
fisubrs
pop
push
rolb
push
cmp
negb
mov
sbb
por
ss
lds
xchg
test
xlat
aaa
xor
push
push
iret
in
pop
cmpsb
or
lret
cmp
mov
jge
sbb
imul
int
cmp
imul
xchg
imul
loopne
lods
push
ja
jmp
imul
sbb
sbb
jno
or
cmp
bound
inc
out
out
daa
fstpl
je
xlat
ret
xchg
sub
jb
movsb
mov
in
pop
adcb
test
adc
lcall
mov
add
jmp
or
adc
dec
cmpl
jnp
mov
out
mov
divb
jne
xchg
pop
dec
xchg
xchg
inc
lods
sti
add
push
cli
mov
sbb
ja
mov
cld
stos
xchg
insb
push
subl
add
pop
cmp
data16
in
dec
nop
sub
sar
ja
lcall
and
xorb
lret
clc
jp
push
mov
xchg
jns
dec
cmp
decb
xor
xchg
add
push
neg
inc
jns
int
cmc
es
jecxz
dec
fldcw
push
je
xchg
adc
mov
cmp
sbb
popa
icebp
xchg
je
push
mov
outsb
cmp
js
movsl
or
clc
inc
xor
adc
sub
scas
push
cmp
out
mov
mov
aam
xor
imulb
cld
fwait
add
dec
add
pop
inc
popf
jmp
jnp
lret
and
dec
or
push
or
adc
jecxz
lcall
fwait
and
imul
jmp
dec
stc
aas
fisttpll
mov
fnsave
out
stc
jns
movsb
inc
adc
push
repz
stc
fisubrl
scas
jg
fiaddl
sub
daa
sub
xchg
xor
add
aad
inc
scas
pusha
pop
ds
xchg
je
or
add
adc
push
pop
dec
xchg
inc
cmc
push
sub
test
jbe
xor
sbb
mov
in
pop
test
aad
outsl
scas
mov
jg
bound
int3
or
mov
sub
xchg
mov
lods
aam
pop
mov
movsl
cmc
pushf
loopne
loope
xchg
daa
shr
or
or
repnz
aas
mov
into
out
inc
ficompl
sarb
test
hlt
out
push
pop
lahf
imul
mov
and
sbb
mov
cmp
fidivl
lods
fadd
sbb
sbb
sbb
je
lock
mov
add
inc
pushf
cmpsb
sbb
cmp
push
bound
outsl
add
les
and
sbb
mov
jne
sub
push
lret
jge
mov
test
cmp
push
lret
sarl
test
and
inc
pop
cmp
add
mov
mov
imul
scas
adc
sub
dec
les
jmp
jge
add
add
jmpw
adc
popa
pop
xchg
cmp
imul
push
jecxz
mov
and
jo
push
pushf
sub
push
push
je
xchg
out
addb
xchg
std
xor
cmp
xchg
mov
jae
fmuls
mov
push
push
dec
adc
dec
lods
cmpsb
fists
neg
push
iret
push
in
fs
pop
or
jmp
es
iret
jns
pusha
lret
iret
mov
ds
out
cli
xor
pop
dec
loop
pop
dec
push
lcall
adc
out
inc
loopne
sub
outsb
dec
stos
sub
mov
cltd
stos
sbb
shrl
fistps
test
dec
mov
iret
jecxz
lcall
cmc
fbstp
lds
out
mov
adc
mov
loope
xor
sub
mov
push
mov
std
mov
pop
pop
push
mov
je
popa
adc
cltd
aaa
xor
int3
inc
jp
and
lock
push
stos
popa
repnz
mov
pop
fdivrl
cli
mov
loope
jge
cmp
insb
test
jns
jmp
movsl
pushf
or
push
push
mov
pusha
shlb
xor
mov
mov
stos
xlat
cmpsb
imul
js
fxch
insl
xchg
call
movsb
add
aad
xchg
mov
xor
sbb
out
adc
pop
loope
cli
push
inc
imull
cmpl
pop
mov
and
push
mov
xor
jp
lcall
xchg
cld
movsb
and
and
out
sbb
int
out
std
loop
lods
fsubp
jle
pusha
out
push
xor
xchg
or
out
cld
out
dec
hlt
xchg
fdivl
repnz
jb
cmp
add
sbb
ror
leave
mov
cmp
gs
push
jp
iret
dec
test
cmpsl
xor
iret
push
sub
enter
sbb
pop
pop
jnp
xor
mov
lret
inc
in
cmp
sub
jo
xor
popf
stos
jns
mov
inc
movsb
push
xchg
xor
add
fildl
test
or
fistl
push
fs
popf
lds
push
loopne
lcall
mov
fsubrs
xchg
pushl
fwait
or
and
push
scas
cmp
cmpsl
fwait
mov
mov
outsb
xchg
or
je
call
imul
mov
and
jbe
lret
dec
and
mov
dec
xor
add
mov
rclb
stos
sbb
push
inc
imulb
or
jmp
push
lret
cld
mov
lret
push
test
or
sub
or
cltd
aas
inc
sarb
sbb
imul
cli
jecxz
stos
adc
mov
cmovae
add
and
push
cmp
pushf
xor
ja
setno
cmp
push
push
inc
je
pushf
stos
adc
jb
fmull
jecxz
test
mov
enter
rol
add
adc
rcrl
dec
jmp
mov
push
bound
dec
jo
sbb
jo
jnp
xchg
or
enter
bnd
popl
or
rolb
mov
mov
das
sbb
lds
out
es
mov
push
cmp
fstpl
mov
sub
mov
lock
cli
aaa
cmp
mov
sub
cmp
loope
movl
fwait
mov
mov
ds
icebp
out
movsb
cmp
push
std
mov
jp
sub
lods
lret
sti
cwtl
adc
in
fsubrp
jnp
pop
xchg
dec
sbb
outsl
sbb
lret
sub
inc
lods
div
lret
in
addb
push
adc
lods
jecxz
rcll
push
mov
rorb
aaa
aam
sub
nop
aad
imul
je
xor
in
dec
loopne,pt
adcl
test
pop
testl
jno
movsb
and
out
insl
mov
lock
dec
fsts
in
sub
out
loop
fs
lcall
sbb
mov
or
ficomps
xchg
stos
test
ret
xchg
lcall
testl
jb
add
push
je
push
mov
or
or
jp
sub
outsb
icebp
lcall
mov
cmp
add
leave
hlt
ja
pop
mov
outsl
adc
xchg
or
mov
jb
jno
xor
or
push
dec
cmp
je
fiadds
jp
inc
cli
lods
sub
xchg
jns
mov
fwait
push
add
sub
mov
popf
das
jp
jp
dec
xor
mov
dec
testl
inc
xchg
js
push
outsb
data16
sarb
and
in
nop
hlt
adc
lea
push
cwtl
push
lods
mull
push
mov
adcb
fisttpll
cli
ret
iret
insl
push
shll
imul
mov
stc
inc
in
push
nop
or
sahf
mov
adc
and
pusha
out
movl
nop
dec
jg
lock
jmp
mov
or
adc
in
pop
cld
cmp
lcall
pop
loope
mov
ret
sub
out
rcll
dec
xchg
out
enter
lahf
fdivs
stos
sti
jecxz
jp
int3
jns
sar
imul
daa
push
mov
addr16
movsbl
fs
es
cmp
fimull
cmc
mov
js
xor
pcmpgtw
push
sub
pmullw
cmp
loop
jbe
ja
les
cld
cwtl
adc
mov
mov
or
xchg
bnd
push
sbb
sbb
data16
std
pop
dec
xor
inc
push
addr16
jns
das
jne
aas
pop
or
icebp
movsl
sub
pop
sbb
in
xchg
push
cld
mov
xchg
js
into
sar
xor
sub
cmc
adc
xchg
dec
mov
add
jno
sbb
loopne
int
mov
shlb
movsl
sbb
orb
or
in
add
or
into
mov
cmp
pop
sbb
sub
pop
jle
out
mov
xor
rorl
lahf
jge
ljmp
movsl
sbb
ss
xchg
popf
xchg
sti
pop
into
xor
les
sub
cmp
mov
fwait
imul
repnz
loopne
pop
and
in
fimull
inc
addl
sbb
enter
inc
mov
mov
fiaddl
int
cltd
or
push
xchg
stos
mov
je
adc
add
mov
subl
push
sbb
insl
mov
push
cmp
pop
sub
jb
adc
inc
lret
loop
dec
fldenv
lret
mov
and
loopne
sbb
mov
inc
iret
in
adc
sub
push
pushf
out
xchg
test
in
inc
add
sbb
aad
adc
cmpsb
or
test
push
push
pop
sub
bound
mov
inc
scas
mov
test
add
or
outsl
movsl
les
ror
insb
adc
xchg
or
bound
dec
or
mov
xchg
ficomps
add
addl
push
ja
test
push
into
mov
fimull
ret
inc
sub
popa
loopne
lahf
repz
pop
jmp
xchg
shlb
mov
mov
fcoms
lcall
push
mov
xchg
dec
vcvtps2pd
xor
sub
dec
sub
icebp
mov
fistpl
mov
scas
repnz
mov
jg
lahf
adc
ja
cwtl
xor
cld
in
ficoml
clc
into
in
bound
and
pop
mov
dec
dec
add
ret
mov
push
rcll
sub
scas
ljmp
push
iret
pop
imul
test
jae
popa
sahf
mov
fwait
aad
in
pop
out
xor
sub
adc
stos
xor
jns
stos
insb
and
cmp
add
imul
int
or
lock
mov
xor
sub
push
pop
lahf
inc
push
xchg
out
clc
pop
pop
pop
cmpl
push
icebp
ss
out
xchg
and
push
add
add
sbb
xchg
imul
xchg
das
or
jp
ja
andb
orl
lret
div
mov
mov
dec
or
sub
xchg
xchg
pop
not
and
jno
loopne
xchg
shrb
in
imul
inc
mov
cltd
xchg
cmp
inc
psubsb
jne
cmp
adc
adc
addr16
pop
sbb
jb
stc
test
add
fisubrs
out
sub
dec
inc
and
jg
mov
repnz
scas
ds
popa
negb
cwtl
adcb
ja
ret
cwtl
jo
add
jne
fnstcw
mov
repnz
jle
js
nop
stos
xchg
dec
push
mov
dec
jae
adc
sbb
fucompp
sub
lcall
mov
cmp
mov
stc
int3
dec
adc
add
cmp
cmp
push
mov
roll
jge
sub
jae
mov
outsb
cmpsl
daa
cltd
pushf
mov
xor
daa
sub
push
jbe
jl,pn
sub
shrl
stc
mov
lahf
xchg
xchg
xchg
cmp
minps
mov
dec
lcall
xor
mov
sarl
mov
dec
ret
cltd
dec
js
xor
icebp
add
push
add
add
pop
ja
push
stos
int3
xchg
cmp
and
vrsqrtps
xor
dec
stos
mov
mov
mov
negl
lea
mov
mov
ds
cmpsb
mov
insb
mov
loopne
and
test
inc
add
or
mov
test
jns
enter
iret
jp
dec
stc
pop
push
mov
push
mov
std
addr16
xchg
fs
mov
hlt
push
jmp
in
leave
fsubrl
mov
scas
mov
fstpl
mov
mov
mov
inc
or
or
lret
jecxz
ja
cwtl
cmpsb
call
fstpl
lock
or
inc
and
xchg
scas
pop
mov
mov
iret
mov
fs
mov
xor
es
mov
sarb
pop
pop
not
push
cmp
daa
lds
ja
dec
lcall
ror
pop
daa
push
js
push
cmc
mov
push
sub
lods
inc
fs
lret
iret
jno
test
jecxz
jp
push
data16
xchg
cmpsl
cs
repz
pop
ret
cmpsb
notl
lock
iret
frstor
fisubrl
mov
mov
cmp
ret
leave
cwtl
sbb
jg
add
jg
out
fs
rcll
sarl
pushf
xorb
mov
aam
dec
test
imul
push
stos
and
loop
adc
inc
mov
and
mov
xchg
pop
pop
lret
push
jmp
inc
and
cwtl
in
and
xchg
adc
mov
call
gs
lods
or
push
mov
jne
mov
data16
gs
fsubs
xchg
push
es
jmp
ds
sub
aad
pop
int
arpl
mov
xchg
mov
imul
xlat
fwait
cld
jbe
sbb
mov
stos
inc
adc
sub
dec
push
jp
xlat
sbb
mov
dec
push
lods
cmp
aad
mov
popf
lret
add
repz
arpl
pop
insl
sub
loope
sub
add
cmp
xchg
inc
jge
and
stos
push
mov
inc
cld
push
mov
and
push
or
adc
add
pop
shrb
pop
xorl
pop
xor
data16
jecxz
test
pop
cmp
xchg
inc
test
or
adc
push
xor
shrl
or
adc
dec
cmpsl
jg
ret
push
ret
fsubs
xchg
push
mov
cltd
int3
jmp
push
sbb
stc
shll
jbe
loope
mov
mov
repnz
push
lock
xor
xor
pop
push
cmp
mov
cltd
add
in
das
out
pop
cmpl
inc
xchg
sbb
mov
xor
je
test
pushf
and
daa
fwait
fwait
sbb
sbb
sbb
adc
in
jo
les
mov
dec
fadd
mov
pop
pop
leave
push
and
aas
outsb
daa
jo
push
aaa
out
cmpsl
xor
sbb
fsubs
test
and
dec
shlb
int
pop
lcall
push
or
cwtl
ja
mov
mov
inc
add
inc
loope
sbb
jp
fistl
cmp
push
sbb
out
stc
aad
mov
pop
cmpsb
mov
int
xchg
jg
sahf
push
pop
ret
mov
sub
inc
push
ficomps
sbb
and
movsb
push
push
cs
ss
push
sub
mov
push
cmp
cmp
mov
pop
and
lea
push
dec
inc
pop
sub
stos
pusha
fistpll
lods
adc
push
inc
jge
push
movsl
es
inc
aam
popf
test
fmull
pop
daa
fnstsw
mov
or
outsb
cs
sub
xchg
in
repnz
sbb
sahf
incb
addb
icebp
mov
or
lods
in
inc
dec
call
out
frstpm(287
mov
inc
leave
in
insl
inc
xlat
in
popf
xchg
fsubrl
std
cmpb
outsl
adc
into
mov
repnz
sti
and
aas
ds
fcomps
xchg
inc
push
inc
pop
ljmp
das
ljmp
sahf
push
jns
jl
loopne
add
mov
xchg
mov
xlat
scas
and
and
xchg
int3
adc
lds
pop
pop
adc
sub
int
movsl
mov
or
lcall
push
stc
movsb
shll
imul
inc
out
enter
lret
leave
addl
repnz
mov
xchg
add
in
push
xchg
and
ds
ds
adc
fmul
movsl
xchg
rol
aam
pop
call
push
in
xor
inc
jno
lods
or
and
iret
or
cmp
jne
pop
shl
jmp
roll
cli
sbb
xchg
xchg
push
jmp
add
cmp
mov
xchg
out
mov
enter
icebp
repnz
sub
mov
cmpsb
popa
lods
scas
mov
movsb
into
ficompl
pop
sub
jmp
xorl
repz
pop
jp
outsb
imulb
push
push
out
sub
into
ret
sbb
mov
test
jb
mov
xchg
je
cmc
mov
mov
mov
test
push
sar
xchg
mov
out
leave
cmpsl
push
cmp
mov
in
cltd
int
repz
scas
pop
lret
sub
test
push
inc
adc
imul
push
sbbl
mov
xchg
or
sahf
andb
xor
rcl
jl
lar
mov
cs
ret
dec
sub
cwtl
cmp
pop
int
ja
adc
xchg
adc
mov
push
ljmp
dec
sub
ret
jp
adc
fidivrl
or
insl
cmp
fadds
ret
scas
mov
sbb
and
xorl
and
decl
stc
or
jbe
ret
push
pop
int3
or
outsl
or
pop
push
push
xchg
pop
add
rcr
adc
imul
push
jg,pt
cmovno
stc
inc
bnd
mov
je
mov
cltd
popa
mov
fcomps
push
mov
push
and
add
jno
and
or
test
or
jnp
sub
xchg
arpl
fldcw
jns
push
lods
dec
mov
jle
dec
out
push
push
test
cmp
arpl
int
pop
fsubl
divl
pop
mov
jmp
sub
fcom
dec
add
popa
stos
adc
movsb
pcmpgtd
add
sub
in
cltd
cmp
push
xchg
push
pop
pop
test
push
int3
sub
sahf
rcr
imul
cmp
mov
xor
bound
dec
xor
lahf
jle
pushf
imul
sbb
mov
xchg
jg
jle
clc
pop
push
pushf
jg
jae
out
push
iret
push
jb
ljmp
jns
cmc
ljmp
shrb
mov
or
mov
fists
mov
out
jmp
sar
jo
pop
orl
push
repz
xchg
inc
dec
push
and
mov
lsl
pop
push
push
pushf
loope
push
std
movsl
icebp
pop
fisttpll
jmp
mov
sbb
dec
pop
fsubrs
cmp
push
aad
pop
push
scas
xor
cmc
mov
call
sti
std
mov
leave
push
lar
mov
xchg
flds
shlb
lds
inc
mov
push
dec
lret
out
and
push
cld
push
jecxz
lods
pop
test
xor
call
add
xor
shll
pop
pop
inc
sbb
mov
scas
and
jmp
adc
inc
xchg
mov
lret
icebp
inc
leave
in
cmp
mov
decl
sub
adc
mov
std
idivb
sub
int
imul
and
push
hlt
jo
not
ss
xchg
and
push
movsl
adc
dec
std
arpl
mov
cmp
mov
cltd
fcompl
inc
or
xlat
lret
cmp
in
dec
pop
mov
pop
mov
mov
jnp
dec
clc
sub
push
dec
clc
rolb
jbe
stos
fsubrl
sti
cmpsl
jle
subl
iret
movsl
fs
inc
aam
push
or
loope
ss
and
add
and
mov
and
pop
gs
mov
xchg
aam
jnp
inc
data16
add
lret
ja
gs
fiadds
or
add
mov
data16
pop
jl
stc
aam
jge
movsl
adc
scas
outsb
movsl
fmul
inc
xorb
jg
movl
pop
cmp
pop
sbb
pop
add
lds
insl
call
inc
mov
jo
xchg
fidivs
daa
sub
push
sbb
subb
xchg
stos
adc
dec
sti
or
xchg
ret
xor
or
aad
add
rcrb
or
cmpsb
inc
inc
mov
repz
xor
js
add
js
jp
incb
fcmovb
sti
mov
test
add
jne
inc
add
pop
cmpb
dec
ret
insb
pop
mov
mov
out
or
fsubs
test
cmp
xchg
and
add
cs
stos
dec
enter
add
lds
pop
pusha
icebp
push
in
mov
fildl
sahf
or
mov
or
mov
out
lea
sub
and
xchg
addl
arpl
pop
ret
nop
sub
ljmp
push
popf
push
int
push
sbb
ret
push
lcall
repz
pop
pop
ret
or
daa
aaa
xchg
push
cmp
fimull
mov
daa
xor
adc
inc
in
es
xor
imul
jecxz
movsl
cmp
xchg
mov
pop
cmc
sbb
ss
mov
push
test
into
test
adc
sub
adc
movsl
icebp
rclb
outsb
or
mov
loop
data16
mov
shll
addr16
das
mov
jae
pop
jl
adc
je
lock
xchg
jmp
roll
dec
and
mov
jg
push
xchg
daa
xchg
pop
sbb
mov
inc
nop
xchg
mov
fidivrl
or
add
or
and
fucomip
pusha
test
bound
cmpsl
add
push
in
and
in
mov
ss
loop
and
push
push
test
sbb
mov
div
mov
outsb
sbb
and
sub
mov
arpl
movsb
int3
sub
insb
fisttpl
cmp
test
adc
push
mov
insl
push
dec
insl
enter
ds
rcr
mov
push
inc
xchg
sbb
cwtl
or
inc
push
adc
das
ljmp
lds
add
sbb
cmp
cld
jp
int
xor
mov
inc
mov
xchg
cli
jb
std
xchg
dec
xchg
repz
push
aam
daa
mov
adc
mov
clc
pcmpeqw
and
or
rorl
cmp
mov
scas
int3
dec
cli
or
cmpsb
and
movsb
mov
jmp
dec
xchg
addl
adc
pop
push
or
xchg
jmp
adc
outsl
js
pop
cmp
mov
xor
inc
push
aas
clc
sarb
sub
aas
mov
int3
inc
enter
or
or
xchg
rcll
int3
inc
mov
mov
sub
repnz
movsl
addr16
addr16
scas
pop
pushf
jge
stos
jno
inc
pop
pop
leave
mov
sub
mov
or
sub
sub
cmp
jmp
gs
mov
xor
jmp
push
mov
shl
pop
fmulp
and
rolb
fstps
insl
aas
aam
jbe
adc
lock
pop
sbb
adc
into
int3
ret
or
cmpsb
jg
mov
xchg
test
push
leave
xor
mov
popf
pusha
cmp
or
push
sbb
cwtl
ret
pop
cmp
test
fcoms
jle
sbb
inc
fucomip
loope
cmp
push
dec
pop
inc
sub
int3
repz
sbb
jb
xor
push
test
dec
sub
notl
imul
dec
in
sbb
fldcw
xor
loopne
mov
fwait
mov
or
jle
dec
aaa
int
push
cmp
push
aam
cmpsb
test
mov
outsl
into
jle,pn
gs
enter
add
shlb
clc
sbb
push
es
jns
sub
rcll
mov
push
je
xchg
ss
or
cmp
lods
rorl
sti
xor
shrl
je
sbb
out
cwtl
in
jle
ss
add
inc
pop
inc
fdivrs
or
ja
aam
mov
add
inc
stos
push
inc
cs
sub
sub
sbb
data16
and
mov
pop
jbe
and
dec
mov
adc
sub
push
insl
sti
xchg
pop
enter
jle
cmp
dec
inc
mov
cltd
sub
mov
jae
enter
movsb
loopne
lea
xchg
lds
mov
je
fst
lret
cld
xchg
push
cmp
pop
jg
aam
lea
mov
lea
and
cmc
xchg
inc
or
mov
add
shld
jb
popf
cmp
dec
fists
jg
xor
cli
xchg
add
out
xchg
aad
mov
pop
mov
lock
imul
jge
repnz
pop
cmp
fidivl
sub
movsb
mov
cwtl
sbb
pop
or
or
pop
cld
movzbl
aam
cmp
lods
stos
iret
test
and
pop
aam
sti
bound
adc
orb
outsb
repz
mov
test
mov
imul
xor
sub
bound
jmp
je
dec
fdivr
lods
stc
scas
jo
mov
inc
mov
sbb
mov
fsubr
sbb
imul
jmp
jecxz
out
fs
jge
xlat
jge
mov
jle
shlb
mov
stc
xor
and
dec
mov
xor
jae
lret
inc
xorb
movsb
mov
mov
mov
jp
out
push
cmp
and
test
mov
push
push
dec
xor
adc
xchg
mov
push
les
cmp
jno
addb
enter
leave
xchg
dec
sbb
shlb
ljmp
jo
repnz
inc
mov
stos
or
xor
psrlw
add
sar
jo
xor
jbe
xor
inc
mov
and
inc
pop
hlt
enter
iret
ljmp
add
fwait
sti
scas
pusha
mov
cli
lods
stos
mov
mov
repz
dec
je
push
repnz
data16
and
cmc
inc
into
dec
push
dec
sbb
test
jmp
push
pushf
inc
jg
aaa
mov
inc
stc
pusha
mov
xor
push
push
data16
lods
leave
dec
lods
shll
in
mov
sahf
xor
sti
scas
mov
pop
fisubs
out
pop
aad
pop
enter
das
pop
mov
shr
cs
mov
outsb
or
pop
mov
inc
out
cmpb
scas
les
sbb
push
push
mov
and
dec
test
mov
fdivs
cmpsl
hlt
sbb
fcoms
push
in
add
xchg
testb
ljmp
scas
cmc
or
cmp
cmpb
movsl
enter
add
dec
pop
pop
push
push
decb
push
jp
faddp
cmpsb
es
aad
lret
nop
mulb
nop
fiaddl
popa
in
jp
and
mov
stos
clc
mov
lods
orb
pop
fcomps
mov
lods
pushf
lods
loope
dec
add
jge
jno
sbb
int3
outsl
mov
movsb
and
xchg
repz
cmp
lret
mov
repnz
mov
test
test
ljmp
mov
inc
cmp
pop
inc
dec
out
ds
mov
scas
push
xchg
xor
ret
mov
push
insb
test
xlat
push
arpl
jbe
jno
mov
push
orl
cmc
in
adc
dec
popa
cmp
fimuls
iret
jmp
test
sub
push
jl
popf
in
lock
jl
and
sbb
lds
mov
dec
and
das
enter
test
outsl
fwait
push
push
arpl
mov
sub
jno
mov
inc
or
cmc
push
inc
cmp
negb
rcl
dec
pusha
add
dec
sbb
cmp
push
gs
cltd
mov
arpl
std
xchg
jge
pop
push
popf
mov
mov
push
dec
fdivrp
stc
outsb
xchg
lahf
jo
lds
sub
aad
xchg
clc
in
xchg
scas
cli
mov
xchg
call
stos
hlt
pop
push
pop
mov
push
push
repnz
mov
dec
lock
dec
lret
lea
loopne
verr
nop
scas
pop
or
lret
dec
adc
inc
pop
subb
push
dec
or
add
sti
inc
fcmovnu
push
jae
shr
or
out
push
inc
xchg
push
dec
in
push
inc
adc
lret
pop
enter
jbe
pop
out
repz
imul
mov
jmp
stos
inc
addr16
push
mov
jns
inc
sti
adc
divb
cs
stos
jae
sbb
sbb
adc
add
pop
test
sbb
pop
mov
mov
sarb
xor
jge
fidivrl
enter
mov
nop
insb
push
stos
stos
adc
int3
dec
rcrl
cmp
inc
insl
icebp
mov
popa
mov
mov
cmp
mov
add
imul
jnp
in
sub
mov
cmpsl
testb
jno
push
aas
xchg
mov
mov
or
lea
out
lock
movsl
jnp
push
or
and
add
or
adc
std
rorl
stc
mov
jmp
pop
repnz
push
pop
mov
dec
mov
ficoml
jns
jge
sbb
xchg
dec
or
ss
aad
sub
push
dec
sbb
jbe
mov
lret
add
or
clc
ficomps
xor
sub
mov
shlb
les
xorb
aaa
push
add
xchg
inc
mov
pop
adc
stos
andb
das
mov
stos
dec
cmp
andb
lret
and
pop
outsl
sbb
loopne
scas
push
bnd
in
jp
outsl
push
xor
add
test
test
inc
cmp
mov
add
add
into
push
gs
sbb
aaa
inc
repnz
cli
cld
mov
rcrb
push
movsw
mov
pop
call
sbb
xchg
repz
mov
mov
fstpt
leave
sbb
mov
fs
leave
push
test
dec
or
lret
or
mov
xor
ret
das
xchg
les
cmc
insl
js
aas
sbb
sbb
mov
popa
shlb
inc
adc
movsb
pop
pop
fildll
mov
cmp
or
pop
jbe
xchg
mov
xor
ret
inc
bound
out
mov
adcl
cli
mov
jg
sahf
pop
and
or
in
ret
xchg
std
cmpsb
push
imul
dec
push
push
cwtl
cmp
cmpsl
cmp
pop
or
and
push
pop
and
sbb
sbb
pusha
lock
inc
sbb
mov
cs
fsub
and
mov
jae
cmp
and
adc
mov
ljmp
out
les
pop
sub
fwait
or
pop
lds
sbb
mov
cmp
scas
icebp
test
in
mov
shl
mov
jae
cmp
cmp
xchg
jo
pop
and
mov
cmp
add
adc
fstps
jne
fildl
xchg
mov
fldenv
pop
or
pushw
dec
shrb
jmp
xchg
sbb
js
ret
mov
testb
and
ljmp
ds
fbld
aas
jbe
and
push
icebp
jns
push
xchg
into
icebp
push
inc
icebp
add
jo
ret
aas
sub
decl
xchg
and
sti
jp
sbb
or
mov
outsb
sub
adc
aam
data16
lds
adc
outsb
pop
xor
psubusb
adc
int3
sbbl
mov
pop
xor
push
test
addr16
xchg
int
mov
test
outsl
jg
sbb
loopne
jne
andl
push
lcall
adc
mov
mov
pop
or
imul
ret
push
cmpsl
shl
repz
push
mov
or
in
xlat
sbb
sbb
movsb
mov
nop
jo
jp
mov
test
mov
or
xchg
fbstp
jae
adc
cwtl
int
sub
jnp
arpl
push
mull
sbb
cld
scas
jno
into
mov
fstpt
lret
lods
out
mov
xchg
mov
or
lds
out
loopne
outsl
jmp
cmp
jae
cmpsl
out
and
add
adc
aad
mov
in
std
pop
pushf
sub
mov
mov
in
pand
and
fnstenv
push
into
pop
dec
cmpsb
lret
cld
mov
loopne
or
cltd
mov
leave
push
int
jmp
lods
scas
cmc
pop
jle
js
or
enter
xchg
jl
mov
cmp
clc
movsl
push
jge
mov
fld
push
dec
dec
aaa
gs
imul
call
js
xor
xor
sbb
xor
cmpl
adc
push
jle
out
push
clc
icebp
and
push
xchg
mov
out
dec
divb
adc
sub
sti
adc
mov
or
cltd
xchg
lods
scas
xchg
push
orl
sub
shll
fucomi
jae
lock
sar
mov
int
mov
dec
les
sub
fldt
xor
xor
shlb
test
or
enter
aaa
pop
push
adc
and
dec
pop
dec
repnz
inc
push
shll
xor
xacquire
dec
jb
orb
cmpsb
aaa
jp
sti
outsb
popf
mov
scas
sbb
xlat
jge
xchg
mov
stc
arpl
xchg
cltd
dec
movsb
jo
vphsubbw
and
in
or
add
loope
test
out
pop
jbe
inc
add
or
lret
dec
arpl
out
xor
leave
adc
mov
aas
lahf
in
cmp
out
test
sbb
or
fcomi
sbb
push
pop
add
and
mov
jecxz
cmp
cmc
xor
mov
orb
push
dec
icebp
cmc
out
loopne
mov
adc
push
mov
mov
cmp
inc
xlat
push
int
dec
pop
sti
xchg
shll
sahf
add
jge
insb
and
lods
or
mov
loopne
int3
cmp
addr16
add
and
add
inc
lods
fdivs
stc
les
ss
out
mov
mov
xchg
icebp
aad
test
cmp
or
fsub
mov
mov
pop
or
iret
orl
sub
cmp
pushf
les
imul
repz
popa
es
sub
pop
outsb
subb
mov
xor
dec
aad
sbb
sarl
ljmp
jno
icebp
adc
data16
sbb
cmpb
int3
or
sbb
lock
ss
xor
mov
cltd
mov
bound
sub
idiv
fwait
repz
and
cmp
and
in
mov
sbb
jae
fstps
xlat
imul
cmp
pop
jae
jo
popf
pop
jb
cwtl
cld
incl
add
push
push
fldenv
in
jno
mul
popa
cmc
insb
pop
mov
fsubs
lret
into
jb
scas
mov
test
stos
mov
pop
push
mov
adc
mov
out
stc
jp
inc
int3
pop
push
xchg
repnz
mov
adc
in
subb
lahf
push
push
mov
imul
push
pop
lods
push
adc
pop
push
in
loopne
fisubs
stos
lret
stos
mov
sub
xor
adc
add
repz
or
and
ljmp
pop
outsl
push
cmp
dec
fisubrl
mov
cmpl
push
mov
data16
cli
mov
sti
loopne
sub
lcall
lcall
mov
loopne
arpl
mov
or
push
or
nop
add
add
mov
or
mov
xlat
sub
mov
test
ret
jge
xchg
test
xchg
push
adc
adc
xchg
jle
cs
lret
fs
mov
into
xor
sahf
popf
sub
ljmp
cld
sub
jmp
jne
ret
loope
xchg
imul
push
sbb
xlat
push
stos
lods
mov
in
es
xor
xchg
fmul
scas
sub
mov
fdivr
inc
dec
ja
jg
dec
fwait
and
jecxz
cmpsl
sub
jo
pop
lock
dec
das
iret
mul
sbb
dec
add
loope
jmp
mov
subb
cli
pop
daa
push
push
or
jge
xchg
fistl
jle
pop
lds
insl
inc
cmpsb
fcomip
dec
rcrl
lret
negb
iret
jb
loope
mov
sbbl
test
dec
aad
xchg
jb
pop
adc
mov
pop
movsl
aas
adc
lea
test
fcoml
popa
adc
adc
xchg
stc
add
jge
pusha
cmp
mov
daa
jp
pop
fdivrl
fisubrl
dec
jge
push
push
dec
push
jmp
ret
insb
or
xchg
aad
outsl
mov
sbb
push
inc
das
add
jo
cmpsb
fisubl
out
mov
ljmp
pop
repnz
or
testl
pusha
in
jo
dec
call
data16
adc
into
xchg
lahf
cwtl
mov
imul
call
iret
xor
ljmp
adcl
insl
xor
mull
loopne
xor
adc
mov
loop
add
inc
loope
out
jae
and
leave
ds
inc
jle
pop
jns
push
sub
sub
inc
adc
fiaddl
ds
adc
inc
mov
imul
fldt
sbb
xor
dec
pop
pop
xor
and
adc
jb
and
jmp
mov
inc
sub
jge
adc
arpl
and
push
pop
in
sti
inc
push
pop
push
cmp
jbe
or
insb
movsl
jne
movsb
xchg
mov
test
push
push
push
sahf
pop
sbbl
mov
mov
ss
dec
add
cmp
clc
dec
push
xlat
mov
stos
mov
sahf
mov
adc
cmp
pusha
push
leave
test
lods
imul
jbe
cmp
jle
push
or
daa
sbb
outsb
ja
sub
fnstsw
push
imul
xor
and
xchg
lret
mov
xorb
test
mov
or
push
and
push
stos
inc
ja
or
iret
jmp
nop
test
or
pop
pusha
out
stc
mov
pop
int
mov
fsubl
rorb
pop
jns
jecxz
inc
adc
sub
insl
movsl
push
or
sbb
adc
inc
nop
fistpl
jg
movsl
movsl
repnz
popa
movsb
jne
ljmp
add
roll
shl
movsb
dec
or
sbb
jae
cmp
ljmp
or
sub
xor
jmp
inc
cmc
fildl
xor
mov
xchg
adc
mov
repnz
adc
jmp
ljmp
mov
bound
push
rcrb
inc
inc
repnz
outsl
and
lcall
push
in
or
xor
pop
aas
xor
daa
call
test
loope
and
es
xchg
ja
test
shl
pop
gs
cld
mov
test
adc
mov
cmp
lock
mov
mov
sub
sub
loop
jge
and
lcall
je
imul
pop
js
jo
mov
enter
jmp
nop
cmp
or
loope
or
push
mov
cmpsb
mov
lea
sub
inc
ja
xchg
jmp
je
add
sub
pushf
loope
clc
mov
call
xchg
ja
and
jg
test
cmp
fwait
popf
mov
push
cwtl
inc
lret
pop
pop
cld
sbb
out
push
sub
mov
or
xchg
orl
inc
clc
cmp
sbb
jae
jmp
rcr
imul
roll
xchg
add
bound
ret
cmp
pop
int
push
in
int
sub
mov
stc
and
pop
mov
xchg
jno
clc
and
insl
outsb
popf
scas
fldl
lods
cltd
ret
push
and
stos
cmp
cltd
subb
lock
and
cmpsl
add
sub
or
push
ror
push
jae
nop
cmp
stc
cmpsb
leave
add
jae
sbb
mov
push
push
pop
cmp
jbe
in
pop
mov
cmp
pop
std
jl
or
mov
dec
cmp
xor
dec
push
imul
inc
mov
clc
in
inc
test
dec
js
pop
or
sub
mov
push
clc
xor
popa
xor
inc
loop
mov
push
cmp
data16
fwait
adc
cmc
iret
xor
lcall
mov
cmp
xchg
or
push
mov
std
jbe
cmp
pusha
dec
repnz
mov
dec
jnp
push
and
test
sub
xlat
andps
fwait
ds
les
inc
in
gs
xchg
sbb
mov
lret
adc
push
pusha
pop
inc
jns
incl
jmp
testb
sub
inc
stc
data16
push
cmp
inc
push
push
or
pop
or
xchg
pushf
adc
jno
mov
mov
insb
xor
aaa
mov
cmp
mov
dec
pop
jnp
out
sbb
andl
ja
cmp
in
aad
fnstcw
test
clc
push
adc
mov
cmpsb
dec
hlt
aam
add
lcall
and
push
jmp
shlb
mov
sub
idivb
lds
repz
push
test
sbb
inc
mov
in
jns
insl
and
jl
push
fwait
xchg
mov
adc
push
mov
insl
leave
xchg
push
push
je
daa
fidivrl
icebp
jl
sub
or
sahf
cmovbe
imul
pop
dec
mov
int3
mov
orb
cmpsl
mov
adc
adc
mov
stc
aas
ja
test
into
mov
or
jg
das
jg
lds
insl
ror
test
aad
jne
or
mov
lcall
mov
sub
mov
sbb
rcll
notl
add
fwait
cltd
inc
and
lahf
scas
xor
aas
jmp
sbb
mov
pop
xor
cmp
dec
xor
mov
scas
cmpsl
je
pop
mov
dec
xor
jmp
lea
mov
adc
bound
jg
int3
pop
push
subl
mov
stos
or
pop
mov
out
movsl
or
mov
movhps
shr
daa
dec
mov
jns
rorl
and
and
sahf
dec
xor
sbb
cmp
in
imul
test
mov
sub
fiaddl
cmpsb
xchg
and
cmp
xor
jle
rcll
and
aaa
pop
dec
test
adc
jo
mov
fdivrp
jle
cmp
jbe
adc
xor
mov
push
cmp
push
xor
push
outsb
jnp
mov
xor
fsts
js
test
outsl
or
data16
sub
xor
xor
pop
ljmp
xchg
js
in
lret
inc
int
jo
jmp
xor
and
ret
jge
jl
jl
lods
repnz
xor
and
sbb
xor
stos
pop
or
xor
push
enter
jo
rcl
and
cwtl
jmp
sub
pop
sub
sbb
or
and
inc
pop
sub
mov
push
add
lock
and
es
lods
popa
cmp
cmp
enter
nop
adc
jbe
es
dec
scas
dec
mov
jno
push
outsl
test
mov
push
popf
movsl
mov
cmpsb
daa
loop
adcl
test
dec
push
ficompl
outsb
jns
pop
scas
daa
or
push
push
insb
pop
pop
pop
xorl
out
pushf
push
xlat
fmull
sub
not
push
xchg
lods
mov
add
das
sbb
push
sub
sbb
sbb
push
adc
pop
in
cmpb
test
cmp
cld
inc
adc
pop
cli
aas
ljmp
rcrl
fnstsw
add
lods
inc
sbb
insl
lods
sbb
xor
mov
and
lods
mov
test
shrl
mov
in
fimuls
fildll
push
mov
ds
dec
sbb
dec
ret
cmp
dec
jmp
lahf
dec
pusha
add
jb
pop
test
incl
aad
je
or
stos
and
mov
push
mov
mull
cmp
jp
mov
mov
and
push
cs
aad
mov
imul
sti
dec
sub
cli
sbb
jmp
rcrl
decl
mov
push
aam
sub
mov
jmp
sbb
ss
push
je
lods
and
xor
adc
push
stc
or
shl
jnp
arpl
call
mov
fsub
xchg
cmpsl
aam
movsl
lds
jecxz
sbb
xchg
push
inc
inc
in
cmp
push
mov
and
and
int3
mov
or
dec
mov
xorl
inc
repz
sti
push
arpl
call
repz
pop
sbb
sti
cmpsb
mov
pop
adc
push
dec
pop
sbb
jae
insb
dec
add
xlat
or
popl
and
loope
iret
pushf
xchg
mov
bound
jo
sub
push
jns
jecxz
mov
stc
cmpsb
lods
mov
movsl
mov
stos
out
xchg
test
cmpb
mov
xchg
sbb
xor
lret
mov
out
pop
jbe
push
adc
xchg
fsubrp
mov
mov
xchg
push
cltd
les
or
bound
pusha
add
lock
xchg
mov
movsb
loope
mov
stc
and
inc
or
call
ds
movsb
lea
ficomps
ja
mov
out
adc
mov
xchg
jnp
test
iret
jge
sub
scas
rolb
xor
xchg
lret
sub
ljmp
repnz
adc
js
int
std
jge
jl
or
mov
cmpsl
jecxz
adc
inc
push
push
cwtl
fs
cs
es
mov
mov
cwtl
cld
iret
stos
push
sbb
cmpsb
in
scas
mov
aam
cs
aad
xchg
iret
enter
pop
aas
and
xor
dec
pop
bnd
out
ficoms
lods
or
jl
sbb
xchg
fidivl
sbb
and
mov
xor
cmp
stos
sarb
stos
iret
add
mov
fidivrs
or
add
out
out
fs
lahf
inc
inc
pop
insb
jae
lods
jne
add
add
jmp
pop
iret
test
addl
sahf
xor
fsubl
mov
xlat
orl
les
loop
aad
mov
pop
shlb
pop
add
jnp
mov
nop
insl
adc
cmp
int3
cmc
lret
mov
fisubrs
popf
ret
ret
cmp
sub
sbbb
inc
push
add
push
cmpsb
sti
fnstsw
test
pop
push
ret
sahf
insl
in
sub
out
addr16
mov
sub
rcrb
pop
addr16
cmp
sbb
rcrl
leave
push
sbb
scas
dec
push
rclb
add
mov
hlt
mov
jno
inc
inc
cltd
movsl
andb
sti
pop
outsl
shrb
mov
leave
lods
test
mov
pop
jmp
or
pop
cmp
adc
sub
inc
adc
xchg
or
push
jg
jle
sub
push
dec
pop
jge
std
push
inc
or
enter
nop
cmp
sbb
cmc
mov
ja
cmp
dec
sub
push
pop
ret
mov
push
jl
pop
mov
lcall
dec
add
mov
dec
aam
jne
or
addr16
jnp
lret
aam
es
fmuls
mov
and
pushf
cwtl
dec
pushf
pop
addr16
xor
insl
mov
fs
xor
dec
lret
mov
mov
ror
aad
pop
jb
popa
push
imul
or
iret
jb
inc
sarb
or
lret
stos
flds
xor
cmc
push
fildll
in
stos
cmpsl
sahf
rorl
insb
test
or
sub
stos
aaa
sbb
das
daa
rorl
lods
jmp
jg
fs
in
ret
push
xlat
popa
mov
push
ret
xchg
test
mov
dec
mov
mov
movsl
jp
push
ljmp
mov
clc
add
fsubrl
xchg
push
stos
gs
jge
pop
xchg
repnz
mov
sub
adc
mov
and
mov
sar
mov
inc
pop
inc
or
xor
xor
dec
sahf
or
sub
xchg
mov
dec
jge
in
sub
test
pushf
dec
jno
mov
loope
cmp
xlat
inc
xor
mov
pop
xor
les
ljmp
test
lcall
jge
jno
arpl
pusha
dec
fsub
clc
test
jp,pt
imul
or
lods
aaa
mov
and
mov
jg
ljmp
mov
fldenv
inc
pushf
dec
dec
push
addr16
or
push
fwait
add
ffree
les
push
inc
lret
or
push
mov
sub
inc
add
xchg
inc
mov
lret
fwait
push
sbb
dec
xchg
stos
mov
sub
sbb
aam
fists
add
sbb
dec
lret
pop
cmp
mov
mov
xchg
stc
leave
mov
cmp
sbb
andl
ret
popa
and
lods
push
popf
xor
mov
mov
mov
ds
jmp
fwait
ret
sbb
sub
push
jmp
inc
mov
negl
iret
imul
pop
loop
adc
call
push
inc
fs
aad
mov
movsb
inc
or
inc
arpl
mov
popf
aaa
mov
scas
cwtl
bound
jl
or
cmc
and
mulb
pop
enter
cwtl
adcb
pop
test
roll
xor
mov
cmp
adc
inc
and
repnz
imul
inc
fcomip
jo
loop
in
cmp
dec
cmp
jecxz
ss
lcall
xchg
fcomi
xchg
subb
lret
lcall
xchg
push
shll
and
mov
leave
push
fsubrs
insl
mov
inc
jge
decl
icebp
in
andb
mov
call
mov
jp
dec
sar
insl
mov
in
jl
xor
jae
pop
ret
mov
pop
push
inc
popa
push
sub
xor
sbb
data16
jb
lcall
mov
adc
cmpsb
mov
lea
add
nop
out
sti
sbb
in
mov
push
clc
xor
dec
gs
or
scas
cmc
leave
dec
jno
loop
or
dec
out
push
shlb
jbe
cmp
cld
lock
push
mov
inc
fstp
xor
into
je
mov
loop
add
cli
icebp
pop
js
dec
das
push
cmp
jl
mov
in
mov
inc
dec
gs
dec
xor
shlb
shll
stos
or
scas
stc
dec
inc
inc
es
adc
push
out
add
mov
test
arpl
fsub
push
movsl
xchg
sbb
xchg
test
mov
iret
subl
stc
jge
and
jecxz
push
sub
cmp
push
add
add
xor
cmp
pushf
movsl
mov
push
push
xorb
xchg
nop
fnstsw
es
sub
cmp
mov
fldt
mov
out
stc
imul
aas
shlb
stos
ds
rcrb
push
stos
mov
ja
int3
push
lods
or
xor
lods
cmpsb
jmp
push
cmpsb
rorl
adc
push
push
or
cmp
sti
xchg
fstl
mov
minps
cmp
lods
jb
add
andb
stos
push
repnz
cmp
shll
pop
imul
adc
cmp
adc
movsl
adc
packsswb
inc
adc
and
inc
std
xchg
mov
sub
test
je
dec
iret
fimull
mov
xchg
and
fisubl
fmull
cltd
stos
dec
popa
shrb
jb
xor
jecxz
in
jne
xchg
and
sub
and
ljmp
shll
fwait
cmc
sahf
pop
fimuls
popf
inc
mov
int3
or
dec
cmpb
sub
mov
xchg
ja
jecxz
cmp
out
adcl
jb
inc
ljmp
xchg
inc
xor
ret
and
cwtl
dec
cmp
call
mov
cltd
push
mov
outsl
mov
cld
int3
push
clc
and
mov
jnp
das
ret
pop
test
xchg
cltd
lahf
sti
out
mov
cmp
xchg
sub
mov
sub
enter
cmp
clc
cmpsb
fneni(8087
dec
cmp
xchg
push
and
push
cltd
mov
hlt
sbb
mov
fwait
pop
daa
je
stos
negb
loop
jecxz
xor
aam
rcl
adc
sub
clc
xchg
xchg
or
lcall
jo
cmp
cwtl
cltd
into
jg
stc
xor
sbb
cmp
sbb
jnp
sti
sar
mov
sbb
xchg
dec
sub
ret
push
mov
jg
xor
jae
aas
sbb
int3
pop
in
pop
jne
xor
rcl
ret
xchg
or
ja
subl
andb
add
jg
pushw
mov
adc
call
xchg
pop
inc
dec
xchg
and
cmpsl
mov
push
pop
mov
inc
fbld
scas
ret
and
xor
dec
pusha
jns
pop
jmp
jne
shlb
stc
dec
pop
xchg
out
mov
sbb
and
cmpsb
inc
das
push
ret
mov
sbb
push
cmp
ljmp
pop
add
push
dec
stc
ss
lds
lods
orb
in
jp
in
dec
adc
sbb
jg
mov
mov
dec
fistl
sub
ret
movsl
mov
pop
cmc
ss
and
or
bound
inc
mov
push
mov
clc
popf
cli
sub
stc
das
mov
sbb
mov
cli
mov
idivl
add
xchg
and
das
mov
adc
lea
xor
dec
dec
lods
or
int
loope
jo
adc
and
aaa
sub
insb
sbb
jmp
pop
lret
popf
mov
cltd
ja,pn
jl
xor
mov
add
jb
jo
adc
add
mov
xchg
hlt
xchg
mov
roll
jmp
or
test
cmp
aaa
xchg
mov
xchg
daa
jl
lock
pop
mov
adc
or
cmp
aas
aam
inc
pop
rolb
add
sahf
xchg
cmp
loopne
and
stos
pushf
inc
icebp
incl
inc
dec
nop
push
pop
call
ret
pop
std
andb
cli
pushf
in
out
ret
mov
scas
mov
and
jo
or
pop
xchg
jne
cmp
lahf
add
idivb
fisttps
push
int
sbb
rcl
lret
add
jno
inc
cmp
pusha
loop
add
fildll
pop
lock
mov
test
xor
add
into
icebp
push
fwait
xor
js
dec
cld
jne
jns
pop
in
fld
aas
sbb
sbb
inc
add
cmpsl
stos
adc
cli
mov
jg
pop
in
bound
pop
into
push
in
sbb
jno
in
loope
out
nop
adc
test
pop
sub
cmp
cs
fdivl
pushf
xchg
stc
es
or
lahf
adc
dec
dec
cmpsb
or
or
out
and
mov
sbb
pop
outsw
xchg
xchg
stos
cmp
cmpsl
out
lret
bound
add
pop
imul
popa
xchg
stc
mov
inc
pop
das
movsb
jmp
mov
push
pop
lret
testl
cmpsl
mov
sbb
fidivs
in
mov
and
cmp
push
loop
dec
mov
xor
in
stc
mov
std
jle
push
jmp
mov
lods
xchg
inc
pushf
pop
sbb
mov
divl
inc
jmp
mov
lock
pop
sub
and
out
jae
mov
push
hlt
or
in
inc
inc
sbb
pop
add
adc
push
aaa
mov
mov
sub
or
xchg
pop
xlat
je
imull
push
adc
xchg
aad
or
lods
mov
out
loop
daa
ljmp
out
std
xor
notl
sub
popf
dec
addl
fsubs
ret
into
lock
test
ret
cs
xor
mov
aad
iret
mov
inc
push
jns
jle
call
pop
fistpl
lret
fsubrs
jns
and
jge
add
repnz
push
lret
fwait
push
mov
shlb
cmp
fdivr
push
pop
or
int3
jbe
mov
fsubrl
push
aas
sbb
add
lods
pop
ja
dec
sbb
pop
test
cmp
mov
xchg
adc
sub
sarl
cwtl
int
jno
pop
or
inc
aas
push
aas
or
jmp
push
sub
pop
hlt
pop
and
js
xor
lods
stc
call
cs
sub
push
pop
xchg
push
cmp
std
loopne
mov
mov
dec
mov
inc
xchg
mov
jecxz
mov
inc
xor
test
les
fdivrs
leave
icebp
push
add
in
jmp
call
lock
je
cli
pop
mov
jo
sarb
fsubrl
gs
push
pop
pop
push
iret
dec
xchg
fidivs
dec
pop
pop
fcompl
arpl
inc
out
arpl
hlt
jbe
out
or
and
lods
sti
dec
lds
out
xor
rorl
lret
pop
or
scas
mov
fmul
stos
xchg
mov
xor
sub
add
add
push
xor
shlb
cmpsl
mov
jo
or
dec
mov
call
in
call
repz
lret
mov
jno
xor
mov
sub
std
or
cltd
insl
mov
sarb
jmp
add
jns
push
sbbl
cmp
rorl
xor
mov
fcomip
push
loop
aam
sbb
add
mov
cld
punpckhbw
push
lahf
ret
hlt
ja
add
inc
cmp
xchg
mov
fsubrp
inc
xchg
ret
push
jmp
loopne
cmp
fdivs
out
aaa
pop
and
enter
push
pop
popl
mov
stos
mov
pop
fs
jge
imul
fnstsw
xchg
jl
mov
icebp
icebp
lahf
ret
in
mov
imul
pop
lods
cld
jle
in
mov
mov
out
jg
popa
inc
sub
test
push
mov
int3
subb
in
adc
clc
lds
fldcw
fildll
aam
stc
pop
pop
xchg
adcl
ljmp
adc
ret
ret
mov
pop
cmp
cmp
dec
in
into
add
dec
sbb
call
lahf
xchg
das
or
fsubp
popa
fldl
clc
fiaddl
jmp
jecxz
addr16
jnp
repnz
mov
and
fidivrl
inc
inc
sub
jge
and
mov
mov
and
pop
inc
je
ret
cmp
loop
shlb
jo
gs
gs
insb
mov
dec
mov
push
jle
push
mov
cmpsl
out
dec
mov
dec
xchg
xchg
pop
imul
fs
sub
adc
je
in
and
mov
adc
les
pop
jne
es
mov
add
xchg
push
leave
enter
fisttpl
mov
push
stos
stos
bndstx
push
mov
scas
adc
cmp
pop
jo
adc
or
push
int
nop
and
xchg
and
push
jle
xor
mov
cld
insb
adc
into
sbb
js
bound
imul
iret
inc
orb
pop
or
adc
jbe
push
ss
sub
shrb
imul
cmc
test
stos
xor
mov
fisubrs
in
or
aad
dec
mov
stc
cld
aam
adc
pop
jae
ja
jbe
fsubrs
insl
pop
aaa
rclb
movsb
movsl
jae
cwtl
sbb
and
xchg
lods
cmp
pop
fcmovb
scas
mov
push
fistl
mov
lea
mov
clc
pop
ss
rcrb
xor
jg
ja
fistpl
testb
iret
fdivs
scas
enter
mov
into
test
sbb
test
fsubs
xchg
cltd
pushf
push
sbb
imul
mov
add
add
inc
cmpxchg
shrl
jb
dec
push
add
pop
or
in
add
sub
call
popa
sub
mov
pop
lods
mov
out
xchg
rolb
std
push
jp
mov
mov
fsubl
out
nop
adc
outsl
adc
insb
fsubrl
cmpsb
outsl
pop
pop
push
mov
xor
es
jp
arpl
mov
inc
stc
loopne
and
lahf
cmc
test
mov
push
jle
adc
mov
into
das
mov
add
mov
mov
jo
and
mov
les
addb
mov
push
push
sahf
cli
dec
or
inc
cmp
sbb
pop
add
dec
push
dec
pop
adc
adc
xchg
out
pop
pop
mov
out
jl
ss
xor
cld
int
imulb
inc
add
lock
xor
or
and
mov
adc
cmpsb
inc
sub
and
cltd
andl
or
add
fists
fnstcw
adc
shl
nop
test
add
dec
jns
inc
mov
sub
mov
iret
add
jle
mov
ss
movsl
push
push
pop
jp
repz
cmpl
repnz
aam
dec
cli
pop
add
out
sti
mov
mov
loope
js
sti
mov
rcrb
sub
ds
dec
aam
ds
adc
sbbl
cli
pop
idiv
popa
cmp
mov
daa
cmp
dec
jle
inc
push
ret
in
jmp
andl
test
and
dec
cmp
adc
sti
stos
cmp
add
in
or
sub
orl
ror
test
stos
idiv
test
sbb
mov
push
scas
push
hlt
push
aad
or
xor
sub
mov
dec
sbb
imul
adc
pop
jl
lds
popf
shlb
imul
test
jmp
xor
lret
das
rclb
mov
xlat
lods
or
fiadds
jo
xor
inc
cmc
mov
or
in
xchg
cmpsb
jnp
repz
icebp
jp
jp
jp
out
aam
shll
decb
push
pop
addr16
sub
cs
dec
jbe
and
int3
dec
out
mov
ss
mov
sub
adc
mov
mov
insb
xchg
rol
mov
jb
arpl
int3
cli
xchg
shlb
ja
mov
test
mov
xchg
jmp
xorl
sbb
cwtl
and
lret
outsb
sbb
cmp
mov
mov
adc
cwtl
jb
inc
jb
lock
sbb
mov
jne
jno
sbb
inc
negl
mov
jne,pn
push
xchg
loope
nop
insl
lret
or
xlat
call
stos
mov
jae
lcall
shlb
xor
inc
jle
cld
dec
imull
repnz
jb
dec
mov
test
push
push
or
out
cmp
and
mov
xlat
out
mov
jmp
rolb
lods
lahf
into
adc
repz
push
int
int3
les
cmpsb
sbb
addb
pusha
loope
scas
jmp
inc
test
sub
cmp
movl
fstpl
sbb
repz
scas
ficompl
loopne
fdivl
jg
push
mov
aam
xchg
out
clc
subl
xor
mov
out
aad
xor
cmp
sbb
loopne
jne
push
leave
js
push
push
scas
add
push
push
testb
data16
xchg
push
cs
adc
in
xchg
bnd
push
popf
cmp
mov
aaa
test
shll
push
ds
sbb
adc
into
insb
jns
fiadds
xchg
imul
xchg
jle
insb
push
adc
imul
and
inc
imul
mov
loop
addr16
or
pop
call
cli
loop
fs
fildll
test
push
adc
aaa
sub
cmp
xor
mov
dec
pusha
pusha
jp
jle
dec
add
negl
movsl
test
ss
cmp
add
push
fcomps
cmovnp
mov
aaa
cmp
or
add
mov
testb
std
es
push
jmp
xchg
dec
mov
ret
int
lods
popf
adc
data16
pop
or
cmp
adc
ss
or
stc
mov
jle
pop
add
shl
jo
lods
ds
into
js
mov
adc
dec
daa
shrl
pop
xor
bound
loope
sbb
mov
es
lock
icebp
out
in
gs
sbb
lret
and
xor
fildll
leave
jl
add
mov
stos
and
ds
mov
jne
fmull
cmp
into
mov
mov
addb
cmp
mov
and
les
es
lods
and
out
mov
cltd
cmc
xor
xchg
mov
loopne,pt
fidivrl
adc
decb
ret
ja
mov
mov
pop
je
pop
loop
iret
dec
mov
orb
cmc
stos
dec
cwtl
or
loop
sub
fsub
outsl
cli
fcom
incb
and
out
aas
xchg
dec
inc
lock
xchg
int3
inc
jb
jge
scas
cmpsb
or
push
add
imul
scas
dec
push
pop
add
stos
jb
pop
iret
xchg
or
push
enter
mov
jno
stos
clc
xchg
xor
ror
clc
gs
add
int3
add
fidivrl
inc
jmp
addb
dec
outsl
stos
in
pop
dec
insb
pop
stos
sbb
pop
dec
shll
ret
jle
in
incl
jb
shll
cmp
mov
test
adc
lods
add
fnsave
sbb
and
push
cld
lds
repnz
add
pop
test
push
adc
cmpl
mov
fdivrl
pushf
outsb
outsl
add
jmp
and
lock
pusha
in
lds
push
or
add
jo
cmpsl
cmp
inc
cld
in
outsb
xchg
notl
fwait
pop
loopne
inc
or
popa
mov
mov
push
test
icebp
xchg
rorl
jbe
das
repz
adc
push
mov
or
xchg
mov
ljmp
or
sbb
or
fucomp
mov
cwtl
or
shll
lret
and
addl
bound
sbb
pop
scas
arpl
mov
out
and
inc
add
mov
sub
cmp
cmp
popa
cmp
jb
out
data16
aam
pop
push
dec
jae
imul
inc
mov
cmp
cmp
sahf
fldcw
out
arpl
and
or
stc
stos
mov
push
add
gs
xor
inc
jae
add
push
jge
mov
js
adc
fsts
clc
lock
xchg
bound
dec
cmpsl
dec
add
scas
roll
xor
pop
cmp
push
xchg
mov
ja
dec
bound
dec
jne
mov
mov
xchg
clc
js
enter
cmp
cli
fldl
lods
sbb
and
cmp
jge
xchg
add
lods
jnp
jmp
ljmp
js
push
sub
xor
jp
mov
pop
cld
mov
pushf
or
xor
cltd
cld
lahf
sub
jno
addr16
test
cmpsl
clc
mov
mov
inc
jae
out
cmp
dec
or
cmp
ret
dec
mov
inc
ret
lcall
cmp
fmull
cmpsl
pushf
cwtl
loop
sbb
push
cltd
ror
lahf
nop
and
pop
mov
add
push
xchg
sbb
jg
adc
cmpb
pop
cwtl
pop
push
fwait
shlb
sbb
push
rolb
lret
push
sbb
jp
jnp
sub
repz
fmull
cmp
loop
adc
cs
push
fists
pop
fs
cmp
int3
push
jg
idivl
dec
pop
in
and
jl
cmp
ss
sub
or
in
test
push
pop
popa
aas
jne
push
stos
add
ds
lahf
bound
jno
scas
push
xor
fbstp
aam
shll
test
out
mov
fcomi
fisubs
jmp
inc
inc
ror
and
inc
out
xor
add
enter
mov
sub
or
call
mov
outsb
push
jns
jl
data16
jecxz
mov
mov
xor
sbb
ja
out
cld
add
hlt
rcrl
daa
das
stos
push
sub
pop
jo
add
fwait
cmp
lea
lret
inc
repnz
pop
and
push
loop
cmc
sub
aad
push
sub
rclb
pop
loope
push
xor
xchg
lea
shll
dec
sbb
leave
ret
out
das
mov
js
int
fstl
imul
repnz
ret
cmp
push
xor
scas
pop
adc
push
cmpsb
adc
sahf
rol
mov
aaa
add
int3
fdivrs
xchg
pop
les
popf
and
out
sbb
mov
aad
mov
push
mov
sbbl
ret
es
dec
add
data16
iret
xchg
or
repnz
cltd
je
xor
xor
gs
pushf
fwait
enter
aam
aad
dec
fs
mov
jmp
adc
push
cmpsl
call
cmp
das
pop
pop
lock
ret
sbbl
pop
fldenv
dec
pop
or
jle
fsts
ret
repnz
dec
testb
popl
mov
leave
test
scas
mov
pop
push
sbb
ja
inc
adc
xchg
int
adc
push
mov
cmp
sub
sti
xor
xlat
out
leave
mov
mov
jle
aas
mov
lods
fisttpll
push
addr16
ficompl
pushf
test
stos
adc
ja
mov
in
jae
push
xchg
imul
int
and
dec
pop
inc
push
push
loop
xor
mov
jle
pop
popf
sbb
jmp
fadd
and
daa
add
cmp
pop
sub
int
and
add
push
fs
xor
fildl
jae
push
mov
gs
or
adc
cmp
add
in
pop
ja
inc
leave
inc
jmp
mov
movsl
int3
jecxz
pop
rcrb
dec
cmp
push
push
std
pop
fstl
jb
sbb
xchg
push
jp
mov
cs
add
lods
dec
sub
inc
adc
sub
dec
insb
scas
loope
test
mov
jne
mov
leave
fdiv
dec
mov
jne
fimull
xchg
cs
icebp
xlat
and
push
imul
shl
sahf
jns
aaa
aad
xor
ja
xor
inc
bound
xchg
mov
mov
fwait
imul
push
push
jp
roll
jo
cmp
add
cs
adc
jae
repz
mov
and
pop
dec
mov
dec
xchg
mov
xchg
mov
and
scas
and
mov
xchg
iret
xchg
xor
push
mov
lahf
pop
stos
mov
jae
mov
sub
sub
jo
pop
or
lods
outsl
mov
or
inc
and
dec
jae
xchg
inc
jmp
or
in
ficoms
dec
ja
push
xchg
imull
ret
xor
movsl
xchg
mov
shrl
sbb
out
add
rorb
scas
daa
pop
insb
push
mov
cmp
jg
aas
or
out
hlt
lcall
iret
and
movsl
in
and
pop
jbe
mov
ds
cli
adc
loop
xor
mov
cmp
testl
jbe
stos
mov
sub
push
or
je
mov
jae
xor
mov
mov
mov
ss
aam
je
inc
inc
fidivl
sub
mov
sub
ret
sbb
in
mov
loopne
sbb
sarb
jecxz
aad
inc
inc
lods
jb
ss
nop
lret
sub
jnp
lods
pop
mov
push
imul
push
aaa
or
cmp
shlb
movsl
pop
xchg
add
out
jbe
ljmp
jp
out
in
call
lods
adc
dec
adc
cltd
pop
test
sub
mov
shr
pop
std
mov
xor
pusha
mov
jge
and
in
jne
movsl
ja
mov
arpl
ret
clc
fwait
cmpsb
jecxz
push
adc
adc
bnd
mov
cltd
out
iret
scas
and
roll
push
pop
clc
fidivl
mov
dec
mov
pop
cmp
clc
push
mov
pop
mov
xor
dec
movsl
push
sbb
daa
repnz
xchg
sbb
into
enter
pop
mov
xchg
test
push
fstpt
or
ja
and
add
jg
add
in
fstpl
out
mov
inc
xchg
ja
lock
loope
mov
sbb
movzwl
and
fcoms
xor
in
int
mov
repz
add
nop
fisubs
ja
imul
std
dec
xor
das
and
and
outsl
ljmp
sub
mov
push
sbb
ret
jle
inc
and
and
or
jecxz
data16
push
xor
pop
add
into
inc
mov
hlt
lret
jle
push
pop
dec
or
push
pop
imul
mov
out
xor
ret
push
dec
loopne
xchg
mov
shll
xchg
mov
pop
jo
cli
jae
pop
add
out
mov
fisubrl
mov
mov
stc
cmp
fwait
sub
xlat
popf
pusha
cs
mov
or
ret
jns
pop
mov
adc
ret
clc
sbb
iret
outsl
sub
jmp
lret
mov
adc
mov
into
mull
cld
je
pop
jo
sub
xlat
and
xchg
or
test
popf
mov
mov
cmc
jne
xchg
or
movsl
mov
jecxz
fdivrs
pop
loopne
fs
cmpsb
cmp
inc
lock
repnz
jne
mov
sub
or
sub
pop
mov
sub
xchg
test
fisubs
xor
xchg
jno
or
out
test
dec
pop
and
add
or
dec
aad
adc
outsl
mov
xor
dec
push
sarl
mov
roll
dec
push
sub
mov
imul
repnz
add
pushl
bound
mov
dec
sbb
test
sub
sbb
cmp
aam
inc
dec
arpl
shll
jp
pop
sbb
lcall
inc
in
push
push
lret
pop
mov
outsl
xchg
mov
aad
push
and
jge
es
dec
adc
xor
and
xchg
insb
or
jne
mov
sub
or
sub
gs
ds
fsin
fisttpl
jge
dec
mov
imul
xor
jno
loop
lahf
lods
mov
mov
shll
roll
push
loope
mov
sarb
fimuls
test
or
jg
mov
enter
mov
aad
adc
mov
adc
xchg
mov
subl
mov
push
push
mov
dec
sub
ficoml
push
push
dec
inc
pop
jne
out
or
push
int3
xchg
fidivl
sbb
xchg
rcll
jae
xchg
out
lret
cmpb
pop
xor
push
call
dec
jmp
jae
inc
pop
test
in
cmc
sub
sti
cmp
imulb
jnp
sbb
lcall
sahf
cmp
cmp
popa
push
and
mov
fs
and
ret
add
imul
sbb
rorb
call
ljmp
push
dec
and
dec
mov
loop
bound
aaa
das
dec
pop
insl
rcl
add
and
adc
cs
leave
and
insl
std
sarl
sub
mov
aam
outsb
mov
sub
inc
rcrb
push
sub
xchg
popa
cmp
and
out
and
popa
adcb
xor
and
aaa
lods
xchg
insb
stos
inc
outsl
push
in
adc
loope
push
xor
dec
cmp
mov
fiaddl
mov
mov
mov
mov
movsb
pusha
test
test
ss
add
aad
scas
pop
mov
cmp
aad
cmp
pop
js
lds
mov
ljmp
sub
fs
lret
inc
and
push
lock
cmp
movsb
lcall
inc
inc
jae
xchg
lret
loopne
xor
push
sahf
sub
cmp
jne
loopne
inc
repz
jns
lods
mov
in
in
cmp
sti
das
add
cmp
sbb
xchg
add
inc
mov
shl
mov
add
jno
ss
aam
push
add
mov
int3
stc
xor
fldenv
sub
imul
dec
mov
popf
jg
scas
stc
cltd
test
pmaddwd
por
jo
cld
std
imul
or
fbld
pop
inc
and
fcmovnu
dec
dec
mov
add
sbb
out
mov
mov
movsb
dec
mov
mov
imull
and
mov
inc
or
push
stos
cmp
xor
pop
xlat
pushf
cmpsl
in
push
pop
ja
lods
mov
jno
fwait
stos
push
or
ret
mov
mov
fsubl
push
xor
sti
push
jmp
mov
mov
sub
push
in
pop
mov
push
jnp
mov
int3
push
outsb
xchg
push
xor
imul
cmc
sub
aad
sub
into
hlt
cld
idivl
xchg
fcomps
mov
lea
jae
xor
pop
gs
sub
or
cmpsl
cmc
movsb
shll
imul
test
mov
cltd
pop
scas
jle
push
mov
mov
ja
es
scas
adc
inc
cmc
shl
mov
lret
stos
testb
cmp
jne
push
sbb
push
cmp
scas
lea
push
stos
push
daa
and
pop
mov
xchg
xchg
sub
stc
test
icebp
push
dec
dec
cmp
fs
imul
aad
fiadds
repz
stc
iret
enter
xchg
pop
ficoml
loop
push
adc
inc
test
dec
xchg
jecxz
inc
rolb
out
test
dec
xchg
fcos
pop
into
sub
movsl
dec
inc
dec
test
push
int3
cmpsl
scas
fnstcw
mov
or
xchg
outsl
add
sbb
push
sbb
cmpsb
pop
hlt
and
mov
mov
cmp
in
repz
xor
subb
adc
mov
mov
adc
xor
stc
je
lret
in
roll
inc
leave
push
mov
sbb
xchg
hlt
xor
push
jl
mov
pusha
loopne
ret
movsl
mov
mov
sbb
or
jp
mov
fildll
or
xchg
stc
sahf
jo
mov
int3
stos
xchg
lods
cmpsb
movlps
shl
hlt
daa
mov
and
dec
sub
je
dec
cmp
inc
push
pop
in
sti
pop
mov
iret
test
stos
lret
shlb
lods
icebp
inc
sub
and
cld
mov
push
mov
icebp
cltd
mov
cs
sti
mov
movsb
adc
popf
or
push
push
xor
dec
xor
push
adc
cmc
adc
mov
addr16
adc
jecxz
lea
pop
pushl
aaa
adc
and
mov
and
movq
sub
int
jno
call
out
sub
cltd
cmp
push
cmpsb
pop
cmp
push
clc
clc
in
mov
jae
pop
inc
sbb
lahf
sbb
pusha
push
mov
imul
cmp
push
mov
adc
outsb
mov
cld
inc
xchg
jnp
leave
incb
xchg
movsb
aad
add
cmp
fsubs
in
fstpt
inc
fiadds
sbbb
push
insb
and
inc
repz
push
and
mov
out
dec
pop
adc
mov
xlat
inc
ss
insl
jbe
ss
lds
inc
mov
fadds
and
outsl
stos
insb
or
in
jle
inc
das
xor
jle
dec
orb
mov
outsb
aas
mov
adc
popa
call
rorl
jle
clc
cmp
mov
inc
jmp
mov
sets
out
add
add
xorl
fnstcw
add
add
jne
iret
sub
pop
push
popf
jns
sub
cld
jl
xor
push
shrb
push
rclb
xchg
mov
pop
cmp
pop
jnp
shl
push
gs
int
stc
mov
imul
jno
mov
mov
sbb
mov
sahf
inc
cld
mov
sbb
cmp
sub
daa
stos
icebp
sbb
dec
push
sbb
test
pop
cmp
iret
mov
pop
pushf
jno
and
pop
mov
iret
mov
fs
shlb
add
dec
cld
orb
sub
inc
inc
inc
out
jae
addr16
mov
push
and
ret
jmp
mov
jns
cltd
xchg
leave
pop
int
addr16
dec
or
fld
xor
or
cltd
arpl
mov
shlb
iret
in
cmp
popf
dec
and
les
int
divps
int
adc
cld
leave
fildl
mov
inc
dec
push
fcomps
mov
lcall
sti
out
scas
mov
insl
sbb
inc
nop
stos
les
fsubr
rorb
cmp
aam
ret
cmp
gs
ss
daa
xchg
sbb
cld
sub
repz
rol
or
and
ljmp
mov
in
fsts
addr16
call
inc
repz
pop
bound
lds
cmp
mov
insl
rolb
dec
add
flds
xchg
xchg
xchg
and
jge
gs
outsb
rclb
cmp
push
sub
out
popf
cli
and
sbb
push
popa
cld
and
idiv
pop
sub
mov
xchg
inc
mov
das
ss
mov
mov
jmp
mov
jmp
push
imul
out
leave
pop
jae
jl
dec
xchg
push
lods
aas
leave
ljmp
and
push
rorl
out
hlt
push
pop
cmc
fcmovu
jmp
mov
or
jnp
rcrb
jge
inc
jbe
push
mov
adc
xor
pop
cmpsl
and
jb
or
add
shll
sub
xlat
sti
rcrb
or
test
jge
dec
sub
cmc
je
cld
mov
sub
icebp
ds
jg
jmp
sbbb
fs
aaa
add
mov
shl
clc
cmc
loope
sbb
mov
popa
mov
mov
enter
push
outsl
icebp
in
sahf
pop
pop
push
lret
aaa
pusha
mov
xchg
sub
adc
or
or
andl
or
movsb
mov
pop
notb
ss
inc
frstor
dec
add
sbb
and
sbb
sar
jp
subl
mov
cltd
lcall
sub
pusha
sbb
test
fucomi
repnz
mov
mov
hlt
jb
movsl
in
push
push
dec
pushf
sbb
mov
test
hlt
push
mov
stc
xor
pushf
in
les
adc
in
jns
lahf
sbb
jo
and
mov
andl
into
cmp
cltd
sar
pop
adcl
push
xor
push
lds
or
push
into
jnp
push
clc
inc
mov
and
add
fidivrs
imul
jge
or
or
mov
xorb
addr16
push
lods
pop
lods
aad
and
add
fdivrs
daa
sub
push
cltd
sbb
outsb
insl
int3
xor
push
mov
inc
adc
cmp
add
jns
enter
insl
lea
push
lahf
add
cs
jge
push
lret
cmp
cmpsl
aas
dec
mov
xlat
mov
sub
into
sbb
jmp
lods
clc
gs
and
lahf
jae
and
arpl
add
sbb
jecxz
lahf
out
pusha
dec
pop
jl
cld
inc
xchg
shll
lret
into
fidivrl
aad
dec
inc
cmp
rorb
ja
mov
xchg
inc
pop
daa
adc
add
pusha
sbb
sahf
les
sub
inc
or
jne
fstl
and
sub
or
add
gs
pushf
dec
stos
cmp
cli
aas
mov
cmpsl
mov
cmp
fbld
mov
movsl
mov
scas
xor
push
mov
add
out
in
jecxz
das
inc
fwait
rclb
adc
jbe
enter
data16
jecxz
jmp
sbb
cmc
ss
mov
pop
jb
fwait
repnz
xchg
ret
push
cmpsl
add
xchg
addr16
sub
sbb
fucomp
dec
sbb
dec
mov
sahf
push
stos
jl
dec
and
dec
outsb
out
fistl
fistl
sbb
out
jno
push
mov
lods
mov
dec
call
push
sahf
xchg
sbb
push
and
ds
ds
and
mov
icebp
repz
jecxz
xchg
push
sub
fwait
test
xor
fwait
pop
rcl
loope
jno
or
mov
adc
aad
imul
fistpl
adc
stos
shrl
insb
push
mov
sub
ret
sbb
cmpl
xor
repnz
inc
push
inc
fs
arpl
adc
push
imul
dec
mov
lods
push
mov
insl
lods
hlt
and
cltd
out
sub
popa
cltd
in
fcoml
sarb
subl
xor
std
mov
adc
das
test
loope
mov
dec
in
mov
call
xchg
push
and
call
imul
mov
lock
ficoms
mov
ss
test
out
loopne
or
adc
gs
sub
adc
mov
dec
push
jns
pop
and
fistl
subl
pop
pushf
sbb
inc
pop
inc
lods
cmp
sbb
or
and
pmulhw
inc
adc
mov
outsb
stos
xchg
iret
lock
repz
push
jo
add
dec
pop
dec
bound
jp
xchg
aad
lds
shll
hlt
jmp
inc
in
mov
mov
pop
rorb
inc
fisttpll
jns
xor
ja
mov
mov
cmp
add
lea
sub
repnz
into
mov
aad
xchg
fldt
bound
enter
inc
es
or
mov
mov
sub
insb
fldcw
imul
jecxz
mov
test
orl
pusha
loop
mov
inc
stos
es
movsl
mov
ljmp
xchg
bound
fadds
or
and
filds
out
mov
add
addb
or
or
adc
pop
leave
bound
aad
xchg
xlat
test
push
mov
je
jne
push
inc
aas
add
sub
cmc
or
pop
cmp
mov
jb
movsl
inc
push
or
clc
rorl
shll
jno
cmp
and
loopne
punpckhdq
nop
mov
xchg
mov
xor
enter
dec
repnz
repz
cmp
inc
push
mov
pop
stos
shlb
cmpsb
ds
out
pushf
adc
fistpl
adc
sbb
jle
gs
and
add
xchg
mov
jne
adc
xlat
push
mov
dec
pop
push
aam
inc
sub
sbb
mov
repz
push
push
cwtl
adc
daa
jmp
sbb
push
or
lret
xor
or
outsb
aam
loop
push
cwtl
lret
out
sub
std
leave
fistps
jb
push
shrb
mov
je
inc
fstpt
cmc
inc
add
lahf
dec
repnz
pushf
push
ja,pn
and
mov
pushf
add
adc
ljmp
or
and
aad
cwtl
push
stos
jecxz
cmp
cli
in
pop
jns
inc
sbb
mov
lcall
xchg
sbb
jnp
stos
bound
bound
lret
sub
cltd
lahf
hlt
gs
adc
pushl
daa
out
cmc
jae
mov
pusha
ret
lods
out
sbb
rcrb
mov
xchg
xor
sbb
insl
mov
push
scas
sbb
iret
in
push
pushf
aas
arpl
dec
pop
pusha
in
add
lcall
lcall
imul
sbb
lret
xor
fwait
dec
inc
hlt
push
adc
js
stc
jno
sbb
lock
movsl
ret
pop
xor
xlat
outsb
test
cli
sub
fs
sub
cmp
cli
cmc
clc
push
pop
loope
add
cmpsb
dec
movsb
push
or
mov
rcll
gs
clc
dec
sbb
shlb
xchg
mov
scas
fisttps
sub
clc
and
jae
xchg
mov
xchg
mov
fstps
adc
sbb
mov
lcall
adc
movl
jb
je
fsubs
les
fsubl
lea
or
sbb
fs
das
cmp
loop
loop
jb
cmp
test
lock
adc
test
mov
outsl
inc
das
mov
dec
fcoms
inc
movsb
mov
lret
jno
outsl
sbb
cwtl
xchg
mov
nop
leave
sbb
aas
xor
mov
jle
mov
lret
and
and
test
sahf
jo
jp
sahf
into
dec
add
insl
callw
sbb
and
enter
xor
mov
out
push
pop
dec
push
rol
inc
or
xchg
shll
mov
dec
cmp
rolb
lds
cmpsl
lahf
inc
jno
cmpps
xor
call
sbbl
iret
pop
ja
addb
and
leave
and
xor
loope
and
call
mov
jp,pt
loop
jge
cmc
xor
cld
daa
add
and
pop
cs
inc
jbe
xor
dec
rorb
cmp
jbe
push
sbb
push
mov
dec
pusha
lods
pushf
or
or
nop
andl
test
mov
lock
pop
je
mov
icebp
inc
add
inc
int3
data16
rcrb
jae
arpl
pop
pop
repz
orl
into
popa
mov
outsb
clc
mov
sahf
lret
push
arpl
popf
imul
dec
jae
popf
int3
add
cmpsw
xchg
pushf
pop
sub
movsb
mov
mov
sbb
pop
dec
xchg
pop
dec
es
jae
clc
in
bound
push
imul
sbb
leave
pop
lcall
sbb
pop
nop
fcomi
popa
in
pop
cltd
int3
inc
xchg
mov
jle
xchg
test
pop
sbb
aaa
mov
sub
add
call
jg
sbb
test
shl
dec
lods
cltd
lock
nop
int3
xchg
and
in
dec
sbb
int3
add
adc
and
add
pop
insl
outsb
xlat
sub
inc
in
mov
repnz
cmp
scas
test
cmp
jno
scas
jge
fmul
lret
scas
dec
popf
decb
mov
adc
pushf
and
cmp
cmc
pop
addr16
inc
cmpsl
mov
mov
jnp
loopne
lods
adc
test
push
cmp
enter
mov
mov
xchg
cltd
in
in
push
addr16
mov
sub
xchg
adc
dec
inc
push
movsb
dec
int
ret
test
mov
cmp
cmp
stos
push
call
testb
in
sahf
orb
pop
mov
cltd
movq
add
mov
cmpsl
and
push
adc
mov
es
pusha
imul
cltd
and
or
sbb
dec
shl
je
jbe
repnz
dec
out
mov
mov
icebp
rolb
in
add
cmpl
or
in
cli
dec
mov
lds
inc
add
adc
adc
xor
fadd
ret
out
cmpsb
push
cwtl
aas
pop
arpl
das
push
mov
mov
test
sbb
jg
fs
xchg
andb
dec
fisubrs
cmc
mov
pop
andl
scas
mov
xchg
push
inc
notl
cmpsb
xchg
lea
outsl
or
mov
loopw
pop
addb
and
sbb
xchg
mov
mov
das
das
mov
je
pushf
cltd
xchg
call
xchg
jnp
adc
aaa
dec
xchg
mov
jb
addb
jno
loopne
cmp
sub
adc
sbb
sti
xor
dec
cmpsb
gs
scas
jmp
or
xchg
jne
sub
into
addb
aad
mov
jp
xchg
pop
pusha
sub
cmpsl
jecxz
sub
xchg
cmp
pop
sbb
dec
cmp
xor
jge
scas
sbb
dec
rorl
push
inc
jmp
cli
fisubrs
add
dec
sub
out
jl
mov
mov
shr
sub
cmpl
dec
rcrb
fdivrs
push
aam
inc
je
js
ret
pop
lods
loope
adc
addl
lods
xchg
and
repnz
cltd
dec
sub
and
push
mov
mov
mov
and
ret
rcrb
ja
pop
daa
out
ljmp
adc
or
jp
enter
lahf
cmp
push
mov
ss
add
add
pusha
std
cld
fistpll
test
mov
dec
add
pop
movsl
adc
push
out
std
test
xchg
fstpl
lahf
mov
dec
jbe
push
pushf
cmp
nop
push
mov
add
call
arpl
pop
in
inc
repz
insb
dec
adc
cwtl
pop
out
lea
js
movsl
ja
fidivs
inc
push
jl
lock
movsl
cld
jmp
stc
imul
jnp
cli
dec
sarb
inc
and
mov
or
out
adc
inc
xchg
cwtl
mov
mov
arpl
mov
ret
addr16
jbe
xorl
ret
es
fsts
jnp
lea
jmp
jb
jne
flds
bound
mov
addb
lods
push
mov
pushf
stos
add
jnp
inc
aad
scas
or
pop
xchg
imul
sub
imul
popa
int
scas
inc
mov
out
mov
pop
adc
sub
cmp
add
xchg
ret
sbb
fs
call
daa
outsb
clc
mov
inc
fwait
mov
push
js
mov
mov
aad
pop
jle
cmpsl
sub
shlb
lea
push
movsb
xchg
cmp
aad
pop
fisubs
leave
mov
push
mov
pop
xchg
push
pop
inc
adc
sbb
ret
push
sub
inc
mov
in
pop
mov
dec
push
nop
cmpsb
sbb
adc
je
xchg
xor
cmp
dec
xchg
fldt
jl
jnp
jmp
gs
enter
mov
add
or
mov
jmp
xor
mov
jns
xchg
jo
gs
xor
cltd
imul
xchg
push
sarb
sbb
mov
outsb
dec
hlt
pop
int3
pop
xor
outsl
lock
ljmp
jmp
daa
lock
loop
out
jo
jae
or
shll
insb
imul
icebp
xor
inc
js
sbb
inc
sub
cmpsb
adc
inc
mov
push
push
mov
mov
cmc
mov
in
jl
popa
data16
add
mov
jae
xchg
xchg
mov
xchg
dec
cmp
cwtl
xor
push
in
imul
addr16
pop
pop
ljmp
and
xorb
mov
dec
fistps
dec
sub
daa
mov
add
out
or
lods
pop
addl
fs
xchg
jb
fwait
call
sbb
add
adc
and
scas
xor
push
or
cltd
sub
and
imul
push
jecxz
sbb
insl
aaa
mov
das
inc
cli
push
jge
push
mov
mov
inc
dec
das
pmuludq
adc
xchg
adc
push
add
sbb
jmpw
dec
pop
les
and
and
xchg
or
lds
push
lock
push
mov
into
jle
xor
stos
lea
pop
ljmp
inc
fadds
and
mov
mov
mov
mov
xor
inc
pop
push
mov
push
in
xchg
cld
mov
sbb
xor
sub
mov
dec
pop
jo
in
shl
push
jmp
insl
jo
leave
das
xchg
shlb
cmp
test
lds
dec
scas
xchg
ds
into
outsb
test
sahf
sti
lods
mov
push
daa
fistl
fcoml
cmpsl
jl
insb
adc
mov
jo
in
hlt
int3
pop
adc
fiadds
xchg
mov
aaa
pop
add
fldl
and
mov
push
push
jle
pop
in
lds
addb
out
mov
aaa
mov
pop
sub
lods
pop
shrb
sti
pusha
jl
xchg
pop
lret
mov
sbb
enter
sbb
xchg
jecxz
xchg
push
xor
cmp
mov
push
mov
cmc
sub
dec
lret
sub
lock
test
in
mov
or
xor
push
mov
sbbb
mov
adc
cmp
xchg
divb
add
lds
cmc
sti
xor
je
loop
mov
imul
scas
out
xchg
sbb
xorb
add
les
lcall
or
roll
mov
imul
idivl
aas
push
stc
repnz
sbb
lret
cmp
les
mov
aad
ret
dec
cwtl
popf
clc
mov
adc
xchg
popa
lret
pop
fisttps
test
mov
rol
ss
sbb
out
imul
xlat
pop
les
inc
leave
mov
shrb
in
lods
cmc
mov
bound
xchg
add
call
adc
imul
cli
push
fidivrl
sub
and
mov
dec
mov
fst
inc
and
pop
sti
fidivs
adc
fisubrl
cmpsb
add
faddp
ret
fsts
adc
push
loopnew
pop
cld
inc
test
pop
addr16
scas
or
and
adc
jmp
icebp
les
movsb
sub
cmp
mov
add
scas
jno
xchg
push
popa
sbb
in
mov
push
or
inc
pop
dec
push
xchg
adc
mov
cmp
cmp
arpl
xor
cld
jo
outsb
lock
hlt
xchg
push
dec
out
fcompl
or
movsb
pop
inc
adc
ret
pop
adc
shlb
cmp
xchg
cmp
mov
ror
mov
or
test
mov
lret
outsl
daa
sar
stos
test
and
aam
add
cltd
mov
mov
aad
scas
js
dec
movsb
adc
loop
addr16
push
call
pop
mov
enter
js
add
hlt
bound
inc
xor
mov
mov
cmpb
sbb
push
mov
pop
ror
cmp
sub
dec
leave
ds
sub
mov
pop
or
pop
out
xlat
cmpsl
dec
mov
imul
in
stos
lahf
mov
imul
mov
xchg
sarb
jge
mov
add
inc
mov
fmul
sbb
pop
mov
fstps
ret
mov
inc
push
jmp
mov
or
clc
jp
xlat
sub
int
adc
addl
rclb
lcall
out
scas
out
repnz
mov
jecxz
loop
dec
cmp
add
add
and
mov
ficoms
outsb
pop
std
jo
popa
fildll
int
adc
fnsave
aaa
sub
adc
pop
jp
int
jecxz
gs
movsb
hlt
dec
push
and
aam
jle
mov
sti
adc
pop
lds
sub
or
xlat
pop
sti
sbb
stos
and
inc
aam
xchg
mov
mov
pop
xor
in
loopne
orl
cld
inc
ret
aam
add
sub
xchg
mov
fxch
adc
jne
lea
test
ret
sub
inc
add
pop
testb
mov
sub
sub
mov
xor
add
fbstp
push
inc
in
or
movsb
sub
mov
xchg
loope
test
loopne
rorb
faddl
adc
push
dec
sar
lods
lcall
shll
cmp
sub
push
jns
push
push
je
fdivl
jg
aaa
gs
das
xchg
inc
dec
xor
lea
inc
push
xlat
xchg
lcall
fwait
je
andb
fs
xor
xlat
pop
push
jno
xchg
xchg
sar
jns
int
adc
shl
inc
pop
lret
fdivs
cli
imul
adc
mov
nop
data16
xchg
inc
jg
xchg
int
stos
push
mov
adc
repz
inc
xchg
les
push
lock
incl
movsl
xchg
in
push
pop
enter
insb
cmp
dec
lods
mov
cmpsb
icebp
rcrb
je
and
popa
cmpsb
lret
mov
pop
jle
dec
sti
cmp
jnp
in
mov
jl
dec
ret
cld
pop
ja
mov
sub
int3
test
adcb
sbb
mov
jb
subl
fs
pop
add
es
jno
sub
adc
pop
test
out
xchg
stc
in
daa
loop
test
inc
fdivp
add
jae
xchg
jo
cmp
jns
out
aas
fcom
gs
adc
push
mov
stos
sub
adc
jbe
sarl
push
dec
sbbl
sbb
call
popf
push
test
jno
ds
int3
mov
pop
test
sbb
iret
sub
rcl
shrb
sbbb
aaa
sbb
fdivrl
sub
push
xor
adc
fldcw
adc
pop
fdivp
scas
sub
rcl
sub
inc
mov
push
shll
cld
add
xor
outsl
popa
mov
push
rorl
int3
ljmp
and
imul
popa
mov
aaa
add
icebp
das
mov
jne
pop
adcb
ljmp
inc
loopne
cmp
movsb
repz
test
dec
push
in
pop
cli
push
xchg
or
ret
inc
adc
adc
lret
call
sbb
inc
mov
mov
iret
lock
dec
scas
ljmp
arpl
pop
add
mov
inc
lds
add
fsubrl
and
add
add
addb
mov
xchg
ja
aad
imul
mov
inc
cmp
test
adc
cmp
push
aas
add
popf
div
and
aaa
out
and
push
sarl
pop
mov
enter
pop
adc
dec
push
ja
jecxz
mov
add
mov
sbb
push
cmp
idivl
push
dec
arpl
mov
out
mov
inc
pop
shrb
or
adc
in
and
mov
and
xchg
mov
mov
ja
mov
pop
or
jae
xor
arpl
repz
or
ljmp
mov
mov
rolb
out
adc
rcll
das
shll
lahf
fsts
jmp
mov
dec
pop
dec
shr
nop
repz
cmp
shl
and
jno
cmp
xchg
adc
inc
fisttpll
add
lock
mov
cmp
push
lret
mov
out
fsubs
and
mov
pusha
int
push
mov
out
xchg
jmp
sti
repnz
sbb
clc
mov
lods
cmp
add
rcl
and
mov
outsb
dec
mov
sub
loopne
xor
inc
jl
repz
rolb
and
push
sbb
or
pop
pop
outsb
push
cmp
mov
punpckhwd
jg
push
fdivs
sbb
and
mov
insb
nop
lret
icebp
or
or
add
dec
cmp
mov
rol
xchg
mov
jnp
add
pop
ss
ja
es
ret
lahf
fs
push
orb
jp
sub
mov
clc
int3
cwtl
nop
outsl
nop
ss
xor
in
test
insb
mov
xor
jl
xchg
add
notl
pusha
fs
mov
push
inc
imul
xor
dec
outsl
jmp
mull
cmpsb
sub
jle
pop
and
popf
xor
clc
mov
and
fcmovu
jns
pop
mov
in
mov
dec
int3
testl
mov
fstp
fs
xchg
outsl
outsl
pcmpgtd
ja
ss
call
inc
les
inc
push
push
call
xlat
mov
jo
pop
stos
jmp
pop
xchg
outsl
not
shlb
xchg
mov
rcrl
fwait
pushf
mov
loop
jns
jne
pusha
xchg
fldenv
scas
fisubrs
xchg
stos
fs
mov
add
mov
movsb
sbb
sub
jge
add
inc
test
ja
pop
cmpl
push
scas
testl
jo
gs
in
nop
mov
lods
out
lcall
mov
and
dec
in
sbb
insl
mov
pop
test
lret
and
adc
mov
and
or
stc
mov
push
mov
movsb
pop
lahf
cmpsl
lret
sbb
and
mov
pop
jecxz
xchg
jnp
xchg
mov
lods
rcl
cli
ja
movsbl
imul
fistpl
add
pop
xor
push
int
out
jge
lcall
call
pop
lret
jl
xlat
mov
es
dec
push
fimull
subl
or
sub
cs
ss
sub
xchg
cmp
addl
sub
cmp
outsb
aas
cmp
daa
std
mov
imul
or
pop
add
xchg
in
pop
mov
clc
cmp
add
test
frstor
outsl
xor
lods
outsl
insl
cmpsb
test
lods
into
adc
int3
adc
stos
mov
add
notl
imul
std
dec
and
dec
add
clc
in
jo
fisubrl
push
sub
icebp
mov
iret
in
cmp
popf
mov
bswap
pop
pop
repnz
loopne
push
ja
fs
sub
or
mov
pop
adc
pop
mov
cmp
ss
xchg
push
je
call
insb
out
jge
cwtl
push
mov
dec
xor
out
inc
daa
pop
cld
insb
cld
jae
shrl
into
fwait
jecxz
fadd
cmp
faddl
in
adc
jbe
inc
loop
ret
jns
push
nop
jno
popf
insl
das
cltd
mov
inc
and
es
aaa
push
stos
xor
inc
lods
ljmp
inc
push
xchg
or
iret
cmp
mov
sub
sub
lret
test
lret
idivb
mov
push
repz
and
adc
stc
push
fldcw
xlat
ljmp
jbe
dec
push
dec
scas
gs
push
push
and
or
xor
mov
cmp
pop
adc
cmp
negl
icebp
data16
pop
imul
dec
or
mov
ja
jmp
jl
scas
inc
fs
sub
xor
imul
jb
out
push
into
out
sub
out
fucomip
sti
dec
mov
dec
jp
jle
ret
cmp
out
in
orl
and
call
roll
jle
or
jmp
add
xor
addr16
repz
pop
ljmp
std
and
jnp
pop
dec
and
sbbb
add
pushf
sti
movl
insl
pushf
jno
xor
jmp
out
subb
outsl
jns
addr16
das
lea
nop
mov
sbb
std
popl
xor
dec
fdivs
stc
sbb
flds
mov
lods
push
xor
xchg
fwait
add
arpl
xchg
fwait
adc
cmp
sbb
hlt
inc
int3
jbe
add
inc
pop
jecxz
xchg
adc
or
xchg
ret
ljmp
jp
adc
mov
pop
xor
lods
mov
cld
and
cmpsb
mov
xchg
cmp
imul
movl
wrmsr
sarb
pop
cmp
inc
jg
adc
lahf
mov
testl
add
subb
repnz
clc
call
push
sbb
ss
repnz
xchg
cmpsl
xchg
xchg
push
ret
adc
shlb
pop
loope
cmpl
aas
jbe
adc
leave
lcall
mov
loope
xor
clc
adc
aaa
inc
scas
lret
jne
ja
jle
clc
adc
jne
push
dec
or
mov
stos
fidivrl
fisubrs
mov
fldenv
mov
daa
add
stc
lock
dec
inc
shl
mov
mov
test
dec
lret
mov
cmp
lock
xchg
in
and
lcall
in
and
ret
sub
mov
and
sbb
jge
outsl
lds
repz
int3
std
dec
xor
dec
cmp
jo
lahf
jbe
aam
fcmovnb
nop
jecxz
sti
movsl
wrmsr
xchg
pop
dec
popa
cmp
xchg
fdivr
aas
movsl
inc
sarb
out
mov
js
enter
insb
and
int
inc
mov
and
jge
cmp
inc
adc
sub
jo
fimuls
jp
mov
dec
xor
inc
aas
cli
push
lds
movsl
scas
int
out
jns
adc
sub
insb
icebp
push
movsb
mov
sub
push
test
daa
std
mov
mov
faddl
mov
ficoms
cmpsl
aad
sahf
jmp
popf
push
or
lahf
sahf
sbb
add
mov
gs
cmp
xor
fldcw
pop
fptan
lret
push
cld
ss
mov
fldcw
movsl
stos
cmp
mov
insl
add
ss
jnp
test
mov
sbb
or
lret
jno
test
xchg
mov
mov
dec
add
push
or
sbb
xchg
jmp
ret
pop
jae
jge
xchg
push
testl
xchg
mov
shl
sub
enter
mov
rcrl
jb
in
lret
int
hlt
jo
pop
xor
push
in
or
xchg
pop
loope
loope
lock
mov
les
xor
or
or
cmp
xor
je
mov
xchg
ret
xor
arpl
dec
dec
fcomp
js
insl
lods
mov
gs
pop
loopne
popf
in
mov
xchg
lea
mov
pop
outsb
mov
xchg
jecxz
inc
cs
pop
cmp
icebp
out
and
mov
cmp
shl
jae
mov
jecxz
rcl
in
mov
cltd
mov
push
or
into
lods
inc
add
js
lret
and
into
outsl
xchg
clc
cld
int
pop
jno
scas
sbb
ss
pop
popa
leave
aaa
dec
cmpl
or
pushf
test
aas
arpl
lea
mov
leave
adc
mov
or
or
dec
mov
sub
mov
add
push
lds
or
or
incl
dec
test
movsl
loopne
pop
mov
into
test
jnp
jle
je
out
dec
or
rolb
repnz
sarb
rcr
test
sbb
jae
cs
dec
and
fisttpll
mov
push
fcoml
cs
aas
scas
adc
add
sub
test
sti
test
and
pop
sbb
mov
jbe
aas
loope
cmpsb
repnz
imul
add
pop
shll
loop
mov
lods
mov
sub
cmpsb
imul
adc
cmpl
dec
adc
cmc
cmpsb
inc
movsl
mov
mov
into
xor
dec
inc
cmpb
or
lods
popf
mov
pop
repz
mov
arpl
dec
push
pop
repnz
loope
jmp
ja
sbb
adc
add
jecxz
icebp
mov
sbb
mov
mov
pop
dec
jmp
fs
ljmp
cmp
cmp
cmp
push
fdivrp
sahf
nop
jno
into
push
dec
cmp
mov
adc
push
mov
add
or
out
into
mov
inc
out
mov
or
pop
shrl
jp
fwait
dec
mov
rcl
dec
push
mov
cmpsb
sbb
xor
mov
add
mov
jmp
cmpsb
dec
push
sbb
nop
mov
lcall
jmp
mov
pop
xlat
lock
mov
jge
rolb
inc
jae
scas
sbb
pushf
call
stos
adc
xlat
inc
pop
inc
or
popf
mov
je
push
jge
mov
jecxz
jne
xor
in
sbb
jg
or
movsb
std
xor
mov
addr16
stc
mov
cmp
scas
inc
add
lret
or
mov
sbb
mov
daa
mov
xor
pop
add
jbe
nopl
sbb
jo
mov
data16
dec
rorb
pop
mov
out
jmp
aam
mov
insb
adc
push
pop
push
mov
cmp
rorl
dec
rcll
cli
data16
push
fst
sbb
pop
mov
mov
shlb
lret
pop
cmpl
in
and
xor
dec
push
inc
pop
in
mov
mov
stos
imul
test
adc
sti
fwait
add
das
repnz
imul
pop
jp
lahf
adc
insb
fisttps
push
imul
insb
lret
mov
sbb
mov
cmp
pop
pop
ss
lcall
xor
cmp
int3
mov
jb
and
ret
sub
push
sub
jle
mov
mov
cmp
out
mov
ret
fcomps
dec
es
mov
sbb
out
or
xor
gs
jecxz
lahf
mov
stc
pop
sub
lret
add
lret
scas
adc
add
out
insb
popa
lods
mov
lock
fldl
fistpl
lds
jg
das
push
js
fcos
push
adc
mov
aas
loopne
mov
push
inc
sub
mov
push
ret
push
cmc
mov
dec
mov
out
lahf
out
leave
inc
sbb
frstor
in
popf
cmp
xlat
imul
or
jne
jl
mov
inc
ja
push
iret
mov
mov
inc
push
aas
mov
pop
add
push
dec
je
test
cmpsl
jg
push
xlat
sub
and
fld1
lods
sbb
fbld
add
jae
cmp
jb
ljmp
cmp
stos
mov
scas
loopne
orl
sti
aam
pop
test
pop
mov
dec
insl
daa
cs
push
repz
push
jae
pop
test
ficomps
pushl
lret
jl
xor
fimuls
jl
sbb
leave
movsb
push
cmp
mov
rcrb
xor
cmp
jge
hlt
jmp
int
xchg
mov
aaa
or
push
xchg
or
ret
push
xor
mov
xlat
negl
mov
add
cli
sbb
je
outsb
add
sbb
dec
popa
inc
add
cmc
jo
jle
movsb
clc
dec
inc
pop
icebp
dec
pop
iret
adc
dec
add
jecxz
aas
sbb
push
push
fucomp
sbb
ds
daa
out
sub
repz
push
push
cwtl
jge
fnsave
in
pop
cmp
and
jnp
mov
lods
cmp
daa
push
sbb
dec
pop
int
adc
and
mov
push
inc
scas
mov
gs
js
sub
rcrb
pop
pop
jle
add
or
sti
jmp
in
not
or
mov
xchg
ss
rorl
xbegin
out
xchg
dec
pop
jmp
cmp
lret
cmc
fcoms
ret
sub
jne
push
cmp
jns
rolb
fsubl
fucomip
sub
mov
jmp
clc
push
inc
inc
adc
daa
rorb
inc
cmp
pop
push
mov
xchg
jnp
idivl
andl
inc
jns
std
sbb
in
xchg
or
xor
inc
cltd
jp
insl
fistps
inc
jne
mov
dec
sbb
push
rorb
cli
push
jns
repnz
neg
loopne
bound
dec
pop
pop
movsl
test
std
shrb
out
outsl
xlat
jecxz
fs
and
test
cmp
mov
adc
jle
adc
xor
cld
and
adc
dec
cli
popa
xchg
jno
flds
pop
xor
adc
fs
cld
pushf
or
jp
outsb
pop
dec
jle
test
push
pop
js
out
mov
orb
fsubl
lret
gs
inc
in
iret
mov
sub
int3
pop
or
in
ret
ja
frstor
or
push
inc
xor
push
and
js
clc
or
adc
out
xchg
or
and
data16
dec
daa
daa
xchg
je
xlat
lret
jp
call
daa
xchg
aas
cltd
jmp
xor
out
mov
push
mov
mov
ret
mov
and
test
imul
xor
pusha
data16
dec
clc
sub
jmp
cmp
xor
call
xor
xchg
cmpsl
mov
sbb
dec
jmp
scas
cli
popf
js
cwtl
push
sub
mov
lea
cmp
add
dec
cmp
sbb
cwtl
stos
insb
mov
call
out
rorb
mov
in
les
mov
and
les
push
lret
jo
push
fsubr
shll
clc
mov
out
sbb
int3
sldt
jne
cmpb
clc
mov
sub
out
mov
fimuls
cmpsl
and
and
jo
stos
ja
pop
je
aam
or
sbb
shlb
sub
aam
xor
push
adc
shlb
addb
nop
xchg
mov
out
pop
out
enter
int3
test
dec
mov
aad
mov
test
movsb
jmp
push
mov
sbb
jp
aam
inc
push
loope
xchg
test
loopne
gs
daa
sbbl
cltd
adc
insb
sbb
pusha
cli
fdivl
pop
pop
mov
lahf
and
popf
mov
add
fadds
push
push
push
stos
pop
xchg
add
sub
jp
xchg
lock
movsl
cli
jnp
pop
xchg
addb
daa
sbb
sahf
mov
xor
jne
aam
jo
lea
cmpl
add
push
xor
rorl
ja
mov
cmpl
push
inc
jmp
cmp
adc
imul
lret
lret
aad
mov
js
xor
fsubrp
and
jbe
inc
sbb
mov
and
adc
add
leave
jl
call
lea
andl
leave
popa
rorl
cmp
leavew
push
inc
sub
movsb
addr16
scas
adc
aas
mov
in
xchg
lds
push
stos
std
mov
iret
loope
cwtl
mov
fldenv
push
popa
jb
inc
adc
jns
fwait
mov
movsb
in
nop
daa
enter
mov
cmc
sahf
cmp
pop
sub
jnp
aas
inc
es
das
cmp
lcall
jo
rcrb
lret
jge
push
cmp
call
inc
fmulp
jmp
cmp
outsl
lret
xchg
stc
push
dec
test
adc
or
pop
jb
cmpsb
or
inc
mov
push
cmp
ret
bound
jmp
clc
or
mov
xchg
jb
call
icebp
pop
push
pop
push
in
std
into
push
clc
cmp
stc
sbb
shll
shlb
sbb
mov
rol
push
testb
lcall
cmp
loopne
int
repz
mov
sbb
sbbb
aam
rcrl
pop
or
inc
inc
mov
mov
and
out
leave
popa
js
ss
clc
push
pop
sbb
jb
jae
sub
mov
push
or
outsl
pop
dec
add
dec
sbb
dec
cli
js
iret
rcrb
adc
dec
dec
xchg
xchg
int
inc
push
sub
or
jbe
push
jae
arpl
int3
testb
shrl
pop
sub
jo
cmp
pop
xor
jbe
sub
adc
lods
lcall
scas
and
mov
cmpsb
cli
mov
leave
addb
lahf
outsl
pusha
ja
testb
and
jbe
cmp
mov
push
pop
incb
daa
mov
clc
in
in
fsts
scas
push
shll
sbb
jo
mov
dec
out
jecxz
lret
test
pop
push
and
aas
test
jmp
pop
in
push
mov
sahf
aas
add
add
dec
and
fs
bound
js
outsb
rclb
sbb
jmp
jae
das
cmp
pop
xchg
and
cmpsl
sbb
popw
jg
rorb
test
in
lahf
movsb
add
arpl
insl
ss
or
push
jle
dec
icebp
ja
subl
jle
stc
lahf
ss
xor
js
xchg
loop
mov
ret
push
ja
std
mov
dec
hlt
mov
push
mov
mov
lea
jns
into
hlt
jo
sbb
xchg
test
cmp
sub
jb
sub
pop
pop
out
dec
mov
out
or
lcall
xchg
inc
dec
jb
sub
addr16
sti
adc
das
sbb
push
fadds
xlat
mov
mov
gs
push
xor
jg
in
mov
sbb
xchg
lcall
sub
nop
cmpsl
sahf
mov
adc
mov
xor
sub
out
shrb
loopne
or
mov
push
cmpsb
cwtl
inc
jmp
aaa
std
xchg
scas
jae
xor
inc
xor
push
and
dec
mov
out
jb
outsl
outsb
int3
subl
sub
xlat
jbe
mov
inc
add
jne
fstl
inc
adc
pop
push
or
or
mov
js
mov
test
xchg
or
dec
imull
inc
pop
push
mov
and
pop
mov
subl
nop
cli
icebp
xor
sub
and
or
daa
out
int
xchg
fists
ss
sbb
or
je
sub
sub
inc
push
cmc
icebp
call
or
call
push
fsubr
xchg
push
add
loope
adc
sub
xor
mov
xchg
mov
pop
dec
mov
les
cld
divb
pushf
lods
adc
mov
jnp
inc
out
cmp
leave
add
mov
jnp
dec
scas
fwait
ror
test
jns
and
adcb
dec
cmp
stos
inc
out
inc
std
pusha
sbb
adc
mov
les
test
push
jmp
fwait
enter
sar
daa
outsb
pop
lds
clc
mov
vpmovmskb
pusha
mov
xchg
rcll
int
insb
push
shlb
je
add
push
movsb
jbe
inc
and
push
mov
inc
je
lods
sbb
daa
outsb
incl
sahf
bound
sbb
sub
sbb
lods
int3
js
mov
lock
or
out
mov
xchg
test
cmp
add
cmpsl
adc
pop
stc
sbb
mov
imul
or
xchg
push
dec
dec
daa
jne
clc
xor
jmp
cmp
xorl
dec
sbb
fwait
xchg
xchg
shlb
and
or
pop
jl
mov
pushf
imul
add
out
sbbl
sbbb
inc
jp
pop
xchg
sar
pop
nop
push
stos
int
dec
push
and
and
jb
jp
jb
sbb
mov
fwait
mov
stos
pusha
addr16
add
lea
test
jge
cli
mov
out
es
add
lods
dec
aaa
push
push
sub
add
stos
xchg
lock
pop
lret
add
out
fstps
aam
jmp
insl
jl
add
mull
mov
push
int3
scas
dec
and
ja
and
mov
sbb
stc
int
fsubp
adcb
test
jg
frstor
push
aaa
shll
adc
mov
cli
orl
out
xor
sbb
mov
jae
in
movsl
loop
mov
in
sub
push
pop
or
fbld
ds
movsb
jecxz
adc
inc
pop
and
out
rcrb
push
sbb
mov
pop
lods
xor
xchg
das
adc
sub
mov
inc
add
mov
pop
or
inc
std
orb
adc
loopne
stos
pop
mov
cmp
cmp
jmp
cld
jo
cmp
mov
addr16
lret
aas
aad
sahf
call
push
stos
int
rcll
add
fisttps
mov
pop
jo
inc
xor
call
pusha
addr16
out
mov
int
sahf
movsb
mov
loop
jp
pop
mov
sahf
int
mov
mov
inc
js
data16
bound
mov
cmp
data16
pop
fwait
dec
push
mov
push
aas
test
cmp
jnp
stos
push
iret
mov
hlt
stos
push
jg
sbb
mov
adc
push
lahf
nop
test
test
lock
dec
adc
inc
adc
xchg
mov
into
mov
cmp
or
pushf
mov
or
jns
shlb
jne
cmp
mov
pop
adc
cmp
or
fwait
andb
push
adc
jnp
mov
negb
jb
in
lea
jp
clc
ljmp
inc
add
les
push
cmp
outsl
push
in
ljmp
out
fidivs
jae
pop
cmc
sbb
xchg
mov
std
fsts
xchg
popl
fisubs
je
pop
ja
push
xor
xchg
aas
xor
in
test
outsl
push
dec
ljmp
adc
mov
mul
xor
ret
stos
data16
mov
test
or
xor
mov
inc
lret
test
movw
add
lahf
dec
std
xchg
fstp
ret
scas
and
shrd
xchg
push
mov
mov
gs
sub
jbe
and
jge
mov
insb
cmp
nop
testl
mov
popa
jle
xchg
leave
sbb
frstor
iret
push
stos
xor
push
mov
pop
xchg
fld
insb
pop
lea
jno
test
test
adc
and
jb
decb
xlat
and
push
jmp
xor
mov
pop
test
out
call
test
xchg
fisttps
mov
movsb
or
mov
call
and
shl
jle
inc
mov
test
lods
das
sub
outsb
mov
mov
jb
xor
fistpl
inc
ljmp
mov
sbb
push
enter
data16
fdiv
ja
int
inc
cmpsl
xchg
mov
and
xchg
cli
adc
push
into
arpl
mov
push
pop
out
lret
jp
inc
sbb
loop
clc
sti
cmc
sub
sub
jle
subl
inc
fldl
call
rol
push
es
dec
jae
ss
out
pop
pop
lret
pop
jno,pn
mov
pop
push
inc
mov
rcll
pop
dec
data16
jae
imul
lea
push
sbb
xor
push
dec
aas
xchg
inc
lea
sub
dec
das
mov
jnp
sti
scas
mov
mov
mov
aam
xor
xchg
cwtl
mov
mov
xor
or
nop
psubsb
or
pop
test
xchg
in
jb
or
dec
adc
ret
fwait
push
dec
insb
cli
or
sbb
inc
mov
leave
outsl
inc
pop
loopne
fcmovb
adc
ret
shrb
dec
lods
fdivrp
push
pause
pop
enter
add
mov
dec
rcl
inc
jmp
lods
into
push
jmp
xor
mov
xchg
mov
lret
add
shlb
imul
mov
pop
scas
xchg
fisubl
rcrl
xlat
in
push
inc
out
dec
jbe
dec
pop
push
out
fstpl
push
xor
nop
push
jnp
xchg
sub
or
xchg
cs
sbb
add
int
movsl
and
xchg
lret
decl
mov
push
push
mov
jge
loop
jb
nop
xor
mov
loop
pushf
seto
test
mov
lds
lret
lcall
push
jns
jle
sub
sub
or
mov
ret
imul
outsl
sahf
push
stos
dec
test
enter
into
insl
mov
cmp
jl
jbe
adc
xorb
pop
icebp
mov
js
cli
cld
lods
xor
pop
push
cmpsl
mov
sbb
test
sahf
orl
mov
rep
mov
sbb
pop
enter
mov
sub
mov
sub
clc
dec
pop
aam
push
adc
sbb
nop
or
cmp
add
xor
add
xlat
xor
lcall
roll
out
lret
shrb
aaa
incl
sarb
cmpsl
dec
lods
or
jb
test
inc
fimuls
rcl
lcall
das
setl
bound
cli
out
scas
xchg
xor
jmp
adc
sbb
push
inc
addr16
push
in
cwtl
popf
or
push
into
mov
jns
xor
dec
jb
dec
shrb
xchg
hlt
mov
ss
jne
or
lahf
or
test
das
inc
loopne
mov
and
cwtl
ja
dec
hlt
ljmp
pop
daa
pop
movsb
mov
cmp
adc
stos
xor
xchg
cli
in
ljmp
mov
jg
xchg
int
aad
jmp
daa
mov
fs
jmp
orb
sahf
notl
sahf
mov
mov
es
inc
clc
arpl
fisubl
fisttpl
push
pop
test
fcoms
mov
push
pop
subb
pushf
fisttps
leave
in
pop
mov
lds
popf
lds
imul
inc
xchg
jns
je
jo
pop
test
jp
push
xchg
add
and
inc
jge
in
mov
xchg
test
inc
mov
fisubs
je
push
pop
out
inc
dec
and
ljmp
int
and
inc
mov
fs
sbb
lret
lret
and
mov
xchg
add
fsts
cmp
mov
hlt
stos
stc
test
dec
mov
popa
lea
dec
add
sub
sub
int
mov
lods
test
mul
loope
adc
incl
xor
shll
inc
mov
xchg
cltd
icebp
adc
sbb
and
xchg
out
call
pop
mov
or
pop
ret
mov
outsl
and
cwtl
jo
cmpsb
or
outsb
pop
sub
inc
mov
outsb
or
aas
jg
sbb
test
mov
aam
xor
ret
fisubrs
xchg
sub
sub
ss
out
and
xchg
mov
repz
loop
and
mov
inc
sub
cmp
xchg
sub
xor
out
jo
shr
pop
xor
mov
cmpl
jne
test
sub
push
and
mov
mov
sbb
mov
aaa
xchg
lret
in
mov
add
pop
outsl
adc
dec
leave
push
loope
sahf
jle
xchg
enter
mov
fmull
movsl
and
out
in
arpl
push
push
dec
cmpsb
mulb
xchg
test
pop
add
jecxz
dec
lods
cmp
shll
adc
rcrb
push
dec
rcll
negl
sbb
inc
inc
scas
sbb
sbb
mov
imul
mov
pop
adc
int
jecxz
adc
push
rorb
jae
rorb
inc
sbb
fsubrl
lret
ja
push
popa
arpl
mov
inc
adc
movsl
xchg
dec
cmpsl
mov
aad
mov
cmp
imul
fistps
sub
into
cmp
mov
mov
enter
cmp
dec
insl
or
clc
mov
shrl
push
inc
pop
pop
cmc
mov
inc
jl
aad
mov
mov
cmp
les
cmp
aam
repnz
cmp
or
mov
pop
and
sub
inc
and
xor
mov
pop
cltd
imul
jo
sbb
cwtl
pop
adc
sub
jb
cmp
or
mov
leave
xor
stos
int
push
or
dec
jb
shl
push
enter
and
dec
xor
nop
xor
fisubrl
cmpl
mov
ret
sub
cmovae
jl
or
dec
push
fidivl
bound
jge
and
les
adc
pop
cli
dec
add
xorb
add
mov
mov
mov
mov
inc
js
cmp
ret
arpl
shrb
jbe,pn
add
movsl
pop
fcomps
sbb
xor
xor
mov
mov
push
mov
cmp
mov
dec
adc
into
ss
sbb
js
push
or
pop
cli
xchg
pop
sbb
xchg
cmp
es
sub
leave
dec
fisubl
in
test
xlat
mov
mov
popf
shlb
mov
test
mov
call
mov
insb
std
dec
loope
ret
xor
push
xor
orl
ss
pop
jae
in
rclb
dec
in
or
outsl
xor
dec
out
adc
sbb
lods
iret
daa
outsl
sub
mov
in
push
mov
push
lods
mov
in
pop
test
clc
shll
jl
shr
push
fisttps
push
in
clc
sbb
aad
cmpb
adc
sbb
add
push
inc
data16
or
sub
mov
sub
test
and
les
fnsave
into
daa
and
stc
aad
in
in
out
imul
adc
scas
in
stos
adc
push
test
adc
rcll
cli
pop
push
shlb
test
xor
pop
nop
adc
jge
mov
sbb
and
rorb
push
cmp
sarl
aad
cli
imul
aam
mov
adc
outsb
pop
mov
std
mov
push
stos
lds
mov
inc
lock
stos
pop
dec
dec
ret
xchg
jmp
adc
push
loop
cwtl
mov
insl
add
in
sub
and
mov
mov
das
push
pop
pop
stc
inc
sbb
push
adc
jne
mov
aas
loop
jae
sub
cwtl
and
fcmovu
fstpl
imul
or
out
inc
lock
maskmovq
negl
pop
adc
lock
lcall
int
pushf
fsubs
shll
add
inc
lahf
pop
rorb
arpl
add
mov
jne
and
imul
and
mov
sub
sbb
xor
loope
lcall
scas
int
in
xchg
mov
popa
sbb
rorl
dec
cmc
test
mov
xor
andl
and
bound
push
movsb
xor
stc
aad
jl
in
loop,pt
adc
in
push
xor
rorl
pop
pop
mov
pop
adc
dec
cmp
jecxz
dec
fs
fcomp
stos
subb
xchg
push
or
jae
push
add
out
push
add
push
push
mov
hlt
xchg
mov
insl
pop
dec
pop
int3
mov
and
mov
sub
mov
fstpt
dec
xchg
push
loopne
and
add
cld
stc
pop
in
xor
int
insl
mov
addb
jl
out
sub
jae
test
imul
inc
and
das
push
pop
iret
lock
test
xchg
or
mov
inc
adc
dec
jae
xorb
repz
dec
daa
mov
and
sub
ret
jno
add
lock
sub
lea
bound
mov
mov
out
fnstsw
jb
push
jp
aam
dec
icebp
shrl
mov
in
jle
ds
inc
aaa
repnz
arpl
xchg
xchg
jo
in
jge
sub
add
repnz
lods
pop
mov
clc
les
pop
cs
push
or
mov
mov
cltd
mov
jle
pushf
pop
subl
pop
inc
loopne
sahf
gs
pop
xor
xorb
sbb
add
lret
ficoms
test
sub
or
xor
pop
xchg
mov
jae
stos
xchg
inc
outsb
sbb
es
mov
sub
jl
popf
mov
bound
jle
cmp
ljmp
sub
lret
push
jae
arpl
sbb
fsubrs
pop
les
jno
xchg
and
push
cmp
sahf
inc
mov
pop
stos
es
add
dec
cld
subb
lcall
das
jns
or
js
inc
mov
jno
in
ret
stos
popl
sub
pop
in
mov
fucom
int3
jle
pop
dec
or
pop
add
jbe
jno
inc
and
ret
mov
pop
divl
dec
mov
or
jae
push
mov
jmp
or
idiv
xchg
mov
mov
push
gs
pushf
add
repz
or
ret
cmc
out
jnp
hlt
leave
lret
or
dec
mov
jns
into
push
inc
fcoml
adc
inc
pop
lret
mov
cmp
sar
cli
pusha
mov
dec
lods
addr16
adc
adc
insb
jae
out
and
adc
test
adc
mov
popf
into
in
cmp
int3
jle
add
jp
lahf
mov
mov
loop
nop
jo
jle
dec
and
ret
add
sahf
mov
xor
xor
push
jae
cmp
pop
jne
push
dec
cs
dec
dec
imul
xor
mov
sbb
mov
shl
daa
add
mov
inc
scas
into
jp
push
testb
cld
xor
out
lods
sbbl
xchg
nop
push
mov
mov
pop
fidivrl
xor
lock
aam
mov
push
sub
pop
insl
pop
inc
pop
imul
mov
es
sub
adc
adc
cli
scas
outsl
bnd
mov
test
pop
pop
repz
lods
sbb
ss
arpl
int
sti
cmp
cmpsb
out
subb
scas
mov
stos
mov
rep
cmpsl
and
dec
adc
and
inc
outsl
in
inc
movsl
push
mov
push
cmp
movsb
rcr
inc
adc
mov
lea
mov
loope
scas
mov
fildl
sarl
setnp
dec
lods
sub
data16
lods
and
pop
inc
push
loop
fs
dec
push
mov
inc
xor
cmpsb
mov
sbb
and
dec
dec
into
std
pusha
nop
mov
nop
xchg
xlat
inc
jae
int3
xchg
test
arpl
push
stos
movb
jl
aam
les
mov
mov
inc
rcrl
mov
es
fidivrs
push
dec
jbe
fs
repz
js
mov
repz
repz
pop
cmc
shll
pop
or
jne
loope
sub
je
bound
pop
leave
sbb
xchg
pop
and
test
faddl
jo
repz
hlt
push
inc
out
test
clc
sub
pop
lahf
mov
jbe
imull
or
xchg
hlt
scas
clc
and
mov
mov
faddl
in
jns
cs
addr16
sub
xor
ja
aaa
fildl
je
popa
lock
jae
or
pop
mov
adcb
pushf
pop
stos
in
cmpxchg
mov
les
inc
popa
loop
push
arpl
add
jg
fidivl
inc
push
xor
xchg
xchg
daa
add
aad
push
dec
rorb
xchg
sarb
inc
je
mov
out
fwait
mov
insl
icebp
mov
into
inc
adc
and
push
cltd
mov
pusha
stos
shll
jg
sbb
test
sub
cmp
sbb
sub
adc
push
jg
xchg
push
xchg
push
out
movsl
mov
lcall
mov
lods
ret
xor
mov
mov
jno
xchg
and
mov
out
xor
lods
dec
mov
xchg
cmpsl
fdivrp
xlat
xchg
js
cmpsb
mov
inc
xor
xchg
int
testl
mov
cmp
add
mov
sbbl
and
leave
in
bound
cmp
popa
mov
push
push
pop
add
adc
out
push
cmpsb
mov
and
test
mov
push
in
sub
fsubl
aad
ss
or
out
mov
xchg
popl
xor
cmp
add
pop
ljmp
adc
subl
mov
out
sbb
push
push
cmp
mov
jmp
sbb
sub
dec
cmpsb
push
jns
push
ja
cmp
sbbb
loopne
sub
test
decb
push
lret
and
stos
fmuls
mov
subb
inc
ret
scas
sub
cmp
lock
notl
in
pop
inc
enter
sbb
mov
push
aas
pop
loopne
jge
inc
hlt
in
push
flds
mov
mov
mov
cmpsb
movsl
leave
mov
mov
mov
les
add
xchg
push
mov
push
mov
enter
insb
scas
int3
fstpt
push
pop
pop
xchg
movl
icebp
pop
aam
adc
sbbb
add
call
repnz
xor
rolb
lds
lock
lea
sbb
outsl
pop
test
push
xchg
rclb
imulb
jl
and
inc
jl
xrelease
repz
xchg
xor
fstps
ret
cmp
cmpsl
fisttpl
xor
in
lahf
loop
enter
sbb
cmp
stos
cmpsb
cmc
mov
cmc
cmc
fldl
stos
sbb
pop
xchg
mov
test
mov
fisttpll
jae
inc
xlat
add
jge
je
ret
push
outsl
stos
js
je
std
or
sarb
hlt
cs
popf
mov
jo
mov
xchg
adcb
mov
adc
es
cmpsb
dec
into
mov
adc
cs
xor
sahf
roll
xor
jo
pop
into
ss
ljmp
dec
add
sbb
mov
push
sbb
sbb
or
lret
inc
pop
mov
push
and
outsb
xor
or
cmp
add
inc
into
jge
aam
aaa
lea
jae
lds
or
shll
mov
ret
pop
sub
outsb
mov
in
lcall
push
dec
daa
adc
xlat
and
pop
mov
push
test
jne
test
ds
push
and
mov
and
add
fiadds
add
mov
lcall
ss
arpl
call
mov
pop
push
loopne
cltd
or
arpl
gs
sbb
fstpt
daa
andb
ds
push
push
or
repz
jl
inc
and
sti
dec
pop
nop
incb
cmpsl
ficoms
insb
sbb
fistpl
leave
dec
and
in
lods
fdivl
dec
arpl
int
mov
adc
inc
mov
and
cli
pop
jns
cs
dec
dec
xchg
subb
cmp
cs
xchg
and
insb
out
jae
clc
in
pop
cmpsl
ja
inc
xchg
jmp
and
int
xor
repnz
mov
cmpsb
mull
xor
cmp
and
dec
mov
cmp
sub
cmpl
dec
ja
js
inc
dec
mov
lret
mov
xchg
jmp
add
and
ds
push
push
in
fsubrl
push
insb
std
insb
rcrl
dec
add
loopne
loopne
popa
inc
mov
stc
mov
jno
pusha
mov
ds
push
stc
outsb
mov
cld
sub
clc
sarb
mov
les
cmp
xor
bound
jg
lret
sti
xchg
lret
hlt
pop
jmp
fwait
das
fisubl
dec
xchg
lock
lahf
loopne
push
stos
xchg
jle
mov
lret
cmp
xor
jbe
mov
dec
xor
jp
mov
dec
loop
mov
xchg
popf
jmp
and
add
push
popf
scas
cmp
sbb
clc
xchg
fcmove
es
and
bound
sahf
mov
inc
or
push
push
outsb
aad
loopne
roll
repnz
pop
cld
dec
push
jns
testb
cmp
lcall
dec
add
xacquire
and
sub
int3
iret
out
mov
insb
fs
dec
jmp
jp
mov
cmp
push
cmp
dec
cli
inc
repz
inc
mov
dec
pop
add
lock
fwait
or
mov
aaa
adc
and
cwtl
adc
ljmp
in
mov
icebp
or
pop
xchg
aad
dec
rcll
arpl
arpl
mov
fimuls
scas
arpl
pop
jae
ja
inc
xlat
cmp
adc
mov
aas
jae
in
mov
arpl
pop
fwait
xor
and
add
movsb
mov
popa
push
in
xor
add
dec
ja
in
sub
inc
sub
mov
jae
ljmp
movb
jg
cmp
lea
fs
mov
lret
add
out
jg
push
pop
mov
ret
xchg
and
repz
push
aas
dec
mov
cltd
sbb
mov
lcall
stc
insb
repz
pop
addr16
jnp
push
shrd
jg
adc
dec
aaa
jne
rolb
loop
xor
mov
mov
in
test
iret
cli
cmp
jmp
dec
sahf
add
out
mov
hlt
cmpsl
xor
adc
jne
xchg
inc
scas
xchg
inc
mov
jle
adc
cmp
cmp
mov
push
dec
push
dec
cltd
jno
mov
icebp
pop
adc
lret
mov
push
mov
jecxz
neg
inc
inc
push
ja
inc
push
or
pop
out
jmp
sub
sub
push
ficoml
aad
jle
push
and
mov
lock
lcall
dec
adc
pop
loopne
std
adc
outsl
push
sbb
cmp
and
iret
rdpmc
lret
hlt
clc
xchg
adc
fbstp
pop
dec
std
xchg
stos
adc
addr16
aaa
mov
mov
mov
xchg
and
ret
fcmovnbe
out
in
push
mov
adc
or
cmpsl
or
push
cwtl
arpl
call
gs
and
jne
inc
lods
mov
out
dec
fiadds
es
cmpsb
lahf
fcompl
cmp
lret
mov
add
outsb
pop
test
stc
or
jmp
sbb
sub
out
lcall
aaa
push
xor
mov
nop
cmp
jb
cmp
dec
add
push
icebp
fnstcw
fcmovu
clc
insl
jg
inc
and
sub
fisttpl
popf
daa
addl
cwtl
pop
lds
mov
sub
loopne
or
outsl
fmulp
insb
mov
adc
sub
aaa
add
repnz
mov
dec
aas
jb
push
push
pop
call
xor
repnz
aam
or
loope
rcr
mov
or
into
gs
lods
jno
div
mov
adc
cmp
cs
es
dec
stc
push
bound
xchg
fdivrl
repnz
enter
stos
fcmovne
xlat
mov
subps
aam
iret
in
fwait
mov
or
stos
mov
or
mov
ljmp
cmp
or
sbb
jg
dec
xchg
inc
jne
mov
out
rorl
leave
inc
ret
or
insb
stc
and
or
sbb
add
xor
add
jmp
mov
and
ds
insl
cmp
add
sub
lcall
push
sarb
pop
addl
xchg
scas
inc
jmp
dec
xor
dec
lods
or
test
cs
icebp
cmpsl
in
mov
mov
dec
xchg
adc
jp
cmp
inc
xor
mov
and
or
pop
cmp
cmpsb
cmp
out
adc
loope
push
push
outsl
mov
dec
push
adc
mov
stc
stos
iret
pop
fbstp
mov
cmpsl
cmpsb
cmp
cmpb
mov
sti
js
add
pop
mov
jmp
jecxz
shlb
sti
dec
push
movsb
or
sbb
inc
pop
rorb
sbb
adc
call
dec
xchg
stc
jge
xor
das
or
jmp
xor
xor
inc
xchg
jmp
push
xorb
je
cli
xchg
mov
lea
dec
mov
clc
mov
outsb
leave
lahf
lock
add
lahf
pop
movsl
mov
fnstsw
cmp
dec
mov
fsts
sub
jge
dec
int3
add
sbb
jae
jnp
sub
insl
cmpsb
push
pop
out
mov
sbb
cmp
lahf
std
pop
ja
sar
testl
xchg
insl
in
loope
out
movsb
mov
inc
and
adc
jecxz
data16
xor
loop
mov
lahf
ficoml
and
xchg
lea
aaa
roll
xor
test
ds
lahf
movsb
stc
mov
mov
mov
push
das
imul
rorb
mov
loop
inc
or
and
dec
xchg
inc
sbb
jmp
scas
into
in
mov
stc
ss
ficomps
or
cmp
mov
push
inc
jbe
dec
loopne
fwait
mov
mov
jne
sub
fstps
ja
ja
add
bound
mov
popa
cmp
jbe
sub
jae
dec
inc
push
cli
jnp
jmp
hlt
cmc
pop
rolb
das
fimuls
enter
nop
adc
loope
pop
mov
movsl
int
pop
lds
rcrl
movsb
sahf
dec
pop
cmp
sbb
sub
inc
lods
dec
lods
addr16
rcrl
jp
dec
in
test
mov
daa
sub
xchg
aam
and
jecxz
dec
data16
idivb
test
pop
fsts
fnsave
cli
test
out
lcall
mov
xchg
in
xor
xchg
iret
inc
mov
mov
cmp
cmc
pop
cwtl
mov
push
add
or
mov
dec
dec
mov
test
fs
js
xor
jecxz
icebp
leave
ja
lea
imul
sarb
mov
xchg
dec
inc
adc
pop
xchg
pop
outsb
push
ss
fdivr
movsl
arpl
sbb
ficoml
call
adc
imul
xor
repz
sahf
mov
in
mov
jp
pop
or
adc
mov
es
aam
xchg
mov
repz
idivb
jge
and
cmp
insl
stos
fs
pop
mov
mov
ret
mov
aaa
stos
enter
xor
push
rcll
and
pop
loopne
jo
hlt
push
ljmp
jae
fwait
lret
ret
push
cwtl
sub
inc
scas
cmp
outsb
and
mov
aam
imul
daa
adc
aaa
loop
repz
xor
sub
or
aas
rorl
inc
adc
mov
mov
push
mov
cmp
in
enter
test
add
cmc
push
xchg
outsl
adc
ffreep
mov
push
mov
jb
ret
scas
xor
roll
mov
inc
push
adc
xor
testl
cmp
imul
lretw
xchg
mov
icebp
sub
js
dec
mov
mov
jno
mov
data16
repz
xchg
stos
mul
mov
and
mov
mov
xchg
enter
aas
push
stos
mov
adc
in
push
movsl
pop
xchg
inc
pop
call
inc
lods
pop
adc
lahf
insl
jl
rcrb
cld
sub
cmc
xor
aam
iret
test
out
cmp
or
mov
iret
inc
pop
mov
xchg
mov
cmp
pop
scas
cmp
into
cmpsl
aad
adc
rclb
test
out
sub
cmpsb
scas
out
ret
test
cmp
inc
mov
femms
sbb
out
les
out
cltd
repz
push
aad
bound
jl
mov
test
mov
push
jge
adc
out
negb
and
into
sbbb
mov
jb
lods
jle
mov
inc
or
out
or
je
jl
sub
sbb
and
call
lods
iret
jmp
jle
mov
es
fdivrl
jp
jp
add
xchg
mov
sbb
pop
enter
xor
js
std
push
xchg
xchg
sub
dec
mov
daa
xor
fcoms
push
push
xchg
das
lret
ja
sub
call
dec
in
cmc
hlt
out
lret
out
or
pusha
rcl
nop
dec
jl
mov
in
push
jmp
jae
or
es
ficomps
cmp
ds
xor
push
negb
xchg
push
rcrb
inc
loop
dec
jnp
or
arpl
fisubrl
jo
sti
lcall
enter
test
aas
scas
dec
jmp
fsts
loop
arpl
jbe
aas
xor
sbb
jmp
jno
stc
xchg
or
mov
leave
rol
and
xor
add
aad
or
push
add
fcmovnb
sub
mov
out
sahf
pop
sub
es
pop
int3
fnstcw
or
out
ja
call
xchg
adc
inc
push
cmp
scas
jne
aad
add
jb
jg
test
std
out
call
shlb
xor
xchg
cmpsl
inc
inc
dec
clc
sub
pusha
dec
ljmp
dec
lock
jb
inc
jnp
lds
es
ja
and
bound
es
mov
loop
cwtl
insb
icebp
dec
push
xchg
rorl
xchg
inc
cmp
fcoms
add
sahf
in
jge
xchg
out
inc
addr16
stos
aaa
sbb
xlat
cmp
xor
movsl
pushf
dec
movsl
and
insl
mov
mov
mov
das
xchg
fstps
dec
add
lock
xlat
mov
dec
shll
repz
xor
mov
je
or
push
push
mov
pop
xchg
mov
push
ficomps
mov
outsl
ror
xor
pop
xchg
les
pop
fstpl
je
inc
sbb
pop
fsubrp
jns
stos
xchg
push
or
insl
jns
xor
cwtl
mov
cld
ljmp
imul
lea
and
sbb
icebp
xchg
xchg
pop
jl
insb
dec
imul
or
dec
push
vmovmskps
es
bound
das
sub
jo
xchg
out
pop
aad
in
mov
mov
addl
mov
inc
cmovge
imul
push
pop
add
aas
vpaddq
movsb
lock
enter
jns
mov
cltd
jbe
push
loopne
aad
test
dec
sbb
fwait
pusha
aas
push
sbb
add
mov
into
lods
push
push
mov
ds
popf
nop
push
jle
mov
xlat
lret
xor
call
aaa
cmp
mov
adc
push
out
inc
sbb
fcompl
add
mov
insb
mov
xor
in
ret
imul
dec
mov
mov
add
test
and
jmp
fldenv
sbb
lahf
adc
movsl
add
inc
or
jnp
fs
mov
mov
test
pop
scas
sub
inc
aaa
lds
addl
lods
test
shlb
icebp
sti
dec
mov
inc
ror
lret
push
je
mov
out
cmp
mov
shrb
or
arpl
fxsave
sarl
jo
mov
inc
imul
cmpsl
pop
mov
rorl
shll
and
and
cmpsl
or
loop
pop
iret
inc
insb
mov
sub
jecxz
mov
movsb
jmp
jnp
add
cmp
loopne
push
cmp
frstor
xchg
movl
push
cld
xchg
test
and
xor
fs
stos
xchg
dec
pop
test
sahf
sub
cmc
out
xchg
sbb
shrl
adc
lds
adcb
jmp
xchg
sarl
xchg
ja
push
dec
sahf
pop
aas
or
xchg
hlt
retw
clc
das
and
sub
gs
cmp
lcall
outsl
testl
stos
jecxz
mov
dec
and
loopne
pop
inc
test
gs
mov
jno
js
push
jmp
cltd
fdivrl
cmp
out
xor
hlt
pushf
xchg
push
mov
mov
les
pop
jg
jle
pusha
or
xor
cmpsl
fdivrl
sbb
jne
lcall
mov
aad
bound
mov
scas
in
xchg
push
xchg
mov
sub
jmp
imulb
pop
xor
mov
scas
push
pop
aam
mov
enter
xor
test
lds
cmp
or
enter
push
outsl
cmc
bnd
fwait
push
movb
xor
incl
xchg
rcr
int
sbb
xlat
mov
jbe
push
bnd
cmp
sti
mov
nop
pop
cmp
in
mov
test
mov
fmul
add
pop
rorb
mov
pushf
mov
dec
dec
mov
sub
sub
xchg
dec
jle
cmp
arpl
orl
scas
push
mov
mov
outsl
jb
cmp
push
mov
inc
or
cltd
out
pop
rorb
or
xor
adc
leave
ljmp
xor
pusha
sub
xlat
je
jl
add
mov
pop
fs
icebp
mov
xchg
ss
add
mov
mov
lahf
mov
pop
hlt
pop
ds
shll
xchg
mov
ror
or
fnsave
xor
loop
iret
mov
push
data16
roll
imul
pop
sbb
cmp
xor
add
shll
inc
stos
subb
popf
test
icebp
stos
mov
mov
pop
sub
dec
cmp
minps
or
mov
jge
pop
jno
lret
shll
lods
inc
mov
in
adc
in
jl
sbb
addr16
xor
in
mov
addr16
fwait
inc
sbb
fldenv
mov
xchg
sbb
pusha
cmp
or
add
push
or
xor
jo
cmc
aam
add
outsb
std
dec
mov
pop
in
push
pop
aam
push
pop
imul
popa
sub
and
mov
insl
js
fcoml
mov
xor
out
out
sub
lahf
cwtl
add
and
repz
ret
fisttpll
xchg
inc
mov
fsts
inc
arpl
xchg
sbb
mov
mov
mov
inc
jp
xchg
dec
pop
xor
sub
sarb
add
jge
int3
cmpsb
xchg
fcoms
pop
data16
nop
int3
mov
and
mov
jne
jno
sbb
les
loope
in
or
inc
dec
inc
fwait
xor
stos
mov
mov
or
lret
or
pushf
daa
rcll
jmp
pop
sbb
jle
jp
movsl
lea
add
push
iret
gs
jns
leave
lea
dec
xor
xchg
push
jns
nop
xor
ds
orb
in
pusha
pop
and
les
fnstsw
fs
sti
pop
adc
push
mov
sahf
adc
add
inc
jno
add
cmc
cmpl
repnz
popa
dec
jge
add
js
fst
lret
cmc
cwtl
fistl
sbb
push
cmpsl
mov
mov
js
adc
inc
cmp
fistl
xchg
jae
xor
inc
gs
addr16
andb
dec
arpl
and
pushf
clc
fdivrl
xchg
popl
or
mov
xor
jmp
sbb
daa
scas
out
cwtl
das
and
pop
xor
in
mov
xor
nop
stc
decb
sub
push
inc
ja
xor
insl
ljmp
sub
into
xchg
xor
and
mov
adc
cld
mov
xor
adc
setbe
les
cmp
jecxz
xchg
iret
sub
test
mov
mov
pop
or
ljmp
mov
pop
mov
popf
test
and
mov
cmp
mov
inc
aam
push
imul
mov
dec
cmp
mov
dec
push
adc
imul
in
testb
hlt
or
pop
fsubs
test
call
adc
or
cltd
mov
stc
bound
jle
mov
sbb
mov
dec
and
mov
mov
xlat
insl
xor
and
pop
push
adc
add
pop
or
mov
xchg
lods
test
add
add
adc
push
fs
mov
cltd
xchg
cltd
dec
inc
and
mov
adc
pop
mov
jmp
ljmp
mov
shl
xchg
or
pop
icebp
popf
arpl
dec
lods
ljmp
sub
aam
aas
insl
sbb
aaa
sbb
mov
out
inc
and
fsubl
xchg
mov
stos
inc
enter
cltd
and
push
in
dec
inc
xor
dec
shll
jno
sbb
ja
cmp
cmp
push
movsb
mov
add
mov
imul
rcll
xor
cmp
push
fnstenv
jne
mov
fsub
push
arpl
aam
imul
es
or
jg
xor
jp
and
leave
mov
out
stos
adc
in
adc
inc
jbe
push
cmp
mov
adc
add
dec
addr16
psrlq
test
fsubs
sarb
nop
dec
insl
dec
inc
adc
repnz
fildl
dec
lcall
or
lds
sbb
lret
push
ja
jl
out
sub
or
enter
lds
stos
cmp
fstpt
les
imul
sub
xchg
into
mov
push
sub
add
roll
cmp
in
inc
cltd
stc
push
cld
lds
std
mov
icebp
lds
shr
in
lahf
cli
dec
scas
f2xm1
cli
mov
inc
shll
pop
pop
or
jmp
xchg
add
out
into
shlb
testl
test
inc
nop
dec
gs
cmpsl
repz
repz
ds
or
aaa
test
into
mov
fmuls
stos
lds
xor
in
and
pop
cmpb
xchg
in
xchg
fisttps
lock
movsb
sbb
cli
hlt
xchg
jmp
clc
jns
out
push
dec
dec
mov
leave
add
xchg
or
jle
aad
in
sbb
xchg
and
sar
fsts
xchg
mov
in
or
daa
cmpsb
cmp
adc
xchg
mov
cli
out
fcompl
in
cwtl
test
xchg
dec
aaa
adcb
pop
les
xchg
nop
fsubrs
dec
mov
scas
jns
nop
dec
add
adc
stc
push
movsl
jp
mov
fadds
jbe
js
fwait
bound
inc
aas
xor
mov
dec
pushf
lods
movsb
dec
smsw
sbb
lret
jmp
jns
nop
aad
sbb
xchg
insb
xchg
cs
push
inc
jle
incb
pushf
mov
in
das
dec
xchg
nop
incb
fnstenv
rclb
cmp
cmp
sbb
pop
ja
test
sbb
push
add
rclb
xlat
cmc
dec
pop
cmpsb
pop
mov
in
jle
and
fcoml
pop
loopne
ret
inc
sbb
and
and
cmpsl
mov
or
xchg
mov
cld
rorb
xor
rcr
inc
and
add
popa
and
paddw
fidivl
jg
inc
test
repz
add
and
fwait
add
xor
cmp
jle
dec
ja
call
es
push
mov
mov
out
insb
jle
sbbb
icebp
ret
and
mov
lock
fstl
call
test
test
out
cmp
scas
test
out
lds
push
push
push
jne
cmp
add
jne
pushf
inc
test
pop
icebp
cmp
xor
jbe
rorl
cs
push
aaa
adc
push
int
fsubr
fnsave
add
sbb
push
mov
xchg
cmpsl
js
bound
mov
cmp
fisubs
pop
add
mov
fidivl
les
add
mov
adc
mov
fs
xchg
sbb
sub
test
xchg
pusha
repnz
dec
mov
scas
push
repz
or
xchg
pop
adc
mov
jno
or
mov
sbb
addb
cltd
ret
inc
inc
ret
lahf
lcall
insl
dec
jne
out
mov
sbb
out
sbb
repz
test
xchg
pop
daa
fs
shll
shl
les
adc
aam
cli
add
inc
jp
insb
aas
pop
popl
jg
cmp
lea
xchg
push
xor
je
inc
mov
sub
sbb
pop
in
dec
icebp
inc
pop
pushf
mov
pop
adc
and
pop
loopne
push
mov
lcall
mov
push
sbbl
hlt
ljmp
pop
xor
jo
in
xchg
ss
xorl
popa
mov
fadds
pop
dec
cs
jns
icebp
je
push
imul
leave
sbb
sbb
pop
mov
adc
push
dec
push
in
adc
mov
loope
inc
cmp
cmp
out
into
push
inc
mov
mov
adc
popa
adc
pop
jbe
mov
inc
xor
jae
sub
stc
push
ja
jle
push
dec
pop
jge
std
insb
cmp
mov
push
xchg
sub
sbb
inc
cltd
jge
outsb
mov
add
xor
call
mov
inc
clc
add
push
jno
fildl
jge
sub
scas
sub
xor
xchg
mov
std
pusha
push
std
iret
cmp
sbb
aad
jmp
or
je
mov
scas
sub
sbb
pop
xchg
sub
jp
imul
mov
int
jae
mov
notb
stos
std
fisubs
lods
scas
and
pushl
ja
or
test
mov
movsb
push
rorb
or
jae
push
or
and
adc
xchg
ret
out
lods
js
mov
jb
ja
mov
dec
js
push
ja
cwtl
int3
pop
mov
inc
sub
pop
ret
leave
pop
push
xor
and
xchg
cli
daa
shrl
jnp
jbe
xchg
ljmp
ja
sub
xchg
xchg
sub
pop
lods
aas
out
mov
fwait
sub
mov
stc
fistps
dec
pop
fiadds
fildll
adc
pusha
xchg
cmp
pop
mov
sti
inc
stos
fcomp
push
loop
dec
xchg
inc
pop
cwtl
roll
cli
xor
popa
adc
add
imul
cmp
jl
jge,pt
jno
aaa
js
lock
pop
adc
dec
mov
test
add
xchg
scas
jge
repnz
xchg
pop
out
mov
push
insb
fcomi
push
xchg
xchg
rorb
mov
sub
mov
mov
inc
enterw
js
push
movntq
in
dec
sub
fisubs
xlat
or
sbb
mov
push
lahf
cmc
je
scas
in
out
repz
mov
push
fcmovnu
lods
adc
mov
mov
and
cwtl
lret
or
js
push
out
cmp
dec
fs
fldt
mov
cltd
cmp
add
push
bound
push
sbb
xchg
jg
sti
pop
mov
push
inc
sarb
mov
sub
and
aas
adc
gs
cmc
or
jnp
ret
not
jbe
adcb
notb
push
sarb
scas
ljmp
testb
shr
divl
decb
int3
js
mov
test
adc
call
or
jle
xchg
stos
lea
adc
fmull
cmp
jge
dec
enter
or
leave
and
test
mov
pop
push
pop
dec
cs
xchg
adc
inc
in
pop
push
sub
pop
pop
adc
popf
jl
inc
adc
scas
call
sbb
dec
jns
mov
adc
in
popf
pop
enter
rolb
or
jns
addr16
fnstcw
inc
repnz
mov
test
fimull
insb
and
pop
and
xlat
push
sbb
sub
or
loope
adc
nop
cmp
sub
mov
into
mov
nop
out
jecxz
shll
adc
je
hlt
adc
push
xchg
pop
push
mov
popa
mov
popf
mov
std
mov
xlat
popf
sbb
pop
and
nop
loopne
test
stc
ja
xor
mov
inc
or
cld
movb
mov
sub
adc
in
jmp
dec
fistl
mov
dec
testb
mov
xchg
stos
popa
jno
inc
cmp
xchg
out
iret
pop
ret
lods
ret
xor
adc
add
add
mov
int
and
xchg
inc
dec
std
loopne
inc
mov
frstor
idivb
rorb
shl
pop
dec
leave
mov
jmp
insb
sbb
outsb
xchg
es
mov
inc
inc
sub
rorb
push
add
xchg
mov
jo
fidivs
pop
pop
sub
push
loopne
sbb
stos
les
or
xor
in
das
and
es
dec
or
cs
lret
ja
jl
fpatan
mov
jns
icebp
scas
push
out
stos
cld
sub
rcll
cmp
fcoms
pop
pop
icebp
out
pop
pop
xorl
jmp
mov
adc
ror
sub
push
cwtl
pop
sub
dec
rolb
jns
test
outsb
adc
dec
dec
fwait
jae
test
sti
js
dec
mov
mov
frstor
or
data16
and
imul
xchg
in
push
xor
jle
mov
mov
add
scas
cmp
adc
adc
lahf
rcll
sbb
mov
xchg
dec
pop
in
add
fidivrs
mov
cmp
divl
lock
xchg
or
ja
data16
xor
adc
dec
ja
cmp
mov
lock
sti
cs
add
fsts
pop
gs
adc
jge
scas
mov
jno
nop
sub
pop
jne
out
push
sub
mov
aas
pop
mov
aas
sub
test
mov
add
push
inc
imul
adc
inc
pop
pushl
mov
loope
mov
ljmp
push
push
call
outsb
adc
lods
mov
pop
mov
mov
inc
xchg
or
sbb
lea
adc
stos
pushf
jno
add
gs
leave
loop
pop
adc
loopne
jecxz
jle
jle
incb
dec
sub
out
push
loopne
lock
jb
adc
fstl
adc
mov
or
insl
pushf
pop
int3
out
ljmp
daa
or
push
loopne
fidivs
or
cmp
fdivl
insl
mov
adc
adc
sti
add
stc
clc
test
repnz
inc
pushf
lea
mov
popa
cmp
xor
test
pop
pop
xor
in
aad
stos
push
xchg
jnp
sahf
cs
pop
or
punpcklbw
mov
pop
sub
cmp
cmp
fildll
jo
inc
pop
mov
popf
dec
lahf
pop
xor
daa
sbb
loope
lods
jp
xchg
and
loope
xchg
fistpl
mov
pop
fstpt
add
mov
out
xchg
jns
jl
cmpsb
inc
out
mov
bound
jne
jb
ljmp
ret
jl
das
loopne
aad
out
pusha
cmpsb
lds
test
mov
out
int3
push
or
aad
sahf
clc
dec
nop
xor
insb
pop
es
stos
int
xchg
xchg
push
mov
adc
pop
cmp
pop
cwtl
pop
inc
and
loope
adc
pop
call
fisttpll
scas
sahf
cmp
mov
cmp
out
push
aaa
repz
cmpsb
or
xchg
jbe
fdivrs
mov
das
stos
shl
mov
xchg
jae
cmc
aaa
je
ss
inc
lock
pop
xor
nop
mov
jbe
inc
xchg
xor
sub
xchg
insl
int3
cmc
xor
push
xlat
xchg
aad
test
loope
mov
scas
push
push
sub
stc
out
adc
xor
shr
mov
test
cmp
dec
jmp
and
loope
add
push
addr16
insb
shll
cmp
int3
cmp
test
lods
mov
pusha
adc
insb
dec
jno
rcrb
ljmp
sbb
cmp
mov
scas
mov
xor
pusha
push
dec
mov
iret
adc
lock
pop
shll
inc
xchg
xlat
dec
popa
jno
and
fwait
mov
lret
fwait
add
gs
and
ret
mov
in
dec
cmpb
adc
je
xchg
andb
mov
lea
stc
lret
cmp
repz
inc
xchg
lea
sarb
jl
icebp
mov
scas
cwtl
into
xchg
jno
adc
cmpsl
dec
popf
sub
scas
cmp
inc
inc
je
jecxz
int3
arpl
xor
jge
nop
push
mov
jnp
sbb
rcll
cwtl
divb
in
xor
les
out
test
in
fwait
sbb
dec
cwtl
inc
pop
or
adc
aaa
jl
and
sbb
scas
cli
int
arpl
and
and
xor
sbb
outsb
inc
imul
ja
sub
test
aam
xchg
mov
cli
scas
je
fs
adc
xchg
jne
lds
inc
lret
imul
xchg
mov
jle
xchg
call
inc
jle
push
in
and
mov
adcb
hlt
shrb
repz
sti
int3
mov
cmpsl
push
loopne
push
pop
xchg
dec
jns
scas
or
push
ss
mov
jmp
stos
sub
jl
inc
adc
sub
lods
hlt
lret
enter
test
and
or
fstpl
jp
addb
rcll
subl
pop
lret
mov
mov
cmp
mov
ret
jmp
out
inc
inc
mov
push
sbb
mov
cmpsb
jns
lcall
inc
test
repz
sti
pop
xor
pop
xchg
xor
test
inc
mov
fstpt
fldl
add
stc
push
jle
ret
in
popf
mov
mov
pop
cwtl
std
sub
mov
jns
lock
jecxz
pop
adc
inc
sub
mov
mov
mov
repz
cmpsl
dec
xor
lret
push
xchg
mov
test
dec
out
test
test
rcll
repz
and
xlat
xchg
fimuls
sub
mov
cmpsb
icebp
or
testb
jnp
stos
je
int
enter
push
jmp
aam
cwtl
add
nop
mov
enter
in
xchg
fistl
fcoml
aas
pop
xchg
test
add
xor
inc
imul
pusha
add
mov
addr16
jecxz
test
stc
lret
pop
sahf
pop
sub
xchg
cmc
cwtl
adc
adc
lds
xchg
cmp
add
mov
int3
cltd
mov
insl
in
ret
inc
and
enter
mov
ja
mov
lcall
int3
cmpsb
mov
adc
dec
or
shufps
or
leave
push
xchg
push
pusha
jnp
sub
mov
cmp
out
aam
xchg
pop
outsl
mov
imul
dec
int
jge
add
ljmp
data16
cmc
jp
sub
jge
inc
jl
rolb
xchg
mov
adc
dec
int
pop
inc
jns
nop
or
mov
loopne
imul
out
insl
add
ja
cwtl
aas
push
int3
mov
xchg
sub
hlt
or
insl
xor
adc
inc
cltd
push
mov
insb
sahf
inc
jle
je
and
sub
mov
push
pop
in
dec
js
daa
push
daa
jmp
push
xor
fs
pop
xchg
lods
sahf
bswap
push
icebp
mov
into
cwtl
jge
not
mov
add
xchg
andb
addl
addr16
xchg
mov
lea
test
mov
out
daa
shlb
inc
mov
or
test
inc
in
lcall
loope
dec
pop
sarl
int
ja
mov
mov
cmc
add
jmp
push
pusha
dec
sub
movl
cmp
inc
push
dec
inc
aas
int
cmp
out
popf
xchg
mov
dec
movsl
dec
js
lods
adc
fld
adc
sub
and
mov
sub
icebp
pushf
adcl
cmp
imul
lods
push
dec
andl
in
in
jbe
xor
popa
iret
enter
pop
test
pop
arpl
sub
inc
or
rcll
outsl
fs
aaa
mov
andb
data16
or
sub
pop
outsl
mov
cmp
adc
and
lock
jp
cmp
pop
pushf
push
icebp
push
and
sbb
mov
lds
sub
aam
lcall
add
pop
xor
aad
pop
lret
outsl
xchg
imul
add
and
dec
sbb
sbb
sbb
repz
add
xor
xchg
fsubrs
loope
and
xlat
push
push
fs
in
dec
into
xchg
adc
xchg
cmpsl
sbb
push
cwtl
repz
insl
mov
or
pop
xchg
aad
adc
or
insl
cmc
pop
push
mov
addl
dec
arpl
cwtl
popa
xor
add
test
lret
arpl
and
pushf
dec
pop
cs
fwait
and
cmpsl
nop
loopne
cld
jnp
mov
outsb
outsb
cmc
push
mov
xchg
lahf
fwait
pop
pop
dec
adc
or
cmpb
sti
jg
xchg
push
cmp
mov
ljmp
js
in
ja
sub
inc
inc
dec
mov
sbb
arpl
gs
cmp
in
shlb
mov
iret
dec
fsubrs
repnz
incl
jns
mov
cmp
add
mov
testb
cld
mov
sbb
pop
gs
sbb
mov
shl
cmp
inc
xor
cmp
pop
addr16
sub
pop
lahf
jns
push
ja
and
sahf
and
push
push
stos
and
iret
addl
pop
add
nop
and
cld
repz
cmp
sbb
mov
xchg
push
mov
das
outsl
xor
popl
pop
jg
outsl
pop
push
pop
add
out
xchg
outsl
pusha
cmp
pop
imul
mov
adc
aaa
out
or
and
cmp
int
pop
sarb
movsb
jecxz
xchg
xchg
cwtl
push
add
cmc
imul
jns
dec
sbb
aam
dec
xorl
lret
push
test
cmp
mov
aam
adc
nop
xchg
dec
push
mov
jb
mov
jp
lods
sub
xor
testl
pop
inc
add
push
out
jg
push
movl
fs
sahf
jns
or
sub
mov
push
loope
pop
push
pop
xor
jg
xchg
pop
push
and
iret
sbb
cld
jb
int3
arpl
and
filds
dec
adcl
int
mov
and
repz
subb
mov
dec
cmp
cmp
jae
push
mov
pop
hlt
xchg
push
pop
adc
push
repz
xchg
std
ja
gs
and
xlat
cmc
push
in
inc
xor
adc
inc
mov
in
mov
loopne
daa
sub
cmp
clc
jo
push
aam
scas
and
xchg
xchg
sbb
pushf
mov
das
mov
comiss
add
or
test
iret
mov
aaa
stc
sub
dec
enter
mov
mov
fmuls
push
mov
or
sahf
dec
pop
xor
out
fistpl
ret
jo
cmp
inc
mov
addr16
sub
jl
cli
mov
add
and
lods
cmp
imul
cmp
sub
inc
es
ljmp
ss
xlat
jae
pop
add
jle
sbb
sub
adc
mov
ljmp
pop
jp
pop
imulb
repz
sarl
nop
test
sbb
lds
cmp
dec
cmp
out
and
enter
stc
jge
inc
pop
jb
pop
mov
out
fsubl
pop
push
sahf
inc
sub
fmull
ss
pop
xchg
add
dec
fstpl
or
mov
sbb
decl
add
pop
sbbb
adc
daa
lds
inc
aad
outsl
dec
cmc
add
inc
fcmovu
jae
jns
push
adc
pop
jno
or
je
mov
js
dec
lcall
add
jmp
xor
cwtl
push
push
sub
xor
les
hlt
int
inc
aaa
inc
insb
int3
mov
scas
iret
mov
cmpsb
sti
orl
pop
fildll
pop
std
xchg
test
movsb
repz
mov
dec
inc
daa
andl
aad
pop
push
jne
push
cmp
jb
xchg
gs
push
pop
cmp
xchg
pop
push
mov
mov
data16
dec
hlt
push
bound
or
outsb
pushf
out
imul
inc
xchg
bound
dec
sbb
into
lods
xor
enterw
data16
xlat
jbe
rcl
outsb
add
aaa
push
sbb
lds
pop
sbb
les
inc
xchg
enter
sbb
xchg
push
cltd
jnp
add
repnz
fs
cmp
adc
sub
add
mov
adc
sti
int
push
fs
add
adc
mov
int3
or
outsl
pop
adc
xchg
fcmovnb
xor
jno
int
mulb
sahf
push
cmc
inc
cwtl
ret
insb
paddq
sbb
arpl
mov
jecxz
pop
inc
cmp
scas
jne
clc
rcl
popa
jge
imul
sub
fnstenv
jnp
or
sub
les
sub
movsb
mov
cmpb
inc
and
xchg
sti
std
push
mov
je
mov
sub
cmp
adc
cmp
cmpsl
outsl
fdivrl
sti
lods
clc
push
sti
repz
jnp
sahf
cltd
popl
sub
sub
mov
jecxz
or
in
es
aam
inc
and
mov
cmc
cmpb
les
outsb
repz
push
and
outsb
adc
pop
sti
in
sub
lahf
sub
push
das
xor
insl
sbb
sbb
cmpsb
xor
incl
movsl
std
pop
lahf
or
cmp
or
outsb
inc
or
jbe
dec
mov
sbb
jmp
stos
cmc
pushf
cmpsl
call
nop
je
mov
lcall
push
cltd
fidivrl
in
aas
mov
outsl
push
pushf
jp
xchg
rcr
test
lock
or
inc
lock
scas
push
ljmp
push
jmp
outsl
push
jg
gs
mov
ds
jnp
aad
imul
ret
ljmp
cltd
and
adc
mov
rcr
mov
jp
mov
jo
xor
sbb
fsubrl
xor
xorb
addr16
push
int
hlt
mov
cmp
mov
xor
sub
pop
imul
sahf
dec
jb
jb
sbb
je
js
mov
sbb
inc
push
test
dec
stc
sti
and
out
jp
aad
dec
xlat
lret
repz
mov
bnd
orb
mov
les
rorl
push
daa
push
ret
pop
repz
push
aad
cmp
mov
adc
dec
and
pop
xchg
dec
shlb
xchg
mov
pop
jno
mov
mov
ljmp
mov
pop
int
sub
dec
jmp
mov
cmp
aaa
or
xchg
sub
push
push
sti
movsl
arpl
pop
adc
cmp
movsl
adc
popf
dec
loop
mov
xchg
xchg
rolb
pop
sub
jne
sub
or
dec
adc
popf
into
fwait
sub
mov
icebp
out
nop
ret
xchg
dec
jmp
imulb
push
push
sbb
lods
arpl
adc
cld
sbb
jmp
jge
orb
mov
push
dec
inc
xor
cwtl
mov
call
cmp
cmp
jmp
int
lret
xor
mov
cmp
push
adc
pusha
jne
mov
pushf
data16
in
and
cld
push
dec
jmp
lret
lock
test
push
add
xlat
jecxz
hlt
mov
pop
orl
iret
pop
cli
jne
incl
in
movsb
repz
hlt
sbb
enter
out
scas
iret
xchg
aaa
jb
test
mov
iret
push
les
les
movsl
add
or
outsl
cltd
jmp
mov
and
pop
add
test
cwtl
mov
sbb
mul
ret
imul
lds
outsb
sbb
jo
push
cmpsb
hlt
movsl
pop
addr16
test
pusha
dec
jp
adc
sbb
xor
setb
or
mov
movsb
sub
jnp
sahf
ds
cmc
cli
mov
jnp
jl
mov
int3
ret
sbb
adc
xor
dec
xchg
add
add
fldenv
orl
mov
or
pop
in
adc
test
das
insb
je
inc
adc
pusha
add
and
lcall
cld
fistpl
inc
push
and
jle
movb
push
cmp
fisubl
imull
repz
cld
inc
add
test
xchg
xchg
xor
out
je
movsb
and
rcrl
inc
das
es
loopne
or
stc
std
insl
xchg
jg
xchg
call
jb
cmp
mov
mov
mov
and
je
aaa
scas
shrl
ljmp
dec
inc
notl
xor
cmp
popa
and
leave
test
les
fldenv
jae
cmpl
sbb
xor
shrl
mov
les
outsl
in
push
adc
sub
test
xlat
clc
xchg
insl
iret
sahf
pop
test
aam
js
adc
sbb
pop
pop
lret
add
add
push
xchg
jnp
addr16
cltd
push
out
pop
imulb
or
addr16
cmp
notl
repnz
lds
sbb
jecxz
adc
outsb
lcall
aad
add
sarb
aaa
lret
pop
negl
movups
adc
repz
add
ficompl
jl
test
dec
inc
sub
idiv
outsb
cmc
lds
push
daa
xor
dec
add
sub
pusha
popf
cmp
adc
xchg
outsb
push
outsl
add
imul
and
adc
adc
mov
rolb
arpl
xchg
adc
mov
lods
push
ficoms
mov
xchg
es
imulb
lret
and
jne
push
call
mov
call
sbb
mov
aam
cwtl
adc
jecxz
cli
cmc
pusha
xchg
mov
lahf
push
std
cmp
mov
push
or
xchg
cmc
gs
call
cmp
icebp
pop
mov
jmp
adc
les
dec
cs
mov
add
aaa
iret
je
cs
pop
test
fldt
and
xorl
add
jle
and
shrb
int3
xchg
adc
leave
insb
mov
sbb
movsl
test
cmp
and
popa
pop
aaa
pop
fmull
addr16
testb
cmp
dec
add
loop
dec
sub
or
lock
add
scas
mov
int3
call
sbb
addr16
mov
shrb
jecxz
sahf
jl
push
xor
std
mov
sub
jo
and
mov
xchg
and
sub
fbstp
hlt
dec
ja
sub
push
dec
andl
jne
arpl
cmp
ljmp
jae
inc
cli
mov
push
insl
pop
gs
mov
and
inc
xchg
jle
xor
jge
xchg
cmp
jl
xchg
ret
fwait
or
jo
mov
cmp
mov
stos
inc
sti
enter
or
mov
mov
sbb
inc
xor
inc
out
mov
lea
test
outsb
aam
or
mov
mov
roll
push
push
lret
mov
and
mov
je
mov
xor
bswap
and
jge
icebp
pop
test
nop
lock
fs
cmp
cmpb
sbb
xor
lock
movsb
add
xchg
shrl
mov
mov
fmull
or
out
outsl
cmp
hlt
dec
adc
mov
dec
mov
out
sbb
sbb
test
test
dec
adc
pop
inc
mov
mulb
mov
push
nop
lea
inc
in
mov
dec
sbb
movsl
sti
sti
pop
push
jmp
insb
loope
sbb
es
inc
or
sbb
push
push
cmpsb
es
aaa
mov
xor
inc
sub
repz
push
mov
cmp
leave
aad
dec
addr16
popl
fsubrl
inc
xchg
xchg
lcall
mov
jbe
fisubl
or
pop
call
dec
test
sbb
jb
or
xchg
xchg
xchg
xlat
cmpsb
jno
mov
mov
xor
cwtl
jbe
enter
add
in
stos
sub
aaa
stos
addr16
out
cmpsl
cmp
and
adc
lcall
jmp
cld
and
cli
xchg
jbe
xor
inc
pop
xor
dec
adc
push
xor
in
mov
add
push
mov
or
dec
lods
lret
ss
inc
nop
add
fsubrl
popa
push
and
adc
mulb
sub
mov
mov
fst
jecxz
fsubl
pop
or
lahf
sahf
into
fstl
decl
push
cmc
nop
pusha
push
out
sub
xorb
jecxz
jnp
fisubl
and
sbb
clc
sti
fldcw
adc
jmp
dec
jle
pop
mov
loope
orl
in
inc
pop
or
addr16
sub
mov
rorl
out
andb
cmp
push
jle
xchg
push
mov
addl
test
rolb
mov
sub
xor
out
dec
aam
data16
imul
notl
shr
lods
popf
ret
push
fistl
or
add
pop
movb
ret
lahf
dec
stc
inc
mov
pop
jae
das
out
mov
scas
cmpsl
lret
andl
fidivrs
loopne
repnz
mov
cli
add
ja
fdivp
insb
jb
loopne
sti
cmpsl
cmpb
cmp
add
and
mov
adc
jnp
xchg
mov
mov
aad
adc
adcb
sbb
jg
jmp
pop
add
icebp
jp
repnz
fisubrs
mov
sbb
fdivrl
shlb
stos
shll
or
lret
popf
ret
mov
out
in
dec
adc
in
mov
or
loop
adc
jae
testl
push
je
loop
in
test
jle
arpl
adc
rcrb
in
insb
sub
pop
or
divb
stc
sbbb
and
inc
mov
jmp
out
ja
shll
lea
mov
lock
sbb
mov
inc
in
pop
cmp
dec
mov
xchg
jl
hlt
stos
mov
mov
fcmovb
jmp
lods
xor
pushf
idivb
push
loope
arpl
pop
cmpsl
adc
test
fsubrs
pop
outsb
mov
in
and
popf
dec
rcrl
or
lretw
cmp
xchg
dec
mov
insl
xchg
aam
leave
sbb
add
inc
push
or
mov
faddl
rorb
lods
call
lds
lret
xor
jbe
push
push
js
aad
out
gs
pop
dec
add
arpl
xchg
mov
popa
push
or
cmp
mov
push
addl
and
mov
adc
sbb
cli
or
rorl
cwtl
aas
jb
mov
aaa
shlb
xchg
test
xor
cwtl
xlat
dec
sub
scas
push
mov
or
add
insb
pop
addr16
pop
rclb
sbb
mov
insb
fcoms
push
clc
and
lahf
push
or
jmp
mov
dec
sbb
pop
inc
ret
sub
idiv
adc
sub
leave
pop
mov
sbb
jno
jno
jns
aas
xchg
sub
bound
and
jbe
fnstsw
les
sbb
aam
jp
pop
ds
or
dec
repz
pop
lods
lods
xchg
and
pop
cmp
in
mov
dec
adc
jge
jmp
jae
fiaddl
outsl
inc
pop
xor
jecxz
insl
adc
data16
es
arpl
in
sbb
or
sbb
stos
fwait
lret
mov
aad
xor
pop
pop
lea
adc
std
in
add
sub
jg
and
sarl
fmul
xor
movsb
dec
jo
jo
mov
popf
mov
sbb
roll
dec
inc
adc
sub
pop
pushf
adc
mov
sbb
cmpsl
mov
fcompl
int
sbb
cwtl
push
inc
cltd
in
or
int
jo
ret
mov
notb
fsub
cli
or
movsb
mov
scas
mov
jo
jb
cmc
mov
mov
sub
jl
lea
inc
ljmp
shll
pop
and
xchg
pop
cmp
sbb
leave
xchg
xor
pushf
jmp
mov
push
ror
popa
out
sub
fldl
shrd
jbe
inc
mov
push
jecxz
push
icebp
jo
dec
jae
addl
xor
cmp
sbb
mov
lret
es
mov
mov
xchg
ffree
gs
je
inc
lea
inc
cmpsb
push
xchg
mov
xchg
ljmp
mov
cmp
fsubp
cmc
sub
icebp
pop
or
or
xlat
out
or
jge
into
add
cmp
lahf
fimuls
lea
loop
psrld
jno
xchg
add
dec
push
out
out
sbb
or
pushf
ja
dec
xchg
or
mov
lret
inc
jg
loope
jns
cwtl
in
pop
cli
bound
mov
mov
push
aam
or
adcb
loope
add
fidivs
or
xor
loopne
pusha
stc
hlt
mov
push
jne
ficoms
xchg
out
jp
mov
and
adc
in
loope
push
inc
adc
inc
xchg
xor
or
xor
or
in
mov
or
outsb
loopne
divb
je
jle,pn
out
inc
ljmp
mov
jne
call
mull
pushf
ljmp
xor
dec
xchg
xchg
sarb
jno
popa
push
scas
push
inc
das
jg
jbe
push
jecxz
cld
outsl
push
jnp
cmp
push
or
push
or
jg
cmpsb
lods
lahf
jo
pop
in
jne
lahf
jl
add
loop
and
cli
pop
pop
outsw
int
push
dec
pop
and
inc
sarb
subb
in
sti
inc
cmp
cmp
pop
mov
cld
gs
xchg
adc
in
jbe
mov
cs
jns
push
push
xor
adcb
push
dec
dec
add
rcll
sbb
aaa
inc
fadd
bnd
imul
sbb
mov
and
das
lods
add
and
xorl
cmp
mov
orb
ret
jp
ja
cmp
lock
sahf
adcl
scas
shll
into
jb
mov
cmc
add
pop
inc
rcrl
push
xor
inc
test
cmp
sub
lahf
in
fldcw
repz
mov
lret
mov
xchg
mov
insl
xchg
and
dec
jne
add
loop
adc
pop
jmp
jle
enter
push
dec
or
cld
stos
inc
push
sub
or
jo
mov
std
sbb
scas
roll
xlat
adc
xor
jmp
das
or
cmp
dec
or
add
xchg
lea
lds
pinsrw
dec
add
push
outsl
mov
shll
sub
loopne
addr16
icebp
sub
sbb
jecxz
je
je
sub
xor
mov
lea
out
dec
and
sub
sbb
or
scas
stos
sbb
or
sti
push
and
rolb
push
lods
push
jmp
shlb
jle
jno
cld
int3
or
leave
iret
shlb
scas
mov
scas
cmc
shrb
lock
call
popa
test
push
mov
shlb
dec
cmp
fcmovu
enter
movsl
arpl
push
push
jae
and
les
or
rcrb
inc
cmpl
ret
inc
or
into
leave
add
into
xor
inc
lcall
push
fwait
repz
scas
cld
add
and
loopne
sbb
mov
loopne,pn
jno
jae
pop
icebp
xlat
mov
call
cmp
loope
in
jb
jo
rcrl
xchg
mov
loop
inc
cmp
mov
movsb
and
shrl
inc
std
notl
add
jecxz
es
or
int3
dec
add
mov
xor
mov
inc
sub
nop
orb
and
or
sarl
sub
push
fucomip
imul
xchg
pusha
shrb
mov
stc
xorb
mov
or
jmp
rolb
adc
xlat
stc
mov
leave
and
shll
adcb
es
jmp
scas
push
and
loop
stc
sub
jnp
dec
popa
arpl
push
push
lret
lock
mov
mov
add
ret
pushf
test
push
repnz
push
jbe
jmp
mov
loopne
sub
mov
cmp
xor
sub
push
jb
loope
push
shrb
mov
pop
xchg
sbb
sbb
in
cli
sub
div
add
jne
inc
cmp
dec
dec
in
jl
xor
fstps
cwtl
mov
cmp
pop
inc
cmp
xor
lock
mov
stos
lods
or
push
mov
mov
cmp
add
ljmp
dec
push
mov
and
les
ja
sbb
mov
popf
inc
mov
cwtl
stos
hlt
and
pop
mov
mov
or
test
lea
jae
pusha
sub
hlt
stc
and
mov
jbe
cmpsb
xor
sbb
add
or
add
sahf
gs
jl
xchg
daa
sub
sbb
int3
insl
mov
xchg
aaa
gs
mov
add
jae
sti
push
mov
nop
push
or
and
scas
jle
repnz
sub
out
xor
lods
inc
mov
ficompl
int
and
cs
insl
adc
or
inc
push
mov
jl
loope
dec
popa
fsubr
add
cmc
into
loope
roll
aaa
ret
lock
add
and
mov
popf
lret
in
xor
push
fld
push
cld
xchg
imul
xchg
sbbl
or
pop
hlt
shll
and
mov
push
aam
aam
dec
andl
push
or
out
mov
dec
out
mov
lret
insl
push
shrl
idivl
pop
sti
pop
adc
sub
dec
bound
fs
jne
je
add
jge
push
and
leave
std
push
gs
mov
add
arpl
cld
xchg
iret
sub
jmp
stc
lret
add
mov
and
jbe
or
cmp
shrb
xor
adc
push
xor
push
cli
gs
pop
cmp
add
push
cmp
sbb
push
iret
and
mov
in
jmp
pop
inc
mov
test
out
out
nop
dec
imul
stos
lcall
push
mov
jecxz
or
cmp
cwtl
pop
je
sub
fistpll
cmp
int3
jecxz
add
les
out
out
mov
mov
inc
mov
jb
sbb
push
and
inc
sti
rorl
add
les
outsb
and
jns
xchg
add
cmp
push
xchg
push
fwait
mov
jp
xchg
or
das
or
mov
aaa
in
and
inc
mov
push
fistpl
stc
shlb
mov
sbb
test
or
call
stos
popa
frstor
stc
xor
sbb
jne
clc
sbb
mov
sub
or
bound
adc
add
lahf
in
and
xchg
ds
pop
add
lock
jo
outsl
mov
and
jle
xlat
insl
sbb
jle
cli
scas
call
js
repnz
scas
xchg
dec
lcall
mov
sub
jne
cmp
cmp
and
out
or
add
and
sub
fcompl
in
sbb
dec
cmp
sbb
jle
mov
push
faddp
roll
mov
test
dec
outsl
sarb
andb
mov
push
pop
push
cmp
mov
mov
ljmp
or
out
xor
out
dec
dec
pop
test
idivl
inc
or
mov
sahf
push
add
jmp
test
hlt
sub
arpl
sbb
mov
push
add
xchg
int3
rorl
push
xchg
xchg
xor
mov
scas
loop
add
out
testb
jbe
xchg
adc
xchg
or
pop
adc
je
dec
mov
add
inc
jmp
push
xchg
lods
aas
add
add
in
call
sub
jns
inc
sub
push
adc
dec
and
add
mov
jnp
adc
push
rclb
ss
out
cmpsl
loope
pop
pop
lea
mov
or
insb
push
call
xor
hlt
sub
shlb
push
mov
xor
dec
sbb
and
dec
repnz
jo
mov
cmpb
cld
stos
mov
adc
mov
sub
sbb
adc
push
data16
jo
cmc
dec
jp
cmp
movsb
lock
and
or
jge
jnp
add
add
icebp
lret
clc
fildll
pusha
xchg
inc
scas
cmp
adc
push
andl
inc
je
sbb
xchg
bound
sbb
pop
js
out
push
adc
sub
push
adc
ret
mov
push
mov
fld
je
or
imul
xor
inc
adc
call
in
jg
mov
adc
scas
cmpsl
pop
mov
pop
sbb
hlt
lods
sbb
popa
lcall
push
sbb
or
sub
cmpsl
imul
add
ret
mov
jp
daa
std
das
imul
fsubs
pop
xchg
cmp
mov
push
or
pop
insl
dec
ret
dec
repnz
inc
add
sub
cmovl
cmpsb
pop
mov
fwait
or
push
lcall
push
or
and
xchg
xor
xchg
jnp
stc
mov
mov
enter
push
out
ss
ja
dec
add
js
cmp
cli
jae
shlb
mov
mov
das
shlb
dec
adcl
and
rcrl
jl
dec
aad
jae
mov
jnp
or
pop
arpl
adc
mov
fs
cmp
stos
cmpsl
jmp
xor
pop
jne
jno
ficoml
pop
mov
leave
mov
sub
sbb
outsl
sbb
test
addr16
cli
cli
inc
in
jne
push
mov
mov
and
stos
xor
adc
cwtl
bnd
pop
jo
dec
sub
pop
ds
popf
test
inc
inc
leave
push
ja
out
or
push
icebp
and
aam
cmpsb
jbe
sub
cmpsb
call
mov
lret
sahf
mov
dec
mov
or
neg
aas
dec
pusha
push
mov
mov
and
adc
je
mov
stos
lods
inc
mov
sbb
cld
push
loop
pop
add
dec
int3
mov
enter
fcmovnu
xor
push
add
clc
out
fcoml
mov
jp
pop
ds
dec
xor
js
push
fidivrl
or
sbbb
push
int
add
jl
outsb
jae
cltd
jecxz
fwait
sub
xor
cld
cmpsb
push
adc
pop
pusha
ds
andb
shlb
mov
jge
dec
cmc
sbb
mov
fnsave
cmpsb
js
aas
xor
sub
shlb
cli
scas
pop
inc
inc
in
inc
push
add
inc
adc
mov
fcoml
loop
test
and
jo
outsl
lcall
lret
sahf
cmp
aam
push
inc
jl
adcb
push
mov
outsb
cmpsl
inc
jbe
rorl
iret
cmp
pop
mov
stos
loop
mov
ud0
inc
call
or
pop
mov
int3
xchg
and
jo
xor
xchg
out
incb
out
vandpd
xchg
sbb
aas
cmc
lods
aad
movsl
cltd
repz
pop
xor
pop
iret
xorb
push
sub
mov
adc
or
jae
jle
into
movsb
ret
fwait
lahf
test
add
gs
or
out
and
pop
sub
xlat
xor
push
les
and
jno
popa
mov
push
lret
push
cmp
rcrl
lods
mov
sbb
out
or
arpl
cmpl
test
lret
xor
ret
mov
add
mov
jl
inc
lea
sbb
inc
cli
cli
dec
mov
push
mov
or
add
fs
fwait
insb
insl
fld
leave
scas
xor
pop
std
xor
nop
push
subb
sbb
push
fwait
idivl
mov
inc
add
stos
xchg
xchg
inc
xchg
push
inc
cmp
iret
out
unpcklps
movsl
push
cld
jg
push
mov
jbe
jg
xchg
xchg
mov
pop
add
call
sbb
ja
mov
and
into
cmpsl
xchg
xchg
shrl
jl
adc
leave
aas
test
mov
sbb
adc
lcall
xchg
cmp
mov
jg
adcb
mov
dec
out
sbb
nop
push
fnstsw
std
adc
insb
das
cmp
adcl
adc
inc
pushl
insl
test
jno
pop
jmp
and
inc
xchg
mov
jnp
cli
in
mov
inc
lds
stos
sbb
jp
pusha
outsb
mov
daa
out
mov
cmc
pusha
movsb
mov
rclb
inc
pushf
cmp
dec
inc
sbb
ja
mov
out
push
or
cmpsl
push
xor
cmp
mov
int3
outsb
scas
dec
loopne
imul
pop
cld
sbb
data16
push
mov
fsubp
mov
aam
xchg
insl
sub
or
push
sub
fs
inc
inc
mov
loop
shlb
jge
sbb
and
int3
mov
js
sbb
imul
jns
leave
mov
pop
xchg
sahf
repnz
testb
sbb
js
pop
hlt
inc
jl
and
rcrl
cmpsl
je
pop
icebp
rcr
std
lret
movsl
popa
jns
call
js
bound
mov
in
pop
adc
fdivs
and
and
jge
aam
push
mov
ljmp
pusha
push
sbb
in
test
add
lods
pop
subl
das
outsl
out
lret
nop
push
or
cmp
xlat
or
and
es
pop
stos
out
jnp
sbb
mov
addr16
daa
popa
stos
mov
lret
js
cmp
inc
ret
dec
int
or
cmpl
inc
pusha
ds
inc
lea
or
xor
xor
adc
xchg
sbb
andb
cld
xor
test
rcr
out
dec
or
leave
xchg
xor
icebp
pop
insl
add
mov
in
mov
inc
dec
mov
ja
jmp
out
test
fsubr
outsb
and
adc
or
ud1
pop
mov
jnp
stos
pop
orl
imul
lret
ror
pop
call
push
mov
inc
lret
xchg
mov
jge
adc
sub
nop
dec
pusha
adc
shl
jnp
jecxz
pop
or
lods
aad
xor
loopne
inc
mov
add
ss
aad
xlat
dec
in
lods
fdivrl
sub
or
test
dec
mov
cld
inc
mov
mov
push
cld
or
in
ja
adc
addl
js
xor
mov
sarl
cs
dec
add
jg
notl
int3
das
push
jmp
add
pop
ljmp
imul
mov
lret
sub
pop
pop
cld
je
xor
pop
aaa
aad
mov
xchg
inc
mov
or
dec
pop
and
pop
push
xchg
xor
mov
mov
jecxz
cmp
mov
fimull
aam
fstpt
es
cmp
ret
pop
jb
cmp
loope
bound
pop
xchg
mov
and
mov
jecxz
das
fs
jle
mov
inc
jb
mov
in
jo
out
loop
inc
or
fmul
je
add
sti
mov
fnsave
or
lock
push
rcrb
mov
pop
imul
mov
negl
and
and
mov
xchg
fs
test
mov
push
daa
push
mov
mov
daa
adc
ret
jmp
push
dec
xchg
jnp
in
fisttpll
cld
push
shrb
out
aam
je
push
hlt
inc
imul
jnp
imul
jbe
pop
jge
movsb
jbe
sbb
jecxz
aad
mov
lcall
sti
cmp
pop
fisubl
sbb
loopne
sub
mov
fidivl
mov
add
jo
cmp
sbbl
out
inc
stc
stc
xor
movsl
iret
stos
and
fistpl
jl
out
xlat
aam
pop
data16
cltd
mov
mov
add
in
xor
faddl
xchg
int3
dec
push
push
mov
fdivs
jle
sbb
cmp
lcall
cli
pop
sbb
xor
cs
test
inc
inc
sbb
mov
rcll
popa
pop
fdivs
movsl
stc
pop
call
dec
mov
push
ret
mov
adc
mov
out
push
insb
in
out
and
xchg
and
jg
or
cmp
out
mov
outsl
loope
shr
repz
and
dec
push
pushf
dec
and
jge
out
aaa
push
or
in
mov
mov
das
test
aas
xchg
jl
in
ljmp
push
mov
sbb
xchg
repnz
add
and
ret
xchg
jbe
out
shlb
arpl
cmp
test
js
pop
stos
push
fadds
mov
inc
stc
fwait
lret
iret
enter
adc
xor
fyl2xp1
cmp
jae
inc
nop
jmp
out
clc
iret
xor
jecxz
or
sahf
inc
call
movsl
enter
and
pusha
mov
daa
sub
and
fld
test
or
cmp
inc
push
pop
lods
cwtl
je
scas
mov
aas
xchg
sub
xor
pop
insl
inc
aam
xchg
pop
sub
lret
mov
mov
iret
mov
shll
rorl
mov
inc
test
mov
rorb
jecxz
pop
dec
mov
and
ret
pop
hlt
or
fistpl
andl
test
mov
cwtl
clc
lahf
xor
int
inc
add
fcmovnbe
scas
inc
mov
scas
mov
mov
das
int3
sub
push
mov
pop
xor
dec
or
testl
addr16
into
hlt
dec
enter
sbb
lock
pop
mov
in
pop
test
add
xchg
xchg
mov
loope
movsb
mov
sbb
rolb
ret
loope
cmp
movsl
mov
data16
cld
iret
cmp
add
sub
adc
pop
jo
clc
loope
mov
inc
insl
xchg
dec
int3
add
sbbl
fs
pop
test
add
or
ficoms
repz
jno
xchg
pop
pop
enter
ss
sub
out
stos
sbb
or
icebp
mov
mov
cmpsb
xchg
xor
lret
cmp
jne
in
adc
xchg
lea
out
arpl
mov
rcrl
and
sub
stc
xchg
dec
int3
leave
cmp
out
pop
xor
pop
mov
pop
xlat
dec
pop
or
or
das
mov
das
cmp
in
lahf
or
mov
dec
adc
add
xor
jns
dec
pop
inc
popa
insl
sub
in
pop
js
sub
rolb
sbb
xchg
fisttps
lds
idivl
dec
mov
into
lods
test
or
fistps
lcall
push
push
clc
cltd
push
rcrl
cmp
add
in
lea
incb
mov
out
jmp
inc
lret
les
sub
fs
dec
jo
enter
dec
sahf
stos
mov
inc
cmp
repz
cmp
fbld
shlb
lock
outsb
pop
mov
cmp
int3
push
icebp
fdivrs
adc
push
xchg
sbb
pop
lds
xchg
xor
mov
mov
pop
add
jge
out
and
or
roll
or
mov
js
enter
lret
push
stos
arpl
jns
ret
outsl
add
lret
push
orb
mov
push
test
sbbl
call
mov
ja
test
cmc
bound
nop
mov
mov
mov
jno
sbb
jno
xchg
mov
into
push
mov
out
dec
sub
pop
fcomps
scas
push
or
pushf
sub
mov
rcrl
dec
mov
ljmp
or
loope
add
lods
test
mov
mov
and
lods
sub
xchg
arpl
stos
nop
aad
jle
pop
inc
std
es
test
ret
jbe
test
push
adc
adc
fnsave
lret
jecxz
dec
cmp
xchg
jmp
and
jl
js
int3
jo
gs
in
enter
test
pusha
mov
roll
mov
in
popa
ds
mov
jnp
sbb
mov
test
sub
inc
mov
pushl
cmc
enter
fsubs
fcmovu
faddl
jns
inc
ss
mov
mov
pop
adc
scas
ror
sbb
mov
xchg
ljmp
push
aam
jg
mov
es
addr16
jmp
xorb
xchg
subb
jno
data16
les
inc
jne
incb
add
repz
sub
fdivr
adc
gs
andb
call
xchg
adc
dec
pop
cwtl
sarl
jnp
aam
daa
push
mov
sub
rorb
lea
pop
fisttps
inc
pop
lret
adc
sub
adc
stos
rcll
mov
jb
popf
dec
aaa
pop
push
out
jecxz
cmp
dec
mov
loope
lods
stc
mov
filds
aas
pushf
mov
mov
xlat
jne
mov
stc
ss
insl
lahf
cmc
pop
mov
inc
sar
arpl
sti
decl
mov
rorb
iret
aas
jge
call
ret
and
test
ljmp
ficoml
dec
cld
mov
inc
sub
hlt
sbb
dec
push
and
negl
repz
stos
ss
dec
call
jp
xchg
mov
adc
pop
jns
lods
mov
mov
xchg
out
jl
push
mov
bound
xchg
push
out
clc
or
sarb
fadds
es
and
pushf
pushf
cli
xchg
jle
loopne
mov
imul
mov
stos
dec
jo
pushf
mov
jb,pn
push
bound
rolb
imul
ss
sub
popf
push
add
cmp
cld
subb
xor
lds
aaa
add
rcll
lahf
inc
sti
push
pop
dec
and
cld
movsb
mul
std
ss
mov
pop
mov
nop
and
mov
mov
movsb
mov
mov
lds
mov
push
add
push
aad
xchg
and
gs
push
loop
repz
insb
pop
pop
sub
xchg
cmpsb
lds
mov
dec
pop
jle
loop
adc
dec
xchg
mov
or
add
dec
mov
mov
lcall
pop
pop
fiadds
adc
sub
out
js
jae
in
test
and
das
ljmp
ljmp
stc
and
push
shlb
push
adc
mov
jg
or
nop
imul
xchg
daa
sbb
jg
outsb
jp
push
pop
sub
push
jecxz
in
pop
inc
nop
cwtl
jmp
lock
pop
add
pop
xor
cs
xchg
test
adc
or
inc
sbb
les
cld
popf
mov
pop
mov
pmulhuw
enter
out
out
les
push
inc
inc
out
scas
fisttpl
call
sahf
outsl
popf
inc
adc
ret
out
jae
sub
dec
pusha
inc
and
cmp
and
mov
pop
in
cmp
mov
sahf
add
adc
and
or
add
lds
in
push
adc
lahf
in
loop
test
pop
pop
int
js
push
mov
push
mov
addr16
jno
adc
js
jl
mov
jbe
shl
fnsave
arpl
dec
test
mov
mov
mov
stos
add
cmp
ljmp
out
xor
lcall
or
adc
movsb
out
adc
push
xor
test
mov
dec
sbb
xchg
push
insl
clc
cmp
xchg
and
je
mov
ficompl
or
pop
lock
ljmp
jbe
inc
add
aam
clc
xor
inc
inc
mov
mov
mov
movsb
push
jno
mov
fistpll
pop
push
xchg
adc
insb
addr16
push
mov
pop
popf
aad
fwait
pop
mov
stos
xchg
sub
movsb
lods
pop
sbb
aad
xchg
fst
aaa
dec
sbb
testl
xchg
negb
pop
lds
push
dec
mov
sub
ficompl
lret
subb
pop
sub
bnd
pop
add
and
rcrl
mov
xor
imul
mov
jecxz
inc
mov
adc
mov
ja
dec
add
or
xchg
mov
arpl
mov
push
jne
fnsave
pop
xchg
loope
inc
cmp
adc
push
daa
and
jns
insl
fists
and
gs
fisubrs
cwtl
rcr
xor
daa
xchg
and
inc
mov
xchg
jnp
aad
push
das
dec
inc
inc
cmpsl
mov
add
jle
shr
add
clc
leave
cmp
aas
adc
shrl
push
mov
lret
jo
xor
xor
and
adc
push
xchg
shrb
and
sub
shlb
or
hlt
std
inc
stc
mov
imul
mov
insl
mov
xor
xchg
jae
test
jg
mov
mov
roll
jbe
pop
mov
ret
pop
push
cmp
enter
insb
rep
cmp
clc
mull
xor
and
jp
adc
adc
add
mov
inc
mov
xchg
sub
mov
add
js
sbb
adc
add
ret
cmpb
mov
fisttpll
stos
sub
imul
imul
add
fiaddl
rcrl
clc
out
xor
loop
mov
dec
push
jo
mov
xor
int3
lea
mov
pop
sub
mov
jae
int
inc
pop
add
stos
shlb
fimuls
rcrl
insb
xchg
inc
es
push
dec
or
mov
push
xchg
aam
call
lret
dec
adc
mov
push
cmp
and
ret
in
mov
mov
xchg
mov
fwait
cwtl
adc
mov
sub
add
jge
dec
mov
into
aam
pop
mov
cmp
cmp
sti
xor
push
jle
sub
lret
sub
mov
loope
je
push
inc
sti
addr16
pop
mov
xor
adc
xchg
push
xor
mov
imul
and
into
stos
sbb
inc
js
mov
fcmovnbe
sbb
push
subb
inc
or
pop
push
lock
aam
xchg
lcall
repnz
loopne
pushf
bnd
inc
cmp
xor
loope,pt
pusha
or
rolb
lods
loop
enter
outsl
mov
popa
xchg
sub
jb
sub
ret
jmp
add
int
jnp
aam
pop
testb
xor
pop
popf
push
xor
dec
cmpsb
cmova
scas
lds
mov
movsb
ljmp
mov
add
data16
out
ret
add
popa
xchg
or
push
fld
lret
lock
stc
and
or
and
mov
or
je
or
cmp
xchg
adc
push
pop
push
mov
imul
popa
inc
scas
sub
pop
lock
cmp
xchg
push
jg
stc
pop
call
outsb
lahf
mov
lret
loope
dec
ja
pushf
jne
lds
sahf
outsl
xchg
jae
rclb
inc
jle
lret
insl
pop
rclb
cmp
add
mov
add
push
es
imul
dec
mov
fnstsw
jae
jo
test
fnstenv
popa
jmp
out
mov
shll
aaa
or
xchg
js
aas
subb
shll
cmp
test
pushf
xchg
pop
jp
xchg
sahf
push
fs
sub
les
fisubrl
push
adc
imul
inc
cmovp
xor
sbb
roll
dec
adc
pop
inc
pop
add
adc
das
cmpsb
jo
ss
adc
jne
arpl
mov
lods
fnstsw
jmp
add
pop
ret
insl
mov
les
jne
lret
rcrl
or
add
shll
outsl
mov
push
outsb
ret
loope
add
nop
dec
sub
lock
lret
in
pop
pop
ds
push
xor
js
in
mov
insb
daa
mov
cld
jo
int3
pop
jne
negl
push
insb
xorl
mov
daa
and
mov
and
mov
push
fsts
add
aam
loope
icebp
push
pusha
inc
inc
fidivrs
push
push
in
sbb
or
pop
jge
jg
enter
cmp
lret
xor
aas
test
xor
mov
movsb
add
test
jl
lods
clc
cmpsl
mov
mov
or
mov
pushf
bound
adc
ret
jo
sub
or
mov
enter
pop
jae
bt
or
clc
leave
rcll
dec
adc
mov
mov
sub
mov
dec
enter
push
xchg
mov
jae
add
das
jns
mov
cld
or
add
lock
sub
shrl
inc
and
pop
sub
je
push
loopne
sub
add
adc
arpl
sub
fdivrl
lods
loop
in
scas
push
ret
xor
clc
cmp
inc
xor
dec
int
xor
jmp
jecxz
shrl
push
fsubrp
test
push
or
outsb
sti
mov
lret
int3
sbb
jno
and
jmp
mov
cmp
mov
jae
mov
jb
ljmp
mov
pusha
scas
mov
cmp
sbb
ficomps
jecxz
ljmp
cmp
dec
daa
mov
das
jne
sbb
aaa
mov
lcall
add
ljmp
arpl
push
enter
jae
mov
and
movsl
xchg
jge
movsb
iret
repz
jmp
sbb
inc
mov
mov
push
add
or
in
push
pop
xor
cmp
das
cmpsl
mov
and
jg
pop
mov
cmp
lcall
test
cmp
mov
add
mov
xchg
cld
in
mov
sbb
cmp
push
js
add
leave
jle
pop
pushf
push
push
mov
pop
mov
pop
ja
xchg
mov
je
sub
pop
rol
loop
cmp
mov
xor
cltd
fwait
lea
cmp
jne
and
rclb
or
mov
xchg
aam
jmp
fisubs
sbbb
std
iret
shl
shr
mov
inc
pop
add
sbb
fs
sbbl
dec
push
xor
test
orps
outsb
push
add
jae
pop
sti
je
cltd
fldl
sahf
adc
mov
mov
aad
or
lcall
and
repnz
arpl
movsb
ret
out
shr
push
jmp
xor
pop
gs
push
shrl
std
sbb
jecxz
int
sbb
test
sbb
sub
les
cmp
loopne
leave
sub
pop
jp
fdiv
inc
fwait
push
lods
sbb
add
pop
mov
in
enter
in
mov
sbb
cmpsl
pop
mov
adcl
cli
and
xor
and
stc
fnstsw
adc
repz
pop
xor
push
xchg
mov
lret
or
test
add
pop
daa
inc
cmp
add
mov
jne
gs
loope
push
add
dec
ss
mov
push
xor
mov
out
adc
cmp
daa
test
outsl
add
fs
push
imul
jl
push
cmpsb
imul
clc
sub
insl
hlt
call
and
nop
and
mov
clc
insl
jno
das
mov
pop
bound
xchg
fwait
outsb
jne
cmp
out
aas
dec
stc
inc
inc
scas
out
loope
iret
aas
push
jae
notb
sub
sbb
jmp
cmp
addb
inc
lahf
daa
outsl
adc
leave
in
imul
in
in
or
mov
sbb
jmp
incb
cs
imul
add
out
imul
sub
out
out
xchg
out
icebp
or
pop
adc
mov
push
sub
bt
lcall
lods
ds
repz
push
fdivrl
lret
testl
adc
sub
dec
stos
dec
sbb
ja
push
and
mov
xor
lods
insb
arpl
leave
add
ds
xchg
cmpsb
sahf
lea
pop
sbb
addr16
sbb
clc
sbb
adc
inc
xor
cmp
push
jmp
push
jecxz
pop
or
sub
out
jge
data16
test
mov
fmulp
push
jnp
xchg
mov
stos
sbb
xchg
mov
mov
mov
lret
jmp
inc
inc
stc
popa
lret
jmp
aad
js
lahf
sub
ja
mov
dec
pop
ds
scas
rdtsc
push
ljmp
add
cmpsb
pop
or
dec
mov
fst
stos
fisubl
ret
dec
sub
imul
mov
aaa
inc
mov
cltd
lcall
inc
jmp
or
mov
lret
or
ret
add
fcoms
das
sbb
fs
jp
jecxz
push
insb
imul
scas
fsubr
pushf
clc
testl
fmull
out
sbb
add
test
outsb
add
adc
cmp
dec
lods
sahf
push
fs
xchg
cmp
aad
and
sbbl
jecxz
jne
in
std
imul
std
or
sbb
and
idiv
mov
pop
adcb
fdivr
cltd
popf
mov
mov
adc
fldcw
pop
shl
mov
lahf
mov
xchg
push
xlat
mov
jg
into
lcall
ja
cmp
sub
pushl
mov
insb
loop
xchg
movsl
cmp
cmp
cli
lds
pop
and
subl
cmp
outsb
add
xlat
mov
dec
cmp
xor
and
mov
add
pop
out
dec
or
pop
out
shlb
insb
icebp
lods
shll
dec
sbb
xor
jge
pop
rclb
push
xchg
out
popa
incl
xor
jno
ret
add
sub
std
jne
jns
aaa
mov
js
leave
pop
clc
cs
lahf
xor
cmp
std
dec
cmp
hlt
in
xlat
jecxz
mov
sub
push
iret
push
subl
rorl
cmova
sbb
push
cs
sbb
push
ja,pt
cld
lods
push
negl
add
push
push
jns
push
gs
xor
shlb
dec
mov
int
loope
nop
adc
and
insb
addr16
xchg
and
inc
cmp
popf
pusha
sub
mov
clc
jb
sbb
push
lahf
or
imul
hlt
push
adc
fldenv
aaa
outsl
cltd
inc
std
mov
and
daa
int
cmc
and
xchg
lds
xchg
push
and
jbe
gs
cltd
sub
push
pushf
rorb
mov
push
test
and
rolb
mov
xchg
push
movsb
mov
and
adc
out
popf
in
lret
rclb
fbstp
addr16
aam
mov
ret
pop
stos
jg
pop
shll
out
stos
daa
jp
pop
ljmp
add
push
xchg
into
clc
lods
jne
jecxz
leave
or
adc
jb
dec
outsl
xchg
jns
lahf
jne
xlat
out
lds
stc
jbe
scas
inc
aaa
and
nop
xchg
roll
cmpsl
dec
shr
adc
out
jg
and
test
and
xor
popa
in
add
xchg
xchg
add
int3
dec
repz
cs
das
dec
xor
lods
jns
jle
cmp
dec
scas
mov
aam
mov
mov
sbb
imul
add
jp
sti
cmp
mov
adc
cmp
pop
mov
or
mov
cld
jg
add
in
mov
shrb
addr16
gs
xchg
jl
cwtl
push
rcrl
ds
pop
cwtl
jns
daa
sar
jne
adc
iret
decl
in
sub
mov
push
nop
dec
inc
fidivl
mov
inc
sbb
in
mov
pop
cli
xorl
rcl
mov
sub
cli
ja
sar
xchg
repz
enter
js
shll
xchg
pop
mov
daa
jmp
xchg
call
lahf
and
mov
xor
fcomip
fwait
push
lahf
pop
sub
js
mov
inc
mov
sbb
repz
pop
es
aad
jae
mov
pop
add
push
fcoms
dec
mov
xlat
lahf
pop
addr16
fldln2
mov
cwtl
xor
popf
cli
mov
adc
xor
inc
or
mov
fcoms
mov
mov
push
push
cmp
mov
enter
cmp
pop
scas
push
fimull
dec
jnp
pop
cli
pusha
sahf
sub
inc
lret
lret
sti
fucom
sbb
cmp
lds
jb
inc
mov
mov
push
and
jl
ret
pop
nop
or
mov
fsubl
jmp
cmp
push
push
mov
xor
pop
cmp
pop
and
and
leave
ret
cld
or
rclb
icebp
loope
mov
test
pusha
mull
mov
jmp
push
push
and
cmp
mov
cmp
push
xor
jb
mov
icebp
subb
test
jno
je
sbb
gs
add
pop
out
lock
push
and
push
sar
push
inc
nop
cwtl
or
pop
jbe
xor
repz
xor
dec
rol
jg
jo
mov
add
and
cmp
xchg
je
es
inc
je
lock
ds
or
scas
jns
xor
lds
test
bound
imul
int3
cwtl
or
mov
sbb
ja
pop
dec
fdivrl
inc
jnp
pop
lahf
out
test
subl
scas
jge
or
int3
sbb
lret
jecxz
enter
in
add
add
sbb
pusha
mov
addl
movsb
jmp
or
gs
jnp
repz
and
or
xchg
inc
ljmp
xlat
mov
jae
add
cld
sbb
mov
cmp
loopne
ja
adcl
