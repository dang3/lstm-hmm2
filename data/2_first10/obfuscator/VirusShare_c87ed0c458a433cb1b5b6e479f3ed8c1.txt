push
call
ret
ret
push
add
shl
mov
mov
mov
inc
push
les
imul
test
and
lcall
popa
movsl
pusha
adc
lock
sub
test
into
xchg
lods
das
enter
mov
sbb
lods
mov
or
rcrl
cmp
movsl
dec
dec
mov
inc
push
sti
pop
and
inc
fcomi
mov
dec
xor
cmp
mov
fstps
push
mov
jnp
dec
out
push
scas
pop
add
cmpsb
test
or
mov
repz
enter
aaa
jge
inc
pushf
pop
scas
pop
cmpsl
out
sub
push
ds
or
push
arpl
mov
sub
into
adc
repz
mov
ret
sti
cmp
divl
mov
pop
aam
inc
push
adc
sub
inc
dec
mov
cmp
inc
cmp
ss
xor
dec
dec
out
shl
and
into
out
sub
dec
jle
pop
xchg
sub
xor
nop
enter
lahf
push
pop
js
cs
shll
adc
aas
mov
xchg
lds
sbb
daa
out
push
pop
lret
in
pop
test
push
iret
inc
adc
xchg
enter
decb
loop
sbb
jo
xchg
in
and
push
and
jmp
insl
movsb
sti
xchg
mov
movsl
shrb
push
inc
je
jnp
stos
xchg
ret
sub
push
outsl
in
pusha
cmc
mov
lods
mov
int
clc
xor
push
mov
push
jge
insl
dec
mov
in
icebp
xchg
mov
jae
jbe
mov
mov
pop
add
int
push
imul
dec
popf
mov
arpl
add
mov
flds
sub
fs
fwait
int3
stos
push
push
mov
or
popf
popf
stc
stos
ljmp
mov
in
inc
out
cmp
gs
push
cmpsl
pushf
test
push
ds
mov
xor
inc
jnp
out
test
mov
cmp
movsl
jmp
mov
xchg
mov
push
pop
sbb
jge
int
cmp
rcrl
in
dec
pop
add
std
sbb
outsb
mov
dec
add
insl
into
ficoml
out
outsl
popa
ljmp
add
jae
iret
and
rcll
lcall
lds
add
ret
mov
sbb
dec
push
pop
outsl
jmp
and
mov
lea
enter
lret
dec
lock
rcrl
sub
cmp
and
mov
dec
adc
push
test
fsubp
bound
sbb
les
and
into
and
sbb
aam
sti
rolb
data16
aas
adc
inc
scas
fists
aas
or
int3
clc
lcall
fadds
loope
imul
fidivrl
movsb
hlt
shll
mov
adcb
adc
outsb
sub
test
jecxz
push
cmovns
jecxz
xor
jb
mov
push
popa
dec
mov
inc
adc
or
mov
inc
push
or
mov
cmpsl
xchg
xchg
xlat
dec
scas
dec
fdivr
int
mov
push
sub
mov
inc
imul
xchg
dec
sub
jo
int3
pop
xor
adc
dec
mov
loopne
xor
das
out
aam
test
xchg
hlt
and
jg
lret
mov
leave
add
icebp
mov
ret
bound
stos
jo
xchg
xor
lcall
mov
mov
xlat
or
push
loopne
xor
loope
stos
mov
add
lret
pop
mov
mov
shll
inc
cmp
jmp
jle
mov
iret
sbb
and
cmp
xchg
les
shll
mul
sub
mov
adc
xor
push
or
push
in
dec
addr16
ret
mov
add
cmpsb
inc
lret
add
push
pop
in
push
addr16
insl
jecxz
in
sbb
add
popa
mov
add
mov
insb
lock
arpl
push
pop
mov
insl
and
push
xchg
clc
std
ret
xor
dec
push
lock
sub
pusha
push
jnp
in
loopne
xlat
mov
mov
sahf
push
out
dec
fwait
pop
mov
lcall
daa
test
adc
mov
cmp
xchg
push
aad
lock
inc
js
dec
xchg
cli
aam
mov
dec
xor
pop
or
outsb
push
sbb
mov
into
sbb
movsb
cmp
popw
and
bnd
xchg
out
data16
pop
add
stc
les
mov
iret
nop
mov
mov
outsw
lods
dec
add
mov
scas
mov
addr16
hlt
push
lcall
test
add
int3
stc
test
xor
iret
or
adc
aas
shll
xor
jo
or
mov
cmp
jae
shll
adc
inc
lods
outsl
push
shl
pop
fwait
movl
in
mov
adc
arpl
in
shlb
inc
leave
jne
sbb
in
mov
mov
adc
inc
add
xchg
mov
leave
mov
pusha
lock
adc
cmp
shl
es
and
mov
out
ljmp
and
adc
notb
es
mov
xor
and
or
and
mov
sbb
mov
jne
push
jge
or
inc
mov
add
xor
mov
lods
lahf
rorl
test
lcall
add
xor
pusha
cmp
pop
jl
fabs
mov
jns
xor
mov
push
xchg
mov
cmpsl
popa
mov
jl
imul
sub
test
xor
outsl
xor
fmulp
into
mov
jb
mov
in
rep
bound
pushf
inc
scas
mov
xchg
cltd
mov
rorl
shr
shrl
or
push
mov
mov
and
mov
mov
xchg
push
sub
jb
lret
std
movsl
xlat
push
in
lahf
or
insb
jne
xchg
lock
shll
icebp
pop
movsb
and
out
or
xor
fwait
pop
xchg
shll
sbb
ret
movsl
das
xchg
lahf
jmp
adc
into
pop
add
adc
stos
shlb
mov
daa
lock
rcr
clc
mov
popa
cli
faddl
roll
getsec
test
pusha
mov
xor
dec
js
hlt
int3
mov
out
call
hlt
cwtl
dec
imul
mov
or
lret
adc
mov
mov
sbb
fcoms
jnp
lret
sbb
push
iretw
cwtl
sti
iret
and
data16
ds
sti
xchg
mov
jp
stos
das
sbb
cmp
sbbb
bound
or
mov
and
stc
nop
fldenv
repz
pop
shl
and
cld
std
xchg
add
xor
xor
imul
gs
fdivrs
scas
out
pop
and
addb
aas
fwait
cmp
adc
in
adc
fildl
sti
dec
data16
xlat
out
push
inc
jne
int3
dec
repnz
add
aaa
or
pop
enter
imul
bnd
cmpsl
pop
aaa
std
jo
outsl
inc
filds
mov
jne
push
sbb
or
hlt
mov
jecxz
inc
mov
lcall
pusha
daa
add
cld
push
adc
leave
imul
imul
into
mov
loope
ljmp
push
imul
xor
std
mov
sub
outsl
arpl
adc
or
sbb
pop
jp
push
jecxz
and
in
out
daa
pop
ret
mov
and
ja
and
fldpi
pop
or
popa
insl
xor
ds
stos
xor
or
jo
push
adc
ret
sub
pop
pushf
pop
xchg
xchg
repz
pop
cmp
mov
lahf
jne
xchg
pop
cmpsb
mov
sbb
push
sub
iret
popf
mov
in
ja
clc
inc
add
cmp
cmp
arpl
mov
inc
push
dec
pop
adc
adc
imul
loop
sub
in
insb
stos
lods
mov
inc
push
fimull
lret
sbb
xor
mov
mov
js
sahf
xlat
jecxz
sub
int3
xor
loop
popa
je
inc
or
sbb
jle
leave
adc
arpl
inc
sbb
inc
sbb
push
inc
mov
sti
leave
jle
add
lahf
sbbl
mov
aas
xchg
insl
jbe
insb
fwait
lock
cmp
int3
testb
xchg
inc
xor
jnp
loopne
dec
dec
inc
int
jg
mov
push
sub
push
sbb
push
add
js
mov
fucomip
in
adc
imulb
addr16
call
into
add
movsl
cli
push
pop
js
shlb
lret
aam
shlb
loopne
mov
sub
push
cmp
xor
rcll
rcrl
xchg
fists
pop
inc
popfw
add
repz
xor
sbb
lock
movsl
insl
les
aam
inc
cmpl
cs
xchg
lds
dec
seto
clc
mov
and
jge
adc
jo
adc
or
push
fwait
mov
fldt
push
pop
sbb
pusha
hlt
push
idivb
cmp
dec
xchg
icebp
sar
or
push
test
mov
stos
andl
fistpl
fmull
ret
dec
jbe
popf
fimuls
cmp
lret
or
mov
popa
xchg
test
sub
mov
push
sbb
repz
loope
mov
push
and
lea
movsl
daa
in
fistpll
mov
frstor
cld
jmp
mov
cmp
out
aas
stos
jns
push
inc
testb
inc
mov
imul
push
add
stc
daa
jo
cltd
aaa
imul
pop
inc
aad
mov
cmp
cmp
cmp
dec
xor
loop
ljmp
sbb
orb
push
imulb
sbb
sbb
das
pop
roll
cltd
loopne
repz
mov
add
mov
arpl
scas
test
or
orb
and
sub
out
cmp
lahf
outsb
dec
rolb
fildll
stc
stos
push
dec
sbb
lock
shll
inc
repnz
cmpsl
push
data16
das
pop
sti
pop
mov
or
sbb
insl
push
xchg
aas
sbb
inc
rcrl
pop
push
rcl
rclb
sub
inc
into
add
into
enter
outsl
push
and
mov
mov
stc
add
in
push
push
sbb
movsl
push
adc
mov
out
pop
arpl
fdivl
mov
sbb
fsubrl
add
xchg
arpl
stc
std
cmpsb
push
xchg
mov
sub
clc
leave
pop
cmpsb
clc
das
sub
xor
out
cwtl
dec
into
sti
ficomps
jge
jbe
xchg
inc
or
mov
add
faddl
jae
inc
jne
push
sahf
lahf
lret
cmpb
inc
outsl
imul
and
dec
sarb
popf
add
stos
xchg
test
test
xor
jbe
sub
mov
sub
xchg
negl
cmpsl
xor
mov
mov
add
push
call
mov
loop
test
leave
and
mov
cmp
jnp
test
fsubp
jo
sub
push
repnz
orb
jns
adc
jne
div
xor
outsb
imul
lds
cmpsl
mov
add
mov
inc
repnz
inc
addr16
dec
shrl
mov
inc
in
push
mov
sbb
mov
pop
mov
xor
and
imul
idivl
add
fisubl
adc
dec
and
inc
prefetchw
imull
pop
or
outsl
jo
add
mov
or
loopne
inc
iret
int
or
mov
outsb
aad
mov
aad
lret
ret
mov
sbb
mov
push
add
dec
sbb
and
inc
mov
inc
lret
xchg
sbb
ficoms
mov
mov
sbb
sbb
into
es
push
add
mov
and
arpl
testb
xchg
mov
popa
xchg
push
scas
std
mov
loope
sub
mov
fwait
aaa
in
mov
iret
push
rcl
xchg
mov
mov
xor
sbb
lahf
lods
mov
and
jmp
xchg
sbb
loope
repz
add
ficompl
jns
rcll
xchg
into
push
movsb
popf
sub
fistps
sub
mov
or
or
sbb
bound
sub
int
push
scas
cmp
xchg
fistps
jmp
in
test
jp
or
repnz
les
rclb
out
push
fld
popa
push
into
jp
iret
je
dec
nop
adc
jne
xchg
popf
mov
push
jae
sbb
nop
ds
pop
lcall
mov
dec
sub
or
ja
sbb
adc
lds
ljmp
out
or
cmp
pop
les
xchg
aam
adc
lods
std
ds
outsb
cmp
or
pop
mov
mov
or
and
test
shlb
out
lods
orl
ss
or
aaa
inc
mov
ja
pop
xchg
lock
pusha
inc
sbb
shlb
jbe
push
dec
pop
popa
mov
push
aas
inc
add
pushf
sahf
stos
js
and
imul
jp
inc
jns
addr16
movsb
cmp
xor
rcll
cmp
ret
jecxz
and
xor
inc
lahf
jge
dec
push
sti
call
outsl
movsb
add
xchg
mov
fisttps
in
and
hlt
shlb
sub
cmp
mov
fbstp
mov
mov
add
stos
cs
jnp
je
dec
dec
mov
scas
das
flds
cmp
pop
test
push
and
lcall
add
xchg
das
outsb
bswap
add
or
rcrb
xchg
sti
mov
pusha
xor
jne
ja
jge
push
xchg
ja
cli
push
int3
mov
sbbl
iret
lcall
cmpsl
push
or
pop
xor
lock
cmp
xor
jo
ret
addl
rorl
or
dec
jne
push
js
insb
mov
stc
mov
call
flds
inc
xchg
adc
sub
int
xor
ret
mov
addr16
xor
inc
mov
int3
scas
mov
dec
sub
shl
inc
in
aad
sbbl
in
dec
cmp
roll
pop
in
fcom
or
flds
pop
or
pop
pop
sarl
mov
fcmovne
in
iret
pop
or
sub
or
addb
pop
xchg
mov
pop
push
insb
lret
mov
cltd
xchg
mov
push
fidivs
mov
enter
xor
mov
push
ja
adcl
paddusw
andb
jle
sahf
mov
iret
and
nop
shll
mov
push
loopne
push
and
popa
lcall
call
les
ja
and
push
loopne
pop
fistps
xor
ss
fisubrs
xor
mov
js
push
into
mov
xchg
adc
sub
sar
adc
ret
lock
add
jno
cmp
fwait
push
js
xchg
ja
enter
ss
pop
xchg
movsl
sbb
adc
cmp
jg
pushl
out
mov
sub
push
xchg
movsl
cmp
ficoms
or
xchg
test
mov
inc
pop
push
and
jns
add
jl
test
shrd
push
mov
pop
push
add
mov
cmp
int3
xlat
sbb
int
mov
push
jl
loop
mov
xchg
mov
and
and
xchg
sarb
xlat
cmp
lods
jmp
rcl
mov
leave
scas
adc
push
test
imul
fldenv
jbe
sub
lret
jecxz
sub
jno
mov
inc
mov
xchg
fmull
inc
xlat
jecxz
inc
jbe
aaa
scas
mov
pop
imul
decb
std
pop
push
rolb
add
sbb
sbb
and
out
sbb
leave
xchg
xchg
adcb
pop
mov
jno
cmp
pop
cwtl
add
lea
mov
out
ljmp
and
jg
loopne
mov
push
out
sub
nop
arpl
lock
mov
inc
aam
fistpll
das
push
sti
push
xchg
sarl
fildll
lock
cmpsl
sbb
mov
adc
mov
lret
cmp
adc
pusha
lcall
cmp
insb
imul
xor
push
sarb
dec
push
jae
insb
movsb
adc
push
xchg
xor
dec
imul
sub
inc
mov
arpl
sub
mov
mov
mov
mov
loope
or
cmpsb
lcall
or
imul
arpl
adc
push
mov
mov
fistl
mov
in
dec
cmpsb
fisttps
iret
loopne
dec
inc
punpckhdq
lods
push
notl
loope
push
inc
xor
xchg
shll
scas
mov
push
jno
popa
jle
pop
add
rolb
or
add
das
pushf
cmpsl
nop
jle
pop
outsl
nop
repnz
and
pushf
add
mov
repz
das
inc
mov
or
xchg
roll
addr16
je
pop
pop
adc
gs
mov
clc
into
sahf
lret
addr16
andl
outsl
movsb
pop
adc
mov
jp
popa
mov
xor
ret
xchg
rolb
clc
fists
and
mov
outsl
cmp
lds
push
movl
pop
in
lock
push
or
inc
les
ret
jne
cmp
jno
imul
adc
loop
ret
daa
or
adc
sub
hlt
push
sbb
cli
add
ds
roll
adc
jne
lahf
add
push
ljmp
sarl
insb
lods
mov
xchg
test
mov
les
daa
mov
shrl
ljmp
inc
mov
rclb
ret
insb
and
arpl
cli
cli
pusha
lcall
ds
lods
test
pushf
imul
out
imul
xchg
jo
sub
push
insl
mov
aam
and
bts
scas
xchg
xor
push
pusha
fmuls
xor
daa
mov
cmp
add
int3
xchg
mov
loopne
mov
outsl
in
mov
clc
out
xchg
mov
jg
pop
les
adcl
mov
sahf
test
push
dec
std
icebp
mov
fiaddl
and
jg
add
xor
bnd
push
dec
fmuls
icebp
dec
mov
cmp
pushf
mov
mov
roll
cmpsl
xchg
inc
fsubl
jg
push
pop
out
in
sub
xchg
rcll
fsubrs
cmp
cmc
mov
cmp
shll
cmp
lods
inc
ja
fdivl
shll
enter
jp
je
pop
dec
push
es
pop
aad
mov
dec
popa
cltd
jmp
dec
ss
jmp
inc
in
iret
jg
popa
push
aam
xor
orl
pop
cmp
mov
stc
or
nop
incb
sahf
xchg
mov
or
mov
and
push
xor
gs
in
cmpsb
push
cli
stos
aaa
or
jle
and
enter
jnp
cs
sbb
and
das
push
jl
roll
fnsave
sub
mov
inc
mov
mov
cli
mov
adc
fs
aad
cmpsl
and
adc
jno
xor
push
cwtl
dec
std
mov
mov
fiadds
fistps
stos
lret
cmpsb
movq
inc
add
outsl
or
sbb
pop
sub
inc
sub
repz
das
les
mov
adc
jecxz
ss
adcl
sbb
out
lea
mov
std
xchg
jecxz
jns
xor
ljmp
sbb
mov
and
cmpsb
daa
test
clc
and
sub
xchg
aam
andl
pop
or
xchg
les
lahf
test
scas
cmp
mov
fs
dec
ds
jns
xor
fucomp
dec
jmp
mov
lahf
pop
mov
xchg
mov
pusha
clc
mov
sbb
jo
jnp
out
adc
cli
scas
fcoms
sarb
xor
mov
ja
sbb
call
sub
xchg
mov
cmp
xchg
jecxz
mov
adc
in
and
aad
pop
ret
push
std
add
sub
and
sbb
fldenv
insl
jo
in
mov
hlt
fbstp
dec
cmp
scas
rcrl
dec
popa
arpl
push
add
push
ds
adc
test
mov
mov
shll
cmp
loopne
sbb
add
mov
js
mov
pop
push
ret
enter
pop
xchg
adc
cmp
mov
adc
or
jno
adc
int3
out
adc
fs
loope
jae
xor
lea
fadds
loopne
xchg
push
hlt
push
push
gs
test
andb
fmull
push
test
mov
les
mov
jecxz
push
lock
xchg
push
add
jmp
fcom
mov
pop
imul
clc
jmp
in
je
rcrl
xchg
ljmp
ja
fwait
in
fiadds
xor
pop
bound
xor
dec
daa
call
adc
xor
test
outsb
mov
cmpsl
in
nop
in
ja
jge
icebp
jg
and
mov
sub
mov
mov
cmpsl
and
lds
inc
stos
mov
sbb
pusha
enter
dec
outsb
sub
jg
push
cmp
lahf
pop
out
cmp
outsb
push
sub
loop
jmp
xchg
es
and
ret
lret
cmp
outsb
xchg
repz
push
or
popa
dec
jecxz
pop
bound
aas
jb
xor
ret
xchg
cmpsb
mov
cmp
cltd
cmpsl
rcll
leave
sbb
lods
sub
jbe
test
adc
add
sbbl
jne
xchg
mov
jb
out
adc
dec
cmp
lock
es
ss
cmp
clc
aam
add
lret
int3
xchg
mov
dec
fdivs
add
mov
mov
lods
mov
cmp
fs
mov
or
int3
inc
js
cs
inc
ss
mov
mov
dec
fs
sub
cwtl
xchg
adc
mov
lods
sub
les
rcrb
out
sahf
mov
sub
xor
push
cltd
lret
lea
push
cld
and
sub
shlb
test
outsb
arpl
fwait
jae
outsb
add
ljmp
out
cmp
fmul
mov
dec
lahf
pushf
push
out
fistl
test
repz
and
sahf
sbbb
cld
adc
add
jbe
pop
ss
int
cmpsl
in
cmp
ds
mov
loop
pop
insl
xchg
scas
mov
popf
mov
push
fs
or
in
xor
mov
lcall
inc
aas
ret
mov
push
inc
push
jae
fst
loopne
pop
out
loope
sbb
pop
fnsave
imul
cltd
test
iret
adc
or
test
mov
xor
stos
mov
mov
jecxz
or
or
mov
ret
repz
push
or
dec
lock
jns
addr16
pop
test
dec
lahf
fisubl
push
mov
dec
or
dec
mov
mov
sbb
jp
xchg
sbb
mov
sbb
push
nop
xlat
imul
sahf
negl
mov
rolb
fldcw
xchg
mull
jmp
lds
and
ss
nop
hlt
cmp
cmovns
std
jle
jno
push
adc
sub
mov
lock
sub
dec
dec
mov
jnp
out
icebp
adc
dec
sub
mov
loope
out
clc
push
xchg
lcall
jle
mov
lret
jp
enter
outsl
out
or
mov
fwait
xor
xchg
sbb
aaa
push
push
lods
xor
pop
cmpsb
aam
mov
cmp
cmp
sub
adc
loopne
daa
mov
lret
insb
ret
mov
hlt
pop
lea
add
mov
std
cmpsb
fcompl
orb
xor
push
mov
leave
jg
addl
aam
mov
mov
xor
scas
adc
int
push
rorl
daa
xchg
push
inc
jmp
push
js
mov
mov
jle
mov
clc
push
mov
scas
dec
push
inc
push
shrb
mov
and
mov
mov
push
jge
ds
adc
aas
fisttps
mov
fsubr
adc
xchg
cmpsb
sub
mov
jecxz
fadd
pop
adc
push
arpl
lcall
pop
pop
pop
test
push
pop
scas
int
push
jne
gs
ret
push
stc
int
in
testl
cmp
mov
and
push
pop
lret
inc
jp
outsl
push
movl
pop
and
int
cmc
mov
std
xor
jmp
xchg
fsubr
push
rorb
cmp
out
jg
dec
cmp
ss
push
mov
lahf
shll
call
ret
mov
dec
aaa
pop
in
lret
repz
dec
and
daa
in
pusha
or
shlb
cli
outsb
jmp
adcl
jnp
cmp
je
loopne
inc
push
push
lock
cld
or
mov
xchg
int
jle
das
push
cli
push
dec
test
pop
fs
cli
neg
cmpsl
fcmovne
or
clc
xchg
stc
repz
mov
outsl
mov
adc
and
mov
lock
and
ret
mov
xchg
pushf
cltd
inc
jne
cmp
push
or
sub
jb
inc
jns
test
and
stc
fistps
cmp
pop
jp
sbbl
lea
push
xchg
inc
dec
pushf
pop
dec
aad
xchg
ss
xor
in
and
sbb
insb
cli
int
lods
mov
sbbb
fidivs
jecxz
fidivrs
jg
push
dec
add
cmp
dec
incl
jge
xor
inc
mov
adc
icebp
and
lods
xchg
sub
imul
mov
mov
mov
xchg
loope
jmp
pop
aaa
jnp
dec
lret
cmp
popf
sahf
lods
mov
jo
inc
and
stos
sub
aaa
sub
cmovs
mov
sbb
scas
xor
push
inc
mov
sbb
cmpsb
in
push
sbb
dec
cmp
pop
inc
mov
cltd
rorb
outsl
add
mov
pushf
push
sarl
dec
imul
mov
mov
push
nop
dec
pop
ds
inc
xor
in
enter
xor
imul
aas
mov
push
jmp
ljmp
in
mov
outsb
and
mov
lcall
aad
and
or
pushf
jnp
stos
ret
dec
xlat
or
and
ret
mov
mov
mov
jae
jnp
in
xchg
std
cld
cmc
jl,pn
out
mov
sti
push
in
out
imul
or
gs
jbe
inc
and
sarb
dec
sub
push
inc
xor
icebp
pop
lret
inc
push
cmp
pop
inc
xchg
jne
jns
sti
jne
mov
inc
jecxz
gs
xchg
xor
mov
mov
imul
mov
adcb
or
inc
ja
or
mov
adc
adc
xor
repnz
xor
cmpsb
sbb
cmp
out
shrl
jle
xor
test
add
pop
push
outsb
loopne
imulb
add
cmp
mov
cmpsl
imul
mov
pop
lret
leave
aam
clc
adc
xchg
adcl
dec
jae
pop
repnz
jae
dec
pop
adc
dec
nop
aam
add
call
push
and
cli
sub
test
sub
outsb
out
jmp
inc
and
cltd
pop
mov
gs
das
jae
decl
insb
push
jge
dec
pop
xor
or
mov
arpl
sbb
dec
xor
pop
inc
cwtl
xchg
dec
ljmp
sub
jnp
jo
xor
inc
cmp
ret
fldt
repnz
fcomps
dec
or
dec
sub
fstpt
fldl
js
jne
arpl
pop
into
inc
sub
push
lock
cmpsb
insb
outsl
lods
adc
xlat
icebp
pushf
scas
jmp
mov
xor
lods
pop
out
enter
jns
ja
sbb
add
dec
pop
fsubrs
test
loop
loopne
cmp
jbe
inc
popf
mov
push
jo
dec
mov
mov
xchg
ficomps
fwait
or
hlt
arpl
and
mov
jnp
setae
lret
bound
mov
inc
mov
scas
jl
pop
decl
dec
mov
pop
lods
sti
push
test
cmp
inc
adcl
add
sbb
stos
scas
or
mov
jp
jmp
negb
pop
inc
add
adcl
mov
mov
push
cmpsb
cmpsb
sub
aad
inc
loopne
leave
cwtl
insb
xchg
lock
cld
sbb
rdpmc
mov
add
jle
daa
jecxz
cmp
sbb
movsb
addr16
hlt
mov
dec
daa
mov
dec
mov
xchg
mov
ret
mov
jecxz
std
mov
pop
ja
loope
cmp
jp
in
int
jmp
dec
push
mov
int3
out
or
jae
xor
xchg
and
mov
ret
test
popa
lods
xor
out
inc
lea
loop
stc
sub
inc
dec
scas
gs
xor
shrl
test
in
into
pop
or
pop
sub
jns
xchg
imul
inc
jae
mov
mov
pop
hlt
xchg
xchg
push
frstor
inc
pop
cmc
test
outsl
mov
sbbb
pop
cmp
mov
mov
rcr
insb
lret
xor
imul
cmp
jnp
imul
arpl
add
lock
popa
mov
aaa
xchg
hlt
mov
xchg
pop
jmp
notb
mov
and
insb
mov
flds
add
in
push
shr
xor
in
fcom
mov
dec
loope
insb
xchg
pop
ds
adc
jns
jne
jae
push
fsts
push
add
add
fs
add
aas
mov
jp
cmpsl
into
or
push
addr16
push
ss
stc
mov
xchg
xchg
mov
ds
dec
test
mov
pop
or
pop
pop
xor
dec
scas
or
add
and
pop
add
cld
lahf
pop
sbb
imulb
jae
subb
or
fistpll
stc
stos
aas
rclb
aam
jmp
imul
cs
add
subl
aas
pop
and
bound
adcl
mov
pop
inc
adc
out
sar
sbb
mov
jmp
sub
jge
inc
aad
test
stos
stc
jbe
push
or
in
push
xchg
mov
test
movsl
sub
mov
scas
or
add
xchg
fnstenv
push
stc
add
push
pushf
ret
test
sar
fsubrp
dec
xlat
decl
stos
mov
mov
repnz
pop
sti
mov
jae
pushf
pop
cmp
les
cli
icebp
mov
or
je
add
adc
sbb
pop
sub
repnz
jbe
add
lods
sbb
ficomps
popf
or
outsl
push
pop
and
lret
xchg
xor
lods
push
mov
aam
inc
mov
out
jl
dec
push
xchg
shrl
shr
jecxz
or
push
pop
lret
out
test
outsb
and
cltd
jbe
pop
cmp
adc
or
roll
inc
dec
add
inc
or
pop
mov
cs
sub
adc
pushf
out
cs
imulb
shll
pop
adcb
das
fcomp
dec
cmp
nop
out
js
jp
sbb
sti
pop
mov
clc
jbe
jbe
mov
xchg
scas
outsl
call
call
mov
jo
inc
pop
mov
inc
test
xchg
out
lock
btc
xor
mov
mov
gs
mov
mov
jg
sbb
xchg
stos
rorl
and
addr16
mov
xchg
mov
lods
std
jmp
push
pop
rcrb
jmp
sbb
or
lahf
cmc
and
jl
cs
xor
ja
aad
stos
xchg
mov
aad
pop
push
popf
rolb
fwait
cs
sbb
andb
mov
fwait
das
or
add
in
jl
pop
sbb
call
pop
xchg
stos
js
cld
pop
cmp
insl
mov
mov
dec
or
outsb
addl
std
out
adc
and
mov
mov
out
adc
cmp
jg
lea
test
sub
cmp
xchg
je
mov
inc
lods
cmp
dec
into
add
mov
mov
sbb
jo
inc
xchg
mov
jle
aad
sbb
and
pop
adc
divb
enter
fdivrl
imul
inc
mov
popf
loop
adc
imul
sub
ret
cld
dec
stc
mov
outsb
aam
insl
int
mov
adc
inc
shrl
dec
int3
gs
adc
out
iret
and
sub
mov
mov
xor
clc
jns
cmp
jge
pop
ret
inc
or
insb
les
fsts
xor
rorl
out
mov
inc
mov
push
jno
xchg
aam
or
cwtl
pop
mov
aad
pop
push
enter
dec
cmpsb
fwait
xchg
inc
or
jno
popf
into
addr16
fwait
xor
mov
mov
movsl
mov
mov
jle
jge
fcoms
push
or
add
fsubl
imul
gs
ja
test
cmp
ds
dec
sbb
jno
sub
xchg
repz
fldt
adc
sbb
sbb
lds
mov
jle
or
or
push
call
test
jns
xchg
iret
or
iret
pop
push
es
addl
xchg
push
sub
adc
jp
outsl
jmp
cli
stc
sub
xchg
or
add
orl
push
sub
pop
imul
and
sar
xchg
inc
xor
nop
push
divl
cld
stos
enter
gs
mov
cmp
pushf
inc
ds
xor
loop
adc
sub
pop
insb
dec
testb
imul
mov
mov
sub
insl
push
inc
or
fdiv
sbb
loope
arpl
and
imull
sahf
jo
sbb
and
push
aad
jp
jno
bswap
leave
push
int3
push
aaa
push
iret
icebp
inc
jnp
inc
adcb
div
mov
xor
xchg
outsb
pop
mov
xor
imulb
dec
imul
or
adc
cmc
push
sbb
xchg
test
xchg
push
shr
out
outsb
and
loop
das
out
pop
push
xchg
decb
into
test
push
fiadds
aas
hlt
insb
hlt
jae
cld
sbb
shl
sbb
aad
sub
shrb
cltd
pop
inc
mov
jb
pop
adc
dec
pop
in
mov
inc
push
lds
je
xor
inc
dec
in
adc
fld1
std
shrb
pop
inc
mov
std
test
pop
lods
jp
mov
sub
mov
mov
inc
jae
add
icebp
ficomps
fcmovnu
sub
jmp
adc
mov
inc
std
aaa
mov
sub
iret
pop
mov
sub
int
or
inc
sbb
leave
mov
mov
sbb
jae
test
test
es
inc
loopne
es
cs
pop
push
mov
pop
cmp
into
lock
test
icebp
push
in
mov
push
inc
xchg
aad
pushf
incb
rorl
stos
pop
add
lods
das
ret
ja
jne
and
test
push
xchg
test
and
ret
js
inc
leave
cmp
paddusb
cmp
cmpsb
orb
sub
iret
jle
sub
adc
sub
xor
adc
loop
jmp
ret
pusha
or
mov
inc
arpl
ja
mov
xchg
jo
push
jo
int
adcb
fistl
mov
sbb
orl
fidivs
test
scas
add
outsl
adc
fs
push
xchg
aas
pop
pop
mov
sbb
psrad
outsb
cmp
leave
or
imul
add
sub
lret
jecxz
add
mov
cmp
mov
pop
or
inc
mov
stos
mov
adc
and
jg
popf
lds
mov
adc
push
inc
out
jns
das
push
add
sbb
push
jns
add
push
push
jne
imul
add
int
pusha
stos
adc
mov
or
mov
rcrl
jge
es
imul
es
test
stos
scas
jae
cli
aaa
mov
push
shlb
pop
cmp
leave
fwait
dec
movsl
fcompl
in
fcmovnbe
dec
int3
or
push
jge
ss
dec
xor
adc
pop
popf
test
sub
fwait
leave
xchg
fsubrl
mov
cmpsl
jo
aad
and
aad
push
outsb
je
mov
sub
sbb
lock
and
cmp
mulb
ja
add
mov
cwtl
addr16
shlb
and
lret
ss
mov
icebp
scas
les
clc
mov
fdivs
pushf
test
adc
mov
pop
bound
mov
js
or
test
adc
adc
cmp
lock
mov
xchg
inc
ds
outsb
xchg
pop
and
xorl
or
fndisi(8087
div
and
in
push
dec
cmp
aaa
sbb
ret
xor
ret
or
or
popa
mov
mov
sti
test
xor
push
xor
jne
mov
adc
or
fbstp
add
jmp
jo
mov
rcrb
jle
repz
push
fbstp
mov
ror
in
imul
mov
adc
sub
dec
jo
dec
push
push
pop
xlat
pop
adc
ret
cmp
xor
gs
aas
jge
das
aam
mov
jge
es
clc
ds
ret
nop
xchg
push
je
jg
loop
and
lods
mov
cmpsb
test
push
add
cwtl
mov
out
test
cmp
inc
jl
add
loope
dec
orl
pop
sti
fcompl
xchg
add
adc
dec
ds
push
adc
lcall
and
xchg
mov
mov
movsl
mov
mov
sub
in
adc
insl
cmp
inc
mov
push
inc
inc
cmc
inc
cld
mov
mov
test
cmc
jb
cmpsb
stos
mov
xchg
sahf
xor
adc
mov
cs
mov
cmc
outsb
mov
jne
je
or
jns
mov
mov
inc
xor
popa
push
insl
ret
cld
sbb
xor
ljmp
jp
add
mov
in
jb
cwtl
jg
pop
adc
cld
add
addr16
push
sub
cmp
sbb
dec
mov
ret
adc
in
mov
ja
and
xchg
inc
aad
testb
les
je
or
adc
pusha
inc
jb
adc
xchg
data16
hlt
push
pop
mov
pop
js
rclb
out
sbb
push
xlat
pop
stos
inc
loopne
mov
jmp
fdiv
sbb
loop
add
dec
cmpsb
sbbb
pop
mov
loop
pop
ficompl
inc
and
clc
push
jg
fs
rcrl
push
adc
lret
pop
test
inc
push
lds
aaa
pop
out
jl
push
fwait
lcall
push
fs
or
pop
adc
dec
adc
mov
sub
sbb
and
insb
xchg
cld
adc
cltd
testb
fcmovnu
jl
lods
adc
jl,pn
ja
adc
push
into
xchg
movl
inc
popf
push
cmp
fisubl
adc
cmpsb
jo
inc
jmp
std
adc
call
mov
jle
pop
loope
pop
add
hlt
mov
jp
fwait
int
lret
fwait
push
adc
push
fmul
xor
sub
mov
frstor
jmp
ds
scas
in
jg
sbb
test
and
jl
icebp
adc
mov
mulb
rcll
fsts
daa
pop
adc
pop
jl
add
adc
and
mov
pop
roll
out
fdivrs
lret
mov
sub
xor
out
insb
sti
mov
test
and
mov
cld
test
out
test
clc
pushf
push
in
fildll
dec
loop
or
fwait
movsb
pop
je
aam
insb
jb
in
cmp
xchg
in
push
or
xchg
cmp
jle
pop
pushf
int
mov
aas
dec
xor
rorb
cs
sarl
dec
sub
and
cltd
addr16
xor
mov
lahf
leave
push
sub
lods
mov
mov
pushf
rol
cld
mov
les
cmp
fnsave
aaa
test
decl
push
push
pop
cli
add
into
mov
in
jl
add
les
mov
push
inc
test
jns
push
sbb
fstps
or
pop
movsl
shlb
data16
sub
out
lret
int
out
sbbb
fcomip
mul
cltd
inc
xor
lock
daa
dec
outsb
cmp
mov
test
dec
data16
movsb
arpl
aam
cmp
jns
cmp
ror
xchg
inc
sub
fnstcw
ret
xlat
imul
ror
fisubrs
es
xchg
mov
les
fcomps
sbb
rorl
mov
push
fldenv
aaa
outsl
push
add
js
xchg
mov
lea
notb
xchg
rolb
sub
pop
jecxz
out
push
aas
dec
repnz
cmp
inc
or
mov
dec
mov
popa
stos
pop
dec
mov
or
cld
repnz
sub
ja
add
mov
fsts
sub
xchg
stos
test
push
add
adc
fiaddl
decl
jl
sbb
sti
xor
rolb
ficomps
xchg
clc
in
in
push
xchg
sub
xchg
stos
push
adc
mov
and
hlt
xchg
ret
lahf
dec
pop
lods
jg
cmove
jbe
push
cmp
lahf
fucomip
sbbl
jnp
sub
cmpsb
push
cmp
js
lret
scas
call
subb
pusha
sbb
push
bound
int3
into
mov
das
lods
mov
sbb
xchg
add
push
xchg
sti
rcl
dec
dec
and
mov
jo
sahf
push
dec
dec
cwtl
out
fdivr
sbb
imul
mov
pop
pop
mov
mov
outsl
cmp
sti
push
int
and
push
std
frstor
mov
bound
pop
lahf
pop
inc
fnstsw
inc
cltd
pop
mov
and
push
cmpsl
or
pop
or
loop
jns
mov
push
mov
jl
jnp
daa
cwtl
xchg
shlb
mov
xchg
insl
push
sbb
push
cld
ror
inc
pushfw
testl
pop
mov
repz
hlt
xor
mov
lods
push
into
pop
shll
mov
test
cmc
inc
fistpl
pop
cmp
enter
mov
jae
stos
add
cmp
or
ret
dec
shl
imul
pop
push
std
movsb
outsl
inc
and
aaa
je
sar
and
into
mov
dec
std
popa
dec
mov
xchg
fld
les
jns
mov
cs
add
fsubl
scas
jmp
es
mov
les
mov
shl
stos
movzwl
fs
push
pop
std
pop
lods
loopne
push
pop
imul
jecxz
inc
add
inc
and
xor
nop
repnz
mov
mov
int3
test
pop
adc
mov
or
lea
mov
mov
adc
fcmovne
mov
faddl
sub
sub
pop
insb
sahf
cmc
daa
fucomip
pop
in
hlt
call
sahf
sbb
or
cmp
dec
icebp
dec
repz
mov
movsl
sbb
pop
stos
xor
adc
in
test
inc
test
test
mov
xor
cwtl
sub
rclb
test
push
mov
dec
insl
dec
push
adc
fistl
mov
xchg
clc
mov
lcall
jmp
test
scas
in
psubb
pop
sarb
push
mov
repnz
push
ss
int
mov
imul
in
ficoms
je
loop
pop
cmp
mov
cmpsb
jo
and
xchg
ffreep
xchg
jg
clc
jnp
in
or
pop
inc
mov
popa
xchg
mov
mov
or
cld
xor
sarb
and
pop
scas
out
ret
mov
sub
sbb
cwtl
enter
mov
and
mov
or
xchg
sub
pop
ljmp
xor
add
cs
shll
xor
or
lods
push
sub
stos
mull
insl
sbb
mov
pop
gs
pop
shl
jmp
cmc
cli
jae
cmpsl
adc
out
adc
mov
movsl
pop
adc
add
add
push
xchg
or
push
mov
outsb
push
fdivl
mov
divl
push
sub
mov
lods
repz
mov
adc
test
cld
sbb
xor
aas
orl
inc
outsl
push
leavew
clc
sbb
scas
mov
xchg
jl
or
and
mov
inc
cs
inc
add
dec
in
dec
insl
icebp
mov
out
clc
add
and
sub
and
movb
jae
mov
aam
stc
or
cmp
scas
sbb
fwait
add
daa
mov
lcall
daa
xor
or
jb
out
inc
int3
inc
jns
adc
shrb
or
ja
in
xor
push
mov
add
cmp
push
std
pushf
hlt
xlat
lea
adc
stc
hlt
loopne
int
xchg
dec
xlat
sub
pushf
and
sbb
jns
mov
adc
push
push
dec
and
mov
test
jae
and
ja
rol
clc
inc
movl
cmp
pop
lock
adc
idivl
sub
lea
dec
mov
xlat
or
cmpsl
stos
sbb
mov
xor
jg
test
and
lahf
fnstenv
sbb
mov
cmp
xor
add
xchg
fisubs
push
inc
ds
sarl
sub
gs
lret
sub
movl
mov
out
cmp
adc
mov
xchg
xor
add
scas
mov
jg
mov
dec
lahf
inc
cmp
loope
aad
sarl
mov
fnstenv
xor
ja
ret
xchg
inc
adc
adc
fsts
je
push
imul
fimull
inc
add
sub
out
or
and
mov
loope
mov
dec
inc
mov
out
leave
mov
shll
add
dec
and
std
mov
mov
or
popa
jnp
addb
and
jne
and
jle
out
fmull
loop
xor
or
mov
dec
in
add
mov
mov
cmp
repnz
test
push
push
xchg
or
push
pop
jo
das
or
dec
add
leave
sbb
jb
test
fisttps
mov
mov
in
adc
into
cwtl
int3
xchg
into
pushf
mov
pop
xor
ss
jno
mov
fcoms
sub
mov
test
iret
faddl
jmp
sub
jb
xchg
inc
cld
popf
inc
adc
sahf
inc
cltd
sub
inc
dec
fiadds
cmp
xchg
popa
sub
idiv
xchg
cltd
in
ljmp
mov
sbb
popf
loope
pop
pop
lahf
in
jl
mov
sbb
push
push
pop
cmp
sub
and
cmpsb
cmp
mov
inc
dec
shrb
iret
and
clc
shlb
jp
iret
roll
jmp
imul
and
lock
negl
cli
fcomps
neg
mov
xchg
jge
call
xchg
bswap
ror
fwait
and
in
mov
ja
push
push
nop
pop
rcll
scas
pop
cld
mov
xchg
add
jb
cmp
jl
mov
push
rcrl
icebp
das
fldt
sbb
fwait
adc
stc
mov
aam
dec
pop
add
popf
mov
adc
loope
sub
daa
lds
aam
push
sub
push
clc
push
test
jns
push
pop
out
push
cmp
xchg
int
mov
xor
aas
xchg
or
push
cmpb
jnp
inc
nop
and
cltd
lods
in
add
imul
adc
xor
cmp
fildll
pop
add
jmp
ljmp
fimull
jnp
mov
push
cltd
sbb
and
into
mov
jae
test
stos
and
or
mov
dec
mov
aas
pop
xor
imul
jmp
mov
out
inc
insb
clc
lret
dec
xor
loope
jns
add
inc
inc
insb
jle
push
aam
ret
pop
in
cmp
test
pusha
jns
cmp
pop
mov
and
repnz
mov
lret
fs
pushf
dec
popf
and
and
sub
inc
sbbl
jno
sbb
lea
jae
jo
dec
add
or
adc
nop
fwait
sahf
or
lds
mov
adc
jecxz
sub
push
lret
xor
mov
sbb
daa
and
dec
jle
ss
subb
into
push
rcll
movsb
ret
fidivrl
mov
push
arpl
imul
int3
sub
xor
les
xchg
outsl
lret
xchg
je
push
mov
stc
je
fcmovnu
adc
gs
neg
popa
add
mov
add
dec
pop
cld
xor
adc
jge
jb
cmc
roll
mov
mov
push
mov
pop
push
or
lret
dec
fs
adc
xchg
push
lods
ja
push
dec
xchg
das
cmp
inc
je
push
inc
aad
pop
fcmovu
pop
fnstcw
ljmp
cmpb
out
xchg
test
enter
rclb
jmp
and
mov
add
adc
test
jns
adc
mov
in
rolb
push
dec
push
fwait
mov
daa
push
ficompl
mov
jecxz
xor
push
xchg
mov
inc
push
call
jecxz
dec
push
xchg
sbb
imul
imul
jl
ret
xor
test
mov
push
in
nop
pushf
sub
push
mov
jnp
xchg
xchg
lods
xor
dec
inc
or
jp
fidivrs
mov
xlat
xchg
jne
push
inc
dec
adc
call
mov
jge
imulb
xchg
or
mov
mov
xchg
dec
inc
mov
push
stos
popl
test
in
cmc
loope
stc
add
inc
jae
xchg
sbb
mov
or
sbb
sub
lret
jae
das
icebp
inc
sub
lods
and
add
pop
cmp
cwtl
xorb
xor
pop
push
inc
leave
sbb
loop
aam
jg
xchg
daa
fisubl
test
cmp
sahf
inc
dec
rcrb
loop
pop
repnz
mov
xchg
mov
lods
sbb
imulb
adc
sbb
addl
iret
aaa
mov
cltd
arpl
std
mov
push
inc
pushf
inc
pusha
lea
add
fbstp
test
push
lds
rep
or
adc
push
js
pop
add
js
lods
mov
xlat
xchg
rorl
scas
and
sbb
pop
fbstp
cmp
dec
pop
sub
js
mov
sub
cmp
cmp
testb
btrl
push
add
loope
ret
sub
mov
mov
pushf
pop
sahf
aad
test
push
and
jp
adc
sbbb
add
xlat
mov
xlat
popf
stos
jnp
loopne
xor
or
mov
jo
jmp
dec
mov
jecxz
adc
mov
mov
imul
cmpsb
stc
das
pop
subb
fwait
adc
imull
inc
lock
inc
fists
aas
or
js
test
jmp
scas
sub
ja
pop
int
popa
aas
jns
fstl
pusha
add
add
push
xchg
pop
out
nop
push
xorb
mov
popa
mov
icebp
aas
add
mov
mov
lret
jge
dec
adc
je,pt
pushf
mov
xchg
int
outsl
jecxz
cmp
xchg
add
int3
pop
mov
daa
cli
xchg
pop
xchg
and
mov
inc
mov
xchg
imul
jae
int3
mov
or
dec
cmpsb
movsb
add
xor
push
jecxz
add
out
mov
cmp
repnz
aaa
cwtl
push
aaa
std
in
inc
jecxz
sbb
std
movsl
imul
test
sahf
das
sub
push
inc
test
mov
xchg
aad
inc
push
push
aam
adc
push
fimull
rolb
test
mov
rcll
and
mov
cwtl
pop
xchg
repnz
cmp
inc
xchg
push
jge
jno
ret
xchg
push
jge
lret
jle
testl
lods
sub
ficoms
or
sub
inc
ret
shl
repz
out
inc
inc
push
cmp
fwait
lea
shl
dec
xchg
push
mov
cmp
push
fsts
icebp
scas
sub
cmp
fisubl
repz
and
test
mov
and
cmp
and
test
mov
out
jb
je
pop
mov
and
jecxz
int3
test
fst
leave
jmp
mov
fcmovnbe
sahf
mov
mov
jl
jb
xchg
xlat
mov
xlat
sbb
out
xchg
shlb
roll
cmp
scas
fsub
jl
inc
and
pushf
ror
ds
adc
daa
adc
ret
imul
lods
cmc
jle
mov
aas
vmwrite
dec
adc
mov
mov
jge
out
lods
pop
aaa
sbb
mov
sub
pop
lods
js
and
mov
mov
mov
sahf
xor
js
sub
sbb
cmp
cs
ds
push
andl
sub
inc
adc
pop
cmp
mov
in
jl
jmp
fildll
rcrb
test
loope
sub
daa
int3
jecxz,pt
sti
xlat
jmp
test
xor
add
xor
adc
bound
mov
jecxz
sbb
or
ljmp
mov
out
xchg
or
mov
sti
mov
loop
inc
pop
mov
call
jae
rorb
mov
cmp
rorb
mov
stos
std
insl
dec
pop
push
adc
pop
fdivs
dec
arpl
fdivrl
mov
or
pop
pushf
mov
mov
mov
pop
push
xchg
push
cwtl
in
fwait
int
push
mov
jnp
ja
test
loop
rclb
repz
sub
dec
das
ja
leave
mov
inc
push
xchg
mov
adcb
leave
pop
and
pop
out
ret
inc
out
popa
out
mov
aas
xor
nop
jl
mov
dec
cltd
les
es
jo
or
mov
andb
ffreep
sahf
repnz
rorl
lcall
and
movsb
stos
shll
clc
jo
cmpsl
out
outsl
loope
pop
sbb
imul
addb
xor
push
test
std
jb
test
sub
inc
fst
aas
clc
mulb
repnz
sti
cli
imul
add
test
add
loop
int
fisubrs
lods
jg
insl
call
and
out
stos
pop
imul
mov
adc
fistl
inc
dec
sub
jmp
jbe
call
mov
aam
cwtl
pop
pop
sti
jo
sbb
fists
xor
lcall
lcall
mov
mov
nop
ret
sar
xchg
push
push
jnp
lret
xchg
jmp
cmp
mov
scas
lds
cmp
jp
mov
inc
lods
shl
fsubr
es
orl
jne
daa
jne
push
fadds
cmpsl
or
stos
mov
mov
fs
jo
pusha
je
add
mov
xchg
pop
sahf
adc
xor
iret
movsb
cmp
dec
loope
or
int
test
cltd
jmp
int
scas
dec
fst
fdivl
inc
lret
cmp
push
add
int3
cld
icebp
movsl
xor
mov
push
loop
cmp
insw
movsb
adc
mov
out
jp
jle
add
pop
mov
adc
les
sbb
aas
push
shrb
push
jge,pt
pop
sub
and
push
or
mov
lret
lods
out
pop
shll
cs
mov
int
add
and
movsb
je
ja
pop
cmp
mov
mov
mov
movsb
cmpl
jge
rorl
out
mov
or
xchg
pop
imul
jmp
movsl
add
lds
js
cmp
add
fisubs
adc
lock
pop
pusha
push
xor
dec
mov
sbb
and
outsb
mov
push
sbb
dec
icebp
xchg
into
pop
pop
mov
arpl
es
push
enter
repz
ror
aam
aaa
out
sub
add
inc
sbb
fadds
test
movsl
cltd
mull
fnstenv
fists
les
adc
dec
dec
sahf
insl
in
push
jno
add
and
xchg
push
bound
adc
jle
jns
xchg
jl
sbb
push
mov
lcall
pop
les
pop
fistl
jns
ja,pn
js
inc
and
xor
ret
or
dec
lahf
mov
cltd
add
cmp
loopne
iret
push
test
mov
pop
mov
push
adc
jmp
or
and
fsubl
or
jae
mov
ret
xor
mov
insb
dec
jl
ds
adc
std
mov
inc
dec
aad
cmc
mov
xchg
or
pop
scas
pushf
pop
loopne
pop
jno
jnp
jo
pusha
aad
stos
add
adc
insb
mov
mov
in
clc
or
ficoml
xchg
fucomi
stc
ret
or
pusha
push
insb
repnz
or
mov
orl
jbe
lods
cwtl
out
pop
dec
xor
cld
or
scas
push
lock
add
fldenv
rcrb
mov
and
mov
xchg
push
je
cwtl
jmp
or
shrb
jp
sub
xchg
adc
jne
cmp
jmp
movsb
mov
push
adc
adc
mov
mov
lret
fwait
pop
gs
mov
sub
js,pt
jae
icebp
sbb
sbb
adc
andnps
and
ret
push
add
repz
pop
lea
dec
cmp
repnz
neg
inc
push
imul
push
aad
jecxz
mov
push
mov
testb
mov
in
mov
inc
pushf
dec
and
push
inc
cld
push
dec
sub
jbe
jo
subb
mov
mov
inc
inc
jmp
xor
add
or
push
mov
ss
fwait
or
je
outsl
mov
mov
test
les
cmp
push
inc
xchg
add
jl
xchg
dec
popa
rolb
addr16
mov
cmp
mov
add
xor
test
loope
add
loop
ud1
push
xor
push
adc
ss
jecxz
out
mov
jmp
mov
pop
dec
dec
fstps
sarl
mov
mov
in
sbb
mov
adc
jmp
adc
std
loope
mov
lret
and
and
or
stos
xchg
xchg
push
sbb
push
sub
xor
dec
sub
mov
dec
ret
mov
and
or
shr
mov
push
dec
popa
rclb
ja
mov
add
pop
jb
dec
scas
lock
cltd
adc
in
or
jge
leave
in
cltd
and
iret
dec
pop
sbb
jne
push
adc
jl
fsubs
sub
div
outsl
fcmove
cwtl
test
jne
divb
insl
cmc
fisttps
xchg
inc
mov
mov
mov
jp
shrl
roll
aad
in
dec
adc
je
outsl
mov
das
jb
cltd
sub
cmpsb
rcrl
add
cltd
dec
cmp
fidivl
jmp
mov
nop
cmp
sbbl
push
adc
pop
roll
push
cwtl
xor
fidivrs
lds
loopne
mov
das
push
outsl
and
sbb
push
sub
movsl
push
sub
jnp
adc
push
sahf
adc
inc
lods
in
and
fadd
jae
into
inc
push
in
pop
pusha
pop
push
loopne
xchg
ja
roll
es
jo
jno
push
or
pop
mov
jo
data16
je
hlt
xchg
cmp
add
out
dec
jne
push
negb
fisttpl
scas
stos
mov
cmpsb
mov
insb
movsb
lods
lret
adc
lods
dec
adc
mov
pop
test
jmp
stos
push
divl
jle
mov
adc
mov
cs
cmc
cmp
repz
aas
add
pushf
mov
clc
lahf
add
push
dec
rolb
outsl
scas
add
in
pop
sar
push
add
jl
and
stos
jno
insb
mov
or
cmp
andb
mov
mov
xor
or
jmp
pop
daa
int3
bound
iret
rcll
jns
sub
inc
fcompl
dec
les
in
mov
sub
or
and
mov
test
mov
pop
mov
test
aam
dec
jnp
mov
jge
dec
fwait
loop
rcrl
es
aas
mov
cmpsb
into
js
mov
ret
ds
pusha
add
jmp
dec
mov
cmp
mov
pop
ficomps
sbb
push
in
fsubl
mov
in
xchg
scas
xchg
loopne
and
ss
jecxz
nop
mov
cmp
shll
jne
dec
mov
sbb
push
ljmp
pop
pop
xchg
push
xor
loope
mov
test
into
sub
adc
pop
sbb
sbb
clc
aaa
push
aam
mov
shll
cmc
mov
loopne
sbb
fbld
mov
clc
push
subb
rcrb
jge
jae
sbb
mov
popa
push
inc
into
sub
inc
sahf
ds
mov
out
fmuls
cmp
dec
sbb
rcrl
sub
dec
stos
data16
inc
out
push
jmp
mov
push
push
or
arpl
xor
jb
jmp
adc
adc
push
loopne
jae
fs
scas
iret
mov
cmp
push
fs
mov
add
mov
mov
mov
mov
and
cmp
cmp
addb
adc
dec
ds
or
iret
adcb
in
xchg
jo
fiadds
insl
mov
dec
add
lcall
adc
pop
lods
xchg
jne
pushf
imul
std
pop
push
add
std
xchg
sbb
mov
stos
xorb
push
test
mov
jge
mov
or
mov
roll
mov
pushf
popf
pop
fisttpll
mov
ret
xchg
or
xchg
mov
sub
lods
pusha
cmp
test
adc
std
cmp
mov
out
cmc
add
mov
adc
inc
inc
inc
xor
sbb
stc
jp
xor
in
jae
fstpt
inc
adc
jle
lcall
mov
test
gs
imul
jbe
imul
aad
mov
xor
xchg
push
sub
ss
mov
cmc
inc
jb
lret
adc
fs
rorl
sub
push
or
daa
add
scas
jle
es
fimuls
sahf
arpl
ret
push
inc
jb
out
scas
inc
aaa
cmp
jecxz
and
int
jge
jmp
insl
out
mov
je
xor
xchg
inc
pop
movsb
cmp
cmp
test
jnp
mov
es
cwtl
sarb
int
xchg
fisubrs
push
mov
stc
pop
xor
mov
push
or
inc
enter
mov
sti
add
xchg
xchg
sbb
inc
insl
xor
jbe
fidivrs
bound
leave
test
mov
lahf
xor
lds
push
xchg
add
lret
nop
repz
pop
or
stc
aas
subl
rcl
push
sbb
and
es
inc
clc
mov
imul
das
aas
sbb
mov
pop
clc
mov
int
jge
popf
ljmp
ss
aaa
iret
adc
mov
testb
pop
mov
mov
xchg
dec
test
insb
push
fwait
insl
mov
xor
lret
loope
das
sbb
les
ljmp
lods
scas
mov
jnp
bound
xor
rorb
out
or
cmp
mov
mov
mov
shlb
add
lret
ja
in
clc
mov
fmull
dec
enter
push
sub
sub
push
jne
in
sbb
loope
aam
icebp
or
or
mov
push
mov
dec
jp
xlat
sbb
pushf
sar
adc
rcr
cld
and
pop
fs
addr16
mov
and
sub
lock
pop
ret
jmp
bound
jae
mov
jo
mov
and
cld
pusha
icebp
sub
sbb
mov
out
mulb
lods
cmp
or
push
mov
jecxz
push
push
inc
add
cmpsl
movsl
xor
shrb
fdivs
mov
mov
pop
lcall
in
push
push
inc
sbb
adc
ss
mov
xchg
arpl
jns
push
ret
rolb
xlat
inc
je
mov
pushf
or
shlb
sbb
mov
mov
addb
mov
mov
stos
jge
cmpb
jmp
fisubs
jae
inc
xchg
and
lret
jb
inc
out
pop
jecxz
sub
push
cmc
or
fbstp
dec
cmp
and
push
inc
in
dec
sbb
xchg
lret
push
adc
inc
fidivs
push
dec
clc
or
movsl
enter
mov
or
and
jge
out
inc
lods
fstpl
adc
hlt
adc
pop
cmp
adc
xor
mov
into
mov
add
inc
lret
mov
xor
cwtl
jge
add
and
sbb
dec
imul
or
movsb
adcl
imulb
mov
mov
and
mov
cmp
daa
andl
xor
jno
mov
cltd
adcb
and
mov
jb
mov
inc
insb
insl
adc
sahf
push
hlt
movsb
in
imul
loope
mov
cmovp
mov
call
dec
cltd
je
pushf
pop
in
imul
adc
jne
pushf
mov
sub
add
push
xor
mov
inc
adc
sub
dec
lds
dec
bound
inc
xchg
push
xor
stc
lcall
lods
mov
mov
mov
es
aas
mov
cmp
decb
sub
push
ja
push
jne
dec
xchg
sti
test
notb
jno
inc
add
mov
hlt
out
jg
pop
push
dec
jb
in
rcl
dec
enter
stc
dec
repz
cmc
movsl
out
jno
mov
mov
jnp
mov
ljmp
movsl
xchg
out
bound
test
popf
jp
mov
outsb
pop
subl
cmc
or
test
aaa
mov
xchg
cmp
test
je
jbe
inc
mov
sbb
cltd
sahf
scas
repnz
add
lcall
mov
xor
int
add
shll
popa
push
adc
add
in
rolb
scas
sub
mov
pop
and
mov
jns
xchg
jne
dec
test
test
int
jg
push
and
or
jae
inc
or
in
nop
inc
jnp
jg
repnz
pop
xchg
inc
enter
inc
inc
jmp
inc
fdivrs
push
cld
adc
cmp
shll
in
popa
xchg
pop
cmpsl
lds
shll
not
stos
lret
rorb
pop
xor
mov
adc
or
das
data16
in
jne
lret
shrb
mov
mov
jo
imul
fists
hlt
xor
sub
jge
stc
movsl
jp
push
lahf
jmp
nop
cmp
cltd
aam
rcrb
add
or
or
je
loope
incl
mov
inc
aad
lods
test
stc
and
jg
ljmp
js
push
and
inc
clc
mov
loop
ja
pop
fisttps
jnp
movsb
xchg
xor
daa
jp
lock
imul
dec
cmp
xchg
enter
mov
xchg
sbb
mov
ret
imul
mov
inc
fstp
outsl
stc
lret
enter
mov
and
cs
or
popa
loope
cltd
xchg
ljmp
dec
lods
iret
xor
dec
scas
imul
jnp
mov
or
icebp
jecxz
sti
cwtl
pop
out
pop
stos
in
rcrl
jle
ja
xchg
and
mov
icebp
sbb
insb
mov
add
push
ret
in
adc
inc
push
hlt
mov
mov
inc
add
stos
push
xchg
inc
adc
std
lock
xlat
xor
push
mov
ljmp
lods
cmc
test
rorb
lds
mov
out
fstps
shll
or
stc
xorb
jg
add
aas
pop
lcall
inc
pop
scas
or
iret
sbb
ret
or
fs
push
fstl
scas
cmp
lea
add
js
test
xor
sub
inc
bound
aam
cmp
lea
mov
cmp
or
jmp
fimuls
cmp
add
out
lods
aas
cmp
addr16
je
insb
dec
push
cmpsl
in
js
sbb
and
sarb
cmp
fcoml
inc
jno
loope
adc
mov
sahf
pop
jns
sbb
jecxz
lock
shl
fisttpll
mov
sbb
mov
out
ljmp
clc
fimuls
rolb
jl
push
adc
push
push
cmc
std
out
add
lods
fdivrs
sbb
mov
push
aad
idiv
xor
push
pop
sub
cmp
rorb
into
in
xchg
shl
loop
mov
scas
xchg
shlb
andl
adc
popa
push
repnz
dec
and
lds
mov
clc
test
xor
lea
stos
or
notb
mov
mov
cmp
xor
cmc
mov
mov
push
sti
cmp
mov
repnz
cmp
jb
or
dec
cmp
cmc
inc
cmp
scas
mov
clc
inc
dec
aas
sub
mov
hlt
xchg
test
pop
shlb
negb
and
mov
aam
fsts
jnp
fcoml
cs
jo
bswap
and
adc
repz
mov
mov
popf
adc
cs
sbb
and
mov
test
pushf
adc
mov
cmpl
cwtl
stos
xchg
jle
rclb
cmp
lahf
lea
dec
push
add
xor
mov
xchg
in
mov
push
pop
scas
inc
icebp
mov
mov
or
cmp
std
fdivrp
outsb
pop
inc
adc
cmc
jp
and
mov
fstpt
sbb
jne
dec
mov
incl
dec
rorl
das
cli
lock
repnz
adc
aas
test
mov
cmp
xchg
into
push
or
js
rcrl
mov
pop
outsl
into
lods
scas
out
inc
and
inc
inc
clc
jge
add
lret
xchg
mov
add
or
insb
xchg
lahf
cmp
mov
fldt
rcrl
jne
pop
sub
je
pop
push
mov
or
pop
stc
mov
mov
lods
pop
js
fwait
inc
mov
or
test
push
xor
sub
cmp
rcrl
xor
jne
in
leave
jecxz
sar
pushf
jnp
mov
xor
fdivl
nop
dec
xorb
and
lea
dec
test
stc
sbb
incb
jno
dec
hlt
loope
xchg
inc
xchg
xor
pop
loop
aam
mull
scas
ss
repz
mov
in
add
inc
pop
scas
or
xor
imul
js
mov
mov
fcmovb
sbb
or
ljmp
out
shlb
std
mov
or
add
out
out
ds
jno
bnd
test
pop
dec
mov
xchg
cmp
in
pusha
lret
xchg
daa
xor
xchg
jg
inc
or
or
out
movsb
dec
mov
dec
dec
aas
jl
or
xchg
xor
jmp
jb
jo
hlt
stc
sbb
test
mov
mov
jle
pop
iret
test
int
sbb
stos
dec
sub
mov
and
repnz
push
inc
subb
mov
lods
fstl
pop
mov
int
pop
add
iret
pop
jns
fsubl
test
push
inc
test
enter
ficoms
and
jle
pop
mov
adcb
out
cs
iret
pop
pop
xor
lahf
outsb
icebp
addl
orb
aaa
fiaddl
cmc
pop
movsb
jmp
mov
repnz
pcmpeqd
add
cmp
sub
mov
mov
pop
sbb
lods
iret
fiaddl
cmc
mov
lret
lret
and
pop
mov
aas
mov
dec
je
xor
movsl
mov
cmp
or
pop
lret
stc
mov
sub
addr16
lahf
lret
fcoml
icebp
xchg
dec
cmp
aaa
popa
adc
xor
nop
add
add
sarb
mov
adc
xchg
sahf
pop
idivb
cld
insl
and
mov
mov
out
and
clc
pop
out
addl
xchg
cmp
ret
jge
mov
outsb
movsb
iret
mov
push
aad
xchg
stc
xchg
sub
adc
mov
mov
push
lods
clc
or
loope
mov
adc
push
js
sub
jp
mov
pmaxub
in
ret
lds
add
sub
inc
imul
and
xchg
repz
add
xchg
sub
cmp
ds
jnp
sahf
and
and
jbe
in
testl
adc
je
push
sar
data16
xchg
cmp
in
jl
or
lret
fiaddl
fs
sbb
xlat
jb
sub
adc
test
inc
add
addr16
jecxz
shlb
cmp
fxch
nop
cwtl
pushf
ficoml
xor
mov
push
adc
jecxz
lcall
mov
xor
jg
xchg
lock
lret
mov
fsubp
cmp
lock
insl
pop
test
scas
clc
notb
xchg
mov
addr16
mov
test
fisttps
cmp
fists
inc
mov
test
inc
fcmovnbe
test
bswap
cmp
arpl
xchg
int3
mov
into
cmpsl
hlt
pop
sahf
dec
sti
out
inc
jne
push
mov
or
imul
push
les
jbe
stc
pop
test
js
lea
in
inc
add
ret
test
cs
mov
in
inc
ja
cs
dec
fs
fs
aad
push
xlat
nop
xchg
jne
add
cltd
not
mov
and
jmp
js
inc
repz
jp
.byte
.byte
add
add
popa
stos
filds
add
add
add
add
add
addb
add
pusha
add
addb
add
enter
or
add
or
add
mov
add
mov
add
add
filds
add
add
add
add
add
addb
add
popa
stos
filds
add
add
add
add
add
add
add
addb
add
call
add
add
add
addb
add
popa
stos
filds
add
add
add
add
pop
add
sbb
add
xor
add
dec
add
adc
add
pusha
add
adc
add
js
add
nop
add
addb
add
popa
stos
filds
add
add
add
add
add
add
add
add
add
orb
add
add
adcb
add
add
adcb
add
add
adcb
add
add
addb
add
popa
stos
filds
add
add
add
add
push
add
rolb
add
loopne
add
testb
addb
add
push
pop
add
cs
add
dec
pop
add
push
add
xorb
adcb
add
sub
andb
add
pop
add
cmpb
add
popa
stos
filds
add
add
add
add
add
addb
add
popa
stos
filds
add
add
add
add
add
add
add
add
filds
add
add
add
add
add
mov
add
add
filds
add
add
add
add
add
enter
add
add
popa
stos
filds
add
add
add
add
add
fadds
add
add
add
filds
add
add
add
add
add
call
add
add
filds
add
add
add
add
add
clc
add
add
add
add
filds
add
add
add
add
add
or
add
popa
stos
filds
add
add
add
add
add
sbb
add
popa
stos
filds
add
add
add
add
add
sub
add
popa
stos
filds
add
add
add
add
add
cmp
add
popa
stos
filds
add
add
add
add
add
dec
add
add
popa
stos
filds
add
add
add
add
add
pop
add
add
popa
stos
filds
add
add
add
add
add
push
add
add
filds
add
add
add
add
add
js
add
add
add
popa
stos
filds
add
add
add
add
add
mov
add
popa
stos
filds
add
add
add
add
add
cwtl
add
add
popa
stos
filds
add
add
add
add
add
test
add
add
add
popa
stos
filds
add
add
add
add
add
add
add
add
filds
add
add
add
add
add
add
add
add
popa
stos
filds
add
add
add
add
add
add
add
add
popa
stos
filds
add
add
add
add
add
add
add
add
popa
stos
filds
add
add
add
add
add
add
add
add
popa
stos
filds
add
add
add
add
add
add
push
add
add
add
popa
stos
filds
add
add
add
add
add
add
push
add
add
add
popa
stos
filds
add
add
add
add
add
add
push
add
add
add
popa
stos
filds
add
add
add
add
add
add
push
add
add
add
popa
stos
filds
add
add
add
add
add
add
add
add
add
popa
stos
filds
add
add
add
add
add
add
add
add
add
popa
stos
filds
add
add
add
add
add
add
add
add
add
popa
stos
filds
add
add
add
add
add
add
add
add
add
popa
stos
filds
add
add
add
add
add
add
add
add
filds
add
add
add
add
add
cwtl
push
add
add
add
popa
stos
filds
add
add
add
add
add
test
add
rcl
add
sbb
add
in
add
add
add
je
pop
add
add
add
add
add
push
pop
add
add
add
add
add
add
add
in
add
add
add
movsb
inc
add
pushf
add
add
add
add
add
add
add
adc
add
in
add
add
add
push
inc
add
or
add
in
add
add
add
pop
inc
add
insb
add
add
add
add
add
add
inc
add
faddl
add
in
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
in
add
add
add
sub
add
add
add
add
in
add
xor
add
in
add
add
add
sbb
add
add
add
add
add
add
add
push
add
dec
test
add
add
add
add
add
push
add
add
in
add
add
add
je
push
add
add
in
add
add
add
cwtl
stc
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
mov
push
add
add
in
add
add
add
mov
add
add
add
add
add
add
stc
push
add
add
in
add
add
add
stc
push
add
add
in
add
add
add
enter
pop
add
add
add
add
add
add
stc
push
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
or
add
in
add
add
add
add
inc
add
dec
add
add
inc
add
push
add
dec
add
add
inc
add
dec
add
inc
add
add
pop
add
add
inc
add
add
push
add
add
dec
add
add
dec
add
inc
add
or
inc
add
dec
add
push
add
dec
add
inc
add
add
add
inc
add
push
add
or
add
dec
add
dec
add
push
add
push
add
inc
add
push
add
dec
add
push
add
push
add
push
add
dec
add
push
add
dec
add
add
inc
add
dec
add
push
add
add
push
add
push
add
dec
add
push
add
dec
add
add
dec
add
push
add
dec
add
inc
add
push
add
add
add
pop
add
push
add
dec
add
push
add
add
push
add
push
add
dec
add
add
cmp
adc
stos
adcb
rcll
ficompl
cmc
mov
enter
in
shl
push
out
add
push
mov
cwtl
test
sbb
push
dec
fcoml
pop
xchg
mov
inc
fisubs
xor
pop
sub
sub
xor
mov
pop
dec
jno
ret
mov
fldcw
adcb
cmp
arpl
cmc
fs
push
sub
cli
pop
push
xchg
cwtl
mov
pop
insl
push
pop
test
mov
in
inc
pop
pop
push
mov
xor
insl
lods
ja
popa
and
or
lods
sbb
cmpsl
enter
sbb
jb
lcall
repnz
mov
and
imul
sbb
js,pn
push
icebp
leave
call
sub
mov
pushf
fs
jne
pop
jp
pop
fidivrl
loopne
fildll
sub
dec
repz
hlt
mov
hlt
imul
push
push
xor
mov
inc
out
es
add
mov
repz
push
jecxz
sbbb
ljmp
pop
std
mov
xchg
mov
imul
pop
stos
jb
mov
out
lret
sbb
jecxz
cld
cld
jns
xchg
xchg
or
fs
inc
cmp
or
mov
stos
fsubr
add
sub
aaa
fstps
jae
mov
pushf
popa
rcrl
mov
sbbb
jg
xor
sarb
or
mov
xchg
mov
jp
sbb
mov
push
xchg
cmp
cmc
inc
inc
push
jns
dec
sahf
decb
cmp
lock
pop
xor
push
push
divl
jno
jl
jo
imul
lock
jle
push
pop
sub
push
or
xchg
mov
bound
mov
lea
inc
into
push
dec
sarl
lret
repz
mov
jp
inc
jns
xorl
inc
dec
out
push
push
js
shrl
push
cmp
cli
jns
sbb
sub
adc
add
sub
gs
inc
or
xchg
mov
cmp
mov
fistl
push
js
jg
push
jns
pop
bound
pusha
dec
leave
push
pop
repz
xor
xchg
rcl
mov
inc
sbb
push
or
loop
pop
or
and
lds
aaa
adc
and
aad
dec
mov
mov
mov
out
or
les
addr16
push
xor
sbb
imul
mov
jno
mov
call
xchg
inc
push
sbb
int
dec
mov
ss
mov
mov
out
call
pop
jmp
in
mov
andl
fs
inc
push
dec
rcll
jmp
mov
fnsave
roll
or
das
mov
add
mov
fbld
in
mov
xchg
xorl
dec
or
gs
loop
push
loopne
or
ja
popa
test
insl
sub
push
movsl
cld
pop
js
or
push
mov
jmp
mov
and
lret
mov
pop
inc
sbb
sub
mov
jp
and
pop
push
das
adc
adc
push
sbb
aam
lcall
imul
mov
testl
adc
es
jl
mov
push
sbb
icebp
cmp
xchg
xor
popa
mov
pop
lret
mov
and
mov
repz
mov
dec
test
lock
repz
aaa
cld
sub
pop
and
dec
xor
inc
scas
cmc
jl,pt
sbbb
push
arpl
dec
and
pop
out
inc
pop
pop
repnz
sbb
das
lret
mov
shlb
lods
mov
stc
jp
jmp
out
adc
jmp
aas
dec
xchg
cmp
enter
insb
out
mov
jmp
adc
out
or
push
pop
push
pusha
movsb
scas
adc
imull
icebp
ja
loop
ss
inc
and
adc
ds
aam
out
fadd
mov
fisttpl
push
call
repz
dec
arpl
and
std
mov
xchg
adc
fsubrs
cwtl
pop
stos
dec
mov
or
out
cmp
mov
add
and
push
int3
pop
cltd
shll
sub
stos
imul
cmp
inc
and
cmp
stc
dec
andb
adc
or
cltd
mov
into
sbb
outsb
mov
int
sbb
xchg
iret
je
xchg
cmp
lds
cli
xchg
xor
in
test
das
jo
shlb
jl
cld
jle
inc
stc
in
out
je
out
pop
sbb
dec
subb
jmp
xchg
pop
and
dec
subl
push
fs
enter
push
jb
sar
and
ds
xor
lods
mov
push
ja
mov
js
inc
mov
pop
notl
mov
jle
shl
jbe
in
mov
mov
cltd
or
jbe
sub
shll
popa
insl
inc
and
js
inc
gs
pop
and
pop
pop
iret
stc
stos
push
and
repnz
cwtl
pop
pusha
pop
pop
sub
fcmovnu
mov
push
es
insl
enter
inc
nop
xor
push
jge
fwait
pop
add
into
fcoms
out
mov
dec
mov
sub
push
fsubrs
dec
xchg
into
pop
repz
and
fwait
sbb
aam
add
mov
loope
push
loope
inc
cs
je
sarb
jmp
mov
stos
mov
imul
aas
rcr
or
xor
loope
negl
cmp
push
dec
sahf
pop
sbb
daa
icebp
mov
jg
cld
mov
lret
jge
ds
repz
sarl
movsl
lret
cmpsl
movsb
pop
dec
and
dec
test
mov
pop
lahf
es
out
test
xor
loop
das
push
mov
mov
mov
lcall
mov
pop
add
push
push
jns
add
test
jb
rcrl
add
mov
xchg
xchg
stc
jp
adc
std
jbe
xchg
std
push
push
imul
ss
gs
out
insb
cld
push
xorb
lods
dec
and
jle
ja
xchg
dec
sub
addr16
push
rorl
ds
cmp
test
inc
push
gs
mov
and
sbb
cmp
fildll
out
cwtl
push
mov
jp
mov
xor
dec
dec
push
rorl
mov
les
into
jge
jle
add
shll
push
stos
jg
popf
add
xchg
mov
pushf
push
ret
or
sbbl
mov
sub
or
movsl
push
fs
repz
adc
xchg
lret
mov
pop
mov
out
lcall
add
pop
in
mov
sti
push
adc
xor
xchg
mul
daa
sarl
out
out
ja
jnp
pop
jge
push
ret
push
or
rolb
push
or
add
push
mov
in
fcmovu
pusha
sbb
inc
mov
pop
cmp
pop
mov
mov
jmp
ficompl
pop
arpl
mov
jns
xchg
jecxz
or
sub
mov
jbe
push
insl
lods
or
in
inc
mov
fwait
push
leave
lcall
roll
ljmp
incl
sub
mov
jp
incl
adc
outsb
cmpsl
cmp
dec
or
mov
jns
dec
pop
inc
je
negl
je
and
xlat
test
loopne
mov
leave
test
scas
or
lret
stc
sti
add
adc
scas
adc
mov
pop
sbb
xchg
pop
gs
inc
in
mov
mov
dec
je
int3
insb
jae
outsl
mov
ret
cltd
mov
pop
gs
fs
data16
push
push
in
gs
pop
icebp
inc
dec
sub
pushf
cwtl
mov
add
ss
and
push
xchg
add
decl
out
xor
sbb
mov
subl
testb
pop
into
jl
loop
data16
mov
pop
cmp
dec
jae
jne
inc
popf
and
jbe
cmpsb
ss
lcall
xchg
cli
inc
stos
adc
subl
out
jne
aad
adc
pop
push
aas
outsl
push
add
fs
mull
jecxz
inc
xor
pop
test
pop
lods
mov
ffree
ss
inc
insl
iret
pop
pop
lcall
jg
cbtw
dec
roll
inc
push
ret
ffree
xchg
mov
inc
or
aad
sub
popa
sub
inc
iret
pop
outsb
sti
aas
or
ljmp
mov
xor
mov
test
ffree
loop
lahf
les
inc
les
inc
push
mov
dec
sbb
aas
in
cs
mov
jnp
xchg
rolb
repnz
lret
mov
iret
pop
push
sub
incb
mov
cli
pop
fsubrs
sbb
inc
mov
push
add
sbb
jnp
adc
hlt
in
imul
test
push
jecxz
dec
sub
xchg
in
mov
mov
cmp
shl
dec
les
add
mov
push
fldcw
and
dec
xor
pop
push
xchg
aas
dec
push
pop
xchg
add
push
and
mov
and
add
add
jno
leave
xchg
movsb
jbe
aad
xor
inc
sbb
adcb
xchg
imul
pop
sbb
ljmp
pusha
pop
daa
xchg
loop
andl
ja
cmpsl
mov
clc
adc
pop
mov
je
outsb
lds
mov
repz
scas
adc
and
out
cli
mov
ret
sub
out
xchg
cmp
inc
out
popf
cmp
out
add
add
pop
lods
mov
data16
stc
cmpsb
ror
int3
loope
repz
subb
push
push
inc
mov
mov
xchg
popa
popf
push
in
pop
shl
cwtl
jbe
insb
mov
in
shrb
imul
movsl
insb
int3
les
pop
jo
sbb
in
clc
dec
xor
dec
mov
inc
pop
loopne
inc
inc
roll
push
rclb
mov
adc
dec
gs
mov
push
adc
push
stos
jno
pop
cmp
lcall
or
xchg
test
inc
test
mov
js
pop
ds
jmp
clc
pop
sbb
loop,pt
mov
add
push
or
fists
xchg
dec
jg
adc
stc
bound
and
enter
adc
or
aad
je
and
ljmp
sub
dec
pop
add
out
xor
jmp
hlt
mov
out
call
ucomiss
dec
call
mov
loop
inc
xor
mov
mov
cmp
jmp
jmp
rolb
mov
es
push
ja
or
mov
and
nop
lcall
lahf
inc
push
mov
adc
stc
shl
cmpsb
insl
jg
adc
jle
js
or
sub
mov
cmp
inc
pop
cmp
gs
stos
popa
sub
or
and
push
imul
sbb
das
jl
add
jo
jp
or
adc
push
push
pop
and
xor
sbb
xor
xlat
mov
cmpsb
sub
inc
sbb
adc
scas
adc
mov
repz
fwait
jb
test
test
push
jecxz
xchg
ss
arpl
out
mov
ljmp
cmp
je
push
jle
dec
addr16
jne
push
cwtl
pcmpgtd
cmp
push
ret
fucomip
test
push
loopne
dec
xchg
rclb
dec
mov
xchg
idiv
jae
int3
cmc
ja
jle
mov
lea
or
jne
cli
jnp
fimuls
lahf
mov
arpl
sbb
dec
push
stos
insb
test
dec
push
cmc
inc
int3
lds
movsl
pop
ficoms
jp
lods
int
dec
lahf
jecxz
imul
mov
jo
fwait
push
arpl
dec
aaa
imulb
xor
push
mov
mov
enter
lock
adc
xchg
push
bound
cwtl
xchg
add
fwait
nop
dec
pop
cmp
bound
clc
cmp
xor
push
add
jne
push
push
xchg
je
lock
xchg
cltd
sbbb
push
repz
rolb
pop
sbb
push
add
xorb
nop
iret
test
pop
pop
jnp
enter
mul
or
lods
enter
mov
jg
dec
fiadds
pushf
movsb
adc
mov
ret
jmp
mov
mov
or
int3
lret
out
and
push
nop
add
mov
cltd
jb
mov
orl
cmp
add
push
ja
and
out
dec
sti
cld
inc
dec
popa
negl
imul
rorl
andl
call
dec
mov
cmpsb
je
in
stos
adc
inc
in
xchg
jns
jae
outsb
int3
cs
dec
jmp
inc
das
xchg
add
sti
fmull
adc
cmp
mov
into
int
mov
mov
pop
ss
add
jnp
into
pop
push
pop
iret
jge
test
mov
pop
jecxz
ja
push
dec
aaa
mov
pushf
pushf
mov
pop
out
jo
add
cmp
push
sub
mov
movups
jl
in
xor
ja
dec
mov
sbbb
jbe
or
ja
fsubl
icebp
mov
shll
adc
push
inc
fadds
push
and
fimull
lock
out
outsl
add
mov
rcll
jb
and
addl
push
lcall
outsl
sbbb
pop
dec
ds
xlat
fisubl
out
xor
fdivl
sbb
sahf
mov
push
cli
scas
rclb
leave
cltd
aaa
int
xor
fidivrs
xchg
addl
pop
sub
xchg
mul
cmc
jbe
cmp
mov
repnz
or
test
cmp
dec
inc
aaa
mov
repnz
adc
add
pop
jno
clc
sub
push
test
pop
mov
aaa
fisubs
hlt
sub
add
mov
and
inc
dec
mov
repz
lods
mov
test
lds
or
mov
mov
sahf
xchg
cmp
adc
or
sub
lret
daa
push
sbbb
mov
mov
lahf
data16
mov
cmp
fstpt
shll
icebp
pop
xor
lret
adc
ljmp
shll
sbb
ds
mov
dec
xchg
fildll
push
xchg
jmp
repz
or
ret
dec
fwait
mov
xchg
pushl
add
stos
and
sub
jns
clc
mov
mov
inc
cmp
cmp
cmpsl
and
jl
cmp
mov
fcompl
sub
movsl
fwait
lods
test
dec
stos
mov
aad
shrl
in
cmp
pop
push
nop
loope
inc
je
pop
addr16
adc
adc
xor
and
icebp
xlat
rcrl
xor
lds
dec
pop
or
push
jb
sbb
stos
mov
into
std
ret
out
cmp
dec
outsl
fdivs
fadds
mov
iret
mov
xchg
das
sahf
pop
and
jmp
repnz
mov
push
mov
repnz
jb
push
inc
adc
mov
or
scas
mov
aas
repz
and
or
push
mov
mov
sub
jp
fiaddl
repz
sub
add
sarb
push
das
testl
push
and
aad
stc
ljmp
test
sub
movntq
jnp
cmp
aad
inc
jae
shl
insb
xchg
in
mov
nop
push
xor
add
sbb
inc
les
fwait
nop
push
or
aad
inc
repz
cmp
ja
xor
test
push
outsb
sub
movsl
aad
jmp
shrb
mov
add
sbb
testb
xor
les
pop
dec
add
fstpl
faddp
dec
push
lret
rol
adc
and
mov
jle
flds
ja
xor
add
mov
push
or
cs
pop
lret
insl
cmp
cs
cmp
sub
mov
rorb
aas
addr16
cmp
mov
fimuls
pop
xlat
or
sbb
sub
cld
inc
stos
xor
dec
pop
pop
mov
cmp
xor
cmpsl
orb
dec
push
sbb
mov
jg
or
mov
push
imul
lods
fdivrl
or
lahf
or
mov
or
insl
lea
clc
test
pusha
mov
inc
sbb
rol
push
sahf
sbb
jp
paddq
mov
push
js
mov
mov
cmpsb
inc
jb
andb
mov
inc
fadds
test
sub
lahf
pop
stos
std
or
xchg
pusha
add
mov
pushf
in
ja
pop
mulps
push
fidivrl
mov
push
fsubrs
add
cmpsl
cmpsb
out
mov
sbb
jle
cltd
push
pusha
hlt
pop
ffreep
shrb
xchg
xor
popa
push
cmp
and
cmc
xchg
test
pusha
cwtl
in
call
push
jae
pop
or
mov
jecxz
ret
out
and
aam
rorb
dec
sbb
xor
xor
lods
sbb
inc
pusha
and
ja
je
int
imul
inc
sbb
mov
roll
lahf
enter
mov
inc
jmp
cmp
xchg
sub
sahf
data16
lcall
addr16
notl
add
outsl
lcall
push
inc
sub
bswap
cmc
sahf
jns
jnp
lds
jns
ss
pop
sti
inc
nop
rcpps
mov
icebp
and
fcoml
add
or
fnstenv
into
push
sbb
dec
pop
mov
ja
mov
scas
call
pop
lret
lock
jmp
adcl
mov
popf
lds
fiadds
mov
xor
dec
lret
mov
ja
dec
mov
das
add
mov
push
sub
cmp
mov
repz
inc
mov
dec
lret
rorb
je
dec
out
stc
xor
movsl
imul
cmp
out
push
fdivl
cli
gs
outsb
jns
xor
or
nop
sbb
sub
xlat
fiadds
push
or
inc
sti
sbb
out
xlat
data16
jp
in
das
mov
mov
call
sub
fnstcw
mov
jle
inc
test
xchg
xchg
cmc
dec
xor
jno
or
mov
stos
jb
sbb
push
sti
push
or
scas
insl
aam
fcompl
addr16
iret
imul
in
jle
pop
mov
aas
inc
pusha
xor
les
push
lds
jmp
jge
int
int
dec
repz
stos
adcl
xchg
dec
daa
xchg
mov
fnstenv
mov
out
xchg
mov
lcall
pushf
jecxz
mov
cs
int3
in
pop
add
inc
rcll
push
in
cmp
outsb
push
push
movsb
mov
mov
or
mov
add
cmpsl
test
sbb
imul
daa
xchg
xchg
mov
arpl
lds
cmp
sub
cmpsl
pushf
lods
pop
add
mov
fwait
and
jne
hlt
inc
aas
fnsave
out
in
mov
and
sti
jnp
pop
je
sbb
lock
in
shlb
test
jge
ret
imul
sub
xchg
xchg
xchg
scas
movd
int3
fxch
dec
jo
out
mov
inc
mov
out
js
pop
inc
fwait
adc
add
pop
mov
inc
mov
inc
dec
mov
sub
cmc
add
mov
jge
or
dec
xchg
sub
in
adc
stos
sbb
inc
pop
stos
mov
xchg
pop
and
inc
test
add
sbb
sbb
fisttps
subb
int
aad
dec
ret
popl
shll
fs
imul
jno
jge
mov
pop
xchg
sbb
andl
and
cmpsl
fwait
outsb
sub
lahf
xchg
sub
int
cmp
lods
int
jno
pop
sub
repnz
stc
fldl
popf
sub
or
mov
mov
jmp
mov
jle
pop
push
mov
leave
add
sahf
and
ljmp
and
popa
sti
push
jne
dec
pop
push
ret
outsb
aam
adc
out
xchg
jmp
cli
inc
mov
je
and
fiaddl
ljmp
jo
test
fsub
dec
int3
inc
or
lea
xor
stos
ror
cmpsl
movsb
pop
push
stos
push
loope
and
aam
fstps
jns
mov
repnz
mov
sbb
inc
dec
lock
xchg
adc
insb
push
icebp
xchg
in
mov
sbb
rcrb
adc
mov
das
pop
lret
mov
push
dec
popf
and
outsl
mov
adc
cmp
in
insb
fs
test
imul
lods
mov
inc
cwtl
rorb
mov
nop
push
ret
sbb
push
aad
addr16
les
xchg
mov
addb
mov
pop
shlb
insl
fcmovb
xor
sbb
and
jg
sub
dec
ja
sbb
fwait
sub
pop
mov
inc
sbb
int
add
les
insl
pop
pushf
sub
lock
fldt
sub
xor
in
mov
jmp
lret
add
jbe
test
cs
data16
cmpsl
jp
imul
cmp
inc
dec
inc
push
push
cmpsb
push
enter
lcall
ljmp
insb
popf
dec
mov
aaa
out
cli
inc
jb
fs
loope
pop
clc
out
adc
mov
or
pushf
daa
test
sbb
movsl
sub
mov
popa
mov
lods
adc
inc
pop
lock
xchg
xor
xchg
in
mov
pop
push
jnp
inc
scas
repnz
dec
scas
je
mov
mov
cmpsb
jnp
icebp
dec
or
rorl
inc
lds
add
stos
adc
das
mov
fimull
mov
sahf
out
push
xor
mov
push
push
mov
mov
cmc
push
push
fwait
icebp
sbb
or
xchg
in
xor
adc
push
xchg
dec
cmp
aaa
fwait
hlt
push
adc
shll
jmp
jge
stos
mov
loop
mov
loopne
adc
and
xor
pop
mov
fldt
mov
or
mov
cmp
add
std
sbb
aaa
jg
mov
xchg
out
xor
push
hlt
in
push
test
add
les
sub
adc
out
out
out
gs
movsb
mov
jns
div
pushf
jne
int
ja
mov
mov
mov
mov
sbb
lods
xor
ret
pop
test
mov
incl
xor
push
filds
xlat
add
loopne
adc
xor
movsb
cli
outsl
jo
test
add
jmp
stc
or
test
mov
sbb
jae
adc
pop
out
jne
xchg
out
sbb
outsl
popa
mov
outsb
es
jb
xchg
sub
jno
scas
scas
or
dec
mov
gs
sub
ret
dec
jmp
xchg
sbb
ja
test
and
imul
push
movsl
jle
xor
add
movsl
popl
cmp
adc
arpl
jecxz
and
push
mov
jbe
add
add
adc
adc
mov
imull
movsb
out
add
add
mov
cli
stc
int3
xlat
into
and
cmp
cmc
fdivr
mov
test
lea
mov
push
movsw
xor
iret
imul
mov
pop
mov
push
dec
ret
test
pop
fldt
push
outsb
xlat
sub
clc
aaa
and
mov
sub
ljmp
ficomps
insb
cwtl
or
ret
fwait
or
sub
jns
rclb
and
xchg
pop
fs
scas
mov
cld
fwait
xor
mov
xchg
cmpsb
cmp
mov
push
movsb
add
imul
out
test
cmpsb
loope
or
push
dec
push
aaa
adc
sub
into
push
jmp
jmp
in
mov
jle
adc
inc
sbb
sbb
leave
testl
add
push
or
push
je
mov
or
or
shll
in
dec
sub
xor
or
mov
xrelease
int
dec
add
fisttpl
das
sbb
leave
mov
daa
repz
fcoms
cld
mov
orb
xchg
xchg
enter
cmp
inc
sbb
dec
jmp
repz
lret
jne
xor
jecxz
in
mov
call
add
and
pop
outsl
jg
jb
or
popf
cmp
sbb
inc
add
push
xorb
pop
add
hlt
inc
push
add
adc
ljmp
into
stc
cmp
fld
add
add
insb
rclb
loope
in
and
push
add
repz
in
roll
cmp
mov
stos
push
ds
sub
add
lret
xchg
xchg
and
push
pop
mov
or
lret
sar
aam
stos
dec
lds
aas
mov
jmp
mov
xchg
xchg
mov
ret
cmpsl
xchg
mov
jmp
push
and
mov
xchg
rol
nop
mov
and
fprem
loope
or
je
sbb
gs
xor
dec
je
in
out
das
push
addr16
sbb
push
mov
rclb
jns
mov
cmc
jp
mov
sbb
mov
hlt
ljmp
popf
flds
inc
xchg
test
inc
jne
mov
int3
and
daa
add
push
into
dec
mov
push
sub
add
popf
das
fisubs
xor
xor
pop
jl
xchg
push
fs
cmp
cmc
stc
add
push
dec
ret
imul
mov
jbe
stos
in
add
cmp
mov
jge
mov
dec
jbe
mov
rcrl
mov
lods
xlat
fldl
and
mov
inc
add
cmpsb
sarl
fcoms
push
daa
cmpl
pop
call
dec
jne
pop
lds
sub
lea
dec
out
les
dec
fadds
inc
sub
test
push
jne
movsb
aam
push
pop
and
xor
mov
xchg
jno
test
leave
loop
loop,pn
incl
add
push
sahf
stos
jno
mov
mov
or
out
pushf
mov
jg
jp
xlat
rol
mov
imull
or
pushf
in
push
arpl
jg
in
jecxz
mov
test
sarl
test
sbb
and
and
pop
mov
fadds
pop
fwait
sbb
lcall
ret
loope
push
xor
jl
or
sbb
jae
outsl
inc
push
std
push
cmp
xor
ret
js
mov
push
jecxz
in
das
ret
cld
sub
jle
cmp
and
and
sbb
scas
push
add
sti
or
cmc
xor
aad
pop
xor
out
jge
sub
into
and
add
lcall
jp
rolb
mov
jmp
adc
arpl
cmp
das
je
fwait
loope
inc
xchg
aaa
arpl
push
outsl
out
lods
movsb
jp
dec
test
leave
push
lds
xchg
in
movhps
cli
popa
insb
out
incl
and
mov
or
cld
mov
lahf
cmpsb
shlb
push
bound
jnp
xchg
or
xlat
or
inc
xchg
addr16
push
adcb
or
cmp
jle
sbb
shr
rol
push
mov
xchg
lds
sub
loope
ret
or
ljmp
mov
jmp
loop
scas
pop
and
xorb
sahf
xchg
ja
mov
fisubs
adc
sbb
jg
sbb
jb
rcl
fsubrp
shll
xchg
cmp
lods
sbb
arpl
sub
xchg
addr16
xchg
mov
lods
mov
adc
out
cmp
icebp
imul
les
js
sbb
lcall
add
aad
dec
lea
adc
push
icebp
lret
adc
jo
cwtl
inc
cmpsl
arpl
lock
popa
mov
and
sar
jmp
inc
test
mov
movsl
or
fidivs
test
out
add
cmp
mov
jl
xlat
jns
pushw
popa
dec
sub
mov
jge
movsb
jae
movsb
ret
pop
std
int
outsb
cmp
aas
repz
in
mov
jnp
out
xchg
lret
cmp
int
hlt
xsaveopt
mov
pushf
jne
int
mov
pop
test
lods
sti
movsb
jecxz
insb
lods
mov
cmpsl
ja
sarl
pushf
add
mov
cmp
dec
hlt
iret
add
stos
icebp
pop
cmp
add
popf
dec
loope
dec
in
mov
cmp
jbe
jecxz
fldl
insl
push
lea
jns
mov
mov
loope
aam
xor
or
inc
sarb
xchg
pop
mov
hlt
push
mov
cltd
inc
test
or
adc
inc
test
mov
arpl
mov
xchg
popf
dec
cmp
mov
add
ss
test
int3
xchg
mov
loopne
mov
push
loop
mov
xor
lock
mov
and
jg
push
cmp
or
adc
inc
jp
int3
enter
pop
addr16
adc
and
pop
rorl
mov
xor
out
lods
stos
mov
idivb
inc
or
pop
adc
xchg
jns
hlt
xor
xchg
mulb
movsl
scas
adcb
mov
cmp
aaa
out
loope
inc
ljmp
xchg
rorb
jg
sbb
pusha
test
loop
in
aad
xchg
pop
dec
imul
lock
inc
dec
jbe
cmp
es
inc
xchg
outsb
ds
push
cmpsl
aaa
std
insl
dec
loopne
fwait
repnz
cld
xchg
pop
adcl
outsl
jnp
mov
xchg
adc
jecxz
flds
sub
ljmp
aaa
aad
ds
arpl
iret
and
cmp
or
pop
or
imul
movsl
arpl
lea
xchg
dec
enter
cmp
sub
cmpsl
lock
cmpl
xor
sub
push
or
js
push
stc
arpl
and
jae
xorb
jecxz
out
push
js
es
and
sahf
leave
push
mov
nop
jno
fimull
es
lret
dec
cmc
xchg
insl
or
or
or
dec
push
subl
mov
or
xchg
mov
push
loopne
mov
adc
lods
loope
aaa
mov
mov
rdpmc
seta
rcrb
iret
or
in
scas
dec
dec
lods
jno
and
out
lret
push
add
and
jae
sbb
fwait
in
adc
mov
sbb
jle
mov
jbe
imul
sbb
push
in
sub
fistpl
mov
adc
lock
mov
mov
cmpsb
clc
mov
sbb
sub
pop
and
ja
jecxz
push
stos
std
shrb
or
rcll
fwait
pop
movsb
push
cmp
dec
adc
sti
mov
lds
lods
adc
add
push
cmpsl
or
cmpsl
sbb
arpl
mov
dec
pusha
into
cli
xchg
adc
sub
in
jp
stos
icebp
test
and
scas
push
inc
sahf
sbb
rol
jmp
mov
aas
int3
bound
imulb
dec
pop
or
adc
xchg
ds
insb
jp
and
xchg
cmp
push
shl
sbb
xchg
outsl
or
loop
xor
leave
jbe
fistps
cs
sub
push
cli
insb
push
loop
push
cli
dec
dec
insb
fwait
cld
into
and
inc
cmp
mov
insl
jo
xor
push
scas
mov
data16
mov
pop
inc
loop
ja
push
in
loopne
inc
add
mov
push
stos
cmp
sbb
push
fdivs
inc
sbb
repz
jbe
xor
lds
cmp
add
arpl
dec
ljmp
mov
outsl
dec
loope
push
and
aam
data16
mov
sbb
mov
fistpll
mull
das
pop
mov
dec
cmp
jb
push
adc
fisubs
jp
mov
insl
aaa
stos
cmp
test
lock
dec
movsb
insl
mov
nop
sbb
or
insb
repnz
jle
pop
pop
inc
lcall
push
fisubl
pop
xchg
mov
push
cmpsb
loop
sub
fnstcw
sub
imul
test
inc
pop
into
jmp
aaa
rorb
xchg
pusha
icebp
insl
adc
xchg
loope
xchg
jl
mov
lods
mov
shll
pop
fimuls
sahf
cwtl
mov
popf
pushf
dec
aam
aad
adc
xchg
add
addr16
cmp
out
bound
es
xchg
loope
ret
jbe
mov
sub
hlt
xorl
xchg
cmp
mov
add
xchg
fisttpll
scas
cwtl
dec
xchg
and
push
mov
call
gs
sbb
test
xchg
es
mov
das
mov
jmp
mov
inc
lods
sbb
push
movsb
stc
mov
sub
push
mov
push
daa
rol
xor
loopne
or
dec
pop
add
cmp
outsb
pusha
pop
pop
jb
iret
sbb
adc
stos
hlt
ljmp
lds
jns
mov
cmp
sbb
sub
in
inc
cmpsl
push
and
ja
inc
cmpsl
mov
jno
je
in
outsl
sbb
inc
ja
pop
or
fcmove
lds
sar
loope
mov
and
subb
push
int3
lahf
dec
sub
pop
je
test
testb
push
into
jge
mov
repz
shrb
and
loop
mov
and
mov
xor
cmpsl
push
test
test
dec
aas
jns
sar
push
mov
lds
outsb
ret
xlat
out
push
mov
push
xor
loope
mov
xor
cmp
fcomp
daa
hlt
add
inc
vpaddusw
ja
lret
sub
je
add
iret
dec
out
xor
orb
mov
xor
dec
sub
mov
sub
mov
cld
loope
mull
mov
add
fcmovnb
outsl
repnz
mov
push
scas
cwtl
mov
and
test
or
fidivrs
xchg
leave
cwtl
lret
sub
mov
int3
mov
ds
dec
sbb
mov
lea
xchg
and
lock
test
fwait
push
gs
inc
jmp
inc
ds
ret
ljmp
out
test
lret
inc
subb
cs
ret
pop
pop
push
push
loope
xor
sub
xchg
and
mov
out
pop
inc
lock
and
adc
fs
pop
cmp
pop
scas
dec
push
in
lcall
sahf
movsl
loope
inc
jl
iret
inc
mov
test
test
in
cld
mov
push
lcall
add
xor
in
pop
xchg
hlt
cld
leave
sbb
outsb
cltd
sbb
mov
adc
pop
mov
gs
adc
stos
shr
aaa
cmp
test
and
xchg
cwtl
inc
out
decl
subl
fsubrp
pop
fwait
scas
sub
js
or
push
jbe
sub
push
pop
mov
sbbl
sahf
addr16
mov
fbstp
push
fsubrl
dec
pop
push
aaa
cld
pop
pop
adc
push
mov
adcl
mov
outsl
jmp
rep
shll
pop
jecxz
cmpb
jbe
testb
inc
lock
int
fs
movsb
mov
stos
jae
pop
shll
clc
mov
sbb
gs
mov
add
vmread
push
dec
inc
sbb
push
sub
push
sub
cmp
push
push
je
sub
es
out
out
push
mov
dec
test
pop
shlb
sub
loop
arpl
sbb
sub
xchg
adc
push
test
loopne
mov
ja
mov
jmp
mov
sbb
aas
into
icebp
xchg
dec
mov
push
ds
lock
pop
jb
fiadds
and
xchg
add
xchg
lods
jp
push
ss
imul
cs
mov
mov
cmpsl
adc
stc
sbb
adc
pop
push
push
xor
outsl
xchg
jmp
jmp
test
mov
mov
dec
cli
push
pop
lea
and
mov
mov
mov
add
test
je
shlb
mov
add
push
add
call
push
insl
mov
fnstsw
pop
ss
mov
jne
pop
mov
push
cltd
ds
sub
lds
pop
outsb
mov
push
cs
pusha
jmp
jmp
lods
xchg
shll
dec
sbb
inc
ss
pop
adc
jb
jae
sub
xchg
xchg
insb
mov
imul
in
por
lahf
push
push
cmc
push
mov
mov
jmp
loope
pcmpeqb
mov
cmpb
dec
lahf
lods
dec
jg
dec
cli
popa
or
add
or
loop
imul
insl
mov
mov
xchg
fadds
out
add
orl
mov
xchg
sub
test
enter
ret
pusha
push
cmpsb
add
test
aad
cmp
cmc
jb
in
dec
push
inc
ljmp
lock
dec
das
inc
and
in
imul
mov
xlat
fstpl
inc
push
inc
xor
fcoml
aaa
add
and
mov
push
sahf
popf
sahf
jecxz
xchg
xor
pop
jns
repz
lods
or
and
xor
inc
xchg
movl
jp
mov
jp
insb
sub
xchg
mov
cwtl
dec
inc
jecxz
adc
pop
scas
mov
mov
shrl
repnz
dec
inc
ss
popa
push
mov
movsb
fcmovb
sbb
push
cmp
fs
pushf
in
jge
popa
shl
popf
orl
mov
or
fsts
adc
xor
in
rcrb
popa
add
add
add
sbb
mov
in
sub
or
js
divb
dec
adc
mov
shll
pop
cmc
int
test
inc
arpl
int3
mov
test
cmp
frstor
mov
fwait
out
out
lods
insl
stos
sub
shlb
adc
push
jns
push
pop
fidivs
fstl
or
mov
cwtl
jge
pop
sbb
fs
jmp
pop
cltd
add
xchg
scas
lahf
pop
mov
or
insb
imul
and
and
pop
int
hlt
negb
fisubs
pop
lahf
fistl
and
fwait
mov
sbb
dec
inc
fadds
scas
stos
or
adc
out
pop
mov
adc
mov
jno
pop
xor
inc
into
and
ret
mov
dec
sbb
imul
ret
jo
mov
pusha
jle
push
add
xchg
jmp
mov
cld
xchg
pop
xchg
push
shl
movsl
test
shrb
lcall
sarb
mov
add
pop
aam
fcomps
push
imul
xor
pop
loope
dec
mov
fimuls
cmp
pop
dec
test
insl
ret
lods
inc
stos
sbb
sahf
jmp
adc
dec
or
inc
mov
xchg
xlat
push
sahf
xor
sub
pop
addr16
push
pop
popa
or
rorl
sbb
xor
stc
imul
and
stos
push
sti
jae
fcmovne
sbb
push
daa
add
pop
cmp
popf
sbb
lods
mov
je
cmp
out
test
in
jb
cs
sti
cmp
sbb
jns
push
loopne
insl
mov
imul
xlat
mov
push
jmp
mov
pop
push
sbb
jbe
mov
dec
das
pushl
jl
aad
scas
mov
add
cwtl
jl
rol
dec
test
mov
sub
dec
mov
out
xchg
sbb
icebp
ret
xchg
leave
or
or
mov
jg
cmpsl
sub
into
in
lret
bound
jns
test
inc
fcompl
sub
std
and
fbstp
and
xor
cmc
push
sbb
mov
jg
mov
adc
mov
jns
inc
aas
fwait
dec
loopne
cltd
bound
into
mov
jecxz
aad
movsb
ror
xor
fwait
std
mov
pop
filds
inc
fs
and
mov
mov
mov
aaa
inc
or
movsl
xlat
mov
cli
pop
stos
mov
xlat
sbb
arpl
ds
sarl
xor
pop
andl
or
sbb
inc
xchg
cmp
inc
fstpl
andb
cmpsl
xchg
lcall
movsb
ja
je
push
dec
mov
pop
and
mov
ja
inc
mov
mov
sbb
push
cmc
cld
xchg
or
jle
dec
mov
sbb
xor
leave
sub
mov
cmp
mov
mov
std
jnp
lods
cs
cmp
cwtl
pop
sbb
ss
mov
shrb
mov
arpl
jle
enter
mov
fstl
das
add
jmp
cmp
js
jle
add
push
pusha
mov
cmp
adc
mov
xlat
add
jp
nop
pop
in
addr16
js
add
push
push
rol
push
lcall
jb
add
and
sbb
pop
mov
rcrl
cmp
sbb
pushf
mov
repz
arpl
mov
fadd
dec
in
stos
jge
cmp
mov
gs
mov
mov
dec
push
dec
push
adc
pop
cmp
xchg
fiadds
lahf
sbbb
sahf
xlat
cmp
ljmp
fcoml
or
cmp
push
mull
fs
mov
out
hlt
outsb
data16
nop
sub
mov
das
dec
and
xchg
xor
cmp
push
das
and
fistpl
add
lods
insl
add
xlat
movsl
mov
xor
mov
mov
outsb
mov
add
sbb
cltd
inc
and
xchg
jae
mov
outsl
inc
xor
push
sbb
xlat
jp
dec
lods
mov
movsl
pop
fs
out
jl
repz
test
xchg
iret
push
orl
mov
sbb
lea
nop
cmp
decb
cltd
lods
jo
repnz
and
jb
push
nop
aad
xor
fs
mov
nop
mov
push
or
cmp
rorb
mov
fldt
push
test
cmc
mov
cs
mov
inc
xor
stc
outsb
fcompl
fldl
jns
orl
clc
in
cmp
insl
mov
out
ss
lock
adc
pop
mov
lahf
adc
jbe
icebp
pop
jecxz
push
and
push
repz
fldcw
or
pop
stc
aas
dec
dec
adc
in
call
mov
inc
fs
dec
popf
jge
lcall
stos
push
add
loope
ret
mov
icebp
jnp
push
jle
push
mov
imul
loope
bound
call
xchg
in
loope,pn
add
iret
push
cmpsb
jns
loopne
fsts
lea
sub
mov
shll
sub
sbb
test
xchg
cmp
out
loop
lcall
adc
out
pop
push
adc
jb
lods
and
imul
ja
mov
inc
popa
mov
sbb
mov
out
paddusb
mov
cmpb
pusha
ljmp
cmc
imul
les
xchg
test
cli
hlt
fmulp
mov
mov
fisttpl
jmp
xor
mov
mov
rorl
or
or
addr16
inc
xor
divb
push
out
add
cmp
in
out
insb
inc
or
scas
sbb
aad
push
bound
push
arpl
or
shlb
push
insb
mov
lret
and
js
jae
int3
movsb
stc
sub
jge
adc
push
pop
out
mov
pushf
xchg
mov
cs
andl
out
mov
cmc
push
lahf
jo
mov
loope
ret
pop
jo
xchg
fnstsw
in
adc
cld
adc
sbb
imul
pop
jl
mov
mov
sbb
into
enter
cli
mov
sbb
imul
xlat
gs
scas
push
mov
loopne
xchg
cmp
sub
add
mov
and
loop
pusha
shrb
and
and
jnp
sbb
les
push
dec
ret
ja
pushf
scas
pop
repz
insl
imul
imul
repz
dec
mov
repnz
mov
rcl
push
mov
dec
inc
mov
mov
ss
int
arpl
shlb
out
leave
shr
xlat
xor
pop
imul
mov
data16
mov
repnz
fisttpll
out
lock
push
sti
out
dec
xor
add
jne
mov
repnz
rcl
mov
loope
mov
sbb
jecxz
and
mov
jmp
leave
std
pop
std
imul
cmp
test
add
in
cli
and
js
jae
data16
test
push
sbb
pop
sub
inc
xor
xchg
add
xlat
mov
imul
mov
cmp
add
push
pushf
inc
jo
xchg
and
gs
popf
sar
lods
ljmp
and
xchg
and
xor
and
cmpsb
es
js
jle
mov
in
leave
pop
dec
mov
iret
repz
test
fdivrs
adc
sbb
pop
adc
iret
ds
pop
push
jo
cltd
or
int
stos
movsl
sarl
les
inc
movsl
mov
mov
xchg
and
push
shrl
and
jp
orps
mov
push
push
nop
cmpl
mov
adc
call
pop
insb
push
xor
jb
or
lea
xchg
sub
xor
arpl
mov
es
lods
int
ljmp
pop
sub
sub
pushf
mov
adc
mov
and
leave
test
mov
stos
inc
dec
orl
inc
mull
sbb
xchg
push
jge
jg
xchg
fwait
xlat
dec
xor
inc
mov
fldt
dec
sti
addr16
cli
fwait
pusha
fs
int
cmp
mov
rcrl
mov
dec
in
add
cmp
lcall
int3
pop
jecxz
mov
add
lcall
loope
lds
mov
sub
mov
out
insb
and
jne
sub
movsb
xchg
lods
mov
lods
ret
push
inc
xor
mov
repz
pushf
imul
or
cmp
and
sbb
int3
and
mov
ja
stos
add
bt
sub
xchg
das
or
jl
inc
movsl
lcall
insb
push
add
mov
mov
out
mov
jbe
and
add
xchg
rcrl
adc
enter
daa
shl
cmovne
icebp
das
add
enter
rcrb
jp
lea
popa
and
roll
push
push
addr16
push
test
mov
pop
rcll
jge
nop
dec
repnz
mov
mov
mov
sahf
int3
inc
leave
inc
ds
xchg
out
mov
in
js
dec
mov
push
add
fisttpl
pop
push
sbb
mov
popf
jl
fadd
mov
rcll
dec
andb
lods
jnp
fwait
and
pop
iret
cwtl
adc
testb
mov
jo
fistps
pop
loope
dec
out
dec
inc
enter
mov
jl
cmovp
cwtl
jne
clc
mov
mov
add
adc
rorb
aaa
or
xchg
out
adc
push
stos
jle
loope
lret
push
cmp
pop
gs
pop
pop
movsl
xchg
cmp
aas
ret
fstpl
cs
xchg
test
fwait
jecxz
pop
and
test
fistps
test
andl
mov
pop
push
lcall
mov
fnstsw
adc
dec
or
ja
pop
xor
jecxz
jb
ss
out
xchg
adcb
sbb
mov
out
and
xchg
lock
ficomps
adc
movsl
cld
and
jnp
test
sti
ljmp
inc
frstor
pop
and
int
inc
push
push
repz
stc
out
sbb
cmc
and
pop
test
xlat
addr16
xchg
cmp
divb
fmuls
lock
es
pop
pusha
push
movsl
sub
movsl
push
bnd
rcrb
js
ljmp
fs
sbb
insb
xor
sarb
subb
out
shl
dec
cmp
lret
shlb
xchg
sub
test
enter
insl
sahf
fsub
dec
mov
push
sbb
jne
jmp
cli
jl
push
pop
shlb
es
cmp
xchg
sahf
iret
popa
inc
mov
xchg
in
iret
xchg
lcall
aas
cmp
and
std
loop
mov
xor
xlat
mov
stc
push
bnd
jle
xor
cs
mov
bound
sub
and
repz
aad
adc
cmpsl
sub
pusha
sub
arpl
jo
clc
or
popa
xorb
mov
and
and
sarl
mov
mov
ja
sbb
push
mov
loope
ja
mov
js
inc
pop
add
negl
lds
pop
dec
adc
xor
inc
imul
aas
push
imul
fcmovnbe
cmpsl
sub
sbb
push
jle
inc
cmp
mov
xchg
scas
sub
sahf
test
outsl
sub
std
ret
mov
cwtl
pop
and
lret
loopne
sub
arpl
inc
push
pop
mov
jne
mov
dec
sub
adc
daa
inc
insb
div
fisubrs
push
int3
mov
adc
pxor
jcxz
fldl
add
dec
mov
jl
fsubs
shll
adc
fcomps
ljmp
xor
xor
dec
dec
ja
jge
push
stc
push
into
jb
roll
jg
jl
cmpsb
lret
test
ss
and
test
rcrb
mov
push
fwait
out
cmp
and
sbb
loopne
push
fbld
jle
rorl
xor
mov
gs
add
sbb
push
loop
pushf
push
out
xor
leave
jne
mov
mov
fwait
jl
arpl
imull
mov
in
push
and
inc
addl
stc
mov
and
outsl
xor
repz
inc
lahf
jp
out
jg
cs
pusha
das
cmp
mov
pop
stos
mov
ljmp
cmp
outsb
push
insl
jg
into
out
lahf
pop
xor
dec
lahf
or
cmp
push
xchg
addb
sarl
and
cmp
mov
adc
cli
addr16
divl
rclb
or
loopne
mov
inc
mov
pushf
dec
jne
out
cmp
pop
jnp
fs
js
adc
mov
out
ret
mov
out
inc
enter
mov
movl
fdivs
xor
fnstenv
out
shll
ret
xchg
fsts
gs
mov
xchg
popf
sahf
rorl
ret
outsl
int3
fs
lcall
test
mov
jbe
fisttpl
das
and
or
pushf
scas
and
dec
jp
mov
fldl
push
cmp
pop
fistpl
cmc
inc
pop
cwtl
nop
mov
mov
jbe
xor
js
push
push
xchg
sub
push
outsb
sub
xchg
jp
push
adc
or
pop
cmp
ret
out
push
xchg
cmpsl
dec
int3
mov
jae
rcl
cmc
nop
jmp
mov
pop
cs
outsl
out
rcrl
adc
repnz
jnp
or
pushf
cmp
loope
and
daa
pop
push
loop
add
mov
mov
subl
jb
mov
leave
mov
fwait
xor
and
int3
inc
pop
or
dec
adc
outsb
inc
rol
mov
add
and
repnz
in
icebp
inc
ficoms
sbb
stc
mov
lock
add
xor
or
test
and
mov
mov
outsb
subl
sti
cmpsl
jne
or
icebp
xor
adc
js
push
add
and
pop
pop
pop
xchg
sub
dec
lods
push
arpl
push
repz
cmc
mov
iret
jb
xorw
push
jp
rcrl
addr16
jecxz
sbb
jmp
out
inc
or
xchg
shlb
jmp
and
xchg
dec
frstor
inc
add
outsb
movsl
jno
repz
ds
leave
and
lcall
and
hlt
out
repnz
loop
daa
cmpsl
ljmp
mov
std
jbe
ja
adc
aaa
outsb
nop
jge
pop
jbe
call
cli
mov
unpckhps
adcl
insl
cmpsb
xchg
test
xchg
xchg
pop
mov
leave
sbb
cmp
mov
pop
pop
lahf
add
in
aam
jnp
sbb
xchg
dec
lods
lcall
test
sbb
sub
sub
pop
dec
jnp
cmc
ja
sbbl
push
sub
xchg
int
mov
pop
push
sub
sahf
test
hlt
dec
lock
in
push
jbe
sub
sbb
stos
jne
mov
ret
and
test
pushf
test
push
push
xchg
push
jmp
push
cld
pop
dec
pop
inc
push
pop
mov
out
or
add
cwtl
mov
pop
cmp
pop
jae
les
insb
pusha
and
pop
pop
pop
jb
cld
insb
xchg
stos
int3
into
mov
or
sbb
push
fstps
in
adc
popa
lds
or
mov
cltd
int3
push
jge
movl
xchg
cmp
lea
loop
cmp
add
pusha
jo
stc
xchg
aam
stos
pop
mov
xor
push
rcrl
movsl
jmp
insb
mov
jl
mov
mov
ljmp
sbb
or
lret
jecxz
and
jecxz
scas
aam
xchg
pop
mov
jg
gs
in
cli
hlt
jecxz
sub
sar
cwtl
cmp
je
movsl
insl
imul
lock
sbb
add
or
clc
out
repz
fstpl
sarb
mov
hlt
adc
in
sbb
sti
enter
mov
sub
js
movsb
add
add
inc
test
inc
sbb
jge
xchg
test
xchg
mov
add
in
push
jb
cs
xchg
or
jnp
xchg
nop
popa
popl
dec
iret
int
orb
xor
ds
js
fwait
and
int
add
das
jg
sub
pop
in
arpl
mov
out
std
stos
addl
cmc
jnp
adc
pop
xchg
mov
test
push
es
push
in
adc
ret
fwait
mov
sbb
iret
orb
push
push
icebp
or
and
add
test
xchg
inc
shll
aad
xor
in
dec
rcrl
ds
cld
mov
lods
adc
push
scas
xchg
xor
jmp
dec
and
jecxz
xchg
pop
dec
mov
rcll
les
dec
xchg
int3
ret
cs
mov
scas
mov
mov
aam
stos
xchg
push
pop
inc
fnstsw
jecxz
mov
sbb
dec
adc
imul
mov
xchg
cmpsl
cwtl
cmp
mov
sahf
cmp
mov
insl
mov
leave
frstor
add
mov
sub
into
testb
sgdtl
scas
das
sub
add
jnp
mov
pop
fidivs
mov
inc
sbb
mov
andl
frstor
inc
inc
stos
ret
mov
jns
leave
sarb
inc
out
push
mov
sub
xor
jmp
shll
cmp
out
fisubl
shl
lods
add
add
cmp
sbb
loopne
push
mov
push
xchg
fs
mov
jg
out
jnp
loop
outsb
lods
lret
adc
movsb
decb
xchg
sub
xchg
xor
imul
sub
mov
mov
adc
mov
add
loope
inc
xchg
arpl
jne
jne
jle
fs
bound
popw
outsb
shl
sub
pop
jb
fistpll
push
pushl
xor
shrl
pop
mov
inc
pop
mov
fadd
cmpsb
xchg
jb
dec
pop
pop
nop
dec
das
lret
bound
mov
sub
mov
divb
ja
cmpsl
xor
lahf
aaa
sbb
adcb
popf
shrb
in
jo
into
jne
cmp
insb
mov
and
jp
dec
dec
xor
sub
sbb
inc
jle
out
clc
push
add
test
cmp
sub
cmpsb
add
xchg
inc
jecxz
cmp
gs
aas
rcrl
inc
js
call
mov
dec
cmpsl
ret
jecxz
enter
jg
aam
sub
imul
out
mov
pushf
mov
mov
or
pop
nop
cmpsl
adc
jnp
addr16
imul
aam
fsts
popa
lahf
inc
test
and
sahf
subl
cwtl
repz
mov
mov
dec
clc
stc
and
adc
push
pop
call
push
js
mov
scas
sub
push
das
imul
pmullw
outsb
shr
leave
cmp
rorl
dec
mov
into
dec
test
mov
cmp
sarb
sbb
add
in
lods
mov
xlat
mov
jecxz
cltd
loope
out
push
outsl
cmp
push
leave
pop
adc
sbb
gs
nop
xchg
dec
test
or
inc
loopne
pop
adc
aas
in
push
dec
push
js
fsubl
pop
cli
into
mov
pushf
inc
test
xchg
mov
sub
xor
in
sub
in
push
xor
push
daa
movsl
jmp
iret
pop
popa
mov
lret
dec
sbb
orb
jns
into
leave
aad
or
in
pop
ljmp
outsl
sbb
iret
stos
je
mov
aas
ja
scas
dec
daa
mov
fsts
fdivrl
mov
or
xchg
lods
or
push
in
scas
cmpl
cltd
inc
in
fldcw
es
pop
fbstp
push
xor
sbb
xor
dec
cmp
test
jne
es
and
inc
out
sahf
loopne
test
mov
pop
push
cld
sbb
out
cmp
mov
int
addb
sbb
cltd
xchg
adc
dec
ret
popw
lahf
inc
push
dec
mov
mov
outsb
or
mov
movsb
or
ljmp
fimuls
int3
push
test
sbb
sbb
and
int
in
mov
clc
sbb
rolb
js
je
jle
lds
pop
adc
aam
lds
pop
pop
lods
les
cwtl
loop
xchg
xchg
cmp
pop
dec
adc
mov
fsubl
aaa
mov
das
xchg
jo
jnp
cli
aad
pop
cwtl
xchg
push
or
dec
jecxz
push
push
sub
or
movsb
ss
and
fildl
adc
jp
inc
movsb
popa
inc
xchg
stos
jne
cmp
xor
loope
jmp
sub
inc
pop
push
lea
xlat
cmp
jb
sbbl
cltd
and
lahf
jno
lahf
pop
add
mov
cld
loopne
add
jns
jo
or
and
mov
adc
lea
repz
dec
imul
add
mov
mov
inc
jns
shlb
movsb
mov
cmp
sub
scas
push
jge
loope
in
xor
jns
inc
pop
adc
xor
mov
pop
lock
xor
pop
or
sub
push
push
fs
outsl
mov
test
movsb
lcall
inc
test
in
iret
cmc
push
sbb
xchg
test
jp
lock
sbb
in
or
cmp
decl
cs
jl
test
fmuls
js
aas
sarb
dec
adc
pushl
fbstp
and
adc
cmpsl
and
adc
jmp
jns
xor
xchg
out
push
mov
int3
xor
jmp
fsubrs
adc
test
mov
push
and
cmp
dec
dec
cwtl
push
jo
fists
repz
ret
fidivrl
enter
cwtl
mov
xchg
add
es
sbb
or
and
jnp
cld
movsl
dec
pop
lcall
repnz
fcmovnbe
mov
cmp
shrb
pop
pop
fs
pop
movsb
lods
cmp
fisubl
in
sbb
mov
mov
jae
movsb
pop
ret
and
dec
daa
les
pop
mov
inc
xor
push
dec
cmpsb
mov
dec
outsl
xchg
and
mov
or
pushf
ja
push
in
pusha
scas
arpl
sahf
push
jno,pn
sbb
btcl
sub
std
cmc
out
xor
test
mov
add
jmp
iret
std
das
mov
adc
mov
imul
jne
cmpsl
mov
out
push
cmp
mov
fwait
and
pop
bound
sub
fs
mov
fdiv
lods
pop
sub
adc
mov
fsubrl
mov
ret
mov
pop
pusha
in
sbb
xchg
mov
int3
inc
int
std
add
or
dec
ss
xchg
or
test
int
xlat
repz
add
ret
adc
xchg
ja
adc
scas
faddp
addb
dec
sub
nop
daa
imul
mov
cld
into
aaa
and
mov
inc
mov
sbb
dec
insb
js
sbb
add
stos
jecxz
test
and
dec
dec
gs
out
and
inc
xor
mov
shr
fimuls
mov
test
push
dec
adc
mov
repnz
sub
sbb
add
fldt
lds
lods
shll
fisttps
loope
mov
ljmp
pushf
jae
fidivl
push
int
stos
lds
mov
jbe
pop
pop
dec
mov
insb
in
add
sbb
mov
or
cld
fs
loop
sub
popf
bswap
push
mov
inc
push
dec
or
clc
jno
dec
push
int3
es
sarb
inc
push
cmpsl
jg
scas
addl
sbb
outsl
and
fs
test
jg
xchg
nop
xor
xor
into
xchg
mov
pop
pop
lods
xchg
addr16
data16
icebp
scas
pusha
imul
mov
mov
xor
mov
mov
or
cmp
jge
mov
lret
dec
mov
out
inc
ret
stos
aam
jb
inc
pop
or
notb
sbbb
push
loop
mov
mov
jg
cmp
mov
loop
adc
xchg
movsl
cmpsl
out
cmp
cwtl
jo
pushf
test
sbb
ret
dec
cld
outsb
add
adc
cmpsl
ss
mov
in
add
cmp
sbb
popa
fisttpl
lock
dec
fisubs
add
fsubr
dec
adc
sub
test
pop
push
shll
cmpsl
mov
add
jns
movsb
inc
movsb
cmc
mov
lock
testl
out
push
ret
fmuls
inc
and
xor
xor
mov
push
dec
fisttps
mul
repz
xchg
jge
hlt
ret
mov
data16
and
in
pop
dec
fcmovnbe
xchg
or
xchg
cmp
jl
sub
jae
mov
rorb
ret
xor
and
lea
xor
push
aas
cmp
test
mov
pushf
mov
mov
pop
in
inc
cmp
and
rorb
scas
mov
iret
pop
add
loope
rorb
sub
jecxz
inc
or
movb
push
jge
out
sub
out
jmp
cmp
inc
orl
nop
mov
in
mov
push
out
sub
bound
jle
jl
cmp
add
pop
fmull
lahf
jns
pop
out
pop
xlat
sti
das
jp
push
dec
sbb
cld
int
ljmp
jo
lcall
cmp
or
sbbl
adc
mov
add
lret
out
add
sbb
fs
push
or
enter
mov
movsl
mov
cmp
add
add
repnz
mov
repnz
loope
cwtl
sarb
xchg
lret
pushf
call
negb
jns
sti
xor
and
idivl
cmp
push
jne
xchg
dec
dec
fidivs
xor
sbb
mov
cmp
pushf
mov
aas
cmp
fdivl
kxnorb
jno
dec
mov
movsb
inc
push
loope
mov
ret
bound
dec
mov
push
pop
aaa
jo
lret
scas
mov
inc
cmpsl
pop
clc
aad
out
notb
sahf
xor
push
dec
cmp
add
push
fldl
test
push
mov
aaa
or
out
aam
dec
xchg
inc
push
sbb
cmpsb
jnp
sbb
aad
add
mov
xor
orb
jmp
pop
jo
test
test
adc
call
das
test
jno
push
inc
mov
push
sarl
inc
jp
mov
pop
xchg
andl
imul
cs
dec
xor
xchg
lret
pop
add
mov
xor
mov
pop
dec
inc
and
out
jb
in
ljmp
mov
xor
jne
pop
rorl
xchg
or
xor
xor
outsb
jecxz
scas
fiaddl
das
sub
insb
jg
push
adc
fidivrl
push
add
push
jo
sete
imul
sub
mov
lcall
sbb
loopne
jb
outsl
popf
xchg
dec
jg
adc
dec
sbb
push
mov
enter
jle
jl
int3
call
lock
xchg
xchg
insb
dec
ljmp
sub
push
pushf
ljmp
mov
xor
sub
test
outsl
mov
push
mov
xorb
mov
mov
cld
insb
and
mov
cmpl
dec
das
mov
pop
or
bound
xor
test
sub
mov
out
sbb
sub
mov
jg
stos
repz
inc
adc
in
dec
gs
xchg
and
scas
jp
or
shrb
enter
xchg
and
mov
nop
mov
pop
jle
stos
and
lcall
dec
repnz
mov
add
sub
sub
xor
aas
pop
out
sbb
dec
or
cmpsb
xor
inc
dec
ja
sbb
xor
out
xchg
fnstcw
add
xchg
inc
mov
mov
mov
dec
or
hlt
sub
cmp
fucom
mov
je
stos
int3
sub
cmp
call
out
sarl
xchg
mov
outsb
and
arpl
out
aam
insl
sbb
inc
movsb
nop
popa
mov
mov
jle
or
cmp
and
repz
jnp
dec
push
adc
mov
sbb
lods
clc
outsl
push
leave
inc
mov
dec
cmpsb
mov
imul
and
xchg
inc
inc
in
scas
mov
or
addr16
dec
aas
lret
mov
insb
inc
shlb
aaa
fdivrl
lods
dec
jle
inc
sub
andb
dec
ljmp
adc
push
adc
cmp
fdivr
xchg
mov
and
add
sub
int3
arpl
cmp
imul
fstps
or
in
ds
and
ljmp
sub
sahf
mov
fstp
test
add
add
adc
sbb
mov
rcrl
aas
test
jge
outsb
mov
add
push
cs
repnz
pusha
dec
nop
jno
out
jecxz
sbb
jg
inc
cmp
or
sub
adc
scas
popf
cltd
fcompp
mov
and
sub
shll
fdivrp
add
sub
repnz
jle
sub
mov
mov
roll
loop
inc
mov
cs
jno
sbbl
jbe
aam
test
and
jecxz
pop
inc
push
rcrl
cwtl
clc
rcrb
fidivl
cli
stc
lcall
inc
add
mov
sahf
fnstsw
test
jle
cli
xor
fbstp
dec
fwait
aas
jg
mov
call
add
and
shrl
push
inc
leave
int
pop
add
sub
sahf
fstl
sbb
add
mov
jle
sbb
dec
jns
jno
xchg
je
sbb
mov
jae
mov
cwtl
push
repnz
cmp
dec
and
mov
xchg
mov
out
icebp
ja
cmp
addr16
int
adc
push
dec
inc
mov
int
xchg
call
add
outsb
cmpsl
sub
mov
dec
inc
lret
cli
inc
outsl
xchg
lret
pop
or
xor
add
or
mov
xchg
or
movsb
mov
adc
sbb
and
cmp
lret
adcl
push
idivl
mov
add
xor
jbe
test
push
std
push
out
icebp
icebp
cmp
sub
notb
or
and
nop
jge
mov
lock
dec
pusha
add
mov
repz
pop
cli
mov
mov
or
dec
mov
mov
pop
and
cmp
push
xchg
inc
dec
test
mov
iret
xchg
rorl
mov
lock
add
mov
push
jb
insb
dec
lds
and
push
scas
mov
pusha
test
pop
outsb
int3
jg
pusha
xchg
test
rcl
adc
out
imul
push
stos
pop
lahf
ja
dec
jbe
push
pushf
adc
pop
out
sub
dec
xchg
push
nop
shll
jmp
jns
sbb
mov
fistpll
dec
mov
popa
mov
lret
push
adc
pop
les
pop
enter
in
xor
icebp
notb
or
push
imul
loopne
cmp
out
aam
inc
inc
jbe
scas
and
aam
bound
mov
fldt
popf
jb
call
stc
jae
scas
xor
lods
cmp
add
adc
sbb
push
fcomp
cmp
aam
jp
dec
out
aam
jb
mov
sbb
lcall
jnp
mov
push
push
mov
mov
insl
mov
xchg
sub
sbb
pop
faddl
add
xchg
cli
push
shlb
and
data16
xchg
inc
ja
xor
pop
pop
stos
pop
movsl
ljmp
test
mov
lahf
in
jg
js
out
mov
push
test
cli
mov
or
arpl
xor
icebp
mov
loop
mov
imul
movsl
adc
mov
scas
enter
addr16
xor
push
pop
mov
fbstp
sbb
fs
test
cmpsl
push
in
sub
push
loop
xchg
into
das
ja
es
or
xchg
sbb
adc
clc
lods
cmp
pop
int3
icebp
xchg
fwait
push
and
ficoml
lcall
stos
test
dec
mov
sbb
ret
add
popa
xor
int3
enter
mov
push
sub
sbb
shl
popf
shrb
pop
cs
push
leave
push
xchg
mov
jo
mov
xor
sub
xor
mov
test
ret
dec
xchg
loope
lahf
out
pop
ja
ret
mov
mov
ds
ljmp
mov
cs
sbb
mov
subl
and
cmp
out
jbe
dec
cmp
mov
or
stos
das
movsb
jle
mov
mov
and
leave
push
nop
jle
or
imulb
pop
add
js
lret
mov
movsb
push
rcrl
add
mov
sbb
push
notb
test
pop
xlat
mov
and
outsl
enter
scas
cmp
mov
or
mov
sahf
jo
out
cmp
mov
pop
std
ds
push
clc
xorb
mov
mov
mov
cmp
xor
das
pop
loopne
je
sbb
push
test
hlt
shr
clc
pop
mov
ja
nop
sarl
mov
inc
insb
fs
pop
shlb
shl
sbb
adc
jno
sahf
lret
insb
lcall
rcll
mov
xchg
mov
or
inc
fisubrl
js
xchg
ret
dec
adc
xor
push
in
mov
es
add
ret
shr
inc
xor
test
loope
mov
scas
aas
loope
andb
ljmp
rol
cmp
shll
sub
sahf
dec
ret
sbb
iret
movsl
int
test
ret
jne
les
xor
xchg
push
pop
jl
clc
stos
mov
jae
shrb
push
dec
in
sti
inc
sbb
mov
cmp
push
dec
ljmp
add
das
xor
sub
inc
call
clc
mov
mov
xchg
cmpsl
nop
mov
aaa
push
repnz
inc
cli
cmp
lahf
add
xor
or
pop
stos
mov
icebp
rcr
pop
orl
push
xor
lods
xor
mov
fdivl
cmc
pop
dec
xchg
fiadds
inc
dec
jne
pop
loope
push
das
rclb
adc
pusha
xchg
popf
insl
icebp
pop
lret
dec
lea
dec
xor
mov
lods
lret
cwtl
and
mov
fsts
lret
scas
inc
pop
xchg
xor
ret
adc
xchg
push
iret
jge
shrl
jg
jp
push
in
aam
lret
inc
jg
cmp
mov
out
ffree
lahf
sbb
jns
sub
push
push
inc
jl
cld
into
dec
sar
mov
mov
pop
or
pop
cwtl
add
inc
mov
fwait
dec
mov
cmp
push
adc
outsl
mov
scas
cmpb
dec
pop
jo
adc
jle
hlt
xlat
cmp
and
sbb
sbb
repz
xchg
add
mov
fisubrs
cmpsb
rol
sbb
mov
shrb
add
xor
jne
sub
xor
loop
je
pop
jns
xchg
sub
adc
adc
pushf
dec
push
shrl
jg
push
lods
sbb
roll
jne
push
faddl
mov
xor
hlt
fidivrl
add
xor
and
in
das
pusha
push
aaa
lds
pop
xor
movsb
jmp
ret
mov
lods
jnp
adc
sbb
mov
inc
cmp
inc
push
jg
push
jns
and
int
fidivs
push
xor
cli
fildll
ret
xor
cmpsl
jnp
ljmp
cwtl
addb
jg
cmp
jp
js
loope
enter
out
rclb
xlat
inc
cld
xchg
xorb
cmp
dec
pop
jmp
clc
xchg
das
inc
inc
cmp
xor
jmp
outsl
jmp
cwtl
pop
aaa
int3
jmp
je
mov
push
subb
sti
daa
or
addr16
out
jl
push
cwtl
sbb
movsb
cmp
mov
sub
add
add
notb
push
pop
or
mov
pop
mov
mov
sub
cli
fmull
roll
xchg
xchg
into
sub
mov
sbb
add
xlat
push
test
dec
dec
adc
sbb
pop
insb
mov
add
push
fldl
ds
insb
sbb
push
sahf
dec
mov
pop
sti
pop
dec
rcll
push
stos
pop
jp
fcoml
jle
mov
icebp
push
int3
movsl
push
ror
jle
into
out
mov
popf
sbb
cltd
push
incl
std
add
leave
jno
daa
ds
cmpsb
int
push
aaa
leave
mov
xchg
xor
adc
sub
pop
sbb
bound
dec
ja
addl
cmp
loop
dec
jp
aad
mov
jg
loope
shrb
sti
rcl
or
ss
xchg
lds
xor
rcr
sub
sub
aad
ret
aam
es
push
lods
adc
rolb
xor
loopne
pop
inc
ljmp
mov
adc
pop
adcb
sti
sub
jnp
mov
insl
test
mulb
sub
or
pop
cmpsl
sbb
das
mov
xchg
jle
mov
andb
dec
cmpsl
ss
mov
pop
or
orb
and
loopne
pop
dec
jp
push
jecxz
ja
inc
aam
in
and
popf
jge
mov
sbb
sbb
clc
shll
cwtl
lcall
lods
sbb
insl
ljmp
dec
xchg
add
xor
pop
rcrl
dec
mov
mov
fwait
sub
xor
cld
mov
addr16
sbb
popa
mov
outsl
cmp
aas
push
xor
xor
fwait
pop
pop
test
aaa
jne
adc
imul
insl
jle
dec
dec
mov
jae
stc
mov
mov
pop
add
xchg
fs
pop
or
inc
testb
jg
call
cli
xchg
add
es
cmp
jge
cmpsb
xchg
push
imul
add
add
mov
mov
loopne
mov
inc
jg
cmpsl
sbb
or
cmp
aaa
and
mov
test
shll
jl
aam
xchg
movb
pop
add
ret
dec
js
int
xor
and
shl
sub
aam
pop
icebp
adc
jo
pop
or
inc
push
cwtl
in
test
sbb
aam
mov
enter
jg
mov
or
test
enter
pusha
fnstsw
dec
add
adc
jo
pusha
lahf
jge
push
jmp
popf
imul
movsl
cmpsl
int
cwtl
in
cmc
dec
pop
clc
mov
pop
loop
cli
fildll
mov
mov
rcr
test
roll
mov
mov
sbb
dec
in
insl
insb
cmc
cmc
sub
cmp
mov
cmp
jmp
idivb
inc
xchg
enter
cli
adc
lret
aad
ds
cmp
or
mov
or
daa
sbb
movsb
adc
mov
cmp
mov
out
nop
push
adcl
ja
out
xchg
pop
movsb
loopne
pop
xchg
data16
shrl
mov
lcall
mov
jnp
fdivl
sub
inc
nop
arpl
fsubrl
jge
sbb
roll
dec
mov
les
add
mov
jmp
inc
adc
test
adc
cmpsb
aas
cmpb
pop
sub
pop
adc
call
fwait
sub
add
jge
cmpl
push
ljmp
jo
fs
imul
dec
inc
sbb
push
mov
fbstp
ljmp
hlt
js
mov
mov
mov
mov
push
push
dec
nop
test
addr16
mov
test
arpl
cmpsl
sub
mov
icebp
ret
jne
ds
int
mov
arpl
loope
push
jp
lret
fstpl
outsl
adc
inc
add
addl
add
mov
loop
inc
push
stos
lcallw
push
cmc
sub
xchg
mov
mov
jb
dec
push
mov
bound
cmpsb
ret
mov
shll
clc
xchg
and
push
sbb
dec
outsl
mov
mov
adcb
mov
add
jb
outsb
sti
adc
insl
adc
push
adc
inc
jmp
fistl
dec
mov
out
stos
push
xchg
dec
adc
in
pop
cmp
jge
push
lret
xlat
negl
push
cmp
ret
jecxz
sbb
cmpsb
push
push
inc
nop
aam
and
xlat
jnp
fwait
hlt
jns
out
inc
jecxz
pop
enter
sarl
or
jl
sub
negl
cmp
or
loopne
lea
and
inc
inc
jmp
sbb
xchg
push
pop
adc
ror
popl
pop
lock
dec
xchg
mov
imul
xorb
pusha
pop
fimuls
scas
or
lods
fs
outsl
jo
pop
dec
movsb
cmpsl
clc
push
cld
mov
ja
fs
add
arpl
jl
fists
push
xchg
lcall
lcall
xchg
cmpb
inc
fnstcw
fcoml
out
lea
jbe
cmp
push
inc
test
push
cltd
xchg
fdecstp
cmp
push
out
lahf
sbb
in
leave
mulb
cmpsl
adc
inc
ffree
std
add
lcall
cmp
shlb
loop
jmp
fdivrp
pop
fdiv
dec
jno
test
in
popf
dec
mov
bound
lret
lret
cmp
mov
push
cs
lret
ja
aas
decl
out
add
insb
int
push
push
push
call
jmp
mov
dec
dec
mov
loop
repz
inc
cmp
lea
xor
in
dec
fidivl
clc
sub
cmp
cwtl
outsb
int
or
fdivrp
popf
das
xchg
iret
sbb
loopne,pn
sbb
pop
inc
push
bound
cld
sbb
push
out
cmp
push
mov
cmpsl
sbb
dec
into
bound
mov
sahf
inc
or
stos
ficomps
sbb
mov
mov
and
stos
mov
cmp
int
sub
ljmp
mov
mov
inc
sbb
movsl
and
stos
enter
pop
insl
lret
hlt
test
enter
cmp
push
jecxz
mov
mov
adc
popf
push
leave
ljmp
xchg
mov
xchg
cmc
xchg
repz
clc
mov
lods
and
bnd
cli
xor
push
loop
cmp
notl
dec
add
lcall
test
mov
pop
loop
push
mov
jns
sub
bound
and
nop
lret
cmpsl
jge
inc
sbb
andb
insb
push
xchg
shlb
movsb
int3
loop
sbb
or
mov
adc
sbb
into
fs
mov
call
movsb
lret
cmpsl
outsl
jg
arpl
mov
push
mov
cmp
aaa
push
loopne
mov
cmpsb
cmpsl
pop
imul
push
data16
out
leave
mov
popf
sub
notl
lahf
mov
sub
pop
xor
pop
insl
push
rorb
popa
repz
enter
or
xchg
pop
inc
jmp
in
jnp
insb
cli
jno
idivl
and
cmp
add
mov
push
icebp
and
mov
cmp
mov
fiaddl
push
testb
pop
addr16
cwtl
sbbl
cltd
push
scas
add
dec
mov
arpl
sbb
or
jg
jmp
cltd
imul
loope
adc
push
mov
xchg
aad
fcompl
outsl
mov
jae
xchg
enter
mov
mov
lods
sub
nop
xchg
xlat
fnsave
popf
pop
outsb
mov
scas
movsbl
inc
or
ret
mov
jns
xor
insb
xchg
add
out
insb
icebp
mov
dec
adc
cltd
sub
jb
jecxz
pop
mov
xor
cld
outsb
mov
mov
lcall
pusha
adc
jge
repz
xchg
jo
sub
dec
jle
imul
out
ret
cs
pop
int3
push
mov
subb
jno
nop
fistpl
aad
mov
in
and
inc
mov
mov
push
xchg
adc
mov
sbb
ja
nop
gs
scas
and
aam
jge
jecxz
flds
cmp
add
arpl
mov
pop
lahf
rcrl
sarl
add
dec
sub
fdivs
xor
mov
xchg
arpl
or
xchg
je
ja
and
xchg
test
gs
jmp
push
mov
xchg
lcall
and
lcall
pop
push
int
inc
mov
fadd
icebp
and
jge
sahf
fcompl
loope
adc
inc
mov
sub
lret
push
mov
nop
adc
or
cli
mov
push
cmpsb
ror
shlb
ja,pn
dec
fsubrl
in
push
and
movsl
bound
cmpsb
ljmp
mov
in
fldenv
cmp
arpl
mov
inc
ss
xchg
aam
scas
and
mov
fldt
xor
and
mov
ljmp
mov
lcall
pusha
test
sbb
rcll
xor
dec
es
xchg
sbb
sbb
cltd
cmpsb
mov
ds
pop
cmpsl
mov
ret
inc
mov
xor
cmp
fidivl
mov
cs
sbb
mov
sahf
leave
call
loopne
sbb
ret
shlb
mov
add
lods
inc
xchg
mov
add
adcl
fstpt
mov
addl
inc
inc
testl
scas
pusha
js
stos
cmp
xchg
iret
lds
int
mov
scas
das
test
fdivs
call
xor
cmp
mov
cmp
sbb
jno
sti
stos
dec
imul
mov
mov
call
xchg
aas
ja
mov
mov
ret
mov
lret
les
loope
cwtl
pop
dec
jne
nop
jo
cmp
adc
inc
sub
jp
push
xchg
xchg
stc
dec
mov
or
cmp
or
repnz
aad
jecxz
jo
repz
call
mov
pop
out
out
dec
in
aaa
push
pop
or
shrb
sbb
push
push
fstpl
sbb
xchg
jae
mov
stos
in
loop
push
gs
and
jmp
inc
in
inc
lea
testl
lock
notb
je
es
xor
pop
xchg
repnz
addl
jne
sbb
xchg
mov
pop
and
xchg
xor
adc
pushf
cli
data16
out
or
int
scas
test
mov
fs
adc
add
pop
mov
jne
out
cli
xchg
mov
stos
fwait
mov
xchg
and
les
mov
pop
cltd
fimuls
stc
rol
inc
xchg
je
dec
jo
pushf
add
push
out
mov
add
test
cli
sbb
out
negl
popa
xor
popf
adc
mov
pop
jae
popf
das
push
fistl
bound
sbb
jmp
cwtl
cmc
gs
cli
cwtl
aaa
adc
pusha
mov
hlt
xchg
inc
shlb
sbb
lods
xor
and
push
jecxz
popa
shl
bound
ljmp
inc
xor
test
nop
mov
cmpsb
lods
in
or
rcrb
aas
daa
ret
dec
and
xchg
sahf
mov
cwtl
pop
pusha
push
cmp
stos
js
test
shr
ss
push
pushf
mov
mov
xchg
jne
cs
out
test
jle
or
xor
cmp
xchg
pusha
or
lock
ja
and
cmp
cld
push
dec
jnp
mov
insb
aas
or
xchg
je
les
test
inc
clc
testl
jg
jecxz
xchg
data16
in
loope
movsl
push
cwtl
pop
cmpsl
inc
out
int
pop
jbe
aas
mull
mov
jno
in
adc
pushf
aad
in
repnz
adc
jno
sbb
mov
xor
out
inc
frstor
xchg
mov
jns
ja
addr16
imul
in
scas
call
dec
mov
test
movsb
and
clc
fisubrs
or
mov
cli
sbb
scas
pop
xchg
lret
cmp
int
bound
xor
pusha
orb
jp
lahf
adc
ljmp
mov
jae
cmp
xchg
cltd
sbb
lods
incl
xor
pop
popa
xlat
andb
dec
bound
fadds
cltd
fdivl
sbb
mov
mov
in
fiadds
mov
jns
popa
mov
pop
je
pop
loopne
jecxz
dec
cmp
or
dec
pop
lret
push
sbb
cld
fisttpll
cs
jg
jb
insl
inc
icebp
nop
insl
xchg
mov
movsl
xor
mov
hlt
int
jg
in
into
pushf
lcall
imul
mov
xor
stc
xchg
mov
jb
lock
in
and
insl
mul
sbb
hlt
inc
test
cli
cmpsl
decl
jo
lret
or
push
jnp
mov
pop
or
outsl
testl
xor
push
push
in
insl
faddl
fbstp
sarl
push
ds
repz
and
in
repz
xchg
dec
test
enter
push
cmp
push
cld
xor
pop
xor
mov
inc
in
jecxz
dec
push
je
ljmp
mov
fsubrl
mov
inc
insb
pop
repnz
nop
add
cli
aad
mov
mov
test
adcb
rclb
mov
mov
movsl
insl
adc
xchg
pop
xor
ss
mov
out
sub
pop
cmp
add
jl
sbb
adc
pop
xor
pop
mov
cli
xor
punpckldq
xchg
mov
cld
pop
xchg
out
insl
pop
ljmp
sarl
cmp
pop
lret
push
lret
pushf
pusha
mov
pop
mov
mov
pop
dec
cmp
ljmp
xor
inc
movsb
xchg
fiadds
pop
loop
inc
cli
push
call
ja
mov
jnp
xchg
and
adc
pusha
xlat
xchg
arpl
add
xor
push
mov
test
dec
pop
add
dec
out
or
pop
adc
dec
mov
push
adc
jb
mov
hlt
jl
filds
out
je
lret
out
or
mov
outsl
and
mov
aad
divl
jno
and
rcr
ficompl
adc
je
or
dec
mov
add
xor
or
cmc
xchg
xchg
adc
in
pusha
pushf
lret
mov
jno
cmpsb
test
into
ret
addl
and
imul
adc
popa
or
and
or
xchg
jle
mov
retw
jns
jmp
xchg
imul
clc
lcall
lods
out
in
push
lret
lcall
fs
cmp
mov
adc
aam
pop
icebp
xor
xor
or
and
shll
loope
push
xor
push
mov
cmp
insb
pop
mov
ljmp
fucomp
mov
inc
and
mov
jnp
and
mov
mov
dec
ret
pop
movhps
loop
mov
jb
in
sbb
mov
pop
dec
push
lcall
sbb
add
insb
je
aam
bound
push
pop
js
mov
gs
lods
and
in
or
lret
shll
jle
sbb
sub
dec
jmp
sub
std
fs
sub
pushf
rdmsr
xchg
mov
jl
jl
xchg
js
mov
call
lods
mov
aam
faddl
aas
addl
clc
cmp
je
ds
or
jns
sbb
mov
pop
test
pop
lret
in
pop
lods
movsb
add
lcall
jb
test
lret
ds
xchg
gs
dec
inc
dec
ja
mov
pushf
icebp
mov
jp
fldcw
mov
shrl
xchg
inc
mov
out
xchg
aaa
add
daa
lret
xor
jge
or
xchg
jne
out
fsubr
push
fsts
in
ljmp
fwait
imul
jbe
sub
adc
cld
frstor
scas
or
cmp
fsubrs
rcll
jbe
xor
pop
les
test
ss
add
sti
xor
arpl
mov
inc
sbbb
adc
fsubrl
ds
sbb
test
arpl
gs
cwtl
sub
push
add
arpl
inc
lock
push
aas
fcmovne
push
jae
insb
jne
mov
mov
xor
fwait
mov
int
pop
adc
cmovnp
sub
add
xchg
dec
and
es
add
addr16
pushf
shll
enter
mov
fldcw
icebp
jmp
mov
xchg
add
pop
leave
imul
out
adc
jae
xchg
push
imul
sub
sbb
sub
out
inc
loopne
icebp
add
mov
jmp
or
jae
cmp
ljmp
mov
lret
pop
xor
xlat
sub
mov
jne
mov
or
sbb
lret
push
push
jecxz
inc
jbe
sahf
dec
mov
lret
push
fnstsw
lahf
mov
mov
ss
sub
gs
sbb
inc
adc
or
cmp
into
iret
pop
mov
adc
inc
add
fists
push
or
dec
cmp
or
push
sub
and
lahf
jmp
nop
mov
movsl
xchg
and
xchg
lock
dec
sbbb
iret
jp
inc
mov
into
xor
lods
test
iret
xchg
xchg
fldl
dec
sahf
mov
cmp
push
fs
in
call
popa
push
mov
imul
mov
and
jb
rorb
push
or
icebp
xlat
adc
mov
fs
and
cltd
ds
test
sub
test
jmp
jg
xchg
jns
call
jns
or
pop
adc
fldl
shrl
pop
mov
push
or
jmp
mov
imul
ja
stc
cmp
movsb
popa
lea
mov
jl
repnz
into
dec
shl
lods
adc
test
rcr
cli
outsb
push
lcall
mov
pop
xchg
scas
add
xchg
out
sarb
inc
loopne
loop
add
js
xchg
pop
fcom
inc
movsb
mov
and
fbstp
test
mov
loope
jbe
into
and
xchg
sub
sub
mov
mov
cmpsl
mov
sbb
sub
pop
mov
clc
addr16
push
lahf
mov
out
cmpsl
adc
fistl
shrl
and
psubd
sbbb
cmc
dec
cltd
jle
push
dec
sub
or
xor
xchg
jmp
int3
push
or
int
fisttpll
inc
cmc
daa
outsb
mov
addr16
xor
and
push
sub
xchg
sbb
gs
add
sbb
stc
ret
cmpsl
std
fcom
dec
mov
mov
pop
push
mov
xor
or
mov
fwait
or
push
inc
or
and
xchg
stos
dec
sbb
jb
or
mov
mov
cmp
sbb
lcall
js
lock
stc
sub
inc
clc
jp
lret
nop
cmp
lds
push
push
clc
rcll
out
xchg
ja
push
mov
mov
dec
inc
rolb
add
aad
sub
adcl
jno
inc
sbb
mov
int
xor
test
clc
inc
faddl
push
pop
sbbl
nop
repnz
jno
adc
jb
imul
push
and
fimull
enter
add
xor
push
inc
int3
jle
repnz
push
inc
push
cmp
adc
or
cwtl
sbb
cwtl
push
sbb
jmp
cwtl
fisubrs
ret
sub
data16
shll
cmp
mov
lcall
cmp
xor
out
pop
xor
inc
jle
mov
outsb
lea
mov
out
loopne
adc
fldcw
inc
sti
test
or
jae
into
sti
mov
push
lods
jno
js
dec
mov
ds
aad
push
jnp
test
int3
lahf
inc
pushf
aam
mov
lret
sbb
xor
lahf
repz
pop
push
mov
inc
je
pop
push
aaa
cmc
mov
mov
push
mov
fcoms
or
nop
fldl
add
fcomps
mov
pop
xchg
dec
pop
movsl
cmp
repnz
lea
imul
andb
dec
into
sbb
sbb
and
adc
or
aam
sub
js
jae
lock
test
jnp
dec
daa
xchg
jp
jnp
sti
test
sub
push
repnz
outsb
je
out
ds
cmc
ret
mov
jg
lret
xchg
push
inc
xchg
in
pop
dec
rcrb
dec
call
loop
std
in
jb
cld
mov
sub
mov
lods
fs
lea
sbb
clc
push
cmp
lret
mov
fs
cli
loope
pop
mov
mov
ja
bound
cmp
imul
scas
pop
xor
pop
mov
lods
xor
mov
xor
dec
adc
lds
in
out
adc
in
add
jge
imul
rcr
shl
vunpckhps
test
xchg
push
and
and
xchg
daa
cmp
pop
scas
scas
adc
cmp
ret
pop
outsl
cmp
cmpsl
jp
shl
dec
cmp
sub
or
pop
jnp
clc
jb
jnp
shll
in
sar
mov
out
cmc
repz
sti
les
jbe
and
das
mov
lret
push
or
push
popf
aas
mov
not
dec
popf
mov
xchg
and
fildl
adc
arpl
ljmp
pop
imulb
shr
inc
int3
add
cmp
xchg
adc
or
mov
push
ss
cld
in
ret
lret
repz
pop
add
fdivrp
inc
int3
or
add
int
in
cmp
cld
xchg
dec
mov
addb
add
cmp
sbb
mov
jae
js
icebp
ds
addl
cmpsb
test
or
loop
lock
aad
push
mov
mov
lods
clc
cmp
dec
cwtl
pop
out
mov
jmp
jge
imul
jbe
mov
mov
xor
jecxz
or
incb
lods
fldt
or
cmp
pop
lock
sbb
inc
push
mov
sub
enter
sbb
int
je
movsb
xchg
jo
lods
pop
shll
rcrl
call
les
loopne
adc
sub
xor
sub
mov
jno
cli
mov
mov
mov
sub
fimull
call
jmp
push
xor
mov
mov
or
xchg
ljmp
pop
cmp
inc
dec
mov
sbb
repz
xor
cmp
lods
loope
leave
push
pop
lea
and
dec
mov
je
push
icebp
add
sbb
test
out
inc
xlat
xchg
mov
mov
mov
jp
rcll
in
or
in
pop
mov
popf
xchg
xchg
mov
in
adc
mov
push
pop
dec
lock
js
insb
jnp
lret
in
cmp
test
adc
das
les
sti
mov
das
cld
aad
and
xchg
movsb
shlb
incl
add
cmp
sub
sub
ds
cmc
leave
or
cmp
pop
cmp
jnp
mov
xchg
fwait
mov
mov
sbb
pop
mov
sbbb
ret
push
adc
or
inc
pop
cmpsb
xchg
aam
xor
pushf
sbb
lret
lock
mov
mov
sbb
adc
cmp
pusha
pop
int3
ficoms
sar
xchg
test
cvtps2pd
xchg
add
inc
push
out
sub
scas
cwtl
fnsave
test
arpl
sbbl
aam
xor
lret
mov
test
repnz
popf
loop
outsl
mov
addl
inc
add
js
cwtl
push
dec
fiaddl
repz
out
push
xchg
pop
adc
divl
or
mov
cli
pop
into
dec
mov
bound
aaa
sub
inc
cltd
pop
stos
icebp
outsl
pop
pushf
mov
dec
lods
and
adc
push
idivb
clc
ret
bound
test
out
xor
pop
push
sahf
jge
inc
xchg
xchg
adc
andb
mov
int3
cmc
xchg
enter
hlt
dec
jp
repnz
icebp
mov
stos
xor
and
mov
add
scas
fsubrs
mov
mov
and
out
push
mov
in
jecxz
push
shr
cmp
sub
mov
pop
xchg
gs
popa
rorb
rcrb
loop
adc
daa
mov
jns
xchg
add
push
push
or
cmp
xor
adc
cmp
bound
xlat
sub
mov
icebp
cli
pushfw
or
mov
add
jmp
js
lcall
push
dec
pushl
gs
add
xchg
mov
sbb
movsl
int3
mov
loopne
jb
lahf
inc
pop
loope
subl
sbbl
out
stos
andb
int
xor
inc
nop
jp
adc
pop
test
mov
mov
rolb
inc
jge
es
mov
test
es
mov
mov
fdivr
scas
and
nop
mov
icebp
sbb
scas
decb
or
dec
xchg
cmpl
outsb
xor
or
xchg
cmpb
pop
adcl
inc
bnd
mov
fsubrl
aaa
incb
mov
je
add
popaw
mov
mulb
jne
add
stos
adc
inc
adc
sbb
lahf
fwait
in
lcall
cmc
ja
rorb
cmpsl
cmpsl
jg
enter
call
cmp
mov
insl
xchg
xchg
sub
stos
int3
adc
mov
leave
dec
ror
js
sub
pop
push
pop
ret
cmp
and
cltd
jo
test
xor
lea
adc
xorl
rcll
lods
hlt
sub
int
push
fnstenv
jbe
add
mov
xchg
mov
filds
insl
sahf
insb
push
fdivs
pusha
hlt
ss
sbb
mov
mov
jmp
repnz
cltd
movsl
push
mul
jo
int
or
add
push
ljmp
jg
jns
jne
aam
inc
leave
popf
arpl
adc
clc
cwtl
test
rorb
cli
mov
movsb
push
lea
add
lcall
lods
int3
inc
jno
mov
fldl
fwait
ret
scas
add
rcr
dec
out
jne
sub
cmp
cli
pop
push
or
jns
lret
mov
inc
adc
cmp
mov
jmp
rorl
push
cmp
fistps
lahf
enter
xor
int3
hlt
pusha
loope
fwait
scas
leave
or
scas
enter
in
dec
add
test
mov
addl
dec
scas
jo
xchg
packssdw
sub
sahf
push
push
mov
out
fs
jns
out
pop
push
cmp
or
into
gs
mov
and
lcall
repnz
call
sbb
pop
nop
fnsave
hlt
push
and
ds
enter
jle
in
sar
fidivrl
les
mov
mov
and
and
es
leave
repz
xchg
and
push
pop
hlt
pusha
push
add
subb
and
fsubs
negl
add
mov
mov
add
pop
push
call
cmp
stos
aaa
inc
or
push
pop
fldenv
or
push
cld
sbb
cmpb
data16
mov
loope
jns
push
les
scas
inc
lahf
push
mov
mov
pop
or
mov
pusha
push
pop
pop
je
mov
push
inc
dec
inc
dec
push
jo
mov
lds
push
das
icebp
subl
dec
add
ret
sub
push
aas
lahf
xchg
mov
jg
push
jmp
sahf
pop
repnz
iret
lock
rcll
mov
sub
lahf
or
test
mov
cmp
popa
in
push
mov
jecxz
test
loopne
sahf
xor
lcall
jg
stc
jb
push
inc
pop
test
sbb
loop
shll
push
mov
test
sbb
fdivl
scas
jbe
into
cltd
pop
int3
ret
std
push
mov
xchg
adc
stos
cli
jecxz
lods
nop
mov
repz
xor
adc
or
inc
incl
cmc
xor
sbb
ja
lods
pop
leave
xchg
and
xchg
adc
push
hlt
repz
addr16
xchg
sbb
push
in
add
xorb
dec
jmp
mov
pop
cmpsl
dec
xchg
xchg
sbb
cmc
rol
ret
mov
mov
or
fstl
jmp
dec
xchg
pop
mov
add
int3
cld
das
pop
pop
aam
rcr
cmp
repz
adc
das
xchg
stos
sbb
jae
cs
fnstenv
dec
jns
aas
je
and
add
pop
ja
std
test
aam
and
call
mov
xchg
into
dec
mov
into
inc
fisttpl
sahf
jnp
in
jno
or
dec
ret
cmpsb
add
pushf
push
xchg
inc
pusha
add
cmp
sbb
lea
xor
inc
and
xor
nop
push
loopne
cmp
sub
loopne
add
ljmp
cmp
jns
pop
mov
cld
insb
cli
mov
cs
scas
mov
jl
movsb
ds
cmpsl
mov
xchg
stc
inc
mov
es
xor
sub
mov
mov
add
push
push
in
int
lcall
jnp
jge
ret
call
sub
jmp
cmp
xchg
push
cmc
inc
mov
lea
mov
imul
mov
mov
mov
icebp
push
imul
push
fmuls
dec
pusha
insl
inc
dec
pop
loopne
insb
xchg
jno
shl
add
fisubl
leave
inc
shrb
rcl
mov
or
popa
arpl
jp
jecxz
xor
jno
es
loope
loop
popf
in
inc
xor
nop
pusha
repnz
cmpsl
fcoms
adc
ja
or
inc
stos
adc
pushf
mov
or
inc
pop
repnz
std
aas
cli
inc
dec
mov
xchg
push
ret
outsl
insb
mov
jae
xchg
push
sub
push
shlb
xchg
sub
hlt
lods
sbb
push
movsb
add
cmp
rcrl
shll
sbb
push
sub
push
stos
scas
push
xor
lcall
call
decl
aam
push
cmp
les
push
lds
test
add
mov
mov
subb
lods
add
jns
pop
out
jl
mov
add
dec
mov
into
push
aaa
sub
jp
in
pop
push
gs
cld
add
movsb
jl
push
sbbl
cmpsb
xchg
sbb
cmc
bound
mov
rcrb
xchg
xor
sbb
int
lods
faddl
jp
lcall
cmp
pop
out
inc
test
bound
mov
and
or
stos
mov
ret
xchg
adcl
sbbb
xchg
or
pop
push
stc
in
dec
jmp
imul
into
sarb
ja
mov
mov
cmp
nop
or
mov
cmc
mov
mov
xor
inc
jno
jno
test
dec
push
push
mov
cmp
xchg
sahf
cmp
jge
les
inc
push
mov
sbb
rcrb
shrb
add
pop
push
and
cmp
lods
fwait
push
lea
or
sbb
or
mov
push
pop
sub
cs
pop
lods
out
fs
pop
imul
hlt
inc
pop
dec
adc
jl
sbb
lock
fwait
pop
pop
sti
fs
mov
nop
push
gs
sub
add
jecxz
push
fimull
mov
push
push
adc
mov
ret
pop
movsl
sbb
into
mov
mov
and
jns
les
shlb
jbe
int
mov
pop
xor
xchg
roll
out
shlb
loop
pusha
movsl
xorb
sbbl
mov
mov
inc
push
std
ret
out
or
fistpl
and
push
mov
mov
lock
pop
inc
and
insl
xlat
jecxz
scas
jge
jns
jl
cmp
jbe
mov
mov
inc
stos
cwtl
adc
shlb
jge
jb
sbb
inc
xchg
push
jbe
stos
push
sahf
inc
or
ret
rcl
or
mov
and
push
insl
std
xchg
xor
jmp
enter
push
dec
scas
pop
mov
test
add
xchg
jns
bound
and
push
pop
pop
jg
stos
lea
sbb
mov
mov
xchg
jnp
cwtl
rcll
inc
and
adc
cwtl
sbb
push
fiadds
nop
cmp
dec
xchg
mov
out
sub
mov
sub
xor
mov
andb
xor
cli
xor
dec
jmp
sbb
loop
mov
fdivrs
jne
dec
cmp
out
fstpt
icebp
mov
xchg
xchg
pushf
cmpb
push
outsl
pop
in
pushf
dec
fsubl
sahf
fstpl
jb
in
repz
scas
xorb
pop
jno
xor
xor
mov
loopne
mov
into
jno
mov
inc
mov
les
xor
push
aaa
jno
jecxz
or
js
lret
sti
or
int3
faddl
fs
xor
sbb
je
push
ret
mov
divl
push
jns
mov
xchg
data16
data16
jae
push
add
adc
pusha
je
push
mov
mov
into
stos
lahf
and
and
adc
fcmovu
cmp
into
push
sbb
shr
je
mov
cmp
insl
pop
jecxz
xor
xchg
sub
xlat
outsl
push
and
xchg
xchg
test
roll
jo
sbb
mov
stos
sarb
rorl
mov
fstl
push
pop
addr16
xchg
imul
cs
add
rol
lret
and
cmpsb
add
pushf
or
sbb
test
lret
and
in
add
push
dec
fisubrl
test
flds
gs
scas
aaa
mov
cmp
adc
cmp
rcll
adc
xchg
repnz
ja
iret
lret
adc
add
dec
int
mov
addr16
outsb
pop
cmpsl
mov
in
xchg
mov
cmpl
repz
dec
daa
out
sbb
outsb
sub
fimuls
sbb
push
mov
pop
sbb
xchg
mov
lods
shll
adc
xchg
out
int
dec
jmp
ja
int
loope
repnz
sbb
or
push
mov
and
adc
xchg
xchg
out
xchg
xchg
dec
cmpsl
icebp
call
outsb
mov
lea
push
icebp
mov
mov
push
jmp
pop
adc
push
push
aas
fldl
insl
nop
inc
loope
outsl
das
js
mov
dec
push
sbb
jo
push
sahf
fcompl
and
jnp
mov
out
inc
xchg
pop
jp
cmp
aaa
dec
sbb
test
cmc
imul
mov
mov
mov
xor
lods
nop
incl
sbb
adc
outsl
das
cwtl
dec
nop
out
lods
push
and
lret
add
jge
mov
popa
jp
mov
or
mov
or
mov
mov
or
inc
js
fcomps
mov
lods
clc
das
movsl
push
orb
mov
push
mov
ljmp
test
les
or
das
jno
cmp
adc
mov
and
mov
sub
lahf
pop
lds
outsl
pop
push
dec
in
test
cmc
popf
and
xlat
out
cwtl
add
mov
dec
push
cmp
loopne
leave
cltd
inc
mov
scas
outsb
rcl
aas
sbb
in
xor
popf
jp
mov
ja
repnz
mov
mov
clc
ss
xor
fs
or
shl
nop
mov
and
sahf
dec
in
pop
pop
xchg
ret
pshufw
outsb
or
sbb
out
sub
enter
daa
mov
adc
fadd
movsb
mov
das
popa
scas
adc
pushf
and
mov
inc
sub
imul
jne
cmpsl
mov
daa
inc
pusha
push
add
lahf
and
sub
mov
adc
jmp
sub
nop
or
cmp
jg
roll
xor
lcall
repnz
xchg
mov
repz
jno
iret
inc
ret
lods
repz
pushf
sbb
repz
and
outsb
les
jae
mov
lds
cmpl
out
fs
cwtl
push
and
fisubl
mov
jg
loope
or
jp
jb
mov
arpl
push
xchg
xor
movsb
test
fistpll
lret
incl
inc
cs
mov
inc
fs
inc
hlt
mov
test
xchg
sahf
ja
sbb
add
test
adc
sbb
ss
jbe
icebp
push
fwait
dec
pushf
push
pop
imul
js
movsb
mov
mov
mov
jg
or
lahf
inc
adc
loopne
pop
mov
pushl
mov
pop
mov
mov
mov
hlt
fsubl
sbb
jo
fisubl
pusha
iret
fisttps
cwtl
bound
mov
imul
loope
or
fimull
push
stos
and
pop
xchg
dec
lret
andb
fcmovb
xor
or
dec
aam
pusha
hlt
xchg
divb
mov
aad
incl
jecxz
repnz
bnd
dec
insl
add
jmp
adc
in
add
ds
cmpsl
mov
das
push
pop
jbe
jmp
mov
fs
sub
repz
jo
popa
pop
ljmp
adc
cwtl
push
imul
stos
imulb
and
or
decb
xlat
jge
mov
sbb
xchg
mov
mov
dec
pop
sub
sub
std
bound
sub
test
sbb
jb
iret
ficoms
inc
jae
cmpb
cmp
pop
outsl
sbb
andb
stos
cltd
xor
loop
nop
xchg
xchg
push
mov
loop
jge
sub
cmp
idivb
pushl
mov
xchg
jnp
pop
sahf
mov
add
aam
dec
mov
and
add
and
jno
pop
and
xchg
cltd
mov
add
andl
xchg
cwtl
gs
je
mov
xchg
mov
test
sub
jg
in
mov
sti
fisubrs
xchg
outsb
cmpsl
xor
dec
ds
xor
push
mov
in
les
lret
pop
dec
lds
fsubs
sbb
hlt
outsl
rcrb
pop
rcll
push
adc
push
repnz
cmp
test
icebp
add
mov
sbb
aas
mov
jmp
cmp
cli
stos
lcall
fimull
lock
jle
sbb
cmp
fildl
fwait
lret
test
add
aam
iret
push
adc
cmpsl
mov
outsl
mov
shr
push
jmp
std
rcrl
imul
bnd
mov
lcall
add
shll
mov
xor
mov
lods
jo
stc
loopne
aas
mov
lea
les
mov
mov
and
ds
mov
cmpsl
jae
xlat
jge
xor
jnp
in
stc
int3
xchg
stos
jecxz
sbb
mov
sub
cwtl
movsl
fdivs
movsb
inc
shll
jbe
divb
es
dec
test
aaa
and
stos
jmp
inc
inc
push
das
pushf
es
mov
mov
mov
ret
jp
out
stc
je
inc
insb
dec
movsl
inc
sub
mov
call
nop
test
xor
popl
ss
add
addb
leave
mov
lea
in
ret
jne
inc
call
mov
inc
aas
xchg
mov
inc
xor
popf
jp
jmp
fildll
movl
out
dec
mov
xor
mov
hlt
mov
outsb
out
repnz
jno
mov
loope
xchg
mov
cwtl
xor
aad
loopne
sti
frstor
int
test
add
xchg
notl
imul
cmpsl
pop
scas
push
or
xchg
lahf
sub
nop
dec
aam
fnstcw
or
cmpsl
add
and
enter
cmp
imul
jp
pop
repz
adc
divb
outsb
pushf
mov
cmp
adc
hlt
lret
xor
popl
mov
push
lret
popa
mov
sbb
rolb
inc
es
ds
lock
push
jl
sbb
xor
dec
notb
mov
stos
xchg
push
mov
inc
repnz
xor
icebp
xlat
bnd
out
test
out
or
and
fsubrl
add
mov
lcall
push
dec
fistps
mov
ret
lods
sbbb
cmp
dec
movsl
push
jo
mov
push
clc
jnp
pop
jp
das
pop
pusha
clc
mulb
stos
popf
or
das
je
stos
sarl
mov
sar
movsl
or
lret
in
inc
inc
aas
xchg
mov
test
daa
sbb
mov
jnp
xor
lods
stc
mov
and
jle
in
push
inc
adc
iret
sub
lret
repnz
pop
mov
aaa
adc
sbb
jge
dec
cwtl
ficoml
mov
push
sbb
fldl
insb
push
sub
cmc
lds
dec
push
aam
and
les
mov
bound
out
pop
pop
push
ss
lret
call
jmp
adc
mov
pop
loope
xor
in
jmp
push
add
xorb
jle
mov
ret
rcrb
mov
sti
and
xchg
push
lods
dec
loope
out
inc
in
ret
popf
add
loope
inc
fdivr
sbb
andb
aas
imul
popa
outsl
xchg
mov
xor
inc
pop
mov
sub
xor
sbb
sub
pop
or
dec
push
add
cmc
mov
mov
xor
imul
pop
adc
out
push
mov
into
addr16
test
mov
test
xchg
mov
lahf
push
and
cmpl
lea
arpl
inc
js
sahf
gs
xchg
rcrb
lret
add
inc
dec
xor
xor
loopne
jo
and
int
out
subl
mov
arpl
into
inc
inc
xor
dec
cmp
in
jp
sbb
mov
inc
ror
dec
addb
data16
cmpb
dec
sbb
test
mov
movsb
mov
ljmp
add
mov
add
push
out
rorl
cld
sub
inc
or
sbb
sbb
lock
popf
arpl
loopne
out
mov
dec
or
mov
mov
cli
pop
lret
out
cmp
push
add
cwtl
dec
ja
cmp
push
out
jns
sub
xlat
inc
mov
xchg
xchg
inc
push
or
gs
iret
add
fcmovnb
fistl
pop
fsubp
js
xchg
dec
repz
notb
imul
mov
incb
adc
mov
push
rorl
cmp
or
sub
pushf
dec
xor
out
push
ss
aad
rolb
fmuls
stc
adc
mov
and
inc
push
mov
lret
or
pusha
mov
add
push
adc
inc
ret
call
mov
add
xor
imul
ss
lahf
or
insb
lock
sbb
add
adc
lods
mov
adc
mov
out
cmp
iret
lods
mov
fs
xchg
je
push
movsb
push
ret
sub
mov
lods
pop
mov
fildl
ret
xchg
out
jnp
xor
movsb
nop
add
mov
leave
sub
out
gs
aaa
stos
push
push
ja
adc
cmpsb
stos
lea
and
dec
pop
jge
sub
or
inc
fisubl
sbb
gs
outsl
out
scas
shrl
imul
fiaddl
je
out
pop
scas
or
xor
insb
in
add
adc
scas
testb
jmp
pop
stos
cmpsl
rolb
insl
ret
add
int3
or
stc
sbb
fmull
js
cmpsb
xor
push
repnz
and
xchg
mov
into
das
cmp
or
xchg
or
inc
mov
sti
or
push
pushf
imull
and
push
jmp
out
outsb
in
out
or
int3
adc
lret
mov
or
push
inc
pushf
divl
adc
jns
movsb
or
or
fs
lods
mov
and
fs
and
mov
loopne
cmp
cmc
pusha
imul
cmpb
pusha
js
cs
call
push
sti
jno
aam
mov
shll
test
mov
repnz
fwait
xchg
pmulhw
pop
add
mov
cli
xorb
sbbb
sub
subl
cmp
int
imul
int
mov
sub
les
es
xchg
fimull
pop
xchg
dec
jnp
lcall
out
inc
push
and
and
xchg
shl
fidivl
cmp
sbb
fdiv
xchg
adc
mov
jle
dec
aam
cmp
jl
cwtl
pop
mov
loope
pop
fnstsw
lret
xchg
aas
mov
sub
add
mov
in
xchg
mov
mov
fcoms
test
aas
dec
add
jmp
and
inc
aas
roll
in
test
jo
lret
inc
push
je
and
sbb
daa
sahf
repnz
xlat
mov
push
pusha
call
stos
leave
xlat
imul
inc
pop
fadds
xlat
gs
add
aas
sub
xchg
mov
or
jmp
dec
dec
adc
dec
outsl
stos
mov
jnp
dec
call
sbb
adc
aaa
fwait
add
faddl
inc
mov
or
mov
pop
sub
push
mov
sbb
add
cmpb
mov
jns
sbb
les
mov
clc
jmp
add
dec
sahf
mov
jo
push
or
sub
mov
sbb
lret
pop
mov
dec
fisttpll
gs
mov
or
sub
add
pop
inc
pop
or
pushf
push
or
lcall
inc
and
pushf
sub
mov
mov
mov
in
notl
or
out
hlt
lret
pusha
and
sarb
lock
cld
in
sti
or
sbb
adc
fisttps
dec
xchg
testl
xorb
scas
or
fwait
sbb
inc
and
test
cmp
in
push
cmpsb
jbe
mov
dec
cmp
cwtl
adc
dec
push
ds
addr16
mov
push
add
gs
bound
test
out
xor
loop
int
sbb
jle
inc
jns
sbb
and
in
and
jo
sub
add
inc
icebp
sarb
fucomp
jmp
dec
xor
lods
arpl
call
in
push
insl
lret
pop
sub
idivb
xchg
or
jmp
push
push
or
aad
jmp
or
xor
and
outsb
jne
lods
cmc
cwtl
aas
cwtl
dec
ds
call
test
jbe
lods
out
pop
test
ficoml
mov
lret
xchg
loopne
pop
sub
cmp
push
negb
cmp
int3
test
test
mov
fistl
fs
scas
mov
lret
mov
mov
in
push
movsl
xor
push
add
inc
sahf
jmp
fwait
push
scas
ljmp
xor
lret
data16
unpckhps
test
sahf
and
rolb
sbb
xchg
jl
lods
inc
andl
ja
adc
enter
je
or
rclb
nop
cmpb
and
mov
pop
inc
out
pop
cwtl
test
and
cmc
ficoml
ljmp
pop
jb
aas
push
mov
adc
jp
add
movsb
shl
add
adc
mov
aaa
xor
mov
jmp
cmp
xor
pop
and
outsl
sbb
cmp
pop
or
adc
mov
pop
shlb
xor
test
jne
inc
mov
js
fbstp
test
pop
dec
and
andl
push
movsb
test
pop
jns
bnd
outsb
ds
push
and
dec
repz
ret
dec
out
sub
or
bnd
ret
aas
add
ja
mov
aas
stc
rcr
pushl
fwait
adc
mov
mov
push
jmp
aam
xchg
jge
lret
or
int
cmp
push
mov
cmpsl
lret
mov
cltd
dec
and
xchg
scas
in
dec
in
cmp
cmc
jae
cli
lret
pop
mov
inc
mov
aam
cmpsl
inc
mov
mov
add
mov
sahf
int3
adc
mov
sar
mov
rcr
cwtl
mov
and
lds
fidivl
jnp
mov
pop
test
add
ja
xor
cld
imul
push
shl
mov
repz
add
fmul
sbb
pushf
xchg
sbb
pop
in
loope
dec
xchg
mov
fcmovnbe
icebp
sarl
filds
adc
jge
dec
sbb
cmp
mov
fiaddl
cli
add
gs
cmp
cmp
loopne
add
pop
or
aam
mov
push
mov
xor
movsb
xchg
test
inc
hlt
dec
mov
jecxz
cmp
xchg
mov
or
jmp
sti
inc
add
sti
iret
add
ss
leave
pop
jnp
lods
mov
push
xchg
push
in
pop
data16
mov
sbb
pop
cmp
jbe
jnp
sub
sbb
test
in
std
rorb
pop
out
adc
repnz
and
insb
and
and
outsl
push
rcl
pushf
fistl
ljmp
js
setnp
movhps
cs
out
sub
xchg
out
add
jp
cmp
aaa
mov
and
jl
or
sbb
jp
cmpsb
adc
les
jge
pop
frstor
add
mov
iret
iret
test
xchg
leave
and
ficoml
mov
hlt
cmpsb
lret
dec
enter
mov
lcall
mov
out
dec
and
dec
sbb
cmp
inc
jl
and
rcll
lock
cmp
iret
sbb
popa
lahf
sarl
lea
and
cmp
cwtl
test
addb
mov
std
xchg
add
lock
cltd
dec
popa
push
xchg
stc
bound
es
orb
adc
pop
adc
cmpsl
packsswb
pop
pop
xor
imul
imul
mov
in
rorl
pop
int
mov
sbb
data16
lcall
fyl2xp1
stos
lods
mov
pusha
test
gs
js
in
fiaddl
and
push
lds
out
repz
out
mov
cli
es
push
andb
test
stos
sbb
jmp
mov
into
adc
sub
pop
cli
inc
pop
jmpw
push
cmp
in
test
ror
inc
sub
jp
sbb
or
jo
mov
mov
pop
pop
xchg
push
out
fneni(8087
test
sub
inc
mov
jg
add
mov
arpl
das
xor
push
and
pop
sbb
mov
or
mov
sbb
cmpsb
leave
mov
xor
aaa
lret
aam
loope
loope
mov
jl
jb
fsubrp
test
enter
scas
gs
test
jl
ds
pop
mov
mov
arpl
into
outsb
and
cmc
adcb
jnp
pop
bound
ss
loop
or
stos
ret
pop
push
sub
cmpsl
mov
inc
outsb
stos
mov
cmpsb
xor
std
scas
cmpsl
popa
pop
mov
pop
lret
lods
loop
sub
jo
mov
rcrl
lock
sub
popa
or
gs
inc
push
mov
and
mov
cmp
sahf
sbb
sbb
test
xor
cmc
sbb
stos
inc
mov
lret
cmp
cmpsb
push
and
leave
loopne
pop
popa
xor
fs
or
and
sbb
mov
and
nop
mov
sub
imulb
xor
test
test
ljmp
jp
dec
push
lret
icebp
nop
ds
mov
cli
ret
jne
mov
inc
pop
jecxz
int
pop
stos
loop
push
pop
fbld
das
pop
stos
hlt
mov
mov
add
ja
fadds
mov
push
lcall
inc
lods
dec
jmp
mov
or
mov
xor
inc
mov
pop
movsb
scas
pop
cmp
adc
icebp
adc
sbb
rcrl
sbbb
push
sarb
jbe
lret
cmp
hlt
lds
dec
xorl
mov
push
and
repz
pop
repnz
insl
test
lods
dec
test
je
push
lahf
mov
pusha
or
lcall
aam
jmp
fbstp
sbb
xchg
mov
pop
sbb
xor
push
jo
sbb
pop
movsb
inc
scas
sbb
xchg
out
inc
cmp
or
inc
fnstsw
cmc
imul
into
repnz
mov
adc
push
and
hlt
ja
fcmovbe
cmp
or
xchg
or
imul
mov
pop
xor
lds
addr16
insl
lret
rorb
ficomps
add
loop
js
sti
popl
jne
repz
imul
mov
fimull
jle
add
mov
inc
jo
fwait
enter
push
addl
je
jle
jae
in
repz
cmp
mov
lret
in
add
stos
xor
clc
pop
ja
pop
xor
ror
mov
gs
test
dec
or
fdivrs
add
sti
mov
pop
and
jge
push
orb
pop
jge
pop
jg
pop
test
mov
xor
lahf
aas
or
cmpb
negl
jns
pushf
lods
lea
out
sub
lds
stos
jbe
or
rcll
fnstenv
dec
fs
ret
push
xor
mov
sbb
data16
test
mov
repz
loop
data16
stos
pop
push
das
jp
dec
xor
daa
js
cmpsl
mov
xor
or
adc
rol
push
mov
or
push
lods
jle
xor
or
rorl
dec
fisubrl
movsb
jecxz
das
icebp
inc
pop
sarb
stos
adc
xor
adc
scas
mov
inc
mov
out
push
dec
mul
cwtl
loopne
and
and
xchg
push
in
add
mov
loopne
rorl
lods
scas
inc
add
out
mov
pusha
pop
stos
xor
cmp
test
sub
mov
add
insl
ja
add
cmp
jecxz
mov
dec
lods
or
test
cld
inc
push
mov
hlt
and
loope
cmp
sahf
popf
push
mov
imul
outsb
arpl
movsb
arpl
jl
push
rcl
or
jo
jb
and
popf
inc
out
leave
jmp
movsl
imul
andb
cli
ror
inc
fstpt
insb
popa
orl
cld
scas
xlat
jmp
mov
sbb
jp
jl
pop
mov
add
les
ret
mov
lret
int3
ret
push
movsl
shl
test
mov
xorb
sub
push
test
mov
push
sbb
test
jnp
pop
mov
add
push
jl
sbb
add
call
or
call
aaa
shlb
jge
das
shr
loopne
and
addl
cmc
lret
sbb
out
add
mov
ss
jle
and
xchg
sbb
jno
leave
clc
movsl
and
outsw
divb
cmpl
shll
and
inc
lret
sti
movsl
out
stos
call
scas
sub
dec
test
dec
pop
xor
popf
fdivrl
pop
jbe
mov
dec
jbe
jns
pop
dec
xor
pop
mov
sti
pop
xor
popf
xor
in
mov
sub
les
sbb
aad
xchg
pushf
push
das
pop
cmpsl
cmp
add
adc
out
in
xchg
and
mov
jecxz
pop
fstpt
jb
lea
push
or
outsl
sub
out
lret
iret
adc
sub
push
cmp
jo
and
jg
rorl
out
pop
dec
adcb
add
pop
cmp
mov
mov
call
or
fidivs
repnz
loopne
push
ret
jl
pop
decb
mov
pop
inc
fs
push
popa
mov
cmp
mov
jecxz
pop
subb
std
fdecstp
into
and
sti
in
add
enter
mov
imul
mov
je
popa
dec
shlb
fs
or
push
fcomip
push
stc
cmp
adc
lcall
sbbb
outsl
xchg
cmp
xlat
inc
cmp
sub
gs
loopne
outsl
xor
xchg
inc
rolb
dec
jge
xchg
push
or
sub
pop
test
fwait
mov
mull
sub
stc
lret
das
push
int
mov
cmpsl
jnp
idivl
push
sbb
int3
dec
stos
pop
xchg
adc
stos
ror
shr
jle
cmp
stc
lahf
stos
call
mov
sbb
out
andl
mov
add
dec
call
and
repnz
loopne
mov
rcrb
sub
sbb
inc
les
imul
sub
and
lcallw
pusha
mov
sbb
and
sbb
inc
jmp
xchg
push
push
repz
addr16
aam
dec
jae
cmp
add
inc
lods
inc
test
jo
outsl
test
cmpsl
jae
aam
sub
fwait
leave
nop
ss
loopne
cli
scas
lret
aad
sub
negl
mov
stc
or
dec
int
cmpsl
jp
mov
push
mov
inc
or
sub
sahf
das
jmp
inc
ret
mov
adcb
cli
lods
out
xchg
adc
sbb
and
rcll
and
mov
pop
fidivrs
test
imul
cmp
jle
clc
mov
fwait
mov
ret
fcomps
xor
cmpb
mov
ja
add
cmp
mov
or
enter
mov
mov
decl
sbb
hlt
mov
pushf
push
fcmovb
push
dec
jecxz
jp
popa
mov
not
movsl
mov
mov
dec
or
sbbb
sub
dec
adc
cwtl
adc
cmp
pop
cld
cs
lods
pop
mov
add
xchg
mov
jb
mov
sub
jmp
jno
sbb
mov
stos
sbb
movsb
adc
flds
mov
in
cmovb
pushw
sbb
lods
lods
jmp
inc
loop
je
dec
push
dec
inc
repnz
mov
xchg
push
xor
shr
fld
mov
dec
popa
cmpsb
mov
inc
ds
ds
push
fidivrl
addb
xchg
pop
push
pop
lahf
lds
in
xchg
fstpt
jnp
inc
addr16
imul
iret
addl
js
mov
push
aam
xlat
and
rorl
push
outsb
fbstp
cmc
or
jb
and
fcmovnu
xchg
mov
mov
xor
inc
adc
inc
fdivl
xchg
icebp
aam
cmp
mov
push
add
fnstcw
sti
cltd
rcl
movsb
fisttps
stos
xor
cwtl
mov
add
add
ljmp
test
cmp
mov
mov
inc
jecxz
mov
lahf
arpl
arpl
notb
or
cmp
mov
mov
xchg
in
cltd
dec
hlt
push
scas
mov
xlat
mov
xor
test
push
push
imulb
out
or
loope
hlt
or
jb
jne
and
cmp
or
pusha
jns
out
pop
mov
jbe
out
and
js
pop
enter
test
in
int3
or
sahf
xor
shl
inc
jo
fwait
xor
int
xlat
outsl
and
pop
jo
push
cmpb
imulb
xor
enter
xor
pop
insb
jge
mov
cmp
pusha
jne
push
push
jbe
mov
sahf
icebp
inc
add
mov
into
pop
loopne
push
rcrl
push
cltd
push
xchg
xchg
mov
xchg
xchg
pop
sub
or
movsl
mov
sahf
cld
inc
ss
in
cs
out
lret
xor
jne
adc
sbb
stc
icebp
add
push
cmp
cmp
push
cmc
scas
ret
lods
xor
push
das
insl
enter
xlat
jmp
mov
rcrb
mov
xchg
mov
jecxz
jl
lods
xor
cmpsb
nop
mov
or
outsl
loopne
sub
int3
add
xchg
ret
lgs
jg
add
and
add
or
or
leave
loope
dec
jns
sbb
mov
adc
mov
cmp
sahf
xor
xlat
daa
rcll
add
and
dec
test
ret
adcl
movb
dec
arpl
aas
scas
push
xchg
leave
mov
lret
xchg
xchg
adc
popa
das
bound
jb
outsl
xor
and
icebp
push
adc
jmp
lcall
cmp
cs
and
sarb
dec
orl
mov
ficomps
into
jecxz
add
insl
test
icebp
dec
push
mov
jmp
sahf
cmp
ret
jb
xor
add
jg
out
lock
ret
repnz
loop
lds
cmpsl
clc
fnstcw
cmp
xor
fs
insb
enter
cli
jp
js
jge
scas
xchg
mov
arpl
mov
es
push
in
pop
xor
mov
pop
stos
in
adc
pop
nop
lret
or
inc
ja
sub
fldenv
and
pop
lods
pop
xchg
sub
ds
cmp
mov
jbe
jnp
test
push
cmp
mov
add
js
pushf
mov
xchg
xlat
movb
mov
cmpsb
adc
xchg
cmc
into
aas
xor
pusha
pushf
pop
inc
adc
add
divl
jecxz
lock
stos
outsl
adc
jbe
leave
dec
out
enter
insl
cmp
popf
sbb
fmuls
scas
lds
loop
test
cli
and
jno
scas
cwtl
scas
mov
push
push
insl
xchg
je
push
push
jle
fs
insb
xchg
lods
sahf
mov
push
mov
sub
mov
sbb
xchg
mov
cltd
inc
pop
out
fstps
fsubl
lods
add
cmpsl
cmp
stos
out
jo
gs
sbb
sub
adc
in
lods
jmp
mov
movsb
repnz
or
mov
out
imul
test
hlt
lcall
fcomps
push
push
in
mov
outsl
cmpb
push
mov
outsb
movsb
das
sub
xor
xor
ret
xor
pushf
add
inc
mov
lods
jmp
sbb
or
mov
push
inc
out
aaa
lea
jae
jno
mov
and
sbb
fmul
xchg
mov
insl
mov
pop
int3
movsl
cli
mov
sbb
das
inc
inc
dec
push
or
cli
push
push
jne
xchg
insb
mov
mov
aas
mov
mov
xchg
mov
bnd
pop
test
xlat
cmpl
not
cld
ss
in
jp
push
inc
xchg
inc
orb
sbb
mov
cmp
sub
gs
cmpsb
into
add
mov
xor
mov
mov
daa
imul
inc
sub
je
xor
pusha
or
dec
mov
icebp
rcr
ljmp
lahf
jns
mov
jl
mov
inc
notb
scas
mov
ja
daa
pop
and
inc
repnz
dec
add
imul
js
sbb
xchg
sub
repnz
imul
aaa
loopne
faddl
addr16
or
mov
loopne
sub
cmp
mov
jl
out
ljmp
cli
sbb
pop
push
mov
push
xorl
rorl
testl
mov
mov
mov
roll
addb
xchg
scas
push
mov
push
xchg
sarb
dec
push
xchg
xlat
push
aam
push
sbb
lahf
push
rclb
ds
arpl
rcll
rcrb
shll
gs
lds
aaa
not
cmovb
and
dec
dec
sub
ja
xor
lds
mov
xor
cli
push
push
and
mov
and
sub
and
push
sahf
lahf
aas
leave
addr16
push
cmpsl
ror
sub
xchg
incl
stc
into
lcall
cmc
lock
lret
pop
sub
fs
repz
sub
inc
push
add
pop
in
pop
fdivrs
xchg
add
cltd
adc
sub
sbb
xchg
mov
int
ja
xchg
jnp
inc
sbb
test
imul
cmp
pop
mov
icebp
repz
out
pop
test
testb
out
xor
fidivs
outsb
and
es
fldenv
mov
xchg
mull
pop
jp
push
or
cmpl
fs
sarb
iret
adc
mov
jb
jg
xor
in
rol
adc
or
xor
mov
imul
fcomi
dec
stos
out
xor
xor
bound
push
or
push
rcll
dec
les
out
or
and
out
cs
push
ss
pop
add
in
cmp
insl
sub
rolb
into
iret
lret
sbb
inc
aas
cltd
sbb
xchg
insb
pop
adc
rorb
pop
sbb
push
pop
adc
jmp
sbb
fidivl
adc
shll
insb
push
pop
stos
cld
mov
xor
push
inc
jle
ror
push
push
mov
clc
fwait
iret
out
inc
or
pop
cmpl
sbb
shl
adc
push
sbb
add
imul
leave
testb
imul
xchg
dec
push
cmp
int3
das
loop
in
jecxz
jne
movsl
push
xchg
add
iret
cs
aas
in
mov
mov
jbe
and
sub
push
add
cmp
scas
xchg
stc
call
cmc
int
jbe
jl,pn
mov
mov
sub
fiadds
adc
daa
add
sahf
adc
jns
out
mov
test
mov
insl
scas
mov
mov
int3
ret
ljmp
adc
add
add
dec
stc
inc
add
mov
shrb
adc
cld
xor
push
mov
fcmovnb
daa
cmp
stos
push
sub
fiadds
mov
aam
pushl
scas
aaa
inc
test
adc
jg
or
add
ficoml
push
je
jmp
and
scas
es
imull
scas
mov
imulb
rolb
rorl
hlt
in
mov
xchg
mov
inc
jae
and
adc
xor
push
xorl
xor
fs
dec
lret
xor
inc
xor
or
push
rcl
sti
dec
adc
jne
dec
pop
std
xchg
add
stos
sub
imul
mov
jo
aas
xor
adc
jae
mov
mov
jecxz
cwtl
pop
push
mov
xchg
dec
push
andl
fisubrl
jge
pop
inc
je
das
clc
pop
aaa
scas
xchg
rorb
push
push
mov
movsb
xchg
dec
dec
nop
or
mov
jmp
sub
jecxz
popf
pcmpeqb
mov
add
mov
jl
inc
hlt
addr16
sub
popf
movsl
incl
sti
xor
fidivrs
aad
addr16
iret
sbb
ss
sti
pop
or
add
xchg
jns
cmp
jae
repnz
adc
dec
mov
popf
jg
inc
jp
xchg
xor
push
pushf
movsb
sub
lret
std
push
imul
sbb
fimull
out
cmp
cmc
pusha
and
into
into
pop
jg
aad
fcmovu
dec
xchg
ret
int
sbb
jg
aas
ret
inc
inc
push
add
ljmp
adc
push
mov
and
pop
xchg
leave
xchg
nop
test
divl
subb
iret
push
lock
rclb
jno
mov
dec
mov
hlt
sub
mov
iret
jecxz
fwait
std
inc
test
inc
jmp
xlat
mov
loop
xor
xor
xor
lcall
push
popf
int3
fwait
jnp
fneni(8087
lds
test
pop
addl
inc
mov
xchg
stc
cmp
lock
mov
and
xchg
ficoml
rorl
sbb
lds
out
insb
xor
push
outsb
inc
or
xor
or
mov
out
inc
fisubrl
fstps
pop
ret
insb
pop
loop
ret
orb
loope
mov
cld
jbe
rolb
dec
cmpsl
jne
dec
out
icebp
mov
cmp
out
stos
xor
push
or
iret
and
mov
pop
xlat
subl
pop
orl
push
adc
nop
push
pusha
add
jecxz
fbstp
bound
or
adc
sahf
add
leave
aaa
orb
vandps
sbb
sbb
mov
cmpsl
bound
popf
dec
popa
cltd
stc
jle
repnz
in
cmpsb
fimull
mov
ljmp
xlat
insl
andl
leave
dec
add
in
fisttps
push
cmc
scas
push
mov
shlb
cmp
jmp
aaa
insl
sbb
ljmp
shll
mov
add
add
addb
or
lcall
ret
mov
xchg
inc
shlb
xor
push
jno
mov
jnp
fcomip
mov
xchg
outsl
sahf
jno
push
push
dec
sub
shll
aas
push
xchg
out
add
mul
lock
adc
out
dec
lcall
add
mov
sbb
add
adc
sbb
loope
out
out
cmp
add
sbb
xor
adc
mov
sti
outsb
mov
and
inc
cltd
cmp
xchg
test
mov
jnp
fistl
lods
jno
push
out
jle
jmp
loopne
aas
add
sbb
mov
push
stos
mov
clc
leave
int3
cmp
faddl
adc
dec
cli
rolb
or
mov
aas
inc
cmp
pushf
pop
dec
lods
aam
mov
and
xchg
mov
test
lock
fwait
ds
xor
sbb
je
aaa
fwait
mov
jbe
arpl
ret
jl
mov
les
mov
xlat
ficomps
jl
sbb
mov
mov
xchg
orb
push
push
mov
mov
xchg
ret
sub
in
aaa
jns
adc
es
jno
dec
xchg
push
enter
inc
dec
mov
scas
mov
fldt
out
mov
push
and
popa
lock
out
jns
pop
push
gs
push
fldenv
hlt
push
jo
xchg
ljmp
dec
imul
lret
dec
gs
cmp
jns
sbb
xchg
sub
psubw
cmpsb
int
mov
xor
mov
or
inc
add
aas
push
and
test
hlt
dec
push
jmp
lret
sbb
mov
pop
mov
jbe
push
jns
and
decl
add
sbb
push
xorl
das
mov
scas
in
lods
jl
vpminub
das
fwait
arpl
push
repz
lcall
test
sub
xor
call
sarl
xor
outsl
aam
cs
mov
pop
push
jns
popfw
push
roll
orb
mov
mov
mov
push
lds
add
and
test
testb
ja
mov
call
subb
cmpsl
aam
xchg
lahf
lcall
pop
jle
dec
mov
xchg
test
addl
cld
mov
push
xor
pop
mov
push
sub
sbb
cwtl
cmp
and
addr16
stos
xchg
out
jmp
fsubl
lea
lods
mov
nop
insb
jge
mov
sysexit
cmp
push
adc
fcomi
in
fimuls
enter
xor
scas
xor
fcoml
add
add
adc
adc
js
stos
lcall
cmp
pop
push
nop
cmp
ljmp
jmp
push
push
outsl
sub
mov
into
icebp
ljmp
push
mov
dec
jle
mov
leave
ljmp
push
rcrl
daa
test
push
mov
out
pop
imul
daa
jb
adc
lret
xlat
push
popf
mov
fstpl
addr16
shrb
loope
dec
cbtw
clc
push
pop
repz
mov
add
cmp
rcll
mov
imul
mov
adc
push
xchg
push
cwtl
push
ret
gs
mov
adc
inc
mov
movsb
lds
fdivl
inc
out
das
mov
cmpsb
inc
test
inc
pop
pop
push
xchg
insb
cld
pop
mov
dec
adc
fcoms
cld
out
cmp
subl
jne
cwtl
mov
mov
mov
fidivl
mov
mov
or
mov
fdivrl
out
sbb
jno
out
icebp
and
lea
movsb
xchg
cld
cld
imul
fldl
nop
movsb
loopne
sub
jge
adcl
push
inc
sub
callw
mov
jb
push
xor
mov
xchg
imul
repz
xor
fs
loop
addr16
sbb
fnstcw
nop
lea
fdivrs
mov
enter
mov
ret
jae
scas
ja
push
mov
cmp
popa
cmp
or
sbb
repz
jne
cltd
sti
outsl
pop
cmp
and
mov
cwtl
ja
xchg
es
add
inc
int
orb
mov
lds
mov
lea
dec
cmp
xor
add
testb
int3
dec
adc
sub
cs
and
xorb
cmp
xchg
scas
int3
js
cld
mov
scas
jo
fldt
inc
jne
jne
push
lods
loope
mov
mov
outsb
shll
dec
mov
add
cli
push
jb
cmp
add
out
push
add
js
cmp
cmpsb
xlat
hlt
shr
pop
ljmp
jns
dec
test
and
pop
xor
dec
push
mov
jns
addl
sub
xchg
sarl
push
pusha
les
jmp
ds
cld
dec
punpckhwd
sub
mov
imul
rcrb
jecxz
outsl
xor
je
mov
fwait
mov
jne
inc
or
dec
jle
push
or
scas
xchg
or
pop
dec
aad
ret
jmp
sbb
dec
pop
mov
lahf
push
cmpsb
ficompl
lds
jne
test
xchg
jno
popa
aas
xchg
xchg
and
mov
mov
push
leave
test
dec
scas
out
inc
xlat
xchg
or
xchg
pop
adc
add
xor
pop
dec
outsl
aad
fdivs
adc
add
je
or
or
jl
jle
lret
xchg
or
iret
aaa
ljmp
push
test
lods
cmc
mov
and
xlat
call
dec
push
and
movsl
lret
inc
fdivrl
lods
mov
mov
jecxz
xor
fnstcw
jg
in
push
inc
sub
and
adc
and
test
sbb
test
test
stos
cltd
jg
hlt
mov
mov
xor
cmp
pop
adc
pop
or
outsl
fistpl
xor
jecxz
call
sub
dec
push
push
clc
cltd
fwait
imul
sub
mov
imul
stc
push
pusha
mov
inc
mov
cmp
scas
popa
popf
lea
inc
lock
mov
mov
out
pop
mov
xor
mov
xchg
jno
adc
ja
out
dec
jmp
lahf
xchg
dec
cltd
repz
cmp
mov
in
daa
jge
ss
add
mov
cmp
inc
lcall
sti
in
sti
imul
cltd
fldenv
out
mov
lcall
iret
adc
mov
lcall
cmc
into
xchg
push
jbe
xor
sub
mov
dec
mov
jecxz
push
call
movsb
and
jle
mov
pop
into
and
pop
outsl
ds
and
aad
cmp
xchg
sub
bound
shll
sahf
in
jno
jnp
sbb
xor
add
mov
or
mov
cmpsl
cmp
enter
imul
jle
adc
mov
jnp
pop
sbb
adc
adc
cmpsb
icebp
bound
cwtl
cmp
or
jne
jg
int
add
jne
vfrczpd
call
xlat
and
hlt
sub
cld
das
lock
pop
jecxz
jge
push
test
inc
addb
arpl
mov
cwtl
outsl
loope
ja
push
lds
or
ror
sbb
adc
xchg
dec
jge
cmpb
and
aad
loopne
inc
and
mov
xor
rcr
add
repnz
cmp
pop
cltd
xor
out
sub
or
jo
shll
out
adc
dec
jp
cld
cmpsb
cld
push
aam
roll
testb
fwait
push
pushl
sbb
fadds
les
nop
inc
imul
sahf
outsl
imul
mov
pop
bound
movsl
icebp
add
sbb
mov
xrelease
jl
cli
aaa
push
ljmp
ret
fidivrl
sahf
into
les
aam
lods
or
or
jne
or
jno
fmull
add
push
jne
sarl
jno
pop
test
add
into
in
nop
popl
xchg
xor
imul
adc
dec
jp
mov
into
jo
dec
cmp
loop
jmp
popa
mov
out
lock
leave
sub
pop
cmp
rcl
roll
push
cmc
sub
into
nop
push
movsb
add
and
gs
aaa
lock
fdivr
mov
jg
stos
jns
add
mov
ror
movb
mov
ret
and
mov
fstl
daa
mov
lods
ja
les
push
test
pop
fcoms
xchg
xchg
dec
pop
insl
sbb
outsb
out
add
xchg
call
dec
dec
loopne
mov
ja,pt
lods
mov
push
sub
adc
pop
in
filds
enter
shll
movsb
sarb
mov
push
or
xchg
xor
pusha
pusha
push
sbb
or
push
fst
outsb
in
jb
into
inc
lret
sbb
cmc
inc
adc
mov
aas
je
int3
dec
jecxz
xchg
cmc
adc
xchg
pop
jne
popf
ljmp
xor
mov
or
jg
mov
cmc
or
mov
xor
add
leave
push
gs
cmp
movsl
aas
dec
inc
xchg
jl
sub
sub
ja
aam
mov
cmp
arpl
das
add
dec
cmp
pop
int
daa
xchg
push
lret
cli
cmp
fs
xchg
push
cmp
in
nop
sbb
sub
push
inc
sub
lods
sbb
pushf
mov
ss
push
add
or
mov
jge
cmp
jno
dec
pop
sbb
insb
ror
jbe
lret
aas
scas
std
sub
xlat
jge
xor
hlt
rcrl
xchg
iret
insl
inc
dec
xchg
xor
inc
loop
fs
stos
test
xchg
in
push
xor
adc
mov
mov
out
sarb
rcrb
add
adc
add
jno
mov
cwtd
lods
fidivs
fdivp
jno
daa
jne
adcl
aaa
movsb
sahf
inc
sarb
inc
fstps
scas
jp
sbb
test
outsb
pop
aad
aaa
orb
in
rorb
gs
cmpsb
adc
mov
sub
jg
cmp
push
sti
rolb
mov
cmp
xor
test
adc
shll
out
or
mov
jl
lcall
xor
mov
sub
sbb
jo
stos
mov
in
cli
or
icebp
arpl
fwait
std
pop
sub
and
orl
mov
jmp
adc
push
push
test
popl
pop
lea
xchg
lahf
aam
mov
sbb
ret
iret
push
out
cmpsb
cltd
sub
lahf
icebp
dec
popf
in
subb
testb
shl
scas
inc
jg
pop
adc
adc
mov
pop
push
popf
mov
popa
or
dec
adc
cmp
xor
daa
inc
push
movsb
mov
hlt
xchg
push
and
pushf
bnd
mov
mov
in
cmp
stc
adc
pop
sbb
sbb
xchg
pusha
mov
add
insb
and
out
inc
jmp
and
jmp
into
addr16
cmp
cld
xchg
or
inc
push
mov
lret
test
mov
mov
data16
sub
fdiv
stos
into
fisttpl
push
push
stc
inc
icebp
lock
cmc
aam
mov
lock
cld
divl
cs
xor
xorl
jl
jne
mov
movsl
jge
xchg
pop
scas
data16
xor
fsts
xor
pop
sbb
push
pop
pop
and
mov
adc
mov
decb
mov
jge
xor
fisubrl
fidivrl
test
lret
mov
jle
jl
xor
ret
pop
xchg
mov
lcall
pop
inc
cld
int
sub
mov
pop
out
loop
mov
add
or
test
leave
cmp
fucom
out
lock
lods
mov
data16
notl
jno
mov
xchg
jns
mov
push
ficompl
stos
int3
lods
aas
cmp
xor
mov
dec
test
cmp
movsl
and
xchg
cwtl
or
and
test
jmp
ds
jnp
test
ret
int
mov
lcall
push
bound
pusha
jmp
xor
or
in
jns
sbb
fnstsw
xor
jb
arpl
or
loopne
xor
mov
or
mov
cmp
lods
lods
fmull
stos
test
add
lret
adc
add
sbb
or
daa
inc
adc
dec
lods
cmpsb
push
xor
mov
movsl
xchg
add
dec
ja
faddp
adc
fsubr
sarl
rolb
fisubrl
push
lods
test
out
notl
scas
bound
mov
into
pop
dec
inc
adc
out
sub
popf
gs
add
in
push
sbb
mov
xchg
pop
fcompl
push
imul
pop
inc
adc
or
sub
addr16
lods
adc
shrb
sub
pop
in
clc
mov
dec
jns
js
jmp
leave
mov
push
dec
fistpl
out
add
test
mov
push
lret
insl
xchg
sub
sbb
xchg
nop
scas
loope
adc
sahf
push
mov
imul
jne
dec
or
mov
leave
leavew
test
daa
mov
aad
sub
mov
mov
adc
mov
add
cwtl
imul
or
mov
in
inc
pusha
les
jge
loopne
imul
pop
js
mov
jp
adc
cmp
dec
jp
jb
out
cmp
or
adc
loop
je
scas
shll
es
sub
repnz
addr16
fsubr
add
push
jmp
iret
inc
jecxz
mov
inc
cltd
sti
or
not
cmp
data16
roll
or
loopne
push
fwait
rcr
out
andl
cltd
fucompp
pop
cmc
imul
cli
dec
cmp
popf
push
sbb
lret
gs
lds
imul
push
imul
in
pop
pop
pop
sahf
inc
adc
lods
sahf
jg
add
pop
scas
dec
add
out
jmp
mov
popl
jge
jnp
lods
sbb
cli
sti
lcall
loopne
jl
pop
xchg
scas
fimull
adc
and
xchg
pop
push
mov
je
aam
loop
jmp
inc
pop
cmp
cld
repnz
push
add
sub
mov
fwait
fwait
pop
popf
xlat
add
adc
mov
loope
in
arpl
mov
cmp
pop
mov
std
pop
mov
int3
fs
adc
notb
std
bound
or
pop
adc
sbb
dec
sbb
lret
icebp
or
inc
adc
cmp
sbb
addr16
jns
mov
push
xchg
aas
cmpsl
lock
loope
mov
sbb
imul
xchg
nop
cmp
jbe
popa
mov
or
dec
or
lret
rcrb
add
xchg
int3
push
int3
or
jg
mov
test
std
scas
in
adc
cld
dec
popf
test
dec
outsl
lods
and
roll
add
outsl
mov
push
int3
sbb
dec
in
outsl
lcall
jg
daa
inc
mov
jne
fildll
and
or
jl
lcall
pop
cmp
mov
insl
scas
adc
cmp
sub
mov
inc
cwtl
rcrl
sub
movsl
add
mov
ret
test
insb
or
sbb
dec
xchg
pop
add
or
sbb
cwtl
inc
dec
adc
rcrl
sbb
mov
mov
in
mov
insl
mov
xorl
fwait
mov
xchg
pop
insl
loop
lods
popa
repz
jge
or
mov
ret
fwait
mov
fisubl
adc
jns
mov
mov
inc
adc
and
jle
jecxz
cmpsb
test
adc
stc
push
jp
and
xchg
cmpsl
movsl
jge
or
jle
sbb
ljmp
cmp
cmc
adc
fcomps
sbb
jp
js
lcall
mulb
decb
xor
lahf
push
jp
xorb
xchg
xor
fisttps
and
dec
ss
push
and
xchg
in
repnz
mov
cmp
sub
aad
scas
sarl
pop
push
mov
es
lret
insb
jmp
ds
roll
insb
enter
mov
dec
movsb
imul
into
int3
jp
lret
lret
xor
mov
and
movsw
jge
push
and
mov
cwtl
cli
std
outsb
and
imulb
jb
aas
add
dec
inc
xchg
outsb
xchg
mov
popa
out
mov
mov
inc
inc
daa
add
ret
imul
stc
add
or
fs
aad
clc
lea
sbb
loope
pop
cs
push
mov
pop
cmp
pop
clc
dec
in
sbb
mov
cli
lahf
add
les
pop
mov
ss
and
add
cmp
ret
aad
shlb
cld
xor
jg
push
xchg
in
xor
into
jecxz
ljmp
inc
pop
mov
ret
sbb
fwait
out
cmc
aam
clc
cli
cwtl
sbb
nop
fcmove
xor
sbb
lods
mov
mov
mov
ss
add
or
fsubr
sbb
outsb
sub
pop
mov
add
mov
adc
int3
jl
jno
mov
cmpsl
xchg
sbb
xchg
push
adc
mov
mov
popf
mov
and
mov
jp
jg
push
je
sahf
popa
mov
aaa
movsb
mov
xor
jae
orl
jecxz
inc
leave
adc
or
jge
cmp
mov
shrl
xor
pop
addr16
cwtl
mov
loope
lret
lds
cmp
into
inc
lahf
lea
xchg
rol
pop
cmc
rorl
ljmp
mov
lds
add
insb
xor
enter
loopne
mov
rolb
sarb
imul
mov
test
stos
shlb
add
enter
dec
or
sub
jmp
pusha
fidivl
sbb
xor
gs
push
cmpsb
sub
ja
push
inc
out
adcl
push
lods
imul
pop
cmp
cmp
inc
jp
sti
push
xchg
pop
push
push
pop
fstps
and
push
test
xor
sbb
mov
mov
mov
fnstsw
or
sub
pop
or
mov
lret
jno
sub
jbe
cmp
and
clc
pop
sub
or
sbb
mov
dec
push
out
xchg
xchg
inc
add
out
movsl
lea
enter
std
pop
cmp
pop
fiaddl
and
in
mov
push
mov
pop
subb
mov
dec
mov
gs
mov
xchg
es
xchg
push
mov
aad
xor
out
repnz
xor
icebp
adcl
bound
fildll
jge
mov
mov
jbe
js
cmpsb
daa
and
or
cmp
sti
or
push
out
push
mov
xchg
mov
lods
cmp
inc
sub
add
repz
sbb
leave
pop
xor
testl
ds
scas
or
jmp
jne
popa
jnp
dec
cmpsb
xchg
call
mov
pop
popa
mov
mov
daa
fsubs
mov
mov
xchg
jmp
xchg
mov
xchg
adc
fwait
int3
mov
std
filds
in
push
outsl
jb
in
lahf
mov
loopne
jb
ljmp
repz
gs
in
cmp
xor
pop
dec
call
int
inc
cmpsb
idiv
add
mov
or
repnz
jno
imul
add
xchg
sbb
loope
pop
inc
add
push
xlat
cmp
xor
or
push
lret
jp
xchg
xor
adc
xor
dec
pusha
gs
lea
lods
sub
in
xchg
repz
ret
mov
lods
notl
push
popf
push
add
pop
je
add
insb
icebp
clc
lds
or
ret
push
rolb
lahf
mov
and
rorl
push
lods
sub
or
xlat
outsl
ret
cmp
outsl
or
or
rol
jae
sub
bound
inc
mov
sub
pusha
icebp
inc
push
xor
shll
and
das
dec
aas
mov
in
sub
out
jg
mov
mov
lods
ret
xchg
cltd
cmp
es
sub
rorl
jecxz
mov
jno
js
pop
jo
xlat
dec
dec
and
data16
mov
or
cmc
sub
addl
dec
outsl
out
pop
jne
test
jne
jae
push
pop
inc
lds
jne
xchg
and
push
mov
xlat
adc
mov
pushf
test
imul
cmp
add
add
in
js
flds
lods
sub
das
jns
jp
lahf
andl
push
in
adc
push
cmp
xchg
in
sbb
mov
adc
xchg
or
fs
int3
stos
dec
xor
in
je
jmp
outsb
mov
cmp
dec
xor
push
lods
cmpsl
fisubl
cld
lods
loop
adcb
lods
fldenv
test
dec
cmp
sbb
push
sbb
cmp
sbb
jmp
test
in
add
dec
leave
insb
mov
pop
clc
repz
or
dec
shlb
loope
jmp
addb
mov
insb
xor
and
fcmovnb
dec
jo
add
loopne
data16
dec
cmp
movsb
push
sub
lods
fidivs
ss
sti
movsl
pop
push
dec
popa
xor
out
pop
mov
mov
stc
pop
jl
xchg
inc
stc
std
push
pusha
sub
loope
int
test
enter
adc
adc
ficompl
mov
and
mov
add
push
xchg
fisttpll
inc
das
jae
pop
pop
mov
je
dec
ja
lock
outsb
shr
cli
rcll
mov
and
lahf
lea
mov
jo
mov
jmp
scas
sbb
sub
fsub
jg
pushf
rcrl
jmp
inc
hlt
icebp
fwait
inc
cmp
xor
aas
flds
hlt
insb
inc
negl
inc
das
add
adcl
imul
nop
scas
pop
xchg
popf
aad
cld
and
enter
sub
pop
sub
or
fistpll
jo
xchg
stos
adc
iret
out
cli
outsl
movsl
das
pop
fadd
daa
fimuls
sub
int3
inc
push
mov
lcall
cli
cli
mov
and
sub
into
pushf
popa
xchg
mov
pop
sbb
out
mov
pusha
pop
in
fnsave
pop
pusha
in
mov
sarb
and
popf
push
out
call
lret
mov
jmp
notb
jns
mov
or
and
mov
mov
inc
sub
sub
popa
and
and
dec
push
push
cs
cmp
jge
inc
iret
ds
dec
xchg
adc
mov
mov
negb
outsb
sbb
jp
bound
fwait
roll
pop
or
wrmsr
pushf
rcll
xor
ret
roll
leave
push
clc
and
test
sahf
mov
push
jmpw
pop
negl
cmp
test
int
xchg
and
mov
jle
pop
out
and
xchg
dec
jbe
and
fisttpll
fs
mov
mov
test
stc
loop
mov
repz
push
shll
lea
fistpl
scas
popf
mov
int3
test
or
xchg
cmp
hlt
xchg
push
sbb
jno
adc
scas
add
add
mov
cs
dec
enter
inc
std
mov
or
pop
icebp
mov
rcll
xor
pop
sub
push
test
cli
jge
cmp
or
dec
push
scas
out
or
call
rolb
stos
sbb
xchg
mov
pop
cmp
cmpsl
stos
popa
mov
repz
addl
in
test
test
dec
cmpsb
dec
adc
jae
repz
mov
jno
in
mov
jb
rcrb
cmp
mov
shrl
andl
inc
ficoms
mov
cmp
add
mov
imul
fwait
sbbl
insb
xchg
mov
in
adc
mov
xlat
cmp
add
pop
mov
lcall
dec
mov
mov
sbb
sbb
icebp
scas
mov
lret
xor
mov
mov
cmc
mov
xchg
and
push
sub
add
xor
sbb
xchg
adc
fistpl
insl
loopne
dec
movlps
popa
insb
loop
cs
sbbb
or
or
addl
add
or
jbe
test
les
mov
imulb
sub
scas
dec
movsl
xor
jmp
stos
push
sbb
loop
adc
push
inc
xorl
cmp
gs
std
hlt
mov
jno
orl
test
or
popf
lods
movsb
xchg
sub
adc
cltd
xchg
pop
sti
mov
lcall
shrl
push
fdivs
mov
sub
mov
xchg
cmc
mov
xor
mov
loopne
jae
dec
xor
inc
arpl
sub
jp
gs
repnz
jl
fidivrs
sbb
sub
mov
mov
mov
sti
mov
gs
lock
loopne
and
cwtl
ret
sbb
xchg
xchg
sbb
pop
mov
fwait
xlat
xchg
cli
fdivrl
push
mov
ret
popf
mov
jo
jp
out
cmp
dec
cmpsl
notl
mov
push
lods
test
lea
sbb
inc
pop
or
push
repz
cmova
pop
fst
and
jo
jle
call
or
in
cmp
push
stos
aad
inc
movsb
and
lret
push
push
mov
shll
mov
or
mov
cmpsl
test
movsl
mov
fwait
sub
fcmovb
enter
scas
lock
scas
ljmp
aad
pushf
mov
or
xor
add
ret
sub
stos
pop
loope
mov
cmp
lret
les
in
fxch
mov
mov
mov
sbb
aad
inc
insl
fsubrs
mov
xchg
push
fmull
cmp
mov
cwtl
pop
jecxz
ds
out
push
jae
lock
out
sbb
mov
sbb
adc
jae
int3
mov
stos
push
xchg
push
out
cwtl
arpl
sbb
mov
in
in
sub
scas
pop
add
mov
jmp
loopne
mov
pop
xor
int3
push
shll
sub
cld
jmp
fstpl
or
aas
stc
xor
adc
pushf
push
mov
aaa
jge
push
stos
dec
or
xlat
add
adc
sub
ret
cmp
jae
mov
xchg
push
mov
adc
cltd
mov
stc
jp
mov
or
push
repz
incl
and
cli
xchg
test
add
repnz
int3
pusha
fs
add
mov
mov
mov
ljmp
xor
repnz
dec
and
jns
aad
mov
scas
cmp
shrl
push
divl
push
xor
cmp
in
push
int
jg
cmpsb
test
aad
shrl
mov
lock
push
mov
ja
push
ja
shrb
test
jge
pop
out
jecxz
mov
mov
push
cli
sbb
inc
mov
adc
or
fcmovb
imul
and
sti
outsl
mov
dec
add
sbb
stc
push
adc
jl
mov
movsb
cmp
incb
out
push
sub
das
sub
jmp
mov
insl
inc
cmp
inc
pop
outsb
jle
inc
cmpsb
or
xchg
push
and
stc
xchg
and
push
mov
ja
fadd
cmp
out
add
mov
jg
sub
aad
mov
mov
pusha
push
sti
pop
int
bound
dec
cmpsb
lods
push
inc
addr16
add
dec
nop
pop
mov
xchg
mov
mov
movsb
aas
dec
mov
mov
pop
inc
xchg
test
cmpsl
push
out
cwtl
mov
pushf
xlat
adc
jne
mov
xchg
push
std
jl
xor
loopne
lahf
or
cmp
out
and
add
mov
mov
int
mov
clc
pop
adc
rorb
daa
mov
int3
cltd
mov
pop
or
js
push
adc
cmpsb
sahf
xor
enter
jecxz
mov
xor
xor
cs
inc
add
xchg
hlt
frstor
je
inc
push
mov
mov
xor
dec
fistpl
mull
push
jp
out
fnsave
lock
subl
pop
cltd
push
cltd
dec
cltd
rorl
jg
gs
xor
dec
add
dec
sti
outsb
aas
xor
mov
xchg
fbld
fistpl
cmp
pop
cltd
inc
outsl
popf
outsb
or
adc
lods
sahf
mov
mov
lahf
out
fidivrs
cmp
mov
add
stos
movsl
sub
pushf
test
pop
inc
repz
stos
jg
inc
popf
xor
out
mov
push
ficoms
pop
call
es
insl
pop
pop
pop
in
mov
dec
mov
iret
xor
sahf
leave
sbb
aas
pop
in
push
int
pushfw
sarb
test
jl
adc
mov
fstpl
adcb
and
inc
in
ljmp
push
lods
das
bound
out
xchg
and
xchg
notl
sbb
jnp
inc
imul
jmp
xchg
sub
pop
push
mov
addl
addb
push
dec
rcl
fnstsw
popf
out
and
loop
sbb
call
mov
out
adc
aad
push
adc
nop
sahf
lds
lea
dec
jg
fwait
aaa
test
sub
inc
lret
cmp
popf
xchg
cltd
cwtl
sbb
mov
jne
xor
mov
lahf
mov
ljmp
fisubl
sub
int3
jecxz
imul
pop
xorl
mov
aaa
fnsave
andl
lock
sbb
xchg
jb
pop
adc
in
inc
outsl
pop
xchg
sbb
cmp
pop
sub
addr16
xor
and
bound
dec
xorb
pusha
sbb
cwtl
ret
dec
jmp
movsl
mov
fisubrl
fldl
jl
mov
andb
fwait
pop
push
cmp
lds
repz
jge
dec
push
bound
shl
inc
sbb
push
cmpsb
scas
add
pop
xchg
or
es
sub
orb
rorl
push
outsl
fstpl
or
in
mov
pushf
jne
pop
lock
jp
mov
lcall
and
test
inc
sub
push
xor
sahf
lcall
xchg
mov
jmp
sub
xchg
xlat
xchg
xchg
fdiv
add
push
cwtl
arpl
out
mulb
sbb
imul
jp
scas
jle
jnp
lds
cwtl
mov
out
mov
cli
inc
je
cmc
inc
out
mov
rcl
inc
aas
fbstp
pop
je
or
jmp
push
jb
and
jb
imul
adc
inc
mov
mov
mov
dec
jnp
and
jle
push
int
scas
loop
xor
ficomps
lcall
jae
pop
dec
mov
out
adcl
lcall
cmp
faddl
shl
cmpsb
arpl
leave
or
sub
lods
push
xchg
and
in
dec
leave
inc
mov
std
adc
lea
out
mov
lea
xchg
pushf
pop
mov
push
lret
push
mov
xor
jmp
xor
push
das
cmp
mov
dec
test
jmp
pop
sar
adc
test
ja
jns
jnp
inc
push
xchg
lret
mov
mov
cmp
pop
jns
sbb
insb
pop
scas
xchg
pushf
das
mov
add
repz
ret
rclb
add
insl
mov
cmp
mov
and
add
jne
inc
mov
std
add
dec
pop
outsb
pop
push
popa
andb
pusha
mov
push
shrl
jle
clc
fwait
xor
loope
xchg
cltd
pop
push
mov
mov
mov
seto
mov
or
andb
mov
out
push
aam
pushf
in
jmp
mov
mov
pop
test
mov
ss
dec
call
fldenv
out
int3
lret
and
mov
imul
test
pop
loop
jno
imul
jae
push
cmp
fcoms
insl
pop
loope
cmp
mov
outsl
mov
scas
sbb
insb
fdivrp
add
je
pop
and
jb
sub
btr
sbb
jl
int3
sbb
push
mov
push
jo
adc
aad
xor
inc
pop
xchg
mov
sbb
imul
cmpsl
sahf
in
xchg
mov
es
repnz
loop
jl
call
add
xor
out
lea
xor
jb
and
stos
rcll
dec
cmpl
shrb
cmp
popf
pop
je
movsb
outsl
lock
add
mov
lcall
js
xchg
sub
dec
adc
push
inc
pushf
je
pop
inc
adc
mov
es
push
testl
lahf
pop
xchg
mov
sub
inc
cmpsb
es
dec
imul
inc
lea
cmpxchg
shr
jnp
cmp
or
ds
sbb
pushf
loop
mov
cwtl
cltd
in
aas
in
push
imul
mov
mov
inc
and
sbb
loop
shrb
pop
inc
cmpb
pop
cwtl
push
pop
cmp
mov
cmp
fwait
cmp
dec
cmp
pop
lea
adc
cld
aam
sub
pop
adc
dec
mov
xor
fisttpl
add
mov
pusha
add
rorl
int
cli
icebp
stos
add
inc
and
mov
sub
jmp
test
xlat
iret
inc
js
xchg
std
inc
jmp
dec
sub
idivb
iret
cwtl
fisubrs
xchg
mov
pop
cld
les
mov
and
in
es
pop
shl
or
push
lcall
fsts
adc
je
and
lock
lcall
sub
das
adc
adc
or
ret
pop
aad
mul
jns
test
adc
pop
mov
push
sti
inc
push
mov
sbb
mov
or
sbb
ja
mov
sub
inc
mov
fiadds
sbb
ljmp
jp
inc
push
or
addb
imul
rcrl
pusha
and
jp
nop
rol
cmp
int
popa
test
ficompl
mov
jnp
cmpl
xchg
or
sbb
pop
add
out
stc
repnz
jns
fildl
aam
addr16
movsl
mov
and
pop
cmp
rolb
aaa
pop
mov
push
iret
mov
imul
test
adc
mov
aaa
ret
jp
sbb
adcb
mov
sub
decb
add
mov
loope
subl
data16
mov
push
cli
adcb
in
sahf
push
pop
mov
adc
pushf
pop
push
jo
pop
loopne
test
test
sub
pop
mov
insl
push
lods
cmc
dec
sahf
dec
arpl
outsl
movd
fildll
pop
dec
ds
mov
dec
pop
addl
out
pop
xchg
add
xchg
jg
scas
inc
fs
int
sbb
aad
cwtl
mov
sti
cmc
adc
add
hlt
mov
js
loop
popa
lods
dec
lret
mov
in
lret
mov
add
fbstp
xchg
inc
push
cmpsl
sub
mov
int
push
loope
in
push
fcoms
and
cmpsb
fcoms
arpl
lret
fstpl
mov
mov
add
adc
xchg
nop
add
and
add
jo
push
cmp
insl
xor
fcompl
mov
test
add
ja
push
fisubs
mov
in
call
leave
jnp
lcall
push
add
aas
or
out
push
and
or
ret
adc
xchg
call
addr16
fwait
fiaddl
pop
pop
call
push
xor
repz
xchg
dec
imulb
mov
push
jne
mov
xchg
inc
lret
adc
stc
sub
ficompl
adc
imul
push
push
sub
push
loope
xchg
movsl
sti
pop
jno
xor
dec
jmp
sub
xchg
ret
fcomps
js
mov
sahf
and
jmp
and
and
fists
loop
sub
push
lret
sbb
dec
insl
shlb
sarb
xor
outsl
xchg
cltd
popf
xlat
mov
xor
addr16
sub
sarl
fildl
dec
pop
je
mov
lock
adc
jo
lret
push
or
aaa
int3
fists
cmp
shufps
and
sbb
xchg
popa
movsl
outsl
pop
or
xlat
outsl
int
pushf
xor
or
ret
out
test
popa
mov
aas
outsb
fs
test
jbe
and
loop
and
les
ljmp
outsl
in
repz
into
adc
popl
sub
lret
out
cmc
add
jge
lcall
popa
push
pop
xor
xchg
and
dec
rorl
xor
add
rolb
out
jnp
mov
out
adc
pusha
xchg
sbb
mov
dec
adc
mov
jnp
pop
mov
cmp
mov
jbe
and
cmpsb
test
rorl
push
push
arpl
in
push
jb
add
sub
cmp
rcrb
jmp
or
mov
movsl
cmpsb
sub
outsb
iret
mov
leave
sti
in
xlat
lock
lds
mov
pop
sar
jmp
inc
push
lock
outsl
rcrl
inc
sbb
push
test
mov
aam
lret
adc
mov
jne
or
scas
sahf
clc
jp
sbb
jb
pop
mov
and
mov
leave
loope
mov
data16
pop
fildll
dec
and
sbb
xor
rcrl
loopne
xlat
xor
popf
imulb
xor
pop
xacquire
xor
or
lea
std
out
outsl
pusha
fwait
dec
pusha
mov
cmp
push
jp
je
xor
mov
or
cmp
or
stc
rcl
push
rcrb
call
sti
add
add
xchg
adc
pop
inc
lret
jge
rcrl
add
jl
push
loopne
adcl
adc
testl
test
iret
and
jb
adc
jge
loop
movsb
sti
cmpb
jg
mov
clc
lret
sub
push
or
iret
aas
call
and
nop
repnz
faddl
es
jne
push
or
push
sbb
pushf
jbe
ficompl
cmc
mov
inc
call
push
in
mov
repz
cld
popa
das
jecxz
mov
int
insb
mov
fwait
push
testb
fnstcw
inc
push
movsl
fcoml
mov
sub
fwait
sub
fnstenv
insl
jecxz
push
push
leave
or
addb
sub
decb
mov
fsubrl
stc
jl
jp
mov
adc
je
mov
or
xchg
xor
push
or
ss
notb
dec
sbb
dec
addr16
mov
mov
clc
lock
pop
pushf
icebp
out
adc
sbb
xchg
push
lret
add
decl
xchg
fwait
notl
dec
mov
inc
hlt
movsl
inc
sbb
pop
sbbb
cmp
mov
aaa
jl
jo
mov
sub
xchg
push
jecxz
fisubrl
nop
inc
lahf
pop
push
jg
std
arpl
adc
js
dec
mov
xor
jle
push
cmp
jbe
and
adc
push
xchg
outsb
sbb
or
jle
test
pop
in
cld
dec
fwait
popa
pop
sub
ret
dec
nop
scas
insb
push
sahf
mov
lcall
frstpm(287
push
and
jl
sub
sahf
jmp
out
mov
clc
mov
dec
stos
imul
rcrl
push
xchg
mov
mov
stc
mov
mov
fsubrl
arpl
test
xchg
mov
xor
aam
fsubr
shlb
adc
stos
int
test
xor
fidivl
sahf
gs
jne
pop
out
jl
insb
mov
cltd
insb
fwait
nop
fisttps
js
sub
lods
lahf
xchg
push
inc
adc
loope
jnp
repnz
rorb
xor
xchg
xchg
test
mov
and
adc
cmp
movsb
or
lds
push
pop
cwtl
test
push
imul
pushf
xor
rolb
xchg
cmc
mov
pop
xchg
movsl
dec
scas
add
nop
jmp
scas
cmp
idivl
outsb
cmp
ss
sbb
fidivrl
dec
cwtl
fsubrl
hlt
mov
aaa
scas
pusha
push
pop
dec
jmp
sub
aad
cmp
aas
or
or
jmp
xor
loop
lds
out
mov
cmp
jecxz
fisubs
or
lds
mov
in
mov
test
insl
leave
lods
xlat
int3
or
sub
mov
cmp
jge
sti
sets
add
push
push
ret
test
xchg
jmp
or
fists
dec
test
jl
ds
pop
inc
and
push
je
sub
cwtl
sbb
pop
cmc
sub
shl
inc
in
insb
xchg
lea
pop
xchg
dec
andl
pop
or
add
lret
decb
into
adc
mov
inc
test
mov
insl
test
aaa
nop
fcmovnb
popa
and
xchg
sti
les
loope
jle
cs
sbb
popf
insb
loope
pop
mov
orl
lea
pop
inc
mov
gs
jb
cmpsb
in
icebp
xchg
push
pop
cmp
mov
push
dec
pop
jo
ret
repz
fs
pop
aas
addr16
lahf
lds
xchg
addb
subl
mov
aad
cmc
ss
mov
jmp
sbb
test
jno
std
iret
lea
ud1
sti
out
lds
lret
inc
and
outsb
outsl
mov
pop
push
dec
ja
cmpsl
xchg
and
stos
and
add
mov
pop
out
ret
lcall
call
jbe
std
mov
cltd
fildl
or
popa
stc
clc
adc
sub
addr16
push
jecxz
aad
xor
fstps
data16
test
cltd
inc
ret
xchg
mov
loope
fisttps
mov
movsb
sahf
and
in
lods
ret
jecxz
push
inc
ret
and
cs
push
mov
fcomps
mov
inc
ljmp
arpl
sub
inc
pop
push
push
divb
test
jae
cmp
sbb
out
mov
cmpsb
sub
arpl
push
push
stos
dec
inc
xlat
inc
jae
std
mov
xor
xchg
add
mov
scas
outsl
pop
xchg
lret
movsb
movsb
and
fidivrs
pop
testb
and
cwtl
out
xor
loope
addr16
mov
cli
shll
clc
mov
inc
sbb
cld
inc
mov
mov
rorb
mov
out
cmpsl
inc
xchg
push
ret
je
dec
adc
lcall
inc
cmpl
subl
jo
cmc
jno
and
stos
loop
into
jno
xchg
cmc
add
ds
scas
and
int
lods
aam
sbb
testb
roll
dec
mov
in
insl
mov
imul
sub
mov
rcrl
sbb
int
lds
jb
enter
adc
xchg
xchg
mov
cmp
pop
int
mov
xor
add
mov
sub
mov
mov
mov
subl
ja
in
lock
mov
cld
mov
cmpsb
sub
mov
push
adc
int
lods
mov
push
xchg
loope
and
mov
and
pop
jp
aaa
sub
sub
add
adc
inc
cld
or
cltd
cmp
and
adc
stos
lret
sub
push
mov
mov
push
fimuls
lods
sbb
mov
push
scas
outsl
mov
pop
sbb
fldl
lea
xchg
loop
movsl
ror
xchg
mov
in
xchg
and
std
in
add
out
pandn
in
scas
jmp
stos
stos
inc
adc
cmpl
cmc
rcr
fsubr
enter
sbb
je
push
fdivl
jecxz
sbb
jb
gs
add
and
jae
dec
or
popa
cmpsl
loop
push
mov
mov
loope
dec
es
push
scas
lcall
xchg
inc
iret
xchg
mov
sub
add
cmp
sti
add
popf
push
cltd
mov
lcall
pop
push
jne
call
lahf
hlt
xor
xor
dec
and
rcrl
lahf
pop
mov
push
aaa
xchg
in
mov
aaa
jns
and
push
jnp
leave
sub
scas
loopne
out
ss
in
add
flds
repz
pop
loope
jmp
cmp
xchg
mov
and
xchg
add
and
cwtl
nop
xor
mov
mov
iret
xor
pop
daa
lods
subb
cwtl
icebp
cltd
imul
insb
fldt
test
stos
pop
push
jnp
ljmp
loope
pusha
mov
ss
sbb
fwait
aam
pop
movsl
mov
mov
sub
out
inc
jb
pop
add
and
sub
cs
out
std
test
enter
cs
and
lahf
stc
cmp
fmull
mov
cwtl
xor
popa
push
cmp
cmp
dec
push
adc
mov
je
push
and
jae
dec
and
dec
inc
movsb
mov
pop
fidivs
je
imul
add
cmp
sbb
out
or
xchg
int3
stos
xor
xchg
mov
and
jecxz
add
mov
add
mov
shl
ficompl
out
je
ret
faddl
addr16
lock
jo
pop
and
push
adc
movsl
jge
mov
or
mov
daa
sahf
adc
int3
add
ret
sbb
fidivrs
pop
lds
cmp
jb
and
sbb
xchg
dec
xchg
loop
xchg
int3
dec
das
sahf
push
mov
pop
ret
shl
mov
pushf
cmp
xchg
jecxz
xor
fisubrs
inc
fmull
add
cmpsb
jg
xchg
mov
es
into
add
adc
inc
stos
enter
xchg
and
imul
xchg
push
cmp
xor
les
aaa
pop
mov
jmp
sahf
loopne
mov
push
inc
mov
aaa
xor
ret
xchg
add
push
orb
or
test
mov
and
mov
mov
xchg
out
xchg
dec
decl
cld
push
jne
stc
repnz
lahf
sbb
ret
mov
shrb
adc
dec
stos
loope
dec
jmp
fidivs
orl
stos
sahf
mov
fistpll
test
mov
or
outsb
mov
mov
mov
divb
ret
ja
mov
mov
outsl
rorb
loopne
das
mov
xchg
cmpsl
inc
jge
adc
loop
mov
xchg
cwtl
xor
incb
scas
dec
movsb
jge
bound
xchg
adc
insb
jo
push
lea
pop
dec
lods
jle
dec
cmp
loop
data16
nop
stos
test
dec
pop
loop
incb
and
stos
call
mov
jp
xlat
adc
hlt
lahf
dec
arpl
outsl
and
ja
setne
pop
pop
dec
jno
push
mov
push
inc
mov
in
push
bound
pop
ljmp
sub
int3
inc
xor
pop
pusha
sub
dec
jle
out
push
pop
jp
push
push
add
mov
mov
or
inc
clc
addr16
faddl
pop
adc
lahf
stc
cmp
sbb
push
xchg
inc
out
jg
adc
cmp
mov
pushf
out
push
adc
das
pop
push
lcall
ljmp
testl
popf
sbb
lcall
pop
hlt
inc
jl
out
pop
mov
mov
push
jmp
in
push
xlat
add
notb
leave
xor
sbb
push
faddl
jge
push
nop
pushaw
sahf
leave
push
mov
pop
loope
in
xor
pop
ret
testb
inc
dec
pushf
mov
stc
gs
xchg
jo
sub
mov
sahf
mov
adc
pop
test
je
mov
scas
mov
push
stos
inc
sbb
xor
nop
repnz
lds
jb
pop
aam
lods
adcb
sub
sub
in
mov
add
mov
nop
push
jecxz
add
adc
das
add
scas
pop
jbe
inc
rcll
jg
out
clc
in
repz
xor
xor
mov
sub
enter
lret
pop
mov
lret
popf
imul
pop
enter
pop
or
dec
int3
jne
loopew
dec
faddl
shlb
cmp
or
std
mov
imul
data16
mov
sahf
sbb
test
pop
mov
mov
stos
adc
dec
out
std
push
loop
push
icebp
sahf
and
sub
arpl
or
cmp
mov
hlt
testl
inc
mov
mov
icebp
fisubrl
outsb
ficompl
pop
les
movsl
pop
std
add
shrb
cld
clc
fldcw
push
mov
stos
adc
stos
xor
jmp
xor
test
subb
mov
mov
ja
popf
cmpsb
ss
stc
pushf
mov
fbstp
int3
pop
dec
mul
mov
fisttpll
fisubl
cmp
inc
daa
push
inc
jg
out
add
cmp
jl
xchg
xor
hlt
insb
pop
call
fldenv
in
movsl
and
ljmp
in
cmpsl
test
roll
jp
jp
lds
movsl
and
popa
xor
imul
sarb
loop
dec
mov
mov
sbb
xor
outsb
inc
push
aam
and
mov
cmp
mov
mov
repnz
pop
mov
inc
jnp
lock
xor
loopne
push
cmp
aaa
cmp
inc
dec
mov
pusha
cmpsl
push
mov
and
xchg
sub
insb
dec
push
fwait
jns
fwait
mov
gs
adc
mov
jp,pn
mov
mov
push
inc
xlat
and
xorb
iret
movsl
fnstcw
jge
push
pop
cmp
push
xchg
inc
xchg
push
lock
decb
fdivl
lods
xchg
xchg
fcoms
fildll
xchg
andl
mov
lock
sbb
rcrb
insb
dec
repnz
out
leave
push
push
xchg
pusha
push
pusha
testl
dec
test
mov
frstor
mov
sub
in
mov
ljmp
sub
bound
dec
dec
adc
stos
xor
test
loopne
cli
pusha
scas
out
clc
mov
mov
cmp
push
fwait
xchg
mov
out
push
push
push
xchg
std
pop
cltd
arpl
fcoms
mov
mov
jae
ja
adc
cltd
jns
fdivs
sarl
sub
fadds
mov
mov
mov
inc
lret
insb
pop
pop
pop
jecxz
jmp
ret
ret
mov
loopne
sub
in
push
jl
inc
fs
in
push
xchg
fdiv
pop
inc
test
repnz
stos
adc
sub
jb
jp
shlb
xchg
test
pop
out
das
push
add
xchg
in
test
jge
dec
les
in
nop
jl
xchg
dec
adc
and
inc
cmp
add
mov
mov
fcompl
pop
or
sti
loopne
loop
loope
pop
andl
sbb
ret
ljmp
mull
pop
cmp
shll
std
ret
xor
and
sbb
cmpsb
in
mov
and
imul
lret
mov
fimull
adc
sbb
out
push
and
xor
fldenv
mov
jns
dec
xchg
ja
xor
dec
daa
fldcw
push
nop
ds
bndstx
leave
sub
xor
jo
arpl
in
pop
clc
adc
subb
inc
mov
pop
ljmp
mov
clc
sub
fs
sub
mov
inc
mov
fcmovne
push
and
jo
mov
filds
hlt
pop
mov
cmp
mov
mov
fwait
jae
pop
pusha
xlat
loopne
sti
pop
ljmp
mov
mov
lds
cmp
dec
imul
mov
push
sbb
push
fisttpll
jo
jp
aas
sub
mov
stos
pusha
mov
stc
test
ficoml
xchg
decl
lea
push
mov
pop
into
xchg
int
pop
mov
or
add
pop
bound
cld
test
dec
fmul
inc
inc
pop
cli
int
rcl
pop
pop
movsb
mov
fidivrs
jnp
push
add
mov
mov
pusha
dec
outsb
cli
fldpi
dec
cmp
or
mov
gs
and
insl
ss
jno
mov
loop
stos
ds
and
pop
push
xchg
pop
add
jmp
cli
mov
aam
scas
sbb
lods
aam
and
inc
add
rcrl
int
cmc
sbb
push
push
inc
add
fxch
adc
jae
aam
jb
xchg
jb
mov
mov
fistpl
jle
lret
xchg
insl
jae
and
stc
inc
push
enter
andb
loope
in
mov
mov
fisttpll
addr16
orl
fwait
loopne
dec
dec
movsl
test
mov
dec
pop
fwait
dec
fnstenv
xor
inc
rcrl
out
loopne
sub
mov
mul
pushf
aaa
inc
hlt
out
push
mov
loopne
loop
xchg
lcall
ret
cli
lahf
mov
add
ret
and
dec
loope
pop
fisubrs
mov
aad
fcoms
xor
and
add
xchg
xor
cmc
push
test
lret
adc
mov
addl
lods
popf
lahf
jb
addr16
or
sub
scas
sub
filds
push
pop
pop
stos
outsb
sub
mov
push
xchg
cmp
rolb
or
negb
jg
lret
enter
jmp
sub
and
pushf
dec
xor
mov
xchg
and
pop
in
jg
pop
pop
or
bound
push
dec
xor
testl
mov
int3
into
lahf
int
jnp
cmpsl
mov
dec
add
pop
lret
jnp
pop
fnstcw
aam
popa
inc
incl
pop
lret
dec
pop
push
sti
outsl
inc
hlt
pop
inc
cmpsb
and
xchg
ljmp
mov
sub
add
add
sti
dec
cmc
ljmp
loopne
scas
jne
ja
sub
pop
jg
imul
test
icebp
in
add
call
sbb
pop
fwait
adc
sbb
dec
lods
cli
test
mov
xorl
int3
cmp
cwtl
imul
xchg
pop
ret
pop
push
or
push
std
stc
bound
aas
test
adc
xchg
mov
cmp
sbb
iret
sub
cmc
lahf
ficompl
push
rcll
sbb
sub
ljmp
and
push
mov
sub
xchg
push
xor
jns
lock
jns
insl
insb
daa
jb
mov
es
in
mov
pop
adc
add
outsl
scas
cmp
mov
scas
or
xchg
inc
shll
pop
pop
mov
iret
jl
inc
fcmovnu
adc
and
mov
pop
and
push
ljmp
xor
leave
js
xchg
shll
pop
and
out
or
fdivs
test
jne
mov
loopne
dec
lds
pop
pop
push
test
jle
insl
adc
mov
cvtps2pd
inc
xlat
bswap
adc
sbb
mov
mov
out
push
leave
or
xchg
in
add
lret
dec
jecxz
and
cmp
pop
outsl
mov
jg
pop
mov
loope
jecxz
aas
insl
imul
lea
repz
dec
das
pop
insb
add
icebp
xor
ljmp
mov
cs
xor
mov
mov
stos
xor
test
mov
and
cmp
mov
jmp
leave
cmp
fmull
sbb
or
or
lods
inc
adc
add
sbb
rcll
mov
mov
dec
or
mov
cs
fisubrs
rcrb
mov
cs
ror
popa
call
rcll
push
stos
mov
pop
aad
mov
or
ret
fidivs
mov
movsb
and
mov
imul
lret
jecxz
mov
cwtl
xchg
lods
inc
pop
int3
or
les
adc
xchg
dec
add
sub
jp
les
or
jecxz
dec
xchg
shll
xchg
jno
push
mov
jg
test
sbb
xor
icebp
push
scas
push
out
xor
popa
or
xchg
cli
xchg
and
jo
ljmp
inc
loopne
adc
popl
mov
cmp
mov
fdivr
cmp
pop
leave
sub
xchg
imul
jb
and
xor
push
out
lret
sbbl
es
rcr
adc
cmp
scas
inc
push
mov
popa
bound
cmpsl
movsb
fstps
mull
and
lahf
push
ret
cli
push
push
cmpsl
jae
cs
xor
lods
dec
idiv
mov
aas
test
ds
call
loop
in
xchg
push
jae
jno
push
imul
xor
test
sub
rcl
rcrb
cmp
mov
mov
xchg
sbb
xor
pop
push
push
add
mov
repnz
dec
mov
movsb
out
jb
in
push
mov
cld
or
mov
or
pop
mov
es
cwtl
mov
jle
xor
mov
pop
movsl
mov
xchg
pop
aad
bound
into
movsb
dec
stos
push
mov
mov
or
movsl
test
insb
mov
cmp
xchg
loop
adc
push
pop
aaa
pop
cmp
mov
mov
leave
enter
aas
fnsetpm(287
push
xor
lock
test
xchg
imul
pop
dec
inc
dec
or
dec
out
mov
popa
xlat
ret
jae
or
inc
lcall
js
test
jbe
and
adc
push
pop
jle
iret
sub
xchg
das
mov
and
add
mov
movsb
push
test
mov
xor
adcl
mov
inc
roll
neg
repz
shlb
inc
mov
scas
in
lret
je
ficompl
jns
addr16
clc
sbb
pop
push
pop
rorl
shl
je
and
lret
push
jg
pop
lahf
mov
sarl
shl
mov
sub
jo
dec
adc
jg
xchg
cmp
mov
roll
push
dec
jl
insb
ficomps
or
and
ss
popf
add
pop
cwtl
sub
popf
push
sahf
and
aas
loop
xor
jl
xchg
popf
movsb
xor
add
lods
dec
js
xor
stos
pop
jg
das
push
fildl
inc
testl
sub
cmpsb
cmp
sub
pop
jp
lock
fwait
sbb
fsubl
jg
add
jl
jmp
fldenv
ss
inc
cwtl
das
dec
int3
mov
sbb
aas
gs
sahf
arpl
fs
mul
mov
sub
lods
sub
pusha
lock
sti
add
and
or
popa
mov
iret
xchg
cmpl
inc
mov
mov
out
fadd
mov
cmc
xor
and
jmp
and
pusha
dec
cmp
fnsave
xor
pop
mov
lds
fadds
loopne
mov
int
push
inc
inc
push
adc
inc
aad
jmp
add
mov
sarb
cmp
add
mov
ljmp
dec
imul
outsl
dec
int3
adc
push
xorl
or
sbb
fidivrl
adcb
out
dec
add
sbb
lcall
jbe
leave
mov
fsubrl
mov
xchg
dec
stos
lods
outsl
pop
loop
mov
aam
and
inc
enter
jb
inc
nop
lods
fldenv
push
xor
jmp
pop
loope
out
fadd
mov
out
test
xchg
adc
adc
popa
sbb
fs
mov
shll
adc
mov
mov
xchg
mov
cmp
xchg
xor
adc
loop
jno
add
mov
ret
sbb
rcll
xor
in
inc
movsl
pushf
lret
push
mov
jae
add
int3
mov
test
outsl
out
fistpl
jnp
and
stc
jae
push
into
cld
es
pop
fcmovnbe
in
loope
push
nop
test
pusha
mov
pop
add
out
fs
in
xor
mov
jl
outsl
aam
aaa
idiv
sub
lret
cs
fsubl
mov
ret
jno
or
inc
cld
inc
and
pop
das
scas
cmc
je
xchg
hlt
add
inc
add
cmpsl
cmpsl
mov
push
inc
roll
mov
cmp
xlat
cmp
insb
das
push
shlb
out
xor
addr16
or
xchg
mov
push
fimuls
adc
fisubrl
sbb
gs
or
sub
mov
mov
mov
mov
clc
inc
adc
cmp
je
jle
xor
dec
iret
push
sbb
scas
icebp
add
cmpsb
mov
mov
push
in
push
pop
mov
out
cmpl
push
mov
mov
repz
imul
inc
pop
mov
jae
movsl
jle
pop
stos
leave
dec
or
add
popa
and
daa
add
mov
and
mov
test
push
out
pop
test
push
fwait
cwtl
or
inc
pop
mov
pop
mov
jecxz
daa
mov
cmp
adc
sbb
pusha
sub
and
jae
xor
lods
jb
out
add
gs
mov
cmc
negb
ja
xchg
insb
or
je
add
andl
jae
dec
adc
mov
popa
and
mov
lahf
rcll
dec
dec
add
push
xchg
popf
call
and
lock
inc
ffree
cltd
lods
mov
bound
jne
test
clc
in
aad
dec
or
mov
bound
es
int3
lock
mov
mov
outsb
mov
enter
movl
jnp
sbb
sbb
mov
mov
adc
xchg
pop
sbb
jne
gs
jb
pop
stos
dec
or
pop
add
cmp
lea
add
les
out
cltd
andl
inc
inc
pop
add
pop
add
and
and
and
jp
mulb
scas
mov
cltd
pop
or
test
xor
xchg
movsb
idivl
call
inc
mov
dec
in
orb
stos
adc
adc
xor
mov
adc
cmp
sti
mov
sub
push
loopne
xchg
add
mov
clc
loop
fsubp
sbb
add
push
imul
adc
add
jns
arpl
cmp
adc
xchg
outsb
add
int
jg
ds
fmull
pop
sbb
jmp
les
and
jmp
into
add
sub
in
add
xchg
mov
push
hlt
add
inc
inc
xchg
rolb
pop
in
mov
sub
arpl
mov
mov
jno
xchg
jae
and
adc
adcl
pop
sbbb
pop
xlat
cltd
test
mov
shrb
xor
inc
push
inc
jno
push
icebp
hlt
test
push
pushf
cmp
lret
jnp
xor
adc
call
sbb
xchg
sub
add
and
in
leave
xchg
daa
fcmovbe
mov
and
loopne
lahf
inc
dec
ucomiss
rep
add
icebp
ret
jo
dec
pop
sub
jle
testb
xor
add
loope
shlb
call
jb
or
cmpsb
mov
cld
push
or
push
scas
push
shl
and
sbb
in
cmc
push
and
or
data16
sbb
dec
lcall
sub
push
xchg
sti
jge
push
into
out
jp
fsubrs
jp
popa
sub
iret
outsl
adc
sbb
iret
imul
gs
popf
xchg
cmp
mov
stos
mov
je
popa
fildll
mov
mov
jl
mov
xor
arpl
imul
into
inc
cmp
mov
lcall
xor
sahf
test
outsl
push
xchg
mov
xchg
dec
test
adc
orb
out
pop
sub
cmpsb
out
test
sub
adc
xor
mov
pop
bound
pop
or
push
fs
popa
aad
sub
ja
aas
dec
out
lods
hlt
jbe
mov
into
jmp
test
gs
movb
popa
aad
inc
adc
aad
jge
cmp
cmpsb
test
and
jmp
bound
pop
lcall
or
sub
shll
aam
adc
push
cmp
das
bound
test
jae
outsl
and
fiadds
adc
neg
fists
mov
insb
shl
and
and
shl
outsb
mov
enter
mov
call
in
mov
fbld
adc
mov
sbb
xchg
repnz
pop
pusha
inc
add
js
aam
sub
xor
nop
lea
stos
mov
loop
mov
das
jl
xor
jmp
stos
push
js
lock
mov
fwait
jnp
cmpsb
ds
ret
ss
or
fcmovnb
pop
sahf
into
je
arpl
xchg
add
add
hlt
add
dec
in
push
iret
sub
push
popa
pop
cmp
mov
ss
fmull
pop
or
and
cmp
xchg
dec
sub
ds
das
lds
xchg
fdivrl
push
shl
imulb
clc
push
push
icebp
outsb
pop
adc
sbb
cmp
push
lret
outsb
ret
adcb
test
push
fldcw
loop
ljmp
test
ss
mov
mov
add
dec
sbb
out
pop
rcll
fcoml
orb
jg
cmpsl
in
das
push
jno
or
mov
in
ss
cmp
mov
mov
insb
dec
and
xlat
data16
jo,pn
dec
pop
in
sti
cmp
ret
or
dec
xchg
push
daa
mov
dec
jb
mov
stc
aaa
addr16
outsl
int3
loop
gs
loope
xchg
jg
jecxz
cmpsl
or
jmp
inc
cmp
test
sub
and
or
xor
pop
dec
loopne,pt
fxch
jge
jbe
sahf
subl
lcall
rcl
arpl
pop
inc
sbb
push
aas
fldl2e
pusha
cmp
sarb
cld
repz
pop
adc
stos
pop
sbb
and
jp
inc
mov
mov
and
and
cltd
testl
stos
add
xor
jmp
loope
mov
not
aam
sub
cwtl
sti
imul
mov
add
mov
or
jle,pn
ss
pop
loope
outsl
jne
mov
jge
pop
icebp
sti
jp
mov
lock
in
aad
cmc
cmp
pop
xor
in
andl
lods
pushf
sarl
sbb
mov
jae
mov
jae
out
push
mov
das
jnp
mov
adc
or
mov
movsl
es
or
add
adc
xchg
mov
push
pop
imulb
jbe
sbb
mov
pop
push
cld
push
lods
ss
ljmp
mov
and
adc
push
mov
loope
aam
sbb
xor
popa
scas
xchg
lods
pop
add
sti
sbb
mov
js
cmp
ljmp
and
adc
and
bound
inc
scas
outsl
xor
cmpsb
jne
lods
les
adc
pop
jnp
popa
in
mov
imul
clc
pop
sub
in
sub
movsl
out
rcll
sub
mov
shlb
xchg
pop
notb
movsl
xchg
sahf
aam
in
jmp
push
adc
xor
orb
mov
mov
stc
lcall
cli
adcl
roll
or
imull
xor
and
pusha
shrl
jmp
sub
fcmovne
lock
fdiv
mov
loopne
frstor
aas
cmc
ja
lods
or
inc
mov
inc
cmpsl
fdivs
xlat
cmp
rclb
sbb
js
cmpsl
subb
nop
sub
inc
dec
cld
add
sbbl
repz
repz
call
lcall
cmc
mov
out
arpl
dec
push
mov
lret
loop
and
pop
je
stc
hlt
bound
in
or
mov
adc
adc
xchg
rcrb
sbb
loope
jae
sub
int3
sub
lods
cmpsl
xor
jmp
sahf
mov
mov
dec
mov
mov
das
adc
fcompl
xchg
dec
scas
dec
xor
xchg
cmp
cmp
inc
jno
inc
ficoml
dec
mov
mov
jge
int
xor
subl
in
jge
adc
xchg
sarb
sahf
jb
fmulp
mov
mov
sbb
mov
mov
aas
jg
stos
jp
test
out
mov
sub
daa
andl
fwait
or
fs
orb
mov
push
mov
daa
sbb
cltd
scas
inc
int
or
add
push
call
push
stos
lret
mov
adc
leave
sti
adc
mov
negl
andb
jmp
and
jge
xor
inc
mov
mov
cltd
xchg
sarb
mov
lds
xchg
inc
stos
mov
lea
cmp
xchg
push
into
ffree
lock
mov
dec
movsl
sub
pushl
pop
cwtl
sub
cmp
filds
pop
fstpl
mov
jmp
rol
cwtl
dec
jp
in
cltd
sbb
xchg
out
and
pop
into
jbe
push
scas
xchg
lock
xchg
mov
xchg
mov
mov
int3
jae
jb
sub
rclb
pop
in
cs
gs
mov
int
cmp
cld
push
mov
push
cwtl
mov
add
dec
aam
sub
test
pop
inc
cmpsb
aad
mov
outsl
pop
add
adc
loopne
adc
aaa
aaa
adc
ds
inc
je
and
pop
icebp
into
repz
add
bound
call
mov
jno
and
sbb
pop
in
sarb
xlat
sarl
push
and
addb
nop
repnz
mov
inc
sub
stos
cld
jge
das
hlt
rclb
test
ss
leave
sub
test
sarb
add
popa
cs
cwtl
pop
insl
push
clc
sub
aam
in
xorl
addr16
enter
aaa
cmp
test
test
sbb
adc
scas
xlat
pop
jecxz
ret
inc
popa
jge
dec
jmp
xor
clc
aam
dec
mov
and
mov
jb
fld
popa
cmp
mov
or
xchg
mov
or
xlat
push
mov
ja
push
mov
dec
jns
in
hlt
jle
ret
jmp
int3
and
aaa
jns
mov
sub
jecxz
xor
mov
pop
or
cmpsb
mov
jg
insl
add
dec
stos
mov
jo
xchg
mov
adc
lods
ds
and
mov
and
jnp
dec
insb
pop
popa
mov
lods
enter
dec
mov
and
adc
add
add
or
movsl
dec
scas
aaa
mov
inc
subl
repz
sub
and
lock
pushf
stos
sub
mov
jg
pop
jmp
mov
jno
xor
sbb
es
insb
jae
jne
scas
and
mov
add
mov
std
xchg
or
sbb
cltd
mov
and
xor
cld
aaa
gs
mov
out
mov
gs
xlat
jmp
jmp
and
adc
sahf
adc
sti
imul
push
jo
shl
popf
push
and
pop
mov
and
xchg
repnz
test
mov
mov
aad
sbb
or
dec
or
bound
test
call
push
xor
mov
inc
or
cmp
mov
cwtl
or
mov
adc
testb
mov
repz
xor
es
ret
cmpsb
xchg
sbb
pop
enter
sbb
iret
sub
cmpsb
pusha
xchg
mov
sub
xor
push
or
out
enter
paddq
mov
test
jae
mov
ror
in
ljmp
out
test
add
sti
nop
mov
dec
pop
clc
lods
cmp
call
andb
movsb
fcmove
fidivrs
movsb
sub
xchg
mov
fwait
or
dec
inc
hlt
mov
cmp
pop
cmp
sbb
lea
mov
lahf
arpl
movsl
out
test
cmp
mov
je
mov
xchg
mulb
pushf
cmc
adc
push
adc
repz
es
cmp
out
adc
std
lcall
sbb
nop
pop
fdivrs
cmp
add
add
inc
loop
jb
push
mov
aaa
sbb
xchg
int
or
mov
pop
fldl
scas
sbb
popa
mov
movsb
sahf
mov
roll
xor
sbb
mov
test
shrb
pop
jmp
movq
xchg
pushf
movl
arpl
cmp
mov
int3
jo
mov
and
sahf
fsubr
sbb
test
test
ja
aas
clc
arpl
mov
sbb
xor
outsb
sbb
movsb
jnp
add
pop
add
mov
jmp
hlt
scas
shll
ljmp
add
xchg
out
mov
sub
int
xor
mov
loope
pop
mov
fdivrs
or
mov
mov
sbb
add
xchg
inc
sub
mov
cmp
push
ss
aaa
lods
fwait
aad
and
inc
sub
adc
add
ds
inc
enter
fmull
ret
push
and
cmp
data16
xchg
icebp
cmpsl
or
fisttps
scas
push
pop
inc
jo
gs
rcrb
mov
std
testb
push
inc
enter
fabs
ret
cmpsl
jecxz
sub
xchg
push
add
sub
xor
lcall
xorb
mov
cmpsl
insb
mov
jge
xor
xchg
push
fstpl
push
ja
outsb
sbb
xor
cmp
addr16
ror
ds
repz
dec
xchg
iret
cwtl
movb
sub
leave
push
nop
fdivrl
lock
sub
dec
jo
dec
sbb
lret
insb
stos
movl
sub
cmp
mov
bt
cmpb
pop
mov
jbe
daa
lahf
vpsrlq
inc
xchg
or
stc
outsl
mov
out
push
dec
jl
lods
int
mov
adc
or
call
mov
imul
inc
push
push
adc
lods
sub
mov
jno
lret
cmp
data16
jg
push
lahf
sbb
in
and
jle
pop
test
iret
and
fsubl
ljmp
repz
sub
jns
sub
fstpl
shll
inc
mov
mov
pop
lcall
out
add
fdiv
and
and
lds
mov
cmp
push
insl
push
arpl
xor
sub
pop
clc
add
adc
scas
mov
lret
enter
jmp
inc
inc
lret
ja
repnz
dec
rclb
cltd
aam
arpl
inc
xchg
adc
mov
lret
enter
mov
lret
push
fcoms
xor
xor
push
lock
arpl
sub
push
iret
push
inc
repnz
mov
decl
jo
fimull
jle
pop
loope
and
mov
maskmovq
ucomiss
movsl
sbb
push
jnp
cmp
pop
xlat
lods
pop
addr16
sbb
adc
add
cmp
pop
leave
adc
es
pop
lret
cmpsb
or
or
dec
int
fwait
rcrl
mov
jae
sbb
cld
leave
mov
xor
in
adc
bound
dec
lea
shrb
into
test
mov
fwait
add
je
movsb
xchg
dec
fs
cld
cld
add
xchg
adc
rcll
aad
jo
inc
adc
lock
rclb
push
and
arpl
inc
mov
imul
jae
sbb
mov
test
in
mov
lret
and
push
decb
fldl
and
inc
insb
sbb
xchg
pushf
ja
pushf
ds
jns
xchg
stos
pop
and
int
scas
pop
fdivrl
xchg
xlat
cmpb
mov
loopne
loop
or
imul
dec
arpl
in
mov
mov
rcll
jmp
outsl
xor
shrl
icebp
pop
ja
and
mov
lahf
dec
nop/reserved
icebp
fcoml
jmp
scas
lret
aaa
cltd
and
mov
out
xchg
les
push
mov
pop
jae
fadd
adc
mov
push
inc
ds
push
inc
jo
add
xor
pop
nop
fldt
inc
jbe
je
scas
sti
dec
lret
out
cmpsb
dec
ret
loope
push
lds
mov
test
mov
dec
add
call
sub
lret
or
pop
mov
ja
dec
mov
sub
ret
jle
jnp
adcl
ja
rcll
and
in
out
out
dec
cwtl
lea
or
mov
fldt
imul
or
cmp
rorl
pop
cmp
fiaddl
jne
add
mov
xlat
inc
ds
fs
scas
mov
push
jne
in
adc
cltd
mov
movsb
pop
shr
popa
dec
outsb
jl
mov
xor
test
dec
loopne
mov
rolb
sub
jmp
mov
jns
or
jle
std
push
call
push
mov
xor
sbb
aas
add
jo
out
mov
aam
push
sar
or
movsl
pop
mov
jo
xchg
pop
push
test
ljmp
aas
xor
xchg
adc
mov
data16
in
jmp
sub
xor
out
add
inc
xor
shlb
adc
dec
push
stos
sub
push
add
jp
add
scas
nop
pop
xchg
mov
sbb
xor
mov
testl
sub
jge
or
int
mov
insl
ret
movsb
mov
lods
sbb
test
xor
jmp
fs
xchg
imul
push
xchg
cwtl
daa
cmp
xor
push
in
xchg
add
shlb
mov
push
popa
push
cwtl
mov
mov
xchg
cmp
cmp
lds
jnp
push
mov
cmc
mov
dec
add
and
lea
cli
add
or
xchg
add
sbb
dec
punpcklwd
iret
lret
dec
jmp
out
out
mov
arpl
push
pop
insb
lea
sub
xchg
jo
fs
mov
cmp
dec
imulb
pop
sar
lods
xor
popa
pusha
dec
jmp
jns
adcl
inc
mov
add
dec
push
sbb
add
push
test
packssdw
inc
jge
arpl
cli
mov
push
out
in
les
test
mov
lds
imulb
lcall
fwait
cwtl
inc
lea
xchg
adc
or
cmp
cmp
aad
bound
sbb
pop
negb
loopne
dec
ljmp
fistpl
in
test
and
mov
inc
adc
cmp
in
cmpsl
mov
shrl
ja
inc
sbb
and
push
xor
jns
cmp
shlb
or
arpl
sub
insl
dec
pop
icebp
pop
add
xchg
movsb
mov
in
repnz
mov
push
out
aam
mov
popa
stc
jecxz
jecxz
cltd
dec
adc
mov
ss
add
xchg
ja
cmp
inc
jge
xor
mov
mov
inc
jl
sub
mov
shrb
mov
mov
fldl
inc
mov
or
push
repz
jbe
and
repnz
xchg
bound
xchg
or
inc
orl
cmp
jge
in
pop
xlat
xorb
in
mov
and
inc
jne
fisttps
stos
dec
loope
js
dec
cmpsl
mov
xchg
jecxz
inc
das
sub
add
test
mov
jle
lret
loopne
mov
add
rcll
sbb
mov
lret
popa
pop
fldenv
mov
jne
out
sar
cmp
in
mov
add
gs
jl
orl
fimuls
and
pop
clc
and
test
int
rcr
test
lea
pusha
adc
dec
aad
adc
insb
mov
out
movsl
addr16
in
pop
fnstenv
dec
xchg
mov
icebp
das
data16
jns
addr16
imul
cs
dec
fdivs
rclb
push
or
aad
mov
pushf
test
push
popa
mov
test
repnz
iret
call
xchg
inc
push
mov
xchg
dec
addr16
loop
push
adc
je
bnd
mov
pop
popl
ficoml
mov
lods
and
cmpsb
aam
dec
add
gs
daa
lea
xor
sbb
mov
or
xorb
cmp
pop
fdiv
lcall
inc
mov
mov
out
movsl
xor
mov
jno
es
ret
cmpsl
in
mov
mov
pop
mov
mov
add
pop
out
mov
fwait
daa
jmp
jmp
fists
mov
mov
aad
cmp
fs
jmp
pmaxsw
xor
adc
push
dec
mov
cmp
push
les
in
mov
enter
out
mov
cmp
jl
xor
or
mov
mov
sbb
dec
fwait
push
into
push
pusha
scas
mov
add
dec
sti
push
fistpll
cwtl
dec
lods
out
adc
cmp
sub
sbb
test
sbb
pusha
fbld
clc
add
mov
xchg
icebp
test
xor
mov
jbe
mov
loopne
clc
cmpsb
xchg
push
mov
fmuls
icebp
pop
inc
outsl
call
pusha
mov
mov
pop
ret
xchg
sbb
ret
aaa
ror
push
data16
and
lock
and
jg
inc
xchg
xor
jmp
mov
mov
jmp
dec
push
add
lods
shrl
pop
cmp
ret
cmp
adc
or
out
lcall
js
mov
inc
adc
cmc
add
stc
inc
loope
fucomi
mov
test
push
mov
in
mov
sub
jae
faddl
sbb
shrl
push
clc
xor
in
cmp
jno
lea
testl
push
imul
popa
out
and
in
gs
mov
ds
fdiv
mov
mov
dec
dec
inc
test
mov
pop
out
aam
jo
pusha
cmp
or
lds
lods
push
xor
mov
xor
sbb
add
push
cmc
sti
out
xchg
fmull
push
das
dec
sbb
movsl
push
jp
je
sub
andl
mov
subb
mov
xchg
adc
cmpb
lods
fcoms
jb
popf
xchg
fdiv
and
mov
test
popf
dec
inc
adc
pop
pop
outsb
in
jb
jns
and
cwtl
int3
stos
into
mov
test
pop
pop
fwait
pop
adc
jno
mov
adc
pop
fimull
lret
dec
in
jae
pop
add
imull
out
sub
cmp
pop
dec
pop
je
dec
mov
mov
ret
cmp
pop
jg
pusha
mov
jno
cmp
ds
iret
sbb
int3
and
inc
push
xchg
add
or
pop
sti
jnp
cmpsl
in
inc
xchg
sbb
in
shrl
jns
jl
jbe
push
push
dec
add
mov
push
mov
stc
mov
sbb
mov
push
pop
aad
lods
aas
cmp
or
stos
sbb
insl
cmp
jbe
xchg
roll
or
icebp
std
arpl
popf
lods
cmp
push
sub
stos
test
cld
rcll
push
push
iret
and
or
and
xor
dec
or
mov
cltd
mov
in
add
mov
sub
xor
dec
xor
xchg
dec
sbb
jmp
outsb
mov
lcall
sub
push
xchg
mov
mull
iret
cmp
lods
repnz
or
jns
dec
testl
mov
in
sahf
or
jo
adc
pop
cmpxchg
xlat
sub
imul
sbb
shll
mov
fistpl
jge
lods
movsb
movsb
cmp
add
scas
loopne
lahf
push
stc
sbbb
xchg
in
mov
and
vpsraw
pushf
ljmp
inc
push
mov
lcall
and
lfs
les
and
xchg
add
mov
imul
ficompl
cmp
mov
and
or
push
int
mov
dec
jl
push
movsb
movsb
std
mov
jbe
setns
aam
enter
or
bound
outsl
sub
and
mov
mov
sahf
adc
mov
xchg
ds
xor
pop
xchg
dec
ja
js
rorb
pusha
or
push
adc
mov
scas
hlt
push
sbb
mov
dec
cld
in
jae
lds
enter
aad
sub
sbb
repz
dec
loopne
ss
rcll
test
test
ret
sub
xlat
ficompl
pop
and
popa
fnsave
insb
movsb
bound
mov
inc
insl
jg
mov
popf
jmp
mov
int3
lcall
adcb
pop
pop
or
sbb
cmp
repz
push
pushf
jmp
push
push
stos
xor
pop
pop
pop
xchg
testl
sbb
add
and
push
lret
dec
push
push
sahf
test
pop
xchg
mov
xchg
lods
aad
movsb
adc
dec
push
xchg
adc
cs
ja
dec
pushf
xor
cmp
sub
inc
mov
fsubl
je
mov
in
in
jle
ljmp
stc
in
xchg
add
push
dec
and
dec
adc
inc
mov
push
and
or
ljmp
or
mov
add
stc
xchg
inc
es
push
sbb
daa
inc
push
lods
mov
xchg
push
pop
mov
jecxz
imul
in
jl
repnz
and
pop
mov
inc
pop
loopne
inc
mov
push
and
out
int3
leave
mov
cmp
int
cmc
push
jb
and
xchg
test
aas
mov
and
mov
pusha
add
call
test
or
and
lahf
adc
int3
imul
xor
and
push
cmp
adc
dec
mov
fistpll
outsb
jl
push
mov
adc
lea
xchg
push
bound
mov
lahf
scas
pop
popf
adc
jno
in
inc
xchg
push
cmp
jg
jae
lcall
out
daa
sub
or
jne
frstor
insb
pop
test
mov
mov
mov
out
mull
incl
in
cmp
push
push
mov
add
addr16
test
rcl
xor
pop
jl
mov
mov
lcall
in
lds
xchg
imull
push
mov
mov
loopne
insb
dec
pushf
loope
sub
xchg
into
movsl
xchg
cld
jbe
ja
popf
adc
es
xchg
lods
ret
jne
sbb
sub
popa
enter
push
testl
cmpsb
jb
mov
mov
rolb
lcall
pushf
pop
xor
mov
dec
add
data16
out
and
mov
mov
es
cld
lret
clc
mov
clc
add
adc
mov
les
loopne
add
mov
jno
jnp
roll
inc
and
out
xbegin
mov
dec
loope
in
std
aam
mov
jp
orb
pop
and
popa
in
adc
ss
sarl
add
loopne
dec
pop
insl
pop
add
mov
add
scas
lds
mov
call
add
lret
addr16
aas
hlt
and
loope
cmp
push
test
mov
cmp
xchg
push
cmp
lods
cmovle
lcall
ljmp
negl
in
stos
wrmsr
clc
fcmovbe
and
repnz
cmpsl
and
int3
mull
mov
lods
push
mov
xor
ds
jne
movsl
lcall
out
cmp
out
loopne
sub
xor
test
sbb
jl
pop
in
or
mov
inc
clc
pop
xchg
sbb
mov
mov
imul
mov
push
bound
xchg
fimull
jo
cltd
sub
ja
shll
ret
xchg
stos
movsl
test
lock
cmp
fisubrl
or
cmp
xchg
ret
mov
xlat
cmp
push
outsb
cmpsl
pop
sahf
mull
mov
sbbl
inc
adc
sub
cmp
int
sbb
pusha
mov
dec
inc
mov
bound
call
adc
mov
mov
lahf
mov
xor
inc
scas
repnz
push
insb
xchg
in
fst
iret
mov
jmp
fdivs
nop
aam
clc
jbe
mov
insb
cli
inc
jmp
addl
daa
bound
daa
in
inc
das
mov
mov
sbb
fdivrp
mov
pop
fcmovu
dec
mov
fwait
mov
addr16
popl
fdivl
add
inc
mov
jo
sahf
inc
cmpsl
cmp
or
push
push
pusha
loopne
or
pop
pop
push
lds
cld
push
pushf
fcmovne
dec
pop
xchg
mov
sub
push
jmp
sub
faddl
dec
jg
iret
jg
arpl
jecxz
push
ds
cwtl
mov
jle
xchg
dec
mov
jl
xchg
clc
mov
adc
xchg
jecxz
xor
add
fsubrp
fists
lock
clc
cmp
jmp
fisubrs
mov
test
xorl
fnstenv
fnstcw
lcall
add
add
sbb
inc
sbb
cmp
cmp
mov
mov
adc
out
aad
cmp
das
pop
pop
fisubl
jp
js
dec
mov
dec
in
adcb
dec
jbe
ret
inc
mov
push
lret
or
fstpt
mov
pop
cltd
es
mov
pop
sbb
mov
ficomps
bound
adc
sbb
and
lret
mov
dec
xchg
and
xchg
or
mov
in
sarl
sbbb
dec
lcall
clc
daa
xchg
iret
ror
xchg
int
dec
ja
xchg
pop
or
push
in
arpl
les
scas
insl
repnz
rorb
jmp
dec
in
mov
je
ja
orb
push
mov
stos
pop
fcomps
push
push
push
push
adc
sbb
mov
push
cmpsb
jge
pop
or
test
and
jmp
push
cld
add
clc
add
push
lahf
jecxz
ja
pushf
pop
add
enter
in
lret
push
mov
xchg
dec
push
adc
xor
icebp
fcompl
fcompl
cld
xor
sbb
mov
pusha
push
fs
sub
int3
xchg
jecxz
fsubr
inc
lret
call
pop
sub
jp
test
lods
mov
inc
into
mov
dec
pop
fcoms
sub
inc
mov
mov
add
shll
stos
imul
xchg
addr16
push
les
out
mov
pshufw
pop
mov
dec
dec
popa
ret
sub
movsb
xor
jmp
pop
push
xchg
pop
loop
cmp
fwait
inc
mov
dec
jae
test
add
mov
insb
loopne
adc
and
sbb
cli
stos
ja
xchg
lods
ja
or
mov
in
idivl
cli
adc
aad
inc
mov
lcall
sbb
ret
xchg
xchg
mov
mov
fwait
das
aaa
mov
xchg
xchg
sub
pop
mov
adc
mov
and
jp
pop
pushf
cwtl
xchg
jns
xor
pop
aad
push
cmp
sbb
or
ja
roll
in
shrl
insl
or
fs
pop
cmp
cmp
jno
rcr
outsl
fidivl
test
dec
inc
or
adc
push
inc
in
out
mov
stos
stc
popa
or
jp
lods
repnz
sub
fadd
mov
jle
sbb
out
or
gs
mov
imul
push
lahf
sbb
cmp
popa
outsb
cmp
popa
xchg
push
or
cli
ret
jmp
and
aas
sub
pusha
jp
xchg
jns
in
xchg
fxch
ret
pop
xor
inc
xchg
pop
insb
or
in
xlat
ljmp
in
fstpl
push
stc
mov
addr16
mov
xor
pop
or
sub
es
mov
loop
stc
dec
sbb
stos
icebp
fildll
push
dec
jge
pop
in
inc
out
test
mov
sbb
pushf
pop
arpl
add
adc
cmpsb
xchg
mov
sbb
xor
push
push
fisubs
jecxz
daa
je
mov
cmpb
add
fadd
clc
in
sbb
ret
sub
inc
stos
push
pop
xor
xor
cmpsl
push
sbb
mov
add
std
mov
mov
ss
std
push
push
mov
lds
lret
insl
repnz
mov
or
cmpsl
in
stc
loop
movl
out
stc
add
fistl
or
data16
test
mov
jo
movl
lods
add
shlb
mov
and
fsubrl
xchg
idivb
mov
hlt
cmc
dec
ficompl
mov
insb
add
inc
dec
or
xchg
outsl
loop
aam
push
inc
push
pop
mov
xor
ret
inc
loopne,pt
jns
out
sahf
movsb
testl
or
pop
mov
jb
loop,pn
dec
inc
shll
push
aam
imul
sub
push
xchg
aam
mov
leave
std
rcll
and
std
aas
out
inc
sub
and
shl
inc
xor
mov
jge
push
jbe
adc
dec
fwait
inc
call
jno
push
push
cld
mov
push
inc
push
ds
das
mov
push
adc
nop
xor
rep
sub
mov
test
in
pop
lcall
pop
sbb
lcall
jecxz
xlat
nop
fdivrl
shll
cmc
dec
sub
xor
dec
cmp
xor
jbe
dec
xchg
out
les
and
lds
xlat
and
jb
faddp
inc
add
mov
mov
bound
and
pcmpgtb
leave
add
stos
inc
leave
adc
xchg
fcmovnu
cmp
jo
stc
aam
mov
mov
mov
add
inc
adc
xlat
adc
cmp
in
out
and
pop
xchg
and
ret
into
cmp
adc
fstp
cmp
jle
push
xorb
rclb
js
cmp
pop
mov
divl
mov
insl
or
mov
test
inc
mov
jg
jns
popf
pop
add
icebp
fstpl
or
popa
and
dec
xchg
aas
adc
scas
ret
sbbb
lock
lcall
fs
clc
hlt
cwtl
lds
shl
mov
jbe
clc
shrl
lea
test
inc
stos
loopne
and
inc
push
ret
faddl
xor
rol
mov
cmpsb
cmp
push
ss
daa
daa
xor
icebp
dec
mov
adc
nop
add
pop
cmp
in
and
pop
mov
push
cmpsb
int3
dec
adc
mov
ret
fucomi
cmp
mov
mov
mov
clc
aam
fwait
jge
xchg
and
xor
push
aam
cmp
cmp
lods
push
gs
fnstsw
mov
inc
pushf
jmp
and
adc
mov
push
jecxz
shl
xchg
loopne
js
jno
xchg
jg
jge
testb
or
or
pop
cmp
popf
inc
add
sbb
mov
pop
jo
int3
cmp
xchg
xchg
mov
xor
pop
pushf
stos
in
dec
fs
cmp
inc
icebp
cld
mov
dec
cmp
inc
sbb
call
or
mov
and
push
cs
or
outsl
mov
cld
xchg
or
push
jmp
scas
call
adc
iret
imulb
jecxz
and
mov
mov
imul
lret
test
fdivrl
or
enter
cmp
and
cltd
ds
sahf
cld
in
std
leave
xchg
sub
mov
push
fisttpll
aam
xchg
jae
xchg
pop
fnsave
aam
sti
insl
lods
call
fdiv
jb
sbb
cmp
fcomi
bnd
xchg
leave
inc
cmp
aas
movsl
mov
iret
and
imul
lret
xchg
sub
jno
and
dec
jbe
and
repz
andl
insb
pop
pop
sbb
repnz
jbe
dec
push
mov
dec
mov
frstor
negl
xchg
in
loopne
and
repnz
loop
sbb
mov
inc
shlb
fistpll
xor
icebp
pop
lcall
lods
push
cmpl
in
add
inc
int
jbe
test
lahf
lea
sub
dec
mov
sub
cmp
arpl
cli
jle
xor
mov
mull
pop
loope
inc
es
sbb
mov
dec
hlt
push
push
xor
subl
cmp
loop
and
jb
or
xor
lret
out
into
pop
sub
push
call
adc
std
sub
mov
adc
jne
mov
in
sub
femms
lret
push
pop
fstl
fcom
scas
and
lret
call
sub
in
cmpsb
mov
jge
jmp
repnz
push
popf
scas
mov
scas
lcall
loopne
dec
cmp
jae
sbb
jg
pop
leave
jge
mov
sbb
aas
nop
mov
add
push
lods
inc
leave
jecxz
jb
or
pop
in
xchg
adc
stos
sub
ror
mov
xchg
and
leave
dec
andb
jns
mov
loopne
dec
and
js
movsb
or
je
add
and
jnp
xor
inc
into
sbb
in
mov
sahf
aas
add
mov
cmp
mov
and
loope
push
jmp
leave
add
sbbl
popa
mov
dec
xchg
out
and
jge
lret
test
xchg
adc
and
test
fsubp
call
inc
jle
mov
mov
mov
inc
jmp
aas
shl
fdivrs
icebp
stos
ret
arpl
push
stos
mov
test
cld
jle
int3
jge
decl
loope
and
gs
push
repz
leave
hlt
cs
sub
lahf
stos
xchg
cmc
lds
push
inc
aas
loope
push
cmp
cwtl
loopne
and
mov
outsb
or
or
jb
outsb
lret
cwtl
add
sbb
inc
bnd
push
adc
jl
and
aam
roll
cmp
mov
lahf
sbbb
hlt
mov
btr
dec
xor
push
int
sub
iret
or
add
out
out
hlt
stos
shrl
lret
sub
ljmp
inc
and
lods
sti
add
add
subb
add
mov
fwait
and
xchg
mov
xor
and
push
add
sub
stc
fsubl
mov
adc
popa
psraw
xchg
out
pop
pop
jl
push
push
xchg
dec
jmp
orb
sub
pop
ja
mov
cmp
jle,pn
test
mov
jmp
pop
fadd
rol
faddp
cs
mov
pop
dec
or
mov
xor
outsb
or
out
adc
loope
call
or
mov
xorb
jg
mov
mov
insl
mov
dec
push
mov
sbb
cld
jnp
outsb
fs
stos
mov
jnp
jg
test
gs
push
scas
inc
fcoml
add
mov
mov
xchg
sarb
cmp
outsb
xchg
out
cmp
jg
add
pop
in
int
sbb
inc
inc
jbe
cmp
in
or
pop
mov
jge
lea
enter
hlt
push
cmp
xchg
out
push
scas
mov
call
ficomps
stos
int3
ret
lock
mov
stos
or
test
outsb
dec
loop
lcall
sbb
jnp
and
and
push
repnz
in
inc
in
pop
mov
ja
add
outsl
cmpsl
fisttpl
jae
inc
bound
ud1
pushf
out
repz
insl
adc
mov
data16
and
cmc
xor
inc
mov
rcrl
jb
dec
add
push
cltd
push
lahf
inc
push
sbb
dec
lods
cmp
daa
lea
pop
cmc
aam
in
int3
les
inc
pop
cmp
test
cs
mov
pop
les
shll
sub
sub
and
lods
sub
jno
dec
push
push
fwait
jmp
sub
inc
pop
jns
xchg
push
xor
das
jp
rcl
inc
lahf
mov
jmp
cld
cmp
xchg
roll
fmuls
cmc
xchg
fstl
inc
mov
or
inc
or
shrb
stc
xchg
sbb
pop
fidivrs
sarb
xchg
and
enter
cmp
ds
push
mov
pusha
pop
jp
in
sbb
push
imul
btc
std
aas
aaa
inc
push
jae
mov
cmp
das
jmp
scas
jbe
in
xor
push
gs
in
scas
rolb
arpl
jo
scas
test
xchg
jecxz
repz
lods
jno
in
mov
int3
xor
mov
out
and
lret
sahf
shl
mov
mov
adc
inc
insl
fstps
pop
sbb
mov
repz
stos
sbb
dec
adc
mov
add
jo
aam
xchg
insl
js
mov
and
xchg
add
fwait
and
into
pop
bound
cmpsb
cmc
aaa
hlt
dec
je
or
mov
loope
iret
mov
inc
insb
movsl
xor
or
inc
push
nop
push
fnstcw
inc
ljmp
and
dec
push
ljmp
push
xor
lret
inc
stos
int3
or
mov
into
mov
sub
dec
xchg
mov
xor
cmp
mov
les
ret
lock
xor
pop
jb
jbe
sub
sub
popa
nop
xor
enter
fprem
mov
mov
call
adcb
mov
sub
sub
cs
cltd
add
jecxz
dec
gs
jg
inc
test
rdmsr
sub
je
cmp
lcall
icebp
jp
or
js
and
wrmsr
push
lahf
int3
mov
rcl
data16
cli
cmp
xorb
nop
loop
daa
fstl
hlt
lods
xchg
sub
in
fisttpl
cmp
movb
cld
std
xor
ljmp
jge
shlb
jl
or
xor
mov
inc
push
lret
pushf
xchg
xor
fisubl
or
cmpsb
xor
pop
and
shll
cmp
cmp
test
in
out
and
add
inc
cld
dec
jns
dec
mov
popf
mov
pop
iret
dec
push
aaa
inc
out
nop
fwait
outsb
rclb
inc
out
movsl
bound
jp
add
movsl
xor
adc
xor
pop
insl
add
push
add
jge
pop
push
jcxz
stos
inc
push
pop
pusha
insb
jecxz
je
enter
stos
insl
pop
in
mov
mov
lea
aas
pop
cmp
dec
rdpmc
popf
pop
leave
rcrl
and
mov
mov
and
jecxz
mov
xor
and
jne
pop
addb
cs
lret
sub
and
cli
fadd
inc
mov
or
sbb
sub
rcl
orb
push
add
adc
xchg
cmpsl
in
popf
lds
movsl
es
pusha
cmp
mov
repnz
adc
stc
sti
scas
push
or
push
jle
push
lods
pusha
jmp
pop
jb
dec
sub
and
cmpl
loop
xlat
roll
lahf
outsl
sub
test
test
ficompl
dec
arpl
icebp
jl
lods
jbe
mov
movsb
fmull
lods
mov
and
test
cli
fists
mov
or
popf
mov
pop
dec
push
fimull
sbb
repnz
xchg
rclb
shll
sub
out
ret
outsb
or
je
cmp
push
lock
push
cmp
data16
and
je
out
mov
mov
push
in
pop
test
pop
movsb
add
pop
xchg
jb
iret
jns
pop
dec
andb
sbb
int3
loop
lahf
inc
data16
dec
sbb
cwtl
push
das
pop
pusha
xor
testb
cmp
lcall
pop
sbb
xchg
add
repz
lcall
adc
mov
lock
arpl
dec
out
ds
add
cmp
arpl
and
repz
pop
cli
sub
xor
mov
iret
push
jle
cmp
je
jp
ljmp
test
sbb
rorl
pop
pop
subl
xor
mov
loopne
rcr
adc
addb
xor
mov
dec
jno
jg
lds
repz
subl
adc
sarl
or
arpl
rcr
aas
test
and
shlb
sub
test
hlt
cmp
dec
sti
sarl
cmp
xchg
hlt
xchg
dec
mov
fdivl
cld
mov
rcrb
ss
mov
push
movsl
mov
loopne
pop
mov
int3
and
test
bound
push
or
ss
inc
adc
mov
mov
or
in
faddp
sahf
cmp
shlb
fwait
repz
or
ret
addr16
lcall
sbb
mov
testl
sub
insb
inc
movsb
dec
insl
jae
jns
cmpsb
stos
cmp
xor
popa
adc
sub
into
fcompl
mov
nop
inc
dec
adc
loope
mov
push
fbstp
imul
ret
pop
mov
int
mov
hlt
pop
js
arpl
pop
movsb
aaa
jb
sarb
jle
data16
or
ret
rolb
roll
xchg
mov
push
out
cmc
sbbl
fnstcw
xchg
pop
cmp
inc
into
sub
aad
out
push
xchg
or
mov
in
cmpsb
hlt
xor
mov
push
lahf
faddl
ds
xchg
into
mov
aas
inc
sub
inc
in
fidivs
paddb
xchg
inc
push
ljmp
imul
pushf
mov
dec
lds
jecxz
rcll
xchg
mov
dec
jl
sub
push
sbb
add
mov
shlb
jle
imul
cmpsl
icebp
mov
adc
enter
or
push
dec
fsubrl
and
test
bound
jge
outsb
xchg
sbb
push
stos
cs
add
loopne
inc
inc
iret
xchg
in
push
pop
dec
or
xchg
mov
scas
sub
or
pop
mov
and
lds
cmp
push
dec
mov
jl
xchg
adc
in
xlat
cmpsl
adc
sub
xchg
jge
jno
in
mov
lods
cmp
outsb
push
aam
xchg
fadds
jp
cmp
and
mov
outsl
push
add
shrl
cmp
pop
rorb
or
repnz
inc
ret
dec
push
lret
call
fwait
mov
ja
hlt
cs
lea
xchg
ljmp
fwait
inc
mov
stos
aas
dec
jae
sub
out
mov
and
out
or
sar
xlat
mov
add
and
enter
dec
push
mov
xchg
jns
out
daa
jae
jae
divb
pop
push
and
cmp
dec
xchg
push
scas
mov
scas
shr
sahf
xchg
sbb
in
jne
lds
lods
lahf
or
movl
jns
ret
xchg
mov
and
iret
or
fcomp
test
add
out
das
sub
xchg
mov
cltd
ret
call
sub
lahf
stos
push
add
scas
xchg
jg
lahf
pop
adc
dec
scas
cld
cmp
jns
xchg
xor
fwait
into
push
imul
pop
dec
or
mov
xchg
shlb
push
push
xchg
outsb
lea
into
sub
sub
mov
ljmp
test
scas
out
imul
push
xchg
mov
mov
add
movsl
arpl
cmp
push
mov
lcall
xchg
jp
dec
clc
cmp
imul
daa
dec
add
xor
fsubr
xlat
cltd
shrl
add
dec
out
jbe
stc
mulb
cmpsl
dec
jp
loope
ss
mov
inc
pop
mul
cmpsb
mov
insb
jecxz
cmp
and
mov
pop
pop
push
in
push
and
dec
xchg
subb
insl
enter
mov
jge
mov
lds
add
fs
mov
add
fabs
jg
repnz
pop
cwtl
int
fistpl
leave
lea
repz
ret
jge
or
push
aad
dec
mov
ds
ficoms
ja
jl
fstpt
adc
int
inc
icebp
xor
icebp
scas
jle
jnp
testl
lret
mov
mov
mov
pop
xlat
jnp
mov
imul
in
adc
xor
bound
fcmovu
inc
push
mov
sbb
cmp
jmp
sbb
inc
popa
inc
or
movsl
push
sub
lret
pop
cmp
and
ret
mov
pop
mov
ret
inc
adc
stos
stos
stos
add
mov
insl
divb
dec
bound
and
jo
sub
outsb
push
in
push
cltd
into
and
xor
cmp
add
mov
test
cmc
rcrl
enter
and
popf
xchg
mov
add
pop
test
sub
mov
shrb
xlat
inc
pop
push
out
rorl
js
out
cmpsb
mov
push
inc
movb
ret
sub
mov
daa
sbb
jae
mov
jae
popa
gs
or
dec
clc
nop
pop
es
xchg
mov
xchg
mov
es
ficoml
hlt
divl
inc
xor
pushf
ljmp
xchg
xchg
lea
enter
push
outsb
filds
dec
add
std
lods
sahf
out
std
mov
stc
mov
jg
lock
das
dec
xchg
mov
lret
and
mov
fbld
adc
movsl
les
ss
cmpl
push
xor
push
jne
fwait
cmpsb
aam
movsb
scas
push
adc
leave
pop
daa
int
jl
mov
jl
jle
jae
shlb
ljmp
and
mov
pop
xor
mov
adc
push
pop
push
add
lods
insl
aaa
sbb
mov
sub
mov
ss
sub
push
jno
mov
cld
sbb
daa
mov
mov
js
nop
push
dec
lods
adcl
stos
adc
std
ss
into
jbe
out
aas
xchg
testl
mov
movsl
mov
test
mov
mov
aas
push
add
adc
dec
inc
rclb
xchg
or
mov
sarb
pop
icebp
mov
mov
cltd
in
or
out
jl
sbb
daa
cmp
repnz
pushf
push
fisttps
lcall
repz
dec
vmovupd
jae
adc
daa
dec
jmp
cwtl
push
inc
mov
lock
repnz
xchg
es
jno
in
mov
push
pop
sub
push
mov
aad
mov
lret
sbb
cmpl
mov
push
inc
test
cli
pop
inc
sub
loop
pop
dec
scas
pop
out
enter
idivb
lret
and
sahf
xchg
movsl
or
test
xlat
ret
push
mov
andl
shlb
mov
add
push
cmp
movsb
addb
outsl
enter
cmp
mov
je
push
mov
sbb
popf
popf
xchg
test
outsl
and
fbstp
ss
dec
inc
ds
aaa
std
inc
mov
xlat
repnz
push
lahf
movsl
dec
nop
insl
jb
or
cmpsl
fisttpl
sub
out
mov
shl
loop
fcoml
nop
aaa
dec
sub
xor
pop
out
fistl
adcb
dec
jecxz
movsb
xlat
mov
lods
fimull
call
push
push
lods
out
jecxz
clc
lods
push
cmp
out
aas
pop
and
lea
xor
or
pop
push
mov
add
xchg
mov
add
std
add
clc
pop
outsl
rcrl
mov
outsb
test
push
or
pushf
dec
or
mov
push
mov
roll
inc
cmp
sbb
dec
hlt
bound
outsl
inc
cmp
inc
mov
outsl
dec
in
jecxz
sahf
flds
or
dec
xchg
imulb
push
mov
adcb
jb
clc
sub
pop
mov
movsb
out
int
and
push
add
push
repz
call
imull
mov
cmpsb
pop
popa
stos
das
sub
inc
out
push
pop
fs
xlat
add
mov
negb
inc
cwtl
push
ds
ss
xchg
dec
jnp
sbb
push
ret
jecxz
int
sarb
add
push
aas
jbe
fdivrs
push
cmpsb
inc
loope
xchg
rcll
cltd
add
in
pop
lods
shlb
stc
xchg
mov
xchg
mov
sub
cmp
rcrb
imulb
xchg
push
dec
fstpt
jmp
dec
push
sbb
stos
mov
test
jmp
adc
push
jbe
sbb
std
mov
jg
and
pop
pop
add
ljmp
mov
add
aad
pop
outsb
pop
inc
push
cmp
pop
roll
mov
mov
cld
je
addr16
les
adc
inc
out
mov
mov
jno
add
int
cmp
test
dec
sub
jg
inc
mov
clc
xor
adcl
inc
mov
lea
out
jmp
out
cmp
dec
mov
repnz
js
call
pop
std
adcl
and
mov
adc
pop
sbb
les
bound
testl
scas
out
mov
and
inc
mov
cmp
xchg
movl
hlt
mov
jmp
and
divl
add
jne
mov
push
jb
xor
pop
in
loopne
je
or
mov
mov
test
test
xor
repz
int
dec
lods
xchg
negl
ja
pop
test
sbb
mov
fmulp
jge
fildll
icebp
mov
jmp
outsl
inc
hlt
mov
fwait
cs
lahf
in
rcr
inc
mov
bound
push
xchg
shrl
and
pop
scas
xor
mov
in
scas
mov
data16
or
sbb
xchg
xchg
sub
inc
xlat
push
cwtl
and
mov
push
pop
ret
enter
test
gs
add
push
jbe
repnz
outsb
xchg
mov
fisubl
xlat
dec
cld
add
xor
outsb
inc
jg
test
sbb
cmp
ja
les
std
cmp
jmp
pop
gs
stos
hlt
lcall
or
push
push
ja
call
pop
inc
push
pop
pop
mov
adc
sarb
int
lahf
test
push
fisubrl
jns
sbb
inc
lcall
gs
cmp
pop
push
movsl
push
pop
xchg
das
xor
imul
leave
pop
mov
test
sub
add
test
cmp
cmp
pop
out
cmp
popl
pop
pop
in
mov
enter
mov
push
mov
inc
xchg
mull
jle
mov
pushf
push
sbb
push
stc
std
xor
mov
jo
popf
adc
add
data16
int3
fs
testl
stc
inc
fcoms
jns
std
mov
das
fbstp
mov
test
push
jmp
mov
push
sbb
scas
daa
cmpsl
adc
mov
clc
test
lods
push
stos
outsb
mov
push
xlat
or
int
push
sahf
mov
cmpsl
shll
adc
add
add
sub
xor
and
movq
mov
jne
scas
sub
out
fstpt
bound
adc
lcall
xchg
lea
mov
xor
adc
negb
fiaddl
sub
push
mov
dec
mov
push
jge
mov
xchg
adc
dec
mov
mov
mov
sbb
or
dec
add
faddp
pusha
mov
jg
dec
js
push
pop
aaa
sbb
jp
stos
fildl
pop
ficomps
lods
insl
push
hlt
sub
lds
cmp
out
xor
pushf
mov
add
jl
jb
and
xchg
jmp
cli
test
xor
and
cmp
sbb
pushf
xchg
sbb
cmp
rorl
and
xchg
out
sub
ja
push
pop
pop
dec
addb
aam
xor
adc
lret
and
pop
sbb
inc
call
mov
pop
push
inc
jge
push
dec
pop
fiaddl
dec
test
push
sti
lods
sbb
loopne
pop
ret
icebp
in
jno
and
in
fists
stos
mov
hlt
xchg
pop
and
sahf
xchg
jne
adc
mulb
outsb
sarb
imul
add
fldl
enter
cmp
or
mov
xchg
mov
mov
pop
nop
cld
cld
pop
mov
std
add
je
sbb
into
adc
popa
xchg
and
lcall
outsb
pop
and
inc
jg
fsub
mov
lods
jmp
in
dec
xor
pop
call
adc
aad
push
in
cmpsb
mov
jmp
dec
daa
mov
aas
pop
dec
lock
mov
pop
fsub
in
add
mov
data16
pop
call
inc
pushf
or
addr16
add
sub
adc
out
movsb
add
out
jle
jae
jbe
fcmovb
xlat
dec
popa
xchg
das
repz
or
xchg
and
lds
outsb
and
ret
jmp
jns
pushf
cmpsb
ja
or
in
leave
mov
dec
loopne
outsl
or
xchg
pop
fiadds
sub
das
ljmp
xor
adc
sub
mov
mov
out
push
pop
jae
scas
mov
and
pop
or
and
xchg
ds
push
and
imul
mov
fs
pop
inc
pop
jl
lods
stc
lods
mov
out
mov
lods
push
int3
dec
lds
scas
test
shrl
xchg
and
lcall
mov
xchg
imul
push
add
cld
xor
dec
fistpl
push
add
outsb
jl
fsubl
sub
xlat
lods
enter
in
cmp
inc
aam
rol
sahf
inc
pop
mov
aad
aaa
fadds
jge
add
insl
xchg
jmp
jp
jne
clc
adc
dec
bound
sbb
adc
in
mov
jge
leave
into
add
xchg
mov
mov
pop
inc
sbb
subl
pop
mov
rcll
lea
pop
xor
push
mov
insb
call
rol
cli
idiv
pop
inc
or
and
loope
jb
lcall
fisttpll
cmpsb
jnp
pop
xor
out
repnz
xchg
push
dec
mov
or
jo
jp
subl
test
fwait
stc
and
mov
test
orl
pop
and
push
xchg
pop
inc
ljmp
add
pop
sub
shll
ret
jp
repnz
pop
scas
ficomps
mov
arpl
push
xchg
jne
jb
test
shll
mov
mov
fstp
xor
cmp
cmp
or
mov
sarb
pop
fs
inc
movsb
mov
aaa
ds
in
call
in
mov
push
movsl
lds
idivb
cmp
pop
mov
and
fstp
mov
push
jb
xor
xchg
mov
sbb
gs
push
or
mov
popw
jle
ss
stos
mov
adc
movsb
repnz
sahf
jne
pop
stos
dec
icebp
testl
add
cld
adc
and
mov
mov
dec
outsl
mov
rcrb
das
push
and
xor
je
sub
pop
movsl
mov
and
inc
jbe
loope
adc
mov
das
cmp
stos
lds
pop
adc
inc
imul
roll
scas
pop
dec
popf
test
mov
xor
inc
cmp
repz
repnz
cmpsl
jmp
mov
mov
or
adc
daa
xchg
pop
jae
adc
mov
test
js
jnp
mov
inc
mov
xchg
je
inc
lock
out
or
cmp
and
or
insb
mov
xchg
jl
jp
cmpsb
dec
leave
push
call
lea
push
in
and
adc
lret
mov
add
mov
pop
push
and
push
mov
shlb
and
add
inc
aad
es
push
xor
jmp
xchg
mov
pop
mov
out
icebp
adc
and
xor
push
and
imul
mov
pop
jg
les
gs
in
push
jns
cmp
out
clc
dec
push
mov
pop
dec
hlt
mov
jns
lret
add
adc
outsl
adc
ret
imul
lock
adcb
or
dec
popf
mov
stos
jbe
pop
subl
int
jns
enter
enter
pusha
xchg
mov
jge
and
lret
push
fwait
scas
pop
leave
pop
or
xchg
xor
insb
sub
enter
in
sub
dec
pusha
test
lea
push
fcmovbe
arpl
ja
mov
fmuls
add
xor
pushf
sub
loope
jl
imul
xchg
cmp
push
pusha
mov
or
js
or
and
daa
stos
dec
sbb
faddl
icebp
mov
popa
inc
push
pop
pop
cli
imulb
std
negb
js
pop
jo
repz
cwtl
ret
out
dec
xchg
shlb
out
mov
out
testl
mov
psubusw
cmpl
adc
outsb
fcomps
adc
jmp
and
test
pop
arpl
fmull
out
lods
pop
sub
neg
adc
jmp
pop
shrb
popl
jge
dec
pop
mov
std
mov
daa
sub
push
fsubrs
enter
jge
inc
adc
cmp
mov
insb
mov
test
repz
ja
frstor
mul
rcl
outsb
in
add
aas
mov
sub
iret
dec
aam
jo
int
les
outsb
int3
imul
mov
ds
fcomps
repz
inc
push
fimull
adc
stos
push
je
jnp
cmc
lcall
add
cmc
adc
data16
jns
pop
fs
jle
es
dec
into
fcoms
jmp
cld
jno
or
ljmp
sbb
xchg
pop
pop
stc
mov
nop
test
hlt
movsl
jne
stos
popf
push
je
cltd
pop
sub
jb
push
mov
mov
push
fdivs
pop
jbe
add
lods
push
arpl
loop
xor
notb
repnz
out
push
sub
arpl
push
andl
in
outsb
fcoms
popf
sub
inc
scas
insl
sahf
and
pinsrw
or
cmc
sub
sub
ds
push
dec
add
daa
sub
pop
dec
je
pop
rcrb
inc
add
mov
jo
pop
push
adc
inc
sbb
pop
in
ljmp
hlt
adc
and
nop
jecxz
test
cltd
movsb
push
sub
arpl
test
loop
mov
fwait
sub
inc
pop
inc
or
pop
insl
mov
ds
add
xor
lcall
int
jl
add
sub
mov
mov
aam
cmc
xor
jecxz
xchg
in
adc
loope
lea
lret
jne
imul
or
fldt
ror
jp
adc
add
out
push
or
imul
out
cmpsb
out
mov
or
mov
and
add
pop
jae
pop
arpl
arpl
jle
adc
test
xor
lock
pop
es
push
test
cwtl
scas
lret
test
sbb
xchg
stos
jp
cmp
stc
lcall
icebp
andl
mov
jge
shll
insb
iret
imul
outsl
inc
pop
sub
mov
mov
lods
mov
cmpsl
in
scas
cld
or
or
xlat
repnz
pop
and
insb
push
inc
dec
mov
lcall
jecxz
mov
js
aaa
adc
js
sbb
xor
inc
loop
addb
test
adc
xor
mov
mov
cmp
adc
xchg
dec
lods
loope
in
dec
jnp
mov
pop
adc
mov
les
xchg
mov
jecxz
in
sti
xchg
pop
sub
xchg
jo
cmp
shll
cmp
or
inc
mov
inc
dec
shll
call
out
cmp
adc
xor
pop
dec
das
js
fcmovbe
cmovno
lds
and
outsl
push
adc
lahf
pop
mov
mov
sbb
cli
lock
or
stos
mov
adc
into
es
or
arpl
sub
add
insl
mov
or
sahf
mov
aaa
push
push
fsubrp
cmp
sub
out
loopne
dec
jb
pop
adc
adc
orl
push
mov
inc
dec
imull
inc
shl
das
stc
jnp
pop
ja
mov
sub
aaa
xchg
mov
aas
nop
adc
add
shl
inc
xchg
lock
pop
push
jne
xor
cs
pop
stc
icebp
jb
dec
leave
sub
and
or
xchg
test
adc
xor
xchg
pusha
test
add
test
jb
movsb
fmull
xchg
or
insl
jl
cli
addr16
movsb
cmpsl
push
adc
push
aaa
jo
push
subl
fiadds
andb
repz
sub
cs
mov
std
jl
popa
lods
fists
hlt
call
cmc
cmp
lea
add
add
sti
xchg
push
ja
dec
test
insl
gs
lods
xchg
out
xor
dec
mov
mov
sub
scas
mov
xor
inc
js
ret
int3
pop
jo
dec
fadds
cmp
neg
ficoml
shll
sub
and
dec
push
jo
mov
or
xor
or
lods
pop
cmp
mov
jo
jmp
mov
roll
xchg
pop
filds
xlat
out
cmp
insl
frstor
lods
inc
imul
sub
and
cmpsl
dec
mov
cmp
lea
mov
stos
add
sub
out
cltd
jo
in
xchg
push
mov
popf
mov
rcrb
mov
clc
pop
out
lods
fs
cld
push
ror
cmp
subb
arpl
fmuls
and
inc
lret
xor
test
sbb
cltd
add
and
faddl
jl
push
jo
lea
xchg
imul
outsl
bound
lods
jno
dec
call
and
xchg
add
daa
cltd
push
pop
jmp
dec
rcrl
aad
decl
and
ss
ret
push
adc
and
adc
dec
xor
inc
out
mov
sahf
neg
stos
mov
out
fs
add
das
stos
push
jecxz
dec
dec
xchg
jge
out
sbb
cmp
sub
shrb
xor
popa
pop
mov
pop
test
js
xor
push
mov
dec
jne
pop
pand
movsb
lahf
mov
inc
cli
dec
mov
lods
pop
push
pop
dec
add
std
rcr
inc
out
sbb
andl
scas
fiadds
jae
and
pop
sahf
lods
mov
jl
lahf
andb
sbbb
cwtl
dec
dec
lea
mov
jno
inc
int3
lcall
mov
add
mov
fs
dec
cmp
loop
loope
and
push
scas
aam
es
mov
pusha
pop
sbbb
fmull
pop
sti
jns
popa
xor
mov
cmp
outsl
aaa
adc
pop
loop
ret
adc
jns
fistps
xchg
incb
repnz
xor
dec
sbb
mov
mov
subb
leave
int
xor
jl,pt
jo
inc
or
inc
push
pop
jo
fmuls
pop
jae
jge
call
push
xchg
test
jl
pop
pop
out
jmp
xor
xchg
movsl
xchg
cmp
aas
jg
push
xor
in
out
loop
adc
adcl
push
fldcw
decl
outsl
mov
pop
testl
lods
mov
mov
push
pop
test
insl
mov
mov
cmp
dec
out
push
jno
mov
ljmp
stc
out
in
and
jmp
xor
cld
mov
jnp
jb
call
dec
mov
sbb
loopne
call
or
outsl
divl
mov
ljmp
inc
outsb
adc
insl
call
pop
xor
add
pop
loop
jnp
mov
add
jne
add
fwait
pop
push
sbb
cmc
jmp
shrb
test
lcall
mov
icebp
mov
dec
pop
negl
mov
or
lock
pop
sbb
movsb
xor
mov
mov
inc
push
lcall
aaa
jl
inc
adc
mov
add
inc
xor
and
jg
mov
lret
aam
stos
rcll
dec
pushf
cmc
jnp
repnz
xor
sbbl
pop
xor
popf
sub
jmp
test
adc
cmp
adc
mov
jae
sub
xchg
or
mov
sub
shll
sub
dec
or
aas
rorl
sahf
rcl
jg
testb
adc
pop
mov
push
lcall
fistps
sbb
jne
push
adc
cmp
std
push
xchg
mov
stos
loop
push
push
cwtl
sbb
fldenv
mov
jnp
xchg
cli
push
lds
out
cmp
add
jne
sbb
push
inc
insl
mull
mov
loop
and
sbb
or
and
test
sub
mov
dec
xchg
int
mov
es
jle
je
pop
sarl
inc
inc
jns
adc
mov
mov
lcall
les
pop
adc
pop
jbe
push
mov
hlt
popa
mov
pop
cmpsl
cwtl
notl
add
out
into
rcr
aam
lret
xor
pop
jno
pop
sbb
sbb
dec
sahf
fdivrs
mov
mov
into
hlt
lods
jae
jno
rcrb
fimuls
rorb
jecxz
sbb
mov
jns
push
mov
rcr
scas
fwait
cmp
mov
les
jo
mov
in
popa
push
cmp
cmp
sbb
cltd
or
pop
jnp
arpl
jp
pop
xchg
pop
imul
jge
enter
and
fucom
enter
arpl
mov
sarl
cmp
jmp
out
clc
enter
mov
push
enter
sbb
xchg
push
mov
sbb
subb
add
jl
and
xor
fistpl
les
test
and
jmp
cmp
fldl2t
movsb
test
xor
cmp
push
mov
cmp
fwait
sbb
clc
and
xor
mov
dec
mov
movsl
popa
mov
push
mov
je
push
inc
sub
repnz
popf
add
je
push
pop
mov
faddl
xchg
jg
or
loopne
sbb
xchg
fildl
imul
aam
lods
rcr
lahf
mov
lods
push
loope
add
xor
xor
cs
je
test
jb
cmpsl
cmc
jae
rcl
add
mov
jne
dec
jmp
imul
inc
std
cli
aad
add
inc
or
enter
in
jae
loopne
dec
flds
fisttpl
aad
stc
or
stos
neg
in
mov
push
or
push
xchg
lds
loope
mul
add
aam
rol
jge
andb
mov
call
outsl
jge
mov
mov
jns
js
push
mov
into
je
and
divb
jne
sbb
xor
mov
push
xchg
jecxz
jae
outsb
ret
jmp
inc
pop
cs
sub
jb
inc
inc
cmp
es
pop
flds
xor
shll
push
add
cmp
pop
shlb
lea
movsb
mov
dec
mov
out
add
adc
std
dec
test
pop
pop
scas
cmpsb
testb
mov
in
in
lret
inc
push
gs
fadd
push
ret
and
movsl
inc
jmp
jne
push
push
lock
enter
jp
lahf
in
cmp
cli
dec
pop
add
std
lea
idiv
inc
mov
push
inc
std
cmp
mov
jmp
cmpl
cmp
repz
enter
fnstsw
int3
scas
ja
jp
xor
cwtl
loop
pop
and
out
push
sahf
repz
les
cmc
mov
inc
aad
out
std
loopne
lods
lds
int3
ds
add
jb
out
negb
out
mov
enter
loopne
insb
out
test
jp
mov
pop
pop
cmp
arpl
and
fbld
sbb
push
mov
xchg
mov
sbb
push
cmpsb
sbb
sbb
cmpsl
cs
rcrb
int
lcall
sti
inc
lret
scas
adc
pop
mov
testl
test
cmc
and
shll
stos
ljmp
add
scas
xchg
sahf
out
sub
sub
mov
mov
out
xor
jmp
subb
add
cmp
cwtl
adc
jb
repz
xchg
loopne
xchg
out
icebp
jl
add
pop
or
cmp
test
dec
push
jg
js
inc
idivl
fldenv
cs
mov
lret
xor
xor
roll
fcomps
sbb
pusha
imul
ss
outsb
mov
add
rolb
mov
leave
add
ljmp
push
repnz
ljmp
int
clc
inc
inc
out
vcvtdq2pd
mov
insl
outsb
jge
cmp
mov
push
rorl
push
sbb
shll
xchg
dec
inc
stc
or
mov
sbb
mov
cmp
mov
popf
enter
inc
enter
nop
ljmp
and
loop
push
sbb
fsubrl
or
incl
addr16
xor
pushf
dec
dec
mov
gs
inc
lret
fdivl
jg
imul
lahf
out
pushf
pop
adc
xor
and
mov
mov
jne
mov
ror
sbb
jae
shl
pusha
or
aas
dec
xor
idivb
lea
fs
pop
mov
aas
jmp
or
cmp
inc
adc
xchg
fcmovu
pop
inc
jmp
clc
inc
push
movsl
jbe
sbb
dec
call
or
sbb
jl
rol
sti
test
xchg
jno
sahf
mov
and
cmp
pop
cmp
loopne
dec
out
jge
xchg
outsl
add
test
fisttpl
stc
hlt
cmc
mov
inc
mov
inc
and
movsl
push
ficomps
fsubs
xor
adc
in
cmc
in
inc
push
cld
sub
and
mov
dec
movswl
mov
cmpsb
and
lods
scas
add
mov
andl
mov
or
loopne
sti
insl
mov
push
adc
nop
adc
mov
push
and
pop
mov
insl
mov
xor
xor
inc
xchg
mov
mov
or
jmp
sub
push
sub
or
sbb
and
adcb
push
sbbl
ret
mov
pushf
sbb
pop
push
jb
xchg
inc
outsl
mov
cltd
pop
popf
insb
loopne
jne
add
mov
pushf
rcll
cmp
dec
push
dec
nop
les
push
push
pop
adc
or
popf
sti
pop
xor
sti
repz
call
lock
lret
push
mov
shrb
outsl
xchg
cmp
sub
divl
xor
in
rcrb
lods
sbb
mov
int3
js
jg
jbe
push
jo
loop
cmp
adcl
test
iret
mov
fwait
jmp
pop
mov
test
dec
xor
adc
add
xor
pop
leave
push
in
push
aaa
dec
inc
dec
xor
pop
xor
ffree
jo
add
pop
mov
push
sbb
cli
enter
cmpb
sarl
mov
and
add
push
sbbb
pop
cltd
insb
and
xor
push
adc
gs
push
outsl
vpmulhuw
sub
fistps
and
icebp
inc
xorl
out
ret
and
imul
lcall
aaa
enter
dec
sbb
push
jnp
inc
adc
dec
repz
cmp
mov
mov
adc
sbb
cmpsl
sub
ret
fwait
adc
add
jl
mov
popa
mov
inc
scas
mov
cli
fbld
loope
es
or
cmp
sti
xchg
and
or
adc
push
push
xchg
xchg
sub
jmp
lea
inc
mov
xor
inc
jbe
mov
loope
scas
sar
jb
lret
mov
mov
adc
imul
push
pushw
ja
mov
hlt
inc
cmpsl
das
sbb
pop
scas
sbb
xor
jno
mov
cli
mov
sbbl
jb
push
ja
dec
loop
in
mov
scas
loop
cmpsb
lea
push
loopne
add
inc
stos
cmp
jp
cwtl
xchg
and
xor
inc
xchg
outsl
dec
push
loope
jp
pop
mov
cli
mov
cmpsb
xor
rolb
mov
shr
push
jns
inc
leave
dec
sbb
pop
jbe
aad
bound
or
dec
dec
and
xchg
sbb
mov
sbb
inc
clc
cli
fidivrl
fnstenv
gs
sub
fincstp
or
add
gs
iret
sbb
add
or
jmp
into
dec
int3
daa
mov
sti
jno
adc
jge
cmpsb
outsl
adcl
inc
ja
cmp
inc
out
or
flds
mov
movsb
or
push
xor
sbb
iret
in
or
add
orb
xchg
dec
cmc
lock
xor
test
out
rol
inc
cmp
sbb
sub
jns
or
dec
sahf
push
cbtw
dec
and
xchg
xchg
mov
dec
inc
push
or
insl
push
rclb
repnz
imul
mov
xchg
push
inc
push
mov
loopne
lods
push
repz
push
jg
xchg
add
lods
cltd
push
push
gs
stc
cltd
push
fidivl
subl
ret
andl
mov
lds
pop
or
cld
imul
mov
xor
test
ja
adc
pop
jl
call
sub
mov
das
fidivrl
jl
popf
stc
cmp
pop
movsb
repz
or
push
rep
sbb
adc
das
jp
and
jecxz
xor
pop
out
cmp
sub
fcmovnu
adc
iret
ret
sbb
mov
xor
mov
ret
insb
sub
and
test
push
sbb
loop
idivl
mov
jmp
test
test
dec
add
sub
pop
and
mov
add
xor
push
bound
aam
jp
mov
dec
nop
jmp
outsl
ds
xor
sub
neg
faddl
loopne
mov
sbb
test
xlat
sahf
dec
out
insb
enter
pop
jmpw
mov
das
sbb
std
fisttpll
mov
movsb
fistps
inc
adc
mov
jmp
test
ja
xor
fcoms
jle
dec
in
mov
lods
das
arpl
fidivrs
out
mov
mov
nop
mov
add
xchg
mov
dec
xchg
jmp
mov
outsl
test
les
mov
out
pusha
pushf
jp
movsb
data16
add
das
cmp
imul
std
xor
jle
add
inc
cli
mov
jl
and
sub
gs
filds
neg
movsl
imul
or
mov
xchg
mov
std
inc
mov
jae
push
bound
jmp
xchg
add
sahf
aas
sarb
mov
call
or
mov
xchg
sbb
sbb
imul
adc
outsl
adc
push
movsl
pusha
int
repnz
pusha
inc
mov
inc
xchg
xor
inc
cmp
outsb
aad
mov
dec
test
jno
adc
lahf
ds
jle
out
fwait
push
das
clc
lret
add
mov
adc
pop
iret
aam
mov
dec
test
mov
dec
xchg
idiv
mov
cltd
insb
push
idivl
arpl
push
daa
mov
sbb
out
lcallw
call
add
data16
leave
add
push
sbb
fcoml
xchg
xchg
iret
and
outsb
aas
out
push
shrb
jmp
cmp
cs
mov
xchg
test
push
adc
mov
fs
mov
mov
setne
clc
sub
jl
lods
je
xchg
into
jne
test
dec
imul
les
loopne
adc
mov
and
imul
push
sbb
push
clc
mov
movsb
movsb
or
mov
and
pop
adc
ret
lds
jp
and
and
imul
mov
cwtl
mov
and
sub
jmp
leave
out
push
add
inc
data16
lret
lret
jecxz
pop
int3
aam
pmaxsw
insl
xchg
out
mov
jo
jge
andl
sub
jnp
aad
fldl
jmp
sbb
pop
push
test
pop
in
mov
lcall
xchg
ds
fidivrs
das
jmp
jmp
lret
repz
lcall
movl
lcall
stos
mov
cmp
enter
data16
add
fwait
sub
jnp
pop
mov
loop
outsl
cmp
ja
clc
std
jmp
roll
cld
fdivrl
inc
and
adc
cmp
inc
add
mov
jp
lret
inc
outsb
out
push
addb
cltd
cmp
push
hlt
bound
mov
in
cmp
jo
leave
ljmp
js
clc
stos
mov
fcompl
in
or
sbb
mov
and
or
sbb
loopne
aaa
inc
cmpsb
scas
aam
jge
sbb
fistpl
jo
xbegin
pop
stc
mov
mov
mov
sub
adc
push
bound
test
es
jnp
fsubrs
arpl
vphadduwd
push
add
and
mov
lock
bound
js
xor
sub
and
xchg
test
cmp
push
fnstsw
shrl
xorb
je
ficomps
imul
fimuls
in
cwtl
and
inc
out
dec
ror
and
rolb
cmp
sbb
les
sbb
std
dec
and
pop
inc
push
or
bound
dec
idiv
sbb
fisttpll
mov
cmp
mov
jbe
sarl
lret
sub
dec
cmp
cltd
in
mov
cld
mov
dec
cmp
call
and
cld
or
imul
push
jb
aas
pusha
ficoms
pop
inc
stos
aas
inc
and
pop
bnd
gs
push
push
daa
mov
test
insb
imul
bound
mov
in
sti
mov
sar
push
sbb
cmpsl
inc
insl
mov
adc
sub
or
loop
jl
lret
push
dec
or
jb
call
mov
push
mov
dec
in
sbb
stos
pop
sub
mov
cmpsb
clc
push
mov
loopne
lret
mov
jge
leave
imul
call
cmp
stos
sub
add
sbb
mov
xchg
adc
mov
imul
sbb
repz
movsl
movsb
xor
fadds
clc
nop
imul
pushf
mov
sbb
xor
ja
mov
inc
fisubrs
sub
bnd
ja
daa
rorb
ss
outsl
and
inc
lock
and
mov
pusha
push
and
dec
xchg
sub
andl
arpl
ja
add
adc
clc
bswap
js
mov
lahf
lods
jne
mov
push
dec
push
popf
hlt
adc
fs
and
and
push
push
sub
jns
dec
pop
jae
mov
test
mov
jmp
lcall
mov
and
jb
cmp
pop
bound
ss
arpl
mov
sub
rcll
jp
hlt
pusha
mov
adc
arpl
mov
xor
adc
sub
and
push
mov
adc
mov
std
movl
in
pop
pusha
fbld
jmp
xchg
cmc
ljmp
jno
mov
sub
in
mov
jb
clc
xchg
aas
loope
stos
int3
fidivl
aaa
inc
and
adc
mov
cmp
sahf
mov
fnstcw
jge
jecxz
cmp
cmp
pop
sbb
sbbl
cld
cs
rolb
popf
int
das
add
mov
lods
mov
pop
in
push
lret
push
cmp
mov
rclb
pop
push
xlat
dec
scas
xchg
shrl
mov
xor
loop
push
inc
push
shll
stos
in
mov
popf
or
push
nop
push
mov
or
enter
and
jno
cwtl
dec
test
mov
pop
jae
loopne
and
sub
cld
cmp
inc
pop
push
add
cs
add
mov
ret
nop
addr16
cmp
mov
sub
in
sti
dec
jecxz
fucom
lcall
fisubrl
sbb
loopne
xchg
ret
mov
mov
stc
pop
push
xor
shll
lods
mov
out
int3
jl
mov
inc
cmp
inc
fs
sti
in
rcl
lcall
lods
dec
call
cmpsb
jmp
std
popa
je
mov
pop
jbe
rorb
cmpsl
int
out
adc
hlt
push
imul
inc
stc
punpckhwd
mov
xchg
pop
jo
pop
jle
cmp
push
push
ss
adcl
xchg
movl
mov
xchg
mov
cmp
leave
mov
pop
pop
lahf
mov
adc
push
inc
inc
pop
mov
and
cmp
cwtl
dec
jae
and
mov
sub
sub
xchg
push
mov
lcall
push
ret
adc
js
push
mov
push
repnz
cmp
insl
mov
jg
mov
call
or
cmp
pop
fsubl
ljmp
gs
sub
cld
mov
mov
xor
imul
jl
movsl
sbb
popf
in
aam
push
movsb
lea
dec
stc
fdivrl
in
fs
mov
pop
imul
repnz
push
dec
cmp
inc
mov
cmpsb
stc
dec
scas
stos
adc
clc
jle
test
inc
shlb
incl
mov
xchg
mov
push
pushf
sbbl
test
das
lea
out
popf
popa
daa
mov
mov
push
negl
bound
shrl
incb
push
jb
add
add
adc
jmp
mov
ret
fcomps
mov
push
dec
lcall
xor
clc
sar
and
cmp
inc
mov
loop
clc
mov
dec
cmp
push
mov
dec
shl
sbb
popf
test
fld
push
jb
mov
and
out
inc
sub
stc
icebp
xchg
call
pushf
sbb
jno
roll
je
mov
dec
cmp
into
sbb
push
addr16
mov
pop
jae
movsb
adc
push
mov
or
cmp
mov
jecxz
fwait
push
daa
or
adc
mov
in
dec
iret
aas
scas
push
stc
insl
and
sbb
add
cwtl
push
cmc
repz
push
test
pop
nop
pusha
imul
jno
jbe
pop
pop
mov
ret
int3
cmp
dec
and
lock
or
cmp
pop
data16
xor
or
arpl
insl
test
movsl
ljmp
cli
sub
inc
xchg
xchg
cwtl
enter
xchg
jnp
sub
clc
pop
jnp
push
xchg
inc
lods
mov
sub
test
or
or
cmp
cmp
cld
adc
xchg
sub
das
add
jne
outsb
cltd
dec
loop
sbb
xchg
sti
lock
imulb
add
fs
pop
cmpsb
fs
inc
jnp
lods
cmpsb
mov
adc
dec
fnstsw
inc
sub
dec
cmp
lahf
xchg
push
sub
dec
xchg
dec
inc
pushl
aaa
cmpsb
add
enter
mov
jne
adc
mov
rolb
in
fldt
xorl
cmpsl
lret
jo
arpl
insl
aad
push
aaa
mov
rclb
add
aad
mov
lods
pop
popa
add
pop
jne
test
es
xchg
xchg
popa
lret
movsl
iret
push
mov
shrl
push
push
inc
xchg
xor
inc
pop
test
inc
mov
add
fdiv
data16
mov
insl
mov
addr16
mov
rcl
loope
lock
cltd
mov
push
sub
test
pop
push
pop
bound
cmc
insl
adcl
jno
mov
push
sarl
pop
mov
push
adc
shl
cltd
int3
aas
iret
mov
adc
fdivrs
pop
stc
subl
xchg
repz
mov
bound
pop
insl
mov
and
xchg
mov
sub
lds
add
dec
loopne
inc
fsubl
in
mov
into
lock
je
inc
cmp
or
jbe
xchg
push
popa
pop
jp
adc
test
adc
imul
int3
daa
mov
xor
nop
test
imul
jnp
or
hlt
jmp
addr16
and
xchg
test
xchg
pop
push
push
lret
mov
inc
cmp
pop
pop
pushf
orb
addr16
aam
sub
stos
inc
push
jle
divb
enter
andb
repz
movsw
loopne
inc
fists
fwait
mov
movsl
lock
in
shlb
jp
jge
mov
in
sahf
das
sub
rep
cmc
jae
or
sbb
repz
sti
nop
fcmovnu
in
aad
push
popa
iret
ss
adc
aam
cwtl
xor
jg
add
sbb
cmc
lahf
jnp
mov
lcall
push
int3
xchg
and
xchg
and
bound
ss
or
idivl
xchg
dec
xor
stos
cwtl
stc
inc
push
mov
sub
dec
minps
int
add
pop
pop
popa
mov
lea
enter
loope,pt
out
dec
jle
scas
stos
mov
scas
add
nop
push
dec
mov
test
xchg
scas
or
roll
adc
lret
lea
mov
leave
in
jne
aam
and
in
add
push
mov
pop
sbb
mov
repz
adc
icebp
sbb
sahf
push
mov
jne
jo
inc
mov
js
shr
ljmp
push
mov
adc
in
insl
cmpsl
jge
in
mov
pop
or
sti
notl
mov
scas
roll
stos
push
pop
xor
inc
jo
adc
inc
inc
out
mov
mov
int3
enter
mulb
add
daa
push
add
lods
dec
lods
lahf
das
and
pop
adc
loop
cmp
cld
aad
inc
es
orl
sbb
mov
sbb
mov
addl
adc
test
or
sbb
arpl
out
pusha
xchg
popa
add
sub
addr16
sarb
fwait
test
mov
mov
loopne
in
sbbb
mov
sbb
or
div
cmpsb
adc
ss
rep
mov
sbb
sub
rol
das
and
mov
inc
mov
add
dec
pop
inc
mov
jmp
fbld
sub
adc
popf
fs
scas
push
push
out
add
or
out
push
adc
pop
xchg
xor
int3
stos
push
rorb
cmp
and
add
push
mov
notb
push
ljmp
cmc
cmp
push
add
cmp
sahf
push
mov
add
xchg
pusha
aam
or
fwait
xchg
repnz
jl
addr16
cld
push
aaa
cmp
push
aas
mov
sbb
push
xor
lods
mov
xor
jbe
xor
lret
jae
dec
int
jae,pt
inc
fs
xor
stc
dec
outsl
lret
sub
push
pop
dec
rcrb
jp
div
ret
aaa
out
std
fs
stc
pop
nop
into
adc
cwtl
movsb
mov
sar
or
sbb
addl
test
adc
and
test
imull
icebp
imul
pop
fisubs
mov
clc
mov
outsb
push
xchg
into
js
jmp
dec
mov
out
fsubrs
dec
pop
mov
scas
jg
cmpsl
or
add
mov
imul
sub
adc
fmuls
adc
xchg
or
and
loop
or
sub
pop
addr16
leave
cli
dec
dec
rcll
dec
aad
lahf
dec
cmpl
mov
xchg
enter
fs
dec
xor
add
int
ret
jmp
cmp
getsec
jbe
mov
mov
dec
cmp
imul
in
les
outsb
jecxz
inc
mov
push
incb
aad
ss
xchg
mov
dec
clc
mov
jns
scas
or
adc
pop
sbb
or
pop
cmpsb
jbe
jno
enter
inc
test
mov
adc
jl
aam
cmp
addr16
adc
and
push
cmp
mov
pushf
rclb
mov
fisubrs
int
into
popf
add
fisubl
push
cmp
dec
es
lahf
inc
repz
les
fmulp
xchg
icebp
mov
inc
jg
mov
xorl
mov
iret
sbb
dec
lret
add
and
pop
cmp
sub
inc
cmpsb
sub
push
push
out
scas
lock
xor
mov
jns
lods
jno
js
push
xchg
jmp
sbb
clc
loopne
jg
inc
cmp
sbb
adcb
incl
into
cmp
lds
test
jecxz
cmp
jae
sbb
push
popa
jge
pop
xor
add
fsubrs
add
push
xor
jmp
xor
test
add
mov
adc
mov
mov
pop
adc
rcr
dec
push
pop
lret
and
sub
in
pop
sub
and
addr16
sub
xor
lahf
and
cmp
jle
or
inc
dec
xor
cmc
rcl
pop
int3
gs
push
outsb
movsb
mov
mov
jg
divb
inc
or
xor
add
push
fs
je
adc
icebp
cmpsl
sbb
rol
xchg
int3
xchg
imul
push
jp
xchg
cmp
jb
and
or
insl
cltd
lahf
cs
or
test
out
mov
fs
sub
push
mov
repnz
cli
aam
adc
out
bound
iret
aad
jecxz
cmc
out
gs
or
std
fisubrl
scas
sbb
inc
push
in
jle
lret
pushf
repnz
or
adc
rcr
jbe
scas
xor
mov
adc
xor
sbbb
pop
jp
push
inc
xor
ja
pop
daa
dec
adc
pop
mov
cmp
cltd
pop
int
mull
aad
adc
mov
cmpsb
and
xchg
cmp
mov
jg
aas
jnp,pn
inc
push
idivl
inc
jge
shll
push
popa
clc
sub
ss
dec
fs
ss
lods
add
dec
rcll
icebp
lret
pop
pop
arpl
xor
xchg
mov
sahf
adc
and
shrb
push
sbb
hlt
mov
push
hlt
mov
addb
aam
fwait
insl
or
lahf
lods
jmp
dec
xor
test
sbb
in
dec
pop
popa
imul
inc
out
dec
mov
jmp
in
mov
sbb
std
sub
pop
push
pop
jmp
xchg
lahf
inc
and
pop
and
popf
lea
pop
push
push
mov
push
mov
xchg
jae
xor
add
mov
pop
loope
int
fcompl
push
sahf
pop
aam
inc
inc
mul
dec
push
xchg
arpl
icebp
orb
jecxz
and
movsl
adc
pop
frstor
adc
cmpsb
inc
cmp
and
das
lcall
nop
imul
mov
in
enter
and
lods
cltd
push
and
jle
aad
hlt
push
xchg
aad
inc
decb
sbb
js
mov
pop
lock
call
or
jbe
add
add
in
and
std
dec
add
lock
std
in
pop
and
fnop
es
jl
fiaddl
je
inc
pop
test
arpl
sarb
jp
dec
or
lcall
xor
pop
pop
pcmpgtd
xchg
or
push
pop
cltd
in
dec
mov
mov
or
dec
pusha
cwtl
push
fsubl
and
stos
sbb
mov
xchg
mov
les
push
int3
and
adcb
add
dec
js
cmp
shl
pusha
ret
mov
and
testl
lahf
fcomps
sub
inc
fidivs
mov
lret
shr
cmp
aaa
daa
jle
or
sub
dec
push
and
adc
or
ljmp
sbb
sbb
push
and
xchg
in
scas
in
iret
xchg
push
call
mov
frstor
xchg
divb
cmp
mov
pop
mov
pop
push
pop
outsl
jl
or
cli
jnp
shll
push
push
leave
jecxz
or
mov
cmp
sbb
sub
push
sbb
mov
lds
pushf
push
mov
repz
push
mov
adc
mov
ss
jg
jo,pt
xchg
and
xchg
mov
insb
iret
les
push
outsl
sub
repz
or
std
rolb
mov
lods
dec
dec
addr16
comiss
xchg
aam
mov
mov
test
test
add
sahf
push
stos
dec
repz
enter
sbb
loopne
cmp
and
pop
in
imul
popa
iret
mov
inc
lock
subl
lods
stc
xor
sarl
gs
adc
pop
sub
stos
int
sub
mov
mov
jle
mov
out
dec
cmp
mov
imul
lcall
imul
xor
bound
sbb
push
loope
or
popa
imul
mov
movsl
inc
aad
mov
ja
leave
pop
cmpsb
jno
push
cli
shrb
or
mov
jns
or
or
pop
mov
xor
mov
and
cmpsb
mov
and
push
jecxz
ljmp
psubq
aad
sahf
and
push
mov
rorb
mov
add
mov
dec
hlt
mov
out
pop
aam
pop
cmp
sahf
shll
les
pop
scas
or
rolb
repnz
leave
outsl
inc
inc
or
orb
mov
jne
mov
mov
pop
es
jne
add
mov
add
xor
test
jmp
dec
pop
iret
int
mov
mov
leave
popa
lods
lret
push
jmp
repnz
sub
mov
dec
cmpsl
mov
popf
push
repz
sub
das
mov
ss
add
push
mov
sbb
repz
push
jnp
pop
in
jnp
sbb
xchg
ret
jbe
nop
mov
mov
add
jmp
xchg
lds
stc
jno
dec
loope
movsl
pusha
add
and
pop
insb
pop
xlat
rcl
mov
pusha
dec
lret
sbb
in
xchg
cmp
jne
loopne
push
add
sbb
cmpsl
lcall
nop
add
test
push
stos
mov
cwtl
repz
mov
xor
jle
mov
enter
insb
add
dec
pop
outsb
mov
outsl
aad
push
jmp
pop
mov
mov
movsb
imul
mov
int3
pusha
mov
call
push
mov
lret
jns
adc
mov
xor
dec
mov
jbe
fldenv
push
or
sbb
push
sub
dec
cltd
iret
xchg
mov
mov
pop
dec
jbe
into
movsb
insl
jae
insl
jecxz
pusha
mov
mov
ret
popf
xor
addb
sbb
xchg
ja
xor
jge
loop
pushf
or
in
inc
fsts
push
test
adc
jo
aad
aam
imulb
fst
push
repnz
inc
xchg
jbe
xor
ja
shl
or
ret
fwait
sub
xchg
pop
stos
dec
jno
cmp
addr16
push
hlt
out
imul
aas
mov
cld
cli
cwtl
push
dec
sti
or
cwtl
xchg
dec
and
mov
lea
mov
or
jmp
sub
ljmp
adc
repnz
sub
mov
movsl
lock
idivb
shlb
pop
dec
mov
test
clc
adc
dec
out
sub
adc
adc
pop
add
lahf
ss
sahf
mov
cmc
jae
or
cli
icebp
sbb
push
in
shl
sub
lcall
add
mov
mov
xor
xor
jb
ja
aam
xor
jecxz
cwtl
fists
stos
xor
push
out
xchg
or
adc
ja
into
insb
mov
jne
loop
push
mov
shrd
mov
cmp
pop
or
inc
lcall
push
mov
cmp
jbe
cld
sub
mov
push
jo
mov
test
flds
repnz
xor
negl
mov
xor
mov
xlat
pusha
add
pop
push
ficomps
sub
aas
dec
sbb
jge
dec
stos
jns
or
addr16
imul
mov
jmp
xchg
into
jmp
je
adc
gs
sub
mov
lock
jb
ret
inc
lret
dec
out
add
mov
aad
push
xchg
adc
sub
jg
mov
push
lods
loopne
fisttpll
notl
enter
lods
jp
stos
notb
mov
mov
push
mov
lcall
push
sbb
movsl
sub
jb
outsb
inc
lcall
es
cmpsl
mov
dec
fisubrl
das
push
fucompp
loope
and
mov
xor
call
mov
pop
pushf
sub
in
add
je
and
repz
popa
cmp
out
and
mov
cmp
pop
adc
xchg
cmp
jnp
dec
rcll
inc
pop
in
enter
js
call
outsb
dec
push
insl
dec
sub
xchg
mov
lods
dec
xor
arpl
js
fsubrl
into
and
cmpsb
fcmovb
roll
xor
insb
dec
jmp
sub
or
stos
jo
cld
mov
push
dec
mov
pop
mov
lret
js
popf
hlt
adc
fdivr
xor
fcoml
lret
mov
ret
outsl
cld
xchg
jle
push
mov
in
or
in
and
dec
fidivrl
rcl
mov
cmp
lock
and
xchg
mov
push
adc
push
fcmovb
push
mov
hlt
addl
mov
push
mov
lcall
dec
inc
fimull
mov
pop
lock
decb
lret
inc
loopne
sar
outsl
nop
repnz
movsl
fldcw
sti
xor
push
pop
inc
lret
cmp
xor
dec
ret
insb
sahf
dec
mov
jmp
mov
rcll
pop
mov
xchg
cs
sbb
xchg
pop
leave
movsb
mov
in
push
pop
mov
bound
out
pushf
daa
sbb
fwait
leave
sbb
daa
int
cmp
test
repnz
int3
roll
inc
je
dec
sub
mov
push
movsl
les
inc
mov
rclb
inc
test
mov
outsl
push
push
repz
pop
and
mov
aaa
push
sub
jl
bound
cs
fisubs
adc
sub
in
mov
outsb
in
sub
or
in
or
dec
mov
aas
mov
dec
addb
dec
sti
mov
mov
clc
cmpsl
add
xchg
je
mov
clc
inc
int3
test
jno
xchg
jmp
in
imul
lahf
imul
hlt
cld
lcall
cwtl
inc
or
lret
mov
movsl
into
aas
dec
mov
xor
int
xchg
or
icebp
add
mov
outsl
sbb
loope
push
icebp
and
out
lock
dec
scas
sub
insl
in
pop
push
into
fmuls
in
out
cmp
inc
mov
or
sbb
cmp
adc
and
mov
and
fistpll
bound
iret
pop
icebp
test
sbb
aad
stos
mov
cmp
mov
test
xor
jecxz
inc
repnz
xchg
mov
mov
xchg
cmpsb
mov
psubq
inc
dec
sarb
out
sub
cmp
and
out
aas
hlt
mov
into
int3
out
mov
aaa
aam
rclb
push
adc
iret
or
and
ljmp
xor
insb
fistpll
test
inc
push
dec
xlat
or
sbb
movsb
fcomi
dec
xchg
push
jb
mov
dec
imul
loopne
sarb
fstps
cvttps2pi
add
js
inc
and
lret
fsts
testl
or
and
aam
mov
push
sbb
mov
ret
jne
mov
pusha
stc
dec
nopl
inc
or
cmp
aas
and
adc
sarl
mov
cltd
stos
add
adc
mov
rcrl
and
mov
enter
cmp
lret
cmp
incl
scas
cmpsb
stc
mov
add
mov
cld
imul
sarl
out
fwait
popa
xchg
bound
rol
sti
and
add
sbb
bound
sub
sub
scas
xchg
xor
mov
into
fistpl
scas
inc
jp
or
or
push
mov
mov
adc
cwtl
loope
loope
jmp
fdivrs
ja
and
imul
vpsubb
data16
aaa
je
sbb
lret
scas
fistps
and
mov
aaa
jnp
pop
or
inc
lods
jmp
mov
lods
and
fadds
jle
les
sbb
xchg
and
sbb
xchg
xchg
jo
cmp
pop
out
jg
jbe
pop
adc
cmp
and
adc
sbbb
out
sti
adc
addr16
test
pop
sbb
aam
and
fcmovbe
mov
negl
stos
push
xchg
xchg
std
mov
or
or
or
lea
loopne
cli
arpl
add
nop
call
pop
sub
imul
ret
pop
mov
std
sbb
insb
or
cltd
xchg
inc
mov
sti
dec
cmp
add
xchg
int
jbe
mov
das
in
inc
jne
add
subl
sbb
dec
mov
vmovdqa
push
adc
popl
pop
sarb
stos
mov
jo
dec
imul
xor
mov
ss
xchg
adc
fs
cmp
mov
adc
push
iret
mov
shrb
xchg
dec
addl
in
jmp
gs
cmc
xchg
jecxz
or
mov
leave
cmp
arpl
push
add
pop
orl
imul
dec
pop
sub
mov
inc
ja
dec
das
dec
xchg
lcall
pop
loop
add
inc
sbb
outsb
xchg
sbb
dec
cltd
std
stos
aas
mov
mov
cmp
in
dec
jg
jge
cmove
jecxz
fs
sbb
adc
movsb
shrb
aas
jbe
cmc
mov
sub
add
xchg
jp
aaa
dec
mov
movsb
sub
inc
push
ret
bound
jno
roll
inc
cld
lds
stos
in
cmp
dec
sahf
loope
and
dec
sub
mov
pop
cmp
test
jae
mov
add
movsb
sbb
call
mov
pop
shlb
lods
adc
inc
push
mov
mov
jmp
lret
push
divb
pushf
and
movsb
pop
imul
mov
ds
xchg
jmp
mov
and
jp
add
mov
pop
leave
aad
or
pop
jmp
mov
inc
enter
aaa
pop
shrl
insb
gs
cs
xchg
sub
roll
pop
mov
mov
sub
pop
sub
call
ds
aaa
or
inc
movsl
mov
jnp
push
inc
test
call
adc
push
lcall
add
pop
sub
add
cmc
mov
aas
mov
mov
ror
pop
ficomps
add
jge
movsl
push
inc
jne
dec
in
adc
ret
cmp
cli
jnp
outsl
adc
lahf
mulb
sub
or
and
nop
cmp
or
outsb
mov
lods
dec
jbe
out
aas
jae
lcall
cmp
pop
and
outsl
jnp
mov
repnz
push
shll
mov
aaa
mov
jmp
lahf
hlt
mov
or
insl
and
and
adc
lods
dec
pop
pop
lock
xlat
fs
lahf
lahf
mov
mov
fnsave
out
es
repnz
fldenv
out
xor
aaa
cmpl
imul
xchg
cmc
add
mov
cmp
lret
mov
out
dec
rcl
std
gs
lods
rorb
lock
add
mov
jo
pop
cwtl
push
ljmp
ljmp
in
fadds
scas
stos
call
push
cmp
inc
pushf
sub
inc
movsl
hlt
cmp
mulb
jo
dec
mov
xchg
je
cmp
jnp
xlat
je
cmp
xlat
xchg
jno
call
test
outsb
jl
mov
movd
push
lea
xchg
jae
pop
xor
mov
stos
mov
outsl
xchg
popf
out
lahf
sahf
test
dec
adc
cmp
jbe
test
jg
mov
fwait
xorb
sbb
mov
stos
daa
pop
mov
in
push
insb
cmpsl
xchg
stc
icebp
inc
hlt
inc
adc
shl
and
in
je
ss
imul
lds
call
out
pop
add
aaa
ret
repnz
ja
scas
loop
sub
xchg
push
add
xor
ret
inc
loop
sbb
jp
and
repz
fadds
enter
mov
std
adc
xor
fs
xor
adcl
mov
movb
add
push
es
push
push
mov
loop
bound
or
outsb
popf
ss
pop
jge
ret
popa
jb
sub
jno
nop
out
mov
cltd
pop
push
add
adc
sbb
loopne
mov
into
out
mov
fidivs
std
test
adc
or
push
mov
xor
es
xor
jecxz
sub
repz
dec
ss
shrb
in
aad
adc
clc
cmp
sub
or
push
push
pop
inc
subl
cmp
pusha
or
cld
fcom
jb
pop
mov
add
dec
fldcw
pop
mov
loopne
push
inc
div
cmp
mov
pusha
ret
cwtl
scas
stc
cmp
xor
mov
lock
mulb
test
lock
pop
sti
mov
pusha
lods
xchg
lea
cmp
pop
ds
jns
int
jbe
les
fstps
outsl
ds
xchg
lods
and
cmp
repz
sti
and
test
mov
xor
roll
mov
or
rcrl
dec
scas
pop
bound
mov
mov
in
movb
push
sub
mov
ror
cmp
xlat
movsl
lcall
std
pop
pop
test
inc
outsb
jmp
notb
in
movb
je
out
sbb
mov
add
sub
shrl
lock
stos
cmp
popa
ror
xor
and
jo
shr
sub
in
shll
ja
adc
rcl
pop
dec
fst
imul
sarb
out
add
xlat
cli
mov
ja
stc
imul
js
jmp
fadds
js
cmp
insb
rclb
outsl
push
icebp
inc
mov
sbb
sti
add
shlb
in
sar
dec
mov
push
in
and
cmpsb
mov
sbb
dec
loop
mov
out
adc
inc
addr16
sbbb
sbb
adcb
push
inc
jmp
add
dec
sbb
push
jnp
aad
in
daa
popa
sarb
add
outsl
pop
or
xor
mov
jle
pop
cmpsb
ret
mov
lods
pop
cld
das
fisttpll
push
xor
jmp
test
dec
ror
cmp
inc
cmp
loop
mov
pop
outsb
sbb
push
mov
push
cwtl
push
push
mov
lods
mov
cmp
leave
in
cs
cld
js
repnz
jge
adc
pop
jmp
sub
inc
pop
test
or
scas
je
clc
mov
es
dec
lods
xchg
lods
shr
je
insl
movsb
mov
pop
xor
shl
cmp
and
xor
loop
dec
fs
mov
jmp
popa
adcl
cltd
cmc
jmp
jp
xor
push
movsb
xchg
stos
lahf
movsb
paddsb
pop
lods
pushf
mov
dec
jg
imul
jp
xor
sub
rclb
mov
pop
inc
mov
mov
mov
fsubrs
sbb
mov
mov
call
sub
movsb
add
stos
inc
xor
ja
cltd
repnz
xchg
jge
add
aaa
adc
pop
xor
fiaddl
xor
mov
into
jecxz
in
cltd
insl
aaa
in
insb
imul
mov
cmp
add
rclb
dec
adc
frstor
or
fucomip
xor
lea
xor
dec
imul
xchg
into
test
ja
or
mov
bound
scas
pop
inc
jle
jmp
lods
sahf
pop
fcomps
in
movsb
in
aas
xor
cli
mov
in
mov
cld
cwtl
lods
xchg
insl
xlat
mov
mov
or
imul
and
fs
mov
gs
popf
call
mov
stc
inc
or
add
mov
gs
adc
cli
fldl
rolb
mov
cmc
pop
shll
add
xchg
pop
sbb
addr16
popa
bound
pop
int3
ja,pn
mov
and
and
inc
or
or
jmp
add
jl
cmp
mov
ficoml
jmp
push
je
sbb
fsubl
movsb
leave
fwait
mov
js
addr16
repnz
dec
mov
outsb
pop
mov
mov
mov
and
hlt
scas
stos
push
setp
icebp
shl
loope
cmp
mov
in
test
aaa
lahf
dec
aaa
mov
jmp
mov
out
adc
jnp
jle
and
pop
xor
jl
scas
cs
fiadds
mov
in
cmp
or
and
push
cwtl
pop
scas
clc
or
jns
jecxz
xor
jle
xlat
cli
jle
xor
mov
add
scas
lcall
in
movsb
repz
out
pop
inc
mov
loope
push
cmp
stos
rep
sahf
mov
imull
jno
mov
loope
mov
mov
ljmp
push
xor
sbbb
push
and
xor
sbb
and
scas
aam
mov
jb
mov
pop
lahf
push
add
fs
hlt
jmp
fsubp
xchg
push
xor
xchg
stc
add
mov
mov
in
pop
pop
inc
pop
je
xor
mov
push
sbb
adc
call
pushf
mov
insb
cs
in
gs
fnstenv
sub
rolb
push
mov
sahf
rorb
jne
push
pop
cmpsb
into
ss
jae
and
cmp
mov
mov
inc
sbb
mov
cltd
pop
addr16
pop
notb
sahf
xlat
sahf
push
mov
inc
xchg
pop
shr
add
out
in
push
nop
cli
rep
ljmp
out
push
jns
jae
sahf
xchg
mov
jp
sub
mov
inc
sub
and
dec
ret
jecxz
cmp
sbb
in
mov
cli
push
mov
pop
mov
dec
gs
xor
in
test
rorl
adc
mov
into
lret
mov
push
sub
xlat
adc
mov
call
dec
xor
iret
push
push
adc
cs
ret
fdiv
sub
into
jne
lds
scas
dec
les
mov
or
inc
adc
and
xchg
std
push
js
lar
test
ss
xor
pop
rcr
xchg
push
dec
pop
jp
cmp
dec
fisttpll
in
cld
in
movsl
les
inc
mov
adc
notl
pushf
ret
and
imul
out
in
push
push
addb
jno
mov
enter
stos
fldt
leave
adc
test
fdivl
add
lock
push
sbb
mov
adc
mov
dec
add
hlt
fistpl
lods
adc
push
add
pop
or
das
dec
dec
pop
sub
std
pop
call
sbb
cmpsb
ja
inc
dec
fldl
stos
cwtl
xor
jae
arpl
push
ss
frstor
jle
inc
or
jecxz
shlb
daa
jecxz
sub
xor
mov
jge
cld
mov
pop
repz
mov
mov
mov
in
xor
xchg
mov
push
sbbl
or
gs
lcall
cmp
inc
cli
lcall
leave
sbb
xor
es
sarl
sbb
sub
and
cli
or
add
push
pop
loopne
lds
mov
in
out
loope
outsl
pop
loope
mov
dec
xchg
push
inc
cmp
push
mov
ja
arpl
jl
loope
jbe
cwtl
dec
push
dec
stc
fisubrl
cmp
sbb
dec
fdivs
xor
stos
pop
cli
sti
add
xchg
push
int3
sbb
add
jns
jp
xchg
lahf
mov
out
dec
lock
mov
add
fmuls
lahf
mov
mov
add
mov
mov
mov
lock
out
or
pop
lods
pop
cmpl
lret
xchg
add
inc
sbb
fs
leave
sub
cmc
mov
shlb
inc
pop
push
mov
call
xchg
mov
mov
fnstcw
mov
inc
inc
jp
lahf
inc
ror
sahf
lret
scas
movsl
cmp
pusha
adc
cmp
jmp
jbe
xchg
dec
mov
repnz
arpl
in
sub
inc
fwait
and
call
les
out
and
lds
mov
mov
ljmp
jmp
ljmp
hlt
mov
push
popa
inc
imul
pusha
add
into
jmp
lea
push
mov
stc
shll
inc
push
out
in
push
mov
loopne
pop
push
add
or
js
stc
or
fists
bound
jecxz
mov
mov
test
cmc
xchg
cltd
int
sbb
mov
leave
mov
rcll
mov
cltd
xor
out
mul
inc
add
push
outsl
out
addr16
inc
dec
sbb
lahf
jecxz
sbb
aad
ret
stos
adc
add
adc
popf
rcl
xlat
mov
ror
pop
jmp
sub
add
dec
imul
cwtl
push
bound
repz
inc
out
add
pushf
inc
xchg
jbe
xchg
mov
xchg
or
lret
shll
ss
add
jnp
dec
cmp
dec
imul
dec
sub
add
loope
loopne
jl
inc
into
std
or
repnz
cld
fsubrs
divb
icebp
cwtl
movsb
loope
insb
fsubl
and
ljmp
movsl
icebp
pop
ja
imulb
mov
lock
test
cs
mov
inc
jecxz
aaa
cmp
mov
or
xchg
loop
mov
dec
push
sub
cmpsb
sub
pushf
daa
daa
fcomp
adc
push
popa
jb
dec
fiadds
scas
pusha
repz
jno
xchg
jo
mov
inc
cld
jb
bound
xchg
or
inc
imul
pop
data16
cmp
pop
or
lcall
add
mov
sub
push
push
xor
ss
cwtl
mov
lret
dec
test
loopne
test
repnz
push
stc
or
fwait
rol
xor
clc
fucomp
jge
repz
enter
or
or
sub
fwait
mov
and
sub
add
lcall
cli
push
pop
out
or
fbld
insl
sbb
cmp
jnp
js
mov
fs
mov
inc
ja
imul
mov
stos
aam
jge
or
pop
sub
stc
inc
cmp
or
adc
adc
fcoms
mov
fidivrs
pop
stc
sbb
mov
ficomps
and
icebp
movsl
cmpl
lret
cmp
jo
repz
dec
into
call
push
mov
mov
test
into
sti
arpl
scas
cmp
je
in
push
out
lret
mov
add
xor
data16
lods
pop
push
sti
sbb
aas
pop
mov
push
jmp
mov
or
mov
mov
dec
push
insl
lea
adc
pop
sbb
test
hlt
pop
cs
push
jnp
push
jnp
fsubr
add
cs
mov
adc
mov
inc
stc
int
xchg
int
mov
daa
mov
push
shll
into
imul
lahf
ja
aaa
std
mov
in
sbb
xchg
mov
add
dec
xor
int3
mov
insl
mov
xchg
dec
loop
addl
fisubrs
adc
sub
add
bound
hlt
cmp
xchg
jnp
jbe
mov
int
push
mov
mov
stc
xor
daa
pop
push
gs
fidivrl
mov
xchg
push
adc
jle
dec
push
xor
pop
lcall
repz
push
das
xchg
sub
adc
in
push
or
jmp
sub
or
mov
movsl
ficompl
pop
add
test
cmpsb
lods
inc
push
testl
loope
movsl
call
or
sti
aam
jae
or
adcb
popf
mov
jbe
push
test
into
mov
xor
neg
mov
popa
xchg
rorl
jge
add
fistpll
into
push
scas
sub
or
mov
push
jo
jb
jge
adc
rclb
je,pn
mov
dec
push
insl
xor
pusha
fs
lods
and
xor
aas
arpl
shll
clc
mov
or
jne
lret
sub
or
pusha
mov
in
xchg
pop
adc
jo
in
adc
cmp
fwait
movsl
or
js
or
into
fsts
adc
or
aam
mov
sbb
stos
inc
mov
push
arpl
push
jl
pushf
pop
or
in
mov
lret
jno
jp
or
or
sub
xor
sbb
shrd
stos
dec
jecxz
cld
inc
daa
lret
sub
into
addl
ds
out
and
sub
jecxz
xchg
dec
xor
jne
inc
daa
inc
in
mov
mov
ficompl
adc
stos
mov
or
mov
ret
cltd
bound
fsts
loop
mov
clc
imulb
rcrl
or
cs
add
dec
sbb
mov
sbb
es
push
loopne
out
jp,pn
mov
add
jb
sahf
hlt
ds
xchg
lock
mov
fucomi
rolb
in
imul
add
stos
imul
adc
in
cwtl
outsl
push
mov
out
dec
rclb
dec
addl
fst
fisubs
mov
dec
and
sbb
xor
outsl
xor
leave
mov
arpl
or
mov
addr16
stos
bound
std
loope
testl
loope
fs
popa
dec
sub
xchg
and
int
sub
test
fcmovu
js
push
cld
jmp
int3
lahf
sbb
and
inc
es
or
xor
lods
mov
add
sub
shll
add
push
inc
inc
cwtl
daa
push
adc
push
mov
pusha
in
repnz
cs
push
adc
cmp
cmp
cmc
add
ljmp
jp
insl
cmc
add
jmp
lahf
fbstp
jmp
lret
jmp
cmpsl
leave
lods
in
int3
popa
cmp
ret
xchg
cmpsb
and
jb
sahf
mov
xlat
xor
lahf
cld
rcr
lods
rclb
icebp
push
in
add
cltd
push
stos
pop
addr16
xchg
subl
mov
arpl
notl
mov
inc
dec
push
fwait
outsb
hlt
shr
inc
add
repz
cs
bound
mov
jae
sub
or
stos
xor
and
call
lds
or
dec
dec
lret
les
pop
mov
es
push
and
pop
xor
adc
cmp
xlat
lods
jns
add
js
arpl
fcom
cmp
lret
icebp
movsl
jb
test
mov
lcall
into
mov
add
cli
arpl
jecxz
sbb
inc
loope
scas
aas
lcall
sub
lcall
movsl
cs
cmp
push
lahf
in
xchg
sbb
fstl
pop
iret
test
andb
pop
rolb
sbb
xchg
mov
std
mov
dec
stos
shr
adc
mov
xor
pop
shrb
pop
sub
nop
fdivp
mov
fldl
test
jl
fwait
xchg
gs
cmp
test
cli
mov
mov
sbbl
xchg
sahf
repz
mov
cmp
scas
adc
imull
inc
outsb
sbb
sub
lods
in
sub
pop
sbb
insl
mov
int3
ds
in
orl
in
insl
outsb
sub
push
or
outsl
dec
fs
fisubs
cmp
jecxz
mov
add
ds
addl
push
cmovs
add
mov
pushf
int3
aad
add
or
jmp
push
mov
repnz
movsl
in
dec
es
mov
into
jmp
cmpsb
stos
jl
sbb
icebp
adc
jae
mov
and
aas
dec
jne
hlt
mov
hlt
sbb
add
insb
cmp
pop
imul
pop
or
icebp
dec
push
pop
repz
pop
dec
stc
mov
mov
jge
mov
arpl
popf
sub
insb
jb
dec
pop
cmp
lock
dec
push
scas
cmp
xor
jl
add
fs
and
inc
or
xchg
fldenv
sub
out
push
stos
inc
mov
fldl
jecxz
jg
rorl
or
test
data16
push
outsb
jns
mov
adc
dec
sub
adc
xor
dec
fcom
cmp
xor
push
stos
mov
icebp
jl
popa
repnz
mulb
and
jl
repz
mov
sar
rcl
pop
push
add
mov
repnz
ss
js
dec
and
push
imul
pop
bound
leave
pusha
movsb
jmp
add
cli
push
mov
add
test
pop
pop
pop
out
adc
pop
mov
and
cmpsb
shlb
fsub
stc
hlt
ret
roll
adc
daa
ja
mov
add
out
inc
mov
lods
mov
mov
shl
popa
mov
ljmp
mov
dec
rcrl
mov
lods
sbb
pop
dec
mov
or
mov
jno
jnp
jbe
push
ret
pop
lds
icebp
bsf
fcmovbe
stos
xor
xchg
add
or
push
pop
xor
scas
psubusb
sub
pushf
inc
fsubs
std
jl
loopne
pop
push
arpl
fwait
xchg
inc
sbb
daa
ds
mov
inc
inc
dec
inc
sbb
jg
imul
cmpsb
push
cwtl
xor
js
add
add
shl
and
es
jmp
pusha
xchg
xor
daa
or
ja
cmpsb
jge
outsb
pop
dec
dec
dec
cmp
cmc
in
xchg
leave
adc
add
sti
shrl
pop
adc
fstpt
mov
push
imul
dec
cmpsb
jmp
scas
adc
mov
imul
jno
mov
mov
popa
jnp
sbb
insl
stos
lods
jno
in
pop
mov
sbb
gs
add
push
or
push
fucom
fwait
pushf
cmpsl
mov
stos
xchg
fmulp
xchg
xchg
dec
jg
or
fbstp
shlb
xlat
inc
mov
iret
pop
bound
lock
add
xlat
push
int3
fmuls
pop
dec
sbbl
xor
xor
fsubrs
ret
mov
dec
fildll
mov
insl
mov
inc
jecxz
inc
lcall
fsubs
sub
and
mov
std
jnp
pop
pop
inc
push
mov
out
std
xchg
fwait
and
push
jnp
mov
nop
push
inc
jle
stos
adc
mov
mov
jg
stos
lret
push
sbb
mov
sbb
add
mov
push
add
xorl
ss
movntps
shlb
mov
pop
mov
mov
inc
ja
ds
sub
and
push
insb
or
or
pop
popf
lret
stc
mov
outsb
scas
rorl
or
pop
ja,pt
cld
ret
enter
jmp
pop
xchg
cmpsl
fidivrs
repnz
lock
sbb
cmp
xchg
jbe
fdivr
pop
loop
dec
idivl
xchg
insl
or
fsubs
call
pop
dec
lahf
mov
add
lock
cli
insb
adc
sbb
rcrb
jmp
fsubr
sub
test
fnstsw
dec
mov
shlb
lret
sub
mov
mov
mov
jg
add
cmpsb
xor
push
xchg
jo
fcomps
mov
jp
adc
xchg
test
test
add
sub
leave
push
cmp
pop
cmc
add
aam
dec
pop
fdivrl
imul
mov
loop
jbe
dec
dec
jo
cmpsb
or
test
ja
inc
roll
js
popl
and
stos
xchg
mov
mov
lea
cmp
sub
xor
xor
fists
jns
outsl
je
mov
cld
sbbl
and
cmp
inc
fistpll
or
repz
dec
data16
rsqrtps
stos
push
mov
sbb
sti
fisttps
cmc
into
sar
xchg
stos
es
xor
fildll
push
cltd
ja
in
mov
inc
cmp
xchg
fmul
inc
xchg
jae
outsb
cmp
test
scas
and
xor
hlt
das
cmp
adc
sahf
loope
lds
push
pop
cmp
mov
aam
add
cmc
mov
fdivrl
push
sub
mov
cmc
dec
mov
jns,pn
mov
mov
repnz
in
in
xor
imul
push
out
repz
sarl
push
js
adc
je
or
shlb
xor
mov
imulb
cli
fucom
pushf
popf
pop
data16
push
pop
ds
cmp
xor
lock
push
out
dec
outsb
imul
sub
inc
cmp
lods
cmp
data16
cmpsb
xchg
pop
push
fucom
adc
and
lods
cmp
jg
out
les
push
mov
std
cmp
mov
mov
pop
aam
int
outsl
mov
mov
jbe
dec
ja
es
movsb
out
nop
push
lahf
xor
dec
enter
aaa
fdivr
mulps
pushf
stos
hlt
inc
leave
iret
mov
lret
lods
aam
mov
cmp
iret
push
out
mov
imul
data16
aad
mov
ror
dec
lret
icebp
imul
sub
test
jne
mov
testb
add
jns
lahf
sbb
adc
std
add
sbb
test
cmp
rcll
cmp
ret
pop
adc
icebp
and
dec
sti
in
sbb
sbb
xlat
xchg
arpl
mov
ret
xor
add
jge
out
jnp
jl
jmp
and
xchg
lods
cmp
test
pushf
insb
repz
xor
adcb
das
inc
jnp
int
fcomip
cmpsb
pop
sbb
add
sbb
jb
add
and
outsb
mov
jnp
ds
insl
adc
int
sbb
adc
add
mov
fidivrl
into
push
jecxz
xlat
test
and
mov
insl
cmp
add
nop
inc
cs
pop
jae
fidivrs
jge
out
in
jae
jbe
mov
iret
mov
stos
jb
sbb
add
sahf
jge
lgs
xchg
into
mov
lret
movsl
mov
rclb
loop
pop
aaa
lods
pop
mov
jl
setl
add
adc
mov
push
popf
popf
inc
mov
sahf
ficoms
stc
incl
or
or
inc
adc
sub
pop
gs
or
mov
lea
xor
sarb
dec
das
mov
dec
adc
mov
call
sbb
pop
mov
or
fcmovu
roll
cwtl
push
lock
dec
pop
mov
mov
mov
fs
pop
pop
lea
jge
sub
loopne
or
xor
nop
adc
je
adc
dec
mov
imul
outsb
sbb
popf
inc
and
loop
mov
and
fildll
jo
mov
call
dec
popa
iret
cmc
inc
les
stos
sub
inc
jecxz
xor
sub
js
pop
inc
fs
ljmp
mov
mov
add
jo
adc
adc
in
pusha
push
into
xor
or
daa
outsb
xor
andb
xchg
dec
call
cwtl
mov
cmp
xchg
mov
cmp
sbb
sub
sub
push
fadd
mov
pop
sbb
imul
or
jae
mov
adc
movsb
fsubrl
or
push
cmp
push
std
sbb
pop
jb
sub
dec
mov
insl
fidivrl
je
aas
dec
sbb
imul
pop
sbb
or
das
scas
cmp
mov
xlat
cmp
loope
push
mov
inc
in
pop
loopne
sbb
xor
in
xchg
xor
hlt
xor
sti
fdivrs
or
sub
insb
aad
out
pop
popf
xor
jno
push
ljmp
js
imul
xchg
jge
in
and
push
adc
jecxz
cmpsl
filds
add
adc
imul
xor
adc
jns
iret
dec
sub
imul
pop
push
pop
xchg
dec
xchg
mov
into
and
or
icebp
mov
sbb
xchg
dec
cmp
push
pop
pop
add
fcomps
inc
imul
cltd
jns
or
and
sbb
push
pop
shl
cmpb
icebp
mov
das
mov
mov
push
add
and
mov
jmp
jmp
rcll
mov
xchg
aam
mov
in
loope
adc
sbbb
jecxz
cli
test
repnz
push
loope
loopne
rcrb
xor
idivb
aas
leave
push
sbb
pop
addb
rcll
loop
daa
jge
fimuls
gs
or
fists
adcl
mov
adc
fldcw
lock
into
dec
pop
int3
cmpsb
sbb
lea
xor
push
pop
mov
lret
and
xor
pop
xor
dec
dec
movsl
cltd
fwait
clc
dec
filds
test
pop
ret
push
clc
cmp
popf
loop
adc
inc
fidivrs
rcrb
pushf
stc
dec
and
fnstenv
fisttpll
inc
fs
out
xor
sarb
mov
orb
push
lock
xor
xchg
in
xlat
adc
fs
sbb
pop
dec
jo
xor
gs
in
jbe
push
pop
dec
mov
loopne
notb
sub
sub
mov
in
mov
dec
pop
dec
fs
push
leave
jle
xchg
rcll
add
popf
mov
mov
mov
jb
out
repnz
shll
js
jbe
arpl
dec
xchg
push
adc
imul
jmp
dec
ja
rcrl
into
dec
jne
rolb
out
sub
sub
insb
ret
add
pop
ss
test
or
lret
push
je
les
bound
repnz
aaa
lds
aas
fwait
popa
cmp
jb
dec
std
inc
or
enter
movsb
pop
push
mov
xchg
xchg
shlb
in
popf
imul
xor
insb
pop
mov
notl
jae
enter
pop
cld
xor
push
stc
sbb
sbb
xor
movb
cli
add
mov
xor
sbbb
cltd
ds
xlat
lret
sub
jge
movsb
enter
aad
pop
sarb
pushf
in
jns
out
sbb
sbb
adc
jecxz
jb
jle
scas
dec
add
jno
loop
call
mov
jecxz
add
notb
cmp
fisttpll
mov
in
adc
hlt
lret
adc
mov
inc
sbb
pop
and
icebp
xlat
inc
xchg
popf
mov
ret
push
in
push
loop
sbb
test
popa
outsb
push
and
xor
push
jns
inc
sub
and
clc
loop
dec
ljmp
push
aas
repnz
fisubl
jmp
leave
add
xchg
mov
mov
pop
adc
adc
sbb
cs
or
lods
mov
push
pop
and
mov
in
test
cmpsl
out
fbstp
incb
cltd
divb
pop
cmp
imul
leave
xchg
aam
les
mov
stos
dec
insb
xchg
out
jo
daa
and
lahf
imul
lret
add
xchg
test
sbb
pop
mov
and
fstpt
jg
pop
xchg
lock
dec
cmp
cwtl
pushf
adcl
cmpsl
dec
xchg
mov
add
add
sti
das
cs
jb
das
mov
jge
xchg
aad
jl
sub
mov
jnp
rcr
aas
add
movsl
jl
lock
adc
rcll
gs
pushf
std
or
or
mov
pop
popa
lret
js
or
xchg
pop
iret
sti
stos
aam
push
jmp
xor
pop
and
mov
dec
add
adc
push
shll
mov
inc
cltd
add
iret
leave
sub
cmpsl
cmp
mov
cmc
mov
xor
lods
pushf
bound
mov
mov
sbb
mov
es
mov
cmc
popa
jle
mov
pop
pop
je
test
dec
mov
bnd
mov
mov
outsl
jne
lods
or
push
out
pop
scas
and
test
pop
outsl
add
mov
into
pop
les
sahf
mov
cli
xor
xorb
sub
mov
mov
mov
pop
xchg
mov
add
std
or
daa
cld
mov
les
lds
cs
add
lret
and
aaa
cmp
cwtl
out
imul
mov
ret
add
sbb
lods
call
addl
push
cmpsb
sbb
cmp
dec
repnz
xor
lods
ja
gs
sbb
cli
clc
roll
cmpsl
mov
in
cmc
push
mov
and
and
lods
data16
pusha
xor
faddl
insl
lcall
mov
mov
stc
enter
test
pop
out
call
jae
shll
xor
stc
pop
xchg
inc
fmulp
lock
cltd
pop
mov
add
and
push
dec
adc
in
cmpsl
clc
ret
inc
ljmp
dec
mov
jmp
push
lcall
sbb
dec
test
fwait
in
sub
cmc
lcall
sbb
sbb
das
test
push
jns
pop
mov
inc
cmp
inc
cmp
aad
lret
jns
shll
mov
inc
push
adc
cmp
sub
push
iret
push
fdivp
or
sbb
ds
icebp
mov
fs
lock
cmpsl
js
movsb
insl
jbe
sbb
lods
xchg
cmp
ret
movsl
push
jo
loopne
or
aad
xor
sti
aaa
jno
icebp
sbb
aas
mov
lds
sub
mov
cs
stos
or
fildll
mov
sbb
and
stos
pop
fwait
lock
pushf
sahf
ret
xchg
xorb
ret
mov
pop
loop
push
dec
inc
xchg
js
xchg
leave
lret
dec
mov
fsubs
mov
out
and
or
jecxz
insl
pop
xchg
or
fimull
lods
ret
mov
xchg
enter
bound
pop
jbe
adc
adcb
int
loop
xchg
dec
outsb
in
mov
push
push
inc
in
jmp
dec
hlt
pop
adc
ret
lods
jmp
addr16
ficomps
pushf
or
or
mov
or
aad
mov
mov
inc
fs
sbb
adc
shll
push
ret
adcb
sahf
add
ljmp
mulb
sub
es
jmp
into
jecxz
call
lahf
inc
jg
sub
sbb
gs
mov
testb
mov
mov
inc
ss
mov
push
sub
adc
cld
mov
es
insb
nop
in
xchg
jno
std
push
dec
push
sbb
stc
inc
push
adc
das
repz
cmp
xchg
or
stos
jl
or
imul
xor
scas
ret
adc
xor
sbb
jecxz
pop
sub
roll
in
into
mov
insb
std
ds
mov
sbb
in
xor
lds
shl
btc
xchg
out
adc
gs
add
pop
xchg
ret
jmp
adc
push
fcmovnb
std
data16
pop
dec
setl
or
arpl
and
inc
rol
jg
xchg
or
bnd
fmuls
aam
xchg
pop
sbb
jecxz
pop
sar
mov
jbe
fwait
sbb
add
jo
into
jmp
sub
jne
aad
and
push
xor
push
dec
orl
lea
pop
stos
xor
pop
sbb
imul
sub
jne
dec
and
push
out
mov
xor
aas
pop
in
push
pop
lcall
dec
cwtl
data16
or
mov
scas
push
dec
nop
sarl
rorb
test
pop
xor
xor
ja
cmpsb
pop
shll
es
out
push
jns
inc
ret
push
cmp
sub
nop
je
or
sahf
mov
mov
test
mov
in
stos
fldcw
lcall
dec
sar
cld
in
and
push
mov
cli
mov
or
add
pop
out
inc
inc
int
sub
lds
popf
mov
cmp
and
fiadds
mov
fstpt
fisubrl
cmpsb
bound
out
clc
daa
mov
jno
lret
pop
rcrl
ds
jns
sbb
mov
lret
in
pop
sahf
ljmp
aam
sti
mov
sub
and
scas
pusha
xchg
pop
dec
outsl
inc
loopne
pop
add
insb
dec
or
push
imul
and
imul
ret
mov
movsb
scas
cld
dec
push
mov
cwtl
push
xchg
add
dec
jae
push
lahf
push
mov
addr16
and
into
adc
aaa
xor
cmpsl
mov
out
adc
jne
xor
aam
push
jae
pop
cmp
aas
ficomps
into
sarb
inc
jp
mov
push
pop
mov
xor
sub
xchg
jmp
ljmp
lret
out
mov
sbb
je
dec
ror
pushf
enter
jmp
or
icebp
cmpsb
aas
jbe
pop
jnp
lcall
lods
icebp
xor
test
xor
jmp
mov
push
mov
insl
pop
sbb
cmp
lahf
mov
push
int
outsl
pop
pop
pop
scas
mov
fmulp
call
imul
sbb
sbb
xor
push
cli
xor
outsb
in
push
shl
xchg
movsl
in
das
fcomp
arpl
test
fistpl
inc
iret
xor
rol
in
mov
inc
or
cmp
fstps
mov
dec
dec
ljmp
mov
shlb
sbb
roll
push
push
push
sbb
sub
popa
sub
mov
or
stc
mov
or
inc
jle
cld
fdivs
data16
and
movsl
aaa
je
push
add
imul
pop
mov
mov
cmp
lock
add
sar
aaa
adc
add
test
push
mov
pop
jns
in
addr16
test
imul
pop
cmpsl
sti
mov
or
add
sub
xchg
mov
lret
mov
mov
mov
push
and
outsl
js
sub
inc
out
repnz
cwtl
add
lea
inc
and
pop
cmpsb
dec
jmp
xor
jns
sti
arpl
roll
ja
inc
cltd
jbe
iret
dec
das
movb
adc
in
jmp
lock
or
lds
inc
pop
loopne
lods
sahf
ret
fisubrl
mov
ds
sbb
imul
out
mov
les
xchg
lds
mov
or
lea
hlt
jmp
ljmp
cmp
push
jge
pop
lahf
lock
lea
test
or
push
inc
in
adc
jp
cli
add
cld
pop
xor
repz
test
push
jb
cmpsl
push
int3
inc
dec
jno
xor
push
cmpsb
rolb
sub
push
addr16
in
movsl
add
or
lods
rclb
stos
xchg
sub
shlb
pushf
cld
mov
dec
mov
fwait
enter
ret
mov
inc
int
add
int3
inc
sub
or
es
dec
in
jns
xchg
sub
mov
cmpsb
out
shrl
and
and
and
lahf
popf
and
lock
bound
dec
ja
push
lods
jbe
sub
mov
push
cli
jmp
mov
push
subb
xor
popf
xchg
mov
mov
out
lds
dec
push
jmp
xorl
in
push
loope
pop
imul
mov
push
xlat
add
pop
sub
shll
arpl
in
lods
jb
jp
pop
inc
neg
cwtl
xor
and
lcall
adc
add
cltd
mov
jg
sbb
jl
or
and
fwait
and
mov
adc
jb
push
push
and
lods
push
addr16
call
dec
jl
call
and
xor
mov
in
mov
pop
push
push
sbbl
hlt
popa
imul
xchg
and
aad
xor
mov
test
dec
or
xor
ret
sarl
fwait
cmpsl
into
adc
mov
fists
mov
in
push
cmp
cmp
test
jmp
push
movsl
jbe
and
add
adc
fwait
sub
test
xchg
adc
in
stos
jmp
and
pop
push
in
loopne
or
cmp
test
adc
gs
movsl
adc
jge
insb
cld
dec
popf
mov
xchg
sahf
sbb
mov
hlt
cmp
or
iret
add
cmp
out
int
repz
or
lock
or
loope
inc
sbb
mulb
setle
stos
xchg
loop
addl
xor
xchg
adc
ljmp
pop
xor
xchg
inc
imul
addr16
roll
fildll
fwait
inc
lcall
inc
lods
test
mov
das
stc
shrl
lea
or
idivl
dec
push
mov
ja
cmp
mov
pusha
fisubrl
ret
pop
mov
xlat
icebp
aad
push
sub
push
addb
xchg
inc
jge
loop
mul
cmp
nop
fbstp
icebp
incl
scas
adc
rcl
sbb
insb
mov
cwtl
in
mov
iret
adc
cli
movsb
test
xorb
pop
popf
cld
sbb
faddp
pushf
imul
lret
mov
scas
testb
push
mov
add
movsl
push
out
es
pusha
cmp
jl
add
inc
jl
add
repz
mov
push
imul
jno
daa
js
or
add
sub
ljmp
movl
jl
xor
in
scas
mov
push
push
xchg
daa
sbb
fs
and
mov
mov
clc
add
outsl
lods
mov
ss
mov
mov
stos
sbb
and
cmp
inc
inc
mov
neg
int
push
test
mov
fldt
shll
ljmp
sub
push
mov
daa
pop
fisttpll
adc
fiadds
mov
mov
adc
cmp
jne
ret
mov
ss
mov
dec
mov
test
movsb
dec
jle
dec
enter
jecxz
scas
in
xchg
aam
xor
jne
mov
lea
sbb
gs
mov
xor
or
cmpsb
xor
mov
jae
lds
iret
push
mov
mov
in
xor
xchg
dec
inc
loope
pop
jb
ja
sahf
out
dec
push
mov
hlt
shrb
cmpl
pop
cmp
call
jnp
jns
push
inc
mov
mov
xor
mov
mov
fldl
outsl
jmp
or
cli
sub
das
dec
xlat
mov
sti
rcrb
pop
aam
insb
incb
push
lret
pop
push
push
ret
das
xchg
fbstp
sarb
dec
xchg
rolb
jb
mov
push
insb
or
je
mov
sahf
loope
sahf
cmpsl
cmpsb
and
mov
add
push
jno
data16
cli
fsubl
inc
rcrl
or
mov
in
xchg
jbe
leave
fcmovb
xor
in
fistl
ds
jecxz
fs
outsl
inc
lret
hlt
cmp
and
mov
les
jp
mov
sub
rcrl
sbb
jle
cmp
shlb
cld
dec
mov
adc
les
loopne
mov
out
int
std
dec
jp
imul
ljmp
mov
repnz
insb
popa
cmc
das
mov
aas
inc
push
pop
xor
sbb
mov
mov
push
adcl
out
sub
out
xor
xchg
imul
mov
outsb
faddl
sub
lcall
ror
xchg
fidivl
sub
xor
movsl
cltd
lock
jbe
inc
testb
shll
repz
sub
stos
addr16
pop
enter
xchg
shll
or
fs
and
pop
xorl
mov
dec
push
pop
push
or
mov
jno
lret
imul
adc
sbb
lock
fbld
xchg
pop
jecxz
jle
and
fildl
js
xor
lret
sar
arpl
ss
movb
scas
xchg
roll
add
mov
jbe
pop
sbb
std
pop
inc
popf
mov
pop
sub
loop
cmp
add
into
dec
iret
inc
rclb
enter
pop
sub
insb
enter
out
mov
mov
mov
std
sbb
add
push
cmp
add
jae
pop
mov
fsts
jmp
mov
xor
pop
aas
divb
or
iret
cmc
add
imul
test
insb
sbb
fcomps
add
or
fcomps
xor
imul
ret
insl
push
dec
mov
mov
push
pop
flds
ja
imul
xchg
xor
stos
mov
mov
iret
addr16
sahf
rcrb
into
mov
rcl
in
mov
pop
outsl
mov
aam
loopne
xchg
adc
cmpsb
lahf
push
push
in
jno
fs
dec
inc
imul
add
jmp
or
xchg
xor
pop
lcall
jecxz
cs
pop
mov
xchg
pusha
xor
jnp
jbe
aad
inc
mov
and
adc
inc
nop
imul
nop
pop
push
dec
std
push
popa
push
or
lods
jecxz
dec
cmp
inc
push
lcall
popa
rorl
mov
es
ss
pop
xchg
jp
popf
fdivl
mov
mov
rolb
cmpl
aad
daa
out
push
lods
xor
dec
scas
insl
loop
sbb
mov
jle
mov
lret
pop
push
and
adcl
lods
ret
mov
mov
lock
xor
out
jg
mov
movsl
cmpsb
xchg
sub
pop
adc
int
push
enter
testb
sub
sub
xor
xchg
add
cli
cmp
lods
xor
lock
adc
mov
clc
xor
push
leave
hlt
mov
jg
dec
mov
sub
idivb
shrb
mov
add
ret
adc
not
sbb
or
aas
loope
aam
ljmp
outsb
ss
mov
testb
or
aam
imul
mov
ret
add
sbb
ja
int
push
bound
push
ljmp
mov
call
sub
sbb
push
dec
movsb
les
out
jl
mov
mov
into
divb
leave
lds
mov
int3
mov
mov
fwait
test
out
xor
inc
sbbl
pop
mov
or
ss
imull
sub
sub
movsl
mov
push
push
mov
mov
dec
xor
jb
cmp
loop
repnz
xchg
xor
sbb
sbb
mov
cmp
in
cmp
scas
mov
mov
or
orb
bound
cli
mov
fisttpll
or
xor
sbb
and
les
test
mov
sub
push
or
fildll
jle
xchg
push
cwtl
imul
in
inc
xor
aam
pop
cs
imul
xchg
mov
cmpsb
loop
daa
and
sbb
mov
sbbb
aam
repz
outsl
mov
jne
and
sub
popa
lea
mov
mov
das
mov
popf
cmp
pop
inc
sub
add
xchg
and
push
test
scas
roll
sar
cmp
mov
aaa
ss
aas
add
lock
mov
mov
xlat
push
push
call
lahf
scas
mov
cmp
popa
scas
jb
mov
pop
jmp
into
jae
repnz
sub
fs
push
jo
pop
sub
xchg
shlb
test
pushf
out
flds
push
xchg
xchg
lds
inc
popf
outsb
jo
outsl
push
scas
pop
lcall
sti
scas
and
mov
mov
roll
sahf
pop
shlb
lods
pop
cmpsl
mov
mov
inc
and
push
push
jno
shrb
and
imul
dec
xchg
test
jge
mov
stc
loope
outsl
xchg
mov
add
add
rorb
dec
inc
repnz
popa
cmp
push
lea
pop
jnp
mov
or
inc
dec
xor
mov
cmp
add
sub
xchg
mov
adc
stc
fnstsw
fmuls
mov
insl
data16
ret
mov
lret
jle
push
in
in
mov
inc
and
ljmp
mov
jmp
fldcw
je
int3
sub
cmc
xor
pushf
ret
mov
sbb
mov
inc
addl
insl
std
stos
dec
repnz
dec
sahf
jp
push
pushf
repnz
or
lea
pop
cmpsb
push
adc
mov
out
push
mov
inc
pop
in
scas
jge
data16
ret
sub
cmp
adc
loope
lahf
xchg
pop
mov
and
int
add
popa
jmp
scas
lds
in
mov
arpl
jp
xchg
dec
loopne
dec
cs
call
cmp
adc
adc
pop
cmp
iret
sub
js
mov
dec
fmuls
jno
js
mov
rcrb
inc
es
push
dec
xor
mov
call
lret
pop
iret
dec
insb
xchg
pop
xorb
push
ljmp
mov
call
flds
not
xchg
stos
cmp
adc
inc
in
rorb
icebp
mov
pop
xchg
clc
adc
and
jno
cmpsl
cmp
mov
shlb
xchg
pop
mov
cmpb
mov
lock
in
loope
andb
test
pushf
shlb
inc
jmp
pop
call
mov
hlt
jbe
pop
arpl
mov
mov
jno
fwait
ds
stos
or
sub
insb
lret
sub
cli
xor
mov
pushf
mov
cwtl
out
pop
mov
mov
loope
pop
aas
loop
les
adc
insl
pop
andl
sub
xorb
xchg
movsb
jmp
ret
pop
xchg
hlt
lret
cmpl
cmp
data16
daa
inc
mov
and
fwait
pop
pop
idivl
imul
repz
mov
lcall
jmp
imul
xchg
xchg
pop
sbb
das
cld
mov
rcr
add
lock
sti
js
jp
dec
mov
sub
mov
xchg
mov
cmpsb
popa
sub
lea
cmp
jmp
mov
inc
and
pop
aas
inc
inc
sbb
and
mov
sti
sbb
inc
xchg
popa
cmp
pushf
xchg
add
fistps
nop
roll
pop
sub
cmpsl
xchg
sub
adc
push
loop
inc
mov
jb
xchg
fwait
jge
pop
lods
roll
rcr
lock
sbb
outsl
clc
mov
lods
movsb
lret
cli
mov
xor
and
ror
or
sarl
mov
ss
cmp
pusha
fxch
in
lret
jge
mov
cmc
push
mov
xorl
sub
call
mov
and
lods
pop
mov
ret
stos
pop
sbb
mov
or
and
push
lahf
xchg
sub
dec
xor
clc
sbb
lds
test
sub
cmp
fidivrs
dec
pop
xchg
or
mov
icebp
xor
mov
sti
mov
imul
xorb
inc
imul
out
fstl
sbb
rcll
mov
jecxz
sub
sbb
and
loopne
mov
dec
fidivrl
imul
xchg
test
and
movsb
js
jno
xor
add
push
sub
stos
cmc
rorl
lods
hlt
hlt
push
sub
aad
mov
mov
cmp
pop
and
testb
cwtl
pop
inc
ljmp
add
das
adc
popa
pop
mov
sbb
sub
sub
popa
pop
sub
outsl
faddl
or
dec
inc
xchg
aas
pop
sahf
or
popa
iret
bound
xchg
jecxz,pt
sub
pop
jg
lea
add
mov
xor
sbbb
lods
mov
mov
lds
cltd
aaa
nop
xchg
out
daa
or
loopne
addr16
bound
call
xor
fcoms
jo
mov
inc
jge
inc
mov
add
cmp
adc
int
ror
jecxz
aas
call
cmc
hlt
leave
lods
fimull
out
insl
sbb
mov
shl
imul
andb
lea
mov
sub
ja
adc
adc
iret
ret
stc
into
sbb
out
roll
cmp
fsubr
aas
mov
inc
and
cmp
sbb
adc
jmp
xchg
daa
inc
or
mov
jle
pop
jl
or
push
pop
mov
dec
pop
xchg
pop
ss
cmp
add
add
xchg
arpl
stos
xor
repnz
test
test
repnz
add
mov
lods
into
ret
je
xchg
pushf
out
fs
push
and
sub
lods
scas
cmp
mov
push
daa
jecxz
xchg
sub
mov
sub
shl
ja
mov
or
adc
sbb
je
test
dec
pop
dec
test
mov
mov
push
imul
fisttps
cmpsl
push
pop
pusha
mov
push
gs
cmp
outsl
loopne
cltd
loopne
iret
sub
add
repz
out
sbb
out
cwtl
adc
lock
add
ss
and
inc
cmpb
inc
ja
xchg
pop
out
jnp
imul
addb
mov
cmp
pop
int
adc
mov
or
sbbl
mov
ds
push
or
dec
lahf
test
stc
sarl
cmpsb
dec
and
scas
mov
jle
mov
test
mov
shlb
imul
cs
lret
push
inc
into
rcl
sbb
out
mov
sbbb
xchg
sbb
stos
mov
add
shll
mov
jne
fisubl
inc
and
jnp
cmpl
mov
jne
out
cmp
sub
jp
pop
fs
lods
stos
fsubrl
dec
mov
push
and
orl
stos
pusha
xor
inc
movsb
dec
pop
mov
push
ljmp
es
sub
aad
imul
call
sti
push
pcmpeqb
aam
adc
mov
cwtl
mov
adc
add
sbb
push
jae
pop
lock
mov
das
out
pop
adc
adc
into
scas
inc
ljmp
mov
sbb
jae
jae
mov
in
dec
adc
sarb
scas
int
jnp
push
sub
add
cmp
mov
xchg
dec
add
sarb
cmp
jmp
cmpsl
and
jo
push
sub
ret
mov
stc
stos
andl
insb
das
add
mov
push
std
shll
push
mov
sbb
sbb
sbb
jge
fmul
or
rorb
aas
and
cld
cltd
mov
push
push
pushf
mov
daa
stc
and
xor
scas
ficomps
mov
inc
loope
dec
push
sub
xor
jmp
sbb
xlat
push
inc
jg
adc
repz
xlat
mov
fs
cld
cmp
aas
imul
mov
sub
aas
in
adc
hlt
lods
pop
gs
lea
add
push
es
imul
add
add
sti
mov
mov
lcall
lret
testb
rorl
je
repz
int
add
enter
repz
inc
mov
and
push
addb
push
dec
push
add
mov
outsl
xorb
and
and
data16
int3
or
leave
push
jp
jno
xor
or
and
insl
cwtl
into
xchg
xchg
addb
lea
mov
jae
popa
add
les
push
inc
inc
in
cltd
iret
test
pop
xchg
sbb
inc
push
cmp
inc
fcoml
cmpsb
mov
ret
in
or
cmpsl
add
adc
stc
ficoms
adc
push
mov
pop
pushf
les
popa
xchg
mov
push
cmc
add
sahf
cmp
push
scas
sahf
mov
push
js
mov
mov
leave
and
mov
and
dec
adc
lds
inc
xor
adc
xchg
addb
jb
adc
hlt
jp
test
jbe
sub
das
out
fucomp
scas
lret
movsl
inc
mov
data16
fidivrs
in
mov
or
mov
inc
mov
mov
pop
int3
and
scas
loop
jmp
aam
sbb
test
xchg
sbb
mov
and
xor
dec
pop
and
addb
std
push
pop
mov
push
int3
add
mov
icebp
sbb
stos
es
mov
aad
scas
repnz
sub
or
add
and
fucomp
in
ljmp
mov
or
inc
inc
test
mov
adc
jnp
cs
and
pop
inc
sahf
movsb
inc
test
sbb
pop
and
bound
iret
adc
inc
clc
lahf
cmpsl
scas
dec
iret
sbb
xor
jnp
mov
xor
nop
sbb
sub
movlps
imul
sbb
push
push
imul
mov
mov
push
call
lock
xor
mov
ret
fbld
in
or
std
outsb
jns
das
dec
cmpsl
mov
xchg
cmp
or
mov
mov
or
fsubs
sbb
dec
mov
push
das
pop
push
stos
into
pushf
test
cltd
mov
mov
fmuls
push
push
cmp
mov
repnz
pop
sub
cmp
test
test
imul
cltd
pop
insl
cmp
addb
popa
push
sbb
mov
subl
pusha
lret
mov
fdivrs
je
sub
mov
mov
push
stos
les
xchg
sbb
lds
popa
mov
or
jecxz
sub
ljmp
inc
call
mov
inc
inc
cmpsb
popa
push
jge
dec
test
cltd
mov
dec
mov
in
mov
inc
jnp
ss
iret
mov
inc
dec
lock
pop
push
ds
jmp
aad
mov
add
sbb
push
mov
xchg
repz
aad
push
shlb
das
in
pushf
and
andb
arpl
mov
jg
mov
xchg
imulb
adc
mov
and
dec
daa
rolb
mov
sbb
cmpsl
adc
mov
dec
stos
cmp
pop
jle
adc
clc
div
push
loope
sub
mov
xchg
out
or
pushf
inc
mov
adcl
xlat
cmp
inc
xchg
loopne
aaa
adc
sub
mov
pop
pop
jno
mov
jle
sub
mov
mov
jge
addr16
jp
lcall
leave
call
lahf
xor
inc
dec
dec
arpl
jbe
int3
outsb
push
out
outsl
xorb
insb
sbb
add
fdiv
gs
dec
pop
ds
push
jae
lds
in
mov
xchg
sti
subl
mov
mov
push
loope
inc
mov
movsb
mov
mov
sar
lahf
pop
insl
iret
ss
and
cmc
and
es
int3
sub
je
mov
int3
lahf
int3
das
dec
sub
into
popa
mov
jmp
mov
pushf
add
jmp
adc
xchg
mov
repz
repz
in
cwtl
subl
inc
pushf
and
ficoms
call
lret
lret
loope
lcall
in
and
pop
mov
or
jmp
rcr
pop
aad
roll
or
in
divb
js
add
aaa
cli
push
aam
and
pusha
sti
imul
popa
mov
leave
lcall
xor
jp
cmp
jg
xchg
hlt
aaa
hlt
xchg
xchg
add
pop
les
jge
mulb
inc
adc
and
jg
les
jg
inc
mov
push
cltd
mov
cmpsl
addr16
test
lods
les
mov
stc
bt
ja
xchg
fnsave
bound
mov
inc
nop
sub
insb
cmpsb
jno
call
adc
ss
xchg
xor
xorb
js
fcoml
data16
inc
lcall
sbb
in
mov
and
cmp
stc
cmc
add
lcall
ret
and
movsl
mov
out
aad
push
inc
and
mov
shll
nop
test
pushf
mov
js
iret
sub
inc
out
inc
mov
rcll
xlat
jl
movsl
pop
or
jmp
fs
enter
test
jns
gs
pop
cmpsl
xor
and
popf
mov
mov
nop
icebp
call
repz
jns
in
daa
xchg
mov
test
test
in
js
test
dec
sub
insl
and
fidivs
outsl
and
in
push
ret
push
push
repz
imul
imul
ss
int
cmp
lods
popa
push
jmp
mov
pop
adc
add
adc
lahf
mov
dec
gs
mov
iret
pop
call
rorb
daa
jae
push
and
sete
pop
inc
mov
sti
mov
xor
mov
pop
enter
mov
pop
dec
and
movsb
mov
insl
ficompl
aas
cli
sbbl
in
test
test
cmpsw
mov
mov
jl
dec
xchg
fisttpll
or
and
and
jo
xchg
roll
xchg
repz
xchg
or
aad
add
mov
or
sub
and
mov
popa
sar
push
in
cmp
jp
stc
and
jae
data16
loop
mov
mov
pop
int
fwait
leave
mov
dec
adc
loope
mull
repz
xor
jo
push
xchg
add
ljmp
pusha
shl
jae
pop
imul
insb
jnp
mov
adc
jmp
lcall
cltd
and
scas
and
jo
mov
push
movsb
sub
xchg
sbb
jbe
mov
lods
lds
jae
leave
dec
sub
stc
jp
lods
sub
pop
push
mov
in
push
push
dec
es
pop
loop
out
dec
xor
cwtl
inc
adc
adc
fsubr
add
xchg
pop
mov
rorb
sbb
sbb
sbb
pop
mov
push
js
mov
push
paddsw
hlt
into
mov
dec
jb
push
shl
lods
mov
mov
push
sti
xchg
push
es
xchg
push
jl
mov
or
mov
js
pusha
fldenv
mov
aad
test
jecxz
add
pop
fildll
dec
and
outsb
jecxz
leave
decl
hlt
push
pop
fisttpl
dec
sbb
loopne
mov
enter
pop
adc
and
daa
aas
loope
or
lock
push
aam
cwtl
hlt
dec
dec
bound
dec
push
loopne
push
movsl
inc
jbe
vmptrld
shr
ljmp
mov
push
divb
and
and
mov
sub
pop
pop
je
jle
fdivrs
int3
fwait
arpl
push
xchg
clc
adc
loope
xor
data16
mov
inc
enter
decl
xchg
js
dec
adcb
scas
mov
jne
cmp
imul
add
jbe
jns
ja
push
inc
push
xchg
movsb
mov
out
sub
inc
imul
loop
imul
push
mov
xor
sub
decl
pop
xchg
cmpsb
jbe
jge
xchg
les
sbbl
xchg
mov
inc
jnp
loope
cmp
jae
into
add
fdivl
pop
dec
pop
mov
pop
lock
loopne
fidivs
pop
add
incl
sti
aas
and
dec
adc
add
into
stos
push
jmp
cmpsl
aad
push
adc
xor
sub
add
nop
mov
scas
imul
jmp
ljmp
xchg
xor
xor
and
loop
cli
sbb
push
imul
jge
add
inc
or
popf
sbb
push
pmulhuw
mov
cmp
lahf
mov
and
call
xchg
pop
outsb
add
daa
int
jbe
cmpsl
or
cs
in
adc
sub
imul
jge
jns
imul
push
and
movsl
dec
xor
ficomps
test
imul
repz
mov
test
stc
outsl
mov
dec
adc
shrl
test
aam
stc
dec
jae
test
or
mov
pop
or
dec
les
pop
pop
cmp
sub
lahf
push
mov
orl
xor
lahf
and
data16
fwait
lcall
or
lret
fcmovnu
cmp
lock
in
lock
cmp
scas
movsb
push
unpcklps
aam
mov
jle
dec
test
pop
mov
div
dec
cli
int
mov
sbb
in
pushf
repz
add
xchg
stos
orl
mov
test
das
les
inc
addb
jl
push
or
ja
mov
les
or
jo
xor
mov
push
imul
repz
xchg
mov
pusha
jle
mov
xchg
jae
dec
adc
push
dec
sbb
xor
mov
imul
mov
or
stc
push
and
lret
lods
mov
mov
push
push
pusha
fucompp
jg
xchg
jg
lea
cmp
dec
outsl
sub
ja
mov
and
mov
sub
in
push
imul
shrl
repz
outsb
sbb
jno
cmp
mov
or
lods
loop
mov
sub
sbb
stc
mov
fdivl
jp
leave
lock
lret
mov
sbb
inc
cld
fsubl
push
cmp
jbe
adc
imull
cmp
mov
out
sbb
sub
or
mov
pop
lock
outsb
mov
xchg
lret
or
mov
icebp
cmp
fs
pop
loop
enter
out
or
mov
and
pop
push
inc
mov
sub
jae
into
cmpb
fisubrs
or
icebp
inc
xchg
cmpsb
lods
mov
push
lcall
xchg
or
lret
mov
and
pushf
into
int
cmp
in
add
lcall
jae
mov
in
pop
cmpsl
pusha
stc
out
cmc
int
into
xor
lods
cld
mov
sub
or
mov
mov
leave
jb
stos
xor
lea
cltd
cmp
stc
cltd
nop
aas
push
js
das
mov
enter
cmp
mov
mov
cltd
mov
cli
in
dec
add
fnstenv
loope
notb
and
or
add
sbb
pushf
lret
lods
pop
jp
imul
adc
add
fiaddl
insl
or
adc
ljmp
imul
bound
jb
fisttpl
das
fmuls
xchg
and
loopne
xor
fstl
xchg
cld
mov
mov
xor
fcos
jg
pop
cmp
pop
es
lods
and
in
or
jp
adc
xor
sbb
jbe
test
das
or
inc
mov
shrl
fildll
call
sbb
mov
push
sub
stos
jnp
inc
mov
frstor
add
cmp
lahf
in
imul
inc
xlat
cmp
jae
add
mov
mov
lods
or
cmp
sahf
je
pop
ds
jg
sub
mov
cmc
mov
insl
sbb
mov
adc
imul
movsl
daa
fst
pop
mov
or
push
dec
fnstcw
test
sub
dec
fiaddl
pop
mov
out
jnp
pop
movsl
subb
das
outsl
push
mov
cmp
pop
test
scas
xor
xchg
in
xchg
mov
insb
push
int
popl
insb
pop
mov
push
cwtl
cli
fwait
mov
test
imul
fildll
sub
xor
int
dec
ljmp
test
mov
fnstcw
pop
cwtl
xor
inc
push
cmpsb
popf
xor
cli
mov
test
and
repnz
add
fmuls
iret
mov
andl
scas
dec
mov
sub
sbb
mov
inc
jbe
or
jmp
out
xor
mov
xchg
iret
in
outsb
cmp
cmpl
fwait
test
ret
mov
jb
mov
sbb
jns
ljmp
sbb
mov
sub
pop
pushf
sar
dec
into
fisubrs
mov
out
xor
loope
adc
test
dec
pop
xchg
mov
adc
fmuls
mov
cwtl
imul
test
cmpsl
sub
xchg
mov
xchg
or
and
and
scas
jg
iret
cmpsb
push
add
xor
int3
repnz
imul
jmp
fdivs
repnz
fdivp
sub
or
mov
lods
sub
movzwl
repnz
popa
mov
jnp
push
and
mov
into
cmp
lea
and
dec
shll
dec
pusha
jp
sbb
not
aam
inc
insb
aaa
pop
push
testb
imul
mov
mov
mov
jbe
loopne
imul
lcall
push
mov
mov
sbb
in
ss
jo
faddp
bound
adcl
xor
cwtl
or
loope
adc
adc
sub
dec
mulps
jns
stos
iret
stos
jno
cmpl
xchg
jg
lods
push
inc
and
mov
je
cmp
test
out
mov
and
mov
inc
lods
cltd
lods
insl
les
xor
xchg
aam
mov
push
push
mov
scas
pop
int
push
mov
and
inc
dec
pop
mov
add
inc
test
in
bound
cmp
xchg
sub
stos
loope
pop
out
sahf
jmp
mov
je
adc
xor
aad
adc
mov
jnp
inc
or
sbb
fsubr
daa
mov
and
add
loop
jmp
aam
cmp
xchg
rcl
sub
fwait
mov
adc
enter
mov
shll
sub
aad
push
shl
add
imul
add
lods
les
pushf
neg
fbld
pop
lcall
sbb
sti
test
fdivs
test
xchg
pop
mov
negb
adc
xor
mov
jge
fsubs
out
or
idiv
pushl
cmp
jle
xor
nop
lods
jge
lahf
xchg
cmpsb
into
xor
lret
inc
call
das
mov
and
jmp
test
mov
cmp
call
das
out
cli
shlb
dec
push
add
or
aad
loopne
leave
push
sub
lret
xchg
xor
shrl
fcoml
sub
pusha
pop
test
loopne
sbb
sbb
fcomi
leave
mov
outsb
mov
insl
push
adc
ss
fs
repz
call
add
and
xlat
repnz
dec
and
flds
mov
arpl
adc
and
sbb
mull
cmpsl
fnstenv
ret
pop
jae
cmp
pop
dec
adc
or
push
pusha
lods
repz
adc
ja
xor
scas
fwait
cltd
roll
jp
jb
sub
fidivrl
scas
pop
loope
push
xchg
ds
push
inc
orl
mov
int3
lds
lea
and
add
into
xor
push
bound
dec
inc
push
sub
loopne
cli
icebp
orl
and
sahf
sbb
pop
fwait
pop
in
jp
test
pop
fsubs
sbb
nop
mov
into
mov
in
xchg
xor
pop
insb
in
icebp
and
or
es
adc
cmpsl
mov
lds
lahf
ror
nop
mov
jl
imul
icebp
inc
dec
push
shrb
sbb
sub
pop
adc
leave
pop
fsubrs
cmpsl
cmc
fistpl
mov
stc
inc
cmp
or
mov
fcomps
xchg
push
and
or
repz
ds
inc
stc
jo
xor
stos
fs
jns
mov
lcall
jnp
ss
shlb
jmp
out
push
sbb
aaa
notl
add
loopne
sbb
pop
fucom
mov
sub
scas
imul
sbb
cmp
mov
repz
call
cs
pop
imul
cmp
push
cld
mov
stc
lods
bound
inc
mov
push
push
repz
and
adc
jbe
jnp
add
sub
hlt
lret
or
cmp
cmc
sbbl
or
pop
subb
scas
xchg
cmpsl
lods
xchg
push
inc
or
mov
push
fs
inc
sub
inc
fbstp
in
pop
lea
push
imul
bound
test
jo
lds
mov
cs
loope
adc
xchg
aas
jge
sub
sub
mov
dec
jno
sub
out
test
xor
imul
sub
mov
out
pop
cmpsb
fmul
jae
in
insb
test
jle
dec
repnz
sti
test
in
inc
cmpsl
call
rorl
dec
aam
out
sti
imul
loop
cmp
jg
or
repz
xchg
insb
ljmp
and
jae
scas
pop
leave
add
shll
push
in
in
inc
mov
fucomp
popa
xor
pop
pop
adc
mov
xlat
imul
cs
loop
mov
lods
jmp
lds
bound
cmp
loop
aaa
xlat
iret
cs
ficoms
sbb
in
push
pop
xor
aad
movsl
inc
data16
or
jmp
or
and
repz
mov
scas
aam
mov
pushf
push
sarb
subl
cmp
sub
cmp
mov
jl
inc
leave
xchg
test
xor
mov
sbb
imul
int3
maskmovq
inc
xlat
pop
dec
dec
jns
pop
inc
dec
cmp
xlat
xlat
lods
aaa
aam
jle
fbstp
es
lods
les
mov
stos
cmpsb
inc
bound
dec
adc
mov
mov
imul
test
mov
fadd
xor
out
push
pop
aam
dec
inc
test
mov
test
cs
dec
lahf
dec
out
fldcw
pushf
xlat
decb
hlt
pop
mov
les
xchg
mov
lock
or
lea
clc
pop
mov
nop
bound
imul
jae
jno
or
rdtsc
mov
xchg
add
push
je
add
rcrb
in
mov
test
lahf
movsb
and
mov
xor
repnz
in
mov
xor
mov
test
xchg
jmp
popl
jnp
test
and
xchg
push
sub
cmp
mov
xor
stos
jns
divb
out
pop
mov
dec
and
xorb
sub
pusha
mov
lcall
enter
insl
clc
lock
sahf
sub
sbb
sub
push
or
mov
imul
add
or
ds
lcall
push
jle
sahf
js
lods
aad
leave
scas
hlt
add
adc
push
call
jge
out
or
lods
inc
inc
fcmovbe
cmp
outsb
inc
popa
cs
inc
jecxz
add
cmpsl
outsl
jnp
add
cltd
xchg
jmp
ret
sub
mov
xchg
fdivrp
xor
inc
pop
insb
dec
aaa
shl
jcxz
mov
adcb
out
cs
adc
mov
mov
add
mov
mov
pop
jae
daa
inc
xchg
js
nop
sbb
inc
dec
push
lock
push
ret
repz
out
dec
jb
sbb
data16
push
icebp
sub
lahf
pop
mov
add
push
loop
aaa
int3
in
mov
sarl
fiadds
fisubrs
loope
fdivrl
xchg
ss
test
xchg
stos
lods
mov
push
cwtl
mov
popa
jb
popf
push
pop
inc
push
or
inc
mov
call
imul
dec
int
in
jg
sbb
adc
dec
or
or
jno
cmpl
bound
scas
dec
mov
push
mov
scas
sti
jmp
in
aaa
lret
in
jns
ja
adc
test
jge
push
mov
pusha
rolb
scas
mov
leave
jae
dec
imul
add
push
push
cli
pop
out
pop
sti
mov
pop
cmp
cmc
daa
lahf
jmp
push
cmp
stos
lret
mov
jno
ljmp
and
adc
and
insb
jp
push
rorl
mov
mov
sti
repnz
cmp
xchg
into
aad
cmpsb
pop
push
sub
int3
or
fdivr
cmp
lds
rorb
and
mov
inc
push
jnp
adc
xchg
testl
ud0
fistl
loope
subb
repz
sbb
sbb
in
sarl
dec
and
inc
adc
lcall
cmp
gs
divl
mov
lcall
jo
fcmovu
hlt
sahf
test
fldenv
jle
in
mov
test
push
adcl
add
mov
push
bound
xor
insl
shrb
inc
dec
je
adc
loop
cmpnltps
adc
jnp
add
fwait
leave
ds
push
adc
into
jp
xchg
sbb
mov
sbb
push
fistl
stc
sub
jo
or
sahf
inc
lahf
adc
xor
xchg
push
jp
call
pop
outsl
mov
mov
out
cmp
cltd
movsl
push
mov
cmp
inc
fs
mov
mov
and
push
xor
mov
popa
js
add
es
mov
data16
imul
jnp
mov
xchg
sahf
aad
shrb
pop
and
data16
jns
xchg
pop
iret
aas
or
xor
push
and
test
push
or
xchg
jmp
or
pop
ret
pop
leave
cltd
aas
cmp
xlat
push
and
mov
ss
notl
rorl
jecxz
aam
sbb
ss
out
lds
cli
rcrb
xorb
cmpsl
dec
outsb
push
in
xor
repnz
lcall
leave
xor
loope
adc
cwtl
fadd
clc
bound
loopne
cmpsl
inc
and
inc
add
cltd
push
mov
xchg
jp
call
pop
sbb
xlat
and
inc
dec
fimuls
repz
cli
add
sarb
aas
inc
xchg
fsts
enter
pop
mov
addl
gs
and
pop
dec
in
out
push
inc
inc
fbld
jp
std
in
mov
mov
jle
sbb
loope
rorb
fistps
cltd
addl
sahf
jns
sub
testl
mov
jle
mov
sbb
cmp
rorl
std
pop
mov
cwtl
pop
inc
pop
jae
xchg
jecxz
flds
insl
jae
dec
mov
sbb
mov
in
lods
pop
sub
pop
int3
pop
pop
outsl
sarl
jbe
pop
test
cmpsl
mov
stc
or
mulb
clc
push
cmp
out
imulb
inc
xchg
insl
push
or
leave
jp
mov
mull
or
cltd
jb
imul
bound
leave
add
stos
sbb
dec
jne
addr16
mov
aaa
pop
cmp
adc
lea
pushf
outsb
xchg
stos
cld
loope
cmpb
push
call
add
pop
sbbb
mov
mov
das
scas
imul
nop
js
movl
mov
imul
mov
jle
sub
sarl
cmp
lods
and
aaa
in
cli
repnz
aad
inc
or
daa
push
and
sbb
ljmp
lea
sbb
in
inc
dec
mov
insl
adc
and
arpl
adc
sub
cli
stos
sbb
inc
adc
popf
xor
movl
inc
iret
dec
pop
sbb
ret
pop
ja
cmp
lcall
sub
cwtl
stos
enter
ret
adc
or
xlat
mov
mov
sub
arpl
hlt
outsl
insl
loop
lret
push
cmpsl
sbb
push
sbb
jo
imul
sub
addl
xchg
cmp
rcr
outsb
push
sti
adc
cltd
add
xchg
pop
test
cmp
cmp
loopne
inc
aam
int3
adc
adc
push
dec
lahf
ja
xor
jae
mov
sub
jge
lret
sbb
cmp
mov
sub
pop
lds
add
xchg
dec
and
mov
inc
sub
loopnew
sbb
xchg
je
or
dec
and
or
pop
pusha
jge
adc
push
adc
mov
mov
pop
mov
push
dec
sbb
loope
arpl
push
outsl
xchg
imul
cmp
dec
adc
testl
sub
sbb
mov
test
mov
or
xchg
xchg
fcompp
xchg
lods
stos
fwait
xchg
sti
aam
rorb
out
stc
sahf
inc
jmp
iret
aaa
jno
lret
push
mov
push
pop
stos
jns
pop
adc
pop
or
lahf
push
jecxz
pop
fdivrl
fcomp
and
mov
insl
loop
dec
xchg
add
roll
pop
pusha
loop
mov
sbbl
fldt
push
mov
mov
mov
jnp
mov
adc
scas
pop
mov
adc
dec
ljmp
int3
mov
fwait
and
rorl
cwtl
adc
les
insb
divl
sub
and
std
psubq
sub
jp
xchg
repnz
inc
cmp
in
pop
mov
leave
cld
adc
and
movsb
jmp
push
cli
push
in
sub
dec
xor
popa
mov
mov
daa
mov
dec
mov
jle
rol
or
aam
cmp
cmp
stos
sub
insb
inc
aam
xor
jle
pop
sbb
add
sub
or
cli
jnp
add
outsl
mov
lods
and
cmpb
cld
add
xor
stos
push
nop
inc
or
dec
jnp
jmp
pop
push
mov
mov
xchg
inc
sub
pop
mov
test
mov
mov
sbb
inc
xchg
std
mov
cs
sub
dec
test
js
ret
popa
inc
cmp
xchg
ret
out
adc
and
gs
push
cmp
jae
lahf
sbbl
clc
pop
std
add
je
push
mov
mov
lods
sbb
jl
xlat
movsb
stos
dec
lods
xchg
and
inc
or
aas
dec
leave
insb
std
out
pop
xchg
outsb
test
push
lods
adcb
gs
adc
enter
repnz
outsb
es
jns
call
aas
jno
ljmp
lcall
dec
cmp
cmp
inc
inc
sub
add
push
lret
push
in
sub
ficomps
test
or
das
roll
pop
int
mov
mov
push
dec
jne
xchg
sti
inc
xlat
push
dec
pop
sar
cmp
test
ds
pop
int
jmp
lock
mov
jge
in
cli
cs
cmp
stos
ret
pop
xchg
mov
cmp
in
sub
mov
cli
lock
jb
jg
sbb
imul
dec
jp
sub
pop
xchg
hlt
sub
adcb
mov
push
dec
and
inc
ljmp
xlat
jecxz
lock
jg
pop
cld
cmp
ret
movsb
xlat
push
mov
cwtl
push
cmpsl
ror
dec
inc
popf
cld
out
dec
sub
cwtl
pop
push
pusha
mov
or
test
and
in
lea
and
lds
rcrl
call
jno
je
shrl
and
xchg
rorl
js
pop
scas
push
rorl
xor
mov
mov
call
scas
inc
push
das
dec
cmp
inc
sub
xor
adc
xor
shll
cs
push
adc
mov
cmpsl
sbb
sub
rorl
and
aaa
std
mov
mov
es
inc
retw
jne
in
leave
subb
push
mov
jnp
das
add
daa
pop
rclb
cmc
or
stc
in
fiadds
pop
orl
sbb
inc
mov
fildll
enter
dec
push
aas
subl
mov
bound
adc
iret
or
pop
hlt
popa
cmc
pop
test
daa
mov
sbb
and
lds
cwtl
sub
mov
and
pop
sahf
cmpsb
push
aad
xor
je
aaa
inc
stos
fsubr
jmp
popf
mov
bound
mov
cmp
fnstcw
nop
pop
mov
jne
test
ss
dec
lods
pop
cmp
fiaddl
pop
hlt
pop
or
inc
sbb
rcl
ljmp
mov
cmpsb
push
xchg
lahf
mov
mov
cmp
or
sub
sub
jo
push
rorl
stc
sbb
sbb
lods
or
fwait
cmc
push
addr16
inc
add
outsb
addb
mov
clc
idivb
lock
jl
int3
leave
sub
aas
mov
es
add
insl
fsub
into
fwait
mov
in
mov
jmp
mov
shrl
cmp
adc
adc
add
adc
mov
jecxz
mov
pusha
test
aaa
cs
js
xchg
sbb
lret
or
jmp
call
add
idiv
cltd
push
pop
mov
lods
rorl
cmpsb
in
aad
sbb
mov
sti
sti
pop
push
int
mov
xor
xchg
and
cld
xchg
pop
std
mov
sbb
pop
lcall
push
push
adcl
lret
mov
into
sub
push
adc
push
cmp
add
pushf
lcall
in
loopne
add
decl
and
mov
inc
adc
adcb
lock
mov
dec
xchg
pop
leave
int
cmpsl
lds
adc
mov
sbb
test
push
imul
testb
ror
ret
bswap
lods
mov
test
push
add
enter
cmp
xor
shrl
pop
add
ss
jge
sahf
flds
dec
call
nop
daa
les
sub
pushf
sbb
mov
shlb
test
andb
or
ss
lahf
pop
orl
loope
imul
or
pop
inc
je
fldenv
into
mov
sub
pop
adc
leave
mov
push
xchg
xchg
insb
aas
ret
or
js
cmpl
dec
enter
insl
lret
sbbb
pusha
push
push
jl
inc
out
jge
dec
inc
cmpsl
dec
mov
aad
lret
push
xchg
out
addr16
and
dec
sub
mov
iret
iret
and
pop
lcall
xchg
jnp
xor
mov
pop
pop
push
into
dec
rcll
push
stos
add
mov
push
loopne
out
cmp
mov
clc
test
into
add
sub
cli
add
ljmp
dec
mov
push
pop
dec
xor
in
fs
sub
mov
jb
xchg
jg
mov
inc
xchg
in
inc
sti
push
sub
mov
shlb
bound
stc
fstpl
cmp
pop
push
and
jae
inc
sbb
jo
cmp
xchg
jp
cmp
xchg
fucom
xchg
inc
inc
mov
pop
cmp
jnp
push
lds
mov
gs
push
iret
rcrb
pop
mov
es
jnp
push
stos
sbb
push
cld
pop
mov
mov
cmp
sub
shrb
movsl
sbb
xchg
fwait
dec
cld
das
xchg
jo
lret
enter
and
in
jle,pn
mov
clc
push
insl
add
stc
and
mov
inc
or
mov
add
xor
dec
cmc
sti
inc
adcb
xchg
cltd
out
jmp
adc
mov
mov
jo
mov
adc
jb
enter
pcmpgtd
or
push
cli
cmpsb
sub
loop
std
cltd
call
leave
ret
mov
push
aas
push
inc
mov
jle
cmpsl
lret
fstl
or
or
xor
lret
lock
cmp
mov
lret
cmpl
inc
les
pop
aam
xchg
pop
insb
xchg
cli
mov
pusha
adc
xor
repnz
popf
pop
jp
mov
sub
mov
mov
dec
addr16
loop
test
xchg
rorb
mov
add
pop
jae
cli
dec
leave
wbinvd
std
dec
xor
test
sbb
pop
test
test
popa
iret
inc
pushf
jno
mov
dec
es
ret
add
mov
sbb
stos
test
cli
mov
add
mul
cmp
insb
xor
push
cs
xchg
inc
cltd
scas
jmp
addr16
sub
ret
ljmp
cmp
pop
loopne
movsb
mov
scas
aam
dec
je
cwtl
test
sahf
fnstsw
and
add
mov
pop
adc
push
mov
jns
frstor
jmp
nop
jnp
cmpsb
lods
push
sub
inc
fstpt
adc
mov
das
mov
loop
add
in
pushf
and
sub
push
decl
pop
pop
add
xchg
xchg
das
cmpsb
shll
xor
inc
mov
sbb
sbb
xor
jbe
sbb
adc
fldcw
mov
fimuls
roll
jno
enter
dec
sub
mov
imul
jne
insl
push
cmp
mov
lret
jno
fistpll
xchg
inc
popa
subb
lods
push
dec
call
mov
lds
inc
and
insb
js
inc
sbb
pop
into
pop
cmp
cmpsb
into
aas
lock
daa
add
push
lcall
outsb
sbb
xchg
out
scas
loope
movsb
sbb
mov
jne
mov
icebp
sbb
fldenv
and
mov
aas
movsb
outsb
out
and
movsb
push
stos
imul
leave
test
loope
mov
aaa
adc
lods
and
repz
aad
ret
and
daa
mov
xor
lods
sbb
jle
mov
add
mov
xchg
test
das
loopne
movsl
into
xchg
pop
adc
xchg
pop
push
cmp
and
push
jmp
sbb
cld
push
jp,pt
std
dec
fdivrl
mov
std
addb
xchg
int
xor
xor
or
pop
fidivrs
add
outsb
and
xchg
insl
sbb
push
cmpsb
push
mov
dec
movsl
and
clc
pop
fwait
xchg
mov
ret
dec
mov
fbld
cmp
jp
push
jg
mov
ds
stc
pop
pop
xorl
inc
adc
mov
test
aam
jns
aad
push
push
inc
xor
fcmovu
test
adc
add
dec
xchg
out
arpl
pop
cmp
repnz
ret
pop
test
stos
mov
sarb
ja
xchg
mov
insl
and
or
xchg
lods
xchg
in
in
vdivsd
std
out
mov
pop
repnz
add
rcr
cmpsb
dec
xor
adc
inc
xchg
aas
out
adc
xchg
xchg
orb
adc
andb
cmc
adc
popa
loopne
pop
xchg
loope
mov
in
xor
icebp
fldenv
xorl
scas
lret
incb
gs
imul
xchg
fmul
xor
lods
add
dec
cmpsl
out
dec
daa
in
testl
ja
push
mov
mov
adc
cmp
lds
movsb
mov
push
push
out
scas
jae
orb
lahf
daa
or
xor
ds
push
mov
xor
outsl
pop
ljmp
fcmovbe
insb
outsb
fldcw
add
mov
pop
mov
out
fs
inc
daa
xor
test
clc
and
inc
nop
and
cmp
stos
loope
aas
aam
and
xchg
popa
mov
xchg
popf
scas
lods
fwait
sti
jmp
mov
mov
fstps
fisttpl
gs
popa
pop
mov
pop
inc
or
sbb
mov
aad
and
cmp
scas
scas
adc
push
in
add
pop
mov
mov
add
mov
xor
std
nop
xor
push
rcl
arpl
jno
inc
pushf
jnp
dec
les
into
cmp
inc
pop
sub
mov
xchg
out
lret
and
sub
push
sbb
add
pcmpeqw
push
callw
subb
jb
bnd
insb
shlb
mov
xchg
out
out
inc
dec
mov
push
inc
cmp
in
movsl
int
roll
iret
mov
in
in
lods
cmc
popa
xor
lcall
outsl
dec
mov
ljmp
leave
mov
insl
jle
or
dec
cmp
test
je
sub
cli
dec
and
push
jae
loopne
adc
dec
dec
movsl
cmpsl
js
inc
sbb
sbb
repz
and
and
xor
add
stos
and
sbb
jae
lahf
enter
xchg
rcll
push
outsb
das
daa
mov
in
mov
das
fstl
cmp
inc
mov
icebp
lcall
add
pop
inc
pop
mov
and
lea
or
sarl
cmpsb
dec
xor
in
add
in
outsl
mov
dec
sbb
and
add
mov
int3
xor
jecxz
popa
dec
stc
pop
mov
add
sbb
pop
xchg
out
in
int3
repz
arpl
push
pop
adc
cmpsb
cld
clc
in
mov
das
iretw
in
ret
pop
xor
sub
sub
push
xor
sbb
xchg
aad
mov
fnstcw
xchg
sub
mov
mov
ja
cmp
stos
pop
push
addr16
lock
jne
outsl
addb
jl
out
dec
adc
sub
sub
xlat
fxch
bswap
les
mov
sub
push
sub
xchg
mov
addl
mov
sbb
dec
mov
std
pushf
jmp
xchg
stos
sbb
mov
movsb
aam
push
loopne
pop
pop
clc
cmpsl
int
std
xchg
sub
test
test
out
mov
aad
mov
jns
dec
jne
jns
repnz
lret
jne
ret
mov
jle
ljmp
shrl
in
push
pop
stos
out
jmp
sub
mov
lcall
js
rorl
and
cmp
bound
jge
bound
dec
or
or
lret
push
idivl
pop
cmp
fs
mov
aas
mov
jo
pushf
shrl
ds
dec
xlat
cs
sub
idivb
movsb
sbb
xchg
adc
lret
push
cwtl
add
xchg
jmp
add
cmp
jbe
mov
aam
sub
push
ret
repz
shlb
push
test
cmp
xchg
mov
aad
test
fyl2x
outsl
jne
shlb
rolb
leave
leave
andb
mov
arpl
dec
adcl
les
sub
adc
lret
fdivrp
fs
in
arpl
daa
mov
xor
lcall
jns
pop
cli
cmpb
cmp
mov
or
xor
and
test
pop
cmp
stc
push
xchg
push
stos
jb
mov
stos
shll
jg
sub
and
sub
pushl
xor
or
jg
push
sub
int3
xorl
xchg
xchg
push
nop
dec
sbbb
inc
sub
xchg
push
imul
shll
xor
fcompl
mov
add
daa
iret
outsb
clc
fisttpl
fidivs
daa
pop
es
mov
push
mov
pop
inc
push
push
jns
push
mov
std
adc
shrl
arpl
loopne
loope
and
test
xor
jecxz
ds
dec
add
jl
in
lcall
mov
mov
cmp
and
mov
out
mov
dec
in
xlat
dec
les
xchg
mov
push
mov
xlat
stos
or
iret
fdivl
push
sarl
dec
cmp
in
cmovg
xor
sub
xor
cmpsb
dec
jl
sbb
mov
dec
xchg
add
les
test
add
xchg
push
jp
lahf
add
cltd
adc
out
xor
push
or
mov
fldl2t
icebp
fucomp
push
pop
lret
adc
lcall
xor
mov
bound
jecxz
fldln2
lcall
scas
ds
movsl
aad
xchg
pop
jmp
dec
adc
dec
add
sub
cmp
inc
push
pop
xor
repnz
fiadds
add
mov
imul
push
sub
std
leave
insl
rolb
mov
cwtl
dec
xor
pop
add
sub
cld
mov
arpl
inc
cmc
scas
sbb
cld
rcl
dec
xorl
sbb
addr16
rcl
dec
mov
outsb
pop
dec
and
sahf
and
scas
dec
sahf
clc
sbb
aas
shl
cmp
push
dec
jae
cli
or
jne
loop
xor
xor
in
cli
pop
sbb
loop
dec
pop
xchg
mov
mov
loop
add
inc
fwait
out
lahf
push
dec
mov
cmpl
or
fstl
in
ss
xor
in
jmp
aaa
push
imul
inc
mov
inc
movsl
pop
test
fistpl
aas
fisubrl
jb
aas
into
xchg
adc
ficoml
mov
cvtps2pd
xor
imul
mov
adc
stc
jo
insl
lea
fdiv
mov
std
imul
lret
push
jl
loope
test
cld
lods
dec
or
mov
popf
xor
or
jmp
repz
ja
ficoml
pop
pop
repz
arpl
mov
paddb
bound
mov
sbb
xchg
adc
sbb
jne
xor
dec
push
sub
addr16
fstl
pop
add
stc
xchg
jmp
dec
repz
das
mov
dec
push
js
and
movl
pop
dec
fs
outsb
and
iret
sbb
jmp
movsl
cli
loop
push
sub
mov
push
xor
xchg
cmp
arpl
dec
ljmp
adc
cs
jnp
and
sbb
jl
or
adc
mov
clc
cwtl
rorl
test
cwtl
pusha
and
jnp
cmp
jmp
dec
aas
jg
and
ja
out
test
loop
movd
fisubrs
or
sti
pop
jnp
push
xor
adc
lods
push
dec
ret
andb
or
call
adc
xlat
push
testb
xor
daa
je
and
xchg
mov
hlt
or
sbb
loopne
addr16
push
lods
push
jecxz
sti
icebp
and
mov
sbb
stos
cld
fcomi
std
testl
pop
pop
push
fstps
xchg
mov
bnd
stos
int
aas
mov
dec
sbb
jp
add
in
stos
clc
mov
inc
dec
add
adc
and
sub
cmp
adc
iret
mov
sahf
pop
xor
sbb
sbb
and
add
mov
xchg
stc
aam
in
mov
adc
cmpsb
jb
sub
ret
xor
addr16
leave
add
sub
scas
jae
push
aam
cltd
js
mov
xlat
pop
push
cmp
dec
into
int3
cmpsl
mov
scas
push
mov
mov
sbb
out
sahf
sbb
movb
out
inc
stc
lods
out
jnp
in
or
cmp
stos
and
push
imul
hlt
es
icebp
gs
imul
or
mov
mov
loop
fisubs
push
js
lea
in
inc
es
clc
in
or
in
aam
les
enter
aam
xor
pop
adc
pushf
jle
incl
add
lret
shl
ficoms
add
xor
rcll
mov
jns
lods
mov
mov
dec
dec
dec
jmp
das
inc
repz
orl
push
mov
jmp
sbb
xchg
popf
push
imul
jp
lock
movsb
xor
andb
sbbl
push
xchg
xor
ret
ror
int
or
adc
lret
out
sub
adc
out
rolb
mov
or
mov
insb
dec
loope
inc
mulb
jp
jns
push
cmpsb
jns
and
test
hlt
mov
ror
dec
dec
adc
ds
inc
pushf
inc
sahf
mov
cmpsl
cmpsl
lock
push
call
jns
inc
outsl
sub
popf
mov
jae
aad
scas
and
leave
mov
test
movb
rclb
jp
sub
lret
dec
in
scas
jo
jne
and
iret
divl
sbb
rolb
add
pushf
fisttpl
data16
in
ljmp
dec
ljmp
add
es
mov
and
cmpsl
mov
mov
adcb
mov
lods
jno
testb
or
mov
jp
mov
xchg
lret
dec
cmp
push
jmp
inc
pusha
xchg
adc
aam
dec
clc
sysenter
lcall
cmc
push
addr16
mov
bound
xlat
sub
hlt
xchg
inc
std
mov
lock
or
jmp
test
add
jecxz
cmp
rorb
ret
les
leave
stos
push
out
cmpsl
mov
inc
stos
and
add
aad
inc
cltd
jge
push
arpl
mov
sbbl
jle
cmpsb
ja
es
in
addl
bound
push
xchg
adc
rcll
xchg
mov
pop
push
lods
std
sub
in
cmp
sub
and
aad
int
jo
mov
je
je
xlat
dec
dec
imul
mov
stc
sahf
cmp
pop
cmp
adc
cmpsl
fs
cmp
dec
jbe
mov
aam
jo
jl
mov
pop
lea
xchg
imul
mov
mov
ljmp
outsl
into
mov
sbb
push
mov
clc
mov
xchg
cmp
and
xor
mov
lcall
fisttps
outsb
push
rcr
adc
push
sbb
lahf
imul
in
sbb
xchg
cltd
dec
pop
cwtl
test
xchg
mov
mov
fldl
mov
xlat
data16
fwait
icebp
mov
rolb
imulb
pop
bound
xchg
idivl
in
cltd
jo
dec
mov
lret
inc
lds
sbb
sub
cmp
cmp
scas
inc
ficomps
jl
mov
pusha
insb
cltd
les
xchg
add
jne
pop
inc
and
int3
sarb
or
xchg
dec
cli
cmp
repnz
ret
sbb
sbb
xchg
daa
xchg
mov
out
lock
mov
cmpsb
inc
sbb
les
stos
insb
fistl
mov
sarb
cltd
rorl
dec
add
ljmp
pop
popa
dec
jno
cmpsb
adc
mov
shll
add
push
mulb
add
aas
out
stc
aad
lcall
xor
sbb
or
sub
inc
in
pop
push
inc
stos
in
jmp
mov
mov
scas
ss
imulb
pushaw
popf
ret
pop
sbb
inc
aaa
mov
rcl
out
or
pop
test
arpl
mov
mov
adc
jmp
sub
fnstsw
mov
enter
mov
sub
sub
shl
leave
fiaddl
into
in
and
adc
shlb
repz
cmpsb
movsb
pop
fcomps
xchg
inc
xor
test
pop
push
jl
scas
dec
scas
jnp
and
insl
push
cs
aam
adc
je
imul
adc
or
jl
je
mov
cltd
dec
mov
sbb
adc
mov
rcrl
andl
xchg
cmp
jl
aas
rcll
mov
sbb
movsb
jno
push
dec
or
nop
insb
cmp
and
or
xchg
xchg
adc
test
pop
or
dec
cmpb
fmull
jg
pop
jmp
and
imul
lea
daa
sub
repz
jno
cmp
outsl
add
add
and
lods
mov
sub
sub
or
dec
rorb
mov
scas
mov
repz
cmpsb
adc
add
cld
out
inc
xchg
dec
and
out
cmpl
dec
mov
xchg
jecxz
jnp
inc
daa
jecxz
sbb
lods
xor
sbb
cwtd
ret
and
test
leave
mov
ficomps
inc
adc
out
adc
sub
mov
int3
jle
fcmove
insb
std
dec
fdivl
inc
mov
sub
scas
mov
out
mov
hlt
hlt
into
jle
out
cmp
imul
or
fs
jg
bt
push
push
dec
testl
mov
xchg
jns
cwtl
xchg
mov
inc
push
dec
dec
cmp
cmp
rcrb
inc
xor
inc
xchg
fnstsw
xlat
mov
and
xor
dec
lahf
push
outsb
push
test
addb
pop
call
es
daa
sahf
stos
mov
xor
dec
inc
mov
movsl
hlt
rcll
out
mov
pop
or
jge
mov
jl
push
lds
pusha
inc
hlt
push
idivb
loopne
popf
jecxz
mov
or
in
and
mov
xorl
lea
lret
lret
pop
or
stc
xchg
in
dec
ja
jl
aas
loope
xchg
cltd
pop
ljmp
fs
cmpsl
popa
pop
ficomps
js
sahf
push
mov
sbb
or
out
fs
push
mov
add
aam
outsl
sbb
leave
pop
aad
fldl
out
jo
sahf
sar
rcrb
add
dec
push
pushf
clc
mov
sahf
push
mov
sub
in
out
dec
imul
mov
or
adc
inc
insb
lds
iret
pop
mov
sbb
cmpsb
mov
insl
test
fidivrl
out
fdiv
xchg
andb
lds
push
dec
iret
push
imul
mov
enter
add
addr16
call
inc
andl
sub
cs
dec
cld
mov
out
pop
out
scas
push
xchg
aaa
int3
aas
sub
jmp
lahf
addr16
mov
aas
xor
jno
jge
mov
push
or
addr16
jno
movsb
inc
or
push
xor
std
pop
rol
sub
mov
or
in
xor
push
les
test
add
push
and
push
jo
stos
mov
pop
out
mov
pusha
push
cmp
imul
std
and
loopne
mov
out
sub
es
inc
movsl
jg
mov
xchg
sbb
out
mov
cmp
imul
aas
or
jg
add
dec
loopne
sahf
in
xchg
xchg
pop
pop
dec
xlat
in
dec
cmpsb
cmp
adc
sahf
and
scas
in
fists
ja
add
mov
dec
pop
je
movsl
jae
xor
jp
shl
fidivrs
sbb
repz
sbb
stc
rorb
ret
xchg
mov
sub
mov
or
nop
mov
cmp
cwtl
outsl
push
mov
and
fnstenv
sbb
xchg
sub
cltd
lahf
and
scas
js
out
scas
out
ror
les
adcb
sub
bnd
cwtl
push
mov
push
icebp
sub
cmp
or
xor
cmp
lcall
cli
and
xchg
dec
insb
pop
jge
inc
lods
nop
xor
stos
inc
sbb
xchg
js
lock
mov
int
inc
jmp
pop
icebp
sub
pop
xor
mov
bound
ficomps
xor
loop
xor
sub
out
repnz
cmpsl
lods
mov
fisubrl
xchg
ret
xchg
out
je
cmpsl
pushf
pusha
sar
xchg
push
or
icebp
imul
subl
or
ss
xorb
inc
mov
incl
int3
rolb
js
lahf
mov
cmp
mov
jb
xlat
ljmp
mov
pop
mov
iret
mov
enter
adc
adc
xor
aas
dec
cmp
loop
loop
outsb
jo
in
mov
sub
sbb
shld
pushf
xorb
shrb
inc
or
and
out
mov
pop
rcl
pop
loope
data16
stos
aad
fwait
sub
add
jns
rcll
add
aam
jl
push
mov
inc
lock
jg
jle
xlat
mov
dec
in
gs
ss
sub
dec
out
xchg
mov
jp
test
ja
mov
repz
ja
jb
cmp
cmpsb
add
adcb
xor
test
call
inc
ffreep
xorl
xor
jae
in
cmp
arpl
inc
or
in
cmp
dec
dec
add
jo
pop
jo
in
jmp
mov
imul
stos
and
and
enter
adc
jl
add
outsl
adc
decb
int3
or
call
push
insb
test
pop
insb
in
into
jp
enter
rcl
cmp
mov
es
jae
ljmp
lret
pop
mov
xlat
sbb
push
js
call
dec
xlat
movsbl
orb
or
shlb
xor
mov
xchg
pop
clc
sub
pop
repz
aas
mov
jg
inc
jo
andl
inc
xchg
adc
mull
out
shrl
adcb
xor
add
ret
mov
pop
and
sahf
jbe
xorl
mov
push
mov
pop
data16
inc
cs
push
js
sbb
pusha
aad
stos
jle,pt
pop
mov
or
jp
mov
inc
fistl
push
mov
adc
adc
and
cmp
inc
fisttpll
repz
bound
push
mov
or
outsb
inc
cmp
dec
pop
into
mov
sub
push
pop
mov
loopne
pop
int3
sub
cmpsb
adcb
aam
xchg
in
sbb
sub
xorb
push
xchg
mov
ds
push
imul
cs
pop
fmuls
cmpsb
in
rcrl
and
lock
icebp
mov
sbb
and
jmp
or
aas
pop
sbb
mov
pushf
push
cmp
jg
aaa
cs
das
jge
xchg
rorl
popf
xchg
mov
add
push
cmp
fldpi
cld
sbb
adc
pop
push
movsl
out
and
fstps
push
inc
mov
fsts
lret
jbe
leave
repnz
pop
sbb
xor
add
das
adc
rcl
mov
leave
inc
jle
in
gs
mov
pop
rorb
ljmp
cmp
je
xchg
dec
jno
enter
ljmp
add
xor
sbb
lahf
dec
sub
insl
mov
mov
adc
loop
dec
xchg
inc
das
movsl
out
into
cmpsl
push
ret
repnz
pop
pusha
xor
in
lock
jp
sub
shlb
add
lcall
cmp
out
das
inc
sub
loopne
jno
jne
fcoms
xchg
add
es
arpl
jecxz
mov
adc
mov
push
shl
mov
stos
jmp
ficomps
cmp
int3
sub
push
inc
inc
jne
rsqrtps
add
xchg
test
mov
push
orb
sbb
or
in
out
ficoml
dec
jb
outsb
cmp
lahf
xlat
mov
jg
push
add
jmp
scas
add
cmp
jg
jmp
pop
shlb
mov
or
test
push
push
mov
loop
aas
popa
fstps
inc
pusha
lret
sub
mov
xchg
les
call
imul
add
push
sbb
xchg
das
fmulp
sub
adc
adc
and
fwait
jle
nop
aad
leave
inc
inc
or
sub
stos
add
test
ret
into
xchg
push
ret
jbe
cmp
loope
sti
jl
mov
int
push
test
popf
jp
mov
push
push
mov
dec
adc
push
les
mov
dec
push
data16
mov
mov
stc
xchg
and
mov
xor
lahf
push
pop
outsb
fxtract
cld
add
cmpsl
dec
pop
sub
push
rol
inc
in
fnsave
mov
movsl
cs
sub
aas
test
into
sub
test
lds
pop
fistl
pop
sbb
jmp
and
add
jp
xor
mov
out
pop
insl
dec
imul
jno
hlt
adc
inc
out
popf
push
aas
rcrb
shl
insb
fistpll
mov
dec
sbb
jl
iret
das
iret
mov
xor
xchg
or
push
dec
ljmp
icebp
shr
mov
xlat
cmp
es
ds
and
inc
adc
adc
lahf
imul
and
sub
jb
mov
out
jmp
dec
fstpt
jmp
adc
xchg
cmc
cmp
aaa
xchg
daa
pop
jl
push
fisttpl
in
pop
incb
cmp
and
test
adc
mov
add
sahf
roll
imul
rorl
inc
mov
pop
scas
sahf
clc
js
loop
fistpl
ljmp
ficomps
ret
mov
sbb
mov
out
iret
inc
mov
mov
lea
xor
xor
in
sub
adcb
push
pop
gs
repnz
shrb
std
jno
lahf
jmp
mov
ret
xorb
cwtl
and
push
inc
stc
inc
repz
imul
test
enter
clc
and
sbb
insb
sbb
fnstenv
stos
test
pop
xchg
out
cmp
sbb
pop
push
push
inc
in
pop
and
divb
scas
fadds
pusha
rcl
pop
inc
mov
shrb
insb
and
cmpsl
shl
cmpsl
mov
outsl
push
cwtl
pop
xor
arpl
cmpsl
aas
rcrl
aas
xchg
addr16
in
mov
sub
push
xor
mov
icebp
enter
shl
jo
pop
xor
push
lods
push
imul
in
push
sub
stc
xchg
sub
push
push
inc
or
push
inc
aam
xchg
add
addl
or
adc
ss
or
sahf
aas
bound
rcrl
outsb
mov
cmpsl
dec
sub
jecxz
jl
mov
sbb
sbb
test
add
and
mov
adc
dec
repz
sub
fcomps
xchg
mov
subb
cmp
repnz
mov
arpl
sub
cmp
jno
loopne
das
jbe
jnp
out
xchg
mov
pushf
subb
xchg
pop
inc
sti
int
xchg
xchg
movl
test
or
rolb
leave
in
popa
sar
xchg
leave
ret
xchg
xchg
and
sti
rolb
stos
xor
cmp
fcmovne
pop
ljmp
xchg
mov
mov
pop
out
or
mov
mov
pop
push
and
push
and
adc
push
mov
xchg
push
dec
inc
ja
pusha
lds
loopne
int3
add
insb
sti
das
mov
sarb
addr16
movb
cmp
push
fwait
cltd
sahf
jmp
ss
pop
sbb
iret
imulb
idivb
aas
ja
add
jle
hlt
scas
pop
rcll
in
pop
loop
fldcw
and
imul
mov
std
jmp
lea
ja
out
or
adc
dec
mov
adc
add
mov
aam
inc
das
aas
mov
xor
sub
push
mov
js
bound
xchg
push
popf
sarb
xchg
mov
lds
sbb
cltd
stos
pushf
lods
outsl
dec
and
push
mov
popa
insb
sbb
pop
mov
sti
push
mov
push
lahf
xor
lret
jecxz
cwtl
mov
mov
nop
call
test
andl
hlt
int
inc
shl
das
push
pop
movsb
arpl
mov
loop
cld
insl
add
ret
jb
jecxz
cwtl
jb
add
jne
inc
movsb
jbe
stc
cmp
and
xbegin
cmp
inc
out
shrb
sbb
add
jl
sbb
mov
fnsave
je
nop
xchg
adc
icebp
sbb
andb
gs
push
popf
mov
sbb
notb
or
and
cmpl
add
mov
inc
pop
inc
bnd
fidivrs
iret
daa
fwait
insb
inc
sbb
dec
mov
sti
lcall
mov
pmaddwd
loopne
or
sbb
dec
adc
jle
xor
enter
xchg
xchg
data16
out
insb
idiv
inc
jecxz
push
orl
shll
scas
sbb
into
xor
fwait
pop
add
xchg
out
push
xor
aas
xor
adc
sub
push
fisubs
ret
push
mov
push
xlat
dec
push
pop
lock
or
lret
pop
movsl
xchg
loop
sbb
hlt
ss
and
sub
xchg
fists
js
inc
xor
popf
adc
and
mov
nop
sub
push
mov
orl
in
push
repnz
mov
ljmp
inc
fildll
or
mov
jp
xor
jecxz
outsb
jb
mov
sbb
out
mov
push
rol
pop
cmpb
addr16
xchg
cwtl
mov
out
mov
nop
adc
mov
fwait
repz
lret
and
mov
hlt
addl
out
shlb
lods
movsb
push
mov
xor
std
and
mov
iret
mov
push
lods
subb
xchg
sbb
adc
arpl
push
cmc
test
push
dec
inc
dec
addr16
inc
inc
fimuls
or
mov
push
jbe
mov
loope
xchg
xorl
cs
scas
xchg
std
test
in
and
mov
pop
xchg
lds
or
dec
push
jle
arpl
cmpsb
sbb
aad
xchg
lods
dec
fcomps
jne
movsl
or
ficoms
aas
dec
cmpsl
cld
out
out
xor
stc
fadds
call
adc
pop
cmp
insl
aas
pop
fidivrl
and
jp
je
out
push
push
jle
fsubr
rcrb
jne
or
push
xchg
mov
mulb
cmp
pushf
es
sub
cmp
sub
rcrl
cmp
mov
cs
sarb
mov
insb
insl
dec
push
pushf
adc
mov
and
jbe
mov
lahf
stos
xor
clc
in
and
mov
gs
sahf
dec
xor
and
adc
movsb
add
lret
jb
int3
das
jmp
lret
iret
aam
pop
xor
cmp
fs
adc
repz
sbb
movsl
pop
adc
add
xchg
paddusw
dec
movb
daa
dec
in
nop
and
sti
addr16
and
ret
push
sub
fnstsw
pop
cmp
ret
push
std
dec
dec
js
int
xchg
lods
push
outsb
mov
test
cmc
test
mov
fimull
cmp
jecxz
sbb
mov
ret
or
adc
or
cltd
movsl
fidivl
addr16
mov
cmp
inc
fnstenv
cmc
mov
pushl
adc
cmp
dec
addr16
js
sub
das
popa
mov
and
xchg
xor
mov
push
fidivrs
scas
and
into
repz
fcomip
jge
test
ljmp
sbb
sub
inc
mov
mov
cmp
sti
mov
inc
jge
lcall
jbe
fwait
cmp
pop
push
imul
dec
push
mov
cmpsb
mov
and
fdivp
adc
add
out
iret
fnstcw
ret
imul
cld
jbe
jge
mov
adc
lahf
dec
rol
and
orl
decb
pop
fimuls
adc
mov
jns
pop
xor
push
data16
outsb
out
sbbb
ljmp
xchg
jmp
popa
fwait
sbb
pusha
adcl
decl
ret
push
and
or
out
in
test
fisttps
sahf
leave
cmp
loope
or
and
ds
mov
subl
pop
xor
mov
cld
aad
jecxz
mov
dec
pop
and
shr
mov
mov
ret
mov
and
lds
dec
add
jne
ret
push
fucomip
call
test
pop
divl
test
stc
cwtl
fwait
pop
arpl
loopne
fdivrs
aam
hlt
out
adc
and
scas
scas
sub
push
outsl
xchg
cmpsl
pop
stos
ds
fnstsw
repz
cmp
mov
pop
or
insl
add
data16
push
and
in
xchg
inc
testb
or
roll
jmp
fnsave
and
movsl
xchg
sbb
rcll
loopne
jbe
ds
lahf
test
dec
iret
loope
pusha
xchg
xor
inc
or
sub
add
xchg
les
push
sub
or
jg
xor
hlt
dec
xor
out
testb
mov
test
imul
push
push
mov
cmpsb
addr16
jae
inc
adc
pop
mov
cmp
xchg
cmpsb
mov
loope
out
dec
sbb
mov
pop
and
fadds
shr
mov
jno
cmpsl
dec
xchg
mov
push
fs
pusha
inc
push
or
push
jns
xorb
test
das
adc
mov
fcomi
pop
mov
call
sahf
enter
and
ja
add
push
xchg
push
dec
fnsave
sub
out
mov
adc
xorb
add
inc
cmp
push
jl
push
mov
out
pushl
enter
xlat
xchg
lds
ret
shl
and
mov
lcall
mov
aad
and
mov
dec
lret
pop
pop
mov
test
and
das
aam
lods
mov
ss
pushf
pop
cmpsb
sbb
sbb
jne
dec
lret
pop
and
jne
int
in
adc
repnz
mov
pushw
mov
ficompl
dec
add
std
jbe
add
adc
xchg
adc
scas
fcompl
pop
or
jne
inc
pop
ret
inc
in
jp
push
shll
ret
pop
addr16
inc
jne
dec
jne
xor
jb
push
jbe
sahf
push
or
jle
fdiv
mov
sub
pop
out
or
shlb
cmpsl
mov
rol
jecxz
mov
in
mov
call
jmp
jo
push
sarb
cltd
lcall
push
insl
bound
push
das
cmpsl
xor
jp
push
add
lea
xor
es
adc
bswap
xchg
cld
jnp
and
add
into
sbb
add
xchg
push
ror
mov
imul
hlt
loop
js
dec
ss
push
outsl
loope
outsl
xchg
pop
xchg
out
fwait
loopne
jg
push
sbb
std
out
add
lahf
adc
cmp
cmpsb
rol
xchg
and
hlt
pop
mov
adc
inc
mov
sbbb
test
arpl
dec
add
shlb
pop
jno
mov
lret
jno
leave
insb
push
hlt
filds
jbe
dec
xchg
insb
or
mov
lock
ret
dec
add
pop
sub
scas
xchg
decb
in
sub
inc
xor
sbb
add
addb
dec
dec
cwtl
out
imul
in
aam
mov
jmp
adc
pop
repnz
cmp
sub
in
popf
pop
add
lock
xchg
dec
sub
cmpsl
and
cmp
ret
cli
mov
xor
outsl
pop
test
mov
lods
mov
pop
cmc
xchg
out
xchg
ds
lock
xorl
in
sub
jbe
sub
lcall
fchs
dec
hlt
imul
mov
mov
pandn
or
addw
icebp
shlb
push
std
test
test
sub
pop
out
loop
fildll
jecxz
insb
xlat
ret
add
pop
lea
inc
decb
out
mov
xchg
jae
add
frstor
mov
push
xor
and
mov
push
mov
ss
push
jp
mov
pop
mov
test
and
lcall
xor
inc
mov
roll
inc
adc
or
jo
insl
inc
xchg
stc
inc
in
cltd
jl
loop
sub
sahf
pop
mov
pop
sar
cmp
pop
rcrl
andb
test
fdivrl
fldenv
fidivl
lcall
je
js
mov
loopne
push
mov
popa
pop
jmp
mov
fcoms
rclb
xor
gs
sbb
mov
mov
lock
shrb
imul
push
sub
inc
push
and
inc
jmp
outsl
lret
dec
loop
pop
fstpt
cmp
lock
dec
shrl
pop
dec
mov
addr16
popf
sub
imul
test
ljmp
lret
mov
push
cmp
xchg
std
mov
fists
mov
and
or
movl
sbb
or
xor
les
les
jns
push
lock
xor
or
xchg
cmp
int3
push
scas
cmp
mov
cmp
loopne
loope
xor
clc
scas
leave
ficoms
sub
fdivrp
or
aaa
mov
or
xor
sub
iret
icebp
xchg
insb
ret
loop
outsl
sahf
scas
in
dec
nop
popf
push
mov
lock
mov
xchg
mov
aad
fwait
rol
repz
ds
lods
test
jae
mov
mov
mov
aad
lods
fstl
jle
sub
outsb
adc
mov
lcall
or
clc
adc
sti
testb
add
adc
dec
popa
mov
sbb
punpckhwd
cltd
faddl
mov
inc
in
xchg
dec
mov
push
scas
mov
add
in
add
lret
mov
inc
fldt
scas
vsubsd
stos
test
jbe
cmpsb
fiadds
mov
pop
inc
pop
add
pop
aad
inc
mov
jecxz
cld
adc
and
dec
cmp
xor
cmp
pop
push
sbb
cmp
cmpsb
fadd
dec
cmc
fs
push
hlt
sbb
jg
negl
mov
xchg
rcrb
xchg
aad
movsl
hlt
stc
notb
inc
dec
test
push
iret
bound
sahf
mov
adc
pop
adc
pop
mov
hlt
fdivrp
adc
cs
or
lock
les
mov
xor
pop
xor
imul
aas
or
pop
rcrl
mov
not
clc
sub
gs
pop
sub
jmp
outsl
jo
jl
sbb
cmpsb
aam
adc
jo
in
out
xor
in
test
repnz
mov
pusha
push
mov
dec
jg
jne
orb
mov
out
lret
push
mov
sbb
dec
push
mov
dec
in
jnp
xchg
fwait
enter
mov
outsl
sbb
xchg
daa
ret
cmp
pop
enter
fcomip
adc
mov
pop
popa
lock
sti
mov
adc
test
add
add
cmc
dec
lcall
xor
lret
inc
xchg
mov
movsl
xor
imul
cld
jp
adc
mov
xor
loopne
pop
push
adc
aaa
roll
clc
rorb
sbb
in
cmp
es
xchg
push
pop
call
ss
jge
bound
fcomps
xchg
lret
repnz
mov
mov
insb
ljmp
ds
pop
push
and
adc
ret
scas
lock
inc
inc
lods
cmp
mov
dec
stc
fnstsw
cmpsb
sub
out
xlat
cli
push
stos
insb
or
std
xchg
adc
push
jmp
cmp
in
andb
or
movsb
mov
pop
pushf
repnz
fidivs
lds
out
aas
or
jb
cmpsb
push
sub
add
roll
imul
xchg
xchg
xor
imul
pushf
stos
dec
aad
xchg
jb
lcall
jg
mov
xchg
and
fidivs
xchg
adc
pushl
cmp
dec
cwtl
ljmp
cmpl
or
jmp
ja
pop
ja
repz
nop
mov
dec
outsl
arpl
in
xchg
xor
and
in
push
xor
pop
leave
sub
mov
shl
mov
dec
adc
cmpsb
rcrl
pop
dec
pop
sbbl
aaa
mov
je
dec
ds
popf
mov
adcl
aad
sti
loop
add
or
pushf
cld
data16
jmp
sub
movsb
pop
xabort
adc
mov
xchg
or
push
pop
in
dec
mov
xor
je
cwtl
mov
cmp
nop
loop
dec
xor
inc
pop
icebp
xchg
movsb
jp
arpl
sbb
cltd
insb
jno
inc
inc
into
subl
dec
jne
add
imul
mov
orl
adcl
fwait
push
mov
mov
mov
xchg
dec
and
sbb
sub
jnp
jae
jg
inc
pop
clc
into
out
push
stc
and
dec
xchg
pop
test
test
movl
xor
mov
aam
and
xchg
sbb
sbb
inc
cs
mov
lahf
or
je
shl
mov
popa
dec
in
cmpl
pop
pop
cmp
rolb
dec
lds
arpl
xor
xor
cmp
jle
jo
call
push
aad
cmovo
mov
imul
xor
fsubs
jecxz
jle
inc
outsb
jmp
loope
push
mov
mov
or
jl
lret
jp
cmp
jp
aaa
mov
cwtl
ja
stos
les
aad
mov
mov
pop
inc
xor
fcmove
pop
out
lds
cmpsl
inc
push
mov
mov
xor
ja
mov
mov
push
jg
insb
pcmpgtb
jg
scas
lret
lahf
pushf
repnz
add
pop
cmp
xchg
cltd
xchg
cs
faddl
call
inc
popf
mov
cmp
cmc
icebp
mov
ljmp
jecxz
lock
fimull
jnp
pop
stos
sbb
jl
loopne
test
pop
ret
int
arpl
ja
test
sbb
pop
ret
cwtl
outsb
mov
add
mov
add
push
dec
add
adc
jae
xorl
cmpsb
repz
int
and
shlb
push
cltd
divb
mov
jg
fisubs
add
and
mov
dec
cwtl
cmpsb
out
out
xchg
in
push
pop
inc
stc
lock
loop
adc
js
ret
out
int3
mov
aam
jns
adc
push
sub
or
stos
pop
out
inc
jno
popf
push
inc
cld
stc
jb
out
jge
xchg
mov
push
mov
push
lea
and
pop
bound
shl
std
mov
repnz
out
cmp
jl
inc
xor
jg
fnstsw
lods
stos
sub
mov
test
dec
and
inc
vmovaps
cmpsl
push
lods
xchg
mov
push
popf
and
leave
loopne
inc
mov
dec
outsb
addb
cwtl
adcb
push
sti
cmpsb
jbe
orl
xor
in
xchg
push
pop
cmpsb
icebp
adc
sbb
mov
icebp
jne
jbe
repz
test
pop
xchg
out
fwait
mov
xchg
cwtl
pop
test
and
dec
jae
imul
fwait
jp
shr
mov
fs
mov
aas
cmc
adc
adc
jmp
fdiv
mov
lods
jg
test
dec
push
popa
int
xchg
lds
jp
jbe
bound
mov
stos
stc
jle
add
idivb
pop
repnz
int
mov
subb
cld
popa
xchg
pop
test
and
shlb
push
ret
inc
std
in
lret
sbb
popa
add
xor
adc
xor
outsl
fisttpll
mov
pop
repnz
and
ds
mov
or
sti
and
repnz
iret
cmp
scas
xlat
repnz
pop
imul
xchg
pop
cs
xchg
jns
xchg
mov
and
insl
jno
call
jbe
pop
push
stos
sub
cli
mov
sub
sbb
dec
push
psubusb
iret
jae
das
inc
add
stos
push
pop
scas
pop
ret
dec
mov
ja
jge
cmpsl
add
mov
pop
pop
adc
jo
sbbl
jnp
sti
pop
cmp
push
xlat
and
add
cmpsb
ds
fbld
sbbb
data16
mov
test
test
inc
cmp
sub
mov
mov
adc
dec
idivb
insl
push
js
shr
lock
adc
adc
in
test
sub
in
cmp
jb
and
popf
push
in
seta
push
dec
rcl
nop
push
mov
jg
movl
cld
aas
add
mov
push
cmp
jp
cmpsb
arpl
push
les
movsb
and
dec
gs
inc
or
add
xchg
and
and
adc
cmp
and
pop
aas
push
rolb
xchg
stc
xchg
pop
out
xor
jmp
pop
test
mov
out
mov
rcl
mov
sahf
add
mov
jle
jns
xchg
push
aaa
pusha
or
leave
push
adc
cmp
ljmp
arpl
leave
popf
sbb
jns
cmp
aaa
loope
xchg
orl
xor
dec
sbb
sti
enter
and
cmpsb
and
mov
push
adc
add
lds
sbb
pop
cmp
arpl
into
jle
push
cmp
xorb
daa
mov
loopne
fs
fstps
lock
and
xor
repnz
fsubrl
sub
fsubrp
popa
out
imul
aaa
or
test
cmpsb
sbb
cmpb
inc
les
ret
dec
push
loopne
xchg
xchg
inc
mov
movsl
enter
ja
rcrb
loope
jmp
lret
lds
in
incb
inc
je
mov
mov
jp
out
movsb
rorb
cmp
jp
and
jg
icebp
or
sbb
pop
xlat
jo
mov
test
int
into
sub
cwtl
add
loope
push
jae
push
cmp
repz
jl
sub
rcrb
lea
mov
in
add
cmp
jl
cmpsb
icebp
fsubs
xchg
shlb
das
dec
andb
repz
push
lds
xchg
cmp
cli
and
in
push
lds
pop
pop
std
cmc
std
jg
sub
mov
or
push
jge
insl
mov
pop
ljmp
sub
mov
fs
fstl
lahf
adc
adc
adc
clc
push
dec
mov
gs
sahf
bound
outsl
jb
xor
dec
push
cmp
sbb
cmc
jge
lret
iret
shlb
stc
lret
add
cmp
leave
inc
add
in
jno
xlat
pop
add
enter
out
pop
iret
mov
leave
xor
mov
stc
mov
xchg
cmpl
pushf
outsl
sbb
mov
inc
leave
mov
aaa
jnp
gs
inc
adc
test
gs
add
arpl
enter
pop
pop
pushf
ret
xchg
lret
leave
push
push
aad
je
jb
xor
mov
cmp
jno
cmc
in
adc
xlat
adc
ss
mov
xchg
cltd
repnz
gs
jo
cld
jb
or
shlb
iret
movsb
imul
dec
and
andl
adc
repnz
xor
push
mov
rcrb
aad
imul
lret
out
ljmp
mov
mov
in
in
rcll
or
stos
lcall
xchg
imul
data16
test
fnstsw
loop
pop
dec
adc
mov
cmpsl
aad
mov
lret
notb
push
stos
xor
imul
imul
push
aad
cs
mov
loope
sub
fstl
sub
xor
lods
mov
orl
sub
sbb
scas
fildl
fwait
push
testl
or
mov
and
xchg
adc
mov
in
clc
rorb
jns
pusha
test
add
ljmp
xor
jg
sbb
nop
cltd
push
xor
cmp
dec
je
lds
jns
lcall
or
mov
jmp
iret
mov
adc
inc
adc
dec
cmp
idivb
dec
sub
mov
lret
xchg
xchg
lret
repz
and
fdivrl
imul
ret
cmp
cmpsb
xor
lea
shlb
roll
sub
js
sbb
mov
pop
inc
sbb
push
xor
lahf
xor
lret
jecxz
divl
sbb
xchg
ror
sub
push
call
jo
sub
test
adc
mov
push
fbstp
movsl
push
xchg
add
push
bound
cmp
sbb
mov
add
in
mov
mov
icebp
cmp
sbb
jae
jp
push
fistpl
jnp
dec
test
jl
cli
je
push
fs
popa
push
cmp
fists
es
cli
mull
fcomps
in
popf
enter
cli
ret
dec
in
daa
dec
pop
cmp
repnz
jle
push
pop
add
or
jns
testl
lods
ja
xchg
hlt
cld
rclb
mov
insl
dec
adc
mov
cmpsl
jp
test
ja
xor
lahf
lret
inc
cmc
dec
push
rcrl
or
lods
dec
aad
adc
dec
into
mov
aam
xchg
push
outsl
gs
or
sbb
mov
xor
pop
dec
dec
push
sti
cmp
roll
jb
gs
xor
ret
xchg
pop
imul
shl
add
dec
iret
daa
or
dec
push
mov
popf
mov
shll
jno
jbe
shl
leave
pushf
pop
mov
xchg
idivb
ja
xor
loope
mov
mov
xchg
inc
shrb
mov
popf
lods
js
stos
sbb
xchg
mov
lret
imul
iret
sbb
dec
pop
or
in
mov
mov
cld
dec
in
jo
or
repnz
sub
pop
std
jl
push
sub
push
or
aaa
adc
loop
int3
jno
xor
outsb
dec
into
ret
xor
arpl
jbe
push
dec
ljmp
pop
inc
js
lock
ret
sbb
cmp
xchg
aad
adc
add
inc
shrl
dec
inc
sbb
addb
pop
fistl
enter
mov
out
jecxz
addr16
repz
mov
sub
mov
rol
xchg
outsb
xchg
loope
enter
rcl
notb
or
add
xor
jns
dec
xchg
cmp
fwait
and
pop
push
leave
bound
repnz
out
xlat
mov
cli
push
jmp
or
cmpsl
push
enter
pop
js
jnp
imul
decl
adc
and
sbb
xchg
lock
rol
cmp
js
test
rcll
mov
lret
push
add
mov
xchg
addr16
imul
xchg
cmp
xor
and
mov
xchg
int3
mov
stos
sbb
adc
into
ret
or
inc
call
xor
scas
filds
sbb
xor
push
mov
jbe
mov
es
aas
dec
push
outsl
add
cmpsl
sbb
sub
or
pop
or
int3
jge
rol
xchg
inc
data16
mov
sbb
inc
pop
pop
push
std
loope
lret
iret
lods
pop
inc
pop
scas
fists
fstps
es
xchg
cmp
aas
stos
push
or
adc
ljmp
dec
lcall
mov
xor
sub
or
or
dec
arpl
rcr
or
int3
sti
add
subb
cmp
push
jl
mov
cmp
imul
sbb
mov
or
xchg
hlt
mov
rcrb
push
jecxz
paddb
mov
shll
xor
pop
xchg
cmp
data16
out
xor
test
pop
stos
shr
pop
cmp
xchg
ficomps
sbb
sub
or
popa
push
fdivrp
xchg
pop
and
jo
jbe
addr16
nop
enter
inc
addr16
add
movsb
fsubr
and
insb
addb
cwtl
mov
sub
adc
pop
mov
xchg
jge
cmpsb
ljmp
and
aas
pop
pop
sub
dec
hlt
enter
aaa
mov
rol
jl
push
orl
sub
scas
fwait
jno
aas
mov
inc
mov
test
pop
scas
mov
cltd
sbb
adc
inc
mov
push
sub
in
cmc
in
mov
das
and
push
sbb
int
sub
push
icebp
out
shlb
in
cmp
int
fsubl
lcall
aad
xchg
scas
ret
inc
sbb
mov
push
fwait
pop
dec
sbb
loop
test
add
mov
xchg
lea
icebp
cwtl
sub
test
push
xlat
pushf
aam
cmp
nop
sub
dec
mov
int3
rorb
sbb
cmpsb
icebp
call
pmaxub
shl
push
scas
mov
shr
nop
sti
loopne
ss
jle
lret
xor
sub
lahf
pop
cmp
aaa
push
popf
push
mov
mull
add
or
mov
mov
stc
mov
cmp
pop
pop
outsl
nop
mov
adc
mov
add
adc
imul
insl
insl
int
xlat
push
lods
andb
clc
sub
out
lock
scas
sub
arpl
lret
lcall
or
or
fldcw
push
xchg
fistpll
push
jl
sbb
movsb
scas
shl
je
and
fistpl
or
and
push
mov
jle
pop
mov
ret
inc
insb
add
cmpsl
pop
cli
int
adc
fisubs
shrl
icebp
mov
mov
jmp
negl
cmpsl
or
fs
xchg
scas
sbb
mov
das
lcall
mov
mov
fcmovnb
das
mov
in
pop
adc
or
jecxz
mov
push
jnp
mov
inc
push
test
mov
sti
jo
sti
rorl
lret
jmp
dec
jo
adc
hlt
jle
popa
fbld
push
shrb
sub
add
fisubs
dec
das
arpl
mul
lods
int
mov
dec
daa
add
mov
jns,pn
fdivl
mov
sbb
add
or
cmpsb
mov
aam
out
fstps
adc
cltd
iret
mov
outsb
nop
or
xor
shrb
add
adc
dec
outsb
mov
and
xor
test
pop
lods
mov
inc
cmp
jmp
and
jmp
cmpsb
push
lret
adc
jne
out
mov
shrb
js
rcr
fwait
aas
lds
xchg
outsb
mov
int3
loop
outsb
push
ret
inc
sbb
and
lock
cmp
mov
pop
mov
inc
mov
decl
sbb
jo
pop
inc
push
idiv
std
cld
and
aaa
or
fcmovu
iret
xorl
loope
push
fisubrs
pop
jle
aaa
adc
jo
mov
jo
push
sub
cmp
push
js
sbb
insb
hlt
add
sbb
mov
cmp
stc
test
mov
and
jl
mov
dec
lock
mov
jg
sub
ret
loop
fbstp
xor
sarb
loop
inc
rcr
shll
push
call
es
cmp
add
cli
xor
testl
pop
jge
add
sub
rorb
lods
inc
xchg
mov
scas
sbb
leave
adc
xchg
mov
ret
stos
adc
pop
shll
jne
aas
add
cltd
mov
fs
mov
xchg
pop
mov
and
mov
dec
lret
sbb
pushf
mov
mov
lret
clc
test
mov
div
lds
call
push
aas
decb
mov
mov
jg
addr16
iret
and
push
mov
fmuls
sub
xor
push
xchg
lret
jne
mov
cld
adc
sbb
imul
bound
ret
popf
push
shrb
push
aam
ret
je
add
scas
mov
ret
loop
or
adcl
pop
pop
cmp
adcb
ja
out
clc
mov
scas
and
out
cmp
and
fs
mov
addr16
sub
repz
and
arpl
inc
mov
ret
addr16
inc
mov
adc
fbstp
mov
mov
pushf
adc
push
out
and
jge
pop
popa
test
pop
cmpsl
xor
push
dec
mov
icebp
in
push
jle
cmp
and
cmp
lods
adc
arpl
shll
data16
xor
adc
mov
push
jmp
sbb
jbe
sbb
jecxz
das
mov
aaa
sahf
mov
scas
cmp
cltd
js
icebp
pop
lods
std
leave
push
sbb
sub
ljmp
or
lret
pop
ja
ficoml
or
fidivl
sbb
inc
xchg
jb
scas
mov
in
jmp
inc
jge
in
loopne
dec
sbb
int3
xor
dec
fwait
cli
scas
mov
icebp
ficoms
std
outsb
dec
gs
inc
xor
outsb
push
fldt
inc
push
cmp
cmp
mov
out
ret
xchg
shrl
jle
pop
adc
mov
mov
jno
sbb
lret
shr
shrl
shll
rorb
sub
addr16
jecxz
cltd
pushf
mov
mov
repnz
pop
stos
movswl
adc
lret
add
mov
fldt
jns
cmp
inc
mov
push
push
in
popa
adc
jle
inc
lock
add
adc
gs
or
ficoml
pop
xchg
cltd
mov
jne
mov
xchg
call
or
test
dec
mov
cs
or
jmp
pop
iret
aas
jmp
mov
sub
xchg
rcll
lods
shll
insl
ljmp
jno
adcl
or
and
dec
add
sbb
in
ljmp
movsl
test
cwtl
into
enter
xchg
or
cmp
mov
out
movsl
mov
inc
mov
xor
in
fstl
sub
pop
dec
sbb
or
jne
dec
and
jb,pt
outsl
xchg
ficoml
sbb
sub
ret
jns
cltd
mov
or
out
and
mov
inc
sbb
popa
pop
idivl
dec
gs
outsl
push
mov
ret
je
mov
inc
es
test
push
lods
pop
out
cmp
outsl
jecxz
cld
xor
leave
xchg
sub
jge
sahf
mov
fs
sbb
push
sub
adc
and
and
ret
prefetch
pop
inc
pushf
je
xchg
pushf
fdiv
push
rcrb
inc
movsl
adc
rcll
movsb
into
icebp
aad
adc
jb
addr16
je
push
std
fdivrl
mov
data16
clc
nop
adc
xor
jne
cmp
aam
pop
pop
cmpsl
aas
addr16
ret
mov
dec
lods
aad
adc
arpl
dec
sahf
and
outsb
pop
pop
cmc
lret
movsb
icebp
test
es
loopne
mov
loopne
cmp
test
pop
cmp
xlat
xor
push
leave
and
mov
sub
out
sbb
jl
pop
pop
ret
sbb
push
xchg
data16
push
jl
and
sub
push
jne
repz
fcmovb
pop
test
push
fs
xchg
sbb
mov
lods
aad
inc
xor
data16
xor
jne
ret
nop
inc
iret
aaa
xchg
push
dec
mov
cmc
push
add
jp
mov
xchg
mov
divl
and
adc
dec
addr16
and
int
pextrw
push
xor
stos
cmp
pop
bound
push
adcl
jne
and
mov
dec
cmpsl
and
jle
outsl
rorb
insl
pop
loop
lock
test
test
icebp
std
mov
or
pop
fdivp
mov
div
mov
push
cmp
je
rcl
mov
jo
mov
fisubs
lds
sub
mov
stos
decb
mov
lods
and
hlt
ds
shl
mov
insl
sbb
xchg
rorl
cmp
cmp
fsubr
test
dec
imul
pop
and
push
sub
fwait
lcall
mov
imul
aad
adc
iret
shlb
icebp
aad
mov
xor
mul
fcmove
jmp
adc
or
cmc
cmpsb
fcomip
inc
mov
fldl
mov
lahf
lods
jns
mul
cmp
xchg
sub
sbb
dec
push
je
mov
mov
cmp
sub
pop
add
sti
ljmp
ja
lock
and
add
insl
xor
inc
jo
inc
jo
xchg
shlb
xlat
cwtl
movsb
and
adc
scas
lret
jae
icebp
adc
jnp
loope
mov
bound
inc
fcmovb
cmp
sub
jg
rcll
popa
xor
mov
mov
loopne
repnz
neg
mov
jne
lret
divl
push
sbb
fisttpl
movsb
je
mov
xchg
and
jne
xchg
jmp
sbb
fcmovne
mov
mov
insl
sarb
xor
addr16
pushf
xchg
cltd
and
dec
mov
mov
adc
adc
inc
cwtl
sbb
mov
sub
jo
addl
or
in
frstor
sub
leave
iret
ret
scas
add
push
cmp
lock
pop
mov
test
jle
es
and
mov
sbb
aas
stos
stc
ss
jns
push
pop
jb
mov
fldenv
jne
mov
daa
leave
sub
je
or
ja
and
inc
mov
gs
cmp
xchg
pusha
lahf
scas
add
insl
xchg
sub
ret
inc
jmp
cmp
call
pop
mov
divl
mov
xchg
sub
cltd
adc
cmp
and
add
iret
test
and
ss
xchg
clc
push
repz
fwait
pop
mov
faddl
push
inc
add
aaa
adc
imul
insl
adc
je
inc
cmp
lcall
cmp
xor
xchg
stos
test
jge
rcll
subb
shl
notl
fwait
andb
mov
adc
mov
push
movsb
pop
inc
sbb
sub
loopne
or
adc
into
movsb
pop
push
int3
and
inc
push
leave
dec
out
cmp
push
dec
sub
mov
orb
pop
xor
mov
mov
cwtl
or
cltd
sbb
dec
rolb
leave
in
ss
aad
cmp
out
loopne
lods
movsl
frstor
cmp
gs
outsb
aas
xchg
xchg
mov
inc
jle
jbe
xor
outsl
mov
sub
testl
add
jb
dec
add
cmpsb
sarb
nop
lret
inc
fstpl
lahf
leave
js
mov
cli
mov
push
dec
cld
fmull
add
sbb
push
cltd
xor
lock
push
xor
cld
pop
adc
adc
scas
adc
cmp
dec
or
xor
test
dec
adc
fbld
mov
inc
mov
sbb
std
push
mov
flds
idiv
movl
fcompl
push
test
mov
sbbl
mov
mov
or
movsb
and
mov
lods
sub
loope
ficomps
add
into
scas
rolb
push
gs
hlt
das
das
lds
ficompl
test
in
icebp
sbb
test
push
sahf
pop
ss
jle
and
rcrl
xlat
fcmovnb
subl
xchg
aad
imul
adc
in
dec
lea
or
cmp
jbe
sbb
xchg
add
add
mov
lret
lds
mov
pop
cmp
push
shl
in
xor
pop
scas
loope
rclb
and
fidivl
fsubp
pushf
rcrb
or
mov
push
mov
and
movsb
sub
and
inc
mulb
in
mov
into
xchg
fadd
inc
imul
push
into
sub
sub
jl
loopne
daa
stos
xchg
fwait
movsl
fwait
rcl
and
lds
repnz
dec
jbe
aas
movl
cltd
and
mov
loop
cmpsl
fxch
int
in
inc
lods
test
pop
sbb
aad
jmp
cmp
xchg
fbld
cmpsb
add
xlat
fcmovu
push
ror
push
cmpsb
insb
mov
fwait
push
scas
outsb
mov
xor
cmpsl
add
mov
loope
imul
aad
std
cmp
push
sbb
xor
aam
mov
iret
mov
movsb
mov
repz
repz
aam
in
test
cli
es
jb
aas
scas
mov
ret
pop
xchg
fmull
or
test
push
pusha
sub
jmp
icebp
mul
imul
mov
push
mov
jg
inc
out
xor
out
jns
icebp
dec
xchg
adc
loop
loope
xchg
or
stos
out
push
stos
lcall
pop
sub
aaa
dec
int
mov
add
cwtl
inc
fisubl
sbb
jge
mov
es
daa
sub
add
cmovno
xor
movsl
jmp
jo
jmp
out
push
ds
popa
push
das
scas
jns
repnz
idivl
xchg
sbb
mov
add
dec
xlat
loopne
repnz
xchg
ret
das
sti
cmp
dec
out
and
and
pushf
dec
inc
leave
and
in
rep
jp
int
mov
pop
jns
fcmovbe
mov
pop
xor
pop
mov
inc
shlb
in
fucomp
sbbb
sti
adc
test
daa
das
out
aam
cmp
add
xchg
mov
inc
xorl
xor
sbb
mov
ja
stos
fdivl
inc
jns
xor
stos
cwtl
and
decl
add
stos
inc
ret
ljmp
adc
dec
cmp
arpl
std
add
rcrl
pop
xchg
sub
dec
push
or
adc
test
and
test
insb
xor
pop
scas
jle,pn
jmp
cmp
xor
mov
inc
xor
xacquire
jg
fistps
xchg
and
pusha
fisubl
clc
clc
stc
imul
mov
ror
call
ljmp
jg
test
jbe
clc
mov
jns
sbb
xchg
xchg
inc
outsl
pop
fbstp
fmull
jbe
cmp
xor
popa
inc
repnz
rcrb
push
lahf
add
mov
or
shlb
inc
xchg
cwtl
jns
and
in
push
mov
xor
xor
adc
xchg
shrl
sub
mov
dec
mov
les
pop
mov
jp
int
fcoml
push
inc
data16
nop
add
mov
pop
lods
pop
push
push
cmp
jl
push
jmp
arpl
idivl
jle
add
insb
mov
push
xor
pushf
jmp
sbb
test
pop
xlat
xor
test
inc
push
rol
mov
fsts
cmc
lahf
cmp
add
cmp
mov
and
insl
scas
or
cli
jmp
dec
out
scas
shrl
fwait
movsb
push
adc
out
push
into
lret
lds
pop
adc
cs
add
dec
xchg
dec
mov
ljmp
xchg
lret
cmp
hlt
or
je
lea
repz
movsb
data16
inc
sub
pop
cmp
pop
ja
xchg
cli
push
jmp
cltd
xlat
dec
push
or
movsl
subb
rclb
scas
sti
cmp
popa
nop
pop
or
fxch
mov
repnz
inc
popf
adc
push
pop
aas
es
jae
cmp
xlat
jnp
xchg
or
jmp
push
add
and
cmpsb
std
xorb
outsb
pushf
outsb
addb
test
inc
popf
pop
dec
mov
js
push
cs
loope
mov
mov
cmpsl
mov
mov
ret
xchg
mov
push
out
dec
mov
inc
cltd
popf
lock
adc
pop
mov
inc
mulb
mov
xchg
aas
std
test
inc
cmp
push
imul
pusha
adc
js
xchg
cwtl
test
in
or
push
subl
and
mov
out
cltd
cwtl
mov
in
mov
and
lcall
stc
xchg
mov
cmpsb
xlat
mov
rcr
insl
cmp
imul
in
adc
std
sbb
sub
stc
push
add
jge
mov
inc
mov
loope
cli
jecxz,pn
lahf
ja
or
adc
inc
jle
loop
mov
jl
cmc
mov
push
imul
test
adc
adc
jp
mov
orl
shlb
and
and
popf
hlt
xor
faddl
adcb
das
jg
pop
xchg
loope
push
adc
jno
jbe
push
popa
arpl
shrl
or
mov
xchg
sub
lahf
jecxz
shrb
js
sub
mov
lock
or
cmp
sbb
mov
arpl
shl
lds
pop
fwait
cs
test
repnz
sbb
add
sbb
pop
loopne
gs
push
mov
push
dec
imul
sbb
jmp
pop
push
sub
push
xor
cmp
ret
mov
movsl
filds
sbb
insl
rolb
mov
sbb
add
xor
mov
icebp
dec
and
test
jnp
xor
xor
xchg
subb
pop
inc
cmp
push
lcall
jle
and
cmp
popf
lods
dec
inc
pop
movsb
mov
adc
xchg
jmp
negl
mov
aam
jecxz
xchg
imul
stos
outsl
pop
mov
dec
es
arpl
add
enter
shr
sub
jbe
xchg
lcall
adc
cmpsb
data16
xor
adc
push
xor
push
inc
add
and
adc
ret
cmp
cmp
loopne
xor
jae
out
add
test
add
inc
rcrl
pop
out
xchg
mov
pop
sbb
pop
jg
push
ja
in
inc
inc
or
lcall
loop
xchg
or
or
test
push
mov
jge
std
dec
dec
scas
jbe
or
hlt
inc
jle
repz
ds
xor
test
xchg
insl
xlat
orl
or
rolb
lret
mov
scas
inc
mov
xchg
mov
sbb
push
jg
cmc
js
aaa
addb
addl
outsl
push
scas
sub
lret
xlat
push
xchg
aas
scas
add
mov
mov
outsb
add
jg
mov
and
or
cmp
xor
outsb
push
es
pop
jmp
push
adc
xchg
push
sti
cmp
outsl
mov
int
fldenv
ficoml
adc
out
sub
sbb
adcl
inc
insb
push
daa
pop
cmp
popa
fdivp
std
ficoms
data16
repz
subb
das
sub
xchg
in
lods
imul
and
mov
aad
mov
jle
add
cs
dec
dec
in
aas
xchg
dec
push
push
add
cmp
jno
cmp
scas
jle
shlb
test
sbb
jae
data16
call
dec
roll
xchg
pop
dec
xlat
push
pop
jns
test
push
adc
dec
stc
pop
jg
push
mov
int
mov
ja
lods
mov
fimull
cld
test
jne
mov
lret
mov
pushf
subl
mov
jp
push
leave
lds
repz
pop
adc
mov
test
cld
sbb
mov
cwtl
push
mov
jne
mov
testb
adc
in
mov
or
ja
ret
push
movsb
push
jle
rcl
inc
xchg
xchg
mov
int
lock
lcall
cmp
mov
fsubs
insb
mov
test
jmp
cmp
mov
fidivrl
xor
mov
out
push
psrld
lret
fstpl
jno
scas
stc
data16
push
inc
adc
mov
fdivl
xor
popa
jb
pop
das
mov
mov
cmc
test
inc
lods
pop
arpl
sub
lock
test
or
int
loopne
das
mov
imul
add
push
add
in
aam
arpl
mov
push
movsb
sbb
and
mov
mov
adc
mov
cmp
sbb
jge
es
or
leave
lds
insb
rcrb
aaa
sub
dec
cmpsl
cmp
int3
in
insl
xchg
mov
cmpsb
mov
jge
push
cs
adc
cmp
xor
inc
add
popf
dec
jmp
sbb
rcrl
inc
out
add
xchg
mov
loopne
xchg
cwtl
jno
outsb
xlat
xor
insb
rcr
sti
iret
scas
addr16
sbb
aad
ja
nop
cmp
out
xor
mov
jecxz
loope
adc
xchg
inc
inc
inc
push
push
imul
enter
lahf
test
int
fdivr
enter
inc
inc
mov
mov
jmp
push
loope
fs
push
ja
cmpsl
loope
dec
jmp
mov
fwait
inc
mov
pop
lds
addb
fnsave
cs
cmp
mov
insb
jg
dec
and
mov
arpl
jmp
loopne
fisubl
loop
lds
xor
mulb
xchg
xchg
xchg
sbb
push
add
fnsave
iret
mov
cmp
and
adc
out
pop
les
imul
xchg
mov
cwtl
or
and
mov
inc
mov
shlb
sub
es
sub
mov
imul
push
sub
andl
mov
gs
pusha
out
mov
aaa
into
xor
andl
or
jl
cmp
iret
call
sbb
lret
add
sbb
nop
hlt
add
shr
lods
and
bnd
ret
xor
xchg
sbb
or
jno
popa
or
negl
sub
cltd
or
iret
dec
sbb
out
sbb
jge
loopne
shll
out
mov
cmp
notb
xor
sbb
push
sarb
and
sahf
push
jnp
and
js
cmp
popa
mov
and
push
lea
jb
data16
push
jp
aas
xchg
dec
push
inc
nop
adc
jmp
cwtl
xor
test
out
xor
outsb
out
repz
sarl
decb
outsl
shrb
and
gs
ret
loope
aas
mov
lret
out
sbb
jno
fmul
xor
shrl
sub
subb
inc
sbb
sub
out
cld
dec
mov
xor
sti
mov
into
clc
pop
inc
addr16
loopne
pop
pop
scas
imul
sub
js
sarb
gs
outsl
ret
xlat
test
xlat
repz
push
sub
sahf
mov
in
mov
sbbl
sub
xchg
orb
mov
pushf
cli
inc
or
jp
dec
stos
cwtl
dec
movsb
pushf
cli
push
rolb
push
xor
jae
cld
push
insl
or
lahf
outsb
mov
jge
imul
inc
and
mov
es
xchg
subl
inc
dec
xchg
cmc
imul
mov
movsl
or
int
mov
popa
lahf
cmp
cmp
ds
cmpsb
xorb
rcrl
stc
xchg
imul
cmp
or
or
xchg
push
stos
lds
fnstenv
stos
nop
dec
xor
test
mov
pop
into
or
js
adc
rcrl
cmp
mov
and
jge
pop
ret
repz
fwait
in
je
out
push
pop
inc
data16
mov
ds
mov
lea
mov
cmc
cmc
sti
mov
mov
gs
push
imul
adc
jge
mov
mov
sbb
sahf
jne
rcrb
dec
inc
ss
xchg
or
pop
and
pop
lea
adc
inc
push
xchg
and
pusha
adc
jge
lret
pusha
push
push
aaa
enter
sub
cmp
insb
in
xchg
out
out
in
mov
fidivs
mov
enter
xor
ret
mov
jne
imul
in
pushf
mov
ja
popf
aam
push
scas
cmp
pusha
stc
sbb
movsl
ficoms
xchg
mov
lods
popf
mov
sub
sbb
arpl
push
daa
xchg
daa
pop
mov
jecxz
dec
shrb
sub
push
in
test
adc
loope
push
jle
xchg
adc
or
mov
aam
jnp
xchg
addr16
or
in
dec
popf
xchg
xor
out
ja
and
loope
enter
adc
mov
pusha
jl
mov
out
add
pop
add
cmpsl
cli
mov
cmpsb
push
loopne
dec
jne
xchg
pop
cmp
dec
jb
std
sub
sub
sbb
cmp
push
sub
pop
pop
push
xchg
push
shll
xchg
cld
aaa
and
push
adc
mov
je
dec
test
mov
fcoml
pop
lret
int
je
jp
and
call
inc
mov
dec
test
inc
test
jae
pusha
rolb
mov
pop
pop
test
mov
cmp
push
stos
or
xor
cwtl
inc
idiv
div
dec
test
inc
dec
cmpsl
test
cmp
in
push
sbb
call
ss
xchg
mov
ret
loop
scas
shrb
sbb
pop
ja
xchg
jmp
ret
push
push
pushf
sbb
popf
cmp
es
sub
idiv
mov
jno
lock
insl
pop
or
lods
or
pop
sub
push
add
inc
imul
ljmp
mov
fwait
dec
push
imul
pop
adc
enter
jnp
xchg
loopne
jge
aaa
pusha
xor
int3
add
ficoms
xchg
xor
adc
movl
sbb
adc
fs
sbb
pop
fcmove
leave
mov
aad
dec
inc
mov
fistl
xor
nop
or
inc
inc
aas
aam
in
jecxz
xor
and
call
aas
loope
xor
and
xor
out
mov
pop
call
xchg
jl
mov
and
add
lods
cmp
sbb
imul
popf
and
bound
push
aam
jne
jl
jge
aaa
pop
scas
inc
adc
test
mov
movsb
and
jnp
adc
and
stc
or
testl
pop
shl
mov
leave
in
xor
mov
inc
adc
lahf
lods
int
mov
daa
mov
add
leave
inc
cwtl
sarl
roll
mov
scas
ret
andl
mov
adc
out
imul
stos
repz
or
out
push
gs
push
shlb
sub
addr16
mov
imul
mov
leave
dec
push
inc
xor
mov
leave
test
mov
push
call
sub
xchg
mov
lret
push
je
lret
mov
fwait
je
repnz
adc
dec
repz
jg
fiadds
faddl
lret
mov
xor
neg
mov
cmc
pop
loopne
lods
into
jo
sbb
icebp
lea
data16
mov
sub
rol
loop
lcall
mov
ljmp
shr
into
dec
cs
xor
cli
or
mov
mov
sub
xchg
into
in
adc
lds
xor
movsl
mov
jecxz
mov
or
push
lock
mov
les
sbb
test
mov
xor
sbb
pop
cmp
repz
and
popa
push
loopne
push
xchg
xor
inc
xor
jbe
repnz
jnp
push
iret
push
pop
loop
xor
jp
push
movsl
mov
repz
dec
pop
cltd
add
gs
mov
mov
daa
outsl
xor
mov
pushf
and
lock
testl
jne
cs
sahf
outsb
lock
inc
aas
and
pop
dec
mov
bound
push
add
adc
push
mov
xchg
sub
or
aas
sub
push
sbb
cwtl
mov
push
mov
sarl
xor
arpl
daa
lret
mov
mov
popf
orl
jmp
int3
inc
dec
loopne
or
call
ret
dec
not
in
add
mov
lea
test
push
mov
cmp
imul
ds
scas
rclb
pushf
pop
push
mov
jo
shl
mov
push
sbb
imul
jbe,pn
loop
push
sbb
jl
rorl
inc
dec
xchg
push
std
insl
inc
mov
cmpsb
aas
lock
lods
adc
mov
add
test
movb
movsb
popf
or
jl,pn
sub
lret
movsb
sahf
nop
mov
ljmp
fists
lods
loop
andl
push
aad
xchg
mov
shlb
sbb
imul
out
sub
xchg
mov
stc
lock
and
mov
jbe
lret
xor
decb
mov
xchg
into
ljmp
movsb
rcrb
and
sahf
jp
imul
leave
xabort
or
mov
insb
test
pop
jle
or
repz
loop
rolb
mov
in
inc
icebp
popf
shl
inc
out
pop
dec
pop
mov
jle
pop
data16
popa
dec
jnp
int
incb
or
and
lock
sub
imul
xchg
xor
ffreep
cmp
mov
push
dec
jns,pt
iret
jo
arpl
das
mov
mov
mov
test
imul
push
jmp
xor
sub
cli
or
jg
inc
scas
lret
divb
cmp
dec
inc
loopne
mov
insl
push
mov
xchg
push
mov
dec
icebp
test
test
inc
in
mov
push
inc
sub
lahf
jne
gs
mov
les
lret
push
out
icebp
dec
lds
mov
insl
mov
fisubl
sbb
push
xchg
pusha
lea
jno
dec
pop
dec
outsl
push
mov
ds
iret
fcmovbe
cmp
xor
test
fists
cli
dec
xchg
ja
dec
aas
iret
ret
in
shlb
lcall
jp
adcb
repnz
insl
xor
sub
lds
addl
mov
xchg
arpl
sub
cmovbe
mov
or
in
ficoml
mov
inc
les
push
mov
sbb
push
aaa
pminub
push
and
mov
mov
cmp
adc
pop
jae
and
scas
pop
adc
gs
push
jbe
mull
inc
or
push
fadds
rolb
cltd
push
iret
sbb
xchg
xchg
stc
and
movsb
mov
push
sub
aad
xchg
xor
inc
xchg
shrb
fwait
xchg
insl
call
ds
pop
dec
inc
push
push
mov
mov
xlat
mov
lahf
pop
popa
movsl
or
mov
mov
pop
aas
pop
neg
xchg
mov
push
adc
xchg
hlt
das
xchg
ja
cld
mov
fnstcw
mov
jecxz
js
pop
rcr
outsl
aam
mov
xchg
dec
add
jnp
jmp
mov
add
mov
mov
stc
gs
addr16
pop
addr16
out
nop
arpl
jmp
sbb
cmp
cmpsl
adc
nop
and
in
pop
push
add
ret
in
sbb
push
roll
fs
in
iret
cmp
mov
sbb
jno
cmp
mov
cmp
adc
and
lahf
ror
pop
jns
push
mov
mov
ljmp
xor
and
ret
fbld
or
mov
test
ret
dec
push
ds
and
mov
xor
cmp
negl
xchg
or
loopne
pop
ja
lahf
cmp
inc
mov
adc
lret
movsl
push
or
leave
call
int
jo
fisubrl
mov
sbb
mov
mov
fbstp
jae
or
adc
sbb
cmpsl
cwtl
pusha
pusha
cwtl
scas
dec
mov
jmp
xchg
pop
xchg
sbbb
or
lock
sub
stos
sarl
inc
mov
outsb
and
or
sbb
iret
mov
rolb
sub
mov
sbb
mov
xchg
pop
add
pushf
xor
out
xor
push
idivb
push
out
lahf
mov
push
adc
stos
xchg
push
insl
cwtl
das
pop
les
dec
xchg
or
out
addr16
testb
add
std
sbb
pop
or
mov
insl
mov
scas
bound
sbb
push
enter
adc
adc
push
inc
loop
lret
movsb
scas
jge
lahf
ljmp
pop
dec
cmp
movsb
sub
inc
test
adc
xchg
dec
outsl
dec
xchg
push
scas
cmp
dec
ret
jp
mov
sub
adc
pushf
xor
pop
cmpsb
adc
or
notb
mov
cmp
pusha
repnz
cmpsb
repz
push
cmpsb
ret
cmpsb
fwait
lods
cmp
sahf
jbe
mov
ljmp
pop
add
jae,pn
out
aaa
in
xor
mov
jae
lret
or
fcompl
mov
loopne
loope
push
lahf
repz
das
repnz
jl
push
inc
xor
jno
nop
test
dec
mov
das
lods
adc
fnstsw
out
xchg
dec
jle
out
pop
fwait
dec
dec
jnp
or
negb
or
and
popa
adc
mov
movb
adc
dec
inc
call
dec
cmp
pop
jbe
mov
outsl
fldcw
xor
lret
mov
cli
shlb
je
movsb
and
sti
hlt
popa
rol
mov
cmp
stos
scas
andl
loop
jecxz
loop
and
mov
inc
add
aad
xchg
sub
adc
adc
imul
rcl
in
int
jnp
mov
sub
inc
jnp
push
and
pop
and
inc
in
insb
mov
sbb
jb
sub
mov
lods
xchg
and
mov
ret
es
rolb
lcall
or
dec
sbb
cmp
sub
inc
jge
movb
movsl
xor
das
and
popa
mov
decb
sub
push
jl
daa
das
push
add
or
mov
iret
xchg
jle
add
mov
dec
mov
repz
fmul
dec
pop
mov
testl
mov
mov
or
jle
shr
xchg
fidivs
sbb
mov
adc
jl
cmpsb
mov
popf
mov
cld
jle
pusha
loop
leave
xchg
iret
pop
xchg
mov
leave
push
adc
daa
into
scas
loopne
jnp
mov
loope
jns
pop
sbb
xor
mov
mov
aaa
cmp
dec
idivb
cld
inc
adc
cmc
pop
mov
xorl
call
rcrl
mov
push
lods
sbb
push
sub
mov
imulb
repz
jecxz
dec
cmp
cwtl
repz
dec
mov
sbb
cmp
imul
mov
add
lret
inc
bound
ss
xlat
das
mov
into
xor
insb
mov
or
aad
imul
mov
aam
mov
dec
pop
mov
cs
jge
xor
inc
cmpsb
ljmp
push
popf
and
aas
add
mov
adc
sahf
xor
jecxz
and
xor
xorl
sbb
je
lahf
scas
cltd
hlt
ss
imul
dec
shrb
push
pusha
inc
sbb
stc
mov
push
in
push
loop
or
mov
fbld
and
and
sbb
mov
cmpsb
add
clc
lods
mov
data16
test
push
fistpll
cmp
negb
and
xchg
mov
addr16
mov
shl
jb
stos
js
jge
int3
movsl
inc
xor
jae
mov
test
adc
fimuls
mov
stos
cmc
mov
sub
lods
push
pusha
les
jmp
inc
test
push
bound
rclb
xchg
and
push
insl
in
push
cmpsb
xor
or
push
or
stc
nop
out
and
mov
dec
repz
es
ds
lock
ffree
xor
inc
mov
repz
lret
std
and
sbb
sbb
outsl
sub
mov
mov
es
test
clc
stos
add
jg
ss
psrad
inc
js
mov
shr
movsl
adc
inc
sahf
push
insb
mov
dec
jmp
mov
xorl
lret
scas
push
out
lods
or
push
xchg
cmpb
jmp
int3
aaa
mov
ficoms
test
jb
repnz
jno
jmp
lods
decl
jno
xchg
jns
jg
mov
lahf
mov
dec
scas
out
and
mov
clc
mov
inc
shll
push
into
cmp
ja
jns
mov
out
imul
mov
outsl
mov
push
scas
pop
leave
aas
sub
and
jbe
rcrl
adc
or
or
push
lret
and
cwtl
ja
pushf
aad
cltd
cld
push
sub
cmp
xor
cmp
push
hlt
adc
imul
ds
pop
sub
nop
xor
hlt
pop
dec
into
je
lret
inc
push
sub
or
lock
inc
pusha
or
or
out
daa
xor
les
or
push
xor
call
sub
push
repnz
filds
add
fdivs
in
jne
pop
pop
notb
mov
jno
test
pop
movsl
js
pop
cmp
push
pop
add
in
addr16
imul
out
adc
mov
loope
hlt
push
sbb
mov
sbb
jnp
fwait
add
in
js
mov
lea
icebp
fldenv
adc
mov
cmp
xor
adc
mov
mov
sub
rcrb
data16
inc
mov
xor
sub
and
adc
scas
and
push
imul
imull
and
nop
adc
add
mov
leave
rorb
mov
into
push
jg
cmp
fistps
inc
add
jge
mov
adc
inc
xor
scas
jnp
repnz
cwtl
aad
xlat
bound
xor
jle
pop
mov
lock
fiaddl
mov
cmp
mov
mov
xchg
inc
dec
xchg
jno
shr
or
pop
cmp
sti
add
cld
cld
mov
and
je
sbb
ss
push
cmpsb
xchg
mov
or
je
jecxz
insb
aaa
add
mov
js
icebp
mov
hlt
jae
dec
ret
repnz
adc
insb
imul
aaa
stos
cmp
mov
cmp
hlt
inc
out
xchg
fsubrs
or
mov
push
sub
orl
lock
sbb
or
xchg
push
add
sahf
popa
das
sbb
inc
xchg
scas
in
push
test
mov
adc
adc
mov
sub
cmc
lcall
sub
inc
aad
mov
imul
sbb
inc
push
inc
inc
call
stc
mov
push
or
sub
push
inc
dec
adc
jnp
mov
rolb
hlt
xlat
sbb
xchg
cmp
add
scas
jbe
fildll
rol
inc
add
mov
and
aas
pop
or
bound
ja
or
sub
pop
sub
adc
inc
add
and
pop
rcrl
jecxz
xor
nop
mov
xor
sbb
push
mov
sub
lret
test
lock
or
sbb
scas
sti
push
les
icebp
arpl
xor
dec
aaa
enter
ja
xor
sub
out
jns
mov
lock
inc
mov
mov
lods
rcrb
jne
cs
xchg
sub
lock
adc
in
push
push
out
sub
mov
and
mov
add
inc
ljmp
and
mov
dec
sbb
sarb
decb
jns
add
adc
push
sahf
in
fsub
sbb
les
scas
jmp
mov
ss
push
adc
jns
adc
mov
mov
addr16
hlt
and
and
loop
adc
popf
mov
jg
adcl
aad
insl
mov
mov
adc
test
adc
mov
adc
or
jbe
loope
inc
sahf
adc
cltd
ljmp
add
and
xor
adc
imul
push
or
adc
test
pushf
bound
test
lods
pop
mov
icebp
sub
std
mov
mov
movsb
loope
add
jbe
cli
fimuls
cmc
subl
outsl
test
pop
jg
mov
xchg
dec
pop
add
shrl
repnz
rcl
enter
mov
add
mov
iret
movsl
cld
inc
lret
adc
pop
faddl
fdivl
adc
icebp
xor
xor
icebp
dec
js
pop
lds
inc
or
in
sbbl
frstor
pop
jno
outsl
movsb
dec
adc
lods
xor
pop
arpl
repnz
scas
and
inc
enter
jmp
pop
ret
xchg
daa
mov
xor
in
dec
adc
pop
ret
sahf
push
mov
icebp
jle
cmpsb
loopne
movb
fimuls
aaa
daa
repnz
mov
ret
lret
fs
push
cmp
out
jg
js
mov
xchg
iret
imul
inc
out
push
or
sti
add
mov
mov
dec
xchg
xlat
mov
pop
dec
add
iret
dec
gs
jbe
or
lock
pop
enter
cltd
and
ret
jae
inc
xchg
fisttpll
xor
mov
and
pushl
clc
pushf
lock
stc
out
ljmp
lcall
add
insb
push
imul
and
sub
mov
add
dec
stos
das
lret
ret
cmp
lods
dec
bound
mov
inc
pop
push
adcl
insl
mov
push
cld
lock
dec
adc
push
adc
or
movsb
xchg
cmpsl
jp
stc
and
hlt
cmp
mov
outsl
lods
push
bound
cli
lret
mov
adc
pop
jns
jo
adc
push
xor
cmp
fdivl
fwait
ret
hlt
fsubrl
xor
xor
sbb
fcmovnu
popf
xor
and
sbb
pusha
mov
lods
mov
stos
lods
or
jl
cmpsb
inc
ret
sbb
int
lods
sbb
testb
call
insl
mov
cmc
pop
int
sbb
adc
imul
in
pop
outsl
jb
ljmp
and
idiv
mov
popa
cli
push
push
pop
or
jmp
xorb
mov
or
pop
xor
inc
inc
jmp
xor
push
repz
adc
jb
sub
jl
xor
nop
push
cmp
repnz
mov
ljmp
xchg
add
jl
cmpsl
jno
jne
jnp
dec
je
scas
loop
sbb
inc
add
aam
rorb
insl
and
mov
mov
cmp
and
ret
jge
data16
adc
out
sub
shlb
inc
fcmovnb
add
push
sbb
pop
or
mov
jge
cmp
repnz
cmp
iret
add
fldenv
les
jmp
cmp
cmpb
bound
dec
mov
lret
aam
lret
ja
xor
js
add
outsl
mov
mov
cmc
rdpmc
sbb
inc
sbb
loop
pop
jb,pt
out
shrl
aam
sbb
cmp
ja
xchg
dec
imul
jb
pop
adc
and
and
adc
push
adc
imulb
outsl
push
push
popa
mov
xor
pop
pusha
inc
sub
jno
jno
int3
and
ja
sub
and
dec
fwait
lea
int
sti
xchg
in
mov
mov
jbe
fs
adc
mov
rcrl
lret
sub
sub
adc
sub
loopne
lcall
jmp
cmpsb
fwait
ljmp
jnp
lock
adc
add
mov
sub
aas
cmp
mov
inc
pop
test
in
mov
and
push
lods
and
in
fnstcw
outsl
fcompl
or
iret
inc
int
add
rorl
sbb
mov
pushf
das
lods
mov
mov
jbe
sbb
jg
adc
jecxz
cmp
mov
into
jo
pop
les
mov
or
cmp
xor
dec
push
inc
adc
jb
fidivl
xchg
call
in
pop
aam
fdivl
pop
insb
rep
rcrl
test
sbb
scas
sub
mov
cmpsb
xchg
adcl
pop
and
aad
adc
inc
push
cmc
xchg
jecxz
sub
cwtl
sbb
mov
popf
cmpsb
lods
enter
hlt
scas
and
push
and
xchg
sti
lea
jle
in
insl
insl
divl
dec
mov
push
sub
pop
sbb
icebp
ret
cmp
sub
inc
dec
xor
adc
cld
lea
dec
lret
std
loope
je
jecxz
cmp
and
add
lcall
lods
cmp
and
in
fisubrl
sbb
dec
shlb
sub
call
push
mov
frstor
in
ja
loope
ret
gs
push
fmul
outsl
xor
mov
mov
xlat
in
or
mov
sahf
xchg
push
rorb
pop
ja
xor
inc
fbld
or
cmp
hlt
pop
sbb
sbb
incb
les
mov
cmpsl
int
inc
pushf
xchg
mov
jmp
jns
mov
mov
ss
outsl
jmp
jae
aad
inc
nop
outsl
sub
push
and
mov
or
pop
push
sub
outsl
lods
or
pop
push
mov
lock
scas
not
adc
sub
mov
cli
pop
push
jge
int3
push
ficomps
jle
xlat
mov
add
mov
mov
cmpsl
lret
repnz
addl
sub
daa
jne
push
ja
sub
add
or
adc
fstpt
sbb
sub
andl
loope
scas
frstor
adc
mov
fwait
adc
es
sub
cmc
nop
sub
lret
scas
dec
pop
stc
mov
jle
out
subb
stos
repz
test
call
leave
adc
mov
push
ffreep
pop
out
sub
daa
aas
cmpsl
adc
push
lret
fstpl
xchg
fildl
enter
mov
sub
add
movsl
push
or
negl
xor
sub
cmc
mov
dec
jbe
xchg
xor
mov
pop
xchg
es
mov
jo
ret
jo
pop
out
ret
lret
leave
loope
movb
subl
leave
dec
add
scas
mov
push
inc
je
jbe
jne
dec
push
ljmp
xor
sbb
lock
or
mov
or
aad
push
ja
out
pop
mov
push
daa
pop
test
pop
cltd
sbbl
sbb
test
out
call
js
mov
adc
dec
mov
data16
aad
adc
test
daa
cmc
and
sbb
push
pop
jp
mov
divb
sbb
cmpsb
je
xchg
push
mov
out
cmpsl
xor
xor
ds
mov
lret
mov
sub
pop
and
jle
lcall
mov
sbbl
jno
lret
lret
xor
and
sarb
stos
sar
mov
mov
xchg
push
out
xchg
sbb
mov
cwtl
inc
push
testb
adcb
jns
mov
pop
mov
insl
mov
pop
shll
cmc
dec
add
jle
pop
sahf
icebp
fsubrs
jae
xor
pop
gs
inc
rcrl
push
mov
mov
out
sbb
inc
sahf
pop
sbb
jecxz
ja
fcmovnbe
into
push
stc
pop
ret
pop
in
test
fsts
sub
mov
adcl
ds
pop
ret
test
or
jl
scas
sti
add
std
inc
sub
test
push
xor
push
cmpsl
loopne
mov
fdivs
fs
rclb
inc
clc
mov
call
icebp
or
cmp
add
jge
jl
and
mov
scas
call
lret
sub
andb
into
test
pop
hlt
xor
cmovge
adc
mov
mov
inc
testl
sub
shr
adc
testl
mov
xchg
jno
lret
jmp
sbb
shlb
js
cs
ret
rolb
sahf
pop
sbb
or
movsb
adc
jp
push
addb
fst
mov
ja
push
call
sbb
iret
push
pop
sub
push
pop
cmpsl
movaps
lahf
fldcw
rcll
jmp
sub
fwait
pop
les
mov
add
push
cmp
lds
jo
sti
and
add
stos
sahf
and
dec
cmpsb
popf
fisubrs
mov
mov
add
jp
pop
dec
push
dec
sub
out
cmpxchg
jl
jg
jb
mov
addr16
dec
ss
imul
mov
xchg
mov
lahf
mov
rorl
movsl
adc
stos
fs
out
loope
and
cmc
les
sbb
out
add
and
into
adc
test
dec
lret
add
cmc
sti
rcrl
stos
jno
pop
jae
loopne
inc
mov
sbb
xchg
sarl
rcll
mov
cmpsl
and
cs
sub
imul
dec
pop
lock
mov
inc
je
pop
xor
xlat
shr
inc
add
cli
mov
pop
mov
lcall
jmp
push
dec
aad
pop
into
push
xor
pushf
mov
mov
xlat
inc
push
and
fldl
inc
cmp
jne
dec
xor
adcb
sbb
push
inc
push
in
push
jmp
pop
call
xchg
mov
cmp
ja
xor
insl
sbb
jb
inc
push
xor
mov
add
push
xor
jae
mov
xchg
das
jmp
pusha
popa
xchg
lods
fstps
lods
loope
adc
decb
add
dec
xlat
jno
scas
mov
aas
jle
movsb
pop
stc
jle
rclb
cwtl
loop
push
shll
inc
orb
sahf
addr16
xchg
sbbl
jno
cmpsl
push
add
adc
pop
out
mov
sub
scas
fmuls
in
push
aad
or
pop
in
out
int3
test
in
lret
pop
in
popa
sub
adc
inc
mov
lret
sub
fnstsw
sbb
lods
ss
add
les
pop
pop
push
xchg
pusha
js
dec
lahf
mov
mov
add
inc
data16
inc
push
mov
lods
imul
mov
cmpsb
ret
addr16
lea
imul
xor
dec
aaa
jp
testl
js
sub
repnz
lea
mov
or
out
in
cmpsb
outsl
repnz
push
mov
aad
sbb
pop
xor
pop
jno
popa
repz
adc
ret
jb
jp
hlt
sbb
shl
dec
in
pusha
call
ficompl
jg
xchg
mov
daa
popa
or
xor
les
pop
data16
imul
lock
xor
ja
cmpsb
mov
xchg
mov
xchg
jo
mov
push
xor
movsb
repnz
jae
sbb
sub
pop
cmp
xchg
orl
stos
orl
daa
inc
notl
xor
sub
aad
cmpl
push
orps
test
mov
loop
push
add
add
mov
repz
aaa
in
ljmp
sbb
in
std
ds
and
cltd
cmp
out
call
js
icebp
pop
fisubl
neg
jb
repz
and
push
roll
add
lcall
scas
lcall
xor
loopne
push
mov
aad
jecxz
xor
inc
jge
rorb
add
out
scas
mov
outsb
fildll
mov
mov
sub
scas
cmpsl
jmp
rorl
lcall
bound
xor
hlt
imul
adc
jno
js
mov
push
xchg
xchg
and
mov
lods
pop
sub
cwtl
push
cmpsl
addr16
popa
xchg
lock
inc
imul
test
not
sti
nop
add
mov
inc
adc
cwtl
pop
movsb
idivl
add
lods
inc
outsl
aas
jnp
cld
jle
push
fadds
jmp
jge
adc
adc
mov
mov
loop
pop
int
push
xchg
divl
outsl
roll
pop
sbb
out
mov
dec
fcoml
lcall
ss
ds
dec
shlb
sbb
sub
jo
inc
jns
mov
inc
mov
and
js
pushf
movsb
leave
mov
sbb
add
je
mov
mov
mov
into
mov
out
sbb
out
repz
pop
ja
pop
test
hlt
jae
bound
ficompl
test
mov
pusha
xchg
fnstenv
adc
imul
jp
ficoms
aaa
std
cwtl
clc
pop
push
imul
popa
adc
hlt
pop
pop
xor
adc
cmp
mov
enter
mov
push
fdivrl
and
xor
imul
adc
enter
fisubrl
in
pop
emms
outsl
decb
shlb
add
dec
jecxz
mov
inc
lcall
int3
jb
roll
iret
jmp
xor
aaa
cmp
movsb
popf
shrl
push
call
out
cmpb
outsl
bound
or
sub
addb
mov
add
imul
pop
pop
sub
mul
pop
sahf
xor
push
cmp
pop
mov
xchg
loop
sub
movsb
adc
push
cmp
rclb
js
outsb
call
js
mov
push
push
insb
adc
mov
aas
adc
cmp
ds
inc
leave
bound
push
inc
ffree
fadds
xchg
ret
mov
insb
subl
xchg
sub
imul
or
pop
dec
je
subl
hlt
das
out
mov
cmp
push
push
push
push
sbb
add
jmp
das
mov
jp
xor
ss
sbb
adc
add
gs
enter
add
iret
nop
pop
lahf
scas
dec
decl
mov
pop
sbbl
mov
xchg
cmp
cld
js
dec
or
scas
xchg
insl
cltd
std
add
and
mov
sub
and
inc
rcrb
inc
xchg
mov
add
push
sub
and
inc
bound
pop
xchg
pop
xchg
ret
adc
pushl
test
cmpsb
andb
ret
negl
loope
int3
mov
or
push
stc
inc
push
mov
jg
sahf
fwait
ret
xor
andl
sub
pop
or
push
lea
push
mov
and
or
daa
hlt
adc
jmp
rcrl
push
pop
fs
cmp
inc
lods
push
xor
and
insl
adc
xchg
add
je
sub
aas
mov
cmp
insl
fs
adc
pusha
cli
or
fidivrs
jmp
mov
push
les
jb
sbb
push
sbb
and
or
fldl2t
jne
inc
aas
xchg
subl
xchg
notl
adc
mov
sub
push
leave
loope
pop
lock
xchg
jnp
es
jge
push
movsl
jb
mov
ret
sub
jecxz
shlb
sti
ret
or
loope
in
mov
xor
mov
adc
pop
lcall
pop
mov
cmp
sub
mov
lret
sub
xorl
lea
aam
out
push
jnp
lret
int
loopne
cmc
loopne
sbb
mov
or
lods
vdivpd
pop
nop
push
push
out
adc
mov
mov
imul
ficoml
mov
daa
in
sub
popf
sarb
push
dec
cmc
cmp
push
jnp
ret
je
iret
movsl
fisttpll
dec
pop
pop
shrb
inc
cld
and
push
sub
loope
mov
dec
jecxz
das
pop
jae
jb
sub
xchg
loopne
push
mov
sub
push
outsl
stc
cmp
test
xchg
test
cmp
hlt
out
push
std
pop
in
jbe
jne
aad
outsl
hlt
mov
flds
cli
cmpsb
jo
jecxz
fsts
mov
popf
divb
mov
mov
sub
sbb
inc
inc
ret
sti
nop
out
push
popf
mov
dec
ljmp
aam
ret
scas
pop
sub
ds
test
in
add
sub
pop
jg
xchg
scas
scas
cwtl
andl
dec
dec
test
mov
andl
aad
data16
pop
mov
jnp
xchg
pop
inc
ficoml
pop
ja
adc
or
jle
mov
cmp
mov
push
dec
xor
imul
add
push
dec
xor
pushf
fimuls
stc
fdivl
or
push
push
pop
jnp
lret
push
sbb
cmpsl
xchg
mov
xor
xorl
adc
lahf
test
inc
sbb
or
mov
hlt
cwtl
jle
add
or
data16
push
dec
mov
jle
aaa
and
adcl
leave
ud2
jbe
inc
cmp
dec
aaa
jecxz
out
dec
inc
and
mov
push
cmp
and
mov
push
push
int3
xchg
cs
push
add
or
lret
xchg
sbb
mov
xchg
fnstcw
or
cmp
arpl
adc
arpl
out
pop
repz
test
mov
xchg
insb
lods
push
pop
dec
xchg
pushf
inc
xchg
or
in
inc
inc
bnd
mov
mov
mov
and
jecxz
fdiv
mov
or
and
inc
and
cmpsb
sbb
push
subb
adc
push
es
pop
neg
bound
arpl
mov
inc
movsl
movsl
and
xor
iret
xchg
out
es
sub
mov
xchg
mov
jns
out
push
das
cmp
out
subl
mov
stos
cli
cmp
xor
lds
dec
jmp
cmp
adc
xchg
mov
dec
dec
adc
loopne
mov
mov
sbbb
pop
jl
mov
rol
in
push
xor
sub
dec
sbb
mov
out
outsl
sub
sbb
test
sahf
rolb
gs
push
std
add
sarb
je
or
jmp
sub
cs
addr16
imul
mov
lock
repz
ss
jbe
pop
iret
xchg
jns
push
dec
xor
lea
mov
push
jno
fucomip
pop
sbb
out
add
push
dec
push
repnz
add
pop
jg
cmp
scas
fstl
repz
mov
or
fists
inc
sub
mov
xlat
aad
mov
pop
xchg
add
pop
into
in
push
adc
sbb
xor
mov
lods
mov
mov
jne
inc
dec
das
out
xor
mov
cltd
ret
sti
jle
repnz
outsl
mov
es
mov
sub
stos
aas
dec
hlt
inc
mov
aas
out
movsl
loop
fcmovnb
ret
ds
push
push
push
lret
cmp
xchg
xor
pop
jae
inc
sub
outsb
cli
fs
in
movsl
into
fstps
jl
testl
fwait
sub
sar
rol
sub
sbb
addb
inc
pop
adc
cmp
xchg
pop
mov
inc
and
jl
stos
sar
mov
outsb
test
data16
dec
cmpsl
loopne
sub
add
in
sahf
lahf
dec
mov
pop
imul
jno
inc
mov
push
stc
sub
mov
inc
adc
ret
cli
sbb
nop
fs
mov
jns
shll
push
inc
aam
mov
push
mov
cmp
and
mov
es
adc
lock
lea
pop
xlat
sub
dec
ljmp
push
sbb
lods
jb
scas
sub
stos
mov
add
dec
gs
and
sahf
mov
sbb
in
jle
push
mov
sti
fmuls
and
addr16
dec
lret
rcl
sub
sysret
sbb
outsb
and
inc
test
jmp
pop
inc
aad
lea
cmp
jns
mov
fisttps
dec
mov
xor
push
into
dec
cld
cmp
sub
aam
inc
xchg
dec
mov
mov
push
aaa
cltd
mov
push
lret
mov
mov
ja
cli
loop
inc
lea
xor
stos
xlat
aad
js
sarl
out
jns
pop
cld
push
jb
adc
dec
dec
fs
push
or
jnp
and
dec
cltd
fildll
cltd
jge
push
mov
jmp
sbb
add
outsl
xchg
jge
jp
jp
clc
dec
sub
cmp
sub
test
mov
push
das
mov
push
and
jmp
out
cmp
and
sti
jl
sub
arpl
mov
enter
dec
lods
push
cmpsb
xchg
cmpsb
insb
mov
mov
mov
pop
das
mov
push
test
cld
xor
push
cwtl
mov
scas
push
dec
sub
subl
mov
cmpsb
in
idivl
cltd
sahf
cwtl
adc
stos
gs
jns
addl
leave
fcompl
or
inc
jp
out
test
dec
ja
and
cltd
rclb
xrelease
into
test
addr16
sub
int3
sub
sub
movsl
out
popa
mov
add
mov
xchg
mov
pop
xlat
enter
pop
mov
lcall
mov
mov
fcoml
and
or
xchg
cmp
mov
dec
lds
lods
ret
fsubr
mov
adc
xor
mov
jb
mov
add
setb
lock
test
mov
adc
pop
cmc
fsubl
nop
mov
test
mov
dec
mov
jg
push
lret
jmp
cmp
cmp
pop
movsb
lcall
popa
bound
lea
das
sbb
sahf
loop
jmp
adc
sbb
sub
mov
push
mov
mov
dec
push
mov
movsl
xor
cld
mov
sti
push
ss
ret
cmp
dec
test
adc
std
stos
push
clc
sbb
cltd
or
xlat
das
repnz
insl
sbb
not
cli
add
aad
lea
scas
and
pop
sahf
mov
mov
scas
nop
adc
mov
cmc
fistps
sbb
jle
jge
gs
pop
xchg
push
decb
add
fstpl
hlt
fwait
lret
int3
lahf
sub
imul
stos
jne
adc
sbb
pop
int
push
jle
jo
ret
jg
out
in
push
stos
lods
add
adc
call
jno
call
cmp
aas
fldcw
clc
cmpsb
inc
jecxz
rorb
adc
mov
xchg
sti
jo
leave
mov
lods
jle
stc
push
push
inc
stos
or
cwtl
cltd
jnp,pt
mov
fst
pushf
cmp
test
add
pop
scas
inc
cmp
cmpsb
enter
ljmp
mov
mov
in
test
in
xor
mov
pop
push
sbbb
pusha
mov
in
or
sarl
lds
sub
mov
insb
stc
xor
sub
and
lcall
insb
out
mov
fs
aaa
or
mov
lahf
push
stos
lea
cli
sub
sub
mov
mov
jnp
jbe
and
and
pop
dec
inc
fisttps
adcb
sbb
cs
xchg
pop
and
scas
movsl
cmpsb
out
std
pop
jp
xchg
push
xchg
out
jae
out
in
mov
les
push
inc
sbb
sarb
mov
add
in
dec
mov
mov
fs
mov
pop
xor
test
sub
lcall
jne
xor
sub
fldl
test
jae
clc
inc
dec
jns
jmp
insb
inc
fwait
sbb
lock
sub
sbb
mov
cld
cmp
shlb
xlat
xor
stos
adc
cmpb
add
xor
push
popf
mov
ret
stc
cli
pop
mov
aaa
and
push
ja
cs
pop
stc
sahf
popa
dec
pop
movsl
inc
cmp
outsl
push
mov
insb
pushf
ss
fstpt
mov
push
xchg
in
rcrb
or
stos
shll
cld
xor
mov
movsl
mov
pop
das
push
xchg
fwait
pop
xchg
sub
test
sahf
daa
add
mov
or
lret
call
cmp
inc
scas
add
or
pop
adc
ja
dec
inc
jnp
cwtl
push
xor
in
add
mov
ljmp
insb
gs
mov
jmp
inc
pop
jnp
xchg
scas
cmp
adc
sarb
nop
out
push
outsb
xchg
fwait
rcrb
out
adc
sbb
fcmove
sarb
push
push
push
push
sbb
dec
pop
and
mov
scas
mov
stc
movsl
and
in
lods
jbe
imul
add
sub
cltd
cmc
jg
aas
gs
push
xor
pop
aam
sub
mov
sarb
mov
adc
or
test
repz
js
lcall
icebp
pop
push
imul
test
push
push
push
sbb
pusha
outsb
jns
jge
dec
cmp
or
jmp
dec
inc
nop
mov
rcl
xchg
jno
jge
lret
icebp
dec
pop
mov
and
sub
jb
pop
loop
adc
dec
mov
or
add
mov
int3
int3
addr16
mov
and
xchg
shll
dec
xor
lods
push
pop
dec
pop
mov
test
mov
repz
ds
xchg
sub
call
lahf
xor
cld
insl
out
push
pushl
cmp
mov
inc
lret
stos
out
cmp
sbb
negl
pop
pop
ljmp
xchg
inc
push
adc
or
mov
mov
jp
mov
test
mov
inc
push
add
and
cmp
jno
fsts
push
movsb
xchg
add
mov
cld
mov
daa
xchg
dec
aas
mov
cmp
jl
fidivrl
pop
jge
jle
inc
scas
in
and
mov
mov
push
mov
mov
in
pop
jmp
js
cmpsl
hlt
xor
mov
jg
mov
stos
xchg
dec
xor
enter
pop
cmp
inc
pop
mov
pusha
mov
pop
mov
popf
mov
mov
jmp
mov
sub
sub
clc
ja
cmp
or
jno
cmpsb
hlt
stc
dec
popf
dec
popa
jmp
arpl
sbb
sti
icebp
dec
test
add
xchg
and
and
push
xchg
bound
fadds
loopne
out
mov
daa
mov
xor
or
aaa
xor
push
repnz
aad
push
outsb
lea
pop
popf
dec
stos
sar
mov
sahf
push
lret
push
sahf
ja
sub
addr16
scas
insb
cmp
mov
xchg
xor
push
jg
jl
out
fldcw
mov
clc
test
in
bound
leave
and
scas
cs
sahf
pop
pop
xchg
clc
aas
pop
add
lret
int
scas
lret
sti
xchg
sti
pop
pop
mov
xor
sbb
mov
xchg
sbb
movsb
les
inc
mov
sub
in
sub
or
or
mov
pop
addr16
sub
sarb
or
adc
sub
inc
lea
sarb
lods
add
mov
mov
jmp
aas
mov
in
cmc
dec
ret
mov
loop
call
in
bound
mov
rcrb
inc
test
fcoms
jns
lret
sbb
push
fwait
mov
jmp
pushf
xlat
push
daa
stos
cmpsl
mov
jmp
jge
fwait
out
test
lods
mov
cmpb
mov
pop
pop
into
test
test
pop
mov
mov
mov
cli
bound
movsb
add
into
or
push
pop
sbb
leave
lock
mov
loop
dec
sbb
adc
pop
push
and
mov
mov
inc
pop
pushf
mov
inc
push
faddl
fistl
int3
jnp
lods
mov
mov
sbb
popl
cmp
scas
add
push
push
in
or
scas
jmp
icebp
into
inc
jae
inc
xchg
sub
push
sub
jecxz
aad
push
sub
dec
cli
mov
xchg
sbb
push
mov
push
in
sbb
lcall
cwtl
pop
cld
cld
loop
adc
mov
outsb
in
xchg
xor
test
mov
sub
fmuls
lcall
jnp
mov
or
push
sbb
nop
and
jecxz
inc
xchg
cmc
lock
mov
repnz
imul
test
pop
sub
adc
mov
pop
lods
setae
stos
sbb
es
iret
daa
dec
xchg
movsl
test
outsl
repz
in
mov
inc
or
lea
ret
xor
mov
sbb
js
dec
mov
push
in
push
adc
fsincos
jno
out
bound
test
xor
jno
pop
cmpsl
sub
sbb
mov
xor
inc
jne
push
lods
mov
rcrl
es
fnsave
out
nop
sbbl
call
or
xchg
xchg
jae
inc
in
jne
cmp
or
sbb
xchg
repnz
jmp
xor
mov
pop
rcll
and
jl
and
repnz
mov
pusha
pusha
repnz
push
pushf
add
jge
add
add
push
lock
nop
fdivl
mov
aaa
in
cmp
mov
movsl
sub
aas
pusha
xor
cmc
dec
add
cmp
icebp
fidivrs
and
jbe
into
or
in
pop
xchg
adc
jbe
mov
inc
jno
scas
in
btc
push
push
mov
sub
cmp
xor
jg
arpl
fsts
adc
push
dec
mov
add
mov
add
add
add
rcll
xchg
mov
outsb
arpl
jmp
add
push
mov
imul
fbld
cmc
fimull
cmp
movsb
rolb
ljmp
sub
dec
push
push
lret
or
xchg
enter
add
dec
pop
arpl
adc
jmp
bound
loopne
pop
xchg
or
imul
mov
mov
repz
shlb
mov
and
out
sahf
int3
stos
rcrl
bound
stos
lcall
cmp
aaa
sbb
fcompl
shl
push
push
xchg
jmp
cld
mov
pminsw
sbb
inc
sbb
add
push
xchg
mov
fsubs
jle
cmp
push
sbb
adc
or
shrl
mov
dec
arpl
fsubr
inc
sahf
pop
rcl
and
fadds
fisubrl
pop
jmp
cltd
fnstsw
mov
pop
and
aaa
push
push
sub
jns
xchg
fwait
cmp
xchg
outsb
cmp
jecxz
cmp
pop
push
rclb
xor
shl
mov
xchg
mov
imul
imul
mov
pop
mov
loopne
xchg
fstpt
mov
sbb
out
adc
add
shll
pop
and
out
inc
pushf
aas
fnstenv
push
push
jno
push
popa
ja
pop
lret
out
stos
cld
cmp
jmp
lods
pop
iret
push
sbb
icebp
leave
aaa
aas
push
ja
push
mov
jmp
mov
push
sahf
mov
mov
cmp
in
jge
fisubrl
movhps
cltd
xor
pop
or
pusha
and
pop
add
jge
cmpl
fldenv
js
lods
aad
lahf
mov
fmull
dec
inc
outsl
adc
pop
xor
movsb
loop
mov
xor
leave
ret
cmp
test
pop
adc
test
hlt
sub
lahf
fbstp
sbb
mov
xchg
adc
lret
pop
mov
cmc
pop
lods
decl
inc
sbb
mov
jo
jge
mov
fcoms
mov
or
push
sarl
hlt
sub
jmp
fdivrs
dec
pushf
xchg
dec
pmulhw
enter
repz
mov
lea
out
cmp
ljmp
mov
roll
jge
iret
stc
cmp
adc
push
dec
int
sub
scas
mov
sub
repz
xor
rclb
adc
jns
addr16
test
hlt
lahf
mov
xor
dec
mov
push
test
push
cld
lcall
cld
or
cltd
adcb
inc
dec
cli
cmpb
add
mov
out
gs
inc
xchg
add
lds
cmp
push
loop
push
push
rcll
pop
das
call
in
dec
pop
inc
pushf
pushf
bound
jne
jge
xchg
imul
icebp
popf
daa
insb
outsl
add
dec
inc
cmc
int3
sarb
mov
iret
jg
or
sbb
xor
lcall
mov
mov
mov
int
jae
inc
outsl
jmp
arpl
mov
push
iret
pop
cmpsb
inc
mov
cmp
loop
popf
push
and
ja
movsl
shrb
decb
fs
ficoms
cmp
adc
adc
or
mov
ss
test
sub
adc
cmpsl
ss
adc
xor
js
fidivrs
out
aam
pop
inc
push
les
mulb
mov
pop
popa
inc
push
sbb
sbb
js
arpl
sub
mov
int
xorl
rorb
std
es
xchg
sub
xchg
leave
int
cli
fisttps
das
mov
sub
sub
and
xchg
stos
mov
or
cli
xchg
fidivl
push
daa
sbb
testb
loopne
shl
aam
adc
stc
mov
xchg
xchg
xor
push
imul
mov
add
lcall
xchg
xchg
pop
lock
mov
mov
fldenv
mov
jne
fidivrs
dec
incl
cmp
scas
pop
rcrl
inc
addr16
inc
jae
fbstp
das
add
sub
data16
out
sbb
pop
mov
insl
adc
dec
pop
ret
lock
adc
sub
cmp
stos
xchg
aaa
ljmp
push
gs
jno
rolb
mov
adc
sbb
scas
xor
sbbl
int3
inc
pushf
jae
int3
push
jne
sbb
and
outsb
test
push
xchg
mov
push
in
pop
outsl
fcoms
add
stc
popa
push
outsb
pushf
lcall
lahf
lds
cmpb
fadd
jae
push
sbb
in
decl
movsl
pushf
mov
int
push
scas
test
xchg
rolb
mov
xor
imul
jecxz
cmp
cltd
jno
ret
fwait
cwtl
mov
sub
mov
cmpw
fmuls
mov
sbb
ret
lods
adc
mov
fldl
hlt
clc
inc
nop
mov
jg
repnz
inc
sub
push
push
add
pop
hlt
fstpt
dec
ficompl
js
and
stc
pop
les
push
std
mov
out
push
or
jmp
mov
mov
shrb
fdivs
mov
insb
add
pop
and
jns
sbb
sbb
insl
and
push
hlt
jmp
ds
stc
mov
add
sar
pop
dec
push
lahf
iret
jecxz
scas
xor
mov
push
leave
rcrb
cltd
mov
clc
mov
lret
stos
dec
jge
imul
popa
shr
maskmovq
dec
jmp
in
shlb
movsb
popa
xor
dec
dec
mov
aas
dec
or
popa
inc
lods
cmp
xchg
push
push
sbb
xor
loop
push
jae
sub
mov
push
push
adc
ret
and
adc
cmp
cmp
ss
adc
xchg
cmpl
aaa
dec
sub
add
push
add
xchg
mov
cmp
outsb
mov
call
adc
nop
cwtl
or
repnz
mov
test
sbb
es
cmpsl
imull
and
je
lahf
repz
pop
xchg
push
pop
mov
test
fidivl
es
dec
popa
test
inc
jmp
xor
sbb
jl
push
mov
dec
and
loop
xchg
jmp
sbb
and
rorb
jle
cmc
idivb
repnz
push
pop
adcb
jbe
stos
dec
in
mov
mov
pop
xor
push
or
jns
test
stc
shlb
push
outsb
ficoms
jge
ret
cmp
iret
push
test
pop
pop
iret
ficoms
stos
cld
xchg
xor
sub
aas
mov
xchg
hlt
cli
cld
or
enter
aaa
dec
cmp
cmp
mov
mov
movsb
imul
pop
nop
leave
fdivs
push
js
and
mov
or
xchg
pop
adc
dec
add
fiaddl
fisubrl
cmp
and
jge
pop
dec
pop
add
adc
mov
sbb
inc
sub
je
into
push
inc
cmp
imul
fnstsw
jp
fildl
repnz
sbb
adc
adc
add
mov
loope
mov
xorl
dec
aad
bound
cmp
sbb
sub
add
xor
xchg
cmp
xchg
js
dec
ror
inc
mov
or
nop
or
fcoms
adc
lcall
pop
shll
add
jle
xchg
gs
repz
and
pusha
push
mov
push
pushf
jns
sub
cmp
xlat
mov
lea
scas
cli
add
div
inc
mov
leave
or
aad
pop
jne
mov
enter
push
fsubrl
pop
jo
and
dec
push
xchg
push
push
xchg
insb
subl
pop
repnz
jle
and
rcll
cmp
jns
fidivl
jl
push
xchg
sbb
pop
lcall
sbb
mov
out
repnz
pop
inc
jp
int
adc
adc
stos
mov
jno
test
mov
mov
and
mov
jb
jbe
and
faddl
lahf
push
and
icebp
sbb
out
inc
add
test
mov
call
jb
inc
addr16
mov
cmp
xchg
daa
in
and
jns
bound
sbb
xor
push
mov
fdivrl
push
xor
and
inc
xchg
fsubs
cmp
sub
adc
push
push
lahf
xchg
jne
inc
out
xor
pop
in
out
or
movsl
into
mov
stos
fistpll
jbe
xchg
bound
sbb
imul
sub
mov
mov
outsb
int
cmc
xchg
shl
dec
jmp
sub
add
push
inc
ret
jnp
aas
notl
inc
shlb
insb
fldcw
shll
sub
or
call
cmc
push
cwtl
xchg
pop
and
cmpb
aad
fucom
aam
scas
mov
xor
jno
fisttpll
xchg
aaa
mov
andb
nop
in
adc
movsb
ss
popa
cwtl
add
lds
int3
jne
shll
mov
or
cwtl
sub
pop
add
push
cmp
idivb
aad
xchg
mov
xchg
push
das
lock
inc
dec
pop
inc
out
xor
and
push
cmp
pop
in
ficoml
xor
mov
xchg
dec
ret
in
outsl
leave
sbbl
loope
sti
inc
mov
lahf
mov
dec
ret
fwait
insl
mov
push
mov
mov
jo
repnz
mov
shrb
sbb
and
in
push
mov
js
add
fldcw
loope
mov
sub
imul
inc
mov
pop
and
out
xchg
pop
leave
movsl
cli
idivb
mov
adc
jbe
mov
in
std
scas
or
sti
iret
in
cmp
cmpsb
mov
ret
pop
mov
int3
mov
std
pop
icebp
jle
inc
dec
jo
mov
mov
mov
xor
adc
popf
and
shl
mov
mov
jno
rcl
pop
subb
shlb
sbb
mov
pop
insl
sub
in
stos
jmp
cmp
pop
xchg
push
enter
cwtl
pop
das
jecxz
mov
pushf
mov
je
dec
and
lcall
mov
sbb
dec
mov
mov
or
out
fs
insb
lret
pop
andl
clc
adc
push
addr16
int3
adc
adc
xchg
lods
rcrb
fcoml
sub
sub
mov
push
push
rcrb
push
mov
xor
jecxz
and
repz
scas
in
sub
fldcw
shl
aaa
ja
leave
stos
out
xor
sbb
fs
push
or
nop
scas
or
addr16
cld
fwait
leave
mov
fsubrs
mov
lods
and
aad
jae
jl
imul
das
mov
inc
mov
pop
mov
add
idivl
dec
stos
aaa
inc
mov
popf
jge
ficompl
mov
ds
lahf
mov
sub
orl
iret
fimuls
les
push
xchg
jg
xor
mov
inc
mov
nop
inc
ljmp
cmc
pop
jmp
ja
mov
je
xchg
shll
dec
push
daa
jecxz
mov
gs
inc
push
mov
cmc
dec
sub
sub
int
inc
push
inc
popaw
sbb
insb
add
dec
push
pop
notb
jae
test
sub
outsb
outsb
sbb
sub
fstps
mov
insl
xchg
push
mov
or
lock
je
push
and
dec
cmp
mov
test
mov
cmpsb
stc
testl
inc
and
clc
mov
out
jp
clc
lahf
push
out
scas
mov
loopne
dec
cltd
mov
sbb
pop
in
stc
ss
mov
es
xchg
bound
fdiv
lea
fnstenv
mov
push
xor
bnd
mov
loope
sarb
push
add
mov
mov
xlat
test
mov
out
bound
sub
mov
cwtl
lods
lods
je
cmp
mov
imul
add
sbb
mov
int
jae
loop
mov
cmp
stos
mov
std
dec
jmp
stc
jmp
rorl
clc
jne
dec
sbb
cmp
test
pop
je
imul
xchg
scas
es
mov
sahf
jmp
add
cmp
iret
push
add
daa
in
add
inc
adc
add
pop
jmp
pop
pop
jns
dec
xchg
jecxz
cmpsb
mov
scas
pop
stc
lods
push
pop
xchg
adc
cwtl
add
lock
data16
dec
ja
pop
or
mov
in
cli
rcr
mov
in
les
mov
jl
dec
xchg
inc
inc
jmp
xorl
mov
pushf
repz
bound
stos
xchg
add
inc
jmp
ret
dec
sub
jg
add
xchg
sub
cmp
xchg
cmpsb
cwtl
lods
inc
cwtl
sarb
orb
je
push
mov
shl
jg
decb
jb
xor
adc
sub
cmp
into
adc
xor
push
daa
lods
loop
mov
std
dec
fsubs
add
shrb
push
bound
std
jecxz
mov
xchg
lods
push
mov
mov
mov
and
sub
cmp
push
push
fadd
sahf
lds
sub
dec
les
scas
cmc
push
mov
cmpsb
adc
jmp
imulb
adc
sbb
ficompl
push
fstp
sbb
outsb
js
cli
data16
jge
cmp
btc
leave
jecxz
xchg
pusha
enter
rcrb
cmp
adcl
inc
shrb
push
sbb
iret
xchg
xchg
mov
test
inc
out
add
sub
jb
cmp
add
xor
mov
pop
shrb
icebp
push
cmp
ror
clc
iret
xor
test
iret
add
leave
push
add
and
mov
fidivrl
push
shll
jg
pop
lcall
inc
add
jl
mov
jle
out
movl
cmp
out
lock
sbb
mov
sub
cmpsl
xchg
shl
add
cwtl
loopne
xor
sub
add
lret
in
jge
mov
mov
sahf
sub
addr16
fwait
in
sub
adc
mov
xchg
imul
or
adc
je
out
jge
rolb
lods
js
scas
mov
and
fwait
sub
add
stos
imul
aaa
pop
sbb
gs
ss
clc
push
sti
call
popa
adc
inc
mov
loopne
jmp
sbb
add
adc
mov
ljmp
mov
dec
push
jmp
jne
cmp
std
or
mov
push
lret
jmp
and
add
cwtl
dec
push
fwait
pop
std
add
cmpsl
fdivrp
add
ja
mov
dec
imul
out
lods
xor
jo
inc
pop
add
setns
cmc
sub
xor
or
addr16
xor
cmp
icebp
loop
push
xchg
arpl
mov
push
jmp
fisubrs
cmpsb
popa
mov
out
cwtl
std
mov
int
fldl
fdivl
dec
cmpl
lret
sub
jge
sbb
std
scas
sub
xor
insb
adc
fcoms
jb
jle
pop
or
data16
ja
add
jecxz
adc
add
push
jge
fs
sarl
testb
outsl
push
mov
test
sub
shrl
xor
cmp
icebp
and
mov
jno
mov
insl
inc
idivl
mov
test
out
add
mov
mov
inc
hlt
xor
js
cmp
xchg
jp
pop
pushf
jnp
cmp
enter
sub
mov
mov
and
sub
dec
mov
lcall
adc
mov
xchg
jno
jge
pop
xchg
lea
stos
out
data16
dec
push
jp
adc
mov
clc
sbbl
dec
add
xorb
adc
inc
shrl
lahf
jge
aad
cli
cmp
mov
call
cmp
cld
adcl
lcall
arpl
dec
sub
lahf
mov
or
or
add
lods
shl
sub
test
dec
movsb
push
inc
or
sbbl
sub
insl
sub
ljmp
xchg
arpl
or
jecxz
fidivl
or
and
dec
cmpsl
nop
mov
cmp
push
in
cltd
xchg
fisubrs
xor
xorb
ss
and
add
xchg
int3
es
mov
xchg
lcall
into
scas
in
adc
xchg
jne
movsb
cmpb
jmp
fs
mov
mov
mov
scas
sbb
mov
jno
sub
sbb
loopne
push
and
jae
sbb
jno
mov
dec
fs
lock
mov
fs
mov
call
shll
addr16
dec
inc
test
pop
pop
mov
pop
mov
xchg
out
fdivr
es
xchg
insl
mov
or
test
sarl
mov
lret
lahf
daa
fcomps
add
xor
mov
mov
mov
out
push
out
push
fsts
mov
data16
cld
pop
inc
and
in
js
adc
ficomps
pop
adc
lds
cld
and
xchg
inc
push
rcrl
mov
lcall
imul
rcl
add
fildl
adc
push
cld
sub
popa
out
and
adc
test
mov
cmp
inc
subl
add
mov
or
mov
cwtl
ja
add
imul
sub
jnp
add
mov
jbe
push
shll
jl
mov
cmp
mov
in
int
rcrb
jg
cmpsb
jp
adc
push
sti
xor
sub
sarb
pop
test
mov
int
shll
mov
adc
icebp
stos
xchg
jne
or
cld
xchg
push
aas
pop
daa
ss
popa
cmpxchg
sbb
mov
int
cwtl
mov
mov
push
pop
fbstp
outsl
popa
xorb
aaa
dec
lret
mov
jl
aad
clc
pop
cmc
aam
adc
sahf
repz
pushf
pop
jnp
in
push
jle
cmp
in
negb
cmp
cwtl
dec
rol
lret
in
xchg
inc
mov
out
or
push
iret
or
call
jecxz
ret
js
push
mov
mov
mov
inc
mov
mov
fwait
test
test
mov
inc
je
or
push
pushf
test
jbe
sub
insb
xchg
call
lods
jmp
popa
jmp
push
push
les
lock
popa
mov
mov
pop
push
dec
sbb
mov
jge
jp
sbb
rol
pop
inc
pusha
inc
sub
scas
aas
shr
xor
sbb
sub
subl
arpl
sub
mov
mov
movsb
xchg
lahf
cmp
mov
inc
hlt
cmp
scas
mov
and
adcl
ja
dec
mov
xor
nopl
dec
push
into
adc
inc
jp
ret
and
or
leave
sub
decl
ret
add
aad
sahf
xor
cmp
pop
data16
cwtl
scas
mov
and
std
lret
sarb
xor
push
xlat
inc
add
int
lahf
sbb
pop
sbb
or
cmp
sub
adc
mov
dec
sub
jle
rcl
lods
pop
int3
in
jo
mov
dec
xor
push
mov
push
mov
mov
fprem1
lea
xor
daa
push
mov
or
scas
xchg
xor
jno
sbb
leave
and
adc
adc
or
movsb
fsubr
test
dec
movsb
mov
sbb
xlat
jg
xchg
mov
mov
rolb
xor
sbb
lret
xor
sub
popf
enter
adcb
pusha
shrb
insb
stc
pop
push
pop
sbb
out
sub
mov
mov
add
jb
and
and
jp
jnp
add
inc
dec
adc
adc
pop
mov
gs
jne
or
sbb
jge
inc
mov
outsb
or
and
orl
aas
cltd
xor
pop
lock
cli
int
ss
aaa
xchg
fmull
sahf
out
pop
js
loopne
fisttpl
dec
mov
push
lret
push
outsb
add
roll
mov
in
and
adc
cld
shll
jne
xchg
mov
or
aad
xchg
mov
sarb
xchg
xor
mov
cmpl
mov
push
jns
sub
cmp
inc
cs
and
sub
sub
push
sti
ret
and
jmp
pop
cmpb
aaa
xchg
outsl
mov
xor
std
cmp
pop
mov
cmp
jne
mov
aam
sti
push
xor
xchg
xchg
or
xchg
mov
mov
sbb
mov
shll
cmp
shll
add
or
lods
sub
test
addb
xor
int3
mov
je
sbb
xlat
cmp
js
fcomip
sub
adcl
gs
cmpsb
js
mov
jle
lock
inc
add
test
sbb
pop
addr16
adc
pop
cld
aas
in
js
fsubrs
push
lahf
movsl
push
fidivl
shlb
lea
aam
repz
mov
dec
lahf
push
inc
push
iret
test
and
jl
jnp
cmp
cmpsl
out
jae
mov
mov
repz
push
mov
repz
mov
xor
scas
outsl
pop
mov
jl
js
cmp
dec
jb
xor
or
aam
popa
inc
push
jge
lea
fs
shl
faddp
out
repz
outsl
jge
adc
mov
rolb
mov
xchg
cld
ja
xchg
dec
mov
xchg
xor
out
xchg
adc
int
sahf
and
fldl
mov
or
in
pusha
pop
call
clc
fidivs
out
and
or
or
pop
jmp
out
fildll
je
mov
push
and
lods
xlat
aas
sub
xchg
push
xor
shrl
xor
repnz
inc
inc
adcb
js
lods
mov
hlt
clc
lea
clc
sbb
xchg
fdiv
les
jge
lahf
add
data16
xchg
and
xchg
sbb
jbe
aaa
insb
loope
lock
pop
imul
dec
mov
nop
or
push
lods
bswap
lahf
clc
in
lret
ret
inc
mov
es
sbb
xchg
push
pop
mov
inc
pop
nop
add
jo
shrl
fcmovnu
push
mov
test
sahf
cmp
dec
adc
call
popa
sub
cld
push
push
jp
mov
popa
push
iret
cmp
loop
aad
or
mov
imul
jns
push
push
pop
pop
fistps
ret
test
scas
sarb
inc
mov
cwtl
lods
xor
push
lods
mov
sahf
loopne
call
outsl
int
dec
out
and
adc
pusha
sbb
cmp
test
je
mov
mov
repnz
dec
adc
add
test
movnti
pop
rcl
dec
cmpsb
in
aam
or
aaa
jle
mov
gs
out
mov
mov
dec
fstl
out
aaa
or
dec
inc
adcl
les
lock
xchg
sbb
xchg
sahf
or
or
nop
push
popl
sub
cmp
xlat
and
test
pop
xchg
xchg
xchg
xor
xchg
test
insb
roll
repnz
std
jmp
jne
ds
jae
mov
mov
push
xor
fimull
pop
pop
inc
dec
add
mov
fsts
cmpsb
bound
dec
xchg
icebp
test
and
mov
bound
cmpsl
mov
xlat
push
ds
movsl
cmc
loope,pt
xchg
pop
xor
push
mov
ds
lea
mov
inc
fiaddl
fldt
fistpl
loop
outsl
loopne
rolb
rolb
outsb
inc
insb
fcmovu
shl
xor
and
insl
fnstcw
stc
out
xlat
lcall
cmp
std
test
fsts
jl
sbb
push
mov
inc
cmc
cmc
mov
fucomip
xchg
pop
adc
lods
push
in
cmp
add
or
jno
inc
or
or
int
scas
dec
test
push
jg
mov
sbb
je
daa
int3
xchg
mov
push
push
or
gs
pop
ss
leave
sub
inc
jns
push
cmp
cltd
cmpsb
hlt
outsb
xor
out
push
push
xchg
out
pop
pop
shrl
shrb
cmp
fwait
adc
adc
inc
int
shlb
lret
shlb
les
mov
xchg
mov
outsb
mov
enter
lods
inc
and
scas
add
xchg
lret
jecxz
call
jb
mov
pop
dec
notl
pop
fsubp
js
or
lock
lcall
push
add
mov
loope
cwtl
iret
adcb
pop
movsb
pop
js
shlb
jno
sub
stos
pop
sti
fsubl
scas
xor
in
ljmp
enter
xlat
stos
lock
outsl
lret
adc
leave
pop
imul
pop
call
sahf
or
mov
xchg
mov
push
xchg
lods
or
ror
inc
test
in
push
push
sbb
and
jno,pn
and
mov
sub
icebp
mov
scas
sahf
repz
mov
xor
fnsave
into
jl
adc
xor
mov
pusha
jns
lret
push
inc
outsl
icebp
and
cmp
mov
sbb
aas
add
jle
mov
pusha
inc
cmpsb
lahf
push
lock
call
mov
xchg
ljmp
sarb
pushf
scas
xchg
test
cmc
and
mov
cmp
jo
sbb
jge
dec
xchg
jmp
xor
lret
pop
xchg
lea
cmp
shll
pop
in
idivl
jbe
mov
aam
mov
sub
jo
ret
push
cmpsb
pop
or
mov
addr16
loope
sub
push
and
aaa
aad
add
dec
sbb
fwait
jbe
mov
mov
xor
sbb
dec
rcr
stos
rcrl
jg
and
mov
jne
lea
notl
popf
and
push
mov
mov
xchg
es
xchg
lret
push
lea
mov
popf
and
lods
pop
cmpsl
test
xlat
ja
xchg
push
shlb
jns
arpl
mov
sbb
fs
or
leave
sub
and
rcll
in
inc
fsubs
fcoml
stos
negl
cmp
movsb
cmp
push
cmc
mov
mov
mov
pop
scas
inc
xchg
jp
out
fstpl
idivl
xor
cmp
mov
pop
lds
repnz
leave
fsubrl
pop
pop
testb
nop
or
enter
shr
xor
lret
or
mov
icebp
dec
icebp
fcomps
ret
pop
popa
test
ficoms
xor
lcall
sbb
and
sbb
enter
pop
int
xchg
sub
pop
xchg
jo
or
subl
aaa
jge
lahf
adc
adc
and
pop
fldt
cmpsb
xor
insb
mov
and
sbb
mov
ljmp
movsb
inc
icebp
jae
push
bnd
sub
sub
shll
mov
pop
fdivrs
outsl
fdiv
push
and
xor
and
cmp
xor
outsl
jmp
fwait
pop
arpl
mov
js
add
fildl
fld
mov
scas
jl
rorb
jecxz
pop
inc
add
push
icebp
jnp
sub
rorb
fbstp
mov
sbb
rcll
dec
fxch
dec
add
les
lea
or
cld
dec
int3
jnp
pusha
dec
xor
push
mov
imul
push
cmp
loope
out
fdivs
rcl
push
subps
mov
sub
daa
addr16
sbb
fldl
push
das
insb
divl
inc
fisttpl
insb
mov
cld
jmp
sbbb
inc
sahf
cmpl
in
sbb
sbb
les
mov
sbb
leave
mov
call
add
mov
pushf
mov
call
mov
scas
mov
push
cmp
test
adc
insb
mov
mov
pop
inc
int
lock
repz
cmp
mov
mov
pop
xor
shll
daa
dec
adc
adc
dec
push
push
sbb
outsb
mov
arpl
xchg
ss
jge
mov
roll
jbe
xchg
aaa
out
inc
push
mov
inc
add
fimull
das
inc
add
jmp
fwait
lock
data16
mov
and
and
mov
out
xor
fsts
sti
sar
and
jg
push
dec
sbb
test
xchg
sbb
arpl
dec
jae
jo
inc
mov
ficoml
stc
jo
ret
xor
pop
scas
test
shrb
out
aaa
xor
movsb
and
in
inc
fdivrs
repnz
mov
ja
push
sahf
push
lcall
lcall
lcall
lock
adc
inc
clc
fildll
mov
jl
fwait
movsl
test
and
mov
push
push
jge
jb
inc
std
push
rcrb
pop
and
pop
mov
cli
xorl
ja
sarb
lds
dec
or
adc
js
or
aam
dec
jl
push
call
and
cmpsb
lods
pushf
xchg
cmp
mov
scas
nop
cmp
and
cmp
push
jb
jge
inc
add
int3
movsb
xchg
icebp
aad
add
sub
shl
pop
pop
stc
inc
into
xchg
or
lds
outsl
jecxz
sbb
xchg
lock
or
push
sub
mov
dec
push
and
xchg
xchg
inc
stos
test
fmull
insb
mov
push
fcomps
pop
pop
test
or
sbb
lcall
rorl
xor
out
sub
pusha
sarl
push
insb
test
sahf
movsb
popa
insb
mov
pop
rcll
inc
lods
mov
out
stc
in
xor
adc
data16
lods
push
jae
shrb
lds
or
mov
icebp
int
pushf
out
out
daa
popa
adc
ret
not
outsl
dec
rclb
fistl
and
pop
pop
movsb
mov
xchg
sbb
insb
xor
sub
mov
mov
hlt
add
jg
xchg
sbb
popa
mov
mov
mov
shrl
jo
push
mov
das
movswl
push
jmp
push
inc
bound
inc
test
xor
imul
push
dec
fiadds
cmc
iret
iret
mov
push
or
stos
ja
test
dec
cmp
js
cmpsl
lods
sub
xchg
aaa
adc
sub
jmp
in
push
push
mov
jge
and
outsb
lea
adc
sub
repnz
or
or
mov
mov
mov
and
adc
fs
lahf
push
xor
inc
ljmp
out
loopne
cmp
or
inc
inc
insb
xchg
and
movsl
hlt
out
dec
leave
jg
jns
sub
push
outsl
rcrl
daa
test
xchg
mov
xchg
and
adc
push
pop
cmc
js
xchg
push
xorl
in
adc
out
lods
aaa
rcrb
out
cmp
adc
arpl
int
mov
and
push
lods
fwait
push
out
push
fs
adc
push
xor
sahf
sbb
pop
fdiv
fs
les
mov
hlt
sbb
push
mov
mov
sub
mov
adc
jno
adc
sbb
test
mov
or
cmp
sbb
dec
jns
xor
jns
popa
fwait
sub
mov
pop
xor
stos
scas
adcb
stc
jle
popf
and
cmp
push
popa
sbb
sbb
pop
lcall
push
loope
stc
cmc
xor
dec
sbb
dec
lea
and
dec
jae
mov
sar
push
cmpsb
pop
pop
push
ret
pop
pop
lahf
addr16
mov
add
xchg
das
pop
pop
negb
cmpsl
xchg
cmp
or
sub
pop
sbb
xor
std
loope
push
call
cmp
cmpb
scas
subl
imulb
sub
cmp
shl
cmp
test
lds
movsl
mov
push
sub
repz
das
or
sub
repz
repz
test
xchg
push
mov
inc
sub
mull
aad
push
js
sbb
jmp
push
jg
imul
add
sub
pushf
js
mov
test
scas
in
pop
sti
add
imul
out
clc
jne
jge
scas
test
imul
xlat
inc
test
ficoms
jl
dec
xor
leave
jb
dec
lods
push
xchg
cmp
xchg
dec
repnz
negb
jbe
jo
ret
aas
inc
push
cwtl
push
jmp
enter
int3
cs
sub
inc
inc
jecxz
outsl
xchg
xchg
lock
xor
pushf
idivl
loop,pn
int
loope
rol
aas
in
fs
ljmp
lret
hlt
add
int
jnp
jnp
jmp
sbb
sahf
fninit
sbb
lods
mov
push
cld
jnp
or
nop
mov
jne
mov
xchg
fisubs
and
mov
jp
outsb
std
lods
push
scas
mov
mov
pop
int
jecxz
cmp
inc
movsb
je
in
jmp
jo
xchg
sti
cli
fdivr
cmp
dec
add
sbb
mov
adc
pop
mov
mov
mov
push
sbb
adc
neg
or
popa
jp
mov
packssdw
out
push
add
jl
ret
lock
jb
xlat
mov
clc
sbb
in
cmp
repz
xor
adc
xor
push
fisubrl
pop
popf
jge
and
push
mov
mov
scas
pushf
fdivs
sahf
movsb
push
mov
ds
pop
sbb
pop
in
je
mov
lcall
out
test
rcrl
sbb
ljmp
pop
xchg
jno
and
adc
and
pop
jnp
xlat
cmpb
push
cmp
push
idiv
cmp
enter
outsb
sub
insb
cmc
pop
mov
jp
call
movsl
inc
add
ljmp
data16
aas
cltd
xlat
dec
pop
lock
pop
out
cmpsl
or
or
sub
sbb
push
stos
add
loopne
dec
pop
pop
jp
xor
mov
push
lahf
xor
pop
pop
dec
sub
jno
cli
jp
pop
jno
pop
sbb
xor
pushf
mov
and
push
js
lahf
insl
mov
push
dec
jb
mov
into
scas
mov
pop
cmpsb
mov
sbb
adc
push
loop
imul
inc
das
push
cvtpi2ps
adc
adc
lcall
and
pop
cmp
std
jl
mov
or
in
jg
dec
jbe
ret
loope
fcomi
rclb
and
xor
mov
lods
mov
dec
scas
fcomp
repnz
popa
mov
ja
std
clc
pusha
jae
adc
imulb
hlt
jne
and
inc
cmp
dec
ljmp
sub
pusha
dec
push
dec
and
dec
and
sbb
lcall
sub
jle
out
push
std
mov
jg
call
mov
fistpll
jp
adc
xor
gs
lret
inc
int
out
pop
movsl
and
les
inc
icebp
dec
ficoms
movsb
outsb
imul
fcomps
push
sahf
or
sub
add
out
jl
dec
in
adc
dec
movsl
call
sub
sbb
jecxz
mov
push
inc
rorl
bound
push
jge
jb
andb
mov
jge
es
call
dec
hlt
cltd
mov
addr16
scas
gs
je
popf
bound
jp
push
fcmovb
xchg
inc
int3
jle
outsl
push
insb
cmpsb
mov
adc
ret
xchg
out
outsl
dec
out
adc
push
data16
shlb
cltd
cltd
xlat
xor
xor
outsb
outsb
jb
xor
mov
loopne
addr16
mov
outsb
jne
gs
scas
insb
sub
clc
pushf
sti
sub
mov
ret
mov
call
loope
testb
aas
sti
jge
push
cmp
push
lahf
adc
movsb
push
cmpsb
cmp
mov
idivb
mov
clc
jmp
fst
sbb
lret
or
mov
xorb
in
enter
pop
call
aaa
adc
out
and
xchg
dec
mov
shr
jmp
outsb
jle
or
les
pop
mov
in
popa
in
cs
adc
fildl
movntq
ljmp
sar
fdiv
popf
xchg
lcall
dec
cmpsb
inc
xchg
add
std
scas
stc
xchg
es
jl
mov
hlt
mov
das
pop
icebp
rorl
jno
scas
mov
xor
dec
inc
xchg
popf
addl
push
fisubs
idivb
or
hlt
arpl
leave
enter
mov
hlt
negl
sbb
repnz
inc
add
mov
jb
jmp
push
pop
shl
inc
in
mov
aas
push
and
test
push
aam
subl
or
clc
jle
rorl
sub
fists
divb
repnz
iret
mov
xor
mov
dec
push
sub
jne
push
lret
test
lahf
das
repz
jno
loop
shr
add
cmc
cmp
pop
and
mov
or
ret
insb
cwtl
outsl
stc
daa
rclb
loopne
mulb
rorl
nop
in
into
pop
mov
inc
addr16
xchg
adc
movsl
scas
sbb
loope
sbb
dec
push
mov
dec
out
insl
pop
and
mov
lret
cld
fcoml
mov
jne
maxps
pop
adc
notb
sub
push
mov
or
jmp
xchg
mov
dec
jne
sbb
sub
xorl
pusha
lods
lds
es
dec
cltd
das
repz
cmp
roll
jp
sub
xchg
nop
push
fisttpll
jno
cmp
pop
fnsave
adc
pop
pop
lcall
call
pop
jnp
xlat
repnz
dec
fstp
xor
cmpsb
jp,pn
mov
sahf
pop
mov
ljmp
pop
pop
cmp
xor
ss
push
arpl
mov
jl
xor
imul
mov
in
test
mov
outsb
icebp
call
arpl
mov
aam
dec
gs
in
outsb
sbbb
sti
cltd
mov
fxch
and
pop
cld
mov
out
mov
sahf
int
inc
xchg
dec
adc
pop
and
push
inc
push
cmp
in
ja
xor
les
fcoml
jae
loopne
cmpsb
test
mov
mov
lods
cmp
mov
stos
dec
cmp
clc
flds
out
mov
sbb
jle
das
mov
in
xor
fwait
dec
movsl
inc
adcb
push
lret
push
shrl
arpl
leave
rolb
xchg
adc
aad
push
mov
scas
jge
add
sbb
cmp
cli
mov
mov
pop
enter
and
sub
scas
push
push
jge
xchg
mov
mov
rcr
lret
repnz
aas
aas
shrl
pop
mov
leave
sti
sbb
add
cld
aam
add
call
cli
or
mov
pusha
jmp
push
sub
pushf
out
cmpsb
dec
mov
jg
lcall
xchg
ja
les
icebp
pushf
test
cmp
fwait
mov
and
ds
push
xchg
jl
xchg
and
fildl
cmp
mov
lds
sub
insb
stos
movsl
adc
movl
mov
sbb
mov
stos
dec
bound
test
jbe
sbb
pop
xor
lods
aam
sub
mov
cmp
ret
gs
add
cmpsl
stc
outsl
out
mov
leave
xchg
sar
add
dec
push
push
stos
out
nopl
lock
push
xchg
pop
pop
lahf
popa
adc
out
sub
pop
ret
mov
mov
add
cmp
pop
mov
push
dec
jle
and
jp
cmc
sbb
lcall
xor
cltd
dec
dec
push
aad
enter
cmpl
sbb
fistpll
loop
xor
test
icebp
push
push
dec
test
lret
pop
xchg
call
test
popa
mov
mov
call
loope
mov
push
pop
jnp
dec
in
pop
mov
jns
and
addr16
mov
or
xor
adc
xor
add
test
sub
aam
mov
xor
ucomiss
sub
or
fs
pop
sbb
call
cld
fwait
sbb
add
lds
adc
xchg
in
loope
int3
lods
in
jle
dec
xchg
daa
mov
cltd
cli
in
out
lea
jmp
dec
jo
int3
rolb
scas
or
mov
pop
subb
add
or
and
xlat
or
adc
inc
xchg
test
addb
jge
jecxz
mulb
lret
faddl
lods
push
inc
cmp
xor
push
mov
xchg
bound
loope
arpl
push
jns
jne
xchg
sub
push
sub
lret
cli
pushf
and
adc
xor
stc
cmpsb
hlt
lea
lret
aad
mov
mov
aad
cmp
pop
push
sub
mov
popf
ja
ret
into
xor
scas
inc
sahf
data16
imul
ficoms
add
push
xchg
sarb
pop
or
decl
pop
mov
pop
dec
push
daa
jl
lahf
mov
test
jg
hlt
mov
int3
clc
sbb
scas
test
cmpsl
dec
insb
mov
mov
cli
cmpsl
cmp
insb
std
inc
cs
dec
or
lcall
push
or
or
out
xlat
imul
mov
xchg
adc
add
sbb
xchg
inc
inc
stc
jmp
test
dec
leave
inc
and
int3
adc
stos
shlb
aam
outsl
add
and
test
fistl
popf
fisubl
pop
and
out
xchg
icebp
mov
add
repz
mov
pop
cmp
gs
pop
jg
mov
and
xor
clc
test
sub
mov
js
push
shlb
xchg
mov
push
aas
xchg
insb
fisubrs
jbe
or
add
popl
xor
xchg
in
sub
dec
xor
into
movsl
cmpsl
mov
xor
mov
push
jl
pop
mov
xor
cltd
or
sub
push
mov
imul
inc
in
iret
dec
xor
test
mov
dec
out
outsb
sbb
out
test
or
xor
and
mov
xchg
cmp
int3
leave
add
js
cltd
lret
xchg
mov
push
outsl
lods
out
outsb
mov
int
adc
mov
fstps
jne
gs
and
call
fists
pop
popf
sbbl
push
imul
mov
pusha
addr16
dec
xor
push
pop
push
cmp
popf
enter
call
pop
stos
pop
insb
and
or
xlat
inc
mov
addr16
scas
bound
lock
stos
dec
mov
out
popf
orb
rcrl
adc
testb
jmp
lods
lcall
adc
sahf
outsb
sub
mov
add
jmp
jae
decb
dec
mov
in
cwtl
mov
mov
sarl
pop
jmp
lret
add
pop
mov
mov
lahf
js
outsb
and
sub
xor
stos
fisttps
daa
incb
testb
mov
sarl
ficomps
mov
stos
cmpsb
gs
sbb
mov
or
push
rorl
sbb
mov
push
push
fstpt
ss
in
es
xchg
jae
fisttps
into
outsl
data16
pop
popf
shrb
ds
jl
data16
loope
and
paddq
lret
in
add
jp
stc
test
dec
pop
push
sub
xchg
xor
adc
push
adc
clc
jl
leave
and
dec
int
loope
or
add
in
xchg
ret
or
adc
rorl
cmc
inc
into
neg
jne
sub
stos
pushf
int
popf
inc
xchg
repnz
bswap
cli
xchg
adc
lahf
pop
or
rcrl
dec
rorl
jns
aad
inc
mul
or
xchg
dec
cwtl
inc
xchg
cmp
fmulp
jge
mov
sbb
loopne
adc
mov
xor
inc
out
dec
mov
and
cmp
pop
pop
lahf
data16
jmp
add
xchg
or
jo
popf
inc
lret
xchg
xor
adcb
xchg
jmp
mov
mov
sub
mov
arpl
adc
fs
xchg
in
fisubrs
xchg
xor
push
rorl
test
es
in
dec
inc
mov
push
push
or
mov
out
fistps
aad
mov
lret
call
stos
or
push
daa
sub
call
push
adc
jl
lods
dec
jmp
dec
mov
clc
mov
add
fisttps
lcall
sahf
cltd
into
ljmp
cwtl
or
jb
xor
or
push
sahf
cmpsb
push
orl
mov
in
mov
push
cltd
push
movsb
mov
aas
xor
pop
xor
aad
xchg
adc
adc
jne
add
sub
adc
into
jae
imul
adc
rorb
mov
cwtl
insb
jae
fcomp
add
sbb
or
fistpl
into
repnz
push
in
psllw
xchg
sbbb
push
cmpsb
repnz
adc
push
leave
or
dec
adc
push
fisttpll
inc
int3
cwtl
xor
mov
dec
mov
mov
jae
mov
cld
dec
and
inc
add
cltd
lcall
push
dec
pop
add
aad
test
xchg
pop
call
jb
mov
dec
cmpsb
es
xchg
lcall
push
das
cli
shrl
pop
xor
test
cmpl
xchg
ljmp
lret
pop
mov
jge
or
jmp
js
jb
std
cmp
push
push
lret
int
sub
mov
jecxz
mov
jl
xchg
pop
ja
xchg
sbb
and
cs
adc
bound
lods
add
fdivs
stos
lods
test
inc
fnstcw
int3
in
lods
imul
adc
jecxz
cwtl
addb
mov
add
push
pop
sbb
mov
and
add
ja
jle
push
mov
dec
lods
cmpl
xorl
sbb
das
repnz
pop
into
inc
mov
out
or
inc
lahf
aas
enter
and
fmuls
sub
hlt
stos
jp
ja
test
add
loopne
inc
popa
dec
push
push
das
subb
into
mov
out
jno
aas
dec
and
jns
dec
dec
cmp
sbb
jnp
xor
xchg
mov
pop
jecxz
add
popa
jae
push
dec
test
dec
sti
insl
sahf
orb
and
xchg
push
std
out
xchg
xor
les
mov
adc
shrb
jmp
jg
fldcw
xlat
sti
ror
xchg
mov
insb
mov
daa
bound
or
inc
jne
stos
dec
cltd
mov
out
mov
cmove
pop
stos
sub
or
add
dec
cmp
cmp
js
xchg
mov
outsb
mov
out
dec
in
hlt
cwtl
es
jno
shlb
xor
loop
std
mov
in
jl
sub
pop
in
mov
xor
mov
lret
das
inc
scas
pop
push
sbb
insl
pusha
push
sub
jb
dec
mov
cmp
mov
cmc
scas
das
push
adc
jl
xchg
outsl
jo
lret
in
mov
mov
sbb
jae
inc
sbb
pop
add
leave
xor
dec
mov
jmp
xchg
fnstcw
hlt
hlt
pop
adc
push
adc
mov
xor
pop
ds
adc
call
push
clc
fsubrl
popa
inc
out
sub
rcrb
push
cld
fldenv
mov
dec
xlat
inc
faddp
dec
in
jge
jnp
mov
aaa
dec
out
cmp
xchg
outsl
jmp
lret
andl
lret
xchg
or
je
imul
dec
mov
shlb
out
sbb
call
pop
sub
mov
loope
mov
sarb
xor
dec
sti
cmp
mov
ror
lret
loop
mov
aas
dec
arpl
ljmp
mov
ljmp
incb
xor
xor
dec
cmpsl
in
imul
sub
sahf
fiaddl
fnstcw
ja
insl
cmp
hlt
jp
or
pop
cmp
iret
rcll
in
stc
mov
dec
bound
dec
xor
imul
and
in
mov
rclb
pause
push
hlt
icebp
cmp
mov
adc
sbb
lods
test
sbb
shll
stos
dec
dec
mov
push
movsb
ret
icebp
xchg
xchg
mov
mov
add
int3
out
stc
push
mov
bnd
fnsave
inc
mov
mov
and
repnz
pushf
cmp
xchg
xor
xchg
ss
mov
dec
ret
lea
push
or
xor
dec
jns
push
and
cmp
or
cltd
jp
jbe
icebp
push
ljmp
les
add
sbb
fs
daa
imul
es
xlat
cmpsl
inc
cmpsb
gs
push
std
and
mov
sub
test
mov
out
and
lds
push
inc
and
cltd
das
ret
push
mov
and
xorl
loopne
mov
cmp
hlt
dec
lcall
out
mov
xchg
das
arpl
jmp
ja
jmp
enter
hlt
sarl
xchg
mov
popf
stos
or
clc
dec
ss
mov
inc
out
lret
inc
test
movsl
push
adc
mov
in
mov
out
je
xchg
push
mov
xchg
movsl
inc
out
inc
sub
and
dec
mov
rcrl
adc
inc
or
mov
movsl
aad
pop
int
xor
jb
enter
movsl
jmp
mov
cltd
cwtl
lcall
je
lds
or
xchg
jae
movsb
jmp
mov
inc
in
xorb
adc
sbb
mov
fs
icebp
xchg
popa
and
nop
mov
sub
sarb
jne
or
repnz
lret
mov
pop
mov
es
shrl
xchg
in
mov
xor
ss
and
es
sub
mov
popa
mov
subb
or
movsl
dec
pusha
sbb
pop
fidivl
and
clc
inc
xor
adc
int
xchg
pushf
pusha
je
out
ret
push
pop
push
push
xchg
pop
xor
daa
adc
mov
inc
loop
rclb
push
cmp
lahf
scas
push
mov
test
push
test
mov
ds
inc
sub
clc
mov
outsb
pop
movsl
sbb
add
jne
add
push
sub
mov
es
push
into
fsubrs
iret
stos
mov
mov
mov
scas
imul
fsubs
enter
xchg
mov
xor
mov
push
mov
enter
daa
cltd
cwtl
es
pop
out
fnsave
or
push
adc
loope
mov
inc
mov
jno
xor
mov
loope
je
mov
add
xor
fimuls
jle
cltd
cmpsl
mov
sbb
test
sarb
cli
mov
out
adc
es
mov
aam
xchg
xchg
xchg
xor
or
outsb
inc
pop
jb
jmp
xchg
mov
cmp
lods
cltd
mov
enter
ljmp
mov
cmp
ss
int
lcall
cmp
aam
sti
add
fcmovnb
jl
lea
inc
add
ja
or
pop
cmpsl
call
data16
pop
imul
jno
add
shrl
cmp
test
adc
inc
psrad
sahf
xchg
push
mov
dec
adc
in
mov
adc
cltd
inc
stc
mov
out
lret
jecxz
or
mov
pop
sub
pop
adc
std
mov
cmp
xchg
push
sub
clc
cld
mov
xchg
xchg
jns
push
xchg
in
int
scas
mov
dec
or
out
cmpsb
test
cmp
das
les
mov
nop
mov
jecxz
sahf
push
mov
cmpsl
stc
sub
cmp
push
lea
test
jbe
ljmp
xor
inc
mov
nop
push
jbe
xor
push
rcl
insb
insl
or
mov
test
fistps
int
sarl
mov
mov
sbbl
nop
ss
pop
mov
dec
mov
lods
decl
adc
lea
sbb
pop
pushf
lds
fnstsw
lods
int3
lods
and
jae
mov
jge
rcl
cmp
push
or
xor
and
jmp
add
mov
es
xlat
testb
xchg
fnsave
test
mov
cmp
movsl
aaa
cltd
test
stos
cmpsl
inc
clc
pop
mov
repnz
push
pop
or
aad
push
lret
push
and
or
add
jmp
addb
stos
sub
repnz
in
dec
cmpsb
sub
fs
and
dec
push
push
repnz
sbb
jo
leave
adc
and
push
xchg
sub
sub
icebp
xchg
ds
bound
mov
jno
in
mov
inc
inc
imul
in
cmp
adc
jecxz
xlat
pop
jae
sub
pop
sub
xor
push
repnz
ss
xchg
inc
sub
test
mov
rcll
incb
loop
iret
in
push
fidivrl
push
sbb
jmp
mov
mov
mov
cmp
push
daa
jl,pn
jbe
cmc
leave
xorb
or
shrb
arpl
pushf
ja
mov
fistpl
push
int
mov
push
into
or
sbb
lods
adc
mov
lock
ffreep
push
adc
add
xchg
std
inc
out
inc
xchg
shrb
mov
aas
lds
inc
xor
push
loope
pushw
outsb
xchg
mov
cmc
xchg
andl
into
cmp
ret
dec
fstpl
pop
add
adc
ffree
fwait
jl
jnp
jnp
daa
lods
dec
jg
popf
push
int
sub
scas
in
and
jb
mov
pop
sbb
xor
mov
dec
xor
xor
cwtl
stc
data16
push
inc
mov
ss
sub
and
dec
dec
cli
adc
mov
or
mov
int3
lock
test
pop
mov
inc
mov
xor
inc
mov
xor
lcall
pop
inc
xchg
xchg
inc
shlb
and
xchg
mov
addr16
add
repz
dec
xor
outsl
jmp
lea
mov
jl
mov
test
movsb
divl
mov
cmp
push
lret
stc
xchg
mov
xchg
nop
pop
arpl
repnz
push
shrl
std
das
or
sbb
cmpsb
jbe
shll
lea
out
scas
cld
lret
push
mov
stos
adc
cmp
repnz
andb
pop
inc
sub
aaa
btcl
loop
jecxz
popf
adc
jecxz
stc
or
lret
cmp
jnp
stc
jg
mov
in
flds
lea
in
cmp
mov
pop
aas
icebp
push
or
fldenv
lds
inc
movsl
dec
sub
sbb
pop
fdivs
xor
xor
add
loope
ret
push
cmpsb
lret
mov
insb
ret
ja
mov
sub
test
inc
call
pushf
push
mov
jle
test
dec
pop
lcall
dec
mov
cmp
sti
in
inc
adc
xor
dec
nop
dec
orb
outsb
inc
sub
rcrb
cmp
push
or
xchg
mov
sub
mov
arpl
pop
inc
or
mov
icebp
add
or
sub
adc
sub
jno
xchg
outsl
data16
pop
faddl
or
fdiv
and
sbbl
mov
pop
loope
and
in
or
sub
push
adc
iret
outsl
and
sti
mov
shrl
imul
adc
dec
stos
xchg
adc
or
insb
in
in
stc
sub
jne
cmc
xor
out
push
into
jns
xchg
test
movsl
xor
fidivl
pop
push
xchg
and
shll
mov
sbb
and
or
scas
mov
adc
addr16
dec
mov
and
jns
pop
mov
leave
jecxz
sub
mov
aaa
xor
ss
mov
inc
jb
rcl
loop
popl
pop
scas
dec
pop
in
ret
inc
cmp
fisttpl
clc
or
cmp
addr16
and
jnp
cmp
popa
cmpsl
jb
mov
dec
sti
das
adc
xor
add
imul
jle
sub
ds
jbe
adc
ror
sub
rcr
stos
xchg
scas
sub
mov
inc
sti
xor
dec
int3
sub
xchg
xor
imull
fsub
cmp
cmpsl
push
jmp
cltd
rorl
fsubl
fisttpll
arpl
and
xchg
idivb
in
in
mov
adc
dec
mov
fwait
and
mov
jo
pushf
aam
aas
sbb
mov
jmp
xor
cld
dec
mov
inc
popf
insb
popa
fnstenv
or
xchg
mov
mov
adc
inc
lahf
and
mov
mov
repz
xchg
popf
xchg
pop
sbb
rorb
leave
lock
pusha
and
movb
imul
ljmp
ja
push
pop
test
enter
dec
aas
jbe
cltd
mov
pop
cmp
sub
xor
lock
add
je
mov
adc
pop
add
jbe
push
dec
movsl
push
fs
ja
out
mov
add
mov
jno
bound
add
test
add
pop
sub
sbbl
push
fld
lea
shlb
pop
into
adc
fisttpll
arpl
fildl
adc
icebp
enter
dec
adc
cmp
xor
ss
dec
ja
mov
mov
jp
scas
leave
add
pop
mov
sbb
movsb
and
ss
in
and
dec
and
in
enter
xchg
sbb
out
pop
cmp
push
sbb
scas
adc
pop
outsb
inc
leave
adc
lahf
imul
jl
cmp
ljmp
fistps
push
pop
daa
iret
in
ja
lret
jo
add
jge
inc
out
pop
dec
add
push
sub
arpl
push
loop
cli
gs
xchg
stos
popf
stos
bound
adc
xor
sarb
in
mov
test
imul
out
xchg
addr16
das
lea
andb
pop
ret
xor
scas
inc
lea
imul
sub
xor
loop
addr16
dec
lahf
lret
sahf
rcr
fidivrl
jne
ljmp
movsb
inc
bound
mov
pop
mov
pop
shlb
test
jno
mov
cmpb
lods
jge
push
sub
das
inc
sti
mov
in
cmp
sbb
mov
push
inc
int
sbb
sub
mov
dec
jmp
and
mov
xor
inc
insl
ds
outsb
movsl
sbb
mov
int3
push
lea
dec
jmp
xor
cli
jnp
roll
mov
cld
pop
jg
jecxz
nop
lods
and
or
shlb
pop
std
jg
mov
int
pushf
dec
xor
subl
pop
and
xor
pop
and
push
push
inc
not
je
iret
loopne
sbb
push
mov
mov
dec
pusha
jge
fwait
pop
cmp
lret
out
xor
imul
fdivr
push
push
jbe
pop
inc
lods
xor
fisubs
push
scas
xor
nop
sahf
dec
stos
pop
ja
pop
add
rclb
mov
addl
mov
cmpsb
in
ret
push
fisttpl
cmp
jns
sub
push
mov
xor
lds
test
sbb
lods
aam
xchg
je
inc
jle
cmc
cmp
mov
push
sbb
xchg
pusha
fisttpl
fs
or
popa
xchg
mov
fsts
enter
sub
repnz
jg
add
and
push
ja
test
in
mov
xchg
mov
lahf
or
lahf
int
cwtl
mov
cmp
xchg
aas
es
xor
xchg
imul
stos
pop
or
xor
jmp
push
mov
mov
out
movsb
pop
dec
pusha
cpuid
xor
push
cmp
pop
adc
fcomps
jbe
pop
jle
jmp
or
sbb
pop
and
and
pop
scas
or
dec
xchg
insb
push
push
mov
loop
jnp
sar
sbb
insb
push
dec
mov
flds
dec
out
lret
sbb
lock
xor
mov
pop
mov
cmp
or
iret
jno
fisttps
in
inc
pop
test
ljmp
lret
loopne
sbb
sbb
fwait
insb
or
adc
nop
sub
outsb
adc
ss
mov
xchg
jecxz
and
xchg
or
loopne
stos
pop
fisubs
lahf
add
cmp
pop
sbb
inc
sbb
ret
mov
add
movsb
adc
jg
mov
inc
mov
sbb
or
pop
inc
xchg
or
pop
lret
nop
scas
dec
inc
jmp
xchg
cmpl
mov
jecxz
jb
push
aaa
mov
sub
movsl
jae
in
xchg
lods
mov
fsubrs
xlat
sbb
les
jne
dec
fcmovu
ret
fwait
movsl
aam
inc
sbb
cmp
packuswb
jg
inc
lahf
mov
sbb
add
push
add
adc
mov
dec
mov
push
mov
pop
dec
inc
fimull
cmpsb
sbbl
mov
mov
iret
ljmp
bound
lds
test
data16
push
pop
ljmp
push
xchg
lahf
mov
out
lock
addr16
mov
sti
add
fcmove
daa
mov
push
adcl
mov
jo
outsb
push
or
sbb
mov
rcrb
iret
mov
mov
adc
fldt
mov
mov
data16
shl
loopne
mov
arpl
std
orl
add
jle
mov
jo
movsl
out
xchg
pop
mov
out
push
aaa
in
mov
enter
in
loop
sub
call
mov
test
mov
mov
cmp
jmp
pop
in
ret
lods
enter
jp
cmp
xchg
and
int
sbb
push
cmp
fnsave
cmp
jmp
dec
call
daa
xor
inc
pop
fildl
jg
int3
xor
insl
cmp
cwtl
loop
inc
xor
mov
xchg
sub
fisttpl
das
push
test
scas
pop
cmpsl
dec
mov
sbb
pop
sarl
dec
cli
and
push
cmp
ss
clc
pushf
enter
or
mov
cmp
inc
dec
xor
in
cmp
push
les
mov
jbe
push
fdivrs
out
fnstenv
adc
mov
xor
pop
jbe
adc
push
push
outsl
sbb
dec
fwait
sbb
arpl
addr16
add
mov
lods
out
push
cmp
inc
dec
or
pop
aam
ret
mov
mov
int
sub
pop
int3
stos
lret
data16
cmp
shrl
add
fidivl
ret
cmp
xor
jnp
enter
aaa
dec
notl
aad
aas
pop
mov
cmp
pushf
subb
mov
hlt
imul
push
pop
fadds
bound
push
movsb
cmc
pop
inc
cmpsb
pop
adcb
xlat
mov
jle
jp
sbbb
sub
push
xchg
stos
push
dec
xor
pop
and
in
fdivrs
mov
adc
dec
and
inc
ja
jl
jle
push
popf
push
loope
cmp
mov
or
lret
out
cmp
lret
inc
and
mov
arpl
cwtl
enter
ss
pusha
lea
leave
jge
aad
clc
fcomps
or
sti
and
mov
cmp
daa
jae
inc
push
xchg
inc
nop
scas
es
sub
xchg
add
shll
mov
push
add
clc
and
aas
sbbl
pop
out
je
add
aaa
fdivs
mov
jmp
dec
popf
inc
cmp
shlb
leave
cmp
jb
imul
jbe
inc
or
inc
lock
scas
cmc
mov
out
loope
fisubrs
mov
and
and
pop
lea
xchg
lahf
add
mov
xchg
dec
pop
popa
add
out
insl
cmpsb
cmpsl
pop
cmp
sbb
lret
sbb
xchg
mov
mov
cmpsb
ret
push
aas
out
enter
rcl
imul
mov
add
inc
dec
loopne
jle
mov
inc
adc
cmp
dec
push
rcll
sbb
mov
test
mov
shl
outsb
push
or
cltd
negl
cli
mov
cwtl
cmp
and
push
jo
clc
test
dec
push
xor
fwait
xchg
mov
div
ss
mov
in
cmp
or
inc
cmpsb
lea
cwtl
mov
cli
lcall
fidivrl
ret
push
insl
and
mov
jg
add
dec
insb
inc
push
mov
loop
jl
lret
push
pop
ficoms
scas
cmp
fstp
adc
push
sbb
mov
insb
addr16
sbb
mov
and
ret
push
sub
lock
add
sbb
clc
adc
sbb
data16
inc
mov
leave
adc
and
inc
jl
xchg
push
inc
jno
movsl
icebp
cmp
inc
fdivrs
rcrb
arpl
inc
xor
je
mov
jecxz
loopne
sbb
cmp
arpl
std
inc
push
push
sti
jo
add
adc
jno
lcall
xchg
psrlw
ds
inc
cmp
je
pop
insb
dec
or
push
subb
sbb
xchg
adc
outsb
rorl
add
shl
pushf
repz
or
in
lods
stos
jo
lea
push
stos
jne
aaa
pop
xchg
cmp
xchg
out
scas
mov
push
iret
test
push
mov
cmpsb
int3
inc
cmp
mov
out
movsl
add
dec
rclb
andb
cmpsb
mov
pop
bound
push
mov
sub
push
dec
div
pop
sub
test
xor
std
icebp
cs
fs
test
shll
in
stos
dec
sbb
andl
ret
jnp
sbb
cmpsl
sub
mov
mov
or
inc
or
jp
jmp
mov
mov
mov
pop
xor
loop
stos
test
pop
adc
lods
cmpl
push
sbb
or
lods
adc
adc
out
lea
push
and
xchg
fdivp
test
jle
movsb
jae
adc
add
xchg
xchg
mov
ss
repz
and
sbb
mov
lds
xchg
push
xor
fcomip
bound
xchg
rolb
loop
mov
ja
loop
sub
in
cmp
push
mov
cmp
mov
sub
imul
xchg
lret
xor
out
sti
push
filds
and
mov
cld
fnstenv
aad
enter
jl
cmc
lahf
pop
subl
ret
in
xchg
scas
mov
iret
repz
outsl
push
lcall
adc
std
mov
xor
xor
mov
test
cmpsb
push
out
push
mov
leave
xchg
imul
xor
arpl
imul
xor
inc
gs
pop
cmpsl
pop
out
in
leave
les
mov
sub
dec
push
pushf
add
stos
cmp
cltd
and
or
inc
mov
cmp
ss
add
xor
mov
int3
jne
mov
mov
lock
bound
cmp
cmc
jns
add
iret
mov
es
sub
out
and
ror
inc
push
mov
daa
mov
xchg
mov
ja
jg
es
leave
add
lcall
mov
enter
subl
jecxz
in
push
outsb
mov
loop
pop
jae
jnp
sub
dec
cmc
test
inc
les
and
mov
xchg
xchg
ret
sti
pop
cwtl
pop
mov
mov
outsl
divl
jl
push
shr
clc
ja
hlt
sbb
jb
scas
pop
std
pop
cli
sub
mulb
mov
mov
popf
inc
mov
adc
stc
sbb
cwtl
pushf
jp
shll
jecxz
add
mov
repnz
xor
adc
inc
push
mov
aas
pop
push
and
out
int3
fistps
jne
add
mov
fwait
ret
inc
cmpb
xor
mov
insb
xchg
mov
mov
add
add
sub
mov
mov
dec
adc
fmulp
scas
adc
pop
cld
xchg
sub
cltd
inc
push
jns
add
outsl
pop
push
inc
jp
inc
or
cmp
adc
mov
pop
push
pop
inc
cs
fcoms
in
pushf
rcl
int
push
clc
pushf
lds
call
lahf
xchg
or
add
pop
stc
fsubl
xor
lcall
stc
adc
mov
call
imul
repnz
jmp
xor
popa
cmp
xchg
movsb
lea
out
rcr
mov
test
clc
lahf
fucomi
cmp
data16
aad
js
scas
sbbl
sub
add
xchg
imul
cltd
add
jno
rorb
jge
pop
lret
nop
insb
xlat
push
jp
stos
xchg
jmp
push
out
adc
xorb
add
popf
ret
xchg
sub
lret
stc
popf
inc
xchg
fdivl
inc
mov
xor
fistps
ja
int
xchg
push
in
lods
cmpsl
scas
iret
inc
inc
pop
jecxz
sbb
cltd
dec
lahf
repz
lock
or
sub
mov
sub
dec
mov
movsl
data16
out
sbb
inc
int3
sub
inc
mov
loopne
xchg
test
imul
pop
mov
ret
inc
arpl
lret
mov
xchg
mov
push
xchg
push
test
or
mov
jns
orb
cmp
xchg
clc
mov
dec
xor
xor
jp
aad
push
fcoms
jmp
insb
stos
push
pop
mov
dec
or
xor
mov
jb
testb
pop
test
loop
or
std
mov
pushf
sahf
std
in
push
adc
pop
dec
rol
mov
mov
or
and
insb
mov
pop
lods
adc
pop
jae
js
xchg
xchg
fbld
ljmp
add
test
out
hlt
shrl
and
xchg
out
lahf
loop
mov
mov
push
es
add
sub
adc
iret
jno
ror
outsl
xchg
jecxz
div
sub
jnp
xor
lea
sbb
aad
inc
pushf
mov
scas
mov
aam
fcmovnu
and
lcall
xor
dec
cmp
in
fsubrp
sbb
iret
dec
push
pushf
nop
test
mov
cmpsl
sub
idivb
sub
xchg
cmp
lret
mov
loope
pop
adc
cmp
je
mov
insl
mulb
push
pop
into
mov
add
in
lahf
outsl
je
fmuls
push
jnp
enter
lret
add
iret
xor
xchg
sbb
sbb
cmp
fsubrl
and
jo,pn
pop
push
cmp
mov
loop
xchg
sbb
sbb
pop
inc
dec
inc
in
scas
scas
fnstsw
fstps
aaa
in
mov
pushf
jecxz
cltd
arpl
in
xor
fadds
cltd
or
jne
pop
mov
aaa
stos
inc
push
outsl
cld
out
xor
hlt
outsb
je
add
dec
xor
jne
mov
xchg
cmpsb
sbb
pop
or
cmpsl
push
adc
mov
xor
or
xor
lahf
jb
add
pushf
adc
aam
lea
sbb
mov
jnp
mov
repnz
pop
or
outsb
push
pushf
mov
shrl
fs
repz
push
aam
je
cmpsb
loop
adc
movsl
and
jmp
mov
lods
adc
mov
ret
and
dec
sti
push
outsb
out
mov
ficoms
adc
faddl
mov
in
inc
repz
outsb
popf
repz
xchg
add
idivl
mov
inc
hlt
dec
add
xchg
xchg
sbb
pop
or
xor
aam
and
loope
xchg
sub
pop
insb
xor
and
pushf
jl
dec
xchg
sbb
pop
out
ret
shll
push
xchg
adc
mov
jbe
div
xor
mov
hlt
pop
and
sbb
je
and
test
push
inc
cwtl
sahf
xor
or
cmc
and
insb
je
arpl
inc
xor
add
mov
test
std
sub
call
mov
fucomip
stos
pop
push
push
sbb
pop
repnz
jbe
inc
mov
and
repz
das
nop
sbb
add
orb
jmp
mov
inc
int3
mov
lcall
pop
cmp
push
and
push
inc
sub
dec
hlt
jle
in
dec
push
cmp
imul
lods
add
jmp
sahf
stos
mov
add
mov
das
sti
out
fs
push
push
lds
push
mov
cli
or
xchg
mov
adc
inc
xchg
adc
iret
icebp
clc
enter
into
pop
negl
sbb
push
sar
mov
xchg
sbb
add
jb
pop
sbb
bound
inc
inc
add
jno
pusha
stos
pushf
inc
push
movsb
cmp
inc
xchg
scas
mov
and
xor
jnp
dec
fildll
ret
mov
push
test
push
sbb
aas
sti
mov
mov
xchg
sbb
jae
dec
pop
sti
inc
pushf
es
fsubs
xchg
lahf
rorb
cmc
push
ror
push
inc
cmc
inc
pop
cld
popf
aad
push
frstor
inc
test
pop
out
andl
sti
ret
bound
fwait
out
and
in
js
or
adc
int3
jno
leave
scas
pop
jo
add
repz
data16
nop
sub
jo
lret
xor
out
mov
mov
push
leave
xchg
pop
xor
jo
cmp
loop
push
fsubrp
std
enter
stos
mov
inc
test
jbe
cwtl
popf
jecxz
popa
push
mov
pop
add
lds
ja
mov
cltd
fisubrl
push
mov
push
jns
aam
pop
sbb
push
cmpsl
test
sub
add
pop
outsb
pop
push
cld
fdiv
shl
xor
and
ss
cmp
cmp
dec
dec
cmp
push
dec
jno
mov
xor
ja
sub
xchg
jne
insb
out
mov
movsl
or
xchg
fadd
xor
inc
pusha
lret
fisttpll
push
push
fisubs
pusha
mov
add
lds
in
or
sub
repnz
mov
mov
dec
icebp
mov
push
sbb
jo
arpl
dec
mov
cwtl
shlb
adc
aas
sbb
jne
stos
test
or
sub
dec
push
inc
lds
sub
cs
mov
not
mov
inc
and
push
repnz
cmpb
idiv
shll
cmp
cmc
fdivs
add
aam
out
push
mov
ffree
mov
popa
js
and
mov
daa
jnp
lcall
addr16
or
nop
decl
mov
rolb
jbe
lock
stos
adc
mov
movsl
ja
aas
add
push
and
mov
cmp
pop
mov
sbb
bswap
pop
dec
imul
push
bound
ret
mov
aas
push
sbb
add
imul
push
mov
mov
add
xlat
testl
mov
cmp
jge
jnp
fidivrl
cmc
popa
cmp
inc
dec
xchg
pop
ja
outsl
push
fisubrs
push
pop
mov
aam
and
out
lds
into
mov
in
call
out
imul
sarb
sub
aas
cmp
push
pop
dec
push
pusha
icebp
test
pusha
fadds
mov
cwtl
mov
mov
fs
mov
or
xor
out
jge
sub
pop
cmp
cltd
push
testb
add
pusha
adc
out
xor
mov
cmpsb
loope
xchg
dec
nop
mov
testl
sbb
dec
subb
cmp
adc
push
fnstsw
scas
adc
sbb
clc
fsubl
sti
xchg
push
out
sbb
divl
xor
xchg
xchg
push
adc
sti
addr16
loopne
loop
cmpsl
dec
movsl
sbb
into
mov
into
aaa
stos
icebp
push
adc
outsb
fdivl
xchg
sub
xchg
js
bound
insl
mov
mov
pop
xchg
add
mov
and
cmp
xor
popa
ficompl
cmp
addr16
pusha
xchg
adc
xchg
movb
out
mov
clc
pusha
test
pusha
mov
jl
cmpl
negb
pop
sbb
rolb
jl
mov
out
cli
movsb
imul
lret
sub
mov
xchg
fnstsw
addr16
fidivs
leave
lods
inc
out
add
enter
mov
inc
pop
in
cmp
je
test
decb
mov
cli
loope
mov
lcall
mov
sbb
dec
dec
dec
daa
enter
mov
mov
and
or
jne
inc
adc
in
sbb
sbb
sahf
ret
bound
hlt
pop
mov
mov
ret
or
gs
mov
cli
shrb
cld
addr16
lea
ja
cmc
adc
movsb
add
clc
jg
daa
es
dec
cwtl
mov
out
repz
xor
sbb
adc
lea
sbb
lds
mov
sub
mov
popa
pop
cld
pop
mov
cmp
stos
sahf
jo
rcrb
mov
mov
outsl
and
push
pushf
xchg
add
jae
arpl
imul
lds
cmp
dec
ret
lret
dec
lea
aaa
mov
sti
push
adcl
in
push
negb
fbld
xchg
mov
mov
out
out
cmp
sti
iret
in
add
xlat
loope
or
jp
loope
pop
pop
pop
inc
sub
inc
jae
das
adc
sub
push
pop
loopne
repnz
pop
mul
or
ret
jmp
push
adc
mov
test
shl
call
mov
mov
mov
add
loopne
sub
nop
call
addl
stc
repnz
push
bound
xor
ds
push
cltd
xorl
lods
lods
xor
imul
cmp
cli
pop
aam
insb
lods
fadd
add
mov
cmp
mov
mov
sbb
call
popa
jno
sub
imul
outsl
nop
fwait
das
andl
xor
nop
ss
inc
into
ljmp
xchg
dec
pushf
js
push
es
imul
or
shr
push
stos
mov
outsb
data16
or
add
add
cmp
mov
add
push
add
push
sbbb
popa
or
icebp
mov
xor
pop
jl
dec
inc
and
pop
pop
fdiv
adc
loopne
sub
sub
add
cmp
fdivr
sub
dec
xchg
mov
aam
sbb
xor
out
inc
pusha
ret
nop
add
scas
xchg
ss
jmp
fnstsw
test
imul
mov
jbe
add
xchg
loopne
test
aam
mov
jl
cmp
jp
push
jmp
pusha
push
movsl
in
stos
inc
in
cmp
xchg
or
mov
bound
sbb
in
rcl
cwtl
or
inc
jp
jp
cmp
sbb
bound
mov
sub
xor
sti
les
call
mov
rcrb
xchg
movsb
xor
cmpsl
jle
in
push
lcall
aaa
fistpl
sub
cmpsb
jne
cld
xor
sahf
cmc
jecxz
sub
jo
pop
cmp
lea
ss
bound
mov
enter
mov
xchg
adc
jp
mov
dec
pop
adc
fldcw
jns
pushf
mov
jns
int3
fsubrs
mov
filds
sbb
cmc
cld
cwtl
sti
add
inc
bound
inc
jmp
cmp
daa
js
stos
inc
jl
push
jae
pop
pop
inc
lock
movsb
xlat
mov
repz
scas
xor
mov
fs
push
ja
push
pop
cli
mov
bound
xor
lahf
mov
aas
xor
inc
in
or
and
andl
je
addb
and
push
sbb
ljmp
mov
mov
sub
notl
icebp
aad
fistl
add
mov
jle
mov
fstp
pop
mov
stos
aas
jl
lods
out
and
and
and
sub
je
sub
inc
mov
and
add
lods
jmp
or
pop
inc
sub
and
xor
pop
push
fistl
andb
inc
aad
in
outsl
push
in
leave
les
test
dec
or
dec
insb
inc
dec
push
lret
xchg
jle
xchg
lahf
cmc
sbb
pop
js
stc
add
stos
lods
in
clc
call
rolb
xor
jne
and
and
stc
xor
dec
pop
test
jmp
inc
xchg
lcall
mov
movsl
sub
push
std
dec
inc
inc
cmp
add
sbb
sub
movsl
and
lret
outsl
test
push
mov
lret
or
push
es
and
in
icebp
mov
imul
pushf
or
cmp
popw
dec
jo
call
nop
inc
sbb
stos
repnz
ljmp
add
insl
mov
inc
pushf
adc
xchg
adc
pop
and
push
test
movsb
ss
xchg
rcl
ss
jo
cwtl
mov
scas
mov
xchg
out
aad
pushf
es
push
xor
jl
out
push
enter
inc
shll
push
sbb
cmpsl
mov
mov
inc
mov
xchg
xor
add
dec
add
lock
adc
push
insb
outsb
aam
outsl
mov
jns
test
movsl
mov
subb
push
sbb
push
addr16
pop
mov
adc
xor
xor
xchg
in
pop
or
xchg
repz
and
mov
in
push
lea
and
or
dec
dec
aad
mov
lcall
adc
mov
cmp
cmpl
int
xor
push
push
sbb
ja
mov
xor
inc
sub
push
fucomi
roll
push
cli
rolb
jnp
mov
popf
leave
xchg
popf
mov
pop
call
lahf
xchg
pop
sub
es
xchg
lods
jp
sub
mov
sbb
add
fucom
sub
ss
mov
or
inc
mov
fmuls
xchg
sahf
lock
adc
push
xchg
or
out
mov
incl
dec
loopne
cmp
push
pushf
jno
loopne
or
push
push
cmc
and
pop
sahf
enter
ret
mov
dec
or
test
incl
mov
jle
cwtl
mov
sub
test
andl
xchg
aad
fisttpll
or
pop
cmp
xchg
std
psrlq
jno
cmp
insl
cmp
cmc
mov
pop
shrb
push
adc
aam
lods
out
nop
mov
and
icebp
mov
push
loop
xor
movsl
int3
and
bound
out
rcrb
scas
cld
ss
cld
cwtl
jg
xor
and
and
push
or
jge
lock
adc
mov
sbb
lods
arpl
inc
mov
add
pavgw
dec
loop
xchg
std
push
pop
cwtl
test
in
rolb
adc
mov
in
push
push
xchg
sub
jmp
lods
clc
mov
int
pop
or
jae
test
in
into
inc
jmp
in
push
loopne
xchg
ret
pusha
xor
add
pop
push
mov
sub
dec
iret
stc
leave
inc
jp
and
pop
test
sbb
push
aaa
xchg
or
cmp
sti
ds
repnz
mov
cmpsb
lods
add
rorl
sub
aas
mov
aad
adc
push
lret
mov
mov
sbb
arpl
in
add
jg
push
int
xchg
push
fwait
es
sub
shr
cli
filds
cmp
insl
xorb
jge
push
test
addr16
inc
inc
mov
push
lcall
inc
xchg
xchg
arpl
inc
dec
aas
push
sbb
jmp
fwait
pop
jge
add
and
loope
popa
mov
jnp
enter
cmp
mov
inc
insl
movsl
sub
data16
dec
cs
pop
or
inc
mov
mov
xchg
out
mov
arpl
js
lret
sub
hlt
pop
cmp
cmp
arpl
jno
aad
mov
ret
cmp
ds
inc
fcmovu
stos
pop
aaa
mov
ror
negb
sbb
rclb
mov
outsb
popa
adc
push
lret
and
xor
jp
inc
lahf
sti
pop
inc
adcb
pop
iret
lahf
xlat
inc
add
sub
and
pop
loop
adc
enter
push
jmp
pop
xchg
pop
dec
dec
lahf
notl
pusha
jl
adc
call
or
fcoml
dec
out
jo
mov
pop
inc
xor
mov
cmpsb
dec
add
pop
dec
scas
inc
adc
xchg
cmpsl
sub
push
out
pushf
mov
xchg
cli
out
pop
into
scas
dec
movhps
sub
push
aam
aas
mov
insl
stos
iret
mov
jne
fwait
enter
loopne
sahf
insl
cli
xchg
xchg
or
fs
inc
ja
insl
pushf
sub
pop
xor
mov
adc
jbe
scas
jecxz
rorl
or
mov
cli
jle
pop
or
mov
push
movsb
pop
xor
jne
dec
insl
pop
lods
xor
cmp
lock
cmp
aaa
pop
inc
add
ds
mov
test
jns
rclb
lods
lret
xchg
jo
push
ja
inc
int3
lock
push
negb
or
jg
fwait
add
jp
stos
outsl
repz
push
popl
aam
cmp
call
scas
push
sbb
xchg
jge
jge
call
in
mov
sub
and
leave
addr16
scas
cmp
lods
mov
cmp
xchg
popa
add
mov
es
push
test
mov
jl
es
sub
pop
add
sub
pop
adc
jp
push
adc
dec
adc
shrb
jae
insl
mov
add
fbstp
loop
mov
and
into
xor
dec
xorb
lret
jnp
andb
cwtl
adc
outsb
and
aad
xorl
sbb
inc
mov
inc
cmp
adc
or
flds
das
fcomip
xchg
arpl
jg
insb
and
push
addr16
iret
shrb
das
pop
xchg
dec
pop
cmpsl
imulb
sub
popf
rcr
arpl
repz
sahf
push
inc
fsts
inc
push
sbb
add
std
jns
repz
andl
sub
fnstenv
mov
cmpsl
fcompl
jl
data16
jge
sub
std
outsb
in
cld
mov
and
lret
mov
or
mov
mov
jmp
add
orl
and
cmp
je
and
inc
leave
sarb
mov
xor
repz
pop
std
out
adc
sbb
and
and
jmp
add
dec
sbb
mov
jmp
in
jnp
sub
rcrl
dec
test
cmp
cld
jp
or
mov
mov
arpl
dec
iret
jbe
fcompl
sbb
or
push
jne
shll
xlat
aas
std
dec
ds
jae
add
lea
cmc
xor
push
addr16
pop
mov
bound
movsb
and
out
dec
lods
dec
out
sub
in
or
add
jno
lahf
mov
es
out
scas
inc
mov
xchg
aad
mov
leave
ss
push
mov
and
push
aad
and
pop
xchg
adc
pop
xor
ds
push
out
xor
icebp
mov
lret
pop
or
sub
xchg
fistl
lods
lretw
aaa
mov
leave
or
insb
dec
cmpsb
fdiv
in
xchg
sub
pop
mov
cmpsl
or
repnz
test
sbb
inc
add
imul
pop
adc
mov
xchg
stos
dec
pop
xchg
xchg
es
dec
push
sub
mov
aas
cli
fwait
ljmp
mov
jmp
cmp
and
loope
pop
iret
jmp
mov
inc
and
sub
pop
xchg
stos
aas
mov
inc
cltd
imull
lcall
xor
inc
rorl
pusha
xchg
dec
fs
ljmp
adc
shr
jbe
mov
or
in
in
ds
xor
push
pop
mov
imul
cli
gs
imul
aam
pushf
push
pop
movsb
into
shlb
lea
mov
jnp
xchg
adc
push
mov
mov
rcrl
fsubrs
testl
aad
jns
into
dec
fcompl
das
jle
out
pop
xchg
xor
or
xchg
faddl
pop
inc
or
add
in
pop
add
and
les
loop
cli
cltd
xchg
enter
ficompl
mov
xchg
pushf
push
sub
dec
fs
adc
sbb
out
jne
test
add
scas
jbe
adc
nop
mov
xchg
push
xchg
mov
int
mov
dec
sbb
push
inc
sub
enter
mov
cmp
jns
push
into
pop
out
aas
repz
scas
imul
jl
mov
inc
adc
pusha
cmp
push
pop
popf
push
jg
das
fcmovnbe
ja
mov
mov
lea
cmpsl
jnp
orb
andl
xlat
xlat
cs
jp
sti
js
sti
cmp
movsb
or
adc
addr16
xor
test
cwtl
outsl
cli
aad
xlat
cld
pusha
push
fisubrl
xchg
jb
xchg
js
orb
das
or
xchg
and
jg
sahf
add
push
add
jg
push
add
cmp
xchg
sbb
xchg
push
or
cmp
add
push
incl
jbe
sbb
jge
jb
shlb
lret
mov
int
adc
and
inc
lret
test
cmp
push
sub
add
jmp
sub
fst
and
dec
data16
jecxz
and
mov
mov
cld
out
mov
fcoms
imul
lcall
ss
and
lods
cmpsb
inc
cmpsb
mov
xchg
mov
cmc
adc
inc
lods
pop
mov
pop
insb
adc
cmp
and
ror
inc
dec
mov
cmp
cmp
daa
mov
mov
test
and
mov
mov
xor
add
cwtl
outsb
pushf
fucom
mov
lret
pop
mov
in
push
insb
int
xchg
pop
adc
xchg
test
pop
jg
xchg
sahf
cmp
in
leave
cmp
scas
icebp
pop
negl
and
jnp
test
roll
bound
push
adc
hlt
mov
and
push
xor
pop
and
jecxz
test
sub
jmp
mov
inc
insb
sbb
jbe
stos
popf
daa
push
sub
inc
int
pop
and
iret
stos
rcll
jge
jp
xorl
push
lea
mov
icebp
cmp
dec
rolb
mov
xlat
es
fimull
pop
push
dec
mov
and
dec
push
frstor
fdivr
fisttps
hlt
or
call
mov
cmp
shlb
push
sbb
inc
jle
test
dec
mov
daa
inc
mov
mov
add
sti
mov
mov
stc
pop
stos
aaa
and
jle
enter
insb
sub
pop
sub
rcrb
adc
add
jmp
stos
fs
out
cmpsl
shll
pop
xchg
aas
ret
pop
push
iret
cmpxchg
adc
and
pusha
test
mov
inc
std
pminub
dec
sub
cld
int3
and
xchg
pop
mov
add
in
fsubs
xchg
mov
dec
data16
lret
jnp
add
ja
jl
cmpl
lods
adc
les
xor
mov
xchg
ret
clc
cltd
stc
arpl
jg
int
daa
outsl
ja
jns
dec
xor
movsb
fs
or
dec
sub
mov
xchg
scas
stos
dec
not
fidivrl
fs
cs
and
lods
dec
adc
incb
inc
jnp
daa
xlat
mov
in
pop
lret
sbb
out
les
jne
loop
pop
ret
insl
test
repz
mov
dec
les
int3
xchg
icebp
shrl
fidivrs
shrl
jb
sbb
lods
fbld
xchg
push
cld
sahf
shll
popf
imul
jno
lret
inc
sahf
add
pop
cmpsl
sbb
inc
pop
in
xchg
pmuludq
mov
ljmp
enter
lods
outsl
stos
sub
cltd
push
pop
sub
loop
fstpl
mov
bound
pop
sub
xchg
add
in
aaa
xor
cltd
pop
sti
roll
andl
jb
mov
pop
xchg
fsubs
stos
mov
xchg
inc
incb
mov
mov
int3
mov
mov
lods
inc
scas
fsincos
mov
mov
mov
testb
xor
scas
outsl
xchg
mov
test
mov
xor
sahf
jmp
push
repz
fldcw
cld
push
jge
jg
dec
scas
add
xor
repz
xchg
mov
data16
jg
mov
inc
sub
mov
push
jp
and
xor
imul
out
ret
cmp
or
mov
out
jnp
dec
fnstcw
divb
pop
pushf
mov
xchg
clc
imul
movl
icebp
dec
fdivrs
xor
dec
xchg
mov
mov
sub
push
js
mov
sub
pop
popf
sti
xlat
jne
inc
adc
aas
and
xor
insl
hlt
xchg
jae
sub
adcb
jo
fmull
out
mov
cld
imul
test
aas
mov
out
repz
int3
mov
mov
ljmp
inc
adcb
sarb
jae
sub
das
in
in
arpl
sbb
pop
dec
imul
mov
mov
sub
cmpsb
jnp
insb
popa
ret
repz
lret
in
test
xor
jo
dec
in
inc
and
xchg
mov
xor
dec
xor
cwtl
dec
dec
adc
aas
cwtl
lods
enter
gs
vpunpckhwd
repnz
daa
xor
add
add
out
sbb
push
xor
mov
js
mov
aam
iret
mov
sub
xchg
xchg
sbb
ljmp
jge
add
add
sti
nop
inc
or
adc
les
dec
cwtl
pop
lods
xchg
ret
push
sbb
push
out
jns
or
in
imul
or
jp
js
push
dec
pop
jo
or
push
fadds
aad
jp
ss
repz
movb
out
ret
xchg
xchg
jp
dec
adc
push
mov
sahf
push
adc
dec
ret
nop
jne
outsl
jns
outsb
mov
arpl
push
test
mov
cmpsb
int3
xchg
inc
mov
jb
fistl
fwait
stos
xor
fiadds
pop
jecxz
outsl
adc
sahf
or
mov
subb
pop
popf
and
vmread
cmp
in
inc
pop
xchg
sarl
test
cmpsb
xchg
pop
xchg
xlat
daa
dec
inc
in
mov
inc
dec
or
addr16
lods
into
pop
lcall
imul
jbe
mov
call
sbb
lock
and
or
in
mov
dec
jb
les
pop
push
call
push
imul
xchg
inc
xor
fmull
int3
pop
add
add
adc
cwtl
pop
dec
ret
lods
cs
outsl
mov
gs
push
mov
mov
sbb
xor
add
sub
dec
scas
pop
xchg
mov
shr
or
int
lea
dec
aam
mov
and
push
sti
movsl
sub
lds
sbb
or
xchg
addb
in
push
push
pop
mov
aam
inc
cmp
inc
das
out
fwait
imul
sub
jg
lea
subb
jno
int
sub
inc
outsb
inc
xchg
add
fisubl
aam
shrb
mov
loopne
add
dec
jge
rcrb
bound
cmp
loope
popf
out
lcall
repnz
inc
rcrl
repz
leave
sbb
cmpsb
int
mov
pop
cmpsb
mov
cld
xorl
outsl
in
xor
inc
shl
xchg
addb
dec
xchg
xchg
cmpsb
outsb
in
test
adc
aam
mov
int
fisubl
sbb
xchg
xchg
stc
std
les
and
sti
and
push
movsl
push
inc
popa
mov
addb
test
test
pop
notl
int3
ret
xchg
subl
int
iret
and
pop
in
in
jl
mov
or
test
inc
out
decb
pop
xor
iret
pop
aad
cmpsb
pushf
adc
cmp
out
mov
sub
sbbb
mov
pop
cmp
sbb
popf
test
pushf
stos
and
sub
fisubl
add
mov
jae
sub
jnp
jb
adc
int3
nop
fists
and
fnsave
sbb
add
jae
jg
movsb
xchg
lahf
sub
mov
imul
and
out
cli
jno
cmpsl
pop
or
das
adc
cs
jnp
jmp
movsb
rcll
push
sub
jnp
mov
xor
sti
test
outsl
je
jae
mov
and
add
xlat
sub
fsts
pop
jecxz
sbb
mov
inc
js
clc
mov
fidivrl
icebp
pushf
push
insb
jne
ss
in
lods
dec
push
push
jns
inc
lahf
fisubs
scas
cs
push
sub
decb
cmp
lahf
sahf
ljmp
mov
inc
cmp
mov
in
push
mov
jle
rclb
cmp
dec
and
cmpsl
xor
push
jecxz
push
cld
test
out
cltd
jge
cli
jb
mov
stc
mov
cli
cli
fcomps
fs
cmp
jbe
mov
xchg
fwait
lret
leave
loopne
stc
dec
mov
fimuls
lret
rclb
dec
add
adc
xchg
arpl
ret
movsb
fstps
repnz
lds
mov
outsl
dec
jge
bound
inc
outsb
and
addb
mov
push
sbb
xchg
cmp
lods
inc
int3
add
cmp
fstpl
mov
or
mov
repnz
sahf
ljmp
sahf
mov
in
inc
lods
inc
iret
mov
popa
jecxz
mov
xchg
or
dec
inc
neg
ds
pop
cmp
adc
mov
and
and
pop
sub
mov
imul
xor
mov
jb
mov
int
pop
call
test
inc
cmpsl
lret
mov
bound
aaa
add
sub
mov
addr16
and
sti
push
pop
push
psrld
jmp
adc
xor
push
ja
pop
and
inc
inc
scas
aam
push
leave
adc
out
push
adc
test
jmp
int
sub
pop
pop
dec
jae
es
and
outsl
xor
jecxz
pop
cmpsb
insb
xor
rclb
gs
inc
sub
mov
sti
cmpsl
out
xorl
pop
shl
arpl
pop
lahf
mov
fbld
icebp
add
push
icebp
test
test
fxam
cltd
mov
xchg
inc
adc
add
repnz
jno
mov
in
jl
in
push
cwtl
add
subb
bound
test
ljmp
mov
xchg
scas
fdivs
stc
fnstenv
mov
in
mov
cmpsl
in
jnp
test
mov
adc
jg
bound
mov
push
dec
shll
sub
insl
fs
call
pop
ret
fldcw
sub
cli
jae
adc
sbb
mov
add
notl
jns
daa
roll
jnp
xorb
ljmp
arpl
jnp
mov
out
out
mov
inc
push
cmp
or
adc
insl
sbb
push
ret
into
ja
sbb
pop
mov
fnstcw
inc
stos
push
xor
xchg
aad
lahf
jp
out
stos
inc
and
imul
stc
jecxz
jl
xchg
aam
sbb
dec
aad
outsl
in
xchg
jne
or
mov
cmp
inc
cmp
sarb
mov
mov
insb
inc
filds
int
aad
jle
inc
mov
xor
stos
push
sbb
cmpsl
dec
push
shlb
sbbl
stos
mov
inc
push
sub
pusha
mov
add
xor
data16
cmc
scas
dec
push
mov
sbb
jno
sub
cmp
aam
ja
testl
test
aas
jmp
adc
loope
sbb
dec
aas
mov
fnstcw
addb
push
mov
aaa
jae
xor
in
lods
pop
push
int
fldenv
xor
push
mov
xchg
fdiv
js
fnsave
mov
iret
sbbb
push
pop
std
es
repnz
je
pop
movsl
push
cmp
icebp
loope
pop
in
jg
mov
jmp
jbe
call
cmp
push
lret
pop
adc
idivl
scas
test
scas
testb
les
in
fld
mov
xor
iret
pop
test
mov
adc
out
cmp
jg
outsb
jle
rcr
sub
movsl
gs
stc
xchg
insb
pushf
push
into
fwait
insl
jo
icebp
lret
add
sti
cmpsl
mov
stc
sti
inc
ret
jmp
mov
sbb
push
pop
dec
xor
pop
cmp
mov
add
sbb
repnz
jge
cwtl
mov
lock
repnz
hlt
xor
in
addl
sti
dec
sbb
and
jne
dec
adcl
and
outsb
and
inc
test
repnz
cld
xchg
inc
bound
dec
push
xor
jnp
jns
sub
iret
ficoms
dec
adc
imul
popf
data16
into
fwait
out
rolb
les
sbb
dec
jae
popf
idivb
push
push
jns
adc
stc
push
ja
mov
pop
jge
test
test
loopne
fs
dec
lcall
push
or
push
mov
pop
int
cmpsl
sub
mov
xor
push
insb
xchg
mov
pusha
fsubr
test
dec
ror
movsl
mov
or
mov
setb
dec
pop
push
mov
sbb
int
leave
mov
cld
pushf
or
mov
inc
dec
push
pop
loopne
mov
roll
aaa
xchg
nop
popf
addr16
mov
repnz
xor
push
daa
rol
jne
in
inc
and
scas
or
enter
addr16
pop
popf
dec
fwait
loop
cmp
sbb
add
daa
cs
pop
outsl
test
cltd
stos
cmp
push
inc
push
push
inc
aad
xchg
loop
push
inc
jl
jns
mov
mov
iret
sti
adc
push
xchg
sbb
or
fadd
scas
mov
add
icebp
xchg
push
fisubrs
sbb
xchg
mov
sub
div
pop
pop
cmpsl
xchg
mov
mov
cltd
cmpsl
push
fnstcw
ja
cmp
push
cld
sub
lcall
sbb
mov
mov
pushf
test
jg
outsb
ja
mov
imul
das
and
dec
cmp
int
cmpsb
add
jo
int
rcl
in
leave
or
mov
or
les
rorl
sbb
test
xchg
adc
ljmp
in
or
dec
dec
xchg
loopne
and
adc
ljmp
pusha
inc
cmp
ss
mov
jecxz
mov
and
xor
rep
inc
dec
lcall
pusha
sbb
mov
jg
test
or
adc
push
lcall
or
adc
sbb
cltd
ss
sub
faddl
add
pop
insl
adc
jno
mov
or
daa
inc
sbb
fiadds
out
and
hlt
mov
lcall
loop
mov
les
imul
dec
and
jg
xor
movsb
pop
call
lock
dec
sbb
nop
in
aad
sub
pop
mov
cmp
lret
sbb
les
clc
fsubrp
xchg
mov
outsl
adc
adc
cmpsl
imul
sbb
ljmp
out
cmp
ja
je
cmp
push
xlat
pushf
sbb
mov
rclb
jns
push
insb
xchg
cmp
ds
out
dec
push
sbb
push
xchg
je
push
pop
addr16
push
ds
pushf
call
jno
scas
clc
or
mov
jne
outsl
pop
icebp
dec
pushf
popa
xchg
mov
sub
rcrl
xor
leave
fistl
ljmp
loop
mov
repnz
out
and
adc
inc
mov
lret
aad
push
imul
in
mov
sub
push
xor
push
lahf
mov
mov
mov
push
cmp
or
data16
mov
lods
call
fistpl
call
cmc
adc
jo
pop
movsl
stc
sbb
not
daa
lock
int3
mov
adc
insb
mov
or
or
pop
xor
int3
xchg
sahf
cmp
sbb
ss
pop
xchg
hlt
rolb
xlat
pop
jl
jno
sbb
cs
and
subb
xchg
aad
in
xorb
adc
sub
mov
xor
pop
mov
sub
fbld
push
shr
or
push
xor
std
pop
lods
xchg
scas
lods
in
mov
pop
pop
jb
icebp
lea
in
cltd
roll
int
inc
movsl
bound
clc
fidivs
sbb
pop
and
pop
sahf
lret
jge
out
outsb
insb
les
add
je
mov
jnp
push
fucom
in
cmp
and
call
push
adc
cmp
movsl
mov
out
cli
pop
imul
inc
movsl
inc
fisubrs
sub
pop
je
cltd
push
rcl
mov
mov
pop
jnp
sbb
cli
mov
mov
dec
in
nop
mov
adc
cmp
push
cmp
sub
sbb
aaa
mov
or
lret
mov
out
jnp
pop
adc
push
dec
cwtl
push
cmp
pop
iret
rcr
out
mov
rcl
int3
ljmp
cmp
mov
jmp
xor
int3
jb
jl
xchg
and
jmp
adc
cmp
jg
imull
ficoms
cs
sti
repnz
daa
mov
cli
ret
jno
sbb
add
xchg
ja
pusha
mull
jp
dec
cmpsb
or
outsl
inc
data16
push
mov
cmp
lea
mov
dec
push
iret
lea
dec
iret
ret
ss
pusha
mov
mov
dec
test
jno
nop
mov
stos
stos
out
fs
sbb
mov
cwtl
cmp
cmp
inc
sub
adcb
fcomp
xchg
inc
sbb
cld
pop
hlt
leave
sub
imul
cwtl
jecxz
aaa
dec
mov
shlb
aam
push
xor
jno
sub
ss
cmpl
fildl
rcll
popf
cmpsl
pop
xchg
xchg
jb
icebp
push
mov
and
pop
pop
lods
ret
pop
fistps
in
into
ljmp
mov
stos
pop
add
arpl
push
add
cmp
push
push
ljmp
xchg
popa
cltd
adcb
sub
popf
in
and
mov
pop
imul
ret
add
stos
arpl
test
dec
or
add
jg
push
xchg
les
std
mov
sahf
cs
xchg
lret
cs
gs
dec
fmuls
sub
jmp
push
jp
aad
js
mov
movsb
mov
aaa
cmp
inc
loop
outsl
icebp
lret
imul
in
out
icebp
inc
sbb
xor
or
jecxz
adc
mov
sbb
mov
cmpsb
loopne
dec
and
fsubs
adc
cli
jo
mov
movsl
mov
stos
clc
xor
stos
rcrl
and
scas
cli
mov
push
mov
adc
sti
jge
mov
cs
sub
cwtl
xor
pushf
xor
xor
pop
shlb
add
std
add
push
mov
mov
inc
add
pop
fwait
mov
stos
add
or
nop
mov
nop
repnz
xor
in
je
scas
xor
repz
aam
test
insb
in
and
xorb
movsb
in
xorl
fstpt
or
aam
ret
sbb
es
in
aas
push
into
inc
call
stos
mov
sub
das
mov
mov
imul
jne
pop
cmp
ss
push
aad
rol
cwtl
mov
cmp
cmpsl
dec
pushf
mov
ret
inc
sti
mov
fwait
pusha
test
jo
mov
push
lods
ss
mov
xchg
dec
into
jg
shlb
fildll
mov
cld
fs
or
or
pop
sbb
jle
add
pop
xchg
xchg
and
cmp
inc
jmp
jl
push
sbb
pusha
mov
int
mov
sbb
adc
xchg
or
mov
outsl
lea
cmpsb
lcall
inc
add
divl
ss
sub
sub
jo
and
das
push
xor
in
popf
rcll
xchg
mov
fwait
mov
xchg
fsubs
lahf
pop
cmpsl
int
sub
adc
jnp
sbb
movsl
and
notl
xchg
je
divl
iret
mov
test
int
lahf
pop
xor
push
loopne
jecxz
lahf
push
frstor
call
fisttps
ret
xor
sbb
lods
mov
dec
orb
pop
sub
xchg
and
sbbb
arpl
in
mov
and
cld
xorb
rcrb
push
add
adc
arpl
mov
clc
pop
and
cmpsl
mov
inc
scas
lock
js
lret
adc
sbb
dec
inc
mov
fsubl
mov
lods
pop
adc
in
fucomip
lret
repnz
in
inc
lea
xchg
push
push
mov
sbb
es
xor
xchg
jecxz
ficompl
and
nop
repz
xor
lds
cltd
pop
outsb
scas
pop
xor
outsb
loopne
out
lcall
movsb
imul
and
xor
out
andb
out
out
fdivrp
insl
ja
jmp
inc
xor
adc
cmp
stc
pop
ret
out
xchg
xchg
mov
loope
cmc
jmp
jno
in
lock
adc
sbb
mov
push
ds
jmp
pop
jbe
dec
repz
mulb
jmp
int
stc
push
in
fildl
jl
pop
add
add
es
sarb
push
add
repz
xor
jl
sbb
incb
clc
int
mov
je
mov
xchg
jecxz
xchg
neg
xor
loopne
test
outsl
jne
dec
lea
mov
out
test
xor
repz
bound
sbb
lods
popf
pop
aas
pop
or
adc
outsl
cmpl
fldenv
pusha
push
jmp
sbb
mov
xchg
rclb
jg
or
mov
add
outsl
icebp
or
pop
inc
pushf
inc
mov
decl
rcr
mov
dec
rol
ja
shl
fnstsw
popf
mov
xchg
gs
jp
adc
loope
push
notb
push
inc
je
or
test
inc
out
or
mov
mov
loopne
ljmp
mov
mov
shll
sub
jns
int
pop
push
add
ret
xchg
mov
sub
xor
test
push
dec
mov
add
mov
adc
fsubs
sbb
rcll
stc
jle
je
stos
xchg
sti
dec
sbb
pop
ret
and
les
ja
or
add
mov
pop
in
into
cmp
jno
in
pop
mov
pusha
cltd
mul
repz
arpl
dec
test
pop
cmpsl
jmp
nop
mov
rcrb
gs
leave
jns
mov
jmp
xor
pop
std
inc
add
jmp
adc
inc
mov
mov
push
cmpsb
loop
inc
outsl
or
push
hlt
jle
and
movsb
sbbb
sahf
mov
adcb
xor
je
dec
lahf
mov
insl
pusha
mov
ret
mov
xchg
das
mov
in
and
cmc
sahf
inc
mov
xor
out
test
repnz
pop
adc
sub
es
mov
xor
fs
mov
pop
inc
jle
andl
lcall
jmp
mov
inc
add
iret
addr16
inc
mov
xchg
jge
aas
imul
mov
mov
lret
sub
push
scas
outsb
int3
xlat
mov
adc
push
je
aas
scas
in
and
loope
adc
and
xor
or
sar
movsl
fwait
cs
or
mov
inc
dec
andb
jle
idivb
iret
inc
jecxz
lret
test
std
insb
popf
or
icebp
push
cmpsb
fisttps
xor
loope
leave
insb
cwtl
xlat
imul
dec
test
pop
jne
ss
push
sahf
inc
fists
cmpsb
fcomps
xchg
andl
pushl
setge
fcoml
lock
ja
jns
movsl
cmp
movsl
pop
subb
and
cmovg
inc
cmp
test
icebp
xchg
pop
mov
and
mov
sub
mov
pushf
cltd
ret
push
sarb
cmpsb
arpl
sbb
jae
daa
dec
or
xor
movsb
sub
imul
lret
out
cmp
pop
sbb
sub
cwtl
stos
or
mov
dec
jno
rolb
dec
pop
push
cld
out
fdivl
and
and
int3
adc
sbb
outsb
cmp
dec
and
dec
sub
mov
inc
jmp
lods
fwait
dec
mov
inc
sbb
pop
mov
push
fildll
sub
cmpsl
and
sti
dec
xor
cmc
lods
jns,pt
idiv
push
fdivrs
adc
rcrb
xchg
jae
xchg
bound
stos
test
pop
fsubl
pop
dec
and
mov
add
or
jp
addr16
mov
cmp
call
mov
jg
mov
inc
fwait
and
sarl
imul
or
mov
lds
jno
mov
repnz
inc
in
clc
mov
orb
ljmp
mov
pop
jmp
add
jno
adc
mov
sti
push
imul
das
jne
insb
repz
pop
ret
or
mov
add
mov
jmp
cmp
sbb
and
test
dec
push
aas
enter
and
repz
dec
icebp
fidivrl
mov
mov
out
inc
icebp
adc
mov
add
test
fwait
pop
mov
arpl
cmc
sarl
pusha
dec
push
cmp
xor
data16
mov
stos
mov
sub
mov
orl
popa
mov
aam
push
push
stc
pushf
sub
dec
xchg
xor
imull
int3
scas
jae
push
mulb
sbb
ljmp
push
jns
cltd
add
aaa
sti
stos
ss
imul
xor
adc
fimuls
ja
xchg
mov
pop
pop
cld
and
lret
aad
dec
lds
gs
mov
pop
stos
jmp
inc
mov
das
inc
inc
imul
lds
nop
mov
cmp
cmpsb
test
icebp
clc
xchg
sub
mov
out
dec
lds
add
xor
ljmp
push
lods
test
xor
mov
mov
add
pop
jnp
jmp
loope
mov
dec
fwait
cmpsl
test
jae
enter
loop
test
jo
adc
jmp
pop
out
and
xchg
sahf
xlat
push
imul
jmp
shl
mov
and
shlb
push
fadds
inc
cmp
lods
popf
dec
int
cld
and
rorl
push
mov
je
adc
mov
fucomip
mov
outsb
mov
xchg
gs
xor
and
daa
in
push
out
lahf
jmp
ja
in
in
and
push
aam
into
shll
out
fsts
scas
mov
inc
push
loope
jmp
adc
inc
cwtl
adc
lret
cmpsl
in
xbegin
or
mov
cmpsb
popf
test
pop
adc
add
mov
and
adc
jl
data16
inc
xor
mov
daa
add
hlt
adc
sub
push
popf
pushl
dec
push
jne
add
xchg
adc
icebp
into
pop
inc
or
xchg
ret
pop
sbb
or
and
pop
out
jae
lock
fimull
mov
push
imul
xchg
jle
movsb
xchg
push
xor
call
xchg
add
push
mov
scas
scas
sub
shrl
xchg
push
pop
inc
sub
push
lds
dec
pop
mov
out
sub
imul
sub
sti
test
cmc
dec
adc
lock
and
adc
test
mov
or
jmp
add
jno
push
mov
adc
jg
jle
or
adcl
fwait
sti
pop
lcall
jge
test
mov
hlt
scas
insb
inc
or
mov
aaa
out
sub
ret
dec
jg
and
mov
mov
and
ljmp
in
movsl
nop
xchg
pop
fsubs
pop
or
pop
rolb
pop
jne
lock
les
enter
shl
and
add
jo
pop
cmp
in
jge
pop
scas
pop
test
xor
dec
aam
filds
sub
xor
arpl
pop
inc
pushl
inc
push
push
push
mov
cs
pop
in
loope
cmp
dec
or
mov
dec
movsb
jmp
addb
jno
mov
popf
and
mov
pop
xor
cmp
in
addr16
jns
aam
fcomps
lods
push
inc
leave
les
mov
shll
xchg
lahf
adc
add
xor
mov
popa
sbb
ret
lahf
pop
ja
mov
sahf
cld
jge
out
cli
sbb
adc
push
out
adc
cltd
or
xor
sub
mov
shrb
pop
fidivl
iret
fs
stc
pop
jbe
mov
sub
cmpsb
inc
outsl
inc
pop
fmuls
scas
xor
leave
push
sub
sahf
ljmp
mov
ja
cmc
out
clc
xor
cmp
mov
loopne
outsl
mov
inc
in
and
lock
mov
mov
adc
mov
aam
dec
jle
fs
inc
pop
arpl
adc
mov
mov
xor
mov
dec
push
int
adc
add
xor
dec
add
out
mov
shrb
adc
rol
pop
xchg
or
xor
push
inc
inc
mov
fsubrs
jne
in
mov
fldcw
gs
inc
xchg
scas
dec
movsl
dec
push
outsb
jl
inc
or
mov
push
arpl
pushf
stos
imul
xchg
mov
movsb
fsts
pushl
cltd
out
out
in
xlat
push
lahf
imul
cmp
fwait
pop
dec
jmp
loope
add
adc
jae
pop
mov
imul
mov
push
sti
lods
mov
lods
add
test
sub
and
add
ljmp
pop
and
in
ss
mov
push
or
clc
jle
add
nop
fsubs
jle
add
xor
clc
out
shrl
mov
subb
or
push
repnz
mov
setnp
lret
adc
nop
pusha
idiv
test
sbb
add
push
add
dec
sbb
dec
dec
mov
adc
out
pop
jb
rcl
mov
xchg
test
push
sbb
scas
scas
rcll
lock
in
xor
in
repz
into
outsb
add
out
cmp
pop
jb
cmp
gs
push
push
or
sbb
int3
lods
or
sbb
or
je
push
enter
sti
mov
fucom
or
xchg
xchg
loop
pop
or
mov
shrl
or
or
sbb
adc
cltd
mov
sub
jmp
push
push
jge
push
add
adc
inc
dec
xchg
and
push
jmp
ffreep
sub
lret
dec
cmp
cmp
push
insl
orb
dec
sub
iret
in
in
mov
mov
lret
pop
add
subb
sub
cmp
mov
loop
mov
xchg
jne
mov
gs
in
xlat
xchg
fs
test
jmp
fcom
push
xchg
jae
inc
push
push
inc
incb
adc
jb
ret
inc
dec
push
int
inc
and
repnz
mov
add
adc
ror
mov
iret
lahf
std
fld
call
cmc
dec
maskmovq
notl
cmp
rcrb
mov
and
loop
nop
jbe
pop
scas
jne
aaa
outsl
popf
cs
pop
pop
cltd
and
mov
sarb
mov
insl
sbb
add
inc
add
mov
jl
add
mov
lock
mov
stc
sarl
cmp
jl
xor
leave
sbb
mov
bound
jae
sbb
and
fidivs
lods
scas
xlat
stos
shrb
lea
js
xlat
lret
sub
std
dec
jo
xor
and
sbb
jp
xlat
scas
xchg
stc
dec
xorl
pop
pop
dec
jmp
stos
inc
ja
inc
mov
mov
xchg
fistl
cs
lea
jle
and
or
roll
fisubs
adc
xchg
rorb
addb
ret
movsl
push
xchg
fnsave
rcrl
xchg
out
or
mov
fdivrl
out
ficomps
xchg
dec
insl
addr16
sub
and
mov
and
sub
scas
mov
nop
push
pusha
mov
mov
in
mov
jae
ja
cmc
mov
iret
fmuls
dec
fidivrs
inc
in
xor
out
and
jmp
push
sbb
cli
cmp
test
out
or
mov
pop
test
subl
in
mov
fstpl
mov
cmc
ret
int
iret
out
jo
jmp
adc
sar
and
or
aaa
mov
repnz
in
cmp
jb
mov
sub
rcrl
mov
mov
xchg
loope
jg
jae
enter
cltd
pop
in
addl
out
mov
fldenv
aaa
xor
hlt
cmpsl
sti
mov
shrl
jp
mov
mov
into
xchg
loopne
mov
mov
adc
adc
dec
push
shrl
or
dec
cmpsl
pop
cmp
push
xchg
out
fsts
pop
in
mov
bound
push
mov
jmp
xchg
in
dec
test
gs
mov
pop
push
repnz
mov
fmulp
hlt
subb
push
push
add
ret
mov
cmc
and
popa
mov
test
loop
ret
xchg
hlt
mov
loop
cmp
sahf
cmpsl
dec
mov
cmp
dec
lret
movsl
pusha
pop
rorl
add
outsb
adc
movsb
pop
add
add
lret
inc
push
loope
adc
or
shl
out
adc
push
jecxz
lcall
pop
push
or
mov
daa
xlat
int
mov
fcomps
inc
xchg
stc
movsl
pop
inc
popa
loop
xchg
andb
or
jp
jmp
out
xor
stc
jnp
pushf
cwtl
jae
mov
pop
std
fistpl
fpatan
cmp
out
flds
mov
mov
lods
popa
out
cmp
out
pop
adc
dec
dec
xchg
adc
repz
int
xor
movsb
cwtl
jge
lock
bound
and
sbb
jmp
div
pop
testb
jae
or
xchg
pop
xchg
cmpsb
shlb
and
insb
mov
fcoms
jns
inc
call
adc
lahf
mov
movsl
adc
notb
ret
and
data16
in
inc
dec
jb
movsl
hlt
or
pushf
and
mov
jmp
push
push
imul
mov
popf
push
insl
add
mov
lods
rcrb
push
push
jle
push
mov
std
loope
pop
mov
sbb
xchg
mov
iret
mov
out
in
cwtl
popf
xchg
daa
xchg
jp
jb
jmp
jmp
loop
inc
mov
pop
xor
xchg
cld
add
pop
jne
ja
popa
lret
mov
into
subb
lret
pop
xchg
mov
fwait
addl
mov
jb
nop
rorb
add
test
mov
xlat
mov
xor
adc
hlt
mov
and
stos
mov
sbb
xchg
mov
sub
out
loope
popa
sbb
pusha
aaa
mov
push
jg
mov
adc
mov
jne
xor
and
enter
or
stos
scas
cli
dec
sub
in
test
les
arpl
dec
arpl
rcll
sti
add
mov
adc
push
bnd
cmp
pop
orb
adc
testb
popa
lret
xorl
out
aad
repnz
test
test
mov
scas
add
cmp
movl
pop
lcall
xor
mov
mov
jmp
xlat
enter
pop
sub
loop
sbb
insb
and
addl
cld
inc
pop
jns
int
mov
sbb
jae
lds
cmpsb
pop
adc
test
mov
add
sub
aad
movsl
push
xorb
gs
je
adcb
adcl
xchg
mov
enter
test
or
cld
xor
test
xor
cmp
push
pusha
xor
xor
das
inc
in
mov
pop
in
sub
mov
sub
mov
lock
pop
push
mov
jp
stos
lret
shrb
insl
lahf
cmp
std
pop
cmp
pop
add
sub
mov
imul
jns
shl
pushf
pop
in
add
je
ljmp
outsb
jmp
fwait
pop
and
shrb
jl
movsb
add
mov
mov
aaa
pusha
jnp
lods
mov
add
imul
lret
inc
lods
shrl
pop
mov
pop
call
xchg
pop
fisubl
mov
cli
mov
xchg
and
mov
xchg
xchg
sub
xchg
push
lods
push
inc
mov
gs
pop
movsb
xlat
sbb
test
pop
pop
sti
cmp
push
imul
ja
jb
into
inc
shll
jae
fwait
mov
movsl
push
cld
rolb
aaa
jl
sbb
add
sarb
add
jmp
dec
pop
out
adc
adc
das
adc
mov
cmp
xor
aas
in
or
push
sbb
dec
lret
mov
pop
sbb
stos
jnp
fabs
dec
lods
pop
adc
fists
ljmp
xchg
cmp
xchg
mov
push
sbb
pop
shrb
or
mov
pop
repnz
mov
imul
dec
xchg
aas
rep
jle
ffreep
aas
dec
mov
lock
cmp
jl
jnp
test
orl
mov
fs
pop
mov
psubq
xor
aam
cmp
data16
mov
out
xchg
pop
jp
or
or
dec
loope
lahf
cs
imulb
js
mov
sbb
pop
iret
push
mov
cmpsl
js
rcl
mov
or
bound
push
cmp
aad
xchg
in
xor
roll
subb
outsl
sub
xchg
sub
mov
xchg
cli
mov
add
filds
jmp
mov
push
arpl
sub
sbb
bound
enter
gs
icebp
stos
cmpsb
mov
repnz
cmpsb
out
movsl
xor
bound
mov
sbb
mov
jge
pusha
out
jno
lds
pop
cwtl
push
jnp
fidivs
mov
mov
or
cwtl
out
int
mulb
repnz
and
adc
andl
jae
icebp
cmpsb
jl
mov
je
arpl
add
lret
inc
repnz
mov
jbe
cmp
jmp
adcl
xorb
idivl
iret
into
jmp
mov
popf
jecxz
inc
in
icebp
inc
out
cltd
cld
sub
cmc
fisttpll
movsb
inc
loope
sahf
xchg
loop
jmp
adc
aas
mov
cmp
dec
jo
fs
dec
cmp
adc
fimull
out
xorl
add
xchg
mov
stos
mov
or
addb
cli
push
xchg
or
jmp
sub
inc
mov
xor
ljmp
sub
hlt
int
jg
cltd
decb
cmpsl
or
sti
jae
mov
rolb
cmpsb
pop
add
lret
sbb
in
test
or
and
int
cmp
lret
inc
ds
pop
sbb
jno
stos
pop
sbb
push
addb
lea
lock
mov
fnstsw
adc
dec
loop
mov
xor
mov
pop
neg
in
insl
pop
fistpll
jle
test
mov
in
adc
test
repz
cmp
out
adcl
xchg
sbbb
es
dec
add
mov
test
movhps
push
sbb
loopne
mov
jnp
mov
movsb
lcall
mov
dec
pop
inc
mov
pop
enter
mov
aad
inc
movsb
jl
cmpsl
pop
jecxz
stc
ja
xchg
pop
aaa
repz
mov
mov
addr16
jp
pop
repnz
mov
xor
mov
in
adc
rcll
cltd
idivb
pop
xchg
and
repnz
add
cmpsb
xlat
repnz
rorl
and
ror
stc
adc
adcl
sub
cmpsb
testl
gs
clc
sbb
ds
xor
xchg
cmpl
pop
xor
mov
sti
insl
jl
insb
xchg
ja
or
xchg
lret
pusha
hlt
repnz
sbb
clc
push
pusha
insb
sbb
insl
daa
in
xchg
in
add
dec
mov
add
adcl
add
into
outsb
and
repz
outsb
dec
cmp
and
scas
mov
repz
mov
jb
les
push
push
adc
add
pop
xorl
aaa
xor
jl
inc
out
pop
xorb
fidivs
dec
mov
fsts
jne
add
mov
in
out
sarl
bound
loop
xor
cltd
popa
divb
out
ds
sarl
gs
mov
or
dec
rolb
mov
lods
leave
lds
mov
inc
outsb
pop
enter
or
mov
xchg
push
ret
lods
dec
dec
orl
push
in
loop
sbb
nop
sbb
dec
in
push
jbe
add
sbb
pop
test
sub
mov
mov
cli
pop
cmp
shrb
mov
cmpsl
adc
test
adc
mov
mov
repz
mov
push
pop
sub
daa
inc
aad
and
push
stc
into
pop
repnz
sub
test
xor
imul
cmp
sub
outsl
cltd
scas
inc
inc
scas
test
push
and
lret
inc
enter
mov
sbb
not
in
clc
inc
rcrl
mov
lock
arpl
loop
sub
pop
cltd
dec
mov
xor
mov
insl
mov
add
je
mov
fldt
jmp
movsl
mov
push
sub
push
jb
fildl
mov
xchg
add
push
hlt
add
rclb
xor
rcll
add
jmp
mov
loope
div
mov
mov
fsubl
add
jb
fsubrl
test
lods
popf
rolb
push
sub
in
pop
adc
xor
imul
xor
and
mov
jg
std
jne
and
mov
aaa
mov
xor
adc
push
mov
pop
xchg
lret
jg
movsb
call
cmpsb
xchg
iret
pop
test
test
dec
mov
or
or
stc
shlb
cmp
jnp
sub
add
out
jl
mov
dec
mov
push
dec
push
int
pop
testb
push
mov
pop
ss
dec
cmp
xchg
gs
mov
jb
incb
xchg
les
adc
push
add
jmp
stc
inc
loope
sbb
inc
xchg
push
pop
xchg
pop
into
cmp
jns
and
roll
mov
add
mov
sbb
lret
sbb
jmp
dec
or
dec
movsb
lea
lahf
push
test
adc
lods
and
out
xor
xor
mov
in
aaa
dec
ljmp
dec
adc
jb
test
loope
insl
fdiv
outsl
sub
pop
mov
mov
pop
cs
data16
test
xchg
inc
push
inc
jne
xchg
cmp
jo
mov
dec
xor
and
add
lret
cmc
shlb
out
push
sub
and
lea
stos
fimuls
aam
movsl
outsl
dec
jno
or
mov
fwait
xchg
out
adc
hlt
js
dec
mov
cmp
std
mov
mov
in
mov
lret
outsb
xor
dec
test
pop
jmp
lods
sub
cmp
xor
pop
js
sbb
outsb
jno
mov
dec
sbb
cli
repnz
sbb
les
adc
jmp
dec
adc
arpl
inc
xchg
into
dec
xor
aaa
mov
nop
in
or
inc
or
pop
lret
data16
pop
and
push
jmp
jmp
pop
scas
adc
inc
in
dec
jl
lock
imul
inc
icebp
jmp
mov
jmp
shrl
stos
sbb
or
filds
cmp
cltd
fistpll
add
shll
xor
fst
decb
sti
orb
sbb
dec
push
mov
push
aad
fscale
or
push
sub
popa
jp
outsl
cmp
test
sub
mov
and
jns
fnsave
sbb
je
dec
call
jae
fdivrl
push
dec
sahf
leave
jnp
jp
cmp
or
mov
ds
std
psubsw
test
mov
ja
sub
imul
inc
lcall
push
int
lods
dec
mov
das
jmp
push
lret
dec
sub
xchg
sub
mov
hlt
push
and
fldcw
dec
or
clc
mov
pop
inc
push
jae
mov
push
xor
xchg
pop
popa
test
inc
mov
ficoms
pop
cmp
push
sub
mov
aad
mov
ljmp
cmp
fldl
jnp,pt
movsl
push
inc
popa
inc
das
pop
inc
faddl
lret
pop
fsubl
stos
out
inc
inc
dec
subl
jae
add
insb
pop
push
mov
loopne
in
add
mov
scas
out
into
hlt
adc
jp
or
xchg
pop
sbb
es
mov
shlb
sub
ret
mov
pop
push
out
mov
xor
push
inc
ret
mov
jl
pop
pop
imul
negl
rcll
fldcw
sahf
imul
lock
ja
shrb
mov
ljmp
adc
or
mov
mov
stos
in
cmp
into
jb
add
push
sbb
mov
add
push
pushf
imul
mov
inc
jle
jae
and
std
xor
xor
push
scas
in
push
pop
lret
pop
push
or
push
repz
mov
mov
mov
and
fwait
xchg
push
movsb
pop
adc
pop
xlat
pusha
imul
cmp
les
push
adc
xchg
test
sbb
ljmp
sbb
or
push
or
pusha
dec
dec
xchg
aam
fldcw
and
jb
dec
js
dec
mov
lahf
mov
jns
mov
cli
cmp
xchg
jbe
mov
pop
fcmovnu
jo
iret
and
nop
or
and
pop
pop
dec
out
jecxz
popf
jmp
add
popf
insb
jns
lahf
inc
jecxz
mov
cmp
xlat
sahf
ds
pushf
xor
pop
pop
xor
pop
cmp
popf
pop
ds
xlat
mov
lea
bound
idiv
mov
cmp
bound
enter
out
mov
push
cmc
pop
inc
fimull
push
jb
lahf
xor
pop
jne
js
gs
repz
jp
je
imul
sub
test
inc
fbld
jp
jmp
shr
sbb
push
int3
or
lds
in
dec
cmpsb
stos
stc
gs
jl
sar
sahf
push
sbb
into
xchg
xchg
xchg
mov
cmc
nop
jnp
cmpsb
cmp
or
inc
out
mov
popa
aam
stos
pop
jecxz
inc
jl
cli
data16
int3
aaa
push
jbe
mov
int3
mov
sub
out
inc
cmc
rcr
aaa
push
push
mov
push
dec
ljmp
jbe
mov
push
xchg
adc
insb
ja
adc
repz
mov
nop
mov
scas
push
sub
xor
pushf
lds
mov
shlb
in
orb
in
out
daa
fdiv
cmpsb
aam
push
sub
fs
popf
mov
rcll
pop
leave
std
in
fisttps
mov
or
adc
cmp
jmp
sub
and
push
xorb
pop
loopne,pt
rcr
adc
lcall
ljmp
mov
mov
mov
popf
sbb
xorl
jmp
rorl
mov
push
xchg
cltd
les
jecxz
dec
movsl
mov
clc
jns
adc
sbb
shrl
xchg
mov
add
data16
add
pop
xchg
jp
pop
and
adc
add
sbb
sbbb
jle
fimull
inc
inc
test
jb
xor
sti
mov
sub
inc
icebp
lahf
sbb
jecxz
aad
std
inc
jmp
pop
mov
xor
out
mov
rolb
mov
add
push
aas
outsl
stc
push
jns
mov
add
call
shll
or
pop
into
cwtl
adc
push
lret
adc
inc
dec
mov
ja
shrb
cmpsl
xor
out
cmp
push
cmp
in
push
out
inc
jo
test
call
mov
dec
add
aam
xlat
jecxz
jecxz
xchg
in
insb
inc
or
jne
leavew
push
loop
mov
xchg
adc
js
test
popf
inc
jnp
or
test
sbb
mov
test
cli
xchg
outsl
pop
insb
xchg
ret
xchg
xor
cli
shl
or
xchg
nop
sbb
adc
stos
cmp
fs
mov
add
aas
outsl
mov
in
sub
xchg
aaa
lahf
fimuls
dec
mov
inc
sbb
int
mov
inc
mov
push
adc
loopne
fldcw
imul
enter
jo
pop
dec
mov
sbb
js
fsubrl
push
stc
sbbl
loope
test
or
xchg
ret
test
xchg
test
sbb
pop
enter
arpl
out
sub
sbb
push
adc
outsb
js
int
pushf
mov
aas
out
sahf
inc
cwtl
ret
je
test
mov
imul
pop
push
pop
es
sub
out
mov
push
mov
fildll
and
ss
push
insl
imul
add
ds
lods
std
fildl
pop
fsubr
or
mov
mov
fcompl
movsb
add
push
arpl
ds
movsb
int
ljmp
cmp
mov
and
fldenv
in
dec
inc
addr16
sbb
mov
std
hlt
sbb
ret
mov
js
iret
cmc
movsl
fdivrs
cmp
xchg
arpl
push
je
scas
push
mov
leave
jl
iret
out
pop
cmpsb
test
dec
mov
push
xchg
lea
mov
inc
adc
fs
ffreep
pop
push
stos
sbb
or
xor
push
shll
mov
in
inc
test
outsl
dec
mov
popa
cmpsb
xchg
and
les
pop
jle
or
dec
mov
mov
xchg
aaa
sub
cld
inc
cmp
jns
jns
daa
in
int3
mov
fcompl
fnstenv
enter
frstor
les
adc
int3
mov
or
ret
pop
adc
outsb
xchg
push
sbb
push
nop
adc
rcrb
or
and
int
inc
mov
cmpsb
sub
mov
pusha
mov
movsl
int
shll
aad
and
inc
rcll
mov
jecxz
leave
mov
jp
scas
jg
stos
ret
mov
hlt
push
jne
fstl
pop
imul
popa
fisttpll
inc
movsb
lahf
lahf
inc
mov
out
push
adc
call
and
fsubl
dec
mov
jb
fs
push
jmp
subb
mov
mov
mov
scas
repz
hlt
push
push
pop
je
dec
insl
stos
cmp
pop
sbb
mov
out
insl
adc
xchg
xor
lock
hlt
mov
xor
popf
enter
mov
xor
outsb
scas
mov
jne
sbb
int
adc
aad
mov
xchg
cs
paddw
xchg
and
mov
pop
pop
sbb
popa
rorl
push
mov
das
dec
sbb
mov
inc
push
add
xor
inc
cs
js
xchg
cmp
stos
pop
pushf
insl
mov
lahf
inc
jg
xlat
xchg
andb
lock
cmpsl
out
or
mov
mov
pop
cmpb
lods
lcall
cmp
in
xchg
mov
mov
jbe
in
sbb
adc
mov
xchg
neg
mov
xchg
rcl
push
mov
jae
testl
outsl
shrl
xchg
push
adc
rcrl
fs
pushl
inc
pop
pcmpeqb
ret
ret
cmc
das
mov
fdivrs
movsb
mov
jmp
pop
xchg
stc
or
push
inc
scas
dec
sbb
push
push
popf
push
xchg
out
cli
dec
cmp
jge
outsb
adc
mov
bound
xchg
cmp
cmp
rcrb
xchg
inc
xchg
push
pavgw
stos
mov
cmpsl
fmul
push
mov
js
jmp
xchg
mov
imul
pop
repnz
dec
mov
icebp
movsl
xchg
les
pop
push
pusha
sbb
out
pop
sub
shlb
sbbl
mov
lock
subl
pop
sbbb
cld
outsl
add
xchg
jle
rolb
jnp
lcall
lods
je
xchg
mov
sub
cvtps2pd
nop
pop
roll
dec
or
popa
inc
push
out
lret
stc
clc
fstpt
mov
jne
pop
dec
lock
jb
int
inc
rolb
push
cmpsl
ret
jne
fistl
fnstcw
sbb
jle
adc
pop
pop
mov
repnz
stos
das
or
nop
mov
mov
mov
mov
inc
xchg
js
sub
je
jmp
add
scas
push
and
ret
ret
add
mov
lods
sbb
cmpsw
add
stos
and
pop
leave
notl
mov
mov
cli
or
nop
xchg
pop
into
mov
cmp
or
mov
xor
pop
xchg
inc
sbb
in
mov
icebp
xchg
out
xchg
push
mov
xlat
ds
fwait
push
cmp
inc
push
or
inc
shlb
mov
sahf
rcll
call
xlat
pop
pop
sbb
les
pop
addr16
inc
sbb
js
add
xchg
pop
daa
sahf
fucomi
dec
int
int3
imul
dec
adc
js
xchg
adc
aas
ss
andps
fiaddl
mov
xchg
ret
sbb
add
les
and
push
jmp
mov
sbb
sbb
arpl
iret
shrb
add
mov
out
insb
daa
mov
mov
out
enter
cmp
fmull
in
test
mov
cmp
and
mov
data16
push
or
pop
xor
push
adc
lea
push
test
mov
xchg
adc
or
mov
add
or
mov
repz
cwtl
js
scas
test
leave
daa
push
roll
push
inc
mov
pmulhuw
pop
mov
add
jne
test
or
out
shld
xchg
stc
hlt
push
mov
adc
cmp
aaa
lock
fstl
leave
fdivrl
js
adc
idiv
lret
mov
jmp
addr16
mov
adc
inc
insb
sbb
pop
flds
ljmp
push
or
insb
sbb
loop
lock
push
dec
cld
sbb
lcall
test
push
insb
inc
xor
ror
pop
outsl
ja
in
or
js
sbb
mov
mov
data16
loope
fcomps
push
cli
adc
enter
fs
pop
les
cmpl
push
xor
xor
dec
adc
xor
adc
xchg
jb
dec
std
dec
xor
ss
loop
fidivl
in
mov
mov
jb
rorl
mov
cmp
aad
sbb
aaa
loope
xchg
imul
mov
fwait
push
pop
and
das
shrl
les
xor
fwait
dec
dec
ret
mov
cmp
push
and
cmp
or
stos
or
leave
popf
fisttpll
stc
or
inc
out
aaa
sub
sbb
inc
lret
sub
pop
xchg
addr16
sbb
rol
inc
mov
or
push
cld
xorl
pop
mov
in
mov
cmc
pop
cmp
cli
das
icebp
cwtl
fdivrl
push
adc
jb
sbb
lods
orl
jae
shrl
inc
inc
mov
movsb
mov
cltd
pusha
fldenv
aas
scas
ja
inc
or
jecxz
adc
mov
mov
icebp
adc
cmp
loope
mov
dec
xchg
jecxz,pt
stc
inc
sbb
push
inc
mov
bound
inc
cltd
int
lea
push
lret
ds
inc
push
inc
int
lock
or
and
sub
cmp
mov
subl
loopne
lock
push
mov
rcrl
jnp
push
inc
repz
cmp
andps
cmp
sub
pop
addr16
push
in
nop
mov
pop
add
addr16
js
add
test
fstl
enter
imul
jb
adc
test
xor
into
mov
outsl
mov
add
dec
imul
or
mov
or
inc
pop
inc
sbb
mov
lret
fwait
push
and
inc
mov
pusha
mov
scas
mov
adc
jmp
mov
cli
cld
xor
xchg
xchg
pop
scas
daa
cmp
xchg
out
les
jmp
jmp
jecxz
iret
jno
and
ljmp
cli
pop
mov
cmovno
das
ret
iret
movsb
ss
add
pop
pop
cmpb
sarb
rclb
xor
xchg
lds
mov
jne
aam
cmpl
xor
or
movsb
add
nop
mov
cmpsl
in
cli
sub
or
pop
cmpsl
rcrl
imul
stos
cwtl
xor
mov
popf
test
cmp
cmp
inc
fldl
mov
mov
or
rcr
loope
cmp
push
xchg
lahf
sub
addr16
fldt
hlt
dec
loope
push
xor
ljmp
popa
ret
jge
iret
jp
mov
int
mov
stos
imul
stos
stos
leave
mov
testb
jns
repz
bound
into
nop
imul
or
lret
pop
ljmp
mov
daa
jb
or
ret
rcll
sti
cmp
mov
xchg
movsl
insb
popa
push
sbb
sub
std
jb
imul
mov
jae
mov
sbb
push
daa
xchg
ds
dec
clc
loopne
cld
jmp
or
mov
aad
icebp
ret
fwait
push
cmc
dec
jmp
xor
jnp
imul
sahf
loopne
inc
loope
enter
cmp
arpl
adc
lcall
ja
xor
das
push
and
leave
stos
cmp
mov
rcrb
cmp
sub
or
pop
dec
aad
ja
or
inc
cli
cwtl
inc
out
sub
xchg
xchg
pop
daa
or
loope
dec
mov
vaddsubpd
sar
fsubp
and
jno
adc
mov
jmp
rolb
ss
ja
loope
gs
xor
pusha
add
sub
in
cwtl
shlb
pop
shl
hlt
push
xchg
inc
jecxz
sub
mov
xor
mov
adc
inc
mov
dec
xchg
pusha
adc
jge
inc
cltd
xchg
mov
ret
push
pop
xchg
in
loop
data16
pushf
dec
sub
je
fldcw
cwtl
shlb
sub
jns
call
and
push
xchg
mov
repnz
test
fwait
inc
negb
xchg
mov
hlt
xor
mov
push
lahf
sahf
pop
insl
mov
scas
jo
sub
ljmp
sub
xchg
mov
push
lods
xchg
ficompl
dec
jbe
movb
out
idiv
cmpl
sub
pop
into
inc
fimull
rol
ficompl
and
push
inc
and
popf
icebp
pop
push
addr16
dec
push
ret
push
movsl
adc
scas
cmpsl
arpl
js
adc
and
pop
sbb
push
bound
out
jg
pop
int
push
fiaddl
add
jecxz
xchg
push
fisubs
loopne
or
mov
dec
call
bound
sub
enter
call
sbb
or
int3
dec
call
call
vmaxps
cli
mov
lods
dec
xor
mov
in
mov
cmp
push
jne
adc
fdivl
jge
add
add
dec
int3
mov
dec
loope
sub
lret
and
push
andl
sbb
adc
jg
jns
jl
xchg
jno
test
addr16
loop
and
lods
pop
sub
insb
sbb
std
cmp
adc
sub
inc
iret
mov
cli
jne
mov
jnp
or
cltd
imul
pop
sbb
ljmp
inc
outsb
iret
push
mov
pop
pop
mov
sub
mov
mov
mov
and
ljmp
movsb
push
lods
dec
stc
pop
mov
jb
push
push
daa
std
mov
cmc
in
push
mov
mov
ja
push
imul
add
in
lret
push
pop
popa
cmp
push
jnp
inc
mov
mov
jno
mov
and
sbb
xor
sub
mov
dec
pop
mov
or
push
pop
int
lds
and
cmpsb
mulb
fstp
aad
movq
lcall
mov
push
testb
jno
mov
jns
lret
jae
int3
cmp
add
aad
xor
cmp
movsb
mov
test
scas
inc
adc
inc
or
ret
add
push
shrl
mov
mov
lcall
pop
mov
sarl
push
inc
loopne
add
mov
in
mov
ljmp
mov
push
cld
add
add
push
ret
fadds
jo
and
ror
adc
xor
fistpl
outsl
pop
adc
repz
sub
into
les
or
lds
test
sbb
add
imul
arpl
mov
push
cmpsb
or
xor
insl
xchg
icebp
imul
out
sarb
jo
mov
test
mov
or
sahf
cwtl
addr16
push
loop
ret
adc
jno
jg
fisttpl
xor
xor
les
mov
add
int
lret
jno
mov
stos
lret
jl
mov
xor
outsl
or
xchg
rcrl
xchg
sub
cmp
in
hlt
into
out
push
mov
adc
and
lock
mov
cmp
ds
xor
dec
mov
inc
adc
in
add
mov
mov
ficoms
jmp
xchg
sti
adc
push
adc
cmp
mov
ret
imul
adc
push
jns
test
push
add
pop
fsubp
or
leave
fldt
dec
ja
cli
lret
or
inc
mov
xchg
in
repnz
mov
stos
daa
repz
push
xor
enter
sbb
and
mov
add
push
or
mov
mov
fists
andb
in
movsb
loopne
mov
mov
mov
out
pop
mov
lret
js
pcmpgtd
cld
adc
daa
jg
sub
repz
xor
push
push
inc
popf
out
push
xor
xor
adc
pop
and
dec
shr
popf
or
fdiv
inc
or
sahf
les
pushf
lret
xchg
clc
insb
push
xchg
mov
fwait
movsb
fwait
and
add
fildll
loope
xor
mov
jns
sub
cs
pop
and
dec
xlat
das
adc
cmpsb
sbb
mov
mov
in
scas
int
sub
add
inc
clc
push
aaa
fistl
add
inc
inc
xor
xor
lea
fs
scas
shll
push
aam
lea
lods
inc
jecxz
fmull
mov
sub
push
push
jnp
pop
enter
out
or
sbb
lcall
dec
ret
fsub
inc
and
stc
push
rcl
add
ret
mov
into
dec
dec
jg
push
les
mov
lcall
pop
fldl2t
and
jle
pushf
xlat
fsubs
mov
dec
mov
pop
mov
test
aad
daa
xlat
inc
add
xor
int3
xchg
ror
xor
gs
lret
push
adc
push
bound
loop
insb
xchg
and
jo
inc
leave
test
es
and
scas
or
sti
aas
dec
sub
cmc
inc
add
aam
xor
xchg
sub
xor
sub
loopne
fwait
insb
sbb
js
adc
mov
pop
dec
dec
lods
push
fcoml
pushf
xchg
loop
cltd
pop
sub
xchg
sahf
or
movsl
add
push
mov
cmpsl
or
lods
imul
mov
fldl
dec
or
mov
xor
sti
lock
xor
dec
mov
xchg
add
jmp
fisttpll
mov
inc
scas
hlt
cmp
jg
fmulp
and
fstl
and
cld
mov
inc
daa
mov
push
jp
sbb
mov
mov
insb
jbe
sbb
push
and
add
xor
mov
data16
movsb
dec
test
cli
loope
inc
popf
stos
mov
js
loop
lret
lcall
xchg
insl
and
pop
xchg
or
adc
mov
das
sbb
data16
or
pop
vpunpckhdq
mov
andb
pop
or
mov
mov
out
sbb
js
adc
adc
pop
jne
push
cwtl
cmc
test
inc
inc
xchg
or
idivl
arpl
mov
xlat
cmp
push
test
bound
int3
addr16
mov
mov
in
or
pop
pushf
push
jge
out
lcall
int3
pop
in
out
dec
mov
push
js
cmpsl
jecxz
inc
xor
stos
xchg
mov
dec
out
movsb
stos
cmp
mov
lahf
jl
jo
icebp
jo
mov
mov
in
pushf
jnp
test
insb
push
adc
mov
ss
lock
push
shl
lcall
shll
add
mov
pop
xor
data16
xor
movsb
dec
inc
add
mov
push
xor
adc
lods
sbb
inc
mov
jno
stc
adc
xchg
and
dec
jbe
push
or
jg
in
cmp
xchg
outsb
sbb
jp
dec
fistpl
add
mov
lods
ret
imul
mov
aaa
nop
stos
mov
aad
popa
js
sbb
cmp
jnp
push
hlt
fidivl
es
mov
inc
stc
sub
rcrb
jecxz
imul
and
push
inc
xorl
mov
cmp
and
fs
repz
out
xchg
push
jno
cmp
xchg
ret
pop
or
sbb
lods
add
ss
stos
jbe
jp
add
gs
push
hlt
shl
mov
sbbb
rcrb
les
xor
mov
cld
jp
sub
vmptrst
fsubl
inc
sti
nop
adc
roll
out
jl
in
lret
scas
dec
mov
cld
ror
xchg
cmp
filds
imul
push
sbb
outsl
sub
mov
and
bound
xor
out
and
adc
jmp
inc
lahf
out
mov
xchg
lods
cmp
lcall
dec
xor
or
cmp
jne
clc
mov
xchg
xchg
es
je
sub
stos
inc
add
or
ja
lods
les
mov
scas
mov
adc
pop
mov
push
or
test
mov
lods
andb
fimuls
leave
sbb
add
mov
das
cltd
jp
ja
push
jae
jae
lea
in
xor
mov
scas
sbb
clc
in
mov
lret
outsl
or
stc
fidivrs
leave
adc
and
fcmovnu
aam
movsb
xlat
xchg
mul
ss
mov
into
inc
movsb
dec
fadd
ljmp
lcall
sarl
repnz
dec
xor
enter
lods
ljmp
sbb
es
cmp
out
mov
dec
xchg
popa
xchg
jle
clc
nop
or
stos
mov
pop
and
lds
jns
loope
lods
in
dec
das
stos
roll
jne
mov
mov
jno
shr
pusha
xchg
jmp
add
xorb
xor
jbe
stos
adc
mov
divl
test
dec
cmc
popa
mov
xor
jg
fidivl
dec
mov
in
icebp
in
shll
mov
addr16
dec
mov
xchg
icebp
xchg
pushf
out
pop
fsubr
sub
data16
pop
out
xchg
mov
sbb
cmpsl
sti
js
arpl
cmpsl
call
inc
pop
sub
out
daa
ljmp
insl
insl
mov
fmul
fsubrl
lcall
inc
sti
lds
leavew
adc
lods
jae
push
test
aas
insl
ficoml
cmp
clc
push
cmpsb
add
out
fwait
inc
fnstenv
je
or
or
cmp
pushf
xor
push
mov
lds
mov
ljmp
mov
iret
fcomps
movb
mov
mov
popa
ficoml
test
test
out
mov
inc
fwait
add
loope
imul
das
fisubs
in
insl
enter
mov
loop
scas
dec
or
mov
pusha
mov
fimuls
cmp
and
sti
imull
jle
icebp
push
movsb
push
xor
push
xchg
pusha
mov
jmp
into
loopne
or
mov
cwtl
sub
shlb
ret
mov
nop
aas
or
scas
mov
mov
pop
jnp
jno
gs
mov
ficoml
cmp
mov
xchg
loop
and
idivl
ljmp
jmp
imul
or
pop
aas
or
notl
jbe
pop
in
movsl
test
cmpsl
inc
cld
ja,pn
or
sub
xchg
enter
fs
punpckhbw
xlat
es
stc
adcb
mov
test
mov
jnp
xchg
cmpsb
dec
lret
push
xlat
enter
outsb
mov
add
dec
mov
dec
out
and
inc
lods
adcb
mov
xorl
popf
test
ficoms
mov
mov
repz
mov
lret
add
xchg
jge
jmp
mov
loop
jg
mov
imul
sbb
push
loopne
jecxz
out
into
sbb
mov
imul
std
test
add
push
arpl
lods
scas
sbb
fsubrl
pop
and
lods
jno
xor
jno
cmc
and
cli
mov
sub
xor
stos
lret
fsubr
and
int3
pop
sub
div
pop
mov
cmp
xor
movntps
pop
sbb
cmp
aad
push
cmp
movsl
fnstcw
cmp
dec
cltd
adc
sbb
push
addl
lods
int
jecxz
int
fldl
daa
int3
cmpsl
sbb
test
rcr
jnp
fiadds
cli
or
sti
mov
xchg
push
fadd
or
shrb
jecxz
nop
jns
add
push
push
scas
lds
rcr
fldt
fwait
pushf
push
ret
out
and
leave
dec
sub
daa
and
dec
ljmp
dec
sub
fildl
insb
mov
es
mov
add
repnz
push
sub
lret
test
cmp
fdivl
pop
js
jb
fsub
in
cmpsl
cmc
pop
dec
jb
pop
lret
jbe
dec
lret
sub
cmp
mov
cwtl
aaa
test
sbb
scas
int3
cmc
test
popf
rorb
scas
sub
frstor
mov
and
or
ret
sub
dec
xor
cltd
fdivr
jo
stos
scas
es
lock
ret
mov
mov
fdivp
pop
aam
push
sbb
pushf
cmp
or
test
stc
lods
mov
jnp
cmp
push
inc
es
or
movsb
pusha
scas
mov
mov
jge
pop
jge
outsb
daa
adc
mov
xchg
sbb
popa
test
mov
mov
sub
dec
shrl
fwait
adc
xorl
cld
mov
fistps
into
inc
inc
xchg
dec
inc
ret
dec
or
dec
iret
sub
xchg
btc
dec
movsl
cli
pop
cld
int3
push
test
sub
fisubrl
scas
psrlw
insb
andb
mov
imul
lods
stos
test
inc
add
aas
inc
shll
cltd
add
cmpl
leave
and
jge
mov
mov
mov
ss
popa
gs
xor
popf
pop
mov
sbbb
iret
mov
adc
sub
jge
cld
push
mov
dec
ljmp
jmp
and
clc
movsb
push
sub
lock
sar
or
xchg
ret
lods
add
inc
nop
jp
cld
push
loopne
add
cwtl
xlat
or
pop
jno
sub
mov
xchg
push
sub
sbb
xchg
pop
stc
js
add
push
xchg
pop
call
xor
inc
ja
cmpsl
sbb
push
das
xchg
aas
cmpsl
divl
pop
inc
inc
sahf
iret
repz
mov
dec
or
sbb
test
hlt
mov
mov
insb
push
adc
rorb
xchg
jle
inc
mov
or
pop
je
testb
bndldx
pop
sub
outsb
jbe
pop
jno
fwait
push
repz
sbb
cmp
cli
popf
outsl
mov
pop
mov
or
xor
sarl
pop
cmp
out
pop
mov
jecxz
js
dec
in
sbb
insb
orl
daa
fldl
scas
inc
adc
sarb
jae
popa
mov
fwait
popa
mov
fs
andb
adc
or
mov
and
dec
jle
push
pop
outsl
clc
mov
mov
cmp
movsl
inc
pop
and
mov
sbb
adc
pop
insb
cmpsb
test
pop
xor
pop
adc
sub
inc
jmp
data16
and
call
in
mov
xlat
lods
pop
or
outsb
adc
cmp
dec
cld
push
lods
ss
mov
push
push
sbb
out
sub
xchg
ret
mov
cltd
in
fimuls
repz
inc
add
test
filds
push
rcll
outsl
mov
int3
das
repnz
dec
sahf
arpl
pop
out
insb
adc
std
dec
push
and
clc
inc
push
int3
out
fdivs
cmp
iret
jp
fwait
ret
int3
mov
xchg
outsb
das
sub
inc
inc
push
xchg
mov
lret
mov
and
cmp
rcrl
sub
push
push
xor
jg
mov
imul
dec
or
das
adc
pop
xor
sub
or
into
scas
xor
sub
rorb
push
or
mov
jle
maxps
roll
sub
nop
pusha
xchg
lcall
dec
xchg
cmp
jge
leave
mov
mov
std
dec
mov
addl
pop
cmc
xchg
or
sub
dec
dec
in
aam
cmp
leave
mov
mov
das
test
es
imul
out
mov
aam
push
mov
lds
jo
xchg
pop
lock
iret
mov
fsts
stc
push
stos
pushf
and
mov
mov
ljmp
mov
push
and
incl
mov
xchg
stos
xchg
cmp
fsts
push
mov
mov
leave
mov
cmp
sahf
jo
sti
push
cmp
aam
xchg
cmp
push
test
push
fcmovnb
or
imul
sbb
aam
xchg
or
daa
or
rorb
fs
push
sub
fsts
test
nop
js
cld
xchg
in
out
inc
mov
adc
inc
sub
dec
jle
jge
adc
xor
pop
js
xchg
fmuls
faddp
inc
ret
xchg
mov
lods
xchg
dec
mov
xor
add
jb
or
and
inc
jle
sbb
roll
or
lahf
neg
shlb
std
sti
or
std
mov
mov
das
cmp
pop
push
add
jbe
ds
orb
popf
stos
mov
add
and
cld
mov
in
cmc
add
scas
jno
test
cmpb
pop
je
pusha
sub
sub
adc
popa
xor
movsl
ret
cmp
xlat
lret
adcb
aas
add
jmp
mov
fdivrl
mov
push
out
inc
adc
inc
xor
mov
loope
sti
pop
push
out
testl
das
dec
and
sub
ss
lods
xor
xor
sbb
lret
dec
inc
push
std
xor
adc
ret
adc
mov
add
adc
stos
push
pop
jno
cmpl
clc
out
xor
jg
adc
div
adc
roll
fcmovu
mov
xchg
mov
jo
orl
sahf
hlt
cmp
fidivrs
stos
addl
lea
out
adcb
mov
and
pop
push
test
cmp
xor
xchg
jns
dec
je
xor
push
xor
adc
xchg
xor
or
daa
push
mov
test
mov
xchg
xlat
fdiv
mov
int
pop
push
test
sbb
cmp
lret
movsl
jo
mov
mov
cmp
addl
cmp
incl
fsubr
pop
fwait
les
inc
loop
pop
or
jecxz
sub
scas
push
cmpsb
mov
inc
loope
cmp
cmp
mov
movsb
cwtl
cmp
cltd
cmp
add
pusha
xchg
or
cmp
jp
shlb
inc
jno
cmp
addr16
fwait
aam
fmuls
xchg
shlb
sub
rorl
xchg
xor
sbb
cli
xor
xor
or
xor
xchg
cmp
test
mov
sbb
aad
xchg
push
addl
mov
call
add
lock
dec
mov
cmp
pusha
dec
test
pushf
mov
enter
adc
dec
pop
out
insb
cltd
pop
cmpsb
insl
add
or
and
jmp
ljmp
xor
xchg
or
std
jns
xor
mov
push
push
pop
fsub
sub
and
icebp
or
and
xchg
xorl
dec
and
adc
cli
aaa
fisubrs
dec
out
pop
inc
out
mov
jns
push
test
scas
repz
ret
leave
xchg
ss
popf
lret
dec
rolb
push
loope
and
jns
jp
jb
xchg
rorl
popf
xor
pop
jg
mov
popa
mov
mov
xchg
ror
imull
mov
pop
mov
and
aam
pop
pop
mov
test
or
and
inc
ljmp
cmp
int3
sti
leave
das
divb
mov
xchg
mov
bound
inc
pusha
lret
cmpsl
sarb
mov
hlt
inc
adc
loop
mov
push
orb
cli
cmpb
jmp
aam
mov
loope
aaa
jg
push
rcrl
inc
xchg
dec
pop
ljmp
pop
xchg
lds
pop
sub
cld
pop
fisttpl
mov
push
and
notl
xor
xchg
pop
fwait
mov
stos
xchg
mov
add
sti
movsb
ja
pop
sbb
es
or
rclb
scas
das
xchg
sub
and
subb
mov
sbb
test
es
mov
jne
mov
call
std
jne
lcall
in
push
and
fsubs
cmc
data16
inc
lahf
sub
clc
fistl
sar
test
adc
mov
pop
lea
pop
in
adc
or
lret
push
mov
ja
pop
pop
inc
cmpsl
add
fchs
ljmp
mov
pop
lods
rorl
pop
dec
nop
inc
sub
mov
jge
arpl
mov
and
adc
test
mov
cltd
aam
dec
inc
adc
cltd
inc
divl
into
aam
in
xchg
orb
sub
push
lock
rol
sub
aas
out
dec
push
push
add
ljmp
jb
les
push
repz
pop
je
lea
cmp
inc
xchg
sub
sub
cmp
jno
test
mov
add
sbb
xchg
push
jecxz
add
push
jns
adc
shlb
aas
xchg
jmp
jno
inc
aad
and
xchg
and
jg
sbb
lods
shrd
mov
xchg
outsl
or
pop
dec
add
xor
push
xchg
mov
and
jl
popa
sub
mov
std
pushf
aas
sbb
fbld
jne
lahf
adc
fs
pop
pop
sub
sbbl
aad
and
jge
sti
cs
test
xchg
ja
xlat
outsb
add
xor
cmp
addr16
in
enter
ret
pop
or
pop
jae
push
lret
stc
add
insl
mov
mov
xchg
mov
cmc
popa
rorb
jno
mov
aaa
adc
iret
imull
out
jmp
mov
push
cmp
fidivrl
cmpsl
jge
mov
out
icebp
shll
cmpsb
jb
call
std
xor
mov
push
lock
adc
fs
dec
mov
sub
cld
push
or
xchg
iret
xor
in
bnd
testb
sbb
repz
xchg
lock
push
test
jae
mov
stc
add
leave
sti
shr
cmc
dec
mov
cmp
cmpsl
repz
add
clc
xchg
aaa
aaa
loope
push
push
scas
pop
pop
insb
xchg
scas
mov
es
sub
fs
jg
call
pushf
jmp
outsb
push
sub
pop
pop
jns
jne
xchg
mov
mov
ljmp
lock
jnp
cltd
cmp
test
sub
mov
pop
dec
call
mov
sub
jp
or
cld
lret
xchg
mov
xor
lods
inc
xchg
dec
add
rorb
ds
dec
iret
mov
jo
adc
shlb
mov
gs
mov
popf
icebp
and
xchg
xor
mov
xor
mov
xor
call
add
jmp
in
mov
jl
push
jmp
daa
jge
push
pop
push
mulb
jmp
add
nop
iret
insb
mov
inc
xchg
cmpsb
aaa
rorb
sarb
hlt
aam
je
aam
imul
imul
mov
mov
cld
xor
inc
or
loop
lea
loop
call
mov
push
setbe
mov
stos
sbb
test
dec
or
cld
lret
es
int
out
jl
fsubs
xor
test
bound
es
xor
rcll
nop
or
loopne
lock
jns
sbb
inc
adc
repz
pop
in
push
mov
mov
ds
aad
fidivrl
shll
loopne
ror
mov
jg
mov
xchg
ret
int3
mov
inc
dec
fsubl
xchg
jmp
jecxz
mov
add
imul
jo
inc
pop
dec
and
fs
jecxz
stc
mov
jae
xor
dec
xchg
xor
jl
jp
clc
pop
mov
sub
aam
lds
pop
cmp
in
pop
ret
add
jecxz
dec
test
mov
mov
mov
push
and
into
adc
xor
pusha
jne
xchg
inc
dec
sbb
adc
xor
add
out
int3
or
add
mov
dec
xchg
cmc
jb
das
dec
push
xor
int
lods
nop
sbb
mov
mov
cmp
inc
jb
sbb
dec
mov
sbbl
lea
sub
mov
adcl
xor
lret
jbe
fildl
cmp
push
mov
mov
icebp
pushf
icebp
fdivrp
sbb
popf
aam
ffree
shl
inc
fstps
and
mov
xor
pop
mov
push
pop
imul
xor
sbb
xor
es
mov
push
insl
icebp
cmpsl
inc
nop
ja
add
or
mov
jmp
cli
cmp
add
es
rcll
lcall
xchg
and
pop
and
push
in
lcall
icebp
mov
adc
enter
mov
pop
das
les
jne
aam
xor
lret
jge
push
sub
mov
enter
xchg
leave
ds
cmp
scas
and
xor
xor
push
xchg
xchg
inc
inc
dec
es
sub
xlat
nop
cmp
into
sbb
into
loope
add
cmpsb
add
mov
pop
lods
sub
jle
xor
fucomi
dec
or
divb
dec
push
add
push
gs
inc
sub
cltd
dec
jo
pop
mov
out
loopne
dec
shrb
or
xor
int3
scas
adc
jg
stc
and
je
push
push
cli
xor
dec
fwait
inc
dec
mov
jmp
aas
std
mov
fisubl
push
cs
lret
out
out
arpl
ja
es
jnp
arpl
or
mov
jb
xchg
dec
mov
mov
adc
fstp
outsb
mov
out
sbb
xor
mov
jnp
adc
or
add
push
scas
inc
outsl
sbbb
cmc
lock
jns
fnstenv
adc
push
jg
out
adc
shl
pop
inc
imul
fstp
int3
lret
insl
bnd
lahf
movsb
adcb
ja
sbb
inc
or
push
jg
sbb
das
mov
ror
or
push
xchg
loop
aas
jg,pn
cwtl
into
cli
stos
cmp
or
mov
lods
das
dec
cld
xor
xor
inc
daa
ja
std
xlat
lahf
pop
mov
and
xlat
jecxz
mov
add
sub
push
xlat
mov
scas
pop
cmp
subb
mov
or
mov
mov
adc
jg
lcall
movaps
leave
lret
js
mov
mov
adc
in
mov
sub
mov
loop
lcall
push
fldt
mov
sti
roll
mov
add
nop
push
mov
adc
dec
ftst
jge
popa
js
cmp
pop
scas
shlb
jns
or
cmp
pop
add
mov
pushf
and
outsb
pop
mov
cmpsb
mov
sub
pop
sbb
mov
inc
insl
popf
pop
adc
sarb
cmp
push
sbbl
test
xchg
call
mov
dec
loop
lea
sbb
add
icebp
mov
repz
ret
mov
jp
fstpt
repz
pop
orl
decl
pop
or
ljmp
mov
das
popa
popa
inc
inc
enter
aad
jecxz
int3
jle
std
loop
xchg
lret
xchg
leave
stc
dec
mov
fwait
dec
sti
nop
inc
and
pop
pop
loope
or
or
pop
insw
lret
popf
mov
daa
jnp
inc
or
lods
xchg
xlat
loop
cs
mov
mov
mov
inc
lods
mov
mov
out
cmpsl
pop
add
xchg
jae
mov
imul
mov
jbe
xchg
into
mov
push
cli
cmp
rcrl
mov
sti
jg
and
xor
jnp
ljmp
int3
lea
test
gs
add
xchg
in
fdivr
push
add
jge
paddusb
aam
push
dec
inc
cmp
push
aaa
nop
daa
xor
mov
mov
pop
cmp
jge
lret
test
in
xor
push
and
outsl
lahf
ljmp
fsubrl
mov
lods
shll
xor
push
sbb
jo
in
add
mov
test
in
mov
lcall
iret
push
fcomps
push
push
daa
call
adcb
push
sub
mov
imul
pop
jnp
sub
push
and
jns
jle
pop
stos
rcl
fstpl
outsb
icebp
and
jo
test
lahf
xor
test
adc
lods
aas
inc
loopne
pop
cmp
pop
sahf
je
xchg
fdivr
pop
xchg
mov
pop
imul
mov
hlt
scas
adc
mov
fiaddl
sahf
dec
fs
shl
int
mov
out
stos
ret
or
lea
popf
dec
ss
mov
aas
fwait
push
std
hlt
out
push
test
scas
cmpsl
aam
nop
fcoml
aaa
dec
inc
out
mov
outsl
repz
xchg
incb
jno
jle
xchg
out
dec
xor
mov
shr
movsb
sub
xchg
mov
dec
es
dec
inc
jo
insb
sub
inc
cmc
out
movsl
aam
add
xchg
push
in
sub
int3
fcoml
imul
xchg
insl
mov
fisttpl
flds
sub
jg
push
mov
or
lds
fistpll
ret
pushf
cltd
jmp
sbb
xor
lock
scas
mov
xor
and
gs
sbb
fs
pop
outsb
mov
push
xchg
adc
lret
or
add
fwait
mov
fwait
push
adc
or
jb
dec
cmp
ror
in
xor
pop
dec
iret
gs
mov
shll
sub
imul
dec
mov
inc
or
mov
pusha
or
hlt
xor
adc
lret
mov
ds
aaa
out
test
stos
js
mov
nop
mov
es
jns
inc
insb
add
or
mov
add
xchg
xor
pop
sets
cmc
xchg
xor
pop
movsl
xchg
int
sbb
shrl
pop
sbb
jb
dec
pop
ljmp
mov
addr16
ljmp
lahf
xlat
or
xchg
test
inc
pop
or
fildll
mov
stc
cmp
mov
xlat
mov
sub
push
push
and
jns
mov
aad
push
cmp
test
ficomps
jmp
cmpsl
scas
mov
push
mov
push
cmp
mov
xor
test
loop
cltd
mov
inc
sub
out
xchg
jbe
dec
fisubl
int3
popf
ret
xlat
inc
neg
xor
data16
pop
mov
mov
stos
ret
push
lahf
fmull
cli
push
sbbb
sub
and
adc
jno
sbb
ret
out
xor
fwait
nop
push
push
sbb
cmp
mov
repnz
sub
and
jp
sarl
test
inc
xor
nop
test
icebp
mov
xlat
rcll
mov
and
dec
push
outsl
fcoms
ret
mov
sahf
cltd
stos
inc
ss
in
jnp
icebp
adc
push
adc
sbb
xchg
and
jbe
jg
nop
mov
mov
mov
repnz
insb
icebp
dec
add
sbb
sub
dec
fstpt
xchg
xchg
lods
cld
adcl
leave
mov
fldt
pop
jp
imull
fistl
cmp
popf
xor
push
adc
lds
test
movsl
sbb
shl
shl
push
mov
pop
push
adc
sbb
xchg
sbb
push
mov
mov
jbe
cmp
sub
jnp
push
sbb
imul
cmp
or
add
inc
fdivrs
jp
cs
lret
icebp
sbb
test
ljmp
cmp
scas
pop
ljmp
mov
sub
add
movsb
pop
cld
xchg
stos
mov
mov
repnz
repz
pop
into
sub
lds
daa
mov
jno
in
dec
xor
sub
fidivrl
pop
lcall
xchg
mov
movsl
cmpsl
adc
popf
jle
or
je
stc
addb
sbb
jno
hlt
je
in
es
je
jns
mov
mov
adc
lret
mov
xchg
loope
xchg
ljmp
lcall
add
cmp
dec
push
lcall
stos
jo
pop
aas
insb
loopne
dec
sub
jmp
cwtl
enter
imul
dec
movsb
ror
popf
xchg
rorl
push
jbe
or
ja
cmp
mov
mov
lea
je
stos
cmp
nop
mov
imul
pop
push
sub
fcom
mov
shlb
rcrb
xlat
add
jp
push
push
int
ds
sahf
xchg
addb
hlt
test
out
add
dec
mov
cmpl
pop
jne
or
sar
adc
nop
mov
int3
cmp
jno
xor
repz
je
mov
test
adc
push
xor
pusha
inc
pop
mov
pop
inc
mov
add
jp
jnp
xchg
jecxz
pop
sahf
stc
and
jae
and
daa
test
pop
andb
xor
data16
loop
pop
or
sahf
mov
scas
scas
cwtl
dec
ja
and
sbb
cmp
cmc
fwait
jg
sub
mov
xchg
std
inc
cli
lods
popf
lret
lods
jp
scas
jns
xorl
ljmp
cmp
and
mov
popl
aad
mov
int
shl
rclb
mov
mov
mov
xchg
rclb
mov
jl
cmpsb
pop
jno
jmp
pop
sub
and
addb
js
add
lret
out
xchg
jbe
xchg
test
out
xchg
popa
js
xchg
adc
stc
mov
and
bound
dec
and
xrelease
imul
pop
push
adc
popf
push
sbb
xchg
xor
movb
repz
mov
popf
lret
popf
and
sub
push
sub
aaa
lods
cmp
shl
jge
mov
add
scas
clc
xchg
mov
mov
mov
pop
mov
pop
sub
inc
mov
pop
sbb
mov
mov
and
in
mull
icebp
pop
aas
inc
mov
ds
dec
jns
dec
jl
and
mov
scas
pop
nop
or
nop
mov
cmp
hlt
cwtl
push
add
pop
repz
sub
pushf
lret
sub
pusha
dec
loop
mov
lret
ffree
cmpsl
cmc
iret
loop
mov
imul
rorl
and
fs
stos
in
test
mov
stos
lahf
in
lcall
repz
xor
push
xchg
xor
mov
inc
lahf
or
cmpsb
mov
movsb
scas
xchg
or
fisttpll
das
mov
jno
inc
out
aas
les
mov
out
jne
jbe
dec
xlat
push
imul
adc
adc
sbb
icebp
ja
jno
jns
pop
out
push
mov
xor
js
fildll
lods
and
mov
jne
cmp
jno
jae
mov
sbb
xor
add
sub
loope
divb
xlat
repnz
adc
cmc
cld
inc
push
mov
aam
shrb
dec
mov
or
arpl
mov
lock
dec
mov
jg
xchg
push
std
mov
jbe
mov
fistpll
xor
push
or
aam
js
push
cwtl
mov
jo
fstpt
clc
xchg
into
mov
add
std
lcall
outsl
cld
xor
add
dec
loopne
stos
lret
jne
jns
int
mov
mov
push
ja
sub
or
pushf
cmpsl
stos
fnstenv
xchg
ljmp
test
ljmp
add
push
pop
and
lahf
std
or
jmp
xchg
test
insb
add
movsb
fistpl
mov
mov
mov
fisubrl
jns
daa
push
dec
pop
in
sub
and
add
jne
mov
pusha
xchg
inc
push
shrl
push
push
int
js
pop
jecxz
mov
test
setg
push
cs
and
sub
ss
pop
push
sti
cmc
sahf
stos
ss
fadd
lret
jne
cmc
inc
stos
or
lret
dec
adc
pop
hlt
push
jno
and
inc
cmp
adc
sbb
cld
pushf
mov
cs
dec
movsb
cmp
push
cwtl
insl
pop
enter
and
cltd
cmpsl
fldt
cmp
push
je
mov
pop
cs
daa
fdivrs
or
push
jge
aad
aaa
mov
inc
push
push
xchg
in
into
cs
jno
mov
jg
or
pop
and
xor
xor
fcoms
outsl
out
sbb
imul
pop
ret
adc
mov
cmpsb
push
mov
mov
sbb
repnz
sarb
cmpsb
add
std
sarb
ljmp
mov
add
call
lret
movsl
movsl
outsb
inc
int3
scas
jp
arpl
loope
aaa
add
inc
sbb
shr
xchg
cld
push
jmp
push
or
push
test
popa
dec
aas
cwtl
int
xor
mov
scas
adc
ss
loop
adcb
cmpsb
ret
jmp
xor
jl
adc
ret
cmp
in
fidivrs
shr
jl
add
and
add
pop
cmpsb
mov
push
mov
mov
mov
int
cmp
mov
add
dec
and
int3
mov
mov
xchg
mov
ss
xor
rcrb
mov
insl
shrl
sbb
jbe
mov
adc
mov
xchg
dec
test
testb
or
stos
push
pushf
mov
popf
and
sbb
scas
xchg
jno
sub
push
mov
jo
jno
pop
cltd
rorl
jge
sbb
pop
pop
mov
add
xchg
push
pop
pop
cmpsl
outsb
add
lret
mov
push
dec
push
stc
or
shrl
sahf
flds
sub
or
ja
xchg
sbb
ret
enter
popa
xchg
push
lds
pop
shll
aas
sub
dec
les
cld
jmp
nop
rclb
xchg
nop
cmpsl
dec
jbe
mov
jmp
mov
mov
cmp
fadds
or
push
push
nop
push
fsubl
pop
mov
jge
xor
push
adc
ds
adc
es
jp
ljmp
aaa
jl
xchg
pop
lock
xchg
adc
test
std
leave
test
jbe
xchg
js
out
pop
mov
cli
push
push
push
cli
add
push
adc
fmul
cs
xor
adc
mov
mov
xchg
pop
movsb
sbb
ret
not
xor
mov
jnp
scas
adc
cmp
push
or
mov
pop
fmuls
lcall
ficoms
lock
das
adc
push
jp
jle
push
lock
ficoms
jb
dec
pop
outsl
ret
orl
add
xchg
rorl
adc
repnz
mov
adc
cmp
sti
lcall
push
and
adc
jmp
mov
insb
leave
rorl
push
sbb
jge
imul
pop
adc
stc
xor
movb
cmc
sub
outsl
and
sahf
aam
mov
je
js
adc
outsb
fildl
mov
xor
and
out
pusha
mov
mov
xchg
sbb
push
xchg
addb
movsl
xlat
add
out
sub
out
push
aam
lcall
xchg
adc
inc
inc
xlat
pusha
push
mov
iret
outsl
jmp
imul
mov
pusha
fcompl
sbb
xor
call
xchg
mov
push
adc
rorl
push
mov
bswap
mov
dec
adc
loopne
cmp
dec
sbb
mov
ja
jmp
adc
xchg
pop
movsb
add
mov
sub
dec
aaa
lahf
cmp
hlt
xchg
adc
xor
inc
icebp
adc
out
pop
or
js
sub
mov
in
nop
aaa
add
rolb
dec
add
insl
and
test
add
or
test
xchg
in
pop
cmp
xchg
outsb
add
enter
negl
cmp
jnp
jae
dec
xchg
pop
dec
ret
sarl
enter
adc
mov
loop
repnz
imul
jns
cmpsl
jl
not
pop
add
pop
cmc
pop
pop
mov
cmpsb
push
add
sbb
ret
xor
vpshlb
addb
imulb
movsb
fimull
fisttpll
and
dec
in
push
xchg
test
add
xlat
les
mov
pop
push
adc
mov
push
ja
xor
bound
repnz
jle
jno
notl
lods
xchg
lahf
xlat
insl
mov
add
xchg
out
fwait
loopne
sbb
stos
jbe
icebp
cmp
inc
jl
cwtl
sbb
movsb
adc
and
sbb
ret
nop
mov
xor
dec
popa
pop
outsl
sarb
mov
test
dec
inc
adc
and
movsb
inc
loopne
push
enter
icebp
iret
stc
out
cmp
popf
es
or
inc
jae
fdivl
or
inc
add
sbb
fimuls
ret
je
xchg
into
test
insb
mov
scas
stos
xchg
inc
xor
dec
fs
sub
xchg
jle
add
jl
sbb
stc
jle
addr16
push
outsl
or
dec
ljmp
adc
pop
lds
std
enter
mov
je
push
icebp
sbb
jl
addb
fxrstor
push
movsl
dec
loope
jno
daa
push
pop
adc
fwait
and
add
pusha
int
cmpsl
inc
or
mov
and
hlt
jno
test
xchg
mov
push
call
mov
andl
jle
and
lret
shll
mov
aas
addr16
dec
in
sbb
adc
cmp
addb
insl
push
push
rol
dec
add
lahf
das
adc
int3
sbb
daa
orl
rcrl
arpl
repnz
ja
mov
jne
cmp
andb
fsts
push
cmp
jecxz
cmp
pop
pop
pop
jns
lahf
jmp
inc
std
int3
xor
sti
pop
lock
ficoms
cs
popa
lret
loopne
mov
int3
fldenv
imul
test
lea
out
inc
daa
sbb
lret
mov
mov
ja
pop
rol
xchg
out
jecxz
push
mov
xchg
jge
leave
dec
in
mov
push
xchg
pushf
rcll
hlt
shrb
insb
mov
push
push
inc
adc
movsb
mov
aam
inc
sub
sarl
test
outsl
mov
xchg
aam
stos
mov
fdivl
insl
jnp
out
out
addr16
mov
xchg
xor
mov
dec
sbb
push
call
sub
cmp
and
test
jbe
add
xchg
dec
push
mov
pop
xor
xchg
shrd
int3
call
mov
mov
in
in
ss
sahf
cmpsl
scas
test
xor
xchg
and
xor
cmpsl
aas
leave
cmpl
repz
hlt
pop
call
xor
std
xlat
xchg
lret
xchg
adc
jl
adcl
add
mov
add
ja
cmpsb
add
cmpsl
mov
sbb
loopne
xor
stos
fmuls
insb
xchg
les
je
jge
inc
daa
inc
stc
sbb
ja
adc
insl
fistl
sub
lds
add
or
in
jp
in
std
jp
push
arpl
xchg
mov
cmp
addr16
fistps
push
jp
out
stos
add
cmp
lahf
xchg
pushl
out
and
adc
mov
js
test
xlat
cmp
mov
sub
stos
sbb
mov
mov
mov
jge
pop
data16
addr16
fstl
pop
mov
addl
lock
jno
adcl
jbe
pop
movsb
pop
stos
popa
dec
lock
xchg
call
orl
shlb
adc
xor
xlat
addl
aam
andb
xchg
lahf
aas
enter
scas
in
scas
mov
arpl
jl
xchg
dec
in
xor
pop
lea
add
pushw
ja
mov
stc
sub
dec
sarb
xchg
call
mov
shl
adc
lds
dec
fsubl
cli
and
pop
lret
ret
dec
jnp
into
mov
jg
and
movsl
bound
in
sub
pusha
testl
inc
ljmp
push
adc
push
loope
mov
fists
sti
push
cmpsl
sbb
imul
int3
dec
pop
insl
dec
arpl
adc
and
cmpsb
sbb
or
xor
rcrl
dec
repz
inc
cmpsb
mulb
push
adc
mov
clc
pushf
ja
mov
dec
or
mov
nop
sub
out
xchg
dec
push
lds
xor
jg
mov
mov
mov
jg
jbe
sbb
inc
push
test
pushf
xchg
cmpsl
lods
add
pop
lds
fcomip
repnz
imul
out
je
stos
in
or
adc
inc
clc
and
popa
push
or
dec
add
mov
outsb
and
dec
sbb
je
cmc
jae
inc
int
xchg
popf
pop
pusha
aaa
add
sbb
xchg
ljmp
jbe
pop
daa
ja
and
test
das
ljmp
xor
or
loope
or
jbe
xchg
push
add
mov
jmp
or
imul
xlat
jp
lods
xor
ja
pushf
pop
sub
js
js
lock
jmp
jnp
adc
dec
in
repnz
mov
mov
popf
push
jbe
call
pop
idivb
xchg
decl
lods
adc
fdivl
cwtl
outsl
push
int3
data16
sar
xor
xor
sub
data16
cld
outsb
insw
push
mov
out
and
in
or
xlat
pop
or
xchg
clc
out
jmp
xor
loope
add
jl
sbb
pop
mov
or
inc
cmp
aas
mov
pop
xorl
xorl
shlb
ret
add
out
rorb
push
fisttpl
aad
sub
inc
loopne
cwtl
enter
subl
into
add
popa
filds
aaa
pop
mov
jns
adc
sbb
and
pop
or
or
and
inc
dec
jns
xor
call
xor
and
or
in
imul
call
loop
popw
adc
loope
pop
mov
xor
inc
rorb
adc
cmova
addb
js
testb
lds
jecxz
outsl
stos
imul
inc
cmpsl
sbb
les
inc
mov
and
mov
int
jg
xor
mov
jnp
mov
rcr
xor
xchg
mov
js
mov
add
pop
adc
roll
lret
jnp
xor
adc
sbb
int
push
dec
cltd
xor
movsb
loop
pop
add
int
mov
jbe
push
popf
sub
jmp
push
addr16
mov
jnp
inc
ret
mov
add
mov
sbb
dec
push
test
popf
sahf
iret
daa
scas
and
mov
decl
sub
jg
dec
pop
shrb
cli
arpl
int3
add
jo
int3
clc
jns
pop
out
out
jp
pop
mov
dec
call
adc
mov
popf
push
scas
subl
mov
sbbl
mull
cmpl
in
xlat
jecxz
mov
ret
stos
jns
in
inc
cmpl
hlt
mov
in
inc
outsb
addr16
push
jg
rorb
xor
mov
mov
push
repz
stos
scas
sarb
insl
add
xchg
mov
sub
out
mov
orl
cmp
add
lock
jno
test
cwtl
in
xchg
enter
sti
popa
and
pop
push
or
dec
xchg
pminub
mov
movl
xchg
and
inc
dec
out
fildl
adc
jo
js
fimull
js
lods
xor
jbe
rclb
cmc
mov
fldz
pop
add
adc
nop
sbb
pop
pop
bound
push
loop
lods
xor
mov
pop
inc
repz
scas
fbstp
xor
dec
jo
inc
jle
shl
jmp
and
and
pop
inc
cmp
jmp
inc
push
mov
roll
dec
test
jb
les
cmp
xor
insl
xor
inc
mov
stos
or
inc
sub
pushf
imul
imul
dec
xor
xchg
sub
arpl
pusha
cs
insb
sub
nop
xor
ucomiss
lcall
dec
icebp
sbb
push
mov
mov
in
push
in
out
test
aas
mov
push
std
add
mov
adc
push
pop
sbb
outsb
adc
mov
jecxz
sub
mov
movsl
push
es
or
sub
fldt
cwtl
mov
das
pop
push
xchg
or
test
ret
mov
xchg
fldl
adc
outsl
jb
std
push
mov
inc
repnz
fistpll
mov
xchg
addl
mov
pop
icebp
pop
pop
adcl
movsl
mov
notb
fisttpl
icebp
insb
jae
adc
mov
mov
cmp
or
or
sub
inc
outsb
test
push
sti
mov
adc
mov
add
mov
ss
outsb
fldt
loope
sbb
push
xchg
xlat
inc
sub
xor
aas
fimull
lret
iret
xor
sub
xchg
inc
jecxz
push
pushf
push
sbb
push
adc
mov
rcrb
push
pushf
mov
xor
cmpsb
out
mov
je
sbbb
xchg
inc
xchg
cmp
adc
adc
test
push
scas
cmp
pop
roll
jns
mov
ljmp
mul
int3
inc
pop
adc
cltd
xchg
pop
dec
mov
pop
in
and
shl
out
or
lret
pushf
xchg
inc
xchg
test
pop
jno
or
ss
enter
lahf
es
mov
inc
sbbl
mov
ss
fs
and
mov
insl
ret
adc
jge
movsb
stos
cs
loop
stc
sar
push
mov
pop
je
inc
cmp
xor
fistpl
jo
lock
mov
jmp
sub
clc
pop
adc
cmpsb
imul
ret
cmp
stos
into
push
mov
fcmovnu
shll
mov
sub
es
in
rorl
mov
in
popf
push
enter
push
cmpsl
push
jbe
jno
movsl
push
jle
jl
fadds
cs
mov
and
cld
cltd
rcl
in
dec
jb
loope
pushf
jno
ss
shlb
cmp
dec
fxch
mov
push
scas
stos
pop
fimull
stos
push
push
insl
pop
adc
fsts
push
mov
jnp
int3
or
add
into
aaa
fidivs
rcrl
jb
rol
ds
dec
sbb
pop
fsubs
enter
sub
lret
jnp
popa
scas
cmp
dec
cmp
cmc
xchg
stc
xchg
push
xor
hlt
mov
addb
std
test
cld
push
cmpsb
xor
mov
xchg
mov
xchg
ljmp
stos
enter
insb
hlt
xlat
sub
and
sysenter
lret
cld
ret
mov
aam
out
sub
idivl
add
movsl
adc
testl
jg
scas
cmpsl
ds
aad
push
jmp
hlt
mov
dec
and
fidivrs
cmp
xor
adc
fildll
mov
daa
stc
add
repz
das
cmc
ficoms
push
ds
add
xchg
adc
icebp
xor
scas
adc
and
leave
mov
xchg
lcall
sti
pop
mov
enter
notl
fwait
sub
fidivrl
jle
pop
movsl
add
xchg
push
pop
pop
lock
mov
test
cs
in
dec
pop
loop
push
mov
dec
mov
repnz
pop
jb
repnz
repz
in
mov
dec
jbe
mov
ficompl
push
xor
jmp
sub
jp
cmp
jmp
pop
fists
outsb
pop
push
ljmp
cli
repnz
fisttpll
loop
inc
cmc
and
inc
mov
in
je
daa
xlat
sub
pop
test
cmp
cmp
cmpsl
ficoml
xor
adc
push
ja
adc
xchg
cmp
imul
ljmp
fldcw
jecxz
addr16
inc
mov
fimuls
push
pop
dec
jmp
hlt
outsb
jbe
rcrl
xlat
adc
mov
xchg
sbb
popa
push
std
jge
stc
jecxz
xor
xchg
dec
jb
test
sbb
lahf
andb
daa
icebp
xchg
ds
repz
aad
in
mull
pushf
lds
jecxz
cld
sub
nop
and
sbb
pushf
jle
mov
outsl
mov
sub
inc
push
mov
out
pop
adc
lods
sbb
sub
push
adc
js
mov
sub
bsr
fs
loopne
adc
idiv
fnstsw
fnstenv
xchg
xchg
loop
xchg
mov
dec
jg
mov
mov
and
popa
stos
mov
push
leave
inc
pop
nop
mov
mov
sub
std
pusha
add
stos
scas
iret
cli
ret
addb
push
and
icebp
cmp
push
ret
jecxz
cmp
fistps
cmpsb
adc
mov
pop
or
dec
dec
add
rcll
push
xor
dec
sub
shll
cmp
jbe
jbe
dec
cmp
enter
in
gs
sti
inc
push
xchg
xor
pop
jg
xchg
pop
sub
repz
addr16
sub
cltd
jmp
mov
popa
mov
lret
jge
and
sbb
iret
fwait
jo
ret
jecxz
jmp
inc
or
xchg
aam
roll
popa
sarl
and
and
loope
adc
test
push
or
addr16
mov
mov
fistps
imull
fwait
xor
mov
daa
loopne
pop
xlat
adc
add
add
jae,pn
inc
fwait
loopne
dec
mov
mov
xchg
mov
mov
mov
shrb
popf
adc
call
jae
imul
lods
in
clc
leave
jae
mov
push
xlat
div
fucomi
adc
add
mov
fcomi
mov
mov
jbe
out
push
lcall
test
mov
scas
leave
push
jnp
adc
inc
fadds
xor
and
inc
daa
outsb
shll
adc
repz
loope
jmp
jge
jb
js
cld
std
movsb
cmp
lods
jns
loope
cmp
aas
push
insl
pop
hlt
cwtl
add
insb
lahf
jno
xlat
jnp
addb
mov
cmp
repnz
xchg
push
int
lahf
sahf
cmovp
push
out
mov
adc
outsl
xchg
cmp
ljmp
or
sbb
push
cmp
adc
sub
cmp
and
sub
fdivl
add
xchg
dec
shlb
fidivl
push
jb
and
add
jno
into
jno
cmp
roll
fsubr
sub
loopne
scas
lds
mov
out
icebp
push
imul
sarl
out
out
xor
xchg
lods
cmp
add
xchg
test
in
mov
rclb
cs
lea
push
mov
movsl
dec
sub
xchg
xchg
mov
out
mov
xor
pop
shll
xchg
ss
or
pop
jo
jp
lahf
xchg
xchg
push
and
outsl
adc
sbb
jbe
ds
push
lret
mov
sarl
and
pop
imul
pop
and
add
lods
sti
ljmp
add
lock
shrl
fisubrs
cli
pop
or
sbb
cmpsb
xchg
xlat
ret
aaa
addl
int3
cli
inc
shlb
sbb
dec
pop
mov
fs
pop
sbb
pop
xchg
adc
pop
shlb
xor
sub
int
push
lods
xchg
push
mov
outsl
push
lea
lock
add
test
inc
clc
hlt
push
popa
push
out
dec
test
fistl
sub
loope
push
sbb
fisubrl
sub
jge
pop
divb
movsb
lods
gs
pop
test
xchg
push
loope
idivl
and
in
sub
pop
loopne
in
test
lods
iret
pop
pop
shlb
pop
jp
out
inc
mov
popf
int
das
fucomp
out
movsb
and
scas
aas
ss
nop
or
and
roll
cmp
or
dec
inc
in
and
mov
and
mov
lods
cmp
sar
loope
mov
je
fistl
jb
pop
in
lock
cli
test
sbb
aaa
imul
dec
ss
dec
sub
adc
cmpsb
inc
jo
loope
insb
nop
popf
sbb
lea
movsb
push
notb
lahf
mov
xchg
push
sbb
jl
adc
mov
push
push
xchg
cmp
iret
loop
in
jge
mov
and
rol
adc
lods
mov
je
movsl
fcompl
adc
addr16
push
stc
lret
sbb
jbe
test
lret
jns
insl
push
xor
out
lcall
push
push
and
xchg
jle
test
xchg
dec
pop
clc
xor
xchg
mov
cwtl
popf
mov
gs
mov
dec
push
cmc
nop
mov
in
arpl
sub
addb
movsb
jle
or
fcoms
push
sbb
cli
das
movsl
mov
pop
cmp
test
xor
dec
or
stc
lods
rorb
sub
out
cmpsl
xor
mov
sbb
xchg
out
lret
roll
stos
push
pop
mov
mov
cmp
mov
lcall
mov
insb
imul
and
or
ret
lret
js
mov
mov
ljmp
je
in
cltd
mov
inc
adc
rorb
adc
mov
out
popa
popf
loop
dec
insl
dec
int
cmpsb
outsl
sub
frstor
inc
in
pcmpgtd
std
lret
jge
sbb
outsl
add
pop
arpl
pushf
inc
das
test
xchg
test
les
xor
inc
cmpsl
push
fwait
push
rcrb
jae
cwtl
nop
ret
into
fisubrl
fs
rorl
fisttps
pop
stos
push
imul
inc
push
jae
jno
sub
scas
aas
hlt
and
pop
pop
xchg
adc
and
push
xchg
and
insb
idivb
fdivrs
sub
add
add
mov
in
pop
shrb
fs
push
shlb
jl
iret
cmp
jns
mov
fs
fcmovnu
test
push
sbb
or
cmp
inc
or
cmc
insb
and
shll
retw
daa
movsb
dec
mov
orb
push
shll
daa
adc
mov
daa
js
out
jge
sub
pusha
in
mov
movsl
pusha
mov
aam
and
hlt
xchg
dec
or
in
push
mov
and
clc
cmp
xchg
mov
sub
sub
stc
in
push
iret
sbb
leave
movsb
mov
leave
mov
jne
adc
loopne
lcall
mov
negb
pop
or
and
sbbb
fadds
test
inc
shl
lock
mov
stos
cld
stos
mov
icebp
cwtl
adc
xchg
ret
fstps
xor
xchg
inc
nop
adc
ret
pusha
nop
push
sbb
adc
mov
popf
cmp
outsb
rorl
fmull
outsl
mov
xlat
add
push
pop
push
cld
or
mov
mov
jl
jle
jo
jo
adc
into
popa
stos
and
jmp
push
cmp
cmpsb
int
push
nop
pop
gs
mov
dec
rolb
or
pushf
dec
add
fld
sbb
push
inc
sahf
mov
dec
sub
je
hlt
inc
mov
sub
imul
push
inc
and
gs
notl
cmp
xlat
dec
mov
lock
lods
lods
jo
jge
and
jg
push
push
cmp
clc
cwtl
aad
dec
sub
and
cmc
mov
pop
xchg
mov
cmp
ret
shrl
and
cwtl
cli
lds
sbb
cmpsb
jae
leave
adc
cmp
es
pop
adc
dec
adc
fs
fwait
jg
ds
sbb
fxch
andl
xchg
pop
data16
cmp
add
dec
add
stos
loope
pop
into
cmp
add
test
xchg
sbb
outsl
nop
notb
ret
outsl
mov
push
push
pop
ljmp
in
lahf
adc
cmpsl
sahf
stos
or
or
test
push
mov
fmull
adc
adc
cmc
lock
mov
xor
sub
adc
mov
mov
test
or
lea
xor
mov
ret
int
jle
lcall
fistps
mov
cmpsb
inc
es
adc
inc
push
pop
fwait
cmp
jo
mov
shlb
fldenv
mov
jl,pn
mov
sub
xchg
loope
clc
jecxz
inc
fmulp
insl
test
ret
in
popf
sbbl
into
mov
add
sbb
nop
push
mov
lods
dec
lods
data16
repz
ror
stc
cmpsl
in
repz
sub
js
movb
push
add
inc
or
rolb
pop
xchg
jle
shll
or
inc
jecxz
negb
loop
cld
jge
arpl
sbb
xchg
insb
jecxz
cmp
mov
cwtl
xchg
xor
test
jns
xchg
das
inc
xchg
lea
pop
xchg
or
sub
jnp
aam
push
push
pop
sbb
in
sbb
jo
jl
lock
gs
xchg
orl
push
inc
icebp
mov
cmp
mov
lods
iret
add
adc
pop
ds
movsl
sbb
movsl
stos
xchg
je
push
leave
jecxz
test
in
ret
mov
push
scas
imul
gs
fwait
mov
cmc
sub
cltd
test
xor
scas
and
or
fmull
pop
in
adc
scas
mov
mov
orl
push
test
in
sbb
cmp
in
inc
jp
enter
jmp
mov
mov
imul
adc
add
jo
mov
sub
add
cmp
inc
enter
out
cmpsb
aas
and
out
scas
adc
std
jl
pop
lds
add
mov
add
mov
and
test
inc
mov
cwtl
mov
adc
sub
adc
cmp
mov
rclb
cmp
mov
dec
mov
sub
sbb
pop
jp
out
jp
iret
pop
sub
push
push
push
cmp
in
scas
sti
pop
or
cmpl
loope
ret
imul
jp
inc
imul
imul
repnz
cli
cs
or
repnz
cmpsb
add
ficoms
sahf
aam
sbb
call
lea
dec
stos
pop
and
pop
pusha
sbb
repz
out
fwait
jmp
push
push
cmp
dec
aaa
js
lret
leave
rorb
mov
mov
cmpl
test
insb
cmpsl
lea
add
ja
lea
shrl
lds
add
mov
daa
cltd
sbb
adc
jmp
lret
cmp
mov
inc
or
lretw
mov
jo
fsubl
lea
pop
adc
pop
inc
test
gs
mov
xchg
popa
pop
push
cmp
rclb
mov
jg
or
sti
mov
inc
cmp
into
fbstp
cmpsb
sub
iret
mov
xchg
dec
int
mov
mov
pop
sbb
stos
js
call
push
ret
xchg
imul
jo
mov
data16
aam
or
mov
mov
loop
fmull
and
sbbb
data16
loopne
mov
mov
cmp
mov
lahf
jnp
out
mov
mov
push
mov
scas
pusha
cmpl
pop
jo
pop
pop
push
in
adc
dec
in
jp
cmp
xor
sbb
push
jb
sti
jae
jmp
cwtl
cs
cmc
push
mov
xchg
lcall
jg
faddl
imulb
hlt
in
jecxz
test
stos
push
cld
lods
or
insl
out
push
pop
cmpsb
jnp
cmp
ja
rclb
fisttpll
cmc
push
mov
pop
push
cmovg
ss
adc
notl
iret
xor
adc
sbb
pop
popf
popf
cmp
invd
shll
clc
jle
in
rcrb
cwtl
push
rorl
sub
inc
pop
daa
cmp
adc
mov
inc
xor
bnd
insl
shlb
test
add
inc
dec
push
and
lods
lahf
mov
xchg
and
pop
cmpsl
mov
xchg
pushf
push
ds
sbb
lds
jl
adc
js
loope
in
inc
cmpsl
sub
push
push
adc
popl
sbb
divl
mov
inc
rorl
ss
pop
pop
mov
lcall
cmpl
xchg
imul
mov
cmc
hlt
add
jmp
nop
add
addr16
inc
push
sbb
mov
mov
pop
insl
mov
xor
or
push
leave
fidivrl
pop
pop
inc
push
ret
mov
ficompl
mov
xchg
fldcw
push
aas
inc
jl
xchg
imul
inc
pop
aaa
jle
adc
nop
fldenv
cltd
sub
fistpll
mov
mov
add
jecxz
aad
repnz
push
inc
movd
sub
stc
std
add
xchg
cmp
daa
sbb
outsb
cli
sahf
add
dec
jae
jmp
daa
jno
xor
loopne
in
jg
lock
arpl
dec
pop
inc
int
repnz
adc
adc
push
and
in
jle
cmp
adc
cs
pop
push
or
dec
aam
mov
xchg
pop
xchg
mov
add
loop
loopne
cmp
add
sub
xchg
jbe
cwtl
scas
popf
jne
xchg
lods
popf
rolb
loopne
pop
fisttpl
xor
jo
cmp
pop
das
sti
out
jl
insb
lds
push
pop
sbb
push
jns
mov
shl
pop
je
ljmp
sub
push
pop
push
or
scas
jae
call
jecxz
adc
pop
xchg
cltd
pop
pusha
inc
jp
ljmp
jge
outsl
mov
leave
inc
mov
mov
decb
sahf
jmp
rclb
sub
call
pop
and
repnz
test
pop
lret
mov
inc
jg
loopne
mov
cmp
sbb
push
scas
mov
int
insb
in
pop
pop
push
jbe
sarl
inc
jne
fnstcw
loopne
pusha
mov
inc
hlt
nop
mov
inc
lods
pop
daa
xor
add
movsl
sbbb
rolb
sbbb
js
or
ds
lods
mov
popf
mov
adc
xor
nop
xlat
sub
or
fbld
mov
xchg
lods
inc
fstpl
adc
mov
xchg
popa
lods
cmp
xchg
pop
in
adc
or
scas
repnz
ja
mov
in
les
or
mov
ret
xor
inc
pop
scas
pop
xchg
dec
and
cmp
ret
mov
sbb
xor
popa
pushf
and
sbbb
stc
cltd
cmp
jmp
adcl
push
mov
sbb
lcall
xchg
stos
idivb
es
js
mov
xchg
daa
cmp
into
xchg
pop
mov
adc
adc
mov
test
jp
stos
mov
es
pop
cmp
xchg
mov
mov
repz
sbb
je
adc
xchg
aad
mov
daa
mov
outsb
inc
mov
jnp
jae
fwait
pop
inc
sbb
cld
xchg
dec
out
test
mov
pop
push
insl
cmpsl
aaa
sbb
ja
stc
pop
loopne
jb
fcoml
xlat
rorl
ret
out
push
pushf
jne
xchg
dec
imul
test
push
xor
jo
das
jle
leave
adc
adc
ljmp
fcmovb
and
sub
aad
xor
push
pop
and
stos
cltd
xchg
insl
jle
cltd
std
pop
data16
mov
popa
push
mov
repnz
ds
xchg
mov
cmp
dec
sub
enter
inc
insl
push
sbb
lods
enter
repz
cmpl
cltd
cld
sub
cmpsl
pop
sbb
cmp
addl
xor
in
pusha
sub
mov
hlt
scas
or
add
sub
mov
jmp
data16
sub
mov
add
jge
es
in
push
leave
jno
push
sub
call
sub
push
mov
inc
sub
icebp
xorl
pop
mov
popf
sub
mov
inc
sub
xor
mov
in
add
mov
mov
push
dec
mov
neg
sbb
add
enter
adc
and
sbb
pop
shrd
sbb
cmp
out
mov
adc
adc
ljmp
xor
addr16
adc
add
sbb
pop
dec
out
sbb
pop
push
pop
jp
daa
push
out
adc
xchg
jg
push
inc
not
and
and
popf
insb
cmp
imulb
leave
loop
inc
jge
test
inc
lock
push
jmp
sub
adc
push
aaa
fwait
jg
iret
in
lahf
ds
mov
xchg
aad
imul
mov
lods
rcrb
cld
xor
cmpsl
dec
lods
sub
jo
and
xchg
pop
mul
scas
inc
ret
movsb
dec
mov
lods
xchg
sbb
std
rcll
mov
add
xchg
nop
xchg
mov
push
push
flds
push
or
ds
sbb
bswap
mov
test
jmp
xchg
jnp
lret
push
std
scas
mov
insb
mov
shlb
and
cmp
sub
add
inc
in
jp
pop
xor
je
movd
mov
inc
xchg
pop
adc
jge,pn
dec
push
aas
jnp
dec
sahf
jecxz
repnz
repnz
out
sub
push
ret
jl
in
ret
es
xor
xor
sub
lahf
and
test
pushf
rolb
pusha
mov
cmp
nop
or
pop
or
and
fcomp
arpl
jbe
or
in
inc
sub
cmp
pop
aaa
inc
xor
pushf
loope
xor
test
sbb
stos
jns
push
xorl
sbb
xor
orl
iret
add
repz
mov
aas
mov
dec
in
sbb
and
cmp
or
pop
shlb
gs
call
jmp
sub
loop
int3
xchg
shrl
xchg
test
xlat
jne
and
push
cmpb
mov
aad
popf
xchg
jae
inc
sbb
cli
sbb
inc
daa
push
fadds
fistps
ret
pushf
fidivrl
add
cmp
mov
mov
std
or
dec
lods
nop
dec
or
icebp
sbb
xchg
jle
xchg
out
mov
mov
shll
hlt
shrb
popf
jb
sbb
jg
sbb
roll
adc
scas
fidivrs
cmp
mov
cmpsl
mov
add
jle
cmp
xor
aaa
hlt
xchg
xchg
stos
mov
fisttpl
cmpsl
mov
pushf
dec
mov
outsl
movsl
pop
es
adcb
xchg
sbb
test
out
pop
pop
jns
mov
rcll
test
aaa
jmp
bound
dec
jge
xor
sbb
es
push
popl
aas
dec
inc
push
adc
sub
push
movsl
xor
jp
jns
sbb
cltd
sub
in
and
clc
or
mov
mov
xor
add
scas
inc
std
mov
adc
pop
mov
sahf
std
scas
cmp
dec
push
cmp
sbbb
dec
inc
in
sub
addr16
cmc
das
lcall
enter
stos
lods
loopne
push
ja
mov
cmpsl
mov
test
dec
push
aas
outsb
lcall
fs
inc
and
imull
test
std
and
lods
jo
outsl
leave
loopne
iret
loope
xchg
int
inc
dec
adc
pop
out
add
and
dec
sbb
jmp
insl
add
in
jns
repnz
aad
jp
imulb
daa
int3
out
jp
loop
push
ss
pop
jecxz
fwait
mov
fs
push
or
mov
lahf
sub
pop
xchg
stos
or
dec
mov
xchg
fldl
int3
lea
scas
and
ficompl
add
sarl
or
cmpsb
mov
popf
enter
jb
or
in
jle
pop
inc
mov
stos
ss
push
xor
addl
push
das
push
jns
cs
push
lret
inc
sub
adc
sub
mov
mov
add
testb
fcmovb
mov
dec
or
dec
outsb
out
dec
mov
ja
fsubl
push
mov
mov
aas
adc
int3
mov
jnp
inc
push
adc
movsl
popa
mov
pusha
sti
mov
pop
loope
adc
sahf
sub
push
jge
dec
xchg
out
in
ret
fadds
push
mov
mov
inc
mov
divb
sbb
sbb
lods
idivl
pop
shll
test
xchg
sub
sbb
in
sub
aam
sub
shrd
mov
add
cmpb
mov
cmp
lods
shlb
lock
jno
mov
jne
xor
in
add
add
add
mov
out
sub
fnstenv
cmp
pop
xchg
jecxz
sbbb
pop
inc
fs
lods
jmp
in
bound
outsb
rep
andb
or
mov
shll
jns
orb
hlt
mov
stc
mov
repz
in
popf
xchg
lret
mov
sbb
pop
sub
cmp
pusha
pop
push
cmpb
cmpsb
adc
ret
test
jecxz
add
jg
push
dec
leave
das
push
and
push
xor
pop
test
fistpll
leave
ja
xchg
push
stos
test
mov
mov
scas
jecxz
arpl
xor
es
adc
inc
out
xchg
mov
popa
inc
movsl
sub
jecxz
jb
push
mov
loope
in
mov
cli
inc
cmpsl
cmpsl
and
xor
or
shlb
or
cmp
mov
ja
add
sbb
or
jno
aam
xchg
mov
jae
adc
mov
sahf
sub
call
gs
or
sbb
or
fsubrp
mov
sub
cmpsl
push
mov
jnp
dec
in
pop
inc
xchg
mov
add
and
rcl
jne
mov
pop
icebp
lret
loope
test
pop
jno
inc
shll
adc
divl
lcall
jns
dec
std
add
fs
cmpsb
pusha
jns
cmp
in
stc
lock
shrl
cli
xchg
jb
mov
dec
jns
cli
push
lea
nop
or
xor
arpl
loop
xchg
adc
cmpsb
mov
orb
cmc
jge
aam
or
dec
xor
push
mov
in
mov
fmull
dec
out
repz
in
daa
mov
xor
loopne
jb
mov
mov
adc
add
jp
pop
mov
push
sub
fsubrl
rclb
dec
out
jb
inc
push
mov
pop
mov
adc
sahf
arpl
in
cs
jne
push
popf
push
push
or
jns
ret
loopne
pop
push
loop
sbb
adc
add
rorb
test
lds
sub
sub
sahf
xchg
cmp
pushf
xabort
lret
push
les
leave
add
movsl
imul
mov
ljmp
adc
pop
sbb
pushf
nop
or
sub
repnz
insl
push
adc
or
push
in
sbb
mov
mov
and
sbb
cmp
jb
leave
jae
inc
in
scas
iret
sub
mov
adc
aam
cs
add
cmp
aaa
int3
add
test
mov
add
andb
push
fwait
mov
xchg
aaa
xor
fs
sahf
sbb
mov
mov
into
int
call
add
sbb
icebp
enter
lods
rorl
stos
adc
xor
mov
bound
pop
test
popl
ljmp
and
cmp
sbb
bound
inc
aam
lods
xchg
inc
mov
shll
xor
in
std
cld
stos
and
es
int
rolb
repz
jecxz
jecxz
int3
into
lretw
out
dec
iret
xchg
popa
out
or
add
fcmovbe
scas
pushf
dec
rcrl
push
cwtl
xchg
lret
mov
sbb
push
or
jp
lret
leave
cmp
adc
dec
and
sub
insl
int3
sbb
into
mov
fldenv
jmp
add
repz
popf
xchg
xor
mov
mov
mov
out
movsb
ds
mov
xor
addr16
data16
sbb
pop
and
xorl
or
aad
jp
sub
jno
subb
dec
cld
je
out
pop
xor
cmpsb
jmp
cmc
cltd
mov
fs
ud2
iret
insb
push
insb
out
dec
cmp
mov
jle
in
ficompl
in
cwtl
and
or
xor
incl
rcrb
dec
dec
dec
ja
mov
subb
icebp
ja
cmp
inc
jne
sub
sahf
fidivl
mov
call
dec
lods
clc
loopne
jae
jo
inc
mov
out
and
jmp
pop
cld
jae
js
movsl
push
cmp
inc
push
inc
xor
es
mov
cmp
imul
push
lods
fcomi
ret
stos
adc
xor
inc
jecxz
fsubrs
and
sub
adc
fstpl
sbb
mov
add
fsubr
orl
js
gs
repz
xlat
xchg
pop
popf
sbb
mov
push
jne
ja
push
cld
jno
mov
out
lret
pop
stc
sti
ds
or
sub
test
lcall
adc
leave
xchg
rolb
and
pop
jg
ss
pusha
cmp
push
ss
add
ds
push
push
and
mov
jb
push
lret
xchg
cli
mov
dec
push
cmp
shll
cmp
mov
add
mov
push
stos
movsbl
cmp
jecxz
bnd
pushl
or
or
ds
mov
fidivl
push
mov
imul
ljmp
aaa
mov
mov
fiaddl
mov
jecxz
pop
xchg
inc
sti
cmp
ja
adc
lcall
xchg
xor
push
xor
pop
and
lods
in
jbe
push
jge
dec
xchg
lds
les
mov
loopne
lds
push
ret
fnstsw
mov
or
sbb
cmp
adc
cmp
jo
movsb
lahf
xchg
pop
mov
imulb
rorb
mov
or
pop
in
movsb
pop
loop
test
dec
add
mov
dec
dec
add
mov
neg
push
ja
cmpsl
cmp
mov
lret
and
cmp
jge
fdivs
ficomps
leave
or
pop
cs
into
xor
xchg
inc
ret
pop
cwtl
add
mov
mov
sbb
out
cmp
jb
dec
jle
adc
stos
nop
ja
adc
lahf
cli
cmp
sub
arpl
sub
dec
leave
int3
dec
jle
lahf
xchg
xchg
add
in
add
sti
push
sub
mov
xchg
or
inc
shrl
lock
out
sbb
lods
out
or
out
pop
or
fildl
adc
in
enter
xchg
int3
mov
lds
add
adc
xchg
mov
jg
clc
pop
dec
adc
xor
dec
inc
pop
xchg
or
pop
mov
jge
mov
dec
fisubl
cmc
ss
add
sbbb
movsb
push
jne
add
jmp
jecxz
push
inc
ficompl
lret
loop
fildl
push
mov
xchg
leave
push
jecxz
ficoml
stc
xor
aad
cmp
jmp
sub
movsl
xor
jb
sbb
jno
push
shrb
push
enter
icebp
jecxz
cwtl
mov
lret
mov
pop
ja
push
mov
idiv
jecxz
jp
dec
test
les
pop
ja
dec
mov
imul
je
pusha
insl
popl
cmp
fidivl
aas
in
sub
mov
rep
out
adcl
inc
nop
jb
sbb
jl
cmpsb
jo
and
popf
xchg
orl
mov
push
jae
cmp
mov
loope,pn
pushf
nop
aad
out
inc
shlb
ljmp
sub
lods
orb
add
cmpsb
add
mov
mov
in
push
push
dec
loope
pop
ja
adc
imul
mov
out
mov
cltd
mov
bound
sub
ds
add
add
xchg
or
clc
into
ud2
test
jecxz
jne
std
daa
ss
addr16
filds
shlb
xchg
faddl
out
fnstcw
shl
clc
dec
mov
cmpsb
mov
jl
mov
fwait
dec
mov
outsb
add
test
aaa
jne
sbb
cltd
fs
push
or
xor
xchg
in
stos
sub
fisubl
push
jecxz
xchg
loope
cwtd
sub
loopne
and
dec
mov
js
jne
pop
push
jl
sahf
xor
xlat
ljmp
mov
xchg
adc
andl
lods
lock
adc
ss
leave
and
xor
pop
mov
push
or
loope
push
sahf
popf
xor
std
cmp
push
mov
jmp
and
xchg
inc
ljmp
add
mov
orb
dec
xlat
mov
imul
roll
fstps
sbb
aam
adc
mov
lock
insl
xor
add
test
repz
lret
mov
negl
jg
pop
das
jnp
or
dec
sbb
sarb
sub
sbb
pop
mov
pop
int
hlt
pop
ret
mov
ljmp
test
fwait
cmp
es
inc
loope
mov
pop
dec
faddl
cmc
je
pop
jb
inc
call
sbb
sbb
lret
std
jne
shlb
out
mov
pop
stc
std
and
roll
sbb
test
pusha
inc
dec
push
rcrb
jge
push
scas
and
adc
push
out
add
cli
sbb
lods
mov
mov
push
lret
mov
hlt
fiadds
mov
dec
sbb
inc
out
sbb
ja
or
fimuls
repz
sbb
pop
gs
pop
mov
rorl
jne
sub
cmc
ficoml
cmp
inc
ss
jg
test
roll
dec
and
dec
sbb
stos
xchg
stc
rclb
testl
jnp
sarb
cli
sub
popf
jnp
insl
roll
jne
xchg
jo
jae
je
dec
leave
ret
dec
xor
mov
push
cwtl
es
in
std
out
sub
push
jle
xor
loop
or
pop
shlb
mull
xlat
adc
jno
leave
fisubl
scas
orl
jmp
adc
inc
packsswb
es
and
pop
mov
xor
sahf
pop
fcoml
pop
ret
daa
cs
out
pop
iret
push
pop
mov
cld
jno
dec
jge
or
rcrb
adcb
arpl
inc
nop
jg
sub
leave
out
dec
jnp
das
imul
shl
aaa
out
sub
hlt
pop
push
and
pop
mov
sbb
sub
sub
roll
push
pop
xor
repz
cmp
pusha
ljmp
aas
mov
jnp
inc
mov
rclb
push
fnstenv
scas
mov
and
icebp
pop
aam
popf
push
jns
pop
arpl
mov
adc
xchg
cmpl
push
adc
fisttpl
xlat
cmp
sbb
lea
cltd
push
mov
sti
push
insl
dec
or
mov
fadd
outsb
inc
repnz
dec
outsb
or
add
dec
daa
aas
es
push
mov
pop
mov
popa
mov
dec
mov
xchg
aam
int
or
xor
mov
sbb
enter
or
pop
popf
sub
jae
jb
pop
repnz
mov
pop
subl
push
xchg
inc
inc
mov
stos
roll
adc
out
inc
pop
outsl
add
lods
adc
jne
xor
scas
imul
mov
mov
xor
aas
mov
call
cmp
fldcw
pop
fcomi
cmp
inc
leave
ror
jl
pushf
test
rolb
mov
sbb
pop
mov
cmp
pop
or
cmp
mov
dec
jnp
ret
cmp
and
lods
adc
adc
xor
jo
inc
stos
adcb
mov
rolb
adc
mov
add
pop
in
or
js
fucom
and
rclb
in
dec
cmp
sub
sub
sbb
mov
jo
push
mov
xor
test
sbb
push
or
subb
sub
sbb
sub
sbb
outsl
fcmovbe
xchg
loopne
test
bound
mov
mov
fadds
mov
dec
jbe
xor
xor
insl
fimull
shr
leave
cs
push
add
mov
jno
pop
pop
out
cmp
repnz
decb
dec
imul
dec
push
cmp
sarl
loope
or
test
andb
mov
shr
inc
dec
mov
jno
xchg
jb
hlt
sub
or
inc
filds
mov
pop
dec
dec
fs
sbbl
rclb
hlt
in
push
xchg
mov
lock
das
dec
pop
mov
pop
adc
inc
ljmp
test
cmp
outsb
aaa
mov
out
lret
mov
les
rcrb
out
notb
nop
std
xor
dec
sbb
out
xchg
enter
add
jnp
cmp
ljmp
out
iret
pushf
or
push
fwait
scas
xor
adc
aas
pop
ljmp
fsubrp
pop
add
daa
dec
xor
inc
jne
je
repnz
push
arpl
and
and
inc
sbbl
pop
mov
xchg
lret
xchg
and
cmpsb
cmp
outsl
mov
scas
rcr
and
adc
ret
popa
sub
into
ja
icebp
mov
aaa
icebp
sbbl
xchg
pop
fistpl
ret
and
mov
ljmp
or
push
xor
sar
lret
cmp
imul
mov
daa
jno
cs
xor
popa
call
in
int
xchg
js
jae
icebp
out
lods
fldt
ret
ret
xchg
pop
mov
cmpsb
adc
jns
inc
or
jg
pushl
or
pop
or
inc
mov
cmc
xor
pop
mov
std
sbb
je
adc
add
mov
mov
es
jecxz
ret
xchg
jo
pop
insl
xor
mov
and
test
inc
fisttpll
outsb
mov
addr16
dec
or
nop
or
sub
arpl
pusha
insb
das
pop
repz
xchg
daa
int
cmpb
jp
jnp
rcrl
dec
pop
cmp
lret
adc
dec
sub
xchg
push
pop
xor
cli
cmpsl
icebp
jne
mov
add
shll
cmpsl
xchg
cld
xchg
adc
or
sbb
mov
mov
cli
or
push
lahf
jg
push
jbe
xchg
pop
mov
in
xchg
call
pop
int
add
mov
xor
push
lods
rcll
adc
clc
int
aaa
and
cmp
mov
xchg
test
es
shl
adc
cmc
ficompl
fldenv
dec
pop
push
sbb
mov
inc
sti
fs
cli
push
sub
adc
cmpsb
cmp
sub
sub
in
xor
mov
test
pushf
mov
xchg
cmpb
inc
push
jecxz
das
mov
dec
jg
add
push
jmp
cld
int
aam
xor
xor
cmp
and
out
push
rorl
dec
and
xor
je
or
jb
das
into
stc
dec
push
ret
xor
mov
mov
cmp
je
leave
das
adc
inc
mov
jge
lea
lods
pop
cmpsb
jl
adc
jecxz
push
and
mov
mov
mov
push
ret
mov
stc
adc
int
lods
rep
mov
jecxz
jbe
or
pop
in
jae
mov
cmp
sbb
sub
aas
lock
xchg
lcall
aas
pop
repz
test
dec
sbb
aas
adc
jbe
aad
in
or
cmp
insl
es
bound
dec
pushf
inc
popf
fcmovne
add
sub
fcomi
jecxz
cmpsl
pop
imul
adc
lds
ss
push
push
sub
cmp
sbb
mov
pusha
loopne
rorl
icebp
pop
push
push
pop
push
sahf
push
inc
andnps
sti
in
inc
fnsave
cmc
ret
aas
in
outsl
dec
dec
jbe
fldenv
pusha
xchg
lcall
sbb
sar
xchg
xchg
test
xchg
jmp
shlb
and
cmc
jmp
js
movsb
ds
adc
outsl
test
movsb
push
out
add
jge
pusha
mov
ljmp
aad
bound
pop
pop
orb
rcrl
lods
jecxz
jle
aas
jmp
mov
stc
pop
fistpll
out
push
mov
daa
aam
mov
mov
insl
pop
enter
leave
ja
mov
rcll
aam
add
inc
test
je
xchg
inc
jp
ds
or
mov
mov
pushf
add
dec
add
in
sbb
rcl
fbstp
jbe
ds
add
mov
mov
outsl
sbb
cs
push
sbb
std
xor
xor
ds
imul
mov
sub
xchg
bound
aas
mov
or
inc
dec
lods
sbb
jmp
test
pusha
icebp
xchg
jecxz
push
push
int3
lret
add
leave
aaa
sbbl
sbb
or
sbb
inc
push
mov
das
sbb
sbbl
sub
pop
mov
jp
roll
les
insl
jbe
cli
incl
repz
out
mov
inc
in
out
test
out
or
push
cmp
xor
vandpd
push
pop
adc
js
das
xlat
inc
lods
dec
cli
inc
jnp
int3
mov
sub
cmp
out
movsb
hlt
into
sbb
inc
push
cli
inc
jne
xor
mov
and
jl
sbb
dec
in
test
pop
jmp
aam
and
fiadds
orb
pop
mov
shll
in
jnp
js
mov
jno
mov
mov
dec
and
mov
rcl
in
cs
jmp
adc
test
sub
dec
clc
add
lods
pop
xorb
lods
pop
insl
icebp
dec
push
add
lahf
inc
adc
push
movb
scas
sbbl
les
and
aaa
repz
or
dec
xor
enter
lcall
idivl
inc
pop
mov
int
fdivrs
clc
jmp
mov
je
push
pop
push
mov
jmp
or
mov
pop
stc
xor
push
xchg
in
fnsave
xchg
jg
or
incb
jmp
dec
lods
lds
push
fucomi
mull
push
and
xlat
lret
adcb
dec
test
xchg
lret
add
jp
jo
push
shrb
std
dec
mov
add
dec
lahf
and
lods
mov
insl
push
cmp
jecxz
sbb
lods
in
inc
scas
lock
dec
sbb
fstpt
out
xor
loope
int
pusha
lods
lahf
jne
pop
pop
ss
xchg
lret
js
in
jl
adc
mov
mov
mov
pop
ljmp
sbb
leave
dec
and
fdivrl
adcb
es
sub
shrl
or
je
pop
pusha
repz
es
addr16
cmp
aaa
cwtl
inc
pop
add
pop
imull
dec
ret
fsubp
pop
mov
sahf
bound
popf
ljmp
out
out
lock
push
lock
push
push
add
push
fsub
in
sub
add
js
int
add
xlat
mov
dec
cmpsb
dec
sub
jp
pop
fwait
jns
mov
push
sbb
test
sbb
cmp
hlt
out
iret
in
outsl
negb
nop
mov
xchg
jmp
subps
mov
pop
fildll
data16
push
adcl
fisubl
or
xor
push
sub
xlat
push
jecxz
lds
mov
dec
xor
orl
iret
xor
jg
sub
sbbl
cmp
out
push
xor
js
lock
ret
adc
add
mov
jne
xchg
bound
xor
mov
mov
cmpsb
movsl
cmp
popf
sbb
stos
lret
mov
xchg
inc
jmp
dec
jl
addr16
fcoml
sub
scas
sub
jae
or
cli
push
mov
xor
xchg
and
rcr
bound
xchg
adc
das
and
jmp
cmpsl
jle
pop
pop
fisubrl
outsl
mov
lods
ret
jae
mov
ret
mov
cmp
pop
mov
rcll
pop
andl
jnp
rol
sub
dec
mov
lea
mov
cltd
mov
adc
lock
lods
test
pop
jnp
test
push
xchg
negl
xor
popa
cli
mov
in
popa
xor
sub
jno
jg
jp
or
je
xor
pusha
fsubrl
popf
inc
arpl
adc
repz
lea
les
stos
jecxz
aaa
loop
in
in
ret
icebp
mov
xchg
sbb
push
push
ss
xchg
popa
in
mov
sti
jle
add
into
pop
outsb
repz
aas
cli
mov
nop
sahf
in
call
jb
pop
lods
stos
cld
in
lock
jecxz
pop
loopew
xor
push
and
loopne
out
cmp
arpl
mov
std
popa
sbb
loop
add
adc
pop
jle
sub
mov
mov
adc
lods
push
int
pop
sub
movsb
or
stos
or
fs
sub
outsl
cmp
sbb
cli
sbb
int3
jl
scas
out
popf
loop
jae
mov
and
mov
dec
xchg
mov
and
mov
cli
sub
pop
test
rorl
cmc
sahf
ficoms
test
scas
mov
lock
and
mov
and
lock
popa
out
jmp
ja
sbb
xlat
test
jmp
mov
jnp
push
sbb
xchg
push
aas
sbb
add
xchg
sbb
dec
pushf
push
dec
jmp
icebp
dec
cmc
leave
fisubl
sti
popa
xchg
stc
out
mov
clc
fwait
outsl
shll
mov
pop
insl
rorb
mov
sbb
and
add
rcrb
pusha
bound
out
adc
sbb
aam
sbb
out
jns
mov
adc
test
rorl
jne
adc
cmpsb
scas
cld
xor
mov
add
add
mov
cld
imul
inc
mov
out
ljmp
xchg
pop
pop
es
mov
stos
cmp
mov
aam
ret
mov
or
ss
add
insb
cld
test
inc
jl
xor
repz
push
into
dec
inc
cmp
adc
add
and
lock
scas
cmp
cmp
in
je
test
adc
outsl
fdivs
lock
push
pushf
out
jecxz
mov
mov
stos
sub
lea
dec
scas
jl
cmpsb
add
mov
das
pusha
sbb
pxor
mov
add
bound
loop
mov
and
add
add
aam
ret
push
or
dec
adc
mov
dec
jno
imul
adcb
push
mov
int
out
stos
xor
in
insb
mov
arpl
sub
dec
xchg
addb
cmp
lods
or
out
sub
iret
inc
test
and
ds
mov
dec
data16
lcall
enter
inc
repnz
mov
testl
mov
and
out
mulb
arpl
loopne
js
loopne
icebp
jp
dec
js
mov
aaa
js
pop
push
je
push
pop
and
pop
nop
lds
fsubs
push
dec
stos
fidivl
ret
mov
arpl
jl
jl
cmp
insb
push
push
hlt
jbe
cmpsl
out
push
lahf
xor
test
idiv
enter
sbb
fwait
sarl
mov
aam
pop
sbb
insb
testl
scas
pusha
mov
int
stos
nop
dec
adc
inc
imul
mov
in
stos
leave
stc
out
add
mull
pop
mov
in
jno
ja
or
xor
dec
pop
into
cwtl
fmull
div
scas
jg
jb
int
std
out
jae
pop
cs
dec
arpl
repz
push
fmuls
push
mov
aam
lds
mov
jecxz
jl
loope,pt
movsl
mov
leave
orl
hlt
dec
insl
lds
xchg
das
add
aas
dec
mov
add
xchg
call
add
sub
pop
shl
imul
int3
es
inc
sar
ss
sarl
push
mov
movsl
scas
pop
test
sbb
jb
cmpsb
push
jl
pop
rcr
dec
fucom
lock
push
adc
jl
stos
mov
insl
pushf
rcl
push
sub
jp
out
rcrb
mov
jg
cmpsl
out
adc
lret
mov
popa
cmpsl
les
adc
frstor
das
daa
fsts
push
and
outsl
movsl
dec
mov
dec
mov
mov
jl
shr
cmp
cmp
cmp
sahf
add
std
jmp
mov
mov
outsb
pop
lret
into
xor
fnsave
stc
mov
mov
aad
sbb
mov
loope
or
loopne
aaa
push
push
cli
inc
std
pop
in
into
mov
icebp
mov
pop
fidivl
sahf
insl
mov
fbstp
enter
movl
inc
movsl
adc
subb
push
and
mov
sar
and
dec
push
fnstenv
jg
pop
lret
jnp
and
sub
pop
lret
fcoml
adc
mov
movsb
sub
adc
fxtract
data16
mov
cwtl
outsb
in
les
lds
or
out
repz
adc
pop
cmp
in
xor
xor
into
jle
xor
imul
xor
ljmp
ja
hlt
je
add
test
lret
mov
data16
ljmp
in
outsl
mov
out
adc
dec
cmpb
popa
cmp
xlat
cli
int
inc
pushf
cli
mov
jns
imul
jle
push
sub
cltd
sub
notb
aam
add
fists
mov
push
clc
mov
nop
xchg
inc
lret
sbbb
fisttpl
pop
jmp
sarl
mov
ds
jo
es
imul
sub
in
jb
adc
je
cmpsl
mov
sub
xor
sbb
cwtl
in
push
xor
cmp
or
aas
or
cmpsb
ja
adc
mov
jp
sub
pop
ljmp
push
loop
inc
jb
pop
in
push
test
out
sub
jne
xchg
or
mov
cwtl
mov
das
test
dec
dec
xchg
pop
mov
cmp
shlb
inc
test
dec
bound
xchg
dec
adc
fucom
jecxz
clc
aaa
sarb
cld
xchg
and
outsl
ja
or
test
adc
sarl
xor
xchg
outsb
movsl
mov
nop
in
pop
pop
adc
inc
sub
ja
and
xchg
cltd
xchg
jns
jmp
pop
leave
adc
xchg
pop
jbe
lret
mov
jae
pusha
inc
insl
scas
call
or
mov
pop
imul
sahf
mov
sbb
es
pop
and
jo
sub
fiadds
loopne
cmpsl
cltd
divl
mov
out
ret
hlt
test
mov
imul
xor
inc
jns
in
dec
lea
and
sbb
int3
and
int
jle
mov
out
je
mov
lods
xchg
stc
jae
adc
and
cmc
sub
push
cmp
lret
pop
pop
jmp
and
aaa
lock
jo
cmp
movsb
or
push
jae
roll
xchg
fs
or
inc
mov
mov
mov
cwtl
pop
pushf
add
sub
pop
pop
xlat
xchg
xchg
push
out
movsb
xchg
cmpsb
jecxz
daa
popf
ret
push
push
xchg
test
stc
pusha
aad
mov
jb
fs
in
mov
xor
mov
test
inc
and
test
testl
hlt
push
popf
push
insl
fsubl
add
imul
in
cltd
ficompl
fidivrl
jo
dec
dec
or
mov
imul
xchg
shll
ss
jbe
mov
sahf
mov
pop
or
cmp
testl
sub
loope
out
or
imul
fsub
xchg
or
sbb
loopne
fmuls
aaa
cmp
ss
and
mov
adc
mov
popl
mov
xchg
jno
cmpsb
outsb
outsb
das
push
lock
leave
push
call
inc
push
dec
lahf
cmpsl
addl
mov
aam
sahf
clc
mov
dec
mov
ret
pop
jns
aam
inc
rorl
popa
adc
xor
xor
xchg
jb
mov
push
push
push
adc
arpl
imul
clc
or
mov
push
ja
adc
insb
fsubrs
mov
push
mov
add
lock
jmp
fdivr
sbb
das
cmpsb
inc
mov
pop
dec
push
push
xor
hlt
mov
mov
jae
push
aam
out
fsub
inc
fstpl
ret
xchg
aad
sti
jecxz
stc
loopne
jb
js
popa
in
sub
jns
sub
cmovge
push
mov
add
adc
sub
jge
loop
xor
sub
fsubrl
push
cld
or
or
mov
jae
cmpl
jno
add
add
pop
fiaddl
mov
cmp
xor
popa
mov
mov
iret
stc
scas
mov
mov
dec
lcall
in
cmp
jg
mov
test
leave
aad
cltd
sbb
cmp
pusha
xor
or
mov
jle
mov
inc
mov
fdivrs
push
mov
jnp
or
pop
in
and
jbe
add
xchg
call
fcompl
gs
xchg
cld
inc
push
mov
addl
dec
push
pop
das
fldpi
or
or
lock
loopne
shlb
fwait
mov
pusha
lods
adc
out
mov
jnp
pop
fcomps
mov
mov
and
adc
mov
hlt
jl
sbb
dec
add
gs
sbb
jo
and
lds
cs
outsl
lds
adc
add
xor
loopne
xchg
sbb
adc
popf
fcmovnb
mov
push
sbb
or
adc
loop
mov
jb
sahf
shlb
out
mov
stc
fidivrs
dec
test
push
mov
jmp
in
sbb
adc
fnsave
inc
stc
insl
dec
mov
xchg
mov
fisubs
pop
lock
jb
and
xor
fmull
mov
aas
adc
xchg
hlt
stc
adc
sub
hlt
outsl
je
push
and
movsb
nop
mov
push
imul
pusha
xchg
int3
cmpl
pop
and
call
sbb
cmp
aaa
imul
sub
sbbl
arpl
leave
popf
cld
ret
jne
xchg
pop
or
imul
sub
mov
xchg
jne
jnp
mov
scas
xchg
aas
dec
cltd
out
test
adc
shlb
stos
fwait
in
dec
inc
ror
js
mov
xchg
rolb
dec
push
ljmp
adc
dec
xchg
pinsrw
jne
push
jnp
into
cmp
pop
and
sbb
andb
ja
or
aam
jmp
pop
pop
add
sarb
mov
movsl
mov
cmp
int3
fidivrl
fisubrs
pushf
mov
adc
xor
jle
mov
mov
dec
ljmp
cwtl
insl
loop
cs
mov
cmpsl
loopne
pop
mov
cld
xchg
xor
mov
mov
fldcw
sbb
pop
xor
jbe
xlat
jmp
outsl
push
xor
mov
push
and
lcall
div
mov
push
movsl
inc
andl
jl
loop
shlb
lret
daa
inc
jp
inc
adc
jg
dec
aam
or
test
call
outsb
js
ss
lods
fstps
stc
or
clc
ljmp
fwait
pop
scas
adc
rcrl
push
fidivrl
add
dec
jbe
sbbb
lahf
fs
dec
mov
rol
popaw
sbb
test
cltd
pop
xor
xlat
push
push
and
push
dec
jp
mov
jmp
std
cmc
pop
scas
dec
in
outsl
clc
and
cs
fucomi
and
cmp
out
or
leave
sbb
shl
aas
cmp
push
ljmp
adc
lds
mov
lret
cs
andl
jb
sbb
or
add
and
lret
aad
mov
and
enter
pop
adc
aad
mov
ljmp
sbb
push
mov
xchg
shlb
out
movsl
outsl
in
rolb
rorl
sub
fldenv
lods
mov
fs
pop
push
popl
mov
xor
xor
mov
lret
dec
cltd
or
add
cltd
test
mov
push
push
dec
nop
ficoms
mov
mov
loope
and
push
lahf
and
fmul
sub
or
shl
aam
test
outsb
fwait
test
cmc
ss
mov
mov
mov
stc
cmp
rcr
cmpsb
xchg
test
add
inc
push
xchg
push
hlt
jecxz
shrb
inc
in
jae
adc
popf
and
andb
rol
das
dec
test
sbb
mov
nop
push
jge
clc
lahf
sbb
sbb
cmc
adcb
jle
scas
stos
jb
scas
leave
das
push
mov
pop
imul
sub
xor
scas
in
std
cmpsl
fdecstp
or
cli
call
arpl
scas
adc
cmp
loopne
cld
imul
sub
xchg
loopne
push
pop
jno
sbbb
testl
inc
fs
shl
push
mov
ss
in
enter
into
jns
cmp
ret
mov
inc
iret
test
icebp
jb
xorb
sbb
pop
call
repnz
inc
lahf
fsubs
adc
dec
loopne
sbb
mov
mov
cmc
sarl
cs
insl
push
ret
cmp
jge
pop
inc
add
mov
xchg
addb
ficomps
addr16
fiadds
xchg
push
push
dec
mov
movsb
push
pop
jmp
test
pop
dec
inc
add
pop
jecxz
sbb
inc
push
aam
dec
lahf
add
xorl
push
in
cmp
mov
hlt
push
pop
dec
xchg
pop
sbb
mov
lods
mov
and
movsl
mov
cld
or
mov
pop
mov
and
fbstp
cmp
test
test
and
inc
pop
xor
out
test
es
mov
sbb
pop
mov
pop
jmp
xchg
or
popa
popf
call
subl
mov
enter
inc
outsl
out
and
dec
cltd
or
repnz
mov
xor
les
xchg
lods
pop
jmp
dec
and
mov
call
xchg
loop
hlt
flds
negb
jne
sbb
mov
mov
test
and
or
xchg
int
pusha
mov
dec
mov
mov
arpl
arpl
pop
out
sar
jp
jbe
jo
jb
mov
lahf
dec
cmpsb
mov
cmp
sbb
mov
push
push
ljmp
les
dec
sub
movsl
mov
js
adc
arpl
adc
push
aad
pop
mov
pushf
inc
lods
in
das
fs
aas
pop
mov
cltd
sub
pop
add
add
mov
pop
sahf
add
cmp
rcl
cmpsl
inc
add
and
cmp
dec
or
test
xchg
xchg
mov
add
or
sar
leave
add
add
pop
jp
lods
inc
rcrb
jle
in
xchg
fcoms
lcall
popa
push
jns
stos
mov
shrl
xchg
or
mov
cmp
ret
rolb
sti
jo
mov
mov
cmc
insl
adc
clc
sub
or
xor
add
mov
cmp
xchg
aas
lods
push
xchg
and
add
xor
mov
add
pop
daa
outsl
mov
arpl
sub
push
jne
aaa
sti
push
xchg
add
mov
mov
test
xor
das
popf
adc
ds
cmpsl
addr16
jae
mov
js
fnstcw
cmpsl
add
pop
mov
incb
fs
mov
sbb
mov
xchg
push
mov
ret
cmc
and
sbb
out
repnz
out
inc
lahf
fsubrl
push
xlat
outsb
mov
scas
mov
int
ds
jno
jne
and
stos
xchg
jge
xor
fwait
xchg
sbb
mov
inc
or
inc
xchg
cmpsl
cwtl
jns
mov
xchg
inc
xchg
js
and
int
push
seta
mov
sub
mov
adc
out
in
push
sbb
and
add
adc
or
add
notb
clc
mov
insb
lret
cmp
xor
xchg
xchg
outsl
leave
push
inc
pop
cmp
cmp
dec
dec
enter
sbb
test
addr16
or
test
cmp
inc
int
mov
pop
sbb
fmull
sbb
aam
rcl
push
pop
jae
aad
dec
les
insl
jl
js
mov
scas
fnstenv
in
imul
shl
enter
dec
jno
jmp
jbe
daa
inc
cmp
enter
xchg
adc
jae
and
out
pop
loopne
das
imull
in
push
jl
popa
mov
pop
aaa
cmp
push
cmp
iret
mov
out
or
sbb
cmp
inc
mov
sbb
pop
mov
fidivrs
jae
xchg
shll
leave
cld
pop
cltd
sbb
pop
xlat
insl
xor
addr16
scas
lods
mov
push
fs
sub
xchg
jge
out
insl
pop
test
and
pop
loopne
and
xor
ficomps
arpl
ds
mov
cmp
xchg
adc
add
sti
and
push
push
test
or
rcr
cmpsl
mov
gs
insb
fstpl
jg
push
adc
hlt
xchg
adc
xor
and
enter
cmp
or
push
mov
mov
dec
xchg
out
mov
stos
pop
inc
mov
aaa
fcmovnbe
xchg
loope
fcomps
arpl
hlt
test
andb
cmp
mov
cltd
daa
pop
icebp
ret
or
mov
or
mov
ret
enter
mov
push
xchg
out
xchg
repnz
call
neg
scas
iret
fmuls
jb
jnp
repnz
rorl
mov
pop
movsb
lahf
dec
pop
cwtl
sub
pop
push
clc
inc
fcmovne
iret
push
sub
sub
cld
mov
jmp
stos
iret
fists
dec
adc
mov
icebp
fdivs
mov
fsubl
scas
aam
pop
pop
js
imul
pop
xchg
mov
push
stc
test
loopne
subl
adc
stos
aaa
stos
stc
rcrl
xchg
aad
mov
mov
stos
xchg
xor
push
and
push
adc
and
xchg
test
icebp
add
mov
addr16
into
xorb
push
ror
sbb
xor
cltd
adc
add
push
lcall
sahf
aad
ljmp
xor
pop
insl
inc
jecxz
dec
xor
xchg
cs
dec
fsubs
inc
push
adc
call
stos
icebp
pop
insl
jl
dec
sti
pusha
mov
cmc
mov
popf
xlat
cmp
push
xchg
add
int3
les
jo
mov
das
les
dec
imul
shll
xchg
lods
pop
int3
in
cmp
bound
cmc
jns
ret
xlat
mov
push
jne
mov
mov
adc
dec
sbb
insb
xchg
mov
repnz
inc
hlt
movsl
pop
lock
fs
ja
fildl
leave
rclb
or
stc
push
shl
mov
es
frstor
xorb
lea
ja
pop
lret
push
xchg
pop
pop
icebp
sub
push
inc
mov
jle
shlb
inc
pop
or
or
repz
cld
loopne
shrb
outsb
and
push
lods
dec
mov
sbb
jp
and
mov
out
rorb
dec
push
or
movsl
jecxz
dec
gs
cmpl
xor
cmp
mov
adc
hlt
mov
ja
pushf
test
adc
and
adc
push
dec
adc
mov
mov
je
jg
and
jmp
arpl
icebp
pop
addb
cvttps2pi
jle
mov
sub
inc
pop
sahf
mov
shld
push
jl
pop
imul
jae
popf
or
push
repz
stc
ret
ja
mov
std
xchg
adc
inc
popa
push
adc
mov
cmp
mov
repnz
fistpl
iret
icebp
mov
adc
cmp
xor
dec
inc
and
cmp
sub
mov
adcl
popf
push
ja
add
jmp
andb
mov
xchg
cmp
mull
int
xor
cmp
xlat
arpl
adc
in
sbb
pop
jg
add
ja
xlat
mov
sti
cmc
sti
jmp
in
xchg
fdivrl
loop
cmp
sub
and
popf
into
test
add
je
ret
test
ss
rolb
popf
cmp
xchg
lods
test
shll
or
jge
jg
dec
fwait
cmp
cltd
sub
int
sbb
loopne
out
sti
fiadds
cmp
add
xor
jmp
mov
fldz
jns
xchg
and
out
xor
cmovae
nop
add
aam
push
mov
icebp
sub
jecxz
xchg
out
mov
sbbl
leave
rorb
pushf
mov
mov
adc
test
js
or
pop
and
or
ljmp
call
je
add
pop
add
mov
lret
icebp
inc
or
addb
jo
mov
adcl
mov
repnz
jmp
xchg
aad
jmp
jge
jbe
xchg
negl
and
dec
add
movsl
subl
xlat
mov
xchg
pop
in
xchg
movsb
scas
out
pop
lea
sbb
mov
repnz
insl
push
out
xchg
shl
adc
sbb
rcll
cmp
add
aas
jge
aas
inc
or
pop
int3
xor
std
imul
xchg
sbb
je
ficoml
rcrb
int3
pop
fs
fdivr
mov
shr
jne
sub
rclb
aaa
jle
imul
dec
jb
adcl
and
sbb
sub
push
fucomi
stos
xor
xchg
mov
xor
in
cvtps2pd
in
into
pop
push
push
jg
movsl
xchg
dec
mov
mov
in
push
cmp
push
fisubrl
arpl
push
mov
cmp
xchg
sub
insl
in
mov
xor
dec
mov
sbb
cmc
jo
push
fistpl
dec
adc
jae
int3
je
loope
hlt
pop
and
or
push
push
jg
sahf
cmp
inc
push
out
popl
push
loopne
inc
sub
dec
cwtl
jg
movsl
mov
cmp
inc
pop
ljmp
cli
pushf
mov
test
stc
es
aas
ret
outsb
pushw
shrl
bnd
jp
stos
cmpsb
and
xchg
jb
inc
jne
sbb
xlat
pop
and
xor
jp
test
push
mov
pop
push
fbstp
or
xor
int3
sub
nop
stc
cmp
jb
or
lods
lret
inc
mov
cmp
jno
xor
test
in
aas
movsb
xchg
outsb
sti
pop
sub
cmp
fistpl
or
sub
fst
test
arpl
and
adc
jo
call
or
xor
cmp
mov
bound
xchg
cmp
mov
inc
jne
and
xlat
sti
xchg
or
pop
pop
movsb
lods
mov
cltd
push
movsl
loop
sbb
push
xchg
hlt
mov
cmp
dec
idivb
cmpsl
fsubl
xchg
sub
xchg
sub
or
fdivs
sub
nop
lret
pop
imul
movsl
lds
fwait
mov
cli
push
pop
das
repz
and
icebp
repz
sbb
mov
mov
xchg
lret
pop
xchg
sub
test
sub
scas
inc
stc
mov
in
or
fwait
adc
repnz
adc
pop
cmc
lock
add
cmp
mov
add
jbe
scas
outsb
js
xor
popf
ljmp
dec
push
fistps
mov
lret
jne
jbe
jle
out
inc
test
cmp
xchg
jnp
jl
dec
movsb
inc
sysenter
js
in
out
push
inc
loop
iret
add
sbb
sbb
or
das
mov
nop
push
jle
pusha
in
div
repnz
push
cmp
loop
push
push
dec
decl
lret
mov
ror
and
sub
ds
fs
add
mov
cmpsl
aam
std
in
xchg
lods
in
flds
ljmp
jbe
push
cmpsb
mov
dec
daa
je
aad
pusha
pop
lds
inc
push
aaa
pop
sbb
addb
sti
push
sub
out
ds
add
std
and
push
pop
in
sub
mov
rcrb
mov
xchg
stos
jns
pop
sub
divl
xor
push
adc
mov
cmp
push
sub
notb
ljmp
leave
add
inc
ret
sbb
dec
in
add
pop
enter
mov
adc
lret
psllw
mov
push
lcall
sub
adc
dec
cs
loope
xchg
jmp
mov
push
leave
inc
repz
push
data16
ss
dec
insb
out
lods
lods
ret
int3
aam
inc
xchg
mov
push
inc
cwtl
mov
rclb
xor
mov
dec
add
pop
pop
int
push
es
pop
cmpsl
mov
sub
imul
mov
mov
mov
insb
lds
ficoms
push
hlt
fcmovnb
movsb
sub
mov
neg
fsubp
out
or
dec
cmpsb
pop
jo
jl
scas
mov
gs
pop
bound
dec
sbb
test
push
ret
jg
insl
lret
jbe
lret
mov
in
pushf
mov
jno
jecxz
or
and
aam
jmp
pop
cmpsb
scas
inc
push
xchg
lods
cmp
mov
rorb
push
cwtl
jp
jmp
mov
xchg
push
or
dec
xchg
into
sbbl
out
pop
sbb
add
cli
mov
or
daa
ja
jne
lcall
les
scas
cmp
push
mov
inc
cmp
fsubs
psllw
xchg
inc
pop
inc
xor
xlat
aas
push
mov
stos
scas
shlb
rolb
and
cmc
sub
inc
pusha
push
adc
mov
sbb
subps
stos
inc
incl
and
cmp
xchg
outsb
or
adc
daa
xchg
add
ss
cmp
cld
push
add
fiaddl
addr16
aad
lahf
jmp
add
outsl
mov
aas
fimuls
pusha
out
adc
js
fdivrs
adc
mov
fwait
ret
jmp
mov
mov
inc
xor
stos
cmp
or
push
mov
inc
and
dec
lds
cltd
adc
sub
jp
and
iret
add
pop
and
push
shl
fnstenv
add
and
js
pop
mov
stos
sahf
push
mov
add
push
shr
lret
lcall
mov
add
iret
xchg
mov
stos
loop
xor
call
mov
in
test
lahf
test
lods
add
lret
outsl
movsl
push
jo
aam
mov
jno
es
popf
out
push
cmp
fsubs
test
sbb
lds
scas
pop
vmread
fcmovnu
imul
mov
push
divl
jne
roll
mov
leave
sti
dec
mov
jp
dec
dec
roll
fiadds
mov
ret
test
mov
inc
bound
into
fsubl
rorl
sbb
mov
aas
das
pop
inc
in
mov
pop
out
dec
adc
sbb
jo
mov
jge
push
sahf
jne
pushf
jle
xor
addl
dec
lock
insl
jmp
push
in
mov
cmp
mov
sbb
jae
arpl
mov
or
cmp
sbb
ja
sti
ds
pop
mov
ja
mov
sbb
inc
or
popa
push
clc
cmpsl
js
gs
mov
xchg
cld
and
sub
xor
sub
dec
inc
loope
test
xchg
insl
xor
inc
mov
inc
clc
in
mov
xor
mov
stos
push
or
mov
imul
jg
pop
fistps
xchg
jg
popa
sbb
fstpt
in
add
mov
ret
push
popa
arpl
lret
adc
and
mov
adc
inc
repz
xchg
cli
jmp
push
push
lahf
faddl
dec
stos
fsubrl
imul
aas
cmc
adc
sti
jo
push
loope
pop
cld
arpl
push
cmp
fldl
push
mov
dec
retw
pop
sbb
psubw
cmp
mov
jno
push
daa
or
repz
cwtl
ficompl
dec
sub
adc
mov
and
mov
movsb
jp
mov
dec
out
jle
xchg
into
dec
lret
fwait
xor
inc
cli
pop
loope
xor
sbb
push
psllq
and
mov
gs
cmp
sbb
outsb
xor
imul
stos
dec
ficoms
mov
movsl
mov
inc
inc
xor
aas
mov
and
das
and
sub
sub
xchg
inc
mov
ljmp
andnps
flds
call
dec
lods
outsl
push
adc
xchg
fdivrs
cs
subl
jo
lock
lahf
out
aad
mov
push
mov
clc
ror
lods
movsb
sub
pop
mov
mov
test
xor
and
jnp
loop
loopne
xor
jnp
push
xchg
insl
loope
int
sub
add
or
inc
mov
jmp
push
pushl
mov
xchg
hlt
rclb
inc
mov
adc
fstps
adc
stos
mov
push
sarl
cltd
clc
pushf
jl
cmp
cmp
aas
out
pushf
pop
pop
and
pop
int
outsl
lret
dec
cmpsb
lds
xor
aad
push
andl
sti
mov
pop
je
mov
jno
xor
sub
in
ljmp
shrl
add
xchg
pop
push
lods
aam
es
cmp
adc
or
push
sbb
aad
xor
fs
pusha
test
mov
fisubrs
arpl
loop
jl
xor
out
xlat
das
stos
loopne
push
cmp
imul
jl
ljmp
push
andb
push
enter
nop
shlb
cmc
xchg
arpl
fldl
shrb
out
sbb
mov
cmc
aaa
cltd
ret
lret
mov
ss
push
xor
jne
dec
xchg
mov
add
xchg
leave
jmp
mov
out
adc
mov
xor
lcall
repz
inc
dec
jno
cwtl
mov
pop
mov
fwait
leave
fstp
testl
int
stos
push
loop
loop
and
shl
cmpsl
xchg
insl
insb
adc
pop
test
pushl
popa
adc
loopne
push
flds
inc
addr16
mov
inc
out
dec
jmp
pop
jbe
xchg
lcall
inc
jae
divb
jae
lock
push
pop
pop
push
or
bound
sti
push
std
pop
mov
aas
popa
sbb
mov
sub
fcompl
in
imulb
xchg
push
push
stos
iret
mov
jbe
movsl
addr16
sbb
mov
aaa
imul
sbb
aam
jl
adc
xchg
mov
fcompl
jg
sub
aas
hlt
adc
xor
cmpsl
mov
ja,pt
push
sti
mov
shl
sub
je
inc
push
mov
pop
add
int
jb
aas
aas
arpl
in
add
pop
test
xchg
sbb
cld
enter
xchg
iret
cmp
xchg
jnp
xchg
rclb
test
mov
add
mov
mov
gs
test
push
jge
lods
push
popf
out
mov
shl
mov
cltd
nop
adc
mov
out
lods
add
loope
rolb
cmp
jl
es
out
stc
add
dec
push
sarb
or
mov
xchg
clc
push
xchg
into
sar
test
mov
jb
ljmp
and
in
in
jge
js
inc
sub
div
cs
and
sti
std
or
sub
mov
fstpt
sbb
cmpsl
cmp
sahf
hlt
insl
xor
movsb
stos
out
rcrl
aad
nop
push
nop
bound
loop
cmpsl
adc
scas
test
inc
mov
xchg
insl
or
lret
jb
es
lahf
inc
insl
out
push
dec
adc
and
cld
std
daa
fsubrs
adcb
nop
mov
shrb
or
aad
adc
repnz
push
sbb
jp
or
shll
loope
outsl
sub
and
or
fs
push
jns
jne
jo
ss
inc
cwtl
push
fs
pop
iret
out
outsb
push
aad
ss
xorb
test
xor
cwtl
xchg
cmpsl
lock
jge
lret
jnp
mov
sahf
add
mov
gs
in
ret
insl
mov
xchg
mov
push
xchg
push
sbb
cmp
in
out
and
js
cmc
sub
adc
add
daa
mov
repnz
push
and
pop
jp
ljmp
gs
insl
mov
aad
mov
ror
or
int
les
sub
popa
add
inc
xor
aaa
mov
sub
sbb
iret
xlat
sub
jne
imul
dec
adc
xchg
data16
mov
rolb
gs
push
shlb
add
daa
fs
cmpsl
lahf
pop
pusha
or
mov
dec
cli
subl
push
lahf
mov
inc
xchg
xchg
cmp
lahf
push
mov
push
mov
stos
test
bswap
mov
leave
arpl
fcmovb
push
inc
les
into
roll
add
push
xchg
xlat
sbb
popf
pop
lret
hlt
xor
fistpl
cmp
fsts
xor
jecxz
adcb
test
mov
xor
fisubrs
cmp
lret
xchg
xor
test
insl
gs
adc
ja
jl
sbb
sub
inc
push
outsl
xor
es
pop
pop
popf
sbb
pop
mov
sub
adc
and
je
daa
out
and
test
data16
inc
mov
xchg
cmc
inc
aaa
pop
popf
sub
nop
jbe
test
shll
das
cmp
sbb
out
imul
loop
mov
cltd
inc
fidivl
adc
aam
jge
outsl
xor
jg
call
lahf
and
mov
fs
push
clc
cmp
das
mov
sub
sbb
jo
and
subl
rcrb
push
wbinvd
mov
mov
andl
aas
inc
inc
mov
pop
jno
movsl
adc
in
sbb
decb
pop
mov
stos
rolb
jmp
nop
sub
mov
out
aad
cltd
xchg
scas
enter
inc
cld
sbb
imul
sbb
rclb
cmc
movsb
shl
dec
adc
jno
es
ljmp
insb
jnp
add
cmp
pop
sub
sub
jbe
jae
jno
arpl
mov
aam
ret
orb
mov
icebp
pop
xchg
out
jnp
xchg
cmpl
xor
jnp
add
jne
xchg
in
sbb
mov
adc
pop
xchg
fadd
mov
jge
pop
leave
inc
sbb
pop
lock
in
rolb
xor
out
adc
inc
loope
push
mov
repnz
stos
notb
add
mov
sub
loop
repz
mov
ja
mov
pop
repnz
fists
xchg
xchg
mov
fadds
mov
add
jbe
mov
jno
scas
ds
adc
arpl
cwtl
repnz
and
jno
inc
jge
push
sbb
shlb
xlat
gs
imul
xchg
cmpb
cmp
push
xor
mov
inc
xchg
sub
test
lds
mov
lcall
or
inc
mov
fwait
loop
in
push
add
sub
insl
push
insb
and
push
lods
push
cmpsb
adc
les
ret
sub
mov
cmpsb
mov
push
sti
xlat
push
testb
cmp
sti
mov
leave
out
ret
pop
fcmovnbe
fdivrp
sbb
jmp
and
es
and
lods
lea
cmp
lahf
fistpl
inc
xchg
cli
push
aam
inc
push
xchg
imul
std
fxam
xor
insb
shlb
mov
jnp
or
mov
ljmp
xchg
rcll
leave
pushf
lea
inc
jge
sti
cltd
xchg
in
fstl
mov
mov
popl
or
insb
movsb
jl
pop
inc
mov
mov
pop
adc
lods
push
mov
lock
push
xchg
xlat
adc
dec
and
jg
inc
sub
lods
aas
mov
hlt
sub
rolb
sbb
pop
jnp
add
push
sub
loop
mull
outsl
lret
js
mov
js
mov
loope
test
insb
bswap
bound
push
dec
frstpm(287
rorl
gs
pop
je
jno
mov
inc
cmpsb
push
push
mov
sbb
and
dec
jb
mov
dec
pop
push
ja
or
and
sub
cs
jmp
rcr
mov
lahf
imul
xchg
sub
ud2
cmp
xor
je
sub
ljmp
mov
rorb
aaa
sub
cld
sub
pop
sub
xchg
add
and
mov
hlt
ja
rorl
cld
negb
cmp
pop
or
push
movsl
cltd
sub
test
jl
pop
sbb
sub
ds
lds
icebp
imul
shll
pop
inc
sbb
fnsave
pop
and
cltd
and
in
dec
insb
inc
push
and
mov
push
aaa
push
jmp
subl
pushf
add
cmpsb
and
rorb
sub
pop
sar
cmp
jno
insl
adc
or
cmp
jne
adc
xor
push
mov
movb
cmp
ds
push
cmpsb
sbb
pop
jb
xor
and
pop
in
popf
jbe
rcrb
sbb
call
push
in
int3
push
fsubrs
pop
sub
inc
popf
jae
sbb
loop
in
cli
mov
daa
pop
aaa
and
sub
adc
cmp
pop
jmp
jl
lret
xlat
imul
mov
test
repnz
sbb
aad
lds
sub
xor
mov
lock
aaa
das
xchg
sbb
stos
stos
je
jge
test
in
push
pop
addr16
or
xlat
stos
roll
mov
nop
dec
inc
dec
jmp
aad
cli
mov
jecxz
xor
jecxz
fimull
mov
pop
jne
sti
xchg
in
dec
std
dec
daa
mov
sbb
inc
outsl
sub
call
mov
adc
sbb
js
repz
jl
ss
push
pop
mov
ds
ret
cmp
mov
jo
sbb
jl
loope
in
leave
movsl
mov
pop
add
in
cmp
stos
push
vpsubusw
lods
cmpsb
jb
or
leave
jb
push
xchg
gs
pop
sti
adc
lea
fisubrl
in
cmp
in
inc
out
test
fimull
stos
or
sbb
cmp
pop
add
xor
out
nop
das
jecxz
std
jle
adc
mov
leave
in
aaa
mov
mov
and
and
add
fstps
xchg
cwtl
push
mov
test
loop
xlat
cmp
insb
mov
mov
xor
mov
pop
fstpl
dec
sbb
mov
rolb
rclb
ret
mov
push
mov
pop
cmc
sbb
pop
and
jo
lea
jecxz
mov
add
les
dec
pop
add
mov
out
inc
xor
outsb
scas
in
in
xor
stos
movl
adc
arpl
pop
pop
add
orl
bound
faddl
push
or
dec
inc
dec
cmp
fbld
push
fdivrs
pop
in
out
adc
cltd
scas
pushf
std
jo
fstps
out
lahf
ljmp
stos
xchg
test
ljmp
and
loop
mov
movsb
outsb
adc
push
add
repz
lock
mov
shrl
ja
xor
jnp
pop
xchg
adc
cmpsb
jbe
sub
sarl
adc
inc
xlat
mov
insb
fimull
fadd
or
test
into
sbb
pop
xor
dec
lods
dec
shr
rcrl
sbb
lea
cli
jae
push
leave
jl
out
xor
dec
aas
mov
roll
add
or
mov
dec
push
lahf
xchg
jmp
shrb
pop
insl
mov
mov
pop
pop
jae
arpl
loop
xchg
and
scas
pop
pop
aas
inc
mov
shrl
xor
fiaddl
xlat
movsl
xchg
jno
pop
loope
call
mov
fwait
push
stos
jecxz
dec
fisubrs
hlt
jg
adc
insl
ror
pop
jns
sbb
mov
mov
loop
push
dec
hlt
lahf
arpl
shll
jae
out
push
ljmp
gs
out
out
dec
div
sub
lret
outsb
repz
inc
jb
lret
fabs
dec
mov
popa
cmp
cld
mov
in
mov
cmp
push
dec
inc
pop
inc
sbb
mov
pop
add
dec
inc
mov
or
add
test
mov
adc
scas
repz
jp
sbb
push
leave
cld
dec
or
fistpl
ret
xchg
call
int3
incb
decl
addr16
adc
jle
push
inc
and
mov
jae
orb
jecxz
mov
bound
sub
addl
mov
mov
and
out
pop
cmp
cmp
in
int3
outsl
test
pusha
sbb
jns
xor
push
cs
lock
sbb
sbb
xchg
test
jmp
pop
int3
xchg
cmp
fdiv
sub
jecxz
push
adc
push
mov
or
xlat
jae
dec
jmp
adc
jb
mov
outsl
push
xchg
in
sub
int
mov
cwtl
lds
mov
iret
jae
iret
sbb
mov
mov
lret
dec
pop
stc
lcall
push
enter
roll
sub
or
push
and
mov
outsb
clc
cs
or
adc
mov
mov
jnp
or
enter
mov
or
in
sbb
ja
fldcw
ds
jo
ret
sbb
das
and
sub
mov
clc
sub
jno
cwtl
add
push
wbinvd
popf
mov
or
mov
xchg
mov
ja
xchg
test
mov
sbb
dec
js
int3
mov
test
clc
mov
ja
and
xchg
jl
sub
imul
xchg
mov
pop
dec
sbb
pop
push
insl
mov
push
icebp
aam
lret
mov
mov
or
test
push
mov
rol
outsl
mulb
fcoml
popl
imull
je
je
aad
imul
pop
lcall
out
add
push
das
adc
jne
xchg
lahf
xchg
mov
push
enter
dec
sahf
outsb
dec
jle
mov
sub
adc
pop
fisubrl
xchg
lods
pusha
testb
outsl
or
jl
or
iret
xchg
test
shl
lock
dec
sarl
into
shr
out
sahf
cmp
ficoms
leave
in
pusha
adc
push
sbbl
xchg
into
push
push
mov
sbb
mov
sarl
push
mov
jmp
push
add
insl
push
jmp
cmp
bound
jbe
je
xchg
outsb
jne
mov
fwait
outsl
and
scas
mov
test
and
pop
xor
pusha
int3
enter
xlat
aam
xchg
mov
lea
mov
cmp
add
insb
xchg
inc
cmp
mov
lcall
enter
sub
and
xchg
in
ret
call
pop
das
xor
jge
lcall
aad
or
mov
sti
cld
or
and
enter
mov
shll
mov
fldlg2
pop
imul
or
xchg
dec
sbb
push
xchg
mov
push
lods
push
aam
pop
inc
and
xorb
adc
sbb
sti
das
mov
out
mov
je
daa
xor
jb
ja
mov
xchg
pop
int3
loopne
push
test
mov
jae
insl
rclb
jne
mov
outsl
pop
into
adc
mov
aam
ds
mov
fdivl
cmc
addr16
sbb
test
test
ja
push
ljmp
pop
push
stos
jecxz
and
mov
lods
and
adc
xchg
bound
xchg
dec
add
sbb
pop
ret
sub
fwait
and
sub
sub
ljmp
add
shrl
adc
mov
xor
std
dec
lcall
scas
out
jmp
push
lods
xor
push
mov
fists
lcall
mov
bound
std
fisttpll
fcompl
enter
and
lock
mov
adc
stos
pop
cli
inc
inc
cmc
mov
mov
mov
aaa
fisubl
jge
jb
rcr
xor
bound
test
jecxz
divps
rcll
sub
xchg
adcl
sbb
dec
arpl
and
shll
pop
into
fistps
mov
stos
clts
jg
push
icebp
cmp
mov
into
xchg
stos
pop
push
pusha
clc
xor
pop
mov
jns
sub
ss
cmpb
stos
in
or
adc
xchg
sbbb
jns
sub
cmp
addr16
lds
jb
cmp
jbe
cmp
clc
mov
add
data16
mov
xor
lret
or
cmp
inc
fwait
imul
inc
mov
pop
adc
scas
push
xor
cli
testl
cmc
and
das
into
and
arpl
push
repnz
int
push
in
mov
cwtl
inc
push
ss
pop
aas
dec
std
mov
jo
lock
cmpsl
icebp
lods
fisubs
popa
add
jo
lds
pop
sbb
jle
inc
dec
dec
push
inc
adc
hlt
xor
and
std
jecxz
inc
push
daa
scas
test
stc
xor
movsb
setbe
mov
cmp
cmpb
adc
filds
xor
cwtl
stc
pop
xchg
mov
dec
movsb
mov
cli
push
cmc
stos
jne
rep
mov
push
je
cmp
jge
in
insl
shrb
lcall
push
sbb
es
push
cmp
or
adc
repz
xchg
fcomip
sub
add
pushf
loopne
js
cmp
push
dec
xchg
js
and
lods
out
or
add
sahf
imul
lods
shlb
mov
inc
add
adc
jmp
mov
dec
push
adc
pop
push
mov
mov
pop
shll
add
jp
stc
dec
pop
mov
push
cmp
inc
add
dec
sub
xchg
jb
mov
arpl
cmp
sbb
jmp
mov
arpl
mov
sbb
jbe
cli
lahf
push
push
adc
sub
sub
mov
sub
or
dec
sahf
int3
imul
inc
dec
push
in
popf
mov
int3
mov
inc
cltd
mov
mov
adc
stc
cmp
fs
mov
jo
adc
cmc
cmp
dec
repnz
push
xor
movsl
ja
test
jge
iret
ja
fidivrl
int3
push
les
repnz
sbb
mov
icebp
and
push
pop
dec
sub
jg
cli
or
js
das
adc
mov
bound
cmp
pusha
popl
pop
sbb
xor
shrl
stos
pslld
mov
in
mov
dec
and
call
pushf
negb
inc
mov
dec
dec
pop
cmc
stos
pushf
and
add
mov
fists
movsl
in
add
xchg
andb
stos
mov
mov
jmp
push
mov
lds
fldenv
cmpsl
leave
pop
dec
adc
cmp
mov
pop
adc
test
and
cmpsb
or
inc
add
lods
lods
cmp
lea
aas
jle
mov
ret
sub
mov
xor
mov
lret
jns
or
pop
sbb
rclb
ret
adcb
fwait
clc
cld
push
push
repz
push
int
fdivr
psubsw
inc
mov
mov
aad
sti
loop
cmc
dec
jmp
data16
adc
inc
xchg
xchg
out
mov
mov
pop
and
int3
dec
push
icebp
hlt
sbb
jae
xchg
jge
outsl
js
fstps
xchg
jl
jmp
jbe
push
int
jge
jne
mov
jg
jg
dec
scas
into
cwtl
mov
insl
imul
es
sub
int3
jae
xchg
push
push
jmp
jl
fdivrs
xchg
dec
dec
sub
pushf
push
xchg
push
bnd
cltd
sub
xorl
jg
in
mov
or
mov
push
mov
and
insl
lds
pop
mov
shrl
jp
dec
and
in
mov
subb
mov
dec
icebp
lahf
lods
ljmp
add
cltd
imul
mov
sub
jo
in
shrb
pop
mov
mov
les
dec
das
jecxz
cmpl
dec
push
and
mov
clc
xchg
test
pop
jg
xchg
mov
mov
imul
sub
mov
in
out
push
mov
pop
mov
call
mov
inc
push
adc
dec
pop
aad
sub
pushf
hlt
test
adc
mov
sti
or
add
push
test
stos
loop
mov
mov
mov
lods
mov
and
xor
cmp
mov
cs
pop
test
adc
movsb
jge
pusha
aam
add
lods
ror
mov
mov
divb
fsubrs
es
mov
not
add
xor
loope
jb
aaa
inc
les
push
adc
cmpsb
ljmp
pop
sub
sarl
mov
adc
hlt
pop
or
leave
cmc
rcrb
dec
add
mov
push
fisubl
pop
scas
test
lods
clc
pop
lock
inc
leave
pushf
lcall
adc
pop
xchg
mov
jbe
adc
cmp
mov
jmp
je
movsb
xchg
lret
mov
push
int
out
sahf
repz
push
out
and
xor
xor
xlat
ror
lahf
rolb
pop
je
push
into
dec
pop
je
jecxz
or
jle
popf
inc
clc
enter
sbb
sbb
lods
inc
scas
stos
and
pop
adc
in
test
jb
push
aad
mov
test
jle,pt
lret
addl
push
adc
sbb
cli
or
clc
sub
int
inc
dec
jno
mov
sub
inc
ror
xchg
dec
jae
dec
mov
or
add
aad
dec
lock
test
jno
stos
or
sub
fs
cmc
sti
dec
sbb
pop
rcrb
outsl
and
int
lods
cmp
stos
lret
scas
pop
jmp
in
pushl
mov
xor
movsl
jmp
push
mov
xlat
addb
sub
add
sti
aaa
inc
js
mov
les
pop
mov
cmp
jmp
adc
stos
cli
inc
movzbl
jmp
mov
adc
jns
xor
sbb
jns
call
cmpsl
jge
cmpsb
cmp
jnp
adc
pushf
leave
dec
test
xchg
mov
cwtl
mov
add
xor
mov
mov
mov
cmc
in
mov
dec
sub
repnz
rorl
std
push
jae
int
fdiv
cltd
pop
sarl
xchg
xchg
mov
shlb
sbb
and
in
cmp
adc
out
decb
sbb
jg
outsb
cs
clc
dec
orl
fldenv
leave
jns
jecxz
mov
or
arpl
inc
das
and
jns
and
std
popf
out
push
mov
pop
dec
mov
leave
sub
or
dec
jns
sar
or
cltd
jo
push
xor
les
cmp
addr16
leave
sbb
pop
clc
jmp
pop
xchg
sarl
sub
mov
sub
push
mov
leave
orb
push
stc
sbb
jp
cli
bswap
xchg
lret
repnz
mov
or
cmp
pop
or
mov
lock
jl
dec
repz
rcll
in
push
pushf
sbb
xchg
je
out
dec
push
dec
aaa
push
ret
fisubrl
ror
mov
stc
pop
and
sarb
popf
xor
jo
sub
pop
inc
les
fistpll
cmp
cmpb
push
xor
cmpsb
xor
pop
lret
inc
mov
enter
decb
fsts
pop
dec
notb
cmc
lcall
push
xor
lret
rclb
ret
cmp
outsb
in
orb
addr16
xor
or
mov
scas
shrl
inc
popf
shlb
ja
stc
xor
push
or
mov
jb
mov
loope
push
cmp
sbb
out
inc
stc
adcl
out
fimuls
pushf
push
jecxz
push
sahf
adc
loopne
das
xchg
sahf
insb
faddl
sub
addr16
jno
adc
ret
fwait
movsl
mov
dec
ja
xchg
bound
and
cmp
jno
inc
cmp
dec
mov
dec
mov
sbb
add
or
or
data16
lahf
leave
xor
out
pop
pop
jg
ret
xchg
gs
enter
out
sar
and
dec
pop
and
popf
lret
out
inc
movsb
pop
mov
xchg
xchg
inc
clc
mov
test
adc
test
push
stc
shll
dec
push
sub
jecxz
or
dec
inc
or
jne
repnz
jmp
jno
in
and
cmp
inc
mov
sub
stc
out
insl
mov
jl
push
push
cmp
pushf
cwtl
lcall
cmp
sbb
outsb
push
mov
dec
xchg
mov
leave
rcl
stos
pop
or
gs
fisubrs
int
aam
arpl
popf
test
imul
mov
jns
xchg
jno
mov
cmp
add
pop
das
lahf
in
mov
xchg
pop
iret
add
dec
lds
fwait
cwtl
adc
add
pop
cwtl
push
cmc
test
mov
movsb
dec
rcll
cmpsb
out
and
mov
ss
pop
push
dec
inc
mov
fldl
imul
out
andb
loope
xor
dec
jmp
pop
dec
repnz
push
orb
dec
fcomi
add
xchg
add
aam
cmp
sub
xchg
cmp
roll
arpl
xor
mov
sub
mov
add
pushf
ret
insl
dec
jge
sbb
mov
mov
outsl
sub
add
scas
clc
dec
cli
mov
scas
fs
not
sub
push
hlt
or
ja
and
mov
outsb
mov
and
idivb
mov
je
fimull
and
not
out
dec
xor
pusha
jg
fxch
cwtl
icebp
iret
shlw
fisttpll
sub
add
mov
sub
addr16
rclb
push
ljmp
inc
mov
mov
cmp
xor
push
negl
inc
adc
pop
test
test
mov
cwtl
loope
xor
cmp
popf
and
test
cmp
out
in
sahf
pop
mov
and
cmp
pusha
in
jne
sub
mov
xor
jnp
pop
mov
inc
push
mov
xchg
lea
mov
jecxz
ja
mov
push
adc
add
mov
and
and
hlt
test
ret
xor
nop
ja
mov
jg
movsb
scas
sbb
movsb
or
jmp
out
repnz
fisubrl
ret
cmp
movhps
push
les
repz
and
nop
sub
test
insb
mov
adc
inc
xchg
movsb
mov
adc
or
mov
mov
in
lods
out
inc
and
add
xor
enter
cmp
jge
mov
sub
cli
ljmp
lods
clc
call
sub
jl
loope
addb
mov
fstsw
lods
inc
stc
push
sbb
fcompl
add
inc
jecxz
pop
sbb
sbb
stc
decl
icebp
ljmp
sub
or
sahf
pop
xor
inc
adcb
ljmp
test
pop
cwtl
je
dec
xchg
aad
idiv
xchg
aas
or
flds
leave
leave
dec
xchg
imulb
dec
xchg
hlt
jl
dec
jecxz
mov
mov
out
pop
adc
mov
and
pop
cmpb
inc
lea
pop
ljmp
jnp
movsl
inc
mov
ret
sub
adc
mov
fsts
mov
test
xor
dec
das
add
inc
notl
mov
push
and
popa
cmpsb
aaa
aam
in
push
pop
imul
out
cmc
aaa
in
ret
aas
lahf
sub
out
lods
dec
adc
les
dec
xchg
inc
repnz
leave
mov
xchg
lds
js
xor
or
sbb
ja
bound
mov
cld
adc
fstps
cmpl
inc
and
sbbl
mov
pop
fstpl
add
pop
inc
or
push
jmp
loope
insb
push
cli
and
xor
out
add
loop
loop
and
push
repz
dec
pop
js
icebp
test
inc
fdivrl
stos
insb
ret
adc
fisttpll
nop
mulb
fmuls
sub
add
test
mov
mul
mov
inc
repnz
movsb
cmpsl
mov
jno
lret
adc
out
enter
enter
test
imul
test
test
sbb
pop
shr
inc
pushl
inc
xchg
inc
mov
dec
popf
gs
push
mov
add
stc
xor
push
movsb
clc
ds
dec
cmp
mov
mov
dec
cltd
or
xchg
sti
rclb
pop
add
xchg
jp
pop
sub
dec
and
in
jp
lods
xchg
inc
cld
or
stos
sub
dec
xchg
and
fdivrl
fstl
outsb
mov
inc
dec
ds
and
push
subl
dec
add
mov
jge
dec
das
jl
sahf
es
ljmp
cmpsb
in
sbbl
mov
jmp
mov
aam
into
nop
sub
repz
lea
rcll
xchg
mov
inc
or
popa
and
xorl
cmc
mov
and
in
mov
sub
cmp
or
and
in
mov
enter
jge
jno
test
mov
imul
add
enter
sbb
mov
mov
pop
sbb
das
cmp
popa
fsubs
cmp
cmpsl
dec
xor
dec
mov
outsl
mov
les
inc
js
in
sbbb
shrb
adcl
sub
test
lods
aam
cs
sahf
or
adc
add
dec
notl
sbb
dec
xor
push
and
mov
add
icebp
mov
mov
jle
add
push
or
mov
and
xchg
and
popa
flds
dec
cmc
sbb
add
cwtl
dec
cs
dec
add
das
push
fstpt
or
cmpsb
loope
adc
in
sahf
and
jp
jg
test
data16
push
pop
mov
xor
lods
cmp
push
xorb
adc
clc
cmp
outsl
xchg
sub
ret
dec
xchg
jmp
add
xor
and
cmp
cmp
mov
or
nop
insb
out
mull
fdivl
idivl
adcb
push
stc
loop
mov
adc
xor
jecxz
jns
cmp
stos
icebp
shlb
xor
inc
mov
and
xor
add
mov
jge
arpl
pop
adc
ror
lods
jbe
push
xchg
hlt
xor
pop
add
jb
jne
mov
mov
mov
outsl
cmp
dec
push
addr16
loopne
add
mov
out
cmp
dec
dec
and
cmp
frstor
xor
xchg
xchg
leave
std
iret
or
sub
mov
subb
xchg
fnstsw
inc
add
in
cmp
sub
pop
insl
scas
out
push
lret
jg
jns
inc
xlat
test
adc
jp
cmp
pop
sar
cs
popa
idiv
xchg
xor
ss
push
shrb
out
cltd
mov
xor
jae
roll
cmp
xchg
jno
movsb
imul
scas
xor
push
dec
add
xchg
lret
shll
fcmovu
xchg
jb
test
adc
jg
in
sub
lea
in
or
lret
mov
sbb
aad
int3
jne
pop
xorb
nop
lods
jb
push
pop
inc
pop
cli
sub
fsubrp
or
fpatan
pop
xchg
int3
xor
sub
push
sub
and
hlt
mov
sub
push
jmp
fcompl
hlt
test
mov
repz
aas
push
mov
lahf
insl
lods
inc
dec
sub
jmp
sbb
lock
sti
mov
dec
inc
mov
mov
push
sub
jno
int3
mov
stos
dec
push
arpl
pop
jae
jae
inc
jl
xchg
ret
in
push
xchg
aam
les
data16
aaa
ds
jg
repnz
xchg
test
sbbb
lds
lock
pop
ljmp
jnp
mov
mov
insl
mov
xchg
fmuls
stos
xorl
dec
xor
mov
xlat
dec
push
jmp
loopne
cltd
push
pop
jae
or
shl
add
cwtl
cmp
xchg
pop
dec
lret
shlb
xchg
xchg
fdivrp
add
jo
mov
push
xchg
push
xchg
jae
call
jb
jno
sbb
fst
lods
movsl
mov
ret
mov
loopne
lock
aad
pop
adc
pop
sbb
or
and
push
ja
jl
imulb
lret
mov
mov
mov
aaa
pusha
jno
cmp
mov
data16
push
loop
sahf
adc
test
sub
and
adc
sub
lea
or
adc
sbb
dec
into
xchg
push
adc
sub
shrl
stos
test
ss
or
stos
shrl
jno
inc
adc
shll
lods
decb
ret
js
cmp
mov
jno
fmuls
push
stc
cmpl
inc
cs
jne
cmp
mov
add
pop
mov
mov
arpl
xchg
movsb
ljmp
adc
adc
sbb
fstps
pop
sbb
call
xchg
mov
addr16
xchg
pop
insb
and
jbe
loop
or
sub
aam
and
mov
loope
stc
out
mov
inc
test
fcoms
js
xor
lahf
xlat
orb
xor
stos
or
int3
lods
in
movsb
fwait
pop
add
inc
stc
stc
mov
push
sub
fcompl
dec
ret
push
xorb
and
daa
mov
addr16
scas
add
mov
jbe
sub
fs
xchg
xchg
xor
sbb
fnstenv
dec
aam
out
or
or
aas
push
inc
xchg
icebp
add
inc
in
cmp
fsubrs
clts
xchg
int3
pop
js
insb
push
cmp
mov
jp
aam
das
mov
mov
popa
xchg
push
insb
popa
sub
inc
xor
sbb
ror
pushf
imul
ret
fbstp
lock
aas
test
aas
sub
fistl
sbb
jne
jmp
mov
cmp
sbb
add
push
sub
adc
bound
xlat
mov
pop
rcrl
icebp
jl
push
addr16
mov
mov
mov
clc
sbb
loopne
dec
add
in
jp
or
add
or
pusha
mov
fstpt
lods
movsb
xchg
stos
test
sahf
and
push
jbe
rorb
xchg
jnp
clc
jmp
pop
push
pushf
jl
sub
testl
nop
and
insb
loop
fcmovbe
or
jge
add
fs
inc
sbb
jmp
bnd
or
popa
fsts
iret
push
adc
push
cmpsb
lds
loopne
mov
sahf
jmp
outsl
stos
insb
lds
mov
int
push
adc
outsl
cmc
pop
rolb
cmpsb
lea
cvtpi2ps
mov
call
shll
daa
mov
cmpsb
test
dec
fnstenv
or
aaa
xchg
mov
stos
dec
push
push
cmp
add
inc
jg
pop
inc
addr16
xchg
aam
js
in
rcll
mov
ja
cwtl
es
mov
mov
inc
lea
data16
aam
in
sar
sarb
dec
xchg
popf
dec
pop
cli
outsl
orl
or
gs
sub
pop
dec
or
xor
mov
cmp
xchg
scas
ss
mov
imul
stc
cmp
in
mov
jbe
push
sub
push
pop
mov
or
clc
les
dec
mov
dec
pop
xchg
insl
xchg
sub
xchg
movsl
sbb
cli
push
in
xor
mov
jg
mov
stos
push
ljmp
sbb
inc
nop
xchg
int
cmpsl
push
push
add
add
xchg
ljmp
shlb
mov
jae
xchg
mov
push
or
std
out
cwtl
adc
lds
ret
imul
popa
jne
dec
jno
pop
leave
push
sub
cli
sub
or
sub
jnp
pop
sub
mov
out
scas
inc
int3
arpl
lods
dec
xchg
xchg
dec
sub
aad
mov
xchg
xor
ss
int3
das
jg
jno
mov
stos
jnp
add
repnz
roll
mov
inc
stos
mov
std
xchg
jno
jb
daa
movsb
and
je
repz
jne
lock
daa
xchg
jp
nop
andl
roll
pop
subl
mov
les
xchg
lock
cld
mov
fs
mov
sbb
in
add
or
push
scas
jno
push
ror
out
iret
ja
xchg
outsl
push
adc
leave
stos
sub
stc
out
shr
mov
int
dec
cmc
dec
and
cmpsb
add
and
iret
add
aad
mov
inc
in
imul
dec
out
jmp
roll
lret
dec
jno
std
nop
fcomi
push
rol
out
jl
imul
cmp
movb
cmpsl
jmp
sub
fisttpll
shrl
push
jp
jmp
movsl
push
pop
lods
mov
cld
lret
cmp
mov
jb
push
pop
dec
xor
rolb
cmp
repz
cmp
cmp
push
add
pop
xor
jbe
es
movsb
stc
inc
xchg
ss
les
adc
inc
jecxz
pop
arpl
xor
or
dec
minps
push
mov
imul
mov
addr16
push
pop
pushf
xor
sbb
xor
pop
dec
leave
push
rorb
sbb
adc
or
ds
xchg
mov
sbb
inc
jne
out
cmp
pop
mov
aaa
clc
sub
or
hlt
shll
enter
push
cmpsb
clc
popl
icebp
add
cmp
adc
xor
lret
pusha
push
pop
cmp
fwait
repnz
mov
push
inc
movsb
test
xchg
pop
inc
dec
js
add
test
cmp
push
out
jle
sti
icebp
pop
add
push
scas
fdiv
clc
xchg
cltd
popa
sbb
test
fistps
mov
mov
push
insb
mov
pop
or
rcrl
pop
lds
fdivs
rcrl
push
mov
jge
int3
or
shlb
test
lret
iret
inc
out
jmp
aas
push
jb
leave
nop
xchg
or
icebp
mov
mov
adc
cltd
test
pop
mov
jp
jle
push
add
insl
lret
xchg
dec
sub
xor
or
stos
rolb
rclb
das
push
xchg
fldcw
rcl
mov
gs
adc
mov
mov
pusha
sub
scas
leave
lods
push
jmp
adcb
xchg
out
adc
pop
mov
add
push
mov
or
inc
aas
dec
push
lock
cmp
jae
add
ss
fsubr
pop
sbb
les
mov
sahf
int3
jns
mov
or
jno
outsb
cmpsl
inc
adcl
dec
lods
adc
outsb
pop
push
pop
cwtl
fiaddl
test
sarb
or
dec
mov
push
pop
rorl
lret
testl
adc
mov
push
hlt
add
xor
popa
mov
sbb
or
sbb
xor
jge
jge
ret
test
sbb
scas
pop
fwait
ds
mov
dec
dec
int3
sti
push
out
jmp
shrb
pop
insl
fcoml
cmp
add
addr16
xor
xor
notl
fiadds
push
lret
or
in
add
push
pop
aaa
insb
or
or
or
cmpsb
cmp
sub
xchg
fimuls
jle
ja
sbb
adc
lahf
push
mov
mov
jl
pop
add
sar
mov
stos
lock
or
add
enter
fwait
sbb
fmuls
repnz
sbb
in
mov
cmc
xchg
rclb
dec
loope
es
cmpsl
and
jl
push
jae
fadds
fdivl
movsl
ja
adc
push
in
jecxz
and
pop
cmp
add
mov
cmp
mov
push
jno
lcall
jg
mov
mov
in
jg
and
ret
test
cmp
jae
inc
dec
call
dec
imul
xchg
and
loop
dec
sub
call
sbb
and
filds
imul
adc
test
div
mov
push
push
and
inc
rclb
in
jb
mov
gs
call
clc
sbb
leave
sti
subl
pop
mov
inc
sub
pop
add
adc
xor
cmp
xor
push
ret
in
and
scas
jne
xor
je
sbb
xor
shl
shll
pop
cwtl
inc
enter
inc
mov
adc
rcrb
push
and
out
ss
push
js
or
inc
mov
jmp
jge
fdivrs
dec
mov
call
push
push
sub
jno
cmpsb
push
adc
ror
dec
pop
mov
addl
pop
jl
add
icebp
pushf
or
aaa
dec
movsl
je
fs
and
inc
xor
cmp
daa
xor
insb
pop
pop
dec
pop
adc
push
sbb
loopne
ja
or
xor
scas
sarb
ljmp
sub
push
xlat
xor
dec
xor
mov
ja
adc
arpl
je
pop
pop
adc
inc
inc
inc
leave
push
xchg
or
cmp
mov
dec
stos
jle
lcall
dec
in
clc
xor
add
scas
add
test
hlt
sub
sub
add
mov
pop
push
jecxz
dec
pushf
jmp
push
mov
or
test
dec
fmull
shr
in
mov
pop
ljmp
ret
iret
cwtl
pusha
sub
push
call
sti
adc
es
pop
ljmp
xchg
js
dec
sahf
addb
imul
pop
mov
addb
adc
add
and
and
sarl
ret
aad
push
ss
mov
cmp
aad
xchg
pop
cmpsb
data16
cmpsb
mov
jno
daa
lea
cmp
mov
pop
sub
dec
mov
adc
test
and
push
aaa
dec
outsb
jo
sub
das
and
cmp
jl
and
cmc
repz
faddl
cmp
pop
or
icebp
pop
daa
js
loopne
xor
mov
hlt
push
ret
lret
mov
js
out
jb
xchg
test
imul
or
cmp
call
insb
jmp
nop
shll
lods
xor
mov
aaa
jecxz
mov
add
adc
sbb
inc
or
icebp
xor
inc
cmc
mov
push
ror
jp
scas
outsb
insl
shrb
push
mov
ja
jl
jl
rolb
and
jecxz
mov
xchg
jb
mov
xor
mov
lcall
nop
adc
repnz
mov
lret
mov
jmp
mov
testb
aad
adc
mov
jb
sbb
sti
add
pop
ds
cmpsl
test
cld
lea
shll
imul
out
and
insb
xchg
xor
xchg
call
popa
icebp
cmc
cmp
sarb
cli
aaa
push
sub
fmull
cmp
push
pop
inc
ret
negb
jge
xlat
div
subl
adc
push
ljmp
sub
scas
inc
stc
into
sub
testb
jge
shll
jge
or
xor
int
aas
mov
xchg
pop
or
pop
inc
xor
sbb
int
adc
popf
je
jae
lds
cmpsl
pusha
test
pop
cltd
insl
jmp
xchg
or
jmp
mov
jbe
pop
xor
call
and
jge
fdivl
or
jne
aaa
in
lret
sub
sub
sbb
xorb
in
xchg
add
leave
xchg
aaa
mov
mov
sbb
or
or
int3
ficompl
inc
test
dec
movb
or
imul
xchg
push
jnp
js
imul
insb
jns
imul
xor
std
subb
and
or
cmp
icebp
push
jp
mov
cmp
bound
push
mov
jno
inc
fsubl
dec
or
ljmp
or
ret
add
std
xchg
jl
ja,pt
adc
mov
scas
sub
in
sub
adc
rcll
out
mov
dec
sbb
sub
mov
pop
shll
int
js
dec
jns
popa
or
stc
dec
outsl
lods
xchg
in
ret
xchg
mov
loopne
mov
lds
push
xor
iret
xlat
in
cmp
popf
outsb
lods
inc
lds
insb
fcomip
inc
or
loop
inc
stos
xor
jne
mov
aas
xchg
rcrb
ljmp
lret
jno
add
lods
call
xlat
xchg
fs
jmp
cmp
or
mov
mov
dec
or
xchg
in
mov
push
sub
mov
xchg
xchg
or
xchg
inc
jne
ror
push
mov
adc
mov
add
movsb
mov
cmp
xchg
gs
inc
sbb
inc
rolb
or
fisubl
push
aaa
add
fsubl
or
push
jno
mov
fsubs
test
sbb
inc
cmp
aam
xchg
cmp
or
shll
xor
push
cmp
shlb
sbb
push
jne
push
sub
test
mov
adc
inc
scas
push
cli
flds
and
fcompl
mov
cmp
imul
test
jns
sub
cmp
cmp
push
pop
mov
scas
int
mov
sbb
inc
aam
inc
sub
mov
dec
mov
test
and
cwtl
lea
fwait
cmpsl
xchg
add
je
and
andb
iret
jmp
bound
xor
xor
jle
pop
ds
fldenv
scas
movsb
and
das
incb
fistpl
rorl
es
or
mov
xchg
sub
das
mov
outsl
xchg
movaps
int3
mov
mov
push
mov
mov
fistl
pop
leave
cmp
jecxz
ficoml
shll
mov
push
inc
inc
jmp
xchg
fidivrl
ss
shlb
push
mov
and
or
and
mov
push
jae
mov
je
xor
movsb
push
push
sbb
adc
mov
ss
sub
lahf
out
or
cmp
imul
gs
hlt
add
cmpsl
mov
mov
enter
into
fisubs
test
hlt
xchg
xchg
pop
cli
orl
jo
testb
cmp
lods
lea
sbb
sub
les
inc
jbe
lcall
imulb
loope
loopne
inc
sbb
test
test
movsl
test
mov
mov
fstps
aaa
add
notb
sbb
popa
das
clc
dec
call
pop
ljmp
xor
add
div
je
stos
movl
shll
mov
inc
in
adc
dec
mov
gs
adc
scas
popa
addr16
fidivrl
pop
dec
and
cmp
test
sbb
ja
in
mov
mov
lea
pop
sub
lods
call
sarb
bound
mov
pop
test
les
out
in
inc
aaa
cmp
mov
mov
and
jae
iret
sbb
nop
pop
pop
dec
jge
push
dec
imul
popa
ds
ds
je
mov
call
dec
adc
fmuls
push
push
or
xchg
in
push
cmp
lds
leave
or
aaa
scas
mov
mov
xchg
xor
jle
pop
jns
or
test
dec
rcl
mov
aaa
fnsave
lods
inc
dec
fld
fsubl
inc
pop
xchg
lahf
dec
xor
dec
std
jmp
fwait
in
incb
movsl
mov
icebp
mov
xchg
in
addr16
or
adc
test
dec
inc
push
fldl
outsb
je
add
inc
repz
outsl
out
push
jno
iret
loop
xor
cmp
mov
fdivrl
lcall
lds
mov
ja
jne
nop
ja
xchg
xchg
lcall
inc
pop
es
popa
hlt
jp
mov
cmp
lods
out
xor
mov
iret
add
xor
xchg
jo
or
pop
mov
jecxz
loop
fsts
mov
hlt
rorl
dec
mov
paddd
cli
pusha
lea
pop
push
repz
lds
and
fs
int3
in
sub
das
sub
inc
sbb
jl
cwtl
enter
add
add
add
hlt
mov
push
or
push
imul
mov
push
loop
pop
sbbb
inc
shr
mov
pop
push
fdivl
cmp
ret
icebp
jge
stos
notb
popf
outsl
xchg
pop
insb
or
int
mov
push
sub
add
outsl
insb
xor
mov
inc
mov
pusha
fstl
pop
jns
add
cs
repnz
mov
nop
jmp
and
and
icebp
cltd
push
test
xchg
popa
lret
ja
xor
lret
out
xor
push
push
pop
push
sub
mov
adc
or
xor
das
aaa
popf
jo
lods
xor
sub
pop
ja
xor
inc
push
dec
push
in
ja
cmp
cmp
jecxz
fbld
sbb
cli
es
imul
subl
sbb
lcall
and
scas
aam
cmpsb
sbb
mov
xorl
icebp
add
hlt
sub
testb
icebp
push
pushf
sub
cmp
mov
lea
rclb
sbbb
ror
inc
out
fisubrl
lcall
or
std
in
addr16
inc
aam
enter
jl
insb
xor
jb
in
pop
inc
shrb
adc
out
int
int3
gs
lock
fwait
sub
test
and
sbb
loop,pt
and
repnz
insl
lcall
cmp
mov
loopne
push
aad
cli
aad
adcl
xor
xchg
push
mov
pusha
jbe
cli
push
xchg
add
mov
jne
xchg
std
out
pushf
or
popa
mov
dec
cltd
xchg
dec
mov
push
add
mov
dec
cmc
push
sub
mov
ret
inc
fcomip
xor
push
xor
add
cmp
inc
xorb
loope
enter
out
push
mov
fidivs
push
mov
cld
cld
dec
jle
inc
xchg
adc
xor
out
sarb
fs
outsl
ret
push
test
sahf
jmp
andl
cmp
cmpsb
out
cli
push
push
push
pop
mov
stc
loope
xchg
popf
out
jno
or
mov
fs
mov
or
push
inc
icebp
and
pop
stos
adc
mov
ffreep
xchg
pop
es
jge
aaa
sub
xor
lret
imul
popa
imul
aad
sti
xor
pop
mov
mov
and
aad
cmp
pop
lock
repnz
icebp
push
mov
push
stos
inc
lds
xor
or
xchg
push
aam
add
mov
loopne
and
and
stos
sub
xchg
cld
shrb
dec
jle
lds
mov
stos
ljmp
in
gs
push
pop
jecxz
outsl
push
adc
push
push
jns
addr16
sbb
flds
mov
or
ss
mov
pop
pop
cld
jmp
jge
stos
jb
inc
xor
sbb
lret
sbb
push
cmp
ljmp
xor
add
mov
repnz
pop
inc
test
int3
loope
movsb
in
ljmp
cmp
jp
xor
mov
sbb
mov
add
fisttpll
mov
aas
mov
fnsetpm(287
cmp
push
xor
pop
sbb
push
cwtl
xor
fdivrl
sti
add
fprem
das
or
pop
lret
lds
arpl
data16
mov
cmc
adc
imul
mov
cld
xchg
inc
fnsave
rcrl
clc
adc
gs
add
rolb
ret
push
leave
adc
dec
mov
test
sub
push
mov
movsl
or
inc
or
xchg
mov
mov
adc
leave
jg
loope
inc
push
fstpl
cmp
pop
repnz
and
pop
pop
inc
rcrb
popa
das
or
cmp
shlb
xor
and
push
xor
in
inc
or
icebp
cmpsl
repz
pop
push
int3
jbe
pop
rclb
add
pop
inc
aas
jecxz
lea
fcmovnu
fs
and
xor
and
pushf
xchg
push
test
xorb
bound
ljmp
xchg
mov
bound
sub
bound
js
xchg
xlat
xlat
fmuls
xchg
data16
fnstenv
ficoml
dec
mov
mov
cli
rorl
lahf
rcll
lock
pop
adc
lock
shrl
mov
data16
xor
lds
int
ja
cltd
sbb
xor
add
dec
sub
jle
in
push
dec
and
push
arpl
mov
add
cli
inc
subb
or
int3
dec
push
jbe
xor
mov
jle
lahf
or
push
add
pushf
mov
mov
pop
pop
adcl
fdivrp
jecxz
imul
mov
shld
sti
cld
outsl
jbe
mov
subl
add
xchg
push
or
adc
int3
xlat
push
add
or
daa
cvtps2pi
outsl
xchg
jmp
mov
cmp
cmp
and
scas
js
sbb
das
mov
push
sahf
dec
jge
addr16
push
ljmp
and
scas
les
in
mov
adc
adcb
lds
xor
xchg
pop
jge
xlat
inc
push
sahf
push
pop
lds
mov
inc
or
dec
cwtl
lcall
scas
clc
push
lods
inc
sbb
andb
pusha
inc
cld
jo
xchg
sbb
add
outsb
push
popl
mov
or
add
sub
jecxz
xor
adc
mov
loopne
jp
fldcw
fidivl
adc
add
ret
enter
xchg
mov
scas
subl
dec
cmpsl
pop
dec
pop
stos
inc
xor
pop
int3
or
push
and
aam
dec
cmp
and
in
les
es
dec
mov
f2xm1
jmp
out
jg
nop
adc
inc
test
sbb
cltd
pop
mov
pop
jnp
sti
add
push
repz
xchg
jmp
sub
outsl
dec
idivb
sti
stos
sbb
mov
cmp
shr
int
fsub
jp
sub
outsb
pop
arpl
flds
das
mov
mov
ja
jl
aas
push
pop
mov
jo
inc
push
out
test
adc
mov
inc
mov
inc
cmp
mov
push
iret
das
jmp
jno
imul
mov
sub
shll
and
inc
in
fbld
std
test
scas
push
mov
daa
add
push
notb
pop
in
inc
insl
stos
pop
adc
fsub
adc
push
adc
adc
push
out
pop
bound
adc
jnp
xchg
pop
test
push
pop
movsb
jge
xchg
dec
mov
xchg
adc
xor
fisubl
cli
cltd
sarb
lods
add
out
ret
repz
pop
movsb
jnp
pop
push
cmpsb
mov
xchg
adc
add
jo
or
mov
xchg
mov
jne
jo
sahf
mov
adc
or
sbb
and
inc
push
test
nop
xor
mov
mov
mov
pop
outsb
insl
push
xchg
mov
mov
cld
push
sub
in
jg
mov
ret
add
cmp
add
xchg
in
das
xchg
or
cmp
cmc
dec
fsubr
mov
sbb
cwtl
rcl
shl
fildll
inc
inc
stos
js
cltd
dec
in
cmpsl
jmp
rol
mov
jp
dec
jmp
sbb
and
adc
and
leave
push
mov
or
jb
fcoms
jno
jp
lret
cmp
cmp
xor
jo
pop
mov
iret
jecxz
lcall
repz
add
adc
rcl
pop
stc
popa
push
out
shlb
test
xor
mov
dec
fwait
pop
cmp
mov
mov
movsb
das
lods
xor
adc
out
sbb
pusha
adc
in
daa
mov
pmaddwd
rcll
loope
mov
push
fbstp
push
dec
xchg
and
and
mov
arpl
aad
das
mov
or
sbb
and
scas
and
mov
xchg
cmp
gs
sbbb
sarb
cltd
jl
mov
popf
push
subl
xchg
mov
inc
mov
mov
and
pop
jg
fwait
jb
mov
lahf
lret
movsl
fimuls
in
pop
push
test
sbb
stc
movsl
lods
cmp
cmpsb
pop
cmpsl
pusha
aad
test
jno
cmpsl
in
sub
jmp
jmp
movsb
jg
scas
sub
add
mov
or
jmp
sub
jns
sub
adc
inc
dec
xchg
test
push
sub
movsl
stos
nop
shll
push
cltd
filds
cmpsb
dec
out
lcall
mov
cmc
cli
pop
or
arpl
sub
popa
mov
push
inc
inc
xor
xchg
insb
xchg
test
rcrb
dec
mov
insb
cmpsl
xchg
sahf
mov
mov
aad
daa
inc
sub
gs
inc
or
lcall
jns
push
mov
mov
inc
andl
xor
ljmp
lock
adc
stos
pop
test
loopne
inc
sbb
and
sub
scas
or
sahf
repnz
arpl
mov
pop
mov
mov
cld
mov
jecxz
cmp
int3
ret
and
cmp
fdivrp
cmc
shll
iret
or
stos
dec
stc
mov
mov
mov
mov
xor
movl
inc
lods
shrl
push
mov
mov
testl
mov
xor
out
dec
fsubrp
iret
cmp
pop
lods
sbb
in
cmp
je
aam
call
into
out
frstor
xchg
jnp
clc
andl
adc
sbb
jecxz
jae
mov
add
in
inc
push
xor
std
mov
negb
jns
aam
ret
das
outsb
fs
sub
pop
or
jl
mov
jecxz
test
adcl
or
inc
fstps
mov
mov
ja
cmc
pop
int3
clc
adc
xchg
nop
push
push
jmp
cmpsl
push
loope
xor
arpl
jnp
xor
xchg
testb
xchg
and
sub
ja
cmc
dec
pop
lds
inc
cltd
jp,pn
data16
and
dec
fstps
inc
ja
arpl
fucomip
test
sti
popa
jns
mov
push
pop
pop
adc
sbb
xchg
xchg
lret
sbb
in
jae
sub
jae
loopne
xchg
sahf
jno
enter
mov
xor
jo
jne
loop
leave
xchg
xor
clc
lea
js
and
xor
test
push
enter
add
add
test
movsb
stc
mov
pop
jns
or
lock
bound
aaa
mov
add
outsl
sub
addb
or
pop
fimull
mov
xor
cmpl
fimull
jmp
push
mov
sbb
fsts
mov
push
movsl
mov
dec
sbb
lea
add
jbe
js
push
mov
popa
xor
mov
test
pop
mov
aas
lods
xor
push
loop
mov
daa
cmpsl
pop
pcmpeqd
xor
pop
int3
push
inc
sar
pop
lret
repnz
imul
shl
shl
lods
mov
repz
add
in
je
jbe
aaa
movsb
adcl
std
pop
cld
mov
cmp
scas
dec
pop
dec
cmp
jbe
arpl
fucomp
lock
jo
xchg
test
xchg
gs
or
xchg
clc
pusha
std
repz
into
daa
jae
icebp
call
popa
dec
sub
es
push
pop
lea
jle
clc
inc
and
repz
pop
pop
data16
cmp
cltd
pop
pop
ds
aas
lods
arpl
mov
je
shlb
dec
add
out
xchg
outsl
aaa
or
mov
cld
jg
mov
add
inc
mov
cmpsl
test
dec
or
jge
adc
dec
stos
and
pop
inc
cmpsl
leave
stos
out
popa
dec
imul
adc
outsl
jge
scas
add
std
and
xchg
cmp
andl
test
inc
cmpsl
mov
xor
mov
push
push
test
xor
jne
sti
pusha
push
sub
add
shll
inc
pop
lock
rorl
push
xor
jne
stos
push
imul
inc
mov
lret
cmp
addl
xor
les
sub
into
pop
pushf
fs
xchg
rorb
mov
cmpl
sahf
ret
push
cmpsl
bnd
push
jae
test
push
dec
cmp
fcmovb
or
fstp
xchg
addr16
jmp
add
lret
mov
xchg
sbb
sub
gs
xor
cli
divl
lock
dec
ja
push
out
iret
pop
sti
mov
xor
aas
mov
or
pop
mov
mov
jmp
ss
xchg
jle
or
jno
mov
fiaddl
inc
or
inc
cmp
cmpsb
xor
iret
lods
xchg
xchg
mov
xchg
xchg
pop
sbb
sub
sub
inc
sbb
mov
lods
rcrb
test
mov
mov
mov
adc
js
xchg
shrb
mov
cmp
addr16
xchg
aas
xor
add
push
jnp
and
hlt
cmpsl
sbb
mov
leave
test
loope
inc
movsb
daa
stos
out
mov
pop
pop
js
or
sub
inc
icebp
mov
push
fs
fs
fsubrs
jnp
cmp
frstor
repnz
fidivl
or
lods
lods
imul
js
push
cli
enter
adc
xor
repnz
roll
mov
inc
add
cmp
enter
jecxz
daa
insl
imul
push
mov
les
cli
fimuls
pop
int3
cwtl
or
mov
sub
aam
iret
jmp
pop
and
or
jecxz
scas
test
and
roll
fisubs
cmpsb
sub
mov
icebp
fcoms
notb
cmpsb
andl
push
xchg
fidivl
movsb
xor
sbbl
inc
ss
icebp
fwait
push
push
mov
inc
aam
sbb
repz
shlb
xchg
pop
cmp
jns
insl
sub
add
rorl
jecxz
sub
cmc
fldt
cmp
mov
lret
leave
push
vmovsd
repnz
or
cmp
xchg
je
cmp
pushf
sub
xchg
jae
and
adc
adcb
push
ret
or
lea
daa
scas
and
push
leave
test
xchg
sub
mov
xchg
sti
mov
adc
xchg
imul
cltd
dec
int
cmc
insb
movl
xor
xor
icebp
xor
mov
test
mov
loop
scas
shll
dec
push
inc
pop
or
add
scas
lret
inc
jge
push
aam
repnz
dec
mov
pop
stos
adc
or
cli
loop
inc
repnz
sub
pusha
sbb
pop
pop
lcall
loop
daa
lret
cs
adc
imul
pop
arpl
add
mov
shrl
movsl
into
fimull
add
nop
ret
adc
pop
sbb
out
imul
lods
mov
cld
popa
and
mov
add
cwtl
jb
cli
inc
mov
jle
clc
hlt
xchg
mov
pop
subb
or
hlt
daa
sub
cmc
lahf
mov
sub
or
cmp
lahf
push
mov
adc
mov
movsl
xchg
jg
cmp
fnstenv
iret
dec
ljmp
ret
insl
ss
setg
enter
iret
mov
xor
xor
loop
mov
pop
in
lret
push
movups
pop
aas
mov
fcompl
mov
inc
insl
scas
xor
and
push
test
push
mov
popf
pop
xchg
mov
xchg
sub
cmp
ss
sub
cmp
fsts
inc
idivb
or
jae
jp
xchg
add
add
pop
mov
mov
cli
push
xchg
add
inc
iret
ja
push
or
push
and
push
dec
fiadds
or
xor
fbstp
add
nop
cld
ret
xor
int
inc
ficoml
push
jmp
addl
test
and
imul
loope
ds
and
das
imul
outsl
pop
lahf
inc
jno
jno
adc
inc
jns
sub
imul
pop
inc
data16
idiv
fs
or
adc
test
push
syscall
or
xchg
addb
gs
dec
add
cmp
jae
push
mov
insb
xlat
gs
fsts
add
out
insb
jge
aaa
ss
jp
mov
push
push
push
mov
push
lret
xchg
rorl
call
adc
mov
add
mov
cmp
pusha
adc
lock
pop
add
aam
pop
leave
aaa
lds
adc
mov
orl
dec
xor
pop
fwait
and
jl
jnp
mov
jb
outsl
cmp
jbe
cmp
ret
push
lock
flds
rorb
mov
arpl
cli
lret
daa
loopne
jb
stos
mov
pop
frstor
push
mov
orl
in
test
jmp
leave
add
cmp
out
and
arpl
shlb
mov
mov
xchg
adc
jae
loope
dec
fistpll
sub
daa
icebp
cli
ds
sbb
ljmp
add
fs
orl
jmp
xor
mov
ds
fwait
int
jo
pop
lock
out
sbb
rcrb
ja
aas
xlat
sbb
add
daa
inc
fidivl
push
or
sarb
xor
sbb
cmp
lea
das
or
mov
loope
jg
sbb
mov
cltd
aaa
std
jge
in
arpl
cltd
pop
jae
test
mov
push
sti
inc
mov
or
int
rcrl
and
mov
and
jle
movsl
dec
mov
das
pop
push
mov
push
inc
dec
add
out
sbb
nop
cmp
out
cli
dec
andl
repz
mov
in
pop
adc
jne
ss
hlt
mov
jle
xchg
sbb
mov
sbb
pop
jge
pop
js
fimull
push
icebp
ror
fdivrs
int
ss
loopne
adc
add
addr16
push
fiadds
add
xchg
mov
sub
or
es
and
incb
jbe
mov
decb
mov
mov
dec
out
jmp
ds
aas
push
sti
lods
imul
loope
mov
in
jno
test
xchg
pop
cmp
or
jbe
mov
loop
scas
repz
imulb
mov
insb
xchg
shlb
leave
popa
jle
mov
aaa
or
dec
les
push
push
cwtl
insb
sbb
test
jl
jl
jno
gs
mov
iret
jge
fimull
cmp
into
in
adc
rorl
cltd
adc
sahf
cld
ja
movsl
popf
jno
rorl
insl
jae
out
mov
sub
xor
dec
std
xlat
add
insb
into
or
popf
or
push
pop
mov
daa
stos
loope
shl
call
and
sub
repnz
dec
and
mov
sub
sub
imul
adc
daa
fisubrl
adc
adc
dec
jecxz
iret
jmp
fwait
mov
outsb
rcl
push
fistpl
imul
xchg
adc
mov
inc
pushf
push
clc
mov
popa
fimuls
pop
sti
jno
mull
pop
cmpsl
rolb
adc
repz
cmp
lds
sbb
lods
sub
inc
add
jne
cmp
and
pop
lret
or
push
dec
and
movsl
int3
jb
push
dec
push
mov
out
stos
movsl
pusha
ret
pop
dec
mov
add
mov
cmp
cld
mov
lods
test
sub
inc
mov
ss
fmull
cmpsl
inc
pop
fdivl
xchg
popf
xor
lods
js
lcall
mov
mov
ret
dec
cld
loop
mov
dec
lock
sti
jecxz
test
in
lods
jl
or
jle
xchg
cmp
pop
add
mov
jae
jbe
aam
in
enter
lcall
pop
sub
xchg
addr16
or
std
xchg
call
sbb
pusha
cmp
fistpll
xchg
in
dec
mov
add
leave
jae
dec
das
out
ret
add
or
outsl
psubb
insb
push
mov
inc
cwtl
xchg
imul
shll
test
mov
out
mov
subb
cs
xor
fistps
pop
dec
push
pop
scas
sbb
push
push
jno
js
dec
pop
fisubs
pusha
cli
cmp
pusha
popa
mov
jns
sub
imul
mov
aas
xchg
les
lcall
xchg
popf
test
mov
es
jl
inc
jb
or
mov
jb
hlt
aam
jne
xchg
int3
jnp
popl
leave
lret
dec
xchg
out
ret
shr
pop
aaa
cmpsl
push
fnsave
mov
push
lret
bound
cmc
mov
cmp
and
adc
adc
xor
rorl
jbe
mov
cmp
dec
jg
cltd
cmp
mov
daa
inc
adc
outsl
xor
mov
dec
lods
je
mov
aaa
test
xor
stc
repz
pop
hlt
dec
push
add
dec
mov
insl
test
mov
sbb
ret
addr16
lods
mov
repnz
loopne
dec
xor
adc
xor
mov
shlb
cwtl
mov
inc
ss
aad
lcall
stc
dec
cmp
addr16
jl
dec
icebp
rcr
or
loopew
pop
cmp
insb
cltd
and
pop
pop
in
stos
clc
inc
adc
aaa
pop
ds
adc
fsubs
pop
mov
stos
cmp
and
xchg
adc
sbb
push
je
jae
das
loop
out
cmp
int3
nop
sti
addr16
sub
mov
pop
imul
jmp
lret
loop
fmull
mov
mov
imul
ret
push
rep
push
mov
cltd
jno
stc
sub
out
loopne
jle
jge
jge
dec
sahf
sub
and
jg
and
lods
popa
xchg
lock
push
sub
add
movsl
and
jo
or
fstpt
xor
cli
decb
sbb
and
filds
stos
xchg
push
xlat
xchg
sub
rcl
cmpl
repz
rorb
scas
xchg
insb
out
mov
push
pop
pusha
pop
adc
pop
mov
mov
aaa
xchg
xchg
cmp
push
sbb
xor
push
xlat
xor
adc
test
nop
push
js
push
sub
inc
sub
das
jnp
arpl
dec
loopne
dec
pushf
fiadds
insl
cmpb
jb
sub
cmpsb
cmc
or
push
stc
xor
xlat
call
pop
push
js
negl
or
mov
adc
js
jl
xchg
adcl
mov
hlt
ja
or
adc
cs
jmp
jnp
cmp
jp
pop
or
push
push
sahf
push
sub
mov
adc
loop
cmp
and
mov
and
mov
dec
pusha
pusha
ds
insl
jo
add
aaa
add
or
pop
add
cmp
mov
faddl
das
inc
and
xlat
ljmp
mov
inc
jl
mov
lock
mov
rcl
xchg
enter
xchg
mov
aaa
imulb
jns
sti
adc
xor
lea
adc
jg
add
in
in
outsl
push
cmp
pusha
add
add
pop
xchg
test
xor
lahf
std
in
scas
push
xchg
or
inc
pop
imul
pop
je
ficomps
cmp
jae
jno
nop
adc
arpl
dec
mov
popw
mov
leave
loop
loopne
pop
dec
xor
jns
negl
mov
jnp
cmpsb
jle
mov
push
es
push
jecxz
inc
jle
cli
test
scas
ret
ja
ljmp
push
in
daa
pop
pop
pop
dec
stos
push
popf
sbb
lds
cwtl
arpl
mov
lock
or
xchg
jbe
ljmp
lods
pop
mov
gs
cmp
inc
fstpt
mov
sahf
add
call
dec
dec
xor
or
leave
repnz
mov
cmp
inc
mov
add
mov
mov
jge
mov
add
faddp
mov
in
mov
cwtl
and
xchg
loope
inc
adc
cmpsb
into
iret
mov
xchg
mov
inc
aaa
add
out
popf
movsb
pop
inc
mov
stos
sbb
jmp
pop
fisttpl
mov
jne
test
jns
daa
sarb
stc
in
data16
push
pop
stos
pop
popa
mov
clc
rcr
into
in
stos
sbbl
mov
inc
sub
iret
sbb
testl
xchg
pop
je
lds
cltd
data16
mov
push
fldl
scas
xchg
adc
jecxz,pn
pop
pop
data16
push
mov
mov
xor
in
adc
push
mov
test
xor
push
negl
fiaddl
repz
mov
push
dec
outsl
imul
lds
test
jge
jnp
sub
xchg
cmc
sbb
in
adc
inc
insl
xor
cmp
pop
xchg
call
test
or
fldt
loop
sub
imul
cli
and
jl
xor
pop
pop
mov
popf
sbb
cmp
call
mov
jmp
inc
jmp
xlat
loope
ret
add
mov
adc
imul
xchg
cli
pusha
fdiv
movsb
mov
fistpl
sarl
jns
mov
imul
in
out
insl
sbbl
add
mov
in
aaa
and
jmp
iret
movsb
push
in
push
jg
in
push
jne
xor
cmp
outsb
dec
test
adc
daa
loope
lcall
jnp
setb
mov
ja
les
stos
add
out
dec
iret
mov
fwait
les
sbb
and
enter
mov
cmp
lock
shll
rorb
leave
lock
mov
xor
imulb
sub
sub
subb
lcall
insb
movsb
and
arpl
sub
out
enter
cltd
push
mov
lods
inc
pop
ret
sbb
and
add
into
in
icebp
or
lahf
sub
push
es
daa
and
scas
sub
sbb
pushf
pushf
mov
xchg
cmpsl
xchg
das
inc
xor
mov
sub
int
jae
sub
jo
cmp
and
add
orl
push
fsub
jbe
cmp
jl
pop
and
or
out
icebp
jno
or
fdivs
icebp
push
sbb
mov
adcl
inc
popa
xchg
add
inc
xchg
int
sbb
cmp
lahf
lds
cmp
push
xor
or
push
ds
fwait
es
add
mov
fldcw
mov
imul
das
xor
ds
push
xchg
lret
daa
fmul
xchg
pop
cmpsl
and
mov
sub
xlat
call
sub
or
bound
push
inc
aas
dec
push
mov
adc
lahf
sbb
ljmp
out
test
push
test
mov
adc
xor
sub
pushf
js
sub
shrl
mov
enter
push
adc
sub
sub
iret
pop
ds
sbb
mov
jle
mov
jge
add
mov
add
mov
add
popa
push
mov
cmc
shr
inc
cmpsb
lds
pop
shlb
cmpsl
mov
iret
int
mov
jl
xchg
push
xchg
xchg
jne
ret
pop
lret
fstl
enter
test
pop
push
or
xchg
mov
cli
shll
fwait
cmp
mov
cmp
xor
in
or
pop
xor
xchg
jbe
les
sbb
dec
imull
cmpsb
jp
test
scas
int3
mov
xchg
cld
repz
fcmovnbe
loop
adc
dec
ds
test
fisttpl
mov
mov
xor
mov
pushf
xor
imul
mov
pushf
sbb
sbb
xor
insl
ja
fwait
and
xchg
fwait
cmpsb
mov
lea
push
mov
andb
push
push
in
add
xchg
outsb
mov
sub
dec
insl
and
and
pop
dec
sbb
add
aas
mov
push
lret
insl
push
mov
and
and
or
shl
cmp
jns
pop
sbb
xchg
cmp
std
adc
and
add
dec
arpl
sub
xlat
sbb
rcl
mov
aas
mov
sbb
lock
sahf
cmp
cld
xchg
jecxz
sbb
loop
or
xor
adc
adc
fidivs
addl
repnz
cmp
bound
mov
jae
cmpsl
inc
adc
dec
pop
ss
int
mov
inc
or
pop
std
loope
into
mov
fwait
outsl
mov
adcb
aad
les
lcall
fwait
gs
or
shrl
pop
push
movsl
jmp
call
ds
fdivrs
shl
push
xor
lea
hlt
xchg
movsl
inc
lods
sbb
sub
lods
mov
orl
push
push
mov
sub
gs
fwait
dec
mov
xlat
in
push
rsqrtps
add
mov
pop
pop
out
cmpsl
xor
jmp
sbb
aaa
mov
jmp
push
adc
xchg
cmc
push
in
sub
shrl
int3
loop
dec
inc
dec
std
ss
std
mov
or
mov
fsubl
mov
xor
cmpsl
fsubl
inc
ret
loope
jo
testb
cwtl
ds
enter
iret
dec
loop
idivl
push
inc
xchg
ret
fidivs
dec
jae
xor
xor
pop
call
dec
sbb
mov
mov
lea
push
mov
repnz
sub
mov
arpl
loope
loopne,pn
jbe
fsubl
inc
jmp
into
fisubrs
es
je
pop
add
out
nop
mov
mov
sub
pop
jg
sbb
jecxz
mov
cs
xor
xchg
jg
xor
cmc
outsl
xor
adc
or
jl
or
testl
negl
pop
pop
cs
cltd
decl
push
sbb
mov
push
mov
cmp
or
insl
xor
sahf
mov
outsb
lds
cmpsl
insb
adc
jecxz
sbb
xchg
sub
mov
pop
jle
fnstsw
cltd
out
jno
sti
mov
add
daa
out
and
add
add
jbe
and
test
shlb
lret
fcompl
mov
xlat
js
stos
ret
insb
pop
js
adc
pop
cmp
mov
idivl
rorb
ljmp
outsb
imul
and
push
rorl
sbb
in
mov
cmp
cs
ret
jnp
test
sub
mov
mov
hlt
push
movsl
mov
fisttps
mov
aam
jle
mov
lcall
fidivl
push
add
clc
cmp
jb
ret
in
in
xchg
mov
pop
add
les
add
and
stos
test
ret
nop
or
out
pop
das
or
pop
repnz
push
fmull
jae
mov
xchg
mov
inc
aad
mov
sbb
in
cmpsb
dec
ja
inc
mov
fistpl
add
push
cmp
cmc
cmpsb
inc
sub
lods
and
repz
mov
mov
mov
nop
mov
cmpsb
xchg
add
jg
jp
or
dec
jl
adc
jno
lcall
fnsave
sbb
int3
and
inc
push
mov
ret
pop
fidivs
jp
insl
sar
call
add
xchg
imul
shl
ret
mov
aaa
loope
fisttpll
or
xor
std
jnp
lret
dec
push
jb
fnstenv
jbe
in
out
je
in
inc
sbb
lahf
mov
cs
rcrb
push
push
push
push
push
xlat
outsb
lea
mov
adc
or
push
pop
cmp
rorb
cmove
and
dec
daa
in
ret
cmc
negb
fucomip
sbb
jb
jbe
mov
mov
mov
dec
test
shll
sbb
adc
imull
das
out
out
pop
lret
pop
das
lcallw
fnsave
ja
sub
cmp
sarl
push
cmc
shrl
xchg
add
shlb
cltd
xor
pop
push
dec
push
push
fs
insl
push
cltd
mov
jecxz
int3
dec
mov
es
mov
xlat
insl
xlat
pop
dec
int3
xor
push
mov
and
lods
ss
adc
sub
sti
xchg
jae
mov
shl
fwait
lahf
shrb
cld
push
lret
jno
jns
test
jmp
repnz
pop
scas
mov
adc
stos
pop
sbb
jecxz
insb
push
cltd
addr16
in
stos
test
dec
cwtd
sbb
pop
idiv
fwait
cwtl
imul
in
cmp
addr16
insb
add
pop
push
outsb
sbb
push
outsl
jecxz
cwtl
mov
jp
inc
aad
insb
ret
out
mov
sbb
xor
jns
xchg
xor
in
adc
sbb
aas
mov
jecxz
jns
add
mov
xchg
pop
and
and
lahf
pop
lret
loope
repz
or
pushf
js
jmp
mov
fsub
cmp
mov
aas
pop
out
push
repnz
hlt
data16
enter
ljmp
popa
stos
mov
shll
jo
ror
cwtl
lea
adc
and
mov
inc
stos
and
insb
or
push
ficoms
cli
push
jl
sub
ret
scas
scas
sbb
faddl
mov
stos
test
aaa
out
sbb
cmp
std
push
mov
mov
sub
stc
push
movsb
add
ret
mov
out
in
and
dec
fadds
call
insb
mov
ret
or
enter
in
xchg
scas
lea
loop
fists
sbb
test
xor
dec
mov
jbe
arpl
fildl
je
enter
repnz
and
fistpl
enter
mov
lret
or
insb
aad
icebp
shlb
pop
adc
adc
lret
pushf
sbb
pop
out
clc
sbb
jo
dec
push
sbb
pop
mov
add
cmp
pushf
sbb
data16
repnz
divb
push
in
mov
mov
negb
aad
sahf
loop
imul
pop
repz
lret
pop
dec
cmpsb
nop
mov
mov
mov
outsb
mov
movsb
xchg
addb
xchg
loope
push
dec
cmp
hlt
pop
popa
dec
adc
sbb
push
pop
aaa
popf
jns
js
loop
fcompl
dec
in
mov
pop
mov
sbbb
push
push
dec
pushl
andl
mov
mov
movsl
dec
out
push
out
mov
adc
gs
xchg
adc
jbe
mov
jno
jp
push
adcl
jbe
ss
xchg
ret
and
add
inc
repnz
or
fcmovu
mov
push
out
aas
stc
ja
xchg
fstpl
xor
push
mov
out
test
std
pop
xor
sbb
inc
fldenv
jno
aam
iret
stos
xor
and
movsl
loope
pop
mov
push
movl
loope
xchg
js
mov
ds
add
cmp
montmul
cmpsb
add
add
aaa
cwtl
xor
sbb
mov
enter
inc
xor
and
adc
inc
sub
dec
xchg
mov
icebp
inc
push
stc
push
sbb
icebp
add
mov
dec
push
inc
dec
repnz
out
lcall
jb
test
das
push
inc
insl
popf
mov
je
popf
aaa
pop
and
adc
push
fcmovbe
xchg
sbb
or
lea
sub
cwtl
push
mov
imull
inc
mov
jmp
xor
sti
clc
pop
jo
pop
movsl
xchg
pusha
xchg
push
dec
jne
test
add
cli
adc
sbb
cmp
sub
es
sub
xor
aaa
jmp
scas
lds
ljmp
or
test
sar
push
jl
xchg
jns
movsl
mov
mov
addr16
nop
pop
pop
xlat
inc
and
push
inc
cmp
stos
dec
scas
jp
jmp
mov
decl
shlb
and
mov
xor
test
mov
bound
push
mov
cwtl
inc
shrb
sub
pop
mull
sbb
lea
in
ss
and
mov
sub
add
fwait
mov
push
iret
sub
push
fstpt
inc
std
sbb
ds
aas
cwtl
jmp
ljmp
outsl
mov
xchg
and
adc
inc
jbe
mov
lret
lret
cltd
in
adcb
xchg
pop
test
into
xor
jo
mov
push
rolb
daa
xchg
mov
repz
loop
or
and
filds
mov
mov
push
enter
repnz
dec
pusha
in
dec
sbb
hlt
loope
push
das
mov
js
mov
or
into
test
mov
push
lret
lods
jecxz
cltd
pop
sub
out
jmp
inc
jge
clc
stc
cld
sub
int3
scas
ds
icebp
xchg
jae
fs
stos
sbb
adc
adc
out
pcmpeqd
stc
mov
inc
icebp
dec
and
decl
rolb
lds
imul
sbb
arpl
mov
jb
mov
cli
add
jb
aad
xor
push
and
cmp
out
pop
sbb
push
je
sbb
in
sub
push
mov
sub
inc
jb
rcrb
dec
xchg
imul
int
pop
push
cmpl
scas
mov
in
sub
mov
inc
jo
mov
inc
or
mov
mov
scas
pop
push
sub
subb
pop
or
xor
pop
stos
sub
xor
mov
aad
pop
sbb
xor
movsl
popf
fwait
sbb
sbb
testb
pop
in
xchg
scas
jo
stc
inc
loope
push
ja
int3
pop
cld
das
lods
inc
add
lret
out
sbb
pusha
dec
nop
fists
loope
mov
hlt
stos
mov
icebp
in
xlat
or
cwtl
push
fbld
fs
out
adcl
and
dec
xor
sarl
cld
jmp
adc
pop
aas
btr
sub
pop
sub
pop
or
daa
push
inc
sbb
pop
je
adc
mov
add
sbb
mov
jl
jg
fwait
mov
loop
daa
mov
fnstsw
cmp
mov
cmpsl
cmpb
loop
mov
in
xchg
dec
xorl
dec
bound
jae
stc
scas
xchg
mov
mov
sub
jmp
cli
fxch
push
stos
aad
flds
sbb
jle
stos
movsb
icebp
jns
loopne
xchg
push
or
xchg
dec
ja
fildll
or
push
fdiv
inc
push
mov
mov
test
add
pop
pop
cmc
push
mov
test
mov
mov
testl
sub
or
nop
mov
mov
push
cmp
pop
xor
xorb
pop
insl
imul
push
fldt
mov
xchg
pushf
fists
cs
adc
fbld
hlt
test
aam
cld
js
in
mov
pop
shrl
xchg
pusha
inc
mov
aad
sbb
js
negl
ljmp
pop
ljmp
repz
xchg
push
outsb
addr16
mov
test
lahf
fs
cmp
or
mov
nop
test
sub
movsb
add
popa
ficomps
adc
mov
xor
dec
adc
out
push
insb
dec
int
jns
imul
jle
sbbl
push
cmp
sbb
mov
add
xor
mov
inc
pop
fldt
mov
inc
dec
lods
sbb
arpl
lea
jg
push
lea
mov
out
jp
add
and
xchg
xor
aaa
int3
scas
or
or
inc
out
movsl
push
out
jb
dec
loope
stos
sub
xchg
and
out
in
adc
nop
out
scas
inc
addl
pop
ljmp
fwait
mov
xchg
mov
cld
cs
bound
dec
sbb
adc
pop
inc
cmp
mov
push
lock
or
sub
jl
loope
mov
push
inc
dec
xchg
popf
popf
jo
pop
pop
pop
sti
sbb
push
rcll
ljmp
jecxz
ret
enter
push
pushw
loop
inc
cmp
subl
imul
pop
rorb
mov
mov
jg
in
jl
push
adc
sub
cmp
mov
jmp
dec
lret
negb
imul
ds
sub
xchg
mov
mov
icebp
mov
icebp
ljmp
out
pop
xor
imul
adc
xchg
xor
sbb
pop
ds
dec
xor
fstps
call
enter
xchg
and
mov
int3
sbb
outsl
mov
dec
cmp
das
shr
rcll
fnstenv
int
stos
cmp
mov
add
inc
push
xchg
aaa
xchg
nop
xorb
in
call
mov
pop
cmc
jnp
sub
cltd
jp
inc
dec
mov
mov
cli
lods
jg
xchg
add
imul
push
xchg
out
dec
stc
pop
sub
lock
sbbb
dec
mov
inc
int3
cmpsb
push
out
ljmp
and
shll
int3
lret
xchg
lods
mov
ss
lret
jge
out
fstpl
inc
and
mov
or
mov
ret
mov
xchg
xor
inc
fldenv
in
add
jmp
test
sub
xchg
cmp
push
or
xor
pop
xchg
sub
daa
xor
cmc
mov
cmpsl
addr16
jno
fxch
das
lcall
jle
in
addr16
incl
das
adc
in
cmc
loope
push
sbb
flds
jl
and
inc
mov
and
fucomip
xchg
or
mov
mov
aaa
mov
xchg
das
mov
int3
ficoms
sbbl
pop
pushf
mov
data16
daa
push
cmp
add
and
sbb
and
push
mov
shll
xchg
loope
js
rcrl
jge
jmp
inc
inc
cmc
mov
jbe
inc
adc
iret
sbb
test
adc
jle
enter
xchg
lcall
pop
into
call
insb
dec
mov
mov
adc
aaa
sub
outsb
gs
sub
or
sbb
mov
xchg
out
outsb
repz
arpl
cwtl
lock
push
mov
jge
pop
das
inc
cmp
mov
jle
stos
sbb
test
sub
pushf
sbb
and
or
push
and
subl
cmp
dec
mov
das
repnz
arpl
ficomps
or
push
lea
adc
lcall
and
pop
jne
rorb
cmpsb
cmp
out
xor
and
jno
cld
mov
add
adc
add
mov
xchg
xor
incb
je
leave
push
sub
test
cmpl
jno
xor
pop
inc
dec
dec
jnp
arpl
or
cmp
jecxz
jns
repnz
sbb
fwait
push
add
ds
pop
xlat
out
ja
add
das
mov
sub
inc
cs
fimull
out
pop
mov
stos
fdivs
test
jae
and
mov
pop
mov
cli
ret
mov
cmpsl
fcoml
cmc
jmp
in
ss
mov
lods
sbb
mov
mov
lahf
cld
rclb
push
jnp
xchg
sahf
cmpb
xchg
or
stc
cmp
fdivp
and
fwait
lret
xchg
mov
lcall
arpl
dec
sbb
jb
js
std
aas
lock
mov
add
fiadds
lock
out
mov
into
xor
push
adc
mov
pop
mov
test
aam
inc
repnz
cmpsl
pop
inc
out
jg
or
mov
subb
push
push
mov
and
sbb
mov
imul
lea
or
dec
adc
add
shll
lods
xchg
dec
jg
rcl
pop
mov
xchg
pop
jo
cmp
or
insb
sub
cmc
push
xchg
cmc
jecxz
cli
notl
nop
jmp
dec
call
cmc
push
pop
dec
xor
push
repz
test
jbe
cs
jns
int3
or
push
shlb
dec
enter
das
xchg
dec
test
iret
test
fnop
cmp
add
mov
cmp
add
mov
rep
clc
dec
fistpl
and
fdivrl
pop
dec
fstps
in
inc
loope
cld
inc
push
push
dec
dec
out
cwtl
jo
xchg
sbb
out
sbb
and
orb
mov
sub
fcoms
int3
in
push
or
mov
lods
jbe
and
inc
cld
jl
add
lahf
jno
inc
jnp
push
jl
push
xor
mov
jno
enter
dec
push
vaddsubps
xchg
out
jne
cmp
mov
cmp
xchg
mov
movsl
int3
mov
enter
addl
or
xchg
lock
scas
popf
push
sub
mov
repnz
mov
push
cmp
ret
jb
outsb
jbe
in
cltd
mov
imul
out
pop
popf
jl
xchg
fisubs
inc
jmp
mov
jb
push
lcall
push
inc
icebp
or
xlat
mov
subb
xchg
jne
shl
dec
sbb
xchg
gs
cmp
test
das
mov
xor
xor
testb
mov
and
lret
into
jb
fdivs
sub
sahf
clc
ljmp
mov
jg
pop
inc
lods
test
push
xlat
jmp
inc
roll
aad
adc
cmpsl
insb
xchg
cmpsb
call
xchg
xchg
xchg
mov
xchg
ficoml
cld
test
out
fmull
jae
scas
mov
jecxz
inc
fldt
inc
xor
bound
js
out
and
scas
scas
arpl
inc
in
loopne
mov
mulb
push
lahf
lds
fcmovbe
xchg
adc
stos
pop
jno
or
and
data16
push
leave
push
cmp
mov
pop
ret
movsb
test
mov
clc
std
test
push
es
frstor
xchg
mov
pop
pop
lock
push
xchg
cmpsl
in
jecxz
movsl
rolb
mov
lcall
lock
mov
cld
nop
push
mov
popf
mov
jnp
jecxz
fimull
sbb
jl
loope
pop
je
inc
pop
imul
addb
or
cmp
mov
xor
das
jmp
push
arpl
jge
insl
add
repnz
mov
xor
mov
leave
leave
movsb
jmp
dec
mov
jb
out
sub
popf
stos
pusha
test
in
ret
or
jno
inc
fcompl
xor
inc
in
shlb
loopne
and
add
cltd
sahf
and
mov
xchg
pop
jecxz
xchg
jecxz
xchg
sti
mov
nop
repz
std
cmpsl
filds
adc
pop
les
leave
lcall
out
lods
pusha
repz
cmp
addr16
push
stos
sub
dec
jecxz
data16
divps
pop
test
push
cwtl
mov
xchg
cmp
mov
adc
push
ljmp
inc
sarl
stc
mov
loope
out
xor
std
sub
test
dec
pop
aam
push
jno
pushf
jecxz
mov
xchg
and
xchg
lahf
lods
mul
xor
pushf
ljmp
cld
outsb
enter
repnz
fadd
mov
jb
subb
inc
subl
loopne
jo
pop
or
movsb
mov
addr16
lea
dec
push
or
mov
dec
neg
sub
enter
out
mov
mov
repnz
out
jbe
mov
in
xor
pop
pop
push
lret
cmp
xor
les
lds
imul
out
inc
stos
dec
mov
xor
decb
lea
mulb
mov
push
loop
push
scas
hlt
js
adc
or
cmp
js
push
inc
xlat
add
pushf
aas
jnp
jne
sbb
pushf
push
mov
push
jns
xchg
ljmp
add
sub
jae
jmp
cmp
mov
cmp
in
dec
inc
adc
div
inc
loop
cld
dec
mov
sub
mov
insb
sbb
mov
cmp
and
add
xchg
xchg
shrb
lcall
xchg
or
pop
fnstsw
pop
push
repz
int
cmp
mov
mov
sti
jmp
imul
test
stos
lock
ret
mov
cmp
ficomps
cmpl
jl
mov
clc
mov
cs
jae
xor
dec
stos
add
imul
pop
add
cmp
lock
lods
dec
movsl
or
ja
repnz
ret
push
aas
mov
jne
stos
inc
xor
mov
xorb
sbb
jae
das
xchg
das
fnstcw
in
cmc
insl
xor
fucomp
mov
out
mov
and
or
std
sub
adc
push
arpl
je
sub
jge
mov
cmp
or
or
rorl
dec
sub
inc
ds
fwait
subb
iret
or
lcall
xor
sbb
fs
lcall
xchg
call
sbb
adc
int
lock
xor
loope
jno
shlb
out
ds
enter
je
int
inc
pop
sbb
adcl
or
mov
shll
xchg
repnz
inc
test
dec
pop
dec
clc
aam
dec
data16
inc
lock
in
jns
loopne
fsubs
xor
cltd
loopne
jmp
dec
push
and
push
mov
and
jge
daa
in
add
pop
stc
imul
dec
cwtl
cmc
js
jge
mov
dec
push
xchg
jb
pop
bound
push
popa
sbb
mov
in
sub
push
pop
lahf
gs
mov
leave
mov
adc
stc
adc
scas
sub
xor
mov
mov
int3
mov
stos
loop
jge
inc
push
ds
rcll
movsb
in
insb
mov
pop
cmp
sub
nop
insl
js
xchg
add
iret
daa
int3
fdivs
popa
mov
outsb
jge
jb
push
mov
imul
movsl
aad
addr16
ss
stc
imul
dec
dec
mov
mov
xor
cmp
data16
sarl
jg
pop
sub
orl
adc
pop
add
mov
cmp
in
cmp
xor
dec
shlb
das
mov
hlt
or
repnz
mov
dec
sub
daa
imul
in
jecxz
rcll
pop
push
jp
inc
pusha
add
insl
inc
inc
cmp
scas
iret
cmpsb
stos
out
stos
orl
lock
and
push
sahf
adc
add
mov
push
push
sub
mov
mov
jecxz
cs
inc
lds
shrl
jecxz
jge
push
or
stos
mov
cltd
push
cli
idivb
pop
or
or
jb
add
lret
sbb
pop
mov
int
pop
int3
sub
in
decl
mov
mov
add
jb
cld
cmpsb
repz
fld
mov
dec
testb
fiadds
popf
adc
xlat
lcall
inc
push
and
sub
adc
xchg
cld
lahf
adc
bound
lret
adc
xor
shl
and
xchg
dec
pop
lds
jb
dec
xchg
aam
es
push
jmp
dec
pop
gs
cs
mov
mov
aad
mov
xor
jle
std
mov
mov
ret
cld
inc
inc
cmp
adc
add
xchg
fsubl
dec
pop
out
mov
lock
jge
in
sub
in
divb
decl
jo
or
repz
je
sub
dec
jnp
and
int
inc
jbe
lret
mov
or
and
xchg
mov
sub
xchg
fcoml
inc
mov
fwait
les
pop
jae
inc
mov
hlt
mov
xor
xlat
push
pop
and
add
dec
ret
clc
and
pop
int
mov
xchg
xchg
dec
imul
lock
add
add
mov
outsb
pop
dec
dec
inc
jge
in
add
add
or
xor
repz
cmpsb
sub
dec
add
scas
xor
and
adc
mov
sbbb
ret
bound
je
xlat
in
sub
adc
lcall
out
adc
pushf
sbb
mov
and
pushf
test
pop
add
cmpsl
cmp
mov
cmovs
repz
in
push
loopne
movsl
dec
fiaddl
int3
out
insb
push
inc
inc
dec
add
outsl
lods
pop
mov
orl
pop
or
jl
ss
mov
scas
pushf
xor
inc
aas
pushl
sidtl
pop
in
sub
pushf
and
popf
and
lea
ljmp
imul
pop
add
in
in
jnp
gs
push
and
and
mov
jne
mov
and
mov
sub
lahf
or
pop
inc
mov
pop
mov
insb
cmpsb
into
ret
add
jecxz
scas
lcall
sbb
lods
lret
mov
mov
cwtl
sbb
push
mov
pop
aas
movl
dec
jo
fmul
mov
mov
mov
mov
shll
das
stos
dec
int
fbstp
mov
add
nop
dec
push
add
xchg
jnp
xchg
dec
and
xchg
xchg
xor
nop
shl
mov
addr16
push
mov
push
add
ljmp
cmp
and
dec
xchg
pop
js
cmpsl
jle
inc
rcll
sub
xor
dec
inc
sub
jne
pusha
pop
and
jmp
or
jns
int3
andb
shlb
stos
adc
cs
stc
jle
lahf
sbb
mov
adc
xchg
jmp
push
notl
cld
sub
jg
dec
adc
inc
out
out
cmp
mov
add
cltd
out
std
rol
int
fstp
fildll
out
cmp
test
jnp
mov
rcl
das
arpl
rolb
cmp
cmc
and
mov
subl
test
fsubrp
adc
pop
add
inc
mov
push
fists
dec
popa
jecxz
inc
dec
mov
jecxz
mov
leave
fcompl
mov
push
pop
les
fldcw
dec
inc
loopne
jbe
repz
scas
lods
or
dec
jge
push
shr
arpl
dec
lock
into
or
mov
pop
and
js
shrl
dec
mov
aas
insb
lcall
iret
stos
sbb
xlat
ret
push
cmp
mov
pop
add
add
dec
adc
pop
rcrb
ficomps
lods
loop
adc
ja
fdivrl
and
cmc
add
push
dec
dec
pop
orb
rol
or
cltd
out
js
ret
loopne
xor
sbb
jle
dec
jb
mov
dec
push
inc
leave
mov
push
sub
pop
call
push
movq
or
push
sbb
insl
enter
inc
mov
insl
out
out
push
xor
mov
fsts
insb
rol
sbb
push
mov
aam
push
sub
loope
jns
mov
sub
mov
cwtl
and
adc
out
mov
shl
ret
scas
cmp
fcomp
jno
imul
dec
sahf
insl
mov
add
dec
mov
jge
in
inc
jmp
in
shlb
add
pop
sti
ja
test
fs
enter
xor
bound
sbb
inc
jbe
js
push
cli
jo
mov
shlb
xchg
sbb
xlat
mov
push
fidivrl
orl
push
jg
and
sarb
scas
pop
insb
pop
sub
in
fs
cmp
inc
fstpl
pop
mov
scas
fadd
pop
insb
inc
insl
and
sarl
jp
adc
pop
adc
sbb
insl
xchg
pop
pop
out
adc
dec
or
aas
sti
cmp
nop
xchg
enter
mov
icebp
ret
test
sbb
in
inc
shl
and
imul
sub
out
jmp
xlat
mov
rcrl
inc
sbb
add
fadds
dec
sahf
loope
mov
dec
jecxz
pushf
cs
ja
insb
jg
push
popa
insb
xchg
cmp
aam
aad
add
xor
das
rcrl
jp
mov
and
out
enter
addr16
mov
sbb
dec
xchg
je
pop
inc
idiv
mov
das
push
dec
pop
pop
xchg
add
fdivs
xchg
cmp
xorl
push
call
sbb
pop
fsts
mov
sbb
cmovle
loop
idiv
and
mov
mov
incl
leave
mov
out
cmp
xchg
cli
scas
dec
mov
push
inc
jmp
and
movsb
insl
add
pop
push
add
inc
cmc
push
xchg
imul
add
push
pop
loopne
and
aas
fbld
jg
jp
xchg
sub
stc
jo
ds
add
sbb
push
or
cmpsl
lds
add
jg
sbb
mov
lret
pop
adc
xchg
ss
call
shll
and
mov
push
ja
sti
jae
imul
sbb
hlt
mov
out
cmp
out
in
scas
push
fmull
call
in
jbe
mov
or
ljmp
out
rcll
mov
push
imul
inc
ja
sbb
jp
shl
xchg
cld
sub
jbe
sbb
jecxz
xor
cmp
lock
imul
ficoml
stc
insb
out
dec
icebp
jl
fmuls
xchg
push
pop
mov
xor
pop
stos
loope
cmpsb
clc
dec
lods
test
mov
mov
xchg
pop
dec
repz
sbb
push
data16
aam
es
xor
stc
adc
push
cmpsl
shrb
and
lcall
cmp
cmpsb
mov
pop
xor
insb
imul
int3
lcall
outsl
and
sub
add
loope
mov
xlat
add
xchg
imul
jns
cmpsb
pop
jnp
fnsave
xchg
cltd
ds
push
repz
sub
pop
add
shll
xor
add
cmp
xchg
dec
pushf
and
nop
cmc
out
push
jne
or
cmc
xchg
lea
andb
rolb
out
inc
in
push
mov
pop
loope
pop
popa
push
dec
shlb
push
xor
movsb
test
jno
aaa
cmp
gs
xchg
fwait
or
inc
int
pop
mov
jne
insb
mov
xor
lock
popf
pusha
arpl
fisttpll
mov
or
imul
mov
mov
cmpsl
or
add
lea
test
pop
fcoml
das
mov
int3
int3
loope
sbb
mov
out
repnz
popf
pop
fdivrl
or
sbb
inc
push
mov
inc
dec
adc
add
outsb
insb
testb
pop
sub
jo
and
inc
std
mov
enter
add
mov
js
mov
popf
cmpsb
repnz
mov
pop
out
mov
mov
mov
fsubp
pusha
pop
sub
mov
inc
mov
or
dec
shll
pop
inc
sbb
sub
xor
loop
mov
cld
add
mov
or
inc
pop
add
adc
shll
pop
push
lods
ljmp
mov
movsb
daa
loope
cmp
inc
mov
jo
and
pop
xorb
cmp
push
adc
nop
shll
lea
xchg
adcl
dec
repz
dec
enter
int
push
js
rcrl
mov
dec
inc
inc
int3
mov
rorb
and
lea
mov
mov
or
cld
gs
adc
sahf
test
dec
add
sbb
xchg
je
stc
dec
push
jp
dec
and
sbb
adc
lods
ret
lcall
andb
or
jae
cmp
lods
inc
fwait
sbb
jmp
enter
lds
scas
sbb
sub
lds
std
inc
sub
xchg
jne
scas
test
fisttpl
jns
je
pop
sub
mov
outsb
fwait
or
pop
jb
cmp
mov
mov
lahf
xor
adc
das
mov
mov
hlt
fmull
lock
mov
mov
faddp
dec
in
mov
mov
mov
je
sarb
add
in
loop
mov
imul
jne
xor
nop
and
aad
add
test
cmp
jo
out
add
dec
cmpsb
jns
push
fs
scas
movl
das
popf
ja
mov
or
shlb
mov
fs
cmp
cwtl
add
cmovge
adc
or
cmpsl
push
js
push
aaa
fldt
pop
dec
gs
in
xor
lods
insb
jns
pop
mov
add
scas
fstpt
stos
cmpsb
pushf
repnz
or
loop
xor
test
rcrl
adc
xchg
add
sbb
arpl
inc
das
out
stos
sbb
mov
mov
mov
lods
lahf
jmp
mov
and
cmpsl
mov
adc
sbb
sbb
xor
and
lcall
push
jle
insb
sub
stc
daa
loope
roll
sbb
data16
lcall
cmp
outsl
or
push
aaa
or
adc
aam
sbb
sahf
add
hlt
dec
push
pop
adc
or
arpl
cmp
stc
jge
mov
inc
fadd
ja
ljmp
aaa
adc
movsb
in
cmpl
mov
inc
jns
outsb
call
jae
sub
pop
and
xrelease
js
and
xor
sahf
shlb
scas
adc
dec
je
hlt
adc
xchg
jno
cmc
daa
xchg
jecxz
data16
cmpsb
fucomip
push
cmp
mov
add
sub
aad
mov
add
mov
dec
add
xchg
fnstcw
cmpb
pop
add
xor
lea
js
fcomps
rcrb
stos
scas
cmp
movsl
add
mov
roll
mov
xchg
imul
and
cli
cmp
mov
mov
cmp
or
mov
or
jmp
cmp
arpl
or
xchg
fiadds
popa
push
je
pop
out
cli
xlat
fldt
cmp
in
ljmp
xor
inc
ret
add
xchg
inc
mov
enter
sbb
dec
xchg
in
outsl
xchg
loope
mov
testl
mov
push
adc
stc
gs
daa
xor
xchg
stos
fcoml
jmp
ja
fld
adc
jmp
xchg
movsl
sub
xor
or
pop
js
dec
inc
xor
cmp
out
imulb
rolb
hlt
xchg
fistpl
lcall
or
cli
mov
pop
xchg
sbb
clc
ja
addr16
jg
adc
xchg
jmp
test
popa
jp
dec
mov
outsl
jmp
jmp
mov
push
ficoms
adc
repz
pop
cmp
mov
mov
imull
and
loope
push
pop
push
xor
and
adc
add
jno,pt
add
pop
adc
cmp
insl
test
and
jns
xor
mov
out
sub
ss
cmpsb
push
imul
repz
nop
cld
rcrb
stos
mov
inc
jb
jae
add
ret
push
daa
cwtl
mov
inc
pop
jmp
imul
mov
idiv
xchg
jb
xchg
das
stc
mov
sbb
mov
gs
mov
add
lret
into
sub
xor
in
pop
scas
mov
mov
loopne
xchg
cmpsl
cmp
mov
xchg
movsl
pop
jo,pn
ret
andl
or
cmp
jg
sbb
mov
cmp
std
ds
inc
add
inc
push
xchg
sbb
inc
cltd
jge
lods
insb
xchg
icebp
push
sbb
cli
and
dec
xor
gs
bswap
pop
dec
call
lea
xchg
mov
insb
or
push
add
mov
push
js
sbb
inc
sbb
and
cmp
aas
add
lock
fidivl
pop
mov
scas
repz
push
and
inc
inc
push
jecxz
add
out
les
aam
test
les
les
jmp
and
stos
sub
mov
pop
movsl
sub
jae
xchg
es
push
test
sub
data16
push
mov
jbe
outsb
sub
lret
jle
sar
fiaddl
push
jmp
or
pop
xchg
jmp
in
roll
pop
test
jecxz
iret
sarl
sub
js
or
sub
lods
dec
jecxz
rcrl
fbld
or
mov
inc
sar
add
and
cmp
mov
mov
sar
mov
gs
pop
add
fsubl
les
push
loope
jecxz
push
adcl
adc
cmp
aam
js
cmp
cmp
stc
mov
ret
cltd
icebp
ss
leave
andl
test
inc
sub
ret
sub
cltd
dec
pop
rcrl
add
insb
fcmovnu
adc
in
leave
sbb
mov
xchg
mov
dec
push
movb
cwtl
xchg
pop
sbb
aaa
jnp
sub
push
imul
xchg
fwait
mov
mov
stc
leave
dec
jo
out
aas
adc
imul
sub
add
xchg
rcrl
inc
and
mov
xchg
push
in
mov
push
rcl
jmp
js
mov
pop
cmp
movsb
imul
mov
jno
mov
xor
mov
ljmp
xchg
jns
mov
xlat
pushf
stc
pop
in
add
sub
push
pop
pop
stos
push
ret
jl
les
pop
mov
pop
cmc
fisubs
dec
ds
insl
xchg
jbe
lods
shrl
pop
jge
std
sbb
into
addr16
imul
fucomip
cmp
dec
popf
mov
push
jle
add
xor
lods
rcll
pop
or
xchg
jg
lcall
jge
fistpl
xor
fcompl
lcall
mov
jb
jp
lret
sbb
mov
xchg
push
inc
sbbl
shlb
add
subb
shlb
and
mov
jmp
pop
or
out
sbb
daa
dec
fsubrs
pushf
popa
addr16
setne
ds
adcb
les
pushf
pop
mov
fsubl
jmp
mov
dec
xchg
ficomps
loop
mov
or
jae
insl
loope
cwtl
mov
repnz
stc
call
pop
or
dec
xor
movsb
insl
call
pop
scas
jmp
movsl
inc
xor
out
dec
mov
imul
mov
mov
adc
dec
repz
cmpsb
movsl
mov
adc
mov
xchg
inc
movsb
and
add
jge
inc
inc
dec
mov
dec
mov
test
lcall
es
xor
or
mov
mov
inc
lock
push
fwait
lcall
dec
or
sub
sbb
test
mov
push
imul
les
popa
inc
jns
dec
adc
out
mov
dec
stc
xchg
mov
jb
push
and
xchg
dec
cmp
lods
jae
push
and
cmp
scas
cmp
popa
mov
push
lock
lahf
mov
scas
pushf
xchg
and
pop
mov
rcll
push
add
dec
inc
sahf
mov
out
imul
bound
test
cmpsl
pop
mov
out
pop
into
jmp
mov
sarl
jbe
insl
sub
outsb
sahf
pop
add
fadd
xor
add
pop
sbb
fs
add
test
cwtl
dec
fwait
pop
push
pop
lds
into
fmuls
mov
jne
jg
mov
popa
add
sti
je
mov
scas
cmp
call
cmp
jge
dec
mov
insl
pop
xor
sub
pop
testl
jg
mov
pop
pop
cmp
xlat
imul
bound
cmc
xchg
xchg
jl
mov
xor
pusha
aam
fs
mov
sub
stos
lahf
movsl
rol
loopne
pop
pop
iret
shll
fldt
fistpll
push
xchg
aaa
rorb
or
outsl
fimuls
pop
dec
lea
or
cli
sbb
cld
sbb
test
popf
sub
xor
jle
stos
xor
pop
push
loopne
ds
imul
push
inc
adc
movsb
out
mov
lahf
mov
xchg
jle
jp
rcrb
hlt
push
fisubrl
movsl
test
xchg
js
loope
lea
std
aad
iret
ret
fimuls
mov
xchg
repnz
in
pop
ret
shl
in
ljmp
mov
mov
pop
jno
sbb
dec
dec
adc
je
pop
imul
xor
loope
mov
fwait
add
popf
rorb
daa
call
push
je
lea
int3
mov
addr16
sti
scas
ja
std
lds
cs
fstl
push
ret
rorl
in
loop
mov
cli
xchg
xor
loop
in
call
push
sub
cwtl
sarb
xor
adc
xor
sbb
add
inc
xchg
inc
jnp
xlat
imul
push
dec
in
data16
movsb
dec
mov
cld
lods
adc
mov
or
xor
mov
and
cli
pop
mov
xor
ud2
xor
in
insb
push
je
xor
dec
inc
popa
lret
adc
push
dec
stc
out
or
adc
sahf
mov
jl
hlt
xlat
lret
mul
pop
inc
pop
push
lcall
fsubr
dec
mov
repnz
pusha
out
pop
xchg
push
xor
inc
push
jo
je
jp
subb
xchg
sti
jnp
or
cmp
or
dec
xlat
push
lahf
test
cmp
inc
test
push
fwait
sbb
imul
cmpsb
mov
cltd
and
mov
std
cmpb
bound
adc
test
imul
addr16
add
sbb
push
cmp
or
or
push
or
jp
pop
popa
adc
scas
repz
xor
xchg
pop
jns
or
sbb
lret
testl
dec
addr16
sub
sbb
outsl
mov
jno
repnz
repnz
xor
push
outsb
outsb
shlb
test
mov
cwtl
lret
dec
jge
out
movsl
in
push
push
mov
fnstenv
inc
mov
in
and
dec
xchg
outsb
sub
lahf
dec
stc
and
or
push
loop
testl
or
clc
xor
jg
inc
test
pusha
aaa
enter
test
rorb
mov
sub
leave
lcall
sub
mov
mov
dec
sbb
ljmp
cltd
xor
jns
or
add
and
pop
hlt
lea
push
js
and
mov
jne
rorb
jno
xchg
jnp
ret
and
push
xchg
pop
jle
jbe
inc
or
ds
mov
jp
iret
rcrb
and
stos
lea
sbb
cwtl
push
lcall
mov
jns
pusha
fistl
pusha
dec
neg
ljmp
in
je
ret
out
ds
lret
push
sti
cmp
jl
xchg
imul
inc
fbld
push
in
stos
mov
idivb
daa
jecxz
les
mov
test
scas
loope
into
aas
in
inc
inc
addb
fldcw
or
fldl
pop
xor
andb
and
and
js
cmp
mov
pop
repnz
scas
fnstenv
popf
movsb
ss
xor
cmp
sub
mov
dec
jae
dec
dec
in
movsl
add
mov
scas
xor
mov
mov
leave
lods
adc
jmp
adc
call
adc
and
addr16
mov
xchg
fisubl
push
loope
loop
sub
xor
dec
mov
dec
xor
pop
push
int
insl
jecxz
sbb
mov
sub
mov
fcomps
gs
ljmp
jp
mov
mov
sbb
mov
push
add
int
cmp
cs
outsl
repz
rcll
fldenv
mov
push
inc
fstl
mull
xorl
test
test
int
fs
in
idivl
popf
loop
pusha
cmp
jmp
jns
jo
frstor
cli
cmpsl
ret
mov
jnp
icebp
mov
pop
xor
pop
aaa
and
movsl
rclb
push
pusha
sub
push
mov
cmp
push
loop
add
pop
jno
or
les
aam
test
mov
xchg
push
jno
pop
dec
inc
mov
hlt
push
inc
cmc
call
jnp
jecxz
or
xor
repnz
orl
sub
mov
sbb
pop
rol
hlt
pop
cmovl
xchg
jmp
out
jmp
dec
and
sub
lock
pushf
sub
xchg
popf
or
outsb
imul
dec
mov
jmp
vmulsd
bound
push
xor
cmpsb
mov
divl
cmp
inc
pop
and
mov
lret
in
lock
xchg
xchg
icebp
jge
cmp
shrb
and
pop
xor
bound
inc
push
pop
testb
mov
mov
getsec
fucomi
lds
push
movb
pop
dec
repnz
add
pop
jmp
les
idivl
lretw
add
ss
aaa
mov
jle
and
cmp
andl
and
mov
dec
pop
aad
xchg
cltd
loopne
daa
and
xchg
mov
or
les
push
stc
push
icebp
mov
test
cmp
testl
sbb
push
push
sub
pop
adc
dec
or
mov
cmp
in
xlat
dec
cs
or
mov
icebp
push
mov
inc
add
mov
mov
jecxz
aam
pop
loope
popl
and
aaa
test
leave
fs
arpl
cmp
enter
xorb
xor
add
ficompl
ss
pusha
xor
inc
push
adc
andb
inc
lret
es
out
sbb
insl
dec
push
cmp
mov
out
sbb
mov
int3
sub
mov
loopne
jmp
les
xor
out
ja
push
daa
push
scas
addb
mov
lret
out
cmpsb
cwtl
ljmp
mov
mov
cmpsl
cmp
sbb
sbbl
xchg
ljmp
mov
fisubs
jle
xchg
add
adc
stos
hlt
inc
movsb
xchg
rcll
push
sub
fdivl
popf
mov
xorb
icebp
push
pop
ss
lea
or
add
cld
sub
pop
lcall
orb
cld
loop
scas
xor
rcrl
test
push
pop
and
stos
or
ds
aam
hlt
ret
or
or
inc
call
cs
andb
int
cmp
mov
aad
cmp
test
xchg
lret
sbb
inc
dec
nop
sbb
jo
mov
lds
sub
mov
xchg
or
sti
pop
mov
out
xchg
push
xchg
dec
xchg
dec
xchg
xlat
inc
xchg
and
adc
rcrb
push
pop
cmp
test
mov
adc
sbb
xchg
xchg
or
pop
fdivr
subl
test
jge
jl
adc
jmp
adc
mov
cmpxchg
xor
pop
jo
add
xchg
psrlw
cmc
sub
pusha
jno
or
mov
sbb
jle
or
loope
add
stc
ficoms
sub
push
adc
xchg
cltd
jne
push
cmp
lods
aas
sbb
sbb
loopne
mov
imul
mov
and
not
jo
shl
jo
std
into
adc
out
lret
out
or
je
sub
or
or
hlt
adc
pop
dec
jle
pop
adc
in
in
imul
and
movsl
push
mov
add
aam
std
ret
jg
scas
mov
iret
jmp
loopne
mov
test
arpl
mov
pop
pop
add
push
and
pusha
out
push
fs
mov
push
mov
mov
addr16
les
js
sbb
add
aam
lahf
dec
xchg
arpl
ficomps
mov
and
inc
js
out
or
jecxz
jle
into
sub
push
push
testl
gs
out
adc
mov
dec
or
or
mov
xor
imulb
rclb
and
jmp
cmp
popa
push
cmp
inc
es
mov
mov
cmpsl
dec
sbb
aaa
push
sbb
loopne
push
xor
xorl
int
mov
cltd
repnz
out
call
mov
inc
notl
mov
mov
sti
mov
jecxz
shr
test
test
push
xor
dec
ret
inc
dec
sub
aad
jne
gs
mov
xor
inc
xchg
sbb
outsl
gs
inc
dec
add
cmp
outsb
das
mov
or
dec
xchg
bound
sbb
push
mov
enter
stos
xchg
fs
in
push
dec
xor
pop
fnstenv
lods
pop
add
stos
xchg
dec
push
dec
mov
fwait
lds
repnz
cltd
sub
adcl
adc
clc
imul
xchg
lret
lahf
ljmp
out
mov
sbb
js
sbb
xchg
outsl
mov
xlat
xchg
cmpsb
jmp
mov
or
bnd
adc
divl
mov
rclb
or
pop
pop
imul
add
dec
dec
fs
push
sub
and
adc
or
cmp
xchg
movsl
mov
xchg
cmpsl
lea
xchg
aad
and
ja
push
es
aad
xorb
cmp
scas
vshufps
shl
cmc
mov
rcl
dec
mov
cmp
push
pop
mov
sub
mov
div
jo
pop
mov
arpl
lods
sub
jp
lret
pop
lods
xor
pop
stos
xor
xchg
and
arpl
and
jae
fwait
sbb
mov
add
idivb
and
dec
cmpl
sub
sub
bound
test
push
adc
pop
and
ljmp
push
dec
outsl
rorb
and
inc
mov
mov
pop
outsl
and
sub
push
insb
out
inc
js
push
xchg
sub
jecxz
imul
js
inc
add
mov
adc
stc
inc
sub
sbb
xor
dec
jg
inc
mov
inc
xchg
aad
add
push
mov
fstpt
lcall
cmpl
mov
testb
or
imulb
aas
jne
stos
repnz
cmpsb
pop
ljmp
in
jne
scas
mov
bound
mov
push
xor
pop
sbb
push
outsl
cmpsb
dec
sbb
xchg
dec
jmp
jo
data16
pop
cmp
scas
aaa
fcmovu
push
push
mov
or
aad
or
je
xor
in
push
divl
out
or
mov
push
add
dec
push
adc
scas
push
pop
pop
dec
lret
movsl
add
pop
fs
rclb
repnz
sub
or
pop
inc
xor
push
sbb
jnp
sbb
cmc
lods
sbb
cs
and
add
dec
jecxz
sti
and
mov
imul
mov
gs
dec
mov
adc
push
sub
pushf
shlb
data16
sbb
aam
test
cmc
xchg
fldenv
ds
mov
add
enter
mov
aam
adc
cmp
fisttpll
adc
shl
setns
adc
mov
dec
jp
push
adc
mov
xchg
cwtl
sbb
mov
in
jg
add
pop
and
pop
mov
and
and
or
test
lods
iret
sti
push
inc
mov
xchg
xlat
and
shrb
popf
pop
mulb
mov
push
aaa
and
fstps
sarb
xor
addr16
loopne
xchg
sub
or
mov
cmp
xor
and
inc
je
js
into
sub
pop
adc
mov
mov
stc
hlt
das
mov
mov
testb
out
xorb
pop
fwait
sti
imul
sbb
sbb
sarb
cmp
lods
out
jmp
adc
lds
jecxz
aad
add
dec
out
mull
fnsave
dec
scas
int3
jne
and
ficoml
test
call
xorb
fstpt
lretw
imul
jo
cltd
ja
les
mov
mov
fcoml
imul
jno
roll
movsb
inc
dec
iret
fisttps
mov
ss
push
enter
add
mov
pop
mov
xchg
mov
adc
pushf
cmpsl
pop
imul
mov
faddl
mov
inc
cmp
dec
repz
or
or
xchg
in
cmovp
mov
pop
loopne
push
pop
test
mov
adc
std
mov
cmp
fldl
rcr
push
jns
ss
cmc
dec
xor
dec
lods
push
ss
icebp
outsl
add
mov
fucomp
aas
xchg
test
call
add
jge
clc
cmp
testl
repz
das
push
add
adcl
aas
sbb
add
fsubrl
cmp
outsb
push
stos
jbe
lcall
xchg
hlt
cs
jbe
pop
outsb
fs
pop
or
cmc
lret
lret
rcll
mov
aam
sbb
dec
inc
xchg
pop
sarl
pop
mov
mov
in
xor
xchg
cwtl
dec
xchg
inc
xchg
xor
dec
add
mov
cld
mov
rclb
dec
push
inc
pop
mov
xchg
cmp
fcoms
lods
cltd
std
push
inc
jl
int3
popf
mov
jno
push
data16
shrb
je
mov
mov
cmp
or
ljmp
bound
dec
and
fistpll
gs
pop
lods
jmp
lods
clc
dec
sbb
pop
subb
adc
out
adc
mov
fdivrs
mov
out
pop
cmpsl
jns
pop
pop
jp
or
popa
jmp
cwtl
lcall
int
push
insb
cli
xchg
xor
add
aad
or
stos
adc
lds
mov
idivl
loop
jno
adc
cltd
xchg
jecxz
jne
ljmp
popf
inc
jo
imul
xor
test
xchg
pop
fisubs
mov
clc
in
mov
int
push
jo
inc
dec
mov
cld
lds
jo
aas
xchg
sub
arpl
mov
stos
adc
insl
mov
test
in
mov
jnp
mov
movsb
mov
push
int
mov
icebp
pushf
jb
fst
cwtl
push
fisubl
or
dec
and
fcoml
jne
dec
sbbb
in
outsb
insb
mov
or
je
std
or
repnz
xor
test
mov
dec
in
cmp
outsl
inc
mov
jb
test
testl
sbb
or
push
arpl
dec
sub
int
jge
lock
mov
dec
std
das
pushf
sub
loop
scas
push
test
or
shr
lahf
mov
ret
cmp
mov
aas
inc
inc
call
bound
gs
dec
push
test
sbb
mulb
imul
mov
cs
arpl
inc
xchg
dec
mov
aad
sbbb
pop
xlat
lahf
jb
daa
imul
xorb
pusha
sub
pop
aas
inc
lods
add
inc
fisubs
fnstcw
mov
loope
push
mov
movl
aam
and
mov
xchg
sub
out
xor
es
ds
mov
imul
out
inc
pop
roll
and
pop
mov
push
xor
outsl
dec
xor
jne
cld
add
push
ret
pop
push
movsl
test
scas
mov
xor
scas
xor
rcrb
cmpsb
sbb
jne
lahf
jle
shl
imul
mov
dec
pop
int
stos
ss
push
mov
ss
outsl
es
push
fldl
rorb
es
popa
hlt
mov
cltd
mov
xor
fldt
popl
sbb
jg
xchg
sbb
adc
popa
and
xor
and
mov
test
rcll
add
adc
in
das
dec
adc
lcall
daa
loope
dec
cltd
jns
and
aaa
shll
adc
out
xor
es
daa
imul
mov
movl
int3
loopne
sbb
push
in
in
and
push
push
push
icebp
inc
fs
repnz
dec
sub
outsb
mov
sbb
pop
add
mov
bound
ljmp
les
adc
add
and
shrl
fmull
adc
stos
repz
adc
xchg
push
inc
xchg
lret
cmc
mov
mov
or
repnz
aaa
fildll
das
or
mov
and
and
mov
call
iret
fildll
and
or
shll
mov
ljmp
roll
jne
rolb
add
pop
gs
sub
push
mov
fsubl
daa
fldcw
xor
lret
mov
xchg
xchg
filds
jne
pop
mov
jge
test
cmp
and
xor
cmp
fwait
or
mov
jp
inc
sbb
bound
data16
or
sub
stos
dec
push
push
in
pop
pop
push
dec
mov
dec
and
mov
lret
pop
dec
push
mov
sahf
push
nop
sahf
pusha
and
les
pop
adc
arpl
jmp
repz
jno
popa
mov
lods
xchg
ds
add
ret
jg
mov
jp
rorb
scas
rcrl
dec
and
mov
in
ficomps
outsl
into
ja
mov
loop
mov
test
nop
cltd
bound
das
daa
jb
cmp
mov
sahf
xchg
add
mov
das
adc
and
inc
cmp
repz
push
jne
test
aaa
ljmp
add
in
mov
sub
mov
mov
enter
add
shll
xor
test
in
pop
lds
push
add
and
dec
ror
add
dec
popa
sbb
inc
xchg
inc
cli
lret
sbb
push
mov
lds
push
scas
pusha
cmovno
push
shl
repnz
push
sub
or
repz
mov
push
in
mov
test
xlat
ret
or
sti
pop
lds
ror
sub
add
clc
aaa
mov
int3
mov
ds
fsubrs
inc
adc
sbb
push
and
inc
jne
aam
inc
pop
dec
loopne
add
les
fdivr
cmp
mov
stc
lcall
jle
xor
cmp
or
decl
pop
pop
ljmp
pop
add
cmp
inc
pop
sbb
xchg
out
inc
mov
cmpsl
add
push
jnp
bound
jno
pop
fs
stc
pop
test
insl
into
xchg
fs
lahf
xor
sub
xchg
sbb
lea
sahf
add
imulb
mov
insb
mov
and
insb
push
xchg
dec
stos
lds
sbb
mov
jae
decl
shr
ror
lods
jns
sub
cmp
adc
mov
leave
mov
gs
or
mov
jbe
enter
imul
ret
add
xchg
adc
or
arpl
repnz
push
adc
inc
jae
es
icebp
popa
aad
jae
lea
xlat
and
js
jecxz
cmpsl
clc
stos
dec
outsl
insl
jg
scas
cli
add
fisttps
mov
rcll
push
in
in
fs
popa
jecxz
mov
out
sarl
fsubs
lahf
bound
loop
or
test
dec
dec
adc
rorl
and
mov
addr16
jmp
jmp
mov
mov
adc
adc
aad
mov
cld
lahf
push
cwtl
mov
pop
xchg
jl
lcall
jo
mov
cmp
ds
jmp
cltd
dec
fwait
push
mov
mov
cmpsl
sub
lds
jp
arpl
ficomps
pop
imul
mov
or
rolb
dec
loope,pn
sub
xchg
in
jbe
push
xor
inc
cmp
adc
stos
jp
jecxz
dec
xor
lahf
stos
mov
pop
test
mov
iret
data16
cli
lods
pop
cmp
outsl
jmp
pop
or
repz
sub
dec
mov
bound
add
dec
adc
mov
rorl
jp
inc
scas
daa
xchg
jno
in
add
addr16
lods
aad
test
inc
imul
leave
xchg
in
notl
xchg
sbb
aam
aam
jbe
sti
shl
arpl
lret
dec
add
ljmp
jns
ret
daa
xorb
outsl
mov
cmp
stos
push
jmp
sbb
xchg
pop
push
and
xor
xchg
jp
pushf
cmp
leave
push
sub
fnsave
std
jg
out
pop
adc
test
mov
cli
js
test
adc
in
xchg
and
stos
or
lods
and
loopne
push
push
cmpsl
fwait
jmp
test
push
bound
notb
fdivrs
int3
sbb
mov
or
or
stos
xor
add
xor
stos
cmp
sub
push
outsl
insb
mov
jmp
les
cmp
dec
mov
xchg
imulb
push
into
loope
push
push
and
inc
roll
xor
repnz
into
cmpsb
mov
jo
gs
in
repz
es
inc
jo
push
mov
xchg
push
adc
mov
and
jnp
push
inc
jo
xchg
insl
add
lcall
cld
jae
divl
mov
cmp
mov
mov
andps
adc
mov
push
adc
push
add
push
sti
lret
jmp
test
stc
push
xor
xchg
pop
das
push
mov
push
push
push
pop
mov
mov
jo
sub
scas
sbb
push
mov
push
fld
mov
pop
pop
aam
popf
outsb
and
fwait
icebp
in
lock
popf
shrb
mov
xchg
mov
pop
add
dec
out
push
pop
enter
shll
cmpl
inc
aaa
and
xor
aam
mov
fwait
adc
or
paddsw
adc
lret
dec
jnp
lds
jp
lods
into
mov
lock
ja
jl
push
jb
insb
push
outsl
inc
cwtl
cs
dec
lods
std
std
mov
cmp
sbb
data16
fbstp
aaa
popa
mulb
xchg
jbe
mov
lods
rcr
jnp
jecxz
stos
iret
xor
push
sti
cmp
cmpsb
push
mov
xchg
test
repz
in
jae
movsb
cs
insb
fisttpl
out
push
fidivs
lss
mov
lret
or
adc
pop
mov
cmp
add
std
push
xchg
fwait
cmp
push
or
enter
add
sub
sub
cmp
sub
hlt
sub
dec
fst
mov
xchg
xchg
mov
sbb
pop
lea
xchg
dec
mov
bound
xchg
cli
adc
or
sbb
mov
add
jp
aam
pop
dec
loope
add
xchg
cmc
jnp
push
cli
sub
fnstsw
fs
sti
int3
hlt
mov
xchg
call
rorl
cs
clc
in
or
js
cmp
adc
xor
stc
movsl
and
les
inc
icebp
out
pop
addr16
outsb
adc
ja
lods
nop
aaa
pop
in
lods
ja
fs
in
push
cwtl
iret
lea
js
jo
cwtl
cmpb
or
push
scas
dec
lds
mov
dec
stos
in
xchg
push
xchg
mov
out
pop
push
mov
cli
xor
mov
mov
dec
movsl
fcoms
push
dec
push
mov
jge
xchg
int
add
adc
inc
mov
cmp
lods
aas
lahf
mov
add
push
sbb
dec
or
ss
mov
inc
rcrb
hlt
cmp
xchg
dec
mulb
out
jecxz
lcall
jle
cmp
dec
mov
je
sub
sarl
mov
lds
insb
fs
aaa
cmp
and
data16
sarb
add
imul
in
push
popa
xchg
push
xchg
mov
in
loope
jns
xchg
push
imul
mov
inc
cmpl
cld
outsb
mov
adcl
xchg
xor
imul
mov
ret
fwait
mov
cmovg
jmp
mov
int
inc
mov
fildl
mov
push
sub
mov
and
in
sub
inc
push
mov
adc
jbe
adc
ret
pop
sub
cwtl
xlat
repz
inc
add
push
les
bound
mov
xchg
mov
ret
and
or
fnstenv
fnsave
iret
enter
fdivrs
push
sbb
and
filds
xchg
shl
icebp
dec
mov
lods
sbb
jb
mov
in
add
xor
adc
xchg
imul
jmp
enter
mov
les
sub
stc
icebp
cli
das
xor
inc
xchg
test
mov
mov
pushf
fidivl
sbb
pop
push
fs
mov
adc
inc
lods
pop
jnp
daa
sbb
xchg
mov
or
ljmp
or
pop
inc
mov
inc
outsl
and
loope
icebp
fisubrl
or
jno
push
cmp
dec
cltd
mov
jmp
cmp
inc
dec
push
scas
xor
sub
sub
adc
xchg
mov
or
ljmp
mov
jmp
jmp
dec
adc
std
push
sbb
mov
lahf
imul
subl
lods
dec
dec
mov
cs
and
test
xchg
mov
mov
fcoms
or
mov
mov
fwait
cmp
call
pusha
lods
dec
and
popa
into
push
cwtl
iret
jb
inc
mov
jae
jecxz
push
and
test
mov
and
lret
mov
push
or
les
adc
cmpsb
pushf
shll
loopne
imul
sbb
fdivl
jb
dec
dec
filds
xchg
sbb
lds
or
xchg
xor
jge
sti
clc
xor
or
push
mov
lret
jp
in
xor
sbb
hlt
dec
or
pop
adc
sahf
lock
add
inc
cld
push
aaa
add
test
xchg
adc
jp
jmp
rorl
filds
ficompl
sahf
das
les
faddl
insb
xlat
jmp
sbb
mov
jp
pop
lcall
stc
fisubs
cwtl
jg
mov
xor
dec
mov
int
add
cmp
pushf
or
sbb
jae
jnp
mov
in
adc
mov
adc
vminps
push
xchg
mov
rclb
stc
leave
cs
adc
jo
push
xor
or
sub
mov
loope
ljmp
pusha
mov
loope,pt
call
mov
mov
and
add
mov
xorb
mov
add
pop
jmp
stos
int
push
in
sbb
mov
arpl
subl
xchg
fiadds
scas
sub
cmpsl
orb
sbb
mov
inc
daa
xchg
mov
cmp
cli
mov
ret
loope
repnz
test
adc
inc
cmp
pusha
sbb
nop
cmpsb
mov
mov
jbe
pop
insl
xchg
loope
or
shr
cmp
popa
push
sub
and
or
fwait
xor
pop
add
icebp
xchg
in
orl
inc
lock
es
mov
iret
xchg
or
pushf
xchg
mov
mov
frstor
lods
ret
hlt
mov
mov
or
mov
into
inc
cmp
test
sbb
pop
enter
jmp
push
sbb
fucomi
icebp
push
stos
cmpsb
stos
xor
mov
scas
mov
mov
dec
adc
aam
imul
sbbb
or
lods
push
push
jns
ljmp
push
mov
mov
add
mov
int3
das
clc
adc
addr16
xor
std
sbb
lcall
xor
push
pop
pushf
popf
cmp
sub
push
add
repnz
sbb
int3
mov
or
leave
adcl
cmp
push
xchg
call
add
inc
cwtl
ljmp
enter
aaa
cmc
pushf
addr16
add
iret
jmp
in
stos
pop
pop
jp
jns
pushf
mov
mov
jae
cwtl
fstp
mov
je
push
sbb
push
scas
and
sti
rcrl
lea
lret
cmpsb
mov
jecxz
pushf
add
mov
jne
sbb
sti
xor
in
cli
sbb
xor
les
and
mov
inc
ja
push
stos
ret
mov
sti
pop
leave
call
pop
in
xchg
xchg
dec
xchg
in
pop
xchg
mov
xor
push
shll
scas
or
mov
negb
push
outsl
repz
aam
arpl
mov
mov
xchg
icebp
mov
movsl
or
sbb
sub
mov
jbe
jae
je
sahf
pop
inc
call
add
testb
jno
add
sub
jecxz
dec
dec
je
jmp
aaa
xchg
int
addr16
xchg
or
xor
xlat
ljmp
mov
in
arpl
dec
clc
sbb
sub
rcll
jmp
mov
imul
push
orb
mov
in
call
cltd
js
shl
mov
sub
pop
mov
shll
inc
jo
cmp
pop
stos
jae
imul
push
stc
jp
test
test
outsl
insl
xor
and
data16
hlt
rclb
loop
pop
lea
pop
flds
jns
pop
ret
lods
and
iret
daa
pop
aaa
mov
mov
and
mov
dec
lds
call
sbb
call
xchg
fs
int3
cmpsl
stos
adc
adc
push
cwtl
and
push
aas
xchg
xlat
iret
scas
adc
lret
js
pop
push
jbe
rolb
mov
or
stos
dec
loope
dec
push
and
jae
push
lret
jmp
out
gs
scas
outsb
shlb
dec
mov
cmpsl
xor
cmp
inc
jl
lret
jne
add
xor
addb
sub
imul
push
xchg
sub
or
sbb
or
lcall
mov
je
adc
cs
popa
out
sub
in
leave
mov
or
and
sub
cmp
mov
rcrb
aad
cmp
mov
sbb
or
ljmp
sub
aaa
lods
inc
cmpsl
mov
dec
ret
push
rorb
jne
out
cmc
inc
and
xchg
int
dec
mov
insl
std
mov
adc
dec
int3
addr16
jbe
ss
jp
mov
and
lods
lahf
andb
xchg
jne
inc
sbb
pusha
xor
cmc
sub
xorb
add
outsl
dec
add
int
xchg
mov
shr
mov
xchg
repnz
jl
cmc
cmp
insb
mov
leave
dec
mov
jp
push
cmp
push
pusha
in
leave
out
mov
mov
call
popa
jecxz
aad
hlt
or
jp
cmc
addb
cmp
xor
in
or
jp
push
xchg
and
pop
xchg
and
lret
shlb
fcoml
or
data16
fimuls
xchg
insl
pop
clc
mov
andb
pop
stos
dec
inc
mov
dec
in
sti
popa
fnsave
test
adc
push
mov
lods
clc
divl
loope
adc
sub
insb
fwait
push
bound
mov
push
adc
imul
adc
or
inc
adc
push
out
mov
ds
repnz
bound
add
fwait
sbb
xchg
cmp
shll
pop
fdivr
or
popa
mov
xor
insl
ret
dec
xor
jmp
mov
mov
paddd
mov
sbb
repnz
xor
aaa
sub
je
push
inc
pop
pusha
test
mov
push
stc
scas
js
add
inc
pop
push
movsb
fs
dec
mov
and
leave
jae
test
scas
ret
and
inc
lea
lds
pop
cwtl
sbb
push
clc
aad
inc
jne
int3
sbb
cli
repz
jmp
cmp
sbb
xchg
sub
add
ds
add
repnz
dec
daa
insb
and
in
stos
push
sti
jg
ss
mov
imul
in
popa
inc
icebp
push
push
xchg
mov
fcomp
icebp
mov
sub
lret
loop
adc
negb
movsb
mov
mov
lret
mov
xor
add
pop
out
pop
hlt
aas
fbstp
pusha
cs
pop
andnps
ljmp
jp
dec
or
movb
lea
pop
push
in
ds
lods
leave
lock
into
into
or
jae
icebp
pop
sti
push
mov
aas
pop
inc
lods
add
mov
xchg
mov
out
testl
mov
pop
mov
push
imul
sbb
popa
mov
loopne
push
adc
dec
pop
jns
out
cld
xor
adc
icebp
and
pop
rcrl
lahf
xchg
movsl
or
jg
inc
nop
inc
jle
xchg
mov
xchg
inc
pushf
inc
ds
mov
in
out
stc
fildll
mov
sub
jmp
sbb
xchg
std
add
enter
test
xchg
xchg
outsl
leave
xchg
push
dec
pop
mov
jns
or
divb
jno
popa
xchg
outsl
adc
mov
add
lods
jbe
scas
mov
cmpsb
jp
fisttpl
fmul
ret
mov
cmp
and
fdivrs
in
pusha
adc
ljmp
das
adc
cmp
xchg
out
cmp
call
arpl
push
imul
pop
mov
imul
movsb
push
jns
sbbb
jno
pop
subb
jno
sbb
test
mov
insl
jl
sub
fisttpl
mov
icebp
fdivs
xor
sub
and
push
int3
movsl
mov
pop
xor
mov
mov
mov
jb
mov
aam
dec
das
insb
gs
test
enter
mov
jl
push
jae
or
loop
jge
jno
cwtl
enter
xor
iret
xor
add
pop
and
fildl
loope
stos
cld
cmp
test
xchg
or
lahf
jb
fnstenv
inc
scas
adc
xchg
cmp
incl
dec
mov
fisubrs
mov
mov
sbb
cwtl
jge
repz
inc
pop
push
stc
cmp
std
test
push
jge
or
loope
fmuls
lods
std
movsb
push
in
dec
mov
fwait
pop
mov
xchg
jecxz
int3
xchg
mov
ds
lds
jecxz
mov
jl
pop
lar
adc
inc
and
cmp
cltd
jmp
ja
flds
icebp
inc
and
mov
les
mov
cmp
mov
add
mul
cli
adc
sub
sbb
ss
and
xchg
mov
cmpsb
sbb
js
pusha
andb
xor
cmp
push
cli
test
js
mov
cld
xchg
pusha
dec
ja
das
cmp
int
ja
mulb
add
adc
xchg
mov
movl
jge
das
sub
fbstp
lahf
lods
xor
and
mov
clc
out
xchg
iret
and
bnd
in
add
mulb
or
or
cmp
sub
inc
je
xchg
push
mov
xchg
push
dec
je
dec
rcrl
mov
push
xorl
aas
inc
push
push
adcb
out
orl
bound
sbb
push
sbb
stos
ret
mov
jae
scas
mov
inc
outsb
and
enter
je
xchg
movsl
or
lods
out
push
mov
inc
lret
xlat
adc
shrb
sbb
add
int3
sti
daa
or
pop
out
cmpsb
mov
adc
xchg
mov
push
test
pop
ret
test
jne
xchg
sub
adc
sbb
and
clc
cwtl
roll
outsl
fisubl
sbb
dec
add
shlb
repnz
or
call
add
jns
jecxz
movsb
cmp
out
popl
mov
orb
popl
dec
jae
insb
sarl
call
or
rcll
jno
inc
dec
fldt
jge
push
mov
sub
or
push
fxch
jp
xchg
or
popf
inc
mov
jb
jl
xchg
in
notb
and
or
jge
cld
fwait
sbb
test
mov
out
jne
inc
popl
fstpl
jmp
mov
mov
add
mov
fistps
mov
pop
test
mov
dec
push
fadds
cmp
cs
jmp
in
inc
dec
and
adcl
fmull
in
sub
xor
mov
push
lcall
fbld
lds
sub
je
addr16
pop
jb
mov
stos
sub
cmc
sti
or
mov
cs
pop
mov
lahf
sahf
jp
aad
movsl
in
mov
xchg
push
pushf
sbb
or
adc
cmp
cmpsl
mov
cltd
loop
aaa
pop
outsb
adc
icebp
test
neg
imull
push
mov
pop
gs
inc
stc
push
mov
pop
pushf
mov
mov
jl
mov
mov
add
fbld
cmc
shrl
mov
movsl
xchg
lock
mov
sti
and
lahf
push
jnp
mov
mov
dec
adc
mov
das
add
insl
sub
fsubrl
mov
das
cmpsl
sbb
mov
loopne
mov
adc
cmp
pop
mov
and
mov
push
sarl
xor
repnz
pop
cmpsl
add
mov
dec
adc
inc
sub
xchg
cmp
pop
mov
jle
jl
les
push
sbb
rcl
cld
std
cmp
test
paddd
dec
pushf
add
or
lahf
push
std
sub
test
lcall
adc
iret
jne
lods
sbbl
jp
popa
push
or
js
in
mov
mov
mov
cmp
push
fnstsw
dec
xchg
bnd
push
jnp
iret
aaa
in
gs
xchg
mov
idiv
inc
mov
out
mov
mov
push
xchg
insb
pushf
push
jns
cmp
scas
bound
pop
sbb
movl
outsl
cmp
cmp
adc
jae
aas
arpl
pop
mov
mov
and
xchg
mov
sbb
daa
lea
mov
cmc
aaa
shlb
mov
es
idivb
aam
mov
test
mov
rcrl
pop
jge
nop
enter
aas
in
out
iret
fistpl
pushf
loop
xlat
mov
add
repnz
jae
stos
out
push
testb
add
jno
mov
dec
push
xchg
es
ret
nop
ret
push
push
dec
sbb
and
jnp
dec
in
cld
jl
xchg
adc
mov
push
icebp
mov
repnz
pop
jo
decl
lea
pop
sbb
pop
pop
loopne
sti
in
test
fwait
sub
sbb
fucomp
test
xor
pop
ret
aam
fiadds
pop
mov
loope
xorb
cli
popl
in
rorw
cmp
scas
popf
imul
jo
pop
insl
inc
lcall
xchg
jb
in
stos
add
sbb
adc
jmp
inc
mov
mov
or
mov
out
mov
cli
fimull
add
stos
sbb
and
lahf
imul
mov
fwait
lret
lods
sbb
sbb
sub
je
insb
xchg
adc
arpl
inc
jmp
shl
in
inc
stc
test
jmp
inc
gs
xchg
ret
sub
repz
dec
inc
push
mov
insb
movsl
and
repz
sahf
or
inc
jecxz
push
mov
adc
stc
mov
or
ret
push
xor
inc
mov
cmc
mov
mov
in
pop
inc
frstor
fsubrl
sbb
cmc
out
fistps
aam
shrl
flds
rolb
sbb
sbbl
xor
rcrl
loop
push
das
std
push
xor
add
loope
repnz
fsubrp
cmc
dec
jbe
and
mov
mov
outsb
lock
sbb
add
pop
cs
sub
cmp
cmpsl
int
add
pop
bnd
jp
pop
shll
dec
push
cmc
testl
out
enter
xchg
sbb
ror
in
jns
call
mov
xchg
push
cs
and
jo
enter
int3
pop
jmp
clc
arpl
dec
imul
fcomip
int3
dec
jnp
xchg
add
pop
leave
cmc
jnp
ja
int
push
pop
lock
lea
ror
jae
jno
stc
dec
out
sbb
shlb
test
int
or
cmp
cmp
lahf
dec
popa
fwait
loopne
fisubrs
sub
repnz
in
sbb
cs
bound
jge
je
shrl
cmp
jmp
and
int3
add
fs
xchg
sti
xchg
stos
mov
and
jmp
xor
push
imul
clc
imul
mov
sbb
sbb
add
test
shll
pop
jnp
pop
loopne
xor
ret
mov
insb
or
cmp
repz
lock
dec
sub
addr16
mov
inc
or
push
outsl
push
and
and
sti
xor
dec
lret
inc
adc
dec
loope
mov
xchg
cmp
mov
add
fldenv
icebp
popf
adc
push
cli
lods
cli
inc
inc
into
shll
repz
mov
int3
jmp
repnz
cmpsl
dec
pop
jecxz
and
cmp
xor
and
pop
in
jmp
inc
adc
or
fwait
cmp
dec
rorb
xchg
push
mov
movsl
shlb
add
sub
nop
pop
roll
push
out
cmpl
mov
cmc
pushf
fldt
leave
xor
in
jecxz
fyl2x
imul
cltd
cmp
adc
jp
sub
xchg
dec
hlt
fldenv
into
in
sarl
mov
in
dec
into
lret
rcrl
lcall
xor
movsb
push
push
fcompl
pop
lahf
cmpsl
push
movsb
rcll
pop
or
mov
xchg
cmp
adc
dec
loop
xor
dec
leave
inc
jae
int3
or
cmp
adc
fldenv
jae
enter
inc
mov
jmp
ss
in
jp
sahf
pop
jecxz
mov
cmp
insl
movsb
sbb
loope
jo
adc
pop
push
fdivs
in
inc
hlt
add
jge
mov
jb
lea
jge
std
adc
out
cmp
xor
inc
jae
cmc
jle
in
aad
lret
jge
mov
nop
daa
sub
ja
int
or
rcll
or
push
mov
mov
fucom
adc
into
dec
cli
mov
push
movsb
lods
xchg
push
aam
xchg
push
adc
repz
sbb
sbb
sbb
xor
rcll
dec
dec
lahf
insl
xchg
sbb
sub
test
ret
or
cmp
popa
pop
mov
jb
out
jo
outsl
jo
jb
adc
or
add
push
xchg
ffreep
inc
mov
test
stc
dec
xchg
jl
xchg
xlat
test
adc
icebp
xchg
cmp
lret
shr
stos
and
testl
push
adcb
cmp
or
cmp
addb
cmpsb
fnstenv
add
inc
lcall
xor
fbld
mov
mov
pop
lods
push
sbb
lds
dec
aam
cmp
or
dec
fcomps
adc
hlt
addl
sub
xchg
lock
lret
dec
stc
imul
add
jle
lods
mov
jle
mov
mov
sub
pop
dec
test
pushf
pop
cmp
aam
out
jae
sub
push
mov
sbb
fiaddl
out
xor
push
fstps
dec
pop
lods
orb
mov
popa
data16
lock
xchg
sahf
movsb
jmp
and
adc
add
and
pop
fcmovne
jmp
or
rorl
shlb
xchg
sbb
dec
in
das
sub
ljmp
lret
shl
lods
icebp
loopne
in
pushf
sbb
xchg
xchg
lcall
xor
jae
jmp
push
push
pop
jne
and
xchg
outsl
mov
push
push
add
nop
repz
jbe
scas
insl
cmp
xor
xchg
push
inc
clc
scas
pop
cmp
je
push
mov
dec
call
out
out
aad
mov
sti
jg
bound
mov
je
repnz
dec
dec
jp
stos
out
in
cmpl
sti
or
test
cmp
jl
std
dec
shrb
jge
mov
in
xor
and
adc
xchg
cmp
mov
mov
mov
mov
clc
and
data16
or
sub
inc
scas
sub
sub
sub
sbb
jl
pusha
fsubrs
cmc
sbb
sub
jb
mov
jns
and
cmpsl
std
mov
scas
jb
popa
mulb
cwtl
sbb
andb
daa
shlb
xchg
xor
inc
mov
push
xchg
inc
sub
test
aaa
push
pop
lahf
adc
push
dec
adcb
mov
adc
push
pop
ficoms
dec
xchg
sbb
paddq
sahf
arpl
push
hlt
popa
xor
xchg
rorl
xorb
cli
push
ret
pop
dec
pop
or
adc
inc
stos
xor
and
add
xor
testl
das
scas
mov
cld
sahf
mov
stos
test
add
pusha
push
mov
inc
std
add
ljmp
or
pop
call
add
xor
push
in
jp
mov
and
popa
shll
bound
adc
leave
fcmovne
js
outsb
add
xchg
aam
pop
inc
push
call
rolb
ds
jge
cmc
lcall
les
rcr
fnstsw
je
aad
cmp
cmc
out
push
adc
mov
mov
mov
and
es
mov
movsb
in
jnp
jge
mov
lods
outsl
push
aaa
add
out
stos
inc
pop
or
push
pop
adc
inc
dec
push
inc
mov
ficompl
cmp
int3
dec
xlat
dec
lret
pop
lea
insl
jmp
fnsave
push
aam
mov
incl
cmc
jmp
stos
or
addr16
mov
in
out
mov
jg
xchg
out
fsts
sbb
and
inc
xlat
xor
dec
data16
ret
cmc
arpl
shrb
shrb
cli
movsl
push
aam
fimuls
or
mov
xor
int3
jge
loope
mov
mov
rorb
adc
ja
dec
in
add
xor
push
push
push
cmp
pop
sti
mov
mov
or
loope
data16
or
jno
repz
push
push
jne
out
xchg
out
outsl
jnp
sub
jl
lret
int3
pop
xor
mov
ret
sub
mov
sub
dec
icebp
in
add
jecxz
je
gs
cmp
xor
xchg
loop
fsubl
pusha
mov
push
lock
jecxz
sbb
sub
int
inc
mov
pop
adc
scas
mov
pop
test
xchg
jecxz
adc
gs
out
data16
sub
sub
add
sbb
push
add
mov
jmp
fldt
stos
loope
loope
mov
ret
sbb
pop
enter
lock
and
xor
andb
xor
dec
insl
or
fcoml
xchg
lock
mov
mov
mov
call
and
data16
xor
xchg
cltd
jbe
nop
movsl
jmp
std
push
ret
and
and
outsb
in
mov
add
xchg
loopne
xor
lock
test
mov
scas
test
xchg
addb
int
adc
sbb
inc
insl
cmp
jg
push
das
mov
or
fists
mov
push
inc
imul
subb
aad
or
lds
insl
sbb
fnstsw
clc
push
xor
xchg
xor
mov
sub
leave
mov
addl
loope
mov
insl
inc
and
int
outsl
scas
push
pop
out
daa
mov
fwait
in
pop
push
add
mov
or
push
lret
add
loop
iret
aaa
adc
shl
jmp
xor
movsb
jmp
and
inc
das
outsl
lahf
xchg
xor
xchg
xor
shlb
adcb
addb
xchg
loop
add
cmp
fcmovne
daa
pusha
rol
pop
pusha
push
push
mov
mov
inc
push
dec
jmp
mov
movsl
iret
gs
sbb
fimull
xchg
negl
jecxz
jp
or
mov
daa
push
push
arpl
pop
loop
push
loope
rcrl
pop
cmp
stos
cmp
push
dec
aas
adc
sub
sbb
cmp
mov
mov
rcll
nop
arpl
mov
or
push
jb
outsb
lcall
xlat
rolb
push
daa
mov
lock
fcoml
sbb
mov
inc
je
jnp
rolb
ss
nop
rcr
rcrl
pop
fisttpl
es
loop
cmp
dec
aad
lods
pop
fsubl
sub
clc
shrb
xchg
jb
xorb
xchg
pop
pop
jl
xchg
cwtl
dec
call
and
iret
lret
xor
into
mov
xchg
push
mov
test
mov
mov
idivl
jns
scas
scas
or
xchg
jl
lods
adc
out
jecxz
cmp
in
sbb
mov
ds
out
push
or
in
icebp
jo
testl
ja
jge
pop
xor
cmp
aaa
pop
out
popf
sbb
out
sbb
dec
adc
iret
inc
push
sub
inc
das
pop
std
push
xor
jns
icebp
cmp
sub
mov
in
insb
icebp
pop
push
pusha
adc
fimull
or
test
pop
hlt
dec
mov
adc
inc
data16
outsl
gs
pop
mov
cs
andl
sub
out
jge
jl
daa
dec
jmp
iret
mov
outsb
aaa
out
cwtl
xchg
and
mov
stos
mov
dec
lahf
jmp
std
add
das
cld
mov
dec
jmp
fstp
xchg
outsb
cmpsb
sahf
push
push
lcall
std
mov
dec
xor
mov
dec
cmp
xor
in
lock
mov
and
js
fwait
or
and
repz
mov
lahf
or
xchg
sub
sbb
inc
dec
jbe
adc
cmpsl
movsb
hlt
icebp
andl
aad
mov
hlt
lcall
mov
inc
mov
cwtl
test
iret
mov
or
jns
aad
rol
dec
mov
fstpl
mov
inc
fincstp
jno
sbb
pop
or
mov
mov
sub
mov
movsb
dec
stos
out
int
sbb
loop
iret
xchg
or
leave
xchg
xchg
test
aaa
add
mov
mov
xor
lods
mov
cltd
xchg
popl
scas
xchg
movsl
popa
mov
cmp
stos
addr16
xchg
mov
pop
das
sub
dec
adc
add
je
ljmp
inc
jl
cltd
cmp
aam
inc
push
call
inc
cmp
ds
adc
test
insb
push
inc
call
inc
xchg
cmp
sahf
adc
fldt
aam
pop
fistps
sub
push
and
mov
outsl
adc
ja
repnz
inc
lret
lcall
int3
out
jb
idivl
das
out
ds
jmp
pop
pop
push
shll
push
loopne
idiv
xchg
pop
fisubs
out
add
xlat
or
popf
xorl
and
xchg
addr16
pop
iret
lahf
insl
lea
mov
popl
neg
xchg
repz
jb
ljmp
mov
and
ljmp
movsl
orb
ss
mov
repz
inc
mov
cmp
imull
mov
jmp
sbb
xchg
mov
jg
scas
xchg
lods
scas
pushf
push
ja
cmp
clc
daa
enter
xchg
jo
jnp
add
sti
inc
mov
inc
loopne
dec
jg
pop
pusha
mov
cltd
aas
bound
arpl
mov
xchg
xchg
aam
repz
inc
or
in
mov
adc
hlt
jno
pop
jg
pusha
int
sbb
mov
mov
mov
cmp
push
pop
push
jge
pop
sbb
scas
xlat
cmc
jl
out
jecxz
sti
mov
mov
outsb
mov
inc
cmp
jg
lret
test
xchg
jnp
xor
push
test
xchg
mov
push
pop
ljmp
add
dec
cld
jp
cmpl
lcall
adc
out
mov
je
add
fdivrs
inc
xor
cmp
jbe
push
cmp
xchg
push
pop
add
jns
sub
cmpl
leave
dec
add
xor
push
jle
xor
icebp
call
sbb
adc
adc
sbb
dec
fidivrl
ljmp
xor
scas
data16
cltd
insb
inc
jnp
mov
push
jne
xchg
and
cmp
jns
mov
leave
pop
mov
lock
nop
out
pop
xchg
xor
mov
std
pop
bound
out
dec
sahf
sbb
adc
cltd
daa
lock
fldcw
leave
leave
xor
fbld
repz
and
mov
into
jecxz
inc
adc
jp
mov
fisttpl
mov
ret
std
fdivrl
sub
sub
jnp
scas
cs
cltd
sahf
jnp
push
push
movsb
nop
jns
sub
stos
or
jp
pop
cmp
add
cld
fdivr
xor
mov
jle
aas
mov
push
fwait
ret
pop
sbb
xor
mov
and
ss
jp
mov
orb
das
cmpsl
dec
xchg
dec
stos
mov
movsl
xchg
push
push
roll
out
add
push
sub
push
mov
scas
pop
mov
popa
push
pop
dec
and
adc
jno
sbb
test
fistl
sbb
rorb
gs
ret
aam
rcl
test
xchg
into
jecxz
mov
lds
sbbb
jmp
out
xchg
and
jbe
fwait
repz
in
sub
cmp
xor
pop
mov
jmp
lret
fucom
sub
mov
adc
push
mov
jns
push
stc
mov
mov
pop
push
adc
fwait
and
mov
or
jge
adc
push
ljmp
aaa
loope
scas
xor
sub
mov
jg
fcompl
jl
pop
frstor
and
inc
inc
imul
pop
jmp
inc
loopne
fistl
movsl
dec
adc
cmpsl
es
xor
enter
imul
dec
call
stos
mov
pop
repnz
in
pop
out
clc
dec
jecxz
cs
cmp
out
xor
xchg
popl
inc
cltd
out
sub
adc
es
fiaddl
sub
or
flds
xor
cmpb
cmc
xchg
sbb
sub
sbb
adc
xor
xchg
out
jns
mov
fs
cltd
fcoml
and
sbb
lret
jmp
inc
xor
sub
or
sub
and
mov
xchg
jbe
add
stc
out
sbb
inc
sub
and
cltd
movsl
mov
fs
cld
mov
xor
nop
rcr
les
fsubrs
dec
push
mov
das
mov
cmc
pop
adc
test
push
mov
out
jae
mov
xacquire
es
push
cmp
out
aam
pop
mov
dec
xchg
add
mov
adc
cmp
sbb
loopne
rolb
and
iret
out
sti
cmpsl
orb
xchg
in
enter
adc
add
mov
push
cli
lcall
cmpl
push
lods
dec
mov
fildl
mov
cmp
push
sub
scas
pop
sub
cmp
int
aas
push
mov
adc
rcrb
in
jg
movsb
rol
fldcw
push
out
sahf
insl
lcall
sub
cmp
sbb
xor
push
in
pusha
jns
adc
mov
mov
pop
pop
mov
add
hlt
repz
loop
pop
ja
imul
inc
into
es
pop
andl
mov
add
push
dec
cld
push
dec
dec
mov
fidivs
popf
dec
jbe
pop
and
icebp
mov
jmp
mov
imul
aam
push
dec
pop
inc
das
jp
fisttpll
rep
jecxz
and
scas
dec
sbb
imul
imul
pop
sti
inc
imul
mov
push
test
xchg
add
cmp
xor
in
push
outsb
jne
push
or
and
into
sub
sub
pop
mov
or
inc
sbb
push
adcb
fwait
scas
xchg
mov
or
out
test
addb
or
pop
insl
iret
mov
gs
pop
sub
pop
jg
shlb
xor
adc
out
rol
mov
sub
push
adc
jp
sbb
sbbb
imul
jge
mov
aaa
insl
shl
cmp
push
popf
xchg
sahf
mov
mov
sub
sbb
xor
lods
lret
jle
cmpsb
xlat
ss
scas
repz
ja
lea
inc
xchg
mov
push
aad
int
cmpsb
sbb
jo
push
lods
jl
sti
popa
pop
lret
dec
iret
sbb
add
mov
mov
mov
data16
jmp
xor
xor
test
scas
push
outsl
popf
xchg
inc
sbb
mov
cmpsb
jno
cltd
fcmovnb
push
out
mov
pop
and
or
mov
or
cmp
repz
arpl
mov
or
lea
repz
ds
iret
dec
lods
mov
xor
ss
add
inc
in
mov
dec
or
inc
cmp
out
mov
jp
out
xchg
jecxz
imul
sahf
mov
insb
push
aad
add
dec
imul
ss
adc
mov
mov
pop
jo
div
sub
pop
add
je
scas
cmpsb
popa
leave
fstps
hlt
pop
filds
jbe
aas
sbb
cmc
fidivrs
int
add
clc
cli
adc
pusha
aad
fstl
dec
pop
jl
cmp
pop
pop
push
fisubl
je
cld
pop
popf
add
inc
sbb
in
aam
sahf
fwait
mov
adc
lea
std
hlt
mov
mov
inc
loope
rorb
and
adc
mov
out
out
idivl
sub
pusha
add
dec
shr
out
xor
or
push
fiadds
cmp
dec
pop
leave
and
lcall
push
xchg
enter
xchg
in
pop
test
cli
icebp
sub
push
push
push
add
fdivrs
cmpsl
out
cwtl
fstps
sbb
pop
arpl
sub
xchg
push
je
mov
pop
pop
pop
imul
in
jo
mov
iret
and
xor
jle
out
repnz
inc
fcompp
sub
inc
xor
mov
push
daa
test
push
inc
fwait
int
xor
mov
pop
enter
dec
jge
flds
movsb
mov
mov
xor
in
push
sarb
insb
sbbl
xchg
aam
cmpb
xorl
xchg
les
mov
loop
xchg
lcall
stos
js
xchg
test
mov
push
mov
orb
rclb
add
push
insl
test
test
mov
in
mov
xor
sbb
in
dec
mov
subl
inc
aam
sub
mov
outsl
push
mov
mov
sbbl
jecxz
es
pop
imul
mov
hlt
xchg
mov
jae
pop
jle
mov
sbb
xor
sub
lahf
ret
or
mov
cmp
mov
aas
ljmp
mov
inc
test
adcl
mov
and
push
push
push
mov
pop
and
and
pop
test
push
fsubrl
insl
xor
jnp
or
stc
xor
insl
das
cld
repnz
es
and
pop
repnz
lret
xchg
and
xor
add
sbbb
out
dec
dec
fs
cld
stos
sub
in
out
mov
ljmp
or
pushf
or
cmpsl
jb
add
xchg
lret
jbe
out
cmp
testb
outsb
fs
adc
inc
int
inc
ret
dec
xlat
cmpsl
call
mov
daa
out
lahf
dec
insb
insl
add
jecxz
adc
ret
daa
cmc
push
fildll
jb
fwait
loop
jle
xor
push
cmc
dec
push
lret
rorl
sbb
fadds
movsl
mov
sbb
ficoms
xchg
sbbb
push
lods
test
movsl
xchg
mov
sbb
xchg
push
cmp
xor
pop
sahf
jmp
insl
mov
sbb
popf
rcr
adc
xlat
loopne
outsb
adc
push
xorb
sahf
fwait
pop
test
loopne
int
sbb
das
jnp
popf
jo
jae
inc
mov
adcl
jmp
inc
int3
inc
out
dec
xchg
push
inc
scas
pushl
pop
pop
sarb
cmc
sub
mov
lcall
insb
cmpsb
cmp
inc
inc
jbe
out
aas
iret
fmuls
xor
lock
in
jns
outsb
xchg
jmp
xchg
xor
jae
imul
mov
mov
je
fcoms
xchg
adc
mov
jnp
mov
daa
loope
insl
pushf
cmc
jge
pop
mov
dec
ljmp
pop
fs
mov
inc
push
mov
sti
mov
dec
popf
lea
insl
repz
pop
pop
subl
mov
lret
sbbb
xor
pop
jge
pop
mov
mov
pop
sti
popa
cmp
push
jle
insl
pop
out
mov
cmp
frstor
fsts
push
jbe
adc
mov
shlb
xchg
jbe
cmp
jae
cli
adc
cld
addr16
fcom
mov
stc
push
xchg
nop
int3
and
adc
popf
sahf
sbb
pop
cmp
loopne
xor
add
pop
dec
inc
mov
cmp
or
mov
pop
pop
lret
test
jmp
push
xchg
es
fucomp
rcrl
imul
push
pop
adc
mov
hlt
dec
jnp
in
adc
or
push
sub
movl
shrb
pop
mov
jno
jbe
xchg
dec
aad
lock
push
nop
es
pushf
js
les
xor
mov
shrd
and
dec
jae
repnz
push
lock
pop
fwait
push
jecxz
outsl
xchg
inc
push
cmc
xor
xchg
out
notb
push
andb
insl
and
xor
fdivs
shll
ds
mov
jne
inc
sbb
pop
pushl
pop
jo
mov
xchg
cmp
pop
mov
and
sub
or
cmpsb
mov
ret
sub
xor
inc
xchg
nop
lret
call
and
scas
push
sarl
dec
insl
arpl
inc
loopne
jb
mov
gs
testl
addr16
add
sbb
cmp
cltd
mov
fisubl
daa
out
sub
daa
int
mov
add
or
mov
sub
fcoml
sbb
pop
sbb
jbe
xor
xchg
icebp
xchg
and
cmp
pop
inc
xor
mov
inc
add
cwtl
inc
inc
enter
js
xchg
and
aad
dec
jb
dec
push
adc
stos
or
aas
sbb
mov
cmc
mov
les
aam
mov
and
xchg
stos
xor
sbb
ror
or
incl
out
push
cmp
jle
test
add
adc
decb
jb
adc
xchg
fstl
sub
and
lods
dec
out
dec
lcall
scas
mov
lods
xor
shll
stc
xchg
and
pop
js
inc
jns
mov
sti
clc
xchg
and
lods
outsl
fstpl
mov
jbe
and
dec
inc
pop
adc
and
jp
sub
sbb
jbe
push
xchg
cmp
push
roll
loopne
mov
adc
fcmovnu
out
xchg
enter
push
aad
repz
mov
mov
dec
aam
cmp
js
shll
dec
pushf
xor
aad
jle
or
inc
ljmp
pop
dec
std
xchg
rolb
cltd
cwtl
inc
sub
int3
fsubl
mov
dec
push
popa
in
ds
jno
inc
enter
jmp
and
sbb
adcl
pop
pop
cmpsb
and
xlat
pushf
sbb
cmp
or
sub
xor
jbe
push
test
test
sbb
rclb
inc
sbb
lret
std
mov
and
ds
adc
jge
shlb
xchg
ja
popf
ljmp
test
jmp
out
add
jne
cmc
mov
ss
std
out
imul
clc
and
aas
icebp
movsl
incb
mov
shlb
xor
jle
push
push
adc
mov
lcall
fisubl
stos
clc
pop
insb
jb
add
inc
lock
lea
outsl
inc
inc
lds
xchg
je
popf
mov
xor
xor
inc
and
cmc
ds
or
lret
cld
sbb
sub
dec
mov
add
pop
stos
jmp
adc
in
and
popa
int
dec
inc
cli
cmp
shl
and
push
ds
aad
cltd
mov
mov
push
dec
scas
mov
and
cmp
lcall
add
mov
sub
pop
jge
dec
pop
dec
mov
and
mov
dec
fwait
inc
xchg
add
push
test
cmp
clc
push
inc
and
pmulhuw
es
shrl
sbb
xor
iret
sub
jne
cmp
jle
dec
dec
cmpsl
xor
push
lahf
sub
xchg
jmp
rdpmc
es
inc
cmp
and
push
stos
sbb
pop
add
imul
call
shl
push
test
fxam
filds
mov
pop
pop
sub
pop
imul
jnp
cs
mov
xor
iret
push
inc
xor
in
or
test
xor
sbb
add
push
jne
jmp
push
or
jns
mov
mov
jg
add
push
sbb
push
pop
mov
xchg
pop
lcall
or
test
jns
dec
jbe
scas
dec
imul
and
shlb
sub
sbb
mov
mov
std
inc
cmp
jnp
arpl
out
jle,pt
inc
dec
add
or
in
nop
int3
adc
ja
mov
xchg
icebp
mov
pop
mov
mov
cmpl
cmp
xor
push
imul
mov
pop
xchg
sub
fs
cwtl
pushl
bound
clc
movsl
pop
rcrl
mov
mov
jns
popa
call
mov
shll
arpl
cltd
lahf
mul
mov
jb
inc
mov
add
dec
sub
aam
into
cmp
negb
dec
push
sub
push
jb
loopne
or
popf
mov
push
mov
pop
fstp
adc
ficoms
data16
leave
ffree
inc
mov
incb
jecxz
je
jl
hlt
sub
adc
sbb
lret
cmc
lock
outsl
shrb
sub
and
dec
sbb
lock
ds
inc
bound
push
xchg
mov
stc
jg
pop
clc
out
mov
pop
int
nop
dec
fsubrl
insb
sub
insl
xchg
jg
adc
push
push
outsb
adc
daa
or
icebp
pop
addb
mov
fadds
mov
jns
out
pop
add
xlat
cs
mov
addr16
or
jns
mov
pop
in
inc
xchg
dec
fldl
mov
lods
mov
dec
push
out
pop
pop
inc
out
mov
mov
or
mov
cmp
das
sahf
movsb
shl
out
or
push
dec
sub
xor
xor
and
cmp
cmp
test
cmp
inc
or
mov
pop
in
pop
inc
cmp
out
aam
pop
sbb
imul
aaa
push
cmp
or
sbb
add
add
xchg
into
dec
lea
inc
inc
add
and
jg
xor
ss
dec
lret
add
cmp
add
cli
adcl
push
mov
data16
je
xchg
jge
stc
mov
push
or
sbb
rcrb
xchg
in
dec
movsb
sbb
and
xor
pop
push
mov
leave
push
sub
repz
lret
mov
enter
add
mov
andb
mov
xor
loop
pop
addr16
push
mov
je
and
jmp
jl
sbb
mov
mov
pop
sub
mov
jl
mov
dec
inc
mov
jne
outsl
mov
or
mov
int
stos
loopne
js
out
hlt
imul
sub
dec
jnp
jbe
out
les
pop
stc
ss
add
mov
xchg
xchg
aas
sbb
lahf
pop
jmp
pop
pop
xchg
clc
mov
mov
imul
cmp
mov
sti
sub
or
jo
add
jp
outsb
repz
jle
push
push
loope
jo
into
sub
outsb
jp
xchg
sub
in
push
dec
adc
enter
or
jo
aas
leave
and
lods
lret
xlat
mov
cltd
pushf
aad
pop
in
and
loope
adc
jg
mov
popa
fsubrs
repz
aas
mov
pop
and
imul
push
bound
mov
popa
pop
push
cltd
ja
mov
push
push
nop
jle
sub
ds
jmp
in
aad
add
rclb
inc
stc
inc
lods
push
adc
lcall
out
rorb
daa
repz
add
std
insl
push
jno
test
jl
imul
mov
jecxz
push
gs
xchg
fisttps
adc
sbb
sbb
mov
sbb
inc
movsb
sbb
sbb
and
loop
mov
cltd
adc
lock
fistpll
and
pop
cld
test
lahf
pop
and
pop
sub
pop
mov
xchg
mov
push
cli
int3
mov
outsb
and
mov
es
outsb
mov
je
jmp
mov
cmpsb
mov
or
mov
sti
leave
jle
loopne
sbb
fnstsw
subps
sbb
sarl
pop
mov
push
jge
out
cmp
in
push
bnd
dec
mov
or
cli
mov
outsl
push
mov
gs
fs
xlat
sbb
dec
xor
push
adc
cmp
aaa
arpl
mov
repnz
out
ret
lret
lret
inc
mov
pusha
xlat
mov
fsub
or
insb
jmp
stos
and
push
push
mov
cmp
mov
inc
jno
sub
xchg
push
push
cli
mov
ret
test
and
and
clc
insl
insl
push
inc
push
xor
mov
setle
scas
ficoms
mov
mov
jo
je
jmp
push
hlt
data16
cmp
mov
jle
mov
inc
fsubrp
lahf
arpl
inc
repnz
ret
test
sbb
mov
fwait
inc
scas
push
xchg
sbb
imul
push
push
adc
imul
sahf
add
xchg
roll
pop
xchg
std
or
ret
pop
sbb
clc
jns
push
mov
inc
cmp
andb
mov
or
cmc
loop
lds
jo
iret
push
fcmove
push
scas
or
xchg
push
cwtl
jae
addr16
pop
data16
in
rorb
scas
ljmp
push
mov
pop
xor
iret
lds
int3
xchg
sub
mov
sbb
and
ljmp
xchg
jne
outsb
jns
sub
loope
xchg
jl
pop
inc
inc
inc
or
loopne
mov
cli
mov
ffreep
pushf
fisubrs
sub
lods
popf
cs
sbb
pop
push
cmp
sbb
mov
aaa
cmp
push
fdivrl
ret
xchg
mov
dec
xorb
add
orb
test
int
mov
push
xchg
jae
xor
xchg
shrl
adc
cmpsb
fldt
mov
lods
xchg
jbe
repz
pop
jns
fcomps
lret
and
mov
clc
cmp
mov
xor
gs
fisubrl
inc
scas
lret
loope
push
sti
cmp
pop
xchg
sub
out
clc
mov
int
notl
jp
sbb
inc
ret
jbe
test
cmpsb
adc
clc
andl
bnd
ds
mov
push
pop
stc
cmc
mov
sbb
pop
mov
xor
in
adc
mov
dec
mov
ret
movl
inc
test
mov
and
jmp
insb
cli
mov
adc
fwait
cmpb
push
fndisi(8087
or
push
fildl
daa
sub
xor
loop
sub
insl
sub
arpl
mov
push
add
sub
int
fisubl
ljmp
lahf
cwtl
inc
pop
adc
je
ss
out
sub
adc
js
adc
inc
cmpsl
xor
out
addb
push
lock
je
mov
enter
mov
imul
int
push
fisttpl
test
mov
pop
and
andb
lahf
xchg
push
cmp
sahf
cmpsb
sti
addr16
dec
cmp
mov
inc
cli
sub
inc
ss
jcxz
mov
out
test
pop
mov
jp
pop
jmp
or
ja
out
jno
inc
cwtl
ret
mov
xchg
sbb
ss
pop
adc
mov
inc
nop
es
je
bound
cli
fldcw
jl
push
mov
adc
es
sub
mov
cmp
mov
stc
fnsave
cmpsl
test
movsb
repnz
push
imul
loop
and
pop
arpl
loop
es
pop
pop
push
push
dec
add
xchg
xor
push
scas
aaa
push
mov
mov
mov
push
inc
cwtl
fwait
cwtl
and
lock
fs
lret
in
in
subl
or
in
das
adc
mov
mov
xchg
fdiv
push
push
cmpsb
mov
shll
fmull
dec
mov
mov
cmp
sub
jge
or
or
xor
jo
jp
add
cmp
push
inc
in
sub
push
mov
and
int3
out
mov
or
cli
movsl
mov
sub
cmp
je
popf
loope,pt
add
loopne
add
inc
lods
cmp
cld
pop
inc
icebp
push
cmpsb
movsb
mov
xor
jno
leave
mov
cltd
loope
in
rorb
insl
int
in
shrl
cwtl
and
ja
xchg
pop
sub
loope
sti
int
lahf
cmp
jecxz
jb
enter
adcl
leave
dec
nop
or
hlt
test
in
add
pop
sti
adc
pop
faddp
loop
js
sub
fisubl
lds
or
sbb
hlt
pop
cmp
and
dec
add
pop
dec
hlt
mov
icebp
push
mov
std
sbb
sbb
mov
push
mov
pop
and
push
addl
loopne
outsb
jge
lret
popa
sub
xor
shll
roll
gs
cmp
inc
and
cmp
or
pop
lods
cmpb
dec
mov
jbe
fistl
jg
fimuls
pop
rcl
push
out
std
je
cmpsl
cmp
out
pop
xor
sti
or
push
imul
inc
and
push
outsl
and
subb
adc
sbb
lea
jb
mov
pop
repnz
xchg
sbbl
ficompl
fmul
jmp
dec
push
mov
scas
je
push
jne
call
pop
je
cmpsl
mov
add
sub
push
addr16
stos
xchg
aad
out
push
add
lahf
dec
int3
stos
push
imul
lcall
imul
or
cmp
sub
jo
jns
jmp
shll
sbb
dec
xchg
cmp
ret
aas
rolb
add
mov
cmp
adc
and
lods
pop
aam
sub
xor
mov
jno
fimull
pusha
scas
mov
add
sarl
mov
mov
movsb
sbb
fcoml
sbb
adc
aaa
fldl
ret
cmp
jns
pop
fmulp
mov
scas
mov
fbld
loope
push
inc
pop
incl
mov
pop
es
loope
xchg
das
out
movsb
popa
or
or
sti
mov
ret
or
sbb
jo
ret
pop
sub
lcall
mov
cs
inc
rorl
pop
xor
mov
in
loope
fcomps
int
sub
imul
jp
add
cmp
cmp
and
out
dec
push
hlt
jecxz
cltd
push
mov
bound
pop
cwtl
out
xchg
jmp
ds
repnz
in
or
in
test
pop
xor
jns
into
sub
xor
xchg
les
fcomps
lock
sbb
rcr
inc
stos
stos
adc
shlb
das
jns
push
jno
outsl
arpl
mov
lods
mov
xor
leave
test
cmp
daa
jns
fildll
dec
cmc
sub
addb
inc
jb
cld
mov
repnz
push
xor
mov
xchg
daa
rcll
clc
test
in
lahf
and
mov
in
pop
aas
mov
jne
pusha
lahf
push
fistpl
lea
sbb
sahf
or
push
xor
in
inc
adc
in
in
add
pop
add
pop
scas
lea
xor
mov
pop
and
jge
sub
test
icebp
adc
lds
ror
mov
out
add
cltd
cmc
mov
jno
test
jno
movsb
or
cld
out
enter
pushf
sbb
enter
push
cli
add
push
cmc
sti
mov
es
inc
adc
and
idivb
jl
cwtl
ds
mov
pop
fs
lcall
or
movsl
cli
call
lea
and
repnz
pop
jb
dec
xchg
add
shrb
sahf
das
int3
jge
add
cmpsl
pop
mov
lea
aam
mov
fisttps
jae
fcmovnu
out
mov
push
pop
cltd
cmpsl
pop
sbb
out
das
int
jno
or
cmp
push
push
push
inc
inc
jb
nop
or
addr16
imull
push
loop
pop
pop
mov
out
shlb
fisubrl
scas
mov
mov
out
xchg
jmp
jecxz
inc
jecxz
scas
inc
jb
jecxz
cmpsl
xchg
outsl
gs
push
and
repz
mov
xor
jl
mov
out
shll
popf
outsl
dec
negb
sahf
ja
add
and
adc
inc
jmp
mov
cmc
sub
shll
imul
aas
jo
in
mov
fwait
and
pop
adc
mov
pop
insb
cmp
daa
lds
push
add
bound
pop
aas
arpl
ljmp
ucomiss
jg
and
shrb
inc
or
loopne
outsl
sub
cld
sti
aam
scas
xchg
dec
popa
push
cmp
das
fisubrs
jbe
mov
jmp
hlt
in
pop
sbb
arpl
xor
or
jns
out
xor
mov
inc
enter
popa
jp
inc
jo
inc
out
or
mov
jmp
filds
pop
mov
push
ds
mov
addb
dec
sti
lock
popa
loopne
jae
movsl
dec
addl
dec
push
mov
ret
lock
subl
test
aas
mov
mov
mov
lds
xchg
push
pusha
clc
pop
stos
mov
test
popl
adc
add
push
dec
xchg
movsb
add
jle
test
arpl
pop
lods
xchg
and
scas
pop
jb
sub
cmp
xchg
xchg
js
enter
push
sub
xchg
in
mov
jl
dec
or
fdivl
inc
faddl
jns
idivl
ficoml
mov
mov
je
mov
xor
int3
jle
into
xor
dec
stos
jne
sti
or
pusha
movsl
sub
subb
sub
das
jbe
dec
push
lods
sbbl
movsl
pop
or
cmp
js
adc
sbb
pop
fsubrs
fadds
cmp
adc
ficoms
ss
xor
repnz
leave
stos
pop
movsl
mov
push
lahf
scas
xchg
adc
pusha
clc
lods
lods
scas
fs
sub
rorb
out
and
cmp
jne
jl
add
rorb
mov
jbe
jecxz
data16
gs
lret
rcrb
iret
push
and
addr16
into
mov
inc
push
cmp
addr16
mov
filds
jne
sub
push
push
popa
xor
xor
fists
or
into
and
or
dec
lcall
cmp
cmpsl
mov
and
arpl
cmp
xor
dec
and
pop
and
xor
pop
in
xchg
jbe
lcall
std
ljmp
in
loope
inc
lods
fidivrl
ja
and
pop
push
push
adc
in
xor
mov
or
out
mov
fs
imul
cltd
mov
adc
jno
xchg
aas
test
add
aam
sbb
mov
xchg
call
adc
scas
push
pop
xor
fincstp
call
sbb
lcall
dec
mov
lds
cmp
adc
fwait
sub
loope
out
sub
fwait
pop
and
ss
idivl
loop
in
jmp
or
xorl
in
ret
rcrl
cmpsb
bound
aaa
xchg
lahf
bound
xchg
add
lods
add
mov
or
xchg
vmovaps
dec
mov
mov
mov
pop
mov
fbld
addl
call
jmp
inc
ror
ljmp
cld
xor
outsl
dec
adc
inc
mov
mov
xor
lods
aaa
push
mov
cmp
add
fildl
jg
clc
pusha
sub
daa
popa
shl
cltd
xchg
cmovae
es
adcb
sbb
add
sub
cltd
mov
fcoms
jp
lret
enter
add
dec
stc
push
arpl
loop
mov
enter
dec
jns
adcl
popf
sahf
inc
xorb
sub
xchg
or
sbb
sarl
popf
stos
push
cmp
dec
jb
mov
ss
in
mov
sub
data16
or
ss
cmpsb
movsb
sti
repnz
pop
push
jo
out
leave
popa
xchg
sbb
test
sbb
pop
cmp
push
mov
xor
out
repnz
jle
scas
xorb
out
test
pop
xchg
ret
mov
jne
mov
vmulps
adc
out
mov
pop
add
push
dec
mov
dec
mov
xchg
or
mov
mov
mov
add
mov
sub
fiaddl
mov
mov
dec
roll
in
ret
scas
add
bound
jge
mov
mov
mov
sbb
mov
lock
je
int
push
xchg
sub
jb
and
push
jo
and
jae
mov
rorb
in
lods
or
loope
imul
pop
pop
mov
add
cld
mov
adc
add
mov
pusha
add
shrb
ror
inc
pop
addl
cmp
sub
and
test
das
in
pusha
es
in
notl
mov
xor
gs
xor
adc
adc
jl
ficompl
test
dec
cmc
mov
xchg
lcall
shl
pop
or
mov
jae
jno
inc
adc
cmp
lods
call
fldcw
cmc
arpl
subb
sarb
sub
mov
pop
xchg
cmp
cli
xchg
jp
xchg
loop
mov
ffreep
ficoms
cmpsl
push
adc
pop
in
push
mov
sbb
cmpb
mov
dec
fwait
push
sub
mov
dec
filds
mov
cli
std
push
scas
cmpsl
push
arpl
xlat
jp
popl
call
adcb
xor
cmpsl
push
sub
xchg
inc
jle
mov
jg
jbe
push
dec
lods
jp
add
adc
push
jecxz
insl
pop
xchg
push
jnp
lds
push
es
mov
in
insb
sub
repz
jge
das
shr
sub
andb
mov
add
mov
dec
inc
pop
pop
add
fisubs
inc
les
jne
mov
adc
sub
xchg
push
imul
fwait
add
sbb
add
incl
or
mov
xor
adc
mov
push
shr
adc
leave
sbb
jnp
push
and
pushf
movsb
mov
imul
test
jmp
movsl
push
jno
push
je
int
ss
xchg
sub
cmpsl
pop
or
or
addr16
mov
cmp
movsl
mov
popf
pop
cmp
jo
sarb
std
xor
leave
out
test
xchg
sbb
repz
jo
daa
repnz
lods
fstp
mov
push
add
dec
sub
cmc
test
push
mov
sti
popf
scas
fcmovnu
dec
or
ja
outsb
pop
imul
repz
jbe
and
mov
jecxz
mov
add
ljmp
jecxz
mov
fwait
es
jge
cmp
sbb
idivb
lret
mov
jmp
fsubrs
ss
lods
les
pop
xor
jge
icebp
rcl
mov
repz
and
int
sub
push
scas
adc
loop
cmp
movsb
pop
fwait
out
fildl
lahf
push
in
jle
mov
pop
in
pusha
sbb
loop
mov
out
push
sbb
or
jp
rcrb
leave
loope
mov
mov
in
xchg
adc
in
in
mov
cmp
ror
mov
xlat
loopne
in
insl
sub
pushf
pop
mov
rorl
adc
test
sahf
adcl
daa
mov
ss
dec
sarb
imul
aaa
mov
aad
ljmp
xchg
mov
push
fldenv
cmp
imul
imul
add
sbb
xchg
xchg
je
cltd
cs
cmp
lds
mov
shlb
call
adc
cmpsb
sub
sub
adc
lcall
sbb
inc
gs
or
pop
push
movb
out
pop
push
nop
rolb
mov
xchg
push
jbe
dec
scas
mov
inc
jle
in
inc
sbb
add
push
and
jmp
push
cltd
push
testb
mov
pop
insb
pop
das
mov
push
add
cmp
push
fwait
sbb
mov
fidivrl
inc
jle
inc
pusha
addb
sub
mov
aam
rclb
xchg
jb
inc
imul
add
cmp
adc
sahf
shll
mov
dec
dec
jmp
add
mov
sti
mov
add
ss
xor
inc
push
filds
dec
out
dec
mov
cmp
xlat
mov
push
arpl
mov
in
or
mov
jmp
leave
mov
popf
fs
bound
pop
in
out
xchg
cmpsb
fsts
xchg
cmp
icebp
xchg
xchg
leave
out
insl
popa
jecxz
cltd
cwtl
sti
test
test
jae
sbb
add
rolb
inc
popf
xchg
cmp
std
xor
bound
add
repz
sbb
lcall
ret
das
pop
adc
mov
mov
insb
adcl
icebp
cwtl
jp
inc
dec
repz
test
adc
insb
adc
ja
sbbb
pop
fsubrl
add
adcb
ja
orl
and
movsb
stos
dec
jle
sti
dec
popa
scas
cmpsl
scas
shr
jne
lds
outsb
xchg
mov
sti
ss
sbb
adc
cmp
adc
shrb
clc
xchg
cmpsb
lret
iret
rcr
mov
fdivrl
pushl
aas
loop
loopne
mov
jbe
pop
sbb
movb
inc
das
in
or
cmc
push
imul
push
fnstsw
dec
loopne
sti
repz
mov
js
cmp
clc
jp
adc
es
cltd
pop
js
inc
js
sbb
sbb
pop
pop
xchg
call
stos
pop
nop
in
xchg
or
andb
lock
sarb
mov
xor
push
hlt
std
orl
inc
inc
out
pop
scas
pop
fs
rcll
push
out
bound
inc
test
mov
loopne
incl
xchg
adc
ljmp
shll
inc
mov
xchg
jg
jge
fimull
pop
pop
sub
fwait
mov
push
dec
sbb
adc
adc
mov
mov
cltd
fadds
aas
mov
mov
add
push
fldcw
jae
or
insb
dec
mov
lcall
push
sbb
inc
test
mov
push
orl
out
and
adc
add
cmp
push
in
and
arpl
rcrl
jge
jbe
in
imul
hlt
push
add
mov
call
scas
or
and
ja
out
adc
in
lods
mov
cmp
dec
dec
add
testl
and
repz
mov
and
fstpt
add
push
int
test
inc
gs
adc
mov
int3
ficoms
inc
jne
and
lcall
fisttpl
ds
mov
movsb
leave
sbb
ret
or
sub
pop
and
inc
adc
pushf
mov
pop
mov
jbe
mov
sti
xor
and
cld
push
call
mov
sub
test
pop
add
jmp
arpl
xor
cmpsl
jne
mov
imul
xchg
flds
lcall
dec
or
jp
inc
das
ret
gs
cmp
add
dec
and
jmp
in
in
pop
std
js
insb
add
and
imul
cmp
ret
sbb
adc
xor
clc
out
rcrl
lods
or
in
push
lods
mov
dec
fstpt
mov
cmp
inc
jne
movsb
pushf
xchg
ja
out
and
pushf
pop
and
loope
ja
add
lcall
push
rcrb
flds
mov
sub
test
add
repz
bound
push
mov
xchg
ja
and
test
sbb
out
and
jmp
jmp
ret
ja
push
cmpsb
jnp
ja
jg
ja
mov
insl
fnsave
out
push
adc
pop
mov
mov
pop
dec
xor
xchg
sbb
mov
xor
jne
mov
pop
xchg
fldt
jl
or
xor
mov
sbb
cmp
jg
psllq
scas
pop
inc
addr16
xchg
mov
pop
mov
cli
aaa
jbe
push
das
stos
jb,pt
mov
jbe
sub
cli
jnp
xchg
fbstp
loopne
or
outsl
sti
xchg
xor
push
and
mov
xchg
or
mov
mov
sti
push
push
roll
cwtl
loope
sub
add
add
sahf
adcl
push
movsl
add
lahf
hlt
cs
loop
movsl
lock
ja
pop
loopne
in
int
adc
leave
gs
fisubs
xor
cli
mov
mov
repnz
cmc
mov
mov
scas
mov
xchg
aas
cmp
btc
cmp
or
sbb
ds
nop
push
imulb
scas
or
cmp
inc
mov
jbe
pop
push
aas
sub
xorb
push
popa
sub
pop
sbb
mov
cmc
cmp
daa
fldenv
mov
sti
sbb
push
addl
fwait
fwait
mov
je
dec
cmp
xchg
jb
in
call
push
mov
mov
arpl
aaa
rclb
mov
rol
xor
jle
mov
inc
sbb
test
shl
mov
push
imul
jg
sbb
cmp
lcall
cmp
xor
and
jmp
dec
imul
in
xchg
test
or
add
or
aam
fnstenv
xor
ljmp
cmp
adc
and
stos
cmpsl
jge
add
stos
mov
inc
sub
hlt
aaa
xchg
cmp
or
push
in
lea
fwait
mov
push
addr16
adc
add
sbb
imul
push
sbb
lcall
mov
test
mov
dec
imul
out
sbb
adc
push
dec
and
xor
mov
fnstsw
pop
mov
dec
cmp
cmp
icebp
push
cmp
shll
cmp
rorl
xor
and
mov
ss
js
and
push
loope
sahf
xor
push
andl
sar
push
lods
cmpsl
dec
add
repz
xchg
scas
lock
in
mov
fldenv
mov
jbe
xchg
arpl
mov
daa
fnsave
push
imul
mov
dec
out
repz
js
sub
cmp
mov
pop
and
mov
adc
inc
test
sarb
fwait
stos
pushf
cmp
repnz
lret
adc
jo
sbb
mov
test
lcall
imul
stos
imul
outsb
cmc
jb
push
test
insl
pop
sub
incl
pop
and
xor
stc
cmpsb
in
jecxz
mov
stos
push
mov
fiaddl
daa
hlt
sbb
mov
neg
adc
mov
mov
test
xchg
cmp
inc
sbb
push
jnp
inc
nop
xor
cmc
shll
mov
sub
aam
rclb
xchg
and
mov
rcr
push
aad
daa
std
inc
popa
out
scas
dec
and
pop
inc
stos
sahf
mov
xlat
xchg
daa
fwait
sub
or
dec
mov
js
add
mov
and
test
pop
mov
add
dec
shl
dec
fildll
mov
cmc
inc
cs
ret
pop
inc
test
inc
mov
into
sub
fwait
inc
fnstenv
int3
fsubrs
cli
ja
sub
xor
inc
sbbb
inc
adc
aaa
das
mov
mov
adc
sbb
sbb
pushf
sub
mov
add
and
popf
mov
bound
lret
inc
sub
ret
pop
xor
imul
cltd
aam
push
stc
shll
outsl
ret
addb
add
xchg
mov
out
mov
mov
adc
orl
repnz
jge
ror
push
icebp
rolb
sbb
inc
rorl
int3
out
ja
fisttps
xchg
nop
inc
data16
cmc
cltd
leave
stos
or
cli
sub
push
add
mov
jae
inc
rorl
outsb
in
fwait
xor
pop
sub
cmp
fstpt
int
outsl
cmp
mov
mov
loop
push
push
mov
sbb
ja
lds
cmp
cmpsb
adc
inc
inc
popf
push
jl
xor
adc
outsb
popf
and
or
jg
jne
pusha
leave
inc
or
xchg
adc
test
jno
loopne
or
jge
cmp
mov
mov
js
sub
mov
cmp
insb
adcl
lahf
aad
xor
cmp
mul
rolb
ja
fbstp
sbb
incl
inc
sub
add
sub
inc
shlb
sub
and
xchg
jg
push
sbb
mov
sbb
xor
out
push
pop
push
inc
pop
mov
test
jmp
int3
dec
jp
and
or
inc
pushf
mov
adc
cmp
int
pop
xchg
push
push
jae
sbb
dec
xor
divl
jmp
loop
out
mov
xchg
inc
fwait
push
xchg
ds
out
jp
and
in
pop
mov
sbb
jns
outsb
and
and
jns
or
cmp
fiadds
test
cli
dec
xchg
jl
and
xchg
mov
iret
lahf
enter
sbb
mov
mov
ss
in
sbb
jo
hlt
lret
mov
data16
dec
test
dec
leave
mov
jbe
mov
mov
or
pop
jl
call
pop
in
and
push
pop
mov
or
cs
rcr
sbb
sarb
lds
or
pushf
cwtl
je
and
pop
es
test
jmp
sub
hlt
outsb
out
push
and
mov
jp
xor
addr16
inc
mov
cmp
jae
inc
cmp
add
lods
dec
jg
lcall
test
sub
ja
mov
test
mov
xchg
in
cld
mov
mov
jmp
cs
fstl
add
pop
adc
mov
xchg
cmp
mov
ds
fwait
icebp
mov
cmp
sbb
lea
cmpsl
adc
sub
cmp
push
les
cltd
push
notl
fs
lods
adc
cld
mov
js
mov
stos
jl
push
lret
jp
addl
mov
popf
push
dec
mov
shr
movsl
sbb
sub
loopne
sbb
loope
pop
inc
scas
loope
push
leave
or
inc
stc
adc
je
outsb
jmp
push
sub
xor
js
ficoms
mov
fsubs
or
or
iret
sub
dec
jg
and
xlat
adcl
jno
mov
or
faddl
cmpsb
mov
mov
lret
lock
lcall
xchg
add
mov
or
test
add
pop
rcr
das
out
pushf
cmc
repnz
sti
addr16
adc
push
movsl
xor
lret
mov
mov
ficomps
add
xor
mov
test
aas
lods
xchg
jp
mov
dec
inc
dec
insl
jmp
xchg
mov
pop
or
hlt
jbe
mov
inc
cs
test
nop
jo
xor
ret
push
push
lahf
dec
or
pop
scas
cwtl
lret
ss
pop
lds
ret
jo
pop
test
adc
push
fidivl
test
dec
stc
lods
mov
adc
lret
pop
pop
subl
es
lret
mov
leave
adc
cmpsb
mov
inc
andl
andl
stos
pop
mov
pop
sub
shrb
xor
mov
xor
int
adc
jmp
cmp
imul
dec
xor
jo
insl
aaa
in
negb
imul
jnp
ss
pushf
push
mov
jl
xchg
mov
mov
test
outsb
push
xchg
or
ffreep
cmc
ds
in
lcall
or
xchg
mov
inc
adc
or
adcb
inc
aam
cwtl
loope
inc
and
mov
test
mov
test
test
imul
cmp
mov
fwait
test
rorb
jnp
xlat
cmpsl
mov
add
xchg
sbb
sub
push
bound
add
and
lods
add
aas
dec
fdivs
cltd
dec
sbbb
push
cmp
ljmp
mov
pop
rcrb
sub
lret
in
or
lds
sub
sub
cmp
int3
xor
ljmp
mov
push
test
cmp
sub
sbb
cli
es
mov
pop
fisubs
mov
loop
insl
notb
pop
pushf
cmp
lds
cmp
dec
cld
lock
and
dec
or
cmpsb
mov
lods
add
xchg
iret
add
loope
xor
add
cmp
push
and
sbb
mov
daa
lret
push
push
pop
inc
pop
aad
fs
xchg
mov
ror
mov
mov
mov
xchg
mov
fsubr
jno
cmpsl
arpl
push
stc
fidivrl
mov
lea
pop
sbb
mov
repz
notb
repz
movsl
repz
arpl
sbb
dec
xchg
sti
lods
sbb
jno
or
loop
xlat
clc
lret
mov
inc
sub
jg
jl
adcl
mov
xchg
jns
cld
cwtl
mov
pop
jle
sbb
outsl
add
push
pop
in
fwait
bound
mov
shlb
or
mov
mov
xchg
ficoms
sbb
inc
push
popa
int
jae
push
rorl
mov
jmp
or
lcall
jg
ret
inc
xchg
pop
pop
js
notl
stos
cmp
cmp
or
repnz
mov
push
mov
mov
push
popa
aad
push
sub
push
in
jne
dec
mov
sbb
in
jmp
mull
idivb
mov
test
ljmp
mov
or
ss
pop
sbb
popa
aad
adc
mov
sub
xchg
lahf
mov
cs
sbb
pop
test
dec
push
pushf
dec
hlt
jno
cmpl
or
sub
sahf
call
dec
lods
pop
sub
repnz
insb
push
scas
and
in
fwait
into
and
jo
out
inc
aas
movsl
xchg
scas
jg
insb
fimuls
in
cmpsb
mov
ficoml
hlt
int
lds
mov
jne
fidivl
and
fsts
leave
mov
ja
sarl
test
flds
or
insl
or
xchg
movsb
add
rcll
leave
cmp
mov
inc
outsl
or
repnz
cwtl
cmp
fisttpl
enter
in
mov
xchg
daa
sbb
outsb
push
dec
xchg
mov
and
test
dec
push
call
pop
mov
add
push
cmp
into
in
and
jo,pn
popf
sbb
ja
dec
test
xchg
pop
lock
int3
or
cmc
popa
icebp
fcmovnu
pop
sub
adc
cmpsl
addl
jnp
jns
jno
mov
inc
movsb
ds
sub
stc
fwait
dec
icebp
mov
mov
movsl
xor
xor
dec
popf
clc
movsb
inc
es
adc
push
xchg
mov
xchg
movsb
mov
les
inc
call
push
pop
insl
sbb
fimuls
or
enter
les
inc
jecxz
adc
sbb
addr16
rolb
outsb
mov
mov
cwtl
sub
xchg
push
jns
test
mov
cli
mov
and
jmp
xchg
int
test
add
inc
mov
movsb
or
ljmp
out
cmp
sub
lahf
cmp
cmc
rclb
pop
popa
stos
ret
cwtl
lods
cmp
sub
mov
scas
xchg
adc
lock
int
je
mov
mov
xchg
repnz
clc
mov
push
jp
xchg
mov
cmpsl
add
mov
inc
fadds
stc
and
mov
cmpsl
jnp
clc
enter
cmp
add
mov
pop
std
jg
divl
mov
inc
int
inc
inc
sbb
pop
rcll
stos
loope
jns
fsubl
inc
gs
jno
pop
pop
mov
jns
jnp
bound
or
adc
inc
add
inc
adc
lahf
dec
call
outsl
push
and
or
loop
mov
jbe
fcoms
mov
mov
daa
pop
inc
xlat
imul
and
pop
cmp
addr16
jbe
xchg
pop
ret
mov
mov
scas
inc
jbe
inc
lea
adc
jns
mov
lret
std
repnz
and
mov
sub
sbb
push
fs
sub
xchg
hlt
sbb
gs
cltd
addl
dec
mov
out
add
fs
xchg
xchg
imul
aaa
ja
mov
push
addr16
sahf
mov
repz
push
ljmp
xchg
les
lds
fidivs
sahf
daa
mov
add
int
sbb
loop
insb
or
jmp
or
scas
sub
shr
push
xchg
adc
aas
push
pop
and
mull
mov
cmp
dec
sbb
icebp
mov
and
shlb
sub
mov
cmpsl
loope
dec
mov
aas
ror
fwait
cmp
sub
test
dec
js
jmp
repnz
fmuls
out
push
jp
pop
xor
push
mov
adc
mov
repz
push
and
push
jle
fists
outsb
mov
xchg
pop
dec
mov
roll
shll
mov
fwait
adc
aas
imul
push
pop
das
mov
aam
cmp
adc
xor
into
aaa
xchg
movsl
jae
xlat
orl
mov
cmp
adc
subl
mov
add
test
popa
fisttps
sbb
test
adc
mov
xchg
pusha
mov
push
mov
in
repnz
push
movsb
sahf
mov
ljmp
xchg
mov
push
mov
dec
cwtl
lret
sbb
pop
pop
xor
rcrl
and
xor
pop
cmp
mov
loope
pop
scas
xchg
aaa
incb
out
push
push
faddl
in
into
andl
pop
mov
icebp
push
add
or
xor
push
lahf
mov
into
insl
mov
jne,pn
push
mov
inc
pop
inc
sarl
inc
cmp
xor
hlt
aas
roll
pop
jge
and
mov
pop
nop
test
pop
xchg
fisubs
stos
push
sbb
sub
add
pop
fisubl
jne
mov
into
fistl
xchg
in
mov
js
cmpl
jp
lods
dec
cmpsl
ret
fildl
ss
fstpl
out
imul
jle
stc
fdivr
pop
mov
push
xor
lret
icebp
push
cld
cli
rcr
cltd
inc
fbstp
andb
jg
dec
and
les
xchg
pop
jg
jno
fwait
and
xor
mov
jp
mov
inc
cli
outsl
sub
fcomps
push
dec
pop
sarl
addr16
xchg
lds
sub
adc
jge
push
mov
pop
fwait
notb
pop
cli
adc
ret
dec
adc
inc
sar
pop
xor
push
insl
jmp
outsb
cli
cli
out
or
insb
add
ds
outsl
xor
stos
les
or
or
pop
xlat
and
jns,pn
jne
xchg
mov
adc
dec
sbb
or
pop
or
into
lahf
test
pusha
pop
sar
mov
in
push
jmp
outsb
dec
hlt
nop
and
notb
lods
or
je
scas
jp
xchg
dec
sbb
jmp
mov
pop
jmp
in
testb
outsb
jns
cmp
cld
or
js
mov
xchg
jae
in
clc
sbb
imul
and
cli
xor
stc
pop
push
mov
mov
xchg
mov
cltd
pop
mov
popl
pop
push
cmp
movsb
movsl
sub
adc
mov
jmp
repnz
or
inc
sbb
je
jecxz
xchg
jae
inc
xchg
sbb
inc
sub
scas
pop
shr
xchg
lock
icebp
sbb
sbb
xlat
fs
adc
idivb
lods
lret
out
andl
dec
stos
jmp
insl
ret
sbb
out
pop
mov
or
ja
pushf
out
int3
cli
divb
js
mov
outsl
sbb
cmp
mov
mov
dec
mov
icebp
pop
fisttps
ret
jne
jmp
cmp
adc
xchg
sahf
sub
push
add
not
lods
sbb
sub
mov
incb
pop
lahf
ret
test
mov
push
test
dec
add
lret
add
lea
orl
insl
mov
pop
cmpsb
scas
stc
sub
xor
ret
xor
outsl
repz
fcoms
shl
adc
dec
jmp
sub
push
outsl
jle
lret
mov
push
ja
push
in
add
imul
cmp
outsl
mov
mov
or
sahf
inc
push
xchg
and
mov
sub
pop
pop
add
cmp
add
cmp
mov
pop
jl,pn
push
adc
fisttps
dec
jno
sti
sbb
add
stc
sarl
repz
les
addr16
arpl
bnd
xor
adc
lret
insl
sbb
cmp
outsb
je
pushf
scas
shrb
std
dec
mov
or
sbb
xor
scas
arpl
cmp
xor
sbb
pop
push
mov
xor
divl
daa
inc
aad
cmc
imul
fsubrl
xor
cli
xor
cmp
mov
aam
out
mov
xlat
cmp
scas
jecxz
stos
or
pop
insl
pop
popf
dec
dec
xchg
je
cld
in
mov
mov
cld
or
clc
notb
cmp
in
dec
cmp
cld
jbe
xchg
sbb
ss
outsb
fcompl
push
and
std
out
mov
pop
loope
adc
jecxz
ja
js
mov
push
ret
test
xchg
push
je
ds
dec
lret
test
rcrl
das
dec
mov
dec
xchg
jecxz
lods
cmp
aad
sub
mov
mov
mov
jnp
pushf
cwtl
add
jb
or
sbb
mov
add
ss
dec
lods
inc
test
rorb
xchg
enter
not
lock
mov
pop
mov
add
dec
adc
or
jne
loopne
sub
popf
cld
dec
mov
pushf
fdivl
cs
popf
pop
out
xchg
adc
mov
bound
movsl
dec
adc
hlt
shll
jae
jg
jb
xor
repnz
pop
in
ss
adc
push
sar
enter
add
outsl
sbb
das
xchg
jp
andb
lods
xor
cmp
mov
int3
cld
or
cmp
pop
dec
jbe
pop
add
hlt
outsb
or
adc
clc
xor
jbe
inc
lods
hlt
adc
rolb
xchg
cs
fwait
add
jne
xchg
stos
outsl
fwait
std
push
test
mull
daa
jb
jnp
addl
sbb
loope
insl
sbb
cmp
cmc
push
or
and
daa
xor
popf
and
stc
test
faddl
dec
xor
cli
les
cs
cmp
cwtl
cmp
into
inc
je
mov
repz
ja
std
sbb
push
out
shll
sub
testl
xor
mov
incl
or
test
js
add
ret
lock
sahf
enter
dec
mov
fwait
jae
imull
jmp
xlat
push
sub
pop
dec
mov
gs
addb
mov
movsl
aad
imul
pop
rorb
hlt
mov
rcl
mov
lods
jmp
test
jbe
mov
adc
xchg
aam
ja
lret
jo
imul
jl
sbb
push
fimuls
jae
lret
push
mov
sub
icebp
adc
test
loope
mov
mov
out
lahf
or
inc
jmp
pop
in
or
pop
in
adc
cmp
mov
dec
mov
pusha
out
cwtl
inc
cli
daa
movsb
or
pushf
fwait
pop
pop
orb
pop
push
adc
sub
inc
cmp
std
mov
test
imul
ljmp
mov
adc
stc
mov
pop
add
repnz
sbb
mov
loop
and
pop
pop
sbb
jmp
sti
inc
sbb
int3
push
adc
lcall
cmpl
push
xchg
in
stos
inc
int
push
out
cltd
cmpsb
pop
cmp
cmpsb
xchg
call
cli
mov
push
xchg
imul
or
pop
decl
fwait
loopne
loopne
nop
adc
add
out
cmc
mov
leave
mov
fdivrl
jg
clc
and
insl
xlat
or
inc
adc
and
cmp
fbstp
int3
inc
rolb
pop
lret
and
ret
call
ljmp
xchg
push
mov
adc
aam
jns
addr16
fmuls
popf
mov
adc
cmp
xchg
fcomps
stos
push
in
or
leave
push
mov
hlt
rcrl
das
js
xchg
pop
imul
rcr
orl
pop
mov
in
jno
gs
cmp
pop
jecxz
pop
movsl
popf
cs
shlb
faddp
andl
scas
imul
or
xor
push
loop
push
das
es
add
leavew
daa
enter
jo
or
jno
mov
in
pop
inc
testl
lcall
mov
adc
pop
xor
hlt
sbb
and
mov
cltd
test
pop
and
je
pop
and
jnp
jno
subl
push
ret
add
xchg
push
outsl
pop
mov
mov
jg
xchg
mov
mov
fwait
lods
fstpt
push
cld
mov
fistps
pushf
js,pn
mov
cmp
movsb
aas
shlb
loop
in
jg
jb
int3
cld
decb
pop
rcr
dec
shll
cwtl
imul
repz
push
hlt
lea
lret
dec
add
daa
dec
and
loopne
jge
das
dec
push
xor
insb
in
jmp
stos
aad
xchg
out
pushf
mov
outsl
cli
jl
mov
int
xor
push
jmp
adc
adc
int3
xchg
stc
xor
addb
clc
jb
mov
dec
push
ss
mov
ds
jge
int
cmp
rorl
rcrl
enter
leave
inc
adc
dec
xor
ja
sti
mov
jne
jp
cmpsb
mov
xchg
int
cmp
into
out
xchg
sub
repnz
mov
or
stc
xor
jmp
jp
xchg
arpl
dec
ret
push
popf
imul
xor
jle
mov
clc
js
jb
inc
xor
js
leave
lea
int3
dec
ret
dec
insl
sbb
mov
aaa
out
in
xor
rcrl
mov
test
int3
dec
xorb
and
sbb
loop
cmp
lods
lcall
mov
lret
fldcw
jb
lock
inc
enter
hlt
sub
xlat
cmpsb
or
mov
xchg
push
aam
jge
jmp
insb
ret
xor
jb
pop
xchg
cmp
or
shr
mov
jno
dec
das
mov
test
add
jge
xchg
insb
mov
push
dec
mov
pop
aad
sbb
sub
stos
jmp
xchg
and
xchg
roll
addr16
pop
sahf
pop
loopne
sbb
fucom
movsb
mov
jle
test
push
pop
sub
cmc
xchg
dec
sbb
jae
mov
and
sbb
scas
mov
mov
push
jne
pop
mov
mov
lcall
or
cltd
mov
shll
add
aam
and
or
bound
jle
rorb
aam
out
aam
in
mov
mov
pop
pop
pop
pop
and
dec
enter
fcmovbe
divb
mov
imul
fwait
push
pop
movsb
pusha
adc
sub
repnz
ret
cmp
push
add
lret
es
ds
pop
mov
jb
push
add
cmp
sbb
add
int
or
jg
jne
cmpsb
loopne
or
test
imul
out
shlb
push
ret
xchg
testl
xchg
imul
cwtl
test
push
dec
test
in
xor
andl
mov
dec
jge
int3
enter
pusha
sbb
mov
gs
sbb
inc
xchg
cmpl
out
aam
lcall
in
out
dec
fstps
sub
aam
cmp
sbb
xor
push
stc
aam
aam
in
sahf
mov
insl
xor
cli
sti
jnp
mov
xor
iret
adc
cltd
push
int
push
dec
inc
mov
push
stc
or
pop
mov
dec
cwtl
loopne
cmp
mov
sbb
inc
in
pop
loopne
sub
ficoml
cmp
test
std
mov
lea
int
push
pop
cmc
xlat
sub
aas
cmpsb
xlat
out
mov
int3
dec
push
xchg
mov
xor
xchg
add
pop
mov
and
dec
pop
idivb
or
call
mov
sbb
mov
imul
pop
inc
inc
and
and
jbe
frstor
fs
mov
sub
outsl
mov
ds
pop
sub
addr16
aas
lret
flds
nop
movsb
fwait
add
add
loop
lods
sub
pop
leave
dec
pushf
in
inc
dec
clc
aas
ds
ja,pn
subb
xchg
rclb
ret
scas
ficompl
fstl
out
push
ss
movsb
mov
cld
in
je
imul
enter
fs
mov
and
mov
mov
icebp
dec
sub
cmp
in
das
ja
les
aas
dec
sbb
daa
jo
outsl
pop
lock
xor
jb
xor
jbe
or
dec
jns
adc
pop
push
subl
jo
xchg
repz
stos
shl
xchg
xchg
js
aas
cwtl
mov
pushw
push
rcrb
in
cmp
imul
xor
mov
inc
test
test
dec
ljmp
add
data16
lret
adc
sub
inc
shlb
into
add
mov
push
data16
lahf
xorl
adc
pushf
int3
or
push
push
jge
or
and
fbld
mov
in
mov
push
jg
loopne
xorb
cwtl
fsubrs
jmp
sarl
outsl
cmp
sub
es
shll
pmullw
roll
rcr
inc
mov
fsubs
lds
out
sub
jg
fists
pop
cmc
movsb
push
mull
cld
jne
decl
mov
in
xor
in
xchg
dec
imul
imul
inc
xchg
addl
pop
push
mov
popf
cmc
mov
dec
es
sub
inc
sub
movups
cmp
outsb
divl
or
fs
mov
fdivrs
xchg
and
dec
mov
mov
mov
and
push
push
and
and
mov
or
out
mov
shlb
jno
push
shrl
push
sbb
in
sbb
test
sub
jge
push
imul
int
push
mov
ret
out
mov
popf
fstpl
daa
sub
repnz
mov
lods
push
mov
cmp
dec
or
test
std
xchg
cmp
pop
push
add
outsb
cwtl
aas
mov
dec
mov
ds
cmpsb
push
or
insb
popf
xor
sti
push
cmc
xor
rcrl
hlt
inc
mov
inc
xchg
cmc
icebp
fwait
clc
sub
imul
icebp
hlt
gs
fstpt
inc
aas
and
ret
add
out
das
jbe
imul
std
jno
mov
mov
dec
clc
fdiv
mov
lea
push
test
add
adc
adc
out
pop
dec
xlat
outsb
int
inc
xor
mov
jecxz
stos
mov
aad
pop
mov
cltd
xor
out
cli
xchg
outsl
loope
test
push
push
notb
loopne
or
push
mov
mov
add
subb
pop
add
mov
mov
inc
mov
gs
insb
and
adc
jo,pt
es
daa
ljmp
push
fwait
das
out
sub
testl
popa
push
cwtl
outsl
xor
ds
xchg
sub
and
pushf
and
mov
lock
pushf
data16
dec
pushf
mov
pop
jp
jne
ljmp
mov
mov
dec
or
jae
and
cmpsb
stos
and
insl
ficoml
aad
shl
jp
or
dec
dec
repnz
cli
lret
inc
or
loop
inc
mov
test
pop
pop
dec
mov
je
dec
subb
dec
addb
mov
scas
jo
ret
mov
lods
rorl
adc
out
add
cmpsb
xchg
or
lret
lea
lahf
out
rorl
mov
in
push
jae
xchg
fsubl
out
icebp
xor
mov
sub
pop
pop
out
xor
pop
jmp
push
xor
mov
xor
lock
mov
mov
jg
adc
dec
push
in
cmpsl
mov
xchg
mov
outsl
push
cmc
mov
sbbl
dec
shrb
cmp
cmc
jmp
rcr
inc
mov
imul
and
lret
imul
fsubrs
jno
mov
ds
jbe
test
push
mov
sbb
xor
mov
in
test
or
stos
xchg
sub
lcall
or
dec
push
jmp
pusha
cli
lods
fildll
addr16
push
imul
or
addl
clc
xor
adc
mov
es
loopne
sbb
pushf
fcompl
push
or
add
mov
and
inc
mov
cmp
popa
cmp
xor
scas
ljmp
sti
aad
loopne
xor
lods
inc
xchg
pop
sub
sub
imul
push
mov
sbb
dec
sbb
test
pop
jecxz
inc
xchg
sub
imul
insb
aaa
out
addr16
mov
xor
dec
out
jmp
cmp
es
dec
jns
inc
fcmovnb
inc
jl,pn
or
cmp
cs
jecxz
test
insl
pop
ret
inc
xlat
enter
push
imul
mov
rep
sub
lcall
mov
pop
adc
inc
iret
pop
das
outsl
adc
loope
icebp
fs
fnsave
sbb
sub
data16
xor
or
adc
fnstcw
mov
das
or
mov
out
nop
lea
mov
and
in
cmp
ret
daa
mulb
fs
push
xorl
add
movb
loop
in
roll
push
negb
mov
mov
jmp
les
mull
shlb
jns
movsl
inc
test
insb
and
jl
test
jne
fwait
mov
mov
imul
and
mov
push
xor
loope
out
loopne
push
into
movsl
vmovlps
push
mov
add
xor
push
je
cs
pusha
push
test
inc
jg
jns
aaa
xchg
ret
clc
inc
mov
stc
out
das
xor
test
adc
lock
aaa
jge
or
pushf
mov
push
test
pop
ds
aaa
push
das
movsl
xchg
push
rcl
jp
pop
xchg
loopne
lock
jp
in
and
ret
push
mov
and
scas
inc
inc
add
jp
sub
add
inc
cli
add
push
or
insb
xchg
xchg
leave
call
xor
jae
testl
mov
dec
andb
mov
xchg
mov
inc
mov
mov
ds
jo
inc
repnz
pop
or
sarl
gs
cltd
push
sbb
dec
je
cmp
aam
jno
fidivrl
add
outsl
subl
xchg
xchg
mov
jecxz
js
cmp
pop
add
xchg
pop
mov
and
push
cmpl
popa
or
mov
fsubrs
mov
mov
pop
into
fiaddl
jno
sub
aam
rcl
ljmp
mov
movsb
arpl
xchg
pop
dec
nop
pop
hlt
cmpsl
stos
jnp
sub
arpl
xor
fcmovbe
mov
sub
push
cmp
loope
xlat
xchg
std
push
js
mov
add
je
cld
cld
mov
and
jns
movb
xlat
cmp
fsubs
adc
lea
lds
out
popa
and
insb
outsb
push
inc
jg
pop
sbb
mov
and
insl
add
and
and
dec
xor
fdivrs
mov
scas
inc
xor
fwait
cmpsb
xor
pop
fiadds
pop
mov
pop
push
aas
lahf
mov
or
sbb
cmp
mov
dec
lods
out
add
shll
faddl
cmp
adcb
jo
lock
jg
sarb
pop
mov
pop
push
pop
std
into
cmc
lea
mov
pop
cltd
inc
and
inc
jae
jge
and
pop
dec
js
out
xor
mov
mov
cltd
rolb
jo
push
fucomip
loope
je
jo
inc
sti
lret
ret
mov
addr16
fldenv
lods
movsl
sub
mov
or
into
sbb
dec
mov
sbb
inc
lock
data16
jno
sbb
bextr
rcr
mov
adc
jne
sbb
dec
jae
insl
sbb
addr16
sbb
xor
std
inc
xor
cwtl
adc
loopne
out
jecxz
cmpb
xchg
std
outsl
arpl
jg
or
mov
dec
popa
sub
mov
mov
es
adc
insb
sarb
push
add
dec
movsl
jns
adc
adc
dec
jmp
or
push
es
loopne
sub
pushl
mov
and
inc
mov
push
movsl
mov
adc
push
sub
add
push
pop
arpl
in
push
sub
push
scas
test
xchg
push
cmp
adc
pop
pop
ljmp
push
push
mov
mov
std
sub
push
push
dec
cltd
into
or
mov
sub
mov
or
fcmovnb
pop
mov
fdivs
mov
cli
add
arpl
sub
add
inc
cmp
andnps
insl
jbe
dec
mov
or
and
pusha
push
stos
dec
jae
mov
fwait
xor
popl
sbb
xchg
mov
jl
xor
or
loope
xchg
mov
jecxz
xchg
fcoml
jno
and
insl
cli
cmp
xor
cwtl
in
cmpb
ja
cmc
lahf
mov
orl
jbe
js
push
mov
in
test
or
ljmp
stos
mov
pop
ja
daa
xchg
std
xorb
das
inc
in
pop
sub
adc
lea
add
mov
sub
std
adc
cltd
jb
mov
dec
ror
add
popf
mov
mov
pop
xchg
mov
add
lods
lds
inc
inc
jmp
push
jmp
pusha
insl
test
add
cmpsl
call
movsl
jl
test
rorb
sbb
lds
inc
push
aad
lahf
push
xchg
adc
repnz
nop
and
hlt
pminub
jbe
int3
iret
enter
and
ror
cmp
imul
outsb
sbb
and
ret
mov
lea
fnsave
mov
add
negl
cmp
sbb
pop
cld
nop
mov
push
add
sbb
data16
les
push
pop
or
push
leave
dec
jp
jp
mov
adc
nop
inc
sub
xor
out
xor
adc
mov
cltd
fldt
jge
mov
fadds
lcall
sub
and
xchg
add
loopne
xchg
outsb
or
test
push
jbe
jp
sarl
fwait
sbb
or
mov
aam
es
lods
shll
movsl
stos
mov
xor
rcrl
mov
shlb
xchg
arpl
je
jmp
test
push
mov
cmp
leave
arpl
fwait
sbb
push
dec
shll
cwtl
add
dec
es
nop
jmp
fs
inc
mov
add
cmp
sbbb
push
jo
or
aad
enter
into
inc
pop
loopne
shll
xor
test
jno
push
pop
and
xlat
or
add
lea
test
fildll
push
dec
mov
mov
test
sub
mov
add
jnp
push
push
lods
dec
mov
mov
scas
nop
push
push
push
mov
jle
lods
push
xor
and
xor
xchg
aas
clc
jnp
je
adc
dec
jnp
rcrb
out
dec
pushf
iret
cmp
fnstcw
push
jecxz
testl
pop
das
mov
mov
adc
jnp
jbe
jecxz,pn
pushf
negb
pop
fildl
es
ret
mov
arpl
xchg
repz
stc
enter
xor
pop
and
sbb
scas
pop
xchg
in
fs
cltd
or
sbb
lock
or
sbb
mov
dec
ret
call
shl
test
not
sahf
push
ja
mov
adc
sub
sbb
xor
arpl
repnz
mov
mov
adc
sbb
addr16
pop
loopne
cmpsl
adc
add
add
xor
js
push
out
jl
call
cmpb
xor
jl
es
sbb
bnd
jnp
pop
ret
push
orl
into
out
add
movsl
xchg
fbstp
addb
adc
inc
xchg
sbb
cli
mov
or
lret
jbe
lock
mov
or
xor
mov
sti
push
jl
out
xor
jbe
jb
xchg
jae
add
lret
inc
dec
test
sub
pop
addl
push
enter
fadds
repz
gs
pop
add
mov
jge
xor
cmpsl
aaa
sbb
sbb
sub
nop
sbb
cmpsb
popa
xor
inc
imul
pop
mov
push
mov
pop
lods
push
stos
lock
out
stos
ret
inc
xor
imul
pop
jne
or
ret
or
cmp
mov
andl
add
mov
fcoms
inc
add
mov
sarl
inc
mov
pop
pop
cmp
adc
mov
ljmp
dec
fadd
jb
fsubrl
jecxz
push
xor
jae
jbe
cwtl
stc
ja
into
jne
sub
sbb
stc
mov
cmp
jb
inc
out
mov
and
dec
cld
popa
je
data16
adc
add
test
gs
fsubrl
je
push
jg
inc
pushf
mov
add
cmp
pop
cmp
mov
lret
jecxz
pop
js
mov
stc
mov
into
mov
and
dec
mov
outsl
xchg
fisubrs
cmc
xchg
xorb
cmp
and
xor
nop
sbb
outsb
sub
jge
cmpsl
imul
dec
fldenv
fistl
jns
loopne
mov
xsha256
cmpsb
pop
pop
dec
scas
incl
inc
mov
movsb
cmp
leave
bound
clc
inc
imul
cmp
in
roll
jae
loope
adc
mov
gs
jnp
data16
mov
ja
fisttpll
or
arpl
test
adc
and
cmpsb
xchg
imull
cltd
xor
or
inc
add
push
push
sub
int
scas
std
adc
push
jo
subb
lods
lret
iret
arpl
cwtl
dec
stos
daa
jmp
push
push
jge
mov
or
ror
push
and
adc
mov
and
push
fstps
nop
add
insb
decb
inc
insl
jecxz
cmpsl
fisubs
push
pusha
cmpsl
rcll
dec
cmp
adc
xchg
adc
enter
mov
out
icebp
adc
cmp
add
adc
jp
adc
push
fwait
mov
lods
dec
jne
mull
cli
mov
popa
cld
fildll
lods
aaa
outsb
sahf
lahf
js
add
fistpll
xor
popa
or
sbb
sti
sbb
outsb
ljmp
add
stos
inc
lds
shll
mov
dec
cli
test
mov
inc
mov
xchg
in
push
shlb
ss
inc
pop
adc
movb
cmc
add
jno
xorb
mov
rcrl
mov
repz
push
inc
xchg
jle
push
and
out
fistl
mov
inc
jp
push
mov
je
test
loopne
jne
ds
mov
lret
sbb
push
lods
lret
in
arpl
pop
jb
xchg
std
push
jp
clc
das
and
adc
cld
cmp
lods
bound
cs
shrb
scas
sub
scas
push
dec
mov
popa
loop
mov
in
dec
jno
mov
popa
hlt
mov
cmp
mov
rcrb
jo
add
test
fsubs
cmpsb
aaa
pop
scas
jnp
push
mov
imul
xchg
loopne
inc
mov
lock
push
imul
pop
stos
cli
fistpll
sbb
push
push
dec
xor
mov
movsl
out
loopne
xor
dec
aad
test
lret
ja
fstp
test
ljmp
or
imul
aaa
jecxz
add
repz
pop
roll
sub
cmpb
push
lock
inc
jecxz
fcmove
xchg
xor
mov
mov
rcrl
cmp
lret
inc
sbb
pop
inc
clc
mov
rolb
les
flds
and
icebp
sbb
shl
inc
xchg
hlt
ffreep
dec
lea
adc
add
daa
ret
call
jp
cmc
test
cmp
sub
shrl
loopne
loop
pop
mov
out
xor
sub
push
adc
cs
lods
cs
leave
mov
scas
sbb
push
jb
es
adc
ljmp
jl
cmp
pusha
sbb
sub
cmp
jb
loope
std
nop
data16
js
rorb
xchg
addr16
in
sbb
flds
mov
testl
repz
sti
adc
mov
add
jae
inc
cli
call
jbe
mov
jo
adc
sub
adc
push
inc
add
pop
inc
jno
sub
sti
lods
cmp
call
cli
loopne
xchg
inc
cmp
xchg
fnstcw
jbe
push
mov
xchg
fdivrs
jae
xchg
scas
test
push
mov
dec
push
sub
fwait
ljmp
das
cld
adc
adc
fs
xchg
add
in
jmp
mov
lret
subl
lock
gs
pushf
insb
jmp
lret
sub
mull
aaa
dec
cmpsl
nop
and
mov
adc
pop
out
outsb
xor
mov
dec
imul
xchg
mov
push
sbb
fcomp
jne
fs
dec
mov
stos
xchg
repnz
je
add
push
inc
fcomi
pop
and
test
mov
ret
jnp
xchg
inc
jbe
xor
xchg
adc
inc
in
xor
sti
add
fidivrl
xor
fisubrl
lods
jl
fcompl
dec
cmpsb
ds
stc
sbb
or
adc
and
dec
cli
jge
mov
xchg
pop
inc
data16
movsl
xchg
inc
outsl
dec
push
loope
insl
mov
mov
inc
mov
ljmp
int3
mov
jmp
scas
fidivl
js
inc
xor
mov
lahf
pop
leave
push
mov
push
int
xorl
fs
pop
mov
mov
packssdw
mov
xchg
or
pop
loopne
decb
js
xchg
mov
pop
std
adc
jge
push
pusha
cwtl
inc
repnz
jb
add
or
jp
cmp
out
enter
dec
shlb
and
xchg
call
insl
push
movsb
cmp
xchg
mov
sub
in
xor
xchg
nop
ja
stos
fsubs
mov
pushf
sbb
push
jmp
jo
int
and
out
rorb
pusha
js
std
dec
jg
aad
mov
sahf
push
xchg
mov
dec
test
adc
mov
sub
add
jae
pop
adc
pushf
mov
dec
ret
in
test
ucomiss
fistpll
out
icebp
jl
shll
fwait
hlt
adc
pop
push
ss
xchg
xor
pop
push
stc
mov
mov
iret
sbbl
ss
push
inc
mov
xchg
xchg
mov
inc
pop
addr16
daa
sbb
xor
jp
sub
push
outsl
repz
and
push
pop
cmp
les
inc
pusha
ljmp
xchg
dec
ficoms
mov
sbb
and
sahf
push
pop
movsl
xchg
push
repz
mov
push
push
imul
jb
into
mov
xlat
jno
int
out
adc
popf
stc
inc
mov
sahf
push
push
inc
inc
pop
and
push
jmp
or
jmp
dec
jle
mov
pop
dec
mov
pop
lret
pop
vpcmpgtw
and
add
andl
mov
insb
push
int3
stc
lret
scas
das
mov
sbb
xchg
ficomps
mov
cmp
shll
dec
ret
out
inc
imul
jg
dec
jae
mov
movsb
stos
subl
pop
xor
shlb
das
jle
xchg
jmp
sbb
ret
sub
xorl
into
lcall
test
idiv
pop
ja
sbb
movsl
fmuls
push
or
and
test
add
or
inc
aas
add
les
cmp
lods
mov
scas
pop
popf
mov
stos
fs
dec
icebp
sub
mov
aam
push
mov
mov
pop
jnp
pop
sti
cmp
imul
ds
lcall
cmp
lret
mov
or
fdivrs
or
scas
jmp
shll
cmp
mov
aaa
test
lea
jmp
fidivl
lods
inc
std
cmp
dec
jo
mov
dec
mov
es
pop
int3
stc
xchg
stos
xchg
int
push
cmp
mov
arpl
push
les
movsb
cmp
test
and
lock
roll
mov
das
in
fldenv
sbb
clc
fsub
jae
push
pushf
lds
or
adc
das
lret
outsl
mov
test
adc
mov
test
aas
dec
in
adc
xchg
pop
sti
xchg
in
add
jnp
imul
push
and
sti
or
lods
mov
fisttpll
add
push
filds
rolb
jne
mov
loop
negl
mov
int
imul
mov
roll
lcall
pop
mov
popl
sahf
rcl
std
test
mov
push
sbb
jecxz
inc
popf
sub
fsubrs
aas
mov
xchg
add
dec
fcomp
mov
cmovp
mov
nop
or
test
mov
mov
jae
add
jmp
data16
or
int3
loop
jb
mov
fcoms
cmp
mov
push
sub
xchg
popf
dec
rcl
fstps
jl
fnsave
out
or
hlt
pop
ficomps
pop
push
ret
out
pop
or
arpl
cld
mov
pop
popa
pop
aad
jg
and
sbb
fdivp
inc
mulb
add
push
les
and
add
movsl
sbb
xchg
daa
into
dec
fstl
shr
fdivs
xor
hlt
push
push
loop
adc
mov
adc
aad
mov
push
or
loop
add
cmp
inc
cmp
int3
mov
sti
insl
pop
and
lods
pop
add
add
cmp
adc
xchg
les
jbe
pop
lods
sub
test
dec
sub
jecxz
call
inc
insb
adc
push
cmp
and
inc
add
jge
pop
sahf
and
leave
mov
repnz
push
pop
popa
sub
xor
repz
out
ret
ss
cld
adc
les
xchg
repnz
mov
sbb
enter
xchg
in
out
mov
lods
xor
mov
mov
jbe
and
movsl
dec
xchg
mov
jae
frstor
loopne
cmp
dec
and
ficoms
mov
movsb
push
sub
mov
pop
fwait
sbbb
add
add
sbb
inc
push
push
gs
in
mov
and
out
xor
pop
and
cmp
xchg
add
inc
sbb
jae
iret
arpl
lods
inc
push
inc
ficoml
cmc
fwait
inc
call
and
or
cmp
leave
gs
adc
daa
cmp
jle
push
sarb
lret
mov
inc
pop
test
xor
dec
pop
outsb
in
js
mov
inc
sti
pop
lret
lahf
adc
xchg
inc
ror
xor
cli
in
and
adc
lcall
cld
cwtl
sbb
adc
adc
mov
jmp
orb
out
outsl
fidivs
adc
jp
mov
jb
inc
mov
cmp
dec
xchg
jmp
lahf
mov
mov
arpl
leave
int3
mov
loop
jg
testl
mov
pop
sarl
and
adc
stos
and
sbb
test
mov
adc
mov
mov
xor
sbbl
daa
or
push
sub
dec
jae
push
adc
cmp
cs
ds
out
les
xlat
pop
sub
mov
in
cli
add
in
nop
inc
imul
adcb
int3
sub
rcrl
jns
sub
mov
mov
rcll
cli
outsl
mov
sbb
or
jle
cwtl
add
mov
adc
test
sbb
enter
and
int
mov
or
mov
sub
cmpl
add
stc
jae
aas
dec
mov
inc
repz
mov
vmaxss
xor
xor
enter
sahf
roll
mov
mov
mov
push
and
nop
cmpb
aaa
shrl
jmp
mov
mov
mov
stos
cs
add
inc
gs
add
xchg
fdiv
push
push
add
out
sub
filds
sbb
mov
data16
xchg
outsl
pop
adcb
pop
lock
pop
mov
cmp
push
xchg
cmc
jne
scas
outsl
push
mov
push
ds
cmc
ss
lods
movsl
lea
testb
mov
lcall
inc
in
inc
jmp
mov
shlb
cmp
stos
mov
out
adc
xor
and
push
xchg
dec
cli
data16
xorb
lds
popa
and
adc
sbb
xchg
mov
lods
outsl
pop
cwtl
sbb
enter
and
ljmp
fldl
push
daa
lret
push
mov
shrl
push
scas
pop
out
mov
xor
outsl
mov
fucomi
or
xchg
cmc
je
mov
push
xchg
sti
repz
cmp
push
arpl
mov
mov
test
shrl
pop
inc
xor
dec
push
dec
inc
push
js
mov
ror
faddp
push
sbb
and
fcmovne
jo
fidivl
or
loopne
lock
shll
add
inc
cld
shll
pop
test
fcoml
lret
mov
icebp
push
sub
xorb
cmp
pop
out
add
or
cmc
cltd
xor
sub
orl
pop
push
add
in
gs
xlat
sti
rorl
lods
clc
repz
dec
sarb
jno
lods
jecxz
mov
jnp
push
mov
les
ds
iret
mov
fdivl
test
out
movd
mov
inc
subl
mov
mov
inc
mov
mov
fs
mov
jp
neg
adc
enter
ficoml
mov
xchg
jg
test
stos
pop
xor
in
scas
inc
xor
xchg
lret
xlat
enter
fadds
js
mov
loop
cmp
xchg
insb
or
int3
and
or
inc
mov
daa
fdivrl
sub
sbb
or
xchg
fstpt
xchg
subb
inc
push
add
mov
jno
mov
mov
out
js
loope
inc
add
aam
inc
pop
testb
adc
movsl
ret
cmp
movsb
and
loop
sub
inc
jne
neg
sbb
pop
pop
sub
pop
or
cmc
sub
mov
imul
loopne
mov
mov
cmpsb
in
xchg
mov
outsl
mov
mov
in
xor
les
jnp
lcall
sub
das
aam
popf
test
mov
out
out
lret
dec
lock
pusha
test
xchg
imulb
push
int
dec
sub
shlb
mov
out
mov
les
cli
and
and
int3
cmpsb
push
dec
test
repnz
into
sub
gs
xor
mov
leave
scas
sar
sbb
sub
outsl
adc
xor
mov
adcl
movsb
dec
rolb
hlt
add
les
jns
les
dec
rcr
xchg
loop
cmp
jno
movsl
or
jl
or
repnz
mov
je
sub
mov
or
fidivs
dec
sub
mov
cwtl
mov
mov
xchg
int3
inc
testb
das
mov
xlat
cmpsb
out
push
push
sub
hlt
jno
xchg
xor
mov
mov
sbb
mov
aad
inc
pusha
test
stc
mov
dec
adc
dec
jae
jo
imul
dec
jg
lret
push
xor
xor
xchg
imul
out
adc
lock
scas
adc
pop
pop
insb
pop
sub
and
scas
pop
sbb
sub
loope
out
and
rcll
or
add
push
in
addr16
repz
xchg
dec
pop
scas
lods
xor
inc
scas
inc
neg
fisttpll
bound
aam
pusha
cmpsb
pop
lcall
movsl
pop
int
les
js
je
xor
data16
or
jmp
cltd
sub
xor
fdiv
mov
xor
shlb
repz
mov
sub
sbbl
incl
sahf
call
adc
dec
ljmp
jmp
sub
movsb
fxch
int
jnp
das
inc
mov
mov
fstpt
cmp
in
mov
rolb
in
pop
ds
xorb
mov
subb
sub
sub
xor
jae
fadd
inc
and
shl
ljmp
cmp
mov
and
lea
xorb
dec
xor
adc
inc
loop
cltd
pop
xchg
int
test
lods
stos
mov
cmp
neg
push
filds
pop
add
shrl
cmp
in
insl
mov
repnz
pop
xchg
jnp
cmpsb
stos
pop
cmpsb
xchg
pusha
add
jge
and
cmpsl
push
aam
mov
and
ret
in
mov
mov
pusha
daa
stos
lret
aaa
pop
mulb
mov
cmp
mov
test
mov
scas
jne
insb
and
hlt
inc
decb
pop
jp
jge
orb
dec
repnz
mov
inc
mov
cld
insb
and
push
fs
adc
fwait
idivl
xor
pusha
and
and
icebp
aam
add
jecxz
sbb
decl
and
push
adc
cmpsb
jle
nop
js
add
inc
subb
pop
inc
cmp
xorb
push
and
cmp
out
pop
push
jle
cs
mov
xlat
out
je
inc
push
sbb
mov
std
and
pop
push
sub
add
fsubs
aad
ljmp
fildll
pop
data16
cmc
into
les
mov
fsubr
loop
xor
in
cmpsl
pop
std
bound
loopne
cmp
clc
adc
mov
jp
lret
xchg
inc
sub
in
sbb
inc
fs
in
aam
insl
ds
sub
pop
fs
sub
add
xchg
jl
je
addr16
push
push
cltd
hlt
xchg
aas
ss
adc
and
test
mov
mov
push
mov
cmp
mov
cmpsl
pushf
imul
xchg
negl
clc
add
push
adc
int
sub
sub
scas
push
cmp
out
mov
or
xchg
adc
pop
or
sar
mov
and
jae
fiaddl
outsb
mov
sub
inc
arpl
outsl
dec
inc
xchg
bound
cmp
xor
jmp
push
enter
push
jg
mov
xor
xor
push
cs
adc
pop
scas
adc
pop
push
ljmp
repz
mov
sbb
cs
jae
pop
jae
lock
fwait
popf
adc
vmovaps
add
jae
or
lds
push
sbb
xor
and
sbb
out
pop
or
and
insl
mov
int
mov
call
mov
xlat
add
sbb
sarl
or
stc
pushf
and
lea
cmp
shr
xchg
dec
add
nop
lods
mov
and
imul
dec
out
dec
jmp
mov
bound
arpl
sub
daa
loopne
cmp
add
lods
repz
cmpsb
xorb
push
add
dec
leave
xlat
fimuls
mov
xchg
mov
pop
dec
mov
and
call
das
add
shll
je
sbb
mov
pop
push
je
jnp
jb
dec
sbb
je
xor
mov
in
or
cmpsb
jg
lock
push
jmp
sub
hlt
lea
xchg
roll
outsb
fsts
sbb
jg,pn
push
lock
mov
sbb
inc
xchg
pushf
mov
or
lods
sbb
out
out
xchg
rorb
in
push
test
pop
mov
add
add
sahf
mov
add
sbb
dec
cmp
fs
dec
mov
in
cmpsl
sub
xchg
int3
inc
push
pop
cltd
inc
imul
in
sub
jno
mov
push
and
xor
pop
sbb
je
icebp
sbb
mov
hlt
outsb
in
or
arpl
cmp
mov
fidivrs
imul
data16
scas
lcall
xlat
push
add
push
ds
mov
inc
pop
dec
jns
sbb
addr16
jg
lahf
xchg
in
push
lcall
bound
outsb
decl
aas
sub
pop
into
push
push
and
in
in
loop
cs
je
mov
push
dec
ret
xchg
jnp
cmp
add
lods
shlb
lahf
insb
push
jno
out
rcrl
insb
adc
inc
roll
push
out
mov
add
aam
add
xchg
sub
pop
cmp
js
xchg
xchg
push
je
fmull
push
fs
jmp
jg
jbe
jmp
inc
fwait
xor
std
mov
dec
pop
jbe
or
inc
cmp
dec
or
pop
push
push
adc
das
cld
mov
repz
dec
mov
mov
andl
pop
jmp
inc
push
sbb
pop
adc
pop
push
enter
pushf
push
add
push
in
xor
mov
jae
shll
and
push
js
test
and
fwait
jl
fldcw
or
js
aad
mov
sub
push
inc
mov
sub
loope
stos
push
lcall
mov
jnp
sti
fiaddl
cli
out
mov
jns
arpl
in
fidivrl
in
out
mov
test
push
xchg
jl
sbb
mov
push
sub
sbb
pop
push
ficompl
pusha
pop
adc
fdivrl
loope
mov
lods
xchg
movsb
lret
pop
shll
sub
push
jmp
mov
ljmpw
ljmp
fwait
cmp
push
loop
sbb
aaa
xchg
mov
leave
inc
cmp
jae
xor
xchg
or
cmp
sbb
aam
loop
xorb
sbb
stos
adc
fistpl
jo
sbb
mov
subb
mov
mov
sbbl
cmp
repnz
scas
sub
add
push
mov
lea
movsb
mov
or
pop
sub
lahf
divl
outsb
mov
js
jns
mov
push
fsubs
push
add
shrl
cmp
inc
sbb
sbb
cmpsl
enter
lods
sti
out
pop
std
xor
movsb
inc
sahf
jle
mov
push
mov
and
sbb
mov
dec
inc
cmc
lds
and
fiaddl
sbbb
das
test
lea
mov
movsl
dec
mov
mov
int3
push
std
push
sbb
xlat
sub
jne
mov
mov
out
stos
and
pop
xor
ja
aas
or
test
ja
pop
jno
add
mov
push
pop
cmp
sbb
test
jae
stos
jno
jb
repz
jbe
xchg
ret
jne
out
mov
xchg
add
or
cs
jae
sbb
ljmp
je
fistl
add
pop
nop
lock
inc
and
enter
xor
push
jo
fadds
cmp
mov
adc
and
xlat
negl
dec
pusha
adc
hlt
pop
fadds
aad
pop
push
inc
or
mov
adc
addr16
negb
adcl
cld
aad
mov
adc
test
inc
xchg
js
xchg
lods
loopne
mov
in
jns
test
xor
or
jecxz
iret
clc
push
mov
jno
ljmp
mov
xchg
cmp
aas
imul
fnstsw
dec
inc
jne
shlb
lock
call
popf
mov
aaa
shll
mov
into
ljmp
imul
sbb
insl
fisubrs
cwtl
jl
cmp
sbb
bound
ss
vpmaddwd
jno
stos
cwtl
add
jb
dec
sbb
lret
jl
rorb
sub
xchg
inc
jmp
aam
or
test
insb
push
cmp
cmpsl
lcall
xchg
pop
dec
sub
mov
les
sub
sub
test
push
out
jmp
adc
js
or
push
pushf
or
jb
dec
cmpsb
mov
add
ds
aas
repnz
xlat
imul
xchg
lds
or
pop
std
pop
pop
loop
repz
inc
insb
stos
cmc
fldenv
stos
ja
mov
or
mov
mov
adc
fcmove
inc
dec
xchg
pop
rcl
sub
sbb
xchg
push
jb
in
lret
sbb
pop
dec
jbe
xor
fchs
arpl
insl
dec
xchg
dec
push
jb
cmc
add
clc
mov
mov
mov
pop
popa
add
into
push
mov
pop
mov
add
push
aas
imul
faddl
cmpsb
push
idivb
repz
pop
cmp
jge
subb
je
push
inc
fdivr
call
daa
cmp
and
and
rcrl
cltd
inc
lahf
scas
popa
leave
dec
lods
jecxz
sub
cmp
push
bound
pop
fisttps
mov
loope
or
test
inc
mov
cld
cmp
aas
aad
stc
add
mov
inc
xchg
push
mov
test
adc
divl
inc
or
xchg
mov
fs
xchg
adc
pusha
cmp
mov
popa
mov
jg
push
xor
in
insl
loope
dec
data16
cmpsl
sub
mov
push
mov
xlat
push
stos
xor
pusha
and
pop
fists
jle
inc
outsl
filds
cmp
sub
mov
call
lods
cwtl
and
cmp
pop
xchg
push
dec
lea
fninit
sub
cmp
mov
jbe
cmc
pop
dec
nop
test
jl
jbe
dec
cli
fistps
mov
fbstp
jge
pop
sbb
xchg
ljmp
rep
leave
mov
ljmp
jno
add
and
stc
popf
inc
dec
lods
negl
insl
xchg
mov
or
decb
fcoms
addb
shrb
xchg
arpl
sbb
push
push
mov
outsl
sbb
cmpsb
inc
in
push
mov
or
push
mov
ficoml
pop
adc
and
add
sbb
and
mulb
jae
xchg
fdivl
or
pop
xlat
mov
sarl
dec
push
add
or
sub
cmpsl
inc
sbb
mov
dec
push
lret
mov
xor
jbe
fnstcw
clc
or
sbbb
hlt
aaa
enter
cmp
dec
lret
out
or
in
adc
pop
cmp
inc
cmpl
push
cmp
sbb
aas
cmp
xchg
aam
adc
popa
cmp
pop
mov
sbb
jb
int3
mov
lahf
push
or
and
testl
lahf
adc
out
in
and
in
jb
adc
push
inc
sbb
pop
add
lcall
popl
cltd
iret
cmpsl
xchg
xchg
sbb
pop
and
shlb
mov
stos
data16
push
cli
leave
fisubl
push
xor
rcl
fadds
les
xchg
cmpsb
jle
stos
pop
inc
sbb
aad
jecxz
aas
push
ret
imul
cli
adc
loope
jo
pop
jmp
pop
push
xor
add
cwtl
pop
jns
rcrl
outsl
ljmp
sub
test
mov
out
inc
lds
faddl
jge
push
mov
pop
popa
in
popa
push
xor
mov
dec
mov
mov
pop
imull
mov
push
adc
pushf
push
mov
xor
xor
sbb
lret
lahf
adc
or
cli
std
push
pop
mov
movsb
push
xchg
sub
xchg
jns
mov
cltd
add
jb
int
xchg
repnz
mov
and
lret
cwtl
leave
aaa
mov
call
ss
push
cmp
cmp
cmpl
pop
xchg
data16
jmp
addr16
and
mov
sub
jecxz
stc
jno
iret
hlt
jmp
int
or
adcb
lds
sbbl
in
sub
jae
sub
mov
test
sbb
mov
and
leave
mov
cmp
lea
push
pop
or
jo
cmc
xchg
pusha
nop
jae
das
rolb
xchg
dec
jg
xor
push
mov
iret
lods
pushf
push
cmp
and
test
mov
xlat
jne
dec
jnp
xor
js
or
mov
push
mov
inc
lods
or
mov
stc
sbb
shll
shrb
and
test
cmpb
lock
in
aad
bound
repnz
push
rclb
fwait
rcll
push
std
jns
xor
adc
data16
rcrl
shl
mov
add
and
adc
and
xchg
or
fbstp
inc
shrl
jmp
jae
inc
mov
jmp
cltd
dec
test
mov
loop
lret
bts
dec
xchg
mov
les
adc
jmp
push
stos
and
out
sub
xor
pop
aam
jmp
jnp
js
inc
sahf
mov
pop
shrb
loop
xchg
shl
inc
stos
and
stc
sbb
xchg
push
pop
inc
pusha
stc
insb
pop
pusha
mov
popa
mov
int3
or
out
mov
sub
push
inc
filds
dec
xchg
jmp
mov
inc
sub
insb
fnstenv
add
fs
adc
xor
lret
cli
jmp
aad
sub
add
fdivs
fsubrl
push
jp
popf
inc
push
sub
jne
xchg
lret
mov
pop
loop
adcb
push
cmp
sub
jmp
das
mov
xchg
leave
and
xor
mov
orb
jecxz
push
call
addr16
cmpsl
fs
pushf
or
bnd
ss
jne
adc
jne
shlb
rcll
enter
mov
xor
dec
repnz
fwait
xor
pop
push
mov
stos
out
stc
andl
cmp
or
mov
stc
add
stos
xor
scas
fcmovnb
mov
pusha
xchg
mov
sub
inc
lret
movsl
fwait
adc
or
dec
cld
in
lahf
and
popa
je
inc
adc
cmp
jmp
xchg
lods
pop
int3
sbb
popf
pop
addl
fldt
pop
and
lds
mov
movsb
lods
inc
sbb
xchg
push
jp
cld
cmp
push
mov
jb
stc
pop
jmp
in
dec
or
sub
sub
daa
fisubl
cltd
pusha
mov
popa
mov
jb
stc
pop
xlat
jp
mov
leave
cmp
pop
mov
add
imul
add
rcrl
stos
mov
xor
pusha
out
testb
mov
aas
into
pushf
iret
in
push
xchg
mov
push
mov
jo
dec
xor
test
lret
add
ret
fmulp
std
cli
es
std
xchg
pop
inc
mov
sub
mov
mov
jns
test
mov
aas
mov
push
test
int
pop
fwait
jnp
int
sbb
mov
fcoms
mov
adc
sbb
pop
xor
xor
dec
pushl
sub
adc
daa
repz
je
incb
mov
inc
inc
adc
das
ja
rclb
fldenv
movsl
push
out
rcrb
mov
cld
push
push
imul
ljmp
push
sbb
idivl
negl
stos
xor
xor
out
push
mov
imull
mov
or
xchg
push
cmc
jmp
xor
push
cltd
mov
sub
push
xlat
pop
xlat
mov
add
sub
or
push
pushf
outsb
decl
loopne
xchg
cmp
push
movsb
add
pop
jnp
jns
pop
mov
xchg
movsl
mov
daa
test
orl
imul
mov
push
add
loope
pusha
je
and
in
mov
jne
fsubrl
imul
adc
dec
sarb
pop
dec
cmc
ss
lret
leave
rcll
jge
int3
jb
push
leave
lcall
cs
pop
or
pusha
ss
lods
jle
jle
pusha
sub
pushf
add
je
and
sbb
pop
dec
push
jle
add
cmp
das
sarb
in
jp
adc
aaa
mov
mov
push
les
push
idivb
je
call
xchg
push
cmp
mov
ficompl
xor
push
pusha
iret
xchg
jae
lea
orl
inc
pop
pop
inc
clc
pop
xchg
mov
enter
ret
inc
jge
push
mov
mov
out
dec
lods
daa
push
ret
mov
xlat
cwtl
mov
movsl
xor
daa
stos
sbb
mov
gs
sbb
addr16
out
add
cmp
add
lods
daa
xchg
dec
out
mov
inc
xor
sbb
sub
jb
shlb
dec
cs
int
lods
gs
push
dec
out
lods
in
mov
movb
cmp
adc
pushl
adc
data16
mov
xchg
jl
out
pop
mov
lret
push
lea
or
fisttps
lret
pusha
imul
movsb
push
insl
cmpsb
or
sbb
push
and
dec
xchg
pop
sub
or
cs
xor
loop
mov
je
and
imul
sbb
shll
pushf
add
and
popa
or
loop
push
jbe
inc
fucomp
dec
lods
outsl
imull
test
mov
sbb
push
jo
fcomps
mov
xchg
test
movsb
repz
or
pushf
push
mov
arpl
decl
loope
and
fimull
cmpsl
hlt
xor
ss
add
enter
lahf
pop
jbe
sub
bound
sub
mov
cld
out
imul
cmp
push
inc
jns
mov
sub
sbb
lods
aad
dec
lahf
push
mov
dec
xor
pop
xlat
stos
loopne
dec
popa
js
in
cmp
dec
lds
fidivs
lret
cld
push
ds
stos
mov
push
jae
add
enter
push
sbb
adc
loopne
push
pop
push
lds
fldcw
xor
pop
jns
jg
pop
xor
adc
push
and
push
mov
mov
outsl
sub
ret
mov
cmpsb
enter
sbbl
jge
inc
loop
scas
outsb
xor
push
mov
jno
stos
inc
negb
je
and
mov
movsl
mov
lea
mov
xchg
ficoml
fcoms
mov
add
js
lods
mov
or
jg
popl
cmp
insb
stc
imul
adc
loop
xor
xor
sub
test
or
push
mov
fs
or
test
add
rcrb
or
iret
xor
xor
in
and
cmc
mov
out
scas
cld
add
xor
cmpsl
jo
movsb
inc
insl
sbb
pop
push
call
cmp
xchg
lcall
cmc
out
mov
mov
mov
jle
ljmp
outsl
mov
mov
js
pop
xor
lahf
mov
cli
cmp
mov
jns
ret
mov
mov
xchg
cltd
aad
xorps
cmp
into
mov
lea
fstpl
test
sub
adc
inc
and
fiadds
dec
in
cld
cmp
lahf
icebp
push
cwtl
sub
add
imulb
and
cwtl
nop
jmp
mov
lret
gs
popf
push
adc
jmp
je
movsl
add
pop
add
or
xchg
scas
cmpsl
int3
mov
sbb
enter
jl
jge
pusha
mov
jne
movsl
xor
pop
mov
aaa
mov
int3
pop
mov
pop
vminps
adc
inc
jbe
fwait
cmp
jecxz
in
mov
add
fildl
push
inc
sub
add
movsb
jo
test
and
push
jnp
pushf
loop
mov
leave
jbe
mov
mov
popa
stc
add
lods
cmp
loop
fdivs
insb
stc
inc
jb
inc
jle
push
jge
cmp
movsl
leave
shrb
loop
aad
cltd
cmpsb
rolb
and
jle
and
ficompl
in
jmp
jne
xlat
mulb
sahf
cmpsb
xchg
jle
xchg
loop
and
scas
dec
cmp
jg
mov
xchg
jge
scas
in
vmaxps
popf
int3
pop
movsb
cmpsb
xchg
aam
pop
mov
xchg
push
outsl
cmpsb
fcoml
gs
out
data16
mov
jae
mov
xor
mov
mov
out
cld
push
rcrb
push
icebp
in
xchg
icebp
test
jne
popa
jae
cmp
jle
popf
mov
sub
lds
or
pop
out
dec
cmp
add
xchg
jnp
sub
pushf
pushf
dec
jbe
addr16
fidivrs
in
xchg
mov
sub
sub
sbb
outsl
inc
loop
test
imul
lds
test
test
jae
aam
popf
push
cmp
xchg
mov
fstl
push
sahf
stos
subb
dec
fs
in
pusha
push
dec
repnz
test
mov
lods
sub
mov
and
popa
in
test
push
sar
xchg
aad
sub
lret
or
inc
mov
decl
shlb
pop
adc
fsub
mov
repnz
push
out
clc
mov
mov
xor
dec
loope
mov
std
cs
fildl
fwait
aas
mov
fiaddl
sti
in
and
add
rcrl
iret
pusha
scas
fcompl
mov
lea
sbb
sub
rorb
push
adc
lds
cs
push
inc
add
mov
out
scas
jge
sub
mov
lods
mov
enter
mov
mov
push
sbb
inc
push
clc
mov
mov
mov
lods
add
lods
loop
xchg
cmpsl
push
mov
es
movsb
outsl
push
and
cmp
inc
mov
jbe
sbb
shlb
js
adc
fistps
jbe
jno
jb
in
fnstcw
pop
mov
pop
dec
add
inc
and
sub
add
data16
lock
sbb
cli
fistl
cmove
push
addb
sbb
xchg
out
push
repz
inc
lahf
jl
dec
mov
hlt
sbb
fiaddl
pop
or
xor
js
movb
add
sbb
xchg
mov
int
push
in
aas
xchg
jbe
aam
imul
xor
rorl
push
sub
lcall
lods
mov
cmp
ror
pop
pop
push
sbb
fisttps
and
add
int
fsubs
pushf
sub
xor
cmc
repz
leave
pop
or
fiaddl
lods
or
loopne
sbb
mov
xor
xchg
lods
jne
sbb
in
iret
xchg
daa
repnz
leave
add
pop
jg
and
cli
popf
mov
in
sub
andb
inc
insb
and
jno
scas
cmp
push
dec
sti
js
mov
mov
sub
jmp
dec
inc
sar
jae
fsubs
push
jbe
aam
jg
repz
sub
sub
fwait
pop
and
dec
ret
fdivs
cmpb
shrl
add
lret
inc
lcall
mov
cmc
adc
shll
cmp
scas
sbbl
int3
xorb
test
es
outsb
mov
lret
xor
mull
lds
adc
dec
sti
stos
mov
cmp
xlat
and
out
cmp
sub
cli
xchg
into
add
inc
push
push
scas
aam
pop
mov
cld
cmp
sti
push
xchg
fdivrp
cld
dec
sub
pop
clc
inc
xchg
test
cmp
stos
pushf
dec
xchg
mov
mov
icebp
mulb
sub
rorl
mov
out
enter
dec
shl
push
sub
mov
imul
mov
into
jno
scas
pop
leave
mov
inc
lahf
push
mov
dec
cmp
imul
aad
sahf
jb
xchg
jp
cmp
sbb
dec
hlt
daa
push
jo
push
mov
lods
fst
stc
cmpsb
push
add
lea
pop
inc
jnp
ss
lcall
scas
cmc
loope
flds
movsl
cmp
iret
aam
mov
iret
pusha
sub
fsub
movsb
hlt
dec
dec
ljmp
sarb
mov
and
aad
adc
dec
xchg
adc
mov
leave
fidivs
fwait
pop
xchg
mov
inc
sti
in
xor
push
testl
push
xor
in
lret
mov
sahf
mov
push
and
and
adc
repz
inc
mov
cwtl
cwtl
jb
mov
lcall
pop
rorl
sbb
pop
jnp
adc
mov
loop
aaa
stc
cmp
xlat
call
dec
push
in
xchg
addr16
mov
popf
xor
stc
pop
aas
and
loope
int
dec
in
js
or
mov
cmc
aam
cwtl
push
push
dec
gs
imul
arpl
mov
pop
push
repnz
into
nop
fistpl
or
je
adc
fs
test
in
pop
pusha
sub
lods
adc
pop
push
ficomps
and
ret
push
cmp
call
and
add
jge
call
shlb
cwtl
pop
adc
lret
into
mov
popa
ficoml
in
dec
cmp
fcoml
test
and
push
in
push
mov
bound
orl
or
xchg
mov
adc
cmovnp
std
or
mov
mov
cltd
shr
add
inc
std
shr
stc
dec
outsb
xor
sbb
shrb
jne
jge
out
cmp
push
test
mov
sub
jmp
mov
mov
mov
mov
xor
lret
push
or
imul
xor
js
xlat
out
nop
arpl
cmpsl
mov
add
das
jnp
ret
jmp
aaa
les
jle
xchg
dec
leave
adc
nop
scas
xor
adc
jp
jecxz
add
xchg
sub
and
jnp
popa
xor
xor
cmp
jb
push
jns
and
xor
jo
dec
xchg
sbb
add
repnz
cmpsb
pop
cmp
add
pop
add
fcoml
mov
mov
push
mov
sbb
test
movsb
push
pop
xchg
mov
xchg
arpl
xor
adc
and
inc
cmp
js
dec
out
lret
inc
push
xchg
dec
sbb
dec
lods
jp
push
out
mov
bound
and
jbe
sbb
dec
in
mov
pop
xchg
mov
mov
cwtl
xlat
sub
pop
das
xchg
jge
mov
fisttpll
jge
push
push
test
xchg
inc
inc
inc
ret
and
push
ret
or
cli
int3
sbb
xchg
or
mov
imul
inc
pop
aad
xchg
mov
cld
jo
cmpl
mov
scas
xchg
lds
and
jg
clc
faddl
loop
inc
ss
inc
shr
sbb
clc
mov
mov
mov
outsb
sub
hlt
insl
jb
cmpsb
push
mov
mov
movsb
fdivrl
mov
and
bound
push
push
push
adc
loopne
cltd
sub
repz
pusha
push
sti
mov
mov
jge
loopne
ds
cmc
jne
jecxz
sub
xchg
mov
out
xchg
les
and
sub
mov
xchg
inc
dec
or
sbb
jbe
repz
sub
mov
loope
aaa
rorl
filds
add
xor
in
pop
iret
cwtl
push
adc
and
xor
add
push
roll
pop
mov
popf
mov
inc
hlt
lret
das
jge
add
scas
loope
std
add
and
pop
jge
pop
mov
sub
inc
movl
xlat
and
or
movsb
movsl
insl
mov
scas
xor
shl
movsl
jno
jnp
pop
hlt
mov
jp
aaa
std
sbb
pop
cmpsl
icebp
push
mov
iret
test
ret
adc
add
xchg
mov
iret
fwait
pop
jl
pop
bound
dec
leave
cld
and
pushf
pusha
movsb
fwait
jnp
sahf
je
sbb
push
pop
lret
subb
dec
aam
and
xchg
insl
outsb
add
jne
push
or
sub
testb
cli
push
sub
push
mov
mov
mov
or
es
cmp
ds
repz
iret
lock
xor
in
rcll
pop
test
pusha
sbb
cmc
xor
pop
push
sbb
sar
or
jns
fdivrl
jo
push
dec
xchg
enter
mov
inc
in
jbe
sti
test
ljmp
leave
dec
sub
or
stos
rcr
insb
push
clc
jns
inc
dec
add
dec
dec
popf
orb
arpl
rcll
mov
jge
inc
in
outsb
scas
cmp
mov
bound
pop
test
pop
push
negb
mov
xchg
adc
xchg
dec
nop
or
push
mov
or
icebp
rcrb
aaa
aam
lret
or
sub
mov
fsub
pop
xchg
or
sub
jne
dec
fiaddl
in
les
xor
sbb
mov
stos
and
inc
or
sub
cwtl
mov
leave
lods
ljmp
mov
inc
js
push
dec
push
rolb
addr16
dec
sti
mov
mov
icebp
and
std
faddl
les
out
fldcw
jecxz
popl
mov
stc
pusha
arpl
adc
sub
push
dec
cmp
jge
into
add
cmp
inc
jns
and
outsb
leave
popa
ljmp
outsb
loop
stos
dec
push
or
jp
mull
mov
ret
mov
inc
cmpsb
mov
ds
stos
div
lea
xchg
jmp
cmpsl
pop
xchg
into
inc
in
negl
ja
shlb
mov
test
jae
out
loope
mov
mov
inc
adc
xchg
cmp
lahf
pop
out
push
sti
cltd
lsl
fbld
daa
mov
loopne
lret
push
shll
adc
add
adc
push
mov
mov
pushf
cmova
xchg
in
stos
inc
dec
dec
sub
pop
ds
or
ljmp
lret
mov
xchg
es
gs
in
cmp
dec
push
mov
push
cmp
adc
or
mov
dec
sti
and
jg
push
repz
fadd
outsb
insl
sbb
sbb
mov
test
sub
call
fcoms
das
scas
test
ds
lahf
arpl
mov
jbe
pop
lret
loopne
dec
mov
test
push
scas
ret
mov
mov
test
in
movsl
pop
imul
push
sub
mov
fldenv
xor
and
xchg
popf
scas
repz
lcall
jae
add
loopne
fwait
nop
mov
iret
mov
cwtl
push
mov
jae
push
mov
push
add
xchg
mov
into
in
imul
outsl
in
call
jno
mov
scas
cmp
fistl
test
inc
pop
lods
daa
xchg
adc
fldt
inc
gs
xor
inc
pop
cmp
fwait
adc
lods
adc
mov
je
inc
fisttps
sub
mov
push
push
stos
imul
js
mov
dec
leave
frstor
clc
out
dec
testb
outsb
jl
fbstp
popf
mov
cmp
popf
rcrl
push
jmp
mov
mov
data16
insl
sub
insl
imul
pop
outsb
mov
cmp
sub
imul
sbb
xchg
or
inc
jp
out
gs
daa
and
mov
adc
cmp
jno
mov
jle
out
jmp
aam
jae
das
les
scas
xor
enter
xor
lahf
iret
push
jo
adc
or
dec
add
cmpsl
or
xor
mov
les
adc
aam
sub
cmc
mov
ds
sbb
cmpsb
pushl
xchg
dec
xor
push
push
cwtl
icebp
insb
out
cmp
sbb
jge
fcmove
jno
cmp
clc
jmp
or
and
aam
jecxz
mov
hlt
mov
inc
or
loop
lods
lods
popa
cmpl
mov
jne
andl
scas
mov
push
into
cmp
cmp
aaa
out
jmp
jae
mov
jmp
xor
neg
cmc
mov
adc
mov
rorb
mov
jno
xchg
leave
lret
fldl
stos
dec
rorb
addr16
cltd
jbe
pop
mov
std
int3
sti
dec
imul
sbb
mov
sub
push
or
fnstcw
shll
stos
decb
cmpsl
or
in
push
inc
mov
mov
and
int3
loopne
xor
jmp
adc
add
mov
cmp
les
shl
jmp
sbb
jp
daa
out
mov
or
push
addr16
into
or
and
fiadds
and
sub
lods
jo
mov
or
cmpsb
fucomip
mov
push
cmpsl
mov
push
aam
popa
mov
mov
jne
cltd
icebp
lahf
outsl
arpl
and
sub
inc
cmp
out
push
jp
cmpsl
imul
shr
cmpl
add
in
test
js
int
addl
pop
add
xchg
test
add
mov
sbb
push
addr16
fs
push
js
jns
mov
cli
pop
rcrl
jno
mov
iret
pop
mov
loop
mulb
fs
xor
mull
cld
jbe
mov
sub
xchg
and
add
pusha
sub
ficomps
mov
cmp
add
fisttpl
mov
lds
adc
xchg
arpl
insl
push
out
sub
fsub
loop
cmp
aaa
dec
push
lods
cmp
push
inc
or
enter
pop
push
xor
xor
aaa
mov
xor
out
jg
dec
pcmpeqd
xchg
xchg
rclb
pop
sub
push
movsb
cmpb
ds
add
idivl
jmp
sbb
out
stc
push
push
mov
push
scas
inc
shrb
and
shll
mov
sbb
cmp
lahf
aas
xchg
addr16
fsubs
shlb
movsl
jae
rdmsr
adc
lea
push
add
sub
das
xor
mov
push
add
jecxz,pn
test
dec
das
sbb
aam
cmp
loop
jae
xchg
subb
pop
loope
sbb
adc
push
cmp
in
mov
scas
sbb
xchg
lods
mov
jl
pusha
leave
pop
xchg
cld
in
dec
adc
data16
es
hlt
ret
pop
inc
inc
xlat
xchg
add
inc
sahf
sub
int
sub
sar
lret
xor
imul
cmp
push
sub
sub
jbe
and
test
jmp
jbe
int
xchg
mov
jge
fcmovne
sub
je
lcall
xor
add
in
js
ret
jbe
jp
shrl
add
out
inc
or
sarl
jo
push
scas
pop
dec
cmp
subl
imul
cmp
das
cmpb
call
push
scas
jmp
movsl
jnp
lds
call
lcall
ret
adc
xor
inc
mov
mov
lcall
aas
xchg
cmpsl
push
xlat
add
std
jbe
test
mov
jmp
dec
pop
add
add
push
cmp
into
adc
pop
dec
ljmp
data16
mov
push
mov
rcll
fs
mov
inc
or
movsb
pop
cmp
and
xor
or
jl
sbbl
adc
decb
iret
xor
mov
in
cmpsb
add
dec
movsl
int
insb
sub
jnp
sbb
jo
imul
js
mov
aad
clc
add
popf
ja
fisubrl
insl
xchg
push
sbb
sbb
ds
je
lods
mov
ret
in
pushf
rcrb
xor
addr16
fwait
and
mov
sti
adc
in
mov
pop
push
imul
je
int3
test
std
daa
inc
and
and
cwtl
outsl
in
mov
je
mov
inc
mov
mov
add
lea
push
jae
add
jle
push
loop
jg,pn
sbb
fs
loop
aaa
and
stos
jmp
push
shll
or
das
xor
or
jno
xor
adc
push
mov
mov
cmpb
xchg
mov
push
jg
or
movsl
jmp
shlb
inc
dec
mov
xor
fsubrl
cld
mov
ret
adc
pop
sbb
pusha
fistps
mul
xchg
xchg
test
xor
cmp
jle
dec
xor
mov
mov
pop
pop
das
or
pop
iret
scas
shlb
loopne
pop
ljmp
fwait
lods
test
cmpsb
cmp
ss
int3
sbb
lea
mov
scas
fcmovbe
or
xchg
and
enter
ds
sbb
mov
je
enter
into
cld
cmp
bound
loop
cwtl
xchg
dec
and
stc
repnz
mov
and
mov
and
dec
repnz
decb
lahf
imull
sti
mov
clc
sbb
lods
call
inc
pop
leave
dec
outsb
pop
in
pop
mov
jle
add
repnz
inc
rclb
adc
pop
cli
aaa
lods
xchg
push
sbb
xlat
pop
daa
aam
xor
xchg
movsb
sbbb
aaa
pop
test
cmp
xor
mov
movsb
mov
ja
and
stc
mov
lahf
sub
aaa
je
in
call
dec
cmpsb
adc
stc
stos
jecxz
mov
fidivrs
sbbl
pushf
pop
xor
in
jne
les
inc
addl
mov
test
lds
jmp
data16
xchg
arpl
std
xlat
dec
xchg
xchg
or
inc
in
and
leave
add
loopne
mov
rclb
cmc
dec
inc
lret
mov
and
dec
clc
in
push
add
out
sbb
inc
xlat
hlt
testl
repz
push
mov
cmpsb
sub
xchg
xor
lods
push
xor
jp
hlt
clc
and
sbb
dec
testl
cltd
es
push
mov
mov
andl
cmpsb
mov
cmpsb
pop
pop
pusha
jnp
mov
fsubrl
hlt
xor
movsl
dec
shll
jo
sub
push
fcoms
mov
mov
popf
in
imul
in
cmp
jp
cmp
add
ss
lock
push
jp
xchg
aam
pop
jmp
jbe
aaa
mov
mov
sub
cmp
sbb
push
fsubs
xor
in
sahf
add
or
imul
mov
inc
fdivrs
sub
sub
outsb
das
or
in
mov
cli
push
jp
loopne
gs
int3
pop
xchg
push
shrl
inc
call
mov
mov
imul
lcall
fsubrl
sub
sbb
xchg
iret
loopne
popa
lret
adc
repnz
jg
xchg
sub
dec
xor
xchg
test
popf
rcll
lea
xchg
loopne
int
test
inc
mov
movsl
lret
mov
fwait
enter
ret
in
and
dec
add
stos
adc
dec
push
xorl
outsb
loopne
mov
xchg
sub
es
inc
fs
or
fists
lret
popf
roll
dec
test
fisubrs
mov
imul
std
add
sbbl
mov
xor
cmp
or
imul
shrl
lds
dec
add
inc
out
ror
inc
dec
mov
mov
stos
and
insb
ret
jmp
sbb
adc
pop
stos
push
fsubrl
rorb
lcall
mov
into
pop
repnz
mov
sbb
lock
jecxz
sub
and
dec
cmpsl
mov
pushf
cmc
mov
dec
stos
mov
repz
mov
xlat
int
cmpl
popf
fisttpl
xchg
sbb
cmp
inc
sar
inc
lret
jb
scas
adc
fisubs
lods
jb
push
cmp
dec
divl
and
xor
mov
imul
push
and
ret
cmp
push
lds
and
jp
lcall
add
mov
pop
loopne
sbb
or
stos
bound
loop
test
lds
push
testb
add
jnp
xchg
jnp
pusha
outsb
mov
fnstenv
mov
xchg
fidivrl
sub
or
popf
clc
pop
and
lret
fimuls
xor
mov
lcall
out
fdivs
mov
xchg
out
dec
je
inc
scas
cmp
sub
ret
and
jne
sbb
push
lock
call
inc
mov
fsubs
iret
or
mov
add
pop
ret
sahf
stc
lods
or
sub
cmp
or
stc
lret
pop
cmp
in
mov
dec
arpl
out
jnp
mov
push
xor
test
push
mov
enter
cwtl
cli
jmp
sbbl
test
mov
mov
int
jmp
setl
xchg
int
pushf
jnp
push
sbb
push
lret
sbb
and
das
addl
xchg
in
mov
scas
ss
jp
xchg
mov
mov
pushf
jb
inc
push
sarl
jle
cmpsl
push
roll
adc
rorl
test
cmc
mov
stos
data16
std
insb
inc
jns
leave
xor
ljmp
cmpsl
mov
cmp
jg
pop
sbb
push
clc
adc
imul
xor
sti
mov
sbb
push
loopne
push
int
mov
ja
cld
jbe
sbb
sub
sbb
cmp
aaa
adc
inc
hlt
push
addr16
daa
mov
sti
ffree
shlb
xor
cmp
ficoml
mov
imul
stos
lea
dec
stos
push
mov
mul
es
ficomps
je
jnp
and
xor
or
cmp
cmp
in
inc
mov
repnz
es
mov
inc
mov
das
dec
jb
cmp
scas
jns
gs
lods
jecxz
cmp
jo
es
imul
mov
insb
xchg
addr16
jmp
jmp
loope
xor
inc
aad
xchg
loop
inc
mov
ret
dec
in
and
mov
inc
cmp
pop
jne
pop
les
pop
sbb
pop
and
cmp
jg
add
gs
dec
pushf
shlb
jae
popf
push
xchg
jnp,pn
int3
pop
and
bound
pop
pop
mov
fwait
mov
divb
movb
lods
push
decb
clc
xor
adc
stc
mov
test
mov
mov
xchg
je
push
or
out
loopne
mov
and
nop
pop
js
lock
sbb
jns
add
imul
std
xchg
inc
mov
sub
adc
dec
mov
aad
es
es
add
mov
mov
pop
imull
jl
gs
and
xchg
xor
sahf
sbb
pop
xchg
xor
popa
mov
lods
js
mov
movsl
push
mov
ja
mov
xchg
mov
sbb
add
adc
dec
and
fnstsw
mov
in
subl
scas
dec
pop
push
or
mov
arpl
cmpsl
mov
xchg
rcll
sbb
rcl
mov
and
leave
mov
mov
cmp
add
incb
iret
xchg
mov
sub
xor
cld
repz
insb
push
mov
xor
pop
jb
xchg
cs
lods
sbb
push
aam
popf
xor
in
sbb
imul
dec
and
or
outsb
pop
sbb
mov
pusha
loop
mov
fsubrs
mov
cmp
mov
inc
dec
pushf
leave
jg
push
sbb
mov
sti
mov
fxch
aam
test
pop
mov
add
out
in
mov
and
movsl
je
mov
sub
adc
int3
cmp
sahf
adc
xchg
push
ffreep
cld
add
lods
sbb
int3
jne
pop
aaa
ror
jo
add
or
sbb
jbe
addr16
idivb
scas
movsl
xorl
or
out
ljmp
outsb
jbe
mov
mov
lcall
shl
lret
pop
cmp
icebp
ffreep
loopne
fisttpll
jle,pn
cltd
or
add
pop
cmp
fwait
stc
jp
mov
ret
aad
sub
dec
loope
orb
jl
iret
cld
add
enter
inc
add
pop
xor
in
lods
mov
test
or
or
ret
rcl
xor
scas
dec
loopne
sub
fwait
ss
les
mov
mov
xor
jae
incl
ja
inc
cld
add
xchg
pop
sbb
push
das
adc
sbb
mov
aam
das
jle
fcomp
mov
insl
xchg
stos
iret
lahf
aas
and
sbb
sub
divb
xorb
movsl
fcoml
xchg
jae
sti
fmulp
daa
pop
mov
ljmp
jnp
cmp
out
imul
jmp
adc
pop
push
adc
adc
cmp
jl
xor
xchg
jl
std
push
cli
sub
mov
cltd
rcrl
fcompl
lahf
cmp
dec
jge
lds
in
ljmp
leave
mov
add
out
scas
mov
push
inc
xor
call
ffreep
fwait
cwtl
aad
ljmp
mov
and
loope
jne
nop
mull
mov
lret
sbb
fistpll
test
in
mov
test
fistpll
das
movsb
mov
jno
shl
xor
fmul
add
mov
or
pop
aad
out
clc
popf
xchg
or
out
push
xchg
orl
out
mov
nop
movsl
and
cmpl
mov
fisubrs
daa
fisubl
xchg
mov
fsts
call
mov
lcallw
lret
lret
rcll
cmpsl
scas
inc
fstps
mov
imul
dec
ja
inc
jp
push
ljmp
shlb
fbstp
sub
fcmovne
in
shrb
addr16
lea
lahf
inc
fiadds
in
and
xor
add
lods
xor
xchg
push
or
in
xor
imul
dec
lods
lret
test
mov
adc
out
jg
imul
jbe
rcl
jle
pop
test
stos
stc
jne
xor
pop
jl
ja
lahf
arpl
cmp
fwait
xor
out
in
xor
adc
cmp
jnp
and
ljmp
inc
stc
and
shlb
int3
jno
sub
rorb
fistps
rcll
adc
adc
rcrl
arpl
xchg
push
sub
lods
mov
xor
inc
mov
stos
pop
xor
repnz
adc
clc
pop
test
xchg
fsubrs
or
flds
and
push
lea
fsubrs
dec
or
call
repnz
lods
lret
xlat
mov
adc
pushf
inc
fisubrs
jp
or
clc
mov
xlat
pop
and
or
sbb
fidivs
in
jmp
mov
int3
lock
lea
lret
fwait
lock
mov
inc
inc
out
fisubs
jecxz
mov
repnz
cmp
dec
lcall
xor
xor
dec
repz
and
dec
aam
sub
fdivrp
xchg
jb
pop
adc
enter
pop
fidivl
enter
jae
aaa
mov
jecxz
jb
lock
mul
jmp
and
into
inc
or
out
xchg
add
mov
mov
scas
push
jo
cs
and
mov
add
xchg
inc
pslld
or
fs
and
mov
dec
fcomi
adc
lcall
bound
dec
or
mov
bound
cmp
sub
leave
sub
pop
idivb
fistpll
xchg
xor
jne
repz
repnz
in
mov
shl
mov
jg
mov
xlat
cmc
or
push
sbb
sbb
or
lods
imul
push
xchg
push
in
imul
clc
or
cmpsl
xlat
dec
gs
sti
movsb
lcall
test
test
incl
mov
push
cld
xor
push
pop
jmp
test
push
pop
pop
inc
inc
mov
mov
and
movl
and
xor
sqrtps
iret
ret
sbb
ret
sbb
int
xchg
or
or
negb
sub
adc
testl
sbb
pop
fldl
xchg
push
xor
add
inc
cmpl
sbb
mov
call
mov
jg
xor
xor
daa
into
jl
cmc
lcall
push
inc
xchg
sbb
sbb
lock
ret
push
dec
aaa
aas
add
dec
clc
add
dec
rol
out
sub
adc
imul
mov
or
mov
dec
inc
in
mov
add
xlat
sub
push
repnz
sbb
dec
int
out
out
jae
and
xor
jge
jns
lret
jecxz
pop
jnp
and
pusha
mov
ds
out
inc
cmp
int3
scas
xchg
mov
xchg
adc
lcall
and
fbld
jl
push
mov
cmc
icebp
xor
mov
shl
mov
add
mull
add
jns
cmc
bound
xchg
adc
mov
aas
andl
xchg
inc
test
pop
mov
in
adcb
sarl
mov
add
jge
aad
pop
out
ret
sub
jl
and
adc
jb
xlat
gs
pop
pop
movsb
xchg
xchg
dec
stc
sub
cmp
enter
fbld
push
push
mov
add
or
mov
packuswb
lahf
mov
stc
and
stos
and
leave
pop
pop
add
pop
mov
xchg
hlt
into
dec
out
mov
movsb
fildl
cmp
ljmp
call
fiaddl
adc
cmp
jge
imul
notl
imul
int3
or
and
lea
pop
pop
mov
pop
lret
mov
inc
mov
pop
mov
push
jg
push
nop
fsub
call
xor
ret
js
inc
pushf
aas
das
dec
jle
cli
lds
dec
idivb
lock
bound
test
adc
imul
ror
andl
or
mov
jmp
push
jecxz
push
in
sbb
popf
xor
and
or
pusha
inc
sbbl
mov
leave
mov
adc
lock
push
sub
add
and
sub
xchg
push
movsb
jno
lret
cmp
push
rcrb
or
stos
mov
or
or
fisttps
mov
sub
into
test
fsubrp
mov
lret
pop
rcll
adc
dec
adc
in
pushf
sub
je
xlat
fcomps
adc
rcrb
pop
jl
mov
cltd
mov
rcrb
cmp
push
int
inc
or
lret
in
imul
sbb
mov
sub
out
outsl
xchg
push
les
stos
mov
mov
jb
pusha
push
adc
scas
out
lds
push
setno
xor
or
and
add
mov
scas
push
xchg
or
inc
dec
hlt
enter
pop
stos
pop
out
jmp
cmpsb
jg
pop
lods
enter
test
popa
dec
inc
mov
adc
adc
push
dec
test
stos
xor
add
cmpsl
mov
add
inc
xchg
int3
sbb
jns
xor
and
hlt
push
outsl
fidivrl
insb
mov
mov
popf
xor
mov
ljmp
movsl
or
fldcw
sub
sahf
in
cmpsb
dec
cmp
add
subb
iret
cmp
mov
xor
cmp
orl
add
dec
and
or
popa
fstl
xor
xlat
insb
addb
push
inc
fisubs
adcl
adc
xor
xor
movsb
add
or
stos
mov
mov
adc
faddl
stos
imul
xchg
ss
in
cmp
xchg
mov
jae
push
fucomp
data16
lcall
ljmp
mov
aaa
mov
xchg
in
ljmp
pop
mov
lods
das
loop
sar
testb
mov
decb
mov
pop
jbe
mov
in
ss
xchg
das
aam
insb
and
mov
mov
roll
mov
xor
fwait
add
popf
stos
pop
arpl
ljmp
fistps
ljmp
in
and
lods
add
pop
push
lods
leave
stos
dec
jns
fucom
in
dec
jl
push
dec
outsb
cmpb
lock
cmp
lods
add
mov
dec
aam
cmp
mov
in
or
popl
add
mov
pop
shll
xchg
outsl
loop
testl
cmp
icebp
outsb
push
mov
sub
aas
cmpsb
add
cmp
cs
sbb
inc
aad
cmp
jmp
push
pop
sub
push
aaa
in
or
push
sbb
sub
aas
pop
push
sub
test
aas
pusha
int
mov
jbe
and
aas
xchg
lret
cmpl
imul
inc
test
lcall
dec
testb
jo
mov
imul
in
push
push
movsl
push
mull
cmp
xchg
lcall
shll
es
ret
xchg
arpl
cwtl
dec
test
or
iret
pusha
out
xor
xor
add
ljmp
int
movntq
pop
adc
adc
scas
xchg
fwait
jae
fsts
adc
and
cmp
repz
outsb
lods
xor
adcb
sub
lds
sbb
outsb
push
mov
adc
push
push
xlat
fiadds
mov
aam
sti
xlat
addr16
jmp
jle
push
imul
clc
jg
jo
pop
jmp
sub
push
sbb
lea
inc
sub
das
mov
aaa
mov
cld
push
ror
sub
or
xor
and
out
push
or
adc
into
inc
or
or
add
loope
sti
fidivrl
pop
cmp
or
push
ret
xor
cltd
adc
aam
pop
xchg
xor
lods
cld
inc
out
adc
in
mov
fsubl
ficomps
jns
inc
lods
adc
xor
mov
pop
imul
dec
ret
inc
lret
pop
gs
int3
push
adc
pop
and
pusha
or
mov
es
cmp
loopne
push
fs
mov
aam
lahf
xchg
mov
adc
jecxz
adc
test
mov
push
cmp
sub
and
stos
mov
push
scas
jg
add
mov
jle
out
aas
cwtl
sbb
es
cmpsl
add
in
pop
sbb
shll
jecxz
push
cmpsl
addr16
or
mov
cmp
or
lea
lods
adc
pop
out
fsubl
adc
jp
jl,pt
out
pop
pop
daa
call
inc
push
mov
std
or
mov
in
insb
xchg
mov
test
mov
pop
sub
in
cmp
pop
mov
mov
mov
pop
lahf
aas
jne
or
stos
mov
movsl
subl
popf
jns
jns
in
movsb
pop
int3
xchg
cmp
ret
xor
xor
stc
pusha
sbb
pop
into
and
sbb
jne
xchg
cmp
addr16
sti
aaa
dec
sti
sahf
xchg
jo
std
and
imul
adc
enter
lods
out
push
fwait
push
fsubs
call
notl
mov
setl
pop
sbb
and
push
pop
jne
lahf
maxsd
push
mov
or
cmc
arpl
pusha
int3
clc
jge
cmp
imul
pop
andb
push
adc
mov
mov
dec
or
ficomps
rorb
mov
ljmp
mov
sbb
stc
les
sbb
out
int
loop
dec
mov
and
je
shll
jo
cmp
mov
mov
cmp
cmp
dec
loop
clc
mov
imul
idivl
test
pop
and
mov
or
ss
insl
mov
add
add
sbb
xor
clc
push
mov
outsl
aad
in
cld
or
push
mov
and
loope
movsb
cmp
gs
sub
sbb
sub
add
or
test
aaa
adc
sub
xor
mov
rcrb
lret
test
in
mov
mov
pop
inc
gs
xor
push
fst
pop
fidivrl
and
cwtl
fdivl
mov
pushf
jle
les
xchg
fwait
cmp
add
jb
push
shl
inc
sbb
jmp
jo
outsb
xchg
push
in
jl
dec
jno
jno
jp
faddl
xchg
ljmp
add
add
data16
imul
aad
mov
divb
and
cld
jmp
pop
push
dec
inc
add
mov
xchg
mov
xchg
xchg
mov
test
imul
into
out
jg
inc
lret
pavgw
xor
dec
dec
out
idivb
lods
fbld
sub
out
push
jge
jmp
ret
xchg
inc
in
sbb
movsb
inc
ds
nop
in
mov
jmp
add
popf
popl
mov
test
dec
aad
push
mov
daa
insb
lcall
icebp
adc
or
rclb
and
in
or
jmp
pop
mov
xor
jp
mov
lret
fisubl
aaa
cmp
sar
sti
cmpl
fidivl
ret
pop
and
and
rcl
inc
mov
popf
mov
call
xchg
inc
adc
fidivs
or
in
mov
pop
sbb
insb
and
sahf
cld
outsl
test
jnp
xchg
cltd
add
sbb
sub
test
ret
jmp
xchg
lock
dec
arpl
or
push
shll
ja
scas
mov
aad
adc
outsb
lock
xor
popf
loop
div
sahf
dec
movsl
stc
jb
mov
stos
sub
pusha
fdivr
in
inc
push
sub
cmp
clc
aam
pop
xor
sbb
in
insb
lea
movl
adc
call
push
fdiv
xchg
jge
cmc
lret
mov
daa
bound
cmp
lret
pop
push
aas
and
loop
movsl
mov
scas
enter
push
sub
pop
jb
mov
dec
fsubs
sbb
popa
jnp
imul
cwtl
mov
fistl
stc
add
xchg
and
out
jbe
sti
pop
loop
fcomp
push
inc
cmpsb
or
adc
imul
fdivl
sti
and
int3
insb
cmp
mov
mov
pushf
lods
cs
lods
dec
push
stos
push
pop
sub
xchg
mov
mov
or
adc
out
mov
inc
mov
adc
loopne
jmp
mov
xchg
sbb
cmp
and
jne
push
push
popf
jge
ds
out
aam
cmpsl
adc
rorb
jae
jno
dec
jb
sub
stc
add
inc
lock
es
mov
cli
das
xchg
ret
and
xor
xchg
jp
subb
xchg
dec
push
xchg
jno
out
dec
push
xchg
or
out
test
andl
pop
mov
pop
fldenv
lahf
jmp
push
xchg
orl
lahf
aas
push
clc
xorb
aas
jb
and
dec
push
test
divb
mov
xlat
mov
sahf
fnsave
stos
shll
vmwrite
jge
arpl
jmp
mov
cld
sti
dec
dec
jmp
xchg
pop
xchg
xor
filds
xor
inc
push
and
mov
into
push
push
int3
cmpsb
xor
dec
xorb
or
nop
inc
mov
xor
dec
push
pop
popf
jns
out
sbb
mov
push
stos
xor
nop
sub
gs
mov
add
cmpsb
fsincos
movsl
cmc
push
pop
adc
repz
iret
jo
sbb
popf
repnz
out
mov
mov
sbb
adc
repz
ret
lods
cmp
add
inc
sub
cmp
cmpl
nop
jmp
cs
lret
fidivl
add
cs
mov
jge
jne
out
sahf
or
sbb
sub
divl
jmp
push
adc
out
jmp
int3
movsb
xchg
repnz
cmpsl
daa
fsub
and
test
xor
xor
jecxz
loope
xchg
fisubs
inc
test
xchg
cmp
push
dec
xchg
arpl
fdivp
pop
insl
mov
push
cs
cmpsb
lea
pop
loop
fisubl
outsb
imul
stos
jg
pop
lret
jb
cmp
add
arpl
std
pop
cltd
fistps
mov
jno
jmp
mov
iret
sbb
enter
jb
push
fistpl
cmp
inc
insl
xor
adc
test
cmp
sub
lods
ljmp
mov
ljmp
jl
ja
add
mov
xor
mov
frstor
xchg
repz
pop
data16
jg
test
aam
mov
loope
cmp
sub
mov
or
push
out
aad
clc
dec
mov
lods
add
mov
cwtl
ffree
cmp
fldt
mov
adcl
sbb
add
imul
stos
int
inc
or
in
xor
mov
push
lret
jmp
daa
xchg
lock
arpl
mov
push
in
les
fwait
sbb
addl
or
stos
ss
in
jp
xor
and
mov
flds
xchg
jmp
dec
fwait
mov
shll
je
loop
sbbb
push
pop
ficoml
stos
lods
push
mov
out
adc
notl
cmp
sub
xor
push
mov
and
xor
cmpsl
jnp
pop
out
int
jbe
lcall
xor
mov
inc
push
lret
out
and
leave
into
sbb
and
sub
sbb
jge
stos
fsubrs
in
cmp
adc
mov
or
xchg
aam
xor
lods
jecxz
imul
imul
fimull
mov
pop
xor
pop
pop
pop
test
les
or
mov
and
mov
inc
icebp
sti
ds
push
xchg
lea
scas
pop
inc
mov
lret
xchg
loop
and
sbb
test
test
mov
addr16
data16
cmp
lods
test
pop
fistpll
fmull
lahf
adc
andl
mov
fsubrs
arpl
popf
nop
or
cs
in
imul
cmpsl
and
std
push
add
mov
fyl2x
cli
ret
pop
xchg
mov
testl
fiadds
test
dec
xorb
clc
inc
daa
cmp
mov
test
and
mov
aas
pusha
xchg
ja
adc
addb
mov
push
pop
cmp
cmp
pop
stc
fidivs
lea
jmp
ds
out
sti
cmp
repz
loope
mov
loop
lea
push
aas
sub
sbbb
and
fbstp
ljmp
sbb
sbb
int
xchg
divb
xchg
push
mov
add
cmpsb
mov
cmpsb
arpl
xor
pop
lods
std
or
push
lahf
xchg
fs
jmp
jne
addr16
xchg
dec
xchg
sbb
loopne
pop
lret
ret
xor
jmp
inc
fisubl
pop
sahf
fcomps
pop
sti
into
adc
out
aaa
sub
or
adc
in
mov
orb
gs
cmp
ds
pop
scas
jge
fmuls
int3
or
xor
aad
ja
je
sbb
lcall
xchg
aam
fmul
pusha
dec
aaa
cli
pop
jae
push
mov
jns
js
jo
pop
and
push
push
jo
dec
pop
pop
sub
or
sbb
push
loop
insb
push
inc
stc
dec
aad
and
dec
sbb
jl
xchg
xor
push
inc
pop
or
push
test
aad
inc
scas
lret
xchg
pop
cmpsl
lea
shll
or
push
pop
cltd
adc
enter
decb
loop
pop
sub
and
add
xorl
sbb
iret
int
call
mov
inc
sar
jecxz
lret
adcb
movsl
fisttps
scas
or
or
or
xor
jb
fidivrs
faddl
xchg
ret
lock
imul
jno
pop
xchg
push
mov
add
mov
inc
imul
fisubrs
add
jge
inc
push
pusha
cmp
inc
test
cmp
cmpb
hlt
inc
stos
jo
aad
cli
adc
das
pop
imul
aas
mov
mov
shr
incb
fisubl
into
mov
and
shll
movsl
std
add
sub
fwait
movsb
xor
push
sarb
adc
shlb
adc
jns
in
addr16
add
cmpsb
jmp
inc
mov
sub
jnp
pop
add
inc
dec
roll
cltd
lods
scas
xor
mov
jns
mov
pop
push
or
dec
addr16
pop
xor
iret
subb
mov
push
das
xchg
add
push
or
dec
inc
mov
mov
data16
aad
ficoml
xchg
pop
mov
pop
sub
bound
mov
aad
sub
rclb
stc
lods
pop
push
mov
outsb
mov
mov
xchg
bound
cld
pop
loope
jae
sub
pop
into
xchg
mov
pusha
sub
and
mov
mulb
add
xor
adc
mov
adc
call
aad
outsl
jl
push
outsl
jecxz
aad
test
daa
call
and
out
std
sbb
sahf
mov
push
into
movsb
cmp
subb
and
ret
push
repnz
aad
flds
push
mov
pop
sub
bound
mov
mov
cmp
subb
loope
push
dec
mov
add
insb
js
push
gs
adc
imul
sbb
adc
arpl
push
inc
insl
hlt
clc
cmp
in
and
or
frstor
scas
push
iret
leave
cwtl
add
hlt
aas
pop
fcompl
cmp
insb
stos
sub
rorb
pop
jno
lea
cmp
cmc
out
push
jo
cmp
fldenv
lret
sub
xchg
add
popa
notl
out
popf
mov
sahf
xor
jge
cs
sbb
loopne
xor
pop
xchg
dec
add
push
mov
rorb
mov
rep
and
add
andb
rclb
add
jp
mov
jnp
jo
pusha
out
jno
mov
push
xchg
xchg
inc
xor
std
push
not
bound
mov
cmp
mov
mov
jnp
pusha
scas
gs
insl
xchg
lods
cmpsb
mov
pop
or
inc
stos
in
notb
add
mov
adc
data16
cmp
imul
cmp
sbb
mov
mov
fs
mov
decl
mov
sbb
push
ja
mov
jmp
inc
or
jnp
jg
push
sbb
js,pn
fcomip
popf
jb
repnz
pop
movsl
sub
ds
sbb
push
imul
push
cmpsl
fwait
mov
imul
xchg
mov
mov
inc
add
int3
cs
in
fdivrp
cmpsb
enter
xchg
inc
lock
outsb
lods
in
mov
pop
sahf
push
xchg
nop
in
ss
int3
roll
cmc
mov
or
mov
lret
outsb
mov
repz
push
cmp
rolb
inc
sub
mov
aas
mov
call
jns
movsb
aas
push
push
or
ljmp
adc
gs
push
aad
repnz
aaa
sub
cmc
fidivrs
shlb
jle
or
jne
mov
xchg
push
in
test
and
fadd
in
repnz
fnsave
jb
cltd
dec
vpackuswb
ja
inc
jmp
add
xchg
jnp
adc
sahf
inc
push
inc
out
adc
xor
sbb
lahf
sbb
adc
adcb
mov
jns
leave
mov
xchg
testb
outsl
fimull
dec
mov
in
jmp
ja
adc
or
andl
orb
stos
test
fbld
testb
sub
dec
icebp
repz
sub
bound
cmp
xchg
das
int3
cmp
aas
mov
jbe
jl
pop
movsb
adc
sub
jecxz
xchg
outsl
push
pushf
push
mov
sbbb
outsb
jmp
mov
mov
repz
fwait
dec
fcom
enter
mov
xchg
in
and
push
int
or
movsl
add
jno
dec
je
bound
jmp
outsl
ds
or
incb
xlat
popl
mov
cld
cmp
adc
jb
out
mov
mov
and
or
movsl
lret
lods
mov
gs
sub
xchg
outsl
cmc
xchg
aaa
aad
lret
daa
test
xchg
mov
pop
sub
pcmpgtd
imul
sub
int3
mov
insb
push
rorl
xor
cmp
mov
and
aad
cmp
das
push
imul
push
jecxz
ja
adc
divl
shrb
cld
and
fucomi
stos
cwtl
mov
mov
out
dec
jnp
mov
or
push
inc
aaa
fdivrl
in
cmp
cwtl
ja
xor
decl
add
andb
and
cmp
mov
mov
dec
inc
mov
stos
xor
out
pop
cltd
in
inc
sbb
cmp
and
mov
test
call
dec
inc
loop
std
inc
pop
push
shrl
and
sub
decl
sahf
jmp
xchg
xchg
pushf
mov
xchg
sub
insb
das
shlb
dec
xor
add
adc
xchg
xchg
xor
lds
mov
insl
xchg
call
xchg
iret
imul
jnp
lret
inc
in
aaa
mov
add
adc
inc
in
sti
imul
mov
and
or
popa
sbb
pop
loope
mov
cmpsl
sub
dec
add
fxch
cld
or
lret
push
adc
gs
aaa
in
test
xchg
std
das
jnp
and
mov
xchg
and
jle
vpshlw
add
ret
ja
cld
aaa
mov
mov
cwtl
mov
lret
fistpll
and
popf
xchg
add
mov
ljmp
pop
shrb
cld
rolb
or
mov
sub
ret
cli
mov
xchg
or
sub
push
pop
or
and
mov
mov
push
jmp
aad
jbe
cmp
sti
and
nop
xor
mov
add
hlt
mov
cmpl
dec
lahf
inc
or
decl
arpl
rep
iret
mov
cmp
lea
out
frstor
jl
shl
adc
jnp
or
repz
mov
leave
jae
jbe
xor
ret
inc
pop
or
push
cwtl
dec
push
in
lret
imul
insl
rolb
push
test
mov
lret
xchg
fnstsw
pop
mov
jae
sub
enter
movsl
rcll
pop
mov
out
fmuls
mov
mov
push
call
nop
lret
mov
fcmovnb
adc
addr16
jno
inc
test
or
fistpl
sti
je
js
jecxz
cli
stos
and
pop
mov
scas
sarb
mov
ret
cli
xor
push
xchg
cmp
pop
lds
daa
mov
push
push
add
pop
pop
mov
push
iret
and
xchg
lods
pop
cmpsb
xchg
push
adc
pushf
add
or
inc
jae
mov
or
loope
sbb
pop
xlat
out
push
loopne
cmpsb
or
mov
add
push
xor
jl
inc
lret
pop
inc
lods
adc
cmp
push
outsb
es
fcomps
mov
and
aam
out
and
fsubrs
xchg
dec
aas
lret
arpl
jb
adc
cltd
fldcw
cmp
mov
mov
xlat
mov
xlat
mov
mov
or
xchg
pop
push
push
sbb
push
fwait
imul
mov
jb
push
cmp
rol
sahf
ds
cmp
fidivs
pcmpgtb
das
cmp
in
or
lock
gs
or
adc
jne
and
add
rcll
push
ja
bound
mov
add
lea
outsb
aas
fcmovb
popf
sbb
pusha
inc
insl
movsl
push
ret
dec
inc
push
in
mov
sbb
push
in
int
fnsave
push
daa
data16
popa
dec
sub
sub
loopne
dec
sbb
jg
scas
xor
jge
push
xor
sub
cmpb
outsl
mov
hlt
add
inc
cmpsb
in
sub
cmp
add
add
addr16
je
mov
mov
pop
fcoms
or
sub
loop
jbe
dec
daa
std
push
pop
movsb
mov
repz
mov
imulb
add
jl
mov
mov
fistl
movsb
push
sbb
fstps
cld
out
adc
lods
adc
in
outsl
and
add
ret
ds
sub
int
or
cmpsl
mov
mov
or
inc
adc
pop
aas
nop
cmc
ja
inc
imul
adc
inc
cmc
xchg
xor
jl
mov
pop
les
inc
nop
dec
repnz
jbe
daa
push
inc
push
cmp
push
mov
mov
xchg
lahf
gs
fmull
and
imul
jle
lcall
sub
jmp
mov
xchg
xor
or
enter
xchg
out
loop
mov
aam
jae
jbe
into
mov
jne
lea
xchg
add
mov
inc
aad
ss
out
insl
sub
add
fildll
sti
mov
mov
int3
insl
pop
dec
inc
sub
mov
adcb
sub
jne
lods
fmulp
dec
mov
jno
fldt
sub
add
jecxz
push
or
sub
scas
inc
jle
pop
cmp
pop
jno
repz
pop
jmp
mov
les
push
jmp
pop
add
lods
dec
lock
adc
loope
mov
sbb
jle
hlt
pop
and
add
cvtpi2ps
cmc
andb
icebp
stos
ds
cld
cs
jl
adc
fadd
out
sbb
bound
daa
mov
push
xchg
lea
xchg
cmp
jbe
jb
ffreep
adc
pop
jp
cmp
xchg
xchg
loope
mov
push
in
stos
loope
dec
inc
movsb
dec
pop
daa
jge
and
pop
jae
faddl
push
inc
sub
mov
popf
sub
pop
xchg
ds
in
adcl
scas
addr16
pop
pop
add
inc
adc
jl
loope
pushf
rcrl
lcall
test
mov
test
jno
call
cmpsb
cmpsb
mov
cltd
pop
std
mov
or
mov
xlat
and
sub
inc
insl
sbb
int
fcmovu
popa
dec
xor
fmuls
adc
push
fsub
push
mov
loope
inc
inc
hlt
mov
pop
out
scas
ja
div
mov
outsl
ret
jl
push
jge
loop
loope
mov
xchg
xor
cmp
jnp
popf
jmp
fcoms
cltd
pop
into
mov
loop
add
mov
int
cmpsl
pop
cmp
and
or
jb
cmpsl
andb
xor
push
adc
fdivr
fucom
das
out
xor
pop
into
push
add
fadds
arpl
shll
lahf
mov
jle
in
mov
jp
mov
jl
popf
push
inc
sti
inc
mov
jg
jg
call
push
or
insl
aad
in
xchg
cwtl
push
sar
ljmp
cmp
aam
frstor
mov
addb
nopl
test
in
sub
push
jge
stos
pop
add
or
xchg
inc
fstps
xor
sub
cld
inc
add
cltd
or
cmp
push
cs
cmpb
loop
pop
mov
std
push
les
mov
mov
stos
mov
mov
dec
mov
enter
cmpsb
mov
xor
fyl2x
pop
mov
or
dec
test
mov
jne
dec
or
test
rcll
sub
xor
call
push
in
add
imul
fdivs
jns
push
jmp
bound
and
sub
hlt
ret
cmp
pop
stos
aaa
stos
adc
cmp
out
xchg
sub
testl
fisttpll
add
ret
xor
xor
sub
dec
mov
cltd
subb
test
jbe
sahf
cmpsl
or
xchg
aaa
stos
xor
sarb
inc
cmp
fxch
mov
xchg
jl
add
push
jno
inc
cmp
jg
enter
lods
daa
dec
fs
push
mov
mov
push
inc
and
sub
or
xor
mov
rcrb
push
cwtl
mov
pop
mov
pop
stc
inc
or
dec
mov
mov
push
out
dec
call
inc
les
in
dec
cmp
ljmp
dec
jbe
jl
and
xchg
sub
mov
repz
mov
and
ss
rol
fimuls
mov
out
or
sbb
jp
pop
inc
lods
xchg
ret
mov
fldl
sbb
sub
xchg
sarw
xor
andl
xchg
fsub
inc
cltd
les
xchg
das
xor
push
mov
rcrl
jo
adc
fwait
dec
and
mov
cmpsb
int
jno
pop
jo
cmovb
mov
inc
cmp
or
fnsetpm(287
jecxz
xor
mov
nop
mov
lahf
clc
add
adc
out
imul
pop
sub
popa
push
and
pop
mov
jb
xchg
mov
cmp
outsl
mov
pushf
ds
mov
mov
ffreep
int3
sbb
subl
xchg
inc
inc
pop
hlt
fildll
xchg
test
push
jnp
pop
jnp
mov
addr16
cwtl
in
fwait
jp
fsubrs
push
lock
pop
push
mov
jge
and
shlb
adc
inc
test
outsl
sbb
fimuls
pop
lahf
lea
mov
xchg
dec
and
mov
push
dec
mov
or
sub
icebp
repnz
fdivl
clc
or
xchg
sbb
test
insb
fadds
sbb
aas
sub
cmp
je
sbb
sbb
adc
popa
enter
sti
inc
adc
or
mov
push
call
sub
pop
enter
imul
inc
mov
es
aad
xchg
or
add
aaa
jmp
test
roll
scas
fidivrl
push
dec
xor
adc
icebp
and
scas
loope
inc
bound
inc
repnz
subl
pushf
in
dec
jge
sub
jmp
jne
jb
cwtl
push
pop
in
jge
adc
lds
aas
add
add
sbb
or
or
popf
popf
lds
xor
outsb
lcall
push
xlat
jmp
orl
jns
jo
push
push
cltd
and
icebp
add
xchg
pop
inc
jae
inc
cmp
push
jl
inc
and
push
push
cmp
mov
xchg
fildll
fidivrl
dec
sub
push
inc
sub
aam
xchg
xchg
xchg
ds
jne
out
mov
mov
jecxz
cmp
mov
mov
call
je
cmp
cs
movsl
bound
pop
cli
mov
into
xor
xchg
push
add
jle
sbb
insl
pop
sub
je
int3
sub
push
out
xorl
mov
pop
mov
sbb
sub
into
sbb
movsb
push
mov
std
or
mov
rcll
loopne
roll
sbb
mov
xchg
dec
pop
or
xorl
insb
jo
jecxz
movsb
mov
mov
scas
fmuls
int3
cs
xor
push
xchg
cmpsl
jle
add
push
aas
mov
xchg
negb
push
fcoms
dec
je
lahf
into
mov
fwait
js
inc
subl
adc
inc
mov
addb
repz
arpl
fmuls
or
sub
adc
movsl
dec
nop
dec
out
int
jmp
push
dec
fidivrs
xchg
push
negl
xchg
mov
jecxz
adc
test
jp
mov
out
jo
add
hlt
inc
in
and
and
fbstp
and
jnp
sub
sahf
add
mov
gs
jns
inc
mov
pushf
mov
mov
ljmp
call
cmc
mov
mov
das
pushl
mov
sbb
lret
mov
xchg
mov
shrl
cld
mov
fnsave
mov
aas
jge
popf
push
icebp
mov
cmp
push
insl
cmpl
popf
enter
imul
fnstsw
inc
in
lds
push
bound
pop
insl
mov
in
fstp
pop
jecxz
test
mov
fstps
mov
sti
xchg
and
jae
dec
lcall
or
mov
mov
ret
jns
test
xor
call
ljmp
add
ss
in
sub
jg
push
shlb
lret
adc
pop
sti
fisttps
or
mov
cmpsb
ret
adc
test
push
sti
pop
dec
adcb
inc
lret
cmpsl
lea
sbb
cwtl
mov
jg
mov
and
mov
arpl
movsb
mov
fisttpll
movsb
arpl
cltd
int3
sbb
lret
xchg
shll
sbb
inc
xchg
cmp
push
stc
pop
rorb
and
jmp
xor
ficoml
cmpsb
lea
das
sbb
add
loop
aas
std
sbb
in
clc
cmp
loop
insb
cmc
addr16
std
fs
or
xchg
jl
fcom
call
popa
ss
hlt
add
lds
icebp
movsb
movsb
stc
or
sub
bound
lret
add
cmp
jae
loopne
aaa
loopne
daa
dec
lcall
and
fimull
push
aas
in
loopne
inc
pop
push
repz
notb
xchg
fsts
bnd
add
sbb
pop
ret
sbb
push
add
in
rcll
clc
fiaddl
cwtl
imul
mov
repnz
testb
push
lret
and
fs
push
add
out
mov
push
outsl
cltd
cli
sub
sbb
lds
or
movsl
pop
dec
rorl
enter
jae
call
pushf
push
push
leave
xor
dec
sub
popf
push
sarb
xor
bound
inc
sarb
jno
sbb
cmp
packsswb
cltd
mov
add
cwtl
cmp
push
cmp
or
xor
push
into
loopne
inc
test
xor
push
xorl
push
lret
mov
lds
mov
add
xor
sub
mov
mov
push
push
mov
push
mov
adc
pop
js
and
cmpl
dec
ret
cmpsb
or
stos
sbb
loopne
shrb
fnstcw
fidivrs
in
mov
mov
into
jbe
cmpsb
push
cmp
dec
icebp
movsb
push
mov
bound
add
mov
push
or
stos
scas
test
xchg
scas
lahf
sbb
vpsubb
mov
cmpsl
inc
shr
push
popf
int
push
scas
push
movsl
jmp
mov
jne
aas
jns
inc
in
iret
cmpsb
xchg
and
in
cmp
inc
sti
pushf
std
lea
pop
xchg
add
pop
cs
sti
shrl
pop
dec
fs
jmp
iret
pop
mov
das
repnz
lods
rorb
pop
repz
and
jl
xchg
lret
outsb
fidivl
jl
mov
mov
call
xchg
std
jle
pusha
xchg
aas
cli
jmp
add
test
pop
test
popa
sbb
mov
jge
inc
int3
push
jge
sbb
bound
das
jb
stos
les
das
mov
mov
das
jge
sub
in
or
or
loope
je
xchg
cmpb
mov
stc
and
mov
roll
pusha
aad
jbe
mov
sbb
pop
pop
lock
fnsave
pushf
mov
fcmovb
ss
ljmp
pop
add
outsb
enter
loop
dec
mov
insl
ljmp
sbb
lret
fsubr
in
dec
cmp
aad
imul
sarb
lcall
dec
jecxz
dec
lahf
mov
test
imul
sub
inc
jmp
inc
ds
iret
adc
daa
mov
seto
cld
sbb
jp
loope
stos
out
mov
jbe
xor
jbe
jbe
jl
sub
ret
sbb
mov
dec
das
rcrb
push
fsubl
ficoms
mov
daa
loopne
out
out
jmp
xchg
popf
mov
daa
sbb
xchg
pop
stos
aas
push
jae
jbe
mov
movsl
or
add
out
cltd
leave
insb
out
cld
jecxz
xor
pop
ds
addr16
and
mov
cmp
push
sbb
xchg
subl
inc
mov
cmp
xor
or
mov
mov
jge
cmp
in
enter
mov
sbb
add
adc
jecxz
mov
mov
lahf
sbb
jecxz
rcrb
test
ret
xchg
out
adc
out
js
jae
icebp
sub
in
cli
and
xor
sbb
lahf
je
mov
out
ja
pop
das
sbb
mov
xor
popa
mov
repnz
mov
fildll
push
loopne
shrl
cmp
fbstp
mov
sub
mov
and
jo
scas
cmp
cmpsb
pop
rclb
pop
inc
lcall
pop
xor
bnd
xadd
mov
cmc
enter
jle
cwtl
mov
cmp
xchg
push
xor
scas
pop
mov
jmp
rclb
xchg
and
add
push
add
xchg
icebp
arpl
ds
and
cmp
cmp
mov
rclb
fsubr
fbstp
fistpll
pop
mov
cli
adc
push
jmp
adc
ror
imul
fimuls
sub
push
add
push
minps
adc
sbb
mov
xor
mulb
shlb
fstl
inc
pop
daa
mov
movsl
mov
imul
test
imul
out
mov
repnz
loopne
add
and
push
and
int
jle
aad
insl
push
pop
ss
sahf
lahf
jecxz
mov
inc
adc
imul
pusha
test
mov
mov
pop
stos
or
aas
or
adc
adc
js
dec
mov
pop
cwtl
mov
jns
xor
push
dec
mov
mov
fwait
bound
mov
stos
fwait
ds
jne
fimull
in
in
xchg
dec
cmp
call
lcall
cmp
lcall
es
sbb
cltd
in
adc
pusha
sahf
mov
fwait
mov
sarb
xchg
sbb
rcl
aaa
std
pop
cmp
mov
mov
stos
test
nop
fidivl
stos
call
xchg
sub
add
leave
aaa
push
xor
bound
and
andl
out
cmp
mov
aaa
sbb
pop
cmp
sbb
push
das
mov
push
aad
pop
test
roll
cmp
or
sbb
pop
int
repnz
dec
xor
fisttps
push
shrb
mov
jg
cmpsl
mov
jbe
stos
ret
lahf
pop
jnp
mov
arpl
test
subb
out
lods
xchg
mov
dec
mov
cwtl
and
or
out
mov
sbb
ds
push
mov
xor
and
inc
adc
push
rorb
push
push
adc
mov
fs
dec
imul
lahf
and
in
or
rep
add
push
aaa
add
dec
ds
test
jnp
test
pop
pop
leave
lods
jo
inc
jp
test
jmp
jle
aad
aad
sbb
mov
add
test
out
sbb
and
pop
insb
mov
out
and
mov
into
mov
cltd
push
daa
jl
adc
jmp
dec
push
push
pop
dec
push
cmp
mov
xor
and
xor
push
dec
mov
xchg
insb
pop
fcomi
mov
clc
add
adc
into
mov
and
insb
mov
sahf
mov
fnsave
dec
aam
adc
in
mov
shl
notl
push
sub
or
jge
xchg
or
mov
cmc
loop
jns
jp
jge
mov
xchg
arpl
sub
jl
xchg
popa
pop
jecxz
out
inc
shlb
test
jmp
push
or
inc
fdivrl
jns,pt
arpl
outsl
jno
test
notb
cmp
fldl2t
lock
test
lods
stos
jecxz
sbb
xchg
jb
sbb
xor
inc
scas
daa
aas
inc
pop
pop
into
ljmp
scas
add
jmp
sbbb
test
or
or
and
mov
mov
popf
xor
adc
xchg
jmp
mov
ljmp
or
jbe
shl
cwtl
sbb
fisubs
movsb
jle
lret
fldenv
bound
dec
je
fadd
xchg
pop
ljmp
mov
push
ds
push
or
fnstenv
rcll
sub
dec
xchg
xchg
pop
dec
pop
arpl
movsb
js
mov
xchg
fcomps
out
mov
xchg
xchg
and
outsb
scas
fwait
adc
jb
insl
out
pop
and
fnsave
insl
out
jbe
pop
jne
ljmp
ficompl
inc
mov
imul
cmpsb
push
in
and
cmpsl
pop
aad
aam
shrb
jecxz
jmp
imulb
in
test
inc
mov
sbb
inc
sub
pop
dec
sarl
mov
jecxz
jno
xchg
je
jno
jb
xor
or
mov
lods
and
sub
mov
fisttpll
xor
adc
jle
jno
mov
and
sub
enter
jnp
aam
pop
mov
inc
int
cmp
sbb
cmc
jecxz
cli
mov
lahf
pop
xorl
dec
fwait
mov
mov
test
jns
jmp
mov
fldl
push
xor
add
ret
mov
mov
movsb
clc
and
xchg
pop
push
pop
push
cmpsl
stos
and
push
enter
and
mov
jle
movsl
fsubl
jo
loopne
jb
xrelease
pop
daa
or
cmp
inc
into
imul
and
je
dec
sub
fisubrs
movsb
push
scas
mov
push
mov
leave
jnp
mulb
and
stc
xorw
orl
out
mov
sahf
stc
cmp
and
mov
adc
pushf
movsb
int
sub
inc
and
pop
xchg
repz
xchg
jns
daa
pop
test
sub
push
sub
pop
mov
pop
js
sbb
mov
xor
dec
in
cmp
xor
xchg
adcl
and
data16
dec
cmp
in
insl
cs
test
in
test
adc
int
std
es
scas
cs
pop
es
push
push
ja
cli
push
pop
mov
xchg
cmc
shl
out
mov
cmp
call
repz
xchg
or
out
jno
test
arpl
scas
xor
mov
fdivl
lods
push
jmp
cld
or
addb
lea
rolb
sbb
pusha
fldcw
jg
insl
jl
dec
push
test
jl
je
lods
mov
fstpt
fwait
hlt
das
xor
gs
ret
gs
lret
ljmp
aas
enter
mov
sahf
pop
movsl
neg
clc
xor
clc
cmp
icebp
out
jg
shld
or
dec
mov
or
jmp
inc
sarb
or
and
xor
mov
rcrb
fdivs
cmp
aas
movsb
outsl
mov
and
xchg
dec
jne
incb
in
cmp
mov
popa
shlb
sbb
scas
jmp
in
imul
scas
cli
int
stos
mov
sub
aad
inc
push
xchg
xchg
fs
cmp
in
lret
pop
fdivrl
push
lea
sub
fwait
push
lock
das
sub
fsubr
xchg
cli
and
or
rol
test
mov
ffree
jae
scas
xor
sbb
repnz
popf
out
sub
add
andb
jb
and
sub
sbb
nop
bound
xchg
fadd
push
xchg
dec
adc
out
test
add
mov
mov
push
adc
mov
push
push
bt
sub
rcl
pop
fimull
sbb
les
jmp
mov
arpl
xchg
dec
and
adc
imul
inc
lahf
cmpsb
lods
dec
movsl
rol
sub
xor
nop
mov
cmp
ds
aas
iret
adc
push
sub
iret
add
sub
and
mov
leave
std
push
idiv
jmp
pop
fistpl
loope
fidivrs
sbb
jae
add
mov
xchg
xor
inc
arpl
dec
jbe
setbe
push
pop
lret
mov
aaa
stos
nop
js
mov
icebp
jg
je
xchg
add
xor
cli
fdivl
push
fadds
jg
jno
adc
cld
out
jge
imul
or
repnz
loop
jmp
sub
lods
std
hlt
or
xchg
push
mov
movsb
sbb
xchg
fwait
mov
pop
out
hlt
cli
imul
cwtl
jnp
add
and
jmp
shl
xchg
sbb
push
jecxz
jmp
cmc
ret
imul
shrb
and
mov
and
call
loope
cwtl
arpl
es
pop
add
jle
call
inc
repz
test
pop
subl
jl
test
sub
push
pop
rolb
stc
or
sarb
mov
push
or
stc
jns
pop
packsswb
imul
mov
pop
adc
push
cs
sti
mov
jo
lods
jno
jne
or
outsb
shl
pop
je
dec
call
loopne
add
sahf
movsb
and
add
pextrw
jle
pop
mov
enter
insw
addr16
sbb
or
out
mov
fnstenv
cmp
inc
add
or
mov
jno
push
mov
lcall
pop
jl
inc
push
lds
inc
adc
add
jle
push
push
shll
push
jge
mov
shlb
shlb
pusha
pop
popf
pop
push
dec
add
pop
dec
sbb
cmp
scas
xor
mov
adc
mov
mov
push
push
inc
in
int
mov
das
es
cmovae
stos
xlat
push
cmpsb
lock
adcb
sbb
xchg
fwait
mov
dec
jne
pop
cmp
in
pop
xchg
lds
into
push
mov
mov
dec
pop
adc
jb
sbb
mov
or
out
push
loope
dec
fdivl
ror
shr
pop
stos
dec
dec
mov
test
stc
mov
cmc
dec
stos
movsb
adc
xchg
adc
ljmp
pop
bswap
add
lods
pusha
mov
icebp
jno
or
jns
popl
jge
fisubrl
jg
inc
and
fwait
mov
nop
mov
pusha
or
pushf
lds
inc
xor
repnz
repz
mov
rorl
jbe
outsl
data16
mov
sarb
pop
out
inc
pushf
lret
jecxz
mov
inc
adc
sbb
sahf
xor
xor
and
jno
lods
xor
jg
adc
mov
jne
punpcklwd
push
push
nop
pop
hlt
sub
cs
push
lock
jne
scas
or
das
cmpsb
jl
dec
pop
push
mov
inc
popf
inc
aad
inc
push
cmp
add
xor
adcl
push
mov
dec
sbb
imul
adc
es
cwtl
lahf
xchg
imul
ja
mov
adc
xor
ljmp
std
inc
mov
mov
dec
mov
lods
and
cmp
mov
fwait
aas
pop
mov
xchg
adc
ret
pop
test
sub
mov
add
pop
lahf
push
daa
mul
lods
shl
movsb
inc
push
popf
sti
inc
mov
ljmp
in
repnz
andb
loopne
sbb
stc
fildl
rol
sbb
cmp
clc
mov
jecxz
lds
adc
ds
mov
and
jb
sbb
jecxz
mov
and
mov
test
fwait
cmp
fincstp
xchg
loope
xchg
fildll
loopne
dec
adc
pop
inc
sbb
std
mov
push
les
dec
fs
loope
jne
xorl
mov
mov
dec
ret
sub
int3
fnstsw
insl
jb
out
dec
sub
mulb
jnp
notl
cli
dec
movsl
aaa
lods
hlt
cwtl
sbb
adc
test
test
sbbl
mov
or
dec
jg
repz
dec
aaa
pop
outsb
out
das
sub
jbe
nop
mov
adc
adc
cs
dec
daa
xor
cmp
insb
inc
mov
pop
push
or
pop
fldcw
aam
cmp
lock
and
dec
shl
fdivp
push
hlt
dec
das
movsl
bound
jecxz
leave
push
aam
fwait
xlat
pop
or
lea
pop
scas
xor
mov
enter
xorps
add
sub
insl
sbb
sbb
and
repnz
adc
nop
inc
arpl
sub
dec
bound
sub
inc
mov
mov
test
pop
mov
or
sbb
les
out
jl
mov
mov
xor
fwait
sbb
cmp
popf
test
inc
fmuls
lahf
sub
add
je
sbbl
mov
out
inc
add
add
addr16
shlb
ljmp
movsl
push
imul
loope
sub
repnz
jne
and
jp
lahf
mov
leave
jecxz
mov
mov
or
mov
test
and
sbb
pushf
xor
jns
jb
mov
test
cs
jno
outsl
outsl
aam
dec
push
or
fadds
cltd
ljmp
popa
mov
cmc
mov
scas
ret
or
jnp
idivb
int
add
sbb
pushf
mov
xor
inc
sbb
add
mov
out
jmp
loopne
int3
sub
cmp
sbb
and
icebp
mov
or
sti
jmp
cld
sbb
std
mov
sahf
xchg
jbe
pop
nop
testl
nop
inc
xorb
sarb
outsb
out
push
lea
add
sub
testb
or
pop
loope
jmp
push
adc
stos
lea
or
shr
push
fwait
sarl
add
dec
mov
in
pusha
sub
enter
and
pop
int
js
sbb
das
cmp
add
cs
push
arpl
push
mov
loop
push
jmp
sbb
mov
mov
enter
int
or
mov
ja
imul
or
jae
and
mov
addr16
add
cmpsl
test
popa
inc
and
scas
out
sbb
mov
push
inc
push
jb
cmp
push
je
inc
mov
add
xchg
cli
in
push
adc
das
sub
je
jg
xchg
fwait
jle
cltd
les
data16
push
fwait
mov
cwtl
push
les
pop
fucomp
nop
mov
and
ss
sub
addr16
in
push
aas
adc
nop
add
loop
xchg
enter
ja
dec
rcrl
xor
sbb
and
out
lock
stos
dec
popf
mov
aaa
js
pop
popa
rdpmc
ss
and
leave
sub
subl
inc
or
sti
jecxz
daa
cmp
dec
aad
fdivrs
xchg
inc
adc
push
mov
lock
mov
cmp
mov
mov
push
dec
lods
aad
push
daa
daa
dec
inc
insl
hlt
arpl
jae
lock
dec
orl
cltd
fisubl
mov
popf
push
pop
xchg
mov
out
out
out
cmp
mov
in
or
insl
and
nop
int3
mov
jmp
jle
pop
adc
pop
scas
mov
pop
aas
and
mov
nop
sub
aaa
jbe
dec
repnz
cvtps2pi
out
add
shr
mov
sbb
mov
out
mov
xor
mov
lods
xorb
jb
pop
push
int
jns
mov
out
push
rcll
xor
fsubrs
shr
dec
xor
out
sub
movsl
fisubl
jnp
mov
out
add
push
mov
sub
das
es
push
jne
xchg
das
int3
mov
mov
cmp
mov
inc
aam
or
dec
lods
popf
sbb
pop
push
inc
fld
lahf
pop
or
pop
fcomps
cld
or
in
pop
mov
xchg
mov
jne
loopne
movsl
std
addr16
stos
jp
sub
mov
pushf
and
shl
lods
cli
les
test
and
cltd
enter
push
fcompl
fwait
cs
xchg
or
in
and
stos
lahf
inc
sbb
cmp
jne
lods
repz
scas
outsl
jmp
lock
lds
out
mov
and
in
add
sbb
in
mov
int3
sub
popf
iret
inc
outsl
add
ret
jmp
inc
js
sub
inc
push
icebp
mov
pop
xor
insb
sub
jns
loop
mov
je
lods
test
pop
pop
cld
fldl
jge
clc
cltd
add
cmpsb
inc
xchg
in
fs
add
out
cmpsl
insl
mov
lods
ret
clc
pop
inc
testb
std
cmp
and
sub
sahf
hlt
push
sub
jns
daa
mov
sub
sbb
lahf
mov
roll
mov
and
fcoml
mov
dec
sbb
xchg
jmp
mov
jle
scas
in
jo
pop
hlt
mov
nop
mov
mov
popf
and
jns
and
out
into
cwtl
lret
mov
fmul
fcmovbe
jp
inc
jle
loope
inc
mov
cwtl
test
and
adc
xlat
test
sbb
arpl
rolb
jb
mov
in
mov
into
aas
jecxz
adc
fldl
push
fsubr
lock
or
das
pop
mov
jns
inc
mov
sub
leave
ss
addr16
mov
ljmp
adcl
dec
scas
sub
xchg
adc
sbb
add
sbb
outsb
sub
push
stos
xchg
dec
int
jns
out
dec
or
mov
mov
in
es
sarb
lcall
cli
sbb
ss
jo
pop
jecxz
sbb
in
sbb
pop
sbb
add
cltd
jne
das
cmpsl
sub
loop
fcom
push
cld
lahf
mov
push
inc
call
in
popf
hlt
sub
aaa
pop
and
sbb
stc
lahf
sbb
mov
inc
movsl
rcrb
dec
inc
or
les
pop
adc
aas
ss
and
pusha
nop
mov
or
mov
push
psubd
mov
out
mov
lret
lret
movsb
in
xchg
dec
xchg
cmc
orl
sub
mov
mov
sbbl
mov
mov
cmp
int3
cmp
js
int3
lahf
inc
sarl
call
scas
enter
jnp
and
ret
pop
enter
out
xchg
mov
ret
sub
js
stos
jmp
setns
lock
add
inc
and
adc
jne
xor
jp
cmp
data16
dec
cld
jae
aam
mov
mov
sub
xchg
push
shll
rcll
repnz
shll
mov
out
into
in
enter
pop
pop
movsb
daa
push
adc
cmp
jl
nop
adc
pop
mov
pop
sarb
or
daa
xchg
cmp
mov
dec
call
add
push
xor
andl
xchg
mov
and
outsl
leave
lea
std
int
or
cli
loopne
xchg
cwtl
cmc
xchg
ret
out
cmc
inc
pop
cltd
loope
out
leave
jns
ds
xbegin
cli
xor
adc
add
jae
push
fsub
dec
fs
add
xchg
movsl
dec
loope
mov
int3
dec
scas
jg
push
dec
dec
or
cltd
outsl
movsl
pop
and
jne
bound
mov
cmp
sbb
xor
mov
cmc
in
cmp
nop
hlt
jae
add
bound
xchg
push
pop
xchg
mov
ja
js
repz
sub
icebp
divb
shll
movsl
jle
or
inc
int
mov
jmp
fidivs
lds
sbb
sbb
cwtl
loopne
dec
movsb
stc
outsb
aad
aaa
jae
sub
dec
dec
jmp
fs
mov
push
fst
or
xor
push
or
call
mov
lahf
stos
roll
mov
adc
loop
xchg
dec
fisttpll
push
cmp
mov
in
xchg
cmp
fstp
data16
fidivs
adc
jmp
and
std
push
lcall
das
je,pt
outsb
xchg
imul
pop
and
push
arpl
in
scas
dec
ret
mov
cmp
mov
jge
jns
and
pop
ljmp
xor
data16
jl
imul
cwtl
das
add
lret
movsb
lods
shrl
push
mov
sub
xor
into
lods
fucomp
and
lcall
in
test
jae
xchg
dec
adc
fistps
xchg
loopne
addr16
push
movsb
stos
or
int3
lea
imul
sbb
xor
loop
sbb
call
sbbl
gs
mov
in
repz
or
cmc
repnz
jmp
add
cld
pusha
jp
nop
mov
lock
mov
nop
mov
or
or
mov
or
adc
pop
inc
rclb
insl
dec
mov
xor
aam
jo
ja
imul
pop
cmpsl
cmp
and
jl
fmull
fisttps
sub
lahf
fs
add
mov
sahf
subl
adc
jmp
cmp
in
outsl
dec
add
outsb
mov
scas
pop
xor
addr16
jne
imul
out
inc
negb
xchg
dec
jl
adc
pop
fsubr
dec
imul
push
jl
push
cmp
repz
jno
add
mov
xchg
pop
push
adc
push
les
in
shrb
jl
fwait
test
push
add
pusha
fcmove
inc
sti
cmp
jno
sbb
bound
ljmp
mov
add
dec
dec
das
add
call
pand
pop
in
mov
sbb
jmp
lods
and
aam
fcoml
mov
sub
xchg
fbstp
and
out
pop
inc
lahf
sbb
mov
hlt
sarb
pushf
mov
repz
jae
mov
inc
mov
xchg
scas
repnz
cmp
sub
cmp
pop
pop
sub
test
cli
adc
xchg
ds
js
fidivl
std
aam
sbb
paddusw
fcoms
sub
mov
hlt
jns
cmp
inc
cmp
mov
inc
push
xor
xlat
dec
scas
dec
shll
jnp
arpl
pushf
xor
data16
jae
jo
xchg
test
test
mov
lea
dec
pop
subb
ret
xchg
arpl
stos
outsb
dec
or
ret
imul
loopne
mov
lods
or
add
aaa
pop
dec
scas
lret
xchg
pushf
repnz
or
shll
lods
in
xchg
ljmp
mov
sub
sbb
adc
fsubs
push
int3
jle
shlb
je
notb
mov
jg
loop
outsb
sbb
ds
cmp
outsl
ja
lods
test
and
sahf
adc
aas
outsb
test
addb
inc
inc
or
jg
addr16
push
aam
add
stos
xchg
leave
ud0
adc
pop
lahf
inc
lcall
jmp
push
or
push
loopne
pop
sbb
or
sbb
les
sbb
mov
mov
lods
sbb
sbb
xchg
xchg
aas
inc
stos
sti
mov
in
add
rorl
cld
popa
in
and
inc
lcall
sub
or
push
pop
or
jns
dec
xor
lds
sarl
xchg
pop
push
mov
rcrb
mov
aam
xchg
mov
int
fnstenv
sub
jmp
in
xchg
icebp
sub
mov
int
stc
lret
inc
pop
out
fistl
out
and
dec
xchg
popa
xchg
mov
or
dec
xor
xor
mov
xor
lcall
insb
in
sbb
cmp
cmp
xchg
sub
xchg
pushf
or
ja
bound
mov
xchg
mov
sarl
adc
inc
xchg
pop
in
cs
in
sub
inc
jnp
sub
jnp
call
dec
add
sbb
sub
iret
insl
mov
mov
rorl
cwtl
lahf
testb
roll
xchg
xlat
jo
lret
xchg
lock
jno
xchg
push
cmp
das
gs
pop
in
or
fwait
arpl
xorb
xor
iret
inc
lea
adc
pop
js,pn
aaa
js
xchg
lods
mov
sbb
nop
es
out
lcall
scas
add
push
imulb
jo
call
aaa
dec
mov
mov
call
pushf
dec
in
mov
js
mov
add
icebp
fisttpl
jecxz
test
adc
call
xchg
outsl
scas
pop
loopne
push
and
jmp
movsl
push
or
popa
or
mov
mov
sub
mov
js
vsqrtpd
or
mov
jb
rcrl
dec
mov
jbe
push
pop
xlat
out
dec
sub
imul
loopne
jg
outsb
pop
push
outsb
es
pushf
std
movsb
rcll
or
xchg
loopne
aam
scas
or
stos
push
and
loope
jae
lock
pop
xchg
or
mov
iret
cmp
test
mov
arpl
fs
cmp
dec
adc
cmpsb
fstps
divb
cmp
or
xor
scas
lea
and
jl
sbb
mov
adcb
lcall
inc
arpl
fs
lods
pop
inc
dec
pop
aam
outsb
lea
sub
test
push
cs
outsb
dec
and
inc
ss
sub
js
mov
xchg
dec
dec
inc
cli
aad
movsl
cld
inc
movsb
mov
mov
mull
ffreep
leave
decb
dec
mov
mov
mov
fldcw
sub
daa
jns
mov
jmp
ss
mov
popf
mov
shll
mov
cmp
push
lret
ss
outsb
ljmp
int3
jbe
sarb
imulb
sbb
cltd
aad
xchg
jmp
mov
add
imul
dec
or
jecxz
in
and
add
mov
jno
jbe
das
sbb
in
sub
repnz
cmc
cmpsb
fnsave
cmp
xchg
int3
stos
adc
push
pop
sub
sbb
or
testb
inc
mov
leave
mov
xchg
pop
mov
scas
jp
sub
adc
fadds
cltd
enter
test
js
cmpl
add
fstps
pop
mov
push
test
test
cmp
aad
out
cmpsl
lret
movsl
stos
xor
add
lea
xchg
mov
pop
dec
sub
xor
or
dec
clc
popa
add
cmc
cld
je
adc
sub
cwtl
mov
mov
in
adc
jp
insl
xchg
mov
cwtl
js
fidivrl
pop
popa
das
jecxz
ret
inc
sahf
cmp
pop
and
leave
dec
inc
inc
icebp
add
push
lret
adc
mov
inc
roll
adc
outsl
pop
sub
lret
sub
cmp
adc
jg
inc
loope
mov
mov
sub
mov
lds
aad
xor
jne
ljmp
push
mov
ljmp
dec
aaa
dec
je
cmp
or
clc
sbb
inc
xchg
lret
fidivrl
loop
mov
addb
cltd
ljmp
loope
dec
lcall
fisttpll
xor
loope
and
dec
inc
ljmp
add
jmp
into
sub
jp
daa
inc
imul
mov
in
popf
cmpsl
inc
popf
and
xchg
idivb
data16
jns
addr16
pop
adc
gs
pop
jmp
pop
enter
jecxz
bound
adcb
sbb
imul
or
push
push
jo
notl
pop
sub
and
cmpsb
pmaxub
lcall
pop
adc
adc
lock
loope
enter
sub
jns
shrb
repnz
xor
test
inc
or
cwtl
nop
sub
pop
flds
mov
fstl
je
mov
mov
cmp
lods
pop
ds
jnp
addr16
push
dec
add
push
jge
inc
or
push
sub
mov
pop
stc
test
jg
aam
xor
pushf
or
lods
xchg
mov
and
in
jns
insl
repnz
mov
js
icebp
push
pop
xchg
adc
filds
ljmp
fwait
or
and
rcrb
xchg
pop
in
add
adc
les
cli
or
push
jp
repnz
rcl
stos
test
sub
aam
and
mov
out
adc
sbb
out
xchg
cmp
sub
mov
jp
inc
sbb
fucomp
cmp
mov
mov
mov
outsl
or
scas
out
cmpsb
movsb
push
adc
sbb
jo
or
push
pop
jne
xor
in
lcall
add
test
jnp
jp
push
dec
dec
xor
adc
dec
in
push
push
dec
mov
mov
push
fsubl
loopne
fs
test
xchg
sar
cs
fbstp
push
js
fildll
out
adc
pop
adc
mov
rorl
fstps
es
int3
mov
int3
xchg
andl
add
and
les
aas
es
or
sub
pop
rclb
pushf
ud2
jb
jno
test
sub
shl
mov
inc
add
outsb
xchg
pop
push
loope
or
cli
xorb
test
rcrl
pusha
test
adc
or
testl
mov
or
sarl
push
add
and
cmp
aam
adc
lret
lea
insb
mov
sub
lret
cmp
cmp
xchg
sub
outsl
es
lock
stos
enter
mov
push
lret
lods
adc
mov
pop
jne
mov
jmp
ds
mov
mov
jmp
mov
imul
insl
pop
std
out
xchg
cli
imul
aam
icebp
daa
pop
lea
mov
test
mov
mov
pop
dec
sub
subl
inc
jbe
insl
add
das
push
mov
outsl
cwtl
aas
xchg
pop
pop
adc
movsb
or
xor
enter
xlat
mull
loop
jbe
and
out
ret
xchg
movsl
sarl
inc
sbb
sub
arpl
inc
mov
adc
add
fucomi
push
test
lcall
fsubs
mov
cmp
out
inc
pop
pusha
into
and
popl
scas
mov
xor
ret
mov
and
je
fldt
adc
cmpsb
sub
sub
pusha
xchg
lcall
fsubr
sub
ja
popf
xchg
icebp
popa
sbb
data16
add
data16
sub
xor
leave
sti
out
shll
xchg
outsb
mov
sbb
fisubs
ret
sahf
popa
xor
add
lret
xchg
mov
fistpl
jl
loopne
xchg
add
sti
push
adc
cmpsb
xor
lock
inc
dec
mov
adc
jmp
addr16
push
jae
std
jp
adc
push
into
fcmovb
aas
lds
xor
jb
daa
jnp
sub
push
test
inc
sahf
out
jnp
or
fldln2
push
add
cmc
repz
or
sub
leave
out
lret
add
mov
test
pop
inc
add
test
cmp
clc
test
int
pop
xlat
adc
jb
xor
and
insl
mov
cmp
push
mov
rcr
cmp
jns
out
sbb
je
lods
mov
pop
cli
xor
in
and
add
and
cmp
adc
std
jns
outsl
mov
cmp
loopne
fdivl
mov
jbe
xchg
mov
andl
arpl
dec
push
movsb
xchg
sub
or
orb
mov
dec
into
lods
stos
outsl
mov
inc
jge
mov
or
mov
dec
cmpsl
mov
imul
lods
sub
lret
adc
pop
fadds
adc
add
mov
leave
push
fstpt
jb
sbb
nop
loop
es
repz
rclb
cmpsl
inc
mov
loope
push
add
sub
jns
adc
iret
jne
fisubs
mov
jae
lds
lods
jl
mov
mov
xchg
dec
aad
fucom
clc
mov
xchg
lds
inc
push
repz
jb
mov
adc
in
mov
mov
mov
jb
fbld
jo
fbstp
inc
fs
insb
pop
leave
inc
jne,pt
or
and
repz
mov
mulps
ja
loop
jle
ret
ds
xor
dec
mov
jecxz
sub
and
push
call
xchg
fstps
xchg
inc
inc
inc
push
mov
push
not
pop
mov
popa
or
push
push
into
arpl
lahf
lret
fwait
pushl
lock
mov
push
ljmp
jmp
cmp
push
shrb
add
insl
push
outsl
dec
mul
xlat
hlt
in
push
inc
push
mov
inc
dec
add
cmc
push
andb
ret
mov
call
insb
sbb
popf
or
pop
jb
es
nop
sbb
mov
mov
add
loopne
or
rcl
xchg
xor
push
outsb
inc
push
mov
sbb
push
xorb
cmp
leave
fistl
cld
sarl
test
xchg
lods
add
fdivr
mov
push
push
or
mov
fmul
inc
pushf
gs
insb
lahf
mov
sahf
or
xchg
xchg
xchg
int3
lea
jl
or
jno
das
mov
rorb
inc
push
arpl
push
add
mov
inc
lret
pop
aaa
push
dec
pop
lock
sbb
cmp
fsts
int
leave
sub
push
mov
jg
outsl
jne
cs
mov
loope
repnz
outsb
adc
add
faddp
and
jb
jns
mov
cmovae
inc
ja
dec
and
lcall
into
xchg
sub
xchg
pop
cld
inc
pop
dec
clc
xchg
sub
pop
add
push
push
and
out
into
mov
or
adc
inc
fisubrs
call
mov
jnp
mov
sub
daa
sub
inc
or
bound
inc
ljmp
mov
movsl
push
movb
adc
rcll
mull
std
push
add
sub
out
xchg
lock
loop
lock
in
mov
ja
ja
cmp
cmp
xchg
and
fwait
outsb
repz
cmpsl
pop
sub
cmp
sub
test
jae
cmp
push
xchg
scas
mov
sub
repnz
mov
or
arpl
mov
shll
push
out
stos
outsb
out
jo
mov
mov
cmc
cmpsb
adc
mov
push
cmp
cmpl
adc
jae
scas
or
sbb
sahf
pop
add
enter
lock
and
lods
arpl
ds
mov
and
rcl
lds
in
pop
xchg
cmpsb
data16
xchg
shrb
scas
insb
xor
jo
mov
subl
scas
mov
shll
inc
mov
sbb
xor
and
add
dec
mov
mov
and
rclb
lcall
mov
jp
pop
in
fnsetpm(287
inc
popf
pop
popa
stos
or
mov
dec
scas
addr16
js
jle
xor
mov
push
and
call
xor
xor
xchg
ror
or
jbe
jno
sub
scas
push
je
push
jp
and
fcomps
inc
xchg
jmp
inc
cltd
inc
mov
push
jno
lods
int3
aad
dec
pop
inc
ficomps
popf
orb
outsb
nop
add
pcmpgtb
bound
testl
mov
orl
fisubrl
cmp
mov
dec
sub
mov
insl
loop
sub
aad
push
add
xor
aaa
push
dec
std
xchg
or
test
inc
inc
xor
or
pop
pop
fadd
rcrl
sbb
push
ss
or
movb
jecxz
repz
sbbb
fwait
or
negb
insl
adc
cmpsl
mov
cmp
adc
stos
xchg
fadds
cmp
sbb
sbb
mov
adc
sbb
xlat
sub
dec
cmc
mov
inc
aaa
shll
scas
sbb
xchg
in
repnz
test
std
adc
cmpsb
lods
inc
jecxz
mov
fistl
addr16
inc
lods
push
pop
cmp
mov
mov
and
insl
inc
adc
imul
ret
push
icebp
push
lret
bound
push
cmpsl
iret
sbb
jo
pop
inc
sub
sub
rolb
lret
ja
jl
sti
dec
int
shlb
cmp
push
cmp
inc
push
inc
push
ja
jnp
jb
lods
cwtl
std
mov
sbb
sbb
jl
jns
pop
xor
repz
add
mov
dec
test
lret
lea
aam
scas
test
jne
aas
in
aas
ss
xchg
fs
sub
inc
lods
mov
and
movl
push
dec
mov
out
jg
xchg
nop
in
mov
adcb
outsb
test
xchg
mov
sbb
faddp
or
dec
pop
pop
lret
and
fldt
inc
icebp
in
adc
adc
sarl
inc
pop
sbb
xchg
inc
jge
clc
mov
js
mov
add
push
mov
popa
iret
data16
jmp
mov
cmpsb
cmp
xchg
mov
dec
dec
ds
mov
mov
imul
mov
mov
dec
cmpsb
out
add
test
cmp
outsb
jle
and
cmp
dec
sub
adc
cmp
into
imul
adc
jno
or
mov
lods
mov
adc
jp
sub
or
inc
rorb
bound
inc
and
pop
and
movsl
add
fxch
adc
xor
or
mov
js
aad
mov
ds
jg
xchg
cmc
push
or
lods
inc
pop
mov
fisubrl
jo
lods
daa
in
add
and
inc
or
mov
dec
mov
shr
popa
rol
aad
inc
mov
out
das
arpl
rcll
pushf
cmp
shlb
adc
popf
or
cmpsl
nop
rcr
inc
sub
mov
mov
or
or
dec
push
lcall
fs
popl
imul
sbb
in
pop
sahf
jne
iretw
jae
cmpsl
push
and
cmc
jle
ljmp
jns
test
mov
push
mov
arpl
mov
ja
test
repz
sarl
mov
clc
loopne
cwtl
shlb
hlt
shrl
jns
xor
jb
add
sub
mov
rclb
fnclex
lcall
loop
arpl
dec
cmp
lods
cmp
mov
inc
push
mov
mov
movsb
or
test
jg
jmp
xor
lods
mov
mov
cmovs
inc
scas
fistps
fiaddl
test
enter
aaa
jecxz
cwtl
or
xchg
mov
lea
xchg
sub
mov
repz
mov
cmp
jns
xchg
ja
push
push
fwait
sub
jno
lcall
sub
pop
mov
mov
adc
jo
push
popf
aad
loopne
sub
lahf
jns
push
daa
push
fs
lahf
pushf
les
add
gs
sub
mov
jg
add
sbb
or
into
cmp
xor
test
push
loop
add
in
incl
adc
sahf
lea
xchg
insl
loope
fdivr
mov
pop
cwtl
mov
cmpsl
dec
push
test
or
fs
add
insb
test
jo
repz
sbb
ss
cld
lock
bound
xor
mov
jle
enter
movsl
rcrl
data16
out
and
jbe
inc
pop
repz
and
and
sub
ja
push
pop
add
in
mov
mov
pop
ja
bound
pop
clc
bound
lods
fldl
mov
aam
lahf
cmp
insl
mov
xchg
scas
mov
aas
inc
ret
and
int3
addl
das
jbe
fwait
adc
pop
mulb
or
notb
or
imul
mov
arpl
jae
sbb
push
jecxz
jno
add
les
sbbb
loop
mov
mov
lret
lds
and
pop
pop
xlat
mov
and
lods
mov
mov
cltd
ss
push
or
mov
imul
sbb
push
stc
test
mov
out
mov
loope
dec
ja
jb
iret
roll
aas
cltd
repz
aam
popl
push
push
mov
sub
dec
mov
outsl
addr16
push
dec
das
stc
sbb
xor
pushf
xor
jp
sbb
mov
fstp
jo
xor
pop
cs
xlat
jge
dec
outsl
or
push
jmp
adc
push
mov
xor
and
xchg
gs
test
out
dec
arpl
stos
icebp
movsl
mov
dec
dec
or
and
or
lods
sub
rclb
imul
push
adc
sub
pushf
mov
adc
mov
incl
pushf
jl
js
es
xor
pop
int3
ret
jecxz
stc
fsubrp
sub
repnz
cmc
add
icebp
ret
jmp
dec
and
popa
add
mov
mov
push
stos
leave
xchg
jno
push
cmp
push
adc
adc
and
mov
aaa
mov
and
cmpsb
xor
and
fsubrp
pop
cmp
and
add
mov
idivb
inc
mov
mov
mov
cmc
or
adcl
sbbl
push
pop
repnz
outsb
push
gs
std
jmp
add
adc
push
mov
rol
mov
add
cmp
insb
mov
jg
gs
mov
inc
sub
andl
fmull
cmp
jno
insl
dec
int3
mov
inc
mov
dec
vpunpcklqdq
ret
rep
push
push
adc
mov
pop
jmp
dec
inc
pop
sbb
push
icebp
mov
adc
insl
push
in
ret
sarb
cltd
movsb
mov
test
sbb
push
inc
lahf
sub
scas
idivl
jp
stos
dec
xor
mov
inc
mov
pop
and
cld
mov
and
or
aaa
dec
jle
mov
pop
cltd
jns
fildll
cmp
and
xor
outsl
and
pop
jge
and
mov
test
subb
lods
inc
shl
mov
cmpsl
adc
jge
pop
sahf
hlt
iret
mov
icebp
sub
mov
inc
mov
repz
cmc
xor
push
aam
nop
mov
sbb
jmp
repnz
xchg
out
pop
dec
in
xchg
sahf
jbe
adc
daa
and
jmp
cmp
push
pop
xor
push
cs
xor
mov
jb
outsb
fcomip
or
add
ja
dec
rsqrtps
je
jae
or
cmp
xchg
inc
cmpsb
sub
sub
xor
xchg
movsl
cmc
outsl
xorl
dec
mov
or
mov
xchg
xchg
push
shlb
ja
jge
mov
jmp
mov
imul
lods
call
xchg
ficomps
adc
lds
add
aaa
scas
popf
inc
fmuls
pop
popa
jb
mov
xor
pop
push
mov
test
sbb
cltd
sub
or
mov
add
hlt
dec
mov
and
int
adc
and
frstor
roll
loope
decb
jmp
in
mov
lret
xchg
imul
stos
jne
and
addr16
rcrb
inc
add
and
push
and
stos
xchg
imul
add
lcall
jnp
imul
stc
in
call
movsb
xchg
add
arpl
or
xchg
loop
push
iret
insb
je
xor
inc
fstpt
push
rcrb
push
insl
icebp
stc
mov
iret
popa
pop
ja
inc
hlt
cli
or
shr
push
mov
stc
std
push
dec
mov
adc
mov
cmp
leave
mov
mov
jnp
push
fistpl
mov
add
jg
lret
jb
subb
fwait
xchg
jg
push
lcall
sahf
iret
jbe
addr16
and
jnp
sub
negb
dec
jb
loopne
fcompl
in
testl
cld
repnz
push
stos
inc
sar
adc
jbe
jns
aas
imul
fldenv
push
in
sti
fldt
xchg
mov
shlb
and
sub
mov
mov
or
add
mov
dec
jne
mov
inc
imul
shrb
mov
loope
push
rclb
mov
shr
stos
inc
xor
add
mov
cmp
in
minps
xchg
es
mov
cmp
adc
idivl
or
and
mov
insb
call
mov
or
insb
jne
scas
je
mov
lahf
sub
or
xchg
or
daa
sub
mov
mov
mov
cmc
shlb
pop
sbb
pop
popa
clc
cwtl
dec
xor
xchg
in
inc
dec
or
insb
xchg
cmpsl
rclb
push
incb
aad
pop
push
jbe
dec
cltd
daa
add
push
movsl
ret
xchg
xor
fdivrs
xor
clc
mov
inc
iret
push
stc
out
outsb
sub
pop
mov
inc
sbb
and
out
rorb
daa
sahf
aas
lcall
test
dec
in
sti
popl
jns
pop
or
mov
xor
jmp
jns
mov
into
cmp
stos
push
lods
lds
shl
sbb
mov
mov
jge
add
xchg
inc
movsb
rcll
inc
mov
inc
in
stc
add
pop
push
je
mov
cs
mov
ss
sub
mov
xchg
jno
fnstsw
sub
pushf
out
xchg
in
in
rol
lods
repnz
fcomps
mov
or
inc
int3
jne
and
push
push
sbb
outsb
adc
in
clc
cmp
cmp
or
inc
popa
jns
ret
fldcw
add
addr16
cmc
call
sub
mov
xor
inc
push
cmpsb
popa
cwtl
pop
addr16
sub
sub
leave
fs
and
fwait
mov
sbb
mov
ds
sbb
cmc
inc
fsincos
or
test
loopne
loope
push
mov
lret
xor
cld
fwait
push
sbb
inc
cld
sbb
mov
fs
xor
dec
test
enter
fisubl
lds
cltd
and
shrl
pop
jnp
int3
loop
adc
xchg
jge
imul
push
test
add
ret
iret
xchg
insb
into
dec
gs
mov
and
or
xchg
sbb
idivl
test
lret
inc
lock
sbb
jbe
cmp
leave
into
insb
daa
or
ljmp
in
push
xor
pusha
or
push
and
xor
and
into
jae
add
in
xchg
jmp
pop
xchg
sbb
and
dec
pop
les
jb
mov
xchg
or
and
sbb
and
lea
mov
or
out
mov
aam
lahf
or
ret
out
popa
int
out
mov
mov
jne,pt
adc
stc
mov
push
inc
clc
out
leave
sub
es
mov
and
add
out
pop
and
movsl
push
xor
push
shl
cmp
pop
scas
cmp
shll
xchg
push
fildll
pushl
js
lahf
mov
pushf
ds
rcrb
imul
fwait
mov
sub
pop
daa
and
or
pop
scas
mov
sbb
push
aad
mov
lods
fisubl
loopne
fs
push
sub
lret
jbe
mov
inc
sbb
sub
ret
jb
enter
out
dec
adc
push
sbb
aam
xchg
xor
inc
scas
add
add
movsl
fimuls
into
mov
cli
sbbl
xchg
loopne
pop
jmp
pusha
jp
aam
and
sbb
inc
sbb
leave
jo
sarl
out
js
push
xchg
bound
test
pop
mov
je
sbb
out
stc
dec
or
pop
cltd
repnz
sub
bound
xchg
mov
mov
rclb
push
mov
mov
andl
outsl
sbb
or
mov
sbb
mov
adc
adc
add
lret
mov
push
mov
cvtdq2ps
into
outsl
sbb
mov
lahf
test
pop
test
mov
mov
cmc
xlat
fistpll
lds
fsubs
call
mov
jae
iret
mov
xor
lret
pushf
cmp
xor
insl
mov
dec
add
dec
lods
in
sub
rorb
and
sub
inc
adc
add
xchg
push
cmp
mov
popw
and
xlat
cwtl
pushf
out
xchg
cmp
filds
mov
mov
pusha
fdivrl
js
pop
stos
add
shl
or
call
fadds
jle
mov
imul
dec
jns
nop
add
mov
imulb
jae
loopne
je
or
cmp
loopne
scas
pop
mov
or
add
popa
inc
mov
daa
or
sub
xchg
and
xchg
sbb
sbb
cwtl
ljmp
xor
outsb
pop
jl
cld
imul
sahf
xchg
mov
pop
xorb
cltd
dec
lods
test
scas
jbe
xchg
pop
jns
adc
rorl
or
imul
push
lcall
inc
inc
adc
test
jle
gs
push
and
sahf
imul
iret
pop
fsubs
cltd
aad
leave
int
aad
fdivl
pop
or
sub
mov
fadds
popa
cmp
cmp
outsb
sub
movsl
gs
pushf
cmc
sbb
cmp
jno
or
jns
pop
mov
mov
mov
sbb
mul
lds
jle
out
mov
push
dec
mov
repnz
out
jge
icebp
mov
rorl
xor
je
scas
fs
gs
jg
lret
in
sub
inc
lret
mov
add
add
lcall
sbb
int3
xchg
jae
adc
daa
mov
jp
stc
push
sub
das
fwait
mov
cld
pop
popf
test
mov
xchg
mov
loope
pop
in
daa
xchg
iret
into
jnp
sbb
push
arpl
mov
jnp
jge
or
ds
test
lock
adc
or
scas
jnp
sbb
scas
mov
lcall
add
xchg
nop
stos
push
jecxz
test
xor
mov
lea
jns
cld
sub
lods
push
fists
insl
popf
mov
mov
fistpll
into
dec
dec
xchg
xor
cmp
cmp
pop
cmp
lret
xchg
dec
adcb
push
jb
pop
in
mov
cmp
xchg
sbb
jb
mov
ss
inc
int3
dec
lea
jle
xlat
stos
pop
mov
cmp
inc
and
fcompl
shll
jo
fsubrs
fwait
xchg
scas
std
iret
lods
sbb
mov
lahf
dec
mov
js
mov
movsb
ret
fs
fimuls
fdivr
addr16
addb
shr
das
int
push
mov
movsb
lret
fsubrs
xor
leave
or
adc
mov
mov
inc
sahf
mul
icebp
mov
and
out
in
loopne
or
mov
mov
scas
mov
out
adc
mov
addr16
scas
or
dec
mov
dec
gs
pop
cld
roll
push
mov
insl
into
nop
xchg
fxrstor
mov
mov
fmull
fisttpll
loope
cwtl
jp
bound
lahf
aad
push
mov
aam
or
xor
push
adc
push
cwtl
xchg
pop
out
xchg
mov
cmp
bound
shl
dec
clc
add
cmp
es
xor
ror
sarb
mov
jle
filds
inc
xchg
mov
iret
andb
aaa
out
push
mov
mov
push
sbb
dec
adc
jns
dec
xchg
leave
cmc
mov
sbbb
and
jecxz
dec
or
pop
in
pop
movsl
lea
push
pop
jae
mov
add
jle
outsb
insl
xchg
jnp
jl
xchg
push
sbbb
call
scas
mov
dec
cli
outsb
pop
pop
outsb
pusha
sub
xchg
enter
repz
loopne
cwtl
adc
lods
test
add
popf
cmp
sub
mov
pop
xor
jecxz
jge
add
lea
push
mov
notb
mov
dec
and
xchg
fdivrl
repz
pop
adc
jae
cmp
cld
popa
ljmp
xchg
movsb
ret
pop
push
pop
ljmp
lods
cmpb
insl
xor
je
mov
loopne
iret
jnp
cmc
lret
pop
fwait
xor
fistpll
pop
int
dec
lret
cwtl
sarb
pop
mov
mov
cmp
arpl
jne
std
pop
sarb
push
lret
in
mov
stc
push
cmp
push
xor
pop
jnp
add
lea
repz
mov
ret
sub
aam
mov
push
movsl
and
mov
scas
cmp
pop
test
or
shll
xchg
dec
sbb
fcoms
sbb
ret
jl
mov
ss
sub
std
addr16
outsl
add
pop
jecxz
popa
roll
dec
imul
insb
push
mov
sub
jmp
sub
or
or
cmc
dec
cmc
cmp
fwait
outsl
pop
sub
inc
cmp
or
mov
in
mov
or
ret
mov
jnp
inc
cmp
sub
and
inc
aaa
cmp
orb
dec
ror
loopne
jmp
xchg
incb
adc
imul
and
pop
outsl
pop
loope
scas
jl
js
add
jns
ret
iret
or
xor
arpl
ffreep
lret
push
xchg
pop
rsm
adc
push
pop
push
cltd
rcrl
out
daa
into
push
inc
lret
xor
js
hlt
jecxz
mov
xchg
dec
push
dec
mov
mov
add
sti
or
pop
dec
push
es
xchg
dec
subb
lods
pushf
add
aas
ret
ret
mov
cli
in
aas
cwtl
out
int
idivl
fsts
outsb
xor
sbbb
jmp
add
and
rcrb
or
je
in
add
cmp
aas
push
xor
pop
mov
insb
or
std
xchg
int3
xchg
rclb
mov
push
mov
add
pushf
aaa
and
inc
addb
or
inc
cmp
inc
popf
and
push
leave
out
data16
mov
jae
test
or
daa
xor
lea
mov
icebp
jle
xor
js
in
lods
inc
int
shl
mov
outsl
or
jle
mov
jge
repnz
mov
pop
xor
push
or
jle
jns
sbb
add
adc
popf
sbb
jecxz
adc
pop
icebp
shlb
lahf
outsb
outsl
adc
int3
lods
je
fucomi
sbb
push
into
pop
mov
mov
mov
pusha
mov
fsts
inc
cmp
fsubrs
sub
lea
dec
jge
dec
xor
jbe
dec
and
fwait
cmp
aad
pop
scas
mov
loop
jo
bound
mov
fstpt
adc
xor
push
xchg
mov
mov
addr16
in
scas
mov
mov
mov
inc
outsl
jo
inc
outsb
pop
in
xor
mov
push
jmp
sahf
pop
mulps
rcll
imul
negl
orb
fadds
and
arpl
scas
mov
adc
and
inc
cmp
enter
mov
add
std
btl
mov
xor
jo
call
les
cmp
leave
test
sti
inc
sbb
jbe
cmp
loop
ljmp
xor
add
cltd
ror
and
or
imul
daa
sbb
dec
or
dec
xchg
jo
xchg
rorl
dec
dec
sub
lahf
enter
int3
inc
insl
test
cmp
insl
or
lahf
loopne
aas
adc
popf
push
das
mov
inc
js
add
cmp
add
fsubl
push
mov
pop
xchg
leave
mov
add
in
or
movsb
pop
out
push
cmp
outsb
adc
lret
dec
clc
pop
lea
mov
push
sti
sub
lret
mov
xor
push
xorl
inc
mov
lret
test
out
in
ret
mov
lods
sbb
lret
imul
push
sbb
mov
movsl
jbe
imul
clc
sarl
sub
jno,pn
outsb
jne
fstpt
mull
xor
sub
jbe
movzwl
mov
sti
adc
or
dec
fwait
push
lret
clc
leave
jge
mov
out
add
les
js
xlat
fcoml
jno
adc
and
das
sub
daa
out
inc
xchg
cwtl
adc
add
pushf
and
add
cld
sub
roll
cmpsb
adc
loop
or
int3
sub
cwtl
mov
jns
dec
mov
dec
sbb
push
mov
es
mov
mov
mov
outsl
test
ljmp
mov
sbb
pop
dec
and
mov
fwait
jb
jle
xchg
cmpsb
scas
sub
and
xor
loopne
xor
or
xor
lods
pop
ret
sbb
imul
aad
cld
sbb
ret
add
mov
push
subb
aas
sbb
xlat
cwtl
push
bound
movb
pop
arpl
push
mov
test
jge
and
gs
loop
mov
jo
add
movsl
xchg
push
test
popf
sub
ja
loop
jl
push
aaa
cs
sbb
pop
add
adcl
stos
js
enter
sti
sti
aad
negl
cmp
jle
pushf
inc
push
inc
inc
enter
fsubl
jge
call
mov
shrl
push
xchg
lcall
out
add
lods
cmpsl
mov
mov
or
loop
jnp
or
dec
rorl
outsl
pop
test
imul
and
adc
jge
cwtl
neg
out
mov
loop
faddp
popf
imul
popf
cwtl
cld
imul
and
and
test
icebp
dec
ret
mov
idivl
and
or
mov
dec
push
lahf
js
pusha
add
sub
scas
insb
xor
stos
xchg
and
jg
mov
callw
loope
fmull
iret
add
icebp
mov
sti
enter
pusha
mov
sbb
xor
inc
push
sbb
cwtl
shll
pop
hlt
mov
bound
movsb
jl
sbb
cmp
pop
cmpsl
pushf
ret
mov
lcall
sbb
insl
jge
loope
fisubs
pop
cmpsb
icebp
in
popa
pop
xchg
ret
jp
mov
icebp
mov
mov
add
iret
repnz
inc
adc
cmp
inc
lcall
add
lods
aaa
outsb
pop
gs
jmp
cmp
xor
mov
push
mov
mov
jo
cmp
add
lret
insl
push
xor
adc
sbb
jns
xchg
pop
or
fstl
mov
repz
ficoms
push
push
xchg
push
dec
iret
lcall
hlt
push
fnsave
test
and
rorl
pop
gs
repnz
lock
cld
jno
xchg
push
or
push
loopne
pop
xor
hlt
cmp
incb
jg
sbb
or
cmp
pop
adcb
ljmp
pushf
pop
cmpsb
jae
or
mov
mov
les
mov
mov
or
pushf
fisttps
sbb
inc
cmp
mov
cs
leave
push
add
aaa
cli
lea
mov
in
pushf
sub
aam
out
int
ret
test
je
repnz
or
lock
fcoms
push
lcall
xchg
and
or
add
dec
lret
inc
pop
cwtl
leave
inc
mov
inc
popf
add
test
insl
push
outsl
mov
push
add
inc
jbe
mov
push
adc
mov
addr16
shll
movsb
nop
add
call
lock
sub
adc
mov
lahf
xor
inc
mov
mov
andb
push
les
jmp
xor
mov
sahf
sti
push
movsb
jnp
inc
dec
fcomps
sti
mov
shl
clc
test
mov
les
std
mov
lock
push
and
sub
or
fdecstp
xlat
insl
push
jo
xor
movb
fcompl
fisubrl
rcrb
mov
jmp
mov
bound
insl
fwait
push
lock
cmp
mov
loop,pt
test
popa
mov
adc
pop
xlat
xor
add
mov
adc
xchg
xchg
or
mov
jle
adc
gs
dec
sbb
jp
aam
mov
daa
stos
mov
in
shlb
divb
int3
or
addr16
in
push
or
das
pop
jl
adc
test
jp
inc
stc
stc
mov
push
into
pop
test
stos
mov
ficompl
daa
pop
jp
ret
cmp
pop
jmp
sub
lea
jo
bound
mov
inc
cmc
xchg
pop
sub
mov
dec
shrl
outsl
sub
loopne
or
out
gs
imul
sub
add
cmpsb
mov
lods
inc
pop
mov
push
push
xor
fldt
mov
xchg
xchg
les
inc
pop
mov
jecxz
sub
call
mov
adc
pop
lock
pop
idivb
test
aaa
sub
jle
mov
lock
pop
or
daa
cwtl
imul
xor
jbe
lret
adc
out
lock
fnstcw
inc
pushl
stos
loope
gs
dec
and
pop
sbb
enter
test
pop
in
pusha
mov
sbb
jne
inc
adc
push
in
xchg
adc
push
cltd
movsb
sbb
in
add
mov
and
ss
adc
leave
loope
mov
xchg
pop
rclb
xlat
xchg
lods
push
fwait
dec
lods
jp
out
pop
mov
cmc
push
add
pop
add
mov
rolb
push
incb
arpl
ret
lret
loope
push
mov
gs
inc
pop
and
jmp
stos
adc
iret
adcl
lock
pop
test
adc
inc
jge
inc
pop
xchg
lds
push
je
bound
sbb
mov
xor
pushf
mov
stos
enter
cmp
mov
add
in
xor
lods
pop
in
aas
ficompl
bound
jns
add
adc
out
lea
sti
inc
cmp
add
roll
test
or
adc
iret
cmp
dec
xor
aad
dec
mov
rcll
sbb
iret
cwtl
js
and
aad
fcomip
jecxz
std
enter
cli
cmp
movsb
rcll
pushf
pushf
fidivrs
jge
scas
pop
jle
sbb
xor
add
cmp
aam
pop
mov
lret
into
mov
in
push
sub
mov
adc
and
es
and
shll
or
outsl
and
xchg
push
mov
or
nop
dec
or
dec
lahf
fucomi
lods
int
scas
sbbb
in
inc
mov
test
out
pop
addl
cwtl
movsl
or
sub
jbe
dec
aam
pushl
out
pop
mov
sub
mov
je
jecxz
mov
mov
mov
ret
fcom
shll
popa
jp
pop
cmc
jns
fwait
cmp
inc
bound
jb
jl
pop
pop
fildll
rcl
int
jg
sahf
and
jo
mov
pop
sub
cmp
sub
test
lea
sbb
xchg
hlt
pop
stos
out
jmp
add
loope
repz
test
xchg
scas
jae
mov
nop
lock
xlat
adc
push
testb
dec
cmp
in
xchg
add
leave
test
add
fstps
lods
in
mov
das
adc
ret
xchg
cwtl
in
orl
pop
cmp
push
cmp
repnz
aad
movsb
or
fisubrs
cmp
jne
mov
pop
mov
enter
repnz
pop
push
aam
inc
std
jmp
push
mov
cmc
dec
cmp
pop
andb
pop
leave
cmc
or
test
test
testl
popa
or
mov
lock
add
jo
pop
ret
mov
mov
into
mov
xor
mov
xchg
jge
cwtl
shl
or
and
adc
ds
test
fsts
jo
fmuls
and
mov
jle
push
adc
xlat
test
jle
lea
popf
movsw
call
dec
pop
xor
mov
imul
pop
lret
jae
pop
aaa
dec
js
inc
cmpb
xor
out
dec
mov
xor
pop
push
mov
mov
fadds
ljmp
sbb
fs
in
cs
or
pop
push
xchg
lods
stos
ja
mov
mov
or
aaa
jle
mov
adcb
sarb
and
dec
ret
mov
sub
mov
mov
push
or
int3
stos
cmp
lahf
jmp
inc
pop
gs
mov
mov
mov
daa
xor
loop
ljmp
jmp
push
bound
lock
xor
sbb
ficoml
mov
or
push
or
xchg
pop
addr16
xchg
fcom
push
pop
add
push
push
cmpsb
cs
lahf
decl
call
testb
mov
pop
in
outsl
cmpl
sbb
mov
int3
cs
sub
and
xor
fbld
movsl
test
iret
pop
dec
sbb
adc
xchg
xchg
sti
insb
fwait
xchg
mov
jmp
and
inc
jb
mov
dec
fndisi(8087
in
sbb
push
insb
sbb
cli
push
repz
cmp
notb
fiadds
pusha
mov
outsb
and
jne
addb
push
mov
push
in
cmpsb
rolb
mov
icebp
xor
data16
aad
stos
cs
push
adc
mov
out
adc
rcr
inc
xor
adc
movl
out
popf
adc
in
xchg
shr
mov
xchg
and
test
mov
inc
movsb
pop
mov
xor
push
repz
imul
or
push
jmp
cmp
adc
adc
cmp
mov
jb
js
fmull
lcall
insl
lret
movsl
push
fsubrl
sahf
cs
mov
adc
imul
sbb
and
aaa
add
les
mov
adc
sub
mov
jns
bound
stc
jl
jns
repnz
outsl
stc
inc
jle
mov
xchg
lock
ja
dec
cwtl
add
gs
jecxz
mov
push
inc
push
scas
mov
jnp
jno
cmp
xchg
aaa
jnp
mov
lret
push
pop
cli
inc
adc
test
or
test
leave
fidivrl
add
rol
mov
push
adc
dec
addb
lret
jp
cmp
inc
jle
movlhps
lods
pop
sbb
fldt
in
fdivrs
mov
mov
fstl
xchg
stc
xchg
push
bound
mov
inc
pop
pop
inc
clc
mov
in
out
xchg
pop
pop
and
arpl
iret
xchg
xor
dec
cli
inc
mov
fisubrs
dec
cld
cli
adc
int3
and
test
outsl
add
push
mov
movb
mov
push
repz
cmp
xor
std
not
jnp
pop
jle
shl
mov
dec
loope
les
or
test
and
js
iret
data16
mov
std
aas
cwtl
in
push
sub
into
stc
sahf
and
lret
and
xor
push
push
repz
std
in
inc
jp
mov
les
jae
mov
pusha
movsb
cmpsb
adc
das
out
sub
mov
inc
nop
ficoml
xchg
xchg
test
xor
pop
mov
or
cltd
pop
jmp
sub
je
jge
test
or
mov
mov
mov
shlb
cmc
into
xchg
add
xchg
mov
pop
fsubrl
pop
xor
mov
dec
push
and
arpl
add
insl
and
cmp
add
sarl
mov
cmp
jo
test
jb
pusha
lds
aaa
mov
jo
adc
iret
and
lods
mov
xchg
lock
pop
out
rclb
scas
outsl
scas
outsl
ret
or
cltd
xor
lock
pop
push
int3
fldt
jge
jmp
mov
repnz
add
stos
jne
mov
outsb
mov
cwtl
addl
sub
ja
das
imul
imul
shlb
rcll
sbb
stc
jp
push
mov
test
pop
stos
mov
push
lods
or
mov
mov
push
add
in
add
xchg
add
std
dec
cmpsl
inc
push
inc
adc
xchg
pop
arpl
ja
jge
xchg
jno
das
mov
test
in
sub
inc
aad
out
test
sub
inc
xchg
mov
insl
or
aas
aam
daa
inc
fdivrs
negb
sub
inc
lds
jno
sub
push
dec
cmpsl
fiadds
push
mov
sbb
dec
pop
jle
addb
stc
mov
in
lahf
dec
and
cwtl
pusha
sub
push
rorl
sub
cmpsl
scas
fwait
mov
pop
pop
lea
jecxz
clc
cmp
cmp
leave
mov
mov
movsl
mov
sub
cmp
xchg
icebp
cmp
es
add
adc
insl
inc
cmp
cld
sub
jmp
push
jno
xor
cld
sbb
mov
jo
pop
push
pushf
sub
add
lret
pusha
push
push
std
mov
xchg
mov
dec
jnp
pop
xchg
les
js,pt
decb
out
outsl
into
sub
iret
insb
xor
lahf
fwait
or
test
cmpsl
sbb
push
sbb
data16
mov
sahf
push
into
cmp
ja
nop
ja
adc
out
mov
xchg
jb
pop
les
sub
ja
dec
xor
pushf
sbb
ds
lods
fimuls
cld
dec
test
xchg
xor
pop
inc
xorl
xchg
pop
imul
push
push
or
sub
dec
int
into
push
ja
sbb
sub
cmp
sbb
test
popa
sub
test
cmp
lcall
int
adc
or
pushf
lret
dec
hlt
pop
add
cs
push
arpl
js
outsb
push
xchg
mov
outsb
dec
push
add
mov
adc
cmp
inc
rcl
fcmovb
das
js
mov
cs
jne
dec
aas
bound
inc
pop
fdivrl
xchg
rcr
dec
add
xchg
fsts
push
je
lea
fwait
dec
out
push
cltd
mov
adc
mov
test
ficoms
movsb
std
cmp
nop
mov
pop
xchg
mov
mov
fisubrl
test
dec
sti
leave
xchg
std
jne
adc
add
mov
mov
xchg
add
imul
daa
push
or
xchg
ja
adc
mov
arpl
mov
cmp
xor
add
cli
mov
jg
sti
xor
dec
nop
mov
xorb
sub
out
mov
cmp
addr16
xchg
jg
dec
adc
outsl
pop
add
xor
ss
cmc
aam
sub
adc
test
fdivrl
jge
cmp
jmp
insl
movsl
push
cltd
dec
shrl
mov
pushf
xor
das
mov
adc
bound
shlb
dec
rorl
mov
enter
daa
cmp
mov
mov
fwait
dec
popf
mov
rcll
div
jecxz
jmp
popa
sbb
stos
out
sbb
in
outsb
call
fs
mov
test
adc
fsubrl
mov
in
xchg
dec
bound
push
cmc
push
mov
jle
cmpsb
ja
mov
jo
mov
sbb
xor
aad
movsl
add
cmpsl
scas
and
inc
push
iret
gs
mov
in
add
sbb
jp
adc
fisttpll
movsb
xor
leave
cmp
push
out
inc
sbb
inc
adc
push
adc
inc
pushf
mov
xor
test
scas
push
stos
add
adc
mov
testb
or
mov
mov
sti
xchg
test
aad
pop
jno
sub
dec
lds
cmp
cmpsb
cmp
in
enter
int3
pop
lret
pop
xor
clc
inc
fldenv
mov
cmp
pop
ss
cmp
lods
mov
cmc
outsb
loope
xlat
sbb
dec
sbb
data16
das
cmp
mov
testb
fisubl
sub
lock
mov
clc
sbb
data16
fmull
outsl
mov
pop
and
fcoml
cmp
cli
sbb
iret
push
pushf
mov
inc
sbb
mov
outsl
adc
rcll
mov
rcrb
sti
push
pop
scas
imul
pop
xchg
add
sbb
shr
repz
fbstp
cwtl
pop
and
sub
js
jno,pt
pop
sti
outsl
add
add
je
fisubl
pop
fucom
mov
addr16
cs
xlat
or
in
neg
pop
jns
dec
test
jmp
fidivs
jp
repz
adc
repz
pop
pop
pop
lret
adc
mov
popf
rorl
iret
mov
ja
loop
loop
fcmovb
test
push
xchg
pop
js
xchg
std
call
cli
jecxz
mov
mov
jb
mov
add
or
push
in
push
mov
mov
mov
aas
aaa
push
cmp
outsl
sub
add
pop
ret
stc
rcll
inc
outsl
sub
gs
mov
dec
push
fdivs
mov
and
pop
jnp
or
pop
fwait
popa
adc
sbbl
or
out
rcrl
iret
leave
ret
xchg
xchg
in
xchg
add
inc
movsb
out
inc
xchg
cwtl
jbe
xchg
into
ret
cmp
ficomps
popf
je
sbb
push
lcall
fstps
cmp
scas
dec
popf
ss
sbb
or
inc
and
inc
in
faddl
insb
into
and
decl
lcall
adc
mov
lahf
or
negb
enter
in
mov
inc
push
test
mov
cltd
xor
cmp
sahf
inc
out
roll
cmp
mov
dec
push
scas
out
mov
out
inc
pusha
mov
add
or
insl
push
or
mov
fistps
pop
aas
subb
sbb
jo
in
cmp
subb
les
push
jp
mov
jl
xor
mov
and
or
cmpsb
push
xchg
stos
negl
inc
push
push
aas
div
push
dec
mov
mov
dec
mov
shl
sbb
xchg
push
and
sbb
sbb
mov
jno
int3
hlt
dec
pop
push
lcall
iret
mov
sub
loopne
add
add
cld
xor
mov
fdiv
cs
and
mov
iret
fistps
in
mov
mov
pcmpeqw
fdivrs
es
sub
fwait
repnz
sub
imull
ss
bound
or
dec
ja
mov
add
arpl
cmp
inc
lods
lcall
inc
mov
repnz
mov
call
cmp
or
dec
ret
xchg
fs
sbb
daa
pop
or
lcall
icebp
pop
push
sbb
adc
cmc
nop
repnz
lcall
sahf
ret
test
stos
dec
jp
jns
pop
or
int
inc
ds
xchg
sbb
sbb
hlt
out
movsb
bound
xor
orb
cmp
outsl
mov
cli
mov
or
les
js
repnz
and
mov
jp
push
aad
and
inc
cwtl
loop
mov
fbld
scas
dec
add
lods
test
cmpl
aam
andb
sbb
add
add
pusha
outsb
sti
mov
gs
cmp
lods
mov
lods
pop
inc
xor
aaa
dec
fadds
or
or
adc
fwait
jge
insl
jne
dec
jns
daa
cwtl
mov
mov
dec
cmp
ljmp
push
lods
and
mov
push
lea
movsl
dec
mov
sbb
mov
and
out
pop
aam
frstor
lods
cmc
fdivl
enter
jmp
cmpsb
sub
je
cmpsb
inc
out
push
lcall
xor
mov
add
lock
sarb
jbe
clc
push
cli
adc
push
lods
out
and
enter
imul
pop
mov
xchg
mov
add
sbb
roll
sub
cmc
sti
cmpsl
mov
out
sbb
mov
xchg
or
movsl
push
push
sbb
pop
fistpll
dec
adc
adc
cmp
fisttpl
dec
outsl
lock
in
xorl
scas
in
xchg
in
cld
mov
mov
pushf
pop
sti
div
mov
aas
jb
cmp
pop
push
push
cmp
dec
inc
jns
iret
cmp
xchg
loopne
dec
aaa
xchg
inc
jnp
mov
ja
rolb
xor
adc
test
cltd
or
push
lret
cmp
sbb
mov
icebp
fs
mov
sbbl
inc
jp
loope
inc
dec
and
jne
cs
mov
dec
or
insb
mov
arpl
xchg
movsl
shll
inc
dec
lret
adc
mov
xorl
aas
ds
and
xchg
and
xlat
std
sbb
stos
or
jne
pop
sub
mov
sahf
mov
dec
fimuls
inc
cs
mov
outsb
inc
push
sbb
or
inc
fbld
stc
inc
mov
mov
mov
sub
mov
inc
sahf
pop
cmc
mov
in
icebp
xor
decb
pop
stos
addl
mov
xor
jns
xor
mov
fbstp
cmpsl
gs
jg
pop
add
mov
sbb
jp
inc
in
jne
shr
out
xorl
int3
out
ljmp
scas
push
repnz
jno
pop
pop
push
push
dec
rcrb
int
addl
fs
xor
adc
jecxz
cmpsl
in
jns
jno
lcall
movsl
ljmp
movb
sbb
push
inc
add
sub
dec
or
mov
mov
pop
mov
stc
mov
inc
adc
frstor
cmp
jg
sbb
pop
test
push
jmp
rolb
push
xchg
adc
jle
sbb
push
pop
in
cmp
insb
shrb
mov
sbb
add
xor
jnp
xlat
xchg
adc
fcomps
out
test
ja
rep
inc
mov
sub
push
push
mov
pop
popl
sbb
je
arpl
cmc
mov
leave
adc
dec
mov
out
test
fyl2x
ljmp
test
arpl
xor
movsl
fistpl
pop
and
lcall
fmull
dec
lahf
cmp
daa
daa
jecxz
mov
idiv
mov
popf
repz
dec
stos
pushl
mov
shrb
popa
sub
push
pop
dec
mov
jns
shlb
xchg
push
push
stos
popl
mov
mov
mov
add
inc
dec
fstl
shr
pop
lods
jae
pop
mov
insb
repz
fsubr
lea
rol
inc
in
dec
bound
cwtl
fadd
daa
int3
mov
cltd
arpl
lea
push
mov
sub
inc
inc
ucomiss
ror
jle
int
push
pop
clc
fildl
add
jns
inc
aad
lods
sub
test
movsl
fildll
mov
and
pop
push
mov
shr
or
fdiv
cmpsb
cli
lods
outsb
pop
jecxz
mov
mov
mov
fstpl
les
mov
sbb
in
popf
jns
and
xchg
lods
imul
pop
aas
add
jo
cmc
xlat
movsb
inc
cmp
scas
xor
xchg
adc
outsl
cltd
xlat
jnp
dec
xor
ret
push
ja
jne
fsub
cwtl
xor
add
sbbl
pop
stos
or
xorb
imul
sbb
test
mov
fsts
scas
cmp
adc
loope
andb
es
movsb
cmpsb
cs
test
pop
add
iret
mov
mov
xor
aas
sbb
call
pop
in
mov
xor
cwtl
js
xchg
inc
sbb
cmp
xchg
scas
loope
mov
cltd
out
insb
jo
ss
jle
jge
push
out
nop
mov
ljmp
enter
in
inc
ret
popf
sub
push
pop
xlat
jnp
jne
mov
and
jae
inc
adc
ror
jno
loop
gs
push
adc
insl
jmp
shl
jmp
ljmp
cmc
js
xor
pushf
mov
lock
xorb
xor
inc
and
push
pop
sub
xchg
test
inc
jns
orl
iret
dec
xchg
pop
push
not
sbb
sub
leave
pop
fstl
lret
dec
push
adc
dec
add
xchg
push
cs
sbb
ljmp
cmp
dec
ror
insb
dec
cwtl
mov
push
dec
fildl
sti
and
inc
inc
aad
cmp
and
sbb
sti
inc
lret
inc
mov
mov
scas
pop
xor
sbb
cmc
add
xor
outsb
jecxz
gs
test
or
lods
rol
cmp
add
dec
cmp
insl
stos
xor
cmp
xor
or
jl
fisubl
les
jl
into
test
add
out
pop
sahf
dec
or
fidivs
js
rcrb
mov
jbe
aas
or
out
or
jae
insb
fldl
add
mov
pop
cmpsb
shrb
cmp
negl
stos
sbbl
push
insl
cltd
mov
pop
or
mov
dec
fldl
xchg
imul
push
scas
jge
sti
xor
addr16
stos
jecxz
pushf
stos
or
jnp
fnstenv
mov
shrl
negl
sarl
sub
push
aad
push
insl
std
push
dec
mov
mov
and
cmp
inc
adc
pop
sub
addr16
decl
sub
out
popa
sub
sahf
and
testl
mov
fs
shl
mov
sub
loopne
cmpsl
lods
lock
fs
adc
sbb
sbb
pop
and
mov
jbe
inc
jo
xchg
cli
xor
into
dec
js
popf
mov
and
addb
mov
mov
fistps
test
dec
daa
nop
add
jns
cmp
add
fisttpll
cmpl
xchg
xchg
subl
mov
scas
and
hlt
xchg
jbe
push
cmp
adc
cwtl
jp
test
and
call
aaa
push
jae
sub
jmp
jg
subb
push
mov
insb
test
pusha
mov
ds
scas
sahf
jae
dec
js
insb
jg
ss
mov
test
rolb
test
push
test
push
mov
pop
dec
out
add
jae
out
pusha
clc
pop
xor
pop
mov
sub
scas
dec
mov
pusha
repz
push
insb
push
stc
pop
dec
in
cmpb
mov
cmp
jnp
cltd
jge
aaa
mov
loopne,pn
mov
lds
adc
aaa
inc
dec
clc
fmul
iret
aam
push
add
outsb
sbb
mov
out
dec
xchg
inc
jle
je
lahf
pop
lods
frstor
arpl
sub
jl
push
cmp
push
xor
mov
dec
xchg
dec
insl
mov
mov
ret
cwtl
sub
dec
pop
xchg
scas
imulb
inc
jb
aas
fldcw
inc
pop
xor
inc
pusha
popa
and
insb
and
fbstp
cmpsb
bound
outsb
ds
ds
xchg
nop
pop
das
daa
mov
mov
inc
popa
jb
dec
outsb
lahf
outsl
clc
lret
mov
repz
repz
lock
dec
dec
jp
int
xchg
push
aas
mov
push
cli
pushf
cmp
xchg
push
repz
cmpsl
add
jo
mov
jbe
adc
shrl
loope
jle
rclb
leave
push
mov
call
inc
mov
andb
mov
sahf
arpl
imul
or
and
and
adc
mov
movsl
fisubl
push
or
sbb
jne
andl
lahf
inc
adcb
mov
stos
lods
imul
jmp
stos
xor
stos
leave
fistl
xchg
loopne
pushf
mov
loopne
push
fyl2xp1
mov
sbb
scas
and
dec
iret
mov
mov
notl
lea
and
cmp
stos
loop
xchg
loope
xchg
xchg
inc
sahf
jle
mov
outsl
js
test
enter
in
dec
mov
mov
frstor
jl
mov
jmp
ss
xchg
popf
jecxz
or
mov
adc
repz
jl
mov
setg
cmpsb
xchg
out
dec
aaa
stos
cmp
pop
shl
pop
rcrl
dec
and
shll
jecxz
xchg
fstpl
jb
xchg
dec
lahf
ljmp
clc
adc
or
cmp
mov
mov
xor
mov
out
adc
das
stos
cmc
test
lock
xor
xlat
cmpsl
aas
inc
dec
lcall
insb
mov
pop
jecxz
jecxz
or
mov
lods
jbe,pn
cli
gs
xchg
mov
aam
xor
out
leave
fildl
ret
add
pusha
push
mov
push
and
int3
sbb
int
push
cwtl
scas
mov
lcall
test
dec
fwait
popf
or
icebp
mov
add
mov
mov
jp
ficoms
movsl
jne
out
pop
in
push
fwait
xchg
sub
inc
mov
adc
cmp
mov
mov
es
jl
add
mov
int3
xchg
stos
enter
sub
add
lret
mov
addl
sbb
cmp
lea
push
aad
lcall
subl
mov
das
push
push
fmul
sarb
xlat
testl
cmp
cmc
lds
add
data16
mov
scas
add
jae
leave
push
fmulp
psubsw
icebp
clc
sub
xchg
mov
adc
xchg
lods
pop
hlt
mov
rclb
mov
jne
lahf
ss
sbb
cmp
cmc
ret
cmp
mov
mov
insl
fs
push
testl
jno
or
mov
imul
xchg
stos
dec
call
mov
push
lahf
xchg
push
fs
lods
pop
sub
xchg
subl
jno
shll
cli
fidivrl
or
test
or
mov
inc
fnstcw
movsl
or
cmp
inc
lock
inc
repz
xchg
xchg
push
ret
leave
push
and
test
pop
push
flds
cmc
sbb
xor
popf
arpl
jle
push
adc
mov
cmp
popa
cwtl
xchg
loope
std
sbb
jmp
imul
sahf
add
cmp
popl
jle
fs
mov
shl
push
push
jnp
int3
cli
mov
sbb
es
loope
scas
xor
test
lahf
push
inc
shll
add
rcrb
and
push
sub
dec
sbb
add
adc
std
movsl
push
ret
mov
in
push
dec
inc
xchg
ds
pop
cli
cmp
ret
sbb
cmp
jg
ja
outsl
push
pop
arpl
dec
xchg
cmc
jbe
mov
inc
or
test
mov
inc
inc
cltd
dec
push
push
or
sub
adc
add
mov
inc
adc
jg
push
mov
adc
std
or
mov
push
push
cltd
aas
sbb
xchg
add
adc
mov
stos
cmc
xchg
jo
testl
xor
icebp
inc
int
mov
push
pop
cmc
xchg
test
out
add
es
or
int3
push
addr16
mov
push
and
inc
push
adcl
pop
mov
in
mov
out
fisubrs
xor
data16
cmp
xchg
loope
dec
lods
test
cld
aas
cmp
inc
inc
xchg
aas
sti
ss
add
pop
out
mov
pop
push
roll
cmp
cmp
lods
aam
dec
xchg
jecxz
je
fisubrs
rorl
jns
lcall
mov
mov
pop
inc
pushf
mov
stc
cmp
dec
aam
mov
jge
out
add
jnp
mov
call
add
insb
cmpsb
addr16
xchg
sbb
in
xchg
aaa
sbb
jo
imul
adc
popa
repnz
push
shl
dec
mov
cld
cmp
and
add
jmp
fs
sub
out
loope
enter
xor
cmpsb
sub
lods
pop
push
ljmp
inc
or
inc
dec
xorb
rorl
or
dec
jge
nop
sahf
jnp
stos
inc
out
js
xchg
xchg
jp
xchg
inc
lret
xor
cli
addr16
popa
movsl
pop
and
add
movsl
xor
mov
imul
icebp
lret
in
add
lcall
xlat
adcb
sbb
ret
sarl
mov
inc
mov
adc
mov
xor
ret
xchg
outsl
mov
pushf
leave
cli
popa
ret
cmc
jno
push
jl
out
push
xor
jns
jae
dec
push
jb
add
rcll
xorl
jae
or
das
mov
xchg
mov
xor
pushf
xchg
jb
inc
movsb
xchg
and
mov
dec
adc
add
nop
push
sar
fs
nop
mov
jle
push
cmp
add
mov
std
pop
fs
adc
rorb
pop
add
out
andb
testl
pusha
push
movsb
fsubrl
and
clc
adc
aaa
fsubl
adcb
lahf
ljmp
cs
sahf
outsl
adc
divl
ljmp
fs
movsl
repz
icebp
cmp
xor
cmp
cmpsl
shl
int3
gs
out
rcr
mov
out
cmp
movsb
dec
cmp
stos
in
adc
int
cltd
xchg
cmp
dec
or
mov
ret
push
xor
push
mov
adc
pop
jle
sub
and
sti
filds
out
push
popa
pop
xchg
fidivrs
insb
mov
adc
sbb
dec
push
jne
sub
movsl
sub
out
leave
sbb
push
movsb
xabort
and
xchg
pop
mov
cwtl
outsl
rcr
sub
into
sub
rclb
jno
push
push
pop
adc
mov
pop
iret
cmc
dec
adcl
enter
fwait
in
cwtl
fnstsw
xor
scas
cld
frstor
fcomps
push
ljmp
inc
frstor
jg
out
out
dec
xchg
xor
dec
rorb
cmpps
out
sbb
sub
xchg
push
nop
loopne
lret
jbe
mov
mov
lods
dec
insl
divb
xchg
jmp
ja
and
add
fdivrs
pop
pop
xchg
adc
test
fs
lock
xchg
and
iret
mov
pop
dec
fwait
cli
pop
xor
add
and
scas
push
mov
jns
or
push
inc
lret
flds
adc
jne
push
push
je
hlt
inc
mov
icebp
aad
loop
imul
jmp
lret
dec
repz
sub
aas
imul
fisubrl
ljmp
fistl
mov
push
vmread
xchg
pop
dec
imul
xor
mov
mov
faddl
jl
inc
sarb
mov
add
jmp
adc
mov
outsb
sbb
lret
addr16
mov
outsb
test
and
or
dec
rclb
mov
dec
lret
mov
ljmp
pop
push
jmp
jno
mov
sarl
push
mov
pop
sti
mov
add
or
and
pop
aad
call
sbb
and
inc
loopne
popf
mov
jb
in
pop
pop
or
adc
xchg
sbb
pop
cmpsl
imul
out
pop
sub
mov
test
rclb
dec
cmp
inc
js
pop
push
sbb
dec
or
push
dec
aam
cmp
adc
sub
push
scas
mov
iret
ds
push
out
sbb
scas
bound
mov
cmp
or
add
int3
insl
mov
jo
jp
push
xchg
jl
outsb
cmp
and
inc
sbb
and
xchg
and
pop
movsl
and
mov
mov
fistpll
pop
cltd
adcl
les
rcll
sub
lock
xchg
insb
or
sbb
mov
orb
mov
push
jb
cwtl
mov
add
je
movsl
hlt
in
dec
imul
mov
adc
xor
jge
fldl
aaa
mov
mov
out
and
or
scas
testb
xchg
add
push
mov
mov
sub
dec
jge
mov
xchg
dec
xchg
mov
mov
lea
inc
fsts
inc
jg
xor
pop
dec
mov
pop
sbb
inc
loopne
fldt
or
or
dec
sub
dec
clc
fidivl
aad
jle
rorl
sub
rolb
sbb
hlt
mov
ja
mov
sahf
push
mov
xchg
inc
jne,pn
ror
icebp
pop
or
xchg
leave
jmp
push
int3
xchg
push
mov
pop
adc
xchg
jne
nop
xchg
lret
add
repnz
es
adc
jo
xor
fcomps
and
jp,pt
fnstsw
mov
dec
or
dec
into
mov
addl
inc
jne
iret
push
fwait
and
lods
jbe
push
test
aas
jb
inc
sbb
imul
add
push
rolb
fistps
repnz
inc
fsub
xor
jae
push
fistpl
and
stc
jb
sub
pop
iret
mov
sub
shll
xlat
adc
push
ret
in
bound
and
sub
jbe
scas
xchg
fistpl
xchg
jo
out
fnstcw
jp
dec
jg
jnp
mov
jns
jns
in
push
pop
fistl
sub
ret
aad
sarb
pop
mov
and
shl
xchg
and
mov
hlt
mov
jecxz
push
sti
sbb
cmpl
mov
icebp
inc
sub
xor
loop
data16
movb
out
push
cld
cmp
sarl
push
xor
pop
push
daa
sbb
addr16
iret
hlt
nop
xchg
shrb
jbe
in
sahf
mov
or
sub
popf
addb
dec
int3
sbb
jno
out
cmp
in
mov
out
test
cltd
ja
decl
and
add
sub
jmp
add
mov
repnz
nop
je
ficompl
sub
pushf
push
sbb
and
inc
fnstenv
mov
push
push
rorl
mov
je
daa
add
ficomps
xor
out
push
das
inc
cmp
mov
inc
push
inc
dec
jae
pop
cs
dec
sub
lock
sahf
test
cltd
dec
pop
lock
je
push
push
xchg
push
das
adc
jle
adc
mov
fmul
ret
sbb
filds
jp
test
mov
aad
mov
ljmp
mov
rep
ss
aas
test
shlb
xor
dec
and
std
adc
pop
push
lret
pop
sbb
pop
xchg
rcr
xlat
or
ljmp
test
ret
jb
lods
mov
aad
push
cmp
inc
dec
inc
sub
fiadds
or
rclb
add
push
mov
testb
subb
aam
ds
cli
adc
lods
aaa
xchg
daa
fimull
push
mov
les
out
add
sti
mov
pop
mov
call
push
add
jmp
rclb
imul
xchg
add
repz
push
outsb
cli
mov
fs
or
inc
dec
cmp
jne
sbbw
popf
xor
lods
sbb
mov
int3
add
adc
adc
roll
in
dec
inc
add
adc
int
pop
and
or
loope
ret
mov
push
ret
inc
negl
add
lcall
sahf
pop
sub
rcll
out
fldl
cmc
loope
cld
movsb
orb
adc
sti
lods
or
inc
mov
inc
add
push
dec
mov
mov
lea
pushf
and
mov
and
mov
sbb
xchg
jno
cmp
cmp
sub
test
jle
xor
cmpsb
mov
sbb
and
rol
out
cs
mov
lahf
push
push
out
cmp
jae
andb
mov
aad
leave
in
add
or
enter
pop
or
stos
data16
mov
xchg
add
mov
pop
mov
push
push
ret
insl
sub
cmc
aas
lds
jmp
mov
push
xchg
clc
decb
adc
sub
pop
test
scas
jne
pop
inc
in
add
mov
stc
in
pop
xchg
mov
push
cmc
sub
out
jg
rclb
xor
mov
jnp
xchg
into
mov
shrl
addr16
out
mov
das
fs
lea
roll
xor
sbb
jecxz
sub
in
add
out
inc
fisubrs
aad
stos
mov
ss
dec
push
popa
mov
pop
pop
stc
xor
dec
scas
mov
mov
int
enter
dec
loope
pop
ret
push
mov
cmp
lea
pop
ret
adc
inc
pop
int3
xchg
lods
jbe
movl
or
push
mov
jae
cmpsl
dec
and
fnstcw
lods
push
fnstcw
cs
push
outsb
out
or
fldenv
pop
xchg
inc
sbb
jle
test
add
and
mov
inc
adc
push
fimuls
in
add
jmp
and
je
mov
stc
xor
gs
mov
test
loope
scas
xlat
pop
jb
repz
mov
xor
into
pop
cld
ficoml
and
std
mov
cli
rep
daa
faddl
mov
je
fisubl
cmp
mov
jecxz
into
cld
movsl
repz
pop
mov
sti
mov
sbb
fdivl
push
test
loopne
push
pop
cmp
cld
ljmp
push
jno
int
adc
xchg
push
call
mov
mov
cmp
lea
int
dec
mov
cltd
xchg
adc
mov
iret
cmp
sub
adc
xchg
or
pop
ret
add
stos
pop
cmp
fiadds
mov
adc
xor
aaa
sub
jns
xchg
mov
bound
xchg
mov
jg
in
mov
shlb
inc
cmpsb
jns
clc
xchg
push
insl
aam
fcmove
and
fistps
push
hlt
gs
lahf
test
adc
sbb
mov
add
enter
stc
lea
ficoms
out
mov
mov
mov
mov
stos
cli
ljmp
stc
cli
movsb
and
mov
xor
pushf
inc
outsb
push
repz
loope
out
imul
xchg
iret
clc
sub
mov
dec
pop
add
imul
lods
dec
jp
outsb
sub
stc
sub
lods
call
out
fucomi
sub
stc
fnstsw
jp
sbb
or
adc
insl
xchg
scas
stc
pushl
mov
push
inc
subl
sarl
inc
insl
ljmp
das
fldt
ds
test
push
imul
aam
push
dec
lret
shl
xchg
icebp
push
test
data16
int3
xchg
mov
xor
negl
scas
adc
push
cltd
js
jbe
fnstenv
popa
into
or
xchg
adc
xchg
and
or
ret
push
daa
and
add
mov
or
lock
pop
popf
stc
pop
mov
pop
cmp
add
dec
inc
jne
das
sahf
cmc
add
cs
mov
and
das
pop
dec
test
cwtl
nop
fistl
mov
and
cmpsl
imul
mov
mov
dec
cmp
jbe
gs
mov
adcb
and
xor
loop
jg
sbb
in
and
add
adc
mov
in
imul
or
std
push
push
push
inc
loop
imull
fwait
out
inc
imul
mov
shl
mov
das
sub
jl
pop
ficoms
pop
sbb
arpl
cmp
add
push
sbb
ja
test
nop
jns
jle
xor
push
mov
loopne
or
lods
lods
out
imul
fidivrs
icebp
addb
je
add
jns
sbb
shlb
lret
xor
mov
sub
pop
lods
loope
push
pop
call
push
xor
push
in
popf
inc
xlat
outsb
add
dec
jae
mov
sub
je
add
mov
mov
sub
push
icebp
arpl
sub
jecxz
sbb
push
sbb
or
test
sbb
dec
fmulp
rcrl
pusha
cmp
int3
gs
add
mov
and
mov
loop
out
mov
cmp
cld
insb
xchg
xchg
mov
and
xor
pop
add
test
addr16
xchg
inc
negb
mov
xchg
das
xchg
pusha
daa
pop
sbb
fcoms
enter
popa
lret
and
sbb
mov
scas
orl
inc
cmp
or
fdiv
outsl
inc
xchg
inc
incl
lea
jns
test
inc
testl
dec
jp
inc
rclb
cmp
adc
sti
push
mov
ficomps
mov
xor
js
es
idivb
call
mov
in
jl
dec
pusha
mov
aas
popf
mov
rcrb
clc
incb
xor
repz
dec
mov
insb
bound
js
jge
inc
nop
fiadds
xchg
mov
xor
add
sub
add
and
lods
inc
outsl
ds
cmp
xchg
or
mov
push
call
adc
call
cmpsb
popa
mov
and
and
xchg
jbe
dec
mov
sbb
ret
loope
fiadds
jle
aad
jns
ss
fcoms
loope
shlb
inc
xor
or
sub
add
outsl
adc
cld
add
je
adc
mov
mov
inc
mov
aad
and
rcrb
push
xchg
fistpll
andl
cli
repnz
ds
cltd
and
loopne
mov
mov
aad
adc
inc
mov
in
push
addr16
shlb
in
andb
jp
cmp
aaa
jbe
or
cli
mov
stos
in
mov
mov
lods
push
jbe
int3
movsl
sub
push
and
add
cli
mov
adc
push
mov
stos
xchg
fcos
aaa
insl
xor
adc
outsl
fisubs
pop
pusha
pop
jbe
sahf
cmc
das
or
sub
lds
gs
ja
imul
xchg
enter
adc
jnp
sub
jne
outsb
adc
int
cmp
repz
sar
xor
ret
sbb
subl
mov
pusha
scas
mov
mov
xchg
mov
inc
push
sbb
pop
and
sub
xchg
adc
mov
adc
in
inc
jnp,pt
xchg
rolb
pop
fadd
dec
out
pop
lret
scas
push
lds
sbb
jo
stos
push
sbb
in
pop
loop
arpl
mov
xchg
enter
cmp
dec
add
jle
imul
xchg
icebp
push
test
fbstp
jnp
mull
data16
and
add
lahf
push
aaa
sbb
stos
push
div
inc
mov
cmp
es
push
pcmpgtd
mov
imul
pushf
leave
sti
pop
gs
push
in
outsb
aam
lret
jnp
jb
mov
xchg
ja
sbb
in
mov
xorl
mov
xor
fcoml
mov
scas
xchg
inc
pop
xchg
dec
fld1
shl
push
xchg
test
negb
adc
sti
in
lret
adc
and
adc
frstor
mov
loope
repz
push
pusha
pop
push
sarb
aad
mov
dec
or
mov
pop
pop
out
mov
dec
cmp
mov
sub
test
mov
ss
add
or
das
mov
movsb
sub
loopne
aad
inc
pushf
mov
fs
aaa
stos
xchg
dec
add
add
insb
mov
sti
xchg
sbb
stc
aaa
lds
lods
pop
and
dec
sub
push
gs
mov
aad
mov
and
inc
jmp
mov
xor
aad
jp
sbb
not
inc
insb
clc
sbb
xor
mov
daa
jno
pushf
repnz
fwait
pop
lahf
cmp
cmpl
jb
andl
mov
popf
pop
bound
bound
shrb
mov
pop
mov
push
lds
out
jmp
jno
arpl
fdiv
sub
mov
cmp
jne
push
cmp
aad
dec
mov
hlt
lock
push
xchg
fiadds
test
call
and
outsl
mov
mov
mov
je
in
jbe
fs
fs
mov
mov
inc
stos
ret
mov
jp
cmp
pushf
imul
rcr
mov
into
imul
and
dec
cmp
cmp
cmp
mov
mov
and
add
sbb
sbb
mov
xchg
out
mov
dec
dec
xor
daa
in
add
xchg
or
lea
insb
mov
dec
mov
adc
icebp
xor
cli
icebp
push
data16
fldl
adc
pop
sbb
adc
mov
ljmp
jg
jno
mov
cmc
mov
fcos
js
fst
movsb
mov
inc
loop
pop
push
mov
and
outsb
mov
mov
sti
cmpsb
cli
and
inc
mov
cmp
xchg
outsl
fisubrl
pop
and
das
mov
arpl
je
imul
jbe
ret
add
xor
cwtl
lcall
sbb
inc
sbb
icebp
pop
cli
jne
dec
push
lret
sub
fcomps
jecxz
xor
mov
rcrb
mov
sbb
mov
cmpsl
mov
repnz
es
stos
es
mov
push
sbb
daa
repnz
mov
sarl
mov
xchg
es
test
xchg
popf
pop
jae
loop
lock
push
mov
lea
sbb
mov
push
jns
dec
xor
je
test
in
dec
mov
ret
push
pop
cmpsb
leave
aad
call
xchg
js
out
testb
and
bound
lods
inc
jmp
nop
out
fdivrl
outsl
xor
push
test
adc
in
movsb
scas
stos
sub
clc
dec
inc
fimuls
in
mov
cltd
test
int3
cwtl
sub
mov
and
adc
or
lods
jmp
mov
mov
je
jp
sbb
daa
and
jg
loope
push
call
repnz
lock
fldt
mov
push
fiaddl
orl
and
es
loope
cmpsl
jmp
mov
sub
les
jecxz
push
mov
fnsave
jne
or
inc
loope
cmp
inc
jno
or
or
test
mov
xor
cwtl
rclb
dec
dec
mov
mov
into
subb
sub
scas
adc
pop
xlat
pop
add
dec
test
add
insl
add
iret
imul
lock
stos
xlat
test
mov
adc
js
xchg
sub
loopne
out
stos
jmp
adc
sub
xor
rcrl
test
push
testl
inc
lods
sti
jle
test
cmc
xlat
mov
or
shrl
in
js
lcall
int3
fdivrs
adc
sub
clc
divb
je
sbb
push
pop
mov
jg
stc
fnsave
ds
cmp
inc
pop
inc
pop
fisttpll
push
cli
jl
enter
adc
push
dec
data16
push
test
push
pop
icebp
dec
sub
adc
xlat
call
into
ljmp
mov
scas
inc
xor
dec
inc
sub
cmpsl
mov
out
mov
push
or
test
xchg
and
repnz
imul
jbe
add
imul
cmp
mov
cmp
adc
pop
leave
andl
mov
sbb
mov
adc
mov
mov
pop
xor
pop
jns
xor
js
les
mov
fsubrs
cwtl
push
or
sti
fmuls
cli
sub
and
mov
dec
xchg
inc
add
popa
push
in
popf
rcrl
aam
nop
and
daa
sti
std
sub
dec
pop
mov
jns
jns
push
outsb
aam
xchg
stos
daa
xchg
lds
mov
loope
mov
inc
aad
cmp
adcl
inc
fwait
or
addl
pop
test
adc
popf
or
aaa
das
dec
es
stc
xor
movsb
inc
xchg
enter
fisubrs
inc
fimuls
xchg
ss
mov
cmp
mov
incl
icebp
pop
fmulp
in
dec
aas
ss
lods
in
jge
mov
xlat
adc
add
gs
mov
jbe
jns
dec
pop
jb
test
jne
shlb
in
xchg
dec
ss
add
xor
pop
xchg
mov
aam
out
pop
into
jl
xchg
adc
cld
jmp
ret
movl
inc
jmp
scas
add
pop
inc
into
movq
cmp
testb
pop
push
repnz
out
out
mov
mov
sarl
fcompl
in
and
pop
mov
push
movsl
jo
jo
outsb
xchg
or
inc
or
sbb
dec
or
sub
pop
inc
js
insb
sbb
xchg
inc
mov
mov
iret
pushf
dec
pop
lock
lret
or
pop
push
fbstp
pop
iret
arpl
cmp
adcb
ljmp
js
sub
pusha
aas
cmpsl
lock
or
pop
pop
leave
lods
shrl
sub
xor
sbb
es
mov
mov
addr16
dec
es
xorb
xlat
sub
dec
xor
xchg
in
out
or
xchg
lds
mov
inc
mov
icebp
pop
cltd
and
pop
push
rcll
test
in
jb
mov
mov
out
out
sbb
daa
push
mov
repnz
cs
mov
sbb
fsubr
jle
mov
cmc
icebp
ja
call
les
push
dec
stos
stc
xchg
cmp
clc
sub
mov
xor
adc
aas
jo
add
shr
les
cmc
lea
ja
push
stos
hlt
stos
fs
push
pop
stos
add
mov
jecxz
incl
or
dec
jno
mov
inc
fnstenv
and
ret
mov
or
fisubs
mov
mov
cwtl
out
das
fistpl
add
add
xchg
fistl
jle
pop
inc
and
sub
mov
xchg
iret
sub
xchg
xor
sbb
out
lock
pop
jge
je
push
jnp
pusha
divl
sub
repz
cli
xchg
pop
in
cwtl
dec
cld
jo
jae
cmpsb
out
mov
incl
leave
and
sub
xchg
fdiv
push
mov
dec
idiv
sub
and
enter
aam
pop
dec
dec
push
xchg
in
and
cmp
enter
sarl
mov
insl
mov
cmpsl
cld
sahf
les
aaa
cltd
mov
cmp
je
adc
pop
and
ljmp
daa
mov
pop
adc
or
int3
pop
cmp
cmp
jo
lret
cmp
sbbl
mov
dec
mov
mov
push
xchg
xchg
iret
mov
clts
cmp
fadd
sbb
leave
inc
or
pop
clc
das
mov
sbb
cmp
xor
arpl
out
push
cs
xor
inc
mov
pushf
jae
dec
repnz
inc
adc
lods
adc
out
push
out
fidivl
mov
inc
mov
mov
cs
push
push
mov
jg
popa
roll
pop
insb
in
movsl
lods
sub
lods
and
mov
out
mov
sbb
mov
sarl
int
mov
and
mov
mov
mov
mov
dec
inc
mov
stos
xlat
push
mov
mov
mov
push
into
xor
mov
sahf
xchg
sbb
stos
mov
mov
and
mov
mov
das
or
xor
adc
in
inc
ret
lods
js
shld
les
cmp
mov
cmp
ret
pop
loop
js
cs
xor
pop
scas
jb
or
push
sub
in
sub
pop
shlb
or
popa
add
in
lea
mov
cld
push
icebp
add
repz
adc
bound
pop
mov
ret
pop
push
int3
adc
xchg
rcl
ret
and
jle
jb
gs
ss
lea
jmp
mov
mov
iret
sub
push
in
int
adc
jb
add
test
fsubp
rorl
divb
mov
subl
mov
jmp
mov
jl
pop
pop
orl
jne
mov
inc
jb
popa
aaa
test
jle
inc
inc
sbb
mov
jne
or
mov
inc
mov
scas
insl
imull
enter
in
pop
or
xor
das
rorl
rorb
les
ds
cmp
into
inc
loope
out
dec
xchg
daa
pop
test
cmp
fsubp
xchg
ljmp
outsl
popf
or
mov
push
fsubl
popa
mov
push
fwait
popf
lods
clc
stos
push
loop
push
sti
dec
dec
pop
sarl
jp
repz
push
push
ljmp
fistl
mov
or
or
dec
dec
mov
lret
dec
jne
movsl
das
sarb
aam
mov
inc
ret
sub
cmpsl
out
dec
cmp
ja
loope
outsl
rorl
imul
jecxz
std
outsl
lahf
xchg
xchg
pop
mov
push
sub
add
js
mov
xchg
cmpsb
cs
icebp
es
cwtl
call
dec
test
mov
mov
lods
jl
pop
inc
outsb
addr16
fisubrl
inc
push
popa
mov
cmpsb
cld
mov
les
daa
lock
sbb
dec
or
in
insl
sbb
sahf
icebp
add
xchg
push
aad
and
push
mov
ror
mov
je
adc
push
cli
jne
ret
fisubs
xor
mov
and
out
cmp
mov
mov
lds
lret
or
lcall
lods
mov
xchg
mov
cli
inc
pop
mov
lea
mov
and
xchg
pop
or
xlat
popa
and
mov
push
mov
fildll
fcmovne
fwait
pop
xlat
or
mov
xchg
iret
or
mov
adc
int
push
imul
add
and
xchg
shlb
stos
les
notl
pop
adc
rcrl
mov
out
jmp
stos
dec
or
inc
sbb
cs
test
adc
bound
imul
pop
lea
jmp
mov
pop
cld
decb
test
out
inc
ds
add
imul
sbb
pop
jbe
or
push
je
or
neg
sbb
add
inc
pop
shrb
addb
inc
je
frstor
push
and
out
pop
mov
inc
push
pop
mov
out
imul
mov
or
into
push
dec
pop
inc
sbb
sub
jbe
ja
stc
dec
bound
std
lock
ds
mov
in
out
test
popa
push
xchg
dec
mov
out
adc
jge
out
push
add
inc
or
jo
xchg
mov
cmpsb
push
ret
mov
sub
pop
or
cmp
test
fdivrl
imul
in
outsl
mov
mov
int
and
pop
xchg
and
adc
fnstenv
ja
fnstcw
ss
test
stos
push
shlb
rcrl
fprem1
ret
and
dec
inc
pop
pop
adc
adc
orl
dec
cli
ss
jb
inc
xchg
adc
inc
add
cmp
mov
cmp
gs
int
push
cmp
jg
arpl
xor
dec
out
sub
mov
rcll
push
inc
clc
inc
shll
pop
incb
daa
outsb
ja
pop
mov
and
inc
enter
ret
push
sti
sub
movsl
loope
ret
clc
mov
lods
mov
adcb
mov
mov
inc
jle
or
int
je
fnstsw
outsb
mov
pop
clc
pusha
cmp
pop
aas
testl
mov
adc
add
sub
jg
loopne
mov
push
cmpsl
pusha
ja
test
test
mov
leave
cmpsl
aad
mov
jmp
rcll
int3
inc
add
mov
jp
xchg
xchg
jp
sbb
or
loopne
and
pop
xchg
popa
mov
dec
int
mov
sub
ds
cs
mov
mov
add
dec
les
mov
or
adc
out
mov
mov
data16
mov
decl
and
lahf
sub
push
cli
pop
imul
nop
dec
mov
fucomip
jb
dec
or
jmp
dec
push
out
out
sub
test
jmp
jae
add
mov
push
add
and
xor
jae
test
pop
sub
icebp
jns
jb
sub
sbbl
imul
movsl
xchg
or
inc
int
sbb
test
sbb
out
push
in
std
and
into
sbb
or
xchg
pop
pop
dec
mov
cwtl
mov
pushf
jno
push
cmpsl
jg
jg
and
jo
fs
cmpsl
mov
hlt
cmc
aad
sub
jno
ud1
mov
fildl
je,pn
xchg
or
dec
mov
sahf
mov
leave
mov
rclb
aad
test
adc
call
jp
sub
gs
mov
dec
ljmp
mov
push
mov
fwait
inc
aam
mov
adc
mov
ficoms
std
fcomps
stos
xor
xor
call
cmp
incb
repnz
jno
mov
in
ret
and
inc
mov
mov
out
hlt
jo
xor
push
pop
xor
mov
inc
cmp
adc
cld
pop
cmpsl
push
dec
ret
lods
into
in
ds
push
enter
push
lcall
fcmovne
inc
adc
out
sbb
xchg
in
repnz
mov
dec
mov
cli
ja
inc
sti
adc
std
jg
jmp
test
test
inc
clc
in
or
in
ss
loope
test
sbb
ds
xor
andl
imul
cmp
aam
sti
out
icebp
xchg
add
push
jno
icebp
shlb
sub
sub
push
arpl
jecxz
adc
jo
xor
lods
hlt
xchg
cmp
jns
xchg
sub
jl
imulb
mov
pop
jecxz
sbb
repz
sub
in
push
fistl
daa
cmp
ret
mov
inc
loopne
aas
sti
stos
mov
jle
pop
rcpps
rclb
mov
pop
ret
aas
or
mov
mov
insb
nop
ljmp
ljmp
push
mov
sti
movsb
fs
xor
push
mov
lods
dec
push
inc
mov
pop
sub
cmpsl
imul
lret
sbb
inc
xchg
lret
cltd
loope
push
mov
adc
out
sub
sbb
hlt
sub
inc
xor
lcall
inc
mov
jb
fiaddl
cmp
out
int3
dec
mov
shll
jb
inc
sti
add
xchg
cmp
nop
inc
cmp
sti
ret
js
in
psubsw
mov
push
scas
cmc
push
test
mov
mov
ret
clc
fstpt
fldl
cmp
ja
fdivs
jl
sub
cmp
or
mov
es
fwait
xchg
or
into
int
mov
xchg
adc
mov
sti
lahf
inc
out
add
or
lcall
mov
jmp
loop
mov
divb
pop
mov
sbb
in
pop
mov
out
pop
sti
or
lods
xchg
fwait
sub
int
sub
in
push
dec
mov
xchg
and
inc
cmp
ja
mov
mov
mov
mov
push
inc
jo
sbb
sbb
and
mov
dec
xchg
push
sbb
inc
xchg
cmp
rorb
and
adc
mov
enter
and
dec
inc
clc
out
fcomps
or
sub
and
add
outsb
int3
xchg
call
xlat
mov
into
lahf
xlat
mov
sbb
daa
push
outsb
jne
lods
loopne
mov
xor
sbb
aas
fildl
idiv
movsb
cmpb
std
lods
mov
outsb
clc
sbb
adc
cwtl
leave
out
push
loopne
std
mov
xor
cmp
leave
rcr
inc
movsl
push
push
adc
sti
and
inc
xchg
xchg
adc
js
fmull
hlt
sbb
inc
and
sbb
inc
xchg
loope
out
push
loopw
push
idivl
aaa
lods
xor
inc
sub
sbb
sub
mov
mov
rcll
dec
mov
fwait
jnp
arpl
js
dec
cmp
inc
pop
iret
mov
mov
jmp
cmpsl
pop
pusha
js
jecxz
bound
mov
ja
clc
nop
sbb
push
push
std
pusha
mov
fnstsw
imul
fwait
jnp
loope
dec
cli
pop
or
xchg
leave
in
push
mov
mov
xchg
rcrb
pushf
jle
inc
or
aaa
lds
fisttps
ss
cmp
cld
shll
add
or
lahf
outsb
or
scas
enter
xchg
sbb
dec
cld
ret
push
std
or
sbb
ret
std
mov
cltd
subb
scas
push
in
sub
sbb
add
jo
repnz
xor
adc
mov
sub
jno
push
scas
mov
cmpsl
mov
loope
daa
pop
add
push
iret
cli
mov
jns
mov
dec
and
jg
mov
sarb
pop
rcrb
add
lcall
mov
and
xor
and
cli
out
cmp
scas
out
pop
and
add
popf
ret
cmpl
imul
xorb
push
neg
sbb
xchg
xlat
cmp
in
or
fs
nop
pop
mov
inc
out
jne
into
sub
dec
shll
stos
jnp
xor
mov
mov
push
jno
sbb
sti
jmp
hlt
daa
pop
lcall
lcall
sub
sbb
imul
cmp
lret
rcrb
mov
dec
shll
xor
add
cli
es
jno
mov
pushf
out
pop
test
jecxz
pop
loopne
fs
js
xchg
sbb
dec
xor
int3
outsb
xor
xor
and
sbb
cmp
lods
cmpsl
jmp
cmp
and
jnp
push
iret
aad
test
xchg
mov
or
cmp
mov
movsl
and
jae
test
ja
rcll
adc
mov
out
and
leave
pop
add
push
imul
dec
ss
gs
add
fsubp
negb
and
pushf
xor
mov
into
push
iret
lock
loopne
jbe
shl
test
fisttps
push
js
dec
out
movsb
lcall
sbb
loope
pop
lcall
iret
xchg
mov
loope
incl
push
xchg
clc
inc
leave
shrl
scas
int
fwait
inc
or
mov
inc
lods
push
add
fsubl
adc
cmpsb
mov
inc
adc
push
fbstp
push
data16
lret
cmp
cmpsl
add
outsb
xchg
push
mov
pop
cmp
add
xor
enter
lock
jnp
jnp
and
ljmp
cmp
mov
stos
jns
popf
xchg
je
jns
push
cmp
data16
lock
pop
stos
mov
pop
decl
stos
and
loopne
data16
and
jbe
mov
fbstp
popf
inc
sub
icebp
add
fsub
sbb
mov
rcrb
and
rcll
push
std
push
jl,pn
in
dec
movsl
das
mov
pop
mov
and
xor
clc
add
cmp
loop
lea
mov
or
repnz
pop
leave
add
sbb
mul
sub
lods
sahf
fstl
sbb
rclb
fs
adc
add
mov
inc
out
xchg
lods
es
xchg
pop
movsl
push
pop
int3
and
adc
loope
add
xchg
lods
pop
mov
xor
rolb
mov
lret
inc
repnz
ljmp
fstl
fisttpll
jmp
sub
mov
sahf
icebp
nop
ficoms
sbb
inc
test
and
mov
jg
das
mov
gs
f2xm1
jl
js,pn
imul
cmc
cmp
lods
rorb
fwait
in
aas
inc
inc
inc
iret
cmpsl
adc
enter
stos
fildll
cs
dec
and
mov
adc
or
mov
loope
nop
xchg
test
jp
add
mov
dec
rolb
icebp
add
and
shr
fucomip
fisubs
sahf
dec
pop
lret
jp
jbe
xor
dec
test
ljmp
push
das
outsb
in
fnsave
dec
aaa
and
mov
sahf
mov
gs
movsb
loop
paddsb
lods
mov
push
sbb
mov
mov
mov
adc
out
repz
pop
dec
ret
ja
popa
jecxz
nop
cmp
mov
push
subb
pop
adc
cli
or
pushw
inc
sbb
mov
sub
add
cmp
ds
pop
and
repz
mov
mov
movsb
adc
and
fs
mov
sub
jb
xchg
adcb
out
es
mov
xchg
mov
sbb
andl
stos
xor
xor
inc
jg
mov
test
dec
js
xchg
into
jge
ret
lock
ds
lock
mov
mov
rorb
jecxz
insl
test
mov
adc
mov
aad
adc
xchg
fimuls
aad
pushf
mov
rorb
sub
aas
sarb
pop
mov
into
fmull
pop
mov
inc
jg
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
call
jns
pop
insb
xor
insb
sbb
push
jmp
jp
mov
inc
pop
xor
shlb
or
add
mov
pushl
mov
pop
and
sub
mov
sub
add
sub
jl
mov
push
mov
popl
mov
mov
sub
jmp
arpl
fidivrs
ret
stos
movl
decl
test
add
mov
jmp
scas
mov
shll
std
repnz
sar
lahf
in
mov
mov
jmp
test
xor
imul
stos
inc
inc
sbb
lea
xor
roll
and
jo
in
lret
pushf
sub
lret
lea
in
dec
jne
dec
mov
test
lret
xor
xlat
fisttps
popf
js
movsl
sbb
push
sarb
mov
or
lods
xchg
push
xchg
lahf
jb
rclb
push
sub
fisttpl
movsb
xchg
es
pop
stos
pop
dec
jbe
push
dec
pop
push
xor
stos
cld
push
test
in
lret
pop
popf
xlat
out
lea
test
mov
dec
and
mov
in
lret
push
adc
inc
insl
sbb
adc
rorb
jne
icebp
lods
fstpt
cmp
adc
jne
int3
out
xor
inc
jb
rclb
lods
inc
lods
sti
lods
fdivrl
cmpsb
dec
inc
test
rcrl
sbb
push
lods
ret
fs
xor
inc
sub
jle
fmuls
std
lods
fcoml
ss
lods
icebp
daa
test
xchg
mov
lds
jae
jp
movsb
sti
lods
fdivrl
push
adc
pop
fbstp
pop
fldt
fdiv
add
pop
fildll
lods
aaa
jb
or
icebp
stos
popf
popa
xchg
fdiv
rorb
sub
fistl
add
insb
bound
or
mov
mov
int3
lods
repnz
das
iret
or
cmpb
je
mov
les
loopne
popf
pop
jmp
cli
mov
in
sub
cmp
inc
iret
lds
mov
jecxz
or
cmp
mov
cmp
mov
clc
cli
movsb
add
outsb
stos
push
xor
cmc
add
enter
adc
or
and
imul
jge
test
bound
push
mov
mov
mov
imul
scas
pop
iret
or
pop
iret
jmp
sbb
outsb
mov
xlat
das
iret
or
jo
ja
jae
sbb
out
jo
pop
iret
out
shrb
adc
and
sub
fstl
pop
mov
sbb
add
stos
xor
lods
ret
adc
popf
rolb
jns
pop
inc
push
mov
inc
cmc
shl
cmc
mov
pop
or
and
push
push
sahf
xchg
xor
pop
das
aas
jo
mulb
roll
popf
mov
mov
aas
outsb
push
jb
pushf
pop
sbb
jb
std
out
int3
push
cwtl
pop
jns
pop
ljmp
jl
jns
lea
cmc
push
enter
filds
adc
cli
sbbl
vaesdeclast
stos
pop
fwait
dec
loope
and
adc
mov
mov
push
bound
mov
dec
pop
cmp
in
inc
cmp
jge
clc
inc
sahf
push
bound
mov
cmp
add
rcll
int3
rcll
rcll
ljmp
mov
push
push
jne
push
push
rclb
rcll
aad
or
rcll
sbb
scas
int3
rcll
add
int
sarb
js
sbb
in
sarl
shlb
jle
out
rcll
jle
iret
rcll
test
inc
out
fadd
push
faddl
dec
adc
ffreep
add
mov
enter
jecxz
cwtl
dec
jo
dec
iret
into
fadd
push
pop
nop
push
int
mov
stos
fs
nop
push
dec
push
fs
enter
dec
nop
jecxz
cmp
fmul
rcr
xchg
out
cmp
fmul
rcr
mov
rcll
int3
fnstenv
adc
push
inc
xchg
les
mov
rcrl
lret
mov
push
fs
jg
ficomps
sbb
pushf
add
sub
test
adc
xor
mov
push
push
inc
iret
ret
iret
rcll
inc
iret
iret
rcll
mov
push
fbld
pop
clc
addb
iret
xchg
bound
push
fbld
stos
fs
test
dec
nop
jmp
push
push
jecxz
shll
fistl
in
and
jecxz
icebp
and
fmul
sarl
rcll
rcll
rcll
inc
idivb
xchg
out
repz
fwait
pop
inc
fsub
lcall
loop
mov
jmp
dec
gs
push
popa
lods
lahf
add
into
mov
in
dec
shll
rcll
jmp
gs
push
popa
lods
mov
mov
and
or
and
xlat
inc
insb
and
mov
into
mov
in
dec
adc
push
cmp
faddl
cli
jg
mov
and
xlat
inc
insb
and
mov
into
mov
in
ljmp
jbe
push
mov
insb
and
mov
into
mov
in
ljmp
pop
sbb
xchg
jge
cltd
movsb
jg
out
mov
push
rcll
mov
and
and
inc
insb
and
mov
ljmp
sahf
into
xchg
icebp
addr16
nop
pop
sbb
aam
push
cltd
dec
js
adc
cmp
fimuls
imul
and
xchg
enter
pop
mov
std
add
imul
sbb
dec
xchg
int3
rcll
inc
mov
stc
fwait
push
fbld
jge
rclb
rcll
aas
dec
sub
cmp
rcr
push
mov
push
fmul
rcl
adc
out
fmul
rcr
sub
in
rcll
jns
pop
clc
sarb
jns
fs
ret
push
inc
cltd
dec
sbb
iret
imul
int
push
pop
mov
aas
scas
testl
cltd
incl
andb
add
frstor
int
out
pop
push
fsubl
push
movsl
gs
mov
push
pushf
dec
cmp
ret
lret
push
in
clc
dec
faddl
and
add
cmp
pushf
jnp
xor
mov
orb
adc
pop
daa
into
rcll
rcll
rcll
rcll
rcll
rcll
rcll
mov
ffreep
add
pop
sti
push
add
int3
rcll
rcll
rcll
rcll
rcll
pop
out
int3
rcll
rcll
rcll
rcll
or
popa
int3
mov
mov
loop
icebp
sbb
push
mov
insb
add
into
dec
ljmp
jmp
popf
pop
and
jl
loopne
shlb
jmp
rcrb
dec
aad
inc
dec
sub
xlat
shrl
jnp
cld
pop
sbbb
push
adc
loope
sbb
dec
lods
out
ja
dec
push
repz
in
out
inc
mov
or
cwtl
or
js
pop
movl
sub
xchg
sbb
mov
adc
xchg
lea
xchg
mov
sbb
lods
es
stos
add
fs
std
inc
push
mov
out
pop
cmp
rolb
test
jb
arpl
int3
mov
dec
cmp
dec
push
cli
mov
pop
add
adc
ja
mov
xchg
jge
pop
insl
pop
std
inc
lds
test
cwtl
sti
dec
xor
jo
push
repnz
xor
mov
sahf
cmp
divb
mov
sbb
cli
out
test
jle
sti
adc
iret
pushf
mov
mov
fucom
fstl
pop
ljmp
nop
xor
cltd
insb
js
inc
fs
pop
jge
sub
sbb
xlat
lods
mov
lcall
fdivr
sahf
int
add
cld
ret
addr16
mov
push
mov
xlat
pop
adc
fdivl
sub
repz
outsl
xchg
pop
cmp
jae
adc
jl
xchg
inc
subb
loopne
jmp
mov
add
push
call
movsb
insb
and
fdivp
es
lahf
mov
or
shrd
xor
mov
push
stos
inc
mov
adc
sbb
out
arpl
jns
outsb
mov
ljmp
in
shlb
shr
int3
xchg
jmp
ret
add
imul
sar
xchg
out
add
cs
ds
sbb
mov
pusha
cmp
sub
xlat
or
aam
push
sub
push
pusha
outsl
sub
mov
testl
jge
pop
pop
xor
dec
in
aaa
mov
ds
jmp
test
test
xchg
adc
xlat
xor
out
and
cld
test
pushf
pop
mov
loopne
push
jge
xor
and
lea
test
and
jbe
inc
cwtl
mov
dec
xor
loopne
xor
cwtl
leave
imul
or
outsl
fisttps
aaa
push
roll
enter
int
adc
adc
repnz
out
inc
or
cmpl
and
jp
mov
add
arpl
and
add
add
or
add
adc
or
add
or
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
or
add
or
add
or
add
pop
add
or
pop
add
or
pop
add
or
pop
add
or
pop
add
or
pop
add
add
add
add
jbe
jo
xor
cs
insb
add
imul
insb
add
gs
xor
fs
insb
add
insl
arpl
xor
fs
insb
add
jb
imul
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
add
add
add
add
addb
add
mov
pop
add
add
add
or
add
fisttps
add
add
inc
jb
gs
imul
inc
gs
arpl
popa
jo
add
add
imul
jae
js
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
mov
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
jl
add
add
xor
cmp
xor
xor
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
popa
add
imul
je
and
push
add
insb
add
sub
add
add
arpl
je
outsl
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
je
sub
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
jae
jo
pop
add
jo
xor
pop
add
je
insl
add
add
add
xor
cmp
xor
xor
sub
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
je
jb
popa
add
je
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
test
xor
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
sub
inc
add
add
add
imul
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
insb
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
pop
add
add
inc
add
add
pop
add
and
and
and
and
and
and
and
and
and
and
and
and
add
add
je
sub
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
sub
push
add
add
add
imul
outsl
add
jae
sub
push
add
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
add
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
adc
add
add
and
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
xor
and
and
dec
dec
dec
lahf
cmp
xor
add
add
add
add
add
add
add
push
adc
adc
adc
adc
push
push
push
mov
or
test
push
push
pop
dec
dec
inc
test
mov
pushl
xor
cmp
cmp
mov
mov
outsb
test
add
or
add
add
or
pop
sub
sbb
lcall
sbb
lcall
sbb
incl
inc
lcall
scas
ljmp
incl
iret
iret
call
rcl
ljmp
insl
jmp
and
test
add
add
or
pop
daa
daa
daa
lcall
push
push
jmp
pop
pop
pushl
aaa
aaa
call
mov
ret
rcl
fdivrp
enter
pusha
pusha
pusha
ds
or
inc
push
push
push
popa
sub
and
jmp
and
jmp
and
jmp
daa
daa
decl
dec
jge
jge
lret
lret
lret
call
rcl
fstp
fdivr
ljmp
jnp
jnp
dec
dec
dec
lcall
sbb
sahf
adc
adc
xor
and
jmp
and
cmp
cmp
fs
movsb
movsb
ljmp
lods
lods
cld
mov
mov
sahf
sahf
sahf
lcall
pop
jmp
and
into
adc
adc
dec
dec
dec
ljmp
sub
pushl
aaa
aaa
pushl
xor
ds
jb
addb
jmp
mov
mov
ljmp
push
push
lcall
sbb
into
pop
pop
pop
gs
push
push
ljmp
cs
sub
jmp
daa
daa
lcall
push
push
lcall
pop
call
fstp
fdivr
fdivrp
in
jecxz
cmc
cmc
cmc
incb
lea
call
adc
lahf
sbb
sbb
pop
pop
pushl
sub
pushl
aaa
aaa
call
xor
decl
loopne
jmp
out
jmp
loop
push
hlt
hlt
dec
iret
iret
call
push
jmp
es
pop
pop
inc
sbb
sbb
popa
popa
popa
cmp
cmp
aaa
aaa
aaa
jmp
pop
cmp
cmp
cs
rol
fcmovu
mov
sar
out
out
push
icebp
icebp
ljmp
outsb
call
add
add
push
push
gs
cmp
cmp
ds
push
jmp
lcall
pop
ljmp
mov
mov
dec
leave
leave
jmp
in
decb
add
or
add
add
push
push
outsl
outsl
outsl
decl
dec
call
push
decl
dec
lcall
lcall
pop
ljmp
imul
xor
xor
das
das
das
repnz
aas
aas
mov
sbb
sbb
ds
aaa
aaa
pushl
xor
incl
inc
call
push
jmp
pusha
lcall
pop
decl
dec
aas
aas
aas
ljmp
sub
les
add
add
add
add
inc
inc
hlt
daa
daa
daa
shrl
sub
xor
xor
xor
xor
cmp
cmp
ds
cmp
cmp
xor
xor
xor
xor
add
add
add
add
push
push
push
daa
sbb
sbb
inc
inc
inc
sti
dec
dec
dec
decl
dec
decl
dec
incl
inc
cmp
cmp
mov
mov
add
add
add
add
adc
adc
and
and
mov
xor
ss
dec
dec
dec
push
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lock
sub
add
and
add
inc
add
add
add
add
add
add
add
add
add
adc
pop
pop
sbb
sbbl
pop
lcall
adc
or
or
and
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
dec
imul
hlt
xor
xor
sub
sub
xor
xor
xor
xor
and
and
pop
pop
pop
jmp
cmpl
add
add
add
add
add
add
add
push
or
or
pop
pop
pop
jp
add
push
add
add
add
add
add
add
add
or
pop
push
dec
cmpsl
addl
xchg
pushl
jmp
and
cmp
cmp
xor
and
ljmp
mov
mov
mov
sti
mov
sbb
add
add
or
push
sub
sub
sbb
sbb
adc
sbb
lcall
sbb
lcall
sbb
notl
push
push
fcoms
adc
mov
or
xchg
xor
xor
xchg
mov
xchg
xchg
xchg
lcall
movsb
movsb
pushl
ss
aaa
aaa
ljmp
sub
ljmp
imul
rol
inc
ret
ret
inc
ret
ret
call
push
fadds
pop
pop
add
add
xor
and
lcall
sbb
call
sbb
lcall
sbb
lcall
sbb
sbb
sbb
lcall
sbb
lcall
pop
pop
jnp
jnp
xchg
xchg
xchg
lcall
movsl
ljmp
xchg
ljmp
sub
mov
enter
lret
lret
dec
int
dec
int3
int3
pushl
cmp
ljmp
sub
flds
add
sbb
add
add
cmp
cmp
and
and
sbb
pop
pop
lcall
sbb
lcall
sbb
push
push
push
lcall
pop
pop
lcall
sbb
lcall
and
inc
lcall
movsb
movsb
ljmp
mov
mov
inc
inc
ljmp
imul
rcl
call
rcl
call
aam
call
aad
call
aad
jg
jg
inc
inc
inc
cmp
cmp
pop
pop
pop
stos
add
add
add
add
add
add
and
and
pop
lcall
sbb
lcall
push
push
jmp
and
lcall
sbb
jmp
and
ljmp
sub
cmp
cmp
mov
stos
pushl
rol
mov
popf
mov
xlat
xlat
fcos
fdivr
fcmovnu
leave
leave
leave
jmp
pusha
call
push
incl
inc
pushl
xor
cld
or
or
add
add
add
add
sub
sub
sub
sub
and
and
sbb
sbb
push
push
push
lcall
pop
pop
pushl
xor
jmp
and
lcall
sbb
daa
daa
daa
pushl
xor
inc
inc
inc
jmp
pushl
mov
enter
iret
call
aam
fcmovu
fstp
loopne
loopne
loope
loope
jecxz
jecxz
fwait
fwait
fwait
pushl
jno
pop
pop
pop
decl
dec
cmp
cmp
and
and
add
add
sub
sub
sub
sub
and
sbb
and
pop
pop
pop
pushl
xor
sbb
sbb
pop
pop
pop
ljmp
sub
cmp
cmp
push
push
push
jmp
arpl
popf
popf
popf
inc
dec
into
into
call
aad
jecxz
loope
out
in
out
out
out
out
xlat
xlat
xlat
decl
jle
ljmp
imul
push
push
ds
sub
add
add
add
add
and
ret
cs
xor
jmp
daa
daa
lcall
push
push
lcall
pop
pop
jmp
and
jmp
and
call
and
pushl
xor
incl
lcall
pop
ljmp
outsl
incl
call
aad
call
ror
dec
lret
lret
dec
iret
iret
fstp
fdivr
in
in
in
out
out
out
pushl
popf
popf
decl
js
pop
pop
pop
incl
inc
ljmp
sub
push
push
push
popa
add
add
and
lds
xor
pushl
xor
sub
sub
push
push
push
lcall
pop
pop
ljmp
sub
jmp
and
call
adc
pop
pop
pop
pushl
xor
dec
dec
dec
jmp
arpl
ja
ja
mov
stos
call
iret
into
dec
int3
lret
dec
int
dec
iret
iret
fcmovu
jecxz
jecxz
fcomp
fdivr
mov
mov
cmpsl
cmpsl
cmpsl
lcall
addl
inc
inc
inc
ljmp
cs
add
add
and
pushl
aaa
aaa
ljmp
push
push
jmp
and
ljmp
sub
sbb
cmp
decl
dec
call
push
jmp
addr16
jnp
jnp
xchg
xchg
xchg
jmp
pop
pop
mov
iret
iret
decl
dec
cmp
cmp
leave
int3
int3
cli
fcomip
jne
jo
mov
mov
mov
mov
mov
mov
test
inc
inc
inc
ljmp
sub
call
push
push
stos
add
add
daa
daa
lds
push
cmp
cmp
xor
xor
sbb
and
pushl
xor
lcall
push
push
jmp
pusha
decl
dec
jmp
pusha
pushl
ja
jmp
xchg
xchg
cmp
mov
into
cmp
cs
ret
ret
cli
in
in
push
mov
jmp
lret
addl
and
stos
add
add
sub
lds
pop
incl
inc
pushl
xor
es
inc
decl
dec
ljmp
das
das
call
adc
lcall
sbb
pushl
xor
call
push
ljmp
outsl
incl
dec
pushl
jno
aad
call
xlat
xlat
mov
mov
fucom
loopne
jecxz
in
ret
ret
push
push
push
pushl
cmpsb
cmpsb
decl
pusha
pusha
pushl
aaa
aaa
jmp
and
call
adc
xchg
add
add
bound
inc
inc
inc
pushl
aaa
aaa
jmp
and
jmp
and
pushl
xor
pushl
aaa
aaa
call
adc
call
pop
pop
ljmp
sub
decl
ljmp
outsb
pushl
jo
xor
xor
lret
lret
lret
jmp
jecxz
call
aad
call
aam
call
xlat
fdivr
fcmovnu
fdivr
repz
div
idiv
insb
insb
insb
incl
movsb
movsb
incl
push
ljmp
das
das
lcall
push
push
decl
add
add
xor
lds
pop
decl
dec
cmp
cmp
es
and
pushl
xor
incl
inc
call
adc
call
and
incl
inc
jmp
addr16
aas
aas
aas
pushl
jno
fdivrp
in
in
jmp
call
out
jmp
push
repz
push
cmc
cmc
push
div
dec
int3
int3
decl
dec
call
jne
incl
jmp
daa
daa
lcall
sbb
sti
add
add
add
add
xor
lds
push
decl
dec
cmp
sub
jmp
sub
incl
inc
lcall
adc
lcall
sbb
xor
xor
dec
dec
dec
ljmp
sub
fdivr
in
in
ljmp
jmp
jecxz
push
repnz
repz
cmc
cmc
push
div
pushl
jne
pusha
pusha
pusha
jmp
pushl
pop
pop
call
add
add
add
add
aaa
aaa
lds
jno
push
push
push
aas
aas
aas
ljmp
cs
sub
pushl
xor
decl
dec
call
adc
call
push
push
jmp
es
js
call
rcl
fcmovnu
loop
loop
out
out
fcmovnu
ret
push
lock
repnz
hlt
hlt
push
cmc
cmc
fcos
cmp
cmp
inc
inc
inc
ljmp
sub
lcall
sbb
decb
or
dec
add
add
add
add
cmp
lds
push
incl
inc
ljmp
cs
aaa
aaa
ljmp
cs
cmp
cmp
jnp
jnp
cmp
cmp
adc
adc
sbb
sbb
daa
daa
daa
mov
into
into
fcomp
fdivr
loopne
loopne
in
in
mov
mov
jmp
loop
out
out
out
push
repnz
repz
repz
sub
and
adc
adc
add
add
add
add
cmp
lds
jo
pop
pop
pop
incl
inc
ljmp
das
das
cmp
cmp
ds
push
pushl
jbe
jle
jle
and
and
adc
adc
fs
lret
aad
aad
fdivr
rcl
sar
test
mov
mov
in
in
out
out
out
push
lock
out
out
out
call
xlat
xlat
pushl
xor
lcall
add
sbb
add
add
cmp
lds
jns
pop
pop
pop
incl
pushl
xor
cmp
cmp
inc
inc
inc
decl
dec
jmp
incl
addr16
decl
test
mov
iret
iret
fcomp
fdivr
cmpsb
cmpsb
cmpsb
jmp
movsl
movsl
jmp
rcl
jmp
jmp
jmp
jmp
out
out
loopne
loopne
jp
jp
push
push
push
sub
add
add
cmp
lds
pop
lcall
pop
incl
pushl
xor
cmp
cmp
inc
inc
inc
decl
dec
call
push
jmp
pusha
decl
dec
decl
dec
ljmp
insl
lcall
scas
scas
inc
ret
ret
pushl
insb
insb
jge
jge
addl
incl
jecxz
jmp
loop
fstp
cmpsl
cmpsb
movsl
mov
and
sbb
add
add
cmp
lds
ljmp
imul
inc
inc
jmp
incl
inc
inc
decl
dec
call
push
lcall
pop
lcall
pop
lcall
pop
call
push
jmp
decl
mov
call
push
pushl
xor
cmp
cmp
cmp
cmp
cmp
cmp
xor
mov
mov
push
push
push
dec
add
add
add
add
cmp
lds
jnp
arpl
incl
inc
cmp
cmp
dec
dec
dec
incl
decl
dec
call
push
lcall
pop
lcall
pop
jmp
popa
jmp
popa
lcall
pop
lcall
pop
lcall
pop
cmp
cmp
sub
sub
jmp
es
pop
pop
int
adc
imul
add
add
ss
push
decl
dec
cmp
cmp
sub
cmp
incl
inc
decl
dec
call
push
lcall
pop
lcall
pop
jmp
popa
jmp
popa
lcall
pop
lcall
pop
call
push
decl
dec
incl
inc
cmp
cmp
xor
sbb
mov
add
add
add
add
xor
mov
cs
push
jmp
and
lcall
push
push
jmp
xor
cmp
dec
dec
lcall
pop
jmp
pusha
lcall
pop
lcall
call
push
call
push
decl
dec
incl
inc
cmp
cmp
xor
xor
sbb
sbb
add
add
sbb
sbb
inc
inc
incl
inc
decb
mov
and
jmp
sub
ljmp
sub
ljmp
sub
sub
sub
xor
cmp
cmp
inc
inc
inc
incl
inc
decl
dec
incl
inc
ds
cmp
cmp
xor
xor
sbb
sbb
add
add
push
push
push
jp
push
push
incl
aad
or
push
sub
sub
sub
sub
xor
xor
xor
xor
ss
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
aaa
aaa
aaa
pushl
xor
pushl
xor
ljmp
sub
incb
inc
cmp
cmp
or
or
and
and
pop
pop
inc
adc
adc
das
das
pushl
xor
cmp
cmp
ds
inc
incl
inc
decl
dec
decl
dec
decl
dec
incl
inc
incl
inc
ds
cmp
cmp
xor
xor
cs
sahf
sahf
mov
add
or
add
add
or
cs
push
push
jno
and
pushf
xor
xor
inc
inc
inc
lock
dec
dec
push
push
push
call
push
call
push
call
call
push
decl
incl
inc
incl
inc
cmp
cmp
push
push
push
dec
lret
int3
int3
int3
out
add
sldt
add
add
add
or
or
sbb
sbb
sub
ja
ds
push
push
push
hlt
push
push
push
decb
incl
inc
cmp
jae
xlat
cwtl
cwtl
cwtl
shlb
and
add
or
daa
sbb
sbb
and
jge
es
add
add
add
add
add
add
incb
jg
cmp
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
push
add
incl
add
cld
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
pop
push
add
add
push
sub
adc
pop
push
pop
pop
imul
pop
jno
adc
arpl
or
dec
add
add
or
sbb
or
add
add
add
add
add
add
add
add
add
add
add
adc
push
adc
xor
inc
pop
push
dec
nop
ds
sbb
sub
sub
cs
xor
xor
xor
xor
xor
xor
and
and
sbb
imul
dec
inc
ds
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
xor
push
arpl
mov
jge
out
mov
and
and
and
and
xor
xor
xor
xor
xor
xor
pop
pop
pop
incb
inc
mov
mov
lods
scas
scas
movsl
mov
jge
pop
push
dec
push
daa
and
or
add
add
add
or
add
adc
add
sbb
add
push
push
xchg
add
add
add
add
add
xor
add
and
add
add
add
add
add
add
add
add
add
add
add
push
push
das
pop
push
dec
mov
xchg
xchg
xchg
xchg
lcall
push
push
push
push
push
pushl
xor
cmp
cmp
cmp
cmp
sub
sub
push
push
push
lcall
mov
pushl
mov
mov
mov
scas
scas
scas
testl
or
add
add
add
add
or
add
pop
add
add
or
lcall
push
sti
adc
adc
adc
adc
adc
adc
in
adc
enter
mov
add
add
cmp
add
sub
add
and
adc
sarb
jge
test
mov
xchg
xchg
xchg
cwtl
cwtl
cwtl
lcall
and
and
sub
sub
aas
aas
aas
cmp
cmp
and
and
dec
dec
dec
inc
rol
mov
mov
mov
mov
mov
pushf
aam
sub
push
add
add
add
add
add
add
adc
adc
cs
xor
xor
sub
sub
sbb
adc
adc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
adc
adc
push
push
push
mov
jnp
jnp
addb
xchg
xchg
xchg
cwtl
cwtl
cwtl
popf
popf
popf
mov
test
push
push
push
and
and
aas
aas
aas
sub
and
mov
mov
sar
inc
inc
ret
ret
inc
inc
rol
mov
mov
xor
xor
push
push
push
pop
add
add
add
add
add
add
daa
daa
daa
out
and
das
das
lcall
push
push
sbb
adc
push
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pop
pop
pop
ds
mov
xchg
xchg
xchg
lcall
mov
ljmp
popf
popf
ljmp
sub
ljmp
sub
and
push
push
dec
enter
mov
enter
lret
dec
int3
int3
dec
lret
lret
dec
lret
lret
dec
lret
lret
jno
jno
ss
or
push
add
add
add
add
add
add
sbb
sbb
cmp
cmp
inc
inc
inc
jmp
and
pop
pop
pop
call
pop
pop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
sbb
sbb
sbb
sbb
sbb
sbb
and
and
daa
daa
daa
jg
jg
xchg
xchg
xchg
lcall
mov
test
mov
mov
mov
mov
mov
bound
and
sub
lcall
int
dec
into
into
dec
iret
iret
dec
iret
iret
call
rcl
rcl
sar
iret
iret
iret
mov
dec
dec
ds
daa
daa
aad
push
push
das
add
add
add
add
sbb
xor
cs
and
and
and
and
push
push
push
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pop
pop
pop
pop
sbb
sbb
sbb
sbb
pop
pop
pop
and
sub
incb
inc
cmpsb
cmpsb
cmpsb
mov
cmpsl
cmpsl
scas
scas
scas
mov
mov
mov
mov
lods
xor
xor
push
push
push
dec
iret
iret
rcl
sar
aad
aad
aad
aad
fcomp
fdivr
xchg
dec
incb
inc
cmp
cmp
xor
xor
sbb
add
or
add
add
add
sub
pop
pop
out
and
and
and
and
and
pop
pop
pop
lcall
sbb
sbb
sbb
sbb
push
push
lcall
pop
pop
and
and
sbb
sbb
sbb
sbb
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
xchg
cmpsb
ljmp
mov
mov
rol
dec
lret
jo
jo
mov
call
xlat
xlat
fcomp
fdivr
fcmovu
fcmovnu
fcmovu
fcmovu
int3
int3
int3
lcall
pop
pop
pop
pop
decl
incl
inc
cmp
cmp
das
das
das
clc
or
add
add
add
add
add
add
add
sub
and
out
and
daa
daa
jmp
daa
daa
and
and
sbb
sbb
sbb
sbb
sbb
push
push
jmp
and
jmp
and
and
sbb
sbb
sbb
pop
pop
pop
jmp
es
cs
aaa
aaa
incl
inc
pop
pop
pop
ljmp
mov
mov
mov
lret
iret
iret
iret
inc
ret
rcl
sar
fcos
fcmovnu
fstp
fdivrp
fdivrp
fdivrp
loopne
loopne
cwtl
cwtl
cwtl
ljmp
push
pusha
pusha
pusha
call
push
decl
dec
ds
xor
jmp
and
mov
add
add
add
add
add
add
and
and
sub
sub
sub
sub
sub
sub
es
sbb
lcall
sbb
push
push
push
jmp
and
lcall
pop
pop
pushl
aaa
ss
cmp
cmp
sbb
sbb
sbb
sbb
and
and
sub
sub
xor
xor
cmp
dec
dec
push
push
push
call
mov
mov
dec
lret
iret
iret
iret
call
rcl
call
xlat
xlat
fcmovu
fstp
loope
loope
loop
loop
loop
loop
jecxz
jecxz
rcl
sar
addb
push
push
pop
pop
pop
call
push
incb
inc
pushl
aaa
aaa
ljmp
sub
repz
or
add
add
add
add
add
sub
and
sub
sub
sub
sub
sub
sub
sub
sub
sbb
sbb
sbb
and
pop
pop
pop
push
push
push
xor
xor
push
push
push
sbb
and
sub
incb
push
push
push
pop
pop
pop
outsl
outsl
outsl
mov
mov
rol
dec
enter
into
into
rcl
sar
xlat
xlat
xlat
fstp
jecxz
loop
in
in
out
out
out
out
out
out
call
stos
stos
decb
jg
je
je
gs
push
push
push
decb
dec
cmp
cmp
sub
sbb
xchg
add
add
add
add
add
es
sub
sub
cs
sub
lcall
sbb
pop
pop
pop
and
and
pop
pop
pop
jmp
and
jmp
and
call
sbb
pushl
xor
cmp
dec
dec
lcall
pop
data16
jae
cltd
cltd
cltd
inc
mov
int3
int3
int3
call
rcl
fdivr
fdivr
out
jecxz
ljmp
jmp
jmp
jmp
jmp
fsin
lahf
lahf
lahf
call
xchg
ljmp
outsb
lcall
pop
decb
cmp
cmp
das
das
das
and
and
add
add
add
add
or
or
sub
clc
cs
xor
xor
xor
xor
sub
sub
push
push
push
pop
pop
pop
push
push
push
and
and
and
and
push
push
push
push
pop
pop
pop
sub
sub
xor
inc
inc
push
push
push
pop
pop
pop
outsb
outsb
outsb
jns
jns
test
mov
xlat
xlat
aad
ror
int
mov
dec
lret
lret
dec
int3
int3
fcmovnu
in
in
in
out
out
out
out
out
out
mov
movsb
movsb
popf
popf
popf
xchg
xchg
xchg
incb
ja
fs
push
push
push
cmp
cs
and
and
push
push
push
xor
add
add
or
xor
sub
clc
xor
xor
xor
xor
xor
xor
cs
pop
pop
lcall
pop
pop
push
push
push
jmp
and
ljmp
sub
jmp
es
adc
adc
sbb
pushl
aaa
aaa
decb
dec
call
push
jmp
gs
je
je
jg
jg
mov
mov
dec
int
inc
mov
call
rcl
rcl
aad
fcomp
fdivr
fcomp
fdiv
fdivp
icebp
icebp
icebp
pushl
lods
jmp
cltd
cltd
decb
jle
ljmp
push
push
push
push
aas
aas
aas
pushl
xor
daa
daa
daa
stc
or
or
add
add
or
xor
sub
clc
xor
xor
ss
xor
lcall
pop
pop
lcall
push
push
push
push
push
jmp
sub
jmp
adc
call
adc
sbb
sub
cmp
cmp
dec
dec
dec
lcall
ljmp
imul
js
incl
lea
pushl
leave
leave
rcl
sar
enter
mov
mov
loope
neg
loopne
icebp
loopne
loope
sahf
pushf
pushf
mov
mov
ljmp
lahf
lahf
xchg
xchg
xchg
incl
outsl
outsl
push
push
push
incl
inc
pushl
xor
and
and
adc
adc
add
add
or
xor
sub
aaa
cmp
cmp
aaa
aaa
aaa
xor
xor
and
and
push
push
push
pop
pop
pop
daa
daa
daa
das
das
das
and
and
cs
push
push
push
bound
decb
dec
outsl
outsl
outsl
je
je
jle
jle
jg
jg
xchg
xchg
xchg
mov
mov
pop
pop
pop
popa
pop
pop
dec
int3
lret
aad
xlat
decb
sub
daa
es
pusha
popa
popa
fcmovnu
fdivrp
out
out
popf
fwait
cltd
negl
mov
mov
mov
mov
mov
mov
movsb
movsb
movsb
test
jmp
stos
push
push
push
incb
inc
sub
and
adc
adc
or
or
das
das
clc
pop
pop
pop
incl
inc
cmp
cmp
xor
and
lcall
sbb
and
and
sub
sub
xor
xor
es
incl
gs
push
incl
xchg
xchg
call
xchg
xchg
mov
mov
lods
lods
lods
ljmp
inc
inc
lcall
push
dec
int
xlat
jp
jnp
sub
sub
call
push
call
stos
stos
testl
xchg
mov
mov
jmp
mov
in
in
in
jmp
push
push
cmp
cmp
sub
sub
push
push
push
decl
add
add
or
xor
xor
clc
pop
pop
pop
incl
inc
cmp
cmp
jmp
and
jmp
daa
daa
cmp
cmp
xor
xor
cmp
cmp
cs
adc
adc
adc
sbb
jmp
es
cmp
cmp
push
push
push
jmp
pushl
jne
addl
call
push
xor
sub
call
rcl
fcmovu
pushl
pop
pop
decb
dec
lcall
jecxz
in
in
jecxz
loop
imul
push
push
push
lods
lods
lods
pushl
test
pushf
pushf
pushf
call
je
dec
dec
dec
pushl
ss
es
push
push
push
adc
adc
add
add
push
push
xor
xor
clc
fs
inc
incb
inc
cmp
cmp
and
and
and
cmp
cmp
cmp
pop
pop
pop
incb
adc
adc
adc
adc
sbb
sbb
and
and
xor
dec
dec
bound
jae
jae
addl
xor
pop
pop
pop
fsin
rcl
sar
aam
aad
aad
fsin
lret
dec
lret
int3
fcmovnu
loopne
loop
fcomip
hlt
repz
std
mov
inc
inc
jg
jg
mov
mov
test
fwait
fwait
incb
data16
inc
xor
xor
and
and
sbb
or
push
add
add
push
push
push
xor
xor
imul
dec
dec
incl
inc
cmp
es
and
and
and
sub
sub
ss
inc
pop
pop
pop
call
adc
push
push
push
lcall
push
push
pushl
xor
decb
dec
jmp
pusha
pushl
jb
addb
ljmp
sub
mov
mov
loop
loop
loop
fdivrp
rcl
sar
rcl
sar
aad
fdivr
xlat
fcmovu
call
fcomp
in
in
jmp
div
idiv
div
idiv
insb
insb
insb
decb
jmp
test
cltd
cltd
cltd
jg
jg
pop
pop
pop
incb
inc
ljmp
sub
and
and
sbb
sbb
pop
pop
pop
add
add
sysenter
aaa
aaa
aaa
clc
insl
insl
insl
decl
incl
inc
aas
aas
aas
ljmp
sub
jmp
and
and
and
sub
sub
ss
inc
and
and
adc
adc
adc
adc
sbb
sbb
sub
sub
inc
inc
inc
lcall
pop
ljmp
outsl
push
push
sub
sub
push
push
push
fdivrp
loope
loop
out
out
call
call
fdivr
fcomp
fdivr
loopne
loopne
lock
jmp
clc
cmc
hlt
div
idiv
div
idiv
incb
inc
pushl
jno
cmpsb
cmpsb
cmpsb
xchg
xchg
xchg
pushl
jbe
push
push
push
cmp
cmp
daa
daa
daa
lcall
sbb
aam
add
sldt
add
sysenter
cmp
cmp
push
push
push
decb
dec
decb
dec
incb
inc
sub
sub
daa
daa
daa
and
and
daa
daa
daa
xor
xor
inc
inc
inc
xor
xor
paddd
adc
sbb
sbb
and
cmp
push
push
push
push
push
inc
inc
inc
sub
sub
test
test
fdivr
loop
loop
in
out
call
jmp
lock
ljmp
repnz
div
hlt
hlt
cmc
cmc
div
idiv
div
idiv
hlt
hlt
hlt
je
je
inc
inc
inc
nop
nop
nop
decb
imul
dec
dec
xor
xor
and
and
sbb
sbb
adc
adc
add
add
sysenter
cmp
cmp
dec
dec
dec
decl
dec
decl
incb
ljmp
sub
ljmp
sub
and
and
es
das
das
incl
inc
ds
adc
adc
adc
push
push
push
jmp
and
xor
xor
dec
dec
dec
call
push
and
and
pop
pop
pop
call
fcmovnu
loope
loope
in
in
jmp
jmp
in
in
in
call
repnz
repz
repz
cmc
cmc
cmc
push
cmc
cmc
push
div
rcl
sar
inc
inc
inc
lcall
pop
jle
jle
pop
pop
pop
cmp
cmp
sub
sub
push
push
push
lcall
sbb
clc
or
or
add
add
add
add
adc
xor
ds
arpl
lcall
pop
decl
dec
incb
inc
ljmp
sub
ljmp
cs
sub
sub
and
sub
cmp
cmp
ss
and
decb
ud0
adc
lcall
sbb
sub
sub
cmp
cmp
das
das
das
sub
sub
scas
scas
scas
call
aam
fcmovnu
loopne
loopne
in
in
call
ljmp
mov
lock
repnz
repz
hlt
hlt
hlt
push
cmc
cmc
push
div
div
idiv
test
cmp
bound
decl
dec
pushl
xor
and
and
sbb
sbb
adc
add
or
add
add
add
add
adc
xor
inc
inc
clc
insb
insb
insb
push
push
push
decb
dec
sub
sub
das
das
das
xor
xor
sub
sub
sub
sub
xor
xor
cmp
cmp
pop
pop
pop
adc
adc
adc
adc
push
push
push
and
and
sub
sub
sbb
fs
lret
lret
rcl
sar
fsin
jecxz
jecxz
out
out
jmp
int
mov
mov
loope
loope
lock
repnz
repz
hlt
hlt
hlt
cmc
cmc
cmc
cmc
cmc
cmc
loopne
loopne
aas
aas
aas
cmp
cmp
inc
inc
inc
sub
sub
pop
pop
pop
sbb
sbb
or
or
add
add
adc
xor
inc
inc
clc
pop
pop
pop
ljmp
push
push
push
push
decb
dec
ljmp
xor
ss
xor
ljmp
sub
ljmp
pop
pop
jle
jle
cmp
cmp
adc
adc
adc
adc
sbb
sbb
sbb
sbb
and
and
mov
mov
mov
sar
xlat
xlat
xlat
fstp
loope
loope
in
in
loopne
loopne
mov
mov
mov
mov
mov
out
out
out
out
out
out
icebp
icebp
icebp
push
repnz
repz
repz
hlt
hlt
call
das
das
pushl
xor
jmp
sbb
adc
add
add
add
add
adc
xor
inc
inc
clc
gs
outsl
call
push
decb
dec
ljmp
cs
xor
aaa
aaa
aaa
cmp
cmp
xor
xor
cmp
cmp
insl
insl
insl
jge
jge
ja
ja
and
and
adc
adc
adc
adc
pop
mov
dec
into
into
aad
aad
fcmovnu
jecxz
jecxz
mov
ljmp
mov
pushl
out
out
out
out
out
out
push
icebp
icebp
push
repnz
repnz
lock
fdivr
inc
inc
inc
ljmp
sub
jmp
and
sbb
sbb
add
add
add
add
adc
adc
arpl
imul
pop
pop
pop
decb
cs
xor
xor
cmp
cmp
cmp
cmp
inc
inc
inc
decb
dec
imul
incb
push
sbb
sbb
adc
adc
sbb
sbb
nop
nop
nop
mov
mov
rol
dec
lret
lret
rcl
sar
fcomp
fdivr
fdivr
fsin
stos
stos
stos
stos
stos
stos
scas
scas
scas
mov
mov
mov
in
in
out
out
out
out
out
out
lock
out
out
out
in
in
in
jmp
xchg
xchg
es
pop
pop
pop
cmc
or
or
add
add
adc
xor
inc
inc
clc
jo
jo
insl
insl
insl
lcall
pop
decb
dec
ljmp
das
das
pushl
xor
cmp
cmp
cmp
inc
inc
decl
dec
push
push
push
pushl
outsl
jg
jg
mov
push
adc
dec
dec
call
cmpsb
cmpsb
pushl
dec
into
into
call
aad
fcmovu
mov
mov
lahf
lahf
lahf
jmp
cmpsl
ljmp
test
sar
in
in
in
in
in
in
in
in
in
ljmp
jmp
loop
aam
aam
inc
inc
inc
cmc
push
push
push
pop
add
add
add
add
adc
adc
inc
inc
clc
push
push
jno
jno
pop
pop
pop
decb
dec
ljmp
das
das
pushl
xor
cmp
cmp
ds
inc
decl
dec
decb
dec
call
push
jo
outsl
jp
jp
dec
dec
dec
incb
inc
ljmp
outsb
decl
fwait
fwait
ljmp
mov
call
rcl
dec
int
decb
xchg
xchg
call
lcall
lcall
jecxz
jecxz
call
call
in
loope
loope
fstp
leave
enter
dec
dec
push
add
add
add
add
adc
adc
inc
inc
clc
pop
pop
pop
jmp
pusha
lcall
decb
dec
ljmp
das
das
pushl
xor
cmp
cmp
aas
aas
aas
incl
decl
dec
decb
dec
call
push
pop
pop
pop
lcall
pop
decl
dec
incb
inc
decl
dec
ljmp
imul
xchg
xchg
jmp
mov
mov
leave
leave
decl
pop
pop
ljmp
insl
pushl
jne
jns
jns
jns
jns
jae
jae
addr16
mov
mov
in
in
loope
loope
fcmovu
lods
stos
test
sub
add
add
adc
xor
inc
inc
clc
pop
pop
pop
js
js
pop
pop
pop
decb
dec
das
das
das
outsb
outsb
outsb
xchg
xchg
xchg
incb
inc
incb
inc
decb
dec
decb
dec
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
push
push
push
push
push
popa
popa
pop
incb
mov
mov
mov
mov
cmp
cmp
xor
cmp
incb
inc
incb
incb
inc
incb
inc
cmp
cmp
push
push
push
aad
aad
sti
mov
pop
pop
push
pop
pop
pop
add
add
add
adc
inc
inc
inc
clc
jns
jns
mov
pop
pop
decb
ljmp
das
das
jge
jge
cltd
cltd
cltd
incl
inc
incl
inc
decl
dec
decb
dec
call
pop
pop
pop
lcall
pop
lcall
pop
popa
popa
popa
jmp
popa
jmp
pusha
pop
pop
pop
lcall
jmp
incb
imul
and
and
and
and
and
es
daa
daa
daa
jmp
daa
daa
jmp
daa
daa
daa
daa
daa
hlt
sub
sub
je
jb
dec
dec
dec
inc
adc
adc
add
add
adc
inc
inc
inc
clc
pusha
pusha
pusha
ljmp
outsb
lcall
pop
decb
dec
ljmp
cs
xor
cmp
aas
aas
incl
inc
decl
dec
decb
dec
call
push
pop
pop
pop
lcall
pop
jmp
pusha
popa
popa
popa
jmp
jmp
popa
pop
pop
pop
lcall
lcall
pop
push
push
push
decl
incl
inc
aaa
aaa
aaa
ljmp
cs
sub
sub
sub
sub
sub
sbb
sbb
pop
pop
pop
adc
add
add
adc
xor
inc
inc
clc
push
push
push
push
push
push
decb
dec
incb
inc
sub
sub
xor
xor
cmp
cmp
aas
aas
aas
incb
inc
decb
dec
decb
dec
push
push
push
pop
pop
pop
pop
pop
pop
pusha
pusha
pusha
popa
popa
popa
popa
popa
popa
popa
popa
popa
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
push
push
decb
dec
decb
dec
incb
aas
aas
aas
cmp
cmp
aaa
aaa
aaa
xor
xor
adc
adc
add
add
add
adc
adc
cmp
inc
inc
cmp
cmp
xor
xor
cs
lcall
daa
daa
pushl
xor
cmp
cmp
inc
inc
inc
decb
dec
call
push
pop
pop
pop
lcall
lcall
pop
popa
popa
popa
jmp
popa
jmp
pusha
pop
pop
pop
lcall
pop
call
push
push
push
push
decl
dec
decl
dec
incb
aas
aas
aas
cmp
cmp
ss
xor
cli
adc
adc
add
add
add
adc
adc
ss
cs
xor
pushl
xor
incb
inc
lcall
pop
lcall
sbb
push
push
push
lcall
pop
pop
jmp
and
jmp
and
sub
sub
xor
inc
inc
decl
dec
lcall
pop
pusha
pusha
pusha
jmp
pusha
lcall
pop
pop
pop
pop
lcall
pop
call
push
push
push
push
decl
decl
dec
incb
inc
ds
cmp
cmp
xor
xor
cli
adc
adc
add
add
add
and
and
aas
aas
aas
cmp
pusha
pusha
fadds
inc
cmc
and
and
and
and
and
daa
daa
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
xor
xor
cmp
cmp
inc
inc
inc
decb
dec
push
push
push
push
push
push
decb
dec
decb
dec
incb
inc
incb
inc
cmp
cmp
cmp
cmp
xor
xor
das
das
das
cli
andps
add
push
add
add
and
and
dec
dec
dec
decl
dec
incl
icebp
or
sbb
and
ljmp
sub
ljmp
sub
cs
das
das
das
pushl
xor
xor
xor
xor
xor
xor
xor
xor
xor
pushl
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
cmp
cmp
cmp
cmp
cmp
xor
xor
xor
xor
sub
sub
or
add
pop
add
add
xor
xor
pop
pop
pop
pushl
ss
add
add
and
ljmp
sub
das
das
das
pushl
xor
pushl
xor
aaa
aaa
aaa
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ss
xor
xor
xor
sub
sub
sub
sub
sub
sub
inc
inc
inc
pushl
cld
xor
xor
add
or
add
add
add
add
adc
dec
das
das
das
cmpb
cmp
push
push
push
xor
sub
imull
cs
xor
xor
xor
cmp
cmp
cmp
ds
inc
incb
inc
incb
inc
incb
inc
incb
inc
incb
inc
incb
inc
incb
incb
inc
incb
inc
cmp
cmp
aaa
aaa
aaa
xor
xor
xor
xor
sub
sub
test
js
js
add
add
add
add
add
add
add
add
cmovnp
sub
jmp
xor
clc
aaa
aaa
aaa
cmp
cmp
ds
inc
incb
inc
decl
dec
decb
dec
decl
dec
decl
dec
decb
dec
decl
dec
decl
dec
decb
decl
dec
incl
inc
incb
inc
incl
inc
cmp
cmp
cmp
cmp
xor
cmp
inc
call
aad
pushl
add
sldt
add
add
add
push
push
push
push
or
or
adc
adc
and
and
inc
inc
inc
filds
inc
cld
dec
dec
dec
push
push
push
call
push
call
push
pop
pop
pop
call
push
call
push
push
push
push
call
push
decl
dec
decb
dec
incl
inc
incl
inc
cmp
cmp
aaa
aaa
aaa
pushl
jae
mov
int
int
int
add
add
add
add
add
add
or
or
adc
adc
and
and
xor
xchg
inc
inc
inc
mov
pop
pop
pop
repnz
pop
pop
pop
pop
pop
push
push
push
push
push
push
decb
decb
dec
incb
ds
ds
lcall
mov
mov
mov
xor
das
add
add
add
add
add
add
push
push
push
adc
adc
and
and
es
cmp
cmp
inc
inc
inc
loope
inc
inc
repnz
inc
inc
sti
ds
cs
ss
cmp
inc
inc
inc
cmp
pop
pop
adc
add
add
add
add
or
adc
or
sub
pop
pop
dec
sbb
or
add
add
add
add
add
add
add
add
add
incl
ud0
add
pop
clc
add
incl
add
add
add
incl
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
incl
add
add
add
incl
add
lock
pop
incl
add
incl
add
incl
aas
incl
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
mov
mov
add
add
mov
jnp
push
lss
das
bound
push
and
sub
loop
sub
aaa
push
lea
gs
mov
sbb
fst
sbb
xor
addb
push
orl
outsl
adc
push
cmc
hlt
fildll
adc
rolb
lods
dec
push
sahf
mov
movsb
cmp
ds
enter
add
pop
cmp
mov
test
adc
jecxz
adc
jne
inc
ljmp
xchg
jg
xchg
clc
shll
push
xchg
pop
pop
xchg
sarl
cmpsl
cmp
xchg
data16
sbb
imul
in
cli
hlt
fsubr
pushf
mov
sbb
pop
cmp
fidivs
xor
dec
shlb
sti
adc
insb
mov
in
cmp
dec
pushf
push
rorl
pop
insb
sub
js
dec
lret
cs
xchg
dec
dec
fcmovb
lods
loopne
or
sbb
adc
push
dec
cld
or
aas
inc
test
out
out
xor
push
mov
jb
aad
bound
loop
mov
iret
cmc
sbb
push
fstpt
cld
add
cli
xchg
shlb
fs
daa
mov
in
adc
jb
inc
cmpsl
into
sub
xor
xchg
sub
in
cmp
adc
fimull
add
int
popf
sub
lahf
or
dec
jb
push
fisttpll
loop
pop
outsb
sbb
jo
adc
test
cltd
push
sub
add
pushf
imul
addr16
add
call
fdivrp
dec
sub
loope
lret
jo
xchg
inc
ret
in
mov
jl
sbb
sti
pop
push
inc
ficomps
lahf
dec
mov
lods
and
mov
jns
fiadds
pop
jno
jnp
movl
inc
mov
add
pushf
es
lret
dec
jmp
imul
mov
dec
sbb
ds
jno
push
scas
dec
adc
outsb
fadds
pusha
push
popa
fldl
xorb
pop
sbb
mov
test
dec
mov
adc
push
lea
mov
xchg
imul
jmp
mov
inc
mov
push
mov
and
adcb
pop
mov
sub
call
and
push
push
test
lods
mov
jmp
ficoml
lods
jecxz
je
dec
cwtl
adc
cmp
pop
inc
sbb
ljmp
ss
inc
enter
jmp
pop
or
xor
jge
jo
mov
jb
enter
outsl
mov
pop
dec
sbb
mulb
inc
sbb
jmp
or
cld
xchg
or
in
adc
lcall
mov
pop
rol
ljmp
dec
faddp
enter
jnp
mov
dec
lahf
sbb
sbbl
push
and
imul
cld
inc
cmp
push
inc
aam
adc
jg
sub
movsb
shrb
fisttpll
xchg
push
stos
adcb
js
or
stc
jae
lds
pop
mov
and
pop
pusha
jnp
out
adc
sub
push
dec
mov
sub
cld
dec
cmp
adc
jbe
xchg
mov
rcrb
jecxz
or
xchg
test
test
push
shll
sbb
xchg
jge
xchg
stos
adc
adc
fdivs
sub
push
pushf
and
pop
pop
into
inc
scas
bound
adc
sti
ret
add
mov
jne
enter
dec
jl
add
xor
or
repz
shll
sahf
mov
outsb
je
std
sub
ss
pop
fimuls
in
xorl
fcompl
push
cld
xchg
or
cwtl
jo
lock
or
outsb
pop
pop
xchg
adc
inc
adc
cmc
mov
xor
test
mov
adc
aaa
les
inc
sbb
arpl
rol
loope
test
adc
sbb
mov
pop
xor
inc
inc
push
cmp
data16
lods
add
push
in
punpcklbw
leave
ljmp
imul
aad
sbb
into
mov
adc
dec
or
add
pusha
mov
sti
movsb
mov
mov
fs
sbb
popa
sub
idivb
movsl
int
mov
arpl
cmc
pop
push
mov
inc
xchg
adc
push
pop
xor
les
cld
xor
ret
cmp
adc
das
clc
xchg
push
lea
lock
inc
movsl
jl
adc
jnp
inc
imull
pop
push
jge
inc
sbb
mov
loopne
nop
mov
push
icebp
inc
jp
jl
aad
in
xchg
mov
mov
xor
cmp
pop
push
lea
pop
xor
jb
jbe
mov
pop
jae
mov
int3
ror
dec
js
nop
ljmp
fchs
mov
repz
insb
jmp
push
stc
lret
push
jbe
jecxz
int
cltd
jecxz
mov
push
inc
xor
in
adcb
pop
mov
cs
addr16
scas
jnp
dec
mov
outsb
ss
and
sti
push
int
roll
xchg
xchg
add
cmpsl
mov
popa
pusha
xchg
sub
add
and
shr
add
jle
mov
jmp
jle
lds
test
xchg
dec
sbb
rep
mov
mov
out
hlt
lock
in
pop
data16
sbb
sbb
mov
call
stos
inc
or
mov
loope
test
pop
add
pushf
mov
fsubl
push
push
loop
test
push
lods
notb
mov
add
test
movsl
shrb
and
cwtl
lahf
pop
mov
es
jbe
jb
jno
cs
cmp
aas
push
jmp
fimull
clc
cli
cmp
add
lods
hlt
int
mov
jae
addb
cmp
popf
movsl
push
jp
int3
cli
or
loop
jl
push
pop
insl
mov
inc
arpl
lods
dec
imul
in
sahf
add
leave
xchg
loope
inc
fld
repnz
xor
pop
fists
pop
pop
pop
or
iret
ror
leave
shrb
pop
arpl
xor
pop
dec
ss
pop
jns
jb
push
dec
cld
cmp
loop
fbstp
jecxz
or
or
repnz
movsb
push
sub
inc
scas
pushf
aaa
mov
fs
jge
cmpsl
inc
subb
rclb
jns
out
lods
fldl
les
and
movsl
add
push
and
dec
jp
mov
inc
out
sar
aaa
inc
cmp
orl
jo
out
in
jp
mulb
sbb
and
shll
cmp
testl
mov
mov
imul
imul
dec
xchg
rolb
push
xor
cmp
mov
in
scas
sub
sub
std
cmpsb
or
pop
mov
sub
pop
out
sbb
sub
add
pop
ret
push
sti
inc
push
xchg
sub
cmp
fs
fisttps
pop
cli
xchg
xchg
fsubs
loopne
js
xchg
sub
mov
out
in
call
call
mov
sbb
and
xor
andb
xchg
pop
push
testb
cmpsb
int
int
popf
scas
lret
lea
mov
insw
xor
xor
add
sub
dec
test
and
sahf
ret
pop
cmp
mov
xor
cs
push
and
stc
sti
mov
xchg
add
push
cld
pushf
sub
pop
adc
out
mov
cmp
pop
jbe
push
xchg
sahf
inc
dec
scas
retw
loopne
inc
xor
in
jg
and
out
imul
pop
xchg
int
out
lods
loopne
ret
xor
jb
fwait
lock
pop
pop
xchg
test
mov
lock
ss
and
insl
pop
aam
xchg
bound
stos
xchg
lret
jl
mov
xor
dec
jnp
dec
pushf
add
xchg
test
add
jo
int
sbb
ss
scas
mov
addr16
sbbl
adcb
push
jae
mov
mov
test
push
push
or
jl
jb
lea
sbb
push
mov
xchg
scas
orl
arpl
or
iret
cmpl
aad
mov
cs
add
fdivl
cmp
mov
cmp
push
push
mov
xchg
sub
fstps
iret
push
fcmovne
enter
mov
cli
in
in
xchg
lea
loop
arpl
pop
jp
dec
sub
mov
stos
lret
sbb
mov
xor
xchg
xchg
push
xchg
push
addb
icebp
xchg
test
fidivrs
mov
mov
fcomps
mov
dec
aaa
mov
daa
push
ret
es
outsb
add
mov
aaa
cltd
adc
js
xor
test
pop
mov
pop
testb
xorb
gs
inc
sahf
inc
push
cmp
aad
pop
sbb
add
jecxz
pop
jg
mov
mov
adc
ss
loopne
mov
fsubrl
mov
orb
mov
imul
xchg
std
aam
sbb
cmpsb
popa
adc
int
push
dec
push
int
test
cmpsl
ret
and
push
pushf
addl
pop
jnp
and
mov
repz
xor
pop
xor
dec
movsl
inc
dec
mov
mov
into
hlt
dec
mov
in
movl
jne
push
jo
xchg
sub
sti
or
hlt
sahf
sub
fildll
xchg
pop
nop
mov
lret
idivl
or
shrb
fnstcw
sbb
fists
aad
jae
aas
div
pop
in
adc
cmc
into
mov
pop
add
sub
xor
ds
bound
adc
dec
cwtl
sti
xor
cmpsb
pop
pop
int3
xchg
icebp
adc
pop
out
sarl
lcall
scas
adc
hlt
and
cmpl
push
push
js
mov
dec
lds
jns
inc
cmpsb
sbb
inc
mov
out
sarb
call
or
in
fcomip
out
fdivrs
or
xchg
decl
inc
mov
sbb
inc
lcall
das
popf
orb
enter
repz
bound
or
scas
rorl
call
push
cmpsb
add
pop
subl
xchg
push
add
add
lock
cmpsl
push
inc
push
cmpsb
pop
add
ficoml
test
test
ss
out
adc
xchg
dec
imul
sub
xorb
jg
mov
cmp
mov
lods
jo
lret
and
aas
sbb
negl
ficoms
push
iret
xor
pop
ljmp
fisubrl
into
sbb
aam
mov
xor
add
adc
jbe
inc
in
push
cmpsb
das
add
mov
push
lods
push
adc
aad
lret
cmpsb
mov
mov
stc
xor
out
push
xchg
orl
lds
sub
jecxz
pop
out
cli
cwtl
sub
in
lock
inc
jno
push
fldt
addr16
or
mov
dec
pushf
sub
fcomp
lea
add
jo
roll
arpl
incl
xchg
cmp
andb
int
pop
or
sti
lcall
je
push
ret
dec
daa
cld
jo
je
mov
aas
mov
ja,pn
stos
popa
aaa
imul
mov
xor
stos
or
inc
jnp
dec
out
push
add
sub
sahf
sarl
sti
dec
cmp
cmp
sar
cmp
cmp
sbb
lods
cmp
ja
xlat
mov
popf
ror
imul
sti
out
mov
push
cmp
fdivrl
addr16
cltd
mov
aam
sub
fdivl
push
js
mov
iret
pop
jo
or
mov
in
add
cmp
stos
ja
xor
mov
clc
fs
faddl
loopne
add
xchg
ficomps
jo
push
adc
jle
push
jge
fldpi
jnp
les
mov
stos
push
jmp
mov
jno
sbb
arpl
sbb
sbb
push
popf
push
sub
cmp
loope
cmp
or
jmp
arpl
cmp
fdivl
adc
mov
scas
out
xor
push
out
hlt
mov
mov
stos
dec
jne
push
repz
lcall
popf
fxtract
popf
sbb
push
ss
imul
dec
enter
into
sub
or
mov
lcall
mov
sbb
inc
xchg
push
xchg
mov
add
add
push
mov
shll
mov
loopne,pt
push
fldt
lea
push
adc
lcall
jge
stos
jbe
xor
movsl
push
loop
xchg
mov
sub
aas
clc
and
mov
pop
mov
pop
add
dec
fdivrs
mov
loopne
mov
gs
clc
sbb
dec
dec
scas
push
dec
xor
icebp
mov
xlat
mov
loope
lods
xor
out
shrl
or
nop
in
adc
out
sbb
out
sub
scas
mov
mov
test
push
popa
test
mov
stos
orl
jle
dec
faddl
aas
iret
pop
sbb
loope
nop
aaa
pop
movsl
decb
ss
mov
xchg
popf
test
mov
xchg
jmp
xchg
sub
orl
sub
adc
mov
inc
test
push
xchg
mov
adc
xchg
into
dec
pop
jnp
jecxz
jo
test
cs
xorb
and
std
mov
xor
sub
lods
inc
andb
xor
pop
push
pop
sbb
add
cs
stc
pop
hlt
add
insb
clc
movsb
jg
push
mov
jmp
neg
test
mov
lahf
lods
fildll
mov
pop
sub
pop
xchg
jle
clc
xchg
push
dec
dec
insl
ficoms
and
fucomp
xchg
inc
jo
push
jb
not
cmp
stos
xchg
fbld
adc
adc
ret
push
icebp
cs
sub
and
repnz
pop
in
xchg
jle
cmp
dec
inc
pop
stos
movsl
lahf
repz
mov
leave
adc
enter
lods
dec
sbb
and
inc
es
xchg
call
push
cmp
jmp
js
pop
pop
jp
test
mov
xor
push
adc
push
jg
call
add
jbe
mov
cmp
mov
imul
push
push
movsl
adc
enter
lock
mov
fisttpll
cld
pop
lods
lahf
lea
pop
jbe
repz
mov
pop
add
lods
sub
pop
daa
aam
pop
push
sbb
xchg
and
push
lcall
xor
push
loopne
daa
movsb
sti
out
out
divl
je
lods
int3
cmc
mov
nop
sub
adc
scas
add
js
daa
shll
jnp
cmc
test
jno
and
hlt
inc
push
mov
movsl
setns
mov
shl
xor
xchg
or
jg
jno
jns
rorb
outsl
dec
dec
xor
push
push
mov
stos
and
jp
push
repz
clc
dec
nop
mov
shlb
std
mov
mov
mov
xor
bound
rclb
inc
xor
imul
lcall
sub
divl
sbb
sbb
ss
inc
ret
into
mov
outsb
xlat
cmpsl
shlb
stos
inc
sbb
pop
dec
pop
ljmp
or
jnp
push
lea
shll
mov
gs
sbb
in
mov
outsl
adc
bound
popw
jnp
inc
pop
loope
stc
mov
jns
imul
xchg
sti
aam
stc
test
cmp
cmp
lcall
in
push
or
cld
cmc
inc
rol
cmpsl
stc
sbb
dec
xor
mov
push
mov
jmp
mov
cmp
popf
fs
cli
add
fcmovnu
sub
lahf
in
mov
cltd
push
leave
or
rorl
jl
xchg
movsl
lcall
dec
cmp
pop
andb
mov
and
push
mov
push
sub
test
mov
push
mov
adc
clc
mov
ficomps
jge
xchg
or
cmp
ret
lcall
inc
out
mov
mov
in
fsubrl
jns
sub
push
xchg
or
ss
lds
cmpsb
bound
jge
fildl
add
mov
pop
in
xor
mov
repnz
lahf
in
cli
adc
pop
mov
jmp
jle
shll
sbb
dec
fidivrl
sti
out
add
and
adc
add
notb
test
jecxz
dec
popf
movsl
mov
popa
xchg
mov
cltd
addr16
jnp
pop
lods
push
mov
add
pop
daa
mov
cmp
adc
loope
imul
add
divb
cli
adcb
push
sub
cmp
xchg
sub
or
push
xchg
sahf
shrb
mov
cli
sbb
fsubs
loop
nop
dec
fxch
xor
movsb
pop
mov
lea
add
repnz
inc
adc
mov
fwait
dec
repz
insb
push
jne
mov
xlat
pop
into
jb
push
filds
xchg
sahf
xor
mov
mov
or
sub
jne
leave
pop
push
dec
shrb
mov
push
cmp
stc
and
pop
js
sbb
inc
inc
mov
mov
mov
subb
mov
pmaxsw
adc
out
dec
jp
sahf
inc
outsl
bound
cli
pop
push
testb
xor
les
jmp
test
cmc
dec
ret
pushf
push
out
fidivrs
push
and
push
xor
sbb
shl
jbe
pop
lret
xchg
call
sysenter
sub
iret
out
sub
inc
mov
cmc
sbb
lods
pop
xchg
mov
mov
jo
popf
sub
pop
iret
rolb
push
push
xchg
call
jg
xchg
push
xor
arpl
mov
fs
mov
cld
lds
xor
imul
push
cmp
insb
dec
mov
js
int
out
pop
pop
cmp
mov
mov
lret
jmp
add
imul
jge
lea
subb
jnp
aad
pop
loopne
pop
out
mulb
mov
out
loope
add
sbb
test
adc
fwait
jns
mov
push
cmc
xchg
jnp
fwait
sahf
push
fisttps
or
imul
ja
xor
dec
jge
mov
push
mov
idivl
mov
lret
push
fstps
xor
pop
xlat
and
cmp
cmp
dec
lds
inc
sub
adc
fldl
add
adc
fst
push
shlb
pop
movsb
int
sti
xchg
sub
test
mov
test
cmp
js
inc
jge
call
inc
dec
sub
mull
lcall
inc
in
lahf
lds
in
inc
jp
mov
notb
aam
scas
loope
fs
sbbb
xchg
xchg
iret
and
rcll
xor
les
push
icebp
in
cmp
xorb
aad
and
or
adc
jbe
add
mov
jmp
movsb
inc
insl
in
mov
xor
mov
out
ret
or
sbb
pop
daa
sub
cmp
lods
call
or
loopne
pop
and
rep
sarb
push
jle
lods
dec
adc
cmp
push
cs
mov
inc
push
lahf
in
pop
sbb
and
gs
mov
dec
pop
jb
adc
pusha
cmpsb
inc
add
dec
test
pop
jb
jo
test
xor
push
in
movsl
adcl
clc
popa
and
popa
test
dec
pop
sbb
std
xor
loop
and
add
push
xor
outsb
js
insb
push
pop
call
push
and
sbb
out
cmpsb
es
test
insl
in
xchg
stc
es
sbb
test
mov
inc
adcl
cmp
mov
adc
sbb
out
pusha
adc
push
ret
lcall
sbb
inc
cs
pop
pushf
sbb
mov
add
enter
out
jle
cmpl
pop
jge
stc
add
fcoms
mov
pop
mov
lds
push
and
cmp
shll
lret
arpl
fdivrl
xor
fnstsw
and
jns
fdivrl
xchg
loopne
loop
mov
mov
arpl
push
fldcw
nop
jns
sub
xchg
cmp
pushf
jmp
fdivl
dec
push
mov
xor
pop
rcrl
jae
and
outsl
mov
mov
lret
ss
xchg
mov
push
loope
sub
lret
cwtl
sbb
hlt
and
lock
and
push
in
arpl
mov
mov
imul
sub
adc
fstps
hlt
push
movsb
xchg
cmp
push
cltd
rcrb
add
push
jbe
push
aas
fldt
cltd
dec
or
jns
int
dec
add
outsl
sarb
adc
ljmp
in
jl
fs
popf
jp
xchg
push
enter
pop
inc
jb
and
lock
ja
loop
cmp
in
scas
xor
and
push
or
or
pusha
psllq
inc
lods
dec
out
icebp
and
xor
cltd
lods
aas
pop
leave
dec
daa
jge
cmpsl
sarb
iret
or
xchg
mov
jle
stc
cmpb
cmpsl
pop
adc
insb
pop
mov
jg
add
fdivl
in
mov
ss
ja
iret
xor
icebp
push
pusha
test
adc
ljmp
rcrl
fcomip
fsubrs
data16
in
jb
cmp
jbe
cmp
dec
lea
or
mov
inc
mov
push
mov
mov
orl
mulb
outsb
push
sbb
fwait
js
push
jns
adc
mov
lret
sbb
sub
cmp
add
jmpw
lret
sbb
xchg
mov
repz
cmp
repnz
cld
inc
inc
sub
pop
ja
dec
das
mov
xchg
jo
xchg
lods
push
stc
lock
add
inc
inc
jbe
es
insl
lea
jmp
jo
fcmovne
push
sub
mov
outsl
ret
sbb
mov
cmc
add
outsb
fsubs
jbe
in
fisubrs
dec
gs
loop
jae
shlb
and
rcll
cmp
fldl
push
xor
lock
push
jo
paddd
in
jecxz
pop
fisubs
out
and
mov
test
mov
repnz
in
mov
fstpl
and
lahf
pop
shrl
icebp
lahf
loopne
mov
push
cmpsb
xchg
xor
adc
mov
ss
cmp
dec
or
dec
dec
ror
stc
cld
adc
xor
mov
adc
sub
fcompl
imul
push
jno
inc
stc
orl
mov
faddp
das
sub
or
pop
mov
mov
cmp
cmp
test
paddsb
test
mov
das
hlt
mov
fxch
gs
loop
in
and
sahf
xor
jecxz
sbbl
dec
lods
fdivrs
subb
loop
idiv
cmp
mov
leave
rclb
mull
adc
push
fcompl
shll
xchg
mov
in
popf
ret
cmp
nop
inc
push
sub
out
fwait
ds
pop
sbb
adc
sub
cli
test
aas
inc
jp
mov
out
aaa
decb
gs
mov
iret
push
inc
jns
int3
rolb
nop
mov
mov
cmp
mov
arpl
test
mov
or
pop
sbb
inc
sahf
sbb
or
loope
mov
and
popa
outsl
sti
into
divl
push
fnstcw
xchg
jp
mov
mov
cmc
jno
xchg
push
or
push
popw
inc
lods
push
and
cmc
and
movsl
sbb
push
out
sbb
fcoms
rcrl
daa
fstps
or
pushf
inc
lret
or
sbb
fdivrp
xor
inc
inc
test
shl
sbb
mov
outsl
sbb
in
incl
sbb
insb
repnz
fwait
mov
mov
sbb
cmp
push
imul
xchg
gs
push
outsb
mull
shll
notl
cltd
adc
add
or
xchg
mov
iret
add
pop
jbe
mov
ret
js
test
cmp
scas
push
repnz
jae
jp
lock
addr16
cmp
cmp
pop
mov
sbb
cltd
cmp
and
sahf
sar
lahf
dec
push
jo
and
sbb
leave
outsl
mov
popl
mov
in
fldl
iret
mov
shrb
into
jnp
bt
rcrl
jne
fsubl
jno
add
pop
fwait
xor
push
xchg
popf
test
rcrl
push
push
xlat
mov
sub
jg
repnz
loope
pop
arpl
xor
sbb
mov
out
and
enter
inc
pushf
call
xchg
mov
cmpsb
movsl
loopne
add
mov
int3
out
inc
orl
fcompl
sub
mov
in
mov
xchg
jne
and
loopne
test
outsb
xchg
cmpl
sbb
cwtl
setp
out
jecxz
pop
push
lcall
push
adc
int3
push
xor
bswap
xor
push
fisttpl
xor
and
cmp
sbb
cli
add
pushf
pop
adc
jno
test
add
sub
cmp
dec
sub
inc
hlt
lret
daa
roll
scas
inc
pop
aam
popa
mov
test
jbe
daa
aam
lea
push
mov
movsb
scas
and
loope
mov
test
cmp
int3
stos
xchg
add
test
sbb
or
mov
loopne
jbe
push
cmc
cltd
loop
sub
xor
jle
je
sub
xor
cli
lcall
cmp
cmp
jno
out
and
xchg
int3
std
add
jae
je
test
jmp
cmp
xchg
mov
push
add
lret
aad
mov
xchg
insl
jno
adc
mov
mov
scas
cmpsl
fs
lret
gs
cmc
rcr
jb
shrb
push
fs
dec
dec
lds
jb
mov
xchg
xchg
cmp
mov
shlb
mov
inc
repz
mov
pop
pusha
mov
movsl
sub
sub
int3
cmp
dec
or
cmp
adc
arpl
inc
sub
mov
pop
aas
inc
mov
fldenv
or
add
jp
adc
dec
je
dec
pop
faddl
in
clc
sbb
push
movsb
mov
lret
out
rolb
enter
in
fs
lock
sbb
lea
dec
adc
mov
xchg
popa
mov
push
adc
pop
rol
cwtl
in
pop
addr16
imul
lock
adc
cmp
repz
push
cmpsb
cwtl
sbb
xor
in
fcoms
xor
push
out
adc
outsl
xchg
pop
and
mov
mov
mov
mov
stc
inc
push
push
addr16
add
pusha
cmp
mov
fmul
lods
dec
out
xchg
mov
sub
xchg
sar
xor
inc
flds
dec
outsb
in
fwait
loopne
aam
sbb
pop
inc
inc
adc
mov
dec
jne
loope
jo
lods
aas
mov
push
add
pop
jecxz
loope
aas
mov
inc
mov
lods
outsl
push
clc
add
inc
and
push
cltd
in
push
subb
rorl
test
mov
sub
jmp
pushf
andb
fstl
sub
mov
icebp
adc
add
jo
sbb
push
into
jge
push
pusha
lahf
loope
lods
xchg
sub
mov
mov
pop
dec
add
cmp
push
mov
xor
jne
push
lods
mov
push
push
xor
pop
popa
scas
adc
orl
leave
das
es
push
popa
mov
sti
loopne
or
pop
jbe
mov
xlat
shrl
dec
cmp
test
mov
sbb
repnz
movsb
movsl
or
rcl
add
push
insb
jo
or
fdiv
mov
in
xlat
sti
jno
movsb
gs
adc
jg
adc
mov
pop
and
orb
pop
in
aam
add
pop
or
sub
call
fcmovnb
in
and
movsb
xchg
out
test
sbb
fildll
xor
mov
mov
pop
js
scas
push
jl
inc
hlt
pop
mov
pop
clc
stos
mov
shrb
dec
insl
lcall
dec
and
adc
bound
cwtl
sub
xchg
movsb
int3
in
lds
dec
inc
cmp
cwtl
pop
pop
adc
push
xchg
pop
and
mov
ret
repnz
xlat
jecxz
mov
pop
xchg
dec
test
fldenv
adc
push
pop
mov
mov
dec
mov
test
dec
sbb
es
out
dec
pop
stc
pop
mov
in
shlb
cmp
gs
jno
std
in
pop
jl
fisubs
add
push
scas
jne
jns
and
aas
cmpsl
pop
sarl
sub
pop
inc
mov
popf
mov
jae
or
sbb
xchg
out
je
aaa
sbb
movsb
xchg
mov
add
dec
in
dec
imul
aam
sub
jge
repz
fcom
push
cltd
pushf
add
pop
inc
rcll
mov
rorb
shll
int3
or
mov
aad
mov
push
cmpsl
cmp
mov
cmp
mov
xchg
ja
fldenv
add
and
adc
cmpsl
jmp
ds
add
in
mov
pop
insb
rcl
push
icebp
sbb
std
js
ja
int3
adc
add
inc
cs
add
ja
push
add
push
lret
dec
adc
jb
shlb
outsb
inc
sbb
outsl
xor
cltd
stos
dec
std
inc
cmpsb
jl
jb
nop
stos
ds
lahf
and
iret
mov
xchg
imul
pusha
or
mov
push
stos
push
push
xchg
loope
inc
fmulp
inc
lahf
cs
cmp
daa
sahf
das
int3
mov
inc
dec
lds
mov
mov
cld
sbb
iret
and
flds
jbe
xor
or
cwtl
arpl
ja
insb
insb
jne
insl
pop
mov
enter
cmp
cmp
or
adcl
rcll
adc
sarl
inc
xchg
test
xchg
andb
sbb
in
adc
lret
inc
mov
add
pop
out
lcall
cmpsb
mov
sarb
and
sbb
and
push
stos
adcl
ljmp
mov
push
jb
stc
in
iret
or
fwait
sub
mov
pushf
push
addr16
push
loope
jo
pusha
mov
std
mov
cld
nop
push
jp
scas
aam
mov
cld
lds
lahf
jbe
ret
dec
mov
cmp
sti
orb
aam
cltd
aad
movsl
xchg
loop
ret
lods
or
dec
mov
xchg
es
mov
fistpll
daa
sbb
push
sub
fnstsw
inc
push
lret
mov
mov
push
xchg
ret
mov
in
mov
inc
sub
and
mov
dec
insw
ss
lahf
lds
or
loopne
iret
or
sbb
push
fcomps
jo
xchg
inc
arpl
mov
push
sbb
leave
outsb
fistps
mov
insb
push
sbb
andb
addr16
ja
dec
int
aam
mov
adc
rorb
inc
sub
pop
xchg
xor
adc
loopnew
incb
jae
je
sbb
inc
rcr
ret
pushf
imul
lea
nop
xor
ss
in
push
push
pop
in
fiaddl
mov
push
jl
cmpsl
dec
imulb
and
sbb
insb
push
xchg
out
ficompl
cltd
xlat
sub
xor
jno
cltd
jnp
dec
adc
test
sahf
rol
or
sahf
dec
ljmp
add
js
jmp
adc
cs
movsl
xor
mov
mov
enter
das
xchg
jp
fildl
pop
or
xor
xor
ret
mov
or
sarb
and
mov
or
inc
push
adc
repz
xchg
fdivs
add
push
dec
notl
ficoml
ret
aad
cs
icebp
das
out
xor
jp
sub
adc
je
incb
jnp
adc
xchg
in
bound
lcall
push
out
out
push
imul
iret
std
rcrl
insl
add
inc
aad
repz
cmp
mov
cwtl
mov
in
jp
gs
mov
push
shl
adc
push
push
pop
scas
xor
roll
enter
mov
sbb
int
fiadds
bound
js
inc
jns
je
fisttpll
imul
dec
xchg
test
ret
inc
push
lcall
mov
dec
les
cld
dec
fisubrl
inc
fwait
push
mov
jae
js
enter
add
stos
adc
or
push
pop
data16
mov
lods
add
repz
jo,pt
inc
push
push
mov
inc
cmp
inc
mov
imul
jl
addr16
shl
jns
call
jl
cmp
pusha
lock
xchg
xchg
orb
jns
xor
push
idivb
dec
pop
sbb
int3
mov
add
push
sub
xchg
push
dec
mov
in
dec
test
test
out
cwtl
cmpsb
addr16
push
mov
hlt
add
scas
test
mov
or
rcrb
push
cmp
cmpl
push
adc
push
cmp
aas
js
jmp
cmp
mov
outsl
jp
jmp
inc
iret
lahf
mov
push
mov
xor
cmc
fistpll
sbb
add
outsb
loop
jl
repnz
mov
cltd
pop
dec
pop
push
popa
xor
divb
bound
inc
cli
mov
movsl
sbb
sbbb
and
out
sbbl
in
adc
cmp
xchg
std
push
pop
sbb
cltd
sbb
lock
mov
lret
dec
paddq
mov
inc
sahf
movsl
clc
mov
movsl
fdiv
rolb
stos
stos
mov
arpl
ror
jl
ret
mov
sub
jne
mov
inc
in
lret
aas
les
xchg
cmpsl
out
adc
mov
int3
imul
cmpsb
adc
dec
push
add
and
push
pop
je
mov
and
jno
insl
in
mov
mull
lret
sbb
in
mov
stos
cmp
outsl
mov
sahf
sbb
hlt
cld
rcrb
sbb
adc
arpl
or
loop
bound
cmp
xchg
mov
sub
push
ljmp
es
pop
xor
dec
push
movsl
fldcw
jle
jmp
xchg
movsb
xor
jbe
lret
mov
popf
outsb
and
mov
icebp
jecxz
fisttpl
jge
out
mov
or
jp
mov
fstps
daa
decl
xchg
mull
loopne
jg
cmp
inc
jno
rcr
cs
pop
dec
scas
inc
push
pusha
out
xchg
adc
lcall
cmp
mov
addr16
sub
mov
mov
sahf
lods
stos
sbb
jmp
pop
pop
inc
mov
fninit
imul
xor
push
mov
mov
popa
int3
mov
mov
sbb
adc
sub
mov
repz
pop
inc
pop
dec
cld
out
mov
jmp
mov
cmpb
mov
mov
insl
clc
xchg
pop
incl
pop
and
sbb
sti
xor
xchg
pop
fcoms
nop
imul
cmpsb
addr16
sub
cmp
inc
and
cld
inc
xor
in
sbb
xor
test
push
inc
mov
call
and
cmp
mov
fwait
call
xchg
or
fildll
ss
adc
pop
ss
fs
imul
jge
fsub
gs
mov
inc
add
lods
jle
cmp
out
lcall
ret
out
cmp
hlt
rcr
lods
inc
icebp
pop
stc
jb
dec
hlt
or
cltd
or
inc
mov
and
mov
fwait
adc
xor
rcrb
push
push
add
cmc
mov
sbb
inc
mov
mov
xor
loope
ret
test
cmpsl
dec
xor
call
pushf
push
cmc
je
shlb
cs
int3
repz
xchg
inc
int3
mov
call
cmp
mov
fsub
leave
ljmp
push
jnp
sbb
popa
dec
xor
dec
sub
shll
mov
add
inc
or
jbe
mov
in
jbe
mov
pop
pushf
and
ret
cmpsl
ret
dec
adc
lea
loopne
mov
pslld
ss
orb
insl
inc
vpunpckhqdq
iret
ljmp
pushf
add
test
add
popf
mov
push
mov
cmp
das
mov
lods
leave
sub
mov
xor
ret
stos
and
in
cli
and
dec
sbb
mov
arpl
mov
stos
pop
mov
mov
pop
sub
pop
dec
dec
lds
dec
pusha
xchg
cmp
cmpsb
fsts
loop
cmpsb
into
lods
mov
push
push
mov
xchg
ss
sbb
ja
cmp
std
xchg
add
ffreep
imul
test
cmp
push
or
pushf
xor
add
jl
lret
mov
insl
jnp
lock
or
movsl
mov
xchg
sub
jl
xchg
int
inc
sbb
dec
lock
scas
and
ss
xchg
xorl
push
xchg
jle
lods
test
enter
cld
xor
in
and
pop
jg
ret
cld
mov
ja
fistps
jl
leave
enter
test
cmp
sahf
fbld
fsts
test
mov
lock
mov
lods
arpl
adc
mov
fs
sbb
fstps
xchg
ds
or
dec
and
mov
ffree
aad
fstl
xchg
jns
aad
pop
mov
pop
adc
push
or
js
xor
std
mov
hlt
adc
cmp
mov
adc
mov
mov
es
mov
push
inc
addr16
cmc
outsb
mov
push
push
xor
insb
push
rcrb
mov
test
jmp
sbb
imul
or
xchg
ljmp
push
in
fcomps
add
and
cmpsb
mov
mov
jmp
cld
bound
repz
xchg
inc
add
xchg
jb
mov
add
jle
or
aas
cld
cli
sbb
loop
fnsave
sbb
arpl
pop
pop
testl
xor
mov
push
and
cmp
fwait
repnz
out
icebp
fstpl
xor
rcrb
scas
push
rol
jecxz
fldl
xor
pushf
cltd
pop
cmp
add
loop
jae
or
mulb
out
out
nop
subw
adc
cwtl
es
mov
aaa
aam
fldenv
imulb
sub
xchg
dec
out
sub
dec
clc
ja
es
mov
mov
gs
pop
pop
cwtl
adc
mov
mov
outsb
aaa
mov
int3
add
sbb
or
mov
repnz
call
aad
fs
outsb
adc
out
mov
xlat
or
mov
push
scas
test
dec
outsl
je
jmp
push
in
jns
into
neg
aas
mov
and
or
adc
inc
std
dec
test
dec
add
test
push
addr16
cwtl
mov
jp
fucomip
sub
jecxz
add
in
dec
ljmp
test
adc
push
movsb
inc
sbb
push
shlb
push
adc
or
jp
test
xor
pop
leave
mov
in
rclb
cwtl
aaa
cmp
adc
jg
ds
not
mov
jge
sbb
mov
out
test
add
ss
jb,pn
icebp
mov
mov
add
mov
and
cmp
jle
repnz
negb
and
push
sub
cmp
mov
jecxz
sbb
push
std
nop
xor
adc
hlt
int
das
test
lahf
dec
loopne
fwait
das
fstpt
cmp
push
sub
mov
cmp
in
or
les
push
out
lds
push
mov
ja
lds
fldenv
adc
cmp
pop
and
mov
xchg
mov
cmp
ffree
movsb
and
out
and
mov
push
adc
ud1
inc
fistps
or
fisubl
xchg
or
fcmovu
inc
pop
push
adc
sub
dec
cltd
mov
cmp
jo
nop
pop
fisubs
lds
jp
and
push
ret
sub
frstor
cltd
push
dec
andb
js
fisttpl
mov
mov
lods
jge
fildl
push
scas
mov
pop
std
pop
push
pushf
inc
rol
adc
mov
push
lds
adc
fdivr
add
jmp
insl
subl
pop
and
mov
inc
cmp
sbb
out
xlat
dec
sbb
outsb
fwait
loopne
fidivrs
sarb
fisubl
cltd
in
xor
inc
mov
mov
addr16
mov
and
add
in
in
xor
jp
pop
pusha
push
js
or
icebp
aaa
out
or
or
jno
es
mov
jg
push
sub
inc
dec
outsb
xchg
pushf
push
sub
out
push
shlb
jg
stos
pop
aaa
call
dec
ret
xchg
sub
sbb
roll
mov
fisubl
sub
lds
stc
addr16
dec
cwtl
gs
lods
enter
push
xchg
notb
sub
bound
or
aam
insl
test
popf
mov
aad
aad
xor
or
xorb
xor
icebp
mov
adc
adc
lods
sbb
mov
cli
and
xchg
jmp
in
sub
sahf
jg
movsb
xchg
mov
adc
fwait
xor
cwtl
ss
cmc
sub
enter
movsl
and
xor
cmc
dec
cmp
scas
inc
jbe
iret
js
xchg
outsb
cmpl
cmp
add
jmp
mov
je
cmp
jp
cli
adc
and
mov
xor
test
test
out
and
das
jle
mulb
mov
or
test
or
shl
push
data16
out
add
test
aas
in
cmpsb
out
dec
push
push
pop
fidivs
cmp
xchg
xchg
xchg
xor
shll
push
mov
inc
add
push
out
mov
repz
aaa
shlb
iret
push
rorl
lods
adc
cwtl
in
mov
sbb
outsl
ljmp
jno
les
idivb
ret
aad
pop
xor
xor
sbb
das
popa
dec
mov
xchg
push
into
xor
xchg
mov
movsl
push
or
dec
test
or
mov
and
jbe
or
mov
sbb
arpl
shll
insl
fdivr
sub
mov
loope
mov
push
sub
xor
loope
adc
arpl
xor
inc
movsb
pop
orb
pop
aaa
lahf
and
xlat
xchg
mov
fiaddl
mov
cmp
cmp
pop
daa
faddl
stos
je
mov
add
lea
mov
add
into
imul
lahf
in
add
xor
pop
sub
dec
sbb
das
pop
jge
rorl
outsb
fwait
cmp
adc
cmp
stos
xor
test
cmp
xor
cmc
sbb
inc
jo
cmp
push
xor
pop
cltd
js
std
imul
mov
jne
mov
xchg
jge
mulb
and
sarl
push
jmp
je
cmp
fmuls
jge
fsubrl
cmp
inc
mov
jle
mov
inc
enter
rcll
sbb
test
imul
push
mov
inc
test
je
daa
jb
pop
mov
ljmp
test
mov
ja
clc
add
pop
std
frstor
pushf
and
mov
roll
sub
and
popa
bnd
popa
ret
cmc
pop
jns
jmp
testb
add
lods
clc
sbb
xchg
lock
cmpsl
fsubrl
push
fimuls
jbe
mov
cmc
sub
sbb
clc
iret
in
xchg
cmp
sub
orb
popa
push
loop
jno
adc
jmp
ds
arpl
andl
arpl
rol
ja
push
jnp
push
addb
jge
enter
icebp
sbb
xor
cmpsb
pop
jge
das
sbbl
dec
lea
inc
aas
sub
pop
arpl
adcb
iret
xor
rcl
cwtl
dec
lds
shrl
leave
pop
enter
cld
mov
cmp
insl
add
loop
cmc
test
jns
imul
add
imul
push
outsb
in
xchg
repz
sbb
cmp
lods
xor
or
mov
xor
and
loopne
pop
inc
fwait
stos
push
push
imul
loop
jp
outsb
icebp
adc
mov
iret
lahf
jecxz
xchg
xor
call
mov
cmpsb
pop
daa
inc
out
pop
jno
xchg
jnp,pt
scas
mov
jmp
and
dec
insb
inc
push
insl
into
mov
or
mov
testl
sbb
cmp
mov
sti
adc
sbb
cmp
dec
sub
pop
push
mov
xor
stos
addl
xor
outsb
and
sub
sti
sub
or
adc
or
mov
adc
inc
shr
jne,pt
popf
mov
mov
repz
mov
pop
mov
cmp
push
sub
cmpsl
loope
ficoml
in
and
pop
sub
inc
popa
sub
jmp
mov
cmpsl
movsb
pop
enter
push
inc
sub
or
add
gs
fld
cmp
popa
fidivs
movsl
pushf
test
loop
adc
incl
fs
sub
aas
pop
aad
in
jae
sub
add
xor
pop
das
inc
push
dec
lods
dec
cmpsl
ss
aaa
rcrl
mov
icebp
rorb
aas
scas
mov
sub
dec
jnp
push
cmpsb
hlt
push
adc
fadd
push
std
mov
shll
push
loop
and
jg
pop
fcoms
fsubrp
mov
lods
mov
add
push
outsb
mov
inc
popa
outsb
jp
sub
mov
test
or
sbb
inc
xor
dec
ret
cmpsl
dec
je
cs
lock
xor
pop
into
sti
mov
add
push
pop
imul
cmc
aam
fwait
sub
pop
mov
out
inc
idivl
fnsave
dec
lcall
shr
aad
loopne
arpl
lods
mov
dec
jae
stos
pop
pop
jp
inc
add
adc
outsb
ss
mov
aaa
dec
scas
in
xchg
cmp
lds
mov
sub
mov
xor
adc
pop
into
push
ss
stc
pop
jge
std
mov
cmp
xor
fnsave
lock
fists
and
cmp
mov
lods
xor
stos
xchg
fstpt
jge
pusha
arpl
imulb
dec
ret
gs
pop
push
mov
daa
mov
jle
xchg
in
add
loop
fisubrl
push
pop
jbe
jbe
inc
adc
sub
xor
sbb
mov
inc
pop
pushf
in
jl
add
jb
aaa
xchg
test
sbb
pop
sbb
inc
mov
xor
iret
adc
xchg
in
adc
sbb
push
cmp
mov
cmp
mov
mov
and
insb
test
stos
add
into
fmuls
enter
jg
mov
and
dec
leave
es
mov
insl
push
cmpsb
out
idiv
adc
dec
fidivrs
add
in
adc
push
inc
lods
in
data16
inc
fwait
sub
dec
aam
mov
data16
out
mov
pushf
xor
das
dec
std
jp
sbb
xor
xlat
mov
dec
add
out
mov
popa
into
lret
aad
ljmp
sbb
popf
test
insl
icebp
dec
push
out
sub
or
mov
shr
je
fcompl
cmpsl
fidivrl
repnz
into
daa
ret
xor
mov
dec
sbb
dec
pushf
adc
rcr
sarb
mov
cli
fimull
pusha
in
pop
es
std
inc
mov
es
fldl
leave
adc
lahf
call
jnp
dec
pop
push
jle
ljmp
inc
adc
stos
sbb
mov
dec
lret
xor
mov
rolb
inc
js
lds
hlt
jbe
addr16
js
aas
clc
cmp
ljmp
jp
arpl
rcrb
sbb
fbstp
adc
mov
and
push
xor
dec
lods
jae
mov
aam
popf
in
daa
mov
jmp
cmp
flds
test
sbb
in
mov
fsubrl
vpmaxsw
or
cmpsl
jb
in
sbb
outsl
sbb
xchg
shrb
and
ja
out
dec
mov
ficoml
adc
adc
dec
sbbl
add
inc
loopne
mov
mov
arpl
or
iret
out
mov
dec
sti
out
pop
jl
cmp
stos
pmaddwd
xchg
dec
jecxz
push
pop
cmp
cld
stos
and
or
pop
mov
arpl
pop
gs
pop
mov
xchg
into
aad
dec
sahf
test
daa
test
or
scas
fwait
sub
aad
sbb
scas
pop
fildl
inc
jge
xchg
dec
sub
push
xor
mov
scas
pop
clc
stc
and
add
push
push
inc
ficomps
sti
sub
dec
pop
inc
scas
mov
imul
inc
cmp
fs
lods
sub
mov
popa
or
adc
dec
sbb
out
mov
sahf
mov
add
mov
test
or
jnp
popa
cmc
mov
ficompl
lahf
sub
xchg
push
sbb
lea
jp
ja
mov
scas
fs
fnstenv
ds
repnz
mov
jge
xchg
divl
mov
mov
movsb
pushf
pop
adc
inc
or
popa
adc
cmp
fcomip
jge
call
add
pop
dec
bound
cmpsl
pop
cld
dec
xor
or
pop
jns
lods
or
sbb
addr16
ja
bound
mov
mov
mov
loopne
add
test
jb
loop
sarl
mov
xor
testb
mov
clc
call
mov
jle
push
pop
add
xor
mov
adc
sbb
jle
add
mov
push
xor
rolb
out
gs
inc
fiaddl
mov
fisubl
mov
mov
lds
out
xor
adc
dec
and
push
jle
mov
icebp
insl
fiaddl
out
int3
cmpsb
pop
inc
mov
jnp
and
outsl
sysret
lret
and
pop
loopne
mov
jecxz
jle
mov
fidivl
xor
mov
ret
jae
add
xor
cltd
add
int3
mov
das
xchg
fdivrs
jmp
push
outsl
or
xchg
shrb
mov
mov
xchg
push
lock
inc
add
lret
aaa
and
lock
push
pusha
or
jmp
lods
aam
rcr
adc
shlb
enter
rcrl
sbb
stos
loope
in
add
inc
xchg
out
in
sub
adc
inc
hlt
mov
xor
mov
aas
jecxz
mov
addr16
add
or
inc
ja
push
popa
cs
test
dec
push
mov
pop
add
cmpsb
lock
sti
es
or
sub
idiv
dec
ss
aas
jl
xor
mov
mov
rcrl
dec
push
dec
incb
out
sbb
subb
mov
inc
lret
xchg
jns
imul
pushf
lods
xchg
xor
inc
shll
in
mov
fistl
pop
cltd
pop
sahf
mov
xor
mov
jae
jge
mov
jge
jmp
xor
and
and
push
dec
pop
push
and
mov
es
and
sub
mov
jo
cmp
inc
mov
adc
mov
mov
test
pop
xchg
xchg
dec
jmp
fistpll
dec
stos
in
call
aam
mov
inc
mov
and
xorb
aam
pop
sub
js
pop
mov
mov
push
dec
mov
adc
lcall
add
jae
mov
std
lock
mov
movsb
jmp
pusha
enter
mov
xor
add
js
ljmp
fdivl
mov
cli
hlt
mov
aad
jg
cmpb
std
inc
shlb
aad
mov
push
lods
pushf
and
pop
sarb
mov
dec
leave
xlat
cmp
or
pop
sub
push
jae
mov
popa
jne
dec
outsb
pushl
mov
mov
mov
pop
sbbb
xor
ror
insl
cwtl
mov
fsubrl
popl
pop
lods
stc
fsubrl
pop
fadd
outsb
mov
xorb
popa
xchg
mov
push
lods
cmc
out
insl
mov
mov
loopne
nop
dec
hlt
or
pushf
mov
sbb
stos
lods
cmc
add
dec
sbb
aad
pop
fidivs
mov
sbbl
xchg
cwtl
adc
nop
pop
std
push
xchg
stos
xlat
or
sbb
test
cmpsl
rclb
xchg
flds
pop
and
les
mov
movsb
sub
xchg
shlb
fcomp
in
pop
push
xor
add
aad
mov
push
xchg
dec
mov
cwtl
cmp
frstor
add
mov
mov
imul
les
dec
test
stc
test
outsl
dec
ret
xchg
into
sub
sub
and
xchg
shrb
mov
mov
cmc
xor
js
cmpsl
js
and
push
xchg
xchg
aad
xchg
cmc
jns
dec
int3
sti
xor
popf
adc
ret
fcomps
mov
pop
fcomip
xor
popf
pop
adc
ficoms
cmp
jbe
pop
mov
dec
or
test
sub
into
mov
dec
in
jmp
xor
outsb
xchg
pop
ret
lods
xchg
add
daa
add
pop
rcll
dec
les
mov
mov
lret
in
idivb
xchg
inc
or
loope
insl
mov
inc
or
sub
lret
push
cli
mov
cwtl
cltd
jle
push
dec
and
xchg
sbb
jg
sbb
mov
xor
imul
mov
into
inc
sbb
cli
sarb
popf
es
mov
les
dec
sbb
jmp
mov
add
rorb
mov
pop
aam
push
ja
data16
pusha
inc
pop
lds
cmpl
ret
mov
adc
cs
sbb
sti
gs
or
xchg
add
add
mov
push
je
aad
mov
and
adc
sbb
lods
pop
rorb
dec
lds
and
push
loop
loop
dec
ljmp
or
call
cmp
xor
jno
imul
adc
stos
sub
jp
cmp
sub
sbb
and
loope,pt
leave
and
mov
repz
mov
add
sahf
cs
add
cs
leave
xchg
int
push
push
mov
in
jo
cld
and
or
jmp
mov
adc
dec
test
call
addr16
mov
dec
mov
and
mov
fldl
jbe
mov
daa
icebp
mov
push
imull
dec
push
pop
adc
or
mov
int
mov
sub
shr
psubb
call
mov
push
int3
in
mov
das
sub
xor
push
outsb
mov
sub
pop
inc
ss
js
movsb
cli
or
nop
dec
sub
std
mov
push
popa
popa
inc
shlb
sahf
add
push
and
inc
aad
sbb
mov
cmpsl
movsb
repz
scas
mov
xlat
int
xor
ret
push
dec
mov
sbb
cli
enter
cld
enter
sub
pop
dec
rclb
xor
das
push
jnp
pop
loop
aas
call
xor
mov
clc
arpl
insl
cmpsb
inc
addr16
pop
dec
repz
jae
clc
xor
cmp
hlt
lret
xor
lahf
ds
push
cmp
xchg
dec
or
mov
jnp
imul
and
mov
pop
test
data16
imul
jl
pop
pop
pop
pop
jecxz
jo
cs
rcl
cltd
movsb
cmpsl
mov
push
add
lods
mov
mov
inc
mov
insb
ret
xor
sbb
xchg
ljmp
mov
push
test
and
mov
adc
fs
xor
shr
mov
aad
pop
popf
mov
ficoms
xor
lds
and
stc
fidivrl
lock
outsl
gs
es
movsl
push
outsb
mov
data16
push
int3
or
jge
sti
sbb
mov
movl
outsb
mov
and
scas
mov
shll
xchg
mov
enter
in
call
mov
mov
testb
pop
bswap
frstor
mov
popa
mov
repnz
bound
cmpsb
sub
ja
xor
mov
cmp
mov
push
sub
or
dec
repz
test
popf
sub
push
idivl
mov
fadds
adc
and
xchg
andb
out
enter
mov
out
mov
mov
mov
push
push
in
aas
mov
xor
pop
add
test
outsl
xchg
loop
mov
xor
es
adc
nop
mov
lea
in
sub
shrb
push
mov
add
xor
lods
push
sbb
data16
sub
hlt
test
jmp
sub
pop
or
jmp
movsl
mov
out
insb
mov
push
and
inc
movsb
leave
cmpsl
out
xor
cmp
mov
and
xor
sbb
pop
adc
adc
sbb
test
data16
mov
jmp
sbb
mov
jb
push
adc
ljmp
mov
push
pop
outsl
mov
xlat
mov
repz
dec
adc
sub
ficomps
sbb
and
jo
push
jne
or
push
jp
jge
or
adc
roll
sbb
push
movsb
sbb
cmp
lret
fs
dec
pop
shll
inc
bound
gs
xor
inc
out
sub
jge
fwait
add
inc
bound
mov
and
push
push
sar
fs
das
aam
ljmp
add
je
pushf
js
mov
cs
mov
mov
and
or
imul
adc
mov
in
cmp
nop
and
pusha
js
pop
mov
clc
adc
int
ljmp
xchg
addb
push
sti
les
inc
out
cmpsb
sub
je
jle
mov
xor
xchg
pop
lds
push
test
jne
jp
dec
lods
lock
and
mov
and
jb
and
aas
test
jns
push
adcb
mov
in
lock
mov
sub
in
ljmp
or
xor
mov
pop
cmpsl
xchg
or
les
in
jb
iret
jb
xchg
jne
inc
jb
mov
loope
jl
lcall
sbb
movsl
adc
sub
jnp
mov
adc
inc
add
sbb
xor
xchg
sahf
ret
movsl
xchg
xchg
mov
movl
outsb
push
and
scas
pop
or
xchg
je
xchg
sub
arpl
divb
mov
cmp
int3
pop
adc
hlt
stos
or
and
sbb
inc
mov
or
stc
xor
rcrl
jl
into
dec
sbb
mov
sahf
cmp
xor
sbb
dec
mov
xchg
sub
xchg
lahf
xchg
scas
push
jne
mov
adc
sub
push
jns
lahf
jmp
rolb
fistpl
es
xchg
mov
aam
cmp
xor
add
cmp
push
loope
xchg
outsb
inc
push
aaa
jo
mov
cmp
mov
adc
out
loop
or
jns
shld
sbb
or
ljmp
jns
push
pop
or
jb
add
mov
inc
clc
cmpsl
mov
or
and
cmpsl
sbb
ss
mov
daa
loop
mov
mov
aaa
fstpt
xor
sbb
or
mov
inc
iret
xchg
jbe
adc
jmp
pop
sub
xchg
inc
test
rol
and
sbb
adc
xor
iret
stc
out
cmc
jb
inc
or
shlb
mov
and
or
decl
hlt
sbb
int3
sub
pop
inc
jns
dec
pop
mov
add
cmpsb
in
lock
mov
rorl
dec
mov
push
push
ds
das
adc
fstpl
movsb
bound
jge
subb
cmp
rclb
push
adc
mov
adc
and
push
repnz
movsb
lock
out
cmp
or
ljmp
sub
push
jecxz
out
ficompl
mov
dec
mov
subb
mov
fildll
sub
and
cli
fdivrs
add
or
fs
inc
ja
shll
xchg
in
ret
test
es
arpl
sbbb
jns
jno
and
jne
push
movsb
xlat
movsb
jns
inc
fnstsw
cmp
dec
mov
adc
mov
imul
sub
xchg
push
add
dec
sub
outsb
fisttps
lock
inc
jnp
mov
sbb
les
in
push
and
dec
out
xchg
ja
and
sbb
ja
clc
push
pop
ja
ficoms
cs
cli
rcll
jmp
movsb
and
test
sbb
rorb
and
adc
test
cmp
js
add
daa
daa
pop
test
fs
shrb
outsb
mov
push
sbb
jmp
das
xchg
in
push
adc
pushf
and
cmp
loopne
fcmovnu
pop
push
xchg
cli
dec
outsl
pop
into
mov
mov
outsl
push
fidivrs
out
mov
mov
stos
mov
cmpsb
push
jbe
test
push
jnp
fsts
outsl
pop
xlat
arpl
leave
mov
stos
mov
lret
scas
sub
xchg
mov
idivb
sbb
push
sbb
pop
sub
les
outsl
outsl
add
into
add
in
add
out
push
xchg
mov
pop
xlat
aaa
mov
divb
xchg
pop
shlb
cmp
inc
adc
dec
xor
lds
sbb
mov
int
ficoml
push
fwait
rcrl
sbbl
add
push
ret
sarb
pushl
add
cltd
pop
sub
rorb
popa
mov
jg
dec
pushfw
inc
icebp
jnp
std
rol
cmp
dec
call
or
mov
mov
pop
sub
push
cmc
cmp
ja
dec
push
mov
ror
xchg
nop
and
pop
mov
push
sbb
scas
scas
or
xchg
ret
or
and
add
inc
adc
ja
icebp
inc
cmp
pop
inc
je
insb
leave
dec
or
notb
in
cmp
dec
in
aaa
sub
addl
repnz
and
outsb
mov
jae
shlb
das
or
mov
enter
sub
xchg
fsubrp
push
out
test
xor
xor
fmul
lea
adc
jge
rorb
jne
pop
pop
push
lods
cli
mov
arpl
inc
das
mov
or
shrl
ja
add
and
loopne
ret
in
xor
ret
clc
das
aaa
enter
xchg
fisttpll
add
xchg
add
jno
pop
test
pop
mov
mov
cwtl
insb
test
pop
sbb
jge
push
dec
xor
dec
and
mov
clc
cmp
jp
scas
les
cmp
xchg
lret
jns
mov
aaa
aam
movsb
les
ds
push
cmp
mov
push
sarl
xor
cmpsb
lahf
ret
sub
arpl
add
xchg
push
das
or
testb
jp
sub
pop
in
rorl
cmpsl
xor
mov
nop
hlt
insl
push
jo
dec
test
outsb
testl
icebp
inc
pop
sbb
jae
mov
pop
fimull
rcr
inc
lods
push
test
call
xorl
mov
daa
ret
push
movsb
stos
inc
movsl
orb
mov
mov
add
movsb
pop
out
xlat
xor
stc
add
inc
std
cmpb
shll
or
movsb
cmp
mov
stos
fsubp
outsb
xchg
fsts
mov
iret
clc
mov
adcb
call
mov
push
ret
loope
fmuls
add
jmp
stos
into
repnz
pop
pop
push
and
clc
mov
inc
pop
scas
mov
push
imul
clc
xchg
adc
stos
cmpl
ds
hlt
bound
idivb
out
jns
xchg
and
mov
ds
stos
push
pushl
aad
adcb
and
lahf
dec
sub
fdivrl
jo
xchg
sbb
pop
mov
pop
or
fdivl
dec
add
sub
es
mov
pop
sbb
adc
adc
sub
fs
xchg
jne
insb
insl
inc
fcmovnbe
mov
ficoml
inc
jo
xchg
call
inc
mov
roll
add
and
sbb
sbb
sub
pusha
pop
pop
xchg
add
jl
mov
ss
ljmp
mov
popf
sub
test
dec
sub
pop
sbb
adc
lock
fistl
das
pusha
les
jmp
dec
popa
or
ja
mov
hlt
pop
xchg
push
dec
push
adc
stc
mov
rcrl
fidivrl
mov
and
xchg
and
jge
icebp
mov
cmp
jae
mov
inc
add
and
jnp
xchg
das
test
add
lret
fnstenv
das
aam
jbe
dec
test
hlt
and
push
aas
lret
mov
sub
sbb
ret
je
sti
stos
fs
or
mov
cmpsl
lods
push
loopne
cmp
lock
and
fs
sub
pop
repnz
imul
mov
jge
jae
cld
stc
mov
call
jecxz
popf
ds
call
cwtl
repz
std
int
mov
add
mov
mov
pop
sub
sbb
add
push
int3
movsl
sub
push
das
fistl
pusha
push
leave
lcall
sbb
xor
or
out
and
inc
adc
rorl
push
lock
repz
xlat
rcll
js
imull
inc
insb
pop
adc
out
aad
stos
mov
call
mov
xor
jbe
push
adcl
cld
mov
iret
jl
addl
shlb
dec
xor
sbb
jo
cwtl
cmp
je
jne
pop
nop
push
shrl
daa
xor
xor
mov
xchg
enter
subb
leave
mov
lahf
fwait
pop
adc
cmpsl
inc
fs
cmp
addr16
cmp
imul
mov
jb
inc
xor
mov
pop
test
dec
out
or
fiaddl
cmp
sub
jae
xchg
or
mov
inc
sbb
and
inc
mov
std
add
xchg
pop
rclb
pop
movsb
mov
xchg
lock
or
adc
arpl
sbb
in
add
int
cmp
xchg
lods
out
in
ljmp
dec
je
xchg
sbb
cwtl
scas
aas
mov
in
dec
adc
mov
xchg
arpl
cmpsb
enter
pop
push
popa
cs
xor
fwait
cltd
lahf
bound
dec
adc
push
inc
mov
outsb
stos
ret
cmp
cmp
sub
xchg
out
data16
fwait
sti
mov
lcall
sar
cltd
in
pop
and
and
stc
jnp
mov
xchg
fbstp
pop
jno
mov
or
or
mov
sub
xor
lret
cmp
mov
cmp
dec
jp
outsl
jae
xchg
push
push
imul
cmp
popf
cmp
dec
mov
stos
je
xor
cmp
jp
lea
mov
pop
cs
add
adc
movsb
mov
adc
sbb
xchg
pop
hlt
ret
xor
cmp
test
mov
xchg
push
mov
ficomps
push
adc
add
lds
stos
and
in
or
mov
mov
lods
mov
or
jae
mov
or
fs
dec
outsb
sarb
mov
mov
repnz
rcll
pop
sbb
jle
enter
mov
push
arpl
lea
sti
and
mov
stos
cmc
xor
dec
jns
stos
pmaddwd
movsb
in
jg
and
test
jnp
arpl
mov
test
std
add
cli
xchg
loop
flds
push
scas
inc
mov
aad
cld
sbb
pop
inc
mov
lret
pop
add
shlb
sbb
loopne
arpl
inc
pop
xor
int
push
inc
movl
push
inc
jbe
aas
ja
dec
mov
pop
adc
popf
lret
sbb
ret
push
inc
add
xchg
xchg
dec
daa
push
in
add
fistpl
sbb
xchg
loop
jg
sbb
fistps
pushf
or
shlb
xchg
shrb
pusha
xchg
pusha
fs
cld
jp
loopne
push
cmp
bound
add
push
sub
or
mov
and
mov
pop
mov
mov
jo
push
inc
or
pop
lret
ret
and
adc
add
pop
lock
into
pop
test
movsl
add
movsl
pop
push
call
add
mov
push
inc
test
in
iret
inc
push
inc
dec
call
mov
or
mov
push
jae
xor
dec
adc
inc
push
pop
cmp
pop
pcmpeqw
stos
inc
mov
out
xor
mov
cwtl
enter
loope
aas
lcall
dec
outsb
mov
out
pop
mov
andb
subl
xchg
mov
stc
scas
sub
mov
pop
cltd
movsb
repnz
imul
icebp
leave
push
xor
pop
bound
sbbl
mov
imul
das
mov
push
jle
cld
pop
jl
pop
sub
sbb
adc
dec
push
lret
cmp
test
or
inc
cld
mov
pop
xchg
std
dec
lret
mov
repnz
es
lock
outsb
add
or
push
inc
cmp
jbe
js
jg
imul
xchg
mov
scas
sahf
mov
rolb
fs
or
in
jle
add
xchg
mov
push
xor
mov
mov
in
mov
adc
in
cmpsl
out
into
sub
das
lahf
jp
int3
fsub
repnz
andl
push
mov
mov
insl
xor
leave
loop
xor
jmp
out
jo
push
ror
jl
add
xchg
or
insl
aam
call
jmp
push
push
pop
rorl
and
into
xchg
cmp
movsb
sbb
lds
mov
inc
lret
mov
jecxz
mov
mov
fwait
sub
pop
cmp
stc
call
std
and
pop
adc
icebp
andb
pop
dec
fistl
fdiv
rcrb
mov
cmp
sub
or
push
pop
sbb
push
ret
cmc
jnp
loop
loop
xor
add
repnz
add
dec
jne
and
lcall
aaa
or
mov
sbb
xchg
lret
adc
sub
mov
movsb
js
stc
add
aam
shlb
mov
out
fisubrs
les
cmpsb
out
jae
pop
popa
imul
xchg
scas
dec
cmpsl
pop
cmp
lds
sbb
pop
push
sarb
inc
popa
addr16
xchg
clc
out
mov
fsubrs
out
sar
dec
dec
fwait
in
fimuls
fldt
fistpl
or
int
jmp
dec
cltd
imul
pusha
and
sbb
xchg
adc
negl
jae
dec
jmp
and
pushf
repz
inc
jbe
or
mov
pop
fnstenv
and
xchg
addr16
mov
stos
mov
es
cmpsb
jecxz
mov
xor
iret
leave
mov
jmp
test
arpl
inc
loope
enter
xor
cmc
jo
sbb
inc
test
stos
add
int
imul
mov
out
mov
push
loop
roll
push
scas
aam
lods
jo
sub
les
les
xchg
adc
test
xor
fsubrs
mov
sahf
out
pop
ljmp
dec
in
sbb
pop
fisttps
push
insb
roll
out
push
fwait
loope
dec
les
push
std
lds
lret
scas
cmp
ja
mov
and
dec
lea
inc
sub
dec
dec
mov
adc
cs
inc
fcmovbe
fsubl
lds
lock
cld
or
sbb
push
xor
inc
xor
xor
aad
daa
mov
pop
push
adc
inc
mov
fdivl
or
outsl
sbb
mov
dec
out
sub
inc
jmp
mov
nop
repz
mov
mov
dec
dec
jmp
push
sub
fwait
jne
fidivl
arpl
add
lret
hlt
adc
sbb
ret
jne
enter
ljmp
xlat
add
adc
aam
push
fcoml
sbb
dec
jecxz
aam
lock
aaa
xor
sbb
movsl
mov
or
sbb
int
sahf
scas
lods
sbb
add
fcmovne
jb
or
fmull
xchg
add
fildll
cmp
jmp
push
cwtl
addb
cmp
push
subb
dec
gs
mov
mov
add
jns
push
pop
ds
loop
call
or
aad
and
mov
mov
lcall
ds
std
daa
sbb
dec
sbb
mov
lods
cli
cmp
mov
adc
lahf
lahf
dec
jg
pusha
scas
loopne
dec
shr
xor
fxtract
fnstsw
scas
xchg
repz
sbb
int3
jne
adc
mov
cwtl
xchg
jecxz
pop
es
add
repz
pop
dec
cmc
inc
jb
and
inc
stc
or
mov
clc
jo
mov
leave
js
iret
dec
aaa
xchg
ja
les
pop
movsb
add
push
mov
mov
js
int
jbe
aam
push
inc
inc
in
xchg
iret
xchg
jge
call
jmp
movsl
arpl
fistpll
fiaddl
push
repnz
out
cmp
mov
mov
mov
dec
cmpsb
jmp
arpl
incl
xchg
gs
mov
fadds
add
into
iret
adc
out
sysret
icebp
xchg
stc
dec
pop
out
and
pop
out
cli
sbb
rclb
dec
addb
jmp
int
push
enter
movsl
sub
push
stc
push
inc
outsb
mov
fs
ret
mov
and
and
sbb
stos
add
data16
push
lea
jns
or
pcmpgtd
jp
cmovp
out
clc
dec
jle
in
jbe
in
dec
in
xor
pop
das
push
jge
pop
dec
pop
iret
imul
lahf
jp
cmp
adc
jnp
ljmp
push
jl
fimuls
fmulp
lods
xchg
dec
push
test
out
stos
pusha
lret
out
scas
cmp
mov
inc
aaa
inc
jnp
sbb
jmp
mov
inc
and
push
push
pop
cltd
mov
sarl
inc
cmp
fistps
mov
out
mulb
pusha
xchg
lret
or
filds
sub
sbb
in
out
into
or
mov
jnp
mov
and
xor
pop
mov
imul
addr16
push
loopne
xor
pushf
in
xlat
icebp
lea
fwait
dec
out
ja
push
jecxz
cmp
pop
mov
movsl
cltd
je,pt
or
popa
and
sub
aas
sub
stc
cld
mov
inc
or
in
ja
inc
adc
sub
and
imul
stos
rcll
movsl
push
inc
lea
jg
leave
imulb
cmp
pop
mov
out
sbb
mov
hlt
dec
out
mov
jb
push
leave
lds
mov
mov
roll
lods
stos
add
push
inc
sbb
fmuls
pop
push
rcll
cs
sub
repnz
subl
ret
cmp
mov
mov
inc
lret
test
lock
outsl
movsb
dec
lcall
movsb
rolb
fwait
cmpsl
pop
sbb
ljmp
scas
sub
xchg
test
ret
iret
loope
imul
xor
mov
push
lea
or
mull
cltd
mov
push
outsl
sbb
push
mov
int
add
adc
push
aas
dec
dec
in
sub
dec
cmc
add
or
scas
nop
and
cmp
scas
jle
mov
push
test
jge
shll
in
test
sub
popa
jb
popa
pop
xchg
mov
push
int3
add
shll
add
inc
pshufw
out
fdivrp
adc
loope
into
orl
subb
xor
or
fwait
into
mov
lods
push
pop
mov
add
int3
sarb
movsl
repz
bound
add
rclb
push
lret
mov
add
jne
fisubl
les
cld
xorl
loop
sbb
stos
mov
mov
push
into
and
dec
ret
mov
ds
jae
imul
cmpsl
or
lea
addr16
popf
and
outsl
imul
lret
rcr
xor
mov
cmpsb
cmp
sarl
popa
mov
rorl
cmp
insb
pop
lds
cwtl
cmpsl
bound
mov
fcompp
mov
int
push
xor
sarl
cltd
xor
mov
test
sub
push
aas
repz
dec
shrb
push
mov
fs
adc
inc
jne
dec
xor
inc
or
xor
loopne
add
xlat
in
mov
ret
cwtl
push
and
mov
out
jg
xor
mov
pop
add
push
sub
jae
push
dec
pop
xchg
sub
sub
xor
mov
loope
sbbl
add
adc
pop
xchg
xchg
fmull
aam
mov
fists
cmp
mov
sub
dec
xchg
rcll
lds
mov
xchg
icebp
stc
cltd
jl
aad
stos
mov
jo
test
lds
ss
push
cli
pop
adc
rcl
icebp
mov
arpl
cltd
inc
sti
ret
ds
aas
dec
cwtl
dec
aaa
je
xor
pop
cmp
inc
sbb
xchg
mov
in
xchg
scas
shl
hlt
test
push
scas
sub
xor
sbb
jge
std
xor
push
push
insb
jecxz,pn
daa
jp
pop
jmp
jl
jg
cmp
jns
ljmp
add
shlb
stos
adc
mov
aas
jo
iret
addr16
or
pop
cmpsb
ljmp
and
dec
pushf
mov
aaa
inc
mov
mov
jne
imul
mov
fcoml
jle
and
push
cld
pop
sub
out
test
inc
push
mov
cld
dec
pop
or
sarb
cmpb
js
or
cmpsb
lock
out
outsb
loopne
mov
fmul
adc
sub
push
adc
mov
mov
adc
stos
sbb
push
cmpsb
mov
int3
out
dec
dec
scas
ret
sub
int
xchg
jp
roll
or
std
push
jge
fcmove
dec
cmp
dec
xchg
nop
outsb
pop
and
fwait
cmp
add
jo
inc
and
sub
ljmp
frstor
shll
stos
pop
cmp
mov
andb
outsl
hlt
outsl
ljmp
lahf
sub
mov
scas
mov
shll
outsl
add
dec
imul
xchg
in
pop
lret
shrl
mov
pcmpeqd
mov
pop
cltd
data16
mov
pop
fdivr
jmp
xor
es
mov
push
outsb
adc
push
push
xchg
mov
lea
sub
out
push
stos
push
sub
enter
cmp
mov
and
cmpsb
mov
pop
jl
mov
cld
or
sub
sbb
mov
pop
mov
push
and
or
icebp
scas
outsb
xor
fisubrs
add
shrb
jl
testl
movsb
sbb
pusha
mov
call
xlat
cmpsb
xchg
jmp
pop
jp
cltd
pusha
rolb
jns
xchg
pop
int
pop
sub
les
xchg
xor
addb
arpl
mov
inc
cmp
cmp
cmp
push
jg
aaa
repnz
stc
shl
add
sti
add
subb
mov
dec
dec
xchg
add
mov
rcr
jo
fs
xor
sub
iret
pop
int3
fdivs
aas
data16
mov
shrb
lret
jmp
call
add
xor
lds
lock
ljmp
push
call
push
add
lods
mov
fistpll
pop
push
add
outsb
pop
call
neg
faddp
add
or
dec
outsb
jae
or
mov
mov
rolb
xchg
mov
or
negl
test
loop
add
hlt
inc
xchg
cmp
or
jmp
mov
mov
test
sahf
xchg
sub
adc
pop
imul
xchg
jecxz
or
arpl
je
rorl
aaa
cmp
push
les
cmp
add
sub
subl
xor
mov
js
pop
jb
dec
popa
mov
sub
std
mov
stc
adc
jns
addr16
inc
das
out
add
sbb
mov
xor
clc
ss
xor
rcll
push
fimuls
xor
mov
xchg
cli
push
dec
mov
adc
mov
jb
lahf
cmp
sbb
js
xor
jo
jb
or
cmpsb
xor
sub
dec
lret
inc
xor
xor
aam
repz
jns
mov
ljmp
mov
pusha
rorb
push
add
daa
jl
sub
lods
test
and
jle
in
xor
aad
push
test
inc
iret
aaa
mov
dec
sub
inc
ds
push
xchg
inc
xor
clc
cltd
pusha
fwait
ss
arpl
pop
shlb
jle
inc
outsb
cmc
push
mov
mov
out
ljmp
push
jo
lods
xlat
test
daa
mov
pop
popf
sbbb
mov
adc
fisttps
mov
xor
mov
add
les
and
xorb
cmc
flds
inc
mov
xor
ss
ret
pop
repz
xchg
fbstp
mov
mov
pop
inc
push
jo
push
out
push
cli
stos
insb
lret
sub
lret
push
mov
addr16
leave
cmc
mov
xchg
or
sarb
subb
test
shrl
dec
jns
adc
clc
or
cmp
jle
mov
fldcw
pop
adc
pop
jmp
rolb
addb
orl
in
out
adc
rorl
xor
aam
insb
cmc
mov
pop
jmp
adc
ret
cmp
pop
clc
sub
insb
out
out
push
jle
faddl
scas
lret
pop
outsb
mov
xor
scas
fcom
aas
divb
push
pop
and
jnp
sub
mov
mov
jge
or
mov
in
cmp
fcmovnu
std
pop
and
ja
jne
outsl
add
cmp
aas
xlat
ret
out
roll
lds
add
fsubrl
cwtl
add
iret
xchg
pop
icebp
test
cltd
mov
les
ss
arpl
adcl
aad
jle
lahf
stos
mov
ret
icebp
push
aas
sbb
les
cmp
stc
cmp
cmp
out
push
in
jo
repz
aas
and
imul
jg
inc
push
dec
sbb
push
out
dec
xchg
das
es
aad
insb
pushf
mov
andl
sub
or
loopne
jbe
cmp
cmpsb
ds
pop
push
xchg
aaa
scas
test
in
std
jle
push
cmpsl
sbb
or
jg
sbb
push
inc
push
inc
mov
or
in
inc
jne
jmp
jmp
cs
das
ss
mov
mov
and
xchg
fisubrl
lret
jl
rcl
sarb
std
mov
jno
jb
mov
xchg
sub
out
ja
fimuls
rcrb
add
dec
test
imul
aad
fidivrs
add
or
imul
or
dec
mov
jae
mov
insl
lods
pushf
pop
add
aas
jle
jp
jmp
mov
popf
jae
fimuls
popf
movsl
das
stc
in
and
repz
movsb
mov
xor
popa
pop
adc
xchg
testl
cmc
fst
leave
shlb
cs
push
push
out
mov
pop
sbb
rclb
ss
out
jno
dec
rclb
mov
xlat
push
in
dec
mov
hlt
sbb
sbb
mov
pushf
ret
mov
imulb
xchg
jne
repz
mov
push
jb
add
pop
and
ja
adc
jle
cmpsb
inc
sub
push
lods
jle
out
and
jmp
es
fidivs
test
cmp
pop
das
mov
gs
out
add
cmpb
fistps
cmc
or
and
add
repnz
sbb
sub
cmpsb
add
out
inc
pop
inc
jg
add
and
cmp
data16
test
and
shrb
and
push
or
aad
sub
jne
pushf
cmp
pop
jg
and
outsl
lss
jmp
into
push
push
loope
test
insb
dec
imul
out
scas
cmp
mov
fwait
lcall
sbb
ljmp
jns
and
leave
lret
out
sub
xlat
mov
jne
pop
icebp
adc
dec
shr
test
lcall
xchg
orl
jbe
bound
rolb
mov
mov
loope
sub
pop
push
mov
jg
sarl
lret
add
pop
into
cmp
pop
rol
imul
lahf
lcall
stos
and
add
adc
push
inc
sub
fiaddl
mov
shlb
and
lret
jecxz
daa
mov
inc
dec
lods
shrl
mov
icebp
mov
sarl
mov
mov
mov
int
daa
xchg
and
lcall
loope
adc
into
dec
mov
sti
out
ss
mov
pop
jns
jb
and
mov
xor
das
jnp
call
push
fnsave
outsl
lea
lret
or
in
mov
or
mov
push
mov
add
push
lock
iret
icebp
jp
or
aas
in
mov
out
inc
push
imul
imul
fmull
mov
int3
xor
pop
jb
cmpsl
lahf
jg
pop
inc
loopne
xlat
adc
insb
lods
add
es
sub
cmpsb
cmp
sbb
inc
adc
into
sub
and
dec
push
cmpsl
ficoms
or
scas
inc
cltd
movsb
fistps
mov
pop
cmp
std
jbe
in
xchg
loope
jne
push
mov
lds
mov
fs
data16
into
sub
mov
bound
cmpb
cltd
gs
xor
xchg
jecxz
sub
fsubrs
pusha
out
in
sbb
adc
mov
movsb
shrl
rol
lar
in
and
in
push
insl
cld
push
pop
stos
mov
jo
js
push
cmp
or
shlb
jp
push
lahf
cmp
les
fadds
add
xchg
les
mov
icebp
add
jb
mov
pop
nop
add
popf
fldenv
sub
mov
mov
adc
xor
outsl
mov
xchg
enter
loopne
jmp
lods
pop
adc
int
aas
push
xor
push
sub
xchg
lret
and
pushf
mov
and
mov
imul
xchg
mov
pop
jp
fidivs
sarl
jo
cmp
imul
jb
movsb
pushf
mov
ss
loop
mov
scas
push
mov
add
pop
xor
pusha
xor
mov
rcl
pop
push
jmp
cmp
pop
stos
cmp
pusha
stos
paddd
dec
cmc
test
lds
outsl
leave
imulb
mov
sub
cmpxchg
data16
ret
movb
sub
xchg
iret
fstl
pop
movsb
je
jbe
sub
imul
repz
add
or
lds
mov
jmp
xor
xchg
mov
fs
leave
mov
popa
adc
test
push
int
pop
sbb
push
jne
dec
jecxz
dec
sbb
xor
into
mov
adc
bound
push
mov
sbb
shlb
adc
nop
scas
pusha
cmp
push
jae
imul
lret
iret
dec
jmp
cmp
cli
xchg
lret
mov
sbb
leave
add
or
movsb
mov
inc
mov
and
mov
sub
cmpsb
roll
sub
cmpsb
or
xchg
lret
xor
fidivrs
lods
clc
pop
mov
dec
xchg
popa
ret
jmp
pop
fists
xor
stos
stos
inc
mov
mov
mov
lods
rsqrtps
sub
pop
sub
jns
aam
iret
mov
into
xchg
xchg
xchg
jno
cmpsb
out
xor
xchg
rcr
cmp
addr16
in
mov
jge
push
ss
sub
adc
dec
out
addr16
push
jno
imul
cltd
icebp
enter
shlb
push
addr16
jne
jp
or
adc
cmc
fwait
imul
ljmp
jbe
nop
sub
pop
sbb
inc
dec
fcmovne
mov
and
jo
mov
test
cli
dec
dec
in
fisubrs
ja
dec
arpl
leave
push
rcr
inc
out
out
into
jecxz
mov
idivb
pop
push
loopne
and
mov
out
fiadds
mov
xor
filds
xlat
int
lods
jnp
push
fistps
cli
or
scas
mov
sahf
sbb
jp
cmp
testl
in
add
jb
test
mov
mov
push
les
mov
jo
imul
dec
inc
rcrl
fists
push
jo
sti
rcrb
jb
daa
xor
hlt
int3
pop
add
and
and
mov
adcl
pop
pop
xlat
in
sbb
test
sub
das
pop
xlat
jge
push
or
mov
stc
out
ficoml
sub
mov
fmuls
mov
jo
lods
push
imul
jp
jne
mov
enter
movsl
jecxz
cmp
mov
lods
and
cmpsl
add
scas
jg
xchg
mov
xlat
mov
rolb
das
mov
and
in
sarl
push
sub
push
add
insb
data16
xchg
pushf
add
or
xchg
shll
mov
xor
and
or
testl
push
dec
xorb
add
arpl
xor
push
lock
cwtl
sub
xchg
repz
loop
int
in
cmp
fcmovnu
cwtl
or
rcll
lret
push
movsl
dec
mov
and
aad
loop
scas
inc
jbe
jne
xlat
loopne
xlat
adc
or
jbe
scas
in
outsb
movsl
add
add
cmp
loope
in
pop
out
mov
nop
insl
rorl
lds
notl
stos
outsb
hlt
sbb
shr
sub
adc
sub
ljmp
js
lds
outsb
pop
iret
push
sub
and
jmp
movsb
inc
pop
inc
in
xchg
ljmp
repnz
and
lock
or
sbb
scas
jmp
ds
andl
arpl
xchg
out
mov
sub
mov
jp
popf
lds
movb
sbb
add
adc
dec
push
lock
rorl
imul
cmovae
mov
and
xchg
or
mov
lea
psubusb
decb
and
inc
add
out
xchg
add
jg
es
pop
mov
push
adc
scas
mov
jne
xchg
jnp
xchg
dec
push
sbb
inc
or
add
push
mov
lcall
gs
movsb
mov
or
insb
jno
lea
fildl
sbb
jae
dec
adc
cmpsb
outsb
xchg
aam
push
and
idivl
dec
std
out
pusha
fdivrs
jae
mov
cmp
daa
jno
push
xchg
sbb
lds
or
pop
mov
sbbl
adcl
lods
and
sbb
mov
andb
cli
cmp
jmp
sub
push
sub
mov
insb
sbb
or
add
out
cmpsb
int
testb
mov
hlt
mov
das
mov
lret
xlat
dec
push
mov
scas
xchg
push
add
iret
ljmp
jae
in
mov
sub
daa
pop
sti
cld
and
bound
adc
xchg
in
fadd
inc
pop
xor
stos
sbbb
dec
xchg
gs
xor
insb
negl
sbb
mov
inc
js
aad
outsb
push
repz
ljmp
jp
xchg
xchg
arpl
xchg
mov
or
jne
lcall
popl
dec
mov
shll
mov
xchg
xor
push
enter
aaa
lcall
aaa
imul
dec
jmp
dec
movsb
push
daa
jge
fidivrs
nop
xchg
enter
daa
lret
jno
inc
roll
fcmovu
ljmp
jl
and
fisubrl
ds
inc
inc
outsb
test
xchg
mov
pop
sbb
pop
in
mov
jne
or
js
mov
sarl
push
jns
std
lods
and
dec
scas
sbb
sub
jno
push
das
aaa
mov
aaa
sub
push
push
and
orb
mov
jmp
stc
push
and
loope
jnp
rcl
fmul
xorb
insl
movsb
fidivs
mov
mov
fdivs
pop
out
mov
xchg
sub
add
std
fildll
or
mov
pop
loopne
lea
inc
mov
add
xor
ds
hlt
and
cli
jmp
sti
cltd
mov
hlt
dec
into
out
loope
sub
sub
inc
iret
or
pop
test
mov
dec
call
test
mov
xchg
mov
lret
add
mov
dec
pop
pop
int3
inc
fldcw
sub
or
pop
or
in
cmpsl
cmp
movsl
dec
int
push
repz
out
cmp
data16
cmp
or
mov
mov
stos
lret
fists
xchg
push
pop
sub
xchg
adc
sbb
pop
cmp
push
xchg
push
jg
add
test
pushf
into
aaa
pop
stos
cmpsb
pop
xor
out
arpl
jl
ja
inc
add
int
sub
mov
and
adc
mov
ret
mov
es
jecxz
mov
lcall
fwait
outsb
cmp
mov
mov
or
pop
add
lods
push
ss
rorb
shrl
mov
out
in
nop
jo
arpl
jmp
push
cmpsb
xor
and
adc
mov
stc
dec
cs
inc
mov
cmpsl
push
inc
insb
xor
pop
jo
cmpsl
mov
pop
pop
ret
pop
inc
pusha
xor
xchg
popa
jno
or
scas
lods
mov
xchg
andb
rorl
inc
cli
mov
into
or
enter
outsl
ja
pop
mov
lods
in
xchg
and
mov
and
andl
cmc
xchg
jb
in
pushf
sub
xchg
movl
dec
or
jg
inc
pop
xchg
outsb
out
fstpl
testl
stc
test
push
in
gs
inc
push
insb
cmp
pop
frstor
or
pop
aam
mov
das
rcrl
faddl
pop
mov
mov
add
clc
lcall
pop
push
sub
fmull
mov
sbb
add
xor
imul
adc
stc
lcall
xchg
cmpb
popf
inc
xlat
push
push
test
subb
fsubs
les
inc
adc
out
sbb
xchg
mov
rsm
clc
shll
cmp
sub
in
pop
mov
and
aaa
aas
pop
pop
xchg
iret
inc
lods
out
pop
sub
lods
jmp
sub
clc
fnsave
rcrl
jb
or
ror
cmc
fadds
mov
shrl
inc
cmp
ljmp
push
sbb
fdivs
js
adc
push
int
gs
scas
mov
lods
inc
inc
sbbb
lea
and
adc
mov
push
icebp
aas
pusha
push
pop
mov
jmp
mov
sub
xchg
xor
mov
sub
aad
xchg
outsl
cld
push
sbb
shll
sbb
call
ret
pop
fnstsw
test
push
sub
cmp
adc
lret
insb
push
outsb
sbb
leave
mov
out
aaa
and
jmp
mov
ret
xor
stos
icebp
jmp
adc
jp
adc
nop
jb
ret
lahf
stos
xor
lret
icebp
or
aas
jns
dec
cmp
xchg
je
xchg
dec
add
pusha
ja
sbb
jne
pop
cmp
jmp
lret
leave
mov
jle
push
and
jmp
in
dec
in
movsl
and
mov
iret
push
outsl
mov
dec
xchg
cmp
dec
fisttpll
xchg
aam
scas
jl
sbb
std
mov
or
jne
mov
add
add
cltd
xor
mov
mov
xlat
jp
and
aad
xor
loope
jmp
popf
pop
push
out
fdivrl
inc
or
and
loop
fisubrs
adc
call
mov
lds
cmc
adc
or
imul
cmpsl
sbb
aas
sub
push
pop
inc
mov
push
gs
mov
sbb
jp
dec
in
push
sbb
outsb
std
clc
push
pop
pushf
pop
or
adcl
jge
loope
loop
jp
outsl
jno
in
xor
out
std
push
xor
add
push
dec
sarb
movsl
mov
pop
mov
mov
xchg
sbb
adc
pop
mov
push
inc
mov
jle
mov
mov
call
mov
or
rcrb
add
mov
nop
inc
dec
inc
sti
cmp
mov
femms
xchg
bound
adc
cltd
cli
xor
insl
and
loopne
loopne
xchg
adc
mov
addb
repz
aas
lahf
adc
xchg
mov
jge
push
pop
movsb
rcrb
dec
data16
test
scas
das
and
add
xor
lds
or
repz
sbb
dec
jo
in
subb
sbbb
pop
cmp
jg
ret
shlb
push
push
dec
das
dec
and
cmp
pop
fcomi
ret
jecxz
add
dec
jno
leave
pushf
push
dec
daa
push
inc
popf
or
jne
addl
sub
test
lahf
pop
adcb
subb
jbe
in
pusha
jmp
push
xchg
mov
jl
popf
cmp
pop
mov
mov
and
ss
hlt
sub
xor
mov
push
imul
shll
repnz
mov
push
xor
sbb
scas
ficomps
int3
in
shlb
xor
or
imul
lretw
dec
stos
push
jecxz
out
or
fnstenv
xchg
and
scas
push
ja
push
adc
scas
inc
lret
mov
or
sbbb
pop
mov
pop
mov
mov
aas
dec
pop
adc
outsl
ficoms
lods
cs
lret
mov
mov
jecxz
sub
je,pt
push
int
jmp
aaa
sbb
stc
push
adc
cmp
mov
loope
cmpsl
int
mov
push
cmp
push
mov
fiadds
scas
or
ss
adc
scas
fwait
into
or
pop
cmp
jns
mov
pop
outsl
int3
add
jge
lahf
and
mov
loopne
jmp
or
rclb
mov
jecxz
pop
adc
and
push
jbe
loop
test
sbb
xchg
call
cmp
test
inc
sbb
fwait
shrl
mov
push
xchg
cs
push
mov
mov
rorl
fwait
icebp
repnz
jno
xchg
pop
push
mov
cwtl
imul
jl
sbb
push
popa
orl
cmpsl
inc
test
call
outsl
mov
cltd
daa
cmp
inc
outsl
lret
sub
cltd
jbe
or
sbb
or
inc
xchg
ds
stos
sbb
dec
pop
xchg
mov
mov
inc
adc
int
int
push
popf
lcall
pop
mov
mov
adc
or
or
sub
add
daa
les
sub
xchg
test
cmpb
push
mov
mov
clc
mov
and
mov
mov
in
loop
mov
xor
adc
je
add
fwait
icebp
or
jle
sbb
pop
fdivs
add
cmpl
pushf
cld
pop
jg
xchg
inc
dec
sbbb
out
sub
dec
adc
cmp
data16
mov
aad
or
cmp
repnz
in
or
movsl
cli
stos
std
in
enter
sbb
dec
fisttpll
out
mov
dec
cli
shl
in
mov
jl
inc
xor
fistpl
das
mov
vpsadbw
int3
ja
pop
mov
xlat
mov
sub
movsb
call
stos
xchg
push
push
xlat
push
sahf
sarb
pop
sarb
in
xchg
imul
pop
xor
lods
adc
xchg
iret
lods
pop
xchg
ret
adcb
lret
mov
dec
push
popf
je
ljmp
push
dec
pop
pop
popf
mov
push
push
jb
jg
xchg
xor
pop
push
jge
lods
xchg
in
and
mov
cmp
aam
cmc
push
pop
xor
pop
xchg
and
adc
out
adc
stc
fs
insl
push
inc
lea
inc
sub
mov
out
das
popa
sub
inc
pop
outsb
jns
cmp
xchg
xor
call
push
xchg
cmp
mov
and
fsubl
scas
jl
std
jne
push
add
lds
je
lock
pop
das
mov
or
nop
cmp
sbb
sub
mov
add
aad
jg
fs
gs
bound
cmp
fistl
push
jecxz
mov
imul
mov
imul
ss
aam
std
inc
xor
xor
jl
sub
iret
cmp
stos
push
ffree
scas
jnp
outsl
gs
mov
cmp
pushf
cwtl
xor
add
jg
xor
lret
add
loopne
sub
sbb
les
cmp
cwtl
mov
push
push
or
xor
dec
ljmp
and
and
add
mov
xor
movsl
repnz
sbb
cmp
push
pop
cld
inc
or
lea
pushf
mov
mov
imul
dec
push
jb
lcall
insl
xchg
add
mov
stos
adc
xchg
jmp
lods
mov
lods
scas
push
fldcw
or
mov
fisubl
sbb
sub
sbb
lds
jb
jmp
pop
leave
in
mov
jo
int
jmp
hlt
adc
sti
sbb
and
fistpll
inc
and
jle
push
jno
divb
mov
jae
fs
gs
add
dec
mov
adc
out
loop
les
outsb
mov
hlt
sub
add
or
in
xchg
mov
cmp
out
aam
aad
cmp
int3
notl
ficompl
in
inc
loop
lods
mov
in
pop
sub
xor
xchg
in
jmp
lods
inc
xchg
or
xor
and
cmpsw
mov
add
lds
cwtl
insl
scas
scas
inc
movsl
orb
mov
loopne
cltd
mov
stos
ljmp
aam
cmpsb
push
decl
dec
insl
aam
shll
imull
das
jle
ret
pop
mov
xor
aad
adc
push
sub
loope
add
and
xorb
push
sub
mov
jl
stos
sbb
push
ficomps
dec
lds
lret
adc
xchg
orl
jle
gs
add
inc
scas
or
jge
in
je
xor
mov
divb
fmul
pop
repz
fsubs
cli
dec
out
push
dec
sbb
jmp
fwait
out
int3
jg
sbb
sti
stos
shll
or
rcrl
je
sbb
fidivs
in
xchg
adcl
push
sub
fmul
push
mov
jo
call
sbb
add
xor
xchg
mov
and
or
into
lcall
jecxz
add
js
hlt
mov
mov
add
adc
mov
and
mov
in
push
sub
adc
subb
je
rolb
jae
mov
or
or
sti
adc
sbb
mul
and
ss
ret
mov
sub
imul
cmp
imul
add
add
dec
out
inc
faddp
mov
pusha
cmp
into
mov
out
hlt
test
insb
and
dec
out
push
mov
rorl
pop
in
jl
jg
xor
cmc
test
stos
sbb
push
add
aam
aam
sub
mov
and
dec
dec
adc
les
inc
push
lds
aad
stc
fisubrl
push
xchg
mul
fstp
adc
shlb
shlb
int
inc
jns
cwtl
out
lcall
jne
dec
inc
inc
mov
iret
mov
lods
popf
and
xor
push
inc
sub
mov
int
mov
push
inc
popf
mov
lods
pop
out
xchg
jmp
xchg
movsb
pusha
cmp
xor
loop
push
nop
data16
imul
mov
fnstenv
aas
cmpsl
cmp
and
cmp
cmpsb
fidivl
testb
or
adc
sub
cs
dec
sub
mov
cmp
dec
lods
fs
inc
out
imul
repz
cld
xor
push
mov
mov
addl
jbe
xchg
and
loopne
xlat
test
mov
test
or
cwtl
fsubrs
in
jo
lahf
subb
mov
sbb
jns
mov
hlt
negb
and
pcmpeqw
cs
or
popf
cli
cmp
mov
dec
lret
bound
incl
pop
mov
add
inc
push
aas
push
and
and
mov
inc
push
test
icebp
dec
andl
pop
jns
pop
testb
and
add
ljmp
aas
mov
outsl
sub
push
xchg
adc
sub
pop
adcl
inc
mov
insl
sbb
out
add
in
je
inc
outsb
addl
fidivrs
xor
dec
ja,pt
mov
and
pop
push
scas
xchg
lcall
sarl
push
jnp
xchg
je
ror
adc
jne
out
repz
repz
inc
bound
sbb
ljmp
mov
inc
mov
lcall
sti
arpl
mov
mov
cmpsb
bswap
test
daa
mov
cmp
xchg
jb
adc
sbb
or
mov
cmp
test
push
lods
sbbb
mov
cwtl
sti
push
es
out
sbb
fadds
shll
and
sbb
pop
dec
xor
inc
inc
std
pop
or
xor
or
jl
adc
icebp
cmp
stc
testb
sub
dec
mov
rolb
frstpm(287
pop
cltd
cmpsl
mov
or
dec
mov
push
cltd
call
pop
jo
sbb
fildll
or
fisubs
mov
mov
ret
push
pop
mov
mov
mov
dec
pop
or
pop
jb
aad
xchg
pop
inc
pop
push
cmp
sub
in
cmp
shll
jno
sub
out
repnz
popf
stos
les
mov
into
dec
cmc
ds
cltd
sbb
inc
adc
adc
dec
js
stc
out
inc
jle
stos
mov
std
sub
and
loope
dec
jge
xchg
icebp
orb
jge
mov
jns
dec
in
gs
or
into
and
push
push
in
push
out
cmp
cmc
pop
adc
push
addb
dec
pushf
js
cmp
pop
pop
lods
mov
mov
xlat
shlb
das
sbb
das
or
in
mov
fxch
mov
cmp
push
hlt
dec
frstor
sbb
pop
maxps
shlb
mov
cld
ret
add
lock
jecxz
xchg
or
cmp
sub
aaa
cmpsl
cltd
mov
adc
pop
jecxz
jb
fnstsw
adcb
mov
dec
shll
or
sbb
or
jbe
and
ljmp
insl
push
fsts
xchg
dec
push
jnp
lahf
out
xor
nop
into
insl
rcrl
dec
or
sbb
pop
cs
xchg
cmp
dec
jp
loopne
mov
mov
out
dec
aas
adc
sub
in
mov
js
cmp
cmpl
dec
or
cmp
pop
test
popf
and
pop
insb
jmp
arpl
nop
pop
mov
sub
pop
mov
mov
jne
mov
jno
push
je
sub
into
adc
std
addr16
mov
lock
outsb
jbe
shl
push
inc
fisubrl
mov
xchg
mov
fdivrl
jo
cmpb
xchg
ss
data16
negl
adc
scas
xchg
inc
push
pop
mov
loopne
movsl
inc
pop
insl
mov
std
mov
lods
test
sub
xor
xchg
push
adc
xchg
arpl
jb
sahf
in
ja
sub
xchg
fnstsw
jp
sub
mov
jp
add
test
xorb
out
adc
or
outsl
push
jb
loopne
repnz
scas
mov
dec
mov
movsl
dec
pop
fisttps
jle
lock
loope,pt
sbb
and
repnz
in
xchg
ret
into
ds
xchg
push
cmp
fwait
xchg
push
mov
inc
das
insb
xor
repnz
push
mov
cwtl
test
push
push
fnstcw
inc
jl
push
out
dec
push
in
out
xchg
aas
imul
outsb
add
push
pop
cmp
das
scas
bound
xchg
push
push
movsl
or
or
outsb
shl
inc
pop
inc
cmp
and
inc
in
dec
mov
mov
insb
out
sub
in
insl
aad
jecxz
arpl
push
cmp
sahf
ret
mov
sub
inc
cmpb
dec
and
xchg
pop
and
pop
add
scas
add
fistl
into
xchg
rcrb
inc
and
movsl
xor
or
jb
cwtl
jbe
out
lds
jecxz
ret
cmpsl
xor
push
sahf
xor
aad
leave
mov
aaa
jecxz
mov
jmp
push
mov
cld
xchg
pop
xorb
stos
orl
pusha
xor
clc
lret
repnz
or
rclb
mov
mov
aas
and
in
gs
int
cmp
stos
mov
lahf
sahf
or
pop
sbb
jge
lea
mov
pop
movsl
test
adc
and
out
sub
in
mov
or
pop
mov
addr16
dec
icebp
imul
dec
dec
mov
fadds
or
and
inc
cwtl
cmp
mov
add
xchg
sub
or
into
out
adc
out
push
mov
jmp
clc
scas
or
std
aaa
mov
mov
push
sbb
xor
sub
aad
out
jmp
jp
xor
ja
mulb
stos
out
and
sbbb
icebp
xor
cmp
and
sti
cli
popa
fadds
loopne
xor
sahf
sbb
out
sbb
or
pop
or
out
int3
repnz
dec
xchg
xchg
sbb
adc
shlb
mov
pop
lahf
imul
stos
push
pop
roll
xchg
loopne
imul
xor
clc
fcmovnbe
push
pop
mov
mov
mov
pop
pushf
lcall
pushf
movsb
add
in
cld
ret
loope
dec
test
xchg
jle
loope
test
je
jo
aad
iret
jge
aas
inc
or
adc
aam
insb
test
mov
dec
call
cwtl
ja
xchg
pusha
cs
fwait
sbb
jo
xorb
mov
fisttpl
scas
mov
mov
pop
mov
mov
xlat
adc
hlt
xchg
dec
jb
int3
negl
int3
or
scas
push
xor
mov
sub
stc
lea
je
mov
cmp
lret
or
shrb
add
dec
push
sub
nop
add
sbbb
pop
or
dec
mov
lcall
lret
sub
iret
inc
sub
mov
sbb
dec
dec
adc
mov
mov
xchg
xlat
cmpsl
addr16
nop
mov
mov
out
adc
cmp
inc
push
pushf
push
insl
lock
nop
subl
mov
ja
out
bound
je
lahf
repz
fwait
into
add
mov
test
js
dec
mov
stc
mov
jge
pop
xchg
pop
in
iret
push
or
stos
insl
sbb
lods
rorb
and
das
push
xchg
sub
add
xchg
jae
cmc
ja
outsb
push
test
mov
icebp
in
inc
movsl
xor
adc
sub
mov
pop
jae
icebp
sub
lcall
not
add
ret
lret
sub
mov
xrelease
sub
gs
pop
pop
idivb
lods
mov
fs
push
add
xchg
fcmovne
arpl
mov
dec
jp
adc
dec
sti
outsl
xchg
aas
arpl
js
rep
outsb
and
leave
cmp
movsl
xor
dec
or
mov
mov
push
sub
mulb
clc
mov
cmpsb
scas
test
mov
mov
dec
dec
enter
pusha
fcomps
popf
je
mov
ja
fnsave
push
push
sti
pop
fisubl
mov
filds
ret
sarl
xchg
pop
ss
in
pop
int3
sub
push
cli
aaa
inc
adc
jnp
mov
je
jl
fs
sti
gs
in
mov
pop
xor
xchg
les
lahf
inc
insb
adc
lods
add
mov
gs
jp
jno
pop
sbb
cmp
fistps
pushf
orl
mov
cmp
in
xor
inc
mov
mov
repz
xchg
insl
addr16
loop
add
fldenv
pushf
jmp
xor
pop
fsubrs
imul
xchg
aam
int3
test
mov
ja
shl
jb
jp
in
sbb
xchg
enter
push
push
push
aas
or
xor
in
sti
or
ret
popf
push
std
in
xlat
cmc
inc
addr16
test
push
int3
jg
je
out
or
mov
shrb
cmp
pushf
sub
out
pop
xchg
sub
cmp
bound
cs
xlat
dec
jo
jecxz
rcll
mov
je
mov
or
mov
pop
lahf
cmc
pop
mov
int3
lret
push
mov
pop
mov
mov
and
aaa
ror
adc
inc
in
jp
shll
imul
pushf
lcall
pushf
mov
mov
mov
push
xchg
cmpsb
ljmp
push
inc
hlt
inc
imul
mov
fimuls
scas
mov
cmp
adc
shr
mov
sbb
int
pop
arpl
sub
sbbl
xchg
inc
cmp
and
pop
lret
and
ss
push
mov
push
ljmp
push
pop
mov
cmp
hlt
push
ss
sub
shlb
jns
das
pop
push
xchg
sub
imul
push
cli
insl
dec
inc
and
xchg
jnp
fsts
xlat
adc
dec
or
sbb
xchg
or
dec
scas
adc
sbb
aas
pop
xor
rcll
lods
mov
push
mov
mov
cmp
dec
sbb
cli
adc
out
xor
ret
outsb
cltd
out
clc
pushl
dec
repz
adcl
and
dec
add
or
das
mov
dec
mov
ss
mov
je
test
push
loope
xchg
ljmp
sub
jbe
outsl
dec
andl
loop
out
jmp
or
out
ja
inc
or
ss
arpl
call
je
stos
mov
mov
std
push
sub
lods
dec
and
or
aam
cmp
inc
mov
cmp
mov
dec
mov
sti
jnp
ret
mov
inc
call
cwtl
add
or
or
xchg
inc
in
jl
cmp
in
insb
pop
ffree
mov
das
pushf
lods
rorl
data16
cmp
ss
enter
sbb
xchg
mov
jmp
xchg
shl
lret
scas
lahf
xlat
adc
les
int
movsl
mov
mov
imul
cmp
pop
pop
lods
dec
outsl
xor
pop
add
xor
mov
push
sub
and
cmp
aaa
sub
inc
out
data16
xor
inc
cmp
loop
icebp
imul
fisttps
xchg
xchg
pushf
jp
test
daa
popa
push
and
sub
cltd
inc
xchg
xchg
shll
call
mov
or
jle
cs
out
add
lea
cmp
mov
mov
sub
insl
adcb
dec
xchg
daa
cmc
mov
clc
imul
mov
dec
neg
call
fidivrl
xor
lock
sub
add
rolb
push
pusha
adc
addl
and
push
movsl
icebp
lea
xchg
orl
loop
lret
inc
lea
inc
inc
aad
inc
lea
jp
mov
int
push
cmpsb
or
mov
mov
mov
std
pusha
jb
jmp
or
sub
outsb
lods
bound
sbb
imul
pop
ja
inc
movsl
or
add
stos
push
sbb
sbb
adc
loopne
cli
mov
pop
and
mov
sbb
sbb
fimuls
sub
scas
xchg
sahf
mov
dec
andb
push
xchg
ss
lret
mov
push
data16
test
or
inc
or
outsl
pop
fmulp
pop
in
test
lea
testb
aaa
pop
movsl
pop
fnstcw
sub
pop
popf
add
push
mov
les
push
ror
test
push
adc
daa
aad
pop
mov
mov
mov
arpl
and
pop
xlat
std
adc
pop
imul
sub
mov
loop
into
xchg
sub
loopne
sarl
and
mov
push
aad
rolb
push
cmp
lods
in
jg
movb
shrl
adc
jns
jle
xor
enter
in
mov
xchg
pop
adc
add
mov
fsubp
and
incl
adc
rcll
into
call
scas
push
test
js
mov
lock
jmp
jno
outsl
pop
cmp
test
jg
xchg
inc
sbb
outsb
rclb
out
std
cmp
rep
loopne
cmp
jns
lret
jle
xchg
in
mov
subb
lods
cmp
mov
scas
pop
push
lahf
push
mov
inc
out
hlt
loope
mov
lahf
bound
pop
mov
pop
and
jg
popa
mov
jl
and
inc
fistpll
out
xchg
dec
sbb
xor
jle
sub
aaa
fistl
cwtl
dec
cmp
insb
push
or
push
push
loopne
dec
pop
or
mov
arpl
in
sub
into
stos
add
xor
daa
xchg
push
adc
and
lret
popf
int3
mov
lahf
mov
push
lods
dec
roll
mov
mov
sahf
hlt
mov
in
push
daa
outsb
insl
aaa
cmp
sub
push
ljmp
mov
mov
fstl
push
lods
cmp
xchg
add
xchg
cld
test
mov
lods
xchg
mov
jne
fists
add
gs
popa
std
sub
scas
add
add
dec
leave
jl
adc
pop
adc
lods
popf
sub
pop
pop
xor
shrl
mov
cmp
add
jne
xor
scas
sahf
mov
adc
adc
idivl
pop
fdivr
out
fs
jnp
fucom
roll
jae
pop
stos
scas
xorl
fwait
rcl
sbb
fwait
pop
pushf
aaa
sub
push
inc
cld
add
dec
jns
inc
jae
movsl
cmp
scas
dec
pop
into
fsubrl
enter
xchg
aad
xor
mov
loop
aas
dec
dec
cmpsb
pop
rcrb
test
insl
fildll
pusha
aad
pop
dec
nop
or
pop
fwait
inc
fwait
or
jge
jl
loope
add
cld
xchg
je
cmp
leave
jae
clc
mov
jp
loope
insb
inc
lods
arpl
arpl
repnz
lea
clc
mov
xchg
je
scas
cwtl
dec
in
loopne
jne
mov
iret
add
sbb
inc
pop
sbb
sbb
popf
imul
xchg
push
or
adc
cli
adc
push
dec
cmp
cmp
pop
jns
pop
xor
imul
xor
or
inc
mov
pop
sub
xor
mov
jge
out
rcll
stos
add
jae
cmp
dec
inc
cmp
rclb
add
ljmp
lcall
insb
jl
ret
xchg
test
adc
ds
cmpsl
mov
sub
mov
pop
loope
push
jmp
fisubl
lcall
lcall
push
imul
gs
lods
jae
inc
push
aad
push
push
cmp
popf
mov
test
mov
inc
enter
cmp
mov
jl
sbb
jge
push
adc
xor
mov
mov
pop
jns
mov
pop
inc
ljmp
bnd
lods
out
mov
sub
movsb
fsubs
xchg
ja
mov
mov
pop
cld
outsl
rorb
fcomip
ljmp
cmp
js
mov
iret
mov
sub
scas
cmpb
out
notb
cli
out
aam
inc
adc
rorl
out
aad
push
cwtl
repnz
push
mov
dec
sub
enter
into
gs
mov
daa
sub
xor
and
push
xor
stc
or
in
es
std
lret
push
mov
add
pop
fnsave
jmp
mov
dec
mov
movsl
arpl
out
mov
psrad
mov
xchg
out
push
iret
sbb
roll
cwtl
ljmp
test
sub
xchg
sbb
rcll
push
popa
jbe
mov
push
mov
into
mov
xchg
addb
out
xchg
insb
cmpsb
mov
loope
fwait
xchg
mov
sub
test
push
sbb
jl
mov
out
jecxz
stos
cmp
xor
pop
je
inc
in
mov
aaa
sbb
mov
sub
or
scas
icebp
sbb
jns
pop
imul
push
mov
inc
jns
xor
xchg
fnstcw
inc
sbb
pop
mov
inc
mov
pop
push
pop
hlt
shrl
out
mov
icebp
mov
xor
mov
mov
insl
rorb
pop
incb
mov
fs
jg
xor
mov
shrb
and
call
pop
and
mov
pop
fnsave
pop
shlb
xchg
sub
xchg
test
sbb
sahf
fstl
ss
shll
cmpsb
and
and
inc
inc
xor
in
inc
adc
dec
in
xor
inc
call
test
int
outsb
dec
mov
and
cld
inc
stc
aas
test
jecxz
xchg
rcr
mov
cmp
mov
dec
es
mov
icebp
cli
mov
daa
adc
mov
sti
cltd
test
jo
push
jl
push
loope
into
sbb
andb
push
stos
xchg
popa
jl
jns
out
cmp
mov
cmpsb
jl
ret
mov
add
pop
call
ret
mov
mov
loopne
shlb
jnp
out
add
arpl
ret
stos
subb
jmp
and
ret
dec
add
insl
jae
insl
xchg
xchg
rclb
inc
push
imul
dec
pop
xchg
rclb
inc
jp
popa
test
clc
mov
cld
shll
loope
jmp
mov
dec
imul
mov
jmp
cmpl
push
dec
mov
dec
jl
mov
imul
xchg
mov
aaa
xchg
data16
cmp
or
sbbl
pmaxsw
lret
dec
xchg
es
scas
rcr
jne
mov
repz
sub
cmp
adc
pop
adc
mov
fs
push
mov
cmp
outsl
inc
jmp
jno
sub
sbb
and
add
insb
pushf
sub
bound
out
scas
repz
jge
dec
fistps
pop
ljmp
shr
inc
jecxz
add
arpl
cmc
ja
push
int3
fucomp
mov
dec
inc
popf
aaa
lcall
dec
add
hlt
cmp
nop
push
mov
sbb
shrb
stos
xor
bound
adc
dec
lods
mov
lret
sbb
push
mov
xchg
adc
cli
loopne
xor
fcmovbe
loop
fxch
js
ret
jns
addr16
ret
cmpsb
shll
jle
sub
js
jge
add
mov
mov
aad
cmp
into
cld
jne
cmp
mov
fstpt
mov
xor
bound
or
cli
and
fsub
cmp
lret
repnz
out
ds
fidivs
adc
lds
dec
clc
mov
pop
repz
ja
stos
imul
cwtl
pop
psubusw
jnp
lock
in
push
adc
in
xor
mov
and
mov
popa
out
rclb
sub
dec
pop
sbb
cmp
pop
movsl
xor
add
inc
dec
pushf
popf
or
xchg
faddl
or
or
mov
mov
stos
inc
ret
negb
dec
cmc
out
cmp
cwtl
stos
pop
cld
cmc
sti
cmpsl
sbb
hlt
adc
xchg
adc
add
mov
xchg
pop
sbb
jmp
fildll
add
adc
xor
or
dec
pusha
and
push
dec
jl
xchg
xchg
push
adc
scas
sbb
in
or
push
insb
dec
test
popa
clc
mov
int
out
cmc
jg
sub
movsb
aaa
dec
sbb
xchg
pushf
xchg
cmp
adc
cmpsb
or
dec
mulb
std
cmp
fcoms
ret
repz
pop
mov
imul
outsl
je
repnz
jnp
adc
and
je
repnz
aad
push
cmp
pop
push
jg
dec
ret
fwait
or
and
ljmp
adc
jne
fstps
pop
pop
xchg
divb
lahf
adc
push
add
push
jbe
out
sti
popa
call
nop
cmp
mov
jbe
mov
jmp
xchg
xor
cmp
rcll
pop
ret
or
sbbb
mov
inc
fidivrs
jle
sbb
lods
mov
out
int
pop
xchg
sub
adc
adc
call
mov
or
hlt
or
repnz
mov
and
jno
xchg
fsubrl
aam
xor
repz
loope
push
mov
test
popf
jl
pop
lcall
mov
sub
loope
push
test
sub
xor
adc
movb
mov
inc
xchg
pusha
loope
aaa
insb
xchg
xchg
mov
js
sub
push
out
sub
mov
outsl
loope
jno
push
insl
jo
lock
stc
and
add
inc
hlt
jecxz
inc
push
loope
lods
add
xchg
or
gs
fcmovb
fsubp
jl
lods
je
cmp
mov
mov
adcb
pop
adcb
ret
sub
adc
sbb
or
sbb
cltd
sbbb
lock
and
pop
mov
call
out
adc
jbe
jnp
mov
outsl
xchg
inc
decb
sub
and
cmpsl
cmp
sub
outsb
cmp
adc
stos
sahf
push
imul
imul
mov
inc
loopne
push
and
fisubs
jbe
dec
dec
sbb
dec
sahf
das
pop
xor
xor
or
fcmovnb
das
jo
rcrb
leave
mov
mov
lcall
fcmovnu
and
cmpb
push
rcrb
rorl
jnp
loop
hlt
aaa
stos
xchg
jbe
add
cwtl
fucomip
mov
adc
mov
mov
ss
cli
aas
mov
mov
pop
nop
movsb
je
arpl
int3
mov
hlt
or
xchg
or
ret
cmp
fdivl
movsl
es
push
push
mov
inc
int
pop
adc
and
ds
mov
ss
adc
xor
inc
fdiv
movsl
mov
icebp
mov
call
push
movsl
outsb
imul
inc
mov
divb
jmp
loop
rcrb
xchg
pop
adcl
xor
in
popa
bound
cli
data16
push
and
aam
outsb
pop
and
dec
or
sbb
jo
pop
scas
pop
sub
sub
cltd
sbb
iret
lods
mov
sub
add
xor
jge
leave
mov
fisubl
stos
bound
mov
ficoml
dec
xchg
mov
pop
mov
mov
and
addr16
and
in
jbe
in
mov
loopne
ja
mov
lock
pop
cmpb
dec
cmp
push
minps
popa
cmp
test
nop
popa
pop
sarb
imul
lods
jle
pop
xchg
push
and
ret
lcall
dec
push
jne
sub
fwait
sbb
inc
and
mov
pop
outsl
filds
add
daa
movsl
sbb
jge
mov
in
movsb
inc
adc
dec
pop
dec
jmp
xchg
test
in
mov
pop
xchg
mov
pusha
fcomps
and
jb
rclb
ss
mov
xchg
scas
sub
adc
repnz
add
mov
mulb
lret
ret
jmp
dec
inc
int3
in
clc
jge
bound
jmp
dec
cld
sub
aas
cltd
stos
mov
cvtdq2ps
mov
aaa
pop
xchg
into
lret
inc
sbb
inc
mov
xchg
or
mulb
insb
dec
or
mov
idivl
das
pmulhw
scas
out
push
insb
sub
xor
xchg
popf
loope
ret
pop
lods
cmp
imul
cmc
sbb
xchg
mov
xor
test
mov
ss
adc
and
mov
iret
test
push
lods
push
movsl
in
addb
and
adc
pop
push
daa
lcall
pop
cmc
leave
jne
out
imul
lods
lahf
repnz
push
aaa
cmpsb
and
jne
sti
lods
sub
cmp
jne
loope
ljmp
xor
push
xchg
add
and
sbb
cwtl
xor
aad
dec
pusha
add
mov
cmp
mov
dec
mov
xchg
cli
loopne
xchg
ljmp
dec
and
inc
inc
dec
sti
mov
aas
popa
xchg
push
add
shr
ret
rolb
push
std
or
or
mov
test
aad
jmp
push
orl
scas
xchg
add
std
mov
or
mov
inc
sarl
gs
jle
lods
adc
mov
pop
pop
sbb
ja
aam
stos
jbe
pop
hlt
xchg
push
fcmovbe
pop
inc
mov
lahf
jae
movsb
xor
mov
inc
mov
ret
ror
mov
mov
outsb
out
jns
dec
mov
cmpsl
adc
xor
addl
mov
pop
xorb
mov
jp
cmp
dec
mov
mov
push
add
dec
or
insw
jp
jo
mov
repnz
jmp
aas
aam
lret
and
sti
aas
lret
call
aas
sub
shl
aam
lea
push
cwtl
outsl
lock
sbb
scas
stos
dec
mov
mov
pop
sbb
je
inc
add
lahf
aas
sub
mulb
push
and
sahf
js
ret
push
call
jecxz
cmp
in
jmp
cmp
pop
adc
and
or
lret
cwtl
in
pop
xchg
mov
inc
movsb
cld
mov
sbb
inc
sbb
ds
dec
adc
repnz
push
fmulp
jmp
scas
cmp
mov
sete
popa
mov
mov
adc
push
lret
andl
lcall
mov
pop
data16
dec
push
mov
sbb
pusha
pop
loop
outsb
insb
icebp
cmp
cli
jne
in
lds
out
jae
shlb
mov
mov
mov
dec
push
push
cltd
and
adc
iret
ret
mov
pop
mov
dec
sub
das
fcomps
pop
jno
out
lea
int3
fwait
push
mov
xor
xchg
dec
sub
inc
pop
sbb
inc
dec
inc
lods
sbb
pop
fs
inc
ljmp
adc
cmp
jg
sub
jno
push
sbb
dec
fdivr
arpl
sbb
popl
push
es
pop
inc
xchg
arpl
and
shrb
xor
cmp
mov
stos
sbb
lods
and
push
xor
xchg
dec
insb
or
add
or
sahf
add
adc
jns
cwtl
bound
ret
jecxz
xor
dec
lret
adc
movsb
sbb
pop
dec
in
mov
mov
daa
dec
arpl
mov
push
lods
rcrb
sub
arpl
dec
inc
xchg
push
jae
jecxz
xchg
or
jge
push
xchg
add
adc
pop
xlat
xlat
dec
push
push
jl,pt
cmc
adc
sar
ret
std
stos
int3
stc
leave
jp
enter
int3
dec
lods
sbb
jmp
push
push
inc
push
sbb
dec
push
stos
jbe
movl
mov
data16
mov
fsubrl
cmp
repz
test
pop
aas
jns
lret
inc
jge
and
xor
jmp
adc
scas
in
add
xor
mov
int
inc
jp
stc
mov
adc
rclb
inc
cmp
icebp
push
stc
dec
dec
push
scas
dec
sub
outsb
add
lods
int3
into
aam
mov
pop
outsl
mov
outsl
push
mov
mov
mov
and
cli
js
inc
sbb
mov
aam
mulb
fwait
fs
mov
rcll
sub
in
xchg
and
dec
sub
fwait
hlt
paddd
dec
sbb
jge
push
ds
aas
lods
pop
push
faddp
cs
aad
mov
push
stc
cltd
adc
adc
out
pusha
in
or
rep
inc
mov
xor
stos
cs
cmp
loope
jnp
out
and
aad
shll
xchg
and
add
or
das
stos
or
push
sarb
aaa
shrb
sbb
push
clc
in
mov
push
jge
or
inc
aaa
jg
push
cltd
mov
sub
lcall
adc
cmp
mov
stos
jae
rolb
pop
mov
leave
cmpsl
jno
sub
out
and
push
insl
push
sbb
filds
and
in
pushf
mov
mov
dec
or
jmp
adc
enter
vmulpd
neg
loopne
add
sbbl
pop
rclb
ret
jmp
or
add
xor
mov
loope
mov
push
aad
sbb
roll
xchg
lods
push
outsb
test
cs
stos
int
cli
adc
cmpsb
mov
xor
pop
daa
mov
mov
mov
push
enter
inc
cld
cli
and
mov
adc
int3
stc
push
jnp
xor
push
mov
or
sbb
mov
cmp
das
push
popa
lahf
push
mov
jb
sbb
adc
mov
mov
jle
sti
mov
leave
jo
adc
in
movsl
xor
xor
mov
cmpsl
xchg
sbb
sbb
sti
jo
aam
insb
rorl
push
mov
pop
pop
dec
loopne
orl
rcrl
add
pop
gs
mov
jns
or
inc
adc
idivb
push
adc
sbb
insb
push
stc
xor
shll
adcl
fstpt
popf
clc
lds
mov
sub
ret
in
ljmp
xchg
push
xchg
int
adc
sub
popf
fimull
mov
sub
fldcw
into
pslld
adc
push
xchg
jecxz
outsb
cmp
mov
fisubrl
lret
push
sahf
dec
jnp
loop
in
ljmp
inc
xor
insb
jnp
mov
negl
push
add
mov
add
gs
push
ds
lods
stos
data16
jo
cwtl
shlb
imul
in
inc
aaa
je
popf
pop
rep
inc
sbb
sahf
cmpsb
sbb
jne
filds
pop
outsb
rcrb
add
dec
js
je
mov
xor
popf
or
lcall
test
jne
testl
adc
pop
decb
push
dec
mov
rcr
cli
pop
sub
je
stc
mov
jb
shr
mov
enter
and
jae
xchg
xor
je
push
push
decb
sbb
pop
sahf
dec
cld
add
ficompl
push
dec
in
arpl
xchg
sbb
jo
xchg
or
push
ja
xchg
push
pop
push
fisubl
pop
mov
pop
cwtl
mov
ret
call
int
mov
push
push
jno
loop
std
mov
in
jg
jge
xor
int
hlt
sarb
imul
lahf
lock
mov
mov
adc
ja
inc
dec
sub
pop
cmp
aam
sti
add
jg
lret
mov
loop
icebp
bound
aam
int3
push
xchg
je
test
shl
sub
xlat
repz
les
sbb
hlt
mov
sub
mov
jo
out
hlt
jmp
stc
dec
lret
jo
lcall
push
lcall
ret
loope
stc
lret
out
inc
loopne
sahf
xchg
loopne
sbb
pop
repz
jae
adc
pop
push
sub
cld
mov
je
and
inc
scas
les
imul
lret
jbe
pop
imul
std
sub
inc
cmp
shr
bnd
stos
faddp
or
pop
xchg
push
sahf
movsb
pop
xor
sbb
rcll
pop
andb
and
pop
test
nop
pusha
jp
mov
jbe
push
add
xchg
out
xchg
or
out
clc
pop
insb
cmp
jmp
out
nop
mov
mov
test
dec
lcall
enter
dec
push
dec
sbbl
inc
ljmp
roll
stos
lea
push
dec
lods
adc
and
mov
cmp
cli
fs
lret
xlat
xlat
js
xchg
inc
adc
pop
mov
jo
cmp
sub
test
es
cwtl
movsb
pop
shl
push
sbb
movsb
and
aas
xorb
iret
inc
add
push
fsts
sbb
adc
and
jno
lret
out
int3
das
or
into
add
popf
xchg
sahf
aad
mov
xor
lods
sub
sub
and
xchg
add
mov
in
or
xchg
pop
jae
aas
xchg
fadd
xchg
in
add
xor
lds
jae
mov
jno
dec
lods
cmp
lcall
cltd
or
sahf
mov
push
xchg
xor
cmp
cmp
insl
pop
inc
mov
xchg
push
lcall
mov
fs
pop
test
and
sbb
push
adc
arpl
inc
sarl
or
push
mov
sub
addr16
daa
nop
lcall
xor
lahf
mov
mov
gs
push
fistps
inc
cmp
sti
inc
cwtl
mov
scas
add
fnstsw
xchg
dec
or
add
call
and
add
jl
sahf
and
push
and
lock
xor
bound
sub
push
add
sbb
and
arpl
out
hlt
and
add
sbb
cmp
jno
mov
roll
iret
lcall
popa
ret
lock
pop
jne
pop
dec
sub
push
push
insl
adc
cmp
outsb
mov
adc
dec
imull
sbb
loop
adc
xchg
mov
fs
jmp
enter
test
fsubrl
mov
or
test
mov
fimull
leave
add
cmpsl
je
dec
stos
add
popa
inc
xchg
insl
ret
mov
seta
stc
movl
sahf
xchg
repnz
xor
ret
popf
mov
int3
lret
inc
inc
jp
in
leave
in
jmp
data16
sahf
mov
adc
add
jmp
outsl
stos
jl
dec
inc
icebp
cmc
scas
or
lret
mov
std
lret
xorb
lret
pop
sub
mov
sbb
adc
outsl
mov
pop
cmp
insb
jecxz
ljmp
xchg
adc
repnz
inc
xor
cs
cmpb
xor
sbb
sahf
mov
repnz
or
in
or
push
mov
stos
xchg
mov
pop
mov
mov
cmp
cmp
push
jmp
sarb
cmp
or
insb
dec
movsl
sub
xchg
adc
jge
subb
daa
cmp
inc
cwtl
in
je
data16
loopne
xor
cmp
push
mov
aad
pop
xchg
sbb
or
out
jmp
dec
mov
push
cmp
pop
adc
mov
les
int3
fnstcw
in
sub
xor
adc
jns
sub
je
push
fildl
jmp
adc
dec
stos
fisttpll
mov
cmp
and
aad
scas
fldcw
mov
jmp
arpl
or
pushf
sbb
mov
and
scas
push
adc
mov
pusha
inc
iret
push
repz
cmpsb
int
daa
xchg
jno
inc
mov
mov
lods
sub
sub
jl
in
xor
cli
mov
jno
addr16
mov
lock
or
push
lret
or
mov
in
cltd
push
in
pop
xchg
jo
adc
sub
sub
add
push
mov
fidivs
adc
enter
xchg
add
dec
mov
les
jae
jp
js
xor
nop
popa
inc
jecxz
or
mov
or
cmp
and
or
std
xchg
jns
mov
push
mov
dec
pop
push
pop
push
or
xchg
xlat
popf
and
lahf
and
xchg
mov
sub
lahf
xchg
ret
lret
push
mov
push
push
mov
dec
insb
cmp
jno
adc
xor
add
mov
pop
mov
sbb
stos
xchg
das
iret
rcr
add
inc
in
sbbl
mov
popa
pop
leave
inc
pop
fs
and
adc
add
jo
aaa
cmp
xor
outsl
aas
add
pop
xchg
test
je
inc
clc
ja
fdivrl
adc
mov
je
or
xorl
mov
fimuls
sub
mov
mov
loop
mov
or
stos
stc
out
imul
ret
aaa
sbb
movsl
les
je
sub
jmp
push
mov
ljmp
rcl
inc
adc
mov
in
rcrl
out
data16
sub
rorl
jp
fmuls
mov
or
aam
mov
rol
cmp
lock
ret
movsb
and
pop
in
pop
xor
ds
jecxz
cmp
push
rcrl
call
daa
lret
cmp
xchg
dec
xor
jno
mov
popf
movsb
repnz
in
pop
ret
repnz
or
add
jb
andb
xorb
jp
movsl
or
repnz
xor
ret
jno
dec
ljmp
js
je
mov
gs
push
scas
push
dec
xlat
lret
push
in
das
push
lods
xchg
mov
jmp
xor
cld
dec
in
pop
stos
mov
or
sbb
jge
enter
repnz
push
std
fdiv
xor
iret
data16
fcom
aad
cmp
push
xchg
push
sub
sbb
mov
aam
outsb
sbb
imul
xor
pop
ljmp
xor
out
lock
cmp
stc
gs
dec
addl
mov
jae
jge
sbb
repz
and
in
jns
dec
mov
sbb
scas
jbe
mov
sub
test
cmp
and
lret
mov
pop
sub
or
das
shlb
jno
lods
lret
and
shlb
fwait
and
mov
cmpsl
xchg
subl
sub
sub
es
push
mov
gs
lock
ss
lahf
pop
add
cwtl
and
ja
jb
hlt
jns
es
int
jecxz
push
test
inc
jbe
push
sbb
pop
mov
imul
add
lods
jmp
in
push
imul
nop
jo
and
in
sbb
cmpsl
fisubl
mov
fisttpll
xor
pushf
das
pop
dec
test
mov
les
xor
cltd
sbb
mov
les
scas
adc
push
minps
rcr
into
pop
pop
mov
mov
mov
idiv
sti
dec
add
push
adc
xchg
mov
adc
xchg
xchg
dec
mov
xchg
add
dec
mov
daa
cwtl
adc
fnstcw
and
inc
in
push
mov
cmp
cmpsl
xchg
xchg
arpl
mov
ljmp
cmc
xchg
sbb
dec
icebp
mov
inc
sbb
cmpsb
dec
inc
jbe
xchg
cmp
mov
adc
add
sub
or
push
push
xor
add
fnstenv
dec
cmp
out
xor
pop
xor
aaa
pop
test
xchg
int
sahf
lret
pop
add
pop
cmp
push
loop
xchg
hlt
lea
sub
adc
clc
add
mov
push
incl
push
jb
mov
shrl
jle
pop
std
mov
arpl
cld
xor
mov
shl
and
xchg
push
int3
cli
int3
aaa
pop
push
fucompp
test
jp
xchg
test
pop
and
inc
shll
xchg
push
mov
gs
dec
jnp
loope
fcoms
or
mov
cwtl
ss
lcall
adc
outsb
sub
mov
popf
dec
lcall
rcrl
cltd
xchg
push
add
daa
cmp
pop
and
dec
jp
sbb
mov
and
push
lock
add
daa
cmp
add
das
test
pushf
les
aas
arpl
push
pmuludq
iret
sub
popa
scas
popa
lcall
sub
jle
les
movsl
push
jl
icebp
sub
loope
xchg
push
add
mov
mov
inc
bound
fistpll
push
sub
popf
call
icebp
sub
inc
add
xor
lea
lcall
push
cmp
xlat
repz
test
adc
push
fs
and
pop
sub
push
aam
pop
fisttps
xor
shlb
out
adc
into
jnp
inc
xchg
js
mov
hlt
push
es
jp
mov
popf
and
jno
sbb
ljmp
lret
ret
sub
into
mov
mov
push
xor
add
xlat
push
dec
mov
jmp
jo
mov
inc
or
dec
cmpl
enter
ja
xor
ss
in
hlt
adc
pop
fcmovu
je
loope
call
pop
out
addr16
mov
popf
mov
sbb
lods
in
test
ds
xor
push
out
push
outsl
es
mov
call
or
addb
stc
mov
add
jbe
out
into
pop
adc
popa
cltd
and
aaa
dec
pop
xor
aam
pushl
mov
cmp
or
int3
or
out
ret
add
les
in
xchg
int3
in
icebp
dec
cmp
mov
sti
lock
pushf
sbbl
and
stc
loope
outsl
les
sub
clc
cmp
sti
addr16
and
divb
and
insb
in
pop
rorb
rol
xchg
mov
mov
jl
dec
nop
pop
add
pop
dec
lcall
sub
xchg
sbb
xor
adc
xchg
push
repnz
loopne
jmp
pop
nop
cmovo
inc
push
and
pop
in
ret
daa
xchg
push
leave
and
lea
xchg
hlt
notb
and
pop
dec
outsl
or
xor
repz
pop
fs
sub
dec
pop
mov
mov
add
repz
scas
leave
pop
dec
cmp
push
popa
xchg
lods
xor
lret
insb
cmp
jnp
stc
outsb
aad
inc
and
repnz
inc
cmp
in
cmpsb
ja
movb
xlat
jge
or
scas
sbb
mov
ljmp
cmc
pop
cmpsl
jmp
insl
lods
pop
pusha
fsubrp
fwait
out
add
mov
test
jle
xor
jmp
jae
mov
add
inc
lahf
int
aaa
sbb
in
and
push
ds
scas
ja
hlt
mov
outsl
adc
or
mov
enter
mov
lcall
push
fwait
and
cmp
iret
fistpll
aad
repz
jl
out
ret
mov
inc
adc
dec
xchg
stc
add
icebp
pusha
lcall
push
dec
fimull
ds
push
test
mov
in
call
popa
adc
and
push
adc
addb
repz
daa
movsb
test
fs
shlb
mov
mov
ret
int3
add
mov
ret
inc
test
xchg
sub
enter
stc
dec
mov
jmp
mov
or
xor
insb
fcomps
mov
xchg
aaa
mov
pop
sub
cli
xchg
xchg
dec
sbb
lret
rcr
iret
sarl
mov
loop
push
cmp
push
inc
dec
sbb
xchg
cmp
iret
mov
pop
int
add
int
pop
addb
rcrl
hlt
xchg
pop
cli
fbstp
push
fisttps
xchg
arpl
push
dec
lods
pusha
adc
or
sbb
mov
pop
pop
jno
add
scas
dec
aad
push
push
mov
push
cmc
lds
inc
xor
add
pusha
int3
mov
ljmp
adc
push
arpl
adc
inc
pop
addr16
not
lods
mov
and
out
adc
rcl
les
pop
jle
mov
into
mov
dec
ficomps
das
xchg
jnp
dec
xchg
mov
add
popa
dec
xor
das
popf
jo
mov
test
into
fiadds
mov
ds
pop
pop
scas
mov
jmp
cmc
sbb
push
rclb
cmpsl
or
cmp
or
sub
mov
icebp
aam
mov
and
push
pop
repnz
mov
out
clc
cmp
lret
fidivrl
into
xor
inc
loope
push
xchg
mov
jp
push
sbb
cld
cmp
adc
push
bound
lret
lcall
cli
imull
inc
and
or
or
push
xlat
lods
dec
xor
inc
outsb
jge
cltd
sub
cmc
popf
dec
adc
xchg
xchg
lret
ds
movsl
xor
or
add
lock
lahf
sub
sub
lds
je
and
cs
mov
cmpsl
lods
pop
dec
imul
test
sbb
fstp
scas
adc
add
adc
sahf
push
iret
mov
or
dec
sbb
jnp
adc
add
dec
adc
pop
push
or
mov
pop
insb
pop
andb
out
cltd
shl
mov
mov
fcoms
mov
aas
adc
into
mov
in
mov
int
sbb
fidivrs
divl
jbe
jmp
popa
shlb
sbb
ficoms
cltd
scas
fisubrs
pop
cmp
push
sbb
xlat
add
fildl
insl
push
lds
push
notl
insb
adc
pusha
mov
rcll
jg
cmpsb
push
hlt
test
mov
mov
ss
sub
and
add
sarb
add
fnstenv
and
sbb
xchg
or
lret
mov
dec
inc
cmpsl
cld
xchg
lcall
mov
pop
mov
and
push
rcll
pop
rol
inc
push
dec
sub
xor
xchg
popf
and
jnp
pushf
or
sbb
adc
mov
js
push
idivb
fldt
cs
addr16
push
lods
add
push
pop
inc
das
push
gs
cmc
push
imul
jno
bound
lahf
sbb
movsb
sbb
sub
dec
cltd
outsb
icebp
fnstsw
add
or
int
xor
lods
push
xchg
int3
clc
push
sbb
xor
adc
popa
xor
or
pop
arpl
into
jp
scas
push
ss
movl
in
pop
bound
lcall
in
cmpsb
fbld
xorl
mov
ficoms
test
stos
ficompl
imul
push
les
jge
mov
lock
pop
mov
or
loope
icebp
xchg
or
ss
jle
mov
cltd
dec
aad
or
cwtl
std
push
inc
enter
mov
inc
stos
mov
push
jnp
adc
dec
xchg
xchg
xchg
dec
push
das
test
daa
xor
or
jbe
mov
fcmove
mov
or
rcrl
dec
lods
or
loope
fidivrs
and
lcall
add
mov
iret
mov
test
insl
decl
jae
in
dec
mov
test
mov
and
rcrb
lds
scas
frstor
mov
add
lcall
cmpsl
jo
pop
mov
mov
jnp
push
mov
push
outsb
inc
ljmp
insl
or
mov
push
jnp
stos
in
push
mov
popa
xchg
push
adcl
repz
cmpsl
test
aam
xlat
sahf
pop
stc
jmp
fsubr
sbb
sbb
push
sbb
stos
push
test
push
std
mov
scas
scas
enter
mov
js
sbb
jo
jp
scas
inc
jb
out
mov
rcrb
and
jo
pop
dec
or
imul
call
ret
popa
in
mov
sub
mov
mov
flds
jp
je
adc
rolb
push
adc
mov
hlt
cmp
sbb
stos
shl
jl
pop
cltd
pop
aam
nop
mov
cmp
mov
mov
pushl
pop
xor
outsl
inc
or
add
dec
out
push
enter
jb
add
dec
jne
jb
mov
icebp
notb
dec
aam
add
stos
mov
cmp
cmpb
ds
popf
std
lret
in
cs
mov
clc
test
mov
ljmp
jne
push
imul
sbb
call
and
loopne
add
and
test
inc
jge
std
aaa
aad
stos
cmp
push
sub
cmpsb
push
cli
push
push
ret
pushf
xor
push
xor
pop
push
movsb
xor
stc
cmp
scas
bound
or
sbb
mov
cwtl
loop
stc
rcrb
aad
jmp
or
test
sub
pop
inc
dec
xchg
stc
push
pop
mov
and
add
repnz
imul
loopne
cmp
pop
mov
push
mov
fnstsw
add
sahf
scas
xlat
cld
jmp
xchg
sub
jbe
out
push
xchg
pop
cli
sub
ss
outsb
shlb
in
out
int
stos
enter
ror
push
fcmovnbe
mov
xchg
push
lcall
inc
and
ja
sub
addb
xor
cli
xor
pcmpeqb
fildll
push
pusha
lret
mov
xchg
aad
jp
call
ret
adcb
pop
ret
movsb
cmp
loopne
mov
jnp
sbb
pop
std
sbb
mov
add
in
lcall
cmpsl
in
loope
andb
or
mov
inc
mov
imul
add
push
push
adc
add
sbb
push
aas
mov
mov
rcrl
inc
mov
cmpsb
sub
out
fdivl
subb
pop
out
movsb
pop
shrb
mov
mov
inc
repnz
popa
cmpsl
sub
lcall
insb
sbb
addr16
cmp
mov
imul
mov
lock
cmpsl
adc
jl
xchg
je
fwait
mov
movsb
or
pop
jmp
inc
jns
add
mov
jp
aad
cmp
std
xlat
pushf
sub
push
and
repnz
shll
sub
or
adc
adc
inc
mov
mov
shlb
jno
pop
rorl
push
scas
sub
scas
addr16
jnp
pop
mov
das
in
lock
test
adc
sar
insb
mov
xchg
cmc
pop
roll
shrb
ja
pop
mov
fdivrp
lods
enter
roll
cs
insb
and
sbb
xor
into
popf
pop
xor
mov
arpl
fidivs
pop
mov
ja
or
inc
jo
sbb
cli
repnz
lcall
mov
mov
popa
pop
xchg
mov
jmp
cs
sub
xchg
and
xor
mov
cmpsb
stc
adc
mov
jae
xchg
std
fucomi
jb
mov
xchg
outsl
cwtl
or
scas
and
aaa
or
mov
inc
add
and
fldcw
jnp
xchg
add
out
fisttps
cmp
cmp
out
movsb
aad
pop
adc
pop
jno
ja
and
flds
lea
outsb
pop
push
sub
or
cmpsb
push
les
imul
test
pushf
repnz
inc
es
inc
mov
jne
fidivs
aas
cmp
cltd
mov
and
cs
cmovnp
add
xchg
aaa
es
insl
popa
bound
bound
adc
adc
inc
fwait
and
mov
cltd
and
fwait
add
adc
movsl
cmp
xor
cld
inc
push
out
addr16
leave
outsb
je,pt
pop
scas
lds
xor
gs
sbb
rorb
mov
iret
sarb
and
pop
cmp
clc
std
dec
loop
cld
add
bound
hlt
xchg
xchg
pop
jg
lea
cli
mov
ret
cwtl
shll
and
and
pop
addb
cmc
rcl
sbb
dec
sbb
mov
mov
xor
add
inc
cmpsb
mov
jb
xor
mov
sub
sub
mov
mov
and
add
mov
cmpl
jno
adc
test
out
sub
mov
jae
lret
fnstcw
insb
push
sub
dec
push
loope
jmp
xchg
mov
add
aaa
push
pop
xor
in
loope
js
pop
repz
or
shrl
das
push
cmp
out
inc
mov
jne
or
call
push
xchg
mov
xor
cwtl
dec
icebp
dec
cwtl
cmp
fisubrl
stos
ljmp
shrl
sub
insb
jns
scas
cmc
aas
cmp
ds
dec
pusha
add
dec
sbb
xor
les
movsl
lfs
movsb
sub
pop
xchg
sahf
push
outsb
lret
inc
cltd
inc
lods
lcall
pop
mov
xchg
maskmovq
notl
test
xchg
add
push
stc
push
imul
xchg
jae
out
jns
mov
mov
in
inc
cltd
aam
adc
cmpsb
orl
cmp
pop
mov
fcompl
adcl
loope
sti
mov
mov
cmpsl
xchg
push
or
loope
sub
rorl
push
repz
popa
push
imul
or
or
shl
xor
jge
ss
adc
ja
push
push
insl
outsb
iret
lea
pushl
inc
idivb
mov
xchg
xchg
mull
fildll
stc
test
fistpll
pop
push
pop
ss
lock
mov
jmp
cld
and
pop
enter
xlat
inc
sahf
loopne
add
out
addr16
shrl
or
inc
sub
sti
mov
add
push
cmp
ljmp
xchg
pop
in
popf
mov
stos
xchg
lret
movsl
dec
jmp
cmp
sahf
roll
nop
stos
rcrl
addl
ds
mov
and
loope
leave
movsl
mov
mov
sub
xor
mov
and
xchg
fnsave
inc
inc
jae,pt
cmp
iret
jp
int3
push
sub
jmp
imul
hlt
mov
sahf
test
scas
rcrb
dec
xchg
out
rclb
cmc
cmpsb
xchg
ret
mov
push
dec
mov
lret
mov
adc
mov
fadd
das
inc
pop
icebp
xchg
or
dec
xchg
cld
mov
int
pusha
xchg
iret
pop
cmp
or
or
adc
cmp
mov
add
in
fstl
or
pop
int3
ss
test
testl
lods
jecxz
add
loop
push
sub
mov
cmp
push
and
stos
insl
mov
iret
bound
jmp
sbb
clc
xchg
mov
or
fmuls
mov
js
cmp
push
xchg
cs
fidivs
xor
jg
adc
fldcw
inc
xlat
cmp
dec
cli
dec
jecxz
jns
hlt
icebp
xor
mov
in
inc
xchg
mov
insl
jbe
lret
data16
insb
dec
mov
out
cwtl
rclb
rorl
out
mov
int
fiaddl
or
mov
add
fists
cwtl
xor
inc
int3
inc
mov
js
xlat
and
ret
mov
in
cmp
jl
lea
add
mov
xor
jp
inc
iret
xor
jge
aaa
iret
hlt
call
out
jnp
fdivrs
aas
pop
jecxz
mov
flds
mov
push
lcall
mov
dec
jmp
push
int3
repz
fisubrl
mov
inc
imul
sbb
mov
pop
imul
gs
stos
inc
mov
loop
loope
frstor
sbb
and
outsl
stc
ret
cmp
pop
jmp
cmp
shlb
gs
mov
push
stos
xor
movb
and
lcall
filds
stc
or
lds
mov
cmp
loop
enter
shl
clc
jae
icebp
jb
xor
ds
shr
clc
and
dec
stos
daa
cmp
enter
es
dec
and
sub
xchg
fstp
cmp
fdivr
lcall
mov
out
dec
jne
out
stos
jns
in
mov
cmp
fnstsw
cli
sub
mov
xor
das
js
mov
out
pop
fucomp
lds
push
lea
test
cltd
icebp
and
pop
mov
fldt
mov
pop
fildl
mov
xchg
in
bound
scas
xor
dec
push
outsl
add
out
push
sbb
dec
add
popf
in
std
add
push
mov
stos
push
and
fists
cmp
ds
int3
mov
stc
iret
shl
dec
sbb
into
jnp
es
mov
dec
loopne
cmp
push
xchg
xor
mov
mov
or
push
loope
mov
lret
or
jnp
das
test
cmp
fstpl
xor
mov
fistpl
mov
cltd
dec
pop
cwtl
insl
sub
push
jge
dec
inc
mov
dec
out
or
hlt
int
add
mov
jp
shll
imull
pop
fs
jmp
xchg
out
idivl
inc
xchg
mov
fs
xchg
shll
sbb
mov
mov
sti
adc
cmp
mov
sbb
dec
sbb
dec
xor
inc
adc
into
jnp
pop
pop
jg
sub
lret
and
ficoml
push
test
arpl
xchg
arpl
fsubrs
or
test
lcall
neg
dec
and
aaa
vmaxps
inc
mov
sbb
cmpsb
out
mov
xor
xor
inc
sarl
subl
dec
in
sahf
out
pusha
mov
jmp
ljmp
insl
cmpsl
pop
or
push
dec
in
jl
mov
xchg
fisubs
add
push
xchg
xlat
movb
sbb
xor
leave
andb
divl
xor
js
sbb
fs
in
add
fcmovbe
test
test
sahf
mov
in
in
push
fstpl
int
adc
cld
mov
cld
popf
pop
movb
stc
daa
push
mov
stos
dec
cmp
xor
in
mov
pop
in
jl
leave
adc
lahf
dec
lock
or
fsubrl
fiaddl
jno
insl
sbb
sbb
or
mov
sbb
adc
mov
test
adc
sbb
push
ja
fistpll
push
addr16
addr16
add
inc
and
cmp
les
nop
dec
fimuls
xchg
sbb
push
aam
sub
adcb
pop
add
repnz
sub
jl
push
xor
rcll
mov
popf
mov
pop
mov
and
pop
in
inc
clc
rorl
addl
aad
jge
mov
test
xchg
push
fnstsw
test
stos
mov
cmpb
inc
jle
dec
out
and
jmp
or
fistpl
js
mov
psubq
scas
lods
lea
mov
mov
push
pop
mov
dec
lods
aam
and
xchg
int3
sub
cmp
addr16
push
ret
mov
xor
into
insb
insl
sub
in
imull
mov
adc
fmul
adc
andb
fsubr
push
adc
or
xor
insl
adc
inc
lods
out
fwait
jecxz
lds
scas
mov
dec
roll
mov
repnz
jne
ja
jo
adc
mov
fcomps
mov
data16
push
pusha
fldt
ss
mov
lea
mov
ret
filds
jl
xchg
ss
push
cwtl
xchg
mov
mov
jns
adc
fstl
nop
mov
daa
jle
mov
int3
sub
cmp
mov
mov
push
enter
mov
push
mov
movsl
xor
mov
xchg
sub
pop
pop
sbb
pop
dec
movlhps
sarb
xor
cmp
pop
nop
fwait
mov
mov
popa
fimuls
push
xchg
dec
imul
bound
in
pavgw
and
sub
dec
dec
imul
xor
mov
aas
ret
outsl
sbb
mov
sub
sbb
dec
inc
pop
mov
jg
pushf
orb
dec
icebp
jg
stc
repnz
jae
sub
push
jno
push
push
or
xor
outsb
xchg
cmp
add
ror
out
sbb
add
mov
pop
mov
add
rorb
dec
fsubrp
je
push
arpl
or
test
sub
cmp
jp
icebp
stos
or
bound
incl
test
shlb
in
xchg
addr16
pop
xor
jmp
scas
sbb
push
daa
xor
jne,pt
testl
aaa
testb
or
and
mov
mov
mov
add
xchg
rcll
repnz
addr16
add
add
fisubrs
mov
jmp
cs
imul
shrb
jmp
clc
pop
dec
add
inc
and
lret
lahf
test
cmp
sub
adc
les
int
out
push
mov
sar
jge
pop
loope
aam
push
test
push
fwait
add
or
mov
lret
pop
imulb
clc
cmpsl
frstor
or
aad
js
pop
push
scas
push
cmp
outsb
imul
cwtl
sub
xor
add
leave
in
loope
cmp
cmp
sti
cmpsl
notb
or
or
sub
sar
fisubrs
sbb
je
inc
test
or
jmp
jb
jecxz
sub
out
mov
pop
inc
mov
ret
adc
sbb
loop
fildl
test
jno
inc
call
add
inc
cwtl
stos
stc
xchg
dec
xor
push
orb
push
loopne
mov
jle
mov
mov
ja
ret
sub
push
je
mov
fisttpll
add
pop
adc
jno
xchg
mov
cmp
test
mov
je
or
popf
mov
xchg
dec
jecxz
pushf
sbb
xchg
pop
lock
jl
aad
std
mov
xchg
push
and
or
stos
adc
repz
sbb
lret
push
push
cmc
xor
lods
ret
push
clc
mov
addr16
cmp
add
flds
insl
ds
das
adc
and
adc
or
xor
fnstcw
and
js
sub
aad
std
fadds
test
outsb
xlat
xlat
lds
sub
push
movsb
cmp
pop
xchg
pushf
mov
pop
xchg
cwtl
sub
jne
jle
sbb
push
imul
push
push
cmpb
test
pop
mov
cwtl
sub
repz
push
mov
insb
jb
adcb
pop
enter
xchg
mov
add
sub
inc
cmp
mov
push
xchg
ljmp
mov
add
sub
dec
es
outsb
add
ror
jo
jo
movsb
adc
leave
test
push
std
ja
ja
fldcw
xor
add
pop
mov
imul
adc
gs
sub
sbb
jne
inc
push
jno
loopw
mov
ret
int3
in
sub
push
mov
jmp
fwait
inc
ljmp
lahf
mov
inc
jl
push
out
nop
fwait
test
pop
lret
xlat
cld
adc
mov
ss
idivb
add
loopne
das
bswap
xor
loope
rcr
hlt
mov
sbb
inc
push
in
bnd
adc
jmp
iret
jp,pn
or
enter
jg
into
outsb
loopne
fisttpl
xor
pop
and
popa
cltd
daa
push
adc
fcompl
dec
clc
pop
cli
and
cld
sub
jnp
cltd
shr
push
ret
push
iret
lahf
inc
xchg
mov
and
adc
aad
js
pop
ds
mov
mov
pop
sti
call
imul
mov
shl
in
js
mov
pop
jae
cmp
push
pop
scas
push
and
adc
inc
inc
dec
movl
ret
add
sbb
add
mov
test
hlt
cmpsb
fadd
xor
pop
adc
jae
addr16
jl
sbb
inc
bound
imul
cwtl
cmpsl
xor
out
xor
ljmp
sub
pop
jae
test
pop
test
sti
inc
xchg
mov
push
add
arpl
and
repz
add
jp
pop
fiadds
xchg
sub
pusha
push
mov
xchg
mov
jge
push
cwtl
clc
sub
nop
in
lcall
lret
pop
inc
call
jg
aaa
jne
mov
in
mov
test
jb
dec
jle
mov
cmpsb
lods
mov
xchg
in
sbb
sbb
mov
mov
and
mov
mov
int3
lcall
push
mov
fbld
in
jns
pusha
cmp
rorl
xor
ret
or
pop
jp
cmp
int3
loope
sub
imul
inc
shrl
test
inc
shll
xor
lcall
mov
cld
jecxz
in
mov
gs
ljmp
dec
or
sub
scas
lods
insl
and
das
sbb
and
jnp
loopne
insb
cwtl
ja
xchg
and
fs
jb
jns
mov
pop
scas
inc
xor
out
and
popa
daa
jo
or
stc
dec
loop
dec
jge
sbb
push
stos
lds
push
in
mov
into
jp
aaa
mov
aam
rol
lea
or
andb
int3
dec
cmp
ret
aas
js
or
add
decb
cmc
leave
ljmp
bnd
cmc
add
sti
push
push
mov
insl
les
mov
mov
aaa
push
je
dec
ficoml
divb
push
dec
sar
iret
jmp
les
cmpsl
inc
mov
sub
insl
lds
jmp
into
cld
andl
sub
out
insl
outsb
in
mov
mov
jecxz
dec
pop
xchg
in
fs
add
mov
or
mov
out
or
out
shll
mov
mov
ljmp
add
hlt
xlat
in
dec
fcoml
test
sub
and
outsl
lds
adc
cmpsl
shrl
xlat
push
ret
dec
jno
xchg
aas
movsl
lods
pop
adc
aas
in
dec
repnz
popf
jns
je
bound
mov
fs
xchg
mov
xchg
ja
aam
cmc
mov
leave
push
sub
xor
mov
ja
out
sbb
rcr
insb
fnstenv
push
inc
pushf
sub
cli
pop
cmp
cmpsb
adc
xchg
sub
ljmp
mov
pop
es
jae
mov
stos
push
inc
outsb
icebp
out
popf
or
pop
bound
and
je
ja
xchg
xchg
loopne
jp
xchg
mov
jle
daa
inc
sub
out
sub
xchg
push
mov
inc
jl
fildll
cmp
inc
pop
clc
mov
orb
mov
mov
and
mov
loopne
xchg
lret
das
repz
lods
adc
pop
or
cmpsb
idiv
dec
mov
andb
fmuls
insb
decl
ljmp
test
in
mov
push
pop
mov
data16
mov
fcmovne
repnz
aad
mov
fdivrs
xor
mov
aad
add
or
xchg
aad
adc
enter
mov
inc
cwtl
pop
cmpsb
sbbb
and
push
in
inc
mov
cmp
dec
jg
cmp
jp
mov
int3
fcoms
mov
xor
out
es
gs
es
adc
mov
push
lahf
out
mov
int3
cltd
arpl
pop
out
and
stc
jge,pt
lea
incl
sbbl
ret
mov
cmp
test
aad
jg
iret
int
gs
mov
call
or
rolb
loope
nop
xor
mov
push
lret
xchg
and
fwait
je
loopne
call
sbb
sbbl
pop
scas
dec
pop
xor
cmp
sub
jge
mov
sar
mov
and
pop
arpl
fs
addr16
inc
and
insl
adc
les
jnp
int
jle
cmc
ficompl
nop
mov
lcall
inc
pop
scas
int3
sub
xchg
sti
cwtl
inc
aam
pop
js
mov
and
pop
add
mov
sub
fcomps
push
outsb
mov
adc
xor
inc
lret
jecxz
adc
ret
inc
vpcmpgtd
push
outsl
icebp
dec
fs
or
int3
adc
inc
sub
aas
mov
sbb
out
and
ret
pop
push
mov
fistpl
fldcw
ficoml
shll
ljmp
jne
in
mov
mov
push
push
enter
test
jne
pop
pop
test
ret
out
cmp
ss
and
and
dec
and
pushf
sbb
pusha
movsl
out
cmp
call
push
sbb
aaa
sarb
or
mov
popa
xorb
out
daa
cmp
clc
or
jbe
pop
jne
cli
mov
fadd
scas
adc
xor
in
js
push
mov
jp
sti
std
sub
sti
lods
call
jge
mov
gs
xchg
lahf
repnz
stos
jo
das
fdivrs
aam
inc
or
fidivrl
push
xor
shr
mov
xor
adc
jge
cmpsb
adc
sbb
or
mov
xchg
fmul
jno
aas
test
int
or
mov
clc
fildl
mov
inc
clc
jno
das
sbb
and
call
adc
mov
and
jge
mov
pushf
sub
mov
iret
push
jbe
cld
push
cmp
icebp
es
cmp
adc
std
repnz
dec
push
mov
mov
jne
lret
pop
fcmovb
hlt
jge
push
fs
sahf
and
add
adc
mov
imulb
and
outsl
dec
cmpsb
stc
leave
dec
cld
ljmp
mov
ljmp
imul
test
scas
sub
inc
jp
shrb
adc
fmull
sbb
push
insl
xchg
pushf
mov
lret
or
clc
xor
aam
mov
lods
cmp
mov
adc
dec
ja
cli
std
mov
call
xchg
iret
sub
subb
cli
fimull
fidivs
cli
lret
lea
ret
test
arpl
jo
mov
pop
popa
mov
and
pop
fisubl
pop
push
ret
scas
pop
in
sbb
cmp
and
aas
xchg
int
cmp
push
pop
fmulp
dec
adc
mul
jb
clc
aas
orl
iret
dec
pop
jl
jne
sub
lea
xchg
push
or
and
mov
lock
inc
cmpsl
imul
rcl
mov
mov
push
mov
sbb
std
ja
hlt
cwtl
insl
test
sarl
addl
jl
dec
cmp
lahf
mov
cmpsb
lds
ljmp
movl
jecxz
sbb
jl
fbstp
inc
sub
sbb
mov
aad
or
ljmp
jge
inc
leave
mov
and
fsubrs
cmpl
data16
iret
pop
fsub
jnp
leave
mov
mov
hlt
sub
or
mov
push
leave
lods
hlt
xchg
jp
mov
jb
es
push
lahf
adc
pusha
mov
insl
sbb
jmp
clc
shlb
in
fildll
aad
dec
aaa
insl
mov
fcmove
subb
shrb
clc
mov
adcb
rorb
mov
ret
mov
push
pop
inc
imul
aaa
pop
xor
add
cmp
imul
push
dec
test
xlat
les
add
aam
mov
lret
add
fisubrl
push
push
mov
cmp
pop
push
iret
mov
mov
loop
xchg
add
jb
leave
adc
or
jns
xchg
stos
xlat
add
gs
add
inc
stos
and
sub
push
fwait
jge
sbb
shlb
xlat
push
out
repz
mov
lods
inc
nop
stos
mov
push
adc
xor
orl
xor
and
or
aaa
mov
push
add
inc
ja
push
daa
loop
jl
divb
dec
push
in
ret
test
ja
add
in
jno
push
sbb
clc
xchg
xchg
jne
adc
dec
rolb
leave
imul
sub
xchg
test
push
pop
add
test
mov
scas
and
sub
test
and
jge
adc
cmc
insb
loopne
cmp
je
leave
xchg
mov
cld
movsl
cmp
dec
loop
xor
mov
out
addr16
outsl
fucomip
or
cwtl
cltd
iret
push
outsl
ret
add
jmp
sub
xor
es
ss
mov
popf
mov
cltd
movsl
dec
mov
ret
cld
dec
or
das
cmpsb
fwait
push
fcompl
imul
stc
rcll
pop
sbb
add
loope
push
push
test
test
and
fdivs
out
out
dec
add
adc
mov
mov
sub
adc
sub
insl
jae
mulb
in
movsl
push
cmp
aas
and
xorl
and
dec
xor
sbb
add
leave
shr
out
ss
mov
push
mov
dec
jno
test
insl
shl
or
mov
xor
lahf
add
lcall
inc
pusha
push
mov
jns
sahf
aas
mov
mov
out
test
cmc
add
add
push
xchg
in
adc
cli
and
cld
aad
fld
repnz
cli
pop
paddsb
sbb
mov
ret
cmpsb
mov
dec
test
fidivl
test
rcll
push
add
xchg
jle
sub
popf
push
push
lcall
push
fstpt
mov
scas
inc
adc
mov
aas
sbb
cwtl
xchg
lds
ret
fistpl
pop
test
pop
cmp
inc
jae
dec
or
push
fistpll
mov
orb
pushf
popf
push
push
lcall
adcl
cmp
iret
test
clc
mov
mov
mov
ja
jp
pop
sbb
sbb
or
lcall
enter
cmp
jne
ds
inc
mov
cmp
dec
add
rol
adc
or
lahf
push
aam
cwtl
inc
stos
rcll
lahf
pop
inc
or
xor
stos
mov
out
mov
mov
sti
shrl
lds
add
push
imul
fwait
std
cs
sti
mov
dec
adc
or
mov
inc
sub
cli
loope
xchg
testb
das
push
adc
into
pop
cmp
stos
dec
out
dec
jnp
push
sahf
push
aam
cmp
stos
filds
mov
mov
xchg
je
cmp
imul
and
jmp
and
adc
negb
push
xchg
mov
dec
outsl
jmp
fs
and
mov
xchg
ret
jmp
stc
add
aaa
inc
repnz
mov
lret
xor
rolb
out
add
adc
lcall
popf
xor
aad
movsb
loopne
add
push
andl
lods
pop
sub
imul
pop
dec
pop
addr16
mov
cli
scas
leave
mov
popf
add
stos
cmp
js
repz
cmp
cmp
jb
adc
push
mov
and
xchg
cmpsb
aas
sub
adc
inc
jo
loopne
or
mull
pushf
mov
aam
sbb
sahf
lret
hlt
inc
mov
out
pop
cmp
mov
shrl
adc
out
push
xor
adc
test
xor
ficoms
adc
mov
stos
pop
pop
xchg
cli
iret
jnp
xchg
pop
cmp
loope
mov
shrb
jmp
adc
test
pop
shrb
or
jmp
scas
jnp
arpl
cmp
jb
pop
xchg
or
xchg
jge
hlt
add
pop
pop
mov
inc
mov
in
and
mov
xchg
repz
sbb
mov
xlat
daa
ja
cmpb
mov
push
lds
dec
lea
cmp
mov
pop
or
rorb
push
jno
pop
in
xlat
fwait
lcall
leave
jl
fwait
xchg
mov
or
nop
xor
ror
out
add
scas
outsb
cmpsl
movsl
push
shl
push
cmpsb
call
push
jae
and
mov
pop
xor
xor
lcall
aad
loopne
push
add
mov
in
push
mov
pcmpgtb
out
jge
fucom
imul
push
push
mov
xchg
sub
mov
cwtl
dec
pop
hlt
insb
out
bound
sub
ret
mov
rcrl
popa
jno
test
insb
lret
jge
sub
xor
jae
and
mov
ror
fcmovbe
xchg
and
dec
sbb
sub
mov
fnsave
in
mov
ja
lods
mov
aas
movsb
lcall
inc
stos
out
mov
out
scas
cmp
sbb
es
fisubrl
js
push
inc
dec
mov
and
stos
xchg
jnp
dec
inc
les
inc
mov
jae
lock
lock
cmp
or
mov
xorb
xchg
daa
sub
loope
sbb
push
push
dec
sub
sub
insb
call
pop
xor
adc
in
mov
and
mov
jp
jb
push
xlat
xchg
fwait
xor
push
cmp
cmp
jae
mov
lds
test
dec
mov
and
inc
stos
cmp
mov
shrl
mov
push
movsl
sti
mov
rorl
pop
and
and
int
inc
sub
stos
jp
call
inc
cmpl
int
ss
les
push
sbb
notl
mov
test
pusha
std
fdivl
shrb
mov
push
mov
mov
xchg
cld
and
shlb
sub
push
push
clc
inc
sbb
or
dec
loope
or
lahf
xchg
flds
push
test
push
or
and
ss
imul
xchg
rorl
iret
or
dec
xchg
and
nop
pop
push
lcall
xor
add
popa
mov
jae
dec
push
xlat
pop
lret
xchg
rorb
inc
jg
cmpsl
or
push
imul
in
in
sti
push
into
push
pop
roll
xchg
aaa
imul
cmp
push
cmp
lods
mov
mov
jb
adc
cmp
outsl
xor
xlat
mov
jl
mov
mov
xchg
xchg
cmp
fiadds
cwtl
aam
lock
iret
lds
aas
mov
repnz
lahf
mov
rclb
and
jne
adc
cmp
popa
mov
mov
adc
lea
iret
pop
fcmovnb
or
adc
roll
sbb
clc
sub
mov
cmp
daa
inc
popa
imul
clc
sub
aad
loop
cltd
sti
notb
test
mov
test
lods
call
sub
call
test
jb
rcrl
and
jg
sub
sbb
ljmp
sahf
jge
stc
ret
addr16
movsb
outsb
pop
lcall
dec
mov
pop
and
sbb
nop
add
sahf
shlb
jo
aad
mov
jle
mov
cmpsl
sub
paddusw
mov
int3
je
jmp
pusha
ljmp
fstpt
mov
cmp
xor
mov
xchg
stos
xchg
lea
jp
test
aas
ds
out
stos
push
outsl
mov
test
das
lds
rorb
jl
inc
fwait
push
addl
xor
ljmp
sbb
orb
fmulp
ja
xlat
jbe
movsl
push
scas
cwtl
pop
in
cmp
popf
xchg
cltd
xlat
pcmpeqd
cmp
adc
pop
addl
sbb
ss
lock
loope
or
insl
sub
cmp
add
mov
mov
pop
nop
das
xchg
adc
mov
scas
push
pop
lea
lea
jo
cmp
xchg
lods
mov
push
setp
rclb
sbb
jl
inc
imul
mov
xchg
and
filds
cwtl
iret
and
pop
mov
add
jno
mov
and
xor
shrb
cmp
mov
or
xchg
mov
jle
or
pop
jo
fwait
or
clc
test
xchg
adcb
mov
jo
jecxz
xchg
sub
or
mov
int3
je
into
cmp
fstl
push
pusha
lds
inc
loopne
dec
sub
cmp
and
sbb
test
cmc
mov
bnd
sub
aaa
pusha
sbb
nop
inc
xlat
lret
pushf
pushf
daa
rolb
xor
and
push
sbb
adc
mov
pop
mov
or
push
addb
pop
cmp
dec
int
mov
dec
push
shrb
add
adc
and
call
mov
scas
cmpsl
jp
push
lea
test
out
or
scas
adc
xchg
out
pop
or
cltd
sub
mov
jb
sbb
inc
adc
xchg
outsb
or
lods
add
call
or
jmp
dec
lcall
push
lea
mov
cs
comiss
pushl
pop
add
das
outsb
add
mov
mov
mov
inc
loopne
sub
inc
add
das
lret
and
mov
push
sbb
fdivr
adc
inc
xor
add
rcrl
and
and
imul
adc
pop
cmpsb
cltd
cmp
cmp
cmc
sub
mov
dec
xchg
add
push
pop
cs
pop
fistpl
fildl
fisubrl
sub
cmp
shrl
xchg
cmpsb
cs
xchg
mov
arpl
mov
adc
pop
mov
sub
inc
cli
dec
inc
scas
dec
inc
ret
inc
pop
xchg
insb
jmp
and
or
or
out
stos
adc
mov
jmp
mov
pop
adc
xchg
dec
dec
lods
xchg
ds
push
sub
jb
mov
push
and
mov
pushf
sahf
xor
mov
pop
cld
xchg
test
push
add
in
adc
lods
push
pop
or
dec
cmp
sub
cmp
out
insl
fwait
cmp
mov
frstor
ss
dec
xchg
inc
mov
pop
int
arpl
fwait
aam
in
lods
mov
xor
hlt
lods
insb
xchg
jmp
mov
ds
mov
outsb
outsb
push
addr16
pop
inc
gs
nop
mov
xchg
mov
sti
jmp
add
jg
repz
add
push
and
insl
sub
aad
mov
xchg
cld
les
fistl
push
or
in
movsl
rcll
sub
pop
cmp
jg
cli
jp
mov
push
mov
dec
mov
push
loope
cs
icebp
or
cmp
lret
jg
push
or
sbb
pop
jmp
cltd
inc
sub
sub
cmp
std
and
dec
movsb
std
imull
scas
in
sub
out
data16
fisttps
mov
ljmp
inc
decb
or
sahf
inc
jo
lods
lods
inc
insb
mov
fcomps
push
sbb
push
pop
ficoml
inc
daa
dec
ljmp
movsb
sub
loopne
and
mov
adcl
mov
dec
mov
xor
cmp
out
dec
jecxz
push
hlt
or
push
orl
fstpt
test
rol
mov
push
xor
add
jb
inc
sti
sub
jecxz
movsb
jae
xchg
or
dec
sti
aam
dec
iret
ja
mov
dec
adc
cmc
es
clc
stos
jle
jae
push
mov
lcall
adc
sub
movsb
movb
xchg
sub
dec
mov
jg
int3
mov
xchg
test
repz
std
dec
pushf
push
sub
mov
pop
out
jecxz
psubsw
dec
mov
cmp
test
fcomps
sbb
cmpsl
decb
iret
mov
mov
adc
xor
jb
sub
fistps
mov
into
ljmp
imul
in
int3
fdivs
xor
inc
lret
out
pop
jae
popa
lret
arpl
adc
mov
testl
stc
int3
or
daa
out
xor
pop
ds
xchg
in
popa
mov
scas
cmp
sub
test
jmp
rcrl
sub
ds
je
push
imul
mov
jp
sbb
push
sbb
adc
dec
stc
orb
fsub
pusha
insb
mov
mov
pop
cwtl
lds
lcall
xor
pop
push
insb
fstl
int3
or
sub
lahf
into
int3
or
cmp
lds
sub
inc
cmp
inc
mov
adc
inc
loope
add
gs
lds
pop
in
fisttpll
lcall
ss
int3
lds
xchg
mov
inc
jp
inc
sti
in
and
test
mov
iret
les
jnp
cmpsl
jae
xchg
clc
jnp
or
pop
xor
je
pop
out
fs
addb
xor
arpl
dec
leave
fnstcw
or
pop
cmpsb
test
sub
sub
leave
aad
mov
pop
or
jecxz
xor
jae
adc
lods
cltd
or
scas
lods
adc
das
dec
adc
pop
sti
sub
pop
pop
fcmovnb
dec
popf
pop
scas
cmp
ret
test
paddsb
rclb
mov
xor
sbb
or
mov
pop
shr
les
add
fbld
shlb
jo
push
test
push
pop
popa
jp
loopne
scas
xor
mov
cld
popa
and
mov
outsb
dec
dec
jno
mov
xor
or
cli
add
mov
mov
fsubl
jne
je
or
adc
out
mov
int3
scas
cmpsl
xchg
loope
lds
out
fsubrs
mov
dec
inc
cmp
cmp
mov
test
outsl
popa
in
jbe
mov
cmp
dec
sub
pop
repz
adc
push
loope
hlt
dec
and
push
rcll
mov
jmp
mov
aad
lcall
push
pop
daa
jno
mov
movsl
aam
push
sub
gs
xchg
cmp
xor
and
pop
pushf
stos
mov
push
xchg
mov
sub
mov
add
xchg
inc
xchg
les
dec
push
popf
cmp
seta
xor
xchg
ja
mov
inc
fldln2
and
fcmovnu
dec
mov
cmp
mov
insb
lcall
cmp
roll
jno
sahf
adcl
lods
enter
sbbb
inc
pop
dec
in
js
jge
jbe
cvtps2pd
xor
add
outsb
sub
in
out
decl
sarb
and
xlat
test
loopne
add
adc
ja
int3
push
mov
fs
jle
pop
repnz
xchg
xchg
inc
xor
fnstcw
cltd
cmpsb
decl
add
pop
stos
mov
xchg
pop
push
int
mov
xor
rolb
xor
int3
push
mov
or
sbb
dec
fbstp
cmpsb
jmp
mov
rorl
rcrl
xlat
repz
xchg
or
je
outsl
push
add
jno
lahf
mov
push
sub
pop
push
nop
fdivl
cmp
cmp
mov
inc
push
ret
xor
out
aad
push
fldenv
je
mov
fstps
stos
dec
xchg
mov
or
sub
sub
pushf
mov
js
out
fistps
sbb
or
mov
popf
cmpl
xor
cmp
jg
cmp
sarb
movsl
jecxz
adc
adc
scas
sbb
fst
xchg
and
mov
mov
sar
mov
ds
sbb
mov
xchg
mov
cmp
xchg
in
mov
cmpsb
nop
push
leave
call
inc
roll
int
sub
sub
call
repz
fistps
stos
mov
lds
stos
arpl
stc
ret
orl
mov
sahf
inc
push
push
in
fisubrl
cmp
inc
jnp
lahf
fwait
repnz
inc
shll
cmp
pop
test
test
and
lret
in
hlt
cmp
icebp
mov
mov
test
addb
aaa
mov
scas
adc
adc
loopne
insb
roll
outsb
jne
js
dec
es
jp
cs
inc
mov
xchg
mov
push
cli
lods
fistps
jecxz
inc
mov
mov
pop
mov
les
sbb
jae
xlat
pushf
mov
aaa
shlb
xor
cmp
fistl
inc
shlb
lods
lds
inc
popa
mov
xor
inc
mov
push
mov
push
dec
std
sbb
push
fucomip
sbb
jo
push
pop
fldcw
push
lods
mov
bound
mov
dec
fucomip
jbe
mov
push
dec
jl
inc
jge
mov
fcomps
shr
fwait
jae
outsl
pop
out
repz
cmpb
nop
shrb
sbb
in
in
xor
adc
imul
cs
pop
fnstcw
and
les
and
xchg
xlat
mov
sub
cs
cld
and
adc
inc
and
stos
and
mov
add
mov
mov
mov
fscale
mov
cmp
lret
add
sub
dec
mov
mov
out
jns
add
or
and
loope
jecxz
fwait
inc
push
cmovnp
rol
je
divl
pop
push
jnp
push
test
cli
lahf
cmp
or
sbb
int3
mov
xor
arpl
mov
pusha
pop
fbstp
imul
insl
or
ds
and
loope
inc
hlt
imul
clc
lods
fld
dec
adc
pop
in
lret
push
rcl
daa
mov
sbb
incl
sub
mov
jne
push
push
jmp
std
lret
mov
cmp
pop
dec
or
mov
cmpb
cmp
sbb
cmp
lret
xor
ret
adc
mov
repnz
icebp
mov
inc
and
xchg
test
xor
xchg
xor
sar
dec
fbld
pop
clc
stc
pop
xor
dec
sub
mov
aad
aam
push
mov
test
pop
adc
mov
mov
daa
in
push
dec
pop
stc
xor
pop
sbb
mov
ja
cmp
cld
sbb
cli
in
cltd
mov
push
test
sbb
arpl
push
lcall
dec
dec
cmc
hlt
outsl
ljmp
stos
and
jns
popf
push
xchg
mov
jae
xor
aad
xorb
dec
mov
in
nop
bound
sub
push
cmp
stc
fsub
cmc
push
and
adc
add
mov
xchg
and
jo
push
test
fcompl
pop
loopne
mov
cs
das
mov
mov
fsubrs
sub
cld
out
in
ret
inc
mov
mov
xlat
mov
pushl
aas
sub
pop
inc
lock
nop
les
loope
push
scas
in
pusha
xchg
sarb
in
pop
xchg
pop
repnz
add
push
pop
cmp
lcall
pusha
jl
fnsave
or
or
stos
adc
sahf
lahf
imul
in
sbb
xor
jno
add
dec
or
mov
jl
pop
add
lcall
sti
cmp
xor
loopne
dec
jl
loope
inc
jl
mov
in
scas
loopne
cmpsb
clc
mov
xlat
inc
bound
sahf
xchg
add
iret
pop
or
sub
and
ljmp
xor
mov
fistps
cmp
int
sub
jae
push
xchg
push
mov
sbb
and
mov
fcmovnu
push
ret
mov
add
sbb
inc
cmc
or
push
mov
adcb
jae
and
fcmove
lock
pop
ss
and
outsb
movsb
mov
lock
loop
xchg
addr16
fsubs
cmpsl
sahf
xchg
sbb
adc
add
jmp
adcb
jns
jo
jb
add
fimuls
test
clc
clc
or
es
mov
mov
jp
cmp
adc
lock
sahf
daa
mov
pop
and
cmp
in
xchg
mov
sbbb
mov
dec
shll
mov
aad
shll
fwait
test
push
add
sbb
push
and
add
cmp
pushf
pushf
mov
subb
aam
xchg
ja
inc
cmpsl
lahf
mov
mov
std
push
cmpsl
xchg
bound
adc
xchg
cli
push
fstl
sbb
mov
insl
inc
adc
cmpb
xchg
push
inc
arpl
fldl
je
rcl
pop
xchg
lret
or
inc
push
dec
pop
pop
lods
adc
adc
sub
sbb
xor
pop
and
sub
jl
jnp
mov
dec
add
dec
cmp
sub
enter
xchg
outsb
jb
lock
dec
xor
add
push
xor
xchg
lret
add
repz
mov
inc
pushf
mov
or
sbb
and
inc
sub
ljmp
cmpsl
cs
jo
and
dec
rcrl
repz
mov
lock
push
les
fs
add
xchg
iret
std
inc
push
sub
sbb
lods
in
jne
ja
cmp
or
dec
or
adc
or
and
jb
fld
fwait
pop
push
test
dec
das
imul
mov
movsb
mov
jne
xchg
fdivl
cmp
ss
loopne
xor
xor
insl
sbb
das
mov
sub
push
mov
lahf
cmp
lret
mov
rcrl
sbb
scas
adc
cmc
push
mov
cmpsb
inc
idivb
cmp
dec
cmp
adc
lahf
cmp
cs
jnp
cmp
movsl
xor
fadd
jecxz
addr16
rolb
push
stos
adc
movsb
mov
out
xchg
mov
sbb
push
lcall
pop
jns
mov
sbb
gs
cmc
mov
int3
fimull
mov
mov
jmp
push
sub
pop
adc
dec
rorb
out
push
ljmp
sbb
scas
subl
rorb
das
lods
lahf
adc
xor
xchg
fwait
adc
loope
pop
mov
jo
fdivrs
inc
in
loop
bound
fadd
clc
insl
add
test
cmpsl
mov
xrelease
or
adc
add
fiaddl
sbb
mov
lcall
dec
pop
dec
mov
jge
sti
mov
mov
pushf
cmovae
sbb
lahf
in
mov
add
sub
outsb
adc
scas
pop
sbb
fisubs
sbb
jno
in
or
ja
mov
push
jle
or
gs
adc
mov
loop
iret
jno
xchg
pop
push
sub
jbe
cmp
cmp
pushf
push
xchg
mov
jp
jnp
push
ja
incl
test
jl
push
mov
mov
cld
sbb
repnz
loopne
das
out
pop
push
inc
inc
in
aaa
mov
xor
ret
mov
jb
imul
in
pushf
mov
sbb
daa
pop
mov
andl
arpl
xchg
cmpsl
push
sub
xchg
cmp
es
loop
and
test
xlat
mov
lcall
pop
adc
jp
clc
pop
push
xchg
pop
mov
movl
adc
or
andl
lret
mov
pop
int3
imul
lcall
inc
or
add
inc
bound
int3
repz
sub
ret
mov
enter
clc
les
cmp
test
jl
xchg
shlb
cmpsb
imul
push
pop
leave
shrb
popf
rorl
and
jge
fwait
cltd
lret
fdecstp
pop
or
pusha
push
icebp
or
aaa
lret
dec
jecxz
ffree
inc
int
add
jmp
add
xchg
sbb
pusha
je
fiaddl
cmp
and
in
rorl
or
push
push
rclb
or
test
dec
inc
lea
mov
fwait
mov
cwtl
push
inc
xlat
dec
and
push
cmpl
loopne
xor
out
ret
out
jae
scas
cmp
das
cltd
jbe
roll
arpl
push
adcl
jo
loope
leave
mov
cld
popa
fists
bound
mov
repz
mov
jmp
loopne
lahf
lret
inc
cmp
fcomps
xchg
mov
xlat
pop
je
outsl
mov
pop
test
popf
sub
lcall
add
rcrl
inc
ja
lds
fdivrp
mov
jmp
mov
or
adc
cli
jp
stc
xor
loop
das
out
popa
cmp
cltd
in
sub
rolb
xchg
movsl
in
lock
popf
push
fistpl
rcrl
xchg
push
mov
jmp
push
xor
push
or
pop
add
imul
dec
shr
insb
dec
dec
mov
cmp
insb
cltd
inc
xor
icebp
cmp
stc
jb
dec
pop
inc
push
xchg
xor
enter
loop
fldl
push
cmp
cmp
arpl
insl
scas
js
popa
addl
jge
test
mov
mov
std
sub
dec
adc
adc
jmp
cmc
nop
fidivrs
xor
sub
loop
xor
sub
mov
gs
cld
std
fcoms
pop
fisubl
sbb
push
fwait
xchg
in
pop
adc
xor
adc
bound
hlt
mov
ds
clc
xchg
pop
pusha
idivl
jp
dec
std
fsubrl
xor
icebp
sub
shl
xor
fdivrl
mov
and
jae
aad
sarl
lock
inc
pop
orb
mov
push
test
cld
push
mov
aas
jmp
jns
aaa
mov
pop
fdivrs
mov
lods
stos
push
sbb
pop
mov
sti
repnz
cli
stos
aad
adc
fiaddl
push
das
sbb
sub
lods
frstor
addb
iret
and
dec
mov
pusha
mov
mov
jge
test
loop
adc
mov
cwtl
subl
mov
sub
mov
add
jmp
mov
mov
xchg
ret
jbe
adc
sar
and
fcompl
aad
jl
roll
cs
cwtl
mov
mov
cmp
fnstcw
lret
inc
sahf
das
call
xor
pop
or
ja
sahf
fistl
outsb
fadds
jns
aas
cmpsl
dec
push
add
testl
data16
cmp
xchg
jg
push
and
mov
sbb
int
xor
xlat
mov
hlt
andb
sub
push
lods
ja
pop
mov
cmc
repz
gs
xor
mov
lods
xor
xor
push
outsl
movsl
dec
adc
stos
sbb
pop
add
xor
mov
in
icebp
dec
cli
xor
inc
stos
xorb
adc
jne
test
pop
das
repz
lcall
sub
mov
inc
mov
inc
pop
cmp
jne
fiaddl
aad
int
rorb
and
add
data16
les
sbb
mov
pop
nop
cs
pop
or
dec
mov
sub
or
andb
sbb
shl
push
int
out
sub
mov
imul
add
add
xchg
test
repz
test
das
jle
push
jns
call
ffree
lret
inc
bound
adc
mov
stos
es
mov
out
subl
xchg
sbb
out
call
dec
and
aas
xor
cmpsb
push
jp
das
mov
or
imul
pop
xor
adc
loop
out
sbb
dec
and
mov
pop
jno
out
movsl
aas
addr16
shl
ret
and
jnp
mov
dec
iret
push
jmp
js
and
sbb
shl
dec
gs
test
sub
ja
stos
dec
inc
adc
int
pushf
sub
loop
cmc
xchg
pushf
hlt
mov
jb
mov
push
ret
xor
ds
lret
and
orl
sub
pop
ds
or
mov
lds
cwtl
jle
je
pushf
mov
loopne
cmp
jbe
xor
jae
scas
cmp
cmp
outsl
fisttpll
dec
push
mov
or
inc
sub
fwait
mov
scas
lcall
xchg
clc
aas
xchg
sub
loopne
sbb
pop
jecxz
in
push
ja
sbb
inc
fprem1
fwait
inc
scas
ret
pop
or
aaa
cmp
bound
enter
push
test
xchg
nop
dec
incb
outsb
xlat
xchg
mov
call
movsl
xchg
lds
jl
shrb
mov
shlb
mov
imul
add
xchg
mov
prefetch
incl
fiadds
xchg
xchg
rcrl
loop
push
dec
or
adc
data16
xor
push
stos
push
jle
adc
scas
jbe
jl
in
enter
add
xchg
daa
fs
adc
xor
mov
xor
into
sub
push
jne
in
mov
daa
mov
clc
lret
notb
xchg
jp
cwtl
jo
jno
pop
cmpsb
cmpsl
loop
inc
cmp
and
mov
lret
data16
push
dec
repz
lea
pop
mov
mov
or
jp
testl
stos
jae
sub
pop
xchg
cmp
add
imul
pop
ss
inc
jg
push
xchg
sahf
pop
lods
fbld
fldt
pop
jb
call
dec
jnp
aad
add
cmp
fildl
test
shl
out
adc
js
ja
pusha
jge
mov
add
xchg
decb
push
stc
pop
push
jmp
jp
xor
push
cmp
cmp
mov
cli
test
pop
push
pop
outsb
repz
and
pushf
fistl
lods
jo
or
fsubrs
xchg
pop
sbbb
push
xchg
add
test
mov
push
inc
adc
jns
push
aaa
and
shlb
and
jp
add
std
xchg
inc
push
mov
sub
xchg
fistl
or
std
lcall
mov
and
xorb
mov
add
int3
out
out
pusha
pop
sbb
popa
xor
call
inc
xchg
adc
sbb
cmp
testl
dec
sub
lahf
hlt
and
jg
sarb
cmpsb
sub
test
ljmp
sbb
call
xlat
stc
cltd
mov
mov
add
mov
outsl
or
aad
add
xchg
icebp
add
hlt
mov
cmp
add
jns
push
push
popf
mov
adc
out
out
mov
mov
jns
and
cmc
xor
call
add
sbb
sbb
nop
adcl
out
jbe
adcb
fs
sbb
and
mov
divl
push
mov
loopne
lea
sub
insb
iret
jp
xor
sti
push
popf
add
jp
sub
loopne
in
mov
roll
mov
mov
cli
pop
pop
dec
sahf
das
dec
or
es
mov
or
daa
dec
and
popa
inc
sub
das
mov
in
inc
mov
jmp
or
xchg
scas
rorl
inc
xchg
jae
lcall
out
xchg
ret
fcomps
test
mov
das
dec
push
mov
dec
xlat
push
xchg
sub
jmp
cmp
inc
cmc
sahf
popf
mov
lock
xorl
test
sti
cld
rorl
sbb
es
jae
movsb
shrl
or
push
mov
and
fstpt
ss
dec
pop
mov
push
mov
sub
sbb
xlat
add
add
cmp
test
jl
stc
test
psrlq
sbb
ret
mov
out
fs
mov
push
mov
fsub
push
jmp
cld
loop
mov
push
add
pusha
ret
lret
pop
pop
push
and
cmc
lahf
int
adc
pop
cwtl
mov
and
push
or
es
fwait
xchg
xchg
or
icebp
xor
sti
push
negl
dec
mov
mov
pop
mov
fstps
xor
imul
xlat
mov
cmp
dec
cmp
mov
bnd
xor
repz
lcall
cltd
dec
imul
adc
add
imul
sub
jge
xlat
pop
or
roll
subl
and
test
test
mov
stc
inc
lcall
cmpsb
dec
sahf
hlt
mov
fcmovb
pop
jl
lahf
in
insb
dec
data16
adc
mov
cmpsl
fmul
sarb
mov
insl
lahf
testl
xchg
mov
jle
push
stos
and
add
pusha
xchg
cmp
push
out
adc
lds
sbb
fmull
popf
je
cltd
fildll
adc
and
push
push
and
xchg
cmp
stos
xchg
lds
test
sub
pop
and
cmp
in
jecxz
xchg
pop
xchg
mov
clc
adc
lret
mov
add
mov
push
xchg
add
xchg
and
cmpsl
and
xor
jp
ja
loope
mov
orb
fnstenv
mov
enter
insl
xor
lds
inc
cli
dec
jl
mov
mov
repnz
int3
mov
or
inc
pmullw
add
pop
xchg
xchg
add
pop
add
loopne
sub
push
xor
dec
cmc
lea
xor
mov
jmp
jle
cmp
mov
cmp
out
fsubrl
lods
fwait
icebp
scas
and
mov
sarb
jo
shrb
dec
clc
xlat
push
dec
inc
dec
adc
mov
cltd
adc
mov
mov
loopne
push
jbe
fists
not
dec
imul
fdivl
das
enter
je
jne
movsb
scas
sub
aaa
pop
mov
add
xchg
lahf
inc
pusha
scas
bound
pop
sbb
xchg
pusha
outsl
mov
jno
adc
in
mov
push
adc
dec
movsb
lcall
std
outsb
in
add
in
or
or
shrb
aas
mov
jge
cmp
fimuls
int3
and
das
xlat
jbe
mov
xlat
xlat
roll
mov
testl
mov
call
fsubs
fbstp
pop
lods
xchg
inc
mov
jb
les
xor
sub
cltd
dec
jno
mov
xor
cmp
das
xchg
mov
aas
mov
in
or
pop
jge
andl
aas
scas
jae
pop
adc
test
add
sbb
adc
cmc
cmpsb
lea
mov
movsb
mov
lret
ja
mov
int
mov
lock
rcll
xchg
lcall
jge
inc
repz
call
lds
xor
negl
inc
pop
pop
lods
into
jns
adc
not
stos
stos
adc
adc
in
push
ret
xchg
sbb
sub
inc
aas
lock
xor
push
inc
or
xchg
notb
movsl
or
pop
jle
jns
sub
fisttpll
fmuls
rol
jecxz
push
mul
repnz
adc
movsl
cmpsl
fwait
gs
add
adc
cwtl
je
test
test
xchg
cmc
lret
inc
xor
push
iret
dec
stos
je
in
or
loop
aaa
cmp
movsb
je
inc
popf
fimuls
aaa
shlb
mov
sub
rol
sti
fwait
out
add
sbb
stos
xchg
dec
mov
ss
xor
sub
lret
imul
test
xor
aaa
movsl
inc
mov
push
cmp
push
xor
push
pusha
sbb
sahf
out
sub
addr16
jecxz
add
subl
add
or
jb
test
rorb
cmpsb
mov
lcall
cmp
mov
addr16
push
cwtl
cmpsb
fstl
adc
mov
pop
daa
or
call
xchg
lret
outsl
pop
jg
popa
out
push
ja
mov
leave
insl
sub
mov
out
jno
or
movsl
repz
pop
popa
adc
rclb
and
mov
cmpsb
mov
mov
dec
xchg
xor
int3
mov
pop
andl
repz
dec
adc
sbb
mov
and
je
mov
mov
cmc
push
shrd
mov
cmp
out
and
pop
and
movsb
mov
je
rcrl
mov
dec
in
out
and
cmp
shr
in
pop
leave
and
repnz
dec
adc
push
xchg
lcall
cmp
xchg
xor
out
adc
push
fwait
cld
loopne
fistpl
xchg
lret
scas
leave
inc
xchg
pop
cmc
ja
orb
in
pop
imul
jp
ds
inc
push
xchg
dec
adc
shlb
sbbl
pop
mov
or
test
xor
adc
into
mov
xorl
les
insl
sub
and
pushf
jns
les
lret
loop
call
dec
out
imul
int
mov
jg
lods
loope
lcall
rorb
js
push
mov
fbld
mov
dec
imul
in
insl
add
and
in
mov
dec
outsb
mov
test
pop
add
scas
or
orl
pop
or
mov
dec
dec
cmp
and
outsl
jmp
dec
mov
fists
sbb
push
and
pushf
cli
rclb
mov
mov
mov
test
je
and
mov
adc
fwait
movsb
add
ret
or
add
or
jne
and
orb
pop
shl
ja
bound
outsl
ss
test
cmp
mov
test
add
mov
stos
cmpsl
popf
pop
testl
shlb
jmp
insl
gs
in
and
sub
addr16
and
dec
pop
mov
out
jmp
stos
mov
out
dec
sub
mov
stc
lds
sub
cltd
adc
cli
pusha
add
or
rcl
cmp
insb
pop
push
sbb
mov
lods
dec
std
mov
in
mov
push
sub
cmc
test
mov
mov
mov
and
stos
dec
mov
sbb
add
xor
mov
pop
push
lods
enter
mov
call
repz
adc
roll
mov
test
mov
rorl
es
mov
add
or
sbb
or
cltd
mov
cmpsb
jmp
adc
addr16
push
enter
testb
popw
mov
add
mov
xor
sub
or
xor
movsb
fistpll
popf
in
inc
test
scas
adc
idivb
insb
lcall
in
in
neg
fisubs
out
mov
push
sub
xor
cmp
lcall
sub
mov
sbb
xchg
mov
fsin
jnp
mov
lods
mov
cmp
test
outsl
aaa
and
cmp
jno
pop
pop
inc
imul
js
mov
push
inc
mov
out
mov
and
cld
mov
aas
arpl
xor
stos
dec
pop
fldenv
and
paddd
js
adc
in
loop
loop
xor
add
jne
add
xlat
push
jae
fadds
insb
jae
shll
dec
push
xor
lea
arpl
dec
mov
imul
sbbb
std
ja
mov
jne
dec
inc
std
push
adc
ret
setge
test
les
or
sbb
arpl
enter
sbb
arpl
sbb
popa
pop
mov
pop
push
out
cwtl
dec
inc
xor
shl
adc
pop
inc
enter
sbb
adc
sbb
xchg
cmp
mov
pop
shlb
cs
sub
ljmp
inc
mov
lahf
es
push
call
in
xchg
jp
push
pusha
adc
push
enter
in
adc
clc
sbb
sub
lds
xchg
add
inc
insb
mov
jo
push
mov
mov
dec
aam
mov
jge
dec
push
cmp
lds
mov
shrl
lds
jge
sub
dec
cmp
lods
mov
mov
mov
lds
mov
mov
sub
int3
outsb
or
mov
adc
dec
jb
inc
mov
push
push
mov
mov
loope
jl
test
clc
and
stos
cs
jge
adc
cli
inc
xlat
clc
jae
adc
mov
shl
cmpsb
out
fwait
les
and
add
dec
sbb
or
movsb
shrl
iret
cmp
scas
pop
mov
nop
xlat
mov
cmp
push
enter
es
xor
sbb
sub
loop
icebp
test
loope
sub
inc
sub
inc
sbb
lods
sti
jmp
push
or
scas
fisttps
int3
jl
xor
dec
in
bound
jecxz
push
shl
xor
into
repnz
sub
aas
lret
cltd
mov
adc
mov
imul
dec
mov
inc
shr
lds
addr16
jo
xchg
dec
dec
in
cmp
sbb
test
inc
cmovnp
lods
sub
outsl
lds
imul
mov
xor
fcomp
mov
mov
pop
sub
fcomp
out
rorl
xor
imul
enter
mov
mov
ret
sub
xchg
shll
rcrl
into
sbb
cltd
subl
adc
or
ljmp
in
mov
sbb
imul
mov
imul
lea
inc
pop
arpl
push
and
xor
sbb
mov
sbb
ds
xchg
cmp
hlt
jo
aaa
sub
jae
jbe
mov
test
xchg
dec
xchg
sub
mov
ds
mov
jecxz
fwait
cld
pop
mov
jne
mov
jmp
insl
das
outsl
or
xchg
in
pop
dec
in
in
jp
fisubl
and
jge
into
pushf
fildl
dec
add
inc
mov
mov
shrl
test
mov
mov
mov
lahf
mov
and
in
mov
mov
push
inc
pop
stos
imul
xchg
clc
in
mov
mov
shl
ficoml
daa
adc
or
sub
and
in
dec
out
and
jmp
enter
xor
inc
sti
mov
add
cli
in
vpshaw
inc
sub
sbbl
pop
push
scas
and
sub
sbb
add
fnstsw
cld
stos
push
movsb
out
dec
sub
imul
sbb
or
inc
dec
fwait
pop
inc
inc
ds
pushf
and
and
xchg
inc
push
push
iret
xlat
je
mov
push
loopne
mov
xlat
sbb
mov
jae
data16
and
fwait
mov
add
mov
repnz
lahf
movsl
push
pop
push
dec
je
dec
sub
shr
pop
dec
jno
or
lods
data16
ja
test
arpl
mov
repnz
in
sbb
mov
ficomps
stos
neg
lds
lret
dec
mov
adc
hlt
loop
nop
cwtl
mov
or
dec
and
rolb
es
ja
adcl
int
cli
push
scas
and
push
aad
jbe
cwtl
gs
pop
lods
incl
int
xchg
insl
stos
iret
mov
test
stos
gs
addb
loope
cltd
ret
hlt
and
mov
jb
pusha
and
push
lcall
sub
xchg
neg
shlb
adc
aas
repnz
push
and
sbb
lahf
jne
shrb
jmp
adc
mov
lock
cs
pushf
xchg
in
es
push
mov
stos
or
jns,pn
adc
mov
jae
fists
fistps
inc
or
inc
dec
dec
in
ret
cmpsl
and
dec
or
inc
into
cmc
jns
cs
addr16
mov
aaa
lods
icebp
enter
stos
arpl
sbb
xor
imul
in
notl
pushf
subb
xor
add
push
or
xchg
or
into
das
mov
jb
inc
imul
out
push
xchg
fwait
jnp
das
xchg
jnp
daa
inc
and
cmp
test
sbb
out
sti
cmp
in
mov
mov
mov
xorl
pop
adcb
ss
xchg
stc
mov
nop
lahf
movsb
hlt
out
sbb
fisubl
xlat
adc
cmp
jle
mov
inc
add
xor
cmp
mov
adc
or
add
jae
dec
sbb
cmp
push
test
xchg
mov
test
ljmp
filds
xor
mov
pushf
out
and
notb
inc
jmp
pop
mov
out
shll
into
fmull
outsb
nop
or
push
cld
aas
sar
mov
cmpsb
xor
cmp
cmp
sub
mov
xchg
push
jmp
out
popa
mov
xchg
test
aas
push
push
outsb
xchg
sbbb
int
mov
xor
adc
and
push
popf
mov
outsl
dec
pusha
xor
xchg
pop
cmp
pop
out
mov
lods
ljmp
test
loope
jmp
push
ja
movsl
adc
negl
cmp
divb
shrl
push
mov
dec
mov
sub
mov
inc
push
add
mov
lret
lcall
pop
in
sahf
lret
push
or
inc
sti
mov
shll
xchg
xor
popf
pop
adcb
sbb
cmp
mov
jb
push
mov
lret
dec
lret
jecxz
dec
mov
pop
nop
addl
inc
xchg
out
jae
inc
outsl
test
shlb
stos
sub
jns
repz
in
lock
push
add
mov
and
jp
jg
mull
gs
test
cmpl
hlt
movsb
or
loop
jnp
outsb
pop
and
cmpb
jg
js
inc
shll
in
int3
and
mov
inc
ljmp
outsb
mov
xor
jmp
fpatan
xchg
dec
pop
or
rclb
test
cwtl
inc
in
orb
dec
or
wbinvd
and
lret
add
cmp
sub
xchg
movsl
movsb
jecxz
adc
mov
enter
inc
pop
fidivl
dec
push
fmul
xor
or
lea
jle
mov
in
test
repnz
or
add
js
out
das
cmpsb
ljmp
sbb
mov
shlb
jo
sbb
push
add
mov
popf
ja
movsl
pop
in
andb
add
jge
sahf
xchg
sbb
and
dec
fmull
es
add
or
ds
and
sbb
mov
clc
inc
vmovups
sbb
jmp
jbe
mov
push
mov
sti
lock
std
aad
ss
ror
mov
in
jg
xchg
cmp
stos
dec
jno
mov
push
mov
movsl
loope
adc
xchg
test
mov
aas
int3
adc
cmp
push
push
out
je
fisubrs
pop
inc
pop
xchg
fstpt
mov
jbe
addr16
fisubrs
mov
mov
pop
lods
lods
sti
push
jmp
nop
jmp
sarl
fidivs
or
jns
jne
imul
jge
mov
mov
daa
push
cld
cmpsl
xor
ss
loop
xchg
sbb
ljmp
ret
sub
es
rolb
popl
dec
lock
fistpl
pop
iret
ja
push
mov
aaa
loopne
lret
stos
mov
jno
aad
mov
inc
pop
cltd
or
lds
inc
lock
mov
daa
push
sub
mov
cmpsb
movl
mov
mov
insb
into
or
sahf
sub
in
sub
adcl
push
add
fstps
lahf
pop
adc
mov
push
shl
rorb
xchg
cmpsl
sbb
pop
jne
cmp
cmp
inc
mov
mov
js
ljmp
adc
mov
push
pop
outsl
mov
mov
jg
sbbb
lods
mov
stos
dec
int3
cwtl
mov
jecxz
mov
fs
shrl
pop
fnstcw
add
rolb
lods
lcall
mov
aam
stc
daa
xor
repz
mov
insl
lock
mov
push
inc
arpl
cmpb
fcmovnbe
sbb
pop
in
pop
add
sbb
mov
inc
or
mov
adc
aad
imul
inc
mov
adc
aam
lods
leave
sub
mov
inc
xlat
jge
imul
movl
jbe
repnz
pop
mov
pop
dec
rolb
jo
rclb
stos
out
fldl
push
movsb
cmp
les
hlt
je
mov
cmp
push
mov
cmp
pusha
xchg
enter
mov
pop
scas
in
add
sub
and
fs
pop
loop
popf
pop
imul
jge
or
push
stos
pop
xor
mov
popf
push
jl
popa
fmuls
mov
out
pop
dec
hlt
add
data16
shlb
mov
and
mov
xchg
cmp
push
repz
lcall
mov
repz
dec
das
sbb
mov
push
xor
dec
xchg
outsl
std
std
sub
out
pop
pop
mov
and
in
fistpll
or
mov
outsl
cmpsl
or
inc
sub
jg
add
ret
ja
ret
cltd
jnp
jno
mov
sub
mov
arpl
push
loopne
mov
jnp
ss
and
in
inc
iret
mov
or
fs
loop
mov
mov
jp
test
or
xchg
push
mov
inc
or
lret
sti
adc
mov
or
cwtl
lds
sbb
jp
push
ljmp
jbe
and
lcall
mov
adc
scas
dec
xor
insb
daa
neg
sbb
xor
shrb
cmc
sbb
int
repz
out
loop
iret
call
vpsrlw
cli
das
je
inc
dec
and
aam
cmp
das
filds
push
mov
cmp
xchg
mov
push
mov
jb
xor
arpl
jns
cmp
sub
xor
xchg
cmp
cltd
je
stos
loop
lcall
fs
pushf
sarb
and
mov
inc
jo
push
mov
xlat
pop
mov
out
or
nop
aas
call
add
sbb
push
fs
hlt
int3
dec
lahf
loop
push
rcl
mov
xchg
adc
mov
scas
pop
mov
insb
stc
ret
jg
cmp
cmp
arpl
push
dec
faddl
inc
mov
movsl
add
mov
pusha
mov
hlt
add
shr
loop
xlat
dec
inc
movsb
hlt
pop
fisubrl
orl
xor
sarl
jl
outsl
lock
in
xchg
cmp
push
jmp
js
outsb
or
cmpsl
cs
xchg
or
jae
jecxz
mov
js
in
scas
cmp
in
in
sbb
mov
gs
fcompl
adc
mov
les
fdivr
dec
stos
out
xchg
lea
xchg
dec
add
mov
das
imul
dec
lock
in
lock
jae
xor
loope
push
dec
inc
in
outsb
iret
shlb
loopne
xor
jb
call
fcoms
add
adc
jbe
imul
pop
and
mov
push
pop
cs
or
cmp
je
xor
cmpsl
xor
popa
dec
push
icebp
int3
inc
sarb
xchg
pop
andb
outsl
sbb
test
fucomp
mov
das
push
ljmp
cmp
pop
sbb
addb
pop
cmp
cs
jb
dec
jecxz
push
imul
hlt
mov
icebp
imul
mov
in
cmp
sub
lods
gs
out
xlat
insb
dec
daa
and
adc
nop
das
popa
mov
hlt
push
aas
pop
imul
lret
out
cli
xor
or
ja
fdiv
sub
repnz
and
inc
bound
pop
jl
jle
mov
jg
push
mov
pop
in
push
es
in
clc
out
dec
sbb
mov
mov
xor
dec
inc
push
jmp
and
adc
test
aas
rep
mov
add
icebp
pop
aad
dec
ret
jne
mov
xor
xchg
and
mov
imul
mov
in
jno
push
xchg
mov
mov
jo
xchg
mov
pop
inc
flds
adc
xor
lods
inc
les
sub
int
loop
and
loop
xor
loop
pop
gs
stc
push
pop
or
dec
add
imul
loop
test
mov
push
push
std
or
mov
js
xor
fisttpll
or
and
sub
jle
inc
es
cmp
popa
mov
pop
lds
xchg
mov
sub
adc
dec
push
xchg
stos
in
xchg
pop
push
sub
and
pop
outsl
imul
shrl
mov
pushf
or
add
adcl
dec
dec
xor
add
loope
jge
insb
sub
dec
dec
push
inc
xchg
adc
xor
gs
div
or
mov
mov
push
add
push
addr16
mov
enter
pop
push
push
sub
pop
jnp
aad
xor
push
mov
or
lcall
push
mov
daa
xchg
sbb
sbb
push
fsts
jge
mov
mov
les
insb
inc
sub
jg
xchg
sub
fmull
mov
je
inc
nop
je
or
popa
inc
aad
call
push
shlb
pop
jmp
or
daa
aam
jp
ja
jno
adc
insb
ljmp
fwait
add
and
stos
jbe
xor
mov
and
xchg
pop
cltd
push
xchg
test
xchg
xchg
xchg
jo
xor
xchg
int3
rorl
sub
adc
add
inc
cmp
js
pushf
mov
inc
in
lds
sbb
loopne
add
lret
or
and
in
xchg
enter
xchg
es
cmp
ret
dec
xorb
mov
sbb
fcmovnbe
cmp
add
dec
push
xchg
pop
js
loop
sahf
ret
xchg
or
lods
or
and
sbb
cmp
aam
ror
or
loopne
xchg
inc
decb
aaa
cmp
inc
and
mov
adc
add
or
jns
push
stos
test
cmc
mov
aas
sub
testl
mov
cld
insb
jae
scas
jbe
sub
out
rcrl
sub
in
fsubrs
insb
movsb
test
adc
lcall
int
dec
mov
arpl
nop
imul
notb
repnz
dec
pusha
lret
pop
and
fisttps
popl
loopne
jb
lcall
aam
xchg
ja
popf
add
fsubrs
mov
mov
pminub
out
sbb
mov
xchg
subb
pop
adc
stos
les
jg
inc
push
xchg
mov
sub
inc
xchg
movsb
mov
add
jle
enter
mov
mov
mov
jns
movsl
push
sahf
mov
subl
sub
popa
icebp
aad
inc
xchg
aad
sub
dec
and
lock
out
sub
dec
and
jo
std
xlat
int
gs
out
inc
or
in
cltd
mov
call
popa
cltd
xor
pop
xchg
test
mov
mov
inc
lret
xlat
repnz
mov
inc
imul
call
pop
notb
push
push
popl
lea
push
jno
popa
mov
add
rorb
push
mov
mov
or
cmp
xor
pop
or
or
sar
adc
shlb
adc
xor
jb
outsl
push
mov
ljmp
sub
int3
into
sbb
mov
bound
jecxz
xchg
inc
notb
imul
ss
aaa
mov
test
aaa
je
jmp
dec
dec
xchg
pushf
cli
cmpl
jmp
xchg
fdivrs
or
xor
rcr
and
fdivp
test
dec
or
lret
subl
sbb
push
pop
in
fcomps
mov
push
jmp
outsb
test
mov
cmp
icebp
xchg
movsl
inc
xchg
jns
jbe
dec
or
jg
fidivrl
divb
aad
les
les
push
mov
or
fists
adc
stc
int
dec
xor
sub
sti
adc
adc
mov
aaa
xchg
lret
div
popa
ss
sbb
sub
ja
inc
push
sub
out
add
jno
inc
lahf
cwtl
mov
pop
push
movaps
fldl
add
jle
mov
cmp
pusha
jp
pop
push
xor
push
nop
mov
add
inc
imul
cmp
jecxz
fisttps
jge
test
push
mov
dec
mov
push
cs
add
cmp
mov
in
mov
cli
dec
sub
inc
test
add
clc
sub
imul
in
int
in
cmp
dec
test
and
in
jne
sub
mov
es
jbe
jne
out
int3
xlat
popa
push
cmpsl
stos
lret
dec
xor
inc
cmpb
popa
sbb
cwtl
adc
bound
jg
sub
call
ds
pop
mov
sub
loopne
xchg
xlat
outsl
sub
f2xm1
mov
jne
xchg
loope
xchg
cmp
pop
pop
fwait
and
jle
lcall
call
or
push
xor
push
adc
inc
clc
cmpsb
cmp
push
lret
cmpb
sbb
adc
in
ljmp
jmp
in
or
rcrb
idiv
push
lret
jecxz
cmp
add
pop
cwtl
mov
lcall
mov
jl
inc
aad
in
sbb
lods
push
enter
fmull
inc
jns
sbb
call
ds
inc
pop
cmp
into
mov
pop
pop
push
dec
xor
iret
or
inc
cmpsb
adc
arpl
pop
popa
iret
loop
mov
push
jno
mov
pop
pop
mov
or
or
xorl
inc
int
xor
mov
ss
mov
test
test
pop
dec
loopne
pop
in
sar
aas
aas
cmpsb
inc
stos
add
mov
sub
ljmp
add
pop
mov
sbb
jmp
dec
adc
mov
xor
lock
jmp
cltd
cs
push
aas
cmp
and
push
jb
aam
mov
aaa
fwait
sbb
mov
das
pop
sarb
add
clc
stos
lds
push
lahf
insl
sub
in
mov
test
leave
cltd
push
add
ds
inc
or
cmp
pop
mov
lds
fyl2x
pop
push
daa
in
jbe
jmp
mov
ljmp
push
std
jnp
out
outsb
iret
in
lret
xchg
pop
cwtl
test
repz
xor
repz
inc
movsl
enter
jmp
movsl
xchg
inc
mov
mov
or
or
std
and
xor
and
xchg
or
mov
mov
and
sbb
js
out
pop
ficoms
jl
inc
dec
gs
xlat
sti
fldcw
mov
ret
imul
mov
adc
sbb
mov
notb
cli
add
stos
dec
inc
out
mov
and
xor
xchg
fwait
sub
movsb
lock
jne
div
or
dec
addb
dec
dec
clc
les
xchg
repnz
or
adc
xchg
addl
and
jge
sarl
push
cmpsl
popf
push
adc
lcall
inc
and
jg
mov
fistpll
adc
cmp
dec
fiaddl
mov
lods
mov
push
push
aad
jmp
out
lds
xor
enter
xor
adc
sti
int3
pusha
pop
gs
push
push
rcl
dec
mov
rcrl
subl
dec
mov
fisttpll
cmpsb
cltd
pop
xchg
jbe
mov
jge
ret
ret
jbe
mov
js
fcoms
sbb
lock
ja
xlat
arpl
addl
data16
sbb
cmc
les
cmc
fs
out
push
sahf
cwtl
sub
mov
cwtl
xchg
mov
jno
and
sti
mov
adcb
xorb
jmp
push
fxch
sub
or
mov
jnp
xchg
mov
dec
xchg
mov
ds
mov
xlat
in
imul
pushl
out
cmp
inc
sub
cmp
cwtl
js
push
sub
out
jbe
dec
cmpb
and
popa
push
movsl
mov
lcall
xchg
out
repnz
add
xchg
mov
shrl
rcll
sbb
push
jmp
and
mov
aas
inc
and
inc
dec
sub
mov
arpl
xchg
lea
cmp
cmpsl
fwait
adc
sbb
adc
popa
mov
cli
stos
add
out
sarb
pop
into
sub
aaa
jmp
imul
xchg
pop
xor
lods
xor
iret
ja
mov
daa
push
fdivrl
dec
sbb
and
inc
fwait
push
sub
jb
sbb
pop
sbb
dec
fidivrs
xchg
movsl
cmp
mov
mov
mov
and
ss
arpl
adc
cli
xchg
int
cmp
jl
popa
or
mov
pop
shl
mov
jbe
pop
fsubr
or
dec
add
dec
fbld
mov
inc
fcoml
cld
push
aas
repnz
inc
orl
hlt
out
jle
data16
lret
in
cmp
out
adc
pop
test
in
lods
es
ss
lret
inc
adc
stos
test
cmp
push
mov
push
mov
out
fstl
mov
cltd
and
cmpsb
addr16
into
cmp
xchg
lods
cmp
or
pop
adc
xchg
das
dec
icebp
xchg
adc
in
daa
addr16
xor
sti
push
xor
jbe
insl
pushf
mov
mov
or
test
scas
mov
iret
je
into
inc
push
push
stc
or
or
pop
jns
daa
and
jle
pop
xorps
mov
add
out
js
push
inc
add
imul
push
nop
loopne
jb
mov
bound
insb
insl
adc
xchg
movsb
dec
test
ja
jnp
cmp
insl
xchg
adc
dec
popf
clc
and
imul
and
dec
inc
sub
add
ret
and
loopne
adc
cld
loop
rcl
dec
jns
imul
lock
lahf
js
cmp
fbld
fistpl
loope,pt
pop
int
mov
pop
jg
mov
fs
daa
mov
jnp
mov
dec
xchg
ljmp
inc
jnp
into
dec
ds
jbe
cmp
sbb
mov
mov
xchg
mov
push
aad
xchg
int3
add
sub
jl
xor
sbb
addr16
mov
pop
adc
or
shll
insl
loop
les
divb
bound
sbb
and
shll
cltd
lods
or
cld
negl
stos
shl
das
jecxz
sbb
dec
pop
nop
ja
cmp
jns
push
pop
idiv
outsb
pop
sbb
nop
icebp
add
xchg
out
mov
cmp
and
mov
sub
mov
dec
fnstenv
mov
pop
bound
iret
aam
rcll
pop
sbb
xchg
jmp
mov
xor
push
js
test
shrl
xor
enter
je
pop
inc
inc
lcall
repz
jmp
cmp
xchg
fimull
nop
dec
and
mov
int3
roll
ss
pop
mov
inc
out
test
sbb
frstor
clc
or
lods
lret
mov
icebp
jo
xor
sbb
int
pop
add
xor
std
pop
sarb
cwtl
push
imul
gs
pop
ret
push
cmp
push
and
inc
sbb
pop
jae
adc
je
or
dec
pop
out
mov
push
ret
xchg
out
cmp
dec
ja
in
mov
repnz
or
imul
mov
mov
add
fstp
repz
sub
mov
sub
clc
lods
pop
and
outsb
pop
push
ret
cmp
out
adc
fbld
scas
jle
fcmovnbe
icebp
jns
jno
lock
dec
jae
inc
pop
push
test
neg
and
cmpsb
xor
in
mov
pop
in
and
inc
sahf
mov
imul
or
call
xor
push
imul
hlt
jge
into
testb
xchg
orl
dec
or
fwait
push
or
loope
and
mov
das
sbb
inc
out
fwait
sbb
xchg
mov
pop
imul
cmc
aad
cmp
cmp
arpl
cmpsl
ss
sarl
dec
inc
inc
push
and
mov
push
cmp
stos
inc
out
mov
out
sbb
dec
ljmp
xorb
fistpl
aad
pushf
cmc
fstpl
xchg
fiaddl
ds
in
pop
or
mov
inc
enter
cmp
enter
xchg
pop
fidivs
mov
cmpsl
into
aaa
and
in
xor
insl
mov
push
mov
push
mov
outsl
mov
in
add
cmp
add
mov
lods
popa
mov
mov
cmp
les
push
out
ss
pop
jo
mov
loope
inc
add
shrb
out
sbb
test
shrb
out
sarl
pushf
call
mov
sub
aad
cltd
dec
adc
add
cmp
inc
xchg
pop
es
push
xchg
vpmadcsswd
lods
mov
push
stos
mov
out
push
pusha
xor
jns
addr16
bound
ficompl
pop
shr
pushf
les
fidivl
ds
insl
jge
pop
test
pushf
rcrl
fcmovb
out
mov
test
pop
cmpsl
std
jmp
aas
imul
xchg
mov
sbb
les
mov
cmp
loop
add
mov
push
repnz
jl
pushf
data16
jno
mov
loop
pop
jb
jb
pop
mov
push
xlat
cwtl
sbb
ja
push
pushf
xchg
ss
and
dec
mov
and
xor
adc
xor
bound
and
jne
lea
rcll
scas
dec
cs
and
bound
das
lock
in
ja
icebp
push
mov
or
lret
sub
jmp
xor
fisubs
or
mov
arpl
jecxz
mov
test
mov
sbb
mov
in
enter
push
mov
hlt
pop
fldt
rcll
stos
mov
in
incl
sub
push
and
add
je
test
jl
stos
inc
fisubl
fisubs
outsl
out
inc
nop
nop
adc
jnp
cltd
xor
ficompl
cmpsb
dec
push
mov
sti
cmp
les
daa
hlt
inc
cmpsb
inc
pop
jecxz
int3
movsb
jbe
mov
jmp
and
and
xor
pusha
jecxz
imul
sub
or
dec
scas
and
mov
cmpsl
sbbb
data16
aad
loopne
arpl
imul
jecxz
movsl
mov
test
movsb
sub
mov
adc
sbb
add
xor
cmp
push
adc
gs
aam
mov
push
dec
outsl
icebp
push
xor
lahf
jb
fstpt
add
bound
ds
stos
cli
scas
mov
dec
mov
les
push
subb
pushf
cld
cmpsl
popa
cmp
call
jp
mov
sahf
out
and
xchg
gs
mov
xchg
popf
pop
in
cwtl
xlat
jb
gs
add
adc
ret
dec
xor
xchg
jns
call
test
adc
aaa
adc
ret
rcrb
or
pop
dec
mov
subb
cli
in
insl
imul
pop
jg
mov
sbb
cmp
lahf
pop
mov
lcall
fdivl
xor
mov
and
fyl2xp1
inc
inc
pushf
mov
mov
mov
ljmp
inc
cld
push
push
mov
roll
inc
push
ljmp
out
stos
out
adc
mov
int
xor
add
bound
cld
stc
js
or
mov
sbb
push
mov
pop
cwtl
add
jle
dec
dec
add
dec
icebp
pop
pushf
cmpsb
and
lds
sbb
mov
pop
pop
jns
adc
cmp
push
ficoms
mov
adc
lock
loop
jecxz
sbb
jnp
insb
loope
ret
mov
mov
mov
push
stos
pop
imul
inc
pop
aaa
mov
pop
lret
add
xlat
lods
mov
inc
sub
xchg
and
loopne
clc
out
sti
push
mov
jecxz
jo,pt
xchg
cli
sbb
mov
in
hlt
push
gs
xchg
mov
sbb
adc
push
test
popf
jl
xchg
fucomp
push
adc
sahf
sub
les
push
mov
xlat
inc
xor
lods
into
or
sub
ss
cmpsl
mov
cmp
pop
jbe
cmp
adc
imul
lds
movsl
test
clc
push
push
cwtl
icebp
movsb
jl
jno
mov
aas
lcall
lret
cs
pop
ret
cmp
mov
iret
fwait
pop
cmp
jp
lds
inc
or
fidivl
or
xchg
adc
add
pushf
dec
cmpsl
ffreep
sub
mov
jmp
xchg
push
sub
inc
scas
push
mov
insl
imul
pop
cld
fisttpl
outsb
cmpsb
stc
cld
orl
and
in
push
push
mov
cli
testb
idivl
arpl
inc
jnp
sub
or
decl
bound
lret
mov
lods
and
fdivrl
lret
xor
cmc
xor
inc
jb
push
stc
fstpl
es
xor
mov
sub
sbb
mov
lea
pop
add
dec
mov
bound
xor
stos
adc
xorl
xchg
mov
rcrl
das
gs
push
cmp
loope
sub
xor
adc
dec
cmpsb
into
cmc
test
ffree
iret
sub
adcb
xor
pop
xlat
cmp
xchg
add
addr16
xor
test
add
stc
xor
subl
ja
fs
mov
add
data16
std
pop
test
data16
sub
mov
loop
dec
lahf
outsb
pop
cli
sahf
cmpsl
flds
mov
pushf
cmp
out
jb
cmc
popa
cmp
mov
push
pusha
xor
adc
pop
jbe
sub
pop
jae
not
xchg
inc
cmp
pop
push
fisubrs
lods
cltd
fmuls
mov
leave
or
stos
iret
outsl
sub
sbb
ljmp
xor
cltd
xchg
lret
push
clc
cld
push
jge
inc
cmpb
cwtl
js
imul
gs
push
sbb
jg
scas
dec
ja
sub
fstpl
cmp
rcrl
shr
cmpsl
repnz
jecxz
push
push
das
ja
inc
cmpsl
xchg
movsl
add
jmp
xor
push
pop
insb
in
lock
add
jp
stc
or
popf
push
jle
dec
xchg
cwtl
push
inc
lea
bound
pop
xchg
lahf
aaa
sbb
inc
dec
cmp
pop
jo
dec
cmpsb
pop
pop
fidivl
adc
lcall
add
pop
stc
or
les
call
jmp
cmp
cmp
dec
fistpll
and
cmp
pushf
in
and
sbb
loopne
les
aaa
aad
lcall
mov
lods
out
cmp
in
pop
into
or
mov
sub
add
mov
out
fs
clc
pop
push
int3
in
pop
leave
jae
out
loopne
ds
inc
outsl
loopne
aad
pop
mov
sub
lret
addr16
sete
cs
fisubrs
jg
dec
cld
jge
inc
test
add
sbb
ret
out
or
jno
xchg
sarb
lods
adc
ss
cmpsl
test
mov
in
dec
sub
push
sbb
fstpt
xchg
cmp
xor
jns
mov
mov
ret
jb
cmpb
iret
or
or
movsl
repnz
pop
insl
push
mov
loop
out
lret
pop
test
add
cmc
jo
push
push
nop
loopne
fdivrs
out
cmp
xchg
push
dec
add
jne
mov
addr16
out
add
sub
or
cmpsb
cmp
jmp
insb
out
repnz
and
jmp
andb
call
push
xor
test
xor
cmp
or
xor
cmpsb
cltd
add
cmp
fistl
arpl
mov
push
test
out
sbb
jle
ret
ret
xlat
iret
in
dec
sub
jl
push
scas
dec
imul
lods
push
lret
fistpll
mov
push
or
mov
jecxz
outsl
outsb
outsb
stc
jecxz
stos
and
jmp
lcall
mov
stos
or
cmc
xchg
movsl
in
xor
xchg
xorl
call
sub
mov
push
sub
xor
loopne
inc
pop
adc
inc
mov
dec
insb
sub
in
or
push
adc
and
ret
sub
lods
add
mov
push
push
pop
mov
inc
push
addl
push
xchg
fisttps
ds
not
jbe
add
bound
push
leave
add
in
fstpl
jnp
jle
hlt
inc
std
inc
and
sbb
imul
inc
arpl
xchg
push
pop
outsb
sub
cmc
jns
sub
sub
es
sbb
jp
push
cmp
mov
push
call
sar
push
add
push
lds
ret
imul
sahf
add
mov
mov
sahf
xor
push
dec
lea
lock
xor
mull
inc
mov
ret
rcrb
mov
or
xchg
adc
mov
ss
pusha
inc
mov
cmpsb
mulb
add
pop
cltd
cmp
xor
xor
xchg
and
push
pusha
aaa
push
xchg
ds
and
call
cld
inc
sbb
mov
sbb
adc
cld
xorb
dec
mov
es
pushf
xor
roll
loopne
popf
mov
mov
or
in
divb
sahf
cmp
repz
mov
or
sub
inc
mov
divb
lock
scas
int3
fcmovb
es
mov
cs
or
cld
adc
pop
fwait
addr16
push
imul
aas
js
cmc
mov
adc
shl
insb
outsl
das
inc
inc
mov
es
sub
push
sbb
cmp
test
jmp
cwtl
jg
pop
cltd
or
es
jp
sub
js
shll
test
sub
pop
shrb
pop
or
data16
sahf
insl
xchg
cmpsl
fnstcw
aas
ljmp
sahf
sbb
aad
ds
mov
in
and
test
fdiv
fptan
ds
pop
push
push
out
lock
daa
test
add
mov
les
cmc
dec
ds
adc
sub
jbe
cld
sub
femms
cmp
roll
and
aaa
aaa
call
cltd
inc
inc
addr16
and
lock
mov
roll
xchg
sbb
inc
or
jno
push
data16
out
repnz
inc
in
jge
lea
push
dec
jge
push
sbb
std
sbb
scas
jae
sub
fwait
xchg
inc
or
push
addl
mov
add
inc
inc
dec
jne
jbe
or
scas
leave
jbe
sbb
and
cld
outsb
cmpb
aaa
cmp
and
xor
fsubp
sbb
inc
or
lcall
insb
adc
xor
cli
movsl
mov
mov
mov
xor
or
or
xor
sbbl
cs
xchg
pop
cli
jne
fdivr
xchg
repz
mov
repnz
add
test
sub
pop
fldcw
fldenv
pusha
pop
movsl
scas
add
imul
fimull
cmpsl
or
add
lss
push
stc
ljmp
test
inc
push
pop
pop
mov
or
lods
in
pusha
mov
push
scas
mov
jle
or
mov
mov
lods
pusha
xor
das
mov
dec
pop
xchg
out
lret
pop
pop
xor
xchg
mul
rcr
xor
or
stos
aad
rcll
dec
fdivrs
stc
aam
mov
je
popa
cmpsl
sti
mov
cmp
cmp
dec
jmp
andb
fldcw
mov
xchg
pop
not
repnz
into
cmc
imul
pop
xorb
mov
std
mov
push
rclb
jbe
mov
jns
in
dec
outsl
addr16
cmpl
jmp
out
es
xor
cmp
sbbl
pop
dec
hlt
push
int3
or
stos
out
push
dec
xchg
dec
mov
adc
pop
out
dec
pop
sub
adc
inc
int3
repz
loop
notl
scas
mov
es
cmp
ljmp
or
maxps
push
xchg
mov
scas
xchg
mov
mov
lahf
mov
jb
aad
in
jno
cwtl
mov
movsl
loopne
mov
jne
jl
mov
pop
fldlg2
or
pusha
out
faddl
sbb
or
xlat
lret
js
pop
mov
pop
mov
add
cmp
jl
test
mov
subl
sub
ja
sbb
mov
jo
repnz
in
and
test
pop
enter
out
cmpsb
and
loopne
inc
and
imul
or
jne
sti
dec
push
repnz
test
inc
sub
jns
mov
sbb
movsb
ret
insl
mov
push
and
dec
fdiv
cltd
mov
adc
divb
mov
jns
loop
pop
pop
aas
fists
lds
outsl
and
aam
loope
xor
gs
loop
outsl
mov
in
aad
pop
jae
mov
xlat
push
dec
in
dec
cs
cmpsb
jecxz
mov
xchg
pop
jnp
mov
sti
andb
inc
xchg
iret
iret
into
data16
outsl
mov
add
int3
fisubrs
push
mov
rolb
lods
fs
mov
mov
push
inc
filds
jne
enter
popa
icebp
pop
fdivrl
ja
insl
insb
test
or
push
daa
xor
sahf
test
filds
icebp
repnz
add
stos
sbb
jae
adc
xor
cmpsw
call
sar
push
xor
decl
je
out
rcrb
je
stos
out
lods
or
cmp
pop
pop
incb
and
push
push
call
rcl
nop
aas
inc
cmpsb
xchg
jo
cmp
cmp
xchg
rolb
dec
jno
pop
fs
add
sarb
call
lret
cmp
pop
xlat
dec
mov
cmp
jp
dec
insl
cmovno
mov
rclb
inc
fwait
or
or
push
sub
outsb
ds
pop
popf
call
jl
adc
pop
xor
data16
add
sbb
sbb
cmp
out
lcall
cs
iret
mov
call
shlb
sbb
sub
xor
mov
sahf
adc
mov
pop
sub
xlat
std
andb
cmp
idiv
push
scas
xchg
dec
mov
push
popf
in
fisttpll
mov
mov
jbe
cmp
sub
pop
jl
dec
pop
mov
mov
xchg
js
mov
lock
inc
adcb
fsubrp
inc
inc
or
fwait
into
fcoml
adc
in
mov
orb
repz
and
aad
fwait
mov
adc
pop
inc
scas
call
scas
cmp
popf
sbb
cmc
lea
in
stos
aam
es
sahf
pop
test
xchg
movsl
dec
aad
push
decl
call
clc
push
sbb
mov
sbb
jns
dec
xlat
dec
lcall
xor
adc
icebp
mov
jge
mov
xor
mov
call
and
mov
sti
jmp
add
loop
movsl
push
in
arpl
xor
rcrb
fsubrl
rcrl
add
addl
push
jbe
js
pop
loopne
xchg
pop
leave
gs
cli
xor
fimull
inc
push
cmc
pushf
repz
bound
into
inc
push
pop
cltd
add
cmp
rcl
pop
fnsave
xchg
lods
inc
pop
pushf
fnsave
xchg
lret
or
nop
sahf
fsubrl
les
xchg
sbb
mov
jb
xor
jbe
cld
orl
mov
xchg
scas
lods
icebp
aas
mov
mov
cld
push
or
and
adc
insb
in
mov
jno
lock
jb
cs
sbb
cmp
scas
int
push
popf
lahf
jl
test
sti
in
cmpl
or
push
cmp
test
imul
or
scas
out
or
sub
stc
inc
cli
negb
add
in
mov
nop
pop
push
push
sub
leave
push
sti
adc
add
lret
cmpsb
ja
ret
cmp
jecxz
incl
stc
jno
movsb
cwtl
sbb
scas
sbb
xor
movsb
aad
jp
dec
mov
xlat
je
mov
push
shl
or
out
ret
push
sar
lds
push
lahf
pop
mov
stc
in
pop
mov
incl
cmpsb
das
add
fimuls
inc
push
jmp
xchg
ret
lahf
and
and
sub
pop
sbb
subb
xorb
mov
popf
into
repnz
mov
cmp
dec
cmpsb
xor
adc
sub
dec
mov
rolb
push
ret
mov
mov
fisttpll
jnp
fstpt
xlat
jns
mov
scas
jg
loopne
pop
mov
shl
rcll
sub
mov
mov
subb
jle
std
jae
shlb
xor
adc
test
fstpt
outsb
and
mov
push
inc
jp
lret
jl
pop
mov
mov
inc
xchg
iret
mov
xor
negl
sub
push
sbb
fldt
push
ret
jmp
sbb
sarl
stos
les
push
mov
push
pop
and
xchg
add
push
fucomi
push
xchg
cwtl
fsubrl
mov
daa
xchg
repz
test
pusha
xor
sub
test
mov
pop
dec
xor
repz
loopne
mov
lret
mov
les
jo
ljmp
inc
inc
mov
je,pt
jbe
bound
out
sbb
cwtl
test
arpl
test
lods
daa
mov
push
and
repnz
jge
mov
push
sub
xchg
adc
pop
or
push
cmp
lret
sahf
jg
inc
sub
pop
sti
sbb
insb
mov
push
in
xchg
ret
inc
xor
js
add
cltd
add
pop
mov
lcall
hlt
cmp
xchg
orb
push
fs
xor
mov
cmpsl
imull
gs
push
inc
xor
out
sbb
rcll
stos
int3
push
mov
and
sub
xchg
ds
mov
push
add
dec
mov
mov
jmp
iret
jnp
mov
jecxz
push
xchg
cmp
sub
xchg
daa
inc
sub
aaa
fcoml
mov
movsb
divb
jbe
add
jp
adc
mov
in
pop
or
mov
adc
push
mov
sub
and
stos
add
loop
rcll
lock
xor
push
mov
cmc
mov
icebp
mov
cmpsb
dec
scas
mov
cmp
and
and
sbb
push
jp
psrld
movsb
aam
push
jl
lret
shl
fsubs
scas
es
jbe
pop
xor
pop
mov
int3
loopne
push
push
aas
cmp
ss
sbb
sbb
adc
xlat
rcrl
mov
push
push
lods
fildl
in
clc
adc
and
aad
imul
xchg
lcall
and
xor
xchg
adc
movzwl
xchg
push
lods
fnstsw
loopne
testl
gs
mov
into
cmp
shl
pusha
cmp
dec
jp
jbe
int
in
lods
mov
fimull
sbb
shll
dec
scas
std
mov
and
bound
xchg
cmc
lahf
add
jge
sbb
mov
dec
jge
imul
adc
adc
and
add
int3
inc
ja
lea
mov
push
call
hlt
lcall
add
pop
cmp
lods
lods
ljmp
es
fildll
xchg
add
cwtl
push
add
jne
jl
dec
adc
or
or
ror
sbb
xchg
out
cmp
add
push
pop
xchg
call
push
out
scas
xchg
mov
sub
imul
sbb
jge
ljmp
js
popf
add
aad
rcrl
adc
ljmp
fldl
subb
in
mov
pop
loop
test
mov
arpl
inc
cld
in
adc
dec
and
sbb
sub
and
inc
xchg
inc
pop
mov
ss
or
shrd
sub
pushf
sbbl
xchg
ljmp
loop
xlat
mov
mov
xchg
pop
and
and
xor
lahf
adc
daa
mov
lcall
mov
push
mov
dec
nop
push
cmovno
into
pushf
or
stos
ror
popf
int
bound
sti
cwtl
cmp
push
jmp
shll
mov
mov
repnz
xchg
js
stos
ljmp
cmp
mov
and
aaa
mov
repz
fucom
push
fadds
xor
dec
dec
mov
push
sub
int3
xchg
sub
lret
lret
lds
shrb
rcr
xor
aad
addr16
jnp
mov
insl
xchg
xchg
push
lods
push
enter
in
jnp
lock
mov
xor
sub
adcl
sbb
mov
push
mov
xchg
xchg
pop
inc
ficoms
adc
mov
dec
xchg
pusha
popa
push
movzwl
push
inc
lcall
sbb
mov
mov
inc
ja
push
add
or
mov
mov
xor
push
test
cltd
sub
jb
add
loope
out
xchg
jae
mov
sti
popa
xchg
add
mov
xlat
sbb
xor
cld
rorl
imul
scas
sub
mov
xchg
test
bswap
xchg
inc
out
mov
lcall
jp
das
or
and
push
std
inc
call
out
add
add
inc
fmulp
and
inc
bound
mov
popf
sub
lcall
out
fldl
mov
fidivrs
push
in
ficoms
cmp
dec
cmp
cmp
sub
mov
or
pop
pop
js
out
pusha
sub
push
xor
imull
movsl
outsl
movhps
into
lds
inc
fisttpll
mov
add
inc
jno
xlat
andb
jnp
adc
mov
jmp
loop
repz
imul
xchg
sbb
cmpsl
lods
roll
adc
xlat
mov
and
sbb
push
outsb
push
cmp
adc
out
and
sahf
jns
clc
sbb
and
adc
sub
and
inc
push
rolb
aaa
inc
xlat
or
dec
pusha
inc
cmpsl
shlb
sub
lret
fs
cmp
bound
xchg
mov
cld
push
sub
mov
pusha
jmp
fprem
out
mov
mov
fisubrl
inc
or
lock
inc
and
inc
rcrl
mov
incl
bound
int
loop
divl
fstps
cmpsl
test
dec
jge
mul
or
rcrb
inc
outsb
or
xchg
addr16
xchg
in
jmp
aas
mov
inc
mov
mov
jl
cmp
lock
enter
out
inc
lcall
jnp
inc
test
stos
jle
cmpsl
push
mov
in
call
pushf
push
cmp
test
dec
cmp
lahf
adc
mov
push
xor
mov
add
les
push
push
stc
cmp
sub
popa
mov
nop
push
jmp
and
bound
int
cs
and
es
nop
xlat
movsb
push
sub
jo
push
sub
je
imul
jbe
xchg
in
dec
fidivrl
cmpsb
jae
fabs
out
inc
popf
addl
mov
fmull
popf
test
mov
imul
adc
pusha
test
pusha
ljmp
mov
pop
mov
or
jecxz
mov
jno
jo
scas
lods
or
cmpsb
pusha
sbb
popf
inc
sahf
inc
in
inc
fsubr
mov
loopne
pop
push
test
jl
lcall
sahf
dec
mov
pop
cmp
xor
and
call
ret
hlt
adc
int
bound
lret
add
xor
xor
je
jmp
pop
into
dec
lret
repnz
les
mov
adc
xchg
negb
sbb
in
push
pop
inc
pop
out
sbb
stos
stos
xor
push
push
in
xchg
loope
and
pop
pusha
test
out
jecxz
cmp
aaa
outsb
fldt
jl
pop
xor
pop
es
push
adc
lret
mov
outsb
ficomps
xchg
lock
add
sbb
nop
aam
lcall
adc
sub
or
hlt
pop
jne
pop
movsl
rorl
mov
subl
pusha
jp
mov
iret
cmp
adc
push
add
sub
je
sub
sahf
inc
fs
jae
adc
ret
jnp
out
and
jecxz
adc
int
cmp
jl
sub
cld
lret
popa
xor
xchg
rcrl
rorl
jl
ss
push
inc
jne
fidivrs
lret
push
pop
jp
aaa
lret
dec
xor
nop
popf
fisubs
mov
aam
test
leave
xor
jl
daa
popf
mov
jmp
lods
jne
roll
stos
icebp
cli
cs
sar
dec
out
mov
fadds
repz
inc
pop
add
jl
stos
outsb
mov
aam
pop
in
jecxz
pop
lock
sub
addr16
popa
adc
mov
pop
adc
add
cmpsl
jne
out
loop
fcoms
mov
fisttpll
xor
popl
pop
cld
cmp
mov
or
mov
add
ret
mov
imul
adc
dec
add
pop
or
mov
test
cmpsl
pop
in
push
cmp
push
fwait
sub
push
stc
es
nop
jbe
pop
pop
sub
or
rcr
mov
xchg
in
xchg
orl
je
insl
xor
outsl
push
lcall
inc
outsb
insl
pop
hlt
cmp
dec
adc
inc
or
cmp
add
push
inc
add
adc
sbb
out
push
aaa
mov
push
cs
add
out
aas
xlat
std
dec
ret
jo
sbb
pop
jg
sub
fcomps
dec
or
daa
mov
cmpsb
loopne
aaa
add
mov
push
sub
cmc
xchg
mov
fucomip
lods
movsb
mov
insl
and
clc
pop
adc
sahf
rcll
adc
out
lds
aad
sbb
hlt
adc
and
pop
push
mov
pusha
mov
cmp
xchg
xor
lret
cmp
int3
out
out
sub
mov
pop
and
test
cld
xchg
sbb
or
jae
in
jne
movsb
hlt
push
pop
mov
mov
sub
jge
pop
jbe,pn
add
add
adc
addr16
in
lcall
enter
dec
imul
mov
mov
xor
sub
dec
cmp
xor
or
push
sub
push
icebp
lock
lds
and
mov
dec
mov
fs
xlat
xchg
adc
ror
jl
adc
iret
jbe
inc
outsb
xlat
cmpsl
flds
mov
pop
pop
cld
ret
mov
cmp
mov
cmp
adc
xchg
movsb
dec
daa
pop
mov
push
jbe
push
dec
mov
sub
fstpt
aam
and
into
mov
xchg
jne
scas
xor
out
mov
cs
loop
jo
sub
mulb
push
ret
sub
loopne
add
sahf
sbb
movsl
xchg
stos
fbld
in
sub
ljmp
movsl
gs
mov
fwait
mov
dec
ret
jmp
gs
mov
sbb
cwtl
cmp
repz
mov
in
inc
mov
in
pop
jae
xchg
xchg
fildll
add
shl
inc
mov
xchg
fmul
cmpsl
jge
negb
xor
hlt
mov
cmp
sub
dec
ljmp
xor
xor
mov
push
mov
dec
aam
outsl
pop
das
pusha
outsb
mov
mov
mov
xor
and
nop
scas
or
mov
loop
mov
gs
inc
sbb
or
stc
in
stos
push
movsb
xchg
imul
mov
pop
scas
dec
arpl
in
mov
or
outsl
aas
sarl
sub
fnstenv
cli
or
mov
sub
popf
pushf
jmp
adc
jnp
sti
jbe
lock
fldenv
out
mov
lcall
ret
jno
movsl
test
pop
and
aad
clc
cmp
mov
xchg
xor
mov
dec
push
lahf
pop
adc
or
push
cwtl
aad
insl
or
roll
repz
nop
repnz
inc
jb
push
mov
pop
mov
ljmp
sbb
push
mov
call
pushf
fistps
lahf
dec
aad
stos
in
cmpsb
and
sub
jl
hlt
push
fistps
pop
outsl
add
into
push
jge
arpl
xchg
and
dec
pop
lret
out
fisttps
iret
jae
test
pop
movsl
mov
jnp
test
je
clc
mov
mov
jne
fisttps
lahf
and
pop
mov
test
iret
sarl
andl
inc
xchg
mov
mov
lods
add
pushf
sub
loope
std
aaa
jg
int3
pop
pop
xchg
mov
lcall
adcb
aam
mov
inc
insl
loopne
shl
add
xor
imul
xor
dec
sub
cmc
jno
data16
mov
sbbl
pop
mov
pushf
into
daa
xchg
loope
repnz
loop
and
iret
loope
or
xchg
lcall
push
jp
inc
into
arpl
outsl
scas
sub
sahf
xchg
mov
in
ret
insl
jmp
pusha
std
push
xchg
mov
and
jl
push
les
dec
xor
inc
lcall
mov
cmp
adc
lods
dec
pushf
mov
jle
inc
rcl
xor
pop
inc
hlt
adc
iret
or
mov
pop
lahf
push
addr16
pop
out
mov
mov
aas
inc
push
sub
or
ljmp
fld
mov
mov
dec
hlt
aaa
ret
sub
add
push
jnp
pop
mov
shlb
js
xchg
gs
lods
jg
leave
sub
enter
mov
pusha
or
pop
xchg
jns
fistpl
cmpsl
cmpsb
mov
and
or
popf
iret
movswl
dec
xchg
aam
in
popa
cmp
int
je
adc
mov
cmp
loope
mov
and
sbb
pop
out
dec
mov
inc
pop
mov
out
or
int
cmp
and
jge
addr16
data16
dec
mov
ret
xchg
imul
mov
or
addl
xchg
jnp
mov
and
dec
fcoms
pop
mov
sbb
into
dec
add
mov
and
popa
dec
sarl
dec
loopne
push
aad
imul
nop
fcomi
dec
push
cli
ret
cmc
mov
push
jle
rorl
lods
mov
ja
call
clc
xchg
pop
js
fucom
into
push
jle
add
div
and
add
pop
jp
dec
mov
push
imul
jg
sbb
and
push
jecxz
or
jb
mov
push
push
push
in
add
mov
icebp
loop
vphaddbd
mov
jno
push
mov
stc
rcrl
xchg
dec
adc
jne
mov
adc
test
stc
shld
mov
lds
stos
xchg
mov
push
ret
out
push
xor
xor
icebp
pop
pop
rcrb
and
out
js
mov
and
dec
jo
loop
xchg
jp
or
das
or
sub
test
ret
frstor
xor
repnz
cld
stc
push
cmp
mov
cltd
xor
ds
jne
xlat
sbb
push
xchg
lods
leave
outsl
out
add
and
mov
std
sbb
out
dec
sbb
sti
ret
ja
cmpb
cmp
mov
mov
adc
add
and
mov
dec
test
mov
cmpsb
and
scas
push
mov
xchg
js
cmp
iret
or
push
es
push
pop
add
dec
iret
push
out
ret
mov
aad
cmp
sub
xchg
and
mov
mov
enter
shl
mov
xchg
sbb
adc
cld
pop
test
ficoms
and
movsl
sti
lods
cmp
mov
fstps
add
mov
ljmp
push
jns
jno
push
je
mov
icebp
inc
or
rsqrtps
sti
and
bound
jno
pushf
fcoml
pop
pop
shr
xor
or
mov
sub
in
shll
fildll
cwtl
adc
xchg
rcl
sbb
out
mov
push
jecxz
mov
popf
rcll
jmp
ljmp
nop
aad
ljmp
pushf
test
pop
lods
push
lret
hlt
mov
icebp
push
in
add
jge
cmp
and
test
xchg
mov
fsubr
shlb
dec
mov
fmuls
lock
mov
mov
out
in
scas
xchg
cmc
cs
in
push
jmp
lods
push
push
cmp
or
rcr
loopne
scas
add
inc
shll
testb
daa
in
add
push
xchg
pop
jg
dec
cmp
pop
add
sub
jge
rorl
sar
loopne
mov
pop
ror
xchg
jae
icebp
outsl
jp
push
loop
xlat
mov
cmpb
inc
mov
inc
push
int
dec
mov
mov
hlt
rcll
clc
dec
adc
js
and
cmp
mov
inc
rorl
xlat
xor
std
xchg
nop
mov
fcmovnb
cwtl
xor
aas
movsb
jge
insl
int3
pop
adc
mov
xchg
ret
jp
movsl
scas
push
lret
adcb
lods
pop
sbb
les
mov
cltd
iret
iret
inc
jmp
mov
es
and
cltd
pop
and
and
pop
xchg
cli
arpl
mov
lret
aad
xor
rorl
adc
push
aad
sbb
or
cltd
adc
inc
scas
pop
addr16
fucomi
lods
rolb
adc
out
imul
or
mov
scas
cmp
leave
lods
mov
fstl
jge
aaa
popf
xchg
pop
mull
imul
xor
ror
sarb
jge
inc
imul
mov
xor
in
jae
mov
and
mov
sub
adc
rol
mov
dec
mov
mov
fldt
sbb
push
lods
dec
imul
aam
or
add
movsb
lods
push
inc
adc
inc
fs
iret
xor
push
push
mov
clc
xchg
in
rol
lcall
enter
lods
sub
inc
xlat
add
jo
aaa
pop
or
and
lods
out
xlat
and
push
sbb
jae
outsb
cli
mov
lahf
test
dec
ds
sarb
fldenv
add
add
rcrl
add
sti
call
mov
lea
xchg
stos
cli
xor
cwtl
nop
das
mov
add
fists
jno
pushf
adc
ja
inc
xchg
fwait
sbb
mov
xlat
cmp
xchg
out
cltd
fldz
xchg
int3
mov
cld
mov
xchg
jbe
xor
mov
jmp
mov
repnz
pop
adc
aad
dec
in
inc
pop
test
imul
cld
imul
stc
jg
jae
push
icebp
sub
or
xchg
push
into
push
adc
outsl
inc
mov
mov
push
mov
and
jmp
sahf
pop
adc
pop
dec
shll
hlt
and
mov
repnz
cmp
or
cmp
shrb
aaa
mov
cmp
outsl
xchg
nop
push
jno
test
inc
inc
xchg
aas
mov
in
inc
mov
sbb
lea
push
xchg
jnp
loope
insl
shrl
dec
add
lock
dec
in
pushf
lea
test
scas
adc
xchg
dec
sub
sbb
mov
pop
mov
dec
xchg
imul
int3
jb
imul
jl
mov
test
xlat
sub
add
or
out
push
vpsubd
mov
xor
iret
mov
mov
outsl
and
rorl
lret
test
push
mov
mov
jg
loop
push
inc
test
cmp
popf
add
cmp
movzwl
mov
cltd
pop
mov
and
shll
test
dec
fwait
aas
scas
or
addr16
jo
test
pop
dec
stos
notb
mov
pop
stos
adc
xlat
cs
lcall
out
cmp
sbb
inc
xlat
inc
ja
xchg
dec
xor
pop
lods
cmp
testb
inc
adc
sbb
sbb
clc
int
mov
aas
out
loope
xchg
fcomps
lea
xor
rcl
push
js
sub
inc
dec
add
call
cld
jmp
adcl
hlt
rcll
lods
add
pop
jae
add
imul
ret
aas
xor
push
cmp
or
adc
shlb
jns
add
sbb
pop
xchg
gs
adc
loop
scas
xor
lahf
lret
adc
push
jb
or
loopne
mov
cmp
rcrl
popf
sbb
and
xchg
cs
xor
inc
and
cltd
in
nop
in
jmp
dec
ret
mov
movsl
and
fstl
mov
dec
icebp
mov
fstpt
xor
or
inc
or
subb
cli
xchg
lret
ja
xchg
dec
dec
xor
push
mov
popa
mov
adc
push
xor
daa
test
aad
mov
push
push
addr16
mov
xchg
aas
lock
loop
fldenv
int
int3
and
sub
and
jno
rorl
les
pop
ret
aas
dec
das
lock
pop
and
popa
and
fstps
insb
popf
xor
cmp
in
mov
or
cmp
test
xor
int
sahf
cmp
outsb
jp
inc
out
adc
cmc
dec
mov
loop
in
xchg
jecxz
stos
mov
xor
je
pop
sbb
jbe
or
mov
stos
sub
pusha
push
or
and
mov
mov
sub
mov
mov
fs
and
jg
cmc
jmp
jp
lods
rorb
lea
xchg
js
out
push
or
stos
cmp
sbb
std
lret
adc
dec
or
cmp
xor
iret
fs
jno
je
faddl
add
mov
xchg
or
dec
or
stos
mov
cmp
cmpsl
add
jae
std
mov
xor
fisubrs
stos
and
mov
xchg
pop
lret
fwait
insb
fisubl
jle
dec
lret
push
cmc
jg
lahf
stc
fsubrs
mov
push
outsl
sbb
jnp
test
es
clc
jmp
mov
mov
insb
js
pop
outsb
jl
xlat
jne
add
ljmp
pop
mov
je
jae
dec
add
popa
add
repz
dec
popl
xor
mov
cmc
outsl
mov
xchg
repnz
jl
iret
ret
sub
xor
inc
push
pop
clc
sti
ss
fisttpll
jl
imul
jbe
sub
in
sbb
adc
push
stos
push
pop
pop
cmpsl
mov
ret
push
add
mov
sbb
push
dec
pusha
dec
mov
adc
push
mov
xor
adc
mov
jo
stos
jp
xchg
jno
lods
repz
dec
adcl
dec
cmpsl
movd
mov
adc
jle
and
bound
add
into
push
mov
test
int
daa
adc
sarb
testl
mov
mov
test
mov
in
inc
mov
scas
sbb
cmp
repnz
xor
popf
andl
and
out
daa
pop
iret
xchg
imul
jp
mov
cs
shlb
repnz
mov
test
pop
idivb
pop
pop
lods
sti
gs
lret
mov
cs
cmp
push
mov
bound
lods
out
scas
jnp
mov
adc
roll
mov
push
in
fxch
repz
pop
xchg
fisttps
jbe
xchg
sbb
pop
jg
mov
rcrl
jnp
sub
stc
je
mov
sti
outsb
mov
fwait
mov
xchg
shrb
cmc
push
sub
frstor
outsl
cli
lea
dec
push
sti
push
adc
sbb
icebp
jecxz
ret
lret
into
push
pop
cwtl
in
mov
js
insl
lret
ljmp
lret
ss
leave
pop
dec
enter
mov
ljmp
inc
xchg
cld
sbb
in
or
sbb
jno
les
jae
mov
dec
rcl
jnp
shlb
mov
sbb
scas
and
call
lea
sbb
jp
jp
mov
inc
fistpl
push
sti
gs
gs
xor
cmp
push
cmc
int
inc
lcall
testb
add
lods
dec
sysexit
out
scas
or
cmp
adc
jecxz
or
push
int3
mov
ljmp
stos
pop
lret
push
in
lods
jo
jns
fwait
das
mov
das
mov
scas
inc
sub
jecxz
hlt
popf
es
jbe
jmp
sbb
push
lret
pop
incl
pop
lds
jo
and
sbb
es
dec
adc
dec
mov
sub
inc
pmaddwd
arpl
xor
adc
cmc
test
arpl
mov
push
cmp
ret
pop
scas
std
jl
lcall
sub
add
test
nop
dec
arpl
xchg
xchg
inc
loope
sub
shrb
pusha
ss
out
stos
and
std
cmpl
cmp
or
sbb
push
rol
inc
sbb
or
inc
arpl
call
es
or
adc
cmp
fsubrl
shrl
repnz
xlat
mov
push
icebp
std
fsubl
aam
in
mov
popf
add
jle
fsubl
call
and
fdivrs
sub
xchg
rcrb
mov
gs
sbb
xor
sub
and
pop
add
push
jo
iret
lds
dec
arpl
ret
pop
lock
iret
jno
cltd
or
arpl
sub
in
dec
pop
ss
push
jno
xor
cmp
add
jl
sahf
jbe
adc
test
das
pop
mov
shl
sarb
mov
clc
xor
jne
cmp
lret
aam
movaps
popf
mov
pop
scas
pop
sub
mov
xchg
and
popa
mov
jne
mov
sbbb
jno
cmp
sub
in
jecxz
loope
cli
mov
lods
out
jb
or
xor
in
loopne
icebp
lock
dec
cmpl
sbb
int
into
mov
or
lock
adc
cmc
mov
in
pop
adc
xlat
in
lods
je
idivb
xchg
pop
imul
mov
test
push
stos
fstpl
inc
lods
aad
imul
pop
adc
popf
ret
les
fcompl
xor
es
dec
cmp
lock
ljmp
fptan
stc
repnz
rol
mov
and
push
addb
mov
out
dec
mov
pop
out
mov
pop
ret
jecxz
mov
adc
and
add
enter
mov
lret
rclb
mov
push
clc
sbb
insl
xor
jns
mov
test
xor
out
push
cltd
outsb
ret
ret
adc
xlat
in
lcall
shll
lods
xlat
mov
xor
or
aaa
and
and
cmc
aam
pusha
data16
cmp
cwtl
lock
mov
add
stos
cmp
ds
jns
lea
adc
mov
les
xchg
sbb
adc
xor
pusha
lret
aas
into
movsl
cwtl
lcall
in
mov
mov
lds
leave
dec
sahf
and
xchg
pop
out
push
in
cmpsl
mov
daa
cmp
mov
dec
call
cmp
fs
add
push
mov
outsb
jmp
outsl
in
dec
mov
push
cmpsb
sub
add
lods
push
cmpsb
ret
fs
sahf
inc
aam
sti
cmc
inc
ss
lret
sbb
outsl
mov
pushl
dec
push
or
inc
cmp
push
pop
push
mov
jl
jg
shll
jle
push
fists
je
pop
jl
jecxz
cld
sbb
sbb
dec
sub
jp
ds
sub
mov
adc
add
dec
pop
pop
lods
sbbb
ret
mov
iret
sub
jno
loopne
jns
inc
push
fcmovb
sub
xor
mov
pop
jbe
aaa
sbb
clc
xchg
sarb
test
push
mov
aam
mov
jne
pop
pusha
daa
call
jmp
inc
dec
xor
dec
dec
scas
lock
sub
insl
mov
cli
movl
push
in
fucomp
imulb
xor
push
cmpsb
or
sub
xchg
in
imul
jecxz
nop
pop
push
mov
stos
mov
jbe
mov
adc
and
adc
repz
dec
shrb
ds
xchg
jle
les
or
sub
cmp
imul
cmc
xor
movzbl
and
and
add
jne
cmp
fistpl
xchg
or
ffree
mov
sbb
addr16
fsubp
lea
mov
gs
test
imul
dec
hlt
mov
adc
cld
cmp
sub
dec
mov
ds
push
clc
ror
scas
add
clc
adc
pop
insl
jo
jge
fnstenv
xor
xor
jg
scas
ss
pop
out
mov
sbb
add
out
out
lds
into
inc
mov
in
movsb
pop
out
pusha
push
mov
mov
insb
jmp
das
and
fadds
mov
lcall
mov
insb
adc
xchg
xchg
ucomiss
ss
mov
mov
lahf
inc
cmp
add
mov
ds
lret
aad
out
fwait
syscall
in
inc
data16
aam
lds
gs
int3
or
push
and
push
cmpl
pop
shll
aaa
inc
mov
rcll
movsb
push
ret
inc
ljmp
dec
out
dec
jg
sub
push
jecxz
xchg
push
or
imul
jmp
lds
cmc
push
mov
push
sbb
cmp
xchg
sub
sarl
int
bound
aas
or
dec
push
aad
icebp
sbb
ss
ficoms
fcomip
jmp
out
xor
in
xchg
and
xor
add
jge
jo
ss
rclb
sub
movsl
jbe
test
and
add
xlat
cmp
add
repnz
cmp
cmp
fbstp
jnp
sub
pushf
rcrl
dec
inc
dec
dec
jl
je
pop
mov
nop
scas
sarb
aad
jg
lods
shll
insb
scas
lock
jnp
cs
inc
cmp
ja
or
stos
out
dec
aaa
pcmpgtd
icebp
dec
les
jne
movsl
int
incl
cmp
lods
stos
pop
mov
and
add
and
and
push
ljmp
adc
repnz
sbb
sbb
call
mov
scas
sub
enter
cmp
insl
sub
shlb
cwtl
xchg
fstl
andb
adc
rcrl
mov
pusha
sahf
and
dec
lds
stc
sub
jno
sub
lcall
adc
or
test
jmp
cmc
movsb
xchg
mov
in
loopne
inc
jns
lret
sub
iret
mov
xor
out
scas
inc
jmp
jge
ja
lcall
mov
out
jno
ret
rolb
ret
pop
icebp
jg
ret
pcmpgtw
mov
ljmp
sbb
subl
push
rorl
pop
cmpsb
dec
loope
cmp
sbb
fcmovnbe
nop
insl
cltd
addb
stc
fists
sub
stc
cltd
cld
fcmovu
jae
fcoms
adc
dec
mov
aad
add
mov
daa
pushf
leave
xor
cmp
dec
xor
mov
push
subl
mov
dec
mov
jle
out
sub
push
adc
jae
ret
adc
sbb
imul
xchg
call
fistpl
mov
fsubrl
js
jno
cld
or
repnz
or
mov
add
xchg
sbb
std
stos
mov
mov
sbb
mov
test
repz
cld
jne
push
mov
and
ljmp
ret
iret
push
add
mov
push
push
dec
inc
pop
cli
dec
nop
adc
push
dec
imul
inc
fsubs
outsl
cltd
push
mov
mov
int
push
andb
sti
jae
push
mov
dec
mov
pop
sarl
inc
pop
sahf
xchg
jbe
mov
inc
rclb
iret
adc
mov
sbb
test
mov
lock
cltd
aam
idivl
jp
push
int3
jge
mov
mov
push
mov
call
ss
test
insb
jne
mov
inc
push
pop
inc
shrb
mov
adc
int
dec
fisubrs
inc
smsw
fisubs
sub
and
movsb
mov
int3
sbb
xor
inc
xchg
jge
nop
mov
xor
push
adc
stos
ret
mov
sbb
int
mov
mov
frstor
std
push
inc
inc
orl
popf
addr16
popa
lahf
mov
push
inc
sbb
lcall
subl
mov
cmpsb
fwait
js
out
scas
outsb
or
in
sbb
sbb
and
dec
test
sub
sbb
xlat
in
cmc
lret
mov
and
adc
fsubp
lods
leave
std
stc
sbb
pushf
xorl
pop
inc
push
push
push
or
xor
push
mov
fisttpll
insl
test
aas
icebp
testb
pop
test
rol
pop
mov
jp
cmp
es
fbstp
aas
popf
icebp
lret
or
mov
lret
int3
loope
jne
and
loop
cmp
out
pop
push
pop
inc
and
scas
int3
and
scas
aas
jns
lret
mov
fwait
inc
dec
jecxz
int3
xor
dec
jno
inc
cmpsb
loope
mov
jb
clc
ja
leave
lcall
loop
stos
cli
add
mov
idivl
xchg
inc
cltd
loope
outsb
add
repz
daa
sub
dec
cmp
aaa
test
rorb
ljmp
pop
nop
and
adc
cmpsl
std
xor
add
mov
sbb
gs
and
pop
inc
inc
mov
pop
repnz
popa
test
rcll
mov
iret
mov
xchg
je
aas
test
test
aas
sub
and
add
negb
xor
into
fnstcw
pop
xchg
pop
lds
rcr
xchg
xor
es
ror
mov
fdivp
add
and
aam
lahf
push
and
ret
fcmovb
bound
pop
push
add
xlat
lret
leave
cwtl
pop
shl
or
inc
das
lret
mov
push
mov
sub
movsl
leave
push
call
mov
mov
jno
popa
push
addr16
out
mov
stc
add
push
lret
jg
mov
int3
mov
inc
arpl
xchg
mov
jecxz
pop
rclb
loop
repnz
lods
mov
out
into
xchg
mov
mov
outsb
xor
and
xor
xor
movsl
inc
insb
push
sub
add
aas
fsubrl
ret
andb
sbb
rcrl
mov
and
jo
pop
mov
loopne
icebp
add
cltd
jle
inc
pop
dec
pop
sbb
das
out
mov
in
addr16
jge
inc
lahf
sbb
inc
cmp
je
fsubr
jne
fdivl
out
rorb
mov
push
pop
pop
xor
mov
push
jmp
mov
lods
inc
or
daa
je
mov
rcrl
mov
cmp
mov
pop
popa
mov
inc
inc
push
push
adc
clc
ja
sahf
adc
test
negb
gs
lods
inc
subl
sub
leave
in
inc
push
lods
imul
mov
stc
or
inc
jmp
ja
xchg
adc
jae
pop
push
int
dec
ljmp
add
xchg
add
fmull
sub
icebp
mov
aam
je
or
es
mov
ds
ljmp
or
or
loop
and
clc
jnp
cltd
leave
out
dec
sbb
and
or
or
fs
xchg
jnp
lret
pop
divl
jmp
stc
dec
imul
or
jno
jno
jle
fs
loop
into
loope
sbb
gs
adc
nop
cmpsl
outsl
stos
aad
dec
sahf
cmp
scas
sub
jo
jg
daa
dec
lock
sub
mov
pop
and
inc
mov
push
adcb
sub
dec
ret
fnstsw
pop
int
lahf
jg
push
arpl
push
rcrb
frstor
stc
mov
sub
jge
ret
dec
xchg
icebp
aas
in
sbb
insl
push
sbbl
push
aas
mov
cmp
mov
aaa
adc
ljmp
cmp
call
push
jmp
out
ficompl
pop
test
out
fbstp
jns
adc
aas
and
ja
adc
in
inc
sbb
adc
and
jne
jp
rclb
lcall
and
cwtl
sbb
pop
jne,pt
iret
fildl
push
xchg
inc
cs
pop
push
xor
pop
add
jmp
arpl
push
mov
aad
je
leave
ljmp
fimull
in
repz
lahf
adc
sbb
repz
or
lods
push
aad
js
lahf
movsl
pop
push
movsb
jg
cmp
push
jmp
push
push
mov
notb
cmp
mov
int
fwait
inc
data16
jno
xchg
cmp
in
out
push
inc
cmc
lea
push
shlb
sbb
cmovs
sbb
push
mov
jne
in
div
cmpsl
mov
jbe,pt
nop
xchg
ror
mov
repz
sbb
and
adc
adc
fwait
adc
push
cmp
js
mov
mov
dec
jmp
sub
jl
std
popa
mov
or
ror
xchg
sbb
add
clc
movsl
push
and
jno
and
xor
int
sti
test
mov
cmp
and
pusha
mov
pop
pop
xchg
out
jmp
sti
pop
lods
mov
test
iret
roll
lcall
insb
lea
sbbl
and
add
fwait
xchg
enter
cltd
push
jbe
or
and
lock
xchg
fs
outsl
cmp
mov
push
loope
addl
iret
ret
loop
pop
rolb
mov
push
sti
push
xchg
push
jno
pop
lcall
inc
dec
insl
push
in
or
addr16
push
enter
sbb
jne
sbb
pushf
or
adc
sub
imul
ret
sbb
stos
adc
push
jmp
repz
add
fwait
inc
rclb
push
hlt
xchg
jecxz
scas
in
loopne
js
push
fadds
shll
outsl
mov
mov
mov
int3
adcl
xchg
push
pop
push
mov
jmp
sbb
ret
std
mov
sub
inc
push
lea
mov
ret
in
mov
jl
mulb
xor
jle
xor
push
cmpsb
push
shlb
lds
add
jmp
mov
mov
inc
aaa
adc
out
add
movsb
xchg
decb
cld
xor
jb
std
xchg
adc
dec
in
testl
jp
push
cmp
nop
jg
and
scas
cmp
pop
xchg
pusha
mov
cmp
adc
dec
or
inc
dec
lret
push
dec
cmpsl
cmp
push
mov
cmp
cmpsl
nop
faddl
xor
outsb
mov
and
push
jmp
cmp
push
jecxz
add
xor
enter
add
jecxz
popa
jno
aas
pop
mov
xchg
enter
xor
jmp
mov
mov
pop
jl
dec
outsb
jns
sub
adc
das
and
dec
je
sub
loope
xchg
cld
enter
gs
xor
cmp
sbb
and
jne
fs
mov
or
test
push
mov
in
sub
jnp
xor
dec
cli
mov
dec
lods
aam
sbb
xor
int3
and
mov
sbb
int
stos
push
or
stc
aad
std
test
push
call
icebp
adc
call
aas
and
mov
in
mov
addr16
rclb
pop
iret
jne
test
adc
hlt
nop
sub
filds
insl
sbb
sbb
mov
mov
fwait
push
push
jae
addr16
push
cmp
cmp
stos
cmp
jb
shrl
movsb
inc
mov
push
mov
pusha
xchg
xor
push
mov
push
push
xchg
adc
leave
vcvttsd2si
shlb
cmp
aas
inc
xchg
int
jle
lret
in
ljmp
in
movsl
es
dec
in
push
add
roll
push
shrb
cmp
hlt
faddl
movsl
pop
int
jne
push
int3
sbb
fisubl
add
test
xor
jno
int
divl
jb
inc
push
sub
pushf
xchg
icebp
and
xlat
xor
dec
shrl
cmpsb
iret
push
fildl
jmp
dec
mov
xchg
mov
inc
ljmp
testb
jnp
pushf
scas
clc
sbb
xor
insb
sub
in
push
icebp
fwait
scas
js
fstpl
mov
pushf
adc
xor
mov
enter
push
out
ljmp
sar
negb
mov
cmc
fldl
js
ss
dec
adc
imul
xor
in
dec
cltd
sbb
xlat
mov
movsl
and
pop
ljmp
and
cmc
add
push
dec
fisttps
dec
movsl
xor
or
mov
lods
int3
sbb
insb
cltd
cmpsb
fldl
sub
clc
int
pop
sbb
leave
insb
in
mov
test
inc
cmp
jge
into
addr16
popa
push
lock
cmp
cld
rcl
rcr
inc
sbb
mov
dec
adc
add
or
lret
ret
pop
aas
pop
imul
and
mov
fadds
add
cmc
es
xchg
push
sub
adc
pusha
xlat
jmp
daa
dec
mov
loop
in
ja
and
push
shrb
aaa
out
push
jl
adc
add
and
fidivrs
clc
sbb
lods
mov
ja
push
nop
jl
jo
and
xor
add
jns
stos
loop
add
dec
cmpb
gs
ror
frstor
jle
jne
add
out
call
jle
insl
mov
ficomps
stc
or
pxor
mov
pop
or
mov
imul
movsl
fdivl
adcl
sub
daa
xor
inc
pop
sub
or
in
mul
mov
lret
jp
fildl
repnz
pop
adc
jnp
mov
daa
push
push
adc
addr16
aas
fsincos
inc
sub
mov
cmp
and
mov
add
lret
pusha
fistpl
mov
mov
repz
sub
pop
and
aaa
nop
jl
out
pop
jmp
in
pop
add
jb
push
popa
rolb
fs
sub
subb
iret
mov
mov
fsubl
lret
inc
dec
adc
dec
jp
inc
in
mov
scas
push
decl
xchg
iret
cli
sbb
push
sbb
mov
pop
xlat
push
fs
and
shlb
inc
rcl
mov
pop
and
lret
pop
mov
push
mov
fcompl
mov
inc
add
xor
lds
stos
rorb
pop
fmul
scas
lods
fs
adc
jle
cmp
push
out
testb
push
adc
mov
std
addr16
js
lret
loop
lcall
fld
daa
aad
mov
mov
xchg
int3
and
loop
pushf
cmp
inc
or
loopne
fnsave
fidivs
or
adc
call
mov
inc
enter
dec
rorl
cmc
jmp
cmpsb
inc
sbb
pop
dec
fisubl
rcll
sub
inc
lcall
int3
adc
pop
int
sub
cmp
scas
fs
aaa
loope
adc
fnsave
mov
ja
leave
nop
and
test
les
rolb
sub
lods
push
insl
ret
add
outsb
adc
into
pop
orl
xchg
cmc
sub
sti
xchg
fwait
cmpsb
pop
fldt
push
add
adc
inc
push
dec
jp
mov
or
push
jge
nop
pop
mov
lds
xchg
pop
out
cmp
adc
notl
lcall
add
add
insl
pop
dec
jae
mov
test
mov
pop
mov
cmp
imul
fwait
dec
cmp
cs
push
sbb
testb
dec
cmp
jnp
dec
out
cmp
sub
mov
je
aaa
orl
mov
xor
outsb
lock
fdivs
jle
lds
pusha
mov
lock
inc
push
dec
daa
xor
loope
mov
mov
into
lds
test
les
lock
add
ljmp
xchg
pop
add
daa
hlt
pushf
inc
lcall
cmpsl
dec
mov
loopne
adc
test
sub
f2xm1
mov
add
inc
popf
rorb
mov
mov
jg
aam
imul
call
out
push
outsl
inc
xor
repnz
push
xchg
cwtl
pop
outsl
xchg
clc
xchg
sub
ss
push
sbb
les
jno
flds
xchg
push
loop
push
shrb
push
stos
add
or
inc
test
jecxz
cld
sti
xchg
and
cmp
mov
scas
mov
pop
mov
test
pop
inc
test
xchg
ret
xor
leave
fisubs
ljmp
shll
movsl
pop
into
mov
dec
cs
cmp
clc
push
stos
and
test
adc
add
xchg
sarl
out
and
jge
shlb
push
shr
inc
mov
pop
loop
fsts
int
push
nop
jg
mov
ds
cwtl
mov
stc
xchg
mov
in
lahf
mov
cmc
mov
cmp
ds
sahf
loopne
mov
es
out
in
adc
pop
fnstsw
clc
mov
cli
bnd
aam
mov
loope
out
in
cmp
adc
add
xchg
push
xchg
je
lds
in
dec
and
arpl
cmp
sti
fstpl
jge
jge
push
fwait
outsb
loopne
inc
inc
daa
test
mov
sbb
fiadds
icebp
fcmovne
pop
inc
sbb
mov
arpl
adc
or
subb
add
push
cld
push
xchg
leave
ss
out
pop
arpl
adc
fcomp
call
jmp
mov
jg
or
out
sbb
outsl
lock
push
xchg
jae
xchg
in
mov
iret
and
aad
test
jno
lea
inc
push
push
inc
fs
stos
add
cmpsb
cmp
mov
xlat
sub
mov
push
aam
fsubr
int
out
sbb
fwait
mov
pop
mov
xor
call
jle
dec
dec
out
pushf
push
out
xchg
adc
popa
lret
xchg
scas
pop
and
inc
andl
pop
dec
fidivrl
icebp
mov
push
xor
xchg
inc
xor
push
std
sub
popa
push
jmp
lods
and
jbe
pop
gs
and
jno
mov
sub
push
repz
xor
imul
int3
mov
xchg
mov
push
popf
ds
ror
or
lods
lock
dec
dec
movsb
or
xchg
ret
sub
rorb
or
lahf
cmc
xchg
mov
push
inc
push
js
les
ror
cltd
nop
icebp
arpl
add
lea
add
pop
mov
push
fnstsw
and
pop
mov
shl
testl
mov
sub
repz
js
xor
adc
and
jl
sarb
movsl
cs
or
lods
add
add
rcr
test
add
push
ret
cmp
pop
hlt
ds
pusha
cwtl
adc
mov
pop
in
adc
std
fnstsw
fwait
jg
xchg
aam
mov
dec
lods
sti
or
sub
pushf
and
fldt
fstps
jecxz
mov
pusha
add
sbb
add
push
pop
daa
inc
stos
insb
es
ds
xor
fwait
in
sub
dec
ljmp
adc
adc
insl
loopne
mov
push
ds
aad
jp
pop
repz
sub
fildll
mov
bound
sbbb
lods
mov
jecxz
scas
subb
mov
clc
pop
rclb
cmp
push
lods
cmp
dec
add
into
pushl
lods
fxch
xor
in
mov
mov
pusha
dec
test
sbb
ljmp
je
daa
sub
mov
or
addr16
cmp
divb
fistpll
dec
add
aaa
test
je
mov
imul
jnp
mov
pop
jo
mov
or
jp
andb
lahf
lds
adc
fucomip
or
pop
popa
sub
add
test
cmp
jnp
mov
fldl
cs
add
lea
push
jnp
cwtl
shll
add
leave
andl
mulb
inc
pusha
pop
jnp
inc
xlat
loope
xor
or
jbe
sbb
ljmp
cmp
jecxz
or
js
inc
xchg
inc
pop
sarl
sub
test
out
inc
sti
dec
lock
mov
call
sub
mov
mov
popa
arpl
mov
andl
out
jns
ss
mov
jo
mov
lcall
lcall
xchg
and
les
mov
or
dec
std
out
xchg
adc
dec
fbstp
sub
das
sub
fnstcw
xchg
xchg
cmp
leave
sub
fcomp
loop
add
mov
cmp
mov
popa
mov
xlat
xlat
insl
out
test
les
in
cmp
mov
ljmp
mov
sti
or
jbe
daa
xchg
xor
imul
test
nop
add
cmpsl
xchg
cs
daa
in
icebp
ja
push
aaa
sahf
cmpsb
test
jecxz
fadds
std
insb
test
das
cmp
pop
fsubrl
or
cmpsb
shlb
dec
xchg
int
mov
mov
shll
popa
outsl
mov
dec
mov
or
push
fwait
adc
inc
aas
add
hlt
test
out
cmp
data16
mov
inc
out
fwait
std
xor
test
mov
shl
mov
dec
stc
out
repz
stos
push
lods
mulb
jb
push
and
pop
js
pop
xchg
and
mov
mov
lea
xchg
out
icebp
ficoms
mov
imul
add
mov
sub
add
es
hlt
adc
bound
cmpb
xchg
test
push
jecxz
adc
adc
call
cmp
adc
push
mov
popa
repnz
add
sahf
leave
cs
jp
std
adc
mov
hlt
cwtl
xlat
push
jle
ret
jns
aaa
dec
mov
xchg
jl
pop
shlb
mov
adc
cmp
lret
mov
fidivl
add
adc
sub
inc
xor
stos
xchg
int
or
cmp
addr16
dec
ja
stos
jge
xchg
test
jnp
mov
stos
incl
jg
cld
cmp
dec
out
stos
sub
add
addr16
adc
pop
cwtl
sbbb
shll
vmwrite
xchg
jno
jno
fstl
test
lret
pop
mov
loopne
cld
mov
mov
hlt
xchg
bound
repz
sub
sub
divl
int
xlat
push
and
jg
lds
stos
pop
sbb
add
pop
cmp
shrb
and
lcall
mov
outsb
fisubs
pushf
movsl
add
rcrl
sti
and
dec
and
pop
subl
popa
pushl
lret
xchg
fisttps
inc
push
insb
ljmp
cmp
and
pop
inc
mov
or
add
out
push
lret
xchg
std
scas
adc
cs
lret
outsb
aas
stos
add
jo
pushl
xor
cltd
xchg
xor
xchg
out
dec
rolb
xchg
and
xchg
test
lcall
adc
rcll
lods
sbb
mov
out
bound
mov
adc
xlat
cli
flds
jp
adc
sahf
loopne
dec
lds
mov
or
mov
inc
xlat
cmp
mov
repz
jbe
fcoms
sub
sbb
mov
mov
rorb
popa
fnsave
cmp
xchg
shl
ds
cli
mov
or
stos
inc
iret
jmp
gs
fldt
push
das
xchg
adc
insl
adcl
dec
pop
adc
aam
push
mov
in
scas
mov
movsl
and
shrl
push
les
mov
mov
xchg
adc
loope
xchg
pusha
jns
mov
rcl
pop
dec
sahf
psllq
out
sub
lahf
inc
dec
inc
ret
jb
stos
adcl
and
mov
packsswb
mov
or
adc
out
insb
mov
mov
popa
sub
push
and
shl
fldt
out
inc
leave
adc
fidivrl
popf
in
jae
aam
adc
call
into
inc
mov
shll
push
pop
ficoml
inc
sti
lcall
cmc
aam
inc
cli
xchg
rol
filds
test
sub
adc
mov
mov
cmp
jl
pushf
jle
fldcw
in
push
xchg
fistl
ficomps
jle
jg
pop
sbb
and
insl
sbb
sbb
dec
mov
cmp
cmp
mov
add
push
cmpsl
cmp
xor
push
pop
sbb
lods
repz
or
test
xchg
pushf
or
cmp
jnp
pop
jle
add
test
loopne
rorb
orl
shlb
aaa
cld
adc
out
dec
jp
popa
ret
repnz
mov
pop
cmp
insl
jl
nop
loope
loope
fcmovnb
cwtl
mov
data16
inc
arpl
mov
out
sarl
loopne
add
stc
mov
call
sub
jg
out
add
push
pusha
xchg
xor
mov
mov
or
or
test
mov
shl
mov
mov
data16
or
sbb
add
mov
xor
or
inc
push
push
ljmp
ret
or
cltd
sti
or
andb
mov
scas
push
gs
xor
push
xor
lock
sub
data16
testb
pop
fs
cmpl
mov
mov
rcrb
int
mov
cvttps2pi
sarb
out
sbb
ret
adc
sahf
inc
movsl
cs
mov
int3
push
mov
mov
pop
sahf
or
or
arpl
dec
js
test
inc
rcrl
dec
adc
nop
sti
fs
dec
mov
adc
dec
xlat
jge
xchg
lock
push
cmp
jnp
add
cld
test
ret
or
lds
mov
std
out
or
sub
mov
sub
xor
adc
mov
and
jnp
aas
test
inc
dec
mov
xlat
jg
mov
lahf
movsb
cmpl
pop
or
call
push
and
insb
lcall
daa
sub
mov
and
mov
push
adc
jecxz
setge
mov
xor
imul
divl
sbb
adc
ljmp
push
divb
shlb
mov
outsl
loop
ret
cmp
inc
fildll
pop
cmp
mov
adc
idivl
cs
in
mov
aas
lods
data16
insl
jne
sbb
jmp
add
test
lcall
adc
jae
mov
incl
mov
aaa
imul
and
clc
push
inc
fs
je
xor
lods
fnstcw
add
roll
add
push
jb
jl
inc
mov
vorps
push
dec
cli
loopne
xor
cmp
or
mov
mov
jb
fdivl
movsl
imul
and
sbb
pop
fldcw
fsub
inc
jae
mov
jge
or
jnp,pn
add
lret
daa
addr16
or
imul
or
pop
insb
leave
mov
jl
test
cmpsl
fwait
xchg
test
inc
sbb
inc
les
enter
xchg
cmp
test
mov
ds
ret
or
push
lea
sub
cmp
lods
imul
and
mov
lock
dec
or
je
clc
push
pusha
bound
sub
add
mov
ret
subb
scas
mov
fildl
adc
sub
or
adc
mov
push
hlt
stos
icebp
lcall
mov
fdivl
xor
in
or
xchg
inc
jmp
xor
push
pop
filds
jnp
mov
inc
out
movntq
lahf
or
cmc
outsb
out
mov
jae
hlt
loope
add
jbe
loopne
testl
inc
popf
cmp
add
and
add
idivb
push
sub
or
js
jge
mov
pop
popa
push
daa
shr
subb
into
rcrl
aas
subl
ret
aaa
int
and
hlt
sahf
les
pop
pop
popa
push
mov
leave
sub
mov
ljmp
push
or
mov
xor
or
dec
pop
mov
test
xor
jle
sub
fimuls
sti
sub
loope
in
mov
cmp
addl
fbstp
push
dec
stos
xchg
lea
int
sbb
sub
jp
sub
adc
xor
test
movsb
imul
js
insb
and
mov
and
loopne
popf
push
xchg
popf
push
adc
in
jne
mov
fwait
cmp
sti
cli
xchg
or
mov
gs
dec
notl
jl
jecxz
ljmp
in
mov
push
dec
mov
xor
sub
iret
imulb
clc
and
aam
scas
adc
rcr
push
and
mov
pusha
xchg
jo
outsl
int3
or
std
mov
jb
out
push
ljmp
imul
dec
mov
sub
ficoms
jae
adc
sub
push
mov
icebp
and
lret
adc
rorb
sub
jl
pusha
xor
out
ja
adc
mov
js
jmp
loope
leave
cmp
lret
jno
aas
fwait
xorl
sub
xor
lahf
mov
cmp
adc
mov
pop
xor
lock
or
and
xchg
pop
fsts
out
iret
adc
push
push
into
rorl
dec
sub
ds
call
add
movsb
push
subl
into
inc
dec
icebp
lds
pop
ficompl
pop
clc
mov
mov
or
repz
xchg
push
sbb
out
out
cmpsb
sbb
sub
out
xchg
icebp
pop
movsb
sbb
add
ljmp
dec
jl
xlat
rorb
cmp
dec
cmpsb
add
dec
lahf
jge
call
sub
dec
loope
cld
mov
inc
push
cmp
je
loop
fldl
fisubs
in
pop
push
das
push
mov
aam
shll
xchg
movsl
cmp
imul
dec
jmp
dec
ret
int3
push
adc
xlat
pushf
movsb
je
push
lcall
inc
insb
sub
enter
lods
cmp
jmp
xor
lea
inc
in
jo
pop
popf
aad
shl
fcmovbe
pop
daa
nop
jecxz
sub
jge
jbe
push
xor
in
and
sti
outsl
cld
mov
jecxz
jge
jmp
outsl
rolb
stos
jne
lret
push
fistpl
lea
and
add
orl
mov
mov
mov
out
and
mov
inc
test
movsl
sub
insb
sub
mov
or
add
test
shlb
lods
add
call
add
les
and
scas
outsb
and
pop
pop
dec
mov
aad
mov
test
xor
call
shlb
lcallw
in
adc
imull
test
icebp
sarb
pushl
mov
jge
xchg
pop
leave
mov
sub
push
outsl
mov
cmpsb
jns
xchg
cmpsl
xchg
rcl
cmpsl
xchg
into
push
aaa
dec
push
xlat
or
inc
cmpsb
inc
fbld
cld
lahf
lea
in
adc
xchg
in
popa
mov
push
push
sahf
xchg
mov
jmp
cltd
cli
cmc
cmp
jmp
and
stos
mov
mulb
adc
mov
add
lret
call
push
shll
ja
inc
dec
clc
mov
sub
dec
xchg
inc
xchg
in
call
fstpt
dec
and
inc
nop
stos
shlb
sbbl
mov
divl
sbb
pop
mov
int
imul
xor
jmp
xor
ds
int3
jo
loope
clc
adcl
repnz
dec
xchg
pop
push
inc
jmp
enter
push
cmpsb
int3
test
mov
inc
add
or
adc
mov
out
push
lahf
xor
adc
xor
dec
jmp
outsl
jl
scas
push
out
pop
outsl
ret
fcomps
mov
into
sahf
divb
xchg
push
in
je
in
sbb
fwait
xchg
js
cmp
push
bound
jb
inc
mov
stos
inc
test
push
jle
insb
inc
cmp
lea
test
jno
xchg
adc
insl
dec
mov
stc
push
xlat
push
xor
jns
decl
icebp
cmp
test
xchg
xor
nop
adc
cltd
jne
add
jg
outsl
or
movsl
fcoml
pop
xor
xchg
or
add
pop
pusha
adc
fdivs
adcb
loop
enter
popf
or
jnp
push
in
std
dec
sbb
fwait
or
je
test
loopne
ret
test
insb
inc
mov
loop
scas
sub
leave
add
add
ficomps
lcall
push
sub
out
mov
mov
jecxz
jb
push
cld
xor
xor
lret
mov
loop
aaa
rcr
jb
add
and
imul
test
and
aas
stc
aas
jp
cmp
rorl
cmp
fbld
xchg
jmp
loope
aam
mov
fs
sub
inc
and
jne
mov
cwtl
push
pop
jge
xor
push
fmull
repz
rorb
int
push
or
imul
dec
add
xchg
rcr
dec
mov
adc
pop
xchg
mov
sub
test
inc
xchg
adc
pop
and
aas
lret
xchg
in
clc
dec
xor
jbe
sbb
into
icebp
punpckhbw
inc
inc
add
orb
test
push
xchg
add
loop
add
loopne
popa
push
ljmp
inc
repnz
in
rcrb
mov
iret
ljmp
and
cmpsl
cld
push
imul
loopne
inc
je
insl
mov
adc
addr16
mov
mov
mov
pop
sahf
cltd
jmp
add
out
xchg
push
imul
ds
in
add
cmp
add
ljmp
clc
gs
and
sti
jmp
sahf
xlat
fucomi
xchg
jbe
ljmp
aaa
adc
test
mov
mov
sub
jp
xor
inc
andl
ret
or
out
cmp
cmpsb
repnz
jno
in
shll
inc
jmp
jecxz
mov
inc
jbe
sub
jecxz
movsb
mov
adc
ret
or
int
pop
xchg
pop
test
test
xor
jg
test
insl
jae
das
rorb
push
scas
nop
inc
in
daa
loope
movlps
mov
inc
or
lret
sbb
push
fcmovnb
ss
stos
xchg
arpl
test
sub
mov
xchg
or
jno
xchg
and
gs
cmp
mov
push
xor
dec
repz
cs
movsl
pop
cmp
push
arpl
pop
pop
xlat
inc
fucomp
mov
std
js
ret
mov
mov
sahf
mov
mov
pop
lret
and
push
mov
or
add
das
add
cmpl
add
xchg
xor
adc
xchg
cmp
dec
js
insl
data16
adc
inc
jmp
cmp
scas
icebp
mov
jo
and
aas
jge
jns
je
call
dec
pop
pop
ds
push
push
xor
repnz
dec
mov
pop
test
mov
and
pushf
int3
adc
in
orb
xor
xchg
mov
add
add
add
jno
scas
movsl
cmp
scas
addr16
push
push
pop
pusha
inc
jne
pop
bound
movl
push
push
mov
pop
in
std
ficompl
call
imul
inc
fisubrs
lret
fcoms
scas
or
ss
jno
sbb
and
and
das
cld
fs
cmpl
in
test
mov
mov
xchg
xor
cmovne
loop
loopne
les
sbb
das
push
imulb
loop
aam
ficoms
sub
popa
inc
inc
jmp
psadbw
filds
scas
shlb
pop
mov
outsl
repz
dec
js
xchg
mov
adc
stos
pop
inc
inc
icebp
or
xchg
mov
test
call
fimuls
cli
sbb
ja
in
cwtl
cmp
in
xor
xor
and
popa
sub
cmp
jmp
pop
sub
and
cmpsl
stc
es
fmull
cltd
inc
mov
adc
or
inc
enter
or
lods
pushf
cmpsb
dec
push
push
insl
mov
mov
jbe
or
xchg
fbld
xor
jno
sbbb
fsubl
sbb
and
sub
sbb
sbb
mov
mov
jg
mov
mov
push
jno
out
insl
bound
mov
movsl
add
sub
jg
dec
and
aas
jnp
call
adc
bound
arpl
mov
mov
cli
sbb
add
in
lret
shll
in
push
push
mov
into
cmp
mov
ljmp
jp
lock
jnp
enter
daa
dec
xor
enter
sub
cli
sahf
cmp
add
pop
mov
push
add
int3
arpl
in
adcl
rorl
mov
mov
sub
cmpsl
stc
xchg
imul
inc
in
mov
sub
jnp
test
xor
sbb
push
ljmp
rclb
sub
lret
dec
mov
push
out
sub
xchg
inc
push
sub
mov
incb
jne
ja
xor
xor
push
sbbb
jb
hlt
add
mov
shl
mov
xor
insb
pop
mov
mov
std
mov
add
mov
dec
mov
mov
cmpl
data16
int3
mov
xchg
push
add
fiadds
popf
add
cmovg
aaa
das
movsbl
xchg
pop
and
inc
xchg
addl
xor
and
and
fldl
jecxz
cltd
push
shlb
lock
and
shr
pop
xlat
xchg
loop
sub
mov
hlt
pop
pop
mov
xchg
bound
xchg
dec
and
nop
cmp
out
popf
mov
lds
mov
enter
pop
adc
cmp
das
lret
fnclex
iret
inc
ds
cmp
push
push
jns
incb
add
jmp
pop
pop
leave
sub
jno
test
je
lret
sub
dec
sub
jae
xor
es
js
shrl
jbe
lock
xchg
daa
push
jne
lods
jne
or
xor
ret
sbb
jl
sbb
pusha
xlat
pop
fnstsw
lea
push
jb
jp
lods
imul
mov
sub
jl
lcall
mov
fstl
xchg
sbb
push
sahf
jo
icebp
and
dec
cmp
ja
or
push
push
jb
mov
xor
dec
lcall
out
lcall
les
fs
pop
test
aam
fistps
das
xor
xchg
push
aas
push
inc
cmc
push
test
adc
sbb
cmp
repnz
repnz
test
pushf
call
cmp
rclb
lcall
pop
xor
repz
sbb
or
lcall
cmp
popa
jge
rol
push
mov
es
xchg
mov
insl
rcrl
and
hlt
aad
jp
jne
pop
push
scas
sub
xchg
mov
into
pop
xchg
xchg
aad
test
mov
sbb
enter
pop
push
mov
ficoml
lcall
add
out
in
lock
leave
dec
push
ret
and
mov
lret
mov
clc
xor
xor
sbb
dec
popa
or
repz
pop
in
pop
mov
mov
push
jp
and
cmc
shlb
mov
sbb
repnz
sbb
pop
js
mov
adc
push
push
repnz
dec
jl
xchg
clc
loop
repnz
stc
addb
mov
arpl
testb
push
dec
fadds
or
mov
xchg
pusha
mov
add
jne
adc
mov
and
pop
jp
popf
mov
mov
test
and
dec
faddp
mov
imul
addr16
jno
stc
sub
ss
sbb
rorb
jno
and
lret
in
pop
notb
sub
add
pop
mov
pusha
dec
imul
jne
fwait
pop
not
sbb
add
ficomps
cmp
add
jmp
dec
cmp
repnz
iret
test
into
data16
cs
push
lret
jns
xchg
jp
adc
mov
xor
cmp
stos
subb
pop
xchg
or
mov
jb
das
mov
lods
pop
stos
je
mov
xorb
je
rcrl
lahf
stos
sub
xchg
push
jo
leave
pop
xchg
fimuls
adc
sub
mov
mov
xor
stc
lock
pop
sub
in
stos
xor
xor
pop
lea
sub
jo
test
into
arpl
cmp
xor
and
sbb
xchg
and
and
xchg
cld
lahf
mov
daa
iret
cvtdq2ps
arpl
aam
pop
push
in
mov
fnsave
int3
out
stos
inc
in
ficoml
jno
daa
jecxz
sub
lret
xlat
loopne
in
pop
and
add
cwtl
repnz
and
adc
and
mov
mov
mov
dec
outsb
lret
das
cmp
les
xor
jo
mov
mov
rcl
mov
gs
loopne
xchg
mov
mov
dec
pop
dec
sub
popl
or
jno
sti
mov
daa
pop
xor
mov
test
rorl
iret
and
pop
and
es
rclb
inc
mov
mov
mov
push
lods
insl
xchg
insb
int3
js
sbb
insl
jge
loop
push
lcall
mov
xor
jp
outsl
rcll
ret
andb
outsl
add
xchg
dec
mov
test
lods
mov
ljmp
daa
dec
sub
mov
loope
mov
xchg
loope
lods
in
dec
subl
jl
inc
or
sub
aaa
pop
pop
add
iret
mov
mov
cmp
subl
hlt
pop
inc
mov
mov
push
gs
cmpb
out
in
bound
mov
ds
addb
je
cmp
in
push
jle
mov
and
imul
push
or
mov
clc
dec
fnsave
stc
jp
and
out
push
push
aam
sbb
js
fidivrs
je
mov
sub
sti
pop
adc
frstor
out
in
push
repnz
imul
pop
fs
and
push
jg
rorb
cmpsl
jle
mov
xchg
sbb
xor
mov
clc
jns
mov
inc
psraw
xchg
pop
adc
ror
inc
sbb
out
lret
add
pushf
xchg
push
pop
mov
insb
xor
mov
mov
jne
shll
pop
das
add
int3
jbe
lahf
jge
repz
cmc
outsb
test
jle
into
and
jb
movd
shl
xchg
pop
or
je
or
sub
cmpsl
mov
mov
lock
imul
and
push
inc
xchg
and
scas
daa
adc
push
fs
mov
inc
push
ljmp
adc
jp
jns
cltd
lahf
rorb
mov
add
xchg
mov
cli
imul
cmpsb
pop
sub
or
push
in
shr
xchg
shll
dec
stos
test
jb
pop
mov
jo
lahf
test
shrb
mov
xor
add
pop
out
add
scas
pop
xor
mov
inc
stc
jge
push
dec
korw
je
data16
add
jno
ss
add
sub
pop
test
adc
mov
les
and
in
sti
inc
push
in
nop
xchg
mov
mov
lds
idivl
stos
jl
outsl
inc
add
int3
jecxz
ds
sbb
push
mov
ja
xchg
push
lds
inc
push
fwait
mov
test
push
pop
scas
outsl
stos
lcall
pop
sbb
mov
dec
jb
pop
mov
jo
addr16
dec
xchg
movsb
xchg
cltd
push
dec
push
ret
push
add
stos
mov
lock
loop
xchg
inc
mov
js
or
call
push
stc
inc
jle
js
ret
cltd
pop
xchg
mov
hlt
inc
inc
mov
lock
lea
mov
or
dec
cmpl
pop
pop
xchg
pop
je
mov
mov
testb
test
push
jne
mov
cli
inc
ljmp
mov
mov
pusha
int
push
decb
std
daa
xor
cmp
hlt
iret
jns
add
mov
xchg
imul
or
sub
push
rorb
cld
iret
push
sbb
mov
shll
mov
mov
aas
inc
pushf
jb
faddl
pop
dec
ret
sub
jae
inc
pop
mov
mov
arpl
adc
test
notl
adc
mov
scas
test
push
sbb
repnz
pusha
jbe
lret
mov
imul
xchg
push
add
cmpl
mov
dec
fisubs
adc
and
mov
mov
sub
jle
faddl
icebp
int
jg
test
clc
adc
mov
mov
sbb
jnp
or
or
mov
inc
mov
ret
xchg
cmpsb
sbb
push
or
cltd
and
data16
fs
mull
mov
dec
outsl
fdivrl
cmp
movsb
loopne
mov
xor
xchg
cmp
pop
shrb
call
jno
adc
nop
fsubr
push
jbe
mov
and
add
adc
out
leave
out
xor
cmp
jmp
test
push
repnz
xchg
push
dec
pop
adcb
jl
mov
movsl
lret
mov
mov
dec
jp
mov
test
insl
repnz
imul
lods
mov
dec
andl
xchg
lret
das
test
mov
cmp
jle
sub
mov
fidivrl
inc
and
sub
pop
iret
cltd
jne
mov
mov
out
mov
sbb
add
xor
mov
mov
mov
or
cld
xlat
out
adc
mov
hlt
ret
outsb
push
inc
pop
imul
fstpl
popf
pop
aaa
pop
lret
push
mov
dec
jmp
test
xchg
pusha
out
pusha
mov
add
xorb
mov
bound
cmp
aam
mov
mov
and
sub
fadds
bound
pop
sbb
popa
xchg
push
gs
mov
scas
jae
les
je
and
sub
incl
arpl
aam
sbb
lcall
enter
adc
add
jnp
adc
outsb
jge
lea
imul
fmuls
mov
push
jo
jecxz
jne
lret
lods
rorb
push
out
mov
jg
in
rol
fdivrp
and
sub
in
lods
mov
arpl
adcb
mov
push
scas
mov
cmp
fiaddl
sub
mov
xlat
call
or
js
xor
inc
mov
je
push
js
xor
stc
imul
popa
inc
cmp
and
xchg
aad
cmp
je
rcl
xchg
sub
and
dec
repnz
imull
mov
bound
adc
xchg
dec
fucom
mov
testb
stc
rolb
xchg
fdivs
out
outsl
or
push
and
lock
int
lea
and
in
pop
out
jmp
inc
mov
xlat
fldt
add
cmovg
mov
sbb
push
mov
mov
and
out
or
mov
test
push
and
cmpsl
cmp
std
in
mov
imul
mov
dec
cmp
and
push
loope
dec
and
cmp
and
sbb
mov
sti
lret
jns
add
mov
rolb
xchg
push
gs
xchg
sub
shll
popf
mov
xchg
js
in
inc
sbb
ret
cmp
mov
mov
aas
and
iret
int3
and
and
mov
sub
jl
xchg
jns
pop
xor
and
jbe
mov
mov
pop
lret
jp
out
add
pop
cmp
mov
roll
mov
adc
push
jmp
jmp
inc
ret
mov
jle
bound
les
sti
mov
inc
fidivrs
pushl
shlb
push
cmpl
insb
jecxz
fwait
xor
stc
data16
xchg
push
xor
testb
shrb
hlt
aam
in
sbb
insb
dec
mov
mov
cltd
ss
js
mov
or
pop
jb
mov
test
mov
adcb
xchg
sti
addb
mov
inc
fisttpll
and
jl
les
in
inc
in
rorb
arpl
add
xor
jl
aam
fsubl
xchg
pop
sub
add
lcall
loope
fwait
ljmp
push
fdivl
sbb
pop
push
outsb
leave
and
cmp
or
ret
jbe
lret
jle
cmc
dec
adc
mov
adc
pop
jmp
pop
mov
pop
xchg
dec
jge
mov
add
test
and
shll
pop
or
push
jle
pusha
mov
xchg
lea
xchg
mov
jg
clc
pushf
add
dec
aaa
xchg
push
add
test
stos
jae
pop
jecxz
push
jne
mov
lock
lds
aas
data16
mov
outsl
into
lods
and
lahf
sbb
popf
movsl
sbb
je
add
scas
rclb
sbb
push
add
push
in
lods
pusha
ret
xchg
xchg
xchg
inc
sbb
pop
cli
mov
jle
aaa
movsb
mov
cwtl
push
xor
js
and
jge
ja
lods
cs
std
iret
shlb
or
fbstp
repz
aad
and
je
xor
fcoml
sub
cmp
pushf
in
dec
jmp
pop
or
jg
adc
jmp
ja
xor
push
or
xor
or
pop
mov
mov
sbb
lret
mov
jmp
adcb
arpl
fcmovnb
addr16
xor
idivb
cmp
lock
mov
in
and
testb
loopne
push
pop
rcr
pop
mov
lret
mov
imull
xor
mov
sahf
je
subb
inc
add
pop
cmpl
xchg
pop
sbb
add
and
sbb
jno
push
outsl
ja
jns
mov
mov
test
lret
dec
pop
ss
dec
movsb
lods
es
add
int3
xor
call
cmp
jg
mov
int3
ror
push
sub
lds
jne
fwait
cmpsl
xor
cli
inc
pop
lds
push
jne
and
fsubl
fmul
xor
lret
mov
int3
jnp
dec
mov
lds
mov
bound
lret
lea
push
imul
nopl
pop
sahf
cwtl
cwtl
sti
xchg
mov
fcomps
xchg
stc
push
fwait
lret
add
rorb
repnz
inc
mov
sahf
je
shll
jnp
inc
sbb
jo
cs
mulb
rcll
xlat
jbe
aad
dec
cmpsl
out
or
clc
fadds
sti
and
sti
lds
rcll
adcl
shl
and
jb
clc
test
inc
mov
test
and
jl
push
movsb
xchg
push
mov
call
mov
loope
cli
sbb
inc
mov
mov
sahf
cli
lret
xor
flds
pop
sbb
enter
jecxz
mov
cmpsl
xchg
mov
mov
stos
mov
jne
rorb
jb
iret
cs
rol
push
nop
imul
mov
xor
add
mov
dec
xchg
shrb
andl
dec
arpl
lea
xor
push
out
mov
cmp
test
stos
aas
pop
movsl
repnz
mov
subl
test
xorl
out
xor
test
and
add
in
jo
sahf
ja
mov
pop
jnp
iret
jle
push
fcomp
jmp
cmp
inc
adc
mov
daa
sub
movsb
pop
std
stos
inc
fsub
mov
push
mov
gs
xor
ljmp
aam
jbe
add
out
into
outsl
fistpll
xchg
movsl
xchg
ss
sub
cmpsl
fdivrs
lods
rcrb
stos
addr16
dec
scas
test
dec
hlt
mov
les
aas
out
pop
test
shlb
add
xchg
lods
rolb
mov
stos
mov
push
aad
add
adc
std
push
icebp
push
push
push
xchg
jae
cmp
loopne
in
outsb
push
mov
jae
xchg
push
out
jo
push
jb
push
push
add
adc
pop
js
xchg
lods
pop
inc
sbb
jp
adc
lods
push
mov
enter
mov
ret
lods
jae
inc
pop
enter
repnz
into
jb
loopne
push
or
mov
iret
enter
mov
aaa
xchg
adcl
mov
sub
inc
jo
jp
mov
adc
fcompl
fdivrl
sub
adc
xchg
mov
pushf
fsubrs
pop
add
repz
mov
jae
ret
fwait
pop
faddl
sbb
adc
mov
repnz
dec
test
and
mov
lds
fisttpl
jp
mov
adc
cli
test
gs
pop
gs
xor
movl
in
loop
push
sahf
push
out
xchg
mov
add
nop
shl
loope
fadds
or
add
add
dec
and
fistpll
aad
imul
and
dec
jmp
adc
and
ret
pop
pusha
scas
pop
inc
push
or
jae
or
lcall
mov
lret
movsb
cmpb
dec
inc
scas
sbb
jmp
or
xor
dec
sbb
insb
bound
int3
jnp
add
in
push
lret
push
adc
sbbl
and
movsl
outsl
icebp
pop
pop
repnz
sbb
sub
ja
lahf
pop
negl
outsl
pop
add
and
mov
cmpsl
adc
popa
fnstenv
repnz
les
inc
enter
xchg
xor
push
sahf
sbb
inc
adc
sbb
cmp
mov
outsl
jge
xchg
int
push
add
xlat
test
cli
lret
add
push
clflush
mov
hlt
dec
lods
or
dec
dec
dec
push
inc
adc
adc
inc
lret
std
jecxz
ret
mov
rcrl
dec
int3
lret
test
repz
daa
repz
addr16
les
sbb
mov
mov
in
bound
cwtl
sahf
aam
pusha
aas
cltd
in
iret
loopne
leave
xchg
mov
rorl
sahf
dec
aad
mov
add
lret
cltd
shll
lds
lret
lock
lds
xchg
sarl
push
xchg
pop
sub
repnz
pushf
xor
jbe
ret
push
jbe
adc
cmp
sub
jne
sub
push
jge
fdivs
or
dec
std
sub
fmuls
xchg
repz
imul
adc
xor
or
shl
stos
xor
inc
test
fwait
mov
scas
shl
xor
rolb
and
enter
sti
scas
cmpsl
dec
sub
cmpsl
test
jae
ret
enter
fcoml
icebp
inc
lds
sbb
cltd
inc
out
in
lahf
nop
lret
jmp
cmpsb
loope
or
and
and
dec
push
data16
sbb
mov
xchg
pusha
xchg
xchg
cwtl
test
ds
fs
inc
cmp
cmp
aam
dec
mov
test
cmp
arpl
mov
jge
jge
cwtl
andl
sub
push
rorb
pop
add
nop
mov
inc
jb
cld
ljmp
in
fildll
dec
bound
jne
pusha
mov
and
jnp
scas
xchg
rcl
popf
pushf
cs
dec
jp
mov
mov
adc
in
es
sub
mov
into
push
test
stos
mov
std
mov
jno
and
adc
sbb
call
dec
mulb
xchg
pop
test
pop
movsb
xchg
nop
call
dec
in
xchg
pushf
insl
cs
gs
imul
xor
ret
and
pushf
mov
xlat
pop
das
je
insb
ss
mov
push
xor
je
xchg
jecxz
pop
jp
fildll
push
insl
xorl
mov
push
das
sub
cs
roll
bound
push
rcll
dec
das
or
out
movsb
sub
cli
dec
jae
mov
into
xchg
cmp
sbb
jo
popl
mov
insl
in
in
adc
int3
hlt
add
sub
mov
xor
and
test
idivb
test
pop
daa
lods
sub
test
das
sbb
lret
pusha
negb
in
imul
sti
insl
sbb
loope,pn
dec
pcmpeqw
fistps
movsb
xor
je
rcr
rep
ret
ja
pop
push
xor
sbb
mov
into
in
or
enter
pop
pushf
push
cmp
xchg
leave
push
std
popa
pop
test
subb
add
xchg
test
xchg
lret
sbb
xchg
jge
push
inc
clc
dec
push
cli
ljmp
add
dec
pop
adc
inc
and
clc
add
push
push
clc
imul
fisttpll
mov
in
pop
cmpsl
repnz
inc
inc
scas
adc
aad
cmp
adc
stos
dec
mov
aad
repnz
lcall
pop
add
mov
sbb
stc
sbbl
cmp
xor
ret
cmpsl
subb
cmpsl
mov
sti
sbb
jae
mov
mov
dec
test
pop
rcrb
lcall
add
fnstcw
idivb
out
mov
test
clc
push
mov
lock
lahf
jno
out
pop
jle
fwait
sbb
lods
outsl
mov
cmpl
mov
bound
loopne
test
or
mov
aas
and
mov
mov
mov
sbb
pop
loopne
sbb
imul
lods
in
ret
movl
add
cli
cs
popf
and
jno
jbe
ljmp
stos
pop
jg
lret
jns
add
add
pop
adc
inc
and
test
int
insb
jae
pop
dec
sbb
sbbl
fdivrl
push
es
sbb
cmp
jo
fwait
outsl
aad
push
sti
adc
arpl
add
ret
sbb
push
fldl
add
insb
lret
push
pop
pop
or
mov
out
sbbl
adc
lahf
icebp
jnp
mov
adc
sbb
inc
inc
fdivr
inc
subb
gs
sti
icebp
mov
fistl
es
ss
sbbl
fimull
pushf
mov
es
loop
enter
lods
in
or
shl
mov
in
push
push
xor
popa
cli
pop
jl
xchg
enter
lcall
xlat
jmp
loope
mov
mov
mov
inc
xor
imul
mov
mov
fidivl
jp
subb
fnsave
dec
push
andb
daa
sbb
push
and
xchg
int
pop
xor
adcb
out
or
aam
inc
and
push
cli
fistpl
cmc
popf
mov
cmpsb
mov
fimull
xor
add
mov
cld
fcomps
outsl
leave
sbb
int3
mov
sub
popl
fabs
fistpl
dec
mov
sarb
sti
ret
pop
sub
mov
sub
popa
stos
scas
out
mov
push
or
dec
mov
xorb
sbb
push
scas
fcmovb
enter
xor
daa
adc
push
and
inc
stc
and
in
push
or
add
xor
xchg
cld
subl
inc
daa
adc
mov
sbb
loopne
mov
lahf
cs
xor
mov
mov
or
pop
inc
mov
aad
cmp
jnp
cld
xchg
insb
into
mov
mov
sbb
out
in
and
mov
sub
jecxz
sbbl
es
mov
fisubrl
inc
adc
andb
rcl
adc
mov
xchg
add
add
dec
notb
daa
mov
add
outsb
repz
push
call
addr16
cld
or
dec
fsubr
xor
jns
cld
xchg
adc
add
or
into
dec
push
test
sbb
xchg
xchg
clc
in
jle
push
sbb
in
xchg
add
adc
outsb
and
pushf
mov
or
insb
xchg
imul
cmpsb
push
mov
jle
push
jecxz
iret
add
cmpsl
bswap
mov
mov
push
mov
cmp
inc
cmp
pop
int
cmpsl
in
dec
aaa
ret
outsb
hlt
mov
add
push
fwait
cmp
loop
fst
mov
and
sbb
int
aas
pop
push
lahf
repz
xchg
hlt
add
out
divl
fiaddl
or
cmpsl
bound
and
ret
adc
mov
jecxz
inc
adc
ret
lods
lcall
mov
adc
sti
mov
stos
pop
movsl
sub
push
cmp
jl
lea
or
int
addb
cmp
shlb
cmp
cmp
adc
push
hlt
popf
fisubs
enter
in
adc
cwtl
sbb
xchg
cld
out
push
loop
les
inc
sub
jle
je
mov
movsb
jmp
and
cltd
inc
daa
icebp
ljmp
push
cmpsl
push
cs
or
outsl
push
pop
je
jns
sub
inc
sbb
push
insb
insb
push
lret
roll
fisttpll
mov
adc
add
rcrl
mov
hlt
dec
push
std
xchg
cmp
jp,pt
pop
sbb
add
loope
js
inc
hlt
add
dec
dec
ljmp
cmp
lret
xor
mov
arpl
xorb
cld
fstl
lds
jns
mov
aad
push
inc
std
xor
push
ret
xor
dec
mov
jbe
test
cmpl
dec
and
dec
iret
sub
bound
or
clc
push
in
sub
sahf
xchg
push
shr
inc
fildll
repnz
lock
dec
lock
rolb
incb
mov
xor
jle
cld
dec
imul
inc
fnstsw
sub
and
mov
cmpsl
xor
jno
sahf
pop
inc
pop
cli
inc
mov
mov
mov
dec
int
jg
push
cmp
iret
leave
mov
inc
add
cld
pop
sbbb
es
push
adc
cmp
push
inc
sbb
and
sar
out
xor
adc
fstpl
dec
int
aam
push
xchg
cmpsl
or
add
xchg
in
jne
ss
repnz
dec
add
jae
sub
cmp
pop
mov
sub
daa
mov
mov
sub
out
sub
jno
xor
xchg
or
jno
or
aas
iret
pop
sbb
xchg
push
sbb
out
xor
psubd
imul
jecxz
sti
xchg
jb
jecxz
ret
lret
mov
paddsb
paddb
leave
add
xorb
mov
outsb
mov
leave
out
xor
adc
cmp
scas
out
mov
inc
push
sub
movsb
add
stos
adc
lret
push
call
inc
lds
inc
testb
mov
insl
rcr
pop
popa
sti
fs
push
pop
jne
cli
test
outsl
cli
cmp
vfmsubaddps
sti
jo
cs
rorl
and
cmp
scas
cmp
xlat
sbb
daa
add
out
cmp
insl
out
mov
sarb
mov
jns
jne
xchg
fidivl
cmp
jo
add
clc
sbb
mov
xchg
pop
adc
and
push
fstpl
push
lahf
add
add
int
into
jo
adc
or
bound
clc
sti
jmp
sbb
xchg
fwait
call
cmp
sub
cwtl
or
es
sub
cmp
fsts
xor
pop
fiaddl
fisttpll
inc
les
lock
cmp
xchg
cs
test
ret
sbb
cmp
cmp
movsb
adc
pop
imul
jle
leave
aam
out
fmuls
sbb
nop
xor
les
div
fadds
inc
add
add
dec
popa
mov
sbb
mov
pop
add
inc
push
cmp
shrl
popf
adc
cmp
lret
cmp
shlb
sarl
dec
into
xchg
sub
mov
inc
lcall
cmp
loope
pop
rcrb
adc
loopne
jne
leave
jb
lods
mov
or
dec
sbb
rol
mov
test
cli
repnz
testb
decl
movsb
lret
out
push
lcall
jns
push
mov
pop
xor
icebp
push
icebp
mov
mov
or
mov
push
push
movntps
dec
push
in
pop
or
xor
shll
stos
fwait
push
sti
enter
test
jo
dec
hlt
loope
or
movl
push
int3
cmc
mov
insl
int3
dec
and
jmp
pop
dec
dec
or
test
adc
insl
idivl
test
adc
adc
xchg
pop
sahf
jo
lcall
pop
dec
imul
fimuls
jns
sub
ds
push
mov
pop
repz
cwtl
xchg
stos
push
mov
cmp
adc
ljmp
adc
in
cmpsl
mov
xchg
and
outsb
xchg
gs
jmp
push
repz
ror
sub
xchg
xchg
scas
orb
push
aam
and
inc
daa
clc
mov
inc
sub
xchg
ja
add
dec
enter
add
xor
sahf
dec
cmpb
or
jb
jb
test
insl
adc
push
popf
xchg
add
cwtl
int
push
repz
enter
push
xchg
pusha
or
mov
pop
adc
jmp
loope
ret
mov
sbb
test
lods
loope
add
sub
fmuls
xchg
hlt
leave
push
sub
mov
push
fmulp
sub
adc
inc
xchg
inc
and
sarl
xchg
outsl
jmp
mov
clc
cmp
inc
stos
nop
cmp
scas
inc
jge
lret
cmc
jg
lret
cs
imulb
pop
pusha
out
hlt
inc
sbb
test
xchg
mov
xor
leave
xor
lock
mov
xor
loop
cwtl
dec
dec
xor
into
jno
mov
push
adc
les
mov
pop
outsl
pusha
and
sbb
pop
adcb
mov
lds
dec
inc
fwait
into
std
push
das
jg
jbe
mov
inc
imul
jbe
repz
ret
hlt
dec
mov
test
shl
jecxz
xor
pop
xorl
fldenv
dec
sub
mov
rcrb
mov
aam
in
cmp
mov
and
cli
repnz
enter
sub
lock
or
pop
sbb
push
imul
dec
inc
push
and
sarb
adc
push
cmp
pushf
fcoml
or
mov
jb
xor
jp
pushf
movsl
add
das
imul
sahf
cli
test
lret
sbb
push
pop
repz
dec
mov
dec
or
imul
and
push
push
pop
je
jle
mov
arpl
sbb
push
xchg
mov
ljmp
cmp
jbe
and
aaa
pop
std
xor
sbb
xor
ficompl
pop
imul
out
aaa
lods
icebp
cli
pop
lods
jle
cwtl
and
mov
xor
decb
mov
pop
ret
scas
pop
les
pushf
mov
cmp
push
dec
dec
sub
inc
mov
mov
es
sub
mov
and
call
sbb
jg
mov
div
adc
push
inc
jg
cmp
mov
push
dec
xchg
sahf
stc
sbb
jb
xorl
dec
jns
xor
fimull
xchg
testl
inc
gs
iret
sub
imul
sti
xor
inc
jle
leavew
mov
cs
push
cmp
push
adc
sbb
jge
push
js
shl
xor
aam
mov
or
jae
pop
xor
stc
pop
sti
cli
cltd
sub
das
and
mov
faddl
test
mov
xchg
mulb
into
pop
inc
sbbb
jbe
pop
ds
sbb
xchg
fcoms
push
enter
cmp
popf
cmpb
pop
and
lock
jl
jbe
jmp
cs
jo
and
mov
dec
add
xchg
fldcw
cwtl
push
aaa
or
mov
inc
addr16
aam
xor
dec
inc
mov
jmp
sbb
test
daa
mov
mov
add
jne
pop
in
es
outsl
nop
outsl
bound
loope
jae
scas
cmc
sbb
outsb
loopne
out
bound
popf
xor
fistpl
orl
or
pop
or
inc
daa
aam
adc
cmp
out
cltd
addr16
sti
jmp
lcall
mov
xor
jno
inc
xchg
std
inc
dec
fidivl
inc
jns
mov
dec
or
icebp
push
cld
pusha
push
dec
sbb
out
mov
mov
movsb
mov
mov
dec
mov
adc
shrl
push
daa
dec
cmp
dec
ljmp
lahf
ljmp
rorb
leave
mov
add
daa
xchg
iret
js
push
pop
dec
movups
jo
in
adcl
inc
jl
in
cmp
out
add
ret
imul
out
or
insl
fdivp
cmp
loop
lret
cmp
lret
sub
mov
add
pop
push
imull
iret
ljmp
push
jns
loope
cmp
aaa
testl
ss
test
loop
jae
faddl
out
lods
jbe
mov
mov
scas
jo
cmp
les
aas
dec
sbb
aam
outsl
jo
adc
int3
mov
mov
nop
cli
fdivrp
push
fdecstp
lret
pop
dec
test
mulb
jg
cmp
pop
dec
mull
subl
ror
lods
xor
mov
aaa
sub
imull
iret
testb
shr
add
mov
adc
jne
out
add
es
nop
sub
mov
pop
cs
pusha
jae
sub
mov
outsb
es
and
inc
rcl
loop
xchg
rcl
inc
mov
daa
test
and
xchg
je
sahf
sarl
xor
mov
mov
xchg
insb
and
movsl
sbb
sbb
sub
push
mov
adc
outsl
repnz
test
mov
int
je
scas
ja
insb
jno
inc
sbb
mov
cmp
dec
jg
sub
add
adc
dec
mov
imul
sub
mov
gs
lock
adc
mov
inc
ficompl
xchg
cmp
add
pop
jg
movsb
mov
add
mov
or
mov
in
ror
mov
add
push
xchg
xchg
cmp
loop
or
cmp
sbb
dec
pop
xchg
dec
fs
movsl
in
fmuls
xor
test
push
push
lret
or
call
push
dec
pushf
mov
divb
icebp
mov
jmp
fimull
int
xlat
mov
gs
xlat
sarb
pop
call
in
mov
jbe
dec
inc
sub
adcl
pop
mov
push
repz
lea
call
push
cmc
fcmovne
movsl
mov
xchg
cld
icebp
out
jnp
xor
loop
pop
inc
sbb
lods
inc
imul
mov
imulb
jne
fsub
ret
movsl
jmp
aam
add
pop
movsb
in
mov
xchg
jl
ja
inc
xchg
arpl
push
sbb
xchg
ljmp
sub
inc
or
pop
movzwl
jecxz
lcall
shrl
push
mov
xlat
loopne
call
repnz
lock
call
icebp
add
or
inc
adc
sbb
or
mov
push
dec
or
or
fwait
push
xor
in
mov
shll
or
rcrb
adc
out
subl
mov
aad
mov
xchg
add
call
fimull
test
call
in
pop
jl
fimuls
dec
push
dec
push
ror
cmp
out
sub
cwtl
push
jmp
mov
gs
fcmovbe
jns
dec
loop
mov
mov
test
xchg
xor
push
xchg
lds
push
jnp
xchg
xchg
sbb
lock
jns
lock
push
jo
iret
push
add
dec
jmp
inc
mov
js
repnz
lods
aam
stc
popl
jnp
out
popf
pop
aam
loope
js
mov
add
test
mov
mov
rcrl
jge
inc
mov
adc
sbb
push
outsb
lret
fimuls
mov
fisttps
pusha
pop
out
test
and
adc
sbb
pop
repnz
push
or
roll
pop
jnp
inc
jae
sti
pop
push
jg
dec
lret
and
adc
icebp
jle
jge
arpl
repz
cs
das
lret
mov
xchg
mov
push
sbb
fwait
or
xchg
xchg
jl
test
mov
rcl
iret
or
xchg
or
pop
push
mov
xor
and
mov
sbb
mov
cwtl
jne
mov
lret
dec
dec
cmpb
shll
out
push
out
mov
filds
js
xchg
push
sti
cmp
int
mov
icebp
js
in
mov
push
cmp
mov
data16
enter
lahf
loop
mov
decb
cltd
inc
adc
pop
bound
cmp
cmpsl
jp
cmpsb
ret
dec
sbbl
cmp
inc
lds
std
xchg
pop
or
popf
incb
mov
adc
cmpsl
sbb
clc
or
gs
xor
push
aad
push
sahf
or
xor
sbb
mov
in
cmpsb
ss
sbb
adc
or
mov
sti
cmp
sub
cwtl
sbb
outsl
mov
cmp
dec
mov
sbb
fisubs
std
adc
inc
mov
cmp
mov
mov
cli
jg
fisttpll
add
cli
add
adc
lret
shlb
push
or
pop
push
mov
sti
jne
adc
pop
cs
in
es
gs
jp
lcall
cmpsb
adc
push
clc
aaa
aas
enter
jge
scas
xchg
mov
stc
xor
mov
ljmp
movsl
test
dec
dec
push
inc
xchg
lock
in
cmp
mov
in
out
fwait
cmpsb
in
lcall
lret
mov
mov
jno
mov
inc
mov
jmp
and
mov
movsl
inc
jno
mov
aaa
sbb
stos
scas
pop
movl
sarl
mov
rorb
add
shrl
cmpsb
pop
inc
scas
sub
imulb
and
push
popa
adc
adc
aad
sub
xor
fiaddl
ja
testl
xor
sub
shll
cmp
std
shll
jge
pop
mov
jmp
aaa
jle
cmp
jae
sub
insl
mov
mov
test
in
arpl
jae
pushf
loopne
idivl
in
aaa
pushf
in
sub
icebp
shlb
and
cmpsl
or
rclb
jge
loopne
frstpm(287
adc
cmp
xor
nop
loop
pop
mov
add
flds
lret
bound
scas
dec
mov
lahf
ret
out
jb
insb
xor
mov
cmp
add
sub
mov
adc
ret
and
inc
out
sti
sbb
int
shrb
sahf
cmp
data16
pop
push
cld
mov
xor
arpl
mov
jle
ss
mov
sbb
adc
push
mov
mov
cmp
adc
sbb
stos
xorl
test
fsubr
xchg
in
rcrl
xchg
adc
jmp
push
push
ss
repnz
push
lahf
shll
fcomp
cmp
xchg
pop
mov
sti
rorb
cltd
or
andb
mov
loopne
icebp
add
sub
cmp
sti
fcoml
mov
jb
sbb
insb
lds
push
repz
test
rol
clc
mov
rorb
or
ror
aad
js
pusha
jno
cltd
dec
adc
sub
cld
sbb
stos
cmpsb
adcb
gs
xchg
push
dec
fnsave
sub
sti
test
mov
jnp
popa
repnz
and
aad
mov
sbb
das
push
enter
and
xchg
jb
lods
push
das
lods
fwait
cld
loope
fdivrp
mov
pop
push
out
sbb
cltd
mov
pop
or
push
xchg
pop
push
lock
cmc
pushf
ss
pushf
pop
jmp
xor
test
jmp
mov
in
adc
popa
pop
mov
stc
fucomi
inc
add
cmc
add
loopne
inc
iret
xchg
into
jle
stos
inc
jl
nop
inc
xchg
xchg
cmpsb
lock
mov
popf
xor
ljmp
outsl
mov
in
mov
std
loop
lods
mov
insl
or
or
add
dec
lock
movsl
and
cmp
sbb
add
add
movsb
addl
scas
sbbl
es
jle
add
mov
lret
cmp
lret
jp
ret
add
mov
xchg
aam
add
ljmp
push
mov
inc
fisttpll
mov
scas
mov
les
cltd
aas
or
jae
mov
push
scas
mov
sub
ret
sbb
lods
mov
lcall
iret
mov
lcall
inc
fwait
sub
mov
adc
jmp
xchg
mov
test
xchg
rcll
icebp
mov
mov
lods
mov
push
test
ss
push
xlat
arpl
mov
mov
int3
mov
roll
loopne
or
jno
xor
arpl
outsb
loopne
or
dec
out
jmp
adc
scas
xchg
push
sub
mov
mov
inc
cmp
and
decl
repnz
or
cmc
xchg
ret
pop
cmpsb
loopne
mov
adc
jp
jb
ljmp
ftst
rcr
outsl
or
xchg
and
js
mov
cld
dec
loope
xchg
fcomps
pushf
lahf
xchg
stos
jmp
es
in
or
aam
inc
or
push
push
std
pop
loope
cmp
mov
dec
js
sub
xchg
add
adc
inc
imull
xchg
jae
mov
xchg
ja
xchg
fsub
xor
lds
add
cmc
jmp
push
ss
xor
nop
scas
inc
mov
push
jae
sub
in
shlb
inc
enter
cmp
sbb
push
lods
bound
sub
loopne
xor
inc
rorl
mov
mov
dec
fsubs
out
add
sti
mov
sahf
es
mov
pop
dec
and
push
andb
ljmp
int
int
mov
cltd
pop
lcall
pusha
and
adc
test
leave
jp
xchg
or
pop
cmp
pop
jp
xchg
jae
jb
scas
ret
aad
dec
jp
cltd
xor
sahf
jl
pop
jecxz
into
and
testl
adc
adc
clc
lock
inc
xchg
sub
jo
call
int3
scas
int3
fmuls
xchg
jle
xchg
pop
mov
or
call
sti
mov
int3
pushf
adc
ror
xchg
jl
dec
jb
jle
adc
aaa
loop
aam
sbb
mov
mov
loopne
je
outsb
loope
push
mov
hlt
xchg
mov
xchg
and
add
stc
fsubs
cs
dec
sub
repnz
popf
ja
jb
rcll
jg
mov
insb
pop
adc
testl
mov
jl
test
shrl
aas
pushf
mov
mov
add
aad
mov
mov
sub
sbb
pop
xor
scas
jno
jle
and
push
outsl
scas
and
out
mov
sub
inc
dec
pop
rcrb
mov
adc
mov
xor
test
mov
aam
andl
dec
mov
jl
bound
into
add
gs
nop
and
pop
sbb
cmp
stc
mov
jno
outsb
sahf
mov
mov
int3
xchg
fildll
or
adc
mov
ja
stos
inc
movlps
push
ror
jg
mov
cwtl
jae
test
sahf
inc
rcrl
scas
add
leave
ret
mov
shl
push
jg
mov
inc
in
sti
push
sbb
nop
cmp
add
jns
xor
clts
xor
jae
outsb
mov
in
into
add
cmpsl
in
shl
inc
arpl
mov
mov
cs
dec
popf
xor
and
xor
lea
cmp
mov
jl
lret
out
xchg
cmpsl
push
fdivr
push
lret
jb
dec
pop
mov
xchg
add
mov
add
and
or
inc
stos
lds
push
dec
mov
mov
xlat
aas
mov
popa
jl
or
fistps
adc
jbe
adc
cld
sbb
in
ret
ficompl
shll
icebp
mov
push
mov
bnd
les
int
dec
into
cmp
pop
xchg
lret
dec
popa
shl
push
mov
jnp
in
cwtl
test
out
cli
cltd
pop
dec
inc
adc
ss
sarl
sahf
jge
cld
push
jg
test
idivb
mov
lret
mov
dec
xchg
mov
or
enter
mov
in
sub
xor
and
push
pop
push
sub
cltd
hlt
adc
pop
push
add
call
mov
dec
arpl
stc
and
icebp
jp
sbb
jp
lcall
ja
sbb
sub
mov
faddl
outsb
xor
jno
xchg
jnp
insl
shrb
xlat
fs
jns
pop
lret
outsl
xchg
nop
sub
push
cli
or
mov
popf
cmp
ret
pop
movsl
sub
aad
movsb
sub
cmp
mov
jb
movsb
fstpl
xchg
pushf
daa
fidivrs
sbb
add
outsb
testl
lods
mov
call
mov
cltd
pop
sub
adc
mov
xor
cld
rolb
inc
jno
ljmp
sahf
sub
sbb
xor
add
mov
lea
sub
call
insl
or
roll
ds
xor
in
inc
jmp
hlt
shrl
lahf
imul
arpl
fwait
jmp
sbb
movsb
cmp
jae
jo
pop
jns
pop
fistl
pop
icebp
xor
shl
out
cmpsb
and
hlt
andl
sarl
arpl
out
jb
jae
stc
sahf
sbb
adc
mov
jmp
icebp
outsb
icebp
cli
insl
sbb
and
push
sti
fsubs
fs
les
ljmp
xor
cmc
ljmp
ja
mov
insl
lea
loopne
roll
icebp
inc
mov
dec
dec
orb
shlb
xchg
daa
aam
inc
cltd
push
jns
lods
xor
mov
mov
out
lock
sbb
xchg
enter
sarb
pop
gs
push
mov
adc
xchg
jmp
icebp
push
adc
push
inc
insb
mov
jge
add
lea
and
or
insb
fwait
test
sub
inc
add
cld
xchg
in
mov
adcb
xor
mov
jnp
xchg
sarl
arpl
mov
or
jae
add
dec
jl
mov
xor
mov
xlat
inc
arpl
lock
and
aam
sbb
xorb
es
lds
lar
jmp
push
popa
imul
sub
fldl
mov
ret
and
jecxz
jge
clc
call
mov
bound
or
cmc
jg
lret
sub
add
js
push
idivb
add
sbb
push
clc
mov
push
inc
int
test
jno
mov
insb
sti
mov
sub
fistpl
das
dec
jle
dec
xlat
insb
cmpsb
bound
add
insl
dec
lock
outsb
iret
cwtl
int
gs
add
lret
lahf
aam
sub
dec
leave
xchg
sbb
and
lret
sub
les
andb
push
icebp
adc
jmp
out
xchg
xchg
sub
jbe
popf
lahf
stos
test
add
cli
xor
mov
pop
call
repnz
aam
arpl
dec
pop
stc
dec
and
cmp
sub
inc
xlat
sbb
cmp
in
ljmp
scas
movsb
in
or
pop
sbb
xor
sahf
in
lock
dec
pusha
out
pop
mov
xor
xchg
jne
out
mov
fists
mov
mov
lret
pop
cmp
pop
xchg
push
cmp
xor
cmpsl
and
aad
jmp
test
in
or
lds
orl
aas
inc
xchg
mov
test
mov
int
ljmp
pop
jle
rolb
popa
jp
outsb
inc
dec
inc
ret
sbb
mov
jg
xor
xor
mov
cmp
jnp
jl
ficoml
out
test
xor
adc
push
or
daa
mov
jge
lods
popa
jbe
adc
fdivrs
adc
aad
adc
test
fidivrs
mov
pop
sub
xchg
or
push
lods
jmp
adc
add
imul
insl
out
idivb
add
sub
dec
pop
fsubrl
cmp
aaa
aas
mov
cmp
test
stc
jns
mov
enter
filds
repnz
nop
sub
hlt
cmp
and
jne
push
jae
imul
mov
dec
sbb
xchg
pop
ret
push
or
mov
dec
lcall
mov
out
rcl
fistl
int
dec
rorb
add
and
mov
in
scas
add
adc
inc
mov
clc
adc
dec
in
mov
popa
daa
and
sub
out
pop
sub
cli
mov
lret
push
cmp
int3
fs
jne
mov
leave
pop
lods
rolb
call
add
ds
idivl
stos
push
jb
enter
inc
cmp
push
fcoms
das
pop
push
adc
imul
sti
mov
mov
pop
add
cmpsb
or
push
lret
mov
dec
daa
es
rcrb
lock
xchg
daa
sbb
mov
out
aaa
mov
mov
jne
mov
cmp
movsl
xor
adc
xor
loop
lcall
mov
jno
xchg
testb
jae
bound
int3
fildll
in
std
loope
std
inc
adc
add
sarl
movsl
loope
sub
sbb
xor
jge
xchg
rclb
rol
adc
filds
dec
insb
mov
dec
xor
xchg
push
cmp
push
dec
adc
ja
push
insl
push
xchg
faddl
pop
cld
pop
jl
jno
mov
stos
cltd
cmp
sub
outsl
repnz
roll
mov
outsl
push
push
adc
daa
aaa
push
ds
add
out
mov
ret
ficompl
cmp
sub
cmpsb
xchg
push
jae
lea
xor
mov
mov
push
mov
loop
ljmp
std
pop
push
into
aam
and
ret
inc
or
cs
mov
adc
xor
insl
fsubs
test
cmpsl
dec
adc
push
jecxz
in
pop
xor
daa
fdivrl
call
sahf
shr
cwtl
icebp
pusha
add
push
lods
push
leave
aad
ja
pop
stos
mov
sub
lcall
or
push
pop
dec
adc
repz
jo
lret
je
popa
stos
aam
fcoml
and
bound
adc
incb
lahf
jge
movsl
sub
xchg
push
pop
xor
and
ss
gs
outsb
mov
dec
ljmp
subb
jns
into
cld
pop
sub
shrb
int3
icebp
adc
clc
inc
sbb
cmp
pop
add
bound
hlt
fldcw
inc
push
ret
jns
cli
dec
jo
cmp
pop
fldenv
jae
sahf
fists
jl
popf
sub
or
and
mov
mov
rcrb
nop
push
fidivl
cmp
sub
pop
lods
dec
js
icebp
add
and
aad
jmp
cmp
lret
xlat
nop
ss
or
cs
or
xchg
xchg
out
jl
iret
aam
add
jnp
cmc
outsb
lret
outsb
mov
jle
test
hlt
xor
into
cld
push
lods
push
insb
xor
xlat
push
mov
add
pop
xor
mov
popf
pop
mov
movb
pop
sbb
ret
sbb
test
xchg
mov
inc
mov
ret
out
or
and
jecxz
fisttpl
mov
mov
out
dec
pop
sub
popf
repz
in
arpl
push
pop
jb
ds
mov
xor
dec
jecxz
rol
test
mov
fcompl
mov
push
ds
cwtl
repnz
fs
shlb
xor
sub
enter
fdivs
lcall
negb
push
sbb
in
add
rep
push
or
outsl
aad
add
call
xchg
inc
jl
mov
xchg
ja
jge
inc
inc
sub
rcrb
jo
xchg
xchg
sub
cli
sub
push
and
scas
cmpsb
ret
push
xchg
pop
mov
imul
orl
xchg
jge
jg
gs
sub
fst
jle
movsb
cld
jo
gs
punpckhbw
es
testb
fwait
shl
in
mov
rol
dec
jle
rol
repz
jns
inc
xlat
fs
jns
in
adc
mov
sbb
inc
add
mov
xor
mov
sub
lds
lods
xor
ret
mov
dec
lcall
inc
xor
inc
inc
lea
jl
divl
sub
imul
mov
xor
bound
dec
mov
dec
xchg
or
pop
test
clc
into
fs
or
cmpsl
or
rcrl
lea
repnz
push
in
dec
cli
add
and
nop
mov
sbb
rcll
adc
add
pop
jae
out
outsb
xor
outsb
mov
xor
dec
xlat
in
inc
or
test
sub
stc
pop
xchg
add
sub
pop
inc
aaa
push
pusha
in
inc
and
and
shll
lahf
cmovo
out
inc
mov
cmp
and
in
insl
in
mov
repz
shll
push
sbbl
ret
mov
xchg
out
and
xlat
ret
loop
shlb
fdivrp
mov
fidivrl
imul
sub
dec
inc
mov
and
sbb
scas
cld
mov
fwait
scas
sbb
jbe
test
jbe
pop
ljmp
clc
gs
sub
popa
outsl
bound
cmpsb
adc
mov
push
hlt
xchg
sti
ss
xor
mov
xchg
rcll
fsubrs
cmpsb
pop
pop
std
mov
lea
sahf
aaa
dec
cmc
inc
mov
dec
xor
lds
push
inc
imul
adc
lret
adc
arpl
mov
pusha
sub
pop
shr
movsl
mov
cmpsb
mov
movsl
insb
std
cwtl
clc
push
lods
sub
lods
jbe
mov
cmpsl
mov
xor
jecxz
mov
shrb
push
sbb
lods
sub
and
sahf
sub
xchg
lret
xor
fisttpl
pop
and
in
hlt
adc
jnp
into
push
lds
clc
and
sbb
loop
lods
cmpsb
jg
dec
jmp
lea
das
sbb
addr16
mov
pop
mov
and
enter
push
xchg
sahf
jne
cmp
push
adc
enter
add
or
imul
ficoml
adc
jbe
inc
jecxz
arpl
xchg
add
pop
sub
push
repz
pop
sub
xchg
pop
sbb
aam
popa
lret
xrelease
ss
outsl
std
jg
stc
imull
push
test
jecxz
and
push
mov
dec
mov
aaa
jp
adc
sarb
sbb
imul
sbb
xor
bound
fs
jg,pn
test
xor
daa
cltd
arpl
or
push
add
mov
lock
mov
and
negb
fldcw
ret
cmpsb
inc
aaa
sbb
push
outsl
pop
jmp
mov
dec
sbb
fwait
cli
stos
shl
jne
or
movsb
jg
aad
mov
fs
mov
popa
inc
pusha
ja
inc
cmp
testb
aas
adc
adc
lock
ljmp
in
out
and
outsb
mov
fwait
cmp
in
test
push
mov
lret
push
enter
mov
xchg
and
sub
jbe
mov
je
push
popf
iret
ja
fiadds
cmp
rcrl
inc
rcll
ret
mov
jg
popa
cmpsb
mov
pop
or
add
popa
inc
cmp
ljmp
enter
jmp
pop
call
lcall
lret
xchg
xchg
push
mov
imul
mov
adc
xchg
movsl
and
sahf
dec
push
xchg
faddp
cmp
jle
movsl
mov
mov
lods
test
lods
or
and
sub
lret
js
out
adc
jbe
mov
sub
sub
fimull
out
test
cmpsb
inc
sbb
out
sub
or
int
fwait
add
addr16
cmpsl
test
testb
in
xchg
sub
ss
dec
jg
inc
xchg
ja
flds
js
push
insb
pushf
and
xchg
mov
mov
dec
mov
test
xchg
xor
in
cmc
adc
es
insl
push
push
cld
fstps
lahf
jo
fiaddl
adc
pop
pop
mov
fstpt
cmpsb
rcrl
es
int
imulb
clc
and
test
mov
ss
int3
js
in
cltd
in
fcoml
adc
shlb
int
xchg
sbb
pop
mov
cmpb
rclb
in
ja
push
cltd
ja
clc
hlt
and
dec
and
test
dec
mov
ss
push
jnp
inc
popf
cmp
data16
in
pop
jge
mov
or
insl
xchg
mov
lds
inc
aaa
pop
xor
xchg
push
sbb
xor
push
ficoms
xor
sub
jae
mov
mov
and
lods
adc
jmp
bound
in
sub
mov
push
sub
or
inc
add
and
lahf
es
cmpsb
popf
pop
stos
cmp
mov
pop
pop
das
mov
jp
or
sub
or
jns
mov
mov
mov
fldcw
jl
fbstp
push
and
jo
adc
jp
xchg
mov
lods
outsb
sar
sarl
mov
cmp
jo
mov
push
jae
clc
push
imul
sbb
gs
or
fldenv
and
cmp
jg
xchg
loop
stos
les
mov
popf
push
xorb
es
pop
push
jbe
and
shll
aam
push
or
inc
scas
clc
and
pop
mov
or
cmpb
xchg
inc
fcomi
adcl
inc
cltd
push
adc
xchg
fwait
rorl
sub
sahf
movsl
rcrl
fsubs
cmp
leave
aas
shll
jno
orl
inc
sahf
xor
icebp
mov
test
sarl
sbb
push
add
xor
stos
mov
xor
mov
add
repnz
push
jge
pushf
jo
add
andb
jle
and
push
jmp
inc
jle
test
cmc
movsl
dec
jae
fistpll
test
mov
movsl
mov
adcl
std
jnp
out
inc
jmp
cmpsl
pop
lods
mov
out
mov
scas
and
das
sbbb
and
andb
enter
sub
dec
fisubl
add
jecxz
in
sbb
icebp
lods
in
ret
mov
xchg
pop
jne
imul
xchg
repz
roll
movsl
test
pop
out
or
clc
jnp
test
adc
xchg
fcompl
cmp
dec
movsbl
adc
cmpb
mov
xor
push
pop
outsl
in
or
hlt
arpl
rclb
push
jb
arpl
sahf
dec
mov
xchg
xchg
sbb
mov
xor
adc
sbb
out
loope
xor
int3
mov
mov
and
enter
dec
ret
xor
mov
mov
int3
sub
jg
mov
fldenv
cmc
inc
and
insb
vmovss
into
mov
lock
sbb
pop
xor
decb
and
movsl
iret
pop
xchg
dec
sub
test
dec
dec
push
dec
scas
aad
adcl
cmpl
sub
scas
adc
loopne
call
adc
cli
inc
in
adc
pop
fistl
jle
xor
push
ret
xlat
and
out
and
sbb
cmc
push
add
bound
and
mov
cmp
push
lcall
mov
adc
xor
or
out
inc
jb
xor
popf
or
push
lcall
movsb
add
mov
mov
mov
sub
mov
insl
adc
shlb
add
or
fs
cltd
xor
mov
xchg
fwait
adc
push
jl
imul
stc
jg
hlt
jl
mov
inc
es
out
inc
dec
loopne
ljmp
mov
jl
push
shl
movsl
push
lcall
pop
loop
sbb
mov
aaa
out
roll
dec
pop
inc
adc
cmpsb
sub
lods
lock
clc
addr16
xchg
jno
enter
out
pop
mov
mov
jp
xlat
lcall
inc
mov
aaa
sub
xchg
sub
mov
xchg
and
sbb
gs
dec
push
sub
mov
lea
mov
popf
jno
adc
test
dec
jno
mov
adc
int3
inc
ss
or
and
dec
int3
ret
xlat
push
jbe
push
ret
mov
sub
dec
jp
inc
pop
xchg
ljmp
inc
push
out
mov
and
outsl
xchg
daa
adc
jp
cmc
clc
push
jmp
out
cmpsb
pop
insl
push
cmp
mov
cmp
test
jb
xchg
mov
repnz
sub
jle
xchg
inc
or
fdivrs
cltd
sbb
or
sahf
repnz
ja
mov
xor
pop
mov
mov
jmp
mov
insb
jecxz
push
sub
dec
mov
lods
lahf
xchg
popf
test
insb
xchg
imul
notb
mov
and
movsl
or
xchg
xchg
lcall
push
ja
cmp
lcall
jle
or
mov
push
in
or
dec
mov
dec
mov
mov
jae
cltd
jge
mov
pop
jo
inc
xchg
ja
cmc
pusha
jbe
js
js
dec
xchg
outsb
mov
cwtl
movsb
daa
sbb
sbb
jo
cmp
imul
mov
jg
lret
or
xor
ds
sub
xchg
mov
popa
adc
mov
test
xor
lds
aad
inc
cmp
cltd
icebp
cmp
out
call
jg
pop
daa
shlb
xchg
in
add
ja
mov
scas
and
jb
daa
loop
aad
testb
dec
sub
scas
fldcw
pop
aad
push
aaa
sahf
push
sub
cmp
adc
cs
stos
sub
cmpsb
fs
shrb
mov
addr16
iret
push
fcoms
fisttpll
xchg
and
mov
xchg
mov
gs
stos
insl
clc
cmpl
fsubr
lahf
addl
push
sub
int
test
sbb
mov
cmc
repnz
bound
mov
orl
shrl
ja
stos
and
js
xlat
scas
sti
lret
data16
jmp
ja
fwait
dec
rcrb
lret
mov
cltd
pusha
mov
adc
pushf
test
xchg
stos
cmpsl
ret
loop
mov
orb
sub
sub
and
daa
shlb
mov
div
inc
sahf
clc
push
testl
adc
ret
adc
cmp
push
or
in
into
inc
mov
dec
pop
pushf
jne
dec
rcrl
stos
xchg
call
pop
shll
xlat
lods
add
pop
test
sub
pop
ret
sbb
add
call
stos
dec
ret
loopne
cwtl
jns
mov
mov
jne
or
daa
jecxz
nop
dec
pop
lret
mov
pop
lret
sbb
pop
cmpsb
mov
pop
ja
pop
shrl
cmp
adc
out
popa
lds
clc
mov
xor
rol
cmp
sub
jnp
and
dec
stos
repz
sbb
jbe
dec
aaa
xchg
gs
mov
cmp
gs
add
cmpsl
push
pop
imul
iret
mov
inc
stos
outsl
mov
xchg
adc
stos
mov
xchg
sub
and
sub
pop
dec
pushf
lods
push
inc
add
lds
std
push
mov
cld
inc
sbb
sbb
jge
hlt
dec
insl
in
shlb
gs
dec
xlat
cli
mov
shll
dec
imul
rol
in
jb
fimuls
dec
cmpsb
pop
cmc
inc
cmp
mov
loopne
pop
or
pusha
push
stos
cmpl
adcb
sbb
icebp
dec
pushf
jmp
cmpsl
cmp
add
into
xchg
jnp
or
aad
adc
push
mov
insb
mov
movsl
mov
stos
push
push
lock
clc
mov
push
test
outsb
sub
sti
shll
cmp
arpl
pushf
cltd
stos
xchg
pop
cmp
arpl
cmp
push
push
and
inc
stc
pop
lea
xorb
inc
pop
sbb
lret
jns
and
mov
xchg
cli
leave
xor
add
aaa
sub
cmp
xchg
or
sbb
adc
gs
mov
and
out
out
pop
dec
pop
push
ljmp
lret
sbb
jo
dec
loop
add
sahf
fisttpll
aas
mov
inc
outsl
pop
xor
stos
add
std
push
out
inc
pop
push
pop
mov
xchg
xchg
pop
movsb
fsubr
push
subl
jle
lock
and
mov
jno
rorl
push
or
push
fcomps
flds
scas
fnsave
test
int
cltd
pop
bound
and
push
out
adc
aaa
cmp
pop
push
xchg
cmp
and
cmp
push
mov
sub
into
push
rcrb
inc
jge
scas
push
push
sub
mov
hlt
mov
cmc
cmp
dec
pop
in
mov
in
jns
xor
test
add
fsubs
xor
xor
int
and
xchg
and
test
popa
in
popf
cs
js
inc
mov
mov
sub
lds
xchg
sbb
inc
sbb
in
mov
movsl
add
sarb
xchg
and
xchg
dec
mov
fwait
lock
add
dec
hlt
push
and
push
scas
dec
mov
ja
xor
fidivs
fistpll
in
push
and
cltd
mov
iret
cwtl
jae
pop
dec
mov
adc
xor
cmp
mov
stos
sub
push
cmp
cmp
cmovge
test
lahf
sti
scas
es
bound
js
fnstsw
insb
shll
lret
lock
es
imul
mov
cli
out
fcomi
xor
sbb
adc
mov
aad
push
pop
pop
ss
mov
lahf
repnz
inc
lret
mov
stos
fwait
add
cmp
lds
gs
push
fcmovbe
addr16
mov
test
js
and
cmp
nop
and
shrl
hlt
mov
cmp
jae
mov
pop
ljmp
imul
outsl
jno
mov
ljmp
xor
enter
aaa
sbb
xchg
push
inc
jge
ss
cwtl
mov
ljmp
cmp
cmc
in
je
pop
dec
or
gs
add
or
and
mov
xor
cmp
xchg
add
mov
xchg
mov
shll
jno
fisttpl
mov
jg
popa
sarl
adc
push
pop
cmp
xchg
ret
inc
lds
and
or
cwtl
adc
out
neg
push
pop
ret
lods
popf
and
xchg
loopne
out
sbb
inc
inc
frstor
pop
popf
xchg
pop
pop
nop
pop
fsubr
and
mov
enter
std
iret
test
loop
push
jge
and
data16
call
pop
add
movsb
mov
scas
xor
xchg
or
jbe
lea
outsb
rcr
outsl
int3
addr16
nop
jl
xchg
pop
pop
and
xchg
or
fistl
frstor
ret
data16
and
pop
adc
cld
hlt
scas
pop
out
lret
imul
add
xchg
test
mov
leave
sub
mov
in
aas
sbbl
jle
push
xchg
jns
mov
mov
sahf
jno
sub
or
fs
mov
lret
xlat
push
push
fisubrl
repz
jno
xor
loope
cltd
fwait
aad
addr16
add
dec
mov
and
jecxz
xor
mov
vpunpckldq
add
pop
lock
mov
jp
icebp
scas
pop
add
pop
cmp
inc
aad
mov
cmc
mov
push
sarb
mov
int
xor
adc
nop
or
cwtl
movsl
xor
pop
sub
js
test
imul
insl
in
and
push
mulb
mov
xor
mov
push
xchg
lret
das
add
lahf
mov
inc
sub
outsb
sub
and
arpl
fwait
mov
adc
out
icebp
pop
jae
inc
xor
fistpll
xchg
push
push
lret
je
stos
mov
aaa
xor
sbb
xchg
add
mov
sbb
std
mov
xchg
push
arpl
cmp
add
aaa
bnd
fs
and
mov
or
and
out
jno
jae
sbb
pop
or
inc
mov
cmpsb
pop
and
aaa
mov
sti
inc
fs
test
stos
push
pop
adc
jne
xchg
scas
jnp
pushf
lock
add
loop
mov
inc
jmp
shll
push
out
lea
mov
insb
jae
cmp
xchg
lock
das
sub
das
mov
xor
inc
ds
mov
mov
cmovs
out
xchg
pop
incb
in
mov
daa
and
movsb
jnp
or
cwtl
and
insb
xchg
pop
mov
nop
push
jmp
pop
mov
or
mov
xchg
andb
mov
cld
sbb
iret
xchg
pop
ljmp
or
hlt
jbe
inc
arpl
lods
iret
aam
cmp
jns
or
aad
das
xor
pop
sub
mov
pop
sub
or
mov
pushf
inc
int3
inc
cmp
xor
mov
or
fsub
sub
mov
int3
loope
pop
mov
sbb
ficompl
bound
xchg
sub
adcl
cld
mov
repz
dec
cltd
inc
add
jns
in
mov
jnp
mov
push
out
xchg
push
xlat
mov
mov
inc
dec
cmp
bound
fwait
pusha
cmpsb
sub
fs
xor
js
pop
in
xor
iret
sbb
and
inc
jae
fwait
rcl
paddusw
cmp
movsb
addb
dec
add
movsb
and
xor
nop
rcl
outsb
push
xor
inc
ret
and
pop
clc
adc
faddl
pop
pop
inc
dec
inc
in
mov
sahf
je
out
add
lcall
and
sbb
or
cld
sbb
pop
sbb
mov
mov
fcompl
in
or
in
stc
lret
iret
test
xor
mov
sbb
push
add
jg
pusha
add
daa
es
stos
call
inc
xchg
bound
mov
mov
xor
clc
pop
roll
push
neg
cmp
popf
cmpsb
inc
sbb
test
jecxz
inc
mov
sahf
ret
mov
mov
push
dec
std
lret
bound
mov
push
sub
inc
jp
je
pop
mov
mov
lsl
dec
mov
mov
and
dec
imulb
xor
dec
data16
push
lock
cmpsl
and
mov
and
xchg
jne
mov
pop
sbb
ret
sub
mov
xchg
sub
mov
shll
add
mov
fs
mov
in
shlb
xchg
mov
loope
clc
incl
pusha
xorb
js
push
lods
mov
ds
sbb
push
mov
sub
cmp
cmc
xor
push
cmpsb
push
rcrl
mov
aam
add
jno
mov
adc
insb
dec
xchg
push
cmp
mov
push
push
imul
xchg
mov
push
loop
mov
mov
ja
push
jl
jo
xchg
xor
push
sbbl
shrb
jno
inc
rcrl
jne
mov
push
lret
mov
hlt
roll
dec
mov
es
and
mov
nopl
lods
int3
and
aaa
cmpsl
icebp
movsl
dec
lods
insl
mov
stc
push
loopne
push
jbe
sti
imul
push
lcall
fwait
stos
bound
and
lds
in
cmp
mov
pop
sbb
add
push
imul
and
inc
dec
cwtl
pop
adc
sub
ret
int3
push
les
sarb
aam
sbb
div
stos
aas
push
xor
dec
lods
lret
stc
jb
cli
dec
mov
repz
push
cmp
and
adc
pop
pop
pop
rcr
xchg
into
mov
push
jno
mov
leave
pop
push
push
push
dec
inc
push
xchg
icebp
mov
and
jne
aad
mov
sub
inc
imul
push
cmp
icebp
push
cmp
insb
xor
xor
imul
test
nop
mov
and
pop
jb
and
push
xlat
fidivrl
and
add
sar
call
shl
jbe
scas
sahf
cmp
mov
cmp
test
jae
or
xchg
data16
incl
enter
scas
cmp
and
fldl
push
mov
stc
sbb
js
scas
outsb
xchg
pop
loopne
aad
stc
xor
fiadds
inc
addr16
in
jge
sbb
mov
out
inc
out
pop
push
ficomps
push
and
sti
popf
aad
clc
cltd
loope
xor
shll
and
dec
mov
loopne
inc
pop
xchg
pop
sbb
stos
push
insb
push
ja
lcall
jnp
mov
mov
fidivrl
jl
adc
int
pop
notb
dec
subps
dec
dec
fwait
mov
int
mov
insl
push
mov
das
loope
fisttpll
test
icebp
addr16
data16
pop
xor
push
lcall
shl
aaa
adc
inc
pushf
push
jo
in
sar
fstps
movsl
inc
ljmp
sub
insl
xor
add
push
stos
adc
sub
outsl
popw
nop
push
fldenv
stos
mov
das
movsb
sbbl
into
push
addr16
sbb
mov
or
stos
dec
test
fwait
test
dec
adc
pop
jg
les
inc
pop
mov
jno
out
scas
mov
push
cbtw
jo
addb
and
les
sub
cmp
iret
jo
xchg
pop
les
xchg
xor
pop
adc
sbb
push
clc
mov
in
mul
add
mov
or
inc
or
sti
mov
jg
add
stos
adcb
mov
pop
cmp
adc
xchg
lock
jb
inc
jbe
cmp
lock
jae
pop
and
cltd
jb
neg
xchg
int
insb
movsl
icebp
stos
movsl
lret
les
aaa
jnp
mov
movsl
xchg
cs
push
stos
roll
mov
hlt
mov
fsts
sub
adc
test
ss
xchg
ja
add
cmp
fs
cltd
mov
aad
cli
in
cmp
int
mov
pushf
jmp
or
pop
subb
mov
or
sti
scas
sub
mov
mov
lret
fisttps
idivb
mov
nop
loopne
insl
and
add
and
inc
pop
in
out
xchg
aad
or
push
mov
inc
adc
aad
arpl
out
adc
leave
or
mov
sbb
or
cmp
adc
loop
shlb
inc
ret
cmpsb
or
aad
mov
aam
push
dec
popf
dec
dec
loop
scas
daa
icebp
mov
test
push
and
xorl
imul
stos
pop
sub
data16
js
inc
notb
les
stos
jne
addr16
mov
in
lahf
xor
sbb
aam
stos
add
jno
mov
add
mov
fs
cli
pop
les
inc
inc
mov
or
pop
or
mov
pop
sub
dec
lods
iret
push
mov
mov
dec
lret
enter
add
in
sbb
fldcw
loop
pop
mov
inc
dec
ret
push
fs
xor
orl
and
lods
imul
xor
push
pop
popa
cld
ss
pop
jb
filds
pop
xchg
inc
movsb
mov
mov
loopne
popa
and
jnp
test
inc
test
andb
mov
dec
cmp
mov
push
inc
aaa
add
xchg
push
and
or
in
pop
mov
ds
lahf
inc
cltd
test
sti
dec
or
xor
scas
cmp
out
xchg
or
data16
cmc
lods
fsubr
dec
push
mov
mull
js
pop
jb
int3
testb
ljmp
push
es
mov
aad
add
fs
pop
pushf
hlt
push
mov
dec
scas
fmulp
cltd
sub
fmull
and
out
cmpsb
jno
xor
aam
test
fisttps
inc
xor
hlt
mov
sarl
jle
pop
negl
xor
mov
mov
adc
out
testb
sub
sbb
push
mov
push
test
xchg
mov
push
sbb
out
add
cltd
push
nop
sbb
mov
push
arpl
mov
adc
mov
pop
dec
adc
iret
xor
xchg
into
push
in
mov
xor
mov
repnz
stos
fs
cmpsl
outsl
or
cs
mull
add
xchg
repnz
aad
xchg
stc
sahf
lds
and
xor
or
jbe
adc
xchg
mov
mov
push
push
sarb
xchg
pop
mov
rorb
xchg
out
inc
in
scas
jge
gs
ja
lock
andb
les
popf
jg
test
lret
clc
into
cmp
loop
dec
push
dec
lea
data16
xchg
pop
xchg
pusha
icebp
lret
xorl
enter
inc
aaa
or
lea
push
pop
fisttpl
sub
mov
test
mov
scas
daa
cmc
shlb
pop
xchg
test
push
nop
sub
lret
adc
in
aas
andl
mov
std
mov
pop
lret
xchg
fs
cmp
mov
add
pop
cwtl
leave
jns
push
xor
and
pop
jecxz
jge
pop
jns
cmc
pushf
cwtl
jg
xchg
bound
int
ja
data16
cli
popf
push
repz
nop
bound
mov
dec
pop
add
out
pop
bound
fmul
popa
push
jo
push
adc
ss
and
jmp
mov
dec
inc
add
cmp
addl
mov
jmp
mov
sub
jno,pn
inc
lret
mov
idiv
mov
ss
push
les
movsb
pop
inc
sbb
and
or
das
mov
jne
sbb
sbb
cmp
lds
jge
fwait
scas
xchg
aas
sti
mov
push
pop
stos
pop
sub
inc
rcr
or
pusha
xchg
ljmp
jbe
mov
mov
sub
push
cmp
sbb
sbb
lret
in
sub
xchg
cltd
popa
cmpsl
sub
not
cli
xor
testl
aaa
pop
je
mov
add
inc
cwtl
dec
das
cmp
shll
mov
pop
jns
push
push
xchg
outsl
repz
cli
mov
je
inc
aam
cmp
dec
out
ja
ljmp
test
test
outsl
pusha
fcmove
sahf
sahf
adc
stc
jnp
add
shl
leave
fistpll
notb
es
scas
push
mov
sahf
adc
cmpsl
or
mov
clc
mov
xchg
in
out
rolb
fdivl
mov
push
adc
subb
inc
add
xlat
pop
mov
lock
lcall
pop
mov
jecxz
cmp
adc
push
fmulp
inc
rclb
mov
pusha
pusha
jecxz,pn
inc
in
mov
mov
xchg
std
mov
filds
lret
push
shrb
imul
adc
repnz
sahf
cmpsb
shrl
outsb
adc
dec
mov
repnz
push
fildll
sahf
pop
or
gs
adc
movsb
xor
xor
jge
push
sub
xor
xchg
mov
inc
fwait
aad
inc
data16
sub
aam
jnp
test
mov
sti
xor
lock
push
mov
dec
mov
sub
mov
in
pop
xor
shr
repz
popa
inc
jne
jo
popa
dec
pop
loope
or
pusha
jae
push
or
lods
ficoms
outsl
mov
aas
lods
in
cmpsl
outsb
mov
fwait
xchg
mov
aad
dec
out
enter
mov
cmp
lds
inc
movsb
sub
cmp
pop
aam
mov
fstp
clc
sbb
jmp
stc
or
stos
mov
jbe
and
xchg
or
inc
aas
movsb
sahf
sub
cmp
movsl
xchg
scas
pop
shll
xchg
sub
mov
rcll
push
andb
and
xor
cmp
add
outsb
cmc
sub
mov
hlt
inc
cmp
mov
repz
xor
stc
push
push
fwait
cmp
mov
es
mov
add
push
icebp
push
dec
or
js
aaa
aad
out
pop
fcoms
in
call
fists
push
lcall
lods
sbbl
scas
push
inc
fdiv
loope
out
inc
lcall
lods
ds
jg
pop
mov
cvttps2pi
cmpl
jle
pop
ret
ret
add
push
es
movsb
sub
add
sti
pop
icebp
jg
gs
dec
dec
mov
push
push
std
mov
icebp
cmpsb
insl
sarl
jne
sarl
push
sbb
aaa
pusha
sar
sti
adc
xlat
iret
outsl
imul
sub
or
mov
push
loopne
cmpsl
repnz
jg
cmpsb
jne
pop
in
shll
cld
inc
ss
push
pop
xor
scas
imul
cmp
and
sub
mov
push
ss
fnstcw
lret
out
push
mov
push
inc
fcomp
dec
testb
jne
mov
sub
mov
adc
xor
icebp
fdivl
test
sbb
repnz
cld
add
stc
mov
data16
mov
xor
gs
sarb
rcrb
add
pusha
mov
jb
sub
inc
clc
push
in
sub
js
inc
push
dec
sub
cli
mov
sbb
sti
and
pop
jns
pushf
jmp
dec
pushw
dec
xor
addr16
rcrl
stos
jp
inc
cli
cmp
fstpl
inc
fstps
test
jbe
aam
add
push
or
mov
addl
sbb
jg
mov
dec
xchg
fisttps
lock
cmp
cli
andb
arpl
xchg
adc
adc
out
inc
jnp
jl
imul
cmpl
ljmp
aam
xchg
cmc
scas
push
movsl
test
dec
fs
mov
cwtl
pop
lret
sub
sbb
jne
or
sub
jnp
imul
sbb
out
push
rorl
jecxz
shll
bound
subb
and
pop
aam
js
nop
mov
fnstcw
cs
cmp
enter
jg
mov
fsubrl
push
and
aaa
movsl
sub
out
or
popa
fwait
popf
ret
iret
in
add
addr16
pushf
jae
push
push
loop
or
sti
dec
imul
repz
shlb
js
mov
pop
div
ret
ja
push
pop
push
jno
sahf
or
add
sbb
inc
out
mov
mov
jo
fadds
in
xchg
or
mov
pushf
nop
stc
jnp
add
or
andb
xchg
or
insl
jge
mov
and
inc
mov
fsts
pusha
lret
add
push
sbb
cmp
sbb
jp
add
push
pop
cmp
adc
push
movsb
movsl
jl
js
jns
jne
or
cmc
sbb
jle
push
jecxz
aaa
es
bound
data16
push
xchg
push
or
psrlq
xchg
faddl
mov
dec
mov
hlt
mov
xchg
or
mov
and
cs
mov
inc
pusha
dec
popf
mulb
xor
add
xorb
loop
shr
mov
pop
xadd
xor
in
cld
data16
out
lods
lock
push
or
xor
jb
jg
popa
lret
lods
nop
and
and
jo
cld
fistps
cwtl
stos
dec
call
ficoms
mov
jge
out
adc
insb
inc
push
add
mov
fs
ds
ljmp
fneni(8087
xchg
les
pop
rcrl
lods
mov
iret
daa
mov
mov
imul
pusha
mov
push
lods
pop
push
cmp
out
aam
fs
cli
mov
adc
xor
pusha
xchg
mov
lea
cmpsl
xchg
inc
je
clc
dec
rclb
push
dec
std
lods
out
adc
bound
inc
std
dec
xor
nop
mov
lods
cwtl
rol
jge
xorb
add
daa
or
pop
jmp
inc
fbstp
jns
pop
sub
pushf
out
dec
scas
mov
jg
das
or
mov
fdivl
jmp
aaa
jbe
jle
out
int
fsubrl
sahf
add
pushf
add
loope
push
mov
sbb
mov
or
out
pop
sub
jl
call
dec
sub
ret
jbe
adc
or
cltd
jmp
adc
pop
or
inc
mov
cmp
or
add
lret
jge
pop
test
pushf
xor
mov
mov
lea
cmp
mov
push
fwait
shll
loopne
fwait
jae
mov
cltd
jp
inc
cmp
or
fiaddl
add
ss
and
scas
dec
and
cmp
mov
xchg
fidivs
lds
nop
and
adc
out
frstor
mov
mov
mov
test
mov
adc
jmp
ds
dec
jecxz
cmp
pop
repnz
es
das
push
and
int
sbb
inc
jge
je
push
inc
fwait
mov
xor
test
ficomps
jmp
int
push
adc
loopw
jecxz
sub
pushf
repnz
mov
shl
adc
mov
mov
adc
jne
xor
pop
mov
icebp
sti
icebp
jmp
ret
sbb
jge
popa
xor
cmp
push
push
add
sub
int
pop
data16
lretw
les
pop
stos
mov
sbb
in
shl
addr16
out
jp
sbb
mov
dec
jae
and
push
cltd
and
aaa
test
add
fs
out
and
fsub
sub
ficoms
pop
inc
scas
mov
pop
mov
mov
mov
outsb
mov
lret
in
mov
jl
mov
jo
cmp
xor
xchg
in
xchg
fcmovnbe
jg
xor
adcl
cwtl
es
cmp
push
lret
incl
daa
out
xor
dec
xchg
mov
test
sub
in
out
inc
lret
inc
push
dec
jns
or
pop
aad
loope
cmp
push
int3
aad
sahf
push
sbb
scas
xlat
mov
arpl
dec
inc
out
fsts
sub
push
ss
cmpsb
jle
cmc
mov
push
ss
jg
sbb
rorl
cmp
enter
push
or
fisttpll
or
call
pop
lea
imul
xchg
sbb
das
das
sub
mov
ss
outsl
sub
outsl
pop
stos
push
mov
movb
lods
lock
lods
psubsb
scas
fldl
shl
jno
ljmp
push
add
push
cmovle
arpl
pop
pusha
cmpsb
aaa
mov
into
cmp
fdivl
sbb
iret
mov
dec
mov
in
iret
loope
sub
xchg
movsl
pop
mov
shll
push
xchg
push
sub
cld
jnp
cmp
fiaddl
and
mov
sub
lock
adc
pop
mov
in
sbb
sbb
adc
inc
loope
jp
out
pushf
sub
mov
or
scas
ficompl
add
mov
repz
mov
leave
or
mov
incb
ja
or
pop
mov
sub
imull
cmpl
arpl
imul
stos
pusha
push
adcb
push
mov
into
jns
and
fstpl
shlb
pop
imul
or
fsubs
lea
xor
mov
cmp
nop
es
mov
fcmovnbe
outsb
push
subb
sub
insl
pop
notl
jne
jl
adc
pop
mov
sbb
mov
notl
mov
lds
lahf
out
push
and
sub
cmp
jle
mov
loop
jl
jno
push
xchg
bound
stos
scas
daa
push
xchg
inc
dec
in
inc
jns
cli
inc
lods
add
jne
insb
or
mov
pop
xlat
dec
dec
es
jp
inc
pop
push
test
push
cs
fbstp
jp
add
jl
aas
test
mov
pop
cltd
clc
test
jl
cltd
mov
push
pop
sbb
loop
mov
xchg
test
sbb
mov
sbb
shrb
int3
cmp
adc
sbb
pop
sbb
icebp
adc
push
aaa
xor
mov
mov
sbb
jnp
jl
out
mov
push
mov
xchg
cmp
shl
jo
cmp
xor
jno
xor
mov
pop
mov
xor
sarl
daa
dec
popl
loope
loopne
mov
lds
stos
xor
sbb
push
pop
push
push
xlat
movsl
cmp
sbb
xchg
cmc
jg
ds
xor
mov
fstps
push
cmc
fnsave
call
stos
mov
hlt
mov
sbb
sahf
fiaddl
push
hlt
add
les
xorl
test
repz
les
dec
push
or
icebp
lahf
testl
ret
dec
dec
ja
xor
ds
in
ljmp
lds
jg
mov
sub
cmp
mul
cld
daa
mov
cmpsb
cmp
outsl
sub
in
std
rol
push
add
out
ds
and
enter
call
dec
sub
inc
imul
stc
shl
jo
dec
inc
jmp
mov
dec
int
andl
mov
mov
pop
jae
fs
inc
mov
dec
sub
rclb
xchg
addr16
xor
add
xor
cli
or
sti
jg
pop
fnsave
cmovns
jge
stos
mulb
pop
adc
or
sub
mov
push
inc
int
subb
and
xor
aas
and
test
int3
xor
mov
add
ret
scas
cmove
cmp
test
pop
xchg
loop
addl
nop
sbb
dec
or
adc
sbb
cltd
mov
mov
mov
cmp
es
ljmp
idivl
repz
ljmp
xor
and
mov
gs
js
daa
jnp
jge
push
inc
push
xchg
les
addr16
inc
and
sub
leave
ret
in
add
xchg
imull
xor
xor
test
mov
fidivrs
data16
mov
stos
mov
ret
inc
xchg
sbb
add
repz
fiaddl
adc
ljmp
cli
bswap
push
jp
smsw
mov
push
jnp
into
jge
and
and
fsubrp
rcrl
jae
rcrb
pop
pop
fcomi
es
or
test
das
ss
in
mov
movsl
or
cmc
stos
cltd
mov
jb
and
ret
fldcw
push
ja
sub
in
stc
sbb
scas
xchg
pop
pusha
add
xchg
add
xor
dec
push
rcrb
inc
sub
lret
adc
ds
in
adc
dec
or
push
push
or
fwait
vpaddsw
add
push
adc
loopne
icebp
and
pop
lds
pop
or
push
rcl
mov
hlt
movsb
rorl
jl
pop
push
mov
mov
rolb
inc
mov
mov
fwait
fwait
inc
pop
stos
mov
and
lret
fmull
push
popa
mov
pusha
mov
fwait
mov
jne
pop
mov
pusha
es
pop
fwait
scas
push
jbe
insl
xchg
or
addr16
or
jno
pop
dec
add
in
cltd
call
mov
xchg
loop
sbb
test
out
and
pop
loope
mov
mov
add
jle
sub
add
add
mov
pop
sub
inc
dec
lahf
lock
jle
sub
lods
inc
aaa
sbbb
xor
cmpl
mov
in
and
ret
movsb
lock
lret
push
push
sbb
mov
fwait
sbb
in
sub
insb
sbb
hlt
aas
cmp
push
jne
mov
sti
stos
jne
ret
jle
adc
jnp
leave
in
push
fistps
cltd
cld
mov
shrl
pop
adc
scas
or
gs
mov
repnz
add
xor
movsb
ja
int
xor
pop
adc
adc
std
fists
or
and
dec
mov
mov
cmpb
repz
mov
xorl
popf
mov
stos
out
out
cmp
xorl
aam
leave
das
mov
sub
pop
sub
jo
push
idivl
out
mov
xchg
or
dec
pop
lret
jmp
dec
bound
add
inc
inc
and
xor
insb
push
icebp
sbb
jnp
shll
fcomps
enter
pop
or
xchg
mov
lcall
mov
les
sbb
data16
and
movl
adc
xchg
ds
push
sahf
dec
cmp
int
gs
adc
inc
inc
xchg
scas
movsl
fxch
dec
xchg
sti
mov
xor
cmp
popf
addl
das
rorb
inc
jle
jmp
inc
mov
pop
or
repnz
cmp
xlat
mov
and
sbb
shrl
lock
dec
mov
xchg
aad
adc
sbb
sbb
mov
bound
test
inc
sbb
jae
push
xor
es
loopne
sub
testl
ror
lcall
adc
mov
sub
or
inc
cmp
mov
add
cld
push
cwtl
popf
test
out
add
xchg
sbb
push
mov
pop
inc
xchg
lret
pop
aam
mov
cmp
cmpsb
loop
pop
xor
in
icebp
cltd
cwtl
cmc
jl
repz
cmp
dec
mov
mov
and
pop
shll
add
xor
xor
mov
fs
xor
mov
int3
out
jne
bound
inc
test
repnz
outsb
push
cmp
call
sti
cmp
lret
add
sbb
and
inc
inc
jo
adc
orl
mov
pop
add
dec
inc
dec
push
arpl
or
in
test
sahf
bound
inc
or
xor
fimuls
sahf
imulb
xor
es
jle
pop
shll
or
dec
fmuls
scas
dec
push
daa
push
and
jnp
movsl
xor
aam
add
dec
pop
xchg
mov
rorb
mov
negl
shrb
push
cmpsb
lock
xorb
sbb
xor
dec
jmp
imul
mov
test
add
mov
icebp
rclb
mov
cmpsl
inc
sbb
out
inc
mov
outsl
dec
add
and
mov
daa
daa
cmp
lods
xchg
dec
xor
cltd
test
fs
sti
jbe
jl
add
sub
movsl
pop
mov
arpl
jecxz
sbb
jae
fucom
mov
mov
test
std
and
xchg
adc
mov
inc
sbb
pop
adc
stos
int3
add
push
andl
cltd
sbb
sbb
dec
mov
push
test
push
push
lret
xchg
fsubrl
pop
xchg
out
cld
dec
and
jbe,pt
mov
addb
fwait
sbb
sub
dec
sbb
lods
sub
pop
mov
mov
fxch
adc
sub
add
dec
lods
push
or
xorl
adc
push
scas
clc
addr16
fdivrl
push
dec
cs
bound
lret
bts
dec
outsl
mov
lea
fcompl
pushf
add
xchg
fdivrl
stos
vunpcklps
movsl
clc
dec
out
shrb
rcl
outsl
mov
push
dec
pop
rol
loope
insb
fsub
ret
push
jb
mov
notl
test
cli
in
shr
sti
pop
daa
sub
mov
repnz
xchg
repz
jnp
sbb
repnz
xor
in
daa
scas
out
hlt
cwtl
cmp
pop
mov
testl
lods
pop
cmpsl
inc
push
sahf
jp
jae
mov
pop
xchg
push
jnp
mov
add
and
sub
pop
and
daa
divl
inc
lret
notb
inc
nop
jbe
dec
mov
stos
subl
dec
push
rolb
push
cmp
push
push
arpl
mov
dec
aam
shlb
fsubs
stos
jg
dec
jb
cmp
or
rclb
aam
dec
mov
fdivrs
addb
cmp
mov
pushf
gs
push
mov
inc
aaa
mov
shrb
mov
or
call
in
rolb
cltd
adc
jno
aas
mov
adc
and
call
pop
popa
notb
adc
push
or
xchg
jp
push
bound
xor
xor
and
pop
pop
lahf
dec
ret
ja
sahf
mov
mov
cmc
cltd
fists
js
sbb
and
fwait
mov
test
jge
cmpsl
cmp
jnp
mov
ja
imul
pop
sub
gs
cs
mov
scas
int
out
ss
notl
ds
jge
lahf
mov
mov
roll
xchg
jg
faddl
cmp
decb
xor
push
leave
mov
inc
lea
test
xor
dec
aam
jge
xchg
rcll
ljmp
test
push
es
xor
popf
fcmovbe
imul
jno
cmp
sub
dec
je
mov
pusha
sbb
pop
ret
add
xor
or
ss
pop
sbb
mov
clc
test
outsl
jb
test
fidivl
loop
push
jge
test
fldenv
lret
sbb
jmp
push
cmc
cltd
xchg
mov
cs
loope
lock
xchg
jno
shrb
in
movsl
test
pop
bound
push
adc
pop
or
shll
mov
pop
aas
inc
xchg
sbb
push
inc
inc
out
das
push
incl
imul
insl
test
ficomps
adcb
je
icebp
fs
int
aam
mov
push
inc
xor
pop
adc
xor
pop
sbb
cmp
outsb
jl
xchg
sbb
ret
sbb
jle
movsb
jp
xor
xchg
or
add
cltd
and
test
jb
lahf
xchg
loopne
or
scas
jmp
insl
repz
data16
and
push
mov
add
push
sub
pop
jge
out
aas
enter
dec
mov
mov
sbbb
jns
idivl
in
cmp
out
mov
movsb
scas
in
xlat
test
mov
sbb
std
js
ret
adc
jno
clc
sbb
inc
les
dec
sbb
push
in
mov
mov
dec
sbb
xor
pop
dec
pop
dec
dec
je
jnp
lods
jb
xor
hlt
push
or
jns
mov
rcrb
xor
xor
push
aam
add
decl
mov
cs
and
mov
or
mov
loope
add
jae
xchg
stc
fnsave
pop
xchg
inc
stos
test
adc
or
inc
fisubl
orl
repnz
mov
fcoml
and
dec
or
dec
and
mov
inc
mov
mov
aam
cmpsb
and
inc
loope
test
push
scas
adc
mul
add
mov
mov
xchg
ja
into
mov
mov
mov
loopne
hlt
cmpsb
arpl
daa
adc
pop
scas
pusha
sbb
cmpsb
inc
mov
push
out
xchg
cmpsb
push
xlat
imul
daa
scas
popa
aam
fisubrl
out
and
repnz
scas
cmpsb
icebp
out
arpl
fiaddl
xchg
inc
out
call
or
out
push
inc
jb
shll
stos
sbb
push
fdivl
cltd
test
aad
insl
pop
push
and
push
lcall
cmpl
xchg
jno
mov
dec
jecxz
repz
mov
ds
mov
std
bound
lcall
iret
mov
jmp
adc
and
gs
jg
shl
jne
outsb
ds
repz
push
or
push
jae
cmp
fisttpll
and
sub
and
nop
movsl
out
adc
adc
cli
jp
mov
jmp
cld
xchg
mov
xchg
incb
les
or
add
addb
pop
sahf
fs
imul
iret
es
cmp
jbe
imul
inc
mov
test
push
popa
lret
sarb
sub
fs
cmp
xor
push
rcll
mov
pop
jbe
dec
lods
cwtl
fldt
cld
inc
fiaddl
mov
xchg
mov
rcll
mov
aaa
mov
lahf
cmp
es
out
push
mov
lds
daa
ljmp
gs
dec
mov
jmp
ss
lret
or
arpl
dec
xchg
lods
repz
fnstcw
push
adc
cmp
loopne
fwait
add
es
adc
or
les
push
xor
inc
jg
cmp
cmc
add
daa
and
dec
imulb
in
clc
cmpsl
and
daa
cld
ds
aas
or
inc
stos
jl
fdivrl
and
test
ljmp
or
js
pop
fs
andl
mov
lods
push
sbb
stos
cmp
pusha
fstpt
in
xchg
and
sahf
imul
stos
test
repz
dec
inc
push
lock
rcll
inc
jp
adc
mov
shr
mov
mov
or
adc
loope
and
jbe
lret
xchg
xchg
incl
jle
shrl
xchg
cmp
sub
xchg
jmp
inc
pop
pop
adc
cmc
faddl
cltd
lock
xor
jo
leave
pop
inc
mov
inc
fisubrs
js
or
inc
jno
xor
nop
pop
ror
adc
notl
insl
xor
test
fld
lret
scas
xchg
mov
inc
mov
sub
fld
test
jecxz
push
std
and
sti
sarb
inc
in
inc
push
lds
dec
sbb
pop
jo
mov
in
mov
rcrl
xchg
ret
loopne
movl
and
nop
xchg
xchg
aaa
mov
into
sbb
iret
cmpsb
loop
and
dec
add
cmpsb
jo
or
js
data16
in
in
inc
iret
negb
je
out
sub
sbb
dec
jne
stos
pop
push
imul
pop
fwait
pop
push
add
xchg
xor
sti
out
cltd
xor
sub
pop
or
ds
movb
xchg
fcomps
jecxz
sub
test
xchg
cmp
adc
ljmp
fs
xchg
gs
lcall
and
test
mov
cmpsl
bound
xchg
out
pushf
jo,pn
xor
mov
sbb
xchg
data16
sub
ret
dec
enter
pushf
arpl
rorl
mov
lret
cwtl
shll
mov
xchg
aaa
sbb
test
nop
int3
jae
cli
cwtl
sub
inc
sbb
rorl
outsl
rcl
mov
and
mov
xchg
push
test
and
fstp
es
lret
into
or
enter
pop
push
lcall
jp
jae
jp
inc
repnz
pop
xchg
imul
into
push
mov
inc
cmp
jl
shl
xor
call
sbb
lds
jmp
or
add
stc
std
or
push
mov
jmp
inc
leave
cmp
fwait
loope
dec
filds
or
shrb
sbb
ret
iret
add
mov
inc
and
jno
jo
dec
inc
movsb
dec
jbe
aaa
jmp
lods
mov
rorl
and
in
and
push
iret
mov
xchg
adc
les
lock
decb
ret
bound
je
out
fimull
fcmovnb
mov
fildll
ds
mov
pop
lret
xchg
clc
aaa
icebp
sahf
cmpsl
mov
and
push
mov
or
js
dec
cmp
xor
lds
ret
jge
sbb
inc
hlt
inc
inc
add
pop
sbbb
in
lahf
inc
push
mov
mov
xchg
arpl
sbb
mov
aaa
and
inc
mov
in
lahf
mov
fs
cmp
mov
mov
push
xchg
cs
add
push
push
mov
fs
or
push
aas
outsb
pop
orb
inc
les
or
cmp
out
xor
cmp
aam
cmp
inc
push
fisubl
pop
ficoml
test
or
xchg
push
inc
inc
testb
jle
jp
add
fs
mov
cmp
xor
jne
lret
scas
test
icebp
repnz
hlt
inc
enter
and
fs
icebp
stos
loopne
jb
int
out
movsb
dec
mov
and
lretw
sbb
push
std
dec
out
bound
xor
cmp
inc
pop
fstps
rolb
and
mov
xchg
ds
aaa
mov
cmpsl
cmp
out
clc
lock
pop
pop
xchg
enter
push
xchg
push
inc
add
jg
mov
mov
repnz
mov
lods
aam
jns
rolb
test
or
incb
xchg
inc
pop
aam
mov
mov
inc
cli
push
cli
push
xchg
or
push
sbb
dec
cmpsl
loopne
push
stc
imul
push
movsl
popf
bound
notb
cmc
dec
test
push
int3
xor
nop
clc
arpl
jb
pop
mov
and
out
add
cmpsb
jge
pop
jnp
and
imul
movsl
rclb
add
and
mov
popa
mov
ds
cmp
push
adc
out
adc
loop
xchg
xchg
dec
rcrb
sub
mov
sbb
mov
pop
pop
andl
or
test
ljmp
push
dec
mov
mov
sbb
add
es
push
inc
outsb
cmp
imul
mov
popf
ss
jp
push
and
rclb
movsb
dec
xor
cmpsb
xchg
jae
andb
daa
pop
gs
and
sahf
fnsave
or
push
aad
dec
insb
inc
xchg
xchg
repnz
pop
mov
add
fnstcw
imul
or
std
in
push
sahf
fadds
pop
xor
sbb
popf
inc
mov
sahf
arpl
mov
test
dec
xor
pop
inc
out
mov
push
jg
jnp
loop
movsl
int3
xchg
sub
xor
jecxz
cmpsb
ss
negb
mov
and
jnp
jae
pop
bound
out
or
adc
jge
mov
js
dec
xor
mov
loop
pushf
pop
jge
add
rcr
js
stc
cwtl
adc
popa
cmp
mov
test
cwtl
add
mov
adc
fwait
mov
xchg
not
insl
insl
mov
mov
push
rcll
jbe
in
mov
jno
icebp
fwait
cmc
sahf
hlt
mov
cld
es
sbb
testb
and
pop
cmp
into
xchg
icebp
imul
rolb
push
sub
mov
ds
outsb
jl
jmp
or
dec
shll
out
push
pop
js
fwait
mov
dec
js
cmp
mov
dec
xor
xor
or
aam
push
jmp
aad
frstor
jl
das
leave
push
pop
das
pop
sbb
cmpsl
jp
fdivl
add
nop
sbb
aaa
movsl
xor
and
popa
fsub
mov
shlb
xchg
das
dec
decb
and
scas
or
push
or
lret
sbb
sarl
incb
test
jle
into
loop
sbb
daa
or
sub
mov
sub
rclb
roll
fucomp
sbb
popa
pop
stc
mov
aas
punpckhwd
outsb
jl
mov
shlb
xor
repz
push
loopne
add
inc
mov
and
cmc
dec
push
sbbl
imul
insb
xor
inc
ret
push
mov
fwait
fwait
nop
outsl
aam
pop
xor
dec
push
mov
add
jle
jns
sub
faddl
dec
jno
sbb
call
icebp
js
pushf
mov
daa
mov
out
loope
xchg
sub
fbstp
inc
mov
push
ficoml
jecxz
jae
enter
sub
sub
daa
xchg
cmc
and
sahf
dec
lea
inc
xchg
jns
repz
and
xchg
pop
inc
add
mov
mov
lods
add
add
or
mov
mov
out
scas
or
or
imul
scas
jbe
in
or
loopne
mov
inc
and
dec
stos
inc
mov
ss
mov
jnp
mov
out
repz
out
imul
je
not
dec
sub
or
cmpsl
pop
mov
jbe
jmp
out
enter
sub
jne
mov
jmp
stc
inc
gs
adc
fucomi
lods
or
cmp
int3
in
xlat
ljmp
mov
xchg
cld
xor
mov
jo
js
push
and
xchg
push
int3
xchg
fdivr
scas
push
push
std
insb
out
lods
lods
jae
cwtl
sarl
adc
das
roll
push
jo
and
or
push
or
mov
jp
enter
fldt
mov
mov
shr
fisubs
inc
adc
loop
and
movsl
push
dec
out
inc
pop
lcall
rorb
inc
jge
clc
adc
jg
sub
aad
ja
mov
das
pop
mov
cmp
xorl
cmc
lods
call
xor
pop
pop
sub
mov
cwtl
aam
lock
cwtl
push
mov
pusha
aas
loope
xor
fdivr
jg
mov
inc
inc
push
mov
sub
xlat
popa
adc
aaa
jmp
cmpsl
sub
aam
js
pop
dec
loop
pop
jg
stos
aas
mov
scas
jle
or
rcll
lods
pop
jecxz
dec
sub
sbb
cs
mov
daa
add
sbb
aaa
fmull
xor
cmpl
jo
mov
sub
js
and
lea
jmp
push
je
sub
mov
movsb
stc
lods
dec
cli
popa
jp
jo
adc
cmpsl
rorl
movsb
jmp
stos
sbb
lret
aad
jl
out
pop
orb
push
sarb
adc
pop
daa
adc
xor
stos
xchg
call
lds
xor
loopne
add
adc
dec
test
pop
or
addr16
jmp
test
dec
jl
cmp
cmp
adc
mov
inc
hlt
jo
mov
adc
iret
push
sti
xchg
inc
imul
int
and
jo
outsl
jno
mov
fwait
jp
popf
cs
xlat
inc
pop
sbb
inc
fs
lods
xchg
sbb
in
sbb
ss
int
adcl
aam
dec
cmp
lahf
roll
mov
mov
mov
jge
imul
fstpl
sub
mov
cmp
xchg
jns
les
xorl
cli
out
fists
jmp
xorl
fiadds
pop
insl
insl
stos
loope
sub
sub
mov
imul
in
mov
xorl
lret
popf
test
idivb
mov
xor
mov
inc
lcall
adc
fists
pop
sub
and
sub
popf
sub
push
cmp
adc
cltd
pop
nop
xor
xor
jno
loopne
xor
loope
lods
jb
arpl
xchg
mov
mov
mov
pop
imul
lods
mov
or
jns
clc
jmp
sbb
into
push
shlb
jl
aas
adc
push
xor
jge
movsl
fldl
test
push
mov
xor
cmp
fs
and
sti
es
inc
gs
lods
call
adc
cltd
sub
test
repz
and
aas
push
cmp
pop
xchg
mov
xchg
fsubr
cmpsb
shl
jnp
cs
movsl
adc
addr16
mov
loopne
adc
fistpll
mov
xor
pop
adc
adc
sbb
xchg
xchg
test
inc
lods
idivb
pusha
into
lret
cmp
push
inc
pop
lahf
pop
mov
xchg
push
pop
lea
or
dec
push
mov
push
inc
ja
jne
cmpsb
mov
or
inc
sub
popf
pop
adc
jg
xchg
jmp
int3
and
scas
pop
pop
lret
mov
jae
dec
adc
sarb
cmp
in
and
jo
add
les
mov
xor
sub
fstpl
xor
stc
jbe
pop
mov
add
aas
inc
mov
jns
or
push
dec
pop
push
mov
gs
in
push
pop
inc
jnp
testb
dec
je
sub
arpl
pushf
xchg
push
iret
ljmp
xchg
cmp
adc
lds
and
lds
cld
jne
subl
sbb
ja
gs
dec
dec
icebp
mov
mov
or
hlt
packuswb
fbstp
mov
arpl
dec
test
or
fwait
adc
std
or
ljmp
incb
jae
xchg
xchg
ret
xor
add
cmc
out
jne
movsb
cmp
mov
or
icebp
sahf
xorb
push
xchg
fisubs
shl
std
lods
aam
popf
dec
fisttpl
xor
cmp
int
ret
jp
xor
lret
xchg
push
jmp
push
sbb
add
mov
mov
add
fdivrs
dec
or
mov
dec
and
das
lret
lcall
imul
jmp
shrl
sbb
jp
cmpsl
aas
mov
mov
popl
push
or
xchg
lcall
mov
mov
adc
jno
sub
mov
xchg
std
lret
and
jne
clc
push
mov
cwtl
mov
aam
dec
xchg
popa
xor
gs
jmp
jno
mov
xchg
push
push
inc
lds
lods
xchg
mov
lahf
out
jl
inc
lods
stc
or
adc
cwtl
cmp
sub
jo
shl
cltd
popa
dec
and
fwait
popa
loopne
pop
jnp
jge
xchg
adc
and
sub
js
in
mov
fstl
cmpsb
iret
mulb
mov
jecxz,pn
or
push
aaa
add
pop
mov
cmpsb
rolb
xchg
fmuls
outsl
xlat
data16
jmp
insb
popa
pop
ret
fs
jmp
lret
test
sbb
js
pop
loopne
dec
push
jns
test
or
cmp
mov
mov
inc
test
or
in
jg
lock
lods
icebp
inc
daa
fiaddl
cs
mov
popa
xchg
js
lock
pop
jecxz
ja
les
dec
outsb
pop
cwtl
lods
rcr
fisttps
hlt
cmp
cs
rcrb
sbb
pop
jmp
inc
jne
adc
cmc
push
dec
add
pop
add
nop
jmp
repnz
xchg
or
mov
repz
push
mov
cltd
sbb
dec
sbb
push
xor
mov
les
xor
sub
mov
std
cmp
sub
hlt
movsb
inc
push
pop
mov
jmp
lock
pop
cmp
sahf
test
mov
xchg
out
mov
mov
in
inc
dec
mov
addr16
dec
stos
xor
xor
add
xor
call
push
jmp
adc
push
push
jle
stc
lret
scas
mov
fcmovne
fmul
pop
xchg
pop
insb
xchg
pop
fwait
jecxz
test
inc
data16
cmc
fbstp
jmp
mov
mov
mov
loope
adc
mov
rcl
and
mov
les
outsl
loop
cmp
leave
stc
test
dec
into
dec
push
mov
push
jle
aam
test
mov
fdivrl
mov
ja
pop
iret
jnp
pop
loopne
or
popa
jo
mov
loope
jle
jno
dec
and
loop
push
mov
out
sar
pop
repz
repnz
out
xor
je
or
mov
inc
lahf
imulb
mov
lcall
sub
jb
push
out
shll
stos
lcall
sti
fs
imull
ljmp
dec
js
fimull
in
pop
aas
adc
mov
or
ja
mov
icebp
and
jge
movsb
add
mov
mov
sub
xor
aaa
lahf
ja
loop
in
jnp
lds
sbb
sysret
mov
or
aaa
popf
jecxz
xor
pop
jae
add
and
mov
push
jno
sub
inc
imul
push
push
loope
dec
jg
mov
dec
lock
andb
fs
into
ljmp
imul
add
inc
xchg
ret
jno
jg
notl
outsl
lahf
or
in
mov
push
jmp
and
jg
adc
mov
push
xchg
or
roll
testb
mov
lea
add
rolb
aaa
cmc
or
xor
cmp
flds
daa
stos
pop
mov
and
lret
iret
sub
xchg
ficompl
mov
test
cltd
mov
lret
and
mov
cmp
idivl
cmp
mov
adc
outsb
push
aad
popa
jno
mov
cld
xchg
iret
mov
ljmp
stc
pop
push
push
or
pop
jno
lock
cmpsb
scas
arpl
or
sbb
testl
push
lds
add
or
pop
sbb
fisubs
pushf
dec
js
jl
jo
lock
jne
mov
test
in
call
loop
mov
jmp
push
mov
mov
js
in
lcall
sbb
sub
push
cmp
mov
pop
les
vmovd
push
sub
outsb
into
pop
bnd
xchg
icebp
inc
popa
out
int
in
pop
lods
das
iret
sti
mov
insl
pop
jl
rorb
inc
inc
scas
cmpb
movsl
cs
lret
add
xor
cwtl
std
add
sub
sbb
sub
test
icebp
sbb
shll
and
cs
add
xchg
fiaddl
out
or
jp
test
mov
jp
push
iret
inc
aam
scas
fwait
or
dec
icebp
adc
in
movsb
std
adc
push
mov
fwait
lods
shl
sub
or
jb
add
call
icebp
cmp
into
in
mov
out
push
pop
decb
jg
jp
lods
sarb
pop
mov
aam
out
nop
dec
or
icebp
std
jbe
int
movsb
jg
dec
or
in
arpl
les
or
cmpsb
cmp
mov
adc
mov
pop
push
inc
or
cmp
mov
nop
jmp
aam
push
es
add
mov
pop
out
aas
popa
jo
shlb
mov
fs
push
lds
subl
lods
add
xchg
inc
and
shll
xchg
daa
std
das
pop
mov
inc
loope
lock
inc
jb
es
loopne
fwait
push
test
mov
inc
pop
fiaddl
jl
xchg
mov
psubsb
es
adc
aaa
sbb
adc
fcmovu
jecxz
sub
sbb
test
mov
out
adc
push
xor
fmuls
loopne
dec
or
inc
sbbl
insl
fdivrs
inc
notb
inc
scas
fsubrs
pushl
mov
sub
sarb
imul
inc
jb
add
mov
dec
cmp
fdivl
loop
sub
cmp
das
adcb
push
lods
ret
push
or
sbb
pop
mov
push
rorl
out
sbb
lret
fmul
mov
pop
jle
ror
add
cmc
push
mov
cmpsb
jne
test
push
mov
in
jae
pushf
xchg
jmp
cmp
ja
pop
incl
daa
gs
sarb
aaa
fwait
mov
mov
nop
cmp
push
adc
enter
in
aad
jne
and
xchg
adc
sub
mov
mov
icebp
mov
bound
xchg
xchg
imul
adc
inc
pop
mov
mov
cmpsb
push
jmp
repz
lods
push
push
cmp
and
fdivrp
js
aam
stos
in
iret
fidivs
aam
cli
fldcw
xorl
pop
int
adc
addr16
ss
jg
stc
sarb
jne
stos
les
bound
imul
push
ds
xorb
pop
into
mov
inc
pop
sbb
in
cmpsb
pop
inc
lea
aad
aam
jnp
mov
inc
rcl
aas
add
cmp
shl
pop
clc
mov
jecxz
call
dec
test
incb
lea
push
insb
mov
jmp
push
cmp
out
xor
mov
pop
ret
std
incl
in
lds
in
out
cmp
xchg
test
ds
int
push
packssdw
jbe,pn
lods
das
shll
push
pusha
adc
out
lret
add
cltd
loopne
and
jbe
sub
rcpps
inc
sbb
dec
or
or
jle
xchg
xor
pop
outsl
cmp
rol
adc
out
cli
dec
mov
push
jmp
jge
lds
push
enter
gs
cltd
ljmp
jne
and
jne
mov
xorb
or
stos
enter
pop
xor
xchg
aas
scas
xlat
out
pop
repnz
push
rolb
gs
mov
push
mov
fisttps
jecxz
sub
scas
sbb
and
ss
jmp
lea
stos
andl
std
cmp
push
mov
addps
sbb
mov
int
cs
orl
fwait
jg
cmpb
mov
cmc
lret
mov
push
sti
dec
xchg
mov
gs
jge
dec
jecxz
lcall
adc
mov
mov
cwtl
sbb
fisttpl
pop
negl
stos
mov
les
sti
outsl
test
mov
add
jle
and
stos
push
pop
jp
std
sti
add
pop
ret
out
mov
je,pt
pop
sub
inc
ja
sub
scas
cmp
das
adc
lcall
arpl
lods
dec
xchg
jae
shlb
sbb
shll
dec
int3
push
cmp
aad
lods
js
gs
call
shrl
cltd
les
fidivrs
dec
push
aas
jne
rcll
scas
test
jg
daa
xor
push
push
add
aam
xor
adc
mov
and
adc
movb
adc
nop
push
pop
mov
or
mov
loopne
repz
hlt
rcrl
mov
inc
xchg
sar
sub
pop
xor
xchg
fimull
lods
mov
jae
ljmp
jbe
cli
fcos
sahf
in
hlt
or
jne
cmp
lds
sbb
je
fstps
lret
jnp
mov
cld
add
cmpb
flds
iret
decb
or
push
pop
pop
and
mov
mov
shlb
es
lock
sbb
pop
in
sub
mov
test
add
add
push
xor
mov
add
enter
stc
scas
xchg
xchg
inc
int3
sbb
jge
push
insl
pop
ljmp
jae
std
mov
xlat
pop
or
int
mov
xchg
jno
ficompl
jmp
mov
mov
cmp
adc
mov
pop
ljmp
sti
and
loope
cmp
std
js
jns
mov
out
xor
xchg
lret
push
add
into
cmp
pushf
push
js
cmp
out
into
stc
push
in
mov
faddl
xor
lcall
pop
stc
push
dec
pop
loope
or
mov
jp
js
out
jge
push
scas
test
jl
out
mov
mov
bound
mov
xchg
xchg
push
jb
lods
pop
push
lods
xchg
add
cmp
dec
xchg
mov
or
lahf
jne
mov
lcall
mov
loope
lods
sub
cmp
scas
add
cmc
xchg
adc
push
cmpsb
fmull
push
imul
movsb
int3
repz
cmpb
enter
mov
mov
and
jno
jne
adcb
mov
dec
push
dec
das
adc
movb
sub
dec
and
mov
les
mov
hlt
adc
pop
add
lods
icebp
popa
inc
dec
es
and
xchg
testl
pop
sbb
loopne
orl
int3
aas
xchg
daa
xchg
pop
mov
lea
and
sbb
andl
or
add
xchg
call
inc
insl
xor
jne
pop
xchg
jns
addr16
and
stos
enter
sbb
fsubrs
popf
testl
std
aas
test
pop
jp
popf
pop
in
xor
outsl
ret
lock
lahf
or
inc
xchg
sbb
aad
mov
stos
cmp
push
push
leave
fsubrl
fdivp
stos
mov
pop
sub
mov
fisubs
shrb
test
inc
mov
lret
pushf
fimull
fldl
loopne
lcall
push
mov
sub
lock
mov
cwtl
mov
popf
sub
adcb
negb
aam
xchg
aas
add
fisubrl
sbb
fimuls
sub
js
test
sbb
adc
cmp
push
out
add
sub
xchg
mov
sahf
fldcw
mov
push
ss
imul
jnp
mov
test
test
jmp
xor
aaa
mov
ljmp
out
sarb
lock
adcl
pop
adc
push
xchg
aam
int3
xor
inc
lock
loop
rcl
enter
imul
shrl
or
xchg
repnz
mov
bts
or
cli
xchg
out
add
and
dec
adc
cmp
mov
mov
pop
cmc
out
out
add
stos
shlb
fnstenv
and
mov
mov
sub
jbe
push
in
aad
jnp
addb
rolb
cmc
dec
icebp
sub
ljmp
mov
stc
hlt
movsl
ret
daa
out
push
adc
xchg
cmp
push
sbb
xlat
in
test
xchg
sub
out
imul
pop
lods
movsb
xlat
lea
ficoms
movsb
fsubl
rorb
lret
jecxz
or
aam
mov
das
scas
inc
or
dec
scas
in
dec
pop
clc
push
cmpsb
pop
add
pushf
cmpsb
or
adc
mov
pop
cmpsl
mov
mov
adc
xlat
ds
mov
dec
stc
cmp
gs
call
sahf
imul
fdivrs
dec
fldln2
ds
in
lea
insb
cmp
faddp
mov
jg
je
cmc
or
xchg
addb
mov
push
lds
movsb
sarb
mov
mov
pop
fldl
sub
mov
mov
add
push
push
std
sub
fwait
and
fcoml
mov
jecxz
mov
enter
imul
push
inc
mov
push
rorl
cmp
pushf
lock
cmpsb
pop
lods
pusha
xchg
sbb
lret
sub
fiadds
and
or
pop
js
and
pop
inc
lods
inc
cwtl
or
stos
dec
jp
and
rorl
out
cmc
push
and
shrb
fwait
cmp
into
leave
es
rcll
mov
movsl
adc
call
push
aas
cmpps
dec
icebp
js
cmovbe
lods
mov
stc
and
jg
mull
mov
into
add
int3
ret
aam
mov
and
pop
sarb
dec
jle
or
fisubrl
scas
add
fcomps
sub
push
ljmp
dec
push
popf
enter
lea
movsb
add
adc
sbb
imul
jmp
add
dec
movsb
xor
addr16
les
cltd
add
mov
int
jmp
mov
repz
or
push
cli
aad
inc
insl
lock
out
cltd
iret
sbb
rep
mov
clc
dec
iret
rcrb
mov
test
mov
pop
jns
push
cmpb
add
xchg
fistl
das
inc
jl
mov
shlb
andl
mov
popa
mov
arpl
jecxz
mov
adc
repnz
jne
inc
mov
cmp
inc
add
xchg
jecxz
popf
les
adc
jle
push
jp
shrl
aas
mov
test
ds
cmpsb
jg
push
pop
sub
jmp
add
fsubrl
hlt
dec
hlt
xchg
jl
addl
and
jnp
pusha
divb
in
outsl
cs
js
incl
xor
fs
sbb
mov
mov
insb
push
lds
sarl
add
pop
in
call
cmp
imul
fs
lock
jg
mov
jae
daa
rcrl
push
in
dec
mov
pusha
jge
test
sti
lahf
dec
lahf
lock
scas
movsb
mov
mov
or
int3
sbb
popa
dec
dec
jmp
shlb
dec
fisubs
inc
or
mov
test
push
sti
imul
sub
mov
adc
js
pop
out
pop
mov
int
stos
mov
ja
popf
sub
inc
mov
push
pop
outsb
test
sub
mov
add
and
xor
add
rorb
sti
mov
mov
aad
jl
movnti
js
mov
cmpsl
pop
rolb
xor
loope
call
push
insb
mov
rcrb
push
in
add
and
pop
popa
pop
inc
jecxz
inc
xchg
out
outsb
inc
sbb
ficoml
sti
fsub
call
repnz
in
fst
cmpsl
loop
out
jp
add
aam
mov
sub
push
sub
mov
cmp
dec
call
inc
push
or
andl
mov
sbbl
cmp
jb
pop
cmp
xchg
je
fbld
push
xchg
mov
mov
push
sbb
cmp
push
gs
jl
mov
add
adc
jl
ja
jecxz
and
hlt
insb
jmp
push
sbb
and
repz
stos
es
ret
aad
mov
rcrl
xchg
cltd
adc
movsb
std
push
cmp
inc
jns
xchg
inc
push
sub
mov
cli
int
inc
gs
les
call
cs
dec
ficompl
push
inc
xor
or
jl
push
mov
cmp
movd
fstpl
aad
jecxz
dec
cmp
notb
popf
pop
fcomip
in
pop
jmp
cmp
jl
inc
inc
pop
jge
aad
sbb
lret
add
dec
cmp
pop
in
icebp
add
sub
out
scas
push
punpckldq
test
pop
xchg
loop
xor
sbb
xchg
inc
rcrb
movsb
out
lea
adc
mov
push
cmc
clc
movsl
mov
xchg
in
fisttpl
mov
jecxz
shrl
movsb
jle
cmp
pop
push
push
add
adc
lret
ret
ljmp
popf
ljmp
or
sbb
das
in
cli
stos
sbb
and
sub
icebp
sbbl
mov
jbe
into
mov
js
pop
loop
ja
and
int
js
push
xlat
and
pusha
xchg
cmp
stos
push
dec
add
repz
mov
cmp
ret
sub
cmpsb
shlb
xor
nop
lret
ds
and
adc
or
push
mov
je
inc
jno
add
mov
add
rcl
es
es
outsb
sbb
cmc
inc
sub
add
ret
jl
and
roll
daa
nop
inc
push
pop
js
bt
outsb
or
xor
add
cld
pop
cmc
jbe
cmpsl
mov
dec
insb
cmp
sbb
inc
or
adc
mov
insb
pop
popa
cmpsb
adc
mov
ljmp
mov
ss
sub
push
and
mov
popf
gs
adc
or
enter
int
or
pop
sbb
addl
cld
dec
cmp
lock
cltd
lods
mov
mov
out
push
sub
push
add
mov
dec
out
rcl
xlat
das
sbb
js
xchg
addr16
and
nop
es
push
jg
or
cmp
sbb
fcmove
adc
mov
popf
mov
imul
jecxz
adc
filds
in
cmp
xchg
shlb
sub
pop
ret
loope
sub
fsubrl
xor
loop
shlb
pop
and
cmc
cmp
cmp
test
bound
jle
push
and
sbb
cld
movsb
int
pop
cli
mov
inc
push
pusha
lret
pop
xchg
addl
pushf
add
dec
mov
lds
and
sub
mov
das
aas
push
add
cmp
xor
pop
sbb
cmp
sbb
ret
rclb
mov
sub
push
mov
and
outsl
mov
jle
mov
push
and
pop
xor
rclb
push
pop
xor
loop
daa
lret
das
pop
ja
add
push
hlt
push
pop
test
ljmp
push
inc
push
xchg
mov
jnp
ja
push
fnstenv
sub
pop
sbb
out
adc
cmp
or
and
mov
shl
fstps
test
into
leave
sti
loopne
sbb
and
lea
inc
cwtl
push
mov
xchg
cmp
push
dec
out
mov
dec
adc
mov
imul
or
dec
int
mov
jb
jne
jno
arpl
jmp
jns
push
adc
sahf
xor
xchg
sti
ja
lret
mov
enter
push
shl
mov
jnp
inc
daa
add
sbb
lea
jb
scas
scas
sbb
pop
das
add
dec
iret
jb
mov
stc
lahf
stc
je
add
inc
mov
in
rol
add
pop
xor
pop
sub
mov
sbb
cmp
cmpsb
scas
mov
lds
js
jne
aaa
mov
ss
sub
into
dec
xor
decb
inc
sub
mov
push
mov
shll
mov
outsl
in
movsl
lahf
ljmp
dec
sub
or
rolb
pusha
mov
mov
ja
in
sarb
movsl
xorb
inc
push
xchg
cmp
cld
mov
adc
notb
mov
dec
outsb
xlat
push
jb
iret
dec
flds
sbb
in
mov
fisubrs
mov
cmp
cwtl
push
int
mov
pop
mov
lods
xor
les
jmp
ss
bound
sahf
pop
mov
or
adc
mov
push
clc
jno
test
sti
in
mov
push
outsl
adc
pop
rclb
in
or
mov
test
les
fists
pop
sub
outsl
jae
clc
lret
inc
xchg
negb
push
cmp
fnstcw
xchg
mov
xor
or
inc
cmc
mov
jbe
push
cmpsb
xlat
dec
inc
cmpsb
mov
icebp
mov
jb
jno
lock
dec
jmp
std
insl
divb
daa
mov
lods
lahf
xchg
and
inc
cli
repnz
fldcw
xor
std
inc
fists
xchg
xor
xlat
mov
xchg
cmp
outsl
aad
mov
xor
or
cmpb
fmuls
enter
dec
ja
jmp
inc
jmp
aaa
xchg
addl
lcall
arpl
daa
bound
subl
std
pop
sbb
mov
addr16
ds
push
dec
pusha
sub
ficomps
push
nop
mov
lds
dec
push
lock
loop
mov
repnz
xchg
and
int
sub
cmp
notb
xchg
int3
inc
repnz
cmp
in
repnz
je
cld
mov
lock
ds
lahf
das
cltd
js
js
pop
adc
pop
or
stos
inc
or
mov
das
sbb
sar
cmpsb
mov
sub
or
mov
dec
sbb
jl
dec
addl
jb
push
mov
cmpsb
stos
pop
inc
enter
lret
dec
push
xchg
mov
pop
sub
push
push
and
mov
in
jp
leave
cmp
pop
bt
bound
fimull
pop
or
fldl
gs
xchg
dec
xor
lods
push
test
push
lahf
xchg
xor
scas
aaa
shlb
jnp
push
dec
outsl
pop
add
xchg
jp
icebp
fisubl
mov
cmp
out
mov
insl
cwtl
hlt
fldcw
ja
sbb
cs
int
add
mov
or
pop
mov
inc
sub
repnz
jg
jl
xor
add
mov
add
xchg
test
xchg
inc
or
fcomps
push
test
push
je
xor
ficoms
or
jno
jp
mov
jbe
jmp
in
sbb
mov
outsb
and
adc
push
jno
loope
int
inc
push
cmp
movsl
xor
insl
mov
cs
xchg
and
xchg
push
mov
gs
lahf
jl
sub
lret
mov
nop
mov
rolb
enter
sbb
mov
repnz
shrb
mov
jge
or
fstp
inc
pop
jno
xchg
subb
mul
lahf
dec
inc
push
push
lock
mov
push
insb
lcall
sti
into
sahf
or
lcall
inc
jmp
cmpsb
in
jmp
jno
rcrb
stos
insl
je
xor
loope
mov
add
repz
scas
popa
test
scas
pop
xor
ljmp
cwtl
int
jle
or
inc
insb
popf
pushf
loopne
jge
or
sub
roll
hlt
or
mov
adc
push
shrl
mov
mov
rclb
cltd
das
lods
dec
lea
flds
pop
lock
jecxz
pop
fyl2xp1
push
mov
xchg
fnclex
push
int
insb
xchg
push
or
shrl
out
mov
pushf
cmp
rorb
mov
ret
mov
mov
hlt
int
out
and
fdivl
aad
sbb
mov
les
jge
scas
imul
outsl
adc
shll
rclb
std
notl
je
sub
leave
leave
push
add
enter
mov
fstpt
pop
pop
cmp
stc
mov
pop
push
test
sub
inc
jmp
push
mov
loopne
fisubrs
pop
ljmp
push
jne
push
push
outsl
dec
pop
push
daa
and
xchg
es
data16
add
xor
leave
cwtl
es
ret
and
insb
fwait
stos
sub
mov
jp
rcr
std
out
lret
xchg
iret
adc
imul
lret
ja
out
test
cmpsl
mov
fildll
fcoms
xorb
cmp
sub
test
mov
xchg
cmp
mov
fisubrl
mov
mov
inc
pop
leave
xrelease
subl
pop
loope
xor
aad
pop
jecxz
fiadds
mov
push
adc
and
mov
leave
nop
pop
push
js
dec
cmpsb
decl
adc
xor
cmp
jle
in
cmpsb
jnp
sbb
stc
lret
ljmp
lea
inc
add
mov
outsl
shl
xlat
in
pop
jb
ja
adc
sbb
add
dec
shrb
and
cltd
pop
push
sbb
xchg
cmp
repnz
ss
stos
dec
cmc
add
jbe
lcall
pop
mov
arpl
ljmp
jns
mov
xchg
int3
xchg
divb
xchg
aaa
cltd
sub
dec
hlt
fwait
jge
or
fldt
adc
in
xor
cmp
push
pop
pushf
sbb
adc
movsb
in
push
cmp
notl
add
sbb
inc
push
xor
push
or
pop
push
mov
add
enter
cmp
testb
mov
clc
icebp
imul
mov
jp
into
jbe
mov
fwait
iret
outsb
push
pop
into
shlb
fstpl
sahf
jae
adc
mov
add
add
cmpsb
pusha
outsb
sbb
nop
or
pusha
adc
jb
and
sti
pop
hlt
xor
cwtl
mov
popf
les
imul
lret
es
and
cmp
mov
sub
shl
and
jnp
fwait
cmc
shll
ret
fstpl
popa
adc
dec
inc
nop
pop
add
stos
sub
push
mov
cmp
addr16
jmp
mov
negb
in
shrb
lock
shl
sbb
jno
cmp
jne
testb
add
inc
inc
or
mov
int
mov
loopne
es
rcrl
mov
mov
adc
lret
data16
outsb
push
nop
sub
cmp
cmpsl
shlb
pop
sbb
gs
cmp
xor
sar
push
sbb
int3
pushl
fcoml
inc
adc
inc
les
or
out
cwtl
test
dec
outsb
xchg
fnsave
out
and
lock
dec
movsb
faddp
or
mov
mov
push
mov
sbb
sub
bound
xor
adc
mov
cmp
adc
xchg
mov
ja
enter
sub
stc
and
das
push
inc
mov
xchg
ret
lret
adc
push
xor
shrb
fnstcw
sub
lahf
mov
mov
into
jl
push
not
dec
pop
inc
lds
daa
aaa
jo
in
inc
test
cmpb
imul
and
mov
mov
aaa
test
pop
jae
lods
out
add
adc
in
daa
pop
jnp
imulb
aad
mov
sbb
xchg
push
jmp
pop
mov
push
nop
xchg
mov
dec
dec
or
mov
inc
jp
adcl
int3
pop
dec
jl
add
dec
push
mov
mov
int3
in
mov
es
inc
pop
stos
mov
xor
aam
mov
sub
sub
cmpl
xor
xor
out
orl
dec
hlt
dec
sub
mov
jo
cs
filds
adc
lods
inc
xchg
test
and
into
cld
addr16
jb
std
lds
pop
inc
mov
sbb
push
mov
ret
adc
test
aad
xor
insb
mov
pop
lds
mov
adc
addr16
out
outsl
outsl
push
pop
add
sbb
repnz
dec
lock
xchg
cmp
mov
in
inc
fistl
lods
pop
repnz
dec
lds
xchg
and
sahf
sahf
outsl
adc
outsb
xlat
comiss
adc
pop
xor
adc
jmp
pop
movsb
cmp
inc
pop
or
xor
cli
sbb
outsl
xor
or
cmpsb
sahf
and
fcmove
loopne
jp
mov
push
push
js
xor
or
pusha
addr16
push
sti
sahf
int
jns
arpl
mov
lcall
int3
imul
hlt
jmp
adc
and
js
dec
xor
repnz
adc
xchg
cmp
mov
sub
ss
mov
into
push
inc
cli
stos
insb
lods
call
adc
and
fists
and
mov
push
scas
sub
out
stos
loop
repnz
dec
fsubl
test
ret
fsubp
addr16
xor
pop
jnp
mov
jmp
adc
lds
int3
gs
cmp
nop
mov
hlt
call
dec
inc
add
rclb
repz
inc
mov
scas
test
rcrb
xchg
sbb
mov
mov
mov
mov
cli
std
jae
icebp
xor
fisttpll
lock
mov
mov
dec
or
lret
pop
jge
push
addr16
or
dec
pop
inc
fucomip
xor
sub
push
xchg
mov
loop
mov
jmp
pop
lcall
push
sub
repnz
pop
fistps
bound
pop
mov
and
inc
decl
test
pop
inc
and
jg
mov
cs
push
arpl
cld
inc
push
xchg
je
mov
or
mov
js
sbb
hlt
or
loopne
stos
test
xchg
lcall
jmp
leave
shl
adc
push
add
xchg
add
jne
insl
jle
je
cmpb
movsb
fistps
and
jne
popa
jo
ja
pushf
test
cld
or
inc
adc
fcompl
dec
mov
mov
rorl
adc
dec
hlt
std
in
inc
adc
add
cli
cwtl
dec
sbb
mov
scas
inc
or
imul
arpl
cmpl
js
add
push
cmpsl
cmovg
subb
push
imul
xchg
cmpsb
lcall
subl
inc
jbe
or
in
inc
mov
pop
push
pop
ss
cmc
xor
inc
and
add
mov
mov
fwait
inc
adc
mov
je
imul
vmread
push
out
and
sub
hlt
push
pop
jl
mov
push
cmp
mov
mov
lret
bnd
loope
pop
dec
je
imul
stc
sub
sbb
addr16
adc
ret
mov
mov
scas
mov
hlt
push
pushf
sbb
jno
cmp
mov
cmp
mov
ds
sub
ds
aad
jmp
sbb
xchg
loop
outsl
pop
mov
xchg
out
popw
fs
mov
add
push
or
scas
int
and
xor
sbb
mov
mov
cmp
jne
sbb
ss
dec
cmp
inc
adc
aaa
mov
je
jle
daa
ror
movsb
ja
cli
lods
ret
out
into
sub
cltd
bound
jg
xchg
add
push
sbb
out
cmp
enter
push
ja
add
into
inc
mov
sub
mov
insl
rorb
mov
xor
js
push
in
lret
xor
adc
in
xor
fisttpll
sahf
outsl
mov
dec
or
xchg
push
jae
pusha
int3
popf
xor
xchg
rorb
scas
push
and
iret
iret
jb
inc
xchg
and
cs
jecxz
out
icebp
repnz
fsubs
mov
fisubrs
ja
push
mov
sub
and
jge
push
aam
mov
xor
in
notb
xchg
push
and
cmc
stc
fmul
ljmp
cmp
jecxz
mov
push
sub
lahf
jg
adc
fistpll
and
aaa
and
jns
and
aas
pop
je
pushf
mov
inc
inc
in
jns
add
ja
loope
jb
cmp
adc
movsl
cwtl
hlt
ds
nop
inc
xchg
adc
mov
pop
pop
add
jg
ret
add
sbb
push
cli
test
push
out
cmc
sub
pop
fdiv
xor
push
lahf
push
xor
cmp
sti
call
rolb
xchg
dec
pop
addr16
in
in
sub
xchg
or
inc
nop
inc
in
repz
adc
or
daa
outsl
stos
incl
subb
pop
adc
push
sub
cmp
fwait
cmc
cmp
test
push
adc
inc
mov
rolb
fs
mov
inc
push
outsb
cmp
in
mov
cmp
jne
int3
push
xchg
scas
xlat
hlt
fucom
xor
aas
cli
xchg
dec
aaa
pop
inc
push
gs
stc
out
push
mov
bound
sub
addl
testl
pop
fnstsw
clc
pop
xchg
pop
test
aad
adc
pop
repnz
aaa
adc
jbe
jbe
sbb
cmp
cli
imul
fldl
jnp
js
xor
mov
xchg
push
cli
cmpsl
or
nop
mov
pop
jns
pushf
and
leave
adc
test
cmp
leave
ja
xorb
stos
mov
cmp
lods
mov
mov
inc
mov
xchg
adc
cmpb
pop
mov
cmc
push
sbb
fwait
cltd
or
sub
push
sarl
inc
loop
or
adc
mov
cmp
pop
rcrl
and
ja
mov
inc
outsl
loopne
add
insb
movsb
pushf
stos
stos
or
sti
insl
andl
pop
mov
adc
sub
or
sbb
cli
icebp
mov
and
movsb
in
ds
daa
mov
test
ja
roll
cmp
sbb
add
mov
shlb
or
into
lock
dec
pushf
pop
dec
add
outsb
hlt
adcl
xchg
push
clc
out
sbb
jo
cmpsl
adc
nop
sbb
mov
jecxz
jno
jge
test
scas
cmp
sarb
mov
daa
cmp
into
and
in
dec
int
les
sbb
addr16
pop
cmpb
cld
inc
repz
cmc
shlb
sbb
pop
pop
dec
push
add
sub
cmpsl
shlb
stos
dec
xchg
inc
or
inc
cltd
mov
subl
xchg
outsb
mov
out
or
mov
push
dec
adc
aas
push
jg
movsb
inc
sbb
stos
add
movsl
das
mov
pop
and
push
std
call
sbb
rorl
out
rol
xchg
push
jmp
lea
lods
cld
mov
and
jg
add
pop
xchg
stc
xchg
ss
aam
repnz
iret
int3
mov
add
jl
dec
xlat
cwtl
testb
test
fwait
fwait
push
add
test
cmpb
iret
mov
fs
mov
mov
fwait
lock
xchg
xchg
push
jns
rorb
lock
mov
pushl
leave
bound
bound
adc
aaa
getsec
xchg
fists
imul
lods
xlat
mov
jb
fcompl
jns
push
mov
cld
pop
cmpsl
std
jo
stc
mov
cmp
mov
scas
cmp
mov
dec
pop
jmp
jp
xchg
mov
mov
pop
icebp
js
xchg
test
sbb
and
stc
mov
sar
rclb
cmp
stos
mov
and
sbb
and
dec
pushf
aaa
aam
cmpsl
xor
inc
test
das
in
gs
mov
ss
lock
dec
dec
adc
loope
aad
sub
inc
inc
popa
jmp
cmpb
sbb
mov
mov
and
jno
sbb
scas
enter
bound
aad
push
lds
ljmp
aad
pop
rcr
jle
cmp
sahf
sub
cwtl
ret
mov
sub
mov
xor
lahf
leave
push
cmpsb
daa
mov
lret
lods
pop
add
icebp
fsubs
inc
daa
or
mov
sub
sbb
xor
cld
pop
test
stos
and
jae
leave
movsl
push
dec
bound
out
xchg
rcl
sub
xor
mov
xor
outsb
adc
or
in
jnp
in
lret
aas
add
jns
push
or
or
xchg
lods
and
scas
cmp
jb
call
loope
adc
addr16
std
mov
or
int
pop
adc
mov
cmpsb
mov
add
cli
pushl
and
push
lds
or
and
in
push
jmp
fldl
ljmp
cmp
lds
pop
or
fidivs
in
and
mov
sub
add
mov
jo
scas
dec
fcmovb
cmc
in
scas
decl
jns
mov
jns
roll
pop
lret
aaa
call
fcoms
pop
jno
jl
pusha
or
pop
sahf
sti
insb
in
cmp
sbbb
fldt
cmp
push
cwtl
out
pop
iret
and
call
cmp
push
dec
push
aas
and
sbb
ljmp
cmc
mov
jl
frstor
mov
fdivrp
mov
rclb
or
or
insl
and
and
jno
aaa
out
movsb
cmpsb
gs
and
jp
fsubrs
adcl
sti
aam
nop
and
bound
inc
scas
bound
mov
outsb
fprem1
pop
pop
outsb
mov
fistpll
push
scas
insb
or
test
push
inc
sahf
in
pop
pop
push
call
add
dec
cli
sub
xchg
mov
outsb
test
insb
pop
roll
sub
ror
xchg
aas
daa
in
repz
mov
je
xor
sub
cmp
call
out
int
filds
mov
jle
sahf
mov
outsb
hlt
test
cwtl
stc
pop
add
xor
push
xchg
pop
xor
inc
jno
pushf
into
and
cwtl
mov
push
shl
xchg
pop
xchg
icebp
call
out
pop
inc
lock
sbb
mov
fnstsw
lcall
pop
cld
ret
inc
or
dec
dec
lods
subb
ja
fcomi
aas
xchg
sbb
xchg
jl
mov
aas
mov
add
aam
inc
insl
mov
xchg
jp
dec
sbb
pop
mov
pop
and
in
aad
mov
mov
shlb
repnz
fldlg2
int
fidivl
loope
leave
and
ja
xchg
cmp
sub
dec
hlt
or
mov
cli
outsb
imul
test
jmp
xchg
mov
gs
push
dec
js
fs
jb
js
frstor
add
and
ds
scas
popa
dec
adc
push
sub
movsb
cltd
jae
mov
sbb
int3
jno
inc
out
loope
cmp
cltd
mov
inc
rorb
jp
inc
lods
dec
pop
test
rorl
push
arpl
sbb
in
test
inc
push
out
xor
fsubs
jl
mov
aad
rcr
popa
push
imul
ja
dec
jp
jge
push
mov
and
sbb
aas
mov
push
or
xor
out
mov
repz
fmuls
sbb
out
mov
rol
and
inc
add
mov
xlat
cmp
sub
out
pop
stos
adc
imul
xor
loop
dec
sub
push
jmp
addr16
ja
mov
sbb
lcall
and
dec
sub
cmc
mov
scas
lcall
nop
jne
dec
and
and
cld
test
mov
sub
adc
mov
xchg
xor
lods
sub
loope
dec
pop
and
bnd
add
push
fld
sbb
push
stos
xchg
mov
daa
cmp
loope
loopne
mov
pop
test
pop
push
pop
dec
std
cld
mov
int
mov
jge
arpl
sub
pop
repnz
pop
es
dec
jl
addl
xchg
testb
pop
jmp
push
xchg
xchg
gs
add
mov
int3
xchg
lahf
ficoml
push
jbe
xor
je
fdivr
push
sbb
sub
push
pop
add
add
shll
jne
mov
stos
mov
push
add
sbb
push
xchg
or
je
dec
xor
and
xchg
lock
leave
xchg
repnz
or
pop
shll
xchg
mov
out
fldcw
stos
in
sbb
jmp
sub
loop
push
cmp
pmulhuw
dec
orl
sub
nop
xor
mov
adc
ret
out
in
jbe
iret
adc
jp
xchg
insb
push
es
clc
adc
jle
add
push
das
mov
fwait
cld
mov
jle
rcrl
and
xchg
inc
hlt
or
or
imul
mov
iret
test
xor
xor
test
icebp
mov
and
data16
sbb
aam
fnsave
add
dec
push
xor
andl
mov
ret
jp
aad
add
mov
pop
jo
lahf
outsl
mov
sbb
pop
cmp
sbb
enter
xorb
jl
push
int
adc
jmp
cmp
and
rcll
in
and
roll
cmp
adc
sub
xchg
les
cli
mov
cmpsl
bound
ret
pop
and
adc
sub
aad
dec
and
in
mov
fdivs
pop
add
movsb
push
mov
or
stos
cmpsb
xor
cmpxchg
ss
mov
loopne
das
ss
stos
adc
fdivrl
popa
fisttpl
jns
xor
andb
imul
adc
or
xor
and
ret
cmp
inc
xor
movd
fs
leave
js
xchg
mov
sub
cli
mov
stos
push
add
fmull
mov
xor
cs
int
push
and
pop
and
fildl
test
je
cmp
inc
push
fadd
scas
inc
inc
mov
aad
xchg
rorb
fcoms
rep
std
addb
sti
inc
add
xor
fxch
out
ljmp
adc
inc
test
andb
idiv
test
lock
mov
orl
adc
int
dec
inc
jne
int3
test
xor
jb
push
repnz
push
pushl
lods
push
xor
pop
arpl
pop
mov
lds
insl
dec
xchg
cmpsl
lods
pop
sub
inc
je
mov
push
xchg
add
jle
add
inc
mov
sbb
mov
aad
xchg
faddp
sbb
cltd
mov
in
lea
xor
inc
or
dec
push
inc
mov
mov
out
or
adc
mov
cmp
cmc
pop
lea
jne
testl
js
and
mov
in
push
idivb
mov
pop
loope
jns
push
xor
push
jmp
loop
xor
lret
cmp
pop
std
in
pop
sbb
je
inc
jmp
dec
add
outsl
in
cmpsl
sub
pushf
xlat
ss
out
dec
jmp
adc
insb
xor
jg
imul
fsub
test
in
stos
mov
mov
mov
out
movl
or
xchg
out
xchg
ds
mov
inc
fmuls
test
stos
std
js
xchg
xorb
rol
sbb
jp
sbb
pop
aad
mov
mov
pop
mov
xlat
mov
jae
pop
roll
push
rclb
xor
movsb
mov
add
cmp
mov
movsb
ljmp
xchg
sahf
cmp
jno
pop
pop
loopne
cmc
pop
push
sub
data16
jno
das
push
fmul
mov
test
sub
addr16
jnp
and
mov
lret
add
lahf
loop
rcrl
das
xlat
andl
dec
sbb
jo
frstor
aas
mov
pop
test
jmp
outsb
pop
icebp
mov
sbb
cmp
xchg
into
adc
divb
or
insb
sub
jg
das
xlat
xor
int3
add
adc
dec
std
mov
sub
adc
mov
subl
sub
and
fisttps
stos
ljmp
test
test
cmp
push
dec
gs
push
rcr
or
pusha
lcall
loopne
cmp
rolb
add
cmpsl
push
cs
pop
repz
rcll
fsubl
sub
jne
xchg
aaa
cmpsb
pop
aas
gs
push
cmp
jae
push
mov
pop
incb
dec
sub
shlb
jl
sahf
mov
pop
rcll
ret
andb
data16
movl
push
pop
add
addb
cltd
movsl
out
adc
pop
add
movsb
test
sarb
and
psllw
mov
call
fcomi
inc
pop
dec
cmpsl
sarl
mov
pop
cmp
ljmp
fildll
and
cmp
popf
push
or
or
xchg
mov
xor
lea
repnz
jle
jbe
addr16
shrb
cmpsb
xlat
cmp
sbb
in
dec
push
xchg
leave
adc
mov
imul
xor
scas
lahf
xlat
daa
jnp
jge
sub
cltd
jge
aad
scas
ffree
sub
add
sbb
adc
adc
aam
ret
imul
jg
push
loope
mov
or
sahf
test
into
push
xchg
and
jl
xchg
ficomps
movsb
in
add
sbb
sti
pop
push
rolb
aaa
and
xchg
fcmovbe
mov
xor
add
push
cmp
and
popw
or
aad
mov
sbb
jg
repnz
push
shlb
jge
sub
sub
or
insl
push
cmp
in
jge
sarl
mov
or
cmpsl
jb
popf
lret
mov
cmp
or
aas
jg
fisubs
dec
push
ljmp
jmp
imulb
stos
fisubl
jmp
stos
outsb
movb
xchg
or
inc
daa
push
pop
int3
loop
add
push
push
dec
dec
mov
ljmp
shrl
inc
out
loop
dec
imul
and
ja
mov
imul
lods
push
mov
rol
hlt
sti
dec
jbe
int3
and
sub
or
lods
inc
roll
mov
jp
pop
and
fnstenv
xchg
xchg
mov
inc
ds
cli
aad
inc
jae
cmpsb
xor
outsb
xor
arpl
stos
mov
fdivp
into
adc
mov
cmpl
lahf
repz
lods
jno
dec
add
push
inc
sbb
jne
xchg
or
mov
out
add
sub
jmp
fnsetpm(287
shrl
inc
pusha
pop
andl
sbb
pushf
inc
pop
push
inc
jb
sahf
mov
mov
jbe
inc
and
pop
xor
xchg
lods
lret
gs
cs
or
cs
jmp
jge
mov
ret
sub
aas
dec
rorl
pop
lret
mov
std
andl
adc
add
xchg
adc
addr16
pop
sub
and
xor
xor
jne
add
movsb
in
sti
sarb
call
mov
leave
mov
or
xchg
pop
pop
fcomp
cmp
xor
mov
in
push
mov
lret
mov
fwait
push
add
fcoml
push
adc
fwait
push
mov
imul
ror
push
lahf
mov
mov
into
adc
dec
fstpl
sub
jg
fimuls
shll
mov
idivb
loopne
imul
jecxz
outsl
std
fwait
sarl
shll
mov
lret
fs
out
out
mov
call
lock
jmp
insb
loopne
lock
nop
scas
jecxz
mov
bound
adc
imul
or
inc
popf
mov
xchg
push
fcom
xor
fsubrs
sbb
lret
jne
sub
pop
xchg
pusha
pushf
jno
and
notb
adc
dec
ja
lods
ljmp
call
mov
int3
outsb
mov
sbb
inc
sbb
test
xlat
icebp
add
ja
push
adc
mov
jne
iret
fistps
jne
leave
stos
cs
xchg
cmp
cmc
add
push
nop
lods
pop
pop
aas
xchg
jl
inc
loope
stos
cs
mov
adc
stc
mov
aas
int3
loope
clc
idivl
in
pop
inc
scas
out
push
in
lea
mov
mov
int3
cld
cmpl
in
pop
push
clc
mov
repz
sbbb
and
popa
inc
jbe
aam
xchg
mov
insb
xor
pop
xchg
lahf
outsl
mov
ret
out
in
pop
pop
stos
sbb
mov
cmpsl
bound
pop
sbb
stc
jnp
ss
fnsave
lahf
ds
lods
mov
es
mov
cmpl
sbb
into
scas
sub
movb
ror
vaddsubpd
add
in
test
rcrl
mov
imul
add
fiadds
jg
adc
dec
nop
and
adc
sub
cmp
cli
push
adc
repz
xor
xchg
jb
fildll
pop
dec
sarl
or
cltd
cmp
sub
inc
aas
lcall
out
push
in
dec
cmp
lea
cmp
shll
test
adc
dec
xchg
push
mov
and
gs
fbstp
popf
cmp
sub
xchg
fidivl
adc
mov
jg
inc
sar
mov
jp
aam
add
ficomps
mov
push
xor
pop
adc
repz
cwtl
push
movsb
shlb
mov
ret
xchg
in
inc
fdivrl
icebp
mov
mov
sbb
shll
in
cli
repz
cmp
adc
fwait
in
vmulps
mov
inc
pop
or
and
or
mov
shlb
push
data16
xchg
sub
aas
xor
xor
push
mov
add
test
cwtl
dec
mov
mov
or
rolb
js
fdivrl
aam
inc
out
mov
es
or
fsts
mov
testb
js
pop
mov
add
add
repz
push
xchg
dec
sbb
jb
shlb
or
cmp
dec
and
mov
fsubp
popf
sti
rcrl
mov
andb
int3
in
sarl
ret
int
inc
or
adc
mov
xor
and
out
std
jg
mov
mov
sub
cmp
outsl
dec
fsubrl
cmpsb
mov
mov
inc
adc
mov
jecxz
and
divl
outsb
push
hlt
jp
aaa
aam
fcomps
ret
push
cltd
mov
stos
cwtl
daa
cld
pop
rclb
inc
xchg
loope
mov
outsb
js
fiaddl
lret
ror
sbb
add
jb
adc
cmp
mov
sti
xchg
cmp
mov
sub
pop
ds
sbb
test
les
repnz
movsb
jbe
pop
das
ret
mov
outsb
jmp
lea
jge
lods
xlat
test
dec
gs
mov
test
mov
popl
sbb
inc
inc
mov
out
fisttpll
and
push
mov
mov
mov
sbb
xor
pop
pop
rclb
arpl
jne
adcl
or
sub
addr16
inc
popf
sub
push
out
or
mov
imul
sub
push
movq
jmp
add
add
movsb
and
in
inc
xchg
mov
les
insb
arpl
divl
or
imul
push
scas
daa
jnp
in
pusha
out
dec
or
pushf
aaa
lea
test
pop
rcr
mov
and
mov
or
mov
dec
xor
arpl
lahf
lock
pusha
mov
in
addb
addr16
or
addb
adc
mov
dec
sahf
mov
popa
cmpsb
xor
gs
movsl
xor
in
ljmp
xor
push
sub
xchg
mov
cmp
movsl
jle
insl
xor
scas
mov
gs
fstpt
jp
mov
das
lods
cmp
push
add
adc
test
incl
addl
and
sub
cmp
sbb
icebp
xor
out
out
out
xor
inc
bnd
adc
insl
jmp
xchg
outsl
dec
shlb
push
xchg
dec
mov
mov
cmp
lods
mov
cwtl
cmp
popa
std
mov
test
cld
push
mov
jmp
movsb
sahf
add
mov
cli
dec
and
jle
pop
stos
inc
addr16
and
jne
andb
int
push
pop
repz
fldz
lret
xor
push
scas
jb
bound
jl
inc
push
fldl
or
jb
std
lret
jnp
pop
dec
insb
xor
xchg
xchg
lret
stos
sahf
dec
std
and
sub
jmp
and
pop
dec
insb
or
jns
xor
push
mov
fcompl
xchg
or
mov
jmp
lahf
and
mov
xchg
mov
cmp
xchg
in
dec
jns
sbb
inc
pop
jb
xor
sub
inc
test
xchg
mov
addb
insl
jmp
add
cmp
aas
push
inc
and
jnp
data16
ret
or
jno
in
lock
mov
inc
mov
mov
sahf
cmp
and
push
scas
loope
sub
jae
ss
fisttpll
xor
aas
pop
nop
and
cmp
out
sub
sub
ds
sub
jae
jg
jb
sbb
sbb
repz
imul
outsb
mov
test
mov
out
mov
std
lods
and
pusha
adcb
jp
fld
sub
xor
aas
jmp
pop
cmp
jp
add
aam
sbb
sbbl
sarw
mov
shrb
fdivrs
push
dec
das
push
outsl
fwait
and
leave
adc
xchg
aam
push
add
xor
int3
xchg
mov
rorb
push
ljmp
or
adc
loop
ljmp
ja
subl
scas
sbb
fsubr
mov
cltd
mov
das
cmp
lock
std
nop
shlb
js
outsb
je
dec
sub
lds
mov
movsb
and
mov
dec
outsl
add
les
lahf
js
les
repz
fdivr
push
shrb
loop
cmpb
jle
push
mov
std
out
insl
push
std
jns
xlat
cmp
jl
mov
and
frndint
and
or
and
in
mov
xchg
outsb
scas
repz
add
inc
push
add
add
push
out
cmp
xor
jb
add
lods
fldenv
sbb
inc
mov
divb
insl
mov
jle
mov
adc
adc
xchg
insb
clc
jns
push
dec
jle
push
xchg
xor
scas
push
mov
xchg
xchg
inc
std
cmpsl
mov
jg
nop
mov
pop
push
rcrl
pusha
xchg
mov
std
jl
cmp
cmc
pop
lock
adc
movsl
mov
sbb
inc
out
and
out
mov
xchg
in
pop
subb
arpl
and
test
xor
shlb
push
cmpsb
jae
xchg
dec
add
test
xchg
fs
pop
or
rcrl
je
daa
repnz
call
stos
push
mov
ljmp
inc
dec
mov
add
mov
jl
cmpsb
add
mov
sti
nop
aaa
push
sub
call
out
mov
cmpsl
das
sbb
outsb
pop
adc
cld
adc
mov
or
dec
sbb
loop
adc
adc
stos
mov
imul
cmp
jle
fldt
pushl
icebp
clc
add
aad
mov
andl
mov
insb
xchg
shll
movsl
mov
mov
cmp
mov
jno
int3
cld
mov
loopne
test
inc
aam
fcomip
sarb
les
cwtl
fdivs
das
iret
xor
jle
lret
dec
or
fbld
add
in
sqrtps
rol
inc
inc
incb
cltd
clc
xor
push
mov
test
fstl
arpl
arpl
out
scas
mov
pop
push
push
in
dec
add
imul
and
mov
loope
pop
mov
mov
xor
xor
inc
push
lods
jnp
add
in
jae
adc
mov
adc
out
inc
movsl
int
mov
push
bnd
inc
push
sub
push
xor
jb
cmp
aad
movsl
add
mov
pusha
lcall
ljmp
push
out
jno
jo
add
movsb
and
popf
mov
add
into
daa
sub
jnp
rcl
xchg
jo
in
mov
clc
fstl
cmp
lods
xchg
push
jmp
inc
aas
fdivl
adc
xor
mov
jge
enter
daa
jnp
cmp
cs
adc
dec
scas
pop
int3
in
rorb
stos
xchg
pop
sbb
gs
xchg
shl
stos
std
stc
push
data16
add
nop
mov
push
pop
test
or
test
mov
out
in
into
pop
adcb
imul
sahf
mov
mov
aam
imul
jae
cmp
sub
mov
inc
jns
imul
or
jbe
xchg
lcall
cmpsb
mov
pop
ljmp
jle
fistpl
lret
xchg
mov
outsl
or
popa
cmp
nop
in
fwait
clc
mov
loope
test
cld
cwtl
adc
iret
loopne
mov
mov
lahf
addr16
add
adc
std
mov
mov
xor
aaa
adc
mov
push
mov
push
sub
jbe
repnz
or
mov
inc
dec
je
lock
jl
inc
sti
dec
bnd
pop
cwtl
inc
mov
fbld
sub
shll
out
dec
jmp
mov
loop
hlt
jns
sub
ss
iret
mov
and
cmp
xor
bound
aam
cmp
out
cmpsl
jne
loop
fmul
push
push
sbbb
mov
into
popa
inc
pusha
popa
xor
sub
sub
mov
push
mov
jle
sbb
mov
in
pusha
andl
in
mov
shrl
dec
xchg
adcl
mov
das
jecxz
mov
daa
imul
sub
dec
push
incl
cmc
popa
mov
ss
icebp
mov
dec
xchg
imul
mov
arpl
add
stc
cmp
push
insl
leave
stc
pop
fprem
mov
test
dec
bound
nop
xor
jbe
push
aas
cmp
cwtl
aam
mov
sarl
or
loop
lahf
subb
sub
and
lcall
push
add
lcall
test
mov
inc
dec
mov
push
div
repz
loope
scas
dec
sub
call
ds
xorl
test
mov
jmp
adc
orb
and
sbb
xchg
jo
xor
fs
jmp
roll
cmpsl
cmpsl
data16
ljmp
add
movsb
mov
call
into
stos
outsl
xadd
mov
rcr
inc
iret
cmpsl
popa
xchg
mov
js
fcmove
enter
fsubl
fisubrl
pop
in
adc
movsb
cmp
push
push
mov
js
pushf
imul
mov
pop
bnd
and
aad
mov
push
imul
mov
push
sub
mov
jne
or
jge
or
pop
or
ret
enter
or
sbb
pop
adc
dec
insb
sbb
out
push
or
xchg
jmp
mov
push
inc
ss
ja
pop
iret
xor
jp
sbb
push
mov
mov
and
call
cmp
cld
dec
pop
mov
arpl
add
testb
cwtl
inc
push
daa
into
ret
mov
ss
pop
test
and
cmc
mov
mov
sub
mull
aad
xchg
das
push
loop
dec
test
ds
mov
sub
aas
xlat
adc
sub
jl
cmp
add
bound
ficompl
sub
sahf
lods
add
inc
test
push
jecxz
push
jecxz
mov
vcmppd
add
push
scas
xchg
pop
jp
popa
push
aas
jle
push
in
int3
xchg
stos
jb
pop
test
daa
outsl
movsl
pop
pop
inc
test
bound
pop
pop
insb
call
dec
mov
in
jle
pop
icebp
popl
jns
bound
les
mov
fistpll
ja
jbe
cwtl
clc
mov
sti
or
stc
jg
les
lret
hlt
pop
push
dec
dec
rcr
dec
adc
mov
test
nop
inc
sysexit
add
stc
movsb
leave
cmc
or
dec
icebp
and
lret
inc
loope
ss
ficoms
inc
xchg
dec
ret
mov
xor
pop
iret
and
sbb
push
rcr
std
in
adc
hlt
lret
iret
sti
imul
cld
sub
icebp
lahf
bound
adc
fmull
int
rclb
and
mov
and
push
jns
xchg
cmp
push
addb
int
cli
push
dec
loopne
lods
add
adc
data16
repz
aaa
pushl
int3
scas
xor
mov
jmp
dec
and
sarb
pusha
lret
imul
dec
aam
bsr
bound
stc
sbb
arpl
lret
mov
mov
sub
adc
xchg
xor
andl
sarb
ljmp
mov
mov
and
bound
fstpl
or
out
cld
test
popa
dec
out
inc
dec
iret
xchg
lahf
xor
cmp
ret
sub
or
fcom
mov
adc
cmp
push
push
push
cwtl
xchg
xor
adc
mov
lods
mov
push
stc
xchg
inc
cltd
mov
and
xor
mov
fsubs
jp
pop
xor
sti
pop
cmc
dec
xchg
lods
inc
and
inc
movsb
mov
adc
cmp
dec
push
data16
mov
fsubrs
push
faddl
fistl
dec
xchg
je
andb
cli
sbb
push
pusha
inc
ds
aam
dec
ss
mov
cmp
jne
outsl
mov
add
in
jg
popf
cmp
jmp
stc
imul
lcall
add
mov
ficoml
rorb
shlb
xor
and
or
or
xchg
imul
in
sbb
iret
js
imul
bound
aas
addr16
ret
fisubl
roll
cwtl
cmpsl
iret
pop
stc
pop
xchg
js
mov
dec
xchg
mov
iret
xor
jmp
xchg
pop
xor
in
xchg
mov
and
mov
add
xor
push
adc
lds
sahf
dec
and
pop
push
mov
mov
jb
push
cwtl
das
imul
fnsave
mov
jns
out
mov
ja
jnp
fwait
out
repz
xor
push
or
in
cmpsl
lods
in
mulb
mov
shrl
pusha
pusha
jecxz
fisubs
cltd
push
push
pop
xor
xor
adc
cmp
mul
das
mov
pop
insl
mov
dec
in
cli
stos
cmpsb
stc
inc
and
rorb
or
mov
jp
adc
cmp
fidivs
push
mov
fwait
shrl
pop
and
push
rcr
pushf
adc
imul
jb
ficoml
mov
pushf
sub
in
loope
dec
pushw
popf
aaa
push
push
test
jecxz
sbb
call
adc
fcomip
inc
mov
pop
scas
loopne
decl
mov
pop
dec
mov
je
sahf
push
shll
and
and
push
lret
popa
jmp
lock
mov
dec
inc
in
daa
pop
daa
insb
or
jl
xchg
fidivs
inc
jnp
pop
mov
sarb
cmp
mov
les
repz
je
jp
dec
push
inc
sub
adc
cs
mov
inc
dec
pop
sub
and
sub
xchg
sbb
lahf
pop
fsubs
lods
fnstenv
imul
shlb
cmp
lock
xchg
adc
pop
jo
pusha
testl
test
jecxz
sti
rclb
and
mov
xchg
mov
stos
jb
orl
and
repnz
movsb
jmp
imul
pushf
add
scas
xchg
loopne
clc
or
push
xchg
std
sub
popf
dec
dec
or
add
in
rorl
push
aaa
lods
and
pop
mov
out
dec
add
and
mov
arpl
fadd
push
inc
adc
adc
call
push
in
mov
popf
fsubs
jb
dec
shlb
mov
push
jg
dec
pusha
xor
into
push
mov
flds
outsl
xchg
push
and
jns
xor
jns
outsb
mov
sub
sti
div
xchg
xchg
add
lahf
ret
test
loopne
ret
mov
mov
push
addr16
mov
jl
inc
cld
incl
jmp
fisubl
imul
addl
int3
add
pop
push
xchg
add
dec
jmp
imul
jno
ficoms
lods
fsubrl
or
add
outsl
sub
scas
push
adcb
xchg
add
mov
xlat
popf
or
out
and
add
lds
imul
sub
mov
outsb
mov
push
fwait
leave
in
push
in
mov
mov
stos
setb
push
in
std
call
lock
jbe,pn
inc
mov
or
cmp
fmuls
movsl
sbb
stc
adc
jne
jb
push
dec
mov
test
bound
scas
pop
das
ss
in
mov
pop
sub
add
or
fadds
loop
adc
in
loope
or
mov
inc
xorl
xor
test
cli
or
dec
inc
out
scas
sbb
mov
pop
lea
dec
add
in
mov
xor
push
jno
adc
fcompl
sbb
out
or
loope
movsl
push
lock
scas
inc
cli
sbb
mov
adc
dec
icebp
or
pop
leave
mov
in
arpl
pop
ja
rolb
cli
fnsave
push
and
shrl
lods
jns
mov
jmp
je
push
xor
xor
jmp
pop
or
cmp
les
jp
xchg
or
add
adc
fdivrp
lds
not
bound
or
lods
mov
js
popf
scas
mov
add
inc
pop
adcl
xor
aam
cld
fwait
bound
add
mov
test
and
xor
push
stc
das
fyl2xp1
das
xlat
add
inc
mov
scas
popf
test
inc
movsb
std
mov
loope
mov
es
mov
les
lds
out
nop
inc
inc
sbb
js
adc
insb
aaa
and
mov
pop
add
mov
inc
dec
pop
lds
add
lea
inc
in
ficoml
xchg
fcomip
mov
cs
sbb
cmpl
mov
xor
les
jmp
cmp
mov
les
cmp
lods
jb
add
lahf
in
pop
xor
pop
sub
aad
incl
pusha
jbe
lock
lcall
fisubs
fisubl
xchg
out
dec
push
inc
push
mov
jo
rolb
nop
jmp
scas
lcall
jnp
xor
in
push
jno
and
call
xchg
pop
xchg
lods
and
call
pushf
sti
inc
mov
or
mov
xor
push
dec
sub
sbb
inc
cmp
pop
imul
push
aad
sub
dec
movsl
ja
dec
negl
sbb
pop
fildll
sub
cli
and
je
nop
push
aaa
cmp
sti
inc
ja
xchg
lods
add
and
mov
je
add
xchg
mov
mov
lcall
mov
xor
sbb
fsubr
push
outsb
mov
and
push
bswap
aas
arpl
dec
jne
inc
mov
leave
adc
aas
dec
mov
mov
insb
mov
xchg
fwait
das
repnz
fnstcw
test
popf
cmpsb
stos
xchg
imul
lock
shrl
jns
sbb
cmp
adc
mov
push
dec
mov
and
push
je
jl
pop
out
xor
inc
ljmp
jg
mov
xor
mov
out
jae
adc
dec
and
clc
or
xchg
mov
mov
lret
rolb
sar
pop
xor
cli
cmc
add
dec
lret
mov
pop
movsb
ret
pop
adc
push
xor
aas
lea
lcall
cmp
mov
bound
jp
pop
lret
jge
push
cmpsl
fisttpl
mov
std
jbe
loop
sub
mov
sub
adc
test
xchg
add
add
ficoms
or
xchg
shll
repnz
pop
mov
add
shlb
ss
adc
xor
and
and
in
lea
out
xor
mov
shrb
outsl
xlat
mov
fbld
jne
jb
pushf
mov
jp
rol
lret
mov
dec
aas
mov
ja
inc
push
sti
clc
cmpsb
pusha
cmp
sub
adc
jp
or
pop
popa
in
mov
pop
sbb
movsb
cmpsl
adc
inc
cli
lcall
scas
into
pop
or
js
adc
adc
inc
or
mov
into
test
cmp
xor
rcrb
add
jo
add
jp
ss
jbe
lds
mov
and
sbb
push
outsb
jle
ss
and
fiaddl
movsl
cmp
out
data16
xor
mov
js
into
pop
mov
cmp
lds
sbb
jmp
sbb
scas
clc
push
cld
mov
jp
jmp
xchg
and
xchg
call
std
mov
xchg
notb
xchg
mov
leave
sbbb
mov
push
fistpl
and
test
add
cmp
xchg
mov
dec
stos
and
in
fwait
mov
fisttpll
mov
mov
mov
in
dec
jge
jo
or
data16
xchg
bswap
ds
xor
mov
pop
adc
push
pushf
popa
mov
adc
neg
jb
mov
movsb
jo
and
push
leave
xchg
xor
pcmpgtw
xchg
cli
mov
sahf
cmpsl
jmp
int3
add
aam
in
sar
push
fwait
cs
mov
loopne
cmp
in
hlt
imul
aas
int
ret
and
insb
xor
sbb
jb
imul
mov
in
jg
negl
iret
xchg
ss
jl
lret
add
clc
into
xchg
adc
adc
shll
int3
sahf
in
popa
or
fildll
mov
xor
sub
fdivs
decl
xor
xchg
getsec
push
xlat
mov
sbb
scas
dec
jnp
fildl
sahf
js
dec
mov
into
inc
xchg
jo
jmp
sub
push
aaa
sahf
std
jb
cmpsl
aaa
pop
mov
xchg
jne
add
int3
pop
orb
pop
mov
jmp
enter
jae
ds
mov
stc
push
inc
stc
add
iret
leave
pop
mov
loop
mov
push
push
icebp
xchg
mov
rcl
mov
movsl
inc
inc
sti
add
add
and
xor
pop
or
scas
inc
repz
lea
stos
push
and
jecxz
iret
and
js
les
adc
xchg
lcall
lret
mov
in
xchg
fsubrl
adc
sbb
xlat
lret
add
or
hlt
xor
adc
js
psadbw
push
in
add
xorl
lahf
popf
in
mov
int
dec
xor
data16
add
xor
fdivrs
add
adc
movsb
sub
subb
xor
or
movsb
pop
pop
and
inc
mov
jp
popf
cmp
in
jge
mov
fnsave
jl
push
js
mov
cmc
fsts
inc
mov
mov
jmp
mov
push
xorl
mov
mov
aad
mov
fisttpl
ror
cmpsb
cmp
xor
mov
rcrb
push
xchg
into
outsb
push
adc
dec
and
jle
shlb
sahf
pop
xchg
ja
fwait
out
jmp
sbb
dec
sbb
jp
xor
into
xchg
push
repnz
mov
int3
imul
test
lods
lods
or
movsb
icebp
push
loopne
mov
cltd
cmpsb
insb
into
test
mov
push
popa
inc
movsb
hlt
loopne,pn
inc
std
cmp
adc
insb
ds
inc
imul
jo
fnsave
jecxz
faddl
mov
in
adc
pop
cmpsb
xchg
push
cltd
ljmp
aas
rorl
lcall
adc
xchg
imul
mov
push
lods
outsb
mov
fsubrl
and
sbb
cmp
mov
int
mov
mov
ret
std
mov
inc
in
sbb
popfw
sub
punpckldq
dec
cltd
test
addr16
mov
out
push
mov
mov
ret
outsb
mov
push
xor
orb
pop
push
and
lds
lret
repz
aad
mov
xchg
sbb
mov
movsl
nop
cs
sub
cmp
or
inc
clc
xlat
in
mov
push
jbe
xchg
mov
aaa
ljmp
cmp
mov
scas
loopne
cmpsl
cmp
mov
inc
jo
sahf
mov
out
cmc
in
adc
push
cmpsb
lea
adc
jecxz
call
bound
addl
repz
or
jge
jb
aas
addr16
mov
in
mov
mov
fnstcw
add
xchg
leave
es
pop
and
cmc
stos
das
sub
add
sbb
dec
jmp
inc
mov
jecxz
or
xchg
mov
push
data16
int
stos
call
iret
mov
pop
loop
push
cmp
xchg
mov
int
dec
xchg
rcrl
ja
jne
push
cmp
and
push
sub
inc
dec
mov
pusha
aaa
mov
mov
mov
add
fwait
rol
test
call
cmpsl
inc
out
fistpll
mov
jb
xor
jmp
lahf
dec
dec
mov
and
pop
xchg
mov
lcall
ret
xchg
cmpsl
scas
in
sub
cwtl
inc
fwait
or
add
aam
xor
fstps
insl
test
push
push
cwtl
mov
pop
call
push
dec
imul
inc
sub
xchg
xchg
fldl
xchg
test
iret
push
pop
nop
pop
mov
push
pop
test
sbb
loope
adc
bound
adc
js
adc
aaa
clc
mov
pop
or
jae
mov
fdivl
clc
adc
clc
or
mov
das
xor
pop
popa
jnp
jns
pop
sti
in
stc
inc
subb
outsb
mov
cmpsb
mov
xlat
lret
lock
mov
add
inc
cmp
mov
rolb
stos
add
jl
ret
stos
adc
sub
clc
ss
in
mov
loop
dec
mov
xor
cmp
push
xchg
sbb
repnz
push
jb
fld
adc
mov
add
ret
cmp
adc
das
cmpsb
and
push
cmpsl
xor
push
sbb
outsb
jno
subl
pop
test
dec
mov
gs
jo
inc
add
pushf
xchg
inc
das
and
mov
lock
pusha
xchg
lret
adc
xor
mov
mov
push
arpl
out
inc
hlt
xchg
cld
jbe
xor
fstpt
addr16
mov
cmpsl
je
dec
or
ljmp
add
icebp
lret
repnz
dec
daa
lock
fsubrl
shll
cmp
dec
outsl
xchg
mov
inc
or
enter
outsl
xchg
aam
fwait
inc
jmp
das
shll
push
fnstsw
mov
add
aas
pop
mov
iret
movswl
dec
cmpsl
cmp
movsb
jno
xchg
sahf
adc
sub
jbe
sahf
cmp
push
test
adc
adc
ror
je
scas
sar
cmpsl
je
or
mov
sbb
shlb
outsl
lcall
test
dec
mov
xchg
mul
test
pop
out
in
cmp
pop
aam
cld
nop
push
ds
cld
sub
test
xchg
xor
dec
xchg
mov
jecxz
or
shll
inc
lcall
mov
adc
mov
loop
mov
enter
sbb
xchg
sti
repz
in
popa
cwtl
jae
shrb
dec
mov
mov
adc
fidivrs
push
sub
cmp
push
cmpsb
dec
test
repz
inc
stc
mov
push
loopne
xchg
xor
dec
in
mov
adc
inc
cld
stos
push
xor
and
imul
in
fwait
ljmp
stos
pop
or
cmpsb
mov
dec
iret
pop
cmp
insb
mov
je
enter
cmp
dec
aam
out
mov
push
test
sub
mov
imul
cmp
mov
test
mov
mov
ret
loop
mov
mov
adc
scas
ja
mov
jecxz
xor
out
or
test
jl
push
fmull
xchg
andb
std
lahf
mov
test
cmp
jne
shrl
jl
jne
mov
push
daa
mov
push
nopl
add
pop
scas
mov
and
mov
push
sbb
adc
jl
xchg
mov
mov
scas
mov
sub
mov
sub
in
pop
jbe
cmp
mov
add
mov
sub
ljmp
adc
scas
andb
rcrb
not
inc
int
pop
sbb
mov
mov
pop
invd
cld
jmp
sub
fwait
add
lcall
imul
sbb
mov
mov
and
out
or
push
mov
xor
test
pop
outsl
mov
push
push
stos
movl
cmp
add
daa
mov
cs
ret
and
mov
sbb
sub
sub
dec
stos
cli
add
sbb
cmp
inc
mov
mov
dec
inc
push
fs
add
rolb
fwait
daa
adcl
movsb
mov
dec
shrb
das
jmp
lahf
lods
inc
outsl
addr16
lret
ficoms
sub
std
push
mov
mov
xchg
repnz
enter
cwtl
insl
popa
mov
in
xor
pop
ss
inc
popa
fs
movsl
into
or
lds
insl
shl
fisttps
adc
jl
pop
stos
push
or
gs
sbb
sahf
ficomps
cli
push
daa
inc
js
call
mov
jo
jl
lahf
ret
mov
push
push
in
movsl
jo
cwtl
movsb
xchg
xchg
das
popa
mov
aad
dec
lods
rclb
je
test
rolb
popf
sub
cli
inc
sub
mov
repnz
cli
xchg
dec
sarl
push
dec
pop
es
pop
mov
jmp
hlt
jecxz
adc
dec
sbb
mov
les
sbb
loope
rorb
mov
cmp
lods
cmp
jle
sub
repz
push
jp
or
jbe,pt
cmpsb
xor
mov
mov
icebp
mov
and
fildll
loop
rcr
cli
or
cmp
addb
hlt
jbe
and
mov
pop
roll
adc
mov
add
loope
mov
xor
icebp
loopne
repnz
pop
out
cs
xor
js
pop
or
xchg
js
inc
mov
mov
pop
cs
lret
dec
lods
fsubrp
lcall
ljmp
cmp
in
jl
inc
or
sti
xor
mov
pusha
fnstcw
xor
xchg
push
xchg
sub
push
aam
sub
enter
cmpsb
pushl
fdivrs
sub
pop
inc
in
loope
gs
lret
std
lock
pushf
shrl
push
push
push
nop
cmp
imul
mov
sar
fxch
mov
in
add
push
pop
mov
int
push
inc
add
push
loope
and
repnz
insl
push
add
frstor
jne
sbb
ficompl
push
nop
jb
adc
ret
push
and
popa
inc
cmp
and
xchg
in
stos
cld
cmp
cs
mov
lret
adc
setae
cmp
inc
sarb
aaa
jae
add
addr16
lods
jp
dec
xchg
repz
mov
sub
jp
mov
push
adcb
out
mov
popa
xor
lods
pop
test
dec
sbb
shl
pop
jg
std
je
cmp
xchg
mov
push
sbb
sti
push
mov
jo
cwtl
or
dec
rclb
cmovge
outsl
jp
xchg
mov
ljmpw
xchg
sti
fildl
cmp
mov
inc
dec
ret
fidivrs
aaa
jg
es
jne
out
xchg
add
jne
out
bound
dec
dec
lock
arpl
lods
add
iret
imul
sub
pushf
int3
insl
dec
mov
int
movsl
jne
mov
in
and
ret
push
aad
andps
int3
pop
shl
push
clc
pop
lret
cmp
dec
pop
dec
mov
popf
sbb
xchg
fnstcw
sahf
xchg
stos
loop
inc
shll
jns
movsl
push
or
out
inc
xchg
outsb
loopne
lcall
in
stc
xchg
dec
sbbb
mov
jo
pusha
mov
and
adc
fldcw
mov
push
sub
push
and
sbb
sbb
push
mov
nop
dec
mov
add
sbb
and
sub
add
pushf
cmp
or
and
xor
xchg
movsb
pop
pop
pop
adcb
mov
daa
out
cmp
add
pop
jmp
testb
dec
shlb
das
jae
xor
cwtl
outsb
stos
push
jb
xor
adc
inc
adc
mov
cmp
xor
fcom
sbb
mov
dec
push
addr16
std
cmp
ja
in
sbb
out
cmp
push
xchg
cli
movsb
jp
sub
insl
push
int
push
dec
jo
test
dec
mov
out
insb
cld
repnz
adc
mov
add
cmp
loopne
cmp
jl
lods
loope
lds
dec
fstl
aad
ret
mov
add
daa
add
push
loop
xor
addl
test
and
daa
xchg
popf
cmpsb
push
gs
rcl
fsubp
add
adc
sub
or
sbb
rolb
inc
pop
fldenv
movsl
jns
fwait
xor
dec
outsb
repz
jp
sbb
insb
mov
orb
xchg
popf
cmpsb
fneni(8087
imul
xchg
cmpsb
xor
sub
sahf
in
cmc
int3
push
mov
andb
aaa
gs
in
and
mov
mov
push
cmp
stos
cltd
nop
dec
sub
xchg
sbb
pop
mov
rolb
and
repnz
shll
negb
clc
inc
mov
out
mov
ss
pop
hlt
into
lods
cld
js
jecxz
popf
in
pop
dec
test
and
sbb
mov
add
mov
lds
adc
outsl
dec
jae
fnstcw
cli
aaa
and
jns
push
push
into
sbb
push
push
les
inc
mov
sbb
pop
sub
mov
inc
ret
sub
lret
jno
stos
cli
mov
adc
inc
cmp
std
or
xchg
add
cmpsl
mov
sbbl
lcall
out
pop
jg
adc
mov
inc
jae
mov
sub
inc
cs
jne
push
imulb
or
jbe
add
sbb
ljmp
jecxz
test
flds
call
sbbb
repz
enter
pop
add
jb
or
add
sahf
les
loope
sbb
inc
mov
pop
or
mov
lods
lods
sub
lea
or
adc
push
cmp
js
aaa
scas
popf
or
mov
fstpl
jno
outsb
add
and
jns
and
jns
jae
fiaddl
lret
fadds
xor
add
icebp
insl
mov
dec
fnstsw
xor
mov
icebp
jno
push
in
jns
cmp
cmp
nop
ds
test
rclb
sub
xchg
gs
addr16
sub
cmp
ret
fs
mov
cmp
inc
mov
or
cmp
cmp
ljmp
inc
fimull
test
jnp
cmp
add
dec
cs
pop
loopne
ds
jno
loopne
fwait
lret
gs
jge
outsl
mov
cld
inc
ret
cmp
mov
es
unpckhps
pop
roll
pop
sub
jge
mov
xchg
add
or
xchg
adc
hlt
aas
jne
inc
mov
xchg
xor
xchg
xchg
dec
stos
xor
jne
fisubs
ficoml
out
and
push
loop
fs
imul
loope
sub
fdivrs
adc
rdmsr
dec
fnstsw
fchs
fnstenv
cmc
je
jne
jo
out
jo
nop
jno
sahf
mov
clc
cmpsb
iret
dec
xor
nop
jae
cmpsb
jns
sbb
add
cltd
jno
jmp
xorb
stc
pop
lock
inc
into
or
lock
ds
jns
adc
cld
clc
and
adc
xchg
or
clc
shll
xchg
sahf
int3
sbb
cwtl
popl
subl
leave
xchg
sbb
ljmp
and
clc
shll
mov
out
mov
add
das
out
dec
in
or
cld
xchg
cli
inc
sub
and
pop
jo
jnp
sbb
mov
cmp
aad
pop
mov
sbb
pop
cld
dec
fisubs
ja
add
cwtl
out
xor
lcall
xchg
test
push
mov
jp
popf
xor
or
mov
ds
inc
in
sbb
fwait
ret
aad
adc
add
testl
shlb
je
sbb
clc
cltd
iret
ficomps
push
xchg
sbb
add
pushf
add
sub
fdivs
xor
cmp
or
adc
push
xchg
cmpsb
cmp
test
push
dec
pop
aas
or
add
lahf
xlat
mov
sub
mov
push
pop
adcb
jmp
stc
ss
mov
insb
aad
sub
aad
sub
sarl
outsl
leave
es
or
ret
mov
in
inc
shll
clc
xor
jecxz
fs
jo
pop
sub
sub
fadd
jl
xchg
pop
add
mov
aaa
push
mov
push
lea
out
and
xchg
or
imul
sub
xor
loope
mov
inc
xchg
mov
pop
dec
xchg
add
push
out
std
loop
cmp
negb
fs
sti
xor
lea
daa
cmp
sbb
sub
stc
aad
rorl
nop
out
jne
mov
sbbb
rorb
leave
lcall
les
fs
nop
push
and
mov
repz
inc
cld
test
xor
std
add
dec
add
stos
inc
xor
data16
cmpsb
out
jne
pshufw
fildll
push
add
mov
ja
cmp
aam
dec
mov
test
std
subb
ret
cltd
xor
not
jl
pop
stos
jge
fwait
jae
addr16
mov
sahf
sub
or
xor
or
mov
icebp
and
in
psubd
dec
adc
js
cmp
lret
sub
idiv
mov
mov
notb
xchg
mov
and
dec
insb
push
inc
sbb
sbb
pop
push
and
xchg
or
lds
sbb
lcall
call
pop
test
stos
scas
mov
fs
inc
sub
sbb
add
insl
push
cmpsb
aad
mov
mov
adc
xor
outsb
out
test
push
mov
jmp
push
lods
cmp
loop
jb
mov
stc
roll
mov
addl
cmp
or
insl
mov
sbb
std
call
rorb
mov
jmp
cmp
in
push
dec
sbb
in
mov
stos
pop
jp
dec
push
push
in
fists
pop
inc
lds
inc
ret
ja
lea
xchg
mov
pusha
test
add
clc
scas
outsl
or
decb
fucomp
sub
fldt
in
imulb
scas
enter
xchg
jl
mov
inc
ja
scas
dec
xchg
mov
adc
mov
das
lods
addb
dec
dec
in
ret
push
push
or
pop
ficomps
les
in
or
stc
pop
cltd
fstps
pop
out
outsl
sub
lret
adc
mov
cltd
jecxz
xor
lahf
add
sub
mov
loope
aaa
cmp
sub
fisttps
ljmp
xor
or
addr16
bound
in
mov
sub
cmpsl
daa
insl
dec
jb
sub
sbbb
cwtl
push
es
mov
mov
mov
add
dec
or
pop
mov
xchg
add
lgs
inc
push
xchg
cwtl
es
bound
sbb
imulb
sti
fldl
xchg
cmc
inc
fs
cmp
inc
xchg
xor
cld
je
arpl
std
int
lods
insl
imul
adc
shlb
or
xchg
leave
cmp
mov
stos
outsb
mov
dec
jle
pop
enter
jbe
pop
mov
and
pusha
push
add
test
push
aaa
cmpsl
mov
jno
cmp
jbe
in
insb
xor
xor
stc
dec
jb
punpckhbw
mov
add
ret
out
js
pop
adc
xchg
inc
inc
inc
imul
lods
push
gs
cmp
pop
adc
lahf
out
ss
je
mov
sarl
out
and
loope
icebp
nop
dec
inc
out
xchg
jl
sbb
sbbb
orl
icebp
jae
out
aam
iret
mov
outsb
xor
cmovle
movsb
cmpsl
sub
mov
add
jae
je
iret
push
frstor
out
mov
mov
loope
addr16
test
push
pop
fistpll
test
pop
mov
daa
js
outsl
sbb
pop
cmpsl
sub
pop
push
inc
ja
in
and
inc
loope
lcall
fdivrs
adc
arpl
fwait
loop
int
adc
mov
inc
pop
sbbl
xchg
loop
les
adc
cmp
pop
flds
insb
cmovbe
nop
push
ret
dec
jge
lods
xchg
icebp
test
cmpsb
inc
call
addw
sub
pop
aad
popa
outsl
mov
inc
push
add
mov
cli
imul
imul
sbb
clc
mov
in
shll
das
cmp
jno
mov
mov
adc
lcall
fbld
mov
sahf
hlt
inc
testl
cs
imul
cli
mov
pop
call
lcall
dec
or
shrb
test
inc
pop
xor
popa
aam
in
hlt
mov
repnz
push
cs
cmp
in
cli
repz
negb
into
leave
jg
xor
aas
ret
movsb
jp
call
cmp
loop
in
ret
movsl
inc
pushf
push
and
jmp
cwtl
add
jno
mov
jno
mov
enter
and
mov
or
ja
pop
in
call
rclb
gs
push
mov
mov
arpl
and
ret
push
adc
xchg
cmp
xor
clc
dec
push
fisttps
loopne
push
jg
ds
push
cmp
in
mov
jp
cmp
and
dec
cld
aad
push
inc
sub
inc
lock
xor
clc
pop
pop
dec
not
in
or
xchg
and
mov
test
jno
ret
sbb
leave
mov
jo
mov
mov
aam
mov
paddw
fs
lods
mov
inc
cltd
loope
mov
fwait
das
sarb
mov
mov
add
add
cltd
fwait
xchg
les
or
or
xor
push
cld
shlb
out
test
data16
subb
add
pop
aad
popa
loope
or
aam
movsl
or
data16
xchg
enter
adc
cmp
into
inc
xlat
xchg
sub
add
xchg
mov
stos
push
cmp
out
adc
test
xor
addr16
lcall
mov
dec
mov
stos
icebp
add
das
inc
and
out
pop
xchg
repnz
cmp
add
xchg
mov
fdivrp
test
xchg
push
into
push
inc
sbb
xor
stos
cmpsb
rcll
sahf
sub
mov
jmp
jmp
mov
lds
mov
mov
mov
rcrl
and
add
inc
xchg
sub
dec
dec
push
xchg
stos
nop
dec
push
inc
fildl
idivb
sbb
test
mov
jae
pop
push
or
das
movsl
lock
cmp
adc
out
aaa
adc
cmpsl
aas
jno
clc
sub
in
ror
sarb
leave
sbb
sbb
cwtl
jb
test
mov
adcl
adc
iret
ret
and
mov
cmp
inc
dec
movl
cltd
xchg
pop
adc
ss
lea
fs
push
cmp
jne
cli
cmp
mov
jg
pop
insb
cli
orb
sbb
jmp
pop
test
jbe
aad
pop
imulb
cltd
jns
stos
jecxz
out
mov
repz
sbb
mov
adc
bound
inc
jbe,pt
outsl
push
sbbl
or
rclb
cmp
xor
sub
das
scas
jecxz
push
lret
js
inc
hlt
in
or
dec
cli
push
mov
aad
push
pop
cmp
dec
ja
cwtl
push
mov
mov
rcl
push
mov
mov
and
fdivs
dec
xlat
ja
mov
and
mov
mov
negb
mov
dec
fldcw
das
mov
xchg
and
inc
xchg
pop
pop
jmp
test
add
js
mov
imul
sub
cmp
push
add
test
inc
sti
and
lcall
jle
lret
add
xchg
push
fdivrs
mov
inc
sbb
loope
xchg
or
add
cmp
fld
fld1
dec
aad
mov
xchg
sbb
mov
adc
lahf
sbb
jmp
mov
lods
stc
add
push
dec
ret
and
xor
adc
in
pop
sbb
mov
pop
push
int
out
pop
lahf
mov
dec
sahf
call
int3
lcall
mov
js
mov
cs
inc
adc
aad
data16
and
cmc
sbb
xor
jb
stc
dec
nop
dec
xchg
and
mov
test
add
sbb
xor
scas
jp
enter
or
or
mov
push
add
pop
sahf
imul
mov
sub
loopne
in
xor
mov
aaa
add
and
subl
mov
dec
fsincos
adcb
xchg
mov
inc
pop
pop
es
sub
test
inc
fwait
ss
jo
cli
lock
daa
sub
pop
int3
iret
decl
xor
sbb
push
pop
ljmp
jl
xchg
jp
or
mov
roll
inc
lcall
lret
mov
cwtl
push
push
adc
or
cmp
and
icebp
inc
sub
enter
popa
iret
scas
data16
jnp
mov
jo
cmp
int3
mov
cmc
iret
shrb
jns
lcall
scas
mov
inc
add
daa
mov
pop
lcall
inc
mov
add
ljmp
push
jmp
in
test
jno
leave
inc
jl
ljmp
adc
cmp
push
test
cwtl
adc
dec
mov
dec
xor
pop
testl
mov
call
sbb
jo
repnz
push
ret
es
xchg
inc
or
idiv
mov
push
dec
out
cwtl
jle
sub
shll
and
dec
rorb
das
ret
inc
mov
shlb
sub
push
lods
repnz
cmp
pushw
mov
mov
inc
jb
inc
mov
repz
loop
xchg
and
cmpsb
xchg
rcrl
loop
xorb
pop
add
shr
daa
mov
or
xchg
jbe
mov
mov
in
pusha
pop
push
xor
dec
jno
xchg
inc
test
cmpsl
adc
cmpsb
fsubp
jmp
pop
stc
std
aaa
dec
jg
ja
mov
mov
sbb
outsl
lret
mov
in
call
fwait
jge
js
inc
aaa
jecxz
es
fmulp
sbb
fildll
mov
dec
cmp
sbb
stos
repz
aad
push
dec
in
xor
cltd
xchg
lahf
add
pop
jae
pop
sub
stc
jo
jmp
jae
adc
cmp
fstps
sbb
sub
mov
iret
loopne
pop
cli
popa
xchg
rol
insb
push
arpl
shrb
adc
push
dec
in
or
mov
push
loopne
mov
roll
and
pusha
xor
stos
sbb
cmpsl
cs
push
scas
dec
jp
loope
sti
jo
lret
sub
adc
mov
pop
jne,pn
fsubr
jb
adc
ds
and
cmpsb
inc
xor
cmpsb
sbb
xor
insb
cmp
mov
add
shl
stos
pusha
cwtl
dec
dec
data16
dec
xchg
add
cmpsl
push
inc
ss
cmpsl
bnd
mov
fwait
jg
leave
lahf
adc
insl
cs
mov
mov
or
pop
mov
or
xor
and
imulb
xor
lods
jo
imul
movb
pop
cmovb
sub
repz
insl
mov
push
test
push
outsb
lret
sbb
aas
mov
and
outsl
sub
ficoml
loope
xor
push
jbe
inc
jnp,pt
les
iret
sub
leave
js
sbb
in
sub
adcb
pop
jle
mov
fsubrl
pop
sti
or
movsl
push
mov
and
repnz
adc
jp
sti
xchg
jnp
push
les
cmp
xchg
adc
jmp
nop
adc
lcall
mov
jo
xor
outsb
push
mov
jae
ds
loope
add
add
xchg
and
add
adcl
jne
push
push
enter
dec
push
leave
jbe
pop
ds
pop
jle
into
addr16
mov
rep
dec
pop
bound
push
and
out
xchg
and
mov
subl
lahf
pusha
jp
mov
gs
movsl
ror
jl
pop
aad
mov
pop
cmp
xchg
mul
repnz
xchg
sahf
rorl
into
shl
popf
ljmp
sahf
dec
mov
or
lods
jb
mov
ret
mov
sbb
jo
pop
xor
sbb
loope
and
jo
dec
out
shll
mov
lahf
push
jne
aas
jmp
xchg
subl
popf
push
and
add
ds
imul
jb
loopne
push
in
inc
lea
cmp
sbb
pop
adc
xchg
iret
sbb
pop
icebp
inc
jp
fldl
sahf
loopne
jnp
inc
push
cmp
fs
je
xlat
into
lret
mov
dec
orb
fwait
in
test
adc
stos
jmp
outsb
cmp
mov
ror
push
outsb
ja
loope
test
sarl
add
or
xor
ja
sub
xor
sbb
or
adc
ja
dec
lods
push
pop
cmp
js
jns
push
movl
pop
dec
push
mov
xchg
sub
leave
lcall
rorl
in
dec
push
dec
aaa
xor
loop
mov
adc
rclb
cmp
add
cmp
xchg
pop
or
inc
or
fldenv
popa
pop
fst
loopne
push
xor
and
fisttpll
adc
jns
or
sub
add
pushf
es
pop
dec
add
pop
add
cmp
mov
sbb
ret
dec
add
push
adc
lret
or
sub
pusha
decb
out
adc
mov
xchg
scas
mov
jnp
out
and
or
hlt
movl
pop
data16
pop
sbb
pop
add
aas
push
jge
repnz
aad
mov
pop
pop
icebp
and
ss
test
fstpt
xor
cmp
lea
push
sbb
push
sbb
fimull
mov
xorb
mov
dec
jno
inc
popf
scas
jg
out
stos
xchg
daa
clc
cld
mov
mov
arpl
sbb
pop
dec
cs
les
pusha
negb
mov
pusha
mov
stos
add
shll
and
insl
insl
das
mov
outsl
xorl
and
in
cld
aad
xlat
sub
inc
fmull
push
adc
out
sub
mov
cmp
push
and
sbb
xchg
xchg
das
push
or
cmpsl
in
cmp
shrb
mov
ljmp
popf
shr
lods
cmp
lahf
and
repz
fmuls
imul
jo
int3
push
jg
gs
xchg
lret
jae
dec
fsubs
js
pop
enter
mov
sti
pop
shrl
push
jnp
mov
push
lods
popf
sub
aad
add
dec
outsb
roll
sub
nop
xchg
orb
loope
fisubrl
cmc
mov
mov
lcall
xchg
xor
call
inc
mov
pop
xor
cli
dec
ja
push
sbb
repz
lcall
bound
jg
dec
xchg
enter
js
popf
loop
orb
lods
or
adc
insb
lock
mov
xchg
or
ljmp
jge
repnz
orb
iretw
pop
cmp
push
aad
xchg
xchg
clc
int
inc
scas
loop
fmul
imul
test
daa
xlat
inc
pusha
ljmp
lds
fldcw
lea
lock
xor
jbe
pop
scas
push
or
or
xchg
repnz
cltd
adc
out
fisubl
sbbb
xchg
cmp
call
mov
dec
sub
adc
pop
cmp
mov
cmpsb
lods
stos
cmpsl
int3
jl
clc
jl
jecxz
sbb
sub
inc
xchg
jp
xchg
sbb
dec
dec
mov
sub
clc
movsl
in
inc
dec
cmp
cmp
adc
cltd
or
mov
bound
mov
xchg
rolb
and
les
mov
cmp
sub
scas
jecxz
aad
push
test
data16
loop
data16
pop
sbb
arpl
divl
mov
pop
sub
lret
jb
jge
or
aad
mov
mov
icebp
add
mov
test
int
fbld
sbb
sbb
push
adc
and
roll
insb
out
enter
repz
popa
leave
jns
and
lods
fchs
dec
pop
bound
xor
out
mov
in
cld
out
xor
cmpb
aas
add
sub
mov
cmc
jl
std
push
xchg
test
xor
xlat
orb
jno
mov
lret
dec
xchg
mov
mov
mov
int
pop
lock
add
cmp
dec
and
dec
push
push
hlt
jge
jae
cli
add
iret
loop
repnz
xchg
std
mov
mov
or
addr16
mov
mov
lock
lods
int
int3
sub
mov
xor
ds
mov
push
dec
icebp
or
loopne
dec
mov
les
mov
cmp
mov
imulb
pop
xchg
pop
push
cmp
aaa
rol
mov
fdiv
insl
aaa
sbb
sbb
cs
js
rorl
inc
adc
and
repnz
mov
or
adc
cmp
nop
pop
leave
mov
js
out
fildll
cltd
outsl
stos
int3
adc
js
sbb
sbb
cmc
lods
outsl
shl
jnp
sbb
or
sahf
out
movsl
push
pushf
out
js
mov
call
mov
adc
mov
cmp
sti
out
sahf
movsl
into
jmp
bound
icebp
mov
hlt
xchg
icebp
out
lcall
into
add
insl
je
clc
imul
je
insl
test
scas
ret
scas
cs
mov
fdivrs
lds
cmp
jne
clc
xchg
aam
jo
cmp
loop
adc
icebp
mov
and
or
int
adc
ret
inc
jp
adc
data16
pop
cmp
push
outsb
push
loop
ret
push
push
sub
mov
adc
pop
repnz
push
xor
xor
jae
test
jb
cmc
leave
mov
int
or
repnz
cmp
stc
loopne
arpl
notb
dec
ret
popf
dec
rcr
fisubs
scas
dec
mov
movsb
loope
fwait
mov
jle
cwtl
push
inc
mov
mov
pop
sub
stos
mov
jbe
inc
cmp
mov
inc
and
hlt
xor
test
ja
dec
xchg
push
xor
xorb
mov
mov
dec
popf
lods
cwtl
jb
jp
add
inc
adc
clc
dec
outsl
popf
aad
xchg
pop
mov
fcmovb
sbb
fnsave
cltd
std
xor
cwtl
std
jge
in
lcall
cmp
sarl
fisttpl
psadbw
scas
mov
or
je
mov
nop
push
repnz
jnp
aam
stos
out
xor
add
rorl
push
pop
push
jae
adc
data16
aaa
aam
out
arpl
and
shr
xor
movb
and
insb
pop
test
pushf
shlb
js
jmp
xchg
adc
rcll
out
sub
mov
sbb
mov
mov
mov
adc
int3
cwtl
enter
cmc
scas
or
and
outsb
mov
xchg
scas
ljmp
adc
push
add
inc
xor
push
mov
push
mulb
les
inc
cmp
adc
jae
mov
addl
lds
dec
sub
cltd
push
int3
dec
dec
add
icebp
sub
sti
add
ret
popf
pop
mov
vpaddq
mov
cmp
loop
and
test
aad
cmp
dec
push
shlb
popa
cli
dec
mov
push
lods
inc
mov
loope
std
outsb
repnz
cmp
cltd
xor
bound
xor
jmp
jmp
rcrb
cwtl
popa
shll
ret
repnz
jl
xchg
inc
test
mov
jmp
or
mov
daa
insb
dec
xor
xor
inc
or
andl
pop
js
and
sub
xchg
scas
push
idivb
jp
add
xchg
push
cmc
inc
sbb
pop
fcoms
pop
in
xchg
push
dec
jae
decl
shrb
inc
or
cmp
mov
inc
sbb
sti
push
out
ret
rcrb
lods
imul
xlat
mov
pop
sub
jle
push
mov
and
out
mov
mov
and
lcall
roll
aam
cmp
xchg
cmp
xor
popa
movsl
scas
rolb
cmp
jno
addr16
mov
mov
cmpsb
in
mov
sub
subb
sub
das
and
pop
scas
incb
xchg
loope
jmp
sub
mov
stos
jmp
push
cmp
into
std
push
ret
lock
cmc
xor
sbb
mov
lahf
mov
cmpsb
into
mov
imul
cs
mov
out
lock
test
push
or
xchg
in
xchg
cltd
mov
call
inc
je
sub
mov
int
pop
lcall
and
jbe
pop
shr
pop
sub
xor
xchg
pop
inc
dec
pop
mov
jns
adc
inc
or
testb
lahf
cwtl
lea
and
das
pop
lcall
xchg
jne
jnp
dec
sub
out
imul
pop
mov
mov
mov
fs
in
aas
and
mov
ljmp
lock
insl
loop
push
cmp
sub
sti
test
rolb
sarb
into
and
ja
rclb
loope
jmp
mov
ss
mov
fnstcw
pop
in
pop
movsl
call
and
push
lock
fldcw
mov
sti
inc
xchg
bound
inc
cld
push
push
add
jge
jecxz
in
popf
adc
cmc
mov
cmp
cld
pop
push
or
rcrb
outsb
inc
adcb
call
imul
repz
stos
inc
hlt
mov
daa
sub
dec
popa
push
movsb
out
jo
sbb
push
scas
sbb
inc
mov
les
mov
fwait
inc
mov
movsl
jg
sub
jl
in
adc
mov
pop
push
add
add
fadd
dec
add
sub
mov
test
push
xchg
mov
sub
dec
cmp
daa
mov
stos
cmp
add
mull
js
dec
mov
out
dec
out
movsb
jle
inc
lret
in
shll
sub
dec
mov
pushf
lock
xchg
stos
jo
testb
je
je
lods
adc
pop
dec
xchg
and
nop
rcl
rorb
in
fucom
in
pop
repz
es
pop
mov
je
xor
sarl
inc
pop
dec
sbbl
test
clc
and
sbb
mov
cmp
xchg
outsb
mov
cmp
or
xlat
shll
divb
incl
pusha
jns
sti
mov
jno
addl
lcall
dec
shrl
outsb
and
fidivrs
into
jnp
in
jne
insl
push
sbb
cwtl
xlat
bound
insb
aaa
aas
aas
data16
out
out
loopne
xchg
cli
int3
lahf
mov
jne
jp
scas
mov
mov
lahf
aad
push
xor
movsb
inc
adc
sbb
inc
shlb
loope
sarl
sbb
jns
dec
mov
and
cli
mov
arpl
xor
pop
pop
dec
mov
cmc
mov
cmp
jmp
add
loope
mov
mov
cmp
push
outsb
sub
inc
and
push
fstpl
imul
out
mov
pop
in
xchg
mov
sbb
out
push
dec
mov
pop
push
sbb
cltd
movsb
mov
sahf
pop
jl
outsl
push
pop
repz
lock
jl
movsb
cmpsl
int
and
je
inc
jle
mov
mov
lds
in
lds
sbb
jg
mov
dec
sahf
loope
xchg
int3
icebp
or
js
test
fwait
add
fiaddl
out
sbbb
test
or
or
cmp
pop
jl
dec
jns
je
sbb
fcmovu
jb
lea
sbb
push
or
mov
mov
ja
cmp
nop
sbb
xchg
push
pop
push
fdiv
xchg
push
dec
imul
xchg
push
icebp
js
sbb
test
das
mov
mov
fadds
xlat
inc
loop
cmp
inc
xchg
jnp
sub
fcoml
scas
fwait
cwtl
dec
in
pusha
test
leave
cmpsb
test
rol
insl
mov
outsl
xchg
jbe
mov
jle
or
mov
mov
cmpsl
loope
mov
or
add
sub
imul
jmp
shll
dec
test
xor
xchg
pushf
inc
cli
xor
lods
sub
sti
ss
fwait
inc
add
xchg
mov
dec
sub
out
popa
test
movnti
jg
push
mov
fisttps
sub
pop
enter
sbb
mov
in
in
lea
mov
sarl
mov
cmp
out
into
ds
lods
js
sahf
jno
test
pop
data16
in
push
pop
and
arpl
and
fndisi(8087
push
push
scas
lret
xor
xchg
fldt
push
xchg
cmpl
sbb
in
repz
mov
shlb
push
js
lret
cmp
shl
call
jp
xchg
push
inc
sbb
pop
lea
pop
mov
inc
es
cmpsb
iret
lock
lcall
adc
pop
sbb
ds
les
movsb
int3
mov
cmp
int
sbb
popf
add
in
xor
sti
pop
mov
push
mov
fimuls
cmp
ret
sbb
mov
jnp
jmp
stos
mov
mov
xlat
mov
fstps
leave
adc
scas
mov
adc
lcall
lcall
ljmp
push
inc
xchg
imul
rolb
movsb
fcompl
mov
cmpsb
mov
daa
sbb
test
int
xchg
sbb
pop
inc
push
movsl
repz
mov
fs
mov
push
push
add
push
rorb
lea
inc
ds
mov
mov
sahf
sarb
sub
mov
int3
divl
inc
jno
mov
dec
lods
push
fisttps
in
and
bound
mov
pop
xchg
pop
and
pop
in
mov
mov
cmp
inc
scas
int3
in
test
mov
lahf
jp
int
lret
mov
xchg
rcrl
fxch
mov
dec
pop
inc
add
int
pop
adc
shrl
adc
imul
xor
xchg
in
mov
shlb
push
stc
dec
mov
xchg
fs
in
pop
adc
and
rcrl
push
das
jns
pop
mov
or
add
pop
mov
sbb
mov
fisubl
jo
imul
scas
or
jo
mov
xchg
mov
leavew
sbb
inc
or
inc
lods
mov
cld
cmp
incb
adc
pop
mov
decb
inc
inc
push
int
or
add
pusha
cli
jnp
bound
sbb
fidivl
xchg
xor
divl
xchg
jne
mov
cmpb
inc
jmp
mov
dec
push
clc
sti
push
sbb
mov
cltd
mov
cmp
jecxz
xor
and
test
ja
cmc
inc
sub
jno
mov
xor
mov
mov
push
mov
cmp
daa
adc
push
mov
push
scas
xchg
jno
addr16
iret
jmp
and
fxch
fstps
push
aaa
in
insl
mov
mov
cltd
loope
push
inc
adc
pop
push
pop
sub
fisttpl
mov
xor
out
mov
orb
jmp
pop
in
ret
dec
mov
xor
pminsw
jmp
fmull
out
stc
mov
adcb
sbb
dec
std
jns
mov
movsl
call
mov
fsubrs
mov
and
push
mov
enter
sbb
xchg
or
ja
out
sub
out
mov
mov
push
das
sub
jae
out
mov
sbb
mov
cli
jnp
ljmp
xchg
cmpsl
push
aad
cltd
mov
inc
push
mov
out
cmpl
sbb
shl
mov
cs
dec
mov
test
or
jne
orl
mov
scas
push
or
fldt
adc
mov
xchg
push
and
pop
fdivrp
nop
std
pop
ret
pop
xchg
xchg
int
in
xor
sbb
mov
imul
push
popa
xor
leave
repz
mov
loop
inc
add
fisubs
inc
cmp
stc
mov
cmpsb
xchg
jbe
mov
mov
sub
xor
or
push
jl
bound
lods
lahf
fwait
adc
mov
dec
inc
add
sahf
and
sbb
jl
addb
les
add
cmp
pop
or
call
cli
push
repnz
aad
sbb
jl
push
insb
loope
lock
in
iret
mov
ds
jmp
add
sbb
test
stos
iret
syscall
push
sbb
test
cs
push
popa
icebp
les
or
ret
and
xor
mov
repnz
inc
call
dec
dec
jne
jp
or
push
aaa
hlt
push
out
add
xchg
test
dec
or
push
loope
jge
xlat
dec
xchg
daa
mov
inc
inc
iret
or
hlt
adc
imul
pop
jp
cmpsb
dec
popf
jns
pop
test
sti
out
dec
mov
push
jns
mov
flds
cmpl
sbb
outsl
std
ja
mov
aad
lock
rclb
cmc
fsubr
xor
inc
out
mov
pop
push
mov
pop
mov
movb
xor
mov
add
popa
mov
jmp
gs
push
subb
rcrb
mov
clc
xchg
iret
pop
cli
jg
enter
test
jmp
mov
lret
and
shl
lret
cmp
es
xor
aaa
imul
inc
mov
xchg
cmp
adc
xchg
rorl
aas
lret
xor
es
mov
xor
xor
dec
test
pop
mov
lods
mov
xchg
filds
ds
pop
out
and
pop
or
test
ret
dec
inc
dec
inc
lds
push
sbb
pop
cmp
sbb
popf
out
sub
insb
push
sbb
jg
xor
push
out
mov
adc
and
outsl
inc
adc
std
inc
push
scas
fimull
sahf
imul
dec
loop
cmp
mov
mov
lret
mov
adc
and
scas
clc
std
xchg
stos
popf
scas
or
lea
and
inc
jge
ret
dec
dec
xor
fstl
jecxz
movsl
lods
loop
inc
pushf
dec
xor
adc
std
cmp
test
loopne
jp
mov
in
cs
cmp
push
xor
add
cs
jmp
jp
push
adc
ret
frstor
mov
dec
adc
sbb
out
mov
out
push
sbb
jae
je
ss
loope
les
sbb
mov
mov
and
int3
sbb
adc
jmp
test
cmc
add
mov
movsb
mov
jl
dec
out
movsl
and
cld
lods
adc
mov
pop
lahf
scas
lcall
mov
or
ficomps
and
sti
push
push
adc
out
xor
fildl
jo
div
pop
jb
fsubl
push
loop
shrb
movsb
pop
movsb
outsb
xor
leave
imul
jbe
outsb
in
xor
xorb
daa
dec
in
leave
sbbb
mov
push
cld
push
cld
test
mov
and
ljmp
dec
aaa
sub
sub
pop
lds
cwtl
pop
push
xchg
movsb
stos
fs
clc
mov
mov
push
add
cltd
ljmp
shlb
aam
outsl
cmpl
jp
mov
cmpsl
and
shr
mov
in
push
outsb
cmp
ds
jnp
xchg
mov
imul
dec
xor
pop
push
sbb
push
cli
xor
out
xor
aaa
inc
bound
push
adc
lods
or
xor
mov
aad
outsb
std
cmp
subb
add
pop
jge
das
sub
lret
clc
ret
outsb
pop
cmp
fildll
stos
into
mov
lock
out
ss
test
jle
adc
out
xchg
adc
xchg
pop
inc
divb
gs
push
dec
cmc
stos
sarb
xchg
lret
cmp
inc
mov
pop
xchg
cltd
xchg
sub
out
pushf
lret
cli
lock
pop
cmp
adc
sbb
daa
mov
cmp
dec
adc
inc
stc
rcr
pop
popa
ds
bound
std
repz
jnp
je
ret
xchg
push
jns
ret
mov
daa
addr16
jle
inc
mov
xchg
jg
add
xor
shrb
cmp
mov
loop
loopne
add
hlt
bound
xchg
cwtl
xor
adc
inc
mov
movsb
ss
outsl
and
mov
outsl
fstps
xor
jmp
xor
fsubrp
ret
mov
lock
cmp
mov
xor
push
decl
scas
adc
or
xor
or
insb
dec
sbb
push
pop
cmp
xor
sbb
adc
add
lcall
xor
xchg
mov
mov
fstl
dec
shlb
xor
and
inc
fisubs
imul
out
cltd
push
jae
and
mov
aas
outsl
call
mov
xchg
xor
in
stos
xchg
add
push
mov
hlt
loope
cmpsb
int
jmp
out
flds
mov
jno
mov
cltd
mov
mov
mov
and
ret
sub
mov
and
mov
mov
and
inc
mov
mov
inc
iret
call
ds
jl
stos
cmp
mov
sbb
mov
pop
fists
xchg
mov
das
inc
sbb
das
lds
dec
jge
fldl
jo
stos
nop
imul
cmpsb
jae
adc
pop
sub
lds
shrd
dec
push
cmpsb
mov
sahf
sub
movups
push
mov
lods
xor
push
mov
push
mov
test
adc
jne
loope
out
subl
sahf
lret
mov
mov
xchg
incb
cs
popf
sub
test
sbb
push
xlat
mov
pop
cmpsl
xchg
fsubs
flds
nop
jmp
testl
cltd
xor
sbb
das
popf
xor
cmp
out
popa
jae
rorl
lahf
mov
pop
lret
mov
jnp
inc
inc
xor
or
jmp
dec
adc
stos
dec
adc
sub
stos
adc
aad
cmc
shll
pop
push
aaa
cmp
or
lret
popa
imul
shlb
fbstp
adc
es
clc
xor
dec
and
or
int
movsl
movsb
nop
jge,pn
decl
pop
rcll
cwtl
sbb
lds
enter
fs
jns
out
mov
lahf
push
incl
add
push
xchg
adc
xchg
in
movsb
nop
sbb
dec
pushf
std
pop
aam
pop
adcl
add
int3
shlb
or
pop
xor
shlb
sbb
std
stc
sahf
push
fists
add
lds
add
popf
gs
hlt
fstp
xor
pop
mov
xlat
mov
fucomip
imul
xor
mov
in
lds
jp
jnp
sub
movsl
lock
int3
fwait
stos
jl
lret
test
adc
mov
lahf
push
leave
sub
outsl
dec
lea
and
mov
rep
fnstenv
into
or
loop
push
jo
lahf
pop
inc
and
aam
notb
mov
or
dec
pop
push
out
mov
punpckhbw
add
stc
xor
aaa
call
mov
in
gs
cmpsb
mov
cld
inc
cli
mov
aaa
mov
lahf
test
fisttpll
jbe
push
fistl
ficomps
test
js
cmp
cmp
adcl
jae
inc
loopne
xchg
fdivs
pop
gs
movl
je
or
test
fwait
decl
sbb
cmp
aad
ret
sti
mov
jecxz
and
cmp
cwtl
sub
mov
sub
out
ficoml
jecxz
add
xlat
add
movsb
cmpsl
inc
in
add
or
fs
dec
aad
adc
adc
frstor
sbb
adc
xchg
fs
mov
adc
fmuls
fcoms
pop
daa
or
inc
mov
in
cli
sub
lods
scas
nop
or
mov
jne
jnp
rol
or
jge
insl
and
outsl
mov
int3
ret
adc
rcrl
mov
adc
lret
lcall
dec
mov
mov
iret
les
test
or
loop
addl
push
jbe
test
loopw
out
fmul
push
sub
pop
lods
loope
mov
stc
push
xchg
imul
lret
xchg
cmpsb
jnp
and
cli
mov
sub
sahf
mov
pop
std
push
ds
sub
loope,pt
cmp
subl
cld
dec
xor
adc
push
in
adc
push
dec
pop
pushf
shl
cmpsl
aam
lods
adc
std
jge
pop
hlt
xchg
mov
xchg
jp
lods
mov
jae
push
mov
mov
fmull
push
push
test
mov
cmp
push
notl
jecxz
adc
or
sub
insb
popa
xor
leave
cs
pop
mov
dec
jecxz
push
add
test
in
mov
adc
push
push
adc
mov
lret
cmp
mov
pop
sub
push
xor
jnp
inc
mov
in
cmp
sub
jo
mov
pop
sbb
mov
push
mov
push
test
push
arpl
int3
push
pop
inc
aad
lcall
fsub
lret
push
out
mov
rcll
pop
inc
out
mov
or
jmp
and
mov
int3
or
adc
jno
mov
and
test
movsb
mov
push
mov
scas
or
cmp
fwait
pop
lods
and
jle
jns
add
jmp
pop
iret
push
xchg
sbb
cmp
into
fcompl
mov
pop
jge
lods
pusha
mull
cmp
lds
xchg
xchg
shll
mov
clc
js
repnz
pusha
roll
test
pushl
neg
push
inc
sub
scas
cltd
out
rolb
and
loop
loope
pop
in
xor
xchg
add
repnz
mov
lock
sbb
push
sbb
dec
mov
cmpsb
pop
dec
mov
movsl
jp
jl
out
imulb
test
sub
andb
push
or
leave
ss
jle
adc
sahf
je
mov
jle
mov
and
sbb
test
mov
sub
or
adc
and
lods
and
mov
push
in
push
pop
stos
jge
in
or
and
mov
inc
cmp
xor
movsb
xor
in
icebp
sbb
daa
pushf
jns
push
or
sbb
lcall
mov
scas
cmp
movsb
inc
adc
ret
xor
mov
sti
sbb
pushf
mov
mov
dec
mov
jo
inc
in
adc
pop
mov
call
inc
pop
xchg
rol
sbb
in
stos
jp
dec
sub
xchg
adc
jmp
adc
mov
scas
and
inc
f2xm1
pop
mov
aad
stos
adcb
ss
push
jg
out
fidivrl
cwtl
loope
fdivs
sti
int3
push
imul
xchg
fdivrs
fists
and
cmp
outsl
inc
popf
jmp
rolb
or
inc
jge
mov
pop
scas
mov
dec
testl
ljmp
popf
cwtl
pushf
out
aas
les
int
in
mov
sub
mov
push
stos
mov
sbb
ja
jo
sbb
sar
dec
jmp
lods
add
pop
cmpsl
andb
push
jl
aas
jns
pop
xor
lret
cwtl
lret
mov
cltd
test
mov
pushf
daa
lods
mov
xorb
movsl
iret
jmp
cld
lods
sbb
fdiv
aam
xchg
and
push
and
test
pop
adc
movsb
pushf
push
mov
popa
daa
stos
cmc
sbbb
jb
lods
and
dec
xchg
mov
or
sub
stos
add
sub
addb
lea
out
lea
arpl
pop
sbb
fisubrs
hlt
adc
loopne
mov
pop
lock
pusha
dec
inc
pop
stos
enter
mov
xchg
xorb
stc
jne
adc
dec
ficoml
cmpsl
mov
hlt
dec
in
enter
ds
lret
pop
jg
mov
sub
fnstsw
pop
test
rcl
call
sbb
lret
scas
dec
out
rcrl
jne
jae
pusha
or
xor
dec
push
xchg
adc
jge
mov
jae
rcrl
std
mov
es
mov
cmp
push
xlat
jle
stos
push
leave
into
in
inc
in
xor
xchg
mov
xor
cwtl
imulb
pop
popf
push
dec
push
fadds
clc
pusha
or
or
sar
or
out
addb
scas
dec
push
out
out
jle
scas
sub
mov
out
aaa
dec
jle
gs
dec
mov
add
sub
fistps
mov
jae
mov
fbld
dec
push
xor
shll
sub
inc
push
xor
mov
pusha
out
js
pusha
outsl
dec
xlat
icebp
or
in
add
mov
vminpd
mov
cmp
lods
notl
xchg
jo
cmp
cmp
ror
push
aaa
dec
dec
push
dec
mov
outsb
adc
sub
jns
inc
test
xchg
stos
mov
loope
mov
cmpsl
xchg
push
inc
mov
sbb
pop
aad
xorb
popf
sahf
cmp
pusha
jp
shll
js
push
xchg
outsl
call
dec
push
dec
dec
sti
inc
mov
cld
idivl
shrb
cmpsb
push
jnp
rcll
shlb
mov
add
cmpsb
ret
and
xlat
movsb
add
push
in
fnstsw
ret
icebp
inc
mov
pop
jp
lock
fs
jo
lahf
orb
gs
fcomp
std
adc
jecxz
adc
pusha
pop
jb
add
dec
out
sbb
sbb
push
outsb
cmp
cmp
add
fadds
cmp
aaa
push
aam
loope
nop
and
push
shrb
sahf
enter
cmpl
push
pop
cmp
mov
pop
xchg
lds
xor
into
xor
add
dec
push
and
int3
mov
aad
lock
pop
sub
sub
outsb
jecxz
mov
xlat
pushf
jo
push
inc
test
pop
pusha
inc
rcrb
and
jle
cmpsb
adc
adc
pop
fs
rorb
cwtl
jecxz
xchg
push
inc
fstps
dec
repnz
jl
ljmp
sbb
ljmp
push
out
jle
jle
aaa
lods
sbb
cmp
negb
rorb
dec
dec
mov
fnstenv
jecxz
in
shll
stc
decb
clc
adc
popa
xor
cmp
cmp
pop
and
or
test
or
mov
stc
imul
mov
sti
shlb
dec
jmp
cmp
cmpsb
scas
jp
jns
into
movsl
adc
and
inc
outsl
mov
mov
push
test
lea
lds
inc
mov
mov
rclb
sub
test
pop
jg
xchg
nop
mov
les
fwait
call
scas
xchg
sarl
xchg
lret
mov
pop
std
mov
clc
popf
and
cmp
pop
pop
and
dec
cs
les
lea
inc
jae
inc
lods
fwait
inc
dec
movsb
into
or
mov
push
sbb
or
mov
jno,pt
es
hlt
xor
les
rcl
xchg
loope
repnz
jl
adc
add
cs
or
adc
sbb
xor
cmpsl
jecxz
push
pop
inc
sarl
jnp
sti
aam
dec
addr16
add
add
bound
popa
adc
fstp
movsb
enter
mov
in
movl
add
lcall
icebp
and
inc
adc
xchg
sbb
xchg
jo
in
daa
xor
movsb
shlb
xchg
ret
sti
mov
pushf
stos
cmpsl
mov
pusha
push
lods
int
mov
icebp
in
out
loope
call
mov
jo
shll
repnz
cld
adc
xor
hlt
gs
adc
mov
lods
push
push
es
nop
ret
inc
mov
sbb
neg
xlat
pushf
xchg
loopne
mov
sub
in
push
dec
add
outsl
cwtl
pop
adc
or
push
popa
fcomi
jmp
push
jp
and
push
push
add
stc
loopne
leave
cwtl
repnz
leave
pop
loop
nop
sbb
xchg
popa
mov
popf
cmc
mov
pushf
inc
imull
jae
or
insb
mov
test
in
adc
sub
add
les
aam
imul
xchg
dec
cmp
mov
sub
xchg
push
fnstcw
or
out
mov
xor
movsl
add
sahf
lahf
dec
and
icebp
add
push
pop
addr16
or
push
orb
jmp
sub
imull
repnz
sbb
ljmp
adc
lret
adc
hlt
popa
mov
add
aam
adc
aad
cwtl
leave
lret
or
js
sbb
nop
ds
dec
aad
fdivs
mov
or
xchg
rorl
add
sub
or
outsb
push
insb
aas
jb,pt
sar
xor
mov
sub
mov
xchg
sub
in
xchg
mov
push
add
jmp
fistl
jns
dec
xor
popf
lods
rorl
roll
je
out
arpl
push
sbb
pusha
cwtl
cmp
xchg
xchg
jbe
add
jns
in
pop
notl
packuswb
out
mov
jle
fisubs
or
loope
mov
adc
scas
incl
xchg
jb
movsl
mov
fbld
movsl
mov
dec
sub
je
or
mov
cmpsl
sub
or
sbb
ja
xchg
shrb
pop
cmp
and
mov
sub
cmp
inc
cmp
outsb
dec
into
mov
sub
or
lahf
loope
or
sub
add
dec
jp
jg
mov
cwtl
cmc
and
enter
add
outsl
inc
stos
and
add
xorl
cmp
push
arpl
sti
adc
add
or
stc
fimuls
push
lea
jae
decl
jg
mov
jmp
outsb
sbb
add
insl
or
mov
inc
mov
adc
sbb
push
xor
jge
aad
cmp
aaa
pop
fcom
push
add
dec
repz
dec
insl
aam
and
lcall
mov
xchg
inc
lea
ficoml
mov
leave
cmpsl
mov
das
pop
sbb
cmp
pop
aas
mov
mov
int
and
adc
xor
hlt
push
and
mov
std
push
js
das
xchg
das
sbb
movsb
test
pop
xor
push
inc
or
aaa
cmp
movsl
xor
int
add
push
out
fisttpll
and
xor
andb
aas
lcall
outsb
sub
in
cmp
sub
inc
xchg
ficoms
test
sbb
and
test
cmp
orl
test
mov
bound
insb
xchg
gs
push
test
inc
cmpsb
xchg
mov
sbb
lea
ret
jmp
shrl
pop
fs
xchg
push
add
dec
call
rclb
inc
lret
cli
xor
jb
inc
popf
mov
add
pop
lret
inc
sub
dec
cmpsb
jo
fdivrs
or
xchg
fsubr
adc
jl
cmp
mov
stc
and
dec
add
and
outsb
iret
cmp
push
xorb
pusha
mov
aad
add
jo
xchg
scas
jne
jbe
int
sbb
in
push
outsl
popf
aaa
in
gs
mov
sub
sub
out
mov
push
mov
or
mov
icebp
daa
call
mov
push
out
daa
cmc
insb
xor
int
int
outsl
adc
sub
add
xor
lods
jo,pn
shr
pop
pop
jbe
inc
maskmovq
notl
xchg
cmp
in
mov
clc
cmp
ds
inc
or
out
test
addr16
or
repz
xchg
xlat
pop
sbb
pusha
aas
sti
mov
add
and
pop
adc
hlt
xchg
sub
sar
in
dec
std
test
imul
jmp
mov
xor
iret
clc
adcb
aad
jns
adc
jno
add
lahf
xchg
mov
in
scas
xchg
pop
test
pop
out
inc
inc
or
xchg
sub
bound
mov
popf
imul
xchg
out
in
int3
mov
pop
and
mov
dec
xchg
in
and
pop
loope
in
mov
arpl
lock
dec
mov
or
cltd
dec
sbb
mov
sub
jge
out
hlt
rorl
movsb
subb
jg
cmp
jnp
xor
pusha
sbb
mov
jno
push
inc
jmp
pushf
loope
and
pushf
ret
xchg
cmpsl
idivl
add
lea
push
pop
enter
pop
and
dec
icebp
sub
es
mov
fsubr
xchg
lods
std
mov
cld
xor
aam
sahf
addr16
push
pop
fwait
cs
inc
xchg
stos
xor
lds
cmp
lea
sub
dec
adc
push
jo
and
and
xor
lret
jae
pop
lods
push
jge
mov
outsl
ret
add
xor
mov
add
adc
fisubrl
pop
inc
and
out
inc
out
imul
test
sbb
arpl
in
xchg
cmp
xchg
xor
ljmp
lcall
movsl
xor
push
shrb
stos
subl
sbb
les
inc
bound
stos
inc
shl
xchg
cli
dec
add
pop
and
mov
mov
sbb
mov
jg
jns
sub
mov
fwait
add
testb
subl
loopne
lds
ja
add
cmpsb
in
add
frstor
mov
iret
lret
inc
cmp
pop
cwtl
outsl
xor
scas
int
push
jl
lock
fistpll
lret
sub
or
js
ret
inc
fmuls
xor
daa
popa
mov
iret
xchg
jns
out
adc
mov
lods
les
mov
inc
adc
xor
or
jg
inc
ror
jle
shll
pop
movsl
inc
pop
dec
mov
cmp
fwait
incb
push
jmp
adc
lret
scas
cmp
sti
xchg
lcall
es
inc
rorb
xchg
adcb
int
lds
xchg
jne
pop
xor
push
fidivs
inc
stc
sub
bound
push
in
popf
mov
sbb
test
xchg
add
jge
enter
xlat
mov
inc
inc
xor
popf
lahf
jp
popa
iret
aam
mov
push
xor
adc
sbb
cwtl
jg
jle
adc
dec
imul
push
or
push
inc
sbb
xchg
clc
out
jbe
xchg
dec
rcll
jnp
in
mov
andb
in
ret
and
sti
pushl
cmp
mov
mov
push
xchg
test
sub
ret
push
mov
and
mov
aas
scas
cmp
imul
add
fs
mov
pop
cmp
das
mov
dec
mov
xchg
loope
mov
jb
imul
divl
xchg
flds
pop
bound
icebp
xchg
repz
cmovno
ds
add
jbe
mov
xchg
pushf
out
pop
fsubr
sub
js
jl
jbe
xchg
jecxz
imul
sbb
inc
cmp
or
div
sub
fwait
cmc
aas
xchg
test
xor
sub
lcall
cmpsl
jnp
xor
inc
jmp
cwtl
and
scas
mov
pop
add
mov
jge
cmc
mov
scas
mov
push
mov
ret
mov
inc
out
test
mov
fs
adc
jecxz
cld
xchg
xor
push
jb
push
mov
sub
fwait
and
and
push
pop
xlat
inc
cmp
push
dec
xchg
add
imul
fcmovb
sub
dec
ficompl
mov
xchg
cli
adc
mov
fnsave
dec
xchg
dec
and
sbb
out
or
dec
dec
loopne
cmpb
mov
fscale
push
jmp
cmc
sbb
cli
xchg
mov
out
lock
cwtl
lahf
lcall
js
arpl
data16
inc
pop
mov
arpl
in
sbb
popa
push
push
fsubrs
lock
mov
shrb
and
dec
std
test
mov
sbb
call
in
push
mov
cvtps2pd
adc
fcom
repnz
clc
push
call
clc
inc
mov
or
fwait
adc
imul
pop
ret
sub
in
enter
sbb
adcb
into
pop
pop
stos
cld
inc
cld
fisttpl
scas
mov
or
mov
fdivrp
lss
xchg
pop
shll
jl
iret
mov
ja
xchg
add
cmp
cmp
call
jmp
push
cld
repz
outsb
mov
into
xor
inc
insb
fcmovb
mov
mov
movsw
mov
pop
int
sbb
das
xchg
lret
mov
test
push
adc
or
daa
xor
or
and
xchg
cmpsb
insb
mov
das
xchg
repz
lea
ljmp
jbe
insb
pop
sub
xchg
stc
mov
arpl
loopne
mov
mov
movsl
insl
lcall
adcb
in
sub
and
mov
or
lods
mov
sub
cmpsb
pop
aad
sti
push
and
xor
mov
test
repz
aas
mov
lock
call
cmc
sub
cmp
jl
mov
es
mov
dec
iret
ds
mov
out
test
test
cmp
sbb
sub
dec
adc
mov
lsl
movsl
dec
dec
dec
pop
pop
jne
ret
xlat
cmpb
jne
xchg
xchg
aas
mov
sub
sti
fdiv
test
repnz
fs
stc
andl
jo
out
dec
in
adc
cld
mov
aaa
popl
enter
movsl
dec
add
or
inc
fisttps
divl
scas
mov
mov
rcrb
and
mov
int3
ss
sbbb
push
sub
rcrl
push
testb
push
xor
add
enter
in
ficompl
ret
jecxz
fimuls
cmp
cmp
adc
dec
ljmp
out
mov
jmp
lock
jnp
sete
xor
or
inc
sbb
scas
sbb
xor
mov
xor
mov
js
inc
aad
cmpsb
xor
jno
add
cmp
in
mov
hlt
push
das
and
mov
aam
loopne
pushf
mov
mov
imul
test
adc
jl
popa
cmp
aad
or
fcomi
xor
leave
repz
leave
mov
add
iret
fwait
sub
mov
mov
popf
cltd
jns
dec
cmp
jno
lret
jno
cmp
js
adc
inc
out
lock
aam
int
cs
fmul
mov
and
rcl
nop
and
sahf
push
mov
je
or
les
mov
lock
add
push
or
mov
nop
hlt
jno
lcall
jp
fildll
cmpsl
filds
add
mov
adc
mov
mov
sbb
ret
ret
leave
sbb
das
inc
dec
aad
push
mov
pop
mov
xor
out
cmpsb
and
mov
outsb
mov
jbe
iret
pop
call
movsl
test
fcoms
stc
out
or
arpl
cld
mov
movsl
insl
cmpsl
dec
ret
cmp
cmp
fmull
xlat
dec
lock
enter
outsl
push
clc
pusha
cmp
mov
repnz
push
pop
xorl
mov
inc
inc
mov
sbb
lock
out
inc
inc
fs
sub
mov
cmp
aas
cmp
cmpsb
test
or
push
iret
shlb
and
pop
lods
inc
cmp
pop
push
and
mov
stos
jno
std
mov
xchg
push
into
fwait
and
aam
xchg
andl
ret
or
popf
mov
sub
push
daa
jg
lcall
pop
int
adc
addr16
mov
add
push
call
xor
out
and
mov
jnp
mov
add
jp
xchg
lret
sub
sbb
ret
xor
adcl
xor
bound
sub
dec
mov
add
fcomps
pop
cmpsb
mov
pop
lock
in
mov
xchg
or
sub
fdiv
mov
outsb
mov
lock
aas
inc
mov
lock
pop
or
sarl
imul
loop
dec
jb
fimuls
stc
dec
push
out
fs
je
imul
popf
or
jp
rcll
dec
dec
jge
xchg
repnz
fiadds
fwait
addr16
cmp
orl
mov
movsl
inc
or
xchg
imul
dec
data16
sub
cmp
inc
or
mov
pop
aas
sbb
jmp
mov
arpl
xchg
or
rclb
insl
loopne
insb
imul
mov
sub
pop
mov
jnp
arpl
lea
aam
dec
testb
sub
mov
inc
pop
mov
jl
fdivl
jno
mull
jb
arpl
addr16
pushf
repnz
test
imul
scas
adc
mov
push
imul
jge
ss
push
sub
jns
or
xor
dec
in
xlat
and
lret
adc
pop
iret
cmpsb
int
subps
add
or
mov
into
pop
mov
push
cmp
inc
test
les
mov
lock
inc
fsubrs
add
pop
mov
hlt
add
jp
lods
jne
je
sub
mov
cmp
and
mov
enter
in
xor
scas
imul
push
cwtl
testl
dec
and
inc
fs
sub
dec
scas
jb
aaa
les
xchg
sbb
sahf
jg
movsb
gs
jo
jae
outsl
jmp
push
xor
mov
cwtl
pop
inc
mov
cmpl
ret
into
xorb
add
cmp
int3
pop
push
insl
das
in
dec
fcmovbe
mov
dec
sbb
daa
mov
push
out
test
fs
js
xchg
repz
dec
enter
insb
cmp
out
jno
pop
mov
gs
xor
mov
out
fdivr
mov
shll
outsl
and
addb
sbb
insl
shll
mov
jmp
fbld
sahf
xlat
xor
jo
cmp
dec
cmc
popf
mov
lret
in
push
adc
push
lret
cmp
jbe
lods
xchg
bound
cmp
popf
into
add
loop
inc
sub
add
inc
jbe
lock
enter
jg
mov
xor
daa
movsl
ljmp
rcl
push
push
or
sub
divl
ja
enter
dec
mov
add
test
loop
mov
push
filds
adcl
sub
sub
sub
in
enter
and
call
add
add
jge
xor
xchg
xchg
outsb
adc
fists
inc
loopne
insb
mov
rorl
pop
push
out
mov
adc
sarl
sbbl
mov
gs
inc
mov
inc
imul
cmc
fcomip
pop
jbe
insb
push
in
cld
cld
add
sbb
or
jbe
pop
add
add
sub
imul
mov
pop
pop
call
and
push
les
ret
sub
int
add
hlt
mov
pop
stc
lea
inc
sub
sbbl
je
fwait
dec
fistps
adc
arpl
leave
cli
push
push
pop
ret
les
je
mov
push
push
in
mov
mov
jo
xchg
mov
cmpsl
scas
lea
iret
xchg
dec
jbe
add
js
cs
sub
repz
hlt
push
dec
in
dec
loop
test
sub
nop
xor
fimull
mov
inc
xchg
and
xchg
hlt
data16
or
mov
aaa
dec
iret
popa
int
push
mov
adc
imul
xlat
outsl
inc
jecxz
or
int3
inc
lods
jb
daa
mov
and
jae
lahf
in
les
inc
push
sub
test
lods
out
aam
repnz
lahf
imul
mov
sub
pop
xchg
add
cld
add
in
and
cwtl
lock
xor
xor
out
andnps
roll
or
test
aam
js
xchg
call
cwtl
push
mov
add
leave
add
fidivrl
jmp
jl
imul
ljmp
sub
nop
jl
mov
cmp
pop
dec
pop
out
pop
and
aad
add
or
and
into
push
adc
inc
ds
lods
aam
adc
push
mov
cmp
imul
push
inc
dec
cmp
xchg
sub
jno
shr
mov
push
ds
or
push
or
jo
xrelease
scas
insb
mov
pop
add
and
mov
jg
jmp
js
cli
jle
xor
adc
mov
adc
sar
mov
xor
or
aas
cld
ljmp
push
stc
sub
lods
push
loope
sub
int
aad
lods
stc
add
cmovns
sbb
mov
xchg
sub
xor
insb
rcll
xchg
cmp
sbb
dec
jg
or
jle
push
out
aad
sbb
xor
xchg
movsb
adc
sbb
pop
lret
mov
fnsave
mov
outsl
loop
xchg
xor
hlt
and
cmp
insb
loopne
cmpsb
jne
mov
decl
and
insl
sub
jmp
and
mov
les
xor
jae
push
pop
inc
xor
out
aaa
clc
add
xchg
inc
jmp
cmp
mov
or
cs
cmp
loop
lds
cmp
add
or
into
cwtl
push
fs
inc
xchg
dec
dec
movsw
inc
jecxz
mov
add
enter
inc
inc
push
mov
data16
ret
into
hlt
fucomip
mov
and
std
call
add
push
dec
push
or
addr16
test
nop
xchg
or
pop
add
lea
dec
stos
xor
add
mov
xchg
pop
ret
enter
sbbb
push
and
add
mov
jo
mov
mov
aad
test
repz
add
je
sub
fldcw
addl
imul
roll
mov
mov
into
jb
cmpsl
repz
jno
cld
push
cmp
and
stos
pop
adc
and
dec
cmp
out
mov
loope
mov
je
out
lahf
cwtl
aad
sarl
imul
xchg
xor
xor
pop
or
cltd
sub
movsb
lcall
mov
ret
sti
out
lret
and
dec
jne
inc
xchg
push
push
jge
sbb
mov
dec
push
mov
jle
cmc
pop
cld
int3
mov
xor
enter
sbb
ds
outsb
sbb
je
dec
add
mov
mov
loop
dec
fisubrs
in
ljmp
mov
imulb
dec
lods
subl
adc
das
pop
popl
mulb
shll
push
daa
xor
out
rcl
in
aas
push
rcr
cmpsb
mov
sti
push
xchg
repnz
in
mov
and
or
mov
adc
mov
jp
fstp
or
or
iret
mov
lods
pop
ljmp
mov
scas
add
clc
stos
loopne
sub
loopne
fs
or
mov
clc
jecxz
push
fsts
outsl
xchg
lret
jl
push
jle
push
dec
loop
shr
cmp
pop
cld
push
cmpsb
and
stos
sbb
jns
lret
xchg
je
xchg
das
adc
mov
cs
pop
inc
in
dec
lcall
xor
jmp
add
insl
leave
adc
xorl
je
pop
inc
lahf
lods
lea
sbb
stc
cmp
mov
push
rcrl
ja
pop
js
std
push
cmp
push
repnz
adcb
inc
cmpsb
shll
and
stos
popa
push
add
push
dec
inc
fimull
enter
lahf
sub
popa
mov
xchg
jp
mov
lock
sub
push
std
pop
xor
enter
jno
xor
inc
arpl
mov
lock
jmp
fimull
pop
fistpl
shl
adc
sub
sbb
fcmovb
jp
pop
cmc
sbb
or
inc
mov
pop
ret
pop
bound
ret
les
frstor
cs
fisubrl
scas
push
mov
mov
mov
jmp
and
mov
out
jns
nop
and
dec
ficoml
mov
xchg
inc
leave
aas
loope
fs
scas
in
pop
push
je
sbbb
dec
jmp
or
jmp
aam
and
mov
jle
pop
pop
scas
cli
iret
repnz
sbbl
add
cs
jge
add
push
mov
lret
in
inc
scas
fwait
loopne
cmp
popa
ret
xchg
cmp
in
jp
fs
jb
rorb
mov
testl
lods
insl
int3
scas
les
jnp
xor
fadds
test
fs
mov
jnp
sbb
xchg
aad
rcrb
gs
aad
arpl
sbb
jnp
inc
add
iret
dec
scas
cmpsb
pop
xchg
das
and
dec
or
lret
and
mov
iret
sbb
pop
and
mov
jl
shrl
scas
stos
sbb
mov
cmpsb
movsl
cmc
fcmovne
inc
push
sahf
out
test
in
mov
rorl
dec
sub
mov
call
mov
cltd
cmp
xor
mov
push
cmp
mov
mov
mov
scas
jge
in
mov
ljmp
jl
jae
bound
scas
push
in
rcrl
scas
subb
dec
fsubl
dec
adc
mov
push
xor
loope
mov
pop
dec
jo
fs
add
lods
jae
jo
stos
insl
ret
nop
test
cmp
add
mov
mov
mov
cmc
addb
dec
sub
lods
or
xchg
sbb
sbb
add
cmpsb
into
popa
xorl
push
jns
loopne
mov
pop
pop
push
sub
mov
bnd
lds
call
test
outsb
andl
mov
sub
inc
pop
cltd
inc
and
sbbb
push
xchg
mov
mov
cmpsl
lret
cmc
xchg
mov
cltd
addr16
mov
sbb
je
stos
cmp
in
jno
add
mov
sbb
and
or
out
or
imul
push
cmp
fucomip
cld
dec
sbb
sti
xchg
hlt
rorl
jno
sbb
stos
jne
mov
mov
or
push
push
push
int
leave
jmp
in
mov
xor
mulb
outsl
jbe
cmp
xor
dec
mov
pop
stos
jge
push
push
mov
out
sbb
imul
jne
inc
cwtl
fsubp
pavgb
int
ret
das
insl
adc
inc
adc
xchg
sbb
mov
sub
cmpsb
cli
mov
outsb
cmp
sbb
stos
addr16
xchg
xchg
or
add
or
add
nopl
push
jbe
jmp
mov
mov
cmp
and
clc
adc
rcll
sti
fists
and
inc
add
into
ret
in
push
xchg
ljmpw
mov
mov
pop
aam
jmp
sarb
test
dec
push
xchg
jnp
jl
jnp
insl
sahf
sub
testb
dec
cmp
pusha
mov
arpl
cmc
les
xor
repz
inc
mov
movsb
mov
pop
aam
xchg
cld
jne
xor
jmp
jnp
sub
icebp
test
adc
int3
subb
sub
mov
jns
hlt
add
or
mov
fsts
sbb
pop
mov
ds
mov
popf
adc
adcl
sub
icebp
jge
cmc
sbbb
popf
push
sbb
push
cmp
mov
ret
push
dec
fisubl
push
push
sbb
out
adc
sbb
push
jbe
pusha
test
addb
xlat
mov
mov
cmc
inc
inc
pop
jnp
push
cmp
je
pop
das
cltd
in
cmp
pushf
add
push
andb
mov
inc
pop
ss
xor
enter
popa
add
inc
in
mov
scas
push
cwtl
xor
mov
inc
sbb
cmp
jno
icebp
jae
mov
mov
push
iret
and
jp
ljmp
xchg
jecxz
or
adc
rcr
test
out
xor
daa
popf
outsl
pop
jno
movd
out
mov
push
out
dec
add
es
pushf
xor
push
call
and
dec
xchg
repnz
rclb
pop
and
mov
add
xchg
xor
aam
shll
lret
cmp
and
clc
cmp
push
push
cmp
pushf
add
lods
push
dec
sbb
add
cmp
dec
movsb
add
call
dec
sbb
fdivrp
xlat
push
pushf
lcall
fdivr
faddp
sarl
dec
or
mov
divl
nop
jecxz
pop
aad
jb
xchg
hlt
jns
inc
addl
pop
enter
in
and
test
fwait
and
push
mov
sub
call
pop
imul
sahf
mov
inc
insb
sub
scas
xchg
lea
test
cmc
jo
add
cmpsb
sub
scas
dec
or
pop
mov
add
leave
jns
aaa
xchg
pop
stc
inc
xchg
inc
mov
lret
xor
mov
lock
fstps
ret
lds
xorb
mov
es
add
xlat
inc
fsubl
daa
sbb
mov
sub
jbe
push
jnp
fsubl
stos
jb
xor
jp
popl
jge
xchg
lret
mov
mov
clc
pop
call
xchg
push
loope
cmp
push
sub
dec
xor
mov
xchg
jo
add
out
pop
push
mov
test
std
xor
add
push
jnp
and
movsl
push
clc
pop
cmc
add
cld
pop
int
mov
mov
fisttps
sub
dec
adc
inc
sarb
jbe
or
mov
cli
add
sbb
stos
dec
pop
lret
idivl
mov
int3
dec
les
rcll
or
sub
push
outsb
mov
pop
mov
sbb
sbb
fwait
dec
sbb
aam
add
aas
popa
cs
orb
mov
inc
mov
fimull
lret
xchg
ret
mov
loop
mov
addr16
ss
xor
xchg
sti
ret
or
xchg
inc
or
lahf
jbe
mov
das
dec
sbb
sbb
pusha
pusha
xlat
add
lcall
pop
mov
movsb
jmp
daa
sbb
mov
mov
inc
push
imul
push
xor
xchg
jmp
incb
push
pop
lods
and
sbb
cmpsb
loop
orl
dec
shll
out
scas
lock
mov
das
cli
fistl
dec
lret
and
mov
sub
sbb
in
or
das
movsb
pusha
sbb
in
loopne
mov
fnstcw
enter
or
sti
or
imul
jmp
mov
insb
lods
shrb
int3
or
mov
arpl
lahf
mov
sbb
add
add
stc
pop
mov
movsb
sbb
mov
or
or
fxch
xchg
xchg
dec
mov
add
loop
add
cmpsb
xor
adc
addr16
andb
and
pusha
xchg
dec
push
add
ja
js
and
sbb
dec
jge
push
mov
pop
lret
cltd
cmp
jne
mull
mov
adc
push
sbb
dec
adc
idiv
scas
sub
cmp
scas
mov
outsl
leave
mov
adc
sti
inc
mov
adc
dec
inc
lock
out
shlb
out
xorb
daa
cli
or
mov
js
ret
add
ret
cmpsb
ss
rolb
ror
mov
jne
xor
scas
sbb
jmp
sub
jne
xchg
or
scas
es
sub
pop
loopne
divl
repz
or
fwait
push
jae
das
ja
mov
and
or
sub
cmpsl
inc
loop
pop
xchg
mov
adc
xchg
mov
fldl
add
mov
ret
or
xor
sub
cs
cmp
xor
stc
mov
xor
out
mov
mov
out
inc
mov
sbb
mov
aaa
mov
mov
repz
inc
xchg
sarl
test
push
xor
addr16
cli
into
aaa
mov
mov
add
jns
incl
pop
cmc
jge
inc
fdiv
repz
mov
popa
hlt
pop
sti
ror
adc
mov
jnp
sbb
ror
das
insb
mov
add
mov
dec
stos
in
sbb
mov
inc
loope
movsl
popf
test
int
shll
xor
pop
dec
mov
and
mov
clc
shlb
add
lret
sub
fwait
movsl
add
xchg
jno
adc
dec
push
inc
addr16
sbb
scas
aas
push
mov
sub
fldt
orl
mov
dec
xchg
dec
lea
jl
jnp
mul
adc
adc
shlb
js
jnp
ret
xchg
lods
jno
mov
cmpsb
dec
or
jge
inc
les
jns
int3
jns
cmp
int3
fisubs
and
or
adcb
jge
shll
xor
lret
pop
dec
xchg
jb
dec
cwtl
pop
or
dec
cld
iret
scas
outsb
pop
not
inc
out
or
hlt
jecxz
shrb
mov
btc
fs
cmc
mov
adc
mov
fidivl
push
pop
pop
jmp
aam
push
push
push
jmp
inc
jbe
push
shr
inc
lret
repnz
mov
int3
jmp
add
ret
cmp
int
mov
popa
mov
mov
stos
mov
outsb
dec
ret
outsb
je
push
sbb
std
or
addr16
mov
cmp
cmp
lods
jmp
or
pop
ja
pop
and
stos
pushf
daa
test
lcall
push
mov
xor
addr16
leave
das
mov
jle
inc
add
shll
jnp
sub
cmpsb
loope
xor
aaa
shll
pop
in
aaa
xchg
jne
loope
jnp
fsubs
adc
or
sub
sar
stc
xor
mov
or
rorl
imul
add
repnz
pop
inc
shrb
fs
dec
insb
movsl
xchg
push
int
sub
sub
nop
or
js
ss
ret
push
xor
or
bound
jg
std
bound
jle
fnsave
mov
sub
rcrl
addb
mov
popf
xchg
popf
rcr
sub
add
jb
lods
pop
loopne
or
loop
xor
aad
nop
mov
push
test
cld
xor
loop
mov
lcall
xor
sti
xchg
in
ret
or
daa
inc
pop
out
jb
testb
adc
repnz
add
sbb
stos
mov
sub
jns
iret
jmp
add
add
imull
out
mov
or
out
insb
stc
lea
jo
dec
adc
cmpsl
dec
mov
jne
ja
cmp
das
jge
push
test
std
cmp
jne
sub
ja
mov
sub
subl
loop
push
inc
jmp
ja
test
shll
ret
pop
enter
jbe
mov
mov
stc
dec
clc
cwtl
jle
std
test
test
lret
repz
push
sbb
jnp
repnz
pop
pop
lods
icebp
fnsave
mov
out
das
iret
test
sahf
xor
jo
cmp
pop
jns
pop
push
test
dec
inc
lods
fucomip
outsb
adc
test
xchg
jae
mov
and
scas
lea
popl
sarb
sub
jle
dec
sub
clc
dec
cmpl
lcall
sbb
dec
dec
and
ds
add
popa
jmp
xor
cmp
mul
addr16
pop
lret
test
hlt
mov
inc
push
or
insb
pop
xor
bound
test
push
clc
out
dec
insl
sub
aad
mov
dec
inc
add
mov
into
dec
push
andl
iret
jmp
lcall
or
adc
int
orb
out
jge
mov
movsl
ja
jecxz
inc
xchg
jnp
inc
loopne
mov
fucomp
loope
and
push
inc
mov
lret
lret
idivl
and
mull
jns
sub
roll
test
cmp
dec
popa
push
cld
xchg
fwait
sub
xor
mov
add
icebp
mov
pop
imul
in
mov
mulb
jge
mov
add
and
std
into
jge
jl
pop
or
in
sbb
mov
popa
adc
mov
subb
sbb
out
xchg
inc
lret
mov
jb
and
aaa
psllw
mov
popf
adc
dec
mov
aas
sub
lods
adc
xchg
lahf
into
js
and
loope
in
shr
jmp
fadd
pop
dec
fists
mov
push
push
dec
adc
push
in
mov
insl
jnp
lods
mov
push
dec
push
cmp
lret
dec
sahf
fdiv
push
pop
