mov
ja
nop
clc
jp
in
pop
pushf
cmp
ljmp
mov
adcl
movsb
mov
add
lret
ss
test
mov
mov
or
pop
jmp
fcomps
stos
ret
cmp
rcrb
imul
cmpsl
pop
cmp
daa
leave
xchg
pushf
js
mov
js
xchg
sbb
adcb
imul
es
lods
jne
and
dec
lahf
inc
fistpl
test
sbbb
imul
cli
fdivp
enter
lret
loop
jg
imul
mov
xor
insl
mov
outsb
lods
push
pushf
repnz
mov
push
mov
and
xor
jg
enter
out
incl
jno
and
out
adc
xchg
sbb
pop
mov
pop
jle
lea
ja
not
pop
not
movzbw
movsbw
jmp
not
mov
jmp
pushf
lea
jae
cmp
test
stc
pusha
cmp
pushl
lea
ja
dec
mov
dec
jmp
mov
bound
push
lcall
and
out
push
mov
sarb
cltd
lea
aam
push
dec
addr16
loop
mov
inc
inc
jecxz
aas
iret
cmp
in
rcll
push
push
dec
adc
iret
sbb
add
sbb
pushf
push
pusha
movl
pushf
movl
pushf
lea
jmp
movl
pushf
movb
pusha
push
lea
jmp
call
call
inc
pushf
dec
pusha
inc
rcr
add
cmp
rcl
xchg
sar
not
bswap
stc
mov
stc
sar
mov
cmc
jmp
bt
call
xorb
mov
bound
add
in
xorb
and
cmp
jne
inc
sub
test
fcompl
inc
test
test
scas
dec
int3
mov
pop
or
adc
jp
ret
pop
mov
fidivs
cmp
sbb
nop
push
stos
cli
out
in
jb
daa
push
and
loopne
sub
xlat
insb
adc
mov
and
xor
in
cmp
call
cmp
pushf
add
pusha
push
movw
lea
jmp
pushf
jmp
inc
inc
inc
push
call
lea
je
pusha
pusha
push
mov
pushf
call
call
lea
jne
lea
cmp
not
shr
xor
bt
shl
rcr
mov
test
shr
call
test
movb
pushl
lea
je
stc
add
bt
cmp
pushf
call
add
push
pushl
pushl
push
lea
jmp
bt
pushf
lea
jge
and
jmp
add
add
add
xchg
inc
adc
add
adc
add
jp
add
cmp
add
add
add
lcall
and
jne
call
sbb
or
setnp
sarb
xor
sub
jl
pop
pop
loop
icebp
add
scas
inc
insl
popf
fstps
and
fnsave
idivb
pop
popf
lret
dec
fcoms
leave
or
addl
inc
mov
mov
dec
scas
dec
push
mov
test
xchg
cltd
dec
xor
dec
and
shll
lcall
into
and
jmp
out
sbb
insb
mov
dec
out
cs
and
lods
in
cmc
add
cmp
add
aad
mov
stos
xlat
hlt
mov
sub
and
xlat
pop
movsb
lea
movzbl
call
or
pushl
lea
je
pushf
or
jmp
bound
mov
mov
js
aaa
push
pop
jp
lret
sbb
lods
imul
inc
lds
cwtl
rorl
push
cmp
cmc
cmpsb
xchg
lcall
jle
add
and
pop
or
inc
sbb
add
das
nop
pop
data16
or
push
add
mov
in
gs
inc
sbb
push
xchg
je
mov
js
push
push
sti
jmp
jo
push
outsb
in
cmp
xchg
scas
adc
and
sti
add
mov
pop
loopne
adc
mov
pop
cs
lock
mov
shl
jmp
or
pop
pshufw
mov
sar
mov
cmp
sub
adc
arpl
pushf
mov
lcall
test
jmp
js
sti
inc
or
push
xchg
rcrl
push
adc
mov
je
sbb
push
inc
cmp
pop
aaa
jae
lahf
xor
dec
cmp
cmpsl
add
cmp
sub
sti
dec
pop
mov
push
add
mov
jae
mov
pop
push
adc
popf
xor
inc
roll
pop
jnp
nop
push
js
ficomps
mov
mov
pushf
jbe
out
loop
cwtl
loopne
mov
ficoml
push
inc
sub
mov
add
imul
mov
and
cmp
out
inc
xor
jmp
fadd
lahf
in
sub
addr16
add
inc
js
je
jb
arpl
jae
cmp
pushf
lea
jae
push
clc
bts
mov
rcr
rcr
mov
bts
sub
mov
jmp
movb
pusha
push
lea
je
pusha
stc
cmp
push
call
stc
cmp
push
bt
sub
sub
stc
pusha
pushf
add
jns
or
call
xchg
add
mov
cld
addr16
mov
or
lcall
mov
jnp
sarl
dec
jp
sarl
push
fistl
sbb
cld
aas
and
leave
mov
in
mov
enter
and
xchg
in
push
inc
xor
addb
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
pushl
ret
test
cmp
test
pushf
jmp
cwtl
mov
ljmp
push
fcoms
fnstcw
pop
ror
jmp
lret
loopne
xor
es
std
add
sti
push
push
sbb
movsl
mov
mov
mov
pop
xchg
lret
out
xchg
jns
sbb
rcl
loopne
xchg
push
out
inc
xchg
arpl
mov
pushf
into
xorl
dec
xchg
fsubr
add
and
pop
lds
sbb
lret
into
maxps
pusha
mov
dec
pusha
pop
mov
inc
es
or
jbe
shl
xchg
scas
add
sahf
test
and
inc
dec
push
cli
insl
xor
je
push
mov
pop
push
xor
inc
pusha
mov
int3
and
lcall
mov
test
test
and
push
adc
std
nop
lds
dec
lock
ficompl
sub
out
xor
push
scas
jle
pop
mov
int
ljmp
imul
into
bound
loop
dec
jge
cwtl
sub
jle
fcoms
fwait
cmpsb
test
add
fldt
loope
imul
push
je
xchg
call
aas
jecxz
jbe
or
xchg
inc
js
ljmp
repz
in
fs
mov
and
ja
fsubl
iret
push
lea
jne
setae
not
call
shl
mov
mov
stc
cmp
repnz
pushl
lea
jne
lahf
pusha
not
movb
pusha
movzbw
mov
cwtl
movsbw
lea
lea
call
aam
inc
into
bound
aas
shlb
nop
stos
jecxz
or
sbb
pop
cli
cwtl
jmp
stos
mov
sahf
inc
fsubrl
xor
pop
or
mov
jmp
sbb
push
mov
imul
add
sub
or
dec
mov
mov
mov
into
bound
push
imul
lahf
sub
fdivrs
fcmovnb
mov
inc
std
popf
and
es
lock
std
aaa
dec
scas
pop
adc
loopne
nop
pop
dec
in
cli
punpckldq
mov
bound
lds
xchg
pop
push
les
dec
and
cld
or
je
jnp
ss
xchg
mov
adc
sbb
mov
xchg
stc
mov
sbb
push
out
xchg
dec
movsl
lahf
mov
sbb
movsb
call
mov
ja
mov
jae
inc
sbb
gs
cmp
imul
in
mov
fucom
xchg
andl
pop
mov
enter
add
pop
xchg
insb
mov
loop
pop
adc
inc
sbb
in
sbb
mov
add
adc
xchg
into
bound
mov
mov
aad
mov
call
test
or
push
leave
adc
add
pop
loope
or
sub
push
sub
int
mov
lea
ret
out
adc
iret
mov
pushf
jae
mov
mov
iret
fidivrl
sbb
push
test
push
loope
xor
push
cltd
inc
popa
scas
and
movsl
sbb
pop
mov
sub
fmulp
mov
addr16
mov
mov
dec
mov
cltd
mov
add
xchg
inc
adc
add
adc
add
jp
add
cmp
add
add
add
mov
mov
pushf
mov
push
pushl
ret
push
pushf
pusha
lea
jmp
add
mov
into
bound
mov
imul
sub
mov
aad
xchg
out
pushf
push
adc
arpl
stc
sbb
jns
pusha
aaa
pop
adc
jl
loopne
cwtl
mov
int3
and
mov
push
daa
jl
inc
pop
adc
bound
and
imul
adc
mov
inc
sbb
aas
jb
insb
sbb
faddl
movsl
add
ss
repz
or
sbb
outsb
inc
xorb
jne
mov
shll
fwait
lds
pushf
cmp
jmp
and
bts
not
sub
and
and
sbb
mov
aam
ror
mov
shl
push
shr
lea
sar
rcl
shrd
mov
stc
or
pushf
lea
je
stc
add
neg
adc
sub
movzbw
sub
shr
rcl
bsr
rcr
btr
mov
bt
shr
mov
add
cmp
bt
shr
sub
add
call
xor
xchg
into
cmp
fildl
imul
cmp
sub
sarl
adc
outsl
inc
pop
xchg
xchg
movsl
dec
add
or
shlb
cld
cmp
rclb
mov
mov
and
test
jae
cwtl
pop
cmp
inc
jae
pushf
std
add
test
cmp
dec
or
adc
xchg
xor
cmpsb
mov
jge
xlat
hlt
pop
and
and
inc
inc
push
add
jmp
pushf
pusha
mov
jmp
lea
call
cmp
cmp
cmp
push
lea
jae
call
movl
mov
bswap
movsbw
pop
push
pusha
pushf
pushl
ret
jmp
add
add
dec
push
das
sub
neg
mov
sbb
sub
mov
call
cmp
sahf
add
cmp
clc
xchg
dec
lock
int
ljmp
cld
jb
cltd
dec
and
rcrl
lock
sbb
xor
jecxz
addr16
add
cwtl
push
and
idivl
test
sub
mov
cmpsb
xchg
out
popf
fabs
and
xchg
xor
bound
pop
inc
jp
movsl
das
inc
push
mov
out
jl
mov
sub
adc
enter
test
lret
sub
scas
push
outsb
xchg
lock
shlb
jno
clc
and
in
movsb
mov
or
add
xchg
and
test
and
stos
rep
lcall
adc
mov
jns
imul
dec
arpl
lds
adc
lock
arpl
dec
jbe
loop
cmp
or
mov
sbb
aaa
pop
lret
xchg
and
and
je
or
push
shll
adc
add
dec
mov
test
mov
add
add
cmp
sets
add
add
dec
sub
cmp
cmc
cmc
mov
shl
mov
push
sub
call
call
setb
xchg
mov
xchg
movzbw
movw
mov
bswap
pop
mov
pushf
call
shl
btr
mov
and
or
add
not
sar
mov
jmp
jmp
pusha
lea
jae
push
lea
jmp
add
add
testb
into
bound
mov
fistps
in
int3
adc
das
in
call
ret
jmp
adc
sub
dec
sbb
or
adc
cmp
es
lret
sub
not
inc
xor
or
xor
dec
loopne
xchg
dec
jnp
pop
sbb
jb
loopne
and
sbb
out
ret
into
bound
push
rcll
jg
in
mov
cmp
xorb
lods
push
cmp
xchg
rcrb
scas
sbb
cli
ret
fwait
stos
mov
imul
xchg
outsl
sarl
adcl
out
jle
lds
dec
les
cmp
pop
ljmp
inc
dec
push
jno
scas
push
arpl
dec
xor
push
pop
leave
xlat
and
or
cwtl
mov
rcrl
fimull
aas
sbb
xor
lret
cmp
or
inc
sub
dec
stc
clc
pushf
test
pusha
lea
jmp
cmp
pushl
lea
jae
cmp
pushf
cmp
clc
cmp
pushf
lea
js
pushf
lea
ja
jbe
pusha
inc
lea
call
pop
test
mov
and
add
dec
push
int
fsubs
andl
jmp
dec
or
mull
fstpl
sahf
sbb
xor
sbb
fbld
sbbb
mov
or
sbb
test
xor
mov
pop
mov
or
sub
inc
sbb
adc
in
mov
test
int3
push
call
mov
fwait
mov
leave
jno
jl
jmp
lahf
cmp
or
out
mov
ficompl
iret
and
stos
add
rol
stc
seta
xchg
rol
cmp
test
btr
mov
shl
test
mov
shl
movzbw
sub
sar
mov
clc
cmp
not
mov
add
setle
dec
sub
lea
sets
pushf
lods
pusha
sbb
cmp
sbb
sub
pushf
bt
ror
shl
not
ror
sbb
xor
dec
neg
call
jp
dec
cwtl
into
bound
jg
inc
in
push
int
pop
sub
fldenv
repz
imul
mov
jbe
in
mov
lods
fimull
adc
jne
cld
push
nop
or
fimuls
test
and
pop
pop
lahf
imul
mov
and
shrb
in
mov
or
repnz
or
mov
cmpsl
into
fistl
scas
mov
dec
mov
sub
fsub
sbb
aam
fstpt
or
cmp
xchg
sbb
dec
cmpps
push
call
mov
clc
neg
movw
call
push
pusha
lea
je
clc
pushf
pushf
sub
push
cmc
push
stc
cmp
jmp
mov
jmp
rcll
mov
mov
lea
movsl
inc
std
fsubrp
hlt
mov
or
aam
ret
inc
data16
push
outsb
add
inc
popf
hlt
insl
jecxz
gs
adc
out
int3
adc
pop
inc
nop
testb
mov
aad
xor
push
sub
shr
incb
pop
arpl
or
xchg
scas
jae
cmpsl
dec
test
push
sub
jle
push
outsb
pushf
jge
mov
inc
adc
add
lcall
popf
cmpsl
movsb
or
lds
cmpsl
adc
popf
shr
mov
mov
push
or
inc
adc
icebp
xchg
aas
popf
jo
sbb
lahf
mov
hlt
roll
test
mov
mov
cli
xchg
testl
leave
insb
test
scas
rcll
xlat
pop
stos
xchg
dec
add
outsl
adc
inc
pusha
fyl2x
insl
inc
xor
xchg
enter
in
and
sbb
daa
push
dec
rcrl
cmc
std
scas
call
insb
ret
das
mov
jg
dec
sbb
jp
aam
loop
or
adc
sub
sbb
hlt
int3
push
js
pushf
and
or
pop
add
add
iret
faddl
and
xchg
pop
scas
pushf
pusha
lea
jmp
jmp
clc
call
pusha
cmc
clc
jmp
movl
pusha
pusha
push
lea
jmp
repz
jg
mov
or
sbbl
outsb
fnstcw
sub
icebp
dec
leave
and
fsts
cmp
push
ror
dec
fldt
add
xchg
outsl
mov
out
push
pushl
outsl
xchg
lret
int
pop
das
adc
mov
jmp
pop
inc
frstor
jl
call
cmpsl
push
lret
lcall
ds
or
push
pushf
movw
pusha
movl
jmp
sub
stc
stc
ror
bt
clc
xor
push
call
xor
lea
pusha
pusha
inc
lea
call
cmpsl
loop
fwait
into
bound
test
inc
dec
fnstcw
into
mov
inc
add
adc
shll
call
lods
adc
mov
mov
test
das
and
push
popl
shlb
in
int3
sub
push
out
inc
fcmovnu
mov
jmp
pop
cwtl
ja
out
pop
ret
loopne
jmp
mov
ja
adc
les
shrb
push
ljmp
lcall
jns
cmp
fwait
into
mov
mov
push
lock
mov
sahf
add
mov
cwtl
push
loopne
lock
movsl
jge
imul
mov
bound
ret
testb
pop
cli
add
push
imul
sub
mov
mov
dec
jo
sub
push
xchg
mov
pop
std
scas
loop
mov
xor
mov
and
out
fisttpll
xor
imul
push
mov
push
adc
ret
sub
adc
movsb
xor
jge
jbe
jl
add
inc
leave
lods
movsl
push
stc
mov
data16
lahf
lret
clc
lret
adc
sub
xchg
pusha
mov
inc
pop
sarb
popf
rcl
std
fstps
cmp
cmp
jmp
call
adc
sub
out
enter
fists
and
insl
insl
push
ret
mov
idivb
cmpsl
jb
cltd
repz
mov
imul
add
pop
gs
rclb
push
xchg
fldt
jg
push
inc
movsl
add
fsubs
inc
pusha
xchg
iret
mov
popf
into
bound
mov
pusha
add
cmp
inc
je
jnp
jae
int3
mov
rorb
jae
mov
push
adc
or
xchg
xchg
das
pop
outsb
lods
ljmp
ljmp
stos
fucom
pop
mov
push
lcall
xchg
jmp
mov
outsl
daa
nop
mov
pop
mov
addr16
call
jmp
push
pushl
popl
pushf
movb
pushf
pushl
pushl
ret
lea
ja
or
sub
bswap
sets
and
add
setb
not
pusha
mov
call
jmp
and
sahf
into
bound
shlb
es
mov
xchg
lcall
lret
mov
pop
dec
mov
and
mov
stos
movsb
inc
pop
push
outsb
cmp
inc
mov
das
jns
mov
inc
pop
gs
rcrb
jecxz
clc
dec
push
lds
cmpsb
call
dec
leave
push
pop
subb
adc
sbb
mov
mov
test
or
btc
dec
sub
test
mov
movb
jmp
call
not
mov
pushf
pusha
push
lea
jmp
jmp
pusha
stos
mov
push
lea
jmp
mov
call
jmp
cli
inc
push
lahf
into
bound
push
out
hlt
add
lret
cmpsl
dec
jbe
lea
jp
push
dec
in
or
mov
rorl
cmp
jecxz
mov
mov
cmpsb
jo
jo
cs
or
inc
add
sub
mov
pop
mov
add
or
std
ftst
add
fldt
inc
lret
mov
jl
hlt
das
fldt
popa
adc
ljmp
mov
xor
sbb
xchg
movsb
push
out
mov
pushf
mov
push
lea
je
push
cmc
cmp
pusha
jmp
inc
call
call
xor
hlt
and
pop
imul
sbb
pop
cmp
aas
daa
mov
pop
and
xchg
push
out
mov
jno
and
mov
mov
test
loope
adc
mov
mov
jb
pop
aaa
mov
cltd
inc
fnsave
push
sti
int3
cmp
incb
pop
or
mov
clc
jno
aam
mov
mov
les
out
jno
xchg
push
ret
loope
push
stos
mov
xchg
enter
jmp
cmp
jg
add
in
mov
or
xchg
xor
rorb
dec
mov
and
xor
add
test
adc
sahf
cmp
inc
or
stos
sahf
adc
mov
hlt
arpl
and
pop
and
add
shl
mov
lods
movb
cmp
test
jmp
lods
loope
mov
lcall
inc
int
adc
xchg
cmp
lods
gs
jb
adc
jle
mov
xchg
lds
hlt
push
lret
and
fabs
lret
jns
dec
shr
pop
inc
or
cmc
cmpb
pushf
lea
jne
bt
mov
cmc
add
bt
movzwl
mov
movsbl
cmp
cmp
mov
test
add
push
call
call
jmp
mov
into
fmuls
mov
xchg
dec
sub
rorl
das
pop
mov
cmp
inc
jne
in
out
mov
pop
cmp
fdivs
or
loopne
inc
push
add
test
fpatan
or
dec
pushf
bound
pop
add
push
or
bound
sub
sub
mov
in
adc
push
inc
js
xchg
sub
enter
repz
leave
lahf
pop
sbb
bound
add
shrl
cmp
arpl
mov
dec
cld
sbb
cli
mov
scas
mov
pop
xor
fsubl
sarb
mov
cmp
push
ja
addl
xchg
xor
mov
mov
push
xchg
pop
mov
fsubs
arpl
out
mov
lods
enter
insl
pop
movhps
push
mov
ljmp
maxps
fst
sbb
xchg
call
pusha
mov
xchg
test
push
jmp
lret
sbb
jge
pop
test
call
pushl
call
in
movl
cwtl
shll
incl
stos
jmp
hlt
or
fnstsw
test
repz
cmp
inc
fs
xlat
sbb
lahf
jecxz
mov
mov
outsb
mov
xchg
cmc
push
mov
sbb
lret
sbb
iret
inc
jne
sahf
or
stos
mov
lea
jmp
call
add
inc
gs
outsl
fs
gs
imul
add
xchg
mov
testl
scas
ror
scas
mov
in
pop
xchg
sbb
je
or
pop
sub
and
nop
aas
shrb
mov
xor
loop
fistl
icebp
pop
push
aaa
adc
into
sub
inc
out
fsubs
and
mov
movzbw
call
mov
test
sub
jmp
fbstp
push
sti
or
pushf
adc
xchg
lea
add
add
movsl
add
es
ret
xor
push
cmp
cmp
adc
xchg
and
std
mov
test
sar
mov
cmp
nop
cwtl
cmp
mov
lods
jp
testl
je
aam
jmp
adc
dec
test
xor
lds
test
dec
mov
insb
sbb
adc
into
bound
mov
inc
in
push
in
jg
sub
push
daa
jb
aam
push
xchg
mov
sarb
mov
push
scas
out
lds
pop
outsl
lahf
inc
mov
push
jecxz
sbbl
cmpsl
push
mov
mov
push
push
enter
ret
mov
mulb
xchg
or
cmp
add
sbb
cli
push
xchg
imul
movsb
aam
mov
cmpsb
jmp
iret
shll
push
sbb
sahf
js
pop
dec
adc
sar
fmul
inc
push
arpl
push
ss
pushf
mov
cltd
insb
bt
bt
add
clc
test
cmp
lea
jns
pusha
pusha
lea
jb
push
clc
bt
pushf
cmp
pusha
mov
jmp
call
les
xor
into
bound
add
sub
in
add
bound
imull
imul
movsb
adc
push
mov
loope
jb
repnz
out
pop
xchg
js
xchg
std
lcall
mov
outsb
mov
repz
adc
lods
jle
cmpsl
jnp
int
cmp
mov
push
lcall
loop
sub
and
inc
dec
sbb
mov
into
fadds
pop
cmpsb
mov
jle
sub
mov
or
fstl
repnz
out
mov
cld
adc
pop
sub
or
sti
cli
cs
cmp
shrl
dec
fwait
dec
inc
dec
cmp
inc
mov
rolb
sub
fmull
or
stos
out
jge
push
sbb
dec
fwait
push
cmp
xchg
in
ret
enter
dec
mov
pop
mov
stos
xchg
lret
mov
push
lock
std
std
xorl
ret
jge
pushf
lcall
push
pushf
mov
pop
mov
xor
mov
jle
in
push
push
aam
push
into
add
out
sub
test
jne
lcall
sub
xor
xchg
push
push
mov
push
cmp
xchg
sti
or
mov
fimull
sahf
jb
add
lea
pushl
mov
push
push
mov
pusha
call
loop
jecxz
into
bound
leave
mov
stos
add
aas
adc
cwtl
hlt
and
mov
aaa
aas
xor
sub
jno
add
aam
in
sbb
shr
mov
fisubl
aas
in
repnz
mov
repnz
sub
imul
jle
add
fcomps
add
mov
movzbw
movsbw
not
mov
pushl
mov
jmp
jmp
cmpsl
into
bound
inc
pop
add
jo
ret
mov
adc
sbb
lock
sbb
inc
dec
lcall
pop
jge
movsb
inc
inc
fisttpll
cld
fwait
call
scas
pop
pop
imull
cmp
cli
push
inc
lods
pop
pop
test
xor
cld
shl
loop
push
lds
aam
push
mov
jle
das
adc
lods
mov
test
pushf
mov
movb
movl
pusha
mov
pushl
movl
mov
lea
jmp
clc
cmp
pushf
push
lea
jns
je
clc
cmp
pusha
lea
je
pushf
pushf
pusha
pushf
lea
jmp
imul
gs
xor
cs
insb
add
lods
cmpsl
into
bound
push
test
stos
mov
mov
test
xchg
les
insb
in
add
ss
xlat
sbb
mov
mov
leave
mov
push
jecxz
inc
out
lcall
xor
sbbl
test
lret
xor
and
out
add
inc
sbb
dec
and
lcall
movsl
iret
mov
mov
call
clc
cmp
call
cmc
ror
call
clc
call
ja
push
test
bound
movsb
fiadds
adc
push
xor
push
addl
test
mov
cmc
push
inc
shll
mov
pop
int
mov
mov
imul
movsl
jno
push
fidivs
pop
dec
imul
dec
ret
adc
into
bound
jae
lahf
dec
cld
sub
and
loopne
fwait
in
fisubl
mov
cmp
push
push
fadd
cmp
sub
fs
dec
andb
lret
mov
mov
sub
xchg
push
jg
mov
ljmp
mov
test
pop
mov
lock
lods
add
xchg
in
ds
inc
mov
aas
notb
pop
add
push
cmp
pushl
pushl
pushf
lea
ja
pushf
stc
pushf
stc
imul
jmp
outsb
lds
into
bound
xchg
xor
adc
mov
adc
fwait
cmc
data16
push
mov
sub
jle
pop
pop
inc
add
cmp
loop
aam
push
xchg
sub
stos
cmc
test
cld
xor
imul
sbb
cmp
lahf
mov
push
mov
mov
je
mov
mov
xchg
pop
insb
pop
data16
push
fists
xor
cli
inc
das
sub
in
xchg
push
push
rolb
mov
jle
ret
ds
aam
fcomps
out
pusha
cmp
leave
orl
jmp
add
loopne
ret
ss
pop
je
cmp
mov
jmp
add
sub
sub
jmp
adc
cmpsl
lret
adc
add
sbb
ffreep
and
data16
sahf
push
xchg
mov
or
xchg
mov
loope
xorl
mov
es
cmp
xor
or
pop
test
add
and
xor
lods
frstor
popa
outsl
and
ja
jae
push
shlb
pop
faddp
push
jae
cwtl
dec
or
or
mov
xchg
scas
test
xchg
mov
lahf
mov
cld
test
rorl
push
outsl
mov
cmpsl
jge
push
mov
cmp
pushf
rolb
push
fisubrl
xchg
jecxz
movsl
ret
ss
sub
sub
or
lret
fldt
icebp
andl
jmp
xor
lods
clc
call
bt
bt
cmp
movw
lea
jb
stc
cmp
pushf
lea
ja
call
call
pushf
pushf
pushf
adc
pusha
lea
jae
call
adc
out
stos
into
bound
out
xor
and
cmp
push
cld
imul
inc
sub
mov
mov
push
stos
cs
aas
pop
scas
mull
xchg
cmp
and
cmp
push
ljmp
sti
mov
out
push
mov
cmp
cmp
repnz
mov
jg
shll
inc
loope
push
pop
xor
inc
out
movsl
cmp
mov
xchg
cmp
mulb
add
dec
das
or
lret
sub
jmp
jl
lods
into
loopne
in
inc
sub
push
jp
stos
mov
cli
sbb
int
jae
inc
push
cmp
call
nop
insw
sbb
bound
mov
sti
lods
mov
icebp
gs
pop
sbb
push
or
js
jmp
test
push
mov
cmp
aam
pop
call
pop
pop
aaa
inc
testl
dec
adc
icebp
addb
sub
inc
inc
adc
loopne
mov
mov
scas
sbb
roll
push
jae
clc
pop
orb
or
shr
mov
cmp
stc
xor
pushf
mov
pusha
repnz
pushf
lea
jne
bsf
call
push
movl
push
call
jmp
xchg
gs
into
bound
sub
bound
pushf
mov
inc
lods
jno
pop
xor
in
push
out
sbb
stos
fdivr
sbb
lock
pop
xchg
mov
movsl
loop
in
mov
xchg
outsl
rcrl
iret
call
and
push
jns
xorb
sub
adc
push
scas
dec
adc
ss
cli
add
dec
gs
popa
addr16
outsl
js
add
pushf
lea
je
pushf
mov
bsr
rcr
btc
btc
add
bsr
add
cmp
rcl
mov
pusha
jmp
cmp
adc
imul
jo
rcrl
cmp
roll
adcb
and
inc
and
pop
or
cmp
mov
push
mov
xchg
jl
jmp
push
scas
gs
cmpsl
mov
popa
xchg
dec
mov
cmc
dec
sub
sbb
push
push
inc
cmp
dec
js
inc
in
dec
push
pushf
pushf
dec
sub
jno
cmp
cmp
shl
push
pusha
seto
lods
push
sub
call
bt
mov
shr
mov
bt
push
sub
movw
rep
movw
mov
mov
lea
jmp
call
lea
jbe
ror
bts
sub
inc
mov
movsbl
ror
add
or
rcr
add
xadd
mov
shrd
add
sbb
inc
btr
cmc
movl
shrd
push
lea
bswap
mov
lea
cmc
push
cmc
cmp
pushf
lea
jbe
rcl
sub
dec
mov
sar
ror
mov
test
test
or
pusha
add
not
shr
inc
bsr
inc
dec
mov
dec
mov
rcl
add
pushf
mov
pushf
pop
mov
lea
call
test
shl
movb
mov
pushf
jmp
loopne
xor
popf
lret
shl
cmc
or
push
mov
add
add
mov
cltd
sbb
int
mov
jmp
outsb
jb
adc
movsb
cmp
pop
ja
mov
jae
dec
jecxz
add
rolb
cmp
andb
sbb
mov
jecxz
int
das
loop
mov
icebp
jnp
cltd
mov
jmp
inc
xchg
in
sbbb
push
mov
in
gs
pop
aas
inc
fcoms
mov
mov
addr16
in
mov
fcoms
aam
jne
je
outsb
xchg
pop
mov
and
xor
jg
std
or
cmc
mov
bt
call
jmp
pusha
mov
movw
inc
stc
cmc
neg
push
cmp
stc
add
cmp
mov
bt
mov
cmp
cmp
push
cmc
add
pushf
movl
test
pushf
lea
jae
jne
call
test
test
add
call
sbb
sbb
inc
pop
call
inc
pop
fisubl
cmp
or
scas
es
outsl
nop
sbb
adc
push
nop
inc
repz
addr16
add
add
xchg
leave
jl
xchg
jb
mov
sbb
in
push
push
aas
push
aas
pop
fwait
mov
test
je
mov
push
clc
inc
jmp
push
sub
addl
sbb
and
mov
out
inc
shlb
push
pop
out
sti
test
mov
lock
add
pop
mov
or
push
xlat
mov
out
mov
aad
jo
lods
lret
add
leave
out
insl
pop
mov
fs
jno
push
xchg
sarl
sti
cmp
popa
test
cmp
jecxz
pop
sahf
jecxz
and
call
sub
rol
adc
shll
sbb
mov
fs
and
xor
mov
aas
inc
push
jl
aaa
push
jmp
jmp
movl
jmp
pushl
popl
movb
mov
pushl
ret
dec
sbb
push
inc
jo
rorl
add
cmp
dec
cmp
add
adc
fisttpll
mov
sarl
flds
sbb
in
leave
push
addr16
pop
icebp
mov
pop
jae
idiv
jecxz
sbbl
xor
arpl
mov
mov
dec
stos
test
mov
jmp
daa
js
icebp
adc
inc
mov
icebp
mov
icebp
movsl
test
xchg
xlat
aas
incl
mov
mov
adc
out
jnp
mov
sti
pop
jbe
leave
mov
int
scas
scas
cmpb
repnz
jmp
xchg
int3
es
mov
into
bound
mov
sub
int3
mov
shl
jmp
adc
fcos
xor
mov
cmp
push
fldpi
shl
lcall
fwait
jp
jmp
out
addl
mov
dec
and
testl
xor
adc
add
sbb
mov
shl
sbb
test
pop
fwait
sbb
test
lcall
sub
mov
sbb
gs
pushl
not
scas
mov
push
jbe
xchg
cltd
push
sbb
filds
cmpsb
mov
xor
pop
ret
shrl
push
sahf
fadds
mov
mov
bound
movaps
aam
lods
and
dec
ret
addr16
adc
ret
push
loopne
pop
lods
iret
jae
push
xor
gs
jno
inc
xor
les
scas
das
imul
ja
lds
lret
add
test
bound
add
clc
sub
sbb
movsbl
mov
xor
mov
inc
shl
xor
add
ror
stc
ror
stc
mov
pushf
bt
mov
cmc
test
jmp
push
call
test
pushf
pusha
pushl
pushf
lea
jmp
arpl
cwtl
mov
bound
popf
shl
and
arpl
std
ss
loopne
std
xor
stos
nop
mov
inc
push
je
push
add
xor
xor
sub
mov
xor
stos
enter
pop
jle
dec
dec
cmp
xchg
mov
mov
adcl
xor
mov
test
or
movsl
leave
jne
sbb
sti
out
xor
mov
int3
hlt
pop
xorb
fs
je
cmp
pusha
pusha
clc
cmp
push
call
movl
call
call
push
pushl
pusha
xchg
call
push
clc
mov
add
jmp
dec
cmp
into
bound
dec
data16
adc
rolb
xor
pusha
mov
stc
pop
clc
into
xchg
jae
repnz
imul
cli
mov
add
sub
xchg
xchg
xchg
outsb
fsubl
pop
jecxz
adc
mov
aaa
jge
sub
clc
loopne
decb
xor
adc
xor
movsb
sub
mov
pop
pop
stc
pop
pop
mov
fsts
dec
xchg
mov
add
or
xor
push
pop
lods
lock
data16
addr16
fwait
dec
sbb
pop
and
pop
icebp
pop
popf
cwtl
add
lods
shl
and
testl
pusha
aam
push
repz
sti
xorl
xchg
adc
adc
clc
call
lea
call
clc
sub
pushf
lea
jne
push
jmp
lea
call
pushf
pusha
pusha
pushf
lea
jmp
dec
adc
mov
push
cld
cmpsl
mov
add
imul
adc
push
mov
pop
pop
cmp
mov
pop
dec
mov
int
inc
jnp
sbb
or
nop
mov
inc
or
pushf
cs
fs
outsb
inc
decl
je
dec
into
sub
hlt
cwtl
fdiv
xor
in
cmp
lods
clc
stos
enter
pushf
cmp
cmp
notl
je
lret
sub
loope
xor
mov
and
fcompl
cmp
mov
or
mov
cs
lcall
mov
add
and
pusha
popa
mov
cmp
rorb
mov
sbb
in
les
pop
mov
stc
pop
mov
insl
mov
fwait
pop
cmp
dec
cmp
fiaddl
cmp
mov
adc
push
in
nop
in
inc
mov
xor
iret
xchg
jle
mov
push
add
aas
rcrb
movsl
jmpw
or
push
mov
cli
adc
cmpsl
jle
scas
icebp
pop
and
sbb
mov
out
cs
popa
es
addr16
in
sbb
jmp
dec
movsl
sbb
push
xor
cmp
sbbl
test
loop
cmpsb
xchg
js
cld
scas
std
sub
adc
sub
inc
and
pushl
ret
call
xor
clc
repnz
pusha
pushl
lea
jne
movsbw
mov
adc
shrd
xor
or
sub
push
lea
bt
sub
bt
pushf
test
pushf
pushl
popl
cmc
test
cmp
movb
lea
ja
sbb
test
rcr
cmp
sub
lea
shl
shl
add
btc
shl
xor
sar
mov
adc
or
inc
not
mov
cmp
clc
cmp
bt
repnz
push
lea
jne
push
not
bswap
bswap
movb
not
lahf
movsbw
mov
not
seta
setle
push
lea
pushf
pusha
push
movl
jmp
movl
pushf
call
jmp
jmp
pushl
popl
movw
pushl
ret
mov
rep
movsbl
mov
pusha
pushf
push
push
lea
jmp
mov
ud1
fisttpl
inc
rcr
jne
fs
out
scas
jae
mov
repz
lea
in
in
pushl
pop
jle
leave
dec
loop
or
sub
xor
fwait
js
outsb
push
mov
jmp
mov
call
test
dec
cmpsl
je
xchg
add
mov
adc
fsubr
stc
mov
dec
out
fidivs
adc
sbb
lods
clc
ftst
sar
sar
ror
sub
ror
and
add
add
shr
mov
jmp
call
sub
mov
dec
jne
leave
pop
jno
fidivrl
fmull
test
jmp
xchg
std
push
adc
test
loop
add
xchg
inc
lret
lret
hlt
iret
nop
inc
loop
jae
es
shl
xlat
push
mov
mov
jmp
sbb
pop
cwtl
add
mov
sub
mov
jns
mov
mov
xchg
mov
ret
ljmp
jmp
jecxz
outsl
jnp
rol
and
mov
leave
xchg
push
lret
int
mov
mov
inc
sar
mov
add
popa
jl
aad
or
pop
mov
faddl
stc
call
pushf
xlat
cmp
jno
lcall
inc
insb
and
or
lock
test
and
lea
mov
push
data16
xchg
mov
out
hlt
push
adc
inc
push
dec
fimuls
mov
roll
and
jnp
push
jle
mov
lret
fidivrl
dec
lea
inc
inc
jno
out
or
adc
jne
not
add
enter
loopne
adc
mov
jns
push
out
jle
jnp
pop
inc
es
and
mov
outsb
std
add
inc
gs
mov
jg
icebp
repnz
lods
adcl
jl
sti
cmpsl
or
jp
cmp
and
push
jae
pop
or
stos
enter
repnz
jge
jecxz
jns
pop
addr16
orb
jnp
pop
pop
roll
dec
scas
mov
pop
out
pop
aaa
mov
dec
mov
test
dec
xor
lret
pop
nop
dec
inc
push
inc
inc
sub
test
lret
leave
andb
out
shl
shl
int
dec
sti
scas
popa
xchg
cs
insb
push
jo
jecxz
fdiv
loopne
jns
mov
and
xchg
inc
inc
fisubs
pop
pop
or
jge
lret
js
mov
sbb
add
sarl
lods
aas
stc
out
insl
cmc
cli
ljmp
daa
popf
push
xorl
imul
xchg
clc
repnz
fstpt
fwait
cli
lret
sbb
mov
cld
push
push
inc
mov
mov
scas
mov
stos
pop
add
xor
adc
pop
nop
aas
push
xchg
mov
or
pop
shr
jecxz
xchg
aam
jmp
sbb
arpl
in
xchg
loop
inc
je
sub
pushf
pushf
les
jae
inc
or
test
jp
push
xchg
add
iret
ret
mov
js
xorl
sub
fidivs
add
or
out
add
push
push
push
pop
pop
out
sbb
xor
sbb
loopne
inc
inc
mov
xorl
cmpsb
repz
mov
lock
in
mov
xchg
xor
inc
inc
dec
js
mov
test
sti
push
adc
cmpl
and
mov
in
xchg
cmpsb
jno
repz
cwtl
xchg
add
lret
cmp
ret
icebp
call
jns
fiaddl
loop
stc
sub
xlat
fndisi(8087
and
and
pop
sbb
std
or
cmp
xor
sbb
mov
imul
push
xchg
xor
push
add
fs
lods
sub
adc
movl
out
inc
bound
sub
adc
shrb
inc
mov
das
push
cmp
int
testl
inc
jg
push
adc
inc
neg
jl
aad
cmpsl
inc
mov
inc
fldl
hlt
add
cmp
andb
push
cmpl
aam
mov
or
mov
mov
push
pop
push
inc
insl
add
mov
jbe
das
punpckhbw
cld
dec
cmp
dec
sub
lret
cld
inc
mov
fs
call
pushf
pushf
mov
pushf
lea
jae
clc
pusha
xor
pushf
call
jg
dec
mov
rcr
jmp
adc
jp
pop
fldcw
ret
rclb
out
jl
push
add
jbe
and
sar
stos
inc
mov
ds
dec
das
imul
pop
mov
push
push
lcall
je
shl
lea
mov
mov
fimull
lea
cmpsl
stos
cltd
push
mov
xor
inc
pop
mov
add
mov
sbb
leave
aad
pop
loopne
imull
mov
mov
ja
jmp
call
ss
cs
jge
fnsave
loopne
aam
xchg
fcompl
enter
add
mov
ljmp
dec
lea
jb
cmp
clc
stc
cmp
je
pusha
pushl
pusha
lea
jae
dec
sbb
mov
bt
bswap
clc
lea
mov
shld
test
ja
movzbw
mov
bt
pusha
sub
test
pusha
cmp
stc
repnz
push
lea
jne
inc
mov
rcl
btc
sub
clc
not
or
bswap
mov
stc
cmp
clc
sub
bt
push
mov
clc
pushl
popl
call
cmc
and
movb
add
mov
pushf
pusha
pushf
lea
jmp
lea
je
call
nop
inc
lds
iret
pop
clc
and
push
addr16
cltd
sarb
lret
xor
sub
lock
jae
call
xchg
loope
notb
xchg
jae
fcomp
sub
or
bound
pop
jae
fcoml
insl
enter
inc
jne
call
add
mov
movb
dec
pusha
push
pushl
pushf
lea
jne
bswap
btr
lea
bsf
mov
jae
stc
pusha
cmp
pushf
lea
ja
seta
movsbw
pop
bswap
bswap
pushf
mov
setle
lea
not
pushf
mov
movzbl
mov
call
add
std
cwtl
lods
fnstcw
inc
mov
pop
cmp
adc
cmp
xlat
movsb
add
mov
sbb
add
jg
aas
pop
add
sbb
lods
lods
sub
mov
in
push
jb
in
jne
add
sbb
cmc
std
lods
repnz
nop
aad
js
movsl
in
inc
aad
xchg
in
test
jae
push
addr16
sbb
lods
sbb
test
mov
imul
cli
jo
ss
outsb
cld
pop
test
mov
add
fdivrs
jmp
jno
mov
cmp
lret
pop
fistpll
mov
sbb
in
jmp
cld
pushf
adc
sub
xlat
ret
jo
push
rorb
into
imul
inc
inc
sbb
xor
jae
push
mov
out
add
add
mov
sahf
push
push
lea
in
and
mov
pop
dec
jo
push
cli
jmp
sbb
and
xor
ds
push
mov
push
pop
jmp
mov
clc
fs
sbb
ds
add
mov
xchg
testl
sbb
jl
int3
mov
aad
push
pop
test
repnz
shlb
clc
cmp
mov
ja
pop
or
push
add
js
mov
fdivrs
test
pushaw
aaa
shl
add
push
outsb
out
daa
xchg
cld
repz
jo
std
fdivs
mov
roll
xchg
icebp
xchg
test
cmp
add
je
in
or
mov
pop
push
pop
lock
push
sbb
mulb
pusha
adc
and
std
enter
xchg
aaa
mov
xchg
xor
ja
mov
cs
in
mov
lahf
sbb
xor
dec
adc
cli
mov
mov
in
mov
out
mov
xchg
mov
nop
jge
jecxz
hlt
ss
add
packsswb
cmc
mov
fsubrp
leave
daa
fdivrs
je
cmp
jo
icebp
add
cmp
sbb
xchg
ret
push
cvtps2pd
stos
daa
stc
mov
test
lahf
in
cli
mov
or
lret
test
add
or
fstp
add
stos
stos
js
daa
outsb
loopne
mov
xlat
enter
std
jns
xchg
add
jl
dec
cli
sbb
leave
sub
sbb
icebp
mov
rcrb
movsl
test
jp
sbb
shl
add
clc
scas
cld
mov
and
enter
negl
mov
into
data16
daa
fs
and
mov
cmp
cmc
bound
or
repz
xlat
mov
pop
pop
sbb
scas
movsb
add
cs
mov
enter
adc
loope
xor
mov
push
cld
xlat
mov
sahf
add
and
daa
push
sub
push
jne
enter
mov
sbb
sbb
scas
and
push
fsubr
or
adc
stc
testb
sbb
lea
xchg
daa
sbbl
jecxz
sub
mov
test
ja,pn
js
out
das
xchg
in
jne
mov
adc
subb
lods
or
adc
shll
cld
je
shr
addr16
cmc
mov
sti
jno
lock
cmc
xchg
outsb
sbb
inc
mov
je
add
mov
movsl
imul
sub
aaa
faddl
into
push
cld
xor
jo
xor
mov
outsb
and
fs
jb
lcall
push
jo
pop
mov
ficoms
push
clc
push
insl
test
clc
test
mov
out
mov
adc
sbb
dec
inc
in
adc
mov
cli
dec
imul
dec
and
clc
cld
sbb
rcl
or
cmc
in
in
push
lock
xor
sub
repz
sbb
cwtl
in
rol
cmc
daa
or
imul
outsb
dec
inc
push
test
dec
frstor
addr16
lcall
mov
icebp
adc
pop
and
hlt
mov
jne
add
push
shlb
cmp
pop
push
ret
enter
in
stc
dec
add
je
sbb
call
cmp
mov
sbb
lahf
in
outsb
not
arpl
popf
adc
daa
jnp
insb
call
daa
outsl
test
out
mov
lea
aas
push
clc
and
neg
popa
fnstsw
xchg
in
mov
adc
xchg
mull
ja
js
scas
data16
es
push
push
cli
clc
push
ss
popl
cli
sub
dec
insb
dec
ja
sbb
cli
js
inc
roll
pop
mov
sub
cmp
xor
mov
adcl
jg
outsl
ret
or
add
sub
sub
ljmp
rcrl
push
cmp
rcrb
mov
jmp
adc
fists
xor
xchg
movlps
sbb
negl
jecxz
repz
dec
cli
sub
test
repz
loopne
cmp
inc
jae
ja
fwait
jb
push
pop
inc
clc
dec
imul
pop
mov
out
lcall
les
je
mov
shll
je
lods
inc
mov
sbb
sbb
test
mov
scas
je
or
andb
xchg
jmp
jbe
in
int3
out
inc
inc
and
out
pop
ja
into
mov
in
mov
mov
jg
sbb
out
inc
pop
mov
mov
sbb
popf
outsl
scas
test
pusha
add
mov
repz
out
stos
or
cmp
pop
adc
ss
bound
mov
jae
mov
js
sbb
mov
mov
fildll
mov
shll
sub
imul
je
or
in
lock
jae
arpl
cs
push
xchg
mov
test
mov
cmp
push
adc
in
icebp
jne
cmpsl
and
fldcw
or
cmpsl
mov
inc
addps
push
mov
sbb
es
or
in
sub
in
pop
cld
sbb
je
mov
out
adc
push
mov
in
cld
cwtl
or
push
cmc
test
push
loope
lods
xlat
and
inc
xor
mov
mulb
pop
cmc
ret
adc
scas
in
pop
jb
push
sub
cld
cmp
psllw
xor
inc
jecxz
xchg
outsl
repz
hlt
aas
ss
call
aam
pop
rolb
jno
enter
sbb
add
cli
loope
test
fsubrl
out
mov
xchg
repnz
jbe
sub
call
add
add
rorb
sub
repz
sub
mov
repnz
push
jmp
xlat
pop
mov
aad
pop
inc
sub
popa
push
icebp
test
test
inc
push
sahf
mov
inc
and
push
outsl
add
xchg
cmp
dec
popf
mov
dec
icebp
rcrb
sbb
aad
jmp
add
test
adc
add
mov
testl
mov
lds
or
push
sbb
cmp
aaa
into
es
pop
pop
inc
repz
push
cld
imul
jb
and
mov
or
ss
sbb
in
mov
fs
adc
ret
pushf
mull
sbb
psubusb
cli
sub
fdivrs
lcall
jae
ja
add
cmp
sbb
stc
or
xchg
cld
repz
xlat
add
cld
push
jnp
pop
mov
sub
inc
stos
mov
jb
in
xlat
mov
or
xlat
inc
cld
adc
xchg
mov
mul
mull
pop
psrlq
mov
sbb
cli
ss
sub
and
xchg
xchg
cmp
push
daa
ss
sbb
fldl
cltd
cmpsl
add
fimull
daa
ds
andb
outsl
adc
and
mov
pusha
and
mov
adc
rorb
xchg
add
fst
cmpsl
leave
pop
sub
push
push
ret
aas
or
mov
xor
ja
push
jae
mov
lock
jno
or
cli
adcb
cmpsb
les
dec
jmp
sbb
cmp
mov
and
sub
mov
mov
cltd
sbb
icebp
sbb
or
push
imul
stc
lock
cmp
enter
leave
cmp
add
iret
cwtl
jmp
jo
loope
xchg
in
insl
sbb
imul
xor
popf
lock
jns
in
dec
jne
jnp
addr16
jns
xor
jle
and
aaa
call
iret
inc
push
iret
loope
stc
lock
inc
mov
cld
je
jmp
out
or
sbb
xchg
dec
std
sti
into
sbb
mov
into
cmp
or
mov
fnsave
or
xlat
inc
jb
fwait
pop
ja
loop
mov
pusha
mov
sbb
pop
imul
js
outsb
xor
push
repz
mov
in
imul
pop
push
clc
popa
push
js
mov
les
mov
lret
mov
test
dec
xchg
idivl
pop
repz
int
negb
test
test
aad
mov
dec
pop
mov
push
in
jl
and
mov
mov
cmpsb
sub
lret
push
js
bound
adc
imul
int3
outsb
pop
xor
insb
jbe
jno
notl
hlt
flds
inc
xchg
test
cmp
aaa
xchg
in
jmp
cmpsl
iret
xchg
push
insl
and
push
repnz
into
daa
out
jbe
clc
inc
clc
mov
cli
or
mov
adcb
loop
jbe
aaa
pushf
and
imull
and
adc
icebp
cmp
push
out
mov
lcall
popf
inc
dec
lods
inc
iret
mov
inc
in
cld
pushf
fsub
ja
mov
lods
jge
push
adc
ljmp
jns
sbb
sub
icebp
mov
cmp
inc
notb
rcrb
insb
out
sub
inc
mov
sti
pusha
lds
mulb
add
jmp
lcall
mov
adc
mov
stos
pop
call
dec
jb
xor
add
jg
cld
js
lret
sti
add
jge
lfs
jecxz
addr16
fwait
shrl
les
xlat
lock
adc
mov
and
adc
sbb
testb
mov
ja
and
or
fdivrp
xchg
cli
pop
pop
cld
pop
mov
pop
movsl
daa
arpl
cmp
inc
sub
dec
ret
pop
in
cmp
mov
cld
add
mov
push
lock
pop
jne
daa
rcr
paddq
icebp
pop
into
pop
push
xlat
aaa
jo
lea
and
ret
jbe
or
push
mov
in
mov
mov
in
ss
lcall
or
adc
popf
lds
pop
stos
push
push
mov
outsl
mov
lods
int3
gs
pop
nop
jne
mov
jno
fdivrp
mov
addr16
icebp
mov
jnp
cmp
outsb
loope
movsl
pop
arpl
jbe
sbb
mov
pop
sbbb
mov
jno
and
shlb
cmp
xchg
or
lea
fmuls
jecxz
aaa
push
js
icebp
pop
scas
in
xchg
jno
outsl
cmc
lcall
xchg
ja
imul
sbb
pop
daa
out
cld
cs
fdivl
sarb
ds
repz
fists
sbb
dec
add
jmp
push
dec
aaa
ss
sub
jbe
pushf
mov
cmp
jecxz
add
dec
sbb
jns
fisttps
test
cmp
aam
pusha
and
shll
loop
hlt
int3
or
xor
lods
push
pop
cmp
aam
cltd
xchg
in
bndldx
cmp
mov
xchg
das
adcl
cmp
icebp
jmp
add
jno
xchg
mov
push
cli
outsb
sahf
out
jnp
pusha
sbb
js
roll
in
test
jp
mov
push
aam
test
xchg
scas
pop
mov
inc
fcom
daa
jnp
movl
hlt
aad
cmpsl
lds
push
repz
jl
or
pop
scas
ds
dec
mov
sbb
pop
clc
jmp
popf
push
out
cli
movsl
in
add
pop
clts
cmp
cmc
sbb
inc
push
and
dec
jmp
xlat
lock
or
or
and
cmp
cmp
push
les
in
jno
ret
xchg
pop
add
rolb
xchg
mov
divl
sub
xor
fstpt
mov
iret
sub
mov
loopne
sahf
push
sub
mov
xor
stos
sub
sub
adcb
into
xchg
clc
js
and
mov
fs
sbb
mov
fs
sahf
int
push
cmpsb
aad
out
pop
jbe
rolb
cwtl
sbb
imull
jo
pop
loop
push
or
or
negb
jo
xchg
out
xlat
sbb
enter
sbb
aaa
movsb
pop
daa
pusha
mov
adc
or
out
in
sub
xor
mov
jo
add
jg
xchg
or
pusha
js
mov
jne
lods
xor
jg
jle
and
insl
xchg
mov
in
xchg
add
mov
adc
pop
cmp
popa
sarb
lcall
test
pushf
sar
pop
sbb
add
jge
jge
cmp
adc
xlat
add
daa
mov
jb
pop
push
lods
sti
fdivrs
cld
not
mov
mov
add
xor
cld
or
or
xchg
rep
push
incl
dec
jo
fldl
jbe
jno
inc
cmp
in
mov
pop
inc
clc
add
push
mov
lock
cli
mov
sbb
push
push
ja
jae
outsl
mov
sub
hlt
lcall
std
in
xchg
aad
ljmp
jb
repz
xchg
outsb
mov
mov
jg
popf
cmc
loope
orl
fwait
xlat
and
push
fisubl
mov
jae
repz
mov
fs
sub
arpl
mov
xorl
fbstp
cmpsb
xchg
fildl
xchg
aas
cs
cltd
sbb
and
jge
dec
lock
repz
and
cmpsl
inc
dec
hlt
repz
jae
outsb
pmullw
sub
lods
xchg
sub
add
push
and
mov
mov
leave
adc
or
ds
dec
push
movsb
sti
outsb
or
mov
add
movsb
das
xor
scas
das
nop
jns
mov
out
call
pushf
adc
mov
inc
pop
js
push
aad
rcl
dec
in
inc
shlb
lea
mov
fld
mov
fimull
mov
divps
dec
add
jp
dec
push
ret
xor
jl
lods
dec
adc
jbe
in
mov
shl
adc
cmc
xor
cli
mov
sbb
mov
in
cmp
in
test
push
jp
mov
pop
and
ds
pop
notb
scas
mov
sub
js
sbb
mov
int3
loopne
xor
hlt
cltd
pop
inc
aas
subb
pusha
lret
int3
mov
leave
mov
into
cmp
dec
fstps
les
dec
div
int
outsb
popa
cli
adc
test
sbb
cld
js
xchg
dec
adc
xchg
cmpsl
xchg
cwtl
icebp
lcall
cli
jl
mov
xchg
pop
xlat
and
push
pop
lds
dec
lcall
roll
das
mov
jne
shrb
jns
sbb
movsl
xor
mov
cld
push
push
mov
pushw
push
les
out
pop
jmp
test
or
mov
mov
lock
sbb
int3
ja
push
cs
inc
cs
cmpsl
and
popf
mov
shrb
out
xor
mov
insl
call
ficoml
mov
sti
xor
and
insl
ljmp
cmpsb
loopne
ljmp
pop
mov
sub
or
cmpsl
sbb
mov
test
pop
shrl
out
ljmp
hlt
js
subl
jne
mov
hlt
sbb
clc
add
in
add
repnz
in
mov
std
test
push
inc
jp,pn
sahf
inc
xor
mov
sahf
in
and
jmp
stc
xchg
cmpsb
lock
cmpsl
jae
push
xchg
pop
cld
xchg
maxps
lock
mov
jae
inc
repz
mov
dec
cld
outsb
sbb
sbbl
imul
xchg
dec
test
mov
ja
inc
ljmp
mov
cmp
fcomps
cmp
out
and
jp
rcrb
sti
inc
mov
das
sbb
stc
stos
jns
pusha
cmpsb
pop
subl
out
sbb
push
add
imul
negl
adc
in
sbb
adc
imul
mov
xchg
jg
ljmp
sahf
in
pop
mov
leave
fiaddl
mov
mov
xor
ret
and
in
insb
mov
in
pop
mov
inc
aas
mov
dec
mov
aam
mov
pop
add
inc
inc
xchg
fsubrp
inc
and
mov
cwtl
repnz
fwait
outsl
xorb
jmp
sar
cmc
or
daa
es
sbb
sub
sbbl
pop
push
lcall
cmp
push
shl
sub
add
push
push
ja
cld
lcall
sahf
pusha
out
pushf
xlat
pop
outsl
mov
adcb
cmpsb
enter
add
pop
dec
xor
cli
sub
test
pop
pop
stos
movsl
pop
lds
sbb
mull
cmc
or
lods
call
push
pop
pusha
cli
xchg
jmp
jae
aas
jge
inc
add
cwtl
out
movsl
aaa
lcall
jecxz
pop
xchg
add
or
pop
ja
sbb
lods
add
sbb
adc
shlb
cmpsb
cmp
out
sub
int3
mov
mov
xor
repz
jb
push
imul
lcall
cld
xlat
jmp
mov
mov
add
add
test
inc
xor
cmc
and
std
inc
leave
testb
xor
mov
mov
mov
sti
and
inc
jp
push
cmpsl
ja
lret
sbb
and
adc
sbb
popa
jmp
paddsw
clc
fwait
mov
aam
mov
push
cmp
sti
jo
inc
cmc
in
mov
sub
lahf
xorb
fisttpll
out
mov
mov
aaa
fiaddl
ja
lcall
pop
mov
dec
out
movsl
in
mov
fiadds
fcomp
mov
sbb
scas
outsl
mov
and
stos
stos
loope
inc
scas
je
lahf
mov
arpl
dec
inc
sbb
mov
mov
ds
jp
push
fs
and
inc
xor
les
test
dec
add
in
std
adc
call
popf
jno
data16
xchg
dec
in
push
sbb
sub
or
aas
jae
test
les
out
into
cmpsb
and
lods
adc
add
push
sti
add
jno
cmp
clc
in
dec
shl
ja
stos
test
add
push
nop
mov
xor
notl
mov
jmp
xor
std
mov
icebp
xlat
cmc
jmp
mov
ljmp
clc
ja
cs
imul
les
adc
ret
inc
pop
lock
testb
add
mov
rcll
rcll
or
jmp
out
fcoml
repnz
jmp
mov
inc
ljmp
sbb
adc
and
jbe
ja
mov
add
mov
add
mov
hlt
sbbb
adc
enter
outsb
pop
xchg
dec
icebp
add
icebp
jmp
hlt
jmp
jmp
mov
inc
adc
jae
outsl
inc
je
std
call
add
xor
imul
clc
idivl
lret
mov
repz
add
imull
mov
or
jl
in
jge
add
pop
jae
sti
jp
ljmp
nop
add
notl
stc
add
xor
daa
xchg
shlb
pop
sarl
mov
or
cmp
mov
add
in
pop
ja
inc
js
push
add
xchg
jg
jne
or
jp
test
sub
incb
add
sti
adc
xchg
jns
cmpsb
test
add
divb
decl
adc
je
adc
icebp
adc
push
sub
jno
lock
sub
test
jno
add
icebp
std
fisttps
add
jns
and
outsb
push
or
orb
ljmp
sub
subb
add
pop
cmp
out
jns
je
adc
pushf
mov
js
std
cld
mov
push
imul
sahf
repz
gs
xchg
add
test
incb
dec
lret
mov
jmp
sti
lods
lret
lods
jns
fsubrl
aam
jmp
fs
popa
das
inc
je
pop
sub
cld
push
lds
imul
mov
adc
push
jno
out
ja
add
arpl
cmc
fidivrl
rcpps
mov
jnp
iret
int3
adc
jno
sbb
shlb
js
loope
je
add
insl
mov
stc
xor
cmp
add
cli
jb
incl
cmp
mulb
lret
sar
cmp
adc
in
xlat
ret
test
cmp
addr16
repz
scas
cld
push
mov
sar
cmp
push
xor
lcall
add
pop
mov
loopne
addr16
xchg
cltd
mov
imul
in
sbbb
or
sar
and
stos
loopne
sbb
iret
cmp
mov
jg
subl
addr16
pop
sbb
pop
xlat
movsb
decl
push
notb
or
lods
mov
and
mov
stc
lods
adc
inc
pop
mov
sbb
in
push
lods
negb
add
ffreep
cs
sub
add
mov
repnz
std
ficompl
adc
adc
pop
dec
inc
inc
jbe
cmp
sbb
das
and
repnz
repz
mov
incb
push
jae
jbe
cli
mov
sarl
scas
icebp
ds
cld
lret
lahf
ljmp
or
xchg
loope
push
mov
mov
test
jl
ja
in
xchg
es
cmpsl
jbe
imul
adc
arpl
gs
lcall
out
inc
pop
divl
stc
in
jp
pop
test
pop
cmpsb
push
scas
xchg
addr16
xlat
xor
push
js
movsl
repz
fsub
xchg
ja
clc
jns
das
ret
cmp
daa
push
scas
mov
inc
cmp
pusha
repnz
lcall
add
pop
cwtl
pop
jl
loop
mov
pop
xor
icebp
push
dec
add
xchg
inc
mov
int
push
push
fnstsw
add
lods
dec
shrl
sub
in
inc
cmp
mov
adc
lock
test
add
jge
jmp
loop
arpl
repz
cltd
fnstcw
shll
orb
fsubs
cltd
outsb
inc
clc
xlat
in
push
mov
bound
in
push
cld
sbb
pop
xchg
fcomps
lock
pop
repz
movsb
inc
dec
mov
clc
inc
mov
cld
je
mov
cmp
dec
push
repz
in
sbb
jbe
mov
xor
into
sub
jbe
adc
jle
adc
mov
cwtl
mov
xchg
add
lods
ret
push
add
sbb
jge
pop
inc
inc
cmpb
outsb
and
mov
jbe
add
cmpb
mov
add
into
jmp
in
mul
xor
sub
mov
roll
icebp
pop
mov
mov
scas
rcr
cld
shr
mov
mov
mov
xor
dec
lret
cmp
call
in
sub
cmc
and
andb
sub
nop
dec
xor
ror
ficoms
sbb
xlat
test
mov
ss
mov
adc
insl
testl
push
shl
xor
dec
jl
adc
jl
adc
pop
fcompl
push
cli
push
add
jbe
pop
ret
lock
mov
mov
mov
mov
fiaddl
mov
sbb
hlt
fprem1
push
xchg
cmp
in
popf
sub
and
sub
mov
daa
mov
inc
mov
mov
stc
jb
jne
nop
adc
sub
js
call
pop
inc
lods
sub
sar
data16
adc
adc
sub
pop
xor
push
sahf
outsb
popf
and
push
clc
jno
push
aam
cli
add
adc
out
std
sub
add
or
xchg
testl
sbb
pushf
fidivl
cmovle
in
jl
gs
dec
xchg
pop
mov
sbb
cmc
daa
push
and
lcall
jp
sbb
cld
out
lods
je
push
sub
mov
test
sbb
jb
jmp
mov
dec
inc
xor
js
pop
jns
cwtl
jmp
enter
iret
incl
sarl
mov
jne
jle
and
mov
dec
push
sbbl
jmp
xchg
push
mov
into
mov
push
lds
mov
xchg
adc
or
in
loopne
push
subl
stos
xor
imul
lret
cmp
mov
idiv
cmpsb
adc
lret
jns
sbb
cmp
pop
dec
lods
insl
out
test
or
pop
inc
adc
lcall
popf
xchg
daa
adcb
lods
mov
xchg
lds
and
jae
mov
mov
and
xchg
int3
cwtl
xor
pushf
add
daa
add
cmp
mov
in
loopne
aas
dec
sub
push
jns
jl
lea
js
aad
adc
faddl
movsb
sbb
jbe
jno
cmp
inc
mov
decb
ds
xchg
sbb
mov
gs
mov
mov
cmpsl
sbb
out
cld
not
es
mov
mov
popa
out
xor
and
in
push
jmp
ret
subl
sbb
fisubrs
jnp
dec
xor
insb
xchg
cld
ja
decl
les
add
adc
xchg
jle
loope
rcrl
push
add
cmpl
mov
xchg
divl
jbe
ss
xor
add
jp
sarl
mov
jecxz
xchg
stos
lea
xchg
out
lods
dec
push
mov
mov
dec
aam
and
adc
or
ss
imul
add
fstpl
inc
xlat
nop
jmp
in
pop
adc
push
in
fidivs
loope
xor
pusha
testb
leave
cli
js
sub
adc
jmp
scas
cmpsb
or
mov
lock
movsl
cmc
dec
mov
mov
pop
jb
call
cmc
aaa
add
and
adc
lock
daa
adcl
dec
dec
add
jmp
push
clc
fs
add
mov
nop
outsb
jle
das
pop
out
xor
aad
add
mov
cwtl
lahf
out
stc
ljmp
push
outsb
lret
stc
shr
lret
dec
sbb
adc
mov
lock
test
lcall
push
jl
push
xor
dec
das
lahf
andb
or
cld
int
inc
add
ret
repnz
sub
fnstcw
enter
and
into
movsl
mov
sub
inc
pop
cmp
inc
stc
cmc
mov
in
rcrl
test
test
cmp
cmp
pop
inc
pop
add
inc
test
dec
push
out
and
mov
sub
sarl
cs
aam
sub
push
or
stc
fsts
dec
in
mov
mov
add
ret
dec
je
nop
and
rorb
xchg
push
mov
inc
data16
dec
push
push
repnz
mov
clc
pop
lahf
sbb
mov
idivl
scas
sbb
aas
push
dec
lahf
xlat
push
in
aad
daa
xchg
fs
cs
sbb
cwtl
cmp
jne
push
sbb
dec
addr16
jb
xor
inc
jbe
adc
and
sbb
out
or
mov
adc
sarl
sub
fnstenv
mov
sbb
pop
inc
mov
stos
das
mov
sub
jbe
jo
and
sti
outsb
jle
nop
mull
aam
sub
adc
dec
push
pop
adc
lods
adc
pop
dec
lret
ss
cmp
xchg
cmp
or
stc
cs
jmp
je
cld
cmc
cmp
push
or
dec
pop
cmp
jle
jne
sub
push
fimull
scas
dec
cmc
jne
cmp
inc
pushf
aaa
out
cmc
sbb
inc
call
cld
inc
jmp
cmp
adc
stos
in
inc
les
test
cld
and
jge
xchg
pop
and
movhps
pop
jmp
push
jo
lahf
jl
pop
pop
jp
mov
loop
or
xchg
mov
pop
mov
loop
push
adc
xor
fs
ret
scas
addr16
cld
stos
xor
sub
or
sahf
mov
in
in
scas
cltd
pop
movsl
arpl
mov
scas
add
jno
xor
ja
or
fwait
add
jp
sbb
jmp
leave
cmc
jne
push
jecxz
outsb
jo
cld
mov
cltd
adc
adc
test
in
mov
inc
test
scas
out
dec
sub
aam
inc
cmp
cmp
loopne
js
insb
pop
jno
jnp
popf
jg
dec
dec
mov
cmp
add
repnz
xor
lods
xchg
push
sub
repz
ja
lock
sub
cltd
in
jmp
ficoml
lcall
lcall
cli
sub
in
test
sbb
xor
jnp
push
ja
mov
or
int3
outsb
dec
das
daa
gs
loop
cwtl
js
sub
cmp
rorb
fldt
push
mov
inc
push
mov
cld
mov
xchg
inc
call
mov
or
sub
adc
lock
cmp
jae
mov
les
pop
sbb
aad
scas
in
push
jnp
out
inc
cmp
icebp
push
sub
sbb
inc
dec
in
in
dec
repz
dec
jnp
ss
xchg
adc
in
and
add
xchg
push
push
jmp
cld
imul
addr16
lods
sbbb
push
ja
adc
pop
scas
idiv
call
cmp
fcoms
push
shll
jbe
inc
sbb
imul
xor
int
rcrl
scas
dec
push
mov
push
mov
push
pop
xor
bnd
pop
jp
and
inc
push
pushf
ret
push
nop
stos
mov
movsb
xor
scas
shrl
xor
adc
mov
sub
jmp
es
rolb
xchg
jbe
and
pop
hlt
je
xlat
pop
pusha
sbb
arpl
mov
insb
loope
pushf
enter
and
sbb
hlt
sbb
popl
cli
sbb
mov
inc
push
pop
in
rorl
jae
aaa
aam
fcmovnb
mov
mov
mov
pop
orl
aas
cld
rep
idivb
sbb
pop
dec
fidivrs
adc
int
fists
adcb
fcom
jno
sub
adc
dec
aaa
dec
mov
xchg
js
xchg
lahf
push
jl
cmc
inc
mov
scas
mov
sub
cmc
xor
pop
movsl
inc
int
hlt
dec
and
cli
dec
lods
push
idiv
emms
cld
adc
in
adc
movsb
outsl
sar
jns
test
pop
pop
or
push
sbb
push
cld
out
repnz
aas
enter
and
sub
xchg
movsb
out
lock
and
divps
addr16
out
dec
sub
mov
outsl
cli
dec
push
add
outsb
aas
jg
out
pusha
mov
xchg
pop
jle
test
arpl
mov
sub
popa
pop
out
sub
mov
xor
pop
push
aam
outsb
mov
cmp
mov
call
in
lock
and
push
clc
in
data16
ja
hlt
add
push
push
push
jg
cld
gs
sub
add
jb
or
jns
inc
or
pop
cld
xchg
adc
xlat
xchg
jno
mov
jo
scas
pushf
ret
ret
mov
test
pop
and
mov
cmp
and
add
mov
xor
sbb
sti
enter
dec
xorb
fbstp
adc
and
cld
cmpsb
nop
in
popf
fs
add
repnz
jno
mov
js
cs
mov
call
bound
frstor
mov
push
js
outsb
mov
es
sbb
cmpsb
dec
jle
adc
mull
and
repz
fisubrl
and
je
jno
adc
dec
jb
cmc
es
ss
and
aam
icebp
sub
xchg
add
xor
loope
cld
jae
push
xor
std
lock
pop
xchg
aam
or
mov
pop
js
or
in
or
xchg
aas
adc
in
hlt
jb
lock
enter
cmp
dec
std
test
sbb
jns
xchg
shr
sbb
jo
lock
jo
push
loopne
outsb
test
arpl
rcl
scas
lcall
add
sub
mov
pop
nopl
test
out
cld
adc
iret
pop
pop
jbe
add
popa
cmpsl
xchg
cs
sbb
mulb
lea
xlat
test
ret
sbb
sbb
mov
add
pop
popa
mov
adcb
xor
addr16
inc
sbb
jns
xor
push
mov
or
aas
incb
and
pop
jne
cld
movsb
std
scas
add
insb
stc
es
enter
aaa
mov
test
and
js
jmp
jmp
testb
movsl
cs
xor
pop
cli
cld
inc
cmc
or
pop
or
jge
dec
pop
sbb
bound
mov
orl
imull
rcll
add
and
sub
jae
push
push
sbb
pop
pop
mov
push
and
and
push
fdivr
cwtl
or
data16
hlt
jae
gs
push
mov
sbb
push
xor
cmp
movsl
idiv
sbb
in
ss
ja
push
cmpsl
push
jb
lcall
repz
lcall
test
fucom
inc
lret
mov
inc
jns
pop
sbb
mov
push
clc
add
aas
push
inc
mov
push
ljmp
add
xor
ds
outsb
sub
lods
push
cmp
mov
jmp
test
stos
sbb
push
fcomps
pop
sahf
xor
or
sbb
jae
icebp
lret
pop
lods
mov
in
inc
mov
xchg
xlat
dec
fbstp
fsubrs
mov
xchg
clc
inc
xlat
mov
sub
imull
pop
in
out
or
jmp
fsubl
jbe
jmp
mov
mov
in
test
jne
scas
dec
mov
sbb
std
rol
sub
and
jl
xchg
imul
xacquire
cmp
mov
fsts
push
bound
pop
icebp
sub
aaa
jb
jmp
iret
bound
jl
pusha
mov
xor
addr16
inc
cmc
stos
dec
xchg
repz
insb
mov
jb
into
stos
push
mov
mov
out
jae
pop
adc
jbe,pt
test
and
test
fiadds
aam
addr16
xor
dec
xchg
xchg
out
in
cmc
inc
push
pop
mov
pop
std
mov
popf
testl
jg
pusha
sub
cmp
clc
cli
lcall
test
pop
pop
adc
mov
ss
roll
jmp
es
jp
aas
clc
stos
adc
sub
ss
ja
hlt
cmc
mov
pop
xchg
enter
mov
outsb
adc
adc
jp
or
addr16
mov
jns
pop
push
icebp
xor
sub
clc
add
xchg
mov
clc
cmp
loopne
into
aaa
sub
notb
pop
scas
jno
divl
cmc
cs
jbe
pop
out
dec
adc
dec
idiv
les
jb
call
js
push
add
out
cmpsb
jne
cltd
mov
sar
push
aaa
fs
div
outsb
divb
push
adc
xor
push
mulb
mov
mov
mov
divl
clc
xchg
cmpsl
jmp
mov
in
jmp
clc
jns
scas
loopne
in
or
std
xor
fs
decb
stc
out
push
ja
icebp
xchg
dec
scas
das
push
add
pop
imul
mov
inc
icebp
add
cmc
inc
clc
lcall
push
xchg
jge
out
mov
mov
adc
fs
cmc
add
clc
testl
idivl
std
lock
xor
adc
jb
test
shlb
inc
hlt
test
ljmp
sti
adc
je
cmp
jne
adc
cmc
je
jle
dec
ljmp
js
sbb
testl
jns
ljmp
adc
add
lahf
push
pop
insb
clc
add
cmp
imul
jo
and
jb
and
icebp
scas
add
push
scas
pop
jge
outsb
lock
push
stc
jle
cli
outsl
xor
inc
jg
test
lahf
in
adc
jb
lods
add
data16
hlt
out
data16
xchg
test
popl
push
stc
pop
add
divl
std
nop
in
xor
push
xorl
xchg
xor
in
ss
xor
outsl
cli
push
ljmp
repz
shl
into
pop
sbbb
out
xor
in
or
sbb
or
dec
clc
xchg
clc
mov
cmp
lcall
add
push
cli
cmpsl
js
pop
xor
add
jmp
inc
mov
jne
loop
pushf
adc
pusha
scas
push
mov
mov
xor
into
mov
inc
addr16
outsl
mov
pusha
scas
inc
addb
andb
fisubrs
mov
clc
jb
mov
aam
sbb
loopne
xchg
in
sahf
cwtl
or
push
repz
fwait
xchg
repnz
sbb
jmp
sub
loope
cmc
cs
adc
sbb
mov
sub
jns
mov
sbb
pop
cs
jp
push
push
cwtl
icebp
xlat
shll
pop
aas
xlat
test
pop
scas
and
icebp
adc
sbb
scas
sbb
dec
lahf
enter
pop
hlt
inc
sbb
xchg
jp
dec
push
and
negb
aaa
popa
xchg
repz
addr16
mov
inc
add
ljmp
add
pop
push
add
clc
or
cld
sbb
outsb
pop
outsb
ret
loope
pop
in
inc
cltd
dec
ret
jns
mov
dec
push
in
mov
pusha
lds
add
jb
lods
xchg
pop
icebp
in
mov
ficoml
sub
pop
mov
test
js
cmp
insl
adc
stos
push
xor
jno
xor
cmpb
or
stos
inc
add
in
pop
addl
and
sub
in
cmp
add
popf
insl
jmp
cli
test
mov
cmp
xor
cld
shl
xchg
sbb
mov
sub
mov
and
adc
fiadds
lret
cmpsb
sub
ss
stos
out
add
xchg
mov
notb
pop
jno
mov
sti
adc
push
test
fs
test
and
push
jo
lahf
push
test
lods
jnp
jle
push
rcr
push
jns
mov
jne
lods
cmp
repz
push
cli
outsb
loope
push
cld
es
push
cmp
sarb
xor
hlt
inc
xchg
insb
out
jb
daa
outsl
nop
inc
arpl
test
add
sti
loop
inc
sub
or
ja
out
cmp
adc
sbb
into
stc
cwtl
jecxz
fsts
and
aaa
sahf
aaa
pop
jecxz
mov
jns
fcmove
pop
mov
out
sub
test
mov
pop
add
mov
scas
aad
leave
and
or
sbb
jo
shrl
adc
sbb
scas
loopne
mov
jl
outsl
cmpl
stos
into
shl
xor
mov
je
hlt
or
mov
and
or
sti
subl
iret
xchg
pop
ljmp
or
jp
pop
mov
pusha
negl
outsl
sub
shrb
leave
aam
lcall
sbb
cmp
cld
cmpsb
shrb
jne
stc
pop
std
jge
cmpsl
js
mov
jmp
out
cld
pop
dec
xchg
aas
mov
adc
jne
sub
js
fucomi
fucom
cmp
adc
lods
mov
shr
pushl
pop
add
addl
push
cmp
cld
adc
push
enter
inc
push
pop
adc
out
je
jno
jg
data16
out
cld
idivl
pop
das
mov
xchg
stc
mov
scas
xlat
add
out
jmp
mov
mov
pop
mov
xchg
stc
enter
addr16
mov
mov
inc
pop
cwtl
imul
push
mov
push
push
push
fcoms
pop
cs
iret
mov
mov
xchg
jl
dec
xchg
repnz
lods
mov
push
add
test
movsl
pop
cld
jecxz
adc
lds
sar
adc
in
push
ds
pop
roll
dec
aas
add
cmp
cmp
aas
xor
sub
shlb
xchg
sbb
or
stos
xor
sbb
cld
push
cmp
in
push
sub
xor
icebp
push
lcall
loope,pt
lahf
dec
imul
or
adc
cli
fbld
daa
fsubrl
movsb
xor
stc
out
leave
mov
sub
test
sti
clc
sahf
arpl
adc
out
scas
bound
inc
aad
jnp
mov
imul
out
cmp
jl
xchg
lods
test
cs
pop
xor
jbe
jns
add
xor
mov
aaa
outsb
inc
nop
lret
sti
jae
xchg
cld
and
xchg
cli
dec
iret
call
nop
subb
andb
mov
pop
or
enter
xor
in
mov
in
or
jp
cld
es
outsb
test
dec
js
scas
mov
js
jae
ds
sbb
or
add
insb
push
mov
cmpsl
repnz
or
jns
loope
and
push
mov
adc
movsb
stc
or
data16
sbb
mov
into
out
pop
cmp
out
mov
idiv
lcall
push
sbb
jns
dec
sub
push
aad
sbb
dec
cld
les
in
sub
gs
scas
into
jo
js,pn
adc
int3
mov
outsb
inc
lahf
sbb
rcrl
cltd
sahf
push
ja
mov
mov
fcmovb
push
rcll
lods
xchg
js
js
pop
cmovbe
inc
push
inc
jns,pn
scas
cmpxchg
leave
mov
push
js
add
dec
xchg
out
and
mov
daa
push
sub
fcmovb
hlt
sahf
ljmp
stos
lret
call
sbb
push
das
pusha
insb
sub
add
or
mov
and
mov
in
insb
fldenv
add
test
lock
test
and
addr16
jmp
jl
loope
test
push
xchg
ss
das
jg
aaa
adc
push
pusha
sub
shll
dec
inc
js
push
jno
ret
cmc
popf
pushf
ja
outsl
shlb
outsb
push
addr16
jg
out
mov
sti
jb
testb
cmc
mov
jbe
cmpsl
push
cld
sub
scas
data16
and
addl
mov
outsb
and
pusha
add
jbe
xlat
ljmp
aam
imul
adc
pop
xor
sbb
adc
rolb
fldcw
test
or
mov
movsl
sbb
or
lock
out
xchg
sahf
mov
aad
daa
adc
cld
test
xchg
mov
or
test
xor
outsb
dec
sbb
cmp
jmp
pop
dec
sub
stos
out
ss
nop
sub
cmp
push
cld
cmp
jo
mov
cld
unpckhps
rcrl
sub
hlt
aam
mov
inc
cmp
daa
outsl
test
adc
cmp
rolb
fwait
outsb
scas
sti
push
cld
cmc
push
mov
and
cli
add
out
push
pcmpeqb
pop
xor
sub
dec
andl
sbb
pop
inc
jmp
xor
lret
mov
xorb
movsl
inc
sub
js
sub
add
xchg
iret
push
adc
js
jae
js
mov
repnz
incl
and
adc
out
ss
and
adc
xorb
pop
inc
fld
pop
bound
addr16
xlat
xchg
fbld
leave
dec
cli
stos
js
inc
dec
jbe
cmc
xchg
push
aaa
cli
pop
pop
test
sahf
sbb
or
cmp
xchg
mov
and
scas
arpl
push
inc
push
sbb
inc
adc
aaa
adc
pop
cmc
mov
mov
ds
daa
sub
inc
jbe
dec
js
xchg
mov
cmp
sub
ds
ja
sbb
jns
sbb
jno
or
cld
inc
xor
lahf
in
pop
jecxz
aaa
mov
add
or
es
jne
sbb
and
cli
add
push
jo
ret
lods
test
mov
mov
jg
push
sbb
std
pushf
lcall
inc
idiv
mov
inc
mov
push
dec
enter
xor
inc
push
cmc
or
aas
in
pop
push
leave
cld
test
xchg
sysret
pop
jle
in
xor
mov
mulb
imul
push
dec
xor
cld
in
roll
daa
jae
in
cmpsb
ret
sbb
jl
mov
int3
movsb
imul
adcl
push
loope
lcall
je
jo
aas
stos
xchg
dec
jl
jmp
mov
mov
add
mov
sbb
xchg
test
ss
sbb
xor
cld
loopne
insb
ret
mov
jl
adc
push
loop
pop
mov
dec
pop
xchg
sbbl
mov
fwait
xchg
out
cmp
mov
sub
inc
jno
add
sub
jle
add
andl
loop
insl
wrmsr
sti
das
rcrl
ss
adc
in
leave
cld
insb
mov
repz
or
mov
cld
mov
jns
call
dec
dec
dec
xor
imul
ret
push
dec
std
test
inc
adc
and
test
cmpsl
shrl
mov
in
leave
push
sbb
mov
dec
aaa
cld
sahf
movsb
and
and
daa
jns
fdivl
imul
jmp
ret
stc
fisttps
fcmovu
decb
pushf
xchg
jl
push
jo
jae
outsb
lcall
dec
sub
rcrb
popa
mov
cmpsl
jb
in
int
mov
mov
nop
push
ds
push
inc
arpl
ret
lock
pop
add
push
ss
dec
es
rcrl
addl
jbe
add
stos
mov
repnz
push
sub
rclb
and
or
sbb
sbb
imul
sahf
jae
push
out
das
xor
jl
mull
dec
out
subb
sbb
cmp
hlt
sbb
cld
lea
xlat
das
pop
add
mov
sbb
js
sub
push
mov
rcl
mov
add
and
xchg
push
es
test
rcrl
adc
pop
mov
mov
pop
fisubs
loopne
push
cmp
das
incl
push
xchg
cld
push
push
subb
jns
jno
addr16
test
cmp
push
mov
es
add
add
sbb
jle
mov
test
mov
mov
sbb
fcomps
pusha
add
scas
lods
cmp
lcall
jmp
sub
lods
insl
lods
pop
addr16
inc
jge
cmc
sub
pop
repz
aam
jg
test
das
orb
mov
sahf
mov
adc
cmp
xor
mov
lahf
mov
jo
es
data16
jecxz
sbb
lret
ret
mov
mov
push
and
in
sti
roll
jl
cmc
mov
xchg
test
or
cmp
add
push
mov
add
push
xor
push
arpl
cwtl
jmp
in
daa
inc
or
roll
adc
mov
addl
addr16
negl
das
out
mov
inc
into
ret
push
into
cld
scas
pop
cmpsb
push
insb
jecxz
int
lods
add
into
scas
mov
dec
jl
mov
iret
mov
adc
les
jbe
and
push
dec
inc
mov
xchg
stos
movsl
jns
icebp
inc
cld
ror
inc
sbb
add
mov
cli
mov
pusha
gs
arpl
mov
mov
in
jo
mulb
inc
cli
sbb
and
in
adc
in
sbbb
dec
movsl
push
mov
or
push
lock
sbb
jmp
xchg
push
js
daa
test
sbb
mov
or
mov
hlt
jge,pn
fidivl
aam
in
clc
lds
in
scas
add
pusha
fwait
sub
jo
push
lcall
pop
cmovge
cmp
clc
xchg
sub
mov
pusha
or
mov
mov
fdivrs
je
pop
add
subb
jne
push
add
xchg
cmp
repnz
aam
in
xlat
inc
cld
fdivrs
inc
fwait
popf
mov
mov
roll
jns
shlb
aas
and
lcall
hlt
repnz
leave
test
sub
mov
sbb
ljmp
cli
xor
lret
insb
and
les
xchg
decl
sbb
mov
bound
push
cld
pop
arpl
jmp
mov
jg
add
xor
decb
cwtl
test
or
jae
or
jl
jns
xor
xor
push
daa
sbb
dec
aad
mov
sbb
mov
pop
ret
push
jo
sbb
into
pop
mov
pusha
icebp
cmp
mov
cli
pop
add
arpl
sbbb
ds
into
jo
mov
sbb
outsl
rol
dec
fcom
mov
mov
jne
lods
test
inc
add
mov
vcomisd
dec
dec
orl
sub
test
and
mov
jge
hlt
daa
and
mov
js
adc
inc
mov
add
mov
sub
cmp
jae
and
jbe
and
adc
cmp
push
pop
lret
jbe
xor
std
mov
fwait
or
and
jo
rcll
adc
aas
js
sub
enter
lods
loop
xchg
ror
dec
testl
mov
and
mov
into
mov
int3
inc
dec
mov
mov
or
ror
mov
mov
repnz
and
dec
push
imul
fs
in
inc
and
sarb
je
lcall
aad
fcomi
idiv
jge
mov
xor
xchg
pop
insl
mov
inc
psllq
mov
mov
lock
test
mov
mov
xor
hlt
js
cwtl
cmp
dec
ds
pusha
inc
jae
clc
icebp
shr
insb
xchg
and
xchg
aas
cmc
fwait
clc
cld
sbb
mov
test
cmp
mov
iret
pop
adc
daa
xor
jo
push
mov
stc
push
cld
push
out
cmpsb
inc
push
outsb
sbb
xlat
in
shlb
outsl
out
adc
lds
das
and
mov
into
cmc
imul
mov
mov
xor
bound
daa
nop
inc
hlt
or
push
cld
add
pop
jbe
fisttpl
fildll
jnp
xchg
cmp
test
pop
sti
pop
dec
insb
loope
aad
daa
fcoml
pop
mov
pop
cmp
rclb
mov
add
mov
test
es
decl
fwait
xor
ja
cld
or
js
shrl
jl
and
nop
test
inc
mov
sub
test
dec
inc
pop
xchg
pop
setnp
push
jno
cld
push
loope
and
pop
scas
into
dec
cld
outsl
xchg
scas
addr16
iret
mov
bound
mov
cld
aam
mov
outsl
sbb
xor
ja
ret
pop
pop
mov
dec
into
push
and
test
dec
dec
fwait
pop
jnp
ja
adc
fildl
jo
in
pop
loop
dec
insl
test
push
inc
sbb
xor
lods
sub
add
ljmp
out
in
pop
jne
and
lret
pushf
mov
sub
rclb
movsl
outsb
dec
daa
orl
les
aad
out
cmp
js
cli
adc
adc
push
jmp
sbb
sub
push
cli
outsb
adc
jl
push
aad
testl
pop
sub
fadds
pop
sbb
inc
xor
mov
cmp
rcrl
cli
fidivl
adc
sbb
leave
and
mov
jmp
clc
cmc
ficoms
mov
mov
testl
push
adc
addl
jp
bound
insl
mov
jg
xchg
push
jne
fdivl
pop
fstpl
shlb
sub
ds
mov
and
pop
or
cld
stos
js
div
popf
push
cmpsb
das
cld
es
jp
out
repnz
add
inc
repz
sbb
inc
cmpsb
or
in
xlat
mov
lea
icebp
jecxz
ret
mov
lahf
cmp
jb
or
je
and
or
je
aam
adc
dec
jl
out
fdivrl
cmpl
outsb
roll
dec
imul
cmp
push
jo
cmpsb
int
lea
fsts
and
mov
daa
xchg
pop
movsl
pop
xor
sbb
iret
popa
addb
sub
mov
fstpt
cltd
enter
idivb
in
jb,pn
mov
lock
sub
pop
sbb
aam
ss
mov
jecxz
push
mov
lcall
cmp
stc
shlb
call
je
aad
sar
push
fmuls
out
lods
adc
xor
adc
pop
push
lcall
mov
sbb
dec
idivb
xchg
cmp
mov
jae
pop
jle
jo
jns
sub
imull
jbe
fiadds
pop
div
pusha
and
inc
mov
or
dec
adc
lea
add
sbb
pop
cmp
in
jge
imul
loopne
in
pop
add
rolb
insb
hlt
stc
inc
cmpsl
jbe
inc
or
inc
mov
cmpsb
mov
or
dec
fistl
aas
lret
incb
sub
inc
mov
cwtl
addr16
cmp
repz
fidivrl
mov
or
sarb
cmp
in
pushl
cmp
testb
cmp
adc
cmp
fmull
mov
aam
icebp
aaa
push
cmpsl
cmp
fstps
jne
cmp
das
fbld
addb
ds
lea
mov
adc
in
push
loope
and
jb
jo
cmpb
mov
jl
inc
sub
les
add
ds
hlt
dec
je
das
or
cld
sbb
fdivl
and
movsl
dec
notb
cmp
pop
add
cmp
jbe
and
es
add
cwtl
lcall
or
adc
add
hlt
clc
cs
insl
push
inc
cmp
xchg
or
je
lods
mov
rcll
push
push
jle
xchg
insl
jnp
sbb
push
es
xor
push
cmp
pop
inc
inc
or
push
aas
mov
xor
mov
pop
push
cmp
cmc
iret
sti
loop
cwtl
in
mov
test
add
mov
ja
fwait
sbb
inc
test
fsubr
and
repz
repnz
stos
inc
push
dec
test
jp
les
jae
ja
jns
mov
mov
add
shll
inc
push
stc
sbb
adc
fs
sub
xlat
jmp
loope
adc
cmp
mov
out
aas
aad
jb
push
xor
mov
mov
add
push
int
mov
cli
out
les
sub
ljmp
add
je
mov
enter
lahf
aam
mov
mov
sbb
out
jne
ljmp
cmc
in
dec
push
orb
push
aas
cmpsb
sbb
insb
jbe
mov
xchg
cs
jb
add
pushf
push
pop
xor
xlat
inc
xchg
icebp
xchg
loopne
jecxz
sbb
mov
mov
xchg
imulb
sbb
jbe
pop
mov
clc
push
ljmp
pop
push
fwait
inc
jnp
aad
lahf
sub
jmp
mov
cmp
inc
sub
jbe
pop
inc
stos
xchg
popf
cld
lret
fdivl
dec
outsl
cmp
data16
mov
jb
cld
pop
sbb
leave
out
in
mov
in
or
fimull
mov
pop
mov
add
pop
cmpsl
ss
fldt
outsb
and
adcb
hlt
cld
dec
inc
mov
out
inc
insl
inc
sbb
in
sti
jle
cmpsb
es
push
jno
outsl
mov
orb
inc
loope
insb
and
jno
adc
stos
or
ret
inc
es
sub
mov
in
imulb
imul
dec
jmp
jo
sahf
out
fsubr
jae
cld
xchg
and
outsl
mov
sub
jb
lcall
shrl
xor
in
pop
aam
punpckhwd
popa
dec
mov
pop
pop
in
or
js
scas
dec
add
sub
mov
push
sub
cmc
dec
jae
push
cli
sbb
repz
outsl
in
adc
pushf
xchg
push
pop
cmp
lret
arpl
insl
sub
dec
lahf
outsl
cwtl
fadds
rep
cmp
cmpsb
imul
ret
call
sbb
stos
iret
or
fadds
es
mov
xchg
sub
stos
adc
je
cld
lods
cs
out
aam
mov
icebp
sub
ret
mov
xor
push
and
aam
and
dec
jbe
and
xlat
jmp
cmp
cs
dec
jae
and
movsl
cmp
cmc
cmp
jns,pt
mov
dec
mov
or
pop
jbe
movsb
xor
lock
and
push
pusha
mov
loop
push
outsb
loope
popf
dec
loop
ret
cmc
or
cmp
out
mov
push
mov
cli
scas
jb
add
sbb
pop
mov
cld
dec
iret
and
cmp
jp
push
xchg
push
push
jb
xor
mov
or
dec
hlt
fistl
dec
lods
jae
cmp
sarl
fsub
je
cmp
sbb
enter
jmp
lock
xorl
scas
adc
fists
xor
aaa
dec
sbb
out
daa
dec
ret
sbb
in
jo
xchg
cwtl
testb
mov
shl
cmp
sub
in
lds
fiaddl
pop
push
mov
in
dec
pusha
scas
push
scas
xor
or
nop
and
ja
jp
test
es
mov
aas
pop
cmp
lretw
or
push
lods
pushf
push
dec
jmp
mov
loop
daa
pop
in
lcall
adcl
inc
adc
cmp
pop
cwtl
aas
sbb
xor
push
movsb
jecxz
in
in
pop
push
sub
mov
add
mov
test
xor
rol
arpl
in
push
cmpsb
in
out
adc
in
inc
sbb
inc
andb
cmp
repz
sbb
lea
adc
lods
add
out
sub
sbb
cmp
repz
fisubrl
sbb
cmpsl
iret
icebp
addl
and
mov
fcoml
push
mov
adc
stos
jmp
pop
roll
mov
inc
mov
sub
lahf
pushl
into
outsb
inc
lea
add
repz
pusha
cld
pop
dec
mov
mov
mov
repz
sbb
adc
imul
adc
addr16
cwtl
fnstcw
sbb
loope
adc
cld
adc
es
cli
shl
sbb
mov
mov
mov
and
hlt
push
jg
addr16
lcall
pop
jbe
adc
mov
xor
ret
jle
adc
jg
push
cmp
dec
das
in
xchg
cmpsb
push
mov
jns
je
sar
mov
sahf
xor
sbb
cld
xchg
mov
lods
cmp
pop
mov
mov
sub
mov
sbb
aam
cltd
cmpsb
cmp
js
xchg
test
icebp
adc
scas
jmp
lahf
cld
sub
and
mov
js
cli
cld
bound
orl
leave
loop
xlat
push
sbb
dec
jmp
rcrl
mov
fsts
pop
lock
and
sarb
xor
cld
clc
cli
ret
jns
sub
push
rcrl
imul
cmp
jbe
cmc
dec
push
mov
push
jmp
sub
mov
cmp
sub
in
sbb
pop
cmc
sahf
test
into
jo
fsts
test
pop
and
sbb
subl
jp
out
lds
outsb
in
lcall
dec
push
leave
push
pop
shrd
cmpsb
fdivr
xor
into
cmp
and
cmp
sub
cmp
mov
out
lret
fdivrs
cmp
sahf
ds
sbb
je
add
fisttpll
fwait
clc
push
push
push
test
inc
xor
add
mov
mul
inc
iret
daa
lock
jle
jnp
cli
add
icebp
je
xchg
mov
loop
outsb
aaa
mov
mov
out
jmp
cmp
pop
adc
inc
pop
dec
adc
std
sbb
pop
sahf
cld
nop
or
scas
scas
dec
adcl
mov
insb
notl
inc
or
xchg
mov
int3
xchg
and
push
cmc
jp,pt
nop
mov
jnp
cmc
pop
out
std
xchg
mov
je
pop
shlb
push
xor
sbb
idivl
sbb
push
xor
pop
movsl
cmp
rclb
scas
cmp
dec
sahf
push
jmp
dec
jp
sub
stos
std
push
ret
fdivp
jne
ds
jae
or
mov
jecxz
xlat
pop
scas
mov
and
movsb
sbb
jmp
data16
aas
sbb
pop
jmp
leave
hlt
dec
mov
pushf
push
repnz
das
jecxz
sbb
ja
dec
mov
jl
repnz
lock
in
jle
leave
xchg
test
adc
test
test
inc
pop
das
push
sbbl
jb
cld
push
iret
icebp
cmp
xchg
insl
inc
pop
pop
jne
or
push
lcall
lcall
or
mov
out
jns
adc
cld
jle
cmpsb
pop
ret
xor
inc
fcoml
push
add
mov
mov
mov
xchg
sti
ds
mov
sbb
xor
cltd
add
sub
out
mov
dec
div
xchg
shrb
aam
adc
idiv
cmpsl
dec
mov
or
cmp
subb
mov
mulb
cltd
push
xchg
push
lahf
and
movsb
mov
and
lcall
xchg
or
jbe
into
out
stc
cli
xlat
test
cmp
aas
push
pop
mov
arpl
cltd
sub
pop
fwait
cwtl
iret
out
cmp
jmp
sub
xchg
mov
call
xchg
push
mov
scas
xor
repz
pushf
mov
or
call
push
je
cmp
inc
iret
xlat
test
add
fiaddl
xor
jnp
pop
cwtl
and
push
les
xchg
adc
inc
lcall
mov
ret
sub
jmp
cld
call
pop
std
and
cltd
dec
loop
outsb
dec
sub
jb
mov
iret
scas
push
loopne
cmp
in
push
xchg
aad
or
imul
fldcw
in
std
out
ss
cmp
sbb
mov
addr16
scas
fmull
lds
push
lret
xor
sub
jae
sbb
lods
jae
dec
out
subl
cmp
or
in
test
les
pop
sbb
imul
std
mov
incb
out
ds
fistpll
pop
iret
pushl
ja
cld
jne
cmc
in
fildll
add
jo
mov
jmp
sbb
hlt
loop
adc
xor
outsb
in
pop
xor
add
sarl
and
add
mov
leave
cmpsb
addl
popa
xchg
xchg
jne
stc
das
pop
iret
in
sbb
insl
into
cmpsb
daa
fidivl
push
mov
stos
inc
movsb
in
bound
jne
adc
sub
lods
lock
out
fwait
aas
mov
ds
jmp
ds
sti
lcall
clc
push
sbb
es
out
inc
ds
in
cmpsb
lret
xor
repz
xchg
add
test
mov
jae
test
daa
push
adc
sbb
mov
icebp
sbb
and
testb
in
setl
mov
inc
mov
sub
inc
jns
jp
mov
xchg
rorb
xor
iret
outsb
or
ja
sahf
dec
jge
jne
in
xor
in
test
fsubrs
je
fdivr
into
jmp
mov
jl
sbb
add
daa
cs
xor
push
dec
mov
push
cwtl
ret
mov
in
leave
mov
mov
inc
xchg
xchg
pop
sbb
bound
stc
mov
xchg
movsl
inc
xchg
sub
rcrl
into
aas
inc
dec
lock
and
jns
arpl
mov
adc
lock
roll
mov
jg
jle
dec
mov
push
stos
pop
xchg
movsb
sbb
and
pushf
cmpb
xor
cwtl
fsts
push
pop
pop
mov
or
outsb
out
fdiv
lcall
push
xlat
jge
mov
ljmp
aam
mov
decb
xchg
hlt
mov
sarb
adc
ja
pop
test
lcall
xchg
cmpl
int
daa
std
jge
movsl
add
call
lods
cld
scas
fistpl
push
inc
inc
das
cmp
outsb
fdivrl
and
and
xor
mov
add
ds
xor
cwtl
flds
fisttps
out
int
push
enter
jl
repnz
add
pop
lods
adc
pop
xor
add
rsqrtps
pop
adc
dec
addl
je
in
lods
jnp
dec
sbbb
push
rep
cld
push
add
testl
mov
cmp
stc
ret
sub
fsubrs
sbb
lret
cmp
sbb
pop
push
inc
ret
jae
sbb
push
push
arpl
bound
pop
mov
inc
aaa
leave
ss
mov
mov
inc
push
mov
jns
mov
lods
add
push
in
cld
loope
clc
add
cmpsb
lcall
ds
and
movsl
mov
stos
adc
mov
inc
cmp
sub
int3
and
js
add
mov
sub
mov
inc
daa
jb
cmc
xor
cmp
cmp
adc
ja
and
jno
adc
mov
sar
adc
es
adc
aam
xor
mov
rorb
sbb
xchg
cld
fcomip
test
test
and
sbb
inc
jmp
dec
mov
fsubr
enter
or
icebp
mov
lods
jge
mov
lock
into
mov
pop
cltd
pop
mulb
je
outsb
jb
or
lahf
idivb
in
sbb
in
mov
or
lcall
xchg
pop
sbb
mov
cli
sbbl
shll
mov
xor
fidivrs
stos
fisubrl
dec
ljmp
out
xchg
imul
sub
test
repz
inc
mov
and
push
cli
hlt
loop
add
jmp
imul
sbb
xchg
cmp
inc
mov
insl
adc
and
movsb
mov
out
cwtl
and
dec
dec
sub
xchg
mov
mov
fs
clc
daa
jbe
lock
sub
or
mov
mov
mov
mov
stos
jmp
and
out
xchg
in
nop
sbb
xor
int
add
jo
dec
xor
gs
aaa
pop
add
sub
scas
cld
sarl
mov
lcall
movsl
jmp
xchg
inc
pusha
inc
stc
ss
push
jge
ret
lods
dec
push
sub
pop
lahf
test
jg
push
out
push
inc
ss
test
test
and
popa
cltd
dec
lods
mov
jmp
mov
aas
sub
in
push
int
movsl
sbb
rcrl
jne
sbb
cld
mov
xor
pop
sarb
jb
repz
xchg
int3
mov
je
inc
dec
popl
jp
push
cmc
inc
add
insl
mov
cmp
pop
or
negl
or
jns
ljmp
cltd
xchg
sub
hlt
sub
cli
dec
loopne
out
mov
insb
cmc
clc
test
fs
scas
xchg
and
pop
mov
sub
mov
into
test
xchg
flds
aam
lret
jo
sub
xchg
and
adc
or
cld
sbb
xchg
mov
pop
clc
cld
cmpb
addr16
ss
add
mov
ds
hlt
add
add
inc
lock
mov
cmp
test
xor
or
dec
cld
adc
daa
mov
mov
fwait
adc
testl
daa
mov
dec
mov
push
pop
cld
mov
inc
adc
sbb
std
cli
popa
lret
mov
les
imul
js
fiadds
test
out
lcall
xor
lea
push
or
mov
data16
sub
or
mov
sbb
cmc
cmp
int
mov
pusha
push
jb
sti
xchg
pop
dec
rcll
push
pusha
cld
out
mov
mov
cmc
jmp
lahf
adcl
dec
and
in
jl
cmp
jg
jle
icebp
jmp
jle
adcb
mov
sbb
mov
jmp
and
jecxz
inc
sbb
lock
dec
xchg
jge
pop
lahf
mov
adc
in
cwtl
push
push
inc
fisubrl
insb
in
shll
cli
bound
js
mov
push
iret
xor
aas
loop
pop
cwtl
cld
popf
and
clc
mov
imul
pushf
enter
push
push
into
jnp
out
jg
xchg
inc
arpl
fnsave
in
icebp
mov
pop
test
ds
hlt
std
cmpb
popa
cmp
icebp
adc
loop
mov
ss
push
out
sub
mov
mov
mov
lret
je
and
push
out
cmp
in
pop
hlt
dec
outsb
dec
mov
mov
out
lret
jp
shlb
pop
dec
sahf
sub
mov
stc
shrl
aam
xchg
jp
or
sbb
mov
mov
shrb
xor
cs
repz
imul
sahf
mov
add
fcom
xchg
jmp
mov
lcall
roll
push
lret
mov
test
rorl
push
ret
ja
mov
les
stc
pusha
push
in
imul
es
jg
push
sub
mov
ds
enter
pop
pop
hlt
pusha
pxor
add
sbb
daa
ret
or
pop
addr16
aam
sbb
mov
dec
mov
pop
jne
lods
pop
int3
and
inc
adc
sbb
xlat
sub
inc
frstpm(287
push
loope
in
daa
adc
lock
mov
cmc
vmread
and
jmp
cmp
gs
shl
outsl
mov
jno
sbb
inc
icebp
outsl
cld
pop
xor
add
adcb
add
jnp
aad
cli
mov
cmpsb
push
inc
hlt
into
sahf
jnp
lds
iret
jnp
pop
jle
xchg
lret
notb
fildl
jle
cs
or
popf
push
repz
nop
jp
jmp
test
cmp
data16
fstpl
add
dec
imul
mulb
mov
and
cmp
out
cltd
sbb
sti
ja
fdivs
icebp
mov
push
adc
jno
cli
xor
pusha
adc
movsb
dec
je
popa
jmp
mov
cld
into
inc
outsl
cwtl
fs
sbb
sti
dec
cli
movsl
das
das
addr16
xor
pop
fidivrs
aaa
repz
imul
mov
push
scas
orb
test
cmp
and
adc
int
cmp
punpcklbw
frstor
adc
sub
lret
sub
fimuls
jecxz
and
movsl
or
push
xchg
mov
repz
adc
fcomps
pusha
daa
mov
mov
pop
push
add
pop
fnstsw
mov
sahf
cli
test
mov
jns
adcb
inc
js
movsb
xchg
xchg
add
mov
lcall
stos
sub
mov
sub
mov
in
inc
adc
cmp
sub
cmp
jb
js
sbb
push
push
xor
adc
and
mov
add
daa
cltd
sbb
std
xor
mov
fsub
mov
ss
lods
or
mov
and
neg
hlt
fldenv
push
push
ss
ss
in
jo
sti
xchg
addb
mov
testb
lods
push
sar
inc
div
jg
cmc
mov
cmp
mov
inc
clc
mov
dec
cltd
div
movl
cwtl
cs
outsl
clc
xchg
adc
push
jb,pn
icebp
hlt
ljmp
clc
mov
adc
lock
loopne
push
inc
jl
sbb
sbb
or
xlat
out
xchg
jbe
push
shlb
push
push
xchg
jg
das
lock
jle
repz
push
jnp
clc
les
stos
pushf
or
out
adc
into
cmc
or
sti
push
test
adc
add
clc
add
push
xchg
mov
imulb
neg
aaa
aas
sbb
popl
testb
adc
pop
divl
ret
jo
or
inc
std
repz
testl
test
jmp
out
dec
testl
ret
jns
imul
subl
div
adcb
sbb
jne
ss
divl
mov
outsl
insb
incl
testl
jb
icebp
out
adc
nop
je
icebp
icebp
xchg
cmp
data16
inc
jne
addb
add
aaa
jno
lahf
clc
clc
out
dec
xcrypt-ofb
cmpsl
insl
pop
repz
mov
js
add
jae
js
imul
jbe
xor
pop
add
add
push
adcb
add
jbe
push
xchg
cmc
icebp
adc
add
jb
out
ljmp
ret
sub
cmp
jo
dec
subl
inc
add
clc
jbe
idivl
jno
insb
jb
xchg
repz
clc
jle
clc
ss
jbe
dec
or
idiv
jnp
add
notl
jnp
movsl
addr16
out
mov
idivl
inc
jmp
outsl
clc
add
pmuludq
add
jmp
lods
add
repz
inc
push
jnp
ja
in
aaa
jle
cmc
add
push
jno
cmc
add
push
mov
inc
popf
stos
dec
xorb
out
jne
mov
addr16
lods
add
fs
in
push
bnd
outsl
or
movsb
cmpb
repnz
loopw
in
add
repz
sbb
xor
rcr
int3
push
ljmp
in
push
cli
jecxz
mov
pop
fwait
jns
in
pop
mov
mov
xchg
roll
xchg
mov
jae
pop
cmp
cwtl
inc
fwait
sbb
cmp
orl
add
mov
sub
pop
push
addr16
cmp
xor
lods
pop
movsb
mov
xor
jmp
cmc
add
sbb
out
sbb
sbb
imul
cwtl
inc
aas
arpl
jns
icebp
adc
pop
std
adc
rol
dec
sub
pop
cmpsl
stos
fldcw
into
lea
xor
fistpll
js
sbb
xchg
cmp
inc
mov
testl
jmp
xlat
push
xchg
mov
mov
shlb
xchg
jns
dec
mov
in
dec
xchg
xchg
clc
xorb
addr16
cmp
add
cli
out
cmp
test
popa
pop
jge
es
cmp
es
js
adc
sbb
push
add
push
and
jmp
adc
dec
pop
cli
sti
out
in
ja
and
idivb
loopne
lock
dec
cltd
dec
loope,pt
divl
cmp
das
pusha
int
lret
shr
push
outsb
out
psubb
ja
test
nop
mov
xlat
call
insl
std
dec
insb
mov
mov
push
inc
iret
in
in
adc
fcmovu
jnp
pop
xlat
movsb
fstpt
fstl
sbbb
imul
cld
sbb
jmp
loop
je
lahf
enter
fimull
out
xchg
popf
sub
sbb
push
push
sub
sub
js
push
sub
mov
jbe
sub
sbb
cli
add
inc
mov
js
sar
inc
cmp
leave
cmp
movsb
jns
out
xchg
push
fists
ss
add
iret
adc
pop
jg
jmp
mov
jno
test
mov
xchg
mov
add
enter
aad
inc
or
push
in
cmpb
pop
test
lcall
hlt
mov
scas
jb
mov
mov
ficoml
mov
popa
mov
out
daa
outsb
outsb
clc
dec
xor
call
sub
dec
test
sbb
cmp
pop
sahf
in
lret
xchg
jnp
jae
push
insb
xchg
push
jecxz
add
in
jmp
jno
mov
lods
ss
je
stc
repnz
xchg
sbb
xchg
aaa
movsb
mov
pop
daa
adc
cmc
cwtl
in
out
dec
xor
add
add
and
sbb
lcall
adc
xchg
cld
ficoml
out
daa
pop
push
sub
into
and
in
ljmp
sbb
mov
out
push
lahf
cmp
scas
mov
xchg
repz
jg
lcall
xchg
fcoms
rep
mov
cmp
test
adc
mov
pop
adc
out
lods
int
stc
or
push
or
jns
in
repz
out
popf
lret
in
inc
or
pop
jp
and
cwtl
mov
or
daa
and
in
in
add
sbb
insb
aad
inc
bound
lcall
adc
pop
push
ss
jg
addr16
ss
icebp
lds
or
inc
inc
jp
nop
das
xorl
xchg
pop
cltd
fistpl
sbb
cmpsb
sub
adc
sbb
into
sub
add
out
mov
pop
sbb
dec
mov
es
insl
repnz
test
call
inc
sub
or
lahf
adc
push
cs
mov
add
mov
xchg
jo
roll
cmpsl
test
ljmp
inc
mov
leave
push
js
in
sbb
outsb
or
cwtl
cmpsl
js
mov
and
sbb
push
call
arpl
inc
or
mov
or
push
xchg
sbbb
fimull
add
out
xor
outsl
ds
pop
loop
aas
daa
lcall
mov
hlt
in
icebp
dec
in
pop
pop
pop
mov
push
bound
xor
sbb
out
stos
jns
sub
or
gs
cli
ja
cld
shr
sub
sbb
lds
mov
inc
mov
and
cli
mov
clc
lods
sub
push
dec
fmull
jge
push
int
jb
push
jae
cltd
mov
xor
sub
popf
inc
xchg
lods
dec
aam
pusha
mov
cwtl
test
scas
icebp
scas
sbb
inc
xor
xchg
add
je
ror
pushf
and
jno
adc
sbb
shrb
xchg
jae
int
mov
add
cmp
mov
loope
xor
jle
test
in
cmp
clc
rorl
xor
das
inc
adc
pop
sub
push
dec
add
sbb
jo
andb
cmp
lods
dec
mov
mov
mov
pop
cltd
pop
stc
in
mov
sbb
das
dec
pop
hlt
and
dec
mov
es
cmc
leave
stc
sub
ds
sub
cmp
sarb
jmp
mov
pop
ljmp
pop
xlat
fwait
dec
flds
or
cld
sub
sbb
fldenv
mov
mov
mov
or
in
cmpsb
addb
pop
sub
or
mov
jecxz
sbb
popa
dec
adc
fists
xor
mov
inc
subb
imul
add
cmpsb
add
ss
push
test
jne
mov
cld
pop
sub
xchg
ss
int
sbb
xchg
jle
icebp
call
lret
fistpl
push
pop
xor
outsl
mov
pop
jo
adc
cli
add
cli
mov
and
mov
icebp
jmp
call
jbe
enter
lods
sbbb
in
outsb
lret
mov
sub
mov
inc
iret
test
xor
fmull
push
jp
add
repz
sub
jle
and
test
or
xchg
jmp
mov
dec
add
outsl
loop
lcall
adc
gs
dec
xor
out
cwtl
pop
or
out
push
fdivr
adc
cld
fisubrl
loope
or
mov
inc
jnp
in
sbb
xchg
mov
outsl
jmp
push
daa
insl
pop
mov
sub
stc
adc
pop
adc
iret
scas
incl
movsb
cs
ficoml
imul
lcall
mov
cmp
xor
mov
sbb
mov
adc
shll
shll
cmp
or
mov
mov
aad
jmp
fsubr
inc
and
cmp
push
sbb
stos
fidivrl
sbb
inc
cli
push
mull
cld
mov
fidivrl
lcall
sbb
add
loopne
sub
lods
push
mov
sub
pop
rolb
enter
xor
xor
dec
mov
inc
or
divl
push
movb
aaa
jnp
adc
lahf
incl
ja
pop
jb
sbb
js
add
mov
loop
mov
aad
mov
test
push
sub
sbb
jmp
or
sbb
inc
or
xchg
loope
push
or
cmp
jo
sbb
gs
addl
jnp
push
cmp
add
adc
mov
cmc
popf
std
decb
push
int3
push
xchg
sbb
mov
cmpb
xor
xor
div
pop
push
jl
lret
fwait
loope
fisubl
popa
mov
and
or
outsb
pop
push
ficoms
loop
jle
and
call
js
add
hlt
jae
cmp
sub
ja
loope
js
std
push
fldenv
cld
pop
inc
adc
and
sbb
clc
in
jl
cmp
pop
xor
cmpsb
sub
xchg
imul
push
inc
push
jbe
fucomp
mov
mov
inc
scas
xchg
mov
call
jmp
inc
orb
adc
rcr
xchg
push
jnp
in
push
loope
mov
std
outsb
push
stc
test
and
scas
pop
sbb
push
pop
jno
dec
je
sub
inc
jle
dec
clc
jge
out
out
jne
jl
pop
repz
push
cld
rclb
ss
mov
cmpsb
cmp
clc
and
pop
aaa
xchg
mov
sbb
outsb
sub
pop
or
sbbb
cmp
fadd
mov
push
jbe
xor
xor
jnp
dec
pop
cmp
or
mov
cmc
mov
out
push
cld
push
scas
sbb
jae
outsl
push
xchg
mov
pop
jmp
cmp
lea
stos
xchg
xor
mov
pusha
daa
daa
lcall
cltd
inc
call
mov
mov
pop
in
push
mov
cltd
lods
sub
in
inc
sbb
je
pop
mov
jp
push
sub
lods
jl
xor
cmp
adc
mov
test
icebp
insl
into
data16
push
pop
std
icebp
add
mov
jns
out
jl
sub
lds
in
je
push
stc
and
pusha
rolb
das
add
out
push
pop
jmp
cs
dec
clc
push
add
in
jne
pop
adc
push
sbb
jbe
sbb
test
in
js
and
test
out
sbb
cld
sub
movsb
out
out
in
ds
xchg
push
adc
scas
cmp
lret
sahf
mov
int3
jae
lahf
in
int
cs
dec
adc
cli
mov
ss
sbb
jns
lds
dec
in
mov
push
insb
js
movsl
xlat
mov
rorb
pop
cmp
leave
sarb
pusha
ljmp
dec
push
inc
loope
movsl
push
std
mov
call
scas
pop
pop
jge
lods
testl
pop
decl
sbb
inc
mov
mov
mov
outsb
adc
inc
lret
mov
jno
movsb
scas
addl
mov
sbb
aad
lret
dec
jno
fiaddl
test
xor
testb
icebp
jg
sub
in
mov
dec
ret
inc
pop
ficoml
jne
jbe
push
in
push
xchg
js
or
pop
push
out
jne
add
push
lret
jg
adc
hlt
test
test
lock
cs
lcall
aam
push
and
cmp
cmp
fsts
push
jle
adc
pop
pop
sbb
arpl
fstl
js
lds
xlat
xchg
jae
icebp
in
mov
dec
cmp
mov
inc
outsl
in
xlat
sub
and
sbb
jmp
adc
scas
popa
mov
add
mov
pop
push
mov
inc
fwait
incl
outsb
pop
insl
mov
and
inc
cwtl
les
or
rcr
in
clc
mov
pop
loope
cld
repz
idivb
cmp
out
rolb
aaa
or
mov
mov
ds
mov
arpl
fsubr
pop
mov
mov
cmp
clc
inc
loope,pt
fmul
cld
stc
sub
jmp
in
cmova
stos
leave
add
cmp
icebp
fsubs
fs
push
mov
idivl
bound
mov
fs
pop
xor
int3
mov
arpl
movsl
and
fidivrl
out
jns
push
cmp
cld
lds
mov
jp
pop
lahf
mov
mov
sbb
or
ret
mulb
pushf
jno,pt
ja
repz
fstl
dec
lods
jo
daa
fadd
loopne
sbb
movsl
or
pop
sbb
jnp
outsl
inc
and
leave
mov
pop
cwtl
dec
repnz
add
jecxz
js
mov
or
hlt
jo
lods
shrl
mov
ret
movsl
in
insb
stos
pop
xor
test
hlt
mov
std
jl
aam
push
jns
adc
jae
movsl
mov
iret
sbb
xor
ds
ss
mov
rcl
dec
sbb
push
mov
int3
nop
das
sbb
lret
adc
sub
adc
outsl
push
jnp
outsl
lods
push
jle
and
ja
cwtl
mov
inc
fsts
out
xchg
pop
shrl
or
jae
test
mov
cmpsb
xchg
outsb
aas
xchg
and
xchg
stos
shrl
jmp
xchg
add
add
jns
insb
cld
xchg
and
aad
push
rolb
xor
out
lods
mov
push
cmp
mov
lcall
scas
xchg
pushf
jle
cwtl
sahf
ja
jecxz
add
lods
jbe
in
sub
or
and
push
subl
cmpb
fsubrp
aaa
movsb
sub
push
pop
and
mov
adc
dec
lahf
sar
inc
mov
ljmp
out
movsb
mov
cmp
into
adc
cld
fsubrs
fcomps
push
push
jecxz
repnz
sub
xchg
int3
jge
repnz
and
inc
inc
lods
pop
xor
cwtl
cwtl
in
jo
inc
addl
push
cwtl
or
loopne
xor
arpl
sbb
icebp
push
mov
xlat
jno
jne
push
lods
mov
ret
ss
add
addr16
ds
pop
jno
inc
icebp
pop
pop
sub
cmpsb
cmp
lret
test
cltd
in
sbb
fwait
js
pushf
mov
int
dec
sub
cld
xchg
mov
pop
and
aaa
push
add
pop
rcl
cmp
mov
sbb
daa
cmp
jne
xor
stc
and
in
push
mov
jmp
inc
adc
mov
fnsave
dec
xchg
js
mov
cli
mov
pop
cmp
stc
scas
mov
cmp
ss
xorb
cli
and
incl
arpl
and
sahf
sarw
sbb
dec
cld
test
lret
mov
imul
shll
cmc
pop
mov
in
adc
mov
pop
loope
cmpsb
jmp
sub
or
jnp
jge
jg
inc
push
testl
popa
adc
rorb
inc
sbb
ss
xchg
adc
cmpsb
gs
inc
cs
push
or
js
sbb
sbb
adc
jmp
pop
xor
mov
int
daa
fs
mov
popf
mov
out
pop
pop
mov
push
push
int
bound
xor
test
sti
daa
cs
inc
outsl
es
sub
dec
sub
jmp
add
mov
incl
inc
cwtl
xchg
or
jmp
ja
cmp
mov
fs
es
ss
mov
mov
cwtl
aam
mov
fdivr
cli
incl
in
pop
mov
add
stos
pop
cmp
pop
sbbl
pop
lea
pop
cmp
ja
adc
dec
sahf
xlat
jmp
jmp
das
cmp
mov
arpl
push
xor
ror
adc
out
ret
ss
xchg
add
jp
xlat
push
iret
aam
and
sbb
push
sub
test
xor
shl
pop
and
addl
inc
sbb
dec
cli
mov
fisubrl
sub
je
out
imull
in
in
movl
jbe
inc
add
cld
cmpsb
cmp
out
int3
fnstcw
inc
in
sarl
jge
loope
xchg
out
cld
aam
aas
aaa
outsb
addb
popa
andb
mov
ss
cmc
gs
push
pop
into
xchg
push
dec
sbb
sbb
scas
push
xor
add
enter
arpl
in
in
mov
dec
stos
cmp
icebp
arpl
dec
fwait
pop
sub
js
or
push
inc
inc
repz
xchg
sbb
test
and
cs
cmp
jp
pop
mov
pop
cld
push
sub
push
cli
sbb
add
mov
xchg
mov
pop
mov
sbb
int
push
js
out
in
inc
inc
das
pop
push
mov
cmp
jg
mov
or
mov
arpl
movsl
lahf
and
push
sbb
cmp
adc
out
mov
add
jnp
cmc
mov
mov
or
xchg
or
arpl
xor
ret
cmp
xchg
push
das
mov
in
push
insb
fistl
and
or
add
in
aad
mov
subl
ss
jo
sti
sub
ret
jmp
sub
dec
push
and
mull
jle
dec
adc
cld
ds
jmp
pop
test
push
fnstenv
sub
out
test
ret
pop
in
hlt
pusha
mov
and
push
ret
sbb
in
sbb
dec
pop
add
aad
adc
cmc
push
fwait
sbb
mov
xor
mov
dec
std
int3
sbb
inc
add
mul
xor
and
cmp
fldcw
cli
cmp
xlat
adc
js
pushf
pop
or
dec
xor
mov
mov
js
ret
jbe
pop
test
fsubr
inc
xor
imul
adc
test
and
addr16
shrl
cmp
add
hlt
in
dec
repz
ja
mov
out
js
xorb
iret
movsl
sub
adc
out
dec
pop
xchg
cld
sbb
cwtl
sbb
repz
fdivrl
cmp
loop
enter
cmpsb
icebp
lahf
dec
in
jmp
pusha
push
xchg
and
cmpsl
in
fptan
repz
in
sub
pop
sbb
sub
sub
adc
adc
and
idiv
add
mov
clc
cltd
lds
sbb
ss
js
test
cwtl
add
pushf
fildl
mov
jle
loope
addr16
jno
xchg
add
mov
sbb
inc
cmp
add
pop
adc
push
sbb
inc
lds
sub
das
mov
int3
sbb
ja
int
mov
jno
jp
inc
inc
push
ds
inc
in
lock
movsb
ret
cs
jo
mov
orb
lds
jae
push
pop
push
hlt
cld
insb
add
lds
cwtl
mov
ret
int
mov
jne
mov
jns
fmull
cmp
dec
aad
mov
or
data16
loope
pop
cmp
cld
cmp
popf
sub
inc
sbb
fcmovbe
push
fcoml
sub
in
sti
inc
repnz
fwait
push
fcomp
lahf
in
jo
ds
push
ljmp
stc
xlat
pop
mov
cmp
cmc
lret
js
xchg
mov
dec
push
pop
daa
fmull
repnz
jae
xchg
cmp
shl
ds
mov
test
test
pop
in
dec
fdivrs
jmp
cmp
cmp
imul
popa
dec
cmp
lahf
xchg
sub
jnp
mov
in
sbb
mov
cmp
xchg
push
lahf
sti
xchg
jns
or
pusha
cmp
mov
ds
cmp
clc
xchg
in
cmp
lods
cmp
rep
idiv
out
mov
xor
sbb
popa
and
movsb
outsl
pusha
mov
pop
aaa
jp
into
cs
cmp
jae
xor
xchg
or
mov
pop
sbb
je
hlt
lret
andb
incl
jmp
fs
aam
jnp
hlt
adc
loope
imul
add
add
cmp
movsl
dec
das
push
imul
adc
jl
pusha
xor
cli
dec
pop
or
loopne
andb
push
push
hlt
ret
add
mov
adc
js
jns
ss
mov
and
cli
mull
fdivs
mov
daa
mov
xchg
in
mov
cmp
hlt
or
jb
push
sub
std
cld
push
lret
stc
adc
cmp
dec
loopne
fnstcw
fdivl
add
repz
pusha
hlt
jge
cmpsb
sbb
js
inc
pop
fsubrs
fsubs
push
dec
test
js
push
adc
into
sbb
jp
out
scas
ljmp
push
mov
imul
out
add
into
cmp
mov
cmp
icebp
xor
in
cli
pop
jo
mov
cld
jnp
inc
jl
push
adc
sbb
xchg
outsl
cmp
and
sub
cltd
clc
movsb
dec
push
sbb
addr16
cmp
push
push
lret
pop
xchg
outsb
sbb
ror
mov
iret
ljmp
inc
push
ficoml
test
add
loope
roll
mov
lea
imul
adc
fdivrs
lcall
repz
rcrl
add
insb
imul
mov
push
cwtl
add
cmpb
push
lcall
insl
sub
jle
in
shlb
fcoms
or
ljmp
cld
outsl
jnp
idivl
cld
in
pushf
fiaddl
aam
dec
scas
or
sbb
popf
loope
insb
mov
jmp
xor
popa
cld
aam
in
xchg
sub
rcr
mov
jp
ss
test
popa
cmpsb
lret
cmp
into
mov
decb
loope
js
movsb
push
lods
pop
dec
hlt
cmp
data16
cmpsl
ja
jecxz
cmp
xchg
jle
dec
repnz
icebp
mov
pop
adc
cmp
dec
adc
in
xchg
addr16
lds
test
sub
cmp
sbb
int3
out
xor
mov
mul
mov
outsl
movsl
popa
and
negl
sbb
xchg
or
sub
push
cltd
outsb
add
pusha
clc
cmp
sbb
xchg
mov
clc
sub
inc
jl
clc
lods
jb
or
hlt
mov
jmp
xorb
dec
js
adc
mov
fdivr
out
clc
mov
testl
int3
clc
testl
hlt
sbb
lock
sub
xchg
push
sub
testl
xor
in
out
addl
adc
adc
aaa
and
js
idiv
mov
clc
mov
pusha
mov
testb
test
push
ja
add
mov
xor
divl
test
lock
test
push
mov
ja
pop
add
js
insb
add
rol
outsb
mov
jmp
push
testl
int
repz
imull
mov
scas
imul
nop
jg
jmp
ja
out
inc
ljmp
addb
clc
dec
cmp
lahf
xorb
and
adc
cwtl
jle
in
xor
shrl
mov
adc
clc
jmp
cs
jbe
icebp
aam
mov
sbbb
paddsb
ja
sti
je
cwtl
je
fnsave
jmp
jp
cmc
div
cli
push
add
jmp
push
arpl
pop
cmc
xchg
cmc
orb
add
jne
andl
ljmp
jae
incb
pop
fwait
lock
icebp
sbb
xor
jmp
js
insb
push
idivl
in
sub
imul
jnp
data16
ja
or
je
adc
jbe
pop
jp
ja
xor
adc
out
pop
div
add
jp
out
pop
divl
xchg
insb
idivl
add
inc
out
outsl
outsl
inc
divl
in
xor
lock
adc
adc
aaa
inc
push
pop
pop
jbe
outsb
or
js
stc
je
pop
clc
addb
push
addb
ss
or
roll
in
push
int3
mov
push
lahf
in
pop
mov
pop
mov
test
sarl
xchg
aam
add
mov
into
and
and
push
cld
mov
xchg
aam
sbb
fldl
out
push
or
mov
test
inc
shll
lods
notb
xchg
jns
popa
add
mov
jmp
jo
shrl
lods
adc
cmp
es
mov
cmp
std
xor
mov
rep
push
jb
popa
pop
fsubr
cmp
jne,pt
test
inc
cmp
or
lods
jmp
sbb
fstl
pop
test
inc
and
das
xchg
xor
xchg
fldt
rolb
in
xor
shll
fwait
subps
inc
rcll
fadds
fidivs
and
xrelease
pop
jno
loop
jno
cmpl
fidivrs
pop
pop
push
test
sbbb
jmp
mov
pop
cmp
xor
lock
int
mov
daa
rorb
ret
xchg
add
jl
xchg
notl
mov
push
std
dec
jb
rolb
into
arpl
adc
and
test
sbb
dec
ss
sbb
in
fimuls
push
or
lds
pop
idivb
ror
in
lods
mov
mov
fs
in
mov
in
jmp
jmp
fwait
ja
mov
cwtl
cld
pop
adc
xchg
xchg
addb
jns
subb
cld
ret
xlat
adc
rcl
or
lret
inc
daa
sbb
cli
mov
pop
cmp
adc
pop
stos
push
inc
pop
pop
cltd
push
dec
sbb
jno
ja
aas
jo
xlat
xlat
pushf
bound
adc
dec
pushfw
mov
adc
cld
mov
clc
stc
andb
dec
loop
lahf
in
fwait
add
nop
pop
and
lcall
in
nop
cmp
jl
sbb
loop
dec
movsl
and
js
or
clc
xor
pop
mov
jnp
lret
add
addl
add
pop
pop
ljmp
fdivrs
ret
insl
insl
in
ljmp
xchg
bswap
push
cmc
fiaddl
push
dec
and
clc
arpl
jmp
lds
mov
lret
sbb
dec
fstpl
jl
adc
sbb
into
push
clc
jle
add
xor
pop
div
mull
testl
div
mov
negl
or
fwait
shl
inc
clc
push
sbb
hlt
in
adc
and
clc
clc
cmp
aaa
mov
jg
clc
adc
sub
inc
negb
jo
repnz
mull
mov
lcall
daa
div
aad
clc
in
pop
jmp
out
stc
in
ljmp
push
clc
jno
or
insl
cmp
adc
test
cwtl
adc
pop
xchg
psadbw
pop
addl
das
xchg
pop
mov
adc
ret
push
mov
jb
adc
out
lock
int3
outsb
roll
subl
ret
add
ret
clc
hlt
lock
jl
test
insl
jo
push
pop
js
ja
ficoms
pop
or
adc
jb
adc
js
insb
or
imul
insb
adc
adc
enter
imul
lahf
sbb
divl
add
in
sub
jb
div
jns
add
push
lock
jecxz
jne
test
mov
mov
es
cmc
jl
xchg
xor
je
lods
out
call
in
ss
insb
orl
ja
imul
add
std
adc
jbe
nop
repz
xchg
hlt
idiv
js
or
js
lock
js
cmc
jmp
ljmp
test
lods
incl
cmp
inc
jle
jmp
xorl
orb
mov
xor
imul
jmp
push
test
pop
jae
imul
adc
mov
lock
testl
js
jmp
jb
mov
iret
nop
pop
xchg
xlat
adc
xor
push
cmc
mov
in
lcall
push
xlat
cmp
pop
jae
xlat
aas
fstpl
mov
repnz
sar
jmp
fimuls
imul
dec
insb
mov
les
cld
scas
jp
jae
adc
dec
incl
jle
ret
lods
jae
cmp
and
lret
out
cmc
cmpsb
push
sbb
jne
into
in
out
jg
inc
mov
sbb
sbb
lret
push
jnp
in
cld
test
data16
sbb
mov
stos
push
scas
sbb
popa
loope
push
shl
inc
xchg
mov
cwtl
xchg
jb
imul
ja
stos
push
testl
cmp
clc
sbb
sti
shll
mov
pop
dec
mov
push
xchg
js
sub
cwtl
enter
jne
ds
pop
sbb
sbb
mov
in
add
shlb
cld
jl
out
mov
insl
imul
cmpsl
pushf
in
fstps
popa
mov
push
sbb
inc
inc
add
xor
cld
xor
adc
sbb
jle
or
cmp
cs
ds
lcall
and
insb
icebp
into
lcall
jl
sbb
jmp
pop
lret
je
fwait
cmc
dec
mov
push
or
push
negb
sbb
dec
mov
add
nop
ja
sbb
lods
adc
cli
xor
test
sbb
stos
rorb
lea
inc
add
pop
and
dec
les
insl
dec
insb
out
adc
in
push
pinsrw
xor
push
iret
mov
jmp
in
call
scas
adc
cmp
cmp
sbb
scas
clc
xchg
cld
aaa
imul
stc
movb
repz
lcall
int
mov
dec
cmp
scas
insl
fmuls
jbe
push
sub
out
test
mov
xchg
pop
pop
cmp
iret
mov
je
and
dec
xor
jp
out
adc
das
es
ljmp
lret
and
in
lds
lret
call
or
mov
pop
mov
push
sti
js
cwtl
in
push
push
xor
xorl
mov
rorb
xor
add
pushf
cld
cmp
shrl
cmp
add
je
cwtl
mov
lds
orl
ds
pop
idivb
cli
mov
jmp
in
pop
push
lcall
sub
cmp
in
cmpsb
or
pop
cmp
aam
cmp
sahf
mov
cmpsl
js
hlt
aas
or
pop
adc
jns
les
int3
out
add
xchg
lods
lret
inc
stc
in
xor
or
and
test
add
push
add
icebp
dec
sbb
es
xlat
movsb
sub
adc
mov
pop
sub
dec
js
inc
sarb
lds
and
dec
iret
in
fsubp
jo
lcall
xchg
out
mov
xor
call
aaa
sub
and
pop
int
vcvttss2si
idiv
enter
adc
pusha
cltd
adc
sti
mov
sbb
movsl
push
out
in
vdivps
jecxz
jecxz
in
pop
xor
out
push
subb
pcmpeqd
or
popa
mov
sahf
movsl
or
push
and
pop
outsb
in
mov
lods
add
out
add
fwait
inc
xchg
xchg
test
cli
popa
rclb
dec
insl
nop
pushf
idivl
or
mov
pop
andb
push
icebp
pusha
shrb
xor
mov
or
ret
or
repz
jmp
mov
jecxz
shr
in
sbb
cmc
mov
popa
cli
and
fildll
push
add
cmp
es
aas
or
dec
mov
movsl
insb
adc
mov
ss
ret
pop
test
lahf
push
sbb
push
jae
inc
adc
js
lcall
cmpsb
pushf
mov
adc
fwait
scas
jmp
and
add
mov
push
jne
aam
inc
jl
nop
mov
add
push
sbb
in
hlt
adc
push
xchg
cld
jo
sub
stc
in
int3
pusha
das
call
sub
sub
hlt
cmp
pop
lock
test
mov
std
pushf
int3
rcrb
sahf
aaa
push
jmp
and
les
cmp
gs
pop
negb
push
and
stc
pop
push
test
in
lcall
testl
mov
lods
out
mov
inc
pop
or
pop
sub
xchg
orl
mov
adc
clc
or
pop
popf
cli
mov
xor
inc
mov
lds
push
shlb
fisubl
pop
inc
mov
out
inc
add
mov
in
mov
pop
push
dec
mov
sbb
adc
sbb
test
mov
dec
adc
mov
mov
fcomip
inc
pusha
add
scas
lcall
imulb
adc
loopne
stos
or
inc
inc
push
cld
aad
cmp
xchg
test
adc
xchg
or
push
add
add
jne
pop
lods
push
outsb
insl
push
das
xorl
add
xchg
outsb
cmc
ds
xchg
popf
aam
into
hlt
movsl
out
mov
add
dec
loope
adc
mov
pop
xchg
js
insb
pop
out
xchg
fstp
cltd
cmp
sbb
lea
stos
lea
cli
data16
out
lds
pop
rcll
push
or
jae
push
pop
int3
mov
clc
jae
jge
jae
mov
lea
push
mov
and
adc
leave
es
sub
outsb
xor
lods
lods
jl
inc
int
mov
xlat
dec
inc
aam
xlat
mov
test
leave
sub
inc
add
pop
cmp
clc
dec
lret
mov
adc
clc
clc
clc
xor
ja
stos
clc
inc
imul
cmc
daa
movsl
cmp
pop
je
idiv
addr16
testl
negb
jno
lret
push
js
mov
pop
clc
sti
in
mov
js
fsts
cmp
adc
inc
dec
testl
ret
arpl
icebp
neg
scas
sub
inc
push
testb
dec
test
jo
mov
outsb
ja
mov
lea
incl
xchg
insb
js
jns
sbb
cmp
jbe
jl
pop
jl
jns
clc
ss
imul
xchg
xchg
data16
outsb
ljmp
mov
clc
mov
pushf
jle
jne
sbb
imul
lock
aaa
xor
outsb
notb
scas
and
popl
adc
stc
adc
lock
cmpl
add
clc
inc
jge
insb
or
aas
clc
push
pop
daa
addb
loop
outsl
negl
cs
test
xchg
dec
push
push
cmpsb
out
cs
mov
ljmp
adc
jo
je
adc
mov
out
test
aaa
out
add
pop
push
xorl
add
pushf
xor
insb
cmp
xor
jl
insb
in
imull
test
jb
test
icebp
inc
clc
inc
jne
out
div
je
out
lock
pop
push
addl
in
inc
js
imul
xchg
add
pop
ljmp
test
loop
imul
ds
jnp
mov
cs
adc
add
hlt
mov
push
outsl
cmc
addl
add
jne
sti
push
jle
std
sti
lock
add
or
adc
xchg
scas
dec
addr16
cld
fisubrl
lds
das
ja
pop
insb
in
bound
pop
jge
fistl
cmc
sub
in
stc
adc
cld
and
aam
fists
imul
pop
jmp
inc
fistpll
call
jp
icebp
xlat
mov
imul
out
stos
pop
and
mov
mull
shll
scas
int
jo
fcomps
xlat
movsl
ficomps
mov
and
lds
mov
hlt
cmp
inc
lock
add
ja
movsl
sbb
pop
test
imul
or
push
sbb
rolb
pop
scas
add
jmp
arpl
sarl
lcall
loop
mov
adc
sub
xor
ffreep
dec
std
invd
fdiv
cld
push
and
jbe
and
pop
cwtl
shr
xor
mov
mov
into
pop
push
outsb
sbb
adc
sub
sbb
int3
push
pushl
fchs
cwtl
pop
sbb
or
call
mov
ljmp
jnp
test
cmp
scas
dec
cmp
mov
mov
jae
mov
sbb
and
insl
dec
aas
mov
repnz
int
shll
aas
lock
or
and
movsb
ds
pop
es
jbe
sar
loopne
test
jmp
jne,pt
or
aas
clc
jl
jge
lods
rolb
lahf
cli
or
in
fs
pop
shll
push
mov
outsb
rorb
dec
mov
andl
lret
call
lods
fnstcw
fdivrs
jo
movsl
into
xor
cmp
xchg
sbb
xor
sarl
jnp
xorb
push
cltd
jno
xor
and
cld
aam
pop
jge
mov
jp
jmp
in
js
ss
call
shrb
mov
lock
cmpsl
cmp
push
dec
outsb
jns
int
rcr
hlt
dec
xor
loope
lcall
sbb
into
fcoml
xor
in
dec
leave
les
cmp
add
in
xor
sbb
roll
mov
cmp
testl
outsl
ss
es
adc
mov
roll
aad
iret
push
adc
push
adc
mov
add
xchg
dec
cs
cmc
in
in
mov
sub
outsb
sub
mov
gs
add
jmp
in
mov
fs
test
in
inc
adc
lds
lcall
cs
int3
fcomi
ret
out
cmp
and
fidivrs
push
mov
pop
repz
mov
into
jno
mov
test
fcomps
fnstenv
mov
jle
add
inc
roll
popa
rorl
andl
pop
jbe
add
subb
xchg
mov
mov
mov
repnz
cld
cs
pop
std
xor
xchg
daa
insb
sbb
jne
jnp
imul
xchg
xchg
add
nop
and
in
std
cmp
mov
pusha
sub
in
mov
popa
xor
and
and
push
shl
or
movsl
ss
andb
jbe
mov
inc
xchg
cmp
sbb
outsb
test
inc
sbb
sub
mov
push
test
out
cld
and
xchg
in
scas
lret
int3
xor
mov
in
orl
iret
cmpsb
scas
in
sti
jmp
inc
ljmp
jae
xor
aas
push
pop
leave
mov
jg
repz
jle
add
xchg
pop
or
mov
test
jne
in
add
jae
daa
bound
mov
outsb
pop
jne
into
and
test
in
in
sbb
cld
lret
adc
mov
adc
jmp
cs
sbb
jnp
jmp
cld
test
call
or
cld
inc
das
in
mov
sub
pop
aam
or
addr16
mov
repnz
add
loop
js
pop
pop
mov
xchg
test
mov
negl
cmp
leave
enter
add
add
shrl
and
ds
add
data16
mov
jae
loop
mov
fdivrs
adc
scas
les
scas
cmpsl
pcmpeqb
test
sti
inc
pop
inc
sbb
jp
lcall
decb
sub
xchg
sbb
cmp
lret
mov
cvtpi2ps
sub
rcrl
out
sbb
pop
ficoms
fwait
mov
ds
cmpl
cltd
daa
scas
lea
jg
jb
inc
inc
mov
xor
add
inc
rorb
ds
lea
inc
pusha
inc
flds
outsl
popf
icebp
and
div
xchg
int
add
lcall
rcll
mov
sub
cwtl
in
fimull
pop
pop
mov
xchg
pop
or
xchg
jbe
mov
sub
add
inc
xor
fisubrs
push
xchg
je
add
addr16
mulb
mov
test
push
push
xor
pop
addr16
ror
sub
pop
sbb
test
in
aam
lahf
scas
mov
in
repz
iret
inc
pop
mov
lret
cld
mov
jnp
xor
int
mov
cmc
cld
cmp
inc
pop
bound
sbb
push
data16
mov
cwtl
mov
rorl
hlt
icebp
out
outsl
decl
scas
push
push
inc
sbb
xlat
or
mov
mov
in
dec
in
movsl
dec
ss
sub
aas
jno
sbb
in
inc
jecxz
pop
dec
cmp
adc
ss
sub
into
and
cwtl
sub
mov
clc
cld
pop
movsl
loope
in
out
push
adc
je
or
test
int
mov
jns
push
sbb
in
je
test
or
mov
jnp
pop
cmpb
push
test
cmc
mov
pusha
dec
popf
xchg
and
popa
dec
xor
or
div
shl
jnp
lcall
inc
mov
push
and
mov
xchg
mov
sbb
test
mov
mov
add
std
daa
and
jecxz
inc
imul
in
sbb
sub
movsl
pop
fdivl
outsl
ds
es
cli
dec
inc
stc
mulb
les
in
loopne
scas
mov
movb
xor
or
pop
jno
hlt
xlat
inc
sbb
add
addb
mov
xor
lret
les
les
jns
pusha
push
outsb
pop
fisubl
movsl
jmp
cmpsl
mov
jnp
insl
icebp
xchg
dec
cld
mov
in
fdivl
insb
xchg
fsubs
cmp
lock
sbb
xchg
add
pop
xor
sbb
outsl
movsb
cmp
insl
jmp
lea
pusha
in
cmp
mov
scas
adc
cmp
mov
and
jg
and
sbb
sbb
push
in
std
ret
add
sbb
xor
push
jmp
test
stc
cmp
orb
adc
mov
insl
push
add
fnstsw
pusha
pop
cltd
pop
sub
mov
cld
movsl
outsb
stos
test
xchg
loop
xchg
push
addr16
ja
pop
cwtl
enter
testl
cmpsb
jp
in
push
sbb
loope
out
xchg
inc
jo
jne
xchg
mov
lcall
clc
iret
std
movsl
ret
sub
xchg
inc
sbb
lret
inc
int
jge
push
mov
dec
shll
mov
xor
cli
shr
lods
push
out
divb
outsb
cmc
aaa
scas
push
adc
dec
scas
cld
mov
data16
inc
jnp
fwait
push
data16
call
mov
jbe
pop
sbb
repz
jp
jo
mov
push
xlat
call
lret
out
push
cmp
cmp
sbb
pop
clc
sub
jno
adc
cld
js
popa
and
push
sub
mov
add
in
jmp
jmp
jo
clc
cmp
ja
mov
dec
xchg
pop
add
mov
fcmovnb
mov
popa
out
cmp
sbb
cmpsb
add
cmp
or
jmp
ds
jns
loopne
xlat
dec
sub
jl
cmc
scas
imul
leave
dec
ficompl
jne
mov
pop
ret
hlt
push
daa
and
imul
flds
dec
das
out
movsb
insb
clc
or
ja
inc
sbb
mov
dec
and
add
mov
push
xchg
js
cld
neg
mov
lds
test
jg
jmp
out
mov
xor
xlat
fs
int
cmp
je
test
or
fadds
ss
insb
leave
cmp
mov
test
sti
arpl
pop
test
test
push
push
mov
js
jbe
jle
push
out
hlt
in
fnstenv
push
cwtl
push
push
fbstp
repnz
push
lds
std
pop
sbb
dec
jle
push
or
mov
xchg
imul
scas
or
jp
push
sbb
std
jb
inc
aaa
mov
xchg
inc
jbe
mov
mov
ret
fsts
aas
js
daa
mov
das
mov
dec
ficoml
xor
mov
jno
call
icebp
into
test
pusha
cld
mov
in
fs
xchg
lret
xlat
jne
sbb
and
xor
clc
das
sub
clc
pusha
cmc
cltd
outsl
xchg
adc
pushf
sbb
push
jae
clc
int
clc
faddp
idiv
adc
mov
pop
mov
xchg
outsb
hlt
out
cs
icebp
mov
aaa
xor
cmc
jmp
dec
xchg
adc
sbb
icebp
sbb
loopne
sbb
dec
inc
repz
repnz
and
jbe
and
imul
and
push
jb
aad
jne
test
ja,pn
in
cli
xchg
imul
nop
clc
cs
cmc
xchg
clc
rcll
adc
inc
sarl
xchg
lret
div
push
jmp
movl
add
icebp
mov
jmp
push
and
mov
hlt
xchg
inc
shl
mov
inc
jbe
je
mov
dec
int3
mov
adc
or
jp
icebp
mov
adc
lock
test
aad
add
add
testl
icebp
ss
insb
jbe
addb
mov
call
icebp
js
insb
adcb
add
ss
or
jmp
xchg
push
add
call
icebp
add
jge
sarb
sbb
jmp
pop
adc
add
and
je
icebp
cs
in
sti
jle
loope
outsl
js
cmc
dec
clc
jp
add
mov
adc
clc
mov
pop
ss
test
das
add
mov
imul
xor
sti
je
je
lahf
jmp
or
pop
or
icebp
push
repnz
inc
xchg
add
insb
inc
add
ljmp
mov
repz
xchg
jp
repnz
ljmp
imul
xorl
jmp
adc
pop
insl
jo
xchg
hlt
push
add
inc
or
repz
idiv
xchg
inc
cld
xor
repnz
xor
or
std
aas
jne
xchg
mov
mov
insl
and
jae
andb
icebp
hlt
testl
cmp
mov
sbb
xlat
dec
inc
and
test
std
mulb
pop
clc
movsb
into
xor
movsl
ds
lcall
iret
in
sub
hlt
lds
out
cli
add
cld
jl
sbb
mov
add
add
mov
sub
sbb
add
out
cmpsb
in
inc
paddsw
cmp
daa
fidivl
lcall
out
test
imul
cs
pop
xor
sbb
into
mov
mov
push
mov
jmp
mov
push
das
orl
xlat
or
movsb
mov
cmc
es
mov
dec
imul
test
ffreep
shlb
mov
psraw
adc
cld
and
in
stc
xor
xchg
test
sub
jbe
pop
loope
js
inc
mov
loop
pop
ficompl
sub
cmp
and
test
cld
push
ja
test
sub
rorl
pop
push
outsb
shl
sti
xchg
mov
aam
mov
jp
icebp
mov
sbb
movsb
cmp
xchg
mov
and
bound
sbb
loope
pmuludq
jl
mov
sti
lcall
mov
cltd
psubq
inc
cld
pushf
cmpsl
mov
pop
je
cwtl
icebp
pop
sbb
pop
les
faddp
add
mov
fistps
clc
adc
jge
shrb
sti
aaa
cld
add
fmull
fnstsw
push
roll
pop
outsb
mov
mov
ret
push
push
add
les
mov
test
cmp
dec
repz
ret
lahf
sbb
cmc
je
ss
nop
sbb
movsl
cmp
cmc
rorb
dec
daa
dec
push
clc
lock
in
sub
adc
dec
jl
sbb
or
jl
test
push
push
mov
push
inc
inc
and
scas
adc
fdivrs
js
and
movsb
cwtl
xchg
pop
xchg
loopne
pop
cmp
andb
fsubrp
sbb
fisubs
dec
cmpl
inc
mov
lock
or
ficomps
div
cld
in
mov
xor
jge
insb
out
mov
jo
nop
sub
cmpsb
sbb
add
sub
fstl
lods
lock
repnz
fidivrl
cld
pop
push
dec
push
sbb
mov
cmpsl
int3
adc
icebp
mov
ret
scas
xor
fstps
jno
push
cli
fwait
mov
insl
push
mov
cmp
rcrb
dec
stc
pusha
in
cmpsl
xchg
rcrl
mov
or
adc
dec
loop
sahf
into
push
mov
and
arpl
cmp
insb
mov
cmp
mov
adc
add
jb
xchg
xchg
inc
jb
pop
mov
xlat
mov
fisttpll
popf
mov
lods
dec
call
rclb
sbb
xchg
fiadds
imul
insl
mov
iret
dec
adc
je
mov
inc
jno
sbb
fucompp
inc
mov
jb
jno
in
arpl
test
add
mov
mov
int
sbbl
sub
test
cmpsl
popa
loopne
pop
fst
sbb
fdivrs
pop
repz
stos
xorb
mov
adc
hlt
xor
mov
aas
sbb
bound
loope
cli
cwtl
pushf
mov
imul
jg
adc
push
jno
je
repnz
scas
fs
xchg
lods
out
in
mov
push
sub
leave
mov
jne
adc
pop
mov
sbb
jbe
mov
out
inc
hlt
testl
fucomip
leave
push
ret
add
jge
rcl
wbinvd
sbb
push
test
cli
sub
cmc
sbb
jecxz
inc
jmp
fnstsw
leave
cld
ret
arpl
insl
dec
mov
in
mov
mov
inc
inc
lock
adc
xchg
inc
fisttpl
mov
dec
sbb
mov
lds
scas
ljmp
movsl
aaa
or
inc
lock
jo
cs
and
jl
mov
and
sti
ret
into
fdivrp
inc
mov
sbb
stc
cmp
ja
adc
repnz
cwtl
push
mov
mov
mov
lcall
fsubs
jmp
push
nop
jae
push
fldt
ror
shl
xchg
testl
out
xchg
cld
aam
mov
mov
sub
cmp
ja
adc
xlat
enter
mov
dec
in
add
mov
sub
out
sub
sbb
pop
xchg
das
or
mov
mov
add
pop
and
lods
mov
cmp
add
loopne
dec
mov
iret
push
outsb
pop
and
scas
push
fiaddl
mov
mov
sbb
dec
stos
push
push
or
lods
sti
pop
mov
movaps
scas
sbb
enter
rorb
in
imul
in
out
bound
push
xchg
fbld
sub
test
fldenv
push
or
popf
and
test
or
add
push
push
jns
lds
dec
aam
fdivs
lock
arpl
pop
outsl
push
mov
out
dec
dec
lret
inc
mov
addr16
jp
sub
cmp
xor
cmpb
fcomps
repz
cmp
pushf
pop
mov
sbb
int
pop
xchg
fdivrs
push
pusha
pop
jo
pop
in
sub
jmp
pop
rolb
stos
push
push
pop
mov
je
sbb
xchg
in
add
out
or
pop
roll
popf
cwtl
aam
and
repz
mov
std
ret
in
pop
pop
add
dec
or
lret
jle
sub
loope
jo
cmc
mov
daa
jle
adc
mov
sbb
or
xchg
ds
das
mov
cmpsb
or
mov
pop
jp
test
sbb
divb
and
test
cmp
sahf
test
movsl
imul
sbb
repz
movl
add
cmp
aam
inc
mov
pop
int
lret
ret
in
repnz
ss
dec
sbb
sarb
cs
mov
or
mov
push
aam
mov
inc
test
mov
pop
mov
daa
pusha
mov
int
rcll
xor
xor
lods
orb
mov
mov
jb
cld
aam
inc
sahf
testl
sub
mov
mov
insb
jb
das
mov
push
insb
sbb
nop
dec
or
fsubs
push
mull
dec
jge
add
push
or
xor
aam
ds
jae
lcall
pushf
push
lret
jo
mov
in
adc
mov
rorb
mov
sbb
cs
les
cwtl
in
aas
filds
imul
ds
inc
adc
adc
jnp
inc
mov
mov
cmp
push
mov
in
das
adc
addb
rolb
dec
in
cwtl
in
jmp
dec
ret
sahf
cmp
mov
or
out
nop
cmc
pushl
push
ficomps
mov
xor
das
jae
test
roll
adc
sub
push
push
mov
pop
dec
cld
cmc
push
mov
pop
sahf
and
or
cmpsb
sub
fdivr
xchg
sub
test
inc
mov
cmp
mov
test
insl
movsl
test
push
cmp
jbe
mov
mov
in
jmp
sbb
stc
inc
xchg
cld
call
pushf
loopne
inc
lods
adc
outsl
lea
aam
cli
jns
fucomip
lds
ret
xor
pop
mov
shl
ss
repz
push
dec
pop
popl
loope
xchg
movsl
jle
cmp
movsb
mov
pusha
lea
scas
insl
sub
mov
pushf
call
sbb
mov
ret
icebp
add
and
mov
lahf
push
jno
fisttps
cld
adc
test
inc
test
jle
movsb
jl
mov
subb
cmp
inc
iret
in
lcall
mov
sbb
out
repz
dec
jo
jmp
fdivrl
xchg
adc
push
mov
mov
icebp
jb
hlt
pop
inc
push
mov
movsb
inc
fimull
inc
enter
movb
jo
xchg
push
ja
mov
addr16
faddl
jo
pop
lcall
das
outsl
and
xchg
scas
push
stc
cmp
fs
pusha
push
sub
std
and
jl
loop
test
subl
cld
adc
mov
lcall
sub
je
sbb
inc
xorl
sub
xchg
lods
lcall
xchg
pop
sub
fdiv
enter
jmp
sbb
test
add
cwtl
out
cmp
testl
push
mov
in
jl
dec
lods
ja
rcrl
mov
pop
jno
es
js
ljmp
xchg
int
mov
addr16
xor
mov
sahf
mov
push
push
icebp
sbb
mov
dec
ja
push
and
cld
outsl
xchg
dec
mov
cwtl
pop
jecxz
push
test
cld
mov
repnz
lods
into
std
ds
cs
lea
out
mov
lret
out
adc
inc
movsl
pop
push
and
mov
les
jno
test
ret
test
xor
cmp
push
in
outsl
ss
sbb
pop
push
push
mov
sarb
in
or
ret
cmpb
mov
and
sub
mov
into
jl
jmp
ss
xchg
push
mov
js
cli
sbb
mov
ljmp
dec
or
mov
test
aaa
das
outsb
sbb
or
or
scas
mov
call
and
add
in
insb
out
cmp
sub
dec
jnp
div
push
or
test
pop
cmp
or
ss
out
ret
sahf
enter
lods
cli
das
add
aas
mov
add
inc
mov
mov
imulb
idivb
shlb
cli
jae
sahf
xchg
adc
sbbl
and
jbe
mov
cmp
arpl
cmpsl
and
xchg
test
mov
cmpsl
jb
push
or
and
lcall
cld
insb
inc
and
pop
push
in
jl
outsl
mov
sub
into
hlt
pop
mov
adc
jge
cmc
or
add
cltd
ja
fisubs
mov
stos
add
cli
lock
dec
xchg
add
movsl
or
lock
pop
icebp
in
aad
inc
mov
inc
sbb
inc
hlt
fbstp
js
sti
dec
call
push
int
jnp
mov
ss
and
jae
push
mov
das
les
enter
test
loope
mov
jmp
dec
lcall
jns
out
adc
sahf
cmp
cld
jb
cltd
stos
popl
aam
flds
aam
pusha
filds
bound
js
inc
push
fcoml
lock
enter
xor
in
loopne
mov
mov
fisubrs
fmul
incb
lcall
sub
sub
shll
cld
gs
push
xlat
cmc
jbe
pusha
and
cmp
inc
sbb
xchg
cmp
jo
cmc
shl
cmpsb
pop
popw
xchg
adc
lods
push
xchg
xchg
loop
jmp
imul
sbb
add
mov
mov
pop
inc
xor
mov
and
out
loope
clc
sti
mov
clc
and
lock
jo
sub
and
pop
repnz
cld
mov
stos
movsl
inc
mov
icebp
movsb
jmp
dec
cmp
psrld
dec
jo
lock
push
sub
jo
fwait
sub
add
cld
std
adc
bound
mov
aaa
add
enter
nop
int
daa
in
sbb
push
cld
cmp
cmp
popf
add
add
ret
mov
lret
dec
sbb
cld
fildl
dec
outsb
inc
mov
mov
das
pop
insb
sbb
and
cmp
mov
popf
nop
xchg
ja
outsl
add
mov
jne
test
sub
cld
pushf
sub
fstl
mov
scas
cmc
push
movsb
mov
jne
mov
inc
push
dec
sti
cmp
sbb
inc
fwait
and
cmp
int
data16
jo
add
in
adc
pusha
negb
or
lcall
cmpsb
sbb
ret
call
mov
out
inc
or
or
outsb
push
pop
cld
loop
xchg
je
std
jno
aam
into
inc
push
icebp
jmp
cmc
xlat
sbb
divb
dec
lret
sbb
cld
scas
das
push
adc
cltd
mov
inc
pushf
mov
xor
mov
aam
sbb
xchg
adc
jp
or
nop
pop
aam
fidivs
repnz
push
push
lcall
cmpsb
or
inc
pop
sbb
mov
aaa
rcl
dec
cmp
xor
jge
push
pushf
and
adc
lcall
outsl
pop
and
add
or
insl
cmp
mov
adc
add
repnz
iret
lcall
test
pop
loope
sbb
lret
and
mov
or
xchg
jb
cmc
mov
cld
fimuls
nop
aam
sub
test
pop
pop
imul
int3
push
jecxz
mov
mov
icebp
add
outsl
or
sub
or
sbb
mov
sbb
push
scas
mov
lret
repnz
out
lret
and
add
sbb
test
sbb
subl
and
push
ds
xor
xchg
aas
lahf
mov
and
xchg
outsb
insl
ret
ss
dec
jnp
gs
inc
adc
jmp
xor
or
lds
cli
add
and
ss
fsubs
adc
fstpt
pop
out
inc
add
imulb
enter
notb
pop
xchg
push
negl
jle
push
sbb
negb
ja
cmc
lret
adc
enter
ficompl
into
cs
rolb
out
push
int3
outsb
jae
sbb
hlt
jae
dec
xchg
xor
in
daa
movsl
sub
add
mov
adc
adc
call
out
add
mov
aaa
mov
push
mov
fwait
cltd
daa
pop
pop
mov
lahf
lea
out
sbb
xchg
ret
fldt
pushf
ljmp
add
clc
jnp
cmpsb
mov
cld
lea
fadd
loope
daa
pop
ror
dec
in
pop
int
fwait
daa
addr16
mov
fisttpl
cli
dec
add
pop
fidivrs
add
insb
xchg
test
jle
aaa
jbe
adc
test
fisubs
cli
adc
sub
ja
push
fcomip
and
jns
fnsave
jg
movsb
mov
ss
imul
xor
adcb
sbb
inc
fldt
popf
sub
jmp
bound
adc
roll
pop
add
repnz
pushf
movsb
adc
adc
push
jmp
add
add
mov
andb
mov
or
shll
das
jmp
stos
jno
push
in
into
cmp
cmc
push
cli
and
mov
scas
leave
cld
mov
sbb
scas
in
jnp
inc
push
repz
stc
jno,pt
ss
mov
dec
jno
addr16
negl
lea
shlb
je
sbb
outsb
in
lahf
jno
out
adc
sub
inc
cli
cmp
aaa
test
sbb
idivl
mov
notb
inc
xor
lahf
outsb
stos
ret
sbb
sti
lret
or
push
jge
fcmovnbe
aam
mov
shr
cmp
sti
push
lock
cltd
or
idivw
ror
movsb
push
lock
lret
ljmp
lods
ja
sbb
and
lret
shr
inc
call
das
jbe
mov
mov
inc
adc
rorl
dec
add
xchg
xchg
pop
outsb
cmp
stos
sbb
push
push
test
inc
xchg
cmpxchg
sbb
fldl
lea
pop
fisttpl
cltd
xchg
adc
xchg
cmp
iret
inc
repz
or
sbb
rolb
lcall
or
cmp
out
or
inc
inc
sub
push
popa
sub
jle
ds
and
dec
sbb
repz
add
pop
push
mov
and
outsl
and
rclb
cld
js
mov
mov
xchg
inc
push
bound
jmp
pcmpgtd
shlb
and
cli
sbb
cmp
sbb
xchg
bnd
mov
leave
sub
mov
shl
dec
cmp
in
ss
out
or
inc
inc
mov
test
xchg
loop
lea
lret
imul
push
add
mov
in
jge
in
rclb
push
push
or
incb
add
movb
jp
add
pop
out
push
fildl
je
les
mov
push
jo
jns
add
roll
pushf
fbstp
push
mov
push
loope
adc
xor
repnz
mov
sbb
sbb
jb
ljmp
adc
add
sbb
bound
mov
les
mov
sahf
ss
popf
out
xchg
es
cltd
shl
lea
pop
pop
pop
loop
lret
sub
and
es
cmp
jg
sub
clc
sbb
add
lods
add
lods
adc
hlt
jmp
pop
mov
ljmp
test
jmp
sbb
sbb
lcall
lahf
js
sbb
jns
sbbb
das
mov
cmpb
adc
inc
add
sbb
sub
lods
xor
push
mov
sbb
pop
stos
add
jnp
in
je
inc
sbb
sub
dec
jmp
push
enter
movsb
push
xor
mov
repnz
mov
iret
mov
jnp
cmp
daa
cli
int
dec
mov
notl
mull
inc
subb
aam
aam
add
subb
xor
sbb
and
adc
testb
ds
cld
pop
shll
xor
push
cmp
out
outsl
cmp
mov
mov
dec
mulb
out
adc
and
stos
or
push
fincstp
stos
adc
int
sub
loope
sbb
jb
cmp
out
sub
in
mov
daa
pusha
int
jmp
iret
cltd
sbbl
in
or
movsb
int
call
sub
fldcw
xchg
cmp
lods
adc
in
cltd
mov
jae
jnp
sarl
inc
mov
inc
imul
adc
insb
in
fucomp
cmp
mov
loop
dec
mov
xchg
pop
enter
scas
or
cwtl
jnp
mov
cwtl
mov
adc
adc
out
cwtl
in
adc
cmp
andb
loop
push
stos
aaa
jne
lods
inc
nop
adc
jmp
dec
addl
inc
cmpsb
mov
aaa
icebp
cmp
aas
je
push
in
inc
lods
adc
mov
arpl
popa
in
outsl
test
rcrb
hlt
icebp
jnp
jmp
push
lcall
fcmovu
push
gs
repnz
jnp
fcmovnbe
call
hlt
clc
arpl
add
shlb
inc
insl
outsl
cmp
mov
xchg
negb
fisubs
or
mov
xchg
stc
cld
icebp
lret
add
add
pusha
inc
add
xor
pop
sbb
dec
and
in
pop
shll
jecxz
popa
xchg
test
pop
ds
arpl
icebp
orb
and
in
das
push
pusha
mov
push
popf
push
or
rolb
push
sbb
movsb
lock
push
call
shlb
cmova
mulb
pop
xor
jp
sti
mov
adc
aas
jns
fsub
popa
sti
xchg
xchg
cld
std
mov
jmp
push
dec
in
xlat
sahf
pop
mov
inc
inc
xor
aas
call
jmp
mov
jnp
add
or
pop
xchg
clc
ds
mov
daa
and
sbb
frstor
inc
aam
rorb
in
mov
jae
adc
icebp
cmp
push
fimull
xchg
clc
push
sbb
mov
orb
dec
das
xchg
sarb
xor
ficoml
sbb
dec
and
int
popa
adc
cld
js
inc
sbb
cli
xchg
mov
aas
cmc
cld
insl
xchg
inc
popf
cmc
mov
int3
insb
outsl
jl
sbb
cli
pop
jns
movsb
dec
mov
pop
mov
pop
jno
jae,pn
in
mov
jmp
dec
pop
sbb
cwtl
or
nop
mov
inc
movsb
adcb
in
jg
jno
ja
jmp
sbb
inc
stc
loop
push
aam
sbb
add
dec
jbe
mov
mov
mov
arpl
push
lcall
cli
dec
adc
xchg
repz
icebp
imul
dec
pop
ds
cmp
pop
cmp
fucomip
mov
in
cmp
mov
sbb
adc
mov
sub
mov
cwtl
scas
and
pop
jb
and
icebp
in
xor
imul
jmp
in
test
aam
rol
ret
insb
daa
ss
jmp
fwait
sub
lock
sbb
mov
lcall
sub
mov
cmp
mov
lret
cld
out
bndstx
lods
mov
and
shl
sub
adc
sbbl
mov
int
in
lods
mov
fxch
xor
std
cwtl
in
clc
ret
or
rorb
sbb
mov
cld
iret
fdivrs
or
xchg
inc
mov
roll
fcomps
mov
out
pop
pop
cwtl
cmpsl
ja
sub
lds
test
mov
popa
sbb
xchg
jl
js
jb
inc
loopne
popf
dec
pop
dec
pusha
or
mov
inc
mov
or
lock
ss
in
out
int
rcrl
inc
mov
movsb
inc
arpl
mov
std
cmp
cmpsl
sbb
mov
mov
and
roll
mov
and
push
inc
lock
test
clc
popa
scas
add
cmp
js
cld
out
mov
hlt
in
test
lea
daa
insb
jg
sti
sbb
mov
ds
add
mov
sarl
sbbb
xchg
push
mov
insl
outsb
inc
inc
xor
cmp
cmpl
arpl
outsl
mov
enter
dec
loop
out
sahf
shrl
popf
loope
jl
pop
mov
sub
call
jnp
cmc
insl
push
iret
push
xor
cmp
mov
ror
mov
jle
and
loopne
lods
mov
mov
lret
sbb
lock
out
cmp
xor
xchg
sbb
lock
in
mov
or
repnz
pop
xorb
ret
cld
aas
or
lahf
or
enter
cwtl
sbb
ja
loopnew
rcrl
pop
and
cmp
push
xchg
sti
cli
cld
hlt
jg
jae
cmpl
dec
cmp
add
mov
mov
aas
inc
dec
mov
mov
shlb
sar
mov
pop
cmpsl
cmp
adc
sub
pop
sub
pop
loopne
xor
adc
mov
cli
xor
mov
pop
cmp
iret
cmp
fs
in
jge
in
arpl
xlat
lea
inc
jo
lcall
or
jns
rcll
or
and
cs
xlat
cmpsl
push
scas
stos
pop
push
stos
cld
push
fidivl
mov
xchg
inc
and
cwtl
out
cld
push
mov
add
jno
add
add
jmp
and
stc
in
insl
in
xchg
adc
insl
jno
rclb
mov
mov
ds
cmp
push
push
cmp
mov
nop
stc
popf
cmp
adc
cld
jae
hlt
shlb
cmp
or
test
xlat
insl
sbb
cmc
lods
cmp
aam
cmp
mov
movsb
cmp
and
test
cld
dec
imul
fnstenv
in
jp
movsl
cmpsl
dec
jmp
or
add
dec
mov
or
mov
pop
repz
and
push
in
call
into
sbb
jmp
das
sbb
cmp
jl
inc
jp
xor
cltd
shl
jmp
sti
lcall
cltd
daa
push
add
sarl
pop
push
add
sbb
scas
sbb
push
das
call
in
mov
inc
fistl
push
xor
mulb
lcall
rorl
lahf
mov
in
xchg
sbb
jg,pn
loopne
insb
andb
test
lcall
scas
ds
in
rcrl
push
daa
xchg
cltd
sbb
jle
jae
pop
xchg
lcall
xchg
cmp
add
add
jo
sbb
pop
pop
xchg
inc
in
pop
sub
pop
leave
lcall
scas
mov
mov
mov
hlt
mov
sbb
iret
aad
orb
push
push
das
repz
jecxz
lea
cld
lcall
pop
in
cld
dec
xlat
push
pop
jle
mov
cli
jl
sbb
cmc
inc
fstps
cmp
cmc
in
adc
es
pushf
cmp
inc
lret
mov
sti
mov
cmp
mov
cli
sti
test
xor
bound
loop
in
orb
jns
sarb
sbb
flds
mov
repz
aas
mov
into
sbb
insb
push
cmp
notl
es
std
inc
xor
aas
addr16
loopne
aas
mov
data16
mov
lods
in
daa
lret
imull
mov
call
pop
add
scas
rcl
add
cmpsb
push
icebp
hlt
scas
in
mov
sbb
or
push
mov
js
cli
jl
fldenv
stc
pusha
popf
pop
fs
ja
mov
rolb
mov
sbb
jbe
xchg
pop
add
repnz
mov
imul
and
add
cld
daa
pop
inc
and
imul
pop
add
sahf
cmpsl
jb
lea
sarb
dec
in
repz
pop
mov
mov
rcll
cmc
repnz
cltd
sti
add
push
popa
int3
jecxz
lods
repnz
lea
adc
push
popf
push
adc
and
popf
call
insb
ss
mov
sbb
jns
cwtd
jo
mov
adc
std
js
test
sti
mov
mov
lahf
stos
jnp
mov
aas
pop
scas
adc
lcall
mov
scas
fiaddl
ja
pop
aaa
movsl
sbb
cmpb
aas
pusha
mov
mov
es
scas
outsb
xor
pop
icebp
mov
mov
das
in
sbb
sub
es
pop
dec
mov
sub
add
sbb
and
dec
js
out
inc
sbb
cmc
cld
repz
shl
clc
adc
scas
lods
xchg
into
xchg
dec
pcmpgtb
mov
mov
cmc
mov
fsqrt
and
mov
jle
daa
jnp
sbb
push
xor
mov
sbb
and
mov
std
cld
pop
das
mov
cmpsb
sub
sbb
xchg
push
cmp
mov
mov
bound
jbe
cmp
pushf
xchg
pop
mov
cld
dec
jmp
jle
leave
mov
loopne
sbb
int
jbe
push
add
lcall
sarl
lcall
in
jae
xchg
inc
cs
mov
fsubr
mov
xor
push
aas
ja
xchg
mov
test
ja
xchg
in
test
jl
sbbb
xchg
insb
fldl
ret
push
pop
jg
not
jnp
dec
jnp
mov
jmp
rclb
das
mov
mov
test
cmp
sbb
cmp
aam
ss
mov
in
xchg
cld
in
fcmovnbe
sbb
jge
adc
sbb
hlt
pop
int
aad
maskmovq
testl
inc
inc
ror
gs
pop
add
pop
adc
adc
leave
inc
test
add
adc
inc
sbb
inc
dec
iret
incl
jns
or
addl
lods
jbe
cli
and
sub
in
cld
mov
xorl
fwait
setp
push
pop
lock
jnp
stos
hlt
push
test
pop
mov
inc
sbb
lret
aaa
outsb
lcall
fwait
mov
cltd
loopne
jbe
mov
fwait
jecxz
aad
sbb
rcrl
dec
jo
or
outsb
sbb
push
mov
outsl
gs
push
adc
lcall
pop
push
adc
shll
jle
mov
int3
xchg
mov
and
push
sub
adc
or
nop
ljmp
inc
sbb
sbb
or
add
jno
jae
repnz
icebp
xlat
inc
fprem1
scas
ja
fadd
lds
inc
mov
xchg
cmpsb
lcall
shrl
lds
iret
cmpsl
pop
push
int3
dec
pop
imull
sbb
sbb
mov
testb
mov
pop
mov
mov
pop
insb
bound
mov
bound
in
add
ds
inc
in
mov
pop
jae
mov
sub
mov
add
pop
sub
popf
push
xchg
push
das
jnp
filds
pop
fwait
dec
sbb
pop
jns
mov
test
dec
inc
sub
cmpsl
ret
cmp
cmp
pop
lahf
outsl
mov
lahf
mov
mov
shll
xchg
scas
neg
loopne
es
jo
and
cmp
icebp
outsb
sbb
shll
pop
hlt
daa
enter
lods
scas
mov
jmp
lods
call
push
jl
sbb
pop
xchg
push
and
pop
rorb
in
rcl
jle
add
cmp
call
adc
sbb
mov
lods
incl
outsl
sbb
shlb
xchg
mov
mov
imul
dec
xchg
fstl
push
mov
jbe
out
xchg
cmpsb
sarb
xchg
popf
xlat
das
mov
mov
or
adc
mov
pop
pusha
test
and
cmp
into
dec
adc
pop
leave
in
add
and
test
sbb
jle
cmp
push
pop
mov
sbb
lock
pop
in
cmpb
inc
pusha
add
fsubs
out
mov
adcl
adc
push
add
out
fs
mov
mov
inc
dec
lds
repnz
loopne
filds
enter
or
or
add
dec
das
in
int
push
in
pop
inc
add
cmp
push
lock
pushf
es
add
cmc
int
push
in
pusha
push
aas
rolb
sub
cwtl
jno
sbb
nop
outsl
sbb
sbb
insb
out
mov
js
cmp
cmp
pop
sub
inc
lret
fwait
adc
aam
int
sarb
cmp
pusha
mov
addr16
add
cmp
pop
xchg
icebp
inc
dec
lret
sbb
lea
iret
cmp
dec
sub
xor
mov
popf
stos
mov
or
stos
pop
and
movsb
pop
or
pusha
hlt
mov
sbb
jns
scas
pop
loope
jae
pop
pop
push
ljmp
sub
sbb
lahf
inc
or
inc
mov
jp
js
test
xchg
mov
xor
xor
test
lahf
in
std
adc
test
jns
xor
xor
push
pop
jg
fucomip
fdivrp
jnp
push
arpl
add
jle
jle
in
fsubl
jmp
jmp
cwtl
in
inc
inc
sub
adc
ret
loopne
ss
or
das
psllw
je
in
data16
repnz
pop
or
xchg
pop
sbb
mov
dec
mov
pop
add
jecxz
pop
and
or
mov
cltd
dec
mov
mov
add
addb
test
or
aam
fs
out
mov
rcr
lahf
mov
roll
test
push
add
insl
dec
js
cli
cli
cs
cmp
sbb
js
in
fucomi
sbb
addr16
jo
clc
psubd
shlb
mov
out
lret
inc
push
call
cs
gs
add
ret
xor
mov
and
ds
arpl
mov
ret
add
pop
adc
sbb
mov
js
inc
js
jb
push
pop
sbb
jae
sti
cmp
xor
int
lcall
push
or
inc
repnz
add
ror
or
imul
cmp
cld
or
loopne
mov
sbb
enter
jnp
jl
in
loopne
stc
mov
pop
xlat
sbb
fcomps
int
or
in
cmpl
js
mov
daa
jp
rclb
xchg
lcall
push
add
scas
sbb
std
push
lock
lods
sbb
insb
pusha
cwtl
lret
lea
loopne
push
lock
push
lcall
jg
xor
xchg
cmp
shl
stc
sub
pop
jno
sbb
mov
aas
jmp
fdivrl
jle
xor
sbb
scas
dec
lcall
jmp
dec
sub
das
lock
push
jp
pop
cs
out
add
js
push
int
in
pop
inc
jbe
pop
gs
int3
ret
push
popa
daa
popa
inc
stos
aam
inc
iret
enter
mov
pusha
mov
jns
pop
pop
cli
inc
cmp
in
xchg
aad
jns
lcall
add
je
fistpll
push
adc
adc
cmpsb
xchg
loop
js
mov
inc
lret
les
dec
stc
xor
jg
lock
or
daa
mov
jns
push
loopne
cli
or
sbb
test
mov
lods
cltd
out
adc
xchg
loopne
sbb
icebp
push
dec
push
int3
xchg
jb
fiadds
dec
mov
pushf
dec
dec
push
sbbl
inc
cld
sub
or
scas
jno
outsl
pop
push
test
iret
xor
pop
popf
ja
sbb
sbb
scas
aam
movsb
icebp
cmp
into
pop
lea
pop
mov
in
lods
shll
sub
push
shr
outsb
sahf
inc
or
in
pop
mov
rorl
insl
js
test
cltd
push
cld
mov
mov
call
scas
cwtl
ret
outsb
inc
aas
outsl
or
add
xchg
mov
mov
sub
push
daa
fdivr
inc
ljmp
dec
or
ljmp
pop
stc
or
cmpsl
jp
loopne
dec
sbb
xlat
lahf
xchg
add
mov
add
ficompl
jo
sarl
into
xor
ficomps
pushf
daa
dec
inc
ret
jmp
adc
in
push
cmp
xor
ret
mov
mov
out
ficompl
push
mov
xchg
mov
jne
out
jbe
aad
dec
jnp
jnp
sbb
stos
stc
dec
stc
repz
sarb
xchg
lcall
es
in
lahf
and
inc
and
push
pushf
adc
pushf
popf
mov
mov
clc
jno
fdivrp
lods
add
sahf
aas
lea
iret
repz
xchg
and
cmp
add
icebp
xlat
xchg
mov
or
sbb
out
add
mov
mov
ss
inc
jae
jbe
inc
nop
lock
cld
adc
scas
test
repnz
xchg
mov
out
xchg
repz
add
mov
dec
xchg
fadds
mov
push
and
sub
mov
adc
lods
xor
or
adc
push
fsubp
lret
adc
add
xchg
sub
jge
out
cmp
negl
dec
and
mov
daa
bound
sti
push
push
sub
movsb
dec
dec
jge
and
popw
inc
mov
xlat
fsubr
push
fimull
dec
clc
sbb
and
jecxz
arpl
jmp
sub
mov
outsl
test
and
insb
jbe
jle
jo
sub
cmp
stos
sbb
push
dec
cmpsb
add
in
movsb
flds
cmp
mov
into
mov
inc
jl
cmpb
dec
ss
mov
dec
popl
dec
pop
idiv
sub
sub
jle
pop
orb
push
xlat
add
and
mov
cmp
aam
imul
push
cmp
xchg
icebp
das
mov
mov
xchg
arpl
nop
out
add
sbb
inc
scas
inc
mov
cld
das
fwait
add
xor
pop
adc
std
addr16
sbb
dec
in
pop
jmp
ds
pop
mov
cmp
mov
jbe
jmp
mov
pop
scas
ja
mov
scas
insl
bound
xor
lock
jns
mov
push
pop
js
int
cmp
mov
insl
or
cmp
lea
xchg
in
jb
dec
decb
xchg
out
or
jp
adc
ljmp
xor
rorl
fdivp
pop
lock
test
shl
js
pop
stos
test
mov
fisubrl
pop
jge
insb
mov
sbb
inc
mov
stos
loope
imul
scas
test
adcb
sbb
test
ja
mov
lahf
jp
fdivrs
movsb
or
mov
cmpsl
iret
hlt
or
mov
jne
cltd
popa
test
mov
mov
xor
aas
maskmovq
mull
cmpl
xchg
rorl
shl
ret
push
hlt
xchg
add
mov
and
sbb
add
insl
insb
shll
push
mov
jne
lea
ljmp
pop
or
daa
mov
sbb
fs
push
pop
sub
pop
pop
mov
enter
adc
aaa
in
fstl
iret
popa
je
add
scas
inc
repz
in
fsubl
out
and
sbb
sub
dec
jo
out
rcr
mov
add
adc
inc
loope
and
push
pop
jbe
sti
daa
inc
in
ja
xchg
cs
sbb
or
lcall
jo
cld
xchg
adc
faddl
push
or
dec
inc
and
idivb
xchg
lds
test
repnz
mov
imul
rolb
mov
pop
or
xor
jne
rcr
mov
mov
and
pop
adc
mov
adc
push
inc
xor
icebp
push
push
inc
jbe
scas
cmp
xor
add
add
das
mov
call
jmp
in
xchg
iret
loope
sub
je
roll
xchg
sbb
jo
mov
inc
pop
mov
addr16
xor
popa
pusha
mov
sti
push
or
xor
sbb
xor
mov
psubsw
push
fldcw
lods
js
stos
leave
push
add
sub
push
push
adc
xor
mov
push
scas
mov
pop
xor
jne
sahf
cmp
scas
cwtl
in
loopne
pushf
add
inc
jbe
sub
roll
push
xchg
and
enter
outsl
repz
jmp
sbb
add
mov
sub
lods
or
lcall
test
jo
jmp
sbb
add
dec
test
push
out
push
into
xchg
fucomip
inc
or
cs
or
dec
fbstp
sub
ficoml
xor
repnz
fs
jp
lea
push
aam
and
imul
mov
sub
mov
jb
add
push
cld
in
pop
cmc
xchg
pushf
cmp
lock
out
mov
jecxz
or
out
in
pop
dec
push
sbb
xlat
add
and
mov
pusha
mov
pushf
push
jg
inc
shrl
pop
cmc
fadd
outsb
push
loop
int
mov
fldenv
test
push
jne
cld
mov
daa
int
pop
mov
sub
sbb
dec
xchg
mov
dec
sub
cmp
cmc
adc
test
add
sub
cs
push
sbb
in
test
xor
js
aas
pop
cmovs
not
call
and
ds
repnz
rcrl
sbb
mov
jns
pop
inc
dec
xchg
insb
jl
cld
lds
xor
sbb
fisttpl
jmp
or
addl
icebp
out
cld
scas
jae
cmpsl
and
std
mov
fucom
aaa
out
inc
mov
cltd
icebp
pusha
add
dec
mov
test
in
cs
cmpsb
adc
jb
inc
sub
pop
mov
fcomps
mov
outsb
add
jne
lods
jo
xchg
adc
cmpsl
test
jb
mov
repz
in
mov
loopne
cmp
and
push
sbb
dec
jl
push
add
test
cmp
loope
xchg
repnz
mov
cmp
adc
pop
lcall
sbb
mov
dec
jg
sbb
xor
mov
cmc
mov
mov
fs
xlat
sbb
push
dec
test
in
and
add
ja
int3
xchg
jno
mov
adc
andb
out
or
sbb
jl
mov
jno
jmp
mov
inc
sbb
scas
ja
ds
mov
mov
std
mulb
sbb
outsb
cmp
aam
or
sbb
fs
push
mov
lods
cmp
nop
xor
mov
repz
mov
push
cld
jo
std
mov
clc
xor
mov
inc
dec
into
in
fdivs
cmp
pop
jbe
adc
jae
inc
xor
dec
lea
sahf
inc
lods
in
sbb
xor
ds
xor
pushf
adc
mov
xlat
cmp
sbbb
xchg
rcrl
cld
pop
xchg
daa
lahf
pop
lods
cltd
xor
pop
arpl
shll
cmp
rcll
into
mov
push
in
test
in
mov
dec
inc
out
imul
sbb
mov
cmp
add
mov
sub
popa
lcall
in
xor
iret
xchg
sbb
xor
dec
jno
push
dec
lods
subl
ja
frstor
out
and
mulb
push
lods
fisubl
pop
mov
repnz
pop
inc
icebp
outsb
jbe
and
jno
cltd
xchg
repnz
loopne
cmp
cld
sarl
in
aas
jae
lods
and
ja
stc
shlb
leave
rdmsr
push
test
mov
mov
cmp
pop
dec
fsubrl
dec
bswap
mov
les
stc
cli
push
sbb
xorl
movsl
dec
lret
ret
daa
and
test
pushf
std
sbbb
and
cwtl
in
cld
and
mov
dec
lcall
dec
sbb
dec
mov
lret
cmpsb
mov
data16
je
mov
lock
fbstp
cmp
adc
ss
mov
and
insl
jecxz
stos
or
andb
pop
jbe
mov
sbb
sub
nop
push
add
jo
mov
jge
sahf
adc
push
divps
cmp
popf
or
iret
cltd
rorb
xchg
enter
jle
mov
sbb
cmpl
mov
popf
out
sub
cltd
sub
arpl
sub
mov
pop
aam
xchg
mov
pop
push
add
out
pop
rcr
ret
movsl
imul
sbb
mov
rolb
outsb
add
vpaddb
scas
push
pop
jo
mov
push
out
mov
mov
lahf
daa
xchg
out
mov
test
xchg
lret
in
ss
sub
out
pop
shr
leave
mov
push
mov
fcomps
or
in
adc
mov
or
mov
dec
fs
out
add
inc
popl
pop
sahf
jb
xor
cli
sahf
cmp
cltd
xor
add
ret
inc
add
mov
repz
push
mov
ret
adc
pop
fcomi
out
js
cwtl
adc
addr16
dec
aaa
sub
imul
mov
outsb
rcll
repnz
nop
inc
arpl
mov
pop
idivl
sbb
bound
popf
bound
dec
in
ss
sub
xchg
xor
jl
sub
inc
fnstenv
lahf
xchg
sti
aad
jmp
jb
popf
adc
add
sbb
test
mov
pop
jbe
xlat
xchg
push
fdivp
jg
push
jmp
jle
inc
into
lock
negl
popf
push
pop
xchg
jb
or
sbb
andl
notl
mov
or
sbbb
addb
add
dec
scas
add
fidivrl
or
push
push
jle
sbb
inc
jo
cmc
insb
cmp
push
and
repz
hlt
cld
jp
in
pop
insl
pop
sub
cmp
adc
fistpll
lea
push
cli
mov
add
cld
push
mov
xchg
int
dec
adc
ds
or
insb
dec
xlat
xchg
fcoms
ds
mov
in
cmp
xchg
sti
xor
hlt
or
sbb
aam
pop
mov
daa
sti
repz
inc
push
sbb
xlat
outsl
xor
das
dec
xor
inc
in
lock
cmc
sbb
dec
cmpsl
notb
mov
ja
inc
fsubrs
mov
lcall
inc
hlt
or
jnp
add
sar
loop
xchg
ficompl
js
pop
xchg
jnp
add
in
cmc
clc
mov
testl
cmc
js
mov
leave
sbb
aas
sub
outsl
cli
es
push
jbe
test
lret
mov
adc
cmpsb
jne
out
pop
mov
insl
mov
addb
push
add
jne
xor
popf
jo
push
jno
notl
aam
shrl
and
jns
or
jmp
rol
mov
mov
rcrb
mov
std
push
cmp
cmp
hlt
outsl
or
cli
sti
pusha
aas
mov
mov
sbb
adc
xor
aas
xchg
int
mov
jp
xor
cld
hlt
stos
push
inc
call
sub
roll
filds
sbb
repnz
fxch
push
stc
sbb
and
inc
push
adc
fidivl
xor
cwtl
mov
sbb
ret
dec
rcrl
ljmp
sub
push
dec
jecxz
xor
jbe
pop
add
rolb
mov
mov
mov
out
aam
sub
fcmove
clc
add
daa
xchg
loop
jns
inc
clc
sti
sub
lea
jmp
xlat
call
shr
enter
sbb
sub
mov
add
fcom
outsb
in
sbb
inc
sbb
addr16
in
out
jns
push
xchg
xorl
pop
test
scas
cmp
mov
inc
bound
add
fsubs
sub
pop
mov
lcall
sbb
fsubs
ds
mov
xor
or
or
test
leave
std
xor
jb
ss
cmp
stos
mov
adc
inc
fsubs
sti
out
cld
aas
fsub
or
js
add
fcomps
mov
out
ja
or
pusha
push
mov
cli
test
sub
in
dec
in
jmp
add
mov
mov
mov
movl
cmp
jbe
lcall
std
add
push
add
pop
push
pushf
mov
xchg
mov
cltd
ja
dec
testl
clc
push
sbb
daa
ret
jmp
pop
std
cwtl
dec
cld
fstpl
cwtl
rol
add
pop
mov
add
arpl
cltd
lret
popf
ds
pop
dec
negl
mov
lcall
aaa
nop
fwait
int3
out
imul
jbe
js
cmpsl
xchg
leave
mov
inc
cmpsb
outsl
rorl
and
mov
xlat
xchg
push
inc
daa
mov
sbb
scas
in
mov
and
cmpsl
data16
sbb
jecxz
adc
cmp
andl
insl
jns
jb
mov
das
mov
mov
mov
ja
dec
fistl
sbb
mov
mov
in
das
sahf
in
jl
sbb
in
in
clc
es
int
and
dec
into
repz
sbb
mov
mov
jbe
pop
sub
mov
enter
sbb
jae
pop
jmp
cmc
mov
mov
add
add
xchg
jmp
or
jmp
mov
cwtl
jp
ljmp
sbb
and
adc
iret
sbb
aas
movl
mov
add
lock
sub
jp
mov
inc
sub
mov
pop
cltd
aas
lea
lcall
mov
mov
inc
xor
xchg
test
lcall
into
jmp
inc
sbb
outsl
cld
dec
int
gs
js
subl
jl
insl
and
jb
mov
xchg
popf
jno
cwtl
lret
call
pmaxub
pminsw
scas
jp
xchg
add
cld
push
xchg
jne
mov
adc
sbb
mov
cmp
jmp
dec
ja
lods
adcb
pop
push
and
mov
stos
das
sbb
inc
pop
push
add
mov
pop
mov
mov
mov
lcall
adc
rcrl
cs
inc
int
adc
scas
pop
repz
sbb
mov
sbb
or
adc
lea
je
popa
mov
test
jae
out
aam
cmpsl
js
repnz
imul
cmc
mov
mov
pop
dec
pop
jno
lods
push
imul
popf
xor
and
cs
sbb
mov
mov
mov
outsb
repnz
in
xor
cld
stos
sbb
mov
sub
mov
std
lcall
stos
cld
sti
mov
jmp
cld
cmp
xor
xorb
add
xchg
loope
nop
cmc
movsb
scas
push
xchg
pop
xchg
sbb
out
in
out
mov
faddp
popa
mov
sub
sbb
and
push
push
jno
jmp
js
jae
add
out
jo
xor
xor
stos
jo
and
push
adc
push
jp
push
push
adc
jno
jae
rcrb
dec
push
das
in
popa
sub
jae
mov
xor
xchg
mov
scas
enter
mov
inc
mov
gs
cli
jmp
scas
test
test
leave
sbb
mov
pop
and
lds
mov
int
pop
repz
loop
xorl
inc
cwtl
in
jl
pop
and
inc
xchg
in
cli
test
test
mov
xchg
imul
adc
push
mov
imulb
clc
mov
cs
aam
xchg
jo
repnz
mov
mov
jp
sub
cmp
popa
in
cmc
je
sub
push
xor
inc
and
out
insl
jecxz
xor
inc
pop
sti
insl
rcll
out
loopne
xchg
inc
xchg
int
add
sbb
xchg
enter
imul
js
mov
subl
sub
repnz
pushf
in
jno
cmpsl
aaa
inc
andl
dec
pop
cltd
aaa
pop
adc
cmp
add
pusha
mov
fsubl
pop
cmc
pop
dec
enter
fistpll
mov
cmpsl
es
dec
loopne
fldenv
jb
jbe
hlt
inc
test
rcrb
push
jmp
insb
mov
ds
pop
js
test
out
mov
shrb
enter
jo
in
pop
or
scas
test
icebp
in
and
cmp
cld
in
push
lahf
add
pop
nop
sbb
jl
mov
testb
mov
jne
movsl
cli
insb
mov
scas
add
xchg
lcall
adc
sbb
add
popa
mov
sub
test
insb
sub
int3
adc
mov
xchg
cmp
pop
push
cld
jnp
or
jle
stc
add
cmp
jns
pop
ror
in
sbb
std
pop
int3
adc
cli
sbb
add
mov
add
roll
out
test
das
dec
mov
out
daa
pop
cs
xchg
lods
jnp
ljmp
inc
cld
fmull
push
scas
ret
cmp
outsb
nop
and
arpl
popa
inc
inc
cwtl
loopne
xchg
nop
imul
loope
push
sbb
inc
push
fisubl
std
mov
loop
out
lock
mov
xor
imul
ds
cmp
sub
mov
mov
dec
sbbl
shrb
outsl
arpl
xor
es
adc
int
xor
fwait
imulb
xchg
ss
push
jmp
add
xchg
adc
or
call
sbbl
pop
mov
mov
xchg
js
popa
mov
jecxz
lds
mov
pop
jae
and
cwtl
mov
mov
xchg
lret
int3
shl
mov
adc
or
or
clc
adc
or
ret
shll
mov
xchg
aam
push
cld
ds
add
or
out
sbb
loopne
mov
dec
sbb
xchg
pop
lret
bound
mov
lds
js
sbb
inc
repnz
test
or
mov
ret
sbb
push
and
mov
repnz
inc
outsb
add
push
xchg
sub
xchg
pop
shll
popa
mov
mov
out
or
hlt
std
movsl
cmc
push
bnd
in
push
sub
mov
addb
pop
cmpsb
dec
lret
or
lods
int
cmp
push
pop
mov
lea
mov
sahf
inc
shl
aam
jmp
out
lret
icebp
insb
cwtl
scas
add
pop
ss
imul
das
xor
pop
outsb
sbb
gs
xor
add
xchg
divl
xchg
fwait
loop
test
mov
je
jp
xor
mov
push
aam
fiaddl
mov
cmc
shl
movsl
xchg
push
sahf
popa
pop
cld
cwtl
xchg
das
jle
jae
jp
jb
or
cmp
pop
call
out
push
and
imul
inc
mov
cmp
mov
cs
push
mov
cli
sbb
adc
loopne
mov
adc
pusha
fsub
out
in
push
loop,pt
mov
sbb
and
xor
jmp
mov
cmp
in
pop
xchg
push
out
xchg
push
daa
add
int
cld
and
push
dec
mov
lcall
pop
rcr
pop
mov
ret
or
iret
ja
jb
lcall
ja
mov
in
sub
xchg
push
jae
xor
ds
dec
cmpl
sbb
ret
cmpsb
pop
popa
sbb
xor
cmp
sbb
rcrl
out
sbb
mov
clc
mov
roll
xchg
iret
adc
add
pop
test
pop
pop
sub
mov
popa
sub
inc
jns
xor
xor
rcl
pop
jno
xor
mov
pushf
sub
push
in
sbb
pop
inc
mov
mov
subb
popa
xor
inc
shll
lcall
arpl
ss
repz
dec
stc
inc
lock
into
sarl
mov
xor
aas
sub
call
inc
cmp
add
sub
hlt
pusha
pop
push
icebp
sub
cld
mov
dec
add
push
mov
jmp
mov
addr16
or
pusha
cmp
cltd
push
imul
push
cld
sub
mov
pop
jb
jg
out
cmp
in
fistpll
push
das
dec
mov
out
sbb
test
sbb
in
xchg
and
clc
jns
xchg
rcll
push
xchg
mov
pop
cmpsb
js
test
pop
sbb
lcall
sbb
cmpsb
pop
out
clc
add
sbb
xor
mov
das
add
and
xor
bound
sti
pop
jae
in
leave
mov
dec
jbe
js
sbb
mov
mov
and
sub
pusha
or
aad
push
jmp
inc
fmul
fmull
adc
jb
mov
into
fidivrl
pop
loopne
mov
daa
stc
cmpsl
ret
lcall
push
jno
cld
xchg
adc
ja
data16
sarl
repnz
jne
cmp
sub
inc
cld
sub
add
cltd
test
inc
movsl
test
iret
ds
movsl
mov
and
jecxz
sbb
sub
outsl
test
popa
loop
push
sub
lea
dec
pushf
sub
shrb
daa
ss
cli
iret
push
test
cmp
mov
xor
sub
dec
mov
pushf
clc
pop
cmc
mov
cmpsb
pop
outsb
xchg
and
divl
adc
icebp
inc
mov
icebp
aad
ss
repz
div
mov
clc
sub
repnz
cs
xor
out
sbb
adc
adc
sarl
lock
and
add
cmc
dec
or
push
mov
insb
mov
fldcw
notl
pop
pop
clc
push
es
pop
scas
ja
xchg
mov
xchg
out
idiv
stos
clc
add
not
test
mov
adc
pop
xchg
divl
sbb
cli
sbb
repnz
fdivr
add
orl
icebp
jb
jle
push
es
xchg
fwait
insb
xor
imulb
out
cmc
jl
clc
xchg
imul
imul
sahf
ja
push
mov
or
testb
insb
push
push
xchg
pop
addl
adc
hlt
js
jbe
xchg
xchg
xchg
clc
xor
inc
cmc
aaa
add
lahf
div
cld
or
sub
jl
divps
mov
push
in
in
js
jnp
add
sti
adc
jmp
mov
icebp
insb
je
loope
xchg
jbe
das
mov
fdivs
mov
adc
decl
inc
add
js
mov
ljmp
repz
dec
pop
mov
cwtl
pop
insb
push
xor
add
jp
cmc
adc
jo
jbe
test
sahf
pop
add
sti
xor
sub
out
add
jne
jmp
adc
cmc
andb
cld
mov
xchg
ljmp
icebp
adc
in
hlt
in
pushf
adc
outsl
testl
jp
cmc
lock
ljmp
jmp
inc
hlt
pop
adcb
cmc
clc
inc
add
out
je
sub
jmp
insb
jbe
dec
jl
jmp
xchg
add
in
int3
cli
or
adc
pop
icebp
mov
bound
and
jmp
add
jns
in
divl
insl
aas
jbe
fnsave
add
icebp
ds
notb
mov
sbb
add
dec
push
ss
pop
xchg
dec
add
pop
jecxz
repnz
dec
add
daa
cld
imul
hlt
inc
dec
call
in
ja
in
bound
jbe
lods
xor
pop
stos
cs
fmull
dec
fcmovnu
lret
cli
int
in
mov
daa
andb
lds
pop
cmp
ficomps
aam
popf
lcall
test
push
daa
js
fnstcw
cmc
sbb
mov
mov
pop
pop
cmp
pop
jns
movsb
out
cwtl
cmc
lret
inc
dec
mov
pop
sarb
fstpl
daa
pop
fwait
and
in
adc
daa
lahf
mov
inc
sbb
shll
mov
arpl
inc
pop
lret
adc
and
sub
add
inc
xchg
out
mov
stos
in
dec
jmp
pop
fimuls
jl
mov
mov
int3
inc
cld
popa
mov
fnstenv
xlat
push
shl
xchg
cld
fadds
stos
xchg
mov
push
cmc
mov
adc
pushf
in
pop
pop
push
inc
jecxz
sti
in
jb
push
sbb
lahf
dec
adc
cmp
mov
mov
jecxz
arpl
jno
xchg
push
cs
mov
aam
fimuls
pop
movsl
mov
stos
cli
dec
adc
add
cmp
aad
fdivrl
and
scas
mov
push
add
sub
jns
jbe
add
in
adc
xchg
mov
test
mov
scas
mov
dec
cmpsl
jno
out
pop
andb
pushf
cs
push
cmp
ret
mov
or
ds
fwait
in
adc
lret
sbb
cmp
jbe
cmp
add
push
xorb
pop
mov
stos
adc
cmp
cld
pop
daa
cmp
pop
cmpsb
mov
pop
dec
out
sahf
gs
or
sbb
mov
push
jp
sbb
js
xchg
clc
jp
jecxz
ret
jecxz
add
mul
lock
adc
das
and
lock
mov
aad
push
xchg
aaa
sbb
pop
inc
jne
ffree
inc
aam
lds
loopne
cld
xchg
lahf
mov
cld
sti
push
cwtl
jle
cli
push
xchg
aad
adc
ret
cmpsl
stc
dec
scas
sub
add
sbb
xchg
sub
sbb
add
jle
aas
icebp
pusha
cli
leave
movsl
xor
fsubrp
dec
test
sbbb
inc
inc
sub
add
shlb
nop
sarb
jge
popf
ja
jo
jno
int
sar
loop
cmp
jp
cmp
idivl
or
gs
push
fucomip
lret
mov
scas
fcoml
scas
push
xchg
test
jmp
jmp
xchg
stc
fucomi
scas
pop
std
sbb
xor
push
mov
adc
js
sbb
outsb
fsubp
cmp
mov
or
outsb
mull
sub
dec
push
int
cmp
inc
mov
testb
movsl
xor
adc
cmp
cltd
pop
ja
inc
sbb
test
into
inc
bswap
stos
lcall
js
repz
test
clc
int3
and
in
pop
jmp
icebp
sbb
repz
clc
push
mov
sbb
sub
mov
jae
dec
fisttpll
pop
pop
mov
cmp
outsl
pop
repnz
movsl
sarb
mov
roll
push
adc
jmp
pusha
daa
fsubl
sbb
or
loop
pop
ds
repnz
mov
std
lods
push
inc
js
cmp
hlt
incb
dec
int3
jecxz
addr16
leave
mov
dec
cmc
push
and
lea
ljmpw
jmp
add
call
sti
shl
push
cmpsb
lock
int3
fistps
xchg
scas
testl
das
inc
xor
dec
jl
negb
mov
push
mov
pushw
push
lods
push
rorb
sarb
sbb
lahf
xchg
and
push
sbb
movsl
sti
data16
decl
icebp
sti
mov
push
dec
cmc
dec
sti
loope
add
jecxz
ljmp
leave
mov
insb
cltd
add
sbb
je
xchg
cli
dec
inc
cld
mov
movsb
cmp
ljmp
pop
jo
xor
inc
mov
cli
mov
mov
push
sbb
test
push
jno
dec
inc
sub
lods
add
sbb
out
stos
decb
out
in
or
push
dec
sbb
jge
aam
cmp
test
cmp
and
cld
loope
aad
dec
ja
js
int
lret
dec
adc
je
jg
push
xor
cwtl
add
pop
icebp
or
add
mov
sbb
divl
sbb
sti
xchg
nop
stos
pop
xchg
mov
sbb
mov
xchg
add
testl
inc
lods
pop
in
push
daa
inc
fistpl
cmp
xchg
test
jnp
pop
leave
stc
addr16
jns
inc
push
push
xchg
call
jp
dec
aas
dec
fucom
sbb
or
dec
in
pop
sub
ss
inc
das
js
mov
dec
andl
test
lds
dec
jns
mov
sub
js
push
adc
inc
xchg
imul
lock
sbb
mov
cmc
cmp
cmpsl
out
push
fcoml
rorl
mov
adc
adc
jo
aam
dec
xchg
ja
cmp
cmp
or
jge
sbb
scas
mov
mov
push
cmp
mov
or
sbb
push
cld
xchg
cmp
push
lods
and
aam
aam
mov
or
cwtl
cld
xchg
push
out
push
push
cmc
dec
cld
lret
loop
outsl
sahf
jns
call
mov
inc
lcall
xor
insb
int
in
into
in
mov
mov
xchg
adc
inc
into
mov
lock
sub
int
push
incl
inc
negb
shr
or
sarl
incl
jl
daa
cld
xchg
lcall
and
stos
push
out
outsb
fisubs
aad
adc
sarb
lcallw
inc
addr16
repnz
xlat
int3
xor
sub
cld
inc
icebp
hlt
adc
sarb
insl
fwait
dec
jo
cwtl
pop
dec
jmp
xchg
cmp
aad
ss
pusha
jle
cmp
sub
sub
out
divb
and
pop
cmp
addr16
mov
sbb
pusha
repnz
jae
fistpl
dec
or
mov
jmp
dec
xlat
inc
and
and
stos
xor
in
jnp
sub
cmp
jmp
add
sub
shll
add
xchg
enter
jbe
and
out
cltd
xchg
mov
add
xlat
sti
scas
adc
dec
cmpsb
outsb
data16
fisubl
xor
inc
pop
sbb
and
lcall
daa
pusha
sub
mov
sbb
int
mov
sbb
cld
testb
pop
mov
shll
scas
adcb
scas
mov
adc
outsb
adcb
xchg
xchg
push
testl
and
flds
and
xchg
or
scas
lea
rorb
xor
adc
int
js
nop
mov
jb
fldcw
or
test
push
sahf
popa
push
mov
mov
shl
flds
cmp
out
pop
ss
mov
cmpsl
pop
cmp
xchg
push
mov
push
cld
or
jmp
fdivrs
pop
jmp
std
dec
cld
sbb
inc
or
jmp
cmc
push
cld
gs
inc
lahf
icebp
imul
inc
mov
popa
scas
push
sbbl
inc
mov
pop
mov
cmc
dec
cli
cld
xor
mov
je
aam
fadds
in
in
sub
cmp
or
mov
jmp
outsl
mov
pop
cld
lock
dec
jno
pop
jbe
jp
ret
outsl
test
mov
ds
cwtl
or
ret
and
cli
shll
mov
jbe
mov
inc
xchg
cmp
stos
imull
adc
loope
jb
mov
mov
mov
bnd
scas
insb
pushf
cli
cli
jmp
mov
aam
add
mov
dec
js
mov
or
ss
dec
outsb
cmp
leave
idivb
sbb
inc
and
mov
adc
test
cmc
add
xor
out
xor
mov
loopne
imul
arpl
lock
stc
add
js
inc
out
xchg
or
sbb
adc
into
outsb
sbb
and
data16
add
repz
push
fiaddl
adc
push
stos
jmp
xor
gs
xchg
dec
push
lcall
into
fimuls
add
aaa
mov
les
or
cmp
sbb
ss
imul
int
lret
push
out
mov
out
lock
xor
sub
adc
jae
rorb
repnz
cld
push
jns
jle
shl
pop
mov
pop
and
es
or
cld
lock
shr
stc
mov
loopne
mov
clc
push
aas
gs
add
and
scas
fldt
inc
jo
cwtl
cs
push
jg
pop
out
lcall
notb
cld
xor
push
addr16
push
mov
push
idivl
cwtl
js
jmp
ficompl
sub
mov
mov
and
sarl
jae
lock
mov
lods
rcrb
ja
mov
mov
xor
mov
pop
insl
sahf
repnz
dec
xchg
push
shlb
add
mov
and
scas
push
xlat
cli
or
mov
add
ds
sbb
shlb
mov
movsb
js
sbb
aas
push
inc
mov
jle
mov
enter
repz
fiaddl
jo
adcb
cs
mov
into
mov
outsb
imulb
test
cmp
inc
add
lret
idivl
fwait
sbb
mov
lock
push
sub
psubd
popf
or
xchg
cmpl
lcall
scas
cmp
ljmp
sbb
es
push
cld
mov
cmpsl
jb
inc
cmpsb
lcallw
or
ret
ficoml
dec
adc
sahf
lret
sub
rcrl
lret
cld
and
repnz
mov
push
jae
push
fcomps
mov
icebp
decl
push
push
sbb
incl
hlt
pusha
mov
jp
aad
mov
fbld
or
xchg
inc
cmp
cld
hlt
dec
mov
popf
xchg
cmp
div
add
lock
sbb
jne
jp
xor
inc
adc
jle
mov
cld
jb
or
divl
andb
ss
xlat
xor
pop
jae
cltd
mov
lret
push
arpl
push
out
sub
adc
cli
mov
xor
dec
mov
mov
and
call
lcall
incl
not
jmp
cmpsl
xchg
cmp
dec
fidivrs
lods
test
incb
jmp
in
push
das
jle
and
cltd
jnp
push
sti
cmc
fdivl
jmp
repz
cli
test
inc
pop
ret
in
or
in
lock
fcomp
adc
xchg
lcall
mov
mov
sbb
lock
mov
repnz
in
xor
mov
dec
cli
jmp
xchg
mov
cmp
hlt
xchg
frstor
and
sbb
cld
out
scas
scas
aam
or
arpl
or
mov
cltd
cmp
cmp
cmp
je
adc
lret
inc
dec
mull
jbe
insl
psubsb
jmp
cmc
sbb
lfs
sub
lcall
sub
call
mov
pop
cmp
in
cwtl
add
dec
push
jg
clc
fildll
xlat
dec
std
icebp
in
push
mov
lock
fimuls
sub
lea
dec
jmp
call
cmp
push
or
iret
mov
je
pop
decb
push
or
fcompl
test
mov
xchg
cmp
cmpsb
xor
call
cld
fidivs
and
inc
mov
inc
testb
dec
sbb
jb
push
pushf
and
cmp
cltd
mov
dec
out
push
add
cltd
pop
sbb
xor
mov
pusha
sbb
movsl
ja
lods
add
add
or
icebp
in
jecxz
dec
pop
cmp
mov
sbb
insb
mov
mov
adc
fwait
mov
xchg
jb
jno
push
push
mov
sbb
push
cli
xchg
mov
adc
mov
pop
cli
dec
data16
xchg
cmp
inc
mov
int3
mov
test
sbb
inc
into
jo
jae
ds
inc
cmpsb
dec
pop
sbb
pop
mov
lahf
and
in
stos
in
enter
sub
xchg
sub
jo
ret
cmp
or
loopne
sub
cld
pushf
jne
pop
push
sub
and
and
sbbl
sbb
pop
das
inc
scas
scas
push
lcall
pop
divb
fistl
pushf
mov
pop
das
jg
cld
in
repz
in
loopew
sbb
out
pop
sub
inc
dec
mov
loop
jae
mov
fbstp
jmp
cld
cmp
mov
ja
push
hlt
mov
lock
push
push
lcall
aam
jnp
call
das
outsb
mov
and
sbb
mov
xchg
cmp
pusha
jns
inc
les
or
movsb
cmp
fs
daa
out
or
hlt
jae
pop
cmc
dec
jp
jmp
loope
sar
inc
sbb
push
dec
fwait
adc
add
push
push
std
mov
push
lea
pop
xorb
in
xchg
js
push
and
sub
test
jg
jno
insl
xlat
stc
push
mov
mov
scas
das
cmp
xor
sbb
cs
pop
out
xchg
ds
cmp
mov
jns
stc
fdivrl
in
or
inc
lock
cli
or
lcall
sbb
mov
mov
and
iret
sbb
je
imulb
pop
mov
cmp
jae
and
xchg
xor
aaa
cld
push
outsb
movsl
sbb
je
jecxz
sub
cld
xchg
movb
cs
push
mov
insb
mov
mov
jb
cld
jl
adc
add
in
add
fsubs
ss
lahf
jge
ficoms
sub
ss
in
cmp
das
in
mov
insb
push
int3
inc
dec
cld
jl
pop
addb
out
or
pop
clc
clc
in
pop
das
jp
fs
lret
push
dec
cmpsl
fcomip
sub
lods
xlat
inc
dec
inc
jmp
shld
jbe
push
lock
cli
testb
inc
repz
ja
dec
mov
sub
loopne
jns
in
es
ss
clc
cmc
lea
icebp
into
scas
movsl
adc
in
inc
cmp
mov
inc
add
aas
roll
mov
das
jle
jg
lock
sbb
aaa
popl
jl
fnstsw
fisubrl
jle
cmc
dec
xor
xor
jmp
stc
in
pop
shl
add
pop
js
test
lcall
add
cmc
push
mov
in
stc
pop
loopne
cld
push
icebp
jmp
push
frstor
xor
movsb
aas
push
mov
test
addr16
into
sub
lret
cmp
sbb
xor
mov
sbb
pop
push
pusha
sbb
push
mov
sbb
sbb
std
fucomi
lret
or
ss
push
add
iret
inc
sub
xchg
sbb
sub
out
cmp
jmp
repnz
sti
inc
or
adc
or
xor
adc
icebp
and
loop
cmpsb
jo
jp
mov
inc
xorl
pop
daa
mov
arpl
mov
jno
inc
jle
jmp
adcb
test
jb
cmpsb
jl
pop
pop
fldl
jmp
pop
cld
mov
and
in
cmp
mov
cwtl
and
jmp
and
aam
xor
testl
sar
sub
jmp
or
lcall
popf
push
mov
mov
xchg
jmp
mov
jl
in
mov
cmp
adc
repz
cmpb
sbb
push
and
daa
sarb
jns
push
std
fdivr
aas
insl
xor
push
xchg
dec
icebp
movsl
push
or
in
mov
fcomp
shrb
test
daa
cmp
movsb
pop
insl
dec
inc
and
insb
dec
push
std
sub
lods
mov
int
pop
aam
cmc
pop
adc
in
xchg
pop
sub
ds
lods
mov
inc
cmp
jge
mov
mov
sub
cmpsl
ss
mov
sub
mov
jle
arpl
testb
sbb
mov
mov
inc
inc
fbld
cmpsl
mov
in
pop
cltd
lcall
xchg
inc
les
push
ret
daa
add
arpl
fadd
cli
dec
scas
call
cmp
daa
loopne
cld
jecxz
into
pop
jg
mov
js
cmpl
in
inc
push
jbe
aaa
cmp
negl
cld
lcall
fwait
sbb
push
loop
js
mov
mov
push
add
in
jne
or
or
cs
mov
jecxz
ljmp
push
pop
mov
sub
xor
rcrl
xchg
mov
sub
and
ss
mov
scas
jbe
out
sbbb
or
rcrl
pop
xorl
das
adc
sbb
xor
in
test
arpl
fstps
inc
push
fcompl
outsb
mov
addr16
lcall
sub
aam
inc
adc
jno
lds
in
xchg
add
stos
pop
insb
lret
jo
lods
jle
test
cmp
repnz
ja
or
and
inc
in
hlt
jl
jno
ss
pop
push
sbb
clc
cmp
jno
sbb
lods
fisubrs
push
outsl
pop
add
sbb
and
or
pop
lods
es
js
aas
adc
ja
cld
pop
sbb
dec
fwait
testb
jl
fwait
jecxz
nop
push
adc
loope
lods
mov
jb
cmp
and
sahf
js
inc
insl
ficompl
out
mov
std
adc
lcall
xchg
pushf
mov
or
pop
push
cmp
cmp
cltd
outsb
mov
aad
lahf
in
jne
ds
pop
inc
cld
cmpsb
out
push
aaa
jecxz
js
fldt
sbb
inc
pop
aam
dec
or
mov
jecxz
js
cmp
addr16
pop
out
sbb
adc
push
adc
jb
imul
vmwrite
jnp
das
out
mov
and
test
popa
cmp
lahf
xchg
lea
mov
xchg
das
pop
xabort
and
in
cld
sbb
lahf
lcall
fs
inc
outsl
or
lcall
sldt
pop
mov
sub
fcomps
mov
pusha
lahf
or
sub
xor
adc
adc
cmp
pop
scas
xchg
inc
mov
movsb
pushf
mov
aaa
mov
mov
lds
mov
sar
jae
inc
out
mov
movsb
push
ja
sbb
int3
xchg
int3
ficomps
cmpsb
xor
in
outsb
add
mov
das
xor
adc
cwtl
xorl
fsts
jnp
subb
xlat
out
xor
movsl
test
clc
inc
cmc
sbb
in
jae
fs
jns
and
fiadds
jmp
iret
xchg
jns
pop
lcall
int
mov
add
xchg
jmp
pop
arpl
fistpll
ds
test
or
mov
dec
or
mov
lcall
movsl
cmp
subb
xchg
sbb
das
outsb
ret
hlt
loope
pop
adc
lock
lahf
std
lahf
imul
ficomps
leave
aam
inc
pop
movsb
sbb
pop
mov
jns
addb
jecxz
mov
and
and
push
inc
scas
cmp
push
cld
inc
xchg
into
insl
js
push
add
dec
mov
sti
loopne
popf
test
repnz
dec
fsubl
mov
addr16
pop
jbe
data16
test
sbb
adc
jge
shrl
mov
mov
fimull
fwait
cld
inc
jno
mov
scas
inc
jne
jmp
pop
jne
cs
adc
in
je
and
lcall
jno
xlat
hlt
movsl
roll
hlt
cmpsb
lds
cli
pop
cmp
hlt
ljmp
xor
nop
xchg
std
test
rol
cmc
out
and
xor
sbb
ja
xchg
sub
ja
sti
cld
xchg
out
add
adc
dec
out
fidivs
cmp
rolb
jne
jl
push
sbb
or
mov
push
dec
mov
mov
outsb
outsb
ds
mov
scas
mov
xchg
cld
fwait
jno
sub
cmpsl
test
cld
and
aad
sub
cli
sarb
pop
dec
xchg
xor
pop
or
in
incb
cmp
fucomp
outsb
sub
ficompl
mov
pushf
xchg
inc
push
sbb
rcrl
pop
cmp
test
xor
js
mov
and
jl
decb
pushf
adc
lret
push
cmp
or
scas
daa
jl
jae
push
xchg
mov
je
mov
inc
fnstenv
popa
adc
adc
cmp
sbb
add
daa
decb
fistps
mov
push
or
cli
cltd
add
pop
lock
lcall
js
xchg
mov
xor
cld
mov
orb
sub
sti
xchg
fildl
hlt
rcrl
mov
data16
lcall
mov
xchg
test
mov
pop
adc
jmp
push
cmp
jo
dec
fiadds
rorb
xlat
ret
stc
mov
cmpsl
es
repz
sbb
daa
pushf
fcomp
xlat
out
loop
imul
mov
daa
push
fdiv
cmp
repnz
mov
mov
dec
jmp
sti
fisubs
xchg
test
outsl
test
sub
mov
clc
movsb
and
jo
jb
or
icebp
and
leave
jb
imul
fdivrl
jle
sbb
repnz
mov
dec
mov
outsl
inc
test
xor
pop
cmpb
test
pop
xor
xchg
push
insl
std
test
int
scas
out
push
arpl
jp
enter
pop
inc
mov
into
gs
xchg
cmc
shrl
not
sbb
es
push
ret
fwait
mov
push
mov
add
jle
pop
pushf
dec
js
mov
fdivr
mov
icebp
sar
rorl
xorb
mov
cld
in
jb
dec
dec
pop
ror
jmp
cmp
cli
add
in
bound
loope
call
add
xor
adc
sbb
je
out
mov
mov
xor
push
test
cli
cs
outsb
scas
adc
call
test
cmp
xchg
push
stos
stc
and
cmpsl
sub
pusha
aaa
dec
sbb
push
int3
fdivrl
xchg
pusha
pop
nopl
mov
add
test
mov
out
push
mull
push
mov
loop
rcrl
fwait
cmp
jbe
sahf
or
mov
and
aam
stc
into
cmpsl
adc
mov
pop
sti
cld
xchg
xor
arpl
test
sbb
inc
js
filds
sbb
fcmovb
enter
inc
bndstx
add
testb
rcrl
repz
and
jg
pusha
int3
xchg
or
sbb
inc
lahf
jge
xor
rolb
lods
loop
mov
andb
cli
mov
mov
ss
loope
and
mov
lcall
add
push
add
add
cmp
aaa
jbe
test
xchg
mov
push
shlb
mov
cwtl
mov
sub
stc
test
iret
cmp
xor
cmp
adc
fsub
clc
int
out
and
bound
popf
test
mov
xor
test
add
fstl
cmp
pop
pop
fsubr
cld
xchg
jns
insb
mov
icebp
sbb
movsl
in
or
mov
fidivl
ljmp
sbb
cld
dec
fsubr
shlb
sti
mov
repnz
adc
jge
fsubrs
scas
add
lods
and
test
out
push
jne
push
inc
pop
jmp
icebp
xor
jmp
rcrb
repnz
cltd
hlt
xchg
mov
add
ror
outsb
mov
push
xlat
adc
jne
pusha
test
daa
sbb
jnp
sub
dec
push
jo
jmp
popa
cmpsl
cld
pop
movsl
sti
shll
cmp
lcall
adc
popa
lock
lods
pop
dec
mov
cli
jecxz
pop
loop
les
stos
lahf
fstps
sbb
add
mov
hlt
sub
xchg
int3
lcall
dec
push
or
add
in
and
or
dec
cld
xlat
sbb
lea
pusha
mov
mov
inc
mov
cli
lds
or
les
loop
cmc
dec
adc
jp
daa
sbb
cmp
jge
fdivr
fsub
jns
das
adc
xchg
sbb
dec
add
adc
lret
xor
mov
ret
push
sbb
in
lret
insl
xor
dec
push
lock
mov
xlat
out
sub
add
cmc
dec
pop
adc
cld
repnz
pop
fsubrs
rorb
rolb
in
cmp
sub
mov
sahf
push
mov
negb
cmc
cld
icebp
dec
inc
inc
repz
pusha
cmpsl
dec
push
add
das
mov
adc
fcoms
jns
sbb
adc
and
mov
cmc
cld
inc
push
mov
xlat
jmp
mov
cmp
add
mov
sub
push
ficoml
inc
cmp
das
out
hlt
js
outsl
setp
cs
out
mov
bound
xor
add
addr16
xchg
out
repnz
pop
enter
mul
mov
lods
popf
add
xchg
push
cmpl
negl
js
sti
fdivl
add
sbb
add
cltd
jle
xor
sub
int
sbb
sbb
add
cmc
mov
inc
test
cli
cmp
sub
mov
cmp
push
dec
int
jecxz
cmc
lcall
out
push
lea
xchg
into
add
adc
out
push
add
xchg
mov
pop
jle
cwtl
aas
js
add
mov
fisubl
xor
cmpsl
int
ss
int
ret
pop
out
scas
and
xor
orl
cli
in
fistl
aaa
mov
inc
mov
adc
jo
mov
jge
jns
pop
lods
mov
mov
test
test
rorl
dec
xor
xchg
cmpsb
mov
or
loopne
sbb
cmp
dec
and
icebp
push
outsb
shll
push
and
mov
or
in
aaa
dec
fsts
add
ret
scas
and
outsl
pop
js
insl
iret
js
fiadds
fsubrl
cmp
hlt
adc
das
cmpsb
fs
and
mov
inc
jmp
add
icebp
sbb
lret
inc
js
mov
xchg
mov
adc
inc
lret
and
mov
imul
loopne
cmc
out
out
inc
je
ljmp
mov
pop
xchg
cld
stos
push
popa
xchg
test
pop
ss
cli
pop
daa
cmp
sub
pop
shl
aad
sub
push
jp
idivl
inc
inc
out
repz
mov
out
inc
notb
in
xlat
mov
bound
cmp
mov
rolb
add
mov
loop
sub
in
pop
jo
mov
dec
adc
inc
mov
mov
out
jle
mov
lods
aas
add
xchg
shrb
or
fstp
stc
in
sub
and
mov
mov
jnp
in
add
inc
cs
mov
cmp
out
ss
cmc
lock
cmp
jg,pt
in
add
addr16
mov
push
dec
test
pop
xchg
sbb
jmp
neg
jmp
cli
in
in
lds
xor
pop
nop
pop
js
sbb
je
cmc
cmp
cmp
shl
inc
ds
sbb
mulb
cmp
cmc
xor
sub
shl
mov
popw
jns
je
addr16
mov
xchg
dec
jbe
bound
mov
mov
xchg
jp
mov
ljmp
and
das
das
add
rorl
jmp
cmp
mov
pop
aaa
test
xor
sub
pop
add
arpl
push
jbe
mov
leave
mov
cmp
xchg
mov
mov
xor
mov
orl
out
iret
sbb
enter
push
jb
js
cmpsb
imul
jl
jne
aad
jae
jo
lods
mov
sub
icebp
adc
cld
cmpsl
adc
les
fldl
pop
pop
aam
jns
bswap
lods
xor
xor
into
addl
pop
lea
sahf
dec
jns
inc
mov
mov
push
and
daa
iret
xchg
adc
movsl
sbb
mov
cli
dec
mul
dec
movsb
and
out
lret
cmp
fsubr
push
in
adc
es
xchg
je
in
aaa
test
xchg
insb
pop
hlt
or
mov
jp
cwtl
mov
mov
cmp
mov
rcl
dec
inc
mov
imul
pushf
mov
and
mov
popf
add
dec
adc
jae
push
out
pop
push
movsb
cmp
mov
jl
sahf
andl
mov
xchg
das
inc
jge
in
inc
jne
sub
push
in
push
jge
fwait
scas
push
cmpsl
mov
mov
pushf
pop
lea
dec
in
addr16
fidivrs
loope
mov
pop
ss
and
std
outsb
xor
adc
jmp
adc
imul
outsb
gs
mov
add
loope
lods
lahf
or
popl
mov
scas
cmp
xor
lcall
mov
dec
mov
and
push
sarl
push
cld
test
lods
or
pop
aaa
in
add
lret
cmpl
cld
loopne
jg
lods
sbb
iret
scas
inc
jmp
pop
arpl
into
and
push
mov
mov
sub
and
cli
test
imul
test
into
sub
mov
lahf
pop
movsl
xchg
int3
stc
and
repz
jmp
mov
pop
or
flds
sbb
or
push
mov
inc
sahf
sub
pop
movsb
cmp
fdivs
sub
notl
mov
mov
lret
daa
pushf
adc
rcll
popa
mov
pop
lcall
push
notl
mov
mov
into
test
sahf
imul
push
notb
outsl
test
ds
xor
adc
mov
push
jo
das
adc
aam
xchg
scas
push
cld
inc
stos
js
aaa
jle
repnz
cld
es
inc
cmp
inc
cmpsb
mov
aam
shr
sbb
cwtl
inc
push
inc
pop
cmp
sub
and
les
xlat
fldl
inc
aad
jl
mov
cmp
and
data16
jns
in
rorl
repz
xchg
fiaddl
cli
repz
loop
xchg
dec
aas
jbe
jmp
fwait
stc
jmp
das
sub
dec
shll
test
xchg
sub
lcall
pop
jp
xlat
out
pop
cwtl
mov
dec
and
mov
mov
inc
test
cmp
sub
xor
daa
cmp
pop
pop
sbb
mov
out
cmc
xor
sti
pop
adc
cs
cld
insl
dec
jno
jns
pop
test
loope
lock
xor
incb
push
sbb
sbb
xchg
enter
pushf
mov
xchg
sbb
dec
jbe
pushf
in
stos
movsl
or
mov
subl
sti
outsl
push
into
fcomip
jmp
test
bnd
in
aad
jne
adcb
lods
xor
mov
cmp
adc
sbb
push
xor
pop
dec
mov
ss
loopne
jae
sbb
sbb
ret
es
movsb
lds
mov
dec
sub
mov
insb
mov
leave
and
cmp
mov
add
insb
aad
ja
adc
xor
fnsave
or
xor
sbb
mov
js
adc
arpl
inc
or
inc
jb
popa
jo
cld
and
aas
add
movsl
jae
xchg
cmp
in
je
cmp
lods
pop
loopne
inc
mov
mov
sbb
sbb
cmpb
test
sub
test
dec
cmp
out
leave
loope
cmp
mov
std
scas
icebp
add
cmpsb
push
xchg
pop
movsb
insb
cmp
addr16
shll
outsb
dec
push
jb
cmp
lock
mov
pop
dec
lcall
icebp
pop
insb
lcall
stos
jg
loopne
cmp
pop
sbb
lcall
lret
fistl
xchg
inc
cmpsb
jae
fists
jecxz
sti
test
das
add
repnz
add
idivb
and
mov
xchg
jmp
rorl
ret
sub
mov
loop
sub
jno
lahf
loope
mov
rol
pop
adcl
je
cld
pop
push
lahf
and
ja
sub
cs
flds
mov
xor
in
cmp
fsts
insb
sub
adc
enter
or
xlat
sahf
sub
dec
or
call
sbb
inc
mov
jae
js
cmp
mov
cmp
fldl
sub
out
aam
sub
mov
mov
rorl
mov
pop
xor
clc
add
fldcw
mov
pop
mov
adc
cld
jae
inc
dec
lret
in
pop
mov
shlb
add
and
aas
cmp
fwait
adc
and
pop
pop
mov
pop
mov
cmpsb
jmp
sbb
jg
jno
jge
dec
call
jl
sti
aas
mov
mov
add
popf
adcl
cltd
call
xchg
dec
push
dec
stc
in
fiaddl
pop
das
mov
ss
loope
push
add
mov
jmp
xchg
sbb
insl
rolb
mov
jno
xor
xlat
filds
lds
gs
scas
push
addr16
mov
add
les
push
push
sahf
ss
cwtl
test
aam
jge
dec
shl
dec
or
aam
cmpsb
sarb
dec
fadds
jbe
adc
xor
insb
daa
iret
cmp
addr16
fdivp
push
jae
popa
xchg
es
xchg
mov
decl
xor
inc
lret
mov
sbb
push
fisubl
push
pop
fisubs
sub
shrl
add
cld
push
add
dec
mov
mov
les
cli
popf
add
cmp
sbb
test
push
pop
daa
fidivrl
aas
in
cld
out
adc
mov
in
mov
scas
cmpsb
jns
xor
mov
in
or
outsb
jmp
rclb
aad
inc
pop
and
adc
in
les
push
push
jno
push
cld
aam
add
inc
hlt
and
and
pop
inc
cld
dec
testl
test
fiaddl
hlt
pop
lods
lods
adc
push
rcr
jo
fiadds
idiv
jae
inc
adc
sbb
mov
jle
xchg
test
mov
fcmovbe
dec
scas
cwtl
jmp
or
add
shlb
fwait
aad
push
in
cld
xchg
jo
mov
pop
jecxz
push
mov
btc
arpl
or
repz
jle
xchg
mov
cli
inc
mov
in
fs
mov
ja
sub
xchg
out
sub
inc
cmp
in
mov
lcall
clc
mov
aas
imul
sub
sbb
clc
push
das
xlat
inc
sbb
ds
hlt
pusha
shlb
outsb
add
sbb
xorb
sti
xchg
pop
xor
fwait
pop
loope
xor
cld
mov
lcall
cmc
in
or
pop
pop
mov
das
popa
or
jmp
sbb
push
push
ja
std
mov
inc
sahf
add
cld
aam
mov
lahf
dec
repnz
imul
hlt
cmp
aas
or
xchg
jae
mov
xchg
in
sub
jl
and
and
into
jns
sub
push
or
lret
out
mov
fwait
sbb
xor
or
push
cmp
repnz
or
inc
mov
adc
std
scas
test
mov
adcb
mov
ljmp
loope
xor
and
xchg
scas
stos
dec
imul
mov
mov
cmp
lret
in
pop
xlat
out
dec
hlt
mov
mov
js
ret
xchg
lods
push
sti
and
and
inc
cli
dec
pusha
movq
repnz
lcall
mov
xchg
shrb
insb
cmp
cmc
mov
push
inc
sbb
loope
insl
dec
mov
push
test
mov
test
mov
popf
jg
xlat
test
inc
es
rorb
ret
xor
push
sbb
sub
lcall
xor
inc
popl
cmc
dec
sub
xor
ret
outsl
xlat
jmp
sub
jne
gs
jne
aad
jb
in
xchg
mov
mulb
aaa
inc
ret
enter
repnz
rcrl
in
inc
xlat
sbb
mov
les
daa
bound
imul
jmp
cmp
sbb
sti
xchg
sahf
push
push
enter
jno
ss
mov
dec
sub
push
out
addr16
jo
cld
hlt
scas
jb
mov
inc
push
xchg
aam
fiadds
into
mov
idivl
testl
inc
dec
add
push
popf
push
jne
or
push
mov
cmpsb
jge
inc
test
xlat
pop
js
xchg
add
or
cwtl
push
lods
pop
cli
inc
les
pop
add
sbb
xchg
cmp
mov
mov
jno
imul
in
push
xchg
pop
rclb
arpl
in
movsl
push
jo
cmc
push
add
es
pop
das
inc
xchg
mov
cld
cmpsb
jle
ret
pushf
add
negl
in
jp
dec
movsl
repz
adc
rcll
ret
jb
cmp
adc
and
mov
xor
pop
mov
pop
push
jmp
pop
or
push
push
aaa
mov
aas
xor
cs
sti
or
mov
les
icebp
cli
mov
data16
fmul
mov
or
in
loopne
pop
insl
sub
adc
mov
addl
mov
xor
ficompl
shl
pop
push
add
jg
push
push
push
push
stos
cs
xor
inc
xor
cltd
xlat
add
mov
je
sub
sbb
lods
in
push
sub
cltd
sub
mov
ss
and
in
mov
enter
iret
mov
jns
cwtl
addr16
and
sub
or
jl
scas
scas
loope
pop
les
fs
mov
adc
or
push
inc
out
movsl
xchg
pushf
into
or
js
and
mov
pop
mov
sahf
adc
xchg
mov
mov
push
cltd
mov
pop
adc
push
pop
ljmp
sub
addb
jo
out
pop
add
rorb
popa
test
imul
test
inc
or
lcall
inc
xorb
adc
mov
sbb
mov
pop
into
scas
lds
jle
test
pushl
and
sub
add
jbe
inc
adc
xchg
inc
add
jge
ds
mov
in
cld
xchg
out
inc
movsl
faddp
or
jo
pop
push
repnz
cld
adc
lea
pop
inc
aam
push
iret
fcmovu
push
xchg
test
sahf
repz
cli
adc
mov
test
roll
add
xchg
jb
sbb
xchg
mov
push
cld
int
jle
jnp
sub
scas
add
icebp
ret
imul
cmpsl
mov
in
sar
cld
pop
insl
sbb
and
push
push
cmp
xchg
sub
and
popf
rorl
subb
jbe
addr16
ret
int
stos
inc
in
pop
inc
xchg
adc
jo,pn
sub
outsl
imul
mov
xor
ja
daa
test
xor
mov
mov
out
inc
aam
cmp
jb
sahf
sti
or
mov
clc
or
in
sbb
dec
pop
jae
call
imul
and
daa
loopne
inc
out
cmpsl
push
pop
xlat
ret
ret
scas
rcrl
adc
aad
xchg
cld
popa
fwait
dec
push
add
mov
lahf
sti
mov
test
clc
mov
shr
adc
mov
outsl
xchg
test
and
rcrb
jo
mov
pop
aad
push
lret
and
xlat
daa
ror
jg
add
inc
cli
mov
xchg
gs
xor
scas
incl
sbb
scas
xchg
stos
pop
or
lea
jmp
inc
cmpsb
adc
sub
int
mov
xchg
clc
ja
xchg
cmp
in
cltd
sbb
push
pop
xor
jle
ret
lods
jmp
loopne
and
fisubrl
inc
cmp
sbb
jmp
adcb
inc
and
jge
mov
jp
push
push
fdiv
cmp
leave
rorl
orb
inc
test
clc
movsb
dec
repnz
cmpsb
dec
iret
sti
je
outsb
mov
shlb
addr16
add
adc
mov
pop
and
in
es
mov
rclb
push
aas
xlat
es
mull
pusha
pop
mov
dec
jnp
cmpb
xor
repnz
sbb
jns
cmp
cmpsb
push
movsl
gs
push
lea
or
cs
je
ret
hlt
arpl
mov
jg
cld
outsb
mov
sub
push
clc
xor
mov
cmc
popa
and
add
clc
shll
cmc
lret
pop
aaa
jl
jne
xor
in
stos
adc
adc
lds
negb
pop
jbe
lea
clc
add
pop
push
xchg
div
mov
clc
mov
pop
out
bound
sbbb
pop
and
clc
xchg
fnstenv
push
dec
mov
xchg
xchg
adc
mull
ss
add
lock
adc
sub
jb
cs
or
xorb
jb
add
add
repz
add
jne
imul
addl
pop
imul
sbb
sub
addl
jp
or
add
push
ljmp
adcb
daa
adc
js
pop
jns
xor
or
push
lahf
cmc
or
jle
pop
xrelease
in
adc
add
cmc
data16
xchg
pop
mov
nop
imul
or
nop
out
insb
notl
in
mov
negb
clc
pusha
aam
incl
xor
in
dec
push
jmp
dec
and
or
xor
ljmp
add
jmp
adc
jbe
xchg
sub
inc
xchg
push
inc
or
xor
outsl
jb
outsb
je
jae
ja
inc
add
inc
pushl
add
outsl
pop
jne
push
andb
mov
jb
je
testl
repz
out
adc
je
jb
std
jne
bt
daa
jae
out
mov
jmp
lock
js
js
add
add
push
add
js
out
sbb
aas
out
push
jns
aas
sti
int
xor
loope
lods
lret
outsb
push
cwtl
jl
cmpl
sub
xor
mov
mov
in
inc
cmp
jecxz
mov
mov
sbb
pop
lods
and
xor
and
sbb
repnz
mov
push
bound
xchg
cld
xchg
dec
int
add
jmp
ret
sbb
mov
in
push
cmpsl
add
das
incb
outsb
mov
and
jl
fnstsw
jmp
xchg
fldl
sbb
push
shl
cli
mov
add
repnz
aam
into
jl
movsl
outsl
push
inc
sbb
bound
bnd
adc
sub
enter
push
and
sbb
xor
shl
sahf
sub
push
or
imul
std
mov
push
cmc
in
sub
lcall
push
call
test
mov
sbb
test
jne
mov
adc
cwtl
add
mov
repnz
cld
imul
mov
dec
popf
or
repz
pop
push
mov
mov
jg
pop
xchg
test
push
cmpsb
jecxz
inc
mov
cs
dec
mov
repz
in
xor
rcll
push
mov
ss
adc
mov
in
add
loopne
add
std
lahf
mov
inc
add
mov
pop
push
mov
sbb
xchg
popa
cltd
cltd
test
fwait
jnp
daa
pushf
pop
mov
sahf
mov
popf
pushf
test
adc
movsb
cltd
stos
jle
ret
pop
lcall
xor
lds
sub
sbb
das
aas
cwtl
push
dec
shrb
aad
in
pop
movsb
fcoms
fwait
cld
xchg
negb
add
test
rcr
clc
loope
daa
inc
cmc
loope
add
fs
jl
mov
or
es
clc
scas
das
cli
xor
fiaddl
into
pushf
sub
outsl
ret
push
jbe
mov
out
sahf
mov
sarb
cld
repnz
test
jp
js
mov
sub
in
jp
not
negb
and
ja
decl
jecxz
adc
addr16
mov
ror
data16
and
or
cmp
push
test
inc
inc
cmp
lret
scas
sub
mov
jno
jo
xchg
pusha
hlt
adc
lahf
in
mov
daa
push
ss
xchg
mov
daa
cwtl
mov
hlt
sub
lret
cld
dec
iret
mov
test
sbb
cmpsb
test
push
dec
mov
scas
arpl
add
or
xor
repz
xlat
sub
addb
pop
aad
cs
xor
mov
dec
mov
dec
inc
push
inc
cli
orl
popa
fnstcw
lcall
ffreep
or
clc
arpl
outsb
adc
mov
and
cwtl
lret
sub
addr16
aam
outsb
je
jo
push
std
ret
pushf
stos
out
and
mov
pop
cld
roll
ss
xchg
jle
inc
std
xlat
in
enter
pop
jne
push
arpl
mov
inc
lahf
stos
js
cli
inc
out
adc
icebp
or
cmp
dec
fldcw
adc
daa
popf
cmp
and
cmp
cmp
and
shll
push
int
call
jl
stos
test
inc
ss
jg
sub
add
jl
ds
cmp
pop
cld
inc
xchg
jbe
pop
cmp
lcall
sub
cmp
mov
xor
les
testl
adcl
mov
push
test
jge
pushf
mov
cmpsl
inc
mov
int3
cld
xchg
in
xor
mov
mov
xlat
xchg
pop
in
imul
mov
cld
mov
sbb
push
and
fidivrs
sbb
pop
mov
lret
mov
pop
stc
and
cs
or
dec
ljmp
mov
xor
icebp
mov
jnp
ja
adc
scas
icebp
jb
sub
jge
int
mov
push
mov
out
push
nop
sub
inc
lret
jbe
add
cld
daa
clc
insl
cmp
cmp
in
loope
ret
in
stos
loope
mov
xchg
sbb
dec
or
dec
mov
mov
add
mov
push
iret
mov
idivb
pop
add
mov
jg
sbb
roll
xchg
dec
or
sahf
addb
pop
push
mov
daa
jge
mov
movsl
mov
cltd
jo
pop
shll
cmp
cmc
mov
inc
add
jb
dec
cmpsb
sub
sbb
lcall
cmpsl
xor
jno
sahf
add
mov
and
or
inc
dec
sbb
jecxz
adcl
int
jmp
rorl
mov
jno
mov
int
cld
inc
mov
mov
push
jbe
idivb
sub
int
repz
mov
lret
loop
sub
xor
push
movsb
sub
pushl
jns
jle
jmp
pop
push
mov
test
add
mov
sub
loop
mov
xor
mov
les
sbb
in
imul
in
jg
sbb
add
add
cmp
test
mov
out
stos
cmpsb
test
ds
add
nop
test
dec
pop
pusha
xorl
fisubl
nop
subl
add
push
sbb
sub
nop
mov
jle
fcmovnbe
xor
add
sbb
fcomip
imul
mov
popl
out
inc
adc
adc
sbb
and
xor
in
xor
cld
imul
adc
fidivrs
sti
fsubl
pop
pop
inc
push
scas
icebp
pop
pushf
in
and
mov
pop
popf
sbb
inc
lea
xor
pop
in
or
scas
lock
addr16
adc
and
xor
mov
pop
or
mov
clc
pop
and
xor
cmp
cld
xchg
push
aam
es
mov
fwait
mov
test
mov
ss
lods
mov
nop
sub
cld
loope
adc
ret
out
es
movsb
pop
mov
add
aam
xchg
lcall
pushf
cmpsl
jae
mov
push
data16
lea
inc
rep
mov
push
fs
mov
repz
xor
mov
sub
mov
cwtl
mov
cld
sbb
jae
jns
outsb
fnstcw
and
add
cld
popl
xchg
dec
jg
inc
dec
pop
sub
inc
int
stos
sbb
mov
out
inc
mov
inc
jno
dec
outsb
shll
push
and
mov
push
pop
inc
pop
sti
test
inc
insl
leave
ds
add
fs
repnz
idivl
xchg
jge
jle
aam
gs
xorl
jecxz
xchg
ja
xchg
jbe
scas
in
shll
cmc
arpl
pop
test
sub
or
sbb
push
mov
outsb
in
xor
cmpb
dec
pop
gs
cmp
sbb
lods
mov
cmpl
insb
loope
addr16
fsubrp
rorl
test
fidivs
scas
test
mov
dec
xor
mov
test
add
lcall
std
adc
sbb
sub
test
or
mov
dec
in
popa
mov
aam
es
ja
out
adc
pop
orb
add
iret
sbb
ds
cmp
mov
mov
or
jae
cmp
sbbl
dec
testb
or
lds
je
mov
xor
into
inc
cld
sub
das
and
orb
or
hlt
mov
negl
mov
mov
gs
mov
movsb
mov
subb
cmpsb
aam
mov
in
mov
inc
pop
mov
jp
sbb
sub
add
cmp
cld
and
and
sbb
push
and
aam
adc
push
cmp
jmp
addr16
ret
mov
sahf
lcall
out
in
int3
outsb
sbb
mov
dec
sub
cmp
push
mov
lret
sub
sti
and
inc
lock
cmpl
subb
out
cmp
pop
adc
adc
arpl
xor
fidivs
mov
mov
sub
jmp
mov
mov
and
xor
popa
push
push
mov
pop
jnp
adc
jle
cld
aam
sahf
dec
cmp
mov
inc
xchg
add
jmp
and
cmpsb
cld
sahf
sahf
push
pop
xchg
push
xchg
imul
jns
jge
cmc
add
adc
mov
cmc
fwait
aam
dec
movsl
cld
test
mov
jecxz
add
jb
pop
ret
aam
cmp
in
pop
pop
cmpsl
bound
push
xor
mov
sti
xor
adc
pop
cwtl
mulb
push
cld
sti
or
adcl
cmp
add
lret
mov
in
out
mov
aaa
rcrb
add
mov
shlb
add
sub
andl
gs
sbb
xchg
sbb
sbb
sbbl
mov
aad
insb
sub
mov
insl
movsb
pop
xchg
ds
inc
popl
sbbl
jno
sbb
pop
inc
outsl
divb
push
xchg
sbb
daa
and
inc
ss
xor
lcall
mov
sbb
pop
ds
cltd
sbb
inc
stos
ja
out
or
sbb
outsb
and
int
lret
push
decl
repz
mov
pop
push
int
pop
into
adc
cmp
dec
push
hlt
outsb
lcall
icebp
gs
pop
add
lods
inc
push
loop
mov
dec
push
enter
in
test
iret
inc
nop
dec
imul
fistl
popa
into
jle
loopnew
sub
and
xor
hlt
bound
cmpsb
frstor
div
test
inc
jle
mov
lcall
jge
fs
jmp
es
leave
xchg
jp
pop
dec
jg
std
div
adc
test
in
in
push
push
outsb
xchg
mov
jo
dec
push
push
enter
jnp
inc
xor
idivb
js
xlat
pop
in
cmp
adc
mov
cld
mov
pop
cmp
inc
jne
pop
push
roll
pushf
cld
mov
push
mov
pushf
cwtl
adc
and
mov
mov
mov
idiv
pop
push
mov
inc
dec
aaa
sbb
sti
in
in
pop
jmp
mov
sahf
jl
out
push
fimull
movsb
or
movsb
cltd
xor
push
inc
sti
or
cmpsb
out
mov
out
call
pop
lds
dec
rcll
fldl
xchg
cld
sub
sbb
jns
xorb
fwait
jmp
push
inc
xor
or
cltd
mov
js
sub
inc
popa
jmp
cltd
mov
mov
in
cmp
dec
cwtl
cmpb
cmp
insb
call
cmpl
imulb
xchg
ss
push
sub
ss
lret
jmp
xchg
xchg
mov
and
cmp
iret
neg
sub
jno
ds
mov
adc
cld
mov
je
sub
xchg
fldl
adc
mov
pop
jmp
mov
fdivrl
pop
pop
clc
xor
fidivs
daa
faddl
pop
dec
cwtl
mov
pop
jp
jo
inc
jl
ret
cmpsl
or
test
decl
xorl
repz
iret
ret
add
mov
jnp
sbb
outsb
fwait
xchg
call
sti
into
test
lcall
cmpl
mov
out
out
fnstenv
int
push
push
fistps
inc
push
imul
test
mov
test
adc
jle
stos
test
sbb
sub
mov
loopne
dec
cmp
dec
in
inc
popf
xchg
mov
in
negl
or
in
pop
int
ffree
cli
cmp
mov
xchg
mov
fcomps
adc
dec
adc
filds
inc
lea
sbb
push
xchg
cmp
adc
and
jmp
mov
cmp
les
popf
cld
cmp
insl
push
sub
into
into
mov
inc
xchg
stos
jg
cld
dec
lock
mov
stos
jp
jb
in
xlat
shlb
arpl
mov
inc
repnz
femms
flds
enter
cltd
outsl
mov
sbb
icebp
and
push
push
das
into
pop
cmp
mov
out
pop
scas
sahf
test
add
mov
das
push
jns
out
mov
aam
pop
rorb
outsb
test
cmp
jno
mov
fs
imul
inc
adc
inc
sahf
out
ret
lret
or
or
jb
mov
hlt
stos
scas
int
js
testb
movsb
ret
xlat
rcrl
call
rclb
xchg
adcl
cmp
sbb
ret
in
ds
xlat
add
inc
mov
out
test
loopne
fisubl
sti
mov
sbb
lret
aam
pop
test
pop
add
aam
scas
pop
fnstenv
cmc
ret
aaa
cs
scas
xchg
ljmp
and
adcb
push
mov
cltd
pop
movsb
mov
gs
out
xor
outsl
push
sbb
scas
jmp
push
stos
ret
test
or
inc
data16
adc
roll
or
iret
add
hlt
call
fimuls
sarb
in
inc
repnz
int
in
gs
inc
push
pop
xchg
popa
loope
sbb
mov
push
mov
std
add
inc
dec
stos
out
notb
sahf
push
sub
lcall
cltd
aam
xor
push
cld
scas
pop
xor
or
jle
in
and
les
adc
cmc
cltd
mov
pop
mov
mov
js
pop
inc
mov
mov
jae
lods
cmpsb
jae
pop
mov
pop
scas
repz
adc
outsw
cmp
roll
enter
test
subl
push
mov
insb
add
outsl
mov
in
mov
adc
outsb
fwait
inc
and
cmp
out
test
in
mov
addb
jl
mov
stos
cmc
push
jns
xchg
scas
and
xchg
test
xchg
ds
dec
sahf
movsb
mov
stos
add
cld
mov
push
adc
xor
out
mov
rcl
leave
jge
ja
in
sub
ficomps
jne
inc
aam
sbb
sar
in
jnp
mov
dec
leave
ja
cmpsb
icebp
mov
stc
in
nop
lret
cld
pop
jmp
aaa
add
xor
mov
movsl
in
mov
cmpsb
lods
je
cs
xchg
sbb
movsl
or
or
pop
and
stc
mov
pop
cwtl
pop
pop
cld
leave
inc
ss
dec
mov
in
shll
je
in
ljmp
xor
out
jmp
pop
mov
jns
sub
jl
jmp
cmp
sbb
lods
sbb
fwait
sub
scas
jbe
mov
ss
lds
sbb
xor
sysenter
inc
dec
cld
scas
xchg
inc
movsl
sub
ret
push
roll
pop
sbb
scas
ja
jae
xchg
mov
aaa
cwtl
sbb
sbb
pusha
in
and
jmp
mov
adc
add
test
dec
aaa
push
mov
imul
out
insb
loope
mov
fmull
xor
adc
movb
fs
ret
and
in
cltd
cwtl
sti
fnsave
negb
push
loope
pop
imul
jo
mov
jmp
data16
ret
scas
jle
inc
mov
jne
movsb
sbb
sbb
js
and
fnsave
adcl
psrlq
mov
jecxz
outsb
sub
dec
xchg
fiaddl
daa
xchg
bound
mov
scas
fs
sbb
in
fwait
mov
cmp
mov
cs
and
scas
adc
jo
jo
cmp
xor
clc
cmp
adc
popf
sbb
jno
dec
ds
cld
push
xchg
sbb
test
mov
in
jl
subl
and
jge
lcall
sahf
sbb
fcmovbe
in
sbb
cmp
out
fwait
int3
push
arpl
test
fwait
je
mov
sbbb
fiaddl
or
sbb
sub
ljmp
ret
add
stos
push
rcll
xorb
pop
fnstenv
mov
inc
jg
popa
or
push
ficomps
scas
mov
push
imul
lcall
repz
mov
aad
bound
mov
clc
and
pop
adc
add
popf
pop
add
jns
orb
loopne
mov
push
inc
jae
pop
sbb
jo
xchg
cld
ss
cli
sbb
xchg
lds
outsl
rorl
push
orb
cmp
aam
out
fpatan
into
sbb
jmp
sub
ds
cmp
cld
call
les
pop
pop
nop
stos
add
push
icebp
ret
mov
adc
test
adc
or
xlat
sbb
daa
cld
in
out
js
test
xchg
ja
insb
pop
test
lcall
cmpsl
ds
test
fldl
hlt
xchg
pop
cmp
jmp
pusha
andl
clc
ret
out
push
lahf
je
stos
js
inc
rcrl
jge
dec
movsb
into
mov
sub
mov
sarl
mov
add
mov
mov
inc
xchg
jno
dec
scas
sarb
sub
sub
enter
cmp
into
dec
cld
mov
clc
test
das
jge
sbb
or
xlat
cld
in
andl
or
test
sbb
je
lods
aaa
pop
cld
jle
cmp
ror
and
cwtl
adc
add
push
stos
pop
mov
ss
jns
pusha
xlat
arpl
and
cmp
fistpll
ds
sub
subb
xor
xor
icebp
jo
add
cli
xor
mov
in
into
jecxz
pop
jae
popf
xchg
stc
cld
cmp
gs
and
fimull
arpl
jge
pusha
lcall
xchg
xchg
lds
ss
ss
pop
scas
lods
pop
out
lcall
call
popa
lds
rcrl
je
fsts
sub
mov
test
pop
or
int
icebp
sbb
pop
sarl
cmp
sbb
add
insb
add
sub
jo
sbb
jns
jge
sub
jo
pop
jg
out
lea
fbstp
in
sarl
aam
mov
sbb
xor
or
sbb
dec
push
ljmp
stos
repz
loope
mov
mov
mov
mov
cmpl
fucomp
aad
pop
loop
mov
cld
je
cwtl
and
cli
mov
cmp
jb
or
das
ret
sbb
cld
nop
mov
testb
xchg
lcall
repnz
aas
test
xchg
je
sahf
cmp
jmp
cmp
cwtl
cli
cwtl
leave
loope
jns
je
aaa
sahf
xchg
ljmp
or
in
sub
sbb
dec
es
xor
cmpsl
cwtl
popf
xor
sub
outsl
mov
lea
mov
out
bound
inc
ss
pop
in
add
cltd
mov
lods
jmp
pop
xlat
daa
popf
xor
add
cs
pop
loop
dec
push
popf
nop
bound
aaa
into
push
and
in
fstpl
xchg
mov
rcll
add
add
inc
int
pop
aas
or
ret
rcl
push
aad
cmpsl
imul
idiv
mov
pushf
pop
aam
pop
test
pop
inc
aad
in
shlb
mov
shl
fdivrs
in
adc
mov
pop
repz
cmpl
andl
daa
push
cld
mov
mov
jae
pop
cmpl
sub
dec
sbb
jnp
xchg
push
add
mov
lret
mov
fs
sbbl
cld
sbb
int
push
add
fwait
jl
faddp
fistl
cld
sbb
cmp
in
bound
mov
cld
jp
popf
jl
cmp
sbb
jmp
cmp
mov
movsb
sahf
negb
inc
mov
jp
pushf
push
xchg
int
mov
push
js
lock
push
sub
lcall
and
notl
xor
cmp
cwtl
lret
or
jae
or
jb
mull
sbb
push
xchg
out
mov
cld
movsb
repz
rcrl
cmp
int3
xchg
push
adc
hlt
mov
add
in
pop
inc
test
mov
js
sub
js
cld
inc
arpl
inc
mov
test
into
ds
in
loope
ss
inc
xchg
add
mov
and
xchg
or
xor
clc
outsb
fldl
xlat
sbb
sub
pusha
cwtl
sahf
ljmp
and
faddl
ficompl
xor
add
dec
cld
enter
repnz
jecxz
jl
push
lds
daa
ret
sarl
outsl
cld
and
adc
stos
xor
xorb
xor
mov
xor
pop
mov
mov
cmpsl
sbb
jle
mov
pop
push
pop
das
xchg
in
jbe
insb
push
das
loop
aas
aas
ja
les
cltd
je
sub
mov
jl
lea
andb
mov
mov
sarl
mulb
lahf
cmpsl
xchg
sbb
ss
dec
xchg
iret
inc
sahf
xchg
adc
nop
in
fsub
movsl
rcpps
pop
leave
pop
xchg
dec
jge
pop
push
ja
sub
cld
and
jne
mov
iret
inc
in
jle
iret
mov
sub
nop
repz
adc
or
pop
rolb
xchg
sbb
push
cmp
xor
mov
mov
scas
in
repnz
out
notl
mov
sahf
pop
arpl
adc
rcl
push
pop
rclb
sbb
aas
inc
pop
shrb
jl
cmp
sbb
xchg
cmc
ret
mov
jno
pop
repz
inc
push
sbb
xchg
adc
add
pop
jmp
pop
enter
scas
cmp
mov
mov
mov
xor
arpl
scas
icebp
sarl
jmp
ds
data16
popa
stc
loope
sbb
dec
in
dec
cli
scas
push
aas
xchg
test
test
xchg
test
mov
adc
or
shr
or
add
inc
rcrb
adc
or
or
iret
and
sub
add
std
lcall
push
inc
fnstsw
jg
fs
jle
movsb
cltd
cmp
icebp
push
fs
test
mov
add
inc
push
insb
inc
es
push
outsl
decl
sarb
sbb
fistl
xor
jno
leave
inc
mov
repnz
push
data16
ss
pop
ja
addl
popf
dec
stos
out
movsb
xchg
into
ja
icebp
outsb
in
cmc
pop
aaa
dec
push
mov
insl
leave
call
xchg
in
mov
cmpsb
jecxz
inc
into
test
nop
icebp
fcompl
push
fs
push
sbb
xlat
cmpsb
dec
cmpsb
stc
es
cld
pop
cmp
lods
adc
scas
or
add
mov
jg
callw
pop
mov
rcll
inc
pop
loope
inc
sbb
pusha
xlat
out
negl
test
addr16
stc
in
in
or
push
repnz
inc
pop
pop
xchg
mov
outsb
ds
and
sahf
dec
or
pop
jnp
pop
cmp
jnp
and
add
daa
adc
pop
iret
jb
cmp
mov
dec
les
test
jb
xor
jae
imul
cs
xchg
push
sub
insb
in
inc
xchg
xchg
pop
subb
lock
cmc
lcall
cmpsb
push
shr
or
sbb
pop
push
cmp
lock
mov
push
sub
insl
push
mov
mov
or
pop
add
sub
mov
mov
cltd
mov
cmpsl
cmc
mov
xor
pop
pop
call
sahf
pop
inc
insl
pop
out
adc
loop
call
and
pop
push
cltd
jmp
lods
cld
insb
cwtl
inc
js
insb
add
pop
xchg
int3
mov
lea
shl
cli
jg
jo
mov
cmp
or
mov
adc
addb
ret
jp
sbb
mov
jge
cld
push
dec
jae
add
jns
adc
out
jbe
mov
je
fs
add
adc
les
mov
dec
cmp
js
jno
dec
pop
ret
popf
dec
icebp
pusha
mov
sbb
aaa
jmp
xchg
insb
ds
mov
push
mov
or
sbb
icebp
arpl
outsl
test
stc
dec
cmp
adc
movsb
mov
test
lods
and
lods
dec
ja
pushf
push
daa
mov
push
push
jae
test
mov
adcb
pop
mov
xor
dec
sti
sbb
add
ss
mov
outsb
fsubr
ficoms
add
mov
outsl
addr16
lret
mov
fwait
in
pop
jp
lcall
and
out
dec
movsb
les
xchg
jne
cltd
call
or
lahf
xor
push
mov
filds
cwtl
inc
test
xchg
or
or
fcmovb
cld
add
xchg
je
into
jecxz
cltd
mov
and
inc
js
insl
pop
xchg
fwait
dec
xchg
jmp
jns
xchg
pop
mov
icebp
pop
ficoms
dec
outsl
mov
in
cmp
sbb
cld
inc
and
xlat
mov
lret
or
js
xor
sub
and
sbb
sbb
cli
das
push
cmp
repz
ja
clc
sbb
jl
mov
popa
fstl
std
pushf
pop
lea
jns
push
fcoml
mov
fdivrs
cmp
mov
xor
pop
fnsave
jge
aaa
sahf
push
aas
mov
jo
scas
cld
inc
pop
aad
lahf
mov
rclb
and
gs
xor
fucomip
inc
cld
cwtl
inc
and
xchg
iret
shrl
shll
in
aaa
lret
out
sub
xor
sbb
daa
cmpsb
jb
mov
in
aad
in
call
test
push
jmp
mov
mov
rolb
xrelease
xor
cld
xchg
sbb
mov
inc
repz
add
insb
adcb
les
adc
push
or
mov
ret
pop
aaa
in
das
xor
daa
jnp
in
lahf
mov
pop
negl
lcall
sahf
popa
xor
es
stc
aaa
ds
or
in
cmp
inc
cltd
mov
movsl
sbb
cmp
cltd
pop
mov
add
out
icebp
and
cmp
shlb
jne
or
movsl
lcall
inc
push
icebp
adc
and
jg
popf
xor
adc
lret
xchg
hlt
in
sub
inc
mov
mov
pop
fldt
mov
mov
cmp
pop
pushf
movsl
pop
repnz
pop
fiaddl
sti
adcb
xchg
mov
cli
push
sbb
cmp
outsb
in
test
cmp
and
leave
push
inc
inc
adc
push
pop
and
pop
cmp
sub
inc
cmpsb
mov
nop
icebp
mov
jae
sub
fstpl
movsb
test
rcll
lret
mov
push
add
xorb
xlat
mov
es
push
lret
cmpsl
ljmp
inc
cmp
pop
mov
imul
pop
pop
mov
jns
add
stos
cld
add
push
sbb
cmp
cld
test
jb
pop
pusha
mov
daa
inc
fstl
xor
in
jmp
cmp
mov
cmp
int3
popf
mov
lock
clc
push
cmp
sub
fs
jg
cmp
jl
pop
adc
nop
mov
in
inc
fstpt
mov
loop
pop
cli
sub
daa
cmp
fistps
repnz
pop
push
cmpl
push
cmpsl
rcll
cmp
and
xchg
fsubrp
in
mov
fiadds
xchg
je
jns
js
movsb
ds
int
js
cmp
stc
cmpsl
jno
and
scas
jecxz
daa
mov
mov
xchg
scas
loopne
cmp
subb
ja
loope
mov
sbb
mov
dec
in
lock
fwait
aas
inc
hlt
cmp
sub
cwtl
aas
or
ljmp
inc
dec
scas
push
jg
sbb
or
fs
pop
iret
push
ja
dec
cli
dec
out
repnz
inc
pop
in
ds
cld
xor
sarb
or
xorb
cld
jo
xor
sbb
sub
test
and
repz
sub
pop
paddsb
cs
in
jmp
fnstenv
sbb
popf
psadbw
flds
xor
add
sbb
cmp
sbb
fistps
dec
xor
insl
cltd
not
pop
test
jns
sbb
mov
clc
das
out
pop
xchg
cvtdq2ps
mov
push
js
push
outsl
aas
jg
jne
sbb
scas
in
or
popf
repz
loop
leave
aad
fnstcw
sub
lret
mov
es
cld
mov
xchg
pop
adcl
fnstcw
push
dec
fs
repz
pushf
js
mov
sbb
rol
cmp
mov
roll
cmp
cld
lods
pop
mov
xchg
stc
arpl
shr
jmp
xchg
add
inc
pop
mov
int
fidivrs
ds
dec
out
pop
js
out
cltd
pop
imul
jp
add
jmp
sub
mov
mov
mov
dec
fmull
and
mov
jae
cltd
xorb
mov
mov
jmp
mov
jo
out
into
xor
sbbb
push
xor
push
jns
lock
push
dec
push
push
pusha
mov
mov
dec
adc
movsl
inc
mov
jno
mov
jmp
loope
lods
sbb
mov
fs
add
movsb
daa
popl
xchg
push
sahf
lods
adc
push
insb
fisubl
jge
xor
out
aas
js
lret
frstor
jne
xor
dec
add
or
xchg
push
jg
jg
fdiv
cmp
xchg
add
idivb
mov
cli
sub
das
fcomps
jne
mov
mov
and
movsb
fwait
mov
or
dec
mov
hlt
jo
xor
int
lahf
in
daa
cmp
fnstcw
sub
mov
cmp
iret
and
jb
push
cmp
cmc
dec
inc
adc
mov
sbb
lods
pop
add
jne
dec
cld
ud0
rorl
sub
mov
in
push
cli
jmp
fsubl
pop
pop
pushf
cli
pop
fsubs
xchg
cmp
cmc
inc
push
inc
mov
sbb
mov
xor
iret
cmp
xor
js
lcall
out
cmpsl
cmpsb
je
std
mov
sub
xlat
pop
inc
inc
mov
movsb
mov
inc
dec
inc
xor
adc
push
test
int
pop
div
leave
or
sti
xchg
ja
jbe
jnp
dec
xchg
ficoml
jg
cmp
outsl
outsb
dec
lock
sbb
imul
and
sbb
inc
xchg
call
repnz
dec
mov
clc
mov
or
loope
int
stos
das
add
inc
push
or
cld
inc
movsb
outsl
in
mov
cmp
js
cmp
or
jmp
sbb
cmc
inc
cmc
aam
dec
ficoml
add
inc
xchg
ss
cld
xchg
or
scas
ficomps
sub
inc
popa
mov
dec
stos
jns
inc
jae
add
fs
cmpsl
insb
mov
enter
cmp
push
jmp
cmc
rolb
jbe
cmp
cmp
ds
cmp
push
push
lods
xor
das
repnz
sarl
push
pop
inc
loope
jle
inc
adc
push
mov
xchg
test
gs
xchg
lods
inc
insb
clc
adc
test
adc
faddp
push
xlat
sbb
out
das
xchg
in
cmpsl
fstps
faddp
xchg
popa
jg
xchg
scas
in
push
jl
fisubs
repz
xor
pop
movsl
leave
jecxz
aad
fcomps
or
adc
insb
cltd
jp
sbb
xchg
aas
imul
inc
jmp
test
mov
push
daa
jnp
inc
sub
in
scas
mov
pusha
and
push
sahf
push
je
jae
aad
mov
int3
mov
cmp
cmp
add
dec
icebp
cmp
repnz
stc
in
sahf
or
mov
shll
loop
stos
cvtpi2ps
int
jb
cmp
mov
jno
mov
sbb
addb
sub
cld
adc
das
movsl
into
and
lret
lods
in
pushf
fldenv
lcall
jb
lods
push
fs
jecxz
std
inc
std
out
shrb
xlat
cmp
inc
sbb
ds
dec
lahf
xchg
loopne
stc
out
pop
in
hlt
push
or
cld
cmp
pop
sarb
sahf
cmp
pop
jle
adcb
int
inc
and
cmp
fs
lcall
popf
sub
sbbb
mov
cmp
jno
jle
sti
jmp
cmpsb
imul
pop
mov
xchg
ret
push
push
popf
inc
adc
aam
in
pop
cld
pop
sub
xlat
inc
jmp
aad
fstl
idivl
jns
fwait
pop
jmp
push
inc
or
xor
mov
push
lahf
push
push
iret
inc
push
mov
test
cld
pop
dec
inc
sbb
add
sarb
pop
mov
fs
sbb
sbb
dec
cld
adc
pop
movsb
or
rclb
pop
sub
xor
or
fcmovu
inc
addl
out
add
call
adc
dec
cmpsl
adc
in
ficompl
aas
xlat
jmp
mov
jmp
or
cmc
dec
jmp
xchg
setle
in
inc
or
arpl
jecxz
mov
or
sbb
stos
or
push
test
sbb
ror
ret
mov
jns
call
sbb
leave
in
movsb
in
mov
mov
sbb
add
repnz
or
xlat
xchg
hlt
std
sti
mov
ret
xor
test
add
cmp
cmp
sbb
fldl
sbb
es
xor
push
sub
mov
stos
xor
mov
cmp
push
inc
stos
jge
cmp
out
lods
pop
cmc
mulb
in
pop
aas
sub
out
or
adc
in
popf
dec
sub
add
cwtl
pop
inc
int3
das
mov
xchg
inc
insb
jmp
inc
daa
jge
xor
jmp
js
mov
sbb
pop
je
pop
std
xor
pop
lahf
xchg
in
inc
enter
cmp
std
inc
xchg
lcall
jnp
dec
into
sub
leave
jae
sub
pop
lea
push
push
jae
scas
sbb
sub
xchg
and
add
mov
enter
sbb
sub
mov
shld
in
repz
inc
xor
js
lods
xchg
dec
std
daa
fistpl
jnp
popa
in
jbe
addb
mov
rcr
pop
and
imulb
rclb
int
push
inc
add
data16
sub
sbb
in
and
es
ret
mov
jle
aam
inc
pushl
mov
loopne
lods
mov
dec
pop
stc
xchg
xchg
dec
xor
jo
and
cmc
shr
jno
mov
cld
xchg
ret
sbb
cltd
push
cmc
add
jl
xchg
ja
pop
insl
adc
outsb
sarb
and
or
push
adc
cmp
orl
clc
outsl
in
lock
jecxz
xchg
pop
cmc
adc
lret
into
mov
and
jecxz
mov
cwtl
jecxz
stos
rorb
jg
test
test
fbld
sbb
mov
cmp
scas
and
int
in
data16
push
rorb
pop
sbbl
jecxz
push
jmp
push
lcall
ds
inc
arpl
cltd
ds
push
aam
xor
test
repnz
mov
pop
popa
xorb
mov
in
sbb
ret
cmpl
outsb
loop
lret
rcrl
add
das
fnsave
icebp
icebp
jno
inc
leave
je
outsb
inc
in
mov
daa
nop
pop
daa
shl
mulb
movsl
cmp
add
arpl
lret
std
out
xchg
cld
shr
aas
xlat
decb
and
jecxz
lret
enter
jb
push
cld
shll
lcall
jne
pop
xchg
pop
jb
jecxz
in
gs
lahf
jl
dec
test
jb
and
adc
sti
sbb
cli
insb
into
cld
push
mov
jne
addb
in
mov
and
push
mov
inc
mov
sub
xchg
or
loope
stos
insb
lea
cli
dec
fldz
adc
fdivl
in
pop
jp
pop
push
pop
movsb
xchg
push
pop
jmp
insl
lods
movsl
cli
or
mov
popa
cmp
lahf
xchg
add
sub
adc
repnz
sub
repnz
jb
jmp
push
pop
cld
aaa
test
sub
stos
js
in
lcall
out
and
push
add
hlt
sahf
push
pop
push
pop
cmp
jl
jle
flds
out
pop
sti
add
mov
lods
fwait
loop
leave
faddl
pop
aaa
pop
jne
popf
fisubl
ds
in
icebp
adc
add
cmpsl
lds
add
sub
roll
test
scas
test
outsl
dec
pop
push
lds
stos
shlb
ja
xchg
or
adc
ror
lock
jae
cwtl
stos
lahf
dec
mov
outsl
dec
dec
js
xchg
cmp
rorb
inc
cld
push
cli
rcll
pop
and
das
test
test
int
es
jle
cmp
inc
jnp
mov
mov
inc
push
fstl
sbb
test
add
mov
add
adc
inc
mov
cmp
stc
lods
mov
mov
nop
lret
clc
mov
lods
mov
cmp
sub
cmp
movsb
fsubr
inc
push
mov
in
inc
adc
mov
andb
jmp
lea
mov
adc
and
js
out
fcmovnb
dec
lods
cltd
jae
jecxz
jp
mov
addr16
repnz
test
jecxz
icebp
mov
inc
imul
rcrl
outsl
xor
jno
pusha
aaa
int
pop
mov
and
ds
test
lods
sub
mov
subl
cld
sbb
loop,pn
enter
mov
mov
ds
add
movsb
fidivs
cmp
out
xor
in
xchg
or
sbb
inc
out
push
jne
mov
xchg
sbb
in
repz
ret
push
cmp
fistpl
in
neg
mov
xlat
mov
ret
shlb
fsubs
push
push
mov
fstl
xchg
in
sub
mov
cmp
orb
mov
repnz
repz
fldl2t
sbb
xor
rolb
pusha
insl
repnz
ret
mov
xchg
xorl
cmpsl
inc
imul
cmp
movsl
ret
cld
pop
call
sar
cmpsl
out
pop
insl
xor
mov
lock
jle
inc
and
or
repz
icebp
fwait
outsl
adc
in
lods
add
pushf
cmpsb
ret
cs
sahf
fadds
dec
dec
mov
scas
jmp
inc
lods
movsl
jp
in
or
xchg
or
push
fs
test
and
mov
mov
pop
lahf
xchg
mov
cli
adc
lret
or
sbb
inc
pop
cmp
popa
pop
push
out
push
inc
add
mov
loopne
imul
pop
push
cmp
fisubrs
pushf
cmpsb
push
push
adc
mov
cwtl
push
aam
inc
ficoml
in
xor
lahf
idivb
jmp
ja
cld
fs
sbb
sar
adc
cmpsl
and
sbb
sarl
xor
mov
push
sub
imul
xchg
scas
mov
cmc
bswap
out
mov
das
or
mov
cli
adc
ds
cld
dec
push
mov
ja
sbb
mov
dec
in
jmp
dec
clc
push
mov
stos
imull
jbe
or
mov
in
mov
in
jb
cmp
out
pop
push
jmp
stc
mov
cmp
inc
pop
fcomi
cli
cmpl
aaa
es
cltd
add
in
sti
mov
ljmp
cwtl
mov
stos
arpl
jge
and
xor
and
clc
or
stc
pushf
inc
arpl
into
push
js
adc
push
adc
clc
testb
pop
push
clc
rcrl
dec
jmp
push
push
jae
mov
sbb
cmp
or
sbb
mov
dec
pop
jne
and
idivl
push
add
clc
call
push
xor
xor
cmc
cmc
sti
cmc
imul
xchg
adc
push
or
xchg
add
scas
mov
ja
sub
out
add
in
jmp
lock
addl
jg
aaa
push
jne
jg
icebp
aaa
and
int3
xchg
pop
jo
idiv
pop
xrelease
ret
testl
outsl
push
notl
aaa
mov
mov
test
xchg
sahf
ljmp
pop
add
divb
testl
js
jmp
lds
ret
ljmp
aaa
idiv
xor
adc
add
jo
test
mov
jp
out
mov
je
xchg
jp
pop
add
adc
jns
cld
lods
in
repnz
pop
sahf
hlt
imul
xor
inc
in
or
das
clc
adc
adc
add
inc
icebp
clc
pop
hlt
das
adcl
cli
testl
ss
outsl
xchg
xor
jle
add
pop
aaa
divb
insb
lock
std
or
addb
clc
adc
mov
lock
incb
insb
mov
dec
add
repnz
adc
cmc
jg
imul
imull
add
paddb
push
and
add
stc
cmc
jbe
sarb
jmp
inc
aas
dec
inc
or
sub
addl
cli
arpl
push
or
lret
cmp
stos
and
into
sub
cmp
cmpsl
add
lds
inc
out
negl
mov
and
sbb
xlat
xchg
inc
popa
lods
cli
out
in
lods
mov
shrl
jo
lock
cld
xchg
jl
andb
mov
aas
jno
add
xchg
rclb
mov
das
dec
ss
int
dec
cmp
cs
ret
mov
sbb
sarl
cmpb
jp
xor
pop
sti
adc
lods
arpl
fstps
repnz
mov
mov
ja
daa
jb
jmp
push
daa
push
int
xchg
xchg
cwtl
adc
ss
ds
jae
pop
xchg
arpl
cltd
inc
repnz
mov
xchg
in
rolb
inc
push
mov
fdivp
jno
cmp
in
pusha
aaa
mov
int
fidivs
sbb
test
mov
ds
lods
dec
insb
sahf
loope
cmp
flds
jmp
inc
mov
push
outsb
mov
aam
insb
add
aas
out
andb
jecxz
cmpsb
outsl
pop
mov
sbb
mov
clc
inc
loop
rorl
jnp
cs
stc
add
shlb
dec
addr16
jl
jecxz
fnstcw
test
movsb
ja
sub
shll
inc
add
cmp
jmp
andl
jae
ja
sbb
roll
clc
cld
imul
and
push
daa
fcomp
mov
lret
movsb
movsl
xor
cmpsl
jno
push
imulb
int
pop
int
sbb
inc
bound
ficompl
ja
test
xor
fisubs
sub
mov
mov
sbb
or
pop
in
sbb
je
in
mov
in
loope
cmp
push
jecxz
mov
mov
out
flds
in
insl
outsl
jl
cs
ss
pop
cmp
xchg
in
sahf
test
sub
mov
ret
mov
mov
jbe
sbb
pusha
cltd
xchg
pop
mov
jmp
sub
adc
dec
lret
cmp
imul
jmp
in
or
xchg
or
in
cmp
push
pop
lds
xchg
leave
dec
stos
je
pop
pop
bound
mov
cmp
loope
insl
lds
call
sbb
rcll
cmp
roll
jl
fstpt
mov
cmc
aam
mov
pop
cwtl
mov
pop
add
pop
lds
mov
push
out
jmp
cld
adc
ljmp
mov
hlt
scas
push
sbb
cwtl
jmp
mul
dec
xchg
pushf
mov
ret
outsb
in
sbb
mov
pavgw
mov
aaa
sub
cmp
sti
jecxz
or
lcall
ds
cmp
mov
mov
jle
pop
lds
jg
lods
adc
sbb
jns
xor
xlat
data16
sbb
in
cld
pop
pop
mov
pushl
ret
clc
repnz
pop
ret
scas
cmp
and
sahf
mov
cwtl
cld
sbb
hlt
inc
in
pop
in
sbb
jge
ret
adc
lea
jge
push
out
je
jne
mov
pop
pushf
xchg
repnz
cmp
cmpsb
adc
fcmovbe
jmp
imul
aam
jns
xor
xchg
jp
add
out
stos
stos
and
jns
pop
dec
in
xlat
xchg
outsb
and
inc
inc
adcl
mov
dec
arpl
jbe
mov
add
sbb
cmp
sub
roll
idiv
xchg
loop
cmp
cld
sub
pop
fiaddl
repz
sbb
hlt
fyl2xp1
nop
mov
sbb
add
xchg
repnz
jge
stc
scas
in
pop
clc
sbb
sub
sahf
sahf
or
inc
lahf
pop
xor
fiadds
adc
stc
ljmp
jg
imul
pusha
pop
and
jp
dec
pushf
dec
inc
in
mov
inc
cmp
add
sub
int
xor
pop
stos
or
mov
pop
icebp
adcl
mov
popa
push
or
movsl
jns
imul
sbb
mov
push
add
pop
xor
icebp
nop
in
inc
mov
out
pop
pop
add
jne
push
lcall
dec
call
lock
or
gs
fbstp
push
ds
mov
clc
push
insb
das
lcall
div
pop
or
adc
addr16
xchg
jl
repz
rclb
sti
push
fcmovb
xor
mov
inc
in
mov
sub
clc
fwait
add
pop
stc
mov
jmp
test
xor
mov
lcall
insl
mov
popa
stc
dec
push
xchg
dec
sbb
das
inc
cld
gs
std
cld
dec
fstl
movb
cmp
nop
pop
sbb
sarl
push
mov
sarb
mov
mov
push
xor
push
xchg
out
clc
or
movsl
das
es
push
jg
ss
cmp
mov
xor
xchg
mov
cmc
pop
mov
cmp
mov
das
sbb
cmc
add
rclb
rcrb
or
lret
cmp
xchg
xorl
push
int
cmc
stos
and
and
hlt
out
push
pop
sub
sti
js
dec
and
mov
in
cli
fcomp
pop
jmp
push
leavew
add
cmpsl
add
lea
stc
icebp
lods
cmp
pop
stc
push
test
push
daa
jbe
jbe
push
loopne
push
out
movsb
jmp
jmp
mov
and
jmp
lods
cmp
inc
gs
mov
out
pop
cmpb
cmp
mov
xchg
xchg
enter
stc
inc
sbb
cmp
sbb
lret
xchg
mov
pop
xchg
mov
cld
sub
clc
xor
sub
mov
mov
cwtl
incl
imul
iret
xchg
mov
ja
mov
push
mov
sti
jl
ljmp
decb
pop
inc
imulb
outsl
js
pusha
out
rclb
pop
jae
in
mov
jmp
test
ss
xlat
daa
dec
push
leave
cmp
lods
repz
cmp
lea
lahf
mov
sbb
cmp
pop
cmpsb
add
mov
pop
push
inc
fwait
std
xorl
incb
lock
addr16
mov
mov
xchg
adc
jl
fs
and
mov
sub
fst
notb
mov
dec
pop
lock
sbb
pop
sbb
cwtl
cli
jmp
pop
xchg
lock
mov
dec
maxps
pop
mov
sub
shlb
inc
sub
xor
mov
repnz
pop
pop
xchg
sub
pop
rorb
dec
add
mov
add
in
cmp
cmc
test
xchg
cmpsl
movsb
mov
je
lock
enter
xchg
lret
xor
out
adc
pop
mov
addr16
pop
dec
push
push
mov
mov
ror
loopne
pop
mov
leave
jl
icebp
pop
aaa
xor
cmp
mov
add
mov
cmp
add
add
and
shrl
or
mov
mov
add
push
fsubr
out
push
les
cmp
nop
mov
lahf
sub
push
jne
filds
jle
jp
lret
add
xor
mov
subl
mov
imul
sub
test
jne
je
add
jbe
cmp
ja
mov
push
movsl
stc
ss
push
and
addl
cmp
dec
ja
sub
rolb
sahf
leave
pop
mov
jl
lret
cmp
xchg
data16
gs
fucomp
test
rcl
mov
jle
cwtl
js
xchg
scas
jnp
fs
inc
dec
mov
push
test
push
fildl
sbb
adc
jg
push
ja
fistpll
inc
sti
mov
sub
aam
imulb
dec
rcr
add
outsb
adc
dec
xchg
mov
fsubrs
dec
sbb
icebp
dec
jecxz
shr
jmp
add
daa
cwtl
ja
rcl
inc
xchg
mov
lds
lahf
adc
jno
out
testl
cwtl
inc
and
jmp
adc
addb
sub
cmpsl
lret
aas
add
and
inc
sub
xchg
outsb
pushf
icebp
mov
test
ror
jno
out
add
mov
jecxz
decb
push
out
cmpsl
dec
jo
mov
cli
cmp
ja
pop
sbb
leave
sbb
inc
pop
stc
pop
shl
push
out
sbb
mov
in
in
mov
pop
push
dec
push
dec
mov
icebp
inc
testb
xchg
and
or
mov
add
dec
inc
adc
cmp
lret
rolb
cmp
push
jp
notl
loopne
ja
mov
mov
ds
sbb
dec
stc
mov
cmp
scas
subl
fcoms
mov
jmp
mov
lock
pop
push
xor
pop
push
dec
mov
jmp
add
pop
stc
push
and
push
xchg
inc
sub
xchg
xor
fldenv
pop
jns
sarl
or
or
sub
mov
sbb
iret
or
call
mov
inc
in
sbb
cmc
mov
push
repnz
pop
xlat
dec
enter
dec
cmp
lods
cmc
push
inc
pop
inc
xor
dec
pop
cwtl
and
stc
je
adc
aas
mov
lcall
mov
aas
push
sbb
and
xchg
pusha
push
stc
xchg
inc
lahf
clc
mov
test
imul
lret
pop
cld
nop
cmc
dec
cmp
mov
mov
je
jl
sbb
jge
xor
mov
nop
push
pop
push
mov
xchg
pop
push
lcall
nop
mov
jl
sbb
jp
or
clc
int3
pop
stc
push
sahf
jae
inc
sub
pop
pop
mov
add
and
mov
xorl
xor
outsb
and
int3
push
stc
cmpsb
imul
pop
lea
cld
dec
sbb
rcl
daa
cmp
sub
inc
jo
jl
xor
sub
pop
xor
sbb
jl
mov
lcall
xchg
stc
jmp
es
pop
shrb
sub
adc
lea
mov
cmp
inc
sbb
stos
cmp
mov
leave
xchg
or
push
mov
dec
xchg
pop
sarl
adc
sbb
movswl
dec
mov
gs
rolb
pop
push
xchg
stos
movsl
xchg
cmp
lret
std
jns
sbb
ds
mov
lods
icebp
into
out
incb
int
mov
ror
push
js
addr16
sbb
rep
xlat
lcall
inc
daa
fcmovnb
or
mov
enter
jo
ret
inc
add
push
out
pop
cmc
inc
dec
push
mov
mov
push
dec
stc
test
jp
in
or
inc
repz
and
stos
mov
jg
cltd
fisttps
in
or
test
push
imul
pop
push
push
xchg
lret
mov
mov
pop
sbb
push
inc
xlat
rcll
sbb
gs
cmp
dec
stc
mov
lea
xchg
mov
jl
xchg
ja
cmp
push
mov
dec
in
mov
in
adc
fistpll
ja
mov
mov
pop
cmpsb
push
lcall
cmp
jmp
push
pop
out
rolb
arpl
imul
push
xchg
mov
into
inc
pop
sbb
mov
jo
ja
add
std
enter
lahf
ljmp
pop
jmp
rcr
sahf
test
add
xor
fcmovne
or
push
cmp
inc
rorl
pop
stc
pop
ds
je
fsubrs
mov
cld
movsl
or
idiv
jns
sbb
std
lock
jns
cli
in
enter
push
testb
js
and
mov
sbb
xor
jmp
mov
sahf
pop
sbb
lret
xchg
cmpl
movsl
pop
xor
sub
mov
imul
shrl
mov
cmpb
jmp
sub
fistps
xchg
inc
rcrb
scas
xchg
mov
sbb
repnz
in
out
mov
dec
mov
xchg
divb
int3
out
clc
repz
push
pop
stc
cli
jne
arpl
push
jmp
mov
daa
mov
mov
jne
sbb
jns
push
out
sbb
jp
negl
mov
cmp
mov
add
sbb
lret
jmp
shrb
inc
jp
cmp
pop
andb
mov
add
add
xchg
mov
in
movaps
or
sub
sbb
sbb
mov
jl
sbb
push
cmp
popa
xchg
jne
subb
cwtl
test
inc
out
pop
and
sub
inc
icebp
dec
cltd
mov
pop
mov
push
aad
xor
mov
mov
loop
xchg
rolb
push
mov
pop
push
cmp
pop
stc
jns
push
or
les
jecxz
sub
fnstcw
popa
jmp
testb
vmwrite
negb
adc
cli
icebp
aaa
sbbl
pop
sbb
jae
push
sbb
imulb
or
stc
cltd
and
push
push
dec
clc
das
outsb
pop
stc
cmp
mov
push
sti
push
popf
jae
mov
es
cld
sub
mov
sub
idivb
dec
test
rolb
sbb
fcomps
and
aam
mov
lods
jp
adc
fiadds
pop
js
lds
bound
jns
sti
xor
mov
xchg
aad
sbb
ret
or
sbb
data16
int3
pop
stc
sub
push
adc
push
xorb
cld
cmpb
mov
ds
popf
test
mov
xchg
pop
arpl
notb
gs
jl
xchg
sub
cmc
push
pop
fstps
outsb
shr
adcl
lock
xor
je
add
vpmuludq
mov
es
inc
ja
pushf
pop
mov
lea
mov
mov
movsb
pop
sub
int3
push
push
push
mov
add
imul
into
lock
dec
dec
and
insl
js
push
add
sbb
dec
shrb
popf
adc
bound
dec
cltd
mov
sub
mov
mov
dec
pmovmskb
fbld
pop
test
testl
cli
jge
fadd
push
repnz
mov
clc
pop
sub
push
js
jno
leave
mov
lahf
xchg
popa
stc
cmp
pop
test
mov
push
jmp
gs
dec
sbb
arpl
sbbl
mov
adc
pop
jno
sbb
jge
and
mov
sub
stc
sub
mov
mov
jp
push
xchg
cmp
push
frstor
cmp
clc
sbb
test
in
iret
inc
stc
xchg
jns
pop
int
int3
inc
sarb
ret
icebp
jns
loopne
cwtl
movb
mov
out
push
pop
jmp
cmp
rclb
aam
pop
jns
sub
test
popf
or
sbb
out
bound
fadds
cwtl
pop
mov
and
adc
push
add
inc
jmp
ss
lea
xchg
cmpsb
jbe
pop
sub
xchg
inc
cltd
mov
aad
add
adc
jne
idivb
hlt
andb
notb
mov
push
loope
add
xchg
push
imul
and
pop
mov
push
in
je
bound
idivb
pop
dec
enter
cmp
fstps
mov
js
in
mov
jge
sbb
decb
pop
js
add
adc
ds
ret
iret
xchg
jp
cmp
ja
popl
or
mov
push
mov
jge
sbb
cmp
jns
mov
mov
sbb
test
popf
jmp
mov
nop
xor
sbb
xchg
pop
pop
push
xor
loope
repnz
inc
enter
cmc
rep
fs
call
testb
not
mov
stc
daa
cli
aam
lcall
into
push
cmp
dec
add
roll
sti
in
ja
dec
ficoms
test
add
xchg
xchg
pop
stc
jns
inc
xor
jp
jmp
push
xlat
add
dec
mov
cmp
sbb
cmp
ss
xchg
es
jo
cmp
out
in
cmp
jns
stos
std
ret
add
mov
jbe
pushf
pop
or
cmp
pop
das
mov
call
sbb
push
sbb
inc
pop
clc
gs
fisttps
mov
lods
push
cmp
call
mov
cmp
arpl
xchg
fs
cwtl
nop
jmp
jnp,pt
xchg
jns
ja
xchg
mov
imul
fildll
cltd
cs
aas
sub
cmp
sbb
mov
cmp
aad
or
sub
sbb
jne
int3
jmp
and
xchg
fcompl
dec
mov
mov
aaa
push
test
pop
aad
sub
clc
repz
add
or
jnp
cmp
adc
cmp
add
out
enter
sbb
pop
movsl
stc
pop
xchg
mov
cmc
jb
or
and
push
inc
xor
loopne
in
dec
pop
int3
sub
push
add
adc
je
mov
jmp
icebp
cli
inc
les
jns
aaa
sti
in
and
xchg
jp
lock
pop
call
push
mov
sarb
xchg
mov
negb
sti
mov
push
xchg
mov
sbb
ljmp
mov
insl
dec
rcll
outsb
rcrl
jns
xchg
jecxz
ret
or
dec
cmc
arpl
cmp
cmp
fcoml
loop
cmc
push
shll
lock
cs
or
jns
sbb
push
inc
jmp
mov
imul
pop
cmp
popa
fdivr
cmc
cltd
inc
scas
dec
jmp
cmc
mov
popa
daa
pop
stc
sbb
sbb
pop
pop
mov
pop
leave
out
imull
mov
fs
cli
jg
stos
mov
sbb
xor
dec
mov
stc
pop
fldenv
js
sti
imull
gs
sbb
cmp
pop
js
push
cld
in
cmp
sbb
mov
outsb
or
outsl
ja
jl
daa
js
cmc
mov
stc
cli
jb
mov
mov
arpl
xchg
arpl
test
jo
push
push
jl
ja
jg
psrlq
add
into
pop
inc
mov
insl
ss
cmp
sbb
jne
xor
hlt
lods
cmpsb
add
ja
addr16
mov
in
inc
pop
cli
push
push
addb
dec
push
push
loopne
or
shrl
cmc
flds
icebp
cli
repz
mov
iret
imul
cmpl
push
cli
scas
fcmovnu
notb
mov
popa
icebp
imul
pop
add
pushf
push
pop
pop
cmp
sbb
and
mov
jmp
push
xchg
ss
jp
push
retw
cmp
stc
mov
sbb
cmp
cli
shrb
jnp
inc
repnz
flds
arpl
imul
jmp
sub
pop
loope
mov
cltd
test
and
jl
and
push
enter
dec
xchg
jmp
scas
jns
imul
pop
andnps
or
je
loop
add
jmp
lods
cmpl
mov
xchg
imul
sbb
jnp
cmp
call
scas
idivb
test
rcll
sbb
mov
jg
pusha
cmp
xchg
mov
push
pop
push
add
mov
dec
push
push
ljmp
out
popa
jmp
mov
sbb
xchg
or
xchg
cli
sub
push
lock
pop
mov
push
cmp
out
jne
stc
cli
sahf
push
mov
xor
inc
cltd
imul
out
pop
jmp
std
mov
cli
xchg
adc
cmp
jecxz
addb
idivb
jmp
sub
mov
push
push
cmp
jae
pop
and
fldenv
adc
mov
stos
andl
test
loope
xchg
mov
mov
lahf
push
icebp
sub
pop
imul
rclb
pop
cmp
adc
mov
add
push
dec
stos
pop
jmp
dec
and
out
ret
movsl
mov
pop
push
push
cmpb
jle
sub
out
adc
mov
pop
cld
xchg
movsb
jb
jl
jae
jbe
stc
cmp
sbb
push
cli
arpl
out
out
fdivrs
and
pop
jp
add
test
or
stc
and
and
imul
mov
push
push
dec
dec
std
push
lcall
sub
mov
jmp
pusha
stos
or
lock
mov
scas
cmp
inc
add
push
xor
lret
stc
fldcw
mov
adc
adc
pop
cli
js
stos
popl
sbb
das
push
jg
cld
dec
sbb
lret
push
in
sbb
xor
imul
mov
es
mov
mov
dec
pop
adc
xor
pop
push
jae
inc
stc
pop
push
jecxz
in
sbb
pop
mov
iret
push
jbe
jg
mov
pop
jle
insl
add
iret
stc
mov
add
test
inc
fsubs
aaa
mov
inc
cli
mov
stc
hlt
into
push
in
fdiv
xlat
ret
mov
popf
inc
js
mov
or
cmp
mov
pop
inc
mov
mov
scas
out
jae
stc
mov
mov
cltd
stc
push
mov
dec
sar
adc
stc
cmpsb
fdivrp
outsl
int
adcb
inc
dec
repz
xchg
stc
and
mov
cltd
pop
rorb
mov
mov
xor
mov
jbe
fistpl
inc
fmul
icebp
loope
cmp
adc
stc
out
cmp
repnz
jmp
ss
cmc
lret
test
dec
jmp
pop
and
imull
stc
mov
mov
jae
mov
push
out
call
pop
mov
dec
adc
push
stc
cmp
inc
aam
loope
stc
mov
xchg
pop
ds
xchg
stc
jo
je
inc
pop
subl
arpl
xlat
inc
cmp
sti
push
sbb
cmp
lock
aaa
in
shrl
lods
test
daa
lcall
jne
sub
adc
aad
int
repnz
mov
pop
ss
stos
sbb
sub
pushf
scas
lahf
sbb
xor
pop
cltd
mov
or
pop
add
mov
cld
sbb
jmp
xor
push
in
adc
xor
cmp
dec
test
cli
lcall
sti
dec
push
pop
or
pop
or
mov
sahf
adc
fdivs
sbb
fisttpl
push
into
xchg
cmp
cmpb
xor
fdivs
pushf
stc
fs
push
xor
push
in
cmpsb
leave
jl
add
jns
cmp
stc
stos
adc
outsl
ljmp
js
movsb
xchg
aas
jmp
push
add
and
push
icebp
inc
pop
or
popa
adc
int
dec
call
dec
imul
jl
stc
inc
pop
cmpsl
shrl
jne
sar
sbb
push
push
mov
scas
lret
add
jne
dec
imul
push
sub
push
test
adc
sub
inc
cwtl
ret
out
xor
dec
in
add
jg
cmpsl
es
inc
rcl
add
mov
sbb
stc
pop
daa
push
sub
dec
lahf
stc
mov
or
hlt
xor
jne
jmp
movsl
js
or
sbb
xor
test
das
dec
lock
sbb
pop
add
xchg
lods
into
bnd
idivl
out
stc
xchg
cwtl
lods
xorb
mov
jge
negl
jb
dec
dec
call
addb
and
loope
daa
stc
push
sahf
pop
test
lahf
aas
cmp
stc
js
dec
jno
xor
fwait
enter
pop
mov
add
jecxz
and
test
and
cmp
pop
xchg
out
pop
sarl
stc
adc
repz
jbe
stos
mov
adc
out
cwtl
inc
cmp
js
push
aas
repnz
int
scas
inc
mov
xchg
fwait
jmp
cwtl
sbb
add
arpl
in
stos
mov
pop
mov
shll
mov
fsubs
mov
stc
ja
pop
inc
or
cwtl
lds
daa
and
loope
jmp
ds
mov
iret
jbe
mov
in
call
stc
and
xor
nop
pop
xor
gs
clc
xlat
jle
movsb
into
in
jne
sub
in
xchg
adc
mov
jmp
stc
pop
popa
nop
das
test
mov
aad
stc
sbb
inc
sbb
dec
test
gs
stos
push
orl
xor
cmp
ret
inc
dec
push
icebp
add
push
test
scas
pop
adc
fsts
fsubrs
mov
negb
mov
mov
pop
jnp
mov
xchg
jmp
imulb
stc
jns
inc
adcb
cs
js
cmpsb
mov
stc
mov
add
jp
call
jnp
jns
mov
sbb
jae
push
cmp
cvtpi2ps
push
push
xchg
mov
rcr
mov
lret
xor
jmp
and
inc
xchg
push
mov
push
stc
jmp
loope
mov
cmp
loope
cmp
xor
or
jno
cmp
push
test
push
in
adc
outsl
sar
fistl
push
and
add
cmpsl
inc
xchg
adc
ret
in
adc
movsb
insb
jno
inc
rclb
add
pop
sbb
mov
test
bound
notb
adc
pop
aam
mov
arpl
in
cld
into
pop
dec
dec
outsl
xlat
repz
push
sbb
push
or
push
shlb
cmp
hlt
in
aaa
inc
pop
cmp
jno
jo
sbb
ja
mov
lods
push
sub
push
cs
sahf
das
or
or
and
mov
push
sbbb
add
pop
jbe
pop
stc
std
loope
popf
cmp
sbb
cld
cmp
mov
lods
push
xchg
jmp
jmp
in
push
cmp
fs
sbb
icebp
xchg
pop
in
cmp
and
stos
adc
jecxz
addr16
mov
pop
clc
imul
scas
call
mov
and
andl
jbe
cmc
daa
hlt
mov
sub
mov
jg
jne
pop
jnp
or
sbb
call
dec
push
xor
pop
sub
mov
shrl
ret
pop
cltd
insb
aad
bound
ss
lds
adc
push
pop
xor
adc
xor
cltd
mov
cmpsb
shll
repnz
or
adc
or
or
sub
mov
fcoms
repz
cwtl
push
xchg
loope
xor
loop
sub
popf
push
outsb
xchg
xchg
call
xchg
aad
iret
pop
mov
cmpsl
cmp
sbb
sbb
or
fsubs
fistps
cmpsb
adc
int
mov
je
mov
icebp
repnz
aas
cmpsb
test
icebp
add
in
adc
cwtl
jbe,pn
je
pop
sbb
xor
lock
fmuls
add
mov
ss
daa
aaa
xchg
lock
pop
cmp
and
mov
sbb
sbb
inc
dec
outsb
cltd
js
adc
mov
mov
xchg
and
js
jecxz
cmp
mov
inc
jns
jbe
nop
lret
push
jno
mov
dec
mov
pop
icebp
xchg
js
rclb
imull
hlt
mov
loope
or
or
fidivrs
jge
ss
out
mov
inc
mov
mov
stc
repnz
cmp
lcall
test
cmp
fmuls
test
sti
sbb
inc
cmpsl
outsl
mov
fcomp
loopne
cwtl
mov
dec
ss
fdiv
or
call
clc
lcall
rcrl
rorl
pop
int
ror
and
add
jmp
hlt
push
cmp
sarl
icebp
lds
lock
dec
stc
jmp
sub
pop
push
fiadds
adc
push
mov
sub
sbb
repz
in
inc
cmc
push
xchg
mov
pushf
stc
je
dec
and
mov
stos
and
imul
movsl
leave
ja
insb
rcr
sbb
icebp
aad
jno
pop
out
pusha
push
lock
xor
mov
addb
xchg
push
pop
addr16
jl
pop
jmp
loopne
sub
jmp
cmpb
add
mov
jnp
xor
mov
sbb
testb
sbb
and
scas
push
sarb
sar
or
push
arpl
stc
daa
jb
scas
jg
fs
scas
pop
or
mov
in
sti
lret
test
or
popa
fnstcw
xor
cwtl
pop
ret
push
sbb
or
push
icebp
xchg
jmp
outsb
es
stc
fstps
mov
imul
inc
aaa
shl
add
mov
nop
jl
fstl
aad
stc
adc
jae
mov
adc
mov
cmp
or
mov
add
mov
shrl
cmp
sarb
icebp
fwait
and
and
subb
jb
in
in
nop
push
or
pop
ss
stc
jbe
sahf
mov
adc
jb
push
in
rolb
or
adc
push
add
imul
add
mov
adc
jae
adc
add
leave
aaa
mov
scas
cwtl
or
lock
sbb
sbb
je
and
inc
mov
imul
push
ret
cli
popf
cmp
push
sbb
icebp
je
jg
cmp
fst
jmp
inc
sub
ret
lret
fstl
insb
into
in
push
cld
mov
xorb
dec
sub
pop
lret
outsb
in
adc
sbb
push
lock
negl
imul
mov
cmp
jne
and
rcll
repz
jo
add
xchg
roll
loopne
xchg
jnp
dec
in
lcall
pop
out
push
loope
or
mov
and
rep
in
in
stos
movsb
fiadds
popf
mull
ret
fmull
mov
outsb
lret
pop
movl
stos
pop
aam
push
and
out
inc
push
push
shlb
sbb
inc
inc
test
out
mov
mov
in
test
sbb
rep
fdiv
inc
repnz
sti
jb
enter
xor
ret
xlat
cmp
jns
imul
popf
aaa
fdivl
ss
movsb
sbb
cmp
cmp
outsb
aas
adc
decb
lods
push
push
jne
jo
cmp
out
cmpsl
jmp
loope
jbe
adc
repnz
adc
xchg
loope
xchg
jg
lock
xlat
daa
call
in
add
mov
push
lods
xchg
inc
or
jne
cmpsb
mov
ds
in
jno
xchg
or
sbb
dec
add
in
stos
push
push
xchg
xchg
jp
outsb
inc
dec
jbe
jmp
xlat
dec
adc
add
clc
bnd
ret
lock
into
cli
sbb
push
sbb
sbb
dec
dec
and
rol
test
movsl
pop
mov
adc
mov
idivb
lods
inc
sbb
aam
cmpsl
jbe
xlat
insb
mov
aam
out
in
hlt
inc
test
and
je
adc
xor
inc
xor
sbb
sahf
xor
mov
xor
xchg
jns
in
xor
jl
in
sbb
addr16
pop
jmp
and
insl
jmp
pushl
mov
add
js
add
mov
xor
cli
fldl
lock
cmpsl
jno
sbb
inc
xlat
sbb
cltd
xchg
push
notl
enter
xchg
ficompl
mov
sahf
pop
add
aam
in
cltd
mov
call
pop
stos
sub
mov
push
aad
loopne
gs
daa
insb
jne
sub
push
imul
js
cmp
xor
lock
mov
cmp
cmpsb
cld
or
jno
lods
in
adc
into
pop
insb
scas
mov
xchg
xchg
pusha
cld
mov
mov
jbe
lahf
jno
and
cmpsl
mov
or
jb
ror
call
xor
mov
cmp
stc
jbe
mov
pop
push
pop
insb
sbb
jnp
sbb
jbe
sub
lods
cmp
dec
xchg
sbb
xchg
inc
lahf
cmp
inc
icebp
add
xor
setbe
mov
loope
inc
mov
cmpsl
sbb
xor
icebp
lods
out
xchg
sub
mov
xlat
mov
adc
outsl
aaa
jae
mov
xchg
sbb
sti
push
push
loope
lods
inc
mov
lea
ret
mov
or
push
or
test
add
add
push
inc
mov
repz
aas
fiaddl
daa
sub
inc
or
adc
cld
clc
and
mov
out
inc
mov
stc
incl
arpl
in
rol
mov
icebp
jnp
sub
and
repz
rorl
stos
xchg
cmp
push
sbb
mov
negb
ljmp
leave
fs
mulb
inc
sbb
inc
xchg
cmpsb
nop
int
fldenv
fisubs
sbb
pop
jle
out
sarb
mov
outsb
cmpb
repnz
jl
cld
jnp
js
cltd
sub
sub
jae
mov
xchg
stos
iret
jge
sub
cmpsl
xor
cmc
icebp
mov
cwtl
mov
inc
sub
sub
inc
je
push
clc
fildl
shrl
pop
xlat
in
rcrb
std
in
sub
mov
js
ds
add
aam
push
cli
inc
fs
xchg
fwait
xlat
mov
push
scas
popa
insb
dec
cld
shll
and
adc
sub
sti
pop
outsl
out
push
sbb
sbb
mov
and
in
stos
gs
in
je
inc
cmp
lods
jne
mov
adc
adc
and
adc
into
insl
push
outsb
sub
das
or
jecxz
xchg
adc
aaa
push
adc
lea
cld
add
fldt
enter
adc
int
jnp
jle
stc
mov
or
xchg
cld
push
mov
jmp
js
insb
outsl
dec
dec
test
cmp
jecxz
scas
ret
xchg
pop
leave
inc
push
mov
in
dec
jae
push
xor
xchg
repnz
jns
hlt
cmp
loope
loop
or
lcall
cmc
hlt
scas
outsb
add
xor
inc
insl
test
aad
lods
sub
cld
arpl
push
push
jp
xor
jnp
cmp
addps
dec
and
mov
cli
push
es
je
cmpl
sbb
ss
int3
cmc
sahf
mov
mov
ret
leave
clc
sbb
adc
inc
outsb
daa
div
fisubs
dec
sub
mov
icebp
stc
ja
incl
int3
in
inc
push
stc
mov
jmp
fmull
dec
xorl
jo
jae
push
fs
data16
or
stc
pop
shll
pop
push
xor
loope
jmp
cmp
out
aaa
stos
push
stc
pop
lods
or
xor
fdivr
sbb
ret
and
or
ficoms
sub
decb
movsb
push
cmp
ret
add
repz
lods
push
cmp
and
sahf
out
add
je
or
xor
stc
mov
mov
mov
inc
frstor
out
mov
test
ss
mov
pop
scas
stc
aaa
shrl
lcall
in
mov
cmp
fcoml
xor
imul
out
outsl
out
xchg
jno
pop
pop
rcrb
xor
mov
icebp
push
sti
xchg
push
sbb
rol
fildl
pop
mov
ret
stc
inc
sbb
xor
push
xlat
push
xlat
rolb
std
lahf
test
jmp
adc
jge
jg
lods
call
jns
mov
pop
add
pop
decl
mov
and
fcomps
sub
or
sub
xorl
into
mov
add
fldt
cmpsl
iret
call
scas
or
xchg
pop
and
fsubrs
fs
aaa
icebp
mov
daa
lcall
or
sarl
jmp
sub
jg
and
cwtl
movsl
stc
enter
orl
xor
shrb
inc
stc
test
pop
cltd
jne
ds
icebp
or
ret
pop
and
cld
mov
and
icebp
lret
push
jb
pop
mov
mov
stc
jl
jg
dec
js
cmp
add
xlat
add
xor
push
into
jnp
stc
dec
cmpb
stc
pop
ja
aas
lea
shr
stc
pop
or
jmp
int3
lahf
cmc
stc
enter
sbb
xor
in
xorb
aaa
pop
idivl
daa
stc
cmp
pop
fdivrs
std
stc
rcr
push
mov
lods
loope
jmp
jle
jmp
dec
or
cli
repnz
add
in
loope
orl
xchg
fcompl
stc
and
mov
mov
cmp
add
lahf
int
jns
adc
cltd
mov
dec
test
or
mov
or
stc
sbb
dec
stc
dec
bound
mov
sbb
stc
cli
shrb
sbb
push
cmp
arpl
fwait
pop
adc
adc
cmp
stc
mov
xor
je
movsb
xor
or
test
stos
cmp
pushf
and
sahf
icebp
fdiv
cwtl
sub
lret
adc
jmp
aad
jb
xor
lds
sahf
jp
scas
mov
adc
scas
adc
stc
cmp
sbb
xlat
sub
adc
fcmovnbe
push
cld
mov
xchg
ja
idivl
bound
mov
mov
sub
repnz
add
add
ret
mov
and
xchg
stc
mov
lret
dec
bnd
test
mov
and
stc
insl
add
sub
jnp
stc
add
push
cli
cmpsb
or
test
in
jle
mov
adcl
dec
aam
rcr
sbb
sbb
hlt
stc
fld
push
imul
daa
inc
cwtl
dec
stc
or
std
dec
fcoms
add
mov
dec
jg
xchg
jno
mov
stc
mov
inc
jg
add
lret
imul
jo
cmpsl
sbb
adc
xchg
imul
jle
xchg
sti
add
mov
dec
or
aaa
js
daa
pop
sbb
jecxz
fcomps
mov
inc
imul
cmc
mov
mov
test
xchg
cmp
rorb
mov
add
ss
adc
sarl
push
lea
mov
jmp
sub
xchg
sbb
mov
js
and
pop
lea
aas
nop
stc
push
or
xlat
push
sbb
push
stc
push
rorb
and
sahf
cwtl
icebp
or
jecxz
outsb
loope
fistpll
sub
xchg
push
divb
cli
repz
cmp
xchg
shrb
xlat
cmpsb
and
hlt
das
cld
stos
stc
out
mov
in
push
mov
jne
mov
jmp
cmp
pushf
outsl
sarb
mov
mov
dec
xchg
lret
inc
fldl
stc
mov
xor
add
lds
in
cmp
popf
test
jno
std
cmp
stos
pop
lea
pop
xchg
shrl
adc
imul
dec
mov
or
pop
mov
fbld
mov
popf
roll
sbb
cmp
pop
movsb
cli
fwait
movsl
fdivr
mov
lds
popf
mov
xlat
lret
popa
stc
je
ret
jno
jp
mov
stc
stos
mov
out
mov
sti
pop
pop
out
jp
push
adc
mov
ljmp
lret
xor
pop
fs
movsl
sub
cld
push
jmp
push
popa
loop
cs
and
je
icebp
and
stc
push
mov
ja
int
and
mov
lcall
iret
jne
stc
loope
push
cmp
jp
push
decl
mov
pop
pop
xchg
test
dec
popa
nop
dec
jge
pop
dec
dec
je
inc
ds
ret
mov
stc
mov
sbb
xchg
jl
lcall
inc
and
scas
inc
cltd
out
decl
ds
sbb
xchg
shlb
pushf
inc
test
adc
in
xor
pop
adc
mov
pop
nop
jns
inc
int3
addr16
stc
xchg
cmp
push
movsl
xor
test
cmp
and
sub
add
xor
pop
dec
call
cli
add
xorl
test
aad
push
mov
mov
movsb
push
stc
push
dec
mov
cmp
adc
pop
mov
cmp
outsl
fimull
cmp
push
scas
loope
mov
mov
fnclex
icebp
inc
inc
fdivrp
test
aad
lock
inc
ss
pop
imul
ret
xchg
sub
mov
hlt
pushf
mov
and
xor
mov
addr16
pop
push
jbe
mov
fnsave
div
xor
xchg
out
jnp
inc
sbb
out
mov
lahf
js
xchg
repnz
jg
mov
push
push
push
iret
repz
adc
mov
push
mov
leave
push
cli
push
fwait
pop
adc
out
fiadds
ret
fstl
lahf
pop
mov
adc
sti
add
idivl
mov
stc
mov
push
xor
mov
popf
add
out
icebp
inc
add
stc
fs
loope
aad
or
pop
cmc
pop
stc
test
or
rcrb
pusha
sub
loopne
iret
shr
jnp
repz
dec
stc
mov
lcall
cwtl
or
test
test
test
jnp,pt
sbb
les
ret
stc
xlat
repnz
inc
ret
rcll
stc
jbe
fsub
enter
stc
mov
mov
adc
cmpsl
pop
inc
mov
stc
mov
jo
loop
pextrw
or
repz
je
lahf
adc
stc
dec
scas
not
in
mov
ja
fstl
inc
xor
subl
shll
sar
push
jno
push
aaa
cld
push
xlat
jecxz
push
fldl
into
stc
xor
imul
jne
outsl
js
and
in
pop
call
cmpsb
push
sub
int3
bound
repz
inc
decl
xchg
xor
add
dec
in
sbbb
and
ja
add
inc
push
ror
mov
sub
xchg
movl
mov
mov
cwtl
and
jmp
sub
aas
lcall
jp
inc
xchg
fdiv
cmp
jle
fwait
adc
jne
mov
mov
mov
movsb
push
adc
mov
jno
pop
push
clc
inc
fwait
getsec
stc
sub
jg
mov
add
mov
pop
clc
and
dec
xchg
and
pop
dec
inc
insb
pusha
mov
in
sbb
andb
ja
sbb
insl
push
lea
jmp
cld
bnd
xlat
cmp
push
cltd
add
xchg
out
xchg
icebp
cmp
ja
fidivrl
xlat
cmpsb
xchg
jge
unpcklps
lds
in
test
push
or
or
push
lock
pop
nop
adc
popa
and
mov
mov
aaa
xchg
xchg
out
jmp
adc
fwait
stc
lods
int
andl
mov
mov
jmp
frstor
sahf
bound
les
stc
pushf
pop
or
mov
outsl
push
and
mov
sbb
xchg
xchg
pop
stc
orl
lods
insl
inc
inc
add
push
sbb
xchg
pop
xlat
xchg
mov
daa
and
jns
jl
dec
dec
push
stc
mov
xchg
mov
xchg
jmp
aas
dec
enter
sbb
inc
inc
fadds
mov
mov
stc
mov
adc
fmul
jge
popf
aas
stc
or
cmp
mov
cmc
fistpl
pop
loop
stc
sub
sub
and
sbb
scas
and
xchg
std
jne
sub
adc
out
push
pop
stc
sbb
pop
add
stc
adc
and
in
arpl
jp
adc
mov
shl
stc
inc
cli
fidivl
mov
repnz
outsb
cmpsb
call
sti
add
lret
icebp
popf
lret
insl
xchg
test
inc
pop
das
inc
stc
in
push
stos
adc
cs
stc
mov
xchg
sub
inc
movsb
stc
insl
andb
ret
mov
xchg
in
adc
aad
fimull
add
mov
fdivs
out
push
inc
add
mov
sbb
cmpsb
sbb
mov
adc
js
xor
stc
repz
ljmp
push
add
xor
stc
lock
int
push
out
bnd
cmp
mov
stc
movb
fsubs
das
div
stos
sbb
jne
jge
jp
xor
mov
cmp
stc
jmp
std
outsl
loope
ds
pop
dec
lock
xlat
stc
es
fisttps
fcomps
lods
mov
fnstenv
pop
push
push
fmuls
jmp
pop
pop
and
jbe
mov
adc
lret
pop
stc
adc
add
cwtl
insl
and
stc
dec
cmp
leave
or
shrl
pop
pop
adc
imul
mov
stc
xchg
and
clc
push
cmp
loope
loopne
lds
adc
pop
mov
xchg
xchg
sbb
sub
inc
cmp
stc
cmp
data16
fdivr
and
test
popa
outsb
adc
cmc
push
sarl
rorb
push
and
loop
std
xlat
mov
fldl
ja
push
dec
std
sbb
push
mov
dec
mov
fcoml
and
sahf
mov
mov
imul
sub
add
fwait
stc
jmp
add
sbb
pop
mov
in
cmp
ss
repz
push
mov
sbb
fyl2xp1
and
into
les
insl
push
lock
cmc
sti
add
in
js
mov
cli
sbb
mov
je
xchg
gs
fdivs
mov
stc
out
sbb
or
aam
cwtl
inc
xchg
test
sbb
mov
mov
lds
leave
mov
push
cld
xor
aad
shl
jmp
popa
dec
pop
dec
fadds
mov
mov
mov
jbe
iret
adc
repz
adc
stc
leave
dec
fiadds
xor
xor
in
add
cmpsl
and
push
stc
adc
push
fyl2xp1
pop
aam
jmp
or
and
sti
repnz
xor
xor
fistpl
push
lods
cmpb
mov
sub
pop
pop
sbb
fs
and
sbb
dec
push
cmpsl
inc
xchg
loopne
outsl
adc
add
in
les
fists
cmp
ljmp
mov
cmp
push
clc
stc
shlb
outsb
orl
inc
or
sub
jbe
jnp
repnz
push
cmp
lret
je
stc
and
stc
jle
or
cmpb
mov
lahf
mov
stc
loopne
sbb
cmp
jno
pop
fs
sbbb
and
jmp
gs
inc
mov
stc
lds
adc
leave
adc
std
out
cwtl
dec
and
mov
aam
jmp
enter
lds
leave
jns
stos
inc
sbb
jge
lcall
stc
fwait
push
sar
inc
lahf
mov
jecxz
loop
stc
into
inc
idivl
jmp
adc
outsl
xchg
loop
scas
stc
xchg
sahf
lods
shll
pushl
add
push
movsb
not
xchg
gs
sub
rolb
mov
lods
inc
stc
pop
rorl
shrb
stc
lods
and
push
sbb
lods
divl
out
out
test
stc
jge
mov
nop
mov
jnp
stc
imulb
adcl
sqrtps
mov
mov
and
imul
adc
dec
lret
je
mov
mov
icebp
mov
jb
lock
cld
rcll
out
pusha
fs
adc
pop
int
sahf
ja
jecxz
inc
mov
stc
inc
adc
stos
es
mov
pop
stc
sub
pop
stc
cmc
out
cld
dec
jle
add
fadd
rolb
hlt
jge
je
push
sub
dec
mov
push
and
jb
scas
or
xchg
mov
ja
mov
cmc
mov
iret
mov
add
add
push
lds
fnstsw
dec
sbb
add
rcrb
mov
or
add
call
mov
iret
fidivrs
mov
repz
cmp
mov
inc
icebp
push
push
mov
outsb
xor
hlt
int
pop
mov
mov
jb
loope
xchg
dec
icebp
andb
into
test
add
int
sbb
add
fiadds
xchg
adc
mov
xor
subb
test
jmp
aam
mov
imul
js
bound
sub
out
out
or
ret
cmpl
fidivs
xchg
test
sbb
lret
lcall
dec
stc
sbb
sahf
mov
icebp
fidivs
pop
fwait
stc
inc
pop
sub
in
add
push
push
sub
pop
mov
out
jmp
repz
aad
addb
imul
mov
mov
dec
fs
jmp
cmp
je
insl
lret
mov
and
ss
fcomps
mov
mov
jnp
mov
jo
fucomip
ljmp
stc
mov
js
xchg
cmp
mov
push
cld
xchg
or
xchg
jge
and
inc
pusha
mov
pop
shlb
stc
sbb
nopl
dec
pop
jle
into
add
xchg
inc
stc
add
cltd
mov
add
loope
imull
mov
in
mov
loop
outsl
pop
test
in
push
mov
shrb
test
sti
mov
sahf
jmp
xor
mov
push
cmc
insb
and
fiaddl
cmp
stc
divl
adc
imul
jae
push
stc
adc
pop
test
jp
stc
xor
mov
sbb
jnp
iret
fdivrs
sub
fcmovbe
mov
mov
jnp
sbb
rclb
dec
loopne
outsl
pop
mov
xchg
inc
add
pusha
in
test
jnp
xor
inc
notb
jo
sbb
stc
lret
dec
in
jno
test
fwait
pop
loope
push
stc
ja
stos
cmpl
jmp
mov
out
mov
insb
stc
in
add
lock
jle
std
out
outsb
sbb
adc
stc
xor
lret
in
repz
mov
xchg
out
addb
stos
cmp
sahf
add
adc
jo
jmp
stc
jl
mov
or
stos
out
jno
ret
stc
call
imul
stc
ja
aaa
cs
pop
cmp
ljmp
insl
stc
and
xchg
sbb
mov
int
out
xchg
adc
mov
std
inc
aas
fildl
inc
jmp
stc
aam
ds
adc
enter
out
stc
pop
mov
jno
and
pop
pop
inc
dec
shrl
xlat
cli
xchg
ret
sub
xchg
std
pop
push
cmp
mov
stos
sbb
shr
and
mov
add
cwtl
lret
sahf
jmp
sbb
pusha
sti
jge
aam
imul
push
push
xlat
std
mov
je
xchg
push
jmp
add
push
push
stc
rolb
stos
xor
in
xor
movsb
stc
into
js
outsl
cltd
dec
push
mov
repnz
lock
push
ret
sahf
stc
ret
push
stc
dec
addl
or
add
xlat
rorl
cmp
loope
mov
test
inc
arpl
inc
movsb
mov
ja
cltd
loope
adc
mov
inc
cld
decl
sbb
insb
or
and
stc
sbb
lds
cmp
stc
xor
arpl
lods
add
sbb
hlt
stc
fldt
cmp
xchg
stc
fstpl
add
xchg
sub
mov
mov
fiadds
pop
push
cs
xor
leave
pushl
call
push
jle
mov
aad
inc
lahf
mov
cmp
cmp
cmpsb
dec
or
stc
fisubrs
shlb
add
adc
aas
aaa
sbb
dec
mov
push
add
adc
xor
icebp
subl
and
stc
push
push
pusha
pop
imulb
out
stc
into
call
push
mov
inc
test
stc
sbb
inc
shr
or
jp
adc
loop
xor
outsb
fistps
or
cwtl
xor
fsubl
push
push
cld
leave
mov
mov
ljmp
jnp
mov
add
jbe
add
dec
jle
loop
jl
out
lcall
xchg
stc
stos
jg
movsl
or
in
cs
dec
stc
push
jecxz
movd
jno
loop
or
jbe
lcall
push
jnp
inc
aam
push
pop
dec
stc
cmc
es
out
pop
cltd
in
sub
das
and
lods
bound
iret
mov
xchg
xor
xchg
xchg
stc
inc
add
adc
xchg
stc
js
fimuls
pop
mov
mov
mov
jecxz
lds
imul
jae
push
xchg
icebp
cmpsl
dec
push
jns
dec
xchg
adc
shll
xor
sub
dec
xlat
pop
adc
push
mov
scas
movsb
fidivs
pop
dec
fs
insb
and
mov
fiadds
out
mov
fwait
shl
jo
fcoms
xor
xorb
jae
fidivrl
in
pop
addl
jmp
pushf
xor
lds
add
cmp
push
shlb
inc
cmpsb
xor
stc
jg
mov
xor
int3
sub
adc
aaa
cwtl
pusha
pop
jmp
outsl
or
dec
and
std
cmpsb
stc
add
sbb
sbb
adc
lods
call
and
adc
sub
cmpsl
decl
dec
stc
push
and
inc
mov
ljmp
out
push
mov
ret
and
shl
dec
cmp
insb
pop
rolb
stos
cwtl
fwait
stc
mov
pop
inc
das
add
sbb
loop
jmp
fdivr
mov
aad
cltd
sbb
shrl
xchg
cmp
insl
clc
nop
push
cwtl
out
in
out
add
enter
sub
jp
int
jns
jmp
pop
or
and
add
pop
jbe
ret
inc
cmp
hlt
jecxz
jle
mov
xchg
repz
jmp
pop
shrl
dec
stc
lock
popa
sbb
cmp
xor
stc
out
int3
or
xchg
nop
push
cld
psubusb
dec
adc
add
adc
jmp
mov
xchg
test
sub
inc
inc
push
stc
mov
jbe
cld
stc
lods
mov
fcmovne
xor
lret
jmp
pop
xlat
sub
mov
adc
icebp
into
mov
ret
adc
cmp
fisubs
xor
stc
loope
mov
sahf
stc
inc
add
inc
popf
mov
sbb
out
xchg
mov
lds
sub
popa
dec
repz
call
movaps
pop
cmp
stc
loopne
scas
push
lahf
sti
sbb
mov
sub
cwtl
ss
lret
or
fs
mov
push
cmpb
insl
int3
jle
psubw
cmp
fs
stc
push
push
outsb
push
pop
jg
mov
cli
cld
das
add
stc
aas
cmp
xchg
add
sbb
stc
jg
cmc
and
clc
dec
call
pop
in
mov
int3
stos
push
mov
test
es
std
std
mov
nop
nop
adc
xchg
mov
cwtl
sub
mov
adc
mov
add
sbbb
and
cmc
leave
xchg
xor
pop
inc
cmp
fdivrs
das
in
popf
sub
insl
push
iret
adc
stc
icebp
mov
add
ss
ja
shll
xlat
mov
push
adc
sub
and
pop
or
jne
aad
icebp
push
add
mov
data16
xlat
clc
push
and
mov
loopne
stc
jg
cmc
push
outsb
enter
push
add
pop
pop
mov
xor
js
xor
in
aam
push
pusha
jnp
call
mov
data16
cmc
and
fucom
stc
ret
adc
fwait
xor
lods
das
inc
jnp
jbe
push
push
xchg
xchg
stc
sub
daa
jb
mov
stc
push
cwtl
pop
push
inc
mov
mov
int3
mov
sbb
pop
aas
loopne
dec
stos
je
mov
dec
loope
outsl
sahf
stc
jmp
fcompl
rcr
add
dec
jb
adc
subl
stc
push
add
mov
and
pop
cmp
in
rolb
xor
and
aas
mov
stc
and
mov
push
js
sub
mov
stc
imul
ds
dec
and
not
loop
xchg
imul
cmc
mov
mov
cmp
icebp
stc
hlt
fidivs
push
pop
sahf
stc
and
dec
cmpb
dec
or
xchg
and
icebp
out
idivb
test
rcll
jne
orl
aad
stc
jle
jns
add
sbb
lcall
das
stc
ret
shlb
testl
insb
add
xchg
mov
adc
pop
add
outsb
in
cld
sbb
lods
in
pop
shll
push
and
cmc
pop
pop
aaa
xor
cld
in
mov
aad
stc
in
addr16
pop
mov
push
stc
fistl
lds
filds
mov
stc
mov
xchg
or
movsl
ret
rolb
mov
sti
adc
jge
nop
loope
sub
sbb
cltd
adc
lahf
sbb
ficompl
inc
pop
xor
call
push
pop
dec
shlb
or
jo
lret
outsl
sbb
ret
outsl
mov
cmp
repnz
and
fistpl
call
ja
or
negb
sub
addr16
mov
cli
test
push
pop
mov
sbb
sub
nop
clc
push
mov
mov
jl
xor
cld
pop
aas
aaa
adc
mov
jmp
int3
in
sbb
mov
cmp
loop
imul
in
or
xchg
push
xchg
jecxz
inc
movsl
jns
push
inc
repnz
lea
mov
and
cmc
test
adc
jae
fs
lret
imul
add
sbb
adc
dec
inc
mov
enter
mov
mov
inc
out
stos
sti
cld
addr16
notl
sbb
jp
cmc
xor
cmpsb
cmp
and
dec
adc
les
nop
and
jp
fiaddl
dec
jbe
pushf
jnp
notl
gs
cmp
insb
aam
lods
cmpsl
daa
jno
js
push
or
mov
in
sti
sete
fcmovnu
mov
ret
or
xchg
cmp
sub
sbb
and
push
andl
in
sub
aaa
pop
pop
and
popw
nop
mov
jno
pop
outsb
and
xlat
push
into
call
inc
jb
sti
xchg
es
test
cs
daa
add
out
push
adc
mov
adc
push
jno
repz
leave
in
sbb
je
mov
roll
dec
ficoml
adc
cmp
pop
repz
inc
adc
dec
push
fdivrp
lcall
push
lea
xchg
pop
adc
sub
or
push
sbb
insl
call
fistps
fcompp
and
pop
xlat
cmpsl
addb
mov
push
ficompl
sbb
jo
jnp
and
outsl
in
sbbb
imul
movsl
std
je
mov
lock
out
push
cmpsw
jp
sub
cmp
loope
mov
fsub
sbbl
repnz
inc
divb
adc
lcall
pop
fcomip
jp
insl
jb
jns
sub
cld
push
xchg
out
push
cmp
pop
ret
mov
icebp
xor
jno
das
testb
sbb
ss
jb
inc
js
outsl
bound
ds
dec
pop
xor
sbb
cwtl
mov
arpl
add
lret
test
lea
sbb
hlt
stos
rorl
sti
filds
pop
aad
in
ret
xlat
push
call
cmpsb
int
cltd
std
lods
pop
stos
push
jp
les
into
adc
cld
fsubrp
sub
insl
adc
cmpsl
test
pop
js
loope
or
inc
loope
jecxz
loope
fsub
ret
xor
mov
inc
jo
clc
in
push
outsb
mov
out
mov
movsb
test
cmc
ficoms
je
cmpsb
xchg
xlat
ss
out
jecxz
lret
inc
sbb
pop
lea
mov
icebp
pop
mov
add
stos
xor
cmp
mov
leave
inc
das
mov
aad
addb
dec
and
pop
test
inc
adc
lret
in
sti
ss
aas
add
nop
icebp
jne
out
jne
aad
push
sub
inc
sub
orb
icebp
fcmovbe
add
jne
test
pop
and
mov
aas
lret
jle
jecxz
xchg
mov
cli
scas
iret
pop
je
pop
into
cli
inc
js
pop
pop
fdivp
xchg
jmp
push
mov
sub
std
mov
mov
jnp
mov
test
cmpsb
popf
scas
fadds
pop
or
ss
out
add
xor
stos
or
dec
repz
mov
icebp
stos
adc
popf
filds
loope
adc
mov
int3
xor
loop
sbb
test
hlt
scas
jo
je
clc
jle
cs
sbb
call
push
stc
test
stc
sbb
mov
push
mov
repz
mov
cmpl
idivl
mov
imul
pushl
aam
inc
int3
sahf
adcb
add
pushf
mov
mov
or
roll
sar
aam
test
jbe
lock
jle
fildll
or
xchg
stc
test
fdivr
mov
popf
movsl
or
sar
pop
sbb
insb
mov
cld
nop
dec
in
stc
nop
add
aas
add
shrl
inc
jmp
repz
inc
stc
in
hlt
subb
stos
decl
cmovl
adc
imul
js
test
fldt
adc
and
sbb
stc
scas
nop
mov
scas
dec
sub
popf
fidivs
mov
pop
lret
mov
fcmove
pop
shll
cmp
mov
outsb
icebp
nop
sub
iret
jmp
cmp
repz
call
pop
xor
repz
or
icebp
scas
cmp
rcr
push
cmc
mov
xor
adc
stc
call
popf
hlt
mov
sbb
cld
scas
xor
mov
sub
add
lock
sub
pop
sbb
mov
cmc
das
mov
lods
movsb
js
jmp
addr16
sti
stc
jae
jge
icebp
jno
fdivrl
notl
inc
mov
fmul
dec
clc
pushf
shlb
popf
or
and
jge
clc
lret
icebp
movsl
jecxz
jae
pop
adc
add
and
outsb
dec
fists
push
enter
mov
in
sbb
sub
mov
mov
ret
sahf
das
outsl
sar
sbb
cli
data16
mov
stc
lods
jne
xchg
inc
mov
stc
sub
adc
divl
sbb
call
andl
push
sub
push
into
loopne
mov
in
ret
sub
push
stc
push
sbb
mov
xchg
outsb
push
xchg
push
mov
inc
std
fldcw
mov
xchg
repz
ds
ja
stc
lret
mov
inc
inc
int
add
mov
cmc
sub
icebp
xchg
fcoml
ret
push
test
push
lret
pop
je
clc
jle
sub
xchg
les
mov
pop
stc
pop
adc
lds
scas
je
pop
add
in
mov
mov
xchg
mov
xor
push
jno
xorl
dec
stc
push
sub
stc
imul
cmp
fs
in
stc
mov
test
xchg
cmp
stc
xor
mov
pushf
stc
push
lret
push
ret
xchg
push
idivb
out
jp
stc
ficomps
add
fstl
stc
cmp
je
sbb
cmp
xor
sub
gs
out
mov
mov
and
ss
xchg
into
subl
stc
xor
inc
fistpll
stc
sahf
out
push
lcall
mov
cmpsl
sub
mov
stc
sbb
lcall
or
and
dec
sbb
adc
in
sbbb
in
stc
insl
push
dec
pop
inc
fdiv
mov
dec
sbb
sar
in
xchg
pop
xchg
nop
orl
iret
lea
xor
push
fdivrs
adc
add
jp
lahf
stc
imul
dec
add
mov
outsb
pop
push
pop
push
mov
add
inc
aas
stc
dec
mov
aad
das
mov
adc
rcrl
outsb
dec
sbb
inc
mov
xor
xchg
sub
out
aas
stc
mov
mov
xor
inc
in
sarl
jmp
and
sbb
mov
mov
mov
lods
out
dec
mov
mov
movsl
pop
imul
inc
pop
incl
cli
add
stc
test
pusha
jo
loopne
adcb
jmp
and
cmpsb
inc
or
pop
push
jle
stc
cmpsl
cmp
dec
clc
into
adc
jp
arpl
imul
rolb
sahf
dec
jl
dec
adc
divl
sub
aad
jge
add
jns
jmp
push
pop
pop
lcall
xor
jmp
cmp
push
imul
stc
les
add
add
das
negl
stc
mov
shlb
xor
dec
loopne
push
sarl
fidivl
push
popf
ror
and
push
in
dec
rcrl
push
inc
push
ss
cmp
jno
repz
xor
xchg
aam
in
dec
js
sbb
clc
pop
push
push
in
cmp
stc
scas
mov
fs
mov
mov
data16
fsubr
cmpsb
enter
js
mov
arpl
dec
sbb
fadds
add
mov
pop
cmc
add
push
sbb
xchg
mov
fdivrp
inc
xor
int
cltd
fs
js
push
arpl
jg
xor
xlat
pop
shlb
fyl2x
and
enter
or
stc
add
xchg
mov
adc
inc
ljmp
or
sbb
popf
add
stos
stc
shrb
lock
cld
mov
ss
lret
add
push
sub
sbb
scas
sbb
lods
stc
push
cmpsl
dec
fstl
dec
cs
loopne
hlt
mov
icebp
pop
ss
fdivs
in
mov
push
pushf
mov
mov
pusha
out
push
mov
jb
cmp
jmp
stc
das
rclb
js
sub
or
mov
mov
sahf
sub
push
fsubrl
cmp
outsl
mov
sarl
cmp
xlat
je
mov
sub
cwtl
mov
stc
pushf
push
pop
lahf
lods
push
call
xchg
leave
bound
imul
popa
in
cmc
xchg
ds
adc
fcomps
cmp
mov
out
jge
stc
mov
sub
stc
es
stc
and
mov
out
xchg
xchg
aam
mov
and
stc
setb
sub
stc
outsl
sahf
cs
std
insb
xlat
icebp
mov
pop
sbb
add
mov
cs
loop
sub
jae
mov
cmp
out
fistps
lcall
jl
fwait
sbb
out
mov
sub
xchg
stc
dec
ss
dec
loopne
lock
test
sbb
mov
cmpsb
push
push
xchg
sbb
stc
pop
out
stc
mov
xchg
mov
nop
data16
jl
add
inc
pop
stc
fcoms
je
je
fnsave
cmp
dec
push
mov
clc
xor
nop
xor
push
sub
jl
xchg
cmp
xchg
jmp
stc
pusha
test
out
xlat
cmc
mov
mov
jne
sub
pop
icebp
movsl
lea
dec
and
mov
mov
jmp
stc
or
push
fs
add
push
mov
jp
es
mov
insl
push
xorl
mov
push
ss
ds
clc
inc
push
je
rcll
jne
rcr
sub
das
movsb
push
mov
jnp
xor
sahf
out
mov
mov
and
hlt
adc
jmp
pushf
jae
xchg
repz
cmc
push
fcoml
int3
and
ss
leave
neg
cmp
int3
stc
dec
sub
movsl
fsubs
mov
pushf
int
adc
fstpl
cmp
je
sbb
mov
das
push
decw
fwait
push
insl
out
fcoms
sbb
dec
mov
loopne
pop
xchg
dec
cmp
add
sub
stc
popf
mov
jae
clc
dec
dec
xchg
add
mov
sti
mov
inc
in
mov
pop
das
stc
mov
sahf
std
push
cmp
inc
in
xor
pop
js
jo
sahf
cmp
sbb
lods
mov
sbb
jl
stc
in
mov
jl
stc
or
es
cmp
pop
dec
cli
imul
add
add
lret
pop
mov
cld
jg
push
add
mov
push
xchg
mov
aas
js
stos
mov
dec
shlb
xchg
test
mov
stc
inc
shrb
sahf
lods
adc
push
mov
mov
jo
sbb
push
bound
jecxz
outsb
out
cmc
mov
xor
dec
ds
mov
or
mov
testb
int
cmpsl
arpl
shlb
lock
dec
repnz
fmul
add
mov
stc
lea
fisubl
arpl
outsb
loopne
gs
lock
ss
pop
inc
stos
sbb
adc
inc
sub
and
mov
scas
dec
push
aas
xor
or
xchg
nop
repnz
stc
lds
pushf
cmp
jns
stc
xor
mov
popf
cmp
aas
das
mov
test
je
xchg
cmp
dec
sbb
ret
stc
iret
jnp
add
out
mov
or
stc
imul
in
jmp
shll
mov
lahf
fidivrs
stc
mov
add
jbe
pop
out
cmc
mov
cmp
pop
aam
jnp
add
shll
xchg
lret
pop
jo
test
mov
adc
nop
mov
sahf
out
stc
mov
adc
xchg
dec
fprem1
ss
sbb
pop
stos
cmp
test
lock
test
dec
sbb
imul
cld
in
sbb
test
sbb
in
xchg
inc
mov
xor
loopne
mov
lods
addr16
mov
iret
add
js
ret
faddl
mov
xchg
lret
fsubrs
add
ja
jmp
pop
cmp
push
xchg
nop
das
lahf
call
rcll
into
sub
and
loop
decl
pusha
sub
lret
je
xchg
mov
int
inc
mov
icebp
xor
mov
js
sub
icebp
xchg
add
dec
or
lahf
lret
sbb
mov
push
popa
arpl
xchg
cmc
lock
cmp
mov
rcrb
push
div
xchg
pop
xchg
clc
jle
inc
and
jecxz
lret
call
je
shll
sbb
pop
loopne
stc
out
push
mov
pop
std
fdivrl
push
je
pushf
movsb
pop
mov
add
insl
add
cmp
add
divl
stos
sbb
fxch
stc
dec
mov
clc
es
lahf
xor
daa
push
mov
sbb
mov
lock
sbb
pop
clc
mov
fucomp
ret
dec
in
in
push
lahf
mov
iret
lock
dec
fcompl
sub
mov
and
jp
aas
jg
add
jmp
je
mov
out
repz
pop
pop
ss
add
sbb
jne
jne
push
adc
inc
xchg
push
mov
repnz
fs
mov
shrl
xor
jbe
lea
dec
call
cmp
mov
icebp
pop
repz
jb
mov
aas
mov
push
jo,pn
sbb
push
gs
pop
xchg
adc
push
push
and
jno
icebp
jne
lea
out
xor
mov
stc
scas
rolb
push
xorl
cmp
out
js
push
sahf
adc
jl
adc
ja
and
jl
ja
call
std
in
test
jne
jb
call
dec
shrb
adc
in
repnz
push
cmc
jmp
notb
pop
jb
xchg
and
jae
fldenv
pop
and
divb
jb
mov
xchg
repnz
mov
xor
xchg
cmp
notl
rcrb
cmpsb
addb
push
out
jl
cld
mov
mov
mov
pop
je
push
jne
rcr
inc
and
pop
in
lret
shl
mov
insb
das
jmp
jb
test
jne
adc
adc
std
push
jae
mov
pop
xor
push
test
dec
repnz
mov
push
xor
push
jae
pop
sbb
jno
rcrl
push
rclb
push
jl
pop
xor
xchg
shl
pop
ljmp
testb
xchg
inc
mov
jl
adc
adc
neg
xchg
or
mov
daa
lock
xor
je
rep
jne
sub
rclb
xor
jbe
jbe
add
adc
repnz
scas
add
ljmp
data16
in
fadds
test
icebp
lock
jbe
xchg
xor
push
test
mov
stos
repnz
add
adc
push
ss
shll
test
pop
adc
outsb
jl
adc
sbb
lods
push
xchg
add
repz
xor
shrb
stos
jl
inc
push
mov
fdivrs
leave
rolb
repnz
add
sahf
clc
jmp
xchg
sti
fsubrs
or
es
add
sub
jne
adc
test
repz
xchg
gs
jecxz
neg
and
mov
add
mov
jecxz
dec
shll
xchg
adc
in
fdivl
adc
push
mov
xchg
loope
inc
mov
push
lea
bound
add
cld
push
adc
push
push
stos
mov
out
push
ret
adc
xor
adcl
push
sub
xchg
lret
pop
ljmp
dec
sbb
lret
jnp
and
push
or
rcr
pusha
bt
mov
call
pop
lea
movsbl
bswap
mov
pop
jmp
stc
call
pushf
lea
jb
bt
cmc
stc
push
cmp
push
pusha
jmp
call
push
pushf
jmp
lea
call
pusha
push
push
lea
jb
cmp
cmp
jmp
stc
bt
or
pushf
lea
js
je
lea
bswap
mov
lahf
mov
push
mov
pusha
pusha
lea
pushf
movl
pushf
pushl
popl
pushf
push
pushl
ret
lea
jne
call
sub
jmp
add
and
push
add
add
add
add
add
add
add
fistl
add
fcoml
add
fcoml
add
add
add
add
fcoml
add
scas
outsl
fmull
daa
jae
outsb
inc
in
jmp
mov
push
pop
ret
lret
adc
mov
aaa
xor
mov
sbb
or
outsl
or
orb
mov
cmp
arpl
rorb
das
xor
subl
mov
sti
fwait
xchg
inc
ret
push
pusha
sbb
or
xor
jmp
or
ficomps
dec
cmp
jae
fdivs
repnz
jne
push
lret
lcall
icebp
jo
shlb
lret
mov
sub
and
lods
mov
and
cmpl
mov
cli
scas
mov
aad
push
mov
pop
xlat
mov
pop
clc
xor
incl
out
imul
cmc
insb
jp
std
sbb
outsl
lods
jnp
push
push
outsl
sbb
js
je
in
aad
push
call
pop
jbe
and
jb
inc
cmp
sbbl
push
jo
xchg
shrb
repnz
lds
pop
jne
push
xchg
pop
xchg
popa
movsb
dec
xor
shl
add
imul
popa
ret
pushf
aaa
icebp
fwait
jp
outsl
xchg
sarl
std
xchg
cltd
cmp
test
insl
xor
std
mov
iret
insb
jmp
scas
dec
push
pusha
lds
jae
test
ja
mov
pop
mov
aaa
adc
cld
mov
in
addr16
sbb
sbb
sub
ja
lahf
stos
dec
lock
sub
push
pop
or
mov
fimuls
dec
jbe
movl
xchg
pusha
adc
mov
sbb
sbb
fldcw
test
stc
out
push
xchg
mov
shrl
cmc
jbe
and
pop
inc
pop
and
xchg
inc
jno
popa
sbb
das
repnz
cwtl
fdivrl
adc
mov
repnz
addr16
push
int3
out
js
or
ds
shlb
add
test
pop
shll
es
sub
loopne
cmp
inc
jne
fmuls
inc
iret
shl
loope
out
in
pop
mov
rcrl
push
xchg
push
ds
imul
inc
and
in
je
pop
imul
int3
add
mov
or
lcall
popf
lock
pusha
test
mov
and
mov
xchg
neg
mov
jne
inc
insl
sbbb
push
lret
rolb
cmp
dec
or
outsb
and
fcomps
cmp
int3
or
and
mov
dec
sub
xor
dec
sti
pop
or
scas
lret
stos
jb
mov
lcall
and
lea
ret
bound
test
inc
es
push
xchg
addr16
push
push
mov
aaa
xlat
ds
xor
lds
sbb
lcall
gs
inc
mov
mov
ret
pop
push
das
sub
or
adc
dec
xor
jp
pop
xor
cli
popa
repz
sub
inc
dec
sbb
flds
push
js
movsb
xor
xor
jne
jl
cmpsl
and
les
aaa
xchg
mov
and
push
cmp
or
jle
fwait
mov
jle
xor
xor
and
outsb
push
hlt
dec
imulb
or
mov
in
inc
sahf
daa
test
adc
push
pop
dec
aad
loop
mov
pop
ret
aad
fldt
xlat
jno
fistpl
cmp
and
outsl
inc
ss
mov
sahf
sbb
cltd
popl
pop
push
pop
mov
out
clc
fisttpl
imul
push
pop
hlt
aad
scas
or
push
jp
xor
es
mov
pop
imul
xor
je
clc
or
and
call
inc
mov
or
mov
outsb
jle
push
or
jge
sub
insb
sbb
fidivs
push
lret
lret
jge
and
fwait
push
jp
out
and
push
push
inc
fwait
add
mov
push
push
mov
into
jnp
mov
into
inc
mov
stos
jbe
add
imul
xor
das
add
sahf
pop
int
lea
stos
pop
gs
jge
out
dec
dec
je
mov
and
dec
jle
mov
add
xorb
pcmpgtd
sahf
es
test
and
push
mov
jg
push
sbb
rorb
or
adc
jo
lea
jns
mov
scas
enter
arpl
xor
xor
jmp
mov
xchg
push
scas
pop
sub
arpl
adc
push
push
mov
adc
loopne
mov
mov
das
repz
sbb
mov
push
outsb
push
add
into
repz
cmp
loopne
test
push
stos
jb
inc
jge
xlat
test
jmp
xchg
pop
and
cmp
xchg
mov
jo
mov
push
jmp
mov
add
push
js
stc
mov
mov
call
xchg
lret
jns
pop
insb
rolb
add
jge
sub
pop
sahf
iret
aaa
dec
ret
push
fs
stc
stc
or
repnz
js
into
aaa
or
or
push
fmull
push
shlb
xchg
into
cwtl
cltd
ljmp
dec
push
mov
movsl
mov
and
xchg
fisubl
mov
jae
in
repnz
push
fnstenv
test
push
jno
add
jb
insb
or
sub
inc
test
and
xchg
mov
and
lea
add
or
popf
pop
push
cmp
movsl
icebp
loopne
insb
pop
outsb
int3
xchg
pop
adc
sbb
mov
out
dec
or
jnp
icebp
adc
or
scas
sbb
lock
movl
push
cmp
or
lock
cmpsl
mov
movsb
sbb
fcoml
in
mov
dec
in
movsl
mov
add
sub
movsb
push
pushf
cmp
dec
pop
or
lods
inc
movsl
rcrl
in
insb
pop
mov
ret
scas
stos
mov
jnp
repz
in
popf
jb
adc
and
les
int
stos
or
cmc
push
mov
sbb
outsl
jb
push
movups
test
shrb
aas
xor
mov
sarl
lahf
push
test
sbb
cmp
push
add
mov
ret
mov
pop
push
push
repnz
inc
mov
ljmp
aas
sbb
lret
lea
cwtl
push
out
push
push
fidivl
roll
pop
xor
xor
repz
das
andl
aas
mov
insl
xor
cmpsl
and
cmp
sbb
sbbb
or
xchg
push
cmp
xor
fsubrl
fildl
sub
sbb
ss
sub
lds
xor
and
xchg
sub
enter
fwait
sbb
ret
cld
mov
popa
mov
aas
nop
negl
sbb
and
inc
std
adc
mov
push
mov
mov
pop
jns
test
fsubrl
xor
loopne
cmp
inc
pop
popf
mov
xlat
cltd
lods
imul
std
pop
or
and
sarl
lret
inc
sub
cltd
pop
ljmp
icebp
xchg
cld
jl
shr
mov
imul
sbbb
xchg
adc
imul
inc
cmpsl
mov
jl
stos
push
pop
inc
sub
test
sbb
lods
mov
clc
jmp
mov
inc
sub
mov
cld
lods
pop
fs
hlt
popa
push
call
push
aas
xor
cmp
xor
pusha
popa
fisttpl
mov
xchg
mov
xchg
mov
mov
fsubrl
add
and
jge
test
repnz
stos
xlat
jl
or
sbb
cmpsl
std
cmovg
jecxz
mov
sub
aaa
sub
adc
pop
dec
sahf
push
aaa
or
push
aaa
ficomps
push
decb
lds
jmp
xchg
add
popw
xor
lret
jmp
or
push
xor
lds
out
outsb
pop
in
cmp
add
popa
dec
sahf
xchg
mov
aam
adcb
mov
xor
mov
push
popf
iret
inc
in
jp
push
mov
pushf
sbb
sub
mov
push
aaa
jg
mov
and
mov
sbb
fsubl
ret
push
dec
ss
jo
js
bnd
adc
sahf
test
test
push
push
inc
pop
push
sub
mov
jns
mov
sub
cs
inc
stos
sub
movsl
jnp
rcrb
pop
push
pop
mov
mov
mov
imulb
pop
mov
imul
and
jo
sbb
aam
cmp
xor
cs
lret
or
adc
ret
xor
or
push
push
mov
mov
jmp
sbbb
pop
addb
sub
sti
sub
pop
fisubl
inc
test
xor
cmp
lcall
mov
pushf
mov
mov
dec
aad
inc
xchg
xlat
ret
pop
pop
popf
pop
test
mov
rcrb
hlt
rcrb
mov
lahf
xchg
dec
jbe
sub
mov
clc
jno
sbb
ret
mov
jecxz
decl
cli
js
push
push
stos
test
sahf
addr16
ljmp
lcall
mov
dec
data16
cmc
ror
cmp
repnz
adc
lret
movsb
into
je
std
addr16
out
push
ret
adc
test
lock
mov
imul
push
cmpsl
mov
cli
mov
sub
lcall
push
mov
cmpsl
adc
jo
jg
enter
out
cmp
pushl
jbe
insb
rsm
sbb
mov
mov
loope
dec
jns
cmc
push
push
call
insl
mov
fwait
outsl
pushf
nop
push
xchg
rorb
sub
out
push
aas
push
out
jbe
xchg
into
xor
cmp
icebp
hlt
jl
xor
mov
or
inc
lods
inc
and
pshufw
test
popf
or
jp
sub
test
adc
shrb
and
bound
pop
sub
dec
sub
lahf
mov
xchg
mov
pusha
stc
imul
imul
mov
mov
dec
out
mov
mov
in
and
xchg
mov
in
daa
dec
lret
lods
add
or
movsl
in
jnp
aas
sub
adc
adc
pop
jecxz
int3
push
ljmp
out
lods
test
adc
aaa
xchg
jp
mov
movsl
xchg
sbb
sbb
pop
dec
add
add
pop
or
pusha
or
pushl
pushf
lea
je
setb
movsbw
call
stos
pop
fmuls
bound
lods
adc
xor
xchg
pop
outsl
push
cltd
or
adc
sti
sub
xchg
scas
outsl
popf
sahf
mov
cmp
push
jne
movsl
jle
in
mov
sarb
cmp
movsbw
clc
shld
mov
bt
pusha
stc
shr
cmp
bt
cmp
pusha
pushf
lea
jle
push
lea
je
jmp
push
mov
lea
ja
mov
mov
seto
inc
call
call
movsbw
pop
movzbw
lea
jmp
push
imul
push
bt
add
push
pushf
lea
jmp
jne
shl
add
stc
xor
shrd
pusha
ror
mov
shr
add
dec
shr
mov
cmc
stc
cmp
jmp
call
iret
mov
push
shlb
cld
cmpsb
push
popa
sub
mov
bound
or
pop
ret
xlat
xor
cs
add
lods
outsl
sbb
cli
ret
add
psubw
rolb
dec
jmp
sbb
fidivl
mov
aaa
push
outsl
xor
leave
rorb
adc
int
mov
mov
scas
or
loope
add
sbb
bound
gs
enter
aam
mov
or
clc
push
dec
sub
test
adc
mov
add
outsb
ljmp
sub
mov
fnstcw
inc
rolb
dec
mov
inc
xchg
jae
rcrb
push
mov
mov
inc
idivb
loopne
pop
lahf
pandn
imul
in
and
lea
lods
adc
xchg
in
mov
sahf
mov
mov
sub
dec
adc
inc
dec
loope
xor
test
pusha
sub
out
and
aam
nop
imul
sub
xor
and
add
cs
mov
push
push
cmp
rorl
add
pop
mov
into
pusha
xchg
mov
clc
jmp
lahf
add
push
shlb
xchg
push
mov
cmp
adc
out
push
fnstsw
popa
push
adc
xor
mov
in
inc
xchg
les
out
add
add
ss
and
sbb
mov
cli
and
ss
pop
out
push
test
scas
dec
es
add
jp
leave
nop
ficoml
outsb
mov
pop
js
adc
xor
pop
out
dec
mov
into
cmp
adc
mov
and
push
test
les
sub
push
sbb
cmp
addl
cmpsl
mov
pop
aaa
pop
push
mov
adc
inc
es
and
push
sbb
sti
inc
mov
xlat
inc
jne
dec
movsb
sti
data16
xchg
lahf
xchg
xor
lret
adc
mov
cmp
pop
fnstenv
mov
arpl
or
mov
adc
in
inc
andb
and
xor
xchg
mov
xchg
imul
mov
fs
idiv
shlb
ret
mov
cs
movsb
inc
stos
shrl
dec
jnp
jbe
cmp
stos
add
sub
or
pushf
mov
adc
pop
xchg
add
dec
pop
pop
in
das
adc
push
arpl
enter
xlat
stos
xor
ret
dec
scas
mov
enter
xsha1
cmpsb
or
decl
mov
and
jmp
dec
mov
sbb
neg
add
adc
mov
pushf
bt
test
pushf
lea
jmp
arpl
mov
sbb
leave
scas
pop
push
fwait
inc
clc
lods
loope
xchg
jle
jmp
je
shl
or
xchg
pop
xchg
inc
lock
rcr
leave
mov
push
mov
add
jnp,pn
dec
cmpsb
pop
imul
jmp
mov
jae
push
psubusb
mov
arpl
in
xchg
sahf
shlb
rcr
aas
fsubrs
and
mov
in
adc
bound
pop
hlt
or
outsl
arpl
or
cmp
cmp
std
jae
bsr
aas
not
push
or
lahf
adc
shrd
mov
ror
cmp
ror
sub
movzbw
shrd
jmp
sub
in
push
adc
xchg
test
sbb
notl
mov
add
insb
ja
rcl
add
push
sbb
adc
cld
call
je
in
pop
ja
mov
stc
imul
movsl
or
push
test
adc
aas
aam
out
and
sbb
dec
shrb
dec
shll
xor
movsb
stc
sti
xchg
fdivrl
adcl
fwait
or
cmc
aaa
and
out
mov
shlb
inc
fsts
cmp
loop
lea
jmp
call
push
lea
je
cmc
stc
cmp
push
jmp
insb
inc
les
bound
inc
arpl
adc
pusha
cli
mov
xor
imul
mov
mov
popf
inc
cmpsb
mulb
fnstsw
imul
mov
test
and
sbb
fmull
or
cld
ljmp
xor
xchg
adc
fstl
cmp
jns
daa
xor
and
sub
cmp
ljmp
mov
clc
shlb
and
test
test
lcall
insb
cmp
jb
sub
sub
jp
lahf
jp
or
fs
nop
ret
or
jae
jle
push
adc
dec
cmp
pop
pushf
jnp
shlb
ret
inc
aas
pop
in
xor
out
scas
jo
push
mov
outsl
negb
int
lea
xor
outsb
fwait
and
dec
xor
pop
mov
mov
insl
sub
or
push
std
sbb
out
fxam
and
xchg
cwtl
andl
xchg
cmp
sub
cltd
popf
or
pop
nop
aas
in
lods
jmp
testl
sahf
xchg
insb
loope
pop
cmpsl
mov
stc
mov
test
add
pop
jge
lret
add
lock
push
xor
stos
ffreep
loop
ficompl
adc
xchg
js
push
in
aam
out
cmp
and
movsl
pop
out
inc
and
adcl
mov
adc
pop
or
mov
imul
cmpl
cmpsb
push
xor
rol
sub
pop
jns
sub
andb
pop
add
neg
call
bt
cmp
jmp
adc
sbb
not
mov
pusha
clc
cmc
and
cmc
test
add
add
stc
call
push
inc
pushf
pusha
inc
pushf
lea
jmp
call
or
shlb
or
scas
mov
cmp
cmp
cmp
outsl
lea
insb
mov
pop
lock
or
dec
xor
sbb
data16
push
adc
in
sti
aaa
mov
hlt
or
test
ret
ret
xchg
fdiv
lcall
mov
hlt
cmp
cld
add
sub
into
pop
mov
push
int
and
cmpsb
fwait
push
cmp
lcall
fwait
pop
xor
repz
xchg
or
adc
shlb
hlt
jle
leave
hlt
out
movl
pushf
call
movsbw
pop
pusha
push
call
ds
insb
or
in
and
test
sub
add
or
pop
in
or
sub
jbe
insb
or
rclb
mov
mov
xor
or
xor
inc
arpl
adcb
mov
add
or
pop
pop
xchg
jno
aam
jns
or
pop
pop
adc
fcoms
inc
sub
or
pop
es
add
or
mov
pop
aad
cmc
push
cmp
or
pop
and
inc
pop
stc
jno
or
jge
push
add
or
mov
insb
or
pop
mov
jns
or
xor
hlt
out
imul
push
add
mov
and
cmp
or
mov
arpl
stos
pop
imul
rclb
popa
pop
pop
jo
jno
xor
imul
pop
lea
push
sub
pushl
or
pop
icebp
in
sahf
inc
jg
insb
or
hlt
pop
sarb
jno
or
pop
das
test
insb
or
jnp
mov
inc
arpl
pop
pop
mov
cmp
dec
arpl
dec
push
lods
mov
imul
pop
mov
daa
cld
es
jns
or
call
jp
push
insb
or
or
inc
lret
loope
arpl
pop
pop
mov
test
insb
or
cmp
in
pop
sub
inc
filds
jg
jno
arpl
jno
or
call
ja
aaa
arpl
pushf
pop
rolb
clc
mov
insb
or
or
sbb
stos
imul
pop
fwait
std
jnp
jno
or
push
and
cs
or
pop
pop
lcall
insb
or
jns
xchg
jno
or
pop
pop
sub
insb
or
mov
nop
jno
or
adc
dec
shrb
or
jae
test
test
inc
add
dec
jl
add
jmp
xchg
cmp
lahf
mov
test
stc
setg
and
mov
stc
stc
cmc
push
bt
movzbw
rcl
mov
test
jmp
pushf
pusha
lea
call
jmp
fwait
jl
pop
shlb
fcomi
jge
jmp
cbtw
mov
xchg
sbb
mov
cmp
out
popa
fdivr
dec
ja
jecxz
lods
subb
cmp
out
xchg
fisubrs
cmpsb
dec
jne
addb
subb
imul
xchg
pop
and
pop
cld
stos
shlb
fstps
xadd
lahf
pop
test
addl
jg
fs
lods
hlt
stc
ret
dec
xchg
jp
scas
and
and
and
adc
push
adcl
inc
imul
mov
addr16
pop
test
mov
popf
and
je
mov
lea
xor
pop
orl
cmc
mov
stc
and
mov
sbb
lahf
outsb
jl
cld
jne
test
pop
add
jmp
sbb
dec
xor
int
pop
cmp
dec
addr16
cmp
pop
lods
cmp
or
sub
inc
es
inc
xchg
add
mov
inc
mov
adcb
adc
sbb
aaa
outsb
in
or
mov
sub
int3
int3
or
call
iret
push
sub
jecxz
mov
push
or
pop
mov
insb
mov
outsl
jo
sbb
pop
pop
pop
out
out
js
mov
and
jp
enter
inc
cwtl
or
cmc
imul
adc
mov
xlat
sbb
mov
das
jbe
ss
mov
pop
repz
div
sti
nop
sbb
je
adc
ficomps
xchg
dec
in
jb
jno
outsb
icebp
push
hlt
les
add
into
sbb
into
cmp
test
hlt
out
mov
adc
es
cmc
and
mov
or
push
jns
ret
jns
js
sbb
popa
push
inc
dec
hlt
adcb
divl
imul
dec
scas
xor
jo
pop
inc
loop
fnstsw
sub
pop
xlat
clc
adc
test
adc
pop
sub
not
or
add
push
or
cmc
pusha
in
sbb
and
ficoml
push
cmc
cmp
stos
adc
das
adc
push
movsl
psubb
push
xchg
mov
or
mov
ja
adc
push
gs
cmpsb
dec
icebp
icebp
lea
mov
xchg
or
imulb
adc
inc
xchg
scas
xlat
notb
mov
cld
repnz
notl
xor
outsl
and
lods
imul
pop
dec
stos
adc
cltd
div
cli
or
test
in
push
shl
inc
repz
repz
push
idiv
and
jo
hlt
push
popf
jmp
mov
jno
xor
mov
js
aad
sbb
push
out
push
mov
mov
repnz
jne
sbb
call
or
cli
xor
push
clc
fnop
testl
test
jno
or
jne
add
out
add
adc
push
hlt
adc
pop
jge
adc
jp
test
or
push
push
enter
addl
jo
jle
out
ja
enter
je
repnz
insb
insb
xor
cmc
ja
enter
imul
add
insb
jb
add
push
cli
adc
pop
cld
add
std
rolb
jl
test
push
xchg
pop
jmp
insl
jbe
mov
sti
cmp
pop
pop
sub
repnz
lret
mov
cmp
stc
cmp
outsl
jb
int3
mov
or
sbb
adc
sti
xchg
fnstcw
jb
scas
stc
fwait
das
lret
dec
push
outsl
inc
icebp
stc
imul
ret
jmp
decl
cmp
push
shlb
mov
fists
loop
push
data16
push
or
jo
jne
pop
mov
sub
stc
das
add
inc
lahf
jne
and
aad
lods
out
xor
je
xchg
mov
aam
xchg
xchg
cmpsb
lret
out
aaa
jbe
pop
rcl
mov
fsts
mov
rep
push
lret
mov
push
stos
insb
scas
js
mov
sarb
outsl
jno
fidivl
mov
push
sbb
scas
push
pop
mov
js
mov
icebp
mov
xor
pop
cld
pop
in
pushf
ds
hlt
push
es
outsl
stc
scas
xor
stc
sub
dec
in
dec
mov
imul
add
jno
std
mov
idiv
inc
inc
and
clc
dec
insb
jg
pop
ja
loopne
jns
jnp
push
clc
ljmp
test
lcall
cwtl
lock
push
push
cmc
mov
jg
adc
push
add
in
xchg
movsl
ret
cmc
testb
mov
imul
pop
call
jbe
adcl
and
jl
sub
bnd
adc
js
scas
jmp
or
pop
out
dec
jbe
int3
ja
aaa
xor
pop
xor
and
pop
add
push
add
lahf
es
cmp
cld
jbe
outsl
je
pop
jle
aad
xor
or
imul
sbb
push
xchg
rorl
push
push
sbb
jo
jp
cli
xor
das
out
fadds
jp
adc
push
fadds
jo
xor
push
repnz
lock
arpl
mov
cs
out
aaa
jp
add
mov
scas
div
sub
and
stc
cmp
arpl
jbe
pop
call
xchg
mov
daa
scas
dec
push
in
cmp
jae
repz
out
xchg
add
adc
loop
frstor
xlat
push
or
cmp
aaa
pop
js
pop
outsl
je
sbb
jae
cs
outsb
or
xor
xorb
add
jno
push
cmc
test
push
adc
sub
ficoml
imul
in
stc
jnp
inc
jae
dec
xor
mov
in
xor
xor
mov
inc
stc
lahf
or
xor
xchg
and
mov
loop
out
jmp
mov
stc
pop
jns
add
add
or
jp
add
dec
stos
stos
dec
cmc
jns
lods
push
scas
ficomps
or
popf
dec
pop
bound
insl
cli
xor
in
repnz
mov
iret
outsl
lcall
xor
jo
jae
adc
pop
decl
jge
in
lcall
inc
inc
fildll
mov
cmp
dec
mov
and
xor
out
mov
and
jle
outsb
mulb
push
fscale
in
cmpb
lcall
incl
and
jae
jbe
outsl
push
les
jmp
js
xor
cmp
jg
scas
decl
or
ja
insl
pop
mull
mov
hlt
mov
jmp
push
imul
pop
sub
imull
jg
and
clc
test
std
lds
stos
mov
fisubl
mov
out
or
pop
lods
sbb
mov
pushl
xor
adc
add
xchg
cmpsl
ja
xor
cwtl
idivl
cld
jns
cwtl
pop
adc
push
stos
sub
decb
sub
mov
insl
notl
iret
and
inc
lret
ljmp
je
scas
roll
jmp
sub
sub
and
sub
outsl
or
push
jbe
push
xor
mov
je
adc
divl
out
mov
jne
iret
jmp
and
neg
inc
in
cmp
jmp
imul
adc
imul
push
lret
dec
dec
jae
scas
mov
xor
vpaddsw
insl
pop
ds
pop
mov
mov
test
call
scas
in
pop
sub
aam
lret
xor
cmc
add
repnz
into
jb
movsw
add
sbb
xchg
jbe
js
sbb
mov
in
add
scas
jp
jne
add
test
mov
imul
xor
jns
ja
pop
cld
lock
testb
and
push
adc
fmuls
ja
sub
insb
and
lret
daa
xchg
clc
and
dec
scas
into
cmp
mov
notl
jns
addr16
out
dec
mov
push
js
mov
cld
add
add
xor
cmp
shll
ja
mov
adc
int
mov
cmpsl
push
mov
mov
push
int
inc
jns
lret
ja
les
std
add
xlat
test
or
bnd
cmpsl
mov
out
cs
mov
out
lods
sub
ljmp
into
push
adcl
std
and
mov
pop
hlt
jo
push
in
test
aam
nop
jns
push
cs
shlb
or
scas
push
in
idiv
xor
jnp
lods
pop
xchg
xor
lea
sbb
dec
test
insb
jbe
jne
jnp
xchg
rclb
clc
sti
cmc
xchg
add
push
jp
pop
mov
cli
ss
dec
sub
jge
push
jle
incl
jg
sub
lock
or
mov
ja
add
mov
enter
das
xchg
pop
add
xchg
std
icebp
xor
jecxz
jae
repz
addr16
mov
add
into
fldcw
jbe
cmp
shlb
sub
lea
jb
and
incl
jge
je
movsl
shlb
sbb
or
xchg
add
out
xchg
in
fidivrs
xor
push
es
test
in
imul
std
sub
add
or
daa
xor
add
jns
addr16
bnd
in
mov
imul
add
adc
sub
out
loope
mov
cmc
add
adcl
es
mov
ss
pop
mov
les
fs
inc
fdivrp
imul
add
xlat
jmp
jbe
out
cmc
xor
or
add
rclb
adc
or
dec
scas
jo
xchg
data16
inc
cmpsb
xchg
ss
insl
je
in
jp
mov
test
cmpsl
aaa
xchg
push
and
mov
addr16
je
sub
jno
enter
add
push
clc
lret
push
jmp
int3
mov
jge
jne
or
shlb
jbe
in
push
add
cmp
jne
inc
lock
mov
jg
dec
jb
je,pn
push
or
xchg
add
test
mov
xchg
aas
mov
push
sub
je
je
insb
repz
das
negb
cmpsl
clc
push
and
dec
mov
testb
nop
cs
push
xchg
jp
mov
data16
dec
or
sarb
aam
ret
negb
or
repnz
ret
add
cmp
mov
cmp
cmp
jp
daa
jno
scas
xor
mov
fsts
leave
into
das
mov
inc
cmp
in
jge
xor
jbe
divl
xor
add
testl
lret
cmp
xor
xor
inc
ljmp
out
dec
xor
jmp
es
and
push
dec
cmp
aaa
sbb
daa
popl
jno,pt
jl
mov
lock
fwait
aad
loopne
in
adc
clc
push
clc
mov
mov
xchg
mov
jo
andl
in
popa
push
mov
mov
dec
je
or
mov
inc
nop
in
cmpsb
rorl
inc
xor
rolb
or
push
popf
and
rcll
outsl
sbb
daa
push
cmp
or
ret
add
adc
jo
gs
out
pop
pop
into
sub
mov
mov
sub
jo
cmp
jg
adcb
cli
inc
dec
mov
scas
jl
fcoms
js
movl
out
add
test
lock
imul
scas
rcl
mov
clc
shll
cs
add
add
ljmp
adc
sti
xchg
std
ret
pop
xchg
mov
cli
push
in
das
sti
jno
mov
sbb
dec
add
out
daa
repz
cmp
orl
pop
adc
xlat
jmp
pop
jle
movsb
adc
and
scas
jb
repz
jmp
int
gs
iret
rclb
shrl
push
inc
push
cs
cmc
movsb
lock
cld
sub
cmpsb
cmpsl
inc
lcall
imul
cltd
pop
sbb
pop
les
ret
je
lock
cli
idiv
xchg
xor
jo
mov
jo
sub
push
cmp
cs
daa
dec
ss
mov
pop
jo
std
daa
mov
jg
push
adc
push
lds
jb
xor
out
push
daa
sub
test
inc
in
add
andb
xor
jo
cli
or
add
mov
hlt
xor
jo
lods
daa
xor
xor
or
xchg
adc
es
xor
insb
inc
pop
ds
stc
int
cmovl
dec
add
or
test
push
stos
cmp
jp
insl
jp
aas
sbb
inc
dec
mov
adc
jnp
stos
cmp
pop
sub
faddl
pop
inc
xor
repnz
mov
jp
js
repnz
push
xor
inc
ds
cli
push
and
mov
lds
scas
sub
lock
fsts
mov
push
jmp
jne
nop
scas
sub
sahf
dec
jle
insb
cmp
aam
lods
iret
sub
push
mov
stos
dec
sbb
lret
mov
ja
jns
stos
sub
or
and
or
push
cmc
js
mov
ja
or
mov
sbb
inc
insb
je
sub
xchg
mov
inc
out
repnz
jmp
pop
scas
int3
filds
mov
push
cs
sbb
cmp
sub
xor
inc
sahf
xor
xor
mov
inc
jb
adc
ljmp
jmp
sbb
addb
mov
cwtl
cmp
jmp
jo
hlt
inc
jb
jmp
pushf
ss
mov
ja
jg
xor
add
push
add
cs
push
inc
sbb
mov
push
idivb
hlt
aad
repnz
adc
sti
push
add
xor
sbb
divl
adc
sbb
jo
cld
cmp
jmp
adc
and
test
mov
and
mov
or
mov
pop
test
adcb
lock
add
jp
xor
or
scas
stos
add
and
push
xchg
or
dec
lods
adc
push
fnsave
outsb
jbe
ret
jbe
sbb
mov
adc
or
movsb
das
mov
je
xor
pop
jb
xor
in
push
scas
mov
push
insb
or
rcrl
add
jno
xor
imul
outsl
insb
sbb
pushf
dec
jle
jp
xchg
xor
jae
hlt
jmp
repz
lds
in
xchg
xor
mov
mov
push
repz
jle
push
orl
jbe
iret
ss
and
iret
jle
mov
jp
cmc
cmp
and
ja
jne
daa
js
repz
imul
mov
loop
jae
xchg
mov
dec
inc
sub
jns
fcoms
cmp
and
fcoms
cmp
clc
sti
push
lret
outsl
notl
adcl
movsl
lret
divb
std
fs
inc
mov
outsb
ret
js
out
icebp
pop
add
fsubs
xlat
push
add
jbe
repz
hlt
adc
hlt
sub
lret
jl
sbb
out
fmuls
mov
cmp
lret
mov
arpl
xor
push
nop
xchg
push
cmc
shl
leave
sbb
jmp
push
cld
or
jne
fdivs
mov
call
mov
repnz
inc
aad
xchg
test
clc
cmc
leave
adc
fnstcw
icebp
rcrl
fsubr
aad
arpl
cs
cld
adc
push
mov
add
fcom
fdivr
sbb
cltd
jle
cmc
and
jns
or
idiv
jno
jbe
add
insl
sbb
sbb
xor
stc
sub
mov
pop
jno
neg
repnz
std
pop
cmp
cwtl
jecxz
add
fsubrs
or
adc
cmp
mov
adc
out
scas
aam
add
mov
adc
xchg
adc
lret
push
xor
fadds
js
jecxz
sub
dec
sub
outsl
out
xor
js
push
outsl
ret
out
jne
or
mov
add
loope
inc
adc
loop
xchg
dec
push
aas
psubsw
in
sbb
jbe
js
cmp
hlt
clc
mov
dec
cmc
jle
jge
add
xor
dec
sbb
mov
push
jo
andb
ss
je
lock
or
jb
mov
daa
in
and
ss
je
lock
jns
push
cmp
inc
test
jmp
jo
xor
xor
inc
js
lock
add
jo
push
daa
ss
je
lock
outsl
xor
jo
cmc
daa
mov
clc
or
and
jl
jle
rolb
lds
ljmp
repnz
xor
jbe
cli
add
lock
xorb
add
stos
je
lock
xor
jo
testl
pop
ds
or
ja
pop
add
push
pushl
adc
pop
jo
sub
hlt
sbb
mov
inc
es
xor
jo
sub
jl
mov
div
mov
xor
jo
sub
je
lock
es
xorl
js
cmp
je
jb
jo
scas
jo
jae
and
lds
xorb
icebp
adc
inc
and
jno
das
je
lock
dec
xor
jo
jns
and
daa
jl
jle
inc
lock
es
xor
jo
test
inc
inc
or
cld
je
lock
es
jo
dec
daa
sub
in
je
lock
cmpsb
xor
adc
mov
cmp
inc
daa
test
lock
mov
mov
divb
clc
and
es
inc
xor
jo
testb
lods
es
xor
jo
mov
xor
push
cmp
outsb
lods
sub
jb
mov
ss
cmp
sub
je
lock
xorl
xchg
daa
push
insb
je
lock
repz
jo
cli
icebp
loope
daa
jle
cli
xorb
inc
jmp
je
lock
es
xor
jo
mov
ja
mov
lock
add
jo
jmp
je
lock
repnz
jo
ss
js
mov
jle
inc
add
jo
mov
push
lods
xor
pusha
js
lock
pop
je
pop
sub
out
lock
ss
cmp
jo
daa
xorb
jns
xor
aas
repz
jne
ja
push
adc
pop
cmp
add
sbb
test
xor
lock
jbe
push
jo
mulb
add
test
cmp
loop
insb
inc
pop
fs
es
xor
jo
data16
cmpsb
ss
mov
or
movsb
es
push
mov
pop
jo
clc
daa
pop
cmp
pop
test
aas
or
dec
mov
insl
push
jb
cmp
jp
jl
pop
xor
jo
add
test
inc
je
outsl
insb
es
pop
mov
push
xor
jo
ds
jl
cmp
pop
js
lock
mov
lock
insb
daa
ljmp
add
jo
jp
cmp
xor
mov
jno
outsl
jo
insb
daa
jmp
dec
je
lock
inc
xor
jo
cmp
xor
lahf
js
lock
repnz
jo
sub
imul
shll
xor
jo
jns
ja
jl
xor
xor
jo
scas
jbe
sbb
jge
push
cmpsl
nop
jns
clc
ja
clc
cld
adc
loope
lds
jmp
in
sar
inc
fcoms
aam
inc
cmp
jne
loopne
imulb
mov
add
mov
out
mov
scas
xlat
mov
ss
or
sub
push
mov
push
xor
xlat
enter
xor
idivb
repnz
cmp
inc
mov
cmpb
lea
xor
xor
ss
notl
add
fcoml
jo
clc
mov
loop
mov
or
sub
aas
mov
mov
lods
sub
jbe
hlt
outsl
in
xor
mov
je
add
pop
xor
popa
sbb
es
js
sbb
negb
lods
adcb
push
mov
cld
je
dec
imul
repz
adc
fistpll
pusha
loope
test
add
mov
adc
pop
adc
lea
addr16
mov
scas
cld
ss
jg
push
push
jb
sbb
sub
mov
outsl
sbb
jmp
pushf
test
adc
mov
mov
add
inc
cld
mov
out
sti
push
insb
push
fimull
push
inc
mov
mov
je
jmp
icebp
and
sbb
jne
add
insb
sti
je
scas
into
adc
push
push
pop
jmp
xorl
cmp
cmc
add
jne
dec
sbb
adc
sub
in
push
pop
jle
sub
xchg
pop
jne
je
imul
loop
cmp
jne
mov
xchg
test
jmp
js
mov
jae
pop
cld
xor
and
aaa
mov
iret
enter
inc
sub
xor
ficoms
fcoms
hlt
test
ja
push
mov
mov
hlt
sub
arpl
pop
and
arpl
xor
jo
xchg
push
inc
clc
sub
clc
out
aad
aas
push
sbb
imul
lret
ljmp
aad
js
scas
call
mov
xor
push
xor
jl
fucompp
sbb
test
mov
dec
xor
repz
cli
shll
icebp
fs
cld
ret
mov
cmp
int3
je
dec
les
test
mov
lahf
outsb
push
push
xchg
ja
clc
fdivrs
repz
hlt
ror
mov
ficoms
dec
ss
mov
mov
lods
ja
sbb
aam
stos
adc
ss
je
lock
or
adc
pop
inc
sti
lea
aad
adc
je
outsl
mov
adc
fdiv
cmp
daa
stos
rcll
push
iret
pop
jo
mov
mov
dec
mov
or
inc
add
inc
stc
mov
push
daa
in
cmp
lea
scas
sbb
add
xor
test
push
and
xor
jne
hlt
mov
push
testl
fs
imul
xor
sbb
shrl
out
adc
xor
push
mov
cmp
inc
pushf
cmc
add
cwtl
bound
pop
mov
dec
repz
cmpsb
imull
out
es
sub
mov
faddl
sbb
pop
aad
fwait
std
and
repnz
push
enter
fs
test
cmc
clc
xor
aad
xor
addb
loopne
push
mov
loop
add
pmaxub
xlat
push
das
jl
imul
mov
push
add
mov
cmp
je
es
xor
push
pop
jp
mov
call
inc
jno
out
outsb
jge
add
sub
les
sub
insb
imul
mov
xor
ljmp
cmp
out
jecxz
jmp
cmc
push
jge
xchg
lods
mov
scas
jno
lret
imul
xor
es
rcl
push
and
lret
and
insl
cmp
fld
add
leave
xor
imul
shll
das
mov
dec
scas
adc
cmc
pushl
mov
or
mov
pop
in
jbe
mov
call
fiadds
stos
out
pop
outsb
lret
cwtl
out
sub
insl
in
js
jmp
pop
outsb
ds
dec
cli
jmp
insb
jp
mov
mov
push
or
xlat
in
mov
repz
mov
adc
push
push
adc
xchg
punpcklwd
scas
xchg
xor
xchg
cmpsb
ljmp
sub
cld
inc
sub
xor
lods
dec
mov
enter
testl
inc
sarb
push
in
icebp
sub
pop
rcll
je
mov
clc
adc
xlat
std
adc
jge
and
test
push
jge
inc
negl
adc
mov
xor
adc
pushl
dec
clc
or
sub
dec
mov
test
in
mov
je
jg
out
lock
dec
mov
dec
cld
ja
push
inc
dec
mov
push
jne
es
jp
push
xchg
add
test
clc
les
test
mov
in
jg
shlw
dec
sub
imul
adc
mov
in
insl
adc
cwtl
addr16
pusha
mov
movsl
std
filds
xor
scas
into
sti
clc
push
xchg
sar
xchg
call
popa
add
out
jno
sub
ja
lods
lea
jmp
mov
imul
mov
in
clc
out
not
cmpsl
daa
sbb
push
fisubrl
xor
aad
cli
jns
push
lock
lods
in
loop
jp
cmpsl
test
sbb
adc
lods
mov
fcoms
sbb
ljmp
add
jbe
inc
cmpsl
lock
sub
gs
adc
jg
pusha
movsb
xor
clc
xchg
cmp
mov
push
fdivr
out
sbb
jo
cltd
cli
cltd
stos
push
push
sbb
inc
jno
pusha
add
lgs
push
xor
mov
cwtl
test
aad
jg
scas
push
pop
dec
pop
jns
mov
data16
pop
sub
or
inc
and
enter
daa
cmpsb
jns
rorl
sbb
mov
dec
enter
fdivp
movsl
push
dec
sub
icebp
out
cmp
cld
icebp
xchg
cmpsb
cmpsb
inc
adc
jae
fisttps
or
mov
sbb
jl
stos
int3
jbe
clc
pop
enter
xchg
dec
push
jb
mov
nop
sbb
int3
pop
sti
xchg
out
popf
sub
aam
in
add
roll
mov
shrl
cmp
mov
dec
push
and
sub
and
idiv
pop
mov
out
sub
insb
xor
ss
pusha
xchg
jnp
aaa
push
dec
mov
mov
add
enter
enter
sbb
xor
adc
mov
test
std
lret
shll
enter
cmp
hlt
cmc
rclb
xor
dec
xchg
add
test
inc
shlb
cmc
sbb
xchg
mov
mov
fcoml
jge
sarl
inc
insb
ja
pop
sbb
les
test
ja
daa
lea
add
push
add
scas
lods
lret
cld
xchg
mov
xor
push
adc
call
data16
aad
sub
jo
xchg
call
jb
xor
jbe
pop
hlt
sbb
mov
add
add
mov
out
test
sub
push
xchg
sbb
push
js
dec
mov
cmp
or
aaa
in
jmp
sbb
xchg
push
ror
and
pop
pusha
adc
xor
xchg
js
mov
and
lahf
jmp
sub
ss
test
push
loopne
push
stc
push
divl
clc
mov
outsl
into
mov
sub
outsb
ret
dec
imul
jbe
mov
arpl
jb
cs
ja
jmp
mulb
fdivs
xchg
lds
int
mov
aam
jp
sub
push
cli
add
xchg
lods
cmpsl
mov
sub
icebp
mov
add
repnz
jns
sub
jl
cld
in
mov
jno
push
stos
mov
sbb
ss
cs
and
cmpsb
negl
cs
movsb
outsb
add
pop
cli
aad
test
sub
or
mov
cld
ja
clc
enter
js
cli
out
enter
filds
fadds
icebp
mov
lock
insb
xchg
adc
arpl
jmp
divl
popa
ret
dec
insl
adc
push
stos
xchg
adc
mov
enter
sahf
cli
mov
add
es
dec
cld
cwtl
lods
cmp
sub
mov
xchg
lods
lret
out
and
push
ss
or
out
out
mov
hlt
fwait
mov
mov
rcrl
sbb
jns
add
js
xlat
loope
out
cltd
mov
in
xor
cld
push
dec
aam
jns
fprem1
jb
in
imulb
ja
pop
mov
and
stos
xor
lock
mov
adcl
repz
mov
data16
xor
ja
loopne
sub
add
scas
in
pop
jg
testb
mov
aaa
daa
sbb
xor
icebp
push
adc
dec
sub
cmp
push
add
mov
test
mov
sub
lahf
idiv
xor
out
push
pop
arpl
test
cmpsb
pusha
dec
test
cmpsl
hlt
loopne
push
xchg
bound
sbb
dec
cmp
das
push
inc
mov
xor
sti
jmp
mov
into
jo
lods
lods
sbb
sub
divl
or
int
xor
lods
pusha
rcrl
cmpsb
lret
sub
orps
push
ja
insb
mov
test
in
out
int3
push
les
push
mov
inc
data16
fidivs
or
es
out
jbe
es
mov
shr
mov
xor
lds
int3
test
sbb
lods
sub
and
mov
mov
lret
push
xchg
cmpsl
adc
fucomip
push
aas
daa
clc
rclb
stos
xor
mov
or
xchg
cmpsb
jbe
adc
cwtl
xchg
jae
pop
cmpsl
cmpsl
mov
cltd
ficoms
fwait
sti
ret
cmp
inc
ja
loop
jmp
jmp
fsubrl
jae
ja
dec
in
sub
repz
ja
and
cmc
pop
push
into
xor
dec
adcl
mov
idivb
adc
push
sbb
xor
push
hlt
sub
jl
daa
xor
js
outsl
mov
fs
sub
push
int
pop
test
mov
pop
cmp
int
and
in
iret
rcrb
mov
add
push
push
ds
push
add
and
lods
inc
and
aaa
mov
js
push
mov
in
rcl
cmp
out
adc
push
in
std
aad
loope
sub
mov
cmc
pushf
xchg
pop
loop
mov
scas
sub
ss
test
jb
xor
loopne
in
dec
or
mov
dec
stos
sub
imul
clc
push
cmpsl
in
jmp
jnp
mov
imul
xor
mov
sbb
pop
pop
add
stos
shlb
mov
inc
imul
imul
mov
sub
cmp
in
xchg
idivb
sbb
gs
cmpsb
jns
xchg
mov
pusha
mov
dec
mov
jnp
mov
mov
call
jmp
mov
aad
push
div
xchg
mov
mov
lret
dec
push
adcl
shrb
dec
mov
inc
test
lock
push
ja
and
lods
sti
jmp
cld
pop
cld
negb
cmc
aam
mov
out
sahf
ss
es
pop
mov
cmc
daa
xlat
pop
sbb
lods
adc
aam
fcom
push
jnp
mov
insl
pop
adc
jbe
or
jp
adcb
cwtl
xor
test
push
dec
xchg
and
push
inc
jmp
push
stos
xor
sbb
jne
repnz
scas
mov
repz
xchg
jae
adc
mov
push
mov
mov
mov
cmp
dec
leave
xor
enter
adc
pop
pop
ds
ds
dec
out
cwtl
cld
sbb
cld
iret
daa
xorb
add
repz
dec
lcall
idivl
bnd
mov
cld
mov
pop
std
jecxz
xchg
mov
aaa
sbb
xchg
jae
add
cmpsl
jns
cli
mov
cld
pop
dec
dec
ss
dec
xchg
enter
xor
loopne
xor
push
icebp
xchg
lock
xchg
push
pop
push
test
or
mov
mov
xor
sub
pushl
sbb
imul
jl
xor
mov
adcl
mov
js
lahf
sub
das
mov
rolb
dec
mov
mov
xor
push
out
iret
inc
dec
add
repz
sbb
addr16
jb
mov
push
cmpb
fiaddl
daa
xorl
addr16
lea
push
sbb
mov
push
push
sbb
dec
dec
cwtl
pop
push
sbb
jae
in
inc
jmp
insb
adc
push
aaa
testb
ljmp
mov
and
in
fsubrs
add
cmpl
jecxz
lock
repnz
out
mov
and
inc
push
sbbl
sbb
sbb
repz
cmp
push
insb
jae
xor
fbld
in
jnp
xchg
pop
idivb
xchg
js
out
cwtl
jne
cmc
inc
call
pop
mov
fiaddl
mov
in
cmp
adc
lds
call
das
in
cmp
scas
in
jmp
jo
dec
jo
sbb
pop
adc
fcmovb
out
mov
adc
scas
std
fstl
out
clc
lods
mov
aaa
dec
movsl
fwait
or
sbb
sbb
stos
mov
rorl
jnp
shll
jge
jmp
push
fidivl
daa
aas
sbb
push
icebp
movsb
mov
pusha
iret
cmc
sti
lods
negb
in
jbe
fsts
sbb
sub
pop
inc
dec
int3
xor
out
xchg
cmc
add
pop
sbb
divb
mov
in
lods
imull
subb
sub
sbb
pop
daa
lock
clc
stos
imul
in
cwtl
jmp
adc
jb
xchg
addr16
add
mov
inc
push
xor
cwtl
add
repz
pop
cli
lock
and
pusha
push
push
je
mov
sbb
sbb
addr16
test
pushf
xor
xor
mov
adc
inc
aaa
cld
mov
pusha
mov
pusha
int3
daa
lea
cld
add
out
sub
fstpt
out
clc
or
add
addr16
push
xchg
mov
ljmp
lock
sub
imul
ss
notl
mov
sub
and
mov
mov
xor
xor
push
add
inc
add
mov
hlt
mov
ja
stos
iret
clc
pop
out
call
call
imulb
xchg
sbb
xchg
je
mov
xchg
cmp
jbe
rcll
mov
rolb
pop
add
lcall
jg
pop
gs
push
fimuls
out
add
lock
aam
leave
fdiv
sub
push
dec
lods
bound
add
mov
push
push
xchg
pop
or
mov
jo
nop
or
mov
cltd
push
fbstp
subb
aas
movsl
xor
idiv
fnsave
enter
nop
mov
or
cmp
xchg
out
xchg
jbe
jne
insl
jns
sub
adc
cs
pop
inc
testb
and
mov
sahf
inc
cltd
das
mov
pop
xchg
push
and
sub
out
push
aas
push
imul
or
js
adc
dec
jbe
xor
hlt
push
push
sbb
xor
jo
inc
sbb
rorl
or
jo
sub
adc
mov
cmp
fadds
out
mov
mov
mov
dec
dec
pop
pop
stc
dec
insl
je
clc
mov
leave
pushf
cwtl
fsubs
test
rcll
cmp
lods
int
repz
pop
mov
and
push
adc
mov
addr16
lods
jnp
mov
sti
pop
add
and
cmc
sbb
shll
mov
subb
lods
addr16
inc
mov
push
aas
dec
loopne
std
jne
leave
xchg
cmp
mov
rol
add
subl
dec
testb
sbb
xchg
push
pusha
dec
sub
xchg
repnz
add
stos
and
dec
and
jnp
add
dec
inc
xor
push
jns
xchg
jge
adc
into
stc
pop
gs
pusha
out
sub
clc
sbbl
mov
sub
outsl
out
ss
mov
mov
jl
sbb
jmp
jae
cmpsb
dec
out
jl
pushl
mov
sti
ret
or
sub
insl
idivb
into
popa
sbb
pushf
pop
mov
repz
enter
and
ja
movsl
ss
jnp
insl
mov
push
aad
sbb
push
inc
lret
aam
cmp
into
aaa
mov
icebp
lods
jmp
mov
aas
imul
dec
push
pop
std
aad
clc
addr16
je
or
jmp
stos
icebp
neg
mov
popf
pop
push
negl
scas
jbe
loopne
sbb
mov
cmc
rcrl
xchg
sub
cmp
cmpsb
adc
push
repz
pop
imul
push
pop
push
and
inc
adc
jnp
clc
jge
sbb
sub
in
or
mov
push
inc
sub
add
and
not
or
cmp
push
movsb
sub
jmp
xor
inc
hlt
sbb
popl
lock
pop
idivl
jne
mov
xchg
pop
jo
adc
xchg
mov
push
push
mov
fcoms
mov
inc
rclb
xchg
pop
imul
mov
sbb
lods
sub
ret
jg
loope
lods
daa
ss
xor
test
fistl
sub
pop
pop
push
adc
jo
je
movntps
daa
inc
ss
sbb
ret
clc
scas
mov
adc
xor
icebp
jecxz
pop
rolb
test
add
in
lsl
jne
js
jecxz
jo
pop
adc
sbb
pop
pop
adc
dec
inc
mov
or
mov
xor
div
cli
mov
pop
sbb
mov
out
add
xchg
push
fnstsw
outsb
push
test
pushw
adc
repnz
test
js
xor
pusha
push
outsb
aas
mov
mov
fwait
mov
int3
and
mov
test
fs
into
push
mov
cwtl
std
out
inc
add
js
out
lock
les
or
repz
add
push
imul
hlt
rcrb
cmc
pop
mov
fs
xor
jae
push
dec
push
sbb
je
adc
sub
call
nop
pushf
mov
xchg
pop
mov
mov
push
decl
adc
jbe
enter
js
jae
mov
ljmp
xor
daa
push
cmp
daa
fadds
rcll
mov
push
cwtl
cmpb
sbb
clc
icebp
testb
cmpsl
xchg
fcoml
dec
ja
cmc
xlat
xchg
pop
sahf
add
ja
mov
aas
push
sahf
icebp
sub
sub
and
divb
add
ja
in
ja
aam
sub
adc
mov
xor
adc
fs
xor
popa
fdivrs
add
icebp
ss
loope
or
insl
ja
push
and
jns
cli
mov
sbb
xor
leave
push
and
fisubrl
xchg
mov
pop
pusha
jnp
jb
mov
sub
push
icebp
mov
or
cmp
inc
inc
cmpsl
rorl
and
mov
daa
xor
inc
or
and
and
and
add
cmp
sbbl
mov
mov
sbb
fcmovu
cmc
push
imul
imul
rcr
push
pop
mov
sbb
aas
inc
pop
daa
scas
imul
cmp
lcall
xchg
pop
xor
pop
sbb
mov
insb
out
mov
push
sbb
sahf
daa
jbe
or
outsl
jae
push
lcall
fs
cmp
repnz
popa
xor
xchg
jae
xor
xchg
mov
inc
push
test
cmp
cwtl
xchg
in
jae
das
or
sbb
xchg
ret
les
andl
je
add
jne
fwait
mov
push
out
out
dec
adc
test
cltd
xchg
push
lcall
movsb
push
xor
push
ss
mov
fcmove
fmul
movsb
ljmp
push
fcoms
or
add
or
dec
or
shrl
cld
iret
and
add
mov
inc
clc
scas
dec
shl
shrb
mov
ficoml
push
pop
in
add
push
test
mull
insb
out
sar
push
mov
stos
sub
jp
call
fldt
mov
inc
mov
push
cwtl
clc
int3
enter
or
xor
dec
jo
push
mov
mov
mov
addr16
repz
test
loopne
push
ds
jno
xchg
jge
cmc
sbb
mov
lret
mov
adc
and
js
insb
cmp
push
pop
sbb
stos
xor
cmp
test
decl
fdivrl
push
pop
cmpb
push
into
jb
xchg
sarb
jae
mov
iret
dec
adc
test
adc
hlt
and
stc
addr16
jb
pop
push
dec
movsl
push
hlt
mov
adc
mov
lcall
cld
add
sbb
mov
shl
xorl
cmp
sbb
jae
imul
hlt
fmul
cwtl
mov
adcb
mov
jl
jne
mulb
add
push
push
jmp
imul
dec
sbb
dec
aas
and
aaa
push
pop
pop
aaa
cltd
push
negb
sbb
pop
loopne
in
pop
iret
lahf
jno
cmpsl
pop
jge
xchg
ss
cs
lods
xchg
jnp
jb
mov
into
movsl
and
repz
sahf
mov
mov
and
roll
dec
adc
sbb
jp
xor
mov
stos
imul
xlat
stos
nop
sub
loopne
imul
mov
push
pop
push
sbbb
js
cld
mov
jae
jl
pop
jp
pop
es
push
sub
jmp
std
pop
arpl
sub
sub
shr
sbb
xchg
pop
movsb
je
adcl
jp
call
mov
test
rcll
mov
lock
testb
leave
les
push
movsb
pop
sub
cmc
out
in
pop
push
push
lret
hlt
repz
dec
jecxz
aam
into
mov
rolb
aad
jne
mov
lods
int3
jbe
adcb
push
sbb
dec
clc
xor
inc
ss
pop
out
out
jbe
test
cli
mov
jmp
repz
pop
push
mov
cs
gs
jl
rorb
or
push
cmpsl
rcrl
sbb
loopne
dec
test
push
movsb
cmp
mov
lcall
ds
inc
imul
cli
loopew
leave
cli
movsb
scas
punpcklbw
jb
into
aam
fstpt
cmp
inc
in
cwtl
mov
ja
mov
stos
jbe
mov
sbb
inc
cmc
or
xchg
icebp
push
movsl
ja
les
clc
mov
mov
xchg
fs
pop
push
push
inc
sbb
lds
clc
clc
les
inc
orb
movsl
shl
jo
sbb
cmpsl
test
sub
and
jbe
mov
push
daa
push
pop
inc
and
cmp
jmp
mov
push
orl
pop
aam
in
addr16
mov
jno
push
add
inc
mov
push
daa
notl
test
jle
repz
add
pop
loopne
cmp
mov
jp
lods
and
jl
adc
test
fidivrl
jb
icebp
push
xor
cld
andl
imull
xchg
ja
push
sti
ja
mov
sbb
rclb
nop
imul
repz
daa
imul
fsubrs
xchg
movsl
js
repnz
adcb
sbbb
pop
push
jb
sbb
add
test
test
or
lea
jg
daa
jbe
add
ss
mov
cld
cmc
xlat
jp
cmc
push
idivb
mov
xor
pop
xchg
outsb
cmp
icebp
push
lock
subl
push
mov
pop
adc
rcr
mov
jmp
je
sbb
data16
jne
mov
lret
jmp
test
ficoml
push
movsl
sbb
xchg
xchg
lds
cld
je
cmp
ffreep
mov
jl
xchg
enter
push
daa
mov
mul
adc
mov
ss
xchg
xlat
jne
mov
add
cmpsl
ret
inc
mov
mov
dec
xchg
imul
cmp
pushf
jmp
and
int3
out
outsb
fs
lds
sbb
das
nop
ljmp
cmp
dec
jbe
add
loopne
cmpsl
ja
mov
out
out
fmuls
notl
mov
stc
inc
push
mov
sub
jbe
in
scas
ret
pop
dec
xchg
sbb
sub
add
xlat
cld
movsl
fdivr
push
xlat
in
mov
mov
ss
outsl
nop
call
sbb
xor
insb
icebp
mov
push
pop
std
ja
out
sbb
pop
es
daa
pop
hlt
repnz
cmpsl
loop
mov
data16
movsb
mov
push
xor
fmul
hlt
cmpsl
rclb
in
add
shll
hlt
sbbl
mov
cwtl
adc
mov
or
insl
cmp
lock
jl
mov
mov
sub
mov
sbb
repz
push
or
rcr
icebp
jo
pop
inc
inc
inc
jp
lds
cltd
shr
mov
divl
adc
fwait
ja
or
not
cmpsb
and
mov
mov
xor
mov
sbb
xor
mov
mov
adc
pushf
add
dec
jg
mov
bound
xor
pop
xor
xor
cmp
iret
pop
jecxz
pop
push
lahf
clc
insl
xchg
pop
test
jp
imull
mov
pop
cmp
cmp
pop
jbe
xchg
rcll
jmp
mov
lock
dec
cmp
je
push
jp
mov
cli
and
or
lcall
adc
add
mov
jne
adc
je
cmp
add
jo
cmpb
sbb
inc
es
sbb
sub
jg
cmp
js
clc
cmp
or
testl
push
outsl
xor
add
ja
arpl
out
mov
sti
out
cmc
sahf
cld
inc
jecxz
shll
ret
or
je
adc
and
ss
push
sub
test
clc
mov
icebp
push
aad
fldt
aaa
xlat
loope
add
push
lea
clc
daa
scas
sub
ja
fnstenv
jo
cwtl
das
mov
sub
mov
test
pusha
cltd
jo
xor
cli
pop
ja
mov
mov
mov
scas
aaa
add
ja
cs
pusha
dec
cmc
adc
cwtl
icebp
loop
jge
or
adc
stos
setg
sub
bswap
je
adc
mov
scas
fincstp
daa
loopne
pop
xor
test
lcall
sti
test
in
std
pop
jle
rorl
pop
and
jmp
icebp
sub
dec
xchg
stos
cmpsb
loope
dec
cmp
xchg
pop
push
cld
in
mov
xor
sub
clc
or
or
shrb
dec
lods
iret
add
je
add
jbe
imul
push
pop
lods
jb
mov
sbb
fistl
sub
cmc
push
push
subl
xchg
lock
mov
incb
dec
outsb
lcall
cmpsb
es
adc
mov
enter
add
jl
js
or
test
push
ss
push
ljmp
dec
orl
dec
test
fnsetpm(287
pop
xchg
xor
xor
pop
cli
dec
xor
test
popa
sub
ret
out
subl
clc
icebp
add
push
out
pop
pop
lea
std
cld
inc
add
packssdw
scas
in
xor
xchg
mov
arpl
sti
rorb
mov
ficompl
jne
xchg
lds
xabort
ljmp
sbb
dec
mov
push
jae
lcall
mov
mull
or
inc
pop
and
incl
sub
into
movsl
inc
adc
mov
lcall
jb
es
clc
mov
lret
cmpsl
push
shl
xor
push
test
mov
outsl
sub
clc
or
cmc
loop
aad
mov
loopne,pn
in
adc
jno
sbb
call
je
ret
inc
imul
mov
push
hlt
and
xor
adc
fisubrl
push
ja
pop
bnd
cmp
and
mov
mov
pop
pop
out
xor
out
jg
stc
pusha
addr16
jae
mov
pop
fildll
les
orb
add
and
mov
push
shrb
mov
and
ja
inc
daa
adc
push
shr
imul
std
loopne
adc
daa
cmpb
aam
mov
push
mulb
aaa
fadds
sub
push
cmp
imul
xor
pop
mov
pushf
jmp
mov
and
decl
xlat
in
subb
cld
fisubs
test
in
imull
daa
ds
movb
cli
mov
aaa
jp
jmp
dec
mov
jbe
lds
out
push
xlat
adc
std
std
lods
adc
mov
enter
cmp
mov
out
push
push
out
out
cmp
ja
pop
xchg
test
push
jns
lock
hlt
mov
pop
add
push
aas
cmc
sub
mov
push
test
xchg
xchg
pop
push
xor
jbe
data16
mov
push
mov
mov
push
push
jo,pt
adc
and
das
mov
into
nop
cmp
addr16
in
push
xorb
pop
mov
mov
jo
sub
push
inc
ljmp
dec
mov
pop
test
nop
xchg
data16
addb
sti
into
scas
dec
lahf
or
rcrb
sbb
andl
imul
dec
mov
ljmp
stos
inc
xchg
mull
cld
scas
ffree
test
pop
cmp
inc
idiv
lret
and
das
jp
push
data16
js
pop
scas
jmp
fiaddl
jbe
push
xchg
jns
repz
add
inc
and
add
lret
std
clc
mov
daa
inc
ja
dec
add
cmpsb
jne
mov
icebp
mov
jo
fnstcw
adc
pop
add
mov
test
dec
push
lock
stos
xor
out
pop
daa
jg
mov
jb
push
ret
outsl
mov
repnz
es
pop
xchg
mov
roll
in
pusha
jae
fcomps
loope
push
aam
jnp
es
ds
xor
into
test
inc
jmp
subb
pop
pop
jns
fidivl
lret
xchg
or
out
testl
jmp
jo
adc
test
cmc
lods
fidivs
push
adc
xchg
jmp
insb
stos
shl
cwtl
push
cld
int3
divb
cmp
es
jp
xchg
lods
mov
mov
pop
and
and
outsb
fwait
or
test
dec
mov
inc
add
fsts
push
movsb
add
xchg
negl
push
dec
xchg
fsubrs
sub
loope
sub
and
out
repz
push
jmp
fcmovne
lock
repnz
inc
xchg
ds
sub
testb
test
lea
dec
cmpl
xchg
dec
cmpsl
mov
in
test
icebp
lock
jb,pn
comiss
xchg
addr16
icebp
mov
sbb
mov
jae
call
les
sbb
js
dec
add
cmc
lret
cld
test
mov
or
add
iret
jmp
jae
sbb
jne,pt
outsb
cmp
loope
cld
xchg
cmpl
js
dec
hlt
jno
rorl
sub
mov
ss
je
icebp
xor
loope
or
sub
or
test
lods
mov
icebp
push
sbb
das
jb
jo
push
ret
nop
pop
or
jo
mov
movsl
lock
inc
mov
aam
mov
insl
jne
testl
jo
xlat
ss
stos
in
addr16
sbbl
roll
dec
add
in
sti
scas
lret
adc
imul
and
inc
sti
jecxz
std
jmp
xchg
mov
jbe
push
push
mov
shlb
and
cwtl
repz
outsb
je
cmp
or
testb
sub
cmp
out
hlt
nop
rcll
shl
xor
sub
sbb
and
sbb
push
cwtl
jl
loop
out
dec
lahf
sbb
pop
insl
xchg
inc
cmpsl
loop
xchg
push
dec
pop
add
scas
icebp
imul
inc
dec
fldt
or
cmp
in
sbb
and
sbb
push
in
call
icebp
clc
mov
pop
popf
sahf
aaa
ret
xchg
adc
jbe
jmp
fsts
loopne
jne
push
outsb
popf
mov
mov
pop
mov
repz
jb
icebp
dec
enter
xor
in
inc
fdiv
lock
cmp
popa
mov
jmp
pop
pop
movsl
xchg
adc
cltd
push
jns
incb
cld
inc
xchg
scas
or
js
fdivrp
test
adc
ds
push
jns
outsl
add
dec
adc
and
mov
icebp
ss
enter
enter
imul
pusha
imulb
shll
xor
imul
aam
xchg
jle
or
pop
movsl
sub
jns
push
cs
inc
lret
cwtl
mov
sbb
in
mov
sbb
mov
testb
nop
pop
inc
lock
fdivs
out
in
aaa
mov
in
not
dec
aaa
cmp
daa
aad
incb
arpl
xchg
js
je
lds
lret
repz
sub
out
nop
cli
cs
movsl
jl
mov
ja
or
sub
pop
or
or
cld
sbb
es
imul
js
cmp
push
jle
xor
mov
adc
push
adc
loop
mov
negl
push
cmp
mov
inc
xchg
or
cld
clc
mov
outsb
div
out
or
hlt
cmp
xchg
gs
cmp
dec
adc
scas
pop
insb
icebp
dec
inc
xchg
out
adc
jno
mov
cwtl
loopne
cmpsl
scas
sbb
repz
xor
mov
repz
out
mov
or
hlt
or
xor
cld
jle
mov
mov
inc
xor
je
repz
pop
jb
jae,pn
aad
jg
pop
xchg
adc
sub
mov
paddsb
sub
sbb
imul
cmc
movsb
pushf
inc
or
xor
clc
out
mov
sbb
adc
aam
sbb
dec
mov
iret
test
cmpsl
movsb
clc
out
inc
sarl
lret
push
fsubr
cld
into
jecxz
or
push
add
scas
out
scas
int
xchg
lcall
mov
mov
mov
sbb
push
dec
aad
sarb
lods
mov
xchg
sbb
mov
jns
data16
lret
xor
sub
sti
add
sbb
popa
push
mov
dec
std
int
hlt
inc
cmp
mov
jle
es
mov
out
cmpb
sub
bound
jno
and
dec
cmp
push
aas
stc
insb
sahf
add
cltd
xor
add
push
add
cmp
pop
jp
repnz
push
pop
mov
jnp
rcrb
jmp
jae
fnstenv
add
daa
rcrl
pop
daa
outsl
mov
sub
mov
gs
mov
add
push
and
mov
sti
icebp
sbb
inc
aam
scas
pop
test
fsubr
les
out
and
and
popl
test
dec
fistps
xlat
idiv
mov
inc
jbe
test
mov
adc
les
movsb
sub
push
mov
insb
mov
inc
sub
sub
shlb
int3
ljmp
pusha
test
mov
and
jmp
lock
pop
mov
rclb
scas
aas
scas
cmpsl
xchg
xchg
jmp
imul
adc
xchg
cld
ds
sbb
mov
mov
push
pop
rcrb
push
jo
loopne
aam
int
mov
aas
sub
add
lret
dec
cld
dec
pop
push
or
xchg
mov
push
push
xchg
mov
pop
cmpsb
aam
negb
mov
mov
mov
pusha
pop
fwait
or
push
adc
mov
repz
pop
subl
push
pop
cmp
fwait
adc
adcb
sbb
push
or
data16
xchg
pop
mov
clc
jnp
test
push
add
iret
sarb
int3
pop
mov
scas
mov
sbb
shrl
pop
or
mov
mov
sbb
push
cmovne
inc
dec
sbb
pop
sahf
pop
lock
ljmp
insb
int
outsl
sbb
adc
add
ficomps
fsubrs
in
xor
mov
lcall
mov
fstps
int
dec
sbb
pusha
lods
sub
lret
jo
adc
push
sub
clc
mov
sub
rdpmc
popf
and
sbb
cs
test
xchg
mov
sub
push
repz
out
ret
mov
outsl
push
xchg
lods
loopne
clc
clc
mov
inc
mov
addr16
scas
lock
and
dec
repz
insl
jno
add
push
cld
adc
icebp
sub
sbb
sub
repz
mov
jnp
inc
jo
iret
lcall
add
sub
lahf
adc
sbb
cld
push
data16
push
pop
mov
cmc
incl
pop
mov
into
sbb
repnz
cli
daa
jns
testl
and
je
adc
lods
fisttpl
mov
push
mov
xchg
out
add
sbb
adc
adc
mov
stos
mov
xchg
repnz
cmpsl
jb
enter
mov
xor
testl
loopne
call
or
adc
cmp
negb
jbe
pop
mov
pop
mov
push
xor
in
and
jae
push
or
cmpsl
bound
ss
cmp
or
daa
jl
push
ja
into
mov
daa
add
cmpsl
addr16
xchg
repz
add
cs
into
pop
ror
shrb
lcall
jb
push
adc
je
add
push
nop
jno
sub
addl
enter
enter
daa
add
push
mov
and
sbb
movsb
pop
xchg
pop
in
cwtl
bnd
xor
fdiv
repnz
js
jno
adc
add
div
repnz
out
sti
pop
mov
add
out
add
enter
test
or
xchg
cmpsb
lock
xor
push
repnz
jo
cmpsl
adc
ret
inc
and
in
or
mov
imul
xlat
xor
xchg
mov
xor
in
aaa
out
out
mov
popf
xor
insb
mov
lock
aam
addr16
int
mov
mov
mov
mov
clc
or
add
outsb
push
mov
add
adc
xchg
mov
and
je
int
xchg
lsl
and
pop
pop
jae
push
push
jbe
daa
fwait
test
and
loopne
repnz
mov
jno
repz
push
clc
jo
insb
xor
push
imulb
xor
xchg
out
jmp
xchg
outsb
lock
repnz
sub
rolb
dec
pop
xchg
roll
shrb
xchg
xor
fdivr
repnz
fdivs
jno
div
push
enter
or
repz
divl
fsubrs
ja
push
add
insl
add
insb
jmp
in
fnstenv
daa
stos
pushf
adc
mov
imul
aaa
xchg
xor
xchg
pop
cmpsl
sbbb
add
adc
addr16
out
and
aad
mov
daa
clc
cmp
jmp
rcrl
repnz
pop
cmp
add
or
lods
adc
xor
loope
xor
xchg
mov
jne
xor
cld
das
jne
out
mov
divl
push
bound
jp
fsubrs
push
mov
notb
fidivl
ja
icebp
cmc
jne
mov
cmc
jbe
sub
push
ljmp
and
fsubl
cli
add
je
daa
jmp
jae
mov
loope
imul
or
mov
jne
hlt
repnz
cmp
jo
out
pop
adc
pusha
das
popf
imull
imul
jne
sarb
and
loope
int
imul
adc
or
add
adc
test
dec
xlat
push
sub
push
idiv
or
shl
syscall
scas
jle
mov
push
cli
ljmp
or
pop
jno
shrb
mov
xchg
repz
sbb
sbb
jbe
icebp
push
push
shrb
stc
ret
cmpsl
push
dec
ja
ret
lret
adc
pop
ja
add
mov
cmc
jl
push
in
pushf
cmc
cltd
jne
imul
imul
lock
dec
dec
add
adc
icebp
pop
xor
push
jbe
test
jno
and
jae
push
shll
dec
ja
lods
cmpsl
push
push
divl
js
lret
xchg
pop
ja
enter
dec
or
std
les
shl
out
in
jp
repz
pop
add
sti
cmp
inc
add
xchg
insl
cmpsl
adc
into
sub
cmp
mov
adc
xchg
xchg
cmpsl
or
pop
cltd
out
push
jnp
repnz
push
es
cltd
xlat
test
int
sub
mov
or
sub
push
cmp
sbb
pop
not
loopne
outsb
insb
mov
pop
pop
sub
adc
adc
push
xlat
out
out
jo
mov
lods
movsb
je
cltd
jl
out
add
xchg
mov
and
test
mov
cmc
int
pop
xchg
jecxz
shll
aam
lods
cmp
imul
mov
idivb
jmp
ja
popa
mov
pop
add
scas
int
inc
fiadds
add
into
and
hlt
shll
adc
sbb
pushf
int3
rorl
icebp
pop
mov
adc
mov
sbb
repz
popf
mov
mov
jb
push
imul
mov
pop
inc
jns
daa
into
or
mov
popl
or
sbb
pushf
sub
mov
add
mov
dec
mov
das
rorb
pop
icebp
in
jo
lds
leave
cwtl
mov
nop
sbb
hlt
repz
xchg
cmpsl
pop
arpl
ss
add
sbb
xchg
adc
idivl
out
jle
sub
ss
dec
push
lcall
sbb
xchg
mov
movsl
add
icebp
das
loopne
pop
mov
pop
jecxz
inc
jge
xchg
insl
adc
and
or
fdiv
test
mov
notl
flds
mov
add
pop
push
daa
mov
out
pop
fidivrs
lahf
icebp
mov
mov
lock
adc
cld
mov
mov
notl
sti
fidivrl
add
push
mov
xchg
push
adc
add
test
out
in
jmp
mov
push
pushf
popa
push
and
pop
addr16
negb
div
xchg
out
adc
mulb
cwtl
scas
insl
fldenv
pop
pusha
jecxz
xor
outsb
icebp
out
out
hlt
int
nop
cmpsb
push
pop
std
scas
cwtl
dec
pushf
addr16
jo
push
cmpsb
sbb
call
mov
add
xchg
hlt
push
ja
mull
daa
xchg
insb
sbb
mov
lret
iret
ss
fcomip
rclb
xchg
lock
dec
movb
pop
pusha
aam
aaa
or
xchg
and
sbb
adc
shr
sbb
test
idivb
dec
cmp
jmp
mov
lret
in
inc
mov
mov
insb
pop
pop
lods
push
ljmp
subl
pusha
cmp
mov
loopne
jle
add
cmp
push
addr16
push
adc
inc
addr16
fwait
inc
cmpsb
mov
cmpsb
out
repnz
pop
ja
dec
mov
jp
shrl
lret
push
xchg
cmpsl
ret
andb
push
cltd
clc
jo
jp
lock
das
sub
mov
cwtl
add
lret
add
dec
cmp
std
xchg
xor
daa
jmp
push
adc
lock
push
cmpsl
loopne
mov
out
icebp
xor
das
mov
loopne
xchg
jmp
push
lock
out
fdiv
cli
aad
adc
decb
icebp
add
jo
adc
cmc
enter
mov
outsb
call
out
add
push
add
in
push
subb
jmp
enter
out
aaa
xor
xor
xchg
fdiv
divl
xor
icebp
sahf
add
xchg
xor
fwait
xchg
xchg
lahf
lds
scas
scas
jl
daa
lds
ja
jge
cld
scas
mov
dec
xor
test
dec
push
jo
inc
or
push
cld
icebp
push
es
les
fistpll
lods
lahf
jmp
shr
push
mov
or
sbb
test
out
sub
call
adc
xchg
cwtl
mov
add
outsb
mov
adcb
lock
add
or
or
out
jbe
in
fnstsw
dec
sbb
int
cmp
fwait
xchg
adc
fcos
jmp
sub
sub
cld
adc
add
cmpsl
popf
adc
js
add
or
loop
scas
pop
aad
lret
hlt
fmuls
xchg
mov
testl
push
dec
add
push
lods
sub
xor
adc
aam
icebp
lods
push
push
jo
jns
mov
jnp
add
clc
test
movsb
sbb
pusha
mov
insb
xchg
daa
cld
xor
dec
mov
dec
orl
js
cwtl
jmp
xchg
loope
or
lods
neg
sub
in
jmp
inc
push
popf
and
hlt
jo
pop
in
rcrb
inc
and
addb
ret
lock
jb
fcomps
lret
mov
mov
lods
clc
ljmp
add
rol
add
ret
xlat
pusha
add
mov
push
add
daa
xor
fwait
mov
jo
data16
adc
or
ja
xchg
pop
jle
mov
jbe
jmp
sbb
jle
js
bnd
or
adc
jns
mov
das
scas
js
or
push
lock
push
rorl
fcoml
std
push
jnp
mov
inc
dec
icebp
clc
lods
popa
xor
cmp
jmp
add
pushf
jnp
mov
test
je
cli
inc
pushf
icebp
cld
xor
cwtl
loope,pn
and
cwtl
imul
in
scas
adc
std
aas
mov
clc
imul
pop
push
stos
test
cld
je
cld
mov
jo
jns
cmp
push
ficoml
cmp
mov
dec
out
or
lock
addr16
mov
aad
stos
jecxz
cmp
or
outsl
jp
and
push
dec
pop
lock
dec
mov
jmp
out
mov
dec
mul
mov
xlat
cmpsb
es
pop
push
loop
outsl
stos
in
add
pop
lea
jae
xchg
inc
xlat
jb
in
xchg
stc
cmpl
in
movsl
sub
xchg
and
xchg
ja
xchg
pop
xchg
push
insb
test
xchg
jp
dec
cmpsl
fldcw
ds
jle
pop
or
jnp
lods
out
lahf
arpl
jmp
push
loope
push
lods
loopne
clc
cmp
mov
movsb
jle
jb
lds
mov
imul
out
xor
pop
mov
jne
adc
cli
and
jge
clc
ja
push
xchg
xchg
mov
lret
cli
cs
imul
jno
add
sub
jp
shl
pop
mov
sub
sub
loopne
nop
lods
ja
jb
outsb
xchg
sub
ja
jns
stos
or
cmp
pop
push
loop
inc
jne
idiv
and
pusha
and
lret
xor
adc
adc
jg,pn
jp
push
adc
ja
movsl
jne
js
scas
xchg
out
push
lods
sub
int
inc
and
xchg
or
sub
fs
int3
push
mov
aas
repnz
pushf
jae
xlat
cmp
std
jno
fs
mov
outsb
out
push
out
xor
mov
testl
lock
or
icebp
adc
mov
mov
xor
cmc
push
push
jl
or
xor
jno
in
dec
test
sub
loopne
xchg
cmp
mov
cmp
jns
mov
cwtl
xor
push
mov
out
sbb
cmp
imul
pushf
adc
fstl
sub
xor
and
lret
cmp
rcr
in
stc
pop
inc
aam
out
jl
mov
push
push
addr16
imul
mov
adc
inc
divb
ja
jns
push
mov
lret
push
sub
fbld
popf
shrl
mov
push
push
mov
in
cmpsl
dec
mov
out
mov
mov
push
lock
cld
psllq
ja
xchg
add
ja
divl
inc
in
adc
rcrl
xlat
testl
xor
cmpb
mov
mov
xor
inc
enter
nop
pop
popf
in
outsb
lahf
enter
jno
icebp
mov
out
jle
or
push
outsl
cs
out
test
into
shl
push
into
xchg
xor
push
push
inc
push
mov
mov
test
and
shll
test
enter
cwtl
dec
imul
repz
aas
pop
lcall
add
dec
loop
or
adc
pushf
pop
or
sub
pop
cmp
push
and
pop
data16
fimull
sti
cmp
inc
and
imul
sub
sbb
adcl
andb
mov
push
enter
dec
cmp
addr16
dec
movb
loope
imul
ss
cmpsl
adc
jbe
cmp
push
push
pop
pop
xor
jmp
int
cmp
push
pop
add
cmpsl
mov
pop
mov
rcl
ljmp
adc
pop
xor
jno
arpl
or
jg
fdivrs
mov
shrl
frstor
mov
mov
test
pop
mov
jb
jl
adc
notl
es
dec
cli
push
mov
jecxz
ds
inc
scas
ljmp
xor
out
out
dec
imul
aas
jns
push
cmpsl
rcrl
enter
pop
into
cmc
scas
addr16
aad
fisttps
sbb
inc
or
adc
pop
xchg
xchg
jno
loopne
cld
push
mov
stc
mov
fprem
mov
fcomp
ficomps
push
xchg
xor
sbb
daa
mov
cmp
icebp
inc
mov
out
into
addl
xchg
push
pop
out
test
js
jmp
sbb
scas
shrl
pop
repz
inc
adc
mov
test
shlb
add
ss
ja
nop
push
mov
jge
dec
sbbb
outsb
push
enter
inc
insb
divl
pop
mov
xor
jg
js
sbb
aas
insl
leave
adc
sti
fsubs
pop
jle
lock
push
sub
sub
jbe
or
fwait
add
push
xor
out
cmp
shll
cli
imul
or
cmpsl
xchg
insb
dec
fld
mov
inc
and
mov
fwait
insl
cmc
xchg
push
out
cli
movsb
sbb
dec
jge
negb
pop
call
daa
xlat
test
and
pop
xchg
xor
sbb
rclb
adc
fsubr
in
scas
outsb
pop
inc
ja
imul
daa
push
fisubl
cltd
cmp
sbb
stos
push
mov
sub
mov
sbb
loopne
cmpsb
ret
std
aad
insb
jecxz
adc
out
repz
mull
idivb
pop
cmc
movsb
pop
adc
mov
add
leave
xlat
and
pop
popa
jbe
pusha
mov
xchg
cld
xor
push
int
sti
mov
stc
cmp
fsubrp
dec
inc
push
cmp
jg
and
pusha
inc
notl
aaa
xchg
push
idivb
inc
ja
call
push
imull
push
or
push
pop
popa
jo
mov
nop
call
mov
insb
push
push
push
mov
dec
outsb
cmpl
les
and
and
push
pop
ret
cld
push
cltd
mov
xchg
or
jmp
dec
cs
cmp
test
jmp
inc
mov
add
mov
adc
xchg
inc
push
pop
mov
lea
lds
sub
xchg
mov
pop
test
shlb
rcll
cmp
sub
xchg
outsb
mov
jb
fisttpl
das
cld
cmp
xchg
cmpsb
pop
gs
and
add
cmpsl
jno
rcrb
les
inc
inc
icebp
inc
into
daa
pop
movb
ja
rclb
mov
dec
loop
jns
enter
insb
jns
in
jmp
lods
pop
aad
mov
xchg
pop
sbb
enter
push
push
leave
jl
notl
lock
jbe
or
xchg
mov
pusha
out
dec
jle
sub
mov
in
mov
imul
sub
pushf
cwtl
pop
lods
outsb
dec
jbe
pop
or
mov
pop
push
xor
fnstenv
scas
sbb
aas
aas
dec
icebp
adc
dec
push
in
rolb
jge
pushl
push
add
mov
std
mov
inc
inc
xor
cli
sbb
in
jle
inc
imul
jns
out
push
test
xor
adc
xor
sarb
inc
jp
imul
pop
pop
imul
mov
aaa
sbb
jnp
add
mov
mov
push
mov
cmpsl
jbe
mov
and
aas
push
dec
xlat
push
cmc
rolb
push
repz
fwait
ret
jp
pop
push
mov
stos
lock
divb
addl
aas
ret
jbe
mov
sbb
nopl
mov
pop
test
ret
or
jo
cld
inc
push
mov
addr16
pop
dec
jle
xchg
jne
push
icebp
and
in
rclb
leave
roll
mov
ror
push
sbb
lods
rcll
ficompl
mov
push
jno
js
loop
rorl
aaa
push
mov
push
mov
pop
jp
scas
out
cmpsl
mov
mov
imul
push
sbb
inc
les
mov
push
inc
mov
movsb
push
sub
mov
jnp
mov
xor
push
jmp
xchg
dec
in
jne
aam
scas
mov
cmp
sbb
and
cltd
test
jle
idivl
cmp
sub
xor
jns
mov
add
mov
jg
mov
add
sbb
js
data16
cwtl
lods
adc
push
dec
cmp
popf
and
push
lods
ljmp
pop
pop
lds
xchg
fs
push
dec
aaa
fstpt
push
int3
cwtl
loope
fstpt
fwait
inc
and
decl
add
out
push
xor
xchg
ds
loope
jae
mov
lods
mov
mov
xchg
and
sub
adc
outsb
push
mov
dec
inc
pop
icebp
loop
iret
insb
pop
arpl
xor
enter
jo
and
xchg
xorb
cmpb
mov
mov
and
push
mov
inc
sbb
xchg
pop
jbe
int
daa
jmp
mov
lahf
cmp
pop
inc
pop
lds
je
clc
cmpsl
dec
pop
mul
scas
dec
adc
push
jne
call
hlt
or
aas
xorl
sbb
lods
mov
sub
sbb
push
je
daa
cmp
sbb
pop
vpminsb
call
mov
addl
mov
out
jecxz
in
pop
sahf
xor
xchg
add
sub
dec
ja
mov
daa
xor
pop
inc
sub
or
sub
les
xchg
and
sti
sbb
cltd
mov
inc
shrb
cli
negb
xchg
xor
idiv
iret
shll
adc
adc
sub
push
pop
mov
cmc
sub
cltd
iret
cld
xor
sbbl
mov
test
pop
mov
imull
adc
jge
aad
test
xlat
loop
jbe
mov
jbe
in
loop
arpl
jmp
mov
jns
push
and
jne
mov
xchg
cli
jp
add
pusha
sbb
outsl
mov
imul
fucomp
sub
inc
leave
lret
xor
jbe
pop
dec
xchg
mov
cmc
push
iret
mov
cld
push
std
lcall
in
decb
fwait
pop
push
loop
mov
xchg
jns
ret
xor
add
push
cld
adc
outsb
sbb
inc
pusha
jle
icebp
cltd
addr16
jp
sub
aam
in
adc
adc
xor
clc
lea
xor
push
xchg
out
pop
mov
adc
cmp
scas
popf
scas
dec
cmp
in
jb
jo
sub
mov
mov
das
repz
icebp
hlt
or
jae
out
gs
sub
sub
add
fildll
add
outsl
pop
or
test
inc
into
mov
sub
pop
hlt
jp
add
xchg
lock
cmpl
dec
pop
sub
into
sahf
push
stos
adc
stos
pop
ja
rorb
add
jmp
lea
and
cmpsl
push
xchg
dec
divl
arpl
xchg
test
in
ja
mulb
or
xchg
push
inc
mov
push
push
mov
nop
add
repnz
push
jno
adc
clc
xchg
add
lds
ss
adc
out
ja
push
xrelease
imull
inc
in
cli
mov
insb
std
enter
xchg
cmpb
aaa
xor
push
or
xor
xor
fsubr
add
in
cmp
mov
outsb
push
das
pop
add
xchg
ja
xor
adc
les
mov
hlt
insb
xlat
ja
xor
divb
enter
je
lock
sbb
push
insb
pop
jbe
lock
enter
push
popf
inc
push
repnz
inc
sub
js
jno
arpl
xor
iret
or
out
adc
or
xor
daa
xchg
shl
sub
andb
std
adc
push
out
add
outsl
pop
sub
ret
lods
idivb
sbb
or
rorl
or
je
mov
fadds
mov
xlat
sar
xchg
jnp
sub
clc
mov
jae
in
inc
add
push
adc
or
lret
mov
je
and
hlt
adc
loopne
rcrb
mov
incb
xchg
mov
addb
sub
cmp
std
xchg
and
add
loope
adc
inc
enter
sub
and
pop
leave
mov
cwtl
xor
cwtl
pop
das
xchg
inc
push
xor
ja
sub
sbb
jmp
sub
std
clc
cmpsb
add
repz
lea
push
pop
add
sbb
lods
out
pop
imul
fwait
test
add
out
daa
add
jns
out
mov
push
add
mov
fs
dec
movsb
mov
notl
pop
and
push
and
add
or
push
push
hlt
cmp
mov
test
pop
inc
cmp
pop
stos
jns
rclb
xchg
pop
sub
fdivl
or
dec
mov
xchg
aad
daa
lods
pop
cld
movsl
fstl
jnp
and
inc
xchg
in
mov
xlat
sub
sbb
or
xor
dec
pop
sahf
push
push
rorb
jbe
inc
ss
add
sbb
push
add
jae
adc
jno
mov
xchg
inc
cmpl
push
pop
or
in
xorl
jne
xchg
mov
or
movsb
sub
adc
aas
sbb
pop
or
stc
notl
adc
ja
sub
icebp
pop
aad
fsts
in
jp
cmpsb
dec
movsl
mov
sub
pop
push
xchg
mov
inc
outsb
pop
std
ret
and
cmpsb
stc
mov
icebp
cld
pop
das
inc
xchg
add
sub
cmpsl
jne
and
hlt
test
into
xchg
push
mov
js
js
imul
sarl
pusha
insl
jnp
adc
mov
pusha
test
dec
sahf
aaa
aam
cltd
out
js
rcrl
mov
push
xchg
xor
aad
stos
insl
pop
mov
sub
in
decl
lock
dec
mov
loop
mov
or
xor
test
xlat
loope
inc
push
push
or
popf
pop
sub
fiadds
fdivrp
jno
hlt
mov
cmc
and
add
pop
aad
xchg
inc
clc
lods
cltd
inc
fdivrl
and
adc
add
xchg
movsb
mov
mov
popa
int3
cltd
sar
das
jnp
cmp
or
es
adc
hlt
sub
jge
loopne
in
cld
or
test
divl
insb
or
mov
pop
clc
cmpsb
sub
add
add
or
pusha
cld
shlb
sub
push
mov
testb
sbb
cmp
sbb
xchg
add
shlb
aaa
pop
and
inc
mov
inc
sub
stos
out
sub
ja
out
testl
jb
incl
hlt
jmp
sub
pop
iret
and
out
pmaddwd
out
orl
aad
mov
and
cmp
mov
xchg
mov
push
pusha
sbb
mov
pop
sub
nop
fldcw
cmc
imul
inc
jne
shl
decb
jne
dec
cltd
cmp
addr16
out
test
cli
push
fstpt
sahf
sbb
xor
fnstenv
dec
inc
pop
sub
and
sbb
adcb
adc
add
push
fstps
insb
test
fwait
bound
push
lods
imul
sub
mov
fcomps
xchg
repnz
ja
dec
lahf
scas
das
jle
cmc
pusha
in
xor
inc
scas
jle
insb
mov
and
nop
dec
cmp
loope
das
push
add
sbb
aad
inc
push
jbe
push
insb
dec
pop
inc
nop
cmpsl
enter
aaa
popa
mov
cwtl
cmp
push
ja
cwtl
sbb
stos
js
repnz
gs
imul
sub
push
scas
cltd
fpatan
inc
cld
mov
mov
stos
lock
stos
lods
xor
jmp
mov
or
jo
or
hlt
sbbb
xchg
movsl
in
fldcw
push
js
jl
mov
pop
sbb
mov
sbb
cmp
mov
adc
pop
mov
inc
cwtl
into
je
enter
xchg
cmc
inc
out
cmc
loop
fwait
lods
cli
jecxz
cld
cs
inc
cmp
or
fdivr
es
sbb
jb
xchg
xor
fdivrs
add
push
divl
xor
adc
xchg
sbb
cld
xor
out
add
push
imul
or
adc
ljmp
in
dec
dec
xor
hlt
clc
lcall
sub
pop
add
mov
add
fs
jle
xlat
jle
cmpsl
test
jle
inc
mov
add
fsts
cld
je
scas
add
sbbl
daa
shr
mov
lock
mov
lods
shlb
inc
sbb
inc
popf
xchg
loop
xchg
jb
fmull
test
mov
sub
or
xor
xor
or
xchg
shr
in
int3
lock
hlt
cld
int3
negb
dec
data16
iret
add
sbb
pop
loopne
xorl
je
aaa
idivb
cmpsl
out
cltd
lods
add
imul
adc
lcall
filds
scas
mov
xor
das
adc
pop
fnsave
or
pusha
mov
out
dec
mov
cmc
dec
fidivrl
enter
loopne
subb
mov
mov
sbb
push
jbe
mov
jb
mov
lock
or
push
dec
gs
xor
adc
cmp
cmpsb
jge
iret
sbb
lret
out
jp
dec
push
adcl
xchg
std
cmc
mov
inc
and
in
pop
pop
inc
xor
fadds
pop
adc
stos
pop
test
out
or
cld
mov
add
je
jmp
ror
mov
and
mov
jge
xor
lret
mov
adc
ja
sub
pop
xchg
hlt
ret
out
test
push
jmp
mov
idiv
test
icebp
imul
in
pop
fiaddl
das
inc
das
daa
jae
push
xor
adc
add
jmp
popa
lods
sqrtss
daa
xchg
dec
out
or
mov
push
adc
std
cmpsl
cmp
pop
fnstenv
cs
pop
mov
pop
loope
fiadds
jle
pop
in
jp
mov
jbe
and
dec
arpl
in
xchg
mov
arpl
cmp
push
sti
inc
jne
mov
xor
jmp
clc
inc
mov
pop
pusha
push
shll
sar
int3
sub
adc
shl
scas
fs
je
xor
dec
jl
inc
aam
pop
add
in
in
bound
scas
aaa
iret
jl
jno
or
add
mov
xchg
rclb
mov
hlt
adc
adc
negb
push
jno
imul
fldl
jne
jg
filds
pop
negb
decl
sub
js
inc
adc
and
push
movsl
adc
push
push
xchg
outsb
dec
push
repnz
mov
leave
shll
shll
out
pushf
rolb
push
loopne
aaa
mov
pop
mov
jp
incl
inc
fisttpll
jg
insl
inc
inc
int
leave
add
in
pop
jmp
cs
push
sub
ja
jbe
aas
add
insb
lcall
or
pop
jg
sub
xor
insl
cmp
jne
xlat
push
jmp
loope
or
shll
popl
scas
in
jns
jno
clc
stos
je
cli
fidivs
xor
cld
pop
cli
cmpsb
jb
enter
dec
das
or
adc
iret
mov
stos
rcrb
xor
mov
jmp
jge
fnstenv
test
rcl
movsb
mov
lods
out
xadd
jnp
jb
xor
push
push
scas
inc
stos
testb
sbb
sub
push
dec
int
xchg
icebp
push
sti
incl
sti
jb
rcl
mov
cmp
and
movsb
xchg
mov
sar
push
mov
das
mov
hlt
in
and
outsb
mov
jp
add
std
outsl
xor
mov
nop
cmpsb
dec
jmp
xor
sarl
sub
cmc
push
xor
jne
xor
data16
inc
jg
cmpsl
xchg
test
movb
loope
sar
stc
push
push
push
sub
aaa
mov
jbe
repz
sbb
ss
sbb
ret
in
cli
or
enter
outsl
inc
mov
dec
add
sti
and
add
push
shlb
xchg
jnp
xchg
popa
cli
sbb
cltd
lret
ss
into
cmp
xor
lcall
pop
jo
repz
inc
adc
cmp
into
sub
cld
push
xorb
js
icebp
or
fdivl
push
pop
pop
cmpsl
sti
adc
dec
addr16
mov
out
xchg
inc
push
mov
pop
push
fcomps
shrl
mov
in
out
cli
mov
pop
inc
mov
test
loope
lods
or
fldl
sbb
lods
out
pop
hlt
push
and
fmuls
fnsave
into
xchg
ficoms
sbb
inc
pop
fldl
stos
das
push
sti
gs
std
ret
sbb
inc
mov
fistl
inc
shrl
lds
or
inc
push
scas
jge
mov
mov
popa
jb
or
and
cmp
push
sbb
jne
mov
jg
and
sbb
js
pop
and
push
inc
pop
divl
adc
enter
aaa
insb
xchg
icebp
add
test
push
js
cli
pop
xor
dec
icebp
cli
in
movb
sub
out
push
mov
sub
jmp
adc
xadd
cmc
mov
test
je
adc
fadds
cmp
adc
xlat
cld
fdivs
or
push
clc
pxor
and
lods
push
ja
xchg
xchg
and
mov
out
sbb
cmp
and
push
sbb
sbb
js
xor
mov
pop
decb
inc
in
xchg
jbe
subb
cs
scas
movsl
inc
adc
inc
scas
push
cwtl
inc
sti
fnsave
cmp
mov
testl
mov
jne
mov
push
fdiv
sti
push
add
je
add
push
cwtl
lods
adc
mov
adc
nop
sbb
scas
adc
add
sti
add
cwtl
fmul
loope
push
jns
out
insb
js
cmc
or
sbb
cmpsl
in
les
nop
aad
lret
dec
cmp
sar
jb
pushl
mov
jl
daa
jae
movsb
xor
aas
sbb
ds
add
sbb
cmpsl
imul
int
jg
mov
std
xchg
sub
add
aam
inc
hlt
push
stos
imul
mov
sub
movsb
mov
pop
lds
jae
mov
cmove
adc
cmc
stos
out
dec
jnp
pop
inc
jp
pop
iret
cmc
sbb
mov
jae
sti
or
insb
sti
repz
sbb
adc
dec
shlb
mov
scas
xchg
outsl
popa
das
ret
xorb
fldz
fwait
xchg
icebp
push
sbb
push
ss
jle
or
xor
in
js
push
and
dec
sarw
int
mov
mulb
pop
cld
rorl
mov
testl
jecxz
mov
movsl
or
mov
fimuls
imul
mov
insl
xorb
mov
mulb
cmp
adc
push
or
fiaddl
hlt
in
push
push
xchg
cld
jmp
popa
push
push
ds
ss
enter
aaa
leave
sbb
or
daa
enter
push
adc
xchg
xchg
out
or
and
ret
cld
std
push
sbb
xchg
push
test
xchg
outsb
ljmp
sub
fnstenv
outsb
std
or
dec
mov
mov
jns
in
add
fldt
pop
fs
adc
xchg
dec
sahf
cmp
out
mov
out
fs
and
cs
push
dec
lods
pop
test
das
xchg
fstl
xchg
cmp
add
lods
jbe
ss
cmp
inc
sti
xchg
imul
push
cwtl
xlat
rorl
push
lret
rolb
into
scas
cmc
sub
jne
ss
push
out
jns
fstp
mov
sub
std
pop
sbb
out
xchg
jno
imull
test
jbe
add
adc
push
sahf
imul
aad
mov
sarl
xor
mov
neg
outsb
stos
xchg
in
jp
mov
dec
add
push
lods
or
add
in
ja
push
jns
scas
cmc
fprem
loopne
aam
push
and
lds
not
mov
sbb
xchg
xlat
mov
jns
mov
or
loop
and
outsl
rcrl
adc
int
jle
test
ja
in
jne
push
mull
adc
inc
inc
in
pop
fsubr
bound
daa
lods
je
outsl
daa
pop
xchg
push
adc
adc
mov
pop
sbb
stos
repnz
xor
loopne
jg
jae
js
popa
out
loop
sub
sub
or
sbb
mov
dec
mov
ja
into
ss
and
push
fimuls
call
jbe
xchg
jo
sbb
xchg
leave
dec
test
js
lcall
jne
insl
iret
outsl
or
hlt
scas
or
je
pusha
out
divb
push
mov
aaa
push
sbb
adc
pop
mov
push
adc
push
pop
and
ds
cmc
movsb
popa
cmpsb
jle
mov
xchg
loop
insl
enter
lret
push
mov
jbe
jmp
fcmove
pop
push
inc
stos
add
fbstp
aaa
shlb
adc
jbe
movsb
dec
xchg
jmp
or
lret
in
xchg
mov
push
mov
andl
leave
add
jnp
jno
sub
mov
ret
jp
ja
xchg
sub
cmp
mov
mov
enter
mov
cmp
leave
push
adc
xor
popf
mov
sti
mov
imul
rcrb
jg
hlt
push
hlt
mov
sub
or
mov
mov
xor
out
test
push
fstl
call
in
dec
mov
add
push
or
idivl
loope
sub
hlt
mov
inc
out
lea
inc
int
nop
sbb
cld
xor
insb
sub
sbb
pop
insb
mov
mov
xchg
cmp
aam
ljmp
icebp
out
jae
inc
xchg
in
dec
jmp
cmc
jmp
push
fildl
push
cli
sub
jns
push
or
lock
pop
jb
dec
xor
or
xchg
repz
aaa
pop
fcmovne
bound
cli
shlb
sbb
out
inc
into
jns
adc
sub
test
mov
adc
dec
sub
xor
push
testl
dec
js
inc
sub
cs
push
or
pop
addb
or
mov
inc
test
lret
ljmp
pusha
jmp
push
loopne
jl
daa
dec
es
adc
inc
pop
test
xchg
clc
out
sarl
mov
mov
xor
mov
sbb
pop
inc
mov
push
scas
pop
test
mov
xor
aas
in
jge
in
xor
push
sub
and
push
inc
xor
pop
in
sbb
daa
ja
jmp
addb
enter
jmp
pop
lds
cmc
je
mov
add
mov
xor
jbe
in
and
mov
les
insb
adc
arpl
mov
add
add
lahf
inc
and
in
lock
pop
jmp
into
inc
jge
mov
jp
jb
pop
mov
jmp
cmpsb
enter
fbstp
xchg
inc
imul
xor
jnp
inc
loopne
cmp
cmp
js
xchg
mov
cmp
iret
inc
push
aam
outsb
and
sub
orb
add
cld
or
insb
jbe
stos
mov
aaa
adc
gs
sub
out
iret
rorb
dec
out
mov
sub
out
shl
lods
out
xchg
push
pop
jmp
xor
lods
adc
incl
into
pop
adc
das
cmpsl
into
jl
adcl
inc
mov
lret
push
mov
pusha
xor
fcoms
ljmp
add
fsubr
push
push
mov
shrb
mov
xchg
test
and
mov
jmp
pop
hlt
mov
push
out
stos
aad
in
adc
pushf
push
in
mov
inc
mov
jge
pop
stos
dec
mov
jbe
sbb
mov
ja
imul
mov
push
insb
cmp
or
das
mov
divb
sbb
leave
jo
movsl
sub
movsl
mov
push
inc
ret
into
aam
xlat
call
addr16
imul
clc
mov
dec
in
jo
in
notl
adc
sub
xchg
push
cmc
daa
addr16
sub
pop
loopne
pop
dec
xor
arpl
movsl
or
daa
mov
push
mov
test
stos
pop
cmp
and
movsb
outsb
jl
outsb
loope
inc
movsl
push
mov
xor
sbb
push
repz
sti
test
push
icebp
jo
cmpsl
ljmp
sub
je
shll
scas
adcb
sbb
inc
jmp
jbe
dec
lret
jno
cmpsb
mov
in
add
mov
cmp
pop
hlt
aas
push
mov
push
jb
icebp
pop
mov
in
aam
cld
sahf
enter
push
xor
dec
daa
idiv
sub
jp
movsb
jmp
cmc
rcrl
mov
addr16
ret
scas
pop
and
rcrl
jge
xchg
pop
and
sub
fs
xchg
sbb
outsb
roll
out
add
or
daa
clc
sbb
add
push
daa
fistl
popf
inc
shll
pop
ja
sbb
into
dec
lock
dec
push
push
ja
je
sysexit
jne
pushf
rcrb
cwtl
jb
lret
pop
adc
push
and
adc
out
xor
pop
popf
mov
sti
out
push
or
std
lret
icebp
sti
out
shll
xor
in
fildl
mov
repnz
cs
sti
xchg
mov
jp
in
std
dec
mov
enter
dec
pop
jne
push
fisubrs
push
jg
call
dec
out
adc
into
pop
addl
out
inc
xchg
mov
imul
pop
mov
mov
iret
out
sbb
pusha
sub
and
stos
push
rcll
jo
ret
jmp
pop
mov
mov
rorl
repz
mov
jge
jb
rorb
shr
push
int
das
outsb
pop
insl
dec
cmc
mov
or
jle
fnstsw
mov
std
pop
ss
inc
xchg
ss
repz
and
mov
dec
push
mov
push
icebp
mov
in
cmp
ss
fwait
and
repnz
push
imull
xor
adc
mov
inc
cli
shlb
imul
jno
test
iret
cmpb
jle
sub
scas
imul
cld
nop
adcl
jns
push
mov
jmp
clc
repz
xor
cld
pop
in
aaa
push
rol
adc
add
lds
dec
cld
add
adc
into
arpl
imul
loopne
cltd
in
push
es
cld
insl
ljmp
icebp
mov
clc
push
cmp
out
sahf
sbb
inc
or
es
or
je
test
test
stos
adc
jb
out
lea
icebp
stos
pop
xchg
notl
repz
push
xorl
cmp
loope
add
in
push
sub
mov
xchg
test
daa
pop
aas
jecxz
pusha
cmp
add
pop
sarl
lods
adc
jnp
adc
into
jbe
push
mov
fsubs
push
sti
xchg
out
out
into
pop
sub
idiv
xlat
iret
jbe
xlat
in
cs
xchg
adc
jbe
cmc
xor
jmp
mov
or
sarb
sti
sbb
jb
mov
xchg
cltd
push
jg
std
pop
push
pop
adc
jnp
lahf
cmpsl
jo
inc
jp
jp
outsl
jl
dec
mov
es
add
das
jne
js
sbb
inc
xchg
je
ja
test
adc
push
push
push
nop
js
outsl
nop
sahf
test
shlb
aad
jne
pop
mov
xchg
hlt
xchg
push
mov
inc
adc
lods
jge
xor
push
pop
fwait
mov
nop
xchg
pusha
dec
jbe
push
lods
sub
movsl
cmp
add
mov
jmp
inc
mov
push
mov
mov
lea
mov
inc
out
in
mov
jno
scas
jp
cmpsl
mov
add
shrl
jecxz
pslld
mov
test
cmp
pusha
dec
xchg
sub
lock
testl
xchg
adc
add
loopne
cmpsb
xor
mov
inc
mov
repz
sbb
push
or
cmpl
arpl
sbb
nop
jl
push
lods
jo
adc
cwtl
pusha
xor
shlb
push
add
insl
jbe
mov
mov
dec
mov
movsl
jo
je
jne
xchg
mov
xor
lret
rorb
mov
inc
add
es
jmpw
xchg
mov
mov
or
xor
loope
icebp
enter
xor
mov
ss
sub
fisubl
adc
pop
inc
imul
dec
mov
lahf
xor
xor
push
sbb
sub
mov
lds
ret
jno
mov
aad
xchg
adc
push
inc
sbb
cld
stos
addb
out
test
out
call
mov
arpl
addr16
mov
mov
in
leave
clc
inc
or
mov
cmp
mov
pop
pop
mulb
pop
pop
clc
pop
inc
daa
out
mov
popa
out
jbe
out
pop
mov
and
imul
mov
fsubrl
cmc
lcall
push
insb
out
sub
xor
daa
mov
push
ret
pop
jae
pop
or
mov
cmp
cmpsl
or
push
and
sbb
lods
ja
loopne
mul
pop
inc
xor
cmpsl
lahf
leave
lds
and
cmc
inc
jg
jb
daa
adc
nop
enter
rcr
push
imul
push
insb
pop
push
mov
pusha
test
cld
sarl
fildll
aam
and
pop
xchg
push
jle
movsl
arpl
inc
inc
adc
test
mov
jb
insb
or
in
lods
repz
cmp
rcll
push
in
mov
mov
ret
cld
cmpsb
imul
dec
pop
test
sti
mov
push
fistps
sar
adc
lods
movsb
iret
ljmp
push
mov
jmp
stc
sbb
hlt
and
cli
adc
cld
inc
cmp
outsb
cli
push
notb
xchg
jle
lret
hlt
aas
cmc
loopne
fyl2x
and
jnp
sub
aad
jmp
leave
dec
cltd
lods
fisubs
mov
adc
mov
jmp
in
aas
add
jg
in
push
cmpsb
dec
cmp
fstpl
push
mov
inc
aam
ss
orb
jp
adc
or
stos
addr16
inc
aas
dec
dec
pop
repz
cmpsl
out
sarl
pop
imul
shlb
mov
divb
pop
cltd
jno
js
push
mov
cmc
push
cld
push
fxch
mov
test
fstl
cli
jp
in
mov
pop
mov
ss
mov
sbb
imul
inc
and
enter
adc
dec
dec
lcall
icebp
jne
xchg
lds
jmp
pop
mov
ds
test
xor
out
pop
jbe
cld
mov
shl
out
adcl
sub
imul
data16
in
mov
jne
dec
xchg
jbe
repnz
div
loope
mov
push
pop
fs
lds
or
sbb
mov
or
imul
repnz
jbe
mov
xchg
mov
arpl
jmp
add
xor
dec
test
inc
inc
sbb
push
das
lret
cmp
mov
jns
idivl
pusha
cmpsb
sub
subl
cmp
pop
into
jg
out
lds
cwtl
jmp
into
and
cld
push
mov
fsubl
jecxz
mov
xchg
into
or
cld
xor
icebp
or
sub
jle
mov
pop
and
sbb
lret
lahf
scas
add
lods
push
pop
or
cld
jecxz
shll
rclb
and
daa
pop
sub
pop
or
or
pop
es
shlb
ljmp
jo
scas
and
lret
cltd
data16
inc
and
sub
inc
push
adc
bound
daa
neg
xor
data16
dec
repz
test
aam
jb
mov
mov
pop
scas
pop
adc
adc
cld
add
xchg
adc
sub
ds
lret
mov
or
cmc
push
mov
dec
out
mov
add
xchg
in
xchg
push
ljmp
cmp
bnd
adc
cmp
sahf
lods
test
sub
int3
and
and
mov
cmc
or
orl
sar
mov
jo
jecxz
test
and
sbb
mov
mov
mov
ss
mov
inc
inc
jmp
inc
ficompl
push
xor
jl
pop
sti
mov
xor
sub
cmpsl
pop
bts
in
mov
daa
mov
cld
scas
dec
pop
pop
or
pop
xchg
fs
decb
test
and
or
or
jb
jmp
mov
scas
rol
addr16
push
mov
ja
icebp
in
adc
jl,pt
sbb
enter
loope
or
xchg
sub
mov
fs
rorl
push
xchg
clc
repnz
mov
test
aam
jg
adc
dec
mov
dec
pop
pop
dec
pop
sub
push
test
in
daa
in
cmp
daa
ret
jmp
mov
push
and
lods
out
sbb
cmp
cmp
cmp
sub
mov
add
sbb
in
lods
test
ret
test
cld
bound
outsb
ja
adc
adc
repz
pop
imul
pop
cmp
decl
mov
push
lcall
xchg
push
popf
clc
mov
xchg
add
sbb
sbb
inc
aas
outsb
dec
and
sbb
sahf
imul
sbb
outsb
xchg
adc
fsub
lods
and
inc
xchg
mov
or
mov
xor
aam
sarb
inc
popl
lea
sub
push
out
cmpsl
aaa
pop
clc
rcll
add
sub
popa
in
sbb
enter
adc
and
mov
sub
repnz
jecxz
mov
sbbl
aaa
adc
gs
push
inc
jne
mov
in
lret
pop
xor
sti
cmp
aad
jbe
mov
adc
sbb
in
jl
out
mov
sub
and
mov
imul
jne
xchg
sub
lds
dec
inc
xchg
andb
adc
shlb
dec
arpl
scas
adc
sub
ret
xchg
stos
js
mov
cmp
daa
mov
repz
dec
bound
push
out
inc
adc
mov
jecxz
mov
loope
inc
pop
rorl
std
push
nop
pop
xor
jb
jno
ds
adc
arpl
push
stos
mov
push
pop
push
and
icebp
pop
lea
out
repnz
inc
daa
int
test
out
cmp
insl
stos
lret
aas
jmp
popa
aad
es
pushf
add
mov
loop
idivl
mov
iret
push
lock
jbe
lods
push
sahf
mov
mov
imul
and
add
pop
into
int
scas
cmc
pop
repz
mov
out
push
jg
je
repz
xchg
cmc
add
lods
les
mov
mov
push
mov
das
or
repz
inc
pop
xor
rol
cmpsl
ret
cmp
pop
scas
mov
mov
jno
ja
pop
inc
xchg
icebp
idivb
cmpsl
xchg
cmp
pop
out
dec
icebp
out
outsl
lock
cli
clc
inc
push
inc
add
out
mov
and
xchg
xor
out
xchg
cmp
mov
test
loopne
push
dec
mov
or
stos
dec
shrl
scas
popf
cmc
xorb
xchg
cmp
fnstenv
push
call
adc
and
das
sbb
mov
nop
in
imul
sbb
jmp
jg
push
les
das
add
mov
sbb
divl
je
ret
or
mov
inc
pop
popf
sbb
cmc
dec
inc
je
lock
fidivs
fistps
cmp
and
in
mov
pusha
and
ret
cmp
je
popa
or
push
push
js
xlat
scas
inc
ret
cmpsl
les
mov
in
adc
call
rclb
insb
aas
pop
fildl
add
sbb
hlt
lods
stos
adc
adc
mov
div
js
cmp
dec
xchg
js
jg
xchg
lret
aam
std
mov
jo
mov
cmpsb
or
push
pop
pop
addr16
js
xchg
cltd
push
ss
je
cmp
test
and
movsl
rcrb
testb
std
xor
mov
and
clc
pop
loop
push
jne
xor
lcall
clc
or
lret
jns
movsb
mov
adc
mov
int
sbb
fcompl
jns
mov
jb
xchg
jmp
xor
xchg
pop
fistl
sub
xchg
xchg
fwait
aam
dec
movsb
pop
push
or
pop
mov
push
mov
sbb
out
sbb
add
cltd
pop
and
jne
mov
outsb
mov
cmc
pop
stc
shlb
shl
adcb
push
xchg
arpl
lahf
cmp
cmp
jo
cmp
addl
sbb
sbb
les
mov
stos
push
icebp
inc
mov
lods
cld
cli
icebp
out
push
jl
pop
add
jle
dec
xor
aas
sub
pusha
xor
add
scas
jl
mov
sub
adcl
lock
cld
jne
jle
mov
test
mov
and
xchg
repnz
outsb
aaa
js
out
pop
in
mov
xlat
sbb
sbb
pop
cmp
inc
or
scas
add
dec
cld
jb
imul
pop
sbb
cmp
std
sbb
adc
and
std
ds
mov
dec
inc
movsl
or
out
pop
and
icebp
pop
push
lock
add
movsb
mov
outsl
push
adc
mov
in
pop
xor
and
ja
rolb
add
addl
sbb
rcrl
pop
pop
dec
nop
add
test
jmp
popf
sbb
ljmp
mov
inc
mov
add
inc
push
inc
sbb
das
scas
add
pop
out
push
lods
ss
and
popf
xchg
xor
pop
rcrb
sub
jmp
mov
add
push
sbb
aam
xor
fisubrl
push
imul
jns
bound
mov
xchg
out
sub
jno
cltd
icebp
js,pt
loopne
inc
mov
jno
pushl
es
add
mov
sarb
push
cwtl
cmc
imul
xor
leave
dec
xchg
jns
ds
daa
stos
cltd
push
movsb
hlt
rcrl
pusha
xchg
cwtl
push
cltd
test
adc
ss
adcl
movl
jl
mov
jp
cld
das
scas
cmp
push
mov
mov
add
xchg
mov
clc
daa
mov
mov
sub
push
add
dec
push
iret
sub
int
ret
dec
std
xor
addr16
into
push
idivb
add
pushf
int3
jle
js
dec
sub
clc
and
cmpsl
int
xor
jne
jns
imull
mov
loop
adc
lret
popa
dec
sbb
sbb
negb
xor
adc
popf
cld
xchg
pop
sarl
xchg
push
sub
daa
jo
sbb
shlb
out
ja
inc
jle
push
dec
sub
sub
add
insb
xchg
into
cmp
sbb
adc
notb
cmp
dec
js
clc
xchg
pop
lcall
add
jmp
add
ja
cli
aam
sbb
daa
scas
cmc
mov
xor
pop
cmp
loope
jmp
movsl
xchg
insb
test
loop
lods
jecxz,pt
ja
sub
cmp
cld
addr16
test
movsl
inc
ja
je
cli
js
xlat
xor
jbe
out
sub
cmp
mov
mov
add
jg
icebp
jbe
or
call
add
push
sub
add
int3
icebp
dec
xchg
scas
out
in
mov
push
andl
mov
push
je
inc
repz
les
fwait
sbb
mov
adc
cmp
mov
mull
call
mov
stos
fs
aad
out
inc
scas
je
imul
sub
xor
scas
jno
adc
push
xchg
mov
cmpsl
popa
pop
cli
xchg
ja
jno
dec
push
ficoml
ss
jns
xchg
cld
dec
out
or
nop
mov
mov
adc
push
test
adc
xor
or
cmc
xorb
add
js
xor
js
xchg
push
sbb
leavew
xor
les
addr16
test
out
ret
stos
js
loope
mov
aam
jg
jnp
and
cld
add
out
rorl
cs
fdivp
insl
inc
pop
push
push
cmp
cld
jnp
pop
xchg
out
pop
cmp
out
mull
jp
push
cli
ficoml
lods
dec
xchg
cltd
es
mov
sti
mov
push
pop
push
sbb
sbb
push
cmpsl
icebp
sbb
and
in
cmp
jg
aad
in
push
int3
and
sub
rcl
shll
push
cmpsl
cwtl
clc
shlb
stos
arpl
inc
cmp
arpl
or
negb
inc
sar
das
dec
into
ljmp
loopne
inc
divl
jbe
pop
sahf
dec
ffreep
notl
lods
ds
shrl
mov
mov
fld
sar
mov
pop
lea
cmp
dec
or
mov
cli
inc
cmp
cmpsb
xor
int3
fbstp
ret
es
je
int3
jb
sbb
mov
shr
fcompl
mov
jp
insl
sub
mov
jo
out
push
sbb
fiaddl
lock
xchg
scas
mov
movl
xlat
daa
jle
inc
popa
dec
push
cmp
ret
sar
jno
sub
or
icebp
dec
mov
xchg
hlt
mov
pop
push
mov
push
mov
repz
jmp
adc
pop
push
orl
xor
rorb
cld
std
inc
outsl
adc
arpl
nop
or
cmp
scas
sbb
jns
and
cmp
fldenv
and
jp
data16
sub
push
cmpsl
mov
jno
movsb
push
fiadds
aam
mov
jge
xchg
adc
mov
fldcw
or
xor
mov
cli
inc
movsl
xchg
clc
or
mov
cld
cltd
in
dec
and
mov
cmpsl
int
jle
out
rdtsc
inc
into
lods
pop
and
mov
adc
xchg
jbe
ret
sub
jecxz
or
jp
insb
popf
and
mov
cld
cwtl
or
sub
push
lcall
and
mov
inc
loop
dec
xlat
mov
sub
mov
mov
mov
xor
ret
dec
cmp
outsb
insb
out
fadd
fisubrs
mov
mov
clc
movsb
push
sub
jmp
add
ja
dec
push
adc
divb
push
aas
shrb
mov
out
ret
je
sub
js
shll
dec
cmp
mov
cmp
outsl
pop
js
jl
shlb
push
dec
ret
and
test
iret
loop
sbb
testb
jg
addl
mov
mov
sub
jle
pop
lods
test
ss
lods
iret
mov
aaa
jp
shr
sbb
push
push
sbb
daa
enter
adcb
sbb
inc
jo
pop
popf
outsb
stos
addl
jg
das
int
xor
in
lock
adc
ja
add
sbb
xor
lahf
jno
dec
fisubl
adc
ja
daa
pop
pop
daa
adc
icebp
test
aas
shrb
repnz
sti
fistl
xchg
mov
sub
sub
jge
xor
rcll
adc
ja
cltd
xor
xor
lea
adc
xor
ljmp
mov
dec
fst
cmp
js
adc
pop
incb
mov
imulb
call
jb
leave
scas
inc
jns
inc
and
aam
and
add
xor
ds
ret
pushf
lds
mov
js
cltd
ss
jl
dec
aas
mov
add
sub
mov
enter
aaa
adc
daa
dec
scas
idiv
imul
arpl
cli
scas
mov
repz
imul
adc
js
das
daa
int
mov
pop
push
loop
mov
out
sti
das
sti
cld
lock
popa
insb
mov
pop
mov
sti
andb
sbb
clc
pop
cmp
arpl
out
mov
icebp
jnp
test
pop
pop
out
xchg
stos
loope
xor
fsubl
inc
inc
push
add
xchg
stc
iret
push
mov
leave
mov
xor
in
fidivrl
insb
arpl
adc
inc
push
mov
sbb
movsl
int3
push
and
rorb
idivb
push
fildll
xchg
cmp
ficoms
lods
dec
fists
das
jo
sbb
cltd
std
lds
stos
jae
cmp
ja
cmpsl
scas
add
bound
in
addr16
arpl
cld
lret
ss
push
cld
js
push
js
push
in
sbb
cmp
mov
loop
sub
scas
es
mov
xchg
adc
jle
sub
jp
stos
rclb
xchg
xchg
cmpsb
inc
sub
das
push
rorb
pop
lea
jle
enter
call
xchg
lcall
idivl
mov
sub
xor
dec
or
lret
repz
fbld
popf
jmp
ds
aas
jb
push
jle
inc
mov
jl
pop
movsb
repz
das
jl
add
adc
mov
test
push
sub
loopne
xor
out
jno
fadds
or
insb
enter
adc
xchg
mov
inc
popa
daa
call
loope
in
mov
divl
xchg
jge
das
pop
sbbb
rcrl
cmp
inc
xor
jo
in
push
shlb
mov
or
dec
push
xor
iret
in
in
lock
pop
out
sbb
call
lret
inc
imul
pop
push
push
fcoml
pop
movsb
rclb
mov
call
rorb
sbb
cld
inc
jbe
cmpsl
leave
xor
or
lcall
out
nop
js
jb
lods
repz
push
mov
test
imul
lret
jno,pn
jp
testb
imul
cli
idivl
aam
out
bound
js
insl
adc
into
in
js
pop
cmpsb
es
adc
pop
test
call
xor
icebp
sar
lcall
pushf
daa
cmpsb
adc
test
repz
insb
sbb
dec
daa
mov
and
sub
jns
ss
cli
xchg
mov
sub
xchg
inc
dec
icebp
mov
ljmp
cmpsb
jbe
leave
lds
sarl
pop
negb
stos
mov
push
jae
pop
push
pop
add
inc
jg
mov
pop
jp
jp
mov
or
ds
pushf
js
popf
or
outsb
movsl
sbb
jne
clc
push
test
cwtl
mov
lock
leave
lods
sbb
mov
mov
std
movsl
mull
jne
mov
leave
mov
outsl
sub
jnp
cmc
sub
pop
push
hlt
movsb
push
dec
insl
enter
out
imull
popf
mov
ficoml
or
push
ss
scas
add
mov
push
addr16
xchg
in
or
mov
aaa
hlt
icebp
out
dec
fidivrs
hlt
mov
mov
loop
mov
shrl
cltd
xchg
insb
pop
fdivp
and
adc
ja
ret
outsl
ja
push
decb
push
je
test
inc
ds
clc
jmp
add
aam
ds
cmp
xlat
movsl
inc
das
fldcw
push
fiadds
icebp
daa
push
fnstcw
jns
xchg
jl
imul
cwtl
mov
cs
push
hlt
and
dec
xchg
add
cmpsl
scas
pop
mov
in
mov
inc
add
adc
inc
push
xor
js
sub
addr16
cwtl
scas
cld
or
icebp
jns
ss
cmp
cld
sub
sub
sbb
adc
xchg
and
adc
maskmovq
testl
mov
dec
outsl
in
call
mov
pop
les
push
push
addr16
jmp
and
or
outsb
pop
cs
xor
adc
je
pop
pop
std
into
lret
jp
sbb
or
sti
addr16
xor
lret
push
xchg
out
pop
jmp
jno
aaa
pop
cld
ljmp
add
mov
lods
ja
cwtl
and
xor
repz
repz
dec
sahf
test
and
lea
out
in
imul
adc
ret
ljmp
das
xchg
push
xlat
push
mov
rorb
or
xor
push
push
lods
push
out
cmp
ficoml
and
push
adc
icebp
aaa
addr16
mov
rcr
and
ficoms
jb
test
into
cld
sti
xor
adc
aam
into
dec
shrl
pop
lds
xor
inc
aad
push
int
mov
jmp
daa
mov
aam
es
ficompl
lcall
pop
mov
loopne
mov
jns
bound
xchg
dec
push
shlb
xchg
or
jbe
mov
push
jmp
popf
das
cmpsl
add
pop
call
mov
stos
or
addr16
push
jmp
xchg
add
inc
xchg
icebp
or
nop
push
insl
lock
jns
sub
or
psrlq
aas
mov
cmpl
aam
xchg
push
mov
mov
shll
mov
repz
or
ss
mov
push
mov
cwtl
push
mov
sbb
pusha
sub
outsb
divl
mov
adc
push
cmpsl
jae
cmc
push
movsl
fst
dec
aaa
and
fdivr
inc
xchg
jp
add
insb
hlt
inc
pop
cs
cmc
mov
ds
jg
adc
call
lds
xor
das
fwait
add
xchg
jns
xor
jb
icebp
and
ss
pop
jmp
lock
test
in
mov
add
push
cld
negl
push
cld
cmp
pusha
jbe
enter
mov
arpl
test
test
sbb
call
in
js
int
xorb
fcomi
outsb
mov
sbb
adc
aam
rorl
shr
aad
outsl
xchg
mov
sub
cmpsb
pusha
push
cmc
xor
jne
sbb
dec
dec
stos
mov
js
xor
cmp
ja
mov
jbe
out
push
shll
jl
test
lods
add
loopne
mull
imul
push
imulb
jbe
fcomps
push
ss
je
fldcw
pop
pop
pop
cmc
inc
imul
repnz
jb
sbb
lret
mov
clc
push
sarb
sub
test
cmp
inc
in
and
fisubrl
push
jmp
in
or
mov
add
xor
andl
jae
jmp
aaa
mov
pop
and
mov
dec
jle
test
push
movsl
data16
jecxz
push
inc
out
or
stc
adc
pop
insl
mov
jp
mov
std
aad
ds
movsl
jg
xor
jecxz
mov
insl
and
push
enter
push
push
sbb
jno
scas
stc
mov
push
sbb
xor
mov
mov
addb
icebp
inc
divb
push
pop
and
arpl
sub
push
mov
loop
incb
subb
xorl
adcb
push
xlat
jmp
mov
daa
cli
icebp
pop
add
jmp
or
pop
xor
mov
adc
fs
nop
inc
enter
daa
add
testb
sahf
add
fstps
lea
sub
addl
leave
lret
dec
mov
sub
xchg
inc
out
cmp
mov
into
mov
jg
outsl
or
inc
daa
outsb
mov
mov
into
fisttps
mov
mov
cmp
xor
enter
cmp
outsl
or
sar
cmp
ficompl
js
inc
jo
sbb
in
clc
and
data16
push
jl
inc
sbb
inc
mov
bound
adc
sub
cmp
xor
cld
loopne
outsb
insl
pop
adc
aam
dec
daa
scas
push
sbb
mov
and
cld
test
call
jne
and
repz
stos
lret
dec
mov
je
push
cld
call
clc
cmp
mov
divl
repz
and
add
push
xor
ficompl
dec
xor
cld
scas
xchg
sbb
fchs
pcmpgtb
aas
mov
xchg
and
repnz
ja
push
inc
fstpt
jbe
fsubs
push
pop
cld
mov
cmp
mov
adc
cmp
adc
and
xlat
cwtl
push
mov
add
mov
mov
mov
pop
jl
pop
ss
pusha
inc
pop
fstpl
pushf
pop
push
xchg
pop
lods
xchg
jg
cld
push
inc
test
aas
ljmp
pop
xchg
sub
cld
dec
push
shll
dec
mov
sub
jle
fs
rclb
sti
add
xchg
mov
shr
imull
int3
mov
ret
pop
adc
in
out
les
lds
pop
jp
or
jne
ljmp
push
addr16
clc
push
mov
fdiv
push
jno
mov
push
xchg
xor
call
cmp
pop
sub
add
xchg
mov
mov
add
pop
add
cwtl
dec
jno
xor
testb
popa
in
jns
das
ss
lret
inc
xor
subl
push
aaa
lock
cmp
js
dec
push
ret
cmpsl
aas
push
cwtl
jne
inc
lods
lahf
movsb
cli
mov
ljmp
arpl
fnstsw
loope
pop
imull
sub
mov
pop
cld
lahf
test
lahf
or
push
xor
jb
sub
and
loop
fwait
popa
fsubp
cmp
addr16
imul
cmpsl
jo
in
scas
and
scas
pop
mov
lods
les
xchg
mov
test
adc
test
push
in
cli
pop
test
mov
test
push
cli
push
mov
adc
mov
mov
stos
pop
stc
into
cld
lods
arpl
iret
sub
mov
push
and
pop
push
ficoml
and
pop
leave
addr16
popf
adc
or
mov
push
shll
ljmp
add
push
pushf
es
push
jecxz
push
clc
test
insl
and
cli
outsl
out
ds
inc
adc
fnstcw
psubusb
adc
pop
fnstenv
adc
mov
cmc
jno
cltd
dec
dec
loop
in
xchg
ljmp
dec
inc
sub
insl
xor
ja
xor
rcll
sahf
xchg
mov
xchg
cltd
and
sub
mov
adc
add
iret
repz
int
mov
mov
je
jnp
sar
insl
mov
mov
push
pop
xlat
xor
das
jp
push
mov
cmp
or
rcrb
jle
bnd
addr16
daa
mov
leave
shl
aad
ja
fisttps
xor
push
inc
sbb
js
xlat
rcr
pusha
sbb
mov
sub
and
inc
popa
cmp
dec
mov
sub
add
sub
mov
or
ds
ja
inc
or
add
inc
or
aas
or
js
aaa
mov
sbb
cmpsl
push
xor
push
jo
loop
and
pop
and
cmpsb
insb
mov
fidivrl
fidivs
lock
mov
dec
pop
clc
cmc
pop
jo
lods
pop
adc
inc
push
dec
cmp
inc
mov
hlt
clc
pop
adcl
cmp
mov
sbb
push
push
fdivrs
in
adc
jle
roll
sub
fs
mov
xchg
loopne
clc
clc
sub
pop
push
add
test
dec
out
jns
out
aaa
pop
popf
pop
sbb
lret
lock
mov
push
iret
jle
shll
mov
arpl
mov
jle
int
sti
adc
das
jo
aas
and
push
je
std
aas
pop
push
lods
cld
clc
out
loope
mov
stos
jecxz
cld
lock
sbb
mov
divl
pop
ds
adcb
gs
mov
mov
xor
mov
js
push
cmc
lods
jbe
leave
test
ror
push
mov
cltd
in
outsl
mov
inc
repz
sahf
xor
jns
mov
cmp
mov
push
xchg
outsb
mov
adc
and
pop
pusha
mov
jge
push
sti
adc
dec
loop
dec
or
or
inc
dec
lcall
jge
lods
xor
jmp
jp
jns
ss
inc
lock
insl
rcll
cmpsl
xchg
mov
xor
and
cmc
sahf
in
mov
pop
not
add
inc
inc
aaa
scas
fs
cld
cmpsl
pop
and
push
push
mov
int
mov
sti
cs
xchg
nop
jmp
fs
mov
je
daa
cltd
pusha
repnz
cmp
pop
mov
xor
mov
inc
movsb
mov
xchg
lea
jmp
pop
cmc
in
cmpsb
or
in
mov
mov
bswap
imul
cld
mov
push
iret
or
fstp
push
insl
loop
add
ds
jmp
mov
xchg
mov
mov
inc
cmpb
xchg
add
mov
leave
iret
dec
in
xlat
cmpsb
xchg
insb
mulb
jbe
popf
in
jae
add
cld
ss
push
jo
aas
or
xchg
xchg
jmp
mov
adc
cwtl
insb
pop
adcl
repz
outsb
xor
lock
iret
je
lock
lea
nop
push
mov
shr
pop
dec
or
adc
xor
outsb
push
mov
out
cmp
lret
insb
sahf
clc
xor
out
popf
divl
aaa
jg
push
movups
out
repnz
cmc
xor
adc
enter
fstl
loope
mov
jg
les
push
sti
mov
sti
iret
jns
and
mov
ffree
addr16
or
das
and
into
pop
inc
outsl
out
les
pop
pop
negl
loopne
ss
adc
xor
enter
cmp
cmc
mov
clc
jle
xor
jo
scas
in
jns
xchg
push
sub
mov
mov
cld
in
sbb
je
insl
push
ja
cmp
push
out
pop
fnstsw
push
jo
pop
aad
scas
insl
or
push
and
push
sub
insl
pop
inc
pop
stos
add
std
cmp
xor
sbb
jmp
jno
pop
push
enter
and
clc
in
and
scas
es
test
and
or
adcl
cld
loopne
out
daa
mov
repnz
popa
ja
cli
jno
xor
mov
push
test
inc
or
jb
mov
decb
and
jge
sbb
push
ja
cmp
push
push
adc
test
outsb
outsb
fs
out
push
iret
aaa
adc
test
xor
sti
andl
sub
inc
in
add
je
add
outsl
push
and
ljmp
push
jno
dec
jle
pop
add
mov
repnz
popf
cs
clc
push
xchg
adc
sbb
jns
ss
notl
push
hlt
push
hlt
test
adc
xchg
or
loope
in
mov
xor
hlt
imul
cmpsl
ljmp
data16
repz
jno
movsl
push
dec
fidivl
add
add
mov
push
scas
test
and
loopne
adc
add
mov
or
mov
scas
int3
jo
jmp
mov
cmc
sbb
cld
jle
or
mov
jns
sbb
cs
adc
dec
std
pop
jo
push
mov
sbb
sbb
in
shrl
or
jbe
mov
and
and
movsb
inc
popa
dec
push
jnp
xlat
call
lods
std
dec
sbb
or
cs
ja
fisttps
jnp
sahf
inc
adc
imul
dec
push
and
std
mov
cld
xor
notl
adc
lock
stc
or
or
mov
jle
fbstp
lock
insb
push
xor
adc
ljmp
xlat
xchg
push
mov
mov
push
lret
jae
pop
mov
xchg
outsb
ret
in
je
pop
loopne
sbbl
stos
mov
add
mov
jl
xor
andb
adcl
les
lret
imul
lods
testb
add
or
push
push
stos
scas
roll
pop
pop
sub
inc
mov
stos
jmp
or
cli
sti
adc
testl
iret
mov
cwtl
push
shlb
mov
cmpsl
add
stos
scas
fcomps
ljmp
jne
adc
daa
pop
push
dec
pop
test
imul
clc
test
aaa
jmp
js
mov
addr16
mov
xchg
cld
cmc
xor
xchg
aam
jl
sub
out
mov
push
movsl
or
or
xchg
xchg
in
inc
lret
jbe
inc
lock
cli
mov
jnp
inc
aas
mov
jo
aam
or
xchg
pop
loope
push
xchg
xor
mov
ds
lods
xor
call
cmp
pop
xor
js
xor
adc
enter
xor
mov
adc
push
mov
sahf
sbb
and
jne
adc
mov
sub
negb
hlt
add
push
movsb
cmp
push
xchg
call
mov
xor
cmpsl
xchg
enter
push
psubusb
cmp
xor
jp
daa
imul
ror
push
xchg
in
jnp
into
sub
outsl
fisttpll
inc
movsl
jl
mov
mov
xchg
xorl
mov
push
and
add
jg
daa
push
call
aam
out
jmp
mov
and
jmp
xchg
or
hlt
add
jbe
sub
outsl
je
push
lock
push
jl
cmp
stos
clc
mov
pop
jmp
repnz
dec
mov
cld
mov
pop
ret
dec
daa
in
cli
adc
cmpsl
pop
sub
push
sbb
dec
fs
pop
cld
or
out
xchg
cli
cwtl
jbe
fdivrs
jp
lea
aad
add
sub
in
adc
test
adc
rcrl
push
jno
fnsave
lret
subb
js
push
jmp
adc
jno
jo
dec
mov
mov
fiadds
xor
sbb
shll
ja
cmc
scas
shrb
lret
push
mov
mov
jne
imul
cld
outsl
xor
mov
and
in
xor
dec
or
add
icebp
mov
in
es
aas
lea
loope
andl
sbb
mov
js
push
sub
mov
js
cs
ss
aad
xor
push
xor
inc
iret
hlt
movsl
repz
mov
cwtl
subb
pop
outsb
nop
push
addr16
jae
cmp
lds
xor
mov
pop
div
dec
and
int
or
mov
mov
aad
sub
mov
hlt
jbe
xor
repz
sbb
fwait
notl
rcr
sbb
sbb
jbe
cli
out
ret
mov
scas
mov
adc
arpl
mov
mov
clc
and
or
jmp
adc
sbb
stc
push
out
repz
mov
ret
mov
dec
pop
js
bound
push
push
mov
xor
cld
les
jne
xchg
adc
xor
push
mul
testb
daa
sbb
imul
cmp
jae
mov
nop
adc
and
add
je
popf
and
dec
push
div
pop
dec
js
pop
sti
jmp
mov
xchg
fimuls
test
and
xor
aaa
pop
cmp
push
movsb
leave
movsb
loope
and
jbe
cmp
fadds
mov
mov
jmp
pop
xor
or
icebp
jb
cmpb
js
push
jmp
sub
add
sbb
jmp
dec
imull
rcrl
cmp
xor
pop
loop
push
jmp
pop
lahf
add
scas
insb
pop
int
dec
aaa
insb
pop
mov
call
xchg
xchg
pop
arpl
ss
out
movsb
sub
and
test
sbb
dec
outsb
adc
in
inc
in
jle
xlat
loop
insl
add
das
out
and
imull
mov
cltd
nop
dec
adc
repnz
sbb
and
cli
aas
jbe
push
testl
adc
sbb
xor
enter
mov
dec
aam
jo
sub
push
mov
or
jae
call
dec
inc
in
aas
aam
push
jge
lret
and
xor
inc
xchg
adc
sahf
inc
int3
xchg
dec
inc
pop
sub
push
test
idivl
inc
add
daa
pop
mov
mov
cmp
test
mov
pop
clc
clc
sbb
aas
lea
cli
sub
pusha
cmpsb
rcrb
mov
cmp
cmpsl
inc
addl
inc
ss
pop
int
test
mov
neg
das
sarl
sub
cmc
adc
jne
dec
imul
imulb
pop
mulb
sub
fstpl
push
std
cwtl
xlat
enter
ss
and
into
outsl
jae
cli
ret
add
nop
and
repz
push
pop
pop
sbb
adc
sub
fwait
xlat
inc
movsb
rcll
mov
xor
inc
xchg
jecxz
mov
dec
xchg
loope
pop
xchg
sahf
idivb
jbe
xcrypt-ecb
cmpsl
mov
rorl
and
xchg
je
in
jbe
fimuls
loopne
cli
mov
pop
and
inc
mov
ror
push
stos
cmp
xor
imull
mov
idivl
push
sub
jnp
test
dec
mov
test
pop
mov
cmpsb
lea
jmp
insb
clc
pop
div
jmp
aam
add
push
jmp
pop
scas
adc
push
lret
xor
es
jo
sbb
adc
jle
ja
mov
das
icebp
pop
call
icebp
push
xor
icebp
adc
jg
mov
inc
and
or
adc
xor
lods
mov
jp
notl
lods
jns
push
or
cld
ljmp
adcb
pop
out
adc
push
add
adc
daa
and
or
xorb
sbb
or
or
les
dec
mov
ljmp
pop
lahf
sub
cs
fildl
pop
ja
push
lea
fsubr
dec
shlb
mov
loopne
add
movsl
lds
pop
and
cmc
clc
lock
pop
out
mov
push
loop
int
jb
repz
adc
dec
subb
adc
push
lcall
lret
jle
mul
repnz
mov
popf
lcall
scas
sbb
pop
xor
lock
xchg
insl
push
stos
dec
sbb
scas
cmc
jne
js
xlat
dec
ja
xor
xor
push
sahf
leave
testl
or
sub
ja
xchg
sub
in
pop
jo
test
jns
mov
lret
in
mov
or
inc
ds
add
addr16
jno
xor
lret
jne
xlat
ds
push
out
sub
movsl
mov
cmpsl
add
inc
xchg
inc
or
push
pop
inc
out
add
je
add
icebp
mov
icebp
inc
push
adc
mov
sub
cmpb
hlt
pop
test
mov
jo
jne
or
pop
jmp
ja
push
jo
out
push
or
sbb
sbb
js
xchg
lret
mov
test
gs
test
in
fildl
xchg
push
adc
enter
mov
push
xchg
add
push
sbb
mov
push
add
in
hlt
iret
inc
cmp
adc
repnz
xchg
push
dec
cmc
js
je
mov
push
das
cmpsb
push
mov
xor
in
negl
pop
cmp
out
ja
inc
xchg
or
out
or
fadds
cmp
nop
in
and
pop
mov
cwtl
mov
ja
mov
and
ja
fcomps
negl
int
pop
sub
jle
jmp
add
dec
ret
mov
mov
into
scas
nop
xchg
clc
xchg
add
sub
sahf
fs
jbe
adc
ret
lods
rcrb
iret
mov
imulb
sub
cmpsl
rcll
push
repnz
cmp
int3
fsubs
daa
jb
push
int
loope
out
jl
imul
pop
stos
ret
ss
aam
jne
fdivrs
insb
in
xchg
in
xchg
movsb
cltd
xchg
out
sub
jae
sarl
add
int
in
mov
cmovl
notl
push
jno
lahf
mov
jmp
out
jae
idiv
mov
lea
jns
inc
lods
add
pop
dec
int
cmp
test
je
cmp
jbe
xchg
imul
idivl
adc
pusha
inc
jmp
negl
dec
rclb
mov
loopne
movsl
mov
adc
add
mov
int
sti
test
ret
mov
push
xchg
pushf
push
imul
ja
aam
pop
xor
insb
popf
outsl
in
adc
mov
sbb
cmp
pop
xor
cli
sbb
sbbl
add
xchg
insb
xlat
movsl
jl
sub
and
out
iret
lret
cmp
addr16
jb
iret
mov
pop
fs
jge
or
mov
dec
add
push
pop
cmpsl
push
test
sbb
in
push
push
cli
mov
pop
pushf
loopne
loope
mov
in
clc
scas
and
fsubrl
imul
push
cli
dec
and
pop
int3
aam
jbe
es
fmulp
cmp
mov
inc
xchg
movsl
mov
mov
jae
ret
icebp
dec
addr16
out
movsb
cmp
push
pop
daa
test
push
flds
mov
cld
mov
imull
push
scas
ss
sub
pop
iret
fdivrl
inc
rcll
lea
hlt
xor
pop
and
add
js
jo
xor
and
outsl
in
test
push
lahf
jmp
adc
jb
ljmp
mov
insb
lahf
or
xor
and
rolb
insl
and
cmc
add
and
cmpsb
daa
sub
inc
int3
test
sti
cmpl
das
or
aam
imul
cmc
cld
int
mov
lahf
sbb
sbb
fwait
dec
mov
pop
jle
push
orl
fwait
in
pop
adcl
mov
jmp
enter
andl
movsl
inc
loop
push
movsb
sub
lock
icebp
aam
mov
repnz
fldcw
pushf
test
shlb
and
rorl
xchg
push
movd
daa
rcrb
inc
outsl
and
lock
sbb
stos
push
out
inc
xor
or
cmp
fdivs
cwtl
inc
ret
into
movb
sub
jo
mov
pop
ss
cli
flds
jge
lock
inc
push
std
or
jnp
cmp
loop
and
enter
xor
pop
jo
adc
or
push
xchg
push
dec
test
fstpl
and
fdivrl
repz
cltd
xchg
arpl
aam
pop
fimuls
sbb
dec
push
cmc
push
out
add
dec
cmp
xor
cld
shlb
js
jle
cwtl
push
in
push
push
ljmp
push
push
xor
and
fstp
es
inc
mov
fistpl
icebp
push
testb
push
mov
mov
pop
jno
test
and
jmp
cld
push
adc
inc
fdivrs
scas
push
int
adc
xchg
gs
mov
push
cld
cmpsb
and
fcompl
push
push
cltd
cwtl
addl
data16
push
imul
xor
iret
mov
fidivrs
fcomps
push
mov
sarl
jg
movsl
insb
xchg
jp
psubd
rorl
dec
sbb
pusha
mov
cmpsl
lods
lds
test
jae
mull
pop
xor
arpl
xchg
sub
lret
xor
js
cld
outsl
xchg
icebp
lret
paddb
pop
in
jl
inc
adc
and
add
jb
ss
lcall
lret
jge
pop
mov
push
xchg
js
in
pop
pop
or
scas
jno
sbb
inc
fildll
xlat
outsl
imulb
inc
mov
imul
xchg
enter
or
cmc
and
loop
sub
repz
je
xchg
lcall
repnz
jle
xor
int3
jbe
iret
adcb
aam
and
scas
xchg
push
jl
pusha
add
out
clc
push
pop
enter
inc
gs
sbb
cwtl
xor
je
sbb
div
mov
in
inc
mov
sub
pop
adc
xchg
jne
mov
add
pop
pop
adc
je
movsb
cs
loope
rorl
fs
mov
pop
ficoms
mov
push
cltd
scas
fildl
sbb
push
lcall
popa
cmpsl
add
cmc
push
sub
inc
lds
cmpsb
jo
stos
notl
add
popa
shrl
scas
push
sub
sbbb
or
es
lods
sarl
das
adc
cld
js
cmp
jns
dec
pop
lods
aas
push
jle
jo
sub
sarb
mov
pop
adcl
pop
add
adc
adcb
in
andl
jmp
push
sub
mov
sbb
pop
lods
mov
mov
lods
jmp
sbb
leave
dec
push
jb
xor
jb
mov
xchg
cmovl
repz
add
xlat
adc
and
push
xor
ss
mov
nop
mov
cmp
in
xchg
mov
ds
jo
popa
cmp
sub
aas
or
sub
out
icebp
xor
jo
jl
pop
push
or
mov
roll
sub
push
in
xor
shl
inc
adc
xor
out
in
cmc
icebp
xor
cmc
popa
fdivrs
pusha
pop
popf
je,pn
xor
jo
add
dec
je
in
mov
out
clc
cmc
stos
es
sbb
mov
sbb
daa
or
popa
dec
jl
adc
pop
xor
out
pushf
mov
bound
out
xchg
into
pop
dec
je
cs
xchg
dec
push
fnstcw
add
lods
mov
add
inc
xchg
xchg
sub
xor
cld
leave
arpl
pop
lods
adc
ret
and
xchg
lret
jo
js
jne
daa
test
test
int3
outsb
out
adc
xadd
dec
leave
cmc
mov
divl
sbbl
xchg
stos
inc
clc
cmp
das
rorl
inc
call
push
cmp
add
xchg
mov
push
push
add
jmp
xchg
cli
jle
lock
jnp
test
adcb
cli
pop
testl
gs
insl
jp
pop
cmp
cmp
lock
test
add
cli
dec
sbb
lahf
outsb
cld
mov
pop
dec
or
lret
pop
lock
icebp
flds
pop
dec
adc
outsb
xchg
sti
pusha
rclb
sarb
pop
das
xor
mov
stc
push
test
sbb
pop
xchg
out
dec
and
xor
jmp
jns
stc
sbb
push
push
mull
scas
mov
or
add
cmc
outsb
mov
ljmp
sbbl
mov
mov
cld
jns
inc
fildll
fwait
and
jmp
xor
jmp
dec
lea
stc
andb
xchg
add
sbb
inc
std
ja
push
adcl
cld
movsb
insl
lret
fxch
lods
push
or
xchg
sub
and
xlat
mov
pop
add
icebp
popf
jns
jb
daa
testb
jbe
mov
cmpsb
daa
jae
insl
jecxz
idiv
fs
cmpsb
add
or
jecxz
fwait
mov
in
inc
cmp
xlat
add
mov
mov
mov
out
and
scas
jae
push
add
imul
dec
mov
mov
cmp
fistps
fs
xor
cmp
lds
fdivl
sbb
cld
into
pop
mov
sbb
out
cmp
xchg
cli
mov
cmpsl
lret
stos
push
add
arpl
mov
ja,pn
push
addr16
mov
adc
pop
out
popf
push
mov
insl
pop
imul
sti
pop
adc
xchg
cmp
jg
jne
dec
aam
jecxz
das
imul
push
xchg
push
data16
scas
arpl
sbb
fstpt
popa
adc
push
fwait
jb
dec
cmp
mov
jbe
or
and
outsb
jo
mov
jge
xor
popa
out
sbb
cmc
ljmp
pop
jns
icebp
add
jne
and
cmc
rclb
cltd
mov
lret
pusha
push
or
push
sub
mov
insl
push
std
shrb
adc
nop
mov
xlat
sub
addl
adc
sbb
inc
push
xor
aaa
je
outsl
xor
out
inc
int3
icebp
cmovge
cmp
xor
mov
cld
push
fwait
loope
lea
xchg
mov
cmp
pop
mov
cmp
rcrl
jle
xor
pop
mov
jne
xor
int
das
sub
or
sti
xorb
loope
stos
ret
daa
movsb
sub
addr16
movsl
adc
jns
dec
into
lock
pop
sub
inc
imul
test
aad
cld
fdivs
in
jnp
pop
mov
roll
into
mov
jae
jl
lret
cmp
lods
inc
mov
sbb
adc
pushf
lods
mov
adc
mov
not
jbe
int
pop
lock
inc
mov
out
mov
mov
js
lds
dec
sti
cmc
fsubs
xchg
ja
mov
mov
lahf
sbb
out
jo
push
xor
rorl
cmpsl
dec
add
push
fnstcw
insb
push
pop
xor
xchg
loop
push
out
arpl
ja
push
outsb
mov
ret
mov
pop
js
dec
ljmp
or
movsl
xor
repz
leave
push
cmpsl
mov
pop
int
cwtl
dec
jnp
sub
jo
xor
div
mov
rolb
leave
mov
pusha
or
out
mov
test
pop
je
inc
es
cmc
ds
jb
iret
mov
jge
loope
jae
clc
mov
iret
add
cmp
adc
or
test
sub
inc
fnstcw
aas
pop
pop
jno
jb
popa
xor
jbe
mov
push
leave
pop
jmp
dec
pop
xchg
xor
add
add
push
jecxz
test
adc
xchg
negl
pop
jno
push
prefetch
pop
mov
sbb
push
clc
aad
movsb
cmp
out
push
cltd
cld
gs
pop
mov
pop
inc
cmp
jb
jno
inc
imull
int
push
xor
fwait
addr16
cmp
rclb
divl
xor
mov
adc
push
pop
imull
call
fbstp
push
and
pop
lcall
rcll
jb
mov
adcl
ljmp
cmpsb
sbb
or
mov
xchg
pop
xchg
pop
and
push
cmp
mov
je
scas
inc
mov
mov
in
clc
push
or
mov
mov
ret
jo
inc
push
pop
sub
push
bound
or
add
arpl
jg
dec
jo
inc
aaa
push
push
aas
dec
sbb
push
cli
pusha
push
pop
sbb
push
jb
icebp
and
loopne
sbb
sarl
js
in
mov
xor
jns
sbb
xor
push
test
xlat
mov
sub
and
add
and
lahf
scas
inc
xchg
scas
xor
or
or
test
or
arpl
pop
pop
cmovp
test
int
mov
pop
nop
pusha
adc
aad
data16
pop
je
test
or
sbb
icebp
mov
pop
sbb
fisubs
cld
out
mov
or
push
xor
add
mov
cmp
hlt
mov
sub
inc
scas
std
cmpsl
sub
jle
and
mov
sti
sbb
mov
adc
movsl
lods
imul
jns
xorb
cmpl
nop
cmc
sub
bound
fmulp
dec
push
int
xor
out
fcomip
cmpsl
pop
loop
leave
cmpb
adc
stos
aad
push
test
push
out
loope
inc
dec
loop
pinsrw
dec
mov
insl
sbb
add
adc
adc
nop
xor
pop
pop
adc
popa
add
iret
ss
mov
xchg
push
test
mov
lock
out
out
out
fcmovnbe
decb
cwtl
push
mov
xlat
call
sbb
cmpsl
mov
js
jp
jl
dec
adc
adc
div
mov
cld
adc
sbb
movsl
jge
mov
in
fisubs
push
xchg
leave
repz
stos
popa
aad
ret
je
jbe
jp
push
xchg
jnp
ret
jl
adc
mov
hlt
std
stc
push
sbb
fidivs
ret
pop
negb
lcall
or
mov
mov
nop
inc
scas
xor
xchg
fsubl
jle
pop
add
mov
dec
mov
mov
mov
scas
notl
sbb
dec
das
mov
mov
and
or
in
sub
xchg
hlt
int3
cwtl
xor
in
lods
testb
stos
inc
icebp
adc
push
enter
jno
lock
pop
jl
mov
div
cld
fwait
inc
loope,pn
cmp
pop
test
or
dec
test
call
mov
adc
push
xchg
mov
arpl
xchg
pusha
dec
mov
sub
lret
mov
or
cmp
popl
imul
fs
adc
test
sub
in
push
xor
adc
and
jle
scas
stos
movsb
pop
mov
ror
aas
jecxz
xchg
fildll
push
aaa
jl
out
dec
push
loope
ja
pop
sub
lods
shl
adc
push
mov
mov
mov
adc
pop
arpl
clc
sbb
xchg
add
clc
mov
imul
sub
pop
jmp
adc
cmc
lds
xor
lods
jmp
mov
cmc
pop
pop
stos
pop
daa
or
les
jne
cmp
xor
add
sbb
pusha
push
in
adc
and
adcl
pop
pop
mulb
dec
cltd
repnz
and
js
pop
aaa
push
jmp
xchg
add
clc
mov
sbb
dec
or
cmc
jb
jo
inc
add
cmpsb
cwtl
push
insl
test
pop
inc
scas
jge
gs
add
mov
data16
add
jnp
or
in
lods
push
sub
nop
push
or
add
cmp
pop
sub
jmp
outsl
push
icebp
test
add
push
mov
adc
pop
xor
jmp
divl
adc
pop
je
sub
outsb
cmp
jns
pop
mov
jle
mov
lahf
jmp
aas
adc
pop
mov
lods
jmp
cmp
js
lahf
add
and
mov
pop
insl
jmp
push
cwtl
insl
rdtsc
pusha
adc
sub
andl
setbe
dec
scas
clc
pop
in
fs
or
push
jb
clc
and
and
push
mul
dec
imul
roll
ss
or
add
orl
push
loope
in
adc
push
in
mov
inc
stos
mov
pop
push
clc
push
sti
sbb
cmp
imull
push
clc
lock
testl
xlat
rcrl
inc
xchg
cli
es
cltd
neg
pusha
adc
out
roll
mov
lods
xchg
mov
in
call
gs
pop
xchg
cli
push
loope
jl
lods
out
pop
data16
inc
ljmp
hlt
push
ja
sar
xor
insb
push
jg
jg
inc
pop
jo
or
lcallw
enter
push
push
fpatan
notl
and
fdivp
not
cmp
add
imul
add
push
es
mov
enter
add
jmp
pop
leave
icebp
insb
daa
or
pop
adc
or
xor
add
sahf
je
nop
xor
add
js
popa
and
std
fldcw
pusha
and
in
xor
test
clc
pop
add
sbb
jg
sbb
push
nop
testb
or
sbb
cmp
push
fists
inc
mov
pop
sbb
pop
xor
jbe
js
mov
jnp
movb
pop
dec
cmpsl
icebp
int
out
cli
les
dec
incl
jno
int
and
rorb
jge
jmp
scas
add
cmpsl
scas
jp
adc
and
aam
int3
sbb
sbb
push
outsl
sbb
jg
or
mov
repnz
int3
loopne
adc
ss
push
jnp
mov
mov
subb
pop
ret
lods
fcomip
je
test
nop
sti
push
inc
pop
adc
xchg
mov
ds
and
inc
xchg
jnp
sbb
cmp
pop
xorb
sbb
lods
sub
rcrl
mov
push
pop
or
push
lods
fldl2t
rcll
sbb
or
ret
jmp
mov
mov
repnz
xlat
sahf
gs
jo
aam
insb
add
addr16
js
mov
cwtl
aas
sbb
mov
shll
std
outsb
test
pop
jno
js
push
sub
movsl
scas
cmpsl
test
and
es
mov
dec
outsl
inc
jge
jne
outsl
pop
fdivrs
aad
cmpsl
sub
hlt
xor
add
cmpsb
es
fadds
enter
push
arpl
out
or
mov
clc
and
pop
adc
cmc
lods
mov
pop
cmpb
mov
adcb
jge,pn
pop
jg
std
pop
fwait
daa
sbb
and
pop
and
jbe
add
pop
rolb
or
or
and
jbe
add
imul
push
lods
adc
xor
sub
add
cs
insl
jbe
add
pop
mov
sub
mov
nop
cmc
xchg
add
adc
idivl
test
clc
scas
push
mov
ljmp
push
dec
push
pop
mov
xor
scas
stos
add
add
jl
fcomip
outsl
adc
cmpsb
add
mov
je
aam
add
repz
idivb
daa
jle
dec
add
dec
cmp
mov
xorb
cmpsb
pop
xor
test
repnz
int3
lock
testl
xchg
dec
xchg
sbb
cmpsl
loopne
dec
mov
dec
std
imull
pop
insb
mov
adc
or
in
data16
add
inc
adc
mov
scas
pop
in
daa
push
jbe
add
push
mov
lods
lret
sub
push
inc
lock
and
clc
hlt
push
or
inc
add
jmp
or
notb
or
xor
cld
or
xor
ret
or
add
ljmp
jb
mov
sbb
jmp
jns
mov
lods
andb
clc
mov
inc
cltd
scas
push
pop
rcll
push
icebp
jne
and
inc
notb
lock
lods
rcrl
jb
xor
inc
and
int
gs
mov
sbb
divb
mov
or
sbb
jb
imul
rcrb
iret
push
and
int
inc
sbb
xlat
jecxz
mov
lods
jbe
cmp
add
cld
hlt
daa
sbb
stos
and
and
pop
insb
aad
loope
scas
dec
push
jmp
push
insb
add
popaw
xor
cwtl
xchg
pop
cmp
xchg
mov
pushf
mov
push
jb
inc
cld
lahf
out
inc
repz
scas
add
mov
push
shrb
repz
icebp
or
ja
jne
fnstenv
test
aaa
cmp
adc
subb
adc
push
mov
in
subl
pop
xchg
out
inc
cmp
inc
push
arpl
xor
xchg
push
sbb
in
cmp
js
mov
je
js
loop
stc
adc
repz
fsubs
repnz
mov
push
cli
outsl
pop
mov
out
lcall
push
popa
mov
jge
mov
push
pusha
lods
xor
addr16
mov
in
jns
outsl
inc
push
addr16
scas
int
inc
pop
test
pop
lods
test
push
adc
xor
xchg
cmc
mov
xor
dec
pusha
mov
daa
push
es
and
push
pop
dec
cmp
adc
push
mov
mov
xor
repnz
jmp
push
mov
sbb
out
push
pop
mov
dec
adc
jb,pn
testb
lods
leave
mov
or
jne
repnz
pop
pop
daa
xchg
addr16
dec
cwtl
out
stos
fdivp
mov
pop
testl
movsl
sub
push
mov
push
test
pop
lds
xor
rcll
pop
inc
xor
mov
je
cmp
mov
pusha
adc
jp
ds
es
jl
daa
testl
inc
adc
nop
mov
or
out
xchg
dec
sbb
jg
scas
and
add
dec
loope
jne
in
nop
add
xchg
adc
mov
vmovsd
in
jmp
cmc
xchg
mov
sub
mov
mov
cmp
mov
add
ja
pop
ds
out
xchg
leave
add
sub
adc
loope
xor
sti
jp
xor
imul
pop
xchg
out
jmp
pop
push
xor
adc
pop
pop
cmp
add
shl
push
rep
std
push
int
mov
insb
add
pop
jo
sti
div
sbb
inc
xlat
hlt
sub
clc
jo
dec
repnz
sbb
or
xor
mov
pop
push
cld
jle
fisttpll
in
adc
add
std
repz
add
nop
int3
lock
lods
push
add
adc
sbb
in
mov
ljmp
outsl
add
fildl
ja
dec
pop
mov
lret
je
lock
mov
out
push
cs
jne
lcall
push
push
jae
pop
imull
aas
pop
inc
faddl
lods
test
insb
and
mov
push
or
adc
in
andb
push
xor
cmpsb
mov
xor
xor
sub
push
mov
sbb
sbb
and
pop
aam
add
mov
cltd
ds
loope
add
clc
into
mov
ja
test
movsl
or
rcrb
in
js
pusha
pop
add
enter
jns
dec
xchg
adc
into
scas
daa
jmp
cld
adc
pop
adc
or
insb
pop
inc
ds
loope
push
pop
out
test
jecxz
push
cld
jb
inc
cmpsl
push
xchg
xor
daa
hlt
add
lcall
stos
push
out
add
je
into
and
jmp
adc
scas
enter
pop
jmp
out
out
push
movsb
out
jp
jl
xchg
hlt
mov
and
jbe
xchg
pop
dec
add
mov
push
jno
push
icebp
xchg
je
push
add
xlat
xchg
je
pop
push
jbe
mov
mov
lock
xchg
sbb
adc
aam
adc
mov
loopne
mov
sbb
mov
xor
cli
cmpsb
scas
hlt
mov
push
gs
cli
or
adc
jno
test
jne
sub
les
xchg
scas
cmc
mov
sub
xor
adc
cmc
daa
dec
xchg
into
mov
sub
cmc
cli
xor
mov
aaa
cmc
testl
mov
cmpsl
js
popf
mov
cmp
jb
xor
cs
in
sbb
sub
inc
or
test
or
aam
or
sbb
prefetcht2
sbb
sbb
and
dec
push
or
inc
orl
mov
push
ret
mov
test
jle
dec
add
sbb
imul
push
push
mov
jns
mov
out
pop
add
fwait
lret
jnp
inc
and
roll
popa
loope
lahf
idivl
xchg
pushf
arpl
push
fldl
pop
jo
popa
cmpsl
fidivl
call
inc
mov
xor
pop
frstor
sub
dec
mov
aam
xor
add
roll
fsubrl
lds
iretw
idiv
xchg
in
push
inc
loopne
mov
mov
mov
sbb
in
repnz
pop
sbb
pop
jb
sub
jb
pop
cwtl
sbb
mov
push
in
adc
sti
cmp
mov
push
cltd
pop
addr16
ja
daa
sub
sub
jnp
cmp
dec
add
cld
mov
and
mov
dec
aas
sti
daa
les
cmpsl
jo
sbb
xchg
lods
push
xchg
shl
loope
push
xlat
cmpsl
movsl
repz
push
or
xchg
mov
push
jne
mov
push
ss
les
iret
pop
push
ja
jbe
stos
sub
mov
mov
in
je
push
add
testb
div
mov
adc
out
xchg
in
mov
insb
jae
push
lea
das
xchg
sbb
xchg
in
xchg
mov
pop
xchg
lock
push
xor
lea
jns
sbb
xchg
test
inc
sahf
cmc
loope
inc
rcll
hlt
aam
xor
xor
aam
cmpb
es
jnp
push
cld
mov
loope
hlt
sbbb
out
repz
addb
jb
enter
sbb
mov
jge
loop
hlt
push
jno
call
and
cmp
scas
fstps
inc
inc
jl
outsl
add
imul
pop
shrl
into
int3
aam
lcall
ljmp
fcmovb
cmp
xchg
pop
es
pop
jne
mov
inc
pop
xchg
sahf
out
mov
push
or
sti
xchg
jmp
loope
xchg
pop
enter
ljmp
push
push
insl
pop
repz
lock
popa
cmc
or
ljmp
ja
cmc
cmc
or
lret
cmpsl
out
push
daa
shrl
hlt
push
cli
nop
pusha
cmp
dec
pusha
pop
sahf
sub
pop
jo
out
icebp
lds
or
jmp
lods
sub
push
sub
sbb
jmp
icebp
xchg
push
jg
xchg
adc
jg
mov
shll
scas
clc
cmp
hlt
adc
pop
mov
clc
mov
or
mov
push
push
xor
nop
jl
mov
jnp
sbb
test
and
sub
xor
mov
sub
sarl
sub
pop
out
jno
push
inc
not
xchg
cmp
test
idivl
adc
pop
cmc
xor
mov
dec
mov
push
ljmp
xlat
push
sbb
adc
and
push
pop
fs
je
lock
cmovl
pop
hlt
les
es
int3
scas
jge
sbb
mov
push
inc
mov
sbb
add
cmp
jp
loop
imull
in
xorl
adc
shl
add
push
xchg
lds
add
lds
lods
stos
adc
pop
nop
inc
push
outsl
add
push
sub
pop
imul
add
and
jbe
add
repnz
imul
add
aaa
movsb
push
idivl
hlt
dec
in
in
add
movsb
sbb
jnp
cmp
movsl
cmc
jns
lahf
add
stos
push
push
pop
clc
loop
fs
adc
scas
jns,pt
lea
mov
fwait
in
sbb
jg
ficoml
xor
repz
push
dec
inc
mov
and
ljmp
mov
daa
les
and
sbb
sub
fwait
lods
sbb
addr16
negb
or
out
fwait
out
scas
out
push
sub
out
push
inc
repz
or
cmp
ljmp
mov
lock
and
rol
repz
sbb
sub
mull
and
sarb
lock
push
dec
flds
pushf
clc
mov
or
adc
das
or
iret
mov
scas
filds
out
nop
je
lock
out
aas
adc
xchg
jl
xchg
jno
lcall
pop
jmp
xchg
jbe
cmp
daa
add
flds
mov
sbb
ds
notb
xor
repnz
stos
in
cmc
cmc
add
movsl
mov
in
ljmpw
adc
push
fsubrs
push
xchg
jmp
xchg
enter
push
arpl
mov
cmpsl
movl
clc
jmp
pop
push
dec
movl
push
adcb
inc
out
jbe
push
mov
mov
sub
imul
and
add
into
data16
loop
add
inc
imul
ss
lods
pop
inc
xor
add
je
add
inc
push
sbb
sub
mov
repnz
sbb
sub
ficompl
adc
pop
or
call
push
and
sub
popf
push
loop
mov
neg
loopne
imul
push
jo
movsl
jg
pop
add
sub
pop
push
stos
stos
cmc
sub
sub
clc
xor
adc
arpl
sbb
xor
in
clc
adc
adc
test
je
adc
pop
fsubr
lock
aaa
daa
insb
adc
clc
frstor
add
dec
js
dec
pop
push
insb
mov
pop
sub
outsb
cmp
inc
add
insb
jle
mov
mov
clc
in
adc
cmpsb
clc
sub
pop
lods
dec
adc
or
leave
in
negl
jbe
xchg
mov
mov
and
mov
adc
xchg
jne
push
push
mov
cmp
fsin
and
addr16
add
jmp
dec
push
movsl
mov
jo
int
flds
adc
jb
into
inc
gs
sub
jae
iret
inc
mov
push
xchg
xor
and
xor
js
jo
mov
jp
std
cmpsb
pop
cmp
ja
jg
incl
mov
jno
sub
shrl
or
jbe
imul
cmc
iret
in
adc
mov
pop
xorb
push
ds
and
sub
jge
out
icebp
and
clc
pop
inc
cmp
mov
mov
daa
xor
cld
int
es
mov
sub
fbld
imulb
gs
push
sbb
add
mov
push
lcall
xor
movsl
xor
lds
add
sub
icebp
fs
mov
or
push
or
push
xor
pop
std
xor
pmaddwd
mov
mov
push
lods
cmp
adc
sarl
push
mov
js
repz
dec
daa
push
outsl
push
out
cmpsb
mov
lods
sub
sbb
sbb
idiv
sub
cld
mov
xchg
sbb
cmp
mov
iret
fwait
dec
pop
sbbl
fisubrl
hlt
andl
adc
jo
or
clc
cmpsl
and
out
pop
ficoml
sbb
data16
mov
push
cltd
xlat
pop
pop
push
sub
mov
adc
mov
test
leave
mov
mov
movsl
daa
jecxz
push
push
pop
fmulp
inc
test
loopne
add
hlt
sbb
push
push
outsb
jmp
loopne
pop
cmp
xchg
cli
arpl
dec
cwtl
push
adc
push
addr16
addps
push
fadd
sub
mov
call
adc
xlat
lcall
into
loopne,pt
mov
add
lock
out
add
gs
mov
add
clc
pusha
out
jl
std
cwtl
into
xlat
call
in
sti
fimull
sbb
push
sbb
sub
mov
out
arpl
push
push
es
std
rcl
movsl
jl
pop
or
cmpsl
xchg
rclb
inc
ja
daa
ror
or
outsb
sarb
out
sbb
jae
test
or
cltd
mov
sub
es
push
jo
out
out
sub
cs
cld
mov
js
fnstenv
xor
es
mov
aam
push
push
jns
mov
js
loop
into
mov
xchg
aaa
stc
jbe
repnz
pop
addr16
sub
pusha
lods
inc
cmp
xchg
jae
clc
hlt
daa
cmp
sub
xchg
dec
sti
lds
jbe
sub
xchg
xchg
and
inc
ljmp
jae
pop
push
add
outsl
outsb
adc
push
fisubrl
aaa
add
push
dec
mov
pop
aaa
fcos
pop
jp
inc
xor
int
fsubl
sub
inc
push
jg
adc
and
daa
mov
lods
or
test
ss
lods
add
pushf
pop
and
sbb
push
mov
xchg
adc
push
add
cmpsl
outsl
sbb
dec
fisubrs
dec
push
loopne
push
mov
xchg
jge
cmp
fldenv
sub
push
loope
mov
cltd
xor
out
imul
xorl
xchg
addr16
jmp
scas
mov
pop
sub
and
jl
testl
dec
push
xchg
sbb
imul
lock
mov
xor
lock
push
cld
mov
cwtl
nop
inc
xchg
test
outsb
scas
pop
fcoms
dec
mov
stos
repz
iret
insb
ret
xchg
sbb
test
adc
fadds
pop
int3
outsl
clc
or
icebp
push
jmp
in
fdiv
nop
lock
mov
test
add
adc
in
out
add
loope
test
repz
pop
icebp
sub
push
pop
and
pop
add
adc
mov
leave
jl
cmpsb
das
arpl
dec
call
jg
xchg
mov
sbb
test
inc
ds
lods
add
cld
sub
mov
pop
call
jl
push
andl
popa
jecxz
lret
lods
dec
add
mov
fwait
pusha
cli
loope
aaa
and
pmaddwd
addr16
jbe,pn
lods
inc
clc
pop
stos
in
jo
shlb
mov
lret
mov
adc
add
loope
push
pop
push
addr16
dec
pop
in
mov
adc
sbb
pop
pop
test
cli
js
fsubs
jge
insl
mov
ljmp
or
cmpsl
lock
fstps
dec
fiadds
pop
cwtl
pop
jns
mov
and
jno
dec
fs
jmp
roll
fiadds
loope
and
imul
lock
aam
pop
pop
popf
jl
cmpsb
into
push
mov
mov
mov
dec
loopne
mov
icebp
int
jns
mov
mov
aad
pop
popa
lahf
cmp
xchg
pop
enter
inc
mov
fidivl
xor
cmp
pusha
xor
mov
pop
cmp
xor
push
mov
xor
jmp
adc
cli
outsl
jg
icebp
pop
inc
adc
sbb
jae
mov
in
lea
mov
out
into
outsl
xor
shl
cmpsb
dec
arpl
jne
or
pop
jmp
sub
adc
push
repnz
cli
in
push
fmull
inc
lods
jbe
push
push
in
push
lahf
dec
mov
xor
sub
jmp
das
mov
or
xchg
cmpsl
and
and
mov
les
sub
bnd
jno
enter
mov
lods
adc
add
push
push
imul
jmp
outsb
lock
bnd
push
hlt
imul
testl
cld
mov
sub
jnp
aaa
adcb
add
in
pop
cli
insl
arpl
xor
push
repz
rcrb
repnz
js
jno
inc
fdiv
add
adc
repnz
or
sti
pop
clc
outsb
push
add
out
add
pop
ja
push
ljmp
push
adc
sbb
xor
leave
dec
push
xor
in
sti
cmp
into
arpl
enter
xor
cmc
add
push
arpl
rcr
xchg
jl
cld
and
rclb
lret
jg
enter
outsb
xor
push
xchg
and
adc
inc
stos
sahf
movsb
mov
pop
pop
cld
sarb
pop
mov
mov
icebp
push
pop
enter
mov
insb
jne
jns
repnz
cmp
in
push
push
jmp
jmp
and
into
sub
call
jae
pop
mov
fdivrl
enter
push
ljmp
xor
pop
mov
xor
xor
mov
addr16
loopne
mov
cmc
mov
sbb
pop
mov
xor
repnz
or
cmp
das
xor
cltd
or
or
cli
cmp
rclb
rorl
inc
inc
push
inc
sti
jo
push
sahf
insb
out
jae
sub
xor
mov
cmp
in
fdivrs
or
enter
push
push
sub
lret
neg
scas
cli
cmpsb
test
fpatan
xor
mov
push
ljmp
scas
inc
idiv
ljmp
add
mov
and
mov
pop
cmp
pop
mov
repnz
clc
push
nop
scas
test
loop
pop
subb
push
xor
jae
pop
push
xchg
test
inc
pop
jp
cwtl
aam
push
push
test
jecxz
test
cli
cmpsb
or
pop
push
push
mov
test
ss
or
subb
pop
inc
push
into
rorb
dec
ss
xchg
xorb
mov
notl
xchg
shll
xorb
aad
sub
or
ljmp
mov
mov
test
movsb
jae
push
inc
sub
fwait
dec
add
adc
loope
jbe
xor
aas
add
cltd
pusha
or
loopne
and
out
outsl
mov
popa
hlt
aas
mov
pop
sub
push
mov
cmp
clc
aaa
addr16
add
adc
xchg
xor
ret
adc
cld
push
scas
mov
mov
xor
ja
or
jno
sub
mov
fdivl
jae
pop
cld
xchg
arpl
jl
data16
adc
cld
mov
ficompl
daa
clc
js
pop
mov
mov
imul
icebp
or
sub
mov
lods
testl
lahf
pop
pushf
js
data16
addr16
push
push
iret
imul
jmp
pop
cmp
aam
mov
pop
outsl
nop
test
aam
lahf
mov
hlt
pop
daa
xchg
flds
in
out
repnz
out
pop
xor
fwait
test
xchg
pop
lea
mov
ficoms
lea
fimuls
xchg
sub
test
clc
jbe
inc
leave
pop
push
jb
mov
mov
xchg
inc
out
fimuls
out
or
push
das
rclb
pop
jp
push
inc
int
push
xor
cmc
std
adc
mov
add
mov
nop
in
insl
and
lock
jne
out
fisubrl
in
mulb
and
lahf
or
scas
mov
pop
mov
fimuls
icebp
xchg
sub
fisubs
icebp
dec
fisubrs
movsl
jecxz
jecxz
xor
dec
sbb
ja
cltd
ja
cltd
ja
cltd
ja
cltd
push
inc
cmp
scas
fistl
and
fnsave
dec
into
inc
sub
es
jne
push
xor
sub
icebp
push
into
out
repz
jne
dec
jl
dec
subb
outsl
fcoms
ljmp
ficoml
daa
sarl
cmc
insb
lods
jbe
or
ljmp
mov
fnstenv
in
fdivs
dec
lret
or
ficompl
xor
ljmp
dec
push
cmp
outsl
mov
mov
aam
orb
adc
jl
dec
adc
icebp
sbb
cld
popf
cmp
fimull
std
pop
fdivrp
inc
jmp
cmpsb
leave
adc
mull
cli
std
popf
test
pop
aad
jne
mov
fcoml
call
clc
jbe
jb
cmp
jo
imul
repz
mull
test
outsl
imul
ss
xor
jo
cmp
stc
jmp
sub
scas
mov
sbb
and
sub
clc
xor
fnstsw
mov
clc
fsub
jb
jbe
cmp
inc
rorl
pushf
in
or
jmp
pop
test
shll
jb
cmc
bound
mov
imul
sub
xchg
sbb
cmp
and
pop
ljmp
mov
inc
mov
inc
push
mov
mov
in
pop
es
mov
jp
adcb
clc
stc
jne
and
jbe
lea
pushf
stos
xchg
push
cmpsb
push
lea
and
daa
xor
mov
jp
add
mov
jnp
andb
jge
mov
adc
fildll
pop
mov
adc
clc
adc
xchg
mov
mov
test
xchg
sbb
adc
cwtl
push
out
in
int3
jbe
fbstp
clc
add
enter
xor
adc
repz
mov
jmp
mov
lods
jo
js
pop
inc
xchg
mov
mov
dec
out
cmc
stc
ret
pusha
jmp
in
mov
or
loope
cmc
cltd
lret
sbb
push
sbb
in
mov
add
test
clc
out
js
ss
stos
push
push
mov
cmp
imul
inc
in
sbb
sbb
sub
test
fimull
sbb
aaa
and
cmc
cld
rcll
pop
cmpsl
jmp
notl
out
pop
cli
xor
pop
pop
loopne
pop
iret
push
or
jo
sbb
adcl
aas
adc
xchg
stos
jbe
xlat
movl
xchg
fldl
sub
negb
pusha
je
enter
lods
push
das
sbb
orl
shlb
mov
push
cli
push
pop
push
sub
jno
shrl
xchg
fld
hlt
aaa
pop
cld
inc
mov
mov
push
jbe
lret
push
jle
inc
lods
inc
sub
sahf
ja
pop
mov
insb
leave
out
sbb
inc
sub
sub
jmp
mov
jnp
or
or
mov
ret
xor
lods
jle
lods
repnz
jbe
fldenv
icebp
or
xchg
push
aam
cmp
xchg
cmpsl
roll
mov
sub
stos
jne
sbb
test
xchg
fisubl
xchg
or
xchg
mov
xchg
out
pop
jle
add
jae
dec
fimuls
inc
es
loopnew
cmpsl
enter
scas
mov
arpl
or
out
sub
ror
notl
out
test
push
loop
or
pop
jno
lret
jle
xchg
mov
inc
and
insb
daa
dec
ds
out
xchg
or
mov
push
jbe
and
enter
stos
rolb
int3
into
sbb
xchg
sub
jecxz
inc
into
sub
insb
cmp
inc
into
push
inc
fisttpl
adcl
push
notb
xlat
sbb
pop
adc
cmp
in
sub
adc
xchg
iret
pop
xor
adc
push
aaa
push
dec
xlat
int
or
cmp
mov
sub
mov
mov
mov
dec
nop
outsl
jp
shl
enter
mov
ds
in
hlt
fsubs
pop
xchg
xor
icebp
outsl
lds
pop
xlat
imul
ficompl
and
iret
jnp
lock
enter
xlat
push
adc
xchg
cmpsl
fidivl
push
iret
sbb
fsts
mov
ja
sbb
jns
sbb
test
push
sbb
sti
jno
xor
stos
fwait
clc
push
pop
add
jl
mov
push
ljmp
dec
lods
lock
test
push
ds
int
adc
jg
aam
add
xchg
inc
xchg
or
sub
lods
sbb
cmc
jmp
in
insl
jecxz
popf
xor
repz
and
sahf
mov
ss
fwait
iret
pop
adc
jns
imul
cmp
scas
sbb
xchg
sbb
jo
mov
iret
jecxz
push
ret
mov
mov
pop
sbb
mov
mov
xor
mov
xchg
mov
je
pop
loop
fimull
lcall
push
sub
jg
mov
mull
popf
push
add
xchg
add
das
sbb
pusha
dec
repz
add
test
imul
das
fildl
push
lods
xchg
test
pusha
fs
add
push
cmc
xor
pop
in
mov
js
xorb
enter
xor
fwait
scas
rorl
lret
imul
cwtl
push
int
test
lds
bnd
or
testb
cmp
and
ja
or
xchg
mov
push
cli
out
sbb
scas
sub
addr16
shlb
adc
movsb
inc
jo
and
f2xm1
adc
push
rolb
sbb
iret
jbe
lods
popf
adc
mov
fnstcw
out
into
jmp
fistps
xchg
mov
jp
dec
cmc
loope
clc
sub
cmp
js
clc
add
je
std
icebp
jae
sub
mov
sbb
subb
je
mov
aam
add
cld
sti
pop
cmpsl
xor
aad
call
mov
push
andl
push
cmp
lock
xchg
sbb
xchg
jg
inc
ret
mov
orb
out
mov
enter
push
andl
outsb
jo
mov
enter
and
xor
xchg
push
sub
adc
lods
rolb
subl
addr16
add
into
and
jb
mov
cmc
notl
add
cmpsl
sub
test
mov
addr16
push
mov
sbb
push
fbld
add
jl
out
add
dec
add
clc
push
adc
mov
jl
cwtl
xor
jns
stos
aaa
addl
push
push
add
movsl
mov
push
dec
sbb
icebp
push
jg
das
pop
daa
or
mov
sub
cmpsl
mov
movsb
cmp
loop
sub
push
xchg
sti
sbb
mov
mov
push
insl
xor
jnp
sub
int3
add
dec
dec
pusha
popa
or
cli
cwtl
arpl
push
ss
leave
insb
xor
cmpsb
push
push
jle
int
push
mov
push
sarl
icebp
mov
es
movsb
daa
jle
push
sub
daa
and
rorb
clc
push
lods
cmp
sahf
push
dec
in
cwtl
dec
das
jmp
add
out
jbe
adc
xor
arpl
mov
ret
add
mov
sti
xchg
outsl
adc
adc
loope
xlat
stos
lds
daa
push
adc
test
je
lret
jo
es
pop
jb
aam
sub
push
ja
mov
js
or
inc
scas
fcoms
jl
loopne
jecxz
jnp
clc
inc
cmp
dec
cmp
mov
push
xchg
sbb
cmc
xor
imul
xorb
cmpl
mov
add
xlat
out
mov
jmp
repnz
lods
cli
adc
pop
xor
aam
sarb
xor
mov
pop
test
sbb
aad
sub
test
push
cli
stos
push
cmp
push
xor
inc
test
inc
jo
cwtl
xlat
push
xor
mov
inc
adc
mov
mov
pop
enter
jle
stos
add
mov
fldl
add
fs
test
popf
xchg
cmc
xchg
leave
aaa
xchg
lock
fwait
shlb
mov
inc
jge
insb
push
inc
mov
xor
test
jg
ficompl
jnp
push
sbb
push
fsubs
jns
mov
cmp
cld
dec
inc
xchg
pop
mov
ss
inc
aad
adc
xchg
push
inc
lods
jp
out
loop
mov
and
xor
addb
adc
fisubl
xor
inc
push
insl
adc
sti
addr16
sub
sbb
cmc
push
mov
daa
daa
test
lods
std
out
loope
sub
xorb
push
insb
lcall
ss
xor
sahf
fdivs
pop
push
imul
jle
rorl
pushf
ret
sti
dec
jmp
mov
inc
push
cmp
loop
mov
repz
jl
add
test
loopne
cmc
imul
mov
in
icebp
fldl2t
imul
insb
into
push
cld
jb
popf
inc
flds
mov
lea
push
hlt
jmp
and
fdivrs
cli
push
cli
mulb
repnz
pop
std
cwtl
push
pop
add
xchg
pop
mov
aam
and
punpckhbw
sbbl
mov
push
clc
xchg
fistpl
aam
fidivs
in
fsubp
sbb
mov
jmp
aam
out
into
dec
adc
mov
test
fsts
ss
int
popa
mov
mov
cld
neg
mov
cmc
js
inc
push
in
jae
mov
subb
push
mov
inc
loop
jp
add
out
xor
icebp
pop
decb
or
out
shlb
scas
out
test
or
out
ret
sub
imulb
scas
ja
xchg
inc
mov
repz
sbb
or
scas
jg
lea
mov
mov
dec
push
cli
add
push
push
out
xor
mov
xor
gs
xor
mov
es
cmc
sbb
dec
clc
je
rclb
jmp
movsb
stos
cltd
and
or
insb
xchg
jmp
js
rcll
cmp
add
lret
xchg
outsl
jle
pop
lcall
hlt
inc
jb
add
pop
ds
fwait
mov
inc
mov
dec
ret
cld
imul
dec
cmp
fwait
outsl
addr16
repz
loope
sub
icebp
aas
mov
inc
sub
cld
mov
dec
std
add
ds
mov
cltd
xchg
mov
ja
dec
cmpsb
mull
cmpsl
int
add
cli
lahf
cmp
cmp
lods
push
cmp
insb
cmp
dec
loope
xchg
mov
pop
jne
inc
mov
into
lock
fisubrl
aas
lods
or
dec
int
add
out
sbb
ja
sub
xchg
fdivrl
sub
cmp
fistpll
clc
ficoml
adc
lock
cld
inc
or
mov
mov
jb
ss
or
jg
pop
movlps
shlb
rcll
test
cmpl
les
ss
add
push
add
push
mov
fadds
sar
es
out
xchg
call
sbb
mov
mov
xor
mov
add
sub
insl
ds
adc
pop
mov
push
repnz
pop
addl
xchg
push
mov
xchg
xor
out
dec
mov
pop
mov
cmpsl
lock
orb
push
push
mov
cmp
das
mov
shr
and
loopne
cmp
mov
and
dec
aaa
dec
ljmp
out
addr16
add
lods
jle
adc
enter
mov
mov
jl
lds
adc
jns
fiadds
outsl
repnz
daa
dec
lods
pop
xchg
arpl
lcall
in
outsb
adc
cmc
push
imulb
jmp
mov
outsb
cmpsb
cmp
sub
in
sbbl
aad
sub
mov
push
insl
in
test
test
stc
mov
adc
pop
jle
add
aaa
push
cmp
and
jle
pusha
jecxz
lcall
daa
mov
push
inc
insl
lock
add
test
lock
push
bound
lret
sbb
dec
pop
movsl
push
out
cmpsl
test
adcb
sarl
mov
push
xor
xor
stos
inc
mov
fadds
xor
cmc
pusha
lcall
int3
and
stos
std
xor
add
cmp
push
sub
jne
enter
shl
push
xor
xor
pop
xchg
adc
adc
test
jns
into
sbb
sbb
in
testb
pop
lods
inc
adcl
shll
les
mov
cmc
xorl
cmp
js
push
iret
mov
scas
add
dec
dec
out
sbb
add
jle
jg
jl
sti
push
mov
adc
mov
sbb
push
pop
lods
xchg
aam
xchg
adc
popf
and
fdiv
scas
lock
pop
push
icebp
js
bswap
je
mov
adc
cmc
push
sbb
sbb
and
and
add
lcall
daa
xchg
ss
inc
jle
inc
inc
jg
add
pop
cld
push
loope
xchg
jbe
inc
xchg
daa
clc
das
arpl
jne
lret
push
clc
xchg
and
fnsave
dec
inc
xlat
test
sti
jns
sub
and
fst
xchg
mov
insb
mov
push
fnstenv
cmp
ss
adc
add
cld
pop
sbb
data16
sub
lea
mov
dec
ljmp
inc
test
cld
js
fsubrp
push
pop
sarl
inc
ljmp
and
jo
das
pop
and
adc
std
out
push
lahf
adc
adc
lock
cld
jl
add
ljmp
push
mov
je
adcb
xchg
decl
inc
push
add
pop
out
mov
sahf
jmp
clc
sub
imulb
je
xlat
out
sar
imull
imul
into
mov
shrl
pop
lahf
mov
add
imul
std
orl
rorl
and
add
xchg
xor
push
push
jmp
aam
pop
or
lods
loope
push
testb
and
add
addr16
mov
dec
dec
cmp
cmp
xchg
cwtl
cmp
or
iret
movsl
in
xchg
hlt
sub
mov
jbe
push
cmp
push
fwait
pop
mov
jne
testb
xorl
fbld
mov
adc
pop
and
js
lea
mov
xor
dec
xchg
push
fwait
cld
sub
fwait
lret
xchg
jecxz
in
sub
imul
dec
bound
out
mov
or
jecxz
sbb
dec
int
jmp
int
jge
inc
ficoml
xor
cltd
pop
xchg
aaa
sub
mul
insl
xchg
mov
and
mov
mov
jecxz
push
or
push
out
ja
jle
mov
pop
adc
icebp
jae
enter
sub
mov
cld
fsubr
nop
mov
movsb
ds
jb
addr16
test
xor
pop
inc
leave
gs
lock
cmpsl
arpl
add
sub
jb,pt
ss
cmp
add
cmpsl
stc
lahf
xor
mov
cmpsb
cmp
int
cmp
xchg
push
xor
cmp
push
and
popf
es
test
mov
jl
fmull
adc
xor
jmp
lods
mov
nop
sbb
sub
dec
jmp
sub
popa
jmp
test
in
fisubl
adc
pop
cmp
pop
aam
jbe
popf
xor
xlat
dec
cmc
das
test
loope
mov
je
popa
loop
or
loopne
push
sbb
pop
addr16
adc
clc
dec
loopne
pop
mov
bound
rorl
push
je
add
xor
inc
pop
daa
push
repnz
repz
adc
ret
sub
push
in
aam
push
add
xchg
insb
add
xchg
fnsave
jb
jae
subb
adc
loope
outsb
clc
loop
jb
jecxz
shrl
ss
out
in
and
scas
push
ds
lock
and
mov
push
pop
clc
leave
push
sbb
pop
cmp
repz
rorl
enter
xchg
mov
xchg
push
in
testl
stos
data16
inc
data16
test
in
mov
sbb
fisttps
mov
sahf
out
scas
loop
cmc
je
inc
cmpsb
aam
push
mov
pop
pslld
repnz
outsl
repnz
dec
push
push
int
scas
mov
sub
stos
dec
jp
pop
mov
out
jecxz
or
loopne
mov
fldenv
cmp
xorl
into
outsl
ret
add
xchg
popf
push
inc
ret
xor
push
cli
lret
adc
cmp
cmpsb
or
inc
adc
daa
push
imul
cmpsl
adc
je
cmp
lret
inc
cld
mov
lock
pusha
cmp
adc
pop
cld
pop
and
scas
lock
aaa
icebp
js
daa
fdivrs
icebp
and
jae
jno
and
nop
leave
popa
cmp
aam
cmp
adc
stos
sbb
icebp
jbe
out
cmp
sbb
or
xor
or
jae
mov
pop
mov
js
pop
or
inc
dec
fisubl
imul
xor
lods
xor
mov
cs
sbb
cld
addl
data16
es
call
xorl
hlt
stos
mov
ss
daa
loopne
add
mov
add
sbb
daa
lret
and
xchg
jbe
push
sub
sti
xor
pop
les
cmpsl
jmp
mov
loope
add
cmpsb
into
jbe
aam
icebp
fstl
fiaddl
dec
sbb
lods
mov
jb
jl
popa
push
in
push
outsl
jne
das
cli
push
xchg
cli
outsb
jno
jl
out
stos
and
jbe
and
jnp
fcoms
jp
add
cmc
sub
jns
leave
add
cmpsl
outsl
pop
aad
fdivrl
in
clc
shll
fwait
sbb
or
mov
js
int3
roll
addr16
insb
es
sub
test
adc
adc
hlt
clc
cmc
pop
push
mov
push
cmc
mov
cmp
les
add
imul
into
enter
adc
mov
sub
insb
xchg
lods
das
push
shr
jne
call
lods
sub
jbe
cli
adc
or
push
inc
repnz
xor
push
es
xchg
and
push
insl
lret
cmp
test
jb
scas
mov
mov
jbe
cmp
xchg
pop
es
push
cli
fildl
or
sub
mov
or
enter
imul
xor
or
sbb
pusha
jno
js
ret
movsl
mov
cwtl
js
ret
shl
adc
inc
cmp
pop
clc
imul
cmpsb
enter
add
lds
pop
mov
mov
aad
in
jns
dec
adcb
cmpsl
or
mov
aad
jmp
mov
aaa
lcall
pop
jb
test
out
daa
in
jmp
inc
sbb
cmpsb
mov
mov
add
jae
scas
inc
jle
push
insl
mov
aam
pop
jmp
sub
cwtl
outsl
lods
sbb
jae
cmp
scas
inc
daa
imul
fs
scas
adc
stos
js
pop
xor
push
xchg
mov
push
push
dec
cmp
add
pop
xor
popf
dec
dec
aas
xchg
mov
cli
clc
push
cmp
xor
xchg
mov
add
fadds
popa
insl
fldt
xchg
xor
iret
push
mov
mov
jle
cld
pop
adc
mov
sahf
mov
push
ljmp
adcl
lods
cli
pop
ficoml
pop
daa
mov
add
jle
xor
mov
mov
sub
sbb
dec
insl
xchg
sbb
ds
pusha
or
aas
and
into
imul
xor
adc
popa
pop
repnz
into
sbb
adc
jae
xor
xchg
push
hlt
inc
aam
push
mov
repz
ret
pop
repz
sbb
mov
out
mov
add
add
xorl
mov
hlt
push
mov
insb
push
sub
pop
std
cmp
leave
into
jnp
shl
popf
data16
repnz
test
stos
and
fisubrs
sbb
sbb
sub
leave
sub
jbe
cmc
mov
mov
sub
dec
sbb
jmp
sub
rcll
xor
mov
dec
push
adc
lods
into
in
les
mov
in
or
pop
inc
cld
in
fdivs
into
push
fwait
dec
cs
push
js
pushl
add
popf
jo
cmp
mov
rcll
ja
je
repz
xchg
mov
xchg
jbe
push
xlat
cmpsl
lock
push
push
cmp
test
icebp
inc
xchg
jg
xchg
cld
or
and
push
mov
xchg
cwtl
mull
repz
adc
jne
les
jbe
push
push
jmp
testb
sar
loopne
in
movsl
lods
shrl
push
jp
nop
lock
lods
shl
add
rorl
test
out
fildl
jecxz
inc
cld
sub
leave
insl
cmp
divb
in
pop
insl
or
sub
sub
push
in
test
xor
test
xor
lret
xlat
test
cwtl
add
loope
or
roll
test
mov
jnp
mov
jb
bound
push
cmp
xor
jo
adc
xor
imul
sub
xor
sbb
pop
xlat
loope
imul
cmp
mov
pop
sbb
hlt
xchg
ror
lret
cmc
and
jg
push
out
fistpl
test
je
mov
lret
out
jmp
mov
add
int3
insb
mov
orl
mov
loopne
repnz
adc
push
xchg
dec
pushf
sti
adc
dec
adc
inc
sbb
cmpsb
inc
push
into
sbb
pop
ja
cmpsl
mov
movsb
cmpsl
movsb
mov
ja
mov
inc
lret
nop
aam
ss
fcoms
push
icebp
out
frstor
xor
jbe
repnz
daa
pop
aam
xor
ret
loop
mov
jo
test
pusha
enter
scas
cmp
sbb
push
cmp
fnsave
popf
js
mov
je
xchg
cli
push
mov
pushl
mov
sub
jp
xlat
sbb
mov
neg
pop
sahf
jecxz
loop
inc
inc
xchg
into
jo
dec
in
lods
ret
xor
cwtl
add
cli
testb
les
clc
mov
into
jecxz
mov
or
add
out
loopne
test
pop
push
fstps
sbb
hlt
and
lretw
cli
imul
dec
sbb
xchg
sbb
rorl
sbb
jp
inc
imul
mov
roll
and
dec
insb
xor
clc
mov
mov
arpl
pop
mov
xor
addr16
shrb
xchg
xlat
dec
inc
stos
adc
int
pushf
js
dec
pop
ss
loope
ds
loope
mov
cltd
xchg
push
pop
je
daa
pop
rcl
std
mov
stos
jae
clc
movsl
cld
or
xchg
pop
add
mov
iret
rorl
jno
cli
inc
fdivrl
mov
out
shll
rcll
pop
mov
push
push
jp
cs
jl
movsl
pop
test
sbb
add
sti
into
loope
add
or
jmp
mov
mov
push
fdivr
das
xor
jl
dec
sbb
jo
pusha
pop
push
jo
test
jne
ja
cmp
fst
int3
lea
cmc
stos
std
and
pop
mov
and
add
lock
repz
cmp
movsb
mov
cmp
test
std
sbb
js
sbb
adc
divl
or
adc
das
ds
push
repz
sbb
imul
jge
ja
push
bswap
je
dec
jp
jge
xchg
cmpsl
enter
pop
or
or
fcmovu
mov
sub
imul
push
mov
fisttps
mov
jns
adc
mov
cld
test
std
and
push
int
dec
xor
stos
fadds
or
sarl
mov
ret
ds
test
out
mov
push
mov
imul
mov
imul
dec
push
lods
lock
add
addl
xor
xchg
push
idivl
add
pop
lods
inc
pop
xor
adc
pop
inc
dec
mov
sbb
push
push
add
push
outsl
adc
leave
add
out
pop
lea
fiadds
sbb
cmpsb
aad
das
pop
push
outsb
out
inc
imul
rcrl
mov
ret
cmp
jbe
xor
jecxz
and
adc
aas
and
outsb
lods
test
shl
lret
mov
add
xchg
dec
sti
inc
xor
daa
in
dec
push
notb
dec
testb
scas
js
xor
adc
jo
lret
and
push
or
jne
mov
lds
sub
push
xchg
dec
mov
aad
pushf
fisubrl
ret
fs
push
mov
xchg
in
ss
or
fs
xor
ds
inc
imul
pop
mov
imul
in
testl
cli
leave
aad
jle
ja
xchg
cli
mov
sbb
into
stc
dec
daa
ja
fldcw
add
cli
pop
popf
out
scas
lret
dec
mov
sbb
enter
movsl
ret
sti
adc
pop
push
cmpsl
dec
sub
mov
sub
arpl
cwtl
pop
loop
mov
lahf
pop
out
test
out
clc
roll
cli
call
je
push
push
loopne
xor
aam
stos
adc
push
cmpsb
dec
dec
inc
test
mov
add
arpl
aam
jnp
sub
and
dec
lcall
jg
int
push
in
xchg
push
sbb
add
sub
sub
fs
or
arpl
repnz
stos
adc
mov
fisttps
hlt
mov
or
in
fstpt
sbb
test
ds
xor
loop
mov
divl
daa
lods
scas
testb
sbb
sub
leave
cmpsb
xchg
icebp
cmp
mov
jbe
jo
mov
js
mov
popa
cli
cltd
out
inc
xor
push
or
mov
outsb
jnp
outsl
addl
cli
or
loope
jbe
testl
pop
mov
cmp
jnp
mov
sub
xchg
jmp
sub
cltd
add
push
lds
xchg
inc
dec
mov
out
xchg
leave
loope
fidivl
into
push
es
mov
push
jl
mov
daa
mov
cld
mov
cmp
push
stos
sbbl
int3
cld
or
push
leave
ss
data16
mov
or
adc
xor
or
imul
cmp
or
mov
adc
inc
jbe
pop
mov
jns
mov
xchg
mov
sarl
cld
fs
leave
xor
sbb
inc
push
adc
inc
sub
pop
or
loope
addl
out
fs
in
push
int
ret
adc
adc
cli
out
aam
push
in
sbb
ret
insb
add
clc
xlat
in
inc
fiaddl
mov
jp
fs
or
mov
jb
cmpsb
mov
loope
mov
xor
loope
or
inc
cmpsb
insl
stos
or
cli
cwtl
stc
ret
or
daa
jbe
je
sarl
xor
push
decb
sub
movsl
insl
push
nop
out
push
jbe
mov
mov
push
hlt
dec
jne
inc
test
xor
pop
int3
sub
jbe
cmpsl
and
mov
mov
out
mov
or
xchg
scas
cmp
ss
and
decl
inc
inc
fdivr
xchg
adc
pop
dec
inc
std
adc
or
daa
jmp
rclb
dec
pop
xchg
int
mov
mov
cld
loopne
mov
imul
sub
cli
fcoml
fistpl
dec
into
cmpsl
sarl
mov
fsubs
out
or
aam
sbb
daa
clc
leave
sub
adc
ss
hlt
mov
cmp
xor
or
pop
mov
shll
push
and
das
mov
in
pop
mov
add
scas
enter
sub
push
adc
mov
movsb
test
xchg
jb
outsl
loop
fdivr
shrb
ss
cltd
std
sahf
mov
sbb
sbbl
pop
iret
pop
ficomps
insl
adc
arpl
imul
jg
xor
pop
jbe
mov
call
mov
repnz
lcall
mov
movsl
mov
push
mov
imul
pop
cmpsb
addr16
cmc
mov
cmp
mov
xchg
pop
cmc
pop
mov
std
inc
imul
sti
pop
add
xchg
jle
dec
mov
sbb
mov
push
mov
sub
xchg
icebp
sbb
stos
jbe
fidivrs
and
cs
ficomps
iret
xor
mov
enter
cmp
into
cmp
jnp
cld
idivl
cmpsl
add
xor
mov
cmp
push
dec
clc
add
and
sbb
into
stos
ss
into
aaa
xchg
sbb
js
rorb
repz
push
subl
jp
aam
xchg
mov
inc
pop
cwtl
xchg
int
inc
aas
fisubrs
inc
push
xchg
daa
push
testl
jbe
mov
leave
or
push
xor
lods
or
push
in
cwtl
cmpsl
sub
pop
pushf
call
adc
fprem1
sti
cmp
movsl
stos
cs
cmpsl
int
mov
je
daa
jnp
lods
mov
movsb
into
pop
xor
dec
push
scas
cli
push
loopne
sbb
mov
pop
sub
mov
aaa
push
cwtl
and
sub
mov
jle
mov
xor
outsl
mov
add
mov
sub
cmovge
cmp
dec
pop
pop
int
adc
sbb
cli
pop
lahf
jg
xor
ljmp
add
dec
inc
aam
xchg
out
cld
divl
jae
nop
jnp
psubw
push
in
hlt
dec
and
dec
daa
mov
xor
pop
call
repz
test
mov
push
pop
pop
jns
adc
out
std
in
mov
fisubrs
mov
lahf
mov
inc
mov
xchg
js
push
je
xchg
xor
fldl
dec
xlat
push
and
das
lods
fldenv
xor
xchg
out
clc
clc
mov
xor
lods
xchg
neg
adc
sub
xorb
out
out
xchg
jnp
push
cs
mov
xchg
cli
mov
cmc
jnp
jp
dec
jmp
test
bswap
daa
sbb
into
cs
inc
roll
pop
adc
lods
sarl
mov
add
and
mov
sbb
xor
mov
ds
and
and
fdivrl
cmp
fisubl
and
xchg
inc
out
jmp
push
cmp
cmp
daa
and
pop
divl
push
int
idivl
dec
mov
addr16
arpl
call
xchg
mov
js
adcb
icebp
adc
sub
mov
jb
shl
jbe
enter
hlt
or
fdivrs
cli
lods
add
icebp
mov
or
in
cwtl
push
inc
dec
daa
sub
sub
pop
jmp
or
mov
xchg
lods
pop
jp
jl
ljmp
enter
mov
mov
ljmp
cltd
jo
adc
loop
mov
cmp
daa
lods
cwtl
or
adc
cwtl
jecxz
jge
cs
adc
xor
xchg
out
hlt
iret
xchg
cmp
das
mov
jmp
or
mov
into
fs
push
lds
mov
js
test
ficoml
fstl
imul
jp
jmp
fwait
insb
mov
jb
leave
xor
jg
in
lods
xchg
cld
xchg
jl
sub
aam
or
in
cld
nop
lahf
jns
cli
cltd
adc
sub
pop
popa
push
jns
pop
sbb
or
pop
imul
test
xchg
dec
hlt
into
and
push
dec
push
xchg
jnp
jo
pop
xor
cli
and
fstpl
iret
jb
int3
out
cwtl
dec
jne
inc
icebp
fsubr
js
sbb
xor
into
push
filds
test
xor
push
inc
daa
out
add
push
nop
xchg
es
in
repnz
int3
add
mov
jb
adc
iret
hlt
push
orb
rorl
orb
in
aaa
iret
or
mov
insb
add
sti
mov
push
in
loope
je
push
xorl
dec
xlat
dec
daa
inc
jp
xchg
push
push
movsl
testb
jmp
shll
xchg
inc
and
or
add
sub
xchg
mov
or
mov
scas
push
push
arpl
mov
cld
cmc
lret
inc
movsl
int
ljmp
std
fimuls
xchg
jle
and
hlt
ss
lahf
movsb
sub
insl
jle
shrl
loop
push
rorb
xlat
jno
lods
xchg
jle
pushf
or
jae
mov
lcall
pop
mov
popa
mov
pop
aam
sbb
std
rcrl
add
pop
pop
xchg
movsl
ds
insb
addr16
jno
pop
push
pop
push
inc
and
jo
jb
mov
cmovne
cmc
sbb
adc
sub
lds
add
sub
loop
std
push
imul
es
repnz
popa
stos
cmpsb
pop
outsl
orb
inc
bound
ret
add
call
pop
jge
pxor
fs
mov
daa
jecxz
fwait
xchg
jo
sub
push
imul
inc
adcb
test
or
cmp
and
fs
cltd
ja
cltd
clc
in
push
inc
push
lock
shl
shlb
xchg
add
sbb
add
shll
cmpsl
cwtl
sti
imul
lods
in
mov
mov
jne
xchg
int3
repnz
test
or
aad
cmpsb
loopne
in
cmp
add
inc
pop
lea
push
pop
pop
mov
stc
out
push
aaa
xchg
repz
in
mov
xchg
pop
test
aad
shll
insl
xchg
push
sbb
push
push
ja
mov
jae
jmp
xchg
dec
icebp
xor
bswap
and
ds
cmp
mov
dec
inc
add
leave
data16
ss
pop
fldcw
sbb
mov
push
inc
jns
fdivrl
sbb
repnz
jmp
shl
dec
test
popl
lea
outsl
je
dec
subb
and
rcrl
stos
and
push
adc
cmpb
mulb
xchg
xchg
lods
clc
lock
inc
shr
mov
sub
xor
inc
int
mov
in
sub
mov
jbe
pop
mov
mov
lods
push
stos
loopne
cmp
push
lds
mov
adc
mov
mov
jb
aas
jne
xchg
dec
sub
out
dec
sti
roll
xor
or
push
jnp
jo
sub
mov
insl
inc
dec
test
test
xlat
push
pop
xlat
cmpsb
xor
jns
mov
fs
pop
mov
cmc
lea
jle
xchg
xchg
imul
inc
jae
in
out
cmp
mov
jecxz
dec
cli
inc
pop
in
ljmp
ss
jbe
jmp
sbb
mov
dec
or
popl
jb
notb
dec
push
das
adc
pop
repz
push
dec
xchg
mov
testl
pop
jecxz
inc
negl
pop
push
inc
cmp
inc
sti
push
xchg
lods
jnp
xlat
sbb
xchg
sbb
sbb
sti
pop
lea
mov
fsubs
jp
insb
idivl
sbb
pop
mov
adc
notb
pop
scas
clc
xchg
sub
mov
xchg
sub
push
or
inc
ja
xor
clc
cltd
or
push
cmc
cmp
addr16
cs
in
call
aam
mov
xor
sbb
dec
pop
into
cld
and
loopne
loope
cmpsb
jmp
and
and
mov
mov
pop
xlat
push
inc
push
addb
mov
push
cld
das
je
aam
push
dec
xchg
faddl
dec
arpl
pop
cmp
aaa
pop
and
xchg
xor
insb
seto
adc
push
ficomps
mov
xchg
ja
mov
xchg
cld
arpl
leave
cs
je
sbb
xchg
xlat
loope
pusha
and
add
jmp
adc
mov
jo
mov
repz
fnstenv
or
testb
mov
cmp
push
mov
pop
sub
insb
sub
xor
mov
stos
data16
push
ss
push
testb
enter
push
push
sub
daa
ret
popf
pextrw
push
sbb
cld
jnp
sbb
gs
lds
cs
adc
fmul
adc
mov
sbb
jge
loope
sbb
cwtl
xchg
das
push
jl
inc
ficoms
mov
pop
mov
sti
fisubrs
push
out
adc
aad
sub
and
adc
mov
aad
or
movsl
mov
lock
sub
rolb
pop
lods
int
rcl
lahf
imul
ja
sti
js
jp
popf
push
in
lret
mov
repnz
ret
pop
xchg
push
jns
adc
jb
adc
test
fildll
outsl
sti
or
imul
cmp
push
pop
mov
jle
pop
imul
push
adcb
js
push
test
shrb
repz
div
push
test
and
push
pusha
and
or
dec
cmc
xchg
or
push
push
mov
mov
push
jmp
inc
lret
mov
add
cld
lea
pop
out
sbb
clc
cld
pop
inc
mov
fbld
popf
cmp
xchg
ss
test
push
roll
sbb
mov
sub
test
nop
push
sbb
adc
push
fidivrl
mov
call
aam
inc
cwtl
es
das
inc
push
insb
or
mov
jbe
outsl
je
sub
pushf
push
pop
jnp
xchg
mov
push
rorl
icebp
sbb
popa
pop
fldl
cld
add
test
pop
out
inc
dec
pop
xor
and
xchg
pop
out
ss
jp
loopne
cmc
cmp
push
dec
sbb
jns
repz
rcll
les
jne
and
aas
jae
ljmp
or
xor
stos
push
addr16
mov
popa
jne
es
mov
sti
add
cmp
jno
inc
out
push
mov
fwait
lods
xchg
imull
fwait
add
lds
ret
xor
xor
ja
negl
dec
adc
mov
aas
cmp
and
jae
mov
popa
mov
push
jb
mov
in
mov
add
test
sub
mov
sub
inc
std
icebp
cld
aam
cmp
push
sub
cmc
sub
pop
hlt
jae
dec
imul
adc
mov
repz
pop
mov
xor
test
jmp
dec
cltd
out
add
rorl
jno
jle
scas
icebp
js
xlat
ret
dec
and
pop
push
lret
std
jmp
shrb
or
les
not
into
fstpt
mov
cmpsb
inc
into
insl
xchg
inc
mov
xor
and
int3
jne
sub
push
mov
dec
inc
leave
data16
ret
adc
push
shlb
sub
cltd
sbb
cmc
mov
test
jo
mov
leave
sbb
nop
icebp
mov
mov
pop
mov
cli
mov
jae
pop
je
aam
subl
fiadds
sbb
push
test
push
pop
sub
mov
mov
in
test
push
mov
mov
bound
daa
mov
push
scas
psadbw
lods
mov
xor
add
jno
cmc
xlat
dec
push
shlb
or
push
scas
popf
aam
popa
int
addl
and
lods
into
xor
or
in
jmp
push
push
js
jne
sbb
mov
mov
pop
in
sub
insl
lods
addr16
push
cmp
mov
cmp
inc
sarb
jns
sbb
push
mov
push
push
gs
dec
or
mov
sti
scas
cltd
lea
mov
pop
popf
divl
xchg
test
mov
scas
aaa
dec
fdivrs
js
into
lock
jb
ret
pop
pop
inc
test
daa
adc
loope
pop
addr16
xchg
adc
js
daa
adc
into
pop
ja
mov
jmp
mov
aad
xchg
add
hlt
push
push
je
push
out
andl
into
sbb
cmpsb
pop
cmp
pop
mov
ret
adc
sahf
sbb
mov
add
and
clc
xchg
lock
adc
repz
mov
or
push
cmp
js
cwtl
in
cmpsl
add
sub
decb
inc
js
mov
push
xor
mov
dec
mov
xchg
jne
cld
sub
arpl
test
shl
dec
cmpsl
jno
js
fcompl
pusha
mov
mov
sti
dec
sbb
push
push
out
xorb
jecxz
cmpsl
lahf
mov
mov
jg
push
lcall
xchg
sbb
repnz
gs
lods
push
mov
lret
in
out
mov
iret
lcall
jb
or
pop
and
ja
pop
mov
pop
sub
sbb
xchg
mov
cwtl
into
adc
movsl
btr
test
loop
scas
adc
dec
pop
xchg
lret
stos
hlt
pop
sti
daa
call
jmp
rcl
loop
repnz
stc
je
push
mov
icebp
loope
sub
insb
mov
mov
pop
fdivrp
dec
sub
cmp
es
rolb
out
ss
jle
fbld
add
mov
movsb
insl
les
adc
inc
cli
push
rorl
xor
mov
pushf
mov
dec
push
rcrb
test
sub
das
vlddqu
xor
push
cmp
ss
daa
aad
jb
cmc
lock
mov
xor
push
mov
aas
daa
jno
mov
push
arpl
pop
xchg
adc
lods
jbe
int
jp
test
adc
mov
mov
push
ss
dec
dec
sti
loope
imul
notl
push
lret
div
dec
clc
mov
shl
push
xor
int3
adc
sti
mov
sbb
rcrb
ljmp
imul
movsl
push
adc
rorb
sbb
adc
gs
push
enter
sbb
pop
inc
push
leave
adc
add
xchg
loope
repnz
dec
cmp
push
es
xor
arpl
pop
repnz
std
or
adc
repnz
push
sbb
andb
mov
mov
pop
int
jns
or
adc
xor
adc
xchg
repnz
pop
pop
cwtl
dec
cmp
bnd
fisttps
sbb
frstor
xor
push
or
lods
popf
push
xor
cmpsl
test
pop
jecxz
stc
testb
cmpsl
push
pop
adc
sub
mov
pop
xchg
loope
bnd
adc
testl
cmpsl
lea
ret
imul
lret
mov
inc
cmp
les
xorl
hlt
push
icebp
dec
pop
jns
cmp
test
pop
add
add
dec
xor
test
dec
loope
clc
mov
icebp
inc
clc
push
int
idivl
int
clc
fnstenv
fcomp
adcl
adc
cmc
adc
cmpsb
repz
add
push
push
aad
xor
insb
jecxz
and
sbb
mov
pushf
jmp
push
or
xor
sub
movsb
xor
stos
leave
insb
je
jns
pusha
or
and
es
jg
cli
out
pop
daa
testl
imulb
out
mov
cmp
gs
stos
insb
push
pop
pop
lods
sbb
inc
cmpsb
out
add
xor
bsr
mov
xchg
stc
and
imul
jl
testb
cltd
sbb
xchg
and
push
scas
adc
cmp
xor
dec
fld
jmp
cmp
mov
notl
add
cwtl
imul
xchg
icebp
mov
dec
dec
adcb
mov
pop
sbb
pop
jg
mov
sub
test
add
push
and
test
pop
out
xchg
jl
sbb
lods
push
adc
shrl
sbb
sbb
out
adc
sbb
hlt
cmpsb
jge
mov
nop
add
push
out
cli
mov
stos
iret
imul
icebp
cmc
call
mov
adc
negb
out
jo
xor
jae
cmpsb
add
cmp
roll
xchg
rclb
fdiv
push
cmc
xchg
xchg
mov
jbe
pushf
je
push
jbe
or
out
cmp
js
jo
add
push
sub
cmp
data16
xchg
mov
insb
out
shrb
fstl
pop
sub
push
dec
and
lods
mov
into
mov
pop
add
jl
lahf
cmpsb
fiaddl
sub
xor
jl
jmp
add
repnz
in
jno
adc
add
jo
jmp
outsl
cmc
inc
out
cli
dec
adc
add
insl
add
enter
aam
or
out
loop
dec
jle
stc
aaa
pop
or
xchg
cld
scas
mov
cmp
cli
adc
in
stos
pop
push
mov
in
sbb
lahf
cld
mov
js
mul
insb
mov
int
xchg
xchg
jne
scas
rorb
inc
xor
cld
lret
xor
mov
or
popa
scas
and
loop
cmp
dec
call
push
in
cmp
orb
sub
mov
mov
push
mov
add
sub
in
xor
in
lock
xor
test
or
or
or
movsb
icebp
into
mov
cltd
sub
or
or
jae
jae
mov
xchg
nop
push
xor
pop
insb
enter
aad
lods
mov
sub
jae
repnz
lret
jo
cmpsb
jp
inc
fs
outsb
fldcw
xchg
xchg
mov
xchg
mov
pusha
into
mov
dec
cmpsb
push
repnz
daa
icebp
mov
dec
dec
jmp
test
push
xor
idivl
jge
cli
out
dec
js
icebp
jns
dec
dec
sub
jmp
mov
jmp
cld
inc
movlps
mov
sbb
les
pop
dec
addr16
es
add
out
repz
xchg
push
sbb
mov
cmpsb
and
push
xor
mov
dec
inc
popa
or
mov
das
mov
lods
dec
jmp
sti
loop
mov
xor
shrb
xor
es
dec
pop
divl
jmp
out
idivb
sub
jge
jnp
loop
fists
repz
cmc
or
dec
dec
inc
sbb
push
adc
mov
and
lea
hlt
cmp
jecxz
test
test
inc
mov
mov
mov
cld
push
in
add
push
dec
mov
ja
dec
push
das
outsl
aam
mov
repz
dec
lcall
fldcw
push
cmpsl
mov
jo
daa
pop
dec
out
and
cmp
push
jecxz
dec
sti
or
adc
test
clc
sbb
into
in
inc
and
add
pop
shr
dec
push
jmp
cld
jecxz
fiadds
jbe
xor
iret
loop
ja
and
jecxz
stos
adc
sbb
loopne
mov
adc
icebp
sbb
jne
jmp
xor
dec
jp
jecxz
divl
movsb
dec
out
sbb
data16
gs
dec
inc
lock
mov
popf
jns
mov
lea
movsl
push
stc
dec
jmp
loope
andb
sarb
fcompl
fwait
rcl
fdivrl
cmp
xchg
clc
jne
pop
jmp
push
push
jmp
jo
fcomps
mov
fsubp
fsts
mov
mov
add
js
jmp
inc
or
push
xor
hlt
sbb
and
lock
aaa
push
enter
or
lock
in
mov
push
test
xor
lods
dec
andl
push
shl
cmp
jne
push
hlt
stc
imul
insl
add
aaa
je
inc
xchg
jo
int
outsb
cwtl
push
xchg
scas
or
int3
mov
jge
aaa
repz
jle,pt
jne
sub
mov
mov
repnz
sub
mov
jne
cmp
sbb
stc
sub
dec
in
sbb
aaa
loopne
or
aaa
push
js
iret
fldenv
mov
push
xchg
mov
clc
pop
dec
popa
xchg
imul
repz
ljmp
mov
jns
fildl
es
movsl
cmpsl
fists
jns
pusha
xchg
jecxz
pop
std
pop
push
pop
jmp
push
xchg
mov
mov
in
cmp
popa
mov
mov
sti
push
daa
lods
icebp
xorb
xor
jo
mov
push
les
fidivl
loopne
cmp
rcll
arpl
popf
jl
mov
pop
jns
je
cli
les
mov
mov
addr16
add
xchg
pop
fnstenv
dec
add
push
jb
adc
cmp
je
ja
push
pop
jmp
sahf
pop
pusha
in
add
mov
mov
pop
mov
cmc
jno
adc
bnd
pop
mov
movsb
dec
outsb
mov
inc
out
or
cs
aam
inc
pop
lea
pop
push
pop
dec
shlb
push
imul
into
in
je
orl
sti
jmp
xlat
dec
outsl
pop
test
movsl
ss
sbb
xor
dec
sbb
pop
pop
jecxz
fildll
shrb
stc
dec
mov
in
mov
inc
aam
mov
mov
paddusw
outsl
aaa
jge
and
insl
adc
ss
js
or
mov
dec
push
adc
mov
jbe
daa
mov
imul
xchg
push
add
xor
push
jle
cmp
pop
jge
fwait
add
sub
scas
cmp
fildll
mov
fistpl
xchg
insb
and
ret
xor
sub
push
lods
push
lcall
aam
push
sub
imul
adc
stos
stos
sar
shl
clc
push
fcoms
inc
daa
into
sar
fimuls
fcomip
jne
nop
clc
xor
jmp
cmpsb
scas
sub
jmp
sbb
cmp
inc
stos
mov
cmp
dec
jge
sbb
cltd
mov
pop
cwtl
add
push
xor
sbbl
lcall
xor
scas
jb
sbb
push
vmovaps
xchg
inc
add
leave
mov
cmpsl
xor
adcb
subb
cmp
imul
pop
int
imul
neg
inc
xorb
sahf
pop
and
neg
popf
icebp
mov
hlt
out
ds
imul
adc
jae
lods
ret
push
inc
mov
out
sbbb
sbb
js
cmp
cmpsb
mov
mov
mov
jno
sbb
fldenv
stos
ja
je
adc
push
xor
lret
or
inc
testb
daa
cli
loope
add
or
jbe
push
wrmsr
sarl
and
je
jle,pn
fs
push
cwtl
stos
sbb
jl
sbb
jge
sub
je
xchg
into
addr16
into
cmp
daa
push
jne
jae
inc
nop
jle
xchg
xlat
push
dec
ficomps
clc
cmpl
dec
or
cld
outsb
sbbb
push
cwtl
mov
mov
into
jge
cmpsb
pushl
or
xchg
repnz
jle
xor
out
xchg
mov
push
and
fisubrs
sub
add
and
sbb
and
push
pop
scas
sub
cli
dec
mov
shrl
xchg
into
jo
pop
das
mov
dec
cld
dec
sarl
inc
dec
sub
hlt
addr16
ja
imull
lea
xchg
add
int
negb
sti
xor
pop
xor
jb
cli
inc
in
inc
inc
mov
cmpsb
sti
imul
add
fstl
mov
cmp
aas
push
add
sahf
fbstp
sub
push
mov
mov
loop
insb
fnstcw
enter
push
inc
movl
aam
cmp
sub
test
arpl
jmp
mov
ljmp
push
mov
rolb
scas
mov
fidivl
out
jb
push
pop
fcmovnbe
sbb
mov
xchg
stos
negl
divl
mov
rclb
mov
push
jmp
xorl
cmp
push
inc
and
push
xchg
xchg
jo
sbb
xchg
call
shlb
inc
inc
nop
mov
popl
add
call
mov
dec
cmc
sub
or
cltd
aam
cld
sbb
iret
mov
xchg
nop
cmp
push
and
icebp
ror
cmc
mov
jge
cmc
jne
add
std
popa
lds
out
mov
bound
jbe
xchg
je
lcall
jbe
out
adc
mov
xchg
scas
mov
pop
subl
outsl
insb
push
idivl
jle
scas
jo
jg
call
jae
jg
mov
mov
adc
ljmp
xor
clc
or
repz
jo
mov
cmc
out
shl
loope
fdivrl
rcrb
test
jbe
movsl
mov
lret
outsl
decb
test
movsl
xchg
add
pop
jbe
pop
hlt
jno
add
xchg
xor
mov
in
push
nop
stc
call
ret
pop
daa
insb
jge
jle
cmp
jns
scas
jg
loope
cld
xchg
and
cmp
int
data16
push
adc
xor
push
lock
popa
stc
shld
daa
iret
jne
bound
push
lock
pusha
cmpsl
jne
sub
leave
ja
loop
sbb
test
mov
clc
in
loopne
push
cwtl
push
dec
jns
sub
into
cmp
mov
mov
addr16
cmpb
repz
scas
test
scas
jg
je
jle
jnp
jmp
arpl
push
cmp
mov
pop
add
add
ss
cmp
sbb
outsb
dec
adc
sbb
sub
or
cli
inc
std
sbb
adc
repz
mov
cmp
add
cld
andb
ja
add
inc
lea
std
dec
push
into
dec
leave
push
not
dec
and
dec
push
and
mov
outsb
mov
lods
mov
nop
fisubs
jecxz
loopne
push
into
shl
dec
push
test
fisttps
jbe
mov
repz
jmp
xor
lcall
push
xchg
outsb
sti
popa
fs
jge
sbb
jne
aad
xchg
roll
jns
or
cmc
pop
dec
clc
fucomip
jno
lcall
mov
test
daa
dec
fldenv
or
cmp
dec
daa
push
pop
jb
inc
xor
clc
scas
cld
jg
xchg
mov
scas
jne
xor
push
in
jecxz
out
xchg
fldcw
sub
jl
nop
std
ret
xchg
sahf
jg
push
dec
dec
leave
inc
add
add
mov
js
int
lods
mov
push
imul
xchg
mov
fisubrs
inc
jo
push
sbb
std
out
pop
cltd
sub
xorb
jbe
out
into
xor
dec
xlat
mov
addr16
clc
addr16
inc
push
dec
ja
ja
mov
jl
cld
xor
dec
pop
xor
std
mov
push
stc
fisubrs
sub
add
arpl
inc
cmp
dec
orl
stos
pop
mov
loop
orl
jno
mov
cmp
lret
decb
jge
cld
push
icebp
outsl
mov
andb
stos
mov
idivl
fs
cmp
mov
ljmp
pusha
sub
lahf
aas
cmp
bound
insl
cld
and
jo
adcl
pop
sub
stos
pop
xlat
call
xchg
push
pop
in
les
scas
jno
pop
imul
push
aaa
out
xlat
cmp
jns
jnp
adc
jbe
pop
mov
test
mov
cmp
stos
lcall
popf
adc
sub
sub
std
inc
popf
ss
lods
addr16
fidivl
scas
lock
sub
out
sbb
lods
arpl
sbb
jbe
test
out
mov
add
jns
jo
outsb
xor
cmovs
inc
sarl
je
jns
inc
movsb
pop
cmpsl
rorl
push
xor
mov
and
add
push
sti
jp
in
and
sbb
sbb
lahf
pushf
stos
jp
leave
lock
mov
cmpsl
xchg
ds
sbb
iret
arpl
into
scas
pop
mov
cwtl
rorb
xchg
fdivl
xor
mov
jne
cld
lret
iret
cmp
repz
dec
mov
mov
mov
jo
cmc
adc
inc
lods
xchg
xor
jbe
in
inc
scas
call
push
or
movsl
inc
xchg
sti
sub
inc
aam
loop
mov
mov
pop
push
push
xor
cmpsl
out
rcll
stos
ljmp
pop
inc
xchg
sub
int3
rcrl
add
pusha
xchg
addr16
cmpsl
sub
mov
test
lods
mov
jo
jmp
in
mov
fisubrl
arpl
and
pop
mov
sub
xchg
mov
push
pop
cld
rol
dec
xor
ja
pop
fs
divl
add
pop
sub
jecxz
sbb
jnp
cmc
cmp
mov
mov
sbb
int3
ret
dec
fiaddl
hlt
enter
mov
bound
out
bound
xor
add
sbb
sub
sub
nop
mov
add
or
and
mov
leave
mov
pop
popf
mull
ljmp
pop
inc
hlt
fnsave
pop
in
sub
add
js
das
aam
jecxz
notl
js
mov
or
add
xadd
out
xor
add
xchg
xchg
jns
fwait
lcall
mov
pop
cld
xchg
dec
bswap
or
into
pop
cmpsl
data16
fdivl
pop
jp
adc
cli
arpl
jne
mov
jo
push
push
rorl
pop
aad
addr16
mov
push
cmp
xlat
out
movsl
xchg
mov
push
and
mov
lods
nop
or
mov
adc
cmpsb
mov
inc
add
push
xor
mov
in
sti
subl
xchg
aaa
add
out
popf
jae
dec
adc
aad
cs
and
mov
lock
sub
cld
imull
push
movhps
das
cld
lret
outsl
fiadds
push
fldenv
jge
xchg
add
in
pop
cli
in
into
fcomps
pop
nop
cli
ficoml
stos
hlt
sbb
inc
fcoms
dec
fnstcw
out
insb
cmpl
pop
ret
mov
in
push
push
hlt
imul
into
aas
sbb
rcrl
jb
jne
xchg
nop
fs
iret
add
iret
adc
cs
push
or
out
push
pop
cltd
das
cmp
and
jnp
adc
movsl
mov
das
roll
and
fldcw
jne
pop
adc
sub
lahf
sub
jbe
mov
in
popf
xchg
jbe
daa
or
inc
leave
fsts
out
jl
ja
jbe
sbb
mov
jbe
shll
dec
cmpsl
hlt
dec
jne
xchg
mov
out
mov
push
cmpsb
sub
push
jne
popf
in
shlb
fstpt
hlt
xlat
loop
loope
inc
pushl
insb
hlt
xor
pop
or
arpl
add
mov
aam
push
out
inc
xlat
neg
mov
sti
inc
add
cld
jle
enter
pop
movsb
mulb
cmp
and
pop
stos
pop
dec
bound
lahf
sub
sub
or
mov
and
mov
cwtl
negl
add
cli
inc
call
dec
negl
cmp
lock
inc
cmp
pop
and
push
add
movsb
cmp
jmp
push
mov
scas
add
arpl
pop
and
js
cmpsb
mov
sbb
mov
jg
xchg
pop
test
adc
push
ja
leave
ss
or
jle
and
jnp
cmpb
add
cld
dec
cmc
pop
punpckhdq
mov
sbb
jg
cmp
add
lahf
insl
les
dec
fistpl
sub
cmp
mov
scas
xor
inc
sub
push
xor
mov
aaa
outsb
pop
inc
notb
sub
jo
pop
or
mov
popf
movsb
adc
aam
rcrb
dec
or
lock
push
xchg
nop
in
lret
dec
mov
pop
jecxz
cmp
das
xor
adc
cltd
popl
cmpsb
loope
xchg
add
into
cld
sbb
cmp
leave
lock
mov
outsl
int
cwtl
les
aad
add
test
mull
shrl
fldl
pop
mov
addr16
out
lahf
mov
enter
notl
imul
aas
inc
test
xor
mov
cmp
push
add
mov
mov
mov
mov
jno
dec
loop
insb
push
jl
cwtl
cmc
clc
lret
mov
push
push
mov
and
je
xchg
xlat
popa
dec
mov
mov
out
adc
movsb
and
hlt
leave
idivl
mov
sahf
int
in
aam
pop
clc
mov
adc
sub
mov
jb
das
pushf
fbstp
insb
xchg
inc
xor
stos
rep
scas
inc
adc
pop
adc
push
je
jge
push
xchg
adc
adc
cmc
push
int3
mov
sub
xor
fwait
aad
push
jg
arpl
in
lods
push
cmp
mov
icebp
mov
out
sub
scas
mov
xor
jo
push
push
pop
push
dec
jl
daa
xchg
add
xacquire
imull
cwtl
repz
jecxz
pushf
in
bswap
sub
jae
push
xchg
les
xor
adcb
sub
test
xchg
mov
dec
dec
mov
nop
subl
fs
or
dec
fwait
sub
andb
mov
popf
xor
pop
and
push
ret
negb
fs
push
out
dec
testl
fcomps
clc
nop
es
aaa
sar
sub
pop
mov
pop
push
shrb
mov
xlat
xor
add
sbb
mov
add
es
nop
mov
jns
mov
nop
enter
ret
lock
jae
inc
addb
pop
sub
loope
popa
and
mov
sub
cmp
rep
iret
push
adc
mov
push
push
pop
fs
dec
add
mov
xchg
jo
scas
mull
divb
push
hlt
fsubrl
test
shrl
push
mov
add
mov
xor
aaa
mov
movsl
movsl
sbb
xor
loop
leave
xchg
push
push
roll
jb
sub
jle
dec
mov
pop
push
cmc
movsb
cltd
mov
mov
add
lret
mov
cmp
pop
cmpsb
dec
mov
xorb
nop
sti
cltd
push
adc
push
jge
incb
push
leave
sub
scas
mov
aam
repnz
sub
movl
aam
insl
fldl
cli
inc
mulb
loope
cs
mov
dec
pop
cltd
test
dec
outsb
push
inc
xchg
sbb
repnz
data16
data16
push
pop
loop
cwtl
jo
scas
add
dec
scas
std
sub
pop
pop
jbe
test
sub
mov
push
cli
mov
ljmp
lods
jno
mov
mov
pop
sbb
inc
jno
sarb
and
cwtl
sub
in
arpl
testb
shrb
sbb
out
es
subl
pop
mov
cmc
divl
sbb
int
popa
jb
and
sub
lods
cmpsl
adc
mov
sub
pop
lret
xor
jp
add
jo
xchg
mov
pop
push
sbb
ss
fildll
xchg
in
int
icebp
mov
test
fs
pop
mov
scas
pop
sbb
mov
xor
cmp
jb
jecxz
mov
ljmp
jo
hlt
jecxz
jne
xchg
inc
and
out
fisubrl
push
sbb
mov
enter
mov
sub
ja
push
cmp
je
gs
mov
sub
pop
notl
das
pop
dec
push
xchg
lcall
dec
sub
sub
fstl
mov
fnstsw
lcall
mov
xchg
clc
jns
mov
xor
divb
sahf
sub
loop
inc
push
xor
std
clc
je
imull
fs
notb
jo
and
mov
icebp
push
test
decl
int
mov
dec
pop
mov
sbb
andl
shrl
jge
xchg
mov
jno
icebp
repz
sbb
push
mov
mov
repnz
jl
pop
add
mov
scas
cmc
mov
pop
push
dec
arpl
sbb
add
dec
dec
ja
stos
mov
fcoml
cmp
into
insb
jns
movsl
iret
and
jo
jne
mov
mov
xchg
aad
lea
addr16
cmp
jnp
in
cwtl
icebp
js
jno
or
adc
popw
jge
js
shlb
sub
sub
mov
pop
mull
jnp
xor
mov
push
jno
pushl
out
fdivrs
stos
xorb
lds
aad
fisubrl
test
sarb
mov
sbb
mov
je
cmc
mov
jno
dec
adc
into
add
imul
jbe
mov
mov
pop
jp
daa
adc
je
xchg
cmp
test
sbb
jp
movsl
push
sbb
xchg
lods
xor
mov
popf
lods
sbb
push
mov
jb
daa
repnz
xchg
loope
iret
xorb
aas
cs
xor
xor
xor
adc
iret
daa
repnz
jb
lret
xor
or
cld
mov
inc
and
dec
push
hlt
inc
movsl
push
pop
orb
pop
in
out
outsb
cmc
loop
lahf
ss
jae
aas
and
hlt
push
xor
push
pop
ret
daa
sbb
lret
repz
sbb
and
xchg
je
mov
out
test
sbb
push
scas
mov
repz
movsb
hlt
ljmp
sbb
inc
mov
jno
and
ja
cli
add
cmp
pusha
sub
mov
dec
icebp
fdivrl
in
push
movb
daa
imul
jns
and
mov
add
sbb
xor
sub
sub
mov
arpl
and
push
sbb
jle
add
or
rorl
push
cli
sub
lods
inc
sbb
aam
pop
repz
xor
sbb
loopne
pop
aad
or
movsb
sti
imul
adc
je
sbbb
jle
mov
pop
add
lods
scas
cmp
lods
out
inc
dec
jns
pop
daa
inc
fcoml
xor
jmp
xchg
jge
mov
dec
movsb
sbb
sub
hlt
push
ljmp
or
mov
sub
jae
jge
pop
inc
imul
cmpsl
mov
push
cmpb
cmp
les
dec
sti
cld
xchg
fwait
js
inc
cld
jbe
jns
orb
pop
mov
fsubrs
mov
dec
add
ret
dec
aas
mov
xorb
int
and
mov
sbb
mov
inc
cmpsb
lret
jp
jb
out
mov
flds
cmpl
cmp
sti
mov
jo
aaa
adc
out
roll
lods
xlat
mov
jecxz
loopne
cmp
lea
inc
dec
or
test
cld
cmpsb
fiaddl
push
sti
fidivrs
daa
out
push
ljmp
adc
push
and
add
mov
repnz
aam
jo
dec
jge
add
sub
sbb
push
les
sub
scas
enter
out
push
int
sbb
dec
aam
push
fldpi
in
je
push
loope
iret
cs
adc
or
cld
js
push
adc
das
pushl
pminsw
dec
add
dec
add
stos
aaa
imul
icebp
hlt
cs
pop
daa
insl
jbe
pop
mov
xchg
push
popf
push
jg
jbe
shrb
xor
jo
lods
nop
cmp
daa
jo
popf
xor
out
add
popf
xchg
lock
aam
mov
pop
inc
pop
cmp
jne
xor
mov
js
pop
popa
xchg
pushf
ss
flds
imul
push
inc
jns
inc
mov
sub
mov
movsb
mov
loop
xchg
adc
ret
jle
add
out
iret
dec
das
hlt
jo
dec
in
push
lods
movsl
xchg
cmp
mov
in
xor
cs
mov
sbb
roll
stos
out
cmpsb
inc
nop
stos
pop
lahf
add
lods
clc
lds
pop
pop
push
popf
push
jnp
shlb
inc
pop
mov
ja
clc
push
add
addr16
push
pop
repz
clc
jle
aad
sub
outsl
cld
cmp
pop
and
lea
push
jns
aam
jae
jmp
and
add
inc
mov
scas
jne
cmp
xor
sysexit
ljmp
and
adc
aad
fidivs
jmp
in
arpl
sub
rolb
push
push
rcrl
repnz
pop
or
xchg
adc
neg
and
add
jle
push
push
outsl
inc
je
mov
in
lods
ljmp
fcoms
in
test
inc
jae
push
jns
lock
xchg
mov
movd
push
clc
pop
mov
out
insb
mov
test
add
lret
jae
sbb
mov
int
xchg
js
xchg
fldenv
pushf
jae
xchg
mov
jl
cmp
in
add
mov
cltd
jne
mov
lret
in
jae
inc
push
out
xorb
push
xor
lea
ss
fimuls
pop
lods
mov
test
fnstcw
pop
adc
aam
stos
push
pop
add
cmc
pop
add
in
jl
inc
adc
ret
popf
pop
add
sarl
cmc
out
add
push
add
subb
imul
add
fnstenv
xchg
jno
push
sub
cld
dec
je
inc
pop
insb
jnp
les
sub
mov
pop
dec
push
jno
add
cs
dec
rolb
aam
sbb
mov
dec
mov
xlat
testl
sub
out
jb
repz
mov
xor
lahf
lahf
int
push
sbb
fimuls
data16
and
jo
les
pop
movsb
mov
icebp
push
addr16
push
and
mov
xchg
shll
seta
daa
repz
pop
fsubr
inc
push
dec
jo
mov
dec
mov
lds
push
fldenv
push
add
or
xlat
enter
jae
pop
xchg
iret
daa
dec
add
repnz
dec
idiv
mov
mov
clc
mov
ret
sti
insl
jp
ja
jmp
repnz
hlt
mov
cmpsl
loop
inc
jecxz
clc
push
in
jbe
lock
daa
ss
jne
in
xor
xchg
jp
lock
nop
cld
js
ret
out
adc
dec
mov
mov
dec
sub
lock
jp
loope
sub
mov
shll
xchg
add
in
leave
sub
and
push
nop
insb
add
incl
daa
jbe
add
inc
sbb
sub
cld
push
push
out
cmpsl
mov
jecxz
jbe
mov
mov
and
jns
lahf
cwtl
and
test
adc
fstl
push
xor
add
xor
loope
mov
xor
lods
jl
jns
jle
shlb
jbe
inc
scas
mov
xor
sbb
jne
jo
fprem1
pop
loop
scas
cmp
jae
add
dec
sbb
or
pop
jne
inc
sub
sub
aas
xchg
mov
scas
mov
pop
xor
les
add
pusha
in
aam
push
mov
cld
fistpll
mov
add
fisubl
jecxz
movb
fadds
jmp
dec
out
cmp
fwait
fs
aaa
push
into
decb
clc
or
dec
fstpt
cmpsb
into
dec
mov
call
jb
push
in
add
sub
lds
xor
ficompl
insl
bswap
sub
popa
lods
stos
xchg
clc
cmpsb
stos
aas
popa
loop
xchg
rcll
dec
movsl
and
faddl
sbb
sub
pop
sbb
xchg
mov
pop
cld
or
xor
adc
into
xchg
gs
bound
or
ljmp
cmc
jbe
push
add
rorl
xchg
lea
ss
sahf
test
jne
push
pop
jnp
dec
jbe
cmp
nop
test
pop
mov
sbb
cld
and
lods
push
out
testl
sbb
push
cmp
inc
push
pop
cmc
int
in
vmovntps
add
xchg
fiadds
cmpsl
xchg
es
or
ds
std
nop
insb
ja
lods
or
inc
jne
jle
inc
inc
int
cmp
into
in
mov
aas
mov
push
pop
inc
js
inc
movsl
xchg
xchg
and
hlt
dec
jo
dec
add
bt
push
adc
inc
push
je
mov
hlt
popa
cmp
xor
dec
mov
insb
inc
orb
jbe
jg
ja
jns
cltd
inc
cwtl
add
aad
push
cld
mov
xchg
jns
xchg
bound
out
test
outsl
je
inc
into
push
in
inc
aad
jbe
dec
and
add
loope
test
ret
jno
nop
in
outsl
inc
ss
dec
movb
fdivs
test
cmp
arpl
jne
scas
bound
inc
mov
nop
pop
and
cli
popl
repnz
fdivrl
and
iret
out
scas
push
cmp
cli
inc
test
push
out
test
imul
mov
jno
mov
or
pop
insb
mov
clc
add
mov
pop
sub
cltd
hlt
ss
inc
ret
daa
inc
clc
repz
out
test
push
bound
adc
popf
bound
sbb
es
mov
push
aad
mov
fdivr
mov
pop
fldl
cmc
ficoml
xor
mov
aaa
and
mov
jae
popa
fnsave
xchg
jb
push
or
cli
jno
mov
clc
or
mov
dec
mov
xorl
xchg
outsb
jbe
jno
mov
push
insb
arpl
roll
sar
jo
div
xchg
mov
push
xchg
jmp
arpl
outsb
jae
sub
adc
cmc
stos
and
push
push
and
xor
shlb
hlt
js
js
jecxz
loop
xchg
icebp
add
addr16
inc
aas
push
ds
or
out
ja
push
clc
sahf
add
push
add
pop
mov
lret
test
add
lds
ret
or
scas
arpl
xor
sub
push
sbbl
das
adc
pop
cs
mov
lods
cmc
adc
pop
nop
jb
jl
cmp
ja
mov
mov
add
mov
dec
add
cmp
xorb
das
add
bound
out
cli
hlt
out
inc
divl
xor
adc
rorb
out
push
dec
add
push
cmp
popf
push
mov
icebp
incl
sbb
cmp
jnp
aas
or
add
jl
dec
inc
sbb
cmp
fs
fistpll
cmpsb
dec
add
je
test
inc
orl
in
cmpsb
mov
jecxz
add
pop
insb
das
clc
adc
jae
lock
push
add
or
pop
add
jb
testl
inc
andl
add
movl
aas
repz
add
icebp
int
adc
addb
jo
adc
cs
roll
addb
mov
adc
sub
adc
push
xchg
push
cli
clc
add
pop
or
pusha
mov
pop
dec
or
pop
hlt
and
mov
ja
shlb
popa
in
xor
add
push
xor
push
xchg
ss
mov
aad
lret
bound
bound
push
sbb
scas
jnp
data16
mov
clc
lods
rclb
sub
mov
cli
jmp
adc
adc
jbe
rcll
inc
mov
xrelease
xchg
sub
push
jae
pop
or
and
sbb
pop
jnp
je
outsl
repnz
mov
out
scas
fnstenv
jmp
lcall
cmp
jle
xlat
sub
pop
mov
add
shrl
xor
sbb
pop
xchg
dec
ss
mov
mov
xchg
mov
es
adc
mov
mov
ja
imul
aas
es
adc
shll
add
ja
ljmp
add
testl
jbe
cld
pop
loop
ljmp
xorb
aam
pop
repz
pop
insb
divl
cwtl
pop
shlb
fwait
es
xor
cltd
push
or
pop
inc
or
jo
xor
icebp
pop
into
daa
xor
pop
sub
cvtps2pi
mov
pop
xchg
loopne
or
cwtl
mov
aaa
push
ja
in
stc
xchg
mov
notl
ss
push
jbe
mov
notb
pop
cli
jo
jl
das
lcall
mov
pop
xchg
mov
pop
ficomps
xchg
jbe
inc
push
aam
lock
dec
imul
repnz
mov
cmpsb
loop
shl
add
inc
ljmp
pop
fucom
or
cld
pusha
cs
cld
mov
mov
inc
jmp
bound
jbe
cmpsl
enter
sete
shlb
cmp
ljmp
push
fstl
test
push
jp
cld
loop
dec
jle
mov
pop
popf
in
xchg
cld
dec
repz
jg
pushf
jb
lods
dec
inc
jmp
adc
cmp
div
sbb
into
sahf
in
mov
aaa
scas
xchg
cmpsb
pop
inc
mov
fnstsw
xor
jmp
loop
insb
cmpsb
sbb
clc
or
mov
ljmp
into
loopne
push
push
punpckhwd
popa
mov
movsl
cltd
inc
inc
cmpsb
push
sbb
ljmp
dec
mov
test
js,pt
cld
inc
sbb
daa
cltd
push
mov
das
jnp
or
push
out
mov
aad
mov
out
hlt
xor
mov
lret
mov
test
jnp
andb
dec
ret
lahf
cmp
cld
dec
imul
pop
inc
xor
push
jbe
mov
mov
mov
adc
loopne
popa
stos
adc
cmpsl
push
ret
out
push
orl
and
daa
idiv
subb
dec
pop
mov
fsubrs
or
jl
lods
ds
lods
cltd
scas
fwait
mov
ljmp
mov
mov
sub
xchg
inc
jecxz
pop
xor
sbb
mov
mov
movb
loope
lahf
sti
mov
loope
bound
fimull
enter
divl
sti
js
adc
jl
mov
scas
ret
cld
mov
cmpsl
js
fnstsw
push
daa
int
fs
aaa
jp
mov
call
ja
cmp
or
daa
and
mov
notl
and
daa
es
hlt
out
js
jb
jns
or
mov
das
shrl
jnp
xor
cs
push
xor
outsb
lods
mov
mov
lods
in
aam
jnp
or
xchg
repz
sti
pop
int
push
or
fbstp
clc
mov
jo
ja
cmp
cli
inc
jbe
ja
inc
icebp
testb
push
pusha
mov
jle
jecxz
je
aad
inc
adc
ljmp
cmp
das
jnp
rcll
pop
push
add
xor
clc
jne
scas
pop
cmp
adc
cmp
in
test
outsb
mov
mov
sarb
ds
sbb
or
in
xchg
or
cmc
jae
xchg
scas
add
mov
jne
stos
dec
hlt
push
inc
negb
cld
fdivrs
ja
scas
jecxz
sbb
arpl
dec
ret
xchg
lret
outsl
pop
mov
loop
inc
dec
rclb
ja
scas
mov
ds
shr
xchg
data16
mov
daa
ljmp
mov
stos
add
mov
jmp
or
cmp
cmp
add
jbe
mov
or
insb
mov
out
sub
testl
xor
xlat
adc
test
subb
andl
or
cmp
lods
js
js
test
pop
cmpsl
daa
clc
cmp
cmc
gs
pop
stos
jmp
mov
inc
push
and
cmp
xchg
paddusw
pop
push
mov
in
dec
out
sub
sti
or
push
inc
popa
idivl
shlb
repz
xchg
cmp
cmpsl
js
adc
test
push
scas
insb
cmpsb
pop
test
out
imul
cmp
bound
mov
sbb
adc
inc
sub
nop
jl
pop
add
inc
sub
cwtl
sti
mov
pop
sarb
push
and
test
js
or
or
add
std
sub
fsubs
jecxz
sub
pop
icebp
push
mov
sbb
testl
mov
lcall
out
out
shrl
hlt
icebp
cmpb
insb
loope
mov
jmp
add
dec
add
repz
push
cli
mov
popa
pop
jp
xor
les
loopne
icebp
fs
hlt
dec
cmp
lds
stos
dec
mov
inc
mov
inc
repnz
push
test
jb
filds
insb
lock
hlt
xor
test
mov
xor
ret
aas
sbb
mov
test
in
fidivrl
jmp
adc
push
call
or
hlt
push
push
mov
add
sbb
adcl
adc
dec
pop
inc
iret
arpl
lock
jb
xorl
jecxz
push
xchg
insb
and
ja
jecxz
push
mov
pop
mov
push
xlat
jp
ret
pop
in
jp
xchg
ds
loope
shll
jecxz
lock
cmp
lcall
mov
push
out
in
pop
pop
adc
fmuls
mov
aaa
cmpsl
enter
jg
and
pop
in
mov
mov
ljmp
jb
clc
xchg
dec
push
jecxz
or
inc
nop
ret
les
cmpsl
sti
adc
pop
out
cwtl
sub
inc
mov
repz
sub
xor
mov
push
lret
xchg
lods
inc
push
in
daa
jne
xchg
jge
push
add
jecxz
dec
xchg
lds
aaa
or
jne
xchg
jecxz
out
dec
inc
stos
add
testl
shl
and
testb
mov
and
imul
daa
stos
sub
aas
test
mov
xchg
divl
mov
aas
jle
xchg
pop
jl
psadbw
adc
clc
cwtl
lret
repz
push
mov
inc
negb
shr
jl
jmp
sub
mov
inc
sbb
adc
mov
mov
push
pop
pop
mov
fs
inc
adc
mov
cmp
test
mov
sti
clc
scas
jo
mov
xor
inc
js
lret
pop
sbb
xor
js
push
mov
mov
imulb
mov
aaa
and
add
add
es
rcll
sarb
pop
rcl
adc
call
dec
push
fisubrl
xchg
inc
jnp
das
ret
or
dec
push
mov
xchg
jle
push
enter
cld
test
imulb
hlt
xchg
dec
sub
notb
in
notl
push
dec
imul
cltd
scas
xchg
loopne
jbe
jns
mov
adc
mov
jno
inc
call
mov
aas
ljmp
xor
xchg
popa
push
icebp
shll
dec
dec
ja
adc
imull
push
push
xchg
mov
rorl
add
enter
lock
push
clc
pop
les
adc
iret
xchg
notb
shll
mov
fidivs
leave
dec
ja
aaa
hlt
pop
daa
jo
into
dec
sub
jle
push
jae
test
insl
add
fldl
add
fcomps
aad
xor
push
nop
push
into
out
pop
fildll
dec
fisubrl
sub
incb
orb
testb
xor
js
rcl
in
into
int
pop
push
push
testb
cmpsb
fisubs
pop
cli
xor
jp
mov
push
aam
mov
cmp
dec
mov
fdivrs
shrd
adc
pop
lret
pop
cmpsl
jp
mov
pop
mov
sbb
stos
out
xor
mov
into
cmp
xchg
jbe
cs
cwtl
popf
das
cmpsb
fisubrs
dec
mul
lock
add
ljmp
inc
enter
inc
clc
in
hlt
dec
and
je
das
addr16
push
cltd
lahf
dec
jae
push
repz
lods
cmp
xchg
daa
dec
jmp
jle
cmpsl
into
mov
pop
hlt
pop
divps
cli
sub
mov
dec
addr16
je
mov
lock
je
sbbl
daa
sub
aas
dec
cmp
mov
pop
mov
jno
xchg
aam
cmp
xor
cwtl
push
sub
int
mov
ja
cmpsl
or
xor
repz
jae
in
xor
lock
xor
xchg
in
mov
test
cmc
mov
aaa
cwtl
pop
xlat
lock
adc
js
sarb
mov
add
mov
jmp
push
or
and
cs
sub
mov
mov
cmp
jmp
sbb
test
dec
stos
ja
arpl
cwtl
push
inc
jp
cld
pause
cmp
push
inc
loopne
aad
test
xor
sbb
hlt
ljmp
adc
sti
lds
cld
test
idivl
inc
xlat
xchg
cmpsl
out
mov
ds
xor
fstl
stc
mov
adc
test
cld
ss
lahf
dec
jns
sbb
out
rorb
adc
inc
sub
fsubr
pop
push
and
push
push
push
nop
adc
mov
lds
xor
and
push
xorl
lret
xor
icebp
cmp
cmp
gs
sbb
xor
test
xchg
icebp
adc
push
and
push
sub
and
test
sub
mov
ss
sbb
pop
push
and
and
shlb
mov
sub
repnz
outsb
mov
mov
cmpsl
push
cmp
mov
sbb
and
sub
lock
cli
mov
jno
subb
add
mov
mov
cltd
sbb
scas
cld
mov
push
ja
sbb
lods
inc
imul
and
dec
push
pop
pop
clc
pop
daa
mov
push
test
xchg
js
push
aad
in
dec
xchg
and
lcall
clc
push
cli
xlat
dec
mov
jb
jecxz
dec
xor
dec
insb
sub
and
push
shlb
pop
dec
pop
jns
test
hlt
cmpsl
lods
out
stos
pop
sbbb
dec
and
push
aaa
or
mov
push
push
mov
fdivr
leave
and
hlt
adc
dec
aad
mov
jno
daa
push
mov
add
loopne
add
dec
xchg
icebp
ret
jg
addr16
push
sub
pusha
sbb
push
rorl
adc
inc
and
jge
pop
mov
js
ficomps
mov
lock
icebp
jp
mov
jno
jnp
push
mov
xchg
jbe
jmp
aam
into
scas
jno
mov
rcrl
mov
sub
add
jo
cmp
jle
push
test
dec
cli
jns
call
icebp
rorl
adcb
pop
jmp
mov
push
mov
ficoml
xchg
sub
mov
jg
test
outsb
push
outsl
aas
fisttpll
pop
lods
idiv
div
push
sub
ss
mov
mov
xchg
push
adc
out
cmc
imulb
adc
mov
pop
sti
jo
data16
xchg
xor
pslld
mov
mov
lock
pop
or
adc
rclb
icebp
add
mov
fnstcw
aad
jb
je
pop
sbb
push
test
cmp
and
mov
enter
mov
xchg
pop
pop
mov
outsl
pusha
or
imul
scas
in
dec
imul
push
jbe
shrl
xchg
andl
sbb
enter
sti
out
and
pop
roll
mov
jecxz
loop
arpl
bswap
cld
leave
inc
test
dec
cmp
shlb
push
jno
outsb
xor
mov
pop
dec
push
test
test
dec
lds
addr16
pop
cmp
and
shll
or
or
cmc
fmull
insb
ss
movsb
rclb
dec
fsubrp
xor
clc
loop
inc
inc
xor
mov
push
dec
nop
pop
test
loopne
shrl
xchg
or
pminsw
xchg
dec
neg
adc
leave
jbe
loop
mov
push
lret
push
pop
mov
stos
sbb
add
sbb
cs
mov
lahf
pop
push
and
decl
iret
adc
inc
push
cld
imul
out
add
jnp
and
push
push
xchg
inc
dec
and
pop
mov
pcmpgtd
repz
dec
push
pushf
pop
pop
nop
cmc
mov
stos
xor
or
loope
mov
rolb
divl
lods
adc
pop
push
push
cmp
sbb
jg
push
mov
cmp
shrb
mov
lods
mov
arpl
cld
xchg
scas
nop
mov
aam
test
push
mov
cmpsl
dec
out
dec
mov
movsb
xor
cwtl
sbb
fcoml
scas
insl
sbbb
inc
mov
sub
or
psraw
jbe
flds
ds
mov
dec
fs
push
nop
cli
or
xor
ss
pop
sub
sbb
xchg
aam
cmpsb
addr16
jle
inc
in
mov
test
negb
add
jo
hlt
or
lods
inc
dec
popf
pop
mov
mov
fisttps
pop
lods
notb
out
inc
in
adc
mov
mov
clc
fsts
cmp
fwait
mov
scas
ljmp
repnz
cmpsl
js
cmp
test
pop
es
out
cmp
bound
xchg
add
inc
ss
mov
mov
or
ja
jge
cli
sub
lcall
test
mov
lret
inc
mov
fimuls
cmp
mov
pop
ds
ss
or
rol
jae
cli
push
scas
push
or
iret
pop
lods
lods
and
jg
scas
push
adc
jle
jnp
cld
or
mov
dec
push
pop
decl
inc
iret
mov
lcall
pushl
inc
and
xchg
dec
jecxz
jne
mov
sub
sbb
push
out
cmp
loope
rclb
div
dec
cld
xor
test
daa
mov
mov
xlat
leave
aaa
add
xor
je
lds
into
xlat
push
mov
push
idiv
jp
movsl
pusha
lea
add
mov
clc
sbb
out
push
andb
out
pop
or
sbb
inc
jmp
into
cmpl
lods
cli
mov
repnz
mov
cmp
jl
ja
sbb
imul
adc
mov
jge
fdivrs
sbb
lods
pop
cmc
loopne
cmp
dec
sub
andb
mov
lcall
std
scas
lret
out
leave
aaa
add
xor
js
jnp
or
xor
mov
dec
icebp
mov
lock
repz
jp
fucomp
push
mov
mov
repnz
scas
negl
xchg
rcrl
pop
jno
mov
cmpsl
or
mov
test
lods
cmp
mov
mov
test
xor
stc
jns
lock
cmpsl
jo
test
cld
add
cmp
lods
jge
imul
out
xor
xor
push
jo
data16
xor
inc
lret
xor
jge
mov
jmp
mov
ja
mov
adc
sub
std
jp,pt
loop
and
lcall
mov
jns
pop
cli
icebp
repz
push
loopne
sub
out
mov
mov
add
cmp
pop
add
pop
mov
ss
je
fsqrt
jp
pop
loope
dec
ficoms
imul
mov
pop
xchg
pop
xor
jo
cwtl
icebp
aaa
xchg
icebp
fsubrs
inc
push
jp
and
mov
add
clc
push
notl
cmp
bound
push
icebp
lahf
pop
repnz
cmp
bnd
xlat
movsl
mov
pop
jge
or
cld
adc
push
sbb
xor
adc
out
fcompl
xor
jns
mov
inc
jo
dec
xchg
ja
pop
jmp
popf
mov
push
pop
nop
movsb
push
out
push
insb
adc
xor
test
and
jbe
or
push
fdivl
xor
push
movsl
pop
icebp
xchg
xchg
inc
xchg
jmp
push
movsl
fwait
icebp
xchg
fiaddl
test
imul
jg
pop
pop
fwait
inc
lret
popa
push
insb
mov
icebp
push
movsl
push
in
pop
and
adc
mov
xor
push
push
xchg
xchg
push
push
out
lcall
lock
push
inc
divb
clc
lret
mov
sub
lock
ja
sub
xor
std
or
cmp
lret
lods
or
cmc
fnstcw
pop
lcall
and
jg
lret
jbe
xor
cltd
sbb
je
in
inc
repnz
mov
sub
push
push
pop
lret
or
push
clc
std
ss
jg
jae
push
cmpsl
aas
push
adc
daa
dec
insb
mov
mov
ds
xor
icebp
test
imull
in
mov
lea
lret
pop
or
sub
adc
sbb
push
push
mov
pop
int
adc
cmp
je
pop
pop
or
add
test
cmp
pop
adc
xchg
pop
push
daa
into
push
call
loop
mov
add
lods
es
xor
lods
lahf
adc
sbb
out
les
xchg
enter
dec
ljmp
in
imul
adc
add
jo
int3
lock
hlt
adc
xor
imul
add
add
imul
ljmp
fs
rclb
divb
mov
inc
mov
sahf
rcrb
ror
adc
cmpsl
or
xchg
adc
das
fistl
mov
ja
adc
pop
les
scas
and
clc
cmp
lds
mov
cmp
xchg
add
scas
into
imul
pop
mov
inc
jecxz
mov
sar
in
repnz
xor
rol
and
push
loopne
xchg
out
pop
mov
and
popa
out
insb
mov
mov
lea
pop
aas
into
dec
jp
inc
sar
cmp
or
out
sbb
mov
hlt
dec
push
je
movsb
into
xor
testb
mov
jge
fbld
push
idivl
ljmp
push
pop
push
scas
dec
popa
add
xchg
pop
mov
push
jp
subl
push
in
scas
fistpl
adc
and
mov
add
jo
ja
clc
mov
cmpsl
mov
xchg
decl
pop
movsb
dec
lods
push
cmpsb
mov
jbe
insb
push
mov
inc
jmp
or
push
xchg
daa
add
push
sbb
dec
sub
test
add
mov
jnp
ficoml
sbb
dec
jp
and
xor
mov
repz
push
cld
out
and
addr16
in
test
lods
push
ja
jno
sbb
xchg
inc
jge
push
xor
push
xchg
dec
daa
lods
jmp
iret
ljmp
rcrl
cwtl
sub
out
mov
fcmove
ja
shll
hlt
rorl
int3
pop
dec
pop
jo
mov
cwtl
sbb
sti
cld
and
dec
and
xor
mov
sub
std
sub
popa
xchg
push
mov
push
dec
loope
pop
sti
loop
jno
jl
or
loopne
pop
loop
int3
dec
mov
test
jo
adc
or
stos
push
fwait
into
mov
popf
cmp
nop
rcr
push
xor
jne
adc
and
hlt
pop
and
enter
adc
jmp
cs
push
adc
es
mov
adc
shrl
cmp
lock
aam
push
and
pusha
dec
jbe
mov
add
push
test
aad
xchg
jg
cli
aad
add
popa
in
aad
or
add
js
sbbb
ret
das
push
popf
dec
fucomp
test
cwtl
ja
add
xchg
cmp
mov
sub
adc
js
jmp
orb
ss
ja
aad
pop
dec
aad
add
in
cmc
jbe
ja
je
flds
movsl
int3
mov
sub
hlt
stos
mov
push
sbb
jae
push
and
mov
mov
cld
mov
lea
cmp
sbb
in
insb
icebp
pop
mov
out
test
xchg
xchg
aad
xor
sarl
sub
xchg
dec
jbe
insl
push
enter
cmp
push
mov
sbb
into
fisttpll
mov
inc
jg
inc
xchg
into
xor
scas
jb
push
cld
mov
lcall
jns
xchg
mov
push
enter
xchg
flds
mull
call
or
ljmp
cmpsb
cmp
adc
mov
mov
stos
stos
shr
push
or
mov
jno
int
loopne,pt
les
dec
pusha
imul
mov
push
ds
xlat
test
or
stos
out
fs
adc
sti
push
mov
test
call
negb
push
cmpsb
jne,pn
dec
xchg
pop
enter
ret
push
das
mov
enter
inc
mov
ss
mov
pop
lret
xchg
div
fwait
iret
and
jl
aaa
push
add
es
fbstp
test
xchg
ss
sbbl
ja
add
and
mov
mov
mov
sbb
inc
aaa
test
mov
scas
pop
cld
stc
add
mov
lea
adc
jmp
and
push
xchg
inc
data16
xchg
mov
pop
cmp
insl
jb
xor
xor
test
sub
lods
dec
test
mov
cmp
sbb
cmpsl
imul
scas
mov
or
cli
pop
mov
lret
push
mov
or
jp
jle
leave
push
gs
and
shlb
or
inc
mov
cli
cmp
lret
add
adc
xor
dec
int
mov
fldenv
add
je
dec
adc
pop
and
xchg
mov
mov
adc
idiv
add
loop
push
push
sbbb
popa
fcmovnu
sahf
adc
cmc
xchg
sbb
sbb
icebp
adc
or
repnz
cmp
cmp
mov
or
fs
movsb
stos
fidivl
push
adc
sbb
outsl
xlat
adc
sbb
lods
ljmp
andb
ja
ss
mov
and
cmc
cmp
adc
clc
dec
sub
push
add
les
add
sbb
insl
lds
and
xchg
adc
call
sbb
dec
notb
not
inc
aam
and
call
xor
and
cmpsl
or
fisttpl
push
iret
xor
out
pop
repz
cmpsb
push
inc
xchg
repz
in
sbbl
dec
pop
imul
gs
faddp
ficoms
jno
xlat
xor
daa
mov
jno
sbb
cld
insb
out
cltd
pop
pop
inc
icebp
lods
jle
mov
call
cmc
add
inc
pop
test
jecxz
mov
aad
das
mov
lods
repnz
mov
inc
daa
sub
xor
push
sbbl
mov
cmc
push
sbb
xor
inc
jbe
push
insl
xchg
test
jne
sbb
adc
loopne
sub
je
add
test
mov
rorb
movb
inc
ss
addr16
sbb
dec
and
jbe
xor
in
clc
lock
sbb
and
cld
jmp
mov
iret
mov
sbb
mov
push
mov
loopne
incb
adc
dec
push
int
dec
mov
data16
xchg
sub
sti
movsl
pop
xor
push
je
aam
imul
and
test
cwtl
scas
mov
pop
stos
push
pop
mov
lods
cmc
ret
repz
push
outsl
mov
mov
push
dec
push
je
lcall
mov
nop
insb
jg
xor
shlb
push
xchg
sbb
bswap
nop
lahf
imul
fs
cmc
push
push
pop
push
aad
rol
xchg
and
popa
mov
adc
sub
xchg
popf
shrl
sbb
jg,pt
push
and
les
or
testb
pop
push
popf
fcoms
hlt
in
mov
rol
movsl
pushf
int
in
pop
mov
mov
fsubrs
je
push
add
sub
inc
push
outsb
aad
pop
cmp
mov
cltd
neg
scas
cmp
lock
mull
jb
pop
icebp
xor
scas
jnp
ret
enter
movsl
pop
insl
or
xlat
insb
mov
jb
or
inc
test
enter
out
clc
scas
dec
sbb
and
jmp
mov
mov
arpl
push
lcall
xor
mov
cmp
mov
notl
dec
mov
push
int
clc
sbb
sbb
add
stos
mulb
cmpsl
mov
repz
xor
mov
bound
jne
inc
jae
je
hlt
sahf
nop
inc
inc
xchg
cmp
xchg
push
jo
jns
out
iret
ss
js
push
testl
aam
stos
and
xchg
mov
sbb
movsb
push
or
mov
push
and
pushl
mov
popf
pop
mov
sub
and
gs
adc
xor
iret
push
xchg
insb
push
scas
js
hlt
sbb
sbb
addr16
ficoms
shlb
lahf
nop
dec
imulb
vmwrite
cmpb
fnstenv
xchg
test
jmp
or
push
push
lahf
scas
pushl
sbb
adcl
sbb
mov
pop
lahf
or
push
cmovbe
lahf
xchg
imul
aad
sub
jb
mov
adc
cmp
mov
notl
test
mov
movsb
shl
and
xor
mov
sub
mov
xchg
mov
icebp
mov
loopne
inc
leave
xchg
push
notl
pop
mov
pop
and
shl
lods
mov
push
aas
test
add
lahf
push
fs
inc
or
xchg
pop
pushf
cmp
sub
aad
andl
paddusw
inc
outsb
adc
push
inc
pop
jo
es
jmp
hlt
xchg
in
xchg
jnp
aas
xchg
daa
mov
repnz
xor
cmpsb
or
out
ss
sbb
sbb
jmp
cmp
mov
mov
movsb
fstpl
cld
rcll
jae
xor
cmpsb
push
sbb
sub
and
clc
lods
fidivrl
daa
popf
pushf
orb
jns
cld
mov
inc
in
dec
mov
cltd
xor
notb
mov
repz
leave
in
das
idivl
lahf
mov
add
loopne
xorb
test
jno
add
adc
cmc
lock
jb
ja
mov
mov
daa
test
cmp
adc
into
jl
lods
mov
jp
jmp
pop
andl
ja
pop
mov
jecxz
addb
pop
lods
lea
and
into
push
adc
dec
in
pop
cmp
inc
imul
cli
mov
js
mov
jnp
das
stos
push
ljmp
shll
dec
adc
je
xchg
fcmovb
loop
lret
ds
movsb
test
shrb
inc
sarb
sub
pop
rcll
loope
mov
sti
adc
insb
scas
cld
push
test
mov
mov
xor
lret
jnp
repnz
sub
loope
add
push
sub
std
dec
stos
sub
int
pusha
push
pop
lcall
inc
stc
jbe
bound
mov
xor
repnz
xor
xorb
push
mov
pop
pop
sbb
fwait
test
sti
iret
cld
shll
adc
jge
jb
dec
jp
icebp
pop
fs
add
sbb
and
popf
test
rolb
mov
cwtl
mov
add
push
xchg
int3
stos
test
cltd
das
insl
jle
fisubrl
jne
icebp
mov
push
ja
into
dec
mov
xor
repz
jmp
loopne
mov
xor
sbb
jmp
daa
xchg
mov
out
adcl
test
jmp
xchg
cmovns
push
cmpsl
adc
shlb
dec
adcl
pop
or
xchg
leave
repz
fld
es
rcll
add
hlt
cmp
xor
jge
xor
mov
lea
pop
dec
loope
mov
cmpsb
xchg
jle
pop
mov
mov
movsl
lcall
jne
jmp
mov
adc
jl
fldcw
add
sti
push
inc
mov
test
push
pop
push
adc
lods
jo
mov
inc
pop
xor
mov
out
es
cli
jno
xchg
addr16
data16
pop
pop
xchg
sub
xorl
adc
js
leave
testb
push
dec
xor
ss
out
gs
push
cli
sbb
mov
into
sub
ret
mov
dec
popa
xor
cmp
push
cs
adcb
gs
inc
jbe
push
loope
mov
gs
push
push
loope
jnp
dec
mov
insl
xor
out
dec
into
das
pop
push
outsl
inc
dec
cmpsl
xor
xlat
arpl
pop
mov
mov
inc
mov
adc
outsb
clc
jns
add
rorb
mov
mov
push
ja
ja
push
lock
loopne
fidivl
cwtl
inc
xchg
sub
ds
sub
sbb
insl
pop
xor
lods
std
xchg
sbb
cmp
sbb
add
add
test
mov
mov
insb
push
xchg
daa
xorb
adc
or
adc
jl
or
push
and
pusha
inc
lods
xchg
pushf
pop
shlb
fcomip
cmpsl
or
adc
push
mov
xor
jne
push
sbb
scas
inc
ret
push
pop
rorl
dec
pop
pop
and
lock
clc
ss
rorb
in
js
cltd
nop
pop
cld
insl
lahf
xchg
dec
jae
sbb
mov
mov
mov
pusha
ds
sarl
ret
xchg
lods
and
and
popa
test
or
movb
push
pop
adc
or
cmp
call
push
mov
adc
in
iret
mov
pmulhuw
fstps
daa
aad
sbb
mov
xor
and
fmuls
adc
in
xor
mov
repnz
subl
scas
aam
inc
rcll
ret
out
leave
cmp
adc
pop
js
shlb
out
mov
rcpps
cmp
in
and
ror
dec
dec
cmp
xor
rclb
xor
pop
jmp
adc
pop
add
ds
adc
add
cmp
pop
or
mov
mov
cwtl
cs
scas
inc
inc
pop
loope
nop
out
lock
mov
movl
mov
mov
repz
lcall
imul
std
out
dec
lds
ja
ss
sbb
lahf
std
test
xchg
in
int
cmp
or
das
add
cli
adcl
subl
mov
xlat
dec
scas
inc
insb
and
aas
push
lock
lahf
divb
mov
jne
aaa
pop
inc
fcomi
xor
add
lods
repz
adc
xchg
test
sarb
loopne
push
mov
rcrb
les
cmpb
test
push
ljmp
xor
fimull
clc
mov
sbb
xor
or
push
data16
cmp
jbe
push
and
xor
sbb
fldenv
inc
jbe
outsl
daa
negl
adc
stos
pop
or
out
test
and
jns
aas
dec
adc
aad
in
and
ss
xchg
aaa
pop
mov
addr16
loop
mov
cmp
xor
outsl
dec
mov
mov
xchg
inc
lds
mov
addl
add
out
and
andb
cmpsb
cwtl
js
cwtl
jne
pop
lea
xchg
scas
and
js
enter
lods
xor
mov
or
test
cmp
movsl
or
or
mov
call
test
aam
sub
stos
inc
sar
mov
es
imulb
je
xchg
inc
push
and
in
adc
cmpl
xor
fisubrs
jo
sbb
jne
mulb
cmpsl
mov
push
mov
pop
daa
xchg
cmpsl
into
adc
push
stc
and
fmuls
pop
push
mov
clc
in
cwtl
jbe
pop
adc
push
jo
jmp
mov
inc
cmp
and
pop
mov
js
push
out
in
jmp
pop
out
pop
inc
into
jmp
adc
sbb
pop
pop
cmp
adc
dec
add
insb
cs
sub
sub
stos
js
mov
jns
xor
mov
mov
es
jo
inc
mov
pop
mov
inc
mov
scas
push
fsts
ficoms
and
pop
push
ja
outsb
jnp
jmp
jne
sub
mov
movsl
popa
inc
inc
cmpsb
lahf
cld
clc
aam
jmp
movsl
push
lahf
jecxz
mov
inc
xor
push
sahf
mov
dec
inc
into
fbld
daa
outsl
into
lods
shlb
sbb
push
fsts
xor
sub
scas
or
mov
mov
adc
test
divl
mov
mov
out
es
add
ss
js
and
mov
push
std
cmpsb
dec
and
dec
ret
stos
hlt
arpl
aaa
cmpsl
test
call
bound
test
or
icebp
mov
xchg
push
ret
push
xor
lret
daa
mov
sti
into
dec
inc
push
in
out
mov
int
pop
stos
clc
adc
cmc
xchg
xlat
xchg
or
inc
adc
xchg
adc
pop
xor
ja
pop
cwtl
daa
mov
mov
add
mov
or
into
dec
xchg
fs
outsl
shl
test
xor
push
int3
stc
cmpsl
push
enter
ja
ret
dec
and
insb
mov
mov
lahf
adc
les
and
fdivs
mov
nop
scas
jae
pop
pop
and
dec
xor
ja
enter
pop
mov
inc
pop
xor
out
push
ljmp
adc
inc
add
fldt
stc
outsb
inc
jns
cli
daa
mov
jne
xchg
dec
xchg
sbb
shrl
dec
inc
push
lds
dec
aad
int
fwait
pop
js
cmp
xor
push
cmp
lds
cmp
into
clc
leave
roll
xchg
pop
push
pusha
aad
imul
jb
shrl
fidivrs
mov
insl
mov
mov
add
mov
mov
mov
jae
fsts
push
jno
ja
clc
pop
add
or
or
push
aaa
loop
adc
int
jmp
dec
idivb
push
mov
xlat
sbb
lock
push
and
jns
iret
and
ror
cmp
dec
cmp
ss
jp
call
cmc
push
addr16
xlat
and
adc
mov
and
popl
ja
jb
popa
mov
test
push
xchg
shl
cmpsl
jl
aaa
out
cld
cmpsb
xchg
test
push
cmpsl
or
stos
pop
inc
fst
sahf
stc
in
mov
pop
jne
dec
jns
decb
inc
lea
cmp
clc
cmp
outsb
mov
daa
shl
cwtl
pushf
ja
loope
das
xor
sub
push
push
and
xor
and
push
pop
xor
add
inc
cmp
jo
and
push
sub
mov
xchg
out
sub
jbe
push
sub
push
pop
sbb
into
cld
mov
sbb
xchg
mov
push
push
cmc
out
and
and
gs
push
aaa
test
sbb
inc
les
mov
cmpl
pop
dec
adc
pop
inc
stc
shl
pop
push
adc
jbe
mov
aad
pop
xchg
push
lcall
and
cmp
lods
push
sub
movsb
dec
push
xchg
mov
cs
frstor
imul
insb
icebp
lock
sub
data16
iret
jns
or
push
sbb
into
push
mov
aaa
cmp
xor
loopne,pn
lods
jae
or
sub
lds
ds
nop
ror
negl
push
call
cs
iret
lods
and
not
mov
sub
mov
lock
js
adc
mov
mov
out
nop
loop
fmuls
jnp
pushf
inc
sarb
sbb
nop
cmpsl
lds
imull
scas
xchg
mov
pop
test
push
jbe
push
stc
int
out
in
xchg
daa
scas
loopne
sti
js
cld
mov
xchg
shll
in
bound
arpl
mov
fcmovu
and
stc
mov
sbb
or
sub
push
mov
cmp
cltd
sub
inc
pop
fcoms
out
stc
leave
popf
imul
xchg
push
pop
cmp
jb
mov
icebp
movsb
dec
adc
cmp
pushf
int
icebp
cwtl
clc
dec
add
ret
je
dec
mov
into
sub
in
xchg
daa
ret
arpl
fldl
sbb
aam
lock
mov
jnp
cmc
sub
mov
cmc
mov
ljmp
je
das
mov
push
sbb
jg
jo
sbb
mov
mov
jge
push
mov
sbb
cmp
test
test
dec
pop
sbb
push
xor
out
mov
pop
movsb
adc
push
daa
ja
xor
ss
sub
jb
dec
pop
pushf
cmp
dec
inc
ljmp
cmpsl
cmp
std
mov
jl
daa
sub
xchg
push
aas
loopne
mov
lahf
sbb
cld
leave
cmp
in
mov
inc
ss
jl
jns
mov
add
mov
bound
ss
push
stos
imul
mov
sub
movsl
mov
or
push
mov
or
pop
sbb
inc
mov
test
leave
int
jecxz
sbb
dec
fcompl
jne
aad
push
lods
aam
enter
cmc
jmp
pop
jo
fs
test
inc
mov
notb
add
mov
or
scas
je
dec
cltd
icebp
jg
adc
add
into
mov
dec
mov
mov
test
pop
fldcw
mov
push
add
repz
icebp
or
jmp
mov
sahf
adc
mov
das
icebp
jg
adc
sbb
mov
pop
rorb
push
xchg
lds
add
sbb
dec
and
jbe
lret
icebp
adc
fldt
sbb
roll
mov
xchg
mov
aad
cmc
ds
cmp
out
pop
notl
push
icebp
jnp
icebp
push
sbb
xchg
fdiv
je
sbb
push
icebp
jg
or
and
icebp
adc
out
dec
push
push
popf
pushl
pop
neg
lret
icebp
and
icebp
mov
in
mul
data16
mov
cwtl
mov
adc
sbb
mov
sbb
push
jae
sub
divl
outsb
cmp
fs
test
aam
jmp
push
mov
jmp
icebp
dec
lods
jbe
mov
mov
enter
aaa
jnp
mov
negl
das
adcb
daa
pop
lods
test
mov
popa
pop
lret
sbb
cld
jl
rorl
mov
fs
insl
daa
xor
dec
lods
pop
adc
pop
jnp
sub
pop
dec
add
or
sub
dec
and
xor
hlt
or
sbb
add
dec
loop
lock
adc
or
jae
cmc
out
pop
es
adc
dec
mov
add
mov
testl
repz
pop
jo
fwait
or
bnd
out
push
outsl
repnz
ret
ss
jnp
inc
je
add
mov
fdivp
push
orl
push
mov
idiv
mov
sub
adc
add
and
xor
cmc
adc
jo
frstor
mov
and
xor
and
pop
movsl
adc
pop
cmp
outsl
pop
sub
imul
sub
shl
std
xor
sbb
push
lahf
add
fisubs
mov
pusha
mov
mov
mov
jecxz
and
mov
negb
push
daa
pop
cli
decb
pop
sahf
orl
ss
jl
jno
xor
pop
scas
and
pop
push
or
lcall
adc
sbb
inc
repnz
movsl
notl
or
pop
and
push
pop
test
incl
in
rep
lods
movsb
dec
push
rolb
adc
pop
xor
inc
stos
add
or
test
movsl
pop
adc
icebp
adc
adc
pop
mov
jg
jno
or
jbe
mov
push
jmp
push
int
ja
add
push
or
cltd
sub
add
in
add
jmp
mov
int3
lock
decl
mov
aam
cld
sbb
push
jg
es
or
es
addl
or
lock
xchg
clc
hlt
ficoml
lcall
das
lock
sbb
imulb
add
cmc
shll
xor
add
pop
adc
pop
adc
ja
or
repnz
call
jne
and
mov
pop
jno
repnz
push
jno
scas
clc
leave
dec
sub
test
into
subb
adc
cmp
ja
or
pop
xor
daa
jns
pop
aaa
jne
divb
jo
jns
loop
sbb
lods
stos
adc
lods
ret
pop
insb
or
and
push
and
pop
xor
nop
dec
fsts
add
mov
sbb
pop
mov
cmp
in
adc
and
stos
es
pop
adc
not
pop
adc
push
mov
jp
daa
xchg
and
and
and
and
and
and
and
es
pop
xor
cmc
push
and
es
push
je
jo
and
sub
cmpl
adc
and
aad
jecxz
cli
and
xchg
ljmp
pop
xor
mov
scas
data16
push
lods
xor
hlt
jle
push
sbb
divb
mov
mov
mov
std
stc
pop
loope
bound
or
mov
inc
dec
retw
insb
adc
push
inc
sbb
notl
adc
sbb
mov
enter
pop
mov
cmpsl
sahf
xor
dec
out
fdivp
outsl
cld
mov
loope
fnstcw
mov
sar
scas
cmp
notb
push
ljmp
leave
add
adcb
push
pop
xor
aas
in
subl
bound
adc
jecxz
addr16
xchg
pop
or
scas
aad
jno
inc
sub
popa
or
xor
test
pminub
aas
push
lods
pop
inc
ljmp
xor
test
pop
arpl
dec
stos
hlt
push
add
insb
xchg
sub
in
jl
scas
les
in
leave
sbb
pop
fldcw
inc
xor
cld
out
pop
dec
jnp
das
cmp
sbb
out
pushf
out
lods
cmp
adc
xor
add
fdiv
icebp
ja
push
cmc
mov
xchg
clc
jo
sub
or
outsl
in
enter
or
sub
clc
imulb
xor
in
std
subb
add
outsl
sub
js
lcall
into
and
push
shl
lock
push
testb
xchg
faddl
jns
jge
addr16
cltd
mov
jne
clc
fdivrs
mov
xor
cmc
fsubs
enter
adc
adc
and
cltd
into
mov
mov
filds
fstpl
push
ljmp
loope
sbb
pop
push
mov
into
mov
fldcw
xchg
mov
mov
test
lock
mov
lcall
addl
test
mov
lock
adc
mov
sub
fwait
je
xor
cli
xorl
mov
movsl
push
push
xor
push
into
outsl
jb
mov
rclb
testl
push
loope
adc
jle
pop
inc
xor
negb
pop
adc
shrl
loope
dec
ficoml
cmp
lea
dec
decb
and
stos
daa
mov
push
cld
pop
insl
aam
scas
dec
scas
fcoml
rcl
cltd
push
insb
or
adc
in
hlt
clc
mov
imul
das
dec
int
inc
in
cmc
push
cmp
adc
sub
jg
ds
cmpsl
jno
nop
shll
outsb
cmp
adc
cwtl
push
fadds
int3
adc
mov
scas
rolb
in
cli
jno
clc
scas
cld
loopne
mov
push
and
icebp
push
pop
in
cmc
xchg
out
and
shrb
imul
cmpsb
in
mov
inc
addr16
mov
jg
addb
ja
or
ja
sets
adc
rclb
jne
mov
int3
pop
pop
pusha
push
fmull
pop
mov
and
inc
push
pusha
and
inc
mov
ja
mov
cmp
and
cmp
cs
push
adc
mov
xchg
pop
or
sub
and
scas
adc
out
adc
push
imul
sbb
mov
fistl
xchg
in
icebp
fldl2t
jg
mov
das
jl
push
fisubs
mov
int3
sarb
sbb
subb
inc
outsb
mov
repnz
cmc
and
shl
sub
mov
adc
mov
sbb
movsb
mov
int
xchg
pop
arpl
jle
fldcw
cld
mov
sarl
or
mov
xor
sub
xchg
dec
into
adc
lret
jg
xchg
xchg
adc
push
sub
xor
xchg
cwtl
testl
fwait
jge
cld
dec
jecxz
mov
cmp
xchg
sub
adc
adc
je
cmp
sbb
or
xor
and
mov
mov
daa
add
clc
shlb
cld
scas
loopne
mov
cmc
add
cmp
mov
dec
daa
jmp
and
mov
push
sub
ljmp
fldl
xor
scas
negb
lods
adc
push
mov
cmpsb
pusha
push
popf
mov
sbb
mov
insl
cmp
div
sub
sub
push
fsubs
adc
push
divl
and
mov
clc
test
cltd
or
push
mov
adc
push
aaa
inc
divb
ficoml
xor
ja
jne
xchg
cmpsl
divl
xor
aam
push
xor
or
mull
cltd
lock
push
mov
xor
mov
or
or
pop
je
fisubs
addr16
emms
push
push
sub
xor
in
dec
push
aas
lea
int
fldcw
xor
mov
fldcw
int
xchg
fs
ds
mov
sti
mov
ror
data16
into
sbb
jge
je
lock
cmp
sbb
pop
in
jno
in
loopne
sub
cs
jl
fsubp
mov
outsb
dec
test
dec
or
lock
mov
enter
outsb
imul
xlat
adc
loope
push
mov
xchg
lea
imull
dec
fldcw
pop
jecxz
mov
in
dec
fst
mov
cmp
jmp
stos
pop
sub
mov
movsb
mov
ljmp
mov
push
pop
icebp
xor
jns
jmp
call
mov
sbb
jl
notl
iret
cmp
push
xchg
inc
not
fistpll
sub
push
cmp
lods
xor
pop
movl
movsb
dec
add
call
mov
je
shrb
push
je
push
sbb
jae
ss
lds
cwtl
fsub
icebp
sub
push
aam
test
xor
push
adc
es
je
cmp
insb
xrelease
lock
pop
lds
insb
in
push
std
mov
jmp
mov
addr16
mov
pop
icebp
sahf
jl
das
clc
jp
cmp
into
jb
xchg
dec
mov
sub
test
mov
mov
xchg
jae
add
repnz
test
fsts
xor
or
repz
adc
mov
and
jl
dec
into
mov
in
lret
jmp
adc
jno
mov
xor
jl
out
fldenv
shll
cltd
cwtl
inc
std
inc
jo
cli
cmp
into
lock
dec
inc
pop
jg
add
repz
pop
andb
shrl
xchg
and
lcall
adc
into
je
jns
lods
push
iret
jecxz
lock
test
adc
add
jl
vmread
addr16
mov
ja
loope
and
xchg
push
pop
or
push
mov
lods
xchg
push
lea
cmpsl
pop
mov
mov
data16
and
daa
stos
addr16
popf
pop
and
fcompl
jae
insb
xor
xchg
sbb
jo
cli
aaa
lock
pop
daa
or
lods
jo
pop
sub
dec
icebp
xor
xchg
lahf
jecxz
cmp
jbe
sti
sub
xor
test
addr16
pop
loop
out
arpl
cmpsl
stos
lds
shrb
dec
or
jl
push
sbb
lahf
jno
dec
mov
dec
loope
aad
int3
dec
pop
mov
mov
ss
mov
sub
xor
sub
jns
pop
arpl
pop
pusha
cltd
or
jae
loop
iret
pop
push
mov
outsl
push
scas
into
pop
mov
jno
sbb
xor
fsubrs
fistpll
das
push
popa
insb
lret
repz
sub
mov
sbb
xchg
decl
add
xchg
ja
mov
cld
xchg
popa
adc
and
mov
mov
or
xchg
xchg
xor
testl
outsb
adc
clc
iret
inc
or
cmc
aad
repnz
lea
push
repnz
scas
inc
ljmp
xchg
pop
push
cmpsl
ret
sahf
cmpsb
or
xorl
or
cmpsl
mov
das
adc
popa
packsswb
cmc
rcll
mov
fsubl
adc
repnz
fidivrs
xchg
fnstsw
pop
sti
jbe
sbb
sbb
cli
aam
mov
fsts
ljmp
pushf
jle
loope
filds
ss
bnd
sub
leave
outsl
and
scas
inc
xchg
outsb
fs
push
lcall
mov
xchg
fisttpll
cmc
movsb
repz
push
sub
insb
mov
adc
mov
push
adc
mov
add
lcall
clc
js
xor
mov
xchg
dec
test
dec
push
cmp
int3
cmp
fwait
mov
in
mov
jecxz
mov
push
pop
fidivrl
pushw
shlb
mov
or
cmp
jns
add
dec
push
and
xchg
push
not
insb
in
mov
sub
fs
out
into
pmaxub
lea
mov
sti
push
lret
imul
fs
hlt
xchg
inc
adc
mov
lods
lcall
jbe
faddl
sbb
std
lods
sti
or
pop
sub
ja
xor
testl
int
jmp
jmp
shr
push
shl
push
idiv
lods
mov
fucomip
fcomip
fcomip
fcomip
fcomip
incl
xor
add
out
out
or
cli
insl
aaa
xchg
cld
jo
adc
adc
jge
xchg
add
int
or
lods
push
clc
mov
sub
pop
cmc
daa
aad
push
add
movsb
sbb
push
add
push
xor
nop
insb
popa
dec
inc
add
insb
stc
pop
shll
les
mov
add
and
sub
inc
add
pop
ret
cmp
add
lock
outsb
aaa
loope
xchg
repz
loop
out
mov
sbb
insl
push
push
mov
fldl
cmp
push
cmc
or
into
loope
ds
fistpl
xchg
xor
inc
lret
ss
and
imulb
jg
pusha
lods
int
test
paddusw
mov
movsl
sbb
lds
loop
mul
movsb
sub
call
in
xlat
call
aas
mov
in
daa
xor
mov
shrl
mov
mov
pop
pop
cli
pusha
push
sbb
push
mov
mov
ss
mov
jne
testl
xor
jle
xor
adc
push
xchg
mov
int
push
scas
cmpsb
filds
jno
jae
scas
push
cld
and
jl
sub
movsb
lret
sub
jle
push
ljmp
addr16
push
push
sub
cld
push
jbe
xchg
or
aad
inc
movsb
push
pusha
lea
push
bound
inc
pop
mov
mov
jae
cld
xlat
movsb
popa
shrb
adc
adc
repz
dec
xor
pop
and
ljmp
rcrl
pop
mov
out
into
mov
xchg
in
xchg
push
cmp
mov
xchg
or
pop
fidivs
movb
push
insb
pcmpeqw
mov
bound
lcall
push
add
shll
and
cmc
sub
sub
sbb
xlat
mov
pop
je
jl
dec
loop
inc
fidivs
dec
test
clc
mov
mov
out
out
scas
ja
jne
sub
dec
or
fnstcw
mov
orl
jge
lds
adc
insb
lock
sbb
je
imul
insb
aaa
cmp
dec
push
xchg
jp
les
test
sahf
daa
mov
dec
ja
xor
imul
enter
das
js
lock
fdivrs
jae
sar
jmp
sarb
or
std
mov
sar
sbb
mov
fstps
sbb
lods
test
mov
out
jp
push
pop
jne
aaa
jo
jno
push
jbe
int3
clc
sbb
push
jno
loop
js
xchg
pop
fwait
out
jns
scas
mull
in
mov
icebp
cltd
incl
mov
cld
cwtl
pop
and
mov
icebp
bound
movsl
inc
jmp
pop
push
sbb
cmc
mov
cmp
pushf
jp
cmp
div
xchg
xchg
outsb
leave
jnp
pop
pop
jae
sub
xchg
xor
das
mov
lods
sub
sub
pop
cmp
mov
sbb
shll
inc
add
rcll
dec
jns
jb
icebp
cmp
int
insl
idiv
fiaddl
outsb
adc
hlt
cmpsb
aas
and
pop
aaa
pop
or
jl
into
jnp
pop
pop
xchg
inc
and
jo
imul
dec
push
popf
daa
inc
jge
xlat
cmp
lods
pop
ja
and
fs
in
into
add
jg
pop
fisubl
mov
stos
xchg
aaa
cmpsb
push
loopne
pop
into
mov
imul
out
std
push
aam
push
dec
sub
mov
dec
insl
ja
mov
push
clc
adc
xchg
push
arpl
call
clc
cmp
es
jmp
xor
imul
jo
fldenv
xor
push
mov
pusha
clc
xchg
cmp
mov
mov
lcall
xorb
out
adc
cmc
xchg
lods
mov
xchg
negl
cltd
adc
inc
or
xor
xchg
adc
inc
daa
es
fsincos
incl
pop
scas
pavgb
in
ret
mov
jg
pop
xchg
lds
in
adc
mov
movsl
pusha
cmc
xor
shlb
mov
dec
imul
lahf
xor
lods
call
int
mov
mov
daa
daa
push
xorb
pop
adc
sub
lods
lahf
adc
or
jnp
inc
jl
test
jg
arpl
or
pop
push
pop
xchg
adc
popf
pop
cmp
sub
adc
pop
imul
mov
dec
repz
pop
mov
add
pop
jae
adc
pop
mov
mov
ss
aad
notl
fcompl
pop
movsl
sbb
popf
cmpsl
push
mov
jmp
into
mov
repz
loope
pop
xor
pop
movsl
fdiv
and
pop
mov
jg
cmpsl
pop
out
lret
mov
insb
lret
pop
or
repz
adc
fstpt
mov
repz
cmp
add
adc
shl
adc
repz
jg
push
pop
xchg
inc
lret
push
aad
adc
data16
repz
xor
xor
in
jmp
shlb
xchg
iret
repz
testl
inc
jae
cmp
int3
xchg
test
pop
mov
sbb
cmp
lcall
ret
subb
adc
lahf
adc
shr
shll
out
test
into
out
jecxz
leave
cmc
xchg
xor
adc
daa
clc
insb
fidivl
pop
mov
lock
es
xor
sbb
sbb
outsl
popf
icebp
insb
test
test
mov
pop
xor
not
cld
pop
ja
pmulhw
popf
inc
rorl
cltd
inc
jmp
jnp
shr
and
mov
sub
cmp
and
push
loopne
mov
icebp
mov
icebp
jo
cmp
and
mov
jmp
or
loop
add
pusha
mov
cmp
add
mov
xchg
out
leave
ret
or
std
in
std
leave
les
ja
push
or
sub
jae
xor
jnp
xchg
cld
out
das
cmp
loop
push
fmuls
jl
fs
lods
dec
push
xchg
nop
hlt
mov
es
add
push
jmp
pop
push
or
jbe
adc
jbe
cld
imul
xchg
jae
std
jecxz
aam
add
and
movsb
xor
cmp
dec
clc
movb
jl
mov
pushl
jl
pop
mov
hlt
cmp
cmp
jp
dec
jbe
test
xchg
pop
dec
arpl
jp
jns
js
sub
mov
mov
add
and
lret
ss
cmpsb
mov
sbb
jne
xor
call
add
daa
int3
divl
ja
lock
movsb
pop
or
idivb
iret
movsl
or
jo
hlt
imul
sbb
mov
jae
xchg
jg
mov
cld
stos
loopne
jae
dec
inc
iret
ret
mov
icebp
jno
sbb
or
clc
or
test
inc
inc
mov
mov
cmp
push
mov
inc
fimull
mov
clc
stc
enter
adc
cmpsl
orl
mov
mov
es
xor
enter
cmpsb
dec
daa
or
mov
jae
stos
movsb
scas
scas
icebp
ljmp
cld
insl
sbb
sub
xor
ficomps
jl
aas
jae,pn
sub
pop
cmp
pop
inc
mov
sub
adc
stos
ret
ss
mov
cmp
pop
dec
jae
loopne
enter
jl
xchg
addr16
scas
adc
test
mov
push
cmovnp
adc
inc
ss
loope
repnz
push
dec
mov
nop
sbb
ret
repz
push
div
imull
push
inc
addr16
iret
dec
adc
cld
jle
sub
xchg
shll
mov
sti
push
xor
out
enter
adc
das
dec
add
adcb
stos
mov
addr16
nop
mov
sub
bound
pop
sub
cli
repz
adc
mov
and
jle
add
inc
dec
cld
cmp
jns
push
test
mov
jno
sub
add
mov
sti
sub
out
bound
push
cltd
or
push
push
daa
cmp
sbb
addr16
clc
and
mov
fmull
arpl
loope
pushf
dec
jb
jle
adcl
adc
adc
mov
jp
sbb
jns
push
jmp
dec
scas
stc
jecxz
sbb
movsl
js
sti
cli
jbe
dec
jb
test
mov
ljmp
xchg
int
xchg
aam
sbb
xor
adc
xor
adc
into
lret
add
mov
int3
in
not
dec
aam
push
add
pop
dec
addr16
int
stc
mov
dec
jbe
cli
imul
pop
adc
adc
add
sbbl
pop
aas
repz
fstpt
cmpsl
and
or
sbb
pop
or
into
stos
add
das
out
ret
mov
xor
sbb
clc
or
mov
cmpsl
addr16
adc
pop
cltd
mov
xor
test
sub
movsl
mov
int
pop
adc
cmc
mov
pop
mov
dec
insl
xchg
push
inc
out
cli
xchg
sbb
mov
push
pop
and
push
das
mov
add
mov
xorl
push
mov
xor
xor
xchg
or
push
jmp
fdivrl
test
repnz
pop
pop
jno
pop
mov
cli
aam
dec
aas
cmpl
insb
xor
mul
mov
mov
mov
inc
inc
jbe
icebp
jne
pusha
jg
cltd
stos
lods
popa
idiv
jbe
jbe
fistl
add
imul
rcl
dec
cmp
lea
movsl
mov
cmpsb
decb
mov
mov
lahf
mov
movsl
mov
lahf
iret
cwtl
mov
rcrb
adc
mov
in
lret
fiadds
inc
cmpsl
pushf
movsl
sbb
push
xor
setb
popa
add
into
shll
sub
adc
es
decb
sub
jne
adcl
cmp
fstps
xor
sarl
aam
in
push
cld
jge
mov
inc
jae
sub
in
stos
ja
addr16
in
pop
sbb
fdivrl
dec
xor
xor
cwtl
testl
scas
in
imul
dec
cmc
inc
push
or
mov
mov
loope
push
sbb
push
pop
xor
aas
rol
and
les
lret
clc
push
or
lret
fdivrl
jge
mov
cmpsl
outsb
ss
sub
hlt
cmovo
mov
push
dec
loop
jbe
adc
jb
mov
mov
xor
push
mov
lods
lcall
sbb
addr16
pop
lcall
adc
mov
cld
test
in
das
pop
adc
movsb
jmp
scas
dec
cmc
add
hlt
daa
adc
mov
cmp
leave
leave
cmp
hlt
loope
dec
aaa
inc
push
icebp
mov
push
daa
scas
or
ja
jns
push
xchg
pop
out
lods
add
sti
jno
icebp
repnz
mov
xor
cld
pop
ss
jp
cli
sub
cmp
or
push
repnz
push
push
sub
sub
add
xor
rcrb
pop
mov
ja
adc
push
mov
addr16
dec
cmp
xor
pop
jg
xchg
out
ss
push
pop
insl
mov
enter
cmp
push
cmp
inc
divl
jmp
and
loope
mov
in
mov
cmp
test
mov
lcall
testb
cmpsb
jl
and
pop
cmpsl
sahf
xchg
scas
test
xor
stos
insb
jbe
notl
fcomip
call
xchg
dec
je
dec
push
fisttps
repz
xor
add
mov
jle
xor
cwtl
arpl
ljmp
mov
pop
push
push
push
mov
pop
js
sub
bswap
out
push
je
mov
les
sbb
jae
sbb
adc
push
xor
out
inc
es
push
push
clc
inc
push
mov
cmc
std
icebp
sub
hlt
ljmp
test
push
xor
je
cld
jb
std
sahf
or
pop
xor
adc
rorb
aad
divb
aad
sub
shll
cmpsl
and
imul
movsb
loope
sbb
popa
dec
or
pop
mov
add
adc
sub
loope
xchg
rcrl
scas
pop
andl
ret
cmpsl
push
adc
sbb
iret
push
cli
jo
daa
scas
clc
cld
shll
xchg
leave
or
xchg
repz
mov
pop
xchg
push
pop
enter
je
jle
lcall
mov
push
imul
daa
add
xlat
mov
jbe
jbe
jg
lret
clc
cmp
bound
xchg
popa
dec
xor
or
push
pop
mov
xchg
test
and
ja
mov
out
into
mov
jg
xchg
xchg
push
cmp
add
cmp
xchg
mov
mov
stc
movsl
inc
call
push
jb
das
jecxz
sbb
cli
mov
or
jo
push
push
imul
sbb
adc
inc
push
jnp
cmp
mov
fnstenv
je
jb
xchg
shlb
lret
xor
daa
mov
sub
push
icebp
test
xchg
cld
mov
lods
jns
cmp
mov
or
and
daa
mov
subl
in
sub
sub
loop
xorb
cmp
mov
mov
loop
imul
push
cmpsb
jle
ljmp
add
outsl
adc
jnp
insb
cmpsb
pushf
ret
dec
fxch
les
dec
adc
or
mov
adc
out
bnd
pop
sub
xchg
hlt
mov
cltd
rcr
push
negb
jbe
add
jl
cs
pop
das
push
ds
sub
adc
hlt
imul
negl
jb
xchg
loop
xor
scas
hlt
into
es
and
insb
je
dec
mov
js
daa
pusha
xlat
push
add
mov
mov
roll
out
insb
std
mov
sbb
imulb
add
jl
je
inc
rcrb
pop
popf
cmp
outsb
push
sti
mov
std
nop
pop
push
xor
pusha
pop
add
mov
jmp
das
idivb
ret
push
mov
add
pusha
out
clc
lods
add
and
test
push
xchg
dec
cmc
ss
jo
addr16
pop
movsb
add
popf
jnp
xchg
push
popf
dec
mov
xor
lods
adc
test
jno
sbb
loop
xchg
sbb
mov
mov
in
lock
pop
sahf
or
lcall
fisttpll
mov
fadds
mov
lea
ret
out
pop
mov
or
sbb
push
nop
nop
lock
popa
or
adc
arpl
add
stos
into
fisubs
push
dec
imul
pop
arpl
shrb
pop
bound
sub
jnp
outsl
aam
je
xor
mov
out
pop
push
ja
jmp
mov
lcall
bound
in
xchg
jns
push
push
ret
push
adc
mov
sub
loope
inc
mov
movsl
push
push
in
sti
xchg
or
iret
push
adcb
mov
xchg
jl
test
sbb
mov
sub
imul
outsb
test
inc
dec
orb
cmp
cmc
ret
pop
iret
rcrb
in
sbb
sub
or
inc
je
add
jbe
push
xor
or
lods
push
pushf
fs
mov
movsl
outsb
xchg
sub
mov
loop
sbb
roll
mov
pop
xorl
lods
ret
add
xor
pop
pop
push
mov
cld
add
daa
dec
aaa
cmpl
pop
mov
lods
movsl
mov
shl
icebp
push
sub
xchg
mul
ja
dec
dec
xor
aas
insl
jnp
and
jbe
push
push
notb
pop
sahf
xor
movsb
jo
js
mov
aad
int
cmp
pop
lock
ret
add
inc
push
cmp
cwtl
and
mov
xor
pop
adc
leave
push
dec
mov
popa
daa
cs
mov
pop
and
jmp
and
daa
movsl
xchg
stos
xchg
cs
sub
dec
push
aam
sub
add
add
ds
jne
scas
jo
cmpsb
decl
out
cld
cmp
shrb
insb
push
inc
jns
pop
mov
add
add
scas
jmp
outsl
nop
inc
mov
and
daa
cmp
sbb
movsl
xchg
mov
leave
push
fiaddl
pop
xchg
pop
clc
sbbb
xor
leave
pop
aam
jb
imul
adc
or
arpl
mov
add
test
shll
stos
mov
cmp
imul
dec
div
mov
test
ficomps
packuswb
icebp
jbe
mov
inc
cmc
lret
pop
lock
std
fwait
andb
leave
out
or
clc
pop
test
cmp
xchg
js
in
jge
test
push
out
icebp
jle
pop
pushf
std
das
movsl
xor
ss
dec
repnz
idivb
cmpsl
mov
dec
sbbb
add
clc
dec
pop
dec
jbe
stos
add
or
dec
fdiv
ret
loopne
int
mov
cs
and
push
push
cwtl
fistl
xchg
xchg
nop
pop
imull
sbb
or
sbb
movsl
add
adc
and
push
mov
out
test
outsb
jne
sub
dec
push
imull
adc
fisubrs
fdivs
outsl
and
cld
jg
cmc
mov
mov
fldenv
in
fucomi
imul
and
std
clc
insl
dec
loopne
ljmp
xor
mov
out
into
jo
in
mov
jnp
jbe
jo
inc
mov
mov
mov
dec
or
outsl
mov
add
xchg
test
push
sbb
adc
push
repnz
lock
sbb
push
filds
hlt
sbb
popf
mov
jg
xchg
mov
repnz
pop
std
outsb
movsb
jl
pushf
je
imul
cmpl
mov
jmp
lcall
jp
mov
repnz
lock
pop
pop
jo
in
xlat
fsts
rcrb
sti
mov
cmp
scas
cwtl
xor
fwait
in
rcll
notb
dec
je
in
jbe
loope
xchg
cmp
sbb
cs
jge
or
lock
ljmp
js
push
xchg
test
jecxz
test
out
push
cmp
xchg
xor
addr16
leave
cmp
pop
leave
enter
ja
je
xchg
lods
fists
jno
pop
push
mov
jae
push
in
sub
rolb
sahf
dec
xchg
mov
pop
sbb
loopne
or
sbb
jbe
add
push
arpl
adc
mov
addl
and
push
ljmp
jb
andl
cmove
addl
mov
mov
push
sahf
xor
int3
idivb
pop
ret
mov
pop
call
ds
subl
outsb
jl
rcl
mov
cmc
dec
push
data16
push
mov
jmp
es
pop
cld
stos
movsb
movsb
pop
js
push
ss
xchg
sub
daa
shrl
pop
loope
adc
pop
cmpsl
test
movsl
jecxz
dec
imul
daa
ret
cli
lods
cmp
movsb
mov
lret
cwtl
push
sub
jb
mov
loope
dec
cmc
jbe
lods
daa
lods
neg
and
sbb
inc
insb
sub
mov
xchg
in
mov
les
clc
jno
sub
ljmp
js
cld
fisubrs
push
cmp
clc
mov
repnz
and
push
jnp
out
ds
test
push
shll
mov
pushf
mov
cwtl
test
in
std
rcll
cld
xor
outsb
mov
sbb
push
in
add
cmp
inc
or
adc
push
xor
fildll
fadds
test
gs
cld
test
mov
in
push
jle
sbb
cli
mov
cmp
scas
cmp
and
ficomps
mov
mov
je
mov
adc
divl
mov
stos
ss
jmp
add
pop
ljmp
imul
xor
ja
imul
lret
testl
mov
adc
pop
sbb
push
rcl
sbb
jns
cmpl
fimull
fwait
lods
cmpl
jae
dec
test
aas
es
xchg
jecxz
insb
int
or
out
xor
xchg
insb
pop
mov
sbb
xchg
test
push
xlat
loop
push
sbb
cs
pmuludq
outsb
jbe
rcrb
dec
xor
or
cmp
sub
cmc
jle
ret
xchg
pop
out
jae
jl
mov
push
mov
jne
testl
sbb
pop
sti
jnp
fldl
lea
cli
xchg
jl
outsl
xor
cwtl
mov
and
in
aas
push
and
cmp
sbb
jns
mov
js
sbb
pushf
mov
pop
dec
mov
hlt
pop
mov
addr16
jnp
adc
icebp
hlt
fnsave
imul
pop
sub
ss
mov
dec
test
jno
fidivs
scas
jbe
out
movsl
xchg
imul
sbb
iret
or
adc
ljmp
push
xor
clc
cmpsb
dec
jne
adc
inc
jbe
lods
ljmp
mov
add
call
xor
and
roll
push
push
push
shrb
imul
jg
pop
nop
adc
jp
js
lds
fs
dec
int3
loop
pop
div
sbb
cmc
and
jne
outsb
push
testl
push
adc
dec
sub
imul
xor
ss
cs
pop
aam
into
jge
enter
ret
cmp
cmpsb
insb
dec
and
cli
cmpsb
in
aam
mov
imull
adc
mov
push
xchg
roll
fwait
adc
int
push
loopne
in
add
push
and
jb
jbe
arpl
ss
xor
mov
popa
js
fcomip
jnp
int
dec
sbb
cmpsb
stos
push
shrb
insb
scas
addr16
adc
jb
add
in
push
repz
insb
jg
xor
push
pop
adc
jno
add
mov
cltd
push
inc
inc
outsl
ja
pop
dec
inc
pop
adc
je
and
test
mov
inc
ret
jno
or
subb
xor
xor
push
fistl
jmp
mov
out
push
pop
or
mov
hlt
adc
sbb
test
out
movhps
cs
dec
test
sbb
adc
sbb
push
mov
pop
mull
push
xlat
sbb
idiv
lods
jae
inc
jmp
in
clc
cli
cltd
xchg
adc
sbb
dec
xlat
int3
sbb
push
mov
jmp
jae
arpl
add
outsl
divb
sti
push
mov
mov
roll
mov
sbb
cmpb
into
insb
dec
push
sar
js
aas
xor
sbb
test
mov
xchg
pop
adc
lcall
mov
mov
neg
in
aad
push
fwait
in
sarb
jp
aas
xor
int
jo
mov
xor
mov
sar
add
loop
mov
pmaddwd
cmp
fidivs
dec
xor
cmp
scas
inc
jae
inc
pop
je
lods
push
and
rorl
sarb
adc
xor
loope
mov
rorb
cmc
stos
mov
lods
outsb
aam
push
shlb
ss
mov
jle
pusha
xchg
gs
add
js
add
inc
dec
add
fs
xchg
out
ja
jae
pop
out
test
imul
rorl
into
sub
mov
jp
test
pop
sbb
ja
inc
xor
js
jg
rorb
xchg
mov
clc
mov
push
mov
push
into
inc
movsb
add
sub
cmpsl
push
and
in
and
mov
push
popf
or
push
jae
ss
xchg
popf
or
addr16
add
sbb
mov
pop
inc
xor
xor
jb
push
inc
lods
xchg
jb
cwtl
pop
pop
inc
sub
in
xchg
xorl
adc
mov
in
pop
addr16
fistps
add
and
cmp
lret
or
hlt
adc
call
xchg
cmp
fadd
psubw
pop
xchg
push
sub
cs
cmp
jb
sbb
fnstsw
xchg
sub
sub
push
and
mov
jb
or
dec
fcmovbe
adc
lret
fwait
inc
mov
push
stos
loopne
xlat
cmpsb
sub
inc
daa
cmc
cmc
push
mov
lret
jns
aam
push
xor
leave
es
sbb
enter
test
dec
mov
js
cmp
inc
xchg
mov
insb
sub
aas
add
and
cmp
add
sub
push
aam
and
adc
stos
subl
test
add
sub
popa
pop
lods
mov
xchg
scas
pop
fisttpll
cmp
jns
fs
fs
mov
inc
add
fstpt
adc
sub
out
sbb
test
pop
mov
in
negl
mov
fsubrs
xchg
js
in
std
aaa
dec
jmp
rcrb
insb
push
lea
repnz
pusha
jo
jno
inc
sbb
mov
pop
pop
cwtl
adc
int
mov
mov
sub
mov
mov
add
jecxz
mov
daa
push
and
cwtl
add
dec
add
mov
push
lret
add
xchg
inc
sub
mov
pushl
sar
inc
sub
push
mov
mov
sahf
jnp
add
std
fsts
in
mov
lods
sub
ja
xor
mov
inc
pop
mov
jecxz
mov
adc
xlat
push
testb
jle
cmc
jne
xchg
sub
out
jle
mov
mov
cmpsb
add
mov
leave
sbb
xor
repz
icebp
mov
inc
lea
fistl
cld
leave
jb
sbb
aam
insl
push
and
aaa
out
sbb
mov
push
xchg
imulb
sub
dec
testb
ja
sub
movsl
dec
add
in
cmp
inc
mov
jle
les
add
pop
out
fs
shl
add
test
jae
lret
push
jge
insb
stos
aad
add
mov
inc
inc
fbld
or
jmp
fcomps
push
daa
adc
lock
xor
je
int3
and
in
icebp
sub
or
scas
outsl
lock
and
stos
sbb
mov
hlt
jo
xchg
mov
cmpsl
rorb
inc
clc
push
fsts
enter
pop
add
scas
je
fucomi
gs
dec
jns
cmp
aas
leave
mov
or
push
fnstenv
pop
je
push
clc
lods
rcr
shr
jecxz
flds
in
hlt
pop
jle
insl
cli
psadbw
icebp
jbe
out
adcb
ljmp
enter
sbb
pop
fisttpl
jecxz
lahf
stos
pop
cmc
pop
sbb
inc
je
in
fsts
hlt
ss
fidivl
mov
dec
stos
out
jbe
mov
xlat
in
cmc
sub
ret
icebp
pop
out
xchg
imul
in
inc
mov
inc
idiv
dec
aas
les
cmp
mov
popw
jecxz
cmp
imull
sbb
scas
jae
push
sub
pop
lahf
idiv
add
cmp
push
testl
rcrb
je
addb
out
sbb
imul
fs
mov
push
aas
pop
lcall
pop
test
adc
mov
push
ljmp
int
fisubrs
cld
mov
das
and
jl
in
and
push
fisttps
mov
ds
ja
pop
sahf
daa
ljmp
outsl
lock
adc
testl
pop
cmp
lock
movsb
dec
adc
popl
in
sub
jo
push
and
aam
int
cmp
jb
arpl
push
popa
das
mov
sar
popf
mov
shr
les
inc
daa
jae
dec
and
sub
movsl
cmp
cltd
push
and
lods
pop
inc
or
xchg
add
out
push
loop
call
clc
mov
imul
dec
stos
push
sub
iret
ss
add
daa
jns
ja
sub
movsb
mov
testb
imul
mov
clc
cld
or
or
dec
xor
inc
jp
xor
call
jbe
inc
les
fnstenv
push
push
add
mov
xchg
mov
ret
cld
mov
sbb
loopne
cltd
das
in
jl
aam
rcll
mov
adc
ret
or
or
jns
mov
into
and
lods
push
clc
in
aaa
xchg
jns
cwtl
daa
add
cwtl
mov
cmpl
je
sarl
daa
lds
bound
cld
or
scas
adc
xchg
sarl
or
shlb
int
inc
push
fldl
lret
outsb
fsubl
mov
sbb
mov
push
jg
or
mov
cmpb
repnz
ja
sbb
into
shll
call
xchg
xchg
gs
mov
xchg
jno
into
jns
pop
or
jecxz
dec
dec
pop
add
movsb
jl
subl
jnp
pop
das
insl
cltd
fisubs
and
testb
or
popf
jmp
fcom
push
test
jmp
icebp
push
mov
cwtl
fcomp
pop
out
xor
mov
jmp
pop
cmc
adc
outsb
and
js
in
or
pop
test
push
jp
mov
cmp
dec
lret
cmc
test
pop
jmp
adc
or
pop
cmpsb
fucom
cmp
add
mov
pop
dec
test
mov
fimull
cli
push
add
jmp
dec
insb
aad
aaa
cltd
add
aam
xor
inc
into
in
or
pusha
addb
xchg
fnstenv
ror
sbb
pop
aam
scas
or
in
jmp
mov
cmp
xchg
popa
add
push
enter
cmp
mov
xor
xchg
aam
sbb
daa
jge
inc
or
sub
mov
inc
add
xchg
add
rcrl
aam
xchg
mov
jnp
mov
fldenv
add
cld
xchg
sbb
push
xor
adc
rcr
test
jbe
cmc
sub
jb
push
pop
push
xchg
scas
and
repz
test
jae
push
repnz
out
imul
test
popl
pcmpeqd
ja
out
xchg
mov
test
daa
cmc
sub
xchg
mov
push
jbe
das
ja
push
push
xor
outsl
imul
cmc
call
jno
pop
arpl
push
dec
clc
mov
scas
mov
data16
enter
mov
pop
testb
aad
jbe
add
es
inc
ljmp
xchg
in
jo
mov
push
push
or
fcmovnbe
mov
shl
push
sub
pop
cmp
xchg
mov
or
insb
enter
in
sub
add
loopne
js
test
push
and
int
ljmp
cltd
stos
int
insb
imull
rorb
ret
testl
clc
sbb
fs
or
dec
cmp
inc
push
sbb
push
bound
je
cmovne
dec
cld
repnz
loop
scas
cli
sub
daa
aad
test
in
mov
outsl
pop
testb
jo
cld
mov
andb
mov
fdivs
push
loopne
push
mov
imul
fisubs
repz
push
mov
outsl
sbb
scas
sbb
mov
aaa
fdivr
sahf
xlat
xorl
jbe
pop
or
test
insb
mov
daa
pop
imulb
and
not
xorl
and
xor
add
cmpsb
out
scas
aad
js
movlps
into
test
add
pop
out
call
iret
jns
aad
sub
add
ja
push
sbb
pop
inc
inc
sbb
test
sbb
push
mov
lcall
jmp
das
mov
lock
pop
cmp
test
int3
lcall
jl
stos
xchg
out
mov
js
mov
cmp
loope
adc
ret
cmpsb
lcall
push
movsb
fucomp
mov
rorl
push
lock
imul
incb
lret
out
imul
push
lock
mov
int
dec
testl
mov
sbb
ret
ljmp
test
push
outsl
push
movsl
arpl
nop
adc
dec
mov
xchg
hlt
push
or
sbb
data16
cmp
not
cmpl
imul
stos
jns
dec
faddl
cmp
cli
mov
mov
push
add
fnstsw
or
scas
adc
push
mov
push
mov
insl
pop
sbb
mov
xlat
scas
cmp
sbb
into
and
fstps
jle
cmp
outsb
mov
cmpsb
mov
cmc
sub
js
pop
hlt
cmp
ss
bound
push
daa
hlt
movsl
fsubrs
aaa
cmp
add
mov
pop
mov
stos
fsts
arpl
arpl
jl
scas
cmpsb
sub
add
xorb
and
add
jne
xchg
movsb
clc
out
xor
daa
test
add
les
cmpsb
mov
and
pop
int
mov
sub
test
cmc
ds
add
dec
adcl
mov
pop
cltd
xchg
jae
pop
cmpsb
lcall
adc
add
popf
xor
mov
shlb
ficoms
jae
mov
add
daa
test
jp
shrl
cmp
jbe
xchg
jae
jo
into
push
popa
sub
mov
mov
js
in
lds
hlt
or
add
cmc
xchg
fwait
cmp
mov
pop
or
imul
stos
int
lcall
es
and
aaa
lock
mov
xlat
mov
jbe
sbb
lea
scas
hlt
cmc
add
das
movsl
pop
push
or
loope
xchg
push
lcall
bound
daa
adc
fcoml
jbe
jmp
testb
hlt
out
xchg
aas
mov
pop
addl
jmp
loope
sti
scas
icebp
int3
cmp
in
imul
push
xor
movsl
popf
xor
push
pop
cli
rorl
push
pop
andps
in
dec
test
mov
jbe
add
sbb
rclb
cwtl
out
xor
dec
inc
iret
xchg
xor
mov
shlb
test
cmp
sbb
cmp
mov
jbe
and
pop
fdivrp
push
ds
mov
lods
fisubl
cmc
mov
lcall
adc
xor
jmp
mov
ficoms
xchg
andl
xchg
sti
lock
cli
and
aas
in
fldt
push
scas
mov
cmp
in
ret
jl
cmpsl
call
fisubl
fisttpl
push
adc
xor
daa
push
popa
pop
stos
dec
mov
daa
lods
repz
shlb
jb
jns
shrb
int3
cmc
imul
in
sub
ficompl
cmpsb
pop
mov
mov
cltd
xor
pop
repnz
push
mov
push
mov
call
xchg
outsb
cmp
pop
sub
push
mov
push
imul
aam
and
lods
ja
mov
pop
lds
mov
mov
and
push
dec
leave
negb
push
shlb
cmp
push
sbb
xchg
fisttpll
mov
cmpsl
lods
add
cld
test
popf
mov
pop
test
cmp
or
fidivrl
adc
jle
pop
push
mov
stos
adc
cld
pop
push
fldl
mov
push
jnp
insl
jo
inc
mov
cmp
mov
mov
push
loopne
push
mov
cmp
stos
lahf
push
add
js
sub
jbe
aas
push
das
ds
insb
and
add
push
pop
jecxz
fildll
and
cmpsb
push
push
cwtl
push
mov
inc
scas
ljmp
in
add
mov
rcll
jb
sub
xor
loop
add
insl
ror
loopne
aam
mov
je
adcl
xchg
scas
jnp
add
aam
call
mov
and
in
and
or
inc
mov
xchg
jl
xchg
jp
shll
sbb
cld
mov
leave
lock
nop
movsb
leave
add
jbe
inc
add
sbb
nop
shrl
jbe
ret
push
out
mov
sbb
sbb
sub
jb
or
mov
cmp
imul
or
cmp
xchg
or
adc
clc
subl
mov
pop
fisttps
cli
push
fucompp
dec
loopne
lock
imul
lret
lock
cmc
lds
adc
mov
in
fisubrs
mov
adc
mov
loop
aam
test
into
and
test
loope
scas
aaa
jns
mov
xor
pop
cmp
lods
mov
sub
cmp
jecxz
cmp
add
adc
sub
mov
int3
aam
arpl
movsl
stc
sbb
icebp
and
inc
out
xchg
pop
dec
test
cmp
mov
cmc
cwtl
stos
test
mov
sbb
pop
lds
xchg
loopne
jmp
push
push
mov
inc
fdivl
add
mov
inc
inc
rclb
neg
aas
mov
inc
mov
jmp
and
sbb
loop
jb
xor
es
call
je
push
lods
sti
sub
xchg
stos
ja
jb
insb
mov
lcall
sub
jecxz
cwtl
aaa
inc
jno
mov
arpl
inc
dec
pusha
popa
sub
ja
pop
xchg
push
mov
jb
arpl
loop
cld
shrb
out
or
xchg
popa
pusha
popf
cmp
ficomps
jp
xor
sti
add
shlb
add
jae,pt
mull
dec
or
mov
push
sti
dec
test
jno
ud0
xchg
ja
cmp
js
rcl
push
outsb
xor
add
rcl
or
femms
pop
inc
mov
jp
dec
into
shlb
mov
hlt
test
neg
aaa
push
cli
push
inc
or
mov
daa
pusha
mov
scas
repnz
test
xchg
mov
scas
iret
mov
jp
mov
add
pop
jns
jae
clc
jp
inc
movsl
sarb
es
sub
mov
pushf
mov
mov
mov
dec
pop
mov
dec
je
cltd
xchg
or
fwait
movsl
lods
pop
push
insl
aad
mov
push
cmp
xlat
jecxz
notb
dec
popa
sbb
test
ja
mov
lcall
add
out
and
cmp
mov
jne
xchg
and
mov
xor
testb
psrad
dec
jl
aad
xchg
incb
scas
pop
jns
pop
shll
es
push
xlat
push
sbb
inc
ja
jp
fs
out
lea
mov
lods
arpl
mov
loop
and
xor
lret
push
add
in
mov
push
push
inc
pop
jp
xor
push
add
repz
je
shl
iret
sbb
cmp
lds
popa
inc
inc
mov
in
and
mov
add
jno
cld
jbe
mov
cmp
sub
xchg
test
popf
dec
lds
cmpsb
xchg
cmp
dec
sub
cmc
nop
cmp
lea
inc
push
std
sbb
jns
pop
mov
pop
push
lods
mov
cmp
dec
lods
test
cmp
or
pop
or
push
daa
pop
call
adc
jns
adc
mov
mov
jnp
dec
ja
mov
int
jae
push
pop
out
mov
inc
xor
sti
dec
mov
cmp
fldcw
sbb
imul
nop
pop
or
cmp
int
sub
ja
pusha
test
lea
sbb
xor
mov
xchg
and
in
jo
das
fdivs
outsl
jl
test
pop
xchg
xchg
jnp
lods
insl
jo
into
add
outsl
jne
sbb
sbb
into
daa
repnz
jo
adc
sub
push
xor
pop
push
daa
ror
add
push
cmp
push
leave
das
dec
or
adc
xor
dec
mov
imul
hlt
and
cs
dec
xor
push
aaa
gs
jmp
lods
daa
inc
mov
ja
lcall
dec
push
xorb
push
jno
popf
rorl
push
subb
mov
cs
jo
das
mov
adc
mov
mov
pushf
lock
jo
das
scas
adc
popf
test
pop
push
xchg
scas
xor
clc
add
and
aaa
fidivl
push
sub
adc
lods
pop
cmc
daa
xor
push
call
cld
ja
xchg
pop
or
jnp
call
mov
jnp
or
xchg
sbb
xchg
js
and
popf
lds
push
mov
sub
pusha
stos
or
or
cmp
and
push
push
push
test
mov
pop
cmp
xor
push
rcl
pop
jg
xchg
test
insb
cld
fistl
pop
lods
shrl
xchg
cltd
cmp
dec
pop
mov
adc
push
outsb
add
mov
inc
mul
sbb
cld
addr16
arpl
or
jb
adc
xchg
dec
xor
insb
push
icebp
rcl
es
hlt
shll
push
xchg
jg
scas
in
mov
pop
call
daa
mov
sahf
lods
mov
pop
cmp
pop
adc
add
jno
add
pop
jg
dec
sub
xchg
add
push
daa
inc
add
push
pop
xchg
incb
stos
fnsave
or
inc
out
leave
push
or
dec
ja
pop
clc
pusha
add
hlt
out
mov
scas
adc
push
pop
pusha
mov
dec
cld
int
add
inc
adcb
inc
xchg
scas
data16
out
inc
lock
std
idivl
xchg
jnp
or
xchg
jne
test
xor
mulb
jno
sub
ss
push
adcl
or
mov
dec
and
popl
fimull
cmc
imul
mov
sti
cld
mov
and
sub
ss
cli
jo
cld
das
test
xchg
das
outsl
push
clc
and
push
sub
test
addr16
sti
scas
fldt
outsl
mov
ja
out
ss
mov
lret
sub
mov
fsts
dec
dec
push
xor
mov
or
add
mov
xor
cmp
aaa
mov
iret
ret
mov
push
ss
inc
mov
jle
mov
inc
and
fs
das
sti
add
je
cmpsb
jns
push
cmpsb
es
pushf
mov
sbb
mov
or
scas
add
repnz
cld
sub
ss
cmp
adc
sbb
cld
or
cmpl
xor
out
xchg
xchg
dec
les
je
push
mov
xchg
push
js
push
cli
dec
out
call
pop
push
push
outsb
je
notb
push
out
push
daa
fldl
movsl
mov
sbb
cld
lods
pop
scas
imul
cwtl
mov
jb
inc
iret
xlat
add
pop
mov
pop
mov
call
xchg
rolb
shl
lcall
rcrl
push
pop
xchg
mov
push
addr16
xor
sub
xor
cli
dec
sub
sub
stos
lods
sbb
mov
das
daa
or
loopne
mov
cltd
loope
lcall
test
fiaddl
push
cmpsl
lret
sbb
iret
movsl
into
and
rcrl
sahf
leave
into
mov
xchg
dec
cmp
dec
push
mov
jmp
loope
push
out
push
and
lea
cmp
movsl
mov
mov
adc
push
notl
jb
push
xor
jge
and
jl
mov
arpl
loope
test
idivl
mov
adc
and
rcrb
fmuls
xor
inc
pushf
lcall
enter
xor
insl
push
in
stos
xchg
scas
or
lea
mov
lods
and
fsubrs
insb
je
aad
aas
xchg
fxch
adc
cmc
pop
dec
outsl
outsl
cmpb
repnz
nop
mov
lahf
adc
mov
mov
rolb
rolb
or
push
es
das
std
fsubr
xor
aam
imul
ret
movsl
pop
ljmp
movsl
lea
das
push
pop
outsl
hlt
xchg
adc
mov
lods
add
cmp
lcall
cmp
dec
cmp
or
dec
adc
andb
and
jb
js
or
pop
and
xor
adc
mull
repnz
or
mov
lahf
or
jbe
icebp
push
xor
movsl
into
test
mov
mov
idivl
sub
rcl
addl
pop
adc
js
xsave
scas
loope
lock
repz
mov
push
or
or
pop
fimull
les
add
cmc
push
xchg
mov
imul
stos
out
fsubrp
negl
imul
imul
adc
ss
aaa
xchg
iret
test
out
jae
lods
outsl
sub
loopne
sbb
fstpt
scas
mov
jb
mov
jns
sbb
test
sub
pusha
loopne
dec
cld
inc
or
jb
sti
xor
pmaxub
xchg
je
lds
sbb
and
daa
sbb
dec
cli
cmpsl
popa
jo
fidivs
shlb
lds
arpl
pop
mov
mov
xchg
das
popa
pop
inc
push
jmp
mov
cld
inc
aam
mov
push
jb
icebp
xchg
insl
xor
jno
mov
ss
lds
cmp
data16
mov
cli
lods
neg
push
daa
aam
and
jp
mov
pop
loopne
jne
inc
xor
dec
bswap
adc
inc
pop
cmp
and
incl
cli
pop
loop
dec
jbe
add
out
jb
andl
test
clc
add
aam
cmp
xchg
cmpsl
adc
dec
mull
push
cmp
jmp
pusha
dec
adc
push
not
xchg
xchg
mov
adc
and
push
aam
cltd
ss
repnz
test
leave
popf
add
add
icebp
add
jle
das
cmpsl
aaa
adc
inc
sbb
daa
int3
leave
mov
imul
inc
cmp
add
mov
in
sti
sti
dec
mov
in
ss
jl
cmp
xchg
dec
cmpsl
out
sub
mov
daa
neg
ret
add
dec
mov
popf
push
cs
xchg
pop
loope
repnz
ds
xchg
js
xchg
ror
xor
aad
pop
mov
sets
xchg
xchg
sbb
je
inc
mov
imul
lea
adc
mov
adc
mov
mov
fldcw
insb
je
sub
out
push
hlt
push
loopne
lock
mov
or
pop
pusha
jmp
hlt
add
jnp
ja
push
notl
rolb
xchg
push
mov
jo
arpl
out
adc
gs
xchg
icebp
inc
adc
xchg
cmp
sbb
xor
mov
fisttps
cltd
movsb
lea
and
clc
insl
sub
pop
test
jmp
sbb
jle
cs
xchg
cmpsl
dec
dec
stc
push
ja
insb
addr16
je
pop
rcl
pop
cli
pop
xchg
push
lea
cld
cmpb
push
sbb
mov
in
sbb
jle
jbe
fsts
fiadds
pop
dec
xchg
mov
add
push
mov
aad
cmc
movsl
int
cmpsl
dec
loope
aaa
mov
ret
test
ja
jbe
push
push
lret
mov
iret
sbb
es
scas
imul
dec
scas
mov
ss
mov
dec
popf
and
xor
pop
das
popf
lds
iret
dec
adc
push
dec
shlb
sbb
jge
jns
cltd
cmpsb
push
pop
dec
mov
int
cs
ret
cmp
xchg
pop
jnp
pop
cmp
cmpsl
or
and
cmp
xor
popa
mov
ss
or
lods
xchg
inc
pop
push
ljmp
add
mov
mov
mov
in
pop
call
imull
jb
dec
dec
repnz
stos
sarl
or
aam
jne
jg
or
mov
push
sub
cmp
lret
xor
sar
adc
cwtl
aaa
hlt
stos
mov
dec
movl
inc
mov
inc
arpl
andb
fcoms
jo
es
push
mov
xchg
push
lods
push
insb
addl
jns
daa
cmp
xor
in
mov
fisttpl
inc
xchg
aaa
scas
adc
jp
sub
inc
inc
adc
jne
push
jnp
addr16
or
cld
mov
jb
adc
mov
orl
nop
mov
dec
and
lods
ja
outsb
enter
pop
addr16
sti
and
inc
jnp
jecxz
fnstsw
inc
mov
adc
adc
push
cmp
adcb
hlt
aad
repnz
push
push
ja
popa
daa
inc
sbb
cmp
mov
pop
leave
pushf
js
mov
mov
in
jmp
movsl
mov
sub
jae
sub
adc
roll
mov
shrl
es
aad
mov
pop
jo
or
hlt
mov
stos
push
sbb
jl
movsl
popf
dec
mov
mov
imul
adc
dec
dec
test
sub
mov
sti
sbb
aad
sub
js
xorl
insl
push
xchg
or
dec
xorl
testl
je
adc
xchg
sbb
sbb
push
mov
xor
dec
lcall
mov
out
mov
out
inc
pop
mov
shll
je
sbb
setbe
repz
mov
js
daa
lock
sbb
sub
negl
popl
movsl
test
push
dec
adc
and
xchg
jne
xchg
lea
imul
scas
js
mov
pop
pop
pusha
push
pop
es
pop
adc
add
dec
jb
pop
jbe
subb
sub
ja
pusha
das
jno
out
push
mov
inc
mov
adc
and
clc
mov
insl
fmuls
push
pop
cmp
mov
mov
ds
scas
or
push
jbe
xor
adc
lret
inc
pop
bound
into
jecxz
mov
mov
cld
shlb
xchg
mov
dec
pop
mov
mov
je
mov
push
push
add
add
push
pushf
push
mov
push
test
inc
jns
ja
and
cmp
arpl
ficoml
jbe
jle
inc
rclb
sub
adc
xor
fxch
clc
stc
sub
sbb
repz
loope
pop
idivl
push
pop
xlat
loope
imul
xchg
sub
push
rcr
mov
fwait
pop
sub
into
loope
lahf
dec
cwtl
cmp
add
mov
and
out
cltd
xor
sti
idivb
jg
out
and
jge
jae
in
les
xchg
mov
xor
lods
xchg
push
sbb
sub
cs
fisttpll
xor
rdtsc
std
lods
jmp
scas
lock
push
cmc
cmp
inc
test
mov
out
mov
stos
adc
jno
in
and
repnz
add
scas
lods
mov
push
ja
pop
lods
pop
data16
fcmovnbe
jo
adc
inc
pop
add
sbb
cmpsl
sbb
rcrb
jae
xchg
dec
and
loopne
pop
inc
pushf
daa
dec
and
into
jno
sbb
or
inc
xor
dec
arpl
sub
mov
out
andb
clc
inc
jne
ret
daa
inc
repz
sub
xchg
xor
pop
inc
fisttps
sbb
lahf
or
cld
mov
pop
pop
mov
push
cwtl
rcrl
idiv
cmp
sbb
push
arpl
push
ja
xor
rclb
lea
adc
xor
mov
into
cmpsl
shl
lods
push
ret
mov
push
scas
pop
mov
xor
test
loop
adc
cmpsb
mov
andl
pop
mov
sbb
int
fptan
inc
add
fdiv
jo
pop
inc
movsl
mov
jmp
rcrl
jbe
inc
imul
into
push
pop
mov
das
cmc
cld
arpl
cmp
lds
test
mov
cmp
cwtl
jecxz
outsl
jmp
mov
ljmp
xchg
inc
addb
jb
aam
inc
or
push
stos
mov
xchg
lea
pop
mov
cld
popf
push
into
inc
and
in
lret
mov
je
lods
ss
push
in
sti
pop
xchg
ret
jb
or
xorb
mov
pusha
lea
jne
push
inc
pop
dec
stos
jbe
xor
cwtl
insl
mov
jae,pn
movzwl
insb
pop
jmp
cmpsl
push
inc
in
notb
mov
lahf
icebp
jo
jl
sbb
insb
outsl
mov
cltd
push
sbb
push
cmp
pop
call
out
loop
jmp
out
sub
out
nop
jno
mov
mov
mov
xor
push
xor
rcrb
outsb
xor
xchg
xlat
cmpsl
pushf
lock
adc
dec
lock
add
xor
add
sub
fadds
pop
or
clc
sbb
fistpl
das
in
ss
lcall
push
pop
imul
loopne
cli
jp
orl
and
push
stos
aas
adc
sbb
out
cwtl
addr16
xchg
add
mov
jmp
loopne
add
fdiv
add
pop
add
insl
add
cmp
and
dec
mov
insb
sub
movsb
daa
ret
ret
ficompl
xchg
ficompl
lock
mov
add
ret
daa
mov
cmp
cmp
add
repz
lods
ljmp
call
cmp
push
fldcw
push
outsl
xchg
mov
ljmp
fwait
adc
imul
cld
loop
leave
dec
test
mov
pop
xor
cltd
push
aam
pop
push
cmp
sahf
xchg
jne
fdiv
cmc
pusha
push
outsl
imull
inc
jae
das
out
cmp
mov
jae
sbb
adc
data16
cltd
sub
xor
adc
jae
into
ds
mov
or
scas
pop
cmp
out
push
clc
jp
sub
pop
into
repz
dec
imul
icebp
incb
scas
call
and
cmpsl
aam
int3
daa
scas
clc
into
cli
xchg
sbb
sahf
les
ja
cmp
and
and
imul
in
std
dec
xchg
xchg
mov
loope
jmp
jbe
fcmovne
mov
sbb
xor
es
stos
and
push
fildll
jne
mov
lods
popa
pop
in
into
ret
inc
dec
imul
sarl
jbe
cmp
sub
sbb
adc
decl
push
dec
pop
mov
jmp
gs
jns
shrb
cmc
add
inc
js
xchg
in
sbb
pop
mov
inc
ret
into
mov
stos
sub
sbb
mov
sub
in
daa
xor
jae
cmp
imul
cmc
cmp
adc
divl
cs
outsb
mov
icebp
addr16
iret
ja
fildll
lock
enter
fstpt
mov
adc
mov
add
jae
sbb
adc
jns
mov
movsb
ja
ja
ss
incb
pop
sub
xor
pusha
mov
das
or
xchg
cmp
jmp
int
mul
cltd
add
mov
mov
cli
mov
aam
aas
jmp
sbb
les
adc
xor
shrb
adc
or
rol
into
cs
test
repnz
xor
push
jl
ja
into
jns
adc
inc
add
mov
pop
mov
jmp
iret
out
jo
sub
push
pop
notl
xchg
scas
cmp
push
sbb
jo
lret
inc
outsb
rdmsr
ret
mov
mov
dec
imul
jb
mov
aad
pop
xor
mov
xor
sbb
xor
sbb
stos
push
pop
icebp
cs
sbb
xchg
mov
repz
aaa
inc
or
cs
rol
xchg
fiaddl
stos
scas
adc
in
rcl
add
cmpsl
mov
adc
sbb
mov
out
mov
shll
loope
daa
es
add
lock
sub
movl
mov
test
aaa
mov
dec
out
shll
cmp
adc
je
jg
cmp
push
sbb
jge
nop
loope
movsl
mov
and
int
daa
xor
xor
pop
popa
mov
testb
pop
imul
fcmovu
mov
pop
mov
and
xchg
shlb
scas
xor
jl
push
sbb
xchg
push
cmpsl
ljmp
je
ret
mov
dec
ja
stc
mov
pop
adc
push
adc
cld
dec
mov
stc
or
repz
daa
lods
in
loop
inc
jecxz
push
daa
sub
rcll
xchg
sub
addb
in
ja,pt
js
push
insl
dec
mov
mov
jmp
lret
lods
notb
vmovmskps
xor
mov
call
popa
jnp
add
es
sbb
jp
jbe
fimull
cmp
out
sbb
push
mov
inc
lahf
push
or
pminsw
jecxz
jo
adc
cld
mov
sub
hlt
lcall
add
push
dec
out
dec
data16
rclb
ljmp
jns
xchg
jg
adc
push
scas
leave
ret
xchg
js
iret
add
mov
popf
inc
xchg
in
sbb
sarl
negb
lods
dec
mov
inc
lods
push
mov
test
inc
mov
xchg
jecxz
add
sub
inc
mov
sub
lods
cmp
xchg
cwtl
or
mov
push
fidivrl
aad
std
jnp
mov
add
mov
mov
mov
xchg
push
out
in
repnz
xchg
sbb
popf
js
sbb
fs
adcb
fsub
movsl
mov
sub
ficomps
shlb
cld
fsubs
iret
les
data16
int3
or
cmp
mov
je
dec
call
dec
pop
lds
loope
mov
pop
inc
aaa
pop
bound
cmpb
xchg
jge
popa
lods
mov
ja
fnsave
xlat
loop
or
mov
push
mov
or
movsl
cwtl
sbb
mov
out
sbb
test
cld
mov
sbb
mov
jo
mov
dec
push
pop
test
mov
dec
add
test
pmaxub
mov
push
cltd
pop
inc
push
mov
push
call
mov
inc
pop
and
xchg
push
adc
sbb
out
je
xor
jae
sub
add
push
das
ds
mov
sub
out
mov
aas
sti
ds
push
loop
mov
cli
in
xchg
push
and
mov
jp
mov
adc
jne
mov
popa
loopne
insl
scas
push
push
aam
scas
aam
sub
mov
xchg
movsb
cwtl
pop
mov
cmp
je
aad
and
pop
ja
and
imul
jns
leave
xor
cmp
clc
pop
imull
mov
sbb
fnop
ljmp
outsb
xorl
popa
xchg
cld
repz
sbb
outsl
fnstcw
dec
inc
lret
dec
push
push
int
fmul
out
in
sahf
shrb
mov
and
xor
inc
or
in
xchg
imul
rclb
repnz
adcl
mov
sub
rcrl
scas
repnz
adc
shrb
int3
dec
push
test
jle
mov
outsb
adc
clc
jl
or
adc
clc
sbb
sub
jns
xchg
inc
in
js
push
add
cmc
loope
icebp
push
pop
ror
negb
xchg
push
je
inc
jge
pop
sub
ljmp
repz
mov
or
jns
sub
fld
enter
lret
push
repz
fstpt
sbb
mov
lsl
jecxz
enter
jb
out
and
repz
mov
sbb
pop
fs
jb
adcb
js
jo
out
cmp
inc
mov
sti
mov
idivl
mov
int
sub
lods
rcrb
arpl
js
mov
test
pushf
xchg
sti
push
cwtl
es
or
aaa
repz
cmc
xchg
loopne
call
leave
ficoms
out
in
shrb
test
xchg
mov
or
adc
inc
xchg
mov
xor
sarl
aad
mov
neg
lcall
into
push
fwait
push
frstor
imul
adcb
cmp
popa
xchg
movsl
adc
leave
ss
jg
xchg
jbe
in
push
push
jo
lock
cmp
ljmp
or
popf
cmp
push
hlt
shll
loope
hlt
jge
shrb
clc
in
ret
cld
push
loope
roll
mov
xor
js
sbb
scas
sbb
mov
push
mov
cmpsl
fwait
cmp
push
push
dec
adc
jne
xchg
cltd
lret
loopne
jbe
clc
addb
mov
mov
test
out
dec
icebp
decl
sbb
jecxz
inc
aad
data16
aaa
clc
cmp
adc
push
adc
movsb
mov
and
inc
call
or
jle
push
lds
jbe
dec
mov
jne
jns
fadd
lock
add
cmpsb
xchg
js
push
aas
loope
xor
es
jmp
jb
xor
scas
cmpsl
jmpw
xor
jl
push
fstl
mov
into
pop
jbe
popa
lds
inc
mov
add
cmp
pop
sbb
rcrb
fs
xchg
add
sbb
ljmp
ret
ss
loope
rorl
hlt
fxch
ret
jne
js
dec
cmp
mov
mov
imul
mov
xor
inc
fs
lods
add
lods
sbb
push
je
daa
adcl
push
das
mov
ja
adc
outsl
insb
add
jne
aam
mov
mov
pop
test
jnp
and
pop
mov
dec
in
mov
fcoml
hlt
jle
jbe
fcmovnbe
mov
dec
push
mov
lret
dec
sti
pushf
xchg
mov
push
int3
jp
out
scas
test
push
lcall
adc
jo
mov
cmpsl
cmove
testb
pop
fwait
test
push
cmp
pop
jg
dec
dec
movsb
jp
insb
std
jns
out
mov
xor
jns
addr16
and
addr16
lock
jle
loopne
icebp
jg
loop
xchg
mov
icebp
mov
sbb
push
adc
outsb
fwait
cmp
das
sub
mov
inc
jp
scas
into
push
fimuls
ret
scas
ds
pop
inc
or
inc
insb
cmp
jno
push
jb
push
popa
push
xor
jnp
out
dec
push
mov
movsl
dec
dec
sbb
jg
xchg
push
add
mov
adc
lods
fcoml
int
add
jnp
dec
andl
push
call
push
adc
mov
push
jp
mov
sti
jnp
xor
mov
dec
xor
into
insl
sti
lods
push
divb
sbb
pushf
aaa
cmc
push
hlt
lock
nop
fcoms
or
xor
je
aas
cmpsb
fidivs
xor
insl
pop
in
sbb
add
add
pop
pop
push
pop
sub
push
test
nop
mov
cmp
add
jb
rol
fistl
lcall
add
mov
mov
inc
mov
cmpsl
cmp
push
lret
mov
push
clc
jne
test
lods
cmp
mov
sub
cwtl
into
inc
push
in
lock
sbb
scas
mov
pop
or
imul
mov
jmp
push
or
cmc
pop
xor
mov
cmp
stc
hlt
es
mov
xor
fists
push
jmp
leave
and
mov
enter
lahf
cmp
and
jecxz
in
outsl
cmpsb
fldl
mov
xor
out
cmpsl
int
sti
mov
push
in
adc
idiv
or
jne
out
test
sbb
int3
jb
jo
cltd
pusha
divl
xor
lock
xor
sti
leave
js
jnp
mov
mov
cmp
dec
sbb
xchg
push
repz
inc
sbb
iret
lea
fstpt
xor
push
sbb
and
stos
xchg
cmp
int
mov
jno
movups
shll
xor
scas
pinsrw
out
jbe
mov
test
push
cmp
jb
cmp
xchg
js
pop
and
and
arpl
dec
loopne
sbb
mov
xchg
push
and
mov
stos
dec
popa
addr16
test
pop
push
push
or
dec
jmp
sbb
popf
into
loopne
insb
xchg
xorb
js
inc
xchg
fsub
in
xchg
push
sbb
sbb
mov
repz
push
jns
repz
icebp
fldcw
sti
mov
fwait
mov
pop
out
push
stos
and
popa
pop
jo
cltd
add
stos
test
dec
lods
aam
decl
lods
pusha
ljmp
jns
std
cld
and
out
roll
int3
sub
cmpsl
mov
shll
mov
dec
push
test
outsb
pop
mov
enter
cmp
movsl
cli
imul
sti
fs
shll
add
adc
and
xchg
ror
and
sbb
stc
data16
mov
xorb
imull
add
add
cmc
sub
ja
ljmp
cmp
lea
pop
in
int
sbb
mov
push
scas
aaa
loopne
in
inc
cwtl
shll
roll
xchg
clc
mov
cmpsb
lea
test
lods
push
ss
scas
sub
inc
nop
push
jae
mov
add
mov
sar
mov
fsubr
inc
movsl
cltd
sub
push
cmp
rcl
es
fdivr
push
out
sub
add
push
leave
push
sbb
arpl
jo
xor
adc
les
xlat
ret
add
andl
add
add
clc
out
xchg
lret
xor
cld
mov
jg
pop
das
inc
add
xor
cmc
adc
adcb
pop
addr16
outsb
lods
icebp
repz
pop
aaa
jp
jae
movl
inc
std
enter
mulb
jle
movsl
cmc
sub
xchg
jnp
in
pusha
jne
push
jae
loopne
xor
cwtl
fsubr
jmp
nop
sub
add
mov
push
out
ljmp
jp
mov
inc
lcall
je
addr16
pop
dec
and
mov
and
add
push
add
xchg
jbe
loope
std
lods
daa
dec
inc
xchg
xchg
jmp
push
movsl
cld
add
jg
jnp
jl
lret
xchg
adc
adc
mov
rcrl
stos
hlt
cmpsb
sahf
inc
les
jnp
inc
sbb
ds
loope
pop
jo
movsb
mov
cmp
pop
cmp
ss
mov
mov
pop
dec
inc
xor
push
fisubrl
or
call
adc
aam
pop
iret
adc
insl
mov
mov
mov
cmpsl
rclb
gs
out
inc
ss
insl
mov
mov
scas
sub
adcl
push
cmp
repz
cld
mov
add
pop
mov
xchg
mov
xchg
imul
cs
xchg
xchg
loopne,pn
adc
nop
cld
out
clc
aad
cmc
fisubrs
inc
push
imul
cmp
mov
mov
rcll
fwait
ss
shll
js
adc
jnp
out
into
das
mov
xchg
notb
xchg
push
adc
cmp
xchg
lock
clc
int3
leave
or
lods
and
or
imul
divb
scas
sbb
je
push
xor
dec
jg
stos
scas
mov
cld
dec
xchg
dec
mov
xchg
notl
jo
dec
js
in
xor
filds
mov
inc
pop
adc
mov
adc
leave
push
daa
push
push
cmc
sub
xor
gs
lret
lret
inc
cwtl
dec
aam
std
popf
jae
rcrb
sbb
push
test
sub
cmc
outsw
cmp
cmp
das
sarb
adc
pavgw
add
mov
or
cmp
cmp
out
push
pusha
test
loopne
test
aad
dec
jecxz
push
xchg
aaa
add
xor
or
aaa
aam
cmp
dec
add
xlat
mul
and
pushf
nop
jne
negb
jo
dec
dec
adc
jns
add
push
mov
ss
pop
cli
dec
imul
std
mov
out
xchg
cld
jg
imul
mov
pop
jmp
mov
pop
imul
andl
subl
pop
rcrb
inc
xchg
dec
ja
imul
xchg
nop
mov
xchg
sti
jecxz
daa
push
pop
testl
repz
pusha
sub
ss
cmc
push
adc
or
clc
lods
jae
ljmp
adc
testl
inc
popf
sarl
mov
stc
mov
arpl
pop
xor
xor
mov
push
es
lds
cwtl
pop
hlt
fstpl
bound
cmc
add
cld
mov
or
das
in
loope
jg
mov
mov
push
push
xchg
xor
imul
mov
into
scas
test
cmp
addb
out
loope
dec
push
je
out
sub
repz
inc
cmp
pushf
jbe
or
jo
cld
xchg
scas
fisubrl
insb
movsb
icebp
cmp
xchg
out
std
lcall
xchg
lea
lock
jae
mov
lock
mov
leave
jmp
jno
pop
out
testb
divb
out
or
xchg
int
test
notl
jp
scas
jmp
jl
mov
movsl
jle
mov
stos
mov
imul
adc
out
int3
push
outsb
js
out
mov
outsb
insl
and
mov
pop
xchg
adc
jo
fisubs
inc
daa
ds
inc
cmpsl
mov
jg
or
pop
adc
push
ss
adc
mov
dec
adc
inc
outsl
sbb
loope
sub
rcll
movsl
in
cwtl
push
std
and
movsb
jge
lsl
push
pop
outsl
into
faddl
add
fistpll
cmovbe
xchg
mov
jecxz
inc
jmp
xorb
repnz
pop
lds
leave
js
out
push
lock
xchg
rcrb
push
div
in
std
movb
decl
jg
loopne
push
ds
cmc
hlt
addr16
mov
dec
out
lcall
jmp
push
jle
add
and
mov
lock
xchg
addr16
clc
jmp
loope
mov
xor
and
xlat
push
pop
adc
ficompl
leave
push
pop
pusha
std
push
lret
push
cmc
cmp
push
pop
pop
cmc
mull
xchg
xchg
dec
jae
jl
test
pop
or
xchg
js
push
ss
ret
xor
ja
jno
mov
les
xchg
cmp
test
mov
xchg
jbe
add
mov
ss
ja
add
mov
inc
pop
loope
inc
ret
cli
fcmovu
mov
pushf
jle
out
test
hlt
lods
mov
lods
arpl
xchg
ljmp
jbe
cmpsb
mov
daa
push
mov
xchg
cs
int3
push
fnstenv
jp
idiv
mov
test
xchg
and
lret
pusha
jecxz
jnp
roll
jp
xchg
ljmp
stos
icebp
pop
lock
imul
cmp
xchg
push
add
push
hlt
jae
xchg
loop
sbbl
std
pop
arpl
outsb
stos
mov
nop
push
push
sbb
int
shrb
sbb
xor
inc
cwtl
xchg
xchg
jle
sub
cmp
imul
or
adc
popf
ficoms
into
movsl
cld
dec
call
in
lea
test
cs
cmpsb
pop
enter
sub
fidivrl
stc
repnz
scas
jl
xchg
mov
shlb
sbb
push
adc
mov
cmp
jl
push
jnp
mov
add
cmovbe
adc
fstpt
loope
push
adc
jg
test
or
push
push
xor
dec
repnz
pop
es
push
xor
into
mov
inc
pop
test
cltd
jmp
xchg
leave
scas
loope
mov
xchg
repnz
leave
mov
xchg
iret
or
mov
sahf
sub
jb
sbb
mov
roll
iret
clc
mov
in
add
xor
inc
mov
iret
xchg
or
loopne
dec
mov
or
and
lahf
daa
sub
lods
fwait
push
clc
je
xchg
cmp
jb
mov
fsin
dec
lea
cmpsl
cmp
xor
rcrb
mov
push
rcll
xor
jle
mov
lock
subl
pop
xchg
arpl
aam
rcrl
hlt
xchg
aaa
jge
aaa
je
out
or
fs
lea
int
pop
mov
pop
test
rcrl
inc
xchg
or
sub
dec
out
cs
push
shrb
push
pop
into
sbb
cmpsb
outsb
sbb
jmp
mov
int3
scas
pop
mov
rorb
pop
out
lods
fidivrl
inc
cmpsl
ja
add
push
repz
inc
cwtl
in
sbb
pop
jmp
and
cli
cmp
sahf
dec
fnstenv
mov
sbb
adc
dec
push
rclb
cmp
inc
xchg
daa
ja
push
rcrl
mov
sub
cmp
pop
fadd
jmp
scas
jne
sub
jne
pop
xor
xor
mov
sbb
jmp
xchg
and
ds
iret
imul
leave
mov
push
scas
in
mov
pusha
xchg
xor
push
cltd
inc
cmp
les
or
push
add
sbb
push
ds
and
cmp
dec
into
cmp
idivb
in
cmp
popf
adc
jl
insl
fnstcw
dec
inc
inc
mov
bound
ds
xchg
pop
test
hlt
cwtl
pop
inc
cltd
xor
adc
jne
shrb
push
sub
push
test
push
int
lods
test
sub
roll
mov
push
pop
fcmovne
mov
das
ja
popf
xchg
out
iret
jne
fimuls
push
push
push
iret
mov
out
and
or
movsb
push
mov
mov
push
in
push
ds
das
and
push
int3
jnp
outsl
cld
and
in
pop
sub
xor
imul
sub
leave
adc
xchg
scas
cli
jne
dec
imul
add
push
decl
mov
inc
mov
out
cmpsl
daa
std
into
sbb
enter
cltd
adc
ret
push
push
mov
or
xor
fisttpll
or
xchg
pop
test
sub
stos
jb
je
loope
jae
adcl
testb
lret
sbb
out
or
jb
jecxz
push
push
jle
dec
jp
or
cmp
lret
fwait
movsb
iret
push
aam
jne
xorb
lahf
jb
or
xor
aad
push
cs
divl
mov
push
icebp
sub
sti
int3
aaa
loope
orl
xchg
les
xchg
cmp
iret
jnp
aam
sbb
je
add
push
daa
jnp
cmp
adc
mov
lock
lock
and
shr
pop
dec
inc
push
push
icebp
push
iret
imul
fisttpl
cmp
pop
scas
loopne
jbe
mov
mov
push
pop
sbb
rcrl
sub
adc
test
push
negl
mov
and
mov
jl
pop
test
fcomps
aam
arpl
fwait
pop
xor
sub
jge
inc
push
jo
fldcw
and
rorb
std
sbb
std
daa
cwtl
movsb
mov
fwait
push
push
pop
pushf
cmp
and
add
lret
movsl
aad
pop
test
dec
addr16
into
mov
out
pop
xchg
mov
cmp
mov
lock
andl
inc
fstl
sbb
icebp
or
ss
daa
mov
imulb
sub
insb
test
scas
adc
cmp
add
imul
setb
aam
out
and
dec
add
clc
mov
loop
dec
and
je
mov
fs
aaa
or
and
movsl
push
xorl
cmpsl
divb
push
pop
mov
jbe
out
outsb
data16
popl
test
jnp
repz
mov
fldenv
xor
cmp
mov
mov
xor
out
icebp
cmp
movsl
mov
inc
aam
std
or
inc
jne
insl
jno
call
push
decb
sub
xor
adc
jmp
nop
add
hlt
in
cmpsl
sarb
loop
sti
push
push
push
mov
pop
je
sub
jns
call
xor
popl
pop
mov
xchg
sbb
call
pop
jbe
mov
cld
xchg
mov
push
jle
sub
jecxz
pusha
rcrl
push
pop
outsb
cmpsb
icebp
jge
test
in
xchg
incb
sbb
push
cld
imul
inc
jbe
jmp
jnp
or
push
pop
decb
push
xchg
mulb
inc
jnp
out
lahf
mov
mov
out
jno
pop
jg
mov
pushf
sub
rcrb
icebp
hlt
das
cmp
xlat
push
repnz
mov
stos
push
add
jno
mov
pop
mov
icebp
xor
or
fistpl
adc
inc
cmp
ja
push
jo
fists
fisubs
cld
sub
adc
repz
mov
xchg
xchg
dec
popf
idivl
pop
cmc
jmp
xlat
fcompl
ss
sub
mov
or
push
sbb
stos
mov
add
mov
cld
sbb
imul
jns
push
cld
outsl
aaa
cmpsb
inc
and
pop
test
and
decl
dec
mov
popaw
xor
inc
add
or
sub
inc
daa
dec
pusha
sbb
push
push
or
jne
cmc
ja
inc
xor
rorb
adc
xor
jmp
insb
pop
xchg
lods
inc
stc
mov
loope
pop
mov
jns
mov
pop
pop
test
push
mov
or
dec
repnz
outsl
inc
lcall
lods
adc
cmc
test
pop
jmp
jns
adc
hlt
add
mov
into
dec
js
std
fsubs
mov
adc
pop
lahf
or
adc
stc
pop
push
daa
push
lods
push
insb
mov
js
jo
mov
or
inc
loopne
test
pop
jbe
hlt
hlt
outsb
fidivl
mull
jo
enter
add
cmp
dec
add
push
jecxz
int3
js
fcomip
xchg
sbb
inc
jp
clc
mov
mov
cmp
scas
in
mov
icebp
xchg
into
inc
dec
sbb
fildl
jne
mov
lods
jno
pop
pusha
loop
pop
das
xor
pusha
adc
add
ror
cld
dec
pushf
mov
ss
pop
sbb
into
cmp
adc
ds
mov
daa
xor
jle
sub
adc
stos
andl
out
dec
insb
add
out
test
testl
xchg
loop
ficoml
ja
gs
lret
out
cmp
clc
sbb
adc
jno
xchg
xchg
aas
movsl
outsb
sbb
jg
out
je
push
testb
test
mov
dec
daa
scas
stos
mov
add
xchg
iret
jo
jb
call
mov
repnz
out
ja
pop
xchg
push
decl
insb
rorb
xor
lods
or
xchg
mov
add
ja
inc
adcl
cmp
pop
mov
out
scas
jae
cmc
xchg
cmc
nop
jecxz
popa
das
lcall
push
fld
lock
hlt
cld
jno
jo
pop
jmp
int
adc
dec
or
addb
cmp
cmovne
fsubp
and
out
mov
add
push
cli
test
mov
cmpsl
scas
pop
popf
stos
inc
icebp
movb
dec
loop
test
and
leave
sub
or
adc
out
movb
cmc
aas
mov
mov
sbb
test
jne
negb
mov
decl
adc
lcall
hlt
mov
out
jbe
xor
push
jecxz
adc
mov
je
je
push
scas
jae
std
jne
cs
mov
dec
jne
xor
movsb
ljmp
push
push
inc
daa
insb
push
lods
pop
je
mov
inc
mov
out
lock
xchg
aam
xor
fstps
stos
push
mov
cmp
xchg
dec
ljmp
icebp
cld
jge
fildll
scas
lret
out
dec
lea
add
loop
mov
pop
add
pop
jnp
outsb
popf
sbb
icebp
imul
jge
fcompl
ret
add
cmpsl
outsb
pop
iret
repnz
arpl
loopne
sahf
jg
sbb
cmp
xor
pop
xor
inc
xor
ret
xor
ljmp
in
imul
lea
daa
loop
in
sub
hlt
in
jbe
je
mov
ds
push
push
test
jl
cli
add
inc
cmp
jns
cmc
push
jl
jl
aaa
pop
dec
inc
mov
adc
push
jnp
test
jo
inc
adc
dec
lcall
das
inc
outsl
mov
jp
cmc
pusha
fwait
inc
push
int
push
insb
ja
pop
aam
lods
mov
inc
insl
push
push
test
aas
int3
cwtl
hlt
std
xchg
pop
push
je
sbb
pop
lds
cwtl
pop
les
pop
pop
je
test
dec
and
xchg
dec
notl
jne
sub
insb
je
dec
adc
divb
sbb
inc
jge
out
loop
test
fmull
dec
jl
or
testl
icebp
cmc
mov
lea
fwait
push
dec
and
hlt
pop
xchg
jo
mov
mov
lods
mov
idivl
mov
hlt
push
sbb
js
filds
add
jbe
maxps
leave
cli
test
dec
mov
enter
cmpsl
ss
push
sbb
lds
je
aad
lods
lds
fstpt
pop
cld
sbb
mov
nop
pop
test
xlat
dec
jne
stos
or
push
xchg
dec
jb
sti
jno
fnstsw
mov
dec
ja
pop
sbb
xchg
and
loope
in
and
scas
pop
arpl
aam
dec
into
push
mov
adc
dec
sarl
sub
in
insb
aaa
aad
rorl
outsb
fistl
out
mov
ss
adc
xchg
cwtl
movb
mov
fbld
xor
sub
pop
aaa
sti
push
jae
push
xchg
fmul
push
push
lret
mov
jo
xchg
mov
sub
push
and
mov
dec
xorl
inc
pop
sbbb
add
mov
push
loop
add
lds
xor
pop
push
adc
mov
ds
call
push
inc
pop
shlb
dec
stos
sub
scas
pop
jne
sub
mov
push
add
testl
jae
decb
arpl
outsl
mov
xchg
aas
aad
and
jns
sub
mov
jg
dec
hlt
lds
cmp
xchg
lock
push
ss
sbbl
pusha
pusha
mov
pop
push
push
mov
or
aas
repz
sub
mov
loopne
pop
jb
int
cmpsb
nop
insl
push
jmp
jb
inc
push
sub
test
dec
in
pop
cmp
or
pop
test
decb
incb
jbe
lahf
mov
sti
mov
aam
adc
jo
fistl
xchg
xchg
xor
lock
jb
adc
jl
fmul
inc
inc
cwtl
fstpl
in
xchg
iret
sti
mov
add
add
testl
int
sub
sub
lds
xchg
push
and
push
repnz
push
lds
imul
xor
outsl
jno
mov
rcr
test
clc
mov
sahf
xchg
jbe
pop
ss
adc
testl
add
roll
xor
fadds
cld
subb
add
test
add
mov
data16
loope
xorb
movhps
insb
mov
pop
cmp
test
out
icebp
adc
dec
add
std
push
es
xchg
cmpl
into
adc
fdiv
push
in
jae
cwtl
or
outsb
es
or
in
jae
js
les
push
jns
test
mov
out
frstor
leave
inc
and
cs
sbb
mov
inc
scas
iret
test
pop
bound
add
movsb
cli
mov
xchg
or
xchg
cmp
mov
inc
daa
js
invd
sub
xor
adc
add
pop
sub
pop
mov
mov
mov
adc
pop
mov
cmpsb
int
cmp
cmp
xchg
lret
repnz
xorl
cwtl
cmc
imul
adc
test
sti
fstps
xor
repnz
dec
int
movsl
cltd
mov
xor
mov
rcl
daa
dec
imul
fidivl
fnstcw
pop
stos
out
add
mov
test
cs
ds
dec
es
xor
mov
lret
push
movsb
jno
cld
lea
sbb
fwait
dec
pop
xor
pop
fwait
gs
leave
sbb
mov
pop
push
lock
push
out
sub
adc
xor
mov
ss
jne
in
jecxz
inc
lahf
jae
jmp
cmpsb
loope
push
out
xor
lret
mov
les
push
andb
adc
sbb
into
inc
mov
lcall
push
push
xchg
repnz
cs
push
addb
mov
sbb
dec
fucomp
lahf
sbb
sub
ljmp
push
repz
pop
aaa
xor
mov
or
arpl
push
cli
mov
int3
icebp
mov
jbe
addr16
mov
and
scas
lahf
push
pop
cmc
div
int3
js
ja
shlb
mov
stos
push
sarl
xor
mov
hlt
cwtl
ja
and
pop
test
dec
jecxz
mov
lea
roll
test
daa
xchg
in
es
cwtl
inc
inc
jp
mov
ss
cwtl
scas
mov
inc
lock
clc
xor
loopne
lea
cmp
xor
push
push
fidivrl
lret
push
inc
xlat
cmpsl
sub
and
pop
imul
mov
pop
das
adc
push
push
and
cmpsl
ljmp
pop
cwtl
lret
cwtl
cld
cmpsl
jno
out
jno
jnp
repnz
sbb
adc
cmc
pop
mov
jl
test
rorl
inc
mov
fld
jge
jbe
push
dec
jne
pop
adc
notb
sub
out
clc
cmc
je
lods
idivl
ja
add
mov
jbe
mov
jmp
pop
xchg
mov
fadds
push
imul
jge
cld
push
jmp
push
xor
sbb
out
push
xchg
in
fadds
incl
sbb
push
cli
outsb
xchg
jmp
jb
cld
or
into
lock
cs
sahf
mov
fidivrl
shrl
add
ja
lods
or
push
out
jl
sub
lods
jp
in
dec
xlat
jae
fsubp
test
movsb
inc
jne
das
lea
sbb
loop
or
mov
loopne
enter
je
xchg
dec
repnz
imul
xchg
mov
int
add
or
mov
loopne
cmp
lea
jmp
popa
mov
pop
xchg
scas
cli
jb
jg
xor
subb
jl
jno
into
dec
cmp
lcall
cmpsl
xchg
push
and
stos
js
xchg
daa
and
int3
ja
insb
js
sbbl
xchg
add
mov
hlt
mov
pushl
dec
jg
cmp
mov
adc
mov
dec
inc
out
sbb
jle
pushf
icebp
and
jns,pt
lds
cmpsl
nop
add
repnz
movsl
sbb
out
mov
jmp
jno
dec
fwait
repz
xchg
mov
test
adc
push
jmp
cmc
xor
xchg
shrb
cli
loope
sub
int
fmuls
mov
mul
int
fistl
leave
mov
cld
dec
jmp
movsb
repz
pop
shrl
mov
push
decb
jp
sub
xlat
mov
pop
mov
sahf
aam
rcrl
outsb
enter
xchg
mov
add
dec
adcl
mov
clc
jle
xchg
lcall
cltd
das
sub
push
sub
lods
xor
notb
insl
pop
xchg
push
xchg
popa
cmp
test
aaa
or
ficomps
or
nop
sti
xor
xlat
push
mov
lods
sbb
loopne
pop
cmpsb
jmp
stc
add
aad
sub
stos
divl
inc
fimull
push
fnstcw
test
rorb
mov
sub
push
mov
fcomp
pop
cmp
xchg
pop
in
pop
ror
adc
mov
mov
push
lret
sbb
mov
scas
movsb
adc
inc
mov
mov
push
pusha
test
ja
out
pop
pop
loopw
leave
jmp
jno
dec
std
xor
icebp
out
iret
sub
jmp
jbe
fldt
loop
push
sarl
shll
ja
mov
movsb
add
mov
test
not
fisttpl
sub
neg
dec
sub
fisttpll
insb
lods
mov
add
dec
insb
in
mov
mov
and
dec
sbb
movsl
cltd
pusha
lock
cs
dec
and
orl
push
xchg
dec
jno
mov
cld
inc
jns
loope
gs
sbb
test
xlat
jp
jle
loopne
push
and
sbbl
hlt
imul
pop
mov
jne
out
mov
mov
mov
dec
outsb
pushf
xor
iret
jno
and
xchg
xor
aas
add
sub
notl
push
jmp
sub
or
ffreep
daa
outsb
jns
and
rcl
mull
cmpsl
mov
hlt
out
mov
js
inc
xchg
mov
nop
jp
jns
jo
ret
std
and
je
fiaddl
into
push
rcll
mov
aad
mov
pushf
imul
add
cmc
pop
clc
push
cld
hlt
int3
je
ss
divl
push
hlt
cmp
push
jl
push
outsl
loopne
movsb
jl
fsubr
jp
js
sbb
jno
pop
inc
push
loop
xchg
mov
test
mov
add
ds
icebp
lret
dec
cwtl
loop
addl
dec
loopne
mov
pushf
pop
mov
mov
and
pop
xchg
jne
mov
jl
xchg
jecxz
dec
mov
mov
jo
jle
orb
cmp
cmc
cltd
push
push
xor
je
addr16
icebp
outsl
call
push
push
mov
daa
push
jae
mov
cmpb
xor
dec
cltd
push
xor
xor
add
shrl
call
loopne
out
xchg
in
gs
mov
xchg
cmp
xchg
mull
dec
out
stos
mov
add
inc
ds
movsl
jmp
test
add
adc
inc
in
call
cmp
or
push
lods
add
mov
fisttpll
pusha
adc
push
push
loopne
jmp
mov
xchg
lods
ficoml
sbb
add
ror
mov
sbb
cld
jnp
add
or
adc
lea
mov
in
adc
mov
and
outsl
mov
adc
jbe
fnstenv
jp
dec
mov
ss
cli
xlat
ljmp
pop
imul
clc
push
add
xor
lds
inc
xor
dec
les
fdivr
icebp
push
ret
dec
arpl
mov
jae
subb
daa
push
jle
xor
inc
xor
inc
mov
jne
fadd
or
div
addl
testl
sbb
jnp
scas
xchg
mov
cld
push
test
xchg
jo
pop
adc
sbb
mov
daa
addr16
dec
loop
icebp
xchg
push
lret
adc
clc
push
push
sarl
and
lock
sub
push
hlt
sub
sbb
js
cld
fildll
shlb
xchg
pop
cltd
sub
dec
xchg
add
and
sbb
ljmp
repz
movsl
test
fistps
aaa
ss
cmpsl
es
stos
test
inc
add
sahf
xor
cmp
repnz
les
or
lock
jnp
imul
push
xor
ret
mov
cmc
les
jmp
mov
push
push
xchg
sbb
mov
bound
xchg
ja
push
nop
mov
adc
out
xchg
cld
xchg
scas
dec
sub
cwtl
pop
pop
jle
iret
loope
daa
adc
popf
push
cmp
ficompl
nop
mov
pop
jo
cmc
jmp
fadds
cltd
daa
adc
push
fsubr
add
int3
lods
clc
in
arpl
rcll
or
mov
sub
lods
insb
std
dec
roll
lods
mov
push
out
enter
shl
fiaddl
test
mov
movsl
or
fcmovnu
ret
xchg
sbb
pop
dec
add
mov
mov
popf
es
pop
mov
outsl
inc
or
jp
movsb
sbb
orl
test
decb
cmc
sub
xchg
int3
jae
mov
mov
or
push
lods
adc
sub
nop
jge
mov
adc
xor
adc
out
xlat
loope
lcall
fnstenv
cmpsl
sub
push
cmp
ja
mov
fidivrs
cwtl
and
popa
sbb
add
lea
xchg
pop
cmp
mov
mov
adc
xchg
movsb
mov
mov
mov
xlat
in
xor
xor
stos
jns
movsl
jle
mov
cmp
inc
addr16
std
mov
jnp
add
lea
fisttpl
push
shlb
sti
xor
cmc
xor
dec
push
mov
ja
lock
xchg
xor
into
jnp
cmc
iret
jmp
jo
and
imul
fsubrp
sbb
sbb
ljmp
cmp
push
ja
add
mov
add
das
mov
adc
pop
stos
icebp
dec
clc
cld
mov
outsl
jmp
in
test
rcrl
pushf
xor
add
pop
popf
scas
xchg
dec
lods
pop
outsb
test
inc
xor
fimuls
js
data16
out
cs
xchg
int
imul
add
xchg
mov
sub
das
icebp
add
ja
ja
bound
imulb
insl
adc
mov
outsb
inc
nop
test
nop
test
xchg
test
xchg
fmuls
fnsave
push
jns
subb
jge
jmp
test
testl
orb
push
push
cmp
aam
sbb
cmpsl
jecxz
data16
sahf
gs
inc
popa
cwtl
jmp
jecxz
divb
jle
jbe
xchg
adc
pop
push
inc
outsb
xor
cmp
lods
pop
js
jmp
mov
jle
ss
jg
outsl
fnsave
jmp
stos
jae
roll
pop
daa
cmc
enter
push
sub
jns
xchg
push
out
jne
jl
adc
daa
ja
mov
jb
cld
xchg
fs
jp
cmp
fwait
das
shll
jae
xrelease
mov
pop
sbb
enter
fsubrl
out
pop
insb
cmpsl
ss
push
mov
pop
sub
ljmp
add
xchg
inc
xor
cmc
call
jg
and
fcom
test
enter
iret
cmp
in
mov
movsl
mov
lods
popf
aam
es
and
mov
daa
iret
mov
imul
jnp
inc
xchg
lea
sub
lret
pop
or
xchg
dec
test
jmp
sub
mov
mov
sub
push
imul
sub
test
mov
div
outsl
xchg
jecxz
xor
and
aaa
inc
shr
xlat
scas
cli
js
cmp
adc
clc
test
aad
sbb
je
scas
test
scas
pop
add
into
arpl
into
pop
jns
push
scas
cli
pop
ds
adc
inc
loop
jns
jmp
dec
mov
into
mov
imull
cli
or
test
mov
ja
push
nop
pop
aaa
pop
and
or
pop
idivl
dec
pop
mov
icebp
dec
inc
movsb
icebp
inc
jge
mov
in
js
lcall
add
jl
pushf
jp
inc
jge
clc
xor
mov
pop
jmp
cld
fcos
sub
mov
pop
inc
cmp
mov
imulb
icebp
gs
cmp
jl
pop
cmc
jo
cmc
fcomip
cli
movsl
adc
inc
out
pop
ss
loopne
pop
imul
inc
xor
arpl
xor
pop
into
insl
mov
or
in
jle
stos
or
cmp
mov
ja
mov
in
arpl
push
cmpsb
pop
push
roll
push
aaa
cmp
adc
negl
aaa
pop
mov
es
fadds
mov
mov
push
shrb
sbb
cld
mov
or
scas
jecxz
aam
mov
out
in
push
sbb
repnz
cmp
les
ret
mov
insb
testl
mov
mov
push
cli
test
popl
and
sub
repnz
inc
or
ja
enter
xor
mov
add
push
aaa
shlb
add
mov
out
cmpsb
inc
adc
pop
je
insb
push
sbb
sbb
fldl
orb
scas
js
inc
ss
jne
mov
dec
jbe
lahf
and
out
imul
pop
lds
insl
sti
test
xor
add
mov
divb
mull
adc
cmp
fwait
movl
xor
pop
int
icebp
sahf
adc
push
int3
clc
dec
jmp
shrl
xchg
push
mov
outsb
testb
xchg
jb
repz
in
jl
jmp
and
mov
xchg
jns
nop
sbb
iret
xor
jae
xchg
js
imul
push
mov
test
mov
out
push
in
sar
jne
push
add
gs
sbbl
adc
push
pop
fcoml
ja
pop
lds
pop
push
mov
adc
fcoms
std
mov
xlat
out
and
or
cmc
sbb
xchg
xor
jmp
cmpsb
or
cmpb
arpl
sbb
repnz
jg
andb
mov
in
pop
scas
inc
mov
call
inc
jl
xchg
push
cwtl
stos
rol
sbb
jbe
sub
movsl
lret
add
out
xchg
gs
fwait
cli
aam
xor
mov
jp
sub
in
jne
push
add
arpl
mov
lcall
jne
dec
mov
jns
daa
test
jbe
mov
cli
lcall
xchg
ja
or
rorl
loope
int
push
leave
push
xor
push
fld
dec
subl
push
dec
push
xchg
pop
xchg
int
dec
in
imul
mov
add
nop
pop
push
testb
icebp
push
dec
jl
nop
inc
mov
in
mov
mov
cmpsl
cmp
xor
xor
mov
scas
daa
pop
xor
add
cmp
push
rolb
cmp
mov
out
into
lea
dec
xchg
mov
push
rcll
mov
into
outsl
lock
lods
sub
xchg
ja
dec
sarl
inc
testl
push
jo
test
sti
pop
mov
in
jae
insb
insl
roll
xchg
or
pushf
or
fnsave
mov
cmp
fimuls
sbb
je
mov
fstps
mov
or
pop
inc
mov
cld
loop,pn
mov
mov
lret
test
cmc
ss
sub
cmpsb
ficompl
dec
xor
xchg
jg
imul
add
scas
pusha
dec
js
mov
jb
test
hlt
popf
jl
out
bound
out
mov
sbb
dec
jne
testl
dec
jmp
aad
push
int
inc
aam
sub
decl
ret
cs
popf
adc
ret
jbe
mov
out
xchg
cltd
dec
cltd
test
aaa
std
ja
push
mov
sbb
cmpsb
mov
fstl
fstpl
adc
push
test
and
in
movsb
push
fists
xor
imul
mov
jne
test
into
pop
mov
mov
or
imul
or
leave
lock
add
lock
test
cmpsl
adc
xlat
pusha
mov
fistpll
push
add
inc
iret
push
jns
and
jg
adc
inc
xor
and
das
gs
out
inc
mov
mov
cmpsb
dec
dec
aam
in
push
loop
mov
fistl
dec
push
jg
ja
sbb
push
sbb
out
cs
mov
sub
cmp
test
pop
hlt
cmpsl
lods
add
in
in
cs
xchg
adc
jns
add
mov
clc
ret
mov
and
mov
mov
leave
scas
das
lods
arpl
leave
out
push
pop
xchg
mov
out
and
cs
mov
insb
mov
add
pop
and
add
push
push
jno
sbb
pop
out
bound
insb
negb
aas
add
cmc
adcl
sbb
mov
pop
add
mov
xor
movb
in
or
adc
xchg
inc
xor
sub
out
into
jbe
movsl
xchg
popf
test
call
sub
dec
pop
mov
test
jmp
sub
rcpps
enter
inc
das
sub
call
mov
clc
pop
cmp
adc
addr16
test
jp
add
je
cs
mov
add
test
sbb
inc
idivl
push
shl
mov
mov
xchg
jle
inc
addr16
jl
push
xchg
and
and
push
loope
push
mov
lret
out
xor
adc
clc
sbb
push
shl
stc
sub
cmc
dec
mov
xchg
gs
hlt
cmpb
call
cmp
stos
stos
sub
mov
cmc
pop
and
ljmp
adc
scas
mov
push
push
mov
cmpsb
shlb
or
movb
testl
jnp
lea
cmc
insb
out
cmp
test
cld
lea
jmp
mov
sbb
stc
lds
mov
jne
push
cmp
fldt
add
out
cld
jmp
dec
in
sub
inc
lret
xor
sub
in
sti
mov
outsl
lock
int
add
dec
jo
sub
data16
dec
inc
cld
push
ja
mov
arpl
xor
mov
into
jmp
loope
adc
loopne
push
mov
outsl
repz
mov
jbe
cmc
iret
sbb
rol
mov
mov
inc
dec
mov
jo
addr16
push
xchg
insl
aam
in
int
arpl
std
out
movsl
imul
fwait
mov
xor
xor
mov
pop
cltd
cmp
mov
aaa
xor
movsl
sbb
xchg
and
loope
and
push
mov
je
cmpsl
jbe
out
jne
mov
hlt
pushf
add
cld
cmp
xchg
mov
pop
pop
ss
xor
ret
adc
gs
int
notb
mov
sub
sahf
ljmp
aas
push
aaa
insb
cmp
cmc
cmpsl
repnz
sbb
jbe
sbb
cmc
dec
xchg
mov
xchg
add
sub
lods
push
or
mov
or
sub
jl
jg
jbe
jne
mov
div
shrb
movsb
out
dec
add
mov
in
jmp
gs
pop
ds
es
outsl
mov
fstpl
xchg
xor
cmp
or
jl
or
cld
mov
dec
adc
sbb
pop
hlt
push
push
testb
insb
hlt
sti
xlat
jne
fwait
mov
xchg
icebp
push
pop
xor
in
xor
cli
fidivrl
adc
mov
cli
inc
jns
pop
sub
popf
jle
sbb
xchg
inc
push
out
pop
es
jb
shlb
fimuls
pop
lret
xrelease
inc
mov
and
jae
sub
pop
mov
pop
mov
in
mov
sbb
pop
repnz
xchg
je
insb
arpl
ja
aam
cmp
push
xchg
in
into
dec
or
aam
pop
push
jp
cmp
leave
repz
jl
je
jg
inc
das
adc
pop
mov
mov
xor
sub
fdiv
push
mov
std
and
test
lods
pop
mov
sub
cmpsb
cmpsl
cwtl
lret
or
imul
or
inc
rcll
mov
insb
mov
dec
cmc
insb
adc
pushf
jmp
mov
pop
mov
wbinvd
out
lds
xchg
push
inc
dec
cld
pop
insb
out
cmpsl
adc
pop
jo
mov
lret
out
lock
cmc
cwtl
mov
sbb
enter
insb
test
jae
xchg
and
or
jl
hlt
mov
dec
adc
aad
adc
sub
into
nop
push
xchg
xchg
dec
jl
cltd
imul
sub
push
push
cli
pop
ds
js
lods
push
add
mov
push
ficoml
pop
push
mov
push
lea
xchg
push
lds
push
pop
push
lods
enter
pop
add
xor
test
dec
jecxz
push
adc
xor
jmp
in
stos
and
repnz
mov
xor
push
add
or
and
dec
sub
loop
add
push
loopne
out
pop
pusha
mov
mov
hlt
rcll
mov
fcoml
cltd
mov
xor
in
incb
cli
leave
pop
arpl
adc
inc
loopne
test
pop
add
push
sbb
xchg
lods
imul
or
imul
and
dec
cmp
mov
pop
mov
test
clc
sbb
fldl
push
rorb
ss
imul
fildll
and
int3
jp
pop
iret
lds
inc
xor
dec
mov
dec
pop
mov
aaa
jb
inc
sbbl
xchg
fsubr
push
pop
add
cmp
stc
dec
fiaddl
sbb
into
sub
int
mov
fdivs
test
push
pop
mov
stc
sub
pop
sbb
shr
cltd
push
pop
ret
fstl
aam
jno
outsl
or
or
push
test
cmp
push
ljmp
out
pusha
shll
pop
hlt
lcall
lock
dec
out
or
push
int
add
aas
sti
sbb
cli
mov
pop
push
lock
in
mov
mov
mov
dec
xor
pop
jb
sbb
pop
addr16
xchg
adc
pop
dec
dec
lahf
repz
or
xor
shl
push
insb
psubb
hlt
jns
imul
pushf
mov
inc
shl
xchg
push
frstor
adc
pop
outsb
pop
hlt
xchg
jg
push
adc
adc
stos
ja
pop
aas
cs
xor
push
inc
pop
cmp
push
aad
jle
jne
decb
repnz
sub
push
dec
imul
or
dec
jo
stos
and
jmp
mov
cli
js
jmp
lods
or
adc
clc
mov
pop
and
or
addr16
lock
xor
pop
popf
pop
outsb
mov
lret
dec
dec
jl
cs
xchg
push
popa
jg
fists
mov
adc
push
cs
clc
repz
mov
jns
mov
or
movsb
add
insb
and
sub
je
rcr
lret
and
sbb
push
inc
pop
mov
cmp
pop
mov
add
daa
push
ja
adc
inc
and
xchg
xor
div
sbb
mov
clc
add
xchg
pop
lock
adc
inc
leave
and
xor
cmc
mov
or
loope
cmc
mov
push
rcr
or
or
sarl
pop
and
cld
es
mov
sub
je
fisubs
sti
jp
and
or
adc
pop
dec
pop
outsl
dec
cmp
mov
xor
lret
lods
adc
add
cmp
pusha
pop
jle
jb
xor
js
not
insl
imull
lret
lock
rol
lods
jecxz
scas
adc
xor
insb
lods
adc
pop
push
dec
adc
addl
mov
idiv
clc
ja
clc
sub
adc
jb
clc
adc
push
adc
xchg
xor
pop
adc
push
jo
cltd
sub
and
sbb
aas
shl
sub
jp
pop
mov
lea
jae
jle
setl
jno
clc
jae
jo
rolb
or
pop
dec
lods
push
divl
jb
adc
pop
push
mov
pop
adcl
iret
pop
mov
or
cmp
sbbb
fsubs
cmc
rolb
clc
xlat
icebp
mov
adc
repz
testb
mov
ljmp
push
add
dec
imul
dec
cmp
add
cmpsb
dec
xor
xrelease
sub
movsl
pop
test
loop
xchg
xor
test
sbb
dec
test
mov
ficoml
stos
mov
leave
mov
in
cmpsb
dec
in
xchg
insl
cmpsl
and
int
ret
sbb
mov
icebp
cmp
dec
lea
cmp
mov
jmp
push
xor
addb
mov
lods
fwait
push
push
clc
push
movsl
imul
lods
sub
cltd
mov
fnstcw
insb
in
int
xchg
lods
add
sub
cmpsl
shr
push
jmp
gs
inc
out
inc
and
jns
das
jnp
loop
scas
cwtl
imul
xor
lock
int3
mov
shr
lea
cwtl
push
das
and
cmpsl
inc
in
nop
daa
dec
cwtl
xchg
cld
mov
inc
fsts
repnz
int
vminss
mov
ja
push
testl
cmpl
xchg
dec
out
cmpsl
and
cmp
adc
push
std
cmp
sbb
div
or
push
mov
leave
in
mov
cmp
out
inc
mov
lods
mov
pop
ret
push
add
inc
iret
mov
aas
pop
sub
dec
or
popa
cs
loope
jl
jnp
popf
xor
ret
pop
fstp
aaa
xlat
inc
pop
movsl
jno
mov
pop
mov
xor
jo
pop
int
cs
mov
imul
int3
cmpsb
test
mov
xchg
lret
outsl
fnstsw
mov
xchg
je
push
jns
jge
sbb
jbe
mov
inc
mov
and
lock
mov
jo
insb
arpl
in
adc
test
pushf
test
out
push
mov
push
adc
cld
push
push
stos
int
sub
mov
cmp
icebp
jns
testl
inc
xor
push
into
pop
or
dec
inc
mov
push
std
leave
cmp
jl
xchg
scas
add
cmp
js
pop
sbb
in
imull
dec
jg
mov
push
fdiv
mov
pushf
jg
xchg
cmp
mov
lahf
cltd
in
repnz
sahf
gs
les
scas
roll
xor
js
leave
pop
mov
arpl
xor
je
jecxz
push
ja
dec
shll
add
adc
pop
pop
in
ficoml
and
popf
push
or
stos
dec
test
mov
lret
sub
cmp
dec
jle
jle
insb
mull
xor
sub
fwait
imul
lock
or
ficoml
cmp
or
pusha
xor
lods
out
adc
dec
mov
out
xor
xor
jmp
mov
aam
fstl
fsubl
xchg
into
dec
jp
jae
lret
cmc
inc
sti
scas
adc
mov
push
push
dec
dec
lret
mov
pop
xchg
cli
ret
cmpsb
call
test
pop
sbb
cs
push
add
pop
cmp
mov
inc
jb
sbb
jae
mov
adc
pop
aad
rorb
cmc
mov
dec
test
insl
mov
loop
xor
cwtl
icebp
jb
sbb
pop
daa
pop
jp
or
xchg
cli
pop
in
dec
ljmp
lods
jo
pop
sbb
push
mov
ds
jg
inc
push
nop
jbe
lock
mov
nop
xor
sti
sbb
xchg
inc
cmp
mov
jo
dec
pop
xchg
adcl
jp
jae
arpl
enter
aas
insl
ja
stc
pop
mov
cli
push
insb
fidivs
nop
jle
aaa
arpl
adc
mov
and
mov
jg
addr16
cmpsb
add
scas
jne
loopne
jmp
repz
sahf
xor
mov
inc
mov
popa
sbb
into
add
jno
cmp
jb
movsl
xor
lea
iret
mov
aaa
xor
inc
add
adc
sub
xchg
push
sarl
fnsave
test
je
arpl
inc
ja
jae
add
js
jp
ror
xchg
push
dec
hlt
rorb
rcrb
dec
mov
adc
sbb
mov
mov
rcrb
sti
icebp
lea
adc
lea
sbb
mov
orl
xchg
std
dec
sarl
hlt
pop
and
jle
jecxz
dec
sub
and
dec
scas
inc
jns
inc
push
call
jne
lret
push
push
data16
imull
out
lea
data16
add
loop
pop
icebp
mov
mov
fidivrl
loopne
andb
sahf
mov
jns
shll
push
sbb
push
mov
ja
adc
pop
lods
movsl
fstl
push
add
inc
dec
icebp
adc
pop
xchg
into
or
cmc
jp
mov
js
into
inc
adc
cli
popa
inc
cmc
ss
pop
ja
test
neg
inc
insb
mov
jo
loopne
adc
mov
sub
sub
imul
mov
inc
adc
popa
xorb
out
jmp
sbb
je
sbb
das
adc
icebp
jmp
test
ds
aas
sbb
out
cmp
mov
mov
pop
mov
jb
iret
jecxz
mov
and
push
jmp
push
xor
pop
lock
jecxz
jge
in
mov
js
cwtl
sub
and
out
test
jno
aam
into
xor
inc
mov
call
jle
push
jbe
push
xchg
sbbb
mov
sbb
out
or
and
repz
push
cmpsl
fisubl
hlt
xor
mov
and
stc
inc
mov
mov
dec
repz
jg
sub
mov
mov
inc
sub
sub
into
xlat
loope
std
mov
pop
rorl
cmp
jb
jecxz
cltd
addr16
jns
cmpsl
lds
insb
dec
dec
call
push
rcrl
mov
sub
ret
movntq
cld
xchg
mov
xor
adc
dec
mov
notb
fmul
push
insb
dec
stos
into
adc
xchg
out
ljmp
jmp
outsl
dec
sub
cmp
xor
jae
push
mov
insb
pop
sub
lret
xchg
pop
shrl
dec
xchg
dec
cmpsl
add
and
push
push
jns
call
push
movsb
std
jmp
jnp
push
test
fsubrs
mov
mov
aaa
sub
test
jg
in
mov
sub
sti
dec
fs
pop
pop
xchg
cmp
pop
stos
sbb
and
cli
jl
sub
and
lret
test
inc
push
imul
ds
sbb
mov
cmc
adc
loopne
cmpsb
jl
inc
sbb
add
sbb
icebp
push
nop
fcmovbe
clc
add
loope
mov
shlb
sub
jp
push
cwtl
cmp
sub
lock
and
dec
sarl
dec
int
lods
clc
cwtl
mov
pop
jecxz
jle
sub
les
icebp
iret
leave
packuswb
insb
scas
addb
push
mov
xchg
jg
sbb
mov
ror
jle
mov
lret
xlat
cmpsl
outsb
repz
in
and
adc
xor
inc
xor
cmpsb
mov
mov
push
test
divb
sbb
daa
jno
out
mov
je
out
push
xchg
cltd
push
add
in
dec
adc
out
loop
xchg
mov
lea
fisubrs
mov
aaa
call
adc
adc
xor
aam
flds
je
cmp
sahf
out
cmp
stos
lea
icebp
sbbb
shlb
arpl
pop
rol
hlt
xor
jp
xor
and
pop
adc
jb
mov
stos
lcall
mov
pop
xchg
mov
adc
push
imul
insb
pop
ja
test
cltd
repz
mov
adc
pop
sbbl
scas
into
ja
inc
lods
test
ja
fs
xchg
test
adc
ja
inc
inc
mov
jmp
inc
orl
js
ss
lea
loop
push
aaa
pop
aas
push
out
mov
in
fdivs
pushf
inc
ss
push
insb
fnstenv
ffreep
cmp
mov
aas
xor
mov
push
pop
cmp
mov
inc
rorb
xchg
adc
push
testl
pusha
dec
mov
mov
in
aaa
and
cltd
pop
out
addr16
push
pop
ss
sti
xor
sub
xlat
cld
bound
jb
jbe
adc
das
roll
mov
adc
imul
lods
xlat
push
mov
dec
sbb
sub
dec
clc
dec
stos
add
sbb
mov
pop
xor
lret
out
clc
cs
or
xchg
cmpsb
fdivrs
mov
imull
fimull
inc
add
out
push
pop
jae
adc
cmpsb
pusha
push
push
sbb
mov
in
fdiv
loopne
mov
std
test
movsl
inc
or
out
imul
loope
and
lods
mov
in
fs
retw
sub
fwait
cmpsb
inc
enter
pop
iret
jno
call
mov
aad
outsl
fstpt
jp
aas
out
iret
inc
loopne
xlat
jns
je
test
inc
scas
aaa
ss
imul
mov
pop
xchg
or
jnp
in
shrb
push
add
orl
addr16
aam
jnp
pop
scas
cld
lods
outsl
adc
xor
stos
ss
push
pop
inc
sahf
les
pop
mov
sbb
fldlg2
sahf
jne
mov
daa
cmc
daa
loop
fcomip
mov
sti
insb
arpl
dec
or
mov
movsb
push
into
pop
cltd
ja
mov
sarb
sub
div
sarl
cmc
int
and
sbb
scas
shr
repnz
mov
test
jae
aam
sub
sbb
pop
or
hlt
out
lret
sbb
je
pop
fidivs
orl
loopne
xchg
imul
inc
and
cltd
pavgb
mov
sub
cmp
cmpsb
xchg
sub
push
mov
test
cmp
out
add
bound
insb
inc
cmp
out
push
pop
add
and
movsb
aaa
movsl
mov
mov
jo
inc
pop
cmovle
sub
scas
xchg
cmp
mov
add
inc
in
fidivl
out
or
sub
push
pop
jo
lods
mov
lret
rcll
mov
cmp
cmpsb
push
mov
ss
fldl
add
mov
cmpsl
cmp
cmp
js
or
mov
icebp
sub
out
adc
sub
mov
aas
mov
outsb
into
cld
in
mov
push
repz
out
outsb
shl
lods
lods
in
add
js
cld
sbb
fstps
adc
pop
jbe
in
xchg
int
pop
out
push
lahf
testl
push
rclb
scas
sbb
outsl
push
pusha
sahf
adc
inc
xor
jbe
mov
fidivrl
add
mov
mov
mov
cld
sarl
add
push
xor
movsl
pop
imul
push
jmp
push
pop
push
dec
sub
out
inc
cli
or
das
fistps
dec
in
into
movsb
int
test
pusha
jmp
xchg
fisttpll
dec
ficomps
call
cmc
and
xchg
movsb
mov
or
push
mov
addl
cld
xchg
clc
scas
imul
add
cmc
andb
jae
in
fsubr
pop
and
inc
add
outsl
and
repz
hlt
cmc
cld
fsubs
sbb
scas
cltd
pop
xor
cmpsb
ficoml
jns
jecxz
xor
dec
mov
jno
test
je
jno
cld
xchg
jo
jne
jb
pop
adc
inc
jecxz
cmpsb
cmp
push
add
push
mov
hlt
arpl
aaa
jae
iret
push
out
inc
test
push
loop
into
cwtl
xchg
mov
mull
pop
test
aas
mov
jb
mov
pop
mov
rorl
scas
push
pop
jae
loope
or
mov
mov
loop
adc
jns
add
lea
into
hlt
mov
mov
pop
out
fsubrl
cs
in
xchg
xchg
add
or
scas
movsb
mov
inc
jb
pop
jg
dec
mul
pop
mov
mov
pushf
push
xchg
in
test
subl
mov
and
mov
loopne
mov
push
enter
xor
inc
in
ja
ja
daa
outsb
xchg
testl
jecxz
lcall
dec
cmpsb
xchg
lods
shrb
push
daa
inc
mov
dec
sub
adc
adc
shrl
loope
jb
repz
mov
jge
das
cmp
jns
push
divl
xchg
adc
xor
sbb
dec
xor
movd
jecxz
push
rol
xchg
push
fbstp
jp
js
jne
sti
push
dec
xchg
dec
push
pop
sbb
jo
cmp
insl
pop
adc
mov
mov
lret
loopne
clc
int3
loopne
std
dec
dec
push
xor
xorl
stos
pop
sub
mov
test
xor
movb
jbe
jg
lock
pop
xchg
push
xchg
sti
sub
xchg
jl
mov
add
inc
into
xchg
or
xor
insb
lea
inc
ss
sbb
sbb
mov
dec
lret
pop
jno
out
js
daa
out
sbb
outsl
pop
dec
test
push
loop
insb
aad
pop
sub
mov
xor
dec
ja
pop
inc
daa
insb
fmuls
mov
sti
sub
mov
jnp
xor
dec
mov
jns
xchg
jl
dec
and
js
xlat
out
test
mov
shrb
sub
cmp
popa
ljmp
adc
ds
das
adc
hlt
iret
add
aam
sub
cltd
outsl
data16
movsb
jle
mov
mov
pop
into
and
mov
jl
push
mov
xchg
sub
icebp
jb
dec
aas
je
std
rolb
xchg
jbe
ljmp
jo
test
pop
mov
xor
or
fsubs
push
pop
xchg
pop
dec
sar
pushl
mov
mov
sbb
test
and
int
push
lcall
mov
cwtl
out
push
scas
or
repnz
adc
in
or
clc
ds
xchg
and
lods
jle
jb
cmp
xchg
jmp
push
adc
mov
loope
sti
icebp
inc
call
rcrl
scas
sti
mov
lea
push
out
mov
mov
iret
out
inc
cli
out
into
sub
in
in
xor
in
addr16
pop
imull
clc
adc
cmp
push
fildll
out
and
pop
jns
insl
jecxz
adc
mov
icebp
sbb
dec
in
xchg
xor
jecxz
es
aaa
aam
scas
insb
outsl
scas
cmpsl
add
cs
cwtl
jbe
adc
mov
or
daa
pop
dec
jns
mov
loope
mov
jnp
inc
and
in
fldenv
gs
adcl
lcall
cld
xchg
arpl
add
inc
jno
mov
rcr
dec
xchg
cld
js
sbb
dec
fs
cmc
mov
push
adc
in
xor
cmp
inc
into
or
scas
push
add
xchg
cwtl
in
nop
inc
dec
repnz
xor
push
int3
jle
sub
jle
cmp
xchg
push
adc
inc
push
cmp
fcmovnu
mov
pop
xchg
ret
ss
jns
xor
cmpb
xchg
cmpsl
pop
lahf
pop
xor
add
mov
cs
add
and
cmc
js
idivl
dec
nop
mov
hlt
fldcw
stc
out
std
daa
scas
clc
push
clc
movsl
fidivl
pop
jne
insb
aaa
push
nop
in
sti
inc
out
cmpsl
inc
jbe
stos
inc
nop
in
mov
imul
repnz
lods
imul
cmpsb
cwtl
xchg
pusha
jecxz
test
mov
adc
sub
scas
mov
mov
or
mov
adc
scas
shlb
test
lret
fs
xlat
xchg
nop
out
pop
stc
xor
ljmp
push
mull
mov
adc
mov
inc
rcrb
fcoml
lods
pop
int
jl
or
xor
ret
jo
add
loopne
dec
sub
ljmp
into
int
jle
sbb
push
pop
pop
inc
and
aas
jmp
jmp
pop
pusha
jo
idiv
icebp
es
shlb
int3
mov
or
ss
jp
insb
xchg
ja
mov
call
rorl
sub
sub
jmp
lock
xchg
stos
sub
cli
mov
outsl
mov
and
xor
push
mov
jae
or
pop
mov
outsl
shlb
cs
shll
out
js
mov
or
lock
jae
inc
not
jg
dec
popf
iret
jo
xor
jae
mov
push
or
loopne
aad
fs
xchg
or
jns
adc
xor
les
or
mov
pop
loope
shll
xor
push
jnp
lret
pop
mov
push
gs
xor
xchg
dec
or
ljmp
icebp
sti
and
cmc
xor
je
sbb
sbb
cltd
mov
add
sub
mov
xchg
mov
notl
aaa
inc
xor
sbb
js
jae
xor
sub
push
pop
movsl
mov
outsl
test
mov
imul
jl
out
xchg
hlt
dec
test
mov
sbb
push
lcall
into
shll
jae
or
sub
and
or
lods
push
and
outsb
fmuls
jno
loope
push
push
push
leave
addr16
pop
jp
pop
out
pusha
mov
into
cwtl
xor
ret
or
sub
call
aad
and
jbe
push
dec
mov
flds
mov
ss
dec
xchg
nop
leave
outsl
jmp
test
in
test
in
jmp
jb
push
rcll
pop
inc
daa
jns
jbe
lds
out
or
loope
addr16
mov
clc
xor
clc
addr16
pop
xchg
or
inc
sub
std
sub
jne
es
mov
lret
imul
nop
cld
pop
int3
dec
inc
aaa
insb
mov
fmuls
cmp
xor
leave
mov
push
int3
adc
inc
mov
jp
es
cld
js
adcl
adc
lret
adc
div
negb
cmp
popa
sbb
arpl
mov
xor
test
dec
xchg
mov
insb
mov
lea
shrl
bound
addb
cld
mov
lods
popf
xchg
jbe
arpl
mov
jecxz
cltd
xor
push
aas
push
cld
sbb
test
inc
cmp
jmp
add
xor
jp
pop
popf
daa
bound
rorl
cmp
stos
mov
sub
cltd
in
dec
mov
js
das
jnp
inc
pop
jmp
out
pop
incl
movsl
sahf
jbe
scas
mov
gs
mov
sub
ret
sub
sub
add
dec
out
movsl
adc
std
cmpsb
imul
fcmovnb
pop
mov
push
and
out
jmp
fimull
jnp
aas
sbb
or
jp
xchg
addr16
xchg
out
jae
or
mov
jle
push
rcrb
loop
pop
fistpl
xor
cli
fildll
outsl
xrelease
pop
pushf
es
out
xlat
scas
push
inc
loope
pop
dec
hlt
or
add
xchg
or
aam
pop
int
lock
pop
adc
scas
pop
cmp
outsb
cmp
ret
pop
fdivr
sbb
xchg
sbb
mov
or
cmp
push
lods
cli
add
push
xchg
cmpsb
mov
lods
pop
in
clc
shll
rcrl
das
loopne
in
imul
lret
aad
daa
test
mov
mov
xchg
pop
jns
cmpsb
mov
imulb
jl
lods
outsl
out
decl
into
rcrb
lods
jns
out
inc
cltd
rclb
mov
aad
xor
outsl
mov
addr16
adc
popf
ja
jg
daa
pop
das
and
mov
cli
sub
std
mov
jmp
fsubr
cld
aam
arpl
pop
js
push
adc
pop
fwait
sub
outsb
insb
imul
lock
rcr
popa
lahf
mov
xchg
mov
int3
mov
sahf
popa
push
movsl
mov
mov
xchg
ss
mov
std
cwtl
scas
cld
ljmp
push
sbb
pop
addr16
int
jmp
daa
test
mov
add
incb
dec
cmp
sub
test
nop
cld
stos
sti
rcl
mov
push
addr16
pop
jmp
xchg
mov
cmpsl
push
jne
pop
jp
lods
xor
adc
adc
pop
jp
adc
incl
lods
mov
fnsave
fwait
lcall
fsub
daa
sti
cld
cmp
out
clc
add
pusha
xor
jle
dec
xchg
sub
sbb
pop
jnp
or
insb
add
jb
push
add
jnp
cmpsb
fiaddl
into
cmp
push
insl
pushl
pop
mov
pop
in
divl
shr
shl
xor
adc
pop
push
dec
lds
mov
lock
mov
ja
sahf
outsb
cmc
jae
xchg
ror
out
ss
push
jmp
and
xor
pushf
in
stos
int3
das
fcoml
sub
hlt
xor
fidivs
loope
sbb
fisttps
int
lcall
jbe
xchg
mov
mov
cs
pushf
or
pop
mov
lret
push
dec
jge
xor
decb
in
dec
sbb
pop
jns
push
out
cli
fdivl
jns
mov
xchg
icebp
popf
dec
rolb
lods
push
sbb
xor
insl
jnp
push
enter
lock
int
adc
inc
push
daa
jmp
dec
rcl
clc
sti
into
jl
dec
cmc
pop
movsb
xchg
addr16
mov
mov
arpl
icebp
mov
push
arpl
cltd
sbb
adc
xlat
cmpsl
shll
scas
ds
idivl
dec
test
mov
in
shll
adc
inc
push
dec
mov
ret
in
pop
push
or
push
push
xchg
test
mov
mov
jne
dec
push
push
sbb
cwtl
pop
add
rcrb
sub
sti
out
jl
mov
testl
stos
xchg
adc
jns
jne
add
add
pop
mov
mov
mov
and
lods
add
adc
adc
cmpsl
mov
mov
inc
mov
and
sub
div
clc
out
jbe
push
bound
mov
wrmsr
jb
fisubl
mov
ss
aaa
testl
pushf
dec
addr16
test
lret
arpl
xor
pushf
mov
adc
or
cmp
sub
push
cmp
xor
mov
int
xchg
inc
nop
jbe
adc
clc
scas
ficompl
ficomps
stos
xchg
into
dec
test
jle
bswap
or
jg
adcb
sbb
cmp
cmp
pop
shl
ljmp
pop
sub
das
adc
xor
fcoms
add
cld
outsl
inc
ret
mov
jns
pop
xor
int
jmp
loopne
imul
jb
lods
cmp
enter
shl
cld
fstl
fnstenv
fsin
jns
jmp
clc
ja
cmp
roll
adc
mov
and
cld
jl
mov
clc
cwtl
cli
pop
pop
push
sbb
out
pop
sub
jns
rcl
out
ss
popf
xor
shl
daa
repnz
mov
lock
bound
notl
cmp
rcrb
lds
outsl
add
call
xlat
jecxz
add
ljmp
ret
add
daa
lods
cmp
xor
cwtl
inc
jecxz
mov
push
dec
xchg
insl
cmpsb
mov
lcall
stos
hlt
dec
cs
pop
mov
pusha
and
nop
adc
add
lock
cli
sub
fidivs
adc
clc
shlb
jle
aam
icebp
in
pop
mov
bound
dec
dec
xor
push
cmpsb
test
push
test
shll
push
pop
mov
ret
std
mov
sub
shll
sub
hlt
dec
movsb
sub
add
mov
push
push
xchg
add
mov
dec
mov
push
jns
ds
not
xlat
xor
xchg
jae
daa
divl
sub
mov
pop
mov
test
arpl
aas
test
daa
leave
cmp
jbe
ds
mov
pop
mov
cmp
add
out
testl
rcrb
addr16
xchg
push
mov
pushf
das
push
inc
imul
notl
xchg
clc
cmpsl
fldenv
cli
pop
inc
dec
adc
push
int
sar
pop
mov
rolb
xor
sub
lret
addb
sahf
sarl
insb
fisttpll
imul
mov
int
inc
cs
dec
inc
lahf
mov
jo
and
movsl
or
clc
sub
cli
cmpsl
js
sar
mov
bnd
cmpsl
xchg
shl
push
sub
es
cmp
push
cmpsl
outsb
mov
mov
mov
inc
loope
jbe
or
cmp
mov
scas
hlt
push
dec
xchg
xchg
lock
pop
cmp
popaw
push
scas
aaa
mov
and
fsubl
cmp
jg
pop
idiv
enter
roll
jno
cli
mov
clc
in
cld
xchg
aam
es
scas
add
iret
pop
fcom
cmp
push
sub
test
lods
fs
jg
fdivr
dec
mov
fdivr
sbb
ficoms
aas
jb
xor
out
nop
lock
rclb
xor
xchg
out
cs
add
cli
mov
dec
daa
inc
daa
lcall
dec
add
ja
lods
mov
lock
ja
rorl
addb
sti
fisubs
js
sbb
dec
sbb
fcmovnb
mov
incl
cmpsl
jne
xor
xor
push
ja
sub
sbb
ss
int
add
imul
cmpsb
fisttpll
xchg
jo
jns
push
jg
pop
adc
bound
insb
jge
xchg
lcall
push
mov
movsl
inc
loopne
cmp
jb
jge
test
mov
xor
push
repz
mov
loop
movzbl
bound
xor
cmp
mov
out
mov
jecxz
rcrb
test
nop
bound
add
mov
lret
cli
clc
insl
pop
cmp
out
cmpsl
nop
nop
repnz
repz
cld
xor
loop
or
nop
insl
mov
hlt
clc
mull
repz
icebp
mov
stos
push
push
sbb
inc
sbb
fs
mov
mov
shll
loopne
adc
jbe
in
fldt
fld
lret
js
les
xchg
mov
jle
mov
lcall
test
out
outsb
pushf
arpl
in
outsb
int
pop
xchg
pushfw
fildll
jg
jnp
jo
xchg
jge
sahf
dec
or
pop
out
imul
sti
idiv
aaa
jp
push
bound
cmpsl
adc
dec
push
push
out
out
popa
test
cmpsb
popf
push
dec
pop
pop
mov
mov
cmp
iret
shrl
cmc
push
movl
popf
mov
pop
aas
cmc
addr16
jae
out
outsl
out
mov
cltd
pop
outsl
add
test
jb
idiv
mov
stos
jno
push
stc
lret
lret
cmp
int
or
outsl
fmull
lock
sub
inc
jbe
or
data16
mov
lds
mov
icebp
pop
sbb
dec
cmp
xchg
inc
aas
ret
sahf
daa
pop
mov
and
imul
scas
xchg
movntps
outsb
je
xchg
imul
ficoml
loop
xlat
into
aad
jbe
xlat
scas
and
hlt
addr16
out
js
lea
cld
xor
lret
push
cmpsl
jnp
mov
imul
dec
jne
xor
test
cltd
jo
xchg
fldcw
out
lcall
pop
adcl
cmp
ficoml
dec
push
popf
scas
or
daa
pop
mulb
ja
push
out
inc
add
add
cmc
mov
shrb
fiaddl
aas
xor
lods
loopne
in
cmp
inc
popa
xlat
cmpsl
mov
sub
subb
aad
cli
cmp
test
dec
sahf
add
mov
and
mov
addr16
mov
cwtl
aam
fsubl
cmp
daa
lock
mov
clc
xchg
clc
cmpb
cli
pop
xor
addr16
push
insl
push
fidivl
push
icebp
scas
mov
jg
xchg
loop
sbb
out
mov
aaa
adc
mov
jmp
sub
jbe
aad
addr16
bound
imul
inc
scas
mov
out
xor
out
xlat
xchg
lods
adc
popf
pop
mov
sbb
sub
jne
xor
addr16
sahf
or
cld
ss
jmp
dec
inc
sbb
notl
daa
bnd
into
popa
scas
add
xchg
adc
push
add
push
sub
outsl
insb
lods
icebp
jnp
pop
pop
fdivrl
out
sub
fucomi
fdivs
add
clc
sbb
popf
jbe
cmc
mov
subb
lods
inc
jae
add
sub
and
fiadds
stos
jno
das
or
add
insb
int
sbb
enter
cmpsb
cltd
and
jo
jmp
adcb
jae
and
addr16
xlat
mov
inc
popa
clc
out
mov
ret
xchg
dec
xchg
sub
mov
push
scas
xchg
out
insb
cmp
mov
xor
dec
jp
pop
and
cmp
mov
or
mov
out
jmp
add
cmp
xor
jge
cmc
out
mov
fdivs
pop
add
or
pop
mov
push
or
pop
xor
ja
test
mov
xlat
or
andl
ss
mov
or
psubw
push
push
jne
hlt
xchg
js
lds
dec
sbb
sub
cmp
rorb
test
dec
cmp
dec
jp
cmp
sti
xlat
lcall
inc
into
mov
or
cmp
dec
sbb
dec
stos
jp
cli
std
cmpsb
cltd
inc
jmp
pop
dec
jo
mov
repnz
fsub
test
push
jne
push
push
and
push
jg
fnstsw
inc
int3
data16
stos
jecxz
jg
pop
xor
cmp
sub
mov
cld
cmp
cld
mov
sub
mov
push
sub
xor
lods
inc
jl
mov
popa
outsb
outsl
jg
xchg
scas
clc
mov
xor
repnz
cmpsb
arpl
cmp
or
adc
xlat
push
xlat
in
fcoml
sbb
repnz
mov
jnp
loope
mov
in
or
push
mov
jecxz
jmp
sbb
loope
dec
out
sub
jb
aad
mov
xchg
jmp
jae
adc
push
mov
adc
push
lea
les
mov
mov
xor
mov
lock
hlt
cmpsl
push
sahf
push
lds
dec
cmpsb
mov
cld
fwait
jns
or
mov
xchg
push
sbb
fs
xor
es
xchg
jne
add
mov
fimuls
decl
outsb
mov
pop
test
xlat
adc
cmp
adc
push
mov
mov
push
or
sub
cmpsl
jo
fnstcw
add
cmp
into
sbb
mov
push
lret
out
jg
and
ret
cmpsl
in
cld
mov
lds
xorl
out
scas
and
adc
mov
outsb
xchg
sub
jne
sub
out
subb
out
or
mov
sbb
ja
not
xchg
inc
sub
mov
insb
ja
adc
mov
xor
push
add
jg
adc
stos
jbe
inc
mov
lret
adc
call
test
mov
loop
xor
xor
sub
testl
cmp
and
sbb
outsb
or
into
jmp
push
mov
dec
and
inc
clc
xlat
jo
cwtl
movhps
test
inc
adc
or
nop
in
mov
cmpsb
insb
jge
xchg
xchg
mov
sahf
mov
pop
push
les
and
xchg
dec
mov
pop
jne
ss
sahf
mov
nop
adc
jae
add
imul
mov
shlb
sub
ljmp
movsb
test
ret
cs
es
push
lods
jae
imul
or
cmpsb
adcl
jb
push
ret
inc
arpl
enter
cld
jne
jge
jecxz
insl
outsb
adc
repz
addr16
roll
sub
add
adc
jbe
inc
adc
xor
mov
jno
les
or
sets
lods
mov
outsb
push
insb
out
add
imul
adc
ds
loop
mov
sub
dec
stc
aaa
and
fcoms
push
testl
nop
xor
jge
lods
lea
cmp
or
pusha
mov
fldl
cld
push
jecxz
sub
jmp
loopne
push
bound
iret
inc
adc
das
cs
out
mov
sub
jle
push
hlt
fistl
jno
arpl
xchg
add
dec
dec
pop
fs
insb
cmp
mov
fs
jbe
mov
repz
int
mov
jns
das
dec
jecxz
jns
ficomps
mov
ss
daa
or
push
out
dec
add
push
and
jecxz
idivl
popa
sub
or
icebp
inc
test
cmp
sbb
adc
xor
jecxz
xor
fwait
jns
lods
nop
dec
cli
and
cmpl
dec
jmp
adc
das
push
rol
repz
jb
inc
cld
inc
shrb
jbe
mov
inc
in
rclb
addr16
mov
gs
xchg
dec
hlt
push
adc
xchg
push
leave
add
aad
cmc
and
dec
jnp
xor
loop
shrb
and
rorb
pop
xchg
idiv
inc
negl
int
adc
inc
cmp
dec
push
inc
aam
sbb
push
mov
adc
cmpb
into
inc
sti
jb
push
jmp
imul
movsb
insb
mov
out
cwtl
cld
ret
add
push
xchg
vpsllw
into
dec
mov
fadds
ja
mov
mov
fmuls
in
or
addr16
ja
adc
cwtl
push
aaa
mov
dec
cld
adc
addl
cmc
lcall
push
nop
test
sti
out
sbb
fcoml
int3
je
or
lcall
mov
test
or
jne
insb
xchg
xchg
js
xchg
fildl
sbb
mov
push
lock
jg
cmp
mov
dec
es
std
ja
loope
xor
imul
loope
insb
decb
dec
xor
into
shlb
in
and
pop
push
push
fcomps
popa
adc
adc
arpl
fistps
and
sub
in
popf
out
shl
hlt
shrb
adc
push
jo
test
testb
mov
in
xchg
mov
push
xorb
pop
pop
les
sub
mov
xchg
imul
inc
out
mov
incl
xchg
lahf
jns
push
das
out
sarl
sub
cmpxchg
jns
clc
pop
pop
jns
lea
xchg
sub
mov
xchg
or
inc
mov
jns
adc
xchg
sbb
add
ret
inc
adc
shrb
push
cmp
pop
out
test
scas
orb
movsl
sbb
add
jb
push
sub
fwait
lods
out
jo
aad
xlat
subb
andb
jno
loope
push
or
and
adc
imul
xlat
fdiv
enter
das
push
mov
scas
shl
jmp
arpl
fldcw
imul
aam
test
neg
cmp
lods
xchg
jne
pop
xchg
fistpll
rcll
push
sub
shl
test
cwtl
idivl
enter
int
or
aaa
jbe
pop
dec
pop
jns
pop
mov
dec
xchg
mov
inc
into
cmc
dec
popf
or
dec
aam
jno
or
jmp
ss
sbbl
or
cwtl
sub
dec
add
ret
shrb
push
pop
mov
inc
sahf
into
mov
pop
jecxz
int3
pusha
pop
pop
js
inc
mov
xchg
push
ss
pusha
jecxz
iret
cmp
js
outsb
cli
pop
ja
sbb
loopne
and
mov
jae
pop
and
scas
dec
jl
call
adc
arpl
mov
cwtl
inc
aam
mov
cmp
ret
mov
dec
test
mov
cli
mov
push
bound
js
pop
sbbl
push
or
pop
jne
inc
mov
arpl
add
push
pop
inc
mov
lret
xor
push
ja
roll
push
dec
movsb
ja
mov
sbb
mov
push
lret
stos
aam
gs
aaa
xchg
out
sbb
daa
insl
ss
daa
pop
push
cld
sbb
cwtl
out
sbb
inc
push
in
mulb
inc
lods
jno
hlt
sbb
push
inc
push
push
out
fisubl
std
sbb
xchg
outsl
mov
ss
mov
sbb
insb
ficomps
fdivrs
push
movsb
dec
movb
jne
sbb
aam
jns
xchg
movsb
imul
mov
mov
xchg
ja
sub
scas
and
mov
xchg
mov
imul
jns
push
jg
mov
dec
sub
xchg
dec
jb
cltd
outsl
icebp
mov
daa
into
lods
dec
jbe
cli
aam
sti
and
daa
jo
fwait
movsl
sub
vprotw
push
inc
dec
in
imul
jmp
sbb
adc
mov
xchg
dec
js
aam
sbbb
pop
ss
cwtl
jmp
xchg
call
es
sub
xor
stc
loop
mov
mov
shll
mov
adc
mov
nop
iret
leave
xchg
ss
subl
lahf
adc
dec
adc
enterw
je
fistl
movb
xlat
add
inc
iret
cmp
lock
lock
icebp
outsl
out
cmp
insb
sub
push
dec
imul
pop
mov
hlt
xchg
adc
mov
and
scas
pop
mov
pop
add
or
sub
inc
leave
push
mov
jg
and
cmp
xchg
sub
ja
ds
push
mov
cld
lods
repnz
mov
testb
pushf
fdivs
loope
cmp
jo
mov
or
or
roll
cli
push
xchg
nop
outsl
xor
nop
bswap
xchg
icebp
clc
cmc
inc
push
push
out
lcall
push
mov
setae
push
sub
jbe
add
pop
js
or
xchg
mov
or
pop
cwtl
jp
rclb
add
clc
sub
xor
das
scas
or
and
es
or
in
cwtl
mov
je
sub
cmp
inc
mov
jmp
popf
mov
lock
xchg
stos
xchg
ljmp
or
jmp
cli
cmpsl
ljmp
fst
sub
sbb
and
repnz
dec
aam
mov
cmp
sub
mov
adc
sbb
inc
pusha
mov
adc
outsb
push
stos
mov
in
loope
jnp
dec
jecxz
rclb
inc
outsl
mov
sub
int3
aam
out
adc
mov
push
aaa
cmpsb
sbb
xchg
adc
scas
cli
sti
jne
cld
scas
mov
fistl
mov
icebp
ss
or
xchg
inc
inc
out
dec
ja
icebp
aaa
xchg
pop
xrelease
xchg
negl
inc
add
clc
xchg
sub
and
push
pop
lcall
inc
or
adc
mov
ja
cwtl
roll
jns
sbbb
es
and
xorb
push
push
jo
dec
jno
pusha
nop
movsb
xor
ss
int3
mov
jbe
adc
sbbb
mov
pop
les
test
sbb
sub
call
cmc
fdivr
sbb
inc
scas
ja
jbe
lods
in
aam
cmc
push
out
loope
insl
rclb
aaa
leave
andl
pop
and
jb
rolb
or
xor
sbb
sbb
popa
icebp
cmp
adc
mov
xchg
repz
cmp
xchg
clc
cmp
or
popa
mov
emms
mov
addr16
bound
inc
cmp
xchg
clc
fiadds
lcall
loope
js
out
or
fdivs
or
cmp
add
fincstp
xchg
mov
or
mov
jge
gs
pop
test
xor
sub
sti
pop
inc
cs
push
and
push
aam
dec
mov
lret
pop
or
jo
or
fistps
popa
jo
jae
daa
push
push
jecxz
enter
jo
sbb
leave
mov
jp
xor
aam
jge
sbb
insb
pop
idivb
sbb
aas
sbb
sbb
mov
imul
dec
add
dec
inc
adcl
xchg
rcl
cmp
das
push
clc
inc
outsl
xchg
sub
mov
mov
loope
imul
in
mov
push
sbb
mov
jnp
and
fcomps
cwtl
mov
fldcw
mov
xlat
cmc
mov
xor
push
jle
mov
subl
rep
dec
test
daa
mov
push
dec
les
inc
test
mov
cmp
out
flds
aam
or
jge
xlat
and
push
inc
aaa
adc
cmc
and
test
arpl
mov
xor
hlt
push
jne
adc
jnp
fldl
into
mov
xor
cs
xchg
sarl
xchg
lock
mov
pop
sbb
iret
lock
or
add
cmpl
clc
cltd
mov
jl
adc
add
pop
cmp
xchg
dec
mov
notl
ljmp
or
xor
or
push
aas
mov
leave
cwtl
inc
sbb
std
inc
xchg
mov
out
xlat
xchg
mov
imul
iret
push
cmp
icebp
or
pop
loop
pop
in
jns
mov
push
incl
imul
push
imul
ss
push
rol
leave
push
shlb
pop
push
push
enter
sub
fiaddl
rclb
outsb
aas
mov
enter
ret
xchg
mov
sahf
xchg
cld
insl
inc
or
inc
ja
roll
test
mov
js
fsubrs
jne
loop
stos
cwtl
cld
into
out
jnp
loop
outsb
pusha
nop
in
pop
test
cli
icebp
je
or
sbb
jmp
sub
shr
sti
testl
insl
testl
ret
mov
mov
in
addr16
push
mov
addr16
or
aam
mov
icebp
pop
sbb
mov
lahf
outsl
mov
outsb
addr16
in
insl
es
loope
sarb
jge
push
ljmp
movsb
pop
repz
mov
push
ss
adc
inc
mov
jl
mov
test
pop
decl
test
jle
aaa
cmpsl
add
js
pop
movsb
sub
sub
int
mov
mov
iret
clc
fidivl
cld
and
sbb
lods
test
movsl
es
sub
mov
repnz
fstpl
mov
push
das
xor
pusha
pop
mov
jo
addr16
and
jno
inc
in
scas
ja
jmp
cmpsl
shlb
and
push
ret
and
cld
in
dec
mov
pop
mov
cld
les
outsl
ss
in
inc
repz
and
cs
or
jbe
mov
loop
repz
inc
mov
pushf
mov
fstl
add
incb
dec
or
mov
push
data16
xchg
andb
fptan
mov
lea
dec
stos
test
or
cmp
xor
sub
mov
ss
scas
mov
jno
imul
cmpsl
ljmp
xchg
cltd
cld
loop
sahf
push
cltd
out
sahf
iret
repz
pop
mov
jmp
sti
jne
jae
scas
pop
inc
ja
fimull
in
jnp
lret
arpl
dec
insb
xchg
push
movsb
flds
mov
push
add
dec
lea
ret
sub
aaa
cwtl
cld
fstl
push
roll
jl
push
int3
xchg
push
jge
sti
sub
sti
mov
std
lods
push
mov
cli
sub
jp
push
push
sub
das
flds
push
xor
or
es
inc
cli
jbe
ficompl
sbb
xor
shr
push
insl
push
lods
in
js
sub
xchg
jo
divl
push
xor
je
aad
in
lcall
xor
insl
push
fildl
pop
push
xchg
nop
pop
lods
cmc
mov
imul
push
lcall
add
js
lds
aam
subb
dec
jnp
xchg
repnz
adc
clc
jae
xchg
cld
sbb
mov
repnz
hlt
push
fwait
cwtl
xchg
ret
inc
inc
hlt
sub
das
adc
sub
je
cs
jbe
lahf
cmc
cld
das
dec
mov
cmp
push
push
jnp
std
test
movsb
scas
mov
dec
push
sahf
or
or
pop
outsl
icebp
test
jno
lock
add
loope
enter
imul
ss
incb
dec
pusha
mov
imul
test
dec
pop
pop
adc
push
call
inc
and
push
lods
xchg
and
push
mov
push
inc
or
ljmp
mov
jns
push
and
mov
mov
jns
sub
or
in
daa
cli
inc
mov
cmp
pushf
push
add
jnp
fcoms
cltd
dec
je
dec
loopne
jl
insl
movsb
lcall
dec
cmc
cltd
inc
xor
test
inc
push
into
cmp
push
jb
ficoms
adc
jnp
jo
mov
push
and
mov
or
repnz
js
adc
lea
push
popf
mulb
jbe
shll
mov
xor
and
mov
pop
dec
mov
xor
push
adc
sbb
xor
outsl
enter
push
cld
fs
inc
mov
push
imul
lock
cmpsl
mov
into
loope
jb
mov
ret
inc
pop
test
push
lret
dec
sahf
pop
aas
jne
add
insl
mov
adc
jle
divl
int
les
adc
dec
repz
mov
mov
xchg
pop
call
pop
imul
jb
add
mov
sub
cmpsl
imul
mov
outsb
jbe
dec
enter
repz
out
adc
push
jo
mov
sbb
push
or
add
movsl
fildll
xchg
push
push
pop
xor
mov
cmc
mov
adc
cld
add
xchg
jns
add
mov
lock
mov
daa
mov
add
lock
orl
es
out
xor
outsl
jbe
dec
adc
mov
xlat
clc
jmp
lcall
dec
push
xchg
ja
jne
sbb
cli
mov
jo
cmpsb
mov
ret
out
inc
dec
sbb
pop
mov
in
stos
roll
fdivs
cmc
push
cld
xor
jae
outsb
adc
in
subl
cmp
push
cld
mov
clc
jl
pop
push
aaa
in
lret
xchg
jmp
outsl
or
pop
pop
xor
mull
shr
jnp
cmpsb
mov
repz
ja
push
or
call
push
jle
mov
test
or
imul
sbb
mov
sbb
in
fimuls
cli
repnz
sub
lds
shl
or
push
fnstenv
pop
xchg
roll
xor
je
loopne
enter
cmpl
negb
dec
ret
arpl
cmp
movsl
int
and
icebp
out
iret
mov
movsl
jo
push
mov
sti
add
movsl
pop
and
mov
mov
repnz
fcoms
ljmp
push
sbb
sar
push
add
out
push
subb
out
in
ja
push
out
mov
imull
in
divl
fdivr
out
mov
ja
test
jg
add
pop
pop
fiadds
negb
jns
push
repnz
aaa
push
fdivrs
add
and
and
inc
pop
outsl
popf
and
mov
aas
xchg
pop
xor
nop
push
jne
jo
cmc
clc
rep
cli
pop
cltd
xor
adc
in
mov
pusha
cmpsl
sarl
popa
hlt
icebp
cmp
insb
adc
fnsave
cld
lret
cmp
adc
cmpsl
enter
or
and
stos
hlt
jl
mov
or
cmp
xor
adc
push
xchg
inc
cld
or
roll
scas
mov
ss
enter
stos
and
daa
jnp
bound
dec
sbb
icebp
add
cmp
cltd
cmp
sbb
test
out
sub
pusha
into
mov
fwait
ljmp
testl
jle
out
incb
sbb
jbe
mov
xchg
test
pop
out
xor
push
cld
jns
daa
mov
ja
insb
divl
clc
pop
dec
adc
and
ja
and
cmpsl
xchg
pop
inc
push
jbe
or
add
jge
pop
add
push
cwtl
xchg
lret
pop
movsl
mov
loope
imul
repz
repz
insl
pop
aas
pop
icebp
stos
cmp
cltd
shl
cmc
sbb
decl
aaa
or
fdiv
test
into
arpl
pop
xchg
xchg
into
gs
or
mov
dec
lods
adc
out
stc
jae
dec
aam
pop
cld
inc
pop
cltd
or
xchg
stos
imulb
jae
call
pop
lock
mov
sub
lea
cwtl
sub
jo
jge
xchg
nop
mov
rorl
push
inc
lret
movsb
daa
sub
jbe
scas
les
inc
xchg
int3
nop
push
jmp
into
mov
test
cltd
sub
scas
add
xor
adc
lods
mov
inc
xor
inc
jmp
dec
mov
pop
or
xor
aaa
jne
push
adc
or
enter
repz
cmp
mov
add
hlt
adc
mov
imul
mov
out
loop
adc
pop
dec
mov
xor
add
sub
dec
xor
and
cld
mov
adc
iret
cmp
sbb
cmp
ss
xor
adc
push
push
ss
clc
mov
sahf
inc
mov
add
out
and
cmc
sub
ja
sub
dec
sbb
push
or
sub
cmp
cmc
cmc
or
divb
xchg
div
cmpsl
cmp
repnz
adc
push
push
fbstp
push
adc
lahf
iret
cmp
and
movsb
cmp
lret
mov
clc
lock
repz
push
cmpsb
sbb
dec
sbb
adc
pop
add
je
daa
cmpsb
test
mov
loop
outsl
cmpsb
cmp
test
add
or
loopne
imulb
jnp
xor
inc
insl
pop
data16
cmp
hlt
xchg
xor
jp
mov
lds
inc
ret
xor
jo
push
xchg
pop
cmc
outsb
lds
ds
dec
leave
dec
andl
xor
cli
xchg
cmpsl
jge
addr16
mov
mov
and
adc
xchg
iret
push
into
xor
cmovno
add
xor
jo
push
loop
or
daa
clc
sbb
add
sbb
push
pusha
std
divb
in
test
outsl
xchg
jbe
and
out
aam
or
outsb
sub
out
xor
mov
push
xchg
cmpsl
push
sub
and
jle
aaa
xchg
jmp
lds
fildll
into
dec
push
pusha
std
cmpsl
lods
jae
mov
fldcw
bound
aaa
mov
notl
sub
lock
mov
cmp
mov
scas
push
add
iret
push
mov
xor
add
push
pop
aad
insb
addb
fadds
or
push
mov
inc
or
dec
sub
rcrl
push
and
inc
dec
jge
je
cltd
arpl
mov
popf
je
sbb
es
inc
jge
cmp
sbb
push
data16
xor
pop
ss
jbe
pop
sub
sub
xchg
push
out
lds
fnstcw
ds
xor
add
test
sub
xchg
jno
mov
dec
mov
fmuls
lea
mov
push
sbb
mov
testb
pop
push
push
mul
and
shll
xor
cmc
out
inc
icebp
cmovg
lcall
test
push
test
jg
sbb
push
shrb
js
loope
adc
fbstp
daa
adc
mov
mov
shl
sub
repz
pop
jb
lock
ja
mov
mov
xor
movsb
lods
push
sub
sub
inc
sub
xchg
repnz
and
repnz
sti
ja
sbb
dec
xchg
push
arpl
ljmp
sbb
push
push
cmc
or
out
sbb
sub
adc
inc
inc
push
xchg
mov
xor
sbb
mov
jg
add
cli
dec
mov
call
mov
jo
je,pn
adc
cwtl
sbb
mov
test
sarl
push
inc
int
mov
imul
cmpsb
mov
pop
push
xchg
pop
dec
push
ret
cmpsl
into
data16
movsl
adc
mov
stos
xor
test
sub
std
mov
cmp
dec
shll
sbb
imulb
mov
and
xchg
mov
adc
lahf
push
push
in
xchg
mov
xor
lret
roll
jo
push
push
lock
adc
pop
roll
sbb
xchg
cwtl
cmc
or
mov
push
or
mov
insl
inc
dec
mov
stos
loop
test
mov
xlat
in
dec
xchg
add
dec
mov
inc
xlat
imulb
lods
cmc
push
in
shrl
loope
das
call
fwait
icebp
and
mov
stos
js
push
in
mov
lcall
shl
je
paddd
dec
in
and
daa
shl
idivl
and
pop
into
mov
inc
out
xor
cld
xchg
out
mov
jmp
jmp
ja
iret
repz
aaa
push
cld
sbb
in
and
mov
inc
lret
xor
lods
neg
adc
mov
out
cmp
imul
das
scas
iret
fcmovnu
in
pop
in
les
mov
js
cmp
lea
mov
xchg
pop
jp
mov
jecxz
mov
or
fidivl
and
daa
mov
clc
cmpsl
dec
jns
xchg
push
jge
sbb
xchg
add
pop
pop
in
push
dec
int
scas
cld
adc
pop
jne
fidivrs
sbb
insl
jne
cwtl
sub
pop
pop
sub
test
imul
add
inc
lret
xor
daa
movsl
mov
inc
mov
filds
mov
cmc
loopne
outsb
cld
mov
shll
add
adc
jno
testl
dec
daa
xchg
es
xor
sbb
hlt
adc
push
xchg
ja
cmc
imul
fsubrs
pop
mull
int3
add
shrb
icebp
jb
add
push
int3
fsubrs
addr16
mov
sub
scas
sub
int
das
data16
and
movups
enter
scas
and
outsb
shll
mov
jb
and
mov
cmp
roll
xor
inc
outsl
js
and
mov
lea
scas
iret
data16
xor
scas
lods
decb
ss
cltd
jle
jecxz
push
xor
jle
movd
data16
fisubrs
sub
mov
aaa
or
popa
dec
mov
stos
mov
notl
das
cmp
sahf
jo
xor
pop
ficompl
mov
outsl
pop
pop
dec
enter
dec
add
mov
jbe
loop
inc
icebp
sub
or
xchg
xorb
mov
ss
aas
pop
push
xchg
jnp
push
push
xor
xor
cltd
jl
or
jge
pop
inc
mov
pop
jo
jmp
jo
out
xchg
xchg
mov
addr16
cld
lock
leave
mov
adc
pop
push
cltd
jecxz
imul
xor
je
sbb
mov
sub
cmc
hlt
push
sbb
sbb
jle
cmp
jns
popa
jb
ret
add
xchg
add
push
shlb
clc
in
aam
add
dec
jno
sub
leave
cli
inc
mov
rcr
xchg
and
jno
rolb
xchg
ljmp
in
sub
mov
push
iret
push
das
jne
or
les
adc
popa
jle
add
jb
mov
add
jge
lea
jge
pop
mov
cmpb
fcoms
push
icebp
xor
mov
jle
xor
mov
inc
sbb
scas
insl
mov
xor
xchg
sbb
scas
mov
push
adc
sub
xchg
jecxz
icebp
arpl
roll
pop
cmp
aad
les
lret
dec
inc
jl
addr16
je
xchg
fstps
lds
sbbl
and
xchg
sbb
cld
adc
out
inc
lods
fwait
cmp
int3
mov
xchg
rclb
add
sbb
push
cs
jnp
dec
pop
lock
inc
icebp
jo
cmp
mov
xorl
jns
lock
pop
and
data16
jmp
test
loop
imul
repnz
xchg
scas
int
pop
pop
jmp
aad
mov
imul
sub
sti
dec
sbb
les
das
popa
pop
mov
jmp
push
sub
xchg
pop
clc
mov
jg
cli
out
dec
sbb
in
mov
data16
cltd
and
push
ficompl
mov
fldl
mov
aam
fsubrs
mov
inc
out
pop
ss
or
imul
sub
ljmp
aam
jns
scas
jnp
xlat
imul
add
jno
sti
dec
dec
outsb
lret
cmpsb
arpl
lret
jo
pop
mov
inc
mov
cltd
push
and
adcl
inc
mov
sub
roll
pop
adc
inc
pop
cmp
mov
xor
inc
dec
in
rcll
xchg
add
mov
in
cmp
dec
aam
sub
ret
lahf
push
cltd
std
bnd
pop
shlb
xchg
or
pop
daa
pusha
mov
mov
iret
mov
sbb
xchg
lods
mov
pop
inc
add
iret
shl
xor
stos
scas
xchg
xor
mov
dec
sti
je
mov
stos
jo
in
imul
insb
mov
scas
inc
subb
pop
sbb
push
mov
jo
mov
lret
add
loop
and
cld
cmp
mov
pop
in
outsb
aas
push
pop
or
ror
rcrb
and
inc
aaa
mov
mov
dec
cmpsl
int
dec
fcomi
dec
mov
push
mov
xchg
js
push
adc
sbb
push
pop
push
add
xchg
push
mov
scas
outsl
push
xchg
shl
sti
out
decl
fldlg2
cs
push
push
rcll
push
adc
idivl
and
and
lods
dec
xchg
push
repnz
push
jp
cmp
repnz
mov
ja
ret
pop
out
pop
testl
xchg
xchg
push
and
jge
cmp
daa
jecxz
add
pop
dec
es
adc
rcrl
stos
outsl
xor
mov
testb
mov
movsb
xchg
scas
dec
dec
cmp
std
mov
mov
inc
or
in
repnz
cld
xchg
sub
push
sbbb
lods
push
add
sahf
inc
js
add
ret
adc
adc
data16
into
dec
lahf
adc
fisttpl
adc
inc
lock
movsb
xlat
jl
add
mov
push
mov
sub
cmp
out
sbbl
cmp
xchg
add
mov
jle
test
lcall
or
nop
lds
lods
fildl
rcrl
xchg
test
daa
mov
je
jae
mov
push
jle
adc
lds
ret
push
sbbb
mov
dec
test
pop
jle
mov
mov
xchg
cmp
sbb
mov
sbbb
push
rcrb
push
lods
jne
cmc
shl
cld
sarb
ss
cli
mov
add
fwait
mov
sbb
add
aad
pop
push
sbb
xchg
mov
movsb
cmpsl
xor
sub
es
leave
inc
sbbl
push
testl
leave
in
ja
lret
push
lea
lods
cmp
inc
lock
xor
shlb
cmpsl
scas
and
loopne
cmp
xchg
push
dec
iret
rcrl
ficoml
in
jl
lret
sub
cs
or
in
pop
cld
or
inc
xor
cmp
jne
in
movsb
xor
add
test
das
ret
xlat
sbb
xor
sbb
cmpsl
dec
jne
mov
push
idiv
into
fsub
mov
je
ja
gs
sti
clc
int
js
movsb
test
xlat
ja
incb
lods
ret
subb
pop
or
sub
je
cmp
lods
xchg
xchg
push
push
enter
jne
leave
jne
push
mov
cmp
je
add
inc
inc
sarl
and
inc
pop
jne
popl
or
rclb
aaa
icebp
push
pop
inc
int3
pop
mov
cwtl
xor
cld
push
mov
ficomps
adc
push
push
mov
sbb
cli
loop
negl
mov
incb
mov
mov
je
xor
fnstsw
cs
jge
call
sub
repz
sub
mov
lock
add
ds
loop
dec
xchg
adc
insb
add
adcb
mov
pusha
ss
js
push
push
mov
sub
mov
aas
and
pop
cmpsl
adc
xor
lahf
in
and
xchg
pop
aam
jnp
push
mov
ss
hlt
sbb
push
insb
andb
and
cmp
ret
xchg
dec
jb
sbb
mov
push
aas
mov
push
inc
xor
dec
int
shl
jno
inc
cmc
xor
inc
jns
or
ja
mov
mov
jo
push
aam
hlt
adc
mov
pop
adc
clc
push
jnp
xor
xchg
mov
push
push
add
lea
mov
aaa
lea
push
push
cli
or
inc
or
shl
cld
xchg
mov
outsl
dec
cs
sub
or
pop
and
sbb
fbld
xlat
aam
cli
push
scas
leave
andl
sbb
sub
pusha
xchg
mov
xchg
jbe
scas
fiadds
aam
inc
xor
popa
adc
scas
loop
push
nop
scas
jecxz
pusha
pop
ljmp
sbb
repnz
in
xorl
adc
fldl
stos
pushf
aam
lret
adc
jl
sub
or
std
enter
xor
jp
adc
je
sub
inc
loop
mov
xchg
cld
test
jne
loope
or
ja
imul
das
scas
dec
rorl
nop
mov
mov
shrb
xchg
rcll
mov
pop
cmp
xchg
stos
repz
xlat
loope
xorl
mov
jno
mov
push
push
aam
in
cli
pop
mov
ss
and
inc
and
cli
aad
test
sti
lahf
shrl
mov
jmp
xchg
inc
xlat
xchg
jo
inc
leave
xor
cmp
sub
dec
cmpsb
ficoms
shlb
mov
daa
jae
push
adc
or
adc
cmp
inc
test
inc
scas
lret
sub
or
test
add
push
out
xchg
pop
sub
orb
scas
xchg
incl
inc
int3
shlb
loop
lahf
mov
aam
inc
lods
adc
fmul
cmc
xor
das
inc
lahf
insb
jno
xor
sti
mov
repz
inc
ret
or
test
jle
adc
mov
mov
xor
xchg
jnp
roll
cmpsl
js
pop
lods
sub
inc
xchg
push
push
paddb
int
push
adc
sar
scas
sbb
js
shl
adc
out
or
out
jge
adc
adcb
push
ret
sub
repnz
inc
stos
sbb
sub
xor
add
jnp
push
out
stos
cmp
lods
in
daa
sub
push
addr16
int
jno
ds
xor
aam
and
movsl
test
inc
sub
ja
lcall
push
cmc
outsl
fs
dec
fs
ja
je
faddp
out
loop
pop
je
test
aam
andl
in
ja
push
popf
ljmp
lret
xor
icebp
movsl
inc
ret
fnstenv
mov
pcmpgtd
pop
fadds
enter
cmp
mov
lret
cli
loopne
and
pusha
push
imul
mov
addr16
adc
sub
lock
stos
cmp
pop
cmp
push
dec
cltd
jl
loope
aas
xor
lahf
sbb
jmp
pop
rcrl
cmpsl
outsb
outsb
fbld
shlb
mov
and
cmp
add
xchg
cmpsb
cmp
jo
leave
movsl
pop
into
xchg
imul
add
add
pop
aam
sub
add
outsl
cli
push
inc
sub
xchg
add
push
inc
dec
mov
push
shlb
inc
adc
iret
cltd
jbe
je
mov
stos
sub
js
jp
cmp
ret
adc
das
clc
ret
push
push
lds
lret
das
ret
ret
stos
add
push
xor
lods
push
cwtl
mov
mov
arpl
xchg
sbb
insb
leave
aam
or
push
dec
push
push
or
das
sub
pop
outsl
cmc
cmp
scas
dec
addr16
pop
into
das
pop
jecxz
add
jge
loop
push
repnz
add
inc
pop
stos
cltd
push
cld
push
test
aad
push
shl
dec
mov
dec
cmp
addr16
and
jbe
loope
push
or
imul
dec
loopne
daa
pop
mov
rorl
pushf
pop
xchg
or
jns
les
pop
add
jns
clc
pushf
cmpsl
mov
xor
das
mov
cmp
xor
push
scas
add
fucomip
mov
xor
es
jo
je
into
orb
clc
cltd
push
loop
ljmp
aam
subl
stc
push
lods
push
and
sbb
cld
je
cltd
into
sbb
xchg
mov
push
push
add
mov
jnp
jae
jge
popw
ret
ds
dec
jecxz
decb
xor
cmp
rclb
xor
repz
jge
ljmp
and
cld
mov
loope
xchg
push
xor
std
fisubrl
pop
das
scas
xchg
xor
testl
repz
out
aaa
jmp
cmp
sbbl
adc
inc
out
and
mov
scas
pop
mov
add
das
add
pop
mov
or
out
add
add
mov
inc
and
imul
mov
dec
sub
add
and
jecxz
cmc
adc
call
cmp
push
mov
sbb
cmpsl
dec
add
jo
xchg
les
ret
xor
xchg
and
out
outsb
scas
or
xor
iret
lret
inc
orb
hlt
and
pop
in
and
dec
scas
mov
mov
sti
fmull
cmp
hlt
sbb
adc
sbb
pushf
push
xchg
rcrl
loopne
js
ror
push
adc
stos
es
push
mov
icebp
pusha
clc
lahf
loope
sub
enter
cmp
popf
sbb
shl
in
in
xchg
imul
adc
hlt
or
jecxz
arpl
ss
pop
lcall
leave
pop
jge
in
cltd
cwtl
mov
test
inc
push
push
pop
imul
push
in
sti
mov
push
jae
mov
imulb
sub
fwait
or
push
clc
inc
mov
stos
ds
js
in
das
cld
fdivrl
into
test
dec
push
daa
dec
repz
std
fldl
ljmp
lahf
add
aam
int
mov
mov
aaa
cmp
push
js
shll
imul
push
and
cmc
in
jge
sub
sbb
shl
pop
mov
sti
pop
sub
clc
inc
mov
ret
cmp
push
cmc
clc
jbe
insl
push
cli
mov
mov
push
push
sub
mov
jl
les
lret
or
push
push
add
mov
rcrb
arpl
xor
rcll
dec
sub
xchg
sbb
xor
cmp
jne
xor
lret
jecxz
push
fwait
inc
mov
das
out
mov
scas
inc
jne
push
inc
std
data16
cmp
push
mov
mov
and
roll
push
xchg
dec
pop
jae
push
mov
jne
push
out
insb
mov
movups
pop
mov
jne
cmp
sub
lret
mov
testl
repz
lods
pop
aas
out
mov
cmp
outsl
out
mov
lcall
pusha
ficompl
add
stos
xor
in
fldt
adc
adc
jo
mov
mov
sbbb
push
mov
mov
jbe
subb
ljmp
cmc
and
and
arpl
dec
xlat
jge
mov
xor
int
daa
fldl
pop
cld
orl
iret
jg
jb
movsl
mov
into
popa
xor
sbb
cmp
pop
daa
xor
cmc
icebp
or
scas
cmpsb
fiadds
mov
in
ja
into
and
xchg
out
roll
push
inc
push
enter
xor
sbb
jne
mov
jbe
mov
daa
aaa
jo
aam
and
sbb
xchg
pop
mov
push
call
cmp
outsb
xlat
adc
sub
nop
aam
cwtl
pusha
mov
into
cmp
add
test
push
bound
xchg
xchg
or
ss
arpl
shll
mov
ror
imull
sub
xchg
nop
js
out
inc
mov
jbe
push
mov
and
mov
mov
lods
repnz
pop
mov
std
cmp
push
int3
test
mov
repnz
imul
jb
pop
push
lock
js
sti
cld
filds
xlat
and
fiadds
es
xchg
lods
fcoms
fwait
inc
imul
dec
or
or
shrl
div
cli
cld
lock
cwtl
push
mov
mov
inc
sbb
inc
inc
cmp
lds
mov
movsl
push
dec
adc
and
xchg
inc
sbb
and
out
js
fnsave
lods
pop
ret
add
subb
test
xchg
dec
or
scas
mov
dec
daa
inc
inc
adc
push
push
or
pop
cmp
adc
mov
adc
cltd
dec
dec
ja
mov
cmp
addr16
popf
sbb
adc
mov
clc
sbb
negl
shll
cmc
cmp
mov
jecxz
lret
inc
sbb
jg
mov
negl
je
clc
pusha
enter
pop
add
ja
inc
push
jle
negb
push
mull
ss
in
pusha
call
in
mov
insb
jbe
into
mov
xor
movb
lods
lcall
cld
mov
hlt
xchg
inc
rolb
sti
test
xchg
sub
out
lds
mov
and
and
cmp
arpl
clc
push
dec
mov
push
cld
jns
pcmpgtb
push
lods
dec
nop
xor
cli
cmp
jle
and
lods
scas
cmp
or
loopne
mov
clc
repz
jns
sub
decb
inc
out
iret
mov
push
nop
imul
jno
int
sarl
call
lods
fstps
loop
sbb
lahf
es
add
leave
sbb
lods
mov
mov
mov
mull
push
jo
cmp
movsb
pusha
sahf
wrmsr
std
mov
loopne
into
insl
loope
xchg
dec
dec
sub
outsl
jmp
leave
mov
dec
push
lcall
and
call
negb
das
insl
ret
xor
sub
and
pop
sub
outsb
stos
or
cmp
or
shrb
repz
ds
repnz
loop
sbb
push
sub
ret
pop
or
mov
mov
pusha
cmovle
in
mov
cmp
iret
das
or
lock
in
pop
incb
jecxz
adcb
movsl
flds
movsb
out
inc
sti
repnz
xor
xchg
inc
mov
in
mov
xchg
es
push
pop
icebp
lods
push
mov
adc
daa
jnp
mov
dec
imul
mov
pop
mov
in
xchg
in
jg
das
dec
jecxz
adc
addl
jmp
adc
push
roll
aam
nop
sbb
lods
push
fwait
in
pop
lock
test
int
aad
repz
adc
scas
jae
sub
sarl
push
in
sti
inc
cmpsl
mov
pop
xor
push
das
inc
mov
xor
daa
sbb
pop
jle
jp
jmp
std
imul
scas
cli
inc
icebp
in
cmpsl
lds
in
aas
pop
lods
hlt
popa
push
cld
jo
ret
xchg
out
sbb
cltd
call
and
jbe
data16
nop
pop
jecxz
mov
xor
xchg
push
in
dec
mov
and
daa
cs
jbe
cmp
pop
push
push
xlat
adc
jo
jne
lods
cmc
ja
xor
pop
jmp
rcll
mov
lods
or
dec
leave
jg
incb
push
arpl
push
lahf
sub
xchg
inc
add
adc
mov
xchg
fisubrl
roll
out
add
add
insl
and
movsb
divb
cwtl
cltd
fincstp
lods
jnp
lock
mov
nop
cmpsl
xchg
cli
adc
add
xor
xchg
jp
int3
or
jns
outsl
fs
iret
cli
jp
loope
into
sbb
hlt
cli
addr16
sub
jo
inc
fistpl
or
pop
jl
daa
pop
outsl
imul
repz
data16
sti
push
xor
inc
jns,pn
js
mov
iret
incb
mov
pop
add
pop
xchg
cmc
inc
rcll
mov
jne
add
xor
xchg
es
inc
imul
addl
adc
outsb
dec
or
out
adc
int
mov
push
jbe
push
cmp
xchg
std
ja
sbbb
lock
data16
cwtl
bound
ffreep
add
es
sti
mov
enter
push
ss
adc
call
test
cltd
sahf
lods
pop
in
outsb
push
mov
in
push
xor
jle
pusha
cs
sbb
aad
lcall
pop
xor
jbe
popa
mov
mov
daa
fcomps
dec
ds
sbb
into
pop
in
mov
fdivrp
sbb
pop
in
mov
insb
test
jb
mov
mov
in
xor
inc
adc
cmp
aad
loope
lahf
out
aad
pop
push
fisubrs
int
inc
jbe
cmpsb
dec
jns
push
pop
sahf
and
mov
pop
xchg
icebp
pop
cmc
jbe
shl
divb
xchg
cmpsb
sahf
push
mov
xlat
cld
aad
mov
or
fdivr
in
dec
andl
popf
mov
cmp
pop
ja
jle
movsb
xchg
ja
testb
aam
insb
insb
add
inc
mov
ret
aam
call
inc
cmp
fimull
sbbl
into
mov
pop
sbb
ja
fwait
loope
rep
test
daa
jge
test
push
in
cmpsl
xor
cmp
cmp
mov
cmp
sbb
push
xchg
mov
nop
pop
clc
leave
sub
jbe
inc
outsb
mov
mov
push
mov
mov
jne
mov
out
push
jno
arpl
aam
out
dec
cwtl
movsb
adc
out
bound
cmpsb
repz
dec
outsl
cltd
cmpsl
test
leave
cmp
loopne
cld
stos
or
mov
ljmp
sub
addr16
jle
xchg
lea
pop
lods
jne
pop
fisttps
rcrb
push
out
icebp
imulb
mov
pop
cmp
shr
add
lods
push
adc
pop
push
pop
testb
cmp
in
mov
pop
pop
adc
push
jo
adc
out
subl
jge
pop
jmp
pop
xchg
jp
negb
xchg
mov
jne
scas
adc
pop
ja
adc
mov
dec
push
pop
adc
cli
pop
pop
and
loope
fbld
xor
in
cmp
test
cmp
xor
cli
cmp
pop
cltd
mov
pop
idivl
cltd
cmc
rclb
testb
mov
sti
xor
jo
jo
outsl
sti
sub
xor
notl
in
mov
out
cs
popa
subb
mov
adc
pop
push
aam
out
popf
stos
jmp
sbb
jb
jb
adc
inc
and
negl
in
jg
mov
addr16
fcomi
cmp
bound
xor
ret
pop
add
adc
inc
push
rolb
sub
roll
cwtl
hlt
xchg
push
pop
imul
lods
mov
add
and
push
sar
and
es
outsb
push
test
push
xor
jae
mov
or
push
sbb
clc
leave
xchg
cltd
push
test
outsl
jl
push
pop
pop
loopne
cltd
es
scas
sub
mov
cmp
insb
xor
ss
adc
ret
xor
js
lcall
and
jmp
out
sub
aas
or
push
mov
int3
nop
test
icebp
cmp
sbb
and
and
mov
xor
xorb
cmc
ja
sti
push
mov
xchg
outsl
int3
out
in
div
xor
aaa
sub
cmc
popa
fsubr
sub
pop
popf
je
out
mov
cli
je
dec
jno
in
pop
repnz
lock
adcl
and
sbb
mov
jg
and
jle
cli
js
sub
pop
je
add
pushf
mov
bound
cmc
xor
sbb
pop
dec
je
dec
arpl
add
cmp
test
mov
pusha
jg
add
mov
test
data16
das
outsb
pop
pop
or
test
movsb
daa
adc
sub
std
cwtl
sub
add
cltd
add
cmp
or
adc
or
xorb
decb
and
jne
jle
lret
jo
clc
inc
haddpd
inc
adc
lods
test
fsubrs
adc
clc
dec
movhps
xor
mov
divl
cmpl
or
into
shl
inc
clc
cmc
cmp
adc
out
inc
call
adc
or
or
push
ljmp
sbb
xchg
pop
or
adc
sahf
lret
icebp
mov
inc
sub
enter
jo
push
daa
push
ss
je
push
add
in
cmp
xor
xor
and
gs
mov
out
mov
adc
adc
lahf
push
movsl
cmc
xor
add
jnp
data16
push
jmp
mov
push
xor
bound
adc
adc
movsl
push
out
or
or
add
stc
lock
jmp
sarl
mov
push
inc
sbb
stos
add
sub
pop
adc
data16
out
add
int
jae
insb
pop
fiaddl
pop
xchg
mov
inc
add
movsl
jmp
clc
push
cmc
cmpsb
js
jne
faddl
and
sub
or
inc
clc
ja
jmp
es
shlb
jle
xor
jg
mov
jbe
push
mov
js
add
nop
jo
mov
mov
adc
das
cmc
add
pop
adc
dec
idivb
clc
cld
scas
adc
pop
jbe
add
add
out
inc
loop
jmp
pop
pop
or
pop
loopne
daa
insl
idivl
lock
xchg
xchg
cmp
lret
js
orb
imul
pop
lods
ja
rcll
or
iret
outsl
js
pop
push
daa
sahf
and
and
jb
mov
fwait
rep
push
dec
mov
clc
push
aam
and
push
add
push
enter
cmp
mov
pop
add
or
push
cmp
imul
jnp
loope
pop
mov
xor
mov
mov
xchg
xchg
xchg
imul
mov
jne
lods
sti
adc
mov
pusha
or
out
popa
sbb
mov
mov
sbb
cmpsl
hlt
insl
mov
jecxz
frstor
or
sub
stos
imulb
shlb
divl
lods
pop
iret
mov
sbb
or
jae
sbb
pop
jbe
pop
pop
add
inc
lock
sub
outsl
test
push
push
aas
jo
and
lock
aas
mov
jo
xor
ss
scas
test
inc
mov
mov
stos
jl
mov
outsl
mov
movsl
lods
dec
dec
into
xor
js
imul
push
mov
pushf
sbb
xorb
mov
cmp
xor
stc
aam
mov
mov
dec
or
push
orb
loopne
hlt
add
add
push
aad
cwtl
push
cld
xchg
fnstsw
or
jl
xchg
add
push
mov
push
movsl
adc
lods
addr16
mov
mov
cmp
mov
mov
cmpsb
xchg
insl
push
inc
stc
sbb
pop
test
bswap
push
push
cmp
ret
dec
sti
cmp
ljmp
popf
in
xlat
xchg
jnp
sub
arpl
cmpsb
cmp
push
lahf
lahf
mov
mov
dec
jl
cmp
pop
or
xor
test
out
push
stos
lahf
popa
pop
cld
cmp
mov
mov
mov
and
pop
sub
xor
push
pop
xor
movsl
or
push
mov
sub
daa
and
mov
push
or
xchg
push
sub
in
xchg
js
jge
xchg
inc
inc
in
scas
push
loope
in
jl
movsl
dec
cltd
mov
sub
cs
jo
dec
std
jns
inc
loope
mov
mov
cld
add
xor
sti
cmc
pop
daa
push
fdivp
xchg
cmpsb
and
jnp
pop
xchg
pop
cmc
sbbl
arpl
shl
xlat
call
dec
add
inc
roll
fiadds
clc
cs
adc
or
adc
fwait
dec
jns
jle
inc
clc
push
mov
and
loop
or
out
popf
loop
div
push
ja
ds
mov
idivl
add
or
in
imul
push
pusha
mov
shrb
mov
scas
sbb
inc
or
and
mov
shll
std
and
lahf
icebp
faddl
xchg
clc
aam
stos
ss
adc
into
psubusw
dec
nop
fiadds
ret
arpl
mov
adc
sub
cld
outsb
mov
push
push
out
or
into
sub
push
add
xor
ljmp
call
adc
addr16
dec
fnstenv
fucomip
js
lock
in
ja
mov
cmp
mov
mov
ss
arpl
subb
aaa
es
cld
scas
sub
mov
sub
lret
mov
sahf
mov
ja
jb
adc
cmp
sbb
jmp
loopne
mov
sbb
mov
mov
dec
xchg
pop
adc
dec
and
div
cwtl
mov
aad
and
fnstenv
or
nop
out
jnp
test
and
sub
add
mov
dec
or
sbb
out
cs
test
jmp
dec
mov
mov
rclb
push
dec
push
jecxz
into
sub
xorb
push
aaa
inc
ds
lods
cmp
mov
mul
sbb
ss
test
add
mov
into
fbld
and
mov
stc
xchg
in
lock
repz
pop
les
std
xor
into
or
jae
fsubs
jbe
shll
jp
loopne
adcb
jl
pop
les
lods
dec
mov
js
xchg
ja
loope
and
and
out
sbb
inc
mov
repnz
and
jg
shll
xchg
push
lret
cmpsl
lahf
scas
adc
cld
faddl
jb
mov
out
loop
shrl
mov
push
jge
idivb
xchg
out
cld
dec
dec
in
mov
lahf
add
mov
or
scas
andb
mov
dec
lods
inc
xchg
jae
and
sbb
insb
ja
sar
adc
test
not
cwtl
sub
add
sti
and
xchg
pop
lret
and
mov
negb
adc
lock
jns
adc
rorb
pop
adc
mov
push
or
pop
mov
sub
sbb
mov
stos
lret
xchg
cmpsb
jl
or
incb
mov
push
std
sbb
dec
sub
je
ret
iret
jbe
push
add
shlb
add
add
fimull
daa
or
inc
stos
int
pop
mov
jge
mov
and
aam
nop
loope
arpl
subb
subb
lock
mov
fs
cmpsb
pop
mov
push
adc
jbe
in
sbb
cli
lods
push
arpl
adc
repnz
daa
mov
jno
add
lds
cld
insl
mov
sarb
addr16
pop
repnz
shl
jbe
ja
and
jae
fists
xor
das
scas
shll
inc
inc
xor
int3
adc
gs
mov
pop
cmp
xchg
into
adc
cwtl
sahf
inc
xchg
cmp
sub
sbb
sub
cmp
push
fmull
insl
lods
nop
add
mov
xchg
pop
dec
cld
mov
push
dec
sahf
cld
insl
mov
sub
lret
mov
jnp
mov
js
lds
addr16
push
dec
out
push
and
and
iret
inc
mov
loopne
lret
lea
pop
movsl
scas
mov
pop
mov
jge
sub
leave
mov
aam
pushf
jnp
xchg
push
aas
push
mov
daa
movl
push
sbb
cmp
in
pop
sub
out
out
push
int3
js
ret
cld
xchg
jnp
fnstcw
push
sbb
mov
sbb
ficoml
dec
mov
ss
pop
lahf
fisubrs
jmp
data16
push
pop
stc
inc
adc
jl
push
cld
adc
xchg
ss
daa
cmp
popa
sub
cmpsl
lea
xor
movsl
push
jecxz
jnp
jae
aas
aad
out
jg
cmpsl
iret
add
jbe
aad
in
xchg
inc
xlat
xor
mov
push
out
push
mov
mov
pop
sub
shlb
idiv
xchg
out
push
dec
inc
into
mov
lds
xchg
cltd
les
iret
cmpsl
sub
cli
push
outsb
xlat
shr
xor
xchg
adc
adc
cltd
jbe
stos
mov
inc
xchg
fnstcw
gs
dec
aas
fs
push
mov
aas
xchg
xchg
jne
sti
out
lret
das
cmpsb
jp
push
les
mov
inc
sub
jns
push
pop
dec
cli
add
jle
shlb
aaa
jmp
or
daa
in
add
push
mov
mov
leave
out
imul
sarl
int3
cwtl
or
dec
fidivl
pop
movsb
mov
inc
xchg
or
loop
jae
or
add
loop
aam
leave
jbe
pop
jns
repz
sbb
pop
cmp
js
cmp
lods
cmp
mov
into
in
adc
cmc
fisubs
adc
loopne
sbb
sub
jge
mov
xor
push
dec
jg
or
icebp
imul
daa
ljmp
push
pop
cmpsb
pusha
mov
push
dec
mov
pop
repz
inc
add
loopne
mov
cmp
cmc
aam
lret
push
hlt
sub
push
xchg
cmpsb
ret
push
out
lock
mov
xchg
inc
movsl
xorb
out
jbe
stc
loop
push
ljmp
aas
push
adc
lock
push
mov
and
mov
push
mov
sbb
adc
sbb
flds
push
push
pop
repnz
in
or
pop
out
rcrl
xchg
dec
in
in
lods
jbe
pmuludq
jae
xor
push
das
xorb
movsl
hlt
pusha
dec
popa
or
sbb
into
lods
pop
repnz
pop
pop
lret
jae
xchg
pop
ja
mov
sub
out
or
jbe
jnp
push
dec
sub
nop
call
jae
jg
imul
or
pop
std
test
mov
and
pushf
clc
adc
sbb
pop
mov
pop
adc
repz
lds
rcrb
stos
ficoms
or
addr16
cmp
andb
and
daa
cld
mov
cmpsl
pop
testl
mov
aaa
sbb
push
mov
or
sti
pop
xor
ret
rcll
notl
dec
mov
ficoms
shlb
cld
cmp
inc
out
mov
pop
das
jae
push
sbb
scas
push
rorl
hlt
out
jns
mov
adc
sbb
cmpsl
scas
inc
sub
sub
push
adc
mov
emms
lock
test
or
xchg
fxch
imul
clc
push
cld
int
jp
pusha
mov
dec
lods
mov
cmp
fimuls
leave
movsb
cld
mov
cmc
jnp
ficoml
pop
push
adc
imul
inc
sbb
insl
in
cwtl
xchg
jo
add
rcr
pop
or
in
repz
nop
jp
dec
icebp
arpl
jbe
sbb
xchg
aam
sub
out
adc
sub
xchg
ds
xor
or
push
inc
push
les
sub
inc
or
add
push
ljmp
dec
shrl
sub
mov
mov
jae
inc
shlb
int3
xor
test
les
jmp
rcll
xor
sti
push
out
xor
fistpll
loope
lock
std
lods
fwait
in
or
lea
push
adc
jp
and
nop
testb
xlat
cmpsl
mov
insl
popf
lds
out
ja
xchg
sbb
scas
es
sub
mov
daa
mov
sahf
and
push
mov
cld
push
add
and
mov
lahf
data16
sub
sbb
fcmovne
sub
inc
es
inc
push
cld
ljmp
and
and
lock
cwtl
js
lahf
addb
pop
xor
cwtl
int
jnp
mov
ss
cmp
iret
sbb
inc
push
ret
jo
inc
jns
cmp
arpl
div
lret
mov
add
xchg
mov
insb
cmp
ja
dec
push
inc
or
xchg
xchg
cmpsl
jo
pop
out
add
cltd
pushf
sub
jecxz
dec
mov
cmp
add
xchg
add
ljmp
aas
xchg
cltd
fcompl
inc
enter
sub
fnstenv
hlt
jb
cmp
cltd
push
push
push
xor
pusha
out
inc
sbb
xor
sub
lock
jge
jns
dec
xor
or
out
dec
mov
loope
das
data16
mov
cwtl
data16
stc
ss
ja
std
pop
testl
and
jle
jo
add
inc
or
jns
jmp
pop
or
movsl
insl
cmp
outsb
pusha
insb
xchg
fld1
cmp
pop
mov
in
std
sub
xchg
push
push
push
in
xchg
and
adc
testl
loopne
mov
adc
shrb
sub
scas
mov
js
jg
fwait
push
pop
idivb
mov
dec
js
pop
bound
xor
and
jo
and
dec
clc
push
add
adc
xor
pop
mov
scas
mov
or
cmp
push
jae
mov
sub
int
nop
push
rcll
arpl
loop
jge
int3
imul
sbb
mov
adc
or
push
add
jne
outsb
jbe
mov
jg
adc
push
mov
xlat
cmp
lds
repnz
mov
jp,pt
cmp
stos
movsb
lods
scas
adc
and
sub
movsb
xlat
leave
jo
cmc
ja
push
and
xchg
jo
jae
inc
mov
push
test
bound
shl
imul
movsl
rcl
mov
in
scas
and
jl
inc
inc
sub
cld
push
test
sub
pushf
xor
push
jl
cwtl
clc
cmp
fsubrs
cmp
adc
arpl
aad
adc
and
xchg
cmpsl
das
push
scas
cmp
mov
sti
rorl
xchg
xor
gs
rcl
sbb
jle
mov
mov
inc
xor
or
scas
mov
inc
mov
mov
adc
cmp
nop
push
movsb
mov
ljmp
data16
adc
idivb
fsts
jg
jne
roll
es
insb
xchg
mov
cmpsl
push
js
js
inc
into
sub
ret
mov
sbb
cmc
std
xchg
in
inc
in
aam
cmpsl
cmpsl
icebp
jne
sub
xor
cmp
and
sbb
mov
lea
sbb
or
inc
into
push
mov
inc
mov
or
clc
ffree
sub
aaa
int
push
repz
mov
popa
aam
mov
jle
in
push
fmull
fldcw
lea
mov
inc
mov
adc
jbe
nop
test
mov
xor
push
loopne
mov
in
mov
icebp
repnz
adc
xlat
xchg
dec
cs
sub
out
inc
mov
pusha
movsb
fsubs
loopne
notb
pop
orb
paddusb
jno
sub
jne
popf
mov
inc
or
pop
pusha
xor
add
inc
add
sub
enter
inc
xchg
mov
lcall
outsb
fdivrs
enter
ss
add
pop
push
imul
add
or
test
cmpsb
xor
push
cld
fstpl
inc
mov
sbb
mov
pop
push
iret
movd
popf
or
and
pop
shrl
pop
out
xchg
jo
cmpsb
adc
pop
cmpsb
mov
lods
cmp
dec
testb
loop
inc
das
add
adcl
fcmovu
dec
push
out
xchg
push
push
shll
les
adc
mov
movsb
jns
pop
lret
mov
outsb
std
sub
sbb
sub
add
pop
pop
aam
and
popa
and
xchg
outsl
sbb
sub
mov
out
adc
fcoml
xlat
mov
push
push
jecxz
mov
imulb
xlat
mov
jns
cmc
xchg
js
in
mov
pop
loope
testb
out
popf
pop
adcl
int
rcll
pusha
dec
je
or
movb
mov
inc
dec
jns
add
outsb
divb
adc
loop
mov
std
imul
push
adc
mov
stos
mov
xchg
mov
int3
in
mov
cld
jg
out
xor
ret
pop
test
test
or
ss
les
xchg
push
inc
push
or
mov
addr16
and
div
cld
add
fwait
or
and
add
pop
inc
push
je
cli
testb
ss
mov
cmp
push
aaa
jne
mov
bswap
sarb
movsl
into
push
sbb
movsb
cmp
dec
ds
pop
sub
bound
hlt
cld
mov
subl
push
cli
xor
adc
jl
jns
jmp
sbb
xchg
mov
imul
cmp
dec
fdivp
xchg
stos
sbb
test
push
jns
insb
xchg
adc
daa
scas
mov
cs
cmp
cld
xor
loope
xchg
sub
rep
adc
or
jp
daa
loopne
jecxz
jmp
push
into
mulb
pop
xchg
fldenv
scas
lock
jle
adc
push
xor
inc
sbb
xor
mov
hlt
cwtl
lock
sbb
nop
cli
icebp
add
iret
outsb
aam
pop
lret
fbld
iret
jns
xchg
mov
cmc
cmp
jp
xchg
mov
testl
push
pop
cmp
imul
adc
xchg
pop
jecxz
cmp
cmp
rcl
mov
sub
sub
sbb
jns
push
sahf
gs
mov
push
ljmp
popa
adc
jne
inc
arpl
and
lock
sub
jg
daa
xchg
aaa
lods
test
imul
mov
pop
ret
sub
sbb
js
xchg
push
add
shl
jns
loop
ds
cld
dec
add
icebp
add
and
iret
nop
and
add
and
push
daa
inc
ds
or
sub
cmp
cld
lea
pop
adc
stos
subb
es
dec
mov
fwait
mov
das
loope
xlat
iret
pop
lock
aad
push
add
out
add
mov
test
or
pop
js
mov
lods
cmp
add
bndstx
cmp
insl
xlat
xor
pop
movsl
sub
inc
jns
pop
pushf
push
cmp
lret
loopne
loope
push
nop
inc
xchg
aam
push
repz
lods
push
jne
inc
pop
std
push
movsl
in
xchg
mov
mov
mov
cmp
sub
pop
scas
outsb
mov
fwait
lods
cmp
stos
loopne
fsubs
sahf
push
mov
shlb
testl
je
shrl
imul
icebp
jo
and
cwtl
clc
nop
les
jge
mov
pop
lcall
mov
hlt
xor
cmc
insl
inc
movsl
xor
fucomip
imul
test
jns
jle
sub
subb
sub
cmp
mov
mov
add
push
ljmp
sbb
adcl
push
mov
jns
lcall
sahf
aad
add
xchg
movb
mov
es
fsub
test
ljmp
mov
mov
sub
nop
xor
dec
jns
xchg
mov
or
jo
mov
outsl
in
aam
xorps
xchg
sti
insl
adc
call
jb
scas
imul
and
mov
fldt
jne
add
inc
mov
lahf
loope
dec
divl
add
insb
jle
jp
mov
cmp
inc
mov
scas
xor
and
test
jno
test
jno
cmp
insl
movsb
mov
mov
cld
push
adc
inc
outsl
clc
pop
dec
add
pxor
xchg
pop
cltd
nop
daa
xchg
mov
arpl
push
mov
push
xor
xchg
jo
cmp
and
nop
adc
jns
jp
lret
push
clc
ljmp
xlat
scas
gs
pusha
imul
dec
aam
sbb
cmc
xchg
cmc
mov
out
ljmp
out
fldcw
daa
lods
cli
lods
stos
xchg
inc
inc
neg
mov
ficoms
jge
outsb
aaa
cld
imul
jbe
lods
outsl
push
xchg
nop
jne
jae
dec
jns
cmp
xlat
push
lret
clc
test
idivl
daa
imul
cld
add
mov
lcall
and
inc
test
xchg
cmc
xchg
shrl
xor
xor
xor
js
jbe
sbb
cmp
xchg
xchg
scas
cmc
xchg
push
xchg
pop
mov
sub
repnz
mov
fcmovb
test
cmpsb
adc
mov
movsb
mov
push
sbb
pop
int
sub
cli
mov
imulb
mov
bound
push
lahf
pop
lahf
or
adc
loope
push
add
sbb
sub
cmp
daa
dec
scas
inc
sbb
push
jle
clc
inc
push
and
clc
das
mov
fs
dec
push
and
adc
mov
cmpsl
adcb
xchg
sub
and
movsl
insl
dec
ljmp
imulb
les
pop
sub
addr16
int
sub
imul
jo
mov
xor
test
js
pop
adc
cmovo
xor
dec
lret
and
push
jb
aam
pushf
test
iret
sbb
cmpsb
imul
popa
xor
jbe
cli
jbe
outsl
mov
ss
test
adc
leave
sbb
xor
lods
mov
int3
data16
pop
shrb
daa
and
div
jl
push
mov
call
xor
ret
in
and
aam
sub
sti
jb
cmp
mov
xchg
cmc
ja
jnp
enter
addr16
ret
daa
lods
lcall
shl
es
or
sarl
out
roll
push
xchg
lods
imul
jns
out
inc
inc
into
lock
in
push
push
enter
ljmp
je
mov
cmovs
test
xchg
fisttpll
out
icebp
adc
cmpsl
fldl
cltd
adc
jbe
fbstp
js
clc
cmp
or
xchg
add
add
push
dec
test
aaa
jmp
and
negb
push
es
js
insb
mov
ss
push
je
mov
sub
lock
adc
sbb
mov
insl
mov
mov
push
or
sbb
lods
dec
imull
je
jne
scas
in
xchg
pop
xchg
dec
sub
shlb
pushf
xor
sbb
ljmp
in
jbe
and
ja
ljmp
push
sbb
pop
lds
jmp
fstl
xor
dec
xor
pop
cmc
hlt
jbe
jbe
dec
in
inc
sbbb
cmp
add
or
sbb
sub
mov
adc
mov
movsb
fisubl
sub
call
push
cmp
nop
cmc
sub
ds
dec
fmuls
lea
and
and
arpl
aaa
das
and
negb
mov
out
daa
push
fnstcw
pshufw
enter
cli
addr16
jge
cmp
je
inc
lret
ja
js
notb
cmp
inc
ds
pop
and
pop
sti
mov
inc
adc
dec
pusha
cmp
push
cmpsl
je
loope
push
adc
push
aas
xchg
dec
adcl
mov
pop
mov
rorl
dec
ss
pop
lds
mov
pop
loope
lds
mov
push
add
lea
pop
ja
hlt
jl
inc
loopne
ljmp
dec
test
test
jmp
lods
les
orl
cmpsb
ror
neg
sub
aas
xchg
sub
jp
mov
adc
out
in
lock
and
outsl
jecxz
mov
out
mov
cmp
divl
inc
mov
stc
lret
ss
inc
shlb
notl
idivl
xchg
add
lods
sbb
mov
scas
arpl
pop
xchg
mov
insb
cmp
outsl
mov
je
inc
mov
imul
cmp
imul
pop
and
inc
or
stc
dec
cld
pop
push
sub
rcrl
adc
test
in
shll
inc
mov
test
or
icebp
add
mov
nop
sbb
jp
adc
mov
addr16
out
push
cmc
lret
or
sahf
xor
sbb
cmpl
cs
in
cli
imul
pop
and
dec
xor
dec
xchg
in
xor
mov
adc
sahf
in
mov
mov
repnz
jmp
movsl
jmp
xchg
push
sti
xor
dec
cltd
inc
cmp
inc
frstor
lea
out
hlt
mov
mov
cmp
test
ds
cmp
test
in
sti
mov
jae
imul
mov
arpl
enter
stos
jnp
mov
fsts
jo
mov
insb
inc
js
xlat
pop
in
mov
imulb
nop
add
fdivs
cli
mov
sub
adc
aas
test
or
ja
xchg
test
loop
movsb
lock
jbe
cmc
mov
adc
cmpsb
into
daa
mov
inc
call
out
pop
jecxz
adc
inc
cmp
ljmp
test
sub
inc
mov
test
pop
jbe
fsubl
clc
sub
cli
aaa
mov
pop
jmp
repz
lret
xor
sti
cmp
stos
jbe
xor
cmp
push
jg
notl
loop
inc
inc
dec
clc
jo
jns
xor
jl
cmpl
or
movsl
inc
hlt
dec
aam
in
ljmp
lock
dec
aas
adc
mov
and
xchg
dec
inc
jl
mov
cmpsb
cmp
lcall
mov
data16
jl
mov
hlt
dec
or
jl
in
xchg
arpl
and
into
or
testl
std
xchg
dec
jnp
sbb
xor
push
or
flds
xchg
adc
iret
insb
jp
idiv
mov
leave
enter
int
mov
jmp
jnp
push
subl
sbb
lcall
sub
xor
pushl
xchg
xor
dec
es
pop
jmp
xchg
mov
imul
add
ds
insl
mov
cwtl
jp
fptan
sub
xchg
jns
lods
ds
sub
xchg
ja
into
mull
movsl
lods
ja
out
or
adc
push
js
pop
idivl
js
aaa
notl
idivl
jbe
jne
xor
xor
shl
inc
pop
and
cwtl
sahf
ja
div
dec
mov
aaa
leave
jl
loope
sub
xchg
mov
xor
inc
xchg
add
cmp
icebp
sti
mov
mov
jbe
and
nop
jle
cwtl
mov
mov
clc
or
add
cmp
jae
adc
xchg
jle
mov
adc
pop
movsb
xor
push
push
cmp
push
loopne
add
js
fstpl
cwtl
mov
jo
sub
dec
and
arpl
aad
daa
cld
cmp
cmc
divb
popf
ss
into
sbbl
mov
mov
out
mov
pop
out
insl
add
dec
cld
and
pop
icebp
imul
xchg
into
into
xor
or
outsl
push
scas
ja
lods
push
test
jecxz
out
or
push
push
jae
xor
fstps
mov
xchg
scas
jl
xor
xchg
jne
adc
loop
xchg
inc
jnp
xorb
push
ja
out
out
outsl
inc
adc
cmp
in
mov
add
daa
or
push
clc
sbb
bound
sbb
jle
insb
xchg
jo
je
xor
push
jge
and
mov
out
imul
xchg
das
in
ret
or
push
ficoml
into
xchg
adcb
xor
cld
pushf
and
into
xor
mov
in
add
jl
std
push
add
aam
mov
ss
bound
jmp
daa
cmp
xor
divl
es
mov
mov
pop
mov
push
mov
jp
divb
fistl
cli
pop
out
add
iret
cmpsl
push
fidivrl
pop
xor
sub
or
nop
cwtl
mov
ds
mov
into
inc
movsl
mov
mov
jnp
cmpsb
insl
jg
push
inc
push
sbb
mov
or
jp
mov
pop
sar
or
fwait
jo
lock
dec
jge
addr16
in
xchg
xlat
push
adc
pop
and
lahf
jae
std
cmpsb
lods
fstpt
shlb
sbb
aas
incl
or
cld
sub
cmpsl
test
int
inc
sub
jg
push
xchg
ffree
adc
div
rol
aaa
loope
inc
dec
int
ss
push
add
jae
jmp
mov
sub
cld
or
push
inc
loopne
mov
xor
fs
mov
loopne
adc
es
lods
pop
shll
dec
aad
imul
idiv
jmp
daa
push
pop
clc
lock
mov
jnp
add
aad
push
idivl
stos
pop
jge
ja
lds
shll
cmpsb
push
mov
mov
cld
add
repz
sbb
mov
scas
repz
dec
mov
inc
into
push
pop
aaa
cmp
out
jb
xchg
inc
and
xlat
loop
jmp
test
and
lcall
hlt
cmp
adc
inc
notb
lret
adc
push
jno
adc
add
push
divb
mov
jp
pop
fsubrl
fstl
sti
out
jns
or
xlat
xchg
jne
test
xor
scas
add
lods
loop
add
jne
mov
push
fwait
jbe
adc
jo
dec
jbe
sahf
push
lahf
pop
outsb
xchg
push
push
xor
push
lods
jne
sbb
adc
icebp
lock
js
cmc
sub
daa
fdivs
pop
testb
je
insl
into
cwtl
lret
xchg
cwtl
mov
push
hlt
iret
sahf
add
pop
loop
in
ja,pn
jmp
ss
movsl
sub
test
outsl
adc
xor
push
sub
pop
add
pop
test
mov
push
ja
sbb
insl
mov
sahf
ja
sub
ja
cltd
repnz
mov
xor
int
cmpsb
rolb
out
mov
or
mov
jo
hlt
cmp
adc
sbb
stos
cmpsl
pop
rcll
jo
pop
mov
aam
inc
ljmp
aaa
test
or
mov
xchg
push
ja
out
xor
stos
sub
loope
sbbb
push
sti
push
test
push
cwtl
add
je
pop
mov
shll
pop
adc
fwait
imul
push
stos
cltd
xor
dec
jb
add
add
stc
push
mov
push
add
ss
aam
and
adc
cmp
ljmp
and
sti
ss
adc
dec
jo
mov
enter
push
pop
fstpl
daa
jbe
push
cmp
jae
push
xchg
sub
sub
dec
adc
mov
push
pusha
pop
jns
push
ss
xor
xor
push
in
daa
insl
subl
jne
popa
lcall
push
sbb
or
and
lock
iret
and
xchg
inc
push
cmpsl
data16
mulb
or
ljmp
test
xchg
dec
popw
lock
pop
scas
jl
test
dec
ficoml
stos
iret
and
sbb
fists
btcl
jbe
push
daa
jae
ret
or
aaa
pop
pop
stos
frstor
jbe
cmp
divl
loopne
and
std
xchg
inc
movl
icebp
xlat
push
xor
cmp
jae
push
sbb
in
pop
scas
into
mov
out
pop
xchg
pop
call
cmc
dec
test
dec
cmpb
fcoms
push
lss
stos
mov
mov
pop
addr16
ja
mov
xor
lret
mov
enter
subb
pop
clc
cmp
mov
ds
xor
pop
adc
jnp
enter
dec
push
mov
shl
dec
dec
fwait
insb
je
sbb
cmp
mov
sbb
les
stos
insb
add
inc
sbb
int3
push
jl
jg
pusha
pop
ss
push
dec
xchg
cmp
cmp
sub
repz
sar
mov
or
mov
push
or
loop
ficoml
mov
jne
dec
xchg
cmpsl
clc
sbb
push
clc
leave
fprem1
push
inc
loope
iret
add
lret
push
sub
pop
out
push
insb
inc
cmc
fdivs
mov
pop
or
mov
outsb
loop
scas
dec
jbe
iret
cltd
mov
xor
and
pop
test
jmp
pop
and
pop
jecxz
fldl
into
mov
jp
mov
ljmp
xlat
xor
repz
scas
in
jns
aas
add
mov
in
add
fstpt
popf
pop
xor
dec
cmp
daa
pop
mov
lods
sbb
and
sub
out
outsl
mov
mov
addr16
cmp
psrad
pop
cmpsl
mov
dec
xchg
xchg
push
ss
adc
adc
int3
lcall
cmc
mov
sub
xchg
cmpsb
inc
out
cmp
cmc
pop
into
push
inc
xchg
addr16
mov
dec
mov
pop
dec
std
inc
adc
jo
sub
inc
push
sub
sbb
mov
jle
xor
push
shl
inc
cld
jne
fsubs
and
inc
aam
lds
testl
jo
jae
das
mov
fisubs
pushf
movsl
mov
jmp
shrl
out
call
sti
pop
cli
jnp
call
dec
icebp
arpl
rorl
and
lea
rorb
clc
dec
js
ja
cmp
jg
inc
push
stc
aas
add
ret
push
insb
aaa
mov
jnp
ds
cmp
add
mov
outsb
cmp
add
jno
adc
je
je
cmpb
mov
jns
mov
addb
sarl
xchg
sahf
jbe
repnz
cli
xor
dec
or
inc
jns
add
mov
sbb
fadds
xor
add
sbb
add
cmc
jne
aas
add
jnp
mov
ret
inc
fnstenv
cmp
orb
lcall
pop
xchg
xlat
call
stc
mov
in
dec
jo
popl
dec
push
cmp
out
and
imul
cmpsl
cmpsl
movsb
xor
outsb
sar
aas
adc
outsb
add
gs
mul
out
cmp
add
ss
fcoml
sub
push
sub
jb
rol
inc
jnp
cmc
jge
aaa
iret
lock
jg
es
and
cs
idivb
adc
lods
cmpsb
mov
xchg
xor
pusha
dec
mov
lock
loope
cmp
sub
cmpsl
scas
xorb
xor
mov
addl
dec
pop
inc
testl
fwait
xlat
xchg
cmp
pop
push
fwait
jns
mov
adc
out
cmp
js
jne
add
ss
lods
shrb
out
call
xlat
mov
mov
sub
mov
inc
in
jns
out
push
clc
mov
sti
add
out
push
mov
test
movsb
or
movsl
ss
sub
mov
pusha
jns
je
mov
lods
add
jns
xor
jp
or
jne
out
arpl
pop
jae
sub
cmc
mov
icebp
insb
mov
test
pop
push
aam
clc
pop
icebp
fsubr
insb
sti
pop
fs
es
pop
movsb
mov
icebp
in
push
mov
shrb
xchg
jp
add
into
mov
jle
cld
lea
xchg
loope
mov
push
sub
out
push
mov
into
push
or
mov
lret
mov
out
xchg
es
out
mov
jp,pn
push
shrb
mov
cmpsl
or
jl
fcmovne
jp
daa
loop
cmpsl
std
sub
insb
lds
pop
xchg
mov
add
pop
pop
xor
stos
dec
jae
adc
sub
or
out
lret
subl
icebp
icebp
into
loop
mov
pop
das
pop
inc
add
shrb
push
sbbb
in
cld
test
mov
fnsave
notl
jmp
xchg
xlat
imul
jl
push
pop
inc
push
adc
and
fdivl
add
addr16
loope
adc
pop
cmpsl
aad
xchg
into
pop
pop
xor
jae
call
push
adc
int
inc
insb
jmp
push
lea
jp
out
inc
or
dec
push
cmpsl
test
js
fcoml
pop
out
cli
arpl
cld
das
jp
in
out
pop
jno
mov
jl
clc
jle
into
test
cli
loop
lea
out
add
lret
in
cmc
std
jg
adc
negb
cmc
imul
jne
into
shl
mov
inc
add
dec
xlat
movsb
xrelease
mov
pop
jmp
adc
mov
out
jge
loopne
into
push
and
imul
mov
fldenv
rcrb
xor
fdivrs
loopne
or
and
push
mov
out
pop
leave
mov
jmp
inc
ja
sub
dec
or
aaa
lods
add
pop
dec
inc
push
aaa
jle
add
jl
inc
outsb
sti
adc
adc
testb
lock
cwtl
test
es
sarl
mov
cs
ss
pop
inc
mov
lock
pushl
push
in
pop
nop
pop
jae
adc
loope
mov
inc
xchg
mov
lcall
orl
lds
xor
jns
test
jle
add
push
dec
push
xchg
jge
xor
inc
pop
mov
enter
xor
push
addr16
pop
mov
or
xlat
pop
dec
pop
idiv
sbb
rcrb
jmp
leave
jb
arpl
cmpsb
sbb
mov
jae
pop
cld
into
insb
je
jle
jnp
pop
lahf
out
loope
movsl
addl
push
xchg
imul
test
adc
sub
jge
std
pop
shlb
outsb
daa
cmc
into
bound
xchg
jle
ror
jbe
add
jb
leave
ss
or
test
fldcw
sbb
shll
mov
rcrb
sahf
insb
pop
stos
notb
movsl
cmp
addr16
push
out
inc
loopne
cld
subb
mov
lea
repz
cmp
xchg
push
xchg
mov
arpl
adc
cmp
lock
push
cltd
dec
stos
out
jmp
cld
out
out
fucom
out
mov
mov
js
add
cmp
iret
lret
pop
rcr
inc
loop
jns
repnz
std
xor
rcll
pop
mov
push
bnd
cmp
inc
imul
les
adc
jno
ss
and
shll
subl
ret
mov
aam
mov
repz
sbb
push
push
insl
aam
jb,pt
inc
mov
js
call
cmc
shll
jae
int3
sub
jle
popf
std
push
cli
mov
cli
push
xor
outsl
mov
jo
scas
incb
adc
jns
xchg
test
mov
jo
imulb
enter
sub
xchg
pop
leave
inc
dec
scas
cli
rcr
test
popa
ja
cmpsl
lahf
dec
loop
aad
inc
je
and
cmpsl
mov
fsubr
leave
popf
or
imul
shrl
jle
out
movsl
test
enter
mov
addr16
xor
xor
jbe
adc
dec
sub
mov
lds
push
into
test
mov
insb
and
jge
sub
or
aam
dec
add
add
push
call
int3
pop
sub
hlt
lods
mov
sti
rclb
lock
js
jmp
or
imul
mov
pop
paddq
or
jnp
ret
pop
jae
sahf
add
jmp
call
mov
and
adc
stos
xchg
dec
push
xor
in
or
inc
adc
ja
daa
test
ja
push
push
cli
mov
pop
rcrl
pop
cmp
sbb
mov
jns
jnp
jp
xchg
jle
testb
or
add
push
out
lods
push
cmc
lret
scas
xor
imulb
std
leave
cli
mov
sarb
mov
orl
and
jnp
repz
test
sbbl
in
cld
clc
cli
push
inc
stc
mov
jmp
lea
in
pop
cmp
xchg
jb
xor
mov
les
hlt
push
pushl
mov
stos
inc
jae
push
fimuls
rcrb
pushf
mov
mov
ss
addr16
mov
push
dec
inc
arpl
movsl
cmove
lds
sbb
in
cmp
gs
sbb
dec
sti
je
in
add
dec
xabort
mov
es
adc
dec
scas
xchg
outsl
xor
cli
dec
into
cmp
dec
jp
cmpsb
imul
cmp
cmc
mov
addr16
push
test
subb
out
scas
scas
xchg
js
and
dec
iret
jp
xchg
push
add
les
loop
adc
ret
adc
mov
mov
inc
dec
out
testb
mov
les
out
idiv
sbb
fistpl
xor
sti
push
insl
lods
adc
sbb
sbb
js
cmp
sar
or
in
jbe
sti
in
adc
jne
outsl
sbb
jle
jns
or
mov
aas
mov
ljmp
cld
ljmp
cmp
cmc
cld
inc
sub
into
sub
xacquire
idivb
fdivr
add
pop
inc
sahf
cmc
and
repz
imul
ss
out
shll
inc
cmp
cs
inc
add
pop
hlt
xlat
cmpsb
jp
daa
push
add
mov
repnz
dec
outsl
arpl
xchg
imul
jo
jl
sub
shll
test
mov
and
sti
sub
mov
nop
fwait
fwait
xchg
push
popa
mov
push
sahf
and
push
cli
inc
lock
arpl
xchg
adc
aas
mov
popa
and
hlt
imul
mov
lock
cmp
mulb
repnz
daa
pop
enter
push
test
clc
sub
push
push
fnsave
xchg
dec
nop
icebp
dec
dec
out
mov
adc
call
iret
push
inc
ljmp
movsl
out
lods
icebp
in
aam
adc
jne
bswap
dec
or
mov
hlt
pop
sbb
aam
pop
lcall
dec
or
in
fildl
xchg
lds
mov
mov
orl
and
mov
cmpsb
in
or
dec
loope
sbb
dec
push
jnp
mov
jno
les
cld
ljmp
aam
mov
leave
test
inc
adc
mov
pop
in
lods
pop
mov
adc
ror
xchg
push
xchg
ja
repz
stos
daa
xchg
jp
sub
enter
mov
pop
mov
mov
daa
push
jns
mov
jle
sbbl
jmp
idiv
test
sub
push
mov
popf
sub
and
cmp
lcall
cmp
lea
lods
sub
or
mov
push
adc
mov
add
and
imull
xor
shll
lret
pop
cmp
cmpsl
loop
stos
inc
xor
push
shll
lods
cmpsl
shrl
sub
jne
xchg
test
cmp
adc
pop
dec
xchg
xchg
and
shrb
sahf
out
vpmacssdql
aam
push
outsb
sbb
scas
add
mov
adc
dec
mov
clc
cmp
jl
repz
sbb
aam
jne
ret
xchg
pop
arpl
or
cwtl
mov
ret
adc
imull
sub
xor
jb
test
jg
pop
insb
or
scas
idivb
add
sub
fldt
lds
dec
lea
sub
pop
ret
pop
aas
rorl
ds
sbb
xor
push
sub
sbb
sub
cmp
daa
sbb
cmp
leave
dec
mov
xor
int
mov
test
popf
push
rcll
cld
je
sbb
jl
cs
xchg
lcall
adc
roll
insl
jl
push
daa
pop
je
pusha
sub
and
popf
insb
in
ja
int
imull
or
int
clc
jmp
fnstcw
push
push
idiv
push
dec
in
mov
repnz
mov
je
adc
movsl
xchg
cld
mov
sbb
push
mov
testl
inc
clc
xor
cmc
mov
jmp
sub
add
xor
adc
repnz
ss
icebp
push
and
jb
es
loopew
sbb
leave
lret
les
out
fdivrl
xor
pop
daa
test
sub
call
insb
sub
cld
sub
push
add
test
pop
orl
dec
cwtl
fwait
jae
mov
scas
sbb
out
xchg
sti
mov
and
jns
mov
xor
clc
jbe
in
sbb
adc
cs
push
icebp
lea
js
adc
add
leave
sub
ja
daa
push
icebp
mov
push
repz
push
mov
inc
adc
xor
leave
out
gs
int
imul
add
push
jo
cli
loop
rcrb
mov
xchg
inc
andb
clc
hlt
out
dec
je
mov
test
fnsave
outsl
fsubp
lea
loop
jmp
sbb
aaa
push
mov
and
mov
xor
sub
in
cli
icebp
sar
lods
jnp
adcb
std
pop
push
xchg
xorb
loop
jecxz
ja
and
cmp
cmovno
add
cmp
add
negl
push
ss
mov
add
jnp
sbb
adc
cmpsl
cmp
das
inc
std
jbe
imul
jg
jmp
fisubs
add
adc
mov
dec
xor
out
sti
int
fcmovnu
stc
cmp
and
test
loop
out
adc
dec
leave
cld
mov
mov
jge
inc
mov
push
clc
pop
push
nop
mov
fwait
shr
mov
add
sbb
movsb
int3
scas
mov
aam
adc
mov
push
ret
jb
jns
roll
adc
call
pop
adc
or
push
xchg
mov
mov
or
xor
push
jno
movsb
add
ja
hlt
sub
in
adc
lahf
js
and
adc
mov
int
jae
jl
jae
xchg
push
or
stos
nop
cmpl
fsubp
cmp
dec
mov
pop
jge
out
fdivrl
int3
mov
in
mov
insl
push
loop
cmpsb
cwtl
ss
arpl
xchg
iret
inc
adc
push
out
mov
test
or
pop
out
push
push
and
add
daa
lds
lock
push
push
inc
or
pop
movsl
adc
insl
movsb
or
lods
xchg
fisubrl
push
jbe
jmp
push
imul
cmp
xchg
mov
out
shlb
mov
incl
sub
add
pop
leave
jg
repnz
xchg
sbb
sbbl
test
fisttpll
std
push
idivb
push
ret
jle
cwtl
xor
mov
pop
ret
sti
scas
cld
or
sbb
mov
jb
adc
push
insl
pusha
sub
pop
in
stos
call
clc
sarb
int
jecxz
test
mov
xchg
inc
fcomip
daa
fsubs
mov
rclb
cwtl
es
mov
scas
xchg
or
mov
mov
in
clc
push
mov
lahf
enter
push
cli
xor
sbb
xor
je
outsb
jl
mov
pop
iret
and
add
imul
pop
cli
icebp
sbbl
das
movsb
outsb
xor
sub
mov
push
mov
addr16
cltd
shll
cli
inc
call
ss
cld
xor
loopne
or
or
sbb
xchg
sbb
adcl
dec
or
adc
dec
mov
or
lods
dec
pop
sbb
adc
insl
fxtract
xor
and
or
adc
jbe
stos
cmp
cmpsb
xchg
sbb
xchg
stos
jo
ja
mov
aaa
leave
out
iret
daa
mov
insb
divb
mov
jno
adc
sbb
mov
cmp
pop
outsl
adc
idiv
dec
push
out
int
ja
ja
lock
add
inc
pop
aad
and
movsb
cltd
pushf
stc
ja
mov
mov
js
lret
daa
movsb
adc
scas
inc
addr16
adc
fwait
lea
and
jge
sbb
repnz
loop
or
jo
xchg
ret
nop
jnp
test
pop
jb
out
fcoml
mov
push
into
inc
cmpsl
lds
xchg
add
push
shl
xor
sub
push
xor
movsl
inc
int
scas
cmp
inc
dec
mov
mov
cmp
cmp
leave
sbb
inc
imul
xor
roll
jo
push
dec
ja
aam
push
mov
es
cmpsl
pop
cwtl
imul
push
push
pop
sbb
pop
cmp
cli
sub
mov
stos
adc
and
sbb
icebp
cmc
dec
push
pop
iret
lods
sbb
push
addr16
mov
pusha
push
lret
daa
enter
scas
push
shlb
pop
hlt
lods
jmp
lds
sbb
lds
je
dec
repz
loopne
pushf
dec
clc
lret
inc
xchg
pop
movsl
ret
bound
fs
ss
repz
xor
fsubl
movsl
rorb
add
les
xor
int
sbb
push
aas
adc
imul
or
cmp
aam
outsb
dec
pop
andb
arpl
aam
inc
xor
cs
ret
sub
pop
mov
into
mov
and
ret
jp
out
enter
adc
in
jle
pusha
add
jno
push
mov
daa
in
sar
out
rcl
mov
push
into
ss
xchg
dec
out
insl
jge
and
shl
dec
or
ljmp
push
in
jno
cmp
jp
xchg
mov
dec
in
sbb
hlt
inc
test
xchg
call
or
nop
mov
ja
movsl
or
mov
jno
mov
imul
es
bsr
out
adc
push
pop
mov
aam
adc
cmp
mov
mov
out
popf
imul
fiadds
adcb
push
test
adcb
inc
call
outsl
imul
cs
cld
pop
imul
sbb
or
or
add
xchg
pop
pop
mov
pop
jle
pusha
daa
int3
rcr
mov
pop
jns
add
aaa
out
sbb
jecxz
ljmp
jp
sub
test
imul
sub
lea
outsl
enter
inc
repnz
call
test
hlt
cmpsb
push
imul
daa
dec
data16
mov
push
mov
lock
int3
cs
push
pop
shll
daa
out
into
jg
iret
jp
repz
ss
ja
fisubs
mov
enter
insb
dec
add
dec
movsb
cmp
sahf
pop
push
pop
pop
xchg
hlt
sbb
cmp
inc
movsl
lea
xchg
hlt
xchg
pop
je
xchg
shlb
mov
jae
nop
dec
sbb
xchg
lret
adc
arpl
sub
dec
scas
pop
stos
push
pop
lds
out
pop
cld
mov
pop
sbb
mov
or
sbb
test
divl
pop
push
mov
push
shl
pop
push
mov
and
jmp
sub
jo
jge
mov
sub
or
addr16
inc
or
dec
shl
inc
data16
pop
cmp
out
sub
jb
dec
das
aad
xchg
xor
push
pop
jecxz
add
fisttpll
xor
addr16
into
scas
sarb
mov
pop
inc
or
jbe
dec
dec
cli
clc
jp
out
insl
or
sbb
push
test
push
jp
pop
add
and
aam
lea
daa
cmpsb
lcall
and
test
add
scas
xorl
jno
fcmovne
orl
xchg
cli
inc
lods
iret
mov
fcmovnbe
cmp
jge
out
or
adc
dec
outsb
and
sahf
mov
iret
idivl
jns
sbb
mov
add
int
mov
jp
movb
jo
cmp
out
and
insb
insl
test
cs
scas
xor
push
cld
in
rcrb
fistpl
jl
ljmp
in
or
sti
fsubrl
test
mov
add
mov
shrl
push
lret
jmp
sbb
add
mov
cmpsb
push
insl
and
in
add
push
add
shll
push
mov
in
scas
or
fstpt
clc
aam
jae
jle
mov
jb
xchg
int3
lods
sbb
hlt
pusha
aam
lcall
sub
mov
fwait
xor
pusha
popa
shrb
loope
inc
cmc
jg
mov
xor
sbb
lods
rcr
or
inc
push
mov
add
inc
hlt
lret
xchg
into
loope
dec
jne
cld
xchg
rclb
loope
int3
jmp
notb
push
cmpsb
lret
pop
xchg
fcoml
push
push
fwait
lcall
imul
test
cmp
inc
push
dec
js
push
mov
mov
xchg
cmpsl
shll
in
lods
test
and
dec
sub
xchg
sub
neg
jnp
lcall
lcall
sub
dec
xchg
inc
mov
imull
push
mov
jle
pop
jno
mov
xor
pop
push
fwait
lret
lods
leave
hlt
add
mov
push
or
jne
inc
pop
popa
cmp
or
das
fldcw
mov
imul
xor
imul
adc
js
jbe
and
mov
dec
popa
mov
push
test
inc
test
cli
int
pusha
adc
push
ds
daa
iret
popf
xchg
lahf
jl
push
cmp
in
cltd
pop
xor
hlt
ljmp
jnp
xor
and
daa
scas
fmuls
cld
outsb
inc
jns
out
push
pop
cmpsl
push
sub
push
std
adc
sub
in
cwtl
jne
les
jns
xchg
cmc
stos
mov
out
jns
sub
out
in
jle
mov
cmp
lods
sub
xor
leave
xor
imul
and
jbe
data16
daa
mov
mov
push
sub
aad
mov
adc
mov
and
pop
xchg
je
aaa
xchg
pop
dec
xchg
jo
fwait
xor
dec
sub
cmp
xchg
add
iret
imul
sarl
in
pop
xchg
clc
pop
pop
lcall
hlt
or
mov
mul
cmp
push
repnz
mov
mov
test
mov
add
xchg
cmpsb
aaa
pop
pop
dec
inc
or
mov
in
cltd
idivl
inc
pop
call
dec
mov
sbb
clc
daa
out
clc
sub
movb
xchg
cmp
jecxz
pop
int
mov
pop
leave
inc
nop
sti
icebp
scas
neg
insb
push
sarl
mov
cmp
cld
jo
jae
sub
test
int3
mov
pop
ss
das
pop
push
mov
sbb
mov
cmpsb
scas
or
fs
cmpsb
xchg
jbe
jns
rorb
or
mov
sahf
shl
aam
mov
push
insb
sbb
add
lock
dec
mov
dec
cmc
push
jno
aam
cwtl
push
sbb
lock
rcll
clc
icebp
clc
xchg
test
out
sub
es
jmp
mov
loop
xchg
idivb
movsb
subb
insb
mov
inc
js
pop
or
clc
jp
icebp
inc
insl
xchg
arpl
pminub
popf
outsl
adc
rolb
add
xchg
leave
inc
mov
xchg
imul
fcoms
dec
in
das
and
scas
mov
out
nop
testb
fsub
cmp
mov
in
jecxz
push
scas
cmp
pop
mov
xchg
jl
push
sub
cmp
sub
cmp
and
pop
das
push
add
push
lcall
idivb
es
or
clc
data16
xor
stos
xchg
divl
daa
jne
mov
test
sbb
cmc
cld
insb
xchg
pop
insl
push
jb
daa
outsl
sub
sahf
inc
mov
sub
xchg
test
roll
subl
xor
jecxz
push
dec
mov
xor
mov
xor
pop
push
jnp
ljmp
loopne
pop
aam
adc
scas
std
or
lahf
js
in
jns
mov
pop
mov
or
lods
and
ds
add
xlat
xchg
lcall
add
pop
adcl
das
cmp
in
sbb
ds
inc
scas
roll
sub
leave
daa
mov
xchg
imul
imull
cld
jb
sbb
inc
sub
jno
cmp
xor
xor
inc
lea
ficoms
repz
ja
ficomps
mov
js
jl
adc
js
in
cmp
ret
xor
mov
les
mov
cmc
shl
xchg
mov
xor
js
fcomps
pop
int
ljmp
jecxz
dec
out
or
movsl
push
pop
test
imul
jg
jnp
dec
loopne
fmull
and
xor
or
loope
dec
push
cld
add
pop
jecxz
fs
adc
scas
push
pop
inc
shll
inc
out
lods
push
mov
in
inc
into
push
fs
repz
cmp
insl
jns
ret
mov
adc
add
and
pop
ja
test
js
inc
div
mov
push
insb
dec
ss
cmp
adc
mov
test
mov
sub
mov
test
xchg
xchg
cmp
les
roll
adc
lahf
add
pop
mov
xor
push
mov
fidivl
andb
jecxz
aaa
adc
jo
lock
js
in
mov
jp
call
lock
and
shr
roll
arpl
push
test
dec
cltd
loope
add
push
cmpsl
test
push
mov
dec
sub
pop
xchg
ds
mov
outsb
es
or
push
iret
pop
idivl
push
cmp
je
mov
jge
lahf
jg
cld
ss
insb
aas
sbb
mov
or
adc
jge
mov
adcl
adc
mov
jge
jp
lods
push
cli
nop
lods
push
push
pop
cli
js
xlat
in
pop
into
lret
je
aaa
je
sub
push
movsb
mov
int
nop
xor
sbb
dec
ficompl
push
fisttpl
je
xchg
mov
mov
xchg
dec
jb
sub
test
ja
jmp
movsl
jge
sub
daa
lea
xor
popl
fnstenv
inc
mov
cmpsl
push
push
jne
inc
dec
add
cmp
pop
mov
scas
add
push
cld
mov
jl
hlt
test
xor
sti
sbb
fisubrl
ss
mov
into
ljmp
imul
mov
idivl
push
push
rclb
js
add
mov
push
ds
cmpsb
inc
add
or
sub
add
cmp
repnz
jo
jb
xchg
xor
sub
sarb
scas
fsubrs
jnp
mov
icebp
mov
stos
mov
cmpsl
push
loope
push
int
inc
clc
sub
jp
xor
out
inc
inc
divl
push
enter
xchg
xchg
ljmp
xchg
out
loop
jne
mov
mov
fimuls
mov
pop
cmc
xchg
pop
cld
inc
fadds
aam
jp
sarl
loope
lret
lret
aad
push
push
lea
sbb
decl
ret
cmp
xor
jo
cmc
or
andl
cltd
mov
aas
sbb
idivl
pop
and
daa
inc
mov
idivl
pop
inc
jne
inc
cmpsb
dec
mov
hlt
jb
nop
inc
out
push
je
idivb
fnstsw
iret
mov
outsl
negb
mov
mov
jecxz
sub
adc
insb
pop
push
cwtl
xchg
cmpsl
dec
jmp
sub
push
mov
lods
loopne
mov
aaa
pop
pop
push
ljmp
cmpsl
fsts
insl
inc
xorl
jle
int
push
pop
out
pop
or
imul
aam
rcrb
jle
push
mov
dec
or
push
mov
and
loopne
insl
shr
or
not
sub
jbe
repnz
jbe
push
cltd
out
push
ja
pop
cld
testl
loope
addl
repnz
outsb
std
or
sub
dec
pop
jbe
pop
ja
fnstenv
insb
mov
cmc
lea
adc
subb
xchg
mov
pop
cmpsl
inc
xchg
push
push
scas
adc
dec
pop
psrlq
test
into
mov
ret
cld
pop
add
dec
mov
hlt
enter
clc
lds
pop
pop
mov
cs
mov
xor
adcl
lcall
scas
add
call
mov
jbe
xchg
and
scas
in
add
xor
xorps
or
testb
flds
outsb
iret
xchg
ss
push
xlat
loop
test
enter
jno
addr16
jne
call
cmc
out
and
orl
xor
adc
push
out
add
jnp
lret
cmp
enter
add
mov
mov
add
mov
mov
sbb
fcoml
lods
cwtl
cltd
inc
cmpl
sub
dec
push
and
and
pop
sarb
sub
lcall
xlat
loope
inc
in
cmp
dec
push
lods
mov
lahf
jmp
ljmp
stos
jo
xchg
push
cmp
mov
cmpsl
inc
jmp
add
add
scas
dec
inc
fistpll
fildl
ret
cmp
adc
jl
ljmp
jns
test
lahf
xchg
and
jns
mov
fdivl
outsl
lds
es
jne
cmp
jbe
cwtl
mov
scas
pop
dec
sbb
je
add
cld
xchg
pop
repz
sub
aam
pusha
fsub
stos
inc
xchg
movsb
jle
sub
popf
mov
orl
jae
pusha
jmp
inc
cwtl
push
mov
jbe
frstor
cmc
sbb
add
test
test
cld
push
xchg
ljmp
push
inc
arpl
mov
pop
adc
cs
or
icebp
gs
sub
push
pop
ds
pop
cmp
je
mov
inc
jmp
cmp
gs
adc
leave
ds
push
push
mov
jo
adcl
and
mov
insb
mov
xchg
jns
dec
jns
sbb
cmp
into
or
dec
mov
mov
repnz
pop
xchg
xor
jp
ss
rcll
add
test
push
imul
mov
aad
push
cs
sub
xchg
js
rcr
in
pusha
out
repz
aad
inc
scas
scas
pop
push
ljmp
push
es
inc
cmp
sbb
sbb
push
fistpll
push
les
out
sbb
imul
pop
push
ss
pop
add
and
popf
sbb
mov
int
dec
or
movsb
aam
mov
inc
lret
sbb
xchg
lret
jns
and
jle
movl
sbb
sbb
sbb
and
fcoms
mov
das
pop
xorl
les
das
fsubrl
out
cld
aad
or
imul
nop
popf
mov
add
sbbb
push
pop
xchg
jbe
insb
or
mov
or
sbb
mov
mov
xor
mov
xor
testb
mov
add
push
push
outsl
cmp
push
or
popa
sbb
xor
ficoml
mov
cwtl
or
sub
shrl
mov
xor
pop
sbb
aaa
push
xor
pop
sbb
loope
inc
mov
ret
mull
dec
add
add
or
aaa
lret
paddsw
sbb
add
sbbb
aam
lods
cmp
andb
jo
cmp
dec
ja
pop
loope
test
aad
outsl
sahf
and
and
jbe
and
das
cmp
xchg
adc
and
push
mov
mov
cmp
lods
cli
lahf
and
lcall
pop
mov
pop
cmpsl
inc
leave
fadds
or
push
iret
mov
pop
sbb
add
sahf
pop
jno
cmpsb
subb
jle
sub
mov
pop
mov
std
pop
xchg
cmp
cmpsb
cmp
xor
cld
movsb
in
lods
mov
daa
sbb
sar
adc
dec
mov
jae
jge
lret
push
dec
cmc
lea
pop
pop
or
sub
lea
scas
cmc
pop
loope
jecxz
stos
lcall
movsl
inc
push
mov
push
pop
mov
data16
jle
js
dec
jmp
add
es
pop
or
bound
in
add
lret
xor
cli
add
cld
icebp
dec
popf
div
lahf
sub
daa
popa
daa
xor
popa
mov
add
pop
outsl
sub
jbe
in
subl
cwtl
rcll
out
icebp
push
xorb
cwtl
inc
ficomps
and
cli
ffreep
shrl
hlt
xchg
addr16
testb
mov
addb
les
cs
xchg
mov
fsubr
xchg
dec
sbb
test
jne
idivl
mull
jmp
pop
daa
test
insl
pop
xchg
mov
daa
pop
leave
or
insl
cmc
cmp
and
test
lods
push
aaa
daa
pop
daa
lods
out
scas
lea
inc
mov
or
call
cmpsl
sub
mov
mov
movsb
cmp
xchg
cmp
fiaddl
or
push
pop
popa
cmp
adc
mov
mov
rcll
jae
jmp
push
inc
cltd
lock
mov
repz
xlat
scas
cltd
arpl
jae
cmp
subl
aam
ja
cltd
mov
loope
scas
test
and
xor
in
es
push
xchg
cmp
out
ds
xorl
out
test
mov
push
mov
lock
sub
negb
pop
sti
mov
xchg
adc
aas
sbb
mov
xchg
push
repnz
mov
dec
fistl
push
hlt
rolb
popf
mov
lods
push
or
mov
or
adc
mull
daa
repnz
cmp
lcall
inc
or
cmp
js
mov
mov
jle
cmpsl
test
adc
adc
sub
adc
xor
add
jbe
insb
out
movsb
inc
mov
and
daa
pop
cmp
cwtl
fldenv
nop
out
xor
jno
shrb
xchg
push
fisubl
outsb
test
xlat
nop
clc
data16
or
jns
movsb
ficoms
repnz
sub
ss
sub
inc
cmp
jg
fcoms
pop
push
outsb
outsb
jb
mov
pop
inc
addb
ret
or
xor
je
cwtl
sbb
cld
push
fmull
sbb
push
add
xchg
pop
jnp
push
xor
pop
mov
jnp
inc
jle
push
add
push
insb
pop
testb
mov
cs
punpckhbw
mov
sub
mov
cmc
dec
pop
pop
or
mov
enter
push
les
push
mov
daa
xchg
pop
lea
es
jnp
inc
xchg
loopne
stos
jae
lds
imul
mov
lcall
dec
repnz
outsl
adc
sbb
ss
outsl
lds
mov
xor
stos
and
sub
push
sbb
insl
mov
push
sbb
push
and
loope
outsb
and
pop
sbb
adc
aas
dec
pop
xorl
popw
js
mov
ss
push
das
fistl
sbb
adc
fidivs
mov
pop
nop
aad
test
push
and
xchg
xchg
push
xor
lods
mov
pop
xlat
daa
or
xchg
mov
jno
or
push
push
and
adc
sarb
mov
ja
jbe
cmc
rolb
cmp
pusha
push
mov
rcrl
jne
loop
loop
test
adc
sub
movsl
sub
jne
mov
push
push
shlb
loop
jmp
mov
insb
pop
insb
inc
sub
aaa
xor
jne
push
sbb
bound
mov
add
adcl
mov
sbb
repz
dec
or
movsb
mov
jge
mov
rcrl
in
fsts
mov
outsb
push
aam
pop
pop
test
neg
pushf
shl
or
cld
jg
xor
and
or
push
add
test
or
dec
lea
cmp
mov
stos
pop
dec
fidivl
daa
pop
and
adc
andl
ljmp
enter
add
pop
xchg
push
and
pusha
ljmp
jo
int3
pop
jb
test
mov
sbb
mov
out
rol
dec
cmp
pop
sti
jae
inc
repnz
mov
mov
jbe
mov
mov
cli
fs
aas
pop
lods
cmpsb
outsb
add
sahf
mov
xchg
and
sub
movsb
test
aas
xor
xor
xor
lcall
scas
mov
jl
fcmovnb
aas
int
or
lds
lea
fs
mov
inc
ja
xchg
xlat
stos
cmpsb
pop
icebp
out
in
cmp
jne
arpl
mov
jnp
mov
mov
out
cmpsb
icebp
xchg
out
xor
mov
dec
aam
fiaddl
fdivs
incl
sbb
mov
xchg
mov
je
ss
push
pop
dec
mov
pop
test
pop
xor
lods
in
bound
mov
jo
hlt
adc
push
jge
sbb
or
sti
push
jae
cmpsl
insb
decb
mov
les
mov
pop
js
fisttpl
inc
insb
pop
inc
lret
jle
sti
xor
pop
lret
push
jbe
fwait
outsl
sarl
aam
sti
jmp
inc
jl
imul
add
cwtl
xor
int
mov
pop
dec
ja
xor
scas
out
sarb
movsb
inc
cs
jb
loop
add
jmp
ds
and
scas
mov
dec
cld
cmpsl
lret
xor
aaa
addr16
push
ss
cld
cmc
xlat
jbe
jnp
xor
pop
out
nop
jo
push
mov
push
mov
add
int
mov
mov
scas
test
mov
jnp
das
faddl
push
mulb
xchg
lods
push
out
cs
pop
outsb
dec
mov
cmpsb
push
jnp
mov
add
and
js
push
inc
push
adc
inc
dec
or
cmc
mov
or
xor
push
cld
cltd
loopne
das
int
inc
jo
sbb
fsts
bound
pop
jb
orb
sub
ss
sub
mov
ret
stos
js
or
push
jg
and
ljmp
or
sub
mov
mov
inc
repnz
xor
cs
cmc
daa
push
lods
jae
popa
jl
cmpsl
cmp
inc
lock
push
jb
dec
in
shl
cmc
in
jle
insb
imull
xor
aam
and
jbe
je
lahf
fdivs
add
add
sub
fiadds
xor
das
fsubs
fs
clc
push
rcrl
jns,pn
in
add
mov
ret
jl
cmp
add
lcall
pminsw
and
roll
ret
cli
xor
inc
or
fs
ret
xor
lahf
mul
movb
inc
cmpsb
jmp
sbb
hlt
push
cmpsl
jne
repnz
cmp
ret
inc
mov
push
fimuls
pop
call
pushf
sbb
sbb
jne
jbe
mov
shlb
mov
mov
mov
xchg
gs
push
sub
add
push
fiaddl
push
aam
stos
fsub
mov
dec
out
mov
jbe
enter
iret
or
lret
sarb
popa
dec
mov
mov
push
jbe
in
test
test
pop
inc
jge
pop
loopne
das
or
mov
xor
mov
mov
loope
and
pop
adc
mov
daa
imul
std
decb
mov
jbe
dec
addr16
ja
mov
pop
cmpsb
hlt
xorl
mov
inc
push
dec
js
add
cwtl
mov
idivl
in
ds
shll
cmpsl
push
aam
fwait
movsl
mov
js
addr16
stos
cmp
sub
push
lds
lret
mov
icebp
aad
cmp
jmp
mov
rcrl
and
mov
hlt
imul
xchg
test
mov
jmp
mov
out
mov
wrmsr
loopne
adc
test
imul
cld
mov
xor
jmp
sbb
mov
cli
add
pusha
loopne
push
add
jl
inc
test
flds
push
mov
std
jecxz,pt
mov
repz
rcrl
scas
cltd
lock
shrd
aam
in
jae
jp
pusha
lahf
in
mov
fcomi
sbb
cmpsl
out
push
push
pop
rsm
dec
xor
cltd
cmp
pusha
daa
xor
lea
in
xchg
test
xchg
jge
jns
sarb
cmp
sub
mov
out
add
pop
inc
xor
sub
lock
and
sbb
or
mov
div
dec
cld
aas
jle
int
and
xor
sar
jo
mov
jg
addr16
xchg
ss
push
cmc
cli
jo
addr16
clc
stos
mov
inc
popf
loope
ret
leave
mov
fbstp
bound
jbe,pt
pusha
push
xchg
cmpsl
xchg
add
das
dec
cmp
loop
xlat
cmp
add
idivl
adc
dec
adcl
inc
imul
mov
mov
mov
mov
push
adc
sub
cltd
cs
adc
and
loope
stos
aas
ja
jl
add
cwtl
push
add
mov
out
xor
mov
or
ja
icebp
bsf
stos
dec
add
aaa
fsubrs
fdivl
pop
and
sbb
mov
fdivrs
js
scas
xchg
inc
push
adc
cmpsl
out
add
insb
jne
pushf
outsl
fisttpl
push
xor
shrb
pop
test
pop
cld
xchg
sub
es
cmc
addr16
mov
cwtl
mov
fwait
xchg
aam
dec
ret
jne
daa
jns
sbb
rep
jbe
push
jnp
mov
push
lahf
movsb
xchg
jbe
pop
jp
inc
call
ss
cmp
out
jecxz
xchg
jl
shl
negb
bnd
sahf
push
mov
icebp
scas
ljmp
iret
aad
hlt
shrl
out
pop
out
rcrb
mov
ret
sti
dec
and
and
mov
cmpsl
or
cmp
fdivs
mov
cmc
or
arpl
popa
dec
das
mov
js
mov
xchg
mov
add
xor
fpatan
inc
mov
mov
std
fcomps
or
imul
insl
mov
cmp
int
mov
and
cmp
pop
movsb
mov
dec
sbb
pop
jne
mov
mov
jecxz
or
dec
popa
jns
add
fldt
repnz
aas
in
ljmp
jb
xor
sbb
jae
mov
aas
sbb
scas
loope
inc
push
js
xchg
sbb
cmpsb
lods
shrl
sub
mov
loop
icebp
jo
ret
mov
ljmp
sub
aaa
loope
loopne
and
pop
lods
xor
cmp
shrl
or
into
push
mov
mul
in
scas
jg
cltd
xor
pop
dec
sbb
sub
ja
pop
cmp
sub
in
inc
or
insl
stos
in
mov
je
jge
xchg
popf
and
jle
aam
ljmp
or
xor
movsb
sti
adc
test
out
push
jge
lods
mov
fstpt
scas
xlat
mov
sti
push
mov
scas
jg
es
sbb
mov
cmp
jb
test
cmpsb
sti
fistpl
pop
add
cmp
mov
jp
and
addr16
mov
std
mov
mov
and
xchg
inc
fsubrl
js
repz
mov
daa
pop
xchg
push
push
sbb
xor
jecxz
mov
xchg
or
adcb
ret
mov
mov
jp
gs
or
sar
pop
pop
jns
scas
push
les
and
push
insb
xchg
sbb
popa
or
inc
sbb
lahf
lock
jecxz
xor
mov
pop
dec
outsl
sbbb
dec
push
add
jns
fdivs
nop
push
add
jl
mov
sbb
lods
jo
pop
stos
scas
ss
jmp
dec
jb
out
add
arpl
push
scas
jecxz
adc
xchg
adc
mov
push
mov
or
mov
sbb
mov
lret
lock
mov
sahf
movsb
cwtl
jge
jnp
mov
xchg
push
and
inc
jbe
cmc
pop
jmp
pop
imul
repnz
push
fadds
jb
and
in
hlt
jg
push
js
adc
test
mov
push
rol
ffreep
outsb
rcll
bound
movsl
sbb
dec
imul
xor
popa
inc
jecxz
xorl
cli
adc
adcb
inc
imul
mov
push
jo
das
push
subb
jmp
mov
add
clc
fmul
ja
ljmp
lret
cld
adc
inc
scas
jle
lret
jnp
add
pop
mov
out
jl
and
cltd
outsl
test
inc
xchg
xor
mov
mov
imulb
das
pop
into
and
fwait
out
jg
lret
in
iret
out
mov
add
pop
and
out
and
int3
mov
mov
js
leave
das
rcll
dec
lcall
ret
loope
push
xchg
mov
sbb
mov
jecxz,pn
sbb
push
inc
adc
xchg
test
dec
subl
js
mov
nop
xchg
push
daa
pop
movsl
int
les
jnp
mov
outsl
jp
jge
xchg
cmc
cld
sub
repz
push
sti
cmp
mov
sbb
mov
sbb
xor
lods
pop
shrl
lea
jle
inc
and
jbe
cltd
cli
lods
cltd
cmp
aam
aaa
adc
daa
mov
or
loopne
fsubrs
pop
inc
lock
xor
mov
jbe
into
push
test
mov
shl
sahf
loop
xchg
push
push
jo
int
and
pop
and
sbb
mov
lods
adc
push
into
out
fwait
push
jg
mov
je
je
adc
int
dec
hlt
mov
sbb
stc
lret
cli
mov
mov
aaa
fcomps
cmp
cmp
cmpsl
in
in
jbe
dec
fstp
jb
mov
adc
inc
mov
push
lea
mov
xchg
cmp
lcall
push
push
cmpsb
pop
dec
mov
push
lock
or
cmc
jns
sbb
cld
lock
cmpsl
pop
das
fwait
adc
push
jb,pn
scas
inc
adcl
push
bound
ljmp
add
jl
adc
sub
inc
mov
push
fldcw
es
sbb
push
push
in
jne
mov
mov
mov
add
lods
dec
out
or
std
scas
fildl
mov
add
mov
pop
stos
repz
jbe
sub
pushf
xchg
dec
jns
lock
movsl
push
cs
xor
jmp
pop
mov
jp
rorl
rcrb
lea
jns
pop
push
cld
lods
dec
pinsrw
int
cltd
push
test
icebp
lods
mov
cwtl
mov
or
add
shlb
pmaxsw
push
sub
stos
je
sub
adc
aas
push
rcrl
dec
fmulp
sub
ss
test
arpl
cmpsl
imul
or
pop
fmulp
push
push
push
cmpsb
and
add
jnp
idiv
aam
push
or
pop
lret
jle
sub
aam
xor
pop
sbbb
sub
testb
xchg
mov
mov
mov
push
mov
dec
jo
mov
pop
and
sub
lret
fcompl
in
daa
inc
sbb
in
mov
outsl
xchg
push
pop
shrb
sarl
or
mov
xchg
cmp
sbb
es
repz
mov
and
test
data16
pop
inc
clc
aas
dec
xor
iret
jns
dec
mov
dec
pushf
add
into
mov
roll
adc
push
mov
rcll
push
test
aaa
push
jno
jb
inc
mov
sbb
push
in
insb
mov
lods
inc
inc
mov
and
xchg
add
and
mov
xchg
xor
pop
pop
or
mov
cmpb
ja
sbb
sar
jmp
clc
pop
mov
test
cmp
xchg
test
xchg
cmp
dec
cmp
or
cmpsb
jg
or
adc
movsl
mov
daa
icebp
adc
xor
sub
push
adc
inc
divl
jp
adc
adc
mov
jno
add
pop
cld
hlt
xchg
aas
out
es
je
es
push
add
outsl
in
outsl
mov
add
sti
cld
bound
sub
and
cmp
cmp
cs
mov
fildl
ss
jbe
repnz
mov
fsubrs
ss
mov
cmc
dec
dec
fnsave
xchg
push
iret
adc
dec
into
sub
repz
mov
hlt
mov
lods
xor
inc
jge
pop
idiv
xchg
inc
dec
dec
arpl
rclw
out
xchg
scas
push
sbb
mov
pop
adc
das
cwtl
sbbl
jp
fwait
inc
xor
lcall
andl
add
popf
mov
loope
push
or
inc
push
sbb
cltd
testl
lock
fsts
sbb
sub
rcll
sub
repnz
scas
xchg
push
cmpsl
adc
push
sbb
aas
ljmp
cld
pop
sti
mov
sahf
idiv
jp
cli
dec
or
out
xor
inc
pop
add
pop
fsubrs
add
xchg
sbb
and
mulb
lea
mov
xor
xor
push
sti
xchg
sbbl
out
pop
insl
xchg
xchg
adc
mov
push
inc
inc
outsl
dec
pop
adc
xlat
xor
fnsave
insl
jl
orb
cs
imul
arpl
imul
or
divl
xor
xlat
addl
mov
inc
jns
es
jbe
out
loop
and
xchg
fnsave
leave
neg
mov
push
xlat
sbb
jg
jne
scas
xchg
jae
cltd
data16
popa
je
sub
inc
dec
push
mov
inc
sbb
out
xor
push
xor
mov
ds
cmpsl
jb
cmc
push
flds
push
in
cwtl
push
aas
out
cs
hlt
out
add
repnz
push
iret
push
xorl
nop
or
cld
fidivs
xor
out
ficoml
jbe
jae
repz
fdivp
jle
jno
pop
inc
je
insb
ret
cmpsb
mov
addr16
jne
mov
sbb
jbe
cmpsl
ror
jae
jbe
and
inc
insb
imul
mov
inc
cmpsl
adc
inc
xchg
pop
xchg
xor
stos
enter
push
mov
mov
mov
sti
sbb
insl
mulb
insl
int
cli
test
clc
sarl
insb
add
push
mov
fs
clc
jns
inc
adc
icebp
xchg
mov
lret
sbbl
sbb
fstpl
mov
push
cmp
loope
xor
fs
popa
xchg
fwait
xor
cli
xchg
loopne
ljmp
jnp
dec
ja
lret
insb
dec
pop
xor
cli
xor
hlt
add
fnstenv
cli
lcall
cmpsl
inc
inc
xor
pop
test
dec
xchg
dec
dec
jp
or
sbb
lock
fidivl
inc
inc
jp
mov
mov
inc
jb
jle
lahf
inc
cmp
adc
pop
sub
cmc
into
push
and
imul
jle
ja
mov
adc
nop
testl
and
xor
aad
inc
gs
jp
jmp
and
add
scas
mov
and
lret
cmp
sbb
mov
jnp
inc
into
lret
insl
mov
jle
xchg
rcll
xor
jp
xor
push
cli
call
aas
clc
aam
push
jecxz
popf
add
shlb
aam
xlat
mov
mov
push
xchg
outsl
push
push
pop
adc
jb
push
add
cltd
push
std
lret
mov
ja
jne
into
mov
repnz
iret
mov
mov
pop
push
sbb
push
out
xchg
daa
jnp
shr
into
jb
das
inc
negl
push
cmc
fnsave
jmp
xor
xor
inc
scas
imul
lea
jle
cmp
andl
clc
jmp
or
fstl
cmp
cld
sbb
icebp
mov
sub
jo
or
xchg
inc
pop
pop
xchg
xor
add
movsb
sbb
xor
ss
sub
push
ja
pop
pushf
test
shll
pop
enter
cmp
dec
pop
mov
insl
js
lea
push
in
das
jecxz
jg
imul
out
pusha
adc
xor
mov
insl
lock
sbb
insl
inc
fs
daa
jbe
mov
mov
arpl
scas
pushf
jg
ss
jbe
mov
rcrl
dec
sbbl
push
and
sub
push
or
call
push
push
mov
arpl
pop
aad
pop
nop
xlat
xlat
data16
mov
aaa
movsl
leave
push
call
mov
gs
jecxz
ds
insl
mov
frstor
sbb
scas
dec
in
js
adc
xchg
push
sarb
mov
out
movsl
dec
in
rcrl
int
in
aas
out
mov
pushf
and
xchg
sub
sub
cmp
jo
mov
mov
andl
mov
pop
aaa
aas
lods
or
cmp
int
xor
sub
xchg
dec
adc
jle
clc
pop
bound
cmp
push
lret
iret
gs
sub
and
adc
lahf
mov
push
jo
cmp
adc
mov
out
sbb
ss
das
cmp
lds
das
cmp
sbb
jle
scas
ss
pop
xor
jg
bound
cld
xlat
cmp
test
pop
sahf
push
in
mull
adc
xchg
jns
in
insb
cmc
ror
sbb
push
fs
fwait
add
in
jb
jl
xor
push
lock
push
sub
loope
leave
cwtl
sub
fidivrs
xchg
cmp
sub
in
mov
shll
sub
mov
testl
adc
mov
gs
jle
imul
push
cli
daa
in
sub
stos
jns
mov
mov
lcall
notl
gs
adc
jg,pt
push
inc
popa
scas
je
push
push
jbe
add
cs
mov
into
pop
xchg
sub
not
fwait
mov
scas
repnz
inc
jno
push
test
push
js
out
dec
arpl
adc
data16
and
dec
pop
je
imul
mov
cwtl
pop
out
adc
push
pop
or
mov
scas
inc
pusha
sarb
adc
arpl
jae
filds
rorl
xchg
out
fucomp
push
int
daa
mov
ja
clc
jns
cmp
or
jae
xchg
nop
add
syscall
add
jg
pop
and
das
movsb
int
daa
jnp
jle
jo
mov
add
push
push
xor
repnz
cwtl
xor
mov
push
aam
xor
sub
push
aad
or
xor
rclb
jp
test
xor
cmpsb
or
pop
std
mov
xchg
cld
mov
push
and
lea
mov
imulb
add
dec
push
and
imul
dec
es
insl
pop
addb
or
test
xchg
insl
jne
sub
aaa
adc
xchg
sub
adc
out
test
pop
sbb
xchg
push
insl
xchg
into
push
and
ljmp
and
mov
les
push
xchg
clc
xor
fs
dec
test
das
xchg
movsb
nop
outsb
push
loope
popf
nop
les
rcrl
cwtl
mov
gs
jge
dec
inc
sbb
in
inc
mov
into
loopne
movsb
fstl
xor
ljmp
dec
ret
mov
rcrl
fists
push
jnp
bound
fdivrs
and
sub
adc
push
lret
sub
test
dec
inc
or
ret
bound
repnz
movsl
scas
pop
pop
push
or
add
adc
test
sar
je
cltd
fmul
fdivrp
jle
jge
je
cmp
add
adc
and
sub
cs
xchg
sbbb
dec
xchg
std
adc
insb
in
into
data16
push
mov
std
sar
icebp
out
pop
in
cld
push
aam
xor
jge
fidivrl
mov
insl
jnp
scas
fs
imul
mov
mov
out
push
sub
cmpsl
jmp
jo
cmp
scas
testb
push
cs
mov
lcall
xchg
and
imul
xchg
xchg
mov
cltd
xchg
inc
jmp
aam
adc
adc
xchg
jno
pusha
mov
pop
fcmovnbe
sbb
leave
pushf
and
dec
push
daa
fsub
jno
add
pop
dec
loopne
push
out
mov
icebp
lcall
xor
xor
sti
scas
idivb
icebp
jge
sbb
jo
js
and
bound
push
iret
mov
and
or
divl
jbe
outsb
sbb
negb
cs
jno
icebp
mov
mov
imul
fistps
xchg
loopne
push
movsb
test
ljmp
sub
ficomps
mov
jg
imul
and
std
movups
sub
leave
push
push
dec
insl
lods
icebp
not
test
test
adc
inc
inc
xchg
and
pop
xor
fldenv
and
imul
aam
inc
orb
pop
int3
cmp
jnp
loopne
cltd
dec
mov
mov
jge
and
mov
xlat
inc
call
orl
jno
fsts
cmpsb
jl
push
jns
cld
imul
insl
adc
outsb
add
stc
push
push
pop
sub
lcall
adc
add
sbb
dec
cld
es
ret
cmp
insb
test
jle
jp
jns
inc
xchg
imul
imul
jne
ret
push
les
jb
cld
sti
rorb
gs
daa
adc
and
xchg
jg
hlt
testb
push
jo
out
rorb
jnp
jnp
int
dec
pop
and
paddw
movd
std
mov
test
mov
cld
popf
push
sbb
pop
or
and
pop
inc
or
rcrb
mov
mov
ja
ja
sub
pop
in
cmp
test
icebp
add
pop
xor
adc
dec
sub
push
pop
mov
sbb
daa
int3
iret
inc
xchg
cld
adc
inc
dec
movsl
das
cmp
mov
sub
pop
xchg
pop
ja
rep
sbb
pop
push
jbe
mov
bound
clc
sarl
add
mov
cmp
out
jno
mov
shl
stos
mov
lods
divl
jmp
cld
stos
xchg
xchg
pop
test
scas
lock
clc
pop
add
push
add
leave
roll
xor
xor
ficompl
dec
xchg
sbbl
test
dec
in
cmp
xor
and
pop
cmc
hlt
test
push
inc
push
dec
mov
inc
fstl
imul
nop
and
cmpsl
popa
pop
aas
push
pop
test
std
scas
std
lret
std
insb
std
mov
dec
sbb
sbb
mov
mov
ss
xor
sub
add
das
mov
insl
ljmp
leave
cmp
cmp
in
adc
stc
cmpb
mov
aam
jg
inc
fs
pop
mov
pusha
xchg
shlb
mov
jle
pop
pop
pusha
push
xchg
push
mov
jbe
sub
ja
xchg
cwtl
xor
jnp
add
push
stos
sbb
cs
adc
pusha
std
loopne
adc
lret
jnp
test
stc
push
outsl
dec
pshufw
cld
xor
repnz
repz
xchg
lret
cmp
cmp
pusha
aaa
adc
out
repz
pop
mov
add
mov
stos
jmp
sub
mov
xchg
mov
xchg
and
lcall
icebp
out
jns
sbb
sbb
cwtl
xchg
add
cmpsl
dec
cmpsb
out
arpl
div
insb
push
cs
sbb
popf
jecxz
cmp
inc
int3
int
into
lcall
je
xor
sbb
xchg
repnz
ficomps
outsb
scas
jbe
xor
in
add
jge
scas
cld
fcmovbe
push
mov
adcl
mov
mov
shrl
jae
add
test
daa
xchg
cmp
repnz
aam
dec
pop
sub
scas
call
arpl
test
mov
xchg
xchg
mov
adc
jecxz
mov
mov
mov
mov
repz
xchg
dec
cmp
movsb
pop
or
out
cmpsl
rorb
xor
arpl
xchg
aaa
xor
ficompl
xchg
push
ss
jns
test
sbb
mov
xchg
xor
aaa
mov
jg
out
scas
outsb
push
cmp
cmpsb
or
inc
fistl
mov
inc
imul
and
push
gs
mov
dec
cmpsl
fists
int3
js
stos
push
xor
ret
bound
das
inc
pop
and
mov
adc
cmp
xor
or
add
add
dec
out
push
sbb
adc
jge
push
shll
mov
dec
aam
arpl
iret
negb
sbb
std
fsubs
cmp
repnz
mov
cmp
push
xchg
fidivs
in
negl
xchg
insl
insb
lds
movsb
leave
cld
dec
xlat
and
mov
xchg
rcll
mov
daa
test
cmpsl
insl
mov
mov
rcll
sarl
sub
push
test
clc
sarb
dec
pop
adc
fcoml
in
and
or
lret
mov
cmp
mov
orb
sbb
fidivrs
int
dec
dec
jbe
int
pminsw
test
hlt
jmp
clc
mov
sbb
arpl
inc
or
sbb
bound
xor
mov
sbb
adc
ret
xor
cmp
or
dec
add
scas
inc
or
test
sti
movb
lods
mov
lods
xor
pop
std
sbb
and
das
insl
jle
lahf
test
dec
jmp
sbb
arpl
sbb
sub
sahf
sbb
ljmp
pop
jl
test
sarl
push
pop
dec
pop
or
pop
inc
inc
outsl
lock
pop
cmp
fsubrs
movsb
jbe
pop
xchg
push
scas
fldenv
dec
rolb
fdivrs
sbb
inc
negb
hlt
xchg
addr16
jle
jbe
push
inc
xor
xor
or
pop
mov
xlat
stos
mov
ret
cltd
jb
adc
pop
mov
loope
adc
jns
add
cltd
xlat
xor
push
push
cmc
in
popf
sub
call
adc
adc
sbb
xchg
jns
sub
push
ret
inc
jecxz
stc
push
jp
movsb
into
test
jb
out
out
jp
or
cld
adc
pop
add
mov
mov
add
lods
sbb
pop
inc
outsl
adc
test
cli
and
cwtl
lock
jbe
mov
repz
dec
xchg
fisubrl
mov
aaa
cmp
outsl
sbb
cs
dec
fcomip
or
push
jge
fucomp
bound
int
je
lods
mov
dec
push
hlt
mov
lock
subb
and
leave
jg
cld
es
sub
pop
and
jbe
jns
ss
fildl
cltd
xor
lea
out
pop
fwait
rcr
add
pop
mov
ss
aad
or
sbb
mov
push
mov
sahf
pop
mov
push
push
inc
dec
pop
or
mov
push
rcrl
mov
jg
push
jmp
repnz
and
mov
xchg
roll
loope
fisubs
data16
pop
cli
mov
lods
cmp
and
adc
mov
jle
push
iret
int
mov
push
out
inc
dec
push
addb
insl
cs
nop
push
sub
dec
or
sbb
pop
or
xchg
inc
cmc
pusha
and
xchg
in
shl
inc
test
sub
and
adc
jns
jbe
sub
loope
dec
or
xchg
add
pmaxsw
xor
outsb
in
push
xor
inc
es
jmp
push
sbb
mov
clc
add
sbb
cmc
clc
jns
ljmp
adc
fstl
lahf
ljmp
adc
cmpsb
dec
mov
sti
aas
movl
lods
jae
jno
mov
fwait
mov
fisttps
mov
stos
in
pop
push
adc
enter
mov
lods
pop
pop
jbe
daa
clc
jle
inc
mov
cmc
jmp
je
ds
jl
jmp
outsb
pop
test
out
daa
aaa
sbb
mov
inc
push
pop
sub
pop
das
pop
mov
pop
aam
loope
or
in
sbb
movsl
inc
subb
cs
jecxz
das
aaa
adc
addr16
jecxz
fnsave
in
or
outsl
mov
dec
dec
pop
push
dec
aaa
cmp
mov
xchg
pop
hlt
cmp
fdivs
xlat
push
cld
mov
xchg
call
hlt
mov
neg
scas
mov
clc
js
lcall
dec
cmp
popa
aad
shrb
out
sbb
cmpsb
pop
xchg
mov
sahf
jmp
jnp
fdivr
jl
lods
add
add
mov
incb
loope
push
cld
and
ja
mov
mov
movsl
xlat
clc
fstp
sub
dec
push
mov
cmpsl
pop
push
mov
pop
popa
xchg
jp
cli
and
or
fcomp
pop
test
stos
daa
cld
loope
pop
mov
imul
mov
rcrl
in
in
and
sti
sub
lock
pop
cwtl
loope
cld
pop
das
insb
roll
out
iret
outsl
ret
lahf
jnp
inc
icebp
out
in
jnp,pn
sbbb
lea
sbb
inc
jbe
mov
mov
add
mov
inc
test
inc
mov
inc
incb
push
pop
adc
ss
pop
dec
es
mov
testb
in
push
sub
hlt
mov
daa
notl
shrl
mov
add
arpl
sar
mov
jge
ud0
mov
sbb
and
xchg
jnp
push
loop
mov
mov
mov
mov
outsl
mov
lods
xor
xchg
jecxz
xchg
push
jp
daa
inc
out
fstps
or
dec
jge
mov
ret
xchg
sbb
pop
sbb
adc
dec
insb
mov
jbe
mov
mov
mulb
fcmovu
cmpsl
dec
cmp
insl
test
lcall
mov
sbb
xor
jns
addr16
cmpsb
addr16
push
pop
sbb
mov
add
or
sbb
cld
fbld
lahf
or
in
or
sbb
inc
xchg
mov
in
addl
int
ds
lcall
pop
aam
jmp
jae
rcrl
notl
mov
fisubs
push
sarb
ret
rcr
mov
movsl
jl
insb
fadds
imul
dec
xor
mov
daa
enter
in
mov
sub
jg
inc
shlb
popa
push
fnsave
mov
or
lock
adc
movsb
jbe
hlt
cld
je
mov
jns
mov
push
out
pop
cmp
stos
cld
sub
lds
mov
fsts
add
jle
cmpsl
lds
jmp
ja
mull
sbb
pop
jmp
mov
adc
loopne
aad
fdivr
mov
add
je
out
je
daa
notl
fisubrs
push
das
add
push
outsl
repnz
or
xchg
notw
scas
outsb
out
rclb
push
mov
push
push
rolb
loop
jbe
push
dec
testb
adc
mov
mov
mov
adc
xchg
sbb
jl
and
in
popa
sub
inc
pop
xor
mov
jns
cmpb
sbb
loope
cmp
adc
xchg
mov
sarl
mov
jb
cmc
hlt
and
xchg
push
jo
popa
inc
adc
into
cld
jnp
arpl
xchg
lret
mov
xchg
dec
xlat
pop
jns
sub
dec
push
test
lret
js
stos
addl
push
pop
pop
pop
les
addb
sar
xchg
push
cmp
mov
push
mov
xchg
int
orl
imul
pop
xlat
sbb
sub
aas
and
in
pushf
jb
scas
movb
xor
inc
add
lock
xor
xorl
scas
mov
and
pop
out
sbb
cmpsl
sbb
mov
mov
dec
fnstenv
sbb
add
adc
out
and
sbb
xchg
inc
or
push
leave
out
pop
rcrb
add
inc
or
pop
or
cmpsb
mov
cmp
sub
mov
push
jae
or
lcall
dec
dec
jge
lea
or
fcmovu
gs
sbb
mov
add
and
js
incb
les
jecxz
and
adc
out
and
test
cmc
fs
push
enter
dec
out
imul
sarl
xor
jo
cmpsb
inc
pop
add
sub
clc
mov
and
into
or
idiv
das
loop
push
js
scas
inc
shrl
fdecstp
ds
adc
dec
std
stos
int
sbb
std
popa
jno
xchg
lods
insb
adc
stos
popa
inc
idiv
pushl
cmc
pop
repz
daa
push
inc
mov
ss
scas
add
ret
in
addb
push
outsb
push
pop
and
push
or
negl
addr16
cmpsl
ja
xchg
push
inc
mov
repz
cmpsb
mov
sbb
das
or
xchg
jns
hlt
jns
add
jne
mov
dec
test
inc
lods
in
movsl
pop
cmpsl
add
push
push
pusha
pop
mov
clc
adcl
popw
add
add
jne
dec
mov
insl
jns
mov
dec
enter
and
imul
push
in
loope
jb
lods
stc
xor
insl
sub
adc
into
cmc
fisttps
mov
cmpsb
out
cmp
int
adc
out
pop
inc
mov
adc
ljmp
addr16
hlt
push
mov
jmp
test
rclb
notl
pop
ret
adc
dec
in
cmp
mov
add
jno
mov
jg
or
xchg
fsubrs
mov
into
sbb
icebp
xor
sub
sahf
loope
sub
sbb
fcomip
sbb
cmpsl
jmp
add
idivl
loope
sbb
add
inc
xor
cli
pop
in
scas
cmpsl
iret
add
cld
addr16
xor
test
xchg
xor
xchg
nop
enter
sbb
jp
jo
fwait
ja
call
dec
adc
movsl
jge
pop
das
lods
lea
xchg
ds
arpl
testl
cltd
les
xchg
mov
inc
mov
mov
dec
daa
neg
sbb
rclb
mov
push
inc
sbb
lea
add
lock
aad
cmp
jnp
ljmp
inc
mov
cwtl
jbe
adc
sbb
mov
test
pop
sbb
aam
mov
not
mov
xchg
shll
outsb
mov
dec
loopne
xlat
outsl
or
push
inc
mov
test
aas
xchg
mov
ds
hlt
mov
jl
fwait
jbe
and
or
mov
addr16
outsb
outsl
paddb
xchg
cmc
pushf
mov
xor
sbb
xor
jle
mov
cld
dec
sub
dec
mov
pop
push
lods
add
incl
in
mov
pop
sub
mov
cmc
pop
sbb
sub
das
push
in
sub
sbb
popa
jmp
sbb
cmpsl
pop
shll
fnstcw
in
jbe
mov
cli
mov
aam
ret
push
shl
movsb
imul
sub
dec
dec
inc
pushf
mov
xchg
loope
push
adc
cmpb
sahf
aaa
or
push
fs
cmp
dec
xlat
jo
inc
mov
dec
and
or
xchg
and
adc
ss
pop
sub
inc
push
or
sbb
xlat
or
jecxz
pop
inc
ds
daa
mov
or
pop
gs
icebp
mov
jns
cld
jge
mov
adc
xlat
mov
out
add
cmp
xchg
lea
into
jp
or
push
fdivs
stos
cmpsb
or
or
daa
setge
js
dec
loopne
mov
jge
subb
jp
and
add
clc
inc
inc
repnz
cmpb
lods
cmp
xor
dec
dec
cmp
jae,pt
insl
pop
scas
sbb
int3
sub
xchg
into
pop
cmp
daa
adc
int
loope
xchg
mov
fnsave
ja
ja
jp
js
jmp
xor
fwait
xor
adc
mov
push
xor
insb
jne
pop
cmp
incl
jmp
cmpsb
lods
inc
gs
inc
add
push
jnp
mov
in
mov
add
cli
or
xchg
jecxz
and
lcall
mov
push
jb
jg
cli
xchg
mov
jle
jge
jl
std
ja
jns
scas
inc
cmpsl
mov
jle
lret
push
fnsave
push
test
repnz
cmpb
loope
dec
jle
decl
daa
sbb
popa
ja
mov
jmp
dec
adc
mov
add
aas
out
orl
sbb
test
lods
jae
test
xor
inc
lahf
mov
lcall
adc
inc
push
in
iret
in
dec
sbb
jl
mov
sahf
ds
add
jge
js
daa
xchg
pop
jbe
pop
or
inc
adc
and
enter
in
mov
jo
mov
sbb
inc
out
push
shrb
and
out
in
lret
and
rorb
fbstp
cwtl
ss
aaa
xor
or
and
out
sbb
cltd
iret
adc
lret
test
bound
je
push
xor
les
gs
xchg
cld
out
xchg
xchg
lret
movsb
cmp
jne
inc
inc
jmp
fadds
cmp
in
loopne
jmp
out
and
adc
add
sub
lock
orb
cli
popa
mov
sti
inc
aas
jmp
sbb
imul
cld
enter
and
inc
dec
lret
jg
jnp
enter
sbb
imulb
fucom
mov
dec
cmp
adc
fnstenv
aaa
frstor
mov
test
sbb
xor
es
dec
ret
call
test
std
fdivr
hlt
daa
loop
push
lods
sbb
and
and
xor
mov
xchg
xor
cli
add
sbb
aad
cmc
mov
sub
push
push
aad
sbb
adc
ret
daa
cmpsl
mov
sub
addr16
lods
out
into
pushf
xchg
fcomps
pop
mov
aas
in
xor
xchg
mov
int
cld
sti
rcrb
adc
insl
std
das
jle
notl
test
inc
xlat
push
clc
jnp
jmp
outsb
ret
notb
pop
ret
mov
adc
iret
shl
xor
pop
mov
je
sbb
adc
push
jmp
pop
xorb
out
pop
shll
inc
xchg
xchg
xor
movsb
xor
adcl
inc
mov
sar
data16
xor
adc
mov
sbb
in
mov
cmpsl
xor
xchg
push
adc
jbe
adc
cmpsl
lea
jp
std
pop
and
aas
out
xchg
mov
inc
xor
sbb
cmp
daa
rorl
popa
sbbl
insb
movsl
mov
hlt
inc
xor
pop
ds
insb
js
add
loope
daa
inc
mov
movsl
jb
or
sbb
jp
adc
icebp
xchg
jnp
insb
or
into
mov
or
lock
sub
push
addr16
outsl
out
out
adc
cmp
cli
jo
add
shlb
cmp
incb
pusha
test
pop
push
jns
addb
sbb
lock
mov
es
pusha
addb
stc
ljmp
push
xchg
mov
jge
mov
xchg
psubusw
xor
ja
pop
jecxz
jo
pop
imul
cmpsb
sbb
mov
jecxz
fisubl
jne
push
inc
pop
mov
sub
pusha
mov
push
fcomps
mov
filds
sub
lret
movsl
loop
mov
mov
data16
data16
dec
jns
arpl
stos
jmp
cli
insb
rcll
or
jmp
lea
jecxz
jp
mov
ret
andb
pop
mov
rorb
pop
scas
xor
lds
adc
cmpsb
push
sub
repz
mov
jae
movsb
mov
fists
adc
cmp
leave
adcb
xchg
pop
adc
iret
addr16
cmpsl
lods
imul
pop
lock
xchg
add
loope
xlat
xchg
xchg
and
imul
xchg
pop
inc
and
and
aam
push
jno
xorb
out
xchg
movsl
inc
cld
push
xchg
push
daa
icebp
add
in
cmpsb
xchg
rol
es
movsb
pushf
xchg
test
sbb
mov
insl
jns
movsb
mov
cmp
mov
pop
bound
loopne
sbb
jg
xor
shll
sbb
xchg
js
enter
xchg
mul
xor
xor
jns
call
js
or
or
sbb
xor
mov
imul
inc
scas
daa
ja
mov
pushf
mov
xchg
cmc
repnz
adc
into
sbb
popf
push
mov
cld
ss
dec
pop
jecxz
xor
fdivr
repnz
mov
and
mov
out
addr16
xchg
or
push
mov
mov
inc
pop
sub
daa
enter
lahf
into
adc
or
movl
dec
jnp
cld
adc
js
lods
scas
shlb
jo
outsb
icebp
mov
ret
jmp
dec
mov
adc
sbb
ja
test
pop
xor
adc
jo
lret
enter
mov
imulb
lcall
adc
shrb
popf
dec
pushf
jnp
inc
jne
sti
jecxz
test
and
xchg
xchg
xor
xor
lret
daa
push
push
sub
jae
inc
js
dec
int
ret
stos
inc
hlt
cmpsl
enter
sub
test
repnz
daa
ja
cmpsl
adc
notl
pop
clc
adc
divl
pop
mov
xchg
xchg
js
pop
inc
cmp
add
mov
push
shlb
jb
loopne
push
jns
nop
push
and
xchg
fildl
mov
cld
inc
test
es
adc
xchg
pop
xor
cmc
and
ret
mov
out
lcall
js
fs
push
icebp
fsubrs
xorb
jae
jmp
cmp
sbb
ja
xor
scas
cmp
xchg
push
repz
bound
push
out
scas
dec
lods
hlt
jle
mov
loope
or
faddp
flds
adc
aaa
mov
in
es
dec
lcall
ficoms
inc
push
addr16
jmp
pop
and
aaa
loope
xchg
xor
mov
push
jbe
ss
sub
pop
dec
bound
dec
inc
inc
adc
dec
push
pop
sub
pop
pop
subb
cmp
into
test
pop
les
xchg
push
push
mov
ds
stos
mov
mov
mov
lds
push
ret
cmpsl
aaa
rcll
xchg
inc
dec
xchg
xor
mov
push
dec
into
adc
call
dec
xor
push
sbb
xchg
dec
add
push
or
push
xlat
clc
aaa
mov
mov
int
test
pop
inc
adc
in
jle
loope
xchg
mov
jns
push
inc
adc
jmp
mov
sub
je
imul
bound
movsb
insl
orb
pop
xor
addr16
div
es
shrl
xchg
add
xlat
xorb
xchg
fnstcw
insl
pop
xchg
inc
testl
push
mov
iret
add
loop
stos
jo
arpl
and
out
mov
ds
cmpsb
fists
das
lahf
pusha
xor
push
push
sti
push
cmpsb
daa
dec
pop
pusha
cmp
add
popf
sbb
out
sub
xor
rcrb
xchg
push
dec
lock
movsl
xchg
jne
sahf
push
mov
mov
jno
and
jo
jecxz
jo
cmp
sub
jo
dec
jle
mov
int
cmpsb
or
xchg
sbb
push
aaa
mov
sbb
mov
xlat
xchg
int
mov
xor
repz
xchg
push
sub
out
adcb
ret
sbbb
cmovbe
xlat
cmp
ja
inc
lods
xchg
clc
sub
loop
or
push
mov
jns
popf
mov
outsb
mov
arpl
push
inc
stos
and
sbb
push
ficoml
inc
loope
jns
mov
jp
xor
test
push
in
mov
popa
fadds
aam
cmpb
std
int
arpl
inc
daa
jge
push
sbb
sbb
movsb
push
fisttpll
stc
push
mov
and
xchg
xchg
inc
xlat
and
push
fwait
add
dec
mov
ja
enter
xchg
push
sub
lods
mov
jb
xorb
js
jge
cs
nop
std
jnp
jnp
fsubs
sqrtps
xchg
je
cli
cmpsl
inc
and
adc
scas
outsl
lods
add
cmpsl
jbe
or
std
sti
out
ds
xchg
lods
xchg
jae
into
push
or
lret
dec
adc
in
xchg
call
add
enter
out
add
cmp
cmp
std
nop
popl
push
js
rcrb
cltd
nop
xchg
fiaddl
in
aas
fistl
mov
dec
out
cs
dec
and
cmpsb
cmpl
sti
sbb
push
pop
cmp
cmc
inc
inc
push
out
xor
mov
divl
cld
sbb
popa
inc
fidivrl
ss
aad
mov
jo
mov
popl
sub
and
jp
lret
movsb
fiaddl
imul
out
cltd
test
test
pushf
mov
mov
xchg
test
pop
stos
or
call
mov
or
pop
fdivl
adc
and
jmp
outsb
xchg
push
fnsave
mov
out
leave
adc
enter
jno
xor
test
jns
jg
shrb
inc
jnp
jnp
lods
dec
mov
cmp
add
pop
inc
pop
test
loopne
mov
rorb
push
add
cltd
dec
sbb
or
sbb
jno
mov
xorl
xor
xchg
insb
or
and
or
jmp
orl
js
lahf
je
cmp
adcb
push
adc
xor
mov
fnstenv
test
mov
sub
cmp
push
sbb
test
shr
jne
push
jge
or
adc
cmp
fdivs
fcmovbe
rcll
cmp
pop
clc
cmp
jno
shll
xchg
idivl
mov
mov
ljmp
ljmp
xor
sahf
cmp
jmp
or
sub
sbb
scas
lahf
inc
dec
sarl
sbb
in
or
movsb
insb
int
test
jns
and
jae
jo
mov
mov
lods
inc
mov
mov
test
push
icebp
jmp
cmp
shl
and
sti
dec
push
test
clc
inc
xchg
cmp
inc
inc
jecxz
or
inc
sub
push
fiadds
mov
cwtl
in
jg
sub
repnz
mov
popa
shrb
push
adc
jg
sbb
imul
ficoml
leave
repz
adc
loopne
jne
jns,pt
testl
inc
xchg
out
lock
pop
in
scas
in
xor
daa
les
ja
int
cltd
xchg
xchg
cltd
push
in
hlt
push
loop
or
jns
xor
dec
popf
in
push
sub
adc
cltd
aam
rcll
pop
loope
mov
xor
repz
movsb
arpl
std
pop
mov
push
jnp
icebp
mov
add
jbe
lock
inc
mov
sahf
fidivrl
scas
xor
clc
or
sbb
pop
outsl
pushf
jg
cmc
es
jo
jmp
mov
lret
jo
adc
add
lock
push
dec
sub
sbb
clc
idiv
adc
dec
and
xor
fistpll
insb
and
jmp
mov
xchg
pop
clc
mov
iret
clc
cmc
clc
cmp
js
mov
ret
jns
xchg
fwait
mov
ljmp
mov
sub
rep
sbb
std
sbb
fnsave
push
jp
adcb
daa
mov
dec
dec
orb
mul
out
pop
mov
mov
inc
out
lcall
in
sarb
pop
push
xchg
adc
jecxz
iret
mov
mov
xchg
mov
ja
push
aaa
sub
sub
pop
add
cmp
mull
mov
sbb
add
and
xchg
mov
ss
jmp
mov
sub
mov
mov
ret
enter
add
loop
push
in
fdivrs
ret
dec
bound
imul
aad
test
clc
jno
jns
in
mov
sti
fidivs
cli
sbb
push
lods
push
jns
xchg
in
out
cmp
pop
mov
mov
rorb
mov
xchg
sbb
xchg
arpl
jmp
cmp
pop
sub
leave
xchg
sub
mov
call
sbb
imul
repz
ficoml
add
sysexit
sbb
mov
xor
push
push
cmp
cmc
repnz
or
sbbl
mov
cmpl
loope
out
cld
shrl
loope
jb
dec
cmc
cltd
js
test
cwtl
sub
out
pop
mov
pop
xchg
lcall
lahf
push
xchg
leave
cmp
scas
push
insb
adc
lock
lock
sbb
jp
fnstsw
adc
sub
js
jno
mov
push
sbb
inc
pop
in
push
jnp
shlb
xor
cmp
or
mov
jno
cld
inc
ret
add
sbb
mov
adc
and
dec
shlb
divl
pcmpgtd
cmp
sahf
dec
push
aas
insl
scas
leave
rcr
jmp
mov
repnz
addr16
aas
in
loopne
mov
add
sub
inc
call
adc
out
adc
push
out
push
mov
movsb
mulb
and
mov
xchg
mov
push
stos
mov
popf
hlt
inc
rcrl
or
inc
xchg
out
rcr
mov
adc
or
fldt
xchg
push
loop
daa
repnz
mov
gs
ret
cmp
or
mov
xor
xor
xor
cmpsb
adc
inc
dec
cld
imul
pop
mov
decb
push
jae
sti
out
xchg
in
jne
sbbl
in
jp
lods
and
addl
push
mov
loope
aas
aas
sarl
add
adcl
daa
fdiv
nop
mov
and
fisubrs
adc
mov
out
clc
cmc
data16
push
sbb
add
in
and
dec
sub
out
push
push
loopne
stos
sub
ljmp
mov
int
mov
mov
adc
jbe
enter
xchg
pop
dec
sti
cmp
sbbl
push
mov
fdivs
cmp
movsl
pop
inc
fwait
xchg
pushf
mov
mov
flds
inc
push
loope
rcl
fstpt
xchg
or
into
in
int3
mov
popa
fwait
pop
dec
in
xchg
js
xchg
ja
jmp
cwtl
sub
das
lods
mov
loopne
cli
fs
cltd
popa
andb
out
sbb
ret
xor
arpl
imul
test
jecxz
cmpsl
xor
sbb
cs
ds
sar
cmp
pop
mov
jle
dec
dec
or
enter
xchg
adc
sbb
mov
movsl
aad
sub
mov
xor
inc
in
dec
mov
sbb
adc
jg
add
in
cmp
repz
push
inc
jns
xor
pusha
mov
jle
cli
or
fdecstp
inc
jo
push
dec
sub
arpl
je
inc
imul
lret
add
out
addr16
pop
xlat
push
cmpsl
push
loop
icebp
enter
je
mov
mov
ljmp
insl
loopne
pop
pop
sahf
out
aam
cmc
adc
xchg
les
imull
cmc
xor
adc
jg
pop
sbb
mov
jne
ss
adc
pop
sbb
js
je
push
leave
cmp
test
sarl
nop
das
nop
jnp
loop
mov
adc
push
scas
data16
mov
cmp
je
pop
mov
das
push
ljmp
sbb
pop
push
repz
pop
lods
sbb
jo
push
pop
mov
pop
push
push
jle
push
lods
sub
jbe
icebp
and
es
aaa
jmp
cmp
repnz
push
clc
icebp
sbb
ja
sti
xor
int
rcll
notb
add
xor
pop
imull
dec
jns
sub
jl
mov
sti
sbb
sub
jmp
xchg
movsl
fldl
pop
mov
and
pop
mov
pop
pop
aam
test
pusha
aas
scas
xchg
mov
mov
sbb
in
pop
sub
enter
cmp
adc
mov
push
cmpsl
dec
notl
movsl
cmp
add
test
add
test
dec
dec
ja
push
in
es
enter
adc
pusha
out
dec
int3
iret
xor
cmp
and
cmp
mov
js
mov
pop
inc
test
sbb
movups
add
mov
les
test
jns
test
xlat
xor
enter
clc
push
cmp
testl
mov
adc
test
out
outsl
pop
cltd
ja
rclb
mov
push
imul
ljmp
push
icebp
cmp
push
or
cmpsl
shl
sarb
xchg
sahf
in
scas
inc
aaa
mov
ret
fistps
pop
dec
cmp
in
sub
cli
sysexit
pop
inc
xchg
cmp
dec
shll
ret
xor
in
cwtl
adc
inc
fsubr
dec
jg
sbb
pop
lea
lods
shl
mov
mov
mov
add
push
sbbb
add
lods
mov
adc
lea
add
lahf
add
jbe
inc
mov
sbb
xlat
xchg
lea
pop
out
std
cmc
int
mov
jbe
dec
xchg
subl
mov
ds
push
jns
fmull
aam
notb
add
in
es
inc
pop
notl
add
push
and
cmpsb
ljmp
repz
fs
adc
call
or
mov
pop
dec
faddp
adc
push
cmp
es
sub
mov
sub
daa
jns
mov
hlt
negl
fildll
or
or
push
or
mov
dec
jp
je
push
pop
push
add
mulb
movsb
xchg
xchg
sbb
inc
fnstcw
out
outsl
outsl
inc
sti
outsb
movsl
test
push
iret
mov
push
scas
pusha
ret
shll
xor
xor
fimuls
out
sbb
scas
imul
outsb
push
sti
mov
cmp
add
jns
pop
sub
lods
loopne
jmp
xor
mov
ljmp
jne
pop
push
cmp
andb
popa
lea
loop
cmp
inc
ds
dec
daa
pop
ficomps
imul
ljmp
mov
sbb
or
push
leave
test
jle
aam
pushf
sub
sbb
jle
push
sbb
sub
cmp
mov
mov
int
mov
sub
clc
repnz
push
ljmp
fs
push
push
xor
ljmp
stos
xchg
pop
cltd
es
or
inc
pop
movsb
sub
cmp
jmp
xor
ss
jne
divb
clc
sbb
rolb
sbb
push
mov
mov
lret
lret
sub
loope
xor
popf
sbb
je
sti
repnz
test
jnp
lret
xor
xor
pop
insb
push
pop
gs
mov
xchg
lock
jns
or
aad
mov
sarb
mov
out
and
pop
push
dec
mov
aas
loopne
fyl2x
into
cld
push
lods
pop
adcb
mov
movsl
daa
xchg
insl
sbb
adc
test
ja
xor
shlb
lcall
jmp
mov
clc
xchg
fstpt
xor
sbb
stos
testl
mov
test
pop
inc
dec
jmp
push
mov
data16
or
out
jle
sbb
cld
mov
aaa
xchg
push
mov
or
sbb
aam
jp
addr16
fcmovnu
inc
dec
and
cmpsl
nop
jl
jb
mull
pop
loopne
fildl
loope
mov
dec
cld
lods
ja
jg
sbb
and
ja
inc
adc
jecxz
xchg
cmp
or
cmp
push
push
imul
mov
sub
jbe
cltd
pop
mov
push
xchg
jbe
mov
js
push
cmp
rcrb
mov
cltd
mov
or
pop
aad
imul
xchg
jl
mov
add
sub
cmp
clc
sub
in
loop
jmp
jns
cmpb
pop
adc
fs
sbb
mov
daa
or
int3
xchg
out
mov
push
es
in
hlt
and
je
cld
inc
cmp
jns
ljmp
pop
xor
pop
mov
cmp
imul
mov
pop
push
xor
mov
adc
ds
push
lret
mov
movsb
fsub
idivl
pop
adc
inc
mov
xchg
cmpsb
hlt
mov
outsb
lods
fcoml
jp
lock
jp
sbb
xchg
push
xchg
cmp
jns
leave
test
xchg
add
jo
mov
pop
rol
push
in
push
cmpb
int
jg
sub
daa
sbbl
ja
sbbl
mov
jae
sbb
pop
addl
testb
add
scas
cmp
js
imul
adc
adc
in
pop
pop
sti
dec
sub
adc
mov
mov
cmp
xchg
and
sub
sti
push
bound
push
mov
pop
push
inc
jns
sub
aam
negl
dec
cmp
mov
adc
ss
rcll
ficomps
aam
jge
leave
inc
jmp
sti
sbb
popw
mov
push
pop
fcmovnu
clc
xor
insb
lahf
xchg
lods
cmp
pop
mov
daa
lock
divl
push
push
es
dec
loop
inc
fimull
adc
sub
mov
add
xor
dec
mov
xchg
addr16
out
nop
test
sarl
or
push
and
daa
xor
xchg
jge
in
jns
loope
jo
mov
test
push
xorl
cmp
xchg
roll
pop
andl
cli
cmp
push
shll
aaa
push
dec
inc
ja
fistpll
jnp
fcompp
lods
ret
daa
sbb
loop
fisubrl
popa
cltd
inc
icebp
pop
ja
or
jbe
mov
loopne
popa
xor
pop
adc
xchg
sti
xchg
dec
xchg
enter
and
mov
pop
test
enter
sub
add
mov
jnp
mov
xchg
imull
test
mov
repnz
sbbb
mov
jbe
cmp
fidivrl
aam
sti
fwait
mov
mov
mov
add
push
inc
fiaddl
sub
ja
les
push
cmp
dec
je
xchg
pushl
daa
push
sbb
mov
jmp
or
inc
inc
int
dec
xor
fldt
js
inc
mov
lock
dec
in
nop
data16
mov
jmp
repz
sbb
movsl
lret
call
shr
lods
dec
ret
adc
fisubs
test
in
or
and
add
jp
adc
add
scas
pop
mov
mov
cmc
pop
scas
into
sbb
and
je
mov
repz
sub
adc
mov
adc
enter
sahf
jg
push
sti
call
and
pop
psrlw
pop
fwait
rcll
orb
xor
loope
in
cmp
retw
sub
inc
sahf
adc
jbe
jnp
sub
sbb
adc
xor
mov
ss
xchg
js
mov
adc
cmp
and
sarb
or
lret
aam
dec
mov
dec
adc
add
das
inc
sbb
jbe
shr
inc
repnz
push
add
mov
xchg
cmp
pop
mov
pop
jge
inc
xor
sbb
mov
push
pop
sti
dec
fists
add
jmp
test
in
les
mov
sub
sti
fisttpll
add
hlt
mov
out
dec
lret
and
inc
pop
rorl
sar
mov
fstps
jle
mov
xchg
add
and
xchg
lods
or
dec
arpl
inc
xor
add
sbb
sub
xor
dec
adc
jmp
insb
inc
pop
lods
addr16
and
cmp
inc
mov
adc
call
cwtl
jp
adc
push
mov
push
sbb
and
lcall
pop
cmp
add
mov
repnz
pop
imul
sti
out
inc
ss
jl
mov
ficomps
adc
enter
stos
pop
cmpsl
push
xor
rep
mov
mov
flds
adc
fsubrs
or
call
sub
sub
pop
popf
push
inc
mov
jmp
xlat
add
xchg
aaa
pop
or
rcll
adc
in
out
sbb
data16
scas
int3
cmc
xor
ljmp
mov
es
or
inc
push
in
mov
push
and
jp
push
xchg
jae
movb
adc
sbb
cltd
call
nop
ret
sbb
sarb
cltd
shrb
mov
ss
adc
push
lock
sub
xor
pop
xchg
mov
dec
push
jle
push
dec
push
das
push
xchg
shrb
sub
xor
add
scas
sub
xchg
jecxz
mov
xchg
cmp
scas
es
clc
mov
je
sbb
lret
int
pusha
rol
repnz
int
sub
scas
push
pushl
push
push
and
fldcw
or
inc
push
js
in
mov
inc
inc
pusha
sbb
hlt
aaa
xchg
pop
clc
xor
js
cs
lret
add
js
push
inc
fs
jbe
idivl
add
dec
jge
incl
enter
push
jbe
jbe
add
xor
mov
mov
mov
xor
loope
xlat
mov
push
or
or
insb
fs
ljmp
mov
dec
inc
call
es
scas
into
dec
or
push
xchg
js
inc
inc
lock
pop
pushf
in
or
sub
loop
and
sub
jp
pop
cmp
sti
jae
mov
push
mov
popf
jb
cwtl
addr16
dec
hlt
pop
cmp
out
mov
or
popf
sbb
pop
jp
test
sbb
cmpsl
jecxz
imul
rclb
mov
in
mov
test
out
inc
adc
xor
xor
adc
out
negb
dec
xor
xchg
js
xchg
xor
ss
mov
jns
jo
testl
in
outsb
inc
dec
mov
cld
jge
bound
mov
jo
cmp
leave
mov
iret
dec
pop
cmp
mov
mov
dec
mov
stos
jmp
les
js
outsb
daa
jecxz
inc
jmp
mov
xlat
addr16
ja
lock
enter
mov
sbb
pop
movsl
push
mov
cld
add
sbb
pop
loopne
repz
repz
push
adc
cmpsb
movsl
cltd
cld
mov
lods
mov
jp
mov
cmpsb
leave
inc
nop
dec
ja
ds
mov
jle
cld
insb
aad
inc
mov
add
add
xor
insb
jle
adcb
stc
lods
jge
jg
nop
out
clc
movsl
sti
sub
loopne
scas
dec
jnp
sub
cli
mov
into
and
clc
outsb
das
lods
mov
mov
cli
fldpi
imul
into
outsb
sub
aam
fiadds
insl
add
clc
push
lods
mov
push
jmp
loop
les
addr16
jns
and
aas
pop
push
jge
cmp
jmp
push
sti
insl
out
adcb
icebp
movsl
adc
xchg
cmp
xchg
xlat
inc
cli
push
data16
nop
xchg
pop
xor
adc
adc
outsl
dec
in
addr16
push
data16
roll
cmovnp
push
loope
ss
sarb
xor
cli
sub
lcall
testb
outsb
fcomp
xor
es
dec
inc
jnp
xchg
test
and
rcrl
sbb
loope
adcl
je
dec
mov
sbb
mov
mov
dec
sbb
das
scas
or
sti
jg
xor
es
ficoms
movsl
leave
es
jno
dec
sub
mov
xor
ja
mov
lret
push
pop
mov
adc
mov
dec
hlt
arpl
xchg
add
nop
xchg
hlt
loope
int
mov
dec
aas
jp
adc
pop
inc
in
push
iret
push
jecxz
push
mov
and
hlt
pop
in
jg
mov
mov
icebp
push
xchg
fstpl
pop
dec
xor
clc
dec
push
push
jmp
adc
loop,pt
divb
in
in
mov
and
fisttpll
test
sub
jo
ret
xchg
in
movsb
out
test
and
jne
decb
out
adc
fstl
xchg
leave
lock
out
aas
inc
push
adc
push
and
aam
cs
icebp
shlb
pop
iret
inc
and
cmp
stos
xor
mov
ja
shr
cmp
aad
addr16
scas
inc
insl
push
jecxz
pop
mov
ret
das
sar
dec
shrb
mov
mov
jmp
call
pop
nopl
icebp
in
ja
dec
fwait
mov
nop
fs
xchg
xchg
loop
leave
lock
push
ret
ficompl
ud0
xor
xchg
je
idiv
push
and
push
push
cmp
add
jno
negl
into
cmp
mov
ss
cmp
outsb
loop
push
jns
jl
scas
cmp
jg
and
std
lea
pop
sti
jmp
adc
jl
outsb
mov
in
std
decb
jge
dec
push
or
insl
push
lods
out
mov
and
push
pop
add
sbb
or
shrl
and
sub
addl
sbb
jle
testb
psubd
push
mov
popl
sbb
es
std
sub
test
int3
sbb
pop
dec
data16
pop
adc
jbe
push
cld
jne
cmc
and
adc
cwtl
cld
enter
test
pop
mov
ljmp
pop
and
int3
subb
xchg
lock
pushf
or
cmp
loope
stos
repz
imul
adc
xchg
repnz
mov
jmp
mov
inc
lods
stc
stos
push
pushf
cmp
sub
in
sahf
pop
and
ret
xor
xlat
xchg
push
loope
jecxz
jno
movsb
push
push
pop
shl
dec
pop
out
sbb
test
std
repnz
push
adcb
divl
imul
ss
and
ss
xchg
cld
inc
fs
insb
sub
cld
jne
dec
lret
adc
sub
mov
daa
mov
inc
cmp
mov
icebp
loope
out
add
xchg
lods
push
mov
add
mov
adcb
fldcw
fsubrp
in
mov
loope
add
jnp
cmp
popf
jl
mov
nop
repz
inc
mov
mov
movsl
sub
sub
repz
mov
aad
jbe
repz
insb
mov
shld
mov
and
xor
fdivrl
roll
mov
lcall
aaa
xchg
int3
push
fucomip
and
jns
in
pop
test
pop
cltd
shl
fstps
adc
cld
push
popa
cltd
push
aas
sbb
dec
fdivl
add
add
les
or
lds
cld
insb
inc
pop
lcall
icebp
xchg
mov
and
xchg
or
idiv
popa
cmpsb
cltd
jne
xor
lea
cmp
enter
in
cmp
rcrl
mov
and
hlt
mov
lahf
dec
cld
adc
out
sbb
mov
leave
in
dec
xor
sub
cld
lret
aas
cmc
adc
fsubrs
sbb
fidivrs
push
int
cmp
push
imul
push
dec
cld
std
pusha
cmpsl
cwtl
fnsave
lock
and
imul
mov
inc
pop
inc
pop
hlt
pusha
push
std
and
push
mov
jns
lahf
pop
push
push
mov
daa
xchg
pop
pusha
mov
sbbl
dec
adc
gs
adc
lea
divl
mov
mov
pop
std
or
mov
adc
ret
mov
ss
jbe
or
push
push
daa
or
push
and
insl
outsl
rorl
cmpsl
mov
repz
jno
adc
mov
js
testl
cld
adc
insb
or
mov
in
lods
jg
repz
fidivl
imul
pop
push
and
xchg
dec
jg
pop
xchg
ja
lcall
out
aam
mov
push
pop
xor
ja
sub
sbb
cmp
jns
scas
jge
ja
push
mov
test
cmp
fwait
in
jp
fistl
rorl
lds
bound
in
ja
lret
push
in
je
and
cmpsb
in
push
cmp
xchg
cmpsl
enter
movsb
mov
in
xchg
push
inc
cmp
or
add
adc
dec
das
cmp
rolb
divl
addr16
aam
xor
mov
mov
test
mov
aas
push
incl
pusha
or
js
sub
testl
jge
ja
cs
daa
iret
xor
jg
aad
rorl
pop
fst
clc
or
pop
or
sbbb
xor
scas
mov
xchg
das
xchg
or
push
mov
test
push
cmpsl
dec
or
roll
push
addr16
jnp
pop
dec
or
sbb
xor
mov
fistps
xor
jecxz
stos
pop
stos
cmc
insb
xchg
and
cmp
or
ret
and
jl
les
sbb
cmc
shrl
cltd
xchg
movsb
mov
sbb
mov
push
or
ret
mov
in
mov
scas
sub
pop
lcall
es
cmc
push
jb
push
inc
adc
sarl
into
xchg
imul
inc
nop
jbe
ret
inc
push
push
pushf
cmc
fstpt
stc
or
mov
clc
jno
jb
push
push
pop
cltd
xchg
popa
or
sub
negl
cli
mov
jmp
and
jbe
das
inc
push
into
mov
pop
in
mulb
das
jle
mov
movsl
test
insl
push
stos
negb
movsl
or
mov
lcall
into
xor
push
inc
sbb
inc
xor
cmpsl
sub
push
adcl
mov
sub
in
jmp
adc
shlb
or
loop
cld
je
or
aad
loop
fcomp
and
lock
xchg
inc
aaa
loop
push
sbb
pop
cmpsb
mov
pop
and
sbb
pop
pop
jbe
movsl
or
add
mov
xchg
sbb
int3
sbb
jmp
pop
mov
testl
dec
ljmp
scas
cwtl
xchg
cmpsl
mov
mov
jb
lds
into
idivb
into
pop
pop
daa
push
adc
xor
jl
aas
jecxz
aam
bound
xchg
dec
cmc
inc
clc
sub
cmpsb
std
dec
adcl
pushf
mov
adc
mov
pop
dec
push
fwait
xchg
mov
mov
xor
and
icebp
sti
cmpsl
pop
mov
dec
push
loope
mov
out
lret
pop
xor
xchg
jns
pushf
push
cmpb
das
fstps
fwait
test
mov
dec
pop
cmp
movsl
push
cmp
mov
pop
sti
fcompl
loope
mov
inc
pop
and
aas
mov
sbb
movsl
jnp
dec
jmp
imull
sub
push
push
subl
jmp
or
outsl
test
test
imul
or
jl
popa
inc
inc
into
daa
test
xchg
mov
mov
xor
mov
sbb
push
dec
inc
inc
loope
adc
fwait
pop
jne
lcall
outsb
jbe
cs
push
or
in
jns
mov
push
cmc
push
add
test
aaa
xchg
ss
into
push
clc
jo
push
aas
fldl
cmc
loop
add
data16
mov
outsb
and
pop
and
out
shl
mov
shll
mov
into
cltd
mov
xchg
hlt
sbb
cmp
outsb
cmpsl
xlat
jno
cmp
mov
jle
mov
outsl
xchg
or
xorl
aad
xor
scas
stos
dec
daa
lock
das
pop
sub
cwtl
rol
mov
ret
je
cmpsl
enter
roll
add
test
mov
mov
mov
adc
pop
sub
sbb
add
push
cltd
lret
xor
repnz
negl
or
push
adc
mull
fisttpll
cmp
or
and
clc
ja
xchg
xor
out
inc
cmp
inc
ja
mov
aaa
xor
js
xchg
test
inc
xchg
push
pop
adc
test
cwtl
mov
data16
into
out
fstpl
add
mov
pusha
rcrl
add
btr
idiv
pop
add
push
push
inc
insl
movsl
daa
push
add
xor
aas
pop
xchg
cli
xchg
inc
pop
cli
cmpsl
movsb
sub
push
add
pop
movsb
push
cli
sub
andb
push
lret
mov
pop
and
int
loop
push
popa
aas
dec
mov
imul
scas
jno
push
test
clc
in
mov
scas
jmp
clc
inc
push
pop
sbb
adc
push
cmp
mov
mov
xchg
or
movsb
push
jp
mov
jp
mov
push
rcrb
stos
push
pop
adc
cmp
push
push
or
mov
aad
push
rcll
xchg
or
cmp
adc
xor
out
movb
and
xor
and
filds
xor
jno
rolb
add
cld
fdivr
lds
or
testl
push
adc
jns
xchg
rol
jbe
add
xor
add
mov
call
add
adc
or
sti
push
testl
test
sub
inc
pop
dec
push
imul
mov
test
jmp
jl
frstor
push
sti
std
jl
sahf
sub
clc
add
out
dec
sarb
sbb
pop
imul
sbb
jb
adcl
jecxz
lret
mov
into
pop
adc
mov
aaa
push
pop
pusha
outsl
stos
lods
je
aas
adc
fadds
xor
ljmp
fisubl
jne
loope
push
pop
fucomip
enter
mov
test
insb
shll
es
mov
out
adc
inc
dec
sbb
add
ds
js
repnz
inc
sub
lret
cwtl
lock
insb
jecxz
mov
movsl
adc
mov
lcall
add
add
nop
cmpsl
sbb
daa
ja
icebp
aad
lret
ss
sbb
mov
repz
or
enter
je
fidivrs
mov
push
push
and
mov
mov
cld
outsb
xor
pop
ljmp
lods
sub
sti
arpl
push
shl
xchg
xchg
add
ret
outsb
repz
xchg
data16
in
test
stos
negb
sarl
aam
or
inc
out
sub
mov
sbb
aaa
pop
rol
mul
push
cmp
xchg
int
cs
sub
pop
data16
mov
data16
rcll
cmpsl
rcl
pop
das
leave
xor
xlat
xchg
jns
stos
movsl
pop
or
pop
cwtl
ljmp
push
and
inc
in
pop
adc
arpl
jne
in
in
jno
cmpsl
lret
pop
push
sbb
xorb
inc
mov
mov
pop
cwtl
fdivl
jnp
and
or
cmpsl
xchg
xchg
pop
insb
stos
mov
out
clc
inc
jne
inc
jns
xor
adc
lret
adc
aaa
int3
xlat
daa
dec
jmp
xor
or
mov
shrl
xor
into
inc
jge
daa
xchg
push
jmp
leave
sti
mov
lock
push
jle
jecxz
bound
imul
add
jge
stos
sbb
xchg
mov
jecxz
inc
dec
mov
call
sub
sbb
fldcw
test
shrl
cs
mov
arpl
rcrb
pop
mov
pop
fsubp
popf
mov
ljmp
sub
mov
gs
jmp
mov
sbbb
add
cld
pop
jg
pop
dec
shlb
sbb
jecxz
sti
out
xchg
jge
mov
mov
lea
imul
cmpsl
mov
ret
add
out
mov
add
cltd
add
ret
scas
mov
test
ja
mov
and
dec
jns
add
push
xlat
xchg
or
std
rorl
lret
imull
sbb
lock
mov
cmp
jbe
insb
out
test
fsubrs
add
xchg
daa
insb
enter
dec
sbb
or
in
sbb
push
lahf
dec
pop
mov
clc
pusha
mov
jp
pop
fsub
jb
sti
imul
dec
sarb
fsincos
inc
sbb
jbe
fstpt
mov
mov
mov
dec
mov
lcall
xor
push
jns
sbb
push
xchg
daa
repnz
cwtl
mov
xchg
repnz
mov
fst
cli
or
popa
cmp
stos
xchg
push
ljmp
icebp
lods
mov
push
jbe
adc
dec
popf
lahf
ret
adc
ljmp
jecxz
test
fucom
mov
cmc
int3
ljmp
add
mov
inc
test
dec
and
call
push
fisubs
add
jns
jmp
pop
ljmp
push
push
mov
scas
or
fcom
mov
sbb
dec
jp
daa
dec
call
xchg
popf
idivb
fsub
and
jns
push
adc
add
xor
lret
sub
mov
adc
not
mov
push
dec
jle
push
test
or
xor
insb
push
xchg
lods
mov
nop
jl
xchg
hlt
pusha
ret
out
jae
aas
pop
mul
scas
push
push
mov
sub
vunpcklpd
int
addr16
test
dec
aaa
push
test
lea
push
xor
jge
outsl
xor
fsts
pop
shrl
rcrb
adc
dec
adcl
mov
negl
addr16
jg
adcb
shll
popa
lods
cld
mov
sbb
sbb
test
mov
add
xchg
sbb
fcmovbe
rclb
popa
mov
push
mov
jo
add
mov
fs
fs
add
sbb
cmp
mov
pop
rcll
sub
inc
add
pop
jge
jp
mov
fnstcw
lds
mov
push
push
mov
popf
fsubrl
push
mov
rclb
cld
and
or
sbb
pop
mov
dec
test
clc
and
dec
pop
and
xor
pop
bound
cmp
dec
orl
addr16
push
out
scas
daa
xor
mov
dec
xchg
das
and
cmp
nop
jmp
push
jae
andb
jecxz
jo
out
adc
mov
iret
aad
ret
in
js
cmp
scas
sbb
sbb
pop
xor
sub
or
mov
xor
shr
ficomps
sub
mov
in
jbe
xchg
cwtl
in
andb
jl
cmpsl
lds
jle
push
cld
adc
mov
das
push
mov
lahf
in
cltd
xor
and
clc
popf
loope
js
add
test
popa
popf
mov
pop
inc
push
xlat
inc
xchg
xchg
push
out
rclb
out
inc
aad
jo
mov
inc
mov
repz
xchg
addr16
sub
xor
xorl
jb
inc
nop
sub
out
add
pop
push
mov
fs
push
iret
add
xor
clc
fisubrs
push
jae
jnp
xchg
out
mov
popl
adc
jae
sub
jb
subl
push
fwait
loope
cld
pusha
mov
imul
aas
push
push
hlt
dec
testb
xchg
ds
mov
cwtl
test
sub
jl
mov
pushl
push
pop
popf
orb
sub
xchg
repz
clc
push
adc
push
aas
aam
mov
mov
mov
fcomip
dec
cltd
push
add
adc
dec
addr16
mov
mov
or
maskmovq
add
pop
jl
aad
cmp
notb
pop
lcall
out
insb
sbb
shl
sbb
daa
lcall
xchg
fnstcw
mov
mov
sbb
shrl
and
and
adc
adc
rcl
repnz
push
call
shr
js
mov
push
push
xor
movsl
xchg
sbb
aam
daa
enter
mov
in
repz
cmp
mov
xor
daa
xchg
loope
lock
jnp
aas
or
leave
jecxz
jl
xor
inc
hlt
adc
jne
mov
push
ret
cmp
or
mov
repnz
adc
push
ja
mov
xlat
lret
mov
xor
sbb
or
pop
cmpb
jmp
scas
pop
movsl
jb
xchg
cli
xchg
add
cld
xor
iret
pushf
mov
dec
cmp
push
or
clc
ja
sbb
dec
aaa
adc
push
pop
pop
jp
xor
stos
mov
push
lods
testb
bound
cwtl
test
outsb
lea
fnstcw
mov
mov
xor
push
or
adc
push
push
push
je
loope
into
in
xor
push
mov
pop
pop
enter
iret
sti
inc
jle
dec
pushf
lret
xor
pop
jbe
cmpsb
adc
add
sbb
push
pop
dec
es
xor
add
dec
cmp
in
cmp
out
sub
fnstenv
sbb
cmp
arpl
gs
mull
repnz
mov
inc
ret
mov
mov
loop
iret
mov
fisttpl
mov
jecxz
inc
or
cld
jge
pop
sbb
xchg
sbb
inc
je,pt
inc
or
jb
lods
push
popa
add
icebp
out
lret
rcrl
xor
push
cmpsl
push
sbb
nop
orb
add
mov
xchg
xlat
lret
and
mov
adc
inc
dec
push
cli
aaa
sub
push
out
mov
xchg
sbb
outsl
out
addb
aas
sub
test
cs
add
out
mov
mov
lahf
push
dec
fldenv
pop
pop
scas
je
push
adc
mov
sbb
flds
or
aad
imul
sub
hlt
repnz
cmp
jae
fwait
mov
sti
sub
jg
fidivs
mov
adc
pop
adc
mov
sbb
cmp
push
pusha
add
clc
aaa
aam
mov
sti
dec
or
adc
mov
xchg
jge
sub
imul
sbb
clc
out
in
xor
push
jl
xor
mov
jbe
or
jp
clc
push
setnp
iret
repz
cmp
mov
sub
inc
in
es
pop
mov
jbe
out
mov
and
cmpsl
push
fdivl
add
xchg
dec
daa
lea
aam
or
ss
in
and
fisubs
lock
iret
pushf
xchg
add
add
out
jge
adc
out
sbb
and
add
adc
jne
mov
into
sbb
and
push
mov
mov
adc
cmp
sbb
and
notb
push
xchg
mov
dec
js
mov
ljmp
enter
orl
mov
mov
jo
or
subl
mov
cld
and
sbb
mov
addr16
sbb
mov
jp
int3
adc
pop
sahf
lahf
mov
jmp
jge
add
test
jbe
cmp
ja
jle
jbe
fsubl
push
loopne
loopne
pop
cmp
jb
pop
mov
add
insb
dec
stos
mov
sbb
sbb
cmc
xlat
loop
inc
cltd
inc
mov
cmp
mov
sbb
pop
dec
cmp
xchg
mov
shrl
jg
push
sub
call
xor
cwtl
mov
jge
sbb
sub
cmp
push
adc
lds
cmpsl
add
add
sbb
in
sbb
enter
data16
movsl
sbb
or
sbbl
pop
or
jmp
sarl
dec
mov
lods
insl
jo
cmpsl
outsb
sarl
leave
repnz
adc
xorl
jae
hlt
fidivs
mov
sub
cmc
addr16
jecxz
nop
and
std
outsl
adc
fnstenv
ja
psrad
ja
jnp
fildll
jmp
lea
xchg
xlat
outsb
mov
movsb
lods
int3
loopne
cmp
jbe
push
sbb
pop
mov
imul
pop
in
and
sub
fisubl
cmpb
dec
pushf
lret
pop
mov
ss
out
lods
mov
inc
je
jl
add
outsl
xor
je
cmp
pop
je
add
dec
out
xchg
lock
xchg
mov
adc
sbb
movsb
pop
xlat
push
inc
mov
lods
ss
dec
adc
lods
mov
insl
popa
insb
pushf
add
add
cmp
inc
loop
mov
rolb
sbb
inc
gs
andb
rorl
test
mov
and
mov
push
or
dec
jb
push
movsl
lods
mov
inc
je
mov
mov
mov
inc
sbbl
movsl
outsl
enter
inc
jge
mov
mov
push
mov
pop
mov
add
cmp
mov
sub
mov
sbb
pop
fs
push
or
push
mov
dec
push
je
repz
cld
jmp
add
or
popa
push
jnp
sub
iret
sbb
imul
cltd
dec
out
cmc
nop
test
cmc
lods
push
mov
test
in
pop
adc
cwtl
insb
add
pop
or
pop
pop
jbe
pop
sub
testb
notl
and
mov
jecxz
mov
idivb
repz
dec
push
jns
adc
stc
adc
lock
out
inc
daa
cld
mov
push
das
rcrl
shrl
into
jo
inc
sbb
pop
pop
lahf
das
add
mov
enter
adc
in
jp
cld
pop
mov
out
push
pop
flds
in
mull
out
int
cmp
add
xchg
xchg
loope
fistpll
push
sbb
aam
sbb
jb
xchg
xor
fidivl
je
pop
dec
mov
pusha
test
mov
jns
xchg
xlat
adc
xor
insl
out
push
cmpsl
lea
in
lock
je
push
cmc
sbb
cmp
xor
clc
lock
dec
mov
lock
adc
push
push
xchg
repz
adc
insb
or
jl
push
mov
ja
sbb
adc
add
pop
icebp
push
ds
loope
inc
mov
xchg
ds
je
dec
mov
loope
mov
mov
filds
mov
mov
push
hlt
outsl
xor
inc
jl
dec
jb
testl
out
mov
dec
jl
imul
adc
push
das
lds
imul
test
test
adc
push
or
addr16
cmc
cwtl
fwait
in
xor
push
adc
sbb
leave
fisubrl
push
lods
loop
push
or
sti
imul
movd
adc
subb
sbb
mov
scas
loope
cltd
stos
mov
lods
mov
js
in
dec
push
xchg
pusha
jbe
mov
jle
sub
mov
stos
scas
sbbl
lds
rep
stos
test
xchg
add
xlat
loope
aaa
rolb
mov
mov
and
pop
or
push
je
adc
leave
pop
adc
sub
mov
data16
push
push
incb
test
pop
ds
or
xchg
add
arpl
sub
sub
xor
jb
xchg
mov
cmpsl
jmp
movsb
ficomps
xchg
neg
sub
sbb
pop
inc
fists
mov
notb
imull
push
push
adc
test
outsb
mov
push
jp
xchg
stos
test
aam
add
outsl
add
icebp
fs
add
cwtl
jle
xchg
lcall
push
and
daa
xchg
adcl
setne
dec
in
cmc
scas
sahf
in
sub
xchg
sbb
mov
add
jns
outsb
xchg
loopne
mov
hlt
push
sub
out
out
adc
in
push
dec
or
mov
aam
cmp
or
daa
xor
jb
adc
xchg
rolb
mov
addr16
sbb
xchg
push
xor
sbb
nop
jle
js
push
les
xchg
pop
mov
int3
push
adc
sbb
inc
mov
cli
js
neg
cmp
jne
xchg
or
sub
hlt
or
adcb
loope
int3
aam
or
fs
repz
push
addr16
outsb
adc
ja
js
insl
fistpll
add
jecxz
cltd
push
in
adc
insb
dec
sub
scas
outsb
imulb
xor
pop
testb
sbb
pushf
sbb
clc
push
push
push
sbb
xorb
sub
cli
out
sub
test
fwait
hlt
notb
pop
push
push
notb
push
adc
iret
add
insb
in
jne
or
scas
cmc
jne
xor
adc
xchg
shlb
mov
inc
xor
xor
mov
lahf
xchg
mov
add
fwait
insl
adc
test
xchg
leave
insb
in
jne
or
and
xchg
mov
sub
sub
test
add
addr16
mov
add
mov
xchg
aad
imul
fdivl
js
hlt
cmc
xlat
mov
mov
push
sbb
push
js
mov
int3
xor
mov
ret
xchg
sbb
cmpsb
test
push
pop
fwait
ss
sahf
inc
lock
push
sti
xchg
mov
les
fdivrs
add
les
mov
lock
aas
pop
lea
into
inc
in
pop
mov
loope
lcall
test
xchg
movsl
adc
das
test
imul
daa
nop
testl
pop
push
cmpb
jbe
addr16
dec
das
cmp
gs
xor
xchg
mov
mov
jns
cmp
fldl
ss
jmp
jns
cmp
pop
roll
dec
jbe
subl
andl
xchg
test
cmovbe
insb
aam
lret
xlat
push
call
or
jecxz
push
ficoml
xor
cmp
dec
fcomi
xor
xchg
aam
scas
push
adc
mov
clc
jbe
rcrb
push
xor
sub
and
cmp
mov
je
adc
scas
sub
js
cmp
into
outsb
addl
fwait
adc
jecxz
rolb
inc
fnsave
adc
sub
shrl
push
jns
jg
cmc
sbb
aaa
dec
out
js
adc
leave
ja
movsl
push
cmp
add
push
jp
push
insb
int
popa
loope
add
add
xchg
xchg
jae
pusha
jns
dec
xchg
lock
push
jecxz
pushf
mov
cmpsl
mov
bnd
pushf
testl
mov
xor
jb
mov
cli
stos
jmp
sbb
sub
sbb
ds
loope
mov
lock
arpl
xor
ss
jb
div
pop
fmuls
add
cwtl
in
loope
sbb
mov
test
mov
adcb
push
movsl
or
xor
xlat
add
sbb
push
dec
mov
testl
enter
xchg
mov
inc
sbb
cmp
imul
mov
push
daa
xchg
insl
mov
lret
inc
ss
cmp
sub
outsl
fildl
outsl
gs
iret
repz
xlat
loop
dec
das
cli
hlt
xchg
out
stc
stc
call
daa
mov
ret
push
push
adc
pop
xchg
inc
push
les
add
das
push
test
cli
mov
push
imull
vmread
jb,pt
in
mov
ret
test
sub
mov
adc
adc
cmp
pop
push
mov
pop
push
cli
inc
test
jg
jp
into
inc
pop
outsl
mov
sbb
out
dec
aam
test
xlat
jno
mov
jb
sub
adc
mov
or
fadds
dec
pop
sbb
sbb
lock
push
repz
in
lock
push
add
scas
das
adc
xchg
pop
push
jge
pop
jmp
and
popa
sub
lock
je
jbe
ss
xchg
pop
push
push
test
scas
xlat
push
in
out
loop
stos
push
or
mov
les
sub
jb
jmp
pop
adc
pop
jge
test
fucomip
popf
scas
fstpt
test
int
push
test
xchg
fstpt
jge
push
sbb
mov
es
mov
cmpsl
mov
mov
cs
mov
push
out
cmpsl
dec
into
push
xor
outsb
mov
cs
jp
xorb
mov
push
fisubrs
jbe
dec
je
pop
push
jno
or
adc
dec
xlat
cltd
push
add
js
fisubrl
sbb
sbb
test
jbe
add
mov
mov
dec
in
xchg
push
nop
lods
xchg
jl
fdivp
scas
bound
cmc
cmp
cmp
sub
inc
outsb
out
mov
mov
or
ss
mov
adc
daa
dec
ds
sahf
dec
mov
or
mov
sub
adc
push
sub
jmp
push
dec
repz
ds
cli
jnp
push
jl
lock
sbb
sub
xchg
xor
lods
scas
jnp
adc
mov
jns
into
mov
clc
jle
push
jnp
push
into
inc
xchg
stos
scas
push
sbb
test
mov
cs
loop
jo
push
sbb
js
jb
ret
cmp
lds
adc
mov
fdiv
sbb
cmpsb
dec
xor
cwtl
insl
adc
mov
mov
ss
pop
inc
mov
cmovl
dec
push
xchg
add
jle
out
inc
lcall
mov
or
xchg
add
ret
mov
pop
adc
loopne
ljmp
jno
dec
ss
pop
insl
aaa
out
push
jle
sub
or
jbe
leave
lds
loop
pop
xchg
mov
or
js
daa
inc
stos
dec
daa
aam
or
clc
out
call
mov
test
pusha
or
mov
loopne
repz
inc
sub
sbb
aam
push
xchg
test
adc
out
outsl
cld
mov
outsb
xchg
repz
dec
call
loope
cltd
fs
sub
dec
xchg
cmpsl
ja
sub
push
int3
xchg
inc
mov
dec
sub
lods
out
test
enter
mov
divl
jnp
aaa
repz
mov
out
cmp
or
and
in
aam
stos
jbe
xchg
pop
mov
ret
popa
sbbb
inc
mov
nop
inc
sbb
lea
jnp
aaa
es
iret
fs
add
xor
and
mov
call
lods
adc
mov
push
push
mov
pop
cmp
bound
push
lock
jnp
jecxz
xchg
adc
jb
xor
jbe
jp
dec
sbb
inc
adc
xchg
insl
mov
leave
clc
js
xor
mov
push
pop
sub
mov
lds
pop
fildll
mov
fbld
lahf
lods
test
mov
or
je
mov
mov
int3
sti
divb
cmp
or
das
sbb
pop
push
pop
adc
or
push
hlt
lret
int3
mov
jmp
pop
fwait
cmc
inc
sbb
inc
or
not
divl
fldl
stos
jbe
xchg
jl
insb
dec
addr16
inc
subb
cmp
das
mov
push
pop
daa
mov
aas
scas
dec
jns
in
mov
mov
sub
rorb
or
sub
arpl
sarb
out
mov
add
fidivrs
test
ljmp
aaa
iret
and
adc
leave
enter
add
pop
jb
xor
jb
insb
inc
popa
or
daa
inc
mov
push
dec
leave
ficoms
dec
xlat
daa
rcrb
pop
or
push
xchg
pop
add
add
repnz
test
mov
push
nop
or
jmp
es
xchg
jns
xor
out
mov
push
insl
outsl
xor
enter
xor
js
jecxz
jo
fs
in
add
mov
mov
mov
mov
pusha
ja
daa
outsl
and
leave
dec
aam
jl
clc
das
daa
mov
nop
pop
jecxz
sbb
hlt
mov
mov
scas
lahf
outsl
into
or
sar
lock
aaa
jl
in
jne
arpl
pop
mov
add
mov
push
cwtl
sbb
mov
das
rcr
arpl
mov
aas
lods
or
cli
push
aad
mov
lret
ja
xlat
out
push
pop
pop
mov
pop
aad
mov
rol
pop
icebp
push
cltd
push
lcall
xchg
dec
movsl
xchg
insb
xchg
popf
cmp
xlat
movsl
jl
xchg
repz
adc
andl
test
shl
ds
jmp
cmc
or
test
movsb
dec
hlt
ja
divb
fwait
mov
sub
lods
mov
lods
inc
fistps
adc
add
imul
sbb
push
loopne
test
sbb
jbe
fst
sub
in
jb
cld
lret
das
mov
lods
pop
and
push
mov
xchg
inc
daa
enter
imul
rolb
andl
push
inc
xor
ret
push
ret
cmpsb
ret
push
lcall
out
loop
pop
dec
repz
mov
vmwrite
jne
cmc
fwait
adc
into
inc
add
int
inc
stos
push
sti
jbe
add
push
cmc
mov
xor
enter
out
mov
mov
je
add
push
adc
test
push
xor
push
sub
sbb
cmc
mov
jo
push
or
sbb
rcrl
inc
idivb
aad
jo
mov
xchg
sbb
aad
sub
out
add
xchg
icebp
test
ljmp
ds
fldt
sub
fsubrs
jno
enter
sbb
adc
inc
push
addr16
lds
push
inc
out
cmc
mov
ljmp
sahf
adc
into
mov
roll
out
scas
adc
lret
xlat
jbe
lret
outsb
and
lret
adc
rcrl
push
jmp
adc
xor
pop
add
sbb
lret
testl
popa
mov
les
fs
push
mov
ret
lret
mov
sarb
out
jge
sarl
ficompl
jbe
loop
push
divb
and
sub
test
cmp
scas
cld
adc
adc
outsl
mov
adc
mov
xor
outsb
cmp
jle
mov
adcb
into
mov
movsl
or
sbb
mov
addr16
xchg
daa
mov
scas
scas
or
jbe
in
jne
aas
test
outsb
push
fadds
cli
stos
mov
jo
mov
pop
pop
add
sarb
adc
loope
dec
jae
fdivs
orl
scas
cmp
fcoml
mov
aaa
jmp
cmpsl
fidivrs
push
mov
or
mov
in
and
dec
dec
jb
jnp
or
stos
xchg
xchg
imul
mov
mov
or
cmpsl
jo
adc
and
leave
add
fmul
cli
mov
mov
adc
fwait
push
mov
cmc
add
or
sbb
dec
pusha
notb
push
jns
daa
jnp
and
dec
js
jnp
mov
je
fs
imul
lret
adc
mov
push
aad
and
ja
xchg
adc
xor
mov
xchg
dec
loope
push
push
mov
mov
mov
nop
ss
sub
scas
inc
cli
testl
mull
sub
outsl
sti
adc
dec
xchg
shll
mov
xor
movl
xchg
xchg
pop
inc
and
fcomps
js
cmp
adc
or
add
push
loope
hlt
jb
daa
inc
lods
cmp
ds
loopne
xor
mov
push
je
push
fistpll
jl
pop
inc
imul
sbb
insl
mov
jmp
xlat
xor
ss
cltd
push
in
int
xor
aad
or
sbb
scas
jnp
cmp
adc
pop
xorl
cmpsl
fcoml
xor
push
xchg
sub
or
xchg
push
mov
and
xchg
cld
pop
push
push
push
stc
cmp
xchg
sub
sbb
sub
cmp
xor
mov
sbb
mov
sbb
cld
outsb
jecxz
fucomip
jle
pop
movsl
jp
cmpsb
subb
lock
adc
sbb
push
cmp
adc
divl
lock
sub
pop
adc
push
pop
lcall
add
xchg
imul
cs
inc
es
insl
scas
ljmp
jp
cmpxchg8b
imul
fcomps
mov
mov
filds
sbb
test
inc
sbb
mov
repnz
insb
inc
xchg
adc
roll
dec
insb
ret
add
mov
inc
mov
fcomip
sub
jno
cmc
mov
std
inc
or
std
lods
mov
xchg
sbb
aaa
fs
aad
stos
mov
js
sbb
dec
lret
daa
fsubs
lret
ljmp
pop
sbb
insb
lods
mov
dec
addr16
sbb
ret
xchg
inc
mov
and
imul
enter
sbb
sti
sub
ret
xchg
icebp
push
arpl
and
mov
ja
push
outsl
add
mov
test
adc
mov
test
xor
cmp
imul
jne
mov
adc
movsb
jl
jmp
test
push
fstps
adc
in
daa
repnz
in
cmpsl
lcall
adc
lret
mov
lds
xchg
dec
aad
mov
lahf
inc
in
cmp
idivb
test
rorl
imul
dec
lods
xchg
movsb
in
push
js
les
mov
aam
int
sbb
fs
insb
mov
mov
test
nop
or
scas
mov
adc
rorb
pop
adc
push
call
sbb
test
mov
jle
or
subb
xor
dec
lods
xchg
test
lret
js
add
jb
andl
daa
ss
mulb
sbb
xchg
popf
fcompl
or
outsb
scas
aam
repz
xchg
lcall
inc
movsb
js
je
jp
cs
jbe
cmpsl
mov
dec
sbb
pop
shll
out
outsl
movsb
xchg
scas
cmpsl
dec
pop
cmp
xchg
sub
lods
cwtl
fwait
dec
adc
inc
out
imul
add
das
dec
cmp
sbb
jo
push
dec
mov
mov
lahf
sub
xlat
xor
xor
jns
cmp
mov
aas
add
aas
outsb
fcomps
in
push
loope
inc
jbe
lcall
adc
aaa
pop
sbb
loope
fs
fisubl
adc
lock
adc
insl
cwtl
aam
test
mov
jmp
lds
sbb
push
roll
or
outsl
loope
rcll
daa
scas
imull
jbe
ret
push
movl
xor
mov
xor
jp
test
stos
lods
mov
mov
popf
mov
mov
cmp
push
push
cmpsb
cmc
xor
rcl
sub
clc
dec
jns
dec
sub
dec
fcoms
add
mov
addr16
es
notb
int3
cmp
aam
lods
lds
jne
in
es
icebp
loope
stos
js
cld
cmpsl
iret
pop
stc
adc
push
scas
push
je
scas
lds
xchg
push
divl
add
insl
notl
jo
push
hlt
shrb
lock
adc
mov
pop
test
cwtl
mov
inc
fisttpll
mov
jne
scas
in
adc
popf
or
outsb
sbb
lock
insb
push
cmpsb
insl
sbb
daa
lret
les
jno
sub
test
xchg
inc
dec
mov
xor
dec
cmp
mov
cwtl
xchg
mov
int
insl
out
ja
hlt
lods
push
adc
push
cmpsl
dec
jge
popa
sbb
sbb
add
mov
jne
push
lret
pop
fildl
inc
jge
pop
imul
and
into
pop
push
cs
xchg
stos
out
int3
jg
dec
and
std
clc
push
mov
inc
insl
xor
push
rcll
xchg
adcl
insb
div
cld
inc
cmp
sub
mov
push
dec
add
mov
lods
adc
xchg
cli
lahf
push
and
push
scas
jb
xchg
cwtl
cmp
cli
or
cs
into
enter
mov
push
lock
xor
test
mov
xor
stos
ret
test
push
cwtl
push
xchg
push
xor
adc
test
outsl
jbe
push
iret
jns,pn
notb
add
gs
add
mov
mov
xchg
lock
push
xchg
cli
lcall
sbb
cmp
push
daa
test
jns
mov
pop
fstpt
push
jge
jns
xor
adc
jo
xor
roll
adc
pop
outsl
je
add
jnp
xchg
xchg
icebp
fwait
js
mov
or
icebp
jo
in
add
repnz
jbe
and
xchg
sub
xchg
push
xchg
stos
push
scas
pop
xor
jo
pop
lahf
adc
aaa
repz
lcall
imul
xchg
jg
and
dec
push
icebp
jbe
push
inc
leave
dec
insl
outsl
daa
clc
js
test
lret
notb
idivb
jne
push
adc
pop
call
fisubrl
fwait
mov
cltd
cmp
ds
loope
cwtl
ss
cld
js
push
out
cld
leave
ficoml
inc
test
xlat
pop
sub
or
xor
enter
leave
out
scas
cmp
jb
out
push
fistl
pop
das
clc
testl
insb
cli
push
jns
cmpsl
or
out
push
stos
test
subl
dec
pop
sub
add
or
mov
mov
dec
imul
pop
cmp
mov
inc
loopne
stos
mov
test
rorl
movsl
insl
adc
and
lock
sti
adc
in
pop
fs
iret
nop
das
pop
and
jb
xlat
rcrl
fs
es
push
inc
ja
arpl
xchg
arpl
xor
mov
sub
mov
push
test
jne
and
insb
ss
jns
pop
push
sbb
cs
mov
sbb
fwait
xor
jmp
mov
adc
xchg
idiv
pop
xchg
xlat
sbb
imul
push
sbb
dec
inc
push
push
mov
push
hlt
mov
cmc
outsb
mov
aaa
dec
je
xlat
mov
mov
sub
sbb
add
and
rcll
js
sbb
pushf
sbb
sbb
xlat
dec
imul
lret
push
idivb
sahf
add
cmpsl
push
pusha
jecxz
mov
xor
cld
scas
jp
aas
pop
in
inc
or
xor
mov
push
cmpsl
out
pop
adc
dec
adc
loopne
and
daa
lock
addr16
mov
aaa
jbe
inc
aad
sub
push
cmp
imul
and
fs
daa
and
fildll
inc
fsubs
jbe
push
push
mov
adc
add
stc
and
cwtl
push
fstps
add
daa
fdivr
inc
or
inc
outsl
pop
mov
push
mulb
ret
and
sbb
cmpsb
inc
push
es
xor
ja
sbb
mov
ds
xlat
enter
cmc
jns
js
cld
loop
push
xor
inc
es
add
and
cld
in
mov
lock
jmp
repnz
ss
mov
mov
xor
xchg
cmp
clc
or
cwtl
fidivl
add
js
jmp
push
mov
repnz
mov
push
xchg
or
hlt
lcall
jae
addr16
xlat
mov
daa
jecxz
rcl
xor
mov
xchg
adc
movsb
loope
in
jbe
inc
cmc
cmc
mov
mov
je
jne
mov
xor
jecxz
xchg
repnz
pop
xor
cmp
add
jmp
pop
icebp
xchg
stos
jnp
sbb
mov
lahf
lods
cltd
xchg
hlt
xchg
rcrl
sub
mov
xchg
jge
mov
adc
js
cmpsl
pop
adc
in
test
pop
push
adc
xchg
mov
icebp
mov
loopne
jne
aad
arpl
fldenv
pop
call
mov
lcall
lock
adcb
out
mov
clc
pop
movsb
and
lcall
jo
pop
push
clc
fnstcw
pop
adc
hlt
out
and
icebp
xlat
jns
jnp
and
and
inc
inc
cmpsl
push
daa
xchg
cld
aad
push
mov
aaa
fs
xchg
jbe
mov
mov
mov
sarb
mov
and
xor
test
push
pusha
push
int3
or
divb
jecxz
inc
push
aam
jge
scas
mov
adc
pusha
sbb
dec
outsl
lea
sbb
xchg
mulb
cmp
clc
outsl
or
inc
push
sbb
je
mull
cli
jne
rcll
pop
ret
jno
xchg
stos
add
dec
add
jmp
push
and
dec
loop
arpl
xor
adc
add
and
sub
and
inc
mov
cmp
cld
out
imul
ja
and
sti
xchg
lcall
cmc
out
push
jg
into
pusha
xlat
adc
inc
popa
idivl
xor
fsubs
adc
push
jnp
mov
pop
pop
or
xchg
mov
mov
movsb
xlat
jp
add
das
rcll
cltd
xlat
adc
in
cmc
loopne
imul
xchg
lock
push
call
mov
clc
cmp
jmp
push
mov
aaa
adc
je
cmc
ja
fldl2t
mov
popl
mov
mov
xor
push
mov
insl
push
scas
cmc
div
sub
lret
dec
mov
sti
psubq
cmc
fs
push
fs
addr16
jae
adcb
xchg
aad
jp
int
imulb
clc
pop
or
cmpsl
or
pop
push
lcall
imul
xor
xchg
in
adc
mov
or
shl
cmc
loopne
out
in
jle
insb
sub
rcll
and
pop
cmpsb
ret
mov
fwait
insb
mov
js
push
pop
movsb
and
int3
and
sbb
jl
out
xor
in
std
push
or
adc
notb
inc
sti
pop
push
pop
jae
pop
dec
inc
mov
sbb
aaa
cmpsl
sub
pusha
les
push
xchg
repz
or
adc
mov
cli
cld
or
pop
mov
fistpl
pop
and
hlt
popf
push
push
mov
loopne
mov
leave
adc
and
shrb
js
std
ja
je
xor
in
add
jb
inc
inc
push
jae
cmc
mov
aas
test
fimull
movsb
stc
cmpsb
jns
jmp
hlt
sbb
jnp
xor
xlat
cwtl
jmp
scas
hlt
mov
inc
cmc
or
dec
mov
adc
enter
imulb
jp
loop
out
or
test
pop
pop
sbb
push
pop
fldt
cmpsl
outsl
mov
je
sbb
pushf
call
inc
notl
int
sbb
orl
push
ss
mov
xchg
test
stos
and
sbb
jae
jns
jbe
incl
je
icebp
ret
push
daa
iret
js
cld
lahf
cmpsl
jae
mov
cli
adc
push
cld
sub
lcall
arpl
xor
dec
mov
jmp
stos
sbb
push
lret
add
sub
mov
sti
pop
popf
xchg
xor
xor
dec
ret
loope
in
jmp
aas
daa
mov
movb
insb
jmp
aaa
pop
inc
icebp
roll
cltd
into
add
xor
test
pop
pop
pop
shll
jle
mov
adc
adc
fistpl
andb
cld
fisttpll
mov
js
stos
sub
cmp
jae
jo
add
ret
and
pusha
out
cld
cmp
pop
add
daa
lret
mov
push
mov
and
shrl
xor
xchg
jns
cwtl
add
cld
push
jnp
dec
xchg
and
lock
add
adc
xchg
mov
mov
sar
xor
sbb
pop
and
cld
mov
mov
mov
add
cltd
inc
enter
or
pop
std
cmc
push
sbb
enter
sub
xor
repnz
sbb
push
int3
mov
in
icebp
jge
shr
in
subl
out
mov
xchg
mov
xor
push
push
ret
in
sub
push
pop
js
xchg
push
in
push
ret
push
xor
sub
orl
subl
pop
testb
jp
xor
mov
notl
xchg
in
jae
je
sbb
push
add
js
sub
fs
ljmp
adc
in
cs
in
ss
mov
xor
add
mov
test
imul
inc
push
negb
dec
fisttpll
dec
adc
inc
adc
sub
testb
xor
pop
rcrl
push
fwait
scas
aad
rorb
jae
aaa
iret
dec
aaa
xor
xchg
lds
das
out
dec
xchg
adc
outsl
clc
adc
xchg
lahf
xor
mov
cmp
loope
enter
push
loope
shrl
lcall
icebp
xchg
jle
jmp
in
jb
or
aam
lea
push
pusha
daa
test
or
mov
lods
push
loope
xchg
hlt
rcl
outsl
xchg
lods
add
mov
mov
pop
cld
add
scas
sti
xchg
negl
mov
insb
jns
insl
dec
shlb
or
sbb
js
jge
clc
ret
push
ja
daa
notl
ss
jbe
add
aas
xchg
divb
jo
inc
jae
xchg
cmc
mov
je
sar
es
imul
cld
pop
repz
xor
xorb
dec
lea
mov
jbe
test
addr16
mov
xchg
lock
xchg
decb
call
repnz
sti
push
push
sbb
test
cs
je
fbld
cmp
xlat
ret
fnstenv
aas
shlb
and
js
push
repz
mov
cmp
scas
cmc
adc
xor
or
insb
sbb
cmp
scas
cmc
cmpsl
pop
loope
pop
add
js
xor
sub
sbb
in
into
test
fadds
lods
arpl
jge
cmp
jle
jl
std
sbb
cmp
mov
aaa
dec
push
sub
inc
jmp
or
scas
out
lret
xchg
mov
ffree
inc
insb
push
outsb
in
add
sub
dec
push
orb
xor
fists
into
sar
inc
call
repnz
repz
cli
jo
sbb
jb
jg,pn
jmp
pop
out
pusha
sbbl
je
sbb
cs
mov
adc
xchg
jns
jb
push
pop
ja
cmp
cld
push
ret
mov
add
mov
arpl
dec
jo
lcall
in
add
xchg
xor
jb
xor
adc
jno
es
pop
js
js
sti
cmp
out
pop
imulb
sbb
jbe
pop
xor
cmp
popa
sub
adc
lds
pusha
cmpsl
jae
sub
daa
loopne
jae
or
into
cld
fldt
sbb
mov
scas
mov
xchg
sahf
add
cmpsl
addr16
push
clc
pusha
pop
push
ja
adc
add
mov
pop
shll
fs
dec
sbb
push
dec
pop
sub
aad
out
into
inc
jge
sbb
frstor
out
or
cmc
sub
lock
mov
test
jge
inc
push
or
incb
out
ljmp
xor
clc
xlat
call
jge
and
mov
xchg
mov
leave
adc
jae
adc
insb
sahf
pop
in
pop
add
cmp
call
hlt
xchg
loopne
ss
bound
imul
in
outsl
jmp
clc
lahf
das
aaa
daa
xorb
pop
test
push
mov
push
sar
stos
outsb
cltd
jae
xchg
lret
mov
pushl
repnz
jmp
in
stos
mov
sbb
push
mov
add
adc
mov
jbe
sbb
mov
jl
jb
testb
xor
loop
popa
mov
or
lods
push
clc
dec
jbe
inc
sub
decl
dec
stos
xor
mov
aas
gs
fiaddl
in
push
int
add
mov
lret
cmp
jle
jb
loopne
js
cmc
adc
mov
mov
jg
jne
testb
das
xor
cli
pushf
inc
ss
jno
gs
sbb
movsb
mov
imul
jg
addr16
add
jne
and
mov
testl
imul
adc
push
adc
out
push
and
repz
jns
daa
push
sahf
or
test
rolb
sbb
add
mov
xchg
cs
or
dec
in
sbbb
repnz
enter
xchg
repnz
addb
inc
pusha
sahf
das
and
mov
ljmp
sub
pop
push
gs
cld
outsb
and
xchg
fwait
std
es
mov
mov
or
aaa
out
into
mov
or
repz
push
dec
jecxz
int
and
jbe
fimuls
adc
add
jge
jne
in
shlb
mov
jns
int
jne
enter
xchg
xor
jno
arpl
icebp
addr16
jne
clc
xor
and
dec
mov
je
aad
out
repz
ficomps
decb
inc
aaa
cld
jo
fbld
test
xchg
sub
dec
mov
stos
dec
pop
push
mov
dec
pop
das
cwtl
or
pop
jle
and
dec
ja
mov
lods
inc
imul
add
xchg
lret
adc
jns
inc
adcb
int3
adc
sub
testb
mov
aad
dec
pushf
xor
xor
mov
js
add
fidivrs
jle
pop
mov
jne
jmp
xor
and
sub
xchg
pop
scas
int
inc
shl
iret
jle
das
add
mov
cld
mov
and
icebp
imulb
cli
jno
cmp
push
or
push
mov
xchg
fucomip
ds
mov
scas
pop
lods
outsl
cld
test
dec
push
repz
xchg
sbb
outsl
sbb
jbe
inc
dec
push
pop
std
mov
sub
pop
or
popa
and
cmp
aaa
lret
outsl
out
or
out
mov
div
jp
cmp
das
stos
or
cli
lock
sub
addr16
xor
adc
push
mov
cmpsl
pmuludq
insb
cmc
xor
test
aad
call
and
sub
cmpsl
inc
mov
xor
js
mov
push
loope
mov
sub
clc
out
loop
jno
test
or
mov
sub
inc
pop
repz
inc
out
jbe
cmc
idiv
adc
jne
sbb
xor
leave
dec
add
mov
cmovbe
cld
je
js
xor
in
loop
loope
aam
push
sub
lock
add
dec
fidivs
jmp
jb
call
pop
out
jmp
mov
std
fcmovu
lds
pop
out
daa
lea
mov
mov
or
ds
pop
jno
sub
cld
dec
daa
jg
inc
inc
push
push
test
movsb
cmc
add
out
into
les
mov
mov
scas
sbb
addr16
xlat
jecxz
fsubrs
pop
fimull
ljmp
leave
sbb
rcll
adc
rcl
mov
repz
mov
rclb
mov
jg
hlt
imul
mov
or
sbb
push
and
add
or
xchg
sbb
mov
out
mov
out
xchg
sbb
ss
xor
inc
push
mov
daa
fldln2
pop
cs
notl
push
push
sti
pop
sbb
out
mov
arpl
sbb
inc
shll
and
and
mov
adc
outsb
or
pop
and
repz
dec
lods
jne
cld
push
js
pop
addr16
or
add
mov
add
cmp
mov
fistpll
jmp
mov
and
mov
jae
or
lahf
cmp
pop
jge
idivl
xchg
pop
fsubs
jne
cmp
aaa
jnp
testl
jbe
clc
or
testb
jl
clc
popf
mov
push
sub
lcall
jo
lret
out
xchg
dec
test
cmc
xor
mov
repnz
mov
orl
divl
scas
cmc
jo
cmp
mov
add
push
sti
aam
fldl2t
rcl
push
cltd
push
into
out
mov
dec
loopne
dec
push
ljmp
cwtl
cmp
stos
dec
sbb
lock
nop
push
jo
cmp
js
out
mov
and
ds
fnsave
fistl
and
sub
in
js
fdivs
jae
and
mov
jp
push
cmp
div
push
and
lods
div
adc
mov
jno
push
pop
cmpsl
pop
xchg
xchg
pop
fists
sbbb
mov
in
notl
fcmovbe
out
mov
pop
dec
rcrb
int
sbb
cmp
pop
cmp
xorb
popf
arpl
stos
sti
jb,pn
rorl
add
sahf
inc
adc
mov
leave
cmpsb
push
sbb
cmpsb
push
mov
filds
vunpcklps
insb
js
xchg
fldenv
pop
push
mov
xchg
test
jb
xchg
push
mov
mov
or
in
mov
sbb
outsl
jo
lea
clc
push
adc
fidivl
repnz
xchg
in
push
mov
cmp
xor
lea
add
clc
je
arpl
aas
mov
and
mov
cli
aad
cmpsb
dec
xor
aam
pop
xor
mov
not
daa
scas
add
movsb
in
int3
xchg
jae
clc
loope
sub
fsubs
or
lods
loopne
inc
pop
push
movsb
mov
jg
fiaddl
cwtl
adc
mov
mov
fistps
or
pop
fildll
mov
pop
ficomps
xor
push
jnp
div
push
pop
sbb
sbbb
jge
mov
iret
push
cmp
int
ljmp
mov
jo
or
in
data16
xlat
mov
out
xor
jnp
lock
push
out
mov
pop
xlat
dec
lahf
pusha
xchg
testb
adc
or
idiv
loope
xor
fs
jbe
jp
adc
xchg
scas
in
xchg
xchg
xorl
jo
xchg
adc
fistpll
xchg
cmpsl
mov
sbb
mov
aaa
xchg
xchg
clc
aam
aam
push
mov
aaa
ja
shrb
push
mov
pop
jbe
pop
aam
pusha
hlt
mov
outsb
insb
scas
ljmp
int
bound
pop
icebp
cmc
pop
inc
test
pop
sbb
cli
test
sbb
xchg
inc
shlb
adc
xor
mov
pop
jl
inc
dec
aaa
mov
rep
and
jle
leave
push
inc
fs
cmp
clc
repz
in
and
pop
ljmp
rcrb
scas
push
jbe
clc
hlt
pop
push
mov
repz
push
mov
mov
push
js
mov
mull
cmp
xchg
xchg
sub
push
pop
aam
cli
popa
repz
addr16
jne
adc
testl
sbb
xchg
test
cmp
in
cltd
hlt
in
dec
sbb
jmp
ja,pt
fdivr
xor
mov
or
mov
jns
push
cwtl
jno
pop
jnp
xlat
mov
ret
pushw
out
xor
inc
cmpsb
jp
inc
std
aad
pop
and
push
and
adc
lret
dec
xchg
gs
mov
cmp
pop
hlt
push
and
push
cmpsl
js
and
dec
sbb
cltd
shrl
push
adc
xchg
sbb
scas
shll
xchg
out
into
sub
lea
mov
movsb
loope
mov
xor
ja,pt
rclb
clc
test
lods
clc
inc
mov
cmovo
pop
push
mov
out
fiaddl
inc
movsl
dec
xor
push
repz
cwtl
call
cmp
mov
ds
push
xchg
xchg
jmp
or
lret
jae
mov
sbb
push
xchg
sbb
jo
cmc
dec
mov
orb
in
xor
fcmovu
fucomp
popa
out
pop
xchg
imul
or
lahf
hlt
adc
inc
pop
cmp
repz
test
mov
scas
test
sbb
out
push
loope
insb
cmp
push
in
jb
push
or
nop
adc
push
sbb
dec
push
push
daa
in
jno
nop
xchg
add
into
paddsb
mov
out
aam
mov
mov
xlat
or
jo
fiadds
aaa
scas
ror
cld
xchg
cmp
dec
jp
mov
cmp
aam
cld
pop
dec
fnstcw
mov
stos
xor
in
lods
es
xlat
lahf
mov
push
aas
jbe
and
xchg
add
fnsave
dec
ja
sub
divl
or
mov
mov
jp
cld
adc
pop
xchg
jl
jne
sub
mov
daa
push
mov
inc
push
pop
mov
push
mov
fistps
push
aaa
xor
jge
add
or
insl
pop
mov
inc
cmpsb
push
pop
rol
adc
cmpl
cmp
mov
scas
dec
add
add
xchg
movsl
mov
xor
icebp
push
test
jns
icebp
adc
and
and
xor
icebp
in
out
mov
mov
xor
js
rcll
inc
mov
fcomip
pop
out
in
dec
test
ds
adc
pop
lcall
adc
fldenv
jmp
aaa
jnp
dec
dec
jmp
or
or
fstps
mov
imull
lock
adcl
lock
test
add
cmp
push
sbb
cltd
xorb
xor
data16
and
sub
xchg
jecxz
subl
xor
push
fdivs
adc
xchg
sub
out
in
and
cmpsb
mov
adc
jae
xchg
and
mov
and
sbb
daa
mov
lock
repnz
mov
scas
repz
rsm
jge
cmp
pop
inc
fidivrl
lcall
out
clc
popf
mov
outsb
cmp
cmp
shl
gs
push
mov
add
or
js
adc
xorl
cmp
out
inc
push
inc
clc
lea
sbb
sbb
pop
stos
sbbb
test
in
movsb
sub
jne
inc
test
sbb
xchg
sub
testb
sub
lcall
sahf
jge
aaa
jecxz
push
das
sub
daa
mov
adc
add
xchg
sahf
mov
aam
lods
roll
sbb
mov
lret
clc
test
or
fidivrs
fdivs
pop
push
loope
movsl
aas
mov
dec
ja
test
jae
cmp
sbb
push
clc
mov
mov
push
cmp
cltd
jo
pop
sub
xorl
scas
xchg
or
adc
or
mov
repz
repz
shrb
or
fnstsw
int3
insb
or
shrb
jno
adc
icebp
mov
js
mov
jmp
mov
in
pop
dec
icebp
mov
repnz
adc
ljmp
dec
sbb
rcl
inc
pop
xchg
dec
mov
fs
jno
lcall
lock
je
sub
xchg
cltd
mov
fcomp
add
xor
cwtl
pusha
push
lock
std
pop
sbb
popa
cmp
bound
xor
mov
outsl
adc
xlat
out
notb
lret
test
sbb
std
js
imul
or
fs
loopne
out
mov
cli
xorb
dec
lods
arpl
fbstp
push
daa
movsl
lock
idiv
push
sub
add
je
dec
mov
mov
xor
xchg
mov
and
pusha
dec
or
mov
push
iret
shlb
out
cltd
ja
jp
jne
mov
sub
push
fists
jae
push
add
mov
push
push
setg
imul
and
push
cmp
sub
sbb
xor
add
push
cmpsb
mov
dec
adc
sahf
push
test
xchg
fistpl
mov
test
out
xor
jae
icebp
data16
cmp
adc
int
inc
jl
loopne
jge
push
and
in
adc
enter
jge
cmp
js
decl
inc
jecxz
mov
mov
and
shll
outsb
cld
adc
movsl
into
add
lea
pop
je
xor
inc
mov
push
push
fstl
sahf
in
dec
and
sbb
add
daa
adc
bnd
cmpsl
imul
sbb
lods
fidivrl
adc
aam
jg
jle
pop
add
pop
test
and
dec
jno
jp
filds
pop
mov
stos
ret
nopl
in
imul
jbe
cwtl
repnz
mov
mov
cmp
xchg
fs
xor
mov
or
sub
out
inc
dec
cmp
imul
fs
push
stos
out
xchg
std
aaa
or
imul
adc
or
adc
loop
jbe
pop
lahf
inc
dec
lcall
jmp
or
or
add
xchg
popa
addr16
fnstsw
mov
cmp
dec
cld
dec
cld
lods
or
mov
rcrl
mov
loopne
lods
rolb
push
daa
dec
in
out
jmp
popa
mov
xchg
or
or
std
enter
dec
cmp
sub
xchg
es
or
call
test
or
inc
or
out
mov
fsubrs
push
pop
sbb
jbe
addr16
cld
aaa
and
sub
mov
mov
les
add
mov
clc
gs
cmpsl
nop
add
cli
dec
repnz
pusha
inc
addl
xor
repz
aas
cmp
clc
movsb
into
imulb
imul
push
clc
in
adcl
push
xchg
icebp
adc
dec
in
mov
add
in
mov
jb
and
xlat
xor
ss
dec
push
ss
xor
jmp
in
adc
mov
icebp
mov
lea
or
cwtl
push
dec
pop
and
dec
cmp
cmpsl
adc
cli
push
fsubrp
lea
jno
cmp
in
int3
daa
jns
mov
pop
adc
pop
adcb
jge
fcomps
mov
mov
xlat
sahf
fisttpl
sub
push
in
xchg
push
xlat
loope
sbb
mov
jae
add
add
loopne
jae
mov
xlat
cmpsl
xchg
lock
jg
or
jae
int3
cmp
aaa
jp
push
arpl
and
mov
push
mov
jmp
sub
mov
je
pop
xchg
rcll
add
nop
lods
popf
les
out
icebp
xorl
jb
xor
popf
insb
test
mov
je
cwtl
push
inc
inc
or
push
cmpsb
mov
dec
test
cmpsl
dec
out
movsb
pop
pop
test
mov
dec
in
jbe
repnz
cmp
cs
addr16
jo
mov
push
nop
sub
mov
xchg
push
lret
pop
xchg
sbb
push
cmp
add
add
or
dec
cmp
xchg
cli
lea
std
adc
pop
and
xor
addr16
popf
adc
and
cwtl
sub
orb
mov
or
daa
xchg
inc
pop
adc
in
xor
shrl
negl
mov
je
mov
std
sub
add
rcll
out
push
add
pop
loopne
add
jl
cmp
cmp
jo
incl
mov
push
test
mov
test
hlt
jnp
dec
dec
or
xchg
inc
mov
sbb
mov
push
stos
and
frstor
xor
ja
dec
insb
and
mov
xchg
sbb
push
rolb
lcall
dec
mov
test
mov
xor
xchg
pop
mov
fisubs
mov
mov
lods
add
adc
push
mov
mov
xor
add
scas
insb
pop
inc
imul
mov
sub
or
push
cmc
xor
out
jnp
or
test
sub
shll
jecxz
testl
mov
arpl
xor
in
lret
out
push
in
jnp
pop
inc
mov
ret
mov
sti
imul
push
test
imul
mov
jmp
jg
add
mov
imul
das
push
cmp
lret
and
hlt
mov
fnsave
aaa
jns
jl
sbb
xchg
push
push
frstor
dec
pop
iret
push
mov
or
and
pop
jl
aas
out
ss
cli
mov
xchg
fldcw
and
push
sbb
cli
jnp
sub
sbb
test
daa
mov
cmp
dec
loopne
mov
jb
shlb
jecxz
jle
jp
push
mov
test
or
xor
mov
outsl
push
gs
out
mov
jno
dec
test
xor
icebp
mov
inc
push
clc
aas
pop
mov
push
mov
fcoml
mov
adc
out
jmp
push
adc
pusha
add
push
js
in
jb
push
test
sub
xchg
fsub
adc
cmp
xor
add
inc
daa
or
out
push
clc
aam
lret
jbe
or
push
inc
mov
notl
jo
cs
mov
out
jbe
cwtl
sub
and
push
jno
add
cmc
pop
and
xor
cwtl
addr16
adc
pop
insb
call
pop
out
lods
daa
jle
or
mov
inc
test
flds
mov
inc
push
mov
scas
div
sbb
jecxz
xlat
push
push
cwtl
sbb
and
xor
lods
sub
neg
pop
ja
sbb
je
dec
test
inc
cmpsl
out
adc
je
mov
inc
jae
sti
das
cmc
xlat
fwait
sub
jbe
call
shlb
dec
or
cmp
fcomps
xchg
mov
idiv
xchg
jns
cmc
push
cld
jmp
pop
push
dec
push
adc
mov
pushf
adc
lods
je
xchg
jmp
lea
push
lods
sbb
mov
dec
fiadds
push
arpl
js
push
jae
addr16
cmc
push
inc
outsl
popa
shlb
adc
cli
repz
test
lock
mov
rcrb
and
test
in
jl
andl
loope
pop
sbb
rol
jp
arpl
test
pop
pop
int
jb
cmp
adc
jecxz
push
std
sahf
stc
cmpsl
rcr
cmpsb
scas
popf
xchg
call
je
cmp
lea
scas
out
cmp
jmp
sahf
notl
xor
pop
fwait
loop
push
fsubr
fmuls
cmp
add
fsts
mov
push
inc
xchg
jmp
nop
cmp
jns
roll
mov
inc
inc
or
dec
xchg
dec
mov
icebp
sub
add
jno
pop
push
push
inc
test
out
xor
add
mov
in
xor
ss
mull
sbb
aad
jecxz
jnp
rol
outsb
dec
clc
adc
movsb
sbb
js
es
xchg
out
inc
icebp
divl
mov
daa
sarl
stc
ljmp
movsl
test
out
jo
push
repz
sub
xchg
sbb
repnz
adc
sbb
jns
or
push
in
sbb
sbb
cs
shll
push
clc
push
push
mov
shlw
push
jne
pop
mov
mov
pop
jo
and
repz
inc
adcl
cld
out
shlb
adc
push
lock
fnstenv
xor
iret
jo
repnz
test
xchg
cmp
dec
sti
loopne
mov
enter
xlat
sub
mov
lcall
enter
lods
jo
jne
push
push
adc
pop
ljmp
es
loope
sti
mov
sub
repnz
xorl
es
xor
lods
mov
aad
push
into
movsl
mov
mov
testl
cwtl
add
sub
mov
movsl
inc
pop
pop
fcmovnbe
mov
pop
fcompl
std
jbe
cmpsl
sarl
cmp
imul
pop
dec
mov
add
cmpsl
scas
imul
clc
in
jo
pop
movsl
sbb
ret
or
add
cwtl
jo
add
je
pop
das
xchg
femms
pop
mov
faddl
and
push
and
cs
popa
cmp
aaa
loope
aas
add
sub
loop
push
lock
loope
inc
fmuls
daa
xor
call
inc
mov
stc
icebp
sbb
movsb
mov
pop
jp
jg
cli
lods
add
dec
push
dec
ja
stos
xchg
xor
shrl
mov
mov
and
xchg
call
push
inc
and
xchg
or
jecxz
xlat
and
fwait
add
jge
incl
jne
into
xchg
ja
outsb
pop
push
mov
insb
std
jle
push
out
rcrl
mov
mov
popa
adc
mov
push
add
out
cmp
test
inc
rorl
add
lret
cli
mov
std
xchg
mov
into
imul
ud0
push
adc
sbb
les
pusha
ja
jne
dec
push
jbe
cmp
cwtl
and
les
lret
sbb
test
loope
mov
bound
push
xchg
mov
push
cmp
shl
sbb
cmc
lods
je
and
sbb
mov
mov
mov
clc
jmp
jns
sub
iret
clc
mov
imul
aaa
adc
into
test
clc
dec
pusha
xor
pop
push
xor
push
jne
pop
movsb
inc
mov
push
fistl
cmp
and
cmp
cld
insl
jmp
insb
jp
jnp
mov
xor
mov
insb
out
repnz
scas
outsl
dec
std
adc
lock
pop
fdivp
push
gs
repnz
in
sti
cli
je
cld
stos
mov
cmp
cli
xor
sbb
daa
test
ss
jbe
pop
or
shlb
push
sbb
cmp
ljmp
repz
icebp
mov
test
and
xor
ljmp
jae
loope
dec
bnd
hlt
ss
fisttpll
mov
xchg
fcoms
or
push
pop
mov
cmc
sbb
push
adc
sbb
into
cld
mov
pushf
test
xchg
adc
lods
std
or
cmpsb
cmpsl
sahf
adc
cmp
mov
imul
or
int
scas
xchg
sub
push
shr
ja
std
iret
bound
outsb
fistl
in
ficoml
push
cmp
int
mov
mov
lods
shlb
pop
mov
mov
sar
pop
mov
or
ja
dec
push
ret
xchg
js
daa
test
jbe
mov
xor
out
mov
outsb
in
idivb
jae
into
push
or
adc
idiv
adc
lods
adc
les
scas
mov
push
loopne
notl
movsb
nop
stos
add
call
out
xchg
pop
mov
orb
xor
pop
xor
mov
inc
adc
pop
insb
test
fdivrl
icebp
fstpl
ss
rcll
fldl
xchg
in
pop
dec
cli
out
push
jmp
pop
ja
sbb
mov
test
adc
jge
sbb
push
dec
xchg
xorl
xchg
jno
fadd
pusha
sbb
xor
loopne
out
mov
sub
rorl
jmp
cmp
xchg
jge
mov
stos
inc
inc
cmp
mov
mov
mov
or
mov
xor
add
mov
ds
push
daa
adc
cld
outsb
orb
dec
cmpsl
dec
mov
or
lock
ja
call
into
in
cmp
clc
out
out
out
aad
pop
jl
in
pop
out
push
hlt
fisubrs
push
add
outsl
push
sbb
mov
dec
adcl
rcrb
xor
adc
sub
daa
rcl
jmp
xor
loopne
xchg
imul
imull
addr16
mov
sbb
outsb
pushf
jno
pusha
dec
xor
popa
int3
and
mov
mov
xchg
out
cli
icebp
jne
cld
cli
dec
inc
inc
jne
lods
jae
in
bound
stc
adcb
cld
arpl
mov
mov
mov
dec
cli
push
pop
test
sub
das
add
xlat
jb
daa
adc
jle
in
or
jbe
fimuls
mov
xchg
push
jae,pt
jp
repz
repnz
cld
sar
mov
dec
in
aaa
cmpsl
pop
lock
std
sbb
mov
negl
jp
xchg
jmp
pop
insb
mov
push
movsb
push
xchg
daa
cmp
mov
xchg
push
add
push
lock
cmovb
sarb
add
sti
in
mov
in
call
fcoms
adc
inc
fimull
leave
icebp
pop
sbb
jecxz
push
leave
mov
adc
mov
jo
sub
pop
fs
mov
or
outsl
cltd
addr16
push
ds
jle
mov
add
ss
enter
fmull
jb
repz
imul
lock
pusha
roll
sbb
dec
lock
xchg
push
movsb
sti
inc
cs
lods
inc
pop
das
cmp
push
rdpmc
aad
mov
push
add
jo
adc
sbb
ss
aaa
enter
add
mov
cmp
sub
hlt
in
pop
xchg
cld
hlt
pushf
mul
cmp
jecxz
clc
repnz
mov
and
sbb
adc
push
add
fld
lcall
and
les
jne
outsb
mov
and
call
imul
daa
adc
mov
and
scas
idivb
outsl
mov
mov
xchg
jmp
push
daa
aas
scas
daa
sub
adc
cld
xchg
jle
sbb
mov
pop
ret
movsl
pop
lds
push
jecxz
test
div
rcrb
push
fmuls
inc
jge
xlat
loop
sbb
out
pop
add
enter
push
jbe
pop
mov
pusha
rol
fstps
shll
mov
jno
jb
jns
jbe
fadd
push
or
shlb
jecxz
push
push
jnp
aam
lods
add
mov
mov
pusha
fisubs
dec
test
daa
ss
outsl
pop
sub
in
or
push
pop
decl
pop
sub
inc
leave
enter
xchg
cmp
adc
repz
jl
xchg
cmc
repz
inc
aaa
jo
lock
mov
sahf
addr16
inc
xor
xchg
jecxz
push
pop
pop
loopne
cli
or
out
add
jp
lds
mov
cli
ss
ja
jb
push
rsqrtps
inc
orl
pop
cwtl
mov
mov
sub
dec
inc
cmp
lods
push
out
js
pop
and
or
jae
repz
cmc
ret
sbb
mov
push
pop
xor
mov
jae
sub
das
sahf
cmpsl
cltd
fcoml
mov
mov
popf
lds
cmpsb
js
sbb
movsl
sub
jns
scas
and
xchg
movsb
dec
mov
pop
lea
cmp
scas
xor
or
or
mov
inc
shll
mov
add
jl
sbb
popa
mov
sub
jns
lret
ja
push
jb
dec
adc
insb
mov
lret
adc
das
aaa
mov
pop
scas
push
jo
or
mov
not
push
inc
mov
out
mov
cmp
popf
call
testb
cld
and
push
add
ds
aaa
adc
subb
cmp
inc
adc
xor
cld
pusha
test
push
cs
mov
xchg
push
movl
xor
or
in
inc
xor
mov
addr16
dec
and
stos
push
lods
hlt
cld
js
jmp
iret
or
ljmp
mov
dec
arpl
ss
jnp
mov
lock
loope
push
stos
push
mov
push
dec
iret
jne
mov
addl
cmpsl
vmread
pop
sbb
xchg
jmp
push
fs
inc
ss
jecxz
mov
cld
pop
fs
and
dec
jnp
and
or
add
rcl
cltd
jb
mov
adc
jno
push
mov
fsubrs
dec
jae
lea
jne
cmp
dec
cltd
inc
sbb
aas
mov
push
std
pop
cmpb
mov
xor
pop
daa
cld
leave
cmp
xor
adc
or
ret
xor
or
push
mov
push
je
xorl
mov
popa
ds
lahf
iret
shlb
cli
gs
mov
lret
lret
jmp
inc
mov
sbb
jns
pop
sti
leave
aam
adc
cmp
sub
cmc
dec
popa
xlat
ljmp
jno
mov
dec
push
or
fsubp
repz
cld
mov
test
out
scas
cmc
lock
xchg
push
jae
imul
xor
adc
jecxz
inc
shl
fsubs
mov
pop
xor
jg
adc
icebp
mov
cmc
dec
sub
sbb
cmpsl
mov
and
xor
mov
push
mov
and
lret
lahf
xchg
sub
into
out
add
mov
sbb
in
mov
jmp
jg
out
mov
sbb
ljmp
push
into
mov
inc
mov
mov
notl
inc
cwtl
nop
adcl
sbb
jle
inc
je
rcrl
ffree
aad
je
lock
add
inc
outsb
mov
jae
xchg
shlb
loop
sub
mov
mulb
repnz
negb
mov
clc
int3
scas
repz
sbb
pop
cmp
cli
cmp
fsts
repz
ljmp
ljmp
jno
xchg
rclb
mov
ja
jl
lea
cltd
jecxz
hlt
dec
arpl
lods
push
pop
or
push
in
out
jmp
add
insb
ljmp
xchg
jns
add
xor
dec
fs
test
daa
add
sbb
adc
jb
pop
or
pop
adc
sub
cli
xchg
pop
cmp
jg
sbb
clc
test
pop
test
cld
into
test
ret
ds
jb
nop
xchg
mov
je
jbe
aas
fmull
enter
aam
push
dec
fldcw
mov
ss
or
add
mov
push
jle
icebp
jb
popf
pushl
jne
xchg
je
push
stos
mov
xchg
icebp
shll
cs
std
mov
sbb
xor
adc
push
sbb
pop
push
jl
mov
ss
push
sub
dec
push
call
idivl
out
cmpb
mov
push
fisubrl
fcoms
es
pop
scas
mov
fwait
mov
sbb
das
mov
push
mov
xchg
popf
adcb
and
mov
push
pop
fstpt
cld
dec
sbb
sub
add
mov
sbb
ret
mov
popa
notb
push
mov
testb
lock
push
dec
inc
std
dec
push
rorb
call
jl
push
push
and
mov
es
repz
sub
xor
xor
les
fs
mov
movsl
push
xor
lods
test
and
mov
mov
push
mov
xor
stos
cwtl
push
test
xchg
into
cmpsl
adc
xchg
pop
mov
shlb
xchg
or
nop
pop
icebp
jecxz
xor
out
out
pusha
sub
lahf
jo
lods
xchg
push
jl
clc
jbe
push
sbb
aaa
es
add
xchg
out
into
pop
mov
jecxz
js
cli
inc
addr16
js
js
push
cwtl
popf
mov
inc
push
dec
push
xor
lret
mov
lods
cmpsl
lea
lcall
loopne
sbb
data16
push
aaa
imul
fildll
imull
imul
and
mov
cld
dec
jbe
pop
jle
push
and
sub
ja
insl
jnp
cmpsl
popf
int
dec
jb
push
pop
test
repz
das
and
fs
cmp
in
and
xchg
repz
in
push
inc
out
insl
push
insb
cmc
rclb
sbb
push
shlb
shlb
inc
add
fisttpll
js
xor
hlt
lds
xor
imul
shll
in
and
outsb
xchg
jae
push
idivb
jnp
in
je
movsb
adc
cltd
cmp
mov
lock
lock
fsubl
or
push
shll
inc
mov
aaa
es
dec
je,pn
lods
subb
int
and
insb
inc
rcll
addr16
inc
fisttpl
popl
sbb
xor
inc
add
js
jbe
cmp
repz
or
and
jp
shrb
pop
inc
sub
cwtl
shrb
fnsave
mov
subl
pushf
lahf
pop
dec
and
mov
pop
call
adc
ljmp
in
mov
dec
cld
jnp
out
mov
push
shl
dec
lods
loopne
jo
sbb
ja
sbb
sbb
in
mov
mov
call
sub
out
imul
fdiv
enter
filds
popa
je
fstpt
sub
jbe
iret
push
push
insl
int
in
scas
inc
pop
mov
mov
or
jo
sar
push
leave
push
inc
push
add
imul
sti
sbb
addb
push
jae
push
addr16
daa
shl
sbb
sbb
adc
movsl
sbb
push
add
sub
lds
push
pop
cmc
out
out
mov
xchg
xor
mov
nop
out
push
xorb
cwtl
pop
test
push
idivb
icebp
pop
adc
repz
cmp
test
in
xchg
jbe
add
repz
xorb
lods
in
push
sub
xchg
std
mov
aam
jge
cltd
or
test
lea
mov
cmp
lcall
xchg
jnp
and
xchg
mov
loop
lret
popa
lret
xor
cmp
cli
popl
adc
push
lods
mov
psubusw
lods
and
jns
or
aam
scas
sbb
into
cltd
jl
outsb
test
cltd
nop
mov
and
scas
and
mov
movb
lcall
cld
test
test
ret
std
rcrb
arpl
int
or
testl
cmpsb
and
minps
dec
mov
mov
adcl
pop
xor
cmc
adc
dec
je
outsl
divl
xchg
ljmp
dec
jne
jbe
dec
js
les
push
pop
xchg
cwtl
repnz
sbb
fs
xor
scas
sysexit
mov
pop
test
mov
mov
xchg
push
out
cmpsl
daa
mov
cmc
add
mov
in
shl
daa
fdivl
xor
cmp
jns
cmpl
les
adc
cli
dec
insl
lcall
jnp
js
dec
push
repnz
sbb
hlt
xchg
mov
pusha
insb
sbb
mov
push
lods
jns
je
jp
push
push
xor
mov
sbb
inc
gs
cwtl
inc
repz
cwtl
xchg
out
mov
cli
test
jmp
or
add
div
sti
shrl
js
je
mov
popf
mov
dec
cld
lret
std
sbbb
nop
inc
and
es
lahf
out
insb
insb
mov
push
mov
add
aaa
push
push
sub
inc
lahf
and
add
sbb
enter
cmp
sbb
sub
or
push
push
xchg
testl
mov
les
pop
mov
insb
xchg
enter
daa
lds
xchg
negl
popf
ja
mov
rorl
pop
out
fildl
inc
negb
cmp
ret
stos
push
repnz
cld
ror
arpl
xor
sti
in
mov
jp
lods
sub
es
mov
xlat
push
imul
jl
icebp
mov
push
je
xlat
jno
movsl
dec
loopne
push
and
test
hlt
add
mov
pop
scas
mov
sub
jp
mov
scas
aad
aam
std
mov
push
int3
dec
cmpsl
mov
add
ds
or
int3
scas
jno
adc
test
jne
fisttpll
and
add
push
mov
sbb
sub
and
notl
out
mov
push
mov
push
leave
hlt
mov
xor
jns
jge
mov
pop
loopne
push
aaa
jo
or
mov
into
xor
and
mov
push
lahf
cli
jo
xor
idivb
mov
adc
jp
mov
jne
clc
stos
push
cmpsb
or
popf
pop
mov
pop
lock
ds
shl
icebp
push
push
in
and
adc
jge
pop
push
sbb
dec
lods
imul
jl
inc
scas
and
scas
daa
dec
or
emms
jb
add
sbbb
xchg
add
clc
pushf
pop
jo
sub
pminub
imul
idivl
pop
pop
add
inc
mov
cmp
push
out
mov
out
push
push
movsl
mov
push
adc
aam
int
push
clc
xlat
mov
mov
xlat
hlt
stc
mov
insb
xchg
mov
aam
jo
xchg
dec
sub
lods
jb
jl
dec
shrb
xor
movsl
bound
lock
pop
add
push
into
notl
xor
cli
pop
inc
mov
and
add
fnsave
sub
or
jae
js
data16
and
cwtl
sbb
out
sarb
call
mov
sahf
push
in
aad
sub
hlt
cld
stos
or
daa
enter
jle
divb
jecxz
shl
push
mov
xor
sub
push
xlat
adc
js
mov
cli
divb
push
inc
xor
jecxz
icebp
adc
int3
dec
into
loop
addl
push
aaa
cmpsl
mov
push
inc
lcall
mov
daa
mov
sbb
das
inc
and
test
aad
mov
fadd
push
dec
xchg
mov
adc
or
xlat
pop
mov
or
push
jae
ss
adc
cmp
movsl
inc
icebp
mov
lea
fcompl
inc
cmp
outsl
pop
lea
xor
in
add
mov
jnp
fs
notb
sbb
frstor
icebp
hlt
jmp
xchg
mov
cltd
xchg
push
out
jecxz
and
outsl
gs
dec
add
sub
out
push
scas
loop
sub
iret
jge
mov
dec
rcr
mov
add
sub
mov
lahf
sti
daa
pop
lahf
loope
adc
out
lock
mov
cmp
mov
pop
pushf
lods
xor
mov
repz
push
je
cmp
and
adc
or
aaa
je
push
inc
outsl
mov
cmpsl
roll
or
mov
sbb
pop
pushf
dec
js
pop
push
mov
cmc
push
int
mov
je
loop
and
sbb
and
mov
pop
or
dec
nop
jo
mov
ljmp
adc
sbb
mov
hlt
mov
outsl
outsb
sbb
lock
xor
icebp
sbb
imul
mov
int
cmpsb
imul
push
das
js
lock
push
arpl
cs
lret
or
mov
cmp
fs
hlt
das
xor
lock
lods
adc
xlat
cmpsb
inc
push
fldt
sbb
push
fidivs
push
sbb
cmp
cs
sahf
lock
jb
cmpsb
sub
xor
pushf
add
and
cltd
xchg
data16
aas
xchg
in
or
inc
outsb
movsb
fdivr
adc
push
jle
cmp
dec
ret
adc
push
push
push
lods
hlt
fnstenv
movsl
add
jg
jmp
dec
jg
out
in
lret
enter
popa
insl
mov
cltd
and
clc
bnd
out
mov
jle
xlat
dec
dec
daa
cmp
outsl
das
xchg
pushl
jp
xor
xor
xchg
cmp
cmc
or
sub
pop
adcl
icebp
jmp
outsb
xchg
imul
out
jb
inc
push
int3
jle
or
popa
jb
sahf
inc
xor
rorl
aam
or
pop
sub
mov
pop
je
dec
adc
lahf
insb
dec
mov
sti
aaa
push
lods
xchg
sbbl
cmp
xchg
pushf
mov
sub
and
mov
xchg
pop
movsl
sub
dec
loopne
jne
sub
mov
mov
pmulhuw
push
in
rcll
int3
lcall
pop
aad
push
xor
jbe
pop
inc
push
and
es
icebp
xor
sti
cmc
jle
and
jb
lods
sti
inc
adc
scas
xchg
mov
data16
popf
insl
subl
dec
lds
or
cmp
sahf
divb
xor
imul
bound
cmp
fisubrs
sbb
in
insl
mov
mov
cmp
push
cmpsb
xor
aam
mov
sbb
push
xor
and
cmp
ss
in
sbb
or
mov
push
movsl
sub
scas
aam
add
out
adc
out
push
jmp
dec
dec
hlt
xor
shl
cld
rcl
sbb
push
dec
mov
adc
pop
xchg
inc
xor
sbb
pop
mov
lods
cmc
push
push
stos
fsubr
pusha
andb
and
jae,pn
push
cmpsl
mov
sub
es
dec
cmc
sbb
adc
js
lods
mov
cmp
cld
rorl
pop
ljmp
mov
pop
xor
into
es
push
clc
jg
dec
paddw
daa
mov
mov
xlat
loopne
shlb
cmp
inc
and
pop
xorb
adc
xor
push
out
cli
xchg
xchg
jns
mov
repnz
lret
sub
mov
adc
idivl
insb
push
movsl
popf
jecxz
iret
sub
lea
inc
into
adc
clc
test
test
rcrb
or
ret
jge
popf
lock
scas
fiadds
dec
jae
push
sbb
cmpsl
pop
sub
in
push
sbb
inc
in
js
lea
xchg
roll
xor
inc
test
mov
sub
fiadds
sbb
outsl
push
cmp
lret
and
insb
push
dec
xor
push
fnstsw
lock
idiv
and
dec
ja
not
push
cld
arpl
divl
jle
pop
outsl
out
test
loope
inc
sarb
mov
rcrb
jp
sbb
inc
xorps
xor
sahf
inc
jns
push
jle
mov
idivb
hlt
andl
jmp
ret
jp
mov
rcrb
jne
push
cmp
sbb
mov
pop
pop
repz
cld
cmpsl
js
lahf
xchg
inc
pop
hlt
push
mov
dec
jnp
pop
jbe
sub
shrl
mov
jae
push
sbb
push
add
js
aad
mov
sub
add
out
int
outsl
xchg
or
fisubrl
ja
mov
hlt
aaa
mov
inc
mov
cmc
mov
test
hlt
mov
jb
nop
sub
std
push
inc
ja
lods
push
mov
pusha
pop
jb
loopne
cs
out
daa
ss
int
inc
lods
and
in
cmpsl
loope
cmp
lock
dec
push
pop
jmp
push
arpl
notb
push
push
mov
push
jbe
in
lea
pop
mov
jmp
xor
repz
ja
idivl
inc
push
push
cli
out
pop
mov
out
aaa
jecxz
pop
mov
xchg
rcpps
xchg
mov
cmpsb
in
mov
fcoml
inc
or
enter
push
add
scas
adc
fwait
push
int3
rorb
aaa
aas
mov
mov
or
inc
icebp
pop
jle
repnz
dec
cli
imul
dec
dec
push
gs
sti
or
shl
mov
inc
clc
dec
inc
sub
pop
push
and
sti
push
mov
jp
lret
jnp
aad
leave
mov
hlt
and
cmp
mov
shrl
mov
push
cmp
aaa
mov
and
idivl
call
sti
mov
add
xor
sub
jl
xchg
push
cvttps2pi
outsl
outsb
mov
cmc
leave
icebp
or
pop
or
clc
pop
mov
das
pop
dec
mov
adcb
test
lods
div
clc
fistps
dec
push
pop
mov
cmp
popf
in
pop
xchg
add
pop
dec
ljmp
popf
jb
pop
push
jno
pop
aaa
mov
daa
sbb
push
xchg
jmp
cmp
pop
sub
sub
das
test
sub
leave
insl
dec
jmp
and
add
jge
bound
xor
test
cmp
mov
xor
inc
into
aam
add
cmp
repnz
mov
loope
fs
loopne
js
and
ss
in
insl
arpl
fldl
jp
cmp
je
xorl
test
leave
inc
cwtl
dec
sub
pop
into
inc
and
xchg
adc
idiv
cwtl
mov
adc
cmp
rcl
test
lret
push
add
add
xchg
and
divb
mov
lods
scas
push
dec
adc
push
jg
or
inc
ret
std
inc
dec
inc
or
inc
js
adc
sahf
cwtl
test
fnstcw
mov
shrb
sbb
mov
push
push
shrb
mov
sti
adc
into
loopne
lods
js
aaa
out
mov
idivl
push
add
ss
cmp
outsl
js
cmp
divl
xchg
ja
or
inc
push
jmp
pop
outsb
out
xlat
cld
aam
mov
dec
xor
mov
int
dec
mov
sahf
pop
cmp
mov
jmp
mov
ds
js
lret
push
pop
jp
push
add
jnp
sbb
mov
js
daa
outsb
dec
mov
into
pop
out
je
or
les
add
js
scas
mov
mov
jne
mov
lret
scas
mov
es
cs
mov
sarb
in
in
loop
call
mov
mov
movsb
insl
add
jne
bound
xor
pop
shlb
icebp
push
ss
imul
dec
outsl
fisttps
push
sub
add
mov
xor
daa
dec
cli
loop
std
daa
mov
rcl
mov
inc
inc
xor
das
sub
shl
push
into
loop
mov
scas
pushf
jp
mov
adc
mov
push
sub
add
lods
dec
std
cli
je
mov
lods
cmc
mov
test
adc
sub
or
pop
cmc
idiv
ljmp
inc
punpckhbw
jae
psllq
xor
lds
adc
pop
ljmp
lcall
ret
aaa
xor
push
fwait
addl
jg
jmp
xchg
jns
add
add
add
dec
and
test
adc
out
je
std
mov
add
call
jo
arpl
cmp
jbe
cli
jne
jl
insb
ds
jl
mov
adc
jecxz
jle
les
mov
sub
jne
pop
jnp
dec
or
adc
ss
jg
sub
cli
cmp
xor
push
push
adc
xchg
and
jecxz
jle
movsb
pop
sub
xchg
pop
ret
ficomps
mov
arpl
xor
mov
add
push
pop
and
lock
sub
mov
mov
sub
add
xchg
pop
adc
and
sub
adcl
inc
movsl
or
pmovmskb
xor
int3
addr16
icebp
push
inc
mov
sbb
test
and
scas
cmp
lods
pusha
xor
hlt
jle
xor
xchg
mov
test
adc
jp
xor
jmp
push
in
mov
enter
sti
jge
mov
cmp
aad
cmpl
mov
out
daa
jae
sbbl
out
jmp
xchg
or
jns
xchg
dec
mov
sub
dec
fcos
cld
sbb
push
fildll
mov
cmp
neg
push
xchg
addr16
dec
push
cmc
ficomps
ljmp
jbe
negl
jg
fucomi
add
add
adc
sub
cmpsl
pop
in
sbb
xchg
loopne
aam
jge
shr
add
adc
cmp
lcall
movsb
inc
ja
xor
into
xor
je
xor
add
mov
std
jmp
sbb
jns
fmull
jle
into
out
or
xchg
clc
and
fcmovu
stos
jnp
loope
lods
cmc
pop
jno
or
cwtl
push
aas
pop
sbb
add
insl
jns
xor
cld
lock
mov
xor
daa
fld
stos
mov
add
shlb
pop
push
push
orl
orl
inc
pop
jne
pop
arpl
pop
jecxz
cmpsl
andl
push
call
outsl
dec
sub
xchg
pop
pushf
push
jle
je
test
mov
nop
jp
and
lock
sbb
dec
outsb
mov
jns
xor
jno
pop
inc
adc
jp
test
fs
inc
negl
mov
lret
pop
rclb
cltd
daa
or
push
pop
pop
ficompl
sbb
inc
mov
bound
popf
sbb
pop
je
sbb
adcb
add
test
or
push
scas
cld
into
mov
pop
arpl
pusha
js
push
adc
rclb
movsb
icebp
add
sub
jns
pop
xchg
imul
call
adc
loopne
xchg
addr16
xchg
pop
lock
aaa
mov
xor
pop
mov
ljmp
daa
push
lods
mov
jae
notb
mov
cmc
aad
push
aaa
pop
pop
xchg
repnz
scas
outsl
sub
nop
movsb
ja
inc
sbb
cld
inc
lret
dec
inc
fidivrl
lods
test
scas
jmp
lods
daa
cld
lea
xor
inc
daa
es
jmp
lods
sbb
cmp
inc
ror
into
test
call
das
enter
mov
cmpsb
cmp
push
dec
repnz
shrl
shr
mov
push
iret
sub
jl
enter
pop
jae
or
cmc
cld
cli
jnp
shrb
push
into
not
adc
mov
inc
je
testl
xchg
cmp
cld
iret
adc
fnstenv
dec
fidivl
dec
stos
xchg
mov
ret
mov
push
mov
jl
jge
sub
jg
sub
out
cld
xor
pop
and
jg
mov
imul
push
shr
cmpsl
cmpsl
enter
adcb
push
push
scas
push
adc
xchg
pop
sub
sbb
loopne
push
lods
jmp
jnp
test
pop
sbb
push
out
inc
push
mov
orb
adc
add
mov
push
pop
out
push
jp
shl
mov
pop
xchg
inc
add
push
in
adc
repz
lods
pop
xchg
push
hlt
test
daa
adc
jbe
lcall
jnp
push
push
and
jne
jae
cwtl
mov
js
lock
shlb
fstpl
movsl
sbb
movsl
scas
jg
test
sub
arpl
lds
mov
test
mov
fsubrs
xchg
push
push
ja
lcall
mov
cmc
pop
xorl
cmp
dec
sbb
jo
addl
push
push
lea
test
das
pop
xchg
addb
ss
lods
mov
aaa
or
adc
mov
add
sub
pop
out
xchg
fsub
inc
jle
jl
mov
std
adc
and
lods
das
jle,pn
or
mov
dec
ss
scas
cmc
jge
aam
dec
mov
cmpl
mov
idivb
cmpsb
out
outsl
ss
mov
pop
xchg
sbb
fs
les
add
dec
xor
ret
add
pop
fxch
and
xchg
lods
out
push
cwtl
push
xchg
into
shrb
sti
addl
jns
push
xchg
js
xlat
jnp
ja
mov
pop
cli
es
in
in
cmpsb
icebp
cld
ss
js
fsubrs
mov
jecxz
les
mov
sbb
addr16
xchg
cmp
testl
insb
stos
cld
test
sbb
xchg
adc
pop
rcl
ja
outsl
xchg
pop
mov
push
pop
jl
lahf
push
jns
loope
call
push
jne
xchg
int3
mov
jbe
jecxz
or
mov
imulb
gs
pop
loop
jne
das
sub
xchg
adc
mov
ss
data16
push
jne
jge
inc
loope
pop
js
xchg
push
je
mov
adc
lock
mov
xchg
jp
lock
xor
pop
xchg
and
sti
xchg
ss
std
std
adc
loope
adc
and
mov
dec
loopne
jno
mov
jmp
cmp
xchg
sbb
test
xor
fmull
jnp
lea
and
insl
nop
mov
cmpsb
clc
cld
jmp
push
adc
lret
or
sub
in
jb
xchg
cltd
ret
push
or
outsl
test
lret
cmpsb
xor
jo
xchg
cmp
push
mov
mov
xchg
int
sub
inc
or
mov
push
jle
insb
adc
mov
and
iret
imul
add
arpl
repz
adc
pop
mov
out
cmp
test
xchg
outsb
mov
add
jb
clc
add
repz
out
clc
enter
sub
in
mov
movl
pop
xor
inc
and
mull
dec
push
adc
subb
add
clc
aas
mov
nop
xor
std
and
adc
and
sub
leave
test
cwtl
hlt
aam
cltd
or
gs
sub
sbb
dec
mov
mov
lock
rorb
xchg
imul
cmp
add
add
jns
add
test
inc
sub
out
push
clc
in
mov
fsubrs
or
push
push
lea
dec
fisttpll
mov
icebp
loop
mov
rcrb
in
xor
or
mov
mov
cmpsl
push
loop
cmp
fidivl
shl
shll
push
jbe
sbb
xor
gs
xchg
pop
xchg
mov
jge
xchg
add
pushl
mov
push
mov
les
aam
dec
sbb
lods
xor
aaa
daa
mov
push
dec
dec
insb
ja
stos
scas
jnp
aas
add
mov
inc
jo
inc
mov
das
psubw
out
cmp
xchg
sub
movsl
loope
mov
test
mov
xor
jno
ss
dec
data16
push
mov
lcall
int
jg
sti
inc
clc
mov
insl
push
daa
pop
inc
not
cmpsl
mov
pop
xor
mov
jae
xor
fnstsw
jo
or
in
jnp
aam
cmp
jno
mov
les
adc
jecxz
mov
jbe
int
jg
js
inc
inc
sbb
push
xor
sarl
jae
xchg
xor
in
mov
xor
pop
mov
test
push
inc
add
les
jb
cmp
or
mov
es
sbb
fs
mov
jne
inc
push
jno
ret
inc
nop
dec
jbe
mov
cmp
xchg
sbb
in
mov
dec
mov
jno
pop
lret
lds
jns
cltd
in
sti
enter
jns
jo
mov
repz
fists
xchg
adc
roll
sub
ss
jecxz
mov
sub
xchg
adc
testb
add
inc
jne
mov
mov
dec
push
cld
int3
fsubp
rorb
stos
lock
mov
push
pusha
push
call
inc
mov
fwait
dec
pop
jp
or
mov
xor
clc
pop
pop
jge
mov
dec
mov
jnp
jmp
push
mov
cmp
jns
ja
sbb
rclb
adc
adc
jns
cld
call
pop
shll
lods
mov
sbb
adc
xchg
sti
mov
xchg
inc
pop
je
in
mov
jmp
leave
jbe
sti
outsl
sub
or
int
push
mov
mov
xchg
repnz
push
adc
test
out
mov
enter
xor
push
add
add
jb
out
sub
mov
addr16
ret
imul
inc
std
add
mov
jns
adc
pop
mov
hlt
and
jo
popa
bound
jb
push
jo
xchg
mov
insl
adc
fidivl
clc
add
roll
bound
sub
cs
ss
lcall
test
fists
ds
sub
fidivs
sbb
push
scas
test
adc
mov
stos
push
xchg
in
orb
shll
ja
ja
inc
pop
fdivp
and
inc
push
jp
inc
xor
movsb
and
xchg
js
ljmp
ss
mov
adc
test
xor
insl
jmp
dec
cmpsl
fmul
jmp
sbb
ret
outsl
daa
push
pop
xchg
aaa
adc
es
mov
into
insl
dec
movups
hlt
lds
cmc
mov
sbb
stos
aaa
ja
cmpsb
inc
imul
dec
lock
cmpsb
lock
imul
decl
into
pop
insl
adc
lcall
notl
dec
pop
xchg
divl
mov
xor
bound
fidivs
push
add
lods
lahf
stos
das
xor
fmulp
mov
jnp
cltd
sub
cmp
insb
xor
mov
xor
jmp
mov
pop
push
cmp
stos
jecxz
cld
out
outsl
imul
dec
and
xor
test
test
mov
mov
imul
clc
mov
and
insb
sahf
test
and
adc
push
push
push
jno
cmp
jae
dec
imul
push
repnz
mov
cmpsb
push
push
and
shl
scas
lock
mov
shrb
cmp
add
mov
jmp
or
pusha
scas
cs
jb
push
js
insl
popf
test
add
mov
aaa
mov
mov
aam
and
push
pop
jg
popa
hlt
inc
fsubrs
cmc
out
cmc
mov
icebp
test
cwtl
jmp
inc
xchg
adc
mov
aad
hlt
mov
cmp
add
int
sub
cmp
and
ficoml
lods
sbb
xchg
sub
jge
ficompl
cmpsb
sbb
push
mov
xor
sub
sub
aam
outsb
lods
lahf
clc
xchg
testb
mov
adc
add
dec
or
adcl
repnz
pop
rcll
loope
cwtl
daa
imulb
cmp
test
pop
lret
xchg
arpl
lret
cltd
jmp
rcll
icebp
push
cmpsb
js
add
xchg
mov
adc
adcl
push
sub
xchg
dec
inc
fbld
push
imul
outsb
rcr
int
dec
dec
ljmp
clc
js
test
addr16
mov
sub
mov
mov
push
and
push
ss
insb
ss
pop
insb
xchg
ja
iret
sub
mov
pop
jbe
les
jnp
and
icebp
es
imul
sbbb
pop
orl
push
mov
push
lea
xchg
int
mov
push
cltd
outsl
imul
addl
mov
adc
jae
in
cmp
fisubs
inc
scas
xchg
ffreep
sub
int3
mov
xor
repz
fs
scas
dec
test
fcoms
sbb
mov
lcall
mov
inc
aad
dec
cmp
sub
and
cmp
call
pop
inc
mov
jmp
add
xchg
dec
int
scas
out
out
aaa
pop
ss
sar
adc
pop
mov
loopne
loope
or
popa
aam
mov
pop
cld
arpl
mov
cmp
inc
adc
push
inc
xor
outsb
insl
cmp
dec
adc
cmp
into
out
adc
jmp
mov
pushl
cmp
repz
stos
cltd
xchg
add
je
movsb
int3
push
out
int3
sbb
insl
sbb
daa
loop
outsb
ljmp
adc
das
leave
mov
or
push
push
xchg
and
push
xor
or
xchg
cmp
mov
mov
jge
lock
es
outsl
sbb
int3
adc
scas
pop
push
sbb
popf
and
xlat
nop
shl
jb
mov
cli
in
xchg
push
mov
xor
mov
pop
push
xchg
xor
mov
std
je
push
test
inc
mov
lret
push
rcll
add
not
jnp
push
sbb
inc
jmp
jle
clc
fisubrs
mov
and
xchg
daa
or
sbb
cmpsb
xchg
rcrb
cmp
xor
outsl
adc
jbe
sbb
jb
loope,pt
aas
inc
test
cltd
xchg
mov
das
sarl
xor
lea
mov
sbb
or
bnd
ss
lds
inc
cmpsl
ja
adc
mov
testb
data16
xor
dec
dec
pop
icebp
push
scas
lock
mov
fsub
scas
push
cmpsb
loope
hlt
mov
scas
ja
mov
push
add
les
dec
lds
jno
lock
push
inc
in
mov
aam
or
or
ret
aaa
mov
mov
mov
leave
dec
popf
xlat
xor
dec
adc
mov
xor
dec
inc
outsl
cmpsb
mov
dec
dec
jns
or
das
and
jbe
js
jecxz
sbb
std
call
int3
cmpb
pop
add
lahf
loope
xor
mov
cmc
icebp
push
inc
push
out
dec
int
and
nop
push
inc
cli
int3
pop
sbb
outsb
gs
or
xor
icebp
push
xchg
into
fsubr
add
mov
rolb
push
aam
sbb
jne
imul
sar
int
addr16
test
mov
xchg
in
insb
fstps
data16
mov
push
add
jmp
pop
mov
out
popl
cmp
xchg
insb
mov
aaa
in
push
jo
sub
push
jbe
push
mov
shll
inc
std
into
or
adc
imul
jbe
add
inc
adc
mov
out
aaa
mov
adc
xchg
je
dec
scas
incb
mov
insl
xchg
gs
jae
jo
pop
and
imul
clc
jmp
or
scas
and
fidivrl
and
rorb
popa
adc
mov
add
xchg
xchg
addr16
inc
cmpsb
dec
xchg
or
arpl
cli
jb
outsb
xchg
je
add
shrb
lds
cmpsb
icebp
hlt
push
cwtl
inc
jge
cwtl
and
adc
jae
inc
hlt
hlt
ret
das
and
leave
inc
mov
push
sub
movsl
lock
jmp
sbb
jecxz
push
sub
cmpsl
popa
push
test
sub
xor
sbb
fs
jbe
pop
pop
sbb
jmp
and
nop
sbb
idivl
mov
mov
addl
lock
icebp
leave
imulb
lea
xor
out
jae
clc
cmp
mov
cmp
lret
mov
lea
sub
mov
sbb
jbe
or
push
mov
jbe
add
mov
addr16
jp
aaa
out
mov
xchg
sarb
adc
push
mov
inc
jns
loop
dec
mov
out
sub
pop
or
rcll
or
lea
mov
rcll
xchg
into
in
pop
cmp
cmp
push
inc
divb
daa
push
push
push
xor
testl
mov
je
daa
sbb
jmp
adcl
inc
inc
cmpsb
popa
jecxz
sub
nop
jnp
cltd
or
sbb
xchg
inc
xor
jp
push
cmp
data16
aad
icebp
fucomi
in
xchg
fdivr
jl
xchg
push
jnp
mov
imul
pop
push
inc
icebp
push
jae
jbe
cmp
mov
icebp
jns
in
push
repnz
into
pop
hlt
pop
jnp
push
cmpsl
enter
cmpsb
and
stos
in
sbb
hlt
pop
fs
iret
aam
mov
in
adc
dec
adc
xor
into
cld
mov
xor
lds
mov
int3
testb
ret
fwait
jbe
jnp
lds
int
cmc
shrl
outsb
int
jl
int
xor
pop
add
or
cwtl
sbb
jmp
insb
and
cld
jae
inc
rorl
in
repz
push
out
mov
pop
push
lods
pop
nop
mov
xor
cmp
cmc
or
cs
push
cltd
xchg
fwait
std
aaa
cmp
fwait
scas
xor
arpl
into
stc
jg
shl
cmp
sub
pop
mov
mov
sub
lods
cmc
mov
icebp
jbe
ja
mov
jecxz
add
mov
loopne
pop
je
inc
aad
imul
or
jp
loop
push
jge
das
mov
add
xchg
mov
idiv
push
notl
and
insb
data16
cld
pop
adc
sbb
das
test
test
jns
jae
js
iret
push
add
lea
sbb
lret
cmpsl
mov
pop
je
push
pop
imul
push
cmp
daa
mov
xor
lret
incl
mov
pop
xor
xchg
fsts
ljmp
lock
sbb
inc
jo
mov
sbb
int
inc
or
cmp
pop
inc
rorb
sbb
mov
imulb
add
insl
stos
dec
jns
or
shrl
push
jnp
dec
sbb
inc
sub
mov
or
scas
lret
push
push
je
inc
xchg
push
pop
dec
cmpsl
add
jmp
ret
inc
cmp
int
pusha
jmp
and
ja
jne
mov
or
emms
leave
adc
push
cmc
lods
cmpsb
adcb
loope
ja
cmc
adc
clc
js
daa
xor
jae
pop
push
shll
daa
dec
imul
leave
ss
mov
sar
mov
inc
mov
mov
adc
out
mov
dec
xchg
mov
inc
add
xor
mov
cmpsb
add
xchg
lock
sub
ljmp
push
ss
fdivrl
arpl
les
mul
test
xor
nop
mov
push
and
jo
and
addb
ds
mov
sbb
cmpxchg
mov
pop
push
ss
push
xor
xchg
inc
lea
xchg
aaa
pcmpgtd
jg
mov
push
arpl
ds
inc
sub
outsb
mov
pop
pop
jg
stos
outsb
out
adc
jmp
push
adcl
jg,pn
adc
or
mov
stos
lfs
cmpsl
roll
sub
xor
mov
lock
sub
inc
push
mov
adc
imull
lea
out
repz
icebp
xor
test
insb
fisubl
xchg
sub
push
loopne
add
out
jns
pop
call
xor
inc
add
push
fs
push
ds
pop
faddl
or
test
or
xchg
ret
imul
sbb
std
shll
xor
xor
push
push
cld
and
push
jle
fidivrl
lock
push
mov
repnz
jp
loop
dec
nop
mov
fmuls
lahf
or
rcll
mov
dec
xchg
sbb
mov
cmp
jmp
rcr
sbb
pop
inc
mov
outsl
daa
stc
subb
jp
jl
lock
and
sbb
lds
xchg
jns
imul
sbb
sbb
xor
mov
mov
add
xchg
jbe
pusha
push
lret
cmp
movsl
lock
test
ds
aam
adc
sbb
rorl
sbb
insb
xchg
jbe
and
adc
sbb
dec
pop
and
or
fsubrl
xlat
das
mov
cmpsb
sahf
pop
ss
cmp
sbb
fildl
aaa
adc
push
pop
in
mov
push
lret
jae
xchg
negb
dec
mov
cmp
or
mov
sarl
stos
jg
repz
jg
in
xor
dec
lock
mov
push
cmpsl
lret
xor
int
cs
dec
jge
xchg
sub
jl
mov
mov
scas
cltd
int
sbb
adc
int
adc
in
mov
mov
or
sub
xor
mov
xor
push
in
je
movsb
adc
das
push
push
xchg
cmp
ret
push
ja
movsb
mov
in
mov
ret
inc
imul
jns
cmp
adc
imul
lret
xchg
pop
sarb
aad
dec
cmpl
repnz
inc
adc
nop
ja
out
jle
sbb
and
pop
add
jle
lods
sti
cmpl
bound
cwtl
out
cld
push
enter
sbb
xchg
lock
sbb
cmc
popa
test
mov
out
test
mov
jbe
mov
nop
outsb
jo
lahf
or
jl
leave
add
cmp
dec
cmp
imul
sub
lcall
jns
daa
aaa
fdecstp
cmp
cld
int
sbbl
lret
js
push
add
cmp
cmpsl
xchg
mov
dec
mov
jmp
int
and
and
mov
xchg
cltd
enter
repnz
sbb
cwtl
xchg
out
sub
jge
dec
and
lahf
add
jge
imul
pop
cmp
sbb
js
daa
test
and
or
inc
sub
push
into
mov
mov
mov
mov
xor
out
das
cmpsl
inc
mov
add
out
stos
test
fcomps
out
cld
out
pop
push
and
add
or
test
pop
push
push
cs
lock
test
into
daa
adc
and
adc
jmp
jmp
mov
je
mov
inc
and
int
dec
pop
cs
inc
add
ud1
fnstenv
inc
xchg
mov
xchg
xchg
or
test
out
scas
sub
push
and
inc
repz
cmpsl
adc
scas
shl
mov
lds
hlt
jae
adc
add
mov
adc
icebp
dec
jecxz
icebp
das
sbb
enter
jge
push
icebp
dec
sbb
in
nop
xchg
jb
push
and
mov
or
xor
fbstp
aaa
daa
ret
mov
sub
mov
xchg
insb
test
call
loopne
xchg
lds
push
roll
pop
adc
notl
inc
scas
js
jle
and
mov
jp
mov
mov
cld
sti
movsl
jg
sub
mov
movsl
insb
notl
movl
cmp
jae
ja
sbb
sarl
sub
sub
add
xlat
repz
test
xchg
or
pop
shll
sub
sbb
add
mov
bound
jp
jns
divb
ret
das
sub
push
cmpsl
ljmp
jp
adc
xor
xor
inc
adc
enter
cmc
xchg
cmp
ja
push
dec
aas
std
mov
stos
sbb
cmp
and
or
pop
addr16
mov
shll
daa
add
and
imul
or
fcmovu
pop
loop
mov
out
movsb
sub
aad
imulb
test
push
push
lret
mov
sarl
test
stos
movsl
aaa
push
outsl
insb
addr16
push
xlat
jecxz
mov
inc
jnp
sub
int
addl
imul
aas
mov
test
adc
enter
jg
jo
jae
ds
jb
popa
aad
pop
rclb
negb
pop
or
sti
imul
std
pop
lahf
jp
and
add
test
aad
sti
push
pop
gs
addr16
xchg
dec
pushf
out
mov
cmc
imul
push
pop
sub
or
int3
lods
mov
cmpsb
sbb
xor
dec
ss
pusha
das
pop
xchg
movb
xor
jo
mov
pop
sub
aam
adc
out
jne
hlt
mov
fbstp
push
jg
aaa
xor
pop
sub
fimuls
xchg
aad
out
or
addr16
push
and
adc
es
adc
push
mov
xchg
inc
mov
pop
cmp
mov
lods
int
into
movsl
jmp
jae
enter
in
jne
push
push
pop
pusha
das
sti
xor
and
sbb
sbb
jl
cltd
mull
js
neg
lahf
cwtl
mov
js
push
pop
pop
push
push
push
enter
mov
mov
inc
cmp
mov
fsubrs
loopne
pop
xchg
fwait
jmp
xchg
icebp
sbb
aad
loop
lcall
jae
jbe
jnp
sub
push
mov
divl
pop
dec
popa
lea
pusha
sbb
ret
cmp
sub
cmpsl
js
pop
add
pop
popf
cmpsb
or
mov
or
add
mov
mov
scas
jb
ret
repz
push
rcrb
push
sub
mov
std
and
testl
lock
xchg
imul
push
xlat
dec
adcl
jo
addr16
pop
sarb
mov
clc
jo
mov
adc
in
pop
mov
out
paddq
xchg
push
jns
add
push
std
mov
ficoml
and
hlt
push
sbb
je
test
cwtl
cld
pop
cmp
cmp
jmp
aaa
fnstcw
sysenter
mov
fstl
mov
jle
cmp
scas
mov
in
or
mov
mov
jbe
aad
push
scas
aam
js
icebp
jmp
jp
xor
and
imul
adc
in
sbb
sub
rcll
outsb
adc
adc
sub
mov
cmpsl
lret
mov
adc
fstl
cltd
imul
fldcw
out
js
jbe
adc
das
inc
call
pusha
int3
ds
pop
pop
and
pop
in
cmp
addr16
and
inc
test
fcomps
pop
mov
out
inc
mov
lret
mov
push
cmpsl
mov
movsb
sbb
sti
mov
adc
jmp
adc
repnz
cmpsl
insl
repz
ljmp
sbb
andl
xchg
pusha
movsl
sub
outsl
xchg
adc
leave
and
pop
in
jnp
push
add
xchg
mov
rorl
into
negl
in
push
das
jo
push
sub
sbbl
jo
test
cld
dec
subl
das
or
leave
mov
jge
lea
clc
jne
fwait
test
mov
push
insl
faddl
jbe
jae
push
push
adc
mov
addr16
mov
xchg
std
sbb
lea
push
mov
cli
ret
pop
arpl
jns
scas
sbb
adc
add
add
add
std
push
xorb
mov
shl
lods
or
pop
pop
notb
or
das
jns
rcrb
jmp
sbb
sbb
push
ljmp
mov
iret
fistps
dec
daa
push
or
iret
mov
in
xchg
dec
out
and
hlt
xor
lock
sub
and
and
pop
mov
and
fnsetpm(287
scas
jg
xchg
pop
pop
xor
xchg
fisubrs
call
cld
xchg
push
cmc
push
and
dec
ret
scas
in
ljmp
pop
jmp
lock
push
pop
sub
cld
imul
push
xor
jb
xor
lea
outsl
add
push
push
jo
push
cs
push
cld
lods
arpl
push
pop
and
or
cmpsb
mov
lret
or
out
cld
iret
cwtl
data16
insb
push
adc
lock
xchg
sti
jmp
aaa
iret
xor
nop
fcmovb
adc
and
push
inc
cmp
sbb
jmp
out
pop
jge
xchg
es
sbb
scas
mov
scas
lock
mov
jge
aaa
lods
mov
test
cmp
hlt
jo
movsl
jmp
aam
clc
jmp
xor
imul
ja
push
lock
mov
icebp
cmp
pop
jmp
and
outsl
xor
pop
push
ds
add
cmp
push
mov
and
sbb
dec
xchg
imul
icebp
sbb
into
cmp
daa
aam
or
ret
addr16
mov
scas
insb
xchg
in
push
dec
jecxz
rorl
jmp
testl
pop
lods
fisubl
out
add
sbb
lods
jns
jo
movsl
test
mov
ret
push
cwtl
in
cmc
outsb
sub
jo
loope
sub
mov
jbe
jb
mov
jbe
sbb
or
mov
sbb
mov
push
mov
sbb
aas
mov
in
push
movl
xchg
dec
push
cmpsb
cld
das
lock
jo
out
sbb
push
cli
ss
addr16
imul
xchg
inc
sbb
int
imul
aad
outsb
inc
push
lea
cmp
icebp
push
hlt
enter
jp
adc
sbb
movsl
mov
hlt
xchg
jb
jo
push
int3
sti
mov
or
stos
nop
push
repz
and
pop
leave
sbb
inc
jo
jnp
sbb
push
mov
push
call
es
xchg
xor
or
inc
cwtl
sbb
aad
mov
xchg
adc
jne
pop
cmp
xchg
jns
xchg
mov
xlat
push
cmp
testb
fsts
add
sbb
gs
loope
lds
push
xor
fimull
xor
xchg
xor
cmp
decb
inc
adc
pop
cli
pop
add
dec
mov
dec
subl
sahf
pop
arpl
in
outsb
sub
push
pop
mov
out
pop
sub
push
dec
into
jae
lahf
pop
adc
cmp
xchg
or
push
inc
mov
in
div
dec
aam
popf
rcrl
call
es
push
inc
decb
jmp
ss
and
mov
arpl
cmp
andl
pop
xor
sbb
fwait
mov
sub
sbb
cmp
add
addr16
mov
sbb
sub
jb
mov
mov
sbb
jbe
xchg
lahf
push
addr16
dec
jno
dec
pop
out
adc
sbb
out
mov
sub
scas
adc
push
sbb
push
lret
cmpsl
fildll
or
sub
test
and
lahf
inc
push
or
xlat
or
jp
dec
fiadds
sbb
arpl
xor
ljmp
rcrb
rclb
test
push
pop
popf
mov
adc
sbb
cs
inc
fsubs
jo
js
pop
loop
xor
push
push
fs
lock
pop
negl
popf
and
lcall
push
add
push
xchg
adc
stos
je
mov
fsubl
adc
ret
mov
sahf
test
push
hlt
movsl
mov
adc
adc
xor
movsb
or
add
dec
inc
xlat
stos
push
xchg
arpl
xlat
repz
add
xlat
jle
xchg
rorb
mov
sub
neg
and
pop
mov
mov
dec
bound
xchg
mov
mov
xchg
test
jle
inc
pusha
repnz
cmp
js
push
jo
test
lock
xor
jge
mov
in
cmpsl
mov
andl
jp
popa
es
pop
push
adc
mov
xchg
cmp
imul
sbb
in
sub
clc
mulb
mov
dec
sbb
jmp
imull
bound
das
pop
cmc
pop
int
mov
mov
ljmp
xor
mov
fistl
fsubrp
xor
mov
mov
pop
hlt
ss
aaa
js
mov
into
pop
scas
jae
clc
xor
repz
js
xor
sbb
fsub
or
jp
cmp
jmp
ss
cmp
outsl
enter
mov
iret
xorb
push
cmp
mov
insl
shrb
sbb
gs
mov
push
ret
das
mov
std
xor
es
je
xor
sbb
aaa
xor
mov
daa
adc
push
ret
ss
and
mov
sbb
nop
mov
pusha
loop
cltd
scas
push
mov
idiv
xor
testb
jo
or
ljmp
jle
icebp
fdiv
out
cld
adc
and
sti
test
mov
subb
daa
loopne
stc
pop
mov
sbb
iret
negl
xchg
xchg
cld
mov
xchg
movsb
scas
inc
mov
fnstcw
and
add
test
jecxz
arpl
lock
and
push
out
leave
jno
cmp
lods
jne
stos
mov
jbe
shll
daa
repz
dec
outsb
shlb
adc
popa
cli
cltd
stc
adc
clc
pop
movsb
mov
and
inc
and
push
dec
push
jb
xchg
std
adc
sub
js
popf
test
jb
jbe
cmp
into
subb
sub
jb
inc
inc
sub
cmp
pop
jmp
sbb
mov
inc
ja
dec
divb
test
imul
loopne
sub
mov
xlat
fdivrs
add
iret
int
add
scas
jg
jmp
xchg
xchg
cmp
sub
dec
je
mov
stc
adc
adc
inc
xorl
test
cmc
js
jg
ret
ficoml
dec
jmp
add
jns
pop
push
jo
push
sbb
imul
ss
sub
cld
cwtl
pushf
jo
idivl
int
add
lahf
movsb
nop
cld
inc
cmp
mov
dec
push
xchg
dec
xchg
andb
or
idivb
lcall
scas
sub
sbb
ja
fidivrs
mov
push
mov
in
push
pop
xlat
xchg
int
cmpb
scas
sub
push
outsl
and
inc
add
fldcw
adc
jecxz
jo
pusha
jl
lock
icebp
push
push
test
mov
and
xchg
mov
das
jl
sti
mov
push
mov
jnp
xchg
rcrb
cmpsl
jne
sub
shl
lret
sbb
adc
push
xchg
jg
mov
cmpsl
ja
sub
outsb
aas
sbb
adc
inc
pusha
movsl
in
and
inc
ds
mov
cmp
push
sbb
mov
rclb
dec
pop
movsl
cmp
lahf
negl
or
sar
mov
daa
outsb
test
sbb
inc
fstpt
cmpsl
lods
stos
dec
es
jp
mov
lods
out
lcall
or
push
inc
stos
push
lods
std
sahf
jl
push
jl
std
mov
add
cmp
xchg
sbb
sub
dec
sub
les
jbe
rcrl
clc
rclb
je
pop
push
test
imul
push
jle
push
nop
fs
jecxz
xlat
enter
lods
pushf
jecxz
fs
psubsw
outsb
je
mov
or
cld
mov
inc
imul
int3
push
or
jbe
mov
sub
lods
jne
jae
push
or
je
sti
fdivp
xor
int3
add
out
es
imul
mov
ja
mov
mov
lods
push
pop
and
sbb
or
scas
push
js
add
add
and
mov
cmp
sub
clc
dec
notl
mov
cli
dec
dec
fcompl
std
push
fdivrl
mov
sbb
aam
mov
sbb
mov
push
mov
test
cmpsl
jge
cmp
dec
pop
jae
hlt
jbe
fwait
sbb
ss
ja
out
pushl
sub
outsb
xor
das
daa
shl
sbb
jp
rolb
mov
loop
mov
clc
sbb
push
or
push
cmpsb
cld
lahf
outsl
je
cld
cmpsl
adc
idiv
sar
push
outsb
xchg
out
pop
mov
mov
cli
out
xchg
nop
ja
addr16
pop
and
out
lods
scas
push
icebp
push
pop
sbb
mov
sbb
mov
mov
rorb
lods
rclb
movsb
push
cmp
sub
add
jne
imul
iret
test
add
adc
push
sub
outsb
mov
push
pop
xor
idiv
adc
push
xor
js
addr16
ja
xor
add
cld
pop
scas
mov
imul
out
fildl
paddd
adc
es
inc
int
loopne
mov
popa
adc
dec
std
xchg
mov
out
cli
jp
add
and
icebp
cwtl
js
xchg
adc
mov
mov
mov
in
dec
dec
hlt
outsb
xchg
cmp
lods
cmpsb
in
and
pop
push
adc
hlt
xor
sbb
insl
push
insb
xor
mov
adc
pushf
push
lock
mov
or
stos
xchg
xlat
xor
add
jbe
and
testl
test
cltd
push
sar
cmpsl
xchg
sbb
inc
inc
loope
test
test
out
or
jbe
dec
cmp
ja
int
and
ja
fsubrp
fiaddl
jae,pt
jne
lea
notl
adc
add
mov
je
push
push
push
cs
lock
inc
push
or
xlat
fldl
cmp
sbb
sahf
js
test
and
mov
inc
enter
inc
cltd
add
pop
mov
adc
mov
and
scas
mov
add
cmp
daa
jae,pt
outsl
js
dec
nop
in
mov
xor
movsb
xor
insl
int
adc
rolb
mov
scas
pop
mov
das
xor
cwtl
add
mov
xchg
jmp
and
cmp
out
sbb
mov
nop
and
fnstsw
fidivrs
xor
pop
hlt
sub
push
push
sub
fcoml
jp
cmpsl
push
sub
andl
mov
jbe
test
sbb
pop
loopne
xchg
push
pop
adc
pushf
pop
in
push
stos
mov
or
and
inc
js
iret
pusha
and
mov
ljmp
mov
jg
sbb
stos
adc
xchg
and
lds
dec
popa
adc
int3
out
outsb
adc
hlt
sbb
push
out
js
cs
shll
push
xchg
aam
movsb
xor
lock
cmovns
lret
dec
testl
into
sub
jmp
ja
pop
hlt
xchg
test
rcrl
sbb
mulb
xchg
pop
mov
xor
and
rolb
lods
mov
mov
add
ds
test
jl
cmp
jb
jo
imul
jo
nop
maskmovq
negl
xlat
push
pop
mov
add
sbb
push
das
imul
sub
sahf
pop
push
rolb
cwtl
arpl
enter
loopne
mov
pop
aaa
outsl
or
sbb
pop
cmp
cmpsl
xor
adc
jmp
ljmp
sbb
mov
sub
or
push
imul
sbb
cltd
mov
cmpsb
push
jg
xchg
daa
mov
and
pop
push
xlat
scas
lock
dec
pushl
xor
outsl
sub
cs
icebp
test
and
push
sar
fbld
movsb
dec
sub
mov
jbe
mov
or
xchg
cltd
push
scas
and
movsl
aaa
jbe
xor
pop
fists
add
xor
adc
and
cld
jbe
add
xor
xor
lcall
ficomps
adc
mov
push
inc
sbb
pop
repz
inc
jb
cmc
je
sbb
clc
cmp
adc
cmpsl
daa
xor
push
cmp
sahf
rcr
clc
and
mov
leave
cmpsb
arpl
xchg
xchg
in
sub
mov
out
out
shlb
jne
lods
daa
fisttps
sbb
test
or
dec
lret
add
movsb
jmp
dec
mov
xor
clc
jmp
divl
lcall
xlat
sub
jae
push
or
xlat
jnp
leave
out
std
jno
notb
lods
hlt
sarb
inc
jp
mov
add
jg
add
dec
push
adcb
psrlw
pusha
ja
mov
or
scas
idivb
jbe
rep
rcll
hlt
into
sub
mov
je
fwait
mov
adc
inc
popl
in
cmpb
enter
jns
mov
mov
or
xor
or
lods
imul
push
in
mov
mov
xchg
rorl
je
int
call
lods
aaa
jp
jo
mov
sbb
lcall
mov
aaa
inc
in
cmp
mov
in
out
shrl
xchg
lods
add
imul
or
xchg
insl
xchg
cld
outsb
jbe
xorb
negl
imul
push
les
jecxz
shll
jnp
sti
mov
jp
pop
adc
mov
push
or
and
xchg
shll
negb
fisttpll
bound
cld
mov
js
xor
fisttpll
xchg
int
lods
test
adc
mov
cmpsb
xor
dec
lret
aad
jno
pop
loopne
cmp
mov
sbb
add
inc
mov
pusha
out
push
pushf
push
in
clc
enter
call
sbb
dec
cmp
pop
popf
jmp
sub
shlb
fistpll
push
rclb
loopne
cwtl
inc
or
xchg
push
pop
xor
jnp
cld
dec
nop
add
or
enter
xchg
sarb
jmp
int
mov
in
push
bound
sub
popa
inc
jbe
aaa
faddp
dec
sub
call
mov
jbe
mov
std
lds
lcall
cli
outsl
jne
jb
lock
jge
push
ljmp
cs
push
cld
test
clc
jnp
ret
sub
adc
pop
dec
jmp
scas
mov
ss
and
cmp
sub
push
ffree
loop
push
icebp
lret
sti
jecxz
es
sub
cmp
pop
in
aam
loope
bound
xchg
dec
xchg
lock
xor
cli
out
pop
xor
add
adc
mov
jp
adc
jne
ss
stos
fcomip
cmpsb
aam
repnz
xor
mov
xorb
in
or
sbb
rclb
outsb
daa
inc
out
mov
jns
jae
mov
push
leave
xchg
jge
and
leave
jo
mull
hlt
dec
add
jmp
aam
xor
clc
rcrl
sub
mov
lea
pop
stos
mov
cmp
pop
repz
push
repnz
ds
hlt
jae
inc
stos
ds
pop
sub
cli
ret
adc
jne
sbb
cmp
sub
mov
fildl
pop
fsubp
adc
test
xor
jl
ds
imul
xchg
jnp
adc
xchg
mov
dec
scas
xchg
dec
inc
mov
jo
fnstsw
dec
cmp
inc
jg
mov
xchg
mov
pop
inc
dec
pop
jecxz
jne
dec
rcl
sbb
push
addr16
inc
mov
add
fwait
test
sub
pop
add
ds
ret
jg
addr16
inc
xchg
inc
hlt
sub
sbb
add
jo
aam
outsb
testl
mov
mov
int3
stos
ret
aad
insb
roll
push
es
sub
inc
scas
sbb
fidivrl
sbbl
ja
adc
dec
ja
icebp
sub
xchg
push
stos
xor
mov
clc
sahf
adc
ror
loopne
cmpsb
jg
pop
push
cmp
jmp
push
push
dec
fdivrs
mov
sbb
xchg
jo
add
hlt
sti
push
hlt
enter
fcmovbe
mov
sub
insb
push
fsubrs
aad
dec
data16
bnd
jmp
push
mov
mov
clc
jg
or
xchg
lods
leave
nop
cld
inc
fiaddl
mov
mov
jg
repnz
jge
aaa
sbb
jmp
mov
movsl
cli
jo
xor
mov
jmp
push
loope
adc
xor
lret
pop
dec
cld
add
shll
lret
out
push
in
cmp
test
dec
mov
sbb
mov
jb
adc
shl
ss
jb
mov
clc
dec
cmp
cmpsl
test
mov
es
sub
divl
and
jmp
into
into
push
outsb
push
divl
sarb
adc
dec
repz
hlt
mov
mov
add
enter
jne
test
mov
outsl
xchg
xchg
dec
jo
or
xchg
dec
pop
pop
sbb
imul
pop
jmp
push
je
stos
loop
mov
sbb
lods
mov
or
in
jne
and
aaa
ja
lods
push
inc
add
mov
je
testl
das
inc
push
aam
jp
aad
sbb
xchg
je
into
add
and
or
lock
lea
adc
xchg
ret
ss
mov
arpl
cld
iret
mov
sub
xchg
les
jbe
lea
scas
cmp
ret
and
lcall
inc
repnz
push
xchg
jae
out
pushf
scas
push
xchg
addr16
jmp
xchg
je
insl
xor
adc
jg
imul
das
sbb
pop
jp
sbb
dec
sub
insb
icebp
or
and
out
xor
aaa
cli
icebp
xchg
jb
ret
xchg
cmp
jmp
pop
inc
xor
leave
pop
and
push
mov
xlat
pusha
lret
push
xor
mov
or
sbb
insl
inc
popf
push
mov
imul
repz
outsb
nop
mov
mov
xchg
jno
scas
je
mov
pop
lahf
add
adc
push
nop
js
bound
pcmpeqd
add
dec
neg
inc
in
push
int
xlat
pop
sub
adc
cmc
mov
cltd
push
es
pop
push
enter
xchg
inc
mov
pop
add
cld
aad
dec
dec
fsubr
lock
das
js
fwait
insb
or
ss
cwtl
cmp
clc
insl
sbb
xchg
js
repnz
xor
lcall
and
clc
sti
and
dec
xor
outsl
add
or
scas
add
sbb
outsb
test
push
loop
imull
mov
mov
decb
shlb
das
jns
out
jle
push
cmp
push
shlb
nop
jmp
xchg
jp
sbb
jg
and
pop
mov
push
push
dec
add
pushf
insb
or
dec
movsl
pusha
add
movsb
aam
cmp
fisubs
fldt
cltd
dec
push
movsb
push
jnp
mov
ret
cmpsl
push
into
in
push
mov
fisttps
insl
lea
js
or
inc
mov
movsb
cmpsl
push
cmpl
push
push
addr16
pop
adc
or
xor
jmp
cmp
mov
push
hlt
test
push
scas
mov
mov
rolb
lods
sbb
dec
xchg
lods
push
cmp
pusha
sbb
in
icebp
pop
pop
pop
loop
pop
push
or
push
rcrb
dec
je
icebp
pop
shrl
cmp
xchg
bound
push
xchg
loopne
or
inc
fbld
fstl
inc
mov
dec
jmp
mov
add
test
push
dec
cmp
mov
xchg
stos
mov
pop
xchg
xor
push
jecxz
pop
add
mov
cmc
push
test
mov
fsub
bound
scas
lcall
adc
jne
jge
add
pop
ss
aaa
fadds
mov
ja
or
and
or
lds
mov
je
out
or
pop
sbb
add
mov
jo
pop
inc
jo
xchg
push
iret
push
or
mov
push
xchg
inc
rcrb
adc
sbb
xchg
and
flds
addb
shl
lea
inc
arpl
push
pop
and
or
loope
testb
sbb
dec
sarb
adc
add
subb
lret
or
pop
inc
ss
mov
test
pop
jns
ja
mov
inc
jo
xchg
jnp
cmp
shrl
jl
pop
mov
mov
jo
cltd
leave
adc
ja
sbb
pop
iret
mov
cmp
lock
sub
xor
xchg
int
mov
jmp
xchg
xlat
call
xchg
add
add
cmpsl
fcoms
pop
cmp
lret
jnp
jl
sbb
push
sub
jno
push
cmp
stc
ja
lock
movsb
mov
mov
ss
insl
aam
mov
cmpb
mov
subl
daa
test
enter
jmp
call
xlat
push
pop
sbb
or
pop
jl
push
dec
outsl
jbe
shr
addr16
mov
sbb
and
inc
decl
out
jg
sub
notb
mov
or
and
xor
loopne
imul
jg
inc
cli
pop
xchg
addr16
rdpmc
insb
loopne
push
mov
imul
ljmp
rcrb
xchg
mov
daa
in
xchg
xor
push
in
inc
loop
mov
and
arpl
ja
js
test
lret
stos
std
aad
stc
sub
adc
sub
pop
hlt
loope
daa
cwtl
push
imul
movsl
test
lret
jno
fwait
push
jle
inc
sub
xchg
addr16
or
out
int
sbb
dec
cmp
dec
cmpsl
mov
jnp
fldt
fldt
adc
into
lret
or
in
adc
ds
std
dec
xor
mov
or
jmp
mov
and
mov
sbb
cmc
and
adc
fcoms
push
inc
outsl
fcoms
divb
clc
mov
je
inc
mov
aam
push
maxps
or
adc
imul
sbb
sub
dec
adc
out
sub
add
xor
adc
sbb
mov
add
lahf
dec
jb
ret
or
and
cltd
inc
push
push
or
cld
loope
pand
jo
cmp
jae
push
push
rorb
pop
adc
adc
test
xor
outsb
mov
sbb
lock
adcb
inc
mov
pop
cmc
shrl
pusha
xchg
ss
sbb
jmp
mov
mov
or
in
push
rcl
repz
idivl
mov
add
jecxz
pop
pop
jnp
cmp
xchg
or
jmp
inc
inc
cmp
jl
mov
adc
mov
add
int
js
push
je
lea
mov
leave
or
sbb
sbb
jg
es
aam
subb
jbe
xchg
push
pop
cwtl
xor
loopne
in
lods
and
mov
imul
add
sbb
cmp
jmp
jo
jecxz
adc
int
fwait
jo
repz
idiv
pop
sbb
push
jns
out
jmp
xchg
mov
cmp
icebp
push
js
xor
insl
jae
xchg
sbbl
ss
pop
pop
cmp
fimuls
shll
push
fwait
arpl
lea
jmp
xchg
xchg
imul
ja
sub
icebp
pop
outsb
adc
stos
fdivl
int
mov
ret
add
in
cmp
outsl
hlt
inc
adc
or
push
scas
cmpsb
push
xor
jo
cmpsl
mov
stos
clc
leave
add
cld
in
dec
test
outsl
pop
push
jge
add
xchg
jp
pop
jge
sbb
icebp
jns
icebp
mov
push
sar
lret
mov
cmp
cmp
repnz
imul
and
jmp
int
mov
mov
inc
push
pop
inc
adc
mov
inc
popa
cld
fwait
sbb
mov
push
xor
je
fldt
push
test
jo
dec
outsl
out
pop
pushf
ss
add
and
arpl
test
cmpsl
scas
inc
push
int3
or
or
mov
daa
ljmp
in
mov
sub
clc
push
repnz
mov
iret
test
shll
scas
js
push
arpl
mov
jne
mov
dec
rcrb
arpl
das
in
mov
sbb
push
and
pushf
fcmovnu
pushf
mov
syscall
pop
adc
or
lea
adc
jbe
pop
je
jecxz
xor
xor
push
sub
pop
pop
pop
aam
sbb
add
pop
pop
dec
int
ret
cmp
out
push
dec
dec
arpl
push
sti
loop
aad
sbb
stos
xchg
aaa
test
in
lods
dec
adc
js
or
jnp
nop
fadd
les
mov
int3
sub
push
jnp
sub
dec
in
hlt
push
push
sub
repz
mov
mov
push
pop
or
mov
cmp
or
aaa
jo
sub
xlat
inc
daa
xor
mov
mov
inc
out
loopne
xor
xchg
push
push
add
daa
mov
mov
xchg
jmp
or
popf
mov
jne
je
adc
sbb
sub
cli
pop
pop
jge
arpl
out
je
adc
jns
outsb
daa
test
and
ss
mov
inc
xor
ficomps
je
sub
imul
mov
cmpsl
lock
sbb
lcall
cwtl
mov
inc
insl
aam
lret
lcall
xor
in
out
mov
inc
imul
in
lods
sbbb
mov
cld
dec
pminsw
inc
addr16
xchg
mov
cwtl
js
mov
rcr
aam
gs
ss
push
lods
je
mov
or
ret
pushl
xchg
xor
popl
ss
jae
cmc
mov
add
push
sbb
lea
int3
clc
ds
lock
add
ljmp
mov
std
cmc
cmp
jmp
jns
push
clc
jmp
inc
pop
xchg
sbb
fsubrp
test
inc
xchg
rclb
jmp
sbb
movsb
pusha
js
js
stos
adc
lods
maskmovq
negl
jecxz
inc
sub
push
out
inc
sti
and
pop
pop
shlb
aaa
mov
outsb
mov
test
loope
jmp
out
push
dec
xchg
icebp
inc
scas
or
mov
ss
adc
mov
inc
adc
sbb
pop
mov
or
inc
icebp
sbb
fcomip
add
sub
dec
sbb
scas
popa
adc
inc
adc
cmpsl
mov
pop
mov
xchg
sahf
fbstp
sub
cwtl
cld
pop
jnp
add
add
das
in
cmpsb
and
sti
into
fs
test
daa
mov
insb
lods
loopne
adc
sub
lods
inc
push
jo
testl
cs
cmp
mov
dec
jl
jl
xchg
subps
sahf
cmp
pop
fisttpll
test
mov
xor
notb
aam
movsb
lock
xor
pop
adc
je
es
int3
mov
cmpsb
dec
jae
cmp
xchg
xchg
cmp
xchg
stos
mov
mov
test
pop
ret
jo
adc
cmp
sub
inc
jmp
sbb
push
push
inc
xorb
aam
mov
mov
xchg
mov
xor
jecxz
lahf
xor
jg
daa
clc
or
and
add
sbb
test
cmpsl
inc
pushl
repnz
inc
push
cs
nop
pusha
cwtl
or
mov
adc
mov
repz
pusha
in
adc
push
and
cmc
or
pop
cltd
sub
sbb
dec
add
sub
mov
pop
mov
or
mov
xchg
imul
xchg
mov
cmpl
pop
push
outsl
or
cmpsb
popa
or
leave
lcall
push
mov
mov
sbb
jne
js
ljmp
fsubs
mov
push
push
outsl
mov
jno
mov
mov
shl
loop
jbe
sbb
jbe
std
roll
xchg
jl
cs
sub
mov
jnp
pop
add
mov
xchg
punpcklbw
scas
int3
mov
imul
orl
lods
es
xchg
dec
push
mov
sub
push
movsb
test
loopnew
sub
lods
add
dec
aas
stc
int3
out
xlat
movsl
pop
pop
test
xor
lods
mov
push
sbb
adc
negb
add
pushf
hlt
mov
xchg
std
xchg
or
int
push
cmp
les
es
sbb
int3
out
imul
sbb
or
sbb
sub
add
test
cmp
sub
call
test
clc
daa
mov
xor
jns
xchg
jmp
dec
clc
cld
push
jne
dec
add
gs
aam
add
jne
xchg
or
push
cmpsl
inc
xorl
cli
jl
out
or
js
push
xor
mov
pop
test
outsb
mov
stos
push
push
and
fists
sbb
add
je,pt
push
push
lods
mov
shlb
sbb
push
dec
dec
rclb
aaa
jp
xor
sub
pop
out
push
out
push
mov
mov
jno
and
pusha
inc
lret
negb
nop
xchg
push
pop
pop
jg
dec
mov
cmp
rol
cmc
pop
mov
jl
pop
fucomip
mov
adc
mov
xchg
xchg
sti
cmp
in
repz
and
stos
icebp
xlat
aaa
lcall
mov
imul
sub
push
rorb
ret
jb
inc
jmp
jo
push
xchg
adc
push
mov
xchg
and
cmp
add
out
push
rcr
fs
lret
jns
xor
xlat
jo
js
mov
fs
hlt
movsb
push
orb
fcmovnbe
mov
mov
push
jmp
mov
or
push
out
ds
pop
dec
add
push
nop
iret
jns
iret
add
sub
aad
clc
loopne
xchg
ficomps
test
in
mov
inc
xchg
dec
jb
sub
aam
add
cs
out
sti
ret
xchg
mov
ja
fs
sub
movsb
mov
xchg
cmc
cmp
jle
add
cmpsb
mov
stos
push
pop
movsl
lock
xchg
shl
cs
push
clc
jne
sbbb
push
sub
divl
ficoms
cli
in
jp
cmp
sub
addl
sti
add
out
mov
movsl
sub
xlat
jb
mov
adc
les
cmc
jns
cli
jnp
dec
and
idiv
push
pop
dec
sbb
lret
nop
jge
or
ljmp
scas
or
out
mov
aaa
sbb
lock
cmp
add
dec
or
sbb
lea
sbb
or
mov
inc
adc
int
xor
adc
aas
sbb
movsb
fucomp
jle
rcrl
pop
enter
aaa
sbb
icebp
jae
add
mov
mov
js
sarb
nop
pusha
pop
mov
sbb
push
ss
scas
in
repz
mov
jns
fsubs
pop
xor
popa
and
cltd
push
xlat
and
ret
mov
and
push
push
xchg
scas
and
mov
js
js
pop
sti
rcrw
idiv
jle
mov
mov
call
mov
cltd
mov
out
ss
pop
push
aaa
fldcw
stos
mov
and
sbb
add
scas
pop
pusha
jle
pop
xchg
push
xchg
cmpsl
clc
xchg
lods
loop
pop
lods
cmc
loop
cwtl
out
cld
mov
mov
test
addr16
and
repz
fdivrs
cmp
pop
xchg
mov
dec
jmp
cmp
cld
imul
xchg
data16
lods
int
and
push
testb
pop
lds
fdivrs
sbb
hlt
fdivs
frstor
xchg
push
dec
pusha
mov
mov
stos
inc
rorb
leave
hlt
mull
repnz
jl
push
cld
sub
mov
repz
lods
and
rcl
jbe
cmpsl
repnz
test
fistl
shr
rclb
outsl
cmpsl
inc
push
pop
outsb
popf
inc
adc
cmp
ds
mov
addb
notb
leave
sbb
push
adc
outsb
stos
pop
push
adc
cmc
or
xlat
jle
xchg
out
jl
cltd
lods
fidivl
int3
sti
lret
push
dec
add
or
mov
and
adc
sub
mov
bound
js
ljmp
or
mov
mov
repnz
dec
or
mov
dec
xchg
popa
pop
outsb
aam
xchg
cmpsb
push
pushf
es
in
lods
push
dec
insl
std
cmp
inc
ljmp
xlat
mov
xlat
sub
ja
xchg
cmpsb
sub
adc
aaa
testl
cld
outsb
out
dec
lods
pop
sub
nop
cli
fcmovnb
adc
add
ss
cmp
sbb
jp
pop
mov
fxch
xchg
xor
lds
popf
daa
cmp
lea
mov
jge
adcl
sbb
addr16
sub
fdiv
lock
pop
mov
fstl
pop
icebp
sbb
mov
addr16
notl
xor
push
jl
cmpsl
std
push
fbld
clc
push
inc
add
divl
add
shrb
int
add
dec
daa
mov
enter
les
adcb
cld
inc
bound
shlb
clc
cmpsb
mov
add
xchg
sub
into
popa
enter
cmp
push
inc
popf
icebp
push
or
and
pop
add
clc
cmc
insb
jne
jbe
icebp
mov
jmp
push
negb
mov
rclb
push
pop
push
mov
cmp
pop
push
pop
mov
imul
lds
cmpsb
loope
xlat
or
jo
adc
pop
aaa
cltd
mov
push
fisubs
test
pop
test
std
loopne
jmp
cwtl
jo
push
cwtl
dec
jae
push
imul
jmp
fldcw
cltd
stc
iret
cmpsl
dec
ljmp
test
pop
scas
scas
push
clc
jo
test
xlat
xor
dec
lods
adc
or
mov
cmpsl
cltd
das
out
push
hlt
pop
repnz
data16
clc
std
roll
sbb
pop
or
adc
stc
push
nop
test
scas
cld
adcl
xchg
out
pop
ret
dec
in
adc
pop
loopne
dec
stc
aas
inc
xlat
loope
dec
inc
adc
cmp
mov
fists
push
ss
into
add
scas
lods
push
stos
jge
dec
jno
add
in
sbb
add
xor
push
cld
xor
lcall
sbb
fstps
out
addr16
pushf
mov
xlat
xlat
jle
sub
cmpsl
stos
popa
cmpsb
int
dec
push
imul
xor
push
sbb
push
push
xor
jl
addr16
push
adc
push
pop
lahf
xor
or
push
rorb
lods
repnz
add
fstp
adc
sub
frstor
adcl
mov
lahf
jne
int
xlat
add
push
xchg
es
stc
into
addr16
push
cmp
cmp
xchg
add
sbb
mov
sbb
and
ficoml
inc
fldcw
sbb
jmp
lahf
jbe
xor
jae
sub
sub
pop
sbb
adc
fadds
or
and
pop
jb
mov
push
popa
inc
mov
out
jnp
lods
sbb
es
std
mov
es
les
push
in
je
push
and
xchg
pop
ja
xorl
push
xor
push
hlt
and
cs
adcb
ret
lock
andb
inc
adc
addr16
push
mov
and
imull
into
or
adc
daa
push
or
xor
mov
pop
mov
ret
out
cld
repnz
cmpsb
lock
and
nop
dec
sbb
pop
push
mov
xchg
mov
jne
sub
ja
add
mov
push
loop
icebp
je
xor
sbb
cmpsl
mov
hlt
inc
inc
adc
enterw
mov
mov
scas
xor
xchg
jle
pop
pop
insb
cmp
inc
jge
out
push
inc
imul
inc
inc
nop
addr16
pop
pusha
nop
mov
call
sub
pushf
push
cwtl
xchg
and
or
sahf
xchg
mov
xor
outsl
sub
loope
push
cld
xchg
cmp
push
add
xchg
mov
cmp
out
xor
shrb
dec
mov
xchg
nop
add
cs
push
mov
shll
jno
ss
mov
mov
jl
andb
xchg
sbb
je
inc
addr16
xor
mov
jo
rcrb
cmpsb
aas
fildl
inc
fstl
pushf
push
adcb
mov
xchg
cmpsb
jbe
xchg
xchg
adc
jnp
and
xchg
cli
pop
mov
enter
inc
cld
push
add
pop
pop
test
insb
xor
lds
mov
insb
ficoml
sbb
or
outsl
cmc
push
dec
pusha
add
add
mov
pop
xchg
lds
add
mov
in
or
fs
imull
sbb
imul
sub
fnstsw
enter
push
mov
pop
outsl
mov
jmp
mov
cld
xchg
xor
jb
dec
into
add
sarl
or
adc
in
or
push
and
xchg
cmp
xlat
xlat
ficompl
jge
clc
lret
incb
neg
lock
mov
adc
mov
cmp
push
sti
int3
scas
aaa
cmpsl
es
scas
push
stos
mov
loope
data16
mov
xchg
sbb
xor
das
jne
imul
jo
push
sub
push
adc
xchg
clc
cwtl
mov
mov
cmc
jae
cltd
ljmp
jb
jne
js
pop
mov
push
cli
or
jmp
mov
cmpsb
mov
add
movsl
stos
dec
imul
imul
sbb
push
adc
daa
int
sti
push
and
jae
adc
into
into
inc
sub
mov
pop
aam
cmp
or
rclb
lahf
loop
adcl
cmpsl
adc
repz
out
or
mov
hlt
push
js
mov
xor
mov
test
xchg
sbb
ss
or
jmp
mov
into
push
aas
fsubp
push
imull
out
mov
rclb
gs
mov
lock
shlb
or
push
cmc
lods
xor
xor
andl
hlt
xchg
lods
mov
sbb
mov
loope
dec
inc
push
sub
js
pop
push
xchg
lock
xchg
pop
cmp
je
clc
and
lret
mov
insb
shrl
sbb
dec
js
pop
cmp
xchg
pop
inc
or
and
scas
adc
rcll
pushf
enter
push
xorl
push
jae
movsl
xchg
ds
jns
mov
addb
lahf
pmuludq
mov
leave
jo
mov
pushf
mov
bound
call
xchg
scas
mov
adc
push
rorb
ds
ljmp
jl
cmpsb
scas
jno
shrb
xchg
or
and
lahf
sub
jp
sbb
xlat
jg
xchg
mov
pop
sbb
dec
jg
scas
push
shl
and
cmp
push
mov
xchg
mov
clc
fnstenv
jae
scas
adc
cmc
xchg
clc
or
jp
sub
and
sbb
push
jmp
sub
andl
test
push
inc
mov
test
mov
loopne
notl
inc
xor
fadds
xchg
inc
outsl
xor
nop
shrb
push
cmp
pop
sbb
sub
xchg
fbstp
fldt
addb
cmp
cs
inc
je
or
xor
iret
in
jle
addl
mov
jns
pop
mov
pop
enter
lds
daa
stos
hlt
mov
xor
push
push
mov
mov
shl
push
imul
push
push
inc
addr16
icebp
jo
sub
xlat
loope
mov
mov
js
jecxz
xlat
adc
nop
adc
pop
adc
xor
pop
xchg
out
mov
sbb
add
jle
fwait
sahf
and
push
xor
popf
jo
cmpsb
test
dec
rcrl
pop
rcrl
icebp
outsl
daa
jg
fs
mov
aam
sbb
ss
push
jmp
push
pop
cvttps2pi
fbld
dec
sub
orb
out
int
iret
add
and
adc
es
add
xchg
cld
pusha
es
pop
pop
bound
out
adc
push
xor
push
hlt
sti
jbe
enter
dec
lea
scas
subb
jne
ret
mov
add
fiaddl
test
jnp
and
jb
ja
mov
ss
jle
inc
lds
push
pop
inc
xchg
mov
push
iret
jmp
lret
sbb
dec
ss
and
ds
arpl
dec
cmp
rcll
std
xor
mov
push
mov
xlat
mov
rorb
mov
stos
popl
stc
cmc
push
add
sarb
add
addr16
outsl
xchg
pop
jl
daa
cmp
imul
pop
mov
scas
sti
lahf
inc
cmc
insl
jo
shlb
xchg
pop
ds
cwtl
dec
sbb
pop
pop
int
jmp
fmull
cmp
push
mov
push
imull
and
cli
loope
push
aad
jno
aaa
pop
mov
clc
pop
enter
ja
dec
sarl
adc
xorb
add
insl
popl
jnp
andb
es
mov
add
in
test
push
fldenv
loop
jp
and
and
jb
pop
lds
add
inc
hlt
pop
jmp
push
mov
cmp
je
or
push
xchg
jge
lret
dec
iret
inc
imul
lds
dec
push
mov
cmp
notl
cmp
pusha
xor
xor
push
negb
inc
jmp
insb
mov
xchg
cmp
inc
test
clc
clc
sub
sbb
pop
insb
ss
popa
mov
mov
sub
dec
sti
pop
and
ja
icebp
adcl
lahf
scas
cltd
outsb
roll
sahf
xlat
mov
ljmp
pushf
ficomps
sbb
vpsllvd
das
sbb
mov
loope
sar
fs
fisubrl
mov
add
movsl
aaa
scas
pusha
ja
pop
push
in
cmp
or
fidivl
cmp
insb
test
gs
outsl
lea
addr16
push
stos
mov
dec
pop
xchg
lcall
hlt
sbb
loop
dec
mov
int
pop
ljmp
ret
out
daa
cmp
ja
push
loopne
mov
add
mov
jns
push
ds
add
sbb
add
mov
mov
cmp
cmpsl
out
sbb
push
push
xor
sarl
fnstcw
jecxz
sarl
pop
adc
enter
hlt
sbb
push
dec
lds
xor
jp
push
enter
out
pop
cmp
scas
dec
cld
and
loopne,pn
adc
in
xchg
call
daa
mov
ss
pop
jl
add
add
inc
xchg
or
push
pop
sahf
xor
inc
dec
cwtl
dec
and
mull
dec
push
repnz
push
aaa
adcb
shlb
jbe
aas
inc
mov
jge
ljmp
jne
pop
cmp
movsb
ret
cmp
dec
push
sbb
aaa
out
rorb
sbb
xor
xchg
data16
lods
push
xor
xor
dec
pop
test
xchg
fists
daa
push
js
push
jbe
cmc
or
push
push
pop
imul
jnp
xchg
adc
aaa
movhps
sahf
mov
fbld
mov
test
hlt
sbb
addr16
jb
lahf
in
jp
jle
adc
xchg
pop
sti
or
xor
into
adc
cld
sub
mov
mov
mov
sub
mov
loope
leave
xlat
sub
xchg
jmp
pavgw
test
not
out
xchg
sbb
pop
bnd
test
xchg
sub
popa
add
mov
bound
xor
mov
testl
ja
cld
insb
fldt
adc
test
jge
ss
push
daa
cmc
pop
adc
or
sti
jnp
dec
bound
repz
fdiv
sbb
mov
ds
mov
push
test
fisubrl
dec
into
dec
pop
pop
cwtl
mov
test
addb
jmp
lds
pop
pop
shrb
stc
inc
test
inc
mov
mov
jmp
adc
into
test
xor
outsl
stos
dec
push
cli
and
mov
imul
xchg
push
pop
push
xorb
shll
popf
adc
mov
insb
sbb
adc
out
adc
cmp
or
dec
into
andb
push
in
das
js
cli
xchg
cmpsl
xchg
sbb
addr16
pop
xchg
test
dec
adcb
test
jo
mov
jl
mov
xchg
and
push
jp
or
scas
cmp
fadds
and
adc
loope
popl
loope
lods
sbb
lret
scas
idivl
cld
sub
mov
cwtl
out
add
test
xchg
push
inc
or
lea
cmp
ds
adc
outsb
gs
jge
stc
pop
add
rorl
test
lret
mov
pop
jge
jl,pn
inc
jle
jl
test
cld
dec
and
push
push
push
call
out
cld
ljmp
movsb
jg
xacquire
out
dec
into
pop
icebp
scas
aaa
cld
mov
add
adc
fwait
xor
into
inc
push
jne
in
pushf
arpl
mov
add
mov
stc
out
cld
lcall
mov
fcomps
int3
into
movsl
imul
lock
fcoms
mov
loope
testl
pop
push
jbe
or
push
rclb
cmpsl
and
aaa
push
lcall
stos
mov
mov
int
roll
cmp
call
jl
out
push
jns
dec
orb
adc
data16
icebp
sahf
inc
sbb
push
mov
jnp
popf
push
addr16
jbe
shrl
jp
pop
lods
xchg
mov
icebp
pop
dec
cmp
fiaddl
xchg
lcall
in
cmpsl
cmp
dec
dec
jp
leave
loop
push
addr16
int
mov
mov
xchg
xlat
das
jecxz
cmp
lds
mov
cwtl
into
insb
repnz
push
jp
jecxz
aaa
mov
inc
pop
out
leave
or
popf
movntq
stos
xchg
cld
push
inc
cmp
jecxz
aam
jg
or
int3
xor
mov
or
bound
mov
adc
ret
lods
loopne
div
pop
xchg
add
cmp
jg
pop
scas
js
push
es
mov
jns
test
js
cmp
add
fstl
in
leave
xchg
cmpsb
mov
sub
bnd
xchg
clc
nop
xchg
jb
adc
add
push
out
xor
dec
sub
sub
jecxz
xlat
mov
push
test
pushf
popf
adc
push
fisubl
js
cmpsl
mov
xchg
loope,pn
imul
cmp
sbb
adc
js
or
push
adc
adc
adc
pop
add
xor
mov
cmc
dec
add
ja
cmc
es
jle
mov
and
sbb
push
mov
mov
mov
mov
stc
cs
sub
ficompl
xchg
pop
lds
mov
mov
bound
fsubrs
xlat
nop
imulb
arpl
std
xchg
cld
mov
mov
xchg
pop
ret
enter
push
sub
and
dec
ss
sbb
std
adc
ss
mov
sub
jnp
sbb
add
fisubs
daa
aas
outsb
scas
gs
les
xlat
loope
sub
add
sbb
insl
mov
jg
cmp
clc
clc
sti
test
cwtl
mov
pop
test
pop
sub
add
jo
nop
rcrb
testb
in
ss
aam
push
lahf
outsb
adc
pop
lods
sub
inc
sub
mov
lcall
jns
lock
mov
ret
jae
fwait
aaa
dec
mov
mov
dec
mov
mov
sbb
sbb
mov
cmp
or
loop
or
mov
mov
push
lds
push
jl
jbe
sbb
rcll
xchg
imul
adc
mov
clc
hlt
push
daa
xor
gs
jbe
insb
sub
out
aaa
in
mov
ja
lea
push
add
push
push
xor
sub
sub
daa
aaa
fnstenv
push
hlt
outsb
xchg
test
pop
sarb
mov
xchg
leave
cmp
and
mov
aas
test
push
cmpsl
mov
aaa
movsl
int
movsl
addr16
or
xchg
int
adc
loope
movsb
pop
test
dec
js
xlat
jecxz
add
aad
out
sbb
fisubs
or
gs
push
inc
js
mov
ss
nop
cmpsb
cli
arpl
das
jae
insl
into
ljmp
jo
ljmp
neg
fbstp
push
aam
dec
mov
ja
shll
jecxz
je
fcmovu
push
add
call
in
mov
jg
adc
xorb
mov
ja
rcll
pop
mov
test
jg
bound
lret
test
icebp
ja
shl
js
dec
gs
dec
mov
and
xchg
ret
mov
jl
inc
jne
shlb
in
into
sub
addps
push
pop
fldl
test
dec
cwtl
or
imulb
mov
push
sub
popa
jno
inc
ficoms
lods
cmp
ds
andb
push
gs
pop
push
mov
std
pop
mov
arpl
and
mov
jno
add
ja
mov
dec
hlt
out
xor
push
jae
in
enter
xchg
addr16
divl
jg
ljmp
cmp
sbb
push
push
cmp
xor
test
mov
mov
mov
adc
daa
pop
xor
pop
adc
dec
pop
icebp
aas
rclb
inc
ret
push
fs
and
xchg
mov
fisubrl
pop
xchg
sbb
dec
lret
shl
sub
test
pop
or
pop
into
insb
sbb
cmpsl
ja
lcallw
icebp
mov
inc
xchg
sub
or
cmp
cmp
push
inc
sub
inc
call
cmp
scas
int3
dec
or
xchg
shll
mov
imul
push
into
jbe
push
inc
cmc
jb
pop
pop
orl
sbb
pop
add
repnz
es
rorl
int3
jg
mov
test
xor
push
push
push
test
shll
lods
aam
inc
les
push
mov
adc
lahf
cltd
push
in
pop
xchg
cmpsb
aam
mov
insl
adc
xchg
addr16
and
in
pusha
push
addr16
notb
xchg
push
and
test
xor
ja
enter
leave
std
push
jp
jne
dec
sub
cltd
fwait
mov
xor
aaa
cli
fstpt
adc
imul
mov
jg
sub
divb
repz
inc
inc
mov
inc
testl
jecxz
lahf
aad
push
jnp
ret
iret
retw
bnd
in
test
xlat
jne
lods
insb
cli
xlat
imul
insl
xor
push
jmp
sbb
in
jge
in
xchg
and
ret
sub
jl
test
cwtl
push
sbb
cmp
fldcw
ffree
testl
mov
jbe
ljmp
mov
rcrl
hlt
insl
pusha
insl
jg
inc
rclb
fmull
dec
mov
pusha
js
fldt
jno
jns
pop
cs
fdivs
push
pop
outsl
cmp
jae
mov
inc
jbe
mov
addr16
adc
lea
repz
mov
test
arpl
imul
and
mov
dec
sahf
xchg
mov
inc
mov
daa
mov
mov
rcrl
mov
ds
into
pop
addr16
cmpsl
mov
xlat
mov
jae
rclb
test
mov
cld
imul
pop
cmp
xchg
imul
and
push
js
movntps
sahf
sub
scas
in
lock
mov
cli
mov
pop
and
loope
jne
dec
add
jae
pop
in
mov
pop
cmp
push
jge
out
dec
cwtl
movsl
clc
mov
mov
xor
lods
fwait
movsb
scas
and
mov
dec
daa
adc
out
iret
sarb
imul
inc
gs
cld
dec
jecxz
push
mov
cld
xchg
sahf
pop
and
xor
dec
cld
fldt
sbb
push
jae
xchg
xor
loope
movsl
sbb
cld
push
inc
loopne
clc
test
ljmp
int
dec
sbb
testb
mov
pop
cmp
pop
jbe
sti
mov
mov
ds
fldenv
clc
movsl
in
mov
mov
lods
ja
aad
stc
sbb
mov
iret
movsl
jl
push
jno
mov
iret
jae
sub
loope
repnz
adc
addr16
push
popa
fs
fisttpll
inc
cwtl
lock
pop
scas
test
mov
mov
test
sti
leave
testl
pop
addr16
cmp
xchg
pop
xor
push
aaa
std
xchg
leave
ja
xor
add
push
push
push
xchg
mov
lea
sar
pop
pop
and
xchg
rcrl
push
cmpsl
jo
sbb
mov
cmp
xor
pop
ja
cmp
popa
mov
loope
insl
sub
imull
mov
popa
hlt
ja
jno
repnz
scas
push
loopne
xchg
test
filds
push
mov
out
ficompl
push
add
daa
mov
sbb
iret
inc
jmp
jg
cmc
mov
shr
sbb
mov
xchg
push
dec
lea
push
cmp
test
notl
cmp
movb
pop
pop
pushf
outsl
dec
cmp
dec
xchg
call
pop
cli
das
aad
or
out
pop
adc
cmc
xchg
loope
mov
adcb
aam
out
push
mov
push
cld
lret
adc
outsl
xchg
orl
xchg
pop
movsb
xor
test
xor
cmc
add
ljmp
loopne
jne
pop
test
mov
cmpb
cmpsl
in
fists
arpl
divl
jecxz
pop
dec
inc
cmc
jmp
add
arpl
divl
cld
cmp
push
and
jmp
enter
inc
push
push
mov
adc
xor
dec
cld
push
push
sarl
cmp
lea
hlt
movsb
sahf
rclb
jne
sub
cmc
incl
mov
mov
xchg
add
insb
pop
cltd
les
test
xchg
inc
or
ret
push
orl
dec
pop
jae
scas
movb
lahf
and
sbb
movzbl
dec
cmp
adc
xlat
into
sbb
push
or
xchg
sub
push
lds
push
push
jnp
ja
out
pop
nop
add
inc
and
mov
mov
stos
clc
jmp
sub
xchg
push
adc
cmc
push
mov
mov
mov
and
leave
or
sti
outsl
push
add
pop
mov
cld
sbb
adc
jle
adc
jnp
pop
rclb
xchg
adc
push
cmp
pop
push
pop
and
mov
mov
test
je
jmp
mov
push
test
jns
mov
jns
stc
and
push
push
sub
lock
addr16
push
push
dec
jb
pop
push
cmp
pop
cmp
imul
hlt
xchg
sub
arpl
ret
out
in
daa
les
cltd
mov
testb
scas
iret
out
mov
clc
dec
jb
int
test
cmp
add
xchg
sub
cmp
add
jnp
popa
addr16
int3
testl
cmp
movsb
mov
or
aad
xor
and
stc
push
pop
rorl
xor
xchg
pop
push
rcrl
xor
stc
ret
out
scas
shlb
ret
lods
jo
add
push
aaa
pop
push
xlat
sub
cld
in
or
cli
pop
addr16
ret
daa
rcrl
in
or
jno
mov
scas
push
push
dec
rclb
or
cmpsb
lds
dec
lcall
sbb
xchg
sub
cld
dec
push
xchg
add
or
fbstp
sbb
dec
scas
dec
add
repz
jbe
adc
xchg
mov
push
cld
xlat
in
fs
pop
stos
test
mov
adc
dec
js
out
lods
mov
push
pop
std
mov
add
sbb
dec
sub
or
pop
inc
and
test
and
sbb
insl
jmp
sub
outsl
lds
aam
leave
leave
clc
sub
jo
jbe
adc
xchg
pop
xor
sbb
not
js
pop
popa
cmp
repz
addr16
sbb
lods
into
dec
jb
sahf
dec
int
pop
dec
in
jb
xchg
pop
lret
or
in
lds
sti
fldln2
test
aaa
and
in
adcb
loopne
inc
push
push
xor
pop
jl
cmp
js
push
xlat
ret
xor
pop
mov
lea
adc
ds
dec
adc
out
loope
mov
in
sti
nop
dec
lahf
push
xchg
cmp
jo
sti
pop
jbe
xchg
add
fstpt
or
outsl
adc
hlt
out
jg
mov
add
add
data16
pop
insb
mov
inc
pop
into
es
inc
cmp
cltd
call
ja
push
shrb
pop
inc
and
aaa
test
stc
mov
cltd
pop
cmp
mov
push
jne
std
imul
mov
cmp
jbe
popf
cwtl
mov
and
and
and
mov
stc
insb
daa
dec
imul
jle
push
call
xor
icebp
mov
and
cli
imulb
jns
adc
negb
or
and
lahf
loop
inc
mov
pop
sbb
pop
cld
aam
fstl
paddb
push
mov
adc
std
into
scas
cli
add
fiadds
cltd
adc
inc
mov
and
fidivs
sar
imul
enter
rorl
mov
ja
push
repnz
jecxz
add
xchg
lea
push
mov
cmp
jge
sbb
and
jl
in
addl
dec
inc
push
into
in
icebp
push
pop
pop
cmp
adc
mov
push
mov
scas
inc
pushl
jb
pop
in
mov
mov
scas
push
in
adc
cltd
es
add
scas
pushf
push
ljmp
ss
add
addr16
pop
in
fistpl
inc
shll
mov
xorl
inc
addb
mov
cmp
pminsw
cmc
test
xor
mov
add
pusha
push
xor
enter
mov
cmp
xchg
call
fs
pop
movsb
xlat
out
ret
mov
insl
and
cmp
daa
pop
das
jae
sbb
mov
sub
les
cmpl
addb
out
jbe
fisubl
insl
adc
mov
mov
daa
sub
dec
ss
ror
xor
inc
js
loopne
sbbb
jmp
adc
insb
scas
pop
xchg
ljmp
jnp
andb
sub
cmp
mov
sub
fdivp
add
sbb
push
push
push
cmp
xor
ret
xchg
push
fsubp
icebp
js
pop
daa
ficompl
inc
rep
lret
lahf
jecxz
add
cmc
pop
fdiv
push
mov
je
imul
or
cmp
sahf
and
in
or
jg
leave
inc
insl
sti
cmp
cltd
cmc
and
aam
adc
jo
jmp
inc
aam
push
pushf
out
clc
sti
jecxz
cmp
jb
js
idiv
pop
fwait
push
cli
daa
into
inc
stc
lret
enter
aaa
rorl
rorl
cli
call
xor
dec
fisttpll
out
pop
dec
pop
mov
and
fwait
out
out
in
xor
sbb
sub
push
adcb
call
inc
pop
fs
incl
ficomps
es
sbb
call
fsubs
pop
sub
adc
clc
hlt
gs
pop
inc
insb
add
cmp
mov
js
add
mov
inc
jns
and
push
ss
mov
push
je
lock
es
mov
daa
cwtl
cltd
sbb
dec
push
iret
pop
push
outsb
outsl
mov
lret
dec
ljmp
pop
xchg
mov
mov
or
hlt
imul
jecxz
mov
scas
hlt
lret
movmskps
test
iret
sub
in
inc
ss
xlat
int3
or
mov
sub
or
sbb
jo
pop
push
gs
adc
cli
stc
loope
pusha
push
mov
cmc
and
jmp
sti
hlt
mov
andb
loopne
xlat
ljmp
pop
mov
call
mov
data16
shrl
aas
mov
sbb
cmp
pop
aad
add
mov
les
in
add
push
and
sbb
push
fcoml
fisttpl
out
jo
nop
mov
mov
int3
les
push
clc
out
insb
sbb
push
testl
dec
divl
out
mov
adc
add
or
push
shr
test
dec
cwtl
mov
push
test
add
clts
in
cmp
testl
ret
jnp
mov
aas
arpl
pop
add
push
fdiv
aaa
test
test
xor
in
imul
shrb
mov
inc
scas
mov
xchg
leave
je
es
out
ficomps
repz
popa
dec
mov
sbb
repnz
sbb
cwtl
ja
mov
in
and
xor
inc
hlt
in
ror
add
imul
test
aas
sbbl
in
notb
lock
xchg
push
repnz
daa
notl
iret
mov
movzbl
push
dec
mov
std
adc
clc
xchg
cli
adc
sub
jbe
clc
aaa
sbb
jmp
adc
xor
cmp
xor
dec
add
pushf
push
testb
testb
xchg
jne
mov
xchg
insb
push
jo
xor
pushl
jo
scas
je
lock
push
xor
jo
add
cltd
hlt
adc
outsl
lock
adc
insb
dec
pop
mov
int
push
es
dec
icebp
add
test
inc
je
push
xor
sub
divl
pop
xchg
jbe
idiv
or
push
call
xor
push
jo
shlb
je
jmp
repz
jns
push
sbb
adc
push
inc
outsl
ljmp
push
shl
pusha
repz
notb
paddw
cmp
lods
insb
or
and
lea
mov
dec
clc
or
cmc
ljmp
std
xor
stos
mov
mov
imul
and
and
bound
dec
test
cmc
movswl
or
int3
jb
mov
xor
xor
pop
pop
int
sti
je
jge
aaa
inc
add
xor
jmp
sub
xor
jb
inc
clc
imul
adc
outsl
mulb
and
push
hlt
mov
ljmp
jbe
js
lock
add
sbb
cmpsl
fiaddl
xor
inc
sub
in
adc
push
xrelease
out
jmp
mov
mov
dec
cmc
sub
adc
mov
xor
test
xor
imul
aad
ds
call
div
stc
insl
adc
mov
sub
or
jmp
fnsave
jo
mov
mov
subb
sti
fimuls
pop
repnz
divb
pusha
pop
push
inc
in
dec
cli
and
adc
or
cmc
or
mov
pop
clc
es
bnd
repnz
mov
mov
push
mov
inc
fadd
cmp
outsl
push
andb
sbb
push
test
movsl
mov
push
jecxz
mov
js
bound
sbb
ret
or
xor
int3
sar
mov
jmp
xchg
adc
dec
add
xchg
pop
daa
sbb
fisubrs
std
cmp
adc
ret
jl
scas
pushf
not
add
mov
sbb
jg
add
testl
cmp
xor
clc
adc
pushf
cwtl
cmp
icebp
aam
aas
add
mov
sub
mov
lret
add
cs
cli
fmuls
stos
insb
jp
and
pop
sbb
not
pop
push
sbb
jae
jns
repz
push
add
push
fwait
xchg
or
lcall
or
cld
mov
call
add
and
adc
nop
das
mov
cltd
stc
cmc
jmp
js
call
bound
jmp
jns
mov
das
lds
imulb
into
pop
pusha
sub
icebp
adcb
andb
cs
xchg
inc
mov
adc
rcll
insb
into
imul
je
fs
clc
jmp
cmp
add
mov
idiv
push
sbb
test
and
inc
xor
and
fmul
imul
out
cmp
out
out
jae
add
or
adc
mov
sti
ja
cmc
fists
stc
adc
push
mull
add
push
adc
jecxz
cmpsb
aaa
testl
js
add
je
jmp
mov
sbb
push
cmpsl
add
dec
aam
repnz
frstor
repz
icebp
add
dec
mov
xlat
hlt
addb
or
adc
ja
push
pusha
icebp
test
es
out
push
xor
xor
push
out
icebp
mov
push
xchg
stos
js
dec
cwtl
jp
bnd
rorb
jo
mov
or
push
pop
into
je
jo
sub
loop
scas
dec
ja
xor
rclb
push
jo
insl
daa
mov
outsb
xlat
adcl
jbe
push
sbb
mov
data16
mov
pop
mov
std
sub
fs
jo
pop
daa
jge
shrl
lret
push
das
ljmp
adc
dec
jmp
aad
push
jo
push
jg
xor
dec
lock
outsl
adcb
mov
adc
mov
mov
stos
rorb
aaa
negl
mov
push
adc
nop
ljmp
push
lret
stos
jp
adcb
cwtl
orl
gs
add
mov
lret
push
jbe
mov
push
push
lods
repz
stos
mov
cmc
jle
lret
sbb
in
aaa
clc
outsb
outsl
iret
dec
pop
fcom
xlat
inc
imul
mov
test
in
adc
repz
ss
cmc
inc
push
or
imul
sahf
dec
aas
ret
fstpt
fcompl
pslld
hlt
shl
stos
lret
imul
mov
jmp
lods
lock
sbb
adc
or
dec
or
or
jl
cmc
jmp
sub
out
stos
or
push
jo
in
les
dec
je
ret
and
hlt
xchg
jns
mov
roll
ss
repnz
adc
jecxz
adc
jnp
insb
dec
adc
sar
aas
jae
repnz
dec
inc
insb
xchg
xor
shlb
mov
or
divb
into
dec
repz
mulb
xchg
xchg
aas
movl
fs
jo
mov
push
addr16
movb
jecxz
repnz
out
pop
mov
mov
lods
jae
cmpsl
lret
jne
mov
in
das
or
jae
lods
inc
inc
ja
push
sub
mov
inc
ja
lods
jae
lcall
pop
cs
sbb
mov
aaa
adcl
nop
xlat
mov
hlt
scas
out
sahf
xchg
xor
divl
mov
sub
cmp
pop
outsl
or
push
adc
stos
cmp
aas
add
testl
or
test
xlat
dec
mov
push
mov
in
daa
push
add
add
icebp
ret
mov
jne
xchg
pop
lea
xor
pop
jmp
call
mov
neg
notl
leave
inc
xor
jo
in
mov
stos
sub
push
loop
clc
insb
dec
hlt
inc
sbb
sahf
add
mov
ss
xchg
dec
addr16
ss
jbe
dec
lret
mov
cmovb
adc
imul
in
cmp
sub
fwait
arpl
sub
adc
dec
add
mov
int3
in
ja
mov
dec
notl
int3
out
cmp
sti
mull
icebp
mov
nop
sub
xor
bound
clc
mov
mov
dec
dec
sub
imul
push
cmc
jp
ss
cmp
out
add
xlat
sar
jbe
pop
notl
xorl
repnz
out
and
or
stos
js
dec
cmp
jns
loop
cmp
scas
repz
lcall
cwtl
ljmp
rol
push
jecxz
data16
jbe
jno
into
aad
xchg
fwait
jo
cmp
mov
shr
orb
nop
adc
jmp
xor
daa
pop
pop
lahf
xor
xchg
jo
inc
daa
fbstp
addr16
lock
sbb
jo
daa
pop
xchg
pop
fs
pop
cs
push
es
mov
decb
push
js
test
adc
insb
mov
pop
out
cmp
insl
aam
shlb
push
in
and
xlat
enter
push
xchg
das
mov
sbb
pop
or
push
mov
pusha
mov
jnp
mov
in
lock
dec
repnz
divl
pop
jbe
cld
in
adc
mov
addb
unpcklps
das
xor
mov
xchg
mov
repz
pop
and
sub
jo
or
imulb
jp
push
xchg
into
dec
pop
xchg
mov
and
sbb
ja
test
xor
jae
push
push
push
cwtl
xchg
div
pop
fsubr
into
jo
mov
cld
aaa
mov
jle
xor
test
lock
sbb
jle
lea
dec
fisubs
out
int
popf
xchg
into
daa
cli
lea
into
add
lahf
fsubrs
pop
jne
daa
pop
pushf
mov
dec
mov
outsl
pop
sbb
jmp
mov
js
jmp
jno
test
jnp
inc
mov
lods
out
inc
sbb
mov
dec
into
pop
mov
cld
mov
mov
mov
mul
daa
pop
popf
cs
push
jae
mov
repz
dec
scas
iret
cmp
push
inc
or
test
and
repz
daa
scas
dec
inc
pop
sub
mul
gs
test
xchg
pop
rcrb
pop
add
int
outsl
je
push
subb
or
inc
in
std
dec
jmp
cmc
lods
aam
jb
ret
test
ja
dec
scas
leave
jne
jns
pop
jl
movsl
mov
and
repz
inc
ja
lock
js
add
cmpsl
mov
scas
arpl
loope
sub
cli
pop
jmp
in
dec
jbe
addr16
fcmovnb
aam
and
out
daa
inc
das
push
mov
dec
in
das
and
inc
cmp
fisubl
cli
out
lret
mov
fldcw
mov
std
es
dec
in
sub
push
incb
cmp
xlat
pop
add
mov
xor
je
icebp
lods
push
cmpsl
scas
aas
cmp
push
mov
popa
mov
xchg
repz
imul
pop
sbbl
sbb
jp
hlt
jnp
pop
pop
lcall
add
pop
popa
pop
sub
addr16
pop
xchg
mov
xor
addb
jne
test
cld
test
cmp
mov
or
lods
and
mov
and
fdivrs
rorb
pop
inc
push
pop
idiv
scas
pop
ja
adc
cmc
inc
push
outsb
rorl
cmpsl
mov
in
icebp
mov
insb
mov
dec
into
inc
and
inc
pop
fbld
pop
lret
data16
shl
rolb
rorb
cli
jp
out
lods
out
es
mov
ja
sbb
adc
inc
add
xchg
cli
popf
mov
pop
sub
dec
mov
aam
push
pusha
inc
and
orb
lret
mov
call
in
lods
iret
mov
in
dec
mov
lret
push
ja
adc
xchg
shlb
clc
stos
jl
subb
mov
int
pop
jo
test
pop
insb
and
and
icebp
cli
in
mov
cmp
push
xor
cld
mov
mov
fmuls
fisttps
mov
popa
in
xchg
dec
fiadds
js
icebp
dec
imul
sub
lods
sbb
lea
cli
outsl
loope
or
sbb
inc
mov
mov
mov
cltd
sub
cmp
test
lock
out
pop
lcall
mov
jbe
shrl
jne
mov
jbe
mov
mov
adc
xlat
paddusw
push
in
js
rclb
push
out
repnz
insb
or
mov
into
subb
or
or
lea
aaa
adc
mov
push
mulb
adc
mov
hlt
data16
daa
inc
dec
insb
dec
ja
push
les
mov
push
xchg
in
inc
fmull
push
jo
aad
push
pop
add
and
push
jb
pop
inc
adc
out
nop
jbe
push
das
cmp
fs
insl
jl
dec
out
sahf
sub
ss
bnd
dec
repz
mov
cmc
sbb
adc
in
mov
scas
mov
or
shl
in
adc
imul
mov
jle
movsb
cmp
jmp
and
pop
outsb
push
scas
repz
or
insb
fisubl
jle
add
add
icebp
aaa
out
and
mov
outsl
out
cwtl
out
adc
icebp
mov
mov
fldenv
mov
testl
notb
lods
ja
test
scas
jne
jb
cld
movsb
dec
cltd
adc
repnz
push
ds
out
arpl
push
aas
xor
push
aad
xor
fbstp
inc
jbe
cmpsl
clc
stos
movsb
sbb
sbb
scas
push
lock
aam
sub
das
insb
mov
pop
xchg
sbb
insb
mov
push
jne
scas
ss
popa
jo
lea
cli
jb
sub
xor
out
cld
nop
inc
or
je
adc
daa
push
sub
xchg
mov
jns
xor
jecxz
push
out
mov
sbb
mov
mov
or
and
jp
aad
jo
cld
and
leave
pop
sub
push
ds
fistpl
pop
fdivrl
into
cs
dec
sub
xor
mov
pop
pop
cmp
jle
daa
lods
shlb
adc
cmp
js
xor
push
jns
mov
add
jmp
jg
xchg
sub
clc
and
iret
mov
sub
sbb
stos
imul
jns
pop
ja
dec
add
mov
jno
mov
jg
and
insl
push
pop
loopne
pop
inc
jg
jnp
sbb
mov
jge
cwtl
imul
jo
push
or
icebp
js
inc
jmp
push
lret
idivl
cld
mov
lcall
roll
xchg
mov
sub
es
mov
push
dec
aas
mov
fadd
popf
xchg
jae
jmp
je
xor
push
aaa
dec
push
push
dec
xchg
in
fwait
ljmp
aaa
push
out
inc
ficoms
sub
repz
insb
sub
cli
ljmp
pop
stos
js
jne
mov
xchg
push
add
xor
push
add
add
shr
pop
cld
out
cmpsl
lret
jnp
mov
stos
sbbb
cmp
jl
push
mov
push
push
mov
shl
add
mov
dec
mov
fstps
imul
inc
and
in
add
push
mov
je
hlt
pop
fs
hlt
or
xchg
mov
push
push
xchg
jp
xchg
add
cld
fs
jo
adc
mul
mov
inc
pop
repnz
testb
in
cmc
lcall
xchg
movsb
fisubl
shrl
mull
lret
jb
mov
testl
cmpsl
rolb
jne
dec
sbb
scas
mov
cwtl
adc
push
popa
xchg
jge
pop
in
xor
sub
aas
cmp
scas
xor
idivl
inc
mov
mov
jb
mov
xor
mov
out
leave
xchg
sbb
mov
in
and
jge
jns
inc
insb
aam
negl
loopne
mov
fadds
jmp
shrb
xorb
xchg
mov
mov
sub
leave
sbbb
or
movl
es
jae
fstl
shrl
sub
div
push
mov
int
jl
add
jo
mov
dec
adcb
adc
jecxz
push
iret
mov
push
xor
clc
enter
les
fcmovnu
ljmp
iret
sub
pop
cwtl
test
aas
pop
int
mov
xor
lret
mov
insl
aam
sub
jp
icebp
push
pusha
cmc
push
jbe
mov
adc
sub
cli
or
pop
jle
repz
js
xor
lods
mov
or
jnp
das
xor
ds
lock
xchg
ljmp
pop
xchg
fs
clc
arpl
nop
jo
xor
add
cmpsl
es
outsl
jbe
xor
push
flds
push
jbe
insl
rorb
negb
jae
cmpsl
jnp
cld
aaa
shrl
cld
clc
sbb
rclb
mov
push
rorb
add
lret
pop
xchg
jbe
not
int
cmp
int
das
adc
loop
daa
push
inc
test
loopne
mov
jle
adc
mov
das
sbb
ret
mov
push
or
arpl
lock
cltd
or
cld
fwait
ss
mov
ja
lods
adc
mov
xchg
test
xlat
mov
popf
mov
insl
outsb
push
cmp
mov
or
xor
pop
bound
int
scas
shrl
mov
shrl
sub
xchg
stos
test
push
mov
push
out
push
sbb
cmp
jae
mov
pop
sbb
movsl
xchg
fistps
in
dec
xrelease
add
push
in
jno
negb
add
ss
vpcmpgtw
dec
jns
aaa
call
jbe
ret
push
mov
aaa
pop
lods
and
jns
adc
int3
mov
fldt
pop
mov
and
shlb
fimuls
mov
iret
sub
mov
sti
das
pop
aam
add
std
push
cld
mov
jecxz
scas
je
dec
adc
nop
pop
les
push
lds
and
xor
sub
fs
je
js
and
xor
dec
cs
jne
scas
xchg
outsl
jo
test
imul
push
stos
cmp
sub
dec
xchg
or
sbb
das
or
pop
cld
cwtl
jno
lock
cmpsb
push
jne
cmc
sub
lahf
add
fistps
mov
lods
xchg
sbb
xchg
test
into
int3
out
ret
push
jbe
imul
jle,pn
cmpsb
test
into
jecxz
je
pop
lahf
inc
cmp
xchg
scas
add
hlt
clc
mov
mov
xor
lea
mov
sbb
xor
out
repnz
sbbb
aaa
es
lock
test
test
push
div
sbbl
add
imul
repz
das
xor
cmp
jecxz
dec
ja
adc
bound
mov
popf
jns
aad
outsl
cwtl
dec
cmpsl
inc
dec
mov
ja
push
shl
inc
out
jbe
and
movlps
sub
fsubl
insl
push
ja
push
loopne
dec
mov
xor
sbb
lea
jecxz
mov
mov
xorl
cmp
push
scas
inc
add
and
addr16
iret
ljmp
jne
pop
push
cwtl
add
inc
mov
out
cmp
stos
xchg
xor
andb
je
mov
push
push
shlb
xor
push
or
icebp
shlb
pop
aaa
push
repz
adc
clc
std
cmc
loopne
adc
dec
jne
push
idiv
movsl
insb
push
outsl
mov
xchg
xor
aaa
mov
enter
mov
into
cld
cmp
sub
addr16
movsb
mov
jp
ds
testl
or
lods
mov
push
push
push
rolb
inc
push
mov
mov
outsb
nop
popf
ja
jno
mov
mov
arpl
out
mov
xchg
jns
scas
xchg
sub
xchg
mov
jmp
mov
mov
push
or
ret
out
lret
push
cmpsl
clc
hlt
vmwrite
jo
test
mov
xor
jmp
inc
xor
cmpsb
sahf
push
pcmpgtb
test
and
push
add
call
sub
call
pop
cmp
xchg
iret
lock
dec
repz
and
xchg
aaa
adcl
sbb
xor
lret
idivl
mov
adc
divl
inc
inc
pop
and
xlat
cmpsl
ss
incl
adc
and
call
aaa
inc
test
inc
fidivs
xor
pop
sti
cmpl
adc
xor
add
icebp
sbb
adc
sub
movsb
dec
imul
insb
adc
cli
mov
mov
sub
xchg
add
cmp
push
xor
shrb
test
cmc
test
mov
aaa
scas
fidivrs
inc
flds
jle
loop
push
pop
cmpsl
inc
cli
mov
sbb
or
mov
or
adcb
mov
in
and
inc
jl
jae
cltd
sbb
idivl
ds
fcomps
pop
mov
jnp
push
lock
push
aaa
pop
pop
adc
xlat
jnp
pop
sub
shlb
inc
jmp
mov
cld
test
outsl
icebp
outsl
in
pop
add
push
popf
popf
popf
add
mov
cld
push
mov
aam
dec
cmp
xlat
je
imul
arpl
fiaddl
fs
lahf
sub
mov
fidivl
fmuls
mov
sub
ja
xchg
and
pop
cmpsl
movl
adc
mov
xor
ljmp
cmpsl
xlat
sub
arpl
hlt
or
movsl
in
mov
clc
cmp
idiv
dec
pushl
fistl
arpl
and
mov
pop
pop
sbbb
pop
pushl
clc
jno
sbb
mov
repnz
rorb
in
xchg
or
xor
inc
cmc
cld
mov
or
lods
sbb
cmp
sar
daa
enter
adc
repnz
cli
ds
push
loopne
pop
push
std
xor
daa
fisttps
mov
aaa
cmpsl
and
add
mov
pop
mov
cmp
push
jl
cmp
push
push
fwait
jnp
jmp
sti
xor
enter
xor
dec
push
mov
mov
addr16
mov
fwait
mov
lods
sbb
lods
lods
jns
and
movsb
hlt
push
test
je
mov
push
jnp
sbb
aaa
cld
pop
cmp
sbb
bound
stos
das
cmpsb
cmp
test
or
ret
mov
or
pop
call
icebp
aad
scas
xchg
sub
cmp
xchg
cmp
mov
jmp
mov
repnz
xchg
cs
les
addb
incl
add
faddl
scas
into
inc
jg
push
pop
pop
xor
mull
mov
or
sbb
loop
dec
test
sub
repnz
xchg
icebp
daa
sbb
and
retw
je
std
jbe
push
and
sub
mov
outsl
fistpl
nop
ljmp
add
cmp
daa
repz
push
lods
dec
adc
scas
inc
push
sub
insb
scas
pop
sub
sub
sub
jae
push
test
mov
aaa
dec
cld
fistpll
andl
hlt
pop
sub
mov
push
fnsave
jae
mov
stos
xchg
lea
push
fcmovu
sub
lret
ja
dec
popa
je
mov
test
enter
aad
cmpsl
mov
shlb
or
mov
jns
out
in
push
sub
xchg
sbb
in
repz
outsl
and
dec
loopne
test
xor
mov
fistpl
push
shl
cmp
adc
je
cmpsl
mov
clc
mov
or
notb
push
ja
fcoml
ficoml
cwtl
outsl
add
repnz
ja
imul
xor
mov
push
dec
daa
push
ds
dec
mov
add
cmp
dec
js
push
add
lss
stos
fcomp
clc
xor
add
enter
mov
xchg
or
movsb
into
adc
ret
out
data16
leave
fldenv
xchg
push
xchg
cld
push
js
jmp
dec
sbb
mov
pop
xor
and
test
xchg
push
aam
xchg
mov
xlat
hlt
loop
mov
out
jbe
xor
or
dec
jmp
sbb
cs
daa
and
or
cmc
pop
pop
inc
nop
adcb
pop
dec
out
add
fadds
stos
out
dec
idiv
movsb
loopne
dec
add
mov
cli
or
pop
cld
lret
cmp
test
mov
inc
int
mov
into
loope
test
and
js
mov
addr16
popa
pop
pop
jle
push
les
cmp
sub
cld
lret
and
repz
and
jecxz
shlb
aad
push
jp
cmp
jp
cmp
out
mov
xchg
jns
sub
stc
jp
shlb
jl
test
das
jnp
mov
mov
mov
nopl
xchg
mov
notl
ret
xchg
dec
movsb
out
pop
mov
push
movsb
xchg
lret
add
dec
ljmp
movsl
mov
fldt
jnp
and
es
adc
adc
mov
ja
push
out
out
jmp
out
jg
gs
inc
shlb
jnp
insb
xlat
cld
scas
std
xchg
cwtl
imul
dec
mov
clc
xchg
into
adcl
lcall
cmp
ficoml
das
mov
add
mov
aaa
hlt
ds
push
fldl
xor
jne
sbb
adc
out
aaa
jb
cmpsl
fisubrl
pop
cmp
icebp
add
jecxz
xchg
daa
pop
push
jmp
repnz
xlat
or
inc
ret
dec
cwtl
inc
icebp
in
mov
cltd
rclb
jno
lock
mov
fdiv
inc
mov
jbe
pushl
lds
cld
inc
inc
mov
inc
xchg
lock
aas
lds
add
mov
inc
sub
sbbb
in
or
mov
jno
add
sbb
xchg
div
sbb
add
mov
and
inc
mov
adc
outsl
pop
fcom
jns
outsl
insb
add
dec
xchg
push
out
test
adcb
xor
outsb
lds
out
roll
call
push
jecxz
cli
test
stc
into
imul
cmpsb
lock
add
jmp
sarl
cmpsb
ds
daa
imull
adc
jae
and
imul
adc
in
mov
imul
adc
ja
pop
adc
cmpsl
or
pop
add
cmp
or
stos
jnp
test
xlat
adc
sbb
jmp
xchg
mov
push
jl
cmp
test
jo
nop
imul
nop
pop
push
push
xchg
xor
mov
push
inc
shrb
lea
lret
fs
aaa
daa
enter
push
movsl
pushf
xor
adc
popf
mov
pop
out
cmpsl
roll
cld
mov
push
and
add
xor
mov
sub
dec
push
in
ja
mov
ret
out
in
push
push
mov
jns
jbe
mov
cmp
imulb
and
inc
testl
dec
push
scas
out
jns
or
push
rorl
loop
mov
mov
mov
push
lock
and
jmp
pop
and
jg
enter
scas
mov
mov
fstpt
push
movsl
fnstenv
push
mov
jae,pn
xor
jp
hlt
pop
ljmp
pmaxub
ret
je
inc
subl
popa
dec
ljmp
mov
cmpsl
test
cli
test
insb
hlt
gs
fistl
sti
fidivl
lea
aam
xlat
xor
dec
adc
imul
js
push
sub
inc
dec
dec
jecxz
push
loope
lods
ja
out
pop
dec
icebp
out
movsb
xchg
push
add
adc
aad
dec
orps
adc
cmc
out
cmpsl
outsb
cmp
cmpsb
lods
and
popf
jl
fiaddl
rol
insb
pop
sbb
pop
jl
xor
sub
mov
mov
mov
cmp
jae
int
add
jns
push
into
out
out
cmp
movsb
or
subl
and
inc
and
jecxz
pop
jo
clc
cltd
pop
pop
test
out
out
repnz
mov
sub
jb
adc
test
loopne
js
outsb
push
les
dec
loop
cld
mov
jl
lock
les
mov
adc
mov
sbb
pop
cmpsb
lods
arpl
mov
cmp
jbe
lock
jnp
jbe
sub
jge
divb
push
imul
lock
ljmp
mov
cmp
out
cmpsl
enter
xchg
mov
clc
inc
out
in
out
jns
mull
addr16
lret
pop
jg
jg
fwait
push
mov
xorb
and
adc
push
notl
cwtl
jg
mov
jnp
sub
add
mov
ja
fldt
mov
aam
hlt
test
mov
dec
cwtl
xor
mov
xchg
pop
fs
push
mov
add
mov
push
movsl
in
sbbl
jo
outsl
hlt
xor
sub
mov
test
aaa
in
push
mov
sub
enter
mov
stos
sub
or
rorb
sbb
xchg
xchg
sub
sub
pop
mov
push
mov
icebp
mov
dec
and
mov
or
or
mov
xlat
jge
push
cmc
adc
or
test
add
push
hlt
ja
xchg
sub
and
mov
cmp
sub
addr16
les
jmp
lods
adc
push
mov
or
rorb
aaa
dec
insb
imul
xchg
arpl
push
jo
or
addl
je
into
mov
jg
cmpsl
iret
shrl
push
and
mov
mov
mov
rcrb
pop
icebp
cs
mov
dec
and
and
push
push
xor
ret
ljmp
mov
xchg
test
mov
mov
hlt
cltd
dec
test
stos
adc
decl
ss
js
clc
push
adcb
cmpsb
mov
sub
mov
jo
jae
test
jg
jle
push
mov
push
cltd
cmp
bound
push
pop
scas
push
pusha
das
into
and
push
xchg
inc
decb
jmp
ja
mov
jbe
dec
mov
xchg
fwait
rcrl
push
por
mov
cmpsl
loop
mov
movsb
mov
loope
or
pop
xor
aaa
mov
shrl
imul
lcall
cmc
xchg
or
mov
push
lret
in
movsb
ret
insb
push
shr
sbb
adc
cmp
cmp
xlat
ret
lret
addl
int
shl
push
rcll
orl
xlat
xchg
inc
push
lods
leave
mov
push
fdivrp
add
cmp
test
out
out
push
movb
jo
mov
notb
in
test
sub
enter
bound
adc
sub
push
out
popa
scas
out
cmpsl
outsb
fisubrs
lcall
js
pop
lods
or
xor
lea
outsb
push
cld
add
jge
cld
repz
int
test
je
and
or
scas
sbb
roll
cmp
mov
mov
insb
lret
xlat
mov
mov
ss
jmp
adc
jbe
lods
xor
andb
incb
rorl
push
adc
add
or
jle
inc
xchg
push
out
fwait
dec
jle
dec
mov
cmp
jg
js
incb
ja
idivl
ja
std
mov
pop
lcall
pusha
ret
dec
mov
out
lods
dec
icebp
insl
cli
mov
addr16
dec
jne
orb
dec
inc
fs
mov
test
cmc
mov
and
mov
push
sbb
xor
loop
jbe
daa
shrb
dec
lahf
insl
pop
add
ficomps
adc
lea
mov
xor
out
stos
cld
loop
sub
xor
xor
notb
jmp
mov
or
and
ss
outsb
lock
xchg
pop
cmpsl
jns
shr
mov
popf
mov
cmp
ret
xlat
push
call
nop
pop
dec
fisttpl
push
inc
mov
add
push
cs
daa
sbb
inc
sub
inc
or
iret
icebp
push
fdivrs
aaa
lret
divl
mov
ja
xor
mov
push
in
adc
push
xchg
cmp
rclb
sbbl
sbb
jge
pop
aam
mov
xchg
loop
jmp
inc
in
mov
xor
shrl
cwtl
int3
cld
mov
test
xchg
lret
clc
out
bound
cli
out
mov
pop
push
cmc
jns
push
lahf
mov
mov
dec
sub
pop
or
arpl
cs
leave
xor
or
jo
out
roll
mov
outsl
test
mov
xchg
xchg
stos
adc
negb
test
push
hlt
adc
jecxz
or
divb
and
shr
sbb
mov
xor
xor
ljmp
xor
ret
and
xchg
cmc
and
mov
fmuls
pop
cmpsl
out
movsb
scas
fstps
pop
ljmp
mov
iret
lods
jmp
push
xchg
divl
inc
and
or
ja
jbe
cmp
sub
xchg
lock
shll
push
icebp
negb
enter
leave
ja
inc
xchg
sub
or
movsb
fstps
xor
sub
inc
sahf
pop
ret
std
jae
out
ret
mov
cmp
inc
and
and
adc
imulb
lods
xor
out
cld
clc
fnstcw
sub
sbb
or
loopne
push
sti
push
lret
insb
loopne
cmpsl
ret
and
or
xchg
push
xchg
dec
test
icebp
adc
insb
cld
pop
mov
test
cmpsl
mov
or
test
xor
cmp
insb
pop
push
adcl
bnd
xor
add
insb
pop
mov
cmp
pop
pop
mov
pop
scas
out
xor
jbe
scas
fistl
cmpl
jle
ds
js
sbb
fistpll
mov
inc
imul
addl
xchg
nop
pusha
mov
sub
mull
dec
inc
pop
hlt
ja
xor
loopne
jge
sbb
jae
test
jbe
insb
dec
adc
in
sbb
addr16
cld
notb
rcrb
xchg
lds
lahf
and
mov
enter
std
incl
pop
lods
into
pop
mov
hlt
xor
dec
mov
sbb
lret
ja
ljmp
loope
fidivs
mov
enter
scas
xorl
sbb
scas
sbb
mov
pop
sti
pop
ja
imul
mov
xor
addb
jl
jne
outsl
mov
adc
cmova
loopne
jmp
popa
cmpsb
rorb
rclb
sbb
stos
cmpsb
test
sbb
cli
mov
adc
or
and
jmp
add
push
fisubl
adc
aam
shlb
insl
lds
incb
stos
hlt
mov
idiv
lret
mov
mov
xorb
jns
pop
jnp
jns
lds
vmwrite
sub
sbb
mov
push
loop
mov
aas
fdivp
fnsave
into
pusha
jl
sub
negb
and
jns
or
mov
shl
jno
test
pop
mov
or
popa
shll
adc
adc
fs
lea
inc
jne
pcmpgtd
icebp
punpckhwd
ljmp
inc
pop
scas
cmc
mov
sub
out
sbb
xor
jbe
insl
cmp
out
jecxz
clc
pop
pop
push
jecxz
mov
or
stos
adc
sbb
xchg
rorb
movsl
push
testl
add
push
call
dec
jle
cmp
dec
loop
mov
insb
jbe
jae
pslld
jo
sub
out
or
aaa
inc
hlt
and
cld
idiv
inc
mov
xlat
test
outsl
add
jl
inc
fbld
cld
bound
push
ljmp
or
jg
aam
orb
pop
xor
popa
push
cmc
std
aas
das
cli
lock
pop
cld
iret
imul
neg
push
jecxz
in
mov
fldcw
pop
xchg
pop
imul
mov
xchg
cld
cwtl
push
lock
fcomps
inc
and
push
inc
mov
or
out
add
enter
aad
outsb
dec
scas
mov
mov
out
sbb
push
test
fwait
push
aaa
adc
add
mov
dec
cld
cmc
sbb
jno
subl
hlt
ds
mov
push
movd
cld
repnz
movsl
jl
push
mov
popa
push
and
sub
mulb
arpl
or
xchg
js
jle
dec
mov
pusha
imul
imul
adc
push
jp
cmpsl
push
adc
loope
test
daa
ss
inc
push
dec
pop
dec
pusha
push
cwtl
imul
xor
shrl
xor
pop
int
sub
add
call
xor
add
push
or
push
notl
mov
out
push
and
or
inc
jb
add
aaa
scas
scas
shlb
dec
ljmp
add
cmp
push
sbb
mov
aaa
daa
rorl
faddl
lods
mov
pop
push
dec
or
mulb
xor
inc
in
inc
jno
push
push
cld
cmp
mov
stos
inc
push
ret
data16
cmp
int3
mov
adc
sbb
das
add
push
ss
out
js
dec
lods
addb
push
and
clc
mov
enter
and
jle
mov
dec
adc
test
push
pop
cmp
pop
into
and
fldt
js
or
or
hlt
adcl
idivl
jmp
mov
sarb
repz
inc
lds
add
cld
fcmovbe
jmp
mov
and
sub
mov
cld
jp
sbb
pop
imul
cld
test
lock
in
or
xor
jp
aaa
adc
lds
into
aaa
idivl
lock
jns
add
or
inc
pop
in
push
inc
inc
in
cmp
cmpsl
push
dec
inc
ljmp
lahf
cmp
dec
sti
pop
push
push
sbb
in
push
aad
and
cmpsl
or
ljmp
stos
or
sub
das
add
xchg
stos
jmp
mov
pushf
cmp
mov
mov
inc
into
cmpsl
cli
add
pop
add
mov
data16
push
lock
add
xchg
mov
les
loopne
subb
lret
mov
xor
cmpsl
in
or
stos
fcmove
jmp
and
sbb
jle
mov
imul
inc
adc
shlb
imul
jmp
sub
mov
mov
sbb
xchg
lods
cld
shrb
mov
addr16
lock
sbb
insb
xor
loope
mov
fdivrs
pop
hlt
add
pop
xor
push
mov
push
mov
lock
inc
scas
adc
sti
push
push
pop
clc
in
daa
jp
aaa
cmpsl
xchg
mov
icebp
mov
aam
and
jnp
movsb
xor
fimull
outsb
cmp
pop
nop
dec
addr16
scas
lahf
in
ss
add
push
sub
dec
out
sub
aam
and
jbe
mov
js
push
adc
repnz
clc
sbb
push
das
push
push
testl
aas
jbe
cmc
push
aad
scas
adc
adc
movsb
rclb
cmp
cld
rcll
xorl
or
inc
lods
rcll
jg
push
cld
lock
cld
dec
lret
cmp
shl
adc
dec
test
loop
rcll
add
sub
push
push
scas
jecxz
push
adc
iret
and
dec
lds
dec
mov
shll
shlb
int
into
add
fisubl
pop
mov
aad
sbb
push
into
pop
adcb
jno
xchg
popa
movsl
arpl
flds
pop
int
addr16
lods
dec
add
jge
push
iret
mov
outsl
push
rolb
fidivrl
pop
cli
push
and
mov
or
outsl
js
mov
outsl
mov
scas
push
and
rol
scas
nop
mov
push
adc
lods
lods
jnp
sbb
mov
xchg
or
imul
or
loop
cwtl
mov
imul
mov
add
inc
add
movsl
rorb
orb
or
movb
scas
iret
in
inc
add
inc
add
lahf
pop
das
pop
xchg
and
add
inc
pushf
into
repz
push
pop
ss
int3
iret
sub
cs
and
pop
testl
int3
loope
mull
push
push
in
inc
je
fnstcw
jge
sub
daa
adc
dec
rcrb
push
movsb
sbb
adc
scas
jbe
lds
pop
test
dec
xchg
ja
pop
sub
in
and
ret
icebp
ficompl
into
or
es
add
mov
inc
cmp
and
lcall
imul
xlat
mov
andnps
xchg
pusha
sbb
push
addr16
je
stc
icebp
and
push
ljmp
jbe
daa
mov
push
jno
mov
lock
loope
data16
mov
ja
dec
lds
clc
mov
cmp
cltd
lds
push
into
test
repz
jns
pop
mov
aad
xor
hlt
adc
mov
push
cmp
into
dec
pop
sub
outsl
sub
dec
mov
mov
mov
jne
ja
jbe
jne
hlt
mov
cmpsb
jb
push
loop
out
popa
mov
jb
inc
or
push
fsubp
ss
mov
ja
pop
lcall
xlat
pop
cmp
pop
mov
mov
loop
lock
out
jbe
pop
je
outsb
loop
mov
loopne
inc
pusha
or
loope
mov
xor
jne
xor
mov
mov
xor
xor
dec
in
jb
pop
mov
aaa
pop
mov
insl
loope
add
and
ret
sub
mov
lcall
aam
sti
mov
mov
std
adc
cld
pop
pop
pop
push
divl
mov
mov
cmc
jmp
push
es
pop
aam
std
lds
scas
inc
mov
dec
pop
xchg
push
dec
arpl
pusha
idiv
push
pop
xchg
add
mov
into
insb
cmp
into
mov
fisttpl
rcll
clc
push
into
daa
dec
or
dec
xchg
cs
cmc
and
hlt
or
xor
pop
cmp
xchg
jne
sub
xchg
ficoms
jnp
cld
push
mov
add
sbb
cmp
rorl
xchg
pop
jbe
js
xor
jo
adc
insb
jbe
adc
push
mov
test
cmp
cld
add
mov
jle
pop
enter
jno
ret
in
insb
jmp
mov
das
add
jo
sub
test
rclb
outsl
pop
loop,pn
or
inc
adc
es
dec
and
inc
mov
inc
sbb
mov
jmp
sub
xchg
xchg
cmp
xor
mov
push
cmp
out
shl
add
xchg
cld
rorl
jae
pop
lret
xor
jno
idiv
jl
mov
ss
jbe
xchg
rclb
xor
dec
repnz
pop
sub
mov
scas
mov
adc
cwtl
in
divl
pusha
cmp
cmpb
decb
jne
scas
into
mov
in
shll
sub
das
jl
jno
xor
addr16
push
mov
cmc
dec
jge
xor
dec
loopne
stos
adc
div
ja
scas
add
lret
movsb
jb
aas
in
pop
add
adc
test
jmp
cld
lret
mov
out
daa
lods
das
jb
jmp
rcll
mov
pusha
out
cld
mov
dec
cs
mov
and
cmpsb
sbb
dec
or
push
aam
ficompl
test
test
xlat
es
lea
popa
cld
push
in
sbbl
pop
repz
adc
xlat
xchg
ret
das
nop
call
or
mov
cmp
les
mov
jbe
mov
js
lock
loope
in
test
jno
js
mov
add
jg
or
add
outsb
lahf
mov
xchg
push
iret
ret
sti
or
jl
mov
add
movsl
movsb
mov
adc
aad
mov
fcmovnbe
push
arpl
jmp
cmpsb
mov
xchg
mov
adc
cwtl
mov
sbb
inc
mov
inc
dec
jae
xor
sbbb
gs
in
lock
push
push
mov
mov
adc
push
sbb
dec
cltd
jne
les
dec
jae
adc
sub
jg
mov
and
mov
test
mov
xchg
int3
push
sbb
and
xchg
es
repnz
cmpsl
mov
repnz
mov
pop
xchg
inc
mov
xchg
daa
xchg
shlb
push
aad
dec
aaa
pop
scas
bswap
mov
js
fistl
xor
shl
push
lods
jmp
insl
sahf
dec
mov
ror
test
out
fstps
pop
xchg
mov
cmp
loope
mov
ss
daa
jae
adcb
in
push
ficompl
frstor
in
cld
rcrl
cmp
jno
mov
mov
in
cld
mov
pop
das
or
movsb
cld
fistpl
mov
add
daa
pop
or
das
mov
shll
inc
push
or
lahf
cltd
pop
btr
ss
adc
or
inc
pop
sbb
lock
pop
xlat
bound
xchg
push
je
shll
xchg
push
mov
testb
es
adc
jo
call
loop
inc
push
fsubs
sbb
xor
mov
ja
push
push
inc
adc
in
and
test
sbb
cmp
jle
xchg
test
dec
sbb
pop
cld
adc
cmp
lods
dec
jl
adc
cmp
rcrl
add
test
pop
add
xor
adc
push
jns
maskmovq
idivl
test
push
jb
adc
in
and
jnp
jns
sub
sbb
dec
cltd
add
or
mov
scas
inc
and
adc
movsb
push
cltd
add
adc
or
mov
add
gs
jno
xor
mov
outsb
jb
adc
pop
mov
xchg
mov
outsl
xchg
incl
mov
clc
lret
mov
mov
notb
adc
push
decl
addr16
mov
in
add
or
lcall
icebp
mov
aad
dec
das
push
push
or
dec
push
mov
jg
jne
xor
clc
cmp
pushf
or
dec
or
xchg
popa
ljmp
xchg
jecxz
js
dec
pushf
icebp
push
rclb
movsb
push
rcll
push
fsts
int
and
outsb
push
lods
xchg
aaa
or
mov
pop
add
push
in
ds
incl
insl
ljmp
push
mov
cmp
call
xchg
add
icebp
cwtl
pop
movsb
jg
lds
push
and
insb
cmp
and
fsubs
in
adc
fiadds
sti
aaa
sbbb
rorl
cmp
rcl
pop
mov
adc
outsb
adc
or
inc
push
idivl
cmp
push
push
push
add
fs
or
jnp
jbe
adc
cmpsl
mov
or
and
and
pop
xchg
mov
addr16
push
ret
negl
in
hlt
xor
or
int3
push
cmp
jp
lods
in
or
cli
int3
aaa
xchg
mov
jl
jae
sub
rolb
or
add
pop
sub
sbb
adc
insb
outsb
dec
lock
fsubrl
sub
jbe
es
hlt
mov
sti
lods
ljmp
scas
xchg
negl
lods
cmp
mov
out
adc
sbb
and
aas
jmp
or
ja
lret
imul
lods
aas
adc
xchg
pop
loope
das
inc
and
add
lods
daa
mov
mov
push
sarb
adc
shlb
jne
stos
aam
or
push
ja
icebp
ljmp
imul
divl
pop
in
sbb
jbe
xor
mov
sbb
imul
sti
aaa
push
sti
fdivrp
jl
scas
test
insb
imul
adc
cmp
mov
das
jle
jmp
test
sub
xchg
mov
rolb
mov
fldcw
add
out
das
std
cmp
xchg
sbb
testl
or
jle
adc
loope
sarb
test
fldcw
cld
mov
ret
insb
insb
jne
xor
pop
xor
inc
cmp
lods
divl
sub
inc
clc
outsb
sub
fisubs
and
test
clc
sbb
int3
mov
sbb
jno
push
push
cmp
in
dec
sbb
mov
push
stos
pushf
adc
aaa
pop
sub
push
pop
jecxz
push
jns
call
or
mov
ljmp
sub
aaa
and
push
dec
aas
push
sbb
into
movsb
dec
fwait
pop
sub
out
in
xlat
adc
cld
outsb
lock
mov
clc
outsl
inc
jnp
ja
in
pmaxsw
in
cmc
add
inc
mov
jne
fmuls
cmc
add
pop
neg
repz
insl
mull
jbe
inc
xchg
cld
movsb
or
adc
lret
push
orl
sub
mov
mov
fistl
das
and
rcrl
sub
push
xchg
cli
jne
bound
push
or
or
jno
xor
or
pop
shl
push
xchg
push
clc
cmc
mov
pop
ds
int
add
add
in
push
mov
imul
xchg
pop
and
mov
ja
adc
daa
jmp
dec
ds
ja
adc
inc
sub
xchg
and
sbb
mov
scas
cmp
mov
mov
inc
mov
clc
jmp
pop
xor
xchg
sbb
cmp
mov
mov
lods
lea
inc
neg
scas
in
je
xchg
arpl
aam
mov
xor
loopne
jp
les
jb
adc
dec
out
cmpsb
or
test
scas
ss
clc
push
out
mov
aam
mov
inc
sub
add
dec
pop
sbb
nop
call
mov
cwtl
pop
mov
in
push
xchg
mov
xor
imul
fs
xor
punpckhwd
fs
cmpsl
jbe
das
imul
lcall
out
test
and
shrb
adc
xchg
repnz
pop
cld
lods
cmpsb
and
inc
lods
movsl
gs
iret
cmpsb
xchg
push
arpl
inc
inc
adcb
cmc
sbb
call
xchg
jne
jge
mov
lahf
mov
cltd
adc
js
test
ja
in
xor
inc
dec
sub
std
cmc
mov
push
cli
cmp
add
push
jge
jp
adc
mov
jns
outsl
xlat
in
and
jno
popa
push
call
inc
xchg
pushl
push
cli
test
daa
adc
pop
mov
lock
xchg
loopne
jl
add
mov
inc
js
xchg
nop
jecxz
pushl
pop
pop
aas
xor
and
int
test
scas
push
sbbl
sbb
popa
test
xor
xchg
mov
outsb
push
icebp
jp
mov
jp
jnp
icebp
push
jp
out
mov
ds
cltd
dec
loopne
out
daa
mov
fldl
scas
dec
jmp
outsl
jecxz
adc
flds
mov
mov
mov
cmp
negl
mov
push
push
and
sbb
cld
icebp
mov
mov
jg
add
cld
jp
popa
jno,pt
sti
xchg
cmp
pusha
pop
mov
inc
xchg
gs
insb
sub
icebp
outsb
sub
dec
ret
repnz
fwait
xchg
ljmp
and
pop
dec
mov
lret
ss
xor
shll
inc
iret
jbe
cld
stos
cmp
xor
add
pop
adc
xor
daa
xor
andb
scas
arpl
xchg
outsl
sarl
inc
sbb
in
scas
scas
testl
in
cmp
idiv
dec
leave
sbb
dec
ja
pop
jns
outsb
push
pop
mov
push
aas
pop
into
push
test
mov
mov
iret
repz
xor
out
jb
inc
arpl
add
outsl
pop
pop
stos
inc
fmull
lahf
pop
cwtl
inc
jg
je
mov
jge
inc
dec
cld
jecxz
inc
repnz
lods
push
jge
mov
fmuls
in
push
lods
lods
scas
xor
pop
xchg
mov
add
divl
dec
test
sbb
in
add
icebp
and
xchg
push
sbb
push
push
aas
jb
sub
cld
rorl
mov
inc
push
fadds
sbb
jl
out
sub
lret
cmp
cmp
pop
adc
mov
in
clc
pop
jbe
and
fadds
push
dec
into
out
mov
inc
mov
mov
cld
push
mov
mov
cmpsb
sbb
inc
sub
push
out
jle
add
leave
clc
pop
fiadds
add
lods
call
ljmp
lods
sbb
lds
or
mov
mov
out
cld
inc
lcall
push
xchg
cli
pop
je
push
aam
lea
add
mov
movsl
je
ja
in
clc
movl
mov
out
clc
hlt
in
repnz
xchg
lcall
movsl
js
repnz
adc
test
repz
test
jge
push
lea
cmc
cmp
daa
or
cld
pusha
and
xor
sub
clc
repnz
mov
xor
pop
dec
xor
dec
jns
rolb
outsl
dec
test
xchg
sub
testb
stos
mov
push
ja
movsb
push
inc
scas
jp
cmp
push
sub
fistl
test
pop
xlat
es
pop
pop
loopne
das
aad
push
fwait
fs
pop
inc
add
test
imul
push
mov
es
clc
lock
or
lds
lret
mov
adc
jae
pop
scas
xor
imul
nop
std
cmp
loop
ja
mov
cmc
hlt
xlat
ja
push
push
mov
pop
or
cmp
sbb
mov
jbe
insb
sub
push
test
repz
lock
dec
sbb
sbbl
mov
lods
cltd
scas
outsb
aaa
adc
xchg
aaa
sbb
and
sbb
adc
gs
jge
xchg
sub
sub
push
insb
jbe
jae
cmpsb
adc
push
mov
out
outsb
inc
push
and
adc
push
popa
dec
fs
push
into
sub
mov
test
mov
and
xchg
ret
nop
push
test
jge
mov
cmp
outsb
jb
adc
and
pop
and
repz
test
mov
incb
cmc
jno
mov
pop
pusha
mov
cmp
cwtl
mov
sub
or
pushf
in
sarl
xlat
dec
lcall
sub
dec
pop
push
sti
mov
in
xchg
in
xlat
dec
jo
jae
jo
and
call
in
dec
xlat
pop
inc
sub
adc
or
out
xor
mov
fs
dec
lods
jp
xchg
rcll
add
lahf
ljmp
rorl
inc
jecxz
xor
jmp
push
mov
mov
jne
and
or
pop
sub
aam
fmuls
mov
jae,pn
jae
fstps
adc
decb
ret
sbb
jl
mov
add
sub
fs
scas
dec
pop
pop
xor
cli
sub
rorl
daa
push
addr16
xchg
hlt
cmpsb
pop
inc
lret
into
flds
cmp
pop
ljmp
popa
shlb
cmp
test
scas
mov
mov
out
and
or
je
js
push
ja
cmp
bound
movsb
test
stos
stc
subb
jbe
add
jo
dec
hlt
ds
mov
inc
add
test
aas
jb
dec
addb
aaa
adc
jp
test
lods
inc
stos
xor
sahf
insl
aaa
icebp
test
out
mov
jl
jae
movl
mov
lock
outsl
test
jae
xor
or
nop
mov
pop
push
xchg
or
lahf
cmp
xchg
andb
xor
push
popa
mov
xchg
sti
call
out
or
scas
xchg
push
mov
loop
das
mov
xor
in
mov
push
cwtl
sti
xchg
sbb
dec
subl
aaa
mov
cmp
sahf
imul
std
pop
daa
hlt
adcl
jae
adc
cltd
mov
adc
pop
pop
repnz
inc
mov
dec
insb
cmpb
sub
clc
addr16
jno
lods
mov
mov
push
sti
mov
xchg
jbe
mov
jmp
out
dec
xlat
mov
pusha
call
repnz
je
sti
rcl
ja
dec
jle
jns
jecxz
cmp
inc
push
cltd
inc
cmp
mov
cs
push
mov
lcall
jle
in
sbb
cmp
mov
idiv
pushf
cli
cli
add
outsl
loopne
push
push
les
ficoml
in
dec
sarl
pop
mov
insb
or
ja
cld
pop
roll
nop
mov
adc
push
or
pop
add
fucom
jmp
cmpsb
sub
popa
xor
insb
mov
data16
or
cld
xor
mov
push
loopne
je
js
push
int
add
nop
mov
push
pusha
icebp
push
fimull
xchg
inc
ljmp
ljmp
in
std
fimuls
aad
stos
rcrl
rcrl
pop
jbe
rcrl
insl
scas
das
dec
add
jp
arpl
pop
sbb
mov
pop
shrl
ds
push
dec
pop
lahf
rclb
aaa
sub
xor
dec
adcb
mov
jecxz
cmp
dec
gs
push
subb
arpl
bound
out
ljmp
mov
repz
lock
dec
scas
adc
xor
pop
sbb
pusha
mov
aam
adc
and
out
daa
mov
std
clc
jl
cld
jg
in
xchg
ret
dec
and
sub
pop
pop
sub
push
or
dec
pop
out
cmp
cli
and
shl
jnp
adc
cs
punpckldq
jnp
mov
xchg
jo
push
pop
std
mov
mov
add
or
push
mov
pop
add
mov
jge
sub
test
std
xchg
inc
les
insb
into
sbbl
js
sub
mov
lahf
adcl
adc
add
inc
adc
xor
inc
sub
push
jp
mov
int
pop
mov
aad
jno
test
cld
pop
scas
pop
add
jg
cmp
or
sub
cmp
mov
add
sub
dec
aaa
and
sbb
jns
jge
hlt
jo
addr16
lock
jae
sub
sbb
addr16
mov
and
jns
outsb
xlat
dec
inc
out
xchg
ljmp
sub
push
enter
push
sbb
ja
rcll
scas
xchg
mov
arpl
in
fisubs
push
mov
rorb
in
ss
aas
imul
and
dec
and
cli
idivb
lock
sub
imul
out
cmp
call
inc
in
xchg
xor
cld
dec
sub
leave
stos
or
into
je
fcomp
mov
bound
lret
ljmp
xlat
rol
sbb
cmpsl
cmp
inc
inc
mov
cmpsb
insl
pop
sahf
popf
jecxz
lods
repnz
or
push
lret
jg
cwtl
mov
cli
adc
outsb
sbb
outsb
pop
in
in
in
sub
repnz
inc
or
rolb
mov
mov
loope
sub
xor
mov
movnti
test
pop
add
fcmove
movsb
psrlq
cmc
jge
js
test
mov
inc
xchg
mov
pop
jb
stos
nop
pushf
lret
rolb
xorb
push
xor
cld
fsubs
pop
mov
arpl
jne
pop
stos
dec
insb
icebp
inc
push
sub
add
adc
mov
insl
je
jp
pop
push
shll
dec
push
jg
sub
xor
fcomps
enter
cli
movsb
lods
mov
ja
and
xchg
mov
xchg
xor
movsl
mov
in
cld
nop
sub
dec
jne
cld
rcll
sbb
inc
ja
and
add
mov
test
ds
xor
inc
test
adc
test
xchg
out
sbb
mov
lods
push
cmp
mov
fldcw
clc
mov
fadds
shlb
lret
dec
daa
push
andb
les
xor
sub
mov
lods
je
lock
data16
push
inc
aam
cmc
hlt
xchg
out
cli
outsl
jb
xchg
stos
cld
jp
test
mov
xchg
push
lea
jle
cmc
cwtl
xlat
loope
pop
cmpsl
jo
jns
sub
mov
lock
jl
sbb
cmpsl
mov
and
xchg
pop
pusha
lret
clc
push
pop
popa
test
xlat
shll
call
xchg
ret
cmc
push
pushf
add
jge
mov
inc
push
cmp
test
outsb
inc
fucom
nop
mov
inc
sti
push
push
mov
int
jmp
clc
push
jmp
xchg
xor
outsl
roll
xchg
sarb
negl
pop
sbb
add
es
clc
lock
movsb
mov
jmp
adc
mov
clc
push
gs
sbb
xorps
stos
stos
fistpl
mov
push
jae
rcll
sbb
pop
mov
mov
nop
and
lahf
aaa
das
lret
sbb
mov
insb
jecxz
xchg
in
xchg
lock
in
insl
outsl
mov
aam
dec
mov
insl
jne
mov
pop
into
cmp
ret
cmp
fs
adc
cld
in
push
iret
ss
jle
dec
and
lods
leave
mov
fs
jle
pop
ret
aaa
adc
push
jo
dec
jae
pushf
xor
aaa
adc
aaa
int3
repnz
jae
test
fbstp
and
test
xchg
addr16
add
pop
mov
aaa
xor
add
cmp
jbe
aaa
fildll
nop
out
fidivl
test
xlat
push
push
pop
mov
xor
push
cld
pop
orl
pop
sub
xor
push
mov
adc
and
test
cmp
xchg
shr
int
pushf
fldt
and
jb
inc
mov
sbbb
adc
clc
adc
sub
lcall
test
mov
ljmp
ja
js
pop
imulb
repz
cld
jno
test
hlt
jbe
jl
or
leave
and
xchg
insl
mov
mov
jl
adc
mov
clc
lret
ds
lods
out
loopne
jno
shl
xchg
loopne
push
sarb
dec
in
jnp
mov
mov
pop
push
movsl
icebp
shll
sbb
loope
or
cld
jb
pop
and
mov
xchg
or
push
sub
jecxz
jmp
test
fdivl
nop
iret
sub
int3
adc
sbb
push
adc
insb
punpckhdq
push
push
jno
push
inc
jns
xor
sti
add
test
xchg
sub
mov
push
popf
ds
les
jns
push
mov
or
mov
mov
jno
dec
pop
ljmp
push
pop
push
loop
fwait
scas
and
mov
imul
gs
add
push
adc
iret
js
jno
and
imul
divl
pop
mov
test
mov
pop
sarb
cwtl
adc
pushf
rcrl
mov
roll
test
jbe
push
mov
jb
imul
hlt
sbb
push
mov
jg
cmp
push
mov
shll
repz
imul
pop
loope
sub
push
jns
mov
popf
stos
js
shlb
push
movsl
cli
mov
mov
mov
push
push
jl
inc
xor
adc
scas
cmc
jo
add
scas
jle
repnz
cmp
pop
int
add
or
xor
mov
sub
or
sarl
sub
clc
ljmp
and
push
push
aaa
jae
adc
ljmp
xchg
test
pushf
push
or
lahf
push
aaa
push
pushf
lds
cltd
inc
jecxz
shl
outsl
dec
push
fnsave
pop
es
and
or
and
dec
test
addr16
xlat
xchg
fs
test
and
add
inc
dec
ljmp
add
mov
test
sub
sbb
add
pop
scas
push
mov
push
lods
xlat
std
mov
call
jmp
movsb
sbbb
inc
nop
out
ja
mov
sub
or
mov
sub
push
cmpsl
pop
dec
pop
into
ss
test
lods
dec
dec
inc
cmp
popa
cmc
insl
cld
pop
mov
xchg
push
addr16
xor
and
fimuls
adc
jle
or
jp
sub
mov
sub
jge
mov
scas
adc
push
movsb
mov
sbbl
and
jo
nop
mov
icebp
add
es
or
daa
aaa
mov
xlat
mov
or
sbb
and
mov
xlat
ror
push
shlb
fs
out
out
inc
out
aaa
adc
or
and
int3
add
lea
jbe
dec
aaa
adc
insb
xchg
push
adcb
push
loopne
adcb
jbe
sbb
jbe
sbb
arpl
add
inc
push
popa
aaa
xorb
mov
xchg
xchg
cmp
jb
push
add
daa
inc
bnd
adc
push
sub
push
jb
mov
add
push
pop
imul
rclb
clc
fnstsw
pop
shr
or
mov
lahf
mov
dec
inc
jbe
jl
fsubr
test
test
out
or
leave
ret
mov
lods
test
push
xchg
inc
or
outsb
nop
sbb
adc
and
mov
jle
insb
jbe
mov
test
out
fisttpl
std
mov
jecxz
pop
push
jp
fiadds
icebp
std
mov
dec
ss
lods
aam
jg
shlb
and
push
sub
movsl
cli
arpl
das
jnp
ss
ljmp
leave
or
push
and
mulb
xchg
cmp
imul
mov
push
push
addr16
out
add
enter
dec
lret
jae
cli
lahf
push
imul
les
in
pop
pop
pusha
mov
or
sti
daa
std
popf
bnd
outsb
shrl
lods
out
js
out
mov
jp
imul
mov
jb
popa
rorb
movsb
pop
imul
push
clc
dec
inc
sbb
push
out
mov
jp
iret
jecxz
dec
scas
cltd
jmp
xchg
xchg
cld
sti
inc
hlt
ljmp
cltd
popf
jno
jle
js
inc
pop
stos
adc
mov
ret
cmpsl
sub
test
inc
jne
daa
xchg
outsb
js
ret
push
push
xor
add
sarl
xchg
xorb
inc
out
fs
aaa
xor
add
pop
imul
xor
jo
jl
xchg
cmp
jo
cmp
xor
mov
cmp
jbe
test
mov
dec
pop
xchg
or
jne
mov
jg
adcl
inc
stos
jb
push
addb
addr16
xor
mov
adc
cwtl
mov
sar
jg
and
adc
adc
xchg
std
inc
and
mov
xor
adc
xchg
nop
orb
repnz
lds
dec
inc
mov
aad
sbb
test
cmp
or
jb
shrb
push
pop
mov
sub
clc
adcl
insl
mov
popf
jecxz
ss
mov
pop
xchg
add
cmc
mov
sub
push
ja
insb
xchg
cld
xchg
stos
fcomps
push
jno
push
es
mov
ret
addr16
mov
jae
sub
mov
mov
sub
test
lcall
fildll
push
adc
dec
into
int
or
cmp
push
lds
and
shlb
repz
pop
out
lds
pop
movb
out
jbe
test
push
movsb
mov
inc
adc
or
fsub
push
fdiv
in
jae
inc
inc
ret
ret
adc
cmpsl
bound
subb
mov
inc
cld
adc
mov
add
push
xor
lret
mov
cmp
bound
leave
fimuls
xchg
xor
int
movsb
mov
add
mov
data16
movups
in
jns,pn
mov
lret
jg
enter
mov
inc
xor
push
sar
jo
cmp
sub
into
mov
stos
pop
add
and
mov
inc
sti
xchg
or
lea
out
les
cli
xorl
or
aaa
push
jl
cld
ja
cli
push
lock
aaa
jns
pop
lcall
adc
cli
out
ja
mov
mov
cli
cld
je
jo
mov
rolb
cmp
mov
push
addl
aam
mov
sbb
pop
pop
les
cwtl
loop
jecxz
ss
loopne
sbb
cmpsb
mov
fyl2xp1
cli
pop
loopne
out
or
sar
lret
jne
lods
mull
dec
daa
mov
aam
and
mov
es
sub
mov
mov
lock
sahf
sbb
ds
dec
xchg
jge
scas
jbe
scas
dec
jne
cld
dec
test
sub
in
push
push
mov
outsb
lret
cmpsb
int3
inc
stc
adc
shl
mov
pop
adc
in
inc
shll
mov
call
aam
mov
daa
dec
jge
adc
add
or
jno
pop
mov
out
loopne
hlt
push
clc
mov
orb
jns
push
pop
mov
ret
xor
fmull
data16
mov
adc
sar
inc
inc
cmpsl
shlb
pop
out
inc
sub
push
mov
sbb
dec
add
insb
repz
jnp
xchg
dec
adc
sub
dec
jnp
dec
std
and
mov
das
hlt
orl
icebp
mov
outsb
mov
sti
xchg
movsb
loop
test
call
sub
insb
or
jmp
sbb
inc
cmp
shr
nop/reserved
imul
cmp
into
or
lock
hlt
daa
mov
jmp
ret
inc
jns
sub
mov
cmp
sbb
xor
js
pop
test
xchg
mov
loope
int
ret
sahf
adc
out
xchg
xor
push
and
and
pop
lods
cltd
jne
inc
out
test
dec
or
xchg
das
sub
test
mov
jbe
addr16
les
push
cld
in
add
cmp
scas
lods
daa
push
xchg
addr16
mov
xchg
or
lds
mov
shll
push
pop
fildl
xor
cld
mov
pop
adc
pop
sbb
outsb
cmpsb
and
das
imul
sbbb
mov
cmp
int
jmp
add
adc
fadd
adcl
cmovnp
xchg
push
add
push
stc
lock
sti
aas
adc
dec
mov
test
ss
and
scas
xchg
mov
pop
icebp
int
or
add
ficompl
cmp
mov
je
mov
shrl
jmp
jne
dec
ret
inc
mov
ljmp
xchg
mov
lret
inc
pop
fwait
xor
div
pop
je
jecxz
outsl
test
push
adcb
mov
jnp
jo
lea
mov
jnp
inc
repz
pop
enter
into
jne
adc
mov
shrb
aaa
iret
adc
int3
xchg
stos
jae
lahf
jmp
call
mov
adc
jbe
xchg
out
clc
mov
test
push
pop
inc
push
aad
clc
movsb
sbb
aaa
bound
test
xchg
stos
or
jno
clc
in
cmp
push
sub
jo
dec
sbb
pop
dec
rcrl
fisubrs
daa
mov
pop
sbb
push
outsl
ja
std
scas
out
push
lods
pop
mov
imull
outsb
add
scas
fnstenv
pop
jp
add
push
hlt
cmpsb
sahf
fadds
lock
adc
add
outsb
rcrl
push
jbe
imulb
test
push
push
icebp
mov
pop
pop
in
push
es
dec
cmp
cld
scas
xchg
sub
push
mov
pusha
idivl
dec
adc
dec
pop
adc
push
mov
fldt
adc
cmp
jecxz
or
jnp
mov
out
in
fnstsw
cltd
cli
loope
adc
and
mov
pop
testl
mov
xchg
cmp
mov
sub
mov
ss
push
adc
out
pop
pushf
or
out
pop
pusha
in
stos
js
jbe
add
enter
push
mov
repz
pop
xorb
push
lods
push
pop
lock
mulb
mov
daa
xchg
pop
xor
mov
mov
lds
je
xchg
mov
cmp
rolb
or
ss
popl
cmp
dec
lcall
dec
xor
cmp
mov
mov
lods
xlat
in
mov
jmp
sub
js
or
sbb
loopne
mov
cmpsb
mov
and
push
and
divb
aam
or
mov
lret
int
mull
pop
vdivps
and
or
mov
sbb
movsl
ss
push
push
addb
fnstenv
push
fnstenv
into
mov
scas
cmc
std
jp
push
out
xchg
daa
ss
dec
inc
out
xor
popf
jae
test
out
jae
je
mov
xchg
in
sub
cmp
jo
and
xchg
cltd
push
test
xor
push
clc
jbe
pop
pop
jmp
push
adc
inc
mov
loop
lock
divps
gs
sbb
jbe
rolb
pop
int3
cmc
push
leave
cmp
xorb
mov
mov
sar
fcoml
pop
xor
clc
or
adc
inc
addr16
and
and
dec
mov
inc
cmp
loopne
sub
jmp
xchg
fstps
pop
call
cs
lock
pop
insb
xor
cmp
cwtl
mov
inc
lcall
insb
push
jb
negl
push
and
clc
cmp
sub
jl
mov
jbe
push
outsl
lock
mov
lret
cmpsl
pop
add
loopne
dec
test
call
cmp
mov
xchg
ds
lock
es
aaa
loop
inc
daa
sbb
sti
jno
mov
push
pop
nop
fsubrl
jae
outsb
gs
daa
mov
imul
call
pop
lea
pop
and
loopne
adc
add
cmc
xchg
inc
daa
or
xor
jmp
ret
sti
pop
repnz
lea
hlt
push
jmp
daa
push
pop
mov
dec
sbb
enter
sti
jbe
addb
dec
cmp
xor
call
pop
sbb
adc
dec
fisubrs
or
cmp
mov
mov
mov
dec
add
jb
push
sarl
in
cmpsb
jl
mov
lret
lea
jp
repnz
dec
les
mov
or
dec
cli
mov
push
cld
push
scas
lock
cmpb
push
mov
in
dec
cmp
js
xchg
shlb
push
std
cmp
jp
adc
testl
mov
adc
push
cmp
stos
outsl
jg
jo
cld
lock
flds
dec
add
xor
dec
jne
idivl
addr16
lcall
sbb
pop
xor
pusha
hlt
sbb
icebp
sbb
cltd
cwtl
sbb
sarl
lock
stos
out
idivl
xchg
jae
mov
and
push
jl
adc
jae
cmp
mov
pop
cmpsl
inc
cltd
push
push
insb
bound
mov
sbb
cld
and
sbb
and
test
cmp
pop
out
jo
pop
mov
sti
inc
xor
sub
xchg
jecxz
mov
sbb
into
lea
in
icebp
pop
lods
dec
data16
out
call
shll
jbe
xchg
andl
js
dec
fsts
mov
adc
mov
mov
and
dec
cld
xor
out
mov
cli
jne
pop
es
imul
test
mov
xor
cmc
daa
in
sbb
jmp
daa
mov
inc
mov
loop
in
sub
dec
daa
pop
subb
shll
mov
loope
outsb
jne
add
mov
in
loopne
mov
xchg
add
inc
jnp
movsl
push
rorl
inc
xor
sbb
clc
fwait
cmpsb
fucomi
roll
pop
sbb
adc
test
or
push
push
out
dec
jecxz
imul
hlt
add
ffreep
mov
mov
inc
rclb
sub
mov
inc
xchg
nop
clc
pop
aam
dec
jns
pop
and
loop
push
push
fmuls
push
push
or
jecxz
adc
sbb
loop
rcl
jp
or
cld
pop
pop
std
test
or
adc
sbb
fldenv
andb
js
jmp
push
adc
cmp
lock
aad
add
sub
jecxz
jbe
sbb
mov
scas
js
jp
jb
sbb
jae
clc
push
sti
repnz
std
jae
test
push
imul
xlat
imul
rorl
add
inc
mov
add
aam
pusha
into
inc
stos
sub
loope
sbb
jg
loopne
aam
lea
outsl
dec
fdiv
add
jl
loopne
and
adc
clc
sub
add
add
inc
in
jne
sub
adc
push
push
bound
out
fstps
cmp
sbb
cmp
mov
sbb
mov
sub
inc
xchg
stos
cld
and
dec
lock
clc
aas
and
sub
outsl
dec
jb
push
push
call
jp,pn
mov
lcall
ja
xchg
rcrl
je
mov
lods
or
sub
andl
push
push
cs
mov
inc
jo
xor
adc
jl
sbb
out
fildl
xor
jne
fwait
sbb
jo
or
into
mov
shrl
in
adc
push
push
imul
inc
ja
push
stos
aaa
es
sbb
sbb
push
jmp
repz
mov
push
adc
insb
push
icebp
mov
add
xchg
ds
ljmp
push
sub
out
push
into
push
jb
insl
andb
insb
jg
xchg
test
push
insb
xchg
push
jno
aam
lret
scas
div
out
xchg
sbb
in
neg
notl
jae
outsl
cs
or
imul
lods
not
pop
cld
adc
pop
pop
cmpsl
scas
jo
xchg
testl
ljmp
cmp
lret
aad
or
ss
cwtl
sub
mov
mov
xchg
out
push
notb
enter
inc
add
movsl
rclb
js
outsl
sub
test
jne
mov
rclb
out
adc
insl
jne
inc
add
xchg
sti
movsb
std
cmpsl
cmpsb
sub
cli
out
xchg
jnp
cmpsl
pop
lock
push
insl
idiv
push
add
or
cmpb
mov
sub
adc
mov
lods
idivb
icebp
mov
sub
in
hlt
jle
mov
add
mov
sub
imull
adc
add
mov
adc
stos
cmc
jg
je
iret
testl
jae
out
inc
push
sub
adcb
xor
push
add
jno
mov
sub
js
imul
outsl
push
adc
outsb
mov
leave
sub
cltd
xchg
sbb
jb
or
lea
cmp
xchg
das
fwait
out
pushf
xchg
repz
es
in
ret
xchg
out
mov
cmc
imul
sub
jbe
sti
adc
jo
int3
js
sub
adc
aaa
push
jl
and
dec
lea
pop
push
cmp
jge
jb
clc
pop
sbb
cmp
jbe
inc
cli
rclb
mov
jne
xor
adc
xorb
jne
push
or
add
push
cmc
test
sbbb
sub
lea
add
sbb
leave
iret
push
and
and
pop
inc
pop
sbb
push
ljmp
or
inc
std
adc
cwtl
or
sbb
lods
push
fbld
cs
jb
cwtl
add
push
sbb
inc
jns
popl
push
push
adc
sbb
pop
gs
insb
xor
outsl
push
test
inc
xor
xchg
xlat
out
push
sbb
xchg
mov
xor
pop
mov
xor
jno
fmul
mov
push
loopne
sbb
and
or
imul
push
insb
call
push
sbb
lock
inc
xlat
inc
outsb
sbb
jbe
int3
sti
in
sbb
inc
aad
xor
mov
xor
in
rorb
adc
cli
insl
sbb
movsb
fsts
in
sbb
shll
adc
push
and
jbe
cmpsb
sub
dec
shrb
pop
push
jl
push
pop
je
xor
xchg
stos
outsl
sti
ljmp
aaa
push
inc
stos
sbb
sub
and
stos
sbb
push
dec
push
xor
inc
jmp
lock
adc
xor
push
dec
test
fdivl
adc
iret
xor
cmc
iret
jecxz
add
jns
aam
cltd
push
mov
in
popf
and
mov
leave
dec
push
mov
cli
adc
cmpsl
lods
out
dec
imul
push
jg
pop
push
cmpsb
inc
test
andl
pop
mov
mov
adc
jo
ror
push
xchg
mov
repz
dec
sbb
inc
and
aaa
out
push
repz
clc
nop
and
cmp
loopne
jmp
inc
xchg
adc
push
jne
mov
adc
mov
and
jl
std
push
std
mov
sbb
dec
xlat
psrld
hlt
cwtl
test
pop
mov
negl
add
jg
mov
mov
ljmp
xchg
xor
pop
clc
mov
xchg
jmp
push
outsl
cwtl
test
sub
jo
push
ljmp
je
pop
je
dec
mov
mov
push
cmpsb
in
jo
xor
jbe
out
push
insl
push
sub
mov
jns
adc
jo
sub
push
sub
or
sub
adcb
or
cltd
push
stos
es
and
cltd
mov
xor
ss
xor
fdiv
xlat
mov
pop
xchg
out
adc
subb
outsb
mov
cmpsb
or
nop
ljmp
int3
out
push
or
push
stos
divb
adc
push
jne
push
push
jno
push
jno
push
push
mov
jb
popf
mov
add
sti
inc
jmp
jae
push
jecxz
xor
inc
jbe
insl
repnz
or
and
mov
xchg
mov
xor
in
adc
insb
packssdw
mov
cltd
pop
out
outsl
outsl
cld
push
mov
bound
push
push
add
lock
mov
push
in
pusha
icebp
xor
hlt
jecxz
loop
int
cmp
out
jl
sbb
mov
pop
and
pushf
pop
push
js
xchg
addb
sub
dec
push
cmp
cmpl
out
fistl
xor
cld
bnd
pop
les
orb
int
in
mov
adc
sbb
xor
add
cmc
scas
adc
xchg
negl
dec
pushl
push
pop
lods
xchg
iret
jo
push
clc
push
movsb
sub
pop
flds
test
out
xor
add
ror
cmp
adc
push
push
adc
xor
test
sub
mov
push
mov
jp
subb
xor
orb
repnz
decl
or
jne
movsb
sub
call
xchg
aas
ret
jge
in
push
xchg
xor
dec
mov
jle
test
inc
imul
out
push
out
leave
lods
call
sarl
out
testl
stos
movl
add
cli
mov
xor
lahf
ljmp
jp
adc
cmp
int
andl
mov
jbe
jo
es
sub
mov
repnz
cmpsl
js
daa
push
addr16
rclb
or
xchg
push
adc
mov
dec
jle
mov
loope
out
in
aaa
addb
cmp
dec
xchg
call
leave
hlt
and
sub
out
sbb
loopne
and
xchg
mov
out
mov
sbb
lret
xor
mov
xchg
lods
mov
cltd
filds
lock
aas
in
add
cli
out
fistl
aam
add
inc
int
sub
lret
jbe
mov
mov
into
mov
or
jge
jg
xchg
or
dec
test
mov
dec
sar
pop
movsl
fcoml
loop
pusha
int
outsb
adc
xchg
add
je
adc
push
inc
add
inc
clc
test
in
jae
xorl
mov
push
cmp
inc
dec
dec
je
pop
fs
dec
jo
or
mov
cmc
push
scas
push
std
push
add
div
scas
add
addb
outsb
xchg
xchg
mov
add
jns
xchg
push
arpl
jo
mov
cmp
jmp
leave
rol
shll
jns,pt
xor
jmp
roll
and
sarl
lret
mov
js
icebp
in
pop
dec
in
jbe
movsl
aad
mov
push
sbb
popl
cmp
sbb
sahf
xor
dec
out
jns
push
out
adc
sbb
add
push
movsb
inc
sahf
and
xor
xor
lret
mov
dec
orl
cmp
fistl
mov
andb
jne
cld
addr16
adc
push
mov
dec
or
mov
in
cmp
idiv
xor
or
insb
imulb
outsl
add
popf
adc
fdiv
adc
sbb
movsb
in
sub
add
es
add
out
imul
or
mov
cld
adc
repz
enter
xchg
jae
imul
xor
es
cmpsb
pop
dec
fidivrs
aam
push
enter
lock
or
mov
ret
mov
sbb
xchg
cld
jno
cli
adc
js
jno
aam
push
repz
out
cltd
or
jbe
or
jg
movsb
pop
lock
dec
mov
clc
repnz
xchg
sbb
mov
pop
sarb
jae
mov
ret
sahf
insb
mov
pop
jns
xor
sub
jmp
test
cld
and
xor
push
mov
mov
fldl
outsl
dec
setno
daa
xchg
mov
push
xor
movsl
pop
mov
inc
in
dec
das
divl
mov
fisubrs
xchg
xchg
js
pop
inc
add
popa
mov
ret
jb
add
cmpsb
xor
out
jno
int
sbb
xchg
xchg
cmc
rorl
push
cmp
sub
scas
clc
and
jp
xchg
arpl
xchg
imul
jae
push
fldz
push
cmp
cmpsb
in
mov
out
sub
in
rcll
mov
adc
dec
jecxz
cwtl
into
mov
xlat
fs
sub
loopne
out
pop
movsl
dec
mov
cmc
mov
repnz
outsb
sub
dec
mov
test
pop
arpl
loopne
pop
rolb
pop
pusha
dec
ss
push
pop
cmp
pop
sub
adc
in
lret
out
adc
lret
out
adc
lret
or
insb
test
out
cmc
add
push
out
fisubrs
fistpl
repz
sub
xchg
push
sub
imul
cld
stos
cmpb
mov
and
test
dec
das
imul
push
add
sar
push
out
cmpsl
dec
fmul
scas
mov
dec
aas
mov
scas
push
das
je
movsb
add
pusha
inc
jno
jmp
dec
movsb
cmpb
sbb
xchg
push
imul
in
rclb
movsb
xor
jae
bound
add
dec
add
scas
loopne
adc
dec
arpl
es
dec
imul
push
scas
inc
push
mov
pushw
add
stos
insb
das
out
xor
notb
lds
mov
jg
jmp
mov
dec
std
push
jbe
pop
mov
icebp
adc
jo
jo
jg
aad
jae
jle
inc
je
cltd
jbe
push
mov
movsb
pop
popf
pop
popf
out
out
es
push
outsl
xor
notl
xchg
cmp
jmp
mov
sub
int3
jo
jae
scas
mov
popf
jg
mov
fucomp
push
push
imul
lock
xor
mov
pop
push
nop
sahf
xchg
out
mov
xchg
div
inc
cmp
pop
test
dec
std
pushf
xchg
lret
jo
push
ud2
mov
pop
lds
insl
fwait
adc
ss
out
btr
std
ret
pop
mulb
xchg
xorb
jbe
sub
imul
push
mov
xchg
clc
jbe
je
mov
mov
clc
mov
into
test
cld
mov
cmpsb
int3
imulb
in
ds
lods
mov
insl
movsl
adc
mov
add
mov
push
sbb
cld
hlt
adcl
sbb
int
cmpsl
or
sbb
cmpsl
jno
inc
sbb
adc
lahf
mov
cmp
mov
fists
arpl
mov
push
sti
pusha
aam
dec
and
iret
adcb
cs
sbb
jbe
and
ja
jbe
rcrb
hlt
jb
in
dec
js
cld
mov
movq
add
test
fimull
fsts
dec
imul
cld
pusha
fsubrl
in
mov
sub
or
les
xchg
add
mul
pop
pusha
in
popf
stos
outsl
int3
sbb
add
xchg
test
or
pop
or
test
movb
in
push
repnz
hlt
adc
rcrb
repnz
testl
and
dec
call
sbb
sbb
enter
inc
leave
push
dec
outsl
pusha
dec
loope
pop
test
adc
mov
xlat
in
inc
cld
mov
push
xchg
std
lods
add
adc
pop
mov
js
push
jbe
push
jl
mov
sbb
mov
sub
sbb
inc
jne
push
pop
loop
xor
loop
xor
xor
subb
negl
xor
xchg
mov
push
push
lds
sahf
push
xchg
popa
fstl
add
mov
pushl
adc
push
push
push
imul
add
adc
in
sub
or
fmuls
push
jmp
inc
js
lods
loopne
sbb
add
jge
pop
sub
out
inc
pop
bound
or
testb
test
in
cs
js
push
pop
mov
ja
push
mov
dec
cmp
ss
push
imul
repz
sub
pusha
inc
ljmp
jnp
pop
jge
jg
fsts
pushf
jp
add
aam
dec
push
in
jno
daa
pusha
repnz
scas
cld
mov
clc
mov
or
push
call
lcall
xor
lret
add
daa
clc
add
ja
cld
ret
cltd
movsl
and
testb
lcall
jne
sub
xchg
loop
xchg
movsl
sbb
lock
insl
out
bswap
pushf
xor
lods
sbb
and
lock
jle
int3
aaa
mov
testb
mov
xchg
js
xor
dec
lods
xchg
sub
xorl
jecxz
inc
out
daa
icebp
sar
fsubl
add
test
in
mov
cli
jl
into
push
aad
imul
fsubrs
mov
push
aad
scas
je
in
and
stos
and
imul
mov
cmc
fprem
mov
pop
rol
jno
or
sub
jb
mov
mov
addr16
jbe
or
add
adc
pop
pop
ja
mov
xchg
out
mov
cs
repz
loope
movb
outsl
pushl
cs
insb
fdivs
cld
int3
mov
into
jne
lds
sbb
mov
and
dec
push
scas
enter
icebp
push
adc
aam
jne
loope
dec
mov
push
pop
clc
pop
and
xchg
sbb
jnp
aas
int
or
aad
cld
insb
movsb
daa
pop
mov
jbe
cmpsl
mov
in
gs
xor
add
mov
loop
push
sbb
movsb
imul
mov
lea
mov
packssdw
in
pop
in
xchg
jo
lock
out
test
xor
cmpsb
stos
or
cmp
sbb
mov
mov
pop
ds
add
lahf
inc
add
xlat
out
sbb
cmp
jecxz
das
dec
pop
sbb
adc
mov
and
les
or
dec
mov
pop
push
cs
sbb
mov
aam
dec
sub
xor
enter
jmp
inc
adc
sti
aas
enter
or
add
cmpb
mov
push
nop
cltd
daa
xor
cmp
pop
es
and
insb
out
mov
mov
fstl
jno
cmpsl
leave
clc
mov
imul
shl
daa
dec
aaa
sbb
cmp
mov
push
das
pop
or
push
repz
aaa
shll
push
cmc
cwtl
push
xor
inc
lcall
push
sbb
sbb
movsl
icebp
inc
xchg
outsb
mov
imul
xchg
fdivs
sbb
enter
aaa
clc
out
call
jl
jo
lret
add
jb
out
aaa
add
subb
or
sahf
mov
rclb
mov
mov
fs
pop
sarb
cwtl
adc
addr16
or
push
loope
or
cmp
mov
sub
inc
fcoms
test
jmp
stos
inc
int
push
xor
ja
jp
int
dec
xor
mov
push
pop
push
aas
out
cmp
aas
into
int
loope
mov
out
aas
mov
mov
cld
hlt
jp
cmc
push
mov
and
into
in
lret
lret
push
nop
mov
out
add
inc
sti
adc
xor
lcall
cmp
lea
loope
mov
inc
add
mov
mov
add
push
mov
hlt
aad
fbstp
jns
sub
idivl
push
sbb
dec
pop
jg
jbe
pop
inc
loop
jae
stos
cmpsb
jnp
mov
mov
push
sbb
adc
idivl
jne
jge
push
or
adc
cmpb
xorb
sub
test
push
mov
mov
adcl
mov
movsb
stos
shlb
push
out
jo
ret
mov
xor
sti
sbb
cmp
cmc
adc
std
cltd
fs
les
or
mov
mov
sti
addr16
add
insl
sub
sbb
mov
sub
push
arpl
xchg
adc
sbb
dec
gs
nop
icebp
lcall
testl
adc
out
mov
jg
std
enter
test
add
lock
sub
or
add
stos
push
cli
cs
out
aaa
xor
mov
adc
jo
xor
mov
adc
cld
lret
mov
insb
jns
ficompl
test
mov
insl
xor
jp
jl
hlt
or
js
adc
jo
xor
repnz
pop
mov
adc
sbb
mov
data16
push
sbb
push
lods
pop
mov
pushf
aaa
in
rolb
mov
ss
or
push
adc
dec
es
gs
add
sub
push
mov
daa
das
mov
iret
cs
lods
shlb
xor
outsb
xchg
mov
adc
add
jo
incb
inc
and
test
add
cli
imul
add
hlt
xor
fidivs
sub
cld
testb
cmp
ret
testl
jge
rcrb
push
jle
cld
push
es
sti
push
adcb
dec
jo
fucomi
xchg
jns
je
repz
lret
cmp
jl
in
lods
sub
jbe
sti
jmp
push
sahf
cld
lahf
mov
test
je
mov
adcl
dec
mull
je
fwait
shl
les
jecxz
push
cmp
adc
rcrl
sub
adc
push
add
inc
sub
shll
pushf
mov
jo
out
push
add
lock
ss
dec
or
xlat
std
or
xor
mov
add
cs
mov
leave
mov
fldenv
dec
push
insl
sbb
test
adc
sub
andb
jo
cmc
push
sbb
pop
orl
push
mov
clc
or
push
sbb
jge
adc
jle
push
xor
jg
push
jno
mov
ja
jle
xor
adc
pmaddwd
push
test
xchg
cmp
cwtl
jg
pop
test
sbb
int
add
pop
xlat
loop
xchg
negl
leave
mov
xor
aad
push
test
push
imul
shrl
xor
rorl
and
jge
pop
sub
insl
out
js
pop
fwait
cmp
mov
mov
hlt
jns
test
es
test
jle
scas
call
jo
mov
fistpl
add
sbb
hlt
push
imul
cmp
jo
push
pop
in
add
jecxz
clc
insl
jmp
mov
movb
lods
xor
push
lea
jp
loop
push
fwait
cmp
mov
scas
pop
dec
stos
push
not
test
pop
rorl
stos
clc
and
xchg
insb
std
inc
cld
jae
add
cmp
repnz
cmp
adc
inc
sub
pop
jo
cmc
mov
fistpll
cmp
data16
push
mov
mov
push
hlt
mov
push
sbb
push
fbld
adc
nop
add
call
cwtl
test
nop
int
in
push
push
jo
nop
sbb
outsb
xor
jecxz
inc
rcrb
pop
aaa
repnz
mov
leave
push
clc
es
cmp
imul
push
dec
jl
or
sbb
push
fildl
pop
or
out
lret
cmp
out
insl
sub
sahf
arpl
cltd
or
xchg
out
pop
inc
repnz
cli
cli
mov
sbb
mov
popf
xor
xchg
cld
mov
mov
sub
test
jg
mov
in
mov
inc
mov
cmp
fistl
call
mov
xchg
popf
lcall
and
push
add
std
jns
jmp
test
out
xor
shlb
sti
or
or
mov
sbb
xchg
push
je
adc
clc
xor
cmp
retw
imul
cld
xor
into
adc
cmp
sbb
jl
stos
jns
jp
jl
js
jnp
cs
dec
clc
sub
sbb
leave
pop
xchg
mov
psrlq
aaa
scas
sahf
jbe
push
sbb
and
push
adc
or
xchg
imull
lock
testb
and
data16
pushf
test
adc
sbb
cmp
jo
xchg
mov
idiv
fistl
xor
jo
dec
mov
adc
clc
or
push
jbe
testb
add
shll
push
mov
mov
sbb
add
lock
add
test
xor
jns
cli
js
clc
push
outsl
xorl
clc
daa
ja
or
mov
orb
push
mov
push
xchg
shrb
add
mov
xor
in
test
fimull
xchg
adc
xchg
js
loopne
aad
dec
orl
push
fldcw
push
push
cmpsb
fists
dec
mov
cmp
adc
mov
fdivr
cmpsb
mov
mov
jbe
jl
or
std
js
cltd
adcb
les
je
je
sub
out
inc
mov
call
add
js
jns
push
outsb
adc
and
xor
xchg
dec
mov
inc
popf
add
lea
out
add
scas
sti
in
inc
add
sbb
jae
ss
pushl
cmp
xor
jns
jp
mov
loope
lret
jne
int
inc
sbb
xlat
xchg
cli
mov
idiv
sub
lret
inc
cli
ret
sub
lock
insl
sbb
push
je
loop
andl
jne
add
jno
scas
lds
hlt
adc
nop
ja
inc
cmp
adc
nop
jle
shrl
or
insb
notb
ss
xchg
inc
ss
adc
insb
push
hlt
jl
xor
mov
stos
incl
jbe
adc
insb
rorb
push
cmp
sti
and
enter
pop
pop
dec
mov
mov
test
sti
inc
adc
mov
mull
es
loope
pop
iret
shr
sbb
fistl
fcoms
ss
pop
fstpt
lds
js
mov
mov
push
jl
test
pop
loopne
lods
orl
add
movsb
insb
adc
adc
je
xchg
ja
or
out
pop
jle
and
cmp
adc
push
inc
shlb
xchg
add
jg
cmpb
mov
adc
jo
sub
jbe
incl
dec
mov
lods
pop
movd
mov
out
or
sarb
shl
adc
push
cld
imulb
jbe
std
je
xchg
jbe
dec
stos
sub
mov
jbe
test
mov
faddl
lcall
push
popa
pop
ja
push
in
dec
scas
push
xor
adc
add
and
outsb
testl
and
aaa
adc
lock
hlt
lcall
sub
cmp
mov
mov
fsts
jns
mov
cmpsl
xor
jle
sub
scas
or
jae
jg
push
aas
and
push
test
jl
or
dec
push
out
xchg
xchg
mov
jbe
jne
cs
mov
jp
adc
inc
add
jo
xchg
xor
push
cli
dec
es
in
scas
xchg
mov
fs
lods
mov
mov
leave
ss
push
pop
sub
and
ss
dec
scas
adc
push
adc
push
ja
test
jne
adc
push
sbb
aad
sbb
or
addr16
inc
xor
adc
push
cld
mov
aas
adc
in
divl
insl
idiv
test
fwait
sbbb
or
adc
stos
adc
daa
mov
enter
ja
stc
sbb
cmp
push
sub
mov
cmp
nop
adc
inc
pop
mov
into
dec
mov
sbb
sbb
lock
pop
pusha
add
shl
inc
jl
cmc
test
mov
call
sbb
ljmp
inc
cwtl
aam
mov
or
jp
into
jno
xchg
out
out
adc
clc
and
lods
dec
imul
jecxz
inc
loopne
sti
insl
sbb
jp
inc
and
push
sbb
sub
int
push
clc
dec
push
xchg
push
and
enter
mov
and
jnp
into
xchg
pop
jns
lods
roll
daa
into
out
jle
pop
add
mov
sti
frstor
dec
loopne
cmp
jg
sbb
or
push
imul
xchg
sbb
xor
je
movsl
into
mov
scas
lock
jl
xchg
aad
push
nop
packssdw
cld
aad
shlb
jge
sahf
add
push
or
mov
jl
fidivrs
inc
and
inc
out
xchg
mov
sti
push
movsb
mov
adc
leave
subb
push
jp
push
push
push
orb
jo
imul
cmp
push
js
mov
in
movsl
lock
push
dec
sbb
adc
das
jbe
js
jbe
adc
test
push
jo
jb
dec
test
outsb
scas
add
cld
inc
and
adc
sub
push
es
cltd
sub
mov
push
pusha
jg
js
loopne
out
popa
std
and
fcmovu
mov
out
hlt
mov
sub
leave
mov
xor
enter
and
lock
or
lahf
imul
mov
aaa
pop
sub
or
test
je
xor
mov
mov
das
scas
xlat
call
ja
push
push
xchg
mov
inc
outsl
data16
adc
jnp
cld
into
xchg
shrb
repz
mov
movsb
cmp
movsb
into
sbb
mov
jne
dec
xor
addl
jns
or
sbb
insl
inc
subb
scas
mov
pop
xchg
mov
add
pop
ret
repnz
rclb
dec
int
gs
xor
and
cwtl
stos
daa
sbb
push
rcrl
mov
outsb
ror
lock
pop
daa
fsubrs
sub
pop
cmp
nop
mul
in
mov
inc
dec
stc
add
loop
sarl
xchg
das
popa
dec
mov
and
mov
clc
jne
push
ja
sub
or
lods
pop
into
or
test
sub
out
push
add
mov
xor
icebp
out
xchg
xchg
sbb
sub
xor
push
sbb
jne
xchg
xchg
rcll
incl
jge
call
adc
out
jbe
mov
lea
mov
insb
and
push
push
aad
lret
jle
iret
and
lds
or
pop
add
mov
sbbl
loop
es
out
push
sti
inc
daa
test
dec
js
fsubl
cs
test
mov
xchg
into
cld
leave
scas
inc
pop
adc
test
jne
subl
xor
ds
lcall
mov
arpl
inc
pop
mov
push
dec
fdivr
cmp
xchg
jl
faddl
stos
xchg
push
cmp
aad
xlat
loope
mov
and
divb
pop
ja,pt
dec
mov
rorl
bound
cld
xchg
and
into
dec
stos
push
dec
test
xchg
push
gs
dec
and
dec
cmp
jno
jge
jo
inc
fs
lahf
push
xchg
or
setge
inc
stos
inc
nop
stc
xchg
sbb
sbb
xor
ret
aam
push
cs
movb
xchg
pop
dec
xchg
sbb
jns
sbb
inc
iret
jmp
filds
test
aam
scas
pusha
cld
aam
or
xchg
sbb
arpl
in
loope
test
pop
jnp
daa
int
outsl
mov
cmp
movsl
cwtl
fildll
adc
mov
dec
decb
jb
xor
ficoms
inc
mov
pop
or
cld
dec
dec
repnz
cmp
sbbl
fidivrl
mov
jo
std
mov
js
mov
jp
or
loope
push
rcrb
pop
cld
sub
lahf
mov
ds
cli
js
mov
cld
and
inc
inc
mov
cmpsb
aas
inc
je
dec
mov
inc
cmp
nop
test
adc
aam
xor
jno
add
sub
pop
mov
mov
xor
hlt
sahf
pop
adc
in
jle
xchg
into
jecxz
stos
aas
pop
push
jl
rcrl
adc
sub
idivb
cmp
sbb
lret
in
popa
sbb
mov
and
push
jns
es
test
out
mov
rcr
daa
mov
cld
sub
imulb
cmpsb
insl
jbe
scas
jp
add
cmc
mov
push
icebp
idivb
out
xlat
in
lock
fimuls
call
jbe
mov
jbe
mov
mov
xor
out
jl
adc
test
lcall
dec
in
pop
xor
mov
adc
cmpsl
and
fs
jl
pusha
sbb
push
lcall
cltd
idivb
sub
sbb
jge
shrb
adc
mov
aam
cld
mov
mov
jno
sti
scas
imull
mov
sub
test
cmpsb
dec
pop
scas
mov
inc
mov
into
in
pop
mov
inc
pop
mov
test
pop
and
jmp
xor
add
out
xchg
xor
xlat
cmp
inc
xchg
out
mov
push
add
in
adc
inc
xchg
in
dec
pop
test
les
cmpl
lret
cmp
jae
fiadds
mov
jmp
sbb
push
pop
lcall
and
or
dec
jle
aam
xor
dec
lods
std
push
call
cmpsl
iret
push
test
icebp
or
sub
sub
pusha
iret
cli
scas
mov
popa
scas
lea
and
outsl
andb
cld
leave
inc
icebp
stos
nop
repz
nop
mov
or
sti
pop
add
loopne
aaa
cmp
repnz
push
adcl
jecxz
mov
ja
sub
and
mov
movsb
fisubrl
das
icebp
popa
mov
adcb
inc
add
rcrb
or
insl
mov
nop
into
cmc
mov
loopne
dec
out
mov
dec
xchg
cwtl
sbb
fbstp
dec
sub
repz
lods
xor
sbb
dec
out
jno
loope
lahf
mov
mov
or
insl
nop
lods
dec
mov
fsubrl
lods
pop
rclb
xorl
xor
sub
mov
mov
xorb
mov
inc
ljmp
mov
push
pop
movl
je
movsb
inc
into
repz
cmp
mov
cmp
jmp
mov
jge
inc
shll
sti
xchg
cmpb
xor
dec
and
adc
outsb
adc
mov
mov
pushf
push
sar
lock
adc
into
rcrl
stos
mov
hlt
xchg
lahf
and
dec
js
inc
mov
int
and
add
inc
inc
push
shll
and
add
out
xchg
jne
sbb
pop
xchg
ss
jae
xchg
hlt
in
out
popf
mov
cmp
enter
jle
dec
jl
mov
sub
mov
fwait
and
or
push
test
mov
insl
scas
sub
dec
xchg
mov
sbb
xchg
es
add
je
and
rcll
pusha
shr
mov
add
push
jmp
inc
shl
push
jl
insl
mov
sbb
jp
sti
mov
insb
mov
fbstp
inc
push
mov
xor
mov
xchg
jne
push
sbb
rcrl
shrb
dec
jns
mov
shlb
jb
rcll
fnop
cmp
nop
pop
pop
mov
mov
adc
test
test
cmpsb
inc
pop
hlt
mov
pop
out
jns
scas
insb
ja
pop
dec
lock
iret
sbb
pop
mov
jl
insl
xor
cld
lds
xor
xchg
popa
rcl
and
xor
cmp
mov
push
clc
jne
xor
pop
jbe
inc
ss
pop
inc
test
sbb
xor
aaa
std
push
outsl
divl
add
test
jl
xchg
ret
xchg
mov
and
cld
push
das
sahf
xchg
adc
pop
xlat
in
push
daa
mov
sbb
daa
inc
mov
dec
call
mov
pop
add
shlb
jbe
call
add
push
sbb
xor
xchg
dec
or
testl
jbe
or
testl
aad
mov
rcll
leave
mov
lods
ja
add
jge
int
out
loopne
xchg
int3
or
sarb
loopne
mov
aaa
ss
ss
inc
dec
ss
or
mov
aam
addl
jl
jle
or
xchg
out
push
sarl
insb
cmpsb
mov
mov
jnp
iret
jp
push
xor
insb
jbe
sti
jnp
jl
adc
sbb
jbe
jle
imul
inc
add
push
jg
push
pop
mov
scas
out
decl
out
test
insb
push
loopne
ret
cmc
mov
and
adc
test
adc
adc
clc
sbb
push
cltd
push
lds
sub
push
dec
cmp
xchg
test
adcl
arpl
jl
adc
pop
cli
push
hlt
push
add
sbb
push
mov
repz
dec
cld
fisttpl
dec
test
adc
cld
in
sahf
dec
faddl
xlat
cmp
cs
lds
jnp
push
aas
jp
or
mov
sub
push
aas
std
cwtl
idivl
aam
xchg
and
jo
sub
adc
jne
rorb
xor
adc
mov
push
jno
test
push
push
orb
imul
xchg
xor
jl
lret
jecxz
adc
cmp
or
je
mov
cs
addl
leave
imul
or
sub
mov
cmp
divb
add
sbb
jle
arpl
add
ljmp
bound
cs
push
cmp
add
inc
cmpl
push
maskmovq
sbb
pop
arpl
sub
leave
daa
daa
stos
xchg
xor
sar
adc
pop
das
inc
mov
mov
aaa
aaa
add
push
insl
push
daa
and
push
add
daa
out
insl
push
lret
pop
sub
fcom
push
add
jns
pop
ds
jb
jne
scas
jbe
xchg
jb
jns
sub
jns
cmpsb
sub
mov
jo
mov
daa
mov
movsb
sbb
idivl
or
lock
cmp
loopne
inc
sub
cld
push
push
mov
rcrl
cmpsl
sbb
sbb
lods
sti
mov
enter
jb
sti
sbb
cmp
jmp
sti
mov
sub
adc
mov
fdivl
popa
sub
xchg
out
dec
or
imul
jno
mov
call
sbb
push
push
ja
pusha
stos
ss
adc
xlat
subb
test
aad
fldenv
jl
pop
std
sbb
les
or
adc
adc
cmp
xchg
xchg
jnp
mov
into
in
xchg
lods
lret
push
and
adc
inc
outsl
test
imul
mov
fimull
leave
mov
or
adc
sub
inc
sbb
xchg
add
cltd
mov
mov
jecxz,pn
and
imull
xchg
movsl
mov
xchg
pop
jmp
mov
jmp
nop
rcr
enter
cli
cld
adc
inc
insb
sbb
mov
aad
cwtl
xlat
mov
shrl
sbb
loopne
pop
inc
sahf
aaa
lock
ja
test
push
cmpsb
mov
je
hlt
jno
xor
clc
mov
jmp
in
lock
pop
push
xor
das
jp
push
pushf
rcrl
cli
push
fsincos
jl
incl
push
cld
jne
movsl
push
dec
cltd
jbe
xchg
cmp
mov
dec
adc
fdivrs
mov
jmp
sbb
xor
out
and
out
sarb
adc
mov
dec
jns
es
cld
sub
test
jmp
push
pop
das
inc
std
xchg
insb
dec
js
outsl
in
pop
and
inc
clc
dec
into
mov
je
adc
scas
inc
xchg
and
testb
stc
imul
mov
jb
int
ret
jl
outsl
sbb
push
mov
ret
sbbb
pop
fs
hlt
xchg
xor
jmp
in
push
sbb
outsb
pop
mov
sub
and
dec
or
inc
add
lret
testl
sahf
inc
mov
fs
mov
pop
in
or
cwtl
clc
mov
pcmpeqw
ljmp
shll
push
pushf
sub
adc
mov
jns
mov
sbb
frstor
dec
and
adc
xor
cmpsb
dec
push
push
std
es
sub
push
es
bound
push
jne
lods
mov
and
das
aas
cli
int3
cli
jl
adc
fisttps
ret
sarb
push
ficomps
jle
xchg
mov
repnz
cltd
ret
shrl
sbb
shll
push
ljmp
notl
mov
pop
aas
out
js
cld
ret
sub
pop
into
sub
inc
sub
xchg
sub
es
cli
xchg
inc
clc
lock
in
fcomip
and
adc
jnp
repz
call
and
test
xor
add
out
push
insl
cmpsb
pushf
xchg
or
pop
mov
loope
mov
ret
mov
jg
sti
mov
lock
lea
push
es
sub
add
xor
xchg
jecxz
xchg
inc
dec
mov
arpl
push
mov
lcall
jno
ss
adc
nop
jnp
inc
mov
in
shll
aam
out
adc
jecxz
jb
or
push
addr16
xchg
or
mov
mov
inc
cmc
dec
xchg
clc
adc
movsb
std
sub
cmpsb
mov
fstpl
mov
nop
jbe
push
cmc
incl
sub
cltd
popa
and
cmpsb
mov
pop
add
sub
test
pop
out
mov
lds
push
loopne
iret
inc
pop
mov
adc
sbb
outsl
sub
push
push
or
push
add
add
adc
daa
mov
xchg
push
mov
pop
imul
dec
or
xchg
fldenv
or
insl
mov
decb
push
pop
icebp
sbb
arpl
aam
lock
scas
call
adc
sub
cmpsl
sti
mov
pop
push
ret
push
pop
cmp
mov
and
movsb
pusha
repnz
bound
push
inc
push
icebp
add
out
mov
xlat
or
push
inc
xor
mov
adc
xchg
test
adc
out
in
cmc
dec
cmp
in
daa
mov
js
and
push
jl
dec
adc
cltd
sub
sub
into
xor
jnp
jns
jl
adc
dec
sbb
sbb
xor
xor
push
jp
jo
add
jg
mov
jg
insb
and
leave
xchg
jl
outsl
scas
xchg
inc
xchg
fisubrl
cwtl
aaa
pop
sbb
adc
mov
jbe
mov
xchg
jo
out
sbb
xor
push
outsb
xor
and
clc
repnz
xchg
popf
jns
in
add
jp
das
fcmovb
int
int
xor
ss
mov
and
sbb
out
jmp
mulb
push
pop
outsl
das
pop
jo
lock
jecxz
icebp
cli
bound
stos
jp
mov
fmull
mov
cmp
or
mov
pop
or
jns
jl
lock
rorb
inc
mov
loope
sbb
and
je
push
adc
sbb
push
idivb
sahf
inc
in
repnz
add
enter
inc
xchg
dec
jmp
lds
xchg
es
or
pop
xor
add
jle
or
out
cmc
lretw
ret
inc
mov
xor
mov
mov
cld
inc
jno
dec
fdivl
or
mov
or
sbb
push
pushl
xor
inc
or
xchg
sbb
push
sarl
out
push
icebp
into
and
subb
jmp
add
mov
aas
cmpsl
into
push
xor
cmp
mov
xchg
shll
xchg
out
enter
xchg
test
sub
rcll
xor
daa
mov
sbb
sbb
lods
std
push
sbb
inc
sub
in
pop
stos
pop
xor
test
cmp
mov
cmp
mov
cltd
mov
pop
add
xchg
data16
lcall
imul
cmp
jbe
and
sbb
ss
into
jge
xchg
fsts
push
ret
mov
xchg
dec
cmp
cmp
dec
mov
cmp
mov
inc
ret
jg
inc
jmp
fldenv
add
testb
push
xchg
xchg
pop
cmpsl
sbb
bnd
cld
mov
and
rclb
push
in
arpl
insl
hlt
insb
add
cwtl
std
cmpsb
dec
mov
mov
outsb
mov
jno
and
test
xchg
add
popf
mov
sbb
jg
and
and
sbb
or
xor
rorl
cmc
push
adc
jge
cmp
mov
iret
imul
loopne
add
mov
xor
leave
jae
cmpsl
fdivrl
sbb
shrl
bnd
pop
mov
jne
repnz
jg
fisubrs
sbb
insb
mov
add
ds
je
fucom
jo
add
repnz
dec
add
in
xchg
jmp
mov
js
mov
push
insl
push
xor
roll
adc
and
sbb
ret
nop
imul
or
inc
cld
adc
aam
push
orl
lock
xchg
mov
sub
adc
subl
js
popa
xchg
mov
push
cmpsl
xchg
jle
sbb
int
loopne
imul
push
cmpb
cmpb
test
jb
cmp
popa
mov
jb
adc
xorb
or
fnstcw
xchg
mov
sbb
test
filds
push
add
cmpb
insl
insb
jns
dec
cld
push
inc
and
cmpsl
lock
mov
jns
pop
adc
shl
enter
xlat
pop
sarb
scas
cmpsb
pop
and
lret
das
cmp
roll
out
fdivs
xchg
outsb
fwait
cmp
subb
push
jns
jb
ss
jae
ds
pop
decl
mov
xchg
and
or
xor
adcb
mov
jg
fbstp
scas
in
imull
pop
or
into
jbe
cmc
lods
cmp
push
lods
rcl
dec
dec
orl
mov
clflush
push
mov
sbb
cmp
mov
repnz
mov
arpl
je
lahf
mov
idivl
and
push
sub
pushf
mov
mov
pusha
adc
popf
std
inc
hlt
adc
and
add
clc
negl
sbb
xor
addr16
addb
push
outsb
inc
sub
js
and
xlat
int
fstl
pop
add
inc
xorb
cmp
mov
std
gs
scas
sbb
jge
aas
push
outsb
push
mov
ret
hlt
pop
fisubrl
call
iret
cmp
or
jl
jge
cmpsl
aam
shlb
mov
inc
push
xchg
push
lock
and
cmp
pop
push
das
xor
add
fstpt
rol
pause
lea
cmpsl
aaa
js
out
pop
sbb
push
xor
popa
ror
dec
sub
stos
push
push
popf
das
mov
sarb
cmpsb
sub
pusha
or
inc
mov
cmpsl
je
cmp
xor
pop
xor
push
imul
cmp
mov
int3
jne
xor
les
cmp
dec
pop
add
aaa
and
push
and
pop
pop
daa
dec
push
fistpll
test
xchg
xchg
lock
pop
popf
int
out
inc
mov
test
inc
jo
arpl
inc
dec
xor
jae
repnz
xlat
adc
sbb
cmp
ljmp
inc
sbb
inc
push
lret
icebp
mov
jo
mov
into
cld
cli
add
mov
mov
fnstenv
test
gs
jns
pusha
sub
outsb
push
test
das
xchg
pop
inc
mov
fcoml
ljmp
jbe
mov
jne
test
jae
jne
sbb
iret
jbe
into
pop
mov
mov
adc
mov
push
and
mov
and
je
imull
add
rep
jne
xor
gs
jne
mov
sarb
loopne
test
pushf
fisubl
mov
dec
testb
or
adc
cmc
not
mov
paddb
dec
jp
enter
sbb
cld
inc
sbb
data16
mov
add
jb
jl
rcrb
leave
inc
mov
xorb
dec
add
or
cmp
mov
ljmp
and
mov
xor
setge
push
cmpb
jns
jge
pushf
lods
adc
add
idivl
jge
add
sbb
sbb
jns
xor
mov
ds
fwait
cmp
aam
jp
push
dec
jne
or
push
imul
lods
adc
xor
dec
mov
push
push
jmp
inc
push
lods
xor
lds
cmpsb
sahf
cmpsb
add
adc
or
mov
sub
adc
jg
stos
xchg
lock
aam
cmp
inc
pop
leave
mov
or
out
jmp
and
cli
outsl
insl
lock
iret
inc
xor
aam
lock
jg,pn
push
add
push
das
pop
std
inc
mov
test
or
std
xor
nop
ds
mov
xchg
lahf
mov
jnp
outsb
mulb
jecxz
outsb
add
sti
mov
imul
sti
out
aaa
mov
dec
call
and
mov
jle
jmp
push
or
idivl
ret
inc
jle
mov
push
in
jae
cmp
movsl
dec
je
sbbb
in
jle
out
jbe
jle
outsb
insb
jne
pushl
outsb
mov
mov
jno
adc
mov
mov
loope
mov
aaa
in
xchg
pop
ds
jle
xor
imul
inc
cmp
mov
lcall
add
pop
cmp
cld
shll
and
jle
insl
cmp
fldl
xor
lea
lods
test
test
test
push
sbb
jae
pop
xchg
mov
mov
and
jge
pop
test
jno
dec
jnp
stc
pop
cld
adc
lock
nop
jp
pop
push
and
cmc
iret
rcl
mov
mov
orb
jl
and
jg
mul
jmp
fists
cld
ficomps
adc
sarb
pop
jg
xchg
adc
dec
xchg
dec
push
push
out
sti
dec
out
jne
cld
outsb
sbb
xor
lock
adc
sub
push
sub
jne
push
lock
negb
sbb
sti
movl
jl
push
negl
cmp
jno
repnz
sub
push
pop
dec
sub
jle
xorb
mov
out
mov
xchg
sbb
mov
sahf
adc
sahf
pop
fmulp
xchg
xor
sub
jno
mov
xor
cltd
fmull
xchg
mov
xchg
or
test
jge
aam
or
loop
jb
mov
js
xor
scas
pop
or
lret
sar
sbb
push
xchg
dec
mov
fwait
scas
adc
jo
or
out
mov
and
out
insl
addr16
in
xchg
in
adc
push
xchg
add
push
mov
mov
cs
bound
mov
adc
aam
adc
jl
jno
call
mov
repnz
lahf
sub
mov
push
aas
cmpl
cmp
mov
xchg
sbb
enter
cmpsb
sub
push
mov
jbe
fmuls
repz
adc
push
movsl
add
mov
cmp
dec
sahf
or
ja
add
push
sti
pushf
test
push
stc
fmuls
cmpsb
jb
xchg
adc
sbb
in
sarb
pop
cmp
popf
xor
cmp
insl
mull
cmpsb
sbb
cmp
popf
add
dec
inc
frstor
int
loop
mov
mov
addr16
xchg
hlt
imul
cli
mov
sbb
mov
inc
xchg
jp
pop
pop
lret
cmp
add
rorl
inc
mov
imul
pop
addr16
sub
xor
push
hlt
xor
push
lods
pop
mov
xor
stos
push
aad
neg
repz
pop
pop
and
addr16
clc
sbbb
adc
repnz
mov
addr16
popf
cmpsb
xor
insl
fcomi
mov
mov
push
lods
leave
mov
dec
out
ss
faddp
sarl
or
aaa
pop
movsb
arpl
push
pop
cmc
ss
int
cld
xchg
arpl
inc
adc
xor
xlat
into
pop
dec
mov
add
mov
into
pop
scas
cld
cltd
inc
leave
inc
mov
shll
rclb
dec
nop
and
loope
les
push
sub
insb
push
jg
ja
or
and
or
out
sbb
mov
pcmpeqb
lods
fimuls
cmp
push
test
push
cmp
xor
mov
jo
inc
or
shl
or
and
push
push
xor
into
or
adc
cmp
pop
cmp
test
sbb
in
sub
mov
mov
push
rcrb
das
jecxz
int3
dec
cltd
in
data16
xor
je
sbb
jbe
jp
lods
in
jl
adc
jmp
jp
daa
mov
fadd
xor
pusha
out
outsl
in
dec
dec
outsb
mov
fs
xchg
jg
push
sti
fistl
mov
xor
mov
xchg
jns
and
lock
lods
inc
and
aam
and
cmpb
je
cli
lret
addr16
iret
lock
fstl
cmp
push
add
ja
je
mov
cld
mov
xor
loope
std
mov
xlat
das
les
fsubrp
jge
iret
aaa
push
mov
adc
jo
pop
cmp
sub
out
lods
adc
push
xchg
jns
pop
out
repz
outsl
xchg
cmp
popf
aaa
mov
push
andb
neg
push
mov
adc
into
jb
jnp
or
into
sbb
out
hlt
clc
imul
movsb
lret
pop
and
repz
ljmp
icebp
or
test
jbe
aas
inc
movsb
cld
jns
jl
into
sbb
xchg
aad
push
dec
sbbl
sub
and
jno
xor
clc
xchg
and
ss
movl
fdivs
mov
push
cmc
pop
out
jno,pt
ja
outsl
push
into
cld
fsubrs
and
push
aad
sbb
pop
xlat
xchg
lcall
movsb
arpl
sbb
cmp
dec
into
scas
push
or
out
pop
test
push
add
lods
shrb
jg
xchg
out
or
push
adc
xor
jg
clc
outsb
cld
add
mov
fs
mov
mov
icebp
outsl
out
add
aam
cs
mov
ljmp
cs
out
ljmp
aam
gs
jno
testb
test
das
push
leave
outsl
xchg
jmp
sub
test
fists
mov
or
mov
inc
into
push
int3
dec
fnsave
mov
mov
adc
and
pop
mov
push
ja
adc
jmp
push
repnz
outsb
lret
xchg
sbb
mov
mov
fcmovnbe
stos
sbb
mov
mov
push
arpl
or
fucomp
orb
xor
outsb
into
xor
push
xchg
xchg
and
clc
scas
mov
sub
rclb
jno
mov
js
out
movsl
sbb
inc
push
xor
mov
insl
or
outsl
cld
icebp
andb
or
mov
jbe
push
xchg
xchg
push
adc
notl
fdivrs
divl
jns
ds
fldt
xchg
and
incb
ret
cmpxchg
data16
rcll
cs
outsl
jb
cwtl
mov
pop
jb
sub
ret
xor
jge
mov
sbb
stc
push
and
fnsave
cwtl
xor
aaa
adc
pop
dec
aad
inc
xor
mov
and
sub
fmuls
and
jbe
mov
fistl
repz
add
or
aad
push
ss
ja
jmp
out
adc
mov
rcr
aaa
xchg
test
lds
dec
cwtl
mov
shll
inc
aaa
cmpsb
insb
out
fisubl
loop
aad
shlb
cmp
push
adc
xchg
pop
lds
sti
adc
into
popf
movsl
cmp
sbb
in
or
push
pop
jp
mov
jno
sbb
scas
lea
je
push
pop
sub
cmp
dec
cmp
push
out
in
enter
sbb
xchg
add
std
sbb
add
out
xchg
mov
mov
clc
jbe
loopne
sub
insl
or
orl
pop
inc
push
cli
dec
cmp
inc
push
ljmp
sahf
cwtl
dec
dec
dec
mov
sub
push
lret
lret
aaa
in
mov
mov
sub
inc
mov
js
sbb
daa
rcrb
aas
idiv
xchg
jp
movsl
aam
mov
js
ror
xchg
std
xor
fwait
addr16
sub
jmp
cmpsb
out
or
out
rorl
adc
and
pop
notl
inc
pushf
add
stos
roll
mov
jecxz
add
imul
aaa
push
out
std
dec
loope
dec
add
ss
ss
shll
pop
dec
test
gs
sti
scas
xor
scas
dec
into
lock
dec
lea
and
ret
lahf
sbb
jns
mov
fcomps
or
test
xchg
mov
or
jo
jp
out
inc
notl
leave
mov
ss
lret
aaa
add
cmpsb
sbb
push
mov
comiss
inc
or
add
loopne
movsl
das
inc
shlb
mov
fs
pop
inc
adc
leave
xor
clc
push
cmpsl
dec
push
rclb
and
jl
imul
ficoms
leave
aam
popa
and
pop
ret
pop
dec
stos
fisttpll
lret
fimuls
xlat
cld
sub
lock
scas
push
jo
loopne
imul
push
data16
xor
hlt
leave
sbb
mov
push
into
shlb
dec
xor
jmp
leave
mov
xchg
pop
xchg
add
add
mov
ret
lods
int
cmp
and
adc
cmc
add
test
loopne
xchg
out
sbb
mov
into
cmc
dec
adc
inc
movsb
int
int
add
jecxz
shl
in
lods
add
cs
outsb
stos
cld
dec
bnd
or
sti
test
in
dec
aad
in
popa
ror
adc
push
cmpsb
mov
pop
lcall
std
rcl
inc
mov
xchg
clc
sbb
xchg
mov
lret
inc
out
dec
xor
jge
pop
mov
mov
cmp
push
push
jnp
push
mov
sub
cmp
lock
fisubl
cmpsl
out
scas
push
lret
xor
in
sub
iret
jl
pop
stos
jg
jl
sub
or
jg
mov
call
inc
add
push
fisubl
into
add
aad
lret
sbb
sarl
fxrstor
or
jl
outsb
fwait
dec
jg
adc
jo
cld
imul
cmpsl
out
mov
stc
inc
addr16
cmp
ficompl
push
punpckhdq
jmp
imul
push
push
sub
in
dec
hlt
push
add
out
out
mov
mov
push
and
outsb
pop
arpl
out
push
adc
in
or
test
outsl
inc
push
adc
insb
push
push
cld
mov
in
adc
es
imul
pop
and
add
dec
cmp
xchg
mov
xchg
jns
jae
push
test
movsl
adc
mov
add
jbe
pop
sbb
call
pop
and
sbb
test
push
pop
push
cmp
dec
xor
pop
xchg
cwtl
dec
hlt
adc
in
icebp
cmp
xlat
mov
pop
dec
dec
hlt
test
mov
cmpsl
loope
mov
imul
clc
std
test
mov
xchg
jae
and
mov
ja
ss
std
jge
fwait
pushl
insl
cmpsl
call
sbb
in
pushl
daa
xor
xor
xlat
dec
addr16
push
mov
mov
pop
fdivl
pop
push
stc
ja
icebp
mov
fdiv
push
lods
sbb
popa
xchg
out
lock
jno
insl
mov
mov
xchg
xor
insb
cmp
sbb
sub
outsb
je
movsl
sbb
dec
cmpsl
jmp
xchg
out
sub
repnz
repz
jmp
sbb
mull
inc
jnp
or
xor
add
xlat
xor
pusha
and
movsl
cmp
popl
inc
cmp
inc
jnp
fs
outsl
cmc
popf
jp
dec
in
aam
movsb
push
add
dec
stos
jecxz
adc
popa
push
es
xchg
loopne
mov
push
aaa
push
aad
jnp
cli
inc
pushw
dec
sub
test
mov
mov
push
xor
xor
adcl
or
xchg
and
pop
jb
orl
incb
jae
push
insb
and
cmc
xor
push
enter
fidivrs
sbb
into
cmp
sbb
rcll
mov
aam
jecxz
pop
cmc
imul
xlat
sarb
mov
or
mov
ret
push
lea
test
std
dec
xchg
jecxz
mov
xchg
icebp
xchg
jle
push
adc
adc
loope
dec
mov
addr16
sbb
xchg
inc
or
jne
adc
and
test
fdivrs
je
xchg
ficomps
push
test
in
jmp
inc
jno
add
cld
inc
lcall
cmpsl
push
xchg
adc
inc
mov
outsl
lds
adc
cmp
cmpsb
dec
pop
addr16
aaa
data16
ds
or
es
jp
jp
je
loop
mov
fcomi
test
mov
cwtl
sbb
scas
shll
movsb
sahf
daa
mov
jne
movsl
pop
sbb
mov
dec
lcall
pop
mov
clc
std
sbb
out
shlb
aaa
inc
xor
sub
in
outsb
mov
jecxz,pt
aam
jne
imul
push
sbb
sbb
cmp
insb
sub
mov
xor
jns
push
iret
lret
ss
xor
push
inc
in
pushf
push
adc
cwtl
into
mov
adcb
fistl
out
cld
lret
sahf
mov
ja
xchg
adc
mov
mov
mov
push
enter
imul
scas
notb
adc
int
aas
xor
push
pop
cli
and
mov
xor
mov
call
xchg
jmp
sbb
inc
negb
and
int
pop
add
jae
jne
ss
clc
fists
cwtl
idivb
jo
scas
push
add
fnsave
cmp
push
aaa
ljmp
jp
add
sar
icebp
sub
cld
les
cmp
push
mov
ja
mov
fstl
int
fprem1
fs
shll
inc
out
ja
pop
stos
mov
js
dec
mov
xor
fs
inc
jne
cld
out
stos
and
mov
outsl
call
add
cmp
push
mov
sub
inc
jp
js
mov
setl
cmp
cmpsb
jp
jecxz
sbb
pushf
sti
imul
shrb
out
push
popa
loop
icebp
xchg
mov
add
cltd
inc
jge
out
shlb
adc
push
aam
repnz
sub
mov
test
xchg
sub
or
jp
mov
fdiv
ds
add
das
arpl
dec
cmpsb
and
jle
mov
xchg
out
dec
mov
daa
rcrl
mulb
jo
cmc
popa
adc
sti
lea
hlt
push
pop
aas
scas
aaa
mov
hlt
mov
dec
arpl
je
push
mov
ret
ss
mov
jo
ja
fstpt
js
mov
aam
ss
int3
add
jne
inc
fsubr
mov
cld
pushf
test
xchg
loop
cmc
stos
out
mov
hlt
pop
pop
jne
pop
leave
xchg
push
sub
pop
clc
notl
idiv
cs
testl
xorl
xchg
rcr
mov
cli
daa
roll
lods
xchg
lret
es
cmpsl
push
push
or
stos
fidivl
and
sti
xor
mov
cmpsl
test
add
bound
popa
fbld
stc
inc
jae
ja
push
and
mov
daa
sbb
cwtl
test
mov
repz
push
xchg
lods
cld
xchg
es
or
mov
jle
or
test
clc
jl
adc
repnz
test
ja
hlt
push
pop
xchg
imul
test
dec
cli
xorl
aad
push
insl
mov
imul
jecxz
cmp
int
nop
insb
rorl
daa
bnd
movsb
dec
pop
cmp
inc
dec
xchg
aam
into
scas
lods
mov
sub
mov
xor
dec
inc
cmpsl
xor
movsl
jp
xor
sbb
mov
sbb
mov
int
popf
movsl
mov
mov
xchg
jp
jno
cli
xchg
pop
mov
divl
dec
imul
mov
or
nop
pushf
push
pop
xchg
insb
add
faddl
or
out
add
adc
jmp
push
popa
cld
push
fs
mov
cli
into
movsl
adc
jne
jecxz
adc
movsl
jbe
mov
ljmp
nop
stos
jbe
inc
cmp
inc
mov
xor
cwtl
pop
mov
cltd
inc
int3
adc
cwtl
ss
jne
xchg
repnz
and
push
sub
lcall
pushf
rcrb
mov
xchg
sbb
cli
pop
nop
daa
scas
xchg
jecxz
sub
cli
addb
cmp
sub
into
packsswb
jns
xchg
jns
movsl
pop
xchg
xchg
lods
gs
cmp
int3
fst
or
std
jbe
xor
sahf
shll
inc
repnz
sub
pop
das
jmp
adc
inc
ret
test
jecxz
mov
mov
push
mov
mov
pop
imul
subb
mov
adc
test
leave
call
xchg
pusha
add
jg
fwait
enter
enter
loope
sbb
jecxz
push
in
lahf
bound
push
fcompl
xchg
push
icebp
out
adc
shlb
pop
xchg
out
enter
or
imul
cltd
push
inc
outsb
xchg
in
inc
jecxz
xor
lods
imul
cmp
es
fildl
lret
imul
jae
fmul
sub
mov
sub
mov
push
into
cld
inc
lods
call
mov
inc
push
insb
std
das
fdivs
pop
mov
jnp
adc
enter
cld
cmpsb
aaa
jbe
sbb
xor
push
adc
pop
aam
das
push
xchg
push
aam
stos
sti
nop
xchg
clc
xor
jecxz
jb
imul
jb
mov
shlb
test
mov
sbb
add
pop
mov
subb
cmp
cmp
add
jo
sub
mov
fs
jno
outsb
movsl
push
stc
mov
mov
hlt
insl
dec
pop
ja
sbb
lods
push
dec
repz
adc
jo
xor
push
movsb
cmp
adc
pop
mov
sti
mov
dec
subb
icebp
push
mov
clc
push
ficompl
mov
or
add
pop
jg
subl
das
rep
insl
rcrl
orb
and
mov
sub
jnp
dec
adc
in
xor
sti
lcall
inc
xchg
xchg
in
out
xchg
jecxz
xchg
lock
sti
push
scas
push
shll
out
xor
push
and
stos
or
orb
cmp
loope
or
movlhps
add
mov
xchg
adc
movsl
sbb
cmc
push
test
push
loope
aam
sbb
outsl
push
xchg
mov
xchg
jmp
outsb
fnstcw
adc
jbe
xor
daa
or
mov
daa
testl
add
sbb
je
bound
jno
jno
leave
or
bound
outsl
or
pushf
outsb
pop
out
shrl
cmp
add
mov
xor
jp
or
xchg
jge
nop
mov
sbb
xor
je
add
add
je
xlat
xchg
std
add
or
adc
mov
and
pop
hlt
call
xchg
adc
mov
or
cwtl
mov
sbb
loope
adc
xlat
test
fistpl
loope
mov
mov
fnstsw
pop
add
mov
shr
jne
nop
ret
addb
mov
cli
fisubs
leave
imul
adc
and
jp
jb
dec
fwait
mov
popa
cmp
mov
xchg
icebp
xchg
imul
fdivs
mov
lock
es
xlat
inc
mov
push
inc
push
push
pop
mov
add
xlat
push
mov
dec
aam
arpl
xorw
dec
inc
dec
dec
mov
insl
das
icebp
cmpsb
insb
xchg
nop
sbb
loop
aam
nop
cmp
mov
or
pop
fistps
sub
push
mov
aad
jb
nop
inc
cmc
push
pop
aad
jae
cmc
inc
push
push
ret
jno
sbb
cmp
sub
imull
mov
push
add
decl
add
outsl
adc
sbb
jns
push
repz
cmp
outsl
cmpsl
sub
hlt
rcll
mov
into
cmp
adc
pop
push
rclb
lret
add
stos
inc
mov
lea
rorl
mov
test
fidivrs
and
das
mov
xchg
jl
hlt
jp
in
std
pop
into
pusha
xchg
shl
sub
xlat
nop
or
mov
jmp
test
imul
mov
das
add
adc
mov
inc
ret
jmp
jo
mov
push
imul
xchg
lods
lcall
sbb
add
sub
jo
adc
test
dec
mov
jns
call
je
push
jbe
xor
inc
out
mov
add
nop
add
xchg
push
or
jno
insb
xchg
or
fs
inc
jnp
cltd
insb
je
sub
xor
insl
shl
jns
mov
xchg
cltd
or
pop
push
test
cmc
push
out
rorl
and
sbbb
in
push
xchg
fmuls
movsl
mov
xchg
test
xlat
test
cltd
popf
xor
xor
push
pop
js
out
mov
in
add
adc
sub
andl
push
inc
add
xlat
xchg
insl
lods
sub
cwtl
adc
in
lret
in
imull
push
mov
imul
nop
pop
in
adc
push
mov
mov
rcll
fcoms
imul
cmp
mov
cmpsb
fidivl
jbe
mov
insb
dec
or
sbb
iret
daa
jbe
jecxz
loop
jae
addl
cmp
imul
ja
cltd
xor
mov
dec
rclb
add
jns
lcall
push
cmp
xchg
push
cmpsl
sbb
cwtl
scas
loope
jecxz
jecxz
pop
or
jo
stos
push
jecxz
scas
adc
cwtl
in
fldt
xchg
xor
roll
dec
mov
incl
repnz
loope
adc
into
clc
sbb
xorl
push
sub
cmp
jnp
pop
mov
cmp
mov
loop
scas
fldenv
insl
cmc
cmpsl
out
mov
nop
imul
jns
or
sbb
cld
inc
aas
into
pop
aad
mov
or
xor
xor
jp
jnp
or
push
push
out
xchg
ds
fdivr
jb
repz
scas
jle
push
ljmp
cmp
insb
insl
arpl
cmp
sbbb
or
jl
imul
push
add
fnstenv
inc
in
shll
jmp
xor
aas
imul
sti
mov
shll
leave
pop
data16
outsl
or
jo
pop
lret
mov
outsb
dec
push
push
pusha
cmpsl
push
ret
push
and
lcall
leave
movsb
add
pop
xchg
arpl
lods
mov
xchg
inc
out
or
outsb
pop
in
sbb
jl
or
xchg
mov
mov
jb
out
sub
clc
imul
gs
jge
push
fisubs
sbb
or
loope
push
enter
adc
inc
mov
aad
sti
cmp
jl
sbb
inc
es
mov
sarl
mov
icebp
cli
mov
fmuls
jp
shll
je
ficompl
daa
xchg
fimuls
jns
push
add
inc
push
sub
dec
push
mov
leave
not
jge
loopne
add
inc
ja
ss
mov
sarl
xor
xor
inc
repnz
xor
push
addr16
test
pop
ret
jo
popf
sbb
movhps
xor
xor
pop
pop
mov
add
jb
cli
daa
mov
pop
push
lock
mov
pop
cmpsb
nop
in
adc
or
sbb
jnp
mov
in
xor
xor
fcomp
clc
rcrb
hlt
out
mov
fsubrs
jo
or
mov
addr16
pop
mov
in
cmp
paddq
xchg
jbe
xor
rcrb
dec
scas
sub
xchg
mov
xor
sbb
pop
and
icebp
mov
mov
out
and
mov
je
inc
push
or
or
in
pop
repnz
daa
cmc
xor
outsl
push
cld
jg
jnp
lret
lods
jge
mov
adc
mov
cmpsl
dec
das
push
xorl
ds
mov
mov
stos
lahf
loope
push
pop
inc
xchg
jbe
mov
repnz
or
jle
scas
out
xchg
xor
inc
sahf
push
mov
mov
lods
pop
cmp
jo
xor
xor
jg
mov
out
arpl
out
xor
jbe
pop
cld
push
ja
int
ret
adc
jb
jb
xor
mov
paddb
lock
std
mov
push
mov
sbb
les
adcb
mov
mov
add
push
divl
push
sti
mov
adc
jo
xchg
mov
stos
lcall
inc
or
pop
xor
push
push
and
xor
sbb
push
xlat
ret
adc
jp
mov
movsl
sbb
and
inc
mov
cmp
stos
pop
fnstsw
pushf
insl
push
rorb
inc
in
fcmovnu
ret
scas
out
sbb
ds
les
call
mov
mull
ljmp
sbb
xorl
jnp
jle
push
jno
mov
insl
je
imul
inc
roll
pop
insl
cmp
sahf
negl
daa
hlt
fnsave
insl
fisubs
add
add
ss
rclb
mov
sbbb
inc
das
test
cs
mov
xchg
push
add
dec
rorb
jno
push
mov
mov
ret
dec
leave
insb
test
sbb
and
inc
add
fstl
ds
lods
mov
loope
pop
cwtl
inc
in
hlt
xchg
sbb
addb
adc
xchg
dec
pop
push
push
and
xchg
cmpsl
or
pop
push
notb
addl
aam
sahf
jnp
lahf
movsb
nop
cmp
sub
xchg
push
mov
fldpi
imul
cld
xchg
adc
in
sbb
pop
add
push
pop
jmp
mov
jnp
pop
pushf
js
cwtl
ror
pop
lret
cltd
mov
or
push
lods
pop
outsb
push
xor
mov
ss
lock
scas
mov
and
mov
dec
push
cmp
dec
xchg
fimull
clc
inc
popa
sub
jnp
jge
jp
jl
cld
sub
popa
push
pop
das
jnp
mov
arpl
dec
movsb
nop
cmp
cld
std
rcll
insb
cmp
subl
push
inc
mov
aas
aaa
mov
xor
jb
push
push
imul
push
cltd
pop
addr16
or
jbe,pn
push
outsl
aaa
mov
enter
and
leave
pop
stos
stos
pop
or
out
mov
mov
addb
and
xorb
or
xorb
ret
addr16
es
cltd
rol
movsb
stos
or
addb
rolb
add
pop
roll
jb
push
adc
subb
adc
xor
push
adc
notl
jecxz
arpl
retw
xor
mov
out
xorb
xor
daa
imul
lret
and
dec
lcall
cmp
xor
scas
stos
add
popa
push
dec
sub
les
sbb
imul
add
fidivrs
mov
rcrb
jg
sbb
xchg
push
es
outsl
loope
cld
pop
mov
int
cld
mov
insb
push
cmp
out
in
dec
andl
repnz
sti
out
lods
sbb
mov
xor
scas
int3
ficoms
scas
rcll
sbb
adc
cmp
xor
lea
test
je
jle
in
xor
inc
jle
jo
adc
jl
push
insb
adc
std
test
cmpsl
out
jo
icebp
pop
lahf
clc
daa
push
and
jo
lock
push
dec
arpl
cs
cli
mov
mov
push
cli
mov
aaa
lcall
jb
adc
daa
xor
add
jnp
in
add
stos
xchg
out
pop
insb
inc
jns
pop
pop
mov
loope
cmp
jns
dec
adc
sbb
ds
inc
cmp
or
stos
push
cmp
fmuls
pop
popf
xor
icebp
loope
cmp
add
jns
scas
cli
cmp
loopne
sbb
dec
addb
cli
loop
inc
mov
inc
sti
pop
insb
mov
pop
xchg
mov
mov
loope
sub
xor
nop
jne
imul
into
and
adc
repz
pop
and
adc
jnp
jae
dec
cld
cmp
outsl
imul
dec
push
sbb
cld
dec
mov
add
aad
cmp
jb
push
push
and
jbe
sbb
adc
cld
xchg
out
orb
inc
cwtl
or
in
add
push
ljmp
cmp
jb
out
cmpsl
push
jp
add
cwtl
lea
mov
jg
test
jnp
push
orb
cmp
mov
mov
aad
cmc
dec
popa
push
push
pop
hlt
jno
int
bound
xor
loope
adc
pop
adc
lods
loop
push
fdivl
andb
mov
xchg
or
cli
push
aas
cli
dec
push
fiaddl
push
mov
pop
cmp
rorb
cmp
outsl
je
lahf
dec
lods
jg
sub
xchg
sahf
into
push
fstps
push
dec
lret
xor
xor
fmull
into
or
adc
push
push
lods
fistpll
es
sub
into
or
test
jecxz
enter
pop
out
andl
mov
mov
sub
sbb
jmp
insb
xor
xor
cwtl
push
call
fstpt
adc
push
pop
xor
ds
push
popa
out
lcall
cmp
mov
fs
int3
inc
add
repnz
or
into
repz
push
inc
xchg
mov
rorb
icebp
xor
test
neg
addl
adc
jecxz
adc
add
aam
mov
test
cmc
xlat
xchg
enter
fnsave
in
rcr
lds
xchg
shrd
mov
lods
inc
xchg
gs
or
mov
cli
loope
scas
in
lods
fldl
cld
and
xor
ret
push
xor
ljmp
dec
jno
imul
aaa
jns
push
stos
pop
xchg
mov
in
and
sbb
mov
mov
cli
in
shrl
cltd
xchg
jnp
jnp
rcll
scas
mov
out
into
mov
push
loopne
lcall
jns
sbb
or
xchg
int3
cmp
sbb
insl
data16
jmp
je
cmpl
fcmovnb
repnz
xchg
or
cmpsl
into
inc
mov
xchg
loope
cmpsb
sub
int3
out
push
jne
sahf
fildl
dec
xor
repz
xchg
pop
scas
ja
into
jnp
xor
mov
pop
cltd
push
lods
cmp
int
add
lods
test
mov
push
mov
push
cmp
cmp
add
out
cvtps2pi
mov
xchg
cmp
pop
jmp
pop
adc
mov
lcall
outsl
repnz
sub
jg
popf
cmp
test
rcr
xor
dec
add
add
and
movsb
cmp
xlat
jns
jb
or
push
adc
push
inc
cmpb
daa
jp
sub
mov
cld
lea
cmpsl
out
mov
pop
sub
push
xor
rorb
inc
xor
push
ret
and
sub
orl
jl
pop
test
push
jmp
icebp
mov
or
int3
lock
jns
and
testb
int3
dec
insb
inc
jno
out
int3
dec
fstl
and
push
div
out
sbb
ret
cmp
push
mov
lahf
aaa
fwait
pop
cmp
cmp
push
adc
push
add
pop
cwtl
inc
sub
sub
inc
divb
sub
jbe
sub
f2xm1
xchg
push
or
cwtl
cmp
cmpsl
je
sbb
push
sbb
sbb
pop
xor
jo
adc
sub
fmulp
xchg
dec
sti
xor
repnz
test
sub
scas
pop
in
mov
sbb
aam
xlat
adc
inc
cmp
test
out
add
add
xor
inc
cli
test
out
inc
pop
data16
sbb
dec
cmp
jl
mov
mov
in
out
push
in
jmp
xchg
decb
push
cmp
xchg
pcmpeqw
in
mov
mov
jmp
and
adc
jno
mov
mov
pop
sahf
jecxz
in
push
push
adc
sub
cs
aad
aam
les
js
cs
nop
iret
mulb
sbb
lret
inc
in
push
movd
scas
push
push
fmuls
cmp
das
filds
lea
shrl
in
es
je
outsl
jecxz
pop
inc
xor
cmpsl
leave
jg
aam
insl
ds
jp
push
mov
in
out
pushf
cmp
pop
cli
in
cli
dec
ror
out
mov
mov
scas
aam
jp
pop
scas
rcrb
cmp
dec
ss
dec
test
inc
pop
cmpsb
pop
xchg
movsl
jle
insb
cmpsl
mov
mov
in
inc
adc
ja
ds
pop
lahf
scas
test
fmuls
cmc
rcll
cmp
dec
xchg
fldcw
sub
je
jmp
adc
push
push
adc
lret
pop
or
daa
mov
ss
mov
mov
pop
sbb
ljmp
mov
dec
mov
mov
xor
sbb
mov
jbe
fdivs
mov
scas
lret
dec
aas
pop
pusha
cmp
mov
into
out
and
pusha
xor
int
or
xor
cli
in
lds
outsb
test
cmp
add
sub
fcoml
rolb
mov
xchg
jo
inc
jnp
into
pop
mov
movlps
stos
jbe
pop
push
lock
mov
rcl
mov
adc
cld
daa
outsb
loopne
out
dec
dec
mov
subb
test
pop
sbb
dec
cmpl
pop
mov
sub
loopne
lret
in
mov
les
cli
xchg
scas
or
dec
push
ds
add
loopne
imul
out
xchg
pop
cld
mov
xchg
sub
fnsave
insl
pop
shlb
ret
push
adc
mov
xchg
or
push
xor
push
pop
clc
clc
sub
cltd
mov
jne
in
jp
dec
ds
leave
dec
das
aaa
jb
xchg
add
shrl
add
dec
or
idivl
pop
sub
mov
into
push
lcall
adc
in
cmc
in
hlt
adc
inc
cltd
pop
xor
movb
in
aad
cmp
outsl
adc
je
and
je
jmp
push
and
mov
push
xor
lret
lods
icebp
bound
loopne
sbb
xchg
dec
jnp
ja
add
iret
les
popa
pop
sub
shrl
scas
mov
jns
xchg
orl
pop
out
pusha
insl
push
in
imull
sub
pop
sub
push
jbe
scas
and
inc
divb
jo
sbb
push
jo
add
stos
pop
iret
sbb
cmp
mov
push
in
hlt
jno
lods
je
adc
cld
jno
and
aas
xor
xor
ret
push
or
inc
pop
push
xchg
cmc
xlat
sub
and
add
hlt
lds
je
inc
das
inc
xor
fnstsw
ja
jmp
ja
insl
leave
lock
xchg
ds
out
flds
xchg
jne
das
inc
push
jo
clc
je
mov
mov
mov
daa
lods
movsb
lea
ja
test
pop
cmp
jb
mov
in
scas
test
inc
jbe
sub
inc
cmp
loop
in
insb
in
gs
mov
dec
xchg
add
fs
cli
notb
insb
add
xor
aas
call
push
mov
cmpl
sbb
insl
push
imul
xor
es
les
in
mul
mov
push
jmp
jnp
add
idivl
push
call
and
xlat
scas
in
js
cld
xlat
cmp
andps
fimull
xor
push
ljmp
lea
je
add
sbb
inc
lret
xchg
jne
push
icebp
imul
divl
es
mov
out
adc
xlat
imul
imul
adc
daa
jbe
jbe
popa
adc
inc
loopne
push
dec
inc
inc
jle
push
pop
sub
pop
xchg
xchg
mov
xor
and
inc
xor
lock
push
cld
stos
subl
push
test
xor
divb
lret
pusha
pop
je
ss
or
aad
dec
aas
and
pop
pusha
push
add
mov
cmc
cmpsl
push
imul
stos
push
mov
xchg
sarb
call
imul
add
nop
push
adc
sub
data16
shlb
idivl
xchg
inc
fdivp
sub
sbb
sub
insb
repnz
out
loop
aas
jae
jl
or
inc
or
jnp
push
call
and
jbe
cmp
xacquire
popa
inc
aas
mov
pop
repz
in
icebp
aam
mov
xchg
jo
xor
test
lock
jns
bound
xor
imul
or
push
and
shrd
test
jge
cmpsl
adc
enter
sti
xchg
mov
mov
adc
cmp
js
loopne
inc
notl
loope
test
cmp
vpcmov
test
hlt
aam
std
cmc
jbe
orb
fwait
xlat
mov
scas
or
je
or
jne
sub
xchg
sbb
cltd
xchg
pop
rorl
and
mov
lcall
jo
mov
out
mov
cmpsb
push
adc
cld
fsubrl
jo
adc
in
or
xor
addr16
cmpsl
fwait
pop
in
std
sbb
sbb
sbb
cld
das
aas
or
data16
icebp
adc
sub
sbb
mov
loope,pn
dec
add
xchg
into
sbb
imul
sbb
cld
leave
ret
repnz
jno
adc
dec
xchg
cmc
push
xor
idivl
pop
sbb
xchg
push
ret
xchg
xchg
push
jns
iret
cmp
mov
xor
mov
sub
pop
pop
dec
push
insb
fimuls
jg
mov
or
sub
push
pop
mov
in
mov
lods
or
sbb
cli
pop
mov
in
les
push
cmp
sub
adc
cld
pop
push
mov
hlt
mov
ds
push
iret
mov
loopne
mov
dec
dec
idivl
add
lcall
inc
mov
pop
loopne
adc
into
push
push
jp
rclb
cwtl
xchg
pop
test
mov
roll
loope
push
cmp
divb
cmp
ss
add
popf
cli
das
loope
call
adc
in
adc
mov
cmc
push
pop
leave
negl
and
add
cs
xchg
cmc
cs
xchg
mov
pop
leave
pusha
sbb
adc
adc
test
jns
fs
lds
roll
mov
lahf
xor
fidivrs
xlat
aas
push
adc
jo
xor
inc
sub
shrl
scas
mov
cs
jp
enter
je
or
scas
cld
push
movsb
xlat
js
cli
cs
pop
xlat
xchg
scas
or
mov
fiadds
loop
leave
inc
sbb
or
jns
out
shl
ljmp
js
cmpsl
adc
cld
cli
rorb
clc
adc
push
mov
rcl
enter
lock
xchg
sti
mov
jb
cmpsl
push
or
jb
mov
pop
mov
mov
mov
shrl
add
cmp
lcall
outsl
nop
push
aaa
jae
push
bswap
cld
push
jp
outsl
cmc
in
push
movsb
loope
je
data16
addl
daa
mov
sahf
push
pop
cmp
jo
nop
mov
jno
jnp
cmp
roll
xor
push
cli
movsb
lods
inc
mov
loopne
mov
adc
mov
adc
dec
xchg
fs
lahf
jbe
cmc
push
rcrb
ja
das
int3
add
jnp
cld
mov
sti
int3
adc
cltd
sbb
add
mov
daa
pop
mov
push
in
adc
adc
cltd
mov
mov
cld
sub
or
outsb
mov
ss
or
xorb
dec
cmp
mov
popf
sbb
fdivl
addr16
sub
clc
sbb
js
testb
mov
insl
test
repz
sbb
push
jmp
lock
pop
jp
lods
pusha
lea
xor
sub
insb
add
sub
cmp
out
data16
and
int
mov
test
iret
xor
shlb
jnp
add
das
add
icebp
rcrb
adc
bound
mov
mov
test
jo
push
int
je
mov
negl
push
into
sub
mov
stos
addl
mov
inc
inc
sub
out
clc
jp
fwait
add
mov
scas
mov
imul
dec
cld
sub
fsubrl
jb
loopne
pop
cltd
je
dec
insl
cld
sub
xchg
aas
add
pop
fistpl
and
cmp
mov
scas
lret
mov
xchg
sub
std
mov
and
js
cmp
jl
testb
adc
notl
xor
das
push
jb
imul
je
push
rep
add
adc
cmp
add
dec
testl
test
lods
into
push
outsb
stos
sub
fxch
lods
scas
sahf
add
scas
flds
push
mul
popf
push
test
scas
inc
pop
inc
ja
pop
jbe
mull
pop
daa
mov
mov
outsl
popf
dec
mov
push
pop
lcall
inc
add
and
outsb
bound
out
jg
icebp
int
mov
stos
cmc
or
pop
xor
fimull
lods
sti
or
mov
lock
push
push
pop
ret
add
xor
shr
jmp
imul
jo
ljmp
lret
hlt
outsl
xchg
daa
sbb
scas
in
inc
lods
inc
or
pop
pop
pop
jp
push
out
pop
cmp
or
out
jle
loope
out
test
sbb
out
mov
pop
xchg
cmpb
dec
push
jp
sbb
mov
std
pop
les
imul
shl
jno
inc
imul
mov
in
adc
and
push
lahf
pop
icebp
js
adcl
push
pop
cmc
std
mov
aaa
jl
jae
std
xchg
and
ss
out
into
mov
jbe
inc
pop
sbb
mov
js
fsubrs
out
arpl
nop
jg
test
and
inc
push
xchg
push
dec
push
adc
into
sub
in
push
adc
fucomip
hlt
outsl
push
push
adc
push
pop
mov
pop
fisubs
and
out
sbb
dec
cmp
xchg
mov
and
jae
add
test
addr16
xchg
fisubs
lods
mov
xchg
pop
loope
leave
cwtl
jns
dec
pusha
cld
xchg
pop
push
xchg
shrb
add
push
mov
xchg
mov
jmp
mov
divb
mov
jl
int3
cmpsl
test
jge
fsubl
xchg
jmp
pusha
out
je
sahf
mov
push
fcmovu
inc
mov
test
mulb
sbb
cld
addr16
dec
addr16
lods
sub
out
stos
or
lret
inc
jle
xlat
sarl
push
adc
jae
mov
jnp
push
test
hlt
adc
aam
push
jns
xchg
jbe
mov
pop
ficompl
test
cli
xor
sbb
sub
push
xor
or
es
push
notl
pop
icebp
cmc
fimull
cmpsl
test
push
sbb
jmp
daa
ljmp
cli
into
push
cmpsl
mov
insb
js
xor
ficompl
pop
icebp
lcall
clc
loopne
push
jmp
mov
ss
sub
cltd
testb
push
faddp
js
sub
es
fwait
arpl
and
push
mov
inc
jmp
sub
icebp
cwtl
les
sbb
int
nop
and
add
jno
xchg
out
push
or
rolb
lcall
adc
into
ljmp
inc
xchg
pop
bound
add
jo
aad
dec
mov
call
int
lds
cld
dec
jo
icebp
ja
push
ret
pop
jo
fmull
cmc
xor
jmp
out
leave
push
icebp
push
divl
dec
xchg
out
popf
xor
mov
pop
jmp
mov
adc
js
add
gs
and
mov
hlt
or
mov
repz
divl
push
mov
aad
cld
movsb
mov
loop
jge
pop
mov
sbb
stos
or
popf
push
jl
das
push
loope
je
jae
dec
into
ret
mov
adc
test
test
push
pop
xlat
push
shrl
xor
adc
pavgb
adc
add
jae
mov
pop
adc
imulb
cmp
jne
out
jl
outsl
cmpsb
jnp
mov
je
jbe
add
or
jne
push
aad
adc
inc
mov
negl
or
adc
dec
or
sahf
popf
ja
andl
and
pusha
es
add
sub
lcall
aad
push
fdivrl
xchg
cmp
test
imul
das
push
loopne
xchg
test
repnz
ljmp
mov
cld
sbb
mov
xor
aam
lea
xorl
cld
ja
fs
add
stos
and
dec
jb
pop
sbb
fdivrl
fs
les
std
cmp
les
inc
rol
dec
arpl
jge
fdivrs
sub
leave
add
add
add
jne
jmp
dec
pop
inc
push
jne
xchg
pop
fbstp
pusha
lods
loopne
lds
mov
jb
cmpsb
adc
into
rcll
or
inc
pop
or
adc
xchg
pop
test
cmp
out
loop
orb
arpl
jne
addps
jmp
xchg
push
mov
aam
xchg
stos
xor
loope
mov
cmpsl
mov
add
std
sbb
or
pop
aad
cmp
jae
repnz
pusha
dec
xchg
gs
mov
push
fistpl
dec
es
xchg
cmpsl
shll
negb
mov
inc
cld
jb
push
sub
xchg
fdivl
pusha
xor
imul
test
push
daa
sbb
in
outsb
rolb
and
xor
xorl
jp
push
ja
jbe
lcall
push
mov
xor
add
jbe
aaa
in
inc
cld
ret
aaa
xor
inc
fdivl
aas
jae
test
xchg
xrelease
jb
movl
jp
adc
cmp
repnz
shl
xchg
jno
lock
cmc
jbe
ss
icebp
push
xor
or
push
jp
jo
xor
adc
push
shll
aaa
pop
lock
xor
jl
jae
lock
xor
aaa
adc
insb
inc
loope,pn
aaa
subb
in
popa
arpl
push
addr16
loopne
jle
inc
pop
lahf
jo
aaa
mov
lock
lods
test
popf
sbb
push
jns
cmp
daa
push
add
and
cmc
xlat
sbb
dec
icebp
jge
xor
adc
mov
aaa
xlat
sbb
jmp
cld
mov
push
mov
lods
adc
or
addr16
add
aam
out
mov
jb
jp
inc
lcall
pop
ficompl
push
jnp
jae
pop
mov
add
sbb
sub
pop
ret
addr16
inc
movsl
cltd
cmpsb
lret
ss
rcl
mov
test
cwtl
cli
pop
movsb
sar
popa
leave
push
dec
mov
xor
pop
gs
clc
dec
jnp
shr
xchg
xor
inc
and
repnz
push
push
push
mov
mov
sbb
mov
jbe
sahf
sub
xchg
movb
or
add
in
mov
pusha
outsb
sub
cwtl
cld
test
fs
mov
fsts
xchg
addl
shrb
mov
repnz
cmpsb
xor
sbb
dec
ret
sbb
repz
cmp
mov
mov
scas
push
ds
inc
es
mov
icebp
mov
mov
lods
arpl
jmp
test
xlat
pop
clc
push
lcall
mov
jbe
sbb
testb
jo
xor
jb
inc
add
dec
pop
shll
stos
lods
into
cmp
xchg
fsubrs
adc
sti
lret
mov
mov
sbb
in
xchg
pop
ds
xchg
cs
cmc
cmp
jl
add
mov
push
div
ja
mov
cmp
icebp
imul
popa
push
repnz
scas
jb
aas
notl
adc
mov
cmp
mov
cmpsb
push
mov
mov
repz
push
test
jne
cmpsl
bound
ss
inc
and
mov
mov
add
pop
xor
or
fmulp
pop
dec
rorb
mov
cli
xchg
stos
hlt
ds
jecxz
or
ja
ja
popl
pop
mov
sbb
xor
std
test
xchg
popf
or
push
ficoml
ja
ror
inc
pop
notl
scas
or
sub
xlat
mov
iret
or
dec
jle
js
cwtl
ret
add
adc
icebp
loopne
int
sarl
push
cmp
aad
jg
daa
aad
or
inc
sbb
pop
lds
nop
test
imul
mov
adc
dec
xor
ja,pt
imulb
cmc
int
fisttpl
xor
rclb
sbb
lret
idiv
pop
sub
jne
mov
sbb
repnz
mov
push
push
into
inc
or
mov
xlat
sub
xchg
adc
inc
mov
xor
ret
add
jne
filds
cs
out
jmp
pop
push
push
jmp
xor
enter
xchg
jnp
cld
orl
push
std
push
add
jge
nop
andb
cmc
xor
incl
mov
clc
jae
daa
loopne
into
add
movl
nop
add
test
or
dec
sub
jb
sbb
xor
ja
and
cmc
xchg
mov
jb
aad
cmp
out
sub
jne
cmp
out
add
out
sbb
gs
imul
out
out
lods
pop
mov
outsl
pmaxub
add
mull
or
mov
imul
mov
mov
add
cmp
and
adc
daa
loop
orb
dec
mov
leave
sti
pop
lods
movsb
xlat
lret
xor
cmp
out
cltd
and
movsb
or
xor
push
iret
ret
daa
out
cld
and
fwait
imul
cmp
cmpb
pop
jecxz
shlb
inc
ss
jno
pop
jg
daa
jg
mov
out
daa
lea
je
sbb
xor
cmc
adc
popf
or
add
mov
jbe
in
mov
jae
jne
xchg
je
das
lahf
add
jbe
adc
push
imul
xchg
dec
sbb
mov
sbb
call
in
iret
imul
sarl
push
pop
or
inc
mov
ja
clc
sub
js
add
cmpsl
lret
adc
sti
push
lods
clc
xor
test
loop
push
jnp
cli
pop
xchg
repz
gs
jle
jnp
je
xchg
sub
or
adc
adc
sti
out
adc
jne
call
push
aam
fsincos
or
jnp
mov
shlb
xor
rcr
xchg
xrelease
out
test
push
dec
pop
jecxz
ret
negl
sub
cmpsl
test
ds
xor
out
out
into
out
adc
cmpsl
lret
mov
xorl
mov
mov
xor
xchg
sub
lods
movb
adc
mov
xor
ljmp
sub
out
mov
mov
jns
or
movsl
nop
pop
mov
dec
imul
mov
fimuls
mov
xchg
sarl
push
imul
inc
jnp
xchg
movb
jno
stc
daa
push
add
aas
inc
sar
add
dec
jmp
add
nop
inc
iret
and
jbe
sbb
cmovb
xchg
cmpsb
dec
std
mov
fcmovb
mov
repnz
repz
xor
fimuls
ja
dec
popa
inc
popf
xchg
pop
cmp
jle
cltd
inc
je
daa
aad
outsb
iret
pusha
lea
mov
cmpl
mov
sbb
inc
rcll
test
frstor
and
ja
insb
mov
push
mov
mov
test
jne
jae
je
test
andb
ror
jbe
adc
mov
push
dec
cmpsb
leave
pop
add
xor
or
push
cmpsb
lcall
repnz
push
mov
psadbw
push
add
mov
cmp
jb
pop
cli
dec
cld
pop
inc
mov
cld
outsb
sub
inc
add
mov
or
mov
outsb
lcall
in
into
cmpsl
test
xchg
fsub
es
and
xchg
mov
mov
daa
stos
std
or
jmp
push
mov
sub
inc
scas
jb
jecxz
out
jle
sahf
into
cld
sbb
fnstenv
push
rcrl
mov
daa
push
out
into
dec
fidivl
cmp
xchg
push
cmpsb
push
mov
mov
mov
sub
xlat
mov
push
push
mov
jle
adc
rorl
shl
jne
enter
fldpi
cmc
cld
data16
sahf
dec
mov
dec
ja
jbe
int3
jbe
pcmpeqb
scas
imulb
mov
testl
mov
xchg
aas
xchg
pop
testb
cmpsl
out
int
push
jne
movsl
subl
es
ficoms
jo
mov
mov
js
sahf
cmp
das
cmp
dec
lods
les
outsb
xor
mov
add
fbstp
lock
xor
icebp
loopne
std
cmp
cltd
inc
mov
test
push
pop
adcl
scas
mov
sahf
and
jb
pushf
inc
pop
sub
negl
nop
pop
test
gs
sub
roll
mov
mov
push
adc
sub
leave
filds
ljmp
mov
dec
scas
cmpsl
mov
xor
lcall
ljmp
imul
adc
push
lcall
push
jo
aad
cmp
push
sbb
je
xor
xchg
stos
js
xchg
ja
inc
or
data16
mov
jecxz
iret
or
lea
lods
adc
pop
outsb
mov
xor
xchg
jae
lock
movb
fisubrs
inc
stos
xor
xor
cmpsl
test
push
movsl
lods
enter
xor
ss
stos
sub
pop
push
add
movsl
and
daa
xchg
mov
or
mov
jns
push
or
xchg
leave
adc
ljmp
push
inc
or
add
and
sub
test
out
xchg
into
aaa
and
movsl
test
xor
xchg
sarl
lds
or
dec
push
maskmovq
idivl
in
xchg
hlt
sbb
adc
or
hlt
cld
mov
jle
pop
sbb
xchg
pop
or
jmp
adc
sub
fdiv
add
sbb
test
xchg
mov
fisubrl
in
pop
aam
rolb
into
clc
push
push
push
mov
jb
push
jnp
lock
push
cli
dec
mov
add
fnstcw
mov
lret
clc
xor
push
loopne
ss
jp
push
cmpsb
xor
add
rcrl
daa
out
test
fildl
push
push
test
mov
pop
jbe
and
xchg
jae
push
fstps
aaa
dec
and
push
jl
aam
loopne
or
das
in
or
sub
pop
dec
dec
mov
cmpsb
inc
sbb
test
pop
fisttpll
loop
mov
fstpt
mull
jmp
test
adc
push
dec
cld
mov
jg
mov
mov
mov
leave
js
or
roll
mov
test
xchg
pop
sbb
aaa
fmul
ja
jne
test
cltd
pop
lea
jo
aas
cmp
lahf
mov
add
daa
push
sub
loope
sub
add
movsb
das
loope
mov
inc
or
jle
in
xchg
sbb
leave
jl
mov
sti
into
mov
dec
sbb
xchg
push
div
push
dec
into
pop
int
jnp
fiadds
and
dec
pushf
iret
xchg
fwait
xor
adc
lods
xor
xchg
jmp
add
pop
jg
sbb
pop
test
clc
mov
daa
cmp
mov
add
negl
cld
lahf
test
cli
xor
or
jo
bnd
in
icebp
pop
xchg
add
out
pop
push
xor
adc
inc
mov
addr16
pxor
push
and
adc
ja
xchg
repnz
dec
cmpsl
sbb
push
test
mov
mov
aaa
pop
xor
push
push
pop
push
push
push
test
mov
loopne
xchg
push
jnp
stos
movsl
cwtl
aam
push
push
add
out
rclb
test
push
je
jp
push
jmp
pop
ds
pop
dec
lea
mov
xor
ss
xchg
and
mov
jmp
or
jne
inc
add
sbb
pop
pop
adc
out
sub
sub
cmp
int
je
add
push
rorb
stc
arpl
add
and
xlat
fld
push
out
cmpsl
hlt
out
sbb
js
daa
pop
sbb
jle
leave
add
insb
js
outsl
cs
dec
hlt
lret
iret
pushl
xchg
pusha
push
gs
adc
sub
push
fsubs
push
test
xchg
sbb
inc
lock
mov
xor
jp
jle
into
jae
jp
ss
inc
std
cmc
jbe
in
repz
mov
cwtl
jne
sbb
ds
add
aaa
or
xchg
pop
bound
popf
movsb
inc
mov
sbb
cmpsl
dec
jbe
sarl
je
pop
dec
cwtl
loopne
or
cmp
dec
not
jae
ss
push
out
sbb
push
clc
repnz
aad
ja
ja
sub
sub
int
pop
out
popa
dec
sub
jbe
repnz
pusha
lods
push
insl
imul
into
push
xchg
push
addr16
or
jb
cld
mov
pop
sahf
insl
inc
in
jecxz
jb
mov
mov
cmp
xchg
das
xor
push
add
or
xlat
test
pop
inc
js
sub
pop
or
clc
ret
fs
pop
jp
ficompl
mov
xlat
jecxz
adc
sbb
test
movsb
jns
mov
pop
xchg
cwtl
js
into
sub
hlt
je
pop
lods
dec
pop
mov
xor
ja
minps
dec
push
insl
add
ja
inc
cmp
pop
lods
aaa
in
add
pop
repz
cmp
leave
xor
mov
add
dec
push
out
pop
out
jmp
mov
mov
add
ss
lea
fisubrs
scas
js
cmc
icebp
divb
push
or
sbb
push
or
cmpsb
fdivl
cmpsl
mov
scas
daa
rorb
repz
push
test
scas
nop
inc
push
add
outsl
rclb
jns
lret
xchg
clc
pop
mov
in
fcomps
pop
mov
prefetcht0
and
mov
push
adc
inc
std
scas
test
mov
or
xchg
xlat
push
daa
inc
xor
out
into
pop
push
jmp
xlat
dec
cmp
daa
sbb
pop
in
addr16
iret
neg
ljmp
cmp
or
jnp
das
hlt
nop
push
imul
jnp
test
mov
sub
js
pop
xchg
ret
movsl
cmp
mov
rol
daa
aad
std
sub
jbe
cmp
pop
dec
fs
ljmp
mov
sbb
mov
mov
test
lock
orl
jo
sahf
out
add
in
push
dec
aam
push
popf
rcrl
mov
xchg
cwtl
mov
stos
loopne
nop
inc
push
js
scas
arpl
fcoms
in
jne
xchg
hlt
imul
xchg
sub
insl
pop
jo
mov
nop
jge
cmp
das
push
in
aas
cmp
cmp
ljmp
cmp
cwtl
test
sbb
pop
sbb
push
jae
popf
fdivl
mov
loope
adc
jge
cmpsb
xchg
mov
jo
pusha
sub
xchg
test
mov
xor
add
pop
mov
xchg
loop
test
arpl
cld
or
dec
addr16
jle
sub
mov
mov
mov
rorb
es
jp
add
xor
push
and
xor
sub
adcb
push
dec
dec
pop
dec
lods
push
pop
imull
call
add
jp
push
out
cld
test
dec
xchg
add
imul
xchg
xor
inc
stos
rorl
dec
scas
lock
lods
pop
mov
iret
cmp
push
jp
fidivl
mov
mov
aad
ret
in
and
pusha
repz
mov
xchg
dec
cmc
icebp
jae
std
adc
out
push
in
sub
xchg
sub
cmpsl
lret
add
adc
mov
pop
cmpsb
jno
lds
push
movsl
sub
pop
aas
mov
lods
push
fimull
sbb
mov
movsl
flds
out
rcll
xor
mov
sub
mov
cli
jb
add
pop
sbb
lods
or
jl
cld
cmpb
adc
jl
out
and
repnz
sub
and
jp
pxor
in
add
sar
call
cwtl
sub
out
gs
cld
dec
ss
aas
jmp
iret
pop
sub
dec
mov
dec
xchg
fildl
imul
mov
or
das
paddq
addr16
in
sbb
gs
jg
add
fcmovbe
jns
xchg
adc
arpl
push
loopne
jnp
mov
xchg
mov
push
jne
js
push
imul
adc
hlt
pushl
imul
dec
dec
idivl
out
mov
sbb
dec
into
stc
scas
std
cld
addb
daa
jecxz
vmovapd
mov
mov
scas
loope
bound
lea
lods
adc
in
or
mov
loopne
push
les
inc
push
mov
icebp
pop
and
cmp
xchg
add
cld
push
push
inc
xchg
jae
ret
je
stos
xor
pop
xor
adc
popf
inc
dec
aad
mov
aam
and
xchg
xor
sub
sub
push
mov
icebp
cmc
imul
xor
testb
mov
ret
and
addl
xor
xchg
push
cmp
cmpsl
push
out
jbe
subl
fidivs
pushf
aaa
mov
mov
hlt
ja
sub
mov
inc
jg
sbb
aaa
push
adc
clc
pop
punpckldq
hlt
push
ret
hlt
into
push
aaa
repnz
xor
lcall
push
insl
aad
shl
dec
cmpsl
or
xor
inc
movsl
jmp
mov
mov
shrb
xor
std
test
daa
push
mov
xor
dec
cs
mov
sub
idiv
fwait
sub
loopne
lods
adc
repz
popa
mov
popf
pop
mov
fidivrl
test
dec
mov
ljmp
nop
xor
fildll
mov
push
in
or
mov
pop
call
dec
add
jmp
xor
inc
test
loope
bound
inc
hlt
lret
cld
hlt
aam
inc
xchg
nop
jns
and
aaa
push
xchg
enter
imul
push
jmp
mov
sar
sbb
mov
sub
cltd
lods
fldenv
aad
xor
mov
sar
mov
cmp
and
cmp
xor
cli
and
add
inc
aaa
or
cmp
mov
mov
mov
pop
jno
movsb
jmp
enter
stc
xor
mov
aaa
sub
sub
repz
xor
stos
pop
daa
adc
pop
inc
sub
cli
es
or
clc
mov
bound
jbe
pop
adc
jl
jp
push
lock
sahf
add
ss
and
jnp
sbb
xor
push
in
add
jo
add
push
jnp
adc
cmpsb
xor
sti
lret
pop
lea
sbb
ja
jno
loopne
sbb
arpl
adc
jmp
jbe
addr16
jbe
daa
xchg
mov
daa
push
jp
por
and
xchg
mov
je
cmp
fucomi
dec
cmp
adc
cld
jae
push
pop
xor
pop
xor
mov
into
push
imull
add
das
push
jecxz
sub
repz
lock
cmpsl
add
repz
push
sbb
cltd
pop
daa
mov
inc
sub
xchg
inc
mov
pop
insb
testl
or
sub
std
lea
sub
loope
mov
push
pop
mov
cmpsl
shll
fldenv
sub
in
push
test
ret
push
jns
mov
mov
sbb
pop
sbb
bnd
loope
xlat
cmc
out
mov
mov
pop
lods
sub
sbb
add
cmp
push
fistpll
std
pop
fucomp
lds
push
cwtl
fdivl
mov
and
pop
mov
mov
mov
push
addl
jbe
add
push
out
mov
shrl
insb
les
repnz
nop
push
imul
fs
mov
neg
or
mulb
cmp
jno
jo
sbb
jnp
sbb
xchg
jp
movsb
iret
sub
fnstcw
push
cld
ss
pop
clc
lds
cld
ja
cmpsl
out
push
jle
sbb
add
inc
mov
or
push
lret
lcall
push
xor
adc
gs
popa
mov
fadd
mov
clc
mov
xchg
or
adc
xchg
push
cmp
inc
je
jg
fcomps
outsb
hlt
jecxz
push
out
fimull
jno
jmp
xchg
fldl
xor
in
and
xchg
adc
jo
adcb
in
mov
pop
filds
sbb
push
stc
xchg
or
or
xchg
je
test
hlt
push
xchg
adc
push
stos
jno
int3
push
mov
pop
inc
dec
mov
or
dec
or
pop
and
xor
shrl
arpl
aas
cmpsb
or
jmp
sbb
test
shl
idivl
inc
nop
cmpsl
xor
xor
lret
ljmp
mov
jb
pop
xor
xor
dec
inc
sub
rcll
sub
adc
push
xor
fidivrl
repz
ja
sbb
not
sub
xchg
or
js
movsb
cmp
ss
lods
das
imul
xor
adc
push
cs
mov
addl
popa
test
js
inc
repz
fidivs
push
lds
inc
cmp
mov
iret
mov
mov
mov
mov
sub
fwait
loope
cli
adc
popf
rcrl
sbb
pop
outsl
xor
mov
arpl
add
cs
fildl
or
rcrl
pop
pop
and
loope
subl
mov
scas
stos
mov
mov
xorl
jno
mov
add
popa
fiaddl
cli
std
cltd
mov
mov
das
aas
jnp
mov
dec
jo
aas
movsl
sahf
and
jmp
ss
jns
mov
sbb
sbb
mov
pop
or
mov
push
jg
shlb
mov
aas
push
push
add
inc
iret
push
adc
fldcw
push
jae
ss
mov
rorl
lods
js
jno
mov
mov
int3
xchg
inc
dec
jnp
faddl
add
mov
popf
out
vmovsd
push
jbe
cmc
mov
cmc
jp
loope
mov
decl
push
divb
mov
int
or
dec
xorb
pop
adc
jecxz
push
jno
fstpl
push
lds
mov
push
xor
xchg
das
es
pop
cld
jg
cmpsl
stc
cmpb
hlt
add
notb
mov
mov
pop
inc
std
or
mov
sbb
mov
enter
cltd
cmp
push
icebp
dec
sti
pop
andl
pop
popf
pop
out
es
call
idiv
mov
mov
sbb
mov
leave
loope
push
xchg
cld
jb
aam
jge
jle
call
cli
daa
xor
inc
out
pop
outsl
and
insb
bound
inc
push
mov
mov
xlat
jae
arpl
rorl
rorb
clc
lods
dec
push
pop
in
ljmp
out
ret
cmp
xorb
sti
adc
sub
lds
notl
xchg
pop
mov
gs
ljmp
pop
lahf
mov
je
ja
inc
int
out
cs
push
pop
jge
movsb
sub
jl
sbb
sbb
adc
or
pop
popa
mov
movsb
pop
inc
mov
pop
sbb
inc
out
jl
scas
hlt
enter
cmpsl
mov
scas
andb
jnp
fistps
into
mov
and
rorb
cmpsb
cs
jge
hlt
addr16
inc
xchg
push
nop
pop
insl
pop
mov
imulb
cmp
and
mov
pusha
leave
inc
aam
adc
into
negl
jbe
scas
xchg
imul
into
hlt
inc
je
lahf
adc
adc
push
loop
loope
stc
mov
callw
subb
std
inc
in
mulb
insl
inc
xor
jg
das
es
dec
push
xlat
ret
add
xchg
aaa
pop
adc
xchg
mov
aam
xor
lret
pop
cmp
xchg
aam
cli
outsb
js
mov
rcll
adc
call
pop
mov
ss
idivb
leave
pop
cld
or
ss
rcll
xchg
lds
push
out
xor
mov
lds
cs
mov
ja
adc
scas
jne
adc
dec
or
stos
cltd
hlt
inc
xor
jo
mov
mov
sbb
sub
sbb
lods
mov
dec
dec
cltd
rol
cmpsb
pop
cmp
insl
cmpb
ret
inc
add
insb
xchg
push
xchg
mov
mov
out
mov
js
pop
push
mov
hlt
dec
pusha
fisttpll
aam
push
push
xor
jp
pop
loopnew
je
ficoml
lret
lods
xor
inc
shr
and
add
movsl
test
mov
call
cmpsb
jns
mov
cmp
ja
adc
daa
push
xchg
add
jmp
xrelease
xchg
adc
orl
jne
xchg
je
jge
subb
push
and
add
stos
push
aad
jg
push
out
rolb
push
pusha
fwait
sub
mov
jb
rcll
xor
add
out
ss
sub
int3
into
movsl
addb
mov
cmpl
repnz
xor
mov
jno
aaa
lea
xor
add
cmc
jbe
aas
sub
aad
adc
mov
xorl
jp
xchg
cs
mov
jle
insb
add
dec
filds
lret
leave
mov
xorl
push
inc
mov
and
cmp
test
sub
or
cwtl
xorl
pop
jbe
aas
out
aad
mov
leave
adc
jbe
dec
nop
xchg
ja
cli
and
jle
aam
add
fisubrl
jg
scas
jp
mov
fcomi
mov
xorb
dec
imull
outsb
pop
pop
fstps
pushf
jecxz
cmp
nop
add
xchg
lods
jbe
pop
and
ds
cmpsb
popa
inc
xor
cltd
or
mov
sbb
mov
shl
ss
ficoml
fs
leave
jnp
sbb
sbb
std
sbb
mov
push
loope
mov
fwait
daa
pop
jne
ss
dec
and
pop
sbb
out
xchg
dec
push
cli
sub
into
movsb
ja
xchg
in
addb
mul
add
push
xchg
sbb
mov
or
out
leave
emms
jne
call
jg
jns
mov
ss
js
scas
jg,pn
repnz
mov
ljmp
aaa
jmp
icebp
sbbb
push
rcrl
jnp
mov
jp
jecxz
adc
adc
popa
jl
daa
adc
dec
mov
xchg
les
mov
mov
data16
fldenv
daa
mulb
dec
testl
int
repz
testb
jo
add
mov
test
pop
sbb
icebp
mov
mov
sub
mov
iret
dec
mov
pop
jns
iret
adc
js
aaa
loop
push
push
add
test
ljmp
xchg
mov
adc
outsb
mov
mov
jg
jp
je
mov
adc
outsl
mov
inc
arpl
bound
std
adc
jecxz
mov
dec
orl
idivb
jnp
xor
sti
data16
icebp
adc
jmp
add
inc
in
ja
into
nop
lock
inc
roll
add
pop
pop
cmp
rcll
fdivl
js
inc
push
test
pusha
int
and
sbb
fwait
scas
inc
jl
inc
stc
insl
adc
push
fimull
jnp
imul
cld
enter
add
popf
popf
mov
pop
jmp
repz
adc
pop
ljmp
adc
out
in
fcmovu
push
mov
js
xorps
call
xor
sahf
mov
dec
dec
sbb
xchg
sbb
pushf
lock
cmp
xor
into
and
mov
push
jmp
sub
mov
notb
test
push
mov
or
rclb
mov
push
sar
stos
popf
cmp
pop
lea
inc
push
fisubrl
sub
jmp
lds
or
cmpsl
js
es
jbe
daa
arpl
ljmp
int
xchg
sbb
mov
mov
dec
or
imul
mov
xchg
ret
adc
mov
rcrb
dec
xor
xchg
call
jne
data16
jns
cmp
dec
ds
ret
jbe
daa
xchg
lods
testb
inc
inc
mov
clc
xchg
sbbb
jmp
mov
daa
xchg
push
sub
daa
out
dec
jbe
sub
mov
lods
mov
dec
aaa
add
push
xor
lret
call
decb
jmp
fnsave
sbb
fisttpll
addr16
lret
fwait
mov
cs
cmp
inc
cmc
dec
arpl
or
cmp
xchg
mov
dec
out
roll
cmc
xchg
mov
int
or
xchg
push
out
fldt
insb
xorb
call
inc
dec
cmc
fisubs
and
add
inc
repnz
xchg
roll
sub
sub
icebp
push
cld
pushf
rcrb
fdivrl
into
xor
into
mov
and
ss
shr
scas
and
aaa
je
addr16
imul
pop
int
int3
hlt
es
sbb
mov
xchg
movsb
lods
loop
and
inc
or
arpl
arpl
movsl
push
or
bound
pop
ds
fsubs
push
inc
push
pop
xor
jb
add
icebp
cli
or
dec
dec
test
push
push
pop
push
and
inc
sbb
cmc
and
popa
push
mov
jns
iret
mov
mov
arpl
xor
jp
cmpsb
cmpsl
test
sahf
mov
mov
out
push
cli
jecxz
mov
stc
mov
out
dec
cs
dec
mov
sub
or
fdivs
dec
pop
hlt
sub
inc
mov
cmp
ror
movsl
push
xchg
inc
adc
push
outsl
adc
cli
mov
mov
cmp
std
push
mov
cmp
das
std
xchg
pop
scas
cs
mov
rorl
jg
js
adcb
divl
or
mov
inc
fucompp
mov
jp
notb
mov
cmp
pop
ret
cmp
int3
adc
scas
dec
imul
ja
ret
aaa
push
mov
xchg
xchg
outsb
xor
jae
jmp
dec
push
and
push
scas
jge
in
out
xor
ss
inc
push
je
adc
jmp
cltd
imul
xor
xlat
or
mov
je
pop
movsb
adc
jns
cmc
mov
dec
repz
int
in
fstl
in
aas
divb
mov
push
insb
in
hlt
ja
or
dec
push
ret
or
mov
xor
inc
imul
js
mov
fisubrl
mov
push
inc
mov
xchg
repnz
lods
hlt
lods
xor
xchg
push
push
icebp
repz
sbb
cmpsl
sub
or
std
add
cli
scas
adcb
sahf
mov
andl
push
cld
cmp
ds
mov
sub
popf
repnz
mov
xor
add
sub
pop
push
inc
push
leave
fs
cmpsl
test
add
push
xchg
pop
icebp
adc
test
mov
push
movsb
sub
mov
into
xorl
scas
inc
pop
fwait
cltd
rolb
cmp
sbb
xlat
mov
loope
sub
or
push
pop
push
xchg
cmp
push
mov
ss
push
xchg
mov
aam
leave
and
cmp
mov
mov
les
popf
scas
jbe
jle
shlb
push
popf
xchg
cli
push
lret
cmp
jecxz
inc
int
ss
push
in
out
mov
iret
subl
xchg
push
insl
scas
xorb
pusha
out
xchg
pop
add
mov
stos
sti
mov
fistl
imul
xor
inc
psubusw
fbstp
xchg
jb
mov
inc
dec
jmp
pop
mov
daa
cwtl
adc
push
pop
test
jns
fwait
das
shl
push
inc
xor
fldcw
mov
push
mov
into
cld
mov
mov
aas
mov
in
int
inc
add
jb
inc
mov
dec
and
notl
lahf
std
cmc
lods
bnd
inc
subl
mov
ljmp
test
sbb
out
rcrl
ljmp
leave
adc
ja
cmc
test
pop
lock
jg
xchg
xchg
test
int
inc
scas
cmp
clc
ds
scas
dec
scas
pop
fxch
pop
push
out
imulb
xchg
sub
pop
outsb
pusha
mov
movsb
negl
adc
cltd
movsb
cld
adc
push
nop
jmp
adc
cld
mov
ds
and
mov
jge
sbb
jle
add
push
xor
testb
test
sub
pop
add
js
cli
pop
fwait
movsb
sub
je
sbb
sub
mov
cmpsb
cltd
xchg
xchg
add
popf
popf
stos
cs
mov
or
lods
call
cmp
insl
fisttpll
movsl
jno
push
pop
sub
xchg
dec
mov
imul
cmp
popf
lea
push
sub
leave
sbb
outsl
push
mov
inc
sub
jno
mov
scas
inc
out
das
mov
rcrl
fcoml
ja
in
scas
shll
scas
sbb
jae
in
and
jge
jns
or
sti
iret
pop
xlat
lds
lock
or
addb
jno
dec
jp
clc
add
sbb
xor
xchg
idivb
push
in
repz
cmp
outsb
dec
sub
xchg
popa
mov
cmc
and
push
repz
and
ja
pop
sub
bound
cmp
jecxz
mov
adc
jge
dec
dec
push
das
inc
or
repz
lret
xchg
pop
and
loop
ds
cs
adc
mov
sti
int3
insl
out
mov
lock
inc
test
mov
je
xor
add
sahf
xor
js
jg
cmpsb
incl
pop
jb
ds
mov
out
jns
fs
int3
in
xchg
mov
or
xchg
test
std
push
ja
xchg
mov
imul
cmpsl
mov
or
push
test
ficomps
xchg
xorb
add
add
and
cmp
mov
sti
mov
mov
ret
hlt
xor
xchg
mov
mov
pop
cs
mov
cld
and
je
jnp
loop
jae
cld
mov
xchg
mov
or
mov
cmpsl
loop
clc
sbb
das
fisubl
jbe
inc
inc
sbb
or
scas
out
ret
pop
or
subl
pop
jmp
pop
stc
cmp
out
jp
cmp
es
xchg
out
and
sub
hlt
imul
lcall
repz
insl
sub
add
ds
xchg
lahf
dec
pop
fwait
xor
sbb
lcall
test
insl
adc
or
lahf
or
fmull
outsl
xor
cld
xchg
mov
movsb
cmp
cld
outsb
ret
adc
bnd
jb
mov
popa
jb
imul
pop
mov
jecxz
jb
test
push
loop
insb
shll
out
mov
xchg
and
mov
push
mov
jbe
hlt
mov
pusha
jg
inc
push
xchg
dec
jne
push
xchg
pop
in
scas
das
bound
dec
iret
xchg
xchg
pop
pusha
xchg
pop
imul
adc
addb
push
add
nop
jne
adc
adc
std
js
sub
rcrb
pop
mov
leave
inc
inc
pop
aam
sahf
pop
in
sub
imul
mov
jae
jae
jge
cmp
repnz
mov
sub
or
mov
jns
xchg
and
jns
adc
loope
int
mov
insb
movsl
movsl
mov
orb
outsb
sub
js
lock
dec
jne
push
mov
arpl
mov
cmc
les
jbe
pop
inc
xchg
rolb
add
in
lds
dec
cmc
cli
pop
pop
fcmovu
mov
lock
push
repnz
sbb
testl
xor
rolb
and
out
mov
or
popa
fistps
lret
xor
push
loop
xchg
mov
push
hlt
mov
push
cmp
cmp
jno
rorb
xor
add
bound
xchg
loopne
mov
arpl
out
mov
push
add
jp
fdiv
imul
jecxz
push
cltd
sti
pusha
xchg
addl
sub
mov
imul
lods
lret
adcl
imul
adc
jnp
push
ja
lods
es
push
cmpsl
xchg
mov
xlat
cld
hlt
pop
in
in
loope
push
mov
inc
icebp
xchg
into
jo
scas
scas
cld
jbe
mov
testl
pop
xor
out
loope
out
push
cmpsl
js
adc
call
pop
sbb
and
cwtl
je
xchg
mov
ss
clc
cwtl
in
sub
shl
movsl
or
cmp
enter
cmp
lods
sti
es
lock
icebp
mull
fbld
hlt
daa
ljmp
mov
xchg
or
outsl
arpl
cmc
mov
xor
xor
add
xchg
xor
xor
clc
or
xor
push
jmp
lods
xchg
sbb
jno
clc
jno
inc
sbb
jmp
jle
loope
mov
dec
mov
xorb
inc
loop
jnp
mov
out
and
mov
push
out
or
jb
roll
cmp
or
sub
loopne
stc
fildll
push
jns
iret
push
mov
push
sub
loope
stos
pop
clc
daa
notl
jns
in
jl
jle
daa
cmp
cmp
mov
loopne
repnz
inc
push
orb
mov
rolb
icebp
mov
jecxz
pusha
js
fnstenv
popa
cmp
push
adc
push
adcl
pop
cs
cld
cmp
clc
cmp
out
pop
insb
insl
jne
xchg
cld
xor
cwtl
jmp
cmpsb
and
sti
mov
testb
scas
arpl
daa
test
hlt
xor
adc
clc
push
repz
mov
cmp
mov
call
mov
div
outsl
clc
test
push
nop
mov
imulb
ja
xor
loopne
in
pop
idiv
push
mov
fisttpl
pop
ss
mov
pop
push
sub
repz
rcr
mov
not
ficompl
pop
and
jae
mov
hlt
outsl
sub
cmc
mov
daa
out
rcll
or
js
or
arpl
push
icebp
lock
pcmpeqb
cmp
mov
cld
hlt
psubusb
push
mov
sbb
int3
push
or
jp
cwtl
push
push
es
cli
xor
mov
push
loop
mov
mov
sbb
inc
xor
add
mov
cli
push
xchg
ret
fs
nop
cli
push
cmp
and
mov
test
test
or
ja
test
jo
xchg
xor
mov
inc
xor
adc
out
xchg
mov
add
insb
cli
mov
test
jae
inc
xor
imul
push
in
loop
inc
or
or
push
mov
inc
lods
jl
in
and
and
adc
insb
mov
cld
rcrb
setge
sbb
mov
pop
andb
pop
test
ss
adc
icebp
ret
and
lcall
cwtl
mov
movzwl
adc
adc
call
dec
out
sbb
jno
adcl
jmp
inc
lcall
push
add
decl
inc
lock
out
outsl
mov
or
jae
aaa
fdivrl
adc
cmp
daa
xor
ja
pop
push
pop
std
fadds
mov
hlt
adc
push
jle
call
daa
push
cmp
das
and
lods
sbb
xlat
mov
jp
push
daa
cli
cmc
mov
push
adc
push
and
and
bound
das
sbbb
adc
mov
cmp
adc
iret
adc
lds
cmp
int3
out
jmp
adc
rorl
push
je
sbb
dec
mov
inc
xchg
push
adc
je
xor
dec
nop
enter
dec
xor
sub
jbe
push
xor
adc
and
inc
cmp
test
out
mov
mov
push
xchg
loopne
rcll
and
repnz
shlb
fsubl
add
or
push
pop
add
test
mov
jno
sbb
sbb
filds
icebp
jnp
frstor
mov
ds
sbb
and
inc
aam
sti
sahf
jo
inc
dec
mov
and
cmp
mov
les
mov
lock
jbe
adc
insb
shl
test
or
out
fldenv
adc
daa
mov
mov
adc
jo
jl
imul
jnp
dec
mov
pushf
mov
mov
xchg
dec
test
ljmp
rcl
and
xchg
jg
das
sti
cwtl
bound
mov
mov
clc
sub
out
mov
pop
pop
push
pushf
fidivl
dec
pop
jae
pop
test
or
rcr
add
lods
push
xchg
lods
and
das
imul
icebp
ss
fdivrl
test
ss
cmpb
sub
add
xor
push
or
jns
mov
jae
ror
xor
shrl
adc
xchg
std
out
out
js
xchg
pop
test
aad
clc
jge
xor
push
add
test
loop
data16
push
ficomps
clc
push
mov
adc
sbb
jo
xchg
cmp
leave
xchg
pop
stos
jp
gs
cwtl
sbb
jnp
aam
shlb
xor
and
pop
lret
cli
shl
shrl
scas
inc
adc
push
fs
popa
ss
pop
xor
out
outsl
fldl
xor
js
pop
mov
xchg
dec
clc
cld
fldl
aaa
adc
push
hlt
pusha
adc
or
shrl
test
xchg
mov
gs
lcall
pop
sahf
rolb
mov
lods
sbb
inc
sub
in
cmpsl
ja
in
out
mull
addr16
incl
mov
iret
push
pop
gs
xor
outsb
cs
inc
rcr
push
mov
js
ss
mov
ss
cld
in
lahf
addr16
stos
push
aaa
cld
sub
inc
xor
adcl
pop
nop
inc
jbe
ret
lret
js
jo
cli
loope
jne
pop
jl
push
jb
xor
mov
sbb
dec
ja
lods
push
and
imul
outsb
jae,pt
cwtl
jle
clc
pop
jecxz
outsb
ja
into
mov
aas
call
xchg
ret
sub
inc
inc
inc
pop
xlat
mov
sbb
pop
and
dec
sbb
arpl
jnp
fldcw
call
xchg
andl
xchg
cmp
push
repz
mov
in
adc
mov
jbe
xchg
negb
daa
jnp
pop
cwtl
cltd
and
ja
or
mov
rorb
fists
mov
or
add
outsb
cmp
leave
cmpsb
ljmp
cld
dec
mov
in
dec
cs
jae
jbe
in
outsb
jecxz
out
in
jge
shl
fsqrt
repz
clc
xor
sbb
pop
pop
outsb
mov
mov
mov
push
mov
daa
cmp
movsb
xor
jbe
mov
or
cmp
pop
mov
outsl
mov
mov
add
dec
dec
push
push
pop
das
push
sti
xchg
inc
into
jne
movsl
gs
testl
dec
fwait
sahf
std
jno
cmp
imul
fcomps
jo
mov
shl
xchg
pop
lock
mov
inc
cltd
xchg
cld
or
neg
stos
xor
cmpsb
out
cli
jns
out
xor
sub
xchg
jo
in
lahf
lcall
add
out
notb
fs
stc
xchg
in
pop
imull
add
and
push
hlt
pop
orb
adc
out
lret
and
sbbl
lea
xchg
mov
sub
cli
sbb
inc
nop
into
testl
cwtl
mov
lret
divl
push
cmp
adc
outsb
cmp
ss
push
mov
ficoml
in
mov
into
cld
push
je
mov
lret
movsb
sub
jo
mov
es
ds
mov
shlb
jbe
mov
mov
mov
add
scas
sbb
pop
mov
xor
fldl
jbe
push
pop
bound
pushf
mov
stos
adc
jns
adc
xchg
addr16
hlt
subl
jge
xor
push
ljmp
int
mov
cmp
ret
insl
cmpsl
add
add
cmpsb
outsb
adc
sub
xor
xor
or
push
sub
fildl
dec
pop
cmp
or
xor
adc
mov
and
adc
jl
das
andb
push
addr16
xchg
fsubr
mov
xor
lret
mov
dec
cwtl
movmskps
jne
pop
icebp
js
cmp
xchg
jg
addr16
sbb
cmp
pop
dec
and
push
sbbb
ss
fnstsw
and
pop
je
clc
scas
mov
mov
xchg
insb
aad
mov
out
out
xor
arpl
into
inc
mov
cs
xor
sarb
outsl
or
fsts
jb
mov
sub
imul
add
jo
loope
shl
push
mov
cmc
call
daa
xor
dec
sbb
jg
out
mov
mov
add
es
pop
pop
inc
sti
inc
jne
dec
arpl
mov
bound
addps
sub
sahf
mov
ja
mov
sub
jnp
jl
push
push
into
mov
adc
jo
or
cltd
inc
ret
mov
jle
mov
mov
sbbl
pushf
iret
xchg
mov
adc
enter
loopne
mov
mov
pop
push
repz
mov
mov
mov
pop
nop
dec
clc
nop
cltd
jne
popa
xchg
out
mov
std
mov
mov
shld
jl
pop
adc
aam
push
jae
divl
addr16
enter
pop
pop
mov
insb
lret
dec
xor
sub
pop
mov
xor
dec
aaa
pop
add
mov
aas
shlb
shr
test
fmull
divl
out
mov
sbb
adc
inc
jne
insl
fs
xchg
mov
mov
sbb
roll
xor
js
daa
mov
sti
loop
or
jl
add
dec
xor
in
fwait
divb
xor
mov
data16
mov
outsb
fsubl
in
jbe
pop
and
out
mov
popa
cmp
mov
cmp
out
mov
test
jo
lds
pop
push
cmc
push
adc
xorb
or
push
and
pop
mov
popa
lret
loop
sub
shlb
push
push
mov
orl
ficoml
shrb
pusha
inc
mov
sub
nop
test
and
daa
add
shlb
aam
rol
jae
push
pop
pushf
add
xor
xchg
loopne
jle
mov
inc
lahf
inc
adc
and
sbb
adc
push
mov
ficoms
jne
cmpsl
jl
int3
dec
insb
xor
pop
mov
out
scas
sub
pop
jae
add
clc
mov
xor
jnp
adc
jbe
adc
mov
inc
cli
cli
pop
xchg
imul
mov
imul
mov
push
and
adc
lods
out
cld
inc
dec
dec
lea
outsb
notl
lock
aaa
paddq
inc
stos
dec
inc
cltd
cmc
std
daa
repz
adc
dec
mov
js
negb
lret
and
pop
mov
sub
je
aaa
out
ficoml
movsl
call
push
pop
fmuls
inc
mov
fisttpll
adc
jo
cld
enter
out
out
loope
mov
daa
xor
std
mov
sahf
scas
and
sub
cmp
or
mov
add
mov
data16
std
es
jl
rcrb
push
mov
mov
xchg
fisubrs
cltd
mov
js
dec
xor
push
jp
cmpsl
out
jge,pn
cmc
andl
xchg
ja
adc
lods
rep
xchg
insb
addb
lods
inc
mov
add
mul
sbb
rorl
jbe
mov
push
aaa
in
adc
sbb
or
jl
lahf
mov
cmp
cli
push
stos
push
ja
enter
clc
sbb
jo
cmpsl
inc
add
out
cld
das
or
lahf
into
mov
iret
pop
pop
mov
pop
push
aaa
xchg
fldenv
cld
enter
shrl
xchg
jo
movsl
xor
sub
dec
and
mov
mov
testb
xchg
add
jecxz
rol
mov
jecxz
cmp
shlb
bound
fptan
clc
or
hlt
mov
pop
push
std
lock
in
aaa
jl
lock
mov
movsl
xor
test
dec
clc
data16
cmp
test
insl
xor
popl
xchg
out
jne
icebp
mov
sahf
test
cs
cmc
es
cmp
fidivl
cmpsb
and
cld
fwait
xor
icebp
xor
add
xchg
mov
mov
jecxz
xlat
insb
enter
add
fcompl
test
ret
mov
ret
lahf
push
movb
fnstcw
push
movsl
test
scas
jecxz
mov
xor
inc
pop
movsl
dec
lds
repz
jmp
mov
inc
fistpll
push
mov
in
mov
jl
or
push
dec
xchg
adc
lcall
pop
mov
aam
pop
les
scas
sub
sbb
push
les
jb
push
mov
xlat
imul
xor
mov
mov
mov
lock
xchg
scas
sbb
pop
ds
shl
clc
icebp
ja
imul
pop
jne
sbb
mulb
mov
add
scas
movsl
adc
xchg
repz
loope
add
xchg
dec
jg
jns
into
cmpsl
data16
cmp
lahf
into
imul
jo
in
dec
cltd
xor
xor
sub
fwait
scas
lret
and
in
mov
dec
out
and
sub
mov
cld
dec
mov
sbb
clc
jl
mov
mov
xchg
aad
xlat
aaa
adc
xchg
mov
cld
cmp
xor
cli
xor
mov
js
cmp
xchg
int3
pop
and
adc
sub
das
add
in
not
adc
dec
sbb
dec
bound
adc
and
cmp
cld
lock
lods
lea
or
jbe
add
and
pop
scas
inc
addb
aam
aad
lds
pusha
xchg
jmp
dec
and
add
sub
pusha
repz
mov
pop
push
dec
mov
mov
mov
daa
mov
stos
jge
inc
clc
int
lds
or
xchg
sub
xchg
sub
andb
lods
push
and
jnp
or
jg
repz
mov
xlat
dec
test
bound
fxch
mov
push
pop
into
ss
adc
add
cmp
ljmp
jmp
or
lock
insl
xor
jmp
dec
xlat
in
lret
cld
jnp
aaa
out
adcl
add
mov
lock
push
push
push
fcomps
cmp
sbb
imul
pop
mov
cmp
adc
test
sub
sub
push
mov
xlat
ds
test
out
jmp
je
inc
jbe
mov
or
push
dec
pop
cld
mov
movsb
paddd
pop
add
or
dec
and
adcb
mov
clc
pop
nop
movsb
lods
jecxz
lods
notb
pop
fistl
or
shl
cmp
ja
nop
pop
xchg
cmp
repnz
roll
or
cli
loope
fcomps
mov
aaa
push
xchg
movsl
je
loopne
mov
ss
aas
dec
jnp
js
icebp
and
cmpsb
xor
test
test
push
add
lcall
mov
push
std
push
push
xlat
icebp
out
jl
js
mov
cmc
xchg
cld
pop
sub
ljmp
mov
das
inc
lret
scas
sbb
push
pop
fsubrs
icebp
mov
mov
and
pop
scas
imul
mov
xchg
cwtl
shrb
cmp
lret
or
mov
xor
jne
loopne
dec
insb
push
cmpsb
out
dec
loop
clc
shrb
ss
jbe
fadds
jp
adc
add
mov
xchg
cmpsl
lock
repz
hlt
pop
scas
jae
popa
cmp
pop
mov
push
jae
cmp
int
in
repz
cmpl
mov
leave
cld
mov
jecxz
mov
test
xchg
and
out
scas
pop
xchg
xor
mov
dec
and
std
notl
mov
pop
or
jae
rcrl
shrl
xchg
adc
xor
aaa
mov
aas
stos
repnz
jbe
sarb
rcrl
pop
out
loopne
push
pusha
cs
mov
mov
mov
aam
cmp
pop
movsl
outsl
push
outsb
push
test
daa
ds
cmc
pop
int
lock
mov
fmul
popf
fiaddl
ljmp
sbb
sahf
xchg
testl
jb
mov
push
leave
mov
shrb
divb
cld
dec
cmp
and
xor
sub
mov
outsb
cld
mov
mov
jmp
mov
or
enter
out
scas
sub
pop
jno
sahf
push
daa
or
add
push
andb
fucomp
and
mov
inc
in
stos
sti
inc
into
and
or
hlt
stos
lods
std
push
xchg
xchg
rorl
js
add
jo
lock
lret
mov
or
insl
and
and
xchg
pop
fldenv
mov
pop
xchg
add
es
or
or
xor
xchg
jbe
cwtl
insl
add
mov
sti
lcall
sahf
lea
sbb
loope
inc
xchg
subl
bound
test
mov
into
adc
xchg
pusha
mov
xchg
cld
out
mov
mov
pop
xchg
jg
mov
dec
stos
cmp
pop
shll
out
mov
push
mov
pop
jno
dec
push
sti
pop
push
hlt
dec
aam
mov
mov
sub
xchg
xchg
orb
push
jo
in
clc
daa
sbb
add
or
push
out
sarl
jle
xchg
fmuls
xchg
je
sbb
push
in
dec
pop
das
aaa
mov
rcll
lods
mov
jns
dec
lods
sahf
sub
imulb
div
clc
int
cs
push
cld
jae
sub
out
test
pop
jbe
fldpi
mov
daa
pop
add
jo
ds
xchg
mov
fisubrl
test
and
cwtl
nop
ja
sub
mov
nop
and
xor
pop
adc
shlb
movsb
and
lcall
movsl
pop
pop
sub
in
push
push
pop
jl
dec
testl
rcll
hlt
dec
stc
cld
mov
mov
mov
jg
jb
push
jbe
jae
movsl
mov
and
lods
shrl
jge
hlt
in
movsl
popa
sti
mov
push
shl
mov
dec
jg
je
mov
xor
int
mov
jl
movsl
sbb
out
xchg
imul
inc
cmc
sub
mov
rdpmc
dec
sti
je
mov
dec
sbb
cmp
mov
aad
jne
movsb
jno
mov
ljmp
and
xchg
addr16
sbb
stos
dec
and
cwtl
imul
and
pop
leave
mov
call
adc
lods
shll
movsb
mov
iret
push
aam
adc
cmp
or
ss
mov
jne
jno
and
cwtl
mov
lods
lock
leave
push
ljmp
add
int3
cmp
js
shrl
xor
clc
cmc
mov
sbb
or
jg
outsl
dec
out
push
cld
sbbl
cltd
push
and
cld
lret
call
xlat
mov
add
add
icebp
iret
lds
sub
cmp
orb
and
jle
cld
test
cmpsb
insl
jmp
push
shlb
ja
js
push
outsb
daa
dec
scas
js
jo
push
jl
subb
pop
sbb
mov
sub
pop
ja
into
scas
mov
cli
inc
adc
or
inc
adc
jg
aaa
jl
stos
sbb
cld
add
sub
mov
sub
test
adc
xor
pop
inc
adc
dec
arpl
out
and
cld
negl
push
push
mov
repz
int3
xchg
push
cld
pop
cli
mov
fstpl
test
ljmp
in
pop
call
scas
cli
xchg
add
lret
and
in
push
clc
pop
dec
arpl
loope
add
mov
and
inc
cmp
je
mov
cld
or
pop
push
push
mov
add
and
adc
inc
daa
daa
ss
movsl
daa
sub
movsb
xor
sbbb
js
fldenv
cmpsl
or
ss
orb
aaa
nop
pop
negl
icebp
iret
fadds
sub
rcrl
imul
insl
aaa
jo
aas
lock
lahf
inc
loop
inc
lock
lahf
mov
gs
xchg
xchg
mov
dec
sbb
lods
in
mov
push
scas
scas
push
popf
into
mov
jl
fnstcw
in
adc
fsubr
dec
xchg
std
inc
dec
notl
out
call
xchg
dec
push
movsb
repnz
mov
adc
test
clc
push
pop
dec
icebp
pop
lods
mov
inc
xor
hlt
test
shl
jb
xchg
mulb
sub
and
adc
sub
mov
cmp
add
xchg
repz
inc
out
sub
inc
mov
xor
mov
jns
sub
popf
pop
filds
js
push
ficompl
xchg
push
icebp
daa
mov
popl
int
mov
pop
adcl
mov
xchg
into
push
inc
xchg
inc
out
mov
xor
pushf
nop
out
jae
cld
insl
das
cmp
scas
push
cmc
test
shrd
fs
or
imul
stos
mov
sahf
aaa
fs
daa
mov
xchg
inc
lea
xor
mov
mov
add
cwtl
inc
dec
jbe
fiadds
mov
mov
enter
fidivl
aad
daa
cli
into
test
ss
sbb
pop
xor
in
push
dec
sub
inc
cltd
andl
mov
aad
xor
xor
xor
fucomp
es
mov
mov
test
in
xchg
adc
dec
dec
jns
aam
mov
ss
aas
cli
lahf
outsl
mov
inc
mov
enter
cwtl
or
loop
or
dec
div
add
clc
cmp
fbstp
mov
cwtl
sbb
mov
cmc
pop
rorb
aas
ret
rcrl
cmp
stc
sarb
sbb
xchg
xchg
pop
push
xchg
pop
js
leave
cmc
loope
out
jg
mov
cwtl
push
jl
xlat
movsl
sbb
stos
ret
out
inc
xchg
adc
and
lret
cmp
pop
jne
inc
mov
aaa
loope
aam
dec
xlat
test
cs
mov
push
and
fdivrl
icebp
xchg
xbegin
xor
xchg
jp
dec
stos
aam
jp
pushf
test
adc
push
add
aaa
loop
in
lcall
aam
into
and
xchg
mov
push
jecxz
ja
shlb
pop
scas
pop
dec
xchg
xchg
add
cmpsb
xor
dec
sub
lock
mov
idivb
mov
movsb
jl
add
inc
notl
pop
out
mov
and
js
xlat
mov
inc
xchg
loope
adc
adc
in
mov
dec
xchg
mov
push
gs
iret
mov
xor
leave
mov
jno
mov
push
aam
imul
ljmp
lret
xchg
leave
insb
data16
insl
mov
clc
mov
inc
cmc
cmpsb
cmp
ret
cmc
sti
je
sbb
mov
cli
loop
push
clc
mov
pop
ss
mov
imul
mov
pop
xor
pop
and
fwait
stos
cs
xor
sti
pop
jmp
es
or
inc
imul
push
rcll
xor
out
imul
xchg
adc
lret
pop
lock
inc
repz
sbb
adc
pop
inc
mov
pop
inc
jle
jnp
js
xor
mov
mov
cld
popa
imul
bswap
cld
call
jmp
jbe
mov
movsb
aam
mov
sti
hlt
idiv
imul
dec
stos
iret
jecxz
push
jl
addr16
test
mov
addr16
pop
push
xchg
or
int
out
xchg
shll
dec
add
clc
stos
mov
adc
into
out
jmp
pop
xor
scas
aad
mov
jle
push
data16
mov
and
rclb
loop
sub
push
ss
pop
inc
fisttpl
ss
cmpsl
jo
jp
cli
sub
pushw
pop
mov
clc
nop
sub
mov
inc
dec
leave
addb
pop
cld
adc
fwait
xlat
in
adc
sahf
dec
leave
pop
push
jle
scas
pop
pop
jl
dec
sub
mov
xor
movsb
dec
xor
lret
insl
add
pop
popa
rolb
dec
add
xchg
xor
fwait
icebp
push
lods
test
push
popa
or
dec
shll
clc
mov
loopne
pop
imull
inc
adc
or
xor
imul
outsl
fidivrs
cmp
loopne
imull
ficomps
xorb
push
cld
jbe
imull
and
sarb
xchg
loope
mov
movsl
in
jae
lods
js
inc
push
xor
jge
jbe
mov
pop
mov
std
out
mov
mov
sub
pusha
icebp
adc
nop
xchg
pop
test
add
dec
and
in
push
shr
pop
fdiv
in
rol
mov
mov
repz
or
mov
pop
cmp
and
mov
adc
or
cwtl
out
imul
nop
push
jns
stos
cmp
mov
shlb
pushf
jbe
pop
std
shrl
idivl
jnp
ljmp
lea
fwait
lods
inc
in
adc
push
stos
sbb
pusha
push
pop
mov
bound
jno
jmp
jne
add
test
hlt
out
xor
cli
into
imul
pop
arpl
out
mov
ljmp
decb
mov
test
aas
mov
inc
movsl
pop
fstpl
xor
test
push
loope
int
int
jnp
pop
hlt
mov
xchg
iret
fwait
inc
add
xchg
leave
int3
or
mov
in
lods
out
pop
mov
insb
shlb
jne
aaa
xor
dec
pushf
cmc
jae
cltd
push
mov
lock
xor
mov
push
jge
and
les
push
in
es
cmpb
cltd
mov
std
xchg
in
xor
enter
push
jbe
xor
pop
insl
mov
fistl
jmp
xchg
outsl
inc
cwtl
sarl
sbb
add
mov
push
mov
pop
ja
ja
adc
mov
testb
ds
cli
cmp
fnstenv
cmp
push
mov
push
and
and
xor
mov
iret
into
mov
jecxz
dec
negl
cmpb
test
mov
fsts
cld
dec
cmpsl
mov
out
into
loop
cmpsl
icebp
pop
pop
in
add
sub
call
std
and
cld
js
inc
mov
imulb
add
adcl
in
negb
xor
push
adc
shlb
shrl
mov
notl
arpl
mov
adc
adc
mov
sub
call
cld
mov
push
shr
loop
adc
negl
jl
inc
cli
in
pop
fcomps
aaa
jmp
int
outsl
and
jge
and
test
add
mov
mov
pop
mov
nop
add
pop
adc
xlat
xlat
sub
loopne
push
dec
cmpsb
nop
mov
jo
cmp
mov
mov
push
mov
pop
insl
lea
aas
jge
cmp
aaa
adc
cld
mov
cmpsb
cmp
dec
pop
sbb
pop
push
add
rorl
mov
outsl
hlt
xchg
mov
add
and
dec
and
idivl
xchg
mov
dec
jge
mov
cwtl
das
mov
cmc
dec
inc
fcmovne
dec
mov
pop
aam
addr16
cmp
mov
xchg
jne
push
add
adc
imul
cmp
cmp
add
cltd
test
xchg
ja
fldenv
out
mov
test
xchg
out
pusha
or
jo
hlt
jl
xor
sbb
ss
ds
idiv
push
cli
test
cs
je
jnp
jo
loope
mov
lea
aaa
cmpsl
mov
mov
xor
push
mov
jle
inc
lock
jnp
pop
jnp
daa
cld
jo
fwait
xor
pop
arpl
test
and
push
orl
dec
mov
xchg
push
sti
dec
xlat
xor
out
das
add
push
xlat
push
gs
dec
outsl
popa
jle
inc
xor
lds
ss
and
jbe
sti
and
es
mov
sbb
repz
cmp
or
stos
adc
cli
incl
ret
inc
outsl
das
hlt
or
in
mov
add
fsub
aas
daa
scas
lret
daa
mov
mov
mov
inc
mov
mov
mov
rolb
mov
scas
jns
dec
fwait
aas
fidivrl
jnp
int3
out
fists
cmpsb
push
xor
adc
pop
mov
clc
js
dec
mov
ljmp
outsl
xchg
es
movsb
stos
pop
je
cli
mov
jae
mov
pop
imul
or
jle
dec
addb
push
xor
or
dec
sub
ret
nop
and
hlt
cmp
ds
mov
inc
push
jcxz
mov
pushf
aas
cmc
arpl
sub
cld
cld
lea
or
lret
dec
subl
mov
fwait
lods
sbb
cmp
dec
or
fldcw
mov
sbb
jl
pop
js
pop
push
mov
mov
out
into
insb
popf
gs
aam
sbb
push
test
push
jp
xlat
fwait
mov
jp
mov
lret
lcall
mov
dec
sbb
push
mov
imull
aaa
fmull
mov
pop
fisttps
ja
jg
dec
jnp
push
dec
xchg
pop
pop
ss
push
cmp
ja
mov
pop
icebp
lods
sahf
ret
mov
sub
jbe
lret
loop
mov
xchg
or
jb
push
addr16
rcll
xchg
dec
cld
add
mov
mov
inc
adc
add
es
and
hlt
insb
subl
movsb
inc
loope
movsb
jo
inc
and
cmp
adc
out
xor
cmpsl
cld
js
xchg
enter
pop
adc
cmp
add
sbb
ds
aad
dec
sbb
int
cmp
out
and
sbb
or
jmp
xchg
sub
sbb
xchg
dec
pusha
mov
adc
pusha
aas
mov
jne
sbb
mov
xorl
xchg
mov
js
cs
lahf
loopne
in
mov
xchg
mov
cmp
insl
int3
dec
push
or
adc
jnp
aaa
cmp
add
lods
fldln2
mov
mov
xlat
jb
test
inc
test
loope
mov
sub
or
adc
lods
addr16
js,pt
loopne
inc
aas
xchg
mov
fwait
dec
sub
pop
pop
push
pop
aaa
aaa
inc
aaa
sarb
or
leave
and
leave
sub
inc
das
jmp
aaa
and
in
div
mov
xchg
jbe
js
orb
ss
pop
sbb
sbb
push
mov
out
icebp
test
insb
sub
mov
rolb
ja
jno
adc
das
xor
jno
mov
inc
fcomps
pop
scas
jbe
lods
js
pop
repz
adc
pop
cmp
add
sbb
out
clc
cmp
testb
fisubl
pop
mov
in
std
je
jl
ret
jne
je
insl
icebp
js
je
into
cmp
lock
cld
pop
sbb
lods
adc
hlt
mov
mov
mov
xchg
push
jns
cwtl
inc
mov
arpl
xor
je
inc
jg
fadds
fidivl
cmp
cmpsb
outsb
cmp
jns
imul
out
pop
sbb
arpl
mov
dec
shlb
insb
lea
inc
jbe
cmc
repz
out
cmp
xor
jne
push
mov
sbb
aam
scas
cmp
ja
mov
out
and
cwtl
lret
jns
pop
pop
lret
mov
pop
mov
inc
out
stos
and
xchg
sub
out
fnstcw
and
mov
adc
icebp
sbb
mov
ja
mov
ss
jecxz
jns
sbb
dec
push
stc
add
cwtl
push
aas
jmp
and
pushl
inc
jp
push
stc
cmp
add
imul
out
pusha
sbb
and
jl
sub
xchg
cmpsl
xchg
jg
xor
movsb
test
xchg
push
fldenv
mov
int
fiadds
pop
lret
daa
in
jo
cld
hlt
mov
fstl
mov
ficoml
imul
push
movsl
clc
mov
cmp
movsb
push
push
leave
leave
aam
mov
push
fistpl
cmc
cld
out
inc
in
jmp
push
push
push
insl
daa
stc
jb
addr16
daa
out
fcomip
imul
sbb
out
inc
jns
push
sti
outsb
sub
pop
pusha
insb
out
nop
jo
ret
decl
popa
mov
jb
daa
dec
dec
mov
sbb
dec
push
sub
clc
adc
in
icebp
jecxz
arpl
es
nop
mull
mov
insb
sub
cwtl
dec
clc
adc
int3
cmpsl
sbb
aad
scas
mov
testb
push
ljmp
cmp
push
js
scas
mov
jbe
xchg
clc
lret
ret
cwtl
jmp
out
and
xorl
das
dec
push
push
xchg
jb
pop
and
outsb
pop
adc
adc
or
xor
cmp
jnp
in
jge
adcb
mov
andl
mov
mov
outsb
push
cld
fs
mov
hlt
xchg
mov
mov
cld
push
dec
push
das
js
mov
out
daa
mov
sbb
xchg
test
rclb
jbe
jg
pop
aas
into
mov
mov
push
pop
pop
xchg
mov
cmc
pop
add
adc
pop
push
repz
push
repnz
icebp
mulb
push
jo
dec
cmc
shrl
pop
push
cmpsl
iret
mov
pop
rcrl
ss
pop
inc
or
and
je
repnz
add
inc
leave
sub
add
mov
mov
and
ss
jb
shlb
sbb
sbb
cmp
into
and
cmc
pusha
sub
mov
inc
jbe
push
fs
mov
std
mov
sti
jbe
cmpsl
pop
push
sub
gs
adc
jne
and
xor
or
mov
push
pop
mov
jnp
into
add
sahf
cmp
fwait
sub
pop
push
imul
rcl
mov
sbb
ja
jne
lahf
xor
enter
add
sub
xchg
test
cmpsl
je
ds
loope
sub
and
mov
roll
rcll
arpl
ljmp
cmp
and
xor
xchg
jne
push
stc
movntps
sbb
add
sbb
andl
hlt
int
ja
mov
int
jge
inc
lods
adc
push
sbb
pop
popf
clc
push
cmp
push
ljmp
div
sbb
pop
test
sub
or
sub
jo
xchg
in
or
cmp
mov
jne
xchg
ds
lock
push
jo
out
lods
cld
pop
sbb
in
adc
add
js
jmp
or
lock
stos
and
or
cmpsl
outsl
test
pop
ret
cmp
xchg
dec
mov
mov
loope
xchg
push
push
push
mov
mov
xchg
mov
xchg
cli
cwtl
cs
push
cld
movb
test
xchg
inc
mov
dec
jmp
sub
xchg
outsb
add
mov
in
pop
out
xchg
push
sub
mov
xchg
cmc
popf
mov
cmp
js
cld
ds
or
loopne
testb
jae
testb
addr16
ja
push
nop
add
loop
cmc
mull
sti
rorl
mov
adc
shlb
popf
mov
mov
js
mov
das
xchg
loopne
sub
xchg
sti
jb
das
mov
fadds
ja
cltd
xor
fildl
ja
lock
icebp
aaa
sub
push
push
mov
pop
leave
in
push
fwait
out
push
shrl
js
hlt
inc
xchg
xlat
cmpsl
das
cmc
jg
xor
and
int
jnp
sti
out
fdivr
pop
cs
jp
and
add
push
pusha
mov
flds
popf
jp
sbb
mov
in
sti
cltd
rorl
cld
insl
jne
in
jg
scas
loope
xor
shrl
dec
in
adcl
push
fs
push
lret
jns
and
ja
data16
fisubs
sub
cwtl
push
dec
ss
aam
out
clc
je
jb
xchg
jns
data16
ja
rcrl
cmpsb
sbb
jle
scas
rorb
cmovge
dec
inc
mov
dec
mov
push
push
pop
sbb
xchg
jne
xchg
mov
stos
push
and
pop
fstps
pushf
testl
jne
pop
das
mov
mov
mov
xor
in
dec
dec
cmp
daa
imul
inc
fnstcw
rcrl
sti
fidivs
xor
std
sbb
mov
mov
inc
pop
aad
fiaddl
inc
flds
xchg
mov
ljmp
aaa
mov
enter
sub
pop
fidivrs
adc
lahf
push
ds
repnz
push
push
dec
bound
or
mov
insb
mov
xor
xchg
fcomp
mov
mov
ja
mov
aam
xchg
inc
xchg
jns
and
mov
jbe
xor
xchg
popf
mov
mov
dec
or
cmpsl
xor
repz
xorb
cmp
sub
mov
inc
xorl
jne
enter
and
cwtl
addr16
fdecstp
notl
cli
dec
or
and
cmpsl
jae
sub
or
push
pusha
cli
jb
and
mov
js
cld
sbb
mov
ss
cmpsl
out
xchg
test
popa
push
inc
repz
push
adc
cld
cld
inc
out
repz
inc
xlat
insl
cmp
ja
fldcw
mov
mov
cld
daa
xchg
mov
inc
bound
push
sti
rorb
scas
mov
sbb
inc
jbe
fidivrs
movsb
lock
pop
je
push
imull
daa
outsl
test
xor
roll
and
and
lret
sub
push
add
pushf
repnz
jne
sbb
test
push
mov
push
scas
push
popf
into
sub
notl
pop
cmc
mov
jne
or
hlt
je
mov
and
jno
es
outsl
repnz
mov
jae
add
cmc
xlat
mov
cld
add
add
pop
aad
mov
daa
outsb
in
adc
loopne
in
je
add
cltd
xlat
ror
push
cli
push
lahf
push
pop
dec
jmp
hlt
sbb
push
sbb
mov
mov
jl
incl
push
sub
inc
mov
jno
jae
repz
mov
cmp
fcmove
or
cmp
and
xor
out
mov
add
push
xchg
rcll
imul
pusha
push
sub
fidivs
xchg
testl
xlat
sti
mov
cld
pop
pop
nop
mov
sbb
nop
lds
sub
test
or
jo
push
xchg
jne
jmp
or
cmp
lret
test
jo
cmc
aad
and
daa
mov
idivl
dec
repnz
xor
mov
dec
negl
nop
push
icebp
xor
dec
adcb
les
hlt
cmp
or
add
ret
add
push
dec
imul
das
sbb
dec
xchg
int
cwtl
aaa
and
adc
adc
lock
imul
adc
adc
mov
int
lahf
mov
aad
gs
ja
icebp
push
jbe
and
fld
jo
shll
outsl
jmp
lcall
add
dec
xchg
pop
ffreep
adc
cltd
cmc
rolb
lea
mov
int
out
inc
js
push
sbb
rol
dec
sbb
sub
cmpb
inc
insl
mov
and
inc
pop
stc
mov
repnz
jg
xchg
cmpb
roll
int3
jl
shlb
pop
orl
fsub
js
movsl
lods
dec
mov
push
xor
add
mov
fsubrp
inc
inc
adc
inc
xchg
xchg
push
and
addb
popa
xor
clc
inc
xor
mov
addr16
or
outsl
push
xchg
mov
scas
dec
icebp
insl
aam
jb
cmp
fsubr
jno
fmull
cmp
cs
push
rcll
mov
daa
adc
jae
xchg
push
cmpsl
scas
ja
stos
jmp
xchg
xchg
roll
xchg
ja
xor
cld
test
push
or
mov
inc
mov
push
lods
add
dec
mov
sti
icebp
push
sbb
sub
je
xchg
cld
xor
lcall
orl
aas
insb
push
xchg
xor
push
cmp
test
addr16
xchg
and
add
aam
cmp
adc
bnd
arpl
xchg
jle
xchg
movsl
outsb
xor
add
sahf
test
loope,pn
std
inc
sbb
add
push
mov
fldcw
loopne
imul
cmovae
push
sbb
daa
mov
or
fst
incl
mov
shll
stos
adc
inc
notl
mov
sub
insl
sub
and
adc
inc
ss
inc
push
and
out
xchg
mov
adc
fimull
mov
xchg
push
pop
cmp
push
lret
imul
and
pop
jle
xlat
sub
jo
lahf
add
jge
ss
shl
cld
cs
adc
dec
xchg
pop
sub
and
and
pushf
mov
in
adc
lcall
jge
inc
mov
andb
mov
jae
xchg
je
jae
xchg
pop
jo
cmp
jae
dec
xor
aad
sub
notb
aam
sub
ss
jl
insb
fstpl
push
fistps
push
sarb
or
sub
xchg
mov
push
call
hlt
sub
in
out
dec
fldcw
bnd
icebp
adc
dec
js
mov
jo
ss
mov
lods
sbb
cmp
imul
enter
imull
sub
into
pusha
hlt
in
pop
xchg
push
ret
mov
pop
out
fisttpl
xchg
adc
pop
mov
mov
jecxz
fcmovnb
mov
daa
pop
ret
cs
cmpsl
xchg
outsl
gs
ret
into
fcomi
push
mov
js
cmc
or
mov
xchg
inc
mov
stc
cwtl
xchg
add
jne
xchg
mov
adc
cmpsl
push
addr16
call
jl
mov
push
mov
sbb
mov
fsts
or
xchg
inc
mov
int3
das
or
mulb
dec
movsb
insb
scas
pushf
inc
dec
xor
fs
xchg
add
cwtl
mov
adc
jmp
sub
adc
iret
andps
mov
pop
fwait
rcl
aad
add
dec
jns
pop
xchg
sub
xchg
addr16
pop
mov
jmp
fdivs
lcall
lock
jno
daa
out
fidivrs
nop
push
or
fstl
mov
mov
ja
js
push
cmp
insb
out
lods
repz
or
jbe
pushf
lret
or
xor
pop
ljmp
jo
ljmp
fdivs
cli
cld
mov
popf
mov
shl
addr16
or
ja
aad
xchg
xchg
nop
lock
cmp
and
mov
cmp
sbb
xchg
inc
xchg
fdivrl
enter
xorb
jecxz
outsb
xchg
xlat
ret
call
fsqrt
pop
jg
pop
mov
loopne
popa
insb
or
push
notl
xchg
cmc
rolb
adc
jmp
xor
insb
adc
push
ds
or
xor
ss
inc
cld
push
sub
and
ficompl
xor
mov
enter
sbb
or
sti
pop
rcl
mov
daa
add
dec
test
adc
std
push
and
std
es
bnd
cwtl
mov
sub
out
mov
jl
fldenv
mov
push
je
int
ret
jb
arpl
mov
in
ret
adc
jge
mul
and
dec
jae
jp
outsl
scas
jo
fadds
bnd
imul
dec
sbb
hlt
cmp
or
and
notb
lret
sbb
inc
movsb
dec
jbe
addr16
stos
test
pop
cwtl
movsl
hlt
sub
xchg
jge
add
adc
cmpsl
enter
daa
push
mov
in
icebp
sub
adc
cmpsl
lds
adc
aam
cmc
push
push
pop
jae
jmp
js
cli
sti
or
stc
xor
into
dec
cld
push
insl
mov
gs
movsb
into
xor
jle
inc
enter
je
mov
std
rcrl
outsl
xchg
ljmp
adc
dec
cmc
jl
lock
and
test
pop
xchg
pop
xor
mov
mov
pop
fs
bound
pop
pop
mov
repnz
mov
push
das
mov
mov
jbe
xchg
je
fucomip
in
inc
hlt
fistps
xor
fdiv
add
mov
lock
mov
push
in
dec
jg
pushl
push
jmp
add
into
ja
jne
and
cwtl
push
add
jne
aas
data16
loopne
dec
mov
test
mov
cli
mov
test
ret
mov
sbb
jb
mov
in
adc
cmp
or
dec
cmp
pusha
cltd
cmc
cmpsl
dec
movsl
jns
xor
gs
sub
mulb
cmp
xor
scas
repz
and
fdivrs
fnstsw
leave
mov
pop
mov
fnstenv
xlat
jno
pop
sbb
pop
gs
rcr
rcr
sarl
xor
loopne
inc
xor
mov
cmp
dec
xor
lock
hlt
jne
push
inc
or
ds
lods
jbe
div
out
cmc
es
sub
negl
jae
in
jbe
cmp
dec
xor
dec
pop
and
push
rclb
lock
hlt
mov
je
dec
ss
cld
sub
jl
dec
jmp
adc
popf
movsb
push
hlt
jecxz
xlat
imul
mov
adc
insl
fsincos
sub
mov
test
mov
ds
hlt
push
enter
jnp
jg
out
mov
mov
sti
jbe
jne
sbb
lock
sahf
fcomi
stos
negb
push
jbe
cs
hlt
adc
out
cld
pusha
test
into
out
mov
mov
sub
lods
push
xchg
shrl
jno
jb
fidivs
xchg
cli
jge
stos
shl
stos
leave
ljmp
nop
cmp
repz
push
cli
leave
mov
add
int3
pop
pop
imul
mov
cmp
testl
mov
adc
out
pop
les
cld
or
leave
outsb
sbb
or
cld
push
outsl
negl
inc
mov
in
aas
cwtl
cld
pop
sub
push
inc
dec
test
into
adc
clc
pusha
jl
mov
mov
dec
mov
lds
psubq
jne
jae
idivb
mov
ds
pop
cmc
adc
in
add
icebp
dec
into
ds
iret
sub
inc
push
jmp
sub
stos
lcall
jno
pop
pop
fildll
test
out
scas
cmp
aaa
es
jno
nop
add
cmpsl
out
sbb
je
cs
push
cld
jge
insl
test
jne
jecxz
icebp
jno
call
jae
out
aam
ror
dec
cld
cmp
cmp
or
pop
push
cwtl
jge
inc
insb
mov
clc
std
jo
cmp
insb
xor
cld
mov
jo
ss
ljmp
std
out
daa
xchg
adc
xor
and
xlat
cmpsl
jo
aas
out
push
jge
ja
adc
aad
nop
jle
pop
pushf
push
and
mov
push
ja
ja
cld
mov
push
dec
in
scas
push
cmp
add
or
movsb
imul
xchg
notb
sti
mov
xor
inc
xchg
js
ja
push
rcrb
ja
cmpsl
je
jle
mov
dec
jg
mov
ljmp
lds
mov
shrb
inc
ret
xchg
lods
mov
jae
pop
adc
cmc
or
aaa
sbb
xchg
dec
hlt
xor
popf
aam
jo
adc
sahf
dec
jecxz
mov
jge
in
pop
fwait
shl
mov
lods
ret
xor
jnp
xchg
or
jl
cs
cmp
push
jp
test
scas
fbstp
mov
mov
out
dec
pop
out
jo
jle
sub
cld
add
xor
stos
mov
mov
jne
add
daa
mov
mov
into
sbb
xor
push
lock
cltd
je
jne
insb
push
mov
jb
js
daa
sub
dec
xor
lods
cld
sub
insb
jns
pusha
iret
pop
cwtl
jbe
lret
xor
jns
mov
jle
cmp
cmpl
jp
sub
xchg
push
inc
daa
clc
fs
daa
dec
mov
sbb
push
and
xor
sbb
ja
ss
scas
or
mov
test
roll
cmpsb
into
push
inc
cmp
mov
xor
xor
les
inc
pop
js
in
daa
xchg
or
jg
sbb
push
je
ja
imull
sub
sbb
shlb
push
lea
aaa
lea
test
adc
xchg
ja
scas
cmp
ret
mov
cld
xlat
pop
movsb
je
or
jb
sbb
popf
xor
sbb
aas
bound
push
sbb
xchg
outsl
cmc
nop
push
icebp
mov
test
test
sub
imulb
xchg
mov
and
dec
jg
jns
iret
fisubs
xchg
push
daa
out
pop
sar
cmp
ss
cmp
dec
adc
test
mov
mov
jb
movsl
je
dec
cld
imulb
push
xor
sub
dec
in
jl
std
out
shrl
int3
lock
inc
repnz
pop
dec
dec
aad
pop
and
dec
scas
pop
ljmp
iret
test
nop
jb
divb
cld
ds
inc
scas
sbb
jno
pop
mov
pop
sbb
adc
push
lods
rorb
mov
pop
addr16
ret
mov
scas
cmp
movsl
sbb
dec
mov
pop
jmp
push
fucomp
jo
mov
xor
out
push
mov
cwtl
lods
mov
mov
jns
jecxz
andb
sbb
outsl
aas
pop
xchg
cmp
scas
jg
add
repnz
mov
push
fwait
jo,pt
shrb
add
idivb
push
mov
xor
adc
lcall
mov
pop
pop
add
icebp
adc
mov
push
xor
loope
mov
or
add
ja
pop
sub
push
push
add
xor
cmp
test
inc
ss
orl
jp
fisubl
pop
data16
or
aas
adc
bswap
cmp
popa
jo
aam
xchg
sub
dec
pop
mov
jbe
out
sti
mov
lods
inc
je
neg
gs
testb
inc
pop
xchg
adc
and
sti
outsb
xchg
adc
jl
ficomps
aam
int3
push
ja
fidivrs
leave
jno
jl
xor
imul
shlb
inc
imul
push
aam
mov
lret
hlt
insl
xchg
outsb
repnz
loop
jle
lret
inc
adc
push
or
xchg
xchg
aaa
movsl
or
sub
sbb
xor
repz
sbb
mov
negl
rol
popa
stos
xor
testl
jmp
jb
subl
jne
je
push
or
jmp
push
lods
mov
or
pop
test
push
xor
pop
sti
jp
dec
mov
inc
mov
pop
push
and
pop
je
push
mov
push
sub
les
xor
mov
sti
push
loope
iret
xchg
or
push
push
jbe
cmc
pop
ss
sub
xchg
dec
repnz
jb
add
lds
xlat
movb
push
or
lds
pop
je
and
clc
xor
xor
mov
lahf
mov
pusha
lea
movsl
gs
or
dec
pop
lds
xlat
fildll
sti
in
xchg
pop
or
rorb
ds
out
repnz
cmpsb
scas
adc
pop
push
clc
xor
into
mov
cmp
push
xchg
mov
into
out
add
clc
jne
cmc
sbb
test
jg
adcb
test
sub
in
insb
vpcmpeqb
or
daa
mov
aas
jl
push
pop
fwait
ss
lret
xor
std
cmp
cmp
in
sahf
or
or
lods
mov
mov
jb
jmp
sub
push
cld
outsb
popf
sbb
sub
les
push
fisttpll
loope
adc
mov
cmc
pop
cmp
int
inc
xlat
in
push
mov
iret
jno
std
cmp
outsb
out
adc
dec
sbb
and
cmp
in
jle
adc
fcmovu
push
jnp
xchg
cmp
notb
scas
arpl
sar
push
jl
je
jmp
ss
jge
mov
mull
sub
xor
inc
xor
push
shrl
mov
mov
lock
jo
loope,pt
mov
mov
cld
mov
cmpsl
repz
sub
ja
in
ret
aam
in
sub
repnz
xlat
into
cld
arpl
neg
dec
mov
sub
mov
mov
or
jecxz
adc
daa
test
mov
cli
and
or
aaa
push
scas
adc
xchg
push
push
pop
adc
jns
sbb
mov
in
lods
fdivl
ljmp
shl
mov
out
sub
nop
popa
mov
out
and
vmread
sbb
mov
icebp
out
inc
cmp
xor
cmp
push
fwait
xchg
sbb
bound
adc
add
aaa
and
adc
and
mov
subb
jno
daa
shlb
adc
pop
inc
hlt
pop
xchg
insl
jbe
cwtl
clc
cmc
mov
mov
mov
shlb
aam
pop
jg
js
push
cmc
jb
mov
jo
aam
out
mov
inc
int
add
cmpsl
xor
or
jp
lock
mov
xorb
xor
lea
shll
mov
xchg
mov
clc
xchg
inc
mov
cmp
inc
mov
and
std
and
add
jecxz
js
push
xor
adc
adc
mov
mov
xchg
push
cmp
pmuludq
clc
jae
mov
ss
clc
jmp
sbb
or
or
pop
mov
pop
repnz
cmpsb
xchg
jnp
or
aam
or
jp
cmp
push
mov
xorl
loopne
xor
arpl
and
popw
mov
loope
push
clc
mov
sbb
mov
xchg
mov
into
cwtl
cmp
pop
aas
or
jbe
dec
cmpsl
mov
ds
rclb
incl
mov
fbld
inc
scas
xlat
mov
ss
hlt
sahf
mov
ds
inc
adc
push
sbb
inc
cmp
adc
xchg
pop
or
pop
add
pop
jle
outsb
daa
js
ss
push
mull
inc
int
cli
xorl
cmc
push
test
sbb
out
jne
jb
ss
icebp
inc
sub
loop
xchg
sbb
dec
and
stos
adc
js
mov
int
xor
cmp
push
cmp
imull
dec
icebp
mov
jb
xchg
sub
cmp
js
inc
sub
imul
into
inc
mov
divl
mov
not
mov
push
scas
in
add
sahf
outsl
jmp
lods
rcll
ss
pop
orb
insl
cli
cld
popa
cmp
imul
mov
push
daa
xor
icebp
and
popf
in
out
test
inc
pop
sub
sbb
dec
mov
ljmp
lds
flds
ss
xor
sbb
cmpsl
loopne
loop
fidivl
fidivl
in
rcrl
lods
pop
ds
dec
cmc
add
push
test
and
cli
daa
pop
cld
sub
test
loope
fsts
jg
adc
add
nop
xchg
push
add
sub
test
cltd
mov
arpl
cmp
dec
sti
stos
cwtl
pop
sub
sub
add
xor
mov
cmp
stos
loop
or
mov
inc
sbb
jne
cli
sbb
divl
shll
sbb
pop
in
cmpsl
dec
int3
repnz
imul
enter
out
movsb
push
lea
xor
push
cwtl
xchg
addr16
dec
mov
push
out
jnp
in
mov
xor
and
mov
xor
ret
aam
mov
add
xor
js
xor
push
mov
jecxz
push
add
xor
xlat
jg
mov
in
out
sbb
int3
mov
xor
adc
ja
add
dec
jbe
inc
dec
andb
sti
cmc
cwtl
dec
mov
sub
sahf
jnp
mov
sub
jo
push
sbb
int
imul
or
in
push
clc
call
jae
fistps
ja
lock
jnp
jnp
insl
jno
jg
add
mov
jge
mov
push
mov
push
xchg
push
ret
fsubrl
lea
xchg
rcll
and
xor
xlat
adc
icebp
outsl
push
jnp
xchg
mov
lds
scas
loop
cmp
outsb
cmc
sahf
gs
push
xchg
aam
sub
jbe
bound
pop
stos
sub
imul
mov
jbe
sub
xlat
jae
sarl
sti
cmpsb
imul
mov
sub
inc
idivl
sbbl
cli
adc
lock
movsl
imul
xor
bswap
clc
mov
and
sub
xor
in
ja
cmp
js
push
jle
incl
dec
xchg
enter
test
cmp
dec
loope
inc
push
push
call
test
push
cld
or
pop
jmp
test
pop
jecxz
push
push
lcall
mov
fiadds
loop
mov
cld
les
fwait
aad
cld
xor
sbb
js
push
cmp
ret
mov
mov
push
mov
fcomps
lods
dec
add
xchg
jbe
arpl
aam
adc
imul
les
das
xchg
cmp
inc
icebp
cmp
prefetch
xor
mov
xchg
div
jo
push
dec
pop
jnp
movsl
pop
test
cld
into
push
pop
mov
sbb
ret
mov
cltd
hlt
inc
sahf
adc
movsb
inc
insb
mov
int3
and
and
jp
push
mov
ss
mov
pop
inc
inc
adc
ja
out
insl
scas
call
adc
push
dec
addr16
xor
xor
cli
sbb
pusha
mov
sbb
xor
xchg
dec
sub
loop
cmp
stos
push
inc
daa
adc
sti
mov
mov
push
adc
out
into
push
enter
int
lret
rdmsr
lds
decb
and
test
xchg
aas
in
xchg
push
pusha
mov
orb
adc
push
popf
test
or
inc
cmp
cmp
inc
and
ja
ss
adc
or
dec
dec
hlt
xchg
dec
dec
jne
insb
push
xchg
cmpsl
dec
repnz
je
or
shrl
addl
cld
xor
mov
ja
addr16
mov
and
jne
push
in
jae
xchg
inc
jbe
or
imul
sub
popl
sub
out
out
push
lahf
mov
insb
xchg
jo
pop
imul
jmp
push
jo
or
sub
pop
lret
cmp
jmp
leave
lods
hlt
add
cmp
testl
cmc
fdiv
aam
ss
out
mov
push
nop
push
cld
cmp
push
imul
out
adc
push
in
test
mov
jge
sub
push
push
dec
fimuls
shll
test
mov
pop
fsub
push
mov
stos
mov
aas
lock
xorb
les
add
mov
push
push
cwtl
mov
adc
nop
mov
jmp
movsb
sub
xchg
in
lods
ja
fnstcw
add
and
cld
inc
cmp
dec
arpl
push
sti
test
xchg
push
movsb
cmp
lret
jle
jp
adc
aam
jp
pop
sbb
clc
lcall
in
add
xlat
dec
test
pop
dec
mov
fisubrs
shrl
mov
mov
or
aam
arpl
xor
cmc
jmp
es
aam
es
pop
je
cmp
ss
mov
add
ljmp
mov
lret
dec
jae
mov
jb
sbb
aas
cmp
lret
ror
jb
sbb
lea
stos
sbb
insb
or
lret
js
dec
iret
pop
addl
loope
xchg
mov
cmc
push
je
mov
mov
xchg
loope
into
out
aaa
inc
jne
loopne
mov
jnp
xchg
sbb
test
cmp
jmp
test
outsl
shl
cmp
cmc
and
and
mov
xor
lcall
jg
sub
push
imul
shr
sub
fisttpll
mov
or
aam
pop
jg
movsl
into
inc
jle
das
imul
sti
aas
nop
movsb
mov
ja
enter
sti
cs
jae
lds
pop
or
jp
jns
in
dec
sbb
icebp
pushf
push
pop
mov
ds
fadds
jb
imul
add
push
aam
pop
sub
pop
inc
pop
mov
loop
or
mov
loopne
adc
roll
push
call
sub
fmul
and
jg
fsubl
mov
mov
into
ss
dec
in
iret
aaa
pop
pushf
dec
jae
pusha
and
pop
repz
lods
xlat
or
sti
imul
push
cmp
jecxz
ss
std
outsb
sub
orl
jb
jo
push
cmpxchg
adc
loope
sbb
and
lds
sbb
es
jns
push
mov
ljmp
neg
popl
scas
stc
push
push
fisubrl
sbb
xor
mov
jecxz
ds
push
cwtl
push
clc
outsl
xchg
pop
or
mov
daa
dec
rcl
jns
scas
into
cmpsb
pop
iret
inc
lods
dec
repnz
fidivrl
mov
dec
repz
cmpsl
test
into
cld
popa
nop
ljmp
cmp
jae,pn
daa
mov
lods
insb
testl
or
stos
dec
push
mov
sub
cld
inc
cmp
sbb
les
add
cltd
stos
fidivl
jnp
dec
push
fsubs
scas
imul
test
mov
push
shrd
imul
adc
je
push
push
xor
mov
scas
clc
push
pop
incb
cmp
jnp
insb
pusha
clc
je
outsb
in
or
je,pt
cmp
out
mov
es
insb
hlt
mov
and
cld
addr16
xor
cmp
icebp
int3
mov
adc
cmp
das
ja
repnz
xchg
dec
lods
fimull
xchg
jmp
lret
and
shl
sbb
add
mov
sbb
cltd
sub
lds
jecxz
outsb
outsl
addb
adc
xor
push
dec
pushf
out
push
enter
push
push
and
aad
repz
popa
cmp
pop
adc
mov
sbb
pop
cmp
cld
or
xorb
popf
mov
dec
sbb
sub
push
mov
xor
call
jo
imul
cld
leave
bound
mov
nop
stos
nop
fwait
push
sub
nop
lea
mov
stos
push
xchg
jl
push
sub
stos
scas
ja
jp
test
movsb
mul
push
dec
gs
push
nop
and
mov
xor
sub
mov
dec
mov
dec
inc
jne
jl
xor
cmp
lock
xchg
lods
icebp
cltd
sbb
push
lock
adc
adc
lds
clc
inc
inc
insl
inc
bound
jle
inc
inc
mov
icebp
iret
scas
sti
inc
out
mov
lret
mov
cli
into
shrb
scas
addr16
fcoms
je
dec
cmc
mov
pop
mov
push
movsb
push
pop
in
dec
cmp
jbe
pop
test
pop
xor
xchg
adc
fs
dec
lret
xor
xchg
add
dec
mov
testb
call
push
inc
clc
cli
cltd
outsl
leave
scas
push
cld
out
dec
inc
cltd
clc
loop
cmp
jge
add
outsb
jbe
xor
push
xor
pop
jb
mov
jp
ljmp
daa
and
push
js
mov
jb
push
dec
xchg
pushf
adc
enter
insb
cli
insb
aaa
xor
lods
and
shr
inc
mov
mov
das
pop
pushf
repz
loop
mov
mov
rorl
push
add
stos
cmpsb
out
fisttpll
outsb
sbb
push
mov
inc
jb
jecxz
pusha
cmpsl
push
call
sti
test
fs
ljmp
icebp
xor
in
call
aaa
cld
mov
mov
lret
inc
out
mov
push
cs
outsl
inc
cs
arpl
pop
jmp
out
mov
jae
xor
push
sub
sub
jne
mov
int3
sbb
jno
xor
and
and
xorl
jp
jns
outsl
lret
mov
xlat
jge
rorl
jecxz
pusha
adc
ss
sub
loop
fisubs
bound
xchg
mov
icebp
push
push
dec
mov
cli
cltd
jmp
data16
jge
jl
mov
enter
cs
xchg
pop
push
mov
cmpsl
imull
push
js
dec
xor
notl
iret
mov
push
scas
and
mov
jg
roll
sub
pop
cmp
roll
sbb
xor
out
call
or
mov
or
fwait
pop
jne
sbb
mov
outsl
outsl
push
cli
jmp
notb
mov
jnp
shl
lcall
imull
xchg
mov
push
into
cld
xchg
mov
sub
mov
movsb
nop
pop
in
jne
fmuls
push
mov
inc
lock
push
clc
cmc
dec
lahf
mov
sub
jge
or
shlb
in
cs
xor
lahf
sub
push
sbb
scas
inc
push
or
mov
xchg
negl
ja
jle
add
nop
cli
xor
fimuls
js
cwtl
mov
fcoml
testl
push
loope
cmpsb
jp
repz
std
add
adc
fisubl
jmp
dec
in
sbb
jns
mov
xchg
dec
cld
push
xchg
std
sbb
mov
mov
push
sbb
aam
lods
aas
push
sub
xor
xchg
jge
pop
fucomp
sub
push
out
js
mov
xor
into
jmp
fdivrs
jno
imul
mov
in
adc
push
js
shll
scas
bnd
xor
popa
mov
scas
and
jns
xlat
xchg
mov
adc
into
movsl
fsts
sub
aas
shrl
dec
insb
sub
mov
or
into
xchg
sub
into
xchg
cs
pop
fmull
cmp
out
push
adc
icebp
add
pop
mull
lret
cs
push
insl
add
jl
add
pop
jge
and
mov
pop
insl
push
sub
loope
ljmp
lock
movsb
or
fwait
popf
stc
into
pusha
ja
fsubr
sbb
cli
mov
inc
pop
mov
js
cs
cmp
daa
imul
mov
mov
push
fnstenv
call
in
mov
addr16
lock
roll
adc
xchg
mov
testb
lock
shr
js
jns
xchg
in
pushw
ja
mov
scas
xor
es
icebp
hlt
xor
decb
iret
aas
mov
push
jbe
dec
fsubs
jp
icebp
test
mov
cmc
arpl
mov
lods
inc
cmc
outsl
xchg
cmpsl
dec
testb
jmp
scas
pop
inc
hlt
fldcw
sarb
sub
aaa
inc
xor
insb
icebp
ja
fsubrp
pop
fnstsw
adc
mov
fiadds
cmp
jns
aaa
cli
sub
pushw
in
mov
xchg
push
cwtl
cld
mov
imul
mov
movsb
inc
js
xlat
cmp
aas
cwtl
jno
insl
cmpsl
push
into
iret
mov
outsb
push
daa
sbb
int
stos
testb
pop
jnp
mov
and
add
mov
scas
cld
jle
outsb
jb
mov
dec
ret
push
mov
cld
leave
cltd
imul
scas
adc
clc
jp
push
xchg
adc
int3
mov
add
repnz
pop
scas
xchg
das
xor
mov
inc
das
pop
or
and
pusha
sar
sbb
lods
cmp
sub
inc
shl
or
pop
push
fcomi
js
std
sbb
mov
and
sub
inc
push
push
cmpsl
mov
mov
fcmovb
push
insb
in
sbbl
leave
enter
and
testl
loop
mov
stos
sub
out
aaa
mov
repz
es
lods
mov
ss
cmc
xchg
ja
insb
add
enter
xlat
int3
mov
jp
iret
ss
les
mov
lods
lret
mov
bound
cmpb
ret
insl
popa
push
and
pop
into
inc
dec
addr16
repz
into
mov
call
lods
sub
test
cmp
bound
loop
jg
cltd
icebp
mov
imul
int
mov
scas
popf
sub
mov
cmp
data16
testb
push
or
pop
pop
lahf
xor
mov
cmp
pop
movl
movsl
mov
cmc
fdivr
icebp
jnp
inc
nop
inc
adc
movsl
fdivs
dec
je
loopne
loope
clc
in
leave
je
cmp
push
dec
pop
in
test
divb
mov
inc
adc
insl
push
dec
or
sbb
imul
test
add
cwtl
sbb
mov
test
icebp
or
ja
adc
dec
hlt
sbb
pushf
jmp
shrl
jbe
sub
jae
mov
lock
sub
mov
insb
cmc
idivl
jo
add
jecxz
subl
pop
jno,pt
xchg
iret
in
add
pop
mov
and
push
lea
lods
or
dec
daa
scas
mov
xor
mulps
lret
es
xor
ss
pop
cltd
pusha
jle
xor
inc
orl
call
lret
adc
fnstcw
adc
dec
out
mov
push
ficompl
in
ja
jmp
mov
pop
jg
pop
jae
popa
stc
setle
xchg
inc
mov
aad
test
add
mov
std
sbb
mov
clc
jbe
fcmovnb
popf
scas
outsb
aaa
dec
sbb
jns
add
jg
mov
cmpsl
scas
notb
out
add
push
add
pop
push
cltd
or
jo
adc
xor
sbb
cmp
out
imul
test
jbe
adc
add
sub
out
xlat
imul
hlt
in
outsb
into
cmp
mov
scas
outsl
sbb
cmp
sbb
int
push
adc
addr16
jbe
insb
js
daa
fs
lock
xor
sbb
jle
in
push
mov
loope
xchg
xchg
sbb
xor
jae
ss
adc
xchg
fsts
loop
js
jg
test
fs
pop
sbb
inc
in
sbb
pop
cmp
ja
xchg
sub
cmc
insb
in
adc
sub
pop
pop
scas
pusha
test
jnp
cwtl
cmp
pop
test
mov
lods
pop
sahf
pusha
xor
push
cs
out
fsubrs
inc
push
xchg
jle
xchg
loope
cmp
or
push
jmp
and
out
add
nop
adc
adc
xchg
mov
movsl
push
push
aas
nop
das
rorl
xchg
and
shl
xor
cli
push
pop
popf
push
xchg
jl
xchg
test
call
jbe
das
test
loop
mov
cmp
mov
push
scas
push
xchg
xchg
cli
xorb
nop
das
ja
repz
lret
bswap
out
mov
cs
call
test
in
add
int3
push
pop
xchg
pop
and
push
mov
cld
push
mov
mov
in
dec
xor
sub
call
sub
movsb
repz
cmc
add
jae
mov
inc
sub
gs
xor
lods
cs
xor
ret
es
jo
add
jle
lahf
adc
and
in
and
fnstenv
call
push
mov
cmp
jno
std
leave
daa
sbb
sub
mov
fsubrl
cs
pop
dec
sub
fidivs
xor
sbb
js
lahf
inc
enter
repnz
and
adc
icebp
ja
shlb
movsl
lock
notl
fists
mov
lcall
daa
xchg
sub
fnstcw
je
rolb
cwtl
je
mov
aam
scas
lock
jl
cmp
cmp
aam
lret
dec
test
inc
push
inc
fstpl
sub
jae
or
mov
mov
loopne
sbb
scas
xchg
lods
mov
push
inc
sbb
mov
js
inc
aas
jae
push
js
mov
push
and
es
in
das
test
cmp
push
dec
mov
es
stos
hlt
jge
movsb
fidivs
in
sbb
lods
xor
xchg
dec
aam
clc
lock
ss
pop
outsb
mov
push
pop
lock
sbb
sub
push
stos
movsb
pop
mov
sbb
out
pop
aaa
in
movsb
mov
testb
hlt
sti
jae
in
pop
fisubrl
outsl
lret
mov
cmp
mov
adc
int
repz
sub
xor
xchg
in
inc
xorb
add
mov
dec
lock
aas
sub
jo
loope
pop
test
push
sahf
cmpsl
jbe
cmp
daa
test
enter
lods
and
bound
mov
pop
jp
in
lods
adc
xor
in
jnp
das
clc
push
into
pop
mov
lret
js
into
mov
popf
sub
cmpsl
add
fdivl
inc
dec
rolb
addb
pop
hlt
rcr
jmp
dec
push
cmc
and
pop
mov
xchg
adc
xchg
hlt
and
nop
mov
loope
mov
xor
cld
inc
mov
cmpsb
cmpsl
adc
ss
push
jb
pop
push
into
push
fisubrs
divl
iret
sbb
pop
repnz
loop
cld
roll
jne
inc
mov
in
mov
jmp
inc
pop
fiadds
das
std
pop
jno
cmp
dec
cmp
cmp
and
add
cld
icebp
in
out
loop
nop
in
repz
es
mov
jecxz
daa
repnz
jnp
mov
ja
sub
mov
push
jecxz
fwait
push
test
into
jnp
sub
je
push
mov
push
inc
jg
jne
rcll
mov
mov
or
xchg
xchg
icebp
fnstenv
push
xlat
popa
jl
pusha
jbe
dec
jp
cmp
pop
cwtl
cld
and
push
jp
push
xchg
addb
lea
sarl
out
ds
loop
ss
adc
pop
test
into
daa
mov
jge
adc
xor
fsubrs
mov
movsl
adc
addr16
and
mov
out
lea
test
out
in
rep
subb
pop
cmpsl
xor
outsb
jle
insb
sub
pop
fwait
in
mov
xchg
mov
pop
fstps
lods
push
popa
aaa
in
rclb
enter
inc
dec
shl
mov
inc
sub
sbb
arpl
mov
das
rcr
cmp
or
push
dec
sbb
push
jns
imul
push
movb
jo
es
sub
rcll
pop
and
sub
jae
xor
out
lea
imul
cmp
pop
push
add
push
push
push
xor
adc
jb
mov
lock
das
add
aam
mov
sub
div
rcrl
xchg
xlat
rcrl
push
jns
movsb
aad
xchg
mov
ljmp
adc
pop
sbb
xor
mov
jb
cmpl
push
mov
scas
in
push
and
je
cmp
cmc
xor
nop
incl
in
daa
pop
sub
das
lods
in
ret
jns
enter
idivb
rclb
add
outsl
adc
sbb
jp
mov
jbe
mov
pop
stc
mov
enter
test
cmp
inc
cmc
dec
mov
cli
jecxz
fidivs
adcb
mov
push
lock
ss
js
push
cmp
mov
ffreep
xor
lock
jb
or
addr16
dec
push
addl
divb
push
add
loop
push
movsl
add
call
xor
cmp
xchg
mov
sbb
cmp
fimull
push
add
aaa
push
insl
call
pop
popa
lock
add
mov
jne
xchg
pop
in
fisttpll
sub
jmp
or
addr16
sar
inc
ss
scas
out
push
dec
mov
push
out
push
jnp
and
addl
mov
lahf
xchg
cwtl
mov
mov
imul
mov
outsb
call
sti
notb
sub
ljmp
iret
addb
jae
aaa
pop
in
leave
cli
test
xor
push
cmp
cmpsb
mov
out
adc
enter
sbb
mov
dec
sub
mov
scas
mov
push
jae
movsb
es
mov
ret
fbstp
sbb
xor
pop
leave
xchg
daa
sbb
adcl
sub
addr16
xchg
or
jecxz
sub
adc
in
sbb
add
fs
xchg
pop
jb
popf
mov
arpl
xor
je
add
es
push
mov
pop
xlat
sti
cwtl
in
cmp
dec
and
push
add
inc
ljmp
ds
sbb
jno
lods
pop
outsb
mov
ljmp
xor
mov
dec
das
lret
push
pop
pop
mov
push
or
jbe
cmc
lahf
arpl
cmp
push
cmp
repz
ljmp
sub
scas
cmp
jle
loope
out
push
jo
pop
cli
scas
mov
test
and
popa
jmp
ret
push
je
mov
in
je
mov
stos
or
pop
sub
mov
adc
pop
push
in
incl
mov
outsb
adc
push
and
sbb
xchg
call
inc
cmp
out
sub
push
sti
cwtl
lock
jl
mov
rcrl
cmp
sbb
movsb
sti
sbb
lods
xchg
cltd
fstps
cmpsl
xor
adc
cmp
cmp
cmp
push
sub
dec
int
sub
sbb
or
and
xor
inc
out
out
pop
xor
jbe
pop
mov
aam
xchg
jns
add
push
fs
je
jo
sbb
push
or
stos
and
mov
aad
mov
shlb
xorl
out
loop
inc
out
loop
andb
push
sub
divb
imul
inc
adc
mov
cmp
adc
inc
push
add
icebp
cmpsb
cli
lret
mov
out
mov
repz
adc
mov
daa
mov
push
enter
aaa
dec
add
mov
iret
push
dec
ljmp
and
push
push
scas
testb
xchg
jecxz
iret
test
xor
or
and
inc
push
xor
negb
out
clc
mov
add
and
add
fdivs
pop
adc
cmpsb
pop
enter
adc
pushf
inc
mov
in
cs
test
jbe
int3
or
jecxz
test
std
mov
test
aaa
mov
jno
das
add
xchg
xchg
loop
pop
adc
mov
popf
inc
ljmp
inc
xchg
daa
int
data16
pop
xchg
cltd
shlb
nop
jae
mov
jns
mov
fistl
cwtl
cmc
out
pop
dec
xor
xchg
or
mov
jns
sub
fdivrl
xchg
add
xchg
push
dec
in
mov
test
inc
jne
xchg
and
loope
inc
and
pusha
cmpb
std
cmc
mov
sbb
add
imul
test
pop
cmpsl
js
int3
movsb
cmp
xor
pop
ljmp
or
sbb
test
xor
mov
dec
js
cld
pop
scas
sbb
push
ss
pop
lock
pop
adc
ret
xchg
mov
icebp
cmp
mov
pop
in
in
mov
das
flds
add
jb
out
jbe
xor
lcall
xchg
mov
pushf
scas
pop
xchg
sbb
pop
jbe
mov
xor
cmc
nop
mov
mov
test
or
xor
add
sub
ret
imul
je
dec
push
jnp
js
cwtl
adc
push
out
daa
xchg
cld
inc
dec
mov
dec
sbb
mov
pop
test
fwait
es
dec
out
sarl
push
fnstsw
mov
addr16
popf
cld
mov
call
sub
xor
clc
mov
js
sti
lcall
test
into
and
divl
js
loop
je
enter
sub
fldenv
ficomps
cltd
fsubrl
xor
sti
clc
repnz
inc
clc
mov
cld
jmp
fisttpl
mov
dec
je
int
adc
lcall
lock
in
jno
into
nop
push
insb
loopne
dec
int
push
sbb
push
mov
stos
xlat
mov
push
les
js
xchg
adc
in
stc
sbb
jbe
push
daa
cmp
outsb
push
mull
dec
cmp
das
sbb
jb
fstpl
outsb
adc
xchg
into
sbb
aam
test
test
xor
fcomi
sbb
shl
in
jae
ror
pop
mov
insl
fadd
fsubrp
cmpsb
cli
sub
push
ljmp
jbe
test
sbb
outsb
jbe
sbb
std
test
jo
outsb
or
inc
xchg
mov
mov
or
inc
loope
test
mov
arpl
cmpsb
addr16
mov
insb
xchg
jbe
mov
sarl
mov
xchg
xor
test
adc
add
ja
arpl
mov
mov
aad
add
das
ja
mov
test
sub
adc
jge
cmp
pop
mov
xchg
and
nop
xorb
xor
inc
jp
xor
or
pop
jle
mov
imul
sbb
out
lcall
pop
mov
andl
xchg
push
jge
daa
push
jg
jbe
sbb
rcr
ja
mov
mov
leave
ficompl
jb
push
ret
xlat
loop
jbe
and
sub
cmpsb
push
pop
push
cmp
mov
lea
cltd
test
sub
cmp
xorl
cmp
jae
fnstsw
roll
dec
xor
dec
popf
jb
jo
sub
out
and
mov
subb
inc
mov
adc
insl
cmp
mov
mov
cli
xor
mov
idiv
popa
push
sub
jbe
pusha
sub
std
pop
sbb
lock
fsubrs
dec
push
mov
push
xchg
in
lahf
xor
repz
iret
fsubl
in
cmc
inc
mov
hlt
xchg
xchg
lds
aam
daa
push
mov
repnz
xchg
pop
enter
jnp
mov
cmc
xchg
xchg
mov
data16
mov
xor
dec
test
pop
out
mov
ds
mov
pop
div
add
sbb
ss
nop
mov
dec
lea
outsl
outsl
cmp
insl
pop
in
dec
and
data16
push
push
sbb
cmc
push
add
negl
jp
and
aad
push
pop
hlt
xor
jb
inc
je
fstpl
pop
fidivrs
cmc
daa
bound
sbb
dec
mov
cmpb
sbb
std
in
aam
lods
mov
js
insb
pop
pop
movsb
lock
lcall
divl
pushf
xor
jo
mov
je
jo
mov
fcoml
and
pop
or
push
mov
insb
rcll
test
cmp
add
jbe
into
jns
xor
cmp
fcomps
xlat
das
rclb
xlat
cmp
js
pop
clc
clc
pop
push
cmc
ja
aaa
jbe
jecxz
mov
pop
fidivl
clc
sbb
ja
into
inc
out
das
jns
or
stos
add
fucomi
addr16
loop
cs
push
mov
mov
arpl
mov
nop
xchg
mov
testb
inc
push
je
pop
sarl
xor
movsl
push
test
dec
push
pop
pop
xchg
fidivs
xor
cmpsl
addr16
mov
xchg
aaa
jmp
scas
flds
jmp
jnp
lock
inc
fidivrl
mov
rclb
mov
push
inc
pop
pop
or
inc
mov
xchg
xor
sub
imul
mov
push
insb
jbe
cwtl
lock
test
xor
jo
outsb
jae
cmp
setae
cmp
push
fisttps
adc
stos
sub
loopne
add
and
je
mov
push
movzbl
sub
pop
movsb
xlat
jecxz
pop
xchg
dec
adc
mov
movsb
mov
decl
jl
mov
repnz
in
xor
adc
mov
into
in
add
cmpsb
and
push
push
lahf
sub
or
dec
push
xor
insl
out
int
pop
xor
push
sub
or
aad
std
cltd
sti
mov
cmp
sbb
cs
js
push
sub
std
test
jmp
mov
and
ljmp
cld
scas
sbb
repnz
xor
addr16
pop
xchg
repnz
mov
cltd
shl
mov
fisubl
clc
adc
push
cmp
mov
xlat
bound
lods
cs
aam
jnp
xchg
lods
cld
mov
mov
jecxz
movsb
xchg
jle
mov
pop
into
inc
jp
or
js
cmp
insb
cmp
vunpcklpd
repnz
fdivr
aad
and
xor
add
push
mov
into
push
int3
sub
jl
aam
inc
insl
mov
cmpsb
jle
pop
movsb
test
out
jge
insl
cmc
xchg
or
and
fiadds
sbbl
xor
push
mov
jp
cmp
mov
daa
cmp
repz
jecxz
stmxcsr
outsb
testl
dec
sbb
daa
js
add
clc
jno
andl
push
mov
dec
pop
inc
pop
xor
jns
push
ret
jbe
cmp
insl
add
sahf
jbe
lods
into
jo
cmpb
pop
push
cli
fmuls
ds
cld
movl
mov
outsb
sbb
out
push
mov
xchg
jp
js
loopne
lret
cmp
mov
loop
lock
sub
cwtl
cmpsl
outsb
add
jl
pushw
add
cmp
test
push
ss
shrb
inc
je
js
fiadds
les
addl
xor
cwtl
cli
insl
add
xor
insb
pop
loopne
xchg
cmpsl
scas
jle
outsb
in
jbe
and
jmp
jae
xor
fdivrs
pop
xor
popf
les
sbb
fcomip
nop
ljmp
mov
andb
xchg
pop
xor
popf
je
cmp
jne
hlt
push
cltd
movsb
jb
popf
or
add
repz
andl
repnz
cmc
and
xchg
ljmp
ds
sbbb
shrl
into
cmp
daa
hlt
lds
pop
fdivr
pop
xlat
js
scas
jnp
or
dec
xchg
inc
lods
mov
ds
add
xchg
dec
cld
xlat
test
scas
and
xlat
push
pop
pop
sbb
adc
xor
psubd
xor
les
cs
jns,pn
ja
fs
das
mov
xchg
in
in
mov
pop
mov
mov
arpl
add
cli
mov
push
les
or
test
inc
insl
scas
inc
out
iret
jp,pn
add
andb
sbb
pushf
jg
pop
cli
pop
ss
aam
push
loope
sahf
add
jp
call
jp
xchg
adc
mov
sti
dec
dec
mov
inc
lock
add
mov
push
test
hlt
outsl
je
xor
sbb
jp
xchg
inc
cs
mov
cmpsl
dec
ja
daa
or
aaa
adc
das
inc
xor
sbb
cs
inc
inc
scas
jmp
fdivp
leave
xlat
test
rol
xacquire
sub
leave
loope
pop
lock
add
or
inc
test
jmp
dec
hlt
mov
aas
imull
sub
mov
icebp
push
loope
mov
lods
pop
es
pop
fucomip
mov
dec
dec
ret
adc
or
cmc
xchg
push
push
xor
sahf
cwtl
jmp
inc
xor
nop
xlat
mov
mov
cmpsl
bound
repnz
mov
out
xchg
sub
add
ja
push
mov
rep
sub
mov
xchg
data16
jnp
test
imul
xor
dec
push
adc
data16
les
insb
push
pop
aam
adc
xchg
jle
scas
jg
adc
xlat
adc
mov
jnp
jae
sti
jne
es
test
jecxz
jle
mov
in
mov
lock
pop
movsl
outsb
les
pop
stos
out
dec
out
aas
push
jle
or
lret
ret
mov
mov
ja
aaa
ss
lods
cmp
jns
push
dec
adc
cmp
js
xchg
negb
dec
xchg
sahf
mov
decl
test
loope
leave
pop
add
into
and
fstpt
insb
test
dec
in
push
mov
jnp
aad
cld
jge
push
sarl
testl
into
pop
vucomiss
cmp
inc
jge
xor
push
add
daa
cmpl
iret
into
mov
cli
ds
jb
and
xchg
rol
repnz
jae
insb
xor
jno
add
je
divl
es
mov
rorb
out
push
fwait
mov
loope
fwait
cmp
sub
ja
lds
adc
out
cltd
je
jp
and
xor
aad
popa
repz
repnz
jae
add
jl
ds
jmp
cmp
shlb
mov
mov
inc
arpl
inc
je
sbb
scas
je
adc
cmp
mov
xorl
ja
sub
xchg
mov
test
dec
inc
leave
sub
mov
mov
push
mul
adc
cmc
jp
sub
scas
sarb
push
es
es
dec
dec
ss
int3
inc
mov
mov
fidivrs
div
sub
ljmp
lock
mov
outsb
adcb
dec
repz
out
sti
in
sete
or
je
scas
movsl
and
call
cwtl
xchg
pop
sbb
in
lret
test
mov
into
out
jg
js
jne
xchg
adc
xchg
or
mov
pusha
cmp
mov
lret
mov
or
or
jecxz
jle
mov
ds
jl
xor
add
addr16
inc
dec
cli
mov
les
xchg
mov
stos
cmpb
scas
pop
daa
mov
cmp
js
jnp
push
mov
adc
mov
jbe
lods
leave
lods
aaa
ss
cli
ja
mov
xor
mov
cs
shll
pop
xor
jo
vpmadcswd
dec
inc
popa
add
aad
int3
sub
inc
fmulp
sbb
pop
fdivrl
sub
push
cmpsb
pop
je
mov
add
xchg
or
mov
mov
jne
addr16
sbb
add
test
cld
mov
iret
pop
xchg
adc
cmp
scas
outsl
mov
mov
jecxz
fcom
in
icebp
pop
jbe
outsb
pop
dec
je
fisttpll
jo
jne
push
movb
xor
push
dec
out
iret
push
inc
std
xchg
cmp
aas
adc
jno
es
xorb
mov
call
pop
inc
sub
nop
cltd
inc
aam
mov
int
popf
jns
inc
cmpb
outsb
fsubp
add
dec
mov
enter
pop
or
jg
add
mov
aaa
cmp
das
arpl
or
out
ss
push
outsb
jo
xchg
or
push
jne
cs
pop
cli
cmp
mov
jbe
mov
or
nop
sbb
in
sub
or
fsubl
push
or
jg
add
sbb
pop
test
movsb
xchg
fnsave
inc
sub
xchg
out
std
cwtl
jge
lahf
xor
ss
inc
scas
add
or
jnp
xor
or
lods
gs
lret
divb
nop
mov
lods
scas
add
jno
hlt
sbb
mov
jno
clc
popf
out
sbb
flds
xchg
testb
jae
add
cmp
lock
testl
adc
xor
loopnew
or
add
lcall
cld
mov
push
cmp
mov
xchg
shll
test
xchg
sbb
aad
stc
add
jmp
pop
lahf
or
decl
les
pxor
cli
ss
out
push
dec
mov
test
mov
push
jo
mov
insb
and
andl
test
xor
jge
outsb
jle
push
fcom
xchg
lahf
and
add
adc
cmp
pop
inc
sbb
out
push
int
shlb
add
sbb
es
adc
sbb
xchg
xor
test
jns
and
cmp
cltd
orl
bound
push
sub
adc
pusha
cs
add
clc
mov
adc
push
loopne
or
ficompl
rclb
jae
popf
pop
xor
dec
mov
xor
outsl
ja
mov
in
mov
push
out
pop
inc
idiv
bnd
mov
cmp
xchg
push
sub
pop
pushf
test
adc
ret
sbb
dec
pop
mov
movsb
ss
xor
xor
or
pop
rcrl
fdivl
mov
mov
mov
cltd
es
sub
inc
xchg
ja
xchg
inc
cltd
push
sbb
jecxz
inc
adc
int
out
jle
popa
pop
add
sub
enter
xchg
push
add
insb
push
mov
orl
mov
xchg
xchg
xlat
out
xchg
icebp
scas
divl
pop
inc
xor
xor
iret
int
sub
ret
arpl
es
mov
clc
add
mov
out
movsl
mov
test
xchg
repz
pop
cmc
ja
arpl
xor
je
adc
mov
jp
icebp
movsl
or
sub
adc
xor
push
fcmovnu
in
int3
sub
rolb
jge
es
aaa
cwtl
ss
int
mov
jecxz
stos
ja
imull
cld
cmp
pop
popf
lock
pop
cmp
push
mov
or
and
lods
sub
nop
outsl
mov
and
and
imul
ror
out
sub
cmpsl
subl
cmc
jp
sbb
shl
lods
xor
pop
js
and
add
ds
mov
mov
mov
dec
daa
dec
lds
mov
ss
fs
add
cld
fistpl
adc
jnp
nop
add
aad
mov
ds
mov
mov
popa
int3
test
dec
jp
test
pop
add
cmp
xchg
out
cmp
rorl
jl
cmp
xchg
push
stc
sbb
mov
loopne
cmp
loope
jle
clc
cld
insl
jb
sub
std
xchg
jbe
in
cli
int3
out
push
punpckhwd
sub
inc
test
inc
std
xlat
loop
jmp
pop
push
mov
push
jno
les
in
outsl
movsb
mov
adc
dec
push
xchg
jp
dec
sbb
cmp
xchg
js
inc
es
push
ret
hlt
cwtl
popa
jb
cmp
adc
cmp
enter
jl
divps
ljmp
repnz
dec
ds
enter
repz
inc
push
pop
rolb
xlat
inc
outsb
mov
mov
icebp
cmc
inc
jmp
or
movsl
mov
inc
pop
jmp
cli
inc
jp
cs
jnp
lock
cmp
xchg
sti
inc
lock
xor
mov
fcoms
inc
pop
add
out
jb,pt
lods
lret
pop
xlat
mov
daa
cmp
push
hlt
sub
aas
mov
adcb
into
cmp
sbb
ds
adc
and
or
cld
mov
sbb
mov
push
inc
nop
add
jl
je
jne
ss
pop
fadds
insb
cmp
shrb
movl
jl
pop
insb
mov
and
xchg
test
loop
mov
mov
push
in
sub
push
push
add
jns
cld
xor
pushf
mov
leave
or
inc
fcomps
in
testb
ja
int
or
adc
icebp
ljmp
in
sbb
xchg
mov
and
in
lret
add
xor
jb
push
enter
cltd
inc
add
lret
mov
inc
nop
jns
notb
test
incl
sbb
add
push
lock
lods
test
std
les
xchg
sahf
cmp
mov
je
sub
sbb
incl
xor
xor
xchg
setb
das
push
jo
jge
mov
push
mov
ja
ss
jbe
add
lods
pop
sub
scas
ja
cmp
nop
icebp
rclb
jbe
add
shrl
sub
idiv
cwtl
adc
mov
sub
pop
push
push
push
lock
and
in
xlat
inc
cmpb
js
sub
add
frstor
adc
cmc
ucomiss
cmp
add
stos
iret
or
dec
int
outsl
das
push
cli
movsl
aam
movsb
dec
enter
or
es
add
fdivrl
outsl
dec
aam
aam
testl
outsl
fisttpl
pop
test
jno
push
xchg
shr
out
cld
sbb
jg
push
mov
cmp
jl
rorb
cltd
xchg
icebp
das
movb
lret
enter
or
shll
lea
test
imul
pop
xor
test
push
push
fbstp
add
inc
pop
in
xor
and
outsb
lahf
mov
mov
pop
xchg
test
mov
enter
pusha
sbb
outsl
out
add
or
jo
xor
lock
sub
sub
mov
hlt
mov
scas
cwtl
sub
and
sub
sub
cmp
out
lea
inc
adc
insb
fisubrs
push
cmp
rol
out
call
outsb
push
or
fcmove
dec
sub
bound
in
loop
jae
out
jbe
scas
rcrb
or
sub
shrl
sarb
lds
dec
std
aad
mov
idivb
or
aaa
test
mov
jbe
hlt
inc
das
jnp
inc
jecxz
xor
xchg
mov
cmp
mov
mov
xor
adc
xor
adc
adc
js
mov
xchg
and
mov
push
das
mov
cmc
into
sub
push
pop
inc
mov
or
push
jno
or
pop
movsb
clc
rorl
mov
aam
mov
or
fs
jbe
daa
adc
nop
in
sarw
pop
mov
std
and
imul
out
sbb
xor
scas
fnsave
cmc
mov
push
loop
jno
xor
into
mov
mov
mov
repz
test
into
mov
in
cs
sub
inc
xchg
mov
push
cmp
push
pop
aam
clc
sbb
ss
nop
je
cltd
push
fistps
xor
js
ja
or
pop
out
test
test
test
insb
jns
lods
dec
cmp
icebp
or
push
iret
jae
rol
sahf
addr16
sbb
xchg
test
or
je
hlt
xchg
pop
std
dec
xchg
push
xchg
addr16
mov
testb
sti
xchg
xchg
and
loop
push
sti
nop
mov
orb
mov
or
cmc
leave
jb
inc
daa
jae
or
lock
mov
push
pop
xor
inc
insb
cmp
es
mov
lods
xchg
mov
fidivl
push
outsl
xor
mov
xchg
push
sub
je
loop
adc
ret
setbe
and
xor
inc
div
jns
aaa
push
cmp
scas
cld
push
cmpsb
daa
push
nop
jbe
daa
pop
dec
adc
cwtl
xchg
push
popa
jmp
push
jnp
daa
scas
fcompl
lods
mov
fsubr
sbb
inc
shrb
mull
lret
ret
inc
adc
pop
repz
xor
push
push
enter
ds
xorl
loopne
daa
or
aam
push
es
imul
mov
pop
sti
cmp
push
jl
cmpsl
lds
ljmp
push
stc
jne
push
pop
shlw
dec
pusha
mov
mov
pop
adc
aam
push
push
nop
pop
cmp
fwait
cltd
or
sbb
or
testb
xchg
jnp
daa
jns
mov
ss
popa
jae
mov
dec
stos
aaa
cmp
pop
cmp
inc
adcb
mov
in
arpl
fcmovnu
cmp
or
xor
mov
js
dec
sub
xchg
sub
jb
mov
jns
outsb
sbb
xor
adc
daa
adc
inc
leave
in
in
sub
adc
loope
inc
rcrl
dec
inc
mov
mov
ja
cmp
jp
jmp
ds
mov
inc
divl
cmc
or
mov
clc
into
test
adc
push
sub
addr16
ss
lds
cmp
and
gs
enter
sbb
jl
jae
idiv
pusha
adc
imull
xchg
enter
mov
das
jae
repz
xchg
aam
and
icebp
std
repnz
sbb
mov
mov
xor
cmp
and
out
and
lahf
ret
roll
add
movsb
das
fadd
adc
jl
jne,pn
and
mov
jp
push
cmp
lds
popa
cmpsl
push
xchg
std
dec
jbe
inc
dec
int
test
insl
nop
push
push
sbb
movsl
insb
stc
das
jbe
xchg
jbe
jl
sbb
dec
pop
js
clc
movsb
or
cs
addb
sbb
cmpsb
into
repz
into
test
fmull
in
idivl
testb
sbb
add
inc
mov
fcmovu
stos
xor
mov
jp
sbb
mov
dec
lods
xor
cli
enter
xchg
ja
xor
mov
or
js
aaa
scas
cld
dec
cmpsb
es
mov
dec
cli
jmp
jg
push
jecxz
lcall
jb
mov
jo
adcb
clc
cmp
into
xor
xchg
or
imul
or
xorl
adc
insb
sub
pop
push
mov
sub
out
das
push
inc
mov
jae
sub
xchg
cmpsb
loop
lods
das
cmp
dec
mov
mov
cmp
iret
mov
sti
insb
jmp
scas
arpl
fwait
sbb
xchg
mov
mov
fwait
mov
mov
pop
pop
pop
and
ficompl
or
nop
ljmp
call
jp
scas
xorb
dec
scas
push
ss
cld
sub
sbb
xor
push
out
and
and
clc
mov
sub
pop
xor
sti
mov
inc
sub
push
cmpsb
adc
mov
jo
cmp
ja
inc
rorb
icebp
mov
mov
cmpsl
push
sbb
sub
add
push
inc
ja
adc
xchg
pop
lods
pop
test
js
cmpsl
imul
ret
xor
pop
pop
sbb
popf
movsb
adc
in
pop
cmp
dec
xor
hlt
imul
pmuludq
bound
jne
sti
xchg
jbe
enter
or
jb
xchg
cmp
in
cmp
pop
mov
xchg
hlt
mov
mov
cmp
mov
cmp
adcl
mov
hlt
lods
outsb
add
adc
push
aad
push
cmc
mov
idiv
call
cld
inc
jbe
push
mov
js
add
scas
es
dec
movsb
stos
push
dec
das
daa
loop
cmp
jl
cmp
std
mov
mov
cmpsb
pop
fidivs
mov
lea
inc
sahf
sub
aas
lret
dec
mov
push
mov
andb
shlb
cmpsb
cwtl
rclb
and
pop
int3
sub
mov
mov
push
mov
sar
adc
jne
int3
pop
outsb
es
fnstcw
mov
clc
ja
js
xchg
sbb
clc
mov
ret
cmp
dec
and
dec
xchg
mov
in
subb
daa
insb
push
scas
jo
push
and
rorl
mov
xor
into
addr16
daa
push
mov
jae
jl,pn
idivl
add
or
push
fcmovb
mov
repz
pop
mov
push
cmp
add
js
cmp
cs
shll
sbb
das
ret
lahf
push
mov
cmc
dec
ret
inc
xchg
xchg
adcl
sub
mov
test
mov
mov
cmp
pop
mov
lret
and
push
ret
jle
aad
sub
add
add
mov
add
dec
insb
aad
mov
aad
je
popa
add
push
dec
jmp
xchg
mov
adcb
insl
push
inc
out
push
shll
jns
in
subb
xor
mov
inc
add
and
jp
mov
adc
arpl
sbb
js
sbb
cmpsl
mull
dec
push
stos
jae
sbb
mov
jb
cld
mov
adc
iret
mov
pop
pop
sbb
mov
inc
jmp
inc
and
pushf
pop
mov
outsl
push
dec
sti
testb
add
cltd
xor
jb
and
inc
in
scas
jle
mov
test
xor
popf
loop
mov
fwait
sti
lret
inc
testl
mov
jnp
shlb
fwait
cmp
cld
mov
cltd
adc
cld
fistps
in
shll
sbb
dec
ljmp
mov
cmp
je
int3
xchg
pop
out
xor
loope
inc
aaa
adc
xchg
sbb
aas
je
dec
int
sbb
jns
mov
xor
popfw
xor
addl
inc
addr16
adc
cmp
push
pop
insb
and
jns
dec
mov
adc
pop
mov
jbe
ljmp
clc
fldenv
mov
pop
push
push
jge
adcl
arpl
imul
ret
mov
popa
xchg
sti
pop
into
and
ss
sbb
es
jb
loope
pop
push
ja
cmp
psubq
push
cmp
adc
std
push
add
subl
mov
xchg
jnp
xchg
cltd
or
push
inc
sbb
imul
aas
inc
div
add
imul
ret
daa
cmc
out
adc
pop
movsb
arpl
cld
push
xor
iret
jp
and
cmpsl
jmp
sub
test
in
pop
enter
shrb
in
outsl
dec
int3
xchg
icebp
hlt
fwait
adc
cmp
push
mov
jge
sbb
jb
add
cmp
jns,pt
jmp
out
jbe
push
add
lods
cmpsl
add
jle
inc
cmpsl
shll
int
or
push
mov
dec
loope
mull
aad
into
cli
inc
outsb
mov
sbb
push
dec
push
loope
cmp
divl
xor
mov
enter
into
adc
xchg
repnz
add
bound
das
outsb
and
out
out
inc
add
cld
jecxz
ljmp
adc
mov
outsl
sub
es
mov
dec
cmp
mov
pop
je
nop
xchg
sbb
dec
lds
dec
mov
in
push
adc
or
lea
adc
xor
notb
jo
xorb
jle
pop
cmp
in
in
or
aas
mov
jae
pop
out
xchg
daa
mov
loope
adc
jns
test
adc
push
sbb
mov
mov
into
mov
fiadds
mov
jae
fsubrl
mov
xchg
pop
pop
jl
cmpb
mov
jecxz
mov
es
fmuls
inc
mov
test
push
jns
inc
nop
sbb
push
leave
cmp
cs
push
inc
xor
test
inc
repnz
mov
jmp
sbb
stos
or
mov
notl
nop
dec
jl
pop
or
insl
insb
aaa
push
fisttpll
inc
popa
daa
in
std
inc
pop
cmp
arpl
rorl
mov
lds
sub
notl
aas
xor
adc
out
roll
into
fnstsw
cli
adc
sbb
lret
push
test
mov
pop
adc
mov
sbb
addr16
out
daa
sub
pop
sahf
clc
inc
xor
pop
aam
adc
pop
mov
adcl
adc
cmp
mov
sub
sub
out
das
mov
shll
lods
in
push
inc
cs
push
mov
aam
adc
jnp
mov
mov
add
adc
clc
je
clc
push
divb
pop
dec
push
xchg
clc
sahf
mov
cwtl
cmp
repz
push
inc
inc
cmpsb
or
lret
jmp
add
pop
jne
mov
adc
mov
inc
js
or
mov
cmp
dec
push
movsl
pop
ss
inc
inc
xlat
mov
mov
or
scas
push
fsts
push
adc
inc
xor
insb
stos
je
cld
fnstsw
movsb
mov
push
push
loop
inc
je
popa
ss
adc
inc
pop
mov
aas
ror
jl
mov
test
push
stos
or
mov
mov
loop
aam
aad
cmp
mov
jbe
pop
mov
dec
xor
cmpsl
sar
mov
in
fistpll
sbb
or
aad
in
aas
push
mov
jbe
add
cld
addr16
inc
pop
inc
push
add
cld
mov
mov
cs
jl
popa
arpl
sub
sti
add
jge
adc
push
inc
inc
jl
cmp
pop
adc
dec
and
xchg
lea
xorb
mov
mov
xchg
in
ss
dec
cmp
push
sub
adc
push
push
xor
push
ret
jne
dec
aas
mov
sbb
ljmp
scas
cld
stos
cmp
mov
js
push
pop
or
sbb
cmp
ja
pop
jb
cmp
inc
push
jg
cmp
mov
cwtl
pop
mov
test
cmp
inc
add
hlt
movsb
dec
push
push
addr16
and
sub
aas
imul
xchg
shll
jbe
mov
hlt
out
xchg
ljmp
push
cmpb
sub
cmpsl
lds
push
push
inc
inc
ss
loopne
adc
loope
hlt
outsb
inc
xlat
xchg
lock
add
sub
fcoml
rcll
scas
std
cltd
pop
std
fpatan
cmpsb
jg
mov
pop
inc
cmp
dec
jno
lods
jge
xchg
xchg
xlat
movl
lods
shlb
push
mov
dec
sub
clc
dec
test
bound
mov
daa
nop
les
push
pop
xor
divl
sub
jne
fdivrl
cld
fucomip
xchg
arpl
cwtl
jns
jg
fisubl
push
jl
cld
pushf
cmp
push
mov
push
movsl
shll
adc
leave
jp
std
sti
dec
int3
mov
mov
idivl
subl
lods
rcll
data16
push
xchg
dec
xchg
push
movsb
dec
add
mov
in
cmpsl
test
push
inc
and
leave
cmp
popf
sbb
shll
icebp
xor
mov
mov
fcomps
out
icebp
iret
sbb
jae
xlat
sub
clc
fnstenv
int
xchg
xlat
xor
push
push
xor
movsl
stc
iret
mov
xlat
ds
mov
icebp
mov
inc
loop
addr16
fdiv
mov
push
jbe
push
dec
xor
or
repnz
sarl
mov
out
and
cmovp
pop
cli
out
push
mov
adc
ss
jp
outsl
lods
sbb
inc
add
jo
pop
int3
adc
adc
out
rcrb
jecxz
jo
jo
les
mov
popa
hlt
mov
sarl
xlat
sarl
inc
repz
inc
pop
cld
cmc
mov
jno
xor
fldenv
mov
into
or
cmpsl
push
sbb
fcomps
rcrb
xor
cmp
dec
xor
out
add
dec
repnz
lock
lret
cmp
jmp
lock
pop
out
aas
fistpll
mov
jmp
mov
dec
scas
arpl
mov
add
cmpsb
loop
add
sub
or
cmp
xor
jae
int3
sub
ja
sbb
daa
mov
scas
jbe
loopne
lcall
daa
adc
xchg
mov
fs
mov
mov
insb
mov
icebp
aaa
push
or
lock
lods
loope
xor
add
pop
pop
daa
sub
mov
cmp
lock
jno
mov
jp
push
test
dec
sbb
mov
test
xchg
push
out
repz
js
xchg
push
adc
in
push
mov
hlt
push
in
sub
mov
sub
mov
xor
mov
push
and
clc
dec
mov
xorb
test
pop
pop
xchg
out
xorb
push
cmpsb
cmc
mov
addr16
jl
subb
nop
mov
xor
in
rorb
push
out
cwtl
push
pop
mov
shlb
pop
insb
pop
cs
inc
xor
lea
xor
fnstsw
out
dec
jbe
ja
xor
push
mov
inc
mov
ljmp
out
andb
jno
rclb
out
in
pop
cmp
mov
mov
rcrb
mov
lock
aas
ret
jle
pop
popf
adc
adc
xchg
dec
mov
mov
inc
hlt
cmp
xlat
aam
sub
mov
repz
mov
sbb
testb
ss
out
adc
movb
jns
mov
mov
xor
js
jp
mov
and
cmpsb
mov
push
cmp
fnsave
xor
inc
sbb
xchg
jecxz
adc
leave
out
jo
pop
fidivrs
xchg
repnz
popf
push
mov
testl
inc
leave
cmp
leave
adc
push
mov
scas
into
pop
mov
ds
jg
adc
fldl
filds
mov
into
push
sti
push
and
cmp
repnz
jno
in
jne
test
inc
pop
push
pop
adc
xchg
dec
out
inc
daa
pop
dec
cmc
push
dec
mov
sbb
mov
popa
mov
mov
lds
ja
aaa
jbe
sub
sbb
sbb
lods
pop
mov
jmp
xchg
xchg
addr16
pusha
or
sbbb
popa
fsubrp
mov
jne
cs
or
xchg
test
pop
in
out
loopne
sub
sub
pop
ret
pop
dec
or
mov
pop
rcrb
jno
loope
imul
pop
nop
lods
sbb
sarl
mov
jle
jecxz
mov
sbb
lret
push
test
mov
outsb
out
inc
test
sub
mov
mov
cmp
sub
sarl
mov
nop
xchg
sub
jno
ja
xchg
lret
mov
mov
add
das
jp
hlt
add
aam
out
adc
test
add
mov
cld
data16
in
sbb
push
lds
call
lods
adcl
xchg
dec
push
cmc
loopne
add
lods
adcl
cmpsl
jbe
xor
jo
ret
daa
test
lods
icebp
adc
mov
hlt
aam
movsb
popf
js
pop
pop
jbe
xor
add
mov
jg
or
cmp
push
in
clc
test
xor
mov
je
pop
ss
nop
test
jecxz
nop
movsb
in
repnz
inc
pop
sub
lret
and
cmc
fcoms
push
pop
scas
mov
lret
adc
js
add
mov
lock
xor
rorb
outsb
mov
ficomps
lods
xchg
jb
popf
sub
ljmp
push
cld
or
xchg
and
negl
push
jbe
push
push
mov
pop
inc
push
xor
mov
dec
xor
addr16
iret
jbe
rorb
pop
xor
dec
fidivrs
cltd
stos
add
xchg
pop
cmp
cmp
loopne
sahf
inc
ja
pop
imul
or
jne
lods
push
ss
cmp
lock
or
mov
cmp
icebp
jno
pop
push
jl
jp
or
test
test
aas
sub
mov
pop
mov
pop
fists
mov
cmp
sbb
arpl
pop
dec
shll
shll
popf
insb
cwtl
add
push
pop
cs
pop
sbb
inc
jb
jl
je
cld
cmc
pop
int
addl
sbb
cmp
jno
les
addb
lods
xchg
dec
jno
lods
add
ss
sub
roll
adc
sub
sar
or
jnp
push
cmp
pop
in
push
cltd
cld
ds
sbb
lods
jne
cmpsl
dec
pop
and
mov
and
sbb
ss
mov
repz
jp
daa
xor
ds
je
xor
adc
push
fs
add
push
xlat
xchg
call
mov
xchg
dec
add
jl
test
xchg
jp
call
popa
jg
leave
mov
push
in
jbe
push
incb
dec
daa
mov
orb
ja
icebp
pop
cmp
add
push
sub
je
stos
push
divl
loope
dec
lret
outsl
pop
mov
sub
ss
je
movsl
in
fwait
test
sar
adc
jg
cmc
lock
insb
lahf
and
push
repnz
adc
sbb
adc
shlb
inc
sbb
cmpsb
pusha
mov
pop
pop
outsl
fucomi
iret
add
bound
adc
push
inc
lret
adc
sbb
mov
sub
andb
cmp
cltd
imul
jbe
or
mov
cmp
jne
orb
adc
jb
jecxz
sub
push
push
test
add
push
add
dec
jo
into
cld
arpl
in
add
xchg
divl
sar
jl
mov
lds
int3
fimuls
add
mov
jmp
cmpsl
add
push
jns
ja
idivb
addr16
leave
jnp
push
mov
and
icebp
cli
out
mov
pop
mov
mov
cli
mov
mov
sub
aam
sarl
inc
jne
ds
test
insl
out
push
test
jo
ret
lcall
bound
xchg
mul
and
ja
push
ljmp
push
dec
cmc
es
mov
lods
push
scas
nop
out
push
mov
jmp
je
std
in
cld
lret
or
mov
add
arpl
mov
xor
push
shll
ljmp
decl
pop
push
jg
and
iret
dec
push
adc
pushf
pop
shll
shl
pop
das
cmp
jns
aas
adc
loop
jnp
pop
jmp
sbb
aam
pop
xor
adc
ljmp
lock
xor
pushl
mov
sub
or
pusha
int
and
ss
push
xlat
jns
sbb
pop
test
loope
inc
push
into
cmc
out
hlt
jns
sbb
adc
push
pop
rol
into
js
ficompl
lods
and
js
inc
mov
push
add
jbe
hlt
xchg
adc
cmc
push
jp
addr16
jno
or
cmp
fnstsw
out
mov
jmp
adc
push
inc
cmp
sbb
stos
mov
insb
fcomi
ficoms
pop
sub
shl
mov
dec
mulps
and
push
arpl
sub
inc
lock
into
or
push
pop
adc
mov
int3
cmpsl
into
js
setb
sar
inc
popf
sub
cmp
mov
xchg
scas
mov
push
aam
cmp
xchg
cmp
sbbl
loope
and
cltd
shrl
mov
xchg
insl
daa
pop
inc
mov
xchg
add
xor
test
adc
and
js
mov
sbb
pusha
dec
xor
or
jae
fwait
push
inc
addr16
shrb
mov
insb
faddl
push
push
out
mov
mov
xchg
test
xor
aam
jo
push
jp
cmpsb
or
add
aaa
xorb
xor
imul
mov
js
lret
pop
sahf
daa
in
pop
push
out
xor
mov
inc
cmpsl
push
hlt
jo
inc
loopne
das
loopne
sbb
sbb
sub
push
push
inc
jb
xchg
xchg
es
mov
dec
lea
test
lds
imul
jmp
icebp
add
mov
jmp
test
push
cld
icebp
mov
jmp
or
je
sub
jp
adcb
mov
icebp
std
cmpsb
imul
dec
jge
mov
mov
fisubrs
lock
mov
loop
ret
adc
pop
pop
push
push
mov
repz
cltd
xchg
push
cmc
rolb
xor
push
cmpsl
ja
and
sbb
xlat
push
rclb
push
add
and
into
test
xor
insb
lods
imul
pop
dec
jg
xchg
hlt
xchg
int
cld
std
xchg
lods
test
jecxz
mov
sbb
cmc
pushf
push
jmp
mov
xchg
fstps
sub
fstpt
addr16
push
ds
mov
mov
cmp
stc
mov
push
ljmp
loop
mov
and
js
std
pop
pop
inc
jmp
jmp
js
jb
aaa
inc
jae
cmp
test
push
scas
fs
loope
aad
fisubl
sbb
loop,pt
sbb
popa
jae
mov
xlat
call
imul
sbb
test
fistl
cmp
pop
cwtl
idivl
enter
clc
lods
xor
xchg
push
fdivrs
movsb
cmp
jnp
push
sbb
pop
jne
push
and
cltd
dec
xor
int
mov
push
out
jne
sub
les
push
js
nop
outsb
xchg
jns
incb
mov
cli
ds
fimuls
outsl
mov
xor
inc
lock
pop
jo
aad
lods
xchg
mov
sti
enter
push
dec
into
push
cmpsl
scas
push
cmc
adcl
pop
inc
or
push
mov
xor
cld
xchg
insb
fmuls
push
ja
sbb
pop
adc
daa
pop
sub
push
pop
ss
xor
cmp
fdivrp
push
inc
cld
xor
addr16
jp
xor
out
dec
pop
jbe
cli
xchg
lcall
push
lock
adc
das
out
push
addr16
push
mov
das
bound
or
insl
aas
int
adcl
inc
inc
inc
sbb
mov
lock
inc
shrl
out
and
sbb
mov
mov
repnz
pop
pop
jbe
clc
adc
adc
repz
dec
mov
ret
lods
pop
sbb
xor
sti
lock
jno
mov
dec
cmp
ficoml
enter
mov
mov
inc
push
ja
imul
aam
dec
xor
pop
out
cmc
in
xchg
mov
repz
push
add
sbb
test
test
xor
in
dec
cli
push
je
xor
cmpsb
les
mov
pop
das
xor
jbe
push
mov
mov
dec
jl
lods
push
mov
lods
nop
xchg
sti
mov
push
adc
les
aas
push
clc
xchg
sub
add
fsubrs
scas
mov
cld
fidivrs
sbb
testl
push
lods
and
cmp
push
pop
stos
mov
std
mul
jecxz
cmpsl
addr16
mov
mov
fsub
sbb
ret
clc
sti
lret
push
mov
imul
mov
sub
mov
push
mov
jo
clc
push
sbb
sbb
inc
int
sti
pop
push
mov
jb
push
add
dec
bswap
icebp
mov
daa
test
jbe
sbb
pop
stos
jp
push
sub
mov
jnp
or
jns
push
mov
mov
sbb
lcall
lock
inc
mov
lea
xor
mov
mov
cmpsb
mov
push
lret
adc
scas
flds
xchg
mov
jno
xchg
jo
out
sahf
sarl
jo
adc
addr16
adc
pop
xor
daa
sbb
xcrypt-ecb
cmp
or
or
repnz
mov
sti
mov
gs
aas
sahf
mov
pop
jb
fistpl
dec
jne
jp
mov
notl
in
roll
pop
loopne
push
mov
hlt
sbb
mov
add
sub
push
mov
loope
out
aam
test
clc
jbe
ljmp
adc
orl
xchg
es
scas
cwtl
pop
adc
push
sub
mov
daa
cmp
mov
icebp
xchg
mov
jmp
inc
sbb
and
in
aas
into
dec
cmpb
mov
cmp
fstp
cld
negl
mov
cmp
push
repz
or
pop
arpl
test
call
adc
insb
mov
outsl
mov
adc
nop
mov
mov
loope
flds
unpckhps
rcrb
shll
lcall
inc
lock
xchg
fcmovu
adc
aaa
pop
aas
adc
daa
add
stos
sub
mov
push
dec
sbb
push
mov
push
test
add
dec
xor
movsl
sub
mov
mov
idivb
out
push
cld
or
adc
test
mov
sbb
adc
sbb
cli
push
out
and
movsb
mov
lock
pushf
xlat
jmp
mov
mov
loope
sbb
repnz
or
lret
outsl
clc
or
jne
pop
repz
mov
in
aaa
ret
je
lahf
outsb
in
xor
push
push
cli
shl
pop
jo
sbb
pop
push
popa
lock
jecxz
inc
xlat
cmp
nop
push
adc
sub
aaa
dec
sbb
xchg
mov
push
lahf
push
pop
xchg
mov
cmc
mov
jo
je
rorb
or
repnz
ss
add
add
lahf
dec
andl
out
xchg
rorl
in
jmp
movsl
or
or
cli
pop
out
addr16
push
pop
test
jae
cmpsl
shrb
ss
sub
add
inc
mov
jecxz
hlt
adc
jl
lods
jmp
inc
mov
in
mov
leave
cli
lock
cmp
lods
mov
push
cwtl
jno
lahf
pushf
mov
adc
pop
clc
in
dec
cmp
pop
outsb
add
jmp
xchg
rorb
push
xchg
mov
mul
testl
and
adc
xchg
outsl
xor
sqrtps
xor
sub
mov
cwtl
daa
je
cmpl
daa
scas
shlb
cld
das
mov
insb
or
popf
out
popa
repz
sub
js
nop
xor
cli
and
scas
ja
adc
movsb
outsl
cmovae
push
push
dec
pop
xor
sub
cmp
dec
clc
clc
je
sbb
lds
inc
pop
push
cltd
mov
scas
into
mov
or
test
xor
rcrb
pop
pop
mulb
loop
xchg
in
jmp
mov
js
lock
jns
jns
iret
jmp
pop
lret
ss
push
jmp
loop
lock
sub
ret
xor
push
sub
pop
sahf
aad
push
shl
aaa
inc
mov
data16
cmovo
inc
bswap
cmc
dec
cmp
xor
test
lods
jbe
or
leave
in
add
lock
cwtl
mov
int3
shl
pop
xchg
pop
mov
inc
faddl
loop
sub
aad
mov
faddl
sbb
test
push
and
sbb
mov
push
aas
push
rclb
out
loope
add
lock
and
and
cmp
je
push
out
test
jbe
mov
movsb
lods
out
in
gs
cmp
ds
cmp
clc
fwait
pop
and
push
push
add
cmpl
jbe
mov
xchg
fmuls
stc
mov
lea
test
je
push
cmp
loopne
mov
push
xchg
push
out
xor
divb
dec
adc
addr16
sbbb
js
push
mov
ja
add
dec
loope
inc
cld
lea
jne
loopne
cmp
dec
loop
xchg
push
rcrb
js
clc
cmpsl
mov
enter
addl
push
cli
test
jne
sti
adc
std
push
int3
mov
pop
rcrb
jecxz
jle
js
jb
loop
xchg
es
or
inc
out
fildll
xchg
clc
mov
das
pusha
inc
dec
lock
xchg
in
cli
xchg
sbb
fs
sarl
xchg
sbb
sbb
cmc
roll
std
mov
xor
nop
movsb
test
jnp
scas
pop
jg
insl
std
shrb
movsl
stos
cmp
sbb
imul
inc
or
pop
shr
and
dec
xchg
and
mov
out
shl
add
jne
pop
sbb
and
push
push
movsl
jecxz
cli
or
aaa
pop
into
bound
mov
loopne
mov
mov
mov
inc
bound
push
push
enter
add
inc
xchg
into
mov
pop
cmc
cli
lock
in
adc
int
adc
jo
daa
mov
pop
push
mov
inc
into
lea
sub
add
mov
popf
icebp
xorb
jne
mov
aam
adc
adc
cmp
int3
sbb
js
jge
imul
mov
movsl
xor
and
pop
lcall
mov
xor
xchg
lock
pop
adc
pop
notb
push
stos
pop
daa
aaa
shll
push
add
xchg
lock
and
xchg
cwtl
pop
into
ss
pop
xchg
sahf
out
subb
xor
in
mov
fdivs
mov
addr16
lea
test
mov
mov
icebp
bound
movsb
dec
xchg
movsb
and
push
mov
mov
dec
cmp
cmp
movsl
xor
pop
cmp
lea
or
imul
xor
push
leave
fsts
and
push
add
mov
jg
jmp
lcall
repnz
lock
insb
lock
add
jge
das
inc
pop
cmc
mov
xlat
push
cmp
jnp
xor
fisttpll
push
popa
cmp
sbb
dec
pop
ja
mov
fcomip
and
mov
pop
inc
dec
or
jnp
sub
jmp
xor
sti
arpl
ffree
xchg
push
push
sbb
xchg
adc
jbe
jbe
fldenv
push
fprem1
sbb
in
negl
cmp
in
inc
sub
add
testl
decl
xor
mov
sbb
cwtl
sub
jle
dec
es
pop
jo
push
add
call
xchg
int
mov
or
iret
testl
sub
adc
sub
aam
sub
movsl
inc
popa
xchg
mov
data16
xor
test
mov
lods
xlat
push
repz
adc
out
mov
bound
pushf
ss
sbb
roll
xorb
arpl
jne
daa
or
adc
push
add
movsb
dec
out
cs
jb
mov
mov
jp
or
push
xor
adc
mov
or
ret
test
jg
aas
outsl
push
sbb
sbb
aaa
js
into
jbe
daa
mov
icebp
inc
dec
sub
push
pop
pushf
popf
xchg
iret
mov
fadd
lret
mov
dec
mov
decb
ljmp
call
sahf
xchg
dec
dec
sbb
daa
enter
stos
pop
arpl
xor
movsl
jb
mov
pop
push
dec
stc
icebp
mov
push
test
push
in
pop
enter
mov
sbb
xchg
sub
or
push
cmovbe
mov
into
dec
sub
test
lahf
cmp
cld
jb
fldl
pop
add
jecxz
jle
or
push
call
sbb
push
push
xor
sti
sbb
jo
rorl
fmull
sub
fisttpll
sub
and
xor
adc
cmpsb
cltd
movsb
out
cmpsb
mov
jecxz
push
or
or
sbbb
out
psubd
mov
sub
nop
in
pop
int
add
add
add
mov
enter
loope
aad
fildll
je
push
call
cmp
mov
outsb
lods
push
pop
fildll
inc
aam
xor
mov
mov
sarl
rclb
sbb
push
or
add
xor
xchg
shrb
into
and
xchg
push
sbb
jbe
js
adc
xor
js
jg
mov
dec
dec
out
and
repz
imul
add
int
cwtl
mov
mov
fdivr
pop
adcl
sbb
xor
fwait
repnz
out
mov
push
ja
cmp
inc
jecxz
roll
inc
xchg
lahf
das
or
or
int
je
je
adc
xor
popa
pop
adcl
push
cs
je
mov
rolb
pop
lds
repz
pop
inc
je
hlt
mov
cmp
dec
movsl
jnp
lret
dec
popa
roll
aam
sbb
je
inc
jo
popf
mov
nop
pop
push
sub
jecxz
cmp
ljmp
lock
cmc
mov
cmpsl
cmp
hlt
inc
je
outsb
inc
fiadds
fwait
mov
pop
fcmovnu
jl
mov
loope
sti
popf
bound
iret
daa
pop
dec
sbbb
cmp
lcall
sbb
cld
inc
cmpb
iret
out
add
xchg
subl
addl
adc
inc
pushf
sbb
pop
xchg
xchg
ljmp
ficomps
mov
jno
mov
arpl
lods
and
mov
cmp
fmull
test
jo
jnp
cmp
adc
hlt
jl
pop
test
cmp
inc
lods
mov
dec
shll
lods
jno
cwtl
xchg
int3
movsb
pinsrw
add
xor
insb
je
outsl
ret
aaa
push
lock
mov
mov
cmpsl
test
xchg
xchg
test
fadds
mov
mov
push
jo
inc
daa
out
je
push
pop
cmp
fs
addr16
and
shll
stc
fnstsw
sbbl
ret
lcall
outsb
cmp
jmp
and
cwtl
dec
arpl
out
pop
cmpsl
lahf
xchg
cs
outsb
and
jmp
xor
xlat
ret
push
sbb
test
push
mov
negl
jnp
imul
push
mov
stc
pop
sbb
xchg
dec
mov
add
adc
in
jmp
ljmp
es
cmp
adc
pop
xor
lcall
mov
stos
sar
xor
loopne
lret
insb
popf
sar
aaa
mov
ljmp
push
loope
pop
lret
or
push
rolb
and
jae
addr16
push
add
in
mov
out
ret
pop
adc
pop
mov
lods
sub
insb
dec
adc
lret
lock
pop
addr16
mov
insb
add
fidivrl
js
lods
push
cmp
test
jecxz
loopne
sbb
ret
xor
divl
jnp
ja
adc
xor
out
cmp
sub
lret
sub
sbbb
enter
mov
aas
test
loop
lods
sbb
or
sbb
cmp
ss
inc
push
out
incl
push
push
imul
pop
add
cld
in
popa
adc
or
jno
sub
test
jne
cmp
js
jp
scas
loop
test
std
or
jo
test
xor
out
movsl
aaa
js
dec
xchg
fdiv
scas
leave
mov
and
jns
pop
fisttps
ja
push
push
test
pop
ffree
pushf
adcb
hlt
pop
frstor
jl
mov
push
sbb
lahf
xor
mulb
outsl
dec
xchg
add
lahf
pop
repnz
or
sbb
cli
adc
sarl
jno
dec
js
je
adc
icebp
mov
in
lock
sarl
stos
pop
pop
cmovp
xlat
xor
mov
sub
das
and
jnp
jmp
dec
bound
push
push
sbb
inc
idivl
icebp
hlt
cltd
jbe
mov
pusha
cmpsb
arpl
inc
shl
adc
imul
adc
add
mov
jmp
fbstp
out
das
xor
lods
clc
cmp
and
cld
jne
out
mov
or
clc
adc
jmp
sar
daa
or
aaa
pop
jp
ds
xor
pop
aaa
mov
mov
xchg
xchg
iret
pop
adc
into
mov
mov
pop
cmp
pop
inc
nop
das
rcrl
jo
sbb
lret
daa
fdivrs
ds
out
and
xlat
loop
mov
xchg
in
gs
or
mov
push
dec
mov
dec
xchg
dec
push
cld
xor
stos
inc
xchg
repz
jae
mov
sbb
je
lcall
sbb
std
iret
test
jns
test
pop
sbb
ror
mov
cmp
daa
cli
leave
mov
ss
clc
fldenv
loope
fcmovu
cmc
mov
sarl
ds
sahf
xchg
push
stc
push
pop
mov
pop
add
dec
loopne
push
fsubrs
mov
cmp
pop
push
fidivl
jecxz
jbe
inc
cmc
adc
xchg
mov
mov
testl
sub
lcall
lods
jnp
bnd
adc
ja
lock
icebp
shrl
jns
dec
out
lods
das
cwtl
orb
in
sub
rolb
out
dec
sbb
mov
outsb
hlt
test
nop
adc
insb
cmc
out
sbb
jno
icebp
adc
xor
aad
div
ja
into
cmp
cmpsb
push
bswap
das
hlt
lcall
gs
inc
ffree
lock
cli
push
jns
jl
pushf
mov
jp
mov
lcall
dec
xorb
loope
inc
jae
jecxz
adc
cwtl
push
mov
clc
and
fs
pop
inc
enter
icebp
fwait
push
out
fwait
jge
dec
out
leave
addr16
mov
adc
out
in
repz
xchg
pop
mov
in
lahf
call
out
movsl
addb
sbb
imul
std
jo
mov
add
sub
sub
lret
xlat
sub
mov
scas
xor
je
aaa
jecxz
fnsave
clc
inc
shr
push
das
repz
mov
js
cmp
push
ljmp
shrl
push
test
sahf
repnz
test
stos
into
out
or
mov
mov
neg
pop
mov
lods
outsl
leave
dec
fildl
movsb
adc
ss
jl
mov
cltd
lods
and
dec
xor
push
cmp
pop
sbb
test
fs
xchg
ja
mov
mov
xor
or
repz
subb
sbb
xor
push
adc
inc
scas
lock
scas
icebp
dec
jp
push
push
imul
push
mov
mov
enter
xchg
add
sub
daa
scas
outsl
sub
imul
fadd
fists
into
cmpsl
and
jp
sbb
mov
scas
in
and
adc
mov
cmp
jl
mov
add
loope
xor
add
mov
mov
mov
adc
jb
daa
imull
mov
aaa
imul
and
je
js
jnp
in
mov
pop
mov
hlt
into
jne
pop
add
push
popa
push
sbb
jne
icebp
inc
jnp
inc
cmpsl
jno,pn
sbb
fwait
lcall
movsb
mov
xchg
sbb
sub
inc
add
dec
mov
and
popf
pop
inc
lret
adc
je
dec
leave
inc
inc
stos
dec
ret
mov
gs
into
add
hlt
lock
adc
mov
and
xor
xlat
and
outsl
and
fists
push
js
mov
fdivr
cld
adc
neg
cmp
mov
inc
ficomps
mov
movsl
or
cmc
mov
icebp
dec
mov
nop
outsl
adc
rcrl
and
incb
inc
adc
out
push
outsl
sti
fnstcw
leave
xlat
call
jb
and
push
inc
decb
inc
push
insb
js
add
dec
rcrb
das
cltd
mov
xor
jo
das
popa
jp
jo
sub
and
cltd
jno
lods
in
subl
and
jbe
repnz
pusha
test
mov
mov
inc
dec
sbb
jbe
scas
push
jo
pop
cld
xlat
hlt
push
outsb
popf
out
call
dec
add
sti
sub
rolb
ss
jno
adc
ja
cmc
repz
insl
fs
add
xor
pop
popa
mov
int
addr16
xlat
popa
add
daa
mov
xchg
clc
adcl
js
loopne
mov
cmc
mov
sub
add
add
push
fcmovnbe
imul
push
push
push
in
or
dec
sbb
lret
mov
lock
mov
es
mov
inc
push
out
clc
jne
lahf
push
jns
push
psubusw
insb
sbb
cs
daa
adc
nop
loopne
mov
inc
fisttpl
jl
cmp
fildll
rclb
repz
or
pop
cli
mov
sub
push
jns
subl
jl
mov
out
or
scas
mov
test
add
and
lea
sub
scas
xchg
push
push
out
mull
cmpsl
sub
mov
xchg
aam
daa
aad
inc
cmc
data16
adc
or
adc
push
mov
jle
pop
test
sub
cltd
fidivrs
sbb
pop
clc
xor
mov
xor
daa
jo
sub
rcrb
ret
loop
xor
int
lock
push
sbb
movsl
mov
cmp
pop
pop
sbbl
cmc
movsb
mov
push
xchg
cmpsb
mov
mov
mov
cmpsb
mulb
cmp
jns
es
mov
ficomps
jg
mov
sub
icebp
or
xchg
sub
sub
cmp
mov
dec
inc
sub
jb
mov
sbb
sub
into
push
cmpsl
xchg
hlt
or
fucomi
push
mov
jns
shrb
js
shll
adc
aad
ret
pop
icebp
aam
inc
mov
dec
cmpsb
inc
xchg
movsb
stos
xchg
cmp
and
hlt
inc
shll
add
mov
hlt
jne
xchg
cmc
out
add
aam
stos
mov
sub
xchg
xchg
pop
mov
aam
add
mov
adc
cld
xor
xchg
add
jno
cld
inc
inc
sbb
clc
notl
cld
and
testb
xlat
repnz
and
and
fisubrl
adc
jno
push
xchg
dec
xchg
mov
jno
imul
and
sub
push
out
sub
mov
ja
dec
xchg
aam
adc
imul
aam
mov
test
pop
jne
push
dec
loope
add
jecxz
or
xchg
je
or
xchg
cli
jp
sub
into
sub
das
push
cmp
and
cmp
in
mov
in
lret
mov
sti
xorb
daa
add
nop
cld
lea
lret
xor
adc
dec
cmp
dec
mov
pop
out
lock
add
mov
push
jle
adc
add
xor
add
fsubp
mov
xchg
sti
inc
lds
out
inc
scas
pop
xchg
je
rcll
out
and
out
sbb
mov
xorb
in
dec
lret
push
jmp
and
dec
jg
daa
or
jnp
mov
not
add
xchg
ret
cltd
pop
scas
stos
sbb
addb
xor
pop
cmpsb
fnstenv
or
adc
push
push
ret
xchg
inc
or
popa
or
bound
xchg
xchg
outsl
push
divb
pop
das
add
flds
sbb
push
push
leave
sub
xor
mov
adc
sbb
shrb
icebp
mov
insb
idivb
adc
inc
xchg
or
or
jb
xor
inc
cltd
push
dec
and
push
lahf
lcall
sub
aaa
fdivr
enter
jp
dec
jae
inc
or
sbb
xor
ja
js
lret
jmp
test
stos
mov
in
pop
mov
xor
mov
xchg
repz
pop
pop
test
cmpsl
incl
mov
pop
cmp
pop
and
mov
daa
inc
daa
sbb
adcl
cwtl
test
mov
enter
sbbl
fdivr
jo
clc
pop
add
or
in
push
clc
jmp
cmpsl
push
js
ret
sub
faddl
add
loopne
movsl
and
lods
xchg
lret
out
push
outsl
mull
mov
push
aam
testl
stos
repnz
aaa
push
push
fdiv
outsb
push
mov
xchg
xchg
lock
bound
jns
pop
jbe
sbb
adc
aam
xchg
int
mov
jae
std
test
xchg
pop
andb
lods
mov
sbb
pop
rcll
dec
pop
mov
aam
ret
jb
fstps
xchg
push
or
jns
and
xlat
mov
rol
pushf
push
xorb
call
push
dec
ret
repz
and
jl
scas
jne
sbb
pop
sbb
sbb
pusha
mov
xchg
sti
inc
in
scas
aaa
jo
out
adc
cwtl
mov
pop
sti
adc
imull
je
in
nop
push
cli
test
iret
sub
into
in
or
mov
cmc
inc
xchg
sub
mov
fiaddl
pop
das
call
or
push
adc
xor
mov
shlb
jbe
fsts
das
daa
sbb
fsubr
dec
cmpl
dec
ret
shlb
push
hlt
mov
push
mov
adcb
sbb
jae
jb
fs
mov
xor
test
xchg
add
cmpsb
jbe
pop
dec
cmpsl
xchg
add
sub
cld
mov
xchg
sbb
pop
fistl
sbb
mov
aad
testb
or
xor
stos
mov
push
testb
pushl
push
lret
stc
add
add
ret
aad
pop
pop
mov
int
sbb
int3
repnz
out
insb
xor
sbb
mov
or
xor
fdivs
jno
imul
jecxz
js
add
mov
clc
cwtl
lods
leave
js
mov
adc
push
ja
cmc
push
jae
repz
jmp
iret
mov
testb
jne
push
shrl
cld
aaa
stc
pminsw
cmpsl
outsb
mov
stos
test
adc
jb
or
loope
std
dec
cmp
and
dec
cltd
pop
outsb
sbb
adc
or
cli
jns
pop
sbb
cmp
xor
xor
xchg
inc
loopne
jp
fsts
jns
cmp
mov
jb
sbb
lock
and
xlat
mov
shrl
mov
cltd
fnstsw
lahf
into
aas
xchg
jb
icebp
push
repz
lahf
ja
movsb
pop
cmp
pop
movb
jns
mov
adc
lahf
and
push
es
push
pop
pop
insb
mov
into
push
jae
or
add
mov
mov
pop
repz
scas
adc
ss
std
mov
cs
cmp
mov
xchg
adc
mov
data16
mov
sarl
dec
out
dec
pop
or
sub
das
pop
int
jmp
icebp
ja
les
outsl
fsubr
into
dec
dec
jne
fmull
les
adc
sbb
jge
sti
mov
dec
aam
sub
ljmp
out
cmpb
sub
push
inc
pop
dec
into
sbb
mov
push
cli
es
adcl
stos
adc
negb
mov
cmp
mov
sbb
test
inc
jmp
jns
clc
ret
fwait
mov
je
lock
fisubs
repnz
sbb
lock
mov
inc
nop
call
frstor
jnp
jge
xchg
push
jns
cmp
dec
add
in
jns
jge
jp
aad
hlt
test
add
lea
xorb
cmp
sub
pop
or
lods
nop
cmp
push
xchg
lcall
inc
je
add
mov
xchg
cli
sub
test
push
ja
cwtl
jle
and
cwtl
sub
xchg
and
cli
test
shrb
or
daa
xchg
mov
mov
or
addr16
bnd
fstps
imul
mov
sbb
cmp
push
xchg
pop
into
xchg
and
or
loopne
cmpsb
mov
mov
pop
dec
inc
lret
xor
jb
aad
cs
sbb
mov
dec
ljmp
incl
sub
das
jecxz
test
mov
sbb
mov
cmp
mov
into
mov
aaa
icebp
jae
cld
mov
dec
xor
sub
std
pusha
jne
fiadds
mov
hlt
mov
push
cld
shrb
inc
sbb
ficomps
mov
push
ja
sbb
jl
push
in
shrb
insb
movsb
mov
mov
lods
in
add
push
mov
arpl
sbb
call
loop
lcall
or
les
and
int
fmull
xchg
sub
js
jne
cmpsb
inc
and
mov
mov
out
pop
pop
adc
xchg
pop
pop
ffreep
pop
fistps
pop
mul
push
out
pop
pop
dec
jnp
mov
push
mov
jns
loop
iret
das
movsb
push
dec
pop
imul
sysret
mov
stos
scas
divl
push
aam
lcall
repz
cwtl
sbb
mov
jns
pusha
jecxz
xor
pop
orl
movsl
divb
test
sti
cmp
lret
aam
mov
push
out
xchg
daa
test
sub
xchg
in
inc
test
ds
leave
divl
loopne
cwtl
cwtl
divb
shufps
sub
pop
mov
pop
mov
in
or
js
cmp
notl
mov
cmc
xor
jne
adc
cmp
pushf
js
mov
pop
pushf
push
dec
add
hlt
shrl
inc
movsl
lods
jno
xchg
js
hlt
cmpsl
mov
xor
shrb
bound
jle
fistpl
jl
cld
cmc
pop
xchg
in
mov
mov
cmpsl
sub
in
pop
add
sub
aaa
repz
in
cld
mov
cli
mulps
in
cs
mov
mov
cmpsl
pushl
push
sbb
test
mov
mov
stos
popa
add
and
push
out
repnz
shrb
ss
inc
jbe
push
movsl
xchg
aaa
daa
adc
ja
xor
xor
ret
cmpsb
sbb
push
repnz
push
mov
xor
cmc
sbb
adc
cmp
mov
dec
pushf
dec
bound
lcall
cmp
jp
in
jb
test
fimuls
lods
clc
outsl
hlt
jmp
pop
bound
in
dec
outsl
rorl
test
adc
push
mov
push
push
addl
mov
push
or
sub
cmpsl
sbb
popf
lds
mov
sti
inc
pop
dec
ss
add
jns
xchg
jae
jl
lock
sub
cmp
notl
lods
scas
cmp
outsl
add
incb
scas
mov
adcb
mov
cmp
insb
cmp
daa
ja
jg
jle,pn
ss
mov
mov
mulb
mov
cld
hlt
sub
pop
fucom
jg
insl
clc
dec
pop
pop
into
cmpsl
iret
xchg
xor
xchg
mov
sub
adc
rclb
cmp
sub
lea
sarb
pop
jg
inc
insb
add
jnp
mov
pop
out
in
or
mov
insb
sbb
sahf
pop
mov
mov
mov
test
xchg
push
mov
movsl
aam
jns
add
pop
sahf
hlt
addb
push
test
andb
inc
ja
inc
xorl
stc
lock
xchg
scas
pop
push
push
xor
mov
inc
pop
testl
lea
sbb
roll
cmpb
or
lret
outsb
or
in
repnz
iret
mov
jno
push
scas
adc
fimuls
and
mov
lods
sub
dec
loope
push
or
dec
ja
dec
push
jns,pt
insl
lea
mov
xchg
call
imul
pop
cld
popl
mov
data16
dec
cmpsl
popf
adc
push
jp
ja
jp
mov
xchg
lea
out
or
icebp
mov
fidivs
mov
push
push
idivl
jno
dec
add
jns
push
fcomip
clc
addr16
xchg
out
ja
jnp
adc
cli
mov
pop
hlt
addr16
mov
push
sbbb
lods
ret
push
es
inc
clc
lret
cwtl
pop
adcb
adc
and
jo
dec
leave
loop
jbe
ret
cld
es
mov
pop
mov
inc
sub
loop
jp
pop
dec
mov
cmp
lock
or
dec
lods
daa
cmpsl
xchg
dec
leave
cs
shll
je
push
adc
adcl
xor
cs
inc
outsl
dec
push
cmc
cmpsb
loope
mov
mov
jp
mov
into
or
xchg
push
out
in
or
cmp
lahf
add
mov
call
mov
jmp
adc
lea
cmp
xchg
jno
and
imul
mov
pop
pop
xlat
nop
je
daa
pop
leave
mov
lods
popf
mov
outsl
lock
sbb
cli
mov
push
cld
int3
pusha
adc
jge
mov
lret
sub
fsubs
xlat
pop
adc
adc
sub
xor
mov
sbb
scas
lods
cli
push
pop
xor
cmp
jp
jge
jbe
sub
rol
shl
mov
adc
push
cmpsl
popl
push
adc
cmp
bound
xor
xor
push
in
push
jp
pop
scas
xchg
rclb
dec
rcrb
xchg
dec
addb
rcpps
in
jecxz
pop
lcall
scas
jae
ficomps
in
push
in
mov
in
push
iret
pop
test
inc
cmpsl
ret
mov
push
or
fisubs
mulb
pushf
push
aam
fisubs
psadbw
test
lds
adc
popf
xor
jne
pop
cmp
pop
cmp
movsb
addr16
je
scas
mov
insb
jns
jl
dec
inc
orl
inc
dec
cld
rolb
icebp
cmc
in
jae
outsb
mov
notb
push
scas
sub
mov
sub
xchg
out
adc
scas
adc
pop
pop
call
notl
scas
insb
cmpl
lret
ficomps
mov
inc
pshufw
jp
cltd
and
outsb
fisubrl
fwait
test
mov
adc
sbb
scas
fistl
sbb
ja
or
int
add
jmp
pop
popa
or
out
xchg
mov
inc
outsl
push
stos
repnz
insb
imul
gs
sbb
int
pop
repz
or
sar
push
or
jne
aaa
std
testl
stos
shrb
int
dec
xchg
fnstsw
xor
icebp
fdivs
mov
idivb
sbb
and
sub
lret
mov
xor
sbb
clc
xor
xlat
insb
sub
cli
cmp
mov
je
xor
pop
cmc
xchg
adc
push
movsl
scas
mov
cli
addr16
es
testl
adc
add
or
sub
movsl
inc
fcomi
lret
or
jl
push
jp
cmp
xchg
adc
mov
movsb
cld
bnd
loopne
cmova
mov
rolb
inc
dec
lret
adc
test
clc
rcl
mov
scas
add
fsubrs
xor
sub
or
and
negl
cmpsl
dec
mov
insb
xor
push
out
mov
cli
adcb
mov
xor
dec
xor
mov
adc
sbb
sbb
fldt
cmp
mov
cmpsb
repz
mov
mov
imul
daa
jg
lods
jge
pop
and
insb
jle
jl
out
add
jns
cmp
sub
test
and
js
xchg
sti
clc
out
movsb
into
pop
inc
xchg
push
and
mov
sub
in
xcrypt-ctr
cmpsl
pop
push
sub
push
pop
jge
pop
adc
daa
and
mul
push
xor
push
sub
lock
ss
cmc
mov
sbb
daa
push
lods
xor
test
in
daa
jns
and
mov
cmp
jle
mov
hlt
add
add
lret
inc
cli
add
mov
shll
mov
cmp
fndisi(8087
into
add
divb
repnz
jbe
push
and
dec
push
mov
push
repz
sbb
sub
xor
xchg
in
push
xchg
mov
lock
mov
nop
addr16
pop
rcrl
push
ficoml
out
out
lods
repz
cmc
jbe
jbe
mov
jne
push
xlat
jno
push
pop
pop
xchg
dec
mov
dec
push
dec
stos
add
add
shll
js
enter
scas
outsl
cmp
lahf
in
mov
adc
jne
sub
ficoml
adc
es
push
sarl
cwtl
cli
stos
lock
jge
adc
fisubrl
push
fdivp
js
stos
jo
or
xchg
push
jp
push
dec
cmpsl
test
cmp
push
repz
popa
inc
out
jl
enter
pop
push
cmp
sbb
or
icebp
mov
repnz
js
and
push
ja
into
pop
add
out
cmpsb
pushf
sti
out
aaa
xbegin
hlt
xor
pop
scas
or
imul
push
dec
into
and
imul
sub
hlt
sub
aaa
fistl
arpl
call
or
xchg
cmp
daa
lds
inc
or
jne
dec
push
inc
jbe
fsts
push
out
je
push
push
mov
jle
xchg
in
popf
pop
ss
fisubrs
xor
pop
ljmp
pushw
popf
sti
add
mov
dec
in
mov
leave
fdiv
mov
fld
push
stos
add
inc
cld
cmpsb
and
test
pop
imul
sysret
cmc
pushf
sub
lds
add
ds
popa
nop
xor
shll
cmpsb
mov
inc
xor
cwtl
into
cmp
gs
ret
pop
push
hlt
mov
pop
inc
mov
shr
cmp
hlt
cmp
mov
loopne
adc
mov
pushf
mov
cmp
push
push
fwait
mov
push
push
adc
mov
or
cld
pop
xor
decl
add
mov
cmpsb
push
add
leave
insb
je
jg
jae
mov
mov
incb
repnz
adc
jo
arpl
sbb
and
push
pop
add
lret
add
loopne
test
pop
pop
sub
mov
fiaddl
lods
shl
orb
adc
jbe
dec
xor
add
hlt
xchg
mov
mov
scas
stos
pop
or
das
push
xor
xor
pop
cmpsl
in
insl
cmpsb
je
xchg
pop
and
jle
aam
es
pop
push
inc
jne
arpl
scas
add
test
mov
hlt
push
adc
mov
packssdw
or
pop
xchg
das
mov
sub
aad
inc
or
loope
push
jmp
daa
mov
xchg
mov
mov
pop
cli
jbe
xorl
sbb
cmc
gs
cmp
leave
inc
loope
fiadds
inc
push
loopne
out
pop
jmp
stos
push
xchg
pusha
add
cmp
xor
ljmp
les
int
pop
xor
test
push
dec
or
loope
inc
cmc
xchg
jae
mov
mov
mov
push
and
push
mov
sahf
cmp
push
xlat
scas
push
addr16
mov
scas
add
dec
adc
ljmp
test
bound
jp
pusha
idivl
cltd
dec
push
sub
lods
ljmp
dec
arpl
push
or
or
xor
pop
in
lods
out
jl
lods
daa
aaa
addr16
xchg
add
mov
adc
std
test
mov
or
xchg
mov
jb
jg
jno
lods
mov
notl
scas
outsl
mov
mov
arpl
mov
js
mov
fnstcw
test
clc
hlt
dec
nop
push
mov
mov
clc
cli
xor
dec
push
and
hlt
push
mov
cmp
sbb
popf
pushf
mov
or
inc
sub
push
jge
push
negl
add
shr
jns
pop
dec
fcmovb
pop
cmp
dec
outsb
es
in
push
push
dec
js
in
pop
outsb
sbb
clc
scas
insb
daa
aam
sbb
cmp
mov
scas
in
fiadds
icebp
mov
jl
outsb
insb
das
icebp
pop
in
or
xlat
jecxz
shrb
sbb
push
test
test
mov
repz
pop
iret
hlt
push
aas
mov
into
cli
test
jp
adc
test
xchg
dec
dec
test
insb
imul
out
mov
shrl
dec
mov
mov
pusha
call
ds
adc
and
incb
lret
and
das
cld
mov
push
mov
push
push
cmp
rcrl
aam
into
js
add
push
into
push
sbb
in
xchg
sti
pop
and
ss
lods
insb
js
fnstcw
adc
lock
add
push
testl
xchg
pop
jge
cmp
insb
addr16
push
mov
out
hlt
je
std
out
test
adc
and
adc
or
in
mov
dec
jo
xchg
pop
push
adc
jbe
push
dec
cmpsl
ja
or
icebp
push
jge
add
pop
dec
dec
lea
in
movsb
adc
cmp
out
push
dec
xlat
ja
cs
out
leave
jo
adc
or
mov
xchg
loop
ds
outsb
inc
js
int
push
jne
adc
out
fnstcw
push
pop
push
xlat
cs
add
mov
test
int3
adc
rcrb
mov
add
cmpsl
dec
mov
js
cmpsl
jb
push
push
dec
icebp
xchg
mov
sbb
out
inc
push
pop
mov
in
pop
add
xor
or
ljmp
lock
scas
adcl
sahf
test
test
iret
xor
je
dec
cltd
push
xchg
add
idivb
pop
jnp
push
push
out
mov
mov
fldenv
sub
cltd
xor
jp
pop
pop
sub
mov
scas
testb
cli
push
in
and
addb
xor
inc
add
scas
popa
pop
fildl
push
xchg
xor
sbb
je
mov
push
dec
ficoml
sub
and
rcll
pop
pop
int
sbb
popa
xor
rcll
cwtl
scas
mov
pop
out
das
mov
sti
dec
insb
outsl
sbb
mov
test
cld
cs
mov
push
inc
nop
push
sahf
adc
jbe
movsb
sub
hlt
mov
sub
or
pop
adc
dec
mov
rclb
imul
fimull
xor
rcll
stos
loop
ss
push
xchg
cmpsb
mov
pop
mov
dec
loope
out
lock
shlb
sub
fists
xchg
das
loope
xchg
inc
ds
sub
movsb
mov
int3
push
bound
jbe
stos
cmc
lods
push
daa
cmp
xchg
pop
lea
mov
lds
mov
imul
mov
adc
or
sub
push
outsl
aad
dec
out
rcrl
shll
and
jmp
scas
mov
leave
lea
test
adc
xor
add
mov
fdivrs
out
inc
inc
pushf
pop
jnp
mov
jno
mov
aam
push
loopne
imul
lret
or
dec
into
sbb
ret
cmp
mov
pop
cmpsb
jnp
and
push
mov
jbe
xchg
imul
je
jnp
mov
popf
mov
testl
fmull
fchs
cmc
cwtl
xchg
xchg
pop
rorl
js
flds
add
cmpsl
rcrb
out
outsb
cs
sti
mov
add
popa
cmp
jbe
jns
cmc
test
push
xchg
mov
sub
dec
and
in
sbb
adc
and
rorl
adc
push
shl
jmp
push
sbb
leave
je
inc
inc
mov
in
sbb
mov
ficoml
std
sbb
mov
neg
xchg
js
pop
cwtl
push
xor
mov
jp
or
pop
daa
repz
jbe
dec
push
pop
mov
shlb
imul
leave
out
xchg
push
jae
js
jg
jp
pop
idiv
jo
out
in
cwtl
jnp
cmp
fcoml
xchg
imulb
imul
jl
inc
mov
out
pop
jnp,pt
dec
xchg
cltd
inc
xchg
cld
add
mov
add
sarb
xchg
mov
cmpsl
pop
pusha
daa
mov
loope
movsl
daa
in
mov
das
push
leave
test
test
mov
pop
xchg
dec
cmp
mov
mov
das
hlt
cmp
mov
add
das
cmp
or
lds
inc
jg
adc
sub
lock
shlb
xor
loope
subb
mov
adc
out
lods
cs
cmp
lock
outsb
inc
pop
mov
sub
jb
adc
loop
lret
jp
aas
lret
push
jbe
and
icebp
int3
cmc
js
repz
xor
pop
movsl
cmc
mov
psubsb
xchg
cmpsb
icebp
pop
cmp
xchg
xchg
add
inc
popf
pop
shlb
push
jecxz
sarb
pop
adc
mov
test
or
out
test
lods
xor
jl
mov
inc
les
jecxz
jns
pop
sbbb
adc
outsb
cmp
pop
inc
xchg
icebp
outsb
add
add
in
jmp
push
or
sbb
notl
movsb
xor
hlt
mov
mov
lahf
mov
mov
pop
inc
cmc
cli
mov
pop
jo
fadd
adc
imul
leave
ljmp
mov
push
pop
cmp
in
je
xlat
push
ss
adc
mov
scas
inc
jae
push
jo,pt
movsl
jnp
dec
ret
inc
xor
pusha
jl
mov
push
sarl
lods
int
ret
aas
jno
and
je
fcomps
push
cli
into
xor
sarl
mov
dec
sub
popa
icebp
adc
cmpsl
xor
js
pop
mov
jne
push
addr16
cmp
sub
data16
das
loope
lret
add
and
inc
push
loopne
out
xchg
jae
push
xchg
inc
imul
ficoms
lods
ss
adc
sbb
xor
mov
stc
test
push
pop
mov
add
clc
js
adc
push
ljmp
pop
push
sbb
xchg
iret
xchg
sbb
adc
inc
or
jl
mov
adc
mov
fisttpl
mov
ss
xchg
add
mov
movsb
add
lock
loope
fwait
add
dec
pop
mov
sub
cmp
cmp
shrb
mov
dec
gs
push
jl
mov
adc
mov
or
push
sbb
mov
inc
or
mov
inc
call
fs
push
dec
fucom
pop
inc
pop
cmp
pop
adc
cmp
dec
push
scas
jo
jb
jl
jle
jle
test
test
cmp
push
cmp
shll
pop
sub
ret
cmp
aaa
add
push
push
xchg
mov
mov
or
lods
icebp
movsl
xor
jo
and
or
and
fnstenv
rcrb
fsubrl
arpl
xlat
adc
sbb
scas
jo
adc
shlb
jno
enter
lock
xor
in
mov
add
xor
xor
xor
cmpsb
mov
repnz
jle
fildl
push
xlat
pop
fldl
cmp
sbb
cld
insb
div
push
inc
mov
std
sub
xchg
sub
push
xorl
lret
icebp
push
in
test
mov
jns
pop
into
movsl
or
adc
xchg
gs
aaa
or
outsb
cwtl
int
shll
lahf
rcrb
inc
xor
mov
test
jno
aam
xor
test
or
lods
dec
inc
out
jp
je
xor
les
idivl
inc
clc
inc
fwait
xorl
out
mov
push
shld
insl
adc
inc
inc
xlat
subb
ja
sbb
mov
aas
loopne
adc
aaa
or
mov
pop
lea
pop
push
mov
test
and
mov
cmpsb
push
out
fldenv
lock
test
bound
inc
sbbb
inc
jb
js
les
mov
cs
push
dec
adc
loopne
cli
sbbb
lret
sub
mov
loop
mov
inc
inc
adc
xchg
call
fistpl
push
inc
mov
jnp
cmp
push
jl
xchg
dec
fnstenv
push
xchg
loop
lea
dec
cmp
jge
das
push
dec
decb
xorps
imull
lods
add
jno
xor
idiv
js
mov
scas
int3
jl
mov
mov
push
arpl
std
add
ficompl
daa
mov
ret
movsl
iret
cmp
mov
adcl
dec
add
jae
adc
dec
test
das
shl
mov
adc
addr16
cltd
je
mov
dec
lods
int
mov
push
pop
lock
adc
fstpt
int
sbb
inc
pop
jg
mov
dec
xor
aad
pop
push
aam
jmp
or
into
cwtl
inc
sbb
ja
imul
repnz
mov
ret
adc
push
mov
mov
mov
hlt
mov
out
repnz
sbb
jg
and
mov
xor
inc
pop
aaa
cmp
es
mov
dec
loopne
scas
sub
std
scas
mov
test
enter
add
push
xor
outsl
mov
mov
je
cwtl
icebp
pop
shlb
cmp
push
mov
add
jmp
cli
dec
mov
std
mov
or
outsl
loopne
sub
js
test
pop
or
es
push
pop
adc
clc
cmp
sbb
rcll
mov
adc
inc
jns
pusha
sbb
xchg
push
inc
xor
pusha
addr16
dec
cmpsb
cwtl
addl
pop
sbb
mov
mov
add
std
xchg
hlt
jl
nop
je
lahf
das
addr16
pop
jle
pushf
shll
jns
mov
lock
pop
dec
adc
int
cmp
mov
jno
push
adc
cltd
in
hlt
in
pop
test
es
or
clc
sub
out
ret
paddd
cli
dec
rcrb
adc
xlat
pop
mov
xor
les
je
cmp
sbb
mov
cwtl
lret
inc
daa
cmp
je
into
sbbb
pop
ja
adc
test
fildl
jbe
es
data16
pushf
std
mov
mov
inc
mov
and
js
ret
test
in
dec
or
sub
push
and
ds
mov
push
outsb
and
jmp
mov
add
das
fs
inc
cmp
aam
mov
leave
inc
xor
int3
jnp
jp
mov
test
jl
xor
rcl
cmpsb
sub
popf
sub
push
jle
scas
scas
cmp
out
pusha
setge
cld
push
cld
mov
cmp
mov
push
mov
xchg
dec
hlt
int
bound
cld
iret
in
dec
in
push
or
imul
xor
faddp
sbb
pop
lret
addr16
loop
in
xor
mov
fstl
mov
outsb
loop
into
add
cs
or
dec
sti
mov
out
fstps
sbb
add
jl
cli
sub
pop
inc
test
jbe
lret
dec
push
pop
jo
xor
xlat
icebp
sub
daa
cmpl
insb
lock
lock
cld
gs
lods
mov
cli
sub
mov
adc
push
adc
cld
outsb
add
loop
fiaddl
data16
cld
popa
nop
jbe
pop
xor
cwtl
xchg
js
sub
scas
dec
sahf
cwtl
es
inc
cmc
cwtl
jnp
sub
scas
jecxz
jmp
lods
and
stos
xor
in
cli
bound
fiadds
sbb
std
or
mov
pop
stos
aaa
mov
int
movb
jecxz
aaa
jl
cmp
clc
mov
jl
pop
push
cld
push
das
or
jbe
pop
push
inc
into
xor
loope
or
mov
icebp
addr16
enter
mov
movsl
neg
push
call
and
cli
cltd
fists
sub
sbb
cwtl
pusha
out
cmp
shll
pusha
cli
popf
call
hlt
cmpsl
enter
push
dec
clc
xor
loopne
xor
or
sub
daa
mov
addr16
add
push
adc
repnz
add
arpl
cmpsb
mov
pop
ljmp
push
shll
iret
pop
aam
pop
testb
cmpsb
cmpsw
inc
jbe
mov
dec
int3
cli
aaa
roll
es
sub
push
mov
aam
push
test
jle
sbb
inc
les
into
push
fistpll
xlat
fcomps
mov
hlt
dec
sbb
cs
mov
pop
orb
test
in
xor
iret
pop
and
push
inc
addr16
outsb
xor
pop
shlb
shll
int3
addr16
cmc
push
xchg
iret
ljmp
cmp
push
scas
ss
ret
push
push
dec
ss
pop
cmp
cmp
mov
jns
and
lret
sbb
mov
mov
xor
dec
push
jbe
push
jbe
jmp
in
sti
out
imul
dec
imul
push
fildll
jbe
mov
data16
icebp
xor
push
loop
jae
repz
std
push
mov
das
imul
imul
imul
mov
xchg
sub
pop
repz
packssdw
movsb
ret
mov
push
dec
lock
ja
icebp
insb
push
into
push
inc
or
out
pop
sbb
sub
adc
xchg
cmp
lock
xor
xchg
scas
dec
lret
cltd
cli
fidivs
cmc
aad
movsb
std
call
push
test
pop
stos
lods
jl
pop
and
dec
jl
insb
repz
dec
lods
rcrl
cld
add
fsubrl
sbb
cmc
inc
addl
cld
out
jnp
mov
imul
and
test
sub
jb
imul
dec
bnd
mov
jno
repnz
jae
push
jp
sbb
cmpsl
mov
int
xchg
or
mov
and
push
xor
popa
xlat
push
inc
out
and
arpl
dec
rcrl
out
sahf
rorb
push
jno
sbb
dec
add
xchg
fsubr
rcr
shl
lods
mov
mov
stos
or
pop
sarb
mov
cmp
in
in
arpl
push
jbe
leave
repnz
sub
push
mov
mov
push
jnp
adc
and
lds
nop
daa
in
jb
int
push
sub
push
enter
jno
ret
jmp
dec
out
pop
es
out
adc
stos
xchg
aaa
and
push
pop
pusha
cltd
add
add
inc
adc
or
les
jnp
call
sub
ret
insl
clc
xchg
lcall
das
negl
test
push
cmpsb
fwait
push
dec
mov
push
push
push
mov
cwtl
pop
test
jno
int
out
lcall
lock
pop
jnp
test
or
daa
in
fisttpll
mov
sbb
jmp
shll
push
cld
jbe
sarl
stc
push
addr16
mov
cmpsb
pop
cwtl
je
cwtl
cmpsl
enter
sub
xchg
mov
push
stos
sbb
cmp
outsb
daa
mov
or
mov
cltd
push
sub
insb
lods
cmpsb
push
lea
aaa
in
add
insl
das
pop
xchg
dec
sub
lret
ss
add
popa
or
pop
adc
jecxz
icebp
push
lods
out
xorb
push
sbb
mov
push
push
into
inc
in
jge
aam
mov
add
xlat
xchg
daa
clc
mov
test
dec
pop
xchg
adc
add
push
inc
jmp
push
mov
adc
mov
ficomps
notl
das
imulb
lea
push
push
idivl
add
sti
aas
mov
sahf
loope
push
lock
int
xor
call
dec
push
xchg
jb
pop
dec
aam
ljmp
sbb
iret
std
xor
jp
ja
pop
js
add
not
movsb
filds
inc
mov
aas
add
cmp
bound
pop
popl
mov
inc
push
ficoms
jb
adc
fimuls
mov
cmpsl
scas
add
sub
adc
pop
test
add
sub
addr16
cld
pop
cmp
sub
call
test
adc
flds
cmp
roll
lret
adcl
dec
gs
in
in
cld
jno
scas
push
xor
dec
cli
clc
mov
jg
jge
push
inc
daa
icebp
sub
sbb
or
mov
inc
inc
xorb
mov
add
inc
dec
lret
add
inc
ret
xchg
pop
test
sub
mov
mov
sbb
pop
xchg
movb
pop
hlt
adc
test
adc
sbb
lret
bound
sub
cmp
pop
lret
divb
es
jmp
xchg
aam
sbb
movsb
leave
icebp
ljmp
lret
xchg
out
mov
cwtl
pop
push
xorl
mov
or
ror
adc
or
push
sub
mov
mov
imul
xchg
sbb
hlt
push
mov
icebp
aaa
jmp
xor
loopne
mull
mov
int3
add
js
push
pushf
sub
gs
sub
mov
sub
into
into
push
xchg
jae
mov
jle
pushf
xor
stos
scas
jb
cs
xchg
sbb
push
xor
cmc
pop
lock
scas
aad
xchg
lds
push
iret
inc
jecxz
loop
repz
int
mov
lret
mov
icebp
mov
imul
rorb
aam
mov
pushf
dec
sahf
push
push
pop
push
mov
movswl
in
jecxz
mov
cmp
lahf
xor
dec
jbe
cmp
inc
out
xor
sbb
jmp
mov
inc
outsb
xchg
xor
mov
push
xor
mov
rorb
call
cwtl
cs
adc
sbb
mov
jo
jl
jnp
clc
pop
scas
push
aas
push
sub
xor
xor
pop
das
jnp
loope
add
iret
int
lahf
jno
in
insl
dec
xchg
xor
lods
cmp
and
sub
xor
iret
data16
jo
push
pop
adc
test
pop
push
aam
push
mov
insb
jbe
sbb
push
push
cmpb
ja
stos
mov
popa
repnz
fists
mov
push
push
shl
sub
xchg
push
cmp
daa
dec
sub
ss
jmp
pop
cmp
mov
adc
nop
aaa
xor
xor
inc
mov
dec
cmp
mov
notl
pop
and
pop
scas
cmp
or
je
into
push
adc
push
sbb
xor
jne
xor
das
mov
cwtl
out
jbe
sti
cmp
push
add
sub
jne
sbb
int3
stos
or
iret
adc
in
sub
lock
pop
xchg
fbstp
xor
cwtl
stc
mov
xchg
mov
sub
push
xchg
cmc
xor
push
sub
loopne
scas
dec
push
push
dec
push
xor
repnz
je
jbe
fiaddl
jmp
and
mov
adc
and
cmpsb
cld
std
mov
inc
sbb
push
insl
stc
push
add
mov
pop
pop
pop
popf
pop
xor
rorl
shll
cmp
mov
in
lea
push
sub
dec
lods
ja
dec
in
iret
xchg
cld
dec
movsl
insl
mov
sub
pop
push
jnp
lcall
rorb
out
push
clc
loope
or
xor
dec
in
addl
xchg
ja
das
sbb
js
sbb
mov
js
movsb
mov
mov
mov
and
leave
push
sbb
sahf
push
lret
xor
ja
ja
rorb
loope,pn
test
fld
xchg
and
xor
fistpl
adc
mov
loopew
push
std
enter
mov
bnd
insb
mov
test
orb
push
push
into
inc
test
lods
int
push
enter
or
roll
mov
dec
sub
add
loope,pn
mov
jo
into
sbb
inc
add
inc
bound
dec
cmp
mov
and
xchg
je
xor
mov
dec
sub
enter
arpl
push
jnp
mov
jb
mov
add
and
mov
andl
lds
nop
incl
test
icebp
sub
lods
xlat
jecxz
sbb
cltd
std
fists
add
jp
jl
jnp
add
cli
test
fsubr
sub
dec
out
call
aaa
and
xor
xchg
jns
fcmovbe
insb
mov
dec
loopne
xchg
jbe
hlt
sbb
aam
jmp
aam
pop
ds
outsl
pop
sbb
xor
orl
jle
sbb
icebp
popa
jge
lods
mov
sbb
movsb
mov
sub
mov
std
sub
mov
pop
adc
fidivl
adc
nop
das
inc
or
cmpsb
cli
call
inc
mov
pop
sbb
jecxz
mov
je,pt
lcall
pusha
cmp
ljmp
lret
push
out
push
into
xor
xchg
repnz
icebp
es
cld
pop
cmc
ret
sti
fisubrs
cwtl
aam
mov
test
outsl
pushf
ret
sbb
shlb
pop
and
pop
outsb
loop
lret
add
jb
popa
or
dec
mov
out
mov
mov
addr16
hlt
in
loopne
cld
mov
into
push
fstl
shr
jns
and
scas
dec
push
adc
popa
sti
jp
push
loop
icebp
sbb
test
repnz
jnp
xor
aaa
roll
aaa
sub
decl
mov
dec
jl
mov
arpl
mov
sbb
sbb
aas
leave
add
scas
sub
inc
out
imul
iret
or
mov
cmp
dec
movsl
cmp
xchg
sub
std
repz
inc
xchg
cwtl
cmp
xor
push
jne
push
ret
arpl
stos
cli
mov
sbb
inc
enter
jbe
idiv
je
test
cmp
add
push
inc
mov
pop
add
xor
ret
lret
push
push
inc
cmp
cltd
int
cmpsl
xchg
add
notb
and
cltd
sbb
dec
mov
test
inc
mov
pusha
das
cli
je
cmpsl
aam
inc
jl
pusha
add
imul
dec
mov
js
cs
ljmp
add
clc
push
sbb
pop
add
sbb
movsb
stos
sub
loopne
test
addr16
push
sub
adc
mov
jae
jg
adc
pop
dec
inc
jl
out
cmp
movsb
push
push
outsb
sbb
std
lock
insb
out
adcb
jmp
add
pop
sbb
ficompl
sbb
push
mov
cmpsb
dec
dec
xor
hlt
loopne
pop
cld
cs
xor
inc
std
divb
nop
push
cld
idiv
cwtl
adc
ret
stc
xchg
or
pop
xor
cmp
movsb
popf
add
pop
js
aaa
jns
lea
mov
jbe
dec
outsl
jg
nop
mov
lock
loope
inc
pop
mov
je
mov
push
adc
xor
subb
xchg
ljmp
ret
cld
lock
sbb
cltd
mov
adc
mov
int
repnz
je
das
sbb
insb
out
js
repz
jns
sbb
adc
clc
xor
cli
aam
inc
xor
cwtl
xor
test
xor
faddl
and
inc
mov
cld
and
cmp
cmpsl
aas
cwtl
test
xchg
das
mov
add
mov
cli
mov
aam
mov
js
cs
icebp
add
and
iret
mov
fcmove
scas
mov
fs
int
addr16
fsubrl
adc
and
xor
push
inc
mov
and
and
adc
inc
xchg
add
lret
aam
jmp
dec
mov
ljmp
lock
fucomp
dec
inc
je
sti
cld
cld
xchg
and
dec
and
mov
mov
mov
lret
xor
lcall
add
pushl
into
cld
enter
jbe
addr16
mov
in
mov
mov
jmp
push
xor
fbstp
sti
cmpsb
pop
jno
hlt
cmc
sub
nop
and
sbb
test
das
jmp
xor
cmc
pop
shld
mov
cmp
shl
sbb
sub
sub
and
clc
scas
cmp
mov
cmp
int3
pusha
loopne
sarb
mov
sub
fs
xlat
arpl
dec
fstpt
add
cld
loop
loope
fmuls
divb
icebp
mov
fstpl
sbb
insb
push
sub
push
cltd
fisttps
repnz
mov
lods
xchg
lcall
jecxz
gs
push
sbb
fidivl
pushf
repnz
mov
sbb
add
dec
xchg
jge
sbb
fiaddl
ja
xor
sub
ja
cli
out
fists
jno
out
xor
or
jecxz
je
pop
insl
daa
clc
ljmp
adc
repz
mov
aad
push
das
xor
stos
mov
push
xchg
pop
loop
inc
jno
adc
call
inc
lock
xchg
cmpsl
clc
je
mov
inc
cmpsb
ljmp
xchg
data16
in
sub
push
fcoml
scas
jnp
and
inc
repz
add
repz
je
and
mov
mov
pop
push
xacquire
xchg
clc
xchg
xor
flds
mov
mov
addl
xchg
std
jb
imul
xlat
sub
dec
sbb
xchg
push
sub
aaa
add
aam
sti
test
bound
mov
js
stos
in
and
pop
sbb
repnz
add
fidivrl
in
pop
push
adc
mov
ret
mov
and
dec
les
dec
push
pop
pop
out
cli
mov
mov
adc
push
cs
gs
outsl
sub
das
cwtl
mov
ja
js
push
add
leave
dec
cmc
pop
inc
jl
mov
pushf
xchg
push
add
shlb
cmc
sti
lea
das
mov
jp
lahf
fnstsw
mov
mov
jmp
pop
mov
imul
sub
cli
pop
repnz
fidivs
loopne
mov
cmp
sub
inc
inc
xor
ljmp
stos
fisttpl
mov
data16
cvtps2pi
mov
jnp
push
inc
dec
ss
fld1
loopne
push
push
cli
rorb
dec
mov
cli
scas
cmp
inc
mov
pop
movsb
scas
pop
xorl
add
pop
push
inc
sti
mov
hlt
scas
divb
ss
repz
cmc
js
lea
adc
lcall
push
addr16
mov
sbb
jb
push
push
pop
pushf
jne
ficoml
inc
hlt
sub
adc
lahf
mov
rcl
cmp
xor
aas
arpl
inc
andl
ss
movsb
mov
sub
shr
mov
mov
or
test
jp
inc
add
popf
je
pop
scas
inc
repnz
in
cmp
lret
pop
xor
je
dec
push
push
and
push
scas
and
xlat
push
push
push
aad
xchg
fcoms
sub
add
pop
out
lcall
icebp
insl
sub
mov
mov
test
mov
imul
into
int3
aas
fwait
or
jae
inc
push
pop
add
popl
jbe
xor
es
cli
push
mov
inc
xchg
int
pushf
xor
push
jmp
and
pop
ja
jg
imul
sbb
xchg
sarb
aam
lahf
repz
mov
sub
jnp
pop
sub
adc
mov
jmp
push
add
lret
repz
push
cld
cmp
sarb
push
fldcw
inc
xlat
es
aam
jg
push
repz
mov
scas
nop
adc
and
inc
je
cmpsb
lea
ss
mov
push
les
sbb
cld
cmp
mov
test
in
push
lret
push
jns
aaa
adc
pop
jmp
cli
sbb
push
jge
adc
lds
sub
hlt
loope
popf
xor
cwtl
clc
mov
mov
clc
and
mov
and
leave
bound
out
pop
xor
test
add
mov
test
mov
mov
pop
incl
jne
mov
mov
ret
or
jo
popf
sub
sub
sub
cld
mov
or
les
insb
test
ss
push
adc
push
inc
mov
push
mov
mov
std
mov
pusha
mov
imul
xlat
cmpsl
int
xor
add
sub
lret
cmp
in
out
mov
cmc
xchg
and
enter
lods
jp
sti
mov
cld
mov
cmp
jns
xchg
orb
mov
scas
jnp
in
addr16
jae
pop
ficoml
jb
fisubrs
xchg
dec
push
mov
fld
jae
inc
movsb
ljmp
pop
aaa
push
pop
test
mov
out
roll
mov
mov
jno
into
jecxz
insb
js
and
mov
dec
mov
nop
ja
inc
mov
scas
in
xchg
or
jg
jns
sarb
pop
fnstenv
fldenv
bound
cmpsl
movsb
pop
insb
push
loop
pop
mov
out
xchg
ljmp
cmp
add
ss
fisubs
jmp
dec
insb
cltd
push
dec
mov
push
adc
lods
xchg
cmpsb
imul
mov
out
mov
sbb
je
in
aas
push
data16
jle
inc
cld
dec
dec
faddl
and
push
repz
fcoms
mov
out
mov
xor
cltd
nop
jno
fwait
or
mov
fldl
pop
xchg
daa
adc
cs
in
cmp
push
xchg
out
and
pop
xchg
cltd
lds
xor
jbe
cmp
shll
daa
sbb
jp
rcrb
add
inc
adc
jnp
aas
ja
and
ja
xlat
scas
push
das
mov
jne
mov
into
repz
push
stos
call
jmp
push
adc
adc
push
dec
ja
mov
mov
scas
loope
rcl
into
cmc
fwait
pop
and
clc
rcrl
js
popf
mov
notl
pushf
iret
hlt
mov
daa
divl
inc
clc
jl
xchg
push
fstps
mov
xor
xchg
dec
cs
push
jns
pop
test
fsubrs
adc
les
cmp
mov
add
mov
mov
and
idiv
pop
adc
push
adc
mov
inc
je
pop
movsl
getsec
mov
xor
xchg
ja
mov
xchg
lret
pop
es
mov
daa
jbe
fsqrt
cmp
pop
scas
inc
stc
cmpsl
push
cmp
hlt
xchg
lods
test
sbb
push
sbb
sub
sbb
cmp
dec
mov
repz
test
adc
sub
inc
mov
sti
push
cmp
and
out
jg
xchg
push
mov
jecxz
jmp
push
cmpsb
addr16
scas
xchg
mov
mov
jg
cs
jle
loopne
jl
xchg
xor
sbb
scas
clc
popf
mov
inc
repz
jbe
mov
add
test
jge
loopne
cmp
lds
stos
xchg
ficoms
xchg
into
xor
or
push
jmp
lock
sbb
pushf
adc
jecxz
cmp
ja
lcall
mov
cld
aam
aad
out
mov
mov
inc
imul
adc
push
and
add
jge,pn
imul
pop
fisubrs
adc
loopne
push
xor
scas
idivb
aaa
iret
mov
clc
push
int
lahf
les
lcall
lds
scas
std
ret
cmpsl
push
loope
fadd
setle
or
cld
cmpsb
aas
dec
and
xor
xorb
std
icebp
out
jb
sbb
mov
mov
out
popa
aas
es
daa
enter
jo
mov
add
mov
sti
rclb
mov
addl
cmpsl
roll
sbb
mov
inc
pushf
ljmp
das
xor
rcll
cld
pusha
mov
fdivrs
push
ret
pop
loopne
fidivl
adc
ss
pop
inc
cli
inc
mov
aam
adc
jmp
out
std
adc
or
aam
jo
out
mov
fnstenv
divl
push
pop
cmc
jbe
xchg
in
mov
or
push
fmuls
subb
test
ret
dec
cmp
aam
mov
pop
movsl
aad
fninit
mov
js
out
mov
cs
into
pop
je
adc
and
ret
xchg
hlt
push
or
movsl
sub
jecxz
push
and
out
test
call
mov
sub
jo
mov
clc
mov
adc
jecxz
or
fiaddl
call
divl
xchg
fs
into
jb
xchg
call
pop
ds
and
xlat
sub
fadds
xor
orl
push
sub
out
and
out
xor
pop
ret
stos
lea
mov
lcall
push
les
push
loope
in
inc
push
cld
mov
movsb
pmullw
int
notl
adc
adc
leave
or
jne
out
in
fnsave
xor
insb
jne
sub
ss
test
xchg
sahf
je
pop
movsl
xchg
adc
mov
daa
push
in
aam
or
ret
in
outsb
cmc
mov
mov
in
push
push
pop
dec
hlt
or
divb
cli
fs
cmpsl
ljmp
xor
xchg
mov
xchg
mov
add
sbb
incl
out
jle
jne
sub
mov
sti
and
and
addr16
push
xchg
fldl
int
mov
dec
jmp
push
cmp
call
adc
xor
and
sub
push
leave
xor
push
ss
iret
xchg
jo
mov
pop
mov
fnstenv
fs
cmpsb
rcll
dec
repz
sbbb
sub
add
icebp
xchg
sub
push
push
shrl
inc
lds
inc
lahf
xchg
dec
addl
rorl
pop
dec
push
xchg
jl
push
out
cli
lcall
pop
jne
pop
ss
mov
jo
daa
movsl
and
mov
add
aas
insb
pop
enter
push
clc
xlat
cmp
hlt
add
mov
out
rol
pusha
sbb
or
mov
in
push
and
cmp
lea
repnz
push
and
or
adc
pop
loopne
and
push
fdivl
sub
js
lods
mov
shll
add
jge
clc
popf
jp
adc
pop
cmp
dec
sbb
or
pop
add
adc
pop
push
jne
or
add
aaa
jp
lret
add
repnz
push
pop
rcrl
or
subl
add
mov
adc
mov
push
std
xor
or
xor
mov
and
pop
dec
xor
mov
jge
lcall
and
pop
cld
mov
das
aam
sub
xchg
pop
sti
inc
dec
jnp
dec
xor
les
inc
push
add
mov
adc
fdivp
mov
arpl
xor
insl
and
sbbl
cmp
push
aas
adc
pop
and
js
lret
std
pop
subb
sti
scas
pop
inc
stos
jl
mov
push
and
jnp
test
sbb
jle
sti
jbe
mov
dec
and
push
push
mull
out
xorl
outsb
push
int3
nop
xchg
push
jbe
mov
pop
cmpsb
cltd
ret
pop
inc
loope
add
push
enter
das
mov
dec
mov
repz
pop
add
out
mov
jnp
inc
mov
inc
shll
mov
dec
sahf
testb
inc
jb
sbb
mov
das
jecxz
adc
fcmovnb
jle
shll
adc
inc
jns
sahf
lods
mov
push
xor
je
mov
and
repz
sti
inc
mov
pushf
mov
jns
push
cmp
mov
ret
out
aas
jg
cwtl
mov
enter
mov
outsb
aaa
or
mov
test
xchg
ja
out
ss
push
push
test
and
mov
cmp
aad
cmpsl
pop
lods
add
dec
fisubrs
lret
iret
push
dec
or
int
dec
lock
addr16
pop
lcall
imul
inc
daa
and
inc
js
inc
bound
in
iret
xchg
adc
add
mov
std
cltd
push
inc
xor
sbb
icebp
movsb
outsb
push
inc
xchg
mov
mov
mov
fcoms
lods
lock
push
ss
jle
test
bound
jo
lods
lret
xchg
dec
add
adc
rcll
cs
push
in
adc
dec
out
xor
dec
in
add
inc
ljmp
clc
nop
repz
adc
xor
mov
into
push
fsubr
cwtl
repnz
sarl
lahf
imul
pusha
jmp
daa
inc
and
cltd
adc
ja
out
addr16
and
lcall
jl
or
imull
jp
sub
inc
sbb
inc
loope
rcll
sbb
cmc
push
addr16
je
xchg
jp
push
sub
scas
add
mov
popa
jmp
push
ret
test
jecxz
pop
inc
dec
xor
jp
push
jb
adc
pop
push
fbstp
jp
mov
mov
test
pop
repz
in
icebp
cmp
lcall
lock
movsb
fidivs
out
ret
mov
stos
lock
sbb
pushf
jne
cmpsl
inc
xchg
or
mov
mov
push
in
mov
sbb
or
xchg
icebp
shrl
and
lock
cli
data16
cmc
dec
not
imul
daa
mov
push
xchg
push
pop
mov
rcrb
lods
negl
jmp
outsb
mov
out
add
cmc
out
mov
jp
push
xchg
push
mov
xchg
je
sbb
pop
mov
repnz
pusha
sbb
and
jo
fldl
or
in
push
pop
mov
je
mov
and
cli
sarl
pop
jle
dec
mov
xor
dec
xor
sbb
int
imul
lcall
cmpsl
test
sahf
call
xchg
fnsave
scas
ljmp
push
xchg
sub
arpl
inc
jg
icebp
and
iret
or
fwait
fwait
jns,pt
scas
or
add
hlt
mov
daa
imul
dec
cmpsl
mov
aam
ds
jmp
mov
jp
sbb
imul
xor
out
xor
test
rclb
data16
pop
in
mul
push
inc
inc
push
das
fsubl
inc
test
or
sub
repnz
loope
cmp
out
daa
or
stos
lock
mov
adc
idivl
mov
pop
jl
sub
pop
lock
fdivl
mov
idiv
or
cltd
das
ss
imul
insl
dec
daa
jl
push
mov
pop
sahf
lahf
test
icebp
xlat
js
push
movsb
ljmp
js
or
xchg
or
ljmp
jae
mov
xor
dec
cmp
cmp
retw
add
sub
push
repz
push
addr16
mov
aam
mov
test
ja
cmpl
neg
ja
push
jbe
mov
jl
clc
rcrl
mov
popa
sub
mov
push
xchg
in
cmpsl
js
jae
inc
mov
mov
jns
aaa
insb
cmpsl
jno
ds
pop
test
add
mov
cmc
jnp
out
aad
add
lds
adc
inc
cmp
mov
cmpsb
ret
insb
lcall
cwtl
shrb
sahf
xor
add
mov
fildll
adc
test
jnp
sub
push
dec
xchg
push
inc
mov
inc
lea
stc
int
into
fistps
dec
js
ss
loopne
pop
inc
imul
iret
imul
mov
cmp
xor
hlt
jae
rclb
dec
std
xorl
add
insl
sbb
jge
insb
cmp
or
xlat
push
cmp
mov
xchg
imul
mov
push
fisubs
adc
fstps
addr16
in
sbb
add
jl
out
pop
das
push
orl
push
data16
pop
xor
push
add
push
xchg
mov
adc
lods
cld
xor
cmp
icebp
std
ja
and
clc
sub
cltd
je
js
xchg
pop
and
lahf
cmp
sbb
gs
sti
ja
jns
sbb
ss
aam
rclb
mov
stos
imul
mov
cvtdq2ps
dec
xchg
lret
cmpsb
lods
cmp
xchg
idivb
cwtl
in
loopne
pop
test
arpl
mov
push
iret
push
fistpll
into
mov
cltd
aaa
jg
into
hlt
adc
jle
sub
lock
mov
cmp
insl
mov
inc
das
ret
jbe
push
dec
pop
or
int
js
mov
fstpt
cmpsb
sahf
adc
vmread
ss
push
xchg
aaa
mov
sbb
cmpsl
mov
mov
stos
arpl
xchg
in
jl
loope
xchg
negb
or
jp
mov
xchg
mov
int
rcrl
and
ret
inc
fsubrs
jns
xor
cli
sahf
push
cli
jl
mov
mov
mov
fmuls
out
add
xchg
mov
scas
inc
or
enter
or
xor
lock
mov
rcrl
sub
lods
ja,pt
xor
out
sbb
hlt
mov
jb
dec
cmp
push
adcb
addr16
jns
jecxz
fisubrl
cltd
loop
inc
insb
cli
loope
pushf
ret
and
mov
xchg
adc
inc
and
jbe
jns
push
push
dec
dec
popf
mov
pop
ljmp
fisttpll
scas
cmc
iret
sub
or
pop
xor
adc
jns
dec
out
jo
inc
push
movsb
mov
lods
pop
imul
cmp
scas
cwtl
push
inc
jle
popa
sub
jne
xchg
xchg
push
pop
xchg
das
add
pop
idivb
xor
push
mov
scas
daa
test
fldcw
iret
jecxz
cmp
fistl
and
jb
rolb
or
lret
jmp
dec
xlat
mov
sbb
xchg
push
mov
outsl
and
or
hlt
dec
cs
pop
sub
cmp
cmp
jl
mov
insb
pop
mov
fwait
pop
icebp
std
or
fstcw
mov
inc
dec
cwtl
push
adc
mov
pop
pop
xor
movsl
fldl
mov
sbb
aas
sub
daa
mov
test
sti
imul
xchg
adc
mov
mov
imul
inc
push
lahf
inc
and
data16
repz
fisubs
out
jae
mov
loop
dec
sahf
xor
daa
lcall
add
clc
lods
addl
jne
xorl
mov
push
lcall
sti
inc
cltd
cmp
jle
add
cmp
fdivr
push
out
rcrl
movsl
shrl
test
jae
dec
xor
pop
lcall
shrl
jmp
xor
sub
mov
sub
sub
pop
push
inc
in
add
pop
or
and
adc
mov
mov
fidivrl
scas
lods
outsb
iret
dec
xchg
shll
scas
outsb
bnd
add
cmp
dec
ret
ss
or
mov
inc
int
inc
scas
jns
movsb
sbb
adc
dec
jo
test
ss
int
push
mov
jnp
fnstsw
xchg
insl
xor
gs
xlat
pop
js
and
lea
xchg
jb
pop
mov
insb
scas
xor
lock
movsl
mov
cmp
ljmp
or
jl
cmp
out
xor
add
movsl
pop
add
cwtl
mov
arpl
mov
push
stos
imulb
jbe
cmpsb
outsb
inc
es
arpl
jmp
popf
and
xor
arpl
insl
and
push
out
outsl
imul
mov
insl
mov
push
cld
shll
incb
enter
xor
mov
pusha
daa
popf
mov
adc
movsl
fstl
pushf
ja
adc
cmp
adc
mov
push
lock
add
sbb
mov
jae
adc
iret
jp
sub
pop
cmp
push
pop
mov
clc
movsb
push
dec
push
insl
sahf
sub
lock
stos
cwtl
sbb
fidivrs
mov
in
loope
mov
or
fistpll
xchg
cwtl
push
and
notb
mov
insl
inc
mov
push
sbb
dec
push
cltd
test
or
push
cld
pushf
mov
scas
cld
frstor
fwait
test
ret
ja
jo
jmp
cli
insl
out
push
inc
mov
std
push
rorb
ja
jo
movsl
sub
add
icebp
fcomi
pop
into
test
pop
cmc
pop
sbb
xchg
mov
pop
cmpl
xlat
addr16
gs
push
aas
lret
cld
pop
or
push
into
mov
pop
movsb
inc
cmp
add
repnz
push
in
push
jo
cmpsl
jle
mov
sub
sub
out
loop
clc
inc
mov
pop
cwtl
push
cmpsl
imul
in
add
jg
xchg
cmpsb
test
jbe
xor
lods
xchg
sbb
xor
repnz
fiadds
xor
test
sbb
pop
mov
add
inc
push
leave
mov
or
test
cltd
pop
mov
mov
lods
adc
ds
pop
jbe
ftst
popa
sbb
int
sbb
mov
cmpsl
pop
in
sti
pop
push
fstpl
mov
fwait
xchg
pop
sbb
dec
add
mov
adc
jmp
in
cli
fsubp
or
mov
sbb
pushf
and
mov
jl
nop
or
lret
aam
inc
jns
dec
bnd
inc
push
mov
ss
jne
push
jbe
push
repnz
out
mov
push
pop
cmc
icebp
ja
out
xor
test
js
fisubrs
xor
dec
sbb
aam
pop
push
sbb
in
arpl
adc
jmp
aad
stos
xchg
xor
insl
mov
or
mov
in
mov
lea
cli
clc
xchg
mov
xlat
push
sbb
push
pop
lock
jb
and
mov
or
aaa
mov
daa
mov
test
jns
xchg
stc
xadd
dec
mov
inc
or
or
data16
mov
in
add
ret
mov
jbe
jbe
wbinvd
jo
stos
dec
jle
leave
hlt
jae
rcr
or
xor
push
xchg
mov
dec
jl
enter
cmpl
addr16
lods
repnz
jnp
fs
pop
mov
loopne
in
jns
inc
push
shll
std
dec
jne
xor
xor
lock
scas
out
dec
je
mov
sub
aaa
adc
pop
push
push
lea
cltd
scas
jb
inc
or
out
mov
ja
push
push
testb
mov
push
pop
pop
imul
incl
fisubl
stos
repz
jne
pop
inc
gs
jle
jns
mov
sbb
push
shrb
jmp
int
out
sbb
sbb
sbb
enter
and
ss
filds
xchg
in
and
or
jns
add
pop
decl
bound
mov
push
sbb
or
cmc
jae
lods
sahf
pushf
pop
push
mov
ss
cmpl
xlat
mov
pop
imul
jns
loope
lock
arpl
fcom
xchg
cmp
inc
int
cli
mov
into
js
dec
add
jmp
and
cmp
sub
pop
cmp
out
stc
outsl
or
movsb
mov
xchg
mov
mov
adc
push
cli
push
add
and
and
ja
bound
jp
testb
pop
movsb
adc
adc
aaa
daa
lods
mov
fcoml
add
jb
jne
sbb
cmpb
cli
mov
or
adc
push
mov
cld
dec
xchg
jno
arpl
insl
xchg
pushf
scas
push
push
inc
or
sahf
pushf
scas
xchg
dec
mov
xor
mov
mov
pop
cli
sub
jmp
test
dec
ljmp
push
inc
sar
add
push
out
insl
xor
jo
xchg
insb
dec
jns
test
fsub
sub
les
hlt
mov
push
push
icebp
daa
fmull
cmpsl
xor
jnp
or
xor
or
cmp
sti
dec
lds
sub
cmp
mov
sub
mov
movsl
mov
mov
jecxz
sub
mov
sub
fstl
mov
outsl
cmp
push
push
cmp
out
cmp
clc
sub
int
das
pop
xchg
add
inc
cli
xor
js
add
sbb
push
push
push
stos
stos
pop
add
push
out
xor
gs
pop
add
addr16
aam
xchg
icebp
loope
out
push
and
rcll
mov
xchg
xor
push
and
sub
push
daa
lahf
repnz
aaa
mov
mov
rcrl
imul
ljmp
push
cltd
or
mov
negb
fcomp
adc
push
jp
fs
push
cltd
mov
xchg
imul
enter
mul
idiv
jp
cmp
push
sub
cmc
addr16
add
jg
test
pop
push
push
shrl
mov
mov
jo
sub
rcr
jb
push
je
addr16
iret
inc
push
push
push
sti
mov
jge
mov
inc
sbb
dec
jb
jnp
cli
xchg
dec
rep
cld
push
jno
mov
lret
dec
test
add
xor
sub
push
mov
fldenv
decl
push
pop
dec
jb
and
test
fcomip
jle
stos
leave
mov
pop
xchg
adc
test
sbb
insb
rorl
pop
sar
cmpsb
rorl
mov
dec
pop
jne
cmp
jp
cld
mov
sbb
push
out
in
loope
les
je
add
mov
jno
cmp
cltd
push
mov
cmpsl
std
and
cli
sbb
inc
push
push
ss
mov
xchg
out
mov
pop
sahf
xchg
mov
ret
ficoms
push
lods
mov
jbe
lods
jne
push
lahf
jne
sub
jge
or
xchg
mov
mov
inc
push
inc
jecxz
pop
dec
int
outsb
jecxz
or
dec
cmp
pop
mov
ret
rcr
sbb
sti
ficompl
add
test
cld
mov
sub
xor
in
and
mov
push
lods
pop
fwait
cmp
stos
mov
cli
imul
sahf
and
jmp
push
jae,pt
fwait
xchg
push
xchg
mov
push
xor
push
je
mov
pop
insb
push
out
or
test
push
dec
sub
cmp
pop
jle
push
mov
aad
sahf
mov
cmp
roll
cwtl
push
mulb
cmpb
pushf
inc
sbb
mov
cs
mov
push
mov
and
stos
xchg
stos
sub
cwtl
sbbl
sub
lret
xchg
push
aaa
mov
sbb
stos
xor
inc
mov
pop
test
pop
daa
inc
int
movsb
popf
pop
rclb
mov
jg
push
jmp
int
sbb
xchg
inc
bound
mov
pusha
cltd
cwtl
xchg
pop
dec
xchg
xor
xchg
mov
xor
adc
loope
jae
sub
iret
outsb
ret
lahf
test
xor
hlt
and
adc
adc
daa
test
push
loope
out
fisubs
lcall
cmpl
mov
test
lcall
cmc
dec
pop
sbb
scas
gs
sub
sub
inc
mov
push
pop
and
aad
dec
mov
mov
push
cs
mov
mov
xor
punpckldq
incb
ja
fdivl
cmc
test
xor
leave
insb
adc
in
sub
addr16
mov
adc
or
test
push
loope
movsl
xor
mov
sub
cmp
inc
pop
jg
xchg
pop
jbe
jmp
jno
imul
pop
add
xchg
pop
cli
mov
jmp
sbb
xchg
into
inc
aas
imul
xlat
cld
filds
fiaddl
mov
test
ljmp
lods
mov
dec
push
inc
pusha
gs
out
les
adc
jno
adcb
jo
cmc
mov
inc
movsb
and
adc
jb
sti
rcr
jl
push
xor
cs
rcll
xchg
jmp
arpl
mov
adc
aam
inc
mov
add
in
push
lcall
mov
adc
ds
push
jmp
xchg
xlat
clc
leave
adc
int
fdiv
cld
xchg
lret
mov
ret
or
leave
xor
scas
popa
push
ret
dec
push
mov
jecxz
sub
xchg
cmp
push
push
repnz
add
test
fistpll
test
xchg
mov
add
out
push
add
push
xorl
ret
enter
sub
imul
sbb
test
and
inc
and
test
push
orl
push
icebp
dec
icebp
xchg
loope
xlat
lret
into
subl
dec
jg
addl
into
and
adc
mov
fstl
or
je
mov
xchg
mov
ja
ja
push
clc
pushf
jnp
test
sbb
mov
arpl
jb
sbb
cld
jns
aad
sub
psubb
xchg
orl
mov
jbe
push
cmpsw
add
sbbb
jbe
adc
jo
incb
negl
cmc
test
lea
ja
cmp
out
inc
out
adc
sbb
and
cwtl
lods
aas
cmp
test
stos
xor
iret
sub
imul
in
jg
sub
jb
and
inc
dec
cmpsb
add
jge
dec
shrl
imul
cs
es
icebp
lahf
jmp
or
or
adc
fnsave
or
aad
loopne
ficompl
cmp
jbe
je
push
add
rcr
jl
imul
sub
sbb
jecxz
mov
mov
mov
insl
xor
outsb
cmp
pop
loopne
pop
fldl
xlat
push
pop
repnz
jge
into
push
rorb
out
sbb
scas
aad
xorl
je
loope
or
push
sbb
xor
imul
cli
popa
xchg
cwtl
adc
push
cld
sti
sbb
cmp
shlb
sti
shrl
je
cmp
sbb
inc
or
out
mov
mov
cld
cmp
sub
jg
into
loope
cmp
sarb
jp
ljmp
xchg
mov
jmp
and
mov
loopne
sti
mov
jbe
mov
movsl
pop
push
leave
ja
movsl
mov
cmp
xchg
cmp
mov
loope
sub
daa
cltd
out
dec
scas
jo
pusha
rorl
int
push
inc
pop
ss
sbb
inc
jmp
loopne
push
test
xor
pop
xor
pop
add
push
daa
mov
orl
arpl
or
sahf
mov
push
add
pop
nop
fninit
cmpsl
movsl
hlt
cmp
push
ss
in
push
imull
loope
xlat
pop
push
cmp
cmc
clc
cmpsb
sub
cmp
xor
pop
and
test
cmpb
das
insl
fwait
jns
push
add
push
in
ficoml
out
sub
pop
js
or
inc
cmpl
inc
pop
pop
mov
es
hlt
outsl
sub
xchg
movsl
push
mov
ja
pop
xlat
enter
shrb
nop
lcall
sub
jb
ljmp
sbb
fidivrs
add
ret
xor
cli
push
lea
xor
je
je
dec
bnd
incl
jg
mov
inc
dec
popf
leave
out
mov
aam
inc
cmpsb
push
hlt
xor
outsl
push
cs
std
in
pop
out
rcrb
pop
mov
leave
jae
mov
jo
std
idivb
add
lea
sahf
pop
add
mov
pop
add
jae
push
pop
pop
jmp
fsubs
mov
inc
push
jp
mov
jmp
js
inc
es
ret
ja
stos
push
cwtl
xlat
dec
mov
pop
inc
mov
pop
fisubrs
mov
je
es
js
imul
rcl
ss
pushf
lahf
mov
lea
and
and
je
sbb
scas
ss
jle
je
add
push
les
pop
cmpb
inc
pop
jnp
icebp
js
sbb
icebp
sub
sbb
sti
repz
pop
sbb
pop
mov
sbb
adc
fdivrs
mov
outsb
gs
jbe
mov
ds
xor
push
or
mov
sbb
clc
mov
test
in
testl
xchg
push
sbb
cmp
dec
mov
xlat
xlat
dec
test
fst
imul
roll
fmuls
pop
popf
push
mov
cmp
pop
cli
daa
adc
clc
cmp
jmp
fcoml
stos
xor
jle
mov
and
aas
mov
aam
xchg
add
xor
scas
test
into
js
mov
into
pop
psrld
cmp
ljmp
call
insl
push
mov
or
scas
xor
ja
out
mov
ror
jae
mov
jo
sub
ret
fbstp
add
mov
inc
fdivr
es
xchg
push
xchg
push
xor
test
sbb
xchg
ja
scas
js
fstl
inc
lods
push
repnz
out
test
div
cmp
add
mov
mov
call
repz
mov
mov
adc
xorl
mov
clc
cmc
adc
adc
or
je
cmc
xchg
sahf
aam
pop
pushf
outsb
xorl
repnz
adc
repz
divl
js
insl
je
push
icebp
sbb
leave
cmp
fcoms
push
jmp
push
int3
icebp
outsb
mulb
xchg
iret
jg
incl
out
cmp
push
cmp
not
xchg
dec
xor
cs
pop
cld
test
shll
outsl
loopne
nop
sbb
lods
int
push
loopne
clc
out
sub
push
ds
enter
xchg
mov
lods
arpl
xchg
shlb
je
fiadds
adc
ds
xchg
jmp
pop
push
xor
jb
leave
mov
psraw
std
pop
out
pop
sub
ds
mov
cwtl
xlat
aam
cs
sbb
xor
push
cmpsl
xor
jp
and
cld
cltd
aad
jge
adc
fstpl
lock
mov
stos
mov
dec
pop
mov
aas
daa
mov
clc
mov
outsl
jo
into
mov
add
jmp
test
push
xor
icebp
push
pusha
out
into
inc
sub
mov
push
or
jg
xor
fisttps
xor
cld
adc
aad
cli
jae
dec
scas
notl
daa
or
adc
roll
es
in
fstl
ljmp
aaa
jmp
and
push
mov
xchg
aas
mov
insb
cmp
clc
in
xor
lock
push
ds
sti
dec
sub
dec
jbe
sbb
sub
mov
in
and
insl
push
sub
push
scas
xchg
movsl
xor
inc
out
andl
mov
dec
addr16
insl
jbe
aam
fdivrs
cmc
mov
cmp
fsts
pop
xor
lret
sub
cmc
popa
cmp
lods
out
push
cmp
cmc
xchg
cmp
mov
pop
jno
ds
outsb
add
repnz
clc
scas
adc
adc
lret
dec
jne
pop
xor
hlt
test
push
and
loopne
mov
aas
xor
out
je
mov
sub
push
scas
push
and
pop
pop
pop
std
jl
push
fwait
xchg
pop
test
enter
pop
aas
inc
mov
icebp
enter
mov
and
out
loop
dec
mov
lock
jmp
cmpsl
test
pop
sbb
outsb
push
movsl
scas
sub
mov
pushf
xchg
adc
cmp
je
lock
sbb
jb
outsl
pop
data16
jns
jno
mov
scas
sub
popa
negl
sub
add
sub
xor
mov
pop
xor
fldenv
aam
jno
push
clc
jl
aam
jmp
mov
enter
sbb
jbe
orps
stos
in
cltd
inc
scas
push
mov
adc
push
cmpsb
fisubs
ljmp
ljmp
jb
stos
xor
aaa
jg
sub
cltd
inc
lret
mov
out
sbb
aam
scas
movsl
push
loope
mov
and
stc
arpl
insl
cld
rcll
lods
daa
dec
cltd
xchg
cmp
shll
sub
push
loopne
push
lock
mov
cs
sub
outsl
mov
fcoms
idivl
jnp
in
add
dec
dec
jl
js
cli
push
pop
das
add
push
ss
cwtl
shrb
loopne
dec
pusha
lret
inc
aas
mov
adc
dec
imul
icebp
mov
aam
dec
fldenv
sub
xchg
fidivl
sub
push
pop
adc
repz
jo
mov
dec
into
or
and
cmp
cmc
pop
fwait
loopne
or
sbb
mov
shrl
aas
dec
pop
add
arpl
loope
int3
sub
sub
push
and
test
push
push
out
cmpsl
out
mov
and
punpcklwd
pop
mov
sub
int
test
cmp
outsl
push
mov
ja
out
cmp
xor
inc
lahf
leave
xor
mulb
pop
jle
out
aaa
scas
push
push
and
mov
dec
inc
insb
xchg
arpl
dec
jne
in
in
ss
cmpsl
lret
sbb
nop
nop
icebp
push
cmp
sarl
jmp
cmp
das
stos
xor
cltd
adc
jns
cmpsb
lock
adc
xchg
adc
xchg
lret
popa
je
mov
push
repnz
adc
xor
mov
out
insb
mov
inc
fs
add
out
inc
daa
push
bound
push
cltd
push
shrl
popa
je
fnstcw
pop
inc
stos
dec
lea
xchg
lcall
dec
adc
sbb
sbbl
stos
fcoml
xor
mov
pop
addr16
negb
mov
shrb
mov
test
dec
clc
roll
adc
inc
mov
adc
insb
adc
in
lods
cmp
insb
testl
xchg
div
mov
sti
xlat
enter
sub
xor
std
sbb
mov
sbb
mov
fistl
mov
sub
xchg
mov
xchg
sub
leave
les
push
push
sub
test
dec
fisttps
or
push
rcll
push
dec
cli
inc
adc
in
sbb
ss
cmpsl
add
rcrl
mov
sub
xlat
cmp
stos
idivl
dec
jecxz
cmp
pop
jnp
and
punpckldq
cmp
sub
sbb
stc
add
push
xor
push
icebp
sbb
mov
addr16
add
aaa
jno
ja
mov
jecxz
or
movsb
sbb
imull
mov
inc
dec
cmc
xor
add
pop
jg
jno
test
push
add
fidivrl
jbe
jo
mov
cwtl
mov
lods
hlt
and
add
xchg
testl
add
scas
insl
lods
mov
fiaddl
mov
push
lret
xor
inc
or
xor
sti
lods
rcrl
adc
push
adc
sbb
adc
es
push
mov
in
push
pop
dec
dec
stos
jo
idivl
cli
stos
pop
mov
mov
hlt
dec
aas
mov
cli
decb
dec
mov
push
in
out
leave
inc
push
flds
ret
push
mov
inc
cmpsl
sbb
xor
jp
xor
pop
or
ss
add
sbbl
pop
and
lea
cmp
mov
ja
ss
das
aas
in
cwtl
lcall
xchg
idivl
ret
jmp
cmpsb
dec
xchg
ret
imulb
or
mov
mov
je
out
mov
inc
and
add
mov
repz
lods
mov
mov
repnz
push
inc
jo
mov
mov
sti
xchg
pop
fst
sbbb
decl
scas
cmp
push
ss
test
mov
jns
mov
rcll
push
cli
pushf
jne
cmpl
jl
push
inc
or
jbe
xchg
arpl
cld
dec
or
cwtl
repz
and
fldcw
fidivrl
jbe
out
cwtl
cs
push
cld
mov
and
xchg
push
mov
dec
rep
aas
pop
fcoms
test
inc
lock
js
cld
xchg
pop
popa
fidivs
adc
adc
testb
pop
cltd
dec
icebp
aad
adc
imul
push
lea
cltd
insl
pop
out
mov
push
shlb
nop
popf
add
jo
pop
lret
jle
xlat
pop
add
dec
sbb
cmc
outsl
dec
shlb
pop
in
push
div
fucom
aaa
in
mov
bound
mov
ja
xchg
movb
popa
adc
mov
mov
test
shl
push
je
popf
and
inc
pop
sub
ret
bound
je
andl
fdivrs
icebp
xchg
lods
sbb
js
push
pop
scas
sub
push
push
xchg
in
xor
leave
or
sbb
fdivrs
push
sub
adc
adc
into
mov
push
je
xchg
pause
cli
inc
mov
cld
repz
push
cmp
into
xchg
pop
push
mov
mov
bnd
inc
pop
push
pusha
mov
mov
xchg
ret
sbb
pusha
push
ror
repz
lret
popf
repnz
cwtl
inc
add
dec
movsl
xchg
jnp
mov
aam
ficoml
jo
rorb
fsubr
cld
aam
sbb
dec
xchg
je
jns
lock
sub
das
pop
movsb
in
sbb
push
rcll
xlat
push
mov
cmc
jnp
subb
cmpsl
or
js
int
sub
das
mov
xor
daa
adc
mov
mov
scas
std
xor
sar
test
xorps
lret
jns
inc
mov
ja
imul
cmc
adc
mov
add
sub
leave
das
pop
fidivrl
scas
dec
adc
add
lock
dec
jp
xlat
cli
sub
addr16
jmp
out
lret
cwtl
add
pop
and
sahf
push
cmc
pop
push
shrl
pop
into
mov
movsl
cli
cmp
pop
add
mov
sbb
adc
icebp
mov
into
cmp
sbbb
shrb
test
pop
int
jnp
outsb
mov
push
hlt
icebp
jmp
dec
stc
or
scas
imul
sahf
movsl
lock
mov
rorl
xabort
fidivrs
push
push
push
fdiv
xchg
dec
clc
bound
xor
sbb
ljmp
mov
mov
push
dec
lea
add
ss
and
pop
je
ja
mov
xchg
sbb
andl
in
iret
stos
and
mov
scas
mov
dec
cmc
cmp
xchg
data16
mov
outsl
and
movsl
movsb
ss
dec
cmpsl
jb
fldcw
out
adc
fs
sbb
adc
pop
mov
or
push
mov
cld
sub
int
clc
jge
std
cli
push
nop
aad
xchg
jp
incb
stos
and
fld
data16
mov
ret
add
mov
lcall
push
mov
push
xchg
cltd
shlb
imul
call
mov
pop
stc
or
push
add
jb
cli
inc
stos
fstps
xor
mov
dec
jb
xchg
shl
lock
dec
shrb
mov
sarl
xor
sbb
fisttps
jae
popf
mov
cmp
jno
and
loop
pusha
leave
fs
mov
ljmp
popf
mov
mov
pop
iret
insl
push
and
je
mov
mov
idiv
pop
dec
cmp
test
jae
dec
cmc
fwait
inc
test
lea
jne
jno
pop
jb
sbb
mov
add
in
lods
cwtl
adc
jno
jl,pn
test
imul
jno
aad
mov
mov
inc
mov
fmul
cmp
divl
mov
jae
repz
push
es
xchg
leave
jne
imul
and
inc
ja
movsl
mov
jp
adc
test
mov
push
ljmp
cmpsb
pop
sti
subl
fxch
mov
aaa
xor
push
nop
in
inc
or
dec
jns
push
mov
fdivrl
lcall
or
push
inc
push
aas
fldenv
jb
pop
mov
cwtl
xor
lds
push
shrl
icebp
dec
aas
xor
adc
sub
cmc
fmuls
and
push
pop
hlt
aas
pop
pop
xor
and
lcall
mov
push
int3
pop
xor
neg
pcmpeqw
mov
loop
sbbb
adc
mov
decb
cs
sbb
push
xor
daa
push
pop
arpl
jbe
pop
stc
test
sub
test
xor
outsb
pop
mov
popf
add
jmp
lods
aas
out
insl
jle
hlt
pop
scas
jne
mov
cmp
mov
xor
pop
pop
test
lods
sbb
shrl
icebp
jecxz
filds
leave
out
mov
jne
adc
in
inc
or
ja
xchg
push
push
mov
jg
add
xor
out
cld
xor
pop
jnp
push
aaa
lock
in
mov
xchg
xor
xor
leave
xchg
clc
leave
dec
clc
test
cmp
xchg
in
mov
fbstp
sahf
adcl
out
insl
sub
hlt
cmc
rolb
mov
cs
stos
mov
adc
sbb
sbb
pop
xlat
loop
mov
jl
ja
push
out
sub
cmp
loopne
push
loopne
xchg
pop
mov
movsl
sub
orl
loopne
sbb
sub
xchg
divl
ss
sbb
fimuls
mov
xchg
jbe
jg
mov
loope
mov
fwait
mov
bound
push
jl
dec
adc
add
sbb
xor
jecxz
xor
pop
jne
out
adc
leave
push
push
add
lret
ja
mov
inc
out
add
sbb
imul
pusha
jbe
pop
aaa
adc
cmc
cmpsl
leave
cmp
mov
pop
bound
jo
and
mov
mov
lods
ds
ret
js
cmp
mov
in
pop
xor
jno
sub
dec
out
dec
aaa
dec
push
mov
add
out
leave
cmc
jns
loope
adc
mov
jg
mov
or
cld
out
dec
cld
test
lods
cli
sub
jns
and
dec
inc
div
aas
lods
jp
das
insl
cli
pop
mov
orb
rorb
sti
mov
pop
sub
pop
fidivs
lea
sbb
jne
and
clc
cli
pop
movsl
jno
daa
into
mov
push
pop
push
jb
pushf
pop
mov
dec
hlt
pop
test
fimull
inc
sub
jle
push
cmpsb
js
lods
push
xor
cmp
es
call
adc
dec
int3
sbbb
cmp
cs
loop
cmp
lods
pop
movsb
or
xchg
mov
mov
scas
push
pop
jo
push
insb
sti
or
jle
inc
daa
cmp
out
mov
bound
cld
jp
iret
mov
pop
insl
fstpt
aad
lds
mov
cmp
iret
loop
icebp
pop
lret
ljmp
shl
jle
rcrl
test
inc
pop
and
pushf
xor
and
shrl
gs
in
and
lods
fmuls
into
imul
xchg
ja
mov
outsl
mov
inc
jge
xor
mov
fwait
push
stos
hlt
stos
xor
jp
mov
or
push
ret
decb
daa
pop
stc
shrb
out
in
iret
out
js
lea
gs
dec
stos
cmpsb
das
cmpsb
add
in
cmp
xchg
mov
push
mov
pop
xchg
and
xor
out
pop
inc
scas
stos
cli
ljmp
mov
addr16
arpl
sub
daa
sub
repz
testb
and
pop
sub
push
movb
push
adc
cmp
inc
leave
addl
xchg
std
sub
dec
sbb
cmp
sbb
lods
dec
lods
or
jnp
divb
test
push
adc
test
sub
mov
dec
sbb
xchg
jo
cmp
rorl
out
or
xor
or
or
dec
lea
popf
lock
out
xchg
out
or
test
add
out
push
mov
dec
nop
pop
fwait
out
adc
call
loope
add
ds
jbe
loope
inc
sub
mov
cmp
and
xchg
lods
sub
cmp
push
push
push
sbb
jl
and
mov
mov
gs
cmp
scas
mov
pop
jo
jb
jmp
scas
hlt
adc
push
adc
mov
adc
xchg
ja
das
rorb
cmp
sahf
push
pop
sete
add
outsl
clc
inc
js
daa
scas
ja
push
out
sti
mov
inc
fildll
and
stos
aad
in
cmpsb
call
scas
mov
sbb
mov
or
xor
cmp
js
inc
pop
icebp
test
push
mov
enter
cwtl
in
ffreep
or
cmp
cld
inc
push
add
cmc
mov
int
mov
cld
push
mov
orb
flds
mov
mov
imul
add
xchg
sub
mov
cld
leave
mov
test
xchg
cli
push
mov
out
add
pop
pushf
adc
cli
mov
scas
cmp
pop
mov
popf
or
adc
xor
ja
xlat
mov
movsb
add
adc
pop
inc
imul
and
call
lret
mov
mov
mov
daa
out
fdivs
mov
mov
stos
mov
ljmp
adc
pop
xor
das
pop
mov
pop
inc
jbe
stos
je
xchg
aad
cmp
adc
shl
mov
lret
aaa
push
xlat
cmpsb
lds
jo
push
push
clc
jnp
jbe,pn
cmpb
dec
push
sahf
ja
xor
faddl
cli
out
vmovss
jnp
std
or
int
enter
js
xor
cltd
mov
xchg
andb
pop
stc
scas
lret
xchg
mov
dec
inc
pop
lds
shrl
enter
repz
gs
mov
in
test
xor
fistpll
das
jbe
ja
scas
fisubl
push
sti
js
adc
mov
scas
mov
xor
mov
push
lds
repz
into
jne
movsb
sbb
xor
cltd
push
and
push
add
movsl
push
lods
movsb
push
lahf
lock
sub
pop
sahf
jg
nop
pusha
std
push
inc
jbe
pop
cltd
es
pop
add
or
xchg
add
dec
cmpsb
jns
mov
sti
fwait
cmp
push
imul
fcoml
sahf
mov
xchg
add
popf
and
inc
int
xchg
lods
cmpsb
dec
test
cli
add
and
jge
push
dec
fisubrs
add
mov
cmp
add
repz
pop
dec
les
hlt
jecxz
jle
mov
cmp
mov
pop
mov
int
inc
cmpsb
cltd
inc
je
lods
sti
nop
scas
or
pusha
mov
outsl
sar
insb
in
or
lret
add
push
adc
ljmp
pop
push
mov
cmp
push
ja
test
fisubrl
or
pushf
add
add
xchg
and
mov
add
into
and
sbb
push
inc
loop
je
xlat
push
inc
push
bnd
aas
lret
add
in
inc
fisubrl
mov
nop
or
xchg
inc
xor
cmp
jae
cwtl
mov
test
mov
cmp
xchg
cli
jno
adc
push
out
shl
sbb
je
pop
test
ljmp
cld
push
gs
xorl
mov
notb
jmp
inc
adc
jnp
inc
insl
or
js
into
mov
pusha
fldcw
cld
xchg
psrlq
adc
pop
loopne
mov
in
das
cmp
hlt
pop
aad
xchg
sbb
xchg
insl
ret
xchg
addr16
nop
into
jecxz
daa
insb
sti
fnsetpm(287
pop
push
popa
bswap
inc
xor
scas
cmp
jbe
aam
cmp
pop
jbe
icebp
cmpsl
jne
and
addr16
fs
mov
add
jb
add
es
sub
xchg
scas
mov
mov
mov
repz
out
mov
negl
or
and
int3
test
cmc
aam
mov
sub
lock
in
inc
test
repnz
jne
xor
ret
andps
ja
mov
xchg
pop
sbb
mov
pop
cld
rcll
scas
inc
pmaxub
sbb
imul
ds
pop
dec
push
cmc
jle
lock
pop
push
dec
inc
sbb
adc
adc
inc
xchg
sbb
adc
xchg
add
jecxz
arpl
dec
outsb
push
out
mov
jae
sbb
in
lds
cmc
push
das
inc
lret
xlat
movsb
cmpsb
lods
xor
sbb
call
inc
jne
hlt
cld
adc
push
movsb
les
into
dec
jae
mov
dec
jbe
cli
inc
shll
mov
orl
sbb
mov
sbb
imulb
lret
jmp
ljmp
or
push
mov
xchg
addr16
adc
lds
push
in
cmp
out
aam
int3
fwait
and
and
mov
xor
cld
je
inc
insl
pop
pop
cs
out
jg
inc
imull
or
les
xchg
rcrl
push
inc
xor
and
sub
dec
or
repnz
mov
aad
out
into
jl
jno
dec
push
sbb
in
jmp
mov
lea
mov
adc
js
jnp
sbb
sbb
arpl
ficoml
xchg
scas
xchg
push
mulb
add
push
mov
sbb
mov
and
popf
xlat
lret
jg
jno
je
orb
pop
test
and
cmp
ret
fwait
sbb
es
insb
jbe
in
call
mov
testl
nop
mov
mov
loopne
sub
or
nop
outsb
jno
xorb
enter
push
fs
clc
or
hlt
pop
and
ss
daa
ja
stos
dec
adc
lcall
out
ret
xchg
fiadds
out
mov
jb
push
js
repnz
adcl
sbb
sahf
das
ret
stos
pop
aam
pop
adc
mov
cmpsl
js
out
mov
out
fidivs
sbb
xlat
arpl
inc
push
cmpl
sbb
adc
adc
sub
inc
push
pop
ja
mov
negl
xor
adcb
sbb
jns
pop
cmp
jnp
jb
pop
cmp
push
fstpl
or
and
pop
jbe
mov
jae
hlt
xor
shll
int3
daa
mov
adc
out
pop
inc
fldenv
cmp
mov
cmp
out
jl
lock
cmpsb
outsb
or
sahf
pop
pop
aam
clc
aam
xlat
dec
cmp
sbb
lock
repz
outsl
daa
adc
xor
cmp
repnz
pop
pushf
mov
lds
xchg
mov
imul
cmp
sub
sbb
outsb
imul
add
loope
addr16
pop
scas
test
in
inc
or
ficompl
push
clc
dec
cld
push
std
loop
mov
adcb
jmp
bndldx
mov
mov
ja
cmp
and
cli
push
cmp
push
jb
ss
loopne
clc
ljmp
inc
std
adc
leave
mov
sbb
push
cmp
xor
jne
mov
mov
xchg
out
js
sbb
daa
jne
xor
fcom
clc
adc
test
push
addr16
sub
push
mov
leave
pop
cmp
xor
clc
xorl
arpl
scas
aaa
inc
cmpsl
inc
xor
xchg
mov
dec
cmpsb
orl
fistps
les
lea
icebp
xorb
test
add
ljmp
cs
sahf
and
cld
ror
jbe
mov
sbb
adc
dec
repnz
xor
pop
sub
adc
lods
dec
pop
adc
scas
out
cmpsl
adc
in
das
xor
cmp
negl
push
mov
xchg
dec
push
inc
sbb
je
adc
mov
ret
adc
imul
push
repnz
dec
xor
lods
cmpsb
mov
cmpsb
cmp
cmp
addr16
imul
nop
push
inc
mov
adc
adcl
in
icebp
pop
dec
pop
clc
xchg
jl
inc
push
je
jbe
push
xchg
aam
mov
sti
loope
inc
das
cmp
mov
pop
fldcw
mov
aas
js
scas
fadd
daa
xlat
pop
lcall
mov
push
iret
ds
scas
push
mov
dec
in
mov
sbb
mov
std
mov
das
mov
push
push
xchg
ljmp
std
inc
push
push
rdtsc
dec
popf
insl
gs
rolb
ja
jp
ss
ja
mov
add
cltd
insl
xchg
adc
iret
fldlg2
out
pop
jno
mov
or
inc
into
pop
jbe
jne
inc
jle
jmp
pop
xchg
fadds
pop
jl
pop
rcrb
xor
push
out
mov
lods
inc
xchg
cmp
xor
or
les
and
jnp
sti
xchg
push
leave
dec
jle
sub
popa
adc
pop
out
nop
and
sbb
sub
enter
fnstcw
xchg
in
fsts
push
imul
ret
or
push
adc
idivl
mov
insb
jecxz
popf
lds
jo
push
dec
nop
sbbb
pop
add
pop
cmpsl
js
pop
mov
cld
mov
pusha
push
pop
cmpsl
dec
lret
push
pop
cld
test
xor
arpl
pop
aas
mov
mov
cwtl
pusha
sub
mov
mov
add
loop
ret
pop
mov
jp
in
rorb
xchg
dec
scas
push
cmp
aam
cwtl
jae
mov
je
repnz
shrb
mov
mov
push
xor
insl
or
lds
xchg
ret
push
outsb
mov
push
xor
jo
pop
dec
cmpsb
xchg
es
test
bound
loop
add
dec
jae
inc
popf
mov
mov
call
push
add
inc
mov
adc
js
fistps
in
scas
fwait
adc
imull
mov
pop
cmc
jno
fistl
lods
outsb
inc
pop
dec
inc
fmuls
int
cmpsl
pop
lret
mov
outsb
or
aas
enter
fsubs
mov
push
imul
and
cwtl
lret
mov
aaa
aas
push
mov
xchg
push
jg,pn
je
inc
mov
fstl
aas
push
shll
or
into
or
mov
out
fmuls
jecxz
cmp
test
test
repz
ja
inc
je
call
sahf
test
inc
xchg
cli
call
mov
and
cli
xor
xchg
jo
fistpl
inc
cmp
and
cmp
mov
mov
mov
out
orl
test
sub
adc
mov
sub
push
clc
enter
lds
std
es
icebp
add
cli
inc
xor
notl
pop
enter
addr16
cmp
ss
add
icebp
cli
or
nop
mov
insb
lods
pop
dec
jle
jle
std
fscale
pop
dec
mov
test
lahf
popf
rolb
sbb
pop
je
push
push
add
ss
cwtl
and
jns
sbb
push
dec
mull
mov
std
gs
xor
mov
fists
inc
sub
inc
loopne
insl
push
add
inc
fsubl
pop
pop
fdivrp
lea
aad
mov
or
lock
pop
push
jmp
sbb
push
mov
rolb
dec
test
ret
ss
sar
add
fcomps
cmpsb
dec
sbb
dec
lret
cmp
mov
movsl
fdivp
add
setns
jp
pop
cld
jbe
jbe
sarb
aas
dec
lods
pmaxsw
or
inc
imul
sbbl
sub
test
push
cmp
adc
punpckhbw
jmp
dec
addr16
push
pusha
dec
jns
add
jbe
pop
pop
imul
rcrl
adc
daa
xchg
rorl
add
cmc
fdiv
mov
xchg
aas
test
data16
daa
add
push
scas
jmp
cmpl
cld
pushf
cmp
leave
popf
lods
nop
insb
push
pop
and
ja
dec
ja
pop
stos
jb
fdivrs
jne
pop
lret
inc
mov
pop
dec
sub
repnz
imul
movsl
idivl
pop
sbb
ljmp
je
pop
pushf
repnz
cmp
ret
cmp
mov
out
movsl
cli
sbb
insl
jo
xor
cli
mov
dec
cmp
jae
xchg
ret
mov
movsl
adc
loope
popf
xor
cli
cld
sub
xlat
jbe
xor
inc
and
xchg
fisubs
and
jae
push
loop
idivl
inc
jp
outsb
out
cmc
shl
inc
sub
lds
push
sub
mov
push
js
fsts
mov
in
inc
pusha
daa
lds
movsb
aas
jmp
movsl
or
out
lret
lods
cs
jne
cmp
or
movsb
fiaddl
mov
out
sar
mov
dec
ja
negl
testb
cltd
out
jl
cmp
or
xchg
xor
dec
fdivrl
dec
test
hlt
loop
and
movsl
pop
fidivs
adc
ret
cld
or
outsb
cmp
push
mov
icebp
dec
xor
jl
xor
test
repnz
mov
movsb
cmp
xchg
neg
push
or
and
cmpsb
jp
lock
in
push
ret
and
data16
jbe
pop
inc
sbb
and
sub
repnz
mov
sub
adcb
mov
xlat
push
inc
stc
sub
push
jmp
fidivs
and
leave
popf
add
ss
mov
sub
test
hlt
inc
int
pop
pop
cli
and
or
call
inc
das
orb
shrb
cld
pop
jo
adc
fsts
lds
push
and
sub
fldt
jl
jno
fdivr
pop
fcomps
loopne
jo
jecxz
cmp
andl
or
je
mov
ljmp
hlt
sub
fildll
inc
inc
cmp
sbb
cltd
or
add
andl
leave
inc
mov
adc
jle
js
out
add
mov
pop
stos
cwtl
and
push
cld
or
jns
xchg
push
repnz
adc
ds
in
test
mov
ss
aaa
xchg
cmp
fsts
cmp
jns
daa
leave
cmp
push
scas
jecxz
fbstp
daa
scas
jp
sbb
sbb
and
xchg
mov
dec
add
jmp
dec
test
inc
pop
rolb
cmpsl
jb
and
movsl
jo
clc
test
mov
lock
pop
push
lahf
mov
xlat
jbe
sub
push
mov
cmc
or
jns
decb
je
stos
pop
and
sub
dec
movsb
pop
cltd
enter
xor
inc
inc
div
daa
sbb
sub
fmuls
cmpb
jbe
std
jbe
arpl
lock
xchg
jmp
xchg
mov
bound
push
imul
xor
and
fdivrl
push
mov
std
rorb
push
add
mov
xchg
clc
popa
inc
add
jnp
push
inc
cmp
scas
jbe
mov
stos
push
sbb
lret
mov
inc
jb
loope
loopne
insl
rorl
scas
loope
dec
sbb
pop
pop
push
lock
mov
hlt
ja
push
cli
notb
shrl
xor
dec
cld
push
rcrb
es
dec
pop
adc
push
lcall
out
mov
push
jnp
push
sti
testl
enter
leave
bound
add
sub
mov
dec
or
cwtl
cwtl
adc
push
cmp
loopne
sahf
pop
xchg
jne
les
push
sbb
dec
cmpsb
push
repnz
xor
out
mov
jge
inc
out
jnp
inc
fdivs
adc
or
adc
scas
inc
xor
sahf
das
sahf
popf
or
pop
inc
fstpt
cmp
adc
jae
xchg
mov
inc
xchg
lods
scas
push
jo
bound
scas
add
mov
iret
test
inc
jb
push
sub
lcall
clc
js
inc
xor
pop
ds
mov
cwtl
test
xor
js
js
lods
das
int
sub
push
into
mov
mov
cltd
insb
jecxz
cmc
test
aam
cmp
push
out
in
cmp
out
dec
push
int3
and
adcl
push
lea
or
iret
pop
add
inc
std
or
ljmp
aaa
jmp
ja
mov
icebp
movsl
stos
dec
jo
jmp
fwait
jmp
aaa
das
out
or
push
inc
shrb
push
adc
sbb
mov
shlb
ret
cmc
lcall
and
sub
adc
ljmp
adc
mov
push
xorb
and
test
enter
out
addl
ss
sub
data16
addr16
fidivl
maskmovq
divl
insl
fsubs
cmp
adc
leave
jbe
int
out
mov
paddd
fdivs
xor
rorl
mov
inc
adc
inc
pop
fcomps
sbb
aad
lock
cli
mov
popa
jge
xchg
out
pop
ficoml
int
push
clc
iret
cmp
out
mov
cmc
xchg
sarb
jl,pt
mov
imul
ss
imull
mov
data16
push
lret
in
mov
mov
sbb
push
cwtl
push
loopnew
bound
mov
add
mov
js
or
adc
fwait
push
lods
add
push
mov
xchg
pushf
dec
jp
inc
lods
mov
push
push
cmp
int
push
push
mov
mov
mov
ret
cmpsl
stc
std
mov
xchg
lds
stos
inc
repnz
outsb
push
add
xchg
cmc
push
jb
mov
js
xchg
ja
insl
push
cmp
in
imul
pop
pop
sbb
lds
inc
roll
cmpsl
jo
sbb
sbb
cmp
pop
loope
push
mov
aas
pop
cwtl
mov
pop
aad
push
sub
push
push
sbb
lock
neg
mov
into
jo
pop
sub
mov
lea
roll
femms
clc
roll
jge
sub
iret
negl
dec
mov
inc
jmp
pop
icebp
push
jmp
jmp
sbb
js
sti
jle
inc
mov
cmp
xor
enter
sbb
xchg
dec
inc
push
or
dec
or
nop
insb
add
mov
fs
movsl
inc
fs
or
mov
popl
into
test
scas
das
lahf
ret
js
fildl
jo
nop
adc
cli
js
push
xchg
test
jnp
shrb
sub
push
jbe
cli
divl
les
xor
mov
and
je
enter
cmp
sub
cmp
clc
mov
adc
dec
sbb
cmp
push
dec
mov
push
cs
pop
shll
or
mov
xrelease
es
lret
adc
cltd
lret
movzbl
push
cmp
or
cmpsb
dec
inc
lahf
sub
sub
cld
xchg
dec
push
jl
out
adc
xchg
jb
shlb
pusha
out
xor
aaa
je
xchg
xchg
mov
xor
sub
lods
push
out
adc
cmpsb
shlb
sbb
mov
or
cmp
out
xchg
xlat
push
loop
xor
adc
int
xor
or
scas
ret
xor
cmc
je
clc
xor
mov
je
xor
aad
or
loope
mov
sub
in
pop
fimuls
push
dec
test
or
scas
jmp
xor
mov
mov
shlb
cmpxchg
mov
cmpsl
mov
mov
sti
not
daa
gs
out
xor
cld
xchg
pop
adc
xorb
cmp
push
out
or
fmuls
mov
aas
adc
int
adc
jae
xchg
xchg
xor
in
mov
inc
daa
xor
cld
negb
dec
into
sti
cltd
mov
out
movb
jo
mov
js
xor
sahf
or
test
scas
push
outsb
sub
fldenv
and
add
pop
sub
dec
push
lods
pop
int3
jp
mov
jle
es
cs
ds
dec
or
or
cwtl
sbb
mov
lods
clc
mov
cmpsl
inc
fcoms
mov
dec
jnp
mov
dec
cmpsl
sarl
aam
into
shrl
push
lret
lods
int
mov
mov
imul
cld
inc
clc
dec
dec
adc
ja
jge
stos
sbb
adc
clc
sub
mov
adc
insl
loope
adc
cmpsl
inc
aaa
adc
iret
lea
loope
notl
subb
or
xchg
aas
rorl
mov
mov
pop
test
push
or
cmp
pop
pusha
push
test
jo
loopne
xchg
pop
jmp
in
call
dec
cmp
sar
into
gs
fidivs
pop
imul
inc
mov
dec
or
out
and
xchg
sbb
xchg
lods
cmp
shll
add
scas
in
xchg
in
in
jb
sahf
xor
shlb
xchg
lcall
js
cmp
add
mov
push
js
mov
cmp
test
pop
popa
filds
mov
into
out
xor
dec
daa
fnstenv
jge
mov
xchg
idivb
or
leave
iret
adc
gs
jl
or
dec
sub
in
leave
out
sub
add
pop
loope
fadds
push
aas
sbb
cs
inc
mov
mov
inc
pop
mov
inc
pop
decb
jmp
je
into
loopne
movsb
mov
dec
hlt
or
xor
or
in
ret
inc
jmp
or
pop
add
xchg
lahf
sub
push
xor
add
adc
sbb
jbe
xor
sub
or
mov
out
pop
xchg
xor
js
aas
fmulp
lret
inc
pop
jmp
mov
inc
sub
push
push
cmpsb
in
cli
xchg
cmp
and
adc
pop
cltd
insb
sahf
mov
mov
adc
jmp
idivb
adc
popa
fidivrs
mov
mov
popf
adc
jle
push
xor
ja
xchg
lret
mov
aaa
notl
dec
call
jns
xchg
daa
mov
jbe
dec
das
aam
xchg
mov
inc
aam
cmp
xchg
out
pop
mov
hlt
rolb
enter
mov
dec
cmp
add
mov
into
xor
outsl
lret
and
push
nop
subl
jmp
mov
and
fistpll
xchg
icebp
push
aad
push
add
fwait
pop
and
cwtl
inc
xor
stc
xchg
jecxz
andb
pop
xorb
cmp
test
cs
add
mov
pop
pop
shlb
hlt
adc
jle
mov
in
jb
jno
sub
cld
nop
jg
jne
rclb
xchg
cmp
dec
pop
je
ret
mov
pop
fcoml
out
mov
mov
clc
xor
fimull
dec
or
test
aad
pop
push
adc
in
pop
inc
xchg
pop
mov
xadd
dec
int
dec
out
fimull
int3
sub
inc
mov
push
xor
je
mov
cld
rclb
sub
cli
dec
cmpsl
ss
dec
mov
xorl
dec
mov
and
shll
loopne
mov
mov
sarb
mov
jg
cmp
cld
xchg
test
dec
mov
mov
lea
adc
add
mov
jmp
jl
xchg
insl
jns
jo
mov
sbb
movsb
ret
sbb
cmp
cmpb
xor
cmp
pop
sub
cmpsb
leave
orb
mov
inc
pop
test
xlat
sub
daa
in
je
push
lret
lret
popl
add
mov
cmc
insl
addl
nop
sbb
lea
push
ja
mov
pop
cmpsb
mov
mov
repz
mov
mov
clc
daa
jo
fcomps
mov
cmp
fldcw
inc
and
cmc
dec
pop
jp
mov
jns
inc
mov
jp
sbb
in
mov
inc
repz
out
sbb
pop
notl
cmp
push
pop
addr16
pop
and
jbe
adc
shlb
cltd
push
daa
push
test
jbe
mov
into
add
out
test
jae
inc
loop
cmc
jns
in
mov
sub
fnstenv
xlat
je
mov
loopne
aam
mov
fdiv
lock
out
adc
sub
mov
addr16
adc
push
push
cmp
leave
jb
jbe
add
test
imul
jg
and
sbb
lret
lcall
repz
mov
cwtl
cmpsb
outsl
inc
ret
pop
cmpsl
jne
aam
dec
jl
dec
jp
scas
and
mov
lahf
inc
mov
rorl
jp
sub
cmpsb
push
add
loop,pt
inc
fbld
je
mov
jbe
adc
dec
scas
mov
ret
icebp
adc
sti
add
dec
sbb
mov
fsubr
mov
xor
ja
push
imul
mov
jae
xor
sub
popf
jecxz
jae
clc
leave
push
cld
cmc
ss
jbe
inc
cli
sbb
and
pop
cwtl
jne
lahf
xor
scas
xchg
sbb
adc
jae
cltd
jne
rorb
push
loopne
testl
mov
test
pop
js
mov
pop
cmp
out
and
in
inc
mov
push
shrb
stos
xchg
mov
pushf
fcomp
lahf
das
mov
sub
outsb
mov
push
mov
shll
shlb
ja
jns
in
sbb
mov
pop
push
iret
pop
push
ud1
jmp
mov
lods
adc
dec
cmp
push
adc
xorb
push
xor
pop
fsubl
cmp
shll
icebp
arpl
jle
dec
jnp
xor
pop
xchg
mov
xchg
add
adc
pushl
mov
pop
divl
cmpsl
xchg
jg
int3
ljmp
adc
decl
xchg
mov
movb
adc
stos
cmp
insb
jl
adc
jb
arpl
mov
int
mov
psubsb
and
mov
mov
xlat
movl
push
cmpsl
dec
cld
incl
or
hlt
mov
xchg
add
daa
xchg
adc
shll
xchg
inc
mov
mov
sub
outsb
clc
mov
xchg
pop
mov
lods
or
fldcw
repnz
sbb
roll
xlat
push
repnz
loopne
mov
es
push
or
and
mov
test
insl
add
ja
testl
fs
pop
in
out
cmp
mov
and
movsl
in
test
sbb
stos
fcmovnb
adc
clc
cmp
int3
sti
dec
and
test
into
jl
push
and
js
push
rcrl
fs
xor
in
fiaddl
cmp
stos
into
sarl
fidivs
sti
test
push
lods
test
mull
mov
jno
jb
xor
addr16
adc
fcom
xchg
mov
and
lods
bsr
shrl
pop
fwait
repnz
enter
jae
loopne
adc
xor
or
inc
rcrb
jbe
int
imul
xchg
push
js
rcll
xchg
or
lret
and
mov
jle
out
scas
daa
dec
mov
insl
pop
aam
xcrypt-cbc
cmpsl
xlat
loop
inc
clc
mov
xchg
cmp
xchg
scas
fnsave
loopne
lahf
mov
xor
mov
test
nop
mov
lods
xor
sbb
js
testb
out
cmp
inc
imul
movsl
mov
cmp
mov
mov
sbb
sbb
lock
pop
cmp
sub
mov
push
ljmp
cld
xchg
dec
mov
fsts
lcall
push
adc
sub
mov
aas
movb
jns
mov
test
shrb
mov
mov
xor
mov
xor
lock
jno
pop
dec
push
es
sbb
and
mov
loope
push
mov
push
add
dec
in
mov
movhps
cmp
sbb
push
jp
daa
and
jne
mov
iret
push
jp
jnp
push
adc
push
lret
jbe
popa
mov
cwtl
lcall
mov
jle
ss
xlat
inc
push
shll
vpand
lahf
leave
xor
outsb
xorl
je
negl
mov
mov
mov
out
test
dec
jae
pop
and
sarl
xchg
cli
sbb
out
add
adc
mov
fidivl
adc
es
clc
pop
loope
add
sahf
and
push
and
xor
cmpsl
push
cs
jbe
xchg
adc
movsl
push
ja
xchg
jmp
jns
add
dec
das
not
xchg
cmc
loope
in
or
insb
hlt
add
mov
sbb
sbb
sub
inc
scas
fisttpll
push
xchg
ljmp
pop
cmpb
xchg
cmpsb
sbb
push
mul
lods
ret
lahf
repz
out
sbb
sbb
dec
mov
sub
lods
rcr
loopne
idivb
enter
push
clc
imulb
sbb
mov
adc
push
ja
add
lods
scas
scas
xor
test
cld
insl
pop
add
out
imul
rol
adcl
pop
scas
sbb
xchg
jmp
rclb
and
and
js
and
in
add
cwtl
add
pop
fildl
mov
jbe
inc
test
cmp
inc
js
xor
je
repnz
mov
popa
cmp
divb
dec
or
push
loopne
dec
test
int
lea
add
dec
push
mov
xor
jmp
out
icebp
xchg
f2xm1
sub
inc
int
sbb
sbb
fyl2x
or
mov
imul
sbb
inc
mov
or
into
dec
fadd
push
add
aaa
fmuls
test
mov
negb
xlat
cmp
xchg
cmpsb
fcomps
frstor
push
out
insb
js
jne
xchg
daa
test
fnsave
lret
or
mov
pop
pop
adc
into
and
js
xchg
loope
imul
daa
outsl
fists
call
pop
das
add
test
pushf
movsl
inc
push
and
repz
mov
jb
sbb
dec
pop
cmp
mov
je
cmp
push
imul
add
mov
int
pusha
or
push
aam
inc
sub
repnz
sahf
mov
jp
cli
push
xchg
mov
push
fnstsw
loopne
hlt
cmpsb
fisubs
sbb
cld
rcrl
push
pop
ja
and
fstpl
push
add
clc
cmc
fwait
add
insl
mov
lea
sbb
std
outsb
mov
jns
dec
jge
add
jl
jbe
nop
pushf
push
loopne
je
imul
hlt
dec
cltd
xchg
inc
xlat
jecxz
outsb
and
push
push
adc
mov
repnz
fsubrl
jae
push
fidivrs
ja
jp
jae
pop
popf
bnd
adc
adc
adc
addr16
or
mov
outsl
popa
pop
jbe
xor
mov
or
mov
cld
shrl
movsl
mov
push
sub
push
xchg
push
imul
notl
push
xor
clc
push
das
loope
cmp
pusha
sub
adc
xchg
push
sbb
jnp
mov
jl
adc
mov
push
jno
rcrb
mov
addr16
mov
or
jecxz
mov
cld
ficoml
cli
pop
fwait
bound
outsl
and
fistps
adc
pop
test
into
fstl
add
mov
or
sub
out
adc
pop
pop
out
insb
mov
test
fcmove
ss
push
mov
or
adc
fsubs
jne
sbb
je
pop
pop
std
mov
test
sub
xlat
loop
pop
or
xchg
out
fmuls
push
mov
push
mov
mov
lcall
pop
addr16
lock
pop
cwtl
add
pop
hlt
rcll
pop
add
shll
push
hlt
sbb
mov
clc
push
sub
bound
pop
and
imull
mov
sub
fwait
sbb
dec
pop
sub
mov
js
jae
push
sub
idiv
xor
out
cs
push
fsubs
fists
push
aaa
pop
xor
xchg
dec
pop
mov
jbe
push
ljmp
fucomp
int
dec
add
lods
loopne
push
mov
pop
stos
mov
jno
rcr
push
add
mov
call
out
pop
sti
xor
ljmp
popa
out
add
and
test
mov
sub
sbb
mov
movsl
popa
push
notb
pop
adc
inc
lock
cmp
ja
adc
mov
and
mov
jg
je
mov
mov
xlat
jbe
outsl
jns
sbb
xlat
mov
fsubs
dec
das
fs
inc
stos
cwtl
xor
cmp
inc
ret
jl
jo
cs
push
mov
inc
xor
jb
mov
clc
xchg
nop
aaa
ds
es
call
mov
push
pusha
fisubrl
cmp
je
ljmp
mov
daa
icebp
jbe
ja
movsl
das
adc
mov
or
mov
pop
push
cmp
lret
ja
in
stos
xor
dec
xlat
sub
mov
xor
xor
cwtl
insb
and
ja
mov
ror
cli
sub
mov
stos
insl
add
push
xchg
adc
pusha
es
or
int
fsts
out
mov
mov
xchg
sub
xor
out
xor
push
mov
rclb
and
scas
pop
scas
cmpsl
adc
into
and
hlt
cmp
xchg
pop
mov
js
mov
dec
sub
xchg
out
fs
loope
and
pusha
daa
out
mov
pop
jb
xchg
ja
cmp
test
or
mov
imul
lahf
sbb
mov
xor
dec
xchg
lea
add
push
or
pop
test
push
mov
xor
cmc
lock
fildll
push
inc
mov
and
es
push
cmp
push
pop
push
push
push
out
stos
xchg
mov
cmpsb
sub
push
lock
jno
mov
xor
jb
in
xchg
vpaddq
lods
fidivrl
cmp
sub
shrl
mov
xchg
dec
ds
shlb
cmp
mov
cld
loope
out
std
leave
or
pop
push
lods
roll
popa
sbb
in
in
mov
mov
scas
mov
mov
push
cmp
jne,pn
xchg
into
and
cli
push
loopne
popf
inc
cs
pop
sub
hlt
imul
jecxz
jge
into
jns
jb
roll
aad
scas
dec
cmp
pop
mov
imul
adc
fistps
push
mov
jo
mov
pop
movsb
push
enter
subl
dec
fimull
scas
aaa
mov
ret
mov
fiaddl
inc
xor
sub
in
and
js
inc
adc
into
sbb
clc
lret
xlat
aaa
push
cld
xchg
pop
ja
cmp
xchg
push
inc
sbb
xor
add
scas
lock
push
xor
lods
je
test
mov
or
sub
mov
push
pop
dec
dec
jge
or
clc
insl
in
xor
jmp
xchg
loopne
nop
pop
sbbb
out
mov
mov
je
cmp
int3
mov
cmp
int
mov
negl
ss
loopne
cli
stos
scas
out
dec
cmp
and
push
repz
fdivs
and
pop
sub
push
repnz
mov
rep
hlt
cmp
cli
xor
adc
push
fs
cld
add
mov
dec
scas
popa
inc
jmp
add
std
insb
shl
lret
pop
sbb
xlat
clc
movb
or
adc
add
mov
pop
pop
ror
lds
stos
icebp
and
mov
shll
xchg
inc
fsub
pop
pcmpeqw
dec
jmp
shr
scas
adc
cmpsb
mov
ret
pop
jle
cmpb
mov
in
je
out
rep
test
stos
testl
mov
mov
dec
xchg
xchg
pop
scas
pushf
stc
mov
adc
cmp
loop
pop
push
inc
insl
jge
es
ljmp
pop
icebp
mov
jg
xor
sub
jbe
mov
int3
scas
cmp
sub
push
hlt
iret
dec
pop
jl
mov
jns
xor
stos
leave
inc
dec
xchg
pusha
and
je
cs
fdivrp
iret
pop
pushf
es
ja
xchg
dec
cmpsl
mov
and
lods
ss
inc
in
out
xor
iret
lods
pop
in
pop
mov
das
jbe
jle
imul
xchg
mov
cli
push
out
add
iret
adc
loope
dec
mov
and
adc
xor
jl
test
push
mov
push
nop
mov
leave
mov
pop
popa
test
out
mov
in
insb
imul
push
fnsave
push
and
pop
add
loopne
addr16
out
sub
cld
scas
dec
push
daa
daa
push
je
jle
jbe
mov
hlt
shlb
dec
push
mov
xchg
in
fildll
mov
mov
sbb
cmpxchg
sbb
pop
icebp
ja
adc
xchg
sub
repz
mov
daa
xor
jbe
dec
ljmp
divb
or
insb
scas
adc
daa
cmpl
mov
testl
cmp
stos
or
pop
adc
mov
mov
loop
xor
out
pop
cmpsl
call
lret
mov
dec
dec
lods
out
cmp
setg
in
xchg
test
pop
push
leave
sbb
sub
adc
popa
daa
push
es
xor
ja
enter
imul
sbb
into
loopne
jne
je
cld
test
sub
loop
rcrl
push
fsubrs
inc
lret
mov
ja
xchg
xor
cwtl
fwait
and
mov
jne
or
inc
add
pop
adc
sbb
stos
test
out
cltd
test
xor
push
enter
push
inc
sub
sub
dec
sarb
sub
adc
filds
sub
jns
lods
scas
and
scas
xor
icebp
jecxz
push
je
ss
lock
jno
xchg
pop
enter
push
sbb
push
push
push
call
push
daa
out
mov
scas
in
jg
sbb
and
mov
int3
cltd
rolb
mov
pop
push
daa
mov
add
adc
push
sbb
xor
ja
sub
push
adc
pop
sti
int
fs
xchg
out
outsb
mov
in
jge
xlat
cmp
out
mov
lods
xor
push
mov
imul
pop
scas
je
addb
dec
lahf
loope
mov
pop
mov
push
cmpsl
jnp
cwtl
arpl
push
xchg
iret
jne
inc
xor
mov
dec
repz
cmp
out
add
or
insl
movsb
and
cmp
add
std
dec
loopne
mov
jno
and
rcrb
jg
cmp
clc
jmp
xchg
imul
loop
push
sub
lods
xor
je
mov
ss
cmc
jo
sti
aaa
imul
es
cmpb
mov
jmp
cmpsl
outsb
mov
daa
push
dec
hlt
aad
out
ljmp
push
mov
out
mov
clc
das
fnstenv
mov
leave
jne
outsb
xlat
cld
lods
repz
cli
and
dec
in
jo
mov
mov
aad
mov
ja
out
push
rclb
popf
fnsave
adc
addr16
fisubrs
leave
push
or
lret
push
push
addr16
jo
jb
pop
push
push
dec
mov
adc
inc
in
jnp
mov
xchg
pop
add
jecxz
cmp
push
adc
inc
dec
sbb
dec
or
into
cs
cmp
push
mov
dec
or
or
pusha
dec
comiss
sbb
push
icebp
sub
jecxz
cld
jno
sahf
sub
scas
push
push
sub
cmpsb
mov
jns
rcr
iret
daa
cwtl
mov
daa
ss
sub
push
sub
mov
iret
adc
push
arpl
pop
clc
push
xorl
fdivrs
xchg
roll
jle
cmpb
cltd
repz
int
stos
lcall
and
nop
cmp
push
xchg
jg
jle
mov
cmp
xchg
adc
shl
add
jne
or
xor
sbb
bound
mov
add
sub
xor
cmc
js
xor
js
xor
js
xor
js
bswap
out
sub
test
negl
xlat
loope
mov
pop
add
mov
sbb
xor
shll
mov
out
mov
out
je
arpl
mov
cmp
stos
negl
xlat
enter
cwtl
test
xor
adc
jno
fimull
push
push
jecxz
push
sbb
int3
test
xchg
ljmp
dec
test
loop
xchg
aaa
fsubrl
or
dec
sar
adc
jae
xchg
push
mov
mov
cli
mov
test
fisubrl
mov
sub
popa
mov
test
mov
pop
jae
inc
push
mov
fnstcw
sub
rolb
mov
mov
jae
out
mov
rcr
mov
test
rorb
cmp
ja
sub
js
mov
aas
cmp
ja
clc
cli
adc
add
cmpsl
lock
and
jg
jbe
dec
cltd
addl
mov
lret
lods
sub
popf
iret
adc
xchg
mov
dec
in
and
add
jg
lahf
sub
sbb
ja
xchg
pop
mov
jmp
dec
pop
dec
popf
pop
pop
les
push
in
pop
mov
scas
mov
ja
sbb
lret
inc
test
dec
add
sbb
out
jae
pop
fst
arpl
lahf
jns
leave
jp
movsb
lock
cmp
sbb
xchg
dec
sub
add
sub
sub
cmp
js
fnstenv
into
or
cmc
orl
into
leave
add
clc
in
hlt
or
test
xchg
shlb
jl
lods
xor
or
xchg
sahf
test
jb
scas
adc
or
fisubs
pop
js
mov
push
jl
cmpsl
mov
cmc
sub
daa
mov
lods
js
daa
ja
jmp
aam
mov
push
cld
int
js
jge
inc
shl
pop
pop
add
push
icebp
push
cmpl
jp
mov
push
xchg
jmp
test
pop
pop
lods
fucom
sahf
adc
fwait
idivb
mov
mov
inc
dec
dec
sahf
mov
push
insb
push
je
cs
mov
adc
mov
adc
cmc
fwait
fwait
test
shlb
out
adc
sarb
sub
mov
outsl
sbb
cmpsl
and
mov
xchg
stc
cmp
fdivrs
aad
lock
adcb
fildl
shrl
xchg
out
fldl
repnz
jae
push
cltd
add
mov
fs
notb
aaa
hlt
loopne
pop
cli
jo
push
in
ret
in
out
sahf
fs
lret
add
inc
cmp
std
and
mov
or
push
call
push
insl
iret
adc
icebp
js
mov
in
popf
push
nop
cltd
ret
popf
jmp
cli
sbb
pop
sti
dec
mov
lods
inc
add
cmp
mov
cmpsl
das
mov
xor
clc
sub
test
jmp
mov
mov
jp
mov
dec
cmpsl
das
push
inc
daa
int
je
jecxz
scas
jp
push
xor
jae
in
dec
repnz
fmuls
xchg
xor
sub
jbe
movsl
shlb
mov
lods
push
mov
dec
enter
fldcw
cmp
adc
aas
scas
fidivs
push
pop
sub
push
mov
push
xor
mov
imulb
mov
add
cs
pop
cld
fwait
sbb
pop
cs
mov
add
push
and
and
in
mov
pusha
outsb
dec
sub
inc
adc
push
jle
jnp
jp
pop
js
push
cld
push
ficoml
das
lcall
jecxz
cmp
push
aaa
lods
sub
testb
int3
push
mov
aad
out
icebp
xor
dec
pop
outsl
cmc
push
pusha
scas
lods
daa
aaa
jo
arpl
inc
hlt
imul
andl
cmp
xchg
lods
pop
mov
fildll
pop
add
les
cmp
pop
cmp
movsb
jmp
push
inc
mov
xor
shlb
shll
imul
cmp
scas
mov
and
pop
push
add
in
les
adcl
xchg
out
xor
inc
inc
popf
sbb
cmc
daa
call
cwtl
jns
jp
cmpsl
push
loop
and
xor
mov
pop
xor
xorl
sbb
cld
nop
fwait
mov
inc
fsubs
mov
jne
pop
adc
ficomps
mov
pop
inc
push
or
cmp
jae
jns
dec
cmp
pop
imul
push
mov
pop
fcompl
jg
push
jbe
xor
out
cwtl
cwtl
pop
loop
mov
cmp
inc
pop
jle
shufps
sbb
dec
push
jns
push
subb
es
push
mov
out
cs
lret
mov
xor
add
sub
mov
out
int
pushf
xchg
int3
clc
mov
jmp
rorb
bound
fisttpll
pop
xor
lods
jge
pop
mov
andb
dec
mov
inc
mov
popf
sub
into
xchg
cmp
faddl
jecxz
inc
mov
je
into
cmp
fcmovu
adc
ja
aaa
dec
push
call
ljmp
std
jecxz
xchg
xchg
insl
cmp
cmp
rolb
add
xchg
call
mov
scas
popa
jg
xchg
xchg
xchg
xchg
sub
dec
push
es
je
inc
fs
je
add
or
jmp
or
nop
xchg
push
ds
fadds
pop
pop
jmp
test
cmp
mov
xor
xchg
mov
lods
jbe
sub
loop
outsl
sbb
aaa
add
or
and
or
std
add
daa
lods
leave
mov
dec
inc
imul
data16
lods
inc
xchg
into
jecxz
imul
imul
in
jmp
xor
js
cmp
mov
insl
daa
push
mov
and
mov
push
cwtl
std
lea
push
cmc
ja
sbb
cmc
mov
addr16
outsl
mov
pop
lret
mov
xchg
xchg
xchg
cmpsl
push
out
pop
jge
push
daa
adc
sub
add
fldz
je
enter
mov
mov
cmpsb
mov
dec
js
lret
repz
daa
push
fmuls
push
std
add
arpl
add
xor
and
insl
pop
in
in
xor
repz
js
loopne
scas
and
dec
push
out
ss
lea
xchg
into
daa
push
mov
fmul
adc
iret
and
ja
cmp
nop
aam
pop
mov
mov
mov
enterw
jbe
add
cltd
dec
lret
cmp
add
sbb
mov
jbe
xor
mov
data16
negl
push
jne
int
jbe
jge
je
divl
aaa
mov
aas
loop
mov
xchg
and
fcomps
pop
push
cmp
inc
mov
jne
imul
push
inc
ror
into
push
jo
icebp
mov
nop
idivb
into
sbb
mov
scas
and
daa
push
mov
add
js
outsl
scas
out
mov
pop
jmp
cmp
insl
xor
test
inc
xchg
mov
pusha
push
jmp
insb
js
xor
clc
adc
cli
xchg
and
xlat
jecxz
jo
jbe
pop
push
adc
add
pop
rcl
sub
idivb
ds
push
subb
imul
cld
cltd
sahf
or
pop
clc
int3
push
mov
div
imul
cld
cli
cmpsl
jo
fdivrs
sub
cmpsb
fadds
loope
lea
mov
in
lea
out
push
mov
cltd
fcompl
daa
lea
loopne
mov
adc
xlat
loope
rol
das
ja
mov
push
int3
push
push
daa
pop
or
xor
stos
dec
or
fistps
mull
mov
add
mov
inc
stos
jns
mov
test
aas
push
push
aas
scas
cmp
and
insl
scas
pop
jae
cmpsl
test
or
pop
leave
pop
sbb
sarb
in
push
leave
jo
rcrl
cmp
mov
stos
addr16
mov
mov
dec
sti
fildl
dec
addr16
call
js
xlat
push
arpl
out
cwtl
ja
mov
add
adc
daa
lea
int
in
iret
jg
push
mov
add
cmp
fs
mov
pop
jns
mov
sbb
repnz
into
dec
xor
jo
lret
adc
xor
ficoml
push
and
jns
inc
sub
scas
cli
inc
adcl
jmp
pop
int
jg
xchg
inc
sbb
inc
mov
loope
sbb
pop
scas
lret
xor
cli
repz
into
in
flds
outsb
sti
push
imul
aas
test
pop
pop
ficoms
scas
std
cmpsb
ja
dec
or
cmpl
xor
xlat
xchg
ja
out
xor
or
inc
sbb
xlat
shl
sbb
push
test
idiv
add
mov
js
xor
mov
adc
xor
int
loopne
into
rcrb
adc
xor
movsb
rclb
jge
push
xchg
test
xchg
sub
flds
ret
dec
iret
add
jns
je
out
loope
mov
in
cltd
xcrypt-cbc
cmpsl
adc
mov
rorl
dec
or
rcll
jle
mov
or
int
adc
int
popa
lea
addl
fnstenv
push
mull
lret
sub
mov
jl
add
mov
test
pusha
xchg
or
push
sbb
and
shrl
xor
lea
repnz
je
sti
sbb
loop
aam
fidivs
xchg
ljmp
jmp
push
cmp
or
cwtl
adc
mov
mov
inc
inc
dec
xchg
test
out
loopne
or
lock
adc
je
add
pop
push
add
insl
sbb
ficoms
mov
int3
xchg
imul
scas
aas
test
lods
push
dec
cli
push
jns
pop
xor
in
popf
or
xlat
or
das
enter
outsl
in
loope
add
jae
es
sub
mov
jo
push
pop
pop
xlat
das
popa
sub
mov
out
scas
pop
fs
shrl
std
dec
ja
lods
ficoml
arpl
sub
xor
int3
jns
test
stos
leave
notb
sub
scas
bound
aas
fwait
jo
adc
loop
fidivrs
cmp
cmpsl
jnp
dec
cld
cmc
and
cmp
repnz
cmp
loop
xchg
jns
imull
bswap
test
inc
mov
aas
mov
pop
pop
test
jae
sbb
mov
mov
stos
loope
aaa
out
fstl
loopne
jne
mov
fmuls
push
jne
loope
repnz
scas
or
cmp
pop
andb
iret
rcll
fisubs
push
xlat
jnp
test
sub
and
xchg
stos
inc
arpl
dec
mov
pushw
loop
jp
lods
shll
aaa
imul
dec
sub
js
mov
jge
cwtl
mov
mov
add
mov
insl
push
movsl
jle
pop
lcall
dec
popf
jle
cmp
jnp
pop
inc
sbb
adc
push
inc
jae
stc
and
xor
lcall
xchg
jge
and
inc
icebp
repnz
pop
inc
repz
pop
adc
jo
fbld
outsl
mov
dec
mov
out
in
mov
sub
cmpsl
int
xorl
stc
arpl
jae
mov
clc
pop
scas
popf
rcrl
push
jmp
push
in
adc
mov
sub
push
popf
or
mov
push
or
jns
loop
xchg
push
mov
cld
mov
loopne
adc
dec
xor
mov
dec
push
out
dec
out
adc
stos
xchg
dec
push
mov
testb
jo
mov
cld
jp
ja
dec
lret
cmp
cld
cvtps2pd
jne
jl
test
shll
sub
mov
lock
mov
icebp
pop
or
lods
int3
loope
dec
shlb
insl
sbb
data16
push
ja,pn
push
push
divb
push
push
sub
mov
jmp
sbb
jmp
xchg
clc
out
scas
out
pop
pop
ficomps
js
rcr
cmp
out
scas
arpl
xchg
cld
jns
pop
cmp
jne
xchg
std
cmove
mov
or
jecxz
bound
into
popa
andl
mov
cmp
test
add
push
in
imul
test
lock
into
xorb
nop
int
mov
ljmp
cli
add
xor
adc
aas
scas
push
jbe
nop
in
enter
mov
pushf
xchg
jp
xchg
repz
mov
xor
sbb
jle
arpl
pushl
jb
pop
fs
pop
in
jae
pop
xchg
cwtl
xchg
jnp
cltd
decb
js
scas
rcrl
mov
std
mov
cli
je
inc
mov
clc
adc
xor
test
aam
mul
jge
int
popa
xor
pop
mov
push
jmp
lret
popa
sub
aad
addr16
leave
icebp
push
cld
fistpll
pop
mov
ud0
sub
scas
mov
in
out
imul
js
icebp
addb
mov
cs
negl
in
or
addr16
jne
ror
icebp
test
bound
and
lcall
and
fcmovnb
es
fsts
pop
push
push
daa
lds
aaa
lcall
mov
xorl
sub
sub
mov
or
or
pop
jg
sbb
mov
xchg
lret
out
adc
popa
and
jnp
in
gs
fdivp
xchg
cmp
xorb
xorb
rorl
jo
pop
in
mov
jo
std
push
js
mov
popa
adc
dec
pop
inc
data16
xor
test
in
dec
mov
jns
push
cmpsb
push
out
repz
jne
cmp
in
sahf
mov
push
js
dec
mov
repz
inc
aam
sub
adc
inc
fisttpll
pop
sahf
ret
xchg
lock
rcrb
je
adcl
adc
pushl
cmp
repnz
repnz
jmp
add
ss
loope
add
jbe
in
mov
xchg
aaa
jae
sub
scas
mov
icebp
inc
lods
sub
sbb
jecxz
jb
outsl
xchg
js
stc
or
repnz
inc
adc
xchg
sbbb
pop
mov
adc
push
cmpsb
insb
jns
cld
inc
jnp
pop
jb
loopne
xchg
invlpg
mov
je
mov
inc
xlat
xchg
sti
es
mov
pop
sub
sub
jae
add
xchg
fldenv
enter
test
in
sub
push
cld
roll
xor
adc
dec
inc
stos
ret
inc
xchg
aad
and
rcrb
or
lcall
add
mov
ficompl
lret
test
pop
dec
pop
in
xchg
xor
mov
subl
test
lahf
mov
idivb
addr16
jge
mov
icebp
int
pusha
pop
aas
cli
push
push
push
je
pop
add
inc
aam
pop
inc
mov
mov
jb
in
mov
in
movsb
and
dec
fistl
popa
insb
mov
or
push
arpl
shlb
mov
jns
pop
sti
add
sbb
jne
fcomps
xor
adc
clc
fstpl
shrl
aam
test
pushf
dec
in
jle
jae
clc
jle
scas
fdivrl
xchg
push
dec
aaa
cld
out
mov
sub
call
push
arpl
filds
dec
outsb
inc
sub
test
inc
aam
cli
push
xchg
out
mov
mov
notb
mov
adc
ss
imul
add
scas
sbb
jo
sarl
clc
pop
cwtl
xor
icebp
mov
xchg
mov
fidivl
cmpsl
inc
mov
out
je
dec
loop
push
jp
fmuls
push
mov
js
or
mov
sti
mov
cld
imul
leave
test
cmpsl
dec
sbb
mov
sbb
mov
scas
je
addr16
cli
out
lea
push
hlt
mov
pop
push
iret
jecxz
jl
jge
add
xor
or
xor
or
jne
mov
mov
sbb
adc
xchg
sbb
xchg
lret
jns
jl
sti
mov
push
sub
mov
outsb
daa
cmpsb
das
pop
mov
inc
faddl
popa
cmpsl
mov
inc
add
std
cmpsl
jo
pusha
out
iret
jbe
ss
rolb
jae
lcall
mov
or
jbe
leave
add
jge
adc
pop
xchg
and
jne
dec
jnp
push
push
xor
mov
dec
mov
aam
sbb
js,pt
xor
inc
pop
xchg
std
pop
divl
test
cmp
daa
ss
int3
jb
repz
pop
jle
pop
mov
lret
jne
mov
outsl
jno
mov
and
mov
xchg
dec
xchg
mov
pop
mov
xor
push
and
jl
xchg
xor
cld
pop
je
mov
mov
mov
pop
adc
xchg
jmp
xorb
xor
push
aas
jae
divl
int3
cmc
sub
and
xchg
mov
imull
movb
jecxz
xor
addr16
sub
popf
shl
fwait
xorb
xchg
push
js
pop
out
aad
addb
xor
in
inc
dec
jge
xor
movsb
xor
cmpsb
sbb
in
popf
movsb
stc
hlt
je
lods
xchg
sti
pop
push
adc
lcall
push
adc
mov
lods
or
pop
repnz
je
sahf
int3
jno
hlt
subb
stc
cmpsl
push
add
loop
lcall
push
cld
dec
cmp
es
push
in
xchg
push
cld
push
jns
arpl
and
inc
adcb
test
in
imul
xchg
xchg
fimuls
and
push
or
cltd
push
pop
in
dec
enter
mov
push
pop
cmp
jp
bound
imul
das
lea
xchg
lea
xor
inc
inc
into
lret
out
scas
mov
into
pop
sub
add
loop
popa
std
daa
shl
aas
cmc
ficomps
rcrl
cmpsb
cld
je
std
outsb
cltd
push
imull
gs
mov
rcrb
stos
mov
inc
imul
or
dec
dec
add
lahf
insl
nop
stc
jns
and
pop
lret
das
cli
jmp
sbb
inc
lds
sub
addr16
or
jns
dec
jmp
mov
scas
popl
push
inc
xor
fdivr
mov
jo
adc
pop
int3
jb
dec
jmp
push
ja
xor
mov
push
mov
mov
or
mov
jmp
hlt
int
pop
sub
hlt
or
rcrb
jbe
leave
lahf
daa
imulb
sub
mov
lea
cmp
jle
outsl
je
mov
push
cmp
test
or
leave
mov
and
and
das
inc
push
xchg
lods
pop
push
xchg
idivb
or
test
sti
dec
fiadds
shrl
fcmovu
inc
xor
jne,pt
roll
pop
cmc
ljmp
adc
mov
push
add
mov
sti
cmp
cli
mov
shl
dec
jb
xchg
lods
inc
test
and
popa
cs
shr
jp
loop
in
pop
mov
jne
add
inc
lods
jns
imul
pop
push
into
add
mov
fstl
cmp
scas
call
pop
jg
pop
clc
adcb
add
sbb
pop
sub
cmc
lcall
cld
mov
push
cmp
jne
pusha
push
xlat
jecxz
inc
test
cmpsl
jmp
mov
push
roll
loopne
aam
test
sub
push
cwtl
mov
int
push
leave
push
lods
scas
idivb
jae
cmp
mov
fimull
scas
cmp
jnp
das
inc
cmp
xchg
cmp
cmp
lock
enter
fsub
or
int
je
das
nop
cmpb
and
mov
adc
les
ss
int
mov
add
jae
dec
push
out
mov
mov
popa
stos
dec
jnp
xchg
xchg
ret
stos
into
and
xor
jns
insb
mov
xchg
out
fnsave
js
mov
sbb
leave
je
notl
jg
shll
push
es
push
repnz
mov
push
and
repz
add
cli
shl
sti
lock
add
cli
leave
loop
jne
xchg
inc
imulb
cmpsl
shr
dec
jmp
push
frstor
push
jle
mov
out
jmp
sbb
lahf
add
dec
and
cmp
js
sbb
cli
cmp
sub
mov
lods
adc
push
movsb
sahf
inc
cwtl
push
cmp
xchg
cmp
call
mov
je
stos
cli
test
push
movsl
sbb
lock
sbb
movl
xor
push
push
std
jle
and
sub
cld
push
add
enter
mov
std
movlps
sbb
les
mov
js
ja
xor
outsl
push
stos
test
cli
xor
fst
mov
daa
mov
or
jge
nop
loopne
mov
js
mov
cli
adc
ficomps
mov
lret
repz
mov
fdecstp
xchg
gs
rorl
lea
out
icebp
sub
xchg
xchg
or
lcall
daa
lock
pushf
add
rorl
add
nop
mov
dec
cmp
sub
cld
inc
push
mov
das
out
adc
test
pop
ds
mov
popa
cmc
inc
mov
cmp
jp
push
pop
out
icebp
mov
jbe
movsl
cmp
stc
popa
cmpsb
sbb
mov
cmp
scas
jne
cli
xlat
pop
ja
loope
cmc
add
clc
mov
and
push
and
mov
pop
arpl
mov
mov
sub
mov
adc
xor
xchg
mov
clc
mov
aam
aad
xchg
into
ss
pop
lea
addr16
loop
cmp
xor
lcall
cmp
and
pop
cwtl
sahf
or
push
cmpsl
cmpsb
xor
popa
scas
aam
and
xor
dec
and
adc
stos
sti
xchg
push
setae
stc
scas
imul
mov
cmp
fidivs
sub
xchg
lahf
in
jne
out
cwtl
xchg
sbb
pop
stos
sub
mov
mov
pop
dec
pop
test
xorl
mov
ja
icebp
jbe
mov
in
push
xchg
addr16
daa
lret
out
dec
mov
push
bound
in
sub
push
popf
or
hlt
cmc
mov
cld
push
leave
cwtl
push
mov
or
jnp
scas
popa
xor
push
pusha
loope
mov
sahf
sub
inc
cmp
inc
enter
and
jl
mov
mov
fwait
jae
pop
out
xlat
out
lods
adc
mov
push
pop
mov
in
xchg
add
dec
sbb
ja
cmpsl
mov
mov
cmp
jle
or
xorb
icebp
addb
arpl
wbinvd
iret
mov
popl
cld
out
mov
xchg
xchg
xchg
cmp
imul
iret
push
aad
inc
sub
jns
push
aas
popa
iret
cmp
in
lret
movd
push
in
lock
or
jo
inc
out
fmul
or
sarl
dec
adc
lds
mov
pop
dec
adc
idivl
and
mov
inc
and
testl
jae
inc
ret
jb
sbb
adc
imul
jp
jmp
aam
sar
pop
leave
push
shll
pmaxub
aam
sahf
xor
ss
jecxz
add
pop
js
push
lcall
mov
pop
dec
jnp
and
push
pop
movntq
adc
add
add
mov
je
rcrl
arpl
sbb
sub
ret
xchg
lods
sbb
adc
cli
inc
fisubs
mov
xchg
dec
push
pop
decb
push
enter
jno
push
xor
int
add
filds
adc
add
dec
std
aad
movsb
cli
xlat
jno
mov
popa
je
pop
pop
sahf
pmuludq
xchg
xchg
idivb
hlt
es
test
adc
push
sbb
test
mov
cmp
pop
jbe
rclb
xchg
pop
lock
and
mov
pop
repz
mov
jb
movsb
push
xor
enter
out
nop
fiaddl
cld
push
ret
mov
mulb
cmp
jne
sub
repz
adcl
push
mov
lcall
add
mov
push
imull
aam
mov
add
jg
pop
das
inc
push
fs
je
roll
jmp
push
xchg
repnz
mov
push
sbb
data16
loope
sub
jle
in
cmp
jmp
testb
mov
push
dec
sbb
lods
repz
repnz
mov
test
pop
pusha
inc
sbb
jl
dec
push
cmp
decb
ja
insl
cld
cltd
and
shl
ss
mov
repz
dec
pop
rcrl
std
xor
daa
test
das
adc
in
mov
test
stos
jae
lcall
sbb
jle
jnp
dec
icebp
mov
mov
xor
data16
xor
pusha
mov
movsb
xchg
and
mov
or
xchg
sbb
push
mov
fnsave
test
int3
fdivr
daa
pop
mov
lea
pop
insb
nop
jmp
add
push
pop
ljmp
das
pop
xor
rep
lea
push
daa
ret
sub
js
sub
push
inc
sbb
in
hlt
popa
push
inc
adc
and
lock
add
das
pop
test
stc
pop
adc
mov
jmp
mov
mov
fwait
mov
call
push
mov
inc
into
mov
fadd
cmpsl
ljmp
adc
insl
sti
cli
ret
jbe
nop
inc
scas
daa
pop
pusha
cs
negl
pop
mov
cmpsb
imul
xchg
mov
outsb
sti
sbb
inc
xchg
push
outsb
adc
or
adc
add
ficoml
mov
pushf
hlt
insb
shr
lea
add
leave
arpl
cmp
lock
add
sti
insl
out
add
xlat
sbb
lock
out
pop
mov
and
add
daa
inc
mov
pop
mov
adc
fsubl
adc
mov
xchg
inc
stc
fisttpll
lret
jo
pop
push
mov
pop
cltd
shrl
icebp
cmp
js
test
sbb
mov
sub
rorb
inc
stc
fstpl
adc
dec
js
cmc
insb
xor
aaa
mov
mov
inc
sarl
bound
addr16
xor
push
xchg
clc
test
mov
rcrb
xor
and
adc
insl
xor
ja
sbb
xlat
sub
pop
fisubrs
shlb
mov
mov
scas
movsb
loope
int3
pusha
out
into
in
ja
sbb
pusha
test
shlb
adc
scas
and
testl
push
jnp
xchg
lea
insb
clc
sbb
inc
push
lcall
insl
aas
hlt
iret
subl
pop
es
aas
cmp
addb
mull
in
call
data16
xor
add
popf
pop
add
fisubrl
sti
jb
and
loope
sbb
cmovo
push
sub
shrl
cld
pop
popa
and
xchg
pop
and
das
fistpll
xlat
push
and
xor
or
scas
repnz
sbbl
test
push
lds
pop
dec
mov
cld
jno
xor
enter
test
add
push
and
fcoml
daa
xor
push
inc
scas
in
stc
jo
ss
pop
inc
fwait
jb
cmpsl
nop
out
cmpsb
lea
lods
sbb
sbb
scas
div
cli
add
mov
cmp
mov
mov
pushf
xor
xor
mov
mov
hlt
jne
mov
mov
jno
insl
pop
jae
rol
adc
add
add
test
arpl
add
subl
ds
fwait
adc
sahf
push
insl
dec
jns
adc
inc
imul
loope
jnp
cmp
dec
fcoml
cmp
push
ret
repz
xor
lcall
or
sti
cld
fsub
lods
jbe
dec
push
adc
xchg
and
aas
push
push
mov
cmpsb
scas
orl
out
subl
stos
push
mov
fistl
aas
xchg
insb
pop
and
add
cmp
aas
pop
jns
jne
out
push
imull
leave
rorl
jbe
in
jp
cmp
fisubrs
loop
xlat
mov
mov
xchg
cmp
jae
sbb
mov
inc
xor
pop
or
ja
adc
imul
cmc
lahf
in
cmp
jo
push
mov
push
sub
fistps
xor
idivl
je
gs
insb
dec
imul
scas
daa
fstl
push
mov
fsts
sub
js
push
jecxz
stos
ja
sbbb
sub
dec
insb
ror
icebp
je
lcall
mov
shlb
add
cmp
add
std
je
iret
mov
mov
pop
xor
outsl
dec
pop
ljmp
leave
test
pushf
jmp
sahf
add
dec
xchg
das
ss
mov
aam
xchg
push
lret
pop
out
aad
ja
mov
orb
bound
mov
inc
jo
jecxz
lcall
shll
shrb
repnz
sub
xchg
add
bound
or
xchg
arpl
add
int
jl
outsl
jge
mov
push
and
insl
xchg
imul
aaa
mov
sti
loope
cwtl
add
and
xor
out
data16
repz
xor
imul
pop
ds
ret
sbbb
loope
jb
add
aam
dec
adc
jo
into
xor
xorl
inc
pop
xlat
dec
jle
daa
sti
adc
sbb
rolb
loop
lahf
jmp
mov
ss
mov
mov
fwait
xchg
stc
fidivrl
movsl
xor
inc
test
shll
lret
test
jp
push
stc
leave
in
mov
jns
test
andl
adc
pop
cmp
xor
movsl
jp
jnp
push
mov
adc
inc
fldcw
mov
dec
out
rcrb
mov
enter
mov
mov
mov
push
mov
and
scas
test
hlt
out
push
jl
popf
ja
loope
mov
aad
xchg
mov
cvtpi2ps
sbb
cmp
fimuls
jmp
xor
dec
cld
jno
cltd
ss
push
in
mov
cmpsl
nop
push
das
adc
add
stos
popa
movsl
push
push
shrb
int
cmp
dec
mov
mov
pop
lods
in
xor
sbb
xchg
aas
imul
rcll
pop
add
das
iret
sbb
sub
dec
in
add
sbb
dec
out
ror
inc
cmp
addr16
fstps
jecxz
sbb
xchg
adc
push
stc
sti
push
out
js
mov
pop
out
cs
xchg
sbb
cli
lock
test
jbe
js
mov
in
jae
and
out
dec
xor
cwtl
push
addl
imul
sti
std
enter
cli
jo
xor
fnstenv
push
andl
jle
sbb
nop
iret
and
xchg
push
cmp
or
lods
fdivrl
add
push
fdivrs
insl
or
test
pushl
out
push
cld
adc
ja
mov
mov
notl
testl
mov
xchg
xor
dec
dec
daa
cs
pop
push
xor
imul
mov
jbe
lods
jecxz
sub
sbb
dec
push
jns
subb
adcb
sbb
mov
xor
inc
loope
sub
cmp
jns
idiv
push
or
out
jbe
xor
cmp
clc
mov
push
outsl
inc
dec
mov
cmpb
sub
cld
cwtl
daa
jl
sub
xchg
push
mov
popa
and
mov
sbb
xchg
das
push
sbb
cmp
out
fwait
cli
lods
les
shl
pop
or
inc
cmc
imul
pop
push
in
xor
add
push
adc
xor
insl
adc
into
fs
out
mulb
ret
jmp
das
jbe
sbb
into
and
mov
push
and
fcompl
daa
mov
xor
mov
jbe
add
pop
sub
leave
inc
sub
je
outsb
xchg
addr16
cmp
addb
iret
or
std
stc
lds
cs
mov
jb
sub
inc
dec
in
std
loope
stos
adc
addr16
xor
jl
out
ljmp
iret
enter
mov
mov
sbb
mov
pop
repz
pop
int
addb
jmp
pop
adc
orb
pop
add
add
push
repz
push
xchg
inc
orl
int3
fbstp
lock
iret
cmp
adc
jmp
imull
mov
cmc
and
mov
das
push
bnd
ja
rcrb
jo
xchg
rclb
hlt
or
jno
and
push
xchg
mov
pop
xchg
out
sub
add
ds
adc
or
popf
je
mov
xlat
loope
mov
add
mov
mov
xor
hlt
outsl
popa
jo
loop,pn
insl
push
addr16
in
cmp
add
inc
popa
push
mov
mov
out
ss
lock
push
pop
cmp
sub
mov
pushf
pop
cvtps2pi
xor
cmc
js
popa
jl
xchg
sub
popa
sbb
bswap
test
roll
sub
pop
dec
movsl
mov
xchg
in
xor
jno
mov
sub
pop
cmc
mov
cld
out
scas
pop
xchg
sub
hlt
sbb
movsl
xor
stos
int3
xor
lods
jne
jge
fists
xlat
xchg
jmp
popf
jmp
fcoms
out
dec
popf
jo
jbe
daa
scas
xor
icebp
pop
gs
mov
fdivrs
rorl
hlt
jp
pop
cmp
lods
pushw
jle
js
push
push
and
daa
xchg
addr16
jo
adc
mov
sub
xchg
movsb
leave
insb
out
ret
imull
not
lret
push
sub
mov
or
mov
xchg
mov
xchg
aas
lods
fdivs
push
add
nop
cmpsb
enter
sub
sub
cmpsl
aad
jne
negl
psubusw
lcall
ret
sub
test
into
in
lea
and
push
mov
test
negl
movsb
into
xchg
and
sub
pop
jge
mulb
push
nop
or
ss
xchg
lcall
push
push
or
jnp
out
test
jle
xor
popf
xor
out
push
push
rolb
sbb
js
lock
pop
push
push
std
mov
jecxz
sub
cmp
push
inc
xchg
add
xlat
jp
ret
push
sbb
sub
and
mov
sub
dec
xchg
jle
fildl
xchg
scas
jp
dec
xor
jns
jae
jo
xor
adc
repz
daa
jb
or
addr16
mov
fmul
jp
push
adc
mov
enter
mov
je
xchg
popa
out
xchg
in
js
int
xchg
out
daa
mov
inc
push
adc
push
or
lahf
push
loope
xchg
int3
fisubrs
repnz
ss
mov
into
nop
jae
mov
test
test
mov
sti
push
inc
jnp
nop
jno
addb
lcall
imul
dec
loop
lret
call
cmc
sub
pop
pop
and
fcoms
insl
mov
cmpsl
or
mov
js
ja
testb
fidivrl
xchg
daa
pushl
add
aad
insb
mov
or
les
mov
push
jl
lods
jbe
loopne
aam
jmp
xlat
xchg
push
mov
mov
adc
xchg
dec
fadd
mov
xlat
test
outsb
add
into
in
jns
hlt
cli
push
clc
jmp
aam
lea
push
clc
jae
arpl
in
cwtl
je
or
out
xchg
cmp
jl
sub
rorl
dec
push
icebp
or
stc
and
mov
lods
fildll
mov
lcall
aam
stos
dec
and
cmp
mov
leave
push
mov
movsb
mov
not
xchg
push
loopne
jle
daa
ja
inc
xlat
idivl
into
pop
repz
jo
jbe
clc
push
cmp
xor
scas
hlt
push
shr
mov
xchg
movsl
out
add
and
movsl
pop
je
pop
out
cmp
cld
inc
scas
out
inc
loop
pushf
pop
sub
and
sbb
nop
jb
fstps
jne
stc
aas
jge
cmp
push
icebp
mov
aam
dec
dec
jno
das
xor
shll
hlt
xchg
ja
and
sbb
push
push
add
rcrl
nop
in
jp
xor
mov
push
imul
pop
das
into
imul
daa
cmp
nop
nop
cwtl
add
dec
scas
add
xor
fisubl
mov
sbb
js
iret
sti
loop
mov
stc
ljmp
push
shl
dec
out
adc
dec
jp
shll
sbb
pop
lock
pop
ret
jno
mov
pop
xor
andb
jae
sub
xor
cvtdq2ps
mov
sub
aad
mov
mov
cld
arpl
int
xor
bound
fsubrp
mov
movsb
dec
stos
fistpl
sti
mov
outsl
jo
rolb
pop
scas
ss
add
scas
sub
out
stos
push
and
clc
adc
xchg
add
pop
adc
sub
add
movsb
pushl
dec
clc
scas
jb
aaa
scas
mov
mov
jbe
sbb
pop
jge
repz
lret
jmp
jge
push
push
imul
or
sarb
clc
emms
inc
adc
cmp
neg
cmpsb
pusha
jecxz
xchg
in
movb
xlat
adc
lock
jbe
sbb
mov
push
mov
mov
idivl
mov
das
lock
lods
jecxz
mov
or
jae
popa
clc
daa
js
inc
icebp
outsb
outsl
stos
push
adc
mov
pop
and
inc
shrb
out
dec
jne
leave
push
icebp
inc
jnp
sbbb
or
add
cmpsl
add
mov
fisubrl
jl
je,pt
push
test
sub
mov
test
clc
push
and
mov
mov
stos
stos
jmp
cld
xchg
push
jns
push
in
jb
sub
mov
out
cli
lods
dec
push
loope
dec
jae
cmp
mov
dec
mov
push
mov
push
outsl
pop
loopne
daa
test
jno
xor
sbbl
out
xchg
fxch
lret
pop
insb
ret
rorl
aaa
popa
jo
popa
std
mov
jbe
sub
fiaddl
call
loope
fcoml
xchg
jp
push
cli
cmp
dec
xchg
in
push
or
pop
push
out
cmpsl
call
mov
call
cmp
jbe
insl
lock
mov
data16
test
ljmp
out
pop
mov
add
add
xchg
add
mov
cmp
push
pop
out
jo
negl
test
das
add
scas
cmpb
movsb
mov
xchg
fcomi
jmp
mov
daa
fistpl
mov
inc
push
sbb
xchg
pusha
addr16
inc
adc
cmp
push
in
push
cwtl
lods
mov
inc
xor
mov
clc
cmpsb
push
out
xlat
loope
loopne
cmc
popa
mov
arpl
cmpsl
enter
mov
push
filds
sub
addr16
inc
mov
jae
xlat
loop
push
fnstcw
popf
fldenv
adc
leave
pop
inc
or
lcall
sbb
pop
mov
add
test
cmpsb
dec
mov
push
mov
shl
xchg
sti
jge
outsb
daa
pop
jnp
cmc
rclb
and
mov
add
test
cmp
adc
jmp
xor
sti
pop
in
mov
jne
subl
inc
out
es
clc
push
cs
cltd
mov
out
inc
inc
into
popa
insb
cmpsb
data16
xchg
adc
adc
in
adc
sub
pop
ror
sbb
filds
mov
push
daa
cld
fwait
push
push
sbb
dec
test
cmp
imul
lods
pop
push
mov
push
bts
sub
inc
jg
out
cltd
ret
and
jo
bound
es
test
mov
cli
adc
cmpsl
xor
test
pop
mov
jecxz
jecxz
fiaddl
imul
jbe
xor
xchg
mov
dec
daa
into
mov
sub
cmc
sar
pusha
xchg
xor
inc
add
dec
pop
cmc
fcmove
xchg
ja
lock
add
cwtl
dec
imul
push
adc
mov
test
or
lock
ds
jmp
in
dec
sbb
mov
lods
jae
pushf
loopne
xor
dec
decl
ret
xchg
inc
push
jmp
inc
add
jl
lcall
lret
xchg
lock
fadds
or
in
push
clc
xlat
leave
dec
movsl
pop
jbe
js
push
ss
xor
fisubrs
fimull
cld
push
xchg
out
jns
ljmp
cmp
mov
lods
pop
arpl
in
pop
adc
movsb
cmc
adcb
imul
sbb
dec
jecxz
lods
xchg
jbe
clc
push
push
xor
mov
xchg
sahf
and
push
mov
xchg
mov
cmpsl
sti
lea
scas
cmp
mov
dec
cmp
cwtl
ficompl
insl
xchg
cli
test
insb
jg
jbe
movsl
ljmp
sbb
dec
inc
jbe
or
sbb
outsb
xchg
in
and
xor
arpl
cwtl
mov
enter
push
aaa
mov
div
cmpsb
jns
pop
scas
hlt
out
jecxz
cmp
mov
cltd
dec
lods
cmp
mov
fcomps
mov
scas
loopne
xor
xchg
test
lahf
ds
out
into
popa
xchg
inc
in
loopne
pop
add
fiadds
push
mov
and
sbb
sar
pop
sbb
int
andl
mov
mov
mov
fidivrs
ja
mov
xor
js
out
cmc
daa
clc
pop
xchg
push
pop
adc
cmpsl
imulb
dec
mov
jno
add
pop
adc
insb
movl
roll
into
dec
mov
dec
std
pop
mov
int
rcll
fsubs
icebp
inc
jno
inc
outsl
daa
adcb
push
addr16
jle
inc
mov
scas
insb
mov
je
pop
lret
insb
and
add
cwtl
cld
stos
out
jl
dec
cltd
sarb
in
enter
push
adc
lret
cmp
push
mov
fidivl
dec
xor
dec
xchg
bound
fmulp
aaa
mov
cs
sbbb
add
cmpl
test
sahf
pop
movsb
mov
dec
pop
loope
lods
xchg
out
xor
dec
cld
fisttpll
mov
in
mov
push
testl
mov
push
mov
mov
ficoml
adc
or
stc
push
push
sub
cld
push
pop
add
pop
pop
jbe
mov
fldt
js
cmp
outsb
cmc
leave
push
push
bound
ja
sbb
mov
lgs
les
pop
jns
jne
push
cmp
mov
dec
bound
dec
lods
clc
add
testl
adc
dec
fnstenv
push
dec
add
test
into
clc
js
pop
addr16
aam
mov
scas
loop
jb
add
pop
pop
std
lret
dec
inc
sti
clc
stos
addr16
xchg
push
mov
dec
sub
push
mov
lods
fdivs
loope
mov
jbe
cmp
clc
sub
pushf
sbb
insb
pusha
xor
in
out
xor
mov
push
cli
xor
xlat
addr16
add
out
lahf
cli
xchg
inc
or
movsb
adc
fsubrl
dec
lret
push
lods
and
mov
inc
pop
add
sub
sub
lret
jne
inc
xchg
testl
cld
popf
push
cli
jne
pop
jl
in
ja
cmp
dec
push
cwtl
out
loopne
jbe
js
mov
cwtl
or
aaa
pop
mov
and
add
adc
outsb
xor
mov
in
jns
pop
enter
pop
mov
es
cmp
xor
cltd
inc
in
inc
push
lret
nop
add
jl
shrl
jle
mov
xorl
pop
or
ljmp
sbb
addr16
dec
hlt
pop
lret
jbe
mov
cmp
jns
pushfw
push
sub
cmp
cltd
lret
or
mov
es
inc
jns
dec
ljmp
sarl
push
js
roll
negl
push
push
adc
aad
mov
jp
jbe
jl
cmc
mov
dec
jnp
xchg
push
push
popf
nop
test
lods
xor
pop
jne
cmp
cli
mov
sbb
stos
jg
les
xor
imulb
dec
ja
aad
pushf
shll
pop
enter
sub
decb
addr16
inc
lods
pop
ss
xor
and
add
lock
cmc
daa
mov
out
or
cmp
or
push
adc
pusha
jp
pop
sbb
or
jo
jg
mov
xorl
outsl
jo
cmpsl
lds
das
andl
js
lods
sarb
xchg
cmp
shrl
in
outsl
mov
fiaddl
clc
sub
lret
sbb
and
shr
mov
aas
icebp
leave
xchg
adc
cmp
jno
jae
sub
icebp
push
jno
neg
fisttpl
out
loop
les
push
add
adc
sti
pop
xchg
cmpsl
mov
test
mov
pop
enter
mov
gs
loop
push
aaa
xor
lea
sbb
sbb
add
shll
scas
mov
orb
mov
sbb
in
cmpb
jno
flds
and
dec
add
lcall
inc
adc
push
dec
fisubrl
pop
scas
push
bnd
scas
mov
inc
ja
dec
out
js
dec
mov
ret
inc
jmp
std
out
iret
fildll
ja
int3
sbb
xchg
lods
idivb
jecxz
sbb
push
push
sbb
xchg
push
adc
push
sbb
mov
xchg
cmp
and
adc
or
imul
mov
pop
pop
push
leave
cli
stos
cli
lret
test
jb
pop
cmp
shll
cmp
sbb
cltd
inc
pop
cld
inc
jl
xor
sbb
out
gs
clc
xor
dec
cld
push
aam
insb
aaa
lea
in
pop
das
sub
jae
sub
xchg
sbb
push
sub
div
aad
lds
loopne
and
scas
fs
and
sti
xchg
push
repnz
incb
lods
jge
ja
hlt
jl
imul
cli
bound
push
adc
mov
mov
lea
adc
xor
scas
std
inc
scas
jnp
out
jb
out
das
jnp
mov
add
icebp
mov
dec
jp
imul
push
adc
jnp
lock
jbe
sbb
pop
ljmp
and
cli
fidivl
rorb
stos
movl
pop
sbb
orb
inc
pop
sbb
sahf
sbb
push
and
in
push
xor
enter
out
cmp
mov
stc
test
cmpsl
insl
lods
push
fwait
ja
xchg
dec
dec
xchg
bnd
pop
daa
lods
lods
repz
ja
repnz
sub
cli
js
clc
jns
out
cmc
ja
outsl
daa
ja
dec
test
test
pop
push
push
scas
jno
je
mov
xchg
int
inc
sti
adc
jl
adc
mov
sub
or
andb
jns
ret
xor
jecxz
out
inc
into
cs
stos
stc
icebp
push
imul
xchg
fnsave
mov
into
adc
add
xchg
imul
mov
cld
jge
inc
lock
std
pop
pop
sub
outsl
out
aam
jae
pop
subb
push
sahf
xor
js,pt
push
cli
movsl
fisttps
jp
ss
jns
sbb
iret
cltd
add
dec
jae
sub
sub
xor
sub
loop
dec
in
mov
gs
shl
cli
aaa
xor
js
cmp
sub
jae
mov
into
loopne
movsb
mov
push
cwtl
xor
jle
aam
jae
and
cmp
mov
xor
dec
into
inc
cmc
jle
push
inc
sbb
call
push
xor
cli
in
cmp
jae
test
in
out
or
adc
push
clc
or
dec
and
test
outsb
mov
pop
ds
icebp
sbb
stos
push
adc
daa
inc
testl
inc
push
add
mov
in
pop
cltd
pop
xor
aad
inc
mov
and
ss
push
ds
nop
hlt
jmp
in
orb
dec
and
cmc
sbb
psubb
push
sub
push
cmp
inc
xchg
mov
lahf
sub
or
scas
out
jb
inc
scas
mov
dec
lods
xlat
pop
aad
scas
pop
mov
fwait
or
cmp
paddw
imul
pop
cmc
inc
mov
clc
mov
mov
outsl
mov
mov
add
xlat
dec
sub
or
movsb
rorl
std
jle
push
mov
jnp
cmpb
dec
push
jns
pushf
push
adc
mov
mov
xlat
xor
push
push
cmp
jns
movsb
lods
je
dec
rcrb
cmc
ror
inc
aaa
jbe
mov
xchg
cmp
xor
sub
ss
fcos
shlb
call
mov
popf
out
es
add
push
pusha
aam
popa
push
jae
cld
or
mov
lods
pop
jne
and
cld
testl
scas
adc
fsts
xor
push
mov
addr16
mov
jae
add
push
out
push
jo
xchg
sbb
mov
pop
xchg
out
dec
lock
xchg
negb
fwait
shl
inc
push
push
outsl
sub
lods
sub
sbb
xchg
out
pop
outsl
cld
das
cmp
sar
jl
dec
es
add
out
xchg
pop
scas
andb
sbb
xchg
outsb
addr16
push
imul
push
bound
ja
jge
out
not
add
lret
mov
dec
icebp
sub
xchg
mov
mov
pop
mov
lds
dec
js
loopne
popf
ret
sub
push
cld
repz
ret
test
mov
idiv
push
mov
or
xchg
inc
mov
test
push
into
movsl
int3
test
pop
fisubl
inc
repz
xor
xchg
pop
test
rcrb
shrl
mov
xchg
xor
decl
mov
in
sti
mov
mov
pop
inc
jle
js
and
lods
stos
push
addl
xchg
repz
adc
jb
ret
jg
cld
loop
cmp
xor
sub
dec
mov
push
sbb
adc
xchg
xchg
jge
lcall
pop
data16
inc
sbb
das
lcall
adcl
xchg
jb
mov
dec
subb
mov
lahf
int3
lock
adc
cli
push
pop
push
bound
xor
add
xchg
xchg
into
or
xor
pop
dec
scas
in
pop
add
push
and
lahf
imul
mov
mov
ficoml
rclb
pop
dec
xchg
hlt
push
mov
insb
pmaxub
push
push
xorb
mov
pop
lcall
or
flds
das
pop
call
jns
cld
lods
pop
lcall
add
push
lock
xchg
adc
sbb
cmp
das
adc
push
sar
mov
shl
push
scas
lock
push
fidivl
cmp
outsb
lock
call
push
negl
int
jns
push
fidivrs
sti
sub
daa
lock
pop
mulb
cld
lret
cmpsl
xor
js
push
push
adc
hlt
shrb
sti
nop
mov
into
push
cld
cmpsb
jmp
movsb
sbb
loop
mov
ficoml
sbb
jae
sbb
xchg
sbb
jb
rcrl
lret
rep
pop
or
out
inc
jne
add
xchg
rorb
mov
xchg
dec
call
or
popa
inc
xlat
xchg
mov
js
sub
inc
popa
bound
int
adc
cld
out
outsl
xlat
ja
cmp
sarl
leave
add
cmp
test
mov
xor
xor
sub
clc
pop
mov
shr
pop
flds
in
sbb
mov
cmp
stos
inc
pop
mov
js
aaa
xchg
push
bndldx
cmpsb
aaa
inc
add
icebp
or
hlt
cld
mov
push
decb
lods
sbb
out
and
negl
sub
pop
xlat
dec
out
aam
sbb
adc
push
mov
sbb
icebp
xchg
loope
pop
inc
mov
adc
lea
pop
mov
jae
push
xchg
push
cwtl
jecxz
mov
out
stos
cs
pop
decb
nop
mov
pusha
jle
es
jecxz
cltd
add
mov
std
xchg
cmc
mov
div
mov
dec
addl
je
shrb
push
test
loope
sti
push
sti
and
lods
inc
or
movsb
out
cld
xchg
push
pop
ds
jnp
sbb
adcb
lcall
nop
or
push
idiv
add
flds
in
jno
into
jge
iret
mov
lcall
or
mov
sub
fsubs
sbb
xchg
push
fnstsw
xor
out
pop
ljmp
and
push
cmc
test
push
xchg
mov
jle
repnz
xor
cld
ficoml
in
or
sbb
cld
mov
adc
sti
add
pop
jl
call
nop
popf
sbb
insb
dec
sub
xlat
jne
sbbb
test
ss
popl
push
mov
push
adc
stos
je
pop
sbbb
xchg
hlt
mov
das
xor
push
test
andl
pop
or
ds
ret
subb
mov
xor
xlat
mov
dec
aaa
testl
not
xchg
aam
pop
lea
arpl
test
movsb
popa
popa
xchg
sahf
popa
sbb
lahf
cmc
dec
add
xchg
sbb
and
je
mov
test
out
jne
jbe
pop
icebp
into
imul
mov
popa
subl
popf
aam
popf
lods
mov
popa
cmpsl
loopne
sarb
cld
pop
xor
sub
cltd
or
movsb
pop
pop
clc
test
dec
mov
rcrl
enter
mov
mov
adc
ja
mov
dec
clc
into
dec
cs
lds
xchg
push
cltd
inc
adc
mov
ret
divl
sti
mov
lret
aas
xchg
push
int
and
fdivs
xlat
mov
push
lods
daa
pop
out
repz
imul
xchg
mov
adc
lock
xchg
pop
movsl
sbb
stos
rorb
inc
mov
dec
pop
push
and
idiv
lahf
jbe
xlat
xor
sbb
add
cli
mov
jl
mov
std
imulb
out
iret
cmp
push
xor
or
out
mov
leave
xor
xchg
push
in
sub
and
jge
repnz
shl
xor
cmp
cs
out
scas
mov
and
int3
jle
push
xchg
jmp
andb
mov
dec
mov
jp
dec
and
loop
int
dec
imull
cmp
insb
jo
loope
insb
jecxz
call
inc
push
xor
dec
xor
cmpsl
cltd
sub
in
jmp
adc
jb
out
cltd
addr16
push
mov
lahf
js
dec
adc
popa
popf
adc
mov
sar
in
out
cltd
je
or
lods
out
or
jbe
pop
ss
flds
sub
adc
loopne
jo
pop
inc
mov
in
pop
aam
movsl
dec
sbb
or
dec
pop
fistl
imul
xor
fbld
lods
loopne
aaa
jle
cld
mov
insl
add
out
das
mov
xchg
call
cld
inc
bound
add
pop
inc
icebp
clc
es
push
mov
xor
inc
jle
xor
popa
dec
xchg
scas
push
mov
cmp
jbe
hlt
adc
xor
xchg
mov
fstps
sbb
loopne
xchg
push
arpl
lcall
inc
add
repnz
inc
jb
enter
clc
rdpmc
sub
mull
or
dec
pop
xor
out
lret
mulps
adc
dec
stos
cmp
cs
repnz
push
xor
xor
jle
lods
push
dec
loope
fs
xlat
call
mov
test
fistpl
fsubrs
jno
fistps
test
push
cs
sbb
pop
ss
mov
pop
bound
mov
cmp
enter
das
add
jle
xor
imul
mov
mov
and
scas
xor
rolb
push
in
sti
inc
out
shll
jns
cmc
notb
push
pusha
in
cmp
xor
adc
mov
adc
push
cmp
xor
clc
mov
cmp
int
add
cmp
outsb
pop
jbe
mov
sbb
mov
inc
push
lahf
xchg
push
add
scas
push
xlat
or
sbb
adc
jo
mull
sbb
into
int3
lahf
xchg
jmp
movsl
or
jg
jg
js
xchg
push
sub
jnp
jle
mov
movsl
out
shll
loope,pn
stos
movsb
pop
je
lahf
or
jae
adc
push
sahf
jns
in
sub
fnstenv
into
arpl
mov
dec
iret
cmpsb
idivl
sti
sub
mov
cld
push
cmpsl
mov
cmc
int
xor
in
mov
push
pop
stos
aad
cmpsl
pop
mov
ss
hlt
sub
and
popa
fwait
sti
inc
rcrb
cmp
out
sbb
mull
pop
adc
add
mov
mov
inc
and
in
packuswb
sti
push
pusha
popf
xor
imul
idivl
mov
lret
inc
fs
nop
push
inc
dec
scas
push
inc
push
jb
push
inc
sub
sub
lock
mov
outsb
adcb
pop
lret
pop
das
fs
inc
sub
scas
xor
jp
xchg
imul
aad
scas
cli
cwtl
popa
fs
mov
aaa
mov
push
xchg
cmc
add
sarl
mov
xchg
sbb
push
mov
xchg
sbb
jno
sub
pop
negl
and
jne
cmp
in
jne
pop
or
and
iret
outsb
inc
cmc
mov
mov
pop
notl
fcoms
push
ss
clc
nop
add
mov
ret
dec
por
sbb
into
aaa
push
aad
jecxz
icebp
sti
and
push
imul
cmpb
in
jbe
push
jno
daa
push
add
out
mov
pop
jbe
jae
mov
sbb
dec
nop
cs
rep
push
xor
jne
dec
mov
ja
lret
and
xor
lsl
iret
outsl
test
mov
dec
lret
mov
scas
int3
mov
shlb
lcall
shr
cli
insb
inc
pop
inc
lock
xor
jo
ljmp
mov
jb
mov
scas
push
in
adc
xor
xor
jne
mov
jns
cmp
je
lock
xor
jo
daa
jmp
lock
xor
cli
icebp
inc
mov
je
lock
push
xor
jo
push
in
outsl
je
lock
cmc
xor
sbb
cmp
cmp
lock
xor
jo
xchg
ljmp
es
jo
cli
icebp
add
xor
es
xor
jo
lods
daa
outsl
xor
cmc
notl
loop
xor
jo,pt
add
test
mov
push
ja
add
cmp
je
lock
insb
adc
add
lock
sbb
stos
mov
inc
ss
je
lock
jo
cmp
shl
mov
xor
lock
enter
add
xor
jp
js
jo
je
jb
jo
scas
lock
push
inc
pop
lds
xorb
adc
pop
and
xor
jo
in
daa
jmp
dec
je
lock
and
sti
xor
jo
inc
daa
inc
ss
je
lock
es
inc
or
jo
jge
aas
ss
lock
dec
xor
jo
cs
icebp
ss
xchg
cmc
mov
addr16
inc
es
xor
jo
scas
daa
mov
mov
mov
testb
pusha
push
sti
push
clc
es
push
ret
je
lock
jb
mov
xor
cmp
lods
andl
ss
cmp
xor
jo
jg
inc
xorl
es
insb
cs
xor
repz
lock
or
loope
cld
xor
fnstenv
xorb
es
sub
je
lock
es
ja
mov
daa
add
add
pop
es
cs
jo
bnd
lock
ss
cmc
mov
daa
inc
add
pop
mov
jo
std
icebp
pusha
stos
daa
mov
pop
je
jo
out
daa
bnd
ss
add
cld
es
xor
sub
jns
adc
aas
adc
ja
push
adc
cmp
xor
sub
hlt
xchg
daa
xlat
divl
push
es
xor
jo
test
sbb
loop
adc
aas
je
lock
es
data16
daa
inc
es
movsb
adc
push
daa
fsubs
pop
mov
cmp
push
jbe
rcll
push
ja
mov
insl
or
push
mov
divl
jp
adc
daa
add
inc
je
lock
inc
xor
lods
insb
es
jo
push
daa
xorl
je
lock
cmp
cmp
divb
mov
lock
je
lock
add
aas
ss
jp
pop
jg
xor
mov
daa
outsl
ss
je
lock
dec
xor
jo
inc
daa
shll
je
lock
es
js
xor
jo
repnz
das
ss
es
xor
jo
add
jge
sti
je
das
ja
and
bnd
lock
add
bts
push
or
jle
mov
sub
mov
add
lds
pushf
push
push
outsl
loop
int3
or
or
dec
sbb
fiaddl
cmpsl
ss
cmp
push
or
pop
rep
lret
insl
xor
test
pop
stos
into
cmpsb
jo
mov
adc
out
outsl
imulb
push
sub
inc
negb
shrb
out
sub
mov
je
shrl
gs
shrb
test
mov
cmp
testb
testb
test
lds
add
or
test
std
dec
imul
shrb
sbb
mov
push
je
xor
pop
adc
inc
sub
mov
ja
movsb
out
popl
xor
shll
cmc
hlt
sub
xchg
mov
imul
fiadds
add
lret
sub
jno
outsb
or
outsl
sub
push
icebp
fistps
shlb
bswap
das
xor
mov
jae
lret
insb
mov
jmp
or
sub
inc
je
das
scas
push
in
cmc
add
insb
lret
lret
inc
sub
xor
cmp
sbb
into
inc
jp
adc
lret
fcoms
es
insb
xor
cmpsl
inc
and
or
jo
pop
push
xchg
push
stos
lods
mov
hlt
outsb
cld
scas
mov
adc
hlt
sub
ret
mov
jp
insb
or
xchg
nop
sub
fsubs
dec
lret
cs
mov
xor
dec
cmpsb
xchg
test
stos
mov
dec
mov
pop
xor
dec
jo
push
dec
or
insb
push
movsl
out
mov
test
adcb
repz
push
and
hlt
pop
mov
jne
loopne
stos
sub
xchg
punpckhbw
nop
xchg
and
pop
add
dec
jae
push
std
aad
jno
into
pop
inc
gs
xor
mov
fucomip
ds
mov
mov
cs
cmp
outsb
loope
mov
push
popa
push
test
xchg
lods
notb
je
dec
bound
mov
int
hlt
emms
enter
cmovle
inc
das
test
shrb
push
inc
mov
add
xor
sub
insb
aam
jmp
fstpt
outsb
or
cwtl
hlt
je
xchg
sbb
mov
xchg
aaa
movsl
ja
adc
jbe
nop
ja
das
or
mov
pop
fs
movsl
xor
das
aaa
adc
sbb
in
imul
add
inc
pushf
repnz
or
sub
lods
cmp
into
scas
sub
jmp
dec
xor
inc
dec
in
and
xor
rorb
hlt
adc
dec
adc
lret
mov
dec
jbe
push
xchg
pop
jge
pop
cmovs
xor
shrb
test
aam
int3
sub
sub
sub
add
dec
pop
inc
xor
sub
pop
and
ror
jnp
and
daa
out
xor
addb
nop
sbb
aas
movsl
test
mov
cmp
or
jl
dec
pusha
jno
fldcw
aaa
in
unpckhps
push
test
cmp
mov
pop
je
sarl
or
pop
out
dec
dec
lods
das
or
mov
push
movsbl
test
nop
leave
sbb
lret
push
in
jae
jae
or
cmp
mov
hlt
je
ja
mov
outsl
and
mov
cmc
and
sbb
inc
aad
rorl
out
cli
addr16
stos
jmp
jnp
inc
mov
xchg
aas
stos
iret
mov
mov
rcr
or
repnz
clc
xchg
or
mov
or
test
pop
es
cmpsl
jg
mov
dec
mov
mov
enter
sbb
dec
pushf
or
jo
sub
lret
ljmp
in
adc
and
ds
in
sbb
subb
imul
icebp
nop
insb
arpl
cs
bound
xchg
out
jno
in
cmp
push
inc
ja
jl
push
adc
pop
hlt
div
pop
push
add
dec
jno
xor
hlt
je
xor
lea
push
xchg
das
xor
mov
in
adc
outsl
ret
scas
fistl
jge
lea
push
in
mov
xor
mov
mov
or
mov
push
testb
sbb
pop
cmp
lcall
out
int3
xor
je
stos
je,pn
mov
push
xacquire
push
outsl
jb
insb
imul
pop
sub
insb
jge
jo
pop
out
xor
in
cmp
jmp
dec
push
lods
testb
xor
out
and
stos
test
and
sbb
push
mov
outsl
dec
stos
push
fldcw
dec
or
jne
ret
or
hlt
mov
outsl
jmp
popa
shll
xchg
sbb
aam
mov
xor
addl
push
nop
mov
faddl
call
mov
clc
adc
insl
int
movsb
lock
jmp
jmp
popa
jl
test
xor
lock
sub
cmpsb
sbb
inc
push
aas
mov
cmp
cltd
adc
inc
outsl
scas
stos
insl
mov
cs
out
shr
sbb
daa
push
push
clc
js
adc
cmpsl
addb
outsb
scas
js
push
std
pop
test
das
and
outsb
xchg
loop
out
lahf
jbe
push
sbb
jno
data16
jae
jge
push
scas
aaa
mov
jmp
inc
mull
imul
inc
test
addr16
mov
xchg
xor
mov
sarl
adc
repnz
sub
js
fidivrs
bound
jp
lcall
inc
ret
nop
jbe
out
fmull
xor
std
sarl
in
push
xor
sbb
sub
sbb
in
sub
adc
roll
mov
xor
or
out
cmpb
adc
aaa
xor
sbbb
scas
repz
mov
movb
ret
mulb
push
or
mov
movsl
mov
xor
out
or
mov
lds
pop
and
dec
sti
test
int3
outsl
test
xchg
push
or
in
in
mov
insb
es
lock
jbe
into
pop
lock
dec
push
jae
cld
insb
ss
aad
jnp
add
stc
and
mov
pop
push
adc
ficoms
mov
lock
pop
mov
loopne
negb
add
dec
mov
into
dec
xchg
into
lea
les
jecxz
and
test
xor
pop
mov
jae
fmul
pop
sub
mov
jbe
rorb
inc
fmull
adc
pop
and
jno
jle
out
js
dec
and
in
outsl
les
jo
sti
jo
scas
cmp
fstl
stc
aaa
hlt
mov
jae
movsb
ret
sub
add
aas
sti
aaa
add
je
out
push
add
mov
je
les
hlt
mov
lsl
in
xor
or
sub
lahf
dec
push
sbb
insb
sub
xchg
ficompl
and
lea
rcr
test
xchg
or
cmp
jp
inc
fnstenv
inc
lahf
mov
and
push
or
or
mov
data16
inc
pop
cmp
scas
rcll
enter
xlat
arpl
and
xor
inc
aaa
cmp
xor
out
das
lods
mov
inc
add
xchg
and
pop
adc
sbb
aam
sub
pop
adc
je
les
dec
cltd
das
dec
add
xorb
inc
cmp
mov
mov
sub
push
daa
je
mov
adcb
cmc
rolb
jne
dec
jo
cmp
push
xchg
cltd
xchg
enter
ss
push
bswap
hlt
inc
pop
leave
sub
xor
inc
lock
es
inc
pop
addr16
sbb
inc
xchg
scas
sub
dec
ret
je
bound
sbb
dec
mov
addb
sbb
or
scas
sbb
ret
pop
pushf
inc
popa
dec
xchg
nop
and
insb
rorl
std
jae
out
or
or
test
mull
or
xchg
icebp
mov
int3
outsl
inc
int3
mov
insb
inc
push
xchg
xor
add
mov
xchg
dec
popl
xor
add
push
mov
add
out
daa
scas
and
iret
push
insb
xchg
stos
or
ljmp
xchg
dec
push
aam
in
nop
jmp
push
xorl
ja
out
les
stos
lock
sbb
jge
adc
sbb
or
cmp
test
jl
jbe
insl
pop
push
ds
pop
mov
xor
inc
cli
jae
push
mov
dec
xor
lds
fs
das
pop
pop
cmpsb
je
xor
mov
push
adc
cli
mov
popf
outsb
adc
hlt
repnz
xor
mov
push
iret
addb
divl
push
pop
sub
push
cmc
adc
adc
xchg
xchg
xchg
dec
scas
insb
mov
pop
inc
js
addl
das
inc
xor
imul
mov
jle
push
in
ret
comiss
sub
dec
mov
add
push
ss
cmpsl
mov
xor
ss
lret
je
loopne
shrb
ss
movsb
div
data16
xor
dec
js
mov
cld
inc
cmpsb
lock
ds
add
insl
sub
cmp
test
fcoms
lock
shrl
jbe
mov
repz
std
jno
mov
das
xor
rcrb
cmp
mov
ja
and
push
enter
cmp
sbb
sbb
inc
fcomi
call
cltd
inc
adc
aad
lcall
xorb
xor
cltd
push
mov
xor
pop
jge
push
sbb
pop
idivl
push
mov
int3
insb
xor
aaa
rclb
inc
cld
jbe
mov
addb
sbb
out
mov
outsl
out
xor
lea
scas
incl
sbb
movsl
push
iret
jo
cmp
insb
test
adc
jg
mov
test
out
int
or
js
inc
notl
sbb
das
push
dec
xchg
mov
inc
add
xor
shl
scas
xchg
sub
es
nop
arpl
mov
es
xchg
and
sbb
push
scas
je
xor
pushf
mov
xor
mov
je
movsb
add
inc
shll
lods
sbbb
or
mov
mov
sbb
out
or
mov
xor
lret
xor
int
mov
xchg
jp
mov
jmp
dec
and
psubsb
jmp
stos
xor
push
loopne
inc
lock
jl
sbb
fdivs
sub
xchg
addb
dec
sar
or
das
push
mov
lret
inc
dec
mov
jbe
stc
xchg
push
jno
mov
cltd
xorl
bound
xchg
push
jmp
push
adc
enter
mov
in
mov
imulb
clc
test
dec
dec
lds
jne
insl
dec
mov
cmpsl
sbb
repnz
sarb
jbe
mov
inc
jg
scas
scas
add
inc
push
aad
or
add
adc
mov
icebp
repnz
daa
ljmp
cmp
pop
push
jne
clc
loop
or
pushl
lret
push
add
add
rolb
jae
repz
call
rorb
push
jecxz
pop
sbb
jne
cmp
jge
push
testl
mov
test
repnz
lock
sub
mov
cmp
shlb
repnz
je
xchg
outsl
add
push
xor
lret
xor
mov
in
incl
add
ljmp
call
ljmp
aas
or
sbb
cld
or
mov
incl
aaa
daa
hlt
xchg
cmp
jne
cli
cmpsl
jl
lret
push
cld
repnz
mov
mov
insl
xchg
cld
lock
jg
jnp
add
mov
aad
sub
lock
adc
pop
insb
ja
xorb
cli
call
clc
lock
jge
test
inc
repnz
hlt
adc
cmpsb
or
incl
test
testb
and
cmp
xor
lock
popf
or
je
outsb
aas
adc
in
or
ja
push
push
add
add
jne
repz
cmpsb
in
cmpsb
ljmp
lock
hlt
shrb
out
adc
mov
call
hlt
dec
repnz
push
add
hlt
mov
in
mov
repnz
add
mov
xchg
mov
repnz
mov
or
idivb
add
icebp
adc
stc
or
cmc
push
inc
mov
fsubrs
sbb
mov
stos
push
negl
pop
nop
testb
jo
jnp
cmc
mov
outsb
in
push
sbb
lcall
pop
sbb
dec
negb
leave
sbb
hlt
jo
lock
push
xor
jbe
jo
xchg
in
dec
push
decl
xor
ljmp
push
or
in
sbb
jecxz
mov
mov
aas
mov
push
outsl
call
aas
mov
sbb
add
jae
cmp
not
jb
mov
hlt
hlt
add
ja
push
adc
push
sub
aad
adc
mov
fsubrs
sub
cmp
aaa
adc
and
jno
daa
adc
lcall
hlt
or
xchg
cmc
fdivs
cmp
push
add
mov
pop
lock
imulb
into
fadds
pop
sub
jo
ds
or
jl
sub
hlt
hlt
clc
out
push
mov
push
idiv
icebp
dec
add
imul
sahf
xchg
jbe
clc
add
jl
out
hlt
push
or
inc
out
clc
mov
adc
cmc
mov
ljmp
clc
std
and
mov
jbe
repnz
cld
clc
insb
ljmp
push
pop
push
jmp
ljmp
cli
repnz
sbb
jmp
push
add
jl
or
cmp
in
push
or
add
mov
mov
repnz
pop
cli
xor
cld
test
xor
adc
out
mov
xor
bnd
push
stc
ljmp
lock
in
pop
adc
lock
add
ja
icebp
clc
je
hlt
xchg
cmc
xchg
mov
insb
cmp
xchg
les
mov
in
ja
fs
in
xchg
ja
and
jo
cmp
in
movsb
je
lock
inc
mov
mul
inc
pop
outsb
inc
shl
stos
xor
adc
outsl
nop
outsb
xchg
lret
stc
shrb
mov
in
scas
jbe
rcrb
insb
sahf
or
jno
mov
sub
dec
in
xchg
testl
push
clc
xchg
pop
jmp
lock
cmc
mov
xchg
insb
dec
or
lock
xor
pop
adc
bnd
and
pop
ss
push
imull
jmp
testb
dec
sbb
andb
repnz
cmc
xor
testl
sbb
jge
fstps
jmp
push
push
imul
into
stos
lret
rorl
pusha
fsubs
inc
ss
mov
js
jg
pop
cli
pop
pushf
or
mulb
push
add
lahf
sbb
sub
adc
xchg
inc
xor
shrl
popa
push
mov
cmpsb
jnp
dec
cmpsb
scas
sbb
push
sbb
mov
clc
js
sbb
jo
sbb
sbb
flds
xchg
cmp
push
pop
mov
inc
clc
mov
sbb
aaa
std
sbb
or
pop
pop
mov
dec
cmc
out
ljmp
popf
push
adc
fistpl
fldenv
test
hlt
jns
mov
lock
pop
sub
negb
ja
xchg
js
push
movb
es
add
or
xlat
adc
jl
jno
call
sbb
pop
adc
test
and
sub
in
jns
icebp
adc
jmp
sub
sub
mov
jne
or
inc
sub
stos
pushf
ljmp
and
xchg
cwtl
pop
cmp
int
sub
xor
pop
mov
test
fldenv
add
push
jbe
jbe
jge
pop
subb
dec
aam
sbb
inc
mull
scas
sbb
xorb
mov
inc
fmul
stos
dec
repnz
dec
imul
lret
or
mov
and
and
jns
push
jo
sahf
dec
repz
nop
enter
jmp
mov
adc
test
xchg
push
cmpsb
push
imul
repnz
or
dec
adc
pushf
xor
ja
test
rcll
cwtl
lcall
jmp
jo
or
dec
dec
mov
xchg
mov
stos
cmp
xlat
inc
sbb
insb
popa
or
push
mov
cmp
iret
mov
jo
sub
xor
or
testb
mulb
pop
xchg
nop
jb
push
pop
std
inc
inc
int3
push
mov
mov
dec
mov
cmc
into
push
adc
call
and
dec
repz
icebp
xchg
inc
dec
es
or
mov
push
jo
mov
test
xchg
divl
xchg
jne
push
xchg
idivb
dec
mov
cmpxchg
mov
sub
ljmp
std
js
cs
lret
push
sbb
cld
icebp
dec
insb
xor
mov
lock
sub
mov
cs
stos
ss
push
pop
repz
testl
mov
mov
mov
jmp
jb
inc
daa
testb
xor
or
cmp
sbb
push
ss
add
add
paddw
testb
in
hlt
jns
cld
xorb
jb
sub
dec
inc
divb
mov
cmpsb
scas
testl
and
scas
lock
test
sub
pop
sbb
push
pop
ds
ljmp
sbb
cmc
mov
jo
js
icebp
sbb
call
ja
insb
imulb
loop
sub
adc
and
sti
xchg
dec
mov
ja
mov
lcall
int
out
out
outsb
adc
or
or
cmp
lock
sbb
js
or
imul
clc
or
add
cmp
ja
repz
mov
dec
jb
xchg
cs
xorl
js
ja
cwtl
add
xchg
scas
cli
bsf
dec
mov
sbb
in
cld
imul
mov
add
pop
jne
jbe
adc
push
loopne
add
jmp
jne
ja
std
outsl
xor
push
jmp
mov
jl
sbb
mov
out
div
cmp
push
dec
div
hlt
cmc
push
jbe
clc
jno
cli
push
push
addr16
xchg
out
cmp
mov
or
xor
dec
clc
xchg
ja
mov
das
into
jmp
mov
push
dec
lret
add
and
mov
and
imulb
dec
xor
cld
ret
repz
das
jae
jbe
xor
shll
mov
or
insl
adc
outsl
jb
mov
pcmpeqw
dec
cmc
mov
sub
and
aam
out
aad
xchg
mov
and
imul
inc
cmp
xchg
adc
hlt
pop
add
add
imull
inc
in
cmc
out
fstl
adc
ljmp
incb
cmp
mov
add
neg
add
xchg
xor
mov
cmc
lret
pop
test
mov
adc
scas
cmp
iret
mov
jg
mov
mov
inc
jo
stos
add
out
cmp
das
iret
adc
imulb
test
test
std
shrb
adc
stos
cmp
insl
dec
or
hlt
insb
shlb
shlb
stc
insb
in
or
or
sbb
out
sbb
test
mov
xsavec
push
add
dec
enter
outsl
stc
ret
dec
addr16
push
les
lock
in
movsl
mov
stos
sub
imul
clc
push
xchg
cmp
leave
jmp
clc
std
dec
lret
lods
push
lret
pop
insl
or
sahf
jecxz
cmc
cmp
jnp
mov
nop
ljmp
arpl
jle
repz
xchg
jmp
cmc
out
ljmp
sub
inc
mov
dec
mov
jmp
pop
aad
add
js
cmc
and
mov
push
divb
out
or
and
add
hlt
imul
and
sti
aad
inc
push
xchg
aad
add
sbb
cmc
cmp
cmpsb
add
xchg
mov
add
lds
adc
bound
add
test
add
stos
dec
hlt
dec
xchg
idivb
test
mull
out
push
inc
pop
test
insb
in
lock
lods
nop
jmp
lcall
aaa
addl
add
and
testb
xchg
push
cmp
cmc
int3
clc
inc
pop
push
jne
add
cmc
push
jmp
jl
rcll
jl
jmp
add
xchg
ljmp
inc
outsb
out
aam
outsb
mov
test
xchg
nop
add
mov
in
movsb
nop
add
jl
testb
lods
stc
jmp
jl
out
add
test
in
in
addl
dec
stc
ds
jmp
scas
int3
xor
in
or
pop
std
out
xchg
mov
into
cs
xor
out
add
jg
inc
xor
push
or
xchg
and
divb
xchg
mov
mov
sti
int
xor
xchg
pop
push
pop
add
add
decl
mov
inc
cwtl
negb
or
notb
addb
push
pop
aaa
mov
pop
ret
stc
insl
stos
notb
xchg
xor
adc
jo
cmc
test
in
das
je
lods
jo
hlt
test
jmp
mov
xchg
sbb
dec
xchg
repz
imul
ja
ret
cwtl
leave
xor
pop
pop
test
js
push
mov
outsl
dec
pshufw
cmpsb
and
mov
jmp
xlat
push
dec
mov
or
adc
pop
sub
loop
adc
insl
or
test
add
mov
clc
mov
lds
pop
imul
jl
xchg
scas
pop
out
sub
push
dec
cmp
hlt
int3
aam
lock
push
ss
out
pushf
cmp
int3
icebp
xchg
xchg
jbe
adc
fmul
aad
or
cmp
cli
mov
xchg
adc
adc
cmc
mov
es
sub
ljmp
inc
insl
iret
adc
jle
adc
mov
mov
icebp
in
lock
outsl
out
mov
mov
lods
imul
push
mov
pop
int3
lret
mov
mov
pop
ljmp
iret
dec
scas
daa
fldt
mov
adc
je
cmc
pop
dec
push
mov
mov
popf
inc
dec
lcall
jo
dec
out
outsl
hlt
adc
xchg
mov
popa
jmp
in
dec
fsubrs
cmc
mov
xor
movsb
aaa
mov
aam
fdiv
pop
sbb
sub
repz
into
dec
ja
mov
sbb
cs
psadbw
ljmp
cld
xchg
fwait
adc
nop
je
adc
out
or
adc
cmpsb
leave
xor
movsb
jne
jl
mov
repz
cmp
jne
ror
test
cltd
jo
mov
scas
imul
std
push
testl
sub
add
aad
out
jb
ja,pn
outsl
inc
jbe
adc
sbb
nop
or
aaa
testb
stos
fs
add
enter
add
xchg
cmc
dec
mov
cli
fistps
test
pop
cmp
nop
ret
shll
mov
in
push
in
push
jbe
push
outsb
enter
jmp
scas
cmpsl
testb
pop
test
loope
popa
ljmp
inc
push
mov
inc
jmp
insb
mov
nop
dec
or
test
ljmp
jbe
scas
pcmpeqd
les
add
ljmp
push
cli
insl
dec
sahf
and
stos
dec
fidivs
lret
cwtl
js
cli
ja
sbb
faddp
jae
sub
mov
arpl
in
sti
add
add
test
jne
hlt
mov
xor
push
negl
sub
xchg
mov
sbb
dec
into
lock
subb
cs
and
shl
adc
mov
adc
scas
nop
pop
fwait
push
xchg
pop
andl
je
jnp
aam
mov
push
pop
je
cmp
dec
in
out
and
xchg
shll
mov
fistpll
adc
mov
cli
adc
testb
mov
or
pop
jb
xchg
lock
jmp
popf
lock
cmpsb
testb
addb
add
and
pop
xchg
sub
out
lods
aam
ss
xor
into
cmp
fs
cmp
sub
imulb
das
dec
pop
je
pop
ljmp
icebp
cmp
sub
ljmp
imulb
and
xor
das
pop
add
sbb
mov
sti
ds
sbb
aad
pop
add
js
hlt
jge
sbb
out
aam
inc
mov
xor
add
add
mov
and
aam
cli
push
xchg
hlt
jmp
inc
sti
icebp
hlt
push
in
testl
insb
icebp
insb
out
sub
mov
add
out
notl
cmp
ss
lock
xchg
xchg
adc
add
pop
xchg
jo
repnz
pop
in
hlt
push
imul
jg
adc
inc
repnz
nop
lock
jmp
sbb
fdivrs
or
pop
push
push
int3
push
or
or
sub
cs
push
out
xchg
and
out
mov
lock
ljmp
jl
outsl
sbb
ss
cmpsb
in
arpl
out
dec
fsubs
jl
filds
icebp
cmp
jp
call
xlat
mov
mov
jle
jno
clc
int
jne
xchg
mov
jmp
icebp
and
push
cmp
sahf
clc
jg
cwtl
js
mov
test
adc
cld
ds
ja
pop
cmc
cmpsb
xor
cmpl
icebp
adc
sbb
les
jmp
jmp
imul
push
add
in
je
sarb
cwtl
adc
inc
cmp
pushf
adcl
sti
shl
in
andb
aaa
xor
jo
push
push
ss
ss
es
idivl
xor
nop
sbbl
jo
push
daa
je
jne
jns
xchg
jnp
or
jge
sub
jns
add
jo
sbb
mov
jo
pop
and
clc
cwtl
imul
fcomps
pop
ja
jbe
shlb
dec
add
push
sub
mov
jno
movsl
insb
das
push
icebp
jbe
daa
ss
js
notb
xchg
outsl
notl
rclb
out
jb
idivb
dec
clc
mov
xor
or
testb
jne
sub
mov
aas
sub
mov
cmc
push
es
adc
lds
test
jmp
in
loop
xchg
testb
lret
ja
sub
int3
or
mov
js
jb
iret
or
sub
sbb
sub
dec
mov
push
xor
pop
scas
je
scas
pop
mov
arpl
mov
addl
xor
jmp
das
jmp
adc
es
cmp
jo
out
icebp
sbb
push
cmp
ja
lock
js
lock
es
clc
xor
sub
sub
cmp
adc
out
push
xchg
push
js
jnp
jmp
push
mov
add
fdivs
pop
cmpsb
std
out
cmp
adc
div
sbb
icebp
add
aaa
es
xor
jo
mull
or
push
je
lock
imul
jecxz
mov
push
lock
xor
out
push
ja
mov
ljmp
je
lock
add
jo
mov
sti
xlat
sarl
pop
push
loopne
or
repnz
jo
out
daa
push
ss
je
int
cmpsl
jmp
mov
addb
adc
add
std
shll
aas
push
divl
cmp
je
lock
es
xor
jo
xlat
icebp
sbb
daa
divl
or
add
jo
jmp
jbe
cld
je
jns
mov
lods
je
lock
jo
data16
ljmp
xchg
lock
mov
add
daa
cmc
ss
je
jo
ja
xchg
es
xor
jo
dec
daa
out
xchg
ljmp
ja
repz
adc
push
cmp
add
push
divb
jo
std
daa
xor
jo
xchg
clc
jne
hlt
xor
jo
aad
out
ss
je
lock
or
jo
sub
cmp
daa
dec
pushl
cld
es
icebp
mov
daa
notb
mov
cmp
je
lock
jo
daa
ljmp
xor
jo
add
ss
je
lock
es
idiv
xlat
xor
jo
push
daa
bnd
lock
es
xor
pop
mov
scas
add
jo
out
daa
std
ss
test
in
jo
hlt
daa
insl
ss
je
lock
lods
xor
jo
or
in
ss
es
pushl
cld
daa
in
js
clc
or
divb
jo
dec
daa
lock
es
add
or
sub
xor
jo
push
clc
sub
lock
jo
in
daa
or
sub
jo
add
imul
std
es
js
notl
inc
fdivs
and
icebp
push
inc
clc
cmp
je
lock
add
in
movsb
add
inc
fwait
lock
sub
out
lock
push
jmp
in
and
or
sub
repz
jo
imul
ss
lock
insb
pop
adc
outsl
add
sbb
je
lock
es
xor
cmc
clc
xchg
jo
cmc
daa
mov
lock
es
xor
cmc
pop
sbb
mov
cmp
push
out
xchg
testb
pusha
mov
adc
sbb
xlat
add
test
not
add
test
aad
out
jns
call
or
push
xlat
add
push
add
cld
test
aad
cli
jns
push
cmp
aad
hlt
jns
call
out
sbb
xlat
add
test
aad
add
add
jns
call
cli
cli
clc
imul
xor
adc
sbb
xlat
add
test
aad
ljmp
adc
sbb
xlat
frstor
xlat
add
test
adc
push
hlt
cmp
aad
lock
call
ljmp
push
add
add
loope
cmp
aad
cld
jns
call
div
jns
call
lock
xlat
add
test
aad
push
jns
call
call
cld
sbb
xlat
cmp
mov
negb
hlt
xlat
add
test
aad
in
jns
call
push
sbb
add
test
test
aad
clc
jne
push
idivb
hlt
aad
bnd
call
in
sbb
xlat
add
test
aad
add
jns
call
clc
xchg
cli
imul
jl
rcll
sbb
xlat
add
test
aad
or
call
add
rcll
sbb
xlat
add
test
not
add
test
aad
out
jns
call
or
push
xlat
add
push
add
cld
test
aad
cli
jns
push
aad
not
pop
hlt
jns
call
out
sbb
xlat
add
test
aad
add
add
jns
call
cli
cli
clc
cmc
call
hlt
ss
mov
test
pop
cmc
jb
cmpsl
jmp
inc
mov
sti
out
mov
sti
clc
add
clc
out
and
icebp
ss
rorb
icebp
jmp
call
clc
movsl
out
hlt
test
add
out
add
sbb
dec
icebp
push
in
inc
sbb
bound
fdivs
add
sbb
mov
idivl
idiv
clc
sbb
pop
sbb
mov
xchg
sti
cld
add
lds
testl
sbb
add
inc
std
xchg
sti
and
clc
repnz
les
call
js
dec
mov
jmp
lret
cmc
mov
cmc
sub
jl
test
add
xor
mov
cwtl
mov
mov
stos
js
or
adc
icebp
mov
cmc
test
or
sub
adc
imull
jbe
lds
mov
cmc
cs
cmc
jbe
add
sub
sub
cmc
ja
xchg
movsb
repz
mov
add
mov
mov
rorb
pop
out
idivl
sub
jmp
in
inc
sbb
or
jne
jmp
lock
xlat
testl
outsb
jo
les
imul
add
jbe
icebp
and
sub
outsb
test
add
xlat
std
out
call
pop
in
jmp
jmp
ljmp
jns
icebp
jo
xchg
jmp
jp
jbe
mull
add
pop
add
imul
or
icebp
mov
add
mov
jp
repnz
mov
aaa
stos
cmc
or
mov
sti
jmp
sub
int
add
mov
xor
sbb
sbb
mov
repnz
outsl
add
adc
scas
repz
bound
cmp
cwtl
jne
xchg
cs
ja
aaa
sub
out
add
fsubr
clc
in
pop
jbe
icebp
and
cmp
xchg
jae,pn
addb
js
pop
xchg
and
and
in
dec
notb
xor
mov
mov
ss
cli
jmp
out
xor
bnd
push
das
push
sbb
and
adc
jo
cmp
cmc
cld
push
jge,pn
addb
add
div
jl
adc
cmp
cmp
dec
call
jbe
cmc
and
jae
mov
addr16
in
js
pop
icebp
mov
add
icebp
out
andb
std
dec
cmc
jns
jne
jb
cmpsb
decb
mov
lods
xchg
jp
add
out
cmc
jno
dec
mov
cmc
adc
fadds
jmp
icebp
cmc
lock
pop
pusha
jge
adc
mov
std
ljmp
clc
out
mov
addl
xor
add
adc
adc
mov
ljmp
inc
cmc
sub
jno
inc
add
imull
sbb
or
add
cmpsl
aaa
arpl
cmc
ljmp
addb
ljmp
sti
xchg
out
jp
sti
mov
clc
jno
sti
add
clc
add
clc
jge
sti
cmc
imul
jmp
out
insb
call
clc
jmp
imul
ljmp
jne
pop
outsb
and
mov
xor
mov
mov
cmp
adc
sub
or
add
inc
mov
insb
jb
push
arpl
xorl
add
cwtl
lret
bound
jl
sub
xor
es
jb
outsb
hlt
popa
jg
xchg
pop
xchg
in
adc
or
or
mov
or
cwtl
inc
or
rcrb
adc
or
repnz
xchg
cmc
and
inc
imul
ret
cmpsl
xor
pop
mov
inc
or
nop
ljmp
inc
insl
cs
jbe
testl
jae
xlat
ss
jae
cmpb
mov
inc
dec
inc
inc
lea
ret
xchg
les
stos
aas
lock
test
imulb
lods
sbb
inc
nop
push
inc
addb
lods
push
pop
test
mov
dec
sub
les
push
inc
xchg
imul
test
into
lods
mov
aad
mov
mov
push
mov
inc
add
pop
adcb
inc
dec
movsb
out
push
xchg
subb
lods
xor
sbb
sub
add
mov
xor
orb
imul
mov
ljmp
aam
jne
ret
or
out
aas
and
cli
mov
lock
push
xchg
xor
cmpsl
js
outsl
adc
mov
jecxz,pn
jnp
mov
ss
mov
mov
add
jp
in
jge
mov
lods
cmpb
xchg
xchg
and
icebp
imul
out
push
insl
fwait
das
test
or
add
add
addb
mov
push
subb
push
lret
pop
dec
insb
sub
or
out
mov
test
inc
insb
enter
imul
mov
shl
and
sub
or
ret
mov
scas
cli
cs
xchg
shlb
outsb
inc
mov
cmp
sub
cmp
ror
dec
sub
imul
cli
out
aaa
mov
cmp
mov
iret
or
repz
cmp
out
push
push
mov
shr
cld
mov
clc
insl
lock
rcrl
jle
sbb
xchg
cwtl
cmc
cmp
pop
xchg
js
inc
jne
push
hlt
xor
pop
icebp
and
icebp
cmp
mov
fdivs
push
add
aaa
fstps
clc
inc
fdiv
cmp
push
mov
sbb
mov
aas
ljmp
cmp
call
push
call
jmp
and
js
push
roll
mov
sub
shl
mov
js
cmp
fsts
shrb
and
mov
imul
ss
out
mov
dec
xchg
pop
and
aam
js
push
insb
insb
jbe
mov
out
adc
popa
inc
mov
push
cmc
in
outsl
mov
repz
push
hlt
pop
inc
out
xchg
cltd
clc
cmp
icebp
out
jmp
or
sub
and
inc
and
and
push
mov
jae
out
cmp
mov
xor
out
mov
das
pop
and
jge
jge
imul
dec
mov
pop
arpl
sbb
or
ljmp
sti
adc
push
adc
cltd
adc
xlat
pop
fildl
in
lahf
adc
adc
data16
movsb
mov
sub
std
aad
fcmovnu
js
lods
xor
cmc
push
inc
ljmp
inc
sbb
lahf
ljmp
in
ret
inc
mov
js
imull
xchg
pop
lock
and
lcall
loope
lods
mov
dec
lret
add
fnstsw
cmp
clc
jb
sarl
sbb
je
mov
pop
sbb
lock
aas
aaa
pop
jae
push
pop
sub
xor
aaa
cld
mov
dec
mov
sub
mov
fldenv
mov
and
xchg
int3
and
push
pushf
mov
adc
xor
hlt
pop
add
lods
cs
mov
hlt
xchg
jmp
push
mov
shl
in
mov
sbb
jae
jo
mov
or
js
inc
aaa
aaa
mov
stos
add
imul
push
mov
stos
xchg
xor
icebp
lret
xor
aas
test
xchg
cmc
xor
mov
cs
hlt
adc
pop
jg
jno
sub
insl
cs
cld
xor
out
es
insb
mov
aas
rolb
cmp
adc
insb
cmp
pop
cmp
push
call
jl
scas
imul
sub
or
mov
cmp
icebp
fisubrs
ja
lahf
lock
xchg
fcomps
test
test
pop
xchg
in
movsb
mov
sti
addr16
cmp
sbb
ss
outsl
jns
in
insl
sub
and
pop
xor
lods
sbb
add
cmpsl
insb
jmp
xchg
push
jmp
xchg
fxch
mull
mul
int3
dec
adc
sub
mov
call
jb
stos
imul
jmp
inc
pop
sbb
rolb
push
jno
pop
out
fdivrl
shll
jmp
lods
xchg
int3
sbb
sbb
fistl
jno
mov
jmp
mov
std
lea
lret
dec
or
jmp
cmp
aad
fidivrl
and
imul
add
dec
std
fldenv
or
lods
imul
lret
cmp
mov
sti
fiaddl
sbbb
push
mov
cmp
insb
jno
jg
pusha
out
inc
leave
test
push
ljmp
cmp
pop
out
jb
jno
fcmovbe
leave
mov
mov
mul
push
cmp
add
pop
pop
dec
cmp
idivl
jne
movsb
jb
testl
pop
dec
clc
jo
aad
js
sbb
cli
out
fldl2t
cmp
div
xlat
pop
test
std
arpl
ret
jmp
call
and
jae
hlt
clc
clc
fidivl
out
or
push
sbb
sti
mov
fdiv
mov
loop
popf
fcoms
or
lods
add
movsl
push
shll
loop
sub
test
fsubrs
lods
add
add
negl
negl
es
pop
jo
lock
stos
clc
push
hlt
scas
lret
sbb
clc
sbbb
or
test
sbb
leave
add
pushf
lret
jae
cmc
pop
dec
jnp
data16
push
inc
add
mov
clc
not
push
std
add
sti
xchg
testb
cmp
cmp
xchg
dec
fadds
add
out
jb
inc
xor
sti
dec
clc
ljmp
leave
xchg
mov
sbb
dec
push
loope
repz
cmc
pop
push
mov
iret
or
ud0
fucomp
jns
mov
jmp
out
dec
cli
call
stos
out
ljmp
dec
cmp
lahf
mov
fucomip
stos
pop
cmp
xchg
or
sbb
arpl
gs
icebp
sbb
pop
outsl
imul
sbb
ret
pop
or
mov
cmc
lahf
xchg
rcrl
out
mov
sbb
fiaddl
in
pop
js
xchg
pop
push
xor
test
setg
adc
push
outsl
xchg
dec
xor
scas
pop
push
sbb
into
push
cmp
test
xchg
nop
clc
sub
adc
mov
pop
push
cmp
fildl
int
ja
jp
pop
fsub
inc
or
jp
sbb
push
sbb
js
cmpsb
xchg
push
sbb
xor
inc
xchg
xchg
popf
xor
lods
sub
and
add
sub
testl
jmp
sub
cmp
idivl
pop
outsb
sbb
ljmp
subb
add
dec
sub
dec
aas
add
sbb
sbb
js
push
or
in
jbe
cmpsl
add
mov
cli
in
sub
cmp
clc
sbb
in
outsb
pop
sbb
neg
jns
clc
notl
outsb
fcomps
outsl
adc
popf
push
push
mov
idivl
rolb
lock
xchg
mov
je
jo
sbb
inc
fadds
js
xlat
movsl
jg
cmpsl
sbb
adcb
jo
mov
push
icebp
jno
int
js
js
das
dec
or
xor
mov
imul
test
pop
std
in
loop
imul
std
movsb
ja
mov
js
sub
shrb
sbb
roll
leave
and
and
xlat
je
lock
push
lock
into
insb
insb
xor
jmp
cmp
mov
cmc
mov
clc
adc
icebp
outsb
js
ja
ss
repz
jo
pop
out
mov
mov
sub
outsb
leave
sbb
ja
pop
jne
jb
lock
jns
loop
lcall
jmp
clc
xor
pop
scas
jge
in
add
hlt
jne
repz
or
cmpsb
js
jl
pop
cmp
in
jb
je
mov
cs
cmp
lock
mov
fdivp
mov
push
cmp
push
fiadds
repnz
testl
mov
adc
and
je
out
mov
cmc
mov
adc
adc
cli
fmuls
js
adc
in
js
xor
hlt
pop
jb
mov
jmp
das
cwtl
shl
sbb
jns
js
mov
adc
push
call
jo
lret
pop
jmp
ss
xor
shr
js
movsl
icebp
cmp
sbb
push
std
mov
add
sub
fcoms
rcl
cli
sbb
hlt
icebp
cld
fsubs
lret
cmp
mov
out
xlat
icebp
add
mov
cmp
push
inc
notb
cmc
iret
mov
rcrb
and
repnz
lret
imul
divb
sbb
and
es
xor
sub
cmp
icebp
jle
outsl
scas
pop
cmp
jbe
and
xor
or
mov
mov
aaa
pop
cs
ja
cmp
clc
in
enter
mov
lock
mov
aaa
lods
cmp
repz
mov
aaa
popf
jae
mov
in
icebp
aad
push
fwait
push
testb
and
mov
lcall
mov
test
aaa
aam
out
test
repz
lods
mov
mov
xlat
test
adc
lods
mov
repz
jle
imul
xchg
aaa
neg
mov
cmp
xor
idiv
jae
xor
stos
daa
inc
mov
lcall
jno
sub
dec
dec
dec
clc
clc
jmp
jl
cltd
cmp
jp
push
ljmp
cld
stos
mov
cld
test
ljmp
in
adc
addr16
mov
mov
stc
out
nop
push
pop
cmp
insb
outsb
icebp
enter
ja
outsb
clc
mov
jl
xchg
movsl
inc
or
addr16
or
stos
xor
enter
and
push
and
mov
inc
xor
shll
push
out
mov
adc
xbegin
movl
out
xor
add
out
in
ja
xchg
cmc
and
cmc
adc
xchg
and
xor
mov
push
inc
div
inc
mov
gs
insb
xchg
clc
mov
aaa
and
lock
pop
int
or
inc
pop
bound
cld
lock
xor
adc
xor
cs
mov
insl
mov
and
mov
test
cmpsl
nop
mov
mov
jl
enter
das
rcl
data16
dec
sub
mov
mov
jae
mov
int3
mov
pop
js
or
je
imul
repnz
leave
outsl
stos
repz
sub
lahf
inc
xor
or
xor
mull
mov
aaa
shrb
nop
or
hlt
mov
cs
popf
std
xor
cmp
dec
orl
sub
lock
dec
ret
nop
sub
andl
cmp
cltd
cmpsl
or
repz
stos
inc
rorb
ret
jb
xor
movsl
jge
sysexit
loop
in
imull
pop
ficompl
push
les
mov
and
push
jmp
imul
jb
lahf
lock
and
insb
cwtl
out
aas
jb
push
xchg
daa
ja
mov
add
ss
jnp
xchg
in
jl
xchg
testb
pop
mov
mov
in
jo
pop
mov
dec
dec
lods
ret
push
enter
and
cwtl
mov
je
xor
lods
popa
cli
jl
cs
jo
outsb
lret
in
sarb
push
aaa
sub
ret
out
xor
stos
popa
pop
in
je
ret
stos
in
fnsave
add
mov
in
pushf
sbb
lods
stos
out
dec
jo
jecxz
mov
jmp
cmp
mov
icebp
idivl
add
jle
hlt
push
inc
xchg
clc
in
stos
pop
stos
les
je
sub
enter
pop
mov
inc
mov
insb
ss
push
inc
cmp
sub
add
xor
xchg
hlt
daa
in
pushw
test
push
in
aaa
pop
in
mov
lret
xchg
fadds
daa
mov
in
jbe
mov
cmc
sbb
cwtl
xlat
dec
aad
xlat
adc
idivl
jg
ja
cwtl
movsb
repz
test
notl
jb
adcb
xlat
xchg
fmuls
pop
lea
daa
mov
insl
repz
pop
jo
mov
adc
ljmp
xor
movsb
sub
js
ja
sbb
jmp
mov
incl
mov
clc
mov
clc
sub
incl
mov
sbb
xchg
inc
mov
jmp
imul
repnz
in
cli
fcomps
imul
push
ja
clc
int3
pop
or
repz
fstps
mov
mov
dec
push
cwtl
jo
bound
int3
bnd
scas
outsb
jmp
lods
mov
daa
xchg
cs
dec
jbe
push
sti
dec
or
clc
es
jmp
inc
les
negb
movsb
dec
enter
sub
push
gs
idiv
mov
ja
xor
add
and
aaa
mov
mov
sbb
add
push
cmpsl
imul
out
mov
xor
aaa
xor
mov
cmc
sbb
lds
test
clc
into
ss
push
test
xchg
test
test
test
push
adc
xorl
cmpsl
push
xchg
push
push
loope
adc
xchg
jle
cmp
xchg
jl
fsubr
lock
cmp
mov
cwtl
mov
xor
lret
mov
cli
test
xchg
sub
or
cltd
sarl
mov
jle
xlat
call
dec
test
pushf
movsb
rcl
js
xor
push
xor
cwtl
mov
xor
test
xor
std
cwtl
iret
jno
out
aas
pop
test
cli
inc
ja
xorb
pop
clc
push
inc
in
clc
inc
add
lds
repnz
jp
aaa
rcrb
push
icebp
mov
aaa
cmpsl
icebp
pop
call
mov
xchg
xchg
sub
xor
jnp
add
outsl
mov
adc
pop
icebp
shlb
xchg
ss
movl
es
dec
and
scas
mov
and
test
jae
aaa
push
cmp
test
out
mov
xlat
orl
xor
mov
add
ljmp
jp
xbegin
call
pop
andb
mov
fcmovbe
add
mov
cmc
pop
int3
not
pop
inc
insl
lcall
xchg
xchg
hlt
cwtl
mov
mov
repnz
rol
cmp
add
insb
or
jae
negl
insl
inc
inc
push
leave
mov
ret
repnz
les
sbb
and
test
test
adc
test
in
dec
mov
cmp
sti
pop
mov
popl
xor
imull
icebp
sbb
xchg
clc
adc
cmp
test
xlat
pop
mov
aaa
cmpsb
pop
jns
xlat
aad
or
inc
or
insl
xor
icebp
lods
imul
and
mov
mov
cmpsb
addl
pop
push
jbe
add
pop
and
and
shll
daa
icebp
inc
mov
shlb
fdiv
enter
pushf
xchg
je,pt
sbb
cmp
lock
je
xor
inc
icebp
insl
add
test
pop
iret
divl
in
stos
mov
das
mov
cmp
inc
pop
stos
les
out
dec
sbb
push
mov
fmull
cmp
add
sub
out
orl
aaa
jo
jbe
push
jo
adc
mov
mov
or
inc
repz
mov
out
jmp
in
inc
out
pop
insb
push
mov
out
test
lock
insb
fcomps
imul
mov
scas
push
js
insl
inc
jp
inc
pop
inc
aaa
xor
adc
xor
dec
movsb
shl
test
or
faddl
push
jmp
sar
and
sub
sub
popa
clc
cmp
push
dec
add
fs
or
imul
jge
notb
imul
shr
sbb
inc
jns
popa
sti
jl
mov
imul
lcall
jle
mov
jno
xchg
mov
push
xor
xor
test
sub
adc
mov
mov
ja
mov
enter
clc
jbe
hlt
adc
fwait
aad
push
push
or
xor
es
dec
jne
outsl
out
pop
shl
pop
movsb
fwait
jge
sbbb
out
insl
or
loop
push
daa
push
add
cmp
dec
mul
cmp
xchg
cmp
aas
rcrl
sbb
mov
jbe
mov
mov
xchg
push
scas
sub
test
loope
inc
jo
addb
xchg
mov
iret
aaa
mov
shrd
clc
mov
enter
push
inc
cs
mov
jo
push
jmp
cmp
push
test
or
dec
inc
adc
inc
ds
add
ja
ja
mov
and
or
mov
in
lds
mov
adc
mov
dec
jmp
xor
pop
inc
and
lock
xor
outsb
idiv
cmpsb
jo
aaa
icebp
dec
jmp
inc
idiv
pop
dec
loopne
loope
lahf
leave
and
test
xchg
inc
xor
test
mov
and
cmpsb
adcl
push
icebp
add
sahf
loope
push
pop
jp
test
das
mov
mov
aaa
les
lahf
hlt
jbe
dec
js
ljmp
sbb
add
cmp
inc
mov
mov
sub
daa
divb
ret
int
leave
fldenv
sti
mov
jle
jmp
lret
inc
cld
das
push
sub
xorb
cmc
mov
dec
repz
push
fisubl
mov
sub
dec
pop
leave
push
mov
inc
je
add
std
jno
add
hlt
mov
not
push
loope
adc
hlt
xchg
mov
ret
jle
xchg
inc
sbb
lods
mov
icebp
mov
in
clc
int
mov
and
scas
addb
test
pop
in
adc
mov
stos
and
xor
sub
push
rolb
iret
push
outsb
xor
cmpsl
mov
sub
shr
add
movzwl
sub
pop
outsl
xor
imull
jp
nop
cs
add
pusha
jae
and
ret
sub
jne
js,pn
mov
xor
inc
inc
mov
jne
cmc
fistpll
clc
shlb
adc
ljmp
js
insb
adc
inc
jmp
cmp
mov
adc
ret
mov
je
sbb
mov
stos
mov
sub
insl
mov
push
das
adc
cmc
mov
je
mov
lahf
clc
out
into
sub
mov
lods
sbb
lret
mov
push
ror
dec
in
test
aam
jbe
movsb
push
les
jg
clc
sub
sub
cmp
cmp
mull
mov
jbe
popa
pop
sub
sti
xlat
imull
cmp
stos
rcrl
ss
jp
fldl
xor
js
outsl
dec
insb
adc
cmpsl
xchg
or
insb
mov
sti
pop
movsb
scas
shlb
andb
ja
in
outsb
insb
push
cli
vmread
or
cmpsb
adc
add
cs
xlat
jbe
add
data16
out
sbb
mov
test
jg
xor
call
inc
mov
adc
ja
lods
add
ret
xor
mov
icebp
movsb
sub
rcll
ja
lds
pop
clc
ret
inc
mov
fcmove
into
adc
xchg
jl
inc
add
mov
and
push
outsb
cs
das
cmp
xor
jae
stos
push
leave
movsb
cwtl
test
ljmp
aaa
lret
mov
je
or
xlat
dec
hlt
mov
icebp
ret
aaa
mov
or
mov
xchg
pop
xor
cmp
xchg
and
es
or
push
enter
jns
nop
loope
xlat
aaa
sarb
xor
enter
add
pop
jg
js
xor
ss
cmp
mov
pop
mov
ss
mov
test
aad
jl
stos
ds
adc
imul
mov
cmc
pop
dec
ja
xor
sub
jg
idiv
jo
xor
jns
in
clc
sbb
dec
cmpb
jp
inc
jp
scas
fucomp
testl
clc
xor
push
aad
cmp
cli
loope
out
mov
inc
aam
icebp
jmp
test
dec
ret
jbe
es
jo
in
test
mov
mov
lock
pushf
pop
xchg
or
test
in
push
pop
subb
ljmp
fnstenv
pop
add
mov
out
aaa
idivl
test
fists
sub
pop
xchg
push
data16
addr16
jno
or
sub
xchg
jbe
cli
aaa
inc
pop
mov
and
hlt
inc
sub
cli
loopne
and
shlb
inc
xor
adc
or
andb
dec
testl
ret
lods
mov
testl
das
cmpsb
out
and
pusha
out
mov
xor
insb
cmpsb
mov
outsl
orb
mov
hlt
das
outsl
inc
xor
inc
vfrczss
jb
out
aam
inc
jg
sub
insb
out
and
mov
inc
out
jp
xchg
cmc
mov
mov
ja
divl
cmpsb
imul
ret
xchg
lock
int
sbb
dec
xlat
lock
lcall
vpshuflw
in
mov
sbbb
loope
add
adc
hlt
nop
lods
pop
mov
dec
push
outsb
pop
cmpsl
jne
add
sbbb
lock
shll
cmc
jg
hlt
xchg
icebp
js
and
js
in
jp
lds
rol
cs
mov
popf
mov
cmpl
into
cmp
ret
or
pop
mov
ja
ds
movsb
out
icebp
scas
lds
adc
je
jns
mov
push
in
xor
loope
xchg
das
nop
inc
inc
or
xor
xor
add
mov
imull
loop
cli
aas
outsb
adc
stos
iret
mov
xchg
jbe
lods
mov
fwait
jbe
ljmp
ret
xor
sbb
mov
imulb
mov
mov
pop
mov
divl
adc
cltd
fimull
ret
sbb
mov
jo
popa
xor
ja
scas
dec
cmp
scas
jge
aam
sub
xchg
lods
test
iret
mov
testl
xor
cmp
testl
andb
btr
mull
lds
jno
aaa
outsb
mov
negl
mov
xor
stos
cmp
jmp
xor
jmp
mov
mov
cmpsb
outsl
clc
dec
add
push
xor
jbe
nop
sub
dec
leave
insb
icebp
dec
clc
or
xor
or
mov
pop
shrb
and
aaa
enter
xor
les
scas
ja
cltd
push
sub
or
xor
xor
mov
xchg
mov
aaa
dec
les
nop
xorl
xor
push
jo
popf
adc
lods
jbe
or
adc
ss
and
aas
xor
sub
ja
js
push
scas
std
dec
in
sub
bswap
pusha
ja
ljmp
bnd
js
mov
xchg
bnd
shll
inc
jg
mov
sub
movsb
inc
mov
pop
fdivrl
shrb
jmp
mov
adc
cmp
mov
push
jecxz
incl
or
stos
pop
stc
sbb
mov
addl
in
jae
imul
cmp
les
out
jge
jecxz
adcb
push
cmp
outsb
pushl
in
in
xchg
rorl
mov
adc
pop
aam
xor
cld
pop
in
psubusw
lock
cmp
mov
ja
lods
jmp
mov
adc
into
mov
xor
jne
not
lcall
dec
ljmp
push
testb
cmpl
or
ss
out
aaa
xchg
dec
addl
mov
js
cmc
in
xor
les
jmp
sub
fcomps
xor
xchg
fcomps
js
movsl
insl
ds
andb
mov
ja
cli
out
stos
pop
out
daa
push
cli
movsb
cli
loopne
cwtl
aaa
mov
lods
test
insb
and
mov
inc
adc
inc
xorb
xor
fstpt
leave
or
repnz
lods
je
cmpb
sbb
hlt
scas
xor
cmp
repnz
stos
mov
out
pusha
pop
js
pop
dec
mov
outsb
sbb
xchg
imull
insl
jmp
out
xor
js
pop
push
inc
aad
icebp
roll
sti
cmc
mov
xchg
daa
repz
daa
add
es
jp
out
sub
xor
jo
outsl
mov
insb
cwtl
clc
ljmp
test
clc
fdivs
jo
jb
cmp
je
jo
pop
clc
orb
aaa
push
xchg
cmc
outsb
push
jo
jne
ja
daa
jl
lock
cmp
push
decb
jno
push
add
in
jo
repz
push
xchg
cli
push
insl
cmp
xor
push
js
lock
out
jbe
xor
xchg
xor
jo
jo
mov
or
sub
ss
repnz
insl
notl
jae
xor
out
push
cmp
mov
cld
or
push
add
jbe
xor
jo
icebp
icebp
aad
or
cmc
sub
pushl
adc
push
lock
in
xor
xor
push
xor
jo
outsb
icebp
je
or
sub
ss
lock
xorl
clc
push
divl
xor
cmc
js
jo
jg
repz
xchg
cli
xor
push
js
jo
jae
or
jbe
aad
je
adc
in
mov
imul
icebp
sbb
and
push
cmp
cmc
es
jbe
cmc
loop
adc
push
push
data16
repnz
jmp
cmc
or
jmp
sbb
clc
adc
lock
add
sbb
imul
fs
add
jns
jb
adc
daa
jmp
movsl
lods
sub
jge
insl
test
pushl
mov
ja
jle
mov
negb
xchg
je
pop
push
testl
insb
inc
jg
mov
cmp
add
add
or
jne
cmpsl
insb
jb
dec
cmp
add
push
in
add
shl
inc
cmc
xor
test
out
shrb
es
mov
jmp
js
dec
rolb
cwtl
out
jno
icebp
mov
insb
push
test
pop
sub
in
push
push
jb
scas
pop
inc
out
sub
cs
add
imulb
mov
popf
and
cmp
jb
out
lock
jnp
pop
mov
test
add
adc
negl
testb
pop
int3
rcrb
xchg
insb
jne
clc
ja
int
incb
repz
jo
xchg
xchg
xor
add
push
repz
sbb
jo
lret
pop
test
aaa
sbb
xchg
insl
aas
imul
jae
sub
loope,pt
xchg
jbe
sbb
jle
push
cmc
xchg
clc
bound
jl
enter
add
sub
scas
dec
repnz
je
jae
rclb
sub
das
insb
mov
xchg
add
sbb
or
mov
and
int
ficomps
jmp
push
in
notl
sarb
hlt
cmp
scas
or
push
clc
cmp
jl
mov
hlt
mov
insb
push
push
jne
jo
push
test
pop
ss
mov
pop
cmp
adc
insb
jmp
mov
push
push
push
test
cmc
addb
ja
or
mov
jbe
in
test
aas
daa
xlat
insb
push
adc
add
pop
iret
add
pop
xchg
add
data16
in
lahf
sarl
xor
xchg
xor
aam
aaa
jmp
cwtl
insb
or
icebp
testl
xor
and
jae
imul
and
data16
cmc
aas
jb
insb
jo
cwtl
icebp
pop
repnz
test
daa
test
xor
nop
ret
jae
jo
jb
testb
roll
rcll
insl
xchg
clc
add
gs
movsb
add
push
fdiv
add
jl
lock
cli
jg
dec
sbbl
add
rolb
cli
jmp
push
clc
pop
sbb
aad
cmc
xor
inc
ljmp
or
and
and
cld
arpl
jmp
inc
add
xchg
test
push
fbld
das
insb
mov
insb
jnp
shrb
add
out
sbb
xchg
jo
inc
clc
adc
insb
jo
sub
adc
movsb
mov
xor
aad
adcl
out
mov
adc
or
int3
cmc
ss
add
inc
lock
cld
test
outsl
data16
sti
sar
sub
lods
daa
xchg
negl
orb
bound
jno
outsl
sbb
out
roll
outsl
jmp
add
jge
pop
push
outsl
out
out
daa
push
mov
jo
fs
pushf
outsl
or
movsb
add
lock
xchg
cli
in
mov
scas
je,pn
cmc
jbe
in
aaa
add
or
sub
incb
add
test
roll
or
pushf
cmc
shrl
cs
add
inc
insb
test
repz
push
pop
xchg
add
or
pop
daa
aam
repz
roll
or
outsl
shrl
cs
pop
add
jmp
add
insb
cld
repz
inc
and
test
clc
imul
test
jge
dec
xor
mov
xchg
clc
sbb
std
clc
and
outsb
out
push
add
cmc
fmuls
xor
sbb
push
popl
add
jae
in
sub
cli
mov
xchg
jp
sbbb
insb
es
inc
mov
pop
dec
in
dec
add
clc
push
mov
clc
bnd
cld
roll
out
add
inc
mov
mov
jae
movsl
xchg
clc
cli
cltd
cmp
push
shl
mov
movsb
add
in
insl
add
insb
mov
out
inc
repz
sbb
imul
notb
pop
dec
xchg
je
or
push
les
xor
nop
fdivrs
xchg
int3
xor
roll
add
out
je
lea
insl
push
jne
sub
pop
jo
xlat
addr16
lock
sub
push
mov
pop
call
dec
add
nop
mov
out
mov
outsl
push
mov
out
or
pushf
adc
jmp
out
sti
cmc
xorl
fsubr
notl
push
es
test
push
aaa
mov
outsl
test
test
adc
repz
jmp
jbe
insb
add
push
hlt
shrl
repnz
or
jmp
test
mov
test
pop
imul
aas
out
add
adc
add
std
insl
xor
sbb
testb
insb
cli
lock
xor
daa
cmc
rcll
insb
imul
rcrl
jno
in
insb
jge
inc
cwtl
xchg
es
lock
sarb
adcl
repnz
test
add
add
jo
hlt
test
neg
js
mov
in
movsl
xchg
scas
push
imul
jl
jge
jg
insb
jo
adcb
pop
test
out
and
jb
test
cld
xchg
cmp
add
icebp
sbb
test
in
out
clc
mov
lods
push
or
sbb
clc
inc
je
adc
adc
fmul
insb
test
icebp
add
jbe
cmpsb
jne
xor
je
insb
jns
int3
lock
push
add
add
adc
jo
cld
mov
insb
lock
pop
push
sbb
jno
repnz
push
outsb
ret
and
mov
or
xchg
push
mov
jp
inc
jg
pop
gs
mov
adc
movsl
adc
lock
add
fsubs
xor
sbb
lock
test
insb
insb
add
std
adc
movsb
leave
insb
je
je
and
inc
insb
push
js
push
xorb
aaa
bound
dec
jge
cmpsb
jp
sti
sub
jle
mov
arpl
dec
imull
rcll
fmuls
outsl
jl
lock
inc
xor
popa
pop
rcll
fadds
insb
lods
ja
stos
and
icebp
fs
mov
xchg
jmp
adc
jmp
push
lock
jb
test
lock
daa
scas
js
jle
icebp
idiv
mov
out
fsubs
xor
mov
movsl
adc
outsl
vmovups
jmp
icebp
jg
add
cmp
out
ljmp
inc
repz
dec
xor
xor
xchg
adc
jno
ljmp
sbb
fdiv
cli
in
mov
scas
cs
cmc
jbe
add
add
or
pop
addb
inc
xor
add
sbb
imul
pop
mov
pop
cmpsb
add
push
lock
call
or
insl
add
lods
outsb
push
sbb
icebp
in
jl
dec
aam
sbb
imul
mov
insb
aam
test
pop
xor
push
ljmp
sbb
repz
cmp
dec
pop
insb
mov
push
add
out
or
out
shl
movsl
xor
add
xchg
inc
xor
push
or
sti
out
clc
xchg
insb
xor
nop
and
stos
add
add
add
sub
out
cwtl
loope
xchg
jmp
add
push
in
pop
dec
sub
sbb
or
jp
insb
jge
incl
cmpsl
insl
pop
jae
popa
xchg
add
idivb
imul
clc
leave
icebp
je
jae
cmp
pop
test
cmpl
lock
inc
ror
out
pusha
je
lods
push
clc
xor
jo
insb
outsl
inc
push
ret
loopne
cmovns
nop
icebp
mov
shrl
test
in
adc
or
add
dec
pop
outsl
jae
ljmp
mov
repnz
mov
add
mov
enter
add
test
adcb
repz
test
test
aad
dec
jb
dec
add
adc
iret
insb
jge
idivl
xchg
cmc
xchg
insb
insb
outsl
cmc
inc
adc
insb
es
ljmp
mov
addb
cmp
mov
xor
cwtl
imul
jl
sbb
or
push
testl
or
pop
inc
jbe
adc
or
cmp
and
push
outsl
cmp
sti
add
bound
repz
and
sbb
ss
sarl
add
mov
jo
cmp
dec
jg
xor
insb
lds
cld
xchg
pop
push
imul
adc
jne
pop
push
in
mov
or
pop
sub
out
adc
jp
jmp
insb
add
mov
sbb
das
add
dec
insb
seto
rorb
rcrb
jae
inc
repnz
add
push
cmc
aaa
inc
test
ja
movsb
add
dec
xchg
repnz
add
nop
xor
jns
mov
add
push
out
aas
jg
test
outsl
or
testl
jl
cmc
xor
jb
xor
mov
mov
xchg
repnz
jmp
xchg
dec
add
cld
test
shll
shr
xor
or
cmc
outsl
xchg
pop
lahf
push
int
in
pop
je
out
jne
clc
lock
int
add
mov
cld
inc
jmp
mov
push
jmp
icebp
push
add
int3
call
or
test
insl
aaa
xorb
pop
and
cmc
cmp
jl
cli
cmc
jo
add
repz
jbe
ss
add
jg
imul
pop
jo
mov
popf
aad
insl
ja
push
and
jns
mov
sbb
and
jb
mov
fbstp
inc
pushf
inc
das
mov
dec
notb
bound
add
adc
jae
lds
push
mov
notb
and
jae
hlt
sub
and
inc
mov
out
cmp
pusha
sbb
pop
testb
adc
shrl
pop
cmp
cld
in
cmp
outsl
js
pop
es
cmp
je
lock
jns
and
xor
mov
cwtl
sbb
mov
imul
sbb
fadds
in
cmpsb
sbb
lock
cli
jb
bound
push
je
lock
jns
test
rolb
mov
and
inc
mov
shrl
lods
movsb
mulb
xchg
repz
testb
cmp
outsb
push
adc
add
jl
jne
negb
sbb
out
lock
cmp
addl
cmpsb
sbb
and
mov
in
je
imul
inc
not
jnp
jno
jl
fwait
mov
jge,pt
ret
js
jo
add
enter
xor
and
divb
icebp
daa
inc
aad
repz
pop
push
imulb
xor
test
testb
push
movsb
cmp
ss
mov
shl
xorb
mov
or
divb
jmp
out
jbe
add
arpl
andb
cmp
xor
notb
dec
divb
pop
ss
jo
decb
add
push
adc
xor
pop
scas
jnp
and
inc
add
push
lock
cli
ja
sub
bound
adc
jle
cmc
mov
xor
out
test
icebp
pop
loop
add
adc
cld
push
fdivs
test
push
mul
lea
xor
xor
std
add
test
and
mov
push
mov
adc
add
adc
add
add
push
sbb
inc
xorl
sub
ss
mov
mov
insb
cld
into
jl
shlb
push
call
add
icebp
push
psadbw
mov
lock
imul
inc
jp
cmpsb
dec
testb
lock
cli
icebp
aad
cs
scas
testb
add
clc
cmc
push
cmp
add
cli
or
aad
jmp
std
mov
aas
push
repz
or
dec
divb
jo
dec
out
in
xor
cmc
scas
outsb
testb
movsb
sub
jge
push
lods
ds
ret
xchg
add
call
or
sbb
mov
testb
push
ss
mov
jne
lods
jns
je
add
es
lret
jl
out
shlb
aas
aam
sbb
out
sbb
not
pop
xchg
imulb
out
es
adc
bound
cli
jmp
outsb
negb
sbb
add
push
js
fs
sbb
insb
in
insl
xor
in
les
inc
imul
xor
xor
sub
negb
test
dec
out
cli
xor
and
shll
lock
ret
ss
je
mov
addl
lods
negb
repz
or
mov
jg
sbb
divb
in
cld
aam
push
out
lods
cmp
shll
pop
repz
xchg
pop
xchg
adc
add
sbbb
daa
or
push
dec
lret
lret
cmp
add
notl
fcomps
cmp
sub
cs
cmc
mov
subb
bnd
push
jmp
rclb
mov
sti
jg
call
push
in
cli
push
out
out
jbe
notb
imul
push
repnz
pop
dec
adc
sub
mov
sub
push
ljmp
inc
clc
cmc
jno
push
addb
ljmp
ljmp
or
mov
push
jmp
mov
aam
repz
sub
jb
push
js
mov
shlb
mov
push
bnd
or
movsb
hlt
mov
mov
sbb
ja
js
je
cwtl
ja
or
fdivs
and
hlt
adc
je
aaa
jae
push
call
mov
mov
xlat
test
testl
ss
push
call
mov
mov
or
xlat
adc
pushf
xor
ja
jne
xchg
repz
clc
add
pop
aad
cmc
mov
adc
xor
or
je
mov
aam
hlt
mov
adc
xor
push
xlat
adc
jl
jno
call
repz
ja
adc
xor
or
jb
add
mov
dec
push
lret
imul
into
cmp
or
lods
ljmp
cmc
jle
cmc
div
dec
push
in
shlb
push
add
add
push
jmp
push
pop
std
or
push
jmp
or
jno
cmc
or
adc
xor
rcrl
test
sub
adc
ja
hlt
and
sbb
clc
push
cmc
jp
outsb
sbbb
adc
adc
and
repnz
adc
dec
xor
sbb
repz
jbe
outsl
adc
xchg
sub
or
jb
cli
cmpsb
adc
movq
jp
mov
and
movsl
pop
xchg
push
out
testb
outsb
mov
in
sbb
sbb
or
mov
push
andl
xchg
push
jg
jg
cmpb
xchg
movsl
jge
stos
jnp
add
imul
jg
adc
sti
jmp
pop
jg
sti
adc
jg
clc
pshufw
add
outsl
sbb
push
decl
push
out
adc
adc
repnz
js
xchg
push
pop
and
and
or
pop
push
adc
adc
xchg
xchg
or
jns
adc
adc
pop
jbe
adc
mov
dec
and
outsl
or
xor
repnz
jo
push
cltd
or
scas
push
aaa
repnz
pop
adc
ss
adc
or
xor
std
xlat
repnz
sbb
xchg
aam
jmp
jmp
lret
sub
dec
push
or
rorl
stos
or
repnz
lods
cld
push
in
xchg
push
repnz
lcall
dec
xchg
into
xor
mov
in
mov
or
inc
dec
lea
outsl
mov
mov
add
fmulp
sub
mov
mov
xchg
cmc
add
bnd
iret
xor
jbe
mov
ret
lret
jmp
add
xor
cmp
inc
jbe
xchg
aam
test
insb
dec
adc
ljmp
insl
sahf
lods
shrb
mov
sarb
mov
mov
nop
sub
or
icebp
mov
push
outsb
or
shll
push
test
out
movntq
out
adc
movsl
ja
test
ret
push
xchg
adc
jo
add
jbe
jbe
mov
push
inc
incl
icebp
pop
repnz
lahf
scas
out
or
andb
clc
cli
jge
cwtl
repnz
push
mov
fstpt
push
into
push
mov
rcrb
data16
cwtl
cwtl
repnz
div
test
imulb
jbe
push
iret
lock
data16
jmp
je
hlt
ret
pop
and
mov
stc
cwtl
adcl
cmp
rolb
outsl
cmp
imul
cld
jp
ja
cwtl
sbbl
pushf
notl
jge
adc
je
shl
push
hlt
data16
icebp
std
sbb
cmp
ja
inc
cmp
inc
jbe
xlat
xchg
hlt
pusha
fdiv
xor
xchg
or
daa
dec
cmp
loope
add
hlt
adc
mov
jno
outsl
hlt
into
cmp
repnz
mov
jbe
repnz
hlt
jb
jns
xchg
lock
hlt
call
add
jb
repz
js
sub
lds
loop
in
sbb
dec
rcll
xchg
xchg
pop
cmp
xor
fcompl
xor
push
in
adc
mov
das
xor
insl
aaa
aas
test
inc
cli
into
jg
jmp
pxor
enter
add
hlt
adc
test
shl
ljmp
data16
and
push
pcmpeqb
xlat
adc
enter
xor
rolb
repnz
or
ret
cltd
cli
out
jbe
test
push
add
jbe
sti
xor
gs
cmpsb
lcall
xlat
xchg
out
push
jnp
int3
adc
jbe
adc
icebp
xchg
std
xchg
mov
inc
movsb
aad
into
jo
in
repnz
lds
cmc
inc
add
push
add
xchg
cli
jecxz
outsb
sub
add
scas
jo
lods
fmuls
mov
shr
outsl
jbe
lock
cmc
xchg
jg,pn
lea
in
or
sub
mov
inc
fstl
idivb
into
jmp
rcrb
adc
pop
bound
adc
cmp
scas
lret
insb
sub
sub
mov
push
and
add
cmp
or
jae
pop
cmp
xor
push
pop
repz
aad
dec
jns
arpl
lahf
adc
dec
dec
mov
je
repnz
out
in
js,pn
adc
add
call
add
mov
cmc
mov
and
adcl
jbe
push
sbb
pop
and
lock
push
dec
mov
insb
mov
shll
lahf
fnsave
lcall
div
cmp
stos
movsb
popw
cmp
aaa
xor
xchg
mov
cmp
mov
in
push
mov
xchg
sub
repnz
jbe
lret
lret
mov
jl
js
jbe
in
in
cmc
mov
inc
xorl
shrl
aad
jae
mov
lock
jmp
movsb
cmp
sub
push
fcomi
inc
adc
sub
mov
and
xchg
mov
pop
lock
insl
data16
adc
icebp
hlt
insb
mov
jne
repnz
adc
jmp
and
push
scas
push
xchg
in
xor
test
js
push
dec
mov
xorb
and
sbb
scas
push
leave
das
push
or
sbb
jb
jle
cwtl
jl
mov
into
in
jge
xchg
add
jp
add
daa
mov
inc
subb
cmp
add
adc
shl
cld
ljmp
cmpsb
stos
cld
or
sbb
in
adc
pushf
add
repnz
mov
insb
out
jl
addl
xor
lock
mov
and
std
es
cmpl
test
jae
and
adcb
cmp
and
aam
test
push
testl
aam
clc
js
movsl
cmovle
cmc
lods
mov
sahf
jb
inc
lret
je
je
add
jge
sbb
outsl
xor
cwtl
repnz
fstps
jae
adc
adc
mov
mov
repz
mov
scas
xor
add
cmp
repz
cmp
scas
push
cmc
outsl
jmp
fcompl
hlt
mov
jbe
fsubrs
shll
xchg
out
into
je
jae
add
notb
sub
jae
adcl
mov
pop
lahf
push
out
imul
rcl
mov
pop
into
mov
cltd
cli
in
hlt
pusha
orl
push
or
cwtl
repz
mov
jbe
fldcw
loop
enter
icebp
xchg
jmp
pmovmskb
lods
mov
push
jg
sub
add
dec
dec
push
out
jge
and
stos
inc
mov
cmp
xchg
adc
lods
and
inc
lret
pusha
push
test
clc
dec
rcrb
inc
mov
fisubrs
jo
test
cmp
sbb
cmp
xor
ss
stos
xor
jo
js
std
ja
add
stos
dec
push
push
aam
xor
inc
jmp
je
js
jne
mov
sbb
sub
insb
shlb
jp
and
cmc
call
push
ja
add
ljmp
fbld
dec
cs
jbe
icebp
sbb
scas
sub
stos
mov
clc
lcall
xchg
mov
stos
dec
inc
xchg
sbb
jne
mov
push
mov
stos
insl
push
insb
hlt
jp
dec
lods
dec
outsb
xor
imul
jp
dec
shlb
popa
jb
repnz
repz
or
repz
cmp
lret
cmp
inc
ja
mov
pop
dec
hlt
notl
aaa
mov
jbe
mov
jmp
push
adc
insb
cwtl
aaa
rep
mov
scas
nop
cmp
cld
clc
repz
dec
negb
jbe
cmpl
rcr
push
into
push
nop
clc
jb
xor
sub
nop
push
jbe
clc
lock
fstps
mov
or
sbb
dec
insb
jg
lock
add
adc
iret
subb
mov
and
pop
mov
div
and
adc
jne
cmc
xlat
repz
popf
outsl
push
pop
mov
lock
inc
out
adc
out
out
pop
adc
imul
adc
xchg
add
pop
fcoml
push
mov
jbe
shll
push
xor
js
pop
dec
aaa
hlt
push
jo
je
adc
sub
je
jbe
xlat
push
hlt
lock
push
repz
std
cld
cmpl
and
out
xor
sub
jae
jmp
repz
cmc
dec
loope
aam
insl
cmc
or
cmc
imul
cmpb
icebp
bound
cmp
imulb
imul
jp
adc
scas
jns
mov
nop
movsb
cmp
lock
notb
jno
jne
cld
dec
ss
lahf
inc
jne
imul
in
jnp
insb
test
and
cmc
add
data16
dec
movsl
mov
nop
cltd
jne
out
or
cmp
out
cld
js
mov
xor
outsl
data16
cmp
imul
enter
cmpsb
and
add
repz
inc
xchg
cs
loop
lock
jbe
jbe,pt
arpl
xchg
clc
jae
icebp
mov
div
mov
push
fldcw
jmp
divb
pop
or
gs
jbe
sbb
inc
notb
clc
ja
xchg
shll
nop
nop
xchg
jg
mov
div
rclb
aaa
jne
subl
imul
or
pop
xorb
hlt
mov
cmc
divl
ja
imul
jmp
mov
int
mov
aaa
lods
xchg
cmc
cmp
pop
push
cwtl
mov
jmp
pop
jl
stos
or
nop
rcl
mov
mov
push
test
mov
xchg
aad
rcrb
fildll
or
icebp
das
ja
add
mov
in
aas
or
in
jne
cmc
mov
xchg
cld
sub
scas
call
divl
adc
jo
clc
cmp
adc
or
xor
push
rep
add
stos
das
sub
adc
xchg
or
cmc
aad
pop
hlt
cld
jnp
div
mov
decl
adcb
mov
jbe
cmp
pushf
pop
xchg
icebp
jne
and
inc
cs
jne
pop
inc
mov
subb
cld
mov
xor
ds
xor
push
cwtl
je
xlat
mov
dec
ljmp
jbe
sub
cmc
scas
cmpb
repz
jo
je
jmp
and
stos
jmp
int3
int
out
xchg
add
mov
pop
dec
or
iret
imul
insb
xlat
mov
pop
xor
push
fistl
cmc
add
gs
cmpsb
les
or
cmpsl
outsb
test
xchg
je
insb
xor
dec
scas
push
cld
pop
addl
or
daa
imul
daa
repnz
jle
mov
sbb
dec
xchg
jne
cltd
add
or
iret
icebp
ret
xchg
outsl
mov
adc
sbb
daa
sub
ret
mov
push
ret
adc
clc
jg
cmp
push
dec
ds
outsb
pop
daa
insb
jo
push
daa
xor
mov
mull
imul
mov
fbld
or
push
cld
add
cmc
icebp
lcall
push
dec
in
cmc
xchg
jl
mov
movsl
jnp
jo
bound
stos
jg
idiv
out
testl
jg
xchg
aad
in
in
adc
adc
outsl
pop
jo
daa
in
jg
inc
ljmp
jmp
shrd
dec
and
push
cmp
push
adc
xchg
mov
js
adc
cmp
jne
repnz
and
xlat
xor
jbe
mov
pslld
adc
ljmp
add
jne
out
and
cmc
movsl
xor
aaa
xor
mov
jge
jmp
jno
imul
pushf
clc
je
pop
push
pop
dec
imul
jmp
push
movlps
rclb
jb
das
mov
jns
push
adc
xchg
jae
xchg
fdiv
add
iret
adc
enter
push
xchg
ljmp
cld
testb
icebp
xchg
inc
icebp
out
and
outsb
adcb
sbb
nop
outsb
add
jne
or
outsl
clc
lret
dec
jb
addr16
testl
cmc
xchg
pop
jne
adcl
ficoml
xorl
cwtl
xchg
pop
insb
add
es
or
repz
pop
jne
iret
into
and
lock
mov
xor
add
cmp
pop
inc
fnstenv
hlt
push
cmp
dec
mov
jae
pop
adc
push
push
mov
mov
shll
hlt
and
out
popa
push
in
mov
mov
or
clc
add
adc
and
mov
jmp
pop
outsl
hlt
add
insb
xchg
and
shr
test
add
xor
add
popa
cmp
cs
lret
out
push
pop
jmp
xor
add
ss
adc
mov
push
jmp
dec
mov
hlt
out
adc
pusha
dec
call
insb
enter
pop
pop
sub
mov
cmp
repz
dec
nop
loop
pop
enter
adc
mov
cmp
outsb
xchg
pop
jp
push
xchg
dec
in
jmp
xor
idiv
push
xchg
setae
ja
insb
push
in
repnz
xor
push
dec
mulb
mov
mov
sub
add
and
loopne
lcall
ja
inc
cli
jl
xor
xor
jns
push
in
xor
jl
lods
pop
out
xor
push
lcall
xor
xchg
in
je
push
xchg
mov
jb
test
lods
jbe,pn
jmp
add
inc
push
add
clc
dec
jle
and
dec
fprem1
mov
jmp
mov
xor
mov
xor
test
out
adc
xchg
sti
add
inc
inc
aas
testb
fidivrl
jb
mov
xchg
xchg
aam
in
jae
dec
xchg
mov
mov
mov
push
adc
sub
or
mov
test
pop
mov
pusha
je
ss
dec
dec
subb
jmp
cwtl
test
cmp
adc
cld
js
jb
sbb
js
das
sbb
mov
xor
mov
sub
clc
xor
adc
and
mov
mov
push
xorb
inc
jmp
push
mov
in
xchg
imul
repnz
pushl
ja
push
dec
je
popl
outsb
aaa
repnz
xchg
mov
in
pop
push
add
add
popa
xchg
adc
push
sub
jo
or
or
jp
notb
push
inc
pop
xor
je
mov
or
push
outsl
jo
adc
jbe
fwait
push
inc
push
adc
xor
repz
add
jno
jle
push
ja
mov
mov
xor
push
adc
dec
dec
or
dec
hlt
lock
push
adc
xlat
add
mov
lcall
imul
imul
imul
or
bnd
imull
clc
div
cs
adcb
jbe
mov
clc
mov
xor
push
test
out
mov
nop
sbb
imul
jp
js
out
xchg
es
add
sub
icebp
xlat
xor
incl
dec
mov
cmpsb
dec
test
pop
std
pushf
dec
pop
daa
rorb
mov
mov
sub
adc
imul
out
push
outsl
scas
dec
cmp
out
outsl
add
sbb
sub
xchg
dec
test
ss
jmp
imul
ss
or
mov
clc
test
scas
movsl
in
imul
dec
outsb
insl
lock
mov
jae
adcb
lock
in
test
adc
jge
std
ficomps
or
sbb
xor
cmc
aam
jmp
sahf
jmp
jmp
movsl
test
cmp
push
out
mov
jbe
jnp
je
enter
inc
movsb
mov
adc
ret
sbb
and
jbe
jae
pop
cmp
push
lahf
or
xor
int
in
in
test
push
push
int
mov
jb
divl
mov
stos
js
jg
mov
pop
mov
in
jae
mov
sarl
out
aad
aam
loope
loope
hlt
push
repz
fdivrl
push
in
add
outsl
addr16
div
insb
sub
or
push
je
imul
clc
mov
xchg
out
divb
jbe
add
xchg
sub
pop
jmp
ljmp
notb
lods
mov
insl
out
and
or
hlt
jmp
mov
jmp
jp
xchg
cmp
push
add
lock
negb
inc
cli
push
sar
lock
insl
or
js
adc
lods
and
adc
cs
fdivl
jbe
sahf
idivl
ja
out
movsb
and
mov
cmc
and
fistl
in
das
or
stc
outsb
ret
cmp
sub
sub
cwtl
idiv
push
cmpb
lahf
adc
hlt
sti
dec
jbe
pop
adc
jae
cmp
sarb
inc
je
ja
mov
pop
divb
sbb
jne
das
xor
in
xor
jno
jb
icebp
cmp
push
mov
es
sub
aad
outsl
sub
testl
cmc
mov
xorl
cs
mov
bound
jbe
xchg
lock
fwait
pop
sub
in
cmc
or
stos
pop
mov
adc
jl
je
push
pop
sub
xchg
in
jp
push
repz
in
xchg
inc
repz
cmp
xor
jg
int
insl
jmp
xor
ss
ljmp
adc
stc
jnp
mov
jl
xor
pop
jne
ljmp
cmp
es
js
scas
mov
mov
and
pcmpgtb
jnp
jbe
dec
popa
int
jmp
repz
xchg
addr16
call
add
outsl
add
mov
mov
push
pop
xacquire
xor
pop
cmpsb
xlat
or
testl
divl
push
repnz
mov
incb
sbb
mov
pop
jb
lock
pop
dec
imul
test
xor
ljmp
scas
imul
out
test
fdivrs
mov
pop
div
xorl
lahf
cmc
adc
stc
div
xor
jp
testb
dec
in
adc
ljmp
mov
dec
xchg
adc
stc
aam
imul
std
push
negl
int
mov
sub
jne
test
add
cmp
inc
aam
lock
insb
divl
mov
lret
jmp
mov
or
cmp
xor
push
xor
xor
pop
insb
outsl
xchg
adc
jbe
sbb
outsl
in
push
es
js
mov
lds
not
push
cmpsl
lock
jae
sub
inc
outsl
roll
cld
or
pushl
adc
test
filds
cwtl
jbe
pop
jp
sbb
sti
imul
daa
push
ds
incl
mov
js
std
cmp
in
jae
divb
add
jns
jno
test
ja
pop
scas
and
sub
cmp
je
in
jb
in
in
insb
mov
insb
adc
push
repz
lock
icebp
xor
shl
add
dec
sub
pop
jne
mov
or
mov
test
movsb
pop
xchg
popl
shrb
in
div
mov
push
lods
sti
in
jle
subl
std
les
sub
xchg
test
in
add
sub
ja
inc
addr16
xor
or
cli
cmc
repz
addb
mov
jb
xor
add
xchg
in
insb
jmp
test
popa
into
out
std
xchg
insl
hlt
adc
mov
sub
testb
clc
bound
dec
or
xchg
adc
or
js
dec
mov
enterw
jge
pop
xchg
in
xor
je
mov
je
xchg
icebp
lock
push
aam
pusha
mov
xchg
or
dec
repz
cli
xchg
add
xor
es
idivb
jp
out
pop
or
jmp
sbbb
push
lcall
testb
divb
out
icebp
adc
push
pop
scas
outsl
fldenv
jbe
test
jae
mov
cld
jo
subl
inc
cli
mov
add
repz
dec
dec
cmc
daa
xchg
cmp
cs
repz
adc
out
push
xchg
imul
or
jb
xor
inc
in
je
sub
stc
xchg
repz
lock
cmp
mov
lock
xor
jmp
andl
imul
loope
and
lret
mov
movsb
sbb
divb
aaa
repz
cmc
outsl
out
add
testb
xchg
jp
jbe
out
xor
cmc
jle
cs
daa
in
or
pushl
jbe
adc
data16
call
fwait
jbe,pn
cmc
mov
scas
imul
jbe
mov
jmp
js
insb
inc
scas
std
in
imul
xor
xor
out
fisttpll
mov
jb
xor
aaa
push
sub
push
jbe
xor
dec
adc
aas
mov
outsl
add
mov
daa
push
jo
insl
mov
adc
lock
jnp
push
adc
adc
jae
lods
adcl
scas
clc
xor
sub
scas
mov
mov
andb
imul
jno
cmc
add
inc
mov
ret
sub
hlt
mov
cmp
das
lock
fucomp
bound
adc
scas
push
add
or
in
adc
xchg
xchg
lret
loope
in
dec
out
xchg
mov
bound
push
cmpsl
mov
test
xchg
mov
jp
pop
push
repz
add
movsb
pop
ret
push
decb
dec
in
das
or
and
add
cld
scas
inc
jne
gs
jbe
xchg
or
xor
cmp
jo
outsb
add
int
mov
out
push
in
bound
xor
es
repz
cmp
test
in
insb
xor
jle
scas
hlt
jb
adc
sti
ja
repz
inc
cs
cli
xchg
sub
adc
lods
xorw
mov
repz
dec
mov
clc
pop
xor
push
test
dec
imulb
jbe
repz
orps
scas
hlt
subb
mov
lea
jne
jne
pop
jl
cltd
push
ret
jne
std
dec
dec
movsl
adc
mov
out
adc
ss
mov
jno
jmp
mov
lahf
add
or
popa
inc
repz
fidivl
jne
sub
add
je
test
into
pop
in
test
hlt
sub
xchg
out
jb
loopne
jecxz
aaa
icebp
jbe
and
out
adc
or
into
js
add
adc
mov
scas
mov
lock
mov
mov
call
nop
div
push
js
inc
xor
imul
iret
xchg
add
and
jl
cmp
push
adcl
xchg
enter
fidivs
push
repnz
std
icebp
xor
std
out
xchg
or
sub
test
mov
add
fs
sub
xchg
dec
out
test
inc
out
jne
mov
in
adc
vsqrtps
push
in
jbe
cmc
outsl
push
cs
xor
push
adc
lret
pop
sub
repz
inc
xor
sub
xchg
out
mov
push
jb
imul
jbe
xchg
push
adc
jno
loop
or
mov
hlt
sub
xor
mov
hlt
ljmp
xor
inc
insl
jne
jmp
dec
xor
xlat
xchg
add
xchg
cmc
outsl
sub
call
dec
dec
add
xchg
es
xor
mov
inc
es
aad
hlt
or
jmp
push
jp
repnz
repnz
lahf
push
xchg
mov
jbe
adc
jg
inc
sbb
dec
jg
icebp
adc
iret
push
jge
aaa
xor
imul
test
xchg
xchg
inc
adc
jmp
add
mov
mov
repnz
loop
jno
ret
mov
xchg
dec
std
in
pop
mov
hlt
xchg
xor
mov
push
mov
push
adc
and
aaa
xor
repz
in
jb
adc
and
adc
movsl
cli
daa
mov
inc
dec
jbe
jb
jg
xchg
mov
mov
hlt
cmpsl
je
cmpsb
sub
scas
sub
aaa
jmp
jb
mov
js
notb
repz
adc
test
fwait
jbe
hlt
jae
out
aam
push
sbb
stos
or
orb
xor
fsts
repnz
xor
mov
scas
cmp
inc
mov
mov
rcrb
js
jmp
inc
mov
hlt
hlt
repz
jmp
jle
xor
jnp
push
add
mov
xor
test
std
inc
pop
mov
cli
mov
jae
jne
jl
lret
loop
adc
lock
add
scas
jmp
push
jb
sbb
sbb
cmp
sub
jb
call
adc
add
adcl
push
ss
and
adc
andb
adc
es
test
outsl
div
mov
lea
mov
jb
ds
adc
xor
jb
pop
scas
bnd
add
out
je
je
sub
test
sub
mov
hlt
aam
data16
add
test
xchg
js
in
and
push
out
test
sbb
pop
daa
xor
por
imul
mov
xor
sahf
cmpb
mov
mov
pop
jp
mov
xor
jne
das
bound
sub
test
mov
xchg
sar
mov
mov
repnz
jae
xor
arpl
xchg
cmc
jno
add
jmp
dec
push
push
jbe
hlt
sti
push
xor
fnstsw
mov
ds
or
out
aam
xor
arpl
je
add
cmp
xchg
xchg
notb
dec
aaa
jg
jmp
xor
rol
push
mov
es
shll
imul
and
jb
and
insb
iret
repz
add
mov
insl
insl
insb
imul
cmc
adc
push
mov
insl
movsl
iret
imul
dec
addb
imul
cmc
shl
sub
or
sbb
xchg
testb
ljmp
mov
lock
je
jnp
push
outsl
push
andb
stos
out
push
lock
in
and
jne
pop
es
jne
ljmp
xchg
sub
repz
push
push
adcl
out
jno
movl
push
jo
nop
mov
add
repz
enter
or
lock
jo
adc
dec
push
sti
pop
lock
inc
jmp
jbe
push
xchg
lock
rclb
stos
cmp
jo
push
div
jl
jb
and
andl
mov
xchg
mov
mov
mov
xor
adc
adc
push
xor
repz
pop
inc
jne
cmc
cmp
sar
xlat
repz
test
mov
outsl
xchg
adc
dec
cmpsb
imul
add
cmp
sub
xchg
push
push
dec
ljmp
std
insb
jmp
clc
ja
jno
adc
mov
jbe
xchg
icebp
push
shlb
xorb
cld
dec
cli
add
ja
sbbb
insb
in
jbe
cld
jmp
add
and
and
stos
and
rcrl
cli
imul
in
insl
push
ja
cld
jb
push
subb
jmp
mov
push
jbe
jmp
xor
pop
push
pop
and
adc
shll
jae
xchg
test
mov
jbe
push
dec
push
inc
push
insl
xor
outsl
push
jns
cwtl
pusha
mov
out
negl
ss
test
outsb
push
hlt
jno
inc
cli
iret
add
xchg
cmc
insb
sbb
clc
jmp
addr16
idiv
shl
aaa
shrb
insb
test
mov
xchg
or
outsb
adc
subb
jb
cmp
loope
dec
mov
in
sub
imull
adc
adcb
jmp
inc
jae
repz
decl
sbb
xor
je
je
shrl
sub
ljmp
xor
ss
cmc
stos
subl
xor
ljmp
jp
idivb
adc
roll
daa
outsb
push
pop
js
mov
xchg
sti
mov
cmp
mov
dec
sub
shrl
mov
imul
jns
cli
xor
push
incb
mov
xchg
add
xor
xchg
sbb
sub
int
mov
outsl
jbe
hlt
sub
test
lock
lods
notl
mov
out
lock
dec
fwait
mov
insb
in
out
or
pop
jb
sahf
in
or
clc
jp
mov
outsb
in
adc
icebp
push
push
push
shrb
mov
addb
and
mov
sub
xor
rorb
repz
outsl
push
jne
mov
inc
sbb
into
popa
and
sti
cmp
out
jmp
test
jb
jne
or
jne
adc
jmp
hlt
bnd
and
jge
push
and
adc
sub
dec
dec
adc
push
adc
mov
jl
push
mov
div
divb
pusha
and
cmp
std
mov
pop
enter
cmp
mov
xor
xor
inc
push
cmp
add
dec
hlt
sbb
mov
mov
xchg
rcrl
cld
jbe
add
shr
sahf
dec
loope
jo
outsl
jmp
jmp
sbb
fcompl
jbe
pop
or
and
xorb
xor
les
xchg
insl
shll
xchg
je
jbe
lock
lods
aas
lock
ret
std
add
in
sub
mov
xor
or
push
add
add
jle
jmp
es
xchg
ja
rcll
repz
in
divb
jmp
pop
aas
add
add
push
ljmp
das
repz
xor
add
fildll
cmp
jb
mov
jecxz
jmp
lods
add
jle
add
repnz
insl
loop
jb
mov
in
aaa
xchg
mov
divb
popf
lret
movsl
jg
lahf
add
jle
and
or
aam
icebp
in
pusha
dec
cld
pop
ss
jmp
jb
dec
xchg
rorb
add
sbb
repz
adc
mov
divb
and
repz
in
xor
jne
repnz
pop
adc
leave
adc
adc
xor
cld
dec
xor
push
subl
movsl
xor
cmc
addr16
or
adc
dec
xor
jne
mov
inc
sub
cmpl
in
jbe
sub
js
stc
imul
test
jnp
and
std
cmc
imul
jne
jb
jb
outsl
pop
call
push
addl
push
push
xor
xchg
push
inc
in
jo
or
in
dec
ljmp
neg
adc
xchg
pop
pop
and
mov
cmpsl
pop
inc
in
mov
pop
xor
push
daa
imul
aam
adc
iret
add
cmp
and
out
clc
xor
adc
out
scas
inc
adc
push
nop
mov
hlt
int3
jmp
push
in
jo
push
cmc
add
pop
test
insl
nop
enter
xchg
cmc
hlt
adc
call
add
mov
lcall
ja
aaa
dec
or
or
test
jne
jb
inc
lcall
push
cwtl
fdiv
dec
inc
xor
in
inc
jbe
adc
andb
push
imul
dec
xorb
cmp
mov
fistps
cmc
mov
testb
sub
mov
movsl
lret
subb
xchg
jb
sbb
xor
loop
add
cld
dec
jmp
in
outsl
add
in
inc
mov
and
out
mov
xor
out
add
mov
sub
push
mull
dec
jne
mov
jl
cwtl
pop
sub
sub
imul
out
add
xor
push
cmc
push
jp
push
push
dec
adc
cs
push
xor
push
jb
testl
imul
xchg
or
mov
mov
sar
mov
jae
add
sti
mov
sti
dec
int3
addr16
xchg
ljmp
sbb
hlt
repnz
sub
repz
fstpl
repz
test
xchg
push
mov
push
sbb
stos
mov
dec
adc
xchg
add
adc
lock
cmc
add
mov
lret
jb
cwtl
jbe
push
adc
sub
mov
mov
decl
add
cld
repz
jmp
mov
nop
repnz
aam
jbe
and
mov
xor
and
jae
call
jns
fisubs
jle
test
add
mov
bound
dec
jg
jmp
mov
mov
or
adcb
rcr
cmp
jmp
sub
push
mov
push
push
je
div
jo
push
repz
mov
pop
pushl
repz
sbb
jmp
icebp
loopne,pt
push
ret
xchg
add
adc
add
jo
jnp
xlat
ja
daa
sbb
mov
mov
mov
push
add
in
out
jb
repz
add
sub
xchg
xchg
in
icebp
jbe
lock
mov
and
rorl
jo
shl
imul
jo
pop
cmp
mov
mov
cmc
mov
fstps
adc
repz
dec
out
mov
and
lret
in
rclb
scas
dec
outsb
outsl
mov
test
pop
testl
mov
in
test
xchg
rcl
mov
dec
jns
push
mov
sbbb
adc
test
stos
mov
inc
xchg
pop
jne
jns
sub
lret
loopne
adc
loopne
cwtl
push
sub
cmc
test
mov
xchg
jmp
arpl
push
hlt
sub
cmp
stos
aad
in
jo
mov
jle
adc
jmp
rcr
test
push
pop
xor
insb
sub
adc
mov
rorb
fbstp
bound
cli
dec
gs
push
test
adc
js
add
outsl
push
xor
or
ljmp
ss
test
sub
jle
das
xchg
out
call
adc
sub
sti
in
pop
adc
pushf
mov
repz
ficompl
insb
xor
cmpl
push
cmp
pop
jne
cmp
sub
mov
inc
sahf
sub
lret
xor
xor
xor
shr
push
dec
adc
push
add
insb
push
stos
cli
shl
cmp
pop
jae
push
xor
clc
insl
jmp
pusha
mov
pop
outsl
sub
out
test
xchg
pop
loope
cmc
cld
insb
popf
jl
lods
into
divb
or
adc
jne
rcrl
adc
repnz
adc
sub
pop
into
push
sub
bound
mov
hlt
jne
xchg
addb
cmpsb
push
testl
dec
xchg
lock
add
mov
xchg
mov
cmp
push
push
movsb
insb
movsb
or
test
xchg
mov
xchg
push
push
jne
sbb
xchg
jne
scas
inc
lock
pushl
or
xchg
xchg
jl
jecxz
out
xor
xor
inc
or
movd
cmpsb
dec
mov
or
add
cmp
or
mov
cmc
out
push
je
int3
ficomps
mov
xor
xchg
dec
mov
pop
xor
repz
push
lcall
cld
loope
in
mov
mov
iret
hlt
ss
test
cmpsl
mov
je
adc
daa
xor
add
or
dec
or
mov
inc
and
fldl
icebp
les
dec
lods
scas
je
jb
mov
testb
emms
jl
mov
aad
cmp
mov
xchg
clc
cli
push
xchg
inc
jmp
adc
jg
adc
push
imul
pop
push
pop
jp
cltd
stos
jl
mov
sbb
les
pop
lock
movsb
iret
daa
into
jno
jle
mov
sbb
popl
or
leave
out
sbb
jg
xchg
inc
or
xchg
es
xlat
push
jb
jle
testb
outsb
mov
inc
and
ljmp
inc
aas
les
mov
pop
add
mov
fnstcw
and
lret
in
and
and
dec
icebp
repz
loope
orl
jb
and
cld
in
or
out
add
insb
jbe
jb
add
mov
jbe
add
fs
nop
mov
je
testb
jmp
inc
sbb
jne
cmpb
aas
push
andb
std
push
es
das
subb
mov
inc
jae
popf
sub
xchg
loope
popa
or
jp
mov
test
ret
sbb
icebp
jg
sar
in
sub
aas
in
dec
dec
sub
dec
and
les
inc
movsl
mov
fsubrl
sbb
push
or
jb
inc
shl
push
lahf
or
in
outsb
jmp
and
or
stos
aas
ljmp
push
es
add
and
cli
lock
lcall
test
cmp
sti
dec
adc
dec
jp
subb
adc
int
les
inc
cmp
or
jbe
jns
push
dec
pop
insb
rclb
mov
xchg
sarl
mov
cmpl
jl,pn
movsl
mov
je
jnp
nop
movsb
jle
dec
das
dec
repnz
gs
jno
add
cmpsb
ss
out
jns
jnp
sub
shlb
cld
or
rorl
inc
add
rorl
xchg
popa
repnz
pop
push
rolb
inc
mov
test
arpl
sahf
shlb
xor
pop
nop
mov
nop
aas
push
xchg
push
adc
jle
je
and
mov
sar
adc
mov
sub
in
mov
xchg
push
add
sub
nop
stos
pop
jae
ds
push
roll
idivb
push
icebp
stos
adc
lret
mov
mov
adc
scas
xorl
cltd
jecxz
jb
xor
jp
jge
in
cs
inc
xor
or
mov
insb
out
or
rol
loopne
mov
js
jecxz
sbb
test
dec
mov
add
jo
xchg
cmc
mov
inc
jmp
add
aas
add
divb
cmovg
cmpsl
ss
loopne
mov
hlt
insb
scas
call
scas
nop
aaa
into
jo
mov
jne
mov
push
into
cmp
xor
adc
mov
xchg
xchg
repz
jb
in
xor
inc
lock
cs
je
pop
stos
mov
dec
hlt
rolb
cvtps2pi
add
xchg
mov
scas
push
mov
bound
fwait
xor
adc
cmp
push
mov
ss
adc
xor
or
sbb
pop
arpl
ss
mov
jge
or
jl
xchg
lret
inc
jae
lret
pop
or
inc
mov
jo
lock
pop
out
mov
seto
jo
hlt
lret
out
xor
mov
jae
cmp
call
mov
push
and
je
jmp
xchg
aad
and
cmpsl
popf
jb
adc
hlt
push
or
cld
lods
jle
cmp
push
inc
add
fdivs
inc
push
orb
xchg
iret
hlt
inc
jae
ss
xchg
dec
icebp
stos
jmp
cli
fwait
adcb
not
mov
xorb
sbb
mov
vshufps
inc
movsl
jae
pop
xor
jge
movsl
xchg
out
lret
inc
xor
cmp
xchg
sbb
sbb
jmp
mov
lret
mov
std
nop
aam
in
aas
sbb
cmp
rolb
sub
adc
out
pop
mov
loop
fsts
and
test
xchg
sub
push
out
ss
sbb
dec
es
out
imul
inc
jmp
jo
mov
and
insl
mov
andb
lret
inc
outsb
pushf
dec
add
pop
xlat
addl
imul
scas
xchg
ss
sub
mov
mov
ds
fldt
pop
jmp
xor
xor
into
xchg
xor
xchg
dec
test
pop
dec
div
in
lcall
dec
out
div
mov
fs
xchg
je
fiaddl
jne
insb
xchg
and
pushf
aam
push
lret
cmpb
mov
pushf
lret
test
xchg
push
ret
jo
xchg
outsb
aam
cli
pop
fnstsw
inc
sub
sub
dec
adc
or
mov
jbe
push
xlat
sub
ffreep
loop
jg
dec
jp
pushf
in
outsb
sti
sub
lea
daa
subl
push
inc
adc
dec
clc
sub
scas
repz
hlt
cmp
inc
dec
jp
pushf
shlb
cmpsl
sub
inc
and
mov
rorb
outsb
cltd
lahf
lahf
mov
push
ljmp
es
mov
cmp
inc
xor
cli
sub
add
pushf
mov
adc
cmc
lret
int3
mov
lret
dec
cmc
shr
mov
mov
lahf
xor
jns
outsl
xchg
aaa
jns
xchg
jo
ret
das
mov
and
and
mov
pop
prefetchw
test
pop
aas
sbb
nop
xor
das
lea
mov
xor
jecxz
cmp
push
pop
hlt
das
daa
ficomps
je
outsb
xor
inc
stc
aam
sub
or
jnp
pop
mov
sti
mov
adc
adc
aad
and
mov
or
pop
aas
orl
lret
dec
icebp
mov
aam
daa
mov
add
xor
scas
add
sbb
int
jnp
cmpsb
push
adc
inc
jge
enter
mov
push
stos
outsl
mov
jg
es
lods
xchg
out
cmp
inc
icebp
int3
add
fsubrs
lods
daa
dec
jnp
test
push
out
test
cltd
arpl
les
cmp
stos
lret
rcrl
pushf
jecxz
dec
sub
out
adc
dec
jne
movsb
sub
repz
lock
inc
mov
insl
mov
xchg
imul
cmp
xor
push
insl
jne
les
pop
push
shr
add
lock
call
mov
pop
clc
jae
xchg
testl
addb
jg
fcomps
jae
ja
orl
int3
pop
pop
into
and
shrl
in
pop
hlt
or
scas
ds
inc
jg
jp
popa
pop
jmp
cmpsb
adc
rcrl
lcall
insb
scas
ds
insl
or
fnstsw
lock
aam
fwait
jo
add
xchg
enter
inc
outsb
jp
push
mov
adc
dec
mov
testb
insb
imul
int3
mov
stc
testb
pop
aas
inc
sub
pop
hlt
sti
loope
mov
and
add
sahf
insl
and
xchg
mov
insl
les
and
leave
jae
hlt
decl
lods
adc
loop
sbb
xor
in
int
push
xchg
mov
jae
mov
scas
dec
pop
sub
int3
int
aas
das
or
movsb
jns
jnp
dec
movsb
andb
sub
xchg
das
cmpsb
xor
dec
roll
in
xchg
cmc
fisttpl
andl
ljmp
adc
nop
cmp
lds
rclb
push
mov
xlat
pop
push
ret
je
outsl
insl
mov
int
lods
rcll
lret
stos
adc
stos
cld
xchg
xor
outsb
and
mov
mov
in
in
pusha
pop
test
xchg
jo
mov
xchg
test
shll
jne
mov
dec
insb
clc
loopne
hlt
sbb
sti
sub
dec
mov
jle
push
into
daa
push
xor
and
arpl
add
push
aam
rcl
mov
addr16
or
pusha
sbb
cmc
lock
mov
mov
je
pop
xchg
mov
adc
out
sbb
mov
push
lods
mov
mov
or
scas
mov
aas
das
lcall
iret
outsl
cs
fiaddl
dec
mov
arpl
xchg
mov
loop
pop
enter
clc
nop
lret
out
fildll
mov
xor
push
mov
push
xor
or
sub
inc
jbe
cmpsb
outsl
add
ljmp
aad
pop
out
or
in
or
addr16
jo
shll
lret
xor
dec
inc
mov
decb
pop
test
nop
push
xchg
loope
or
inc
pop
bound
mov
push
cmp
daa
imul
test
mov
fidivrs
or
sub
push
mov
lods
testl
aam
inc
lds
dec
push
lods
mov
cmp
cs
and
scas
dec
data16
repnz
popa
xor
push
lods
stc
rcrb
xchg
xchg
xor
iret
mov
cmpsb
popl
out
rorb
mov
mov
pushf
aam
xor
jo
sub
aam
push
pop
pop
cmc
mov
add
fbstp
inc
cmc
dec
ds
and
jge
mov
sahf
lret
push
lods
sbb
push
push
imul
inc
inc
test
inc
xor
or
mov
push
jp
add
inc
jl
adc
repz
xchg
jbe
xchg
into
mov
xchg
stos
push
sub
ljmp
cli
xchg
lods
or
jno
or
shrl
dec
or
mov
mov
bound
pushf
mov
sbb
aaa
repz
jae
mov
stc
and
pop
das
mov
mov
jge
dec
pop
clc
inc
mov
lods
jb
nop
shrb
jnp
push
pop
iret
mov
mov
cmp
and
outsl
xor
test
pop
dec
les
mov
hlt
dec
mov
jge
cmpsb
nop
sahf
ss
inc
adcb
cmpsb
shll
pmulhw
out
test
push
out
sbb
jmp
adc
or
cmp
sarl
pop
mov
or
shll
mov
int3
hlt
outsb
addr16
cmp
das
push
mov
xlat
or
sbb
mov
and
leave
hlt
inc
sub
jo
dec
imul
fldenv
mov
xlat
aad
stos
pop
iret
loopne
or
xor
insb
mov
punpckhbw
dec
ds
sbb
std
xor
andb
jb
ret
xor
sub
jo
jge
pop
fs
dec
mov
inc
int3
cbtw
push
imul
sbb
daa
hlt
into
mov
repnz
ss
fsts
pop
movsb
push
mov
jbe
aaa
mov
dec
pop
dec
lods
add
and
lods
hlt
daa
dec
sub
inc
in
jo
push
xlat
cmpsl
scas
or
or
or
xchg
jo
and
setne
pop
das
and
out
inc
dec
cltd
xchg
mov
insb
test
fisttpl
push
je
push
mov
and
mov
and
das
cmp
lds
pop
add
push
lahf
aam
movsl
jecxz
aam
sbb
pop
sbb
fiadds
into
push
repz
jg
sub
inc
xchg
push
outsb
daa
into
xor
add
push
lret
jo
into
fbstp
mov
mov
or
sti
out
lock
lahf
xor
ljmp
xlat
sub
in
dec
sbb
xorb
add
ret
das
push
movsb
jae
xchg
insl
mov
dec
ret
sub
dec
les
pop
xor
push
in
bts
pop
aam
pop
mov
jb
xchg
inc
dec
or
fcompl
iret
addr16
mov
adc
inc
jmp
dec
lods
mov
jae
cmc
rcrl
rorb
pop
jae
push
les
cmp
mov
push
lods
jg
lds
or
adc
insb
inc
jmp
add
pop
cs
cs
or
addl
in
iret
push
xor
pusha
mov
mov
cmp
ss
bound
xchg
call
in
sarb
mov
in
mov
jo
jo
subl
dec
dec
and
imul
lret
mov
out
ds
mov
and
cs
xor
iret
out
fsubrl
lcall
xor
sub
xlat
or
out
ds
in
and
sub
pop
dec
adc
outsb
insb
mov
ret
sarb
mov
sbb
test
jb
inc
mov
dec
xor
push
mov
jnp
pop
and
jnp
jle
stos
movsl
push
int
inc
adc
gs
cs
iret
out
xchg
ljmp
nop
jl
faddp
lods
and
adc
jp,pn
orb
iret
sbb
cmp
das
dec
jnp
mov
cmp
sub
mov
push
jne
fs
sub
addl
inc
inc
lods
movsl
xchg
out
add
imul
xchg
adc
ss
fs
in
in
cmp
cli
ret
movsl
out
add
es
ud0
imul
out
push
jl
or
dec
sbb
cmp
js
es
hlt
xchg
push
in
int
cmp
loop
cmpl
in
pushf
sbb
je
push
xchg
inc
dec
mov
pop
adcl
adc
dec
test
pop
or
xlat
dec
dec
jae
lret
jno
or
shrb
or
out
pop
movsb
mov
mov
popa
lret
nop
insb
bound
and
lret
lea
and
jge
div
cmc
mov
and
out
push
xor
jg
clc
sbb
cmp
out
add
pop
gs
stos
out
sti
test
pop
dec
test
mov
jbe
leave
inc
test
iret
pop
push
popa
mov
push
movsl
clc
inc
clc
in
push
lock
arpl
jbe
xchg
sbb
push
jmp
mov
mov
mov
pop
imul
mov
jp
je
and
lcall
stos
mov
xor
outsl
scas
ds
data16
pop
sbb
mov
jbe
jno
cld
add
sub
jl
test
sub
call
sbb
push
das
push
mov
cmp
stos
jbe
inc
xchg
pop
repz
and
rorl
repnz
xor
and
xorb
in
jl
jae
push
xchg
jl
pop
push
sbb
aas
push
aam
cmp
stos
mov
mov
mov
push
movsb
jecxz
adc
mov
pop
bnd
ja
arpl
hlt
mov
cmpsb
fdivrs
fwait
mov
mov
sub
xchg
loop
xchg
fwait
or
adc
sbb
stos
pop
dec
stos
jno
in
sub
popf
nop
les
cmp
xchg
testb
or
push
or
lods
pop
cmp
cmpsl
dec
adc
lret
mov
jmp
and
inc
lds
dec
roll
pop
loop
jne
testb
repnz
ss
cmp
bound
push
movsb
jbe
push
dec
inc
mov
cmc
test
nop
aam
cmc
xor
ss
aam
mov
ja
clc
not
dec
clc
adc
mov
sub
jns
xor
jbe
jmp
movsl
sbb
add
scas
mov
sbb
xchg
mov
or
pushf
and
mov
ret
in
scas
inc
push
dec
mov
sub
jbe
cmpsb
ss
pop
aam
mov
andl
cmp
inc
inc
jmp
mov
adc
ja
pop
xchg
sub
adc
les
hlt
int
mov
outsl
sub
cmpl
sub
imul
insl
test
or
test
jb
insb
jp
adc
cmp
mov
sbbl
jnp
mov
lea
pop
jmp
dec
vmptrld
out
roll
push
movl
imul
in
sbb
jb
lsl
stos
clc
fstl
jecxz
xchg
and
sbb
scas
mov
jbe
mov
sbb
cmpsb
cmpb
fcompl
cli
mov
cli
outsb
pushf
xor
daa
mov
pushf
mov
cmpsb
fiaddl
jg,pt
mov
push
aaa
test
sti
add
pushf
pusha
je
jecxz
outsb
and
pminsw
pop
or
lret
xor
ds
jmp
dec
repz
insb
insl
push
sbb
dec
test
pop
add
add
mov
sub
mov
inc
mov
cmpb
cmp
dec
pop
cmp
lret
push
add
cmp
dec
inc
dec
fidivs
push
pop
push
and
bound
inc
add
jl
lret
or
and
and
sbb
mov
add
int3
imul
push
fs
hlt
insb
adc
cmp
imul
outsb
mov
inc
mov
mov
dec
sub
jno
insb
cmp
xor
repnz
xchg
iret
mov
mov
mov
lret
xchg
push
mov
inc
insb
test
or
jae
cli
mov
xor
jl
inc
mov
bound
sub
sub
arpl
pushf
push
scas
lret
jae
mov
push
fstps
out
pop
lds
mov
repnz
push
cs
clc
jne
sub
nop
repnz
mov
push
mov
in
cld
adc
mov
nop
js
push
pop
mov
imul
inc
add
sahf
xor
inc
sub
das
jb
jge
cmpsb
cwtl
pop
in
jns
jbe
bound
xor
sbb
stos
mov
out
xchg
dec
in
es
mov
repnz
mov
sub
adc
push
jne
push
loop
fwait
decl
imul
mov
data16
lods
and
inc
or
sub
xchg
inc
adc
jge
icebp
test
or
dec
jo
fldenv
push
repnz
imul
jp
adc
mov
mov
push
popf
lods
jae
sbb
movsb
jns
and
dec
add
jge
test
mov
into
mov
mov
mov
rcrb
imull
pop
cmp
inc
shlb
pop
mov
or
push
dec
testl
inc
andl
cs
jl
fbld
jo
shll
in
roll
dec
push
add
or
mov
add
pop
xorb
nop
addr16
pop
int
sub
dec
dec
mov
insl
sub
lock
sub
movsb
jns
pop
xor
jae
lea
dec
add
test
imul
shl
movb
in
mov
in
or
push
hlt
aaa
fcompl
daa
xor
xor
mov
movsl
xorb
das
sbb
outsb
shrl
rorb
outsl
mov
pop
mov
adc
addl
bnd
addl
hlt
pop
xchg
sbb
repnz
sbbl
lods
jns
mov
mov
inc
cmp
out
xchg
dec
jmp
mov
push
cld
jb
bound
leave
mov
stos
adc
inc
or
in
push
mov
add
scas
add
sub
inc
fwait
sub
fsubr
inc
dec
pop
adc
cmp
lret
sbb
test
movsb
fwait
or
cs
in
dec
and
xchg
call
out
lods
fstpl
mov
push
out
and
mov
in
inc
std
jl
pop
and
cmpsb
cs
cltd
les
and
dec
mov
and
test
outsl
pop
mov
inc
xchg
out
xor
inc
popa
mov
out
outsl
lds
and
inc
add
jle
jns
sbb
mov
outsl
xchg
inc
dec
adc
or
loop
scas
cmpsb
push
inc
scas
jne
rcll
scas
and
dec
test
pop
nop
shlb
cld
dec
inc
mov
add
dec
push
test
push
mov
dec
sahf
jb
and
rcl
cmp
dec
inc
xchg
ds
jnp
fwait
mov
clc
push
out
je
hlt
sub
int3
lods
xor
loop
enter
xor
mov
xor
mov
mov
xchg
and
andb
mull
xchg
pop
imul
add
push
inc
cmp
daa
and
inc
repnz
xchg
or
sub
scas
je
hlt
test
mov
test
out
jge
loop
adc
popf
sub
xchg
outsb
mov
stos
push
dec
inc
jb
add
stos
lds
rorl
pop
sbb
mov
out
out
pop
jge
lea
mov
cs
in
add
cmp
test
in
jb
xchg
out
xchg
outsb
mov
mov
inc
insb
mov
mov
xchg
mov
sbb
repnz
push
ds
pushf
arpl
aam
scas
mul
or
cli
movsb
xchg
movsb
pop
mov
into
sbb
lret
roll
sbb
iret
inc
call
faddl
adcb
insl
test
push
mov
pop
dec
test
scas
mov
test
mov
jne
nop
xor
jnp
loop
sahf
ficoms
arpl
sbb
movsl
stos
mov
data16
fs
cltd
lods
sbb
stc
outsl
ret
sbb
or
into
sub
jp
shrl
jp
sub
xchg
sub
dec
adc
pop
es
repz
mov
pop
movsl
fsubr
sub
stos
pop
jmp
mulb
jo
dec
sub
cmp
xchg
or
dec
data16
pop
lods
outsl
cli
jo
adc
aad
je
sub
lahf
mov
dec
movsl
fldenv
and
out
das
pop
iret
pop
or
clc
sub
roll
add
in
popa
inc
into
push
push
ja
dec
dec
popf
cld
bnd
cmpsl
xchg
add
add
adcb
imul
xor
push
xchg
fistps
scas
lcall
loope
insb
cmpsl
sub
xchg
xchg
jmp
mov
and
ss
test
outsb
das
push
out
movsb
rcll
adc
xchg
andb
int3
shll
repz
sub
mov
mov
mov
mov
jp
mov
or
jg
cmp
adcl
mov
subl
sbb
imul
scas
and
dec
cmp
sub
jo
adc
daa
imul
push
sub
push
cld
rcll
and
aaa
jp
loope
mov
outsl
dec
add
pop
rorl
mov
icebp
out
js
in
inc
jbe
push
cmc
dec
mov
adcl
xchg
push
icebp
jecxz
cmp
outsw
pop
ljmp
adc
push
sub
out
daa
imul
movsb
sti
mov
fisubs
push
out
mov
in
into
fidivs
fidivs
movsl
nop
outsb
pop
jle
ds
subb
jae
cmp
push
pop
lea
jg
mov
xchg
jae
sbb
sub
jl
lock
leave
test
cmp
dec
inc
jle
in
movsb
inc
mov
stos
and
cmp
jb
lock
dec
push
xor
andb
out
aaa
jecxz
dec
scas
das
insb
out
xchg
lahf
fxch
addr16
repnz
mov
pop
mov
push
stos
adc
cld
lock
pop
adc
xor
shl
jl
iret
lock
add
xor
jle
aas
push
sbb
mov
icebp
pop
in
xchg
repnz
cmpsb
inc
mov
mov
cmp
jns
test
dec
aam
pop
sbb
pop
mov
cld
cmp
cmpb
dec
mov
or
jae
jp
subb
cmpl
int
add
or
ud1
int
movsb
es
movsb
lods
mov
xchg
out
arpl
inc
aas
inc
ss
shr
and
iret
xor
jne
jnp
out
rcrl
pop
lods
insb
aaa
loope
jp
push
lods
or
jle
nop
scas
xchg
add
lods
mov
xor
xlat
push
mov
pop
nop
and
adc
sbb
jge
rclb
repz
mov
mov
pop
popf
mov
xor
movb
arpl
and
subb
adc
fdivrp
or
cltd
rcll
popl
cmp
jns
imul
mov
jne
dec
mov
fucom
scas
mov
daa
or
pop
daa
mov
jp
dec
mov
mov
push
rcrl
aad
dec
xchg
jnp
inc
sub
in
sub
jae
or
push
mov
outsl
aam
flds
cmp
in
sbb
mov
lcall
insl
mov
pop
pop
inc
insl
icebp
sbb
and
loope
gs
aam
repz
add
leave
shr
stos
and
test
jne
lret
imul
lea
sahf
xchg
push
mov
inc
lds
dec
xchg
in
cmp
fmull
lea
subb
repnz
sub
xchg
setp
ret
jecxz
insl
aam
fdivl
cmp
clc
cmp
lahf
or
inc
loopne
scas
mov
cmpsl
fsts
add
cltd
cmpsb
push
inc
lock
shrb
sub
push
stos
fsubrl
sub
sbb
mov
pop
jns
jnp
mov
pop
xchg
outsb
add
push
mov
std
hlt
in
sti
scas
outsb
lods
dec
rclb
and
mov
xchg
nop
inc
jno
sbb
mov
adc
nopl
inc
cmc
lods
lds
mov
fisubs
cmp
mov
neg
ret
xor
lea
push
aam
leave
imul
pop
push
mov
jg
mov
in
cmpsb
push
pop
psrlq
jb
inc
test
fdivs
jae
jmp
loop
call
add
push
insb
div
sub
idiv
icebp
pushf
clc
push
pop
loopne
clc
lds
xchg
adc
clc
repz
xor
lock
divb
idivl
out
clc
mov
xor
adc
xchg
shr
push
adc
imulb
add
testl
movb
loopne
or
push
jl
push
js
xchg
clc
push
idivb
idiv
enter
and
inc
sbbb
loopne
inc
in
xor
adc
outsl
idiv
mov
push
repnz
imul
ret
add
or
push
insb
add
cmp
cmp
jmp
xchg
stc
add
cld
imulb
adc
add
add
jmp
xchg
add
or
imull
cld
and
cli
outsl
imull
push
push
clc
cmp
add
jmp
push
icebp
jbe
testl
lock
sti
aaa
inc
in
imull
jmp
repnz
jne
dec
or
push
add
add
testb
push
cli
push
push
add
add
es
cmp
std
and
not
and
mov
push
mov
imulb
and
dec
hlt
notl
xorb
jl
sub
and
aaa
add
xor
div
je
xchg
jmp
or
push
or
pushf
push
xor
sbb
jnp
rolb
push
pushf
xchg
testl
lock
adc
push
pop
sbb
adc
jne
pop
jbe
testl
and
js
push
xorb
lock
repnz
xchg
in
adc
repnz
testb
pushf
jmp
pop
xchg
and
dec
add
push
ja
inc
add
int3
cld
add
sbb
inc
dec
std
notb
sti
testl
loopne
incb
div
subb
imulb
repnz
out
jmp
cmc
push
push
jbe
repnz
pushf
clc
xor
jmp
ljmp
xchg
out
addb
sbb
or
sbb
adc
outsl
lock
mov
adc
mull
mov
cli
rep
and
stc
ljmp
and
mov
pop
out
mov
in
and
ljmp
or
or
addb
sahf
and
add
push
in
xor
add
add
cmp
adc
jne
ljmp
hlt
push
int3
js
movsl
stc
cmp
imul
xchg
xchg
notb
sbb
xor
repnz
sbb
dec
fwait
repz
in
es
aas
sbb
mov
adc
cwtl
cmp
or
hlt
push
pop
icebp
add
mov
adc
add
add
notl
adc
outsl
lock
sar
push
jg
or
mov
or
clc
aam
push
notb
hlt
testl
xchg
div
repnz
push
or
in
jl
sub
and
enter
push
xchg
adc
sbb
loope
mov
jmp
repz
lret
adc
pop
jb
repnz
inc
jb
ja
sahf
mov
sub
fs
gs
orl
repz
icebp
ja
popf
mov
aaa
or
je
cmp
cmpsb
or
sbb
xor
push
repnz
cmc
outsb
mov
and
cmpsb
or
lock
add
add
fistl
ja
xchg
divb
js
lock
push
xor
imul
jbe
jns
lahf
xchg
xchg
xchg
xchg
out
push
rcrl
imul
add
std
pop
jne
data16
adc
jbe
add
add
lock
push
add
jbe
jbe
outsb
xchg
ljmp
jno
test
and
es
xchg
xor
cs
jg
inc
push
cld
mov
add
or
repz
adc
add
jo
xor
lods
ljmp
xchg
orl
sbb
cwtl
jno
icebp
ljmp
adc
pop
clc
mov
fisttpll
and
jo
imul
xor
push
jp
test
mov
jg
jns
out
push
mov
and
ss
jb
fadds
testl
cmpsl
loope
insb
daa
jbe
adc
gs
icebp
adc
xor
add
cmp
jo
je
pop
jns,pn
daa
repz
xor
mov
fldl
lock
lret
push
xor
push
in
add
je
lock
jo
xorl
mov
fldl
add
fcomps
lock
adc
sub
sub
xor
push
sti
add
aaa
mov
je
jo
push
repnz
enter
inc
jo
cmc
call
pop
jp
lods
pop
jno
lods
adc
int
outsb
mov
int
mov
push
xor
push
ljmp
je
lock
cmpsl
es
xor
push
add
sub
or
pop
push
xor
jo
mov
je
lock
es
xor
jo
mov
xlat
divl
ljmp
jo
std
daa
jp
ja
dec
cmc
pop
bnd
lock
es
and
out
in
xor
cmpsb
mov
sti
pop
push
negb
movsb
mov
cmc
roll
add
std
xchg
jp
repz
out
es
daa
cli
iret
cli
jae
ljmp
je
cmc
or
test
add
imul
jns
test
jnp
js
mov
call
clc
jo
cmc
call
jne,pn
add
fs
cwtl
add
xor
js
clc
repz
jno,pn
add
adc
lods
cmc
ljmp
mov
or
sub
sub
push
je
push
add
cli
cmp
es
mov
jle
call
daa
insl
dec
jo
test
mov
adc
ljmp
lds
clc
pop
xor
add
pop
jnp
dec
out
add
jbe
adc
dec
jle
mov
push
test
test
adc
hlt
insb
test
js
decb
enter
hlt
inc
enter
repnz
aas
adc
or
repnz
mov
adc
hlt
or
lock
and
daa
ss
hlt
fdivp
xor
pop
lock
insl
pop
jo
xchg
add
iret
jnp
push
sti
daa
add
adc
xchg
jo
sub
clc
xchg
addb
hlt
pop
cmpsl
aad
repnz
cs
hlt
pop
out
js
pushl
in
hlt
jl
cld
cwtl
movsb
jle
cwtl
dec
pop
dec
jge
insl
call
sbb
jmp
jp,pn
add
insb
cmp
cs
or
inc
push
jo
call
imul
jo
cmp
test
mov
test
lea
jmp
imul
lock
or
clc
cmpsl
es
push
add
adc
es
inc
sbb
es
jl
xor
mov
and
je
jno
enter
lahf
inc
nop
and
mov
lahf
es
add
std
mov
pop
adc
mulb
add
and
mov
xor
sbb
add
insb
lea
jl
fs
imull
test
div
test
mov
xor
push
pop
dec
add
push
hlt
push
ss
push
lea
jge
push
insb
push
imul
test
sti
or
ja
cmpsl
es
push
jbe
call
pop
jp
xor
je
xchg
insb
mov
cmp
mov
mov
mov
je
jno
enter
inc
jo
call
sbb
cmpb
push
subb
test
orb
ja
cmpsl
es
daa
sti
xlat
adc
es
push
mov
div
xor
push
test
or
aad
daa
add
mov
adc
jo
call
pop
jp
xor
ja
xor
adc
nop
push
je,pt
jno
enter
add
dec
pop
clc
add
dec
dec
adc
cld
inc
push
push
pop
shll
pop
jbe
xchg
lock
xor
jo
xor
je
lock
aad
cmc
jo
xor
mov
ss
mov
fs
hlt
pop
out
lock
pop
xor
das
jg
xchg
mull
repz
and
jmp
pop
jl
andb
xor
outsb
ja
je
pop
outsl
es
jns
cmc
mov
add
pop
or
es
cld
lods
xor
cmp
push
repz
cli
popa
pop
jle
lock
jmp
jb
divl
int3
in
pop
or
push
add
imul
mov
int3
cmpsb
ljmp
call
ljmp
out
or
hlt
das
out
clc
push
not
cmp
stc
jo
xor
jl
add
add
call
icebp
rolb
out
imul
call
sub
stos
push
hlt
sbb
ss
add
xchg
movsb
cmc
fsubr
lods
or
jg,pn
cmp
add
pop
jge
cli
jmp
or
and
dec
in
imul
jb
push
jbe
pop
jno
jg
outsb
jns
and
jb
es
stc
or
add
add
test
jno
lock
jno,pn
adc
sti
pop
enter
rclb
jbe
clc
adc
and
pop
lea
add
adc
cmp
and
jo
rorb
bnd
push
movsl
test
pop
jbe
in
adc
jno
sti
lcall
mov
jb
pop
fadds
lds
jbe
adc
ret
ljmp
cmpsb
mov
ljmp
sti
aaa
ja
daa
xchg
adc
outsb
push
jp
cmpsb
pop
jno
icebp
addb
loop
xchg
ljmp
aas
pop
jno
mov
add
lock
jae
ja
add
jge
cmc
xor
outsl
xchg
mov
into
xchg
jno
out
ljmp
xchg
add
mov
mov
push
outsb
push
xchg
jno
add
adc
insb
out
xor
adc
jno
jbe
cmpsb
adc
add
or
jno
cmp
sti
pop
push
inc
in
adc
add
adc
add
sub
ss
insb
adc
std
sti
sbb
in
ljmp
mov
pop
jbe
test
insl
ljmp
push
mov
call
aas
jmp
pop
mov
movsb
outsb
cmp
mov
push
xchg
dec
jno
ljmp
mulb
les
les
lock
testb
mov
lret
jno
ljmp
adc
shl
adc
lret
repz
mov
lret
jno
ljmp
ljmp
aad
jbe
xchg
add
ljmp
scas
push
jno
cli
mov
cmpsb
xchg
jno
pop
ljmp
jp
jbe
jg
ljmp
lret
jno
pop
js
sti
aad
inc
push
or
jnp
scas
jno
cmc
mov
test
roll
jae
jns
clc
push
push
adc
adc
cmpsb
cmc
jno
sarb
xor
test
enter
jecxz
inc
arpl
insb
repz
ljmp
lret
jno
insb
inc
je
out
inc
addl
xchg
enter
ret
jbe
cmpsb
push
in
ljmp
outsb
push
mov
ljmp
sub
hlt
adcb
in
aam
sti
inc
add
jae
testb
call
icebp
jbe
aas
push
xchg
andl
xor
xchg
adc
add
jo
push
mov
or
add
push
and
repz
jbe
sub
inc
add
jae
in
jbe
sti
add
pop
mov
test
jne
js
jbe
xchg
jno
sti
cmpsb
jae
mov
jno
jle
ljmp
test
roll
adc
ljmp
ljmp
adc
ja
icebp
push
imul
into
adc
std
ljmp
xchg
test
push
xor
je
imul
add
cld
ja
mov
jb
adc
pop
xchg
add
loope
xor
sub
inc
idiv
and
xchg
insl
jno
and
jb
jno
notb
insb
jp
rclb
jno
aaa
jbe
xchg
xchg
xchg
ljmp
mov
lock
insb
jns
repnz
jno
push
js
cltd
cmc
push
leave
sbb
or
jl
sub
adc
jne
shlb
push
push
es
cmp
mov
rcrb
xlat
jo
sub
les
notl
xor
int
rcll
les
ss
push
es
xchg
jl
jo
cmp
div
pop
rolb
adc
cmp
adc
rolb
push
incl
push
xor
jl
or
aaa
mov
jl
mov
sub
mov
imul
jnp
cmc
mov
push
outsb
or
add
ficoml
out
insb
sbbb
daa
jae
std
push
test
jge
jne
scas
xchg
jle
movsl
adc
mov
sub
jns
repnz
pop
adcb
xor
jo
add
pop
idivb
std
jg
cmpl
pop
jmp
jl
jb
clc
jmp
xorl
je
jo
test
jg
jns
jbe
pop
imul
insl
js
in
movsl
imul
repz
add
jl
test
repz
das
cmp
pusha
jb
lcall
jne
or
js
cmp
jbe
sbb
push
jbe
jecxz
imul
jecxz
push
aam
scas
pshufw
insl
cltd
lock
pop
outsl
dec
ja
or
insb
add
push
xor
ja
mov
and
cld
mov
and
dec
js
jmp
nop
push
rolb
xor
inc
or
cmc
js
lock
jae,pt
outsb
aas
adc
jae
enter
shrb
bound
insb
mov
imul
test
mov
mov
mov
test
clc
mov
clc
sbb
js
xchg
or
ljmp
dec
repnz
inc
pop
pop
mov
mov
jo
test
jmpw
dec
movsb
jo
sub
aaa
mov
hlt
pop
adc
es
push
cmpl
jno
push
test
jae
jbe
adc
lock
roll
mov
jnp
jl
or
cld
jno
pop
nop
jbe
add
ja
mov
xor
push
incb
cld
cld
je
jo
loopne
cwtl
xchg
jae
jb
jg
xchg
jae
xchg
jns
mov
jle
pop
add
imul
pop
movsb
xor
jo
inc
daa
and
loopne
mov
test
clts
push
es
ss
lods
jb
lock
jo
andl
ss
adc
out
lock
std
div
aad
jae
mov
movsb
incb
jns
insl
orl
add
repz
imul
jo
cmp
jo
not
mov
loop
cli
jmp
in
in
imul
aad
jecxz
outsb
jmp
jmp
in
decb
aad
dec
pop
jle
imul
sub
hlt
add
js
cmp
fsubp
add
lock
jmp
aas
add
cmpsb
icebp
test
pop
cwtl
test
repz
sbb
dec
mov
pop
js
enter
mov
sti
into
fdivs
repnz
push
fdivs
aas
push
add
js
imul
jo
pop
popa
push
adc
repz
imul
out
xchg
ja
jge
sarb
cmc
je
pop
mov
sbb
jo
xchg
mov
jb
cmc
inc
lret
sub
icebp
jns
outsb
in
subl
mov
mov
std
pop
jg
test
add
add
jle
packuswb
or
sub
jo
cmc
xorb
mov
xchg
js
loop
or
aam
mov
mov
sub
orl
lret
test
jno
sarl
cmc
jge
pop
mov
ljmp
jmp
or
daa
test
mov
idivb
mov
xlat
jno
mov
test
out
mov
jno
add
in
adcb
or
in
jno
jecxz
xchg
mov
inc
sti
push
adc
mov
and
sti
mov
ljmp
int3
or
inc
shrb
inc
pop
imul
or
cwtl
ljmp
sub
xlat
enter
out
pusha
add
sub
ljmp
bound
ljmp
rolb
or
ljmp
sub
push
enter
rclb
or
test
in
aas
ss
cmpsl
ljmp
ja
daa
test
aam
jnp
into
add
adc
insb
jmp
jbe
jno
lahf
addl
ja
test
jno
adc
std
xchg
aaa
loopne
add
icebp
ljmp
xor
add
incl
xor
mov
sti
adc
stos
add
divb
out
divl
nop
cwtl
mov
test
pop
movb
and
sbb
cmc
test
outsb
push
in
xchg
cmpb
adc
jb
shrb
jmp
jl
stos
add
jle
stc
xchg
or
rolb
mov
bound
pop
add
insb
pop
je
jge
divb
pop
daa
jg
pop
clc
js
jo
jmp
jb
sub
xorl
insl
pop
imul
test
jl
pop
inc
mov
xor
mov
hlt
dec
jg
jge
lahf
xchg
xchg
lahf
loop
jge
mov
mov
test
aaa
add
dec
iret
cmc
les
divb
ss
je
iret
xchg
outsb
mov
incl
call
jno
push
lock
cmc
test
or
ja
sbb
sub
xchg
pop
pop
repnz
xor
jle,pn
andb
bnd
jp
cmp
lea
inc
in
xor
push
and
das
imul
push
cmp
jl
cmp
in
push
mov
mov
pop
pop
jne
cmp
jl
ljmp
pop
jne
aad
jae
mov
test
push
jno
mov
add
movsb
or
sub
ljmp
add
add
insb
ja
xor
clc
adc
daa
jnp
ljmp
push
imul
ljmp
add
or
jo
popa
mov
xchg
fwait
sbb
jo
scas
pop
jno
jmp
outsb
inc
std
xchg
mov
jbe
sbb
cmp
mov
test
jno
sti
cmp
xor
daa
fldt
stos
call
cmp
xor
xor
jae
das
sti
inc
push
movsb
fs
mov
das
and
in
jne
adc
push
jno
xorb
movb
sbb
aaa
ret
cmpsb
pushf
test
cmp
dec
cmpsb
test
push
cmpb
imul
divl
test
imul
pop
xchg
test
pop
ret
sti
in
mov
addl
push
cmpb
jno
jp
add
jecxz
add
sbb
test
cmpsb
pushf
test
lcall
ljmp
call
into
roll
cmc
xchg
cmp
jle
inc
std
je
xchg
test
pop
das
cwtl
pop
test
cmc
insb
aas
lock
popf
pushl
aaa
inc
test
cmpsb
ret
adc
add
jno
xor
test
jae
enter
fimull
fidivl
test
addl
lods
cli
adc
add
repnz
push
xchg
repz
push
insb
rcll
je
repz
sbb
or
xor
jae
insl
cs
ja
jmp
add
test
addb
insb
cmp
in
sbb
push
cmp
lea
mov
dec
aam
jbe
hlt
mov
adcl
jo
adc
jg
test
hlt
adc
xor
adc
jno
or
push
xorb
jno
jae
cmpsb
mov
fs
icebp
shll
mov
xchg
addl
sbb
clc
adcb
adc
addb
add
cmpl
idivl
mov
dec
out
aaa
lea
shll
clc
dec
cmp
adc
lods
add
scas
jnp
pushl
cmc
or
and
xor
jl
adc
mulb
cwtl
js
jno
arpl
ret
lret
js
js
cmpb
cwtl
or
jmp
mov
filds
ds
jp
jno
aaa
out
jge
mov
insl
jl
js
jl
or
push
imul
push
cli
pop
pop
jmp
lods
in
sub
or
sub
repnz
push
test
jae
push
insl
add
jl
sub
into
mov
cmc
jae
insb
jo
mov
and
filds
mov
mov
js
or
jl
lock
imul
push
add
repnz
push
rolb
jnp
es
pop
add
jecxz
je
enter
or
repz
jbe
xor
int
imul
mov
mov
add
add
insl
negb
jb
cmp
cltd
into
out
cmc
jbe
in
mov
dec
ss
cmpsl
cmp
flds
andb
into
out
dec
mov
ja
mov
repz
xorb
sbb
mov
in
cmp
into
jb
push
imul
add
test
cmc
add
fldl
pop
inc
je
pop
push
cmp
mov
hlt
adc
mov
insb
push
sub
ja
push
repz
repz
sbb
sarb
adc
sbb
cmp
imul
jl
xor
mov
jle
repnz
pop
sub
add
xorl
test
mov
pop
pop
jb
mov
add
adc
xchg
test
pop
divb
imul
mov
xorl
mov
jl
sar
jno
push
addr16
xchg
imul
adcb
xor
repz
cmp
xor
jle
sarb
ljmp
and
ret
xor
sahf
lods
scas
sahf
lock
mov
ljmp
jno
dec
add
xchg
adc
repz
faddp
imul
add
repnz
aas
jae
into
shl
or
cltd
subb
clc
test
or
xlat
jno
and
jnp
enter
cmp
cmpsb
mov
mov
xchg
pop
nop
sti
lock
call
cmpsb
mov
pop
mov
jge
add
loopne
in
jno
inc
scas
cmpsb
mov
pop
mov
popf
lods
add
loopne
in
jno
cmpsb
mov
pop
mov
mov
loopne
in
jno
sbb
lock
xor
push
imul
icebp
sub
jno
outsb
std
ret
xor
daa
std
lods
jns
dec
std
inc
repnz
add
fwait
xlat
jno
add
jecxz
sbb
jns
sbb
inc
repnz
add
fwait
xlat
jno
add
jecxz
cmp
jns
cmp
inc
repnz
add
fwait
xlat
jno
sbb
xchg
lock
jecxz
jns
pop
push
repnz
xchg
lock
pop
das
sbb
add
pop
push
jg
jne
jbe
cmp
out
aam
fcomi
in
jno
in
imul
es
js
ljmp
jae
aaa
ljmp
mov
adc
es
mov
sti
mov
push
jne
sub
add
ja
faddl
jnp
fcompl
call
adc
jno
and
sub
incl
jno
cld
sbb
add
cs
repnz
sarb
mov
jae
jbe
pop
cmp
call
lods
cmp
pushf
fwait
outsb
push
xor
or
mov
mov
add
mov
add
push
js
loop
sbb
mov
sar
jbe
aam
inc
sbb
cltd
sub
hlt
je
js
scas
cld
imul
leave
in
insl
int3
in
pop
test
push
divl
xchg
out
jns
rolb
cmc
js
jo
out
cmpsb
shl
clc
cmpsb
shrb
cmpsb
shrb
jno
fdiv
sbb
jnp
mov
add
jb
shr
int
hlt
xor
add
out
clc
out
int
push
shrb
jbe
mov
inc
test
jo
data16
and
pop
int
dec
hlt
push
js
cmpsb
jbe
cmp
fildl
jb
pop
pop
jns
jbe
insl
shll
xchg
jl
hlt
jecxz
std
notl
jl
clc
mov
add
xchg
jl
hlt
fdiv
fidivrs
xchg
mov
testl
cmp
fdiv
in
jno
inc
in
sbb
sbb
adc
push
bnd
jno
jbe
add
hlt
xchg
test
push
jno
and
in
aas
cli
cmp
sbb
cmp
in
pushf
testl
cmpb
scas
in
mov
xchg
mull
cmp
imull
pop
shrb
jmp
xchg
je
iret
mov
lret
decl
test
cld
fdivrl
js
stos
inc
imul
cmp
cmp
in
cli
pop
daa
decl
aam
jge
sub
jle
stos
in
repnz
insb
push
jge
inc
xchg
jl
hlt
push
cmc
subl
push
fwait
loope
push
jno
jbe
add
in
dec
sti
jl
jno
mov
pop
mov
in
jbe
in
add
hlt
sbb
mov
stos
mov
fldt
xchg
mov
outsl
and
cmp
jno
out
outsl
out
ljmp
sti
xchg
sub
jbe
cmp
lret
and
cmp
ljmp
aad
jne
pop
bswap
movsl
decl
and
in
dec
outsl
sbb
movsl
jmp
cmp
mov
and
xchg
xacquire
ja
clc
adc
mov
jno
pop
pushl
shlb
fistl
dec
inc
jp
mov
incl
fcmovnbe
call
cmp
or
push
mov
aas
in
in
jae
outsb
push
push
pop
xchg
inc
push
div
jbe
fcompl
movsl
out
je
xchg
push
jno
dec
mov
jp
in
add
dec
cmp
cld
jns
rep
stc
ds
lcall
repz
js,pt
mul
test
add
in
js
push
stc
dec
push
jecxz
jl
out
ds
jno
test
ds
inc
test
jecxz
add
xchg
adcl
js
fucompp
das
cld
out
cltd
xor
subl
clc
pop
stc
or
add
icebp
sbb
scas
insb
mul
jae
outsl
enter
adc
inc
in
sbb
push
test
xchg
jecxz
jge
cli
xchg
inc
das
pop
jno
sbb
and
into
out
or
or
popf
pop
cwtl
inc
jbe
cwtl
ja
inc
lea
ja
jns
jl
xor
push
ret
jno
add
fildl
outsb
shrd
sbb
xchg
repz
es
cli
dec
or
pop
inc
into
shrb
mov
xchg
adc
xlat
jno
and
ljmp
pop
or
cmp
xor
test
and
inc
hlt
push
lea
xor
jb
sti
in
mov
sub
decb
imul
mov
andb
or
cmc
mov
pop
loopne
sbb
cmp
movsb
insl
sbb
mov
movsl
out
mov
push
sbb
jmp
cmp
imul
js
push
or
sti
cmp
push
repnz
hlt
xchg
cwtl
stos
sti
imul
mov
and
push
pop
incb
gs
clc
mov
pop
icebp
adc
add
mov
pop
cmp
xchg
divb
aaa
jecxz
es
clc
xor
cmc
xor
ja
rcll
je
jno
call
or
mov
pop
insb
imul
inc
mul
add
jl
shll
push
jo
cmc
cltd
movsl
repnz
hlt
dec
cmc
mov
adc
hlt
jecxz
sbb
adc
ret
sbb
mov
adc
cmc
loop
jbe
arpl
arpl
mov
pop
pop
jo
add
jg
std
je
jo
push
pop
xrelease
sbb
dec
dec
sti
adc
into
cmpsb
testb
push
or
jbe
test
push
fwait
stc
fwait
xlat
jno
mov
pop
adc
in
jbe
ljmp
and
sbb
mov
xor
jno
jbe
or
xchg
stc
mov
and
mov
add
hlt
push
mov
stc
pushl
push
ss
stc
inc
xor
add
nop
jne
xor
push
mov
pop
inc
das
jle
mov
push
dec
xor
out
mov
jno
inc
sti
pop
mov
push
icebp
jno
mov
sbb
mov
jno
rcll
aad
andl
add
dec
stc
push
jno
rorl
outsb
lods
cmc
push
scas
std
jno
jbe
add
cmp
jp
adcb
or
jbe
leave
stc
adc
notb
jno
jbe
fmull
repnz
stc
pushl
leave
pushf
jb
inc
stc
add
mov
jp
scas
mov
cli
stc
fwait
xlat
jno
rcll
push
push
cmp
cmpb
stc
fwait
xlat
jno
je
ror
push
stos
mov
ja
in
dec
lock
stos
call
int
stc
and
orb
repnz
stos
call
imul
decl
or
mov
stc
and
cmp
lock
stc
aam
ja
ja
call
mov
movsl
out
dec
pop
hlt
mov
stos
jb
stos
outsb
sbb
sbb
xchg
dec
or
jne
lock
shr
lods
fisttps
ds
cmc
fnsave
js
push
adc
fsubp
add
movsb
in
sbb
cmp
xor
mov
adc
cli
push
or
jno
pusha
jg
or
js
push
ljmp
jae
insb
and
pop
das
sbb
add
mov
jno
ljmp
jno
movsb
sbb
outsb
outsb
das
or
push
or
jae
insb
in
jno
mov
andb
mov
daa
jb
jae
in
cmpsb
aaa
jno
cli
fsubrl
add
dec
xor
push
out
data16
fwait
adc
mov
mov
mov
mov
addr16
jnp
jnp
out
decb
addr16
jbe
xchg
insb
xorb
or
xchg
jae
insb
cmp
add
mov
xorl
repnz
sbb
sbb
jno
mov
or
je
mov
insb
push
dec
imul
iret
shll
mov
push
add
aaa
jbe
andl
iret
jb
jno
loop
add
pushf
jb
stos
inc
push
cmc
xchg
jno
mov
xchg
xorb
jno
cmc
jae
testb
or
jl
or
movsb
outsb
in
sbb
insl
jecxz
cli
test
jns
in
sti
adc
js
repz
jp
mov
js
inc
sub
cli
inc
js
sarb
mov
js
notl
sbbl
jp
pop
repz
lahf
je
push
cmp
out
push
test
hlt
out
lock
rcll
in
push
pop
stos
loope
imul
push
lods
int
cmp
sbb
cmp
mov
dec
stos
imul
dec
pop
imul
sbb
outsb
fiadds
fwait
test
mov
mov
jg
dec
sub
fwait
push
jnp
cltd
dec
mov
dec
lret
insb
mov
cmc
sbb
insb
mov
jne
cld
xor
xchg
jl
add
mov
xor
cs
hlt
pop
push
jge
or
subb
mov
imul
pop
cli
cmp
js
cmp
mov
push
call
repz
divl
repz
cmc
subl
adc
hlt
or
insb
xor
lock
hlt
push
push
sub
adc
hlt
push
jb
aas
insb
jg
adc
hlt
loope
sub
adc
mov
adc
xor
insb
addb
jp
jbe
cmp
je
lock
cld
xchg
adc
xor
xor
jl
jo
shl
push
call
hlt
or
xchg
xchg
jae
hlt
xchg
es
add
js
add
jmp
jl
jns
test
jge
js
outsb
mov
mov
rcl
or
rorl
cmpb
out
cmp
aam
add
or
mov
outsl
pop
dec
in
rcll
test
pop
and
insl
subb
pop
mov
in
test
popf
repnz
xchg
mov
hlt
and
xor
sbb
push
fdivs
lea
xchg
test
push
js
icebp
jno
adc
mov
xor
xor
push
lock
cmp
js
adc
test
cmp
jge
mov
mov
jbe
mov
jp
fiaddl
out
js
stos
add
jo
test
aad
aam
add
mov
ljmp
test
outsl
xorb
movl
push
mov
imul
or
mov
cmp
fwait
push
jbe
cmp
add
pop
mov
mov
shl
scas
adc
jbe
adc
incb
dec
aaa
aas
test
test
jmp
out
or
lock
mov
hlt
insb
add
test
imul
insb
jecxz
imul
cmpb
in
arpl
femms
jmp
sub
in
mov
insb
or
out
mov
add
lds
xchg
test
cmp
test
es
incb
or
repz
test
cmp
out
neg
sbb
fdivrp
test
rcll
dec
xchg
cmp
adcb
addl
push
jno
jnp
int
test
ficompl
jmp
hlt
mov
outsl
pop
inc
jno
jo
sbb
lock
lods
cli
jns
mov
push
aam
dec
inc
or
aam
add
mov
xor
pop
adcl
jbe
cld
js
or
std
aas
sti
hlt
jno
cli
out
inc
xor
adc
push
clc
cwtl
nop
push
pop
repnz
sub
mov
xor
xor
jno
or
xchg
sub
out
lods
ss
jo
inc
test
out
push
jmp
sub
jmp
xchg
mov
ja
icebp
inc
mov
nop
jle
add
je
push
sub
ret
jbe
outsl
movsl
jnp
scas
jae
roll
insb
rcll
xchg
push
outsb
push
jno
cs
repz
repz
dec
or
cwtl
adc
ja
movsl
pop
xor
test
cld
mov
push
jb
test
push
xchg
test
or
jno
inc
adc
adc
cmpsb
push
jno
aam
or
mov
enter
cmp
adc
push
adc
insb
jp
xchg
loop
fs
repnz
rolb
ja
imul
lret
jno
ljmp
xor
jo
clc
rclb
adc
xor
loop
fs
jno
daa
rorb
xchg
aas
mov
ja
push
jno
jne
sbb
das
add
ret
jbe
addr16
xlat
in
sbb
outsb
pop
xchg
push
cs
outsl
lods
jns
loope
not
js
icebp
repnz
aaa
call
subl
xor
fdivrs
ja
inc
lock
mov
repz
loop
mov
js,pn
fldl
pop
imul
call
movsl
cltd
cwtl
test
and
adc
outsb
or
loopne
add
sbb
lds
xor
jo
outsl
jo
andb
jno
ljmp
xchg
pop
in
mov
cwtl
test
sub
xor
repnz
lret
or
cmp
add
sbb
out
jne
inc
ljmp
or
cmp
add
fmuls
xor
not
ljmp
outsl
jb
jno
imul
jns
insl
mov
addl
jns
insl
sub
xchg
cltd
mov
mov
jns
dec
xchg
cmp
jp
dec
xchg
ljmp
dec
daa
insl
sub
or
mov
call
rorl
push
mov
enter
sub
or
jl
jb
sbb
mov
dec
pop
jo
jb
outsb
jecxz
ja
in
jbe
add
data16
fidivs
rolb
lods
repnz
mov
jae
enter
imull
fldl
push
inc
jo
push
mov
ss
lock
fiadds
push
inc
outsl
adc
sbb
fidivl
negb
in
inc
push
loope
je
jl
jne
xor
lock
or
jne
or
sbb
aas
jmp
stos
jge
js
adc
xorb
into
xor
dec
in
cmpsl
clc
js
es
push
xor
cmc
out
cwtl
lods
imul
pop
sub
aad
dec
push
jno
cmp
test
fisttps
lods
in
add
mov
sarl
push
fmuls
mov
sub
shlb
mov
or
xor
call
ja
mov
rolb
insb
xor
inc
mov
mov
jae
dec
add
adc
push
lock
jo
inc
add
lods
xor
test
jmp
mov
pop
notl
loop
je
xor
in
xchg
pop
push
mov
sub
xor
out
or
and
push
jno
test
je
or
push
jle
sbb
notl
fistl
push
jno
roll
sub
inc
sub
inc
jno
jbe
faddl
in
jno
in
je
mov
out
imul
xchg
push
pop
or
jge
aad
imull
imul
test
or
mov
bnd
ret
xor
scas
cli
jno
mov
push
jle
pop
or
je
aam
xchg
stos
add
sti
sub
jno
in
mov
lret
xchg
mov
mov
je
jno
xchg
pushl
dec
xchg
jns
mov
sbb
cmp
in
lcall
xchg
push
jae
jno
or
dec
pop
or
cwtl
out
jbe
jno
out
dec
bound
mov
jmp
jno
sub
pop
lock
sti
mov
jno
ljmp
adc
xor
jnp
sbb
ljmp
sti
add
test
push
sti
dec
jno
push
addr16
sbb
xor
lcall
test
dec
in
jno
ljmp
cmpsb
sti
jne
xor
stos
cli
andb
hlt
mov
stos
call
lcall
imul
or
cmp
repnz
sbb
leave
mov
shr
pushf
in
dec
push
or
jp
nop
or
jb
or
sub
imul
mov
lods
or
sub
jp
sbb
lret
add
or
lods
out
pop
ljmp
xor
rorb
pop
jo
mov
into
in
out
or
stc
push
imul
jbe
cwtl
aaa
cli
sti
or
mov
mov
push
or
mov
jae
dec
or
inc
lea
cld
jno
mov
in
xchg
dec
leave
movsl
in
and
sbb
test
in
cmp
repz
push
jb
jno
and
xchg
adc
xchg
jmp
xor
mov
dec
arpl
or
xchg
arpl
repz
jno
or
sub
inc
cmpsl
xchg
jl
jno
data16
pop
std
mov
inc
repz
jno
lods
in
lods
add
js
xchg
mov
sbb
push
int
cltd
sarb
xchg
mov
and
shlb
jl
jle
js
jns
hlt
push
sub
adc
call
dec
jns
js
es
xchg
cltd
hlt
imulb
testb
push
test
add
pop
dec
in
subl
push
ljmp
out
test
lock
repz
sub
add
jl
cmc
les
jle
test
push
sub
aad
or
mull
cmp
adc
out
fptan
add
outsb
xchg
add
ljmp
pop
imul
xchg
cli
sub
and
inc
sub
adc
ljmp
out
in
inc
clc
cmpsb
scas
add
in
inc
mov
push
std
cmp
loopne
test
arpl
icebp
hlt
inc
add
pop
adc
dec
hlt
adc
in
jae
aas
xchg
test
inc
aas
mov
or
add
add
psubq
jp
inc
add
mov
jns
out
test
cmp
jne
or
imul
xchg
std
cmp
movsl
imul
adc
mov
jae
jb
outsl
xlat
adc
sbb
cld
mov
inc
cmp
sti
jno
and
jns
or
or
push
cmpsl
sub
inc
in
add
add
andb
jae
in
sbb
iret
jle
pop
xchg
inc
pop
in
es
repnz
roll
pop
cli
test
lods
and
mov
add
out
addb
hlt
aas
cmpsb
add
hlt
pop
jnp
add
out
movsb
out
xchg
add
xlat
adc
ljmp
mov
andl
jbe
out
cwtl
xchg
xchg
fildll
jno
in
test
filds
jno
mov
add
faddl
jno
in
cwtl
cmp
jae
mov
imul
or
xor
inc
jnp
loop
ljmp
sbb
push
jno
sbb
cmp
test
jmp
sti
out
jne
xor
pop
xchg
arpl
jge
jno
inc
cmp
mov
bound
jno
movsl
shr
mov
cmpsb
lods
jge
aad
push
ljmp
push
xchg
xchg
lds
mov
adc
arpl
outsl
out
test
icebp
xchg
outsb
outsl
imul
std
outsb
sbb
test
std
ret
jbe
cwtl
jmp
xchg
js
outsl
in
jno
mov
xchg
jbe
orb
adc
inc
sbb
in
add
repz
jge
adc
mov
das
jne
xchg
mov
inc
or
cwtl
cmp
test
push
jno
popa
ss
sub
lock
push
xchg
jno
std
push
das
jecxz
jge
or
fs
push
repz
adc
jno
lods
repz
or
jecxz
jge
test
xchg
test
cmp
test
clc
pop
outsb
bound
inc
movsb
dec
insb
clc
test
push
jne
adc
cmpsb
xchg
jno
or
jmp
adc
push
mov
xor
jno
frstor
jmp
pop
ret
cli
add
mov
jbe
in
std
addb
test
pop
mov
dec
in
imul
add
sub
std
inc
ljmp
loop
mov
xchg
and
jnp
jbe
sti
cwtl
scas
inc
dec
jns
test
xchg
dec
jno
and
xor
push
lock
or
jbe
adc
xor
int
jmp
iret
ljmp
rolb
mov
jp
fsubp
add
pop
xchg
jbe
or
mov
or
in
xchg
stos
imul
pop
in
pop
mov
jno
dec
pop
add
jecxz
jp
xor
test
mov
jp
jno
stos
xchg
into
loope
mov
loop
cmc
repnz
xor
inc
lret
jp
jno
inc
mov
sub
jl
ret
repnz
sub
sub
jecxz
addr16
jbe
idivb
mov
xchg
dec
jno
hlt
mov
xor
cmp
scas
std
xor
xlat
jno
std
cmp
or
or
stos
pop
cmc
and
xor
mov
jno
fs
pop
imul
or
outsl
cmc
ja
lock
aas
push
jle
sbb
or
xorl
pop
std
scas
arpl
push
int
add
rol
jbe
int3
push
inc
jp
and
bound
testb
out
xchg
jl
negl
push
or
cli
js
andb
jbe
pop
add
jb
js
les
cmp
adc
repz
rorl
jmp
cmp
push
repz
mov
cli
add
enter
cmp
aaa
mov
ljmp
cmc
add
push
in
mov
cmc
push
hlt
push
test
hlt
sbb
mov
mov
jae
nop
enter
out
inc
add
or
inc
scas
jno
in
ljmp
insb
and
scas
ljmp
or
jno
ljmp
sysenter
inc
fcmovbe
push
inc
pop
pop
inc
movzbl
push
lock
jb
xor
add
dec
xor
or
xor
ja
mov
outsl
push
sub
push
xor
sarb
cmpl
aas
outsl
jno
cmpsl
ljmp
ja
daa
jns
push
mov
iret
push
adc
cmpsb
scas
jno
xor
insl
sbb
cs
mov
jbe
adc
push
or
scas
out
jno
out
dec
outsb
jo
jae
inc
or
js
xchg
es
inc
dec
mov
in
jae
outsb
insb
pop
das
in
jno
cmp
mov
xor
imul
dec
loop
xchg
ljmp
scas
rcll
or
mov
push
xchg
into
jno
or
into
mov
ljmp
out
aas
imul
jbe
mov
xor
jno
ljmp
jecxz
repnz
icebp
loope
jo
jle
test
dec
jo
mov
incb
mov
cmc
idivl
loope
xchg
add
xchg
sub
mov
mov
cmc
jl
or
repnz
mov
lods
xchg
cmp
test
adc
js
cli
clc
out
test
jecxz
jl
ret
xchg
leave
dec
add
xor
jp
cmc
xor
pop
jecxz
add
mov
mov
pop
sbbl
inc
addb
add
out
xchg
and
filds
xchg
push
adc
repz
adc
jl
stos
pop
mov
leave
or
xor
push
sub
imul
outsl
in
pop
ljmp
cmc
jae
jo
test
std
push
jne
cmp
je
lock
ja
push
lock
jo
jns
repnz
sub
xor
outsl
adc
daa
jge
xchg
shrb
loop
loop
sbb
push
add
fisubs
and
xchg
dec
add
jno
movsl
imul
push
xchg
jbe
add
add
js
testl
popa
add
add
dec
mov
cmp
cmp
xchg
pop
mov
xor
fsubrs
insb
rcl
shrl
mov
or
lret
add
add
cmpsl
sbb
cmpsb
aaa
not
and
repz
xchg
sub
rep
sub
dec
inc
in
adc
jecxz
jp
xor
lret
fiadds
jp
xlat
mov
ja
call
icebp
negl
push
or
stos
lods
jno
sti
or
loop
pusha
mov
scas
or
sub
rep
loop
lcall
xorl
jno
outsl
jecxz
or
je
pop
push
inc
jns
cmp
and
add
push
sti
or
push
pop
pop
daa
ss
les
insl
pop
lods
std
mov
push
or
fisttpll
ljmp
sub
or
scas
out
jns
ljmp
pop
insb
mov
lods
mov
sti
jno
in
xchg
jnp
xor
fwait
xchg
lcall
jmp
loopnew
add
ret
arpl
mov
add
push
sbb
fisttpll
add
add
jns
rolb
lret
es
mov
xchg
jp
sahf
nop
pop
inc
mov
dec
hlt
int
mov
jno
sbb
lock
xchg
push
icebp
or
rep
mov
imul
mov
pop
das
cmp
add
mov
xchg
mov
data16
sub
inc
jg
imul
out
ljmp
mov
testl
addr16
add
lods
imull
stos
cmp
jl
hlt
stos
cmp
add
jecxz
repz
fists
std
imul
or
and
lcall
js
pushl
incl
jno
cmpsb
cmp
or
push
data16
and
jns
jno
das
out
into
pop
orl
clc
mov
dec
addl
cli
jle
out
cld
outsb
movd
add
sub
jno
cmpsb
mov
xchg
mov
ljmp
aad
adc
xor
in
jns
pop
sbb
outsb
sub
push
jbe
xorb
insb
repnz
hlt
ja
andl
xchg
outsb
xor
test
cmp
insb
push
jne
ficomps
out
sub
jbe
mov
jle
push
pop
ret
sbb
or
jne
jmp
movsl
imul
shlb
aad
hlt
push
andb
cwtl
insl
mov
jbe
cmp
jmp
movsl
imul
jno
sub
dec
in
pop
jg
push
test
jg
or
jbe
jno
inc
push
jbe
cmp
jbe
cmp
jbe
xor
hlt
fstp
out
movsb
push
jbe
aad
je
cmp
push
je
cmpsb
cmpl
cld
jbe
xlat
jno
inc
addr16
mov
dec
inc
cmp
cmp
inc
je
or
jle
pop
stos
jle
notb
divl
adc
sti
jno
rcr
mov
xchg
js
fwait
in
cmp
jg
les
add
xchg
pop
in
add
js
pop
insb
pop
mov
popf
popa
mov
ret
xor
jo
andb
ss
in
lock
std
xor
scas
out
inc
xor
pushl
lock
imul
outsb
dec
adc
cmp
mov
jo
xor
pop
or
dec
out
pop
fcomi
ja
sbb
push
adc
call
popf
cmpsb
icebp
repz
sti
dec
fdivr
jl
rcll
ljmp
jl
clc
je
mov
repnz
jl
outsb
outsb
mov
out
or
mov
das
test
insl
pop
cli
pushf
and
cmp
jno
add
jecxz
std
push
jnp
add
cli
mov
in
cmp
jecxz
ja
ss
jb
sbb
jmp
cmpsb
xchg
in
and
pop
das
cwtl
inc
in
inc
cmp
jb
pop
hlt
fldenv
test
outsb
daa
pop
push
jb
pop
xor
jmp
in
pushl
imul
inc
in
inc
jl
jno
jno
jl
cli
and
push
in
push
jno
subb
dec
pushf
mov
rcrl
in
jno
cmpsb
sbb
lods
int
mov
rcr
cmpsb
jmp
jno
inc
in
mov
or
cmp
add
loop
addl
test
outsb
add
call
inc
add
cmp
push
jne
jne
jle
cs
int3
jmp
jno
inc
jne
imull
pop
shl
cmp
shrl
cmpl
loope
outsb
pop
add
add
vmread
in
jp
add
sub
rclb
inc
and
add
or
fcoms
jnp
clc
sbb
and
imul
cld
mov
clc
rorl
decb
shl
mull
add
rcrb
shrb
sti
mov
mov
pop
clc
arpl
jo
arpl
cli
mov
scas
hlt
mov
pushl
repnz
xor
ds
loop
pop
movl
cwtl
xor
mov
inc
mov
add
mov
dec
jns
jecxz
jecxz
pushf
lods
or
hlt
mov
cmp
clc
sub
in
add
mov
sbb
mov
test
call
xor
daa
push
leave
nop
lock
or
jp
add
mov
nop
sti
adc
ss
mov
ja
xchg
add
jno
and
fxch
std
cld
jno
push
sbb
lods
outsl
sbb
mov
jp
dec
jnp
clc
sarl
dec
js
roll
in
js
pop
push
mov
mov
sub
xor
push
jle
stos
into
int3
subl
stos
subl
aas
pop
pop
cmc
mov
repnz
jo
imul
xor
or
and
imul
rcr
insl
xorb
repz
add
sub
ljmp
jno
sbb
repz
adc
test
xchg
or
jns
jno
nop
repz
or
outsl
repz
jl
jno
ss
jle
push
cmpsb
jge
cmpb
fcoms
jle
xlat
jno
cmc
movsb
xchg
repz
js
mov
inc
mov
imul
icebp
xor
cli
jmp
stos
jb
xchg
jmp
xchg
jno
std
daa
outsb
mov
mov
enter
inc
adc
xorb
mov
std
aas
jg
stos
cld
fcoms
mov
inc
ljmp
shl
divb
in
jo
push
sbb
jmp
adcb
jne
mov
push
xchg
out
sbb
add
shll
imul
test
or
or
cmp
jno
fsubp
test
nop
inc
jge
lea
test
cli
pushf
in
pop
in
aam
jns
scas
or
push
in
subb
in
and
adc
jno
in
jge
dec
mov
jge
imul
ljmp
mov
lock
xor
in
jge
adc
jb
dec
hlt
jecxz
mov
bnd
add
sti
insb
pop
add
pop
leave
lcall
out
ds
push
jno
inc
outsl
sub
mov
push
outsl
push
jno
fisubrl
aaa
adc
subl
stos
repz
cmp
push
xor
push
jae
jno
jbe
jmp
outsb
dec
and
jp
add
jno
jmp
testl
push
adc
pop
push
xchg
jne
in
clc
lea
sbb
std
mov
and
jbe
popl
test
out
mov
add
inc
hlt
pop
jmp
fisubs
add
movsl
jbe
adc
icebp
in
icebp
dec
int3
in
cmp
xchg
cwtl
sti
jno
fsub
sbb
cwtl
sub
hlt
clc
out
jg
pop
ss
hlt
dec
pop
jns
cli
aaa
daa
jbe
hlt
xchg
aaa
mov
cld
in
add
ljmp
dec
jle
jmp
cmp
insl
push
jle
or
adc
dec
push
cmc
mov
push
jmp
repz
jnp
aad
pop
jne
scas
cmc
push
xchg
push
jno
mov
divb
fucomp
pop
jno
mov
ja
scas
xchg
ja
insb
outsl
xchg
dec
out
jl
jno
sbb
mov
xchg
push
jge
mov
ret
call
lods
jo
ja
dec
inc
mov
insb
imul
cmpsb
jg
xlat
push
scas
jno
pushl
idivb
pop
xor
jg
mov
xchg
imull
into
push
notl
jno
mul
or
add
or
cmpb
inc
ljmp
aam
adc
or
jg
aad
xchg
cwtl
cld
push
xor
push
js
mov
push
xor
push
jno
sbb
das
repz
cmp
fdivrs
jle
jno
repnz
jmp
ret
jbe
adc
or
stos
call
inc
jle
xchg
adc
fstpt
adc
jp
jno
sbb
imul
int
lock
add
xchg
mov
push
adc
jno
call
mov
push
jno
std
push
sub
jns
insl
fdivp
cmp
test
out
dec
mov
loope
adcl
add
add
ret
jno
jns
sub
jno
jns
or
sbb
imul
div
mov
jno
outsb
adc
xor
xor
pop
addl
orl
andl
add
adc
inc
push
loope
outsl
adc
in
mov
adcb
insb
out
jne
aam
xchg
jns
or
inc
xchg
push
mov
mov
testl
cmp
jae
loope
imul
sub
pop
or
rcl
into
mov
sbb
cltd
faddl
in
jno
roll
int
imul
fdivs
rol
imul
xor
add
mov
dec
hlt
mov
mov
sbb
jnp
cli
adc
mov
push
jb
leave
addl
or
push
xor
in
bnd
xchg
pop
add
mov
ficomps
insb
adcb
loope,pn
cld
lret
or
push
vmread
pop
mov
ss
test
ljmp
clc
aaa
sbb
xchg
push
aad
insl
push
aad
jmp
xchg
test
cmc
xchg
xchg
inc
adc
clc
adc
int
xor
insl
push
xor
insl
adc
xchg
jmp
xchg
test
adc
xchg
dec
cmp
test
xchg
xchg
xchg
xor
jb
sub
mov
and
js
repz
cmp
sbb
in
mov
jo
pop
push
scas
xor
add
insb
aaa
lret
add
jae
push
cmpsl
sbb
adc
and
xchg
test
jb
xchg
lcall
mov
xor
mov
test
mov
ficompl
imul
jbe
jge
test
imul
or
lcall
push
pop
ret
jbe
cwtl
cmp
push
repz
inc
insl
mov
inc
cmp
xchg
hlt
dec
sub
mov
sub
cmp
xchg
std
mov
hlt
lea
movsl
xchg
jg
jno
jle
aam
jg
xor
jb
jno
xor
push
dec
jg
jno
mov
out
jb
fnstenv
xor
fstl
cmp
fwait
xlat
jno
jns
jecxz
mov
xchg
jae
hlt
loope
ljmp
xor
out
cli
push
inc
xor
scas
pushl
shll
in
jno
inc
out
movsl
sarb
idivl
push
je
in
jno
hlt
leave
out
in
jno
in
icebp
or
sub
int3
cld
mov
push
scas
insb
jno
adc
clc
cs
cld
ds
je
mov
sbb
cmp
xchg
js
xchg
or
jne
pop
idiv
mov
push
ljmp
sti
mov
in
cmc
mov
mov
inc
add
das
pcmpeqd
jae
imul
fbstp
clc
sbb
jo
inc
std
fdiv
pop
insb
push
repz
ret
jo
jo
jmp
mov
cmp
push
lock
ret
jnp
inc
mov
sbb
mov
mov
lock
sti
pop
dec
lock
fnsave
shrb
and
std
mov
mov
ja
in
imul
mov
nop
push
add
rolb
ja
repz
das
hlt
ret
adc
pop
arpl
out
xchg
dec
jnp
imul
pop
test
js
cli
mov
repz
in
push
arpl
pop
jnp
out
sub
das
xor
or
shrb
add
fstpl
mov
cs
addr16
xorl
pop
jl
loopne
addr16
nop
xchg
andb
sub
imul
jge
jno
inc
jp
sete
push
jo
int3
add
jno
movsl
das
jl
jp
dec
ss
jno
dec
cmp
xlat
jno
addb
daa
outsl
rcr
xchg
out
add
xchg
hlt
adc
negl
mov
clc
popa
dec
jg
adc
jno
mov
mov
popl
ficoml
pop
and
cmp
test
mov
sbb
jno
scas
push
dec
imull
xor
jge
mov
nop
and
add
push
adc
mov
iret
rorb
cmp
data16
jge
push
imul
or
cmp
jno
ror
add
pop
out
mov
cmp
sbbb
push
jbe
jno
jbe
out
clc
mov
nop
push
cmp
mov
add
imul
dec
jge
nop
loope
add
cmp
sbb
xor
sarb
jmp
loope
lock
je
pop
pushf
fwait
add
js
outsl
lret
and
sbb
mov
adc
adc
xchg
fldcw
pop
jno
cli
sbb
xor
popa
mov
fisubs
mov
mov
icebp
popa
lods
mov
repz
das
cli
insb
fwait
cmp
jae
jbe
jbe
insb
nop
xchg
test
adc
jno
sub
jl
jp
xor
loope
js
mov
push
testb
std
push
push
jno
mov
jb
arpl
gs
push
lcall
pushf
xchg
mov
fistpll
jno
sbb
sbb
mov
into
push
add
into
into
aam
int
js
mov
int
js
adc
js
xchg
cmp
clc
pop
jbe
test
inc
js
adc
in
jno
repnz
clc
dec
cmp
fimull
add
dec
das
mov
dec
adc
or
and
xor
fidivs
idiv
jae
ljmp
dec
pop
decb
jge
pop
xchg
jg
sub
scas
lret
outsb
insl
mov
int
inc
icebp
outsb
mov
mov
movsb
adc
in
jecxz
js
pop
add
push
sbb
pop
mov
in
or
jns
sbb
shrb
jns
cmp
loopne
in
in
test
mul
pop
js
xchg
arpl
sub
and
loop
ds
push
adc
jne
adc
jnp
and
int
lock
lock
mov
mov
mov
xchg
mov
js
pop
cltd
in
push
or
stc
jge
mov
cmp
dec
insb
pop
cltd
and
adcl
clc
imul
rclb
or
adc
dec
adc
dec
enter
push
or
sub
pop
jl
outsb
jae
int
aas
in
pop
insb
outsl
and
stc
cmp
roll
cmpsl
mov
test
lock
jg
outsl
adc
leave
push
add
lods
shlb
push
addl
fisubs
pop
insb
lea
or
or
sahf
jecxz
add
outsl
fisubs
dec
jno
jl
mov
sti
or
mov
push
out
sti
iret
and
fisubs
jmp
dec
xchg
jl
fdivl
incl
in
popw
add
inc
pop
fimull
push
jmp
jp
xlat
cwtl
hlt
lahf
ja
div
add
mov
lods
adc
inc
xchg
cmpsb
xlat
cmp
jns
mov
add
push
pop
mov
fsubl
xor
xor
clc
fdiv
mov
test
xor
cli
outsl
insb
sti
ss
xor
or
xchg
mov
xlat
clc
pop
test
xor
fdivr
leave
jns
les
fwait
shrb
test
mov
icebp
mov
pop
sbb
mov
adc
fdivrs
jb
push
jo
push
outsb
xor
mov
mov
icebp
xor
jb
mov
and
repnz
mov
jmp
xchg
fstpt
fdivs
push
add
call
ss
cmp
jmp
sub
nop
cmp
xchg
shlb
je
cmc
mov
jmp
mov
repz
jno
es
in
ljmp
scas
mov
aaa
jmp
dec
fsubrs
fmuls
cmc
pop
jmp
jmp
outsb
dec
aaa
mov
sub
or
lods
loop
ss
xor
and
and
nop
in
xor
jno
mov
mov
sub
int3
mov
xlat
jno
aas
test
icebp
sbb
xchg
js
jae
jg
mov
imul
mov
push
add
cmp
jno
jae
xor
outsl
mov
jo
out
test
xor
dec
std
xor
and
jo
and
outsl
imul
outsb
dec
adc
xor
pop
out
movsb
popa
test
scas
repnz
ja
inc
mov
adc
mov
jmp
add
imul
mov
repnz
inc
add
mov
and
mov
jg
or
test
xchg
jbe
add
mov
lock
cmp
sbb
aam
pushf
call
pop
das
shrb
inc
sub
in
dec
xor
sbb
shlb
push
stos
scas
pushf
inc
push
cmovs
xor
adc
jmp
lods
aaa
aaa
jae
inc
test
call
xchg
out
mov
dec
push
xor
or
lock
sbb
lock
outsl
pop
xchg
jp
das
add
mov
sub
or
wbinvd
hlt
mov
hlt
push
xchg
push
jmp
xchg
outsb
or
mov
dec
sbbl
mov
xchg
add
in
xor
into
nop
jp
mov
and
add
or
addr16
sub
lcall
mov
mov
sub
sub
add
adc
sub
shr
and
insb
inc
sbb
xor
dec
mov
push
sub
sub
add
mov
jecxz
mov
adc
repnz
ss
fimuls
add
sub
cwtl
fsts
lret
insb
cli
dec
add
rcrl
push
repz
adc
pop
pusha
jge
int3
lock
js
inc
add
insb
or
movl
xor
stc
test
lock
outsl
jo
adc
add
push
je
jmp
cmpl
std
insb
sbb
repnz
xor
and
jns
outsl
lahf
xor
push
xchg
cmovbe
cmp
adc
add
insb
pop
push
repnz
adc
jnp
lret
std
sub
cmp
jae
mov
out
push
adc
data16
pushf
in
insl
out
negl
sbb
pop
jb
out
sarb
aam
jne
fistpll
add
insb
test
pop
add
jmp
lock
pop
push
adc
outsb
sbb
jnp
jge
shrl
sbb
jnp
mov
add
xorb
mov
cmp
cmp
popl
jae
addb
sbb
jb
pop
mov
mov
mov
or
hlt
addr16
jo
push
in
mov
stos
insl
cs
lods
jl
in
dec
and
mov
pop
xor
sub
cs
sbb
jne
repz
push
dec
and
cli
sub
out
insl
je
inc
dec
lods
jbe
add
push
enter
ljmp
dec
mov
pop
xchg
ja
std
out
or
lods
jnp
stos
xor
jb
jbe
mov
outsb
pop
mov
lock
mov
jmp
int
add
pop
mov
dec
inc
in
cmc
xchg
lds
inc
popa
push
sub
je
stos
push
jb
jae
inc
xor
jb
aaa
inc
andl
clc
inc
hlt
jo
je
lret
add
out
mov
cs
or
cmp
or
icebp
test
push
inc
lock
xchg
or
out
es
jb
sti
inc
jno
jae
mov
mov
and
jne
add
xor
sub
jmp
outsb
clc
nop
cmc
mov
pop
and
test
cmp
push
pop
outsb
and
cmp
repz
dec
mov
jmp
push
cli
xor
lods
xchg
sub
dec
addb
jo
stos
out
inc
adc
cs
xor
insl
lret
hlt
pop
sub
adc
pop
dec
outsl
je
push
into
cmpsb
or
mov
test
cmpsb
adc
push
cmp
enter
int
inc
neg
xor
or
inc
xor
outsb
fdivl
pop
or
inc
cmp
push
sub
inc
scas
out
mov
test
dec
jbe
sub
fs
nop
rolb
jl
cmp
incb
mov
ss
xchg
incb
xchg
stos
jo
mov
xchg
call
jo
and
sbb
jns
repz
inc
cmpl
repz
mov
push
adc
push
nop
jmp
sti
imul
fisttpl
push
mov
or
in
aaa
shl
jge
or
das
jae
outsb
iret
inc
or
aaa
out
adc
pop
xor
mov
mov
int
adc
test
mov
adcb
xor
push
adc
inc
shlb
loop
out
shlb
arpl
lock
repnz
and
mov
xor
jl
pushl
xchg
std
pop
and
or
mov
sbb
dec
xor
movsb
xchg
sub
jmp
cmpb
jle
adc
iret
pop
xchg
scas
lds
adc
jbe
rcl
or
ret
push
jo
xor
mov
adc
xchg
jo
mov
cmc
or
out
out
or
inc
in
and
dec
cld
xor
daa
xchg
test
mov
pop
jae
add
xor
or
insl
repnz
clc
xchg
insb
pop
push
mov
mov
enter
movsl
jne
repnz
sbb
imul
test
adc
ss
clc
sbb
mov
pop
and
hlt
dec
outsb
das
fbld
push
add
inc
xor
adc
jo
popl
scas
jns
cli
int3
neg
leave
js
and
inc
xor
push
leave
push
jne
sbb
adc
sbb
sub
jl
cltd
sbb
mov
lods
cmpsl
icebp
push
inc
or
xor
je
out
adc
jo
out
insl
add
aas
wrmsr
jge
push
shrl
lret
icebp
jl
lahf
lds
jle
test
lock
jbe
icebp
and
jmp
or
mov
cld
test
xor
mov
nop
xor
push
jae
test
repnz
lock
lds
pop
jne
add
iret
imul
out
ljmp
sbb
enter
push
push
xor
enter
jb
repnz
cmp
mov
nopl
insb
lock
ds
insl
insl
insb
sub
pop
pushf
idivb
xor
aaa
push
ja
jb
push
xchg
cmp
cmc
lods
insl
pop
daa
adc
js
mov
inc
dec
mov
test
js
cmp
push
push
imull
jl
insl
push
ds
stos
push
jae
bndstx
add
andb
or
pop
mov
pop
push
add
push
repnz
pop
push
test
ja
lock
cli
mov
ja
push
pop
popf
dec
jne
jmp
int
idivb
nop
push
out
mov
push
jmp
call
lret
pminsw
cmp
mov
pop
jbe
mov
xor
pop
fistpll
out
pop
add
or
ja
call
pop
jmp
adc
dec
les
in
test
push
shl
pop
jmp
or
and
int
repnz
fcmovu
ja
mov
insl
xchg
dec
jmp
mov
mov
testb
sbb
call
mov
cmp
mov
sbb
xor
mov
cmpsl
jmp
sub
cmp
js
jae
jnp
and
jnp
add
xor
je
mov
test
jl
filds
push
pmuludq
aam
rolb
js
into
mov
xor
and
dec
shrb
insl
sbb
ja
in
insb
das
jno
mov
ret
ljmp
lock
clc
mov
mov
sub
stos
inc
test
xor
jo
cli
inc
add
stos
cli
scas
lock
call
cs
cli
inc
ljmp
dec
adc
sub
or
lea
cmp
jb
dec
pop
mov
add
in
jo
fidivl
ljmp
push
enter
dec
cmp
add
lahf
add
loopne
js
shrl
cltd
cmp
mov
ror
adc
pop
aam
xchg
pop
xor
movb
cmc
add
call
imul
bound
test
rcll
les
mov
push
outsb
xchg
sbb
pop
ljmp
ficoms
icebp
test
push
cli
inc
movsb
outsb
loope
jno
or
jge
sbb
add
add
clc
xchg
xor
cmp
sbb
out
mov
mov
cli
dec
inc
mov
mov
aas
add
clc
lods
aaa
cwtl
jmp
into
jbe
sub
pop
sbb
inc
gs
in
mov
pop
imul
outsl
cmc
mov
xchg
cmpsb
pop
scas
jae
dec
jnp
pop
cmc
mov
xor
add
cmpsl
dec
pop
inc
jne
mov
cmpb
push
xchg
and
jp
adc
xchg
repz
xchg
sbb
sub
icebp
pop
jl
ret
xchg
jmp
xor
pop
mov
loope
add
dec
dec
xchg
jl
addl
mov
jmp
out
insb
roll
push
jmp
adc
hlt
std
repz
jno
hlt
and
shlb
cmp
or
pop
insb
add
pop
inc
mov
pop
pop
xchg
add
pop
in
insb
loopne
jg
insb
cmpb
xchg
xchg
insb
enter
push
dec
rol
jbe
add
je
imul
dec
imul
pop
jnp
xchg
aaa
test
test
inc
jmp
arpl
mov
aas
stos
outsb
sub
cmc
or
inc
push
idivl
jbe
cmp
das
inc
add
mov
aaa
out
add
ss
jp
outsl
sub
pop
sti
xlat
outsl
or
cmp
push
mov
xchg
sbb
mov
outsl
mov
adc
dec
scas
out
push
push
es
mov
xchg
aam
jp
in
push
push
das
in
enter
movsl
xchg
shl
scas
jecxz
fs
loopne
ficoml
in
push
jle
and
or
cs
testb
clc
jne
push
ss
inc
add
sub
jecxz
lea
loope
in
add
xor
mov
imulb
repnz
xor
sbb
pushf
fildll
cwtl
add
shl
adc
sbb
mov
jns
subl
lock
xor
sahf
test
push
int
or
aaa
rcr
icebp
inc
jno
add
ljmp
sub
ss
imul
xchg
aaa
stos
les
inc
dec
icebp
sbb
cmp
jmp
xor
test
into
mov
xor
jb
das
jb
push
std
sbb
sarl
clc
nop
cs
lods
es
cmp
xor
xor
jb
mov
jle
push
mov
push
push
jb
enter
mov
enter
mov
stos
insb
insb
mov
sbb
shll
out
xor
or
insb
cmc
jae
ljmp
jl
sarl
pop
in
sub
mov
ds
jnp
in
jnp
loope
or
jge
add
push
movzbl
fwait
test
repnz
test
divl
jp
push
jl
hlt
clc
mov
and
mov
pop
repnz
outsb
jmp
push
mov
imul
xor
fmull
js
and
and
sub
outsl
rcl
dec
fsubrl
andl
movsl
mov
mov
icebp
cwtl
xorl
divl
ljmp
dec
aaa
inc
jno
lret
lods
sub
cmpsb
sub
shll
pop
sarl
shll
idivl
stc
fsubs
mov
and
and
andl
jns
addb
test
mov
jae
add
std
jbe
xchg
rclb
cmp
jl
pop
mov
repz
dec
lret
inc
imul
insb
je
pop
xchg
test
lds
in
shrb
jb
repz
sar
sbb
sub
imul
xlat
enter
and
repz
sarb
xchg
adc
jg
push
daa
outsl
pop
imul
in
in
mov
js
and
push
sub
repnz
pop
jnp
call
orb
cmp
repnz
movsb
ss
cmpsb
or
repnz
ret
into
sbb
test
test
mov
push
bswap
jb
and
cmp
dec
lock
pop
adc
mov
mov
xor
jb
and
cmp
mov
inc
jne
inc
cs
xchg
jbe
test
mov
daa
sub
roll
add
lock
sbb
stos
mov
cmp
xchg
jl
lret
xchg
xor
mov
clc
lret
insl
push
pop
mov
cmovle
test
mov
out
mov
pop
ljmp
js
mov
mov
and
out
sub
sbb
push
mov
add
mov
ljmp
inc
mov
inc
cmp
add
data16
addl
lods
roll
stc
nop
mov
stc
movb
push
lods
push
mov
or
pop
sub
push
in
or
push
scas
subb
or
enter
jecxz
icebp
js
repz
out
arpl
cli
push
sbb
push
fldlg2
imull
sti
push
mov
movsb
repz
mov
out
jbe
sbb
cmp
inc
cwtl
xchg
div
mov
cli
cwtl
jge
sbb
push
mov
sarl
ret
inc
cli
jg
cwtl
cmc
cmp
and
push
ss
jns
xlat
test
sti
das
arpl
idivl
loope
mov
cmc
cwtl
fcoms
jmp
fbld
mov
cmpsl
fidivrl
test
xlat
pop
fstl
leave
mov
repz
out
pop
add
add
pusha
pop
rcrl
stc
ret
scas
repz
neg
enter
jge
test
add
fcomi
add
jns
push
in
test
adc
addr16
jl
jns
mov
or
mov
test
inc
cmc
sub
jne
ficoms
mov
test
nop
lods
ss
not
push
movsl
inc
xchg
or
jecxz
xor
xchg
insb
mov
in
push
mov
enter
dec
cmpb
xor
inc
jae
cli
or
mov
aaa
sub
inc
lret
mov
testb
sbb
aas
loop
data16
inc
xchg
ficoml
push
orb
jg
mov
mov
imul
test
into
mov
and
in
mov
mov
cmpsl
mov
cs
std
lock
jbe
jl
movsb
xchg
xchg
dec
scas
insb
cmpsb
xor
mov
xor
pop
jmp
xor
cmp
mov
imul
or
jno
ret
mov
lret
push
sub
cmc
dec
sub
inc
sbbl
aas
icebp
scas
dec
es
jecxz
cmp
cmpsl
inc
test
jnp
xor
add
stos
cmp
cmp
lods
frstor
mov
jecxz
daa
sub
jge
mov
in
arpl
add
shll
mov
push
inc
stos
lcall
stos
and
stos
out
inc
insl
and
inc
adc
icebp
outsb
enter
inc
int3
inc
int
cmp
out
fwait
mov
test
jno
xchg
outsl
and
sub
jle
pushf
xor
mov
pop
daa
xchg
inc
punpckhdq
sub
inc
repnz
xor
mov
mov
push
lods
movsb
ljmp
pop
dec
jo
scas
jae
lcall
dec
cld
lods
movsb
push
add
loop
mov
les
mov
push
mov
outsl
dec
imul
dec
xor
mov
xchg
mov
cmpsl
xor
inc
out
sub
shrl
je,pt
aaa
sub
jb
enter
cmp
repnz
cmc
into
push
adc
jl
sub
js
jbe
bnd
push
jae
cmpb
int
cmp
push
dec
gs
and
in
int3
push
or
mov
mov
jno
dec
into
sub
pop
xchg
shrl
shrl
pop
sub
xor
sub
lds
insl
or
inc
dec
mov
or
xchg
and
mov
or
mov
js
jb
mov
dec
insl
mov
mov
sub
in
shll
xor
add
mov
or
inc
or
xor
pushf
lods
rolb
adc
push
adc
add
adc
testb
out
cmc
les
add
xor
push
jg
packssdw
lahf
xchg
ret
sub
cmc
clc
lods
cld
add
inc
andl
stos
jle
or
sub
popa
ja
outsb
cmp
je
cmc
bnd
jmp
inc
xchg
mov
nop
ss
inc
xchg
je
jo
es
and
ret
js
jg
dec
jg
jle
xchg
sub
aas
test
movsb
cmp
xor
in
jp
ja
adc
testl
jb
sub
aas
or
je
sub
bound
frstor
lret
jle
arpl
inc
inc
xor
xor
jae
jl
std
mov
mov
jae
in
or
or
cld
jge
jbe
mov
mov
shrl
aam
fwait
sub
adc
xchg
mov
xchg
cli
scas
push
hlt
stos
scas
das
push
mov
and
mov
ljmp
inc
cmp
cmovae
jmp
dec
mov
insb
mov
lahf
test
lods
div
es
xor
xchg
push
imul
or
pop
test
xor
lods
addl
sbb
inc
je
and
push
lods
xchg
ds
cmp
stos
add
sti
add
cmp
cmpsb
mov
insb
cmpsb
xchg
pop
mov
sti
mov
xor
xorb
push
decb
test
or
sub
repnz
inc
fisubrl
stos
les
idivb
jb
int
push
hlt
inc
mov
and
test
stos
adc
dec
push
cmpsb
add
mov
test
xchg
or
lods
std
sub
notb
jo
mov
inc
insb
mov
or
adc
push
pop
cs
inc
xor
std
dec
jg
lds
icebp
cld
jp
std
pop
sbb
dec
add
mov
sti
out
addr16
inc
sub
into
dec
loop
fs
adc
ss
inc
cmp
jg
jno
lock
or
inc
sub
cmp
je
pop
mov
outsb
inc
lock
and
popa
pextrw
fwait
adc
inc
add
shrl
repz
sub
cld
push
test
mov
jae
jns
inc
aas
repz
iret
lods
jnp
insb
xchg
out
and
dec
mov
jns
push
or
jmp
mov
pushf
rolb
ud0
int3
jne
cltd
xchg
scas
jbe
lock
iret
push
xchg
outsl
mov
adc
sub
sub
hlt
add
cmp
push
fs
icebp
push
std
push
and
jmp
mov
jo
lods
push
inc
jo
movl
test
mov
cmc
dec
ja
sub
adc
jle
xor
push
adc
hlt
ret
sbb
xchg
xchg
jle
inc
lods
sarl
jae
lock
sbb
lods
dec
pop
notl
cmp
sub
add
mov
jne
out
test
scas
mov
push
in
nop
lods
ss
mov
or
inc
sbb
rorl
pop
lds
add
xchg
and
mov
add
cmp
xchg
inc
push
xchg
adcb
shrb
inc
mull
imul
scas
lods
shlb
scas
cmp
sbb
in
shl
xor
cmc
insb
je
adc
mov
jge
rolb
xchg
push
loop,pt
scas
and
aad
mov
dec
ret
mov
movntps
add
lds
call
mov
mov
lds
pop
daa
push
or
nop
stos
sbb
in
mov
out
or
ficoms
xchg
or
lods
and
in
inc
mov
aas
pop
addr16
dec
dec
dec
lods
xchg
insb
icebp
or
lret
push
xor
movsb
jns
jp
sub
in
dec
sbb
xchg
imul
sub
or
fdivrl
pop
fwait
xor
icebp
mov
pop
lock
jg
ret
int3
adc
cmp
rol
mov
jae
iret
dec
mov
mov
fimuls
in
ret
test
addr16
test
fs
inc
stos
mov
lock
fsts
inc
mov
cmp
jp
test
nop
insl
jg
hlt
inc
scas
stos
cmpsl
test
arpl
daa
insb
sub
out
scas
in
xadd
adc
jns
adc
jno,pt
int3
stos
adc
js
cmp
inc
dec
aas
pop
xchg
std
stos
pushf
mov
jno
mov
repnz
jmp
jle
mov
aam
cmp
mov
out
fs
jmp
into
roll
pop
hlt
stos
add
or
lcall
roll
add
insl
dec
fdivrl
test
xlat
pop
nop
scas
sub
xor
jl
xchg
or
push
into
aas
orb
inc
add
stos
hlt
lock
jg
aam
jne
jmp
xor
push
lcall
cmp
cmpsb
out
or
mov
lock
xor
and
das
dec
inc
xor
inc
gs
scas
push
mov
sbb
cmp
insb
dec
jnp
mov
incb
insb
and
adc
test
xor
pop
cmp
pop
imulb
lock
clc
sub
sbb
push
jl
fdivrl
inc
out
pushl
or
das
clc
dec
cmc
jae
xorl
add
dec
insb
test
push
jp
add
in
stc
rcr
inc
insb
aad
andl
dec
in
fdivr
imul
mov
cmc
adc
mov
sub
or
cld
dec
push
cmp
inc
jbe
xor
xor
pop
cmpsl
push
pop
or
dec
and
jle
and
out
rorl
nop
outsb
je
and
mov
sarl
xchg
or
xor
add
mov
pushf
aam
lock
fs
adc
das
mov
cmpsb
push
mov
cmp
or
insb
mov
inc
push
les
jnp
push
cs
jbe
lock
inc
cmpb
cmp
test
je
movsb
dec
mov
iret
out
or
xchg
int3
cld
je
outsb
out
je
sub
sbb
jne
mov
mov
or
xchg
cmp
lret
out
insb
mov
dec
adc
xchg
lcall
loope
inc
add
lods
mov
popa
adc
mov
cmp
rol
mov
jl
xchg
xor
push
shrb
inc
xchg
or
inc
cld
cmp
add
in
inc
aas
sarb
sbb
lea
xor
inc
mov
scas
sbb
test
in
sub
imul
test
sbb
push
addr16
int3
movsb
mov
popf
mov
pop
mov
in
sub
ja
inc
aas
mov
data16
jg
push
es
in
jmp
lahf
jle
mov
daa
mov
ds
scas
test
roll
mov
cmp
sbb
pop
and
or
in
dec
aaa
pop
jbe
sbb
imul
sahf
dec
dec
in
aas
lret
movsl
jne
movsl
fstpt
test
test
data16
insb
add
mov
xor
or
jae
cmp
mov
outsb
or
inc
je
dec
sub
dec
mov
scas
xor
jae
sub
xchg
lds
pop
push
in
cli
imul
aas
jge
mov
loopne
aas
jl
div
pop
jns
lods
adc
fbstp
int
lock
dec
add
sbb
mov
dec
sub
mov
jb
outsl
mov
scas
pop
add
insb
fiaddl
lret
stos
rcl
xor
test
dec
negl
clc
out
jp
or
mov
xchg
aas
jbe
movsl
inc
repnz
dec
cmp
push
push
cmc
sub
xor
inc
loope
mov
mov
loope
xor
push
or
cmp
mov
mov
stos
and
mov
data16
inc
xchg
jp
jns
mov
xor
cmp
testl
test
cmp
mov
movsl
dec
hlt
insb
lods
fsts
mov
repz
addr16
mov
cmpsb
int3
scas
je
insl
int3
hlt
mov
mov
add
test
mov
xor
or
ds
xor
out
inc
xchg
mov
sbb
or
aad
dec
mov
dec
push
sub
ljmp
mov
out
sub
out
jnp
and
scas
jmp
ss
les
add
inc
jmp
mov
loop
xchg
mov
stos
out
adc
dec
push
hlt
inc
add
sub
lcall
hlt
jb
lret
inc
inc
loope
pop
add
insb
or
xchg
mov
push
fwait
stos
pop
inc
add
adc
sub
cmp
cmpsb
out
das
cmp
inc
mov
inc
lret
outsb
mov
or
sbb
cmp
pop
and
sbb
out
inc
dec
stos
outsb
pop
jge
lods
dec
mov
mov
in
dec
push
scas
jo
xor
add
xchg
sbb
add
mov
push
dec
les
cmc
or
aam
dec
mov
inc
cmp
xor
sub
pop
lock
add
jg
push
test
adc
inc
pop
out
xchg
xchg
nop
mov
dec
in
adc
cld
insb
jge
js
mov
fadd
inc
aas
insb
cmc
dec
jnp
loope
in
inc
fs
lcall
mov
or
lea
lcall
aam
scas
insb
add
lahf
aaa
xor
mov
shrl
xchg
xor
nop
mov
fadd
movsb
sbb
pop
ja
test
dec
dec
inc
aaa
jl
scas
and
inc
inc
cld
jl
jge
sbb
inc
incl
jl
jae
sar
dec
fs
inc
mov
cmc
bound
mov
pop
jno
nop
pop
xchg
jb
mov
js
stc
insb
cwtl
out
jae
mov
clc
out
leave
xchg
jb
iret
jp
lods
inc
mov
push
cmp
dec
filds
stc
jl
addr16
scas
test
jecxz
js
scas
sbb
ret
mov
nop
dec
pop
or
sub
lods
sbb
pop
adc
pop
push
hlt
jle
push
outsl
pop
ret
inc
insl
popf
in
inc
fwait
leave
mov
leave
rol
enter
mov
movsl
divl
cmp
cmp
cmp
add
je
rdpmc
das
das
and
push
jge
add
lods
das
or
scas
cld
hlt
and
pop
mov
adc
mov
xchg
lods
insl
cmp
jns
test
xchg
test
sti
inc
repz
ljmp
mov
mov
sub
jmp
mov
pop
xor
mov
rol
mov
push
aas
xor
jmp
das
loop
pop
sub
and
xorl
jmp
push
dec
mov
shlb
jmp
mov
movsb
push
add
inc
int
cmpsb
push
test
cmp
lcall
sub
pop
cmpl
nop
jge
dec
cmp
adc
outsb
daa
dec
scas
inc
insl
pop
or
pop
xchg
cld
sub
xor
xor
arpl
andb
add
jp
sbb
bnd
loop
aaa
dec
cmp
scas
and
or
xchg
int3
repnz
add
outsb
mov
xor
jecxz
insl
jb
test
dec
sahf
inc
xor
into
cmc
and
push
sub
mov
xchg
sub
and
in
testb
mov
inc
int
jns
jecxz
test
inc
or
mov
push
fwait
adc
sub
jp
cmpsb
jnp
jb
addr16
shll
inc
cs
dec
shll
sbb
mov
push
mov
sub
mov
jnp
test
dec
sbb
faddl
mov
incl
push
mov
xor
orb
jae
dec
in
jp
cmp
mov
jl
in
add
push
ds
mov
cmpsb
xchg
aam
mov
mov
sahf
mov
and
bound
mov
cmp
push
das
pop
xor
shrl
sub
in
das
inc
xor
mov
test
or
adc
cs
daa
hlt
int
outsl
adc
bswap
das
mov
jp
scas
gs
test
jb
xor
and
dec
fstpt
jno
or
das
in
or
dec
mov
arpl
xor
imul
fldl
xchg
scas
push
sub
xor
jno
pop
inc
mov
mov
stc
pop
sub
les
movsl
ljmp
jl
subb
mov
add
sti
pop
lods
pop
cmp
mov
push
into
aas
imul
mov
je
sub
xor
sub
add
ret
dec
mov
iret
jg
imul
cmp
aam
clc
mov
fwait
pop
dec
jg
dec
insb
sub
mov
ror
jns
mov
jns
int
sti
lea
outsl
fisttpl
jne
mov
inc
inc
xchg
xchg
sbb
sub
xchg
xor
loope
in
cld
leave
loopne
cwtl
sarb
and
mov
jns
mov
mov
or
ss
shrl
xchg
pop
jns
push
cmp
test
xchg
je
popa
pop
pop
jne
sbb
inc
mov
lods
dec
hlt
cmp
out
stos
sub
mov
lds
sti
inc
cmpsb
lahf
or
mov
sub
sub
loope
inc
pop
xchg
aam
test
aad
je
and
cmp
push
mov
inc
inc
push
pop
push
lahf
cmp
imul
jnp
iret
jae
mov
dec
push
sbbb
jl
jle
scas
stc
mov
jo
mov
or
into
jbe
cmpsl
mov
adc
jp
fimuls
cmp
sub
out
and
inc
xor
cmp
fisubl
lods
test
and
jl
aaa
insl
loop
add
stos
mov
outsl
inc
sti
jecxz
dec
dec
jg
jno
cmpsb
sbb
jae
lods
jnp
sub
mov
ds
mov
jle
iret
mov
mov
mov
mov
mov
cmp
in
aas
stc
jecxz
jno
mov
pop
xor
aaa
push
aad
pop
dec
in
dec
fistpll
int
jns
cmp
lds
rcrb
movsl
stos
out
scas
dec
push
pop
push
sti
int
in
sub
daa
shlb
mov
fs
aam
mov
mov
out
jb
mov
decl
ficoml
movsb
push
mov
fisttpl
add
jb
sar
addr16
adc
cli
add
pop
xchg
in
in
lcall
jo
ds
jnp
movsl
or
or
mov
pmullw
mov
mov
jl
cli
push
lods
inc
mov
sahf
sub
inc
inc
inc
sub
xchg
clc
rorl
push
dec
adc
mov
jecxz
mov
lock
cmp
loope
jnp
xchg
test
pop
out
cmp
hlt
mov
inc
sub
cmp
mov
cs
jp
popa
mov
mov
lods
mov
pop
pop
push
mov
push
inc
dec
jl
movl
cmp
push
testb
fmuls
xlat
xor
or
or
stos
inc
inc
push
dec
sbb
aas
jl
mov
xor
mov
pop
popa
dec
les
inc
ds
int3
sub
daa
stos
cmp
mov
movsl
imul
fs
ret
scas
fidivl
sub
cmpl
enter
pop
aam
xchg
inc
femms
insl
cmp
addr16
lods
push
repnz
loop
mov
mov
mov
paddsb
scas
jp
sub
cmp
nop
aam
jp
sub
jecxz
ror
pop
lods
xchg
xor
fadd
mov
pop
inc
mov
out
mov
into
sub
idiv
mov
sub
insl
add
mov
mov
push
aas
lods
movsl
pop
or
mov
pop
sbbb
mov
jmp
out
int
subps
mov
pushf
mov
cli
cmp
sub
or
cmp
clc
scas
out
jne
cmp
lods
sub
out
mov
and
mov
pop
outsb
scas
lods
lret
test
outsb
repnz
ficomps
jl
filds
xchg
out
inc
outsb
sub
mov
leave
iret
xor
mov
test
xchg
shrl
jb
lods
fisubl
xorl
ds
push
mov
mov
sar
lds
arpl
scas
mov
popf
lds
stc
sbb
fdivl
cmp
fisttpl
xor
movsb
inc
push
jo
test
mov
imul
add
insl
sub
testb
inc
xor
xor
cmp
adcb
lret
pop
je
add
mov
inc
das
in
sahf
cmpsb
lret
out
insl
cmc
dec
ret
mov
sbb
outsb
movsl
dec
in
cld
sbb
lock
mov
cmp
lods
jo
lcall
push
xor
xchg
lods
pop
fcmovbe
xor
jo
sub
sub
push
jns
lret
aas
mov
mov
cmp
insl
jns
shl
mov
xchg
mov
mov
push
test
into
aad
sbb
jne
fnsave
iret
add
pop
out
test
mov
enterw
outsl
nop
inc
imul
ss
dec
or
mov
xchg
xor
lods
xor
mov
ffreep
jno
ret
cmp
cli
add
xor
adc
shll
mov
jl
pop
mov
cld
addr16
jbe
or
aam
test
add
ljmp
xchg
insb
or
aam
jp
test
mov
mov
mov
insb
int
xor
sbb
outsb
pop
dec
movsb
jns
and
mov
push
inc
jmp
fisubs
xor
insb
mov
mov
sbb
push
mov
test
fs
push
std
adc
or
cmp
mov
insl
mov
cmpsb
push
sub
pop
or
sub
jle
daa
jne
jno
das
lret
loope
mov
push
fisttpll
push
ja
mov
shll
popaw
jae
js
jae
jno
scas
leave
and
outsl
pushf
add
out
imul
sbb
out
outsl
pop
fidivl
mul
out
xor
test
sbb
std
es
ret
dec
addr16
nop
inc
mov
les
fildll
xchg
sbb
mov
rol
xor
sub
jle
scas
mov
cmp
outsb
sub
imul
iret
mov
or
nop
stos
sub
pop
movl
cmp
addr16
cltd
mov
stc
bound
leave
xchg
imul
pushf
mov
add
sub
test
pop
jle
sub
lods
outsb
out
hlt
mov
in
xor
jle
mov
jecxz
punpckhdq
inc
lods
ret
sbb
or
push
xchg
adc
loope
cmp
mov
sbb
xchg
popl
mov
into
in
sub
negb
arpl
push
repz
dec
lock
ret
cmp
arpl
xor
popf
jg
cmpl
mov
mov
mov
aam
sub
leave
stos
or
out
or
jp
pushf
inc
bswap
pushf
push
xor
fwait
jbe
les
shrl
sub
dec
jnp
int
push
int
sbb
adc
or
fisubs
fwait
repnz
popf
jp
pop
push
mov
push
jmp
cmpsb
jb
pop
adc
hlt
repnz
mov
dec
sahf
jg
mov
int
icebp
jbe
out
mov
jbe
push
insl
hlt
dec
jecxz
pop
dec
sub
mov
cmpl
imul
sarl
hlt
insb
jne
mov
aad
aas
add
ljmp
jbe
repnz
push
mov
in
lea
jecxz
mov
lods
loope
test
subb
jp
int3
xor
cmp
sti
jp
in
insb
scas
cmp
dec
stc
arpl
out
mov
das
add
dec
jnp
inc
dec
int
mov
push
ds
shr
scas
cmp
lcall
push
jb
popa
aas
andb
imul
loopne
jecxz
sub
jo
sub
mov
mov
inc
sub
xor
sub
out
das
xchg
mov
jns
adc
das
inc
or
push
cld
sub
sub
jl
ret
xor
pop
bound
in
nop
mov
mov
das
lret
sbb
shrl
jl
sub
aaa
das
add
cltd
mov
jge
shll
inc
jb
mov
subb
inc
xor
push
mov
cmpsb
mov
dec
dec
adc
addr16
arpl
out
ret
xor
nop
stc
flds
push
and
int
jae
mov
mov
inc
add
cmpsb
mov
jmp
in
movsl
std
xor
mov
lcall
test
ss
aaa
ds
xor
pop
repnz
ljmp
lods
lock
jl
ret
arpl
into
imul
loope
add
and
insb
popa
repnz
xor
lods
jmp
popf
jne
xchg
jle
subl
loop
pop
sbb
shlb
je
jmp
shrl
mov
scas
inc
sbb
test
jbe
ret
popa
inc
cmp
iret
subl
xor
stos
and
dec
mov
repz
insb
arpl
imul
push
scas
jge
out
mov
test
dec
scas
in
insl
sub
jbe
mov
xor
iret
mov
push
ret
scas
pop
shrl
cmp
inc
ds
jge
dec
insl
lea
stos
or
mov
loop
out
xor
inc
add
shl
mov
pop
adc
mov
aam
jl
scas
inc
scas
cmpsb
dec
jg
popf
sarl
movsb
jmp
shll
out
mov
dec
fsubrl
jb
xor
mov
jbe
inc
shrl
movsb
mov
movsl
mov
test
mov
addr16
dec
in
jl
mov
decl
stc
push
test
xorb
sub
push
and
pop
enter
mov
outsl
nop
or
sub
xor
and
fdiv
fxch
cmp
inc
inc
adc
imul
mov
sbb
ja
nop
mov
inc
ret
arpl
sub
dec
mov
or
leave
aas
stos
inc
mov
jmp
lcall
cmp
inc
test
stos
pushf
scas
cmp
mov
xor
in
cmp
or
jle
lds
insl
ds
jge
add
jmp
mov
mov
mov
aaa
mov
ror
data16
dec
bound
movsb
mov
xor
enter
mov
jge
movsl
mov
push
push
lods
xor
inc
lret
lcall
hlt
jp
xchg
lock
lds
subl
les
push
fsts
stos
iret
pusha
sbb
add
das
cs
je
test
outsb
pushl
cs
pop
cmp
rdmsr
mov
fstpl
mov
jbe
js
xor
les
in
inc
mov
mov
mov
push
into
addb
addb
dec
xor
adc
into
popa
adc
scas
and
pop
fmul
xorl
mov
cmpsb
cwtl
stos
mov
repnz
lods
jb
into
andb
insl
fwait
adc
shll
xor
repz
imul
outsb
cmc
sub
in
or
lods
insb
mov
dec
in
cltd
sub
ja
mov
scas
pop
mov
lcall
lret
cmc
pop
or
sub
cs
movsl
xor
or
insl
movsl
int3
cmp
pop
addb
icebp
or
andb
add
mov
jno
push
cli
movsb
out
jl
sub
sub
jge
into
shrb
mov
ds
fildl
test
lcall
inc
pop
into
sbb
leave
test
imul
inc
inc
push
cmp
dec
add
xor
hlt
xor
cmp
cld
pop
mov
mov
insl
pop
lods
out
lret
mov
or
sub
fsubrl
or
stos
fdivl
push
in
out
negl
cmpb
cs
ret
mov
sar
inc
movsl
icebp
or
jp
sub
mov
jne
and
mov
int3
add
lret
mov
sub
lock
pop
sbbb
inc
shrl
ficoml
jmp
das
loope
insl
mov
cld
sar
enter
into
pop
pop
lods
jl
xorb
push
shr
cmpb
push
mov
inc
stos
pop
jnp
data16
push
lea
scas
cmpsb
jb
fwait
xor
and
inc
mov
jp
fptan
iret
inc
inc
mov
xor
mov
jp
lcall
pop
pop
sub
inc
mov
jns
mov
mov
cmp
sub
iret
aas
cld
clc
ss
jno
rcrl
xor
jle
sub
and
mov
movsb
and
cmp
add
sti
scas
fildll
or
mov
cmp
jge
mov
pop
fldenv
mov
movsb
mov
mov
je
cltd
xor
mov
mov
mov
cmc
int
popf
enter
testb
jg
ret
or
sub
test
sub
adc
ja
mov
lods
shrb
xchg
cs
fisubs
jge
cmp
stc
dec
mov
cmp
mov
fwait
insb
pop
cmp
cmp
xchg
lock
test
xor
lea
cmpsb
mov
les
jle
in
std
test
push
popa
inc
mov
loope
mov
cs
add
test
aaa
or
test
jne
icebp
rcrl
aas
scas
jo
dec
lret
pop
dec
shr
push
nop
add
cld
push
jmp
jnp
fwait
xor
mov
and
imul
adc
das
pop
add
xchg
jp
int
out
xchg
lods
xor
ret
inc
dec
mov
mov
movsb
or
mov
xor
mov
stos
in
lds
popf
loopne
push
xchg
sub
or
lock
inc
mov
sub
shll
in
mov
movsb
test
or
mov
les
outsl
and
xor
pop
jae
jae
dec
out
adc
out
mov
add
push
mov
jge
int
sub
into
daa
push
mov
or
enter
ljmp
out
out
addb
fwait
andl
inc
repz
clc
add
imul
sub
jns
cs
scas
ss
pop
in
int
inc
popl
out
inc
in
loop
jns
dec
aam
push
stos
jo
pop
jg
dec
orl
imul
repnz
mov
stc
mov
daa
or
inc
test
movsb
movsl
xchg
pop
shll
outsl
xchg
scas
aas
dec
adc
xor
data16
dec
pop
inc
addr16
fwait
cmp
mov
cmovp
sub
aas
inc
pushf
pop
mov
sbbb
fs
movsb
inc
out
test
faddp
add
xchg
adc
ljmp
mov
das
jbe
jae
sti
jle
addb
jl
sub
mov
dec
dec
mov
in
mov
test
scas
cli
jb
sub
popf
lret
and
inc
dec
int
inc
call
gs
les
xor
xor
inc
pop
xchg
xchg
push
mov
leave
lock
xchg
sub
pop
rorb
cs
sbb
shll
lods
shl
int
add
push
loop
out
pop
icebp
addr16
cltd
pushf
inc
sub
cli
xor
repz
aad
xor
into
jns
jge
mov
scas
push
jae
arpl
insb
add
loope
sub
mov
mov
or
jl
mov
add
scas
pop
xchg
insl
sub
mov
aas
jg
popa
scas
add
mov
or
jp
lods
cmpsb
mov
xchg
mov
sbb
das
adc
rcrl
or
xor
add
sub
cmp
movsb
fcmovnb
mov
cmp
cmp
mov
imul
mov
sbb
sub
fisubl
mov
push
dec
xor
popf
je
test
movsb
fnstcw
inc
rorl
insb
movsb
lret
mov
pop
iret
movsb
mov
mov
loope
mov
scas
scas
addr16
addr16
addb
mov
popf
xchg
mov
js
stc
in
aas
sbb
xchg
add
out
pop
lock
popf
add
scas
fs
ja
and
push
test
imul
aaa
lea
cmp
sbb
or
dec
lock
outsl
inc
push
mov
or
nop
cld
outsb
cmpxchg
cltd
xor
repnz
push
mov
movb
mov
push
shrl
sub
mov
cmpsl
jg
in
xor
stos
cmpsb
mov
xor
pushf
xor
frstor
scas
mov
push
out
cmp
sub
pop
fmulp
mov
ficoml
shrb
cli
mov
lds
mov
xor
jle
lods
dec
inc
xchg
push
imul
push
cmpl
or
cmpsb
pop
repnz
dec
cld
mov
xchg
cmpsb
int
insb
inc
inc
fisttpll
test
lea
cltd
insb
sarl
dec
add
cmc
mov
rcll
add
mov
imul
jp
adc
mov
and
xor
andb
mov
sarl
repz
mov
ret
adc
push
pop
mov
arpl
jnp
das
inc
outsb
cmp
ficomps
je
fdivr
or
cmp
push
jo
mov
out
dec
in
mov
aas
jno
push
not
lret
jle
sub
lcall
jmp
insb
ja
mov
test
out
mov
movsb
and
idivl
and
push
enter
aam
sahf
in
pop
dec
inc
dec
push
scas
loop
cmp
mov
cld
inc
cmc
xchg
rcrl
inc
cmp
scas
stc
sbb
test
mov
sub
add
into
mov
and
hlt
arpl
scas
fwait
push
adc
test
jecxz
sub
dec
add
mov
aas
and
fidivrs
cltd
jbe
ret
cmp
lds
ja
xor
insl
jb
jp
pop
inc
xchg
or
inc
outsb
js
mov
inc
cmp
andb
mov
test
dec
inc
testl
cmp
sbb
inc
aam
shl
pop
mov
in
lcall
cmp
and
inc
sub
pop
cmp
test
in
pop
xchg
pop
pop
dec
mov
lea
fsubl
iret
in
cmp
out
cmp
fsubp
add
mov
cs
loopne
pop
or
dec
addr16
lods
mov
movsb
jbe
sub
repnz
ljmp
into
fdivrl
stos
arpl
cmp
pushl
stos
std
ror
loop
aas
cmp
or
mov
sub
inc
jl
and
pop
jae
mov
movsl
push
sub
xor
mov
nop
push
jo
scas
sub
ds
subl
cmp
es
and
cmc
pop
stos
into
test
dec
ret
jno
shl
xchg
lods
mov
daa
dec
sbb
into
ret
stos
cmp
push
pop
mov
jl
cmp
cli
jle
test
dec
pop
je
das
xor
push
gs
nop
lods
dec
mov
xchg
ds
and
jp
jae
sbb
add
xor
push
movsl
jno
cs
out
mov
addr16
mov
test
cmp
es
dec
into
subb
lods
das
xchg
add
mov
jns
fisttpll
lds
and
pop
xor
sub
jp
icebp
or
inc
mov
lods
add
popa
mov
xor
out
in
sub
cmpsb
fstpt
jecxz
cmc
lcall
push
jae
mov
hlt
mov
lcall
mov
sbbl
shr
mov
sub
push
repnz
dec
inc
insl
mov
fisubs
out
jecxz
cld
mov
fimull
frstor
popf
iret
jp
xlat
cltd
xlat
inc
test
push
out
adc
adc
leave
sbb
mov
outsl
iret
sub
jmp
mov
sbb
mov
lods
mov
cmp
mov
sahf
cmpsb
imul
xchg
xor
inc
fstps
mov
xchg
sub
sub
or
jmp
add
jp
mov
add
inc
insb
rolb
movb
nop
cltd
fwait
ja
out
inc
sub
mov
icebp
xchg
mov
and
jg
jmp
jno
inc
jmp
inc
or
jae
inc
test
int
sub
lret
addr16
push
jle
lea
out
inc
inc
mov
arpl
test
push
enter
sub
cmpl
or
pop
push
adc
mov
cmp
inc
cmc
xchg
ret
sub
arpl
mov
xor
jo
aas
jne
xor
lods
loope
repz
pop
mov
insl
lea
into
cmpsb
ret
xor
clc
inc
lds
jns
lcall
into
mov
mov
fwait
outsb
and
sbb
test
or
mov
lock
pop
pop
pop
xchg
mov
jns
adc
fdivrl
je
adc
dec
fldl
aad
adc
or
push
jbe
dec
jp
mov
lods
push
xor
call
insb
sbb
imul
movsl
fsts
stos
xor
cmp
lret
or
mov
jle
mull
jbe,pn
xor
xor
jb
cmpsl
hlt
nop
repnz
repz
cmp
insl
out
pminub
push
ret
orl
add
loop
inc
xor
scas
xchg
adc
and
xor
push
sahf
inc
adcl
stos
jb
fnsave
xor
sbb
inc
jl
idivl
mov
aam
aas
mov
push
add
imul
push
scas
ja
ja
inc
ja
ds
aam
inc
push
ja
imul
ja
sub
jno
das
repnz
sub
cmp
mov
push
mov
insb
subl
inc
and
shll
das
push
add
xchg
mov
imulb
repz
in
jb
adc
sub
push
mov
lods
jl
repz
jae
pop
push
aam
mov
int3
mov
mov
das
idivl
xor
sub
iret
jo
sbb
ja
sub
jae
decl
scas
jno
lods
mov
jmp
mov
pop
sbb
out
out
xor
into
dec
cli
pop
mov
ljmp
adc
cwtl
or
roll
mov
testb
ret
fldenv
xchg
dec
fstl
mov
mov
xchg
sbb
sbb
xlat
mov
lcall
icebp
ja
xchg
xor
into
push
stos
lret
sub
imul
out
test
gs
in
arpl
loop
popa
test
loopne
pop
test
fisubrs
pop
inc
cmpsl
std
jmp
xchg
xchg
rclb
mov
xor
scas
dec
leave
pusha
out
repnz
rcll
int3
jl
cld
xor
sub
push
push
dec
jno
mov
xlat
xchg
je
jb
repnz
pop
jo
lock
outsl
pop
out
pop
outsb
pop
mov
pop
and
sti
adc
cld
sarl
sti
adc
cli
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
adc
xchg
test
mov
test
push
sub
xor
or
ret
mov
xchg
dec
data16
jecxz
sbb
xchg
xor
xchg
jno
xchg
xchg
mov
rcll
rcll
rcll
rorl
rorl
rorl
mov
or
mov
or
mov
or
mov
sub
test
daa
shll
shll
shll
and
mov
dec
inc
int3
in
xchg
inc
loopne
sbb
xchg
push
rolb
in
shl
int3
call
out
push
sub
cmp
les
push
inc
mov
jb
scas
sti
cltd
pusha
mov
mov
pop
xor
test
jp
adc
push
xor
push
dec
jno
xchg
cmp
fsts
adc
notb
sub
imul
imul
jmp
outsb
roll
inc
pop
jne
push
add
jae
iret
aam
rorb
int3
add
add
sub
scas
ja
xlat
inc
adc
xor
xorl
sbb
jl
cld
push
jnp
sti
add
cli
cmp
xor
imul
push
adc
in
bound
mov
jb
xor
pop
jno
xchg
std
mov
sar
xor
jne
xchg
pop
movsl
pushl
lock
xchg
jge
cmp
ss
adc
sbb
je
cli
arpl
adc
clc
ds
testl
lcall
aas
push
jmp
push
ljmp
mov
jl
cld
xchg
jnp
sti
inc
jp
inc
mov
test
fisubrs
jnp
sarl
mov
sar
scas
xlat
mov
cmc
xlat
xor
jb
and
in
mov
div
aad
mov
fdivrs
loopne
fsubr
fmul
fsubrl
fsubrl
push
fsub
fadd
fsubl
faddl
pop
fdivr
mov
mov
stos
in
fidivl
xor
mov
push
or
xchg
cli
imul
add
subb
test
jge
std
test
sti
test
jns
jb
js
clc
stos
ja
imull
jbe
imulb
je
hlt
push
jae
pop
out
cmp
jno
icebp
jns
jns
jns
jns
mov
insl
jns
jns
cltd
cmc
cli
imul
push
ljmp
jns
jns
jns
jns
jns
cltd
cmc
sub
add
jns
jns
jns
jns
jns
jns
inc
dec
test
pop
jp
cli
pop
jns
pop
xchg
js
clc
fs
mull
pop
negb
cmc
pop
je
hlt
pop
repz
jb
repnz
jno
icebp
pop
jo
lock
out
pop
outsb
pop
out
pop
insl
pop
in
pop
insb
pop
in
pop
imul
push
ljmp
pop
or
pop
pop
pop
xchg
pop
test
pop
test
pop
sbbl
sbbb
sbbl
jl
mov
xlat
repnz
scas
movsl
mov
push
sub
daa
es
in
bound
pop
rcrb
cmp
pop
mov
add
inc
mov
subb
imul
std
mov
push
aaa
scas
push
neg
aad
mov
xchg
out
sbb
sbb
sbb
sbb
sbb
in
mov
jno
xor
fstps
shrl
mov
push
lock
push
popl
add
adc
roll
roll
roll
sar
sarl
sarl
std
sarl
sarl
sti
sarl
cli
jmp
xchg
js
clc
push
ja
notl
jne
cmc
sub
hlt
in
out
jae
mov
jns
inc
mov
jmp
ljmp
mov
shll
outsb
fildll
mov
addr16
fistpll
mov
dec
js
push
add
in
rcrl
rcrl
sbb
imull
mov
cld
pop
cli
xor
jns
jns
jns
inc
in
add
test
mov
xor
movsl
inc
xchg
add
popa
mov
data16
iret
push
fistps
fistpll
pusha
pop
push
ja
xchg
fs
bound
pop
mov
rcrl
pop
push
pop
sub
pop
sub
lcall
sbb
jb
sbb
lock
cs
test
and
push
xchg
adc
adc
aas
mov
shlb
lahf
pusha
xor
add
das
cld
test
and
push
push
cmc
rclb
in
stos
mov
jl
inc
jl,pt
jb
sbb
inc
ja
pop
push
data16
imul
or
in
jge
cmp
sbb
sti
fdivrl
pop
push
mov
xchg
sbb
pop
mov
xor
add
insl
test
sub
jns
adc
ljmp
jp
cli
inc
jns
jns
jns
jns
inc
subl
movsl
xchg
mov
in
fcoms
push
aam
shr
stos
cmpsb
aam
rcrb
bnd
cmc
push
je
hlt
sbb
sbb
mov
in
icebp
in
in
in
in
out
iret
mov
insb
fucomip
fildll
jmp
push
ljmp
or
xchg
pop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
lcall
jle
sbb
std
sbb
jnp
sti
jns
popa
test
jbe
mul
jne
cmc
fdivl
fdivl
repz
repnz
icebp
fdivl
lock
outsl
pop
add
out
pop
insl
pop
in
pop
insb
cmp
push
jmp
mov
or
xchg
pop
mov
push
stos
cmp
push
imul
jae
jo
scas
lds
aam
jo
call
lods
pop
sti
pop
pop
inc
pop
and
add
jecxz
ret
test
ds
fsubrl
jns
mov
xchg
je
xor
mov
jp
pop
jns
fdivs
mov
xchg
je
xorl
insl
popw
scas
jmp
push
pop
clc
adc
inc
loop
lods
cli
sbb
sub
js
clc
push
ja
negl
sbb
sbb
sbb
sbb
repz
or
jno
icebp
sbb
lock
out
sbb
out
sbb
in
sbb
je
jmp
push
ljmp
inc
cmp
xchg
mov
test
add
addl
add
addb
jg
lcall
jle
jb
std
jns
inc
rorl
cli
sarl
adc
mov
add
aad
data16
movswl
in
repz
repnz
icebp
jl
pop
mov
pop
out
pop
outsb
cmp
or
sbb
xchg
cmp
xor
jb
inc
push
push
pop
dec
pop
ret
pop
mov
cmp
jmp
insl
pop
les
pop
mov
shlb
add
cmp
das
inc
ja
xchg
test
push
push
dec
jno
je
test
lods
inc
mov
inc
std
add
xor
jns
jno
jae
mov
xor
push
sbb
sbb
shll
xchg
rcrl
in
imul
push
pop
insl
mov
jmp
jnp
sti
pop
jp
icebp
aad
in
in
data16
mov
out
mov
add
cmpb
mov
and
je
in
movsl
push
xchg
dec
lds
lcall
mov
xchg
push
jge
jns
jns
mov
cwtl
jb
retw
test
mov
mov
ljmp
push
out
imul
jne
mov
movsl
xlat
jae
mov
mov
in
aad
call
jno
dec
xor
mov
subb
add
test
subb
test
xor
adc
fs
int
and
push
push
in
xchg
adc
lds
int3
jp
add
or
and
aas
jl
cld
jns
jb
xchg
sub
or
rolb
fcomps
xchg
xchg
mov
les
push
mov
jno
data16
shll
pusha
jmp
in
adcl
insl
xor
mov
jp
jne
js
clc
mov
iret
ss
mulb
aam
hlt
fdivl
repz
xor
icebp
test
out
test
insl
xlat
lods
fistps
xorb
add
iret
repz
xor
mov
sbb
rolb
pop
inc
jmp
adc
cmp
push
shlb
inc
loopne
mov
sti
pop
mov
scas
adc
jl
pop
push
mov
jno
xor
jns
xchg
ljmp
test
ds
lock
mov
mov
sar
mov
shlb
scas
xor
in
fucomip
xlat
daa
iret
add
mov
cmp
orb
repnz
push
out
dec
xchg
test
pop
add
cld
push
jnp
sti
xchg
jp
inc
sub
jp
jne
mov
aam
rolb
add
cld
or
lods
sti
push
call
jns
cmp
mov
mov
lds
xchg
iret
icebp
fildll
sub
lret
push
in
les
pop
cld
pop
sbb
cmp
mov
aam
stos
fsubr
fsubrl
std
hlt
cmp
inc
out
push
stos
mov
sub
in
mov
add
fsubrs
icebp
jae
adc
cmp
jne
xor
xlat
scas
dec
in
or
sub
jl
add
xor
or
call
fadd
fsub
fsub
fsubl
aaa
inc
xchg
js
xor
cmp
out
pop
int3
aam
sub
leave
fsubl
pushf
loopne
mov
pushf
ljmp
mov
xchg
xchg
xchg
push
pusha
les
cmp
ljmp
adc
mov
push
je
mov
and
sbb
int
dec
je
mov
jns
mov
and
in
in
in
add
ja
xchg
push
push
in
mov
inc
ljmp
shll
aam
call
fsubl
mov
repnz
pop
fsincos
xchg
adc
mov
stos
dec
xor
cmpsl
scas
or
xchg
in
dec
jmp
inc
cs
je
xor
movsb
out
out
aas
push
call
sar
jmp
sti
test
sbb
icebp
insl
xchg
push
imull
test
or
jae
inc
cmp
pop
xchg
subb
jle
das
jge
std
sbb
sbb
sti
sbb
mov
jns
jae
xchg
jmp
push
sub
out
in
pusha
sbb
shrb
in
push
test
xchg
inc
mov
rcr
aam
js
jmp
pop
sub
aas
mov
jp
sbb
in
inc
out
fistps
cwtl
xor
ss
xchg
inc
add
test
mov
add
sbb
fistpll
fistpll
pop
jge
cmp
sbb
sti
sbb
cli
pop
sub
pop
clc
jb
test
ljmp
add
jns
adc
sub
pop
out
xor
sub
insb
jecxz
aaa
and
mov
xchg
push
in
in
data16
orl
sbbb
xor
pop
cmp
loop
mov
mov
xor
xor
pop
and
pop
pop
ja
nop
test
fcompl
sbb
adc
pop
mov
pop
push
stos
sub
xlat
cld
mov
test
jl
sbb
jae
roll
xchg
test
inc
fwait
hlt
add
fildll
jmp
test
mov
jl
hlt
out
mov
dec
je
imul
je
test
dec
inc
inc
roll
in
mov
out
cmp
sub
imulb
std
hlt
fbstp
repz
jb
inc
fbstp
icebp
pop
jo
scas
outsl
sbb
sbb
out
sbb
sbb
sbb
jmp
add
jns
ret
mov
or
xchg
pop
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
inc
incb
xchg
out
stos
cld
fdivrl
sti
jl
add
sarb
clc
cld
testl
cmc
scas
shl
mov
out
les
jno
insl
jo
lock
out
fsubrl
out
jl
add
stos
jmp
push
stos
imul
sbb
push
inc
mov
add
orl
sbb
sbb
sbb
ljmp
jns
jns
jns
jns
jns
inc
test
adc
clc
mov
mov
mov
cmpb
inc
mov
addr16
movsl
cwtl
mov
mov
int3
insb
ds
sti
jp
out
pushf
fdivrl
cmp
clc
shlb
imull
jne
cmc
jl
std
xorb
push
and
mov
cmp
pop
outsl
jle
outsb
leave
out
test
insb
test
cmp
pop
imul
fidivrs
adc
cs
in
or
sbb
js
xlat
repz
jl
orb
jle
cwtl
adc
mov
or
push
jp
lock
aam
cmp
lret
xchg
leave
mov
push
sbb
xchg
adcb
pop
xchg
sbb
shr
mov
sbb
sbb
aas
sarl
call
add
sti
subb
in
add
js
clc
xchg
ja
divl
cmc
in
in
in
in
inc
jb
jne
out
sbb
lock
fsubrl
out
fsubrl
in
fsubrl
fsubrl
jmp
push
ljmp
fmull
faddl
aam
xchg
mov
jl
mulb
jns
xor
ljmp
outsl
mov
or
cmp
xchg
cmpsb
call
pushf
std
mov
jns
cmpsb
test
jl
jnp
sti
xor
and
jne
cmc
sub
xor
jmp
push
mov
aam
fdivs
xchg
imul
roll
rolb
jl
cli
test
jge
std
sbb
mov
mov
out
inc
scas
cli
call
imul
jbe
idiv
je
hlt
jns
jns
in
xchg
fdiv
fdivl
lock
out
cld
mov
out
shrl
in
jae
mov
in
in
in
in
in
in
in
in
in
in
in
data16
mov
sbbl
pushf
jge
test
jnp
sti
jns
jns
and
div
divb
push
repz
clc
cld
ja
negl
cmp
jne
cmc
pop
je
hlt
pop
jae
cmp
mov
icebp
test
outsl
pusha
clc
outsb
pop
out
cmp
add
pusha
ds
ljmp
add
sti
je
jns
jns
jns
jns
jns
sarl
in
in
in
add
js
clc
push
ja
jl
lcall
je
hlt
jns
movsl
push
jnp
in
cld
sti
shl
aam
adc
outsl
sbb
sbb
sbb
xlat
jp
fucomip
fildll
jmp
push
ljmp
filds
cli
sub
jmp
pop
sbbl
cmpb
add
and
in
in
in
in
in
in
in
in
in
inc
sti
cmp
cmp
insl
mov
mov
mov
daa
cmp
addr16
inc
add
pop
rcrl
js
fdivr
test
scas
push
fists
iret
loopne
pop
in
cmp
inc
and
fstl
inc
out
add
test
jae
or
add
add
sub
and
sub
pop
stos
jp
icebp
mov
test
inc
and
ljmp
les
stos
push
aaa
mov
cmpsb
int
xor
mov
push
js
fnstsw
aas
loope
outsb
in
data16
mov
pop
mov
mov
scas
movl
lds
jns
pop
cmp
cli
pop
jbe
cmp
push
jns
sarl
mov
cmp
fbstp
lea
cmp
mov
leave
ror
shll
test
mov
inc
mov
mov
int
pusha
enter
mov
sub
loope
in
les
xor
sbb
push
jno
rcrl
xlat
call
cld
out
xchg
stos
mov
shr
xchg
les
stos
loope
pop
sbb
mov
loopne
mov
data16
fs
fbld
je,pt
js
dec
stos
sub
call
in
mov
test
sbb
fisubrl
fdivs
ss
nop
mov
aaa
xchg
inc
aam
fadds
loop
rcr
fdivrl
jl
std
fwait
jns
jns
and
icebp
adc
push
or
xlat
push
adc
aam
fsubr
lret
cli
stos
roll
xor
xor
adc
cld
mov
xchg
inc
out
stos
push
dec
das
inc
jg
stos
jae
mov
dec
pop
dec
cmp
pop
lock
insb
jo
inc
mov
inc
xor
xor
pop
cmp
jge
jae
jl
movsl
xor
or
jb
sarl
jns
movsl
es
pop
push
cmp
test
int3
stos
mov
inc
cmp
or
sbb
sbb
lock
cmpsl
js
inc
iret
sbb
pusha
fwait
inc
sbb
pop
outsb
les
push
jl
xor
cmp
sti
sub
aad
in
mov
addr16
inc
cmp
add
cmp
xlat
ds
pusha
push
push
jno
push
fs
inc
int
inc
shrb
dec
add
out
fistpll
sbb
outsb
aaa
shll
shrl
mov
mov
test
or
les
add
inc
test
sbb
fnstcw
mov
out
push
ss
lret
repz
push
jl
adc
xchg
insb
cmp
mov
mov
xor
stos
dec
lods
sub
imul
arpl
inc
pop
and
ljmp
fstp
sbb
pop
fcompl
aam
shlb
mov
pop
out
iret
cmp
jp
nop
and
jae
pop
sar
jnp
das
cmp
lods
push
in
rorl
call
sahf
fdivrl
pop
jns
jns
test
ss
and
xor
insb
lock
lds
fsts
insl
xchg
jg
jmp
jmp
adc
movsl
sub
inc
inc
and
cmp
adc
sbb
sbb
sub
imul
movsb
sbb
sbb
sbb
sub
scas
cmp
mov
mov
psrlq
xor
mov
mov
mov
icebp
xchg
in
jecxz
cmp
popf
jns
jns
jns
and
pop
push
xor
adc
push
sbb
or
sub
sbb
xor
mov
mov
movsl
sub
stos
sbb
repz
test
int
pop
aaa
ja
std
int
xlat
cmp
push
inc
cli
mov
into
cwtl
jge
std
sbbb
mov
lahf
jl
push
cli
outsb
int
pusha
scas
cmp
sti
les
mov
data16
mov
ret
cmp
negl
std
add
cmc
repz
das
pop
in
sub
jmp
sub
xchg
sar
cmc
adc
xor
push
leave
je
add
fs
jecxz
ss
jae
mov
sti
fistpll
out
xor
imul
jg
xchg
dec
jl
xchg
hlt
test
jmp
jl
cmpsb
and
hlt
xor
scas
and
loop
sbb
jge
cs
pop
mov
inc
mov
add
or
out
fistps
xchg
mov
ret
dec
sbb
mov
inc
bound
xchg
jmp
int
pop
ljmp
pushf
xor
ret
mov
rcl
dec
nop
pusha
pop
dec
jmp
sub
lahf
leave
xlat
rcrb
mov
cld
scas
imul
mov
ret
lods
std
or
jne
push
xorl
sub
xor
cld
loop
mov
std
xor
loope
mov
jecxz
paddb
lock
stos
test
and
push
push
or
fcmovb
cwtl
adc
cmp
shll
mov
mov
outsl
pop
push
push
jno
rorl
call
add
js
fxch
fdivs
dec
rorl
jo
xorb
jg
fdivr
cmp
xchg
shll
cmp
fidivrl
sub
daa
pop
test
push
jns
out
sub
xor
imul
ss
pusha
sar
xchg
lods
loop
decb
sub
adc
push
insl
mov
or
lock
or
inc
xchg
test
xchg
je
mov
xchg
sub
jno
pop
xchg
dec
inc
ljmp
add
sub
fldt
cli
sub
int3
cli
ds
scas
cmpb
push
jp
mov
push
cmp
int3
aas
push
cmp
xchg
mov
stos
inc
enter
xor
repnz
hlt
mov
pusha
imul
push
aad
in
call
inc
xlat
jo
push
xor
leave
out
jmp
jmp
das
inc
inc
stos
fucomip
mov
rclb
add
sti
xchg
ret
push
std
orl
int3
pop
sub
adc
std
je
xor
push
xor
sub
inc
pop
add
cld
enter
mov
mov
sti
push
jnp
and
or
cmp
rol
imul
icebp
add
fdivrl
xor
scas
inc
sub
mov
add
les
xor
scas
dec
add
repz
sbb
cli
scas
push
sub
cmpsl
xlat
xor
cli
jl
aam
das
fistps
xlat
fcmove
mov
stos
jae
das
sub
loopne
mov
outsb
inc
mov
push
insl
les
pop
jnp
adc
xor
push
out
inc
sub
lods
jp
repz
scas
pop
fcmove
gs
jns
rol
insb
outsb
test
loope
push
jle
faddl
aad
daa
ret
mov
mov
in
push
pop
std
mov
jns
movb
rclb
je
pop
aam
outsb
das
sbb
lods
sbb
sbb
mov
xor
pop
inc
cmp
stos
aad
in
inc
mov
dec
inc
or
inc
out
sti
jp
cld
mov
jne
movsl
or
push
sub
data16
mov
icebp
push
clc
cwtl
push
repz
jo
cmp
mov
cs
int
jnp
xchg
roll
mov
test
clc
pop
mov
xchg
out
cld
jne
mov
movsl
pop
xchg
iret
mov
shlb
mov
icebp
xorb
test
xor
push
add
jge
jae
xor
xchg
xor
imulb
lret
pop
les
ljmp
or
mov
fs
lret
sbb
roll
mov
mov
push
push
sbb
jg
inc
addl
mov
push
jb
and
scas
xchg
fisttpll
inc
mov
pop
jns
movsl
js
xlat
call
ror
mov
add
mov
repnz
sbb
mov
sub
cmp
sub
stos
jbe
repnz
out
cmpsb
or
subl
adc
cmp
pop
jns
xor
mov
rol
imul
jp
inc
fnstsw
lock
in
jl
xchg
or
or
inc
sub
jnp
and
movsl
xor
dec
enter
das
xor
hlt
inc
pop
xchg
mov
les
or
cli
dec
add
icebp
cli
cmp
push
lods
mov
fidivrs
push
lea
xchg
and
loope
ljmp
pop
stc
sbb
cmp
ficoml
cmp
ljmp
push
adc
pop
jnp
ljmp
cmp
mov
adc
shll
fmul
out
loopne
fsubrl
rorl
sub
sub
inc
pushl
mov
push
das
dec
dec
mov
leave
call
cmpl
inc
lahf
mov
inc
xor
inc
ss
xchg
es
outsb
pop
movsl
sub
and
fwait
and
in
lock
cwtl
pop
mov
test
ja
adc
out
fisubrs
aam
dec
scas
fnstenv
aad
data16
imul
xchg
and
mov
out
inc
stos
pushf
sub
sahf
call
test
sub
xchg
or
popa
sbb
mov
jne
jle
push
in
add
sti
das
xchg
jno
out
add
dec
mov
add
ds
and
mov
arpl
sbb
mov
insb
in
cmp
call
jne
sub
sbb
aas
xchg
pop
jmp
xor
clc
xorl
cmp
mov
sbb
or
cmp
sub
mov
clc
minps
out
mov
push
int
aas
stos
cmp
mov
push
xor
rcl
out
mov
add
outsb
test
sub
sub
pop
out
rorb
add
jns
in
jae
jns
rcrl
mov
jno
scas
mov
xor
in
outsb
sbb
sub
pusha
pop
lahf
cmp
lods
mov
pop
loop
lds
sub
inc
xchg
int
mov
adc
push
fisttps
cli
insb
das
or
inc
lret
pop
fcompl
ja
rcll
push
into
push
cmp
jl
repz
or
jb
sbb
divb
adc
mov
je
push
mov
add
xor
jb
xor
jno
sti
add
ss
sti
sub
cli
mov
push
sub
cwtl
test
divl
adc
mov
mov
repz
pushf
pop
fs
and
ret
loopne,pt
jmp
cli
mov
das
aam
or
aas
insb
mov
jns
add
add
adc
sbb
push
cmpsl
leave
call
call
test
pusha
repz
js
sti
sbb
cld
movsl
xor
cmp
or
xchg
xor
sub
loopne
sub
ja
mov
fldenv
testb
test
mov
jbe
insb
std
add
hlt
xchg
icebp
and
push
add
jl
loope
add
test
aaa
ljmp
jne
jo
loop
aam
mov
call
dec
nop
mov
insb
sbb
shrl
cmp
sbb
ficompl
cs
imul
hlt
in
aad
in
in
in
inc
dec
add
cwtl
add
rcr
sarl
insb
push
shlb
xchg
mov
jno
fsubrl
inc
jns
loop
add
sub
mov
mov
xlat
in
dec
out
pop
or
shrb
mov
cmp
leave
jb
sbb
inc
sub
stos
add
dec
inc
aaa
out
imul
sub
mov
shlb
popa
adc
cli
xchg
lods
and
dec
mov
cmc
inc
dec
sbb
push
xor
stos
dec
add
test
mov
movsl
sub
pop
add
and
lock
clc
divl
xchg
sub
insl
xchg
xchg
sub
mov
ja
xor
or
mov
xor
jg
insb
sbb
xor
cltd
mov
mov
mov
mov
clc
xor
js
das
iret
mov
dec
push
stos
inc
scas
xor
sbb
repnz
test
ja
cmp
and
cwtl
sti
ret
sub
ljmp
push
lcall
cmp
jle
cmp
mov
pop
in
xchg
loopne
stos
out
jnp
mov
sbb
dec
inc
cmp
cmp
cwtl
jne
sbb
imul
push
inc
test
or
and
sarb
ret
in
in
test
xor
data16
bound
mov
sbb
mov
adc
jp
mov
je
inc
mov
imul
aam
xchg
fsubrs
movsb
jnp,pn
shll
cmp
jge,pt
jle
lock
mov
cld
int
xor
test
inc
in
sub
sub
inc
lea
mov
mov
rclb
sti
cmc
pop
ss
dec
jge
cltd
mov
xor
xor
test
out
cmp
mov
sbb
rcll
jp
cli
std
push
add
divl
movaps
inc
xchg
and
jo
ja
xlat
dec
inc
outsb
mov
sub
cmpsb
jnp
out
and
lds
sti
cld
jno
xchg
pop
sbb
xchg
push
out
test
stos
inc
inc
mov
sbb
in
sub
sub
or
or
jns
sbb
lret
push
popf
js
push
ret
xor
cmpsl
sti
xchg
fisubrs
jnp
cmp
pop
js
repz
push
dec
sbb
xor
aam
mov
lods
out
je
pop
das
cmp
jne
adc
xor
scas
pusha
dec
sahf
push
dec
in
inc
fsubl
pop
call
nop
movsl
jns
addr16
movsb
in
ds
fwait
push
cwtl
cmp
inc
push
sti
dec
mov
stos
cmpl
jge
adc
xchg
dec
leave
push
jle
jmp
dec
fisttpll
cwtl
mov
icebp
adc
scas
xor
aam
xchg
call
sti
ret
jp
xor
sbb
popf
xor
into
cwtl
mov
sti
sub
cmp
test
inc
js
jns
jo
inc
pop
add
inc
xor
adc
pop
cwtl
add
rcll
stos
mov
lahf
loopne
shrb
dec
repz
cmp
adc
scas
and
and
push
sub
or
jno
pop
inc
imul
mov
test
hlt
and
mov
or
xor
cmp
hlt
inc
xor
jb
mov
pop
fstpl
sarw
notb
xchg
fistps
xor
test
test
sub
fs
bound
xchg
dec
push
cmp
pop
lods
scas
ljmp
movsb
daa
jg
xchg
xlat
mov
sub
sahf
add
loop
shrb
inc
scas
sub
xchg
cmc
mov
push
lahf
lods
cwtl
pop
shr
popa
push
jns
test
push
jnp
movsl
fdivrs
push
add
cli
loopne
clc
test
jmp
fdivs
je
cli
lods
das
jns
pop
push
xor
dec
jno
xchg
mov
adc
data16
not
mov
push
nop
shll
lahf
pop
sbb
jae
push
insb
negl
push
inc
jne
xor
into
mov
mov
cmp
inc
jne
fistl
xchg
cmp
aaa
aam
jmp
xchg
mov
out
mov
adc
test
ja
wbinvd
add
add
loope
cli
pop
outsb
push
or
mov
jnp
push
pusha
aas
fildl
cwtl
xchg
push
pop
rolb
or
popf
pusha
adc
int
lods
daa
sbb
mov
ret
jg
and
cmp
mov
repnz
xchg
and
or
aam
adc
xor
sbb
mov
pop
inc
sub
inc
fs
xlat
xchg
cwtl
notb
mov
inc
dec
push
mov
cmp
pop
jno
dec
dec
xchg
scas
ljmp
idivb
test
aad
js
push
nop
shll
inc
ljmp
push
lods
std
outsl
dec
push
jb
mov
lods
sub
xor
ret
jecxz,pn
xor
push
cmp
lods
mov
mov
lock
xor
cli
cmp
sub
pop
jl
js
test
ret
mov
or
test
test
add
sti
sub
cmpsb
fdiv
arpl
cmp
mov
push
dec
inc
add
insl
add
cwtl
adc
sarl
push
xor
out
repnz
add
sbb
jno
xchg
cmpsb
pop
gs
pop
sub
add
pop
xor
das
mov
add
adcl
js
cld
and
cmc
cs
mov
dec
clc
inc
cmp
iret
data16
loop
sub
jg
dec
pusha
add
testl
js
clc
add
mov
rcrb
push
mov
mov
icebp
jle
xor
inc
hlt
jno
rorl
fadd
scas
pushf
std
inc
and
pop
mov
sub
add
and
idivl
imul
jns
movsl
adc
pop
ss
add
call
aas
jnp
scas
movsl
lret
xorl
xchg
test
aaa
ret
inc
mov
mov
jne
adc
out
add
sub
push
xchg
and
ret
data16
imul
push
out
cli
std
cmc
mov
outsb
repz
pushf
incb
loope
test
xor
mov
mov
sbb
and
inc
pop
cmp
arpl
pop
inc
loop,pt
andb
das
pop
inc
fwait
stos
ffree
mov
faddl
cmp
rcr
insb
and
xor
pop
or
mov
imul
cli
cmp
scas
out
pop
mov
das
xlat
mov
push
and
mov
aas
jge
aad
mov
mov
mov
dec
popf
repnz
cmp
out
add
icebp
dec
xor
pushf
cli
jno
jl
cmpsb
out
inc
push
lods
shll
and
pushf
sbb
in
cmp
es
repnz
adc
aam
aaa
das
fildll
mov
jb
inc
sub
mov
mov
sysenter
inc
cmc
addr16
subl
jmp
push
pusha
jo
inc
es
adc
ficompl
push
push
add
add
adc
shrb
test
movsb
xchg
mov
ss
push
xchg
add
xchg
test
push
pop
push
in
jo
ljmp
mov
add
mov
js
dec
ret
dec
jae
sbb
mov
daa
jp
cmp
sti
jle
pop
ds
xor
mov
inc
out
cli
rcl
push
xchg
pusha
jmp
mov
add
push
ret
test
push
inc
xor
mov
scas
inc
imul
xorb
out
inc
mov
in
inc
xchg
push
jp
add
das
push
xorb
push
ret
test
lret
sti
sub
shll
xchg
les
add
movsb
repz
adc
dec
xor
mov
mov
jns
ss
mov
and
cmc
lods
lret
cmp
or
loope
cmp
sarl
pop
out
bndcn
das
fwait
mov
push
out
test
mov
jbe
xor
mov
inc
test
jp
out
ljmp
add
cvtps2pd
aas
pop
hlt
push
stos
dec
ljmp
push
jnp
aam
sbb
or
and
std
inc
jns,pt
cmpsb
cwtl
mov
cld
xor
je
outsb
int3
inc
xchg
and
mov
shl
out
inc
xchg
xor
adc
xchg
imul
jae
xchg
push
lcall
rol
insb
in
pop
adcb
inc
lods
sbb
cli
ss
inc
xchg
aam
clc
inc
inc
push
dec
cli
xor
subl
mov
leave
test
ss
ss
bswap
arpl
add
xchg
sbb
insl
xchg
jb
cmpsb
lds
leave
inc
pop
cmc
sub
mov
imul
sbb
push
pop
inc
aaa
imul
dec
cmp
cld
jp
xchg
mov
mov
cmp
call
xor
cmp
fcoms
jnp
xchg
addr16
popa
and
dec
jl
mov
mov
add
daa
dec
xor
rcll
mov
mov
pop
jg
pop
sbb
pushf
and
mov
mov
jl
add
stos
xor
sbb
lods
xor
shr
mov
cmp
mov
inc
loopne
xchg
mov
roll
push
mov
ret
xor
cli
jecxz
mov
mov
add
jnp
aam
pop
test
and
repnz
cmc
js
icebp
repz
movsl
mov
adc
arpl
xor
cmp
ds
jmp
push
iret
fdivrl
pop
movsb
ljmp
and
pop
loop
pop
test
sub
jb
lret
xor
inc
lods
xor
sbb
movsb
mov
sub
rolb
nop
add
movsb
lds
hlt
mov
add
push
pop
mov
or
test
sub
pop
mov
add
mov
cmp
mov
test
and
jle
and
pop
test
cmp
jns
xchg
ret
mov
xchg
push
jp
leave
aam
mov
push
andb
inc
cmc
aam
or
scas
push
scas
sbb
mov
jo
xor
jae
inc
sub
inc
xor
dec
jge
sub
add
sahf
cmovae
xorl
xchg
fisttps
pop
std
ss
push
inc
shrb
xor
inc
pop
lock
jno
data16
mov
mov
pusha
clc
jmp
call
pop
xchg
test
data16
xor
push
out
add
sti
or
repz
mov
jne
adc
loopne
sub
mov
add
testb
inc
sub
sub
pop
mov
fadds
adc
bound
xor
push
fs
inc
nop
lret
dec
loopne
jl
sti
add
cmpsb
push
ret
xchg
int
lret
dec
sbb
fstpt
iret
mov
cmp
push
inc
out
push
iret
cmp
add
mov
sti
xor
fdivs
sbb
aam
ror
or
jb
push
mov
push
mov
js
es
dec
lods
xchg
lods
inc
ss
ja
push
push
mov
leave
mov
ds
out
jp
pop
js
add
xor
xchg
pop
and
mov
pop
cs
jnp
xlat
and
loop
loopne
subl
add
outsl
movsl
out
jb
movlps
jns
push
push
gs
hlt
insl
je
sub
dec
das
push
inc
test
dec
imul
icebp
fldl
mov
mov
test
push
push
dec
out
push
ret
sub
idivl
out
in
pop
gs
cld
xchg
xchg
adc
cmp
cwtl
xor
pop
rcl
jbe
out
xchg
push
mov
enter
shrb
pushl
inc
xchg
std
cmp
clc
fwait
push
int
stos
mov
aas
fs
fstp
ss
jo
add
mov
lret
out
jb
mov
jno
shrb
jmp
popa
xlat
jp
ss
dec
jns
add
out
call
xchg
add
stc
inc
xor
push
jne
dec
sbb
dec
xchg
mov
in
out
inc
das
cmp
gs
adc
mov
pop
sbb
lods
out
cmp
mov
xor
test
movsb
xchg
mov
push
mov
cmp
aam
mov
sarb
jnp
xorl
std
mov
xchg
sti
pop
xchg
test
xchg
jnp
shll
hlt
ret
loopne
aaa
push
das
je
mov
adc
adc
shll
std
cld
loopne
test
int3
popa
push
add
and
push
cmc
rcll
inc
cmp
sub
movsl
sub
loope
aam
ret
fs
xor
lret
icebp
or
daa
out
std
mov
fldcw
rclb
in
imul
fbld
je
push
inc
test
pop
sti
insb
out
imul
iret
ss
outsl
mov
das
shll
jp
aad
ss
test
dec
inc
out
scas
xchg
not
jge
std
movsl
sbb
and
or
or
sub
adc
push
push
cmp
insl
xor
in
and
out
nop
xchg
in
call
add
imul
movsl
or
iret
mov
pop
or
xlat
out
out
lds
in
js
imul
nop
jbe
jl
jno
fmuls
push
push
jb
je
jns
xchg
push
call
cld
mov
imul
pop
sub
inc
scas
adc
lret
pusha
ret
mov
jmp
into
push
add
pause
pop
popa
push
loopne
sahf
sbb
in
adcl
xchg
outsb
adc
jb
push
cli
push
mov
enter
pop
mov
jmp
divb
xor
sub
mov
inc
xchg
in
mov
out
cmpsl
in
mov
push
inc
jl
xchg
ljmp
cmp
xchg
sub
cmp
jecxz
iret
fists
cmc
out
or
xlat
aaa
in
pop
mov
js
dec
pop
cmp
test
add
xor
adc
add
popf
test
pop
add
inc
inc
push
add
scas
xchg
insb
outsb
mov
mov
dec
lret
dec
cmc
or
aad
aad
in
fwait
add
jge
lret
push
bound
mov
xor
std
scas
lods
mov
call
and
or
mov
inc
xor
fldl
pop
pop
xor
push
out
jae
xchg
or
sub
mov
xor
adc
incb
xlat
mov
loop
pop
lea
push
jbe
mov
cmp
push
insb
push
scas
hlt
cmp
xchg
repz
xor
imul
rcll
xor
aaa
aaa
cltd
dec
dec
cld
add
add
sub
mov
xchg
adc
jo
out
in
jae
mov
pusha
lods
or
call
sbb
aaa
add
andb
mov
and
aad
and
pop
xchg
mov
out
sahf
stos
mov
data16
std
push
movsl
push
hlt
xchg
adc
iret
inc
movntq
out
pop
bound
xchg
sub
rcll
and
lcall
add
loope
sarb
jb
out
mov
repnz
inc
lods
call
mov
pop
xor
inc
hlt
outsl
mov
jae
jp
xor
popa
push
repz
je
adc
xor
dec
icebp
or
xor
loopne
mov
xor
ss
add
add
or
stc
or
test
inc
int
mov
in
or
test
fcoms
push
xor
mov
leave
cwtl
mov
out
mov
cmp
xor
arpl
or
cmc
out
cld
lods
cmpsb
jo
imul
mov
add
test
ljmp
cwtl
repz
lret
dec
mov
jle
pushf
pusha
dec
fdivrl
adc
sbb
jb
js
add
adc
push
daa
stos
xlat
inc
aas
dec
dec
sti
ljmp
stos
ds
push
les
adc
addr16
xchg
xchg
adc
push
mov
ljmp
test
push
insl
out
ljmp
ljmp
rcll
sti
sub
or
add
xor
rcrl
cli
fsts
insl
insl
cmp
push
push
into
push
push
int
add
movsl
test
lea
jno
sarl
cwtl
out
jbe
xor
xor
mov
xchg
adc
add
leave
aad
sbb
cmp
loope
jnp
addr16
out
cmp
and
lock
sbb
aaa
inc
aam
sub
pop
arpl
mov
pop
jb
repnz
je
test
cmp
sti
cmp
test
ret
sti
js
adcb
xor
clts
ljmp
stc
xchg
push
test
inc
divb
xchg
mov
dec
sti
sar
xor
push
xorl
cmp
xor
cmp
outsl
test
fmuls
sbb
adc
sub
xchg
or
jno
aam
insl
mov
shll
sti
movzbl
inc
movzwl
scas
inc
push
fldcw
scas
cmpsw
fs
mov
mov
daa
daa
in
test
aam
sbb
fistl
inc
lret
pop
das
movsb
or
push
sbb
stos
mov
push
lock
lds
add
jns
adc
lds
pop
inc
ss
mov
jle
dec
mov
and
jg
test
cwtl
inc
xchg
jno
ret
ljmp
ss
lcall
mov
popf
out
sbb
add
cwtl
loop
xchg
repz
shrb
mov
lcall
mov
xchg
push
incl
ret
mov
std
inc
xor
jp
lods
inc
cmp
test
add
int
pop
push
push
push
cs
jmp
push
stos
dec
cmovns
mov
scas
sub
in
push
mov
mov
xor
lret
mov
mov
xchg
push
and
pop
rcll
inc
jmp
sub
mov
mov
fcmovnbe
pop
push
mov
das
push
inc
inc
popf
fdivrs
push
pushf
fiadds
mov
sub
scas
dec
jbe
lods
mov
mov
add
sar
das
lock
andl
xchg
sub
repnz
loop
cmp
inc
aad
sbb
sub
xor
xlat
mov
adcb
mov
inc
fsubr
inc
push
test
rcll
icebp
shr
and
sarl
push
mov
xchg
sbb
jno
push
and
xchg
outsb
js
push
insb
shll
js
bound
push
mov
ljmp
ss
push
ljmp
ss
push
cmc
std
das
xor
mov
and
mov
cwtl
cmp
cmp
aam
test
push
xor
cmp
hlt
cmp
jnp
daa
mov
pop
jge
out
push
jmp
aam
or
fstps
lods
roll
dec
mov
mov
or
out
dec
push
inc
mov
sub
shl
imul
inc
mov
ja
dec
sbb
xor
pop
aam
outsb
outsb
mov
repz
out
mov
mov
add
xor
dec
aam
sti
mov
loopne
and
mov
rclb
jno
add
push
repnz
insb
je
jnp
sti
and
rolb
pop
orb
es
cmp
sti
jns
jns
adc
rcl
jl
sub
int3
or
cmp
xchg
add
mov
aam
shlb
xor
in
int
sti
jle
shll
add
add
mov
jno
xchg
or
sarb
xchg
jle
daa
xor
xor
lock
mov
xchg
mov
in
inc
fdivs
dec
ss
ljmp
mov
or
mov
inc
push
test
push
pop
or
jnp
push
mov
mov
inc
mov
ss
sti
sti
or
inc
or
movsbl
idivb
add
push
insl
sub
loope
pop
xchg
repnz
and
xor
mov
inc
insb
sub
gs
fdivs
inc
mov
imull
ret
mov
xchg
sub
push
int
cmp
sub
aad
ficoms
cwtl
cmpb
std
add
xchg
adc
cmpb
push
movsb
add
jne
cmpl
jb
mov
mov
shll
inc
or
repnz
int3
test
add
mov
outsl
out
xchg
mov
js
pop
ljmp
stc
lahf
std
mov
rol
ja
inc
iret
cmpsl
xlat
mov
lock
mov
pop
dec
cli
pushf
lret
scas
cltd
pusha
ret
add
aas
inc
inc
je
adcb
in
jmp
add
vorps
push
xor
rcl
call
aad
inc
roll
outsb
lds
stos
aam
js
filds
sarl
cmp
cmp
push
mov
cli
jne
mov
xor
iret
mov
inc
sub
adc
pop
sbb
or
faddl
adc
cmp
xor
nop
jns
mov
test
mov
ss
and
mov
mov
xadd
ljmp
inc
and
mov
mov
xchg
stos
jns
pop
sbb
xorb
ljmp
je
stc
jnp
js
jmp
int
mov
push
inc
scas
push
and
ljmp
cmp
repnz
test
sub
test
stos
cli
ss
test
adc
mov
js
pushf
inc
xorb
rorb
scas
pop
stos
cmp
mov
enter
jno,pt
aam
sbb
xchg
pop
push
push
push
sbb
xlat
jmp
pop
daa
or
pop
sub
add
mov
dec
lret
gs
dec
cmp
rcrl
imul
cmp
jl
cld
xor
ljmp
dec
pop
dec
and
rclb
stos
ds
cli
mov
pop
test
faddl
or
add
fistpll
sti
fnstcw
inc
shrl
inc
push
leave
test
push
sahf
std
pop
je
out
outsb
test
jo
mov
xchg
mov
je,pt
xchg
xchg
movsl
sbb
sub
inc
push
jmp
or
adc
stos
dec
imul
je
setae
sub
out
jmp
jmp
mov
rcrb
test
cmp
fsubrl
lock
adc
cmp
scas
jno
xchg
adc
inc
xor
and
mov
sbb
add
cld
andl
xchg
movb
subb
add
push
adc
repz
xchg
cwtl
lcall
incb
push
add
data16
pop
mov
mov
hlt
pop
push
inc
fnstcw
ljmp
outsb
xchg
mov
loopne
mov
mov
sahf
sbb
fidivl
and
repz
adc
roll
sub
xchg
mov
shlb
cmp
lret
dec
addb
addb
pop
sbb
roll
iret
mov
and
jne
jmp
add
xchg
sbb
cmc
jno
xchg
and
fdiv
mov
movb
scas
inc
push
cmp
xchg
imul
add
xor
adc
hlt
out
pop
cmp
inc
dec
hlt
push
inc
xchg
out
cmp
scas
dec
pusha
dec
lahf
cmp
sbb
mov
test
jge
mov
mov
inc
scas
aaa
leave
and
xchg
stos
mov
jle
pop
pop
xor
sti
repz
xor
out
icebp
adcb
xor
hlt
sar
push
dec
jae
add
sbb
and
inc
jno
xchg
fdivl
xor
int
jo
sbb
cmp
out
dec
insb
lea
or
pop
xor
data16
inc
dec
imul
xor
clc
push
iret
mov
cmp
ss
push
out
sub
sbb
je
cmp
jp
out
jne
jp
jo
js
repz
adc
ret
xchg
and
je
test
ljmp
adc
lcall
rorb
in
test
xchg
cmpsl
adc
movsb
sbb
sbb
call
sub
xor
daa
mov
jno
cmp
xchg
out
mov
std
lods
out
es
ja
inc
cmp
jne
dec
std
push
lds
aad
adc
stos
sub
or
movsl
ds
and
into
test
andl
cmp
pop
lock
cli
cmc
jb
roll
std
popf
cwtl
sbbb
jle
mov
push
dec
cmp
lret
jmp
add
cmp
cmpl
in
jns
dec
mov
mov
ds
lret
bnd
add
inc
loop
scas
js
pop
jnp
xor
xchg
xchg
mov
jns
push
insl
aam
adc
sbb
hlt
mov
and
ljmp
or
or
push
jmp
lods
arpl
dec
xchg
repz
jno
xchg
xor
sub
leave
sti
pop
mov
inc
jl
jne
nop
add
xchg
es
rcrl
popa
cmp
outsb
addr16
in
outsb
jge
int
aaa
cmp
mov
fwait
cmp
movsb
insl
cmp
cmp
xor
shl
out
dec
mov
icebp
add
iret
cmp
test
sbb
sbb
inc
sub
je
loope
xor
jg
push
and
fnsave
out
cmp
jo
ret
push
mov
sbb
or
out
push
inc
jg
add
jmp
dec
lock
sahf
and
idivb
mov
add
inc
mov
ja
not
jbe
mulb
jne
js
je
cld
repz
jns
jns
xchg
in
out
cmove
sbb
in
sbb
mov
ljmp
sub
pop
test
cmpsb
xorl
cld
sub
and
jle
xor
outsb
std
push
ss
pusha
cmp
cmp
lock
sbb
test
mov
pushf
mov
or
test
mov
cmp
or
mov
jp
mov
imul
sbb
xlat
lods
fidivrl
mov
std
test
mov
std
jp
push
mov
add
scas
cmp
andb
ds
cmp
add
jecxz
jns
fwait
shll
iret
fadd
mov
add
fxch
cmp
fisubs
sub
popa
dec
push
fwait
mov
jnp
mov
dec
ss
idivl
cmp
jl
jnp
arpl
sti
addb
fucomip
add
push
cmp
imul
sub
fwait
push
inc
cmp
add
inc
xchg
mov
clc
scas
in
testb
mov
sbbb
add
and
loopne
sub
pop
outsb
mov
aam
jb
xor
das
test
jnp
jae
jae
daa
movb
push
or
sbb
test
dec
add
jne
sbb
adc
ret
mov
xchg
fistpl
dec
adc
xlat
icebp
dec
fbld
or
cmpsb
add
pushf
cld
pop
mov
cmp
xor
push
cmp
mov
add
or
outsl
xchg
and
test
inc
cmp
repz
sbb
mov
sub
dec
repnz
es
adc
out
movsl
addl
insb
add
cld
setno
xorl
out
not
repz
inc
stos
test
lea
les
lea
xor
cmp
pop
push
or
fsubrp
cmp
repnz
es
fdivr
adc
jo
imul
sub
mov
add
das
repz
mov
mov
aas
orb
insb
outsb
push
dec
mov
jae
cli
xchg
inc
mov
int3
das
ret
test
pop
negb
repnz
xorl
movlhps
xchg
ss
ss
std
das
cmp
adc
out
rorl
pop
lret
push
inc
sbb
jl,pt
outsl
ja
adc
mov
or
xor
ljmp
push
xchg
fiadds
mov
xor
inc
subl
pop
sub
aam
sbb
mov
test
jne
add
outsl
ja
pop
or
out
scas
jge
addr16
test
idiv
incb
pop
bound
in
push
test
add
outsl
ret
push
xor
icebp
xchg
sbb
cmp
add
call
add
jp
cli
sbb
adc
mov
add
mov
sbb
xor
aam
outsb
mov
imul
clc
roll
push
insl
aad
in
mov
xchg
outsb
xchg
xor
xchg
call
sub
cmp
sar
out
mov
call
pop
fldenv
stos
repnz
xor
sub
mov
loop,pt
sbbb
imul
rol
ret
pop
je
outsb
jp
sbb
push
out
sub
out
jp
xchg
mov
repz
dec
inc
out
aas
scas
subb
fcompl
jb
iret
hlt
add
xchg
push
js
test
ss
daa
arpl
hlt
jae
push
add
out
cld
iret
ficomps
mov
sub
or
cmpsl
pusha
add
mov
add
push
in
repnz
les
sub
mov
inc
jp
adc
aam
and
lds
je
inc
pop
sti
clc
xlat
cmpsb
mov
into
jnp
aam
jae
addb
lods
lret
add
std
sub
push
jns
xchg
popf
jae
mov
js
dec
xlat
jp
addr16
incb
adc
and
cmp
xor
ror
sbb
gs
cmp
out
push
test
push
xchg
jo
mov
jb
mov
sti
test
cld
mov
jbe
mov
jnp
je
stos
xchg
or
sbb
pop
mov
mov
cmp
adc
andnps
inc
jo
inc
loope
jge
data16
fwait
jp
mov
out
jo
jp
test
dec
inc
and
add
loop
js
shll
ja
movsl
dec
ss
adc
mov
inc
xchg
inc
mov
fadds
daa
pusha
dec
out
adc
ljmp
jp
aam
mov
in
out
xlat
sbb
imul
xchg
or
je
mov
pop
mov
jns
push
add
jg
mov
pop
rolb
jae
test
inc
mov
jno
dec
or
lcall
sub
inc
fwait
mov
adc
jle
mov
jg
dec
xor
stos
test
addl
jnp
xchg
rorl
mov
add
or
lods
aaa
add
lds
std
not
lds
xchg
and
imul
div
add
inc
fs
sti
sbb
lock
cli
xor
cmp
cltd
push
mov
scas
stc
aad
mov
repnz
jno
nop
in
hlt
or
mov
incl
loopne
mov
cmp
incb
inc
mov
jo
sbb
sbb
or
je
dec
lret
ljmp
mov
cmpsl
incl
ret
add
hlt
mov
push
inc
movsb
mov
add
push
jae
mov
stos
invd
std
xor
cmp
mov
inc
inc
sbb
or
inc
outsl
imul
repnz
aam
or
ficompl
call
aaa
cmp
add
jg
inc
mov
jae
push
inc
movsl
or
cmp
xor
ret
int
xlat
jb
pop
sbb
xchg
adc
int
pusha
xchg
ds
enter
xchg
and
jb
mov
mov
jge
xchg
addb
sbb
imul
cmp
jmp
shll
fwait
ljmp
and
mov
roll
shlb
cmove
xchg
lret
aad
cmp
and
push
ja
jno
sbb
cld
test
out
add
out
cmp
mov
pop
icebp
iret
fmuls
stc
cmp
mov
xchg
and
js
push
sti
add
mov
ficompl
out
outsb
in
ret
mov
sub
or
loopne
pop
push
push
mov
pop
or
adc
sbb
mov
inc
sub
xchg
stos
push
arpl
sbb
sahf
mov
xor
and
mov
mov
xchg
push
sub
insb
add
cmpsb
sbb
mov
lods
cmp
test
ss
add
test
fcompl
pushf
cld
sbb
repnz
cltd
mov
jb
add
adcl
pop
inc
mov
add
pop
jns
and
ret
ds
xchg
cmpl
je
jg
mov
xchg
xor
jns
sar
mov
add
push
cmpsb
pusha
push
add
pushf
dec
mov
add
adc
sar
add
cmpsb
js
test
js
pop
ss
sub
xlat
addb
xchg
jb
lds
inc
xchg
cmp
aaa
adc
push
jle
fiaddl
lods
push
pop
inc
lock
jge
std
push
test
es
jns
cmp
and
sbb
mov
add
cli
xor
xor
xor
scas
fidivl
incb
mov
mov
push
jo
cli
outsl
sub
pop
xor
push
pop
sbb
jne
pop
jmp
push
je
mov
adc
scas
adc
call
ss
rolb
inc
xor
pop
mov
cli
jnp
je
xor
cld
cld
inc
loop
ja
popa
or
or
mov
adc
adc
xchg
jae
xor
lahf
insb
xchg
cmpsb
mov
add
das
fbld
pusha
xchg
arpl
pusha
outsb
repnz
fmuls
xchg
cmpsb
fadds
or
xchg
xchg
adc
xor
out
inc
dec
pop
dec
jg
out
sub
int
jl
xlat
and
in
test
mov
sub
inc
sti
jnp
jns
jns
adc
xor
and
cmp
sub
enter
repz
pop
lock
ss
dec
insl
mov
aaa
add
in
scas
rcrb
push
or
mov
and
aam
or
xchg
jno
push
jno,pt
xchg
mov
ss
std
out
xchg
out
icebp
dec
add
xchg
push
je
inc
inc
stos
rorb
shll
sbb
clc
jg
sbb
xor
mov
popa
inc
mov
lcall
jnp
sti
mov
and
jg
xor
cmp
test
aad
movsb
fadds
or
mov
inc
dec
jns
inc
repz
dec
and
mov
cmp
dec
add
cld
sti
sub
cli
cli
jno
push
movsl
xor
sub
inc
push
sti
insb
lods
lock
out
loop
mov
cli
das
sti
outsl
out
lds
int
inc
inc
sbb
xorl
ret
call
incb
xorl
movsl
inc
ret
add
xchg
mov
sti
mov
mov
dec
jns
pushw
push
jmp
jbe
jp
add
push
pop
xchg
jne
icebp
roll
xchg
xor
das
fbld
xlat
jecxz
pusha
incb
hlt
sti
mov
loop
test
jae
xchg
add
call
out
pop
push
nop
dec
test
data16
ds
xchg
jnp
movsl
cwtl
repnz
mov
cmp
sbb
lods
jno
xchg
pop
out
mov
jns
out
pop
jle
lcall
jg
add
mov
adc
das
xchg
cmpsb
sbb
aas
ljmp
xor
inc
sub
dec
roll
jg
mov
ret
mov
jnp
cmpsb
cwtl
mov
fwait
mov
sub
mov
inc
inc
jl
xchg
je
mov
out
jmp
pop
mov
pop
daa
aad
cmp
add
xchg
xchg
push
js
scas
inc
xlat
jbe
push
test
jae
push
iret
in
sub
inc
jmp
cmpsb
jnp
cmp
test
mov
dec
cli
mov
xorl
dec
call
jb
ds
scas
dec
and
loop
fadd
xchg
je
cmpl
out
push
mov
out
insl
iret
jmp
pop
mov
std
ss
insb
incl
nop
jnp
add
outsb
mov
push
mov
sub
jmp
adc
ss
in
jge
repz
jl
cld
adc
test
sub
ret
xor
xor
xor
inc
call
call
push
mov
or
or
xchg
aas
js
pop
loope
test
daa
cmpsl
adc
cwtl
inc
xchg
jnp
xchg
and
xchg
test
mov
pop
pop
inc
out
sti
test
sub
sub
mov
adc
int3
imul
jb
pop
lret
dec
xor
jle
je
jne
mov
pop
aad
mov
lods
sub
cli
aas
das
xchg
sti
out
pop
jnp
inc
ja
pop
add
cltd
loop
insl
fdivs
inc
jp
xchg
loope
enter
jo
push
mov
sti
das
dec
movsl
fsubrs
pushf
lds
mov
cmp
scas
repz
mov
lds
pop
pop
test
mov
push
inc
sbb
aam
mov
adc
sub
insl
sub
pop
loope
in
fcmovbe
hlt
ja
xchg
call
xlat
shl
inc
fistps
pop
sbb
add
cmpsb
sbb
mov
sbb
or
add
daa
stos
jmp
sub
pop
sbb
lods
aaa
inc
shll
scas
nop
jl
mov
in
pusha
es
pop
xchg
jno
out
iret
out
add
cs
data16
mov
in
push
cmp
xchg
mov
repz
mov
fs
jge
loope
mov
pop
mov
shll
test
inc
dec
imul
jae
ss
xorl
mov
mov
mov
icebp
sbb
sbb
pop
imul
repnz
out
subl
in
test
jl
adcb
jo
js
xor
inc
das
lret
aas
adc
cli
addr16
xchg
jl
das
movsb
dec
jge
cli
sub
outsb
and
daa
sbb
sbb
imul
cmp
int3
push
call
dec
aas
adc
xor
mov
gs
lods
sub
ljmp
sbb
push
insb
xchg
jg
push
das
in
jmp
std
cmp
jns
jns
xchg
lcall
or
rorl
xor
insb
add
rorl
jae
and
mov
ret
xor
inc
or
cli
add
inc
lods
mov
dec
outsb
shr
inc
scas
daa
clc
inc
fucomp
pop
jno
je
add
psubq
push
add
and
lock
in
mov
rcll
sbb
aaa
xchg
pop
movl
clc
and
inc
push
imull
in
je
in
loopne
pushf
and
xchg
fdivs
mov
mov
pusha
mov
shll
xchg
inc
in
cmp
sub
cld
clc
divl
dec
pop
inc
xchg
aad
inc
cwtl
pop
mov
les
repnz
cli
cmp
dec
clc
aam
jmp
outsb
and
les
test
popf
xchg
cmp
push
int
std
and
pushf
inc
xor
pop
repz
or
dec
sub
inc
add
inc
das
dec
std
inc
shlb
jbe
add
jns
jno
aam
out
inc
or
sbb
mov
stos
test
test
rcll
js
xchg
cli
test
call
push
ss
add
cmp
xchg
aad
or
cmp
ljmp
mov
repnz
out
jmp
sbb
mov
jmp
jns
nop
andb
div
xor
cli
dec
test
cmpsb
jnp
shll
andl
xchg
mov
ja
rorl
iret
mov
cmc
int3
jp
ss
lock
out
adc
or
js
push
test
stc
mov
ret
jmp
dec
js
addr16
cmc
cltd
push
dec
jno
out
nop
mov
or
cmpsb
or
pop
push
pop
jns
mov
xlat
les
ss
jp
add
sub
mov
std
pop
daa
fldenv
mov
inc
mov
xor
test
jmp
sbb
clc
outsl
jmp
mov
pandn
pop
or
mov
xor
adc
das
xor
and
jne
mov
inc
js
aad
cld
pop
inc
xor
or
xor
mov
sbb
lock
inc
sbbl
out
add
xlat
test
inc
aam
mov
jnp
mov
add
stos
imul
xor
pop
add
test
mov
add
and
iret
rorl
enter
ret
jecxz
out
pushf
mov
dec
mov
pop
lds
sub
jbe
out
pop
and
ss
cmp
incl
in
out
lret
push
xor
jecxz
or
push
mov
push
dec
adc
test
inc
inc
dec
jle
cli
test
out
xchg
repz
insb
mov
cld
push
outsl
xor
cmc
cmpsb
js
ret
xorl
mov
pop
dec
out
imul
in
inc
iret
mov
aas
cmp
sbb
mov
sub
ljmp
jnp
shr
mov
sub
mov
add
sbb
clc
and
adc
mov
outsw
mov
pop
mov
stos
cld
cmpsb
jnp
movsl
mov
add
and
sub
cmp
test
loopne
enter
in
dec
adc
add
insb
push
pop
add
out
inc
xchg
out
or
mov
xchg
or
shll
icebp
add
pop
xchg
push
mov
in
stos
cli
mov
sbb
cmc
or
adc
inc
cli
enter
in
mov
dec
mov
dec
test
jb
mov
scas
adc
mov
test
push
xchg
fnstcw
xor
out
mov
jb
and
mov
lea
rcrb
and
cli
iret
cmp
rcr
scas
dec
jo
std
dec
inc
push
insl
jg
repz
add
jne
out
add
jge
cli
aas
aam
ljmp
mov
lock
out
subb
cltd
inc
adc
rcll
push
pop
jns
push
xor
or
dec
in
mov
xor
imulb
push
inc
add
loop
ljmp
loop
out
das
add
dec
and
xchg
stc
test
js
lods
jns
sub
or
shll
incl
das
leave
and
xor
jmp
stos
cmp
xor
push
pop
inc
xchg
mov
adc
das
shl
adc
out
pop
ss
les
add
outsl
iret
ljmp
int
mov
mov
inc
push
inc
mov
int
mov
sub
sub
js
test
out
repz
scas
inc
xchg
cli
mov
sti
mov
loop
mov
sahf
out
imul
xchg
jbe
sub
rcll
sub
inc
mov
andl
imul
iret
add
mov
or
scas
dec
aaa
movl
pusha
clc
sub
dec
shl
push
xor
adc
imul
movsl
std
mov
sub
pop
sti
jbe
pop
mov
rcll
movb
mov
test
in
sbb
jmp
nop
add
in
popa
ret
ss
pop
xorl
adc
mov
hlt
pop
mov
mov
dec
pop
add
sbb
pop
sbb
xchg
xchg
jno
jnp
mov
inc
sti
inc
sarb
add
push
jo
arpl
xor
sub
inc
rep
in
rorb
fucomi
inc
dec
pop
inc
ds
out
inc
das
int
add
cli
lds
in
das
subb
scas
lret
cld
clc
aam
mov
and
sarl
rcrl
xchg
sti
out
inc
incl
inc
dec
cltd
sahf
fdiv
mov
jbe
adc
js
dec
jecxz
mov
pop
push
jge
jmp
scas
push
dec
inc
or
std
mov
in
das
test
in
inc
cmp
ljmp
mov
add
xchg
sbb
sub
mov
push
lods
lock
mov
mov
sbb
test
loop
roll
xlat
pop
cli
xchg
test
sti
imul
inc
push
cmc
jne
push
std
xchg
mov
in
outsl
jno
xchg
lods
adc
mov
push
cmp
xchg
daa
and
loopne
arpl
jg
stos
cmp
aam
add
or
outsb
je
xchg
push
mov
cld
in
pop
ja
push
mov
dec
add
cwtl
hlt
or
xor
xor
lcall
xlat
ror
es
jmp
pop
push
inc
mov
inc
sub
adc
add
and
push
outsb
js
repnz
xor
repz
in
add
inc
js
jae
cld
aam
sbb
and
ret
sarl
mov
xchg
wbinvd
and
push
mov
jp
xor
insl
inc
mov
lods
dec
mov
loope
insb
xchg
test
std
mov
test
or
add
data16
lock
jg
ds
ficoml
scas
pop
push
out
punpckhwd
jmp
das
insb
push
ror
push
lods
lds
out
sub
pusha
inc
repz
adc
hlt
cmp
ljmp
popa
mov
test
rclb
js
adc
cli
dec
test
sbb
push
ja
jle
push
xchg
cli
mov
mov
aam
adc
sbb
xor
addb
cmp
xor
int
add
ror
xchg
addr16
push
nop
imul
test
sub
mov
adc
jns
and
inc
ss
inc
cmc
fidivl
loope
mov
jno
or
mov
inc
sub
mov
in
shl
aam
cwtl
sarl
scas
mov
aaa
stos
imul
scas
mov
sarl
xchg
or
sti
cmpsb
sbb
jnp
add
add
push
mov
inc
push
or
sbb
sbb
sbb
inc
std
push
push
jno
aam
sbb
sbb
inc
pop
stos
stc
push
sbb
xchg
mov
add
cli
add
negl
btc
mov
inc
loope
aas
jo
movsb
out
std
test
mov
push
ret
pop
dec
pop
xor
mov
mov
push
imul
shll
sbb
out
in
lock
xchg
cmpsl
sbb
pop
sbb
bound
and
sub
xchg
jp
xorb
js
push
inc
imul
jns
mov
rorb
xor
out
mov
lea
stc
push
mov
iret
xchg
cld
repnz
aaa
icebp
push
movsl
adc
dec
mov
jbe
movsb
jge
fistl
sbbl
cmp
rclb
dec
inc
add
mov
or
xor
xlat
aaa
movsl
dec
test
in
popa
sbb
or
jl
loope
ss
loope
stc
ret
decl
dec
mov
pop
inc
les
push
mov
mov
pop
xchg
mov
mov
sti
sub
xor
jmp
insb
outsl
push
out
push
sbbb
pop
inc
sbb
xor
das
xchg
std
jae
inc
mov
and
pop
mov
out
das
jae
aas
inc
inc
sub
cmp
aam
or
addl
dec
xor
xor
rcl
push
xchg
jle
insb
dec
pop
inc
mov
out
ret
adc
cmp
outsb
cmp
aaa
out
mov
shll
jae
leave
sub
adc
pop
pop
in
or
ret
mov
fisttps
sub
in
je
xor
cmpl
sub
mov
jnp
loope
fbld
mov
push
xor
mull
xor
rcrb
mov
mov
add
insl
bnd
push
xlat
cmp
adc
test
cmp
jo
negw
jbe
push
movsl
adc
sbb
jo
mov
mov
jle
icebp
testb
rorl
or
das
pop
int
pop
cmp
scas
hlt
adc
orl
mov
jle
and
ret
sbb
cs
pop
stos
pushl
adc
sti
or
stos
call
and
pop
cmp
jnp
mov
adcl
das
xor
lods
lret
push
test
xchg
std
insl
les
cmp
testl
in
insb
adc
aam
call
cld
sub
or
mov
insl
hlt
into
js
cs
mov
sub
inc
mov
pop
push
rorb
jmp
stos
sbb
push
das
test
loope
ss
incl
adc
jp
imul
push
orl
cmp
insb
cmc
std
jmp
sti
outsl
sub
xor
cli
jmp
cwtl
ljmp
push
addb
sbb
in
cmpb
inc
mov
sub
xor
out
popa
dec
mov
nop
je
push
dec
aad
ss
xor
cld
jbe
test
out
xor
inc
add
outsb
jecxz
jae
inc
inc
test
repz
insb
jne
add
shlb
mov
cmp
cmp
divl
dec
out
mov
xor
fiadds
mov
add
sahf
dec
add
mov
cmp
sbb
sbb
ss
scas
lea
out
ja
and
lods
xchg
enter
sub
daa
mov
jge
mov
add
out
lds
outsl
push
jl
inc
mov
fbstp
scas
adc
stos
pop
es
cmc
test
push
xchg
repz
cmp
icebp
cld
out
mov
cmp
inc
repnz
sbb
ljmp
or
xchg
inc
mov
je
out
cld
in
lock
fmul
int
add
sti
add
inc
cmp
stos
outsb
vmovss
jns
dec
mov
test
daa
push
arpl
js
sub
lds
sub
roll
lods
mov
sar
mov
iret
fadds
faddl
inc
es
out
pop
imul
push
sub
ljmp
mov
or
mov
ficoml
cmc
hlt
ljmp
mov
je
inc
xchg
scas
scas
notl
jns
lds
mov
and
cmc
cli
push
ret
das
mov
inc
sub
jmp
test
sarb
xchg
push
inc
imul
scas
sub
dec
mov
sti
ljmp
cmp
push
fdivrs
jl
and
dec
jl
xchg
out
outsl
jmp
add
out
ret
xchg
fsts
jbe
mov
adc
jae
outsl
pop
xchg
fsubr
mov
mov
sbb
out
ret
sub
out
shrl
test
push
pop
cmp
mov
cld
sub
repz
xchg
frstor
push
xor
mov
std
les
or
aaa
push
mov
out
test
mov
cwtl
mov
loop
outsb
lret
jno
xchg
inc
std
cld
ss
stos
std
inc
mov
cmpsb
or
in
rorl
xchg
in
loopne
add
loope
repz
add
cmpsb
and
sub
shl
lret
ret
and
pop
ret
push
pcmpeqw
and
movsl
cmp
push
xchg
inc
outsl
inc
out
push
mull
mov
mov
addr16
jno
out
sub
repnz
std
push
inc
jno
or
icebp
stc
push
movsb
jno
xchg
mov
call
mov
xchg
pop
sbb
mov
icebp
je
shlb
mov
gs
outsb
icebp
ss
cli
add
pop
icebp
aad
xor
imul
add
push
jns
aaa
xchg
mov
scas
sbb
mov
mov
insb
xchg
xchg
mov
les
inc
aam
out
ja
jbe
jae
or
or
and
insl
testl
les
into
sub
sbb
push
addr16
and
cmpsl
je
jbe
sub
jnp
icebp
addr16
fsts
mov
pop
mov
stos
xor
sti
inc
pop
mov
rcll
push
mov
xor
xor
std
xchg
push
dec
int
das
inc
lea
xor
add
mov
pop
xchg
add
sub
inc
test
fadd
fists
out
jb
adc
notl
stos
ds
or
call
inc
sub
je
iret
push
pop
in
ljmp
outsb
add
xchg
mov
cmp
cmp
jbe
jmp
test
sub
xchg
mov
cmp
and
xlat
dec
mov
cld
daa
cmp
jg
xchg
push
das
jne
insl
push
shl
dec
cmp
adc
xlat
cmc
ficoml
push
scas
ljmp
adc
dec
in
cld
rcrl
add
xchg
loop
mov
repnz
int
mov
lds
aad
ss
add
pop
push
push
mov
or
jle
fwait
push
insb
jno
out
stos
stos
cmp
mov
je
mov
outsb
jl
xchg
mov
xchg
inc
shrl
loope
lock
ss
dec
lret
scas
clc
inc
jb
jp
mov
push
jge
cmp
xchg
mov
xchg
dec
mov
add
roll
cmp
dec
mov
andl
jmp
sub
mov
adc
xor
call
xor
ljmp
xchg
dec
dec
xchg
xchg
ror
add
pop
mov
xchg
adc
je
idivl
ret
push
add
cmp
xor
sub
xor
fdivs
adc
inc
dec
or
call
test
lods
ljmp
or
out
mov
push
divb
xchg
push
out
or
insb
mov
xchg
mov
daa
test
insb
std
cli
outsb
nop
xor
pop
dec
das
or
mov
cmpl
scas
xchg
push
stos
cmpsb
cmp
lds
hlt
jno
lods
push
ficomps
das
dec
push
mov
jp
shlb
sti
pop
jns
daa
push
xor
jl
imul
roll
adc
sub
push
push
dec
sub
xor
cli
push
and
rcr
or
or
xor
or
jno
imul
adc
pop
outsb
sarb
test
jns
cs
fwait
jp
mov
arpl
outsb
sar
xor
push
dec
push
jns
cmp
test
cmp
les
out
test
cmp
getsec
mov
fbstp
push
mov
mov
mov
scas
mov
xor
inc
xlat
mov
pop
mov
xor
das
sub
and
fstpl
je
insb
out
add
jmp
sbb
pusha
sbb
lods
and
in
jmp
outsl
or
test
insl
xor
xchg
or
sub
nop
push
cli
cmc
aas
testl
sub
push
cwtl
clc
push
insb
cli
adcl
xchg
les
imul
cmpsb
pop
mov
lock
jmp
out
pushf
icebp
xor
in
cli
xor
jne
inc
loop
test
mov
jne
out
jo
inc
add
sarl
xchg
jns
pop
bnd
lret
dec
xchg
inc
add
jbe
xchg
jae
iret
std
jp
sub
sarl
js
jl
ds
sarb
jne
jmp
fadd
sarb
mov
mov
insb
das
adc
jno
repnz
push
int3
cmp
outsb
scas
rolb
add
jmp
push
cld
andl
inc
scas
xor
dec
lea
jns
mov
incb
jns
inc
mov
mov
jge
jo
cs
out
inc
das
inc
inc
push
mov
xlat
jae
mov
jno
cmovne
mov
test
addl
sub
es
xor
add
dec
sub
jmp
push
icebp
dec
jbe
ljmp
cmp
push
jge
push
xor
jnp
sti
pop
jp
lods
jno
lock
in
lods
dec
rcl
cld
jg
pop
pop
cmp
aaa
mov
cmp
imul
ds
push
push
ret
mov
test
mov
sub
movsl
sbb
fiadds
aaa
js
jb
test
adc
xor
je
jo
outsb
cld
repz
cmp
lret
scas
sbb
sarb
xchg
push
push
sbb
xchg
sbb
scas
std
mov
rcll
insl
fsubr
jae
fmuls
or
enter
inc
data16
mov
rcr
sbb
xor
adc
js
lea
jmp
icebp
inc
out
jge
inc
sub
int
xlat
sub
scas
pop
xchg
fists
xlat
or
jmp
or
lcall
sarl
cld
mov
dec
repnz
mov
jno
dec
jns
xchg
sti
xchg
cmpl
inc
dec
pop
push
sbb
shll
xor
test
add
push
xor
outsb
inc
inc
scas
stc
inc
add
xchg
sbb
add
xor
mov
sub
or
cs
fucomip
xor
xlat
push
stos
xor
inc
jmp
push
aad
es
sub
pop
sti
lcall
aas
imul
imul
insl
add
rolb
std
or
out
mov
jb
in
out
imul
xor
xchg
sub
pop
ret
lcall
subl
inc
movsl
ljmp
sub
mov
shlb
test
add
xor
scas
das
dec
mov
pusha
push
mov
xor
add
sar
pop
jnp
cmpsb
jmp
dec
test
aaa
add
mov
jmp
jne
push
faddl
cmp
pop
sti
mov
rorb
out
jb
nop
pop
test
jg
jne
adc
push
aaa
aam
icebp
repz
pop
rep
jne
pop
jmp
jno
jl
ret
sbb
lret
js
lds
clc
dec
dec
std
out
jge
push
dec
test
xchg
aas
jnp
inc
xlat
insl
stos
das
or
je
add
test
xchg
jnp
aam
mov
cmpsl
sti
ja
cmpsb
push
jb
sbb
add
jnp
out
ret
sub
jnp
lds
sub
dec
cli
stos
shr
out
mov
jl
psraw
aam
sbb
mov
mov
jl
add
ljmp
add
and
dec
es
sbb
jb
dec
push
inc
pop
stos
repz
mov
add
xchg
insl
push
push
jb
pop
and
mov
rcl
push
jo
or
lret
repnz
iret
and
jnp
js
push
out
jno
popa
push
stc
xor
inc
sbb
pusha
jle
cwtl
dec
shrl
incl
sub
iret
mov
push
test
stos
movsb
inc
and
cwtl
cmp
adc
shl
cwtl
inc
insl
add
ret
cmp
dec
cli
xor
inc
push
mov
data16
insb
das
and
pop
jg
push
sub
cltd
add
movsl
and
cmp
aam
incl
punpcklwd
test
lds
ljmp
hlt
jl
cmpsb
mov
int
xor
das
pop
subl
jecxz
inc
pop
add
mov
jno
sarl
xchg
cmp
push
ficoms
jno
dec
push
jb
mov
jle
in
xor
jb
dec
add
test
test
inc
das
incb
add
xchg
jae
ds
jmp
mov
jl
sbb
repnz
scas
inc
mov
imul
icebp
mov
mov
add
mov
mov
out
psubb
pshufw
mov
clc
sti
jne
jnp
loope
jge
mov
push
mov
jnp
add
int
add
sbb
out
pop
imul
inc
roll
mov
and
addr16
ljmp
lea
pop
add
xorb
mov
push
insb
inc
imul
js
cli
ret
cli
das
add
hlt
std
inc
out
std
sub
repz
icebp
lret
out
xor
inc
fucomip
pop
pop
mov
pushl
jg
test
aas
xchg
cmc
insl
repnz
pushf
out
inc
xor
jmp
mov
pushf
add
xor
add
jl
test
xor
sub
mov
jo
outsl
sbb
sub
imul
imul
pushf
addl
cmpl
jge
cmpb
idivb
jno
mov
push
xor
jl
jo
or
outsb
roll
insb
fldcw
repz
jns
jns
in
xor
mov
cmp
idivl
mov
call
pop
push
mov
mov
jnp
sbb
addb
movsb
scas
shll
mov
daa
out
stos
test
inc
je
mov
jo
mov
cld
jno
pop
mov
cld
mov
cld
xor
jbe
imul
jnp
push
std
cmc
pop
adc
les
mov
hlt
ret
push
dec
in
add
lret
cs
cmp
push
add
jmp
test
insb
cmp
std
ret
cmc
bnd
test
popl
imull
or
jns,pt
push
ljmp
xchg
xor
mov
enter
xor
imul
cmpsb
inc
push
add
into
movsl
ret
cs
divl
inc
jmp
ds
incl
jns
and
cmp
jae
test
pop
scas
movb
jp
stos
imulb
and
xorl
cmpsb
stc
sub
test
outsb
mov
inc
jbe
cld
cmp
jb
add
test
insb
mov
jl
inc
aas
jbe
je
jb
jo
outsb
jo
push
mov
dec
sbb
pop
sbb
pop
idivl
ja
lret
dec
ljmp
stc
push
mov
sub
int3
sar
cmp
out
xor
mov
dec
icebp
outsl
mov
jl
mov
add
adc
in
adc
xor
outsb
test
test
js
dec
shlb
add
adc
int3
xlat
pop
xchg
pop
add
jmp
iret
iret
arpl
lret
mov
repz
cmc
into
jmp
fwait
stc
mov
test
call
jns
mov
jbe
hlt
cmp
xchg
pop
imull
adc
or
dec
int
sub
repz
dec
jecxz
jp
push
add
mov
aaa
push
mov
mov
or
int3
mov
cmc
outsb
fmuls
mov
dec
adc
repz
xchg
adc
adc
mov
jae
ud0
adc
repz
lret
rol
or
jmp
leave
jnp
mov
sti
dec
loopne
cs
imull
jb
xor
cmc
outsl
movups
loopne
outsb
or
nop
out
imul
scas
dec
and
cmp
mov
xchg
xor
dec
sbb
shll
push
jmp
pushf
mov
sub
push
xchg
pop
sub
fistpl
mov
fdivr
in
imul
mov
loop
xchg
into
cmp
pop
pop
push
xor
jle
pop
dec
fdivs
sbb
mov
push
stc
sub
or
movsl
stc
add
xchg
pop
mov
testl
xchg
cltd
sar
adc
js
xchg
sub
jg
aas
xlat
or
jmp
mov
inc
stc
inc
orb
stc
mov
test
test
sub
mov
xchg
pop
js
gs
push
rcll
push
or
mov
ss
xor
jle
icebp
cmp
jo
jl
ljmp
fsubrs
mov
or
pop
daa
xchg
scas
or
bound
jb
in
stc
scas
mov
mov
or
fmuls
add
cmpsb
hlt
inc
lcall
lahf
aaa
aas
notl
out
stc
or
mov
inc
jge
inc
int3
xor
stc
pop
idivl
cli
test
pushf
pushw
dec
shr
cltd
movsl
iret
mov
push
dec
jg
idivb
clc
pop
dec
dec
add
idiv
stc
sub
iret
inc
sbb
mulb
scas
xorb
repnz
push
cmp
push
repz
dec
cmc
lret
lods
faddl
jo
mov
jmp
xor
mov
cmp
mov
dec
add
mov
or
and
into
aam
ljmp
cmp
sbb
add
xlat
sbb
adc
cmp
fldl2t
add
or
call
dec
push
push
xor
loop
xchg
add
stc
aam
mov
pop
test
ljmp
pop
iret
cmpsl
cld
mov
lods
push
rcll
mov
mov
scas
sti
jns
cmpsb
out
add
mov
lahf
jmp
out
pusha
fwait
stc
popa
icebp
pop
rcll
test
mov
jne
pop
pop
xlat
jle
fadds
push
out
cld
add
in
pop
jbe
std
add
out
stc
and
jle
repz
sbb
cmc
add
inc
stc
dec
xor
mov
mov
add
stc
outsl
popa
outsb
xor
mov
add
jmp
push
jmp
pop
stc
leave
lods
xor
pop
jbe
jg
mov
cmp
dec
mov
shll
inc
iret
pop
dec
add
stc
xor
in
xchg
sbb
stc
mov
addr16
cmp
out
out
mov
dec
sbb
ljmp
jae
out
adc
sub
adc
jg
mov
cwtl
adc
and
mov
insl
pop
divl
cmpsb
das
xchg
cmpsb
add
xor
decb
add
shl
je
xchg
or
jo
push
cmc
fwait
xchg
mov
in
jmp
pop
scas
loop
fcomip
orl
mov
mov
xchg
js
mov
push
out
aad
push
xchg
jne
js
cmpl
stc
xchg
pop
iret
dec
in
jae
cmp
bound
jg
int3
stc
test
push
fwait
out
xchg
fistps
xor
sub
icebp
pop
imul
addr16
inc
popa
cmp
in
loope
dec
stos
mov
js
adc
pop
push
aaa
mov
into
and
push
sub
sti
push
pop
stc
sbb
adc
movsb
dec
movsl
add
clc
dec
icebp
test
jecxz,pt
loope
loopne
jno
nop
jnp
cld
stc
cmp
ret
pop
in
pop
cmp
pop
cltd
adc
sub
push
cmp
je
jne
mov
jno
or
push
mov
push
dec
jnp
icebp
cmpsb
cwtl
fsubr
adc
adc
pop
xor
push
lret
je
sbb
int3
ss
xor
adc
inc
fcos
sub
dec
add
mov
daa
push
sub
mov
jne
xchg
mov
sub
std
stos
adc
aad
adc
daa
cmp
pop
mov
in
fildll
or
or
push
jo
pop
mov
jne
pop
sbb
fs
faddp
movsb
mov
jmp
push
cmp
scas
push
hlt
in
ljmp
cmpsl
xchg
int
mov
loop
movsl
and
mov
push
sahf
gs
in
stc
xor
xor
cmp
pop
outsb
cmp
stc
jne
in
lods
bound
push
mov
stc
sbb
movb
pop
in
mov
pushl
jae
ja
out
cmp
pop
mov
aaa
mov
cld
and
adc
add
punpckhbw
pop
mov
stc
popa
inc
imul
and
xchg
lret
and
inc
out
stc
loopne
je
in
and
es
imulb
insb
push
dec
jnp
out
rcrl
cs
xchg
rclb
mov
call
scas
ret
cltd
in
sub
jg
pop
hlt
jmp
stc
into
pop
in
or
popa
dec
ss
fdivs
test
sub
into
fcmovnb
push
jno
mov
lret
mov
cmpsb
mov
in
stc
sub
aas
cmp
mov
mov
lret
fnstsw
pop
mov
push
pop
inc
stc
mov
jmp
or
lds
jbe
fmuls
pop
xchg
add
dec
sarb
jo
stc
cmpsb
cld
push
add
xchg
fwait
add
dec
push
cmp
vxorpd
cwtl
es
pop
stc
xor
jae
mov
fstpt
bnd
jmp
or
pop
icebp
inc
mov
stc
cmpsl
xchg
in
jmp
popa
mov
or
jns
push
xlat
pop
push
sub
dec
jecxz
stc
adc
xchg
rorl
dec
fisubrl
stc
sbb
mov
stc
stos
push
xor
cltd
dec
cli
stc
pushf
int3
imul
loopne,pn
faddl
pop
or
xchg
sahf
jmp
std
pop
stc
orb
popf
add
mov
outsb
ret
hlt
ss
mov
add
mov
jl
cmc
add
pop
stos
jmp
stc
ljmp
shll
ds
std
xlat
adc
add
lret
push
ret
pop
and
jle
js
repnz
stc
add
cli
xchg
stc
sub
aaa
inc
xchg
outsb
aad
mov
icebp
mov
jmp
xor
call
ds
pop
and
and
inc
push
sbb
icebp
inc
add
mov
mov
adc
repnz
xor
lock
rol
xchg
push
push
sbb
call
cmp
fidivrs
push
call
into
or
scas
in
ja
push
notl
mov
fcoms
mov
xor
inc
or
jle
fmull
adc
adc
loopne
test
cmp
out
cmp
pop
mov
pop
scas
lds
clc
add
dec
incb
cmpsb
fnstenv
push
inc
pop
rorl
mov
push
std
xchg
cmp
je
add
dec
test
pop
xor
mov
xlat
push
adc
sbb
inc
addb
scas
stos
outsb
inc
adc
mov
pop
lahf
jmp
ret
in
pop
sbb
mov
aad
cmp
stc
mov
sar
mov
or
and
movd
xlat
mul
dec
sbb
stc
rorb
stc
popf
ret
movsl
iret
add
push
divb
inc
sbb
xchg
or
cli
aad
stc
push
mov
xor
jo
jb
das
data16
add
scas
in
stc
adc
jg
cmp
add
aaa
jmp
mov
movsb
loop
loopne
push
stc
xchg
fs
mov
outsb
pop
xor
add
xchg
js
push
ficoml
mov
sub
mov
sbb
stos
stos
sbb
jbe
sbb
shlb
jo
xchg
and
pop
fs
clc
hlt
inc
imull
and
divl
enter
fisubrs
insb
jmp
mov
mov
jbe
adc
push
ret
mov
mov
pushf
aas
mov
adcb
inc
jbe
sbb
aaa
into
lods
test
push
iret
adc
push
shlb
fstl
sbb
fldenv
fsubl
nop
out
cmp
inc
adc
jns
loope
lret
stc
xchg
xorb
cmp
sub
or
test
jl
repnz
stc
insb
xor
frstor
shll
pop
mov
loope
xor
push
clc
xchg
jp
stc
pop
jle
mov
sub
push
jae
pop
mov
rclb
loop
jle
out
cmp
stc
sbb
cmpsb
cmpsl
js
scas
outsb
xchg
cmpl
lods
xor
stc
xor
outsb
mov
mov
repz
pshufw
jne
sbb
mov
dec
add
cmpl
scas
jl
sahf
inc
push
xor
xchg
insl
jmp
jmp
cmp
push
fldcw
sub
stc
and
lods
sub
in
xlat
mov
bound
adc
push
xchg
xor
js
jge
aam
push
jns
cld
mov
shll
sbb
sub
orl
das
sbb
push
loope
cmpsl
outsb
sub
dec
cwtl
xlat
lahf
push
ficompl
aaa
or
push
push
inc
mov
jb
xchg
dec
test
xchg
mov
xchg
ffreep
dec
pop
jb
and
rcll
rorb
ror
xor
jmp
add
not
jp
xchg
push
outsl
shll
imul
push
xchg
fisubs
std
add
lods
mov
adc
stc
movq
clc
mov
ss
cli
fstpt
icebp
int
std
aas
stc
xor
aam
stc
ljmp
mull
pop
push
rcll
enter
adc
jno
mov
stc
into
push
aas
adc
dec
mov
icebp
cs
movsl
inc
stc
jmp
aad
jb
pop
xchg
stc
inc
scas
mov
cmp
mov
xor
or
les
xchg
mov
ds
lret
fisttpll
and
dec
sbb
pusha
scas
stc
aas
out
clc
test
inc
pop
mov
xlat
mov
cltd
jmp
call
mov
in
out
into
jns
out
or
stc
push
fbstp
xor
jge
jno
sahf
jmp
cmpsb
pop
xor
int3
je
sar
jb
mov
enter
xchg
int
stc
jnp
pop
or
and
icebp
mov
cli
cmp
mov
out
aaa
icebp
inc
ss
pop
push
lcall
movsb
outsb
stc
dec
add
push
cmc
sti
cmp
pop
add
mov
inc
add
adc
and
push
js
mov
mov
jmp
push
iret
rep
test
cs
arpl
aad
push
push
push
fwait
rol
aam
push
enter
jg
imul
lock
sub
dec
fnstenv
insb
mov
dec
fwait
daa
shll
mov
xor
push
fnstsw
cltd
push
outsb
stc
jns
jge
popf
ja
sub
cmp
bound
inc
pushf
fdivrl
pop
std
and
dec
test
pop
dec
shlb
mov
int3
icebp
pop
loopne
es
movswl
push
xor
pop
stc
xor
ss
xchg
in
jl
stc
fs
cmpsb
repz
repnz
lock
daa
fucomi
icebp
loop
mov
pop
xorb
dec
mov
push
pop
sub
stc
lea
mov
stos
stc
mov
push
rcll
xchg
xor
or
in
push
sbb
jl
stc
mov
rcrb
movsb
push
sub
pop
inc
daa
imul
pop
jae
lret
xchg
add
fnstenv
push
nop
push
in
pop
and
add
sbb
ss
push
stc
mov
scas
fisttpl
scas
jp
dec
arpl
xlat
stc
jge
cmp
in
leave
lods
sar
lea
jmp
dec
scas
sbb
xchg
sub
stc
xor
imul
call
stc
lret
mov
in
cmp
shl
mov
popa
call
cmpb
jo
mov
push
sbb
fs
adc
pop
adc
aaa
sub
add
or
mov
xchg
cmp
xchg
jne
adc
add
lcall
mov
xchg
repz
ja
adc
sub
cmpsb
int
ljmp
jmp
stos
popa
imul
lret
loopne
stos
sub
dec
mov
js
adc
lret
in
cmpsb
or
jg
xlat
and
stos
iret
sbb
mov
stc
popf
pop
dec
push
or
ss
sub
cmpsb
iret
cmpsl
add
sahf
stc
arpl
or
jp
stc
mov
cld
lods
pushf
stc
scas
sti
add
ret
in
add
jo
ds
das
stc
mov
add
stc
mov
push
xchg
inc
test
loopne
push
push
mov
dec
ja
sub
stc
clc
or
mov
push
xchg
xlat
movsl
lahf
pop
pusha
jmp
dec
jae
out
dec
pop
dec
or
and
mov
pop
into
sbb
cld
fisttps
stc
lret
jbe
push
aam
test
in
stc
push
lcall
cld
int
and
jg
and
push
into
pop
stc
fstps
xchg
mov
pop
mov
add
xchg
sarb
jnp
pop
ds
push
mov
icebp
bound
ret
cmp
mov
movsl
or
fisttpl
iret
jae
mov
outsl
inc
fs
xchg
push
adc
add
test
test
and
rorl
testb
fdivr
jbe
xor
test
popa
sub
bound
jb
sub
jno
rcrl
stc
in
int
das
push
add
out
lods
xchg
mov
push
jmp
cmpsl
rolb
cwtl
stc
adc
insb
pop
sub
lea
sahf
inc
fidivrl
mov
outsb
or
sbb
cmp
mov
mov
shlb
xchg
add
addr16
mov
lods
ljmp
adc
daa
out
mov
mov
rorb
repnz
hlt
pop
sbb
mov
xor
lahf
stc
xor
jb
rol
mov
in
mov
push
mov
stc
enter
push
adc
jne
insb
jae
in
rclb
fcmovne
or
decl
cmp
add
hlt
ret
repnz
and
rcr
mov
stc
jl
data16
adc
sti
lods
cld
movsl
stc
arpl
xorl
add
cmpsl
cltd
mov
dec
pop
cmpsb
outsl
and
sub
roll
mov
mov
outsl
push
sbb
xlat
daa
sbb
lea
xchg
ds
test
xchg
cs
jbe
pusha
fldln2
jge
sub
addl
fwait
shl
sahf
push
mov
jne
mov
ljmp
pusha
jmp
pusha
lea
je
lea
pusha
pushf
mov
pusha
bswap
bswap
mov
pushl
lea
jmp
sub
stc
xlat
bound
popf
repnz
inc
pop
mov
inc
mov
ljmp
shlb
and
jmp
add
fstps
fucomip
rcrl
and
sub
pop
jecxz
fisubs
xor
pop
sub
sti
mov
dec
movsb
jl
cmp
adc
push
int3
xchg
jb
adc
fimuls
xchg
sbb
aad
hlt
sbb
movsbl
jmp
or
pusha
pushl
lea
jne
shl
setb
mov
stc
cmp
bt
or
push
push
movb
jmp
mov
movb
lea
ja
jmp
repnz
pushf
lea
jne
not
xchg
stc
mov
mov
sub
bsr
rcr
mov
bt
cmp
cmc
push
sub
push
pusha
pushl
popl
clc
jmp
movl
push
movw
lea
jmp
push
cmpsl
and
outsl
repz
dec
insl
add
hlt
mov
xchg
inc
push
test
mov
lcall
pop
movsl
mov
ret
inc
mov
adc
mov
repnz
jle
stc
cli
xchg
lcall
dec
cwtl
inc
xchg
call
cmp
xlat
fwait
xchg
leave
push
lea
call
push
pushf
call
lea
jae
cmp
xor
pusha
jmp
jmp
lea
jae
jmp
jle
sar
bound
pop
popf
aaa
pop
jb
icebp
sbb
jl
test
dec
xor
loop
aas
pop
jmp
hlt
test
mov
add
jmp
inc
test
push
sahf
imul
aad
in
test
pop
pop
mov
and
push
rclb
xor
imul
dec
xor
int3
inc
cltd
jge
pop
pop
test
push
mov
xlat
les
in
rorb
testl
fistps
scas
je
xor
fstps
outsb
jg
xor
jno
fidivs
fnsave
dec
lahf
bound
out
inc
pushf
xor
and
add
pop
or
jge
pusha
xor
sti
jbe
add
aad
sub
cli
jmp
add
adc
mov
in
add
dec
jne
out
stos
push
xchg
loopne
outsb
push
xchg
dec
sbb
sub
mov
lcall
negb
js
mov
push
inc
adc
aad
sbb
mov
lock
xlat
bound
mov
pop
mov
shll
mov
in
cld
rclb
inc
sbb
xacquire
push
outsl
arpl
jg
or
cmpsb
js
movsl
shl
push
push
mov
jecxz
aam
data16
test
or
inc
and
mov
outsb
push
lods
je
push
dec
sub
pusha
neg
mov
dec
pushf
add
je
call
movl
pushl
call
adc
pushf
movb
pushl
lea
jae
push
jmp
push
lea
jne
push
mov
inc
call
jne
mov
mov
cmp
xor
stc
shlb
or
xchg
cmc
call
test
stc
lock
popa
sbb
jno
and
popa
or
imul
bound
jle
mov
int
sbb
xor
adc
jae
bound
clc
jge
fsubrl
movsb
push
dec
out
pop
cmp
xor
dec
aas
out
jb
nop
xlat
pusha
push
adc
or
dec
jae
sub
ja
fcmovu
or
adc
adc
add
inc
add
imul
je
mov
sbb
ds
push
jmp
fwait
cmc
push
jecxz
test
jge
xlat
bound
push
js
pusha
popa
jmp
leave
lea
je
or
xchg
sbb
outsl
test
in
jnp
pop
dec
add
jle
in
inc
add
jecxz
in
es
test
lcall
cli
mov
arpl
or
pop
push
frstor
repnz
or
sahf
jo
cmpb
push
push
jmp
in
movl
out
dec
pushf
mov
or
pusha
aaa
push
clc
mov
pop
lock
andl
out
aam
or
push
mov
cmp
test
cmp
dec
pop
jae
fstpl
sbb
sbb
test
frstor
push
sbb
loope
mov
push
outsb
add
mov
lea
ja
pushf
bt
clc
pushf
add
lea
pushf
or
lea
ja
je
clc
cmp
pushf
cmp
mov
call
pop
daa
movsl
xlat
bound
pop
or
sub
and
loop
btc
loope
outsb
add
dec
test
das
push
ja
iret
and
inc
mov
push
mov
jnp
xor
push
test
push
insl
pop
bound
mov
sub
cmp
push
test
sbb
repz
mov
dec
xchg
adc
jmp
pop
mov
mov
popa
mov
mov
mov
adc
pushf
mov
lea
jb
bt
jmp
add
or
fsubs
or
pop
adc
negl
add
cmp
int3
xor
push
outsl
leave
or
insl
jg
and
push
inc
dec
and
sub
adc
cmp
cmp
fldenv
out
lcall
cmp
cmpl
push
pop
push
cmp
mov
sbb
test
dec
lds
mov
test
sbb
pop
sub
call
lods
cmp
lret
fcomip
push
imul
pop
mov
add
bound
fsubrs
cmc
int
loope
enter
lods
aas
sahf
clc
dec
clc
test
sarl
inc
movsl
rcrb
xchg
mov
inc
outsl
push
out
mov
jl
inc
pop
shrb
and
lret
stc
ret
xor
adc
orb
xor
and
and
je
mov
xchg
dec
jle
loop
lds
mov
outsb
lods
mov
ret
cmp
pop
lock
mov
dec
xchg
jbe
xor
gs
mov
lret
dec
inc
call
mov
arpl
fsubs
mov
cli
in
sub
push
fisubs
jb
or
aad
add
add
xor
xor
testb
test
les
cmp
or
pop
rcr
hlt
pop
loop
push
imulb
jbe
jecxz
lock
insb
pop
sahf
test
mov
shl
rcrl
cs
les
sbb
add
add
inc
inc
mov
ja
ss
stc
mov
addb
mov
mov
clc
jmp
xchg
incb
mov
hlt
ss
dec
xchg
test
xchg
cmpsb
add
bound
shl
and
or
lea
lret
cwtl
cmpsb
add
imul
mov
dec
and
in
das
bound
das
jle
int
xor
shl
ss
jbe
adc
daa
fistps
adc
inc
jg
lds
loopne
push
test
pop
inc
jns
xchg
adc
jmp
push
clc
lret
pop
sub
dec
jb
scas
push
outsb
scas
movl
stos
add
out
movsl
sub
inc
les
movsb
adc
fnstenv
sub
sbb
pushl
popl
cmc
bt
cmp
movl
jmp
push
jmp
pop
sarl
nop
push
addr16
bound
xchg
fdivrs
lret
cmp
rclb
call
lahf
cmp
sbb
push
in
mov
xchg
pop
scas
cmpsb
in
inc
imul
pop
outsb
xchg
push
bound
outsb
aam
or
outsb
mov
jno
inc
imull
in
mov
xchg
sub
loop
loopne
xor
lea
adc
movsb
insl
nop
pop
add
xchg
stc
cmpsl
mov
sbb
jge
adc
addr16
sub
mov
cmpsb
sti
mov
push
xchg
push
sbb
mov
rcrb
clc
push
cmp
cs
std
inc
out
xchg
ja
out
rcrl
call
pushf
lea
jmp
push
pushf
call
movb
movl
pushf
pushl
movl
mov
push
mov
lea
jmp
movb
movl
pusha
pushf
push
movl
pushl
lea
jmp
jmp
neg
cmc
test
shr
push
jmp
pop
scas
sub
ja
lahf
ret
js
mov
leave
in
fistpll
mov
push
pop
sahf
jno
mov
pop
fistpll
add
sub
mov
cld
aas
inc
sbb
sub
xor
fstl
in
aaa
jge
sub
lahf
stc
xor
sti
loopne
in
movl
pusha
call
pushf
test
sub
call
jmp
iret
or
pop
test
fucomp
jg
add
dec
xchg
and
vminsd
add
mov
xchg
ljmp
inc
imul
push
and
or
lcall
addr16
mov
jmp
shrb
and
push
xchg
xchg
sbb
add
test
insl
push
or
fcomip
xchg
inc
cld
push
sti
imul
clc
clc
cmc
add
pusha
movw
lea
jmp
push
pushfw
popw
setae
xor
rcl
jmp
or
push
add
mov
mov
mov
dec
daa
or
out
js
dec
rcrb
int
cmpsl
dec
ficomps
sbb
pop
dec
in
jno
clc
inc
sbb
popl
xchg
mov
pop
out
mov
jb
sub
loopne
pop
pop
push
or
sub
ja
shll
cmp
cld
inc
or
out
mov
add
out
cmpsb
imul
mov
icebp
pop
xchg
mov
dec
shll
ljmp
int
xchg
jne
xlat
add
vmread
cmp
mov
add
lds
xchg
push
jp
xchg
add
mov
sbb
pop
mov
aaa
insb
roll
roll
xchg
mov
xchg
xchg
pop
loope
repz
js
aaa
call
js
push
or
jbe
pop
test
jnp
sbb
jae
mov
mov
cmpsb
mov
inc
xchg
stc
push
lds
lds
cwtl
enter
ss
or
or
mov
pop
add
pop
insb
mov
jb
cwtl
cmpsb
cmp
mov
nop
pop
das
imul
push
sti
pop
sub
dec
arpl
inc
dec
dec
sub
cmpsl
add
clc
fstpl
nop
test
jge
pop
xor
ss
insl
mov
cmc
inc
test
jmp
mov
cmp
les
cmp
add
sar
bsf
mov
movsbw
cmc
xchg
xadd
mov
shl
and
btc
mov
stc
xor
call
int
adc
add
add
add
jp
add
add
sub
add
add
add
and
add
inc
adc
movl
pushl
pusha
lea
jmp
mov
push
pop
fsubs
fimull
repnz
aaa
aam
lods
xor
adc
add
je
pop
arpl
sbb
fcmovne
aaa
cmpsl
into
in
das
cmp
fmuls
push
inc
xchg
inc
mov
cli
popa
mov
gs
adc
and
fwait
call
leave
push
jecxz
shlb
out
fidivl
and
out
test
jno
xor
xor
sub
fs
adc
and
cmc
or
call
push
movl
movb
push
mov
mov
pushf
mov
pushl
ret
jns
dec
pop
fsubs
fwait
aaa
pop
enter
add
jno
dec
mov
xchg
outsl
dec
cmc
icebp
sbb
inc
mov
dec
icebp
mov
xor
faddl
or
cld
push
sub
je
sahf
and
dec
adc
hlt
cltd
fistpll
outsb
addl
mov
jecxz
xor
outsl
fdivs
mov
fsubs
scas
ss
sti
into
lcall
mov
xor
sbb
jne
imul
push
or
and
adc
jbe
or
xor
jl
jbe
and
xchg
dec
je
pusha
add
imul
sub
iret
lret
shr
inc
add
dec
rdpmc
mov
cmp
mov
pop
inc
add
popw
std
ret
popl
scas
adcb
fs
sbb
or
div
sub
jg
out
loopne
pushf
lea
ja
pusha
lea
jb
call
mov
and
sub
vcvttpd2dqy
or
mov
and
call
repz
fiaddl
sbb
addb
jg
lcall
scas
xchg
push
xchg
pop
or
fdiv
cld
repz
lret
aaa
mov
lret
dec
sbb
dec
mov
jne
sub
dec
icebp
test
movsb
xor
pop
jae
in
rol
das
sbb
mov
cmp
mov
cwtl
add
lcall
jb
fadds
sti
aad
lcall
push
dec
cmpsl
scas
pop
scas
fcomps
pushl
pushf
mov
lea
pop
pushf
pushl
ret
pop
lcall
cld
xor
clc
es
out
xor
pop
mov
cmp
cli
mov
pop
lods
cmp
sub
in
aaa
stc
inc
mov
or
jb
pop
mov
popa
pop
add
mov
pop
les
and
int3
pop
xor
mov
pusha
mov
in
add
and
mov
loope
dec
adc
inc
or
bound
or
or
inc
popf
in
or
xor
adc
test
in
add
push
adc
push
sarb
mov
out
inc
dec
and
into
mov
cmp
xorb
or
mov
mov
sbb
scas
in
das
test
cmp
je
cmp
inc
in
jo
lods
adc
lret
inc
and
out
lahf
loop
push
int3
or
movsl
push
mov
inc
into
repnz
inc
mov
sbb
cwtl
pop
mov
dec
mov
sbb
jne
nop
inc
imul
push
mov
xchg
out
cmpl
lds
rolb
mov
ljmp
add
lcall
clc
mov
xchg
dec
mov
imul
mov
jge
out
adc
popf
call
filds
adc
fsubs
push
mov
in
add
into
inc
lods
pop
out
cmpsb
cs
scas
xchg
cmp
ds
insb
sahf
rcl
mov
push
xchg
outsb
push
mov
or
fcmovu
xor
rcrl
and
ss
test
xchg
or
rcll
orl
imul
jle
mov
mov
push
into
lret
popf
fldenv
sbb
shlb
cltd
into
mov
pop
and
aas
and
test
xor
fsubs
test
test
inc
lret
cmp
movsl
int
outsl
xchg
cmpsb
data16
mov
daa
lret
imul
imul
mov
dec
mov
push
and
lock
fimull
push
fistl
cmpsl
sbb
pop
xor
push
popa
dec
and
dec
orb
mov
push
iret
lea
ja
rol
stc
ror
and
sub
call
and
insb
jle
xlat
cld
mov
cmc
sub
fildll
in
fwait
push
xchg
imul
rcrb
sub
cwtl
ret
mov
imul
aas
sbb
jecxz
cmp
adcb
mov
mov
jno
fxtract
and
sbb
pop
mov
jmp
sete
clc
mov
pushf
clc
cmc
push
cmpb
pusha
push
lea
jne
stc
shr
cmc
shr
xor
jmp
adc
or
bound
iret
xlat
ja
xchg
pop
outsb
or
xor
ret
sub
loope
ret
inc
xchg
idivb
sbb
cltd
inc
sbb
mov
push
dec
aam
jnp
adc
mov
xor
jb
mov
mov
jns
dec
pop
or
bound
push
repz
rcr
js
mov
nop
xor
adc
addr16
aam
push
inc
push
lods
loop
ret
push
pop
loope
dec
lock
jne
fstl
push
loopne
out
mov
add
xlat
jb
cmpsl
push
push
loope
scas
inc
dec
or
dec
push
popf
lods
inc
pop
jae
inc
adc
out
add
push
rcll
lock
sub
pop
jno
jecxz
in
push
mov
les
int3
push
jns
pushf
outsl
es
es
fisubrl
stos
enter
scas
pop
inc
test
fwait
or
les
out
shll
stos
add
div
cmp
cs
test
or
sub
inc
ja
clc
pop
icebp
inc
movsb
and
jno
test
and
iret
adc
mov
cld
sub
mov
popf
je
sub
loope
ljmp
pushf
call
lea
je
pushf
push
mov
pushf
lea
jmp
out
dec
lret
push
fsubs
pop
das
loope
nop
mov
pop
sub
shl
inc
cmp
ds
rcrb
outsl
mov
push
jge
xor
fsubr
fwait
gs
pop
cmp
rcrb
aaa
mov
sub
outsl
xor
cmp
dec
adc
inc
adc
inc
push
insb
mov
bound
add
popf
int
push
outsl
loop
int
xchg
sbb
mov
sbb
sub
jp
mov
jecxz
or
stc
cmp
push
cmp
sbb
ret
pop
sbb
cmp
push
fiaddl
jl
inc
repnz
addr16
adc
lahf
repnz
mov
and
xlat
adc
movsb
js
pop
xchg
ja
rcll
xor
push
rorl
es
cmp
cmp
test
cmp
fsubs
int3
je
std
xor
sbb
xchg
mov
out
mov
mov
jl
mov
ds
insb
fildll
testb
add
inc
xor
fwait
push
les
add
cmc
jb
mov
add
pop
sbb
inc
mov
push
pop
mov
int
add
std
xchg
jae
push
and
push
dec
jnp
mov
lar
fldcw
mov
icebp
add
mov
cmp
pop
scas
repnz
js
jns
loopne
rolb
adc
jg
xchg
out
mov
mov
and
jle
addb
pop
jl
and
push
clc
cmp
sub
movsb
jmp
mov
dec
fnsave
adc
mov
shrb
push
movsb
or
idiv
sbb
addr16
and
sbb
pop
and
iret
cld
jae
mov
pop
pop
lcall
push
fucomp
mov
imul
imull
jae
dec
sarl
cmc
or
push
in
jnp
lock
lock
dec
loope
push
adc
test
fs
and
sub
insb
mov
lret
jle
mov
pop
or
pop
cmc
idivl
and
test
mov
dec
sub
mov
repz
cmp
add
sub
mov
lea
jne
inc
and
shrd
neg
xor
lea
mov
shl
add
sub
shl
rcr
test
mov
pushf
test
call
pusha
lea
push
call
mov
mov
fsubs
test
lahf
leave
mov
adc
jae
test
sub
fwait
lds
pop
cli
pop
movsb
rorb
ret
inc
mov
cmp
test
or
nop
call
dec
jnp
and
jo
lahf
lret
call
mov
in
inc
push
lods
lret
je
fmull
pushf
test
jbe
clc
lods
repnz
mov
push
pop
imull
repnz
xor
loope
dec
xor
repnz
insl
outsb
negb
mov
jbe
aaa
negb
loopne
add
mov
adc
rclb
js
and
stos
xor
testb
and
aad
fstpl
sbb
es
jnp
andb
mov
and
lea
sahf
arpl
push
and
push
add
cmp
psubusb
cmp
ja
pushf
cmp
movb
pushf
call
cmp
adc
sbb
pop
xchg
cmpsb
fdivrs
movsb
leave
fbld
call
adc
dec
aas
outsb
rcrb
in
pop
push
pop
mov
inc
jo
cmpl
hlt
cmp
add
sub
inc
and
scas
in
in
inc
fwait
pop
out
js
push
and
sarl
sbb
jne
fimuls
push
mov
int
sahf
test
pop
pusha
call
loop
cmp
iret
aaa
bound
movb
test
xchg
pop
inc
adc
ret
clc
sub
pop
jge
lea
or
shl
aas
pop
fisttpll
and
mov
jle
push
btr
lahf
inc
sbb
sbb
adc
aam
mov
adc
adc
jecxz
jmp
popa
ss
rep
ret
add
dec
mov
fcompl
or
es
movsb
jns
enter
add
adc
sub
fildll
mov
push
jns
mov
pop
xchg
mov
mov
movsb
popa
adc
inc
js
dec
inc
jecxz
lods
repz
xor
shrb
les
jns
aas
outsb
addl
cld
jmp
lea
je
pusha
pushf
lea
jmp
clc
cmp
add
pusha
jmp
cmp
pushf
call
bsf
mov
and
pushf
rcr
sub
not
rol
bt
shl
lea
cmp
sub
pushf
pusha
call
pushf
jmp
test
sti
adc
mov
pop
inc
jb
ss
jmp
add
mov
jmp
aad
jns
fstpt
loope
cmp
dec
pop
mov
fsts
icebp
jg
add
mov
cmp
add
movsl
inc
inc
test
add
rcrb
and
ds
inc
xchg
stos
daa
sti
imul
lret
test
jnp
inc
jecxz
aam
fisubrs
jmp
xchg
in
loopne
or
mov
cmovbe
jl
ds
jo
inc
pop
xchg
ljmp
fiadds
lea
call
pushf
movb
pusha
mov
lea
jae
bt
cmp
xor
pushf
movb
movw
lea
call
jmp
push
movzbl
ror
bsr
shl
push
rol
aad
sbb
push
mov
xor
push
xor
call
cmc
add
stc
pushf
cmp
test
or
jmp
sbb
or
push
repz
pop
xchg
repnz
xchg
insl
pop
addr16
cmp
icebp
push
cmp
or
outsl
mov
push
add
sub
std
dec
mov
dec
mov
dec
shlb
out
mov
insb
aas
mov
ljmp
out
ror
mov
repz
std
pop
push
ficompl
cmp
in
dec
or
je
rclb
dec
in
rolb
mov
or
push
out
cmp
inc
cmp
mov
in
adc
out
sahf
inc
and
dec
mull
mov
mov
scas
xchg
lcall
jns
mov
xchg
scas
repz
mov
adc
ficompl
rcll
sbb
popa
mov
push
sub
sbb
out
mov
jecxz
hlt
push
mov
add
add
dec
outsl
popa
fs
imul
add
mov
or
mov
add
shr
pusha
jmp
int3
xor
fsubs
xchg
ret
pop
xchg
cld
inc
mov
outsl
sbb
sub
pop
mov
arpl
ljmp
les
test
jg
mov
stc
pop
lods
push
je
aam
sbb
jge
ljmp
xchg
pop
dec
push
movsl
xor
shl
mov
sub
push
add
or
lahf
pcmpeqd
test
jno
and
movsl
add
addb
xchg
lods
add
aas
popf
lods
mov
popa
jae
in
dec
loop
mov
dec
movsb
mov
mov
icebp
inc
and
test
pop
mov
mov
std
jle
std
push
addb
sbb
fisubrl
in
cmp
negb
stos
or
pushf
cwtl
sbb
adc
push
arpl
and
push
dec
sti
add
mov
xorl
insb
fcoms
inc
push
lods
scas
push
notl
clc
cmp
fimull
mov
scas
sbb
bound
ljmp
nop
pop
fsubs
nop
dec
jbe
adc
xor
bound
iret
jb
cld
lds
push
stos
into
adcb
push
in
cwtl
cmp
cs
adc
out
cmpsb
or
dec
pop
and
xor
js
cmpsl
jle
jne
inc
cs
xlat
out
xchg
idivb
inc
dec
sub
xchg
scas
sbb
cmovnp
in
and
mov
jbe
mov
fcomip
adc
sbb
and
jb
pusha
pushl
ret
lea
call
jmp
pusha
mov
pusha
push
pushf
lea
jmp
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
sub
and
cmc
sub
adc
inc
pcmpgtb
mov
incl
scas
sar
xor
fnsetpm(287
and
sub
mov
dec
cltd
adc
lcall
testl
sti
mov
jecxz
fdivr
cmp
fldl
aad
data16
pusha
roll
jp
enter
lock
add
hlt
jl
fisttpll
and
call
push
lea
jne
pusha
push
mov
push
lea
jmp
in
call
lea
jne
cmp
cmp
mov
not
shl
shr
bsf
sub
movzbw
cmc
mov
test
push
movb
sub
jp
sub
push
bt
jmp
mov
pushf
mov
pushl
ret
cmp
lea
jno
pusha
lea
jae
push
lea
jmp
push
movl
pusha
pushf
push
pushf
lea
jmp
pushl
popl
jmp
jg
pop
sbb
bound
fldcw
je
andl
jns
icebp
incb
lcall
outsl
adc
adc
sbb
sti
mov
js
sbb
test
ret
sbb
test
clc
pop
data16
gs
repnz
shlb
movsl
stc
mov
sub
cmp
sahf
loope
pop
add
cmp
clc
jecxz
sub
lds
es
xor
pop
cs
push
cmp
inc
pushf
out
mov
data16
cwtl
loopne
pop
ljmp
pop
inc
push
or
divb
xchg
mov
xchg
stc
stc
ror
cmp
xor
movb
cmc
clc
pushf
neg
pushl
mov
lea
call
cmp
pushf
cmp
cmp
jmp
lret
jge
fsubs
dec
jno
adc
cmp
mov
clc
lea
xchg
gs
sbb
adc
daa
pop
mov
jbe
out
fildl
xlat
jae
aaa
aad
in
sbb
imul
inc
sbb
and
repnz
mov
sbb
inc
mov
mov
mov
jno
mov
stos
aam
sahf
dec
leave
xchg
out
enter
sbb
mov
xchg
out
adc
testl
jo
xlat
dec
xchg
mov
fwait
cmpsb
sbb
pop
mov
and
pop
inc
idivl
lcall
or
dec
loop
sub
lahf
inc
outsb
jo
inc
sbb
or
cmpsb
or
xor
xchg
aad
stos
test
cmp
enter
xchg
jo
jmp
scas
out
cmp
push
test
les
repz
dec
clc
aaa
push
test
xor
addr16
shrb
cltd
testl
in
imul
jg
popf
repnz
je
loop
adc
data16
inc
cmp
sahf
arpl
fldenv
jnp
jae
rorl
add
add
lea
jmp
movb
pushf
lea
call
test
test
cmp
pusha
pusha
jmp
mov
adc
ficoms
stos
adc
lock
pop
mov
sub
push
stos
iret
cmp
mov
cmp
cmp
inc
rolb
mov
adc
loopne
mov
adc
out
xor
aas
rcrb
cmp
orb
and
loope
aad
lcall
or
push
lods
leave
sbb
ljmp
and
xor
addr16
fisttps
mov
inc
jne
fdivrs
testb
stos
dec
inc
mov
sub
repz
xchg
pusha
xlat
andb
cmpsb
jno
push
into
add
mov
inc
stos
pop
push
inc
stos
dec
pop
adc
jo
fstpl
push
stos
sbb
enter
pop
jl
je
mov
lea
hlt
dec
xchg
hlt
mov
fistpl
bound
aad
sub
ret
mov
cmc
push
mov
orb
and
subb
xor
sub
fisttpll
pusha
xor
insb
das
dec
and
daa
sub
xor
cmp
je
movsb
cld
addr16
jae
xchg
lods
add
pop
or
dec
sbb
bound
testb
aas
cmc
lahf
stos
jle
pop
popf
test
mov
rcrb
ret
fwait
daa
adc
sub
add
mov
movsl
cltd
aas
inc
pop
mov
xchg
aas
xchg
cmp
xchg
or
mov
andb
fstl
adc
mov
ror
or
sar
mov
add
mov
cmc
pushl
jmp
cmp
pushf
call
clc
bt
pusha
pushl
sub
bt
mov
call
mov
bound
test
fimull
cli
add
aas
icebp
cmpsb
cmp
sar
rsm
shlb
js
clc
pop
mov
sti
adc
nop
clc
int
or
pop
mov
xchg
mov
mov
cmp
adc
add
xchg
in
out
jle
aam
lea
push
fdivl
int
inc
mov
mov
jg
cmpb
xor
mov
adc
xor
iret
das
push
call
lea
ja
call
jmp
pusha
call
pushl
popl
push
pushl
ret
aad
xchg
daa
pop
std
lds
test
cmp
in
jb
sub
push
call
repz
cli
push
inc
test
jb
jnp
lcall
stc
lcall
inc
insl
out
sub
cmp
mulb
aad
mov
in
int3
adc
aam
or
or
bound
push
mov
sub
rcrl
mov
fs
ja
cmc
test
shr
sub
ror
neg
ror
or
add
stc
neg
shl
push
mov
mov
mov
test
cmp
stc
repnz
movw
pusha
push
mov
lea
jne
cwtl
movb
pushf
lahf
call
mov
setg
movzbw
mov
pushf
pushf
pusha
mov
pushf
mov
push
movb
movw
mov
pushl
ret
call
jmp
bound
insl
mov
sti
pop
scas
dec
sbb
call
fstpl
jnp
je
sub
clc
dec
lods
jo
adc
inc
arpl
hlt
fisttpll
dec
sarb
push
das
adc
nop
dec
sub
mov
fbstp
pop
cmp
cmp
js
push
aaa
xchg
or
push
xchg
push
sub
sbb
xchg
adc
fsubs
pop
bound
pop
inc
out
cltd
ss
add
jae
sub
dec
fwait
mov
jmp
arpl
popa
xor
push
fdivl
addr16
hlt
mov
aas
jg
imul
insl
sub
into
pushf
or
mov
xchg
jbe
jge
push
jne
add
jecxz
pop
fsubs
mov
testl
mov
jecxz
add
push
lahf
inc
dec
mov
mov
pop
push
cmp
add
or
pushf
jne
xchg
sub
loope
jns
and
fisubs
in
dec
jne
mov
jmp
aam
sbb
mov
cmp
test
call
ja
push
fsubs
mov
fistps
ret
mov
out
dec
fstps
mov
out
popf
ljmp
test
lret
out
inc
mov
lret
xchg
jp
test
repz
stos
push
test
xor
test
xor
rcrl
lret
xor
push
test
jg
sarb
mov
sbb
gs
movsb
aam
out
push
mov
fsubrl
mov
jp
mov
dec
mov
fsubs
in
sarl
mov
sub
cmp
fidivl
or
sbb
mov
lods
adcl
in
rcll
xor
jmp
mov
test
lods
lahf
pop
lahf
test
lods
mov
stos
test
pop
popf
pop
popf
test
test
scas
pop
pushf
lahf
pop
cmpsb
test
sahf
pop
mov
lahf
pop
sahf
mov
fwait
cmpsl
mov
test
pop
cmpsb
mov
mov
pop
lods
cmp
ss
fsubs
mov
add
xlat
mov
enter
jo
pop
cmp
jg
fiadds
jle
loopne
pop
adc
test
xchg
xchg
cltd
aas
and
xchg
cs
mov
xchg
fcompl
mov
xor
jne
mov
push
jne
jle
fmul
loop
mov
xor
jbe
outsl
cwtl
ret
push
mov
stc
movsb
inc
xchg
leave
clc
add
xchg
mov
lcall
dec
rol
xor
fisubrl
or
in
std
mov
aad
push
add
sahf
add
int
xchg
imul
bound
not
pop
pushf
mov
pushl
ret
inc
mov
inc
and
ror
xchg
stc
call
pusha
lea
je
stc
jb
cmp
cmp
add
push
lea
jmp
cmp
movw
call
pushf
bt
xor
call
xchg
arpl
fsubs
jae
jno
rcr
cwtl
test
xor
cs
shl
lcall
lahf
js
push
pop
push
push
inc
lret
sbb
xor
aas
mov
cltd
xor
and
aas
add
xor
fsub
inc
scas
dec
jne
inc
push
and
mov
mov
rep
pop
call
jne
gs
xor
fs
insb
add
repnz
push
inc
shl
push
setge
mov
btr
push
btc
push
cmc
adc
shl
movsbl
mov
jmp
pusha
jmp
lods
lock
cmp
aaa
test
je
add
fsubs
push
lds
cli
add
and
jb
push
into
stos
sbb
jmp
jno
cmpsb
push
daa
push
jnp
mov
add
mov
fsubp
xchg
add
mov
icebp
add
out
sbb
insb
ret
jns
lcall
fldenv
mov
iret
pop
pop
pop
adc
decb
cmc
jle
imul
inc
aad
jg
imul
addl
xor
loope
imul
xchg
out
scas
lret
mov
pusha
mov
outsl
lock
cmp
fsubl
out
insl
adc
es
xchg
iret
or
push
cmp
mov
and
repz
mov
ja
pop
xchg
and
mov
out
sti
out
cs
into
inc
ret
hlt
mov
jno
sbb
out
data16
sub
pop
arpl
js
shll
mov
and
test
popf
dec
aam
or
sub
je
cmp
ds
adc
js
adc
pop
push
loop
mov
rcrb
sbb
aas
movsb
jmp
xor
aaa
jns
popa
dec
and
mov
je
pushf
dec
jne
xchg
and
cmpl
js
and
fadd
out
mov
cltd
dec
in
xchg
dec
insb
push
sub
or
mov
iret
cmp
or
icebp
shl
lods
push
pop
fdivp
mov
fdivs
sub
in
fnstcw
fidivl
scas
xor
push
mov
xchg
jle
mov
pop
pop
add
sub
aas
inc
sbb
xlat
and
push
sub
pop
sub
sub
bound
notl
sub
popf
xchg
addl
and
int3
repz
cmpsb
pop
and
daa
filds
leave
aaa
lods
jae
cmp
mov
and
out
mov
in
sub
add
xor
imul
sbb
pusha
adc
push
or
dec
mull
cmpsl
xchg
xlat
cmp
into
andb
xor
insl
es
adc
mov
xchg
sti
push
call
sub
mov
mov
and
and
out
mov
das
cmc
dec
cmpsb
or
repnz
inc
hlt
out
mov
neg
mov
call
lea
ja
call
cld
jne
aad
stc
lods
and
mov
cli
stc
loopne
je
jo
in
sbb
mov
jge
sti
stc
lcall
cs
jo
dec
out
jmp
dec
jmp
pop
std
xlat
pusha
jmp
in
sbb
data16
jle
scas
add
ds
add
pop
repnz
nop
sbb
lods
xlat
inc
std
mov
jbe
daa
test
fs
jp
aam
aad
shlb
aas
jns
into
ja
adc
adc
test
sub
enter
stos
stos
sub
test
ja
sbb
jle
mov
sahf
jno
add
cli
xchg
icebp
ret
push
push
sub
into
pop
cmpsl
dec
push
push
ja
aaa
in
xchg
mov
push
xor
dec
mov
xchg
sahf
notl
in
aam
jl
aad
outsl
lret
loop
shl
test
sbb
mov
push
idivl
fcoml
cmp
mov
mov
shrb
inc
lods
adc
subl
fadds
lods
add
test
cmovle
and
clc
cli
mov
fs
bnd
movsb
or
insb
lods
jge
rolb
addr16
jbe
adc
mov
sbb
and
mov
std
fadds
jmp
mov
push
xchg
rclb
jnp
or
jmp
lock
ror
ret
mov
or
jmp
movsb
sbb
mov
divl
push
outsl
stc
scas
xor
stc
sub
dec
in
dec
mov
imul
xor
js
mov
in
jo
dec
sti
lods
jb
fnstcw
dec
clc
imul
sbb
cld
dec
push
repnz
clc
insl
push
ljmp
test
or
dec
dec
or
mov
out
gs
je
call
and
adc
and
aam
xlat
inc
pushf
in
jmp
jmp
jmp
aad
pop
clc
pop
imull
cmp
popf
lock
vunpcklpd
cmp
sub
mov
add
shlb
repz
cmc
jb
and
in
mov
fucomip
fcomps
loopne
xchg
loope
imul
lods
pop
add
xor
jne
call
in
push
into
cmc
xor
in
push
je
ja
jge
shlb
mov
pop
mov
cwtl
notl
jb
test
and
out
xchg
push
cwtl
adc
push
xor
nop
adc
or
outsb
mov
iret
push
out
mov
stos
mov
shrb
pusha
sub
pop
dec
jle
inc
push
notl
inc
in
jae
mov
fld
sbb
or
jbe
jmp
js
addb
imul
adc
clc
test
xorl
mov
insb
jg
ljmp
add
sti
pop
mov
and
add
ret
xor
xor
rep
inc
push
add
add
jg
outsb
adc
pop
insb
es
xchg
js
outsl
add
add
add
adc
jl
jns
sub
push
jne
cmp
mov
imulb
jae
adc
mov
es
jb
out
cltd
ss
xor
jo
jnp
push
not
fdivr
es
jb
outsl
je
jo
xchg
clc
add
pop
add
orb
jmp
out
pop
hlt
std
push
add
jb
mov
add
clc
cmc
jle
cmc
adcb
out
xor
rclb
icebp
fsubr
cli
clc
call
inc
xchg
and
sbb
sub
ja
push
js
push
outsb
mov
repnz
push
rol
add
pop
out
jge
call
test
lea
jp
push
repz
addr16
fists
mov
test
jne
in
sarb
in
sub
ja
stc
sub
xchg
addr16
mov
sub
adc
xchg
stos
push
sub
in
push
sbb
push
push
jb
aaa
js
jbe
cmc
std
push
and
jnp
mull
mov
icebp
push
cmpsl
xchg
outsl
mov
cwtl
out
cli
add
jno
push
bnd
push
mul
xchg
or
mov
sbb
or
aad
je
lock
jge
sub
pop
sti
lock
sub
mov
outsl
adc
jg,pt
insb
outsb
push
jns
clc
mov
in
adc
and
push
jnp
std
jmp
mov
push
adc
jnp,pt
sub
push
repnz
hlt
jg
in
pop
ljmp
scas
mov
or
add
adcb
push
inc
icebp
cmp
cmp
xor
sub
xor
jmp
ja
std
daa
jns
jbe
cmp
repnz
in
jl
icebp
xchg
pop
and
popa
add
adc
in
lock
imul
xchg
add
jo
js
adc
pop
lock
es
push
clc
outsl
xchg
push
or
pop
pop
es
ss
testl
addr16
xchg
push
xchg
xchg
add
nop
jl
mov
sbb
outsb
je
lock
es
idivl
xor
jo
jmp
hlt
fldcw
xor
or
adc
imul
mov
xor
jns
imull
adc
xor
hlt
jg
outsb
pop
pop
fs
rcrl
test
push
subl
add
jo
push
clc
jno
push
xor
testl
cmc
jne
cmc
cmc
outsl
cmc
jge
cmc
insb
shl
xor
je
incb
jmp
cmc
jb
cmc
push
sub
adc
mov
add
add
adc
xor
ret
or
aad
hlt
aaa
out
pop
jae
jne
sbb
or
je
negb
xor
xor
cli
adc
hlt
jo
add
clc
jb
adc
mov
hlt
adc
jg
add
or
js
pop
sub
push
jae
jbe
idiv
ljmp
adc
ss
adc
xor
add
test
repz
adc
testb
jl
sub
inc
idivb
test
pop
mov
cli
push
testb
adc
clc
hlt
subb
incb
push
addl
cmp
jnp
idivb
hlt
add
mov
inc
cli
imul
hlt
push
addb
or
js
test
fadds
add
jl
jno
mov
xor
push
mov
sti
adcl
pop
outsl
out
add
push
xlat
xor
int3
or
jl
jno
jo
test
cmp
cmp
jg
jbe
or
xor
jbe
ljmp
xchg
mov
test
stos
daa
xchg
jne
push
xchg
cmpb
lock
sub
adc
push
insb
es
push
js
jge
cwtl
or
ja
shl
in
adc
ss
xorb
xchg
idiv
hlt
push
jl
push
add
pushf
imul
xchg
adc
ds
push
jo
push
mulb
jmp
mov
jmp
aaa
add
adc
pop
pop
pop
or
push
push
push
xor
jo
into
daa
dec
ss
je
lock
popa
xor
jo
fimull
push
jae
aad
push
je
cmovge
jo
adc
cmc
pop
repnz
leave
nop
subb
hlt
jge
add
js
in
push
jge
jl
inc
jae
sbb
out
insl
jmp
js
js
imul
test
push
frstor
addr16
shl
cmp
push
jne
jmp
add
mov
jae
popa
adc
cli
add
sub
stos
addb
add
mov
cmp
in
sbb
sub
sti
inc
mov
call
inc
jns
pop
xchg
xorb
jnp
insl
ret
or
sbb
add
test
sbb
call
imul
add
mov
xchg
push
add
adc
dec
jbe
push
insb
cld
hlt
jne
inc
add
out
cmc
outsl
test
jl
jge
das
jno
insb
shll
insb
testl
je
test
or
jae
test
divb
jmp
jp
push
mov
xorb
push
inc
pop
jbe
cmc
hlt
add
xorb
pop
push
and
jno
adc
nop
jmp
jbe
test
repz
jbe
add
orb
ljmp
sar
jl
je
adc
stc
inc
xor
stc
sbb
aaa
std
cmp
cmp
jge
mov
js
inc
outsb
xchg
pop
jbe
icebp
add
notb
test
clc
add
jbe
add
mov
div
repz
inc
div
shrb
sbb
stc
lret
insb
mov
adc
mov
sub
cli
mov
xor
jo
sti
mov
cwtl
mov
cld
insb
repnz
rorl
sub
test
cs
mov
mov
mov
mov
mov
mov
mov
push
or
repz
jmp
lods
mov
int3
push
jmp
or
dec
dec
test
stos
mov
std
das
or
sub
dec
pop
mov
mov
cwtl
sub
or
sub
jl
repnz
shll
jb
xchg
sub
loopne
js
xor
mov
sub
test
sub
xor
adc
mov
je
jl
jb
mov
aaa
data16
out
and
add
add
std
in
cmp
or
je
lcall
pop
mov
inc
test
in
cmp
into
pop
lret
lret
push
jmp
or
or
jmp
or
or
rorb
clc
aad
or
aas
nop
ljmp
in
jo
imull
jnp
cs
outsb
in
sub
or
out
shll
ljmp
xchg
icebp
shl
ss
xchg
outsb
or
jmp
stos
or
or
insb
addb
lret
pop
sub
dec
mov
in
jb
jmp
cmp
jnp
call
mov
icebp
dec
xorl
outsb
div
imulb
imull
jae
mov
push
mov
mov
mov
ljmp
insb
es
jmp
lret
mov
xchg
inc
mov
cli
bts
push
repz
push
ja
inc
jp
lock
sbb
daa
add
xchg
xchg
mov
ja
xchg
cwtl
shlb
mov
nop
scas
insl
mov
pop
stos
inc
scas
mov
or
cmc
dec
into
jae
insb
inc
ljmp
mov
dec
cmp
int3
lods
int3
cwtl
insl
mov
cmpb
mov
mov
lret
jg
pop
mov
stos
inc
sub
or
js
arpl
les
jmp
sbb
push
mov
adc
cmp
pop
lret
mov
nop
jne
arpl
outsb
aaa
repz
scas
xor
mov
bnd
jg
test
cmp
push
xchg
pop
sbb
add
cmc
je
aaa
push
or
lock
out
pop
sbb
or
mov
push
push
loop
inc
jmp
imul
testb
or
xchg
sub
clc
lds
mov
rorl
cmpsl
andl
insl
outsb
mov
inc
repnz
lods
addb
ljmp
cld
test
mov
cmpsb
pop
test
dec
adc
fimull
pop
scas
inc
cmpsb
fadd
in
sbb
cli
dec
pop
stc
int
inc
jno
daa
icebp
ja
arpl
cmp
data16
pop
ss
cli
mov
icebp
inc
push
xor
aam
mov
push
dec
pop
bound
add
mov
cmc
scas
loope
mov
mov
daa
lret
insl
pop
and
repnz
push
mov
mov
jbe
popa
in
and
pop
test
pop
xchg
ret
test
mov
jns
push
call
push
pop
add
in
cmp
lret
jne
addr16
xchg
imul
dec
or
pop
push
sbb
sbb
fisttpll
out
cmc
iret
loopne
push
mov
stos
cmc
adc
pop
add
scas
ljmp
imul
dec
clc
adc
out
adc
cmp
and
stos
and
clc
push
xor
push
cmp
xchg
ds
inc
out
xor
jae
cmpsl
int3
inc
and
push
jl
je
jmp
xchg
notl
push
testb
les
sbb
sub
repz
adc
push
adc
mov
rclb
add
xchg
ja
pop
xor
sbb
xor
push
scas
decl
sti
jl
cs
test
xor
repnz
jo
icebp
daa
lock
je
lock
es
xor
jo
insb
daa
in
imul
test
negb
imul
das
imul
mov
divb
hlt
xchg
aaa
ja
andl
jae
adc
fidivs
jmp
mov
div
in
mov
xor
addb
test
mov
ss
mov
outsb
mov
and
push
scas
adc
add
cs
in
adc
sub
mov
test
ja
mov
sbb
xor
or
into
pop
rorl
xor
repz
ja
in
icebp
stc
sub
into
mov
adc
sub
inc
mov
push
icebp
std
mov
jbe
int3
and
in
sub
inc
insl
jns
cmp
in
mov
mov
jae
lods
or
outsb
jo
push
xor
sti
insl
data16
jmp
mov
repnz
aaa
jmp
outsl
or
icebp
xchg
sub
jp
add
imul
lock
in
loop
sbb
adcb
arpl
dec
xor
ljmp
sbb
inc
imul
repnz
dec
stc
in
push
jne
rcll
das
sub
xchg
roll
jl,pn
aam
mov
mov
sub
dec
ds
inc
jbe
or
pop
adc
sub
hlt
shrb
imul
lcall
cmp
lock
idivb
insb
outsb
sub
or
jmp
in
mov
in
rolb
mov
imul
out
and
int
stos
xlat
or
outsb
adc
ja
add
outsb
pop
xchg
icebp
sbb
adc
adc
cmp
repz
ds
leave
fdivs
add
push
lock
cmp
out
push
repz
decb
dec
test
and
mov
clc
pop
das
jb
adc
add
divb
test
xlat
and
or
inc
cmp
xor
mov
jne
pop
out
daa
sub
mov
cmpsb
mov
rep
dec
sbb
push
lods
mov
ljmp
xor
movq
dec
ljmp
stc
es
outsb
mov
leave
iret
hlt
scas
mov
int
fisttpl
pushl
incl
lret
test
cmp
pop
dec
xchg
mov
das
jp
les
jmp
shrl
xor
test
inc
mov
xor
sbb
jo
out
xor
or
mov
jne
ret
andl
or
dec
ja
hlt
popl
mov
add
xor
and
pop
push
adc
incl
fcomi
jae
test
pop
out
push
mov
leave
push
mov
repz
mov
dec
jle
outsl
cld
sub
movsb
dec
out
jae
xor
mov
data16
dec
mov
cmpsb
mov
xor
gs
jo
scas
xor
jmp
icebp
out
sub
mov
dec
or
push
stos
es
mov
outsb
or
xor
outsb
mov
mov
aaa
scas
mov
xor
shll
mov
cli
pop
inc
mov
mov
aad
sahf
xor
testl
xor
sbb
clc
mov
pop
out
test
jmp
scas
cmc
mov
jnp
cmp
mov
add
mov
aad
outsl
xor
jo
lods
mov
in
mov
xor
mov
mov
pop
stos
xorl
add
sub
repz
inc
add
cmp
repz
std
scas
mov
sbb
repnz
add
mov
dec
push
das
mov
xor
out
dec
js
dec
push
jge
insl
jne
push
mov
add
inc
les
dec
push
sub
dec
rcll
cmpl
or
repnz
xor
push
xchg
or
adc
jmp
scas
imul
or
dec
ret
lret
imul
mov
push
xchg
jp
in
inc
jbe
test
push
mov
cmc
cvttps2pi
hlt
subl
adc
or
aad
or
xor
jmp
mov
clc
insb
out
int3
inc
les
movsl
out
sbb
call
test
jo
std
mov
iret
push
pushf
add
subl
hlt
mov
lods
xor
inc
int
addb
outsb
mov
pop
imul
sbb
scas
subl
sub
sbb
push
mov
pusha
scas
int
jb
or
js
xchg
jle
add
outsb
xor
mov
cs
or
insb
mov
push
cld
jle
sbb
lock
xchg
lret
jg
sub
out
in
xchg
outsb
xor
pop
push
xchg
and
xor
xchg
dec
cmp
or
cmp
xor
inc
xchg
add
cld
jne
ss
test
jae
nop
idivb
sub
jl
aad
jg
or
sbb
xor
jo
out
test
and
cmc
mov
mov
dec
push
rclb
sub
mov
call
ljmp
xchg
cmpsl
push
jmp
jbe
and
dec
hlt
pushl
or
icebp
push
hlt
sbb
lock
cmp
adc
jae
mov
mov
hlt
test
jge
and
jle
cmc
dec
sarb
add
xor
adc
adc
pop
mov
pushf
flds
pop
movsb
fistps
movsb
iret
mov
push
fcmovb
clc
and
cli
xchg
mov
sbb
movsl
xor
push
lods
xchg
imul
scas
out
adc
pop
aad
outsl
test
int
cmc
notl
add
mov
mov
cwtl
js
mov
add
rol
sub
mov
jmp
js
mov
mov
ss
lock
sub
sub
test
jge
out
sub
loopne
jne
jne
mov
adc
js
fdivr
aad
sbb
pusha
testb
and
incl
repnz
jbe
repnz
icebp
cli
add
jle
lret
adc
or
clc
outsb
faddl
out
jne
je
shl
cmpsl
sbb
std
data16
sbb
imulb
lret
pop
gs
bnd
out
je
jl
repnz
push
repz
subb
and
bound
divb
adc
jnp
or
push
in
or
mov
cld
std
sbb
add
jle
es
jg
mov
test
imul
repnz
xchg
hlt
std
sbb
xchg
in
clc
xchg
or
decb
icebp
js
inc
pushl
pop
in
pop
pop
xor
std
subb
loopne
xor
addb
and
cmc
add
or
inc
jle
test
repnz
sub
cmp
test
arpl
repnz
bsf
add
jg
add
out
cld
and
hlt
mov
mov
std
or
jl
jg
sti
cld
or
addl
jl
test
nop
das
jns
cld
and
push
lcall
and
adc
outsb
add
clc
out
mov
mov
jne
mov
xor
clc
xor
test
cmp
or
es
mov
mov
clc
fs
adc
mov
and
cmp
inc
divl
add
xor
ds
scas
pop
xor
mov
sbb
or
sub
shr
xor
mov
test
sub
lods
xchg
out
test
mov
mov
mov
out
or
pop
xchg
mov
loopne
out
mov
andb
repnz
sub
movsb
add
jge
or
add
lock
cmp
mov
aaa
jne
test
xor
mov
divl
jle
push
sbb
gs
sbb
lods
test
cmpl
int3
add
xchg
cmc
cmc
outsl
cmp
out
or
rclb
hlt
enter
jbe
and
xor
inc
mov
push
outsb
mov
shlb
add
ljmp
das
pop
add
jge
clc
in
xor
sbb
xchg
inc
ja
cmpl
cmp
arpl
out
repz
shlb
add
ds
xor
jge
movswl
push
mov
mov
repnz
inc
cmp
pop
push
cmp
sbb
cltd
jne
ljmp
fnstenv
loopne
ss
out
fyl2x
rcll
adcl
fimull
mov
addr16
dec
jp
mov
movl
call
test
cltd
aas
stc
test
or
cltd
insb
adc
jecxz
mov
sub
pop
jmp
push
out
dec
dec
stc
std
push
out
and
xchg
std
ja
data16
popf
or
jne
ja
push
sahf
jbe
jmp
aad
push
cmp
lret
pop
fs
out
push
cwtl
addr16
sbb
dec
cwtl
fcoms
jmp
pop
mov
inc
inc
jmp
test
daa
leave
stos
jmp
push
cwtl
push
xchg
fnstcw
gs
mov
hlt
addl
leave
rorl
test
daa
ret
roll
call
movsb
cmp
fs
pusha
call
sub
push
pop
xor
cwtl
leave
call
jmp
pop
xchg
cwtl
cmp
jne
push
test
enter
test
jmp
mulb
xor
repz
ret
std
xor
fsubr
jl
and
out
into
push
nop
push
mov
mov
pusha
cli
mov
ljmp
cmp
call
aam
add
push
add
mov
mov
xchg
dec
push
mov
jne
sbb
jne
push
mov
push
pop
sbb
enter
ja
das
cmp
int
push
push
daa
ss
in
scas
push
adc
js
das
aad
leave
xor
negb
and
popf
push
jmp
mov
mov
sbb
xchg
mov
jne
ds
loopne
push
ja
scas
jmp
hlt
ss
pop
or
cmp
xchg
shll
add
or
pop
dec
inc
adc
inc
insl
mov
aaa
rclb
daa
clc
fwait
imul
lds
out
jne
push
addr16
xor
push
mov
push
mov
call
stc
fmuls
sub
xor
cld
ja
push
cmpsb
adc
mov
pop
dec
cmpsl
ja
clc
cmpsl
gs
inc
push
nop
js
ret
and
int
adc
lahf
xchg
xchg
test
dec
sub
push
js
adc
xchg
xchg
adc
adc
mov
pop
xchg
js
push
pop
dec
fs
aad
aam
lds
movsl
xor
push
pop
push
ret
jno
movsb
push
push
xchg
fsts
jecxz
aaa
push
sub
or
ja
push
clc
mov
ljmp
fs
xchg
mov
jle
mov
adc
jbe
imul
push
xchg
mov
or
stos
push
jmp
mov
in
mov
js
loopne
bound
into
and
add
jne
in
aad
pop
push
push
cmpsb
dec
add
sbbl
xor
ja
cmp
mov
inc
xchg
inc
mov
sbb
lcall
xchg
out
rorl
test
and
out
sub
pop
inc
or
jecxz
pop
mov
std
xor
mov
jp
fld
call
push
adc
test
ss
cmp
lods
loope
aaa
xchg
loop
sub
lret
lods
into
adc
pop
sbb
in
out
fs
adc
adc
mov
jb
ss
and
mov
mov
cld
and
pop
adc
leave
jmp
or
mov
out
adc
pop
dec
lret
push
stc
xchg
stos
jmp
mov
or
enter
mov
rcrb
addr16
cmc
inc
ja
hlt
loop
inc
jne
inc
mov
sbb
jno
lods
cmp
shll
sti
js
cmpsl
clc
insl
pop
into
stc
movsb
cmp
js
mov
addr16
inc
adc
sbb
out
andb
jmp
fidivrl
mov
mov
jecxz
push
mov
xchg
jle
aaa
sub
pop
mov
mov
repz
inc
addr16
mov
adc
cmc
leave
mov
loopne
scas
add
gs
loop
aad
mov
shlb
xor
movsb
ret
movsl
imul
arpl
jns
xchg
sbbl
push
add
pop
cmpsb
movsb
leave
sbb
inc
push
imul
sti
xor
loop
adc
pop
pushf
push
fiadds
aaa
push
js
je
xchg
dec
js
idiv
xchg
mov
jns
ja
lahf
xchg
mov
and
scas
adc
or
xchg
in
push
inc
ss
dec
push
ja
push
mov
mov
scas
leave
add
ja
in
mov
push
sbb
ja
cwtl
cmp
cmp
xor
or
ja
aad
pop
sbb
push
push
or
sub
xor
out
xchg
push
pop
divb
jns
in
call
add
addr16
or
leave
sti
xchg
nop
idivl
jge
scas
push
adc
daa
and
and
mov
mov
mov
notb
cmp
cmpsl
jg
add
dec
inc
leave
adcl
dec
jb
jne
cmpl
jbe
ja
jle
mov
jns
dec
call
es
or
in
or
ss
xchg
loop
leave
andb
push
daa
cwtl
addr16
xchg
insl
and
ja
dec
ror
adc
cmp
data16
in
stc
fdiv
xorl
dec
sub
addr16
insl
data16
add
daa
mov
cmp
leave
mov
jmp
in
sti
addr16
ja
fs
notl
xchg
stc
add
test
insb
dec
adc
call
xchg
xor
mov
repnz
xchg
aas
lds
xchg
jmp
fildll
mov
addr16
xor
xor
inc
jg
mov
ja
scas
test
movsb
push
ja
lret
roll
mov
fistps
ds
sbb
pushf
and
sbb
call
enter
jmp
xor
jmp
daa
mov
mov
dec
or
dec
push
std
xor
call
inc
sti
cmp
jl
inc
enter
sbb
movsl
lock
lret
cmp
sahf
adc
out
daa
mov
fwait
mov
dec
xchg
aas
je
push
or
addr16
dec
cmpsl
addr16
mul
mov
stc
push
xor
pop
fimull
fwait
addr16
addr16
mov
mov
jae
jne
sub
scas
or
nop
or
clc
nop
insb
xor
je
fwait
pop
aas
cld
mov
jne
xchg
xchg
sbb
ds
jp
aaa
into
lds
mov
jnp
jmp
adc
cmpsl
out
mov
mov
aas
sub
mov
ja
movsb
mov
test
insl
mov
or
js
sub
imul
insl
jbe
push
and
inc
mov
insl
outsb
clc
adc
adc
push
out
jecxz
dec
push
call
xor
push
pop
out
xor
out
pop
push
xchg
cld
xchg
jecxz
push
xchg
daa
sbb
adc
cmp
add
sar
out
xor
aad
xor
ljmp
or
xchg
xchg
movsl
nop
lods
jo
add
add
stc
ret
mov
inc
enter
nop
mov
cld
xchg
mov
sbb
notl
mov
dec
movsb
je
sbb
lods
sub
notb
addr16
mov
or
lds
std
scas
test
push
cwtl
mov
sbb
push
jae
add
xor
mov
jge
cmpsl
add
jmp
mov
test
dec
test
loopw
adc
bound
decl
mov
lret
cmpsb
xchg
xor
andb
out
adc
inc
add
fdivs
xchg
cmp
xchg
pop
mov
xor
ja
cmp
push
mov
mov
test
lods
sti
or
aas
dec
xchg
jae
cmpl
jne
sub
jmp
test
push
xchg
push
mov
rclb
dec
jmp
jge
jmp
mov
pop
jo
shl
ja
xchg
cmp
jecxz
out
dec
or
dec
ror
cmp
and
imulb
in
sarb
xchg
addr16
rcll
lock
ljmp
xchg
add
lret
gs
mov
leave
and
add
xchg
ss
jbe
mov
ja
js
push
aam
dec
pop
inc
jecxz
leave
mov
rol
pop
adc
call
repnz
fsubp
push
ja
ss
xchg
sub
fwait
or
mov
lock
adc
adc
mov
adc
sahf
push
testb
inc
adc
test
mov
shll
test
jle
mov
cltd
pop
loope
mov
dec
sub
pushf
lods
in
mov
aam
or
mov
xchg
pop
cwtl
xchg
ret
insl
loop
jl
dec
and
repnz
lds
or
fcompl
sbb
mov
pop
repnz
mov
push
enter
pop
mov
jmp
ss
push
out
sub
test
dec
jge
shrb
adc
hlt
dec
daa
add
xorb
and
mov
ss
shl
jmp
aas
dec
lods
out
jb
cmc
xor
loope
int
mov
jl
popf
je
sbb
ja
cwtl
xchg
aam
repz
dec
xorl
fiadds
enter
mov
cmp
sbb
rcrl
clc
inc
adc
sub
pop
mov
sub
mov
ret
and
and
leave
and
mov
scas
sub
cmp
xchg
test
lret
cmp
fdivrl
push
out
add
test
js
inc
mov
ljmp
call
add
jle
je
scas
jle
leave
pushf
scas
leave
and
mov
jae
movb
stc
ja
xor
fs
push
imulb
insl
scas
out
mov
iret
js
gs
pop
in
jmp
jmp
addr16
rcll
jmp
loopne
repz
sbb
pop
fmull
dec
push
sbb
xchg
sbb
leave
sbb
fdivs
push
push
jmp
sti
sbb
repz
jle
aaa
aaa
daa
xchg
jmp
addr16
leave
dec
sub
push
mov
repz
aad
jnp
push
daa
adc
sbb
jmp
push
mov
mov
sarl
sbb
fnstenv
xchg
leave
rolb
idivl
mov
call
sub
add
inc
int
push
pusha
pushf
pusha
imul
pusha
sbb
pusha
mov
pop
push
cmc
sarl
aaa
out
sbb
mov
inc
adc
fmul
add
xlat
jbe
sbb
cli
leave
imul
idivb
push
mov
vpsubb
mov
add
cmpsl
mov
add
adc
jnp
bnd
pop
test
sti
add
sbb
jmp
dec
int
clc
jmp
cli
clc
sbb
std
pop
add
fucomi
fsubs
outsl
adc
sar
mov
adc
pop
es
jo
pop
aad
imul
std
arpl
je
adc
shr
adc
cmc
or
cli
or
fisttps
xchg
les
jns
add
adc
js
mov
jmp
adc
std
jb
inc
std
dec
adc
fbld
push
testl
in
notl
and
cli
sub
loop
idivl
fimull
jne
push
insb
pop
and
shrl
inc
jmp
jp
adc
add
outsl
or
leave
rorb
mov
mov
mov
imul
mov
pop
cli
xlat
idivl
aad
xor
jns
mov
out
ret
testl
jbe
fcoms
and
fdivl
and
push
ja
jmp
leave
pop
daa
and
mull
xchg
pusha
jns
sarl
mul
sti
adc
test
std
cli
sbb
xor
push
jg
out
adc
negb
sub
jmp
enter
mov
cmp
imul
or
jne
cmc
xor
or
test
test
sbb
cmc
cli
sub
sub
aad
push
repnz
cmc
insb
das
sub
rsqrtps
idivl
notl
sub
idivl
ja
enter
stos
movsb
mull
das
ret
xlat
test
adc
cmp
notl
cmp
notl
push
mov
mov
test
push
je
mov
pop
xlat
ds
idivl
jge
mov
negl
mov
jmp
cmc
adc
push
add
xorl
inc
divl
adc
cltd
xchg
sbb
adc
add
or
push
xchg
inc
and
call
sbb
aad
std
xlat
jmp
mov
fistpll
cs
jns
jnp
js
pop
xchg
pop
dec
xlat
dec
add
inc
shrl
leave
leave
out
std
cmp
jl
sarl
sbb
int3
cmp
clc
xchg
jns
jl
jnp
jp
push
add
pop
sbb
lret
cwtl
jne
mov
in
or
sbb
div
cmpsl
aad
xor
jle
insb
jne
xchg
insb
adc
rcrl
sarl
cmp
std
xchg
pop
test
push
fidivrs
push
sti
xlat
testb
repz
push
loopne
divl
or
int
icebp
push
loopne
hlt
rcr
repnz
jb
notl
jne
pop
pop
mov
xor
int
xorb
mov
jmp
xor
lea
sub
push
mov
and
sahf
and
repnz
jbe
xchg
pop
mov
lahf
loope
andl
add
negl
xchg
push
and
divb
and
adc
sti
or
and
bound
clc
adc
jge
daa
divl
mov
or
mov
dec
cmc
mov
push
out
repnz
rcrl
test
cmc
push
xchg
repnz
repnz
or
jl
bound
imull
pop
icebp
and
push
rcrb
jle
jg
sahf
aas
push
incb
xorl
push
cmp
xchg
pop
pop
sub
insb
push
repnz
out
add
adc
les
adc
inc
es
test
xchg
or
mov
pop
cmp
call
and
repz
in
pop
adc
xor
sbb
outsl
jb
gs
jae
pop
push
enter
jb
cmc
js
ja
push
shlb
je
push
lock
xchg
pop
xchg
daa
pop
inc
icebp
ja
icebp
jb
xor
jae
aad
les
test
das
dec
push
mov
imul
dec
imul
clc
in
arpl
js,pn
sbb
rcr
push
jne
inc
jno
xchg
icebp
mov
add
es
jp
outsl
test
sti
es
jl
clc
sub
or
js
stos
gs
icebp
mov
lret
add
jb
xchg
push
div
xchg
inc
sbb
add
jb
jle
lahf
jo
cld
sahf
inc
mov
inc
outsb
insb
mov
xor
repnz
ds
repnz
pop
outsb
icebp
ror
mov
push
in
jle
pop
shr
jne
into
pop
js
add
cmp
inc
addr16
in
add
or
or
js
repz
add
cmpsl
or
jle
imul
sbb
ds
cmc
or
or
mov
push
lret
jmp
ja
push
pop
mov
pushl
mov
xchg
in
or
sub
mov
stc
dec
insb
mov
icebp
cs
mov
insl
lea
dec
mov
xorb
or
dec
ds
mov
add
movsb
notl
imull
sbb
aaa
cmc
scas
shll
jbe
icebp
scas
das
ja
iret
movsl
jmp
pop
mov
faddl
movzbl
das
movl
inc
shlb
lock
insb
pop
or
xor
jo
push
daa
nop
mov
adc
mov
fsubl
sar
ss
or
inc
jb
mov
push
repnz
cmp
xchg
orl
xchg
adc
insl
jl
fsubl
pop
rcll
shlb
xchg
addl
mov
and
outsl
pop
push
or
aaa
push
je
mov
test
cmp
mov
aad
adc
lret
dec
testb
shr
aaa
push
mov
repz
mull
xchg
sahf
pop
enter
push
ja
gs
out
pop
mov
add
cmp
movsb
adc
pusha
xchg
cmc
add
xchg
xlat
push
call
sbb
aad
xchg
iret
jns
cli
cli
in
ljmp
mov
cld
push
sub
add
movsl
sbb
fstpl
fildll
addr16
aad
mov
mov
sbb
or
dec
imull
add
icebp
rcrb
jno
xchg
sub
or
mov
mov
lret
test
in
jo
xchg
int3
and
lock
jbe
fs
mov
push
jae
xchg
ficomps
les
lods
and
pop
sbb
add
push
and
stos
jbe
inc
lods
bound
pusha
outsb
fildl
xlat
das
js
pushf
sbb
clc
jne
cmp
je
test
clc
frstors
pop
jb
in
mov
jo
xchg
shrb
sub
enter
insl
jo
insl
fidivrl
push
push
imul
clc
or
pop
sub
xor
lcall
insb
hlt
sub
adc
lods
data16
push
add
lock
imul
jp
in
insl
fsubr
insb
out
sbb
addr16
add
xchg
and
xlat
les
imull
push
mov
push
xchg
imul
je
lret
jbe
sbb
js
fidivl
shlb
push
mov
imul
les
div
clc
jg
imul
cmpb
inc
add
inc
fldt
jbe
adc
sub
push
and
xor
lret
insl
das
adcb
inc
cmp
jbe
push
jl
or
insl
ljmp
nop
outsb
xchg
dec
jno
and
test
imul
cmpb
and
pop
aam
push
mov
insl
mov
push
popa
das
fsts
jl
test
xchg
out
dec
mov
xor
push
negl
outsb
je
ja
mov
outsb
in
jmp
popa
imul
dec
xlat
repnz
mov
aad
pop
xchg
test
push
push
pop
jne
xchg
arpl
push
popf
scas
mov
bnd
and
fcoms
push
push
push
pop
dec
das
lfs
ja
testl
js
and
sbb
in
pop
xor
sarl
je
lock
clc
fisttpll
pusha
sbb
add
fs
pop
lret
adc
hlt
sub
in
xchg
sbb
push
fucomi
sub
pop
repnz
jge
pop
push
scas
out
stos
outsb
cmpsl
shlb
xlat
xchg
sahf
add
pop
fs
inc
push
sub
imul
sbb
ss
pop
lods
pop
sahf
fsts
cmc
jo
movsb
roll
fwait
push
addb
cmp
adc
out
or
ss
xor
xchg
push
js
jl
mov
jns
movsb
and
pop
rcll
jne
repnz
aam
js
scas
mov
jg
mov
pushf
out
insb
movsb
or
aam
push
test
push
mov
or
jecxz
jp
mov
aas
lahf
add
in
jbe
cmp
jmp
jno
push
sub
popf
je
push
subb
cmp
sbb
mov
lahf
outsb
lock
lcall
cmc
adc
mov
idivl
or
mov
add
or
xor
aam
lock
or
into
mov
popa
jne
shrb
mov
add
adc
ja
icebp
icebp
cmc
jle
pop
lods
andb
add
mov
cmp
repnz
mov
pop
mov
js
fsubrl
jle
js
push
rcrb
cs
fstl
outsl
loopne
sbb
pop
hlt
jg
data16
jg
add
repnz
push
add
mov
push
je
pop
jnp
ljmp
sbb
push
pop
fsts
addr16
aam
fisttps
clc
pop
mov
or
outsb
add
push
enter
push
cltd
and
lock
lods
scas
ja
xor
cmp
inc
mov
lock
iret
add
pop
push
out
js
cmpsb
jns
sarl
out
dec
xor
fidivs
mov
inc
xor
sbb
pop
sub
adc
enter
repnz
mov
jo
jl
mov
add
repnz
cmp
mov
and
jg
adc
sahf
cmp
ja
cmc
add
in
das
mov
dec
icebp
scas
xchg
rcrl
add
repnz
out
xor
xorl
add
push
in
icebp
sbb
jnp
in
jns
idiv
cwtl
or
pop
arpl
pop
mov
cld
add
repnz
repz
fisubs
out
testb
sbb
aad
mov
test
add
jge
int3
cs
push
sbb
in
out
js
mov
aad
push
mov
mov
add
aas
orb
shlb
loopne
xor
sbb
out
pop
pop
jno
or
scas
xchg
push
clc
sub
jo
addr16
popf
bnd
cmp
add
sbb
std
push
out
idiv
das
jle
inc
jnp
test
sbb
xchg
xchg
imul
mov
cmc
pop
mov
out
cmp
xchg
pop
pop
mov
cmp
cmp
out
cmp
std
test
outsl
cwtl
jg
pop
push
push
mov
sbb
fsincos
jbe
pop
in
dec
test
lock
sbb
jo
jge
dec
dec
out
mov
filds
ss
xorb
outsb
xchg
out
jle
sub
push
inc
adcb
adc
test
or
sub
daa
popf
cmp
xchg
jne
jmp
sbb
out
sub
imul
shr
fstp
or
pop
xchg
in
jg
gs
jne
pop
call
jle
pop
repz
movsb
mov
cld
mov
mov
cmp
mov
scas
mov
shl
xchg
pop
cwtl
repnz
dec
cmpsb
inc
outsb
out
arpl
push
fimuls
add
jmp
mov
divb
fimuls
popf
sar
cli
cmp
or
loop
cmpb
xchg
repnz
cmp
jmp
xchg
mov
je
fsubrp
xchg
pmuludq
cmp
cmp
xchg
or
xchg
or
sub
jbe
inc
jl
in
pop
and
adc
xchg
pushl
dec
sbb
pop
outsl
js
daa
mov
xor
sahf
pop
insb
stc
lods
pop
push
lahf
mov
daa
jg
cli
jmp
push
std
sub
jbe
div
int
cmp
clc
popf
nop
mov
test
aas
jne
scas
mov
cmpsl
sub
call
outsb
ja
xor
mov
cmc
pminsw
sub
add
mov
pop
imul
mov
fistps
mov
out
sub
std
inc
test
dec
imul
rolb
add
shll
xabort
pop
lock
adc
pop
inc
jae
loope
push
fidivrs
mov
cld
mov
es
cld
fmuls
xor
cmp
call
sbb
adcb
jg
sub
jb
jns
or
or
fists
push
js
stc
xchg
and
pop
jbe
imul
dec
jle
inc
jb
out
imul
push
dec
pop
fs
addl
xor
cmp
mov
dec
call
xchg
outsb
cmp
cmp
outsl
fadds
fwait
xchg
sti
xchg
ljmp
imul
fstps
out
ds
jns
mov
jg
sub
push
or
imul
in
lods
pop
data16
pop
insl
pop
in
cmpsb
je
sbb
lret
out
ja,pt
jns
push
pusha
inc
out
stos
jmp
lods
mov
push
cmp
cmpsl
sbb
ja
jg
cld
xor
repnz
pop
and
push
out
in
mov
add
sub
push
or
fs
stc
lock
repz
ja
jno
daa
adc
sub
mov
sbbb
sahf
jne
push
jge
jmp
add
and
fidivrs
test
out
adc
mov
testb
or
pop
mov
jno
jne
lods
push
xchg
push
sti
add
pop
pop
mov
add
shr
out
jp
mov
sbb
fwait
cmc
jnp
out
cli
jo
sbb
push
test
mov
mov
sti
add
pop
push
sarb
in
ja
add
cmpsb
orb
fs
cwtl
mulb
insb
add
outsl
cmp
sbb
pop
adc
dec
add
push
or
cmp
and
ficomps
mov
xor
mov
pop
mov
dec
sti
mov
push
add
cli
decl
psubsw
mov
and
pop
stos
mov
mov
out
test
jno
sub
test
inc
add
xor
cwtl
and
sbb
test
test
std
pop
outsl
xchg
out
adc
insb
clc
lcall
mov
sbb
call
fdivrp
mov
jno
cmpsb
sub
adcb
inc
mov
or
repnz
xor
inc
cmp
lock
lahf
jae
cmp
inc
addl
jle
cld
sbb
cmpb
push
pop
xlat
xchg
imul
add
repz
test
xchg
js
stc
xchg
sbb
test
pop
mov
ja
out
repnz
jns
outsl
jo
hlt
pop
fbstp
std
out
sbb
cmp
adc
sbb
test
dec
outsb
jmp
lcall
pushf
rcrl
pop
pop
fists
add
pushl
inc
setl
pop
jmp
inc
jns
std
mov
xor
repnz
cmpsb
add
jge
jg
je
sub
ds
cmpl
inc
jns
movsl
cmpb
outsb
mov
add
mov
cmp
popa
into
jmp
repnz
aas
cs
jg
sbb
out
dec
in
cmp
jbe
inc
jg
dec
mov
notb
sbb
or
or
cli
cmp
repnz
jb
sbb
or
ss
xor
jmp
or
das
pushf
je
push
jns
out
or
jb
jge
xor
push
jae
pop
xchg
mov
stc
inc
mov
sub
pop
xchg
dec
add
or
inc
cs
outsl
ds
repz
mov
hlt
xchg
xor
sbb
test
sti
repnz
in
test
push
adcb
or
adc
in
xor
pusha
insl
js
imul
jne
push
cmp
repnz
sbb
adc
xor
mov
add
outsb
js
jg
jmp
push
or
mov
jb
add
daa
cmp
sub
jnp
cld
xor
das
orl
fwait
inc
daa
ret
aad
xor
add
rolb
add
jmp
sbb
stc
pop
cli
std
jl
pop
lock
mov
adc
sti
rcrb
xor
out
loopne
fisubrs
xchg
std
ds
movsb
es
jae
mov
sti
and
xchg
pushf
xor
lods
pop
inc
adc
icebp
pcmpgtd
mov
mov
or
fistl
test
mov
sbb
inc
sbb
cmp
adc
cs
push
cmc
push
pop
xchg
jle
jmp
adcl
pop
cmc
fdivr
data16
add
ss
jnp
jae
imul
add
fimuls
ljmp
je
xchg
pop
das
insl
xor
lea
es
rorb
dec
das
in
cmp
daa
push
icebp
ljmp
std
je
repnz
mov
jae
lret
mov
adc
stos
add
inc
push
pop
inc
sti
pop
out
clc
repnz
jo
fucomi
clc
sbb
outsl
cli
add
mov
jg
mov
sbb
jle
call
mov
dec
and
ljmp
xchg
sbb
imul
pop
xchg
lods
clc
and
mov
push
inc
push
int
jbe
js
mov
jns
push
pop
pop
dec
frstor
or
and
jmp
js
inc
jbe
in
adc
into
mov
insl
shlb
lret
mov
test
adc
sub
jbe
dec
cmp
insl
xor
jo
movsl
daa
in
add
shll
mov
rcrb
sbb
cmp
call
mov
jne
daa
mov
movsb
je
push
jo
hlt
cmp
push
insl
test
inc
cmp
and
cmp
sub
add
xor
cmp
lahf
push
add
jo
and
imul
test
xor
mov
push
jno
mov
cmc
call
jmp
add
je
mov
ss
dec
js
test
insb
cld
push
cwtl
ja
es
in
imul
xchg
lods
jecxz
test
pushf
inc
decb
js,pt
js
pshufw
incl
sbb
add
add
loopne
mov
cmpsb
sbb
jb
outsb
and
jmp
jge
xchg
jbe
outsb
fisubs
mul
mov
push
scas
push
shlb
pop
push
adc
mov
push
jmp
sbb
jo
aas
idivb
xorl
adc
mov
test
add
cmc
sti
jns
repz
test
fiadds
mov
test
sub
mov
adc
mov
fmuls
clc
xor
add
adc
es
pop
je
cs
testb
sub
cmc
ds
outsl
sub
lea
in
jb
or
std
xchg
mov
pop
imul
push
or
sbb
incb
sbb
imul
or
sbbl
sbb
fwait
das
add
sti
adc
dec
cmp
pop
push
test
pmuludq
cli
xor
jo
adcb
sbb
ljmp
std
sahf
lods
inc
lock
cwtl
mov
sbb
xchg
xchg
cmpb
jae
xor
mov
push
xchg
and
fists
jne
mov
xorb
sbb
repnz
mov
mov
insl
ds
xor
out
ficomps
jmp
cmp
movsb
mov
int
daa
filds
inc
ljmp
add
out
lahf
jge
adc
pop
sub
dec
jmp
add
sub
in
or
mov
pop
jbe
hlt
lock
pop
xchg
sbb
push
out
jo
notb
rorl
scas
add
data16
sti
je
or
jle
lea
push
or
pop
push
fwait
daa
cmc
lahf
push
js
filds
mov
add
pop
xchg
repz
cli
jle
insb
sbb
add
sbb
xchg
and
mov
mov
imul
shrb
push
mov
push
jle
cmpsl
ret
sti
sbb
sbb
aam
push
adc
cmp
hlt
mov
cmpsl
mov
jg
xchg
js
add
xor
sbbb
subb
xchg
out
fcom
aaa
adc
js
add
lahf
mov
dec
std
sbb
insl
dec
add
lret
jle
inc
hlt
psubd
jae
imul
js
mov
jge
cmp
lret
or
cwtl
outsb
mov
jno
pop
sbb
xchg
add
mulb
add
xor
sahf
repnz
lea
popf
adc
lret
pop
ja
pop
movsb
mulb
icebp
fmul
adc
call
imulb
sahf
dec
imul
adc
mov
add
add
mov
jmp
or
icebp
inc
fincstp
xchg
or
test
pop
dec
add
cmp
das
loopne
cmp
mov
jl
movb
xor
jg
fmuls
ss
addr16
ja
sbb
insl
lahf
movb
push
je
sbb
cmp
sbb
sub
packssdw
mov
loop
pushf
cmp
adcl
es
rcrl
movl
add
shl
lahf
jbe
jle
or
out
or
jnp
adc
inc
rorl
jo
xchg
addl
pop
out
pop
sbb
test
sbb
xor
lock
lock
sbb
fstpt
cmpsb
icebp
fwait
cmc
pop
outsb
repz
xor
stc
xchg
pop
shll
out
cmpl
or
add
or
jns
aaa
andl
push
movsb
mov
inc
or
pop
testb
and
xchg
push
adc
inc
pop
jnp
je
mov
and
pop
xor
insb
jmp
add
nop
sahf
imul
mov
add
iret
ror
imul
ud1
mov
jg
outsl
jb
ljmp
jae
jne
sub
xor
in
dec
ss
cli
in
ja
stc
stos
out
and
jne
lret
fildl
repnz
and
sbb
xchg
cmpsl
cltd
repnz
push
or
js
sbb
add
or
xor
inc
repz
icebp
or
insl
movsb
cli
subb
shrl
rcrl
mov
cli
cli
cli
mov
xchg
pop
dec
ljmp
cli
cmp
pop
pop
ja
inc
pop
jge
jmp
xchg
add
or
push
js
negl
jle
inc
outsl
cmp
clc
add
int
je
cmp
jp
inc
test
mov
add
movsb
pushl
mov
dec
test
arpl
lock
add
int3
nop
ss
pop
sub
dec
out
cs
aas
push
cmp
pop
inc
imul
es
jl
xchg
push
negb
cmp
inc
clc
jns
repz
mov
xchg
jno
bnd
shl
aad
call
mov
push
cli
xor
pop
div
sti
lret
cld
sarl
adc
pop
negl
out
fistps
mov
sti
jns
mov
mov
push
cli
inc
xchg
aad
mov
lock
iret
bound
sbb
mov
scas
mov
jl
sti
mov
lret
cli
xchg
neg
mov
leave
clc
sbb
mov
xlat
add
pop
fdivrl
lret
sbb
cli
rcr
mov
or
ret
mov
imulb
pop
adc
sbb
push
dec
ret
cltd
add
not
jl
in
cmp
push
xor
pop
mov
test
sti
jb
mov
outsb
fbstp
xchg
pop
pop
pop
out
daa
mov
sbb
bnd
jmp
inc
xchg
and
inc
mov
add
sbbl
test
jno
cltd
jne
clc
cmp
repnz
xchg
je
adc
mov
jb
cli
xor
ljmp
addl
cli
add
mov
jmp
xor
stos
dec
jmp
icebp
or
add
cmp
hlt
in
repnz
pop
xchg
cmp
xchg
jg
sub
push
incb
cli
jg
fsubr
add
xor
out
test
dec
shlb
mov
imul
lock
cmpb
adc
mov
psubw
sub
or
icebp
lret
mov
jl
or
jle
testl
jbe
insl
data16
add
adc
repnz
lahf
jle
outsl
cld
sahf
iret
sbb
jbe
jmp
jmp
insb
fsubr
mov
insl
test
bound
xor
outsb
pop
sbbb
std
icebp
sbb
cwtl
cmc
mov
sahf
and
cld
sub
cmp
adc
ja
mov
in
or
dec
jmp
and
xor
mov
arpl
out
std
loope
in
ljmp
push
jle
inc
xchg
inc
incb
out
or
imul
push
roll
and
lock
mov
mov
shl
add
movsb
push
push
sarb
repz
jmp
pop
out
jl
popf
pop
outsl
cmc
jmp
jo
insl
repnz
pop
syscall
std
push
mov
loopne
add
mov
sti
nop
popf
repz
mov
sahf
in
push
clc
je
iret
icebp
clc
push
mov
pop
add
icebp
adc
testl
outsl
mov
and
dec
mov
add
push
rcll
pop
stos
xchg
jg
jns
pusha
pop
or
or
cmpsb
cmp
cmpsb
or
mov
mov
out
jp
xchg
addb
jo
xchg
lcall
jo
jmp
outsw
addl
lock
xchg
adc
cli
push
insb
sti
cmpsb
sub
sbb
cmp
mov
dec
jg
add
add
mov
dec
popf
inc
pop
cli
mov
sahf
dec
or
cmp
inc
cmp
out
sbbb
je
pop
icebp
loope
jge
pop
ljmp
add
rep
clc
jb
pop
inc
repz
mov
cmp
sbb
pop
js
fnsave
jmp
jmp
js
mov
cwtl
add
std
cmc
add
push
insb
dec
movsb
add
js
sbb
subb
repnz
jl
shll
sti
repnz
aam
add
push
jns
and
add
xchg
pop
push
push
clc
adc
shll
push
repz
xorl
mov
adc
mov
pop
add
inc
jg
js
dec
insl
repnz
mov
push
dec
push
add
push
rcrb
jns
pop
jbe
xchg
add
rolb
roll
and
jne
andl
dec
push
sahf
jl
outsl
cmp
jno
dec
lods
in
add
repz
and
ja
jg
sbb
in
addb
mov
push
cmp
aas
mov
mov
sti
imul
sub
fwait
movsb
jge
or
stc
iret
hlt
pop
mov
jmp
cmp
mov
clc
cmc
cmp
mov
in
add
sti
jp
add
sbb
xchg
push
or
mov
popf
in
decb
cmpsb
insb
push
mov
xor
or
or
add
testl
bswap
ja
int3
das
or
sbb
pop
in
testl
mov
outsb
mov
dec
inc
adcl
jp
cmp
jbe
jne
sbb
cmp
pusha
jbe
je
les
xchg
pop
and
lret
xchg
stc
xchg
imulb
scas
test
out
mov
pop
cmc
insl
inc
je
jg
psubsw
insl
sbb
jge
daa
ljmp
or
shlb
and
or
jne
xor
sub
jle
iret
and
incb
daa
cli
xchg
dec
mov
test
adc
imul
adc
insb
jle
inc
test
and
adc
or
in
xchg
sbb
je
lock
cmp
cmc
push
mov
test
or
pop
sbb
cwtl
push
rcrb
shrb
sub
and
hlt
mov
jae
xchg
xchg
test
adcl
leave
ds
and
shr
sbb
lock
push
or
pop
imul
or
lock
xor
push
cld
pop
mov
icebp
push
movsl
or
clc
jb
jne
mov
aam
cli
mov
dec
push
popf
pop
inc
cmp
pop
cmc
mov
or
add
loop
cli
jno
add
xor
xchg
int3
mov
sahf
or
jecxz
pushl
inc
insl
paddb
and
mov
out
rcrb
das
jmp
mov
sbb
jo
add
jge
enter
jb
pop
or
out
inc
jns
enter
imul
jge
fmuls
jp
js
adc
inc
or
jmp
ljmp
jge
pop
mov
stc
dec
mov
pop
in
out
outsb
bnd
jg
pop
lods
outsb
ss
add
sti
mov
jnp
or
push
js
push
sahf
push
test
adc
adc
in
incb
add
inc
icebp
mov
clc
testl
jne
insb
cmc
sbb
out
sar
xorb
cmp
or
add
inc
in
pop
test
mov
cmp
inc
add
add
and
sub
mulb
je
adcl
ja
test
pop
pop
divl
int
add
jnp
out
data16
gs
cmc
mov
shrd
in
not
cli
pushf
andb
push
push
je
cli
rcll
pop
push
incl
mov
imul
outsl
scas
je
ljmp
in
inc
jg
push
adcl
sbb
fistpll
inc
inc
das
mov
inc
insb
pop
icebp
dec
je
inc
jbe
dec
outsl
xor
out
or
in
add
or
cmc
ds
leave
hlt
je
data16
inc
cmc
pop
das
icebp
mov
push
vmread
jle
xor
fidivrs
clc
das
sub
je
add
out
sbb
cmpsb
ljmp
cmp
movlps
mov
jle
inc
sti
fisubs
jb
call
out
decl
jge
push
lea
jno
xchg
inc
psadbw
dec
jg
jmp
ja
jge
test
mov
insl
jne
ja
lea
pop
scas
aad
clc
jl
inc
push
in
xchg
cmpsl
cmpb
mov
negb
pop
clc
xor
js
test
dec
dec
std
xorb
mov
mov
cwtl
cs
scas
mov
mov
fwait
test
cltd
notl
or
pop
daa
mov
out
jp
xchg
popf
mov
jnp
sarb
aaa
adc
sbb
cli
mov
push
fbld
repnz
jp
in
decb
pop
hlt
leave
mov
sbb
mov
mov
outsl
dec
addr16
push
push
lea
push
jo
stc
lods
adc
jo
movsl
inc
sbbl
js
and
or
and
pop
xor
js
dec
dec
jbe
jmp
adcl
add
mov
pop
cmc
pushw
dec
and
mov
dec
push
test
popa
out
out
repnz
push
dec
jns
jns
adcb
aad
aam
add
cltd
cmpsb
add
stos
xchg
jns
push
xchg
loope
jle
cmp
imul
cmp
push
xchg
dec
orl
icebp
addl
dec
cld
pop
insl
pop
push
add
outsl
add
sahf
mov
push
stc
sbb
in
ja
xchg
adc
adc
mov
push
pop
add
jmp
insb
jle
adc
insb
std
jp
xchg
push
add
lret
pop
and
in
outsl
in
incb
push
xchg
in
add
jmp
faddp
mov
pop
jmp
idivl
pop
dec
push
pushl
sar
pushl
xchg
incb
add
or
jo
xlat
mov
sub
ds
cld
jbe
pushf
pusha
int
inc
outsl
repnz
pushl
roll
std
aam
xchg
icebp
dec
cmp
push
scas
mov
and
jnp
jecxz
outsb
push
je
js
pop
ss
test
lock
imull
push
mov
nop
insb
pcmpeqb
sub
jmp
cmp
sbb
sbb
adc
cmpsl
add
add
jae
orl
and
mov
pop
mov
push
js
lock
cmpsb
js
mov
cmp
and
jmp
push
sbb
sbb
pop
insl
addb
add
outsl
mov
rolb
in
out
push
out
je
mov
call
sub
jle
repnz
sbb
adc
and
movsb
add
add
xchg
test
clc
mov
pop
xchg
xchg
pop
inc
aad
push
insl
orb
stc
arpl
xor
je
aad
je
hlt
das
jbe
js
imul
out
aas
pop
jb
and
aam
xor
xor
add
add
es
loope
icebp
sub
push
push
stos
in
nop
in
outsl
add
pop
lea
sbb
mov
sbbl
mov
jge
test
cmp
adc
fadds
push
ja
notb
add
dec
xor
aad
cmc
push
ljmp
jnp
test
inc
jae
repnz
xor
js
xor
push
sub
mov
sub
mov
sbb
dec
out
test
orl
jns
xor
sbb
jb
aad
add
test
test
jo
outsl
xor
xchg
xchg
movsb
lret
icebp
adc
sarl
fxtract
xor
push
add
bound
push
jmp
ss
and
cmp
insb
xor
lds
push
into
cmp
inc
test
mov
sub
xlat
adc
cmpsl
jge
xchg
adc
enter
imul
cmp
addr16
dec
mov
xchg
fdivr
mov
test
dec
dec
jl
adc
push
jmp
flds
dec
lahf
cli
inc
add
inc
sbb
sub
outsb
cmp
push
clc
jmp
cmp
sbb
sbb
xorb
icebp
dec
fadd
xchg
icebp
xchg
sbb
pop
jb
mov
roll
je
pusha
arpl
pop
psrlq
sbb
pop
jae
pusha
fstps
sbb
loope
ljmp
xchg
outsl
enter
jbe
cwtl
xchg
shrl
push
ja
sub
je
cmp
daa
sub
xor
ja
adc
call
lahf
test
push
xor
idiv
adc
clc
mov
out
in
fildll
dec
aaa
jmp
push
mov
mov
pop
repz
xor
cmc
cmp
ss
pop
adc
sbb
inc
aam
mov
cmp
inc
ja
mov
pop
test
mov
mov
in
jo
daa
xor
lock
in
xor
outsl
pop
sub
xchg
fstps
int
lret
popl
mov
mov
mov
clc
cmp
sbb
iret
push
push
push
aaa
out
xchg
xlat
fnstsw
mov
fstpt
mov
stos
mov
testl
ja
scas
jle
ret
scas
add
ss
clc
adc
sbb
test
mov
dec
pop
clc
bound
fxch
sbb
mov
daa
and
arpl
xchg
or
xchg
fwait
push
out
pop
cwtl
mov
ja
repz
push
jno
adc
adc
push
or
xor
sub
mov
and
push
je
stc
and
jb
dec
push
stc
push
fcoms
stc
dec
dec
xchg
mov
inc
push
outsb
insb
nop
inc
fs
mov
mov
cmp
mov
mov
aam
xchg
jl
jp
mov
scas
stc
lods
stos
enter
sarb
into
int3
lret
out
loop
ficoml
jge
sub
pop
popl
repz
js
or
xor
cwtl
xor
es
and
cs
sti
push
je
sbb
push
dec
jns
sbb
xchg
xchg
inc
ds
fs
call
mov
push
repnz
xor
dec
inc
jmp
outsl
jl
stc
std
cltd
dec
sbb
jbe
stos
leave
ret
ficoms
in
inc
mov
mov
xchg
mov
dec
test
fwait
adc
inc
test
and
cmp
gs
cs
test
mov
int
dec
cmp
adc
jns
stc
pop
push
shrl
movsb
xchg
test
roll
sahf
mov
stc
mov
movsl
stc
sbb
movsb
test
dec
ret
lret
fcoml
int
mov
stc
mov
std
pop
lods
ja
inc
mov
aam
jp
fstpl
loopne
repz
sub
cmp
pop
ss
fisttpll
jmp
jp
cli
sarb
stc
and
mov
out
insb
jle
jne
pop
aam
dec
movsl
shr
fisubrs
sub
mov
mov
and
aas
ja
add
movsb
add
cmp
jo
sbb
dec
leave
xchg
stc
push
enter
xor
lods
mov
adc
idiv
out
in
rcrl
cvttps2pi
stc
into
cmp
mov
in
fisttpll
fwait
gs
stc
mov
inc
jnp
bound
mov
lahf
and
and
out
xchg
fs
stc
pop
loopne
mov
sbb
ja
mov
stc
jge
cltd
xchg
fisttpll
xlat
stos
stc
mov
push
addr16
mul
adc
push
xor
jo
mov
fs
lea
xor
dec
pusha
subb
mov
fldt
ficoms
stc
loope
push
in
nop
mov
sbb
ret
stc
mov
mov
stc
inc
mov
in
jno
or
repz
sbb
stc
add
pusha
xchg
sahf
shr
pop
mov
jbe
xchg
pop
adc
add
dec
lret
into
rorb
xchg
cltd
sbb
stc
sbb
add
ret
loop
stc
pop
std
sub
jbe
sbb
ja
test
leave
xchg
dec
icebp
push
xor
pushf
cmp
idiv
das
xchg
adc
inc
out
mov
jno
scas
dec
pcmpeqb
pop
pop
jl
push
pop
stc
mov
xchg
test
stc
fadds
in
fcoml
xchg
in
jle
add
jno
stc
bound
lods
xchg
scas
xchg
rcrb
mov
add
mov
loopne
popa
dec
pop
outsb
cwtl
shrb
enter
dec
mov
mul
jb
and
fs
xor
and
stc
das
mov
cmp
pop
or
mov
or
test
popf
dec
in
push
mov
jns
mov
fistpl
fisubrs
xchg
fsubs
sbb
enter
and
pop
sbb
into
and
inc
sub
lds
jae
jmp
sarl
jp
inc
loop
stc
jmp
movsl
nop
cmpl
mov
sub
mov
inc
roll
mov
scas
test
dec
jge
cmp
int
sti
sahf
push
pop
rcl
cli
sbb
ds
xchg
aad
add
fcmove
stc
xchg
lcall
stc
cmp
mov
mov
dec
lret
cmp
idivb
mov
movsb
loopne
ljmp
mov
clc
lds
cltd
lcall
out
out
out
mov
and
ja
and
sbb
ret
ljmp
leave
and
adc
loopne
jnp
jmp
mov
cmpsb
daa
ljmp
xchg
lods
xacquire
cmp
push
mov
lods
popf
mov
call
mov
inc
lcall
and
sbb
lods
mov
add
hlt
dec
dec
cmp
dec
inc
dec
or
jmp
push
stc
jmp
jg
add
fbstp
int3
mov
xor
stc
xchg
mov
ficomps
pop
stc
inc
jns
or
jge
inc
jns
sbb
mov
stc
mov
lods
cmp
adc
mov
sti
xchg
and
inc
mov
xlat
inc
loope
inc
std
cwtl
mov
mov
jnp
mov
cmp
mov
pop
adc
inc
push
or
shrb
add
stc
scas
add
inc
stc
mov
dec
shr
fnstsw
call
fwait
out
xchg
push
cmp
mov
stc
popa
repnz
dec
pop
into
mov
fsubs
add
sahf
movl
lds
mov
mov
pusha
cmp
sbb
fwait
cmp
push
icebp
inc
andb
in
mov
shlb
adc
mov
sub
pop
test
xlat
dec
imul
rclb
push
lret
mov
adc
scas
shlb
adc
cmc
and
sub
shlb
sub
mov
xlat
iret
cld
imul
aam
stc
xchg
adcb
add
sbb
jecxz
jmp
ljmp
cmp
shlb
lcall
cmp
sbb
pop
push
or
sub
or
cld
add
jecxz
jge
add
push
lods
stos
stc
dec
stos
fsubs
stc
lret
add
iret
pop
xlat
cs
stc
test
bound
sahf
stc
xchg
loopne
in
loope
or
dec
xor
add
js
jle
push
movb
enter
ret
mov
sar
orl
sub
dec
enter
cmp
dec
pop
add
idivl
clc
cwtl
es
sahf
dec
orl
add
lea
adc
sbb
insl
xor
pusha
pop
xchg
push
stc
cmp
mov
dec
out
stc
shll
lahf
in
sahf
stc
iret
ds
sbb
inc
jae
add
xchg
xor
stc
cmp
sbb
insl
xchg
sbb
jnp
addl
addl
pop
dec
movb
cmc
pop
sbb
pop
inc
jmp
stc
cmp
test
data16
cmpsl
pop
push
add
jns
pop
stc
mov
sub
sbb
icebp
aam
outsb
js
loope
ds
inc
adc
in
dec
sar
clc
stc
aaa
pavgb
icebp
or
and
shlb
mov
mov
mov
pop
adc
enter
push
stc
push
andb
ja
add
stc
pop
insl
mov
push
sub
add
jle
out
mov
ficoml
inc
inc
xchg
bnd
jg
aad
mov
push
mov
push
jmp
pop
aad
roll
lahf
or
movsb
lcall
sbb
or
sub
mov
stc
cmp
out
pushf
xlat
inc
cltd
std
or
test
pop
jle
iret
pusha
clc
mov
fdivr
inc
jecxz
aad
lcall
stc
int
frstor
add
je
mov
ljmp
pusha
mov
jmp
sbb
shr
test
fcmovbe
pop
jl,pt
stc
adc
insb
leave
pop
mov
insl
and
stc
inc
lret
sahf
stos
stc
outsb
sarl
test
dec
test
cmp
and
jp
cs
push
mov
std
inc
cli
dec
jns
lock
idiv
jecxz
and
sub
cmp
and
sbb
cld
inc
divb
stc
shlb
mov
xor
lcall
repnz
mov
loope
cmp
sbb
insl
push
jne
mov
sbb
xor
js
bound
js
pop
fwait
mov
cmpsl
push
cmp
xor
push
mov
mov
shr
pop
mov
xchg
enter
mov
push
adc
pop
out
repnz
mov
addl
aaa
inc
xchg
jo
pop
dec
lcall
xchg
imul
and
xor
xor
adc
pop
xchg
jl
outsb
cli
int3
jmp
aaa
fstps
lods
dec
pop
mov
xor
xor
nop
imul
jne
mov
mov
divl
sbb
pusha
mov
pop
insl
pop
xlat
imul
mov
fisubl
add
fs
out
sbb
mov
ret
mov
insb
fisttpl
dec
xchg
add
adc
mov
imul
out
shrb
mov
jle
push
call
cmc
mov
mov
mov
or
in
or
ss
fcoms
insl
fdivrs
sub
mov
leave
out
mov
inc
xchg
ja
dec
test
iret
out
jbe
xchg
or
mov
sarb
lds
imul
es
pop
ss
xor
cmc
sub
sti
pop
mov
jns
adc
in
ss
push
dec
int3
mov
mov
cld
int3
in
xchg
ljmp
push
outsl
loop
cltd
aaa
adc
or
jmp
sub
sub
fcomi
int3
xor
lock
insb
aas
hlt
repz
shll
jno
shll
xor
roll
push
sub
mov
iret
lea
xor
adc
sahf
stos
pop
clc
pop
cmp
adc
cmp
pcmpgtb
jl
idivb
pop
in
adc
repnz
pop
call
push
push
ja
popa
mov
enter
pop
movsb
fcoml
ljmp
testb
inc
adc
dec
cmpsl
jle
cmp
push
mov
ds
jmp
lods
in
adc
aaa
jmp
mov
xor
lahf
hlt
push
lds
jae
mov
lock
fcomps
js
push
jmp
roll
or
mov
xlat
push
stos
jmp
adc
repz
jno
jg
out
fcoms
ljmp
call
ss
jne
repz
cld
lock
jnp
cld
scas
jno
dec
adc
adc
mov
jno
ljmp
or
imull
in
jne
lea
rorl
rcll
xor
mov
out
cli
cmp
cmp
xchg
xor
jae
lods
sub
scas
lret
dec
outsb
enter
ljmp
jbe
jo
iret
pop
xchg
shr
add
cmp
int3
inc
push
adc
and
xor
xchg
nop
cld
dec
push
or
adc
cmpsl
or
stos
mov
inc
repz
mov
dec
jo
mov
or
ss
cmc
imull
or
icebp
popf
ljmp
adc
dec
mov
cmp
xlat
ret
loope
sahf
lds
insl
mov
sub
dec
push
or
pop
rcl
and
dec
out
sbb
mov
pop
xor
sub
xor
daa
dec
shrl
and
es
test
xchg
jno
or
repz
sbb
imul
lcall
mov
xor
jo
bnd
repnz
adc
aam
jle
pop
sub
out
cmp
jb
daa
sbbb
jmp
cltd
adc
jbe
xor
or
jbe
or
mov
aaa
jbe
loope
and
mov
xlat
ss
outsl
mov
enter
in
jbe
adc
cs
lock
or
mulb
or
jbe
mov
dec
mov
xor
pushf
dec
xchg
pushf
fucomi
popa
clc
sub
outsl
xchg
enter
pusha
stos
jo
pop
mov
mov
outsb
aam
cmp
inc
sbb
bound
cmp
out
insb
jl
movsb
xchg
pop
scas
cmp
add
sub
insb
mov
mov
mov
ds
jmp
mov
lahf
test
mov
pop
enter
daa
imul
lret
mov
mov
mov
lea
pop
xchg
repz
push
mov
cltd
js
mov
cs
fwait
popf
aam
mov
and
hlt
fimuls
sbb
into
mov
je
mov
shl
or
int3
mov
xor
jmp
inc
inc
jbe
call
dec
jb
movb
mov
sbb
mov
cmp
or
stos
dec
stos
jmp
dec
lret
jecxz
cmp
test
cmp
aas
pop
js
js
cwtl
lret
sbb
adc
lods
add
fcomp
aaa
xchg
clc
push
fnstsw
pop
cmp
pop
xchg
jno
push
xlat
mov
pop
fwait
outsb
jne
fadds
sbb
or
pop
inc
jmp
fsubs
repz
push
and
das
jne
cmp
adcl
fst
cltd
mov
dec
jnp
push
pop
sbbl
jl
or
jbe
es
dec
xchg
fs
sbb
mov
sti
je
stc
dec
sbb
stc
inc
dec
dec
inc
xchg
jo
data16
bound
pusha
mov
push
mov
stc
scas
pop
mov
xor
lock
mov
in
movsb
or
sti
repnz
out
in
ljmp
cld
cli
adc
prefetchw
stc
or
and
sbb
sbb
xor
sub
inc
inc
inc
aas
cmp
ss
scas
scas
iret
mov
mov
add
inc
mov
and
and
jbe
jecxz
push
xor
sbb
jb
dec
mov
stc
dec
xchg
inc
dec
inc
inc
fmuls
ds
cmp
push
cmc
arpl
xorl
pusha
hlt
adc
jecxz
adc
bound
mov
nop
pop
sbb
inc
popa
xchg
stos
xor
sbb
into
sub
mov
int
call
or
dec
jmp
stc
lret
mov
dec
pop
aad
pop
cmpsb
test
fidivs
gs
xlat
repz
in
cmp
mov
add
adc
push
xor
push
jae
lret
ja
shr
inc
add
sahf
xchg
in
popf
cmp
push
mov
inc
sbb
icebp
sbb
push
push
jp
jmp
stc
sub
in
cld
pop
sti
pop
sbb
jg
dec
adc
fbstp
cmp
push
or
pushf
rcr
fdivrs
stc
inc
mov
cmp
stc
jg
jmp
lret
mov
pop
negb
mov
test
sub
fidivs
cmpsb
in
sar
lahf
pop
ror
sbb
loopne
adc
fsubs
rorl
cltd
add
push
jnp
sub
test
dec
mov
adc
xchg
imul
stc
sbb
sub
jne
jns
sub
shll
jg
daa
pop
imul
and
xchg
add
rclb
hlt
stc
xchg
iret
daa
vpacksswb
push
pop
or
repnz
or
mov
test
rclb
or
std
repz
js
inc
iret
shrl
fstl
mov
cmp
ja
btr
mov
stc
sbb
and
outsl
mov
movsb
dec
jno
leave
pop
mov
loopne
stc
mov
xor
pop
mov
adc
inc
leave
mov
stc
dec
gs
cmp
xor
inc
pop
push
addr16
pop
jne
cli
lea
add
xchg
sbb
icebp
add
jg
mov
jecxz
popa
xchg
roll
push
jne
movsb
mov
outsl
and
stc
sahf
and
and
clc
xchg
call
push
sub
stc
out
sbb
and
or
jns
stc
xchg
ret
push
inc
sub
ret
pop
mov
or
stc
inc
sub
ficompl
adc
pop
add
movsb
stc
adc
jno
jecxz
pop
ficoms
mov
adc
stc
pop
int
imul
inc
push
sub
jb,pn
ss
pop
xchg
adcl
stc
push
xor
sar
mov
push
stc
xchg
pop
addl
loop
fsubrs
jmp
js
std
mov
mov
stos
jo
aas
sbb
pop
pop
bound
xchg
es
add
jg
stc
aam
movsb
mov
jne
inc
int3
jmp
sub
jecxz
mov
stc
sbb
and
test
out
mov
xchg
lods
shll
mov
movsb
inc
and
notl
push
cmp
stc
jne
rclb
stc
loope
mov
movsl
lock
stc
ja
dec
loopne
hlt
sbb
add
mov
xor
sti
pop
outsl
xlat
lock
cmc
roll
cltd
stc
pushf
out
pop
inc
or
jmp
cld
jne
fcmovne
scas
ret
push
gs
pop
cmp
sbb
mov
mov
add
pusha
stc
sbb
cmc
xrelease
ret
pop
imul
movsl
out
xor
add
mov
out
sbb
aaa
xlat
xchg
int
jo
sbbl
bound
mov
imull
dec
aas
repz
lods
cmp
mov
or
stc
rcll
js
sbb
lods
int
mov
push
or
xchg
mov
sbb
jge
mov
xchg
jnp
or
xor
push
lods
mov
cli
jne
dec
sbb
add
outsb
mov
out
mov
pusha
mov
pop
cmp
mov
aam
stc
mov
jecxz
ret
stc
sbb
rorb
les
mov
push
test
inc
dec
je
stc
jns
xor
cmp
cs
cli
adc
test
sub
out
dec
aas
cld
mov
in
mov
shlb
outsb
pop
not
cwtl
jp
and
cld
pop
out
scas
adc
filds
mov
dec
cmp
xchg
sbb
stc
inc
cltd
push
repz
adcb
pslld
lcall
push
mov
negb
mov
sti
popf
stc
out
mov
sub
dec
jne
int
scas
mov
std
call
mov
pop
xchg
stc
or
pop
repnz
jb
mov
xor
out
rcrb
mov
mov
icebp
in
psubw
das
mov
dec
sub
stc
mov
sarb
or
mov
mov
jae
sbb
xchg
pop
stc
enter
addr16
lods
cmp
and
js
repz
mov
xor
fmuls
cmp
add
xchg
adc
aas
push
repz
stc
xchg
dec
faddl
sbb
mov
add
stos
stc
mov
arpl
dec
out
shrl
in
mov
ljmp
adc
xchg
imul
in
lods
pop
adc
sub
inc
cmp
cltd
enter
sbb
adc
sbb
xchg
aas
mov
pop
daa
ss
mov
jbe
mov
int
call
cmp
stc
scas
adc
push
jns
stc
pop
xchg
jae
xor
mov
pop
sbb
leave
dec
xchg
sbb
movsb
jnp
repnz
adc
cmp
pop
mov
xchg
call
icebp
jnp
stc
jno
fcmovnu
cmpsb
xor
pushf
sbb
int
push
mov
aas
cmp
add
jp
stc
cmpsl
mov
and
push
adc
outsl
dec
dec
jg
lret
arpl
fimuls
adc
lods
je
xor
adc
jecxz
stos
ljmp
push
shlb
adc
clc
sub
jno
cmc
xlat
les
xor
imul
inc
jecxz
push
xchg
aam
sbb
mov
in
push
int3
cmp
adc
insb
ljmp
stc
mov
sub
ljmp
mov
mov
pushf
adc
dec
fsubs
insb
jmp
pusha
jno
xchg
stc
subb
iret
xlat
push
and
mov
sbb
xchg
fistpll
cmpsb
stc
mov
mov
pushf
add
jle
xor
popl
cmpsl
xor
stc
lea
mov
pop
jp
inc
ss
es
test
ja
push
test
cmp
jae
ds
cmp
scas
jge
mov
mov
push
push
and
stc
or
outsl
add
or
sti
out
mov
and
lea
pushf
stc
ffreep
push
stos
repnz
out
mov
into
inc
xchg
rclb
fidivs
sti
inc
mov
push
jmp
mov
icebp
mov
pop
stc
or
dec
leave
aad
xchg
sbb
stos
and
faddl
push
jmp
add
in
mov
jns
xor
insl
push
mov
sbb
jl
sbb
cmp
out
stos
mov
bound
sub
inc
cli
mov
leave
xchg
stc
popl
sarb
mov
sbb
stc
push
jmp
dec
mov
xchg
sbbb
shl
shl
xor
xlat
pop
es
cli
mov
sbb
push
mov
out
or
and
lahf
mov
jo
popf
mov
outsl
jmp
cs
stc
dec
push
xchg
sub
arpl
stc
enter
fadd
out
stc
push
dec
and
mov
dec
jnp
icebp
cli
stos
popa
outsl
adc
sub
data16
add
sub
mov
cmp
es
int3
int
mov
sahf
lods
jns
and
push
pop
xchg
stc
add
mov
stc
or
mov
stos
jne
popa
out
ret
dec
xchg
shrl
adc
aas
adc
gs
stc
sbb
dec
sbb
outsl
out
jns
xchg
js
std
fnsave
icebp
or
cmc
leave
fmul
test
int
pop
jl
les
mov
jbe
mov
ds
inc
cmp
rorl
jl
test
stc
fdivrl
adc
cmc
adc
ss
jecxz
sti
pop
sub
inc
push
mov
imul
filds
leave
mov
cmp
cwtl
lcall
cmp
dec
pop
jae
xor
and
enter
sub
fcomp
ret
cmpsl
stc
or
pusha
sbb
adc
stc
sbbb
and
stc
into
dec
addr16
jae
lcall
stc
lds
stc
jge
and
jb
jns
lsl
movsl
jmp
enter
in
inc
pop
fsub
sbb
gs
xor
jge
sti
ret
ljmp
xor
cmp
add
push
inc
incl
sub
dec
jae
stos
stc
sub
xor
gs
lods
pushf
add
jno
cmc
mov
pop
or
pusha
mov
lods
push
repnz
ret
gs
test
pop
fs
mov
repz
pushf
jb
cmc
fwait
pop
aaa
stc
fadds
pop
stc
arpl
adc
xor
mov
repnz
pop
popa
imul
jo
push
xchg
jno
sub
or
jne
stc
push
jne
mov
jge
pop
sbb
repnz
cmp
lods
pop
xor
repnz
stc
mov
clc
js
jne
pusha
mov
cmc
inc
or
and
adc
shll
int
pop
leave
lahf
mov
fsubrs
jnp
stc
fcoml
sbb
or
stc
mov
sub
leave
or
vpmaddwd
mov
pop
sub
fsubrl
jmp
fbstp
sub
pop
repnz
pop
movsl
inc
mov
adc
data16
push
mov
js
push
mov
shr
pop
iret
mov
int
rolb
loope
clc
add
pop
stc
outsl
pop
dec
and
xchg
mov
sahf
je
adc
in
sbb
dec
jno
mov
lret
jnp
shlb
stc
jns
pop
mov
sti
xchg
xchg
pop
cmc
out
loopne
popa
mov
int
add
xlat
jp
sbb
pop
aad
test
add
pushl
push
adc
negb
cmc
andl
into
adc
pop
shlb
mov
xor
adc
push
push
addr16
adc
adc
cmpsb
jmp
xchg
push
jnp
outsl
fs
int3
inc
jo
lock
pop
fcmovnbe
mov
sbb
loopne
subb
stos
adc
mov
je
inc
repz
xchg
or
out
xchg
mov
inc
and
enter
roll
push
inc
mov
gs
adc
aad
and
lods
pop
jle
pushf
jne
idivb
inc
mov
stos
stc
push
push
push
dec
sbbl
adc
mov
test
jnp
in
xchg
jmp
add
adc
xchg
or
je
jo
repz
roll
out
aas
mov
in
jns
cmp
add
add
stc
inc
int
push
jb
push
adc
in
push
or
and
bound
rcr
sub
int3
stc
or
add
stos
dec
add
xchg
jbe
sub
push
or
jecxz
jns
fisttpll
dec
fwait
mov
int3
mov
jae
fists
scas
cld
add
int
or
dec
add
adc
xchg
jns
jmp
cmp
jno
pushf
mov
or
scas
cltd
mov
mov
cmp
stos
arpl
mov
add
in
cwtl
fidivrs
dec
push
stc
jl
sbb
cli
inc
stc
or
out
pop
bound
andps
popf
mov
pop
dec
jnp
push
pop
add
pop
mov
push
out
sbb
stc
add
push
add
xlat
cmpsb
inc
mov
cmp
in
stc
fadds
jno
mov
mov
test
cmp
xor
mov
enter
test
pop
mov
xor
or
dec
add
mov
xchg
loope
rcrl
out
add
sti
aas
mov
je
add
test
sbb
sub
stc
cli
xchg
in
mov
mov
out
and
adc
or
mov
js
mov
icebp
jp
pop
push
dec
ficomps
lea
sub
push
loope
mov
cmpsb
sub
xchg
mov
xchg
or
push
outsl
and
xchg
aad
adc
dec
stc
dec
loop
cwtl
pushf
ds
mov
xchg
push
stc
cmpsl
out
ss
stc
pop
rcll
ljmp
adc
inc
mov
sar
test
leave
lods
pop
popa
iret
adc
sub
jne
cmc
shl
cmp
ja
xor
daa
inc
inc
test
aad
push
and
in
in
sbb
pop
mov
pop
aas
ret
sbb
pop
ficomps
xor
fpatan
cld
mov
test
xchg
aas
in
stc
sub
insb
sti
stc
bound
ss
pop
int
cmp
insl
stc
leave
mov
int3
stc
sarb
inc
dec
stc
and
xor
pop
pop
adc
sub
jae
pop
push
add
xlat
fdiv
shl
mov
mov
xchg
movb
add
dec
dec
push
jecxz
mov
out
jg
nop
aaa
sbb
or
pop
adc
xlat
loopne
mov
add
jge
ss
push
pop
cmp
mov
mov
or
icebp
rorb
xor
out
jbe
xchg
aas
push
movsb
sti
fwait
js
imul
xor
mov
mov
cmp
lods
or
std
scas
mov
fmuls
int3
mov
in
cmp
cmp
stc
xchg
and
outsb
stc
xor
push
stc
scas
arpl
xor
stos
cld
stc
shr
dec
int3
pop
mov
fwait
mov
lds
mov
mov
testb
mov
inc
pop
jne
lahf
sbb
inc
adc
out
out
fadd
stos
xlat
daa
jecxz
insl
push
orb
and
adc
lods
lcall
jg
jmp
fs
add
es
dec
mov
repz
outsl
xor
leave
test
repnz
test
lcall
divb
jns
mov
adc
jmp
mov
call
pop
pop
jp
enter
mov
popa
and
sbb
sbb
sub
sbb
rcrb
int
mov
push
clc
cmp
popa
icebp
es
mov
je
ffree
add
gs
cli
repnz
xor
std
iret
cld
mov
push
sbb
xor
subb
xchg
stc
push
lds
lahf
pop
xor
pushf
mov
stc
xor
fcoml
ss
lret
cwtl
rol
add
test
dec
xchg
lock
xchg
cmc
sti
icebp
xlat
imul
mov
push
sahf
sub
xchg
andb
pop
mov
dec
xor
mov
stc
fwait
lock
out
xchg
stc
push
roll
push
sbb
xor
cld
cmpl
jae
popa
jl
adc
stos
or
push
cmp
pop
mov
jmp
xchg
mov
aas
int3
pop
mov
loopne
mov
jmp
stc
dec
add
sub
jae
sub
stc
daa
aad
leave
push
ss
dec
sbb
js
arpl
add
stc
mov
inc
popf
test
scas
in
jne
stc
aad
sbb
add
fiaddl
xor
in
mov
out
mov
aas
cs
fidivl
gs
aad
add
aam
or
andl
in
loop
jne
lods
or
mov
pop
mov
xchg
stc
addl
pop
cmp
dec
icebp
jmp
cmp
jl
cs
stc
mov
int
test
leave
inc
mov
xor
inc
stc
mov
outsb
popa
sahf
int3
push
push
stc
mov
icebp
jg
stc
pop
shlb
incb
popl
pop
stc
sti
dec
fwait
jge
pop
shll
fcomps
loopne
fisubl
sub
xchg
fists
shll
add
jmp
stc
fwait
iret
or
cmp
stc
dec
mov
mov
mov
jle
repz
and
repz
mov
rolb
repz
dec
hlt
pop
push
loope
mov
pop
stc
xor
rclb
pop
mov
fsub
jns
mov
xchg
lods
iret
bound
ror
xchg
js
add
icebp
mov
outsl
jg
push
jbe
stc
loope
movsb
aad
or
jg
int3
xor
sarl
scas
icebp
stc
jnp
in
pop
scas
mov
rdmsr
stc
push
push
insb
call
leave
iret
cmp
ja
data16
divl
xor
leave
xor
jne
cmp
sbb
hlt
fsubs
add
xorb
pop
lcall
jmp
push
ds
repz
icebp
mulb
repnz
lret
mov
add
xchg
stc
ds
xchg
test
stc
mov
mov
int3
out
js
xchg
test
imul
pusha
push
mov
lods
mov
test
lds
lret
mov
addr16
pop
ljmp
mov
push
add
stc
or
jae
paddq
pop
stc
sbb
xchg
popa
adcl
sub
pop
or
push
negl
jbe
sub
in
stc
or
pop
iret
jno
or
stc
dec
jg
mov
stc
int3
cwtl
cmpsb
lds
js
dec
pop
iret
xor
dec
stc
decl
or
mov
push
mov
pop
out
js
std
ja
popf
add
imul
lea
mov
adc
xor
lret
sub
stc
cmp
sbb
sbb
jle
pop
jecxz
sub
xchg
dec
call
dec
cmpsl
stos
std
es
mov
pop
lods
jmp
movsb
jne
sbb
clc
jb
imull
xor
mov
inc
sub
mov
stc
sbbl
ja
iret
jno
mov
dec
or
scas
sbb
mov
loop
test
in
cmpsl
mov
mov
xlat
mov
aas
outsl
xor
stc
jno
iret
stos
pop
outsl
push
lods
stc
push
pop
lret
popa
lret
push
sub
je
adc
sub
sbb
arpl
fwait
in
cmp
stc
xchg
mov
and
stc
nop
mov
jne
jno
jmp
add
mov
out
pop
or
mov
jns
repnz
and
jmp
fdivs
cmp
cmp
ss
rcl
push
fnstenv
mov
popa
xchg
mov
ror
fcomp
cmc
push
jns
lods
cld
mov
jle
scas
mov
div
repz
sbb
cmp
clc
mov
push
add
xchg
fstps
clc
jbe
pop
cmp
sbb
loop
jo
dec
adc
dec
push
xor
frstor
iret
incl
mov
or
push
add
test
mov
fnstcw
dec
js
dec
rcll
std
daa
add
addr16
shll
sbb
xlat
mov
mov
pop
jno
pushf
xor
push
loop
lds
mov
jmp
les
adc
clc
jmp
pop
add
repz
push
mov
clc
loopne
pop
inc
fs
mov
fcoms
mov
flds
fadds
fnstsw
sbb
sbb
jne
aad
aaa
out
mov
enter
sbb
xchg
fdivrs
adc
inc
mov
test
sub
pop
push
jle
mov
xchg
mov
sbb
ret
popa
cmp
cmp
fiaddl
mov
aaa
cld
pop
add
ss
add
repz
xor
add
jg
lock
arpl
jns
xor
push
xlat
es
xor
adc
mov
notl
in
add
mov
add
cmp
adc
ja
mov
dec
dec
sub
jp
push
push
js
cs
jne
pop
sub
jmp
lahf
lods
mov
jb
ja
adc
pop
mov
and
sbb
testb
mov
cmpb
jnp
pop
fwait
aad
cmp
push
in
mov
mov
lock
test
push
cld
pop
mov
ljmp
push
pushf
and
aas
cs
lret
lret
xor
dec
ret
xor
mov
test
xor
les
and
push
add
push
cld
jns
cmpb
sarl
add
pop
jg
inc
adc
decb
push
adc
sbb
cmp
xchg
stos
jno
xor
push
push
addb
test
or
mov
pop
in
pop
dec
xchg
rol
dec
movsl
lock
call
in
fstpt
addb
inc
gs
pop
in
loope
mov
in
or
lea
test
mov
mov
in
out
int
xchg
sub
negb
jno
std
mov
aaa
stc
mov
movsb
mov
cli
mov
clc
inc
js
dec
fdivs
ss
jbe
xchg
popf
enter
test
jmp
jg
lods
mov
es
sbb
cwtl
stos
scas
inc
ljmp
fucomp
std
add
adc
xchg
lea
in
cwtl
nop
xor
mov
ja
push
pop
xor
mov
push
or
ss
js
testb
clc
inc
repnz
stos
jmp
xor
mov
adc
negb
jbe,pt
bound
xchg
outsl
xor
xor
ss
push
fwait
cs
js
inc
shlb
mov
push
movsb
adc
adc
inc
add
jp
daa
push
adc
xor
daa
mov
adc
xlat
test
je
fsubrs
cli
mov
js
adc
push
lret
pop
into
mov
xorb
cmp
pop
std
push
adc
dec
jmp
outsl
clc
je
outsb
scas
push
sbbl
dec
jb
test
xchg
les
push
rcll
clc
idivl
jbe
push
js
sbb
mov
in
add
cltd
es
and
jmp
icebp
push
outsb
mov
out
dec
test
jbe
stos
sbb
sbb
lock
mov
loope
jp
adc
js
adc
mov
xor
pushf
dec
lock
testl
mov
dec
xor
insl
pop
xchg
imul
in
addl
jecxz
mov
jne
push
jge
int
lcall
out
scas
movsl
js
mov
push
fwait
xchg
xchg
clc
jne
inc
lods
cmp
out
xchg
cltd
mov
add
inc
cmp
lcall
imul
pop
aaa
lods
cwtl
mov
mov
jae
inc
dec
outsl
mov
insl
jae
jl
cli
es
push
lock
imul
adc
jb
cli
es
aas
adc
ja
add
push
orb
xchg
push
add
or
xorl
xchg
cmc
clc
jp
pop
cld
cmc
cld
arpl
pop
mov
sub
pop
dec
push
insb
repnz
mov
adc
clc
mov
mov
xor
xchg
ss
mov
repnz
sarb
icebp
lahf
stos
push
enter
repnz
mov
clc
js
pop
or
divl
push
shll
cmp
js
aaa
xor
mov
sbb
insb
fistpl
call
adc
loopne
sub
push
and
lock
jnp
xor
and
add
jne
xor
mov
aaa
jno
sarl
test
mov
push
enter
cmp
call
mov
adc
ret
sub
fwait
and
push
add
clc
mov
sub
jne
pop
jne
imul
add
xor
add
lods
shr
cmp
xchg
mov
roll
or
js
jae
cmp
mov
je
sahf
rorb
jne
nop
test
push
aas
gs
mov
adc
jb
push
bound
push
and
or
dec
cmp
jbe
shlb
push
inc
scas
mov
inc
insl
mov
enter
add
sub
jne
push
xor
dec
outsb
mov
pop
sar
jmp
sbb
ja
out
or
jbe
mov
sub
enter
fldenv
mov
cltd
or
sarb
add
ret
mov
addl
xchg
cld
pushw
mov
andb
pop
in
cmp
in
les
outsb
daa
out
outsl
je
pushf
add
jb
ss
adc
popa
adc
jbe
xchg
jb
nop
sbb
and
xor
push
mov
jmp
mov
add
push
mov
js
push
mov
xor
es
out
in
xor
icebp
sbb
imul
js
inc
mov
sbb
jl
mov
xchg
jl
jbe
cmp
inc
jl
gs
in
jge
dec
cli
imul
xor
in
out
mov
sub
push
into
cltd
pusha
jo
ss
lods
xchg
idivl
mov
dec
sub
jp
pop
stos
xchg
cwtl
jnp
ja
mov
outsl
dec
inc
je
cs
ss
mov
ja
jb
dec
add
inc
arpl
jle
jae
sub
aaa
imull
jmp
decb
adc
xchg
inc
and
pusha
ss
push
ljmp
jb
inc
jne
js
xor
daa
push
jns
jo
ja
cmp
in
and
jbe
clc
sbb
les
jmp
mov
xor
in
and
repnz
insl
add
cwtl
idiv
mov
dec
fsts
cmp
mov
clc
push
mov
cmp
sub
mov
xchg
aad
mov
rclb
and
mov
test
cmp
loopne
sarb
mov
xchg
mov
mov
push
dec
sub
decb
loop
mov
imull
arpl
cmp
mov
lcall
lcall
shll
out
mov
adc
je
cmc
pcmpgtw
pop
stos
hlt
xchg
xor
lods
mov
bnd
mov
insl
stc
add
inc
icebp
push
mov
stc
hlt
mov
adc
xor
jmp
lcall
dec
ret
mov
mov
xor
jbe
daa
imul
clc
hlt
lds
jae
pop
repnz
outsl
lock
repz
hlt
add
je
cmc
xor
cwtl
cmp
mov
in
jmp
insl
scas
lock
icebp
aas
insb
mov
ss
jmp
pop
mov
dec
lods
fwait
in
jg
lcall
pop
pop
repz
sbb
test
movsl
loop
jl
clc
scas
divb
sahf
push
bnd
jmp
xchg
mov
imulb
jne
sbb
dec
cmpsl
and
js
mov
call
out
insl
jmp
push
repnz
sbb
aad
xchg
mov
cmc
add
mov
aam
mov
xchg
push
scas
inc
cs
lcall
sub
int
lods
test
fs
loopne
jbe
xor
jmp
sub
sbb
sbb
dec
adc
adc
icebp
clc
in
test
or
repnz
sub
adc
cmp
dec
xchg
mov
jg
insb
mov
pop
xor
out
scas
xorb
test
test
jnp
add
cld
sbb
mov
outsl
sub
lods
divl
jno
xor
pop
insb
add
pop
jle
jmp
jg
imul
dec
mov
push
and
outsl
sbb
or
push
popa
clc
jg
rcl
je
ds
jge
jne
insl
cmp
xlat
aaa
sbb
xchg
adc
js
lods
cmpsb
shlb
xchg
mov
mov
xor
inc
shlb
or
popf
xchg
nop
mov
hlt
and
dec
nop
rol
lret
lods
cwtl
aaa
testl
adc
inc
adcb
or
je
lock
jb
sub
push
fadds
jl
lods
fmull
mov
pop
sbb
push
icebp
inc
xor
outsb
gs
push
pop
je
mov
dec
insb
push
adc
outsb
out
mov
lea
mov
jns
mov
cltd
xchg
imul
cmc
adc
out
es
mov
icebp
div
lret
mov
dec
xchg
push
mov
mov
repz
mov
or
xlat
in
sub
jb
ja
push
outsl
jge
outsl
imul
xchg
cltd
aam
je
push
inc
dec
pop
daa
push
jbe
xor
push
imul
xor
imul
jl
jl
sub
out
dec
sti
push
outsl
jnp
inc
or
std
jl
popf
or
pop
xchg
sar
jae
stos
imul
pop
fdiv
adc
je
adc
scas
hlt
shl
call
mov
sbbb
inc
dec
ljmp
jne
fsubrp
mov
cmp
xor
js
clc
push
jae
mov
mov
dec
inc
adc
push
loope
mov
xor
lea
insb
sarb
inc
adc
xor
sahf
clc
xor
mov
lock
aaa
fsubs
les
ljmp
outsl
xorb
jnp
sar
jnp
je
repz
push
test
pop
add
imul
mov
jo
loopne
jne
insb
mov
aam
jnp
jp
pop
cmp
push
scas
jbe
or
xor
mov
pop
jbe
mov
insl
mov
dec
stos
push
hlt
decl
ja
sbb
dec
ja
ret
adc
mov
mov
cmp
adc
das
scas
mov
testl
mov
jno
mov
push
push
sub
mov
jp
std
test
push
or
repz
mov
and
mov
je
add
jae
jbe
xchg
xchg
popf
loopne
jne
jne
or
leave
xchg
adc
scas
sti
xchg
aaa
and
fdiv
adc
push
aaa
cmc
ficoms
loopne
lcall
mov
xchg
jbe
shlb
mov
in
xor
out
data16
push
jns
std
mov
sbb
call
test
jl
xchg
testb
imul
incb
js
inc
pop
sub
push
je
jbe
jns
shll
ds
dec
out
cmp
add
jns
mov
orb
lahf
ret
jns
mov
sbb
faddl
inc
inc
dec
xor
adcb
test
xchg
das
mov
push
mov
mov
loope
jno
outsl
in
jae
xlat
mov
mov
icebp
aas
sbb
jmp
cmp
xchg
push
adc
or
push
jbe
sub
cmp
ss
int3
mov
jbe
adc
cmp
push
ficoml
xchg
jb
jb
js
xchg
sbb
xor
inc
fidivs
rcrb
push
icebp
pushl
push
out
xor
xor
test
gs
std
add
addr16
shl
imul
or
jae
jne
push
mov
leave
pop
fsubrs
or
aam
mov
adc
push
push
add
mov
mov
jno
ret
iret
aam
nop
xor
push
ret
ret
adc
sub
mov
clc
test
icebp
insl
aam
inc
mov
aas
data16
or
inc
mov
jae
mov
cmp
lds
push
dec
test
pop
hlt
cld
icebp
lods
pop
test
add
js
add
ss
lock
pusha
dec
push
mov
jmp
dec
outsb
scas
ds
mov
or
mov
out
pop
dec
add
movsb
xlat
mov
ja
cmp
fbld
jno
ja
push
arpl
xlat
xchg
push
mov
cltd
dec
out
push
mov
lcall
pop
addl
mov
icebp
fistpl
repz
push
xor
adc
in
scas
and
repz
hlt
sub
in
lods
sub
xor
repnz
add
push
in
xlat
dec
pop
insl
xchg
andb
lods
or
cmp
cmp
outsb
ja
test
sti
in
or
mov
jo
xchg
inc
shr
cld
cwtl
aad
push
aaa
cmp
jne
pop
clc
jo
add
testb
mov
ja
lock
outsb
push
sarl
sub
dec
in
aaa
dec
cmp
jb
repz
lock
outsl
jo
add
int3
push
jno
repnz
ret
add
clc
and
fsubrl
or
hlt
mov
adc
pushf
jb
mov
mov
sub
ret
push
adc
adc
xor
icebp
inc
cwtl
inc
hlt
lret
or
js
mov
add
jecxz
pop
push
xorl
fadds
sub
insb
xchg
push
push
mov
push
mov
cmp
xchg
pop
rolb
repnz
add
adc
jne
mov
mov
push
inc
jno
aas
divl
adc
psubd
imul
outsl
pop
sub
repz
mov
js
divl
add
jo
clc
in
or
clc
or
insb
xlat
adc
testl
adc
inc
push
xor
fistl
sub
lock
insb
je
sub
js
lock
sti
mov
jae
shrl
js
add
hlt
jae
scas
inc
fwait
xchg
pop
lcall
mov
out
push
lock
mov
es
ret
cmpsb
or
scas
stc
cltd
test
divl
out
add
insb
push
js
dec
int3
icebp
aam
mov
in
icebp
insl
dec
insb
out
sbb
jo
das
mov
repnz
lock
push
scas
inc
ja
sti
fidivrs
std
daa
add
js
sub
sub
repnz
cwtl
push
pop
cmc
imul
dec
fisubrl
push
xchg
jbe
xchg
or
dec
adc
repnz
stos
xchg
jns
mov
adc
icebp
mov
ret
test
pop
lea
pop
xchg
jne
sub
lods
dec
pusha
out
pop
sbb
pop
nop
movb
int
add
jne
sbb
push
adc
xlat
cmp
outsl
adcb
adc
pop
mov
jp
xchg
fwait
mov
push
xchg
js
test
xchg
andb
xchg
shrb
hlt
insb
out
call
adc
int3
ss
sub
mov
mov
push
jmp
outsl
jo
mov
dec
sbb
mov
sbbb
cs
in
jge
cmpsb
insl
add
mov
je
mov
pop
imul
xlat
jne
cmp
or
jb
out
mov
pop
and
adc
mov
js
hlt
jne
jnp
mov
jae
pop
mov
movups
pop
out
xor
rclb
jne
mov
cmc
aad
push
cmp
call
pop
je
lcall
adc
lret
cli
xchg
sub
jbe
dec
jns
mov
shrl
mov
imulb
mov
lods
das
or
xor
sbbb
insl
insl
cmpb
out
mov
and
rclb
inc
push
repz
sbb
jno
leave
dec
cwtl
call
popf
sub
cwtl
jbe
push
or
mov
mov
inc
push
fwait
jge
in
jmp
out
mov
lods
jge
in
jge
cmp
pop
dec
xor
jmp
pop
dec
bnd
dec
cld
jg
insb
test
xchg
push
jo
jb
jbe
jns
dec
ja
iret
lods
loopne
xchg
lcall
repz
jae
bound
sti
cli
push
divl
mov
cli
jo
jne
scas
cmp
out
insb
out
mov
scas
pop
mov
dec
jmp
jne
xlat
xor
js
ss
mov
add
push
and
je
push
jne
lds
clc
inc
lea
je
testl
xlat
or
jo
imul
hlt
sbb
stos
pop
aam
ja
icebp
popa
in
mov
mov
push
xor
push
cmc
sub
push
out
xor
inc
xchg
lods
adc
xor
lock
or
push
mov
mov
jne
xor
call
mov
adc
or
cs
push
scas
cmpsl
push
cmc
or
inc
movsl
icebp
mov
push
test
out
sahf
jle
test
out
cmp
mov
cmp
movsb
insb
test
mov
pop
mov
jle
ret
mov
mov
jmp
shrb
test
jns
inc
sbb
jne
loopne
aaa
stos
inc
push
adcb
repnz
jp
mov
push
pop
bound
nop
fisttps
js
xchg
das
sbb
mov
jne
cwtl
and
lods
push
mov
push
add
dec
and
pusha
jo
sbb
test
xor
ljmp
call
push
jno
mov
mov
loope
aas
jns
mov
dec
push
pop
and
js
insb
dec
outsl
test
jmp
icebp
jno
bound
lock
adcb
mov
and
push
sub
dec
test
cmpsl
and
add
mov
cmp
sub
dec
push
dec
add
test
rolb
repz
call
sub
xchg
cmp
sbb
jecxz
sbb
idivl
sbb
aad
lods
mov
inc
daa
jbe
nop
insb
cmpxchg
xlat
adc
ret
sbb
pop
mov
out
es
pop
out
mov
push
das
lods
in
test
pop
std
push
movsb
push
add
mov
ss
push
mov
adc
test
sub
fdivs
fmuls
xchg
mov
call
out
gs
mov
cmpsl
cli
mov
das
fcoms
sbb
and
ja
xchg
xchg
mov
xlat
add
jne
aaa
clc
fmull
mov
push
jmp
push
lods
cmpsb
ljmp
lea
jecxz
out
add
es
xchg
mov
mov
movsl
shlb
adc
xchg
roll
call
xor
pop
in
or
xchg
pop
icebp
push
cmpsb
inc
dec
outsl
js
mov
scas
jno
insb
inc
mov
pop
lret
mov
push
int
hlt
cli
mov
jo
jne
sbbb
xchg
mov
dec
mov
push
mov
iret
fldenv
sbb
aaa
xor
mov
and
xchg
xor
repnz
xor
push
cli
dec
xor
pop
push
aad
rcll
es
sbb
aaa
add
xor
push
ja
cmp
push
xchg
pusha
ret
ja
aad
repnz
xchg
test
fwait
cwtl
or
ret
jo
jp
in
js
sub
insb
xchg
les
jmp
adc
inc
stos
lock
lds
insb
add
sub
xor
push
mov
ret
jb
pushf
add
fdivrs
daa
mov
cwtl
jmp
aam
xor
outsb
fs
fucom
xchg
xlat
lea
inc
push
push
sub
je
mov
mov
js
jne
jecxz
data16
cmc
xor
sbb
sub
jg
ja
pop
test
jge
cmp
sbb
jo
sti
jg
decl
xchg
aas
xchg
ja
lock
je
outsl
imul
mov
jo
xchg
aas
cmp
iret
push
pop
je
loopne
shll
xor
cmpsl
push
mov
jp
xchg
jne
jno
push
lret
xor
mov
test
mov
xor
adc
mov
fnstcw
mov
add
in
cmpsl
mov
jae
add
shrb
sbb
testb
xchg
std
mov
jge
mov
je
push
adc
pop
out
xor
in
xor
xlat
xor
pop
nop
loop
jle
jl
clc
je
mov
mov
push
aam
sbb
repnz
cmp
mov
mov
dec
inc
aad
imul
jp
repz
jge
imul
push
xor
subb
push
jmp
jle
mov
divl
mov
cld
pop
sub
sbb
ss
xor
sub
test
daa
icebp
mov
scas
mov
cmp
jbe
or
nop
adc
stos
divb
jns
sub
fnstsw
idivl
ss
xor
jne,pn
jae
aam
adc
in
mov
hlt
pop
mov
addr16
mov
pop
push
adc
or
insl
mov
lods
xor
inc
jmp
pop
jne
push
fsubrs
jge
inc
stos
loop
inc
jle
mov
push
cwtl
icebp
negl
xchg
add
in
les
push
dec
mov
stos
mov
std
xchg
insb
push
jo
or
lret
inc
mov
add
or
jbe
js
fisttpll
icebp
test
aaa
idivl
sahf
xor
cs
icebp
mov
mov
mov
ljmp
repnz
shr
push
xor
inc
xchg
adc
fldt
mov
in
pop
fildl
test
or
cli
adc
out
cmp
test
repnz
hlt
pop
pop
divb
cli
ret
ss
add
add
push
push
push
jns
shlb
outsl
cmc
xor
inc
pop
add
pop
dec
push
lods
out
das
dec
inc
clc
in
je
ss
xor
inc
in
mov
jae
xorb
or
lods
mov
add
test
jbe
popf
dec
lock
cmpsb
mov
jnp
fsubrl
mov
aad
cmp
leave
xchg
icebp
xchg
mov
test
dec
nop
cmpsl
insb
dec
inc
mov
sub
mov
xchg
jle
jbe
sbbl
inc
jo
pop
mov
aaa
aaa
add
fmulp
or
rcrb
arpl
cli
sahf
jl
shll
add
mov
mov
inc
subb
outsl
and
imul
lods
jmp
jecxz
or
adc
outsb
or
or
negb
ljmp
push
push
push
jno
lds
mov
fwait
xor
mov
test
mov
mov
push
add
in
test
push
push
sbb
xchg
pop
cmc
rcll
mov
outsb
jne
cmpsl
es
add
pop
lock
mov
popf
je
enter
fwait
shll
or
shrb
mov
adc
js
push
jne
jecxz
add
je
ss
jbe
and
outsl
cmc
ret
ret
pop
inc
insl
mov
or
lock
add
test
insb
aad
or
jns
out
and
movsl
sbb
inc
adc
adcb
adc
push
out
add
test
xor
cmp
rcll
insl
sbb
icebp
cmpsl
or
cltd
inc
imul
pop
pop
xlat
cmpsb
dec
push
mov
loopne
js
xchg
popa
cwtl
cltd
push
in
adc
inc
jmp
cmp
cwtl
mov
adcl
jno
aam
in
adc
mov
push
xchg
loopne
inc
sbb
out
iret
push
fsubr
int
xor
out
jo
add
hlt
xor
jo
ljmp
out
mov
nop
or
xchg
lock
xor
cmp
xchg
jo
adc
cmpsl
pop
ja
xchg
in
push
cmp
or
mov
cmp
and
adcl
jmp
cmpsb
aam
mov
push
push
dec
sarb
je
lock
or
dec
das
pop
and
adc
or
mov
or
lret
in
loopne
movsb
ss
xchg
mov
out
inc
ss
out
outsl
cmpsl
dec
enter
shll
mov
jnp
and
fwait
mov
xor
cwtl
mov
push
xor
fcoms
call
jle
rcl
push
scas
dec
lahf
jne
cmp
cmp
and
sahf
lock
in
xchg
xchg
jo
sub
add
cltd
xor
addr16
push
movsl
mov
divl
and
and
pop
push
or
push
pop
adc
push
icebp
aad
cs
add
enter
jo
xor
ljmp
adc
cmp
pop
cmc
cmp
xor
divb
outsb
aas
adc
sub
xchg
das
push
add
cltd
or
mov
int3
stos
ja
mov
xchg
inc
test
scas
cmp
inc
repz
xchg
push
hlt
jle
xchg
jb
mov
xor
xor
xchg
mov
into
dec
mov
push
in
subb
jnp
movsb
rcll
inc
bnd
jbe
jle
mov
xor
fcoms
jmp
push
jne
out
xchg
rolb
mov
out
pop
or
rorb
shll
and
xchg
lods
mov
push
adc
in
sub
push
mov
hlt
in
pop
pop
fidivrs
testl
pushf
mov
lcall
mov
mov
inc
jne
mov
push
push
xchg
xchg
mov
mov
je
pop
pop
sub
pop
xchg
sub
jne
or
mov
jle
cmpl
add
inc
repnz
es
je
sahf
into
inc
xchg
inc
cmpsb
pop
cld
out
imul
sbb
add
rcrl
xchg
insl
dec
divl
jo
js
push
fwait
pop
pop
cltd
jo
outsb
mov
outsb
xchg
mov
inc
jge
imul
pop
repz
jo
hlt
daa
je
cmc
je
lock
jbe
and
imul
outsl
xorb
add
daa
ljmp
add
add
add
jo
out
daa
bnd
sbb
lds
stc
outsb
je
in
aad
or
jno
insb
push
push
sub
sbb
push
outsl
jmp
push
jg
cs
dec
daa
scas
ss
je
lock
push
xor
lds
out
das
jno
push
pop
loopne
adc
lahf
outsl
stos
adc
daa
test
xor
insb
mov
dec
pop
nop
push
outsb
daa
js
hlt
movsl
and
cmp
cmc
inc
push
sbb
test
pop
dec
ss
mov
mov
mov
rcrl
ss
rcr
stc
dec
lcall
mov
std
std
sbb
lcall
test
jns
stos
sbb
in
scas
cmp
je
les
loopne
out
mov
test
lods
xchg
or
sbb
fildl
jae
pop
mov
push
fsubrp
xor
out
in
sbb
mov
inc
ljmp
movb
jmp
mov
push
movl
pushl
push
movl
push
lea
jmp
xchg
hlt
jb
fsubs
jno
mov
daa
xchg
testl
call
sub
xchg
cmpsl
stc
and
push
icebp
dec
pop
adc
ja
std
test
hlt
adc
addr16
mov
shlb
in
nop
jge
pusha
icebp
dec
mov
mov
jo
ja
and
lea
iret
jmp
subl
mov
mov
adc
add
icebp
jmp
push
idivb
pop
frstor
mov
rclb
insb
xorl
inc
add
xor
adc
jne
xor
addr16
add
popa
mov
add
int3
outsb
push
cmp
pop
je
push
dec
adc
pop
sub
rcrb
cmc
pop
sub
imul
repz
pusha
insb
lret
fsubs
xchg
cmpsl
mov
pop
jmp
mov
xor
mov
jae
enter
inc
ja
mov
dec
jg
lret
mov
ds
and
clc
scas
psrld
ja
inc
xchg
in
push
cwtl
test
add
pop
push
movl
mov
push
lea
jmp
inc
sub
mov
adc
cmp
jmp
push
aas
push
mov
bound
mov
push
outsb
arpl
jp
jb
pop
outsl
daa
insl
icebp
xor
insb
mov
mov
cmp
dec
mov
cmp
int3
mov
enter
pushf
movl
movw
lea
jmp
pushf
pusha
movl
call
mov
pusha
push
pushf
pushf
lea
jmp
dec
mov
mov
out
aad
cmp
test
into
mov
dec
psrad
and
adc
icebp
sbb
stos
xchg
adcl
push
incl
push
mov
or
loope
sahf
ja
xor
clc
dec
arpl
inc
orb
jnp
xor
mov
push
aas
jg
das
adc
pop
push
cmp
aaa
xchg
mov
xor
scas
mov
dec
adc
jbe
dec
decl
lret
mov
fwait
inc
cmp
pop
outsl
dec
inc
lds
mov
neg
xor
outsb
push
add
dec
inc
outsl
push
push
adc
inc
ljmp
add
fs
sub
hlt
pop
fwait
insb
and
and
and
test
cmp
and
jg
pop
in
push
cli
pop
jb
inc
pop
dec
xchg
jmp
das
dec
cmpsb
pushf
movsb
jle
arpl
mov
enter
adc
mov
cli
and
lock
add
xchg
in
add
movsl
roll
mov
ficomps
and
repz
pop
sbb
stos
push
inc
mov
sub
loope
mov
bound
cmp
cwtl
cmp
addr16
rcl
sub
mov
ja
mov
push
ret
and
mov
test
xor
adc
shrb
push
fisttpll
mov
fs
push
push
movl
mov
pushf
pop
clc
inc
stc
shlb
mov
idiv
cmp
adc
les
aaa
xchg
mov
cli
xchg
mov
loope
dec
ss
fs
sti
repnz
inc
cltd
lods
or
scas
pop
push
mov
mov
push
inc
popf
out
rcr
movsl
add
mov
hlt
ljmp
popa
adc
inc
xchg
mov
dec
xchg
shrl
js
sarl
push
fwait
cmp
dec
mov
mov
sti
xorl
sti
stc
inc
xor
pushf
pushf
mov
pushf
lea
jmp
jmp
pushf
lea
call
pusha
push
movb
lea
jae
pushf
mov
mov
not
inc
push
mov
pusha
lea
call
pushf
pushf
pusha
call
add
jmp
call
clc
cmpb
push
lea
jne
shl
sub
setno
call
lea
je
bswap
not
pusha
lea
lea
pusha
movzwl
pusha
movzbw
lea
not
pop
not
mov
pushl
call
mov
loopne
fsubs
pop
jge
int
jb
cltd
cmp
dec
add
jecxz
inc
push
and
cld
ja
xchg
or
sbb
pop
repnz
nop
aas
jge
bound
iret
xor
mov
cmp
cld
dec
mov
jo
in
jne
call
mov
pushf
pusha
mov
pushf
pushl
ret
sbb
bound
int3
mov
and
inc
cmp
pop
outsl
mov
and
sub
push
repnz
fcmovb
fiaddl
aas
stos
js
lahf
add
clc
gs
jg
sub
mov
inc
inc
sar
add
cmc
mov
xchg
pusha
mov
shl
mov
cmp
pushl
call
lea
popa
xchg
mov
add
xchg
imul
pop
outsl
cmp
mov
cmpsl
mov
pop
test
pushf
js
ss
xchg
in
inc
pushf
xchg
test
fsubs
repz
test
aam
push
adc
sub
mov
adc
daa
cld
mov
lods
dec
addr16
xchg
lret
mov
lcall
js
jmp
jl
add
in
add
mov
subl
mov
cwtl
xchg
bound
cwtl
fwait
test
mov
lea
js
push
cmc
clc
and
clc
cmp
stc
add
pushf
mov
lea
jmp
pop
lea
lea
bswap
movsbl
pop
not
push
jmp
jae
test
fsubs
jbe
push
out
lcall
stc
dec
in
dec
or
or
fcmovnbe
and
pop
fiadds
mov
dec
div
lret
outsl
outsb
or
push
mov
stc
push
push
xchg
cmp
repnz
cwtl
call
dec
or
lret
pop
jecxz
dec
mov
loope
jo
scas
pushf
cltd
repz
sub
jno
pop
cmpsb
mov
fiaddl
inc
clc
es
out
sub
dec
or
pop
jecxz
test
shll
shlb
scas
xchg
repz
jle
fsubrs
sub
call
shll
jnp
shlb
out
out
arpl
push
push
mov
scas
fsubrl
aam
push
pop
lds
iret
arpl
sub
std
pusha
jg
jg
and
add
add
sti
cmp
dec
jae
scas
pop
ss
je
loope
cli
or
push
sub
xchg
lods
jmp
push
loopne
bound
inc
sahf
or
inc
mov
vmaxpd
add
pusha
lea
jmp
xchg
push
movl
push
pusha
movl
push
lea
jmp
push
lea
jae
neg
rcl
mov
shld
mov
rcl
mov
jmp
mov
pushf
pusha
movl
push
movl
mov
lea
jmp
and
or
mov
negb
xchg
and
iret
mov
dec
aaa
and
jg
mov
or
lcall
or
aas
int
pusha
int
xor
stos
leave
add
daa
in
cmp
inc
popf
inc
dec
jne
cmpsb
leave
and
pop
insb
mov
cmc
stos
ds
push
repz
in
xor
enter
pushf
jnp
leave
and
dec
or
dec
xchg
out
cltd
jo
int
insl
sub
jg
adc
cmp
add
sarb
pushf
insl
inc
mov
out
adc
test
jne
fidivrl
out
dec
popf
sbb
cmc
sbb
out
jo
mov
jp
pop
jg
outsl
lods
jae
and
stos
cmp
stos
popa
mov
pop
out
mov
jp
xchg
mov
int3
sub
pop
stc
mov
sub
jp
hlt
xor
and
adc
test
xor
popa
dec
jge
in
subl
jecxz
orb
aaa
dec
mov
push
adc
xchg
push
dec
mov
or
jmp
hlt
lea
ljmp
lcall
fprem1
decl
pop
and
lea
jle
push
pushl
mov
lea
call
jmp
xchg
inc
les
mov
fcomip
test
push
jg
push
cmp
and
dec
pushl
out
ret
cmp
xor
rcll
pop
call
lcall
jmp
imul
js
dec
rolb
mov
sbb
lea
mov
cmpb
lock
or
in
aam
cmpsl
jbe
int3
aaa
and
sub
inc
and
mov
lea
ret
sub
pushl
call
lea
call
push
call
cmp
and
xchg
mov
or
lahf
jecxz
lahf
lcall
aaa
sbb
daa
mov
xchg
call
sub
push
stc
cmp
scas
lock
cs
sbb
xchg
cmp
sahf
jne
out
aas
jl
mov
cmp
ss
inc
lret
jp
push
scas
jecxz
loopne
xchg
push
and
lea
scas
inc
fcompl
dec
mov
les
call
add
pop
test
jns
popf
inc
data16
fisubl
dec
and
adc
dec
xchg
out
inc
repz
inc
adc
sbb
xor
jne
mov
jo
dec
mov
xorl
dec
enter
add
xchg
lahf
pop
sarl
mov
adc
adc
lock
and
loope
mov
repnz
mov
test
mov
pop
js
mov
cmp
cwtl
cmp
pop
lods
pop
negl
stos
cs
pushf
jae
lcall
popa
iret
add
aas
sbbl
inc
dec
mov
fdivp
ss
mov
aaa
loope
inc
inc
nop
movsl
push
lods
sahf
jne
mov
pop
roll
mov
sbb
sarl
xchg
jbe
call
cmp
rcrl
in
mov
sbb
pusha
lea
jl
push
push
mov
pushf
mov
movl
pushf
lea
jmp
adc
push
push
jmp
pop
mov
setbe
not
mov
jmp
mov
pusha
pusha
lea
jmp
ror
pushf
cmp
cmc
bt
xor
call
xor
cmp
mov
sar
mov
repz
inc
and
jb
testb
leave
subb
js
or
mov
inc
mov
inc
inc
and
stc
inc
xor
call
adc
rol
adc
fdivs
pop
dec
jne
sbb
sbb
pop
mov
push
call
lea
je
pushf
mov
setno
mov
jmp
mov
mov
cmp
mov
popa
pop
aas
pop
out
add
mov
pop
adc
mov
je
push
fidivrl
mov
shll
pop
ja
add
js
popa
adc
fisttpll
and
aas
test
js
or
pop
mov
arpl
jo
jnp
pop
aad
daa
stos
sbb
xor
and
sub
ss
jnp
lods
mov
push
sahf
fisttps
inc
into
inc
sub
pusha
pusha
push
call
clc
cmp
pusha
lea
jae
jmp
inc
das
inc
mov
stos
iret
aad
mov
xchg
mov
pop
adc
push
scas
sub
xchg
fisttpll
mov
cmp
stc
and
mov
inc
out
repnz
icebp
insl
ret
add
shll
jnp
imul
sub
dec
movsb
out
scas
or
les
es
xchg
push
push
mov
mov
push
pop
mov
sbb
call
sbb
jl
mov
shlb
inc
mov
shlb
out
sbb
and
add
push
call
repz
pushf
call
lea
jne
xor
rcr
bswap
mov
stc
test
test
bt
add
clc
bt
movzwl
stc
stc
not
mov
test
pusha
add
pushf
mov
pushl
call
lea
pushf
pusha
mov
pushl
setns
call
push
pushf
movl
pushf
jmp
jmp
call
movsbl
sete
push
jmp
imulb
test
fsubs
jne
mov
insl
fnstcw
repnz
fadds
cmp
push
out
cli
sbbl
pop
cmpsl
ss
pushf
push
push
cld
inc
sbb
out
dec
mov
adc
mov
iret
sub
jnp
cmp
fsubs
pushf
mov
dec
mov
loope
imul
fsubs
subl
xor
xor
or
bnd
jns
pop
mov
inc
repz
or
mov
gs
movsb
iret
rclb
sub
sub
jno
nop
out
sarl
or
mov
push
out
mov
imul
gs
or
loopne
adc
sbb
out
xchg
push
sahf
mov
mov
jecxz
pop
push
insl
fcomps
and
fs
jne
call
pushf
call
movb
lea
jne
push
movb
stos
mov
push
pushf
pusha
lea
jmp
setb
not
stos
not
mov
movb
mov
lea
call
mov
lret
stc
add
fbstp
xchg
inc
in
arpl
or
jmp
fadds
cltd
outsb
daa
xchg
sahf
adc
aad
push
cmpsl
test
cltd
aas
js
xor
aas
cmp
in
cli
ds
add
push
xchg
in
ss
scas
push
push
jne
popl
add
inc
and
add
add
inc
and
sub
or
lea
jmp
pushf
bt
xor
cmp
pushf
neg
cmc
pushw
popfw
push
jmp
push
add
dec
lock
enter
jge
sahf
faddp
xchg
pusha
aaa
add
jecxz
push
adcl
add
inc
aad
pop
jg
sub
int
cmp
and
inc
or
test
cmpsl
ds
xchg
js
popa
mov
stc
pop
jge
dec
xchg
add
rcrl
je
mov
dec
sbb
inc
rclb
mov
pavgw
lahf
push
daa
aas
and
adc
cs
rolb
fstl
fs
fwait
inc
xchg
fmull
imul
mov
sbb
movsl
out
aas
xchg
fisubrl
sbbl
sarl
pusha
movl
call
jmp
add
pusha
pushf
lea
jmp
push
movb
jmp
test
stc
call
xchg
pushf
lea
movl
pushf
setge
lea
pushf
pushf
movw
movl
call
jae
jmp
mov
cmc
not
adc
sar
mov
xor
sub
xchg
pusha
jmp
sahf
js
fsubs
jae
js
sbb
loope
jno
cmp
xchg
rcrb
push
inc
clc
pusha
push
xor
mov
out
movsb
adc
xchg
sbb
cmp
cltd
aas
fldcw
jg
inc
cmp
cmp
dec
and
neg
mov
imul
sub
cmp
pop
push
jne
adc
not
loop
mov
xchg
dec
jae
daa
sbb
xor
out
sub
cmpl
pop
xor
pop
mov
std
and
std
jnp
jne
jle
inc
cltd
mov
arpl
push
inc
sbb
and
mov
push
xchg
out
iret
imul
mov
pusha
sbb
lods
add
loope
jns
pop
and
pop
leave
pop
je
xor
cli
test
push
dec
push
sbb
add
push
in
mov
mov
aas
adc
sbb
out
cmp
sub
xchg
dec
sti
mov
outsl
mov
fwait
push
ljmp
lahf
stc
mov
sahf
or
xlat
aad
push
ret
mov
cmp
or
mov
mov
out
jle
xchg
add
clc
stc
push
mov
mov
mov
inc
frstor
add
ffree
aam
insb
cwtl
dec
add
aaa
cmc
sub
repz
sub
push
outsb
fsubl
in
dec
adc
and
or
xchg
repz
pushf
pushf
mov
push
mov
movb
pushf
pushl
ret
subl
mov
test
lods
test
push
add
sbb
movsl
pusha
lea
jmp
imul
fsubs
and
push
outsl
or
fs
jb
mov
ret
ret
jo
rorb
popf
clc
pop
fidivl
out
cmp
sbb
mov
imul
test
cmp
movb
jmp
inc
cwtl
stos
fsubs
cmc
add
int
aas
lret
pop
lods
inc
cmp
cmpsb
jns
mov
outsl
js
inc
xchg
int3
jne
and
lock
add
lahf
sub
popa
rcrl
arpl
inc
add
xchg
mov
xchg
mov
mov
dec
push
arpl
sbb
in
int3
push
fs
insl
leave
push
and
sub
imul
call
cmp
nop
mov
dec
and
push
das
push
jle
cmp
jmp
push
jns
mov
scas
or
loop
stos
mov
dec
jmp
bound
lods
aaa
push
jg
in
mov
std
lods
nop
mov
outsl
movsl
in
cmp
cmpsb
mov
and
or
add
stos
ja
push
jbe
lods
fcmovnu
add
subl
dec
xor
bound
loop
out
mov
out
test
mov
aam
or
jge
cmp
inc
test
mov
adc
testb
insb
jge
divl
arpl
xchg
bound
fwait
jo
sti
cld
arpl
jne
push
dec
fisttpl
xchg
and
mov
imul
push
jb
xlat
pop
fsubrs
in
inc
idivl
xor
lcall
enter
fs
cmp
dec
jmp
cmp
pop
sbb
mov
xchg
cmpsl
cmp
ja
push
in
aad
add
out
pop
pop
mov
jmp
jmp
enter
insl
sbb
addr16
cmp
mov
cwtl
mov
loop
hlt
aam
inc
or
adc
dec
inc
and
aaa
mov
mov
stc
icebp
add
loope
jmp
cs
dec
shll
jl
pushl
inc
pop
loope
dec
mov
add
and
stos
clc
mov
icebp
movsb
inc
out
adc
data16
mov
inc
cmpsl
jnp
sbb
and
mov
jmp
adc
xor
ffree
sub
or
push
jle
shll
jecxz
push
push
pushl
jmp
mov
call
mov
movb
movb
movb
lea
call
call
jmp
lea
je
pusha
test
cmp
mov
call
pushf
push
mov
pushf
lea
jmp
popf
cpuid
nop
jmp
add
add
adc
adc
push
add
adc
xor
pop
add
pop
pop
add
add
add
lahf
ret
xchg
mov
movzbw
setne
xchg
jmp
inc
pusha
lea
jmp
setle
not
ror
shr
sub
xor
mov
ror
sbb
rol
neg
call
pop
lods
mov
cmp
into
jns
andb
dec
lret
xchg
inc
adc
xchg
lea
stos
outsl
setge
lea
sbb
ret
push
dec
adc
ficomps
into
mov
imul
jl
sbb
inc
lods
outsb
xor
cmpsl
cld
inc
xor
jno
mov
push
xchg
rclb
mov
mov
push
pushf
pop
xorl
and
jmp
lret
dec
push
pushl
lcall
call
in
push
mov
pop
xor
sti
ds
cs
cmc
outsb
aam
mov
mov
bound
sub
neg
sub
xchg
movzbw
bswap
pop
jg
setae
pop
pusha
mov
call
bt
test
sub
pusha
pushl
rep
pop
lea
mov
mov
pusha
lea
jmp
add
jg
pushf
add
jmp
lea
jne
pushf
mov
mov
push
pushf
jmp
push
pushf
movl
pushf
lea
jmp
pushf
lea
call
pusha
pushl
lea
jae
inc
dec
call
pusha
push
movl
pushf
movl
pusha
pushf
lea
jmp
movl
movb
jmp
call
lret
fsubs
mov
mov
xchg
pop
cmp
lcall
push
sbb
add
mov
rcl
hlt
mov
push
cmp
or
nop
xor
in
js
out
lret
mov
push
push
stos
fcomp
sbb
jnp
roll
mov
icebp
xor
xchg
arpl
scas
sbb
repz
jmp
je
xor
fsubs
mov
in
mov
lods
les
loop
mov
dec
arpl
clc
jne
cmp
sub
cmp
ret
lret
inc
pop
and
mov
xor
fs
scas
icebp
xchg
cmp
inc
xchg
repz
and
scas
cld
push
xorb
mov
loope
dec
cli
xor
popf
mov
icebp
xchg
dec
jl
inc
mov
or
ficompl
int3
mov
scas
test
lock
pop
pusha
jmp
clc
or
mov
stc
cmp
jmp
lahf
imul
fsubs
ss
jmp
xor
xchg
cs
jne
mov
outsb
push
mov
ret
xchg
add
pop
sub
repnz
cmpl
fldcw
in
add
leave
jmp
jbe
mov
sub
and
repnz
inc
cmc
add
lret
inc
sbb
push
dec
push
out
ret
cmp
fnstcw
out
and
adc
or
mov
rorb
mov
je
into
or
jl
cmc
push
jg
fwait
jge
movsb
into
test
fisubrl
dec
fsubp
xchg
testb
sti
sbb
jecxz
mov
dec
bound
pop
popl
loopne
popf
jg
push
sbb
dec
mov
mov
pop
sbb
fsubs
and
into
jle
rclb
lods
mov
pop
test
out
popf
ljmp
imul
xor
shl
loopne,pt
xor
push
mov
ret
lcall
inc
test
int
bound
adc
push
push
push
adc
pop
adc
hlt
out
fidivrl
loopne
mov
mov
or
lcall
inc
add
pop
jae
ret
pop
add
icebp
inc
mov
inc
xor
inc
sub
jle
hlt
dec
inc
js
push
out
setae
fcomps
mov
or
dec
mov
push
cmpsl
daa
pushw
adcl
inc
outsb
and
mov
sbb
movsb
pop
fisubrs
int
pop
fcomps
mov
out
xor
push
inc
xor
fwait
mov
nop
and
lds
in
cmp
bound
xor
loop
cs
cmp
pop
outsl
movsb
mov
js
rorl
je,pn
xchg
jecxz
inc
rcrl
cli
pop
mov
sub
inc
fstpt
sbb
fs
and
in
bnd
mov
in
pop
sub
mov
shrl
pushf
fmuls
pop
and
mov
jle
fwait
cld
inc
jno
in
aaa
adc
mov
mov
lcall
bswap
pushf
push
mov
call
mov
pushf
pusha
lea
jae
cmp
jmp
push
movl
pusha
push
push
pushl
popl
push
push
movw
pushl
ret
lds
repz
loope
mov
aas
cmc
sbb
jnp
cmpl
fwait
mov
mov
mov
xchg
lea
adc
pop
das
pop
dec
cmpsb
pop
ret
mov
jns
push
xchg
clc
lcall
fsubs
lret
mov
leave
fsubr
xor
mov
jnp
xor
shr
mov
into
cmpsl
fsub
lahf
ret
int3
dec
adc
mov
xchg
pushf
js
aaa
jmp
bound
jg
cmp
dec
adc
cmp
orb
and
inc
sbb
test
js
rorb
ret
cmp
sarl
mov
cmp
inc
and
ret
jno
movb
lea
jmp
pop
pushf
call
not
mov
pushl
lea
call
lea
ja
jmp
jmp
call
bt
pushl
popl
stc
cmp
push
jmp
push
btc
or
not
push
movsbw
xadd
push
shrd
or
mov
shr
xadd
shrd
jmp
str
call
pusha
push
lea
ja
pushf
mov
dec
call
xor
mov
enter
sahf
fdivl
popf
stos
loop
pusha
icebp
fstpt
adc
out
fwait
mov
mov
or
aam
shll
mov
nop
aas
ds
mov
std
push
lock
daa
adc
pop
rcrl
push
and
jne
lret
mov
pop
and
mov
not
cwtl
movzbw
lea
pushf
jmp
lea
mov
movw
pushf
push
movb
lea
jmp
movb
lahf
bswap
not
push
push
movzbw
pushf
lea
jmp
inc
pushl
mov
pusha
adc
lea
pusha
pushl
ret
mov
movb
dec
dec
inc
call
pushf
movl
pushf
movl
pusha
movb
push
lea
jmp
mov
jmp
xor
rcr
lret
mov
cmp
cltd
insl
insl
fdivrl
fnsave
pop
and
outsb
jg
mov
rcrl
stos
pop
push
subb
rorl
mov
iret
adc
push
cmp
sarb
mov
and
sbb
fisttpl
imulb
push
and
mov
cmp
jnp
jae
sbb
push
jmp
push
xchg
movsb
into
sarb
fwait
xchg
or
mov
inc
dec
cmp
scas
in
dec
xor
mov
lahf
pushf
bswap
pushl
popl
not
mov
cwtl
movl
setae
movsbw
movsbw
not
lea
movw
jmp
mov
test
mov
push
pushf
lea
je
shl
pusha
cmp
add
bswap
add
mov
cmc
add
pushf
mov
clc
bsr
lea
mov
cmp
clc
cmc
movl
cmp
push
jmp
jmp
fwait
sbb
fsubs
gs
sub
loope
aas
dec
mov
jo
neg
push
xchg
rcll
mov
aad
cmc
dec
clc
dec
pop
jae
mov
adc
stc
sub
jmp
add
mov
jb
fbstp
cmp
push
jg
sub
mov
ljmp
mov
insl
mov
mov
addr16
lret
lods
adc
lret
int
outsb
push
out
scas
jmp
repnz
fld
xor
clc
push
fsub
loope
ficoml
imul
fsubs
repz
leave
push
or
dec
or
jecxz
sbb
mov
je
mov
jmp
dec
jne
sub
dec
icebp
cmp
and
bound
cwtl
cltd
jb
fwait
es
sub
lret
xchg
stos
mov
sbbl
jnp
xchg
dec
cli
pop
mov
pop
sub
roll
jne
xchg
loop
out
push
add
test
pusha
sub
test
jge
outsb
inc
adc
xor
out
add
fsubs
ljmp
aam
popa
sub
xchg
or
shll
jecxz
shll
fldenv
test
das
jg
jb
cld
inc
jne
aam
sub
inc
add
xchg
fistps
xchg
imul
stc
pop
nop
cmp
jg
sbb
pop
cld
outsb
roll
xchg
add
push
adc
arpl
inc
adc
cmpsl
mov
jle
push
push
jecxz
ficoml
fsubs
push
jb
xchg
adc
xor
xor
mov
mov
ret
loop
mov
daa
dec
and
and
ret
and
addr16
push
mov
cmp
popa
fnsave
popf
dec
adc
xor
jae
pop
jecxz
aaa
imul
int3
push
dec
xorl
in
mov
add
push
pop
aam
inc
jno
lcall
inc
jno
mov
stos
dec
gs
inc
loope
jae
adc
jo
jmp
aaa
orb
sbb
pop
cwtl
add
sub
pushf
lea
je
pushf
jmp
xor
mov
fsubs
pop
cli
mov
push
repz
inc
cmp
subb
cltd
in
jl
fists
inc
pop
out
dec
push
frstor
xchg
mov
add
mov
orps
pop
inc
fsubp
loope
xor
or
push
fs
bound
loope
sbb
xor
or
cmpsl
iret
loope
cmpsb
mov
mov
jge
filds
fucomi
push
sbb
popa
sahf
push
jp
insb
psrlq
jo
push
add
lret
shlb
mov
clc
xchg
fwait
lock
mov
scas
jmp
xor
xlat
pop
mov
jb
pop
jns
shlb
cwtl
jg
cmp
dec
out
stos
push
sarb
xor
xchg
js
jp
sbb
xor
ds
xchg
jle
inc
mov
insl
or
xor
xchg
je
pop
mov
or
into
rclb
push
jp
stc
dec
push
cwtl
sbb
pop
and
insb
lods
sub
jle
gs
jns
mov
xchg
adc
dec
in
push
cmp
push
lds
sbb
out
ja
mov
push
test
push
ljmp
xor
call
adc
and
in
imul
or
jne
fs
in
sub
arpl
push
pop
iret
fucom
shlb
add
out
mov
pop
les
inc
sbb
hlt
cmp
out
mov
call
mov
pop
lcall
xlat
inc
and
lock
js
in
leave
jmp
bts
mov
mov
clc
pusha
and
cmp
sub
ja
pusha
pusha
add
push
movb
lea
jmp
popf
fistps
fsubs
scas
in
xchg
insl
loope
pop
ljmp
push
into
cwtl
pop
outsl
mov
sub
fimull
fmull
inc
sbb
sub
fists
dec
lahf
arpl
push
mov
pop
out
xor
pop
push
mov
daa
hlt
outsl
scas
push
arpl
out
stos
sbb
inc
add
repnz
push
xchg
jbe
mov
and
enter
push
mov
call
loop
test
fmull
mov
arpl
mov
lcall
xor
bound
fisttps
jp
das
xlat
in
sub
push
xor
mov
xor
or
adc
ja
and
sub
xchg
pop
pop
out
sbb
pop
pushf
jne
mov
push
dec
jne
and
sbb
push
stos
mov
movb
pusha
pushf
lea
jmp
mov
sahf
mov
pop
scas
pop
popf
test
test
scas
pop
pushf
lahf
pop
cmpsb
test
sahf
pop
mov
lahf
pop
sahf
mov
fwait
cmpsl
mov
test
pop
cmpsb
mov
mov
pop
lods
cmp
sahf
fdivrp
jmp
add
divb
xor
pushl
sub
bt
pushf
stc
repnz
call
lods
lock
pop
fidivrs
cmp
xchg
fadd
push
ret
gs
xor
sub
mov
add
lods
sbb
dec
insl
popa
ja
push
sahf
adc
xor
js
xchg
mov
jecxz
add
push
loope
xor
in
mov
shrb
fstps
lods
lahf
xchg
enter
sarb
mov
mov
mov
lods
cmp
imul
xor
sbb
lea
call
stc
call
xchg
nop
pop
enter
mov
xor
test
xor
pop
and
ret
imul
mov
jecxz
push
mov
das
dec
mov
cmp
rolb
sub
dec
fists
and
mov
cwtl
push
mov
int
adc
rcrl
cwtl
mov
out
dec
sbb
mov
dec
ret
ficoms
test
sahf
js
fisubl
stc
push
sub
enter
add
int
cmp
cmpl
or
and
fisttpll
xlat
mov
sub
pop
in
fisttpl
sbb
dec
mov
loopne
js
jbe
push
or
in
jp
add
sbb
xchg
xchg
mov
and
jge
push
outsl
pop
push
test
mov
and
icebp
mov
subl
sbbb
or
xchg
sbb
inc
into
xchg
push
sub
jb
push
cmp
xor
cmp
in
inc
xchg
mov
test
pop
data16
lahf
mov
inc
and
notb
in
jae
call
or
xchg
fcmovu
bound
add
loopne
xchg
and
fnstenv
cs
or
out
push
xor
mov
add
and
push
lods
jmp
into
nop
aas
popa
and
jb
lock
test
in
ret
push
cmp
add
notb
dec
jne
fscale
rorl
add
lret
test
call
movsb
and
fsubs
sbb
push
sarl
mov
pop
das
inc
pop
ds
pop
outsl
repz
push
mov
inc
shrl
jl
lret
cmp
shlb
scas
popa
mov
imul
or
xor
inc
addl
rcl
lcall
in
mov
outsl
mov
cwtl
mov
add
add
outsl
mov
mov
cmp
jns
mov
xlat
sahf
movsl
imul
je
adc
mov
add
lret
shrd
bts
mov
jmp
pushf
mov
pusha
pushf
mov
pushf
inc
push
mov
lea
jmp
push
lock
std
std
xchg
mov
pop
push
jnp
jne
ret
dec
jge
imul
mov
pop
adc
xor
jl
sbb
jge
or
jno
dec
dec
mov
push
ret
add
call
sahf
push
push
test
fstl
add
hlt
aam
mov
xor
xchg
push
lods
add
sarb
or
lret
js
add
lock
rorb
mov
mov
stc
neg
jmp
jb
push
lea
jne
jmp
mov
cs
cli
sub
xchg
inc
mov
clc
add
mov
inc
push
mov
out
repnz
cs
cmp
rcll
imul
dec
sub
in
push
enter
pushf
into
aad
dec
pop
les
mov
cmp
imul
xchg
xor
push
cmpsb
addr16
adc
inc
cmp
outsl
fistpl
lock
or
mov
cmc
adc
jb
and
sub
fstp
inc
sbb
xchg
sarl
lock
test
lret
stos
shrb
call
lret
rol
pop
out
pop
mov
inc
fistpl
fstl
int
dec
and
outsl
lcall
pop
hlt
jle
and
and
dec
mov
std
ret
mov
add
pusha
pop
fistpl
push
push
pusha
pushf
jmp
jmp
movl
pushf
pushl
pusha
pushf
lea
jmp
push
pusha
lea
jne
jmp
cmc
push
bt
shl
not
mov
pusha
pusha
lods
mov
cmp
clc
pushl
sub
pushf
pushf
ror
test
bt
mov
xor
call
cmp
pusha
cmp
call
call
lea
jns
dec
jmp
mov
sub
push
call
pushf
sbb
lea
add
shl
rol
movsbw
mov
xor
shl
not
add
mov
cmp
repnz
push
mov
pushf
pushl
lea
jne
jmp
pushf
lea
jle
pushf
lea
call
cmp
cmc
call
xor
movzbw
btc
mov
mov
test
push
bts
push
cmp
not
jmp
lea
ja
not
add
rol
xor
xor
neg
mov
cmp
jg
stc
test
cmp
call
clc
push
cmc
sub
stc
call
jmp
push
movb
xchg
movzbl
movl
lea
lea
push
jmp
call
call
lea
ja
shr
cmc
sub
sbb
sbb
lea
rcl
add
pusha
setb
pushf
mov
mov
rol
and
mov
pushf
bt
repnz
pushf
lea
jne
movzbl
push
lahf
pop
movb
movzbw
push
mov
not
jmp
lea
call
push
lea
jae
clc
jmp
xchg
bsf
mov
push
jmp
pusha
add
clc
mov
clc
cmpb
pusha
pushf
jmp
push
lea
je
stc
sub
jmp
fildll
cmpsb
bound
fsubs
adc
cmp
pop
xchg
lods
subl
aad
out
shrb
sahf
pop
imul
cmpsl
jmp
lds
push
dec
addb
mov
pop
inc
xchg
aas
out
aas
fsubs
fisubrl
fwait
mov
push
or
pop
repnz
mov
mov
sahf
popa
pop
ja
repz
pusha
adc
mov
or
fsubrl
repnz
adc
push
jae
push
push
push
stos
jo
xchg
pushf
mov
popf
leave
push
ja
in
mov
jns
out
enter
push
test
test
mov
lret
lds
xchg
insb
fldl
lods
cli
inc
mov
mov
cmp
gs
mov
pushf
sbb
test
lea
and
pop
aad
icebp
divb
inc
out
or
cmpsl
and
xchg
fldcw
xchg
push
or
bound
leave
and
push
pop
lcall
outsl
out
dec
sti
outsb
xor
and
out
ds
int
mov
imul
mov
jp
jb
mov
xlat
pop
pusha
sub
and
addps
andb
cwtl
pop
in
das
ja
mov
push
repz
in
pop
js
mov
into
out
mov
pop
and
movsbw
movsbw
pusha
bswap
mov
pushf
mov
push
pushf
pushf
mov
mov
movsbw
pop
push
pusha
pushf
push
pushl
ret
push
mov
lea
jne
pusha
inc
movw
inc
mov
pusha
pushf
lea
jmp
call
mov
pushf
lea
je
pusha
adc
pusha
pushf
movw
lea
jmp
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
int3
and
push
sub
stc
jmp
movb
add
and
setns
shl
mov
pushl
test
stc
test
lea
pushf
lea
je
clc
clc
jmp
add
dec
outsl
arpl
inc
jb
gs
insl
shl
not
mov
movb
lea
call
jnp
pushf
push
lea
jae
pusha
sub
push
lea
call
push
pusha
pusha
mov
lea
jae
push
pushf
pusha
sub
call
movb
push
mov
jmp
mov
bound
outsb
add
cs
jo
push
dec
repz
addr16
push
pop
xchg
call
imul
movsb
int3
sub
push
lds
nop
aas
or
cs
or
inc
push
add
cmp
call
nop
push
mov
daa
and
xlat
sbb
aas
cltd
xor
mov
mov
pushf
pushl
ret
pop
popa
fsubs
lods
push
clc
sbb
iret
loop
enter
stc
bound
push
push
ja
mov
outsl
mov
wrmsr
mov
cmp
adc
mov
dec
cwtl
imul
ret
in
push
shr
add
cmc
ljmp
sub
cmpsl
leave
clc
cmp
adc
out
andl
shll
ja
repz
or
pop
jne
adc
mov
add
scas
add
fisubs
sub
pop
dec
push
dec
jne
fistpl
mov
fsubs
xchg
mov
xchg
repnz
movsb
mov
outsl
js
int3
inc
xchg
lret
fs
in
gs
mov
sub
adcb
or
lods
sub
imul
adc
sub
jp
mov
add
and
and
fs
jb
pusha
cmpb
jmp
pusha
cmp
call
bts
bsf
mov
push
call
movb
mov
pushf
lea
jmp
cmpb
jmp
lea
jae
bt
cmp
pusha
push
pusha
lea
jae
test
clc
cmp
cmp
jmp
not
stos
sets
call
push
lea
je
jmp
push
movl
lea
ja
pusha
pusha
mov
pushl
popl
mov
push
pushl
ret
pusha
daa
mov
bsr
mov
sar
cmp
mov
lahf
bswap
xor
movzbw
push
lea
jmp
sub
clc
mov
pusha
repnz
pusha
lea
jne
cwtl
bswap
not
cwtl
movb
lahf
movzbw
bswap
push
bswap
lea
pusha
push
pushf
movl
pushf
pushf
mov
push
pushl
ret
call
mov
mov
jmp
cmc
bswap
jmp
pushf
call
pushf
popl
movb
jmp
shl
not
sub
mov
push
pushf
call
rcr
pushf
neg
movzbl
clc
add
push
not
pushf
jmp
jmp
pusha
push
mov
pushf
pushf
popl
jmp
pushf
pusha
mov
mov
movw
mov
pushl
lea
jmp
add
cmp
mov
clc
movb
cmc
jmp
pushl
popl
pusha
movb
pushf
lea
jmp
div
pushf
jmp
pushf
mov
push
mov
pushf
pushl
ret
jmp
add
pushf
pushf
pushl
lea
jmp
bswap
jmp
add
cmp
rdtsc
mov
inc
pushf
cmp
shr
mov
cmc
stc
pushf
clc
add
call
call
pushf
mov
mov
jmp
pushf
mov
push
jmp
pushf
mov
bswap
mov
pusha
pusha
mov
call
mov
jmp
clc
mov
aaa
mov
or
sub
pushf
shr
mov
clc
pusha
cmc
pusha
not
pushf
pushl
not
movb
bt
add
jb
sub
cmc
js
cmc
pusha
and
push
mov
pusha
mov
mov
jmp
add
pusha
mov
lea
jmp
call
movsbl
seto
bswap
mov
call
cmp
pushl
sub
pushf
jmp
pushf
sub
pushf
pushf
pushf
lea
jle
mov
push
lea
pushl
pusha
pushf
pushl
lea
jmp
stc
pusha
cmp
sub
lea
jl
pushf
xchg
pushf
mov
movl
pushf
mov
pushf
push
pushf
pushf
pushl
ret
cmc
cmc
xor
pusha
jmp
lea
jmp
sub
jmp
pushl
popl
movb
pushf
lea
jmp
jmp
bsr
inc
xor
mov
clc
stc
cmp
add
pushf
pusha
pusha
lea
jmp
cmp
mov
xor
call
and
mov
test
cmp
add
push
pushf
mov
mov
mov
mov
lea
jmp
call
rcl
mov
shr
mov
bsf
sar
pusha
add
jmp
pusha
lea
jmp
add
not
mov
cmp
stc
sub
jmp
mov
push
clc
pop
mov
shld
pushl
popf
setle
setae
pushl
lea
mov
xchg
setne
mov
jmp
jmp
cmp
sub
stc
cmc
pusha
shl
jmp
call
lea
je
clc
jne
xor
push
cmp
test
xchg
clc
mov
test
push
add
jno
sub
pushf
lea
jne
call
sub
pusha
clc
jmp
jmp
cmc
stc
sub
push
lea
jne
call
rcl
aam
mov
or
mov
clc
clc
sbb
mov
stc
push
jmp
pushf
push
mov
pushf
pushf
call
xor
bt
xchg
pushl
pusha
pushf
mov
test
sub
movw
push
lea
jne
cmp
stc
push
xor
pushf
mov
call
not
shld
mov
aam
bswap
pushf
mov
bt
xor
mov
pusha
cwtl
mov
xchg
mov
shrd
stc
mov
xor
rol
shl
call
and
ror
xor
mov
bt
pushf
clc
add
pushl
pushf
pushf
mov
lea
jmp
sub
call
mov
movsbl
inc
clc
bswap
ror
test
btc
not
rcr
sub
inc
xor
push
stc
movzbl
clc
jmp
movsbl
rcr
mov
cmp
shl
cmc
shr
pusha
or
push
call
jmp
and
shl
mov
push
call
and
xor
mov
shrd
rcl
add
sbb
xor
call
pushl
popl
pushf
mov
lea
jmp
cmp
call
movb
pushf
pushl
popl
mov
mov
lea
jmp
pushl
popl
pushf
movw
lea
jmp
pushf
pusha
and
mov
mov
pushl
jmp
or
dec
call
movsbw
shld
xchg
bsr
mov
adc
add
pushf
call
clc
bswap
pushf
lea
ja
mov
xor
ror
not
shr
add
sets
mov
mov
call
stc
pushf
bt
shr
pushf
call
inc
add
cltd
rdtsc
call
pushf
pushf
mov
pusha
movw
push
push
lea
jmp
lea
jne
jmp
aas
shrd
stc
mov
test
cmp
stc
sub
push
pushf
cmc
movb
add
movl
pushf
rol
cmp
mov
pusha
test
add
clc
sub
bt
call
mov
pusha
mov
mov
push
lea
jmp
lea
jmp
pushf
popl
jmp
pusha
pushf
cmp
stc
add
call
mov
pushf
pushl
ret
mov
push
pushf
lea
jmp
pushf
pushl
popl
mov
movw
lea
jmp
pusha
sub
bt
clc
push
rol
mov
add
stc
mov
pushl
pushl
sub
mov
movl
mov
pushf
mov
lea
jmp
call
pop
sub
shrd
mov
pusha
add
pushl
push
lea
jmp
jmp
pushf
popl
jmp
test
neg
test
xor
cmc
cbtw
clc
bt
cwtl
jmp
pushl
lea
jmp
pushf
mov
mov
lea
jmp
mov
jmp
dec
not
inc
not
call
xor
bsf
bt
not
cmp
inc
sub
bsf
shl
neg
shl
shr
shrd
rcr
xor
push
movzbl
movb
pusha
pusha
mov
movb
pushl
pushf
inc
push
or
jmp
setae
bt
mov
jmp
rcl
mov
shl
sbb
cmc
mov
pusha
pushf
sub
call
pushf
movsbw
mov
sar
shr
mov
test
mov
jmp
mov
pushf
push
pushf
push
lea
jmp
pushf
mov
mov
pusha
call
call
jmp
not
call
stc
stc
add
pushf
mov
mov
pushf
movl
mov
pushl
ret
push
push
lea
jmp
mov
pusha
push
pushl
ret
sub
push
movb
mov
pushl
mov
pusha
lea
jmp
and
and
mov
cmp
pushf
add
pushl
pushl
lea
jmp
cmp
jp
sub
call
sub
movw
call
call
sbb
adc
mov
inc
test
clc
cmc
mov
call
mov
pushl
push
pushf
mov
movb
mov
movw
lea
jmp
push
lea
jmp
shrd
pushf
pushl
mov
jmp
and
bt
jmp
jmp
pusha
pushf
popl
pushf
movw
lea
jle
popl
push
pusha
lea
jmp
sub
lea
jb
mov
push
push
lea
jmp
push
mov
push
push
mov
pushf
lea
jmp
mov
movb
mov
lea
jmp
pusha
mov
pushl
jmp
sub
jl
add
call
jmp
jmp
mov
pusha
pushl
movw
pusha
pushl
ret
pushf
shrd
seta
sar
lea
sub
mov
jmp
lea
jae
pushf
mov
pushl
pushl
pushf
lea
pusha
lea
jmp
pushf
popl
call
add
movsbw
xor
pusha
movzbl
bswap
shl
shrd
ror
add
pusha
pushf
push
not
dec
bswap
mov
dec
not
pushf
rol
not
sar
add
call
push
mov
call
push
call
mov
movb
mov
pusha
lea
jmp
jmp
jmp
mov
bts
clc
cmp
jmp
lea
jmp
push
movb
mov
pusha
call
jmp
pushf
popl
movl
pushl
popl
pushf
pushf
push
push
lea
jmp
stc
sub
pushf
clc
jmp
aas
bt
dec
call
pushl
popl
mov
mov
pushf
pushl
lea
jmp
cmc
clc
setb
jmp
push
mov
mov
mov
jmp
push
lea
jmp
pusha
add
push
push
pushf
popl
pushl
pushf
jmp
lea
jne
cmp
xorb
jmp
mov
pushf
pushl
jmp
aas
bsr
mov
aad
lahf
sub
mov
movsbw
bt
mov
jmp
pushl
popl
mov
lea
jmp
jmp
push
sub
bt
push
stc
shl
pusha
mov
mov
jmp
push
clc
sub
push
pushf
pushl
push
shr
mov
pusha
mov
movl
push
mov
lea
jb
pushf
pushf
jmp
movb
stc
push
not
cmc
not
cmp
and
pusha
lea
jg
push
pusha
mov
jmp
sub
pusha
clc
cmp
xor
clc
not
clc
rol
clc
pushf
sub
push
cwtl
stc
call
movb
add
movl
mov
call
mov
push
pushf
lea
jmp
jmp
rol
mov
shl
ror
mov
call
call
call
aas
rcl
shl
mov
cmc
clc
cmc
sub
pushf
call
mov
pushl
popl
mov
pushl
lea
jmp
test
movb
clc
add
push
pushf
push
mov
movb
mov
pushl
ret
mov
clc
stc
add
pushf
pushf
lea
jmp
cmp
pushf
lea
jne
dec
pushf
and
inc
xorb
pusha
mov
push
movb
pushl
lea
jmp
lea
ja
pusha
mov
pushf
pushl
pushf
popl
pusha
movw
pushf
jmp
add
push
pushf
jmp
xchg
pushf
pushf
lea
jo
lea
push
movzbl
repz
movzbw
ror
bswap
push
adc
adc
rcr
add
push
ror
mov
push
bts
ror
shld
push
movzbl
push
cmp
jmp
pushl
popl
push
mov
mov
lea
jmp
pusha
jmp
cmc
lea
pushl
clc
push
sbb
mov
cmp
bsr
cmc
not
bswap
neg
movzbw
mov
inc
shl
xor
mov
test
movsbw
movsbw
mov
sub
and
lea
and
sar
mov
dec
mov
xor
add
rcr
rol
sbb
cmc
mov
shl
call
mov
push
pusha
movb
push
mov
pushf
mov
pushf
call
clc
movzbl
rcr
rcl
ror
lea
sete
cmc
jmp
notl
push
aaa
movsbw
mov
mov
jmp
mov
pushf
mov
pushf
pushf
call
jmp
push
rep
ror
adc
ror
mov
movzbw
pop
stc
shr
mov
bt
cmp
test
cmc
pushl
popf
mov
movb
mov
movb
lea
jmp
movb
pushf
pushl
popl
pushl
push
mov
lea
jmp
lahf
cwtl
mov
not
mov
call
pusha
pusha
lea
jnp
mov
pushf
call
mov
pushf
mov
movsbw
pushf
not
mov
jmp
cmc
cmp
shl
rcr
mov
sbb
mov
pushf
pusha
add
jmp
movsbw
xadd
pusha
xchg
sub
sbb
mov
sub
shl
bsf
pop
mov
btr
cmp
pushl
popl
not
bts
movl
stc
shld
mov
rcr
bswap
not
cmc
shl
bt
neg
not
xchg
jmp
lea
jbe
pusha
pushl
popl
pushf
lea
jmp
pusha
push
mov
movb
mov
pushf
pushf
lea
jmp
movb
lea
pushl
jmp
pusha
lea
jmp
sbb
movsbw
adc
rol
mov
push
cmc
add
movb
lea
jmp
jmp
btr
stc
test
adc
mov
test
jmp
mov
clc
sub
pusha
call
clc
bt
btc
setbe
mov
xchg
rcl
mov
sar
sub
rol
stc
mov
pushf
test
cmc
push
add
jmp
push
mov
cmc
shl
movzbw
mov
pushf
clc
stc
test
add
pusha
mov
mov
pushf
mov
pushl
lea
jmp
adc
mov
cmc
pushf
cmp
pushf
sub
test
add
mov
mov
pushf
popl
push
pushf
pushl
popl
pushf
pusha
mov
pushf
lea
jmp
push
decl
mov
push
pushf
lea
jne
pusha
mov
mov
push
pushf
pushf
lea
jmp
jmp
lea
pushf
lea
jmp
call
cmp
call
ror
cmc
bt
not
stc
pushf
bt
rol
mov
call
jmp
jmp
push
pusha
pushl
popl
push
pushl
pushf
lea
jmp
neg
cmp
mov
pushf
mov
jmp
sub
pushf
mov
jmp
call
lahf
cmc
mov
call
pushf
mov
pusha
push
push
movb
lea
jmp
rol
bsf
aas
lea
pusha
cmp
pusha
lea
ja
cwtl
mov
pusha
lea
movzbl
pushf
bsr
lahf
sub
push
aas
lea
test
lea
neg
xor
and
test
clc
sub
movzbw
movzbw
bswap
lea
mov
not
jmp
pushl
pushf
mov
pusha
push
mov
movw
lea
jmp
mov
lea
jmp
pushf
popl
lea
ja
pushf
pushl
popl
pushf
push
pusha
lea
jmp
dec
pushl
mov
call
call
pushf
call
pushl
popl
pushf
add
pushf
clc
movb
pushl
popf
pushf
pusha
lea
jmp
pushf
stc
test
shrd
mov
pushf
or
mov
test
jmp
bswap
push
mov
push
add
pushl
lea
jmp
jmp
mov
pushl
push
lea
jmp
and
pushf
cmp
pusha
pushf
mov
call
movb
pusha
lea
jmp
sub
bts
mov
pusha
add
call
pushf
pop
not
pusha
mov
pusha
jmp
clc
sub
xor
lea
inc
movzbl
inc
lea
rcl
bts
add
mov
cmc
call
cmp
sub
mov
cmc
pusha
mul
mov
pushf
jmp
mov
pusha
pushf
pusha
push
lea
jmp
pushf
pushf
push
xchg
pushf
call
lea
jmp
clc
ror
xor
ror
test
not
xor
add
movsbl
sub
sar
movzbl
lea
jle
shld
btc
sub
lea
rcr
shrd
mov
cmp
pushf
test
bswap
test
cmp
clc
pushf
add
jmp
jmp
pushf
popl
pushf
call
mov
push
movb
pushf
popl
pusha
jmp
call
push
call
bts
shr
lea
adc
and
and
pushf
mov
test
stc
stc
jmp
pusha
clc
add
pushf
movb
lea
jmp
call
sub
cmc
movb
shl
call
pusha
call
stc
sub
stc
pusha
and
pushf
jmp
pushf
push
pushf
popl
call
mov
jmp
cmc
add
pusha
mov
pushf
lea
jmp
and
pusha
mov
movw
pushf
mov
jmp
btr
btr
not
pushf
ror
movsbw
rol
shl
bt
adc
xor
add
cmp
mov
stc
cmp
add
mov
call
push
movw
pushl
popl
movw
mov
movl
movw
lea
jmp
mov
mov
mov
mov
mov
mov
lea
jmp
call
pushf
pushl
jmp
neg
not
inc
pusha
inc
movsbl
test
not
and
shl
mov
clc
test
cmp
sub
pusha
mov
mov
push
lea
jmp
lea
jne
mov
call
mov
pushf
popl
jmp
mov
push
pushl
ret
pushl
popl
mov
push
lea
jmp
movzbw
mov
stc
cmp
cmc
sub
push
mov
pushf
pusha
pushf
lea
jmp
stc
not
mov
movb
stc
rol
stc
bt
cmp
stc
sub
jmp
pushl
popl
mov
lea
jmp
call
push
movb
pushl
popl
movb
pusha
lea
jmp
pushf
popl
call
pushf
pushf
lea
jmp
mov
clc
cmp
bt
bswap
pushf
add
jmp
adc
cmc
rcl
mov
push
shl
cmp
cmp
mov
cmp
call
pushf
popl
pusha
pushl
popl
mov
pushf
pushf
lea
jmp
call
mov
pushf
lea
jmp
pusha
pushf
movl
jmp
inc
xor
stc
mov
neg
rcr
mov
clc
clc
add
pushf
call
call
mov
inc
mov
or
btr
btc
neg
bswap
push
call
jmp
mov
call
mov
cmc
sub
call
clc
shl
mov
test
stc
test
mov
cmc
jmp
jmp
repz
ror
pushf
sub
xchg
sub
push
or
bswap
push
inc
bts
shld
push
and
sar
shrd
push
shr
pushf
push
xor
pushl
popl
xor
bts
movl
push
mov
cmp
xor
sar
shrd
not
clc
neg
inc
inc
push
lea
bsr
or
btr
sub
bswap
xadd
not
pusha
lea
bts
mov
bsf
pop
and
add
pushf
xor
bsf
mov
lea
clc
sub
movzbl
bswap
setno
push
inc
jmp
pusha
add
movzbl
cmp
xor
stc
pusha
stc
not
clc
test
bt
bt
sub
test
movb
lea
cmp
lea
jge
neg
cmp
xor
jmp
push
pushf
popl
movl
pushl
popl
push
mov
pushl
lea
jmp
sub
sub
jns
bt
xor
pusha
not
pusha
cmc
pushl
rol
pushf
test
sub
clc
sub
pushf
pushf
call
mov
pusha
pushf
mov
movw
lea
jmp
sub
mov
jmp
bsf
jge
mov
adc
and
mov
call
call
lea
pushl
jmp
pusha
lea
pushf
mov
lea
jmp
push
mov
jmp
bsr
sar
neg
lahf
mov
cmp
bt
add
pushf
movb
mov
mov
jmp
jmp
mov
push
lea
jmp
lea
jne
bts
sbb
cmc
xorb
setge
movzbl
pusha
mov
mov
lea
jmp
movb
pushf
popl
jmp
mov
pop
std
pushf
mov
pushf
cld
pusha
call
push
lea
jl
mov
push
pusha
pushf
lea
jmp
add
fildl
pop
mov
popf
add
pop
add
jmp
pop
xchg
jl
pop
mov
add
adc
pop
subb
mov
add
jo
pop
xchg
pop
mov
add
call
add
jge
pop
addl
mov
outsb
add
testb
jle
add
movsl
add
pop
add
adc
pop
mov
mov
pop
jge
add
cwtl
add
jmp
add
xor
pop
movsb
push
add
xor
pop
jle
add
and
pop
mov
sbbb
pop
pushf
test
pop
subb
xchg
jns
pop
lea
add
sbb
pop
xchg
rolb
andl
stos
add
call
add
addl
xchg
and
pop
cmpl
add
mov
add
xor
pop
cmp
pop
mov
add
cmp
pop
xchg
add
xor
add
push
add
lea
pop
mov
call
add
inc
add
xor
add
xor
add
push
add
rolb
pop
jle
add
pusha
add
rolb
pop
subb
mov
add
jo
pop
jle
add
pop
add
jge
pop
jg
add
call
add
jmp
pop
jg
add
stos
add
xor
add
mov
pop
jg
add
test
add
push
add
scas
add
lea
pop
jle
add
push
add
test
add
jl
pop
mov
add
mov
pop
mov
add
jns
pop
xchg
incl
pop
xchg
jo
pop
mov
add
mov
pop
adc
pop
xchg
jl
pop
xchg
jl
pop
cmpl
add
xor
add
insl
add
inc
add
lea
pop
pushf
loope
pop
mov
add
pop
add
inc
add
cli
add
mov
pop
test
add
and
pop
xchg
pop
subb
test
add
jmp
pop
test
pop
test
add
aaa
add
jns
pop
mov
add
testb
xchg
adc
pop
andl
popl
pop
test
add
xor
add
mov
add
incl
pop
mov
popl
pop
test
add
push
add
mov
pop
test
add
add
mov
add
testb
mov
add
loope
pop
test
add
xor
add
mov
pop
test
add
aaa
add
add
popf
add
testb
mov
add
popf
add
testb
test
add
xor
pop
test
add
aaa
add
test
add
testb
mov
add
loope
pop
test
add
ltr
rolb
mov
test
pop
mov
add
fildl
pop
cmpl
add
cmp
pop
mov
cwtl
add
aaa
add
add
pop
mov
adc
pop
mov
add
fildl
pop
mov
aaa
add
cwtl
add
fildl
pop
mov
jle
add
pusha
add
fildl
pop
xchg
jl
pop
xchg
rolb
xchg
pop
mov
cmp
pop
lea
add
fildl
pop
xchg
aaa
add
pop
add
rolb
mov
ltr
adc
pop
pushf
aaa
add
fildl
pop
xchg
incl
pop
adc
pop
adcl
mov
push
add
push
pop
mov
fildl
pop
cmp
pop
orl
pop
mov
imul
xchg
insl
add
rolb
pop
mov
call
add
test
jl
fs
jmp
pusha
pusha
jmp
cmc
ror
rol
mov
rol
sbb
btc
mov
bt
pusha
stc
bt
add
pushf
movl
mov
pusha
movb
push
pushf
lea
jmp
bt
call
xor
pusha
mov
cmp
movw
pushf
add
pusha
lea
jmp
shl
jmp
mov
pushf
pushl
popl
mov
push
lea
jmp
mov
lea
jmp
pushf
push
call
movsbw
bswap
rol
push
mov
stc
call
xchg
mov
call
mov
cmp
mov
push
clc
xor
test
clc
bt
not
mov
sub
pushf
jmp
pusha
pushl
mov
movb
mov
mov
pushf
movb
pushf
lea
jmp
lea
jne
shld
shld
bsf
mov
stc
pusha
call
pusha
pushl
popl
movb
movb
lea
jmp
bsr
lahf
aam
sar
mov
shl
inc
mov
mov
pusha
call
bt
btr
not
or
pushf
sub
test
shld
movzbl
shld
add
pusha
lea
bts
mov
pushf
pushf
clc
bswap
jmp
push
call
pushl
popl
push
pushf
lea
jmp
movsbl
bswap
setnp
push
movzbw
pusha
movsbl
movzbw
mov
pushl
pushf
mov
pushf
lea
cpuid
call
movl
neg
test
pushf
pushl
bt
xor
bt
sub
pusha
jmp
mov
mov
pushf
lea
call
cmc
pushf
movb
add
stc
clc
cmc
cmc
sub
push
mov
push
pushl
pushl
lea
jmp
bswap
setno
mov
pusha
mov
jmp
lea
jmp
add
pushf
pushf
mov
pushf
pushf
pushl
pushl
ret
pushl
popl
push
push
movb
lea
jmp
pusha
mov
pusha
bswap
mov
pushf
divl
movb
jmp
movzbw
push
movzbw
je
repz
cmp
push
shld
xor
shl
sub
push
sar
push
bsr
rcl
movsbw
push
bsr
movzbl
bswap
rcl
push
not
neg
or
pushl
clc
btr
ror
lea
push
bsr
movsbw
rcr
movsbl
mov
dec
push
not
xchg
shl
neg
xchg
not
inc
test
adc
xchg
lea
dec
clc
pop
sub
shl
mov
cmc
bts
mov
cmp
sub
bts
mov
add
neg
mov
not
rcr
sub
movsbl
inc
ror
pushf
rcr
ror
ror
sub
or
lea
jne
not
cmp
btc
btr
cmp
sub
call
setnp
mov
push
lea
push
pusha
mov
movw
mov
mov
pushf
lea
jmp
pusha
jmp
mov
pushf
push
push
pushl
ret
call
lea
jmp
lea
jne
push
movw
pushf
popl
call
call
shld
ror
mov
jmp
pushf
movb
mov
pushf
mov
pusha
lea
jmp
xor
mov
pushf
inc
push
jmp
push
pushf
popl
call
movsbw
mov
not
inc
push
push
add
pushl
mov
mov
jmp
shrd
mov
cmp
sub
movsbw
inc
mov
rol
bswap
ror
rcr
not
and
pop
sub
clc
shr
pop
movzbl
shrd
sub
stc
pusha
lea
bswap
shr
jmp
pusha
call
push
jmp
pusha
mov
pushf
call
mov
pusha
pushf
popl
pusha
call
movsbw
pusha
pushf
popl
pop
lea
pop
pushf
xchg
bswap
push
jmp
clc
bswap
mov
clc
add
call
pusha
pusha
pushl
pushf
popl
push
call
mov
lea
jg
mov
jmp
xchg
rcr
xchg
call
lea
jne
shld
shrd
sar
mov
call
add
add
mov
mov
pushf
lea
jmp
clc
mov
call
jmp
mov
inc
movb
movb
lea
jmp
xchg
pusha
movl
jmp
shr
call
movsbw
inc
shr
shld
lea
shr
inc
push
clc
sub
add
bt
pushf
add
jb
mov
bsf
mov
cmc
shrd
add
setns
bsf
inc
pushf
mov
pushf
cmp
rcr
sub
movsbw
push
inc
pop
pop
ror
sets
lea
cmc
not
jmp
pushf
mov
movsbw
sets
mov
pusha
call
call
add
shl
pusha
stc
mov
ror
mov
call
shld
movl
jmp
pushf
call
pushl
popl
pushf
movw
push
movb
lea
jmp
push
call
clc
push
and
test
jmp
adc
ror
mov
clc
stc
call
mov
test
bswap
cmp
jmp
mov
jmp
pusha
pushf
push
lea
jmp
cmpl
lea
jl
pushf
push
mov
mov
mov
pusha
push
mov
mov
mov
mov
push
mov
call
jmp
add
movb
pusha
inc
jmp
jns
push
mov
pusha
jmp
pushf
popl
push
pusha
call
pushl
jmp
pushf
mov
push
pushf
push
pushf
lea
jmp
jmp
mov
push
pushl
pushl
ret
pusha
jmp
pushf
jmp
pushf
mov
pushf
lea
jmp
rol
mov
rcl
xor
add
pushf
mov
rcr
movzbw
ror
movsbw
pusha
pusha
inc
inc
jmp
pushl
popl
pushf
movl
movb
movb
lea
jmp
jmp
mov
pusha
push
lea
jmp
call
daa
aas
cwtl
aam
mov
pushf
pusha
mov
mov
add
pushf
pushf
popl
pusha
call
mov
call
call
pushf
lea
jmp
pusha
lea
jmp
movl
repz
popl
bsf
jmp
pushf
sub
pushf
pusha
div
jmp
pushl
mov
jmp
mov
pushf
push
lea
jmp
movl
pushf
push
pusha
mov
pushf
push
mov
movb
pushl
ret
pusha
pushf
pushl
popl
pushf
pushf
movw
lea
jmp
stc
add
bt
jmp
call
movsbw
lea
mov
movb
movb
mov
pushl
ret
inc
btr
rcr
shl
xor
and
btc
shl
shr
shl
mov
stc
clc
pusha
cmp
add
call
cmp
cmp
movb
call
push
pusha
pushl
pushf
popl
call
pushf
jmp
