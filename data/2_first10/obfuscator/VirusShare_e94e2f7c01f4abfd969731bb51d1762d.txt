jg
xor
sub
sub
jle
push
mov
sub
fcomps
sbb
stc
data16
mov
push
jecxz
lret
lods
or
insb
cmp
jl
test
rcrl
adc
ret
les
xchg
mov
int3
iret
jb
mulb
aad
mov
call
fdivrl
and
in
cmpsl
pushl
push
mov
ret
push
je
xchg
les
add
stos
xor
mov
les
orb
pop
fcomp
push
lahf
out
inc
les
push
cmp
pop
ret
xor
jns
scas
pop
add
loope
fstl
ljmp
js
adc
mov
dec
pop
push
fisubrl
mov
out
inc
inc
lods
cmp
lcall
jb
xchg
aad
xlat
cmc
stc
xchg
out
and
xchg
sub
das
xor
pop
ljmp
lock
hlt
inc
or
adc
loop
push
pop
pop
call
rclb
out
mov
div
je
jbe
lcall
orb
jb
dec
out
lret
and
test
mov
pop
jb
hlt
mov
rolb
mov
mov
pusha
es
or
stc
cmp
jno
in
add
into
pop
xor
sahf
and
leave
mov
fdivrl
out
mov
int
adc
test
push
jle
sbb
sbb
ss
push
xor
icebp
mov
ds
cmp
inc
sub
dec
lahf
pop
push
idivb
mov
call
daa
lret
and
add
test
cwtl
test
cmp
aaa
scas
dec
sti
push
sub
in
cmpl
aaa
mov
shll
aaa
scas
jae
mov
aad
outsb
scas
int
out
cs
and
shlb
lret
jb
jmp
jmp
add
mov
mov
or
sub
shrl
dec
imul
ret
pop
pop
jecxz
into
xchg
iret
fidivrs
iret
arpl
inc
stos
jno
arpl
adc
push
pop
lret
je
inc
xchg
sbb
jmp
js
mov
xor
jo
repnz
jp
push
imul
adc
aas
or
cmp
jge
or
scas
lret
cmp
pop
iret
pop
scas
in
popf
lcall
and
push
subl
sbb
fdivrp
mov
cmpsl
mov
adc
and
pushf
sbb
dec
add
cmp
inc
lock
lret
dec
sbbl
sti
and
pop
jae
xchg
adc
fs
je
sub
xlat
add
outsl
jnp
cwtl
cmpsb
scas
mov
pushf
cmp
mov
ljmp
bound
pop
addr16
dec
and
call
add
mov
sub
sub
sarl
cld
sub
inc
sarb
xchg
lret
ds
repz
xor
mov
inc
enter
xchg
outsl
fldl2t
cmp
lahf
mov
out
or
test
sbb
aas
dec
cmpl
xchg
addb
sti
mov
iret
mov
inc
sub
add
lods
js
sub
fnstenv
ds
cmp
or
pop
jl
cmc
adc
mov
mov
out
movsl
ljmp
push
cmp
popf
bound
jl,pn
sbb
popa
and
mov
fiaddl
scas
cmp
lret
ja
xchg
xor
leave
xchg
inc
jno
sub
jns
mov
out
fisubl
jae
push
pop
pop
push
std
inc
insl
in
sahf
adc
jp
gs
ljmp
adc
pop
inc
push
fcomip
jge
mov
iret
jg
inc
sbb
cs
shr
iret
scas
lods
push
fdivl
pop
ja,pt
sbb
arpl
mov
xlat
loopne
ficompl
push
sub
cwtl
jo
pop
jge
fisttpl
leave
xor
cmp
add
xchg
add
sahf
repz
rcr
lock
sarl
std
pop
fsts
cmp
lahf
fidivs
incl
call
xor
in
test
call
frstor
and
push
sub
insl
aas
mov
sbb
or
jne
pop
insb
addl
fcoms
and
lret
cmp
xor
adc
dec
or
pusha
inc
das
shl
outsl
push
sbb
fsubrl
arpl
mov
out
pop
fidivl
sub
and
xchg
insb
jnp
lret
add
out
nop
sub
pop
std
xor
mov
cltd
repnz
mov
test
out
push
pop
mov
mov
repnz
loope
icebp
xor
add
jo
push
push
xchg
jns
fidivs
mov
add
sbb
lahf
rcl
fistps
das
outsl
iret
push
dec
popf
push
mov
rcll
mov
pop
adc
sbb
mov
aam
xchg
lods
gs
xor
sbb
push
jbe
or
pop
imul
and
scas
xlat
cmp
lds
movb
cmc
push
jl
push
xor
sub
mov
xor
mov
cmp
xchg
mov
push
push
int3
mov
js
mov
jmp
lds
nop
push
out
enter
incl
gs
adcb
test
mov
push
inc
repz
popf
adc
dec
or
ljmp
adc
addl
pop
addr16
psubusw
into
sbb
jae
mov
push
ljmp
pop
insb
sbb
movsl
hlt
and
cltd
inc
sahf
xchg
inc
mov
pop
int
pusha
push
mov
test
pop
adc
xor
shlb
sbb
fildl
in
mov
xor
pop
dec
call
hlt
loopne
pop
rcr
cmp
adc
push
xor
addr16
movsl
or
scas
in
dec
sbb
fsubrs
lea
xor
leave
pop
lock
int
lcall
add
xor
int3
ds
jl
insb
push
mov
add
push
sbb
xchg
push
sub
cltd
mov
mov
push
xchg
lcall
cmpsl
xor
scas
xchg
imul
xor
inc
cmp
sub
dec
pop
in
jns
and
push
jg
xor
out
aad
xlat
rorb
mov
and
sar
pop
push
js
jo
addb
pop
ljmp
adc
xchg
lds
jae
mov
add
icebp
jle
fadds
insb
inc
in
pop
cmp
jl,pn
stos
pop
push
dec
aas
subl
mov
in
mov
cli
and
and
popa
mov
inc
cmp
inc
dec
cmp
dec
jne
mov
je
mov
cmpsb
jnp
or
addb
pushf
jb
mov
clc
shlb
cmpsb
mov
je
out
lds
xor
jns
adc
cmpsb
pop
push
adc
adc
imull
adc
sarl
neg
std
add
mov
cmp
leave
imul
dec
push
pop
das
and
jae
dec
cmp
inc
adcb
adc
pop
jle
outsl
xchg
and
mov
out
test
push
subb
adc
xchg
cli
sub
in
fmulp
push
and
std
jecxz
imul
arpl
xor
test
int3
out
cwtl
fdivp
pcmpgtb
enter
das
cli
mov
xlat
fs
loopne
enter
lcall
mov
mov
sbb
lret
cwtl
add
xor
sbb
jge
arpl
jg
not
mov
cmc
lods
enter
dec
xchg
imul
lods
jne
adcl
repnz
push
xor
add
fisttpl
aaa
mov
aaa
jmp
mov
call
scas
add
inc
shlb
stc
adc
daa
out
and
adc
rcr
mov
fwait
ss
sub
addr16
adc
xchg
xchg
sarb
push
pop
pop
sub
xchg
push
insl
mov
inc
repnz
ljmp
fcoml
outsl
ss
pop
or
pop
stos
test
pop
adc
ret
adc
fsubrs
cmp
mov
xor
leave
adc
movsl
cmpsb
ljmp
out
mov
insb
sub
lods
adc
rcrb
das
adc
xor
sub
or
jmp
mov
adc
popf
out
sub
xor
mov
xchg
test
call
outsl
jno
imull
cltd
fdivrp
mov
sarl
push
adc
aaa
aaa
cmp
and
xor
aas
int
adc
add
sbb
xchg
loopne
add
sub
ljmp
mov
pop
adc
add
cmp
lds
xor
push
int3
push
mov
imul
mov
jl
sub
inc
inc
push
push
popa
aad
push
dec
or
mov
pop
call
inc
push
cmpsl
push
lock
repz
stos
movsb
loopne
inc
rorl
and
push
int
mov
fnstcw
mov
push
push
jbe
into
das
or
push
sbb
jo
enter
ja
stc
xor
sti
adc
dec
xchg
movb
dec
shll
mov
jno
cs
fdivr
repnz
dec
testb
push
inc
out
scas
ret
outsb
and
fldt
je
lret
fsub
push
lods
mov
push
cmp
or
inc
int
cmpl
xchg
les
movsl
repnz
movsb
mov
and
cltd
loope
cmc
jecxz
int3
into
push
dec
movsl
jno
fcomps
into
push
pop
mov
mov
pop
inc
jmp
gs
insl
int
xor
xchg
addr16
adc
mov
mov
cmp
jmp
outsb
adc
insl
fsubrp
xor
and
lods
movsb
mov
out
icebp
xlat
mov
popf
test
sti
adc
mov
push
dec
and
jo
cmp
jo
dec
sbb
fsts
add
jmp
outsl
loop
lretw
cltd
fbstp
int
pop
movsb
jno
add
nop
stc
ja
loopne
imul
pop
jnp
mov
mov
mov
pop
arpl
or
loop
lea
nop
sbb
les
icebp
inc
dec
push
roll
inc
movsl
icebp
roll
or
dec
jns
pop
dec
mov
add
mov
dec
jbe
adc
das
and
in
fcoml
push
cwtl
pop
ds
stos
cli
hlt
push
mov
std
jl
jp
jns
pop
mov
call
notl
cmc
push
orb
lahf
xchg
lcall
add
pop
imul
testl
inc
shl
inc
fs
mov
lret
test
bound
shlb
bound
scas
data16
or
repnz
mov
je
or
mov
mov
push
push
sub
cmp
cs
rcrl
ret
aam
mov
subb
popa
jl
push
insl
pop
loop
fdivl
mov
or
mov
push
repnz
mov
and
in
stos
inc
shlb
dec
dec
mov
gs
sub
dec
push
cmpsl
in
inc
data16
pop
jp
cwtl
cld
movsb
fisttpll
je
or
insb
add
sub
dec
push
dec
lea
push
ja
jo
cmp
push
xchg
loop
gs
mov
movsl
add
cmpsl
inc
or
rcrb
sbb
push
xchg
xor
sub
sarb
mov
adc
xchg
mov
xchg
pop
inc
sti
cmpsl
outsb
push
jp
mov
in
jns
push
enter
xor
jae
insb
insl
dec
or
dec
insl
mov
js
mov
lret
mov
xlat
cmp
sub
dec
fcmove
aas
jmp
stos
pop
popf
in
xor
mov
or
pushf
dec
and
xor
popf
pop
cli
rorl
dec
test
lcall
adc
add
xor
push
add
lds
fs
ljmp
mov
pushf
nop
jecxz
out
pop
aad
dec
or
imul
clc
mov
testb
or
mov
cli
insl
xchg
out
repz
pop
and
gs
and
add
mov
shll
es
fimull
and
pop
inc
in
repnz
lahf
daa
jbe
ds
xchg
gs
jb
ret
in
mov
pusha
es
movsb
jo
and
ret
sub
push
sub
out
int3
push
js
xchg
cmpsb
dec
and
repz
inc
jne
push
dec
leave
outsb
mov
mov
sub
and
inc
call
fsts
out
in
xor
pop
stc
loope
cmp
sti
push
xlat
lret
andl
adc
mov
ret
add
std
leave
add
in
xor
jl
daa
lods
mov
dec
push
ret
out
push
dec
xchg
dec
fbstp
jno
ljmp
and
add
repnz
popf
outsl
mov
jmp
add
test
mov
into
push
scas
je
fnstsw
insl
push
out
pop
fld
repz
push
jnp
adc
shr
mov
lea
sub
ja
dec
enter
jge
and
movsb
push
lret
inc
sahf
cmp
xchg
add
mov
or
dec
rcr
and
aas
scas
xorb
add
popa
movsb
testb
or
pop
fnstenv
jecxz
adc
and
insl
fsubl
push
movswl
popa
mov
inc
jmp
mov
out
fmull
in
add
test
in
inc
out
sub
ror
pop
icebp
leave
aaa
andl
pop
mov
cmp
insl
mov
cmp
xchg
rclb
jle
sub
sbb
cmp
mov
push
mov
jo
xlat
add
cltd
adc
add
out
jne
dec
lds
push
stos
and
add
aaa
sarb
popf
jecxz
jl
adc
fidivrl
jle
in
and
rcl
push
pop
loope
bound
out
sub
js
ss
rcrl
mov
in
jbe
out
mov
stos
movsl
xchg
imul
mov
and
pop
insl
fwait
xchg
pop
inc
aaa
cmc
mov
cmovne
lock
dec
add
lea
mov
cli
inc
jg
xchg
fcmovu
incl
jne
movsl
insl
pop
push
push
idivb
pushf
add
ret
in
jmp
hlt
stos
and
lret
jo
lods
mov
nop
cmc
clc
mov
out
ljmp
cli
xchg
xchg
jb
fs
mov
pop
insl
mov
lods
imul
insl
jle
clc
mov
jne
dec
xchg
out
mov
repnz
fadd
andb
lods
pop
wrmsr
and
sub
loopne
xor
or
ljmp
insb
cmp
cmp
stc
dec
fcomps
jno
xchg
rclb
gs
mov
lods
dec
push
mov
adc
jb
scas
jg
lret
addr16
ds
and
mov
mov
lods
mov
or
repnz
jno
dec
jae
add
sub
dec
push
icebp
xchg
push
inc
inc
add
ljmp
je
pop
rcrl
shlb
ret
mov
in
imul
fimuls
daa
sti
hlt
lea
arpl
adc
pop
xchg
mov
add
imul
shlb
outsl
out
ljmp
fidivrl
enter
ljmp
hlt
adc
lahf
js
mov
jmp
pop
lods
mov
jo
pusha
setl
repnz
int3
fsts
aam
push
inc
pusha
ret
pop
in
into
xchg
scas
pusha
dec
mov
sub
mov
into
xor
and
add
jge
call
subl
lea
stc
fidivrl
lods
adc
pop
arpl
test
jnp
pop
adc
pop
leave
sub
in
inc
lahf
in
cmpl
sahf
mov
insb
jo
push
add
in
jle
mov
nop
adc
loop
push
popa
xor
sbb
or
out
pop
es
fucomip
cltd
mov
mul
sti
pop
dec
inc
push
jmp
add
das
or
mov
mov
mov
sbb
mull
dec
xor
test
push
call
push
jl
mov
sub
icebp
jae
lahf
cwtl
fwait
popa
cmp
dec
cwtl
mov
aad
notb
mov
cmpsl
ret
and
stos
jbe
dec
add
in
pop
jmp
add
insb
fnstcw
push
cmpsb
insl
imul
adc
push
jle
dec
ds
movsl
lds
or
fisubl
shrb
pushf
mov
ljmp
filds
mov
aad
xor
push
shlb
movsb
jmp
stc
sbb
outsb
mov
or
fisttps
out
stos
lret
fildll
add
bnd
pop
hlt
mov
pop
jmp
mov
mov
lds
lods
into
inc
or
stos
or
dec
popa
add
fadds
push
lahf
mov
and
int3
cmc
mov
and
jle
fdivrs
mov
dec
fwait
int3
sahf
ds
out
mov
push
xor
sarl
push
cmp
aad
inc
pop
xlat
fldenv
or
adc
sarb
mov
lea
fsubrs
daa
dec
cmpsb
test
loop
mov
stos
cmp
les
xchg
lods
ljmp
jp
fsub
int
and
and
dec
cmp
fildl
das
xor
nop
call
xchg
ret
setp
xchg
jne
xchg
or
inc
and
mov
gs
push
cli
sar
inc
add
iret
sbbl
decb
call
adc
mov
pop
cwtl
aas
jnp
test
mov
out
mov
push
frstor
mov
dec
adcb
clc
fs
and
mov
pusha
lock
sbb
repnz
xchg
fldenv
pop
adc
xor
call
es
stc
adc
cmpxchg
and
jb
hlt
cmp
insb
aam
insl
sub
repnz
add
fsubl
mov
jb
mov
ljmp
insl
inc
ljmp
cld
push
fldl
ljmp
roll
push
sub
mov
xor
mov
shl
leave
gs
cmp
sti
push
fmuls
dec
insb
mov
popf
sub
sub
adc
jp
inc
subb
cmp
cmp
cli
popf
dec
in
or
cwtl
mov
leave
and
adc
add
and
jl
ljmp
or
out
testb
in
ljmp
cmpsb
dec
ficoml
mov
fisubrl
adc
out
cmp
daa
int3
ss
out
pop
inc
or
mov
shl
fs
int3
cli
inc
shrl
dec
imul
mov
jb
push
inc
push
mov
call
xlat
out
adc
pop
jge
jl
jl
xchg
xor
ret
xor
out
adc
outsl
mov
cs
cld
rorb
shlb
fbld
movsb
out
dec
hlt
fisttps
in
push
in
fbstp
outsb
sbb
popa
mov
std
imul
sub
imul
jmp
sub
dec
add
add
jns
sub
mov
jns
stc
xor
mov
adc
movsl
fucomi
push
and
jnp
sub
fdivl
mov
inc
fidivs
inc
clc
fsubl
popf
pop
fisttpl
lods
pop
xor
mov
jns
inc
lods
loope
das
sub
jle
dec
ja
testl
mov
loope
aas
xchg
sub
jo
mov
in
ret
sti
fmuls
mov
mov
cs
xchg
outsl
sub
mov
mov
cmp
jmp
cld
shlb
add
and
inc
push
or
push
pop
push
repnz
add
test
xchg
pop
or
sub
adc
out
xchg
negb
in
sbb
hlt
movsb
jne
mov
and
jg
lock
rcr
mov
leave
dec
inc
addl
ja
lret
push
negb
pop
jo
jge
push
repnz
xor
sbbb
idiv
xchg
adc
xchg
mov
pop
adc
stos
repz
sub
fcmovnbe
cs
add
popa
mov
xchg
outsl
jecxz
push
fdivrp
cmp
daa
nop
xor
sbb
scas
mov
mov
push
pop
adc
push
imul
aam
or
lret
or
inc
int3
and
inc
inc
cli
in
stos
pop
xchg
mov
push
insl
mov
loopne
dec
jbe
out
fildl
sahf
adc
jbe
xchg
popa
and
dec
mov
stos
rolb
jle
fsubs
mov
lods
adc
dec
in
loop
jmp
xchg
dec
lds
insb
pop
mov
mov
sub
dec
cmp
cltd
xchg
lret
pop
lods
mov
dec
mov
test
insb
mov
sti
shlb
je
adc
adc
push
fwait
int3
and
jg
sbb
jp
jg
out
fidivrl
xchg
mov
sub
add
ss
mov
xchg
and
jns
jecxz
insb
ds
jae
sbb
dec
shr
divb
jae
hlt
xchg
cmpsl
sahf
jecxz
or
mov
scas
jnp
aas
pop
js
mov
inc
xchg
mov
adc
mov
test
ss
adc
jecxz
fs
rorb
test
clc
dec
orb
iret
mov
jp
inc
mov
jle
out
and
je
and
pop
xchg
pop
cmp
mov
push
jle
cmp
out
pop
outsb
push
iret
ljmp
jmp
or
adc
jae
jp
xor
dec
lea
call
xchg
imul
cmc
loopne
jnp
sbb
jo
mov
mov
repz
lret
push
outsl
jae
icebp
xchg
scas
push
in
vmulps
orl
sbb
cld
mov
enter
cmp
lret
mov
test
xchg
fidivrl
xchg
shlb
fmuls
stc
pop
push
jl
lret
xchg
push
mov
je
mov
int
jb
gs
sub
leave
je
xor
mov
push
arpl
or
push
sbb
popf
pop
or
loop
cmc
mov
mov
mov
inc
fidivl
inc
push
repnz
cmp
loope
scas
repz
xchg
xchg
iret
lods
xor
ret
xchg
out
dec
cmp
lret
insl
out
cs
inc
loopne
cmpb
or
mov
xchg
test
mov
jle
scas
cs
shrl
lock
xchg
mov
cmpl
aas
movsl
adc
push
and
scas
fnsave
pop
mov
dec
jb
jmp
sti
pushf
gs
add
in
xor
push
push
pop
sbb
hlt
in
cli
sbb
mov
and
and
push
adc
pop
xchg
cli
les
mov
aas
jle
adc
cmpsb
into
out
bound
pop
outsl
push
xchg
cmp
jns
lock
xchg
sahf
fstpl
cmp
frstor
sahf
adc
iret
or
arpl
mov
rcll
cmpsl
mov
and
jmp
out
pop
int
jb
sbb
daa
xchg
insb
cmp
mov
ds
push
dec
jnp
cmpsl
or
call
in
test
sub
inc
rorb
add
push
push
ja
push
mov
stos
das
aaa
and
daa
push
dec
inc
pop
pop
aad
aaa
ja
iret
orl
outsb
pop
jne
aam
xor
push
dec
jnp
fs
mov
dec
cld
loopne
sbb
loopne
sub
lret
in
adc
sub
leave
jnp
xchg
push
lret
stos
jg
sub
fisttpl
js
mov
jne
shll
div
mov
scas
sub
mov
mov
xor
cltd
fdiv
out
fdiv
xchg
dec
stc
iret
stos
inc
out
cmp
inc
or
mov
push
loopne
into
mov
decb
xor
mov
std
ss
mov
push
dec
or
xor
out
mov
mov
out
mov
loop
outsl
xlat
xchg
push
pop
out
cltd
mov
mov
pop
outsl
xlat
sub
leave
push
mov
jmp
repnz
push
loope
mov
push
insb
inc
dec
sbb
mov
scas
xor
ja
pop
cltd
mov
scas
dec
aad
push
ss
insl
mov
imul
add
jae
rol
push
push
jg
leave
sbb
mov
orl
add
inc
stos
jnp
pop
pusha
fs
loopne
inc
sub
jae
mov
cmpsb
data16
hlt
pop
stc
pop
loopne
jg
fsubs
xor
aaa
inc
idivl
xchg
jecxz
jp
out
pop
mov
push
lock
adc
or
imul
ss
ret
adc
mull
cli
xchg
cmp
out
sahf
xlat
jmp
or
pop
jmp
data16
scas
scas
bound
inc
lods
xor
ljmp
arpl
adc
mov
sahf
jmp
test
addr16
or
and
rorb
sahf
pop
loopne
pop
sbb
outsb
mov
push
cmpsl
mov
pop
popa
outsl
mov
iret
or
out
jns
dec
xchg
push
in
adc
outsl
push
lahf
jno
sub
pop
cmp
xor
out
mov
cli
cmc
movsb
jp
push
std
jle
loopne
sahf
mov
repnz
daa
cmp
pop
pop
inc
subl
inc
movsl
mov
shrd
orl
hlt
lock
pop
daa
push
pop
mov
mov
mov
stos
xchg
out
adc
push
add
fiaddl
cmp
xor
xor
push
aaa
mov
gs
jmp
fs
movsb
mov
add
movsb
mov
jnp
fildll
test
test
shrb
dec
cmpsb
jbe
xor
jp
sub
lcall
cmpsl
push
loope
ret
push
loop
cmp
pop
jno
xchg
dec
cwtl
je
ret
lock
imul
frstor
fwait
sub
xorl
shlb
sbb
insb
pushf
iret
add
mov
jne
xchg
mov
push
jb
push
mov
and
das
les
dec
mov
std
pop
pop
inc
jbe
push
scas
lock
subb
aam
lcall
mov
sub
push
xchg
inc
popf
cmp
jl
mov
adc
cmp
cmc
loop
test
fistpll
xor
sbb
js
add
sbb
dec
jo
daa
xchg
aad
inc
and
cld
inc
repnz
dec
mov
std
dec
pop
sub
dec
mov
pushl
mov
mov
mov
dec
mov
pop
jne
inc
push
pushf
push
pushf
dec
jns
add
shll
loop
inc
push
fstps
pusha
daa
loopne
aaa
in
push
or
jo
sbb
idivb
sbb
and
outsl
out
mov
popf
pop
roll
mov
and
ret
lea
sbb
sub
inc
push
cltd
pop
jmp
sbb
lahf
sbb
cmpsb
jo
sbb
jl
aas
dec
into
sub
faddl
inc
sahf
int3
pop
pop
stos
push
push
je
movsl
std
in
js
call
loope
mov
pop
ret
xor
dec
not
mov
popf
rcl
les
repnz
jp
jnp
sbb
sbb
std
pop
leave
or
outsl
inc
fwait
loop
sub
leave
sbb
popa
lcall
iret
out
aaa
mov
in
lock
xlat
jns
cmp
jecxz
xor
cld
sar
out
cwtl
xor
outsl
cld
jbe
jecxz
mov
dec
popa
mov
std
leave
pop
ficoml
pop
xlat
loopne
pushf
in
sub
or
mov
lcall
mov
dec
adc
pop
xchg
or
loope
mov
mov
dec
push
xor
mov
sub
fwait
lret
push
pusha
insb
loopne
and
movsb
mov
pop
mov
lret
pop
pushw
adc
ljmp
ja
lods
mov
mov
lcall
insb
test
push
xlat
and
cmpsb
mov
pop
push
stos
ret
jns
inc
mov
testl
test
jne
addb
addr16
or
ja
fcoml
in
cmp
je
and
xchg
loopne
cmpsl
out
cltd
and
scas
int3
repnz
inc
add
xor
test
out
cld
out
in
xor
insb
sub
outsl
mov
xor
or
sarl
or
push
inc
lds
cmp
rcl
cmpsl
mov
lods
inc
pop
dec
sbb
sbb
imul
xor
mov
fistps
dec
cmp
iret
inc
sarl
les
jbe
mov
jbe
test
das
push
mov
mov
enter
lcall
test
std
lret
lcall
loop
fs
aad
call
fidivl
stos
jp
add
imull
rorb
das
mov
xchg
hlt
clc
inc
push
adc
addr16
cmpl
cmove
cmpb
in
out
sub
lcall
jae
shll
cltd
les
or
pushl
pop
push
and
mov
mov
ljmp
adc
xor
sbb
in
add
mov
pop
movb
in
and
xchg
mov
dec
inc
fs
fucomp
loopne
arpl
and
fiadds
jg
mov
movsb
filds
es
lcall
mov
cmp
stos
movsb
enter
lea
testb
push
aaa
push
mov
cmp
pusha
xchg
andb
imul
lock
xor
adc
rclb
jecxz
in
inc
leave
les
hlt
data16
dec
push
jno
dec
mov
push
shrl
daa
in
lock
dec
rcrb
stc
lods
mov
add
repnz
push
outsb
dec
cmp
push
mov
inc
or
repz
push
nop
ret
jb
pop
loopne
test
rcl
fsubs
stc
mov
mov
mov
xchg
movsl
fcmovb
ficompl
aaa
aam
pop
add
push
hlt
jbe
and
push
fnstenv
push
arpl
jl
cmp
out
add
mov
inc
es
adc
jp
inc
jp
mov
push
fstpt
adc
mov
dec
xchg
or
lods
sbb
sbbb
jnp
jne
pop
pop
sbb
dec
mov
adc
andl
mov
jl
aaa
xor
out
adcl
lods
clc
dec
adc
inc
outsb
sub
and
dec
push
mov
or
popf
mov
dec
testl
sbb
mov
cmc
xor
out
xor
loopne
cmp
testl
cld
jmp
xchg
rcr
stos
jmp
movsl
xchg
inc
push
stos
daa
sbb
xor
js
lds
movsb
dec
aam
lea
sub
popa
daa
cmc
rorl
adc
fcomi
daa
jge
jle
subl
sub
inc
dec
xor
out
and
push
outsl
js
push
jl
pop
or
mov
mov
enter
scas
loopne
aam
cli
stos
nop
std
pop
mov
aaa
vcmpss
filds
adc
mov
mov
pop
or
mov
inc
lcall
mov
insl
aas
cmp
sarl
ficomps
lahf
cld
sub
shrl
mov
int
mov
jecxz
enter
add
call
pop
popa
pop
fcmovnbe
mov
jge
add
jg
out
pushf
arpl
fcmovb
repz
shrl
xlat
or
jbe
sub
add
push
es
jns
xor
popa
leave
add
mov
stos
pop
or
ja
pop
fbstp
lahf
imull
push
xchg
xor
fucomi
xchg
mov
and
dec
and
add
repz
or
rorl
in
add
in
adc
pop
nop
lcall
out
mov
in
or
stc
shrb
vandps
push
xorl
mov
loopne
mov
aas
push
cmpsl
cmpsl
inc
fsubrp
or
adc
sub
adc
inc
cmp
inc
mov
jns
or
lods
xchg
push
subl
pop
mov
mov
add
jbe
in
mov
mov
das
xor
cwtl
ret
inc
shl
dec
cmc
xchg
cld
push
ror
mov
fistpl
jl
js
fsts
je
aad
mov
push
add
xor
sub
add
sub
dec
add
pusha
xchg
lret
lods
mov
sbb
xchg
inc
out
and
xchg
mov
lods
ljmp
sub
xor
push
gs
imul
sub
add
xor
cmp
addr16
into
or
movsl
pushf
sub
fsub
insb
mov
xchg
loop
mov
cli
popf
cld
lds
aam
xlat
jmp
xorb
dec
test
fs
mov
icebp
sarb
xor
xchg
xor
mov
roll
cmp
push
sar
nop
mov
mov
ror
iret
pop
hlt
rclb
mov
rcl
test
addr16
mov
adc
fs
and
sub
out
cltd
popf
mov
ret
sahf
leave
pop
iret
cmp
shlb
pusha
lds
add
stos
daa
mov
das
pusha
andb
and
xchg
push
lods
add
cmc
mov
imulb
adc
adc
push
pop
dec
cmp
dec
lock
add
push
lret
push
repnz
subb
subb
mov
fisttpl
and
cmp
repz
in
jo
int3
mov
mov
xor
dec
divb
cmp
add
ds
shlb
out
mov
pop
cltd
jbe
adc
iret
sbb
inc
cmp
xor
xor
icebp
in
ja
aad
dec
xlat
fs
sub
imul
enter
aad
sbb
cmpsb
adc
push
sub
scas
xor
jnp
cmp
fnstsw
aas
ds
or
jmp
rorl
sbb
pop
call
je
jae
cmp
stc
in
adc
cmpsl
cmp
jmp
icebp
ds
imul
xchg
xorl
pop
pop
lock
mov
sbb
and
dec
test
outsb
lock
jg
inc
jb
lret
inc
sbb
jo
xchg
dec
scas
inc
pop
imul
push
push
push
cmp
sub
ja
jbe
testl
push
faddp
rcll
ja
scas
adc
xchg
mov
push
mov
bound
aaa
mov
sub
inc
mov
sub
out
xchg
es
xlat
mov
lock
cmpsb
fldenv
mov
daa
lea
xor
ja
rcrb
mov
push
sbb
push
add
inc
lods
cwtl
call
es
out
loope
dec
dec
sar
iret
stos
inc
xlat
push
mov
mov
mov
ret
xchg
add
or
scas
dec
sahf
xlat
add
mov
pop
jmp
cltd
test
sbb
test
popa
jne
and
bound
les
scas
icebp
add
pop
fs
sbb
test
nop
mov
dec
cmp
mov
xchg
mov
adc
aas
sbb
daa
sub
mov
fwait
mov
sub
mov
adc
stos
popf
mov
stos
imul
jl
sub
inc
lds
xchg
pop
in
mov
popa
into
jecxz
aas
pop
fcoms
xchg
and
addr16
mov
inc
jo
dec
xor
fstp
aaa
into
fisubrs
dec
jnp
jmp
pop
int
mov
push
insb
in
and
dec
xchg
stos
call
retw
xchg
sti
mov
stos
pop
fbstp
loope
lods
daa
push
add
dec
mov
sarb
push
and
dec
or
iret
adc
cmp
daa
pop
mov
ljmp
adc
imull
inc
xor
mov
inc
aaa
popa
es
inc
pop
or
cmp
data16
testl
out
fwait
rcrb
push
daa
and
mov
cmpsb
push
jo
out
push
or
pop
aaa
cmp
mov
test
inc
test
outsb
sub
push
cli
mov
stos
jo
cmp
test
lods
sbb
loopne
cmc
shrb
daa
out
cmp
jge
loopne
mov
divps
xchg
test
mov
pop
out
aaa
dec
call
add
mov
dec
and
jbe
cld
jno
add
adc
outsl
push
fstp
ss
sbb
dec
leave
loopne
or
fmul
jg
dec
pop
mov
or
cmp
xchg
les
pusha
jb
psubusw
lcall
into
xor
or
gs
xchg
sarb
mov
std
lahf
adc
add
das
or
lods
incb
dec
mov
mov
sbb
stc
loopne
and
inc
adc
or
clc
rcl
insl
add
push
fcmovnbe
pop
fdivs
jmp
add
lods
sub
pop
inc
push
mov
push
jns
inc
nop
mov
dec
leave
out
jo
subl
push
cli
scas
test
incb
fdivr
fucomip
add
dec
sbb
xor
cltd
sti
mov
nop
cmp
inc
xor
sbb
cmp
dec
cmp
js
mov
sub
add
test
enter
int
insb
insb
push
and
addr16
add
fs
dec
movsb
mov
sbb
xchg
xchg
roll
push
insb
adc
int
cmp
pop
repnz
scas
and
jnp
ja
scas
in
in
or
mov
lods
jnp
sbb
sub
scas
mov
jbe
mov
push
jmp
das
push
and
add
jnp
and
sbb
mov
mov
stos
push
lock
cld
loop
xchg
out
stos
call
cmp
aaa
push
icebp
ja
loop
dec
in
and
add
pop
pop
mov
mov
ljmp
in
in
or
dec
pop
mov
repz
ret
clc
mov
sbb
xchg
sahf
loopne
mov
mov
pop
sub
je
sahf
aam
dec
dec
fiadds
lods
nop
dec
push
rcrb
inc
jo
mov
fs
nop
dec
pop
jno
inc
jecxz
mov
pushf
mov
enter
or
aaa
mov
int3
add
leave
jp
mov
cltd
jge
xlat
mov
out
xchg
loop
das
mov
fcomps
test
pushf
les
scas
push
xchg
aam
lods
fwait
pop
mov
add
pop
rcrb
cmpsl
imul
sahf
add
roll
ljmp
scas
xchg
ret
jb
out
stc
stos
sahf
insl
in
cltd
xchg
movsl
sub
ret
fdivp
dec
cli
loope
sti
add
mov
insb
jnp
sbb
push
movq
scas
push
jl
xchg
or
dec
add
test
dec
mov
xor
pop
cmp
xor
inc
fsubrs
imul
add
ficoml
dec
add
xor
xor
add
inc
dec
push
ss
cmp
mov
xchg
xchg
cmp
sbb
arpl
int3
pop
loopne
pop
or
jae
dec
adcl
jbe
pusha
cs
rol
lcall
aam
or
xor
cli
lret
xchg
mov
rorl
scas
cld
add
inc
imul
mov
aam
aam
cwtl
adc
inc
mov
pop
dec
jbe
imul
pop
jecxz
pabsb
js
rcll
cli
imul
out
fists
fcoms
orl
sbb
and
aaa
xchg
lds
fs
push
add
jne
xchg
ss
mov
out
pop
adc
dec
shrb
sub
mov
cli
sub
inc
lret
sub
sub
aas
fldl
clc
inc
lahf
jmp
nop
test
pusha
fstpt
fiaddl
outsb
dec
mov
inc
mov
push
sbb
ds
test
je
incb
mov
fisubs
lahf
jge
mov
nop
push
imul
fnstcw
in
pop
ljmp
in
outsb
fsubp
pop
sbb
pop
adc
loop
scas
in
push
and
adc
fwait
popf
inc
inc
pop
stos
adc
jmp
ficoms
addr16
leave
jge
mov
and
fnstsw
fisubrs
cmp
stos
pop
add
mov
cmp
ja
outsl
sbb
cmp
jmp
imul
fnclex
push
jg
jmp
push
fcmovnbe
mov
ss
rorl
aas
in
dec
jbe
enter
or
jg
cmp
mov
cmp
mov
sub
sbbb
jmp
aad
or
cmp
movsl
lds
iret
aaa
jb
adc
fisttpl
repz
in
in
lods
aad
cmpsl
cmc
loope
xor
out
scas
mov
xchg
idivl
addl
bound
push
repnz
jmp
cs
loopne
out
in
jb
imul
mov
xchg
dec
sbb
pushf
lret
fucomp
jo
popa
repz
pop
fisubrl
test
sbb
call
mov
dec
sbb
mov
push
loop
pop
cmp
out
test
repz
jmp
mov
mov
outsb
dec
or
cmpsl
cmpsl
add
push
test
orl
repz
push
xchg
sbb
mov
fwait
jno
dec
cmpsb
or
xchg
push
out
imul
add
call
addb
repz
xor
into
enter
mov
cmp
mov
adc
mov
or
int
es
and
movl
dec
fidivl
loop
jecxz
jp
push
jne
mov
dec
xchg
fsubrl
pushf
mov
mov
lcall
pusha
xor
sbb
mov
inc
xor
push
sub
jmp
arpl
xchg
fisubs
into
xor
popl
repnz
fmuls
pushf
xchg
or
or
xor
pop
fstpl
or
ficompl
out
lods
sub
insl
sub
mov
scas
mov
fimuls
ss
xchg
push
push
and
push
push
xor
adc
push
lar
jmp
mov
in
inc
inc
add
lahf
mov
mov
outsb
movsb
popf
and
cmpb
test
push
bound
cmp
xchg
inc
adc
stc
cmp
inc
lahf
pop
jbe
sbb
movsb
mov
sbb
push
into
inc
aam
leave
out
rolb
pop
jg
out
inc
test
cwtl
loop
or
pop
push
mov
push
leave
pop
fstpl
inc
stos
mov
cmpsb
lret
fidivs
inc
dec
out
and
pop
repz
aaa
cpuid
aaa
cmp
das
sub
xlat
hlt
adc
out
int
sahf
sbb
and
or
sub
mov
push
adc
js
jmp
sahf
sahf
ret
sbb
aad
dec
xor
ja
lret
push
enter
movsl
bound
and
aaa
aam
mov
sbb
cmpl
mov
popf
jb
and
adc
nop
dec
ljmp
xor
cmp
jge
sbb
pop
cltd
pop
inc
mov
cmp
test
ljmp
inc
cli
out
or
and
popa
sbb
orb
std
pop
in
test
xchg
inc
jecxz
mov
in
xlat
xchg
mov
gs
test
add
mov
mov
mov
daa
call
lcall
add
xor
push
sbb
xchg
hlt
dec
inc
ficomps
dec
xor
jnp
out
jge
dec
mov
mov
rcl
test
shlb
leave
ret
cmpsb
adc
fnstenv
ljmp
add
stos
sbb
fsubrs
pop
inc
popa
pop
lock
pop
lods
xorb
loope
sub
mov
and
lret
push
insb
stc
bound
repz
xchg
sub
or
in
dec
xchg
mov
fs
push
js
fistl
and
sbb
into
mov
nop
sub
xor
ss
push
dec
iret
aam
popf
lock
cmpb
push
push
movsb
xchg
xorb
inc
xor
cmp
xor
dec
das
std
xchg
push
mov
jno
or
push
fistpll
iret
or
nop
mov
xor
pop
ss
jne
lret
cs
push
repnz
clc
mov
movsl
xor
mov
divl
into
movsb
jge
xlat
jne
and
outsl
insl
adc
scas
fsub
jecxz
ret
push
movsl
and
push
bound
lahf
add
sbb
adc
xchg
arpl
sub
xchg
mov
orl
hlt
inc
mov
xbegin
jne
xchg
fists
in
lret
xchg
jl
movsb
idivl
and
xchg
in
and
das
cld
sbb
pop
xchg
mov
mov
or
cmp
mov
sbb
fstl
jmp
mov
xor
in
iret
cmp
sbb
jb
pusha
lret
shl
sbb
or
pop
dec
movsb
fsub
xchg
add
pop
xchg
out
fldl
mov
out
dec
mov
loopne
jge
cmpsb
xchg
test
mov
shrb
mov
xchg
pop
pusha
test
fidivs
push
push
or
mov
mov
push
mov
test
fwait
cltd
stos
push
sahf
das
sub
mov
js
or
dec
adc
fcoml
pusha
push
outsb
adc
sti
fisttps
lods
enter
xchg
inc
add
outsl
adc
push
rorb
jnp
cwtl
sub
sysenter
jmp
xlat
iret
adc
cld
cmpsl
xor
add
and
enter
adc
arpl
scas
jns
adc
inc
cmc
sbb
lods
mov
push
ja
xchg
imul
jno
jnp
add
bnd
cmp
hlt
int3
pop
xchg
push
add
mov
lock
es
mov
cli
or
fwait
ds
pop
push
jbe
clc
jecxz
mov
pop
daa
mov
in
pop
cwtl
sbb
outsb
sbb
xlat
xchg
jne
push
xor
repnz
daa
adc
mov
inc
mov
ret
cmp
and
xor
inc
cld
out
ficoml
and
cmp
or
enter
outsl
into
fdivrs
push
movsl
mov
dec
push
pop
mov
adc
out
sub
lcall
scas
adc
rol
sbb
incl
into
outsb
les
int3
sbb
andb
inc
imul
rclb
cmp
lret
pop
leave
fwait
arpl
fistpll
or
ret
mov
jae
inc
into
sbb
testb
lock
test
mov
cld
push
out
mov
rolb
pop
rolb
loopne
loopne
ja
in
mov
out
add
imul
push
jno
pop
loopne
mov
int3
orl
rolb
lahf
in
pop
mov
sarb
fcoml
jge
push
scas
jbe
mov
sub
xchg
mov
loopne
sbb
inc
int3
mov
es
mov
call
sub
add
or
cmpsb
and
pop
arpl
xchg
repnz
mov
std
pop
sbb
or
int3
std
mov
mov
jge
sub
add
dec
fisttps
sbb
push
ds
inc
inc
sbb
fwait
xchg
jg
test
cs
push
xchg
adc
xchg
push
dec
adc
sub
and
mov
sbb
adc
xchg
lock
dec
out
call
add
ret
dec
pop
mov
idivl
push
inc
jns
push
mov
push
mov
push
pop
jo
jg
and
fdivs
lods
mov
push
fsts
xchg
jne
add
je
push
loopne
xchg
push
mov
cmp
add
stc
cmpsl
sbb
jbe
mov
lods
or
stos
cmp
push
adc
mov
ficompl
in
lahf
inc
xchg
fs
aas
out
leave
aad
or
lods
jmp
dec
imul
cltd
incl
in
push
xchg
sub
clc
fsts
out
daa
neg
aaa
std
mov
mov
test
rcrb
cmp
sbb
inc
out
out
loop
ret
inc
cmp
push
ret
push
shrb
mov
add
lods
push
dec
cli
adc
add
push
mov
cmpsb
call
cld
fsub
add
mov
std
enter
loope
rcrb
out
xchg
imul
xchg
push
gs
dec
in
ja
ss
pop
stos
pop
cmpsb
add
je
xchg
arpl
xchg
aam
mov
aad
ja
repnz
or
jne
and
fiadds
sub
cwtl
fdivp
pop
fistpll
mov
out
push
push
int3
arpl
jbe
xchg
xor
arpl
pop
jecxz
or
cmp
loop
mov
lods
and
cmp
xchg
in
sub
enter
jecxz
cld
push
xchg
mov
adc
lahf
jmp
aam
or
ficoms
adc
ret
xor
rcrl
pop
push
pop
out
dec
fnstsw
dec
hlt
inc
or
jle
out
mov
and
andb
pusha
sub
and
sub
inc
mov
push
xchg
inc
mov
xor
dec
popa
aaa
scas
or
shl
outsb
pop
jp
xchg
cmpsl
cli
xor
jbe
mov
sbb
into
pop
add
and
lds
inc
repz
push
sbb
sarl
mov
adc
jnp
sbb
add
js
cltd
sbb
jecxz
rcrl
outsb
dec
insl
fsub
add
test
dec
xlat
dec
cmc
inc
rcrb
sub
mov
fcmovnu
into
imul
jmp
outsb
dec
pop
mov
outsb
or
fwait
int
mov
sub
or
mov
cmc
out
and
mov
jg
in
fidivs
sbbb
cmp
push
xor
loopne
sbb
jle
cmp
movsb
cltd
mov
dec
fnstsw
sub
lcall
ss
mov
insl
pop
mov
mov
cmp
dec
push
test
js
dec
mov
add
imul
mov
cmp
enter
je
jno
imul
and
push
rcr
cwtl
jno
pop
xchg
and
int
sti
shlb
push
inc
add
mov
addr16
push
dec
add
dec
and
xor
popa
or
call
clc
ljmp
out
sbb
inc
cmp
xchg
in
imul
ss
std
and
setnp
movsl
shrl
jge
mov
into
ror
sbb
inc
insl
mov
sub
or
aam
cli
and
xchg
testb
fwait
cltd
es
pushf
xchg
pusha
stos
cmp
xchg
mov
ds
or
pop
xchg
test
xor
shrl
cmc
cltd
aad
mov
xchg
or
pop
and
jle
mov
cmp
outsb
ds
xor
jns
push
mov
test
cmpsb
xor
test
and
push
test
add
dec
fistpll
mov
push
jle
push
ds
xchg
data16
test
pop
shlb
jle
xor
popf
add
fsubrs
clc
mov
inc
adc
lcall
mov
mov
push
push
ljmp
int
mov
jo
int
xchg
movsl
or
dec
ror
lret
jle
or
xchg
sub
dec
jo
jle
jno
adc
jle
ljmp
cmp
insl
outsl
jae
and
into
jl
push
cmp
jo
pop
jne
fimuls
in
loopne
and
dec
inc
inc
retw
sti
inc
ret
lea
inc
jne
pop
iret
mov
lods
cmp
shrl
ss
mov
sub
daa
js
xchg
sub
or
pusha
or
enter
add
mov
sbb
jp
js
movsl
movsb
inc
cmp
inc
mov
inc
pop
xchg
push
mov
mov
xchg
clc
fwait
cli
stos
inc
xchg
iret
inc
add
imul
mov
stos
pop
add
sbb
sub
cmc
test
enter
add
rcll
insb
in
test
in
adc
xchg
pop
bound
cli
movq
int3
inc
dec
and
dec
lcall
loop
push
adc
icebp
mov
int3
jns
or
mov
xor
xchg
hlt
movsl
mov
pop
lds
lahf
std
lds
sahf
push
fsubrs
or
in
test
xor
fistpll
inc
lods
dec
push
push
shlb
cmc
mov
sbb
mov
insb
mov
inc
inc
sar
jg
imul
sub
out
cli
cmp
sbb
sub
dec
movsl
cmc
mov
aam
mov
cmpsb
push
fcompl
adc
adc
sub
mov
cmc
fstl
popf
pop
nop
inc
shlb
outsl
sbb
add
xor
mov
pushf
add
jne
cmpsl
cmp
jmp
mov
in
fnstsw
pop
in
mov
insl
xor
rclb
mov
daa
cmpsl
cmp
popa
cld
fsubrs
lods
adc
add
int3
jl
sub
idivl
shll
xor
jp
add
cmpsb
push
push
xor
xor
cmpb
add
stc
sub
and
and
jnp
ljmp
push
inc
ds
stos
mov
cmpsl
pop
aad
pusha
adc
xor
xor
adc
popf
sahf
call
pop
mov
and
jl
sub
xlat
sub
stos
mov
ret
xchg
jbe
movsb
mov
and
pusha
sub
mov
mov
xchg
xchg
loopne
add
adc
push
push
xor
aas
pop
xchg
sub
cld
test
mov
xlat
push
jge
arpl
add
adc
push
and
xor
popf
or
leave
scas
adc
mov
outsl
andb
iret
sti
orl
push
pop
iret
and
sbb
ljmp
movsb
dec
jl
adc
sbb
sbb
push
mov
adc
leave
inc
rol
decl
sbb
xchg
testl
jbe
sub
cmp
rcr
shll
xor
shr
enter
pop
das
int
int
andnps
aas
and
xor
lods
in
outsb
push
dec
popa
loope
sbb
bound
jmp
ret
jbe
mov
lods
movsl
outsb
les
lds
out
test
fnsave
or
insb
sbb
loopne
fcmovne
rolb
add
push
clc
ficoml
push
fldl
xlat
xchg
insl
mov
push
push
fadd
test
push
mov
aaa
mov
xchg
pusha
mov
gs
sbb
jmp
push
ljmp
pop
or
in
xchg
shl
mov
jecxz
jl
repnz
bnd
mov
ds
and
stos
aaa
adc
std
mov
subb
in
cmp
int3
test
jl
adc
xchg
fwait
jmp
adc
cmp
mov
pusha
insb
and
pop
sub
daa
inc
loopne
leave
lea
mov
ja
arpl
push
mov
out
xor
fisttps
push
jg
mov
pop
clc
pop
mov
xchg
mov
add
adc
add
arpl
sub
mov
push
imul
iret
mov
rorl
stos
fstps
sbb
popf
add
loop
insl
fildl
push
xor
cmp
fiadds
aad
stos
xchg
jbe
sbb
adc
mov
xchg
fdiv
mov
imul
adc
adc
sarb
scas
pop
sub
sti
jne
rclb
loop
das
pop
shl
fiaddl
inc
xor
xchg
jae
mov
mov
cld
mov
xor
inc
jg
mov
dec
ds
loop
daa
hlt
push
jo
inc
rcl
test
pop
lcall
sbb
fcmovbe
jmp
ja
push
test
sbb
xchg
xor
fldenv
or
pop
xchg
lods
adc
repz
push
lea
pop
jmp
jo
sub
pop
clc
pop
sub
iret
mov
fisubl
xchg
test
pop
adc
stc
rdmsr
fadd
lret
push
push
xlat
andl
mov
pop
into
or
pop
mov
adc
fisubrs
nop
mov
jecxz
adcl
lea
dec
or
loope
leave
in
cmp
push
je
push
loop
sbb
cmp
pop
jae
xchg
nop
mov
pusha
push
jle
js
or
pop
lods
push
push
jnp
cld
fwait
in
dec
jo
cwtl
push
push
inc
loopne
cli
jae
clc
enter
sub
int3
add
scas
dec
add
pop
popf
aad
cmp
and
aam
dec
adc
out
cmp
or
xchg
dec
and
jbe
cmc
jno
sahf
lahf
xorb
push
jl
cmp
sbb
dec
inc
adc
js
shl
insb
imul
sub
add
push
xor
popf
aam
sbbb
clc
adc
mov
push
cli
into
dec
fldt
outsl
imul
fidivrs
in
xor
mov
shrl
int
in
adc
cli
test
dec
lock
scas
popa
sbb
adc
out
aad
xchg
jns
and
imul
xchg
in
mov
and
and
mov
fisubrl
ds
scas
repz
mov
pop
and
add
fld1
sbb
mov
sbb
cmp
pop
ret
cmp
or
int3
ljmp
pushl
xchg
gs
add
xor
or
sbb
mov
sub
nop
cld
icebp
clc
jbe
pop
js
stos
call
xchg
cmp
ja
adc
mov
cmpsb
inc
jmp
dec
in
mov
nop
jmp
sbb
or
jle
ss
inc
ljmp
dec
sub
or
cmp
mov
inc
lock
push
aas
testl
xor
push
testl
mov
rcll
push
jns
sub
enter
push
sbb
lret
pop
xchg
mov
clc
movsb
hlt
pop
shl
mov
lret
pop
xor
cmp
iret
sbb
enter
mov
cmpl
mov
xor
mov
mov
inc
call
xchg
ljmp
ja
push
cld
xor
rcl
fbstp
lret
or
movsl
icebp
sub
adc
or
dec
and
jb
dec
nop
xchg
repz
inc
mov
loope
stc
sub
in
lret
cli
faddl
clc
add
sarb
cld
loopne
cld
bnd
test
cld
arpl
cli
out
jo
push
sub
out
xor
xor
dec
das
push
jb
add
cmp
pop
sub
loop
mov
fisubs
int
push
push
cmc
scas
clc
mov
nop
iret
shll
and
lods
mov
subl
cmp
cld
sub
dec
inc
inc
xchg
cltd
scas
mov
dec
sub
movsb
and
and
cmpsl
push
pop
sbb
or
hlt
adc
sti
int
ficoms
mov
push
jp
xor
cmpsb
scas
pop
movsl
scas
sub
and
mov
rorb
jne
adc
std
and
addr16
mov
dec
outsl
outsl
rorb
into
cmpsb
push
outsl
add
adc
jp
cld
ss
fs
mov
loopne
adc
jle
push
pop
cs
mov
push
lret
fcmovu
sub
int3
ljmp
jge
mov
iret
cltd
adc
outsb
dec
mov
jnp
lea
test
bound
sbb
push
loopne
mov
outsb
lret
cmc
pop
fldcw
ret
jge
or
fsubrp
enter
sbb
pop
jl
and
inc
cmpsl
mov
inc
mov
inc
stc
push
sti
ljmp
xor
jno
daa
push
mov
mov
mov
push
dec
lds
xchg
jl
jns
xor
push
mov
sbb
xchg
push
xor
cltd
daa
lea
inc
imull
mov
mov
subb
into
mov
rolb
nop
and
roll
dec
in
inc
mov
bound
lahf
pop
xor
clc
mov
pusha
push
mov
add
add
mov
mov
mov
mov
jbe
frstor
nop
nop
jecxz
repnz
pusha
js
std
jmp
aad
andb
push
xor
sub
and
out
xchg
cmc
push
sbb
and
dec
xor
dec
in
shrb
mov
ss
mov
ret
sub
fnstsw
sarl
imull
xor
lods
fucomp
rorl
imul
add
and
pop
mov
mov
dec
xchg
data16
out
pop
mov
xchg
lock
hlt
jp
jns
loopne
rolb
add
cli
or
out
or
inc
jg
vextractf32x8
inc
int3
in
or
adc
xchg
sahf
cs
in
mov
jmp
pop
mov
subl
fdivs
inc
pop
int3
mov
test
cmc
cmpsb
mov
add
out
push
pop
leave
sub
mov
fnstenv
xchg
cmp
adc
adc
fdivrp
fdivrs
pushf
rcr
sbb
dec
je
sbb
fs
pop
mov
or
xorb
dec
sbbb
and
in
mov
jns
push
lock
dec
shl
movsb
pusha
push
add
and
sbbb
repz
adc
cmp
fdivp
mov
push
cltd
or
out
in
dec
pop
mov
enter
pusha
insl
jb
push
mov
rcr
mov
jae
movsl
push
loop
out
push
mov
outsl
xchg
xchg
push
movsl
les
test
lock
mov
test
das
mov
pop
sub
xchg
or
fistpll
sbb
daa
push
shl
push
sbb
stc
andb
scas
and
and
sahf
xchg
fisubrl
cmpsb
add
or
cwtl
pop
negb
sub
xor
mov
push
mov
jmp
pop
cld
repz
xor
stos
pop
cmp
sub
in
push
loopne
pop
rcr
xchg
scas
insb
in
pop
sahf
adcb
pop
cld
fadds
push
mov
daa
pop
jmp
jns
push
xchg
scas
out
sub
dec
sub
xchg
jns
test
jle
jne
ret
mov
mov
inc
push
push
js
das
test
sub
push
mov
inc
xor
mov
and
ljmp
subb
lock
insb
add
leave
clc
mov
out
xor
rclb
sub
in
sbb
cmp
imulb
pusha
adc
sub
outsl
aam
pushf
dec
mov
push
mov
jae
imul
jp
mov
lock
cwtl
mov
inc
xor
push
or
std
push
xchg
inc
xchg
sti
js
mov
mov
ret
in
repz
or
xchg
pop
test
lcall
aas
imul
ror
lret
leave
lcall
movsb
mov
adc
and
xchg
adc
jne
fnstenv
sub
xor
sbb
inc
cmp
addr16
push
aas
xlat
xlat
sub
push
fsubs
cmpsl
push
mov
sarl
imull
rcrl
lock
jno
xchg
lret
loope
bound
mov
push
inc
dec
sub
or
clc
insl
push
shlb
mov
xchg
ret
mov
incb
in
cmpsl
jne
push
sar
outsb
stos
push
sbb
stos
inc
mov
push
aaa
dec
xor
push
or
lahf
or
and
jo
dec
adc
sbb
aad
cmp
in
xor
cmp
sbb
sub
lret
and
stos
sub
lods
push
or
and
mov
testb
outsl
enter
loop
shlb
dec
or
sbb
jg
setg
sarl
gs
aas
adc
mov
mov
mov
dec
and
int3
pop
aas
enter
jno
mov
mov
jo
cmpsb
inc
dec
sbb
cld
pop
jne
and
jle
mov
cld
xchg
lret
mov
shr
xor
add
adc
ret
rcll
sti
insl
cld
ret
adc
sbb
mov
adc
inc
push
inc
xchg
cmpsb
sub
andl
xchg
repz
cmp
xchg
cmc
loope
jp
lcall
out
leave
mov
roll
imul
fcmove
rcl
mov
jl
in
popa
pop
mov
cmpsl
xchg
loope
movsb
sub
insb
jo
scas
fnstsw
jecxz
std
in
push
neg
pop
dec
adc
inc
mov
nop
rcll
loop
ds
mov
xor
jno
push
xchg
filds
ja
jae
mov
shlb
xchg
mov
lods
ret
push
sub
fwait
sub
shlb
loopne
lods
mov
xchg
push
call
rorb
std
or
pop
inc
inc
pop
mov
sbb
outsl
adc
dec
pushf
cs
and
scas
and
mov
inc
scas
push
outsb
xchg
stos
mov
add
f2xm1
lods
jp
or
stos
mov
test
sub
sub
add
inc
outsl
cmp
jle
popf
mov
sar
sti
dec
xor
jl
sbb
xchg
nop
or
pop
cmpsl
loop
mov
xchg
out
nop
push
dec
or
add
adc
jb
ss
int
fildl
popa
rcl
adc
pop
and
or
mov
repnz
cmpsl
lods
cmpsl
add
mov
xchg
mov
and
push
fmuls
outsl
mov
idivl
cmp
xor
cwtl
add
pop
orl
cmp
mov
xchg
int
add
mov
imul
daa
mov
inc
and
xlat
xchg
push
test
into
xchg
test
pop
call
mov
lahf
test
push
cmp
cmp
call
das
inc
sbb
stc
scas
push
push
sbb
mov
inc
cmp
jnp
sbb
mov
and
imul
rol
orl
add
jbe,pn
fcomps
add
jge
push
jmp
xchg
outsl
ljmp
bound
fildl
push
ds
in
imul
pop
mov
das
and
lods
movsb
les
xchg
fstpl
test
adc
pop
adc
or
push
and
and
mov
test
push
lcall
mov
scas
mov
addr16
xchg
popa
cwtl
pusha
test
ja
loope
pop
pop
inc
popa
adc
and
sub
hlt
lret
test
add
out
cmp
xor
sbb
sbb
test
imul
sub
or
mov
xor
push
push
mov
mov
and
cmp
out
xchg
push
pop
mov
arpl
or
cmp
xor
jg
das
mov
and
fmuls
mov
shrb
ljmp
in
icebp
sub
fimull
sub
dec
std
jle
jge
pop
ja
mov
push
xor
je
imul
lea
cmpsl
jmp
out
dec
pop
out
rorb
shll
mov
xchg
mov
dec
and
push
pop
xchg
fistl
xchg
shr
scas
sbb
push
cmp
jbe
or
cmp
mov
cmc
mov
std
pop
out
les
xor
push
cmp
mov
lea
pop
mov
dec
popa
call
movsb
movsl
mov
rcrl
in
cli
sbb
lahf
mov
scas
jno
inc
mov
popf
mov
mov
inc
mov
xor
out
mov
xor
push
imul
repz
mov
xchg
xchg
jl
ss
adc
fldl
fcmovnb
cmpsl
outsb
mov
xlat
jp
in
arpl
into
jle
fisubrs
and
jb
daa
xchg
push
push
add
shrl
hlt
mov
adc
jae
sub
cmp
scas
mov
orl
pmulhw
jb
in
pop
xchg
cmc
nop
adc
movsl
inc
sti
orb
shr
in
jno
mov
adc
mov
sub
dec
test
pop
cmp
cmpsl
aas
stos
add
pushf
mov
fldt
inc
repnz
push
push
sub
out
xlat
out
xor
inc
sbb
es
cwtl
ja
adc
lea
adcl
or
jmp
pop
lds
ffree
int
jmp
mov
mov
cltd
fmuls
pushf
cld
icebp
sub
sbbb
xlat
mov
enter
and
and
aad
push
lahf
mov
rcrb
fimuls
sub
jns
mov
je
leave
clc
jnp
and
in
cli
test
sub
push
imul
inc
cmp
scas
push
jp
adcl
and
nop
lock
insl
pop
push
inc
mov
mov
inc
jmp
xchg
lret
icebp
or
daa
lea
movsl
mov
sbb
xor
cltd
sub
mov
cld
sti
jnp
jle
push
jmp
lods
mov
lock
mov
mov
and
jne
and
test
outsl
repnz
dec
xchg
sbb
add
daa
adc
pop
out
in
sti
lcall
push
lods
pop
mov
adc
dec
rcrb
mov
mov
mov
repz
xchg
jmp
jge
jae
xor
lahf
mov
mov
mov
xor
cmp
pushf
and
in
mov
push
jnp
jns
cwtl
jno
or
pop
pop
rorb
out
pop
mov
xchg
mov
add
clc
jmp
mov
dec
pop
push
jne
jne
in
lods
pop
fildll
in
leave
adc
dec
sbb
mov
mov
icebp
inc
sub
test
sarb
push
sbb
push
pop
aas
cmp
popa
fwait
push
je
push
push
lret
rcrl
test
addr16
sub
pop
pop
add
ret
mov
lds
loopne
les
push
sbb
mov
mov
test
cmp
sbbb
loop
fisubs
sub
cli
dec
out
mov
fs
aas
inc
mov
into
push
cmp
out
ljmp
stc
cwtl
push
test
jae
xchg
mov
and
pmaddwd
jo
jg
leave
mov
pop
sbb
mov
lods
add
gs
enter
gs
xor
test
pushf
es
push
sub
es
pop
sbb
dec
cs
dec
adc
adc
xlat
pop
adc
xchg
mov
push
mull
jecxz
xor
sar
movsb
lret
stos
push
insl
sub
push
aaa
push
sbb
call
sub
les
mov
sub
and
mov
movl
scas
pop
mov
aas
daa
xor
inc
push
mov
in
or
pushf
pop
into
in
jae
js
ljmp
repnz
or
sub
gs
sti
fists
or
lods
mov
pop
mov
bound
pop
xlat
or
leave
jb
push
sub
fbstp
jl
ret
mov
in
lcall
outsl
inc
pusha
enter
lods
push
pusha
icebp
xchg
hlt
adc
int
jg
lcall
pop
xor
sub
dec
loopne
pop
jno
mov
xchg
jge
jo
pop
add
inc
lahf
sti
lds
add
adc
clc
jge
stc
sti
push
out
pusha
xchg
lds
sub
push
aad
add
xchg
scas
push
push
std
xchg
sbb
pop
push
mov
pcmpgtw
test
outsl
ret
push
inc
xchg
inc
dec
add
dec
mov
dec
sbb
out
and
lds
mov
mov
add
mov
dec
or
cli
stos
jne
bnd
and
pop
cli
test
mov
sub
arpl
fdivl
mov
fstl
out
dec
cltd
mov
dec
pop
adc
cs
imul
pop
popf
xchg
ja
sbb
dec
int
xchg
out
pop
test
jns
scas
enter
xchg
and
push
lods
les
lret
stos
shl
mov
outsb
scas
pusha
movsb
in
cmc
inc
mov
orl
cmpsl
repnz
mov
lret
push
cmpsl
or
xchg
push
xchg
adc
imul
mov
fldenv
adc
push
mov
in
dec
sub
push
add
mov
jg
jno
sbb
test
js
inc
push
nop
mov
xchg
xchg
push
imul
insl
iret
out
leave
fwait
and
divl
push
sub
cmp
xor
mov
push
push
ljmp
mov
jp
je
xor
imul
dec
sub
fisubrl
sbb
imul
or
insb
xor
insb
sub
pop
mov
add
jo
xchg
mov
repnz
clc
inc
pop
xchg
cmp
sub
or
lret
int
fbld
cmp
repz
inc
mov
sub
mov
mov
lock
inc
pop
sub
push
sbb
lds
jae
notl
pop
mov
sub
iret
and
mov
xorb
adc
push
jo
call
clc
dec
xlat
sub
icebp
adc
rcr
testl
clc
mov
xchg
xchg
ficomps
std
xchg
das
iret
pop
roll
jnp
lahf
sub
jge
xorl
mov
lods
xor
xor
dec
subb
push
push
cmp
adc
mov
outsl
cmc
mov
sbb
xchg
jo
imull
popa
xchg
out
cmp
inc
enter
and
cmc
aam
mov
dec
test
lret
mov
cld
sub
lea
mov
sub
test
or
es
or
shr
add
or
je
mov
stos
cmp
arpl
ds
dec
mov
arpl
lock
dec
out
mov
and
jmp
push
push
inc
cli
stc
loope
jge
sbb
cmp
xor
cli
inc
xchg
mov
jg
gs
lcall
jle
arpl
mov
inc
icebp
xchg
js
addr16
scas
pop
cmp
mov
xor
lea
shrb
mov
imul
xchg
dec
mov
out
mov
jb
xor
shr
cli
push
outsl
cli
mov
ret
push
push
sbb
les
inc
jecxz
and
fwait
fwait
es
leave
jecxz
sti
icebp
pop
jno
shl
int
sub
outsb
xchg
pop
shlb
xchg
scas
and
push
mov
mov
mov
or
adcb
ficompl
loop
add
pop
cmc
incl
jns
xor
loope
inc
stc
mov
iret
pop
dec
ret
ljmp
loopne
popf
test
rclb
jecxz
lods
sub
icebp
popa
and
inc
xor
xor
adc
call
stos
push
xor
mov
repz
pop
sbb
test
aas
or
adc
mov
inc
jl
jne
xchg
push
outsl
jp
push
pop
push
and
and
jl
sbbb
jmp
jae
or
pop
xor
movsb
xor
insl
sub
jge
jecxz
das
cli
lea
and
pop
adc
dec
inc
push
ret
cs
lea
cmpsl
mov
lahf
bound
push
mov
js
xchg
sbb
mov
ss
push
sub
movsl
das
dec
notl
aam
test
fimuls
mov
pop
je
nop
lea
push
inc
or
shll
mov
sbb
in
pop
pop
ficompl
cmpsl
dec
int3
sub
pushf
lods
fisubl
ss
lods
subl
dec
notb
sub
mov
pop
fldl
popf
mov
pop
test
iret
and
popf
push
jle
and
stos
ds
orl
das
xor
negl
repnz
pusha
mov
out
jg
jmp
movsl
lret
push
mov
mov
addr16
sbb
cmp
adc
cwtl
lret
xorb
xchg
dec
xchg
pop
add
inc
sbb
inc
push
pop
test
adcl
popw
push
sbb
imul
iret
inc
mov
repz
cmp
nop
rclb
xchg
adc
in
cld
int
lcall
loopne
adc
pop
mov
std
enter
mov
mov
or
into
leave
pop
push
andl
mov
cmc
rcrl
push
pop
cmp
cmpsb
jns
clc
sub
test
mov
add
shl
js
mov
dec
push
lcall
xor
es
or
lods
sbb
mov
dec
call
xor
leave
fnstsw
xchg
inc
clc
xchg
out
mov
add
xlat
adc
mov
mov
inc
arpl
inc
sub
mov
jp
outsb
jl
xor
test
jle
add
mov
or
mov
adc
dec
pop
push
out
push
push
orb
mov
addr16
adc
sahf
jecxz
dec
jge
xchg
lret
xchg
ds
jmp
outsb
repz
jb
ficompl
je
imul
jbe
jb
cmpl
mov
ljmp
or
rcrb
pop
jge
js
xchg
add
mov
fmuls
push
rcr
dec
adc
lods
in
xchg
ss
add
xor
mov
imul
ficompl
mov
xlat
jo
mov
xchg
mov
leave
jne
sarb
sbb
das
adcb
out
or
std
and
mov
sub
inc
add
dec
outsl
mov
mov
pop
xor
sub
pop
xchg
lahf
fmulp
movb
out
enter
sub
shll
out
pop
sbb
dec
das
lret
jge
mov
daa
mov
test
je
stos
out
out
lcall
dec
sbb
jl
insl
pop
scas
scas
push
adcl
push
jns
push
aas
hlt
xorl
mov
sub
aas
mov
sahf
cmp
call
dec
leave
mov
adc
repnz
addb
mov
lret
xchg
push
inc
sarl
hlt
xchg
insl
in
cwtl
sbb
sbb
jnp
ror
sbb
in
in
adc
insl
cmp
adc
jo
outsl
outsl
cmp
sahf
out
inc
out
subb
cmp
mov
mov
cmp
stc
mov
aad
xlat
push
scas
jg
adc
imul
or
lret
mov
aaa
mov
shll
push
mov
fldl
and
aas
mov
xlat
dec
nop
add
jo
mov
jne
adc
repz
in
and
xor
call
fwait
ss
xor
movsl
das
jmp
cmp
aas
push
cmp
pop
pop
dec
push
push
sbb
test
cmp
mov
stos
dec
jg
inc
mov
sti
ja
push
sbbl
lods
rcr
call
fisubrs
popf
outsl
jo
fsub
maskmovq
dec
inc
fisubrs
sbb
inc
mov
scas
push
insb
push
int
ja
movsl
testl
and
jecxz
mov
sbb
xor
jbe
xor
xor
push
dec
mov
inc
cwtl
nop
cltd
push
scas
jns
jb
addb
sbb
xor
mov
movl
scas
bound
repz
pop
jl
outsl
push
cs
pop
adc
stos
add
jl
bound
xchg
mov
imul
cmp
subl
je
cmc
jo
xor
andl
cmp
rol
jge
scas
lds
sbb
loop
xchg
xor
xor
jle
pop
fwait
nop
sub
and
adc
sbb
push
mov
out
enter
lods
cmp
xchg
in
inc
dec
sub
jno
pop
sbb
cmp
mov
sub
into
inc
xabort
and
xlat
mov
pop
adc
mov
inc
xor
cmp
ds
movsb
sub
lea
fldenv
xor
addr16
repnz
scas
pop
mov
dec
out
xor
push
subb
mov
add
bound
xor
or
or
popa
scas
mov
gs
xor
jmp
cmp
inc
dec
outsl
jle
ja
test
xchg
push
frstor
mov
mov
gs
xor
sub
imul
data16
pop
les
cmp
fcmovbe
mov
js
jg
add
push
push
gs
out
shl
and
cmp
mov
sahf
ss
test
mov
or
sbb
imul
inc
push
mov
push
pop
lahf
or
cs
loop
addr16
addb
int3
imull
outsb
loopne
inc
outsb
repz
adc
fbstp
sbb
fdiv
lock
dec
inc
mov
mov
pop
lret
add
fcmove
ror
sub
lcall
mov
int3
jns
daa
jecxz
push
xor
lock
push
movnti
push
or
cltd
and
push
mov
outsb
dec
jo
adc
call
out
incb
aas
divl
xor
mov
xchg
jecxz
shlb
aam
fisubl
aas
xor
aaa
ja
fcoml
into
adc
fnsave
mov
outsb
mov
xchg
push
cltd
xchg
sahf
enter
lock
jns
sbbl
dec
ljmp
xchg
negl
push
ja
mov
ljmp
inc
add
push
pusha
test
int3
ficoml
sar
xor
fiaddl
push
fs
pushf
jge
in
mov
add
notrack
orb
sub
adc
sub
push
into
inc
inc
cmpsl
mov
xchg
add
add
mov
mov
fidivl
cs
add
sub
dec
mov
mov
cmp
dec
xor
and
adc
ja
jmp
sub
dec
sub
mov
nop
pop
jl
je
outsl
enter
aam
jmp
mov
cs
aad
shll
mov
mov
outsl
pop
mov
dec
rcr
imul
lea
bound
outsl
jecxz
add
rcrb
je
sub
sub
mov
mov
setne
lcall
cwtl
xor
cltd
sub
xchg
iret
in
adc
imul
mov
daa
xlat
dec
rorb
mov
in
push
lods
pop
push
cmp
repnz
popa
jg
add
xor
jnp
es
cmpsb
add
les
pushw
or
push
adc
jns
mov
fldl
add
dec
xor
data16
jbe
in
cmpsb
cmp
std
mov
mov
sub
adc
js
notb
out
and
push
jle
das
adc
xor
dec
add
lahf
mov
imul
jae
outsb
mov
lock
fwait
xchg
xchg
and
push
lds
push
and
inc
xchg
mov
jmp
inc
insl
out
scas
sub
out
insb
mov
jge
in
xor
mov
ror
aam
popa
mov
xor
add
sbb
lcall
fidivs
sahf
neg
and
xchg
mov
shrl
int
mov
enter
cpuid
xor
ret
leave
mull
lret
sub
sarb
ret
jnp
fsubp
mov
in
xchg
insb
push
loopne
xor
loop
and
mov
aas
sub
dec
cwtl
outsl
fs
sub
nop
mov
push
inc
sbb
scas
push
cmp
das
cmp
cmp
xor
ds
call
ret
cmp
test
loope
adc
cmp
push
mov
mov
loop
pop
mov
pop
out
dec
aas
jg
jbe
leave
add
in
and
jmp
and
daa
mov
out
pop
cmp
cmp
adc
adc
aaa
jecxz
aam
pop
clc
ljmp
sbb
loopne
inc
inc
sti
jns
lret
int
pop
add
jmp
mov
push
push
and
push
inc
jp
dec
adc
push
sti
add
and
xor
xchg
fsubrs
out
mov
outsb
jne
scas
adc
stc
bound
fbld
xchg
aas
stos
sbb
jnp
test
push
mov
xor
icebp
pop
dec
out
cwtl
jmp
divb
std
push
les
jmp
imul
push
insb
insl
sub
repnz
aas
lock
out
jl
xchg
int3
iret
jle
sub
shll
or
xchg
add
movsb
adc
subb
mov
mov
gs
lods
aaa
sbb
xor
lock
xor
inc
jnp
dec
cmpsl
fsubs
jle
mov
adc
pop
jae
sahf
outsl
jnp
push
jbe
inc
cltd
xchg
scas
add
dec
movsl
adc
scas
imul
inc
dec
inc
push
jb
push
ret
xchg
mov
ror
test
mov
dec
jns
cli
mov
and
mov
cmp
push
aaa
lahf
or
xchg
sbb
pop
int3
das
jbe
fldt
mov
push
dec
test
fdivrl
xlat
sub
inc
dec
pop
inc
jbe
push
dec
movsb
cmp
cltd
mov
fildl
adc
pop
pop
sbbb
bound
mov
jne
cmp
mov
and
es
imul
popf
cmc
pushf
add
sub
popf
add
adc
cld
jle
movntps
inc
sbb
fsts
inc
shll
xlat
push
idiv
lret
outsb
inc
mov
adc
out
test
mov
lret
pop
lods
jge
pop
leave
sub
or
int3
in
pop
lods
out
pusha
jl
inc
sbb
addb
jbe,pt
addb
cld
in
sub
cwtl
lea
fdivrs
and
lock
inc
in
scas
adc
mov
pop
rorw
popf
mov
test
cmpsb
dec
xchg
in
sub
push
popa
stos
mov
repnz
dec
mov
fidivl
mov
sbb
jcxz
adc
icebp
mov
xor
push
cmpsl
add
push
dec
jo
xchg
mov
and
sbb
inc
or
hlt
repnz
in
insl
and
mov
scas
lods
jno
call
mov
fwait
andl
test
mov
out
es
ret
xchg
xor
cmp
clc
mov
mov
dec
es
or
mov
cmpsl
jl
ljmp
in
add
aad
mov
pushf
cmp
cs
dec
loope
shrl
pop
pop
nop
je
mov
jp
repz
cld
inc
mov
cld
outsl
rol
lcall
xor
xor
pop
cmpl
js
fisttpl
ljmp
and
mov
inc
lretw
inc
int
ret
push
jnp
or
scas
neg
mov
jmp
adc
std
mov
loopne
leave
inc
movsb
ret
lret
jl
cmpsb
scas
dec
mov
mov
cmpsb
cltd
idiv
outsb
rsm
sub
add
mov
in
aam
lods
aaa
fnstsw
jmp
insl
mov
fs
xchg
call
push
sbb
rcr
clc
repz
cmpsb
fdivs
icebp
cmp
sbb
mov
icebp
out
pop
jo
daa
stos
jbe
pop
shl
out
cmp
sbb
inc
popa
cmp
stos
mov
std
addr16
dec
pop
mov
sub
into
cwtl
mov
inc
shll
sub
xchg
pushf
stos
adc
loope
shrb
lods
push
in
mov
add
dec
icebp
lret
xchg
cmp
push
cmp
cmpb
jbe
mov
jle
pop
jge
mov
popf
push
inc
adc
aaa
andb
into
cmpsb
adc
orb
mov
jge
pop
icebp
mov
imul
sub
mov
adc
loope
fsts
bound
cld
inc
aas
enter
jl
pusha
mov
fwait
pop
and
in
xchg
es
push
cmpsl
fsubrs
hlt
iret
cmpsb
inc
pop
push
pop
sti
jnp
pop
insl
inc
and
inc
or
ja
fists
xchg
cmc
scas
push
mov
dec
pop
jecxz
sahf
clc
orb
popf
adc
xchg
stos
sti
int3
mov
clc
sahf
dec
pop
jo,pt
ja
dec
sub
push
xchg
dec
sub
sub
fdivl
xchg
or
shr
mov
and
mov
mov
inc
mov
add
shlb
je
movsb
add
outsl
cmp
add
aas
pop
idivl
ds
dec
shlb
or
and
cmp
push
fidivl
rcll
or
push
sbb
mov
leave
xor
loope
sbb
xchg
aam
xor
mov
jns
in
insl
fwait
and
sbb
dec
add
push
cmp
int3
push
dec
js
push
pop
mov
pop
gs
sbb
mov
out
push
adc
mov
bound
hlt
je
lods
test
or
rorb
mulb
mov
inc
test
push
js
cld
inc
imul
mov
popf
adc
pop
adc
cltd
fs
lahf
dec
lret
xchg
pop
push
mov
mov
lret
pop
jp
xor
push
jo
push
jp
scas
and
or
lock
lods
loope
inc
jb
outsb
mov
sub
push
or
dec
les
sti
shrl
add
dec
pushl
jmp
jne
adc
out
inc
aas
daa
cmpsl
push
fdivp
mov
sbb
in
and
lret
stos
adc
fs
ss
adc
aam
cs
xchg
sahf
addb
in
push
lods
sbb
test
ljmp
xchg
scas
xor
add
add
inc
xchg
fisubs
and
mov
add
stc
js
push
das
cmp
sbb
out
into
out
mov
pushf
pop
push
inc
in
int
insl
or
aas
js
orb
mov
mov
cmpsl
out
je
adc
and
adc
jp
xchg
cmp
mov
fstl
shlb
leave
sbb
jge
adc
jnp
out
pop
inc
outsb
mov
outsb
cld
pop
jno
push
add
push
sbb
fcompl
push
mov
adc
outsb
js
adc
ja
icebp
lods
ret
xchg
dec
and
mov
push
scas
test
bound
adc
jne
mov
dec
push
adc
js
or
sarl
adcb
mov
mov
mov
ret
dec
icebp
in
les
fldcw
jmp
shrl
rcrb
inc
js
std
push
int
add
pop
or
sub
dec
jecxz
rcrl
adc
xchg
lret
adc
dec
push
lahf
xchg
in
xchg
xchg
add
sbb
repnz
add
into
into
pop
adc
aas
xor
stc
js
daa
jmp
ret
pop
mov
jo
push
and
test
aas
and
loope
and
mov
cmp
lds
pop
pushf
xchg
mov
xchg
les
sub
int
shlb
mov
js
les
lahf
push
adc
fmul
push
iret
addr16
ror
int
push
xchg
cmpsl
test
das
lods
leave
in
std
in
jp
or
or
jmp
sbb
mov
push
jmp
push
pop
dec
ret
clc
gs
ja
repnz
mov
pop
insb
into
dec
mov
addr16
push
jae
ljmp
mov
xor
xchg
loopne
adc
out
xor
adc
pusha
or
es
add
mov
pcmpgtw
jno
and
pusha
jmp
pop
mov
cs
into
push
loopne
mov
xor
adc
sarb
push
mov
dec
push
lods
jp
pop
hlt
cmpsb
bound
pop
cltd
hlt
pop
fcmovb
leave
sub
mov
and
cmp
mov
jno
addr16
dec
in
inc
test
pop
xchg
out
sahf
xchg
fildl
js
aam
in
xor
jl
dec
loope
xor
hlt
xchg
sub
xchg
lds
pop
fcmove
in
dec
iret
push
ret
push
jo
add
pop
add
jne
xchg
adc
stos
es
adc
sub
or
mov
lods
push
mov
fwait
cld
aad
mov
pop
jge
xor
sbb
fistps
mov
dec
xchg
bound
mov
xchg
test
mov
add
test
stos
mov
lret
inc
pop
adc
mov
xlat
dec
dec
mov
xor
test
jbe
xchg
int3
or
imul
xchg
push
sbb
mov
cmp
jle
cs
aas
nop
dec
jno
cmp
loopne
nop
fs
aad
jg
fistpl
lock
lea
xor
push
dec
clc
movsb
fcoml
inc
sub
add
and
lock
sbb
test
cmp
push
lods
jmp
loopne
adc
xchg
sub
xor
popf
mov
or
fcomip
xor
push
fldcw
push
testb
inc
fistpl
scas
icebp
lods
adc
ljmp
dec
pop
imul
sbb
fnsave
pop
sub
mull
jecxz
popf
outsl
pop
rcrl
jg
adc
jmp
push
push
int
pop
jp
add
test
cmc
test
scas
mov
inc
imul
jp
pop
imul
mov
sub
cwtl
in
mov
or
mov
incb
pop
xchg
sbb
add
mov
push
mov
push
pop
cmp
mov
add
sahf
gs
int3
aad
pop
xchg
mov
sub
shll
mov
fmuls
sub
jo
insl
mov
cld
aaa
fwait
mov
fadd
lds
dec
sbb
mov
add
pop
push
repnz
lcall
cmp
dec
push
push
das
add
add
add
lcall
mov
adc
fucom
ja
arpl
pop
sbb
mov
mov
andb
loop
xchg
xchg
mov
hlt
faddl
fdivrl
cltd
loope
nop
leave
add
sbb
mov
std
sbb
roll
test
sbb
hlt
xor
out
and
mov
orb
dec
loop
xor
jg
mov
pop
push
or
sbb
mov
add
inc
ds
cld
inc
fsubs
test
lahf
pop
mov
es
pusha
popa
dec
data16
out
in
and
cmp
adc
inc
xor
sbb
test
into
hlt
scas
mov
cmp
inc
cmp
popa
pop
inc
xlat
aam
push
std
pusha
in
das
aam
ret
imul
lock
sub
xchg
rolb
inc
les
mov
int
jns
sarb
sti
jne
js
xor
iret
add
jge
js
ss
push
or
mov
gs
cld
sbb
jmp
xchg
ret
mov
xor
sub
jg
xchg
lods
lods
enter
mov
jg
incl
push
or
movsl
leave
adc
popf
xchg
and
add
jg
jle
mov
lods
mov
xchg
push
xchg
out
add
fs
movsl
fdivrs
dec
pop
inc
lea
inc
rclb
cld
out
inc
and
mov
mov
push
cmp
aam
mov
nop
inc
mov
jmp
mov
or
sub
insl
pop
mov
loope
cltd
dec
and
popf
xor
mov
inc
xchg
loop
lods
hlt
mov
stos
popa
std
ds
mov
mov
mov
out
push
mov
mov
mov
shll
test
mov
xchg
leave
push
stos
xchg
cmpsb
jge
mov
and
jecxz
jnp
sti
cmp
jp
addl
xchg
lret
mov
aas
rcll
mov
test
xchg
sbb
mov
jno
jmp
stos
lea
mov
xchg
aaa
push
cmpsb
mov
test
jmp
ljmp
call
or
lret
pop
jg
ss
xchg
mov
push
std
loope
cmp
lods
push
shl
inc
rcrb
je
mov
or
xchg
ljmp
pop
repnz
cmpsl
add
pop
jg
ret
dec
sub
xor
xchg
push
pushw
cltd
into
jne
add
fwait
mov
lahf
pop
rcrl
lods
and
outsb
outsl
push
xchg
hlt
daa
and
mov
cld
jne
imul
loope
es
jmp
pop
add
or
out
xchg
arpl
ss
sub
sub
lock
xchg
dec
aaa
in
pop
mov
mov
cltd
repnz
cltd
call
cltd
inc
or
pop
sar
ficoml
sbb
and
sbbl
inc
push
cmpl
cld
pop
mov
and
leave
fwait
mov
cmc
movsl
sub
int
roll
movsb
push
and
jp
dec
jns
out
pop
inc
jae
pop
push
mov
jb
divb
sub
dec
cmp
arpl
pushf
mov
push
add
lock
and
mov
bswap
fwait
stc
sub
mov
ljmp
mov
nop
out
test
jle
mov
outsb
adc
lods
sbb
or
insb
push
push
xor
and
lods
xchg
cld
jge
mov
mov
or
cmp
jl
jle
shlb
cmp
lods
or
mov
orl
dec
xchg
pop
ss
ret
test
imul
lahf
lret
lret
iret
add
sbb
jb
cmp
mov
push
es
out
sub
add
xchg
stos
mov
add
dec
ud0
cmp
pushf
ret
arpl
fucomi
loope
inc
mov
add
push
std
and
add
lret
jo
mov
push
out
insl
adc
jnp
outsl
loope
mov
enter
jle
mov
push
and
mov
les
pop
in
and
imul
pop
call
mov
out
outsb
mov
adc
data16
lods
push
mov
jae
fs
mov
push
jg
das
jecxz
push
sub
mov
movsb
out
int3
xchg
mov
test
dec
xor
enter
jne
popa
mov
nop
cmp
fstp
or
mov
mov
test
mov
inc
cmp
sbb
dec
mov
mov
iret
add
xor
movsb
leave
pop
stc
jb
jb
sub
loop
xchg
lods
inc
fs
xchg
mov
mov
xorl
mov
and
sbb
test
ds
cltd
jb
insb
fsubs
sub
adc
out
sahf
mov
mov
icebp
jbe
sub
mov
add
xchg
lds
xor
add
int
fcompl
mov
xchg
stos
mov
pop
mov
lahf
notb
enter
insl
mov
mov
jno
mov
into
push
jl
inc
std
test
test
push
dec
sbb
ds
sub
adc
loopne
out
hlt
cmp
mov
xor
and
ja
shrb
test
jo
dec
pop
sbb
mov
arpl
je
pop
or
jbe
push
xlat
xor
sbb
hlt
xchg
rcr
sub
push
lret
mov
mov
rcll
mov
sub
pop
pop
mov
iret
push
cmpsb
out
adc
pusha
imul
in
in
cmp
lret
mov
gs
cmp
jecxz
call
jmp
and
pop
out
in
cmp
adc
xor
fwait
pop
popf
hlt
lret
mov
mov
cmp
std
ss
es
je
mov
clc
into
push
pop
or
jmp
mov
cmp
pop
ficompl
xor
cld
inc
add
inc
adc
insl
addr16
cmp
fcomps
jmp
cmp
jmp
mov
inc
sub
gs
or
sub
pop
lret
lret
imul
fiaddl
test
mov
lods
clc
cmc
into
or
mov
nop
adc
mov
int
push
cmp
out
or
in
push
fs
sub
test
add
scas
jb
fsts
add
xchg
lret
push
xor
cwtl
fwait
js
sbb
jb
mov
es
clc
sti
mov
sbb
mov
dec
push
xchg
fcoms
ret
fildl
mov
jae
sbb
cltd
insb
in
pop
shll
lods
inc
sti
cli
mov
aas
adc
in
mov
dec
ja
adc
ds
out
jecxz
testb
loope
stos
jp
cmp
cmovbe
jne
xchg
mov
insl
add
adc
mov
push
dec
push
pop
scas
lods
adc
add
pusha
repz
mov
xlat
push
icebp
mov
outsl
fimuls
dec
mov
inc
sbb
out
push
push
mov
test
hlt
insl
xor
jl
inc
mov
jnp
fsubs
lahf
decl
xchg
fs
insl
jbe
dec
flds
jl
xor
call
in
sub
outsb
push
or
loop
leave
inc
stos
mov
fildl
mov
inc
jo
pop
add
sbb
aaa
shrb
out
adc
and
cmpsb
cltd
notb
xchg
cli
loopne
shlb
aaa
or
cld
movsb
jmp
mov
lds
ss
mov
push
cmp
test
add
aad
repz
adc
test
shr
loopne
pusha
out
lods
in
jmp
xchg
sbb
loop,pt
mov
and
imul
adc
adc
adc
or
jns
inc
and
pop
jnp
dec
mov
fs
int
shll
jge
jecxz
push
jge
hlt
dec
adc
push
cltd
imul
mov
mov
clc
outsl
enter
pop
adc
out
pop
and
loopne
sub
aad
cli
push
icebp
xchg
sub
addr16
ds
fcompl
fcmove
sbb
jl
cmpsb
jo
jbe
lahf
lock
jbe
mov
insb
xorb
mov
sbb
sar
les
not
sub
pop
adc
push
testl
adc
xchg
mov
fadd
push
adc
jne
addb
xor
jecxz
repnz
mov
fistpll
mov
arpl
imul
mov
and
je
movsb
outsl
cld
aad
stc
fs
xor
scas
push
scas
jl
insl
rclb
xchg
cwtl
pop
push
jecxz
subl
daa
xchg
pop
inc
jg
xchg
arpl
mov
or
stos
jae
xor
cmpsl
xchg
push
jne
mov
mov
mov
icebp
movsl
fsubl
jecxz
dec
sahf
mov
shl
leave
cltd
jno
aad
or
jbe
stos
loopne
xor
adcl
fnstenv
test
jae
sub
push
mov
pop
fwait
ja
cmc
mov
outsb
mov
outsb
js
sub
cld
add
mov
pop
jne
push
xchg
xor
xchg
out
ja
outsb
jnp
inc
sti
std
cmp
inc
imul
iret
mov
inc
add
mov
movb
cmp
ds
sub
push
testl
or
add
pause
jmp
dec
cmc
pop
fxch
dec
jmp
movsl
gs
inc
push
cmpb
add
xchg
cwtl
push
mov
test
cmpsl
popa
roll
aas
out
and
mov
cmp
mov
test
scas
push
xadd
pop
dec
sar
cli
ja
mov
bound
xor
imul
xchg
addl
sti
inc
into
jns
addr16
add
pop
popa
adc
lret
xor
das
shll
push
xchg
into
mov
mov
in
insl
fcoms
std
dec
js
addb
out
pop
outsb
inc
mov
aam
loop
cmp
mov
repz
aas
mov
pop
cmp
testb
jnp
push
and
bnd
mov
test
pop
data16
out
inc
in
fwait
test
test
mov
inc
mov
xchg
or
dec
xor
mov
aaa
mov
push
lods
repnz
sub
popf
push
cmpsb
int3
xchg
sub
fs
push
imul
sbb
mov
icebp
mov
cwtl
insw
and
jecxz
inc
xchg
pop
cli
call
mov
mov
popa
inc
cmp
aad
xor
fs
pop
shl
int
icebp
mov
or
sbb
sbb
pop
int
mov
orl
sub
ret
call
rcrb
jb
sub
jns
jmp
lret
addr16
lret
test
lods
movsb
sub
add
pop
xor
call
jae
inc
mov
int3
out
bound
repnz
daa
loope
pop
sahf
invlpg
xor
push
jle
lret
test
jne
push
and
pop
ds
push
xor
xor
data16
fcoms
inc
rorl
mov
test
mov
mov
lret
xlat
pop
xchg
xchg
push
add
clc
fidivs
mov
and
or
movl
out
fisttpll
lret
inc
xor
ret
fistl
out
dec
xlat
sbb
xchg
adc
fdivrl
add
cli
mov
or
xchg
or
dec
hlt
or
mov
mov
xor
mov
lds
xchg
mov
jmp
lock
jp
insl
icebp
mov
fwait
clc
cwtl
ret
xor
dec
jge
sub
idiv
push
ficoml
jne
mov
rcrl
jle
xchg
ret
lret
xchg
push
push
adc
push
cmp
or
arpl
sbb
insl
add
mov
imul
int3
cmpsb
add
enter
rcll
push
jnp
lahf
mov
mov
fbld
inc
jmp
mov
sti
add
adc
jbe
mov
fiadds
cs
dec
inc
jae
call
lea
loopne
in
stos
sub
sub
xor
mov
mov
jne,pn
xor
inc
lds
push
imul
fucomi
pop
imul
or
adc
call
test
inc
mov
fsts
sahf
mov
ja
dec
mov
sub
push
push
xrelease
dec
addl
lods
fisttps
xor
lret
lea
adc
xchg
imul
repz
mov
push
jle
fwait
and
out
jnp
aas
in
or
das
and
cwtl
nop
jge
sbb
sahf
and
ljmp
in
lahf
aas
push
leave
arpl
sbb
movsl
adc
pop
adc
cmp
fbstp
adc
repz
cli
int
scas
popa
cmc
and
sub
leave
or
stos
mov
clc
iret
cmp
add
cmp
pop
enter
sbb
test
mov
mov
std
fisubrl
mov
nop
push
decl
push
in
adc
jle
flds
jne
adc
repz
pop
xchg
and
adc
mov
mov
dec
js
dec
mov
xchg
pop
jbe
out
pusha
and
call
nop
lds
or
push
add
and
xor
pop
call
stc
or
mov
jae
and
cmpsl
push
jp
fwait
cmpb
mov
adc
sbb
loope
aad
out
ret
test
inc
jecxz
push
je
notb
pop
jmp
xchg
hlt
xor
sbb
push
lea
in
push
leave
jne
or
pop
sbb
xlat
jno
inc
jle
mov
mov
in
sub
xor
xor
xchg
lods
cmp
pop
sbb
adc
jl
adc
rcrl
dec
sbb
xchg
jo
rcl
fistps
xchg
lds
jb
push
fistpll
lret
dec
cmp
mov
add
fdiv
into
test
sbbl
pop
rorl
fistpll
push
adc
sbb
orb
inc
mov
repz
xchg
pop
mov
pop
popa
in
neg
push
enter
scas
adc
dec
dec
imul
jge
stos
jo
lcall
cmp
sub
sbb
scas
ret
cmp
dec
orb
mov
leave
pop
arpl
or
rol
ja
sahf
mov
dec
into
aam
cmp
int
popf
mov
adc
lret
nop
pop
std
pop
bound
dec
fistpl
mov
loopne
lcall
insb
inc
pushf
jecxz
popf
imul
xor
jp
jb
ds
xchg
test
xor
in
frstor
xchg
xchg
cmp
fisubs
ret
shlb
mov
inc
and
mov
mov
dec
sub
xor
arpl
xchg
mov
xor
fstpt
adc
cmpsl
repz
dec
repz
cwtl
jp
in
lcall
ss
adc
fdivp
mov
xchg
into
iret
add
xor
mov
test
imul
xlat
push
into
dec
hlt
out
sarl
sti
int3
or
or
push
sbb
mov
andl
dec
test
push
dec
jg
cmp
lcall
mov
outsb
push
mov
sbb
push
std
lret
cmp
rorl
mov
repz
sub
xchg
mov
jecxz
in
push
test
dec
lret
test
test
and
jbe
mov
sbb
daa
pop
add
mov
pop
aad
and
test
xor
mov
cmp
adc
dec
or
lcall
inc
pusha
ret
sbb
popf
das
rolb
and
push
dec
sub
cmc
int3
pop
add
dec
popf
mov
dec
lds
fsubs
and
mov
mov
push
shll
push
push
ret
cmpsl
sbb
andl
xchg
and
sub
lds
cltd
push
mov
and
in
push
sbb
adc
fimull
call
adc
push
pop
stos
std
ja
lods
std
add
sub
sbb
nop
sub
adc
sbb
icebp
pop
les
pusha
cld
mov
mov
adc
andl
mov
lods
cmp
jmp
cltd
je
in
push
je
mov
push
lock
ja
mov
fwait
icebp
jbe
inc
add
mov
mov
inc
cwtl
mov
jp
xor
out
fiaddl
pop
inc
negb
lret
dec
pop
leave
jle
xchg
jns
getsec
pop
mov
mov
sbb
adc
adc
cmpsb
add
add
pop
push
cltd
mov
out
dec
icebp
xrelease
stos
inc
dec
data16
inc
int
nop
fistps
lods
repz
ficoml
ficompl
mov
test
xlat
data16
cmp
js
sbb
repnz
xchg
adc
insb
add
popf
rclb
lahf
fucomip
sbb
or
aas
cmp
lods
dec
pusha
stc
lret
add
out
mov
std
add
lret
orl
fdivp
mov
inc
ds
jne
add
xchg
lea
mov
pop
sbb
and
dec
rcll
popa
ror
aas
mov
pop
pop
dec
adc
lods
inc
test
xchg
and
les
in
das
rcll
loop
and
aad
jne
mov
mov
adc
lds
lahf
das
ds
mov
xchg
push
mov
hlt
pop
enter
std
sub
jl
xlat
jns
sbb
mov
sub
mov
sahf
sarl
pop
push
lods
les
push
rcll
cltd
xchg
sbb
loope
sbb
ret
sub
aad
imul
mov
jl
push
add
add
mov
in
jmp
lea
test
insb
sbb
mov
fdivrs
daa
jno
data16
repnz
xorl
imul
add
test
pusha
sbb
mov
cmp
xor
sub
pushw
xchg
cmp
jbe
stos
roll
mov
notb
mov
fcomi
imul
adc
push
insl
mov
inc
adc
js
lret
dec
addr16
push
movsb
sahf
loopne
movsl
popa
sbb
nop
xor
pushl
push
shll
sub
xor
mov
push
sbb
enter
mov
mov
pop
ss
popf
push
adc
inc
data16
fiaddl
std
jle
fadd
clc
lret
lods
fiaddl
int
sub
rcl
aaa
mov
cmp
cwtl
jns
popa
scas
out
out
jnp
jge
iret
nop
push
test
jge
jne
xor
leave
cwtl
push
add
jle
jb
mov
or
enter
push
adc
and
push
int
jmp
dec
iret
imul
nop
lea
mov
outsb
fwait
out
inc
je
push
outsb
mov
mov
or
cmp
arpl
jo
inc
jp
loope
popf
cmpsl
xor
mov
and
xchg
cmp
rcrb
or
scas
orl
xchg
rcr
fsubrl
mov
orl
aam
sbb
pop
lods
adc
sahf
loope
fisubl
imul
call
movsb
test
pop
pop
movsl
loop
sub
in
or
test
jo
aad
xor
std
aas
test
lahf
and
xlat
dec
mov
les
add
jle
cmpsb
sub
cmc
stc
adc
daa
std
pop
dec
push
mov
xchg
mov
ret
jmp
dec
push
shrb
ret
mov
cmpl
jno
sbb
and
push
addb
dec
mov
ds
leave
in
jp
push
in
dec
hlt
push
dec
xchg
add
lds
mov
mov
push
sbb
js
cmp
fdiv
icebp
pop
rorl
loopne
orl
xchg
or
jne
and
lock
je
pop
aad
and
and
imulb
xchg
es
and
sub
adc
addb
lods
mov
lret
pop
mov
sbb
cli
rcrl
mov
xor
test
mov
outsb
mov
imul
movsl
pop
fildl
ret
sub
cltd
cld
scas
into
sarl
outsb
div
pop
xor
adc
repz
or
inc
fwait
pop
rolb
xor
sahf
dec
das
cld
xchg
inc
addb
xor
xchg
mov
jo
xchg
rolb
mov
aam
mov
mov
mov
pusha
imul
inc
ljmp
lcall
and
cmp
mov
pop
push
and
add
sbb
mov
cs
xchg
cltd
divl
mov
lds
pop
movsl
scas
icebp
in
sub
loope
xchg
fwait
iret
arpl
pop
inc
jle
lods
inc
dec
pop
push
ret
int
orb
ficomps
push
scas
push
xor
and
inc
push
dec
push
add
push
popa
lods
loopne
negl
enter
mov
rclb
cld
sbb
dec
pop
roll
clc
xchg
xchg
nop
cld
stos
mov
xchg
xchg
in
rcrl
into
lock
xlat
std
adc
push
jle
or
sub
pop
pop
popa
faddl
test
mov
mov
bnd
fistpll
adc
mov
je
and
add
mov
iret
pop
xchg
sbb
fstpt
inc
fs
int3
adc
andl
pop
outsl
nop
cmp
pop
hlt
sub
dec
xchg
imul
or
ja
mov
xchg
lret
repnz
jge
lock
out
or
xor
cmp
not
xor
lahf
mov
gs
test
mov
jb
adc
or
aad
test
dec
clc
adc
or
mov
cmpsl
pop
invd
pop
push
imul
arpl
mov
test
push
faddl
dec
ds
jp
mov
testl
rcrb
xor
push
test
aam
adc
jmp
out
cli
daa
rolb
repz
mov
outsb
or
xchg
fucomp
adc
es
stos
adcl
push
or
cmpsb
pop
cwtl
xchg
jg
xlat
mov
inc
adc
mov
faddp
lods
movsl
ds
rcl
pushf
mov
and
xor
repz
shl
add
add
adc
ss
cmpl
aam
mov
loop
popf
xlat
xor
push
pusha
inc
inc
and
ficompl
in
sbb
rol
shll
push
pop
xor
and
mov
stos
js
pop
or
rcll
arpl
inc
push
adc
sub
rorb
xchg
jnp
stc
scas
sub
faddl
cmp
repnz
xchg
rcr
mov
arpl
mov
pop
notl
ficoms
outsl
add
sub
out
xchg
inc
popf
orl
pop
sub
push
xor
lds
pusha
in
push
push
jo
fs
sbb
fdivs
cmpsb
mov
xchg
xchg
xor
scas
sub
mov
dec
sub
xchg
and
sub
or
popa
ja
dec
fadds
ret
ja
std
fimuls
gs
inc
pusha
or
or
cmc
addl
js
dec
mov
test
outsb
int3
incb
cmp
sahf
jecxz
push
sbb
push
pop
hlt
sub
decb
ss
aas
pop
jle
sub
out
xlat
inc
pushf
dec
mov
loopne
stc
jb
rcll
mov
mov
sub
orb
aam
add
ljmp
xchg
jl
fcmovu
cmp
mov
push
dec
mov
sti
inc
cmc
push
jmp
outsb
push
mov
inc
cmp
ja
sti
mov
imul
sub
and
push
xchg
mov
and
dec
insb
loopne
xor
cmpb
out
push
out
jo
dec
insl
mov
fwait
inc
fld
sbb
stc
les
cmp
cmp
and
push
xchg
daa
outsl
hlt
add
cwtl
push
pop
in
xor
insl
push
shlb
imul
cs
pop
ds
es
mov
out
xchg
sub
lods
scas
or
sbb
lahf
sub
mov
loopne
clc
jb
dec
xchg
dec
orb
xchg
insl
aaa
in
sbb
and
pop
and
lds
pop
sti
sub
mov
add
cli
iret
sub
xchg
mov
shll
or
cmp
cmpsb
add
stos
lock
mov
es
mov
test
ret
fwait
imul
dec
shrl
jnp
fisttpl
pushf
ss
pop
xor
mov
leave
mov
mov
adc
and
fnstenv
pop
icebp
call
jns
bound
jns
aam
inc
inc
mov
icebp
push
jbe
test
cmp
inc
adc
fsubl
pop
adc
xchg
aaa
imul
jnp
or
xor
fmuls
pushf
push
pop
sbb
mov
mov
dec
aad
adc
stos
pop
out
xchg
std
repz
inc
sbb
or
mov
popa
sub
les
mov
mov
leave
mov
add
in
adc
push
cwtl
leave
lock
ss
push
mov
or
pushf
dec
jnp
xor
mov
mov
mov
inc
mov
fistps
int
xchg
cmc
sbbl
mov
lcall
icebp
jns
pop
xor
outsb
add
adc
pop
push
push
jno
fnstsw
or
pop
inc
pop
xlat
push
pop
cmpsb
sub
mov
jle
rcrl
mov
jge
stc
and
sbb
pop
pop
sub
xor
es
jbe
and
jl
aaa
pop
lods
cmp
sub
cli
dec
fwait
addr16
mov
insb
lds
ja
jns
push
or
push
xchg
or
ljmp
dec
decl
mov
rclb
mov
jmp
jno
adc
and
popa
cltd
jae
outsl
jmp
addr16
mov
ljmp
push
imul
cld
dec
add
adcl
adc
push
int3
lods
cld
loope
mov
dec
int3
pop
xchg
jg
inc
xchg
xchg
decl
jmp
pushf
add
cmp
stos
pushf
popa
outsl
add
daa
lea
jle
fmul
push
mov
movsb
inc
insb
and
les
test
inc
push
adc
mov
ficoms
cmpsb
fcomps
les
mov
push
add
push
jbe
or
dec
iret
out
and
les
fwait
inc
stos
outsl
mov
mov
dec
int
mov
scas
shll
enter
pusha
out
call
fcmovnbe
adc
imul
xchg
sbb
shlb
test
add
inc
hlt
or
adc
and
mov
cmp
pop
mov
es
push
dec
mov
fdivrl
add
xchg
ds
stc
in
rorb
sub
jns
sbb
xor
lds
outsl
decb
outsl
pusha
inc
in
shll
add
or
fcmovnu
in
cmpsb
push
int
ljmp
sbb
fbstp
call
mov
arpl
in
mov
xor
xchg
call
outsl
fldt
daa
mov
jg
ds
jl
and
pop
xor
jle
fbstp
adc
flds
jnp
movsb
imul
fucom
cmpsl
mov
cmp
pop
or
les
jae
push
mov
jecxz
push
and
mov
icebp
testb
pop
mov
std
enter
out
scas
mov
add
sbb
cmp
add
push
lcall
cli
push
push
push
mov
pop
out
jns
push
add
add
stos
je
pusha
sbb
push
jns
ljmp
imul
cmpb
test
ror
in
iret
dec
sub
ficoms
push
jl
stos
lret
test
dec
aam
ljmp
ss
leave
test
std
mov
jbe
cmp
jns
mov
jge
add
int
mov
add
sub
aas
andl
movsl
push
and
es
icebp
adc
push
mov
cmp
mov
sti
jb
scas
cmp
les
adc
out
and
inc
jno
or
inc
sub
jmp
inc
nop
push
push
dec
cmp
pop
aad
or
push
cmpsl
ja
mov
in
inc
or
jle
pushf
pop
leave
mov
loopne
cmp
mov
ret
xchg
loop
xchg
xor
pop
adc
rcrb
sbb
cmp
adc
jno
sub
loopne
icebp
cmp
push
sub
sub
inc
mov
movl
mov
scas
int3
into
pop
dec
popl
cmp
adc
cwtl
sahf
push
push
sbb
loop
push
bound
cwtl
sbb
mov
fmull
sbb
fwait
sbb
jg
jmp
adc
dec
ja
jo
imul
lock
jp
inc
inc
dec
xchg
lret
andb
rorl
das
pop
ds
inc
or
out
pop
push
mov
popa
xchg
aam
cli
aas
imul
in
iret
popa
lcall
je
cmpb
js
xor
lock
movsb
xchg
pop
xchg
mov
pop
cmp
jb
jne
mov
pop
jge
ljmp
les
mov
insb
or
or
and
mov
xorl
push
jg
xor
out
scas
or
and
mov
insb
mov
or
aad
jl
push
lcall
sbb
push
mov
dec
inc
mov
xchg
xchg
xor
xchg
and
jg
lods
dec
mov
push
ds
xor
mov
dec
fucom
iret
jge
sub
jge
inc
mov
ljmp
lret
sbb
mov
and
addr16
xlat
sub
mov
inc
push
dec
adc
int3
xor
stc
mov
rorl
push
cwtl
add
fucomip
add
and
and
push
call
mov
inc
xchg
sarb
adc
push
iret
dec
jbe
out
scas
data16
pop
repnz
add
jno
push
dec
xor
adc
stos
sub
and
jge
mov
movsl
xlat
lock
ja
jge
lret
jb
sub
cmc
je
arpl
nop
movsl
fwait
cs
push
dec
mov
and
outsb
jl
inc
lahf
xor
inc
movsb
pop
mov
xor
cmpsl
push
in
sub
mov
mov
fs
adc
inc
mov
cltd
lea
xchg
dec
pop
lcall
xor
out
pop
lret
sub
push
in
mov
icebp
pop
mov
xor
xchg
or
push
cmpsb
std
rcrl
jecxz
sbb
push
push
jb
fiadds
push
xchg
xchg
inc
xor
mov
adc
outsb
arpl
or
imul
fsubs
fwait
clc
lea
inc
push
in
add
and
rolb
mov
mov
xor
les
xchg
mov
pop
dec
shll
sbb
xchg
gs
loopne
sbb
mov
cmp
or
in
mov
das
jne
jle
lahf
and
dec
xlat
inc
jb
mov
sub
dec
leave
out
sbb
int3
push
sub
movsb
iret
add
jg
push
test
mov
fbld
andb
inc
jg
sub
dec
inc
mov
stc
aas
cwtl
addl
and
sbb
inc
and
mov
cmp
lods
ja
scas
mov
or
cmp
ret
push
sar
jno
add
mov
lds
outsl
inc
loope
add
xchg
mov
xchg
dec
inc
lds
aas
jg
pop
rcrl
popl
or
jnp
add
aaa
adc
aas
in
add
dec
xor
push
clc
and
fcoms
mov
mov
hlt
inc
xor
xchg
sub
mov
popf
addl
jnp
outsl
xor
cmp
jp
jbe
in
test
inc
loopne
test
mov
jge
jge
popa
stos
pop
pop
push
ret
cmp
and
pop
cmp
sub
xchg
pop
shrl
out
pop
cld
jae
cmp
xchg
fistps
sub
dec
aas
sbb
mov
xchg
std
sbb
iret
ficoml
bound
fistps
jb
cmc
adc
push
loopne
mov
loop
xchg
cmpsl
fcmovbe
fsubs
je
into
xor
ficoms
mov
cmc
lret
hlt
jp
sub
sti
popa
mov
mov
lcall
inc
iret
call
sub
pop
inc
inc
jo
adc
mov
imulb
adc
cltd
push
cmpsb
adc
sbb
lahf
daa
jg
lcall
lods
sub
cmpsb
shll
cli
test
lods
shlb
lds
xchg
sub
ss
pop
and
add
jnp
ljmp
pop
cmp
dec
icebp
sub
pusha
lock
fdivrl
or
imul
scas
mov
or
js
inc
insl
xor
jle
mov
xor
popa
call
inc
push
mov
pop
mov
arpl
inc
xlat
xor
jmp
add
insb
adc
xchg
out
flds
mov
jbe
arpl
push
or
inc
popf
rcrl
mov
shl
and
cs
sub
adc
cli
mov
int
jle
fdivrs
pop
push
jns
cmpl
xchg
push
je
push
mov
lds
pop
sbb
xor
push
out
sub
mov
or
mov
cwtl
out
clc
popf
push
es
cmp
push
cli
in
fucomp
and
pop
jo
lea
pop
movsl
cmp
or
jge
push
xchg
stc
sub
push
scas
sbb
outsl
scas
mov
sbb
mov
jle
cmp
test
jmp
xor
clc
popf
nop
lret
adc
push
sahf
dec
or
shll
xchg
lret
ret
fwait
lret
mov
pop
sub
mov
mov
ljmp
push
dec
dec
rcrb
loope
pop
mov
lret
roll
cmpsl
sub
aam
int
dec
inc
scas
push
popf
lret
lahf
fcoms
mov
and
mov
adc
push
jl
mov
xchg
fnstsw
mov
dec
sarl
insb
outsb
and
jbe
and
fcom
xor
jp
clc
mov
fnstenv
mov
in
lret
and
shll
test
sub
call
adc
cmp
fimull
cli
xchg
xchg
lea
imul
clc
out
mov
pop
xchg
jp
insb
adc
popf
push
cmp
mov
pop
jle
scas
and
lods
mov
push
enter
outsl
push
cmp
lret
mov
xor
cs
and
mov
inc
into
cmp
imul
mov
xor
call
sbb
mov
pop
lret
nop
test
or
lahf
movsb
jmp
sub
sub
popa
cmpsl
popf
aaa
ret
add
outsl
gs
pop
cld
pop
mov
cmp
jae
add
movsb
lods
call
pushf
das
leave
icebp
cmp
lea
ret
adc
jae
std
pop
add
vxorps
sbb
subb
cmp
fwait
or
clc
cltd
and
pop
mov
arpl
mov
repz
sbb
dec
jo
xor
cmc
xorl
mov
lods
xor
add
fsubrp
mov
cld
and
outsl
cmp
add
xor
pop
adc
iret
dec
in
shl
sub
jnp
cs
lods
repz
jae
mov
and
test
push
dec
cmpsb
outsl
rcrl
dec
or
mov
or
or
aas
sub
or
sahf
out
dec
push
daa
mov
or
adc
mov
inc
push
adc
xor
scas
loop
push
pop
cmp
or
and
pusha
ds
push
ret
out
mov
and
mov
push
mov
lcall
xor
mov
out
mov
mov
and
sub
jge
mov
add
cltd
rol
or
adc
and
inc
and
stos
sub
stos
xchg
test
mov
shlb
mov
addr16
aad
data16
repnz
inc
or
xchg
xchg
sub
push
in
inc
loope
adc
pushf
or
out
push
push
xchg
xchg
std
adc
jmp
cmp
imul
arpl
mov
adc
fldl
clc
inc
jno
movsb
cmpsb
stc
pop
int
xchg
mov
xor
sbb
pop
push
dec
movsb
and
push
outsl
pop
inc
ret
ds
ret
aas
xor
lea
hlt
inc
aas
aas
in
pop
mov
mov
cld
xchg
mov
or
icebp
out
fwait
mov
mov
adc
or
and
mov
hlt
and
shrl
and
mov
and
push
mov
jmp
and
xchg
ljmp
aas
arpl
mov
lret
lea
rorl
or
pop
cmp
repz
jmp
pop
shrb
add
pop
add
cmp
sub
in
xlat
xchg
xor
ja
cmp
jnp
mov
ror
jge
lcall
lock
jmp
daa
inc
sbb
cmpsl
sub
jb
or
rorl
dec
xlat
lods
pop
fstpt
pop
fisubrs
lods
adc
fpatan
jmp
adc
pop
out
xchg
adc
or
sbb
push
fucomp
cwtl
test
rcr
mov
inc
adc
jno
push
xchg
inc
es
pop
push
mov
cmp
xchg
adc
leave
stos
sbb
shll
dec
mov
pushf
mov
dec
cs
imulb
popa
ds
mov
inc
ret
jmp
int3
addr16
iret
mov
sbb
call
dec
aas
pop
push
je
mov
or
inc
outsb
je
cmpsb
into
andl
xchg
xlat
decb
insl
add
mov
cmp
and
inc
lret
mov
adc
mov
cmp
mov
test
adc
cmpl
stc
sub
inc
fstl
test
in
adc
sbb
mov
mov
int3
adc
bound
sub
int3
adc
mov
jl
fcom
out
call
mov
xchg
jae
mov
mov
add
nop
pop
cli
xor
mov
cmpb
mov
mov
test
pop
xchg
add
cmpsb
mov
xor
push
push
fldcw
jp
shlb
add
inc
jecxz
and
adc
mov
loopne
push
push
test
rolb
jbe
jno
or
sub
add
jne
add
fildll
popa
lret
jp,pt
xor
fistpll
cmp
insl
sbb
cmpsb
stos
adc
aas
mov
cmpsb
fldcw
dec
add
push
addr16
lret
xor
addr16
imul
les
dec
jbe
movsl
test
and
mov
lods
push
pop
mov
xchg
data16
dec
xor
in
or
lods
mov
add
aaa
nop
cs
mov
int3
aaa
loop
dec
jecxz
daa
arpl
and
sbb
mov
out
mov
mov
lret
xlat
addr16
push
mov
stos
cltd
test
mov
cmpsb
cmp
pop
adc
jmp
mov
das
mov
scas
sahf
lock
test
jo
cwtl
sbb
push
and
push
in
xchg
sbb
test
cmpsl
in
lahf
stos
xlat
aad
add
jo
pop
inc
adc
xchg
cmpsb
ss
jbe
shl
int
xchg
outsb
jno
jns
mov
into
repz
iret
lock
jne
pop
mov
jg
push
mov
jle
lods
and
bound
sbb
xor
add
into
jae
sbb
jbe
lock
pop
data16
aaa
enter
cmp
data16
lret
lcall
pushf
xchg
popf
inc
mov
push
enter
xor
out
add
jae
das
jnp
push
pop
cmp
in
mov
push
out
mov
sbb
int3
xor
stc
ds
dec
mov
test
call
insl
sbb
or
jmp
adc
push
arpl
stos
and
mov
fwait
andl
xchg
arpl
inc
cmp
insl
shrb
mov
fiadds
pushf
and
pop
mov
sbb
jmp
iret
xorl
test
mov
jne
push
divb
xor
mov
sub
loop
inc
dec
mov
fbld
mov
pop
das
mov
push
dec
xchg
xor
xchg
lahf
test
loopne
loopne
aas
adc
jg
push
stos
andl
pop
out
into
push
in
scas
push
mov
lods
jo
xlat
jne
pop
gs
mov
outsl
sub
faddp
cmp
pop
add
jbe
das
xor
mov
sub
rclb
and
sbb
test
mov
mov
sti
loop
es
movsl
mov
push
pop
jp
add
and
inc
sahf
adc
into
sbb
shrb
jmp
pop
in
mov
cmp
out
mov
mov
adc
sbb
rorl
lcall
popf
frstor
loop
stc
insl
mov
jno
imul
mov
aas
rclb
inc
push
inc
stos
mov
lahf
mov
out
mov
mov
popa
dec
inc
subb
sub
mov
xchg
insb
jns
xchg
mov
inc
movsb
aam
std
or
pop
ffree
aas
mov
mov
ret
leave
imul
out
inc
xchg
push
dec
mov
hlt
jg
jns
mov
jg
in
mov
jno
test
add
arpl
xor
add
jp
xchg
dec
pop
scas
pop
test
xor
jb
sbb
xlat
std
cltd
test
mov
insb
sarb
cltd
faddl
cmp
mov
test
ja
cmp
jae
cld
hlt
mov
mov
std
scas
out
add
or
xchg
inc
stc
fistpl
fistpl
add
out
aas
add
stc
icebp
and
pop
inc
lods
push
incb
mov
je
test
and
and
pop
dec
adc
inc
int
mov
xor
ret
mov
repz
out
cmp
xchg
xchg
aam
sbb
jae
sub
add
push
jo
jb
cmp
cmp
insb
or
ret
xor
jb
cld
arpl
out
pop
fsubr
lahf
pop
cmp
out
xchg
faddp
mov
adc
sub
pop
clc
cmc
leave
outsl
jp
inc
adc
sbb
and
xor
icebp
in
loop
mov
xchg
pop
sub
enter
leave
lahf
daa
jl
add
xchg
repnz
xchg
lock
aad
cmpsl
dec
je
hlt
stos
xchg
mov
mov
addr16
cmp
imul
addr16
cld
dec
pop
sti
imul
scas
sbb
into
mov
sbb
stc
lcall
add
push
and
int
jmp
push
ss
inc
adc
data16
push
mov
cli
mov
pop
sbb
jae
cmp
lods
fucomip
mov
dec
std
sub
cmpl
data16
sub
sbb
adc
add
notl
mov
repnz
negb
and
cmpsb
xchg
xlat
call
shlb
pop
pop
pop
loope
mov
test
sahf
fnstenv
pop
fadds
push
int
enter
dec
xchg
inc
or
push
rclb
frstor
inc
fs
adc
inc
imul
dec
jnp
jge
mov
jp
mov
xchg
push
addb
mov
adc
add
mov
loope
mov
mov
insb
iret
mov
push
pop
rcr
cmp
and
xchg
mov
movsb
jns,pn
sub
lret
xchg
stos
mov
inc
outsb
mov
or
movsb
sub
test
jne
mov
sbb
jns
leave
push
dec
inc
push
mov
arpl
cli
hlt
xchg
sti
dec
sahf
mov
hlt
push
insb
and
mov
xchg
test
in
push
in
xchg
inc
int
inc
pop
out
les
cmp
adc
mov
xor
push
imul
daa
and
rcll
and
addr16
mov
push
imul
xor
cli
mov
cltd
dec
cmp
sub
cwtl
fwait
inc
pop
push
in
and
aad
adc
aas
dec
jbe
aaa
pusha
jns
fidivs
stc
ret
add
es
mov
cmp
jmp
cltd
xchg
fwait
add
jmp
test
fsubl
push
out
mov
addr16
or
lds
pop
sub
mov
movb
fdivr
or
push
sar
sbb
test
imul
daa
fimuls
jmp
cmpsb
inc
and
jae
int3
mov
arpl
sbb
jne
mov
ljmp
sub
sahf
jno
std
daa
in
or
push
mov
fildll
mov
mov
int3
nop
repz
int3
lods
push
mov
je
lret
or
inc
dec
ja
mov
fdivrs
hlt
sbb
int3
lret
sub
mov
jp
into
pop
pop
insb
xor
push
insl
fwait
mov
sub
scas
test
jge
xor
test
sbb
push
sub
sbb
xor
jne
arpl
add
inc
addr16
mov
mov
jns
test
and
inc
test
dec
rcll
pushf
fwait
cmp
out
xchg
xchg
inc
insl
data16
adc
jl
outsl
jae
xchg
mov
adc
pop
push
pop
mov
add
fs
je
fs
push
push
fs
jbe
shrl
dec
cmp
popa
mov
dec
pusha
sub
fbstp
enter
out
xlat
aad
sahf
or
sub
xor
sub
and
cmp
movsb
xchg
pop
adc
mov
hlt
jmp
jae
sbb
int
stos
and
fisubrs
inc
fdivrp
mov
mov
std
mull
stos
dec
fs
mov
push
shrb
lods
test
popa
pop
clc
or
fs
hlt
jle
cmp
mov
std
mov
mov
lock
xchg
cli
in
and
cmc
ror
adc
shl
adc
mov
sub
imul
enter
pop
mov
add
add
pop
sar
jg
or
mov
test
push
popa
dec
sbb
jb
pop
inc
dec
fisubl
call
mov
push
pop
inc
dec
outsb
cmp
dec
pop
mov
mov
adc
mov
ret
sbb
scas
std
pop
inc
xor
cmp
std
mov
pusha
pop
mov
loope
mov
rep
or
enter
dec
insb
fnstcw
cli
sarb
adc
lds
lcall
imul
shrb
daa
jae
sub
inc
inc
push
or
and
push
repnz
pop
xor
cmp
outsb
sbb
pop
lret
int3
cmp
in
ret
loop
jb
push
aam
cmp
int3
jecxz
mov
pop
cmpsl
xlat
loop
or
and
out
scas
out
popf
xor
jnp
mov
shll
test
xchg
push
addr16
out
cli
popa
pushf
or
orb
pop
in
mov
jae
movsl
imul
cmp
jge
mov
mov
outsl
pushf
cli
stc
xchg
int3
stos
call
lods
and
fcoml
dec
repz
out
mov
fsubrs
pusha
inc
stc
push
cwtl
sub
cmpb
mov
ret
stos
mov
inc
in
test
push
pop
push
stos
push
nop
test
jl
lret
addl
pop
icebp
and
repz
mov
arpl
pusha
icebp
xchg
movsb
aam
lahf
loop
shrb
out
and
mov
aad
test
subb
dec
lock
or
negb
in
lods
xchg
test
outsb
popf
mov
xlat
push
xchg
arpl
jmp
std
jno
mov
sbb
dec
iret
mov
add
or
dec
es
test
adc
enter
xchg
cli
add
sbb
sub
insb
pop
rclb
jg
inc
sbb
pop
popa
scas
pop
mov
js
cwtl
lods
fisubs
iret
rorl
xchg
fstps
adc
mov
cmp
dec
lods
je
ret
jae
push
pop
dec
push
jne
mov
std
imul
fnstsw
xchg
xor
lds
std
addb
jge
mov
push
xchg
adc
inc
jg
sbb
lret
push
jg
mov
ret
pushw
sub
jg
jl
cmp
fildll
in
mov
add
stc
xlat
imul
stos
cmp
sbb
add
fwait
in
mov
daa
inc
dec
xchg
adc
in
sub
xchg
push
pushf
rcrb
cmc
xchg
lret
shrl
cmp
push
sub
adc
shrb
arpl
daa
jecxz
aas
dec
pop
imul
sbb
cmpsb
cmp
mov
cli
addr16
push
rclb
dec
aad
idivb
jb
test
sahf
ficoml
rcrb
aas
mov
mov
cli
cmp
aaa
and
repz
fsubr
enter
das
dec
xchg
mov
mov
sbb
jg
rcrb
mov
dec
mov
popf
adc
sbb
jmp
out
xor
arpl
insl
aaa
mov
addr16
mov
cmp
ss
xchg
xor
movsb
dec
sub
and
and
or
lods
xor
inc
imul
fists
and
cltd
outsl
insl
xor
mov
mov
sbb
inc
xchg
sub
fstl
in
adc
ficoms
ret
cmp
daa
and
cli
cld
loopne
enter
sub
jbe
jnp
daa
pop
popf
and
aad
test
fadds
jae
addl
sbb
xchg
mov
or
pop
sbb
adc
xor
out
mov
movsl
fisubrl
out
xchg
and
mov
aas
ret
sbb
jmp
test
push
inc
ficoms
and
jle
paddw
mov
out
dec
adc
and
xor
cmpsb
mov
jo
adc
xor
in
mov
dec
orl
andb
mov
xor
jae
fsts
xor
inc
cmpsb
pop
mov
add
jne
and
and
add
push
les
movsl
fnstsw
push
repz
ret
jnp
outsb
dec
xchg
push
mov
gs
or
rclb
aaa
push
loopne
mov
push
and
dec
fs
or
lods
cmp
pop
std
stos
shrb
and
mov
pop
adc
push
repnz
mov
dec
xchg
push
in
or
nop
decl
mov
push
mov
dec
xchg
mov
sbb
xor
daa
jge
xchg
outsl
js
idiv
in
or
push
iret
sbb
inc
jg
mov
mov
loop
pop
push
xlat
mov
mov
adc
sub
jae
mov
out
cwtl
and
clc
les
in
sbb
nop
hlt
mov
aas
pushf
add
mov
lds
fimuls
inc
or
idiv
sahf
dec
js
jge
int
enter
cmp
push
mov
fmull
add
jnp
inc
ja
ds
and
push
jnp
lds
inc
jo
jmp
push
mov
in
mov
imul
aam
mov
inc
enter
and
mov
xchg
test
or
insl
pop
call
jne
lds
cmpsb
dec
mov
xchg
sbb
adc
push
fs
pushf
push
es
xlat
int3
stos
fiaddl
in
and
fwait
loope
andb
xchg
lods
mov
bound
jbe
mov
push
ret
pop
xor
mov
sarb
aad
mov
outsb
clc
sbb
clc
cmp
push
jno
or
xor
das
mov
shll
sbb
das
cmp
data16
cmp
mov
dec
mov
fldt
sbb
mov
es
movsb
xchg
and
mov
in
jg
push
or
ss
add
jns
mov
cwtl
repz
lahf
jo
jg
mov
mov
sbb
push
push
or
push
pop
jno
iret
xchg
add
fidivs
out
in
and
push
cs
xchg
lods
addr16
dec
and
lock
adc
jp
popf
imul
frstor
push
xchg
inc
mov
xor
mov
jmp
inc
cmp
ss
ja
fwait
test
sub
or
dec
fimuls
and
aaa
inc
pop
in
jp
lock
pop
sub
jbe
into
in
mov
pushf
xchg
mov
insb
xor
clc
ljmp
xor
mov
jg
cs
sahf
adc
push
std
pop
mov
cltd
xlat
sbb
adc
xchg
fwait
lret
add
and
shll
arpl
sbb
aad
pop
xor
out
xor
push
sti
jp
mov
jb
jl
pop
scas
int3
jb
mov
inc
mov
out
add
sbb
dec
or
mov
in
test
push
std
xor
cmpb
repz
clc
cmpl
push
jae
lock
inc
or
lahf
pop
cmp
lcall
nop
push
jg
pop
scas
aaa
ja
mov
sbb
shr
popf
daa
fldcw
movsl
xor
dec
aad
test
xchg
in
dec
ret
lods
and
dec
lea
imul
jecxz
loopne
bound
sub
aaa
push
outsl
insb
iret
movsb
in
xor
xor
out
sub
pop
lods
mov
adc
mov
shrb
stos
adc
xchg
inc
jns
js
adc
addr16
xor
popa
mov
inc
or
imul
mov
mov
shrl
mov
scas
xlat
ret
push
mov
pop
inc
fiadds
or
xor
insb
jmp
add
in
pop
xchg
notb
scas
or
xor
or
or
pushf
ficoms
lods
sbb
test
dec
adc
push
movsl
cmp
mov
in
mov
ret
mov
jp
mov
add
imul
je
inc
ds
and
negl
cmpsb
pop
dec
pop
lahf
or
adc
sub
sub
xchg
adcb
pop
dec
mov
pop
gs
add
add
dec
and
lahf
lahf
mov
ret
sub
das
pop
arpl
sub
push
jmp
adc
pop
or
inc
incl
sbb
pop
int3
dec
loop
sarb
sbb
push
pop
fsubrs
sbb
cmpsl
sbb
sub
mov
sub
outsb
add
data16
cmc
pop
add
lea
push
and
rcll
movsl
xchg
dec
xlat
sbb
adc
dec
push
add
and
enter
or
sub
cmp
push
dec
sbb
adc
mov
cli
mov
or
lret
cmc
add
ret
jo
sub
mov
jle
adc
pop
jg
adc
out
bound
push
inc
je
std
or
inc
add
jle
mov
add
movl
mov
xchg
mov
push
sub
std
mov
xor
test
or
enter
and
sarb
inc
cmp
imul
mov
dec
aas
xchg
mov
lret
adc
cmp
jle
movsl
scas
jg
cmp
xor
enter
and
pop
arpl
repz
loope
fcmovbe
and
fcomps
xchg
adc
jns
fs
outsl
sub
jle
jns
pop
mov
and
fs
les
pop
std
push
pushf
movsb
imul
icebp
rcl
or
mov
sub
or
sub
fs
scas
pop
out
js
pop
test
cld
sub
mov
xchg
fcmovnbe
icebp
lret
and
bound
ret
cli
popa
push
enter
and
std
pop
inc
sbb
xor
leave
fsubrs
add
stc
jmp
jp
mov
loope
jmp
pushf
cmp
insl
out
adc
ficompl
imul
enter
loopne
cwtl
cli
divb
mov
shlb
pop
mov
stc
rcll
jecxz
daa
add
push
addb
leave
pop
dec
pop
pushf
xchg
mov
fdivrs
aaa
mov
add
inc
ljmp
sbb
dec
fldpi
loopne
roll
mov
or
adcl
outsb
paddusw
loop
inc
lods
std
and
aas
mov
xlat
mov
inc
mov
sub
out
cmp
inc
mov
mov
push
loop
cmc
repz
jge
jbe
arpl
sbb
in
insl
negl
cmp
sub
push
inc
test
mov
out
ret
jae
add
add
sub
clc
and
cmpl
stos
sub
daa
clc
loope
daa
pop
loop
inc
add
arpl
divb
pop
cwtl
ja
into
mov
bound
fdivrl
and
xor
iret
imul
mov
fldt
xchg
incl
daa
xchg
push
inc
addb
jle
test
cmp
negl
inc
out
pop
mov
push
inc
stc
or
dec
shlb
nopl
and
in
jl
lds
aaa
mov
idivb
sub
sub
stc
into
fisubs
cmpl
add
out
mov
jge
ljmp
inc
clc
xlat
aas
lahf
or
fldcw
jp
mov
lahf
fldenv
jo
sub
cs
in
pop
out
xchg
int3
cmp
push
sbb
sti
sbb
insb
xchg
push
xchg
loop
lods
xor
fldl
xor
push
testl
flds
sti
into
dec
mov
sahf
lock
mov
dec
ret
leave
add
dec
inc
cld
test
mov
or
into
bound
push
sti
fcompl
ret
in
sahf
ret
inc
dec
mov
add
dec
inc
fldt
ror
iret
mov
jnp
add
shll
jecxz
mov
mov
sub
mov
addr16
scas
rcr
jnp
xorb
push
add
int
daa
popf
pop
jge
lods
mov
movsb
jo
mov
mov
ss
xor
mov
movsb
fcoms
cmpsb
dec
mov
popa
sub
dec
fimuls
jo
xchg
mov
push
cld
test
pusha
add
out
cs
pop
icebp
das
jge
outsb
xchg
out
cs
nop
cvtpi2ps
enter
lods
in
dec
jmp
xchg
sub
push
ss
pop
aas
mov
shrl
fiaddl
dec
aam
loopne
popf
outsb
sbb
or
dec
outsl
dec
ljmp
lock
jne
ljmp
imul
mov
mov
ds
icebp
sub
pushf
sti
jg
stos
outsb
inc
daa
fsubl
imul
xchg
es
out
addr16
fistpll
cmp
push
sbb
xchg
dec
mov
mov
push
addr16
xor
dec
mov
xor
sbb
sbb
mov
add
dec
aas
push
sbb
dec
ds
and
daa
and
dec
mov
pusha
lods
jae
or
pop
mov
mov
mov
push
sub
mov
xchg
rol
pop
pushf
mov
cmpsl
adc
aas
push
cli
add
les
inc
jle
mov
xlat
mov
loope
mov
movsb
jl
pop
movsb
jl
mov
adc
outsl
ret
mov
out
ror
sbb
cwtl
cld
adc
xor
xchg
filds
test
mov
repnz
lret
ret
leave
xchg
cmpsl
sti
inc
fs
stos
lcall
mov
jg
pop
inc
jecxz
xor
scas
sub
push
push
shrb
lret
int
loop
xchg
sub
jo
lcall
add
lock
pusha
dec
mov
and
push
push
xor
inc
inc
add
adc
mov
xor
out
fidivl
xchg
mov
loopne
ja
cmp
out
mov
xchg
dec
mov
add
xor
sub
or
fdivl
sbb
stos
roll
test
movsb
pop
sbb
or
lcall
test
cmp
out
xlat
mov
outsl
adc
popa
ss
inc
insl
ss
dec
adc
cwtl
pop
je,pt
arpl
xor
push
push
push
movsb
cmp
outsl
lret
add
xchg
aam
jno
ud1
and
cmp
jmp
sbb
inc
out
mov
jmp
iret
jle
iret
add
int3
popa
cmpsl
sub
das
data16
je
sbb
mov
arpl
sbb
cli
pop
push
aad
and
xor
add
movsl
and
mov
xor
sbbl
sub
arpl
movsl
mov
sub
sub
lret
cld
jns
out
lret
add
sub
test
sbb
fistpll
hlt
add
loop
dec
aam
push
sti
shll
scas
mov
mov
mov
in
pop
arpl
dec
add
mov
or
in
inc
pop
push
sub
mov
pop
fwait
pop
pop
xchg
mov
jno
sbb
push
fcomi
dec
dec
sub
movsl
pop
bound
out
cmp
out
jecxz
push
jbe
push
dec
testb
and
test
adc
jp
adc
fstl
pop
mov
or
push
and
dec
repz
adcb
cmp
lods
dec
repnz
hlt
push
lock
mov
pop
cli
cli
mov
jg
fwait
lds
mov
push
pop
les
push
mov
lods
adcl
stos
loop
movsb
dec
pop
dec
cmpsl
or
mov
loopne
dec
jle
push
out
xor
fmul
cmp
fildl
mov
xor
cltd
rorb
int
cmp
leave
xchg
mov
pop
inc
cmc
lret
loope
sbb
js
mov
pushf
fists
shrb
lds
hlt
icebp
push
loop
pop
out
add
scas
into
mov
mov
inc
xor
add
out
xor
xor
xor
push
lret
jmp
mov
rorl
test
xor
in
push
sub
repz
sub
insb
sbb
xchg
xchg
mov
add
xor
or
mov
push
imul
xchg
sbb
sub
fcoml
pop
data16
adc
or
fwait
cli
xchg
popf
xchg
hlt
lods
rcl
inc
fucomip
scas
sub
xchg
leave
sbb
jbe
idiv
int
xlat
pop
sarb
jp
mov
jns
scas
icebp
gs
pop
xlat
imul
clc
lret
hlt
je
sub
rol
mov
inc
mov
jb
mov
xchg
sub
inc
jbe
lock
cmp
test
xor
or
icebp
adc
mov
fstl
dec
scas
pusha
xor
jnp
testb
and
sub
add
jbe
int
xchg
movq
test
in
fcoms
inc
pop
dec
cli
cmp
adc
mov
fstpt
mov
and
cmp
pop
xchg
mov
aam
pusha
stos
xchg
int
enter
xchg
add
pusha
mov
scas
push
mov
and
dec
les
mov
test
cmpb
fistpl
dec
outsb
frstor
stc
pop
add
jbe
dec
mov
push
scas
or
std
pop
push
int
es
jnp
out
cmpsl
push
push
inc
sahf
inc
ja
inc
pop
jge
test
xor
loopne
dec
mov
loopne
fdivr
mov
addr16
xchg
push
das
inc
xchg
sbb
out
out
mov
out
inc
add
push
jg
lahf
lods
repz
int3
movb
mov
fdivr
into
in
and
loope
xchg
leave
subb
aaa
imul
fstpt
xchg
cpuid
adc
add
je
sbb
mov
xor
cmc
pop
sar
enter
push
and
lds
jbe
pusha
push
fidivs
stos
dec
push
sbb
xor
and
rorl
mov
lods
into
rclb
jge
and
shr
mov
jae
push
push
mov
adc
repnz
sbb
repz
or
mov
into
cmp
jge
sbb
mov
fdivp
cmp
sti
test
inc
leave
call
add
jns
mov
fnclex
push
cmpsb
sahf
aaa
sbb
test
mov
out
and
add
clc
push
repz
pop
aas
adc
fcmovbe
or
gs
and
add
pushf
aad
adc
pop
incb
mov
pop
push
and
enter
cmpsb
xchg
sbb
das
mov
xchg
add
fisubl
scas
stc
fiadds
mov
dec
jb
js
sub
push
enter
arpl
lcall
sbb
cltd
sbb
sub
sub
mov
push
xchg
call
inc
mov
addr16
and
out
mov
pusha
dec
xor
mov
mov
stos
push
mov
xor
mov
imull
add
ret
pop
aam
sub
mov
mov
int3
sbb
aad
xchg
jno
fistpll
mov
dec
aaa
iret
inc
popf
sbb
jecxz
div
std
mov
call
lds
rcrl
sahf
je
andb
cwtl
jl
and
cmp
dec
mov
push
fwait
test
or
jbe
sbb
es
cmc
jl
maskmovq
negl
rorb
mov
out
lods
shll
aam
ja
pop
push
pop
divb
lock
rclb
add
dec
and
repz
cmp
inc
out
push
imul
sbb
and
cld
repnz
and
out
sub
xor
inc
out
xor
jg
out
adc
lcall
lds
mov
xorb
icebp
aam
dec
popf
mov
out
xor
pop
in
adc
sbb
adcb
lods
and
stos
popa
in
and
sbb
fdivrs
jae
jns
incb
out
mov
js
scas
ds
pop
mov
popa
mov
ja
add
cmp
jle
arpl
insl
out
in
and
push
inc
or
std
push
push
jl
jo
cmp
aaa
push
pop
mov
shrl
loope
dec
inc
cld
pop
sarl
xor
in
dec
loopne
addb
adc
sub
loop
clc
js
out
repz
mull
mov
xchg
cmp
int3
mov
push
xor
iret
adc
xchg
dec
and
xor
cmp
mov
std
push
cs
jae
hlt
stos
std
out
ret
roll
dec
jae
ret
lock
negb
pop
call
xor
dec
sbb
rcrl
cmp
push
pop
mov
out
cs
int
jle
inc
push
and
mov
lds
or
test
pop
adc
sti
xchg
loop
push
pop
fs
jno
or
stos
inc
jb
jg
lret
fistpl
lods
in
add
insl
sti
loop
fadds
xchg
nop
fidivrl
xchg
xchg
sbb
sub
xchg
push
insl
clc
mov
push
and
mov
mov
dec
fildll
popa
mov
cmp
repnz
inc
dec
sbb
das
push
push
or
fiaddl
lock
push
imul
mov
aad
mov
daa
aaa
cmpsl
inc
fbstp
xchg
mov
lds
fisttpl
adc
xchg
pop
pinsrw
jg
popf
out
sbb
sub
sub
mov
mov
cmc
dec
mov
lods
adc
loope
scas
jle
sbb
andb
dec
adc
pusha
mov
xor
scas
inc
pop
imul
mov
push
loopne
push
filds
xor
jnp
inc
mov
push
pop
int
inc
and
push
mov
outsl
mov
mov
gs
and
cmp
flds
add
mov
cmp
nop
aaa
test
sbb
fadd
xchg
inc
bound
pusha
xchg
add
enter
lret
cmpb
out
in
mov
aaa
cld
jl
shll
mov
sahf
cmp
insl
aad
xor
add
pop
test
roll
mov
mov
mov
dec
xor
stos
sbb
xor
xchg
ss
test
fbld
hlt
inc
pop
xchg
aam
mov
jo
fcoml
mov
adc
mov
ss
lahf
fwait
inc
sbbl
int
push
test
in
cli
sbb
rolb
pop
loopne
mov
adcl
mov
inc
dec
das
cmp
mov
push
lea
dec
or
cmpsl
ret
push
jae
mov
pop
jns
pop
inc
push
shll
inc
dec
daa
add
and
jp
cmp
jae
aaa
lock
add
mov
cwtl
scas
cwtl
xor
xchg
insb
out
xor
adc
imul
sub
push
dec
xchg
inc
cld
mov
cmc
test
cmc
cmp
xor
adc
xor
aam
repnz
shl
inc
or
stc
int
xor
fidivrl
sub
iret
bound
popf
scas
enter
insb
movsb
int
movsl
mov
cmpl
dec
jecxz
mov
lock
pop
pop
xchg
xchg
push
pop
cmpsb
loopne
jb
jmp
xchg
bswap
mov
scas
out
add
aad
pop
mov
and
jl
loopne
das
xlat
jno
xchg
test
fbld
fildl
push
mov
popf
roll
out
ret
mov
adc
pop
aas
stos
mov
mov
leave
cmp
mov
mov
into
hlt
dec
nop
jno
sahf
ja
loopne
dec
xchg
or
lea
fisubs
enter
xchg
pushf
popa
jns
jae
mov
sbb
inc
jmp
ror
rol
pop
test
mov
adc
lret
mov
inc
xor
mov
hlt
idiv
adc
std
cmp
daa
out
dec
jecxz
lahf
jne
add
test
aaa
lods
movsl
and
pop
mov
inc
push
push
inc
add
aas
out
adc
sub
sub
xor
pop
nop
mov
push
das
lods
sub
movsb
ret
lea
sar
in
fmull
scas
adc
adc
push
in
in
pop
or
or
andl
pop
jno
add
fs
cmc
jmp
push
push
fldl
jg
mov
movaps
add
xchg
and
out
pop
in
stc
out
push
mov
add
inc
push
or
repnz
pop
inc
jg
loop
lock
jbe
add
xor
and
insl
cli
popa
iret
bound
jae
movsb
adc
imul
andl
loop
cmp
pusha
leave
adc
adc
sub
and
inc
push
or
stc
cwtl
movsl
and
aaa
add
cld
pop
ficoms
sbb
sahf
shrl
ljmp
lods
push
lcall
sub
xrelease
cwtl
test
sub
sbb
out
in
adc
ja
outsb
shl
add
lds
into
pop
xchg
xor
sbb
out
push
mov
arpl
xchg
outsb
int3
mov
push
push
ja
and
mov
mov
test
pop
or
cmp
add
jmp
push
std
xchg
or
push
pusha
push
sub
fldcw
js
inc
jg
sti
xchg
aad
shlb
iret
rol
or
cmpb
ljmp
jmp
jb
xor
adc
or
adc
push
fadd
std
mul
repnz
or
sahf
cmp
incl
and
sub
and
cli
or
out
mov
fcomps
fwait
xchg
std
push
insb
xor
fdivr
lds
sbb
sti
lock
add
je
adc
pop
jno
addr16
test
test
popa
mov
mov
sbb
inc
sub
cmp
insb
ja
add
or
mov
push
mov
pop
idivb
jge
xchg
imul
push
xchg
adc
push
sbb
loopne
les
push
pop
js
mov
xchg
sbb
cmpsl
adc
sbb
mov
and
stos
or
mov
xchg
jb
mov
mov
xor
fdivrl
dec
icebp
sarl
stc
xchg
mov
dec
shlb
fcoml
fisubrs
stos
mov
nop
ljmp
shlb
xor
ja
jg
mov
mov
loope
bound
cmp
pop
xlat
add
fsts
shrl
scas
dec
pop
sbb
or
jle
xchg
loop
inc
repnz
scas
stc
mov
fnsave
out
push
pusha
dec
sbb
out
pop
int3
pop
sub
xchg
push
jbe
jecxz
mov
mov
push
push
fcomip
lcall
repnz
jne
les
push
fldt
mov
dec
pop
in
subl
xchg
and
sbb
lahf
ja
sarb
or
xchg
shrb
push
aas
inc
xor
mov
rorb
add
jns
sub
xchg
mov
jp
outsb
lock
cmp
mov
loop
sbb
mov
fildll
lods
std
outsb
add
mov
test
out
adc
mov
nop
mov
in
jno
cli
testb
and
mov
cli
insl
mov
xor
xor
adc
jno
add
cmc
push
jo
ret
pop
jge
jbe
xchg
sub
dec
and
xor
jmp
mov
cmp
adc
notl
jmp
push
loope
xlat
popa
mov
mov
adc
insl
sbb
adcb
sbb
mov
jg
jecxz
mov
jge
dec
cld
in
std
aaa
jb
mov
xor
cvtpi2ps
xchg
ret
cli
push
arpl
jb
mov
les
jae
jnp
dec
xchg
xor
cmp
add
mov
jns
mov
mov
mov
adc
adc
mov
outsl
cmp
xor
cmpsl
fimull
cmpsl
es
jae
rcrl
or
aad
xchg
sbb
inc
aas
and
dec
test
push
xor
cmp
mov
hlt
ret
or
ja
imull
xchg
xchg
aad
mov
add
insl
rcrb
cmp
into
cmp
leave
out
adc
cmp
nop
sar
das
sub
fnstcw
pop
jge
cmpsl
enter
imul
test
cmp
jo
lret
mov
and
mov
loop
mov
dec
xlat
sbb
fstpt
cltd
sub
test
xor
cmp
mov
dec
xchg
jnp
or
push
inc
push
xchg
movsb
out
call
hlt
sti
jle
movb
loop
std
out
std
add
sub
std
add
pushf
and
mov
stc
cwtl
leave
ja
ret
or
subl
pop
sbb
lods
or
and
pop
jmp
lcall
mov
sahf
xchg
pop
test
and
dec
paddw
sub
sub
push
mov
cs
push
pop
lock
scas
push
sarl
and
jnp
std
lock
pop
loope
adc
mov
cmp
shlb
jle
xchg
aas
mov
cmp
jp
jg
mov
push
lds
pop
leave
xor
cmp
or
and
icebp
scas
pushf
dec
xor
push
in
xchg
add
pop
in
in
js
ss
scas
insl
fldl
shrb
arpl
pop
mov
and
pop
das
inc
clc
sub
cmp
mov
jns
test
insb
mov
xchg
push
outsb
ret
sbb
std
std
jecxz
mov
mov
inc
cmp
sbb
iret
stc
xlat
daa
mov
dec
movl
sti
dec
or
mov
push
sbb
ss
jmp
aad
lods
fwait
pushf
cmp
mov
push
ds
loopne
in
pop
in
cs
mov
or
sub
and
adc
aam
sbb
int3
add
arpl
pop
push
pop
test
lods
ja
push
and
insl
adc
ds
mov
jmp
add
test
inc
sub
rcrb
sub
fldcw
xchg
enter
or
jle
dec
hlt
xor
loopne
xor
ds
into
push
pop
push
sbb
shlb
add
inc
jge
jge
jne
js
mov
in
test
jnp
in
in
call
imul
mov
shll
aad
fnstsw
iret
push
mov
push
adc
fcmovu
mov
and
popf
add
mov
fdivl
movsl
xchg
test
rol
lock
or
clc
shr
addr16
lods
jmp
loopne
andb
stos
fmuls
enter
or
jb
shrl
add
cltd
mov
stc
testl
movsb
in
push
out
push
inc
pop
movsl
mov
xchg
std
xchg
mov
inc
or
sub
insb
repz
iret
add
inc
dec
mov
add
xchg
movsl
call
imul
xor
sbb
adc
daa
popa
lds
test
mov
imul
cwtl
and
popa
lds
mov
addb
or
mov
clc
lret
test
filds
adc
lock
push
iret
test
mov
mov
call
movsl
rorb
in
sbb
rclb
cmp
lret
outsl
and
mov
mov
inc
mov
xchg
test
rcrl
stos
call
jnp
loop
es
or
dec
mov
sbb
cmpsl
fcmovbe
fwait
push
lea
sbb
leave
ret
mov
add
adc
cmp
lods
rclb
or
insl
xor
and
mov
jecxz
jecxz
xor
or
inc
or
loope
movsb
inc
cs
lret
mov
ljmp
rcl
ss
or
xchg
cwtl
xchg
test
popf
add
adc
pop
cmp
aam
and
je
stos
enter
push
lcall
sub
loope
and
mov
loopne
rorl
xchg
cmpl
push
sti
cmpsl
and
out
sbb
lret
add
movsb
int
sti
mov
sbb
add
sarl
push
jmp
cwtl
push
cs
out
add
out
dec
xchg
test
xchg
insl
dec
mov
push
cmp
out
lds
dec
inc
push
clc
mov
shll
in
push
sbb
cmpsb
fimuls
adc
push
and
in
push
lods
sub
push
clc
jbe
mov
jl
or
pop
cmpsl
stc
data16
xor
lea
stos
stc
clc
jmp
mov
and
sub
pop
push
inc
push
lods
mov
sub
xchg
sbb
pop
mov
and
mov
repz
test
stos
in
lds
mov
adc
iret
pop
lahf
push
cmpsb
pop
in
dec
test
icebp
jo
aaa
rolb
pop
jle
mov
fwait
dec
pop
cltd
push
gs
icebp
and
lret
or
xor
hlt
xchg
add
xchg
xlat
xchg
push
inc
and
stos
mov
add
add
mov
push
jmp
ret
pop
js
testb
and
cmc
pop
rclb
clc
cmp
test
or
int
shrb
ret
leave
sbb
or
xor
lods
push
in
jae
sbb
cmpsb
cli
sti
imul
cli
cmp
cmp
jge
fiaddl
out
orl
ds
test
cmpsl
xorl
push
or
push
cmpsl
and
or
int3
inc
fndisi(8087
rcll
sbb
mov
ljmp
lret
out
jbe
lcall
xor
lret
and
or
mov
inc
inc
xor
sbb
inc
cmpl
dec
pop
sub
in
shr
out
dec
popf
fisttps
out
xchg
out
lods
aas
out
cwtl
mov
or
imul
cmp
les
jbe
push
jle
dec
xchg
xchg
push
sbb
dec
push
repz
jno
iret
push
sarb
dec
decb
dec
jne
push
mov
mov
cmp
lock
repz
mov
push
or
sub
popa
andl
and
sbb
lds
sahf
pop
sahf
lea
loop
push
adc
sbb
adc
mov
sbb
imul
sbb
cmp
repnz
push
mov
faddl
popf
pop
into
fstpl
sub
cmp
test
idivl
scas
inc
cwtl
lcall
dec
xchg
push
jmp
adc
pop
sub
mov
or
lret
cmp
out
push
dec
push
test
ret
jb
or
mov
movsl
jge
add
inc
adc
adc
jns
sti
dec
or
pushf
inc
imul
inc
mov
shr
xchg
push
das
jo
mov
movsl
lcall
addr16
inc
cmpsl
xor
stos
add
add
or
lcall
sbb
dec
inc
or
pop
jge
sbb
lods
ret
stos
or
mov
aam
xor
cmpb
cltd
pop
xchg
insb
test
and
or
ret
jns
test
lock
hlt
fwait
inc
test
add
negb
mov
sti
sub
divl
test
ficoml
adc
cmpsl
sub
pop
ret
shll
insb
test
pop
sbb
stos
xor
jecxz
push
lock
cmp
mov
int
mov
subb
dec
dec
movsb
fbstp
aam
lea
ss
xor
mov
das
mov
dec
lret
das
pop
pop
dec
sub
lock
rcrb
inc
movsl
int
mov
iret
loopne
cli
adc
pop
cmp
aas
int
jae
sbb
sbb
mov
sub
mov
call
iret
incl
push
notb
lcall
pop
sub
jns
pop
test
sub
lods
scas
aaa
in
add
mov
lret
pop
test
sub
xchg
ds
orl
jmp
cli
shlb
sbb
sub
rcrb
into
repz
out
enter
inc
ret
mov
push
jno
add
and
push
out
or
lods
adc
cmc
inc
outsl
cmp
inc
cld
lods
jg
scas
xor
push
and
mov
popa
imul
stos
outsb
pop
or
mov
pop
mov
jmp
shrb
iret
adc
inc
cmp
or
inc
mov
lret
mov
cwtl
jle
lret
iret
sbb
pop
test
fwait
popa
mov
iret
inc
push
jmp
sub
mov
sahf
cli
push
aas
xchg
sbb
sub
lock
hlt
outsb
xorl
ffreep
sbb
dec
cmp
daa
aad
adc
push
cs
iret
and
test
pushf
xor
repz
jnp
pop
int
lods
inc
pop
adc
push
not
fimuls
imul
inc
fsubs
pop
aad
insl
rcl
divb
sub
ret
pusha
xchg
adc
hlt
cs
mov
push
scas
ret
xchg
iret
fnstcw
cltd
leave
inc
icebp
lcall
or
into
add
arpl
mov
rol
les
and
lock
bnd
or
outsb
mov
add
sbb
jne
mov
xchg
in
rorl
lea
xchg
fsubp
xchg
xchg
js
push
and
call
das
mov
mov
or
dec
out
push
mov
add
jle
push
mov
sub
xchg
data16
loop
aad
xchg
sub
ret
adc
ficompl
fiaddl
dec
xchg
pusha
stos
pop
add
subb
lret
dec
push
adc
ss
fbld
jnp
pop
adc
imul
or
add
mov
insb
fists
repz
lds
call
add
lock
jns
sbb
aam
js
cmp
jb
in
mov
orb
lods
mulb
dec
cli
jp
xchg
imul
cmpsb
sbb
jp
mov
adc
ljmp
mov
jb
jbe
jmp
lret
xor
mov
push
shrb
cmp
push
pop
scas
jae
inc
and
and
icebp
inc
dec
xchg
in
cmp
fisttpll
int
adc
stc
movsb
push
pop
sbb
mov
add
cmpl
out
jnp
cli
inc
cmp
fadd
mov
in
xchg
mov
inc
in
dec
mov
stos
cs
arpl
std
fstps
adc
pop
icebp
iret
jg
and
mov
and
pop
lea
dec
fucomi
inc
inc
ficoml
pop
mov
push
das
cmovns
inc
jne
mov
sub
sbb
dec
in
inc
in
insb
pop
mov
cli
mov
sarl
adc
imul
cmp
mov
ret
xor
std
xchg
adc
nop
fs
jg
cmp
adc
xor
outsb
fscale
add
push
shrb
scas
cmp
cmpsb
adc
outsl
repz
mov
stc
pop
pop
test
shll
in
or
pop
pop
pop
test
js
mov
xchg
sahf
gs
mov
clc
or
mov
push
out
xor
icebp
repz
clc
lds
push
pop
and
lock
dec
das
jno
sarb
ficoml
adcb
jle
movl
testb
adc
xchg
sub
cmpsb
scas
aad
and
minps
lcall
adc
jnp
sbb
icebp
out
or
dec
ja
push
and
pusha
fldl
lret
or
and
dec
into
jae
mov
ficompl
mov
mov
ror
leave
xor
jns
shlb
mov
lcall
test
mov
cwtl
gs
push
arpl
dec
roll
mov
aad
jno
xchg
fcoml
sub
jns
arpl
jb
sbbl
int3
lds
dec
lods
lods
imul
mov
mov
xor
ss
cmp
sbbb
rorb
mov
mov
pushf
jns
xorb
cmpsb
sbbb
push
xchg
jne
jl
jno
bound
mov
inc
bound
outsl
orl
add
leave
je
jnp
nop
adc
cmp
sub
mov
cmpsl
dec
inc
xchg
jnp
mov
and
out
cmp
jg
test
xchg
and
mov
or
imul
and
hlt
ror
shrb
push
cmp
out
call
mov
cmp
imul
push
pop
inc
add
ss
jne
imul
ss
fs
mov
shr
lock
xchg
test
jmp
cmp
les
cwtl
in
sbb
faddp
push
mov
xchg
pop
jle
out
jl
jne
sub
xchg
jns
adc
int
pop
push
push
sub
mov
dec
mov
fwait
ljmp
mov
jge
dec
div
cwtl
pop
xlat
shr
adc
aaa
stos
sti
push
in
mov
xor
inc
shrl
xchg
cli
mov
or
adc
jmp
mov
xchg
orb
xchg
mov
mov
call
lds
xchg
mov
cmpsl
or
sbb
cwtl
scas
jno
cmp
jge
insb
lock
lods
jle
clc
push
aam
lret
pop
or
pop
pop
xor
and
xchg
call
call
icebp
test
movsb
fcomps
adc
inc
dec
push
push
sub
push
xchg
aad
xchg
sbb
loopne
mov
andl
test
ss
std
pop
stos
xlat
jno
xor
notl
mov
lret
mov
xlat
mov
jns
imul
jle
sbb
pop
call
dec
pop
jnp
sub
rep
push
pop
btr
aas
jmp
popf
rcll
sub
fildll
dec
lock
cmpsl
mov
mov
sbb
fnstsw
pop
xlat
push
cwtl
pop
in
sahf
out
dec
or
inc
insb
adc
sarl
and
out
fadds
ror
enter
lock
add
jo
dec
and
push
inc
or
pop
jb
mov
test
pop
push
stos
sbb
and
jae
out
lds
lret
inc
inc
loopne
pop
push
xchg
nop
pop
xor
push
pushf
lock
pop
mov
mov
or
js
push
mov
test
mov
data16
rclb
aaa
fs
mov
in
xor
sub
insb
jge
fs
xor
jecxz
adc
add
or
movsl
fldenv
sub
push
dec
pop
xchg
xchg
aam
lret
push
cmpsb
cmpsb
pop
or
jl
pushf
ljmp
jb
mov
jo
inc
cld
xlat
pop
nop
xor
outsb
adc
adc
gs
mov
testb
icebp
pop
mov
mov
cmp
jae
mov
adc
pop
push
cmp
inc
jmp
adc
xchg
testb
cld
neg
lcall
movsl
insb
ret
stos
rcr
sbb
int3
mov
push
mov
xor
cltd
fs
call
subb
ret
aad
and
imul
sub
ss
push
divb
clc
xchg
dec
imul
jge
mov
shll
not
aad
and
lock
scas
pop
mov
stos
sbb
cmc
fisubs
mov
inc
and
inc
outsb
rorb
lahf
ja
mov
push
xor
mov
fidivs
and
sti
pop
adc
ret
dec
mov
and
pop
jbe
jns
dec
bound
fstl
rolb
inc
dec
mov
loope
adc
sbb
sub
jbe
adc
rcl
sub
movsb
push
mov
push
cltd
xor
inc
pop
inc
push
push
mov
push
dec
lea
mov
xchg
xlat
cmp
fnstsw
lea
lahf
fs
cmp
sub
pop
push
movl
xchg
fidivrs
push
test
push
jle
xchg
ja
jecxz
aaa
mov
jns
ror
push
dec
xchg
imul
not
and
jg
je
push
ror
jg
dec
jb
imul
push
dec
mov
sbb
insl
mov
pop
ljmp
add
cmp
cmp
xchg
jge
scas
les
sbb
data16
pusha
or
data16
loop
and
sub
sbb
dec
mov
xchg
sbb
or
andb
push
push
out
adc
cwtl
mov
jg
xchg
sbb
dec
imul
push
test
pop
sahf
shl
cmp
js
insb
or
orl
lea
rorl
push
push
fs
shl
mov
dec
fistpl
int
pusha
dec
outsb
xchg
mov
pop
aas
fidivl
sbb
inc
pop
insb
sbb
push
loop
add
lcall
inc
mov
cmp
repz
mov
outsb
orb
leave
or
jns
sub
call
pop
mov
repz
xchg
sbb
int3
stos
dec
leave
jmp
fldl
aas
and
addr16
and
lods
pop
xchg
mov
mov
mov
or
sub
and
lds
sbb
bound
jg
adc
in
cs
cmpsl
pop
adc
or
cmp
or
fisubrl
adc
push
cmpsb
lods
notb
aam
add
push
cli
std
push
ror
jno
scas
mov
or
inc
out
ds
adc
dec
inc
inc
mov
xchg
add
mov
add
xor
ret
lods
adc
lods
cmc
adc
or
xor
je
outsl
jp
sub
out
push
mov
addr16
ljmp
add
pop
sbb
loopne
test
push
mov
stos
xchg
fs
mov
or
add
imul
loopne
push
jp
int
and
inc
push
and
xchg
inc
mov
sbb
mov
sub
pop
inc
or
mov
push
or
mov
popa
ss
jmp
inc
aad
add
fs
mov
clc
mov
pop
lock
pop
aam
mov
add
lret
ret
dec
daa
push
adc
sub
ds
enter
jmp
ret
iret
dec
leave
push
jge
adc
rolb
push
inc
xlat
jns
fimuls
int
mov
loopne
jge
lahf
xchg
pop
dec
lret
xchg
mov
lds
sahf
xchg
dec
or
jns
adc
inc
fidivrs
sbb
mov
cltd
idivl
mov
pop
sarl
pop
xor
dec
cmp
in
int
dec
outsl
loop
loopne
push
sbbb
xor
xor
xor
aaa
mov
lods
imul
imul
xor
out
int3
es
mov
pop
push
faddl
mov
sbb
and
push
lret
in
fs
xchg
mov
xchg
xchg
pop
lahf
push
test
jl
sbb
xor
pop
fsubrl
enter
fwait
fs
cmpsb
or
add
inc
test
lods
pop
in
daa
mov
insb
and
fcmovnu
sbb
mov
cmp
das
xor
jl
xor
mov
out
setne
sbb
jp
hlt
lea
hlt
lock
jbe
mov
call
adc
mov
pop
add
jne
mov
xor
sahf
loope
les
inc
jne
movsb
addb
mov
jmp
test
mov
lret
ja
in
cmp
cmp
fmuls
lret
and
dec
dec
cltd
daa
sub
xlat
testl
mov
fisubrs
or
leave
out
and
mov
and
mov
xchg
cmp
js
dec
cmp
aad
arpl
xlat
out
pop
cmc
fcmovnu
cmp
jg
outsb
rclb
sbb
ret
scas
testb
sbbl
cmp
xchg
sarb
out
int3
jnp
ret
mov
nop
int
xlat
jbe
loopne
push
inc
daa
xchg
enter
mov
jl
cmpsb
int
and
outsl
add
mov
lret
mov
pop
idivl
cltd
mulb
arpl
push
push
sbb
repz
fwait
pop
call
test
mov
inc
push
mov
lods
scas
cmp
mov
lods
cmp
mov
pop
ret
mov
xor
or
xor
jb
into
lret
sbb
pop
jp
lret
js
rorb
push
insb
push
cld
das
rcll
ja
jmp
push
dec
lds
pop
test
adc
lods
cmc
push
fmull
ficompl
jecxz
ljmp
sbb
iret
push
mov
lods
cmpsl
mov
mov
inc
and
dec
outsb
jne
pop
ja
pop
loop
jo
loopne
inc
ja
gs
bound
jnp
rorb
addl
xchg
mov
mov
dec
adc
jne
repz
shl
insb
loop
push
out
mov
testl
cmpsl
push
aam
rorb
scas
adcl
bnd
jns
mov
cld
adc
adc
xlat
add
int
xchg
and
shrl
sbb
mov
mov
bound
sub
clc
jb
mov
mov
insl
test
imul
jbe
clc
in
pop
fistl
nop
mov
push
jae
shlb
or
and
pop
inc
xchg
rcrb
std
xchg
mov
xchg
jecxz
jb
jmp
push
aaa
sbb
add
cwtl
pop
sbb
fs
daa
arpl
push
test
xor
insl
out
dec
lds
xchg
dec
mov
shrb
outsl
int3
cmp
jae
xlat
and
ret
int3
incb
ret
outsb
jmp
dec
and
jae
or
into
aas
sub
fisubrl
pop
sub
inc
aad
jno
lock
fmuls
add
jl
insb
cli
stos
jno
pusha
scas
push
fsubrs
icebp
xchg
outsb
scas
xchg
popl
jecxz
add
add
subl
inc
mov
mov
popf
lock
test
stc
in
xor
mov
xor
or
ficoms
dec
dec
push
and
cmp
insb
inc
dec
push
test
xchg
mov
push
xor
inc
iret
xchg
shld
xlat
repnz
les
scas
mov
mov
jmp
xchg
push
movsl
mov
aad
loopnew
movq
pop
cmp
imul
test
loopne
lcall
push
push
xorb
pop
cli
adc
xor
cltd
cmp
push
sub
mov
jl
mov
ja
cltd
jge
mov
push
clc
cmpsl
jmp
push
xor
das
out
push
jg
popa
xchg
push
enter
sahf
iret
add
jb
pop
addr16
ret
pop
loope
ljmp
add
sub
mov
pop
andl
imull
push
xor
call
ja
scas
jmp
xor
push
jns
ret
push
add
ret
pop
lret
stos
push
sarb
mov
ficompl
outsl
push
int
jmp
int3
cmp
sbb
nop
int
pop
and
push
push
aaa
and
mov
int
into
repnz
gs
jge
lret
jno
xchg
xlat
add
xchg
das
stc
addr16
jb
rolb
mov
jns
xchg
enter
imul
mov
sbb
pop
fimull
lock
sub
fwait
xor
js
adc
sub
and
jae
sbb
testl
sbb
repz
aaa
add
lret
xor
xchg
sbb
push
stos
js
outsl
pop
inc
stos
psubusb
mov
popa
pop
ljmp
lea
jno
out
cmc
pushf
pop
lds
mov
ds
push
push
repnz
js
popf
push
pushf
sbb
inc
ds
mov
jl
xchg
hlt
clc
sbb
xor
add
jo
subb
xchg
mov
dec
insb
jae
mulb
and
push
scas
outsb
sub
or
out
addr16
outsl
adc
jae
dec
and
jbe
push
ss
xchg
int
jmp
xchg
sbb
mov
adc
je
adc
mov
ret
iret
sbb
lret
dec
insl
cmpsb
in
loopne
out
jg
leave
repnz
fstps
or
xor
mov
testl
rorl
jnp
dec
addr16
insl
xchg
cmpb
sbb
dec
std
ss
faddp
push
jae
xchg
push
movsb
sub
call
pop
inc
aam
push
popf
fbld
out
jae
insl
shrb
rcrb
cs
fucomip
mov
lds
push
dec
fldcw
movsl
test
jns
jg
or
cmp
xor
lock
repnz
mov
sub
testb
test
nop
adcb
ja
dec
and
mov
pushf
push
sbb
mov
lret
adc
xchg
push
adc
stos
fldt
cltd
iret
cmpsb
sbb
lock
push
ret
sub
aaa
push
cld
popf
pop
inc
stos
rol
mov
xchg
mov
cltd
xchg
es
es
xchg
xor
mov
pop
subb
mov
cwtl
xchg
dec
dec
fstps
or
push
ljmp
lods
scas
cmpsl
jle
mov
and
fnstcw
iret
ja
negl
or
dec
scas
xlat
daa
enter
jno
cmpsb
push
pushf
das
popf
insl
icebp
pop
lcall
jl
xchg
js
cmp
dec
rcl
out
dec
xchg
inc
or
xor
shrb
add
adc
sahf
push
dec
lock
mov
adc
sbb
lcall
outsb
sub
jecxz
mov
jmp
loop
mov
or
or
ss
push
sti
pushf
dec
inc
mov
stc
outsl
mov
out
mov
jecxz
shl
call
sub
xor
cmp
movsl
cmp
ss
mov
arpl
inc
das
jmp
popa
pushf
jg
test
stos
jg
iret
push
push
push
push
mov
inc
xchg
into
or
ret
gs
xor
add
adc
dec
ljmp
xchg
mov
loopne
push
out
inc
push
dec
mov
add
stos
dec
out
pop
mov
or
sub
ljmp
jb
mov
inc
sarb
movsl
int
dec
pop
faddl
adc
pop
sbb
stos
imul
inc
icebp
popf
xorb
and
and
and
adc
je
jp
mov
fisttps
jl
cltd
call
shr
popf
dec
pop
nop
test
cmp
ss
leave
mov
mov
out
jl
cmp
neg
mov
and
fisttpl
pop
dec
movsb
daa
dec
ja
jae
dec
ljmp
les
imul
sub
sub
test
daa
iret
jmp
data16
xor
dec
ljmp
adc
add
pop
aaa
dec
sub
pop
mov
int3
popf
int
and
std
and
and
mov
aas
xchg
les
loop
pusha
out
mov
push
jmp
les
or
es
sbb
int
jl
xchg
imul
ret
add
aas
rcrl
cmp
lahf
jecxz
es
sub
xlat
or
pushf
scas
mov
into
xor
mov
push
aaa
js
clc
out
sbb
fnstcw
cmp
mov
pop
stos
mov
ljmp
mov
adc
pop
xchg
pushf
mov
sbb
pop
shll
fdiv
mov
xor
dec
sbb
xor
dec
aas
shlb
sti
cmp
xchg
sarb
and
jne
sbb
xchg
pop
js
hlt
into
fwait
or
or
sub
add
jg
rorl
dec
adc
mov
xor
sub
movsb
insl
xchg
sub
push
insb
lret
enter
dec
mov
aas
pop
inc
and
push
shlb
lods
testl
imul
out
fwait
out
xor
cmp
xchg
lock
ss
outsl
test
add
push
cs
divl
mov
adc
testb
xchg
mov
hlt
enter
mov
stc
inc
movsb
sahf
test
xorl
repnz
pcmpgtd
mov
pop
test
clc
mov
mov
inc
jmp
jnp
out
mov
cld
add
addr16
ret
aas
push
lock
movsb
popl
or
cmp
add
ja
shrb
xor
stc
lcall
dec
in
daa
sbb
fmuls
mull
xchg
cmp
mov
hlt
cld
lds
sub
cs
cmp
aad
ds
pop
std
stos
dec
sbb
ds
mov
push
icebp
scas
adc
div
dec
loope
add
jno
mov
mov
xchg
jno
lds
mov
lret
and
shll
inc
rcll
pushf
leave
leave
mov
pop
mov
sahf
negl
mulb
dec
lea
sub
push
adc
sub
sbb
mov
mov
adc
cmpl
dec
push
xor
in
cmp
adc
xor
shrl
mov
push
je
sub
jno
jb
mov
arpl
movsl
xor
nop
imul
repz
pop
scas
call
sbb
xor
lret
inc
jmp
dec
inc
pusha
sti
fnsave
mov
fbstp
imul
movsb
push
insl
xor
fbld
mov
cmp
inc
xchg
sub
out
out
or
loopne
and
into
jl
push
jb
aaa
scas
stos
or
or
pop
mov
outsl
imul
jnp
jbe
push
dec
test
fstpl
stos
sub
push
or
bound
mov
jnp
hlt
or
shrb
mov
dec
add
sahf
xor
sbb
add
cmpsb
fwait
jb
pop
mov
mov
and
push
dec
push
push
mov
pop
jecxz
or
jecxz
push
add
xor
cmovb
pushf
mov
addl
sarb
ds
cwtl
add
jbe
stos
scas
lods
stc
lock
hlt
jle
push
push
lret
fcompl
stos
add
ds
addb
jbe
mov
dec
inc
mov
ret
pusha
xor
outsl
popf
sub
out
cltd
fdivr
dec
mov
cmp
aam
jnp
cwtl
je
adc
pop
or
loopne
sub
das
sbb
push
mov
movsl
cld
dec
nop
push
xchg
mov
cltd
loope
jae
pop
sub
iret
les
dec
pop
mov
cmpsl
inc
inc
fistpl
lock
lret
xchg
push
repz
sbb
xchg
mov
fsubrl
add
loopne,pt
shlb
push
out
sbb
rorb
add
lods
int3
fs
adc
cmp
movsb
das
shr
mov
cmp
mov
adc
out
xchg
ljmp
mov
adc
int
iret
push
inc
push
jbe
add
fwait
dec
mov
sbb
mov
rclb
pop
sbb
xor
fildll
cwtl
dec
arpl
ljmp
jmp
shlb
push
js
cld
xor
or
push
fs
jns
cwtl
repnz
repnz
les
dec
mov
sub
cmp
jl
or
or
jge
loope
xchg
std
mov
or
jno
mov
repz
aas
call
out
popf
ljmp
and
cwtl
mov
pushf
push
in
mov
cmp
sbb
push
mov
jg
sub
rolb
sub
jbe
jno
mov
mov
sbb
pop
test
and
dec
jp
mov
pop
push
and
xor
loop
ret
pushf
dec
and
and
mov
inc
mov
shll
rcl
incl
and
sub
inc
sub
iret
sbb
out
adc
push
xor
sub
lahf
inc
stc
out
add
push
xor
fs
sar
cmpsb
pushf
or
cmp
cs
pushfw
jne
pop
cmp
int3
jmp
xchg
push
aaa
lock
loop
mov
jns
sbb
pop
pop
sbb
adc
and
mov
sub
dec
push
mov
push
xchg
lret
mov
mov
sub
cwtl
xchg
lods
adc
cmc
std
cmp
cmpsl
int
or
mov
fsubrl
add
fistpl
out
fmull
repnz
testb
cs
repz
xor
adc
lods
fisttpl
cmp
inc
mov
icebp
adc
jnp
popf
jns
cmp
sahf
inc
test
daa
dec
movsb
sarl
cmpb
lds
sbb
addr16
and
inc
and
std
push
lea
inc
in
pop
pusha
xchg
stos
push
js
shl
dec
fwait
jo
mov
and
xchg
sub
popa
fs
subb
mov
test
sbb
lock
mov
push
out
jo
scas
xchg
pop
pop
cmp
clc
stos
and
mov
out
pop
arpl
and
loope
icebp
push
dec
dec
push
fwait
stos
jno
xor
push
leave
or
xorl
jnp
jle
pop
ds
ds
or
test
mov
add
pop
mov
and
adc
decb
inc
arpl
mov
aad
imul
imul
nop
xabort
iret
bound
rorl
out
rclb
ror
adc
aad
fsubr
push
fidivrs
stc
pop
jmp
aas
push
mov
fdivrl
push
inc
xchg
add
xorb
and
jbe
inc
mov
adc
popf
push
sub
push
adc
scas
outsb
jl
cmpsl
fadds
push
cmp
lds
or
jnp
jle
mov
addr16
sbb
and
int
xchg
xor
sub
mov
mov
mov
mov
xor
lds
gs
pop
lretw
in
inc
xor
sbb
cmpb
or
int
test
pop
dec
push
adc
stos
add
test
pop
mov
push
pop
lahf
hlt
sub
pop
push
out
orl
push
into
push
imul
xchg
in
add
stos
mov
lret
idivb
lock
lcall
mov
aam
loop
cmp
out
in
xchg
push
fildl
lock
test
loop
jno
xor
sbb
cltd
jge
sub
mov
jmp
das
fsub
sbb
cmp
jp
jb
call
jle
and
inc
subb
cs
faddp
sbb
cmp
stos
stos
dec
push
lods
mov
mov
in
ficompl
fiaddl
fs
adc
scas
mov
push
notl
push
aam
std
mov
mov
dec
xchg
mov
cmp
jbe
gs
insl
lahf
movsb
dec
fwait
repz
loop
adc
int
mov
pop
popf
pop
inc
or
mov
aaa
lret
mov
mov
mov
mov
adc
lock
into
fs
mov
pop
mov
and
mov
sbb
or
add
sbb
and
adc
imul
inc
addl
push
mov
pop
add
pop
imul
adcl
in
xchg
mov
push
pop
xlat
gs
mov
pop
add
sub
enter
mov
cmp
mov
cmc
imul
bound
stos
mov
xchg
pop
outsb
mov
xchg
inc
mov
stc
add
stc
ljmp
test
mov
inc
bound
cld
sbb
icebp
insl
pusha
xchg
fstpt
dec
push
call
cli
dec
into
addr16
movsl
sub
lret
jle
out
cmp
inc
jecxz
sbb
jmp
lods
pop
or
ljmp
xor
in
cmp
fildl
or
jecxz
pop
mov
dec
les
rol
pop
pop
loop
mov
sbb
adc
push
dec
mov
pusha
or
dec
dec
and
jmp
jmp
inc
aas
or
pop
adc
fwait
push
lcall
xchg
popl
sti
cmp
subb
mov
shlb
sub
enter
mov
shrb
lret
dec
and
dec
xor
inc
pusha
ret
mov
xchg
lds
ljmp
adc
mov
pushf
bound
xor
jns
mov
dec
pop
inc
lock
sbb
dec
rorl
sub
inc
cmp
dec
cmp
incl
out
bound
enter
insb
dec
cmp
jp
rclb
xchg
sbb
mov
cmpl
sti
mov
fadds
mov
es
enter
sti
xchg
pop
rolb
scas
sub
xor
call
adc
adc
xor
fsubs
call
mov
outsb
stos
pop
xchg
jl
ret
jbe
test
shll
mov
sub
or
daa
outsl
xor
push
and
stos
jae
inc
negb
repnz
pop
aaa
insl
pop
data16
icebp
in
mov
sub
mov
pop
push
pop
into
leave
mov
mov
paddusw
jae
filds
and
jo
mov
cmp
les
pop
idivl
mov
mov
xchg
inc
push
mov
xchg
test
mov
es
mov
leave
push
jecxz
out
and
ret
push
divl
scas
fistps
in
ret
fsubrp
std
stos
pop
sub
test
ret
shl
adc
sub
out
lds
stos
mov
and
mov
cmc
aad
pop
lret
mov
iret
mov
jb
cmp
jecxz
or
dec
repz
sbbl
and
jbe
push
lock
int
out
fistl
frstor
testb
je
clc
test
adc
xor
mov
into
fbstp
pop
push
pop
add
xor
mov
loope
inc
out
inc
scas
xor
ja
pop
mov
in
pop
pop
or
popf
int
add
bound
add
lcall
shll
lods
push
sahf
int3
imul
jae
in
adc
xchg
xor
mov
lds
mov
pushf
or
dec
in
icebp
data16
test
sahf
dec
ja
pop
mov
andb
out
adc
aas
popf
or
jecxz
dec
inc
fmuls
mov
cmpsb
push
sbbl
mov
xor
mov
jl
loop
mov
mov
cltd
hlt
pusha
das
repz
arpl
adc
inc
or
push
out
mov
loope
das
cmp
sub
mov
pop
andb
and
cli
dec
jns
xlat
or
cmp
pop
out
push
mov
dec
rorb
and
cwtl
imul
mov
push
xchg
inc
out
add
or
fs
stos
loope
adc
bnd
aad
jnp
or
push
inc
insl
push
test
dec
add
cli
jb
lods
mov
sbb
jp
setnp
pop
add
imul
sbb
pop
aad
scas
int3
aaa
jo
xchg
jns
mov
mov
sbb
adc
pop
jmp
xor
das
jecxz
add
gs
dec
mov
stos
lods
nop
in
lods
mov
rsqrtps
minps
or
xchg
test
sub
fdivl
xor
inc
and
lahf
scas
inc
shll
add
cmp
fld
mov
and
xor
call
add
outsb
add
std
nop
mov
xor
std
cmpsb
mov
lds
outsl
inc
les
ja
out
imul
pop
push
loopne
xchg
xchg
lea
lock
jnp
sub
test
dec
jo
incb
fiaddl
dec
sahf
outsb
cli
xor
inc
das
mov
or
push
add
daa
outsl
inc
sub
cmp
cmp
ret
aam
and
or
sub
push
adc
out
or
mov
aam
aam
inc
aam
fsubl
rdpmc
lret
push
imul
dec
aas
or
push
movsbl
mov
scas
rcll
repz
out
dec
or
adc
roll
mov
or
xchg
call
or
cmp
xchg
nop
subl
leave
fwait
or
aaa
testl
stc
push
nop
das
icebp
mov
vpackuswb
xor
mov
xchg
xchg
mov
jecxz
movsl
enter
sub
inc
add
mov
pop
loope
mov
or
cmp
add
push
les
lret
dec
mov
sbb
in
add
mov
cwtl
pop
push
sbb
cli
pop
pushf
test
loop
cmp
mov
cmpsb
lods
adc
dec
sub
cmp
push
mov
sti
in
cltd
sbb
cs
or
fidivl
into
sbb
mov
ss
arpl
out
cmp
int3
add
daa
mov
xchg
jg
lret
test
lret
cmp
pop
loope
sbb
adc
jp
jg
sbb
fwait
or
rcll
mov
shr
sub
lcall
jo
leave
xchg
mov
push
ss
and
gs
cmp
sahf
xchg
ret
adc
cmpsb
inc
stos
lret
mov
shlb
inc
test
or
sub
mov
mov
jp
or
test
dec
test
pop
push
jg
hlt
pop
ja
insb
mov
lock
pop
pop
jb
scas
addr16
push
xor
inc
push
shl
adc
add
fdivrs
fcmovnb
cld
mov
fucomp
repz
sub
cmpsl
movsb
aam
adc
movsl
js
pop
test
rclb
stos
int3
and
dec
mov
jae
and
push
inc
imul
adc
cmc
jne
pusha
cld
sbb
dec
adc
jg
inc
xchg
pop
arpl
mov
js
lcall
in
inc
lock
or
sahf
fmull
push
scas
ret
or
imul
xchg
jmp
iret
pop
xchg
cmp
int
into
roll
sub
or
cltd
xchg
add
or
cmp
mov
pusha
jno
mull
in
sub
stos
test
in
pop
out
lea
stc
cmp
inc
pusha
clc
mov
xchg
aaa
je
nop
push
mov
add
fsubrp
mov
xchg
push
mov
sarb
sbb
enter
pop
or
xor
flds
cltd
push
mov
rcl
cmp
push
xor
inc
test
mov
add
in
inc
aad
push
and
mov
pop
jne
int
aaa
stos
cmpsl
out
out
mov
daa
cmp
mov
addb
iret
or
adc
sbb
push
add
pop
aad
gs
popf
lods
xchg
mov
sbb
int
push
loope
aam
andb
jnp
mov
notb
mov
xor
jecxz
push
mov
and
test
enter
or
ret
inc
adc
cmp
mov
aaa
push
mov
jae
sub
push
bound
loope
daa
add
sahf
pop
mov
or
pop
push
imul
xchg
add
int3
stos
and
sbb
push
lock
bound
add
xchg
in
ss
cmp
pop
mov
and
xchg
push
popa
cltd
jbe
lds
fs
cmp
lods
test
sub
jno
loopne
jae
test
aam
xor
mov
jge
xchg
popl
adc
xchg
inc
sub
test
xchg
xor
push
fbstp
in
aaa
sbb
in
enter
or
and
sarl
push
cli
lret
lcall
std
dec
dec
xor
or
enter
xor
sub
dec
xchg
pop
sub
lods
sbb
sbb
fs
jg
cs
add
and
push
jmp
push
insb
adc
test
inc
mov
jb
jno
imul
pop
imul
js
hlt
jbe
out
mov
movsl
lret
mov
daa
jmp
inc
xchg
mov
xchg
es
ficoms
dec
push
sub
xchg
loop
inc
divl
and
adc
cmc
imul
xchg
inc
test
mov
stc
mov
pusha
insl
inc
in
test
popf
movsl
sbb
hlt
or
inc
outsl
ret
add
pop
xchg
jnp
daa
push
cmpsl
cmc
add
and
mov
cmpsl
push
aaa
roll
dec
aam
mov
pop
xchg
mull
enter
jl
stc
inc
jno
inc
push
xor
push
mov
xor
iret
popa
xlat
fimull
mov
scas
sub
and
fcmove
cli
jae
mov
aas
call
pop
mov
lea
out
xchg
ds
jb
inc
inc
imul
add
add
cs
fsubrs
testb
sahf
xchg
movsl
jno
iret
cmp
jl
gs
or
mov
call
jle
jle
lret
je
pop
iret
cs
shll
lahf
jne
insl
jg
cmp
in
jae
jbe
mov
ljmp
cmp
add
push
loopne
insl
dec
bound
fidivrs
stos
loopne
sbb
inc
or
outsl
in
push
or
aaa
insb
movsl
das
js
cmp
jo
add
or
js
lcall
add
test
inc
aaa
jecxz
pop
nop
repnz
pop
in
test
xor
lods
lock
dec
mov
mov
dec
jae
clc
idivb
sub
dec
clc
fs
cli
outsl
add
jae
inc
lret
sahf
xor
jmp
cmpsb
inc
das
sbb
pop
push
insb
mov
imul
mov
aad
aam
pop
sbb
adc
jg
mov
jo
fnsetpm(287
out
cli
testl
outsb
decl
xchg
pop
mov
faddl
cmc
mov
mov
outsl
jae
sub
mov
and
aam
ljmp
aad
fwait
mov
ja
xor
push
push
nop
fnsave
push
out
or
mov
push
push
and
repz
dec
cmpsb
jno
addr16
fsubr
fs
movsb
repnz
test
arpl
jg
jae
std
ss
les
xchg
int
sub
rclb
inc
hlt
xor
pop
xchg
ret
je
in
lds
xor
ror
lret
sub
push
and
les
loope
jg
sbb
jae
cmpsb
xchg
cltd
xchg
or
lcall
mov
sub
mov
push
lods
push
lahf
sbb
hlt
pop
pop
add
jg
shl
scas
popl
sbb
int
push
or
in
loope
mov
jecxz
outsl
inc
push
adc
xchg
mov
fmuls
aam
cmp
xor
in
mov
push
cmpsb
aaa
rcll
cmp
add
adc
push
insl
hlt
pop
ja
shl
lret
sahf
dec
sub
je
bound
cmc
test
cmp
and
pushf
xchg
pop
int3
inc
mov
inc
xchg
fldenv
clc
cs
cmp
pop
shl
push
mov
ss
lahf
out
out
jl
data16
dec
ret
icebp
cmp
repnz
imul
adc
sbb
mov
test
dec
inc
jmp
testl
out
jp
test
cmp
jge
jo
sbb
add
xor
xchg
lret
mov
cmc
jne
push
jmp
sub
rorb
or
fsts
adc
inc
sbb
mov
lret
pop
dec
mov
cmp
mov
and
fcom
mov
scas
fwait
movsl
jo
lret
into
movsl
outsl
incl
enter
jmp
fiaddl
push
arpl
xchg
loop
fidivs
mov
movsl
movzbl
aad
inc
lods
jno
rol
inc
mov
arpl
fcmove
or
pop
xor
call
lock
and
aaa
cmp
sub
mov
pop
mov
sub
and
loopne
lods
jge
xchg
scas
test
xor
push
pop
inc
xor
mov
loope
mov
cmp
jnp
lcall
pop
push
ds
jp
mov
jp
sbb
lds
cli
cltd
cld
out
ja
scas
mov
xchg
mov
push
jns
mov
lds
push
inc
dec
imull
arpl
cmp
push
mov
xchg
outsb
cli
popf
jmp
imulb
in
mov
addr16
out
jbe
xor
add
je
xor
enter
and
xchg
ficomps
push
pushf
inc
test
sarl
iret
add
es
xor
outsb
mov
sahf
dec
ljmp
mov
and
mov
cmpsl
mov
mov
es
jns
push
in
js
xor
sub
push
and
inc
jp
testb
sbb
mov
xor
dec
hlt
std
stc
push
inc
roll
in
sbb
xchg
je
jg
push
repnz
mov
inc
and
or
lret
pop
sbb
fcompl
and
test
mov
test
mov
dec
lret
lret
xor
shrl
xor
fnstcw
xlat
mov
jge
or
mov
inc
xor
cmp
jns
push
out
sbb
pop
mov
inc
mov
inc
ljmp
add
pop
sub
jae
hlt
outsl
push
leave
pop
fdivrs
or
hlt
jl
pop
cs
cmc
ficomps
adc
xor
call
push
adc
cs
test
aam
repz
push
int3
pop
idiv
dec
mov
sbbl
mov
lret
push
aad
lea
test
stos
pusha
lds
mov
dec
data16
std
mov
xor
jge
imul
les
xchg
pusha
lods
stos
int
fstpt
scas
test
fcmovbe
jns
xor
repnz
mov
push
push
lcall
mov
pusha
dec
out
bound
loopne
jne
test
or
add
add
xchg
pop
and
push
sub
jb
loop
movsb
movsl
imul
sbb
je
clc
cmp
sbb
js
sti
movsb
loope
in
adc
repz
cs
push
mov
ja
jmp
leave
ror
mov
adc
jmp
or
mov
aaa
mov
push
xor
icebp
xchg
xor
fs
rcl
out
shlb
inc
mov
inc
frndint
lret
dec
pop
jbe
incl
ja
push
bound
stos
mov
lcall
jle
loopne
stc
test
jp
inc
add
outsb
ret
push
lods
and
in
sahf
push
inc
dec
jmp
adc
aam
cmp
xchg
mov
fstpl
add
leave
int3
test
rorb
lret
mov
cltd
es
cmp
sbb
hlt
mov
fisttpl
test
cmp
stc
mov
adcl
pop
mov
loopne
jo
pop
xchg
dec
std
jne
pop
jecxz
adc
adc
jbe
add
fcomp
faddp
push
fldl
ja
cmpsb
dec
in
dec
inc
and
inc
in
stos
les
fidivs
daa
je
inc
std
dec
mov
xchg
mov
addr16
popf
xchg
lock
insl
sarl
mov
int
into
adc
frstor
test
icebp
xor
sub
or
andl
insb
fmull
fmull
adc
mov
pop
adc
fwait
pop
mov
aam
push
adc
xor
jecxz
mov
inc
mov
xchg
xor
testl
mov
mov
out
adc
jle
mov
sub
xor
aam
fnsave
pusha
sub
adc
jle
lock
sar
push
test
rcll
pop
test
adc
mov
jbe
xchg
jle
clc
and
sbb
mov
cmpsl
ret
pop
jo
mov
stc
push
out
jl
movsb
cmp
dec
or
sbb
iret
ljmp
test
iret
std
xlat
scas
jecxz
jb
inc
cmpsb
stos
pushf
test
mov
nop
aas
xor
pop
push
sbb
mov
dec
sbb
stos
sbb
fsubl
nop
xchg
setnp
add
push
call
xchg
mov
popa
jae
loope
cmpsl
cmpl
jbe
fisubrl
sub
ljmp
jnp
jb
dec
testb
push
std
sbb
ja
insl
xchg
enter
fnstcw
jno
dec
popf
xor
clc
pop
xchg
sub
int
clc
gs
xchg
adc
and
lret
pop
and
sbb
sahf
popf
dec
pusha
jb
out
dec
pusha
xor
or
inc
mov
mov
imul
inc
and
inc
dec
jle
xchg
pop
sbb
sub
lret
sahf
and
sbb
repz
jp
out
push
cmc
inc
ljmp
xchg
or
adc
scas
leave
mov
sbb
or
fmuls
mov
test
sbb
popa
sbb
push
flds
sub
andl
repnz
xor
int3
jle
fdivr
stc
aad
cmp
xchg
cmp
insb
lcall
aas
je
daa
movsl
ja
adc
testl
jae
xor
jne
mov
js
pop
dec
xchg
adc
mov
sahf
push
fildll
insl
inc
push
out
iret
jg
add
fs
mov
imul
mov
push
inc
movlps
xchg
loop
je
clc
cmp
inc
mov
jmp
mov
cmp
xchg
adc
jae
sbb
add
pop
insb
imul
repz
xor
xlat
stos
inc
xchg
movsb
inc
xor
mov
push
and
push
push
fiaddl
push
xor
insl
test
lea
lock
push
adc
out
jmp
inc
hlt
dec
sub
shrb
or
cmp
xchg
cmp
cwtl
lret
rorl
insl
iret
enter
fidivrs
std
mov
jl
push
imul
xor
call
iret
jmp
xchg
inc
in
das
push
fildl
xor
stc
jns
cmp
leave
inc
clc
sbb
xchg
aam
enter
pop
dec
rclb
fisubl
int3
aad
nop
test
mov
ljmp
fcmovu
jge
mov
adc
mov
fmuls
cmp
mov
xchg
push
es
scas
cs
lahf
roll
jne
cmp
in
or
sarl
in
and
push
jge
add
adc
sbb
fsubrl
mov
jae
hlt
fsts
jns
mov
enter
mov
mov
sbb
xchg
push
in
dec
into
rcr
and
cmpsl
push
cwtl
icebp
mov
mull
movsb
lahf
add
sbb
push
inc
mov
add
inc
cmp
frstor
nop
sub
sti
nop
in
scas
sub
lock
xchg
int
mov
or
mov
xchg
aam
sub
testl
data16
jle
mov
lea
leave
push
and
lods
icebp
mov
out
jecxz
js
test
cld
outsl
pop
inc
xchg
in
jne
push
sub
inc
mov
stos
lea
fadds
in
mov
scas
repnz
push
push
xchg
ja
dec
push
lahf
test
mov
sbb
pop
mov
inc
and
dec
fwait
lea
cmpl
mov
add
adc
hlt
iret
push
sahf
dec
jnp
loope
cmpsb
mov
out
fdivr
sub
jae
or
addb
xchg
cmpsb
cmp
pop
stos
sub
popa
insl
mov
adc
adc
rcll
fs
pop
shrl
and
sbb
lret
push
pop
aaa
popa
cmc
in
testb
nop
lds
mov
inc
xor
adc
and
mov
jg
pop
dec
movsb
idivb
cmp
push
inc
mov
mov
je
push
pop
je
mov
push
adc
cmc
vunpcklps
push
divl
jecxz
mov
rcll
das
dec
push
sub
daa
test
mov
adc
pushl
outsb
lcall
in
les
ljmp
and
or
dec
or
cmp
dec
mov
mov
or
clc
sub
test
int
cs
leave
pop
xchg
push
fistpl
out
rorl
and
fisttpll
push
cltd
test
sub
popf
mov
in
push
add
popa
ficomps
out
inc
sub
imul
push
jnp
nop
or
aaa
decb
sub
push
cmp
fdivr
flds
cmp
push
sbb
stos
mov
cmc
jmp
int
ss
or
stos
movsb
rcl
mov
popf
push
enter
jmp
sti
adc
js
sub
or
and
adc
lock
add
addb
push
mov
sbb
xchg
jg
loopne
cmp
push
adc
mov
pop
dec
sub
push
dec
scas
shrb
jp
xchg
clc
xchg
or
cwtl
add
ss
imul
pop
xorb
xchg
pop
cmpsb
andb
push
xchg
cltd
lcall
mov
lahf
lret
push
fists
sbb
jle
insb
sbb
and
add
fcoms
out
inc
sub
push
out
js
mov
mov
pop
rorl
cmpsb
adc
cmp
inc
inc
xlat
popf
cmp
adc
cmp
leave
jno
sbb
add
arpl
loop
hlt
mov
sub
mov
ljmp
mov
pop
icebp
test
jle
rclb
jne
mov
pop
add
fnsave
cmp
inc
in
xor
ds
push
add
sbb
dec
jge
jg
sti
in
popa
push
mov
frstor
xchg
lea
mov
js
addr16
test
inc
cwtl
xlat
addb
sub
ja
enter
xchg
jmp
push
rcrb
push
rorl
push
adc
pop
jbe
sti
add
pop
mov
mov
push
scas
sbb
xlat
icebp
mov
outsl
out
dec
mov
cmpsb
cli
mov
lock
or
cmp
or
add
xchg
inc
inc
sarl
mull
or
jmp
lods
pop
push
or
mov
rcr
aam
jg
pushf
aam
inc
mov
add
mov
inc
arpl
and
and
mov
or
push
movsl
cmpsb
out
sarb
pusha
push
adc
out
push
imul
xchg
test
dec
lahf
ss
test
xchg
mov
bnd
je
fbld
mov
adcl
cmc
ds
add
mov
xchg
orl
int3
jno
and
adc
sub
mov
scas
and
push
sti
jno
test
jle
xchg
jno
nop
insl
sub
sub
in
add
adc
orb
and
enter
push
into
xor
int
sbb
arpl
jno
call
or
out
clc
mov
rcrb
clc
push
jp
adc
or
faddl
sahf
xor
mov
jecxz
and
cmp
xor
xchg
cltd
js
cmpsb
push
test
insl
je
push
dec
push
testl
out
shlb
mov
aas
andl
mov
cmp
sbbl
cmpsb
or
cld
clc
outsb
push
sub
jno
push
jle
enter
scas
cmpsb
push
mov
fsubrs
jns
inc
fstp
xchg
shrl
stos
fdivr
push
sub
lea
sub
pop
loopne
xchg
sbb
dec
lock
stos
js
xorb
add
xchg
mov
mov
dec
mov
and
add
xchg
cli
xchg
dec
aad
or
js
into
cmc
inc
inc
adc
dec
sbb
rorb
adc
pop
outsl
out
nop
std
cmp
addr16
int
lods
fmul
inc
loopne
add
xor
cmpsl
ret
dec
fcomp
outsb
lcall
push
dec
lret
dec
loope
js
pop
push
ret
cltd
roll
fs
cwtl
dec
int
addl
out
jmp
or
das
push
jnp
daa
add
pushf
out
fwait
inc
xchg
repnz
scas
adc
stos
data16
jge
call
jp
xchg
scas
sbb
mov
ja
sub
fdivrl
xchg
adc
inc
mov
push
js
mov
and
ret
xchg
and
lret
pusha
mov
jns
inc
sbb
mov
cmpb
cmp
cltd
stos
pusha
xor
int3
inc
or
fdivl
jg
xchg
jp
mov
dec
ror
idivw
int3
aad
repnz
xor
jbe
cmpsb
mov
add
dec
mov
sahf
mov
and
xchg
jecxz
js
dec
outsl
or
xchg
addl
mov
out
repz
xchg
xor
mov
sbb
xchg
fstl
mov
stos
movsb
test
mov
xor
mov
fdivrl
xchg
mov
addl
lea
loop
sub
pop
jecxz
mov
dec
jge
adc
lods
xorl
jns
lea
mov
mov
cmp
cmp
adc
push
xor
je
stos
mov
or
fiadds
jmp
mov
xor
inc
imul
xor
lahf
stos
or
push
xchg
adc
popf
testl
shl
mov
fwait
dec
jmp
enter
jne
and
lahf
sub
lock
or
mov
push
pop
cmp
xchg
mov
dec
stc
and
cmp
inc
pop
nop
jae
fcoml
movsb
aaa
fsubp
jecxz,pt
cwtl
jmp
js
notb
jecxz
mov
orl
cmp
xchg
loope
test
bound
cmpsl
and
pushf
push
mov
dec
hlt
or
push
cmp
rclb
push
xor
dec
sbb
fcomip
adc
mov
inc
dec
popa
cmpsl
and
test
sub
or
roll
and
mov
and
cmp
and
mov
xlat
mov
or
fnsave
iret
xchg
lcall
push
mov
sub
cmp
inc
xchg
gs
sub
test
mov
and
add
jge
pop
cmp
inc
sarl
jnp
cmp
pop
lock
fnstcw
out
mov
adc
xor
out
dec
stc
punpcklbw
in
iret
and
movsl
loope
xchg
lock
data16
mov
cmp
push
adc
stos
cld
xor
xchg
push
fiadds
mov
mov
dec
xchg
add
jb
sub
mov
jmp
imul
lds
inc
mov
popf
xchg
in
or
cld
js
xor
xor
arpl
insb
arpl
sub
je
rcr
iret
mov
scas
push
aam
and
dec
in
sti
jns
push
mov
push
es
mov
out
outsl
cmpsb
icebp
xor
inc
sbb
cltd
jp
sub
push
inc
cmp
or
sbb
pop
lods
jb
mov
pop
pop
push
mov
loop
mov
xchg
mov
lea
leave
flds
adc
adc
cmc
jns
dec
sbb
cmp
popa
pop
cmp
dec
inc
dec
je
pop
and
in
add
loop
sub
pop
ret
inc
dec
out
and
nop
cld
mov
adc
insl
addr16
sbb
push
clc
xor
mov
xchg
ret
xor
in
xchg
mov
inc
and
stos
and
fimull
pop
sbb
jae
rcl
cli
xchg
fists
in
and
mov
fcmovnu
add
dec
add
push
iret
clc
mov
pop
add
hlt
fnstsw
add
shrl
clc
adc
flds
ljmp
fisubrs
mov
call
pop
mov
aad
fnstcw
pop
cli
lods
outsb
incb
and
jg
adc
push
sbb
repnz
movsl
ja
push
lret
dec
jbe
das
imul
int3
xchg
cmp
adc
cmpsl
sbbb
or
cmp
cmp
loop
arpl
rcll
mov
pop
or
lcall
pop
in
out
sub
out
mov
je
ret
sub
cltd
adc
pop
add
imulb
pushf
mov
push
xor
leave
mov
push
test
inc
mov
pop
filds
pop
mov
adc
xchg
pop
loope
inc
or
adc
shrb
inc
xchg
jne
loopne
mov
lods
sbb
xchg
sub
subl
pop
lcall
dec
into
mov
dec
lcall
mov
in
mov
ja
mov
gs
sbb
mov
subb
and
gs
cmc
mov
pop
push
pop
clc
fxch
xchg
sti
hlt
cli
mov
xor
push
test
insb
ss
ret
pop
xchg
test
mov
sti
xchg
mov
sbb
mov
sbb
stos
sbb
and
mov
insb
lcall
cmp
jo
subps
outsl
dec
int3
outsl
cmpsl
iret
sbb
daa
or
pushf
push
push
mov
shll
mov
dec
cwtl
mul
scas
jae
sbb
orb
xorl
jnp
ljmp
pop
aaa
data16
cwtl
mov
mov
sti
imul
lods
cmc
or
sub
clc
xor
out
sbb
xchg
add
pop
adc
adc
jb
push
xchg
aaa
cmp
and
fidivs
shl
imul
shll
hlt
mov
loop
adc
idivl
lret
shll
insb
mov
add
hlt
push
push
sub
mov
sbb
dec
and
hlt
pop
int3
mov
out
aad
in
xor
sbb
mov
add
lds
add
pop
xchg
testb
xchg
mov
test
push
jge
mov
cli
jns
movsb
fwait
ret
aas
mov
sub
movb
inc
pusha
mov
mov
inc
dec
cld
adc
in
mov
sbb
movsb
and
sub
xor
xor
scas
ret
mov
xchg
mov
mov
sbb
jle
mov
cwtl
inc
sub
lret
mov
fwait
dec
push
test
lcall
rolb
aad
push
and
cmp
addr16
insb
addr16
adc
sbbl
roll
mov
xchg
mov
mov
xchg
aas
xor
pushf
add
xchg
push
xorl
stos
stos
or
xlat
out
mov
mov
test
cmp
cmp
ss
test
mov
in
aam
test
cmp
or
mov
dec
in
cli
mov
scas
out
test
lock
rorb
adc
xchg
cmp
adc
daa
jecxz
insb
add
ret
push
xchg
xchg
stos
scas
popa
js
jmp
je
clc
xchg
stos
xor
nop
and
scas
jno
lcall
mov
jnp
cmpsl
push
andl
sub
not
into
fidivrl
or
xchg
mov
xchg
jnp
sbb
scas
inc
cmpsb
inc
adc
push
repz
std
nop
in
jle
enter
out
cmpb
jecxz
or
cld
xchg
pop
inc
ljmp
call
mov
mov
imul
mov
xor
aam
fnstcw
dec
push
sahf
test
sub
iret
sti
jp
inc
dec
adc
push
dec
push
xlat
in
stc
repnz
mov
jle,pn
clc
jb
or
sub
pushf
in
sub
dec
adc
push
push
jno
xor
and
mov
mov
mov
dec
fs
test
xchg
add
pop
shlb
addr16
sub
in
test
adc
push
sbb
cltd
fnstcw
push
ss
push
jmp
movsb
inc
push
in
pop
xchg
inc
add
push
cmp
js
js
hlt
sub
ficompl
mov
repnz
fldt
mov
add
jno
mov
fwait
inc
pop
pop
enter
inc
lods
aas
out
dec
idivb
jae
sbb
idivw
enter
dec
rorl
out
cltd
negl
cs
insb
shlb
push
lret
sub
iret
cmpsb
mov
fbld
pop
pop
test
pushf
and
cmp
pop
mov
mov
fadds
inc
scas
and
cmc
std
adc
scas
das
xor
mov
test
jnp
mov
leave
push
lods
mov
xchg
or
mov
pop
cs
repz
xor
adc
sub
cmp
fmull
mov
mov
mov
jmp
push
movsb
jnp
dec
orl
in
and
lods
dec
std
adc
dec
subl
ss
lret
loopne
xchg
mov
movsl
mov
xchg
jl
sub
add
movsb
sub
test
rol
cmpsb
add
int3
out
addl
pop
sbb
pop
xor
inc
push
and
nop
or
shrl
cmc
sbbb
pop
push
xor
pop
mov
andl
adc
nop
hlt
in
popf
xchg
xor
mov
cmc
pop
in
ret
aas
out
xor
icebp
filds
adc
jp
add
shll
mov
out
adc
dec
in
popa
ret
and
faddl
sbb
cwtl
cmp
shrl
and
xchg
inc
push
push
test
pop
jno
aad
cmp
xchg
jl
sbbb
sbbb
sbb
jmp
jp
add
das
jbe
sti
pop
popf
aaa
sbb
fcoml
cmp
call
jmp
mov
rcrb
fmuls
dec
out
cmpsb
imulb
pop
std
fnstcw
mov
push
inc
test
or
or
pushl
shll
aas
out
addb
fwait
movsb
ret
inc
adc
shl
not
add
sub
outsl
mov
pushl
jecxz
adc
pusha
andb
sub
movsl
das
adc
in
sbb
push
push
mov
inc
rsm
icebp
stos
or
gs
lds
push
les
leave
jp
push
cmc
pusha
daa
pushf
cli
xchg
pop
iret
adc
cmp
mov
popa
lock
xchg
and
mov
mov
push
dec
dec
pop
sbb
mov
out
mov
stc
dec
xor
jae
and
in
mov
cli
std
je
lods
daa
push
nop
lea
je
dec
and
sub
daa
jmp
add
jno
xor
jp
dec
cmp
out
push
jne
push
mov
lds
pusha
fwait
js
ret
lret
ja
add
or
mov
insb
xor
pushf
subb
sbb
jae
and
enter
nop
lods
lods
das
inc
mov
shll
jbe
pop
test
inc
cli
jb
adc
and
aam
cs
pop
daa
hlt
rcr
xchg
add
xlat
jns
in
push
insl
lcall
dec
mov
bound
loopne
jge
pop
push
push
jne
or
pop
cmpsl
mov
fwait
sahf
testl
and
sbb
xor
enter
and
scas
js
mov
int
idivl
xchg
xor
lret
or
aas
lcall
pop
xlat
push
jp
repnz
pop
xlat
xchg
jnp
shrb
xchg
push
adc
fistpl
adc
adc
mov
push
adc
fcompp
loop
jns
jae
jb
xor
jl
push
xchg
lret
popa
and
cmpsl
mov
jle
sbb
jb
xchg
mov
xchg
stos
dec
divb
and
idiv
xchg
cmc
xor
xchg
push
lret
in
push
inc
xor
xchg
bound
mov
sub
jmp
inc
mov
adc
push
aam
dec
add
pop
mov
jns
dec
int3
pop
jecxz
cs
adc
scas
or
mov
mov
nop
mov
xor
roll
xchg
jp
dec
pop
addr16
cmp
xor
or
aaa
xchg
jp
ret
jg
in
pop
fisubl
xlat
xchg
aaa
pop
adc
cmpsb
mov
cmp
push
xlat
lahf
paddw
xchg
data16
push
test
push
pushf
shlb
push
dec
ret
sub
pop
jne
jge
mov
in
sahf
popf
cmp
aad
ja
fsubrl
sub
int
push
mov
jp
mov
popf
outsl
or
test
jb
daa
mov
pmaddwd
pop
mov
fadds
lds
push
and
xor
cmp
add
in
mov
adc
mov
mov
push
scas
mov
clc
test
iret
add
push
sbb
lea
xchg
jns
sar
mov
ret
add
jno
inc
in
xchg
xchg
mov
mov
loope
jp
jne
je
jb
dec
lea
mov
repnz
add
jmp
jle
jmp
jg
bound
scas
sub
add
ja
adc
lea
repnz
adc
daa
out
int
cwtl
xorl
pushl
jge
lret
enter
add
loop
xchg
jp
or
push
icebp
daa
pop
xor
popf
push
jmp
push
fldenv
es
mov
leave
cmpsb
xor
dec
imul
call
mov
fidivs
or
mov
mov
jg
mov
call
addr16
xchg
lods
dec
push
jecxz
inc
stos
mov
push
mov
and
mulb
xchg
les
fwait
push
add
mov
jne
adc
push
aam
sarl
push
fistps
or
mov
mov
inc
aam
mov
jno
adc
mov
sbb
fstpl
adc
push
sub
pop
data16
mov
popf
xchg
mov
mov
rcl
ficoml
dec
test
pop
inc
lret
dec
xchg
movsl
add
sahf
jl
cs
sbb
test
pop
stos
push
and
cmp
sbb
mov
inc
xor
xchg
pop
add
xchg
mov
out
cmpsb
add
push
and
aam
pop
jnp
push
les
push
inc
dec
push
orl
cmp
test
cmp
inc
pop
adc
shrl
mov
orl
xlat
and
mov
aaa
test
push
arpl
sbb
jp
jp
xor
jge
or
mov
mov
add
ljmp
mov
mov
aam
adc
test
fs
frstor
fstpl
lods
adc
pop
jbe
outsb
out
mov
repz
hlt
dec
test
mov
mov
inc
sti
jecxz
cltd
into
fidivrl
sub
repnz
gs
lret
fisubrl
inc
je
xor
out
or
enter
into
jb
or
iret
iret
or
andl
test
cmp
stos
push
repz
push
lods
or
jns
ljmp
adc
roll
stos
test
ds
loopne
jno
mov
cmc
je
test
out
pop
out
push
xchg
cmc
push
fmulp
out
mov
call
mov
adc
fldcw
lret
xor
popf
addl
out
aam
leave
int
jns
adc
jb
xor
dec
inc
xor
repnz
testb
mov
mov
xorl
jbe
cmp
dec
aaa
add
in
decb
inc
loop
or
jns
xchg
jb
aas
jp
sar
int3
cmc
and
push
mov
cmp
insb
sbb
addr16
outsl
cld
mov
mov
xchg
inc
mov
insl
adc
or
ret
jp
mov
jl
xor
rorb
ds
js
ret
movsl
rolb
mov
js
mov
inc
out
test
sbbl
scas
inc
push
cmpsl
push
cmp
test
jbe
outsb
in
or
sub
nop
iret
xor
jge
push
mov
cmp
cmp
adc
xor
and
pop
lock
pop
insl
lret
lret
mov
sub
xchg
xchg
sets
jmp
fistpll
inc
xor
pushf
cmp
xor
out
jg
div
pushl
push
je
negb
jmp
or
jle
sti
pusha
xor
pop
sbb
adc
mov
js
jmp
cmp
incl
or
or
cmp
imul
jg
mov
mov
push
test
es
out
add
push
or
popa
add
mov
cmp
cmp
mov
xor
pop
out
sbb
jp
sub
scas
pop
ljmp
pop
int
fxch
mov
test
pmullw
cmp
sub
mov
dec
cmp
leave
es
in
push
xor
jne
inc
inc
out
xchg
cmpsl
aaa
and
jnp
mov
mov
dec
add
lock
clc
and
clc
mull
test
xchg
testb
dec
and
out
scas
scas
push
sub
ja
in
sub
add
xchg
pop
rcrb
shlb
xor
pop
jns
jns
aad
sub
cmp
jbe
add
mov
enter
stos
fists
out
jg
pop
xor
in
push
xchg
out
mov
cmp
xchg
jae
pop
xchg
int3
shl
call
sbb
inc
psubsw
stos
mov
lock
jp,pt
mov
clc
push
and
fucomi
jno
lock
sub
fwait
xlat
ja
lcall
xor
mov
nop
int3
mov
push
dec
mov
mov
call
inc
or
jmp
mov
dec
sub
lcall
push
xor
xor
insb
xor
out
adc
pusha
sub
mov
adc
cmp
xor
mov
cmpsb
dec
xlat
out
push
cltd
mov
cmp
insb
push
repz
jno
shr
pop
loopne
jo
fstpl
addr16
adc
adcl
cmpsl
mov
insl
gs
lds
negl
cmp
rorl
and
mov
rcrb
sub
movsl
jno
mov
fnstenv
xchg
inc
mov
outsl
mov
ror
and
push
jns
or
sub
xor
out
icebp
into
fstps
or
push
stos
in
nopl
adc
mov
cmp
mov
or
cmp
and
sub
push
gs
or
cmpsl
mov
shrl
cld
pop
sub
imul
outsb
xor
outsl
lods
and
sbb
sbbb
fcoml
and
pop
sahf
sti
es
mov
lods
cld
inc
cmp
inc
jle
jo
daa
shrb
xchg
jns
int
aam
fisubrs
xor
xor
add
lods
repz
out
sti
add
pop
mov
dec
sti
in
lahf
lods
imul
xor
rcr
or
out
add
inc
emms
outsb
outsb
nop
sbb
daa
enter
imul
jnp
loope
popf
inc
lock
outsb
out
mov
dec
jle
iret
sbbl
adc
mov
xor
popf
in
lock
xchg
fiadds
stc
shl
or
loop
cmp
in
cmp
adc
add
aad
ds
sbb
icebp
loope
xlat
in
data16
sti
sbb
adc
cmp
cmp
and
mov
mov
sahf
loopne
xor
inc
pop
cmp
lret
out
dec
popf
aad
mov
mov
iret
jbe
ret
xor
aad
pushf
inc
cmp
cmp
rcrl
testb
xchg
scas
lcall
incb
push
out
xor
fwait
push
mov
mov
stos
xchg
pushf
cmp
pop
rol
iret
repz
push
les
adc
dec
sti
test
mov
dec
xchg
in
xchg
sub
pushf
xchg
icebp
insl
push
lret
push
fs
pop
xchg
or
mov
lahf
ljmp
andl
push
out
dec
test
jbe
fisttpl
loop
sub
loop
xlat
xlat
jne
mov
imul
pop
add
enter
dec
push
xchg
loopne,pt
jg
lret
cltd
aaa
jle
enter
push
repz
jle
cmp
clc
jno
adc
daa
aad
cltd
ss
push
orb
and
dec
sub
adc
push
mov
inc
enter
out
shrb
mov
sahf
sar
sbb
cmp
pop
lret
imul
in
jno
mov
test
mov
popf
rorb
fidivrl
mov
ss
dec
push
mov
xchg
jae
pop
push
into
insb
xor
ret
repnz
hlt
dec
mov
jle
add
sti
je
popa
pop
psubsb
inc
stos
cs
mov
jne
call
jmp
lret
add
sbb
pusha
lahf
cmp
adc
popf
push
xor
dec
push
lcall
push
insb
xchg
mov
aaa
adc
sti
mov
jne
inc
aaa
push
pop
loope
mov
pop
mov
testl
movb
xchg
mov
pop
daa
xchg
cli
fs
and
shrl
int3
hlt
leave
push
add
in
test
clc
jecxz
or
adc
cmpsl
imul
mov
inc
dec
dec
xchg
jo
xor
and
pusha
mov
sub
pop
cmpsl
cmp
imul
cmp
xor
jo
mov
or
mov
push
mov
push
sub
inc
inc
lods
scas
cli
cmp
add
push
hlt
enter
call
push
mov
lea
pushf
daa
mov
call
xchg
repz
sti
sahf
cmc
pop
mov
cltd
cltd
fldenv
rolb
loope
outsl
mov
ficoms
cmp
or
insb
cli
fsubr
das
lds
mov
out
fidivrs
sub
or
jmp
loop
stos
adc
cmp
pop
dec
mov
out
lods
scas
add
ficomps
add
or
pop
fistps
pop
movb
cmpl
ror
ret
push
cmp
js
mov
outsb
stos
mov
pusha
xchg
ret
vmovd
push
cmp
in
push
mul
les
dec
and
adc
xor
in
ja
push
adc
int3
ja
out
push
stc
inc
cmp
leave
add
pop
je
lea
aas
sub
jmp
xchg
roll
into
pop
ljmp
inc
push
xchg
out
test
in
insl
mulb
repz
out
int
jl
add
mov
jo
xchg
mov
stc
mov
fldenv
mov
imul
sub
shl
add
mov
mov
pop
inc
inc
fidivl
xchg
scas
mov
mov
mov
fbld
addr16
push
fdivrs
in
mov
sbbl
les
jecxz
mov
leave
inc
push
xchg
les
mov
int
rolb
cmp
mov
fs
push
addr16
scas
incb
fisubs
mov
inc
mov
or
xor
push
sub
pop
testl
outsb
ret
movsl
insb
adc
inc
dec
icebp
mov
push
jg
xchg
xor
idiv
cld
push
cmpsb
jl
sbb
dec
cmc
je
mov
inc
test
int
fwait
addr16
adcl
fisubrs
mov
lea
das
jbe
mov
outsl
iret
enter
inc
rolb
pushf
arpl
lahf
out
inc
mov
push
mov
imul
and
hlt
test
sub
or
popa
add
or
sub
mov
add
jno
pop
jns
add
xorl
bound
out
in
out
adc
lcall
cmp
jo
loope
out
ljmp
xchg
call
mov
into
in
jl
mov
dec
xchg
sbb
dec
shrl
adc
sub
jno
int
push
subl
lcall
adc
and
xor
jp
push
adc
and
ljmp
push
mov
ss
rcrb
loope
sbb
dec
iret
adc
jl
out
test
dec
jae
lcall
cmpsb
in
pop
pop
jno
cmc
cmp
fs
mov
lret
pop
dec
iret
xorb
lods
pushf
mov
imul
test
jo
movsb
pop
adc
sbb
push
add
aam
add
sti
jmp
lods
or
push
inc
jne
fsub
jne
jae
aas
fxch
mov
int3
lcall
jmp
out
push
push
cmp
xchg
out
and
mov
pop
push
cmp
mov
insl
sbb
adc
clc
imul
mov
mov
push
test
data16
adc
or
or
xchg
xchg
or
sbb
jo
mov
bound
jmp
mov
push
pop
xchg
inc
mov
or
enter
adc
nop
mov
xor
xor
into
mov
movsl
push
or
or
push
lret
sahf
fcmovne
xchg
gs
adc
mov
sti
xor
mov
cmp
jo
popa
icebp
xchg
hlt
sub
jg
mov
jmp
push
dec
rolb
xchg
js
xchg
pusha
pop
cld
cmp
int
cltd
push
orb
shrb
popa
adc
xlat
test
xor
pop
sub
stos
xlat
js
push
push
jmp
int
sub
daa
xchg
ret
enter
sub
sub
daa
dec
xchg
push
aad
stc
mov
lock
mov
sub
add
dec
mov
adc
or
sbb
add
sbb
or
fiadds
dec
dec
cs
xchg
jg
in
mov
mov
xor
mov
push
bound
jbe
jge
loope
mov
movsl
jl
add
aas
mov
or
mov
arpl
scas
jnp
add
pop
sbb
jp
pop
ror
sbb
mov
outsl
mov
xchg
and
mov
loopne
mov
cs
inc
loope
lock
cmc
lret
test
inc
bound
adc
xchg
out
push
nop
cmp
into
jle
mov
gs
sbb
jge
daa
fcomps
lret
jo
sub
sbb
test
mov
mov
fsubrl
inc
divl
push
xor
loope
mov
popf
cmpb
dec
cmpsb
xchg
ljmp
sbb
xor
out
test
xchg
out
sbb
inc
aad
ss
add
xchg
pop
jmp
mov
sub
mov
cmpsl
jg
add
sub
pop
lret
clc
call
mov
int
jecxz
mov
and
enter
sbb
pop
ljmp
idiv
sub
xchg
add
and
push
or
fcmovbe
cmpsl
push
rcrb
or
cmp
stos
in
sub
out
push
jne
ds
idivb
or
fwait
pushf
mov
add
sub
lods
and
sbbb
repnz
rcr
push
les
cs
stos
lret
ljmp
fsubrl
adc
sbb
adc
iret
je
pop
mov
testl
arpl
and
loop
xchg
fnstsw
and
jmp
out
pushf
dec
pop
shl
out
movsl
mov
mov
test
push
loop
mov
adc
sahf
addr16
jl
jp
mov
and
in
lcall
outsl
push
out
dec
push
add
mov
push
or
and
xchg
mov
xor
es
cmc
movsl
adc
mov
pop
lock
push
scas
mov
imul
lds
inc
std
xchg
adcl
out
push
cld
sub
pop
ds
pop
scas
ret
jecxz
xchg
or
dec
aas
das
icebp
divl
ljmp
mov
mov
or
mov
sub
loopne
xor
or
inc
outsl
fimuls
scas
adc
dec
add
cltd
sar
cld
xchg
stos
sbb
sbb
pop
ljmp
in
es
ja
inc
lock
mov
push
es
push
aas
xchg
add
xor
sbb
cmp
lret
pop
push
dec
stos
mov
repnz
dec
or
das
loopne
jbe
xchg
fwait
mov
inc
arpl
testl
mov
push
or
rorb
push
shlb
addr16
fs
xlat
cmp
mov
sub
xchg
xchg
pop
adc
sub
std
in
shrb
aad
xor
mov
rolb
aas
fstps
jle
push
ljmp
cmp
push
push
jno
int3
pushf
mov
outsl
mov
xchg
sub
jo
aad
aad
je,pn
je
pop
ds
mov
push
mov
mov
cs
fstps
xchg
pop
cmp
sarb
hlt
sbb
xor
in
fnstenv
das
mov
sbb
sub
ds
mov
adcl
out
xchg
sub
push
lods
dec
push
xchg
ja
fnstcw
cmp
sub
call
pop
inc
loopne
sbbb
test
mov
cli
jmp
ljmp
mov
loopne
adc
stc
mov
pop
daa
sbbl
xor
pop
mov
imul
movsl
int
int3
test
in
ja
push
mov
push
or
daa
jo
outsb
in
movsb
mov
xor
sbb
inc
or
cmpsb
scas
enter
jae
push
sub
mull
lret
call
test
ss
mov
gs
cmp
push
aas
je
mov
arpl
jb
ljmp
insb
aaa
sbb
xor
push
repnz
sbb
icebp
jecxz
jo
imul
jns
xchg
mov
dec
jbe
aas
xor
mov
aam
dec
shrl
mov
sub
std
scas
mov
cmp
loopne
dec
dec
mov
lahf
dec
movsl
or
push
sub
jg
aad
mov
pusha
mov
mov
int3
lcall
data16
lcall
jle
add
mov
push
pop
in
daa
cltd
lcall
dec
xchg
sbb
outsl
mov
push
xchg
inc
out
outsl
sti
add
scas
scas
movsl
jmp
fdivr
sbb
ds
jg
mov
add
shlb
gs
stc
mov
fs
insb
xchg
push
fstpl
mov
enter
cmc
scas
iret
cmp
insl
dec
fucomp
aas
fsubrl
in
mov
pop
mov
fstpt
icebp
pop
into
and
pop
xor
push
mov
add
lds
lock
mov
add
push
dec
iret
test
sarl
or
es
bswap
jo
nop
into
and
filds
inc
jmp
ja
adc
repnz
rcrl
and
fimull
push
jmp
je
lods
repz
ds
sbb
jp
cmpsb
mov
cmp
or
call
jnp
test
and
mov
sub
int3
pop
loope
cmc
jnp
jo
ds
hlt
xchg
push
stc
adc
imul
leave
test
add
mov
and
in
aam
popf
and
faddl
ret
xchg
sbb
mov
movsl
jl
in
dec
mov
out
lods
les
dec
jl
mov
xor
and
pop
add
cmp
arpl
inc
lret
out
jg,pn
stos
pop
sbb
xchg
xchg
mov
mov
imul
or
mov
gs
cmc
out
jge
or
cld
jg
insl
sub
test
enter
cmp
mov
jb
out
sub
adc
add
pop
xchg
xchg
push
sub
movsl
pop
xchg
addb
sub
test
in
cld
lss
xchg
mov
mov
dec
jnp
test
sbb
fsubl
imul
lret
pop
dec
ljmp
add
rorb
sbb
call
rorl
add
fincstp
int
aad
dec
dec
fucomi
popf
dec
lds
call
stc
mov
xchg
into
push
stc
sbb
mov
xor
imul
push
int
xchg
sbb
jp
vpsubw
sbb
es
mov
jle
dec
inc
into
popf
das
xchg
pop
jo
lret
jne
push
sarl
jbe,pt
fwait
push
loop
stos
inc
lret
push
push
xor
mov
int
lret
sub
push
adc
mov
movsb
adc
cwtl
add
rolb
xchg
sahf
testl
es
mov
das
jae
xchg
out
pusha
divb
push
xchg
push
add
iret
xorl
dec
jb
aad
outsb
sub
stc
pop
pop
push
dec
out
fsubrl
push
push
in
enter
into
mov
pop
mov
enter
lods
outsl
mov
mov
cmp
mulb
jp
or
lahf
pop
jb
loope
jl
dec
sub
push
cmp
inc
add
mov
inc
pushf
rorb
pop
push
adc
jbe
cmc
mov
push
push
pop
inc
add
lahf
clc
xlat
loope
jno
cltd
clc
jge
dec
fildll
adc
cwtl
andl
xchg
fildl
bound
jno
add
jge
dec
imul
cmpsl
mov
lods
dec
cmp
repz
lret
rclb
add
inc
mov
push
cmpsl
mov
negl
push
aad
jle
jl
sbb
inc
and
aad
lds
out
popf
jmp
push
aam
pop
sbb
stos
add
icebp
pop
mov
cmpsl
xor
int3
inc
mov
pushf
mov
mov
xorl
clc
inc
sub
adc
lock
jno
sti
mov
outsb
sub
into
mov
rorb
inc
je
je
mov
jmp
pop
xchg
mov
out
ss
add
push
xchg
adc
int
adc
lds
xchg
or
sub
push
int
cwtl
stos
push
adc
mov
xlat
outsl
pop
xchg
fildll
ret
and
sub
cmpb
lahf
jbe
jnp
xchg
ret
jnp
lret
lea
cmp
dec
mov
push
imul
enter
mov
xchg
repz
jl
push
rol
fiaddl
cmpsl
in
faddl
jns
push
inc
add
mov
or
xlat
testb
jle
andb
dec
add
outsb
fwait
push
jmp
mov
and
and
cmpsb
mov
ffreep
stos
and
cmp
adc
out
inc
mov
je
repz
mov
in
adc
dec
mov
sub
ficoms
adc
xor
and
outsb
rorb
push
cld
xor
sbb
push
add
aaa
mov
mov
outsb
mov
mov
addr16
xchg
push
call
iret
jmp
xor
cmp
lock
or
adc
adc
out
mov
shrl
js
jno
fstl
icebp
pop
out
icebp
mov
mov
cmp
data16
mov
test
popa
adc
sub
out
and
subps
clc
lock
fmulp
addr16
fsubp
sbb
call
add
pop
xchg
cmpsl
inc
popf
enter
sub
jmp
inc
leave
mov
mov
xorl
ss
adc
pop
pop
and
lods
inc
fimuls
push
clc
cmc
rolb
es
lods
mov
gs
in
jo
mov
cs
fistl
out
adc
push
pop
popf
xchg
add
mov
ret
add
ljmp
scas
stc
insb
mov
cmp
push
inc
mov
sbb
and
rcll
or
cmpsb
inc
xorl
fidivl
xor
cmpsl
dec
outsl
jns
ds
nop
mov
movsl
pop
jbe
xor
jg
xor
mov
fisttpll
push
xchg
int
and
rorl
push
ja
fs
inc
stos
jmp
lahf
adc
sbb
lods
inc
lods
mov
cli
mov
fwait
into
mov
arpl
cwtl
aaa
mov
shrl
inc
mov
dec
icebp
sbb
das
in
ljmp
mov
iret
pop
fdivs
dec
sbb
or
push
das
std
aam
mov
iret
mov
aad
inc
fwait
pop
mov
fisubs
cmp
insb
jb
cmp
xchg
add
aam
subl
mov
push
mov
movb
scas
decl
hlt
mov
cli
sub
inc
test
xor
inc
insb
cwtl
xor
cmc
into
dec
jae
push
aaa
test
push
push
jbe
mov
sub
pop
jl
insb
mov
add
es
jae
inc
fistl
nop
gs
rorb
test
leave
lock
repnz
xor
xchg
imul
mov
add
push
imul
inc
addb
sbb
add
inc
mov
test
inc
xor
clc
xor
inc
lret
sbb
neg
xor
push
popl
es
push
stos
cmp
push
pop
xchg
pushl
cmp
xchg
imul
cmp
sub
daa
pop
es
sub
adc
int
mov
lock
or
and
inc
lock
adc
loope
and
adc
xchg
rcr
es
push
pop
jge
mov
js
pop
and
dec
iret
xor
popa
imul
mov
push
xchg
adc
mov
test
adc
dec
test
adc
jne
add
iret
jecxz,pn
adcb
sub
xchg
mov
xchg
inc
or
mov
mov
push
jnp
loopne
jge
mov
add
mov
cmpb
fwait
lock
lds
fs
stos
enter
lret
aas
ret
aas
je
ljmp
add
adc
imul
or
bound
fmuls
inc
or
add
cmpsl
outsl
adc
loopne
dec
jns
bound
lcall
jle
pop
pop
xor
or
ret
insb
in
subl
lcall
jmp
xor
stos
lea
je
ret
cs
std
and
pop
lock
jae
push
push
mov
push
negl
xchg
push
mov
push
mov
add
enter
fisubs
mov
xchg
inc
movsb
in
or
push
int
adc
xchg
sbb
xchg
movsl
shrb
test
stc
nop
mov
inc
mov
adc
mov
xorb
das
bound
add
out
clc
fidivrs
jae
push
les
pushf
ret
jmp
jmp
mov
adc
jns
mov
test
aas
js
sub
jge
xlat
push
das
stos
fisttps
or
jmp
rcr
sbb
leave
popa
sub
or
mov
aaa
jne
sbb
outsl
or
sti
add
mov
xchg
inc
cmp
or
scas
test
int
xor
dec
fdivp
sbb
adc
rolb
or
and
fs
cmp
adc
mov
cmp
fildl
loope
mov
jne
adc
rcl
test
xchg
insb
stos
loop
fwait
ds
cmc
icebp
loopne
scas
outsb
shl
sub
shlb
inc
in
cmpsb
mov
aad
mov
int3
mov
imul
push
add
mov
dec
sbb
dec
sbb
mov
in
test
mov
repz
jbe
xchg
test
andb
xchg
mov
mov
outsb
andl
pop
call
faddl
loopne
testl
lcall
outsb
testl
bound
imul
repnz
mov
pop
enter
les
iret
sbb
in
negl
jecxz
inc
sbb
pop
ds
scas
mov
jb
repz
add
push
push
in
cld
pop
outsb
pop
jl
jne
in
or
mov
stc
leave
mov
push
xchg
out
rep
iret
add
mov
outsb
aas
sbb
mov
jg
push
add
les
pop
pop
shlb
push
push
test
mov
xchg
inc
mov
fnstsw
pop
insb
scas
aam
push
dec
adc
jecxz
hlt
or
sub
movsl
push
sub
dec
rorb
lret
mov
push
rolb
outsl
and
mov
mov
sarl
inc
add
sarl
sbb
inc
or
and
out
in
sub
mov
jo
inc
andl
ljmp
jnp,pn
out
dec
adc
out
test
or
adc
push
mov
insb
xor
test
jmp
mov
repz
or
jge
xchg
mov
and
xor
or
xlat
jns
mov
shll
setno
push
sti
out
insl
ret
mov
jle
inc
or
aas
push
pop
aad
idiv
sarb
shlb
imul
std
aaa
jmp
je
xchg
movsb
daa
ret
fwait
movb
sbb
arpl
data16
out
jecxz
test
inc
sti
ds
sub
adc
xchg
xlat
inc
cltd
stc
dec
in
mov
into
sbb
xorb
push
rorl
testl
push
ss
adc
or
dec
sub
movsl
pop
rcr
mov
lcall
mov
aam
add
ja
push
dec
dec
fisubs
sti
jecxz
popa
push
iret
leave
les
bound
test
and
ljmp
jno
ss
pop
loope
mov
pop
push
nop
mov
jecxz
mov
lods
sub
fcomip
shlb
jne
mov
mov
hlt
imul
movsb
cmp
mov
inc
mov
pop
imul
fimuls
js
add
sub
mov
aad
dec
or
pop
dec
pop
movsl
subl
xchg
aas
sub
out
rcl
es
frstpm(287
jmp
sub
repz
dec
mov
jae
stc
cmp
les
fdivr
inc
push
mov
xorl
test
xor
ja
push
jmp
pop
bnd
mov
xchg
fucomi
pop
push
adc
sub
cmp
add
sub
dec
inc
mov
add
sbb
and
fimull
popf
sub
dec
push
sbb
lds
sbb
jae
in
js
dec
aaa
fadds
add
adc
add
pusha
cmpsb
inc
add
cs
pop
scas
scas
sub
loope
test
add
push
lret
pop
mov
call
fucomip
dec
sbb
sub
jae
add
lahf
daa
aam
pop
lods
pop
fnstcw
cli
pop
xor
add
lcall
sub
sbb
jns
push
insl
lea
outsl
inc
mov
xor
and
jo
mov
add
sbbb
xor
mov
orl
xchg
stos
data16
push
cmp
mov
insb
cld
jnp
int3
sub
data16
imul
pop
pusha
push
cli
arpl
mov
nop
outsb
mov
jnp
xor
jl
jno
adc
pop
sub
nop
stos
pop
rorl
adc
lock
popa
mov
jno
dec
pop
dec
fstp
adc
std
clc
cltd
incl
or
subb
shr
mov
ficoms
cld
leave
mov
stos
mov
xor
mov
push
pop
fisubrl
dec
mov
lods
cmp
lods
jo
rol
xor
orl
pusha
push
push
jl
idivl
pop
xor
inc
bound
sub
movsb
cmp
in
xchg
jmp
fidivs
jbe
mov
lcall
xor
mov
inc
lret
rorb
xor
cmp
push
cs
cmp
sbbl
mov
pushf
dec
mov
mov
or
push
pop
ljmp
adc
retw
pop
cmpsl
xor
pop
mov
lahf
jle
mov
add
fs
das
push
mov
int
push
addr16
mov
shlb
pop
inc
jecxz
loopne
pop
jmp
xor
rcll
jne
jg
inc
push
call
pop
call
lods
cs
xchg
mov
lods
jo
jl
sbb
add
and
rolb
js
ror
arpl
mov
dec
push
out
jo
push
clc
adc
nop
mov
pop
ja
mov
and
clc
stos
js
mov
xor
pusha
jg
lods
sbb
adcb
pushl
std
pop
push
fdivp
or
cmc
insb
xchg
pop
lea
adc
lahf
hlt
insb
icebp
pop
hlt
jg
inc
scas
cmp
repnz
sub
sub
push
jg
mov
jge
lret
inc
push
mov
push
push
or
sbb
mov
or
xor
push
sarl
xchg
flds
ret
fstps
das
sti
cmp
imul
jnp
inc
cmp
pop
xchg
sbb
repz
push
add
or
sbb
sar
pop
xchg
je
mov
aas
cmpsb
mov
cmp
ja
cmpsl
pushf
dec
fisttpl
stc
mov
cmp
popf
bound
xchg
add
pop
mov
push
sub
jbe
mov
cmp
mov
xchg
mov
mov
das
cmpsl
xor
add
sti
les
lret
or
mov
adc
std
into
scas
sub
pop
inc
fidivrs
adc
jp
push
mov
aam
mov
push
clc
push
je
int3
imul
sar
xchg
add
leave
insb
loope
push
nop
pop
icebp
lahf
outsb
cmp
loope
pop
pop
test
mov
ljmp
clc
and
popa
ficomps
cs
cmpsb
lret
outsl
sbb
mov
sub
aas
ror
fldt
cltd
fdivl
pop
mov
popa
xchg
cmp
loopne
fistps
xor
popf
xor
test
cmp
insb
out
iret
out
data16
insl
mov
mov
lcall
pop
xchg
ficomps
aaa
cmp
jmp
or
lods
sbb
mov
int
ret
or
sub
addr16
aaa
insl
mov
jne
int3
jecxz
addr16
lods
outsl
or
inc
mov
sub
mov
add
jbe
div
push
sarb
inc
jge
pop
sub
ja
bound
test
sbb
mov
and
jle
push
and
repz
mov
add
test
dec
mov
aas
lods
xchg
jo
adc
jp
xchg
cmp
push
mov
stos
aas
imul
lea
dec
push
into
and
xorb
add
addb
push
fwait
and
mov
sub
shll
cmp
xchg
pop
rol
aas
dec
inc
imul
pop
fnsave
pop
cmpsl
rorb
jmp
shlb
and
inc
aaa
stos
movsl
push
sub
jle
cmp
adcb
mov
inc
idivl
adc
mov
jb
and
cli
sub
xor
or
ret
shll
pusha
mov
stos
bound
mov
mov
pop
or
cltd
jg
jne
adc
sti
pushf
sub
xor
mov
xor
stc
or
popa
lods
adc
ret
pop
daa
iret
pop
xor
je
test
add
push
mov
adc
add
cmp
add
into
insb
inc
repnz
sub
imul
pop
movsl
outsb
fidivrl
xor
push
les
sarl
jecxz
add
inc
lahf
dec
sub
jae
fcomi
or
inc
xchg
inc
pop
sbb
das
out
jmp
hlt
push
addb
les
push
mov
and
in
sub
lcall
fmulp
adc
dec
fdiv
push
in
scas
jecxz
ja
movsb
outsl
mov
dec
push
fwait
and
mov
pop
mov
push
xchg
mov
ja
lret
in
adc
mov
xchg
inc
add
into
pop
inc
cmpsb
pop
xor
notb
cltd
xor
xchg
and
cmp
sub
add
xchg
jge
sbb
jbe
xchg
clc
in
sub
push
jg
scas
dec
outsb
outsb
dec
sbb
sbb
repnz
adc
dec
cmc
mov
push
fisttpll
idivb
lods
xor
out
xchg
cmp
movsb
les
cld
dec
fcoms
jne
pop
cwtl
iret
dec
cld
das
int3
adc
icebp
sbb
mov
loope
gs
push
js
out
add
sub
push
jg
dec
enter
push
scas
fnstsw
jns
jbe
and
jge
or
lods
mov
outsl
aas
sbb
sub
faddl
add
pop
fcoml
adc
cmpb
nop
cmc
jp
loopne
sub
xchg
mov
sahf
call
xor
xor
jbe
pop
add
cmp
aad
scas
aam
cltd
negb
mov
cmc
or
sti
push
loope
fiaddl
inc
es
mov
inc
pop
push
in
push
or
cs
lret
xchg
push
sbb
dec
gs
inc
add
push
out
inc
test
loopne
add
fldz
fidivrs
cmp
bound
sbb
andb
mov
loopne
and
out
orl
pop
xchg
inc
mov
mov
ficoml
test
or
push
inc
dec
jnp
adc
ja
add
gs
push
adc
jno
mov
sub
cmp
xchg
pop
sbb
mov
xchg
cmc
pop
aam
cmpsb
in
repz
fcomps
xchg
adc
movsl
sbb
jle
shll
test
addr16
add
in
cld
jne
subl
outsl
xor
jecxz
ret
cli
stc
ja
push
addb
sbb
sbb
hlt
lds
mov
xor
sub
shll
fisubrl
or
into
aas
adc
std
inc
scas
xchg
sub
lea
insb
inc
jge
pop
mov
xor
push
xchg
dec
xor
repz
dec
outsl
shrb
pop
cli
or
sub
rcl
cmpsl
xor
js
sub
inc
fwait
into
pop
outsb
dec
out
lock
std
mov
fsubl
mov
or
push
dec
cltd
nop
out
add
in
into
dec
inc
mov
pop
outsl
mov
and
popf
outsl
std
mov
add
out
adc
das
aas
test
orb
sbb
aaa
add
stc
flds
into
mov
xchg
cmp
nop
push
sbb
dec
or
push
dec
dec
shrb
loopne
andb
pop
fsubp
es
xchg
add
lahf
popf
jl
test
out
fwait
cmc
and
out
mov
femms
lea
pop
enter
mov
repz
sub
xchg
cmpsl
das
mov
pop
jns
mov
testl
ja
jp
stc
bound
popf
test
adc
mov
mov
sbb
sbb
mov
jbe
and
clc
shlb
out
sub
xchg
hlt
lea
jl
dec
lahf
mov
cmpsb
int3
in
mov
mov
ss
push
cmp
lods
loope
insl
push
stos
dec
mov
imul
into
mov
nop
popa
iret
data16
sub
mov
add
cwtl
jge
xchg
ror
data16
or
mov
cmp
mov
sub
mov
xor
and
movsl
and
and
jae
push
xor
int3
jae
lea
inc
jp
shll
lock
sub
notb
orb
inc
push
mov
or
add
lds
hlt
jbe
inc
mov
in
mov
sahf
insl
outsl
cmp
push
jns
mov
out
je
mov
xchg
and
fcomps
jecxz
mov
or
call
arpl
pop
popf
rcr
sub
aam
sub
jl
movsb
push
shll
mov
cmpsb
inc
out
fidivl
nop
lret
fwait
ret
movsl
mov
sbb
insb
dec
cmp
std
out
cmp
xchg
sahf
add
jg
sarb
das
out
movsb
inc
push
add
test
inc
mov
mov
icebp
add
sbb
test
std
faddl
xchg
test
lea
jle
cs
cmp
mov
leave
mov
aas
cmp
mov
mov
stos
xchg
fwait
push
mov
loop
push
rorl
nop
arpl
ret
inc
int
jb
cmpsb
mov
xor
mov
ds
dec
cmpsl
hlt
repz
loopne
es
cmp
push
mov
pop
inc
cmpsb
scas
ss
pop
xchg
bound
jae
mov
sahf
push
stos
clc
aaa
mov
les
fisttps
mov
mov
mov
mov
add
jo
das
mov
mov
hlt
cmpsb
jp
cld
jno
and
and
test
sbb
stos
or
cmp
insl
adc
pop
mov
subb
insl
jne
adc
addr16
push
inc
adc
out
hlt
addr16
cwtl
insl
push
aaa
cli
mov
repnz
jo
negl
lods
nop
lods
xor
test
xchg
lcall
test
jg
addb
and
jb
jmp
js
inc
lods
inc
mov
and
cli
adc
jno
mov
imull
ja
stos
aam
xchg
and
pop
push
dec
push
sub
out
sbb
jecxz
xlat
inc
add
call
gs
inc
ja
dec
dec
lret
fmull
ds
movsb
mov
xor
jns
ss
out
or
jb
add
into
call
xor
jp
xchg
outsl
stc
jne
cli
sbb
inc
mov
rolb
cltd
xchg
add
popf
add
loopne
push
push
mov
in
daa
cli
aas
pop
mov
pop
sti
sub
sbb
xchg
add
scas
or
cmpsb
xchg
lods
inc
stos
fsincos
dec
xchg
or
pop
pop
mov
sub
adc
xchg
cmp
jg
in
inc
daa
loop
mov
push
inc
lods
negl
sub
jnp
inc
imull
cld
lea
jne
insb
pop
into
in
ret
xchg
push
scas
out
ficoms
inc
int3
mov
sub
iret
in
jbe
ljmp
shll
dec
fisttpl
push
aaa
pop
or
dec
mov
stc
idivb
jge
mov
pop
lock
dec
mov
push
ja
sub
fiadds
stos
pop
pop
ss
pushf
jg
leave
in
mov
mov
add
into
mov
mov
rcrl
mov
mov
stos
frstor
pop
out
sbb
aaa
inc
shl
xchg
mov
jp
ss
mov
and
mov
xor
leave
cltd
add
inc
insl
push
mov
add
adc
jge
jbe
inc
imul
in
es
fiadds
push
inc
sub
xchg
lcall
pop
les
pop
lcall
cmp
mov
call
js
testb
mov
xor
xchg
out
jmp
shll
add
gs
idivb
and
sbb
cmpsb
mov
adc
push
shll
nopl
jo
mov
mov
loope
inc
ds
pop
jne
sub
jns
fsubs
iret
shl
out
setne
loop
stos
mov
sbb
es
inc
fdivp
lea
gs
sub
std
xchg
rcl
mov
sbb
inc
std
rep
repnz
jae
mov
xchg
mov
es
rorl
or
rorl
mov
sahf
pop
mov
jo
outsb
sub
mov
fidivl
pop
or
jge
add
fstpt
mov
enter
mov
aad
ret
sub
lcall
push
scas
push
mov
icebp
into
push
mov
push
jl
xchg
std
je
jbe
jl
and
cld
roll
lds
ss
mov
sbb
xlat
int3
rol
rclb
ljmp
xor
mov
insl
call
push
call
lock
ljmp
iret
loopne
pop
cmpsb
and
out
mov
jno
mov
cmp
or
shr
mov
outsb
pop
loop
add
mov
dec
jno
movsl
or
pop
or
ret
jae
mov
add
sub
inc
or
jnp
mov
rcrb
js
iret
sbb
or
in
loop
dec
add
xor
inc
pop
test
les
idivb
ss
ret
sub
fldcw
adc
cmpsb
das
jp
test
xor
push
int
addr16
bound
mov
push
fiaddl
or
test
and
pop
pusha
inc
movsb
stos
mov
sub
lods
fmull
xchg
ret
jns
pop
xchg
mov
roll
push
cli
pop
clc
shrb
xchg
divb
insb
mov
or
mov
and
cld
mov
jb
xchg
fldenv
out
jp
pop
mov
repnz
sar
cmc
js
int
and
loopne
js
pop
sarl
mov
pop
jmp
or
loopne
xor
ret
fimull
cld
testb
popa
xchg
mov
xchg
push
sbb
sub
fildll
ljmp
into
jns
arpl
jno
pop
fldl
sti
in
std
imul
loop
outsl
xchg
popa
testb
addl
add
pop
fs
fwait
jne
dec
mov
int
mov
rcll
cmp
in
sbb
cltd
je
in
push
hlt
adc
mov
dec
andb
push
xor
cmp
mov
in
sub
int
xchg
mov
data16
out
lds
clc
sbbl
add
lods
lret
push
int3
enter
in
mov
icebp
pop
sbb
pusha
fidivl
ror
imul
or
incl
mov
and
mov
mov
pop
mov
jge
jge
push
movb
fdivrs
daa
xchg
sub
mov
test
or
jae
dec
shlb
adc
dec
push
aas
popa
scas
pushl
cs
inc
loope
adcb
inc
test
mov
pusha
mov
jns
fwait
mov
sarb
popf
repz
add
mov
sbb
stc
xchg
cwtl
stos
cmpl
mov
sarw
ret
mov
mov
test
pop
daa
mov
jno
dec
fmull
cli
lahf
cmp
jl
cmp
cmp
jbe
push
pop
jns
sbb
shrl
lea
lahf
je
adc
xchg
arpl
stc
inc
into
aas
fsubs
xchg
add
stos
mov
lea
mov
test
xor
xchg
mov
sar
adc
or
xchg
jae
push
mov
push
jmp
nop
dec
or
outsl
mov
cmpsb
repz
or
jb
aad
lcall
rcll
and
ss
mulb
xchg
mov
pop
test
jno
pusha
daa
add
sub
jecxz
adc
nop
push
add
pop
cmp
mov
jle
mov
out
aad
cmp
xlat
jo
rcrl
insl
daa
mov
loopne
inc
or
xchg
xor
arpl
jns
pop
ljmp
test
sub
iret
lahf
add
push
arpl
fwait
lods
mov
xor
cmc
jecxz
aas
pop
push
jbe
or
in
in
mov
mull
seta
adc
bound
int3
gs
cmp
dec
cltd
push
outsl
push
fwait
xchg
fs
sti
dec
stc
sub
andb
out
push
xchg
ss
add
test
imul
es
push
push
xchg
out
xchg
fstps
imul
dec
pop
mov
stc
and
fwait
mov
cmp
pop
mov
data16
cwtl
push
sub
add
enter
scas
cmc
xor
je
sbb
inc
ja
daa
xchg
cmpsl
popf
aam
mov
std
daa
add
dec
out
add
fsubs
and
pop
mov
mov
xchg
iret
lea
sbb
icebp
adc
popf
insb
and
inc
pop
mov
sbb
and
and
pop
sub
int3
loop
cmp
ljmp
mov
outsb
leave
xor
pop
popa
je
mov
les
ret
dec
ja
scas
cli
or
and
mov
icebp
xchg
mov
gs
fxch
xchg
add
inc
mov
lock
mov
pop
fiadds
or
xor
mov
aad
dec
fs
mov
or
fsub
and
dec
cld
cltd
ljmp
fwait
push
shl
jo
sub
push
or
mov
iret
inc
sti
pop
pop
iret
cltd
inc
cld
xor
jl
mov
xchg
pop
xchg
adc
sub
add
dec
fisubrs
ficomps
sub
fldt
cltd
sub
inc
outsb
clc
insl
and
push
ja
pop
std
jne
insb
jns
movsb
aaa
repnz
pop
mov
pop
lods
xchg
xchg
push
push
push
mov
cltd
pop
popa
imul
in
mov
xor
pop
sbb
pop
mov
pop
fadds
shlb
in
bound
into
cmp
adc
cli
dec
hlt
aad
hlt
cmp
and
js
or
xor
insl
add
fdivp
shr
popf
and
dec
sahf
inc
jb
in
adc
xchg
pusha
idiv
cmpsl
loop
sahf
mov
inc
shl
cld
xchg
loopne
pushf
sbb
loopne
fdivrs
fucom
pop
xchg
sbb
lret
push
stc
in
mov
fistpll
push
mov
or
aas
cmpsb
pop
or
cwtl
push
aaa
jge
sub
sub
in
adc
scas
nop
out
cli
pop
lret
sti
xor
xor
imull
cmp
sub
jp
cmpsl
mov
sub
clc
inc
or
sbb
pusha
cmpsb
das
shr
and
out
es
dec
ja
out
filds
jl
das
jns
hlt
push
fildl
mov
mov
out
jb
lret
fldl
ror
or
cmp
gs
xchg
inc
enter
inc
add
push
pop
cmpsl
xchg
jge
aad
inc
popa
inc
fwait
jns
arpl
lods
leave
cmp
pop
out
dec
push
xchg
jnp
mov
sbb
push
mov
inc
fcmovnb
xor
aaa
mov
and
outsl
jl
sti
cmpsb
pop
cli
mov
mov
sarb
dec
sahf
jo
test
push
and
daa
dec
push
callw
cmp
syscall
mov
inc
push
mov
negb
mov
fsubrs
imul
and
subb
sub
fnstcw
ja
test
loopne
stos
xor
imul
arpl
pop
je
test
jl
cmpsb
jne
in
mov
loopne
lret
xor
cmp
fimuls
lret
sar
icebp
and
xor
addr16
les
or
ret
xchg
mov
dec
pop
rcll
arpl
mov
sbb
mov
stc
nop
or
negl
inc
shrl
and
in
cli
pop
xor
xor
scas
sub
jae
fwait
xor
dec
cmp
lea
shr
jae
cmpsl
dec
adc
inc
in
in
hlt
aam
call
mov
test
push
test
inc
aas
shr
or
and
dec
xchg
mov
mov
push
add
jmp
flds
mov
jg
push
aaa
pop
popf
mov
jns
test
mov
sub
test
cmp
mov
mov
int
jmp
jns
mov
add
cmpb
enter
pop
mov
pop
imul
cs
test
in
sbb
pop
aaa
or
cmp
aas
insb
and
ja
das
fbld
mov
in
sbb
adc
mov
push
pop
aam
and
js
add
ficoml
pop
bound
add
repz
sahf
jno
cmp
fistpl
pop
adc
push
rcll
pop
inc
jb
inc
inc
cli
mov
push
mov
cmpl
jp
xor
fisubrl
xchg
outsl
stos
adc
arpl
je
fmull
stos
test
inc
or
jb
dec
mov
mov
shl
and
mov
dec
mov
push
jae,pn
mov
dec
adcl
add
mov
scas
cmpsl
lea
rorl
inc
repz
fstl
dec
lods
mov
cld
xchg
dec
sub
in
xchg
aaa
push
daa
in
jb
iret
jl
add
fsubrs
xchg
sub
add
mov
lahf
and
jo
addr16
insl
aas
jns
mov
das
dec
lea
ret
mov
inc
faddl
pop
insb
cmpl
arpl
push
mov
rorb
xorl
aaa
popf
mov
test
sub
leave
sub
out
pop
mov
sbb
cltd
jb
jnp
int3
sbb
or
shl
daa
leave
sub
xchg
stos
adc
mov
outsl
pop
loopne
mov
inc
out
in
sub
cmp
ret
inc
push
push
push
mov
cld
in
aas
aam
xchg
mov
aam
push
nop
shlb
fidivs
call
adc
rep
fiadds
cmp
mov
inc
xor
pushf
test
cmpsl
jmp
in
push
sub
adc
arpl
jl
clc
pushf
sbb
mov
shll
jecxz
pop
sub
inc
or
jns
out
movb
pop
scas
xor
sub
pop
push
push
push
mov
gs
xorps
js
push
lahf
inc
sbb
cmp
shl
test
notl
in
int3
mov
jmp
gs
inc
sbb
mov
mov
movsl
dec
and
lcall
aas
cmpsl
mov
jb
sub
inc
push
out
pop
push
sub
jb
xchg
xchg
clc
das
and
and
xor
mov
or
into
je
hlt
sti
int3
lods
cwtl
inc
push
cmp
movsl
icebp
sbb
jecxz
call
push
jno
fisttpl
enter
call
out
push
shrl
pop
push
daa
testl
adc
pop
jecxz
jmp
mov
xchg
cltd
mov
fsubrl
sbb
cs
std
or
or
push
shr
or
mov
movsb
jb
mov
xor
and
iret
lods
mov
aad
cmpsl
mov
cmpsl
ret
movsl
movsb
xchg
xchg
and
mov
mov
fs
orl
mov
jge
mov
dec
adc
xor
das
aas
or
arpl
adc
outsl
aam
cltd
lret
inc
add
pop
negl
jp
mov
mov
push
loope
push
call
add
add
sub
or
xor
call
dec
inc
or
scas
xchg
dec
jge
loope
dec
mov
stc
setnp
shrb
imul
sbb
jg
xor
push
push
cmp
and
jl
push
or
lock
stos
mov
xchg
jmp
adc
shl
push
xor
test
dec
movsl
jle
lds
mov
mov
idivl
push
out
sbb
inc
test
jl
lret
pop
dec
cld
ret
and
pop
sub
xlat
repnz
outsl
loope
sub
enter
or
sub
cli
or
out
sbb
xchg
xchg
mov
cltd
xchg
push
shrl
pop
mull
sbb
cltd
add
sahf
les
jge
inc
in
sbb
stc
data16
ss
dec
jo
jno
orl
in
js
jae
into
out
jae
ret
in
sbb
mov
pushf
or
inc
out
inc
hlt
mov
cmpsb
leave
push
addr16
sbb
test
xor
pop
push
cmc
sbb
mull
mull
sarb
jl
mov
aas
shrl
lret
add
pop
mov
fwait
jnp
lods
xor
xorb
sub
enter
out
fdivr
mov
mov
jecxz
js
inc
sar
and
mov
xor
jb
pop
xchg
test
pop
pusha
and
pushf
sub
mov
out
mov
lds
dec
jecxz
movl
enter
inc
popf
jmp
cmp
adc
popa
pop
jo
lds
dec
xor
lods
jb
adc
inc
pushf
into
movb
test
sub
adc
or
mov
iret
adc
or
mov
or
add
add
xor
cmpsl
and
add
mov
bound
setge
xchg
push
xchg
cmpsl
inc
cwtl
or
out
je
stc
loop
dec
xchg
std
fs
outsl
cwtl
stc
dec
inc
sub
addr16
and
or
pop
push
outsb
cmp
sti
jmp
test
or
mov
js
xor
xchg
fcomp
stos
aas
cwtl
mov
sub
shl
movsl
mov
aam
les
inc
stos
adc
mov
pushf
sar
cmp
pop
decb
fcoms
mov
lret
add
lcall
inc
inc
push
test
fidivl
pop
sarl
sahf
and
shl
push
fists
mov
xor
xor
cwtl
push
pushw
adc
hlt
sti
cmc
jne
pop
xchg
int
add
pop
xchg
testl
dec
mov
gs
sbb
adc
push
jb
sub
ds
por
xor
test
sub
das
movsb
sbb
loop
ret
sahf
movsl
lea
ja
xor
sbb
in
jns
scas
mov
aaa
out
stos
popa
xor
aas
in
sbb
in
sbb
inc
mov
pop
sub
jno
sbb
rol
dec
pop
fs
xor
fldt
sub
jno
mov
inc
stos
xor
mov
faddl
jb
jmp
xor
sub
subl
int
and
pop
sbb
adc
or
xchg
popa
mov
rorl
mov
sub
repnz
or
sbb
mov
loopne
dec
sarb
int3
mov
sbb
loopne
jl
adcb
mov
montmul
cmpsb
add
cld
filds
jae
lock
fwait
scas
sub
repz
mov
mov
xor
ljmp
mov
cmp
jmp
mov
jns
sub
push
popf
sti
xor
mov
mov
mov
imul
pop
mov
insl
mov
jbe
sub
test
jbe
out
pop
cmpsb
cmpsl
pop
lret
seta
lock
sbb
dec
dec
sub
aad
jmp
dec
imulb
or
cmp
imul
mov
dec
mov
fsubs
push
lahf
cli
nop
push
sub
aam
addl
into
mov
clc
mov
cmp
sarb
lea
icebp
sub
jno
dec
loope
add
pushl
mov
roll
pop
sbb
mov
push
rclb
cli
add
xchg
and
test
mov
pop
repz
pop
lods
inc
mov
cmp
xchg
ficoml
cmpsb
add
dec
xor
pop
fabs
int3
push
shrb
adc
adc
lods
int
mov
or
jl
icebp
cmp
dec
int3
rcrb
sub
btr
mov
mov
aam
cs
adc
pop
test
cli
inc
cwtl
dec
add
scas
ffreep
adc
loopne
movsb
orl
lcall
mov
dec
cmp
cmp
push
orb
sub
inc
in
roll
je
pmuludq
cmp
jo
repz
inc
fadd
inc
icebp
scas
arpl
pop
xor
lea
scas
xchg
loopne
imul
stos
int3
add
arpl
fisubl
and
jl
ret
and
fs
je
mov
jmp
cmp
cmp
xor
xor
xor
movsb
ja
xchg
sbb
sub
xor
jle
xchg
std
mov
add
jo
adc
loop
push
imul
ret
or
xor
stos
xchg
sub
popf
movsb
mov
mov
mov
dec
out
test
lret
push
test
jl
movsb
ret
inc
push
adc
mov
fisttpll
sarb
lret
lock
pop
in
mov
push
mov
sbb
ds
xchg
mov
das
out
repnz
std
insl
rcrl
inc
pusha
loop
in
xchg
das
into
roll
popa
and
int
adc
sahf
mov
in
enter
loope
leave
cmp
push
inc
push
int
sbb
aaa
imul
clc
mov
sti
pop
shll
or
xchg
cli
scas
int
dec
cld
xchg
jge
jb
int
imul
mov
iret
subb
lods
cmpsl
jne
xor
cmp
ret
icebp
xchg
inc
pop
mov
adc
ret
mov
jge
mov
pop
xchg
out
dec
pop
movsl
in
add
add
int3
add
xor
xor
xlat
xor
adc
lea
pop
cltd
jge
fnsave
arpl
in
cmpl
out
push
sahf
mov
cli
inc
lcall
inc
arpl
fsub
push
ljmp
jo
fdivrl
add
dec
mov
inc
add
loopne
cmp
js
or
stos
int
adc
sarl
or
adc
decb
vpunpckhbw
xchg
add
mov
lods
ret
xchg
and
mov
xchg
lea
bound
xchg
sahf
test
aam
outsl
addl
lcall
sbb
mov
dec
xchg
jmp
jmp
lods
cmc
dec
aaa
shll
or
aad
out
adc
mov
jbe
aad
jno
fdivl
imul
js
pop
hlt
imul
xor
addr16
data16
mov
pushf
sti
orps
adc
mov
test
pop
insb
lds
ja
cmc
mov
leave
packssdw
pop
movaps
mov
xlat
imul
lock
xor
les
mov
pusha
fistps
cmp
mov
int
cmp
es
sbb
test
jmp
xchg
push
jmp
adc
xor
pop
inc
jns
subl
js
outsb
mov
aam
push
sbb
jl
or
mov
mov
adc
fldt
out
jo
mov
clc
xchg
aad
je
mov
stos
add
xor
lods
jge
aas
sbb
nop
xlat
xchg
call
or
sbb
loope
sub
loopne
xor
sar
nop
outsb
sub
jl
mov
rorb
push
das
or
mov
clc
rorb
dec
cmp
jl
dec
cvtdq2ps
cmpsb
data16
mov
cwtl
mov
js
inc
repz
in
mov
xor
xor
filds
jl
insl
dec
vmaxss
inc
mov
popa
cmc
push
add
ficoml
push
xor
mov
ret
or
loop
aam
fxch
cmp
adc
popf
fildl
mov
or
inc
and
jp,pt
stc
out
inc
mov
testl
push
negb
add
insl
mov
arpl
cmpb
push
in
mov
enter
movl
push
jnp
add
xchg
sti
sub
aad
scas
push
inc
or
les
repnz
sub
pop
sti
into
add
xchg
cld
pop
in
dec
orb
cs
or
inc
mov
pop
rcrb
inc
mov
movsl
in
inc
scas
rclb
mov
dec
add
lahf
xchg
daa
ljmp
test
jle
test
rorb
in
ret
cmpsl
mov
fsubl
in
je
je
scas
mov
pop
incl
cwtl
xchg
push
mov
insl
loopne
sub
jmp
sub
add
inc
in
push
mov
sub
call
push
mov
xor
arpl
mov
and
in
and
sbb
jb,pn
cmp
mov
in
push
lret
mov
stos
mov
jbe
and
ja
loop
mov
pusha
push
xchg
sbb
adc
lock
xlat
lods
jl
sub
pmulhuw
test
ss
sbb
aaa
pop
ss
pop
loop
pop
xchg
jp
scas
add
and
xor
jbe
sub
xchg
or
dec
rcrb
push
int3
mov
pushf
iret
push
and
out
fimull
cmc
stc
push
sahf
lds
repz
and
inc
mov
fidivrs
adc
clc
sahf
mov
mov
sbb
adc
test
ds
imul
cmpsl
xchg
mov
inc
and
or
mulb
scas
adc
stc
pop
aaa
aad
mov
das
in
dec
push
mov
lods
ds
daa
das
popf
popf
mov
pop
cmp
neg
mov
cwtl
jp
sbb
xchg
xchg
or
mov
rcll
cs
into
cmp
sub
movsb
enter
imul
push
out
stos
push
call
aas
sbb
push
mov
stos
cmp
outsb
fwait
leave
test
mov
test
fmull
jle
shlb
jne
mov
or
nop
jbe
mov
xor
xchg
jno
jno
dec
mov
fnstsw
add
jl
push
adc
inc
divl
add
inc
pop
and
mov
sahf
repnz
stos
icebp
in
test
test
push
rclb
jnp
lods
sub
stos
bound
adc
jne
pop
mov
sub
popf
lret
jnp
scas
mov
push
nop
push
pusha
mov
or
pop
sar
das
insl
ss
mov
data16
sbb
aad
jmp
and
in
mov
lret
shlb
hlt
inc
sti
jle
jb
popa
sub
jae
fdivrs
repnz
adc
mov
out
pop
repz
mov
sbb
jb
and
ds
lock
jns
cwtl
and
lahf
and
ret
lret
inc
scas
in
add
pop
stc
mov
stos
rcrl
out
jecxz
js
pusha
push
es
or
addr16
xchg
mov
inc
repz
mov
adc
es
xchg
notl
adc
and
mov
mov
push
movsl
add
sbb
and
iret
lahf
arpl
or
xchg
cmp
jnp
xchg
mov
or
sub
leave
loope
sub
ja
mov
ja
arpl
into
cmc
sub
gs
arpl
xorb
sbb
aad
insb
hlt
rolb
and
loope
jg
cld
or
cmp
xchg
mov
movsl
sub
loope
outsl
adc
xchg
lock
or
push
mov
lret
sbb
and
xchg
ret
loope
pop
dec
push
adc
jns
xchg
mov
shrb
in
xchg
xlat
lahf
push
sbb
pop
adc
iret
cmpsb
xchg
dec
into
inc
imulb
cmc
das
loopne
mov
insb
xchg
xor
test
testl
dec
pop
cs
mov
rorl
lods
xchg
in
sti
loopne
push
sub
jno
sub
mov
sbbb
popl
push
shl
fcoms
cld
inc
rol
xor
movsb
inc
pop
mov
pop
cmc
push
pop
clc
xchg
push
push
lgs
cmpsl
cmp
mov
fmuls
add
xor
mov
test
inc
xor
sub
adc
addr16
xor
addl
js
mov
xchg
jle
xor
sbb
pop
fs
leave
popf
sbb
xchg
push
jmp
repnz
insl
mov
push
fistpl
stc
pop
mov
jne
mov
push
aad
jmp
pop
aaa
mov
ficompl
jl
add
mov
nop
xchg
add
cmp
dec
sbb
mov
loope
icebp
cmp
adc
pop
push
adc
xchg
pop
pushf
cmp
xchg
aaa
and
mov
cmp
mov
mov
rolb
out
in
sub
popa
addr16
nop
aas
add
je
je
jge
ret
xor
icebp
mov
out
cmp
sbb
push
dec
leave
ljmp
adc
sahf
mulb
and
in
inc
mov
dec
xchg
pop
cmpsb
fistl
xacquire
shll
test
jb
fsub
insb
mov
pop
mov
es
mov
roll
push
addb
sub
ss
call
mov
add
dec
xor
jl
jg
sbb
ret
pop
pop
repnz
push
loop
int
inc
out
icebp
into
pop
cmpsl
cmp
icebp
lret
xchg
jae
inc
xor
adc
inc
orl
sbb
jp
cmp
test
jle
mov
and
dec
or
mov
test
adc
pop
movsl
lea
mov
in
shlb
shll
push
scas
mov
movsb
repnz
in
pop
cmc
lcall
lea
xor
or
pop
out
cmpsb
dec
dec
inc
dec
jnp
sub
int3
xchg
jl
push
movsb
jecxz
mov
insb
cmp
enter
shlb
cmpsb
jns
push
mov
mov
mov
pop
shr
pushf
add
scas
push
stc
repz
mov
push
push
cmp
mov
mov
mov
cs
lods
mov
pop
or
jno
lahf
mov
lods
roll
orl
pop
out
mul
mov
sbb
ret
out
iret
enter
push
loop
push
xor
adc
cmp
xlat
push
imul
out
stc
push
les
mov
and
lods
sbb
cmp
icebp
xchg
dec
out
mov
mov
mov
adc
xor
mov
dec
jmp
dec
mov
mov
mov
shlb
repnz
xor
add
xor
mov
out
pop
jnp
push
lcall
faddl
lock
incb
inc
ss
xchg
pop
jp
aaa
and
or
cmp
jge
push
andb
mov
adc
add
hlt
cmp
mov
pop
sub
fadd
xor
add
call
mov
shlb
dec
stos
mov
fsub
jge
pushf
ss
and
out
and
movsb
sti
mov
mov
adc
cmp
sysexit
mov
and
pop
pop
pushf
pop
pop
and
fnstsw
and
cmp
into
fmull
sti
mov
pushf
arpl
flds
mov
test
lret
sbb
lret
push
stos
cwtl
push
inc
pop
fwait
sbb
adc
mov
inc
lock
nop
in
add
xor
sub
push
xor
popa
cmp
push
xor
xchg
xchg
neg
cli
dec
xor
imul
add
add
cmpsb
and
cmp
pop
pop
shll
shl
mov
dec
les
rolb
fcmovne
mov
out
fsubs
ds
jno
divl
push
xor
pop
in
push
or
shlb
fs
pop
test
movsb
push
cwtl
mov
and
jb
cmp
jns
ja
outsb
cmp
pop
jo
scas
jle
sbb
fadds
lock
lds
inc
aas
sbb
mov
push
movsb
outsb
mov
push
xchg
xchg
out
push
jmp
xchg
leave
and
rorb
scas
lret
dec
pop
mov
lcall
jno
jl
fcmovb
push
dec
cmp
mov
popa
adc
and
jnp
pop
iret
sbb
bound
or
jbe
jle
in
pop
mov
dec
repnz
flds
lcall
adc
test
or
jnp
shlb
rcrb
mov
pop
dec
test
fisubs
insl
aaa
cmp
pop
fldt
dec
sub
popf
mov
xor
sti
ss
push
jne
adc
lcall
les
cmp
pushl
mov
nop
mov
add
fcmovu
insb
push
ja
jae
push
xchg
ret
clc
sbb
push
or
or
call
push
fwait
mov
mov
repz
and
rolb
negl
push
cmpsl
mov
mov
imul
insl
andb
pop
test
imul
jns
adc
xor
fadd
test
movsb
subl
or
sahf
setns
iret
loope
shlb
xchg
stc
fdivrl
pop
inc
cmp
cmc
jle
aas
test
jecxz
jecxz
dec
dec
mov
xor
jmp
fs
scas
pop
in
packuswb
push
leave
fisttpl
jne
loope
out
sub
and
jb
out
aam
stc
sub
cs
and
jl
aas
testl
ja
cmp
nop
cmp
cwtl
bnd
lods
lods
mov
popa
adc
scas
xor
movsb
add
stos
mov
mov
cli
movsl
mov
or
rolb
or
jp
fs
lods
jno
mov
dec
or
push
shr
fidivrs
push
inc
daa
xchg
mov
or
jo
inc
mov
aad
lahf
hlt
inc
arpl
lahf
lret
pop
orl
push
pop
adc
inc
jmp
int3
xor
repz
insb
mov
add
loopw
xchg
xor
inc
adc
fstpt
mov
hlt
outsb
fimull
xor
mov
sbb
and
in
and
adc
daa
pop
mov
rcrl
add
add
and
sahf
dec
xlat
notb
add
nop
pop
lea
hlt
or
push
cmpb
lret
xor
insl
into
cmp
and
insb
pusha
loopne
xor
mov
lods
push
or
addl
pop
mov
push
out
lcall
js
or
adc
pop
mov
fnstenv
cmp
xor
call
mov
fnstcw
es
movsb
aam
jbe
inc
adc
or
push
dec
sbbb
fstpl
pmaxsw
bound
ss
mov
test
scas
sub
xor
rcll
jmp
and
nop
xchg
and
jno
xchg
das
mov
push
mov
push
imul
incl
mov
mov
mov
cmp
sub
mov
lcall
jo
sub
and
xchg
sub
mov
mov
xchg
xchg
out
mov
dec
dec
xor
and
push
les
cs
adc
jns
push
ds
push
or
jmp
jl
mov
out
mov
mov
or
xor
mov
xchg
js
outsb
mov
pop
js
push
sub
pop
adc
adc
mov
mov
fldt
mov
push
cld
out
dec
ja
aam
mov
pop
sub
dec
xor
fsubrs
sbbl
dec
lods
and
enter
jmp
scas
in
sub
xor
jb
push
xor
ljmp
scas
xor
fldcw
push
and
mov
mov
movsb
sub
inc
push
pop
lods
call
mov
pop
insb
dec
mov
and
pop
out
cmp
adc
dec
mov
or
mov
lret
stos
xchg
mov
stos
mov
push
fwait
test
dec
mov
punpckhwd
mov
testb
arpl
gs
idivb
fidivl
popf
ds
jne
jge
adc
rol
neg
out
js
enter
ds
jae
movsl
cmp
in
or
and
xchg
clc
lahf
test
jmp
mov
xor
sub
cmc
sbb
imul
or
adc
mov
or
lea
mov
pop
sub
xchg
xor
shrb
out
pop
jo
les
divl
addr16
cmp
lods
mov
sbb
cmp
ss
ss
adc
push
fldenv
xor
out
jbe
popf
pop
or
sub
clc
cs
call
push
add
out
gs
mov
test
shrb
xor
frstor
and
jmp
or
xchg
xchg
notb
fcompl
mov
sub
xor
out
or
movl
push
mov
push
ja
lods
in
std
sub
mov
loop
xchg
lret
cmp
pop
sbb
lahf
jae
cmpsb
jmp
cmp
mov
push
test
jns
mov
sub
fadds
mov
pop
xchg
loope
pop
shl
imulb
dec
inc
push
xchg
ja
adc
imul
fdiv
sbb
dec
add
adc
call
push
xchg
mov
dec
outsb
popf
jl
adc
imul
cmp
mov
iret
js
dec
jp
push
cs
imul
imul
push
sub
push
push
popa
mov
or
mov
addb
fs
jmp
enter
clc
push
pop
fldl
nop
push
call
stos
int
addb
mov
out
enter
jb
or
jns
adc
outsl
in
and
fs
cmpsb
out
push
lea
jnp
mov
cmpsb
mov
divl
xchg
inc
xchg
cltd
xchg
int3
loopne
popa
pop
dec
lret
je
cli
mov
lods
jmp
or
jecxz
jmp
lds
mov
mov
push
pop
adc
cwtl
aaa
out
xor
push
xchg
fs
cmpsl
jle
jmp
dec
repz
push
push
fisubs
mov
jbe
idivl
xor
cmpsl
sbb
ficoml
inc
lahf
mov
mov
shl
adc
mov
ret
cwtl
jne
add
dec
and
mov
and
leave
jns
pop
sbb
pop
test
cmp
rol
loope
inc
sbb
movsl
flds
movsl
jb
scas
jb
outsl
test
rclb
icebp
shlb
jmp
lods
popf
fldl
cs
outsb
cmp
jo
test
pop
jo
sbb
mov
mov
mov
push
push
dec
and
icebp
add
mov
mov
jl
orl
adc
movsb
stos
mov
xchg
cltd
mov
stos
stos
push
mov
out
into
jp
cwtl
xchg
out
xlat
out
loope
push
mov
insb
pop
jle
pop
mov
popa
fistpll
test
fwait
in
cmp
dec
enter
pusha
mov
cmc
pop
scas
jo
push
sub
or
repnz
pop
fidivrs
sbb
inc
or
repz
rorl
cmpsl
stos
repz
jno
jmp
out
mov
icebp
cmpsl
inc
sbb
fdiv
cmp
inc
sub
mov
xchg
add
out
sbb
mov
mov
ja
sti
dec
out
subl
or
dec
loope
push
mov
leave
mov
pop
out
je
mov
dec
and
arpl
stos
out
fimuls
pop
mov
push
xor
shrl
stc
andl
add
pop
leave
je
adcl
sarb
and
push
imul
repz
mov
pushf
inc
divb
pop
subl
cs
rcrl
xorb
fisubrs
mov
jecxz
nop
mov
jmp
xchg
push
mov
ret
ds
inc
xchg
adc
filds
adc
jbe
ficomps
hlt
lcall
jo
mov
adc
test
test
sbbb
lahf
cmp
jno
jmp
jg
sub
push
fiaddl
test
inc
xchg
das
pop
es
add
popa
int3
aad
cltd
jbe
push
xor
mov
fisubl
sub
cwtl
and
push
dec
adc
pop
xchg
aaa
shl
mov
push
xor
push
push
and
and
sti
jno
cmp
ljmp
rcrl
jno
jb
stc
inc
testl
aas
test
subb
iret
cmp
ds
mov
jmp
push
jmp
mov
out
cmpsb
mov
pushf
sarb
sub
fwait
mov
xchg
cmp
arpl
adc
cmpsl
add
into
cmpsl
pop
mov
or
jns
js
js
test
movsl
fimull
push
inc
jmp
bound
mov
call
sbb
jp
xor
jmp
mov
push
fsubs
and
scas
lods
pop
add
push
cld
mov
push
xor
xor
adc
fdivr
sbb
cmp
syscall
or
cmc
cmpsl
je
movsl
dec
jge
shr
fs
xor
mov
mov
cmp
stos
stc
jg
fstpt
sub
or
xor
push
jno
test
add
adc
cmp
test
jge
enter
nop
imulb
in
shll
std
push
dec
xor
enter
or
div
cltd
outsb
test
sbb
ljmp
rorl
loope
inc
shll
push
clc
ja
roll
dec
mov
sub
in
dec
or
popf
fsubp
pop
outsl
data16
jo
cmpsl
stos
mov
andl
xchg
or
test
fbstp
stos
imul
popf
and
mov
out
aas
dec
jl
or
daa
shl
mov
or
mov
xor
test
js
cmpsl
mov
icebp
jnp
push
pop
in
lahf
aam
iret
in
aas
jnp
sub
jl
idiv
push
push
aas
or
cld
sti
and
pop
fdivs
mov
xor
cmc
cmpsb
mov
jle
fnstenv
sub
mov
adc
cmc
mov
pop
fdiv
inc
scas
shrl
pop
mov
pop
dec
outsl
push
xchg
or
inc
enter
outsb
std
cmpsl
sub
sbb
dec
push
ret
xor
mull
jmp
xlat
jbe
xchg
ret
inc
ficompl
push
ret
jno
sub
mov
imul
push
lahf
fs
ret
dec
dec
das
sub
jno
repz
push
or
or
mov
movsb
xchg
pop
sub
dec
inc
mov
mov
or
xor
or
outsb
lahf
adc
ret
aaa
das
push
pop
cld
fs
sbb
sbb
jbe
mov
jb
mov
cmp
adc
mov
jb
jbe
leave
movsb
out
cli
mov
rcrb
or
ds
iret
and
xchg
pop
jns
pushf
movsb
outsl
mov
fs
push
or
out
stc
repz
fildl
lds
mov
orps
cld
inc
jge
cs
or
js
data16
or
push
jle
iret
cmpsl
loope
test
shrl
pop
push
loope
or
dec
lods
mov
ja
inc
cli
repnz
mov
xlat
pop
shl
cmp
es
scas
scas
loop
sbb
ljmp
pushf
imul
pop
insl
jl
sbb
mov
and
dec
mov
lock
inc
scas
mov
push
hlt
out
jmp
mov
or
xchg
jmp
push
lret
es
ss
aam
fnsave
leave
loope
jmp
mulb
mov
hlt
out
sbb
xor
repz
shl
mov
push
lret
ret
int
test
push
into
dec
fcmovbe
mov
xchg
int3
adc
or
cmp
lea
dec
into
push
dec
andb
push
sub
and
shlb
lock
xchg
arpl
lret
dec
cld
jb
add
roll
or
gs
add
mov
addr16
pop
sub
cmpsl
nop
data16
inc
sub
and
fwait
loop
inc
loopne
aas
cwtl
pop
dec
data16
lret
std
das
sbbb
je
dec
mov
xchg
xchg
xchg
xchg
pop
dec
dec
push
rcrb
xchg
int
stc
stc
push
repnz
sbb
dec
rsm
inc
cld
pop
mov
fbld
xchg
push
jmp
jmp
in
scas
cmp
and
testb
xchg
or
sub
lcall
popf
inc
push
lcall
add
inc
shr
jae
jbe
ds
lods
add
aad
pop
hlt
xchg
inc
xor
mov
aam
mov
test
pop
jns
and
cmp
aaa
gs
in
lret
les
jae
xchg
mov
jb
adc
fwait
sbb
xor
inc
aas
imul
inc
mov
mov
fimull
xor
sahf
mov
rclb
call
add
fsubrs
xor
jmp
cltd
sbb
shlb
jb
testb
cli
or
sub
xchg
mov
jns
cmp
insb
sbb
jbe
push
or
adc
dec
and
ficomps
outsb
int3
decb
adc
or
pop
jmp
jbe
cs
movsb
push
shrb
mov
sbb
stc
xor
or
mov
or
aad
call
sbb
ret
incb
sub
mov
push
inc
sbb
xor
out
enter
pop
dec
lret
mov
imul
inc
sahf
aad
mov
or
sub
pop
cmp
push
jmp
mov
mov
test
out
aaa
xchg
xchg
sbb
fildl
jge
push
in
cltd
or
add
nop
or
push
out
inc
mov
scas
xchg
xchg
and
mov
popa
push
push
pop
rol
add
mov
push
pop
es
sbb
cwtl
insb
orl
pop
jmp
ljmp
std
lds
mov
xchg
xchg
add
imul
out
or
push
dec
rcll
shlb
into
mov
lcall
push
xchg
into
in
out
jge
sub
popa
sahf
test
or
ds
pop
es
test
test
ror
pushf
aas
jnp
mov
xchg
ljmp
xchg
aas
mov
jg
ds
adc
sub
xor
xchg
cmc
movsb
inc
mov
and
gs
call
repz
sub
pop
vhsubps
loop
aas
push
add
mov
add
xor
imul
xchg
shrl
dec
jg
dec
iret
adc
pop
jge
xor
add
cmc
push
adcl
mov
int3
jl
std
mov
mov
rorb
jne
or
mov
std
test
xor
fnsave
dec
outsl
daa
fisubs
dec
data16
aam
xchg
cmp
pop
popf
mov
cltd
fxam
add
aam
jecxz
jp
mov
jecxz
adc
sub
ficoml
pop
faddl
jmp
add
call
and
adc
cmp
iret
jle
xor
es
gs
leave
add
mov
and
aam
jne
pusha
mov
addl
jle
push
adc
sub
fmull
and
testl
lds
andl
and
xor
pop
leave
ret
pop
sub
cmp
lea
cmp
sbb
loope
nop
mov
mov
lock
xrstor
or
pop
cmp
inc
ja
sbb
out
aas
dec
push
jecxz
jnp
mov
lcall
xchg
cmp
add
push
adc
mov
add
andb
sub
test
loopne
shl
add
mov
mov
dec
call
mov
out
daa
mov
and
inc
jmp
xor
inc
and
negb
cli
jmp
int3
mov
add
or
je
xchg
inc
and
mov
movsb
cmp
leave
scas
and
in
jg
xor
push
push
fwait
imul
pusha
jp
rcll
push
mov
jbe
inc
xchg
clc
inc
pmulhw
int
pop
fs
repnz
adc
iret
inc
notl
frstor
notb
lea
mov
xchg
and
cli
iret
je
add
inc
repnz
xor
sbb
push
mov
sbb
dec
push
mov
adc
mov
mov
and
push
add
cmpsl
add
lock
cmp
out
mov
scas
add
push
rcrl
pop
sub
pop
icebp
loope
adc
jl
jge
in
loope
jo
jno
sbb
test
jns
cmc
push
aam
cmp
mov
outsb
imul
loopne
pop
sbb
and
mov
orl
mov
ffree
adc
pushf
jo
pop
cmp
hlt
mov
mov
sub
mov
nop
out
xchg
ja
sub
mov
les
loop
xchg
pop
std
fstl
fisttpl
sub
ljmp
out
sbbb
mov
shlb
jmp
push
mov
adcb
jmp
hlt
ss
mov
outsb
jo
pop
pop
iret
cwtl
ss
mov
pusha
flds
fucomi
adc
and
sbb
fisubs
lods
sbb
cmpsb
or
out
ss
jo
or
xlat
div
jmp
cmp
mov
jecxz
jg
adc
xchg
fldt
dec
lods
cmp
xchg
cmpl
fmuls
fimuls
shl
push
movsl
mov
sbb
idivb
xor
ss
lret
je
mov
and
xchg
sbb
into
test
adc
or
adc
cmp
push
push
sbb
mov
mov
mov
sarb
out
in
ja
xlat
xchg
or
push
daa
testl
dec
add
enter
lods
dec
fs
inc
outsl
leave
ret
push
push
movsl
je
or
fs
mov
xlat
mov
sbb
or
or
sub
or
dec
mov
mov
sbb
cmp
mov
cmp
adc
insb
xchg
das
xchg
lock
sub
sti
sub
push
push
lea
push
cli
pop
cwtl
xchg
repz
pop
jl
das
pop
stos
push
into
inc
fwait
lods
inc
jmp
lods
and
mov
mov
adc
mov
sbb
pop
jbe
jnp
cwtl
nop
dec
sti
in
pop
and
js
mov
addr16
cmpsb
ret
sbb
das
lds
movsb
ficoms
sub
cltd
call
movsb
das
mov
movsb
cmp
stos
pop
popa
sbb
mov
js
push
clc
jbe
rcrb
testb
adc
jo
movsb
dec
xchg
inc
mov
outsl
loope
pushf
faddl
out
cmpsl
shl
push
push
clc
inc
aaa
add
cs
xor
fistps
push
daa
sub
lcall
xor
and
les
or
movsl
fstp
xlat
jns
sbb
dec
mov
inc
push
out
pop
ljmp
pushf
daa
int3
mov
mov
jecxz
add
xor
jl
xor
cmp
cmp
mov
inc
cmpsb
xorl
int3
dec
mov
pop
test
sub
pop
cmp
mov
add
loope
mov
lods
push
orl
and
mov
adc
addr16
pop
jl
sub
pop
test
mov
or
jns
lock
mov
xchg
push
xor
dec
leave
data16
clc
jmp
xchg
mov
mov
sub
jge
cmp
adc
dec
xchg
mov
mull
subb
sub
cld
jle
push
pop
mov
push
fildll
subb
xchg
jne
jg
and
stos
cld
fwait
scas
outsb
loope
cmp
lret
xchg
dec
push
loopne
pop
mov
test
in
mov
push
ds
push
mov
jbe
mov
or
dec
inc
call
dec
mov
xchg
jb
mulb
dec
das
movsb
cvtpi2ps
mov
mov
xlat
sub
xchg
std
jge
fildll
and
js
and
mov
sub
adc
jb
push
aaa
xlat
cmc
mov
lods
ja
mov
inc
iret
outsb
cmp
and
xchg
mov
ret
ret
sbb
in
addr16
mov
push
sub
sub
cmpsl
mov
mov
in
pusha
jo
adc
fwait
outsb
adc
jae
inc
pop
test
pop
and
in
jb
jbe
inc
sbb
push
inc
cli
lret
sbb
and
vmovsd
adc
loope
scas
dec
andl
jp
shrl
dec
lret
jmp
lahf
jns
pop
lods
pop
inc
mov
sbb
mov
push
out
in
dec
pop
lret
cmp
cmp
lahf
add
int3
dec
push
pop
fcom
je
call
jns
mov
jg
push
in
nop
jne
cmpsb
mov
mov
and
out
fcmovu
dec
cmc
out
sbb
sub
mov
test
sbb
push
sub
dec
dec
in
push
xchg
dec
inc
sahf
cmp
cmpsl
add
jno
xor
xchg
add
icebp
pop
std
sub
inc
jbe
incb
jbe
jge
sbb
imul
push
popa
neg
loope
sub
mov
sub
dec
idivl
cmp
sbb
jns
pop
shl
adc
xchg
out
cmpsb
and
inc
inc
gs
adc
add
sarb
loop
dec
push
xor
mov
je
sbb
inc
aad
add
sbb
mov
xor
push
mov
into
pop
xor
xor
push
sti
stos
ret
shl
jl
fisubs
mov
lahf
orb
adc
or
inc
inc
sbbl
push
push
xor
push
mov
push
in
xor
fidivrl
cs
add
adc
ljmp
dec
aam
cmp
pusha
adc
mov
loopne
adc
scas
test
inc
in
jns
jge
shl
add
das
push
mov
int3
nop
lret
sub
fs
aam
jb
jns
dec
into
mov
call
int
ja
je
test
jle
cld
mov
jp
test
lock
lea
into
mov
cs
push
mov
in
insb
ret
add
or
fiadds
leave
hlt
lahf
mov
call
mov
push
adc
std
rorl
lods
push
dec
dec
les
ja
push
outsl
and
shll
xor
fldcw
jbe
fbstp
std
pop
out
shll
imul
sub
loope
fstps
je
push
out
jbe
stos
int3
mov
mov
aas
mov
xor
outsl
xor
movsl
stos
xchg
adc
cmpl
xor
sahf
pusha
xchg
movsl
mov
sub
sub
cli
inc
mov
jae
xchg
adc
pop
das
cmp
cld
adc
fwait
xchg
aas
mov
iret
cmp
mov
popf
mov
push
push
and
add
pop
mov
jl
out
jl
data16
arpl
rorb
sub
dec
loopne
enter
aam
dec
aaa
sub
xchg
push
and
roll
movsl
add
cmpsb
adc
ret
imul
int3
lcall
inc
repz
fdivr
sahf
test
add
mov
jmp
sarb
jns
cld
mov
fistps
cwtl
ljmp
xor
mov
cmpb
loope
jle
cli
dec
jo
mov
lret
add
lahf
push
or
sbb
mov
imul
outsb
lds
icebp
sbb
nop
push
xchg
nop
adc
fcmovu
pop
out
inc
add
es
cwtl
inc
mov
and
fucomi
dec
mov
push
xchg
aam
outsl
pop
data16
aam
cmp
sbb
add
pusha
add
js
dec
lret
cmp
fstpt
and
lcall
aas
outsb
daa
int
stc
jecxz
push
cli
icebp
leave
shlw
jb
loope
imulb
xchg
in
lods
xchg
mov
int
or
sub
push
sbb
jecxz
subb
and
adc
mov
ret
inc
clc
mov
push
mov
data16
sub
lods
or
add
call
iret
movsb
lods
mov
pop
out
into
cltd
sbb
jns
mov
test
inc
jecxz
out
adc
mov
outsb
and
sub
in
jo
ds
loopne
aad
inc
into
xchg
arpl
xchg
aas
shr
sbbl
mul
fbld
jl
or
adc
lea
cmp
cmpsb
push
stc
js
and
mov
cmp
cmp
dec
lods
cmpsl
call
bound
push
bound
lds
ficoms
xchg
fiaddl
jp
clc
sbb
fldt
push
cmp
mov
repnz
inc
adc
fld
push
mov
pop
jge
sub
dec
sbb
dec
xor
fnstcw
mov
or
ja
inc
loop
pop
push
iret
jnp
insb
mov
ljmp
jmp
push
dec
cmp
sbb
pmuludq
fs
jbe
dec
ljmp
lods
leave
jbe
aad
shll
push
jb
pop
push
push
mov
loope
icebp
jne
lcall
int3
es
jb
add
out
pushf
sbb
test
push
dec
inc
cmpsb
dec
push
mov
cmpsb
pop
sub
das
pop
adc
cmc
sahf
jo,pn
in
mov
xor
cmp
adc
mov
and
lods
retw
insb
cmp
out
jae
adc
mov
xchg
add
xchg
scas
xor
scas
jnp
xchg
jmp
adc
pop
repnz
mov
in
xchg
mov
xchg
or
add
out
stos
imul
xor
sub
sub
pop
cmp
xor
push
cmp
cld
mov
aas
sbb
jns
mov
mov
xchg
mov
fnsave
jb
je
outsl
inc
ret
lret
mov
pop
fwait
stos
cmp
mov
mov
xor
out
out
pop
pop
cmp
fsts
aaa
aad
mov
inc
cmpsl
inc
bnd
xor
xchg
lahf
daa
pop
mov
imul
pop
jl
shr
xor
pop
insl
aas
test
shll
sbb
stos
iret
rclb
fmull
jnp
scas
sub
jno
xor
dec
and
int
mov
sbb
sbb
sbb
add
movsb
or
aas
ljmp
ret
repnz
pop
fadds
std
mov
es
dec
jne
cmp
ficoml
loope
sarl
shrl
jmp
mov
fistpll
add
nop
ret
enter
loop
and
cwtl
push
inc
into
mov
xchg
jne
into
lcall
add
ror
jnp
pop
loopne
mov
jecxz
cltd
adc
add
sub
xor
loop
in
fwait
sbb
addr16
mov
cld
push
jg
aad
xor
das
jno
lds
mov
lods
cli
lea
cmp
jle
movsb
jl
mov
popf
rcrb
jae
add
xchg
icebp
daa
jmp
and
xchg
in
inc
movsb
shlb
adc
sub
push
mov
and
mov
adc
push
arpl
neg
push
jmp
and
push
sub
mov
xchg
es
idivb
int
mov
cmpl
hlt
jecxz
dec
pop
int
and
mov
mov
xorl
push
lret
mov
ja
aad
into
sub
jns
gs
fcomip
ss
mov
mov
fstp
push
out
lds
pop
and
fsubs
sbb
in
out
in
mov
bound
xchg
pop
in
imul
sub
stos
scas
xchg
mov
data16
mov
cmp
in
pop
cmp
enter
popa
std
fstps
andb
int
adc
dec
push
rcll
jb
aas
push
and
stos
push
inc
gs
sub
pop
jmp
sub
nop
mov
pop
shrb
and
adc
int
popf
fsubrs
fidivrs
push
lret
lret
andl
scas
std
push
cmpsl
sbb
add
jmp
out
inc
mov
aaa
xor
dec
lock
les
lret
jne
push
adc
stos
pop
dec
push
pop
adc
fs
in
cmc
pop
sub
inc
pop
nop
dec
iret
repz
inc
jmp
jb
pusha
mov
sbb
fs
cmp
dec
scas
xor
or
imul
jl
pushf
icebp
imul
mov
jmp
dec
xor
pop
mov
xor
or
inc
scas
mov
and
adcl
out
adc
cmc
aaa
cmpsb
mov
dec
dec
xorb
cmp
ja
ljmp
ret
dec
mulb
add
add
aam
mov
pop
repz
jmp
lahf
xor
adc
lods
mov
pop
sub
add
push
cltd
popf
sbb
inc
and
xchg
mov
or
sub
sub
pop
cmp
xchg
dec
mov
mov
jo
das
inc
add
in
xchg
jp
mov
xchg
gs
or
aas
dec
mov
imul
inc
pop
int3
dec
pop
mov
arpl
fldenv
mov
push
push
or
decl
lods
mov
repnz
roll
mov
ljmp
cmpsb
dec
ss
out
clc
jns
pushf
mov
outsl
dec
mov
mov
idivl
push
sub
jns
sub
mov
jns
fwait
adc
fldt
ljmp
pop
xchg
lea
stos
imul
xor
test
adc
mov
adc
insb
dec
jno
int3
mov
adc
cli
jle
xchg
sti
mov
ds
in
aas
int3
sub
add
jl
imulb
cli
inc
pop
in
add
sbb
and
jmp
bound
hlt
cmp
add
fists
cmp
or
fisttpll
lds
jp
sti
adc
insl
jns
lods
movsl
inc
add
xchg
mov
mov
sub
xchg
and
pushf
icebp
mov
mov
xchg
cltd
sub
dec
iret
out
sub
pop
adc
and
fcomp
lock
jnp
mov
push
dec
cld
int
sbb
gs
sbb
push
inc
adc
cmpsb
inc
decl
incl
scas
mov
xchg
fstl
daa
mulb
sbb
into
mov
sbb
and
outsl
divl
mov
sub
iret
aaa
sub
sti
les
fdivrs
cmpsl
es
adc
xor
and
pop
fwait
jno
jne
mov
dec
jo
sarl
loop
mov
int3
add
inc
sub
and
mov
int
shr
lea
xor
jno
jle
and
rcrl
jle
test
cli
jo
mov
push
lret
lret
push
into
shll
jge
mov
xchg
pop
and
popa
call
test
inc
adcb
push
mov
jns
fucompp
pop
lods
sub
in
ret
fdivp
inc
jne
cmp
dec
test
mov
push
sub
sti
in
in
in
popa
or
fisubrl
sub
cwtl
dec
mov
push
loope
in
mov
and
mov
xor
xchg
out
divl
sahf
outsb
fistl
cmp
lds
push
pop
jb
mov
inc
in
repz
jg
out
xchg
out
enter
loopne
sub
mov
shr
decb
insb
mov
test
cmp
popa
mov
cmc
pop
fs
les
and
jg
push
cmp
ret
movsb
xchg
or
sub
popa
shrb
fcmovnb
jae
push
mov
jnp
and
dec
clc
mov
pop
jae
das
fistpl
iret
mov
mov
pop
or
xor
inc
push
fwait
test
dec
mov
orl
mov
dec
std
lods
inc
or
xor
sub
or
dec
shlb
sbb
sahf
sub
inc
cmpsl
call
shl
inc
int3
pushf
mov
mov
inc
xlat
jge
gs
or
mov
adcl
xor
inc
fisttps
int
lahf
das
scas
or
cmp
andb
xchg
dec
cmp
jno
inc
int3
cmp
cmc
cli
sahf
mov
sub
add
icebp
jecxz
push
hlt
lock
out
fildll
pop
inc
test
dec
es
jb
jge
sbb
push
mov
cs
push
inc
daa
mov
ss
shll
rorl
es
adc
insl
test
lds
decb
lahf
xchg
mov
dec
and
mov
mov
iret
dec
adc
jge
adc
std
sbb
inc
mov
stos
xor
ja
adc
aas
inc
cltd
outsb
cmc
sbb
imul
fs
loope
mov
and
shlb
mov
int3
jmp
out
test
aam
push
ss
stos
cmp
xlat
cmpsl
loope
imul
jb
cmp
scas
inc
cmc
sti
sbb
add
adc
aad
mov
inc
lcall
aaa
pop
push
push
cmp
pusha
outsb
cmp
cmp
scas
aam
test
inc
cmp
cmp
ljmp
stc
adc
movsb
cli
rorl
ljmp
addl
int3
lahf
xor
fprem1
xchg
cmp
outsb
lds
daa
or
cli
dec
lahf
daa
jo
dec
fisttps
adc
cmp
mov
xchg
ret
leave
cmp
push
js
in
jo
ror
stos
xchg
stc
and
outsl
mov
subb
xchg
push
or
aad
mov
addr16
imul
test
fwait
pop
or
push
mov
stos
pop
mov
es
and
xchg
xor
outsl
fs
mov
sub
cwtl
push
out
rcl
andl
insl
popf
push
vmovups
mov
scas
shll
jbe
mov
lcall
lahf
test
push
add
stos
and
out
pop
cmp
out
test
insb
stos
rorb
lods
data16
mov
insl
clc
test
imul
sti
icebp
add
cltd
shrl
jno
dec
xor
mov
fs
jno
outsl
inc
add
cmpsl
gs
icebp
iret
add
dec
cmp
outsb
aas
int
sub
push
call
stos
and
dec
in
in
sub
add
out
fwait
inc
lcall
movsl
rcll
mov
xor
mov
les
jns
pop
jl
lods
inc
into
mov
stos
push
lcall
leave
mov
push
mov
stos
push
test
jo
xor
xchg
jnp
mov
cmc
pop
inc
mov
sbb
xchg
dec
out
push
loop
filds
mov
pop
add
call
ljmp
xchg
test
cmp
repnz
jp
lcall
inc
in
mov
lret
insl
lcall
mov
add
jbe
andl
call
mov
push
out
push
push
movsl
cmpsl
out
lahf
mov
ret
loopne
push
cmp
dec
jmp
or
rcll
lds
inc
call
mov
lds
psrad
into
xchg
scas
loope
outsl
imul
mov
sbb
es
out
pushf
test
stos
dec
mov
sub
inc
stos
mov
push
sub
fstps
mov
cmpsl
repz
mov
inc
and
clc
cmp
out
xor
adc
adc
jl
sbbl
xchg
mov
iret
push
imul
cmp
je
ljmp
sub
pop
lock
sbb
sub
adc
cs
xchg
iret
stos
lods
jnp
fdivs
mov
call
push
adc
mov
add
aaa
mov
shll
jle
adc
mov
outsb
add
inc
out
test
push
push
mov
or
js
mov
mov
sarb
inc
mov
pop
push
sahf
out
jnp
stc
push
dec
mov
mov
jle
push
ret
outsl
add
and
loopne
pop
sti
xchg
sbb
sub
std
xchg
push
inc
addr16
mov
and
mov
test
mov
jb
inc
inc
xor
jne
aaa
stc
nop
add
test
mov
out
sub
jmp
add
pop
setge
lods
mov
push
addb
mov
cmpsb
and
shrl
ja
loopne
insb
out
jg
sysret
jmp
test
sub
ds
sar
push
or
mov
test
sub
jle
mov
pop
pop
ljmp
loopne
xor
jg
bound
ljmp
push
jbe
fwait
and
xchg
pop
fdivrs
and
fidivs
into
neg
xchg
fistl
or
filds
xlat
repz
icebp
push
pusha
sti
iret
fildl
and
rcrb
jmp
movsl
ror
xchg
pop
jnp
sbb
out
mov
mov
popa
sti
call
fdivrs
jecxz
stos
push
jno
sub
jns
inc
xor
mov
lret
test
out
push
mov
lods
mov
outsl
int
lahf
mov
mov
les
loope
xchg
jle
xchg
fdivp
pop
mov
aam
sbbl
cld
adc
pusha
lods
das
lods
cs
repnz
stos
xchg
loope
incl
fwait
lods
mov
test
jnp
and
movsb
pop
repz
adc
xchg
sbb
popf
mov
cmp
nop
sub
mov
cwtl
jbe
shll
xchg
add
aam
sar
xchg
outsb
mov
xchg
aas
out
mov
mov
dec
cmp
push
fnstenv
mov
mov
sub
pop
gs
imul
out
sub
in
push
xor
aas
dec
in
nop
inc
adc
mov
dec
mov
lahf
pop
repz
inc
mov
pop
call
sbbl
push
in
lods
mov
xor
into
out
lahf
adc
sbb
jne
sub
jae
sbb
push
xorb
push
dec
bswap
jbe
xchg
jo
lret
mov
and
je
push
call
mov
movsb
jp
dec
enter
pushf
pop
dec
mov
repz
inc
arpl
imul
push
jl
xor
movl
sub
mov
out
add
pop
call
dec
pop
fidivrl
mov
out
fs
lea
std
and
out
ja
mov
adc
jno
sbb
fistpl
gs
sahf
adc
sarl
movb
test
xchg
xor
or
mov
scas
xor
test
decl
mov
xchg
fidivs
cli
dec
int3
sbb
mov
int
mov
mov
cmp
and
test
test
mov
shl
fimuls
test
dec
cmp
xchg
push
jae
lret
cmp
pop
and
data16
push
mov
sub
xchg
test
cmp
xor
pop
es
pushl
pop
xor
add
lret
pop
mov
add
ja
neg
lcall
popf
mov
loope
cmp
pop
jo
popf
xor
cltd
fwait
push
xchg
movsl
outsb
inc
mov
ficompl
dec
sub
aas
outsb
test
dec
in
lea
dec
mov
add
mov
mov
sbb
arpl
add
mul
leave
bound
xchg
pop
sub
mov
dec
sahf
sti
dec
xlat
shlb
das
jo
addl
cmp
scas
not
divb
xchg
out
imull
mov
fldcw
sub
jecxz
iret
push
and
mov
cli
popf
cmp
jle
jge
xor
out
dec
loopne
mov
pop
lcall
jmp
cmp
push
inc
lock
lcall
dec
neg
add
loop
push
mov
or
pop
sbb
icebp
jo
inc
imul
and
xor
xor
rorl
adc
sysenter
mov
jge
mov
shlb
jnp
mov
aaa
call
jbe
push
repz
push
or
scas
loopne
popf
mov
neg
mov
pop
push
push
jnp
movsl
lret
jns
mov
pop
fwait
test
idiv
cmp
mov
pop
ja
dec
dec
js
hlt
les
imul
test
lcall
outsb
test
in
stos
cmc
aaa
jns
lods
adc
jmp
push
test
lret
test
adc
in
cld
dec
negb
bnd
push
or
hlt
int
sbb
mov
adc
push
mov
loope
stos
cmp
mov
lcall
cmpsb
inc
mov
cmp
sub
in
lret
cmpsb
inc
adc
lds
test
push
mov
fwait
pop
mov
push
das
pop
data16
inc
arpl
add
fwait
push
inc
push
jl
sub
jne
sub
jmp
sbb
test
inc
pop
push
pusha
push
push
pushf
fmul
lea
enter
mov
aam
mov
ror
scas
and
adc
es
push
and
nop
xor
loop
cmp
jle
insl
test
mov
jecxz
int
sbb
dec
mov
and
test
fcoms
cmp
cmp
fimull
mov
jb
cmp
and
test
clc
daa
dec
shrl
pop
scas
fwait
inc
fistps
jbe
mov
rorb
repnz
mov
cs
dec
mov
ficomps
pop
fiaddl
add
fstl
add
ret
push
mov
mov
mov
movsb
pop
jl
notb
xlat
inc
fistpll
xlat
fxch
cmp
mov
and
lods
and
adc
sbbl
insl
ljmp
adc
sub
jae
in
std
sbb
or
and
add
shrl
mov
fdivr
lock
xor
repnz
jmp
sub
je
mov
mov
xchg
das
cmpsb
aam
sbb
sbb
xchg
inc
repz
in
idivb
fmulp
pusha
push
test
outsb
push
addb
mov
fs
je
xor
push
sub
cli
cli
xor
sub
mov
mov
sbb
cli
xor
dec
and
mov
mov
lock
fldl
test
imul
xor
fwait
pop
arpl
ficomps
sub
inc
fyl2x
shlb
decl
shlb
cli
pusha
inc
pop
or
shr
mov
pushf
loop
loop
ljmp
mov
pop
lods
mov
mov
inc
pop
pop
notb
cmp
lea
int3
pop
xor
jecxz
rcrb
ljmp
fmuls
xchg
inc
mov
pushf
ret
cwtd
cmc
loop
push
pop
jle
aad
mov
imul
mov
xchg
int
in
cmpsb
rcr
dec
adc
nop
jecxz
fcomps
roll
cli
mov
inc
iret
inc
repz
mov
stc
mov
in
push
ja
cmc
xorl
stc
push
mov
pushf
jl
pop
and
and
adc
lret
das
daa
push
mov
lret
mov
pop
gs
sbb
jns
dec
add
addr16
stc
add
mov
sub
jp
push
mov
adc
mov
sbb
xor
je
jle
add
arpl
inc
out
pusha
std
pop
out
push
jns
fcmovnu
sub
mov
daa
xlat
ficomps
bound
dec
dec
js
pop
ss
sti
lahf
sub
adc
or
sbb
and
loop
or
aam
and
xor
cli
lcall
sub
jp
mov
sti
fimuls
rclb
imul
lock
cltd
loope
add
dec
cmpsl
call
out
push
loopne
jne
and
xor
dec
and
and
sti
inc
mov
and
dec
and
pop
adcb
xor
hlt
mov
sbb
rcrb
es
mov
test
or
aas
mov
and
inc
xchg
iret
sbb
xchg
fmul
scas
out
sar
add
add
loopne
outsb
fwait
in
lea
into
es
out
loopne
adcb
adc
cltd
fwait
xlat
aad
sbbb
outsl
out
mov
xchg
int
xor
call
cwtl
sbb
daa
scas
or
inc
rcll
cmp
jecxz
add
xchg
repnz
mov
xchg
mov
mov
sub
popaw
fnsave
sbb
cmpsl
sbb
mov
ds
pop
push
xchg
les
scas
sbb
jecxz
subl
out
xchg
inc
push
into
aad
fildl
pop
jb,pt
jne
and
test
pop
add
cmp
push
or
pop
loope
into
jne
ljmp
sbb
mov
lea
mov
in
sbb
mov
stc
iret
nop
repnz
mov
push
jbe,pn
push
loop
iret
jecxz
lods
gs
js
mov
fistpl
or
add
xchg
in
mov
nop
fidivrs
cmp
or
and
xor
es
aas
sti
pop
adc
pop
dec
adc
mov
mov
mov
xor
mov
lcall
add
outsl
mov
outsb
mov
subb
dec
mov
sbbb
pusha
dec
inc
inc
stos
ds
popa
xchg
sti
cld
jno
cmpsb
dec
scas
imul
dec
imul
subb
popf
movsl
dec
addl
or
fisubrl
jo
xor
add
test
es
pop
lret
addr16
or
mov
xchg
inc
scas
insb
gs
std
inc
test
or
mov
ss
repz
int
sbb
mov
mov
dec
loop
btr
call
adc
dec
sub
andl
jns
xchg
push
dec
and
int
add
fmulp
fnstcw
mov
xor
add
pop
push
jne
pop
fadds
cmpsl
cmp
mov
mov
daa
sub
adc
out
ret
roll
lea
jmp
cltd
xchg
into
ds
mov
lahf
data16
push
mov
int3
cmp
mov
or
movb
ret
ja
sbb
and
or
xor
mov
cs
jmp
ljmp
and
or
xchg
cmp
and
inc
roll
scas
inc
xor
cli
call
lea
hlt
mov
cmpsl
jg
sahf
lea
aad
sbb
lea
fadds
cmpsl
subl
mov
inc
gs
sbb
das
call
cmp
mov
addr16
jmp
testl
pop
mov
cmpsb
scas
mov
xchg
mov
imul
nop
mov
pop
pop
xchg
cld
cmp
test
push
mov
mov
repz
pop
pushf
pusha
jp
xchg
sti
sub
xchg
and
cs
xor
mov
shlb
inc
pop
out
es
fistpll
pop
push
xor
push
dec
xor
pushf
or
pop
adc
adc
inc
pop
or
mov
xchg
sub
xorl
nop
stc
addr16
xchg
xchg
sbb
add
xlat
out
pop
mov
orb
mov
jle
push
dec
cwtl
push
jp
decl
xor
fidivs
adc
add
push
test
add
lea
and
xchg
xchg
jg
sub
inc
xlat
adc
mov
pop
jae
fwait
in
dec
shlb
mov
jb
cmpb
jl
adc
inc
pop
pop
clc
push
adc
roll
out
add
sbb
or
int
out
scas
cmpsb
inc
jb
pop
rcrl
fstl
rolb
pusha
out
insl
js
pop
imul
pusha
imul
das
loopne
out
imulb
test
cwtl
insb
lds
je
nop
lods
imul
lds
sbb
mov
outsb
incb
and
in
xorl
rcll
inc
mov
push
int3
pop
shll
xchg
inc
cmc
xor
imul
pop
adc
pop
pop
mov
std
sti
mov
addb
push
adc
cmp
stos
xor
xchg
or
pop
hlt
pop
clc
and
fidivs
and
ficoms
lock
cltd
aam
cli
push
adc
rcl
push
lret
mov
and
push
push
addr16
xchg
push
mov
shll
jae
xchg
fbld
aad
out
addr16
pop
sti
pop
xchg
dec
dec
shll
mov
clc
mov
ss
add
dec
clc
testl
xchg
and
aaa
sub
xchg
jne
mov
pcmpgtw
test
or
movl
mov
sub
push
xchg
or
and
in
arpl
mov
aas
out
mov
cmpl
dec
jno
loop
adc
add
icebp
adc
lahf
xchg
ljmp
and
xor
xchg
push
into
faddp
or
cmp
xchg
lcall
insl
pop
pop
push
inc
dec
cmp
pop
mov
xchg
push
call
inc
and
mov
cmp
jl
dec
sub
push
lock
fsubl
jle
stc
inc
call
pop
shr
pusha
xor
lcall
ffreep
jle
aaa
iret
mov
hlt
insb
jbe
jo
adc
cld
sbb
jns
sub
jne
arpl
xor
dec
adc
enter
add
cvtps2pi
and
outsb
jno
push
mov
push
int
lock
push
xor
dec
test
or
xor
out
mov
mov
sub
aam
cltd
or
cmpsl
push
xchg
fcomp
in
rcrl
lds
es
mov
out
xchg
mov
cmp
insb
or
rclb
mov
xor
dec
sub
and
jl
cmp
mov
sub
mov
cmp
arpl
mov
dec
cld
lock
dec
in
pop
cmp
rorl
xor
mov
cwtl
push
xor
js
mov
sub
jnp
sub
stc
cmp
je
or
xchg
push
in
mov
ljmp
push
std
lret
aaa
adc
imul
push
jbe
pushf
movsb
or
or
xchg
fwait
imul
ss
movsb
push
icebp
cs
dec
mov
pop
pop
jecxz
and
cmp
and
mov
aas
ret
nop
pusha
ret
mov
sar
lds
xor
ds
add
out
scas
inc
inc
push
dec
xor
xor
xchg
mov
jne
enter
in
in
movsl
lods
out
jp
mov
incl
sbb
out
mov
adc
outsl
scas
cmpsl
out
sbb
call
mov
das
addr16
xchg
xchg
xchg
adc
xchg
in
add
push
das
xchg
cmp
pop
cmp
sahf
mov
fwait
or
dec
sub
push
aad
mov
and
or
inc
movsl
add
or
mov
sbb
adcl
and
pop
mov
stos
ljmp
and
add
fwait
push
or
inc
scas
xchg
adc
cmp
fstps
cltd
fdivs
scas
das
loope
jae
inc
and
cmp
in
push
mov
mov
imul
mov
and
inc
pop
imul
pop
sbb
add
add
out
add
xchg
sbb
xchg
sbb
add
cltd
ss
push
lcall
pop
in
addl
and
and
std
dec
leave
xor
std
push
push
pop
fimull
and
cli
add
xor
imul
test
jmp
add
jb
sbb
xchg
adc
divb
test
xor
test
fdivrp
or
out
jmp
adc
pop
adc
jl
sbb
sub
xchg
icebp
pop
adc
cld
pop
sbb
xor
mov
add
addr16
iret
xchg
add
add
imul
sbb
push
mov
mov
iret
dec
push
ja
cmp
aaa
dec
clc
daa
xchg
jb
inc
dec
hlt
in
daa
loop
outsl
xchg
mov
or
sub
add
xchg
andl
xor
out
test
jl
dec
sub
js
and
movsb
std
xchg
and
add
ja
jns
mulb
and
adcb
pop
xor
pop
xor
inc
ret
inc
int
adc
pop
dec
test
fucomip
scas
rorb
flds
pop
push
cmp
jb
inc
mov
xor
int3
push
push
enter
mov
je
cmp
data16
inc
fs
xor
dec
xchg
lret
jae
ljmp
sbb
in
push
cmp
xchg
repz
daa
adc
sbb
mov
push
aas
xchg
lds
pop
cmp
les
or
and
pusha
add
cmovbe
rcll
xor
push
cmp
movsl
ja
sub
out
and
mov
jo
test
mov
loope
push
push
and
fistps
nop
sbb
mov
popa
jne
popf
mov
jb
mov
imul
dec
scas
in
dec
cmp
xchg
cmp
pop
arpl
dec
dec
lock
sub
cli
movsb
pop
fildll
lea
shl
aaa
pop
pop
cs
xchg
push
stc
mov
inc
sbb
rcrb
mov
sbb
jo
aam
cli
fstps
cmp
rcrb
inc
jo
xchg
sub
sti
repnz
fbld
pop
incb
inc
subb
jg
outsl
jle
loope
xchg
jno
pop
stos
xor
loope
dec
ss
hlt
push
test
jb
jmp
push
cmpsb
mov
mov
sbb
orb
loope
pushf
xor
cmpsb
mov
enter
mov
mov
xchg
fidivs
jbe
jp
dec
sahf
pop
xchg
loop
cmp
xor
dec
mov
dec
mov
and
repz
or
cmp
mov
ds
inc
enter
pop
cmpsb
sahf
or
sub
xchg
out
sub
and
gs
jmp
mov
mov
pop
aad
xchg
cs
loopne
dec
mov
fdivrl
or
xchg
in
mov
jne
mov
sahf
sahf
mov
xor
jge
xchg
shlb
das
mov
idivl
xchg
scas
jmp
fs
imul
imul
and
lahf
int3
mov
xchg
loopne
loope
push
cld
add
push
dec
sub
es
mov
pop
incl
sub
lods
jb
xor
jmp
sub
aas
and
mov
cltd
shl
jecxz
or
rcr
mov
jg
lods
fstpt
scas
sti
push
loope
lea
stos
es
cmp
sub
or
mov
shrb
into
xchg
leave
push
and
sbb
das
into
pop
outsl
jb
loopne
sti
push
xchg
mov
push
pop
imul
daa
dec
lret
aas
in
inc
int3
ss
pop
outsb
sahf
js
mov
les
jl
and
fbld
aad
std
jecxz
stos
push
xchg
ror
jmp
test
inc
je
xchg
xchg
push
cwtl
repnz
mov
rcll
icebp
mov
nop
sub
repz
rcll
pop
cmp
or
shlb
test
loope
pop
xchg
in
incb
out
xlat
arpl
jg
ret
push
inc
ds
mov
mov
cld
mov
xchg
and
and
inc
insl
cmp
jp
jne
dec
jp
or
add
fs
cmp
jmp
mov
imul
test
xor
ja
fldt
jno
push
loopne
ja
call
and
pop
xchg
movsl
cmpsb
mov
push
notl
cmpsl
shl
jbe
dec
sbbl
inc
mov
and
pop
add
sub
js
mov
int3
mov
xlat
cli
and
xchg
or
adc
int3
fnstcw
dec
or
mov
outsb
push
fldl
or
mov
fnstcw
sub
add
mov
in
sub
out
out
inc
aas
fmuls
imul
pop
or
inc
mov
and
mov
ljmp
insb
in
cmp
push
scas
jmp
inc
sub
lods
shll
lret
adc
pop
ret
mov
xor
xchg
push
fs
xchg
and
test
push
mov
outsl
fs
test
push
inc
or
es
mov
push
add
sbbl
scas
mov
xor
imul
inc
ja
bsr
fnstenv
inc
mov
and
orl
mov
lret
dec
dec
push
daa
in
insl
das
jmp
mov
inc
mov
inc
adc
stos
dec
jno
push
jle
xchg
push
xchg
xchg
insl
cmc
cmc
xor
sub
or
jp,pt
aad
or
cmp
jb
inc
and
fs
inc
xchg
pop
xor
ret
mov
and
es
sbb
scas
pop
adc
aaa
outsb
std
aaa
mov
ljmp
mov
mov
xchg
test
xchg
sbbb
imull
lods
pop
rol
pop
add
or
or
cmp
in
xor
jo
sub
xchg
call
xor
inc
popf
mov
test
sbb
xchg
mov
push
lahf
and
hlt
repz
call
add
jno
test
icebp
xor
add
lea
enter
xor
sub
rcll
lea
cmpsl
xor
xchg
incl
addr16
and
hlt
fwait
pop
imul
jae
mov
push
push
dec
ds
lret
test
push
fistpll
sti
orl
aam
mov
xor
jbe
ja
add
jo
lret
pop
cmpsb
fwait
xor
fwait
pop
ret
xor
jmp
fdivrl
scas
bound
adc
mov
out
sub
dec
adc
pusha
rcrl
dec
inc
ds
jns
aad
push
inc
ss
into
arpl
push
fmuls
add
jae
mov
cli
sub
push
xchg
push
out
mov
call
mov
out
ja
int
pop
fdivs
int
xchg
cmpsb
dec
mov
and
hlt
stos
call
mov
adc
rcll
loopne
call
ds
cmp
cmp
mov
mov
add
pop
stos
out
je
outsb
in
add
int
and
mov
lret
cmp
je
mov
loop
mov
pushf
mov
aam
xchg
les
popa
mov
sub
push
pop
leave
mov
add
les
xchg
ret
std
jp
push
push
in
xchg
gs
push
testb
fbld
in
mov
or
clc
jne
mov
outsl
sti
lods
xchg
cmpsb
dec
xor
gs
in
xchg
loop
daa
xorb
mov
mov
and
jle
lahf
sub
push
xchg
neg
add
aas
fwait
hlt
xchg
je
or
pop
rolb
jmp
mov
and
outsl
mov
sub
stos
or
lret
aad
xchg
mov
aam
xchg
insl
mov
mov
lcall
adc
fdivs
test
dec
jo
mov
lods
mov
pusha
mov
or
xchg
mov
mov
subb
push
add
sbb
gs
stos
aad
lds
sbbb
cmpsb
cmp
ss
sub
cmp
jle
dec
cmp
mov
or
jmp
cld
and
ja
cld
pop
ret
test
mov
push
rcrl
data16
mov
int
add
lock
jge
shl
inc
jo
push
jns
inc
in
outsl
cmp
push
dec
inc
divl
stos
pop
and
adc
imul
pop
jb
mov
call
stos
mov
pop
stos
jmp
sahf
outsb
vucomiss
out
xchg
jl
mov
or
aad
lds
or
mulb
dec
push
and
insl
adc
fs
aam
subb
xchg
mov
cs
sbb
cli
popl
xor
jg
push
call
pop
push
add
dec
pop
ss
jnp
rorb
test
or
inc
gs
dec
adc
loop
jo
mov
add
mov
cmp
insl
scas
dec
push
test
xor
aas
ret
dec
pop
and
sbb
pop
sub
jp
subl
in
xchg
mov
mov
js
sti
jnp
cs
test
inc
add
push
sahf
test
adc
sbb
les
scas
sub
gs
in
test
test
lcall
cmp
in
sbb
popf
fnstcw
aam
lock
mov
or
mov
sbb
cmp
cmp
mov
jge
xchg
xorb
outsb
jnp
cmp
dec
jecxz
mov
mov
outsl
mov
aas
out
adc
ljmp
push
dec
and
add
dec
cmp
ds
std
ja
ret
in
inc
imul
pushw
adc
fists
xor
lods
outsl
push
and
mov
out
je
or
push
test
mov
icebp
inc
sbb
push
xor
pop
mov
cmc
loopne
dec
push
and
adc
inc
cld
push
push
add
push
pop
xlat
pop
push
ljmp
nop
jge
adc
cltd
icebp
jge
bnd
fadds
std
mov
dec
ds
sub
lods
xlat
mov
jg
xchg
xor
iret
loope
ds
add
xchg
dec
fcompl
add
xor
ja
lahf
push
xor
pause
jmp
ds
out
subb
cmpl
inc
xchg
fists
lahf
and
cmp
pop
jecxz
mov
mov
fnstcw
mov
inc
adc
mov
test
out
shrl
xlat
jle
jecxz
stos
mov
dec
jmp
cmpsb
aam
cmp
xchg
neg
subb
arpl
mov
push
push
jns
clc
sbb
outsl
jp
fldcw
mov
aam
dec
jle
cmp
or
add
das
outsb
mov
jge
or
and
mov
pop
adc
pop
or
xor
cmpsl
xchg
mov
push
jbe
jnp
inc
push
je
dec
addr16
jg
cli
popa
dec
mov
imul
clc
movsl
lods
sbb
push
aaa
sahf
ja,pt
flds
iret
push
lods
add
push
sbb
sbb
sbb
xor
lahf
cmc
stc
sbb
sahf
shrl
mov
pop
lret
js
and
jle
push
out
add
repz
jl
sub
xor
mov
pop
push
xor
sub
push
hlt
add
mov
sub
mov
and
imul
jge
jmp
int
and
sub
add
pop
push
jno
lock
adc
inc
pop
mov
hlt
ds
jle
dec
aam
xor
xor
xchg
mov
xor
arpl
jne
addr16
push
dec
repz
push
cmp
addb
adc
aas
mov
xchg
jns
inc
push
imul
cmpb
inc
ja
mov
insb
add
test
gs
xchg
jmp
cltd
lds
popa
cmp
mov
in
cwtl
movsl
test
cmp
loopne
jnp
jmp
push
sarb
sbb
sub
mov
es
mov
xlat
fsub
inc
mov
xchg
mov
dec
movsl
lods
shlb
push
addr16
add
movsl
inc
push
sub
pop
pop
xor
inc
add
jo
xlat
or
jbe
cmpsb
out
mov
je
mov
adc
dec
outsl
dec
rep
popf
or
fs
adcl
out
ret
sbb
mov
shlb
pop
pop
pop
call
cmp
lods
xlat
cmc
pop
mov
xor
pop
imul
outsb
xchg
mov
jmp
divl
cmp
das
jmp
push
jo
xor
mov
lret
mov
cmpsb
les
insl
xchg
jns
test
xlat
in
push
xlat
arpl
fisttpll
sub
sbbl
sub
out
xor
and
inc
pop
and
pushf
fdivrs
mov
int3
scas
push
dec
pushf
dec
add
lods
xor
xor
xor
mov
or
popf
pop
popa
xchg
inc
mov
in
orb
subb
xchg
inc
cmp
xor
insl
aad
inc
dec
mov
cwtl
or
or
pusha
ret
lea
xchg
adc
cwtl
enter
push
in
or
jo
movsb
push
dec
sbb
aas
adc
aad
stos
aas
aam
xor
cli
adc
and
xchg
pop
fimuls
or
inc
and
push
adcb
cmp
or
cmp
mov
out
ljmp
mov
fisubs
fwait
scas
adc
in
aas
sahf
or
adc
adc
cmp
roll
cli
scas
repnz
push
rcl
jne
loope
cmc
or
or
je
mov
popf
call
mov
push
enter
addr16
jle
sub
inc
or
sub
pop
ror
shlb
adc
int
lods
inc
mov
pop
push
mov
mov
sbb
pushf
sbb
ja
in
sbb
xchg
daa
test
stos
push
into
xchg
xchg
fisttpll
nop
push
repz
mov
pop
jge
andb
cwtd
fstl
das
pop
inc
stos
mov
xor
out
fwait
outsb
bnd
xchg
or
add
dec
movsb
cs
lret
popl
nop
cmp
test
mov
icebp
orl
sbb
inc
cmp
repnz
push
inc
cmpl
xor
repnz
clc
mov
pop
xor
mov
sub
jecxz
ret
cmp
cmp
fs
or
xchg
cltd
std
xor
jecxz
xor
sbb
rep
arpl
jmp
and
inc
repz
and
movsl
sub
lret
and
or
mov
sub
mull
sarb
mov
cmp
jne
daa
xor
sub
pushf
adc
aaa
aas
cmpsl
add
into
in
imul
pushf
mov
or
jns
or
xchg
and
enter
dec
xlat
push
insb
and
stc
adc
and
es
imul
int
data16
add
iret
dec
cld
sti
add
lds
ds
insl
adc
imul
xor
jae
xor
shr
dec
ja
mov
arpl
pop
outsb
ret
sub
push
xor
cmpb
mov
dec
cwtl
pop
lods
in
mov
inc
pop
mov
xor
push
test
cs
pop
xor
inc
scas
add
test
mov
sbb
cli
icebp
jge
jp
pop
adc
push
push
lods
sbb
jb
lret
or
sbb
scas
leave
out
add
loope
mov
aad
out
mov
inc
pop
outsb
out
incb
leave
pop
mov
dec
popa
rcrl
and
dec
xchg
fucomp
test
sub
pop
arpl
jmp
out
lret
mov
inc
jl
lods
fildl
hlt
jbe
or
fwait
bnd
adc
sub
es
pop
cwtl
cmp
xchg
sbb
pop
mov
mov
ds
scas
lea
push
mov
cmp
inc
push
jle
xchg
pop
or
lods
cmpsb
fwait
mov
dec
add
mov
mov
xchg
push
jge
cs
int3
sub
mov
dec
mov
xor
clc
dec
add
adc
and
xchg
mov
outsl
int
imul
jmp
mov
xchg
in
shrl
dec
or
imulb
sub
and
js
jecxz
add
mov
or
and
jnp
ret
pop
stos
scas
jbe
shl
out
sbb
jle
mov
pushf
and
mov
out
imul
mov
sub
pusha
push
gs
sbb
jne
pop
mov
aam
test
and
xchg
mov
shrb
jb
jno
cmc
add
dec
add
cmc
lods
mov
fwait
mov
mov
mov
lods
sub
daa
mul
test
jae
sub
sbb
loop
inc
sub
inc
inc
push
hlt
xor
push
icebp
je
inc
out
fsubs
scas
lahf
mov
in
mov
sbb
add
or
adc
ret
mov
testl
movsl
inc
insb
xor
push
lds
mov
es
ss
mov
outsb
out
xchg
lahf
push
or
dec
jmp
adc
cs
mov
and
std
fnstcw
mov
pop
cmpl
roll
scas
pop
jle
mov
pop
or
outsb
jecxz
dec
push
xchg
sahf
movsb
out
inc
idivl
xchg
adc
jo
or
mov
dec
imull
push
lahf
ljmp
iret
push
mov
sbb
cmpsb
loop
mov
cmp
fbld
lcall
cmpsb
xor
ja
inc
mov
cmp
dec
mov
sbb
std
or
cmp
and
arpl
or
clc
mov
mov
add
push
inc
clc
mov
push
movsb
cmp
jmp
rclb
sbb
jae
mov
mov
sub
std
pop
rorl
aaa
sti
or
stos
push
sbb
dec
push
xchg
rorb
imul
or
xor
pop
pop
or
mov
lcall
imul
lahf
arpl
test
xchg
int
cmp
dec
or
cmp
add
clc
mov
mov
push
mov
gs
inc
in
xor
cmp
cmp
inc
xchg
imul
aad
loope
add
lahf
ret
scas
clc
nop
hlt
or
lret
in
rorl
and
jnp
and
inc
pusha
push
xchg
and
lahf
cld
roll
ret
pushf
inc
jae
dec
ret
mov
gs
repnz
hlt
dec
sub
adcb
inc
adc
inc
imul
sbb
add
cli
lret
ljmp
or
mov
dec
and
xchg
push
push
insl
cmpl
jge
mov
xchg
leave
mov
mov
pop
cli
inc
inc
jno
and
mov
mov
out
inc
mov
std
int
push
stc
push
jnp
jno
or
arpl
jns
lcall
pop
mov
jg
in
push
repnz
je
aas
and
testl
sarb
into
mov
mov
dec
in
adc
xchg
clc
testb
jl
or
fildll
push
jg
lds
push
sub
sar
sbb
push
xlat
repnz
add
lahf
inc
pop
adc
mov
pop
outsb
call
mov
fsubr
fs
div
es
xor
in
pop
or
jg
adc
ljmp
sbb
loope
jno
pushf
xchg
push
std
repnz
shr
push
and
clc
sahf
lcall
add
addl
int
scas
mov
add
sahf
test
add
shl
mov
loopne
je
sbbl
fcoml
jl
inc
out
push
mov
nop
push
sbb
and
mov
in
mov
mov
pop
in
add
cmc
mov
rol
data16
push
xlat
jns
mov
add
jb
mov
out
adc
push
icebp
fisubl
cmp
lret
mov
and
push
mov
add
js
aas
mov
decb
add
jmp
push
jg
ret
add
lock
cmp
fisttps
nop
xchg
mov
in
and
imul
adc
xchg
sub
ss
jmp
scas
jle
push
mov
test
add
lods
xchg
cmp
mov
jecxz
add
mov
sahf
mov
push
rorl
pop
mov
push
repnz
rcr
flds
xor
xchg
and
xor
in
imul
jg
pop
xchg
repz
mov
dec
jbe
lret
xor
cmp
dec
iret
mov
data16
sbb
les
xchg
dec
mov
iret
in
fstps
push
fcomps
jne
jne
sarb
js
jmp
sub
and
push
out
sahf
call
lods
dec
movl
dec
push
out
mov
xchg
push
shlb
mov
bound
xor
outsb
fisttpll
pop
imul
add
adc
ror
lret
hlt
or
adc
push
sti
pop
ljmp
mov
incb
sub
stos
sub
or
dec
lods
adc
cwtl
pop
clc
sbb
lret
jp
and
push
add
sti
fwait
cmc
lds
je
movsb
out
pop
push
sbb
jno
imul
lea
mov
cmp
adcl
or
rcrl
mov
mov
adc
xor
add
jbe
arpl
cltd
mov
mov
lock
ret
or
int3
sbb
add
and
repz
mov
add
xchg
sbb
mov
shrb
adc
jg
xor
xchg
test
les
stos
gs
adc
jne
movsl
sub
daa
ss
mov
dec
out
jae
mov
repz
adc
loop
in
xchg
cmp
cs
and
mov
pop
or
fistps
inc
in
sbb
sbb
ds
pop
inc
lret
fcoms
nop
pop
dec
loope
inc
xchg
mov
fwait
dec
push
pop
or
and
and
scas
or
aad
lcall
ret
sti
mov
es
mov
and
pop
sub
add
nop
mov
mov
xchg
clc
adc
test
aam
js
jns
cmpsb
sbbl
imul
adc
push
add
lcall
push
add
fsubrs
dec
arpl
insl
das
pop
icebp
or
scas
into
shrb
iret
xchg
mov
xor
js
addr16
fsts
int
fsubp
int3
sbb
adc
adcl
in
and
je
daa
mov
jno
cmp
js
popa
mov
jg
shl
fwait
push
sbb
lret
jns
out
imul
cmp
test
dec
into
sbb
lret
dec
mov
andl
stos
out
or
lock
or
cmpsl
mov
cwtl
aas
das
fnsave
clc
popa
pop
lahf
nop
pop
in
sub
xlat
scas
xchg
sahf
gs
mov
push
inc
and
ljmp
xchg
add
mov
test
hlt
idivl
mov
inc
nop
lds
adc
stos
add
sub
inc
into
shll
or
out
and
add
dec
enter
add
mov
scas
fs
fnstsw
jne
ror
inc
subps
pushf
mov
and
loopne
add
xor
test
jno
sar
xchg
movlps
hlt
in
add
inc
insl
mov
rcrb
ja
test
mov
and
sbb
push
std
sub
imul
pop
imul
push
decl
xchg
sub
and
mov
bound
lcall
andl
fucomip
inc
fists
pop
mov
out
sti
mov
dec
push
aas
lock
sbb
out
rcll
cmp
or
test
mov
test
pop
test
push
add
push
test
sbb
xchg
test
xor
or
inc
add
inc
mov
adc
movsb
cmp
outsl
adc
push
mov
push
daa
mov
add
push
or
and
pusha
sbb
push
and
imul
mov
or
inc
jae
cmp
mov
outsb
cmp
and
scas
jns
xchg
imul
mov
int
lret
jno
in
xor
hlt
repz
fwait
ret
mov
and
out
pop
mov
shll
sbbl
stc
pxor
xor
jg
das
lods
shll
scas
inc
sbb
jno
repnz
and
jmp
in
or
mov
sti
loop
jecxz
out
jne
addl
in
push
les
mov
movsl
inc
sahf
mov
xchg
es
inc
and
add
ja
cwtl
jl
iret
mov
adc
adc
cmpsl
mov
cmp
jmp
and
mov
cmp
out
inc
mov
dec
sub
imul
mov
jmp
sahf
sahf
push
xor
fsubs
dec
pushf
pop
lret
sub
mov
mov
stos
leave
lret
xor
dec
jnp
dec
jne
mov
imul
scas
insl
and
or
fstpt
push
mov
xor
push
or
mov
sbb
xchg
mov
dec
stos
cmp
hlt
dec
mov
sub
clc
or
ss
sub
and
or
aaa
jns
mov
sarl
xchg
or
mov
inc
mov
mov
pop
clc
stos
shrl
jmp
cmp
inc
push
out
loop
jecxz
fcoml
pop
cmp
mov
iret
lods
adc
nop
out
jo
mov
out
arpl
cmp
out
mov
call
lret
mov
mov
sbb
xor
les
gs
cmp
mov
inc
jne
push
mov
and
mov
cmc
mov
fcomps
outsl
in
push
and
or
outsl
mov
sahf
sub
outsl
out
out
pop
fs
leave
imul
mov
ljmp
test
pop
cltd
addr16
and
jl
int
stos
lret
xchg
pop
lods
jge
push
into
inc
mov
stos
lret
push
mov
mov
pop
cmp
aad
out
dec
adc
cwtl
sarl
mov
pop
stos
adc
inc
and
push
out
push
fistpl
into
mov
xchg
sub
iret
push
sti
mov
push
sbb
pop
push
repz
je
iret
popa
or
hlt
aas
pop
push
cmp
cmp
inc
ror
arpl
outsl
jno
pop
in
and
jnp
mov
outsb
push
sti
bound
mov
dec
push
mov
out
cmpsb
mov
push
cwtl
inc
frstor
add
scas
rcr
stc
hlt
xchg
adc
fildll
cli
xor
shlb
cmpsb
mov
fmul
or
out
data16
lret
push
movsl
adc
mov
into
leave
sub
cmpsl
sub
mov
xor
popa
das
nop
insl
xor
add
sub
dec
jns
push
mov
or
lea
jb
jbe
addr16
sub
out
lds
xchg
test
add
jle
nop
in
jnp
mov
sbb
xlat
sbb
add
das
sub
jnp
sub
fdiv
popa
inc
mov
setbe
pop
jmp
mov
lret
in
sbb
mov
mov
pop
mov
std
cmpsl
ret
pop
test
gs
dec
mov
jo
nop
or
pop
test
ja,pn
push
add
add
dec
in
jne
ds
dec
xchg
outsb
push
ja
mov
mov
jmp
sub
or
jne
and
aam
xchg
mov
and
sub
pop
sar
and
adc
lret
inc
roll
call
out
psrld
and
xor
movsl
lds
rdmsr
fistps
hlt
sbb
xor
lock
daa
icebp
and
cld
push
and
frstor
push
inc
sub
mov
and
dec
sub
sahf
icebp
aaa
pop
cli
lods
sbbl
and
dec
js
or
cmpsb
andl
xchg
jae
mov
sbb
fwait
xchg
stos
jo
and
fmull
loope
inc
adc
bound
and
inc
and
fdiv
xorb
xchg
js
lods
sub
and
add
ret
sbb
jmp
jns
popa
mov
sub
push
lahf
shll
fistl
inc
int3
mov
out
jns
mov
mov
into
mov
outsl
pop
dec
pop
ss
cmpsb
fiaddl
test
daa
lods
clc
pop
push
push
xlat
dec
dec
sub
cwtl
xor
mov
sub
push
dec
cltd
shrb
jmp
out
cmpb
rorl
push
out
inc
xchg
jnp
cmp
mov
mov
sarl
add
pop
out
jbe
add
mov
pop
sub
mov
lretw
jmp
inc
es
jns
push
int
xor
xor
ret
push
inc
xchg
dec
mov
push
icebp
sub
jmp
pop
add
sbb
pop
mov
adcb
imul
rcll
cmc
das
test
aaa
test
inc
mov
and
lahf
push
and
add
cmp
and
mov
mov
or
dec
jne
sahf
cld
cmp
mov
jo
dec
sahf
cld
push
pop
fwait
jp
shl
test
mov
mov
sbb
sub
insl
xchg
sub
das
imul
sub
fdivl
mov
push
addr16
in
lea
js
cmp
add
outsl
sti
push
jp
mov
ja
aas
sti
fsubs
or
or
xor
dec
sub
jg
fisubrs
fbld
rcll
cmp
pop
jmp
cmpb
mov
loop
sbb
out
pop
push
jp
mov
push
dec
jmp
xlat
and
fwait
sbb
popf
in
out
adc
stc
mov
mov
cmp
jo
jns
test
aaa
cmp
aas
push
stc
fsubrl
imul
das
aam
ret
mov
test
dec
sub
je
xchg
nop
ljmp
daa
daa
adc
scas
xchg
jno
insb
loopne
inc
clc
add
fisubrl
daa
inc
addb
mov
push
fwait
and
outsb
cmp
mov
stc
and
shlb
daa
loope
sbb
jno
popa
or
inc
scas
aas
inc
push
and
or
sbb
adc
in
into
int3
shll
mov
fdivrl
adc
mov
sub
ss
loopne
pop
push
cmp
je
ja
jmp
pushf
mov
push
cmp
popa
into
add
mov
cmp
add
ret
stos
or
ja
xchg
out
or
lds
int3
cmp
and
add
repnz
mov
mov
mov
inc
adc
loopne
mov
arpl
mov
mov
int
hlt
inc
sub
and
jp
decb
dec
inc
sbb
adc
lock
rclb
push
ret
or
rcll
subl
and
push
pop
cmpsb
cmp
scas
cmp
scas
sub
out
inc
fimuls
xchg
bound
mov
cltd
mov
les
cmp
mov
orb
mov
cmpsl
mov
mov
jp
or
and
rolb
adc
adc
int3
jo
outsb
cli
mov
adc
iret
outsb
lds
daa
mov
push
movlhps
lahf
and
xor
add
and
daa
fcomp
jge
dec
js
insb
dec
cmp
adc
iret
xchg
aaa
punpckhdq
inc
jle
fwait
stos
sbbb
cmc
in
out
and
xchg
pop
push
lods
out
iret
aad
mov
lahf
mov
jmp
pop
mov
mov
ja
pop
jle
call
push
xchg
mov
int
imul
je
cmp
hlt
popa
xor
nop
ljmp
lock
mov
out
mov
dec
ret
cli
mov
cltd
ret
sub
scas
fsubrl
cmpsb
out
rcrl
pop
scas
sub
sti
xor
or
std
xchg
push
mov
push
jns
into
xchg
dec
xchg
adc
adc
mov
ja
pushf
cmpl
ja
lods
mov
loope
adc
push
leave
inc
or
sub
fs
jmp
movl
jmp
jl
xorl
cs
xchg
dec
imul
push
mov
nopl
cvtpi2ps
inc
or
out
jo
pop
mov
in
and
aad
repz
xchg
stos
adc
pop
scas
inc
mov
int
js
sub
rep
ss
inc
dec
mov
int3
cmp
orb
inc
test
push
lcall
fs
or
push
pmuludq
mov
dec
and
dec
fs
loop
xchg
jne
scas
xchg
insl
jp
shll
jbe
ss
js
xchg
movsl
adc
insl
sti
daa
mov
xor
jge
dec
add
mov
cmp
adc
cld
icebp
icebp
pop
cmp
pop
into
dec
loopne
cld
into
push
arpl
shl
xor
loop
mov
xchg
jne
pop
sbb
insl
push
out
pusha
jb
mov
in
cmc
into
add
jns
scas
popa
jbe
test
cmp
or
nop
loopne
sbb
cmp
jno
adc
mov
sbb
rorb
scas
cli
orl
pop
lret
add
dec
jg
insb
pushf
addb
sbb
test
imul
pusha
jb
mov
add
mov
dec
aas
fcmovnbe
orl
dec
xor
cmpb
add
xchg
aaa
cmp
call
in
sar
mov
mov
aas
xchg
mov
jle
lret
sub
sub
stos
notb
stc
jg
and
aam
sub
ja
enter
leave
pop
jnp,pt
sbb
mov
pop
addr16
and
mov
ja
jne
pop
int3
or
pop
dec
push
xchg
or
add
lds
dec
aam
decl
push
push
pop
mov
fbstp
stos
es
lcall
mov
push
jbe
xchg
mov
in
xchg
xchg
movsl
jne
xlat
pop
jb
out
std
out
in
fisubrl
or
mov
cmp
outsl
mov
adc
lahf
add
clc
test
mov
xor
movb
dec
data16
add
and
sub
imul
cmp
push
fcomps
and
cld
mov
fcompl
imul
xor
in
sbb
mov
push
push
pop
stc
cltd
movsb
add
inc
gs
divb
lods
or
xchg
mov
cmp
es
cmc
inc
loop
jmp
add
add
cwtl
mov
call
jno
sti
cmpb
nop
or
in
and
sub
cs
xlat
sub
je
push
mov
pop
cmp
cmpsb
mov
aad
xor
dec
mov
cmp
push
stos
and
clc
cmp
les
outsl
scas
inc
filds
add
mov
dec
std
xorb
mov
aad
call
dec
mov
jge
and
pop
adcb
mov
gs
cmp
cmp
repz
push
fdivp
mov
xor
sbb
xor
jbe
lock
sarl
leave
lods
sub
in
fcomip
test
dec
inc
and
fdivp
sub
scas
xor
imul
cmpsl
pop
xchg
xchg
inc
mov
outsl
inc
lahf
xchg
nop
cltd
ss
push
mov
movzwl
cmp
jo
or
xor
loopne
shlb
mov
mov
ret
jecxz
sbb
stc
cmp
clc
fwait
mov
ret
mov
cli
add
pop
movsl
mov
push
pop
inc
push
out
push
adc
xor
mov
fcoms
cld
je
fiaddl
sbb
mov
add
mov
lret
cmc
sar
jle
cmp
cmp
jmp
repnz
out
addl
mov
scas
cwtl
jb
jno
cmpsb
mov
loopne
movsl
dec
out
mov
lcall
fbstp
cmpl
mov
pop
and
sub
movsb
xor
pop
dec
std
sbb
xchg
rcll
mov
add
clc
imul
sub
cltd
test
lahf
adc
insb
js
pop
fcmove
sti
mov
mov
inc
aaa
cmpsl
out
outsb
repz
cwtl
leave
inc
js
pop
mov
pusha
add
addb
loop
add
cmc
cmp
sbbl
insb
add
or
test
adcb
das
out
imul
jecxz
aam
pop
aam
movsb
shrl
inc
pop
imul
xchg
fisttps
jge
xchg
and
xchg
pop
rcll
aad
test
mov
mov
adc
shlb
jmp
cmp
xchg
popf
scas
sub
shll
mov
jmp
jns
btc
dec
sub
mov
imul
adc
out
mov
jae
fidivs
pop
push
fprem1
loop
push
sub
xor
movsb
hlt
imul
xor
push
test
jmp
push
sbb
mov
aas
add
mov
movsl
mov
dec
data16
cmp
adc
test
inc
inc
imul
pop
fiadds
cmc
cmp
dec
mov
out
sbb
sbb
inc
loopne
pop
js
inc
jl
lahf
jne
dec
fstpt
cmp
sbb
cmp
push
cltd
xor
ja
scas
enter
cmp
sbb
outsl
test
pop
arpl
mov
jno
adc
jne
cmp
pop
adc
and
cmp
mov
mov
cmp
pusha
add
jnp
sub
call
cmpsb
adc
sbb
pusha
push
add
lahf
adc
mov
out
ljmp
sub
lahf
mov
xchg
dec
mov
mov
jno
jl
jbe
sbb
pop
xchg
int3
fdivrl
dec
sub
adc
sti
dec
push
lods
mov
fidivs
pop
pop
icebp
jo
fidivs
push
pop
lock
fmul
xchg
cmp
inc
pop
int
sub
lea
std
jns
pop
jne
xor
ret
clc
jns
mov
int3
jp
into
jmp
jb
aaa
cmp
out
sbb
imul
adc
divl
cmp
dec
ja
sbb
and
pushf
cmp
andl
push
scas
pusha
iret
addb
outsl
ss
xchg
out
jbe
jae
mov
cltd
leave
popa
ss
pop
add
dec
push
xchg
and
add
gs
imul
es
ds
dec
aam
std
inc
ret
mov
fs
jg
sbb
arpl
xchg
pop
mov
adc
adc
pop
popa
les
xor
dec
add
std
push
scas
sub
popf
js
int
fildl
adc
aaa
xorb
and
shrb
int3
push
or
mov
test
jle
mulb
lods
enter
popf
xchg
scas
mov
lods
dec
popf
adc
push
insl
in
jmp
dec
shrb
xchg
sub
sub
dec
dec
mov
int3
adc
outsb
scas
mov
mov
sub
fcmovbe
adc
cwtl
push
ret
cs
or
pop
test
inc
aas
fstpt
add
sub
in
adc
sub
stos
add
mov
ds
and
and
addr16
jne
dec
loop
mov
pop
cmp
adc
aad
hlt
jge
jle
rcrl
cmc
lea
cmp
mov
pop
or
in
sbb
jg
mov
pop
sub
scas
add
dec
popf
mov
mov
pushf
daa
inc
andl
fisubrl
mov
xchg
lods
jno
inc
add
mov
das
sbb
mov
sbb
sbbl
das
xlat
in
add
stc
das
sub
add
xchg
out
and
push
repnz
je
in
movsb
sub
xchg
pop
add
scas
mov
mov
sub
xor
sbb
sbb
xchg
add
enter
mov
fwait
ds
imul
fadds
test
shrb
movsl
es
loope
dec
lret
add
mov
cmpsb
jmp
mov
stc
cmpsl
mov
dec
out
ret
rorl
repz
shll
push
jne
sub
or
mov
leave
mov
jbe
sbb
mov
pop
pop
adc
jb
mov
minps
in
cmp
jnp
decl
pop
punpckldq
mov
mov
or
push
jno
mov
jp
mov
cmp
ret
imul
inc
lcall
call
lock
repz
mov
icebp
jecxz
loope
out
pop
pop
aas
out
jno
and
movsl
insb
jb
ficompl
rcl
mov
popa
movsl
cmpsb
jg
mov
pop
xchg
pop
jl
nop
or
push
cmp
mov
fxch
ds
cmp
pop
arpl
mov
shlb
or
lret
or
xchg
sub
test
lods
in
adc
inc
mov
cmp
dec
hlt
in
sbb
adc
clc
icebp
xchg
testb
iret
ljmp
roll
or
ja
gs
fs
ret
and
adc
mov
xor
dec
inc
lret
mov
cmp
pusha
adc
push
ret
cmc
jno
push
decl
popf
pop
js
push
imul
cmc
cs
imul
jmp
loop
xor
popa
cmp
cmpsb
fxch
jl
sub
sar
icebp
mov
mov
jno
iret
jae
bound
sbb
and
xlat
pusha
mov
push
mov
popa
inc
xor
adc
mov
loopne
out
or
out
les
dec
je
pop
mov
test
js
leave
xchg
pop
mov
mov
stos
push
push
stos
je
push
fldenv
add
sbb
add
cwtl
and
xchg
mov
or
test
add
loope
mov
xchg
xchg
or
pop
repz
rcrb
add
jns
sub
pop
mov
lret
mov
xor
xchg
add
sbb
xlat
dec
sub
fcoml
sub
xchg
xorb
shll
inc
leave
imul
jl
inc
popa
movsl
jge
and
mov
mov
or
sbb
cmp
movl
mov
inc
xchg
test
ljmp
mov
pop
cmp
out
mov
adc
popf
sub
sub
aad
dec
ficoml
jle
cmp
inc
jne
iret
xchg
adc
pushl
mov
cmp
call
outsb
xchg
mov
test
adc
mov
push
cmc
aas
dec
mov
rorb
cltd
leave
xor
cwtl
in
imul
dec
enter
or
inc
fldl
in
leave
inc
push
stc
jg
xchg
or
cmpsb
je
inc
dec
sbb
adc
pop
aas
movsb
dec
data16
mov
stos
inc
sahf
cmp
cmp
sahf
sub
arpl
lods
adc
push
popa
movsl
sub
push
mov
shlb
call
pusha
f2xm1
and
sbb
loop
imul
cmc
cmpl
insb
mov
xor
xchg
mov
pop
rcrl
or
lea
cmp
pop
ret
and
aam
lds
or
sbb
enter
data16
push
xchg
std
add
popa
mov
mov
xor
adc
sbb
imul
mov
adc
jae
pop
mov
inc
jge
dec
fdivr
jmp
and
hlt
and
cld
cmp
loop
out
adc
mov
cltd
xor
repnz
dec
xchg
push
inc
mov
push
lods
dec
outsb
repz
out
out
dec
addr16
data16
out
loopne
jo
jmp
movsl
cli
cmpsl
fiaddl
sub
xchg
std
push
inc
stos
mov
ret
xor
js
xchg
inc
push
in
jnp
xor
add
loope
or
mov
ret
stos
popf
clc
test
mov
xor
sbb
jmp
rcl
xor
dec
cltd
in
push
sbbl
rcrb
test
cld
or
mov
stc
ficompl
stc
or
mov
outsb
ret
fidivrl
fwait
push
scas
movsb
repz
fnstenv
xor
and
mov
aad
stos
popf
addb
jne
mov
cmc
mov
inc
pop
xlat
fisttps
pop
in
out
int
push
das
es
jecxz
xor
add
dec
ret
lret
cmp
aad
arpl
popf
cli
rcll
mov
push
push
sbb
test
call
pop
test
insl
daa
push
loopne
add
dec
sub
mov
scas
pop
clc
adc
cmp
clc
fbld
xchg
lods
dec
fbstp
dec
mov
dec
xchg
cmp
loope
test
mov
iret
xchg
push
jbe
shll
jo
and
data16
push
add
jbe
inc
pop
fwait
and
xor
aam
out
adc
and
cmc
push
stc
xchg
lods
push
and
inc
adc
sub
mov
mov
mov
push
cmc
inc
push
add
arpl
or
inc
popa
sub
je
sub
dec
sahf
das
or
and
rcl
xorl
mov
lods
cmp
sbb
cwtl
test
rolb
mov
lods
mov
add
punpckhdq
je
out
andb
or
pop
or
inc
andb
and
stc
push
ss
xorl
xchg
fidivrl
pop
mulb
cli
sub
int
ret
adc
mov
test
ret
push
mov
pop
jle
mov
pop
mov
lods
push
dec
test
std
pop
fidivrs
pop
outsb
inc
pushf
sub
jecxz
fwait
lahf
movsb
dec
pop
jbe
push
int
push
scas
xlat
adc
mov
mov
cwtl
sub
dec
fs
mov
std
rclb
dec
movsb
cmpl
jnp
jecxz
inc
iret
cmp
or
fisubrs
xor
mov
sub
pop
dec
jp
stc
xor
aad
sti
push
fildll
sbb
pop
fisttpl
fbstp
xchg
and
fidivrl
shlb
xlat
inc
in
adc
jnp
daa
insl
and
pop
and
pop
xchg
or
ja
out
test
jbe
iret
cwtl
adc
loop
fsts
fidivrl
cli
mov
xchg
movsl
scas
insb
fildl
jo
clc
js
inc
outsl
dec
jns
aad
mov
or
push
or
adc
movsl
cmc
mov
adc
sub
mov
mov
mov
jbe
stc
sub
ret
jnp
test
adc
imul
mov
mov
cmpsb
cmp
out
cmc
insl
shll
mov
subl
inc
aad
adc
outsb
dec
pop
cmp
fidivl
cli
and
sbb
sbb
push
movsl
push
fwait
call
mov
imul
xchg
mov
mov
enter
pop
popa
push
in
sbb
shll
in
push
xor
not
cmp
in
dec
or
orb
rcrb
pop
push
out
loope
scas
int
test
mov
or
fldenv
adcb
fnsave
push
inc
fs
cmc
ja
or
repnz
pop
sbb
xor
inc
cld
rol
pcmpeqw
loopne
mov
aad
cmp
fisubrs
mov
jnp
push
cwtl
daa
mov
xchg
and
std
mov
and
aad
stc
cmp
in
mov
add
or
push
imul
inc
sbb
gs
push
jbe
mov
adc
sbb
jo
jp
pop
adc
shr
in
or
ljmp
lods
push
cltd
sub
jge
stc
loopne
movsb
mov
jbe
arpl
fs
mov
mov
adcb
outsb
incl
repnz
xchg
clc
cmp
xor
xchg
sahf
ds
in
imul
and
push
jp
mov
jno
imul
push
loop
in
lods
jne
enter
js,pt
push
gs
fisubs
int3
lods
je
cld
mov
lahf
loop
push
outsb
dec
lods
add
inc
sub
fcomip
out
sbb
nop
mov
pop
scas
xchg
pusha
xor
test
shrb
pop
pop
ret
movsl
sub
cwtl
push
jge
adcb
mov
loope
mov
adcl
lods
mov
xchg
cmp
add
aam
mov
pop
cmc
xlat
cmp
dec
cmpsb
push
sub
js
nop
sbb
lea
cmp
fld
mov
cmp
xor
pusha
jne
fwait
dec
mov
int3
ret
add
clc
mov
lret
movsl
jns
sbb
repz
sub
lret
and
andl
pop
cmp
dec
add
pushl
cmp
iret
lock
add
push
add
xlat
adc
add
sub
jns
mov
push
inc
fisttpll
repz
lcall
sbb
dec
xchg
movsl
jae
les
out
sbb
movsl
jp
cmp
sbb
mov
movsl
jmp
lahf
jmp
subb
testl
cmp
stos
shll
pop
ds
pop
xor
inc
out
xlat
cwtl
push
mov
repz
movsl
out
cltd
scas
lahf
loope
sahf
push
sarl
dec
push
mov
test
push
sbb
push
ds
cmp
repz
dec
add
fnstcw
jno
popa
push
jmp
idivl
insl
add
popa
repnz
pmaxsw
xchg
sbb
rorl
mov
and
inc
mov
rcrb
and
mov
das
insb
push
pop
jno
lods
gs
dec
and
ret
aam
lock
push
push
ljmp
push
test
mov
push
outsb
push
repz
pop
pop
sbb
ja
jle
test
std
cmp
cmp
mov
pop
out
incb
aam
add
jb
sbb
or
inc
lds
in
xchg
and
orb
scas
add
dec
je
cltd
out
test
push
push
and
js
scas
adc
out
es
add
lret
insl
test
xchg
add
popf
data16
mov
popf
outsb
movsl
push
mov
addr16
xor
stc
in
sub
and
int3
out
imul
xchg
jmp
pop
cmc
lcall
jmp
mov
dec
scas
mov
flds
sub
aaa
into
lret
and
sbb
les
xor
push
lahf
push
and
cmp
jne
push
cmpsl
ror
fists
push
movsl
push
dec
popa
popa
aaa
dec
je
mov
rorb
xor
in
ds
pusha
lds
cmp
adc
pop
mov
inc
push
mov
and
call
scas
fs
jo
imul
adc
sbb
pop
add
in
movsl
lahf
xor
jle
ss
cmp
add
lea
adc
xor
sbb
fcomps
xchg
aaa
jne
std
adc
push
rorb
pusha
and
repnz
lahf
popf
cmpsl
jle
jns
cmp
push
mov
fcom
jnp
popf
dec
mov
mov
lds
ljmp
icebp
scas
jns
adc
xchg
ds
jnp
dec
or
ds
lcall
pop
hlt
pop
xchg
pop
dec
sbb
arpl
scas
cmpsl
add
shrb
pop
out
jl
mov
cli
ret
jne
mulb
xor
adc
pop
pop
mov
cwtl
jecxz
mov
sti
stc
cmpsb
popl
test
mov
xor
xchg
xlat
push
adc
pop
xchg
push
sub
cwtl
sub
andb
les
lret
test
scas
push
ja
aaa
leave
push
mov
fmulp
cmp
inc
pop
cmpsl
xlat
lret
pop
xor
sarb
mov
inc
pop
movsb
xchg
fwait
loop
mov
mov
arpl
add
jns
jo
mov
or
sub
dec
cmpsb
or
push
push
inc
out
test
adc
cmp
add
pusha
mov
pushf
xor
outsb
js
cmpsb
pop
mov
test
jnp
clc
mov
movsb
cs
cmc
jl
cmp
mov
push
push
push
scas
inc
dec
dec
ficompl
les
push
jl
jmp
aaa
add
pop
in
push
sbb
cs
aaa
dec
mov
or
aam
mov
mov
inc
add
mov
mov
call
aas
std
cmp
sub
ficoml
pop
ljmp
out
mov
repz
jecxz
mov
jbe
iret
mov
ljmp
scas
out
nop
js
repnz
mov
mov
ret
mov
jo
cmp
mov
mov
add
iret
out
pop
outsb
mov
jno
sbb
pop
jecxz
dec
clc
lret
pushf
xchg
sub
shll
sub
cli
das
jb
add
test
and
and
aaa
rorl
mov
out
arpl
xor
ss
mov
js
add
lock
loope
test
popa
mov
cmp
xor
scas
push
mov
sarl
mov
iret
or
insb
pop
push
sti
sub
test
sub
je
jge
jge
in
je
lds
lods
jns
pusha
ljmp
call
sahf
or
jbe
cmpsb
mov
push
xchg
xchg
adc
lret
int3
jg
push
push
out
negb
xchg
je
lock
adc
xchg
mov
jle
adc
int
mov
mov
dec
jmp
xchg
dec
pop
mov
and
pop
push
mov
in
xchg
jno
notl
cmp
mov
jg
inc
lret
adc
cld
sbb
sbb
hlt
mov
iret
aaa
imul
aad
fmull
js
les
sbb
mov
loopne
inc
scas
sbb
jle
sub
xchg
adc
xchg
jbe
rcl
insb
incl
mov
out
enter
add
xchg
clc
cmp
mov
xor
int
imul
daa
sub
mov
lcall
or
jl
test
xlat
fdivrl
dec
sahf
mov
xchg
sub
dec
fs
xchg
insl
hlt
movsb
fnstsw
inc
daa
xchg
push
inc
inc
lods
mov
pop
sbb
push
mov
mov
movsl
adc
inc
je
sbb
pop
shlb
leave
pushf
into
loopne
sub
jecxz
pop
call
mov
jecxz
sbb
movsb
push
fcompl
xchg
insb
cmovb
stos
adc
stos
mov
pop
outsl
xor
lock
inc
mov
xchg
inc
dec
jnp
push
inc
cmp
mov
das
jo
add
push
sub
dec
test
loope
repz
mov
sahf
mov
movaps
push
movsb
pushf
sub
test
jno
nop
cmp
stc
lds
cmp
fstps
mov
roll
add
push
inc
in
jb
push
dec
rclw
and
cmc
add
push
xchg
cmpsb
andl
fcmove
popf
shlb
jge
sbb
in
insb
loope
xlat
out
mov
sbb
push
cmpsl
sbb
inc
mov
pop
sbb
imul
ret
push
lods
adc
mov
lock
jle
dec
loop
pop
ret
sub
xchg
icebp
jecxz
int
sub
cmp
xor
shrb
repnz
push
mov
and
fidivrs
xchg
add
push
jbe
adc
mov
push
jge
shll
xchg
dec
dec
loope
pop
or
xchg
mov
dec
jle
call
fmul
xchg
int3
cmp
push
and
sti
daa
shlb
pop
jae
push
ret
pop
daa
rcr
or
mov
jb
fildl
ds
rcrb
sbb
xorl
push
leave
dec
push
push
aad
jo
jp
out
sarb
repz
jmp
mov
mov
jmp
pop
and
arpl
sbb
test
inc
jo
ljmp
lds
scas
movsb
or
stos
lds
pushf
push
clc
push
rclb
movsb
nop
xchg
stos
popa
in
iret
mov
lock
imul
mov
jae
ljmp
xor
aad
cmp
pop
fsubrl
sub
lock
mulb
sbb
mov
adc
dec
sub
xchg
sub
and
or
mov
in
rcrl
jmp
push
test
xor
lods
fnstcw
fisubrl
or
gs
insb
and
pop
lea
xor
aad
xchg
mov
nop
jmp
rorl
jle
xor
shlb
inc
xchg
jo
cmp
dec
daa
inc
cwtl
movsl
cltd
mov
mov
pop
orl
rep
cmp
std
gs
nop
in
cmpsb
loope
lods
push
ds
ret
aaa
icebp
sbb
sbb
fsubrs
mov
add
xchg
and
nop
mov
popf
adc
aaa
pop
and
lret
sbb
jl
cwtl
lret
lods
jge
hlt
jmp
les
mov
xor
and
insb
sub
push
addr16
daa
push
sahf
ljmp
inc
xchg
mov
sbb
popa
ljmp
cli
jge
rcr
fidivrs
mov
into
ss
fldl
cmp
ljmp
inc
push
cmp
imul
xor
in
ljmp
scas
mov
cmp
movsb
nop
inc
out
pop
mov
testb
cmp
inc
movsb
xchg
movsb
ret
enter
sub
std
sbb
ds
add
rolb
mov
hlt
dec
cld
je
inc
push
cld
popf
pop
loop
fidivs
mov
addr16
xlat
mov
rorb
xor
fldl
jno
xchg
aam
mov
lock
or
xor
pop
movsl
imul
mov
xlat
cmp
popa
fwait
xchg
int
jg
mov
daa
push
push
cmp
in
adc
insl
jb
out
out
mov
jmp
pop
out
aad
and
imul
and
or
xchg
lods
and
inc
jg
loope
aam
mov
dec
iret
jo
pop
jno
jno
cmp
cmp
cmp
jnp
icebp
xchg
dec
sbb
out
call
xlat
hlt
notb
mov
and
imul
loopne
je
das
adc
shl
cmc
mov
enter
jns
test
inc
cmp
ffreep
inc
ja
scas
dec
sti
mov
dec
mov
out
clc
loop
das
mov
rorl
in
lods
sahf
sbb
mov
test
adcl
mov
mov
cmp
jg
fmulp
xor
push
xchg
das
add
push
cli
pop
cwtl
rolb
inc
rcr
mov
mov
sahf
pop
divb
pop
ret
movsb
jp
mov
jmp
out
add
orl
push
sbb
outsl
andl
fsubrp
xchg
lds
ret
push
lods
js
mov
push
pushf
push
jae
lcall
outsl
sbb
and
add
cmp
cmp
xchg
adc
cltd
mov
mov
dec
int
jecxz
dec
cmp
js
and
je
xchg
sub
xor
mov
cmp
cmp
push
xor
xchg
cmp
movsb
add
adc
add
dec
or
repnz
insl
lahf
xchg
mov
and
inc
loopne
and
pop
or
push
in
fstl
mov
xor
sub
sub
ja
lret
push
lea
jae
cmc
or
sub
fbld
xchg
sbb
fsubl
cmp
sub
repnz
and
aaa
in
mov
shrl
repnz
mov
inc
scas
movsb
sub
fists
cwtl
shlb
fsub
sti
adc
mov
pop
aam
mov
xchg
leave
fnstsw
dec
stos
cmp
push
sub
ret
pushw
pop
sarl
cmpb
jns
fsubrs
testb
inc
adc
jno
punpckhbw
or
or
in
mov
sbb
popa
jnp
fs
push
sub
xchg
xor
push
xor
bound
adc
xlat
inc
out
movsb
test
mov
aam
adc
lods
add
pop
jne
cmp
stc
inc
push
push
fs
insl
pusha
lods
pop
pop
xlat
jl
add
sub
pop
pop
cmp
inc
shlb
ds
add
and
fs
jb
mov
insl
xchg
je
sbb
pop
lret
mov
fs
mov
pusha
sub
test
and
adc
sbb
jle
push
xor
mov
fldl
cli
push
jb
arpl
inc
push
loop
dec
mov
cmpsb
jge
xchg
xchg
mov
repnz
jl
mov
mov
les
mov
fdivp
mov
inc
push
nop
test
add
cmp
cltd
xchg
mov
stc
add
inc
test
lock
push
mov
in
and
iret
sbb
cmp
hlt
or
push
mov
xor
in
sbb
popf
sub
dec
lret
das
out
cmp
mov
mov
into
mov
aas
push
xor
je
sbb
dec
xchg
mov
jns
or
sub
add
nop
ret
pop
mov
adc
mov
jle
in
push
ja
and
clc
imul
cmp
test
out
scas
fisubrl
cltd
repz
notb
dec
mov
ficoml
shlb
in
dec
xchg
mov
pop
push
jp
add
add
stc
loopne
sbb
adcb
or
call
cmp
xchg
sti
imul
sub
cld
mov
cs
sub
das
mov
jle
xchg
lcall
and
mov
out
inc
xchg
jmp
dec
cmc
lods
xor
and
xchg
jecxz
push
mov
mov
outsl
dec
mov
mov
jge
and
jne
rol
inc
dec
lea
inc
inc
test
push
jno
enter
and
pop
icebp
and
ja
insl
jae
std
imulb
test
jne
push
mov
dec
insb
jl
xchg
or
lret
jp
xor
push
mov
xchg
int3
shrb
jle
or
fdivs
out
mov
and
add
push
mov
push
mov
jge
cmp
icebp
shr
lock
les
inc
xchg
jnp
stos
ds
je
mov
xor
cld
cmp
in
js
enter
frstor
fwait
imul
fisubl
loop
inc
test
xchg
jbe
jnp
jb
push
push
pusha
aad
xchg
adc
xlat
sbb
xchg
and
in
mov
stos
jecxz
pop
clc
mov
sbb
test
xchg
pop
push
cli
fcoms
add
sub
add
xor
and
call
test
mov
jae
push
pop
inc
das
fs
std
push
jmp
test
adc
cmp
xor
mov
lret
sbbl
mov
sbb
mov
dec
pop
cmpsb
les
adc
adcb
pop
dec
leave
push
adc
xor
dec
or
xchg
mull
fisttpll
mov
mov
sbb
mov
loope
sbb
jg
sbb
rclb
decb
sahf
out
or
pop
inc
outsl
cmpl
cmpsl
popa
push
mov
adc
mov
pop
movsl
cli
in
test
inc
popa
adc
cmp
aaa
fsts
movsl
ljmp
mov
mov
stc
test
adc
je
andl
bound
fs
and
cmp
mov
push
cs
jl
push
insb
sti
inc
inc
mov
push
xchg
mov
mov
cltd
popa
adc
and
inc
pop
leave
dec
xor
xor
pop
add
in
mov
xchg
arpl
adc
iret
call
add
push
xchg
jl
push
insb
scas
std
add
pop
mov
repz
leave
add
test
xor
fs
shll
pop
and
xchg
mov
test
sbb
testb
or
test
imul
out
cmp
test
mov
xor
adc
hlt
sahf
mov
dec
pushf
push
scas
icebp
jp
xor
sahf
jno
inc
jno
and
dec
loope
loopne
or
xchg
dec
iret
adc
out
dec
call
cmpsb
jne
ja
das
inc
mov
mov
and
scas
ret
pop
popf
jle
push
divb
dec
sub
add
fcomps
outsl
insl
or
add
inc
popa
mov
xor
ja
cmp
and
dec
push
int3
mov
fisubrs
lods
and
dec
fistl
fists
into
scas
stos
adc
inc
loop
xor
add
rcrl
popa
subl
in
popa
cmp
imul
mov
sbb
in
rclb
fstpl
pop
push
int3
jg
lret
push
shl
mov
into
mov
pop
out
pop
roll
fnstcw
xlat
inc
ret
rcr
jle
enter
out
xor
sbb
es
ret
pop
push
cmp
imul
xor
or
repnz
mov
pop
mov
pop
ss
jmp
mov
xor
inc
push
fstpt
sahf
add
fmull
adc
mov
xor
cli
or
cmp
call
sar
sub
jbe
fsubl
das
pushl
shlb
push
adc
or
das
mov
fbstp
mov
es
cli
push
jecxz
lcall
imul
lcall
in
aas
sbb
push
test
push
cwtl
inc
add
mov
mov
jb
jae
jle
push
dec
lea
jno
repz
lds
daa
xchg
stos
das
jno
xchg
push
loopne
sbb
rclb
mov
xor
cmpsl
outsb
mov
mov
pop
push
in
movsl
lret
and
add
cwtl
xlat
sub
sbb
dec
negl
out
in
or
lea
mov
sub
jb
pop
popa
into
push
jo
fcoms
mov
scas
lret
outsb
mov
lahf
out
inc
int
call
sub
clc
popf
ljmp
dec
sbb
nop
hlt
xchg
aaa
mov
popl
cmp
inc
rcl
mov
test
dec
or
das
shr
imul
cltd
ja
lods
add
fisubs
inc
mov
mov
jae
lret
shlb
and
cmpsl
arpl
xchg
sbb
or
sbb
lock
popw
xchg
bound
cltd
mov
stos
mov
data16
aam
loopne
stc
int3
sti
sub
jns
push
or
lds
pop
xor
add
sti
dec
sbbl
jmp
sub
es
cmp
push
adc
push
inc
inc
mov
sbb
subb
imul
fxch
push
jle
adc
stos
mov
add
out
frstor
paddsb
add
add
cld
mov
mov
add
xor
sbb
dec
imul
sbb
fistpll
stos
and
movsb
and
lods
inc
sbbb
divb
lock
xor
pop
mov
enter
pop
cmp
ja
xor
sub
out
out
cmp
mov
pop
lods
jp
fs
pop
lahf
inc
sbb
cmp
cmovne
loope
popf
fiadds
daa
add
pop
cs
jge
lods
pop
ret
jg,pn
mov
lcall
cmp
into
dec
out
lock
loope
inc
push
lods
popa
dec
sbb
jbe
xchg
xchg
mov
sbb
mov
jecxz
loope
dec
ds
loope
addb
pushf
ret
adc
jp
cltd
and
dec
shlb
stc
sbb
call
lret
and
sbb
es
xor
std
inc
mov
test
icebp
sti
mov
lds
mov
cmp
inc
fstp
sub
stos
sub
mov
inc
mov
push
mov
jno
push
aam
dec
xor
or
out
les
hlt
leave
mov
inc
mov
cmp
mov
iret
mov
jae
mov
lret
les
xor
xor
inc
and
push
mov
or
push
and
das
fldt
in
mov
sarl
xchg
push
in
js
stc
maxps
movsl
jl
clc
ret
xor
fmull
mov
push
adc
movsb
dec
mov
or
ja
enter
test
mov
sub
icebp
sbb
pop
adc
sbb
adcl
push
xor
popa
es
addr16
scas
add
repnz
cmpsl
into
lock
fcomps
or
ljmp
in
pusha
mov
inc
jmp
mov
std
mov
add
push
and
loopne
pop
push
inc
ret
repz
enter
and
or
rcl
lods
aas
stos
cli
xor
lret
sub
ficomps
rcrb
daa
inc
icebp
push
out
mov
push
adc
out
xor
sti
mov
mov
addr16
pop
mov
sti
std
outsl
cmc
mov
in
xchg
addb
test
out
dec
shrb
test
out
stc
mov
push
cld
mov
jp
mov
out
sti
pop
xchg
mov
gs
shr
inc
sbb
notl
adc
pop
je
daa
push
inc
lods
add
jbe
add
cwtl
dec
lret
ljmp
sub
inc
ljmp
pop
mov
jns
sub
xchg
jecxz
shl
lret
xchg
mov
int3
cld
repnz
inc
das
test
xchg
cwtl
push
and
imul
mov
ja
add
repnz
sbb
jns
cmp
out
sbb
cs
out
push
fs
mov
add
shrd
ret
fstpt
xchg
ret
cmpsb
jb
pop
sbb
movsl
adc
inc
cmp
aam
lea
mov
and
punpcklwd
mov
fsubrl
ret
dec
add
xchg
aam
sbb
lods
mov
pop
adc
push
inc
jg
adc
pop
pop
sbb
das
push
cwtl
jnp
sub
test
test
out
pop
popf
push
pop
rcrl
aam
jmp
icebp
dec
sbb
call
jl
shll
or
imul
push
cmp
sub
add
xchg
movsl
fwait
xchg
cli
xor
jge
je
cmp
or
mov
push
push
mov
adc
cmp
lret
xchg
sub
mov
jl
adc
mov
test
test
out
cli
jo
dec
clc
repnz
sub
bound
lods
or
lret
dec
and
mov
popl
sarl
jno
ficoms
fwait
xchg
lcall
fcmovnb
out
fidivs
push
fs
out
inc
pop
jae
aas
mov
movsl
mov
pop
popa
and
mov
out
cmpsb
mov
xchg
mov
xchg
adc
mul
jo
ss
jg
adc
dec
jbe
pop
pop
dec
mov
push
or
js
mov
pushf
inc
sbb
stc
cmpsl
or
or
ljmp
mov
push
push
push
lret
or
inc
push
lahf
lret
int3
xor
xchg
inc
ret
or
add
subb
shr
jnp
shll
fiaddl
mov
in
dec
sub
loop
mov
fmul
pop
sub
cs
pop
popa
aas
jp
or
mov
or
sahf
loope
adc
scas
push
sbb
lock
mov
lea
cs
bound
mov
mov
nop
cmp
mov
call
jg
icebp
push
mov
out
sbb
dec
dec
or
sbb
mov
or
jne
jno
ror
push
in
sarb
and
std
sbbl
mov
scas
daa
jmp
lea
jne
mov
xor
mov
cmpsb
int
xor
test
dec
dec
cmpsb
mov
pop
pop
xor
push
add
mov
inc
mov
out
das
sub
ss
lods
xor
stos
inc
cli
push
cmp
movsl
out
sbb
sbb
lret
mov
push
mov
add
enter
in
stos
mov
sbb
cmp
test
js
add
push
push
lcall
push
adc
inc
idivl
pop
arpl
lea
std
fs
sbb
jbe
nop
das
push
mov
fwait
mov
sti
mov
jp
std
rcrb
lahf
push
scas
or
jbe
xor
rorl
and
je
xchg
cmpb
fisubrl
push
adc
xor
xor
cmpsb
adc
cmc
jns
arpl
cmpsb
adc
and
push
aas
cmp
inc
add
shrb
mov
call
inc
dec
or
ret
mov
xchg
mov
sbb
popa
test
cmp
rcrb
cmp
cmp
insb
xor
cld
xchg
ret
xor
or
xchg
dec
loop
popa
setg
inc
sbb
xor
fcoms
movb
inc
cli
adc
fcmove
sub
rolb
jl
ret
rcrl
fwait
dec
pushf
xor
stos
sub
insb
testb
jo
push
xor
mov
adc
outsb
push
sbb
inc
std
mov
xchg
fcmovnb
inc
push
mov
mov
das
cmpsb
cmp
sbb
mov
and
dec
sub
or
mov
sub
mov
pop
cmp
adc
imul
jno
andb
adc
xor
sub
dec
push
mov
sbb
xchg
sbb
out
orl
dec
arpl
push
cmp
xor
and
xchg
lods
lds
add
aam
xchg
jns
sbbb
xchg
jne
shrl
iret
fwait
outsb
xor
mov
je
mov
xor
jg
je
push
ds
ret
pusha
sbb
inc
adc
imul
pushf
sti
sbb
mov
push
sbb
cld
movsb
ror
xor
jbe
mov
movsb
clc
into
lret
pop
adcl
mov
ret
mov
cli
push
mov
sub
xor
jecxz
push
cmpl
cwtl
pop
jmp
ret
mov
lea
data16
or
inc
sub
dec
pop
pop
pop
sti
push
lret
add
pop
and
lret
lret
push
push
into
out
xchg
jge
cltd
in
jo
sbb
dec
lods
mov
loope
mov
xor
sub
dec
fcoms
inc
dec
mov
xor
xchg
stos
in
pushf
js
lods
mov
jg
pop
mov
mov
mov
es
into
dec
push
pop
loope
jb
ljmp
cmc
xor
mov
xlat
xor
shrb
adc
mov
out
inc
inc
xchg
ret
scas
sti
enter
cmpsl
and
xchg
xor
test
pop
std
lea
jge
push
or
adc
cmpsb
loop
and
jg
outsb
imul
xchg
movsb
push
cmp
ss
xor
mov
sbb
outsb
fnstenv
mov
sti
cmc
ja
sub
lret
jns
rorl
xor
dec
xorb
lahf
sub
inc
lods
lock
sub
dec
dec
adc
sbb
gs
cmp
jae
bound
ret
and
jne
out
push
xchg
and
outsb
jl
jo
xchg
in
movsl
dec
mov
sbb
cmpsl
mov
inc
add
movsl
fs
adc
mov
dec
xchg
and
mov
mov
hlt
inc
mov
aas
mov
mov
test
inc
jg
lret
and
cli
in
adc
int
add
cltd
mov
pop
clc
adc
cld
push
outsl
dec
dec
jb
cmpsb
data16
rcr
nop
xor
inc
inc
dec
imul
lods
in
imul
mov
sub
push
in
add
js
push
dec
mov
xlat
sub
jecxz
inc
mov
rcl
and
dec
adc
outsl
jmp
ja
jecxz
clc
and
xor
sub
add
mov
push
iret
dec
ja
cltd
mov
or
pop
push
pop
push
xor
add
add
inc
mov
aas
sbb
jb
adcl
leave
adc
and
dec
push
repnz
push
imul
cmp
add
adc
pop
sbb
mov
stc
pop
fmul
add
mov
mov
dec
xchg
pop
or
inc
jo
jp
dec
lea
and
or
cmp
arpl
dec
pop
xchg
imul
xor
cmpsl
repz
xor
inc
in
mov
fcoms
scas
mov
sbb
es
dec
clc
xor
into
pop
clc
inc
pop
enter
mov
adc
mov
xlat
cmp
or
and
dec
or
iret
and
dec
inc
adc
jne
mov
cmp
fmull
int
enter
dec
mov
dec
jle
push
repz
aaa
xchg
stos
or
mov
push
adc
out
xchg
mov
test
xchg
aaa
adc
aam
sub
test
addl
aam
cmpl
push
fucomip
repnz
das
or
jle
stos
xchg
pop
les
stos
in
sti
repnz
lock
xchg
cwtl
adc
pop
scas
flds
and
xchg
pop
inc
jno
mov
dec
in
andb
or
and
xchg
inc
fidivl
or
enter
jg
outsb
jecxz
pop
cli
push
test
pop
popa
cwtl
negl
xchg
je
cmpsb
addl
adc
rorl
in
lret
inc
cmp
cltd
dec
bound
ficompl
cltd
movsl
outsb
dec
out
sbb
shrl
insb
pop
jo
inc
mov
pushf
stos
jbe
gs
ss
mov
ljmp
in
jbe
xchg
pushf
lret
sub
xchg
lods
mov
scas
stos
mov
sbb
jae
adc
and
int3
dec
test
and
push
or
sbb
cld
ljmp
or
test
cmp
into
inc
mov
sbb
test
xor
mov
bound
inc
ds
pop
xchg
in
leave
outsb
test
add
push
xchg
leave
pop
pop
jl
orb
mov
add
fmul
xor
mov
push
fwait
jnp
mov
sub
dec
cld
fistpl
or
dec
popa
movsb
js
test
cwtl
cmp
xorb
mov
addr16
fwait
push
dec
push
xor
imul
inc
dec
push
cs
inc
dec
cmp
mov
inc
inc
rorb
adc
fildl
or
sub
jl
inc
sbb
add
daa
cmc
cmp
dec
hlt
sbb
xchg
cmp
out
cmp
mov
leave
aam
and
jns
jl
mov
loopne
dec
fs
stos
jp
mov
rclb
xrelease
sub
sarb
dec
movsl
mov
cwtl
cld
add
inc
xchg
aaa
add
shll
pusha
mov
push
sbb
fcomi
rol
push
mov
mov
cmc
mov
push
rcrl
lods
add
or
lcall
adc
jp
pop
sub
xchg
insl
mov
pop
and
es
mov
xchg
dec
xorb
rcrl
push
icebp
enter
jle
xchg
lahf
sbb
icebp
out
repnz
sbb
mov
push
repnz
mov
jbe
xor
repz
outsl
jae
stos
add
push
jbe
dec
lret
jge,pt
mov
push
out
mov
sbb
or
sbb
xchg
mov
xchg
ret
jge
jne
lods
ret
adc
dec
lds
ljmp
jb
xchg
mov
dec
fmuls
jne
icebp
or
pop
mov
mov
pop
or
in
out
xor
jae
sub
lcall
adc
xchg
les
sbb
mov
ljmp
loopne
aam
aad
push
shlb
and
repz
xor
roll
aaa
arpl
je
xchg
out
lahf
push
mov
test
mov
adc
mov
test
outsl
sbb
lods
pop
inc
mov
cmp
xor
xchg
in
and
or
mov
imul
inc
mov
xchg
decl
bound
sbb
push
mov
mov
mov
pop
mov
jecxz
in
add
or
loope
inc
xchg
out
or
pop
pop
int
testl
dec
lret
inc
daa
cwtl
aas
xchg
jo
sbb
pusha
add
inc
jnp
pop
insl
test
shl
je
out
aas
nop
fwait
pop
mov
sub
loope
ljmp
hlt
ljmp
mov
adc
jne
scas
or
add
inc
push
daa
dec
and
stos
aam
aam
pushf
cs
sub
jmp
out
adc
inc
pop
xor
jl
cmpsl
add
movsl
dec
nop
loop
inc
jge
add
push
std
ds
xor
inc
or
pop
pusha
repz
movsl
mov
pop
sub
mov
insl
adc
lods
clc
in
dec
cmp
jb
fstl
cwtl
mov
jne
mov
das
loope
xor
mov
aas
inc
add
mov
jecxz
in
lcall
sahf
xchg
jno
cmp
mov
lret
es
fsts
popa
jb
mov
lods
addr16
cmpsl
ljmp
mov
shrb
inc
sti
mov
and
add
rclb
in
push
je
iret
inc
dec
test
adc
shrw
inc
sbb
pop
inc
or
lret
aad
mov
push
xchg
jecxz
dec
adc
fsubl
mov
jg
xlat
mov
dec
add
int
lods
outsl
pop
dec
outsl
add
pop
xchg
and
out
fisubl
push
fnstsw
inc
xor
cli
and
mov
adc
aad
mov
imul
and
xor
shl
push
xor
sub
pushf
dec
int3
cmpsl
push
stos
jmp
out
cld
xchg
stos
adc
lods
arpl
inc
fistl
aaa
lea
cmp
popf
imul
ret
mov
push
roll
int3
add
adc
jb
loope
fwait
les
add
sbb
std
js
fbstp
leave
in
jbe
sub
rolb
jb
fdivl
mov
mov
gs
xchg
mov
push
mov
test
push
xor
inc
dec
push
hlt
jle
mov
sbb
inc
adc
sahf
or
lahf
add
mov
mov
std
pop
mov
or
push
insb
popa
and
jl
insb
xor
fs
pop
frstor
sbb
ss
xchg
push
push
data16
repz
sbb
mov
rorl
add
xchg
and
pop
or
hlt
outsb
ds
push
xlat
movsl
loope
lret
mov
xchg
aam
and
sub
push
aam
dec
notb
inc
mov
sub
ds
cmp
adcl
sub
inc
jg
je
insl
jge
cmp
imul
or
xchg
stos
dec
add
sbb
lret
pop
jns
ss
push
adc
push
push
mov
adc
push
xor
aaa
test
nop
dec
mov
sti
pop
jbe
mov
dec
clc
mov
stos
sti
xchg
push
jnp
sub
movsl
xchg
andl
icebp
jl
pop
scas
test
shlb
mov
and
leave
jl
cmc
in
ret
addr16
fdivp
rorl
test
push
popf
daa
scas
ds
inc
ficomps
xor
mov
push
iret
mov
sbbb
pop
popf
cmpl
push
sti
inc
sub
nop
mov
xor
insl
pop
aas
pop
add
loope
xor
pop
mov
aas
xorl
or
push
cmp
mov
mov
idivb
xchg
jo
negl
mov
cs
sarl
inc
dec
lds
stc
jmp
mov
int
add
addr16
add
arpl
popl
ret
or
jns
jb
dec
and
cmpsl
push
addr16
xchg
adc
and
mov
lahf
movsb
cltd
jae
jo
fwait
pop
dec
adc
pop
imulb
loope
stc
jge
lock
xlat
jae
xor
ret
enter
sub
jge
mov
rclb
data16
je
mov
dec
pushf
flds
add
cmp
add
cmpb
repnz
daa
cmc
fmuls
cmp
push
movups
out
cmp
push
push
push
inc
ja
loopne
shlb
adc
xchg
inc
out
push
ret
mov
aas
mov
mov
jecxz
inc
das
sbbl
movsb
xchg
add
stos
sti
dec
jns
popa
bound
shrb
mov
sub
xor
popl
cltd
xor
cmp
fwait
mov
ret
subb
jo
mov
mov
dec
js
inc
inc
out
ds
xor
aaa
sbb
call
xchg
je
or
loop
mov
add
add
loopne
sbb
cmpb
or
jecxz
fsts
sub
in
test
push
insb
arpl
sub
lds
ljmp
orb
mov
adc
lret
sahf
jns
mov
loop
push
lea
sbb
jnp
in
cs
add
movsl
jl
out
test
pushf
je
cmc
mov
mov
mov
sti
jg
pop
in
pop
daa
pop
cmp
add
insb
rcrb
xchg
test
lods
in
dec
sub
leave
jnp
mov
daa
mov
mov
dec
sbb
mov
inc
pop
dec
data16
mov
sti
mov
xlat
pop
leave
mov
rol
xchg
pop
pusha
add
inc
pushf
mov
rcrl
xor
test
sti
pop
es
jl
data16
xchg
ror
mov
inc
and
lods
loopne
out
icebp
int
pop
add
pop
out
xor
sub
xor
add
inc
loope
mov
mov
lahf
adc
pushf
testb
or
outsl
inc
jns
enter
and
cld
addr16
jl
repnz
sbb
dec
pusha
and
outsl
insb
push
adc
push
dec
cmp
pushf
add
jge
inc
aad
adc
and
loope
fstl
xchg
je
sbb
or
icebp
pop
iret
jge
call
lcall
divb
scas
ja
in
mov
push
out
sub
xor
cmp
lds
mov
adc
mov
and
mov
push
sub
imul
jae
ja
std
js
sahf
add
sub
adc
inc
in
jmp
jmp
imul
jns
xchg
ljmp
ja
pop
add
clc
ret
pop
inc
add
mov
cmp
int3
sub
cmp
or
cltd
pusha
xor
mov
orb
sbb
mov
cmp
cmc
iret
aas
sti
lret
or
iret
pop
jb
mov
fsts
cmp
or
push
or
mov
sub
insl
jae
mov
push
sarl
ret
std
nopl
cli
idivl
xchg
cmp
mov
notb
ljmp
jno
cli
mov
mov
pop
pop
sub
jecxz
or
in
pop
and
mov
push
ljmp
daa
or
shl
sbb
aas
inc
adc
mov
insb
mov
loope
lds
sub
lret
mov
or
or
inc
or
sub
xor
sub
mov
xor
jl
sarl
out
test
cli
mov
pop
jo
and
sub
cltd
imul
in
lods
lea
and
xor
je
pop
sbb
add
cmpsb
mov
aaa
jle
fnstsw
ret
bound
xchg
cltd
adc
cld
popf
js
out
jo
mov
sti
iret
xor
xor
iret
push
xor
cmpsb
aam
mov
xor
and
test
inc
xor
int3
inc
ret
dec
frstor
je
insb
out
add
jae
xchg
sbb
out
add
add
sub
fcom
or
pop
repz
jg
in
push
sbb
lret
outsb
inc
ljmp
pop
push
lods
sbb
clc
or
lcall
sahf
or
mov
xchg
fs
repnz
xchg
or
mov
xchg
cmc
mov
repnz
pop
push
xchg
or
xchg
mov
adc
movsb
sub
jno
fbstp
jbe
lock
in
pop
pusha
dec
nop
adc
mov
pop
jae
dec
push
sbb
cmp
and
outsb
mov
int
mov
ja
cs
ljmp
jo
leave
sbb
daa
pop
nop
or
andl
outsl
imulb
lods
and
xchg
xchg
lcall
jb
xchg
cmpsl
sbb
scas
lock
js
jb
rclb
sbb
mov
sub
lahf
xor
loope
cmp
cmp
pusha
jne
mov
imul
push
jnp
ficompl
dec
sbb
ficompl
xchg
aad
cmpsl
fwait
xchg
push
inc
out
stc
inc
je
in
ret
xor
es
xor
pmulhuw
jmp
pop
sbb
or
add
inc
cmp
mov
pop
call
or
ret
add
call
in
test
adc
xorl
int3
je
in
insb
xchg
jmp
lods
mov
adc
out
fisubrs
cmc
mov
movsb
addr16
xchg
into
nop
xchg
je
or
out
dec
inc
jo
gs
jp
mov
mov
jecxz
dec
jecxz
fdivs
inc
pop
ret
cmpsl
sbbb
add
int3
adc
int
mov
dec
outsb
cmpsb
das
mov
lcall
in
xor
aas
test
mov
ljmp
mov
in
cld
les
push
adc
jae
les
pop
xor
sahf
xchg
cli
lret
mov
orb
cmpsl
inc
out
sbb
stos
hlt
mov
nop
insl
dec
xchg
xlat
mov
nop
inc
outsl
hlt
mov
cmp
fldl
pop
xor
mov
pop
loop
aaa
das
nop
mov
fnstsw
add
push
dec
je
xor
out
inc
push
popf
leave
jmp
sub
sbb
lcall
aas
jecxz
and
cli
jno
lds
jae
loope
xor
faddl
inc
cmpsb
pop
mov
adc
fs
xchg
dec
lahf
aam
hlt
jge
ret
or
pop
ret
mov
sbb
icebp
fnstenv
adc
mov
push
imul
mov
mov
jo
into
xor
sahf
cmp
pop
sbb
mov
mov
sub
int3
loopew
xor
cmp
inc
outsb
stos
adc
and
mov
outsl
fwait
sub
push
cmp
clc
jge
imul
xchg
pop
pop
xor
and
idiv
xchg
xchg
inc
dec
fwait
mov
pop
pushf
out
cmpsl
jo
mov
xor
pop
and
pushf
cmp
dec
pop
addr16
out
jne
leave
pop
and
popf
cmp
xchg
mov
lcall
adc
mov
push
ja
push
fcmovne
out
iret
jne
test
cwtl
mov
pop
outsb
sti
mov
pop
in
xor
cmpsl
outsl
mov
xchg
out
cltd
addb
xchg
pop
dec
in
test
jae
iret
idivb
add
mov
nop
add
inc
mov
pop
and
xor
into
jg
movsl
pusha
dec
jmp
imul
and
divl
add
xor
mov
cmp
pop
mov
add
sub
je
pop
adc
inc
mov
movzbl
js
dec
and
mov
xchg
mov
insb
jo
pop
pop
test
aaa
mov
popa
jl
jge
ficompl
push
cmp
mov
mov
jp
mov
mov
and
jo
inc
jae
pop
in
sahf
push
or
mov
pop
fcompl
jle
xchg
jle
mov
mov
rorl
mov
push
xchg
mov
popf
pop
fwait
repz
lcall
push
jle
pop
pop
daa
xchg
push
nop
add
or
sub
test
mov
inc
sti
jmp
arpl
es
je
lock
std
scas
adc
adc
addr16
mov
push
aad
enter
cmp
add
jge
xchg
in
ds
xchg
push
outsl
popa
mov
insb
addr16
cmp
lcall
cmc
add
and
mov
cmp
sub
ret
mov
or
pop
call
xchg
xchg
out
ja
popa
sti
cli
pop
push
ja
aad
jg
pop
xor
jl
mov
orb
and
cmp
push
adc
orl
mov
xchg
pop
popf
mov
xorl
scas
cmp
jmp
cld
jge
push
dec
hlt
frstor
ss
sub
xor
and
push
push
mov
clc
cmc
repz
ficoms
cmp
mov
stos
cmp
push
inc
icebp
xor
sahf
outsb
lds
hlt
cmp
xchg
mov
inc
hlt
repnz
sub
outsb
jbe
adc
arpl
fmull
or
out
mov
inc
mov
mov
sarb
push
jns
inc
out
pop
mov
stc
outsl
imul
xchg
loop
mov
scas
fldt
adcl
cli
insl
xor
test
xor
pop
mov
mov
jge
fnstenv
dec
pop
fnstsw
roll
mov
add
cmovbe
or
or
and
movsl
jecxz
popf
add
sti
sbb
add
or
inc
xchg
cmc
and
movsl
stos
lret
aam
mov
mov
push
jne
fwait
lret
jne
adc
ret
xchg
lcall
insl
add
in
ja
test
push
pop
cmp
jmp
lret
mov
pop
clc
xchg
nop
popf
cmp
aad
sub
clc
push
lcall
fnstsw
add
data16
fdivs
xchg
cmp
leave
fnstcw
add
ss
cwtl
pusha
push
popf
xchg
stc
lods
test
cmp
ljmp
jbe
adc
shlb
xchg
movsb
inc
out
and
lock
pusha
incl
sub
enter
jb
add
pop
inc
add
push
sbb
pop
mov
jb
clc
adc
push
sub
jg
ds
xchg
insb
and
test
jo
leave
std
lds
inc
les
clc
fcoms
dec
xor
pop
ret
jle
fistpll
sbb
xor
nop
cltd
loopne
mov
icebp
std
ret
sbb
xchg
push
mov
mov
fwait
imul
xchg
lahf
cmp
pushf
add
mov
rcll
cmp
mov
inc
hlt
xlat
xor
arpl
xchg
cmpsl
push
xchg
push
inc
leave
fildl
mov
dec
push
sub
mov
ljmp
iret
stos
iret
stc
jns
lods
adc
jnp
mov
fcomps
sahf
ror
ficompl
mov
ret
loop
das
lds
sub
cwtl
ja
xchg
push
jg
adc
push
pop
fldl
int3
lods
pop
imul
add
iret
out
std
jbe
push
test
and
and
cltd
or
xor
xchg
mov
pop
out
and
sti
popa
test
scas
test
add
insl
insb
push
xchg
xor
adc
mov
mov
cmp
push
push
jns
mov
je
sbb
ds
js
sub
andb
and
push
mov
pop
repz
add
dec
ret
xchg
repz
jmp
mov
std
dec
and
int
das
outsb
ljmp
test
push
out
shr
push
shlb
sub
outsl
sub
mov
jns
or
popf
shlb
xchg
adc
rcrl
jne
jnp
mov
mov
xchg
xlat
xor
push
xor
out
aam
sarl
and
mov
mov
dec
lock
push
push
jae
mov
dec
pop
ret
mov
call
push
das
out
loop
daa
xchg
pop
cmp
sbb
stos
inc
out
xchg
mov
xchg
arpl
sub
popa
push
xchg
test
push
aas
pop
sbb
jmp
cli
frstor
lret
clc
jge
stos
cmp
in
fidivl
das
scas
movsb
cmpsl
adc
xchg
adc
jbe
dec
mov
xor
or
into
nop
gs
mov
shlb
fidivrl
lret
cmovb
mov
sti
mov
xor
shlb
mov
push
sbb
xchg
xor
mov
xor
cmpsb
add
std
dec
mov
and
repz
clc
mov
cli
xor
in
fidivl
out
sbb
xchg
repz
pop
push
ret
xchg
push
xor
mov
and
adc
ret
mov
inc
aaa
hlt
stc
out
jge
add
or
mov
dec
sub
aam
cli
or
pop
jg
cmpsb
shrl
sahf
xchg
lods
lods
test
stos
sti
ret
rcll
mov
and
pop
shlb
xor
lea
fadds
push
lcall
je
pop
shll
xor
sbb
mov
lahf
dec
enter
xorb
jge
subb
int3
sub
ret
jbe
and
lods
xlat
fidivl
sub
mov
rclb
push
dec
sub
divl
inc
add
dec
ret
in
sub
inc
clc
stos
xor
testb
xor
mov
in
sbb
mov
xor
cli
mov
xchg
sbb
sarl
nop
loop
inc
jp
hlt
adc
frstor
pop
mov
ret
lret
lds
scas
rcll
fadd
pop
lret
fimuls
dec
stc
mov
stos
fisttpll
ljmp
mov
fst
adc
jle
add
adc
sub
stos
push
cmp
jmp
xchg
movsl
fdivrs
daa
cmc
ret
sbb
cld
xlat
sub
or
loopne
imull
sbb
daa
sub
pushw
inc
stc
xchg
test
cmp
cli
jl
mov
mov
in
stc
pop
mov
mov
mov
dec
test
stc
adcl
dec
popf
addb
push
or
pop
push
inc
mov
shll
xor
cltd
mov
xor
scas
movsl
push
mov
inc
jb
call
sbb
cltd
aam
fldt
or
sub
xchg
adc
sub
sti
ret
sub
mov
test
pop
sub
cmp
lret
mov
sub
mov
out
sbb
stc
jne
and
sbb
jp
lds
out
xlat
jno
aaa
arpl
or
adc
adc
adc
icebp
jg
in
jl
or
and
test
ret
pop
xor
rcr
cmp
sbb
mov
scas
mov
dec
jno
jnp
push
sub
pop
in
adc
pop
aam
sub
push
imul
sub
push
scas
call
xor
mov
gs
mov
ljmp
scas
cld
push
mov
popa
ds
cmp
movl
add
jae
or
scas
arpl
push
and
jo
stos
dec
ja
xor
or
mov
push
outsb
lahf
or
int
test
dec
push
dec
icebp
and
adc
push
imul
sbbb
mov
aad
add
jne
xchg
shll
call
shr
push
aam
inc
fwait
jno
repnz
out
and
dec
dec
dec
stos
mov
sbb
cmpsl
ret
shl
or
mov
nop
je
xor
mov
icebp
xor
cmc
jmp
push
ror
leave
or
sub
push
add
mov
inc
repnz
xor
xor
xchg
lea
mov
es
jns
lock
fwait
jl
xlat
mov
add
das
lcall
nop
cmpsl
arpl
adc
mov
mov
inc
std
daa
out
fs
pop
dec
jl
repnz
clc
ljmp
cmp
iret
roll
mov
and
in
push
insl
sti
aaa
adc
cmp
fistpll
sbb
jl
add
test
aad
jnp
add
or
je
mov
mov
jne
jns
add
bound
push
sub
xchg
dec
dec
fcmove
lock
jecxz
aad
sub
sbb
rep
xchg
xor
scas
daa
test
push
and
add
add
lea
jl
pop
sub
or
test
sbb
mov
jle
aam
cmp
mov
mov
inc
loop
xchg
or
fistl
sbb
or
push
cmc
push
repnz
adc
aad
iret
fwait
shr
outsb
pop
les
ret
push
int3
jo
js
push
jno
add
push
decl
jg
sbb
push
pushf
mov
popf
lods
cs
push
xchg
or
jmp
and
cmp
dec
sbb
loop
test
inc
inc
lods
mov
mov
pop
add
xchg
push
sar
pushf
jbe
divb
cmp
mov
jo
out
pop
hlt
or
pop
shr
xchg
push
sbb
ret
inc
jg
pop
test
add
clc
pop
imul
out
dec
rcl
sub
cmp
dec
jmp
mov
sarb
leave
out
hlt
cmc
inc
push
test
jmp
xchg
loop
fsubrp
fdivr
add
cmp
ficoms
mov
fwait
xchg
ja
dec
ja
xor
ja
jecxz
stos
pop
pop
cwtl
inc
mov
lds
mov
out
or
addl
ret
push
or
ds
orb
dec
call
das
push
test
fdivrs
and
in
into
pop
stos
jp
ljmp
in
and
xchg
add
test
lret
add
pop
add
and
or
push
and
outsl
add
xchg
push
mov
push
ret
aas
add
insl
ds
and
outsb
daa
dec
mov
mov
jecxz
test
mov
mov
fildl
pop
aam
inc
daa
push
jg
pop
mov
and
inc
xchg
pop
test
cmp
dec
inc
jns
mov
pop
in
pushf
inc
xor
push
shlb
dec
leave
lret
inc
xchg
data16
or
xchg
push
clc
mov
pop
clc
ja
mov
cwtl
add
mov
inc
sbbl
jns
cld
push
mov
in
mov
data16
xchg
mov
jp
mov
stos
ret
pop
addb
bsr
shll
scas
nop
pop
jp
lea
ficoml
imul
xor
and
or
mov
inc
cld
add
push
mov
cs
and
test
fisubs
in
push
das
pop
mov
mov
push
inc
pop
lcall
cmp
pop
fists
fwait
les
cltd
std
push
mov
mov
addb
jge
inc
add
scas
cmp
xlat
cvtps2pi
inc
mov
lock
repz
jo
aaa
jnp
pop
enter
lods
mov
popf
insl
mov
out
and
mov
cmovl
pop
outsb
sahf
leave
dec
aam
cli
cs
ss
or
leave
cld
imul
sbb
jb
movsl
popa
mov
inc
mov
jle
in
popf
movsb
pusha
jns
sub
pop
adc
cmp
xchg
xor
jmp
movsl
js
int
mov
ret
mov
adc
leave
and
adc
mov
ret
fisubl
int3
arpl
rolb
arpl
and
js
dec
jo
test
sub
jp
es
icebp
pop
outsl
loop
inc
push
int3
loop
test
pop
dec
subb
push
pop
int
movsb
sbb
test
inc
pop
adc
les
xor
icebp
lret
push
mov
psllq
adc
cmp
bound
pop
gs
jecxz
addb
sub
not
push
icebp
xor
xchg
lods
sub
mov
rcll
and
push
inc
scas
addr16
rcll
fdivl
cwtl
push
movsl
push
xchg
xor
shl
mov
mov
sti
bsr
jbe
mov
mov
scas
xor
es
mov
ret
repz
mov
and
gs
xlat
inc
faddp
jo
cwtl
lcall
lea
nop
sbb
pop
das
push
loop
ds
push
push
push
in
fidivl
pop
inc
jnp
sbb
or
adc
and
paddq
adc
inc
mov
sbb
cmpsl
or
mov
daa
flds
out
inc
ret
cltd
pusha
pop
popf
and
pop
jb
mov
sub
dec
dec
scas
arpl
fstpl
loope
loope
clc
fstps
jo
jae
out
xor
xor
sti
jg
icebp
jb
cmp
out
cwtl
fiaddl
sti
scas
dec
pop
in
jbe
pop
dec
xlat
dec
loopne
mov
roll
or
mov
jnp
and
pop
lds
popf
add
mov
shlb
xor
repz
inc
out
ds
mov
stos
popf
cmp
jb
mov
jg
pusha
imul
out
cmp
sub
mov
nop
je
int3
xchg
sti
jp
inc
js
ljmp
shr
dec
push
xor
call
and
xchg
sbb
mulb
adc
xor
ja
mov
mov
imul
dec
adc
adc
adc
movb
pop
mov
sahf
loop
stos
arpl
fldenv
fiaddl
cmp
xor
ret
in
xchg
mov
mov
repz
mov
mov
adc
inc
stos
inc
and
add
xchg
mov
add
sub
sub
dec
sbb
mov
aaa
cmp
cmpsb
and
in
mov
xor
cs
and
lcall
dec
adc
roll
test
inc
xor
pop
outsl
ret
sti
lcall
sti
test
out
and
xchg
aaa
add
fisttpl
aas
push
jns
iret
in
inc
fidivrs
push
jbe
stos
cmp
stos
fsubrp
mov
adc
xlat
mov
pop
fisubl
pop
or
mov
scas
insb
mov
push
lods
test
mov
sarb
pop
inc
cld
xor
jo
jg
mov
std
aad
mov
shlb
ret
fdivr
insl
xchg
jno
cmp
pop
xor
ss
call
jl
mov
and
pop
sub
push
and
mov
ljmp
add
push
cmp
lcall
pushf
push
mov
ds
hlt
test
outsb
mov
add
xchg
ret
sti
into
inc
add
jl
andb
pop
mov
mov
test
jecxz
mov
int
xchg
and
fiadds
imulb
sahf
pushf
push
push
or
or
repz
repnz
or
cmp
jae
scas
in
dec
push
jp
sub
xor
lret
jne
sub
mov
into
adc
out
push
lds
outsl
test
pop
or
pop
lods
sbb
or
js
jno
adc
sbb
add
jns
push
jns
sarl
jecxz
lods
xlat
add
test
stc
mov
in
add
popa
int
insl
ja
js
lahf
and
push
loope
insl
sahf
inc
jecxz
in
mov
aas
andl
iret
in
sahf
ljmp
scas
jno
cli
jl
mov
dec
in
lds
sahf
mov
jge
repz
call
sub
bound
mov
addr16
ret
mov
rep
push
jg
mov
mov
mov
xor
push
sub
test
out
lock
sbb
fidivl
mov
imul
jge
in
scas
pop
test
out
test
hlt
sbb
js
adc
add
inc
and
ret
outsl
inc
cmp
sahf
mov
sti
fxch
sub
sub
fists
sbb
sub
jns
mov
sbb
inc
shlb
das
ret
rcr
push
jnp
fnstcw
mov
pop
dec
add
dec
sarl
or
cmp
sub
lea
and
mov
in
xor
mov
shll
inc
frstor
int3
pop
dec
pop
jge
pop
popa
mov
pushf
cmc
call
clc
or
dec
scas
ds
mov
or
stc
push
les
and
mov
or
jo
sbb
and
sub
xor
fisubrl
inc
push
xchg
pop
outsl
in
je
mov
pushf
mov
sarb
mov
lods
insl
mov
je
stos
xchg
pavgw
adc
aad
dec
divl
sbb
popa
jb
pop
push
or
loope
pop
dec
roll
scas
inc
cmc
mov
dec
inc
or
mov
cmpsl
arpl
or
es
inc
push
mov
xchg
pop
dec
mov
jl
sbb
lods
or
rorl
add
popf
mov
aad
leave
scas
adc
out
jb
loop
in
mov
xchg
jb
aad
mov
fs
pop
lods
sub
jecxz
in
inc
mov
lahf
imul
adc
iret
sub
aad
fistpll
mov
fldenv
or
call
inc
sbb
leave
add
sahf
into
ljmp
outsl
mov
hlt
in
testb
iret
or
or
push
xchg
iret
imul
cmp
and
or
inc
cld
pop
loopne
and
xor
push
mov
aas
sub
lret
adc
xchg
sbb
inc
aas
sbb
arpl
pop
jp
cs
rclb
jbe
loopne
bound
and
jb
mov
dec
pop
in
cmp
fmuls
and
xchg
lcall
push
pushf
jle
lods
jge
add
je
stos
dec
clc
jp
mov
mov
mov
pop
jae
add
mov
inc
inc
xchg
add
xor
cmp
pop
or
inc
in
pop
push
and
shll
xchg
push
rclb
dec
gs
push
int3
lods
pop
cwtl
push
js
add
sub
add
ja
lahf
cmp
mull
pop
lods
xor
add
out
cwtl
mov
ja
loope
bound
repnz
push
sub
adc
inc
xor
jl
inc
pushf
inc
leave
mov
add
or
push
out
cmpsb
nop
and
repz
cmp
in
cmp
stc
jl
sahf
jg
fdivl
or
sbb
push
ret
xchg
subl
lock
cwtl
repz
jmp
xchg
jns
xorb
xchg
je
and
jecxz
or
xor
mov
ds
fsubr
ljmp
jbe
popa
aaa
jb
xor
inc
popa
push
xchg
cmp
bound
xlat
popf
sti
adc
mov
mov
pop
fisubrl
cwtl
roll
je
data16
fldcw
lret
jecxz
mov
sbb
les
scas
shl
jns
jmp
jmp
testb
pop
sbb
lods
cmp
into
mov
jne
jne
or
andl
xchg
fbld
xchg
test
cmp
cmp
dec
in
outsb
jmp
mov
and
push
gs
sbb
test
sahf
out
add
cli
add
xchg
push
mov
jnp
shrb
enter
and
push
js
shll
mov
movl
lods
int3
out
bound
test
dec
pop
jnp
xchg
push
push
xor
int
inc
test
mov
popa
lahf
testb
sub
pop
in
rolb
jb
jbe
lods
out
mov
cmp
xor
addb
ss
jbe
outsb
repnz
add
lods
mov
mov
xchg
lods
inc
das
mov
pop
xor
add
sahf
sarl
jae
hlt
inc
es
sbb
push
loope
push
mov
add
enter
loopne
or
adc
mov
mov
outsb
in
pop
daa
mov
adc
mov
sub
stos
pop
adc
or
pop
jns
push
movsl
jns
lods
dec
jae
push
fwait
and
clc
insb
jne
cld
lea
dec
fnsave
xor
xor
test
sbb
lret
int
ljmp
fdiv
pop
cmpl
push
adc
mov
cmp
lahf
xor
fisubrl
dec
push
iret
xchg
lock
push
xchg
sub
sbb
inc
xor
add
push
sbb
mov
mov
jae
pop
sbb
lret
mov
push
pop
inc
inc
jmp
repz
sub
repnz
dec
fidivrl
jnp
insb
mov
xchg
sbb
push
push
fs
scas
xchg
mov
out
sub
ja
dec
mov
imul
adc
es
aam
mov
add
push
cmpsl
jl
dec
daa
cmp
sahf
mov
mov
movsb
pop
cmpsl
bound
xor
pop
inc
je
sbb
popf
mov
cmp
add
stos
sbb
mull
pop
add
jns
imul
mov
in
xchg
mov
mov
idivb
adc
loopne
movsb
mov
mov
aad
mov
lcall
in
jl
jl
pop
out
push
bound
sbb
push
push
add
dec
xor
in
bnd
jge
fcmovnu
mov
dec
inc
pop
add
xorl
loopne
clc
mov
xchg
inc
fsubrl
mov
lret
sub
dec
shll
sub
inc
mov
or
outsl
and
mov
mov
lret
ja
push
push
js
daa
pop
loop
xorl
fnsave
cmp
je
lahf
nop
scas
adc
jb
jmp
or
pop
movsb
push
xchg
aas
pop
xor
sbb
mov
mov
inc
and
popa
xor
add
lret
jmp
xchg
inc
lds
aas
jb
pop
xchg
in
push
and
xor
pushf
iret
and
adc
jge
adc
pop
mov
lock
push
adc
insb
cmc
cmp
jg
mov
fstps
sbb
pop
pop
sbb
repz
fsubl
lock
mov
je
sub
shlb
in
test
insl
test
imulb
xchg
adc
repnz
dec
jge
lret
out
nop
bound
xchg
jmp
cmpsb
rol
add
sub
sub
mov
pop
add
pop
stos
add
cltd
clc
nop
int
les
fmul
cmpsl
sbb
addb
out
cmp
mov
pop
add
xor
push
lcall
sbb
push
adc
lcall
push
push
mov
sbb
add
stos
pop
imul
push
mov
mov
and
inc
xchg
or
scas
cld
das
cld
repz
jmp
dec
repz
addr16
aas
negb
popl
xlat
xchg
cld
ret
shl
pushf
dec
mov
lret
clc
cmp
imul
fxtract
in
cltd
lret
cmp
fsubrp
jle
mov
mov
test
gs
dec
jg
xor
in
daa
movsl
scas
test
bound
pop
or
mov
mov
test
or
or
leave
pop
fwait
test
fnsave
je
xchg
fnstsw
fisttps
inc
jno
xor
mov
or
mov
lds
mov
adc
jge
les
std
sahf
push
xor
xor
jne
cltd
push
cld
mov
adc
outsb
jno
pushf
adc
fsubs
rorb
cld
and
in
xchg
fs
push
sbb
int3
xchg
adc
lcall
add
push
mov
daa
notb
rcr
pop
add
mov
push
pop
xor
mov
lock
into
jle
push
lret
ljmp
add
leave
push
cltd
dec
sub
jns
aas
sub
scas
sub
lcall
inc
xchg
mov
pusha
inc
push
and
aam
xor
je
int
out
or
mov
loopne
and
mov
cmp
hlt
jo
pop
adcb
nop
xorb
add
mov
push
jecxz
mov
lds
push
rcl
sbb
mov
mov
mov
fxch
fisttps
or
outsl
insl
mov
clc
int
and
jg
out
es
push
icebp
js,pn
sbb
sarb
inc
aam
divb
shrb
jl
bound
cmp
stos
mov
adcb
pop
push
in
dec
cmp
cwtl
test
inc
mov
push
pop
lret
fs
jle
insl
loop
inc
aas
inc
dec
dec
aad
dec
jbe
lcall
lods
xor
clc
jl
fstpl
dec
sbb
cmp
jg
sub
jno
repnz
cmp
mov
cld
dec
push
sysret
inc
and
out
fistl
ficomps
jle
movsl
sub
stos
mov
jo
in
xchg
movsl
cmp
pop
xor
and
inc
push
add
or
xlat
filds
jecxz
popa
fildl
scas
ds
loope
insl
cmpsl
jl
fcmovb
xor
inc
mov
insb
lret
push
push
dec
lock
cmp
sahf
loop
add
sti
ret
lahf
mov
aam
cwtl
mov
lods
mov
ljmp
cwtl
pop
pop
mov
or
pop
pop
popa
and
in
ret
cld
vpaddb
lds
sarl
xor
mov
data16
insl
cmp
insl
fisubrs
call
pop
ret
and
jnp
adc
jno
ds
ret
or
lcall
push
mov
std
add
pop
inc
cmp
sub
sub
shlb
push
lock
dec
pusha
inc
inc
push
jnp
ss
xchg
in
pop
dec
push
pop
jp
mov
imul
jnp
cmc
mov
call
xor
xchg
leave
stos
cmp
adc
push
cmc
jnp
es
and
push
xor
insb
out
shrb
adc
cs
hlt
cwtl
jbe
mov
js
lea
gs
or
sub
add
jp
mov
jle
out
outsb
adc
out
sbb
xchg
xchg
fcomip
pop
fsubs
dec
jmp
cli
loope
dec
sbb
fimull
jmp
ja
inc
cmp
sbb
out
in
data16
sahf
es
int3
push
jne
scas
in
fsubrl
mov
lret
adcb
enter
bound
pop
test
jbe
cmp
mov
sub
push
lret
iret
dec
mov
sahf
push
xchg
aam
jb
dec
sbb
dec
cmp
pushf
notb
jne
xor
or
mov
cmpsl
push
xorl
pop
lods
sub
jmp
or
sbb
scas
les
push
mov
inc
inc
shll
mov
das
clc
add
lcall
and
ss
ljmp
testl
pop
movl
fldenv
arpl
in
xchg
or
pushl
or
dec
dec
mov
sbb
leave
or
outsb
ja
mov
cltd
and
lret
insl
dec
sbb
jecxz
mov
std
repz
leave
test
push
lahf
rcrb
repz
jg
cmc
adc
aaa
xor
popa
shl
lods
mov
and
lock
dec
mov
pop
fcompl
movsl
sbb
data16
jno
mov
sbb
inc
adc
xchg
cmp
jno
sbb
pushf
xor
fidivrl
mov
imul
sub
imul
add
mov
pop
cmp
mov
jl
scas
mov
flds
or
icebp
aad
inc
int
or
sbb
insb
adc
dec
in
lcall
insb
dec
xchg
sub
stc
push
repnz
cmp
ljmp
and
pop
icebp
popf
ja
sbb
sbb
lods
push
and
cmp
xor
arpl
cli
adcl
jle
adc
xchg
sub
jbe
sbb
jle
mov
and
div
hlt
and
test
clc
mov
faddl
gs
rclb
out
xor
mov
sbb
pusha
mov
test
pushf
xor
jb
insb
test
push
mov
xchg
adc
out
inc
xor
popl
push
or
movsl
jg
inc
iret
xchg
popa
ss
xchg
push
gs
cmpsb
jnp
xchg
mov
imul
shll
pop
inc
dec
and
mov
enter
movsb
xor
outsb
push
push
pop
loope
pop
and
sbb
and
or
dec
add
popf
fmuls
data16
push
std
lock
leave
stos
sbbb
mov
fwait
or
lahf
imul
xor
loopne
shlb
and
out
call
je
sub
int3
pop
cmp
mov
inc
add
sub
stos
jbe
aas
test
pusha
jg
mov
mov
add
insl
in
lds
mov
pop
test
cmpsl
xchg
mov
push
js
je
imul
lds
lock
push
imul
add
inc
popa
data16
lods
in
lods
push
push
xor
xor
dec
adc
lods
mov
imul
and
mov
jns
xchg
mov
and
pop
pop
inc
or
adc
sub
aaa
les
adc
test
loope
mov
or
and
arpl
adc
cmp
dec
mov
leave
leave
cmc
lret
inc
out
and
outsb
arpl
or
dec
dec
fildl
lahf
aad
push
mov
cmpsb
xchg
jno
pop
test
sub
aas
shr
pop
inc
fisttpll
je
pop
push
inc
push
test
sarl
popa
icebp
jge
jg
dec
xchg
pop
add
jns
mov
fstl
fnsave
call
js
shrl
mov
je
fadds
add
or
adcl
sub
in
mov
jb
or
xor
or
adc
xor
cmp
aam
jbe
rorl
mov
lods
sbb
cld
push
mov
test
imul
mov
div
js
xor
bound
mov
xor
jecxz
into
sub
outsl
ja
and
jmp
sti
push
xchg
cmp
addl
lods
mov
push
jo
pop
sub
dec
or
das
or
lcall
roll
add
sbb
mov
nop
cmp
scas
or
push
add
jnp
sub
es
stos
push
or
repnz
imul
jae
outsl
jbe
pusha
testl
je
lock
insb
imul
pop
lods
out
aas
push
pop
mov
leave
sub
notb
and
iret
jns
out
adcl
dec
mov
cld
test
pop
aad
jl
xor
push
pop
dec
mov
sub
jae
jmp
push
xchg
out
out
mov
xor
sahf
pop
popa
pop
xor
mov
gs
or
test
inc
mulb
and
lods
pop
stos
int
es
xchg
ret
cmpsb
fstpt
sti
jns
pop
pop
adc
dec
dec
mov
mov
int3
mov
fucomi
stos
dec
cli
in
or
ret
inc
repnz
shll
add
stc
jne
cmpsb
sub
cmp
fwait
shll
jae
sbb
push
xchg
pop
aad
mov
outsl
or
in
dec
test
dec
repnz
mov
sub
lea
scas
imul
cmpsl
mov
outsb
fs
adc
loop
mov
imul
pop
test
fmul
inc
jecxz
cmc
fadds
in
mov
pop
loopne
and
out
sbb
into
push
jns
pop
sbb
mov
gs
xchg
fcomps
pop
push
popa
clc
addr16
lods
cmp
push
jnp
mov
add
jae
popa
sbb
inc
sbb
jb
jg
mov
jg
xor
add
jp
pop
push
pushf
dec
mov
mov
ret
mov
test
xchg
add
cli
inc
jge
and
fdivl
cmpsl
or
lret
loop
call
push
test
or
pop
negl
mov
ret
cltd
jmp
in
push
xchg
sub
add
mov
je
movsl
cwtl
sub
movsb
cmp
shl
dec
cs
mov
pop
rcr
lds
movsl
dec
scas
mov
mov
push
push
inc
pop
data16
xchg
lds
pop
mov
psubsb
fs
insb
pop
jb
in
and
and
fldenv
push
push
mov
lods
test
dec
xchg
data16
inc
loop
sbb
cmpsb
mov
cmp
adc
dec
shr
ljmp
movsb
xchg
mov
lret
clc
jne
sbbl
inc
pop
loopne
pop
jmp
sarb
xor
sub
pop
imul
mov
dec
mov
jbe
lock
popa
sahf
mov
jg
rcrl
ljmp
mov
add
cld
lock
adcb
repz
mov
rorb
incb
push
mov
xchg
addb
cld
lods
inc
xchg
jb
dec
and
mov
cli
adc
jecxz
sbb
mov
ret
mov
mov
cmovne
add
cmp
cmpsb
scas
cwtl
or
dec
loopne
and
int
pop
clc
mov
sub
and
aam
insb
sub
movsb
pushf
pop
dec
loope
cmpsl
push
shrl
in
cltd
xor
or
arpl
pop
sbb
adc
sbb
pop
push
and
and
call
or
enter
dec
ja
aaa
xlat
insl
sbb
cmp
or
adc
sub
iret
xchg
ss
push
ss
movsl
push
lea
call
push
push
cwtl
cmp
cmp
rcrl
out
pop
ficomps
sbb
lret
repnz
setb
bound
rcll
mov
loope
fcompl
jns
sbb
fs
testl
pushf
int
into
popa
jmp
rcr
jb
outsb
pushw
or
push
inc
cmp
aad
leave
mov
sbb
mov
cmp
cmp
mov
adc
xchg
adc
sqrtps
pop
lret
call
sar
dec
mov
insl
adc
mov
fcompl
dec
fisubrl
inc
lcall
jp
cmp
sub
push
arpl
mov
pand
out
and
clc
mov
icebp
and
xchg
addr16
jmp
cmp
push
sub
xchg
xchg
mov
test
inc
xlat
xorb
mov
mov
mov
movsb
lea
and
and
add
push
icebp
sbb
xchg
fistpll
gs
push
pop
insb
add
or
cs
sub
out
add
mov
lds
jmp
cli
in
sbb
pop
inc
push
push
gs
icebp
fstpt
test
jle
enter
sbb
jle
stc
fimull
dec
jno
fnsave
adc
xlat
nop
cld
aas
ljmp
popa
add
imul
fldl
pop
xlat
sub
cli
or
ja
test
loop
cld
cmpsb
into
in
sub
sub
sub
hlt
or
fdiv
or
add
daa
pop
je
adc
cmp
outsl
js
pop
js
sbb
decb
lods
or
cmpl
ret
jb
bound
shl
jbe
fmul
push
sti
jno
roll
sub
out
dec
add
mov
push
xchg
dec
dec
dec
inc
pop
sahf
ret
jmp
cmpsb
lods
daa
mov
cmpsl
cli
mov
rcl
cmpsb
stc
xchg
lret
dec
loop
add
and
lahf
xchg
push
xor
rcrl
sti
jp
cmp
push
inc
and
xchg
add
inc
push
cmp
push
data16
sub
pop
xlat
xor
add
rorl
and
add
mov
incl
into
xor
sub
inc
pop
cmpsl
sbb
mov
add
add
in
je
add
fistl
mov
fiaddl
jae
fbstp
sbbl
inc
inc
fnsave
jne
lcall
and
sub
lcall
cmp
jl
add
cld
adc
inc
popa
les
call
pop
inc
or
popa
xorb
push
push
enter
iret
inc
xchg
sbb
scas
cwtl
fs
mull
test
mov
xor
inc
cmp
inc
cmpl
xchg
lods
cmc
out
outsl
and
bound
outsb
test
pop
ret
ret
cmpsb
repnz
adcl
mov
push
mov
ret
add
jbe,pt
sbb
ds
pusha
fs
cmp
and
cmp
jo
cmpsb
cld
sbb
lods
jbe
jge
pop
lahf
inc
push
push
popaw
dec
out
sbb
cmc
fsub
xchg
pop
cmp
jg
out
loope
jl
inc
and
xor
pop
ljmp
or
int
xchg
or
add
mov
jge
push
jge
pop
lock
push
daa
or
pop
call
xor
inc
ret
popa
add
in
mov
xor
cld
in
stos
sti
push
pop
inc
dec
mov
test
outsl
lds
inc
jne
mov
adc
lods
fidivrl
rcrl
xor
sbb
lock
lret
out
jge
inc
mov
pop
cmpsb
imul
dec
daa
dec
sub
adc
daa
sahf
push
xor
xchg
pop
mov
jns
add
cmpsb
xchg
sti
fs
in
outsb
or
add
add
push
add
in
mov
dec
xor
fs
xchg
lret
aam
jmp
roll
cmpsl
push
inc
inc
push
pop
pop
jnp
xor
pushl
mov
push
mov
mov
xchg
mov
rcrb
mov
xchg
mov
sbb
int
xor
push
mov
cmc
stos
push
pop
insb
push
int3
sti
sar
jae
add
mov
cmp
in
rclb
je
or
add
dec
jl
adc
xor
mov
sti
add
add
in
rorl
decb
xchg
imul
jb
and
xchg
add
in
push
sbb
xor
fcompl
lahf
mov
ja
testb
push
sub
push
lds
or
xchg
insl
into
and
fildl
dec
in
or
iret
adc
inc
cmp
jnp
ds
lea
out
fstl
lds
pusha
aas
repz
mov
or
sub
out
dec
xor
jne
or
pop
add
leave
mov
mov
ror
xchg
ret
adc
cli
movsl
adc
cmp
jb
popa
nop
and
aaa
mov
push
movsb
mov
lret
dec
in
jl
push
jnp
xor
and
jb
leave
sbb
out
call
loopne
sub
rorl
sbb
xlat
loopne
xchg
cmp
and
push
sbb
adc
scas
xchg
jnp
cmp
add
xchg
add
fs
out
add
mov
inc
inc
loope
add
loop
xchg
pop
push
cld
cwtl
int
pop
js
test
int
sbb
dec
xor
not
jecxz
cmp
push
out
push
pop
imul
cmp
xor
xor
dec
fcoml
mov
into
xlat
or
sahf
dec
push
adc
pop
dec
fcompl
mov
cwtl
popf
sub
jno
mov
mov
int
repnz
sub
fidivrl
repz
enter
mov
xor
cmpsb
inc
repz
call
push
or
pop
jl
rcrl
xchg
out
mov
xor
test
add
jle
adc
in
adc
push
xchg
inc
jmp
or
jnp
dec
aas
push
int3
sub
push
push
dec
std
sbbb
int3
test
fbstp
add
jg
cmp
sarb
ficoml
fs
cmpl
stc
loope
xchg
das
cwtl
out
sbb
xchg
lock
sti
dec
out
push
mov
lcall
in
sbb
mov
stos
push
mov
jmp
popa
cwtl
or
sub
sub
fwait
aam
pop
jnp
int3
mov
inc
pop
inc
stos
mov
aam
test
in
jl
jecxz
mov
xchg
imul
iret
call
mov
lahf
shl
push
iret
stc
lods
cmp
pop
int3
xchg
pop
fwait
icebp
sub
adc
mov
dec
jbe
call
pop
mov
pop
or
out
sub
ret
jle
push
stc
jbe
imul
inc
fstpl
add
pop
lock
aas
mov
cli
fldcw
aad
rcll
mov
add
jge
inc
jnp
push
dec
add
stos
bound
mov
ret
nop
mov
adc
or
repz
inc
pop
cwtl
pop
mov
cmp
fwait
and
xchg
daa
add
fistpl
inc
push
pop
sub
in
pmaxub
out
repnz
mov
lds
outsl
loop
movswl
inc
push
mov
jne
test
enter
leave
pop
xor
insl
cltd
inc
loope
sti
ret
popa
pop
pop
cwtl
test
lahf
aam
sub
add
sub
pusha
dec
shrb
in
or
pop
cwtl
cmc
jns
mov
icebp
rclb
ret
mov
call
adc
xor
scas
mov
xchg
mov
int
jle
push
adc
fcompl
cmp
or
add
xchg
or
pusha
dec
sub
out
and
scas
movsb
mov
inc
lcall
adc
insl
loopne
pop
in
shl
in
imul
outsb
adc
mov
jl
cli
inc
test
iret
push
xchg
out
inc
fwait
rorb
js
cmp
xor
bound
mov
dec
jmp
arpl
mov
jl
aas
fcmovne
xchg
add
loopne
adc
or
cmp
inc
pop
cmc
mov
mov
push
pop
cmp
fucom
enter
imul
addr16
adc
pop
cli
stc
mov
add
adc
mov
addl
xorb
rcr
mov
and
aad
imul
ror
leave
in
wbinvd
addr16
adc
adc
adc
pop
or
push
movsl
out
jle
dec
out
adc
lret
push
xor
add
shrl
bound
shl
jmp
and
push
jne
jo
cmpsl
push
pop
jbe
dec
in
stos
test
mov
outsl
and
or
adcb
dec
pop
push
add
aam
daa
xor
push
add
fistps
call
cmp
pop
or
pop
mov
out
insb
lds
push
dec
and
ss
adc
pop
push
sub
mov
xchg
dec
jge
es
dec
fs
xor
std
std
addb
in
jne
pop
pusha
leave
cmp
mov
sbb
orl
adc
in
push
je
sbb
imul
imulb
repz
test
loope
pusha
pusha
scas
testb
orb
clc
xchg
jns
push
mov
nop
jmp
loop
lret
adc
sbb
or
sysret
iret
cld
mov
xor
mov
sub
cmp
sub
jmp
cmpsb
push
in
xchg
arpl
or
inc
inc
lret
xchg
cmpsl
or
cmp
jne
addr16
aaa
sti
xchg
and
push
ljmp
xchg
data16
push
adc
lahf
cmp
dec
inc
test
mov
mov
stos
adc
lods
daa
mov
lods
xchg
dec
add
or
mov
pop
pop
sahf
mov
sbb
jno
mov
in
outsb
in
popa
cmp
push
out
push
or
inc
inc
push
xchg
les
add
jecxz
test
mov
push
mov
xchg
fistl
jb
data16
mulb
popf
cs
dec
in
movsb
pop
subb
cmp
add
pusha
fdivs
inc
cmpsb
push
pop
std
mov
mov
pusha
mov
decl
mov
scas
repnz
add
cwtl
lds
mov
ja
sahf
ficompl
and
and
xchg
cmpsl
xchg
mov
out
pop
pusha
inc
mov
sub
dec
or
and
insl
jbe
in
sub
add
nop
cs
add
and
cs
cltd
decw
jmp
mov
lahf
pushf
iret
hlt
outsl
adc
insl
mov
in
cmc
push
xor
xchg
imul
pop
std
cmp
rolb
dec
pushf
je
xor
mov
test
mov
pop
mov
loop
dec
fimull
mov
lds
fstl
out
jl
push
push
cmp
lahf
sbb
ja
repnz
andl
repz
sub
xor
fdivs
add
dec
shll
mov
pop
jg
push
out
popf
pop
push
xlat
mov
mov
xchg
fildl
add
mov
cli
push
jge
dec
imul
and
mov
add
call
out
and
jbe
dec
xchg
push
or
mov
sub
dec
mov
xchg
rcll
repnz
jp
jnp
sub
pop
jmp
mov
mov
pop
inc
jne
push
pusha
jno
fisubrs
addr16
cmc
jle
js
bnd
loopne
inc
in
mov
or
mov
ret
call
out
jge
out
push
pop
pop
roll
cmp
test
fisubrl
mov
shlb
cmp
in
cmp
fstps
shl
decb
and
in
stos
test
inc
in
inc
setg
icebp
pop
mov
lcall
pop
and
add
sti
je
imull
xlat
mov
mov
aad
rorb
jo
sbb
cmp
movl
sub
sbb
push
movsl
or
pusha
inc
adc
in
push
in
xchg
jne
push
sbb
cld
jne
ljmp
push
xchg
aas
xor
xor
push
stos
in
xchg
inc
push
in
in
mov
shlb
lcall
and
fwait
rclb
push
hlt
hlt
repnz
push
inc
lods
sub
mov
call
xchg
shrb
loope
out
add
rcll
add
push
data16
pop
adc
shll
lock
xchg
rcrb
inc
add
das
or
push
nop
xor
pusha
rcr
into
int3
dec
roll
push
xchg
xor
sbb
aaa
sub
xlat
sub
or
pusha
mov
xchg
adc
dec
mov
add
lock
leave
lock
pushf
les
xchg
jae
push
inc
pop
jmp
call
adc
sub
je
adc
fisubrs
bswap
adc
outsb
pop
cmp
repz
sbb
imul
push
cs
dec
push
into
test
repnz
cmp
dec
bound
outsl
cld
mov
mov
mov
mov
mov
in
xlat
xlat
jb
xor
mov
imull
fs
es
std
mov
and
or
pop
in
inc
dec
or
xchg
es
mov
es
rorl
adc
aam
repnz
mull
mov
out
mov
xchg
push
inc
mov
sahf
lret
or
add
xchg
outsl
mov
push
bound
xor
dec
fistpl
push
insb
sti
sahf
inc
jno
add
sbb
or
jno
mov
or
push
fst
shlb
scas
sbb
add
arpl
jns
mov
gs
mov
or
adc
rcrb
add
das
sub
inc
sub
fwait
jge
insb
jmp
inc
cltd
cltd
inc
adc
mov
fs
sub
ss
adc
add
sub
ret
push
or
mov
out
jne
add
out
adc
inc
cld
cmpsl
pop
push
ds
loope
jo
dec
stc
inc
push
pop
call
pop
xlat
hlt
dec
fstpt
loopne
push
pop
dec
aam
fstp
xor
test
sbb
jbe
leave
jmp
dec
shrl
stos
pushf
out
inc
cmp
repz
lods
pop
cltd
sar
sbb
imul
sub
pop
xor
shr
mov
sub
dec
sahf
lcall
push
fcoml
rol
lahf
xchg
xchg
sub
push
xchg
add
or
jl
packsswb
push
inc
xor
mov
scas
js
icebp
pusha
inc
add
pop
mov
insb
adc
pop
scas
decb
nop
mov
fadd
outsl
nop
inc
mov
popa
mov
lret
aam
mov
push
jl
in
cmp
adc
adc
push
out
mov
jb
and
loop
sub
fcmovbe
dec
push
push
fdivp
stos
loop
jns
ja
test
outsb
and
adc
and
dec
pop
mov
and
xchg
ljmp
push
xor
pop
push
aas
addl
call
sbb
roll
iret
sbb
mov
cs
notl
out
loop
outsl
jo
dec
fistpll
stc
jb
sti
call
and
xchg
jecxz
mov
imul
aaa
mov
or
jb
adc
lcall
cltd
lods
popf
xchg
flds
add
mov
rclb
jnp
cmpsl
sbb
popf
fidivs
dec
add
loope
inc
lods
je
lcall
insl
out
xor
xlat
inc
adc
into
repnz
cmp
jge
dec
mov
inc
les
sub
and
pop
and
test
cli
stos
mov
or
sbb
aas
aas
jmp
stc
clc
adc
dec
mov
es
or
ja
sbb
repz
cmp
int3
pop
loope
in
mov
or
movsl
test
jnp
lcall
mov
dec
fwait
cmp
adc
xchg
pop
addr16
dec
xor
hlt
adc
xor
xchg
push
scas
xchg
sub
pop
jge
idivl
adc
push
cltd
inc
ljmp
inc
or
fcomi
call
jo
sbb
lret
push
call
dec
inc
jo
mov
adc
or
dec
mov
scas
leave
in
dec
jns
sbb
lods
sub
cmp
leave
push
dec
dec
jecxz
push
loope
addb
push
fdivrl
roll
aaa
adc
pop
loope
scas
add
cwtl
fistps
xor
sub
lcall
out
insl
cli
test
and
repnz
int
call
ss
out
fxch
or
xor
lds
add
outsb
mov
dec
fsubrs
nop
cli
imul
dec
lea
fidivl
loope
fiaddl
addb
popa
jbe
sbb
mov
mov
push
jle
jae
jg
bound
lods
push
add
jne
push
or
pop
outsb
mov
dec
dec
pop
inc
into
lock
outsl
neg
pop
mov
xor
sti
fs
xor
stc
in
pop
int
int3
stos
xchg
daa
in
adc
fnstcw
fiaddl
test
es
outsb
repz
mov
frstor
cli
lods
outsl
scas
mov
add
xlat
pushf
xchg
hlt
enter
push
lock
stc
inc
aas
ret
outsb
clc
sub
sbb
in
lcall
cmp
testl
imul
cmpsl
add
jns
and
ret
fistps
imul
fcmovnbe
jecxz
mov
cli
insb
sub
jbe
or
mov
adc
aam
push
outsb
out
xchg
xor
in
jbe
clc
ja
jno
popf
push
dec
cmp
pop
iret
xor
popf
mov
testl
aam
adc
inc
out
push
adc
es
fdivrs
mov
lods
fcomps
adc
mov
test
repnz
cmc
js
cmpsl
enter
andb
or
dec
and
mov
insb
jne
lret
mov
or
mov
sbb
jge
jp
test
adc
cmpsl
mov
rolb
sbb
xchg
stos
addl
fsubrs
nop
testb
push
inc
xchg
push
xor
push
ret
jecxz
ss
push
xor
mov
ds
loopne
sub
out
xchg
mov
mov
push
mov
mov
lcall
enter
push
sub
lret
into
adc
into
push
scas
scas
push
dec
aas
adc
leave
lcall
sub
adc
inc
loopne
sub
sub
dec
movsl
xchg
xlat
xchg
push
test
push
jo
push
ror
aad
sbb
jmp
dec
nop
mulb
daa
pop
aas
insl
sbb
and
mov
aam
repz
stos
or
sti
lea
jl
cld
call
xor
flds
mov
and
dec
xorb
lock
dec
stos
nop
roll
lahf
std
mov
pop
or
fisubrl
cmp
gs
sub
dec
aam
sbb
shrb
sub
xor
push
pusha
mov
fcoms
sub
pop
sub
add
bound
xchg
mov
and
sti
push
cld
push
aad
stc
mov
loop
cmp
and
popf
xor
sti
sbb
jae
xchg
sub
inc
jge
aam
mov
mov
mov
lock
iret
xlat
adc
dec
out
mov
sub
xor
jne
and
shl
mov
mov
cmc
xor
cwtl
pop
lahf
cli
pop
cmc
out
xchg
insl
ds
jle
scas
vpcmpeqd
test
mov
lock
xor
mov
inc
mov
int3
sarb
xchg
testb
cmp
adc
dec
adcl
cs
addr16
bound
jbe
outsl
add
mov
sbb
mov
mov
jns
push
add
ror
idivl
loop
inc
ret
leave
out
xchg
movsl
and
hlt
hlt
test
test
dec
adc
into
inc
push
loope
and
jecxz
jne
jnp
push
push
lcall
cmp
sbb
loope
call
pop
sub
in
loop
arpl
jne
std
inc
aad
fsubl
sub
sarb
cmpsl
aas
add
jge
out
fs
xor
js
sahf
cltd
xchg
fistpll
orb
inc
fists
jnp
push
or
and
mov
out
or
lret
or
leave
xor
out
mov
inc
pop
mov
adc
scas
sbb
or
sarb
je
test
or
scas
int3
filds
frstor
not
dec
je
pusha
jge
jns
cmpsl
pop
pop
sub
jb
shlb
adc
mov
inc
shlb
mov
push
cmpsb
aad
lds
clc
adc
and
cmp
add
sub
sub
mov
fcompl
outsb
mov
movsb
inc
mov
mov
push
int3
cmpsb
loope
mov
sub
xchg
js
loop
and
dec
mov
les
jns
outsl
enter
hlt
into
mov
adc
cld
mov
enter
movsb
dec
mov
out
repnz
in
inc
rorb
into
sti
out
cld
inc
jns
inc
inc
cwtl
ss
sub
cld
das
stos
push
cmp
jbe
adc
adc
mov
jp
xor
mov
imul
cmpsb
je
jle
or
pop
cld
and
pusha
jecxz
repz
imul
mov
fmull
pop
ja
or
xchg
cmp
mov
imul
cmp
push
add
subl
je
sbb
jno
mov
pop
outsl
pop
rcrb
mov
dec
cmp
popf
xchg
add
add
filds
and
out
mov
popf
mov
dec
loopne
add
fwait
jae
ss
aam
mov
ljmp
mov
fdivrl
lret
adc
leave
jnp
incl
subl
push
mov
pop
stos
mov
test
addb
fucomp
out
repz
das
push
dec
in
int
cmpb
pushf
mov
or
mov
out
jbe
sbb
mov
push
in
nop
insb
mov
and
rolb
scas
lea
stc
in
stos
insb
outsb
xchg
and
fdivs
lods
sub
adc
dec
pop
in
js
push
xor
cwtl
jmp
fistl
inc
xchg
xchg
stc
push
jl
aad
sub
pop
pop
fisubs
imul
iret
lock
mov
mov
cmc
sti
jp
mov
scas
or
dec
call
stos
int3
lods
xchg
pop
test
mov
add
stc
ja
jno
popf
test
mov
daa
mov
fdiv
xor
mov
movl
sarl
pop
pop
adc
rcrb
and
xchg
and
add
imul
scas
jp
lods
adc
and
loop
adc
push
or
imul
push
inc
test
js
outsb
shl
mov
cltd
mov
andb
mov
fstps
subl
fmul
cwtl
and
lcall
cwtl
icebp
std
rorb
hlt
or
adc
rclb
andb
sub
sub
lcall
pushf
mov
js
rolb
xchg
mov
xor
ret
mov
and
push
jns
pop
cmpsl
sbb
pop
scas
in
aaa
cs
jp
pop
test
mov
sub
outsl
int3
test
mov
push
lods
inc
loop
movl
and
push
in
sbb
in
pop
mov
jbe
out
push
lods
popa
jb
jl
mov
out
mov
gs
jecxz
jnp
rclb
loope
mov
and
xor
push
push
ja
pop
push
add
loopne
test
mov
repnz
push
mov
inc
pop
sub
hlt
cwtl
mov
das
xlat
pop
mov
and
mov
incb
sub
jp
adc
push
in
sbbl
sub
pop
xchg
sbb
push
outsb
loop
mov
ja
pop
sub
sahf
test
leave
dec
addr16
mov
aad
in
mov
add
dec
out
jle
leave
call
mov
fistps
lea
mov
cwtl
push
mov
outsl
mov
adc
adc
xchg
call
jo
add
inc
orb
gs
fwait
scas
rcll
pop
ret
fs
cmp
mov
lret
push
sti
xchg
pop
sub
xor
jne
or
mov
pop
inc
lret
pop
ja
dec
pushf
fmul
sub
fidivs
packssdw
xor
adcl
test
jecxz
inc
dec
std
xchg
pushf
out
pop
xchg
inc
and
and
mov
in
mov
mov
sub
leave
lods
into
inc
aas
inc
fistpl
lea
xchg
sbb
in
fsts
cli
rclb
mov
clc
adc
test
mov
mov
and
mov
adc
popa
or
mov
push
stos
lods
jo
mov
dec
jno
push
sub
sbb
sbb
mov
mov
outsb
jb
daa
shrl
jnp
fst
jecxz
iret
and
xchg
movl
test
sub
add
int
sub
jns
inc
loopne
shlb
in
cmc
pop
insb
je
mov
mov
mov
decb
dec
adc
xor
je
cmpsb
out
shrl
mov
mov
mov
inc
jp
push
js
adc
sti
push
inc
testl
sub
outsb
fbld
mov
inc
fucom
jo
xchg
push
dec
arpl
push
dec
arpl
test
imul
push
push
rolb
fistps
xchg
cltd
adc
sar
cmpsb
sbb
pop
inc
insl
lea
cmc
cwtl
xlat
add
mov
subl
aaa
loopne
adc
or
jne
fnstsw
out
lea
cmp
inc
sub
sbb
jg
pop
lret
xchg
pusha
pop
mov
jno
mov
popa
scas
les
inc
and
into
mov
adc
fdivl
push
ljmp
daa
jbe
repz
leave
and
mov
cmpsl
stos
sub
dec
mov
test
add
sub
fcomp
daa
mov
mov
scas
imul
adc
lods
xor
lock
xlat
sbb
jp
sub
movsl
jg
jge
aad
fidivs
idiv
hlt
push
inc
addr16
scas
pop
mov
popa
xchg
cmp
popa
mov
pop
adc
push
arpl
dec
xchg
je
mov
sarl
cwtl
mov
lods
pop
xchg
inc
decb
sbb
aas
stos
push
std
push
jnp
add
testb
or
dec
and
inc
bound
dec
loope
mov
mov
lret
cmp
outsl
in
clc
sahf
sub
lods
leave
cwtl
out
mov
sarb
fiaddl
sahf
xchg
jno
sti
pop
imul
sub
jl
insb
fimull
jecxz
ret
mov
ret
ficompl
mulb
or
loopne
sub
std
and
xchg
jne
sbb
lcall
push
jecxz
mov
es
inc
jmp
adc
insl
adc
not
hlt
sub
out
jno
xchg
xchg
jno
imul
pop
aas
cmp
sub
scas
xchg
push
push
js
in
inc
shrl
xchg
mov
jl
xchg
adc
dec
sahf
jns
imul
shlb
mov
enter
jns
xlat
and
lret
repz
outsl
or
sub
xor
cltd
je
movsb
mov
adc
es
iret
mov
test
xchg
daa
rolb
inc
mov
mov
fucom
mov
stc
jmp
xchg
lock
jo
enter
mov
nop
les
or
imul
mov
push
dec
add
ret
stc
mov
mov
daa
enter
add
fdivs
std
mov
inc
out
push
pop
mov
and
addr16
lods
subl
dec
dec
cli
lcall
add
addr16
cwtl
in
sbb
loope
scas
jns
push
mov
pop
enter
mov
mov
mov
mov
sub
test
hlt
add
arpl
push
adc
pop
mov
inc
scas
jge
sahf
mov
movsb
lods
jg
cmp
adc
sbb
xchg
enter
daa
jmp
inc
and
xchg
popf
ret
jae
je
sbbb
aam
out
loopne
ret
pop
fcmovbe
loope
out
xchg
xchg
lea
popf
loopne
aaa
addr16
loop
sbb
xchg
mov
out
push
mov
leave
pop
orb
test
scas
xchg
mov
daa
cmp
xchg
stc
cmpl
add
push
fcmovb
sarb
call
dec
pop
outsb
test
cmpsl
jo
insl
mov
fwait
and
faddl
test
vcmpss
sti
popf
sbb
test
push
in
cltd
xchg
add
test
sbb
and
stos
shll
sti
sahf
mov
test
sub
enter
rcrb
fwait
cmp
fiaddl
js
and
xchg
sbb
roll
mov
jmp
adc
pop
lds
ficompl
sahf
es
push
push
push
mov
lahf
cmp
data16
jp
int
adc
shll
lds
hlt
insl
jle
stos
lods
dec
xchg
aaa
les
popf
roll
xchg
in
fcom
mov
movsl
sbb
out
push
sbb
into
test
sub
loopne
xor
sti
jmp
xchg
or
push
lcall
adc
push
jbe
xchg
jle
mov
mov
add
shll
subl
pop
or
mov
mov
lods
lods
pushf
lods
jg
sub
or
mov
cmpsl
fisubrl
jo
repz
sbb
mov
push
gs
push
push
inc
cmp
icebp
pop
fld
pop
dec
mov
or
int
dec
cmp
cld
mov
add
mov
test
mov
adc
cmpl
push
scas
xchg
push
cwtl
loop
lods
out
pop
loopne
push
js
movsb
sub
mov
mov
insb
int
or
and
and
popf
pushf
mov
mov
xchg
mov
sbb
fldenv
mov
mov
sbb
aas
ret
jmp
int
xchg
or
sbb
mov
inc
and
jbe
das
mov
or
bound
add
das
sbb
pop
and
mov
nop
dec
pop
fldcw
inc
fmuls
push
jns
jbe
imul
sbb
cmp
push
call
mov
fucomip
and
lock
mov
je
cltd
pop
xlat
mov
cmp
cmc
into
cmpsb
iret
mov
adc
dec
add
jnp
lret
cmp
mov
inc
mov
jno
mov
add
cmpsl
push
xchg
cwtl
pop
mov
inc
inc
push
mov
and
inc
inc
test
addl
pop
outsl
iret
test
into
je
jmp
sub
jb
sbb
mov
dec
fsubl
mov
add
out
fmuls
out
push
outsb
pushf
xor
cltd
jne
insl
pop
cmp
clc
dec
out
jg
imul
xchg
pop
cmpsb
enter
push
sbb
add
icebp
pop
das
popf
jg
sbb
jmp
dec
dec
mov
xor
mov
stos
fwait
push
mov
outsl
adc
sub
stos
cmp
fsubs
pop
imul
ljmp
clc
daa
cmp
mov
lea
or
in
bound
inc
test
push
lret
jo
inc
fld
cs
std
fnstcw
out
imul
add
pushf
pop
inc
outsb
fwait
xchg
ret
stos
fcmovnbe
test
rorl
adc
lods
mov
or
jns
push
out
mov
cmp
stos
cli
sub
fs
cmp
pop
arpl
fwait
scas
scas
pop
clc
sub
jnp
and
xchg
jb
jbe
jne
jae
pushf
outsl
sbb
mov
jp
push
jbe
jns
lret
add
inc
lea
lds
or
xor
push
push
jge
pop
or
jo
jae
or
jno
es
fs
fmuls
fwait
xor
or
mov
and
push
bound
xchg
adc
xchg
jle,pn
and
dec
jge
cmp
popa
enter
insl
sbb
mov
and
xor
lea
jl
ret
sbb
xor
movsb
mov
jge
or
or
jae
jl
repz
loope
sbb
jmp
jmp
xor
mov
mov
fwait
jge
cltd
mov
std
test
xchg
cmp
in
add
loopne
cs
lods
ja
push
push
mov
push
dec
call
jp
pusha
fcmovne
inc
xorl
xor
jecxz
insl
lds
test
jle
fs
sub
xor
push
or
movsl
fisttpl
mov
scas
cmpsb
andb
xchg
test
jae
insb
mov
fcmovb
inc
push
dec
cmpsb
adc
sub
ss
add
int3
lock
dec
or
mov
mov
loop
mov
std
sbb
jmp
xor
scas
loopne
fsubr
sub
push
out
lods
mov
mov
cld
addr16
rorl
or
pop
mov
sub
sub
cmc
mov
mov
inc
dec
mov
mov
imul
cs
jne
addr16
adc
js
stos
push
mov
cwtl
cmpl
or
and
pop
aam
or
clc
fcmovnu
lret
ja
mov
mov
adc
leave
loop
xchg
nop
fsubrl
lahf
int3
out
xchg
int
gs
cmp
loopne
in
mov
mov
stos
sub
pop
subl
sahf
ret
and
ret
push
fbld
add
sbb
out
push
daa
outsb
xorb
xor
insb
jg
add
mov
cld
or
mov
adc
icebp
mov
stos
imul
sub
movsb
pop
repnz
mov
loop
mov
mov
fxch
ds
or
mov
jo
mov
pop
xchg
out
clts
add
fwait
cmp
mov
or
adc
nop
int
fimull
js
ffree
stos
lret
mov
push
enter
movsb
mov
push
popf
das
fistpl
pop
iret
sti
lock
push
inc
mov
xchg
sbb
sbb
xor
cld
out
cmp
mov
push
and
xlat
sbb
dec
mov
or
xchg
dec
js
mov
xor
aam
shlb
repz
push
mov
lds
sbb
dec
cwtl
add
and
add
mov
mov
fadds
add
mov
lea
fwait
mov
dec
xchg
ljmp
mov
mov
push
push
xchg
pop
push
xchg
xor
mov
fucomp
xchg
in
aaa
in
idiv
bound
or
and
aas
jmp
mov
out
mov
inc
dec
dec
jg
in
out
cmpsb
lahf
mov
sarb
bound
push
add
cmp
pop
repz
mov
sub
pop
roll
pop
inc
aam
popl
adc
jbe
je
push
jg
push
or
push
fists
rclb
std
daa
pop
add
mov
mov
inc
pop
sti
subb
and
and
movsb
mov
jmp
cmpsb
mov
xchg
out
das
lods
cs
sbb
scas
push
movsl
ds
fs
inc
outsb
cmpsb
push
cmp
sahf
adc
jecxz
jae
push
cmc
or
andl
add
xor
inc
adc
and
mov
imul
mov
xchg
or
fildll
mov
lea
sub
jecxz
fldl
push
cmp
inc
dec
js
push
adc
std
jge
push
jmp
fcmovb
mov
call
push
jo
mov
sti
xor
push
inc
cmp
push
repz
cmp
mov
add
xchg
inc
cmp
sbb
cmp
out
insb
push
inc
pop
cmp
adc
fisubrl
push
pushl
inc
daa
insl
sbb
je
adc
fsts
mov
imul
jl
fstps
mov
scas
mov
ja
int3
xchg
jnp
movsl
sub
lret
dec
cld
mov
rol
push
in
mov
stc
lret
fcompl
sub
cli
ljmp
leave
xor
lock
inc
notl
dec
ret
cmpsb
jmp
loop
push
mov
dec
ja
or
pop
mov
add
dec
roll
lock
adc
jmp
popa
pop
jmp
sti
push
js
int
sub
mov
dec
call
jae
hlt
adc
int3
je
lds
clc
jl
jns
dec
and
sarb
pop
mov
add
sbb
sbbl
in
andl
xchg
xchg
adc
xchg
or
inc
mov
into
iret
popf
lds
xchg
jnp
sub
into
decb
and
mov
das
inc
adc
js
fidivs
xor
mov
arpl
adc
xchg
sub
imul
mov
adc
roll
pop
mov
pop
imul
add
enter
xor
sbb
pop
adc
cmp
push
daa
data16
ret
cmp
lahf
xchg
leave
decb
sub
lcall
sbb
and
popa
or
mov
ret
jecxz
pop
sub
je
rcrb
cmp
lods
mov
xor
and
outsb
loope
lock
xchg
mov
outsl
test
adc
clc
nop
gs
call
icebp
dec
jb
mov
xchg
shrb
pop
sbb
dec
out
pop
xor
mov
in
sbb
mov
xor
fwait
cwtl
ljmp
or
and
xor
fcomps
shrl
jo
jle
xor
mov
cld
sub
shlb
cmpsb
jne
xchg
stos
jne
dec
sub
push
jge
xor
ljmp
mov
shlb
je
mov
stc
mov
sbb
lret
cmp
jb
fsubrp
ret
in
or
add
outsl
sub
aas
dec
xchg
cmp
sbb
inc
push
out
mov
push
das
lret
pop
cmp
xorl
lahf
mov
inc
xchg
or
in
es
insb
mov
in
imul
add
out
outsb
jae
fdivs
pushf
shrb
jae
leave
sbb
aaa
scas
mov
mov
movsl
adc
mov
test
sub
xor
add
inc
outsb
daa
arpl
jne
xor
or
mov
cltd
push
jge
add
sbbb
mov
xor
jge
cmp
and
adc
outsl
fisubs
adc
push
jns
xchg
and
xor
lods
roll
jp
jmp
or
stc
int
arpl
pusha
cli
lds
push
filds
and
ds
jp
leave
clc
or
data16
mov
into
xchg
cmp
dec
add
popa
je
lds
lret
mov
repnz
inc
jecxz
bound
idivl
filds
push
xorl
fdivs
inc
test
fsubs
std
lds
adc
lcall
or
cmpb
ret
sbb
std
std
je
xchg
call
cs
push
clc
dec
push
vmovddup
flds
ja
jnp
pushl
adc
cmp
fnsave
inc
je
cmpsl
xor
test
ficomps
movl
lahf
jmp
sti
leave
ret
inc
cltd
add
in
mov
adc
mov
pop
or
mov
stc
sbb
test
xor
mov
mov
sub
fcomps
inc
adc
add
push
xlat
push
pop
leave
jo
mov
xchg
outsl
add
lahf
lahf
mov
jp
sub
fwait
or
jb
lock
mov
loope
das
in
std
out
adc
repnz
testb
nop
jb
jbe
and
dec
ret
dec
insl
mov
lds
xchg
fstp
xor
in
movsb
scas
add
clc
popa
push
pop
cld
fwait
and
push
or
sub
divl
ss
cld
js
mov
add
aas
xchg
jp
xor
in
test
sbb
adc
jo
cmp
test
push
ljmp
es
push
fmull
xor
cmpsl
pop
push
in
mov
jo,pn
jbe
out
sbb
jl
fistps
movsl
lahf
je
decl
adc
cmp
xchg
test
jnp
mov
out
stos
sbbl
and
lock
pushf
cmp
xchg
out
pushf
in
cwtl
lds
addr16
adc
mov
jno
shlb
iret
daa
insl
in
ret
sbb
notl
rcrl
xchg
xchg
push
lahf
icebp
push
mov
add
outsl
inc
adcb
in
jmp
pop
and
cli
adc
out
jo
xchg
jl
adc
lret
jae
fwait
pop
dec
sub
or
fwait
out
cmp
xchg
dec
add
xor
insb
int
jge
push
lret
pop
mov
loopne
pop
inc
ja
or
mov
dec
stos
aas
xchg
cmp
popf
jmp
cltd
rcl
adc
push
out
mov
jo
jbe
aaa
dec
inc
sub
or
aas
inc
cwtl
cmpsb
int3
movsl
sbb
fsub
aad
jecxz
ja
stos
out
push
std
test
sub
sbbl
and
repz
dec
jl
pop
add
fstl
sub
shlb
add
sahf
pusha
push
or
mov
mov
adc
mov
fstl
mov
pusha
jg
ret
int3
cmpsl
cmp
xchg
aas
and
cli
ja
aas
sbb
push
or
bound
mov
and
imul
add
in
dec
add
dec
cs
aaa
adc
stos
ss
pop
cwtl
sbb
xchg
adc
test
rclb
aam
icebp
call
add
ljmp
mov
mov
repnz
sbb
stc
xor
jle
fistpl
push
lods
sub
mov
mov
dec
stc
aad
jnp
cli
jnp
jge
pop
add
out
dec
and
push
pusha
out
dec
and
js
dec
push
es
pop
iret
cmp
adc
aas
imul
jmp
hlt
repz
fdivrp
into
aad
mov
xchg
outsl
cmp
std
mov
lret
das
inc
test
inc
fstpl
test
lods
lock
xor
dec
cld
addl
ffree
add
push
repnz
jmp
lret
loop
enter
pop
lock
and
mov
mov
gs
adc
dec
push
cmp
inc
pusha
rcrb
mov
aad
jbe
pop
adc
ficomps
push
lret
sti
fadd
jge
arpl
and
xor
cmpsb
push
sub
pop
sub
mov
xchg
add
jle
xchg
mov
mov
cmc
mov
sbb
movsl
shrl
push
and
jne
cwtl
cld
sbb
cmc
test
mov
stos
sub
insb
fdivr
int
dec
xchg
das
sub
pop
sbb
mov
int3
dec
push
mov
cmp
dec
subb
stos
sbb
jge
nop
adc
add
fstps
stos
pushf
mov
or
xchg
fidivl
xor
pop
lcall
mov
icebp
test
leave
hlt
adc
push
push
xor
mov
jecxz
xchg
arpl
aas
cwtl
cltd
push
mov
ret
adc
into
mov
addr16
stos
mov
mov
sub
int
loop
pop
mov
insb
lahf
sti
fdivr
mov
bound
xchg
data16
enter
jecxz
mov
imul
mov
int3
adc
daa
aaa
add
xchg
inc
and
dec
cli
repnz
dec
shll
movsl
pop
xchg
jb
test
loope
xchg
jne
mov
leave
adc
ds
ror
popf
and
pop
int
arpl
les
not
fiadds
test
dec
out
xorl
pop
or
jne
jp
dec
or
cld
aam
dec
das
popa
or
sbb
cli
jb
loopne
push
jno
push
push
imul
pop
pop
push
cmc
xchg
jno
test
push
aas
call
fdivs
pushf
fs
popa
loope
int3
xor
pop
addr16
pop
sarl
lahf
jae
or
push
jbe
outsl
fstp
push
lret
xor
iret
adc
xchg
imul
and
jb
repnz
lods
fldenv
cli
ds
cmpsb
dec
pop
mov
out
push
xor
stos
ficomps
mov
dec
mov
xorl
arpl
movsb
rcrl
mov
adc
push
mov
and
add
jbe
jnp
adc
fwait
test
jl
sub
mov
mov
lret
dec
fstpt
inc
fidivrs
rcrb
test
or
stos
cmp
adc
push
fs
mov
xchg
mov
push
cmp
or
mov
pop
sbb
repz
xor
in
mov
test
xchg
stos
nop
ret
in
scas
out
frstor
mov
loope
sbb
pop
hlt
jle
mov
mov
mov
dec
push
std
outsb
and
jno
sub
into
jmp
jno
aad
add
loope
jge
shrb
dec
xchg
andl
leave
sub
mov
mov
repz
inc
arpl
sbbb
cld
cli
cmp
mov
inc
dec
add
ror
ret
dec
add
es
lret
inc
aas
add
adc
mov
call
mov
aad
dec
or
loopne
lcall
sub
push
xor
jle
movsb
cmpsb
jb
jmp
std
imul
scas
repz
test
mov
inc
mov
outsb
sbbl
pop
jp
mov
cmpsl
push
push
and
jo
mov
push
jmp
push
push
rcll
loopne
ljmp
dec
je
addb
les
push
mov
dec
xor
inc
jb
inc
pushf
adc
adc
out
sbb
dec
icebp
adc
sti
mov
jp
push
jb
hlt
push
mov
mov
mov
mov
mov
shr
lcall
add
ret
xchg
pop
out
leave
shrb
aaa
cmp
out
mov
sbb
pop
mov
mov
lock
les
pop
mov
jae
inc
xor
lret
arpl
in
mov
ds
adc
rol
mov
mov
shlb
lret
pop
inc
dec
mov
loopne
jecxz
ret
xor
adc
lret
and
inc
xor
test
popa
lods
push
push
aaa
lcall
inc
rorl
cwtl
cmp
ljmp
stos
movsb
jae
xchg
mov
orl
scas
xlat
pop
call
mov
push
inc
or
ja
xchg
je
fwait
outsb
adc
cmp
cli
pop
mov
sti
push
sub
cs
mov
jns
dec
jnp
subl
add
fistpl
mov
jg
mov
inc
push
jbe
push
cli
push
inc
test
jl
lock
dec
add
loop
imul
jge
js
mov
icebp
stos
ret
push
movsl
push
not
ficoms
loope
outsb
inc
mov
sbb
inc
or
imul
cmp
pop
iret
data16
jne
pop
in
mov
sbb
xchg
jns
pop
xchg
push
sub
push
pop
jns
in
das
call
mov
lret
pusha
sub
or
les
imul
sub
dec
div
mov
jne
sub
mov
bnd
shlb
inc
arpl
xor
fs
addr16
sbb
data16
mov
inc
test
inc
loope
dec
js
imul
fcoms
mov
cwtl
repnz
es
icebp
test
and
pop
rcrb
pop
add
inc
or
mov
jae
mov
ss
call
stos
sbb
add
dec
push
mov
and
cmp
mov
adc
inc
in
test
out
xor
lret
rclb
xor
add
jnp
cltd
cmp
cmpl
jmp
mov
mov
inc
mov
xor
aas
or
dec
jne
mov
lods
jge
cwtl
std
fimull
cmpsb
dec
mov
cmpb
sbb
rclb
lods
sahf
dec
icebp
mov
or
imul
aaa
mov
jecxz
das
add
pop
push
jbe
mov
adc
fwait
ss
aaa
jne
jno
mov
inc
mov
ss
stos
mulb
out
mov
sub
mov
mov
sub
adc
stos
xor
mov
test
and
aaa
dec
in
mov
jb
pop
jno
sarb
inc
notl
mov
and
sarl
adc
pop
adc
xor
repnz
adc
dec
out
lods
jnp
mov
dec
das
pop
mov
or
out
jns
rcl
mov
mov
mov
outsl
or
fmuls
and
cltd
je
sub
pop
push
jno
add
scas
push
insl
fs
es
icebp
mov
ret
fwait
cmpsl
and
inc
movsl
lods
fidivrl
mov
mov
or
dec
jno
lods
pop
xor
das
popf
imull
insl
inc
addr16
and
scas
mov
std
push
pop
add
test
repz
hlt
push
jp
push
repnz
inc
or
pop
sub
xchg
jg
mov
mov
sbb
jo
outsb
flds
or
inc
mov
pop
inc
push
mov
cltd
cmpsb
mov
inc
jnp
and
pushf
shlb
shrb
mov
dec
adc
shll
imul
jle
aas
lods
les
out
je
outsb
inc
xor
xchg
mov
mov
add
out
ret
popa
lahf
dec
and
les
and
inc
fnstenv
mov
movsl
pushf
loopne
lds
pop
jnp
ret
jbe
xor
in
mov
js
or
lret
push
ds
mov
dec
xchg
mov
call
movsl
out
shlb
out
aas
push
add
scas
push
out
mov
jmp
push
lods
sbb
mov
iret
lds
mov
in
pop
and
out
cmpsl
jge
mov
roll
xchg
push
mov
add
enter
inc
xor
push
out
add
je
jno
jg
pusha
testl
in
inc
out
in
pushf
dec
testl
inc
cli
push
push
fs
xchg
dec
cmp
cmp
dec
dec
add
jle
dec
inc
pushl
cwtl
lds
icebp
push
xor
fmuls
jmp
scas
mov
fs
pusha
mov
dec
sbb
shr
dec
ja
out
push
outsb
pop
dec
adc
lret
test
fwait
enter
xor
jbe
fwait
jne
mov
cmp
mov
mov
sub
stos
mov
adc
xchg
test
std
in
jno
je
jbe
fstps
add
sbb
sub
push
fadds
and
dec
push
mov
push
add
std
xchg
xor
or
xchg
dec
xlat
loopne
push
cmc
sbb
aas
shrl
sbb
stos
arpl
push
pop
ss
mov
fwait
imul
ret
sub
int
sbb
mov
mov
aas
and
movsl
pop
popa
popf
lcall
test
loope
test
xchg
jbe
es
in
loop
jne
out
xor
cmp
sbb
mov
jb
cli
inc
cmc
fcmovnu
mov
pop
aas
cmpsb
popa
sbb
adc
vphsubbw
popf
xchg
aam
test
inc
mov
xlat
sbb
sbb
mov
mov
mov
dec
xor
sub
cmpsb
stos
cmpsb
inc
mov
js
hlt
mov
es
adc
ds
lea
jp
arpl
push
jge
ss
gs
loopne
mov
sbb
mov
adc
cvttps2pi
pop
outsb
in
xchg
stos
addr16
aad
pushf
fisubrl
cltd
imul
mov
fwait
and
mov
cmc
xor
dec
adc
adc
ja
xor
adc
adc
push
sbb
xchg
enter
sbb
hlt
pop
adc
lea
into
mov
inc
in
add
cltd
es
cmp
adc
jmp
jne
lds
movsl
ror
cli
stc
std
or
repz
scas
enter
movsb
les
jb
cmp
fs
iret
les
outsl
mov
bound
ret
mov
jp
and
xchg
push
int3
popf
cli
push
cmpsb
mov
lea
mov
shl
and
cs
xlat
pop
xchg
inc
and
cli
jmp
bound
lock
mov
cmp
fidivrs
cmp
adc
or
cli
lods
nop
mov
repz
insb
sbb
scas
cwtl
cli
arpl
add
fldenv
jmp
or
pop
xchg
dec
int
jecxz
mov
mov
lods
inc
mov
and
int3
nop
cltd
or
mov
sub
dec
sub
mov
lea
jb
lret
icebp
lcall
ret
icebp
nop
and
pop
and
jnp
dec
jne
test
lds
xchg
xchg
sbb
stos
mov
mov
enter
out
icebp
jecxz
dec
shrb
lods
and
test
push
sbb
subl
sbb
dec
bound
in
lock
lret
sbbb
mov
adc
fsubrl
push
add
push
mov
repnz
jno
xchg
ret
push
inc
int
mov
imul
mov
in
mov
add
sbbl
mov
xor
jae
mov
test
int3
movsl
push
enter
stc
adc
out
cmp
xchg
and
pop
rcll
push
dec
ret
dec
lret
sbb
cwtl
dec
lea
jns
xchg
add
in
lahf
mov
rcrl
leave
pop
in
mov
jle
jp
inc
cwtl
mov
dec
popa
add
dec
adc
negl
icebp
jne
xorb
cmp
int3
add
movsl
aam
stos
push
daa
add
stos
pop
in
push
push
ret
push
jl
mov
or
sbb
fimull
clc
roll
mov
icebp
mov
js
mov
out
clc
iret
push
out
inc
cmp
bound
push
dec
dec
or
lods
inc
loop
xchg
dec
imul
cwtl
push
xorl
outsb
cmp
adc
jmp
adc
in
cmp
mov
inc
cwtl
jne
and
xchg
jecxz
sbb
loop
inc
seto
inc
scas
pop
jmp
roll
loop
aad
inc
insl
jecxz
fsubs
pop
or
mov
repnz
jne,pn
xchg
notl
sub
push
jae
xor
lea
lret
jmp
mov
dec
and
add
add
fcoml
movsb
sub
fists
das
add
ja
xchg
adc
lret
sti
arpl
mov
out
movsl
nop
shll
stos
push
push
aaa
mov
mov
repz
pop
imul
loope
outsl
ss
dec
xor
dec
adc
sbb
mov
fld
inc
inc
jae
dec
lcall
pop
notb
mov
outsb
aas
add
negb
addl
stc
dec
mov
dec
loop
addr16
idiv
and
mov
sub
mov
incl
jecxz
test
or
push
and
cs
add
or
push
imul
pop
and
mov
inc
mov
std
movsl
cmp
xchg
sub
mov
mov
sub
xor
add
or
out
sbb
fcmovbe
jle
imul
lods
cmp
enter
cmp
xor
xchg
cwtl
inc
adcb
fadds
ljmp
pop
andl
pop
pop
adc
mov
sbb
sahf
mov
scas
lret
ja
das
sbb
mov
fldl
inc
imul
push
mov
roll
and
hlt
pop
mov
push
push
daa
add
hlt
cld
sbb
and
out
push
add
insl
daa
pop
insb
xchg
dec
std
adc
out
leave
cmp
add
roll
xchg
pop
lahf
fnstcw
out
push
adc
test
hlt
push
push
jne
push
sub
push
sub
jae
imulb
cs
add
mov
out
enter
sbb
test
dec
and
out
xchg
mov
jbe
sbb
pop
loope
bound
test
pop
sbb
adc
lods
jno
jae
jmp
cli
xchg
inc
or
add
int
imul
inc
pop
jecxz
pop
shrb
out
lcall
mov
sbb
fdivs
pop
dec
dec
cld
sarb
popf
add
xor
imul
test
push
jg
add
movsl
or
imul
call
mov
lret
cmp
test
xchg
js
xchg
xchg
in
pop
add
push
push
fldl
xchg
pop
pop
out
push
sbb
xor
sub
push
sub
fstpl
xchg
std
fisubl
cmp
lea
jle
adc
scas
mov
sarb
sahf
add
push
dec
pushf
test
popf
and
jae
mov
jp
je
dec
fdivs
push
cmp
inc
les
mov
lea
roll
pop
mov
fadds
xor
adc
dec
stos
cmp
jge
sbb
xchg
repz
ds
movsl
ja
fwait
jmp
jns
daa
lods
and
jge
lock
lock
mov
loopne
mov
adcb
stc
lds
mov
jno
push
cwtl
inc
xchg
jg
in
jo
test
cmpl
and
add
aas
xchg
cmpsl
cmp
out
int
mov
pop
lods
out
addl
fisttpl
push
mov
cltd
sbb
jb
dec
adc
lods
mov
push
sub
bound
inc
lods
leave
adcl
stc
jmp
push
jge
or
and
dec
jp
shll
cltd
psubb
sbb
mov
or
leave
sub
add
data16
cmp
sub
mov
mov
add
lock
mov
jmp
jmp
push
mov
outsl
push
clc
mov
mov
stos
aam
sahf
push
jns
nopl
mov
arpl
sbb
repnz
mov
xor
jmp
mov
or
mov
outsl
pop
loope
xor
and
divl
pop
cmp
xor
std
test
jle
sub
lahf
outsb
adc
mov
jg
insb
mov
nop
jnp
xchg
dec
popa
cwtl
add
cli
fsts
push
pop
adc
shll
push
xor
inc
sub
mov
pop
fadd
add
adc
test
mov
fldt
loop
aas
xorl
add
div
cmc
repz
dec
shll
test
inc
jb
inc
and
lods
and
sub
adc
rsqrtps
shrl
lcall
push
iret
iret
xchg
out
addr16
mov
out
mov
inc
fwait
int3
std
fnstcw
lcall
jl
gs
mov
adc
sbb
and
int
fistpl
dec
push
movb
in
test
jmp
mov
movsb
xchg
rolb
mov
icebp
pop
subb
jp
test
dec
lea
fsubl
or
push
xor
icebp
sbbl
dec
lods
mov
fs
or
xor
add
popf
jmp
je
adc
jle
mov
and
dec
xor
push
lds
adc
jmp
or
jns
mov
mov
arpl
mov
or
cmp
aam
pop
sub
imul
aad
lea
outsl
and
pushf
push
clc
popa
inc
test
cmp
inc
lret
ds
xlat
sbb
ret
cmpsb
cmp
adc
in
xchg
ja
xchg
pop
and
lea
sbb
out
test
out
movsl
push
xchg
scas
clc
lcall
shl
or
and
sbb
or
test
mov
js
popf
fsubp
scas
fsubl
inc
dec
mov
lds
ljmp
cltd
and
not
js
cmpsl
lret
push
dec
into
pop
push
xchg
in
jmp
lret
mov
mov
cmp
push
inc
pop
push
jns
loop
xor
add
mov
xchg
inc
out
adc
test
scas
mov
sbb
cmp
repnz
pop
dec
cltd
stos
fidivrs
in
inc
sbb
pop
xchg
daa
ljmp
mov
add
insl
sub
jno
lods
das
movl
cmp
jg
mov
mov
movsl
fimull
pop
gs
lahf
jmp
test
orl
call
add
pop
push
sahf
xchg
movsl
xlat
shlb
add
adc
mov
ljmp
repnz
dec
cmpsl
insb
pop
movsl
lods
mov
rcr
lods
loop
jb
inc
les
popf
sbb
pop
sbb
aam
push
jbe
push
pop
and
pusha
ja
out
inc
push
cltd
jo
adc
pop
mov
jo
sub
imul
mov
adc
fcom
push
xchg
mov
pop
fdivl
leave
and
scas
add
push
in
add
push
and
push
aad
mov
mov
shlb
lods
iret
cmpl
sbb
adc
mov
mov
adc
dec
inc
movsb
xor
dec
or
add
movsb
aad
dec
mov
in
jnp
out
ss
sti
test
clc
idiv
or
fwait
js
stos
test
add
cltd
sub
sbb
outsl
loopne
sub
lret
sbb
mov
jg
mov
inc
repz
pushf
or
mov
adcb
int
adc
pop
roll
repz
negb
imul
cs
popl
test
fstps
or
or
xchg
pop
scas
in
dec
mov
into
or
sbb
cmp
int3
and
rolb
dec
sti
xor
pop
or
xchg
icebp
inc
in
cmp
dec
stc
sub
pop
mov
mov
stc
mov
xchg
test
jl
leave
out
lret
movsl
jecxz
mov
fidivrs
sti
xor
jp
push
testb
xchg
push
cld
fdiv
sbb
loope
mov
repz
push
ret
jge
pop
fisubrl
dec
mov
lcall
arpl
and
and
ds
cltd
rclb
inc
cld
mov
sahf
xchg
dec
dec
push
jb
hlt
or
aaa
jmp
or
test
cmp
mov
lds
xchg
pop
pop
mov
xor
stos
cltd
pusha
xor
lcall
cmp
add
div
mov
xor
jo
xchg
mov
leave
insb
fwait
aaa
sub
pop
lds
xor
and
inc
sbb
pusha
and
cmp
lods
test
int
xor
jge
mov
rcll
mov
ljmp
leave
shlb
dec
jnp
mov
dec
and
dec
or
jle
mov
int
pop
ljmp
and
ljmp
pop
mov
pop
inc
cltd
jno
sbb
cmp
pusha
dec
add
push
xchg
stos
rol
jmp
or
pop
faddp
loopne
stc
dec
mov
mov
fnstenv
sub
js
add
xchg
mov
and
fcomps
subl
cmp
dec
xchg
ljmp
imul
or
mov
int3
rolb
mul
or
jo
lods
out
jbe
cmp
call
int
mov
in
in
or
movsl
mov
insb
rcrb
insl
push
out
cwtl
sbb
push
add
or
fucomi
xchg
sub
xor
cld
lahf
jecxz
cmp
mov
cmpsl
xchg
lcall
lret
fs
shll
add
idiv
shrb
outsl
out
cmc
aaa
mov
lods
je
sbbl
inc
xchg
lock
mov
jecxz
sub
mov
sbb
dec
lea
aam
jns
or
dec
fs
adc
pop
aad
jmp
sbb
and
cmp
sbb
les
xor
add
ror
mov
jp
cmp
or
pop
or
pop
mov
adcb
cmpsb
xchg
push
mov
ret
inc
out
xlat
jae
in
mov
and
mov
ja
scas
sar
stos
in
in
cwtl
ret
xor
stos
or
dec
addr16
mov
out
add
out
popa
fwait
arpl
jno
adc
loop
jg
pop
mov
jle
jae
cmc
push
and
jmp
add
mov
scas
adc
mov
fistps
je
flds
pop
push
clc
adc
daa
imul
cmp
pop
mov
je
mul
jmp
call
clc
mov
pop
addr16
aad
fcomps
push
jne
cmpsb
jbe
mov
cwtl
hlt
lea
mov
dec
sub
inc
scas
pop
out
inc
or
test
mov
jl
fstpt
mov
jle
divb
aas
inc
fists
lret
mov
xor
sub
jecxz
in
insb
jp
fcmovne
repz
ljmp
lahf
ret
mov
pop
jbe
jl
movb
arpl
fidivrl
jge
mov
sbb
jo
sub
inc
and
lret
rorb
xchg
jb
cmp
nop
cld
rcrl
test
mov
xor
mov
call
mov
or
mov
add
arpl
cmpsb
inc
out
addr16
xchg
jnp
dec
adc
data16
cmp
push
push
push
dec
scas
xor
push
movb
outsb
mov
fwait
mov
hlt
pop
out
pusha
loop
xchg
stos
push
ss
bound
push
ret
push
jmp
fnsave
mov
sti
stos
popf
or
xlat
xchg
adc
lods
pop
xor
int
and
outsb
insb
test
mov
or
push
xchg
mov
sbb
ror
cmp
or
fcoml
ret
shlb
jnp
aad
xor
mov
push
and
inc
pop
ficoml
mov
lea
fdivp
ret
sub
push
cmpsb
and
mov
and
mov
mov
jge
ret
push
rcl
std
shrb
popf
adc
fadd
xorl
stos
pop
pop
fadd
inc
scas
xchg
jne
push
lds
mov
jg
cmc
mov
pop
test
les
ss
dec
je
ficoms
or
stos
cli
popf
test
out
sub
lods
and
and
pusha
inc
pop
push
push
sbb
les
andl
out
lods
aad
mov
jnp
pop
movsb
pop
cld
into
lods
mov
inc
pusha
and
insl
xchg
add
test
mov
or
rcr
stc
test
popf
ss
jecxz
clc
adc
cwtl
adc
lret
and
lods
into
inc
mov
fcmovbe
js
popa
data16
mov
call
aam
out
mov
lock
inc
and
sbb
cmp
adc
inc
in
mov
cmp
and
add
mov
outsl
jecxz
push
jmp
lret
or
push
pop
adc
push
stc
push
repnz
icebp
mov
shrb
xlat
pop
sbb
inc
xchg
fadds
xchg
push
sub
sbb
sahf
fsubl
xor
jno
mov
mov
bound
cltd
ljmp
cwtl
and
pop
sarl
popf
cmc
neg
mov
std
rorb
push
push
ja
je
mov
adc
inc
xlat
mov
cli
stos
dec
mov
sub
loope
mov
les
orl
fs
xorb
or
mov
inc
les
mov
add
je
xchg
loop
pop
leave
xor
xor
mov
outsb
and
je
ret
mov
pop
xchg
movsb
pushf
bound
push
cmp
daa
into
adcl
xlat
xor
cld
ljmp
repz
lcall
scas
jb
xchg
jge
jp
pop
jmp
and
popa
inc
cld
inc
daa
repnz
sti
add
sub
dec
sarl
subl
int3
and
subl
mov
jae
cs
add
aaa
mov
add
inc
shl
roll
popf
sub
inc
mov
je
mov
mov
imul
xor
jl
insb
imul
mov
sbb
rcrl
mov
imul
iret
pop
or
mov
push
iret
movsl
adc
repnz
mov
lds
cwtl
cld
outsb
scas
cmpsb
nop
mov
iret
or
jo
sbb
xchg
es
cltd
add
popf
inc
stc
xchg
or
sbb
xchg
push
jo
inc
imul
fwait
arpl
xchg
sub
sub
mov
out
stc
xchg
ljmp
js
add
jg
fbstp
sub
cmp
xor
jmp
fucom
push
push
mov
nop
mov
xchg
jle
mov
mov
pop
ljmp
mov
mov
ss
das
jp
mov
rcr
mov
adc
push
dec
sub
in
lretw
ljmp
clc
mov
sbb
rclb
adc
nopl
in
jmp
cltd
jecxz
in
fnstsw
les
testb
adc
lods
xor
test
mov
pop
xchg
faddl
adc
lods
xor
clc
mov
inc
sbb
imul
fxch
test
imul
add
or
andb
sub
mov
fcompl
out
sbb
xchg
jg
shl
sub
xchg
jb
inc
push
fs
popf
jne
addr16
cli
fistl
mov
mov
out
pop
add
arpl
leave
and
popf
dec
rorl
mov
int
push
mov
in
dec
sub
or
fwait
sbb
dec
pop
pop
pushf
and
sbb
jbe
fneni(8087
mov
and
inc
sarb
mov
push
xor
jp
sbb
jb
int
pop
xor
into
jne
adc
mov
xor
inc
add
sub
xchg
pop
push
mov
orb
jg
push
cmp
pop
fdiv
xchg
pop
fnstsw
push
mov
lret
les
addr16
pushf
xor
mov
mov
cmp
lds
adc
mov
push
or
aam
jecxz
add
insb
sub
jo
into
dec
jmp
sub
lods
sahf
ret
lods
mov
mov
push
pop
adc
inc
mov
adc
movsl
cmp
cmpsl
andb
push
dec
pop
aad
add
pop
sbb
clc
ficompl
sahf
add
inc
adc
ds
divl
out
inc
sub
mov
mov
ds
sbb
insb
or
outsl
pop
inc
pop
iret
ss
sbb
cmp
inc
mov
leave
shlb
lcall
xor
mov
dec
push
leave
mov
jne
pop
jmp
add
mov
mov
inc
fsts
out
inc
sub
fs
sub
mov
lods
test
pusha
cmpsl
pusha
cmp
test
outsb
add
insb
cmp
sub
pop
inc
sarl
insb
lcall
xchg
add
sub
movsb
outsb
cltd
sub
sub
adc
test
icebp
or
adcb
xor
jns
or
adc
mov
mov
jmp
in
inc
mov
pop
sarl
jg
add
lods
and
popa
sbb
xchg
or
dec
cmp
repnz
mov
nop
push
mov
xor
push
cmc
loope
aam
add
and
mov
push
and
aad
dec
mov
mov
cltd
test
xor
aad
pop
mov
pop
sti
push
shrb
push
xor
pop
imul
cmc
push
mov
gs
mov
enter
push
inc
mov
hlt
call
pop
push
addl
into
loop
iret
cmp
arpl
data16
icebp
xlat
in
mov
dec
mov
ficomps
mov
addb
arpl
xchg
inc
bound
or
mov
inc
mov
pusha
xchg
xchg
das
xchg
push
or
xchg
call
call
mov
pop
xchg
pop
jge
sub
sbb
push
divl
sub
xchg
sbb
xchg
mov
sbb
nop
lret
sub
in
mov
icebp
mov
push
mov
sbb
sub
sbb
fidivl
in
les
repnz
pop
pop
sbb
out
dec
out
add
sbb
rcll
or
pop
popf
dec
sub
jbe
shlb
in
pop
inc
imul
adc
mov
pop
loopne
test
or
push
mov
jp
xor
fimull
addr16
subps
fstl
or
xchg
stc
adc
es
mov
pop
stos
sbb
push
int
push
mov
dec
cli
bound
mov
ret
fdivrl
sub
jle
js
rcr
pop
pop
hlt
lods
cmp
filds
mov
fstp
subb
aam
mov
jbe
mov
push
int3
sbb
pop
pop
jne
iret
div
mov
jmp
push
pop
andl
leave
or
sub
cwtl
fnstsw
das
xchg
sub
pop
aaa
lret
cmpsl
xor
cmp
pop
dec
xor
sar
add
xchg
scas
or
sub
dec
xchg
movsb
pop
popf
push
out
jp
xor
sbb
inc
xchg
mov
cld
fnsave
inc
pop
popa
xor
mov
mov
xor
pusha
xchg
call
mov
push
std
xchg
mov
fcomip
cli
pop
mov
and
stos
cmp
sub
or
stos
push
and
rcrb
cld
outsl
ss
push
out
xchg
sbb
in
mov
aaa
lea
pop
add
cld
xchg
lods
pushf
mov
sub
and
call
inc
xchg
pop
mov
or
sbb
jbe
sbb
imull
add
pushf
ljmp
xor
ret
inc
mov
jae
mov
sbbb
mov
push
inc
mov
insb
sahf
cld
rcl
mull
inc
mov
or
jp
and
push
aad
adc
xchg
xchg
inc
mov
lret
push
jmp
pop
push
dec
sub
or
xchg
ss
ficompl
mov
and
aam
bound
ja
idivl
jecxz
cld
push
call
jne
sarl
mov
pushf
dec
push
imul
aaa
adc
mov
mov
pusha
movsb
sbb
test
lret
into
aas
adc
out
movsb
xchg
add
push
jb
je
mov
push
popa
or
xor
stc
jo
jmp
cwtl
daa
add
dec
or
or
loopne
test
mov
adc
lcall
icebp
jne
push
ss
xchg
inc
lods
xor
adc
jb
hlt
jns
popa
sub
mov
cmp
mov
popa
mov
sub
sbb
cmp
mov
jb
mov
shr
sub
roll
ds
mov
push
or
shll
call
shll
jmp
imul
jns
lret
jae
adc
xchg
int
nop
mov
mov
xor
xlat
out
xor
sbb
xchg
in
sbb
cmp
xchg
sbb
mov
xchg
or
xchg
dec
inc
mov
scas
lahf
ljmp
jb
mov
sbb
hlt
cmp
shlb
mov
add
sbb
cmc
sbb
fs
mov
push
call
inc
out
decl
in
retw
shll
jl
lods
scas
popf
jg
stc
add
xorb
roll
jmp
inc
pop
stos
filds
jmp
arpl
dec
xchg
pop
xchg
scas
ds
jge
loop
in
mov
cs
lods
pop
into
scas
pushf
cmp
lcall
in
sbb
fmulp
adc
pmullw
add
mov
out
mov
xchg
xchg
fs
pop
cltd
int
dec
es
jmp
inc
inc
mov
adc
fsubp
and
scas
fcmovnbe
pop
jg
clc
adcb
lret
leave
cmp
call
and
xchg
call
movsl
jbe
outsb
lock
inc
inc
fstpt
scas
cwtl
btc
push
rcll
mov
mov
fs
std
mov
enter
or
mov
xor
int3
xchg
mov
cmpsb
fiaddl
sbb
sbb
inc
mov
add
pop
cwtl
in
arpl
lea
jnp
sti
cmp
adc
and
xchg
pop
ja
or
loop,pt
idivb
cmp
dec
ds
mov
scas
pop
lret
jo
mov
jne
fldt
leave
int
sbb
dec
mov
adc
sub
stos
jge
jae
pop
into
mov
sahf
shlb
sub
pop
inc
cmp
lret
mov
aas
in
mov
xor
xor
rorl
imul
jbe
add
scas
push
mov
mov
out
xor
adc
mov
lahf
enter
add
mov
pop
sahf
xchg
fldt
pop
aam
xchg
push
aad
xchg
incl
push
push
push
mov
movsl
fdivrl
stc
rcl
nop
jae
out
xor
fbld
push
test
iret
jle
fs
xchg
fwait
or
lea
pop
fldenv
sbb
mov
repnz
dec
leave
cmp
test
cmp
jae
mov
sbb
jne
test
aaa
ss
das
xchg
aad
fistpl
lods
mov
push
add
adc
and
xor
dec
cld
dec
inc
imul
jo
add
pop
sub
jae
push
inc
in
jg
or
loope
adc
sub
lods
mov
pop
loop
push
cmp
jns
negl
adc
mov
push
sti
or
insl
pop
and
ljmp
inc
mov
sbb
in
mov
mov
int
fiaddl
inc
jecxz
lods
mov
pop
xchg
sub
fiadds
add
into
ss
ljmp
imul
sar
int
dec
inc
jle
pop
mov
fildll
adc
adc
add
sti
mov
fdiv
pop
lahf
int3
mov
add
imul
sub
mov
cmc
mov
cli
pop
iret
xchg
mov
inc
sarb
xchg
and
aad
mov
push
dec
push
adc
bound
test
jecxz
aad
dec
pop
dec
jo
jbe
ds
sbb
out
in
cld
icebp
add
fdivl
dec
adc
and
in
cmpb
mov
clc
mov
mov
push
rcrb
leave
daa
mov
add
sbb
and
push
jns
out
dec
xor
mov
sub
jle
mov
push
push
xchg
lret
lcall
mov
jns
push
dec
sbb
push
lods
adc
inc
cmpsl
aaa
xor
mov
xor
pusha
mov
pop
jne
sub
clc
jmp
add
shl
and
mov
lret
ret
test
cmp
mov
fcmovnu
or
popf
mov
aad
sub
fs
cs
aam
out
or
mov
lods
jl
pusha
stc
inc
sbb
mov
ret
push
cmp
add
xor
pop
hlt
mov
movsl
test
pop
sub
lret
push
cmpsb
mov
stos
xchg
sub
xchg
dec
push
add
arpl
or
mov
loope
iret
sub
cmp
sub
jp
mov
iret
pop
mov
ja
pop
xor
jno
mov
pop
push
lock
outsl
cmp
insl
add
ret
into
inc
jecxz
cmp
ss
nop
dec
ds
ljmp
dec
in
jecxz
mov
pop
sub
int
mov
aam
in
lret
aaa
es
pushf
push
hlt
iret
sub
xor
mov
inc
mov
sti
fdiv
cmp
repnz
mov
in
mov
cmp
in
or
aas
fsubs
test
xchg
mov
push
idiv
mov
mov
daa
pop
stos
out
jno
or
push
or
cmp
jns
adc
aam
movups
pop
hlt
jmp
pop
and
or
and
movsb
or
sub
repnz
insb
cmpsl
dec
add
xor
xlat
xor
call
mov
mov
mov
std
push
movsl
addl
inc
dec
xor
hlt
aam
stos
inc
mov
cmpsl
ja
adc
xchg
xchg
popf
sub
pop
jo
push
adc
jbe
lcall
outsl
adc
or
stos
fwait
nop
push
test
pusha
les
rorb
insl
inc
push
ror
popf
mov
cltd
cli
out
arpl
adc
jne
in
mov
dec
filds
ljmp
into
mov
adcl
sar
das
out
fimuls
jo
push
rolb
cli
sbb
push
lcall
and
xchg
daa
incb
mov
outsb
hlt
fildll
scas
jae
out
repnz
jge
push
out
xorb
cmp
jmp
pusha
mov
in
push
sub
inc
mov
leave
sbb
and
jecxz
cmc
or
fwait
ljmp
xchg
sbb
push
ds
and
or
js
in
sub
xchg
jle
lock
xchg
push
subb
sbbb
fwait
outsb
ljmp
or
ss
es
cmp
loop
and
add
xor
xchg
ds
sti
andl
xor
mov
mov
sub
dec
ret
mull
dec
test
push
mov
loope
in
push
xchg
mov
sbb
sbb
lret
inc
mov
std
inc
cmp
pop
cmp
out
test
pop
cmpsl
rcll
xor
mov
sub
clc
cmpsl
pop
mov
mov
aaa
jb
aam
xor
jbe
mov
popa
adc
inc
data16
cwtl
outsb
fstpt
and
jo
sbb
dec
sub
in
in
les
dec
inc
ror
jge
sbb
xchg
add
subb
mov
jae
inc
cs
mov
ljmp
orl
mov
ret
test
push
jp
mov
mov
jne
inc
jecxz
movsl
mov
adc
iret
mov
mov
lods
cmp
jne
push
pop
pop
add
call
jno
insb
cmc
mul
pop
bnd
mov
and
add
mov
add
imul
outsl
scas
subl
xchg
cwtl
cmpsl
sahf
add
sbb
fstl
iret
mov
xor
incb
mov
or
or
and
jg
xchg
stos
ret
stos
sarb
dec
and
add
ljmp
fs
pop
xchg
fldcw
jge
xchg
ja
push
or
pushf
ror
or
and
aaa
or
cli
mov
and
lret
sub
mov
adcb
jbe
cmp
adc
dec
out
add
mov
inc
fs
hlt
jo
cmp
dec
daa
cmpsl
mov
and
xchg
insl
out
cmpsl
push
sbb
xchg
jbe
inc
out
daa
sub
pop
rcll
sbb
aas
xor
int
pop
jecxz
mov
or
pop
sbb
frstor
add
cltd
sub
jb
sub
arpl
xchg
pop
mov
cmc
fldt
and
xchg
dec
pusha
imul
add
and
js
das
jg
inc
addr16
inc
push
sub
lea
and
rcll
jp
lock
int
and
movsb
add
jbe
aad
push
test
mov
stc
adcb
pushf
jle
and
js
nop
test
mov
jecxz
push
push
iret
push
cmc
fildl
push
fidivrl
and
shlb
and
xchg
daa
fstp
xorb
mov
inc
popf
pop
insl
sti
gs
out
rol
jl
pusha
jg
sub
or
adc
aaa
popa
xor
lahf
fnsave
mov
push
push
mov
push
push
outsl
mov
mov
test
jmp
adc
inc
fimull
roll
sbb
in
or
je
inc
dec
imul
in
adcb
mov
rcrl
fstl
or
cmc
xor
cwtl
out
fldl
notl
outsb
dec
data16
adc
cmpsl
insl
div
and
xchg
push
cld
push
xchg
mov
sbb
outsb
je
loop
xor
push
add
sbb
mov
push
add
sbb
dec
enter
push
jecxz
jmp
ja
aad
dec
or
jo
and
push
test
lock
sbb
cmpb
adc
insb
repz
push
hlt
imul
stos
jnp
sbb
dec
and
sbb
mov
pop
cmp
outsl
add
mov
ja
dec
pop
xchg
inc
push
cmpl
iret
xchg
repnz
stos
sub
mov
repz
cmp
lret
hlt
cmp
add
hlt
lret
xlat
fld
adc
movsb
inc
jmp
sar
dec
leave
mov
or
data16
rcrl
into
dec
push
and
fdivrs
je
sbb
xchg
stos
test
jmp
push
jbe
xchg
lods
cmpsb
aaa
mov
cwtl
pop
xor
xchg
inc
cld
xor
into
lret
inc
test
pop
cwtl
scas
dec
scas
cmp
adc
cmp
ljmp
scas
push
xor
clc
sbbb
pop
repz
pop
inc
push
jecxz
js
and
mov
mov
cld
mov
dec
xor
aad
aam
mov
aam
push
mov
test
xchg
leave
insb
gs
mov
icebp
fadds
adc
jmp
jb
sub
test
ljmp
leave
xlat
mov
pop
popa
xor
mov
mov
or
push
pop
sub
pushf
inc
popa
adcl
sbbb
xor
jo
mov
cmpsl
loop
out
pop
iret
fadds
push
cld
cld
inc
add
out
adc
icebp
gs
mov
stc
mov
leave
adc
jle
and
dec
xchg
fisttpl
insl
mov
int
mov
inc
or
enter
inc
mov
dec
cld
js
mov
push
sbb
nop
cmpsb
and
lds
loope
lock
xchg
cmp
test
js
mov
xchg
sbb
xor
sub
aas
dec
pop
xchg
mov
rcll
cmp
xchg
push
adc
cwtl
cmp
inc
pop
pushf
loopne
xchg
and
loop
sub
mov
addr16
js
inc
push
pop
jnp
sbb
inc
adc
movsb
stos
popl
cwtl
xlat
pop
rorb
mov
shll
mov
in
stos
cs
mov
adc
sbb
in
sub
jmp
ret
lds
jo
xchg
std
xlat
jmp
fmull
pop
fadd
dec
or
pop
jb
lods
xchg
out
xchg
pop
mov
adc
mov
outsl
or
test
pop
and
mov
jnp
jns
icebp
pushf
pop
or
mov
movsl
jne
jno
mov
lods
or
jbe
pop
shlb
push
add
fldl
lahf
mov
cli
out
xchg
dec
movsl
xchg
fmulp
sub
cltd
xor
jae
xor
mov
imul
dec
movsb
add
jnp
jae
imul
dec
push
mov
incl
mov
std
jbe
jbe
mov
jle
mov
dec
xchg
loope
mov
test
mov
test
mov
inc
mov
cmc
push
pop
xor
setge
jno
inc
xchg
dec
inc
dec
mov
aaa
inc
xchg
lret
test
xchg
test
ret
loop
roll
and
sub
rolb
ljmp
mov
int3
aam
pop
ljmp
sub
push
hlt
sub
jp
ficoml
mov
shlb
push
dec
fcomps
push
leave
int3
dec
mov
fiaddl
push
inc
roll
test
cli
les
add
insb
fldl
ret
loop
dec
pop
mov
sbb
mov
sub
daa
pop
adc
arpl
mov
jle
gs
inc
std
or
mov
jmp
and
jecxz
xor
lret
push
test
xlat
stc
or
es
mov
lcall
out
cmp
repz
and
xchg
and
sbbb
ds
int3
mov
jne
stos
lock
int3
daa
inc
lods
cli
mov
add
arpl
cltd
cmp
mov
enter
and
pushf
push
pushf
xchg
and
shll
inc
inc
xor
test
lods
out
sbb
jnp
jo
movsb
inc
add
jl
ret
gs
fcoml
sub
cs
aaa
add
fwait
inc
sbb
popa
insb
sti
es
dec
daa
adc
mov
xabort
xor
ret
stos
mov
sarb
neg
lahf
addr16
jbe
pusha
jl
hlt
xchg
js
leave
pop
por
dec
inc
rcll
stos
mov
sub
or
fcmovnb
xor
je
cmpsb
jl
popa
sbb
adc
test
push
andb
lret
dec
hlt
stos
push
push
fsubrl
test
movsl
daa
xbegin
mov
push
sbb
hlt
xchg
push
icebp
int
xor
data16
mov
mov
sub
jmp
adc
and
and
fnstsw
add
push
mov
lods
cmp
mov
mov
ret
pop
push
cmp
sbb
stc
je
mov
pop
sbb
mov
arpl
and
sbb
out
out
sbb
sub
adc
iret
daa
loopne
mov
subb
mov
loope
sub
xor
lahf
in
xchg
test
mov
out
jle
outsb
mov
outsb
hlt
les
adc
xchg
sbb
mov
loop
push
mov
ljmp
mov
scas
aas
mov
inc
jmp
fdivl
mov
xchg
out
dec
out
bound
sbb
jbe
and
outsl
fwait
mov
sbbl
shlb
pop
xor
ficompl
ret
enter
xchg
and
cmp
je
jge
adc
xchg
nop
sub
push
ret
scas
dec
jl
xor
xor
icebp
xchg
hlt
sub
xchg
jns
mov
sub
test
mov
dec
add
mov
cmp
and
repnz
sahf
and
lods
mov
fwait
iret
lods
jno
shrb
xor
insb
mov
jg
push
test
popa
push
mov
adc
sub
sbb
mov
aad
out
daa
and
test
cli
or
mov
mov
insb
cmp
fwait
hlt
jp
or
adcb
xchg
loop
leave
mov
or
loop
mov
and
jmp
xor
divl
lret
dec
pop
pop
fcmovu
mov
sbb
sub
xor
fdivrl
add
push
jns
sbb
lea
cltd
dec
and
sbb
popa
xchg
addr16
mov
pop
add
xchg
xchg
ljmp
xchg
cmpl
xor
adcl
add
ss
push
ja
xlat
cld
mov
push
repz
push
sbb
and
jae
sbb
sub
push
pushf
dec
cltd
mov
push
and
andl
imul
inc
lods
outsw
lret
stos
mov
jns
pushf
sub
adc
jne
adc
pop
mov
inc
icebp
mov
es
ds
shl
sbb
dec
sbb
add
test
pop
mov
aaa
sti
dec
or
pop
ds
inc
cmp
pop
pop
dec
bound
sti
popa
popl
mov
cwtl
out
pop
popa
mov
pop
ljmp
rorb
jle
hlt
in
or
test
iret
imull
je
jno
and
mov
xchg
stc
ret
negb
addl
lcall
fcompl
jecxz
lcall
rcrl
sbb
call
add
inc
mov
cmp
test
arpl
lcall
test
or
bound
call
out
repz
rolb
lock
sbb
mov
mov
or
or
repnz
pop
sub
enter
mov
mov
test
imul
sbb
add
or
mov
xchg
push
xor
dec
mov
sub
stc
int
jmp
jg
ljmp
or
add
jmp
jl
push
pop
insl
mov
movsl
cmpsb
push
pop
cmp
and
xor
jmp
scas
mov
fwait
cmp
and
popf
insb
mov
dec
fwait
das
leave
ret
loop,pn
nop
push
out
mov
xchg
rorl
out
mov
lcall
fdivrs
adc
xorl
test
inc
test
jb
push
mov
popl
push
adc
and
push
cmp
out
jg
or
mov
jp
and
pmuludq
aam
adc
jge
test
mov
and
cmp
inc
loop
lcall
inc
adc
cmp
dec
mov
push
xchg
in
addb
sub
pop
add
ljmp
rorb
xorb
jno
adc
bound
mov
cmc
pop
aam
lods
cmpsl
lahf
adc
jecxz
and
jecxz
push
cltd
adc
jmp
repnz
cwtl
and
sahf
xchg
and
jp
test
popf
scas
mov
cli
xchg
sbb
lods
and
mov
cmp
je
inc
adc
inc
inc
xchg
lock
loop
mov
test
xchg
mov
xchg
repz
xchg
mov
pop
sub
mov
shll
sarb
xchg
fisttps
pop
adc
iret
mov
dec
pop
cmp
sub
icebp
pop
aaa
jp
pop
xchg
xchg
mov
pop
aad
es
xchg
mov
out
adcl
movsl
test
stc
or
dec
push
xor
push
mov
mov
mov
cld
or
enter
aaa
jp
dec
cmp
adc
mov
mov
movsl
lcall
loopne
dec
fistl
inc
iret
mov
enter
out
sbb
and
mov
cmpsl
sbb
xchg
shl
subb
divl
hlt
adc
and
pop
pop
mov
jae
sbb
mov
pop
in
lcall
sub
pop
xchg
dec
fdivrl
inc
aas
xchg
fsubrs
icebp
hlt
pusha
repnz
mov
or
xchg
aad
ds
sub
mov
xchg
cld
into
in
pop
push
leave
lea
aas
or
in
mov
dec
iret
ja
push
mov
lahf
pop
ret
fdiv
inc
nop
movb
dec
push
jecxz
cltd
xor
adc
rorl
stos
mov
test
les
fisubs
lcall
add
das
adc
out
cmp
push
repz
movsl
inc
push
mov
mov
push
aad
add
test
lock
mov
cli
inc
mov
shrl
lods
mov
jbe
out
mov
cld
mov
and
test
dec
inc
sbb
cmpsb
sub
xchg
cmp
xor
les
xchg
jns
repnz
and
ret
xchg
movsb
xchg
cmp
adc
mov
enter
or
xchg
insl
insl
push
jns
call
xchg
cmp
imul
hlt
push
or
pop
int
ds
cli
lods
out
xchg
cltd
jbe
dec
jle
sahf
xorb
cmp
sbb
data16
pop
inc
jecxz
xchg
ret
jo
leave
ret
mov
push
push
xchg
stos
jmp
lret
add
std
lahf
cld
loop
loop
cmp
daa
mov
xchg
in
mov
rorb
cs
fcoms
in
lock
std
mov
adc
push
and
sbb
xchg
cmp
mov
dec
xchg
lods
dec
fildl
in
rorb
lods
jp
pop
fcomps
gs
mov
and
ja
lcall
fistpl
or
daa
xor
aad
and
sub
pop
jae
loopne
fcmovnb
inc
cmp
sbb
inc
cltd
movsb
pop
imul
sti
xchg
enter
mov
pop
fcompl
divl
adcl
shll
adc
inc
sbb
xchg
enter
cmpsb
mov
xchg
pop
xchg
mov
or
stc
add
leave
xor
dec
jbe
add
and
cli
jae
and
enter
mov
dec
dec
push
in
jae
mov
in
push
pop
push
arpl
mov
cmp
stos
mov
or
into
in
lods
xor
cmp
cli
add
xor
xchg
shrl
in
test
mov
test
jecxz
pop
rcll
clc
add
xchg
jae
adc
mov
sub
seto
addr16
test
sahf
cli
stos
lret
les
jle
push
enter
out
adc
or
movsb
clc
xchg
lods
xchg
sarl
push
add
dec
das
xor
test
call
adc
aad
xchg
in
in
insl
dec
stos
jo
loopne
std
pop
sbb
hlt
jno
orl
mov
xchg
and
repz
adc
jge
xor
push
jecxz
pop
ljmp
jecxz
roll
pop
int
xor
fcmove
aas
add
fildl
lock
outsb
jb
xchg
bound
adc
pop
jno
bound
dec
sub
mov
xor
out
cmpsl
jmp
xlat
push
loop
cmp
cmp
sti
out
inc
mov
inc
in
pushf
jg
sbb
rcll
pop
xchg
cmpsb
dec
pop
out
test
mov
push
sub
mov
test
scas
inc
insl
or
loope
adc
mov
pop
jbe
push
ficomps
mov
aad
mov
mov
jl
adc
xor
push
ror
lret
or
dec
pop
fstpl
push
xchg
jo
pop
ss
and
xchg
addr16
js
xchg
fcomps
ss
movsl
pop
dec
into
mov
push
cmp
cmc
repnz
or
adc
xor
mov
mov
mov
push
popf
and
add
mov
daa
hlt
in
mov
sub
and
cltd
xor
ds
popa
mov
push
sbb
out
movb
mov
push
fcmovnu
fisttps
test
inc
gs
sub
inc
jge
jmp
fdivrs
scas
cwtl
mov
movsb
movb
call
mov
in
jae
shrl
mov
lods
sub
lcall
ja
add
fsubl
or
jg
sti
divps
inc
fs
out
incl
in
lret
xchg
jnp
clc
cmp
or
call
mov
xor
lods
shlb
push
mov
lock
inc
hlt
loopne
shl
gs
mov
cltd
int3
push
jmp
push
or
xchg
push
push
push
stc
mov
dec
sub
cwtl
jmp
popf
cmp
mov
push
iret
sub
pop
jnp
loopne
adc
cmp
mov
pop
int
add
push
ljmp
mov
jo
and
fcompl
mov
jmp
mov
sub
inc
xchg
iret
jae
mov
sub
pushf
mov
jne
les
cmpsl
out
jae
add
mov
mov
mov
cmpsb
sahf
fisttpl
sbb
mov
mov
shlb
mov
cmpsl
fsubl
clc
mov
idivl
jno
adc
repz
inc
es
rdtsc
and
fldl
sub
pop
mov
xchg
test
sbb
pop
jl
pop
jo
adc
fs
int
cmc
jae
pop
fdivp
dec
mov
xor
push
cli
xor
fidivrl
sub
pop
jmp
loope
push
xchg
nop
add
jmp
test
test
data16
notl
daa
cmc
jo
dec
mov
xor
adc
fistl
xchg
in
lahf
test
xchg
dec
push
mov
push
xor
add
mov
mov
pop
xor
mov
mov
cld
xchg
adc
loop
xor
sbb
mov
mov
jno
xchg
xor
cmpsb
jge
ret
leave
in
or
mov
mov
scas
inc
lahf
adc
cli
push
dec
ja
les
repz
loop,pn
nop
inc
mov
pop
mov
mov
inc
lcall
je
in
mov
add
cmc
mov
pop
jnp
fisttpl
aad
fs
fwait
mov
and
lcall
shlb
subl
insl
and
jg
stc
mov
or
xchg
mov
mov
lcall
stos
loope
jb
push
setbe
inc
mov
mov
into
lret
or
add
pop
lcall
fs
insb
push
sub
sbbb
outsl
addr16
fldt
sysret
mov
fdivs
sar
in
ja
mov
fidivs
test
pop
les
push
jo
or
inc
dec
xchg
inc
mov
mov
divb
add
or
or
pop
std
inc
mov
sub
push
ss
scas
aad
loope
cs
test
pop
stos
pop
pop
mov
cmp
aad
scas
adc
mov
xchg
cltd
sub
fwait
push
out
ja
repz
iret
jae
stos
inc
sub
lret
bound
xchg
xchg
and
adc
or
popa
or
sahf
subb
in
cmc
les
inc
push
test
push
das
mov
mov
pop
pop
loopne
imul
mov
jo
dec
enter
jo
outsb
xlat
loope
add
jne
pop
push
add
jns
orl
push
pusha
addr16
ret
mov
cltd
cmp
jg
pop
xor
dec
mov
cmpl
jo
jecxz
nop
dec
lock
pop
fucomp
and
sti
adc
push
mov
adc
push
xchg
cs
out
pop
xchg
aad
xor
clc
jle
loopne
cmp
aad
lret
cmc
sub
int
ficoml
and
jne
rcl
dec
movsl
lea
inc
lods
lret
and
mov
shll
and
inc
or
rorl
movsl
sbb
int
in
cmpsl
push
mov
ret
aam
pop
hlt
stos
lods
push
adc
insb
mov
sbb
jne
pop
and
jmp
mov
imul
pop
xchg
out
les
xlat
into
test
outsb
js,pt
sub
mov
mov
pop
out
fisttpll
ss
mov
pop
inc
test
mov
sub
pandn
xor
xchg
add
fnstcw
add
lods
pop
js
add
test
cmpb
sbbl
sbb
add
mov
mov
mov
in
push
hlt
dec
mov
iret
movsl
pop
es
aam
iret
push
test
sub
jo,pt
jle
addl
xchg
loopne
pop
mov
cld
mov
xchg
lret
and
jb
lock
ss
xchg
stos
stc
aaa
cltd
int3
xor
push
popa
outsb
arpl
jmp
dec
sarl
aad
shr
popa
addb
adc
push
push
inc
xchg
jbe
adc
sub
lods
shlb
xor
decb
adcl
dec
sub
mov
pop
cmp
cwtl
roll
inc
push
loopne
and
inc
inc
or
bound
inc
push
pop
rorb
outsb
sbb
cmpl
das
mov
loopne
cmp
int
popa
ret
jg
and
inc
add
sbb
out
mov
pop
sub
in
mov
mov
lahf
outsb
mov
cltd
leave
mov
in
ret
outsb
inc
cwtl
lret
cmp
lock
out
pusha
test
mov
mov
push
push
out
cli
divb
push
push
mov
test
pushf
sahf
insl
pop
lea
rolb
flds
sbb
call
int3
shrb
pop
fiadds
pop
insl
xchg
loope
cli
mov
jle
push
and
jge
xor
push
sbb
pop
sub
mov
out
mov
cmp
xchg
cmp
movl
sti
cmp
and
arpl
push
pop
icebp
in
inc
pop
notl
adcb
lret
jae
insl
pop
pop
inc
inc
lahf
xchg
in
inc
lods
enter
jecxz
mov
jae
xchg
das
dec
test
cmp
iret
lods
scas
fchs
sub
je
aaa
loope
xor
bound
inc
divl
inc
sbb
mov
aas
push
mov
push
dec
add
pop
cmpsb
or
mov
mov
pop
xlat
push
jle
pop
pop
fistl
enter
sbb
xchg
jmp
pushf
mov
outsl
or
std
out
mov
loop
ljmp
push
dec
lret
adcb
mov
mov
jp
out
jp
or
out
mov
mov
int
push
or
inc
imul
push
mov
xor
test
mov
mov
lods
lods
cmp
mov
pop
xchg
mov
loope
xchg
out
add
lds
add
mov
add
pop
xor
cmp
enter
test
daa
xchg
insl
mov
test
lods
lret
lods
ja
js
sub
ffree
in
cmc
arpl
pusha
inc
jmp
sub
push
sbb
and
mov
push
std
ret
add
mov
xor
rorb
push
popa
in
sbb
pop
int
test
cmp
jbe
push
adc
test
sarb
cltd
jne
int
mov
daa
dec
in
mov
and
pushf
in
or
mov
sahf
comiss
cs
adc
lock
xchg
mov
loope
add
cmc
insb
pop
jp
mov
adc
xor
xchg
and
rcrl
nop
clc
sbb
and
and
icebp
lock
cmp
jo
nop
std
push
inc
popf
jp
das
frstor
sub
andl
fwait
scas
adc
js
leave
bound
and
scas
xchg
cmc
outsb
fsubr
adc
cld
sub
stc
gs
cld
aam
insb
clc
add
insl
jbe
inc
in
push
fwait
pushf
sbb
sbb
adc
push
push
fnclex
loopne
xor
pop
cmpb
add
stos
cmc
jno
jge
push
sbb
add
mov
jae
bound
fmull
inc
leave
cmp
std
push
lods
popa
and
adc
lods
push
shr
add
cltd
daa
jecxz
test
add
aam
mov
pop
enter
add
push
bound
test
cmp
ds
sahf
jbe
add
fmuls
xor
mov
sbb
xlat
fidivrs
movsb
xchg
mov
out
sub
out
outsb
mov
and
push
iret
repnz
or
cmc
cld
inc
cmp
cmp
in
sti
inc
out
push
mov
mov
push
inc
outsl
and
jecxz
mov
add
aam
test
xchg
iret
fwait
mov
push
add
mov
xchg
int
jo
outsb
xchg
pop
inc
and
scas
jnp
lods
lcall
dec
add
cmpsb
cmp
out
or
mov
add
test
xchg
ret
jl
mov
jne
loope
pop
aad
sub
imul
jecxz
jle
xchg
push
in
repnz
jb
xchg
cmp
mov
add
insb
jecxz
mov
mov
lds
lods
sarl
fisubs
rolb
jecxz
jg
sub
pop
scas
sbb
arpl
inc
cmc
daa
sbb
out
mov
pop
jbe
cmp
cmp
pop
imul
aaa
adc
lea
inc
mov
bound
jb
xchg
sbb
mov
shl
popa
mov
lods
ret
sbbl
roll
iret
sbb
shlb
in
jp
data16
adc
sbb
pushf
movsb
pop
in
std
jge
pop
ret
push
push
scas
sub
insl
mov
and
popa
xchg
xchg
add
jbe
mov
int3
jl
mov
mov
in
cmc
mov
ret
and
fadd
jecxz
ss
fdivrl
test
mov
popa
add
pop
mov
ret
add
into
das
clc
inc
dec
out
aad
fldenv
jmp
adc
ss
xchg
cmp
push
xchg
and
sub
in
or
sub
or
js
sub
inc
adc
push
sub
jge
lret
jo
and
loop
jmp
div
loop
aaa
addr16
jge
stos
loop
testb
data16
mov
pop
and
xor
in
xorl
inc
and
ss
roll
and
iret
mov
add
cmpsl
dec
mov
mov
lret
mov
adc
dec
repz
incl
and
test
cmpsb
test
out
jle
rcll
sbb
test
es
iret
mov
iret
mov
lods
mov
pop
push
adc
enter
cwtl
lahf
or
jne
in
pushf
in
imul
jne
cmpsb
gs
pop
popf
orl
xor
addr16
or
mov
cmp
jns
mov
fwait
scas
test
jg
rolb
and
sbbb
mov
inc
xchg
cvttps2pi
fdiv
sub
test
mov
cmpsl
jns
inc
ret
jbe
ljmp
iret
lods
or
xor
push
addr16
mov
data16
mov
mov
pusha
xchg
int
sub
xchg
mov
mov
push
mov
outsl
add
inc
mov
cmp
push
or
sbb
iret
lahf
xchg
xchg
or
outsl
ret
cli
leave
push
iret
xor
nop
add
ds
push
jge
xchg
imul
in
sub
push
cmp
pop
dec
fcmovne
mov
loopne
and
aas
dec
sarl
add
adc
test
scas
repz
test
out
or
xchg
and
cmp
and
imul
int
outsl
fsubl
idivl
push
or
aas
outsb
hlt
enter
in
cmpsb
js
push
cmp
ret
lahf
repnz
adc
and
jo
popl
das
insl
loop
and
xchg
stos
gs
mov
xchg
lret
xchg
or
ljmp
mov
inc
popf
adcl
dec
sbb
test
mov
sarb
jmp
out
iret
jb
lods
dec
les
push
addr16
pop
aas
xchg
dec
push
jle
pop
add
in
push
adc
mov
ljmp
clc
pop
shl
or
mov
loopne
out
push
adc
cltd
push
cs
outsb
xchg
inc
out
mov
adc
dec
xorb
cli
fdivl
xlat
in
adc
jle
pop
test
jns
cltd
jle
mov
dec
daa
sbb
sub
jl
mov
outsb
mov
cmc
sbb
push
imul
imul
or
fwait
rcll
les
andb
ret
mov
or
mov
out
cld
sbb
or
loop
add
cmp
adc
repnz
jno
mov
ret
in
adc
pop
mov
cmc
push
ud1
sub
sbb
fsubrs
loopne
out
mov
jp
fidivs
mov
subl
movsb
mov
cld
push
cmp
and
aas
xor
fcoml
mov
mov
mov
dec
mov
push
mov
rclb
push
rclb
jnp
cltd
sbb
pop
lds
cs
jp
sbb
js
cli
into
movsl
xor
add
iret
and
cltd
push
and
cs
pop
push
push
cmp
inc
out
sahf
cmpl
ret
sub
cwtl
xor
rorl
add
push
xchg
xchg
mov
cmpsl
pop
xorl
les
fnstsw
mov
insb
jecxz
or
push
jle
mov
sti
xchg
out
mov
jmp
xchg
andl
mov
sbb
add
sbb
test
dec
ds
stc
iret
jg
ret
test
jo
lock
jns
cmc
push
nop
outsl
jg
push
fisubs
insb
stos
inc
stos
outsb
dec
ljmp
jo
xor
nop
es
ffree
or
out
lock
test
sbb
adc
rcrb
jne
jns
jle
shrw
mov
les
dec
insl
fdivrs
gs
dec
out
jp
mov
mov
subb
jp
daa
inc
inc
xor
inc
pop
cld
out
jne
add
add
fldl
cmpsl
fdivrs
ret
mov
or
dec
out
and
daa
push
and
pop
sahf
repz
pop
and
inc
fcompl
ss
or
pop
cmp
mov
cli
fsubs
push
lds
mov
rcrl
cmpsl
and
mov
add
sbb
loop
push
adc
nop
cmp
cmpsl
push
ud2
adc
je
xchg
sub
dec
out
xor
cli
test
inc
adc
scas
jne
mov
or
sahf
int3
inc
xchg
add
mov
push
sub
cmpsl
test
das
sbb
int3
stc
xchg
inc
mov
xchg
push
jns
pop
dec
inc
sbb
cmpb
hlt
mov
push
adc
imul
push
ret
mov
lds
test
xchg
sub
repz
incb
dec
fldenv
jnp
test
daa
pop
sbb
out
jmp
mov
add
xchg
shll
push
jmp
cli
ja
shrb
sbb
cltd
jle
sti
add
inc
rcll
mov
in
testb
inc
xor
lods
pop
sahf
xlat
push
bound
or
inc
push
dec
and
cmp
scas
outsb
cmc
out
gs
movb
and
and
mov
mov
mov
in
stos
and
xchg
rcrb
sub
ret
shl
insb
stos
pusha
adc
out
xor
inc
mov
fisttpl
icebp
push
sbb
xor
js
fmuls
shll
push
icebp
mov
ret
loopne
repnz
cmp
lds
jne
fsts
not
rcll
fsubrs
mov
jle
xor
in
outsb
ss
mov
ficoml
imull
in
dec
cli
xchg
jecxz
stos
scas
fildl
mull
test
xchg
enter
es
faddl
inc
push
jnp
xor
adc
iret
sbb
js
mov
pusha
nop
mov
ret
cld
jge
bound
fwait
sub
add
loopne
test
mov
pusha
mov
fucomi
ss
xlat
jne
test
outsb
and
sub
or
mov
stos
inc
cmpsb
inc
push
test
fsubrs
cmpsl
pop
pop
dec
stos
dec
push
addr16
xchg
in
sub
jl
mov
ret
fnsave
inc
jb
cmp
cmp
mov
sub
ljmp
fcomi
ret
xlat
in
iret
fnstcw
sub
xchg
imul
outsb
adc
stc
aad
xchg
mov
push
sub
test
mov
outsb
dec
xor
fndisi(8087
xchg
aaa
cld
ja
cmpsb
jne
push
or
sbb
or
pop
mov
pop
pop
sub
pop
lds
dec
or
cmp
adc
out
pop
andb
mov
sub
adcl
stc
sbb
rcll
movb
into
lret
cli
and
and
nop
andb
add
out
cmp
xchg
in
jmp
fwait
sbb
mov
inc
inc
outsl
dec
inc
fnstcw
xlat
xchg
popf
fwait
sbb
outsb
stos
push
popf
shll
repz
mov
bound
cwtl
pop
cmovl
mov
inc
repnz
and
dec
or
xchg
arpl
pop
cmp
outsb
mov
pop
inc
cmp
and
movsl
and
pop
cmpb
rorl
mov
add
adc
out
xchg
or
mov
in
iret
adc
decl
mov
fistl
out
test
cmp
bound
jecxz
and
or
and
push
in
aas
sub
fldlg2
dec
xor
pop
icebp
pop
cmpsb
jb
push
ftst
orb
xchg
fstpt
loopne
mov
popf
push
inc
cmp
jo
jmp
nop
sub
addr16
inc
mov
jge
inc
mov
sbb
sbb
icebp
adc
push
pop
mov
stc
inc
cwtl
sahf
jae
les
stos
pop
fcmovbe
xor
insl
jne
ljmp
pcmpgtb
jecxz
in
leave
lret
in
lcall
sbb
lret
and
arpl
bound
xor
xchg
ret
push
into
call
dec
sbb
xor
add
xchg
sub
lds
dec
lods
data16
mov
sbb
cmp
or
dec
push
sbb
jl
mov
js
dec
sub
sub
lods
clc
pop
mov
out
sahf
in
flds
je
dec
xchg
pop
scas
and
adc
xchg
ss
enter
adc
mov
lock
or
test
cmpl
xor
rcrb
and
js
ljmp
cmp
lret
lods
or
ret
test
aad
add
xor
push
xor
adc
sbb
popf
adc
xchg
negb
add
xchg
movb
imul
sbb
adc
arpl
push
or
lret
cmp
stos
push
popf
daa
sub
movsb
inc
xchg
inc
ja
and
pop
jle
inc
push
mov
lods
popa
adc
fcompl
cmp
loop
xor
inc
jno
push
sub
push
push
pushf
jne
sbb
jns
outsl
ror
sbb
fnsave
jne
lock
fiaddl
shll
clc
sub
mov
cmp
iret
fwait
iret
cwtl
shl
jmp
outsl
in
pop
pop
les
add
fstp
negl
cli
cli
xchg
movb
sub
mov
imul
jno
dec
pop
xchg
fildl
sub
mov
mov
ljmp
cmc
push
loopne
mov
gs
in
fwait
mov
jp
sub
fidivl
add
shrl
lahf
and
loop
add
mov
fimuls
push
jl
addb
pop
mov
inc
pop
and
inc
or
aaa
shlb
mov
pop
sub
push
and
pop
adc
push
sub
cld
push
dec
jns
lcall
adc
jnp
mov
push
xchg
idiv
rcll
inc
and
jmp
cmp
fsub
sbb
ja
test
stos
push
imull
dec
jb
movsb
ds
mov
cs
add
pop
pop
ret
sbb
sbb
push
or
mov
cltd
ljmp
pop
fidivs
adc
mov
test
in
ret
mov
in
lcall
and
xor
adc
pop
jg
push
mul
mov
shlb
in
ljmp
dec
or
cwtl
inc
dec
loop
or
rclb
loop
cmpsb
push
popa
scas
xchg
push
mov
cli
cmpsb
aad
test
fadds
cmpsl
int3
out
inc
mov
cs
dec
loop
and
mov
enter
fsts
push
dec
cmc
test
inc
adc
jl
jecxz
xor
or
jl
sbb
dec
pop
mov
arpl
xchg
sub
jae
ret
push
inc
xor
repz
add
xchg
stos
out
adc
sahf
js
ds
xor
inc
inc
enter
rol
movsl
unpckhps
jo
jne
push
das
inc
std
mov
fiadds
mov
in
fisttps
mov
mov
mov
lods
xor
and
mov
test
dec
outsb
mov
in
cwtl
push
push
cmp
mov
inc
ret
jle
mov
dec
xor
dec
sarl
xchg
push
test
popa
int
lods
cmp
jo
mov
push
out
outsb
stc
cmp
cltd
ds
and
jne
xlat
cltd
cmp
sti
cmp
pop
dec
cwtl
add
jno
incl
mov
inc
mov
inc
cwtl
mov
dec
xlat
inc
jp
movsb
cmp
inc
clc
wrmsr
dec
aaa
xor
jl
mov
cwtl
sub
loopne
subb
int
adc
cmc
shlb
je
push
std
mov
or
and
mov
xchg
rorl
aad
and
add
outsl
sbb
jle
loop
xor
dec
sub
dec
dec
test
sbb
insl
push
fstp
ljmp
sbb
jecxz
jge
pushf
cmp
xchg
subw
dec
mov
lods
pop
jg
and
popf
adc
scas
cmp
or
fnstcw
stc
cmp
add
movsl
mov
mov
test
inc
rclb
xor
sar
mov
sub
jge
mov
pop
test
testl
insl
sbb
add
xchg
shrb
bound
loop
rclb
cmpsb
inc
mov
sub
cs
mov
not
add
cld
mov
int3
iret
mov
testb
and
icebp
inc
loop
sub
inc
imul
inc
lret
clc
repz
aam
sbb
movsl
adc
mov
pop
or
mov
sub
rcrl
sbb
sti
int3
int3
push
mov
pop
inc
or
xchg
cwtl
hlt
xchg
adc
mov
repnz
ljmp
cmp
cmc
imul
mov
pusha
jno
dec
int
out
jo
jecxz
jo
push
mov
lods
adc
push
fistpll
out
jb
lds
cwtl
cmp
fistl
and
outsb
push
xorb
adc
mov
pusha
std
sub
dec
add
mov
pop
mov
push
int
insl
std
xchg
rcl
jl
out
test
pop
and
xchg
cmp
sub
mov
push
in
leave
and
movsb
fwait
das
leave
push
adc
pop
cmp
push
add
pop
inc
mov
cmc
test
fdivl
mov
mov
push
push
movl
ficoms
sti
xor
push
mov
xchg
mov
popa
mov
clc
xchg
add
incb
add
fldt
aam
bound
mov
inc
subb
cli
mov
icebp
xchg
sub
icebp
es
xlat
les
pop
in
bound
lods
jg
push
jmp
fcomps
dec
daa
add
ficompl
or
pusha
pop
push
jnp
fcoml
pop
mov
push
xchg
adc
jge
adc
stos
mov
inc
gs
scas
sbb
imul
stc
shrl
or
sbb
std
rclb
jnp
negl
cli
inc
adc
inc
imul
and
enter
fistl
daa
mov
dec
xchg
adc
stos
pusha
mov
iret
cmpsb
enter
test
jb
and
mov
sbb
loopne
mov
mov
lods
mov
lock
jae
mov
pop
fidivrs
test
xor
mov
outsb
jle
sub
test
repz
jno
lahf
lcall
xchg
dec
dec
push
fstps
mov
add
cmp
out
enter
jbe
push
out
dec
pusha
gs
je
sarb
and
test
pushf
shrl
dec
mov
stos
inc
sbb
inc
mov
push
mov
shll
fldenv
call
mov
jno
cld
cwtl
div
mov
fstpl
das
xor
pop
mov
clc
lods
sbb
movsl
cmp
loope
sub
xor
stc
popf
mov
loope
test
push
push
push
jmp
jbe
mov
xor
sub
dec
mov
jno
inc
push
sbbl
push
and
outsb
js
pop
xchg
pop
out
das
mov
ljmp
xchg
adcl
in
xchg
addr16
pushf
dec
sti
call
jb
xchg
mov
xor
ljmp
sarl
mov
xchg
cltd
out
sbb
cmp
stc
lret
mov
jl
sti
call
cld
jp
jle
daa
or
mov
sti
jg
daa
scas
loopne
push
cmp
mov
mov
pop
call
shrb
pop
inc
push
mov
test
in
xor
mov
xchg
std
int
repnz
mov
pushl
ficoms
dec
cmp
push
or
jb
add
and
sub
orb
movsb
shl
sub
fadd
jns
bound
xchg
ljmp
sbb
jbe
cwtl
scas
cwtl
xchg
aad
mov
cs
jge
lods
xchg
pop
push
sbb
cwtl
movsl
pop
jnp
dec
into
inc
add
leave
xchg
lods
sbb
mov
jo
lds
push
rcll
push
lahf
pop
mov
xchg
mov
popf
push
js
dec
por
sbb
aam
xchg
pop
test
dec
pop
add
dec
lret
mov
lds
xchg
jne
inc
mov
daa
das
adc
pushf
inc
pop
outsl
mov
mov
ficomps
pop
ret
xor
mov
test
xchg
leave
mov
arpl
aas
stos
inc
mov
cltd
dec
mov
push
add
jmp
cwtl
pop
sbb
inc
loopne
dec
mov
out
out
fldcw
fistpl
popa
outsl
or
fstpt
cmpsl
bound
scas
mov
adc
xor
mov
loop
mov
js
mov
xchg
jl
sub
cmp
sbb
mov
test
mov
test
inc
xchg
loop
or
sub
sub
imul
push
or
sbb
in
rcll
pop
sbb
add
and
mov
inc
push
vandps
mov
xlat
xchg
fdivl
std
stos
loop
pop
pcmpgtb
test
repnz
cs
insl
push
cltd
ja
test
fmull
push
fidivrs
inc
xchg
mov
sbb
mov
dec
mov
sub
mov
aas
mov
mov
jbe
out
and
loop
and
pop
and
xchg
sub
or
dec
sub
jecxz
jle
stos
xchg
shl
add
push
faddl
xchg
fabs
cmp
add
mov
push
lahf
xchg
jge
cwtl
in
out
faddl
mov
clc
pushf
adc
adc
inc
fdivrs
adc
mov
pop
cs
shlb
xor
mov
jmp
sti
out
pop
std
out
or
lds
loop
lods
pop
pop
das
fistpll
fistpll
sbb
test
fucomp
and
mov
mov
lahf
cmp
sbb
dec
mov
xlat
xchg
test
ljmp
ljmp
xor
lods
popf
imul
int
movsl
fstp
out
in
mov
ds
inc
sbb
shlb
dec
std
dec
mov
icebp
addr16
mov
loop
xchg
jns
sub
pusha
xor
add
jle
stc
aam
or
hlt
test
xor
mov
sbb
dec
adc
ljmp
cmpsb
es
mov
mov
cmp
push
adc
movsl
sti
arpl
xchg
jecxz
in
cmp
jno
push
dec
push
dec
cmpsl
or
mov
call
push
int3
mov
enter
sub
push
pusha
iret
add
jle
call
and
or
in
mov
jp
stc
mov
fwait
dec
pop
stos
jbe
xchg
test
dec
add
and
stc
cmpsl
loopne
mov
jle
andb
inc
movsl
mov
idivl
imul
gs
inc
in
mov
aam
mov
xor
xchg
lock
cmp
mov
mov
mov
dec
push
imul
cld
sbb
dec
inc
mov
shll
lahf
mov
push
add
adc
sti
push
icebp
jl
cwtl
sub
imul
rcrl
push
or
dec
es
roll
icebp
movsl
out
inc
imul
mov
out
imul
repz
insl
fdivrs
push
or
pusha
js
sbb
movsl
add
xor
jae
sbb
xlat
stos
rcl
cmp
sbb
pop
mov
sti
lea
add
icebp
movsb
inc
shll
lds
jno
dec
imul
popf
imul
jne
iret
mull
xchg
mov
out
iret
pop
mov
xor
pusha
jb
int
addb
lock
sbb
pusha
cmc
inc
cmp
inc
das
pop
nop
popf
mov
jns
fsubs
in
mov
stos
add
push
dec
mov
xor
jecxz
std
sub
cmp
sti
push
ret
and
inc
imul
fisubrl
cmp
pop
jg
or
shl
or
ljmp
into
test
push
test
ljmp
sbb
mov
cmc
mov
subl
xchg
pop
aad
nop
clc
add
inc
mov
ret
xchg
scas
mov
push
push
dec
xchg
bound
aas
cli
int3
xchg
push
mov
fisubrl
jp
cmp
lret
repnz
mov
int3
push
gs
mov
add
mov
push
dec
and
nop
mov
lds
fldl
lret
mov
out
fdivrp
mov
out
fcoms
sti
inc
stos
xchg
fiaddl
sti
es
leave
sbb
pusha
cld
iret
mov
imul
pop
fists
add
sub
jecxz
icebp
ljmp
ret
sbb
stos
jp
cld
cmpsl
daa
clc
dec
adc
adc
mov
mov
mov
jnp
aam
lods
mov
inc
or
cmp
sar
fisttpll
lret
sbb
cmpsl
leave
fincstp
ret
pop
jl
push
out
push
pop
cmp
fldenv
mov
jp
dec
test
xchg
gs
out
xor
sub
lds
rorl
push
add
inc
stos
or
push
or
hlt
lods
out
sub
xor
mov
and
stos
femms
adc
ret
xchg
out
jg
xchg
rorb
mov
mov
or
outsb
rcll
jb
out
addr16
jno
inc
mov
cmpsl
out
xchg
jp
add
aam
mov
scas
inc
out
sarl
pop
pop
jge
jo
sub
shr
pop
lcall
push
xchg
into
imul
sbb
stos
xor
push
xor
lock
pop
sbb
jl
xor
filds
inc
lods
test
mov
jb
adc
or
dec
jmp
stos
cmp
mov
mov
xchg
int3
das
das
imul
xlat
adc
mov
lret
fs
jle
jle
add
adc
in
cmp
mov
jae
jge
mov
shl
sbb
es
xchg
inc
mov
addl
out
cmc
cmp
jecxz
adc
sbb
ds
movsl
jae
ret
jae
jbe
add
cmp
push
leave
repnz
inc
pop
jno
sbb
aas
andb
lock
pop
loope
lret
xchg
lods
mov
rcll
and
test
pop
stos
mov
sahf
push
dec
bound
lods
adc
xor
jnp
and
dec
je
or
mov
mov
jbe
push
push
lods
add
in
mov
subb
xlat
pop
mov
lods
movsb
jl
xchg
or
popa
mov
repz
loop
stos
rorl
loope
sub
in
mulb
fsubrl
sbb
rcll
in
popf
rclb
inc
xchg
cmpl
scas
jle
dec
imul
loope
push
bts
fmuls
jbe
outsl
rclb
inc
push
cmp
dec
pop
inc
enter
test
xor
loop
pop
rclb
sub
jae
xchg
push
push
adc
cmp
inc
inc
jp
inc
mov
insb
dec
push
push
in
fidivrl
lds
dec
outsl
xchg
sbb
cmpsl
sub
mov
xor
sbb
scas
or
xchg
je
lock
stc
xor
add
stc
sub
sbb
inc
push
xchg
out
mul
sahf
outsb
les
popf
inc
fistpll
push
sbb
push
insl
out
out
lods
rorl
aam
mov
xchg
jo
pop
add
repnz
jne
lret
push
div
mov
pop
std
sahf
mov
mov
jp
ss
and
dec
out
ss
aam
sbb
scas
lock
mov
pop
es
push
inc
sbb
imul
test
mov
xor
dec
sub
mov
repz
pop
rcr
pop
imul
icebp
aad
jae
dec
inc
jge
cmpsl
cmp
out
xor
lds
cmpsl
cmp
add
push
xchg
cmp
jno
jge
pushf
mov
inc
mov
jge
fstpt
add
lds
lret
sbb
lods
dec
or
inc
inc
xchg
addr16
sbb
push
pop
loopne
sbb
jecxz
ret
and
hlt
xchg
test
movsl
jnp
inc
xchg
adc
shrl
jmp
and
roll
pushf
int3
add
sub
mov
add
push
xor
enter
jl
mov
stos
mov
das
xchg
adc
lock
dec
push
cs
jnp
jnp
andl
out
mov
mov
push
mov
push
std
mov
cmp
mov
inc
push
lods
and
js
fsubrl
insb
sti
jmp
test
sbb
dec
gs
cmp
jl
or
mov
jno
jae
xor
sub
iret
popf
push
cmp
stos
adcb
int
sub
jae
lret
out
rclb
adc
push
mov
adc
int3
pop
sub
ss
and
lahf
mov
push
and
out
inc
ret
mov
pop
out
pop
mov
pusha
lock
xchg
fisttpll
add
push
out
rorb
xor
push
xrelease
push
inc
stos
push
xchg
inc
or
dec
clc
push
ljmp
add
cmp
daa
jno
loop,pn
icebp
lods
jbe
repnz
xor
push
xchg
test
fsubrl
lret
ja
pop
cmp
fldt
ret
sbbl
pushf
fdivs
aad
mov
ja
ds
sbb
xor
repz
pop
add
in
nop
rorb
pusha
mov
in
insl
dec
cltd
mov
dec
and
jge
mov
iret
dec
lahf
inc
arpl
sbb
fcomps
stos
mov
jge
and
repnz
adc
outsl
or
in
data16
in
dec
xor
bound
sub
xchg
nop
mov
cs
or
hlt
loopne
inc
jns
and
aam
adc
lds
jae
imul
jmp
incb
scas
jae
std
cmp
cmp
into
push
jo
bound
into
test
lock
ret
or
into
jnp
or
into
pop
jmp
cmp
push
jo
pop
lods
xchg
imul
sbb
add
jmp
push
pop
sbb
mov
push
mov
divl
pop
sub
cmp
jnp
xchg
push
adc
or
popa
and
pop
dec
mov
jo
popa
and
xchg
das
push
push
or
jno
ja
add
lods
out
adc
int
xchg
mov
gs
fwait
aam
clc
inc
es
inc
and
cmp
inc
mov
jne
ret
jg
popf
add
js
add
shlb
mov
out
push
cmp
call
and
pop
mov
xor
mov
mov
add
pop
daa
movb
jmp
iret
pop
jmp
xor
pop
mov
inc
dec
test
push
lea
cmc
fwait
out
jg
cs
mov
addl
dec
jl
sbb
adc
mov
and
jp
in
dec
rol
mov
lcall
repz
nop
loope
ror
fidivl
jbe
addb
sbb
jns
ret
into
lods
cmp
xor
jne
sub
test
cmp
sub
mov
and
and
lods
ja
xor
or
xor
pop
sub
push
int3
jp
mov
mov
cmp
subl
mov
cmp
or
std
xchg
es
das
std
outsb
push
add
sbb
fwait
sbb
add
loope
dec
mov
push
or
std
or
int3
sub
mov
adc
out
jbe
mov
sbb
push
cmp
mov
cmp
cmp
and
aam
push
and
cmpsb
sahf
inc
jl
outsl
jmp
cmp
adc
adc
and
cmp
and
lret
ja
push
rcrb
jmp
rorb
fsubrl
cmp
fisttpl
addl
jno
push
aas
pusha
je
sub
jno
add
clc
adc
movsl
adc
mov
cli
cld
push
ds
rcrb
aas
lds
inc
pop
pop
sbb
jns
dec
mov
inc
cli
movsl
xlat
adc
mov
mov
test
loopne
cmp
out
sbb
loope
add
aam
into
cli
mov
inc
adc
add
stos
int3
sub
push
nop
dec
rolb
pop
or
lods
mov
pop
and
cltd
in
stos
and
mov
repz
sub
xor
adc
leave
daa
or
mov
mov
add
pop
dec
xor
jae
and
adc
fistps
pusha
mov
mov
xor
or
mov
mov
addr16
lods
inc
into
push
pop
je
aad
mov
fsubp
xor
loopne
scas
mov
stos
data16
sub
in
clc
push
mov
rclb
sbb
adc
add
mov
mov
mov
loopne
rcll
push
push
cmp
fwait
imull
icebp
dec
sbb
test
rorl
pop
pop
stos
mov
outsl
jg
call
nop
cmovs
sbb
std
stos
push
mov
mov
jg
movsl
stos
xchg
or
mov
lds
lret
push
out
shlb
mov
adc
or
cmp
pmuludq
je
mov
repz
inc
pushf
cmp
and
mov
imul
cltd
pusha
xor
cs
es
lea
xorb
mov
adc
push
cmp
mov
bndldx
pop
es
cmp
imul
lret
repz
ror
sbb
std
mov
pop
jmp
mov
cmpsb
popf
scas
insl
sti
test
jp
js
jns
push
cltd
sub
notl
lods
mov
nop
pop
rorb
imul
dec
mov
aaa
mulb
add
xor
int
mov
jmp
addb
popa
loop
mov
mov
jle,pn
mov
ret
mov
inc
scas
fisubrs
adc
and
push
add
in
dec
test
outsl
xchg
es
xlat
mov
or
mov
jb
mov
ja
adc
xor
shrb
push
jbe
call
sbb
mov
mov
push
ret
mov
addr16
mov
pop
push
push
jnp
sub
rcrl
mov
dec
loopne
stos
add
insb
ljmp
int
daa
movsb
push
push
jne
lock
fcomps
scas
or
sub
lods
rcrb
fwait
mov
scas
sub
lds
adc
jg
add
mov
xor
nop
nop
sub
xor
jno
add
bound
mov
aam
or
in
pop
bound
in
and
ljmp
cwtl
cwtl
jl
loopne
imul
and
std
sbbb
jecxz
pop
into
js
daa
mov
lods
add
out
add
xchg
push
pusha
in
mov
shll
inc
leave
pop
xchg
push
dec
dec
jg
push
cwtl
rorb
pop
loopne
sahf
aas
fnsetpm(287
or
stos
icebp
push
push
push
inc
mov
daa
movsb
push
jno
sbb
cmpsl
test
movsl
ljmp
out
pop
mov
jl
mov
bound
ss
orl
test
push
add
mov
fwait
clc
xor
das
loop
addr16
das
aam
adc
xor
push
mov
inc
push
push
pop
adc
mov
jbe
cmpsl
ljmp
mov
std
lret
dec
sub
push
bound
or
call
xchg
dec
mov
or
cmp
xor
xorb
insb
sub
inc
push
jne
adc
ds
cmp
jecxz
and
cmp
add
add
fidivs
mov
xchg
orl
insl
pop
push
cmp
repnz
jmp
mov
jne
dec
cmp
sub
sahf
aad
xor
jecxz
mov
jo
std
fadds
and
and
push
int3
mov
mov
stos
dec
sub
mov
push
rcll
test
cltd
add
fistps
shrl
pmulhuw
jl
int
data16
and
fdiv
stos
inc
mov
les
push
sbb
repnz
mov
in
jae,pt
cli
push
pop
xor
jnp
jb
push
jge
js
incb
cmp
xchg
xor
adc
xchg
inc
push
mov
cmp
loop
add
jno
jb
sti
insl
fbstp
ret
pusha
mov
cmovnp
clc
mov
int
shrb
mov
sub
cmpsb
fldenv
test
and
loope
in
and
cmp
fidivl
jno
movsl
out
push
pop
mov
aam
fwait
mov
jecxz
sti
movsl
lock
dec
push
stos
xor
sbb
cli
sahf
popf
dec
insb
push
sar
les
mov
or
in
inc
cmp
lods
or
ret
mov
mov
loop
cs
cs
loop
stos
mov
jl
add
or
xor
lock
pop
shufps
idiv
aas
add
in
pushf
mov
sbb
push
push
pop
repnz
loopnew
cmp
test
sti
inc
cmp
push
and
addr16
xor
imul
add
lahf
pop
mov
mov
loope
enter
inc
mov
outsl
cld
mov
les
push
and
mov
test
mov
and
mov
dec
add
dec
xor
cmpsb
mov
fwait
inc
push
insl
xchg
sub
clc
xchg
mov
inc
fldl
add
call
sbb
out
or
pop
add
out
sahf
test
cwtl
push
xchg
push
sbb
daa
nop
imul
movsb
mov
mov
repz
fstpl
xor
mov
jno
sub
ljmp
mov
cmpsl
lds
mov
inc
arpl
loope
clc
je
mov
pop
xor
or
cmp
pushf
or
jo
imul
imul
pop
jp
roll
nop
js
push
repnz
and
cli
pop
stos
pop
mov
dec
fnstenv
loope
and
test
data16
jnp
daa
push
inc
or
sub
popf
xchg
out
in
outsl
mov
adc
jb
popf
iret
add
data16
in
stos
cmp
cmp
mov
cmpl
roll
mov
sbbb
xchg
lea
xlat
in
fcmovnbe
pop
ret
jg
fwait
push
mov
lahf
mov
jp
xlat
sbb
pop
cmp
rorb
test
inc
fs
fsubs
and
xor
xor
in
jecxz
cmpsl
rclb
mov
xlat
sahf
sarl
jbe
scas
cld
repz
rolb
aam
xchg
jmp
mov
pop
mov
mov
xor
inc
adc
cld
daa
dec
cld
push
mov
out
fwait
mov
inc
cmc
cld
push
inc
adc
xchg
adc
in
add
mov
enter
inc
inc
xchg
popa
in
test
mov
inc
sub
rorl
or
fcomip
lahf
daa
sub
and
cmp
mov
jmp
in
out
out
jl
jo
fisttpll
call
in
sub
or
xlat
push
outsl
jo
xchg
mov
xchg
sub
xor
mov
inc
jg
sub
cmp
sahf
fbstp
cli
or
adc
hlt
idivb
lret
push
xchg
xor
fists
mov
mov
testl
jns
popf
and
jl
inc
movsb
outsl
jg
inc
cmp
adc
and
jecxz
inc
test
push
nop
shlb
scas
add
mov
jo
mov
fbld
cli
dec
icebp
pop
or
pop
jg
dec
jno
stos
out
or
cltd
xchg
sub
mov
ficoms
fistps
xor
mov
mov
push
cmp
xor
mov
xchg
xchg
inc
jle
shrl
aas
mov
idivb
dec
xorl
inc
push
or
inc
xchg
jbe
mov
clc
fs
imul
xor
push
fs
idivl
lea
negb
mov
sub
fimuls
mov
xorb
stc
or
icebp
sarl
inc
push
xchg
cmp
mov
test
daa
out
sbb
das
ret
insb
das
test
test
jle
scas
lea
in
divb
lods
add
int
ja
out
mov
sub
lods
lock
jbe
push
xchg
js
dec
jecxz
pop
out
sub
pop
fldl
mov
and
lret
sub
mov
aad
xor
dec
mov
mov
sbb
repz
mov
fcomp
add
vmulss
fsts
and
jo
adc
pop
je
adc
and
push
mov
cs
cmp
mov
pusha
pop
repnz
mov
jne
dec
adc
sub
ss
jmp
adc
cld
mov
jnp
arpl
inc
mov
test
mov
dec
ds
jno
in
repnz
add
dec
xorl
sbb
leave
push
mov
repnz
clc
jmp
dec
sbb
xor
test
movsb
jae
sahf
pop
fs
test
mov
test
xchg
add
outsb
shlb
and
shl
ret
inc
repnz
testb
fsubrs
xor
imul
int
outsb
xchg
insb
push
pmullw
arpl
jb
and
int
mov
rolb
fildl
or
push
scas
mov
lret
mov
jge
mov
mov
cmp
test
nopl
popf
clc
test
negl
lcall
shll
lds
fs
cmpb
imul
add
push
cld
movsl
shll
cmp
jb
and
jnp
add
outsl
jg
repz
mov
and
xor
sahf
stos
add
push
mov
cmp
insb
cmc
in
scas
sbb
stc
fsubrs
mov
out
mov
dec
sub
lret
pop
push
movsl
jmp
pop
jbe
add
sub
cmp
and
ljmp
loope
mov
or
loopne
push
in
lods
sahf
hlt
daa
dec
cmp
mov
adc
aaa
insl
imul
add
icebp
out
jecxz
aam
fistl
aas
dec
loop
pop
test
xor
sbb
and
clc
gs
xor
jl
cmp
daa
outsb
mov
push
fadds
mov
test
jb
or
xchg
fwait
int
cmc
lahf
cmp
test
mov
testl
or
out
inc
rorb
adc
add
fisttpl
es
jne
push
pop
out
add
mov
hlt
pop
fnstcw
cld
mov
lods
dec
cmp
and
push
cmc
test
and
mov
push
jp
stos
out
push
jle
or
jl
fdiv
std
cwtl
not
outsl
icebp
sub
jle
fiadds
adc
push
jecxz
dec
jbe
sbbl
es
xchg
cld
bound
mov
in
inc
or
add
lret
shr
mov
and
fildl
add
ret
or
iret
int3
pop
mov
loop
loopne
push
call
imul
add
cmp
ret
aad
cld
popa
adc
std
cmc
ja
in
xchg
adc
js
addr16
cmp
sbb
movsb
enter
and
push
mov
call
stc
in
jne
hlt
push
mov
push
xor
aas
jl
mov
adc
mov
push
dec
out
test
push
push
xchg
push
jno
and
cwtl
out
pop
es
insl
aam
int3
orl
cmpsl
dec
stos
inc
mov
ret
xlat
inc
movntq
out
fistpll
fstp
in
pop
mov
enter
mov
adc
xlat
or
popa
and
in
dec
add
fstps
aam
mov
fidivrl
pop
dec
mov
aam
negb
mov
xor
popa
rolb
jmp
mov
rorb
fidivs
pop
pop
mov
pop
add
push
insb
aas
pushf
mov
in
es
inc
divl
pop
sbb
mov
mov
out
sub
dec
jno
ja
push
daa
adc
lods
stos
sub
and
aaa
jl
jno
pop
xor
popf
pop
cmp
cltd
fstl
sahf
std
jns
push
cmp
push
cli
add
mov
clc
xchg
mov
imul
xchg
and
or
pushf
mov
lret
fldl2t
flds
jmp
inc
adc
cmp
cmp
sub
add
push
mov
mov
jecxz
subl
stos
lret
test
out
into
jg
stos
xor
sbb
xorl
popa
mov
insb
jmp
icebp
and
mov
lds
aad
mov
pop
sbb
out
aas
fwait
or
push
rdpmc
cmp
xchg
lcall
clc
scas
mov
push
inc
ljmp
scas
jb
jecxz
lds
inc
daa
or
jo
xor
fsubrl
cwtl
mov
roll
push
dec
iret
flds
dec
pop
lods
lahf
inc
sbb
cmp
in
fidivrs
adc
addb
jo
jmp
cld
movsl
test
pop
mov
push
cld
outsb
and
subl
outsl
pop
cmp
outsb
sbb
mov
pusha
shrl
adc
mov
xchg
jp
out
pusha
mov
dec
in
jmp
lods
mov
xor
xor
scas
sub
pop
pop
mov
or
test
dec
inc
lds
inc
push
mov
xor
nop
fistpl
and
adc
mov
divl
lds
daa
mov
push
cmp
rolb
pop
in
cwtl
int
mov
subb
outsl
mov
aaa
cwtl
sbb
inc
xor
icebp
mov
xor
mov
mov
ja
nop
dec
sub
inc
push
xorb
jmp
xchg
js
aad
faddp
add
cmp
adc
rclb
mov
out
mov
jno
cmp
pop
cmpsl
sub
out
imul
or
mov
xchg
lock
adc
push
imul
stc
pop
push
add
cwtl
sahf
dec
les
pop
adc
sbb
icebp
adc
loop
or
lods
test
jnp
sbb
inc
sahf
andl
add
mov
push
test
lcall
roll
add
lea
inc
aaa
mov
cmc
repz
fsubrs
das
and
mov
scas
outsb
es
sub
or
xor
pop
xchg
std
and
lds
push
cli
cmp
sub
cmp
int
adcb
clc
xchg
rcrb
sbb
push
leave
stc
and
fists
movsb
insl
ja
cmp
sub
jmp
jb
sub
das
orl
aam
adc
sub
jle
adc
mov
xchg
inc
push
fdivrl
mov
sbb
fidivl
popl
mov
es
lret
sub
sbb
adc
aas
dec
addr16
fmull
scas
dec
push
jge
and
pushf
mov
pop
loop
outsw
inc
stos
insb
lods
and
mov
je
xchg
xlat
add
insl
nop
or
lods
fcmovb
gs
cmp
jb
movsl
jns
je
cmp
sbb
pushf
popf
adc
loop
pop
inc
insl
jp
fimull
pop
mov
adc
xchg
notl
arpl
pop
pop
cmp
mov
rcr
dec
lock
dec
repz
test
incb
adc
and
in
cmp
movsl
rolb
xor
cmp
sub
fwait
lcall
es
ds
fidivs
jne
mov
popf
lods
xor
sbb
aas
jle
cmc
scas
stos
jg
push
repnz
xorl
adc
ror
test
ss
mov
lods
dec
rcl
bound
mov
push
cltd
jmp
sbb
popf
call
dec
sahf
push
xor
addr16
sub
xchg
mov
fmul
pop
rcrl
ret
dec
cmpsb
pushf
mov
pusha
inc
addr16
xchg
xor
movsl
sub
or
stc
icebp
out
dec
lea
shlb
mov
pop
jo
fs
cld
fyl2xp1
aas
xchg
xlat
push
aam
aaa
or
pop
sub
push
xchg
scas
or
scas
mov
sbb
lock
xor
xor
daa
xchg
pop
repz
out
inc
nop
cmpb
xchg
xchg
sbb
in
adc
pop
xchg
jo
enter
inc
scas
push
sahf
inc
loop
stos
push
jne
dec
loopne
jge
xor
jmp
mov
or
out
inc
paddusb
push
fisubl
jecxz
test
xchg
mov
xchg
sbb
mov
xchg
scas
pop
mov
jo
test
pop
andl
inc
pop
mov
rcll
call
mov
jl
xor
cmp
insb
sti
int
pop
fwait
pop
jbe
xor
imul
sbb
or
sti
ffree
insb
sub
or
bound
xchg
pop
push
pushl
imul
imul
or
mov
xor
adc
outsl
mov
cld
xor
or
or
inc
sub
jl
gs
lahf
decl
add
push
pop
dec
jg
pop
inc
pusha
sub
push
in
test
add
cmpsb
sub
push
mov
cmp
into
jmp
mov
dec
jl
mov
sub
icebp
fidivrs
stos
sub
ljmp
add
push
pop
sbb
leave
sub
inc
xchg
loope
xor
popa
cwtl
int3
out
out
fwait
jmp
clc
mov
jne
sub
aas
fdivrp
xor
call
js
xor
cmp
jmp
ja
sub
or
add
or
adc
nop
adc
outsl
arpl
mov
popa
aas
push
mov
add
push
incl
jmp
pop
adc
hlt
and
nop
ss
ds
rorl
int3
repz
int3
cmp
repnz
add
clc
inc
sub
out
cmpsb
inc
arpl
pop
adc
adc
cmp
ficoml
cmp
mov
pop
sbb
fadd
arpl
inc
pop
adc
scas
mov
jl
dec
divl
stc
hlt
jecxz
sbb
push
jp
inc
test
cmc
dec
mov
jmp
movsb
pushf
fisubl
enter
sbb
mov
hlt
fsubrs
and
sub
stos
or
aad
lret
aam
jb
mov
loop
loopne
xchg
mov
mov
xor
std
mov
xor
inc
push
mov
mov
movsl
cmp
insb
mov
jae
mov
jp
std
aam
add
xor
jbe
lahf
std
aad
push
sub
jmp
adc
push
into
or
popa
fistpl
xor
or
je,pn
adcb
mov
xor
cli
into
jge
add
mov
jge
mov
ja
ret
mov
inc
pop
push
std
mov
leave
aam
mov
xchg
inc
mov
cltd
repnz
enter
push
mov
mov
pop
hlt
sub
push
sub
adcl
mov
dec
xor
test
jmp
test
aam
popa
outsl
pop
aaa
repnz
outsl
xchg
int3
mov
negl
pushl
rolb
xchg
pop
out
mov
loopne
fcmovnbe
mov
ficompl
dec
int3
cld
div
scas
adc
fdivl
aaa
xchg
and
mov
push
fcoml
or
jno
fldt
add
and
pop
fstpl
aas
jmp
pop
andl
enter
mov
aaa
dec
jo
inc
aas
push
jo
push
lret
scas
add
cmp
pop
iret
pop
cmp
mov
aas
imul
scas
mov
jnp
cltd
add
pop
xor
insb
push
xlat
push
je
push
or
mov
icebp
int
mov
push
imul
mov
into
enter
nop
sbb
cmpsl
push
insl
and
stc
insl
adc
dec
xlat
lds
cmp
mov
push
ss
push
fldt
xchg
popf
push
loopne
jae
arpl
jns
jl
mov
into
aaa
pushf
xchg
stos
pusha
jnp
push
mov
ret
movsl
mov
sbb
test
iret
imul
fcompl
pop
lea
jp
imul
loope
jg
mov
and
fs
sbb
call
cwtl
and
mov
sarl
push
orl
jns
mov
dec
into
test
jg
jmp
dec
adc
adc
and
insl
xor
cmc
rclb
decb
loope
xorb
add
jb
andl
add
or
mov
std
dec
jns
jbe
sbb
sub
jmp
inc
int
fnsave
jmp
mov
enter
cmpsb
shrl
cmpsl
cli
xchg
mov
and
xorl
add
pop
mov
adc
dec
xor
or
loope
shl
or
jbe
vunpcklps
sbb
xor
out
xor
in
jl
scas
addr16
loope
test
loope
inc
cli
jo
sub
xchg
sbb
shrl
pusha
fsubr
xchg
lods
stos
fs
xchg
repz
xor
mov
testb
push
xlat
mov
pusha
dec
dec
mov
push
add
xor
mov
int
inc
ficoms
lret
mov
loope
or
add
cmp
jb
test
test
xchg
push
jno
or
fidivl
and
jmp
xchg
adc
add
dec
insb
cmpsb
and
cltd
ljmp
inc
jmp
mov
xchg
aas
movsb
out
sub
jne
sbb
sbb
mov
lock
out
cmp
jbe
sub
fcom
mov
push
scas
cmpl
insb
add
stc
and
test
fsubp
xor
xlat
mov
aaa
pop
outsb
shll
popa
jecxz
je
dec
and
in
repz
sarl
daa
sbbb
dec
cmp
pop
inc
daa
popa
repz
lods
int3
test
shlb
into
mov
sti
cld
push
sbb
loop
call
out
out
insb
enter
sti
xor
lret
ss
int
sub
subl
in
test
xchg
xor
push
ljmp
jmp
push
inc
pusha
or
xor
je
mov
xor
xchg
lds
cwtl
movsl
pushl
sbb
sbb
pushf
cwtl
and
jb
repz
push
lret
inc
cld
pop
and
int
cmpsl
sbb
pop
ds
mov
sarb
mov
or
jo
dec
jle
lods
mov
mov
aas
push
std
pop
lcall
js
in
jns
lret
and
dec
shll
dec
ja
lea
sbb
inc
or
push
jo
or
or
or
mov
sti
cmpsb
lock
out
outsl
mov
inc
gs
sbb
add
rcll
aaa
outsb
jl
enter
mov
mov
sub
cmpsl
shrl
jp
pop
or
mov
test
gs
out
mov
fistpl
loopne
push
pusha
xor
scas
cmp
stos
mov
repz
jg
nop
or
dec
inc
lods
xchg
jno
and
out
and
adc
das
mov
pop
movsl
roll
cmp
and
adc
rolb
lcall
cwtl
xorl
int3
andl
mov
inc
movups
cs
xchg
dec
cmp
outsb
jnp
shll
les
fwait
ss
adcb
inc
test
xor
adc
push
and
testb
dec
int
mov
nop
jecxz
les
or
popaw
inc
in
cs
lods
cld
int
lcall
stos
outsb
out
xchg
push
dec
mov
mov
sahf
andb
addr16
add
xchg
lahf
mov
xchg
out
dec
ljmp
bound
aam
es
cmpsb
sbb
and
pushf
cmp
testl
loope
xlat
sbb
arpl
xor
in
pop
cwtl
call
mov
shl
add
je
pusha
mov
mov
cmpb
lods
pop
ja
mov
cmp
push
sbb
inc
mov
mov
jb
mov
sbb
test
push
or
or
sbb
pop
sti
lock
jmp
mov
add
mov
pop
cwtl
iret
pop
hlt
add
mov
and
je
orl
lods
sub
cmp
fadds
sub
sbb
push
mov
fldcw
mov
cwtl
mov
nop
rclb
inc
xchg
lods
xor
add
fcoml
aam
dec
mov
adc
test
shlb
scas
or
xor
clc
in
ror
push
cmp
or
insl
adcl
push
daa
pop
out
outsl
jl
pusha
repnz
mov
sub
fisubs
sbb
add
inc
stc
mov
rclb
push
adc
push
ficomps
popf
xor
in
xchg
mov
repnz
fnstenv
and
push
inc
adcb
enter
jne
jl
adc
and
and
dec
or
adc
and
sarb
movsb
int3
pop
leave
movsl
xor
test
into
mov
nop
mov
inc
in
jns
sub
push
into
mulb
jb
cs
xor
pop
xchg
ja
push
loop
jg
int
and
mov
fucomip
test
jge
mov
adc
add
mov
push
mov
and
adc
dec
mov
aam
jb
sbbb
cltd
mov
in
push
test
popf
xlat
out
in
std
cli
mov
test
aam
cmp
in
jle
cmpsl
repnz
push
jb
mov
jle
jmp
fidivs
and
shr
sbb
dec
jmp
std
jb
sbb
out
enter
pop
nop
mov
aas
cmpsl
shlb
ljmp
shll
inc
in
sti
mov
cwtl
xchg
xor
sub
out
lcall
mov
popf
popa
loope
pop
ficomps
jno
sub
js
outsb
cmp
clc
orb
rcrl
ds
mov
cmp
xor
push
sti
mov
popa
cs
insl
push
arpl
push
orb
call
add
out
dec
inc
dec
jo
push
adc
aaa
push
pop
push
inc
repnz
sub
outsb
push
push
loope
insl
mov
dec
cmp
add
pop
outsb
dec
pop
int3
movsb
test
rorl
push
gs
push
movsb
sub
insb
xchg
sub
insl
ds
iret
and
xchg
xchg
dec
mov
pop
inc
push
add
insl
arpl
pop
push
xchg
xchg
push
sbb
cs
mov
cmpsb
aad
dec
iret
pop
mov
or
ljmp
xor
pop
fwait
mov
jle
push
or
in
mov
mov
push
cmp
jns
or
jge
enter
cmpsb
sbb
cli
test
xlat
shll
pop
imul
inc
xchg
hlt
pop
dec
ret
mov
setle
pop
sub
and
popa
push
das
and
sbb
mov
jmp
ret
out
insl
push
jns
scas
cmp
sub
andl
push
jnp
pop
and
adc
es
stos
sub
cmp
rcr
fisubrs
sub
les
jge
and
mov
or
pop
mov
push
push
shlb
dec
sbb
inc
pusha
repnz
mov
jno
cltd
xor
jae
ja
xorl
fadd
mov
mov
sahf
add
mov
and
push
fs
jmp
jmp
adc
jno
insl
jns
dec
jbe
mov
mov
jae
add
push
mov
daa
leave
add
and
inc
out
into
js
outsl
pop
add
icebp
ror
lret
xlat
cmp
push
ret
mov
ljmp
lret
cmp
les
outsl
sub
jns
out
fsubs
and
jg
hlt
pop
add
push
fs
cs
in
repnz
pushf
sbbb
cmpsb
cmp
jmp
dec
add
xchg
lods
sbb
jg
in
mov
insl
xchg
sbb
pusha
imul
push
fmul
and
loopne
sbb
jmp
idivl
icebp
pop
popf
and
movsl
cmpsl
insb
lea
aad
dec
sub
into
mov
cmp
or
insl
shlb
lds
push
and
addr16
mov
aam
mov
sti
sub
mov
mov
fidivrs
ss
cmp
mov
mov
xchg
je
cmp
cmp
pop
mov
jae
push
mov
in
cmp
and
mov
enter
mov
jae
call
pop
fsubs
mov
je
dec
sub
pushf
adc
jo
or
cltd
push
in
data16
test
adc
mov
jb
push
leave
pop
lock
pushl
pop
insb
jae
adc
bound
xchg
mov
mov
pop
adc
shrl
ret
popw
sub
rorb
jnp
mov
push
ja
cmc
add
out
pushf
lcall
dec
test
mov
test
insl
mov
js
xor
mov
call
xchg
out
inc
iret
xchg
xor
push
lret
sarl
daa
sub
mov
mov
sub
mov
add
cmp
test
adc
cmpsb
mov
dec
dec
or
lods
cld
clc
cmp
jb
pop
sub
mov
cli
dec
mov
cli
pushf
mov
popf
lods
xlat
jecxz
lods
inc
ljmp
mov
dec
pop
adc
and
inc
repz
push
out
ljmp
into
movsb
inc
les
enter
jmp
mov
mov
pop
popf
xor
push
out
mov
imul
ret
insb
lret
pop
out
jmp
fisubrl
mov
leave
push
lds
push
xor
jne
hlt
cmc
push
fisttps
lds
dec
es
pop
push
push
imul
fiaddl
cmp
sbb
add
lret
out
lods
insb
jecxz
xchg
mov
lea
cmp
pop
loop
pushw
xor
fsubp
push
and
xlat
loope
xchg
jl
dec
add
daa
insl
popa
sub
rorl
sub
and
gs
push
mov
dec
scas
xchg
jmp
and
dec
mov
sub
xchg
mov
sbbl
xchg
inc
pop
mull
mov
mov
xor
lea
notb
mov
xor
mov
iret
imul
cmpsb
xchg
jno
fdivl
mov
jnp
nop
cmc
push
gs
filds
testb
fsts
in
scas
out
push
aad
mov
jno
push
cmp
mov
inc
test
mov
js
mov
shl
pushf
movd
xchg
adc
sbbl
sbb
fistl
loop
popf
jmp
jno
cmp
adc
xchg
sahf
in
test
xor
push
mov
aad
mov
mov
or
pop
lods
ja
sub
fwait
jae
call
in
xchg
stos
popf
test
out
popa
mov
addr16
mov
insb
sbb
cmp
add
das
mov
adc
jne
xchg
pop
add
adc
jne
jecxz
xchg
aad
pop
addr16
dec
xchg
bound
inc
xor
sbb
mov
addl
sub
mov
addr16
cmp
jno
dec
ja
es
iret
add
or
xor
dec
xor
or
cmpsb
mov
scas
decl
xchg
mov
or
ret
aam
in
out
sbb
dec
int3
icebp
dec
pop
shlb
xchg
data16
cmp
pop
add
xchg
or
cmp
push
popf
cmp
mov
cld
shll
inc
cmpsb
xchg
in
adc
mov
push
pop
movsb
pop
das
nop
fisttpl
inc
das
fs
dec
loopne
mov
inc
inc
rclw
push
cmp
xor
nop
ror
mov
test
mov
repz
fimuls
jno
das
sbb
dec
aas
hlt
stos
mov
ljmp
fsubr
xchg
or
sahf
test
sub
rclb
dec
mov
xchg
sub
or
out
push
data16
fdivrl
scas
or
pop
add
test
jns
xor
sub
orl
movsb
dec
bound
xor
add
enter
pop
jg
cmp
outsb
xchg
xchg
push
mov
cmp
add
adc
test
lds
cli
sbb
out
push
sahf
sarb
cli
inc
movsl
xor
in
inc
idiv
iret
push
fildll
and
xchg
dec
dec
and
adc
xor
push
outsb
call
xor
cmc
ret
call
mov
mov
adc
or
inc
sahf
lea
adc
imul
xchg
mov
out
inc
xchg
call
fsubrs
sti
cld
lret
rclb
cmp
aad
add
scas
mov
ljmp
repz
sub
or
push
test
cld
cmp
cmp
scas
scas
jmp
movsl
inc
cmp
popa
popf
dec
cs
xor
cmp
and
mov
add
into
jae
push
imul
and
lret
inc
test
jle
cmp
call
pop
dec
push
push
arpl
in
mov
stc
fninit
mov
sbb
or
arpl
xchg
out
sub
pop
or
mov
push
push
std
and
pusha
xchg
push
dec
jmp
insl
into
fcomi
dec
sub
jmp
lods
dec
pop
push
mov
cmp
mov
mov
sbb
dec
sbb
pop
clc
es
or
push
mov
cmp
push
clc
dec
cltd
pop
xor
push
iret
add
xor
mov
bound
adc
dec
or
xor
fcomip
fstps
cltd
and
cmp
shrl
insl
push
jg
xor
pop
fwait
rclb
push
push
mov
or
arpl
fnstcw
fstps
xchg
fldl
add
ret
fwait
popa
pop
mov
ds
fisttps
out
push
jne
xor
or
ds
mov
fwait
push
xchg
jno
test
nop
adc
data16
mov
mov
pop
insb
and
sti
and
stos
movsb
adc
or
or
outsb
mov
add
inc
out
pop
jg,pt
push
stc
loopne
inc
xor
and
out
or
xchg
repz
mov
pop
nop
sarb
int3
mov
fmul
mov
dec
out
sub
jb
sbb
adc
mov
pusha
iret
sbb
sbb
int
mov
inc
stc
sub
add
leave
test
into
mov
cmp
sub
dec
outsl
inc
int
and
dec
mov
sub
addr16
push
inc
jb
sub
das
push
subb
insl
jl
push
inc
push
aam
into
fmuls
pushf
jno
fwait
mov
xchg
fistps
mov
ljmp
cwtl
pop
in
jg
push
add
test
ret
push
loopne
loop
cmp
dec
lock
jo
mov
fsts
fcomp
bound
outsl
iret
jnp
jnp
arpl
mov
and
jmp
mov
mov
push
js
inc
popa
cwtl
orl
loopne
xor
int
out
xor
ljmp
std
adcl
test
pop
cld
std
cltd
je
inc
in
adcb
mov
out
cmp
and
xor
insl
repz
scas
xchg
jno
fistpll
mov
add
mov
scas
popf
dec
pop
or
dec
cmp
daa
jns
in
fsubrl
mov
or
and
sahf
mov
aaa
sub
mov
sbb
mov
pusha
mov
xor
lods
jle
addr16
fidivrs
rcrb
nop
ss
das
push
mov
push
mov
xchg
push
in
leave
push
sub
xchg
mov
and
repnz
std
mulb
hlt
mov
aad
lock
jnp
scas
aaa
fimull
fwait
lock
push
mov
mov
rcll
cmpsb
rcrl
inc
out
fsubl
and
push
inc
stc
lds
inc
jo
mov
aam
in
fcmove
jge
cltd
jge
lret
cwtl
xchg
scas
mov
addr16
outsl
mov
imul
test
roll
push
sbb
add
cmp
xlat
adc
jg
scas
cltd
xchg
insb
ror
sahf
pop
scas
stos
jno
push
fldenv
jle
mov
mov
or
or
adc
add
in
jno
test
movsl
lods
roll
mov
mov
or
push
popa
jo
pop
fistl
sarb
in
mov
aad
scas
mov
jp
mov
add
mov
insl
in
lods
decl
cmp
lret
push
sbb
stos
jle
pop
roll
testb
cmp
out
sbb
push
pop
and
pslld
cltd
dec
or
adc
bound
incl
dec
pop
jge
sub
xorl
mov
mov
insl
stos
fwait
pop
and
push
shl
sti
lods
mov
mov
jmp
cmc
pop
mov
mov
xchg
aam
das
insl
cltd
xor
outsb
jle
ds
cmp
insl
add
push
add
cli
add
mov
push
imul
loopne
mov
test
mov
les
fidivrl
mov
add
movsl
popa
into
xchg
xor
cmp
jge
out
out
jmp
ja
out
out
push
popf
push
sbb
shufps
jne
ljmp
push
cld
ss
add
call
cmpsl
or
pop
jne
cmp
sahf
cmpsb
mov
or
cmpb
es
lahf
mov
xor
daa
lock
jae
jne
je
subb
fsubr
cs
out
bound
mov
mov
lods
sub
jns
mov
sub
mov
push
mov
outsl
sub
adc
xor
outsl
sbb
aad
mov
mov
lret
pop
or
popa
jnp
hlt
xchg
rcrb
add
push
inc
xor
leave
cld
pop
inc
push
pop
add
in
jno
sbb
inc
in
bound
sbb
sub
xchg
in
lock
and
cs
mov
lcall
dec
lds
xchg
cmp
xor
fnsave
stos
cmpsb
popa
cmp
inc
push
neg
pop
xchg
pop
pop
xor
in
xchg
adc
add
cmp
and
das
mov
icebp
sbb
sti
xor
jnp
mov
lret
push
cmp
mov
sub
loopne
mov
xor
loope
xchg
clc
aad
sub
ss
and
fistpl
shlb
jmp
sub
enter
fldl
in
in
pop
add
xor
jb
sahf
test
imul
mull
jo
fists
cwtl
dec
pop
mov
adc
mov
push
fidivs
imul
pop
mov
mov
scas
sub
push
add
mov
xchg
cmp
int
jle
jno
fisttpll
jecxz
xchg
faddl
fildll
mov
cmp
clc
iret
imul
sub
aaa
jge
out
daa
dec
mov
sub
loop
jnp
mov
mov
pop
sbb
fldl
mov
or
xor
mov
dec
mov
xchg
fldl
div
aas
in
pop
xor
pop
sbb
movsb
mov
adc
xlat
mov
sub
mov
jmp
and
dec
insb
xor
cmp
push
inc
add
call
cmpsb
xlat
cmp
xlat
aaa
adc
pop
insl
jp
inc
daa
adc
addr16
push
les
or
or
repnz
cld
mov
test
in
xchg
add
mulb
pushf
sub
xor
add
adc
cmp
scas
mov
sarb
cmp
push
ljmp
sbbb
shr
les
mov
jle
lret
mov
int
js
pop
sbb
inc
cmpsl
xor
push
push
call
pushl
fdivl
jp
add
ljmp
out
push
fwait
jb
outsb
jo
and
aad
repz
adc
push
cmp
add
xchg
ljmp
push
pop
xchg
scas
adc
add
mov
mov
add
and
pop
cs
fs
subl
adc
push
push
adc
adc
test
adc
mov
jbe
inc
cmp
xor
jb
movsb
sti
jmp
je
daa
xor
in
test
lret
add
xchg
pop
mov
out
xchg
fisttpl
out
pop
push
pop
lret
adc
fisubrs
sub
adc
cltd
addr16
xchg
mov
lcall
pop
ds
stos
lods
in
cmp
loope
and
rorl
xchg
or
imul
mov
adc
push
add
xchg
push
out
jmp
jg
jns
test
mov
add
addr16
jo
cmpsb
inc
lret
or
addr16
sti
cmc
pop
xor
lret
add
out
sub
jmp
jmp
sahf
sub
scas
fwait
xor
andb
cmpsb
inc
or
xor
jp
pop
xchg
sbb
mov
mov
out
into
push
xor
shlb
adc
mov
mov
mov
push
pop
mov
xlat
ljmp
ja
pop
sarl
and
cmp
repz
mov
xor
jp
sub
xchg
in
xchg
jns
sar
add
mov
mov
xchg
fsub
mov
arpl
arpl
cli
pusha
outsb
inc
push
push
mov
idiv
xor
out
xchg
jecxz
aad
orl
sub
je
js
rolb
jnp
das
andb
mov
ss
xchg
je
hlt
lock
inc
imul
leave
and
mov
sub
cmpsl
push
insl
mov
pop
lods
mov
adc
imul
and
scas
add
sbb
inc
mov
stc
sub
cmp
cmpsl
xlat
dec
aam
cmc
andb
inc
dec
xlat
pop
loopne
fisubl
fwait
or
xchg
jg
int
sahf
nop
test
inc
adc
sarb
push
scas
or
aam
aam
sub
cmp
mov
mov
inc
loop
lret
int3
adc
pop
movsl
or
inc
inc
mov
mov
call
jg
pop
bound
sub
jne
cmp
loope
iret
mov
push
gs
push
xchg
repnz
jge
test
movsb
call
fwait
adc
push
mov
out
pop
pop
jae
cs
not
add
adc
std
or
cld
lret
sarl
repnz
pop
stos
or
es
push
inc
test
lods
inc
inc
popa
jp
inc
sahf
add
clc
fistps
mov
popf
cmp
popf
int
mov
imul
std
ss
mov
jnp
cmp
and
sbb
and
dec
xor
lock
and
es
call
shlb
movsb
test
jb
imul
cltd
inc
cwtl
imul
push
mov
sbb
dec
sbb
add
sub
mov
xlat
movsb
aaa
and
fsubl
scas
movsb
jo
aad
add
dec
test
pop
cmp
push
fnsave
jp
jnp
cmp
int
fimull
inc
jg
and
out
mov
fimull
fwait
int
push
xor
jg
iret
mov
xor
or
mov
xor
cwtl
cld
cli
and
aad
fsts
adc
or
clc
aad
dec
lret
arpl
cld
lods
repnz
aas
mov
and
pop
popa
insb
mov
roll
push
push
int3
push
sbb
and
cltd
or
out
sub
inc
sbb
dec
popf
fsub
les
jp
shrb
sbb
cmpsb
cmp
jnp
mov
dec
idivl
enter
cwtl
push
sub
cld
stc
xlat
outsb
inc
call
xchg
in
sub
pop
in
rcrl
lret
fs
adc
sti
jbe
xor
into
push
cmp
mov
sub
mov
xor
aam
lods
pop
cmpsb
js
cmp
cmpsl
in
jle
lret
jae
subl
das
out
jmp
xchg
loop
rcr
jecxz
mov
sub
inc
fwait
popa
push
add
lret
pop
mov
xchg
cmc
push
jae
push
icebp
jne
fiadds
sbb
out
add
jb
test
lret
mov
pop
dec
sbb
lods
mov
or
jno
pop
inc
sahf
clc
cmp
and
mov
sbb
xlat
movsl
pop
in
jne
jp
clc
or
mov
or
in
push
inc
clc
sub
mov
xchg
popl
pop
movsl
mov
sub
leave
dec
daa
les
push
pop
or
push
fdiv
decb
xor
pop
sub
rol
and
cmpsl
cmpsb
xor
sbb
xchg
je
lds
jge
enter
adc
icebp
lods
sbb
mov
scas
or
es
vsubpd
and
lcall
je
jne
inc
adc
sbb
aaa
cmc
sarb
or
mov
dec
ss
jne
or
out
push
mov
ret
push
int3
jge
inc
pop
popf
out
adc
rcl
xor
loopne
mov
sub
xchg
aad
insb
sub
std
cmpsb
sub
outsl
setg
std
jecxz
dec
stc
test
in
inc
pusha
pop
fs
mov
or
inc
jns
lahf
xchg
inc
mov
clc
mov
outsb
pop
sbb
stc
bnd
lock
push
dec
negb
repz
sbb
pop
dec
std
or
or
out
jp
lret
fs
dec
fistl
cmpsb
pop
pop
lods
icebp
call
inc
andl
aam
mov
mov
lea
add
sub
xchg
lcall
ret
stos
out
lret
out
push
insl
sbbb
fidivl
shlb
mov
sbb
lods
mov
mov
inc
pushf
pop
jb
icebp
xor
push
ljmp
divps
pushf
cli
push
add
imull
mov
xrelease
pushl
xor
imul
decl
lahf
mov
dec
xchg
mov
push
xchg
push
hlt
test
stos
test
and
cltd
mov
fimull
or
stos
xchg
adc
sbb
cld
push
jge
loop
mov
stos
daa
dec
push
fidivrs
jnp,pt
scas
jl
lahf
popa
fsubl
cwtl
std
test
mov
push
add
or
cmp
cmp
mov
mov
jne
sub
mov
fs
fildll
xor
cs
movsl
insl
gs
add
mov
int3
mov
icebp
movsl
insb
test
enter
push
inc
lret
pop
xchg
and
mov
test
inc
dec
xchg
pop
call
add
push
les
and
arpl
pop
mov
or
ficoms
sbbb
scas
mov
cmp
push
mov
and
loop
sub
mov
mov
cmpsb
push
mov
push
push
loop
jne
test
sarl
cmpsl
pop
inc
pop
pop
in
test
iret
pop
inc
aas
aam
aam
jno
rolb
cmp
dec
dec
pop
xlat
cli
push
xchg
dec
or
popa
mull
movsb
pusha
popa
stos
out
bswap
mov
mov
sub
jo
jnp
push
mov
sub
cltd
lods
push
call
insl
xchg
add
or
sub
push
popa
sbbl
mov
xlat
sub
sbbb
lods
stos
sub
pop
js
cmc
out
bound
or
pop
out
xchg
xor
cmc
jg
pop
mov
in
dec
add
in
xor
jns
movsl
or
jmp
and
imul
mov
stos
fcoms
sarb
jns
adc
cli
add
jle
cmpsl
mov
shlb
jnp
jo
repnz
pop
je
add
fwait
push
mov
add
aas
jbe
cmc
sub
dec
pop
fucomip
test
xchg
xor
xor
dec
incl
xchg
loope
nop
dec
or
cs
or
push
fnstenv
jl
xchg
imul
dec
add
xchg
aaa
lock
aas
movhps
mov
or
inc
rolb
sahf
sub
pop
pop
mov
sub
inc
in
sbb
and
jp
out
adc
mov
repz
andl
movb
and
jnp
push
sbb
aad
test
xor
sub
cmp
adc
jae
shlb
out
sbbl
mov
cli
sahf
xor
pop
mov
rcll
cli
pusha
dec
lcall
movsb
arpl
pop
stos
push
shll
lods
int
mov
ffreep
inc
or
cmp
mov
jmp
and
sbb
adc
pop
shrl
cmp
inc
push
pop
sub
ja
out
mov
je
pop
push
xchg
aad
ljmp
call
dec
loope
cmp
cmp
add
add
ljmp
loopne
fldt
shll
xchg
mov
jae
inc
mov
test
daa
and
lret
in
xor
inc
xchg
andl
xor
adc
jno
inc
jae
pushf
popf
pop
fcoml
add
es
jmp
sbb
adc
add
fwait
xor
loop
jecxz
test
les
outsl
cltd
iret
outsl
fldl
adc
mov
cmp
imul
loope
and
fnstenv
aad
dec
stc
ss
add
inc
inc
cmp
dec
mov
movsb
iret
mov
xchg
xchg
inc
jge
pop
mov
fwait
aad
lods
push
inc
movsl
lock
fildl
add
cmp
mov
leave
bound
divb
stos
add
mov
lcall
cli
ret
es
lods
imul
out
cwtl
dec
or
pushf
pop
cmc
cmp
sub
jmp
jbe
pop
push
stos
dec
jp
mov
cmp
cmp
sub
jns
sarl
in
call
lods
xchg
leave
lods
mov
push
jmp
stos
adc
push
dec
pop
mov
movsl
dec
jge
mov
rorl
rcll
jo
test
les
add
mov
xor
rol
fmul
incl
test
in
cmp
es
sbb
fsubl
das
jnp
test
dec
fsubrs
push
loopne
test
mov
mov
popa
loopne
enter
xor
ret
inc
and
or
pop
test
mov
adc
ds
int
call
xor
xor
cltd
in
mov
popa
icebp
std
fstps
push
mov
scas
cltd
jbe
push
arpl
lds
aaa
sub
xchg
cmp
dec
cmc
dec
sahf
dec
iret
insl
mov
std
stos
mov
adc
mov
cmp
mov
push
mov
cltd
pop
sub
nop
push
cwtl
shrl
dec
mov
mov
jmp
xchg
ret
out
push
inc
xchg
jp
ret
mov
xchg
repz
sbb
inc
test
inc
push
and
adc
fimull
mov
cltd
loopne
or
mov
je
adc
or
xor
cmp
push
mov
or
cwtl
mov
cld
ret
ret
sbb
mov
jb
test
mov
jmp
xor
push
xchg
mov
cmc
and
jbe
xchg
aaa
sub
fdivs
lcall
into
adc
lods
sub
sub
mov
leave
das
aam
adc
mov
or
xchg
mov
xchg
insb
scas
aaa
push
imull
cmp
dec
sbb
cmpsl
adcl
mov
ret
dec
push
pushf
adc
push
xchg
pusha
data16
push
mov
ja
xchg
test
leave
and
xor
outsb
scas
into
mov
lea
mov
mov
std
insb
cld
mov
fs
js
notl
xlat
cli
xlat
sub
mov
cmp
rcr
test
mov
mov
in
mov
and
mov
cltd
testb
jno
mov
or
and
dec
jne
inc
push
cld
fs
pop
inc
dec
cld
ljmp
es
jmp
hlt
int
daa
mov
xchg
notb
and
notl
sbb
out
cld
jge
inc
pop
xchg
mov
sub
insb
js
sub
sbb
xchg
adc
mov
stos
jno
jnp
in
lahf
outsl
xlat
dec
jno
sub
and
in
aas
out
andl
jmp
pop
repnz
sbb
lahf
es
pop
xchg
xor
shrl
push
in
push
pop
lods
in
jge
xchg
xor
xor
and
push
addr16
into
sub
jbe
mov
jbe
addr16
popa
mov
das
nop
add
jecxz
sti
mov
ja
insl
clc
punpckhdq
push
aas
push
jo
sub
push
testb
cmp
push
jecxz
out
movb
cmpsl
les
out
mov
adc
mov
imul
stos
movsb
cmp
mov
je
lods
imul
ss
mov
popa
shr
popa
adc
adc
mov
push
jne
sbb
pop
pop
and
xchg
jno
mov
cld
jg
push
outsb
in
push
pop
loop
jle
and
out
es
cmp
jne
pop
inc
pushf
and
lret
pop
lret
cmp
jo
or
push
cvttps2pi
adc
call
pop
in
test
out
imul
xchg
ja
xchg
add
and
icebp
sub
outsb
inc
add
fnsave
inc
std
cmc
jmp
lds
aaa
xlat
mov
nop
shrl
repnz
xchg
cmp
mov
xchg
inc
fildll
arpl
fsubrl
movsb
xchg
stos
add
shl
imul
icebp
xchg
mov
cmp
pusha
js
inc
or
inc
aas
dec
sub
inc
lahf
xchg
filds
mov
cmp
sbb
mov
add
outsl
pop
clc
jmp
addr16
jns
adc
dec
in
push
jo
ljmp
std
mov
push
pop
jge
mov
in
dec
mov
mov
add
jns
adc
push
int3
and
inc
pop
sbb
daa
adc
mov
mov
pop
mov
dec
pop
cmpsl
and
push
mov
mull
pop
add
cmpb
sub
ljmp
fs
lahf
xchg
mov
add
sbb
adc
pop
sti
loopne
or
inc
cmpb
loop
ja
stos
jb
popf
clc
inc
xor
xchg
vmwrite
or
add
mov
movsl
scas
ja
xchg
dec
cs
je,pt
xchg
lret
jg
fstpl
sti
lods
lret
pop
xchg
push
and
gs
lds
stc
jp
shlb
xorb
pop
cmp
in
cmp
adc
jns
rcr
out
mov
rcrb
fistps
fcoml
xor
inc
out
hlt
sub
jg
stos
push
jae
sub
dec
adc
ud2
inc
cmp
sub
sbb
adc
pop
push
stos
fmuls
inc
mov
aam
lods
test
sub
mov
mov
ret
clc
andl
sbb
add
cmp
mov
push
cmc
lahf
pop
or
mov
push
sbb
xchg
xchg
ja
jecxz
pop
pop
dec
xchg
imul
inc
test
mov
cmc
mov
or
pop
sbb
maxps
scas
mov
xchg
rcrb
cmp
test
or
inc
mov
jmp
mov
or
cmp
int3
push
pop
out
mov
enter
ljmp
jge
outsl
test
sbb
xor
aaa
jo
add
jecxz
sbb
lods
bound
sbb
int3
push
mov
loop
pop
ret
rcll
add
adc
push
jl
insl
inc
inc
cmp
push
or
jecxz
sbb
mov
mov
mov
dec
lcall
es
jns
mov
jp
dec
push
xchg
mov
xchg
xchg
sbb
xchg
xchg
xchg
hlt
jge
test
pop
in
cmp
test
push
cmp
iret
mov
repz
mov
fs
nop
jmpw
mov
cmpsb
stos
bound
mov
and
sub
mov
fucomp
js
mov
xchg
add
cli
ret
aad
mov
add
insl
mov
sub
bndldx
loopne
pop
mov
imul
mov
in
jp
jb
mov
and
or
leave
imul
cmp
xchg
out
pop
mov
ds
fcmovu
lea
fnstcw
aas
push
jp
dec
incb
je
fidivl
clc
ss
repz
pop
les
mov
pop
loop
lcall
xlat
jp
xchg
in
push
stos
addr16
faddl
test
add
out
pop
mull
and
jmp
sbb
sbb
mov
das
mov
lcall
ds
push
daa
stc
sub
pop
push
out
enter
inc
dec
fwait
xchg
or
lock
rclb
dec
xlat
mov
es
popa
cmp
ja
pop
cmp
testl
dec
xor
scas
nop
stos
arpl
aaa
cs
sarb
hlt
sbb
test
pusha
xor
xlat
inc
push
movsl
xor
mov
inc
outsb
lea
movsl
imul
lods
ret
mov
inc
sub
sbb
addr16
enter
popa
inc
test
fisubrs
int
rorl
mov
sahf
push
int3
cmp
or
imul
shll
sub
sbb
in
add
cltd
mov
or
mov
cs
inc
lahf
mov
dec
shll
and
jle
pusha
dec
sub
xchg
clc
shlb
test
out
ret
jmp
pop
lods
shl
cmovns
push
sbb
in
add
fmull
dec
addr16
mov
adc
cmp
jmp
dec
jmp
pop
adc
inc
jo
pop
ja
lock
mov
mov
jl
jg
jle
into
ret
ja
push
arpl
sbb
rorl
xchg
mov
xorl
in
dec
movsb
or
leave
fcmovnbe
mov
mov
push
mov
dec
xor
data16
je
mov
test
push
sub
aas
daa
add
arpl
inc
cwtl
sub
push
in
adc
jg
pop
mov
xlat
clc
lea
inc
dec
inc
xchg
sub
xor
aam
jmp
jp
das
ret
test
dec
or
dec
es
test
dec
in
loope
ja
inc
lods
xchg
rcll
xor
cmpsb
lret
pop
cwtl
sbb
push
idivb
jmp
outsl
stos
sarl
cmp
sub
lods
pop
dec
lret
mov
dec
mov
xchg
jns
adc
cmp
ss
xchg
lock
or
decl
pop
adc
in
xchg
ret
xor
cld
xchg
mov
and
inc
jmp
shlb
dec
mov
mov
mov
ss
cmc
fdivp
test
sub
daa
mov
mov
push
adc
lret
lock
pusha
pop
jge
dec
push
in
nop
cld
sub
mov
cltd
daa
decl
push
mov
xor
insl
daa
xchg
mov
push
bound
rorl
cmp
je
xorb
fidivl
cs
inc
inc
push
arpl
sbb
jb
sbb
adc
pop
sub
jle
mov
add
lahf
xchg
fidivrl
mov
jbe
sub
daa
xor
les
in
ja
cltd
sub
or
sub
xorl
or
pop
mov
cmp
mov
add
push
outsl
flds
lea
push
mov
pop
push
out
mov
adcl
mov
loope
mov
cmpsl
xchg
adc
test
andb
jae
pop
adc
nopl
idivl
mov
mov
rolb
lea
out
and
pop
jecxz
shll
xor
jne
sbb
imul
nop
adc
lret
ja
lea
mov
lret
je
movsl
cmc
or
test
cmp
and
add
inc
xchg
push
das
pop
movsb
push
test
les
incl
push
and
sbb
jg
jmp
pusha
fdivp
adc
mov
xchg
neg
data16
repz
pop
movsl
lock
add
insb
xchg
mov
jmp
out
push
mov
ret
imul
les
mov
mov
rcrb
mov
aam
or
cmc
push
stc
popa
jo
gs
or
pop
bound
mov
mov
add
insl
xor
enter
popf
pop
xor
sbb
mov
inc
pop
outsl
enter
int
out
lahf
outsb
push
ret
mov
sub
push
nop
imul
push
inc
dec
mov
stos
aam
scas
fbstp
mov
fcoml
fbld
add
call
inc
or
movsl
cmpsb
leave
push
sbb
lock
cld
cmp
sti
in
ja,pt
rorl
subb
andb
pop
xor
dec
push
mov
sbb
dec
test
sub
push
ret
dec
mov
jae
and
push
daa
ret
push
jno
call
inc
adc
mov
lret
lds
call
data16
ss
xchg
xlat
xchg
inc
mov
cmp
xor
cmc
jmp
add
js
mov
and
inc
add
and
add
aam
mov
cmc
cmp
dec
pop
push
das
pop
mov
add
test
sahf
adcl
test
inc
pop
cmp
popl
ja
clc
popa
and
ds
push
test
mov
xchg
movsb
or
mov
adc
test
push
add
adc
push
fwait
inc
mov
mov
sub
jp
sub
sbb
scas
or
pop
in
filds
jmp
gs
mov
pushf
movl
mov
xchg
mov
cmp
adc
loopne
lds
out
into
add
xor
jl
and
and
mov
and
mov
js
lea
incb
fsubrl
lods
notb
mov
dec
mov
dec
call
pop
dec
sub
mov
adc
ds
bound
je
in
incb
adcb
fldenv
out
inc
or
xchg
leave
mov
movsl
loop
sbb
outsl
lahf
mov
sub
cwtl
xchg
lcall
add
aam
mov
cld
in
jecxz
xor
movsb
sbb
cld
nop
or
mov
inc
jns
push
mov
cld
hlt
std
sti
jle
ret
std
es
dec
les
aam
test
ja
mov
sbb
adc
adc
dec
icebp
popa
jmp
xchg
leave
and
push
jle
int3
jnp
pushf
xchg
dec
mov
insb
ret
iret
movsb
mov
sbb
dec
xor
push
cli
call
loopne
cmp
jnp
fsts
xchg
mov
nop
xchg
fld
mov
aas
pop
mov
gs
pop
jmp
cmp
pop
xlat
push
inc
mov
les
mov
lret
scas
sbb
test
and
push
arpl
out
jl
lcall
cs
mov
movsl
je
call
test
or
xor
popf
adc
loop
stc
sbbl
sbb
xchg
loopne
les
mov
xor
rcll
or
cld
adc
daa
ljmp
mov
or
jns
mov
bound
adc
dec
xchg
jbe
add
call
pop
push
lret
jge
jmp
loopne
cmpsl
icebp
xor
inc
in
dec
ret
mov
sub
mov
push
push
cmc
aaa
mov
and
in
xchg
adc
sub
inc
repnz
sahf
add
mov
xchg
push
push
cmp
popf
mov
std
fistpl
sarb
in
jge
repz
xchg
cmp
xchg
ss
loope
aam
push
push
fstpl
mov
jno
push
stos
sub
lahf
test
mov
repz
mov
cwtl
mov
jmp
adc
shl
xchg
dec
fdivp
mov
adc
xchg
pusha
push
arpl
pop
sub
xchg
scas
pop
stc
mov
call
xchg
mov
adc
push
cmc
jmp
mov
test
movsl
cs
loope
jnp
test
pop
push
jecxz
sbb
inc
rcll
bound
outsl
or
pop
mov
and
aas
addr16
jnp
push
sub
adc
and
pop
in
push
mov
fucomip
add
loope
cltd
adc
out
push
and
cli
repnz
rcll
push
mov
dec
push
adc
xor
sub
fnsave
adc
sti
cmp
call
andb
pop
aam
mov
and
inc
inc
fisttps
push
lods
mov
mov
filds
sub
popl
sahf
les
aas
mov
call
mov
arpl
mov
dec
sub
popf
jno
xchg
leave
push
adc
cltd
xor
cmp
mov
pop
and
pop
adc
sarb
cmp
mov
loope
aaa
pop
add
stc
push
nop
dec
cmp
sbb
and
enter
jne
adc
das
xchg
and
xchg
cmp
cltd
dec
pop
idivl
es
rol
add
aaa
movsl
dec
lods
insl
jno
bound
adc
lcall
cmp
dec
in
or
clc
std
fcoml
outsl
jns
adc
out
xchg
jl
sub
pop
mov
mov
lods
pusha
in
pop
lcall
pop
sbb
call
jno
xor
sbb
stos
js
adc
mov
sub
cmc
inc
adc
mov
jns
push
cmp
pop
xchg
push
pop
xorl
push
mov
pop
ja,pt
and
lock
leave
pushw
icebp
mov
push
add
sub
test
dec
push
out
pop
jae
push
mov
fs
into
flds
fiadds
repz
adc
xor
push
std
inc
xchg
push
test
dec
mov
pop
dec
and
push
in
paddsw
add
lea
adc
fwait
sti
xchg
cwtl
leave
mov
sbb
cmpsl
sub
push
pop
pop
pop
and
outsl
push
js
stos
notb
movsb
inc
fsts
mov
adc
and
cmpsl
lods
lcall
mov
sub
cmpsl
adc
lods
popa
loop
xchg
mov
sub
ret
push
pop
fistpll
xor
pop
les
mov
ficoms
loop
pop
shlb
mov
mov
popf
xchg
pop
leave
add
push
test
pop
outsl
loopne
mov
sbb
mov
push
out
les
dec
lea
push
push
inc
lahf
into
inc
mov
dec
mov
fdivrl
mov
in
data16
dec
pusha
dec
imul
xor
test
scas
arpl
mov
add
mov
cmp
ficompl
mov
out
sub
ds
scas
scas
inc
shrb
cs
pop
packuswb
mov
test
adc
loop
iret
cmpb
lcall
dec
pushf
sub
mov
xchg
cltd
xor
mov
and
pusha
out
jo
xor
jbe
cld
ss
push
push
sub
mov
pop
mov
jg
sbb
push
cld
sti
in
push
pop
add
mull
adc
int
clc
pop
cmp
xchg
outsb
mov
sub
lds
aad
mov
pop
ds
mov
dec
or
inc
dec
jle
leave
xor
movsb
inc
push
dec
push
dec
xchg
pop
movsl
jl
popa
pop
or
clc
fdivrp
jmp
add
and
inc
jns
enter
leave
cmc
jecxz
cmp
cmp
lds
xor
mov
push
inc
xchg
cmpsl
xor
mov
jne
shlb
cmp
mov
mov
cli
dec
test
mov
push
lods
cmp
adc
add
std
add
mov
xchg
adc
lret
adc
cltd
dec
xchg
sbb
arpl
sub
mov
scas
xchg
je
es
inc
jl
push
aaa
jb
sub
nop
in
imul
test
mov
shrl
bound
jmp
add
loop
arpl
cwtl
insb
adc
ja
mov
out
repz
mov
pop
pop
int3
pinsrw
mov
stc
outsb
cwtl
cld
decl
loopne
jge
js
bound
js
dec
adc
push
ret
test
ret
pop
mov
jle
je
xor
icebp
cmpsb
stos
jae
in
mov
jb
xor
pop
xchg
push
xor
sub
bound
test
pushf
inc
les
scas
sbb
fs
fcmovnu
mov
add
mov
mov
push
stc
pop
pop
lock
les
leave
clc
xor
dec
push
in
ljmp
repnz
iret
mov
sbb
into
outsl
inc
jbe
in
ja
sti
cmp
jp
lea
jns
jp
jbe
pop
aaa
mov
gs
and
cmp
mov
sub
push
iret
xchg
xor
in
dec
cmc
in
scas
push
mov
push
scas
mov
mov
adc
lock
cmp
ss
loopne
jmp
lret
insb
mov
jg
enter
es
stos
cmpsl
das
pop
adc
decb
out
jae
in
test
add
cmp
xchg
insb
jne
pusha
frstor
sahf
dec
push
mov
stc
sbb
mov
adc
dec
cmpsl
scas
jg
cmpsw
inc
stos
stos
int3
hlt
pcmpgtd
add
mov
xor
ficompl
into
hlt
adc
mov
or
or
lods
rolb
lcall
or
and
icebp
rcrb
jno
shll
mov
push
in
xchg
adc
in
pop
adc
ljmp
push
fsubrp
loopne
cmp
fwait
stos
out
fucomip
lahf
cmc
sarb
repz
dec
jg
xchg
mov
filds
sbb
daa
xchg
jne
pop
push
adc
popf
push
sbb
aad
mov
stos
mov
out
aam
or
icebp
xchg
cmpsl
nop
pop
mulps
cmp
add
daa
rcrb
push
cmp
popa
xchg
adc
pop
loopne
mov
add
jmp
cmpsl
inc
dec
or
js
dec
mov
xlat
adc
xor
cmpsl
inc
pop
xchg
jnp
adc
sbb
sub
add
jb
and
mov
ja
imul
iret
movsl
fimull
out
mov
imul
movsb
fndisi(8087
and
jo
pop
pop
or
xchg
out
jmp
movsb
sbb
push
enter
add
adc
movsl
push
fistpl
iret
xor
jg
sbb
pop
mov
shll
lods
fistps
mov
mov
xchg
jb
imul
dec
mov
mov
mov
out
adc
aas
pop
faddp
and
cmpsl
lret
lods
xlat
adc
dec
xor
mov
sbb
mov
jae
jp
lock
adc
sete
movzwl
loopne
mov
adc
pop
sub
and
xor
push
loope
xor
icebp
add
push
pusha
aas
nop
sbb
xchg
push
xor
mov
push
sbb
lret
lret
iret
outsl
sub
out
jae
cltd
imul
dec
mov
or
dec
inc
into
setbe
adc
xlat
mov
xchg
jnp
cmp
push
or
imul
fstpt
pop
loopne
push
hlt
mov
jnp
sub
stc
mov
cmp
push
aam
adc
addr16
into
mov
loop
ficomps
sub
sub
push
xchg
subl
repz
mov
jbe
into
mov
rolb
loope
adc
lret
popf
inc
movsb
lds
adc
or
or
add
ss
lret
add
inc
xor
mov
jp
xor
out
into
and
fmul
ror
in
add
cli
add
adc
cmp
pop
js
xchg
push
les
and
fnsave
mov
mov
add
mov
pop
mov
adc
shl
outsl
push
mov
fistl
or
dec
mov
mov
inc
and
jl
scas
outsl
std
mov
cld
outsl
adc
dec
xor
das
or
or
sub
mov
add
dec
cmp
or
icebp
mov
jno
inc
jno
iret
mov
loope
inc
loop
xlat
jbe
test
jp
mov
push
cs
dec
mov
and
inc
adc
add
mov
movsb
jl
repz
cmp
cmp
xchg
adc
push
mov
cld
add
cli
aas
nop
mov
imull
and
add
jno
stos
cwtl
lret
roll
pop
imul
jno
push
xor
lods
adc
or
fmull
in
enter
mov
stos
shlb
xchg
lcall
lret
push
mov
cld
dec
ror
cmpsb
push
xchg
arpl
push
test
into
jl
addr16
ret
jecxz
rcrl
push
pop
inc
jge
subl
pop
pop
inc
xchg
hlt
dec
add
lds
or
and
mov
les
mov
pop
xchg
mov
das
or
sub
test
jbe
out
lds
or
sbb
fs
pop
jp
cmpsb
je
xor
out
or
mov
sbb
sbb
pop
test
outsb
inc
sbb
push
dec
pop
mov
mov
cld
mov
into
scas
mov
sub
mov
fistl
leave
adc
pop
popl
movsl
sub
sub
pop
mov
or
imul
xor
mov
push
push
cmc
call
jb
mov
lahf
cmp
pop
aaa
mov
mov
pop
call
inc
pop
test
pop
inc
inc
insl
aam
or
sbb
iret
sub
xor
mov
lds
clc
addl
cmpsl
adc
stc
jl
mov
bswap
push
outsl
push
add
std
add
sbb
sub
es
push
add
scas
dec
or
std
das
dec
jle
int3
sub
bound
clc
sub
inc
insb
xchg
idivl
shr
nop
test
imul
sbb
in
add
mov
mov
dec
ja
insb
test
popf
or
negl
outsb
xchg
jmp
mov
jg
mov
shlb
popf
loopne
cmp
popa
or
push
in
add
jnp
inc
xlat
repz
sar
jecxz
fsubs
inc
pusha
cld
push
lahf
dec
mov
mov
inc
fcompl
out
pop
pop
rcr
fsub
push
pop
jno
mov
dec
adc
dec
aam
sarl
ljmp
pop
ret
addr16
adc
lea
fsubl
shl
dec
call
add
sbb
pushf
insl
js
mov
and
pop
in
or
loopne
jp
ret
cltd
pop
mov
inc
int3
call
shrl
add
jmp
int3
jne
sbb
rolb
cmp
int
xchg
push
fldt
mov
data16
rclb
insb
shl
shlb
stc
nop
ja
jecxz
mov
or
popa
mov
andb
aam
push
push
sub
fldenv
mov
test
cmp
popl
pause
addr16
push
sahf
dec
pop
mov
popf
mov
sub
mov
fldln2
push
aam
jno
insl
out
orl
dec
ds
pop
leave
push
mov
inc
iret
mov
adcl
pop
mov
push
aas
sub
fidivs
lock
mov
adc
insl
fbstp
arpl
stc
cmp
xchg
cmc
xchg
iret
flds
sbb
ret
stc
divb
mov
xor
jnp
nop
mov
jae
add
icebp
stc
int3
mov
insb
mov
shrb
cmp
adc
addr16
cmp
xor
pushf
mov
xor
lret
pop
xchg
or
xchg
inc
fdivrl
xchg
jno
mov
dec
push
ljmp
in
movsl
xchg
inc
mov
add
lcall
sub
loop
sbb
out
pop
fdivr
scas
leave
inc
fstl
cli
lods
xchg
lea
cmp
cmp
dec
arpl
popa
cwtl
insb
daa
int3
cmpsl
mov
mov
inc
pop
sub
or
ljmp
gs
call
and
mov
xchg
push
test
sbb
xor
sbb
xchg
negl
mov
mov
push
fnstenv
out
lcall
std
scas
outsb
pushf
aaa
lea
lock
lods
pop
push
push
pop
xchg
nop
in
inc
insb
aad
add
int3
cmpsb
fmull
fcmove
stos
dec
bound
je
jbe
flds
std
movsl
and
cli
mov
ds
jecxz
mov
aam
sbb
rorb
mov
int
test
adc
notb
call
fs
mov
xor
inc
aas
jg
test
aaa
xchg
mov
sbb
xor
ja
lods
aaa
filds
dec
or
fs
lods
daa
push
xchg
arpl
mov
loope
xchg
cmpsl
push
push
add
outsb
or
xchg
in
int3
mov
sbb
mov
shrb
and
sti
sahf
inc
leave
mov
cwtl
sub
insl
mov
mov
aad
lods
push
fnsave
in
jb
ret
xor
jo
hlt
lea
sub
ds
lea
pop
jg
inc
int3
cwtl
sub
dec
punpckhwd
mov
aam
push
icebp
adc
fsubrl
dec
inc
imul
loope
jge
cmp
push
les
iret
cmp
decb
fnstsw
imul
loopne
shrb
test
unpcklps
inc
or
stos
sbbb
xchg
and
call
mov
cld
xchg
jge
nop
bound
inc
cwtl
sbb
outsl
popa
sub
mov
jecxz
cltd
or
and
adc
test
shll
test
push
mov
or
xor
pop
inc
loop
cmp
dec
mov
bound
sbb
cmpsl
cs
ss
lds
int
shll
shll
xor
and
andb
filds
das
add
inc
in
mov
mov
cli
fmull
in
aas
sub
ficomps
movsl
jecxz
adc
cmp
jns
push
mov
xor
aas
mov
lods
mov
xor
mov
scas
shrd
imul
outsl
test
das
pop
adc
inc
mov
scas
and
jbe
ja
sub
pcmpeqw
nop
and
adc
fs
or
dec
xor
cli
push
je
leave
inc
shlb
jecxz
es
std
push
add
mov
lods
adc
mov
imul
daa
inc
aaa
rorb
mov
push
shrl
mov
pop
inc
daa
rcrb
and
xchg
or
add
mov
or
sbb
out
mov
adc
xor
inc
pop
jae
cmp
mov
outsb
push
mov
mov
repz
sbb
data16
out
jge
jb
fisttpll
mov
stos
push
mov
push
jp
pop
rclb
mov
subb
jne
xor
call
das
push
int
mov
cltd
mov
mov
sub
pop
xchg
mov
mov
and
movsl
jmp
rorl
xlat
add
pop
cmpb
adc
push
mov
dec
dec
push
andnps
xor
xchg
cld
dec
insl
mov
mov
rorl
dec
insl
cmpsl
dec
cmp
test
ret
int
add
aad
stos
shll
in
inc
adcb
cmp
test
pop
call
filds
lahf
ret
movsl
mov
or
and
push
pop
xor
push
cmp
xor
add
pop
leave
jo
jo
jno
loope
and
fcoml
sbb
out
das
sbb
imul
stc
mov
dec
pop
dec
leave
std
xchg
or
mov
cwtl
mov
dec
mov
lea
inc
or
push
xchg
lock
push
jb
pop
mulb
jg
scas
mov
inc
mov
adc
xchg
xor
mov
dec
insl
mov
dec
and
pop
cmp
test
pop
fnstcw
push
filds
xor
pop
xor
aad
push
cmp
or
imul
jo
xchg
aad
mov
xchg
andb
lds
push
cmp
mov
sub
loopne
std
sbbl
jle
dec
adc
lds
rcrb
sbb
insb
dec
rclb
sti
jl
nop
sub
cmp
or
xor
pop
loop
xlat
xchg
pop
sbb
cld
inc
jl
inc
jecxz
dec
or
add
pop
inc
pop
mov
rorb
push
sti
out
lret
mov
jle
sub
jg
pusha
lcall
ja
mov
loopne
jmp
jbe
mov
add
jo
mov
mov
or
ljmp
mov
adc
sahf
cmp
push
adc
out
or
aaa
mov
cmpsb
mov
add
test
jge
fisubl
dec
jmp
pushf
bound
repnz
mov
mov
cwtl
or
insb
int3
sbb
xor
loope
into
in
push
icebp
mov
push
push
repz
pop
xor
mov
into
or
leave
mov
leave
xor
insl
loope
and
jnp
sbb
mov
lock
dec
pop
pop
js
je
sbb
and
add
ror
cmp
inc
pop
mov
popl
add
aas
pop
sub
xchg
sbb
dec
mov
jmp
test
insl
push
inc
mov
dec
mov
data16
and
fistpl
aam
xor
mov
push
cmp
cld
jg
outsl
adc
cmp
scas
pop
das
stc
push
fwait
cmc
lods
add
imul
add
cmc
leave
inc
xor
dec
or
pushf
and
iret
subl
or
dec
adc
ss
inc
std
int3
cmc
out
lds
sub
inc
add
fnstcw
dec
insl
mov
inc
scas
pusha
clc
decb
sub
icebp
jno
outsb
jae
int3
xchg
bound
sub
int3
jmp
sahf
icebp
jmp
or
dec
movsl
jns
loop
push
dec
aad
push
mov
or
adcl
lock
or
aad
lcall
sbb
sbb
stc
or
adc
daa
mov
pusha
out
jae
sbb
adc
jle
cmp
test
popf
ljmp
mov
xor
aad
inc
in
ret
push
ret
mov
nop
call
jae
lahf
test
nop
subl
cmp
xchg
js
cmp
mov
out
in
sub
scas
xchg
aaa
js
adc
xorb
fs
daa
outsl
mov
dec
dec
mov
mov
and
or
mov
outsl
scas
mov
jle
leave
inc
lods
cmpsb
in
push
push
out
xor
popa
gs
out
lret
pop
jg
bndstx
arpl
shlb
and
out
mov
sub
inc
pop
daa
mov
mov
and
dec
movsl
push
push
gs
cmp
or
push
insb
and
lret
fstpl
adcl
out
out
push
and
sbbl
rcrl
jnp
jl
stos
adc
jno
inc
nop
mov
mov
insl
mov
push
pop
xchg
out
mov
mull
pusha
inc
dec
idivl
lret
jo
cli
pop
add
add
and
lods
cltd
or
cltd
ss
les
fidivl
dec
mov
lahf
or
push
pop
pushf
shr
mov
adc
js
fstl
adc
jo
test
push
loope
mov
ud2
push
stos
iret
insl
add
out
test
push
mov
insb
lods
pop
mov
imul
pop
movsl
jo
adc
add
divb
dec
in
pop
mov
fwait
inc
pop
imul
in
pushf
push
sbb
jnp
sub
pop
je
fwait
jno
roll
sbb
testl
or
pop
xor
mov
arpl
mov
pop
pop
jnp
and
out
mov
mov
jbe
ficomps
lds
add
mov
jne
add
xchg
sub
test
sahf
inc
jg
fdivrl
cmp
jp
and
or
out
popa
in
addr16
push
sahf
std
mov
mov
sub
mov
mov
js
dec
push
sahf
fists
xor
lret
sub
push
test
stos
mov
add
in
push
popa
mov
popf
adc
jp
fidivl
push
mov
sbb
in
sub
adc
xor
pop
pop
mov
jl
xlat
mov
xchg
mov
push
jp
xor
gs
repnz
lea
xchg
jg
sahf
push
test
stc
mov
dec
sub
enter
aam
cli
cmp
je
mov
sti
iret
je
js
shll
and
in
dec
popf
loop
and
cmpsb
and
addr16
in
shrl
push
jne
sbb
hlt
fdivrs
mov
outsl
mov
in
or
test
addl
push
inc
jge
lcall
pop
jae
addr16
sbb
clc
leave
mov
dec
dec
imul
mov
sbb
cli
test
dec
inc
sub
mov
sbb
pop
out
inc
cmp
into
push
push
mov
sub
mov
mov
adc
in
sbb
out
adc
xchg
lret
push
adc
loopw
dec
leave
xor
adc
sbb
dec
fldcw
xor
stos
pushf
cmp
and
jnp
jmp
add
lcall
adc
testb
aam
push
lds
pushl
lret
dec
in
rol
popa
sub
jmp
adc
xchg
scas
cmp
scas
jne
das
pop
mov
mov
lods
fstps
int3
mov
insl
dec
pop
push
mull
and
xchg
or
mov
arpl
fsub
cmp
je
sub
addr16
push
cmp
sti
fstpl
jmp
aam
in
cltd
dec
jle
adc
cmp
sbb
cmpsl
fstpl
arpl
mov
leave
sub
cwtl
jne
inc
shll
mov
mov
hlt
mov
loop
stc
sbb
incl
in
push
fdiv
fisubrl
enter
jnp
in
mov
sub
shl
fidivs
mov
leave
sti
jo
dec
stos
xor
mov
xor
pop
lods
aas
xchg
mov
mov
xor
mov
xchg
imul
mov
cltd
pop
cmp
push
dec
lcall
mov
idivl
in
stos
sub
inc
cmp
stos
xor
cmpl
and
addl
and
inc
inc
mov
jg
xchg
pop
in
inc
push
test
mov
pop
in
jbe
stos
lret
cwtl
lret
jne
push
jg
jne
je
cli
mov
push
jecxz
xor
lods
js
aaa
aam
lcall
pop
add
rcl
cs
repnz
xlat
push
pop
push
imul
leave
test
pop
mov
insl
push
and
shr
inc
xor
lea
adc
nop
into
aaa
fadd
inc
jge
jg
stos
mov
push
test
in
std
cwtl
mov
popa
inc
arpl
dec
pop
loopne
int
data16
test
adc
pop
shll
mov
popa
ret
test
bound
sti
push
add
mov
jo
and
pop
rclb
subb
rcll
mov
hlt
popf
popa
sbb
in
or
fsubrl
xor
or
jl
xchg
iret
push
cmp
add
nop
xor
orb
mov
dec
sbb
pop
push
xor
xchg
inc
pop
int
mov
jmp
mov
mov
negl
out
shl
icebp
lret
jbe
or
insb
fs
daa
and
mov
orl
pushf
jp
insl
mov
push
inc
lcall
cmpl
sbb
out
sbb
aaa
fstl
pop
mov
in
xchg
inc
sub
pusha
lods
cmp
mov
movsl
sbb
sti
daa
pop
loopne
dec
sti
icebp
push
dec
pop
pop
scas
xchg
sub
cmp
js
jbe
inc
enter
sub
les
sub
push
sti
adc
loop
cmp
mov
sbb
pusha
mov
jmp
les
insl
push
ss
sahf
fadds
daa
sub
lret
sub
imul
mov
pop
jbe
test
sub
xorb
pop
jmp
negl
mov
push
arpl
jmp
scas
inc
mov
push
aad
cmp
movsb
mov
jge
sub
xchg
xchg
aam
cmp
pop
frstor
add
dec
mov
push
pop
mov
pop
mov
cmpsb
dec
sub
fiaddl
mov
or
loop
es
fisubl
bnd
push
mov
xor
and
sbb
repz
inc
test
xor
xor
add
lcall
movsb
sbb
push
push
sbb
mov
into
push
adc
push
stos
adc
inc
inc
testl
add
daa
or
repz
sub
std
mov
cmp
subl
xor
cmp
mov
stos
fldcw
setb
inc
mov
jl
xchg
adc
int3
mov
cwtl
rdmsr
lahf
or
mul
rolb
in
mov
test
aam
leave
or
mov
xor
and
jb
pop
pushf
in
shlb
dec
imull
mov
aam
jle
not
es
stos
jbe
cmpsb
sub
sbb
pop
int3
repnz
mov
pop
mov
dec
mov
sub
jne
dec
pop
int
mov
push
aas
jb
xor
xchg
inc
mov
bound
fucomip
pop
ret
fbstp
sub
stos
inc
adc
imul
cmp
js
dec
xchg
gs
test
jmp
ret
sub
out
mov
dec
sahf
and
sub
ret
cmpsl
arpl
jae
cwtl
sarb
fcmovne
xchg
repnz
ficoms
test
sbb
xor
out
jle
dec
adc
mov
aad
imul
fidivl
xchg
test
std
push
hlt
fnstenv
mov
popf
cmp
jne
adc
xchg
mov
fsubr
jo
dec
adc
leave
sub
add
int
or
push
in
stc
imul
xor
push
adc
lret
inc
sub
int3
push
cmpb
fildl
and
popa
out
scas
lods
aaa
push
ficompl
aas
arpl
dec
pop
dec
sub
cltd
lods
xchg
fldl
inc
js
std
mov
sub
dec
pusha
insb
xchg
jne
movsb
cwtl
dec
push
push
push
sbb
jno
pop
pop
popf
mov
xor
inc
lahf
cmc
fwait
out
push
and
mov
adc
imul
mov
jbe
push
pop
std
push
mov
cld
push
push
inc
cmp
sbb
cwtl
dec
mov
add
pop
and
movsb
mov
out
stc
xchg
shrb
mov
mov
cmp
sub
cmp
pop
shrl
xchg
pop
dec
mov
loope
rorl
shlb
in
xorb
adc
iret
cwtl
xchg
jp,pn
jmp
repnz
pop
lret
out
mov
sub
pop
aad
test
mov
test
nop
pop
in
cli
mov
in
insl
repz
mov
lcall
dec
dec
pop
and
sub
pop
add
gs
cs
mov
and
repnz
inc
lock
jle
cli
mov
jl
dec
dec
sub
addr16
movsl
or
lock
or
jecxz
addr16
pop
iret
imul
sbb
jns
in
sbb
lock
movsb
out
push
cld
sbb
cmpsb
lea
fdivs
and
je
mov
jecxz
pop
cmc
cmp
sbb
mov
cld
rcr
xchg
mov
or
push
pop
cmp
xor
sbb
push
xor
movsl
outsb
rorb
subb
hlt
mov
xchg
sub
lret
in
movsl
or
fstl
xor
or
jo
xchg
daa
push
pusha
add
adcl
xchg
fadd
fisubs
pop
lahf
xchg
jbe
hlt
test
mov
cmp
mov
dec
rcll
cmp
pop
data16
int3
xor
adc
hlt
dec
lods
stos
shlb
incl
push
jl
push
push
sbb
mov
xor
add
add
cmp
shll
pop
clc
sub
dec
imull
fistps
jb
fwait
pusha
test
xor
push
je
pmulhw
enter
jle
es
repnz
fimull
out
repz
lcall
or
pop
adc
pop
ss
sahf
xchg
sbb
lock
loop
out
push
pop
fwait
mov
das
dec
cmp
push
adc
movsb
sub
popa
shlb
xor
in
jno
call
call
push
and
and
push
out
mov
mov
jge
mov
mov
pop
cmp
movsl
and
sub
cmp
lret
xchg
ljmp
jnp
mov
sbb
inc
jecxz
stos
lods
lds
les
mov
ja
lahf
scas
jno
ds
push
mov
pop
repz
cmpsb
insl
adc
adc
cmpsb
mov
out
call
or
out
add
push
xchg
mov
sti
dec
jb
pop
sub
cwtl
imul
out
dec
pop
in
loope
adc
inc
addr16
stos
xchg
sbb
push
rclb
repnz
dec
mov
addr16
jns
test
sbbb
xchg
out
jns
cmp
or
xor
fs
adcl
lcall
xchg
adc
sub
jo
add
ret
mov
loop
pop
jne
push
movsl
fiadds
gs
or
jmp
mov
push
jo
xchg
inc
mov
pushf
mov
jg
xor
jmp
lret
fmuls
aam
jns
sub
sahf
adc
cmp
mov
imul
ds
mov
pop
push
pop
pop
pop
sarl
cmp
outsl
incb
adc
out
xchg
adc
ds
iret
cmp
ljmp
mov
hlt
stos
mov
adc
insb
fdivrs
and
mov
fscale
xchg
popl
cmp
mov
shll
fcom
push
testb
ret
jb
mov
mov
aam
movsb
rcrb
shrl
jo
inc
imul
sbb
xorb
lcall
repz
repz
inc
cmpsl
dec
lcall
add
arpl
lret
lcall
push
pop
pop
cmp
mov
cmp
outsb
xor
push
cmc
push
push
mov
jl
push
cld
fucomip
sbb
inc
xor
xchg
adc
and
notb
fcoms
xchg
mov
out
mov
popa
pusha
mov
mov
test
fwait
insl
push
fbstp
out
dec
cmpsb
mov
addl
out
rorl
repnz
push
mov
mov
dec
lea
and
mov
mov
mov
mov
mov
mov
mov
jo
xlat
jnp
xchg
aam
popa
adc
fsts
jno
jns
daa
outsb
test
sub
shrb
js,pt
addr16
pop
mov
adcb
or
push
icebp
rolb
cmpb
incb
les
in
adc
leave
rolb
push
xor
stos
cmp
inc
push
pop
dec
sbb
loope
orb
fdivrl
cmpsl
pop
mov
lahf
addl
jnp
inc
jle
pop
repz
sbb
jmp
vfmsubaddps
mov
mov
inc
popa
adc
mov
leave
xor
addb
sbb
bound
sbb
or
mov
ja
arpl
out
lret
inc
cmpsb
mov
push
outsl
push
jns
mov
loop
mov
fucomip
mov
iret
inc
int3
in
inc
xor
gs
jle
add
std
notl
gs
pop
inc
xor
sbb
mov
aaa
les
jb
ja
dec
neg
fldl
scas
call
imul
mov
mov
int3
push
cmp
aas
or
mov
and
or
mov
pop
xor
jb
dec
pop
jg
pop
push
mov
and
cmp
sub
cmp
sbb
rcll
ret
pop
cmp
int
subb
add
shll
xor
rorb
aam
xchg
in
xor
ret
and
repnz
outsb
adc
mov
xor
push
sub
mov
push
xchg
in
fs
mov
jae
xor
and
push
fcomps
rcrb
mov
add
in
push
sbb
enter
pop
and
adc
clc
or
dec
hlt
int3
pusha
mov
jg
sbb
ret
repz
clc
cld
xor
push
pop
mov
in
dec
insb
add
xor
jg
in
aad
mov
dec
push
aaa
enter
data16
mov
sbb
sub
leave
sbb
add
lods
aaa
xchg
adc
out
jge
shl
jge
push
fldln2
subl
mov
cmp
push
pop
repz
stc
cs
xchg
jmp
jmp
adc
dec
incb
mov
push
mov
dec
xor
mov
sub
ret
sbb
xor
fidivrl
je
lods
das
pop
or
loope
leave
addr16
cs
xchg
mov
cmpsl
sbb
cmp
jns
jbe
push
cwtl
jle
rcrb
enter
dec
adc
push
fbld
or
mov
pop
or
aad
movsl
nop
mov
pop
test
sarb
fsubrs
cmp
ret
inc
sahf
xlat
cmp
out
push
mov
dec
sti
mov
mov
outsb
movsb
test
lret
and
iret
aam
sub
insl
insb
mov
mov
loopw
pop
pop
adc
xor
bound
inc
aam
push
sahf
mov
cmc
mov
enter
insb
adc
les
or
fwait
stos
xor
fists
jp
sbb
xchg
lcall
inc
jecxz
push
in
out
and
mov
add
or
jns
fstpl
xor
lea
lret
cmpsl
mov
loope
mov
call
cld
pop
xchg
bound
mov
mov
sar
leave
out
fs
mov
adc
popf
pop
mov
js
cmp
fimull
iret
dec
cmp
mov
or
pop
inc
inc
shrb
sub
adc
pop
pop
sub
push
bnd
rcrl
sub
enter
dec
pop
ss
test
fs
xchg
enter
dec
lock
std
cld
jo
jl
clc
inc
cli
shl
mov
mov
lds
mov
out
cmpsl
test
mov
ljmp
test
lods
adc
mov
cli
mov
sub
sbb
mov
mov
lea
cltd
inc
fidivl
in
insl
add
mov
test
xchg
xor
addl
clc
jl
cmp
mov
pusha
icebp
div
ss
adc
push
pop
sbb
sbb
xchg
movsb
rol
jmp
lcall
js
test
insl
repnz
jnp
lods
mov
movsb
push
dec
das
and
add
cwtl
rorb
je
mov
xchg
pop
adc
stc
notb
cmp
push
add
sti
sub
std
les
pop
pop
xchg
lcall
mov
jg
outsl
addb
dec
addr16
shl
dec
jnp
inc
add
add
pop
stos
push
cmp
pop
jnp
loope
jmp
stos
fbstp
je
mov
pop
cmp
mov
lea
outsb
lret
ffreep
aad
mov
or
dec
sbb
xchg
sub
xor
jecxz
adc
adc
loop
sub
cmp
mov
pop
mov
push
cltd
out
out
cmp
push
push
lods
xor
repz
jmp
xor
decb
aam
mov
dec
je
or
cmp
popa
fsubrl
sub
jl
outsl
jo
cwtl
or
es
addr16
aaa
fucom
pop
mov
ja
xor
sbb
rorl
inc
insb
xchg
xor
subl
pop
adcl
shr
jo
in
mov
cli
sub
or
nop
loop
mov
movsl
and
shrl
cltd
test
lret
jl
mov
and
xchg
out
jae
loop
adcl
xor
mov
ja
dec
pop
ja
adc
mov
push
inc
sahf
add
cld
push
stc
pop
daa
dec
cmpsb
or
std
orl
and
pop
mov
data16
and
mov
test
stos
xor
cmp
stc
sbb
push
int
mov
mov
dec
shrl
gs
hlt
testl
sub
mov
nop
divb
movsb
arpl
idivb
mov
add
sbb
sbb
cwtl
sub
or
sbb
add
stos
lods
fimuls
jb
clc
aas
jle
lods
lods
pop
lcall
or
fisttpl
mov
shll
outsb
test
xchg
jmp
sbb
push
dec
aam
fs
mov
inc
lea
ja
out
in
sbb
dec
xor
jmp
mov
sub
movsl
inc
je
repz
pop
je
sbb
cwtl
out
jecxz
stos
test
gs
outsl
fucomip
push
in
aaa
xchg
aam
lods
in
das
outsl
fiadds
mov
adc
sbbl
std
lods
dec
fstl
ret
sarb
push
mov
xchg
xchg
pop
sub
and
push
sahf
fistpll
loop
pusha
mov
xchg
out
and
loope
lcall
cmpsl
sbb
or
mov
ds
cmp
fcoms
xor
decl
addr16
adc
push
mov
xchg
or
jl
inc
fsubs
les
xlat
pop
and
lret
test
pop
mov
push
xchg
mov
repnz
mov
rcl
call
gs
add
xchg
mov
sbb
jne
push
addr16
pop
aad
inc
xor
popf
ja
and
pop
gs
outsb
mov
adc
xlat
or
xlat
inc
mov
ljmp
jno
mov
pop
mov
fdivp
cwtl
in
lahf
push
inc
test
lahf
and
sbb
movsl
adc
into
pushf
dec
dec
ret
inc
fildll
inc
sahf
mov
rol
sub
or
jge
inc
adc
pop
jne
cmp
divb
push
mov
movsl
push
popf
dec
fidivrs
push
insl
les
call
ja
mov
int
adc
ja
ja
fiaddl
mov
sahf
push
push
scas
sbb
test
loopne
jns
jmp
lods
cmpsl
enter
ja
jno
imul
xchg
sbb
das
mov
cs
std
adc
add
enter
cmp
nop
cli
push
xchg
xchg
jae
fwait
inc
enter
xchg
pusha
and
sarb
cmp
jge
fs
lods
or
dec
std
jo
mov
sahf
adc
in
sbb
mov
ret
sub
sub
or
and
xchg
add
out
leave
xchg
dec
inc
pop
pop
or
cmp
fcom
loopne
and
icebp
sub
add
jmp
loopne
push
mov
sti
test
mov
or
iret
lea
cmp
adc
cmp
cmp
xor
aas
aaa
adc
pushf
jb
jbe
mov
sahf
ds
arpl
popf
sbb
jae
mov
je
adc
insb
pop
fildll
rol
addb
or
inc
cli
mov
mov
dec
iret
lahf
movsl
lcall
pop
loop
push
loope
rolb
jmp
mov
cmp
rclb
xor
mov
int3
in
add
cmp
xor
mov
cs
cmp
out
lcall
mov
mov
inc
repz
or
pop
in
mov
fiaddl
data16
int3
aam
jnp
out
jbe
aaa
rclb
cmp
xchg
inc
out
scas
sbbb
movsb
pop
jmp
je
xor
inc
popf
or
xchg
cmp
and
cmpsb
inc
mov
mov
loopne
fnsave
shlb
cmc
jnp
fdivrs
movsl
or
in
sbb
mov
out
inc
dec
xlat
dec
push
and
pop
cs
or
popf
pop
cmp
dec
sub
pop
call
int
mov
lcall
in
orl
xlat
leave
sbb
or
push
mov
test
sbb
pop
xor
int
bound
jb
stc
add
decb
and
dec
fs
adc
shrb
das
and
add
push
dec
insb
inc
jmp
cmp
cmp
inc
scas
mov
push
fcoms
loop
inc
mov
or
into
mov
push
mov
arpl
outsb
add
rorl
mov
cmc
xlat
lahf
lret
mov
bound
test
test
jmp
out
int3
aas
jp
rep
loope
sub
mov
test
sbb
sbbl
push
and
push
jne
dec
insb
sub
and
mov
aas
lea
call
pop
xchg
push
add
adc
pop
cmp
or
xor
adc
xchg
je
repnz
sub
cwtl
jmp
mov
lcall
jbe
cmp
bound
xchg
or
pop
xchg
shrb
and
xchg
test
js
daa
xchg
mov
roll
inc
sub
or
or
adc
aad
sbb
popa
sbb
mov
sub
ja
push
cmpb
mov
jb
mov
push
xor
pop
pop
and
lcall
pop
push
out
xchg
xor
hlt
xchg
or
add
inc
mov
popa
in
sbb
jp
lock
daa
std
sub
inc
add
movsb
adcl
cmp
bound
xchg
xchg
xlat
mov
sbb
ja
adc
arpl
inc
orl
mov
icebp
imul
or
dec
insb
lds
rcll
jmp
or
aaa
scas
mov
movsl
ror
mov
inc
xchg
setb
push
cmpsb
pushf
inc
les
stc
outsb
sahf
into
jmp
pusha
xchg
or
jb
movsl
push
pop
jb
lods
imul
adc
cmp
sbb
cs
dec
fidivl
mov
mov
orl
js
xor
jp
push
mov
jne
lcall
repnz
cmp
dec
adc
data16
outsl
cmp
ja
sub
lret
jmp
sbb
dec
ljmp
jnp
enter
stos
xor
popa
jecxz
push
test
shl
fldcw
aas
mov
add
xchg
sub
cwtl
leave
imul
push
sub
jae
sbb
xor
push
sbb
shlb
push
fprem1
jns
jp
outsl
lahf
jp
mov
mov
sub
sti
lcall
lock
out
sub
xchg
cmpl
sbb
shll
das
jmp
test
or
aad
movzbl
sahf
ss
and
jmp
or
fsub
scas
dec
fsubrp
jne
cmp
hlt
push
scas
cmpsb
jno
sbb
lea
mov
adc
loopne
mov
mov
adc
jg
inc
fsubrs
jae
xchg
add
sub
push
pop
fisubrl
cmp
clc
cli
mov
add
cld
aaa
es
js
lea
mulb
and
icebp
sti
sub
das
sub
sbb
pusha
xor
lea
add
sub
jns
lea
pusha
pushf
neg
daa
jne
scas
fsubr
mov
cmp
fwait
test
sbb
nop
shlb
sbb
dec
lods
in
mov
cli
es
dec
ja
insl
out
movb
es
dec
bound
or
in
and
outsl
mov
xchg
repnz
xor
iret
mov
or
push
imul
cmp
cwtl
int3
adc
jnp
jo
cmp
addl
mov
dec
mov
jp
arpl
es
pop
fstp
add
xor
sbb
inc
xchg
lods
lods
xchg
add
mov
xor
nop
inc
xchg
imul
mov
test
inc
popa
nop
inc
int
pop
jp
dec
mov
cltd
cmp
fisubrs
cld
in
pop
decl
mov
aad
xchg
ret
mov
fldenv
jmp
mov
imulb
sub
sub
scas
push
push
aas
ljmp
sub
pop
les
out
xor
dec
push
ljmp
adc
dec
stos
push
sahf
cwtl
fmuls
aam
ret
rcl
mov
push
sub
out
lock
inc
lods
es
dec
add
xchg
dec
ja
aas
arpl
sbb
mov
stc
out
stc
int3
flds
jmp
mov
test
popf
aaa
cmpl
or
movsb
add
into
shll
call
cli
add
mov
mov
loope
xchg
sbb
dec
jg
fimuls
mov
out
xor
inc
test
mov
scas
lds
cli
leave
imul
adc
adc
sbb
add
sbb
out
jl
add
shr
dec
lret
mov
test
data16
jne
cltd
inc
les
sub
into
xchg
idivb
add
xchg
bnd
xor
popa
adc
test
sti
inc
adc
cmpsl
jno
loope
push
pop
cmp
xchg
test
std
repnz
jo
popa
call
pushf
mov
ret
shll
cmp
enter
sbb
movsb
mov
popa
sbb
dec
mov
jp
mov
cwtl
iret
jecxz
sbb
insb
add
ljmp
fbstp
pop
pop
popf
ja
push
jno
test
aad
push
outsb
xchg
aad
cmpsb
dec
or
stos
shr
xchg
sub
sub
fistpll
mov
and
imul
daa
pop
mov
mov
pop
mov
mov
addb
xor
popf
fisubl
gs
clc
dec
xor
push
scas
icebp
out
lea
cmp
sahf
aam
adcb
stos
jno
bound
imul
fs
jge
inc
add
jnp
outsb
adc
jle
inc
cmc
fs
je
clc
mov
scas
xlat
push
pusha
sahf
inc
in
andl
les
push
fsubrs
roll
js
sbb
dec
dec
jne
scas
rcr
or
push
add
cltd
and
jmp
sbb
enter
or
cmpsl
inc
lcall
xchg
push
xlat
mov
dec
cwtl
cmp
mov
dec
lret
hlt
xchg
push
cmp
addr16
or
dec
ljmp
movsb
fcom
pop
lahf
imul
sarl
mov
jne
mov
and
aaa
leave
or
testl
testl
sbb
dec
dec
rclb
pusha
push
notb
cmp
lahf
das
test
adc
mov
ja
jge
inc
mov
cmp
add
test
push
inc
cmc
mov
out
and
push
popf
pop
fsts
dec
leave
or
adc
pop
movsl
out
enter
in
mov
adc
gs
out
cmp
pop
daa
push
sub
push
fbld
shll
fwait
scas
int
ljmp
pop
dec
pop
stos
ss
adc
inc
sbb
pop
loop
gs
xchg
shlb
xor
cld
mov
sbb
cmpsl
fstps
pop
xchg
mov
xchg
jge
test
pcmpeqd
popa
inc
stos
cmp
push
and
mov
idivb
dec
add
add
sub
sub
push
loopne
pusha
dec
enter
es
es
lahf
lock
xor
adc
push
les
mov
ljmp
std
push
xchg
push
fsub
repnz
mov
or
or
inc
dec
cltd
insl
add
inc
fcoms
adc
add
into
stos
fwait
mov
bound
imul
and
roll
xchg
ret
int
pop
dec
fisttps
aam
dec
shlb
rolb
int3
jo
fistps
shrl
sub
bound
mov
jp
fisubs
frstpm(287
push
in
inc
lcall
mov
jnp
fsts
jnp
dec
aam
adc
dec
inc
xor
fcmovne
sbb
in
or
ds
pop
mov
mov
stos
leave
mov
mov
xchg
xchg
mov
js
or
inc
and
push
mov
fildll
idivb
adc
js
and
sub
jge
hlt
dec
and
add
or
ret
es
jae
push
scas
cs
shll
shl
fisubrl
cmp
inc
cmp
adc
or
xchg
sub
pop
xchg
fdivs
addr16
test
fbstp
or
fsubl
push
mov
in
ss
xchg
dec
push
pop
lods
xor
lods
xor
imul
push
push
or
daa
inc
insl
xlat
jl
nop
lds
test
or
inc
inc
adc
loopne
add
pop
xchg
clc
sarb
xchg
fs
loope
fisttpll
leave
xor
enter
or
and
push
out
fists
ljmp
fbstp
insl
mov
inc
pusha
dec
or
push
jae
shr
jnp
and
lea
or
iret
xlat
push
lret
add
dec
mov
adc
pop
es
jnp
inc
sbb
add
test
mov
test
repnz
inc
ret
push
mov
test
inc
rorl
jbe
xor
mov
push
sub
sbb
jmp
rcll
adc
xlat
xchg
xor
fisubrl
pop
push
or
cmpsl
push
hlt
repz
sbb
cmp
mov
inc
pop
cmp
mov
in
push
jnp
sti
das
mov
hlt
movsl
xchg
inc
out
or
test
fmull
inc
leave
dec
add
loop
jbe
dec
inc
dec
data16
sub
imul
xchg
dec
xchg
adc
or
outsl
push
mov
movsl
inc
sbb
jb
arpl
or
add
repz
pop
js
push
pop
subb
xchg
loopne
lcall
lcall
loopne
mov
fs
mov
outsl
push
in
testb
add
leave
dec
mov
popf
icebp
rcrb
pop
xchg
arpl
loop
mov
inc
jbe
shrl
pushf
push
mov
cmp
add
sbb
sahf
cmp
imul
mov
dec
cs
call
pop
lods
jmp
shll
or
dec
add
je
sbb
cli
int
stos
dec
adc
roll
outsb
sbb
dec
or
addr16
xor
lods
push
add
dec
ds
pop
xchg
push
mov
mov
sub
cmp
int
les
xor
add
pusha
or
push
mov
je
ret
sub
jns
pop
movsb
aam
push
outsl
jl
adc
lods
bound
sbb
pop
test
shrd
xor
sub
or
test
insb
xchg
adc
mul
pop
fidivs
mov
pop
pop
sbb
sbb
push
test
cmpsb
mov
scas
xor
xchg
outsl
je
mov
inc
sbbb
and
repz
push
fnstcw
xlat
pop
rolb
push
jmp
test
in
push
dec
ja
inc
lcall
fmull
sbb
es
cmp
inc
lds
dec
loopew
mov
xchg
add
push
mov
das
xor
xor
repnz
jecxz
inc
mov
xor
push
adc
inc
test
mov
mov
pop
push
pop
xor
inc
stc
mov
lods
xchg
into
bswap
jb
mov
fs
dec
sub
mov
cmp
ja
fwait
jae
sub
stos
fidivl
stos
mov
cli
cwtl
in
outsb
xchg
ds
aam
push
inc
xchg
imul
enter
dec
and
dec
add
push
push
add
popl
xchg
pusha
testb
cwtl
and
xchg
idivb
xlat
sub
adc
pop
add
cli
cmp
push
loop
mov
mov
inc
xor
cmp
xchg
cli
push
repnz
outsb
addr16
stc
xchg
shlb
mov
stc
je
push
add
fldenv
sahf
push
nop
pushf
out
lock
data16
jo
pushf
mov
aas
loopne
cs
mov
stos
fsts
adc
movsb
js
ss
push
add
in
or
in
ret
add
sahf
js
fdivs
jbe
xchg
sub
jge
jle
fbld
out
faddl
xchg
dec
inc
pop
jo
cmp
jae
imul
call
cmp
xchg
or
jge
popa
outsl
xor
sub
push
fisttpl
sbb
imul
xchg
xchg
mov
xchg
in
sub
outsl
out
inc
fcmovne
rclb
jb
cli
ja
cmp
adc
push
inc
out
iret
icebp
xchg
stos
mov
sbb
pop
mov
cmp
data16
negl
rclb
std
inc
dec
pop
sub
dec
imul
xchg
sbb
bound
jbe
push
and
push
jl
xor
xor
leave
sti
out
dec
and
test
in
incb
iret
movsl
or
scas
sbbb
pusha
and
iret
sbb
repnz
lods
ljmp
push
pop
scas
fcmovb
je
mov
mov
call
orb
data16
leave
insl
fstps
mov
je
les
sub
mov
clc
jecxz
fwait
xchg
rcl
pop
lea
subb
fcompl
lods
and
fcompl
or
loope
imull
fmuls
dec
incl
and
pop
cmp
push
xor
js
dec
inc
pop
xor
sub
fidivrl
push
push
push
sub
sbb
cmpsl
lahf
int3
xor
xchg
mov
jp
sub
mov
popa
jo
es
xor
mov
jb
pop
inc
jae
in
test
mov
leave
adc
pop
dec
push
lds
aad
arpl
adc
hlt
lcall
icebp
mov
lcall
xchg
aad
arpl
test
fnstenv
movq
xor
std
shll
es
mov
sbb
mov
shll
dec
xor
dec
test
fldenv
jmp
test
inc
add
add
sub
mov
cmp
loope
pop
aas
dec
pop
mov
and
add
pop
sbb
cmp
jmp
out
lret
push
cmovno
sub
outsl
popf
jecxz
cmp
push
rcrb
or
dec
push
lods
adc
xchg
popf
ds
jecxz
cmpl
jp
and
and
lahf
roll
jg
add
test
inc
or
mov
or
cmpsb
imul
and
sar
nop
int3
stos
daa
leave
mov
fadds
shrl
mov
adc
sub
push
xor
aaa
cmpl
sub
sub
outsl
jno
sar
dec
in
xchg
fs
popf
fidivs
movsb
sub
and
push
dec
outsl
scas
cmp
dec
mov
jns
mov
mov
imul
add
out
dec
mov
jle
xchg
xchg
pop
in
and
scas
mov
inc
add
mov
cmc
xchg
insl
add
cli
push
cwtl
jb
adc
adc
cmp
jo
mov
lret
scas
mov
aad
cmc
jne
and
cmpsl
xchg
sbb
pop
cmc
and
ds
insb
add
jns
or
fs
imul
mov
push
imul
and
iret
sahf
hlt
cmp
stc
shlb
pop
sahf
cmp
jp
xor
pop
add
xchg
add
ret
loop
dec
push
int
int3
xchg
mov
out
xlat
sbb
int3
stos
cmpsb
loop
ret
pop
sub
push
cmc
scas
cmp
mov
es
cmc
inc
pusha
repz
add
lahf
lcall
jae
popf
jl
jle
loop
xor
push
xchg
loop
pop
iret
lock
pop
repnz
lahf
jae
lock
xor
mov
sbb
add
and
mov
loope
xchg
cmpsl
das
mov
movsb
stos
add
jae
out
mov
and
enter
addr16
nop
enter
push
jne
lret
jnp
mov
jbe
and
scas
sbb
add
adc
loopne
pop
fcmovnb
push
sbb
mov
pop
dec
xlat
add
push
sub
mov
xlat
pop
push
rcl
stos
fisubs
movsl
adc
cmp
mov
push
dec
jecxz
mov
ds
xorl
std
dec
xor
lock
es
outsl
aaa
jg
mov
mov
cmp
jecxz
scas
xor
jecxz
or
lods
pop
test
out
jne
pop
movsb
aad
adc
jle
pop
add
in
jno
or
test
jp
jnp
and
or
pop
inc
fildll
rcll
adc
push
mov
cli
xlat
push
fists
mov
icebp
les
adc
std
add
sti
cmpsl
xchg
jge
xchg
and
lea
in
dec
jle
arpl
notl
outsb
in
and
int3
or
cmpb
cli
mov
imul
jae
dec
cwtl
cmp
sub
loop
xor
bound
lods
or
cmp
push
mov
aaa
test
xor
in
out
push
lods
adc
outsb
fiadds
push
jp
mov
cmp
iret
sbb
jo
fcoms
test
and
adc
lcall
arpl
pop
nop
adcl
in
addr16
cmp
add
sub
adc
inc
lods
sub
sbb
repz
mov
jge
mov
sbb
outsb
mov
cs
out
and
test
xlat
or
mov
add
mov
jnp
dec
les
leave
mov
pop
pop
cmpsb
in
inc
add
pop
mov
mov
xor
daa
insl
outsl
pop
and
xchg
cmp
mov
aad
repnz
repnz
push
fldenv
insb
xor
pop
pusha
xchg
mov
sahf
add
dec
aaa
push
jge
cmp
stos
or
add
xor
dec
push
in
iret
xorb
xchg
sarb
and
mov
testl
enter
pop
cmp
lock
push
js
ret
inc
mov
lret
adc
shll
dec
lret
out
cmpsl
mov
dec
daa
xchg
cmc
dec
cmp
dec
mov
jecxz
mov
or
hlt
lea
test
xchg
jnp
adc
pop
pop
push
or
dec
or
and
adc
frstor
sub
pop
inc
test
mov
adc
test
sub
adc
stos
decl
dec
adc
inc
outsl
inc
sub
adc
repz
nopl
push
inc
add
js
jo
xchg
add
iret
adc
imul
push
sti
pop
cmp
mov
adc
aad
cwtl
or
test
les
cmpsl
shll
pop
sbb
xchg
push
outsl
sbb
xchg
push
adc
inc
pop
sub
loop
in
jno
or
push
pop
mov
shll
xor
mov
push
daa
mov
adc
sub
inc
bound
mov
push
xchg
xchg
or
lods
push
mov
ljmp
pop
pmulhw
in
jno,pn
outsb
dec
enter
sbb
daa
lahf
cmp
xchg
pop
cmp
mov
lret
loopne
lea
add
fchs
out
push
add
mov
pop
sub
in
push
jnp
int
or
mov
sub
pop
outsb
mov
cmp
push
idivb
push
das
lret
and
into
mov
cltd
popa
roll
arpl
jp
xlat
inc
and
fwait
adc
sbb
aas
sbb
fucomi
add
push
adc
icebp
mov
push
mov
je
repnz
and
loopne
dec
dec
xor
or
push
pop
ja
and
xlat
aas
repnz
pop
stos
loop
xchg
addr16
gs
out
lods
shll
lret
jl
int3
adc
notb
adc
inc
dec
or
popf
xchg
sbb
cmpb
negb
rcl
ds
sbb
cmc
aas
loopne
adc
in
ja
shll
mov
orb
mov
sbb
xor
arpl
jbe
sarb
data16
or
pop
cmp
lods
pop
enter
dec
xchg
cmp
sub
ja
mov
in
loopne
call
mov
add
cs
push
push
cmp
mov
xor
push
lods
adc
mov
add
cmpsl
jbe
and
loope
and
pop
std
fnsave
add
test
add
pushf
dec
fcomps
enter
sbb
cmp
scas
mov
dec
dec
adc
fadd
push
loope
stos
addb
cmp
push
sbbl
jge
lods
cltd
pop
cmp
pop
cmp
les
mov
pop
fstpt
imul
inc
inc
loop
cmp
fiaddl
inc
cltd
cmpsb
xor
and
inc
adc
mov
jae
sub
pop
push
xchg
aam
rolb
pop
mov
xor
sub
js,pn
sub
jne
xchg
mov
xchg
jbe
add
fisttpll
lahf
push
mov
fsubs
mov
pop
inc
repnz
aaa
sahf
in
jae
mov
icebp
adc
mov
mov
sub
outsb
scas
iret
inc
outsb
stos
sbb
fwait
push
rclb
and
dec
out
cmp
mov
mov
inc
inc
push
dec
outsb
or
js
andb
dec
into
push
lods
cmc
jb
inc
and
loop
loope
mov
xor
in
enter
jecxz
pushf
mulb
and
pop
jecxz
outsb
pushw
fwait
stos
inc
inc
nop
cli
ret
jle
loopne
adc
imul
pusha
pop
outsl
mov
jae
les
bound
xor
adc
ret
inc
dec
pop
add
and
lods
xchg
shlb
in
ret
dec
mov
inc
pop
test
out
xchg
jae
std
mov
cmp
dec
out
rcrb
push
sti
pop
cmp
int3
xor
cmp
into
push
push
dec
insb
rcll
pusha
cmp
fs
adc
jl
xchg
or
mov
hlt
cmp
and
pop
jmp
enter
and
mov
add
jae
cmpsl
dec
je
movsl
sbb
mov
xorl
andl
push
mov
aam
cli
push
xor
adc
int
cltd
jp
cmp
lret
stos
add
mov
push
mov
movl
psrlq
xlat
insb
and
nop
fneni(8087
imul
xorl
pop
pop
sub
mov
xor
shrb
mov
adc
xorb
pop
nop
imul
push
lcall
mov
add
out
dec
push
iret
loopne
push
dec
clc
dec
movsb
es
pop
and
jno
cmp
inc
stos
jp
in
or
xor
push
stos
xchg
shlb
scas
inc
inc
cmpsl
out
sahf
mov
insl
fisttpl
fdiv
lods
cmp
insl
xchg
je
lcall
xchg
stos
inc
inc
push
cltd
or
enter
mov
aaa
neg
push
dec
xchg
test
cmc
push
pop
cmp
mov
fs
popf
jb
xor
jl
scas
mov
dec
mov
in
out
test
push
mov
aam
add
add
push
inc
loop
pop
mov
jle
cmpb
test
mov
push
dec
out
jno
jle
rcll
cwtl
dec
inc
mov
sar
push
jno
scas
addr16
movsl
sbb
jo
push
cmp
pop
push
mov
mov
inc
aas
outsb
or
or
cmp
fistps
scas
lods
cmc
pop
cli
mov
call
in
push
pusha
std
mov
das
test
push
xchg
rcr
out
es
xchg
imul
fadd
jns
inc
stos
stos
into
js
push
mov
pop
les
or
xchg
loopne
pop
mov
add
jle
sub
cmc
lahf
cmpl
jge
loop
fistps
mov
enter
in
pop
add
xor
push
aam
jg
jb
mov
mov
or
or
rcr
movd
push
stc
mov
mov
mov
and
push
lods
les
or
inc
add
repz
and
dec
add
or
lea
adc
jl
movsl
aad
in
enter
inc
adc
push
pushf
out
fnstsw
shlb
ds
and
pop
push
lret
pop
ret
mov
sub
jo
add
lahf
rep
xor
mov
mov
in
sub
roll
adc
cmpsb
mov
sub
and
mov
xchg
ljmp
push
jb
mov
push
movsb
lcall
or
xchg
mov
outsl
ret
pop
loop
ljmp
ret
push
pop
test
adcl
mov
or
inc
aaa
mov
mov
and
clc
mov
sbb
rcrl
cwtd
test
xlat
xchg
mov
xor
scas
xor
push
inc
jecxz
insl
fs
inc
lea
fidivl
shlb
pop
rcrl
movsl
test
inc
icebp
inc
mov
mov
fisttps
stc
push
in
push
ret
ret
jb
fwait
stos
nop
bound
gs
fsubr
jge
ret
sbb
lret
rep
cli
push
bound
lcall
pop
divps
jge
cmp
mov
pop
ret
cmp
xchg
jmp
mov
push
push
pusha
xchg
sbb
jno
shrl
das
scas
fsubrl
pop
rdpmc
sub
mov
xorl
mov
rorb
setns
ret
cltd
xor
addr16
sub
or
sub
or
or
push
rol
ss
pop
sbb
push
stos
ss
stos
test
cmpsb
xlat
add
call
jo
mov
in
inc
add
or
pop
fdivrs
pusha
mov
jg
push
mov
addl
insl
cmc
xor
fdivrp
push
inc
cwtl
fnstenv
daa
inc
xchg
xor
lret
sahf
pop
push
xor
mov
add
ljmp
pop
cmp
inc
inc
dec
push
arpl
fstps
lahf
in
jge
scas
iret
jne
xor
cwtl
int3
push
jp
std
gs
lds
and
adc
push
inc
mov
cmpsl
push
lock
sbb
xorb
push
orb
xor
aas
lahf
sbb
mov
inc
pusha
and
jecxz
cmp
inc
mov
lcall
pop
rcrl
fwait
or
divb
adc
jae
sub
jmp
mov
ja
loopne
aad
sbb
jb
mov
mov
mov
adc
pop
mov
lcall
lock
daa
jmp
push
mov
sub
pop
jno
pop
iret
pop
call
call
push
jge
cld
inc
sub
data16
ret
mov
aam
pop
pop
test
and
out
stos
xchg
pop
pop
push
ja
in
mov
dec
imul
fadds
or
enter
sub
push
jae
mov
mov
sub
xor
ss
pop
ret
xchg
jg
rorl
push
add
pop
mov
js
adcb
xor
push
imul
rolb
mov
popa
push
mov
sub
lds
repz
cmc
addr16
sbb
imul
sbb
mov
jo
xor
lds
jnp
push
testb
push
daa
out
mov
push
push
out
mov
jae
loopne
cmp
jge
cltd
andl
sub
or
add
js
gs
das
push
pusha
cmpsl
imul
cld
mov
pop
ret
add
ret
addr16
clc
mov
insb
gs
xchg
mov
addb
in
imulb
push
dec
jp
adc
xchg
js
addr16
dec
and
js
mov
adc
divb
jno
fcoms
adc
and
sub
push
fnstsw
push
pop
pushf
adc
cld
scas
outsl
mov
in
movsb
daa
mov
sbb
cmc
adc
jmp
mov
jae
int
aaa
xchg
dec
pop
push
icebp
js
xchg
repz
lret
sbb
mov
int
jbe
and
jmp
push
outsl
outsb
jmp
in
ret
fiadds
shrb
add
cltd
xchg
dec
adcl
jae
push
jns
dec
mov
popf
xlat
push
repnz
enter
shl
xor
lahf
push
push
add
xor
shl
out
jl
stos
cmp
jns
add
sbb
popf
jl
ljmp
mov
adc
out
fnstsw
cltd
adc
or
or
imul
mov
pop
les
lea
or
sub
mov
mov
push
scas
bound
popa
ss
jae
hlt
and
adc
jne
and
sub
lcall
inc
mov
xchg
pop
lock
movsl
scas
fisttps
jae
xchg
lret
into
pop
in
mov
push
mov
jle
cmp
pop
pushf
lret
sbb
sub
xchg
mov
dec
int3
stc
faddl
inc
dec
xchg
add
jo
fisubs
lahf
or
push
lock
pop
pushf
fimull
xor
mov
mov
mov
adc
inc
push
imul
inc
and
push
pop
jns,pt
adc
inc
mov
stc
xor
dec
jg
or
fisubl
lods
jl
test
mov
pop
cltd
pop
jbe
sbb
or
lret
mov
xor
inc
cmp
adc
cmp
sub
sarb
sub
ret
xchg
xchg
insl
inc
mov
mov
cld
sahf
leave
and
xor
or
lcall
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
push
mov
add
addl
subl
cmp
ja
add
test
jne
add
sub
sub
and
movl
movl
lea
mov
mov
mov
imul
mov
xor
sub
jne
sub
adc
movl
movl
lea
mov
mov
mov
add
imul
mov
xor
mov
movl
movl
lea
mov
mov
mov
add
sub
add
cmp
je
sub
testl
jb
add
and
sub
sub
xor
movl
mov
cmp
incl
cmpl
jle
xor
mov
movl
cmpl
jle
movl
cmpl
je
movl
movl
lea
mov
movl
mov
mov
or
mov
inc
mov
cltd
idiv
mov
add
addl
test
jb
sbbl
test
jb
sub
adc
sub
sub
jmp
movl
lea
mov
mov
inc
push
mov
pop
mov
cltd
idiv
imul
mov
mov
imull
add
incl
cmpl
jle
movl
movl
mov
imull
mov
xor
or
add
jne
add
addl
cmp
jb
sbb
sbb
sub
sub
adc
test
jb
add
test
jl
add
adc
and
add
adc
add
movl
mov
imul
mov
mov
inc
mov
cltd
idiv
mov
xor
mov
cmpl
movl
mov
or
mov
sub
sub
adc
test
je
add
testl
je
subl
add
sub
sub
movl
cmpl
jg
xor
mov
subl
test
je
or
add
adc
incl
cmpl
jle
mov
imull
imul
mov
incl
cmpl
jle
movl
lea
mov
mov
mov
add
imul
mov
and
testl
jne
subl
add
test
jl
add
sbb
add
sub
add
xor
cmp
ja
add
add
sub
sbb
test
ja
add
addl
mov
pop
ret
push
mov
add
movl
mov
sub
imul
mov
pushl
call
movl
movl
pushl
call
pushl
pushl
call
movl
lea
mov
mov
or
mov
imul
imul
mov
xor
mov
pushl
call
movl
movl
mov
add
sub
incl
cmpl
jle
flds
fmuls
fstps
call
add
cmp
jne
sub
subl
sub
xor
mov
movl
push
push
pushl
pushl
call
movl
mov
inc
mov
mov
cltd
idiv
add
incl
cmpl
jle
xor
mov
movl
movl
lea
mov
mov
mov
add
mov
xor
mov
movl
movl
pushl
pushl
call
and
test
jb
sub
sub
add
jb
add
add
addl
xorl
incl
cmpl
jle
movl
movl
pushl
pushl
push
pushl
pushl
call
incl
cmpl
jle
movl
movl
pushl
pushl
pushl
push
call
xor
mov
pushl
pushl
pushl
push
call
incl
cmpl
jle
flds
fdivs
fstps
movl
pushl
pushl
pushl
push
call
sub
test
jne
addl
add
test
jne
sub
sub
sub
andl
xor
mov
incl
cmpl
jle
movl
movl
lea
mov
mov
mov
mov
or
add
sub
sbb
add
test
ja
sub
orl
test
je
add
sub
add
subl
flds
fmuls
fstps
movl
cmpl
jge
xor
mov
pushl
push
push
pushl
push
call
movl
mov
imull
add
incl
cmpl
jle
flds
fmuls
fmuls
fstps
flds
mov
pop
ret
nop
push
mov
add
movl
movl
mov
or
mov
sub
mov
xor
mov
and
addl
sub
ja
add
xor
test
jl
subl
sub
add
sub
sub
incl
cmpl
jle
movl
movl
lea
mov
mov
mov
and
mov
and
imul
mov
sub
test
jl
sub
add
or
add
movl
lea
mov
mov
mov
imull
add
cmpl
je
movl
movl
mov
cmp
jl
movl
mov
sub
sub
subl
xor
cmp
jne
sub
add
cmp
jb
sub
addl
add
add
movl
lea
mov
mov
and
mov
inc
mov
cltd
idiv
imul
mov
jmp
movl
movl
mov
add
mov
sub
cmp
jl
sub
sbb
cmp
jl
sub
sub
sub
sub
sub
xor
mov
incl
cmpl
jle
movl
lea
mov
mov
mov
mov
or
add
mov
sub
subl
test
jne
adc
sub
cmp
je
subl
subl
sub
add
or
test
ja
sub
adc
test
jne
adc
add
sbb
xor
mov
pop
ret
push
mov
add
movl
movl
movl
mov
or
imull
mov
movl
movl
movl
mov
or
add
add
xor
mov
movl
movl
mov
add
mov
incl
cmpl
jle
add
cmp
jl
sub
sub
test
jne
add
addl
xor
or
xor
sub
add
sub
je
add
addl
cmp
jl
adcl
sbb
subl
and
add
movl
mov
imul
add
lea
mov
mov
mov
imul
mov
xor
mov
incl
cmpl
jle
sub
addl
testl
je
sub
adc
cmp
ja
xor
and
sub
mov
inc
push
mov
pop
mov
cltd
idiv
mov
add
and
sub
ja
add
sub
sub
ja
add
sbb
add
sub
mov
pop
ret
nop
nop
push
mov
add
subl
test
ja
sub
sub
cmp
jl
add
sub
sub
sub
sub
xor
mov
movl
cmpl
jle
sub
cmp
jne
subl
sbb
test
jl
or
add
add
subl
sbb
test
jl
add
sub
test
ja
xor
xor
sub
and
sbb
add
xor
sub
jb
sub
sub
cmp
jne
add
subl
or
add
movl
movl
mov
imul
mov
incl
cmpl
jle
movl
movl
movl
mov
or
add
mov
sbbl
sbb
test
jb
sub
test
jne
add
sub
sub
add
movl
movl
lea
mov
mov
mov
sub
imul
mov
movl
mov
add
imul
mov
movl
movl
mov
inc
mov
mov
cltd
idiv
sub
addl
addl
test
jb
add
sbb
je
andl
sub
sub
add
sub
movl
mov
and
mov
and
sub
mov
movl
cmpl
cmpl
jge
mov
cmp
jg
add
test
jb
add
add
test
je
sub
sub
add
sub
add
jmp
xor
mov
add
add
cmp
ja
add
sub
sub
lea
mov
mov
mov
mov
inc
mov
cltd
idiv
mov
add
test
jl
add
sub
add
incl
cmpl
jle
movl
mov
cmp
jge
jmp
movl
lea
mov
mov
mov
add
add
xor
mov
sub
testl
jb
sub
sub
mov
sub
mov
sbb
test
ja
sub
test
jne
xorl
add
add
sub
incl
cmpl
jle
sub
test
jl
sub
cmp
jl
add
sub
sub
or
or
mov
pop
ret
push
mov
add
xor
mov
incl
cmpl
jle
movl
cmpl
jl
movl
movl
lea
mov
mov
inc
mov
cltd
idiv
sub
sbb
cmp
jne
add
andl
add
sub
jmp
movl
movl
mov
and
imul
mov
movl
movl
lea
mov
mov
mov
sub
imul
mov
movl
movl
movl
movl
mov
or
mov
and
add
mov
movl
lea
mov
lea
mov
mov
mov
mov
inc
mov
cltd
idiv
mov
sub
subl
test
jne
add
sub
add
lea
mov
lea
mov
mov
mov
mov
mov
and
sub
mov
subl
cmp
jb
add
add
testl
je
subl
sub
add
add
add
xor
mov
adc
add
jb
sub
addl
addl
xor
mov
xor
mov
movl
movl
lea
mov
mov
mov
add
mov
incl
cmpl
jle
movl
movl
lea
mov
lea
mov
mov
mov
mov
add
mov
incl
cmpl
jle
incl
cmpl
jle
mov
and
mov
sub
mov
movl
movl
mov
sub
mov
or
add
test
je
add
testl
jb
adc
adc
sub
sbb
add
sub
add
test
jne
subl
sub
addl
mov
pop
ret
nop
nop
push
mov
add
add
add
cmp
jne
add
add
cmp
ja
addl
or
sub
addl
xor
mov
movl
cmpl
je
adc
cmp
ja
sub
add
add
xor
mov
or
add
ja
add
add
cmp
jl
add
adc
add
incl
cmpl
jle
incl
cmpl
jle
xor
mov
addl
sub
test
jl
addl
sbb
addl
incl
cmpl
jle
movl
cmpl
jle
sub
test
ja
xor
or
cmp
jl
addl
and
add
xorl
sub
or
movl
movl
mov
sub
mov
jmp
movl
movl
lea
mov
mov
mov
imull
mov
movl
movl
mov
inc
mov
mov
cltd
idiv
mov
subl
cmp
jl
add
add
cmp
jb
sub
sub
sub
add
adc
sub
subl
test
ja
add
add
testl
je
sbb
sub
sub
add
movl
movl
movl
mov
inc
push
mov
pop
mov
cltd
idiv
mov
movl
movl
mov
imull
add
movl
lea
mov
mov
mov
mov
or
sub
mov
movl
movl
mov
imul
imul
mov
xor
mov
add
test
jne
subl
test
jl
addl
sbb
sbb
or
cmpl
jge
jmp
movl
lea
mov
mov
mov
sub
mov
incl
cmpl
jle
add
and
cmp
jne
and
add
jb
add
xor
sub
add
movl
lea
mov
mov
mov
sub
sub
add
and
add
ja
add
sub
sbb
sub
add
test
je
sub
sub
sub
add
mov
pop
ret
nop
push
mov
add
movl
cmpl
jne
cmpl
jne
push
push
push
push
call
xor
mov
movl
movl
pushl
pushl
pushl
call
movl
lea
mov
mov
mov
imull
add
movl
pushl
pushl
pushl
call
pushl
pushl
pushl
call
incl
cmpl
jle
movl
movl
push
pushl
pushl
pushl
pushl
call
movl
mov
add
add
addl
add
cmp
jb
sub
cmp
ja
sub
sub
add
sub
add
xor
mov
movl
movl
pushl
pushl
pushl
call
adc
cmp
jne
addl
cmp
jl
sub
add
add
pushl
pushl
pushl
call
pushl
push
pushl
push
call
mov
add
imul
mov
incl
cmpl
jle
movl
cmpl
jg
movl
movl
pushl
pushl
push
pushl
call
movl
pushl
pushl
push
pushl
call
pushl
pushl
push
pushl
push
call
xor
mov
mov
mov
cmpl
je
add
test
jb
add
test
jne
add
subl
or
add
adc
addl
sub
ja
add
sub
and
decl
movl
cmpl
jge
movl
lea
mov
lea
mov
movl
mov
mov
or
mov
mov
or
imul
add
sub
add
test
ja
add
sub
test
ja
and
sub
or
sub
sub
movl
mov
sub
imul
mov
call
mov
movl
lea
mov
mov
mov
or
mov
and
sub
mov
add
test
jne
add
test
jb
xor
add
add
sub
add
xor
mov
movl
movl
mov
inc
push
mov
pop
mov
cltd
idiv
sub
incl
cmpl
jle
xor
mov
movl
mov
sub
mov
add
test
jne
sub
sub
test
jne
and
sub
adc
sbb
movl
movl
mov
cmp
jge
subl
xor
ja
add
add
cmp
jl
add
sub
sub
add
mov
or
sub
sub
add
sub
cmp
je
and
xor
add
add
jmp
movl
lea
mov
lea
mov
mov
mov
mov
mov
or
sub
sub
incl
cmpl
jle
mov
and
cmp
jne
xor
mov
xor
mov
incl
cmpl
jle
incl
cmpl
jle
movl
mov
add
mov
add
testl
ja
and
adc
add
mov
test
je
movl
xor
mov
movl
cmpl
jle
movl
lea
mov
mov
mov
add
imul
mov
add
add
test
je
add
sub
test
jb
sub
add
sub
xor
add
jmp
movl
lea
mov
lea
mov
mov
mov
mov
add
mov
movl
cmpl
jg
sbb
cmp
jb
and
cmp
jl
sub
sub
adc
adc
jmp
add
sub
cmp
jne
add
add
sub
subl
sub
cmp
jl
add
subl
adc
incl
cmpl
jle
add
sub
cmp
jb
sub
adc
cmp
je
sbb
addl
sub
sub
sub
jmp
xor
mov
xor
mov
add
sbb
jb
add
cmp
jne
add
sbb
add
sbb
incl
cmpl
jle
movl
cmpl
jg
xor
test
jb
sub
addl
or
orl
movl
movl
mov
inc
mov
mov
cltd
idiv
mov
and
add
je
and
and
sub
adc
incl
cmpl
jle
movl
mov
add
mov
xor
mov
movl
mov
cmp
je
movl
movl
mov
and
sub
imul
mov
add
addl
testl
jl
sub
cmp
jne
sub
add
add
xor
mov
xor
mov
movl
mov
add
sub
incl
cmpl
jle
incl
cmpl
jle
movl
movl
lea
mov
mov
mov
sub
sub
lea
mov
mov
mov
add
add
add
cmp
jl
xor
test
jl
add
sbb
sub
subl
cmpl
jne
movl
pushl
push
pushl
pushl
call
movl
mov
or
mov
sub
add
push
lea
push
call
movl
movl
lea
mov
mov
mov
mov
inc
mov
cltd
idiv
imul
mov
sub
testl
jb
sub
addl
sub
movl
push
push
push
call
movl
pushl
call
push
call
pushl
pushl
call
mov
mov
mov
pop
ret
nop
nop
push
mov
add
movl
cmpl
jge
xor
mov
incl
cmpl
jle
jmp
addl
test
ja
add
test
ja
add
or
adc
adc
movl
cmpl
je
movl
movl
mov
imul
mov
add
testl
jl
add
and
test
je
and
or
subl
add
add
adc
cmp
jne
or
sbb
test
jl
or
add
sbb
sub
add
jmp
adc
test
je
addl
add
test
jb
sub
sub
sub
add
sbb
add
sub
test
je
sub
test
ja
sub
add
xor
add
sbb
movl
cmpl
jge
movl
movl
lea
mov
lea
mov
mov
mov
mov
mov
or
imul
mov
jmp
movl
mov
cmp
jg
movl
movl
mov
inc
push
mov
pop
mov
cltd
idiv
mov
movl
movl
movl
mov
or
mov
inc
mov
cltd
idiv
mov
movl
mov
inc
push
mov
pop
mov
cltd
idiv
add
movl
movl
lea
mov
mov
mov
sub
add
and
sub
test
je
add
test
ja
adc
sub
xorl
or
movl
lea
mov
mov
inc
push
mov
pop
mov
cltd
idiv
add
add
sub
test
je
sub
sub
je
sub
sub
add
lea
mov
mov
inc
push
mov
pop
mov
cltd
idiv
add
or
add
test
ja
sub
add
cmp
ja
sub
sub
sub
sub
add
movl
movl
lea
mov
mov
mov
sub
sub
subl
adc
jb
sbbl
sub
movl
mov
cmp
jle
movl
mov
cmp
jle
cmpl
jle
lea
mov
mov
mov
add
sub
mov
and
imul
sub
jmp
movl
mov
inc
mov
cltd
idiv
sub
xor
mov
movl
cmpl
jg
lea
mov
mov
inc
mov
mov
cltd
idiv
imul
mov
jmp
movl
lea
mov
mov
mov
mov
inc
mov
cltd
idiv
sub
movl
mov
inc
push
mov
pop
mov
cltd
idiv
imul
mov
add
sub
cmp
jb
sub
sub
cmp
ja
sub
sub
sub
sub
sub
xor
mov
and
or
test
jne
and
test
ja
andl
subl
sbb
addl
orl
incl
cmpl
jle
incl
cmpl
jle
add
add
cmp
jne
adc
test
je
xor
addl
sub
subl
sub
mov
add
imul
mov
movl
cmpl
jne
movl
mov
inc
mov
mov
cltd
idiv
sub
xor
mov
movl
movl
mov
or
imul
mov
add
test
jl
subl
add
add
lea
mov
mov
mov
or
add
imul
mov
incl
cmpl
jle
lea
mov
lea
mov
mov
mov
or
mov
sub
sub
sub
test
ja
xor
add
add
mov
pop
ret
nop
nop
nop
push
mov
add
push
push
push
push
call
add
testl
je
orl
sbb
sbb
movl
movl
lea
mov
mov
and
mov
add
sub
movl
movl
mov
or
mov
sub
mov
add
cmp
ja
and
test
jl
add
sub
subl
sbb
add
sbb
pushl
push
pushl
push
call
pushl
push
pushl
push
call
push
push
pushl
call
push
call
push
call
movl
cmpl
je
movl
lea
mov
mov
mov
or
imul
add
cmpl
je
xor
mov
push
call
orl
sub
test
jb
add
sub
test
ja
sub
add
addl
xor
movl
movl
mov
and
imull
imul
mov
push
call
addl
test
jne
add
add
xorl
incl
cmpl
jle
jmp
push
lea
push
call
push
push
push
pushl
call
mov
pop
ret
nop
nop
push
mov
add
sub
sub
test
je
sub
sub
sub
sub
test
ja
add
xor
testl
jl
sub
subl
add
sub
and
movl
movl
lea
mov
movl
mov
and
mov
sub
mov
movl
mov
or
sub
mov
sub
sub
test
jb
add
sub
cmp
jne
add
adc
xor
add
sub
movl
cmpl
movl
movl
mov
sub
mov
movl
mov
sub
mov
add
add
je
sub
sub
cmpl
jl
sub
xor
testl
jne
or
and
sub
sub
movl
lea
mov
mov
mov
and
mov
or
sub
mov
add
testl
je
add
test
jne
subl
add
or
addl
movl
mov
sub
mov
cmpl
je
movl
cmpl
jle
sbb
add
test
jl
or
addl
test
jne
sub
add
sbb
sub
add
subl
xor
mov
incl
cmpl
jle
xor
mov
addl
testl
jb
add
test
jb
add
add
sub
add
incl
cmpl
jle
mov
cmp
jne
movl
lea
mov
mov
mov
sub
imul
mov
sub
test
jl
sub
addl
test
jl
add
sub
sub
subl
mov
pop
ret
nop
push
mov
add
movl
movl
mov
or
sub
imul
mov
add
cmp
jb
xor
cmp
jb
sub
or
sub
sub
sub
xor
mov
incl
cmpl
jle
or
sub
test
jb
add
add
xor
add
movl
movl
mov
imul
imul
mov
xor
mov
xor
mov
add
add
test
jb
subl
and
test
je
sub
sub
add
sub
incl
cmpl
jle
incl
cmpl
jle
call
xor
mov
xor
mov
movl
cmpl
jle
add
cmp
jl
and
add
cmp
ja
sub
subl
sbb
adc
xor
mov
movl
lea
mov
mov
mov
mov
and
add
mov
incl
cmpl
jle
incl
cmpl
jle
movl
cmpl
jl
movl
cmpl
jle
movl
mov
inc
mov
cltd
idiv
imul
mov
sub
sub
jne
sub
add
xor
addl
mov
imul
imul
mov
jmp
xor
add
test
jne
add
xor
test
je
adc
and
add
adc
movl
lea
mov
lea
mov
mov
mov
mov
mov
or
imul
sub
jmp
movl
movl
mov
cmp
jne
lea
mov
mov
mov
imull
mov
xor
mov
movl
cmpl
jg
movl
mov
imul
add
movl
mov
add
imul
mov
incl
cmpl
jle
pushl
call
mov
call
mov
movl
cmpl
jl
movl
mov
sub
add
xor
and
jne
add
test
jb
sub
add
sub
sub
jmp
movl
movl
mov
inc
mov
cltd
idiv
add
mov
mov
movl
mov
add
imul
mov
addl
sub
test
je
sub
and
sbb
and
mov
shr
mov
movl
mov
sub
add
xor
mov
movl
movl
movl
mov
and
sub
sub
xor
mov
movl
movl
mov
sub
imul
mov
incl
cmpl
jle
incl
cmpl
jle
add
test
ja
add
test
jb
sub
xorl
sub
shrl
movl
mov
cmp
movl
lea
mov
mov
mov
sub
imul
mov
movl
movl
lea
mov
mov
mov
add
add
lea
mov
mov
inc
push
mov
pop
mov
cltd
idiv
sub
add
sub
test
jne
add
add
je
add
addl
sbb
add
mov
xor
movl
cmpl
jle
xor
mov
and
test
ja
adc
sub
testl
jne
sub
add
or
sub
add
movl
movl
mov
or
mov
sub
sub
or
xor
add
jne
add
add
test
je
subl
sub
add
xor
sub
sub
subl
cmp
jb
add
sub
incl
cmpl
jle
xor
mov
sub
sbb
testl
ja
sub
or
add
incl
cmpl
jle
jmp
movl
cmpl
add
test
jne
sub
add
or
call
xor
mov
add
cmp
jne
sub
subl
movl
movl
lea
mov
mov
mov
sub
sub
xor
mov
incl
cmpl
jle
mov
mov
pop
ret
nop
push
mov
add
mov
shl
mov
or
sub
cmp
jl
add
and
addl
shll
mov
mov
pop
ret
push
mov
add
add
add
test
jne
add
sub
movl
movl
mov
or
mov
sub
add
mov
mov
movl
movl
mov
or
mov
and
sub
imul
mov
movl
mov
and
add
add
add
cmp
jl
add
xor
test
ja
sub
add
add
mov
mov
mov
mov
movl
movl
pushl
pushl
pushl
pushl
call
sub
add
test
je
sub
test
je
add
add
sub
adc
or
xor
xor
mov
xor
mov
lea
push
call
movl
mov
imul
sub
push
lea
push
call
incl
cmpl
jle
xor
mov
call
incl
cmpl
jle
push
call
incl
cmpl
jle
lea
mov
mov
mov
imul
add
xor
mov
pop
ret
nop
nop
nop
push
mov
add
sub
sub
cmp
ja
add
test
ja
and
sbb
sub
sub
or
addl
cmp
jb
add
sub
cmp
ja
or
sub
sub
xor
mov
incl
cmpl
jle
movl
cmpl
add
test
jne
sbb
add
sbbl
xor
mov
movl
movl
mov
or
add
mov
incl
cmpl
jle
movl
movl
mov
inc
push
mov
pop
mov
cltd
idiv
mov
add
testl
jl
sub
or
test
ja
or
or
and
subl
movl
cmpl
je
movl
mov
sub
add
xor
mov
lea
mov
mov
mov
mov
inc
mov
cltd
idiv
mov
add
addl
sub
jb
subl
test
jne
sub
or
add
incl
cmpl
jle
sub
add
cmp
ja
add
cmp
jne
sub
subl
and
addl
sub
sbb
testl
jl
sub
add
test
jb
add
add
add
sub
mov
pop
ret
push
mov
add
xor
mov
or
subl
testl
jne
sub
add
addl
movl
cmpl
je
movl
movl
mov
sub
sub
movl
mov
inc
mov
cltd
idiv
sub
movl
mov
inc
mov
cltd
idiv
add
sub
testl
jl
orl
addl
sub
add
jmp
sub
testl
ja
sub
and
sub
sub
incl
cmpl
jle
mov
mov
movl
cmpl
jl
movl
mov
imull
mov
lea
mov
mov
mov
add
add
mov
mov
pop
ret
nop
push
mov
add
movl
movl
mov
add
mov
andl
xor
test
jl
sub
sub
add
movl
cmpl
jg
movl
movl
mov
cmp
jl
add
sub
cmp
jl
sub
add
sub
movl
cmpl
jge
movl
mov
and
add
mov
sub
add
jne
or
test
ja
or
sub
sub
add
sub
cmp
jb
add
test
jl
add
add
sbbl
sub
jmp
addl
add
test
je
add
sub
addl
add
movl
cmpl
jge
adc
add
cmp
ja
add
test
je
adc
add
add
sub
add
subl
xor
mov
incl
cmpl
jle
movl
mov
inc
mov
mov
cltd
idiv
mov
cmpl
jge
movl
movl
mov
inc
push
mov
pop
mov
cltd
idiv
imul
mov
jmp
movl
cmpl
movl
movl
mov
or
add
add
xor
mov
xor
mov
xor
mov
addl
test
je
sbb
test
jl
sub
addl
adc
or
sub
incl
cmpl
jle
incl
cmpl
jle
incl
cmpl
jle
movl
lea
mov
mov
mov
or
mov
or
sub
mov
movl
cmpl
jle
cmpl
jle
movl
lea
mov
movl
mov
mov
mov
or
sub
imul
mov
xor
mov
cmpl
jl
movl
lea
mov
movl
mov
or
mov
imul
add
incl
cmpl
jle
movl
movl
mov
or
imull
mov
xor
add
testl
je
sub
add
mov
pop
ret
push
mov
add
call
mov
movl
movl
mov
or
sub
imul
mov
movl
movl
mov
or
mov
and
add
add
cmpl
jge
movl
lea
mov
mov
mov
sub
sub
xor
mov
movl
cmpl
je
movl
push
pushl
push
pushl
call
movl
mov
inc
mov
mov
cltd
idiv
imul
mov
sub
cmp
ja
sub
and
test
ja
adc
add
sub
add
add
sbb
incl
cmpl
jle
jmp
movl
mov
inc
push
mov
pop
mov
cltd
idiv
mov
add
addl
test
je
add
sub
cmp
je
add
sub
adcl
add
add
pushl
pushl
pushl
pushl
call
or
adcl
cmp
jl
add
add
test
je
add
sub
or
adc
sub
subl
lea
mov
mov
mov
sub
add
movl
cmpl
jle
movl
movl
pushl
pushl
pushl
call
mov
and
mov
sub
imul
mov
movl
lea
mov
mov
mov
or
imull
add
movl
movl
lea
mov
mov
mov
mov
inc
mov
cltd
idiv
add
xor
mov
pushl
call
incl
cmpl
jle
decl
je
pushl
pushl
pushl
call
jmp
xor
mov
xor
mov
call
incl
cmpl
jle
movl
movl
lea
mov
mov
mov
add
mov
incl
cmpl
jle
xor
mov
movl
movl
pushl
pushl
pushl
pushl
call
movl
movl
mov
and
mov
sub
imul
mov
incl
cmpl
jle
mov
mov
pop
ret
nop
push
mov
add
movl
mov
add
sub
xor
mov
incl
cmpl
jle
adc
test
jl
sub
testl
ja
sub
sub
sub
or
mov
shr
xor
mov
mov
mov
pop
ret
nop
nop
nop
push
mov
add
sub
xor
test
jb
or
test
je
xor
add
sbb
add
subl
sbb
add
jne
add
xor
test
jl
sub
sub
adcl
and
movl
movl
lea
mov
mov
mov
or
imul
mov
sub
add
ja
sub
sub
sub
sub
add
jb
sub
addl
add
movl
movl
mov
add
mov
and
sub
test
ja
sub
addl
add
movl
movl
mov
or
sub
mov
movl
movl
mov
add
sub
xor
mov
movl
movl
mov
imul
sub
sbb
sub
test
ja
xor
sub
ja
xor
addl
xor
add
subl
testl
jne
and
add
xor
incl
cmpl
jle
xor
mov
incl
cmpl
jle
sub
cmp
jb
sub
cmp
jl
sbb
adc
adc
addl
sub
mov
pop
ret
nop
nop
nop
push
mov
add
movl
mov
imull
mov
xor
test
je
or
test
jl
sub
sub
add
add
and
movl
cmpl
jge
add
cmp
jb
sub
testl
jl
xor
sub
and
and
add
movl
mov
add
imul
mov
mov
mov
movl
movl
lea
mov
mov
mov
mov
inc
mov
cltd
idiv
add
xor
mov
mov
add
mov
movl
lea
mov
mov
mov
imull
sub
incl
cmpl
jle
mov
mov
pop
ret
push
mov
push
mov
xor
mov
mov
pop
pop
ret
nop
nop
nop
push
mov
add
xor
mov
xor
mov
movl
movl
mov
cmp
je
movl
movl
mov
and
mov
sub
mov
sub
or
jl
add
sub
test
jl
sub
add
add
xor
addl
sub
sub
adc
add
jb
add
add
test
ja
add
adc
addl
adc
incl
cmpl
jle
incl
cmpl
jle
movl
movl
mov
imul
mov
movl
movl
mov
add
add
movl
mov
sub
mov
add
sub
test
jne
add
addl
test
je
or
add
add
sub
sub
movl
movl
lea
mov
mov
mov
add
mov
mov
and
add
imul
mov
sub
test
jne
sbb
test
jl
add
sub
add
add
mov
pop
ret
nop
nop
push
mov
add
movl
push
pushl
push
call
movl
movl
mov
cmp
jle
pushl
push
push
pushl
call
pushl
push
push
pushl
call
pushl
pushl
pushl
pushl
call
jmp
lea
mov
mov
mov
or
add
imul
mov
movl
cmpl
jl
push
push
push
pushl
call
jmp
movl
lea
mov
lea
mov
mov
mov
mov
imul
mov
cmpl
jle
xor
mov
incl
cmpl
jle
pushl
pushl
call
addl
test
jb
sub
and
sub
xor
mov
incl
cmpl
jle
call
mov
call
movl
movl
lea
mov
mov
mov
mov
inc
mov
cltd
idiv
add
xor
addl
test
jl
sub
addl
sub
movl
movl
pushl
pushl
pushl
push
pushl
call
mov
cmp
jg
addl
sub
cmp
jl
sbb
cmp
je
add
add
or
subl
add
pushl
call
jmp
mov
imull
add
movl
pushl
pushl
pushl
call
call
sub
add
test
ja
add
sub
xor
sub
decl
je
pushl
pushl
pushl
call
jmp
movl
pushl
pushl
pushl
push
call
movl
lea
mov
mov
mov
mov
inc
mov
cltd
idiv
imul
mov
call
sub
testl
jl
subl
add
test
jne
add
or
add
sub
add
movl
movl
mov
sub
imul
mov
movl
pushl
pushl
pushl
push
call
sub
test
ja
add
subl
add
sub
movl
cmpl
jle
movl
pushl
pushl
push
call
jmp
movl
movl
movl
pushl
pushl
pushl
pushl
call
mov
and
add
mov
pushl
push
call
sub
sbbl
cmp
ja
xor
add
test
je
add
sub
add
adcl
mov
mov
pop
ret
nop
nop
nop
push
mov
add
xor
mov
movl
movl
mov
cmp
jg
xor
mov
movl
movl
movl
mov
inc
push
mov
pop
mov
cltd
idiv
mov
incl
cmpl
jle
jmp
movl
movl
lea
mov
lea
mov
mov
mov
mov
sub
mov
add
sub
test
jne
add
sub
adc
add
incl
cmpl
jle
movl
cmpl
jne
xor
mov
movl
cmpl
jl
movl
movl
mov
and
add
mov
and
add
ja
sub
or
test
jne
sub
add
add
xor
sub
addl
add
sub
je
sub
add
add
incl
cmpl
jle
xor
mov
incl
cmpl
jle
movl
movl
mov
imul
mov
add
add
test
jl
sub
cmp
jb
sub
add
sub
movl
movl
movl
mov
and
sub
mov
add
cmp
jb
sub
sub
jne
add
sbb
add
sub
sub
sub
cmp
ja
sbbl
test
jl
add
add
sub
sub
addl
sub
sbb
test
je
add
cmp
jl
sbb
addl
sub
xor
sub
movl
mov
and
imull
sub
sbb
cmp
jb
sbb
subl
xor
test
jl
and
subl
add
mov
pop
ret
nop
nop
push
mov
add
push
call
movl
lea
push
lea
push
call
movl
movl
pushl
pushl
push
pushl
call
pop
mov
movl
movl
mov
and
sub
mov
mov
cmp
jne
lea
mov
mov
mov
mov
or
imul
sub
cmpl
jne
cmpl
je
mov
or
mov
sub
imul
mov
sub
sub
cmp
ja
add
sub
cmp
jl
add
sub
add
adc
or
lea
mov
mov
inc
mov
cltd
idiv
imul
mov
jmp
xor
mov
movl
movl
pushl
pushl
pushl
pushl
pushl
call
push
call
movl
pushl
pushl
pushl
pushl
pushl
call
pushl
pushl
pushl
call
incl
cmpl
jle
call
pushl
pushl
push
pushl
pushl
call
andl
jmp
subl
mov
cmpw
jne
movl
movl
pushl
pushl
push
call
pushl
pushl
push
call
pushl
pushl
push
pushl
call
mov
pop
mov
pop
ret
nop
push
mov
add
sub
add
testl
je
sub
cmp
jb
xor
add
sub
and
add
sub
movl
cmpl
xor
mov
movl
cmpl
je
movl
movl
mov
inc
mov
mov
cltd
idiv
mov
adcl
sub
test
jb
sub
test
ja
sub
xor
add
and
xor
movl
mov
cmp
jg
lea
mov
movl
movl
mov
or
mov
mov
or
imul
mov
movl
mov
and
mov
sub
mov
or
test
ja
sbbl
subl
addl
add
movl
movl
mov
imul
imul
mov
incl
cmpl
jle
xor
mov
add
xor
test
je
sub
test
je
sub
subl
sub
add
add
incl
cmpl
jle
movl
movl
lea
mov
mov
mov
imul
mov
movl
movl
mov
cmp
jge
movl
movl
lea
mov
mov
mov
mov
and
imul
sub
sbb
addl
test
jne
add
sbb
sbb
or
addl
add
or
ja
sub
sub
add
movl
lea
mov
mov
mov
imul
mov
movl
movl
lea
mov
mov
mov
and
mov
inc
mov
cltd
idiv
mov
xor
mov
movl
movl
lea
mov
lea
mov
movl
mov
mov
and
mov
imull
imul
mov
movl
movl
mov
or
mov
or
add
sub
incl
cmpl
jle
add
add
test
ja
add
subl
cmp
ja
sub
sbb
sub
add
or
mov
pop
ret
push
mov
add
xor
mov
movl
movl
mov
sub
mov
cmpl
jle
movl
lea
mov
mov
mov
add
mov
sbbl
sbb
test
jl
xor
xor
test
je
sub
add
add
addl
add
cmpl
incl
cmpl
jle
movl
movl
movl
mov
inc
mov
cltd
idiv
mov
xor
mov
sub
sbb
cmp
jl
sub
sub
test
ja
sub
sub
add
add
addl
xor
cmp
ja
add
sbb
sub
incl
cmpl
jle
movl
movl
movl
mov
inc
push
mov
pop
mov
cltd
idiv
sub
movl
movl
lea
mov
mov
or
mov
add
mov
sbb
add
test
ja
addl
cmp
je
sub
sub
sbb
xor
sub
sub
xor
mov
movl
lea
mov
lea
mov
mov
mov
or
mov
mov
or
add
mov
sub
sub
je
add
add
add
incl
cmpl
jle
xor
mov
cmpl
jle
movl
mov
inc
mov
mov
cltd
idiv
mov
movl
movl
lea
mov
mov
mov
or
mov
sub
mov
movl
movl
mov
imul
sub
incl
cmpl
jle
movl
mov
or
add
mov
sub
add
test
jb
subl
add
cmp
jl
sub
add
add
add
movl
mov
or
mov
sub
add
xor
mov
xor
mov
incl
cmpl
jle
incl
cmpl
jle
movl
cmpl
je
adcl
xor
cmp
ja
addl
and
movl
mov
cmp
lea
mov
mov
mov
add
sub
add
add
sbb
ja
adc
and
test
jl
sub
or
add
and
or
sub
cmp
jl
sub
sbb
cmp
ja
addl
add
sbb
add
sub
add
test
jb
add
add
xor
sub
subl
test
je
xor
test
jb
sbb
sub
and
mov
pop
ret
nop
nop
nop
push
mov
push
movl
mov
or
add
sub
call
pop
pop
ret
nop
push
mov
add
movl
movl
mov
and
imull
add
add
cmp
jl
sub
xor
xor
add
pushl
pushl
push
call
add
xor
cmp
jb
add
sub
sub
movl
pushl
pushl
pushl
call
push
push
push
push
call
adc
adcl
test
je
add
xor
mov
lea
push
call
xor
mov
movl
lea
mov
mov
and
mov
sub
mov
xor
mov
mov
cmp
jl
push
call
jmp
push
pushl
push
call
addl
sub
ja
addl
add
push
call
and
test
jl
sub
sub
je
sub
add
add
call
sub
cmp
jl
add
sub
xor
mov
push
lea
push
call
sub
testl
ja
add
add
sub
mov
or
imul
imul
mov
incl
cmpl
jle
incl
cmpl
jle
push
call
sub
add
je
add
or
jl
add
and
and
sub
incl
cmpl
jle
push
lea
push
call
movl
movl
lea
mov
mov
mov
add
add
mov
or
mov
or
sub
mov
mov
add
mov
movl
movl
mov
inc
push
mov
pop
mov
cltd
idiv
add
push
push
push
call
xor
mov
lea
push
push
call
incl
cmpl
jle
mov
mov
pop
ret
nop
nop
push
mov
push
movl
mov
sub
add
xor
pop
pop
ret
nop
nop
nop
push
mov
add
push
push
push
sub
and
test
ja
sub
adc
sub
sub
test
ja
adcl
sub
test
je
add
add
sub
sub
sbb
movl
cmpl
je
mov
cmp
jne
movl
cmpl
jne
movl
lea
mov
mov
mov
imull
mov
movl
lea
mov
movl
mov
and
mov
mov
and
sub
imul
mov
jmp
movl
mov
and
mov
inc
mov
cltd
idiv
imul
mov
mov
or
imull
sub
jmp
sub
sbb
cmp
jl
sbb
test
jb
add
and
sub
add
sub
movl
cmpl
jge
mov
imull
add
addl
test
jne
addl
subl
mov
mov
movl
cmpl
jle
movl
mov
add
sub
mov
cmp
jle
subl
sub
add
jne
subl
addl
and
cmpl
lea
mov
mov
mov
add
imul
mov
jmp
cmpl
je
xor
mov
movl
lea
mov
mov
or
mov
add
add
lea
mov
mov
mov
add
mov
incl
cmpl
jle
mov
movl
cmpl
jg
push
call
xor
mov
call
movl
movl
call
push
pushl
push
pushl
call
incl
cmpl
jle
xor
mov
movl
lea
push
lea
push
call
movl
lea
mov
lea
mov
mov
mov
mov
sub
mov
mov
sub
mov
movl
call
push
call
cmpl
je
lea
push
push
call
push
push
push
push
call
and
add
test
jb
add
add
test
jl
add
and
adc
movl
movl
pushl
pushl
pushl
pushl
pushl
call
mov
or
sub
add
movl
pushl
push
call
mov
call
sub
cmp
jl
sub
test
je
add
add
add
add
movl
movl
movl
pushl
pushl
pushl
push
call
sub
add
test
jne
or
addl
sub
xor
movl
lea
push
lea
push
call
mov
sub
movl
cmpl
jl
call
call
pushl
pushl
push
pushl
pushl
call
movl
cmpl
jg
cmpl
jl
pushl
pushl
pushl
pushl
pushl
call
mov
add
imul
mov
lea
mov
mov
or
mov
mov
or
add
add
adc
cmp
ja
subl
test
je
addl
addl
or
add
and
jmp
push
lea
push
call
movl
movl
pushl
pushl
pushl
pushl
pushl
call
add
subl
sbb
jne
sbb
test
jb
add
xor
add
add
add
pushl
pushl
pushl
pushl
call
jmp
pushl
pushl
pushl
push
call
pushl
pushl
pushl
push
call
push
call
mov
cmp
jae
lea
push
call
movl
movl
pushl
pushl
pushl
push
call
movl
cmpl
jle
pushl
push
pushl
pushl
call
sub
test
jl
adc
test
je
and
sub
sub
sub
addl
jmp
cmpl
jg
call
jmp
push
pushl
pushl
call
mov
add
add
lea
push
push
call
pushl
pushl
call
mov
movl
pushl
pushl
pushl
call
xor
mov
push
call
movl
cmpl
jne
movl
movl
movl
pushl
push
pushl
pushl
call
lea
mov
movl
mov
mov
mov
and
sub
imul
mov
movl
pushl
push
push
pushl
call
movl
cmpl
jg
movl
push
push
pushl
pushl
push
call
movl
push
push
pushl
pushl
push
call
pushl
pushl
call
push
push
pushl
pushl
push
call
pushl
pushl
call
call
movl
lea
mov
lea
mov
movl
mov
mov
and
mov
inc
mov
cltd
idiv
sub
pushl
pushl
pushl
push
call
sub
sub
testl
jb
sub
add
test
jne
add
add
xor
add
cmpl
jne
movl
lea
mov
mov
mov
add
imul
mov
movl
pushl
push
call
movl
movl
lea
mov
mov
mov
add
imul
mov
cmpl
jne
lea
mov
mov
mov
sub
imul
mov
jmp
pushl
call
movl
lea
mov
mov
mov
add
imul
mov
sub
sub
test
jne
add
add
test
jl
sub
or
sub
sub
addl
pushl
pushl
pushl
call
xor
mov
push
call
incl
cmpl
jle
movl
movl
mov
and
imull
mov
xor
mov
movl
lea
push
lea
push
call
add
add
test
jb
sub
addl
add
cmpl
jle
push
call
sub
andl
test
jne
andl
testl
ja
sub
sub
add
add
sub
pushl
pushl
push
call
movl
lea
mov
mov
mov
mov
and
add
mov
movl
movl
mov
sub
imul
mov
incl
cmpl
jle
movl
pushl
pushl
pushl
pushl
call
add
sub
jb
add
test
je
addl
sbb
xor
sub
sub
movl
lea
mov
mov
and
mov
add
sub
xor
mov
movl
mov
sub
add
incl
cmpl
jle
movl
movl
mov
or
imul
add
movl
mov
and
add
add
cmpl
je
mov
jmp
mov
mov
movl
lea
mov
mov
mov
or
mov
inc
mov
cltd
idiv
imul
mov
movl
lea
mov
mov
mov
mov
inc
mov
cltd
idiv
sub
movl
cmpl
je
push
lea
push
call
sub
addl
cmp
je
sub
sub
add
ja
addl
sub
and
add
sbb
movl
mov
or
mov
or
imul
add
cmpl
jne
mov
and
imul
add
xor
mov
movl
mov
inc
mov
mov
cltd
idiv
imul
mov
mov
or
sub
imul
mov
incl
cmpl
jle
pushl
pushl
pushl
pushl
call
jmp
cmpl
jl
movl
movl
pushl
pushl
pushl
pushl
pushl
call
sub
andl
cmp
ja
addl
add
sub
pushl
pushl
pushl
pushl
pushl
call
call
push
call
jmp
movl
pushl
pushl
push
call
add
add
test
jne
sub
add
add
add
pushl
pushl
push
call
pushl
pushl
pushl
call
xor
mov
movl
lea
push
lea
push
call
incl
cmpl
jle
movl
mov
and
imul
imul
mov
movl
lea
mov
lea
mov
mov
mov
mov
add
sub
call
call
mov
movl
movl
mov
inc
mov
mov
cltd
idiv
add
call
movl
mov
imull
mov
call
movl
mov
cmp
jg
xor
mov
movl
lea
mov
lea
mov
mov
mov
mov
sub
mov
incl
cmpl
jle
jmp
movl
movl
movl
pushl
push
pushl
pushl
pushl
call
movl
mov
or
imul
mov
mov
inc
push
mov
pop
mov
cltd
idiv
sub
movl
pushl
call
movl
movl
pushl
call
pushl
push
pushl
pushl
pushl
call
mov
add
mov
movl
pushl
call
movl
lea
mov
mov
mov
add
add
call
movl
lea
push
lea
push
call
lea
push
push
call
movl
mov
add
add
push
call
lea
push
call
movl
push
pushl
pushl
call
add
add
cmp
ja
sub
sbb
jb
add
and
sub
add
sub
xor
mov
movl
mov
and
sub
imul
mov
incl
cmpl
jle
call
mov
call
movl
movl
pushl
pushl
call
or
add
testl
jb
add
sub
sub
sub
movl
mov
sub
sub
sub
add
testl
je
add
test
ja
sub
add
add
add
pop
pop
pop
mov
pop
ret
nop
nop
push
mov
add
movl
movl
mov
cmp
movl
lea
mov
mov
mov
add
imul
mov
sub
xor
test
je
sub
sbb
cmp
jb
adc
add
sub
and
sbb
cmpl
jl
movl
mov
and
add
mov
adc
add
test
jne
sub
sub
add
jmp
add
test
jne
add
addl
movl
movl
mov
imul
mov
movl
mov
cmp
jle
movl
lea
mov
mov
and
mov
sub
add
movl
lea
mov
movl
mov
mov
mov
and
sub
add
jmp
movl
lea
mov
lea
mov
mov
mov
mov
add
add
cmpl
jle
movl
lea
mov
mov
mov
mov
inc
mov
cltd
idiv
mov
sub
add
testl
jne
xor
add
testl
ja
adc
add
add
add
jmp
add
test
jb
xorl
testl
jne
add
sbb
add
add
add
movl
lea
mov
lea
mov
mov
mov
mov
add
mov
movl
mov
imul
mov
add
test
jl
sbb
subl
sub
movl
movl
mov
and
imul
mov
movl
cmpl
jg
lea
mov
mov
or
mov
inc
mov
cltd
idiv
mov
jmp
movl
movl
lea
mov
mov
mov
sub
sub
movl
cmpl
movl
movl
lea
mov
mov
mov
imul
sub
cmpl
jge
cmpl
jle
lea
mov
mov
and
mov
imull
mov
add
sub
test
ja
and
subl
test
jl
addl
adc
addl
add
sub
lea
mov
mov
mov
sub
mov
jmp
movl
cmpl
jg
sub
add
test
je
sub
add
adc
jne
adc
sub
sub
and
xor
mov
add
sbb
cmp
jb
or
sbbl
cmp
jl
add
and
add
sub
lea
mov
mov
mov
or
mov
and
sub
sub
incl
cmpl
jle
xor
mov
movl
movl
mov
sub
sub
addl
add
cmp
je
add
sub
add
xor
mov
cmpl
jg
mov
or
sub
sub
mov
and
add
add
xor
subl
test
je
xor
cmp
jne
orl
xor
adc
sbb
sbbl
add
sbb
cmp
je
sub
add
sub
je
adc
sub
sub
or
movl
lea
mov
movl
mov
mov
or
imul
mov
cmpl
jg
mov
or
add
sub
jmp
sub
and
cmp
je
sub
testl
jne
sub
add
add
add
sub
adc
lea
mov
mov
mov
imull
add
sub
test
jb
sub
subl
subl
incl
cmpl
jle
incl
cmpl
jle
xor
sub
and
je
sub
and
je
sub
add
add
and
and
mov
pop
ret
nop
nop
push
mov
add
call
push
call
movl
lea
mov
mov
mov
add
sub
xor
mov
incl
cmpl
jle
call
movl
movl
mov
cmp
jle
movl
mov
cmp
jne
xor
mov
lea
push
push
call
incl
cmpl
jle
lea
mov
mov
mov
mov
inc
mov
cltd
idiv
imul
mov
movl
lea
mov
mov
mov
sub
imul
mov
jmp
cmpl
je
movl
lea
mov
mov
mov
mov
inc
mov
cltd
idiv
imul
mov
jmp
lea
mov
mov
mov
mov
or
sub
imul
mov
xor
mov
movl
lea
mov
mov
mov
add
imul
mov
mov
or
sub
sub
movl
pushl
push
pushl
pushl
pushl
call
incl
cmpl
jle
jmp
lea
push
push
call
push
lea
push
call
push
lea
push
call
movl
movl
pushl
pushl
pushl
pushl
call
pushl
pushl
pushl
call
movl
movl
lea
mov
mov
mov
add
imul
mov
pushl
push
pushl
call
or
sub
test
jl
adc
sbb
test
je
add
add
or
or
lea
mov
mov
or
mov
imull
mov
push
lea
push
call
movl
mov
inc
push
mov
pop
mov
cltd
idiv
add
mov
pop
ret
nop
push
mov
add
xor
mov
xor
mov
sub
add
test
jl
add
sub
cmp
je
sub
add
add
add
xor
mov
add
sbb
test
ja
addl
testl
jne
adc
addl
add
and
sub
movl
movl
mov
imull
mov
incl
cmpl
jle
incl
cmpl
jle
incl
cmpl
jle
movl
movl
mov
or
add
mov
sbb
test
ja
and
add
add
add
xor
mov
sub
test
je
adc
sub
sbb
jne
sbb
add
xor
andl
incl
cmpl
jle
add
sbb
add
ja
sub
sub
testl
je
adc
subl
add
sub
add
xorl
xor
mov
incl
cmpl
jle
movl
cmpl
jge
subl
cmp
ja
sub
or
add
movl
cmpl
je
movl
movl
lea
mov
mov
mov
sub
mov
movl
mov
sub
sub
movl
movl
mov
and
add
sub
xor
mov
sub
subl
cmp
ja
add
test
jb
subl
sub
add
xor
mov
xor
mov
movl
movl
lea
mov
movl
mov
or
mov
inc
mov
cltd
idiv
mov
incl
cmpl
jle
incl
cmpl
jle
incl
cmpl
jle
add
cmp
ja
sub
adc
cmp
je
addl
add
subl
and
add
addl
testl
jl
add
sub
test
ja
subl
xor
sub
add
mov
pop
ret
push
mov
add
movl
cmpl
jl
movl
cmpl
jne
movl
movl
mov
cmp
movl
movl
movl
mov
or
add
mov
sub
test
jb
sub
test
jne
subl
andl
add
mov
imul
imul
mov
movl
cmpl
jg
movl
mov
imull
sub
add
test
jb
sub
sub
test
jb
xor
sbb
sub
add
add
mov
pop
ret
nop
nop
nop
mov
push
jmp
xor
push
mov
call
jmp
addb
dec
jmp
sbb
mov
mov
mov
call
lea
sub
movsbl
push
mov
add
mov
push
mov
movl
dec
jmp
mov
xor
pop
mov
pop
subb
inc
ret
jmp
lea
pushl
mov
call
add
sbb
jmp
mov
mov
jmp
mov
mov
xor
jmp
xor
sub
mov
mov
jmp
movb
movb
movb
xor
mov
mov
xor
jmp
mov
mov
cmp
add
push
lea
call
pop
pop
ret
pop
ret
mov
incl
pop
ret
push
push
push
push
push
push
mov
add
push
mov
mov
mov
push
push
push
call
mov
xor
push
push
cmp
mov
pop
pop
ret
jmp
pop
pop
ret
lea
push
call
push
push
ret
push
mov
mov
mov
mov
xorb
decl
je
push
push
push
push
mov
add
mov
add
pushl
mov
cmpb
ja
mov
mov
pop
ret
pop
ret
pushl
mov
subb
or
xor
add
inc
movsb
movb
lea
mov
incl
sub
add
inc
pop
add
mov
rorb
ret
pushl
mov
cmpb
sub
mov
call
jmp
mov
call
test
je
push
lea
mov
xor
mov
mov
mov
je
cmp
lea
cmp
mov
jmp
and
or
mov
mov
mov
je
mov
mov
push
mov
mov
mov
xor
push
call
pop
test
sub
mov
ret
pop
ret
push
push
call
push
call
jmp
mov
call
pop
ret
mov
mov
mov
add
pop
pop
lea
call
pop
ret
xor
push
push
push
push
push
push
push
sub
testb
add
in
push
mov
jmp
mov
add
jmp
mov
add
mov
sbb
call
jmp
cmpb
jne
jmp
inc
subb
push
jmp
pop
pop
ret
jmp
mov
mov
mov
pop
mov
mov
jmp
mov
jmp
mov
add
jmp
mov
add
mov
shr
test
jne
mov
and
movzwl
sub
mov
jmp
jmp
inc
mov
mov
call
inc
adc
mov
jmp
pop
mov
pop
ret
mov
mov
mov
push
pushl
mov
incl
xor
mov
xor
mov
mov
mov
mov
call
xor
pop
pop
mov
add
push
push
push
push
jmp
cmp
je
cmp
jne
mov
call
cmp
mov
lods
xor
push
push
pushl
mov
mov
push
call
ret
push
call
jmp
sub
mov
add
mov
call
pop
pop
ret
jbe
cmp
je
cmp
jl
add
mov
add
jo
add
add
mov
mov
push
mov
mov
cmpb
jne
ret
mov
mov
add
mov
add
cmpl
jne
ret
mov
mov
call
mov
call
mov
mov
call
mov
stc
push
push
call
add
xor
mov
inc
jmp
sub
mov
call
mov
xor
pop
pop
mov
pop
mov
jmp
jae
mov
pop
pop
pop
push
pop
incl
pop
ret
jne
mov
adc
mov
pop
add
lea
mov
call
mov
call
add
add
cmp
jne
mov
test
mov
push
push
mov
pop
ret
jb
mov
add
mov
mov
pop
push
lea
mov
call
pop
mov
push
jb
add
mov
push
call
ret
dec
test
jl
inc
cmp
ja
mov
test
jne
pop
pop
pop
ret
push
mov
mov
mov
call
orl
xor
add
call
test
jne
ret
ret
test
jne
mov
mov
push
push
push
mov
mov
mov
mov
jmp
add
add
jmp
mov
add
add
push
push
call
xor
xor
mov
xor
jmp
mov
mov
sub
pop
xor
mov
jmp
mov
mov
add
mov
xor
jmp
jmp
sub
xor
jmp
pop
pop
pop
pop
pop
pop
ret
add
mov
add
pushf
insl
add
mov
call
pop
pop
mov
mov
mov
sbb
call
test
jne
mov
call
mov
call
or
xor
add
pop
call
pop
or
je
mov
call
ret
mov
mov
dec
call
mov
push
call
mov
mov
xor
push
mov
push
push
mov
mov
pushl
mov
incl
xor
pop
pop
lea
mov
call
xor
push
mov
mov
mov
call
pop
mov
push
pushl
mov
cmpb
je
add
sbb
jmp
xor
jmp
adc
call
sub
sub
lea
pop
add
mov
jmp
sub
mov
jns
add
mov
cmpb
je
cmpl
jl
mov
or
add
ret
push
push
mov
push
lea
mov
mov
mov
mov
cmp
mov
mov
test
je
jbe
mov
mov
inc
inc
cmp
ja
mov
cmp
scas
add
mov
mov
call
mov
call
mov
mov
call
ret
pop
push
sbb
lea
add
add
shlb
add
mov
xor
push
mov
xor
push
add
pop
ret
push
push
mov
mov
test
mov
mov
sbb
pop
add
ret
push
mov
mov
mov
mov
mov
and
shr
or
mov
movsbl
xor
inc
jmp
push
mov
add
push
push
mov
lea
jmp
mov
push
jmp
sub
dec
jne
sbb
mov
push
add
mov
push
mov
sub
mov
mov
movzbl
call
xor
jmp
mov
mov
jmp
push
pushl
mov
incl
jne
xor
mov
or
mov
inc
dec
mov
push
call
mov
test
jne
xor
pop
pop
call
pop
pop
pop
pop
pop
ret
xor
pop
pop
mov
mov
mov
mov
call
jmp
pop
pop
pop
ret
call
mov
xor
mov
call
mov
scas
add
call
ret
test
jne
mov
call
cmpl
or
xor
add
ja
mov
cmp
jne
cmpl
jl
mov
call
ret
call
pop
pop
ret
cmpb
mov
lea
pusha
jae
add
mov
call
pop
push
mov
push
mov
add
inc
clc
mov
add
push
call
pop
xor
cmp
jne
mov
movzwl
mov
jmp
mov
mov
add
mov
call
lea
mov
call
pop
pop
pop
ret
mov
mov
inc
aam
pushf
or
add
add
lea
call
ret
pop
ret
pop
pop
pop
pop
mov
push
lea
call
or
add
add
sbb
mov
add
test
jne
mov
pop
pop
pop
ret
mov
push
mov
push
mov
push
lea
sub
lea
jbe
pop
sub
lea
mov
call
pop
pop
pop
ret
push
push
mov
jmp
mov
testl
jp
add
jne
mov
mov
push
call
mov
test
jne
xor
pop
pop
call
pop
pop
pop
mov
mov
fdivs
mov
mov
mov
cmp
jbe
lea
mov
lea
push
pushl
mov
mov
orl
sbb
add
add
jmp
dec
jne
mov
dec
pop
xor
dec
jne
mov
add
push
add
sub
call
xor
mov
mov
pop
add
mov
jmp
sbb
xor
add
xor
lea
shr
sub
dec
xor
mov
mov
mov
sub
mov
jmp
sub
lea
jmp
movl
lea
xor
push
mov
mov
add
jmp
mov
mov
call
sub
subb
lea
push
sbb
push
addb
xor
add
push
mov
mov
mov
push
mov
adc
pushl
add
mov
push
lea
add
call
sbb
sub
call
jmp
xor
mov
jmp
mov
lea
nop
mov
call
ret
pop
push
pushl
mov
sub
mov
cmp
add
mov
mov
mov
xor
mov
jmp
add
shlb
add
push
call
test
jne
mov
jge
cmp
jge
movl
mov
add
pop
pop
ret
pop
pop
pop
ret
pop
ret
push
push
call
push
call
jmp
mov
mov
call
ret
jne
ret
jae
mov
call
push
push
push
mov
mov
jmp
mov
cmp
je
cmp
mov
mov
mov
incl
mov
movb
incl
add
mov
movb
incl
add
mov
mov
push
mov
movzbl
call
xor
addl
stos
sub
mov
pop
mov
sbb
jmp
mov
mov
lea
mov
mov
pop
pop
pop
pop
ret
call
mov
xor
push
mov
add
pop
ret
fisttpl
xor
add
xor
pop
pop
pop
ret
xor
push
mov
push
push
call
cmpb
jne
pop
mov
sub
mov
inc
pusha
call
mov
call
ret
test
jne
mov
call
cmpl
je
lea
lea
mov
mov
sub
mov
add
pop
pop
pop
ret
pop
pop
pop
pop
pop
pop
pop
pop
ret
push
add
mov
pop
ret
pop
pop
ret
xor
call
jmp
and
pop
ret
jmp
mov
call
sbb
mov
mov
cmpb
jne
cmpb
jne
mov
call
jmp
pop
push
push
push
push
lea
call
jmp
scas
add
pop
add
test
je
mov
call
mov
mov
call
jmp
scas
add
add
add
shr
and
imul
jmp
cmp
and
mov
pop
add
ret
push
pushl
mov
incl
xor
pop
mov
mov
jne
mov
mov
mov
pop
pop
pop
mov
push
lea
call
mov
mov
mov
add
xor
call
mov
call
pop
mov
push
mov
call
mov
call
jmp
mov
lea
jg
add
add
add
add
push
push
mov
mov
xor
pop
pop
pop
mov
mov
mov
mov
incl
sub
add
call
mov
mov
push
mov
mov
mov
test
je
mov
mov
mov
mov
mov
subl
ret
push
sub
mov
push
push
push
mov
mov
mov
mov
mov
call
pop
mov
call
sub
lea
push
mov
push
call
pop
pop
ret
mov
mov
pop
pop
pop
ret
jge
xor
push
push
ret
or
add
and
add
test
je
xor
push
mov
xor
pop
pop
pop
ret
push
push
push
push
mov
push
add
push
test
je
mov
push
mov
call
xor
add
pusha
add
add
mov
mov
mov
mov
call
xchg
movl
add
jmp
push
mov
add
push
push
push
jmp
pop
add
mov
mov
subb
add
mov
movb
push
jmp
push
mov
mov
push
lea
jmp
mov
mov
jmp
mov
mov
push
sub
jmp
shl
sub
sbb
xor
jmp
push
mov
mov
push
mov
push
jmp
dec
or
inc
jmp
call
mov
mov
jmp
movb
push
xor
jmp
adc
add
add
jmp
movl
pop
mov
ret
mov
add
sbb
mov
mov
add
xchg
and
in
pop
pop
pop
ret
mov
ret
push
mov
mov
mov
add
push
push
push
mov
pop
lea
mov
pop
or
cmp
add
push
mov
push
call
shl
push
lea
call
push
call
ret
pop
ret
pop
mov
mov
and
push
call
mov
test
je
xor
push
mov
add
pop
pop
pop
ret
jne
mov
mov
call
or
cmp
add
shr
push
add
cmpb
je
cmp
je
push
call
test
jne
mov
call
xor
jmp
and
cmp
mov
cld
inc
add
je
push
call
mov
call
jmp
pop
ret
pop
ret
xor
pop
ret
mov
jmp
xor
jmp
and
or
add
ret
push
mov
pop
pop
pop
pop
ret
pop
pop
pop
ret
pop
ret
push
push
call
mov
in
ret
xor
pop
pop
pop
pop
ret
incl
mov
movb
incl
pop
ret
pop
ret
sub
cmp
mov
dec
cmp
call
mov
call
cmpl
jne
mov
pop
pop
pop
ret
sub
je
mov
mov
inc
add
sarl
call
mov
cmp
jb
mov
mov
and
adc
mov
call
jmp
mov
call
ret
mov
mov
jno
add
pop
pop
ret
pop
ret
jne
pop
pop
pop
mov
test
jne
xor
pop
pop
pop
ret
pop
pop
pop
ret
push
push
push
push
add
mov
rcrb
pushl
mov
incl
xor
push
push
mov
mov
in
push
pop
pop
ret
jmp
pop
pop
pop
ret
incl
pop
ret
test
jne
mov
call
mov
call
xor
push
push
scas
add
pusha
inc
add
fdivl
ret
mov
call
ret
pop
jmp
pop
pop
ret
mov
push
mov
push
mov
push
mov
mov
or
je
call
mov
test
je
mov
call
mov
call
jmp
pop
pop
pop
ret
je
ret
test
jne
cmp
mov
mov
push
pushl
mov
incl
xor
jmp
mov
cmp
jne
ret
test
je
movl
mov
add
lea
pop
pop
jne
mov
call
cmpl
je
lea
mov
mov
mov
mov
scas
add
ret
call
mov
mov
pop
pop
pop
ret
pop
pop
pop
ret
xor
call
test
jne
mov
mov
mov
mov
call
or
mov
xor
les
add
mov
xor
pop
pop
pop
pop
pop
mov
test
je
mov
mov
mov
add
cmp
shlb
add
sub
incl
add
mov
incl
xor
pop
mov
xor
mov
and
add
rclb
push
push
push
push
push
push
pushl
mov
mov
push
mov
test
jne
pop
pop
pop
mov
pop
ret
xor
lea
ret
push
mov
add
push
call
lea
mov
push
mov
push
mov
push
call
mov
sub
lea
add
add
jmp
mov
test
je
xor
push
mov
push
push
pushl
mov
cmpb
or
xor
add
sbb
add
add
hlt
call
jmp
and
mov
ja
xor
sub
jmp
mov
rep
inc
ret
lea
mov
mov
push
mov
mov
test
jne
ret
pop
pop
pop
ret
push
mov
xor
pop
pop
mov
push
lea
mov
call
mov
mov
lea
mov
push
pushl
mov
incl
sub
movl
add
pop
pop
mov
mov
add
sub
jae
mov
xor
push
mov
push
push
jne
push
pushl
mov
incl
xor
add
pop
add
pushl
mov
incl
sub
add
incl
cmp
je
mov
mov
or
inc
pusha
call
lea
call
mov
call
mov
call
pop
ret
decl
add
add
call
mov
mov
call
jmp
mov
xor
call
mov
push
call
cmpsl
or
ret
add
push
jmp
sbb
mov
add
mov
sbb
call
addb
xor
ret
jmp
sbb
mov
push
xor
call
add
mov
pop
jmp
push
mov
push
jmp
mov
inc
jmp
add
stos
mov
sub
dec
jne
lea
mov
jmp
jns
dec
or
inc
jmp
mov
add
jmp
xor
push
xor
lea
adc
push
add
mov
sbb
push
mov
mov
sub
push
jmp
lea
push
mov
adc
sub
ret
mov
mov
sub
xor
xor
add
rcrb
or
add
cmp
jne
xor
push
push
andb
push
xor
add
add
or
call
sub
mov
nop
mov
jmp
xor
pop
pop
pop
ret
pop
pop
mov
push
call
or
add
add
xor
add
pop
ret
mov
call
mov
call
jmp
mov
test
je
mov
mov
sbb
js
add
jmp
mov
push
push
push
sub
push
push
push
lea
call
mov
mov
test
xor
mov
je
push
call
mov
call
movzwl
pop
ret
call
test
jne
mov
jmp
cltd
idivl
mov
inc
incl
cmp
jb
jmp
mov
lea
jmp
mov
cmp
jne
xor
jmp
mov
lea
shlb
pop
dec
jge
xor
pop
pop
ret
sub
cmpl
jne
ret
mov
lea
ret
mov
movb
incl
mov
movb
incl
add
mov
movb
incl
mov
mov
pushl
mov
cmpb
je
cmp
mov
mov
mov
jmp
pop
pop
ret
call
or
lea
push
mov
push
push
mov
mov
call
xor
push
push
mov
push
mov
test
je
mov
dec
jge
xor
pop
pop
ret
sub
cmpl
jne
ret
push
or
mov
mov
pop
call
lea
mov
mov
call
sbb
lea
jne
cmpb
jne
push
push
push
push
mov
push
push
push
push
mov
mov
ja
mov
mov
call
ret
push
call
pop
mov
mov
mov
test
jne
mov
call
mov
test
je
mov
mov
mov
mov
mov
pop
xor
add
mov
test
je
ret
xor
push
push
pushl
mov
incl
je
mov
dec
sub
mov
hlt
call
mov
call
pop
pop
call
popl
xor
mov
add
ret
call
mov
call
mov
call
iret
or
add
pop
pop
pop
pop
ret
push
pushl
mov
incl
xor
push
push
iret
add
jmp
push
mov
add
jmp
mov
cmp
ja
jmp
lea
sbb
call
xor
mov
pop
sbb
movswl
mov
xor
add
jmp
mov
xor
add
mov
add
and
jns
dec
or
inc
jmp
inc
addl
addl
jmp
mov
xor
mov
jmp
push
mov
push
mov
mov
mov
mov
mov
mov
jmp
add
and
jmp
pop
ret
mov
mov
call
cmp
mov
push
mov
push
mov
mov
mov
mov
cmp
clc
jne
pop
pop
pop
ret
dec
je
mov
call
xor
pop
pop
je
mov
push
ret
lea
mov
lea
pop
add
call
movb
lea
mov
call
mov
push
mov
push
call
mov
mov
add
mov
jmp
mov
push
mov
call
jmp
pop
pop
pop
pop
ret
mov
call
xor
mov
inc
fs
pop
mov
push
pushl
mov
mov
push
lea
call
lea
mov
movb
mov
mov
push
push
pushl
mov
incl
xor
or
xor
mov
jmp
xor
mov
mov
mov
mov
mov
mov
mov
cmp
jae
jmp
sub
mov
add
je
add
and
mov
push
mov
pop
mov
pop
sub
jae
mov
call
mov
mov
test
je
mov
call
jmp
mov
add
mov
mov
add
mov
mov
add
call
test
jne
mov
mov
push
call
jmp
xor
mov
scas
add
mov
push
pushl
mov
mov
xor
push
pop
pop
add
mov
add
call
ret
push
push
push
push
mov
add
push
push
push
mov
mov
ret
mov
call
jne
call
test
je
mov
call
push
mov
adc
add
decl
add
leave
add
add
sbb
jmp
mov
jmp
add
lea
xor
inc
mov
dec
jne
mov
push
xor
dec
sub
push
xor
subl
addl
jmp
lea
mov
mov
sub
add
mov
movl
xor
adc
xor
mov
inc
jmp
mov
pop
sub
xor
mov
add
sub
jmp
mov
mov
add
call
inc
sub
add
pop
subb
lea
jmp
mov
xor
jmp
mov
xor
mov
xor
and
mov
mov
jmp
and
mov
mov
xor
incl
incl
mov
cmp
jb
jmp
add
mov
mov
mov
mov
movb
incl
ret
push
call
ret
call
mov
mov
pop
pop
pop
ret
pop
pop
pop
add
mov
ret
mov
mov
call
mov
call
ret
pop
pop
ret
mov
cmpl
je
mov
mov
ret
je
mov
mov
jmp
cmp
lea
push
in
inc
add
add
mov
mov
pop
ret
mov
mov
jmp
mov
testl
call
mov
lea
subb
add
push
push
push
mov
mov
mov
test
jg
ret
pop
push
push
mov
mov
call
mov
add
lea
inc
loopne
mov
mov
mov
ret
lea
mov
call
push
push
push
mov
mov
mov
mov
call
xor
mov
mov
push
push
mov
push
push
mov
push
call
jmp
cmp
je
mov
repz
jmp
add
dec
jne
mov
sbb
xor
mov
adc
add
mov
mov
sub
movzbl
xor
mov
mov
add
cmp
jne
lea
mov
xor
inc
pop
jmp
mov
lea
adc
push
add
call
mov
mov
adc
pop
inc
mov
add
mov
add
mov
push
sub
jmp
inc
lea
sub
mov
sbb
call
add
add
mov
push
mov
mov
xor
push
mov
mov
call
sub
pop
jmp
mov
mov
mov
sbb
push
movb
adc
pop
mov
xor
mov
jmp
adc
add
lods
mov
jmp
pop
pop
jmp
pop
lea
lea
sbb
ret
jmp
mov
mov
xor
mov
mov
xor
jmp
mov
add
push
push
push
jmp
sub
mov
mov
mov
mov
jmp
pop
leave
call
lea
push
push
push
add
sub
dec
push
sub
call
lea
movb
call
mov
jmp
mov
inc
cmp
jb
jmp
add
mov
mov
mov
mov
mov
mov
sbb
mov
lea
mov
subb
mov
sub
mov
mov
lea
mov
inc
jmp
addl
mov
sub
mov
mov
jmp
lea
mov
add
jmp
add
mov
add
subb
sbb
push
mov
mov
adc
call
inc
lea
add
jmp
addl
xor
push
movl
jmp
sbb
push
movswl
call
mov
pop
mov
sbb
sub
push
xor
call
jmp
mov
mov
shr
jmp
push
dec
lea
push
mov
jmp
dec
xor
sub
xor
mov
jmp
sbb
sub
xor
sub
lods
mov
cmp
jl
adc
jmp
adc
call
mov
mov
test
je
mov
adc
mov
mov
movb
mov
push
movl
mov
push
lea
jmp
mov
add
mov
jmp
movzwl
mov
sub
mov
add
mov
xor
jmp
mov
xor
mov
jmp
mov
xor
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
lea
call
xor
mov
mov
add
mov
lea
sub
call
mov
sbb
jmp
addl
mov
call
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
sbb
push
mov
add
call
add
jmp
mov
call
mov
sub
push
mov
push
jmp
mov
add
mov
mov
add
jmp
sbb
mov
push
jmp
add
push
sub
call
mov
pop
jmp
mov
mov
jmp
mov
mov
xor
jmp
mov
push
dec
mov
push
xor
subb
push
mov
push
mov
mov
push
mov
jmp
push
mov
mov
call
add
pop
mov
xor
mov
mov
xor
push
sub
sub
call
jmp
push
mov
jmp
xor
mov
inc
and
jns
dec
or
inc
jmp
push
add
jmp
add
mov
mov
jmp
add
and
jns
jmp
lea
push
mov
movswl
mov
add
mov
mov
mov
xor
jmp
sub
jmp
mov
mov
jmp
sub
mov
xor
mov
mov
sub
xor
mov
lea
lea
mov
xor
jmp
mov
push
call
add
push
mov
push
push
call
add
jmp
push
movsbl
mov
call
jmp
sub
ror
jmp
pop
pop
pop
mov
pop
ret
mov
mov
add
cmpb
je
push
mov
mov
call
or
xor
add
lods
push
add
ret
jmp
xor
pop
pop
ret
jmp
cmp
je
mov
pop
pop
pop
mov
shl
push
call
jae
scas
add
add
cmpb
je
push
cmpb
je
ret
jb
jmp
cmp
add
mov
push
sbb
call
pop
ret
mov
ret
cmp
ret
push
call
sbb
mov
test
mov
mov
test
je
call
mov
jmp
mov
call
jmp
mov
mov
sub
add
mov
sub
add
mov
mov
mov
xor
jmp
ret
mov
ret
addb
mov
sub
jmp
pop
pop
mov
pop
ret
mov
mov
jmp
pop
pop
pop
pop
pop
mov
push
mov
pop
pop
ret
push
push
push
mov
mov
mov
test
jne
call
or
add
add
add
mov
push
mov
push
mov
mov
mov
test
jle
add
jecxz
scas
add
and
add
push
mov
call
shl
push
mov
call
jmp
mov
call
sub
mov
mov
mov
test
je
mov
mov
movb
incl
add
mov
movb
incl
pop
ret
mov
call
test
mov
mov
jne
lea
sub
jb
sub
jae
mov
sbb
mov
pop
pop
pop
ret
lea
call
pop
jmp
ret
push
lea
call
pop
pop
mov
call
